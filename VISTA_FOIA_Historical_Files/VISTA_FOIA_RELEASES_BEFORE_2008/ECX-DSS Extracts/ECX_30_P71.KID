KIDS Distribution saved on Dec 22, 2004@17:31:09
ECX*3.0*71 and LR*5.2*326 Combined Build
**KIDS**:ECX*3.0*71^LR*5.2*326^

**INSTALL NAME**
ECX*3.0*71
"BLD",4933,0)
ECX*3.0*71^DSS EXTRACTS^0^3041222^y
"BLD",4933,1,0)
^^1^1^3040927^
"BLD",4933,1,1,0)
Decision Support System's Fiscal Year 2005 updates.
"BLD",4933,4,0)
^9.64PA^727.802^15
"BLD",4933,4,727.802,0)
727.802
"BLD",4933,4,727.802,2,0)
^9.641^727.802^1
"BLD",4933,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",4933,4,727.802,2,727.802,1,0)
^9.6411^72^8
"BLD",4933,4,727.802,2,727.802,1,55,0)
PLACEHOLDER
"BLD",4933,4,727.802,2,727.802,1,66,0)
ENROLLMENT PRIORITY
"BLD",4933,4,727.802,2,727.802,1,67,0)
USER ENROLLEE
"BLD",4933,4,727.802,2,727.802,1,68,0)
PATIENT TYPE
"BLD",4933,4,727.802,2,727.802,1,69,0)
CV STATUS ELIGIBILITY
"BLD",4933,4,727.802,2,727.802,1,70,0)
CV ELIGIBILITY END DATE
"BLD",4933,4,727.802,2,727.802,1,71,0)
ENCOUNTER CV
"BLD",4933,4,727.802,2,727.802,1,72,0)
NATIONAL PATIENT RECORD FLAG
"BLD",4933,4,727.802,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.802,224)

"BLD",4933,4,727.805,0)
727.805
"BLD",4933,4,727.805,2,0)
^9.641^727.805^1
"BLD",4933,4,727.805,2,727.805,0)
NURSING EXTRACT  (File-top level)
"BLD",4933,4,727.805,2,727.805,1,0)
^9.6411^24^2
"BLD",4933,4,727.805,2,727.805,1,19,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.805,2,727.805,1,24,0)
DSS IP #
"BLD",4933,4,727.805,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.805,224)

"BLD",4933,4,727.809,0)
727.809
"BLD",4933,4,727.809,2,0)
^9.641^727.809^1
"BLD",4933,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",4933,4,727.809,2,727.809,1,0)
^9.6411^74^10
"BLD",4933,4,727.809,2,727.809,1,23,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.809,2,727.809,1,49,0)
PLACEHOLDER
"BLD",4933,4,727.809,2,727.809,1,67,0)
DSS IP #
"BLD",4933,4,727.809,2,727.809,1,68,0)
ENROLLMENT PRIORITY
"BLD",4933,4,727.809,2,727.809,1,69,0)
USER ENROLLEE
"BLD",4933,4,727.809,2,727.809,1,70,0)
PATIENT TYPE
"BLD",4933,4,727.809,2,727.809,1,71,0)
CV STATUS ELIGIBILITY
"BLD",4933,4,727.809,2,727.809,1,72,0)
CV ELIGIBILITY END DATE
"BLD",4933,4,727.809,2,727.809,1,73,0)
ENCOUNTER CV
"BLD",4933,4,727.809,2,727.809,1,74,0)
NATIONAL PATIENT RECORD FLAG
"BLD",4933,4,727.809,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.809,224)

"BLD",4933,4,727.81,0)
727.81
"BLD",4933,4,727.81,2,0)
^9.641^727.81^1
"BLD",4933,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",4933,4,727.81,2,727.81,1,0)
^9.6411^82^12
"BLD",4933,4,727.81,2,727.81,1,35,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.81,2,727.81,1,58,0)
PLACEHOLDER
"BLD",4933,4,727.81,2,727.81,1,73,0)
DSS IP #
"BLD",4933,4,727.81,2,727.81,1,74,0)
ENROLLMENT PRIORITY
"BLD",4933,4,727.81,2,727.81,1,75,0)
USER ENROLLEE
"BLD",4933,4,727.81,2,727.81,1,76,0)
PATIENT TYPE
"BLD",4933,4,727.81,2,727.81,1,77,0)
CV STATUS ELIGIBILITY
"BLD",4933,4,727.81,2,727.81,1,78,0)
CV ELIGIBILITY END DATE
"BLD",4933,4,727.81,2,727.81,1,79,0)
ENCOUNTER CV
"BLD",4933,4,727.81,2,727.81,1,80,0)
NATIONAL PATIENT RECORD FLAG
"BLD",4933,4,727.81,2,727.81,1,81,0)
RX PATIENT STATUS
"BLD",4933,4,727.81,2,727.81,1,82,0)
NON VA PRESCRIBER
"BLD",4933,4,727.81,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.81,224)

"BLD",4933,4,727.811,0)
727.811
"BLD",4933,4,727.811,2,0)
^9.641^727.811^1
"BLD",4933,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",4933,4,727.811,2,727.811,1,0)
^9.6411^71^12
"BLD",4933,4,727.811,2,727.811,1,38,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.811,2,727.811,1,51,0)
PLACEHOLDER
"BLD",4933,4,727.811,2,727.811,1,62,0)
DSS IP #
"BLD",4933,4,727.811,2,727.811,1,63,0)
ENROLLMENT PRIORITY
"BLD",4933,4,727.811,2,727.811,1,64,0)
USER ENROLLEE
"BLD",4933,4,727.811,2,727.811,1,65,0)
PATIENT TYPE
"BLD",4933,4,727.811,2,727.811,1,66,0)
CV STATUS ELIGIBILITY
"BLD",4933,4,727.811,2,727.811,1,67,0)
CV ELIGIBILITY END DATE
"BLD",4933,4,727.811,2,727.811,1,68,0)
ENCOUNTER CV
"BLD",4933,4,727.811,2,727.811,1,69,0)
ROOM CLEANING TIME
"BLD",4933,4,727.811,2,727.811,1,70,0)
HOLDING AREA TIME
"BLD",4933,4,727.811,2,727.811,1,71,0)
NATIONAL PATIENT RECORD FLAG
"BLD",4933,4,727.811,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.811,224)

"BLD",4933,4,727.812,0)
727.812
"BLD",4933,4,727.812,2,0)
^9.641^727.812^1
"BLD",4933,4,727.812,2,727.812,0)
MENTAL HEALTH EXTRACT  (File-top level)
"BLD",4933,4,727.812,2,727.812,1,0)
^9.6411^58^12
"BLD",4933,4,727.812,2,727.812,1,9,0)
PLACEHOLDER
"BLD",4933,4,727.812,2,727.812,1,39,0)
PLACEHOLDER
"BLD",4933,4,727.812,2,727.812,1,46,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.812,2,727.812,1,50,0)
DSS IP #
"BLD",4933,4,727.812,2,727.812,1,51,0)
ENROLLMENT PRIORITY
"BLD",4933,4,727.812,2,727.812,1,52,0)
USER ENROLLEE
"BLD",4933,4,727.812,2,727.812,1,53,0)
DIVISION
"BLD",4933,4,727.812,2,727.812,1,54,0)
PATIENT TYPE
"BLD",4933,4,727.812,2,727.812,1,55,0)
CV STATUS ELIGIBILITY
"BLD",4933,4,727.812,2,727.812,1,56,0)
CV ELIGIBILITY END DATE
"BLD",4933,4,727.812,2,727.812,1,57,0)
ENCOUNTER CV
"BLD",4933,4,727.812,2,727.812,1,58,0)
NATIONAL PATIENT RECORD FLAG
"BLD",4933,4,727.812,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.812,224)

"BLD",4933,4,727.813,0)
727.813
"BLD",4933,4,727.813,2,0)
^9.641^727.813^1
"BLD",4933,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",4933,4,727.813,2,727.813,1,0)
^9.6411^37^3
"BLD",4933,4,727.813,2,727.813,1,23,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.813,2,727.813,1,36,0)
DSS IP #
"BLD",4933,4,727.813,2,727.813,1,37,0)
ORDERING PROVIDER PERSON CLASS
"BLD",4933,4,727.813,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.813,224)

"BLD",4933,4,727.814,0)
727.814
"BLD",4933,4,727.814,2,0)
^9.641^727.814^1
"BLD",4933,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",4933,4,727.814,2,727.814,1,0)
^9.6411^38^3
"BLD",4933,4,727.814,2,727.814,1,24,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.814,2,727.814,1,37,0)
DSS IP #
"BLD",4933,4,727.814,2,727.814,1,38,0)
ORDERING PROVIDER PERSON CLASS
"BLD",4933,4,727.814,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.814,224)

"BLD",4933,4,727.815,0)
727.815
"BLD",4933,4,727.815,2,0)
^9.641^727.815^1
"BLD",4933,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",4933,4,727.815,2,727.815,1,0)
^9.6411^82^10
"BLD",4933,4,727.815,2,727.815,1,43,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.815,2,727.815,1,58,0)
PLACEHOLDER
"BLD",4933,4,727.815,2,727.815,1,75,0)
DSS IP #
"BLD",4933,4,727.815,2,727.815,1,76,0)
ENROLLMENT PRIORITY
"BLD",4933,4,727.815,2,727.815,1,77,0)
USER ENROLLEE
"BLD",4933,4,727.815,2,727.815,1,78,0)
PATIENT TYPE
"BLD",4933,4,727.815,2,727.815,1,79,0)
CV STATUS ELIGIBILITY
"BLD",4933,4,727.815,2,727.815,1,80,0)
CV ELIGIBILITY END DATE
"BLD",4933,4,727.815,2,727.815,1,81,0)
ENCOUNTER CV
"BLD",4933,4,727.815,2,727.815,1,82,0)
NATIONAL PATIENT RECORD FLAG
"BLD",4933,4,727.815,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.815,224)

"BLD",4933,4,727.819,0)
727.819
"BLD",4933,4,727.819,2,0)
^9.641^727.819^1
"BLD",4933,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",4933,4,727.819,2,727.819,1,0)
^9.6411^79^10
"BLD",4933,4,727.819,2,727.819,1,28,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.819,2,727.819,1,61,0)
PLACEHOLDER
"BLD",4933,4,727.819,2,727.819,1,72,0)
DSS IP #
"BLD",4933,4,727.819,2,727.819,1,73,0)
ENROLLMENT PRIORITY
"BLD",4933,4,727.819,2,727.819,1,74,0)
USER ENROLLEE
"BLD",4933,4,727.819,2,727.819,1,75,0)
PATIENT TYPE
"BLD",4933,4,727.819,2,727.819,1,76,0)
CV STATUS ELIGIBILITY
"BLD",4933,4,727.819,2,727.819,1,77,0)
CV ELIGIBILITY END DATE
"BLD",4933,4,727.819,2,727.819,1,78,0)
ENCOUNTER CV
"BLD",4933,4,727.819,2,727.819,1,79,0)
NATIONAL PATIENT RECORD FLAG
"BLD",4933,4,727.819,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.819,224)

"BLD",4933,4,727.824,0)
727.824
"BLD",4933,4,727.824,2,0)
^9.641^727.824^1
"BLD",4933,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",4933,4,727.824,2,727.824,1,0)
^9.6411^29^2
"BLD",4933,4,727.824,2,727.824,1,28,0)
ORDERING PROVIDER
"BLD",4933,4,727.824,2,727.824,1,29,0)
ORDERING PROVIDER PERSON CLASS
"BLD",4933,4,727.824,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.824,224)

"BLD",4933,4,727.825,0)
727.825
"BLD",4933,4,727.825,2,0)
^9.641^727.825^1
"BLD",4933,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",4933,4,727.825,2,727.825,1,0)
^9.6411^82^10
"BLD",4933,4,727.825,2,727.825,1,43,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.825,2,727.825,1,58,0)
PLACEHOLDER
"BLD",4933,4,727.825,2,727.825,1,75,0)
DSS IP #
"BLD",4933,4,727.825,2,727.825,1,76,0)
ENROLLMENT PRIORITY
"BLD",4933,4,727.825,2,727.825,1,77,0)
USER ENROLLEE
"BLD",4933,4,727.825,2,727.825,1,78,0)
PATIENT TYPE
"BLD",4933,4,727.825,2,727.825,1,79,0)
CV STATUS ELIGIBILITY
"BLD",4933,4,727.825,2,727.825,1,80,0)
CV ELIGIBILITY END DATE
"BLD",4933,4,727.825,2,727.825,1,81,0)
ENCOUNTER CV
"BLD",4933,4,727.825,2,727.825,1,82,0)
NATIONAL PATIENT RECORD FLAG
"BLD",4933,4,727.825,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.825,224)

"BLD",4933,4,727.826,0)
727.826
"BLD",4933,4,727.826,2,0)
^9.641^727.826^1
"BLD",4933,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",4933,4,727.826,2,727.826,1,0)
^9.6411^74^10
"BLD",4933,4,727.826,2,727.826,1,39,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.826,2,727.826,1,56,0)
PLACEHOLDER
"BLD",4933,4,727.826,2,727.826,1,67,0)
DSS IP #
"BLD",4933,4,727.826,2,727.826,1,68,0)
ENROLLMENT PRIORITY
"BLD",4933,4,727.826,2,727.826,1,69,0)
USER ENROLLEE
"BLD",4933,4,727.826,2,727.826,1,70,0)
PATIENT TYPE
"BLD",4933,4,727.826,2,727.826,1,71,0)
CV STATUS ELIGIBILITY
"BLD",4933,4,727.826,2,727.826,1,72,0)
CV ELIGIBILITY END DATE
"BLD",4933,4,727.826,2,727.826,1,73,0)
ENCOUNTER CV
"BLD",4933,4,727.826,2,727.826,1,74,0)
NATIONAL PATIENT RECORD FLAG
"BLD",4933,4,727.826,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.826,224)

"BLD",4933,4,727.827,0)
727.827
"BLD",4933,4,727.827,2,0)
^9.641^727.827^1
"BLD",4933,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",4933,4,727.827,2,727.827,1,0)
^9.6411^83^10
"BLD",4933,4,727.827,2,727.827,1,43,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,727.827,2,727.827,1,62,0)
PLACEHOLDER
"BLD",4933,4,727.827,2,727.827,1,76,0)
DSS IP #
"BLD",4933,4,727.827,2,727.827,1,77,0)
ENROLLMENT PRIORITY
"BLD",4933,4,727.827,2,727.827,1,78,0)
USER ENROLLEE
"BLD",4933,4,727.827,2,727.827,1,79,0)
PATIENT TYPE
"BLD",4933,4,727.827,2,727.827,1,80,0)
CV STATUS ELIGIBILITY
"BLD",4933,4,727.827,2,727.827,1,81,0)
CV ELIGIBILITY END DATE
"BLD",4933,4,727.827,2,727.827,1,82,0)
ENCOUNTER CV
"BLD",4933,4,727.827,2,727.827,1,83,0)
NATIONAL PATIENT RECORD FLAG
"BLD",4933,4,727.827,222)
y^y^p^^^^n^^n
"BLD",4933,4,727.827,224)

"BLD",4933,4,728.44,0)
728.44
"BLD",4933,4,728.44,2,0)
^9.641^728.44^1
"BLD",4933,4,728.44,2,728.44,0)
CLINICS AND STOP CODES  (File-top level)
"BLD",4933,4,728.44,2,728.44,1,0)
^9.6411^10^2
"BLD",4933,4,728.44,2,728.44,1,5,0)
ACTION TO SEND
"BLD",4933,4,728.44,2,728.44,1,10,0)
DSS PRODUCT DEPARTMENT
"BLD",4933,4,728.44,222)
y^y^p^^^^n^^n
"BLD",4933,4,728.44,224)

"BLD",4933,4,"APDD",727.802,727.802)

"BLD",4933,4,"APDD",727.802,727.802,55)

"BLD",4933,4,"APDD",727.802,727.802,66)

"BLD",4933,4,"APDD",727.802,727.802,67)

"BLD",4933,4,"APDD",727.802,727.802,68)

"BLD",4933,4,"APDD",727.802,727.802,69)

"BLD",4933,4,"APDD",727.802,727.802,70)

"BLD",4933,4,"APDD",727.802,727.802,71)

"BLD",4933,4,"APDD",727.802,727.802,72)

"BLD",4933,4,"APDD",727.805,727.805)

"BLD",4933,4,"APDD",727.805,727.805,19)

"BLD",4933,4,"APDD",727.805,727.805,24)

"BLD",4933,4,"APDD",727.809,727.809)

"BLD",4933,4,"APDD",727.809,727.809,23)

"BLD",4933,4,"APDD",727.809,727.809,49)

"BLD",4933,4,"APDD",727.809,727.809,67)

"BLD",4933,4,"APDD",727.809,727.809,68)

"BLD",4933,4,"APDD",727.809,727.809,69)

"BLD",4933,4,"APDD",727.809,727.809,70)

"BLD",4933,4,"APDD",727.809,727.809,71)

"BLD",4933,4,"APDD",727.809,727.809,72)

"BLD",4933,4,"APDD",727.809,727.809,73)

"BLD",4933,4,"APDD",727.809,727.809,74)

"BLD",4933,4,"APDD",727.81,727.81)

"BLD",4933,4,"APDD",727.81,727.81,35)

"BLD",4933,4,"APDD",727.81,727.81,58)

"BLD",4933,4,"APDD",727.81,727.81,73)

"BLD",4933,4,"APDD",727.81,727.81,74)

"BLD",4933,4,"APDD",727.81,727.81,75)

"BLD",4933,4,"APDD",727.81,727.81,76)

"BLD",4933,4,"APDD",727.81,727.81,77)

"BLD",4933,4,"APDD",727.81,727.81,78)

"BLD",4933,4,"APDD",727.81,727.81,79)

"BLD",4933,4,"APDD",727.81,727.81,80)

"BLD",4933,4,"APDD",727.81,727.81,81)

"BLD",4933,4,"APDD",727.81,727.81,82)

"BLD",4933,4,"APDD",727.811,727.811)

"BLD",4933,4,"APDD",727.811,727.811,38)

"BLD",4933,4,"APDD",727.811,727.811,51)

"BLD",4933,4,"APDD",727.811,727.811,62)

"BLD",4933,4,"APDD",727.811,727.811,63)

"BLD",4933,4,"APDD",727.811,727.811,64)

"BLD",4933,4,"APDD",727.811,727.811,65)

"BLD",4933,4,"APDD",727.811,727.811,66)

"BLD",4933,4,"APDD",727.811,727.811,67)

"BLD",4933,4,"APDD",727.811,727.811,68)

"BLD",4933,4,"APDD",727.811,727.811,69)

"BLD",4933,4,"APDD",727.811,727.811,70)

"BLD",4933,4,"APDD",727.811,727.811,71)

"BLD",4933,4,"APDD",727.812,727.812)

"BLD",4933,4,"APDD",727.812,727.812,9)

"BLD",4933,4,"APDD",727.812,727.812,39)

"BLD",4933,4,"APDD",727.812,727.812,46)

"BLD",4933,4,"APDD",727.812,727.812,50)

"BLD",4933,4,"APDD",727.812,727.812,51)

"BLD",4933,4,"APDD",727.812,727.812,52)

"BLD",4933,4,"APDD",727.812,727.812,53)

"BLD",4933,4,"APDD",727.812,727.812,54)

"BLD",4933,4,"APDD",727.812,727.812,55)

"BLD",4933,4,"APDD",727.812,727.812,56)

"BLD",4933,4,"APDD",727.812,727.812,57)

"BLD",4933,4,"APDD",727.812,727.812,58)

"BLD",4933,4,"APDD",727.813,727.813)

"BLD",4933,4,"APDD",727.813,727.813,23)

"BLD",4933,4,"APDD",727.813,727.813,36)

"BLD",4933,4,"APDD",727.813,727.813,37)

"BLD",4933,4,"APDD",727.814,727.814)

"BLD",4933,4,"APDD",727.814,727.814,24)

"BLD",4933,4,"APDD",727.814,727.814,37)

"BLD",4933,4,"APDD",727.814,727.814,38)

"BLD",4933,4,"APDD",727.815,727.815)

"BLD",4933,4,"APDD",727.815,727.815,43)

"BLD",4933,4,"APDD",727.815,727.815,58)

"BLD",4933,4,"APDD",727.815,727.815,75)

"BLD",4933,4,"APDD",727.815,727.815,76)

"BLD",4933,4,"APDD",727.815,727.815,77)

"BLD",4933,4,"APDD",727.815,727.815,78)

"BLD",4933,4,"APDD",727.815,727.815,79)

"BLD",4933,4,"APDD",727.815,727.815,80)

"BLD",4933,4,"APDD",727.815,727.815,81)

"BLD",4933,4,"APDD",727.815,727.815,82)

"BLD",4933,4,"APDD",727.819,727.819)

"BLD",4933,4,"APDD",727.819,727.819,28)

"BLD",4933,4,"APDD",727.819,727.819,61)

"BLD",4933,4,"APDD",727.819,727.819,72)

"BLD",4933,4,"APDD",727.819,727.819,73)

"BLD",4933,4,"APDD",727.819,727.819,74)

"BLD",4933,4,"APDD",727.819,727.819,75)

"BLD",4933,4,"APDD",727.819,727.819,76)

"BLD",4933,4,"APDD",727.819,727.819,77)

"BLD",4933,4,"APDD",727.819,727.819,78)

"BLD",4933,4,"APDD",727.819,727.819,79)

"BLD",4933,4,"APDD",727.824,727.824)

"BLD",4933,4,"APDD",727.824,727.824,28)

"BLD",4933,4,"APDD",727.824,727.824,29)

"BLD",4933,4,"APDD",727.825,727.825)

"BLD",4933,4,"APDD",727.825,727.825,43)

"BLD",4933,4,"APDD",727.825,727.825,58)

"BLD",4933,4,"APDD",727.825,727.825,75)

"BLD",4933,4,"APDD",727.825,727.825,76)

"BLD",4933,4,"APDD",727.825,727.825,77)

"BLD",4933,4,"APDD",727.825,727.825,78)

"BLD",4933,4,"APDD",727.825,727.825,79)

"BLD",4933,4,"APDD",727.825,727.825,80)

"BLD",4933,4,"APDD",727.825,727.825,81)

"BLD",4933,4,"APDD",727.825,727.825,82)

"BLD",4933,4,"APDD",727.826,727.826)

"BLD",4933,4,"APDD",727.826,727.826,39)

"BLD",4933,4,"APDD",727.826,727.826,56)

"BLD",4933,4,"APDD",727.826,727.826,67)

"BLD",4933,4,"APDD",727.826,727.826,68)

"BLD",4933,4,"APDD",727.826,727.826,69)

"BLD",4933,4,"APDD",727.826,727.826,70)

"BLD",4933,4,"APDD",727.826,727.826,71)

"BLD",4933,4,"APDD",727.826,727.826,72)

"BLD",4933,4,"APDD",727.826,727.826,73)

"BLD",4933,4,"APDD",727.826,727.826,74)

"BLD",4933,4,"APDD",727.827,727.827)

"BLD",4933,4,"APDD",727.827,727.827,43)

"BLD",4933,4,"APDD",727.827,727.827,62)

"BLD",4933,4,"APDD",727.827,727.827,76)

"BLD",4933,4,"APDD",727.827,727.827,77)

"BLD",4933,4,"APDD",727.827,727.827,78)

"BLD",4933,4,"APDD",727.827,727.827,79)

"BLD",4933,4,"APDD",727.827,727.827,80)

"BLD",4933,4,"APDD",727.827,727.827,81)

"BLD",4933,4,"APDD",727.827,727.827,82)

"BLD",4933,4,"APDD",727.827,727.827,83)

"BLD",4933,4,"APDD",728.44,728.44)

"BLD",4933,4,"APDD",728.44,728.44,5)

"BLD",4933,4,"APDD",728.44,728.44,10)

"BLD",4933,4,"B",727.802,727.802)

"BLD",4933,4,"B",727.805,727.805)

"BLD",4933,4,"B",727.809,727.809)

"BLD",4933,4,"B",727.81,727.81)

"BLD",4933,4,"B",727.811,727.811)

"BLD",4933,4,"B",727.812,727.812)

"BLD",4933,4,"B",727.813,727.813)

"BLD",4933,4,"B",727.814,727.814)

"BLD",4933,4,"B",727.815,727.815)

"BLD",4933,4,"B",727.819,727.819)

"BLD",4933,4,"B",727.824,727.824)

"BLD",4933,4,"B",727.825,727.825)

"BLD",4933,4,"B",727.826,727.826)

"BLD",4933,4,"B",727.827,727.827)

"BLD",4933,4,"B",728.44,728.44)

"BLD",4933,"ABPKG")
n
"BLD",4933,"INID")
^n
"BLD",4933,"INIT")
EN^ECX3P71
"BLD",4933,"KRN",0)
^9.67PA^8989.52^19
"BLD",4933,"KRN",.4,0)
.4
"BLD",4933,"KRN",.4,"NM",0)
^9.68A^2^2
"BLD",4933,"KRN",.4,"NM",1,0)
ECX LOG    FILE #727^727^0
"BLD",4933,"KRN",.4,"NM",2,0)
ECX LOG HEADER    FILE #727^727^0
"BLD",4933,"KRN",.4,"NM","B","ECX LOG    FILE #727",1)

"BLD",4933,"KRN",.4,"NM","B","ECX LOG HEADER    FILE #727",2)

"BLD",4933,"KRN",.401,0)
.401
"BLD",4933,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",4933,"KRN",.402,0)
.402
"BLD",4933,"KRN",.403,0)
.403
"BLD",4933,"KRN",.5,0)
.5
"BLD",4933,"KRN",.84,0)
.84
"BLD",4933,"KRN",3.6,0)
3.6
"BLD",4933,"KRN",3.8,0)
3.8
"BLD",4933,"KRN",9.2,0)
9.2
"BLD",4933,"KRN",9.8,0)
9.8
"BLD",4933,"KRN",9.8,"NM",0)
^9.68A^27^25
"BLD",4933,"KRN",9.8,"NM",1,0)
ECXSCXN^^0^B52189244
"BLD",4933,"KRN",9.8,"NM",2,0)
ECXUTL2^^0^B65648321
"BLD",4933,"KRN",9.8,"NM",3,0)
ECXOPRX^^0^B69355286
"BLD",4933,"KRN",9.8,"NM",4,0)
ECXPRO^^0^B26189015
"BLD",4933,"KRN",9.8,"NM",5,0)
ECXPIVDN^^0^B65060260
"BLD",4933,"KRN",9.8,"NM",6,0)
ECXADM^^0^B28693799
"BLD",4933,"KRN",9.8,"NM",7,0)
ECXSCX2^^0^B7727803
"BLD",4933,"KRN",9.8,"NM",8,0)
ECXMTL^^0^B31171168
"BLD",4933,"KRN",9.8,"NM",9,0)
ECXUD^^0^B43554889
"BLD",4933,"KRN",9.8,"NM",10,0)
ECXQSR^^0^B56202539
"BLD",4933,"KRN",9.8,"NM",11,0)
ECXEC^^0^B33547078
"BLD",4933,"KRN",9.8,"NM",12,0)
ECXUTL5^^0^B17103643
"BLD",4933,"KRN",9.8,"NM",13,0)
ECXUSUR^^0^B27392923
"BLD",4933,"KRN",9.8,"NM",14,0)
ECXUSUR1^^0^B12781030
"BLD",4933,"KRN",9.8,"NM",16,0)
ECXPROCT^^0^B21026328
"BLD",4933,"KRN",9.8,"NM",17,0)
ECXLABR^^0^B19769512
"BLD",4933,"KRN",9.8,"NM",18,0)
ECXRAD^^0^B36987201
"BLD",4933,"KRN",9.8,"NM",19,0)
ECXLABN^^0^B25403120
"BLD",4933,"KRN",9.8,"NM",20,0)
ECXSURG^^0^B48062633
"BLD",4933,"KRN",9.8,"NM",21,0)
ECXTREX^^0^B11316274
"BLD",4933,"KRN",9.8,"NM",22,0)
ECX3P71^^0^B7185614
"BLD",4933,"KRN",9.8,"NM",24,0)
ECXSCLD^^0^B38077981
"BLD",4933,"KRN",9.8,"NM",25,0)
ECXSCXN1^^0^B9561025
"BLD",4933,"KRN",9.8,"NM",26,0)
ECXNURS^^0^B41257332
"BLD",4933,"KRN",9.8,"NM",27,0)
ECXTRANS^^0^B59690762
"BLD",4933,"KRN",9.8,"NM","B","ECX3P71",22)

"BLD",4933,"KRN",9.8,"NM","B","ECXADM",6)

"BLD",4933,"KRN",9.8,"NM","B","ECXEC",11)

"BLD",4933,"KRN",9.8,"NM","B","ECXLABN",19)

"BLD",4933,"KRN",9.8,"NM","B","ECXLABR",17)

"BLD",4933,"KRN",9.8,"NM","B","ECXMTL",8)

"BLD",4933,"KRN",9.8,"NM","B","ECXNURS",26)

"BLD",4933,"KRN",9.8,"NM","B","ECXOPRX",3)

"BLD",4933,"KRN",9.8,"NM","B","ECXPIVDN",5)

"BLD",4933,"KRN",9.8,"NM","B","ECXPRO",4)

"BLD",4933,"KRN",9.8,"NM","B","ECXPROCT",16)

"BLD",4933,"KRN",9.8,"NM","B","ECXQSR",10)

"BLD",4933,"KRN",9.8,"NM","B","ECXRAD",18)

"BLD",4933,"KRN",9.8,"NM","B","ECXSCLD",24)

"BLD",4933,"KRN",9.8,"NM","B","ECXSCX2",7)

"BLD",4933,"KRN",9.8,"NM","B","ECXSCXN",1)

"BLD",4933,"KRN",9.8,"NM","B","ECXSCXN1",25)

"BLD",4933,"KRN",9.8,"NM","B","ECXSURG",20)

"BLD",4933,"KRN",9.8,"NM","B","ECXTRANS",27)

"BLD",4933,"KRN",9.8,"NM","B","ECXTREX",21)

"BLD",4933,"KRN",9.8,"NM","B","ECXUD",9)

"BLD",4933,"KRN",9.8,"NM","B","ECXUSUR",13)

"BLD",4933,"KRN",9.8,"NM","B","ECXUSUR1",14)

"BLD",4933,"KRN",9.8,"NM","B","ECXUTL2",2)

"BLD",4933,"KRN",9.8,"NM","B","ECXUTL5",12)

"BLD",4933,"KRN",19,0)
19
"BLD",4933,"KRN",19,"NM",0)
^9.68A^55^55
"BLD",4933,"KRN",19,"NM",1,0)
ECX MAINTENANCE^^2
"BLD",4933,"KRN",19,"NM",2,0)
ECX SUR VOL REPORT^^0
"BLD",4933,"KRN",19,"NM",3,0)
ECX PRO COST REPORT^^0
"BLD",4933,"KRN",19,"NM",4,0)
ECXSCLOAD^^0
"BLD",4933,"KRN",19,"NM",5,0)
ECXSCEDIT^^0
"BLD",4933,"KRN",19,"NM",6,0)
ECXSCAPPROV^^0
"BLD",4933,"KRN",19,"NM",7,0)
ECX IV DIV EDIT^^0
"BLD",4933,"KRN",19,"NM",8,0)
ECXLABRS^^0
"BLD",4933,"KRN",19,"NM",9,0)
ECX LAB RESULTS TRANS EDIT^^0
"BLD",4933,"KRN",19,"NM",10,0)
ECXMGR^^0
"BLD",4933,"KRN",19,"NM",11,0)
ECXMENU^^2
"BLD",4933,"KRN",19,"NM",12,0)
ECX SAS AUDITS^^2
"BLD",4933,"KRN",19,"NM",13,0)
ECX SOURCE AUDITS^^2
"BLD",4933,"KRN",19,"NM",14,0)
ECX TRANSMISSION^^2
"BLD",4933,"KRN",19,"NM",15,0)
ECX SAS DENTAL^^0
"BLD",4933,"KRN",19,"NM",16,0)
ECX SAS PRESCRIPTION^^0
"BLD",4933,"KRN",19,"NM",17,0)
ECX SAS RADIOLOGY^^0
"BLD",4933,"KRN",19,"NM",18,0)
ECX SAS SURGERY^^0
"BLD",4933,"KRN",19,"NM",19,0)
ECX ADM SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",20,0)
ECX DEN SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",21,0)
ECX ECS SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",22,0)
ECX LAB SOURCE AUDIT (PATIENT)^^0
"BLD",4933,"KRN",19,"NM",23,0)
ECX MOV SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",24,0)
ECX MTL SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",25,0)
ECX NUR SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",26,0)
ECX PAI SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",27,0)
ECX PHA SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",28,0)
ECX QSR SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",29,0)
ECX PRO SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",30,0)
ECX RAD SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",31,0)
ECX SUR SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",32,0)
ECX TRT SOURCE AUDIT^^0
"BLD",4933,"KRN",19,"NM",33,0)
ECXPURG^^0
"BLD",4933,"KRN",19,"NM",34,0)
ECX EXTRACT LOG REVIEW^^0
"BLD",4933,"KRN",19,"NM",35,0)
ECX EXTRACT LOG SUMMARY^^0
"BLD",4933,"KRN",19,"NM",36,0)
ECXTRANS^^0
"BLD",4933,"KRN",19,"NM",37,0)
ECXADM^^0
"BLD",4933,"KRN",19,"NM",38,0)
ECXSCX^^0
"BLD",4933,"KRN",19,"NM",39,0)
ECXDENT^^0
"BLD",4933,"KRN",19,"NM",40,0)
ECXEC^^0
"BLD",4933,"KRN",19,"NM",41,0)
ECXIV^^0
"BLD",4933,"KRN",19,"NM",42,0)
ECXLAB^^0
"BLD",4933,"KRN",19,"NM",43,0)
ECXLABR^^0
"BLD",4933,"KRN",19,"NM",44,0)
ECXNURS^^0
"BLD",4933,"KRN",19,"NM",45,0)
ECXMTL^^0
"BLD",4933,"KRN",19,"NM",46,0)
ECXPAI^^0
"BLD",4933,"KRN",19,"NM",47,0)
ECXPSO^^0
"BLD",4933,"KRN",19,"NM",48,0)
ECXQSR^^0
"BLD",4933,"KRN",19,"NM",49,0)
ECXPRO^^0
"BLD",4933,"KRN",19,"NM",50,0)
ECXRAD^^0
"BLD",4933,"KRN",19,"NM",51,0)
ECXSURG^^0
"BLD",4933,"KRN",19,"NM",52,0)
ECXMOV^^0
"BLD",4933,"KRN",19,"NM",53,0)
ECXTRT^^0
"BLD",4933,"KRN",19,"NM",54,0)
ECXUD^^0
"BLD",4933,"KRN",19,"NM",55,0)
ECX FISCAL YEAR EXTRACT^^0
"BLD",4933,"KRN",19,"NM","B","ECX ADM SOURCE AUDIT",19)

"BLD",4933,"KRN",19,"NM","B","ECX DEN SOURCE AUDIT",20)

"BLD",4933,"KRN",19,"NM","B","ECX ECS SOURCE AUDIT",21)

"BLD",4933,"KRN",19,"NM","B","ECX EXTRACT LOG REVIEW",34)

"BLD",4933,"KRN",19,"NM","B","ECX EXTRACT LOG SUMMARY",35)

"BLD",4933,"KRN",19,"NM","B","ECX FISCAL YEAR EXTRACT",55)

"BLD",4933,"KRN",19,"NM","B","ECX IV DIV EDIT",7)

"BLD",4933,"KRN",19,"NM","B","ECX LAB RESULTS TRANS EDIT",9)

"BLD",4933,"KRN",19,"NM","B","ECX LAB SOURCE AUDIT (PATIENT)",22)

"BLD",4933,"KRN",19,"NM","B","ECX MAINTENANCE",1)

"BLD",4933,"KRN",19,"NM","B","ECX MOV SOURCE AUDIT",23)

"BLD",4933,"KRN",19,"NM","B","ECX MTL SOURCE AUDIT",24)

"BLD",4933,"KRN",19,"NM","B","ECX NUR SOURCE AUDIT",25)

"BLD",4933,"KRN",19,"NM","B","ECX PAI SOURCE AUDIT",26)

"BLD",4933,"KRN",19,"NM","B","ECX PHA SOURCE AUDIT",27)

"BLD",4933,"KRN",19,"NM","B","ECX PRO COST REPORT",3)

"BLD",4933,"KRN",19,"NM","B","ECX PRO SOURCE AUDIT",29)

"BLD",4933,"KRN",19,"NM","B","ECX QSR SOURCE AUDIT",28)

"BLD",4933,"KRN",19,"NM","B","ECX RAD SOURCE AUDIT",30)

"BLD",4933,"KRN",19,"NM","B","ECX SAS AUDITS",12)

"BLD",4933,"KRN",19,"NM","B","ECX SAS DENTAL",15)

"BLD",4933,"KRN",19,"NM","B","ECX SAS PRESCRIPTION",16)

"BLD",4933,"KRN",19,"NM","B","ECX SAS RADIOLOGY",17)

"BLD",4933,"KRN",19,"NM","B","ECX SAS SURGERY",18)

"BLD",4933,"KRN",19,"NM","B","ECX SOURCE AUDITS",13)

"BLD",4933,"KRN",19,"NM","B","ECX SUR SOURCE AUDIT",31)

"BLD",4933,"KRN",19,"NM","B","ECX SUR VOL REPORT",2)

"BLD",4933,"KRN",19,"NM","B","ECX TRANSMISSION",14)

"BLD",4933,"KRN",19,"NM","B","ECX TRT SOURCE AUDIT",32)

"BLD",4933,"KRN",19,"NM","B","ECXADM",37)

"BLD",4933,"KRN",19,"NM","B","ECXDENT",39)

"BLD",4933,"KRN",19,"NM","B","ECXEC",40)

"BLD",4933,"KRN",19,"NM","B","ECXIV",41)

"BLD",4933,"KRN",19,"NM","B","ECXLAB",42)

"BLD",4933,"KRN",19,"NM","B","ECXLABR",43)

"BLD",4933,"KRN",19,"NM","B","ECXLABRS",8)

"BLD",4933,"KRN",19,"NM","B","ECXMENU",11)

"BLD",4933,"KRN",19,"NM","B","ECXMGR",10)

"BLD",4933,"KRN",19,"NM","B","ECXMOV",52)

"BLD",4933,"KRN",19,"NM","B","ECXMTL",45)

"BLD",4933,"KRN",19,"NM","B","ECXNURS",44)

"BLD",4933,"KRN",19,"NM","B","ECXPAI",46)

"BLD",4933,"KRN",19,"NM","B","ECXPRO",49)

"BLD",4933,"KRN",19,"NM","B","ECXPSO",47)

"BLD",4933,"KRN",19,"NM","B","ECXPURG",33)

"BLD",4933,"KRN",19,"NM","B","ECXQSR",48)

"BLD",4933,"KRN",19,"NM","B","ECXRAD",50)

"BLD",4933,"KRN",19,"NM","B","ECXSCAPPROV",6)

"BLD",4933,"KRN",19,"NM","B","ECXSCEDIT",5)

"BLD",4933,"KRN",19,"NM","B","ECXSCLOAD",4)

"BLD",4933,"KRN",19,"NM","B","ECXSCX",38)

"BLD",4933,"KRN",19,"NM","B","ECXSURG",51)

"BLD",4933,"KRN",19,"NM","B","ECXTRANS",36)

"BLD",4933,"KRN",19,"NM","B","ECXTRT",53)

"BLD",4933,"KRN",19,"NM","B","ECXUD",54)

"BLD",4933,"KRN",19.1,0)
19.1
"BLD",4933,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",4933,"KRN",101,0)
101
"BLD",4933,"KRN",101,"NM",0)
^9.68A^^
"BLD",4933,"KRN",409.61,0)
409.61
"BLD",4933,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",4933,"KRN",771,0)
771
"BLD",4933,"KRN",771,"NM",0)
^9.68A^^
"BLD",4933,"KRN",870,0)
870
"BLD",4933,"KRN",8989.51,0)
8989.51
"BLD",4933,"KRN",8989.52,0)
8989.52
"BLD",4933,"KRN",8994,0)
8994
"BLD",4933,"KRN","B",.4,.4)

"BLD",4933,"KRN","B",.401,.401)

"BLD",4933,"KRN","B",.402,.402)

"BLD",4933,"KRN","B",.403,.403)

"BLD",4933,"KRN","B",.5,.5)

"BLD",4933,"KRN","B",.84,.84)

"BLD",4933,"KRN","B",3.6,3.6)

"BLD",4933,"KRN","B",3.8,3.8)

"BLD",4933,"KRN","B",9.2,9.2)

"BLD",4933,"KRN","B",9.8,9.8)

"BLD",4933,"KRN","B",19,19)

"BLD",4933,"KRN","B",19.1,19.1)

"BLD",4933,"KRN","B",101,101)

"BLD",4933,"KRN","B",409.61,409.61)

"BLD",4933,"KRN","B",771,771)

"BLD",4933,"KRN","B",870,870)

"BLD",4933,"KRN","B",8989.51,8989.51)

"BLD",4933,"KRN","B",8989.52,8989.52)

"BLD",4933,"KRN","B",8994,8994)

"BLD",4933,"QUES",0)
^9.62^^
"BLD",4933,"REQB",0)
^9.611^6^5
"BLD",4933,"REQB",1,0)
ECX*3.0*50^2
"BLD",4933,"REQB",2,0)
ECX*3.0*64^2
"BLD",4933,"REQB",3,0)
ECX*3.0*65^2
"BLD",4933,"REQB",5,0)
ECX*3.0*52^2
"BLD",4933,"REQB",6,0)
ECX*3.0*70^2
"BLD",4933,"REQB","B","ECX*3.0*50",1)

"BLD",4933,"REQB","B","ECX*3.0*52",5)

"BLD",4933,"REQB","B","ECX*3.0*64",2)

"BLD",4933,"REQB","B","ECX*3.0*65",3)

"BLD",4933,"REQB","B","ECX*3.0*70",6)

"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^y^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,55)

"FIA",727.802,727.802,66)

"FIA",727.802,727.802,67)

"FIA",727.802,727.802,68)

"FIA",727.802,727.802,69)

"FIA",727.802,727.802,70)

"FIA",727.802,727.802,71)

"FIA",727.802,727.802,72)

"FIA",727.805)
NURSING EXTRACT
"FIA",727.805,0)
^ECX(727.805,
"FIA",727.805,0,0)
727.805
"FIA",727.805,0,1)
y^y^p^^^^n^^n
"FIA",727.805,0,10)

"FIA",727.805,0,11)

"FIA",727.805,0,"RLRO")

"FIA",727.805,0,"VR")
3.0^ECX
"FIA",727.805,727.805)
1
"FIA",727.805,727.805,19)

"FIA",727.805,727.805,24)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^y^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,23)

"FIA",727.809,727.809,49)

"FIA",727.809,727.809,67)

"FIA",727.809,727.809,68)

"FIA",727.809,727.809,69)

"FIA",727.809,727.809,70)

"FIA",727.809,727.809,71)

"FIA",727.809,727.809,72)

"FIA",727.809,727.809,73)

"FIA",727.809,727.809,74)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^y^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,35)

"FIA",727.81,727.81,58)

"FIA",727.81,727.81,73)

"FIA",727.81,727.81,74)

"FIA",727.81,727.81,75)

"FIA",727.81,727.81,76)

"FIA",727.81,727.81,77)

"FIA",727.81,727.81,78)

"FIA",727.81,727.81,79)

"FIA",727.81,727.81,80)

"FIA",727.81,727.81,81)

"FIA",727.81,727.81,82)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^y^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,38)

"FIA",727.811,727.811,51)

"FIA",727.811,727.811,62)

"FIA",727.811,727.811,63)

"FIA",727.811,727.811,64)

"FIA",727.811,727.811,65)

"FIA",727.811,727.811,66)

"FIA",727.811,727.811,67)

"FIA",727.811,727.811,68)

"FIA",727.811,727.811,69)

"FIA",727.811,727.811,70)

"FIA",727.811,727.811,71)

"FIA",727.812)
MENTAL HEALTH EXTRACT
"FIA",727.812,0)
^ECX(727.812,
"FIA",727.812,0,0)
727.812
"FIA",727.812,0,1)
y^y^p^^^^n^^n
"FIA",727.812,0,10)

"FIA",727.812,0,11)

"FIA",727.812,0,"RLRO")

"FIA",727.812,0,"VR")
3.0^ECX
"FIA",727.812,727.812)
1
"FIA",727.812,727.812,9)

"FIA",727.812,727.812,39)

"FIA",727.812,727.812,46)

"FIA",727.812,727.812,50)

"FIA",727.812,727.812,51)

"FIA",727.812,727.812,52)

"FIA",727.812,727.812,53)

"FIA",727.812,727.812,54)

"FIA",727.812,727.812,55)

"FIA",727.812,727.812,56)

"FIA",727.812,727.812,57)

"FIA",727.812,727.812,58)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^y^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,23)

"FIA",727.813,727.813,36)

"FIA",727.813,727.813,37)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^y^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,24)

"FIA",727.814,727.814,37)

"FIA",727.814,727.814,38)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^y^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,43)

"FIA",727.815,727.815,58)

"FIA",727.815,727.815,75)

"FIA",727.815,727.815,76)

"FIA",727.815,727.815,77)

"FIA",727.815,727.815,78)

"FIA",727.815,727.815,79)

"FIA",727.815,727.815,80)

"FIA",727.815,727.815,81)

"FIA",727.815,727.815,82)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^y^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,28)

"FIA",727.819,727.819,61)

"FIA",727.819,727.819,72)

"FIA",727.819,727.819,73)

"FIA",727.819,727.819,74)

"FIA",727.819,727.819,75)

"FIA",727.819,727.819,76)

"FIA",727.819,727.819,77)

"FIA",727.819,727.819,78)

"FIA",727.819,727.819,79)

"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^y^p^^^^n^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,28)

"FIA",727.824,727.824,29)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^y^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,43)

"FIA",727.825,727.825,58)

"FIA",727.825,727.825,75)

"FIA",727.825,727.825,76)

"FIA",727.825,727.825,77)

"FIA",727.825,727.825,78)

"FIA",727.825,727.825,79)

"FIA",727.825,727.825,80)

"FIA",727.825,727.825,81)

"FIA",727.825,727.825,82)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^y^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,39)

"FIA",727.826,727.826,56)

"FIA",727.826,727.826,67)

"FIA",727.826,727.826,68)

"FIA",727.826,727.826,69)

"FIA",727.826,727.826,70)

"FIA",727.826,727.826,71)

"FIA",727.826,727.826,72)

"FIA",727.826,727.826,73)

"FIA",727.826,727.826,74)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^y^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,43)

"FIA",727.827,727.827,62)

"FIA",727.827,727.827,76)

"FIA",727.827,727.827,77)

"FIA",727.827,727.827,78)

"FIA",727.827,727.827,79)

"FIA",727.827,727.827,80)

"FIA",727.827,727.827,81)

"FIA",727.827,727.827,82)

"FIA",727.827,727.827,83)

"FIA",728.44)
CLINICS AND STOP CODES
"FIA",728.44,0)
^ECX(728.44,
"FIA",728.44,0,0)
728.44P
"FIA",728.44,0,1)
y^y^p^^^^n^^n
"FIA",728.44,0,10)

"FIA",728.44,0,11)

"FIA",728.44,0,"RLRO")

"FIA",728.44,0,"VR")
3.0^ECX
"FIA",728.44,728.44)
1
"FIA",728.44,728.44,5)

"FIA",728.44,728.44,10)

"INIT")
EN^ECX3P71
"KRN",.4,2173,-1)
0^1
"KRN",.4,2173,0)
ECX LOG^3040427.1115^^727^^^3041027
"KRN",.4,2173,"DCL","727^5")
&
"KRN",.4,2173,"DXS",1,9.2)
N Y S Y(1)=$S($D(^ECX(727,D0,"1",D1,0)):^(0),1:"") S X=$P(Y(1),U,1)
"KRN",.4,2173,"DXS",1,9.3)
F D=0:0 S (D,D1)=$O(^ECX(727,D0,1,"B",DICOB,D)) Q:D'>0  I $D(^ECX(727,D0,1,D,0))#2 S X=$P(^(0),U)  X DXS(1,9.2) S:X'?." " DIP(1)=DIP(1)+1 Q:'$D(D)  S D=D1
"KRN",.4,2173,"DXS",1,9.4)
S I(1)="""1""",J(1)=727.0301 N DICOB S DICOB="" F  S DICOB=$O(^ECX(727,D0,1,"B",DICOB)) Q:DICOB=""   X DXS(1,9.3) Q:'$D(D)
"KRN",.4,2173,"DXS",1,9.5)
S I(1,0)=$G(D1) X DXS(1,9.4):D0>0 S X="" S D1=I(1,0)
"KRN",.4,2173,"F",1)
0;C1;R6~2;C10;L11~
"KRN",.4,2173,"F",2)
S DIP(1)=$S($D(^ECX(727,D0,0)):^(0),1:"") S X=$P(DIP(1),U,4),DIP(2)=$G(X) S X=2,DIP(3)=$G(X) S X=7,X=$E(DIP(2),DIP(3),X)_"-" W X K DIP;C22;R8;Z;"$E((#3),2,7)_"-""~
"KRN",.4,2173,"F",3)
S DIP(1)=$S($D(^ECX(727,D0,0)):^(0),1:"") S X=$P(DIP(1),U,5),DIP(2)=$G(X) S X=2,DIP(3)=$G(X) S X=7,X=$E(DIP(2),DIP(3),X) W X K DIP;C30;R5;Z;"$E((#4),2,7)"~
"KRN",.4,2173,"F",4)
5;C43;R6~300;C55;L11~9;C71;L11~
"KRN",.4,2173,"F",5)
S DIP(1)=$S($D(^ECX(727,D0,0)):^(0),1:"") S X=$P(DIP(1),U,2) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) W X K DIP;C90;L9;Z;"NUMDATE(EXTRACT DATE)"~
"KRN",.4,2173,"F",6)
S DIP(1)=$S($D(^ECX(727,D0,0)):^(0),1:"") S X=$P(DIP(1),U,4),X=$E(X,1,5)_0_0 S:'X X="" S Y=X D DT K DIP;C105;d;L8;;Z;"MONTH(START DATE/TIME)"~
"KRN",.4,2173,"F",7)
S DIP(1)="" X DXS(1,9.5) S X=+DIP(1),DIP(2)=$G(X) S X=5,X=$J(DIP(2),X) W X K DIP;C120;Z;"$J(COUNT(MESSAGE NUMBER:MESSAGE NUMBER),5)"~
"KRN",.4,2173,"H")
[ECX LOG HEADER]
"KRN",.4,2471,-1)
0^2
"KRN",.4,2471,0)
ECX LOG HEADER^3041027.0756^^727^^^3041027
"KRN",.4,2471,"F",1)
S $P(LN,"-",132)="";Z;"S $P(LN,"-",132)="""~"DSS EXTRACT LOG STATISTICS";C1~"EXTRACT";C2~"VISTA";C12~"DATA SET";C25~"RECORD";C45~"DATE";C58~"DATE";C75~
"KRN",.4,2471,"F",2)
"DATE";C92~"DATA";C107~"MSG";C123~"NUMBER";C2~"PACKAGE";C11~"DATES";C27~"COUNT";C45~"TRANSMITTED";C55~"PURGED";C74~"EXTRACTED";C90~"MONTH";C106~
"KRN",.4,2471,"F",3)
"UNCONF";C121~W LN;C1;Z;"W LN"~
"KRN",.4,2471,"H")
@
"KRN",.4,2471,"SUB")
1
"KRN",19,10114,-1)
0^42
"KRN",19,10114,0)
ECXLAB^Lab Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10114,1,0)
^^4^4^2950417^^^^
"KRN",19,10114,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10114,1,2,0)
laboratory data for a selected date range. This data is stored in
"KRN",19,10114,1,3,0)
the LABORATORY EXTRACT file (#727.813) until the data is transmitted
"KRN",19,10114,1,4,0)
to the commercial vendor.
"KRN",19,10114,25)
EN^ECXLAB1
"KRN",19,10114,"U")
LAB EXTRACT
"KRN",19,10115,-1)
0^44
"KRN",19,10115,0)
ECXNURS^Nursing Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10115,1,0)
^^4^4^2950417^^^^
"KRN",19,10115,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10115,1,2,0)
nursing data for a selected date range. This data is stored in the
"KRN",19,10115,1,3,0)
NURSING EXTRACT file (#727.805) until the data is transmitted
"KRN",19,10115,1,4,0)
to the commercial vendor.
"KRN",19,10115,25)
BEG^ECXNURS
"KRN",19,10115,"U")
NURSING EXTRACT
"KRN",19,10116,-1)
0^47
"KRN",19,10116,0)
ECXPSO^Prescription Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10116,1,0)
^19.06^4^4^3010829^^^^
"KRN",19,10116,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10116,1,2,0)
prescription (pharmacy outpatient) data for a selected date range.
"KRN",19,10116,1,3,0)
This data is stored in the PRESCRIPTION EXTRACT file (#727.81)
"KRN",19,10116,1,4,0)
until the data is transmitted to the commercial vendor.
"KRN",19,10116,25)
BEG^ECXOPRX
"KRN",19,10116,"U")
PRESCRIPTION EXTRACT
"KRN",19,10117,-1)
0^50
"KRN",19,10117,0)
ECXRAD^Radiology Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10117,1,0)
^^4^4^2950417^^^^
"KRN",19,10117,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10117,1,2,0)
radiology data for a selected date range. This data is stored in the
"KRN",19,10117,1,3,0)
RADIOLOGY EXTRACT file (#727.814) until the data is transmitted
"KRN",19,10117,1,4,0)
to the commercial vendor.
"KRN",19,10117,25)
BEG^ECXRAD
"KRN",19,10117,"U")
RADIOLOGY EXTRACT
"KRN",19,10118,-1)
0^51
"KRN",19,10118,0)
ECXSURG^Surgery Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10118,1,0)
^^4^4^2950417^^^^
"KRN",19,10118,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10118,1,2,0)
surgery data for a selected date range. This data is stored in the
"KRN",19,10118,1,3,0)
SURGERY EXTRACT file (#727.811) until the data is transmitted
"KRN",19,10118,1,4,0)
to the commercial vendor.
"KRN",19,10118,25)
BEG^ECXSURG
"KRN",19,10118,"U")
SURGERY EXTRACT
"KRN",19,10119,-1)
2^11
"KRN",19,10119,0)
ECXMENU^Package Extracts^^M^11714^ECXMGR^^^^^^513
"KRN",19,10119,10,0)
^19.01IP^23^23
"KRN",19,10119,10,1,0)
10114^LAB^35
"KRN",19,10119,10,1,"^")
ECXLAB
"KRN",19,10119,10,2,0)
10115^NUR^45
"KRN",19,10119,10,2,"^")
ECXNURS
"KRN",19,10119,10,3,0)
10116^PRE^55
"KRN",19,10119,10,3,"^")
ECXPSO
"KRN",19,10119,10,4,0)
10117^RAD^65
"KRN",19,10119,10,4,"^")
ECXRAD
"KRN",19,10119,10,5,0)
10120^ECS^25
"KRN",19,10119,10,5,"^")
ECXEC
"KRN",19,10119,10,6,0)
10118^SUR^70
"KRN",19,10119,10,6,"^")
ECXSURG
"KRN",19,10119,10,8,0)
10124^ADM^5
"KRN",19,10119,10,8,"^")
ECXADM
"KRN",19,10119,10,9,0)
10125^DEN^20
"KRN",19,10119,10,9,"^")
ECXDENT
"KRN",19,10119,10,10,0)
10126^MOV^75
"KRN",19,10119,10,10,"^")
ECXMOV
"KRN",19,10119,10,13,0)
10128^CLI^15
"KRN",19,10119,10,13,"^")
ECXSCX
"KRN",19,10119,10,14,0)
10129^UDP^85
"KRN",19,10119,10,14,"^")
ECXUD
"KRN",19,10119,10,15,0)
10133^IVP^30
"KRN",19,10119,10,15,"^")
ECXIV
"KRN",19,10119,10,16,0)
10134^TRT^80
"KRN",19,10119,10,16,"^")
ECXTRT
"KRN",19,10119,10,17,0)
10136^PAS^50
"KRN",19,10119,10,17,"^")
ECXPAI
"KRN",19,10119,10,19,0)
10164^LAR^40
"KRN",19,10119,10,19,"^")
ECXLABR
"KRN",19,10119,10,20,0)
10170^ECQ^60
"KRN",19,10119,10,20,"^")
ECXQSR
"KRN",19,10119,10,21,0)
10854^PRO^63
"KRN",19,10119,10,21,"^")
ECXPRO
"KRN",19,10119,10,22,0)
11347^MTL^47
"KRN",19,10119,10,22,"^")
ECXMTL
"KRN",19,10119,10,23,0)
12462
"KRN",19,10119,10,23,"^")
ECX FISCAL YEAR EXTRACT
"KRN",19,10119,"U")
PACKAGE EXTRACTS
"KRN",19,10120,-1)
0^40
"KRN",19,10120,0)
ECXEC^Event Capture Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10120,1,0)
^^4^4^2950417^^^^
"KRN",19,10120,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10120,1,2,0)
event capture data for a selected date range. This data is stored in
"KRN",19,10120,1,3,0)
the EVENT CAPTURE LOCAL EXTRACT file (#727.815) until the data
"KRN",19,10120,1,4,0)
is transmitted to the commercial vendor.
"KRN",19,10120,25)
BEG^ECXEC
"KRN",19,10120,"U")
EVENT CAPTURE EXTRACT
"KRN",19,10121,-1)
0^4
"KRN",19,10121,0)
ECXSCLOAD^Create DSS Clinic Stop Code File^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10121,1,0)
^^46^46^2960717^^^^
"KRN",19,10121,1,1,0)
 This option allows the DSS extract manager to create the CLINICS AND
"KRN",19,10121,1,2,0)
 STOP CODES file (#728.44) which will contain clinics, the stop codes
"KRN",19,10121,1,3,0)
 assigned to those clinics by MAS, and the stop codes used for those
"KRN",19,10121,1,4,0)
 clinics by DSS.  The process by which new clinic entries are added and 
"KRN",19,10121,1,5,0)
 existing clinic entries are edited is as follows:
"KRN",19,10121,1,6,0)
  
"KRN",19,10121,1,7,0)
 NEW CLINIC ENTRIES
"KRN",19,10121,1,8,0)
  1. The HOSPITAL LOCATION file (#44) is searched for all clinics.  
"KRN",19,10121,1,9,0)
     Clinics that are currently inactive are ignored.  
"KRN",19,10121,1,10,0)
  2. New clinic entries to the CLINICS AND STOP CODES file (#728.44) are 
"KRN",19,10121,1,11,0)
     added with the following field defaults:
"KRN",19,10121,1,12,0)
     a. STOP CODE field (1) = STOP CODE NUMBER field (8) in HOSPITAL 
"KRN",19,10121,1,13,0)
        LOCATION file (#44)
"KRN",19,10121,1,14,0)
     b. CREDIT STOP CODE field (2) = CREDIT STOP CODE field (2503) in 
"KRN",19,10121,1,15,0)
        HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,16,0)
     c. DSS STOP CODE field (3)= STOP CODE NUMBER field (8) in HOSPITAL 
"KRN",19,10121,1,17,0)
        LOCATION file (#44)
"KRN",19,10121,1,18,0)
     d. DSS CREDIT STOP CODE field (4) = CREDIT STOP CODE field (2503) 
"KRN",19,10121,1,19,0)
        in HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,20,0)
     e. ACTION TO SEND field (5) = 
"KRN",19,10121,1,21,0)
        "1" (SEND STOP CODE) if CREDIT STOP CODE field (2) does not
"KRN",19,10121,1,22,0)
            exist
"KRN",19,10121,1,23,0)
        "5" (SEND BOTH AS ONE RECORD WITHOUT NATIONAL CODE) if CREDIT 
"KRN",19,10121,1,24,0)
            STOP CODE field (2) exists
"KRN",19,10121,1,25,0)
        "6" (DO NOT SEND) if Clinic is flagged as a "non-count" clinic 
"KRN",19,10121,1,26,0)
            in HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,27,0)
 
"KRN",19,10121,1,28,0)
 EXISTING CLINIC ENTRIES
"KRN",19,10121,1,29,0)
  1. All pre-existing clinics are checked against their counterpart in 
"KRN",19,10121,1,30,0)
     the HOSPITAL LOCATION file (#44) to be sure that the STOP CODE 
"KRN",19,10121,1,31,0)
     field (1) in the CLINICS AND STOP CODES file (#728.44) matches the 
"KRN",19,10121,1,32,0)
     STOP CODE NUMBER field (8) in the HOSPITAL LOCATION file (#44).  
"KRN",19,10121,1,33,0)
     The same check is made on the CREDIT STOP CODE field (2) to be sure 
"KRN",19,10121,1,34,0)
     that it matches the CREDIT STOP CODE field (2503) in the HOSPITAL 
"KRN",19,10121,1,35,0)
     LOCATION file (#44).
"KRN",19,10121,1,36,0)
  2. Any pre-existing clinic that is now marked as "inactive" in the 
"KRN",19,10121,1,37,0)
     HOSPITAL LOCATION file (#44) is flagged as such in the CLINICS AND 
"KRN",19,10121,1,38,0)
     STOP CODES file (#728.44).  This inactive indicator will be 
"KRN",19,10121,1,39,0)
     displayed as an "*" beside the clinic name on the worksheet for the
"KRN",19,10121,1,40,0)
     "Clinics and DSS Stop Codes Print".  NOTE: "Inactive" clinics may 
"KRN",19,10121,1,41,0)
     still have valid past data for DSS.
"KRN",19,10121,1,42,0)
  3. Any stop code changes to pre-existing clinics will delete the DATE 
"KRN",19,10121,1,43,0)
     LAST REVIEWED field (6) in the CLINICS AND STOP CODES file (#728.44).
"KRN",19,10121,1,44,0)
     This will ensure that the edited clinics will print out as 
"KRN",19,10121,1,45,0)
     "unreviewed" the next time the clinic worksheet (from the "Clinics 
"KRN",19,10121,1,46,0)
     and DSS Stop Codes Print") is produced.
"KRN",19,10121,25)
EN^ECXSCLD
"KRN",19,10121,"U")
CREATE DSS CLINIC STOP CODE FI
"KRN",19,10123,-1)
0^5
"KRN",19,10123,0)
ECXSCEDIT^Enter/Edit DSS Stop Codes for Clinics^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10123,1,0)
^19.06^4^4^3020731^^^^
"KRN",19,10123,1,1,0)
This options provides a method for the extract manager to select
"KRN",19,10123,1,2,0)
the stop codes for each clinic which will be associated with that
"KRN",19,10123,1,3,0)
clinic for the DSS extract.  These codes may be the same as those
"KRN",19,10123,1,4,0)
associated with the clinic by MAS but they may differ.
"KRN",19,10123,25)
EDIT^ECXSCLD
"KRN",19,10123,"U")
ENTER/EDIT DSS STOP CODES FOR 
"KRN",19,10124,-1)
0^37
"KRN",19,10124,0)
ECXADM^Admissions Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10124,1,0)
^^4^4^2950417^^^^
"KRN",19,10124,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10124,1,2,0)
patient admissions data for a selected date range. This data is stored
"KRN",19,10124,1,3,0)
in the ADMISSION EXTRACT file (#727.802) until the data is transmitted
"KRN",19,10124,1,4,0)
to the commercial vendor.
"KRN",19,10124,3.91,0)
^19.391^^0
"KRN",19,10124,3.92,0)
^19.392A^^0
"KRN",19,10124,25)
BEG^ECXADM
"KRN",19,10124,"U")
ADMISSIONS EXTRACT
"KRN",19,10125,-1)
0^39
"KRN",19,10125,0)
ECXDENT^Dental Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10125,1,0)
^^4^4^2950417^^^^
"KRN",19,10125,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10125,1,2,0)
dental data for a selected date range. This data is stored in the
"KRN",19,10125,1,3,0)
DENTAL EXTRACT file (#727.806) until the data is transmitted
"KRN",19,10125,1,4,0)
to the commercial vendor.
"KRN",19,10125,25)
BEG^ECXDENT
"KRN",19,10125,"U")
DENTAL EXTRACT
"KRN",19,10126,-1)
0^52
"KRN",19,10126,0)
ECXMOV^Transfer and Discharge Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10126,1,0)
^^4^4^2950417^^^^
"KRN",19,10126,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10126,1,2,0)
patient movement (transfer and discharge) data for a selected date
"KRN",19,10126,1,3,0)
range. This data is stored in the PHYSICAL MOVEMENT EXTRACT file
"KRN",19,10126,1,4,0)
(#727.808) until the data is transmitted to the commercial vendor.
"KRN",19,10126,25)
BEG^ECXMOV
"KRN",19,10126,"U")
TRANSFER AND DISCHARGE EXTRACT
"KRN",19,10128,-1)
0^38
"KRN",19,10128,0)
ECXSCX^Clinic Visit Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10128,1,0)
^19.06^5^5^3000629^^^^
"KRN",19,10128,1,1,0)
Extract Clinic visit data.
"KRN",19,10128,1,2,0)
This option provides the extract manager the ability to extract the
"KRN",19,10128,1,3,0)
clinic visit data for a selected date range. This data is stored in the
"KRN",19,10128,1,4,0)
CLINIC EXTRACT file (#727.827) 
"KRN",19,10128,1,5,0)
until data is transmitted to the commercial vendor.
"KRN",19,10128,25)
BEG^ECXSCXN
"KRN",19,10128,"U")
CLINIC VISIT EXTRACT
"KRN",19,10129,-1)
0^54
"KRN",19,10129,0)
ECXUD^Unit Dose Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10129,1,0)
^19.06^4^4^3030115^^^^
"KRN",19,10129,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10129,1,2,0)
pharmacy unit dose data for a selected date range. This data is
"KRN",19,10129,1,3,0)
stored in the UNIT DOSE LOCAL EXTRACT file (#727.809)
"KRN",19,10129,1,4,0)
until the data is transmitted to the commercial vendor.
"KRN",19,10129,25)
BEG^ECXUD
"KRN",19,10129,"U")
UNIT DOSE EXTRACT
"KRN",19,10130,-1)
0^10
"KRN",19,10130,0)
ECXMGR^Extract Manager's Options^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10130,1,0)
^19.06^3^3^3030923^^^^
"KRN",19,10130,1,1,0)
This is the main menu for the DSS extract manager. All setup options,
"KRN",19,10130,1,2,0)
audit reports, maintenance activities, package extracts, and
"KRN",19,10130,1,3,0)
transmission management options reside within the menu structure.
"KRN",19,10130,10,0)
^19.01IP^13^13
"KRN",19,10130,10,4,0)
10119^P^10
"KRN",19,10130,10,4,"^")
ECXMENU
"KRN",19,10130,10,8,0)
10149^E^20
"KRN",19,10130,10,8,"^")
ECX SOURCE AUDITS
"KRN",19,10130,10,11,0)
10152^S^15
"KRN",19,10130,10,11,"^")
ECX SAS AUDITS
"KRN",19,10130,10,12,0)
10161^M^5
"KRN",19,10130,10,12,"^")
ECX MAINTENANCE
"KRN",19,10130,10,13,0)
10162^T^25
"KRN",19,10130,10,13,"^")
ECX TRANSMISSION
"KRN",19,10130,99)
59891,55102
"KRN",19,10130,99.1)
59812,41687
"KRN",19,10130,"U")
EXTRACT MANAGER'S OPTIONS
"KRN",19,10131,-1)
0^33
"KRN",19,10131,0)
ECXPURG^Purge Data from Extract Files^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10131,1,0)
^^20^20^2961121^^
"KRN",19,10131,1,1,0)
This option purges individual or a range of DSS extracts, or data that 
"KRN",19,10131,1,2,0)
resides in the "holding files" for the IVP and UDP extracts.
"KRN",19,10131,1,3,0)
 
"KRN",19,10131,1,4,0)
Care must be taken for several reasons:
"KRN",19,10131,1,5,0)
 
"KRN",19,10131,1,6,0)
-  You can purge ANY existing extract.  This includes transmitted and non-
"KRN",19,10131,1,7,0)
   transmitted extracts as well as extracts that did not run to completion
"KRN",19,10131,1,8,0)
   due to errors or system problems.
"KRN",19,10131,1,9,0)
-  Choosing a range of extracts (or a broad date range for the "holding
"KRN",19,10131,1,10,0)
   files") could mean an excessively large number of records and be very
"KRN",19,10131,1,11,0)
   CPU intensive.  Please be sure to queue this purge for off-hours and
"KRN",19,10131,1,12,0)
   limit the number of extracts to be purged per a single queued session.
"KRN",19,10131,1,13,0)
-  Data in the IVP and UDP holding files CANNOT be recreated.  Once it is
"KRN",19,10131,1,14,0)
   purged, extracts can no longer be generated for that time period.
"KRN",19,10131,1,15,0)
 
"KRN",19,10131,1,16,0)
PURGE RECOMMENDATIONS:
"KRN",19,10131,1,17,0)
Deletion of any local DHCP extracts or DHCP "source of extracts" (i.e., lab 
"KRN",19,10131,1,18,0)
data, etc.) is not recommended until your facility has successfully created 
"KRN",19,10131,1,19,0)
extracts, transmitted to the Austin Automation Center, audited the counts, 
"KRN",19,10131,1,20,0)
loaded the data into DSS AND ARE CONTENT WITH THE RESULTS.
"KRN",19,10131,25)
EN^ECXPURG
"KRN",19,10131,"U")
PURGE DATA FROM EXTRACT FILES
"KRN",19,10132,-1)
0^36
"KRN",19,10132,0)
ECXTRANS^Transmit Data from Extract Files^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10132,1,0)
^^3^3^2950418^^^^
"KRN",19,10132,1,1,0)
This option allows messages containing the data from an individual
"KRN",19,10132,1,2,0)
extract to be sent to the Austin Automation Center in a series of mail
"KRN",19,10132,1,3,0)
messages.
"KRN",19,10132,25)
EN^ECXTRANS
"KRN",19,10132,"U")
TRANSMIT DATA FROM EXTRACT FIL
"KRN",19,10133,-1)
0^41
"KRN",19,10133,0)
ECXIV^IV Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10133,1,0)
^^4^4^2980707^^^^
"KRN",19,10133,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10133,1,2,0)
pharmacy IV data for a selected date range. This data is stored in
"KRN",19,10133,1,3,0)
the IV DETAIL EXTRACT file (#727.819) until the data is transmitted
"KRN",19,10133,1,4,0)
to the commercial vendor.
"KRN",19,10133,25)
BEG^ECXPIVD
"KRN",19,10133,"U")
IV EXTRACT
"KRN",19,10134,-1)
0^53
"KRN",19,10134,0)
ECXTRT^Treating Specialty Change Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10134,1,0)
^^4^4^2950417^^^^
"KRN",19,10134,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10134,1,2,0)
treating specialty change data for a selected date range. This data is
"KRN",19,10134,1,3,0)
stored in the TREATING SPECIALTY CHANGE EXTRACT file (#727.817)
"KRN",19,10134,1,4,0)
until the data is transmitted to the commercial vendor.
"KRN",19,10134,25)
BEG^ECXTRT
"KRN",19,10134,"U")
TREATING SPECIALTY CHANGE EXTR
"KRN",19,10135,-1)
0^6
"KRN",19,10135,0)
ECXSCAPPROV^Approve Reviewed DSS Clinic Worksheet^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10135,1,0)
^^6^6^2960717^^^^
"KRN",19,10135,1,1,0)
This option provides the extract manager a mechanism to approve all
"KRN",19,10135,1,2,0)
DSS Stop Codes and DSS Credit Stop Codes as site defined in the CLINICS 
"KRN",19,10135,1,3,0)
AND STOP CODES file (#728.44).  Running this option will mark all 
"KRN",19,10135,1,4,0)
currently existing entries in this file as "reviewed" with a date.  This 
"KRN",19,10135,1,5,0)
will allow sites to select to print the "Clinics and DSS Stop Codes 
"KRN",19,10135,1,6,0)
Print" by ALL or UNREVIEWED.
"KRN",19,10135,25)
APPROVE^ECXSCLD
"KRN",19,10135,"U")
APPROVE REVIEWED DSS CLINIC WO
"KRN",19,10136,-1)
0^46
"KRN",19,10136,0)
ECXPAI^PAI File Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10136,1,0)
^^4^4^2960530^^^^
"KRN",19,10136,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10136,1,2,0)
patient assessment instrument (PAI) data for a selected date range.
"KRN",19,10136,1,3,0)
This data is stored in the PAI EXTRACT file (#727.823) until the
"KRN",19,10136,1,4,0)
data is transmitted to the commercial vendor.
"KRN",19,10136,25)
BEG^ECXPAI
"KRN",19,10136,"U")
PAI FILE EXTRACT
"KRN",19,10139,-1)
0^19
"KRN",19,10139,0)
ECX ADM SOURCE AUDIT^Admission (ADM) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10139,1,0)
^19.06^14^14^3010829^^^^
"KRN",19,10139,1,1,0)
This option will generate a report from the ADMISSION EXTRACT
"KRN",19,10139,1,2,0)
file (#727.802) which will allow the DSS extract manager to
"KRN",19,10139,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10139,1,4,0)
Center.
"KRN",19,10139,1,5,0)
  
"KRN",19,10139,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10139,1,7,0)
in the verification process:
"KRN",19,10139,1,8,0)
  
"KRN",19,10139,1,9,0)
Report Title - Gains and Losses Sheet/Bed Status Report
"KRN",19,10139,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10139,1,11,0)
  
"KRN",19,10139,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10139,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10139,1,14,0)
division (if applicable).
"KRN",19,10139,25)
EN^ECXAADM
"KRN",19,10139,"U")
ADMISSION (ADM) EXTRACT AUDIT
"KRN",19,10140,-1)
0^23
"KRN",19,10140,0)
ECX MOV SOURCE AUDIT^Physical Movement (MOV) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10140,1,0)
^^14^14^2990503^^
"KRN",19,10140,1,1,0)
This option will generate a report from the PHYSICAL MOVEMENT
"KRN",19,10140,1,2,0)
EXTRACT file (#727.808) which will allow the DSS extract manager to
"KRN",19,10140,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10140,1,4,0)
Center.
"KRN",19,10140,1,5,0)
  
"KRN",19,10140,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10140,1,7,0)
in the verification process:
"KRN",19,10140,1,8,0)
  
"KRN",19,10140,1,9,0)
Report Title - Gains & Losses Sheet/Bed Status Report
"KRN",19,10140,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10140,1,11,0)
  
"KRN",19,10140,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10140,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10140,1,14,0)
division (if applicable).
"KRN",19,10140,25)
EN^ECXAMOV
"KRN",19,10140,60)

"KRN",19,10140,62)

"KRN",19,10140,63)

"KRN",19,10140,64)

"KRN",19,10140,65)

"KRN",19,10140,66)

"KRN",19,10140,"U")
PHYSICAL MOVEMENT (MOV) EXTRAC
"KRN",19,10141,-1)
0^32
"KRN",19,10141,0)
ECX TRT SOURCE AUDIT^Treating Specialty Change (TRT) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10141,1,0)
^^14^14^2971107^
"KRN",19,10141,1,1,0)
This option will generate a report from the TREATING SPECIALTY
"KRN",19,10141,1,2,0)
CHANGE EXTRACT file (#727.817) which will allow the DSS extract 
"KRN",19,10141,1,3,0)
manager to verify extract data before transmission to the Austin 
"KRN",19,10141,1,4,0)
Automation Center.
"KRN",19,10141,1,5,0)
  
"KRN",19,10141,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10141,1,7,0)
in the verification process:
"KRN",19,10141,1,8,0)
  
"KRN",19,10141,1,9,0)
Report Title - Gains & Losses Sheet/Treating Specialty Report
"KRN",19,10141,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10141,1,11,0)
  
"KRN",19,10141,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10141,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10141,1,14,0)
division (if applicable).
"KRN",19,10141,25)
EN^ECXATRT
"KRN",19,10141,60)

"KRN",19,10141,62)

"KRN",19,10141,63)

"KRN",19,10141,64)

"KRN",19,10141,65)

"KRN",19,10141,66)

"KRN",19,10141,"U")
TREATING SPECIALTY CHANGE (TRT
"KRN",19,10142,-1)
0^20
"KRN",19,10142,0)
ECX DEN SOURCE AUDIT^Dental (DEN) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10142,1,0)
^^14^14^2971107^
"KRN",19,10142,1,1,0)
This option will generate a report from the DENTAL EXTRACT
"KRN",19,10142,1,2,0)
file (#727.806) which will allow the DSS extract manager to
"KRN",19,10142,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10142,1,4,0)
Center.
"KRN",19,10142,1,5,0)
  
"KRN",19,10142,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10142,1,7,0)
in the verification process:
"KRN",19,10142,1,8,0)
  
"KRN",19,10142,1,9,0)
Report Title - Dental Service Treatment Report - Summary Report for Clinic
"KRN",19,10142,1,10,0)
Menu Option -  Clinic Summary [DENTTREATCLINIC RPT]
"KRN",19,10142,1,11,0)
  
"KRN",19,10142,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10142,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10142,1,14,0)
division (if applicable).
"KRN",19,10142,25)
EN^ECXADEN
"KRN",19,10142,60)

"KRN",19,10142,62)

"KRN",19,10142,63)

"KRN",19,10142,64)

"KRN",19,10142,65)

"KRN",19,10142,66)

"KRN",19,10142,"U")
DENTAL (DEN) EXTRACT AUDIT
"KRN",19,10143,-1)
0^26
"KRN",19,10143,0)
ECX PAI SOURCE AUDIT^PAI (PAS) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10143,1,0)
^^14^14^2971107^
"KRN",19,10143,1,1,0)
This option will generate a report from the PAI EXTRACT file
"KRN",19,10143,1,2,0)
(#727.823) which will allow the DSS extract manager to verify
"KRN",19,10143,1,3,0)
extract data before transmission to the Austin Automation
"KRN",19,10143,1,4,0)
Center.
"KRN",19,10143,1,5,0)
  
"KRN",19,10143,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10143,1,7,0)
in the verification process:
"KRN",19,10143,1,8,0)
  
"KRN",19,10143,1,9,0)
Report Title - Record Status Report
"KRN",19,10143,1,10,0)
Menu Option -  Record Status Report [DG RUG STATUS]
"KRN",19,10143,1,11,0)
  
"KRN",19,10143,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10143,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10143,1,14,0)
division (if applicable).
"KRN",19,10143,25)
EN^ECXAPAS
"KRN",19,10143,60)

"KRN",19,10143,62)

"KRN",19,10143,63)

"KRN",19,10143,64)

"KRN",19,10143,65)

"KRN",19,10143,66)

"KRN",19,10143,"U")
PAI (PAS) EXTRACT AUDIT
"KRN",19,10144,-1)
0^21
"KRN",19,10144,0)
ECX ECS SOURCE AUDIT^Event Capture (ECS) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10144,1,0)
^^14^14^2971107^
"KRN",19,10144,1,1,0)
This option will generate a report from the EVENT CAPTURE LOCAL 
"KRN",19,10144,1,2,0)
EXTRACT file (#727.815) which will allow the DSS extract manager to
"KRN",19,10144,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10144,1,4,0)
Center.
"KRN",19,10144,1,5,0)
  
"KRN",19,10144,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10144,1,7,0)
in the verification process:
"KRN",19,10144,1,8,0)
  
"KRN",19,10144,1,9,0)
Report Title - DSS Unit Workload Summary Report
"KRN",19,10144,1,10,0)
Menu Option -  DSS Unit Workload Summary [ECRDSSU]
"KRN",19,10144,1,11,0)
  
"KRN",19,10144,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10144,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10144,1,14,0)
division (if applicable).
"KRN",19,10144,25)
EN^ECXAECS
"KRN",19,10144,60)

"KRN",19,10144,62)

"KRN",19,10144,63)

"KRN",19,10144,64)

"KRN",19,10144,"U")
EVENT CAPTURE (ECS) EXTRACT AU
"KRN",19,10145,-1)
0^22
"KRN",19,10145,0)
ECX LAB SOURCE AUDIT (PATIENT)^Laboratory (LAB) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10145,1,0)
^^14^14^2971117^^^^
"KRN",19,10145,1,1,0)
This option will generate a report from the LABORATORY EXTRACT
"KRN",19,10145,1,2,0)
file (#727.813) which will allow the DSS extract manager to
"KRN",19,10145,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10145,1,4,0)
Center.
"KRN",19,10145,1,5,0)
  
"KRN",19,10145,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10145,1,7,0)
in the verification process:
"KRN",19,10145,1,8,0)
  
"KRN",19,10145,1,9,0)
Report Title - Workload Statistics by Accession Area and Shifts
"KRN",19,10145,1,10,0)
Menu Option -  Workload statistics by accession area and shift [LRRP8]
"KRN",19,10145,1,11,0)
  
"KRN",19,10145,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10145,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10145,1,14,0)
division (if applicable).
"KRN",19,10145,25)
EN^ECXALAB
"KRN",19,10145,60)

"KRN",19,10145,62)

"KRN",19,10145,63)

"KRN",19,10145,64)

"KRN",19,10145,"U")
LABORATORY (LAB) EXTRACT AUDIT
"KRN",19,10147,-1)
0^25
"KRN",19,10147,0)
ECX NUR SOURCE AUDIT^Nursing (NUR) Extract Audit^^R^^^^^^^^DSS EXTRACTS^^1
"KRN",19,10147,1,0)
^^16^16^2971107^
"KRN",19,10147,1,1,0)
This option will generate a report from the NURSING EXTRACT
"KRN",19,10147,1,2,0)
file (#727.805) which will allow the DSS extract manager to
"KRN",19,10147,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10147,1,4,0)
Center.
"KRN",19,10147,1,5,0)
  
"KRN",19,10147,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10147,1,7,0)
in the verification process:
"KRN",19,10147,1,8,0)
  
"KRN",19,10147,1,9,0)
Report Title - Report 10-1106 Segment 200,
"KRN",19,10147,1,10,0)
               Cumulative Daily Patient Classification Data
"KRN",19,10147,1,11,0)
Menu Option -  Patient Category Totals-Midnight Acuity Reports
"KRN",19,10147,1,12,0)
               [NURAPR-RES-MDPC]
"KRN",19,10147,1,13,0)
  
"KRN",19,10147,1,14,0)
Be sure that the extract audit report and the external application
"KRN",19,10147,1,15,0)
report are generated for the same date or date range and the same
"KRN",19,10147,1,16,0)
division (if applicable).
"KRN",19,10147,20)
W !,"The start date should be the same as the end date",!!
"KRN",19,10147,25)
EN^ECXANUR
"KRN",19,10147,60)

"KRN",19,10147,62)

"KRN",19,10147,63)

"KRN",19,10147,64)

"KRN",19,10147,"U")
NURSING (NUR) EXTRACT AUDIT
"KRN",19,10148,-1)
0^30
"KRN",19,10148,0)
ECX RAD SOURCE AUDIT^Radiology (RAD) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10148,1,0)
^^15^15^2971107^
"KRN",19,10148,1,1,0)
This option will generate a report from the RADIOLOGY EXTRACT
"KRN",19,10148,1,2,0)
file (#727.814) which will allow the DSS extract manager to
"KRN",19,10148,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10148,1,4,0)
Center.
"KRN",19,10148,1,5,0)
  
"KRN",19,10148,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10148,1,7,0)
in the verification process:
"KRN",19,10148,1,8,0)
  
"KRN",19,10148,1,9,0)
Report Title - Procedure/CPT Statistics Report, Inpatient
"KRN",19,10148,1,10,0)
               Procedure/CPT Statistics Report, Outpatient
"KRN",19,10148,1,11,0)
Menu Option -  Procedure/CPT Statistics Report [RA CPTSTATS]
"KRN",19,10148,1,12,0)
  
"KRN",19,10148,1,13,0)
Be sure that the extract audit report and the external application
"KRN",19,10148,1,14,0)
report are generated for the same date or date range and the same
"KRN",19,10148,1,15,0)
division (if applicable).
"KRN",19,10148,25)
EN^ECXARAD
"KRN",19,10148,60)

"KRN",19,10148,62)

"KRN",19,10148,63)

"KRN",19,10148,64)

"KRN",19,10148,"U")
RADIOLOGY (RAD) EXTRACT AUDIT
"KRN",19,10149,-1)
2^13
"KRN",19,10149,0)
ECX SOURCE AUDITS^Extract Audit Reports Menu^^M^11714^^^^^^^513
"KRN",19,10149,10,0)
^19.01IP^15^15
"KRN",19,10149,10,1,0)
10139^ADM^5
"KRN",19,10149,10,1,"^")
ECX ADM SOURCE AUDIT
"KRN",19,10149,10,2,0)
10142^DEN^10
"KRN",19,10149,10,2,"^")
ECX DEN SOURCE AUDIT
"KRN",19,10149,10,3,0)
10144^ECS^15
"KRN",19,10149,10,3,"^")
ECX ECS SOURCE AUDIT
"KRN",19,10149,10,4,0)
10145^LAB^20
"KRN",19,10149,10,4,"^")
ECX LAB SOURCE AUDIT (PATIENT)
"KRN",19,10149,10,6,0)
10140^MOV^30
"KRN",19,10149,10,6,"^")
ECX MOV SOURCE AUDIT
"KRN",19,10149,10,7,0)
10143^PAS^40
"KRN",19,10149,10,7,"^")
ECX PAI SOURCE AUDIT
"KRN",19,10149,10,8,0)
10148^RAD^50
"KRN",19,10149,10,8,"^")
ECX RAD SOURCE AUDIT
"KRN",19,10149,10,9,0)
10150^SUR^55
"KRN",19,10149,10,9,"^")
ECX SUR SOURCE AUDIT
"KRN",19,10149,10,10,0)
10141^TRT^60
"KRN",19,10149,10,10,"^")
ECX TRT SOURCE AUDIT
"KRN",19,10149,10,11,0)
10147^NUR^35
"KRN",19,10149,10,11,"^")
ECX NUR SOURCE AUDIT
"KRN",19,10149,10,12,0)
10171^ECQ^45
"KRN",19,10149,10,12,"^")
ECX QSR SOURCE AUDIT
"KRN",19,10149,10,13,0)
10855^PRO^48
"KRN",19,10149,10,13,"^")
ECX PRO SOURCE AUDIT
"KRN",19,10149,10,14,0)
11348^MTL^32
"KRN",19,10149,10,14,"^")
ECX MTL SOURCE AUDIT
"KRN",19,10149,10,15,0)
12021^PHA^42
"KRN",19,10149,10,15,"^")
ECX PHA SOURCE AUDIT
"KRN",19,10149,"U")
EXTRACT AUDIT REPORTS MENU
"KRN",19,10150,-1)
0^31
"KRN",19,10150,0)
ECX SUR SOURCE AUDIT^Surgery (SUR) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10150,1,0)
^^14^14^2971107^
"KRN",19,10150,1,1,0)
This option will generate a report from the SURGERY EXTRACT
"KRN",19,10150,1,2,0)
file (#727.811) which will allow the DSS extract manager to
"KRN",19,10150,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10150,1,4,0)
Center.
"KRN",19,10150,1,5,0)
  
"KRN",19,10150,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10150,1,7,0)
in the verification process:
"KRN",19,10150,1,8,0)
  
"KRN",19,10150,1,9,0)
Report Title - Surgical Service Cumulative Report of CPT Codes
"KRN",19,10150,1,10,0)
Menu Option -  Cumulative Report of CPT Codes [SROACCT]
"KRN",19,10150,1,11,0)
  
"KRN",19,10150,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10150,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10150,1,14,0)
division (if applicable).
"KRN",19,10150,25)
EN^ECXASUR
"KRN",19,10150,60)

"KRN",19,10150,62)

"KRN",19,10150,63)

"KRN",19,10150,64)

"KRN",19,10150,"U")
SURGERY (SUR) EXTRACT AUDIT
"KRN",19,10151,-1)
0^34
"KRN",19,10151,0)
ECX EXTRACT LOG REVIEW^Review a Particular Extract for Transmission^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10151,1,0)
^^2^2^2950419^^^^
"KRN",19,10151,1,1,0)
This option allows the review of a particular extract to verify the
"KRN",19,10151,1,2,0)
transmission of messages to the Austin Automation Center.
"KRN",19,10151,25)
EN^ECXXREV
"KRN",19,10151,"U")
REVIEW A PARTICULAR EXTRACT FO
"KRN",19,10152,-1)
2^12
"KRN",19,10152,0)
ECX SAS AUDITS^SAS Extract Audit Reports^^M^11714^^^^^^^513
"KRN",19,10152,10,0)
^19.01PI^4^4
"KRN",19,10152,10,1,0)
10153^DEN^5
"KRN",19,10152,10,1,"^")
ECX SAS DENTAL
"KRN",19,10152,10,2,0)
10154^RAD^15
"KRN",19,10152,10,2,"^")
ECX SAS RADIOLOGY
"KRN",19,10152,10,3,0)
10155^PRE^10
"KRN",19,10152,10,3,"^")
ECX SAS PRESCRIPTION
"KRN",19,10152,10,4,0)
10156^SUR^20
"KRN",19,10152,10,4,"^")
ECX SAS SURGERY
"KRN",19,10152,"U")
SAS EXTRACT AUDIT REPORTS
"KRN",19,10153,-1)
0^15
"KRN",19,10153,0)
ECX SAS DENTAL^SAS Dental Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10153,1,0)
^^4^4^2950417^^^^
"KRN",19,10153,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10153,1,2,0)
which creates new records from the dental extract. Using this option a
"KRN",19,10153,1,3,0)
summary report may be printed for all records sorted by feeder location
"KRN",19,10153,1,4,0)
and feeder key.
"KRN",19,10153,25)
EN^ECXSADEN
"KRN",19,10153,"U")
SAS DENTAL AUDIT REPORT
"KRN",19,10154,-1)
0^17
"KRN",19,10154,0)
ECX SAS RADIOLOGY^SAS Radiology Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10154,1,0)
^^4^4^2971028^^^^
"KRN",19,10154,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10154,1,2,0)
which creates new records from the radiology extract. Using this option
"KRN",19,10154,1,3,0)
a summary report may be printed for all records sorted by feeder location
"KRN",19,10154,1,4,0)
and feeder key.
"KRN",19,10154,25)
EN^ECXSARAD
"KRN",19,10154,"U")
SAS RADIOLOGY AUDIT REPORT
"KRN",19,10155,-1)
0^16
"KRN",19,10155,0)
ECX SAS PRESCRIPTION^SAS Prescription Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10155,1,0)
^^4^4^2950417^^^^
"KRN",19,10155,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10155,1,2,0)
which creates new records from the prescription (pharmacy outpatient)
"KRN",19,10155,1,3,0)
extract. Using this option a summary report may be printed for all
"KRN",19,10155,1,4,0)
records sorted by feeder location and feeder key.
"KRN",19,10155,25)
EN^ECXSARXS
"KRN",19,10155,"U")
SAS PRESCRIPTION AUDIT REPORT
"KRN",19,10156,-1)
0^18
"KRN",19,10156,0)
ECX SAS SURGERY^SAS Surgery Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10156,1,0)
^^4^4^2971028^^^^
"KRN",19,10156,1,1,0)
This option emulates the SAS routine at the Austin Automation Center
"KRN",19,10156,1,2,0)
which creates new records from the surgery extract. Using this option
"KRN",19,10156,1,3,0)
a summary report may be printed for all records sorted by feeder location
"KRN",19,10156,1,4,0)
and feeder key.
"KRN",19,10156,25)
EN^ECXSASUR
"KRN",19,10156,"U")
SAS SURGERY AUDIT REPORT
"KRN",19,10157,-1)
0^35
"KRN",19,10157,0)
ECX EXTRACT LOG SUMMARY^Summary Report of Extract Logs^^P^^^^^^^^DSS EXTRACTS^^1
"KRN",19,10157,1,0)
^19.06^3^3^3020306^^^^
"KRN",19,10157,1,1,0)
Using this option a summary report may be printed from the EXTRACT
"KRN",19,10157,1,2,0)
LOG file (#727) displaying extract number, feeder system, data set
"KRN",19,10157,1,3,0)
dates (date range), record count, date transmitted, and date purged.
"KRN",19,10157,20)
W !!,?1,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!
"KRN",19,10157,60)
ECX(727,
"KRN",19,10157,62)
0
"KRN",19,10157,63)
[ECX LOG]
"KRN",19,10157,64)
[ECX LOG]
"KRN",19,10157,"U")
SUMMARY REPORT OF EXTRACT LOGS
"KRN",19,10161,-1)
2^1
"KRN",19,10161,0)
ECX MAINTENANCE^Maintenance^^M^11714^^^^^^^513
"KRN",19,10161,10,0)
^19.01IP^21^21
"KRN",19,10161,10,15,0)
12382^14^75
"KRN",19,10161,10,15,"^")
ECX LAB RESULTS TRANS EDIT
"KRN",19,10161,10,20,0)
12503^17
"KRN",19,10161,10,20,"^")
ECX SUR VOL REPORT
"KRN",19,10161,10,21,0)
12504^18
"KRN",19,10161,10,21,"^")
ECX PRO COST REPORT
"KRN",19,10161,"U")
MAINTENANCE
"KRN",19,10162,-1)
2^14
"KRN",19,10162,0)
ECX TRANSMISSION^Transmission Management^^M^11714^^^^^^^513
"KRN",19,10162,10,0)
^19.01IP^4^4
"KRN",19,10162,10,1,0)
10132^T^20
"KRN",19,10162,10,1,"^")
ECXTRANS
"KRN",19,10162,10,2,0)
10151^R^10
"KRN",19,10162,10,2,"^")
ECX EXTRACT LOG REVIEW
"KRN",19,10162,10,3,0)
10157^S^15
"KRN",19,10162,10,3,"^")
ECX EXTRACT LOG SUMMARY
"KRN",19,10162,10,4,0)
10131^P^5
"KRN",19,10162,10,4,"^")
ECXPURG
"KRN",19,10162,"U")
TRANSMISSION MANAGEMENT
"KRN",19,10164,-1)
0^43
"KRN",19,10164,0)
ECXLABR^Lab Results Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10164,1,0)
^19.06^4^4^3030513^^^^
"KRN",19,10164,1,1,0)
This option provides the extract manager the ability to extract the
"KRN",19,10164,1,2,0)
laboratory results data for a selected date range. This data is stored in
"KRN",19,10164,1,3,0)
the LAB RESULTS EXTRACT file (#727.824) until the data is transmitted
"KRN",19,10164,1,4,0)
to the commercial vendor.
"KRN",19,10164,25)
BEG^ECXLABR
"KRN",19,10164,"U")
LAB RESULTS EXTRACT
"KRN",19,10165,-1)
0^8
"KRN",19,10165,0)
ECXLABRS^Link DSS Selected Lab Tests to Local Lab Tests^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10165,1,0)
^19.06^5^5^3030905^^
"KRN",19,10165,1,1,0)
Using this option the extract manager has the ability to link the DSS
"KRN",19,10165,1,2,0)
selected tests in the DSS LAB TESTS file (#727.2) to the local lab tests
"KRN",19,10165,1,3,0)
in the LABORATORY TESTS file (#60).  Local names for BLOOD, URINE and 
"KRN",19,10165,1,4,0)
FECES specimens must also be defined.  This information is critical for 
"KRN",19,10165,1,5,0)
the DSS Lab Results Extract.
"KRN",19,10165,25)
EN^ECXLABRS
"KRN",19,10165,"U")
LINK DSS SELECTED LAB TESTS TO
"KRN",19,10167,-1)
0^7
"KRN",19,10167,0)
ECX IV DIV EDIT^Enter/Edit IV Room Division^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10167,1,0)
^^4^4^2960319^^^
"KRN",19,10167,1,1,0)
This option allows editing of the DIVISION field (.02) of the IV
"KRN",19,10167,1,2,0)
Room file (#59.5).  The purpose of the DIVISION field is to provide
"KRN",19,10167,1,3,0)
a way to tie outpatient IV data to a Medical Center Division for DSS
"KRN",19,10167,1,4,0)
purposes.
"KRN",19,10167,25)
ED^ECXDIVIV
"KRN",19,10167,"U")
ENTER/EDIT IV ROOM DIVISION
"KRN",19,10170,-1)
0^48
"KRN",19,10170,0)
ECXQSR^QUASAR Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10170,1,0)
^^4^4^2961121^^
"KRN",19,10170,1,1,0)
This option allows you to extract Audiology and Speech Pathology
"KRN",19,10170,1,2,0)
clinic visit data for a selected date range. This data is stored
"KRN",19,10170,1,3,0)
in the QUASAR EXTRACT (#727.825) file until it is transmitted to
"KRN",19,10170,1,4,0)
the commercial vendor.
"KRN",19,10170,25)
BEG^ECXQSR
"KRN",19,10170,"U")
QUASAR EXTRACT
"KRN",19,10171,-1)
0^28
"KRN",19,10171,0)
ECX QSR SOURCE AUDIT^QUASAR (ECQ) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10171,1,0)
^^16^16^2971107^
"KRN",19,10171,1,1,0)
This option will generate a report from the QUASAR EXTRACT file
"KRN",19,10171,1,2,0)
(#727.825) which will allow the DSS extract manager to verify
"KRN",19,10171,1,3,0)
extract data before transmission to the Austin Automation Center.
"KRN",19,10171,1,4,0)
  
"KRN",19,10171,1,5,0)
The following VistA application report should be of assistance
"KRN",19,10171,1,6,0)
in the verification process:
"KRN",19,10171,1,7,0)
  
"KRN",19,10171,1,8,0)
Report Title - Audiology & Speech Pathology Procedure Statistics for
"KRN",19,10171,1,9,0)
                 All Clinicians
"KRN",19,10171,1,10,0)
               Audiology & Speech Pathology Procedure Statistics for
"KRN",19,10171,1,11,0)
                 All Other Providers
"KRN",19,10171,1,12,0)
Menu Option -  Statistics by Procedure [ACKQAS PROC STATS]
"KRN",19,10171,1,13,0)
  
"KRN",19,10171,1,14,0)
Be sure that the extract audit report and the external application
"KRN",19,10171,1,15,0)
report are generated for the same date or date range and the same
"KRN",19,10171,1,16,0)
division (if applicable).
"KRN",19,10171,25)
EN^ECXAECQ
"KRN",19,10171,"U")
QUASAR (ECQ) EXTRACT AUDIT
"KRN",19,10854,-1)
0^49
"KRN",19,10854,0)
ECXPRO^Prosthetics Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10854,1,0)
^^1^1^2990422^^
"KRN",19,10854,1,1,0)
This option will execute the Prosthetics extract.
"KRN",19,10854,10.1)
Prosthetics Extract
"KRN",19,10854,25)
BEG^ECXPRO
"KRN",19,10854,"U")
PROSTHETICS EXTRACT
"KRN",19,10855,-1)
0^29
"KRN",19,10855,0)
ECX PRO SOURCE AUDIT^Prosthetics (PRO) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10855,1,0)
^^2^2^3000302^^
"KRN",19,10855,1,1,0)
This option will generate an audit report of the prosthetics information
"KRN",19,10855,1,2,0)
that has been extracted.
"KRN",19,10855,10.1)
PRO Extract Audit
"KRN",19,10855,25)
EN^ECXAPRO
"KRN",19,10855,"U")
PROSTHETICS (PRO) EXTRACT AUDI
"KRN",19,11347,-1)
0^45
"KRN",19,11347,0)
ECXMTL^Mental Health Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11347,1,0)
^^4^4^2990527^
"KRN",19,11347,1,1,0)
This option provides the extract manager the ability to extract Mental 
"KRN",19,11347,1,2,0)
Health diagnostic data for a selected date range. This data is stored 
"KRN",19,11347,1,3,0)
in the MENTAL HEALTH EXTRACT file (#727.812) until the data is 
"KRN",19,11347,1,4,0)
transmitted to the commercial vendor.  
"KRN",19,11347,25)
BEG^ECXMTL
"KRN",19,11347,"U")
MENTAL HEALTH EXTRACT
"KRN",19,11348,-1)
0^24
"KRN",19,11348,0)
ECX MTL SOURCE AUDIT^Mental Health (MTL) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11348,1,0)
^^16^16^2990603^
"KRN",19,11348,1,1,0)
This option will generate a report from the MENTAL HEALTH EXTRACT
"KRN",19,11348,1,2,0)
file (#727.812) which will allow the DSS extract manager to
"KRN",19,11348,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,11348,1,4,0)
Center.
"KRN",19,11348,1,5,0)
  
"KRN",19,11348,1,6,0)
The following VistA application reports should be of assistance
"KRN",19,11348,1,7,0)
in the verification process:
"KRN",19,11348,1,8,0)
  
"KRN",19,11348,1,9,0)
Report Title - USAGE STATISTICS
"KRN",19,11348,1,10,0)
Menu Option -  Usage Statistics [YSMUSE]
"KRN",19,11348,1,11,0)
   
"KRN",19,11348,1,12,0)
Report Title - Addiction Severity Index Status Report
"KRN",19,11348,1,13,0)
Menu Option - Site Report by Date [YSAS MANAGEMENT REPORT]
"KRN",19,11348,1,14,0)
  
"KRN",19,11348,1,15,0)
Be sure that the extract audit report and the external application
"KRN",19,11348,1,16,0)
report are generated for the same date or date range.
"KRN",19,11348,25)
EN^ECXAMTL
"KRN",19,11348,"U")
MENTAL HEALTH (MTL) EXTRACT AU
"KRN",19,12021,-1)
0^27
"KRN",19,12021,0)
ECX PHA SOURCE AUDIT^Pharmacy Extracts Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12021,1,0)
^19.06^7^7^3020225^^^
"KRN",19,12021,1,1,0)
This menu option allows the user to select one of the three Pharmacy
"KRN",19,12021,1,2,0)
Extracts to generate a report of extract records with unusual volumes
"KRN",19,12021,1,3,0)
and/or Feeder Keys of all zeros.  At the beginning of each report, after
"KRN",19,12021,1,4,0)
the extract and date range has been specified, statistics will be
"KRN",19,12021,1,5,0)
displayed on the volume to allow the user to decide if further auditing is
"KRN",19,12021,1,6,0)
required by continuing with the Unusual Volume Report and/or the Zero
"KRN",19,12021,1,7,0)
Feeder Keys Report.
"KRN",19,12021,25)
EN^ECXAPHA
"KRN",19,12021,99)
58653,54105
"KRN",19,12021,"U")
PHARMACY EXTRACTS AUDIT
"KRN",19,12382,-1)
0^9
"KRN",19,12382,0)
ECX LAB RESULTS TRANS EDIT^Add/Edit Lab Results Translation Table^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,12382,25)
EN^ECXLRED
"KRN",19,12382,"U")
ADD/EDIT LAB RESULTS TRANSLATI
"KRN",19,12462,-1)
0^55
"KRN",19,12462,0)
ECX FISCAL YEAR EXTRACT^Extract data using chosen fiscal year logic^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,12462,1,0)
^19.06^7^7^3030915^^
"KRN",19,12462,1,1,0)
This option allows the user to run any nationally supported DSS extract
"KRN",19,12462,1,2,0)
for any timeframe using user selected fiscal year extract logic.  The
"KRN",19,12462,1,3,0)
extracts were baselined to FY 2003 logic.
"KRN",19,12462,1,4,0)
 
"KRN",19,12462,1,5,0)
Extracts for current fiscal year data using current fiscal year logic
"KRN",19,12462,1,6,0)
will go to AAC production queue; everything else goes to the AAC test 
"KRN",19,12462,1,7,0)
queue.
"KRN",19,12462,25)
EN^ECXTREX
"KRN",19,12462,"U")
EXTRACT DATA USING CHOSEN FISC
"KRN",19,12503,-1)
0^2
"KRN",19,12503,0)
ECX SUR VOL REPORT^Surgery Extract Volume Report^^R^^^^^^^^DSS EXTRACTS^^1^1
"KRN",19,12503,1,0)
^19.06^3^3^3040430^^
"KRN",19,12503,1,1,0)
This option creates a report that lists volumes for all surgical 
"KRN",19,12503,1,2,0)
cases that would be generated by the Surgery extract (SUR) for
"KRN",19,12503,1,3,0)
transmission to AAC for review.
"KRN",19,12503,15)
K FLAG
"KRN",19,12503,20)
S FLAG=1
"KRN",19,12503,25)
EN^ECXUSUR
"KRN",19,12503,"U")
SURGERY EXTRACT VOLUME REPORT
"KRN",19,12504,-1)
0^3
"KRN",19,12504,0)
ECX PRO COST REPORT^Cost by PSAS HCPC Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12504,1,0)
^19.06^2^2^3041105^^
"KRN",19,12504,1,1,0)
This option generates a report for prosthetics and it includes all
"KRN",19,12504,1,2,0)
expenditures for a given time frame.
"KRN",19,12504,25)
EN^ECXPROCT
"KRN",19,12504,"U")
COST BY PSAS HCPC REPORT
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
71^3041222^11724
"PKG",513,22,1,"PAH",1,1,0)
^^1^1^3041222
"PKG",513,22,1,"PAH",1,1,1,0)
Decision Support System's Fiscal Year 2005 updates.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
25
"RTN","ECX3P71")
0^22^B7185614
"RTN","ECX3P71",1,0)
ECX3P71 ; BPFO/JRC -  Post Utility for DSS Extracts ; 11/24/04 9:28am
"RTN","ECX3P71",2,0)
 ;;3.0;DSS EXTRACTS;**71**;Dec 22, 1997
"RTN","ECX3P71",3,0)
EN ;Main entry point
"RTN","ECX3P71",4,0)
 ;Change menu option locks
"RTN","ECX3P71",5,0)
 N MENU,PTR
"RTN","ECX3P71",6,0)
 S (MENU,PTR)=""
"RTN","ECX3P71",7,0)
 F MENU="ECXMGR","ECX MAINTENANCE","ECX TRANSMISSION","ECXSCLOAD","ECXSCEDIT","ECXSCAPPROV","ECX IV DIV EDIT","ECXLABRS","ECX LAB RESULTS TRANS EDIT" D
"RTN","ECX3P71",8,0)
 .K ECXMSG
"RTN","ECX3P71",9,0)
 .S ECXMSG(1)=" "
"RTN","ECX3P71",10,0)
 .S ECXMSG(2)=$S(MENU="ECX MAINTENANCE":"** Removing ",MENU="ECX TRANSMISSION":"** Removing ",MENU="ECXMGR":"** Removing ",1:"** Adding ")_"ECXMGR lock for "_MENU_" menu **"
"RTN","ECX3P71",11,0)
 .D MES^XPDUTL(.ECXMSG)
"RTN","ECX3P71",12,0)
 .;Order thru option file and find menu and retrieve IEN
"RTN","ECX3P71",13,0)
 .S PTR="",PTR=$O(^DIC(19,"B",MENU,PTR))
"RTN","ECX3P71",14,0)
 .I 'PTR D BMES^XPDUTL("** "_MENU_" item not found, not updated **") Q
"RTN","ECX3P71",15,0)
 .S $P(^DIC(19,PTR,0),U,6)=$S(MENU="ECX MAINTENANCE":"",MENU="ECX TRANSMISSION":"",MENU="ECXMGR":"",1:"ECXMGR")
"RTN","ECX3P71",16,0)
 D BMES^XPDUTL("**  Menu locks update completed  **")
"RTN","ECX3P71",17,0)
 ;
"RTN","ECX3P71",18,0)
 ;Remove ECX DSSDEPT DECODE menu
"RTN","ECX3P71",19,0)
 ;
"RTN","ECX3P71",20,0)
 ;Init variables
"RTN","ECX3P71",21,0)
 N MENU,SMENU,PTR,DA,DIK
"RTN","ECX3P71",22,0)
 S (MENU,SMENU,PTR)=""
"RTN","ECX3P71",23,0)
 S ECXMSG(1)=" "
"RTN","ECX3P71",24,0)
 S ECXMSG(2)="** Looking for ECX DSSDEPT DECODE menu under ECX DSSDEPT MGMT **"
"RTN","ECX3P71",25,0)
 S ECXMSG(3)="     If found, the submenu item will be deleted  "
"RTN","ECX3P71",26,0)
 D MES^XPDUTL(.ECXMSG)
"RTN","ECX3P71",27,0)
 ;Order thru option file and find ECX DSSDEPT MGMT and retrieve IEN
"RTN","ECX3P71",28,0)
 S MENU=$O(^DIC(19,"B","ECX DSSDEPT MGMT",MENU))
"RTN","ECX3P71",29,0)
 I 'MENU D BMES^XPDUTL("** ECX DSSDEPT MGMT item not found **") Q
"RTN","ECX3P71",30,0)
 ;Order thru option file and find ECX DSSDEPT DECODE and retrieve IEN
"RTN","ECX3P71",31,0)
 S SMENU=$O(^DIC(19,"B","ECX DSSDEPT DECODE",SMENU))
"RTN","ECX3P71",32,0)
 I 'SMENU D BMES^XPDUTL("** ECX DSSDEPT DECODE menu item not found **") Q
"RTN","ECX3P71",33,0)
 ;Order thru ECX DSSDEPT MGMT menu subfile check for ECX DSSDEPT DECODE
"RTN","ECX3P71",34,0)
 S PTR=($O(^DIC(19,MENU,10,"B",SMENU,PTR)))
"RTN","ECX3P71",35,0)
 I 'PTR D BMES^XPDUTL("** ECX DSSDEPT DECODE was not found as a submenu, nothing deleted **") Q
"RTN","ECX3P71",36,0)
 D BMES^XPDUTL("** ECX DSSDEPT DECODE menu found under ECX DSSDEPT MGMT **")
"RTN","ECX3P71",37,0)
 S DA(1)=MENU,DIK="^DIC(19,"_DA(1)_","_10_",",DA=PTR
"RTN","ECX3P71",38,0)
 D ^DIK
"RTN","ECX3P71",39,0)
 N ECXMSG
"RTN","ECX3P71",40,0)
 S ECXMSG(1)=" "
"RTN","ECX3P71",41,0)
 S ECXMSG(2)="*** ECX DSSDEPT DECODE menu deleted from ECX DSSDEPT MGMT menu ***"
"RTN","ECX3P71",42,0)
 D MES^XPDUTL(.ECXMSG)
"RTN","ECX3P71",43,0)
 Q
"RTN","ECXADM")
0^6^B28693799
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ; 10/25/04 10:53am
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71**;Dec 22, 1997
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 S QFLG=0
"RTN","ECXADM",10,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",11,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",12,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",13,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",14,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",15,0)
 Q
"RTN","ECXADM",16,0)
 ;
"RTN","ECXADM",17,0)
GET ;gather extract data
"RTN","ECXADM",18,0)
 N ADM,W,X,ECXNPRFI
"RTN","ECXADM",19,0)
 ;patient demographics
"RTN","ECXADM",20,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",21,0)
 Q:ECXERR
"RTN","ECXADM",22,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",23,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",24,0)
 ;admission data
"RTN","ECXADM",25,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",26,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",27,0)
 S (ECDRG,ECDIA,ECXSADM)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF
"RTN","ECXADM",28,0)
 ;use movement record date & time
"RTN","ECXADM",29,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",30,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",31,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",32,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",33,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",34,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",35,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",36,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",37,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",38,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",39,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",40,0)
 S ECXDOM=$P(ADM,U,10)
"RTN","ECXADM",41,0)
 ;
"RTN","ECXADM",42,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",43,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",44,0)
 ;
"RTN","ECXADM",45,0)
 ;- Patient Type
"RTN","ECXADM",46,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",47,0)
 ;
"RTN","ECXADM",48,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",49,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",50,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",51,0)
 Q
"RTN","ECXADM",52,0)
 ;
"RTN","ECXADM",53,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",54,0)
 N OK,X
"RTN","ECXADM",55,0)
 K ECXPAT
"RTN","ECXADM",56,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",57,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",58,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",59,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",60,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",61,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",62,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",63,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",64,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",65,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",66,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",67,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",68,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",69,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",70,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",71,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",72,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",73,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",74,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",75,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",76,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",77,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",78,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",79,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",80,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",81,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",82,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",83,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",84,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",85,0)
 ;
"RTN","ECXADM",86,0)
 ;- Agent Orange location
"RTN","ECXADM",87,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",88,0)
 ;
"RTN","ECXADM",89,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",90,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",91,0)
 ; - Race and Ethnicity
"RTN","ECXADM",92,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",93,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",94,0)
 ;
"RTN","ECXADM",95,0)
 ;get primary care data
"RTN","ECXADM",96,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",97,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",98,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",99,0)
 ;get combat veteran data
"RTN","ECXADM",100,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",101,0)
 ;get national patient record flag if exist
"RTN","ECXADM",102,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",103,0)
 Q
"RTN","ECXADM",104,0)
 ;
"RTN","ECXADM",105,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",106,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",107,0)
 N EC,EC1,ECX
"RTN","ECXADM",108,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",109,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",110,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",111,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),U)
"RTN","ECXADM",112,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",113,0)
 Q
"RTN","ECXADM",114,0)
 ;
"RTN","ECXADM",115,0)
FILE ;file the extract record
"RTN","ECXADM",116,0)
 ;node0
"RTN","ECXADM",117,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",118,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",119,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",120,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",121,0)
 ;ward^treating specialty^attending physician^mov #^DRG^diagnosis^
"RTN","ECXADM",122,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",123,0)
 ;node1
"RTN","ECXADM",124,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",125,0)
 ;admission elig^mst status^^sharing payor^
"RTN","ECXADM",126,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",127,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",128,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^enrollment
"RTN","ECXADM",129,0)
 ;priority^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",130,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",131,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",132,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",133,0)
 ;national patient record flag ECXNPRFI
"RTN","ECXADM",134,0)
 N DA,DIK
"RTN","ECXADM",135,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",136,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",137,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",138,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",139,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",140,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",141,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",142,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",143,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXATNPI_U_ECPTNPI_U_ECXPRNPI_U_ELGA_U
"RTN","ECXADM",144,0)
 S ECODE1=ECODE1_ECXMST_U_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",145,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",146,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",147,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",148,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",149,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",150,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXADM",151,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",152,0)
 Q
"RTN","ECXADM",153,0)
 ;
"RTN","ECXADM",154,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",155,0)
 S ECHEAD="ADM"
"RTN","ECXADM",156,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",157,0)
 Q
"RTN","ECXADM",158,0)
 ;
"RTN","ECXADM",159,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",160,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",161,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",162,0)
 ;
"RTN","ECXADM",163,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",164,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",165,0)
 ;
"RTN","ECXEC")
0^11^B33547078
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  [ 02/14/97   2:26 PM ] ; 12/2/04 12:35pm
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71**;Dec 22, 1997
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI
"RTN","ECXEC",10,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",11,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",12,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",13,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",14,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",15,0)
 Q
"RTN","ECXEC",16,0)
 ;
"RTN","ECXEC",17,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",18,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",19,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",20,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",21,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",22,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9)
"RTN","ECXEC",23,0)
 Q:ECP']""
"RTN","ECXEC",24,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",25,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",26,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",27,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) S:ICD9="" ICD9=" "
"RTN","ECXEC",28,0)
 S ECXICD9=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",29,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",30,0)
 S (CNT,I)=0
"RTN","ECXEC",31,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",32,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",33,0)
 ..S I=I+1,@("ECXICD9"_I)=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",34,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",35,0)
 ;set to send data to pce
"RTN","ECXEC",36,0)
 S ECAC=$P($G(ECCH),U,19)
"RTN","ECXEC",37,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",38,0)
 ;from the clinic stop codes
"RTN","ECXEC",39,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",40,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",41,0)
 .D:+ECAC
"RTN","ECXEC",42,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",43,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",44,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",45,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",46,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",47,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",48,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",49,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",50,0)
 ;from the dss unit
"RTN","ECXEC",51,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",52,0)
 .I +ECUSTOP D
"RTN","ECXEC",53,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),U,2)
"RTN","ECXEC",54,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S="000"
"RTN","ECXEC",55,0)
 .I 'ECUSTOP D
"RTN","ECXEC",56,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",57,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",58,0)
 I ECXLOGIC>2003 I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",59,0)
 S ECXDIV=""
"RTN","ECXEC",60,0)
 ;
"RTN","ECXEC",61,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",62,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",63,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",64,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXEC",65,0)
 S ECU=$P(ECCH,U,11)
"RTN","ECXEC",66,0)
 S:$L(ECU) ECXPPC1=$$PRVCLASS^ECXUTL(ECU,ECDT),ECU1A="2"_$P(ECU,";")
"RTN","ECXEC",67,0)
 S ECU2=$P(ECCH,U,15)
"RTN","ECXEC",68,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",69,0)
 S ECU3=$P(ECCH,U,17)
"RTN","ECXEC",70,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",71,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",72,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",73,0)
 D:ECP[";"
"RTN","ECXEC",74,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",75,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",76,0)
 S ECPCE=$G(^ECH(ECDA,"P"))
"RTN","ECXEC",77,0)
 S ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2),ECPCE3=$P(ECPCE,U,3)
"RTN","ECXEC",78,0)
 S ECPCE4=$P(ECPCE,U,4),ECPCE5=$P(ECPCE,U,5),ECPCE6=$P(ECPCE,U,6)
"RTN","ECXEC",79,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N"),ECXMST=$P(ECPCE,U,9)
"RTN","ECXEC",80,0)
 S ECXCMOD=""
"RTN","ECXEC",81,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",82,0)
 .S MOD=0,M=""
"RTN","ECXEC",83,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",84,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",85,0)
 .K MOD,M
"RTN","ECXEC",86,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",87,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",88,0)
 ;
"RTN","ECXEC",89,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",90,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",91,0)
 ;
"RTN","ECXEC",92,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",93,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",94,0)
 ;
"RTN","ECXEC",95,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",96,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",97,0)
 ;
"RTN","ECXEC",98,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",99,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",100,0)
 ;
"RTN","ECXEC",101,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",102,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,ECCS)
"RTN","ECXEC",103,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",104,0)
 Q
"RTN","ECXEC",105,0)
 ;
"RTN","ECXEC",106,0)
FILE ;file record in #727.815
"RTN","ECXEC",107,0)
 ;node0
"RTN","ECXEC",108,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name^i/o status ECXA^day^
"RTN","ECXEC",109,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",110,0)
 ;cost center ECCS^ordering sec ECO^section ^
"RTN","ECXEC",111,0)
 ;provider ECU1A^^prov 2 ECU2A^^prov 3 ECU3A^^^mov # ECXMN^
"RTN","ECXEC",112,0)
 ;treat spec ECXTS^time ECTM^
"RTN","ECXEC",113,0)
 ;primary care team^primary care provider^pce cpt code (ECXCPT)^
"RTN","ECXEC",114,0)
 ;primary icd-9 code ICD9^secondary icd-9 ICD91^secondary icd-9 ICD92^
"RTN","ECXEC",115,0)
 ;secondary icd-9 ICD93^secondary icd-9 ICD94^
"RTN","ECXEC",116,0)
 ;agent orange^radiation exposure ECPCC3^
"RTN","ECXEC",117,0)
 ;environmental contaminants ECPTTM^service connected ECPTPR^
"RTN","ECXEC",118,0)
 ;sent to pce ECPCE^^dss identifier ECDSS^dss dept
"RTN","ECXEC",119,0)
 ;node1
"RTN","ECXEC",120,0)
 ;mpi ECXMPI^dss dept ECXDSSD^provider npi ECXPRV2^
"RTN","ECXEC",121,0)
 ;provider #2 npi ECU2NPI^provider #3 npi ECU3NPI^^
"RTN","ECXEC",122,0)
 ;pc provider npi ECPTNPI^pc prov person class ECCLAS^
"RTN","ECXEC",123,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",124,0)
 ;assoc pc prov npi ECASNPI^
"RTN","ECXEC",125,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",126,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",127,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",128,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",129,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",130,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",131,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",132,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",133,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",134,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",135,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date
"RTN","ECXEC",136,0)
 ;ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",137,0)
 ;ECXNPRFI
"RTN","ECXEC",138,0)
 N DA,DIK
"RTN","ECXEC",139,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",140,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",141,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",142,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",143,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",144,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",145,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",146,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",147,0)
 S ECODE=ECODE_ECXICD94_U_ECPCE3_U_ECPCE4_U_ECPCE5_U
"RTN","ECXEC",148,0)
 S ECODE=ECODE_ECPCE6_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",149,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI_U_ECCLAS_U
"RTN","ECXEC",150,0)
 S ECODE1=ECODE1_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDIV_U
"RTN","ECXEC",151,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",152,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",153,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",154,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",155,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",156,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",157,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",158,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXEC",159,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",160,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",161,0)
 Q
"RTN","ECXEC",162,0)
 ;
"RTN","ECXEC",163,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",164,0)
 S ECHEAD="ECS"
"RTN","ECXEC",165,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",166,0)
 Q
"RTN","ECXEC",167,0)
 ;
"RTN","ECXEC",168,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",169,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABN")
0^19^B25403120
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ; 9/20/04 3:03pm
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71**;Dec 22, 1997
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2),ECDOCNPI=""
"RTN","ECXLABN",25,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .I EC]"" D GET
"RTN","ECXLABN",27,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",28,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",29,0)
 Q
"RTN","ECXLABN",30,0)
 ;
"RTN","ECXLABN",31,0)
GET ;get data
"RTN","ECXLABN",32,0)
 N X,ECXSTN
"RTN","ECXLABN",33,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",34,0)
 S ECIFN=$P(EC,";")
"RTN","ECXLABN",35,0)
 ;resolve ecloc
"RTN","ECXLABN",36,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",37,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",38,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",39,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",40,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",41,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",42,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",43,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",44,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",45,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",46,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",47,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",48,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR)
"RTN","ECXLABN",49,0)
 Q:ECXERR
"RTN","ECXLABN",50,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",51,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL" I $D(^LRT(67,ECIFN,0)) D
"RTN","ECXLABN",52,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",53,0)
 .S ECSN=$P(EC0,U,9) D
"RTN","ECXLABN",54,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",55,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",56,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",57,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",59,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",60,0)
 ;
"RTN","ECXLABN",61,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",62,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",63,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",64,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",65,0)
 ;
"RTN","ECXLABN",66,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",67,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",68,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",69,0)
 ;
"RTN","ECXLABN",70,0)
 ;- Get Production Division
"RTN","ECXLABN",71,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECINST) ;p-46
"RTN","ECXLABN",72,0)
 ;
"RTN","ECXLABN",73,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",74,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",75,0)
 ;
"RTN","ECXLABN",76,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",77,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",78,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",79,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",80,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",81,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",82,0)
 .D FILE
"RTN","ECXLABN",83,0)
 Q
"RTN","ECXLABN",84,0)
 ;
"RTN","ECXLABN",85,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",86,0)
 N X,OK,PT
"RTN","ECXLABN",87,0)
 ;get data
"RTN","ECXLABN",88,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",89,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",90,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXLABN",91,0)
 ;set data and save for later
"RTN","ECXLABN",92,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",93,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;",.ECXPAT)
"RTN","ECXLABN",94,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",95,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",96,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI
"RTN","ECXLABN",97,0)
 ;get date specific data
"RTN","ECXLABN",98,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4)
"RTN","ECXLABN",99,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",100,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",101,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",102,0)
 Q
"RTN","ECXLABN",103,0)
 ;
"RTN","ECXLABN",104,0)
FILE ;file record
"RTN","ECXLABN",105,0)
 ;node0
"RTN","ECXLABN",106,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",107,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",108,0)
 ;location^provider and file^
"RTN","ECXLABN",109,0)
 ;movement number^file^time^workload code^primary care team^
"RTN","ECXLABN",110,0)
 ;primary care provider
"RTN","ECXLABN",111,0)
 ;node1
"RTN","ECXLABN",112,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^
"RTN","ECXLABN",113,0)
 ;assoc pc prov^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",114,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",115,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",116,0)
 ;ECXPDIV^^ordering provider person class
"RTN","ECXLABN",117,0)
 ;ECDOCPC
"RTN","ECXLABN",118,0)
 N DA,DIK
"RTN","ECXLABN",119,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",120,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U
"RTN","ECXLABN",121,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",122,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",123,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",124,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",125,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECDOCNPI_U_ECPTNPI_U_ECCLAS_U_ECASPR_U
"RTN","ECXLABN",126,0)
 S ECODE1=ECODE1_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",127,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",128,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",129,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABN",130,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",131,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",132,0)
 Q
"RTN","ECXLABN",133,0)
 ;
"RTN","ECXLABN",134,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",135,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",136,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",137,0)
 Q
"RTN","ECXLABN",138,0)
 ;
"RTN","ECXLABN",139,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",140,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABR")
0^17^B19769512
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ; 11/10/04 11:23am
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,37,39,46,71**;Dec 22, 1997
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N X,OK,ECTRS,ECTRANS,ECTRIEN,ECDOC,ECDOCPC
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;build local array of workload codes for local lab tests linked to
"RTN","ECXLABR",15,0)
 ;DSS tests
"RTN","ECXLABR",16,0)
 K ECLOC S ECDTST=0
"RTN","ECXLABR",17,0)
 F  S ECDTST=$O(^ECX(727.2,1,1,ECDTST)) Q:('ECDTST)  S ECLTST=0 D
"RTN","ECXLABR",18,0)
 .F  S ECLTST=$O(^ECX(727.2,1,1,ECDTST,"LOC",ECLTST)) Q:'ECLTST  D
"RTN","ECXLABR",19,0)
 ..S ECLTIEN=+^ECX(727.2,1,1,ECDTST,"LOC",ECLTST,0)
"RTN","ECXLABR",20,0)
 ..S ECWCDA=+$G(^LAB(60,ECLTIEN,64))
"RTN","ECXLABR",21,0)
 ..I ECWCDA S ECWC=$P(^LAM(ECWCDA,0),U,2),ECLOC(ECWCDA)=ECWC
"RTN","ECXLABR",22,0)
 K ECLTIEN
"RTN","ECXLABR",23,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",24,0)
 S QFLG=0,ECLRN=1
"RTN","ECXLABR",25,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)  D
"RTN","ECXLABR",26,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",27,0)
 ..S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",28,0)
 ..Q:ECF=""
"RTN","ECXLABR",29,0)
 ..S ECXDFN=$P(EC1,U,3),ECPTPR=$P($G(EC1),U,11),ECCLASS=""
"RTN","ECXLABR",30,0)
 ..S ECXTIME=$S($P(EC1,U,10)="":"000300",1:$P(EC1,U,10))
"RTN","ECXLABR",31,0)
 ..S ECXDATE=$P(EC1,U,9)_"."_$P(EC1,U,10)
"RTN","ECXLABR",32,0)
 ..I ECPTPR S ECCLASS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXLABR",33,0)
 ..S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM)
"RTN","ECXLABR",34,0)
 ..S ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5))
"RTN","ECXLABR",35,0)
 ..S ECREDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",36,0)
 ..S ECRETM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",37,0)
 ..S ECSCDT=$$ECXDATE^ECXUTL($P(EC1,U,9),ECXYM)
"RTN","ECXLABR",38,0)
 ..S ECSCTM=$$ECXTIME^ECXUTL($P(EC1,U,9)_"."_$P(EC1,U,10))
"RTN","ECXLABR",39,0)
 ..S (ECXADMDT,ECXDOM,ECXDSSD,ECXPNM,ECXSSN,ECXA,ECXMN,ECXTS)=""
"RTN","ECXLABR",40,0)
 ..I ECF=2 D  Q:'OK
"RTN","ECXLABR",41,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;",.ECXPAT)
"RTN","ECXLABR",42,0)
 ...Q:'OK
"RTN","ECXLABR",43,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABR",44,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXADMDT=$P(X,U,4)
"RTN","ECXLABR",45,0)
 ...S ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXLABR",46,0)
 ..;allow for referral patients in future??
"RTN","ECXLABR",47,0)
 ..;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",48,0)
 ..;loop on results multiple
"RTN","ECXLABR",49,0)
 ..;
"RTN","ECXLABR",50,0)
 ..;Get production division ;p-46
"RTN","ECXLABR",51,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECINST) ;p-46
"RTN","ECXLABR",52,0)
 ..;- Observation patient indicator (y/n)
"RTN","ECXLABR",53,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXLABR",54,0)
 ..;
"RTN","ECXLABR",55,0)
 ..;- If no encounter number don't file record
"RTN","ECXLABR",56,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,$P(EC1,U,9),ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABR",57,0)
 ..S ECRES=0
"RTN","ECXLABR",58,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  D
"RTN","ECXLABR",59,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",60,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0),ECN=$P(EC2,U),ECRS=$P(EC2,U,2)
"RTN","ECXLABR",61,0)
 ....S ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4)
"RTN","ECXLABR",62,0)
 ....S ECWC=$S($D(ECLOC(ECWC)):ECLOC(ECWC),1:"")
"RTN","ECXLABR",63,0)
 ....;
"RTN","ECXLABR",64,0)
 ....; - Free text results translation
"RTN","ECXLABR",65,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXLABR",66,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXLABR",67,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXLABR",68,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXLABR",69,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXLABR",70,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXLABR",71,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABR",72,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXLABR",73,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:5)
"RTN","ECXLABR",74,0)
 ....;
"RTN","ECXLABR",75,0)
 ....I ECWC]"" D FILE
"RTN","ECXLABR",76,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",77,0)
 Q
"RTN","ECXLABR",78,0)
 ;
"RTN","ECXLABR",79,0)
FILE ;file record
"RTN","ECXLABR",80,0)
 ;node0
"RTN","ECXLABR",81,0)
 ;facility (ECINST)^dfn (ECXDFN)^ssn (ECXSSN)^name(ECXPNM)^in/out (ECXA)^
"RTN","ECXLABR",82,0)
 ;day(ECSCDT)^
"RTN","ECXLABR",83,0)
 ;lab test code (ECN)^results (ECRS)^hi/lo indicator (ECHL)^
"RTN","ECXLABR",84,0)
 ;date ordered (ECORDT)^time ordered (ECORTM)^date ready (ECREDT)^
"RTN","ECXLABR",85,0)
 ;time ready (ECRETM)^
"RTN","ECXLABR",86,0)
 ;movement file # (ECXMN)^treating specialty (ECXTS)^
"RTN","ECXLABR",87,0)
 ;workload code(ECWC)^
"RTN","ECXLABR",88,0)
 ;node1
"RTN","ECXLABR",89,0)
 ;mpi (ECXMPI)^dss dept (ECXDSSD)^dom (ECXDOM)^time (ECSCTM)^
"RTN","ECXLABR",90,0)
 ;observ pat ind (ECXOBS)^encounter num (ECXENC)^prod div ECXPDIV^
"RTN","ECXLABR",91,0)
 ;lab results translation ECXTRANS^ordering provider (ECPTPR)^
"RTN","ECXLABR",92,0)
 ;ordering provider person class (ECCLASS)
"RTN","ECXLABR",93,0)
 N DA,DIK
"RTN","ECXLABR",94,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",95,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXLABR",96,0)
 S ECODE=ECODE_ECSCDT_U_$$RJ^XLFSTR(ECN,4,0)_U_ECRS_U_ECHL_U_ECORDT_U
"RTN","ECXLABR",97,0)
 S ECODE=ECODE_$$LJ^XLFSTR(ECORTM,6,0)_U
"RTN","ECXLABR",98,0)
 S ECODE=ECODE_ECREDT_U_$$LJ^XLFSTR(ECRETM,6,0)_U_ECXMN_U_ECXTS_U_ECWC_U
"RTN","ECXLABR",99,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECSCTM_U_ECXOBS_U_ECXENC_U_ECXPDIV_U_ECTRANS
"RTN","ECXLABR",100,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_2_ECPTPR_U_ECCLASS
"RTN","ECXLABR",101,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",102,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABR",103,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",104,0)
 Q
"RTN","ECXLABR",105,0)
 ;
"RTN","ECXLABR",106,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",107,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",108,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",109,0)
 Q
"RTN","ECXLABR",110,0)
 ;
"RTN","ECXLABR",111,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",112,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMTL")
0^8^B31171168
"RTN","ECXMTL",1,0)
ECXMTL ;ALB/JAP - DSS Mental Health Extract ; 11/24/04 10:09am
"RTN","ECXMTL",2,0)
 ;;3.0;DSS EXTRACTS;**24,30,33,39,46,49,71**;Dec 22, 1997
"RTN","ECXMTL",3,0)
 ;
"RTN","ECXMTL",4,0)
BEG ;entry point from option
"RTN","ECXMTL",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMTL",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMTL",7,0)
 Q
"RTN","ECXMTL",8,0)
 ;
"RTN","ECXMTL",9,0)
START ;entry point from tasked job
"RTN","ECXMTL",10,0)
 S QFLG=0
"RTN","ECXMTL",11,0)
 ;get first record #
"RTN","ECXMTL",12,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1)
"RTN","ECXMTL",13,0)
 ;call mh/dss api for extract record creation
"RTN","ECXMTL",14,0)
 ;variables ecfile,ecxym,ecinst,ecsd,eced passed in by taskmanager
"RTN","ECXMTL",15,0)
 S ECXSEQ=EC7,ECXECX=$P(EC23,U,2),ECXERR=0
"RTN","ECXMTL",16,0)
 ;call mh api to create extract records
"RTN","ECXMTL",17,0)
 S X="YSDSS" X ^%ZOSF("TEST") I '$T S QFLG=1 Q
"RTN","ECXMTL",18,0)
 D UPD^YSDSS(ECFILE,.ECXSEQ,ECXYM,ECXECX,ECINST,ECSD,ECED,.ECXERR)
"RTN","ECXMTL",19,0)
 Q:ECXERR
"RTN","ECXMTL",20,0)
 Q:QFLG
"RTN","ECXMTL",21,0)
 ;if no error, continue
"RTN","ECXMTL",22,0)
 D UPDATE
"RTN","ECXMTL",23,0)
 Q
"RTN","ECXMTL",24,0)
 ;
"RTN","ECXMTL",25,0)
UPDATE ;add non-mh data to each record created by mh api
"RTN","ECXMTL",26,0)
 N ECXADT,JJ,ECXNPRFI
"RTN","ECXMTL",27,0)
 S EC7=EC7+1
"RTN","ECXMTL",28,0)
 F JJ=EC7:1:ECXSEQ Q:QFLG  D
"RTN","ECXMTL",29,0)
 .Q:'$D(^ECX(ECFILE,JJ,0))
"RTN","ECXMTL",30,0)
 .S ECXDFN=$P(^ECX(ECFILE,JJ,0),U,5),ECXDATE=$P(^ECX(ECFILE,JJ,0),U,9),ECXPRV=$P(^ECX(ECFILE,JJ,0),U,18)
"RTN","ECXMTL",31,0)
 .S ECXSCNUM=$P(^ECX(ECFILE,JJ,0),U,23),ECXSCNAM=$P(^ECX(ECFILE,JJ,0),U,24)
"RTN","ECXMTL",32,0)
 .D PAT(ECXDFN,ECXDATE)
"RTN","ECXMTL",33,0)
 .S (ECXPRCLS,ECXPRNPI,ECXDIV)="" I ECXPRV D PROV(.ECXPRV,ECXDATE)
"RTN","ECXMTL",34,0)
 .S ECXDSSI=""
"RTN","ECXMTL",35,0)
 .I ECXLOGIC>2003 D
"RTN","ECXMTL",36,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXMTL",37,0)
 .;
"RTN","ECXMTL",38,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXMTL",39,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXMTL",40,0)
 .;
"RTN","ECXMTL",41,0)
 .;- set national patient record flag if exist
"RTN","ECXMTL",42,0)
 .D NPRF^ECXUTL5
"RTN","ECXMTL",43,0)
 .;
"RTN","ECXMTL",44,0)
 .;- If no encounter number don't file record
"RTN","ECXMTL",45,0)
 .S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXMTL",46,0)
 .S ECD=ECXDATE,ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXMTL",47,0)
 .;adjust scale name & scale number
"RTN","ECXMTL",48,0)
 .S ECXSCNAM=$E(ECXSCNAM,1,10)
"RTN","ECXMTL",49,0)
 .I ECXSCNUM]"",ECXSCNUM'=+ECXSCNUM S ECXSCNUM=+$E(ECXSCNUM,2,99)
"RTN","ECXMTL",50,0)
 .N ECXDEPT S ECXDEPT="" ;dss department use postponed S ECXDEPT=$$MTL^ECXDEPT(ECXDIV,ECXSCNAM,ECINST) ;p-46 line added
"RTN","ECXMTL",51,0)
 .N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV) ;p-46 line added
"RTN","ECXMTL",52,0)
 .;Set division to external value if extract is for FY05 or higher
"RTN","ECXMTL",53,0)
 .I ECXLOGIC>2004 S ECXDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXMTL",54,0)
 .D FILE
"RTN","ECXMTL",55,0)
 Q
"RTN","ECXMTL",56,0)
 ;
"RTN","ECXMTL",57,0)
PAT(ECXDFN,ECXDATE) ;determine in/outpatient status, demographics, primary care
"RTN","ECXMTL",58,0)
 N OK
"RTN","ECXMTL",59,0)
 S (ECXADT,ECXPNM,ECXSSN,ECXMPI)=""
"RTN","ECXMTL",60,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;3;5;",.ECXPAT)
"RTN","ECXMTL",61,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMTL",62,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXMTL",63,0)
 ;
"RTN","ECXMTL",64,0)
 ;- Purple Heart Indicator, Period of Service, Agent Orange Location
"RTN","ECXMTL",65,0)
 S ECXPHI=$G(ECXPAT("PHI")),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL")
"RTN","ECXMTL",66,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXMTL",67,0)
 ;Combat Veteran Status
"RTN","ECXMTL",68,0)
 S X3=$$CVEDT^ECXUTL5(ECXDFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXMTL",69,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXMTL",70,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXMTL",71,0)
 ; - Race and Ethnicity
"RTN","ECXMTL",72,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXMTL",73,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXMTL",74,0)
 ;get primary care data
"RTN","ECXMTL",75,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE),ECPTTM=$P(X,U)
"RTN","ECXMTL",76,0)
 S ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXMTL",77,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXMTL",78,0)
 ;get inpatient data
"RTN","ECXMTL",79,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMTL",80,0)
 S ECXA=$P(X,U),(ECXADT,ECXADMDT)=$P($P(X,U,4),"."),ECXDCDT=$P($P(X,U,6),".")
"RTN","ECXMTL",81,0)
 S ECXWPRV=$P(X,U,7),ECXATT=$P(X,U,8)
"RTN","ECXMTL",82,0)
 I ECXADMDT S ECXADMDT=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXMTL",83,0)
 I ECXDCDT S ECXDCDT=$$ECXDATE^ECXUTL(ECXDCDT,ECXYM)
"RTN","ECXMTL",84,0)
 Q
"RTN","ECXMTL",85,0)
 ;
"RTN","ECXMTL",86,0)
PROV(ECXPRV,ECXDATE) ;get provider data
"RTN","ECXMTL",87,0)
 N INST,DGIEN,ARR,DIC,DR,DA,DIQ
"RTN","ECXMTL",88,0)
 S ECXPRCLS=$$PRVCLASS^ECXUTL(ECXPRV,ECXDATE)
"RTN","ECXMTL",89,0)
 S ECXPRNPI=""
"RTN","ECXMTL",90,0)
 ;get division identifier using provider
"RTN","ECXMTL",91,0)
 S ECXDIV=""
"RTN","ECXMTL",92,0)
 S IEN=0 F  D  Q:'IEN  Q:'INST  Q:ECXDIV
"RTN","ECXMTL",93,0)
 .;get pointer to file #4 from provider record
"RTN","ECXMTL",94,0)
 .I '$D(^VA(200,ECXPRV,0)) Q
"RTN","ECXMTL",95,0)
 .S IEN=$O(^VA(200,ECXPRV,2,IEN))
"RTN","ECXMTL",96,0)
 .Q:'IEN
"RTN","ECXMTL",97,0)
 .S DIC="^VA(200,",DR="16",DA=ECXPRV
"RTN","ECXMTL",98,0)
 .S DR(200.02)=".01",DA(200.02)=IEN,DIQ="ARR",DIQ(0)="I"
"RTN","ECXMTL",99,0)
 .D EN^DIQ1
"RTN","ECXMTL",100,0)
 .S INST=$G(ARR(200.02,IEN,.01,"I"))
"RTN","ECXMTL",101,0)
 .Q:'INST
"RTN","ECXMTL",102,0)
 .;get medical center division
"RTN","ECXMTL",103,0)
 .S DGIEN=$O(^DG(40.8,"AD",INST,0)) I DGIEN D
"RTN","ECXMTL",104,0)
 ..S ECXDIV=$P($G(^ECX(727.3,DGIEN,0)),U,2)
"RTN","ECXMTL",105,0)
 S ECXPRV="2"_ECXPRV
"RTN","ECXMTL",106,0)
 Q
"RTN","ECXMTL",107,0)
 ;
"RTN","ECXMTL",108,0)
FILE ;file record in #727.812
"RTN","ECXMTL",109,0)
 ;node0
"RTN","ECXMTL",110,0)
 ;facility^dfn^ssn ECXSSN^name ECXPNM^i/o status ECXA^
"RTN","ECXMTL",111,0)
 ;day ECXDATE^division ECXDIV^admit date ECXADMDT^
"RTN","ECXMTL",112,0)
 ;d/c date ECXDCDT^dss id ECXDSSI^pc team ECPTTM^pc provider ECPTPR^
"RTN","ECXMTL",113,0)
 ;pc provider npi ECPTNPI^pc prov person class ECCLAS^
"RTN","ECXMTL",114,0)
 ;provider ECXPRV^provider npi ECXPRNPI^prov person class ECXPRCLS^
"RTN","ECXMTL",115,0)
 ;test name ECXSCNAM(?)^test ien ECXSCNUM(?)^scale number^scale name^
"RTN","ECXMTL",116,0)
 ;test score^scale score^attend phys^ward provider
"RTN","ECXMTL",117,0)
 ;node1
"RTN","ECXMTL",118,0)
 ;mpi^assoc pc provider^assoc pc provider npi^
"RTN","ECXMTL",119,0)
 ;assoc pc prov person class^asi class^asi special^asi encounter date^
"RTN","ECXMTL",120,0)
 ;purple heart ind.^dom prrtp & saartp ind.^enrollment cat^
"RTN","ECXMTL",121,0)
 ;enrollment stat^enrollment prior^period of serv.^obs. pat ind.^
"RTN","ECXMTL",122,0)
 ;encounter num^agent orange loc^dob^production division^dss
"RTN","ECXMTL",123,0)
 ;department ECXDEPT^head & neck canc. indi.^ethnicity^race1^^
"RTN","ECXMTL",124,0)
 ;enrollment prior ECXPRIOR_enrollment subgroup
"RTN","ECXMTL",125,0)
 ;ECXSBGRP^enrollee user ECXUESTA^division ECXDIV^patient type
"RTN","ECXMTL",126,0)
 ;ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXMTL",127,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI
"RTN","ECXMTL",128,0)
 N DA,DIK,STR
"RTN","ECXMTL",129,0)
 I $P(^ECX(ECFILE,JJ,0),U,21)="ASI" S $P(^ECX(ECFILE,JJ,1),U,7)=ECXDATE
"RTN","ECXMTL",130,0)
 S $P(^ECX(ECFILE,JJ,0),U,6,9)=ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE
"RTN","ECXMTL",131,0)
 S STR=$S(ECXLOGIC<2005:ECXDIV,1:"")_U_ECXADMDT_U_ECXDCDT_U_ECXDSSI_U_ECPTTM_U_ECPTPR_U
"RTN","ECXMTL",132,0)
 S STR=STR_ECPTNPI_U_ECCLAS,$P(^ECX(ECFILE,JJ,0),U,10,17)=STR,STR=""
"RTN","ECXMTL",133,0)
 S $P(^ECX(ECFILE,JJ,0),U,18,20)=ECXPRV_U_ECXPRNPI_U_ECXPRCLS
"RTN","ECXMTL",134,0)
 S $P(^ECX(ECFILE,JJ,0),U,23,24)=ECXSCNUM_U_ECXSCNAM
"RTN","ECXMTL",135,0)
 S $P(^ECX(ECFILE,JJ,0),U,27,29)=ECXATT_U_ECXWPRV_U
"RTN","ECXMTL",136,0)
 I '$D(^ECX(ECFILE,JJ,1)) S ^ECX(727.812,JJ,1)="^^^^^"
"RTN","ECXMTL",137,0)
 S $P(^ECX(ECFILE,JJ,1),U,1,4)=ECXMPI_U_ECASPR_U_ECASNPI_U_ECCLAS2
"RTN","ECXMTL",138,0)
 S STR=ECXPHI_U_ECXDOM_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U
"RTN","ECXMTL",139,0)
 S STR=STR_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXDOB_U_ECXPDIV_U_ECXDEPT_U
"RTN","ECXMTL",140,0)
 S STR=STR_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXMTL",141,0)
 I ECXLOGIC>2004 S STR=STR_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXDIV_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXMTL",142,0)
 S $P(^ECX(ECFILE,JJ,1),U,8,22)=STR
"RTN","ECXMTL",143,0)
 S DA=JJ,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMTL",144,0)
 S ECRN=ECRN+1
"RTN","ECXMTL",145,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMTL",146,0)
 Q
"RTN","ECXMTL",147,0)
 ;
"RTN","ECXMTL",148,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMTL",149,0)
 S ECHEAD="MTL"
"RTN","ECXMTL",150,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMTL",151,0)
 Q
"RTN","ECXMTL",152,0)
 ;
"RTN","ECXMTL",153,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXMTL",154,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXMTL",155,0)
 Q
"RTN","ECXNURS")
0^26^B41257332
"RTN","ECXNURS",1,0)
ECXNURS ;ALB/JAP,BIR/DMA,PTD-Nursing Extract for DSS ; 11/5/04 7:03am
"RTN","ECXNURS",2,0)
 ;;3.0;DSS EXTRACTS;**8,14,22,24,33,39,46,71**;Dec 22, 1997
"RTN","ECXNURS",3,0)
BEG ;entry point from option
"RTN","ECXNURS",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXNURS",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXNURS",6,0)
 Q
"RTN","ECXNURS",7,0)
 ;
"RTN","ECXNURS",8,0)
START ;entry when queued
"RTN","ECXNURS",9,0)
 ;store in ^tmp by patient and date/time
"RTN","ECXNURS",10,0)
 N CNT,INP,FIRSTDAY,LASTDAY
"RTN","ECXNURS",11,0)
 S QFLG=0,CNT=0
"RTN","ECXNURS",12,0)
 K ^TMP("ECX",$J)
"RTN","ECXNURS",13,0)
 S FIRSTDAY=$P(ECSD1,".")+1,LASTDAY=$P(ECED,".")
"RTN","ECXNURS",14,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXNURS",15,0)
 F  S ECD=$O(^NURSA(214.6,"B",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  D  Q:QFLG
"RTN","ECXNURS",16,0)
 .F  S ECDA=$O(^NURSA(214.6,"B",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXNURS",17,0)
 ..K LOC S DIC=214.6,DIQ(0)="I",DA=ECDA,DIQ="LOC",DR=".01;.02;1;3;4;6;7;8"
"RTN","ECXNURS",18,0)
 ..D EN^DIQ1 K DIQ,DIC,DA,DR
"RTN","ECXNURS",19,0)
 ..F J=.01,.02,1,3,4,6,7,8 S EC(J)=LOC(214.6,ECDA,J,"I")
"RTN","ECXNURS",20,0)
 ..Q:EC(8)'=""
"RTN","ECXNURS",21,0)
 ..S INP=$$INP^ECXUTL2(EC(.02),EC(.01))
"RTN","ECXNURS",22,0)
 ..;
"RTN","ECXNURS",23,0)
 ..;- Don't create ^TMP record if outpatient and no treat spec
"RTN","ECXNURS",24,0)
 ..Q:$P(INP,U)="O"&($P(INP,U,3)="")
"RTN","ECXNURS",25,0)
 ..; retain latest classification per day per patient
"RTN","ECXNURS",26,0)
 ..S ^TMP("ECX",$J,EC(.02),$P(EC(.01),"."))=EC(1)_U_EC(3)_U_EC(4)_U_EC(6)_U_EC(7)_U_$P(INP,U,1,6)_U_EC(.01)_U_$P(INP,U,10)
"RTN","ECXNURS",27,0)
 ..K LOC(214.6,ECDA),EC,INP
"RTN","ECXNURS",28,0)
 ..S CNT=CNT+1
"RTN","ECXNURS",29,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXNURS",30,0)
 I QFLG K ^TMP("ECX",$J) Q
"RTN","ECXNURS",31,0)
 D RESOLVE
"RTN","ECXNURS",32,0)
 D FILE
"RTN","ECXNURS",33,0)
 K ^TMP("ECX",$J)
"RTN","ECXNURS",34,0)
 ;
"RTN","ECXNURS",35,0)
RESOLVE ;process ^tmp by patient
"RTN","ECXNURS",36,0)
 N DFN,TM,ECD,ECDPREV,ECDNEW,OLDWARD,NEWWARD,NEWDT
"RTN","ECXNURS",37,0)
 S DFN=0
"RTN","ECXNURS",38,0)
 F  S DFN=$O(^TMP("ECX",$J,DFN)) S ECD=0 Q:'DFN  D
"RTN","ECXNURS",39,0)
 .;remove any classifications for day of discharge
"RTN","ECXNURS",40,0)
 .F  S ECD=$O(^TMP("ECX",$J,DFN,ECD)) Q:'ECD  D
"RTN","ECXNURS",41,0)
 ..I ECD=$P($P(^TMP("ECX",$J,DFN,ECD),U,11),".") K ^TMP("ECX",$J,DFN,ECD)
"RTN","ECXNURS",42,0)
 .;proceed only if ^tmp remains
"RTN","ECXNURS",43,0)
 .Q:'$D(^TMP("ECX",$J,DFN))
"RTN","ECXNURS",44,0)
 .;proceed with fill-in only if processing more than 3 days' data
"RTN","ECXNURS",45,0)
 .Q:LASTDAY<(FIRSTDAY+2)
"RTN","ECXNURS",46,0)
 .;fill-in records for any missing days per inpatient episode
"RTN","ECXNURS",47,0)
 .K TM S ECD=0
"RTN","ECXNURS",48,0)
 .F  S ECD=$O(^TMP("ECX",$J,DFN,ECD)) Q:'ECD   D
"RTN","ECXNURS",49,0)
 ..S TM(ECD)=$P(^TMP("ECX",$J,DFN,ECD),U,9)
"RTN","ECXNURS",50,0)
 .S (ECD,ECDPREV)=0
"RTN","ECXNURS",51,0)
 .F  S ECD=$O(TM(ECD)) Q:'ECD  D
"RTN","ECXNURS",52,0)
 ..I ECDPREV=0 S ECDPREV=ECD Q
"RTN","ECXNURS",53,0)
 ..I (ECD-ECDPREV)>1,+TM(ECD)=+TM(ECDPREV) D
"RTN","ECXNURS",54,0)
 ...F ECDNEW=ECDPREV+1:1:ECD-1 S ^TMP("ECX",$J,DFN,ECDNEW)=^TMP("ECX",$J,DFN,ECDPREV) D
"RTN","ECXNURS",55,0)
 ....S NEWWARD="",OLDWARD=$P(^TMP("ECX",$J,DFN,ECDPREV),U,10)
"RTN","ECXNURS",56,0)
 ....D NEWWARD(ECDNEW,OLDWARD,.NEWWARD)
"RTN","ECXNURS",57,0)
 ....Q:'NEWWARD
"RTN","ECXNURS",58,0)
 ....S $P(^TMP("ECX",$J,DFN,ECDNEW),U,4)=$P(NEWWARD,U,1)
"RTN","ECXNURS",59,0)
 ....S $P(^TMP("ECX",$J,DFN,ECDNEW),U,5)=$P(NEWWARD,U,2)
"RTN","ECXNURS",60,0)
 ..S ECDPREV=ECD
"RTN","ECXNURS",61,0)
 .;fill-in to end of extract date range
"RTN","ECXNURS",62,0)
 .K TM S ECD=0
"RTN","ECXNURS",63,0)
 .F  S ECD=$O(^TMP("ECX",$J,DFN,ECD)) Q:'ECD   D
"RTN","ECXNURS",64,0)
 ..S TM(ECD)=$P(^TMP("ECX",$J,DFN,ECD),U,11)
"RTN","ECXNURS",65,0)
 .S ECD=$O(TM(""),-1),DCDT=+TM(ECD)
"RTN","ECXNURS",66,0)
 .;if last day in date range is after last classification date
"RTN","ECXNURS",67,0)
 .I LASTDAY>ECD D
"RTN","ECXNURS",68,0)
 ..;if there is no d/c date
"RTN","ECXNURS",69,0)
 ..I DCDT=0 F ECDNEW=ECD+1:1:LASTDAY D  Q
"RTN","ECXNURS",70,0)
 ...I '$D(^TMP("ECX",$J,DFN,ECDNEW)) S ^TMP("ECX",$J,DFN,ECDNEW)=^TMP("ECX",$J,DFN,ECD)
"RTN","ECXNURS",71,0)
 ...S NEWWARD="",OLDWARD=$P(^TMP("ECX",$J,DFN,ECD),U,10)
"RTN","ECXNURS",72,0)
 ...D NEWWARD(ECDNEW,OLDWARD,.NEWWARD)
"RTN","ECXNURS",73,0)
 ...Q:'NEWWARD
"RTN","ECXNURS",74,0)
 ...S $P(^TMP("ECX",$J,DFN,ECDNEW),U,4)=$P(NEWWARD,U,1)
"RTN","ECXNURS",75,0)
 ...S $P(^TMP("ECX",$J,DFN,ECDNEW),U,5)=$P(NEWWARD,U,2)
"RTN","ECXNURS",76,0)
 ..;if d/c date is after last classification date
"RTN","ECXNURS",77,0)
 ..I $P(DCDT,".")>ECD S NEWDT=$S($P(DCDT,".")>LASTDAY:LASTDAY,1:($P(DCDT,".")-1)) F ECDNEW=ECD+1:1:NEWDT D  Q
"RTN","ECXNURS",78,0)
 ...I '$D(^TMP("ECX",$J,DFN,ECDNEW)) S ^TMP("ECX",$J,DFN,ECDNEW)=^TMP("ECX",$J,DFN,ECD)
"RTN","ECXNURS",79,0)
 ...S NEWWARD="",OLDWARD=$P(^TMP("ECX",$J,DFN,ECD),U,10)
"RTN","ECXNURS",80,0)
 ...D NEWWARD(ECDNEW,OLDWARD,.NEWWARD)
"RTN","ECXNURS",81,0)
 ...Q:'NEWWARD
"RTN","ECXNURS",82,0)
 ...S $P(^TMP("ECX",$J,DFN,ECDNEW),U,4)=$P(NEWWARD,U,1)
"RTN","ECXNURS",83,0)
 ...S $P(^TMP("ECX",$J,DFN,ECDNEW),U,5)=$P(NEWWARD,U,2)
"RTN","ECXNURS",84,0)
 Q
"RTN","ECXNURS",85,0)
 ;
"RTN","ECXNURS",86,0)
NEWWARD(ECDNEW,OLDWARD,NEWWARD) ;get new nursing location
"RTN","ECXNURS",87,0)
 ; input  ECDNEW  = date of care
"RTN","ECXNURS",88,0)
 ;        OLDWARD = pointer to file #42, previous mas ward
"RTN","ECXNURS",89,0)
 ;        NEWWARD = null
"RTN","ECXNURS",90,0)
 ; output NEWWARD = new nursing location^new nursing bedsection
"RTN","ECXNURS",91,0)
 ;                  OR "^", if new ward same as previous ward or
"RTN","ECXNURS",92,0)
 ;could not be resolved
"RTN","ECXNURS",93,0)
 ;if the new ward is mapped to multiple nursing locations, get the
"RTN","ECXNURS",94,0)
 ;first active location
"RTN","ECXNURS",95,0)
 N NEWW,NEWLOC,NEWSEC,OUT,DA,DR,DIC,DIQ,LOC,INP
"RTN","ECXNURS",96,0)
 S INP=$$INP^ECXUTL2(DFN,ECDNEW)
"RTN","ECXNURS",97,0)
 S NEWWARD=$P(INP,U,5)
"RTN","ECXNURS",98,0)
 I NEWWARD=OLDWARD S NEWWARD=""
"RTN","ECXNURS",99,0)
 Q:'NEWWARD
"RTN","ECXNURS",100,0)
 S (NEWW,NEWW2,NEWLOC,NEWSEC)="",OUT=0
"RTN","ECXNURS",101,0)
 F  S NEWW=$O(^NURSF(211.4,"C",NEWWARD,NEWW)) Q:OUT  Q:+NEWW<1  D
"RTN","ECXNURS",102,0)
 .S DIC=211.4,DIQ(0)="I",DIQ="LOC",DA=NEWW,DR="1;1.5"
"RTN","ECXNURS",103,0)
 .D EN^DIQ1 K DIQ,DIC,DA,DR
"RTN","ECXNURS",104,0)
 .Q:LOC(211.4,NEWW,1,"I")="I"
"RTN","ECXNURS",105,0)
 .Q:LOC(211.4,NEWW,1.5,"I")="I"
"RTN","ECXNURS",106,0)
 .S JJ=$O(^NURSF(211.4,"C",NEWWARD,NEWW,""))
"RTN","ECXNURS",107,0)
 .S DIC=211.4,DIQ(0)="I",DIQ="LOC",DA=NEWW,DA(211.41)=JJ,DR="2",DR(211.41)=".01;1"
"RTN","ECXNURS",108,0)
 .D EN^DIQ1 K DIQ,DIC,DA,DR
"RTN","ECXNURS",109,0)
 .Q:NEWWARD'=LOC(211.41,JJ,.01,"I")
"RTN","ECXNURS",110,0)
 .S NEWLOC=NEWW,NEWSEC=LOC(211.41,JJ,1,"I"),OUT=1
"RTN","ECXNURS",111,0)
 I (NEWLOC="")!(NEWSEC="") S NEWWARD="" Q
"RTN","ECXNURS",112,0)
 S NEWWARD=NEWLOC_U_NEWSEC
"RTN","ECXNURS",113,0)
 Q
"RTN","ECXNURS",114,0)
 ;
"RTN","ECXNURS",115,0)
FILE ;file extract records
"RTN","ECXNURS",116,0)
 ;node0
"RTN","ECXNURS",117,0)
 ;inst^dfn^ssn^name^in/out (ECXA)^date^acuity level(category)^entered by^
"RTN","ECXNURS",118,0)
 ;classifier^nurs location^nursing bed section^mov #^treat spec^adm date^
"RTN","ECXNURS",119,0)
 ;adm time
"RTN","ECXNURS",120,0)
 ;node1
"RTN","ECXNURS",121,0)
 ;mpi^dss dept ECXDSSD^dom (ECXDOM)^observ pat ind (ECXOBS)^dss
"RTN","ECXNURS",122,0)
 ;product ECXDSSP
"RTN","ECXNURS",123,0)
 N DA,DIK
"RTN","ECXNURS",124,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1)
"RTN","ECXNURS",125,0)
 S DFN=0,QFLG=0
"RTN","ECXNURS",126,0)
 F  S DFN=$O(^TMP("ECX",$J,DFN)) Q:'DFN  D  Q:QFLG
"RTN","ECXNURS",127,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(DFN,DT,"1;",.ECXPAT)
"RTN","ECXNURS",128,0)
 .Q:'OK
"RTN","ECXNURS",129,0)
 .S ECXDFN=DFN,ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN")
"RTN","ECXNURS",130,0)
 .S ECXMPI=ECXPAT("MPI"),ECD=0
"RTN","ECXNURS",131,0)
 .;file patient's classification data
"RTN","ECXNURS",132,0)
 .F  S ECD=$O(^TMP("ECX",$J,DFN,ECD)) Q:'ECD   D
"RTN","ECXNURS",133,0)
 ..S ECC=$P(^TMP("ECX",$J,DFN,ECD),U,1,5),ECMN=$P(^(ECD),U,7),ECXA=$P(^(ECD),U,6)
"RTN","ECXNURS",134,0)
 ..S ECTS=$P(^(ECD),U,8),ECA=$P(^(ECD),U,9),ECXDOM=$P(^(ECD),U,13)
"RTN","ECXNURS",135,0)
 ..S ECXACU=$P(ECC,U,1),ECXEB=$P(ECC,U,2),ECXCLS=$P(ECC,U,3)
"RTN","ECXNURS",136,0)
 ..S ECXNLOC=$P(ECC,U,4),ECXNBED=$P(ECC,U,5)
"RTN","ECXNURS",137,0)
 ..;
"RTN","ECXNURS",138,0)
 ..;Get DSS Department and Product
"RTN","ECXNURS",139,0)
 ..S (ECXDSSD,ECXDSSP)=""
"RTN","ECXNURS",140,0)
 ..;I ECXLOGIC>2004 S X=$$NUR^ECXDEPT(ECD)
"RTN","ECXNURS",141,0)
 ..;
"RTN","ECXNURS",142,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXNURS",143,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECTS)
"RTN","ECXNURS",144,0)
 ..;
"RTN","ECXNURS",145,0)
 ..;- Don't file record if outpatient and NOT an observation patient
"RTN","ECXNURS",146,0)
 ..Q:ECXA="O"&(ECXOBS="NO")
"RTN","ECXNURS",147,0)
 ..;
"RTN","ECXNURS",148,0)
 ..;- If no encounter number don't file record
"RTN","ECXNURS",149,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,ECD,ECTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXNURS",150,0)
 ..S EC7=EC7+1
"RTN","ECXNURS",151,0)
 ..S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXNURS",152,0)
 ..S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U
"RTN","ECXNURS",153,0)
 ..S ECODE=ECODE_ECXACU_U_ECXEB_U_ECXCLS_U_ECXNLOC_U_ECXNBED_U
"RTN","ECXNURS",154,0)
 ..S ECODE=ECODE_ECMN_U_ECTS_U_$$ECXDATE^ECXUTL(ECA,ECXYM)_U
"RTN","ECXNURS",155,0)
 ..S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U
"RTN","ECXNURS",156,0)
 ..S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXNURS",157,0)
 ..S ECODE1=ECODE1_ECINST_U
"RTN","ECXNURS",158,0)
 ..I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP
"RTN","ECXNURS",159,0)
 ..S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXNURS",160,0)
 ..S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXNURS",161,0)
 ..I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXNURS",162,0)
 Q
"RTN","ECXNURS",163,0)
 ;
"RTN","ECXNURS",164,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXNURS",165,0)
 S ECHEAD="NUR"
"RTN","ECXNURS",166,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXNURS",167,0)
 Q
"RTN","ECXNURS",168,0)
 ;
"RTN","ECXNURS",169,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXNURS",170,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX")
0^3^B69355286
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 12/2/04 9:03am
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71**;Dec 22, 1997
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
START ;entry when queued
"RTN","ECXOPRX",9,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP
"RTN","ECXOPRX",10,0)
 S QFLG=0
"RTN","ECXOPRX",11,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",14,0)
 ;before V6
"RTN","ECXOPRX",15,0)
 S ECPROF=6
"RTN","ECXOPRX",16,0)
 S ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",23,0)
 S ECPROF=2
"RTN","ECXOPRX",24,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",25,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",26,0)
 Q:QFLG
"RTN","ECXOPRX",27,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",28,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",29,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",30,0)
 Q
"RTN","ECXOPRX",31,0)
 ;
"RTN","ECXOPRX",32,0)
STUFF ;get data
"RTN","ECXOPRX",33,0)
 S ECDATA=$G(^PSRX(ECRX,0))
"RTN","ECXOPRX",34,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",35,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",36,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",37,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",38,0)
 ;
"RTN","ECXOPRX",39,0)
 S (ECXDSSD,ECXPROVN)="",ECXERR=0
"RTN","ECXOPRX",40,0)
 S (ECXCVE,ECXCVEDT,ECXCVENC)=""
"RTN","ECXOPRX",41,0)
 S ECXDATE=ECD
"RTN","ECXOPRX",42,0)
 S ECXDFN=$P(ECDATA,U,2)
"RTN","ECXOPRX",43,0)
 S ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",44,0)
 ;
"RTN","ECXOPRX",45,0)
 ;- Get rx patient status
"RTN","ECXOPRX",46,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3))
"RTN","ECXOPRX",47,0)
 ;
"RTN","ECXOPRX",48,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",49,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:"")
"RTN","ECXOPRX",50,0)
 S ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",51,0)
 ;
"RTN","ECXOPRX",52,0)
 ;- Check non-va provider flag and set to'Y' if exist
"RTN","ECXOPRX",53,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",54,0)
 ;
"RTN","ECXOPRX",55,0)
 ;get patient specific data
"RTN","ECXOPRX",56,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR)
"RTN","ECXOPRX",57,0)
 Q:ECXERR
"RTN","ECXOPRX",58,0)
 I 'ECRFL D
"RTN","ECXOPRX",59,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",60,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",61,0)
 I ECRFL D
"RTN","ECXOPRX",62,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",63,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",64,0)
 ;
"RTN","ECXOPRX",65,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2)
"RTN","ECXOPRX",66,0)
 S ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",67,0)
 S ECCAT=$P(^PSDRUG(ECDRG,0),U,2),ECINV=$P(^(0),U,3)["I",ECINV=$S(ECINV:"I",1:"")
"RTN","ECXOPRX",68,0)
 S ECUI=$P($G(^PSDRUG(ECDRG,660)),U,8)
"RTN","ECXOPRX",69,0)
 S ECNDC=$P($G(^PSDRUG(ECDRG,2)),U,4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXOPRX",70,0)
 S ECNDF=$G(^PSDRUG(ECDRG,"ND")),P1=$P(ECNDF,U),P3=$P(ECNDF,U,3)
"RTN","ECXOPRX",71,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",72,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",73,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",74,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",75,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",76,0)
 ;
"RTN","ECXOPRX",77,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXOPRX",78,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXOPRX",79,0)
 ;
"RTN","ECXOPRX",80,0)
 ;- Ordering physician (null for FY2002)
"RTN","ECXOPRX",81,0)
 S ECXORDPH=""
"RTN","ECXOPRX",82,0)
 ;
"RTN","ECXOPRX",83,0)
 ;- Ordering stop code
"RTN","ECXOPRX",84,0)
 S ECXORDST=$P($G(^ECX(728.44,+$P(ECDATA,U,5),0)),U,2)
"RTN","ECXOPRX",85,0)
 ;
"RTN","ECXOPRX",86,0)
 ;- Ordering date
"RTN","ECXOPRX",87,0)
 S ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)
"RTN","ECXOPRX",88,0)
 ;
"RTN","ECXOPRX",89,0)
 ;- CNH status (YES/NO)
"RTN","ECXOPRX",90,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXOPRX",91,0)
 ;
"RTN","ECXOPRX",92,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",93,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",94,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",95,0)
 ;
"RTN","ECXOPRX",96,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",97,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",98,0)
 ;
"RTN","ECXOPRX",99,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",100,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",101,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",102,0)
 .I ECMW=2,ECXSSN'="" D
"RTN","ECXOPRX",103,0)
 ..N TMP
"RTN","ECXOPRX",104,0)
 ..S TMP=$S(ECXADMDT:$$JULDT^ECXUTL4(ECXADMDT),1:$$JULDT^ECXUTL4(ECXDATE))
"RTN","ECXOPRX",105,0)
 ..S ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",106,0)
 ..S ECXA="O"
"RTN","ECXOPRX",107,0)
 I ECXENC'="" D FILE
"RTN","ECXOPRX",108,0)
 Q
"RTN","ECXOPRX",109,0)
 ;
"RTN","ECXOPRX",110,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",111,0)
 N OK,X,PT
"RTN","ECXOPRX",112,0)
 ;init variables
"RTN","ECXOPRX",113,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP)=""
"RTN","ECXOPRX",114,0)
 ;get patient data if saved
"RTN","ECXOPRX",115,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",116,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2)
"RTN","ECXOPRX",117,0)
 .S ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",118,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8)
"RTN","ECXOPRX",119,0)
 .S ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",120,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14)
"RTN","ECXOPRX",121,0)
 .S ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",122,0)
 .S ECXPHI=$P(PT,U,20)
"RTN","ECXOPRX",123,0)
 .S ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",124,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26)
"RTN","ECXOPRX",125,0)
 .S ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",126,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",127,0)
 ;set patient data
"RTN","ECXOPRX",128,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",129,0)
 .K ECXPAT
"RTN","ECXOPRX",130,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",131,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",132,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXOPRX",133,0)
 .S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",134,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXOPRX",135,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",136,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXOPRX",137,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXOPRX",138,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",139,0)
 .;
"RTN","ECXOPRX",140,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",141,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",142,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",143,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXOPRX",144,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXOPRX",145,0)
 .; - Race and Ethnicity
"RTN","ECXOPRX",146,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXOPRX",147,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXOPRX",148,0)
 .;save for later
"RTN","ECXOPRX",149,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",150,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",151,0)
 ;get inpatient data
"RTN","ECXOPRX",152,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)=""
"RTN","ECXOPRX",153,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",154,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXOPRX",155,0)
 .S ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",156,0)
 ;get primary care data
"RTN","ECXOPRX",157,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXOPRX",158,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXOPRX",159,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",160,0)
 Q
"RTN","ECXOPRX",161,0)
 ;
"RTN","ECXOPRX",162,0)
FILE ;file record
"RTN","ECXOPRX",163,0)
 ;node0
"RTN","ECXOPRX",164,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX",165,0)
 ;placeholder1^new^placeholder2^qty^cost^placeholder3^
"RTN","ECXOPRX",166,0)
 ;mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX",167,0)
 ;feeder key^investigational^days supply^primary care team^
"RTN","ECXOPRX",168,0)
 ;primary care provider^time^race
"RTN","ECXOPRX",169,0)
 ;node1
"RTN","ECXOPRX",170,0)
 ;mpi^dss dept ECXDSSD^sex^zip+4^provider npi^pc provider npi^state^
"RTN","ECXOPRX",171,0)
 ;county^pc prov person class^pow status^pow location^
"RTN","ECXOPRX",172,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^
"RTN","ECXOPRX",173,0)
 ;mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX",174,0)
 ;assoc pc prov npi^dom ECXDOM^purple heart ECXPHI^
"RTN","ECXOPRX",175,0)
 ;enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX",176,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^
"RTN","ECXOPRX",177,0)
 ;period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX",178,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^
"RTN","ECXOPRX",179,0)
 ;ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX",180,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^
"RTN","ECXOPRX",181,0)
 ;race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX",182,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient type
"RTN","ECXOPRX",183,0)
 ;ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX",184,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXOPRX",185,0)
 ;rx patient status ECRXPTST^non-va prescriber ECNONVAP
"RTN","ECXOPRX",186,0)
 N DA,DIK
"RTN","ECXOPRX",187,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX",188,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX",189,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX",190,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_U_ECQTY_U
"RTN","ECXOPRX",191,0)
 S ECODE=ECODE_ECXCOST_U_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX",192,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX",193,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX",194,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_ECPTNPI_U
"RTN","ECXOPRX",195,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX",196,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX",197,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX",198,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX",199,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX",200,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX",201,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX",202,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX",203,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX",204,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX",205,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX",206,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX",207,0)
 Q
"RTN","ECXOPRX",208,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",209,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",210,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",211,0)
 Q
"RTN","ECXOPRX",212,0)
 ;
"RTN","ECXOPRX",213,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",214,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPIVDN")
0^5^B65060260
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; 12/2/04 8:51am
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71**;Dec 22, 1997
"RTN","ECXPIVDN",3,0)
START ; start package specific extract
"RTN","ECXPIVDN",4,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI
"RTN","ECXPIVDN",5,0)
 S QFLG=0
"RTN","ECXPIVDN",6,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",7,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",8,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",9,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",10,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",11,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",12,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",13,0)
 .S ECXERR=0 D PAT(DFN,ECD,.ECXERR)
"RTN","ECXPIVDN",14,0)
 .Q:ECXERR
"RTN","ECXPIVDN",15,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",16,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",17,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",18,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",19,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",20,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",21,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",22,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",23,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",24,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",25,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",26,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",27,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  I $D(^PSDRUG(DRG,0)) D STUFF Q:QFLG
"RTN","ECXPIVDN",28,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",29,0)
 Q
"RTN","ECXPIVDN",30,0)
STUFF ;get data
"RTN","ECXPIVDN",31,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT
"RTN","ECXPIVDN",32,0)
 S EC0=^PSDRUG(DRG,0),ECVACL=$P(EC0,U,2),EC2=$G(^(2)),ECND=$G(^("ND"))
"RTN","ECXPIVDN",33,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",34,0)
 I ECXA="O" D
"RTN","ECXPIVDN",35,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",36,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",37,0)
 .I $D(^PS(55,DFN,"IV",ON,2)) S ECIVRM=$P(^(2),U,2),ECXDIV=$P(^PS(59.5,ECIVRM,0),U,4)
"RTN","ECXPIVDN",38,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000"
"RTN","ECXPIVDN",39,0)
 .S ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",40,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",41,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",42,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",43,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",44,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",45,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",46,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",47,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",48,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",49,0)
 S ECINV=$P(EC0,U,3),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",50,0)
 S ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",51,0)
 S ECNDC=$P(EC2,U,4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",52,0)
 S P1=$P(ECND,U),P3=$P(ECND,U,3)
"RTN","ECXPIVDN",53,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",54,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",55,0)
 ;
"RTN","ECXPIVDN",56,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",57,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",58,0)
 S ECXOPNPI=""
"RTN","ECXPIVDN",59,0)
 ;- Ordering date
"RTN","ECXPIVDN",60,0)
 S ECXORDDT=$S(+$P($G(^PS(55,DFN,"IV",ON,4)),U,2):$P($G(^PS(55,DFN,"IV",ON,4)),U,2),+$P($G(^PS(55,DFN,"IV",ON,2)),U):$P($G(^PS(55,DFN,"IV",ON,2)),U),1:"")
"RTN","ECXPIVDN",61,0)
 ;S ECXORDDT=$P(EC,U,14)
"RTN","ECXPIVDN",62,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",63,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",64,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",65,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",66,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",67,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",68,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",69,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",70,0)
 S ECXORDST=""
"RTN","ECXPIVDN",71,0)
 I ECXA="O" D
"RTN","ECXPIVDN",72,0)
 .I ECXOBS="NO" S ECXORDST=$S(ECXP1:ECXP1,1:"160")
"RTN","ECXPIVDN",73,0)
 .I ECXOBS="YES" S ECXORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXPIVDN",74,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",75,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECXORDST,)
"RTN","ECXPIVDN",76,0)
 ;get BCMA data
"RTN","ECXPIVDN",77,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXPIVDN",78,0)
 ;
"RTN","ECXPIVDN",79,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",80,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",81,0)
 ;
"RTN","ECXPIVDN",82,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",83,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",84,0)
 ;
"RTN","ECXPIVDN",85,0)
 ;set ordering stop code
"RTN","ECXPIVDN",86,0)
 S ECXIVPO="" ;$$DOIVPO^ECXUTL5(DA,ON)
"RTN","ECXPIVDN",87,0)
 ;
"RTN","ECXPIVDN",88,0)
 D:ECXENC'="" FILE K P1,P3
"RTN","ECXPIVDN",89,0)
 Q
"RTN","ECXPIVDN",90,0)
 ;
"RTN","ECXPIVDN",91,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",92,0)
 N X
"RTN","ECXPIVDN",93,0)
 ;init variables
"RTN","ECXPIVDN",94,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP)=""
"RTN","ECXPIVDN",95,0)
 ;get patient data if saved
"RTN","ECXPIVDN",96,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",97,0)
 .S PT=^TMP($J,"ECXP",ECXDFN)
"RTN","ECXPIVDN",98,0)
 .S ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",99,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXPIVDN",100,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",101,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXPIVDN",102,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",103,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXPIVDN",104,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",105,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXPIVDN",106,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",107,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",108,0)
 ;set patient data
"RTN","ECXPIVDN",109,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",110,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",111,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",112,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXPIVDN",113,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",114,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXPIVDN",115,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXPIVDN",116,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXPIVDN",117,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",118,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXPIVDN",119,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",120,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXPIVDN",121,0)
 .;get CNHU status
"RTN","ECXPIVDN",122,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPIVDN",123,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",124,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",125,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXPIVDN",126,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPIVDN",127,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",128,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXPIVDN",129,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",130,0)
 .;save for later
"RTN","ECXPIVDN",131,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",132,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",133,0)
 ;get primary care data
"RTN","ECXPIVDN",134,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",135,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXPIVDN",136,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",137,0)
 ;get inpatient data
"RTN","ECXPIVDN",138,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)=""
"RTN","ECXPIVDN",139,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",140,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXPIVDN",141,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",142,0)
 Q
"RTN","ECXPIVDN",143,0)
FILE ;file record
"RTN","ECXPIVDN",144,0)
 ;node0
"RTN","ECXPIVDN",145,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVDN",146,0)
 ;primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVDN",147,0)
 ;node1
"RTN","ECXPIVDN",148,0)
 ;mpi^dss dept^pc provider npi^pc prov person class^assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVDN",149,0)
 ;ord pr^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVDN",150,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVDN",151,0)
 ;node2
"RTN","ECXPIVDN",152,0)
 ;head & neck cancer ind.^ethnicity^race1^bcma drug dispensed^
"RTN","ECXPIVDN",153,0)
 ;bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVDN",154,0)
 ;ordering provider person class^^user
"RTN","ECXPIVDN",155,0)
 ;enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXPIVDN",156,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^
"RTN","ECXPIVDN",157,0)
 ;national patient record flag ECXNPRFI,ordering stop code ECXIVPO
"RTN","ECXPIVDN",158,0)
 N DA,DIK
"RTN","ECXPIVDN",159,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVDN",160,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVDN",161,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVDN",162,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVDN",163,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U
"RTN","ECXPIVDN",164,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXPIVDN",165,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVDN",166,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVDN",167,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVDN",168,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPTNPI_U_ECCLAS_U_ECASPR_U_ECCLAS2_U
"RTN","ECXPIVDN",169,0)
 S ECODE1=ECODE1_ECASNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVDN",170,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U
"RTN","ECXPIVDN",171,0)
 S ECODE1=ECODE1_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVDN",172,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U
"RTN","ECXPIVDN",173,0)
 S ECODE1=ECODE1_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVDN",174,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVDN",175,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXOPNPI_U
"RTN","ECXPIVDN",176,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVDN",177,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVDN",178,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVDN",179,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVDN",180,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVDN",181,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVDN",182,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVDN",183,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVDN",184,0)
 Q
"RTN","ECXPIVDN",185,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",186,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",187,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",188,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",189,0)
 S ECVER=7
"RTN","ECXPIVDN",190,0)
 Q
"RTN","ECXPIVDN",191,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",192,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO")
0^4^B26189015
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ; 9/20/04 1:31pm
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71**;Dec 22, 1997
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formated Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formated End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formated Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formated End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",22,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",23,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",24,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",25,0)
 .S ECXDACT=0
"RTN","ECXPRO",26,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 ..;* initialize variables
"RTN","ECXPRO",28,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",29,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",30,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA)=""
"RTN","ECXPRO",31,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP)=""
"RTN","ECXPRO",32,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXAOL,ECXHNCI,ECXETH,ECXRC1)=""
"RTN","ECXPRO",33,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",34,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",35,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",36,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",37,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",38,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",39,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",40,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",41,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",42,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",43,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",44,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",45,0)
 ..;
"RTN","ECXPRO",46,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",47,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",48,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",49,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",50,0)
 ..;
"RTN","ECXPRO",51,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",52,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",53,0)
 ..;
"RTN","ECXPRO",54,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",55,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",56,0)
 ..;
"RTN","ECXPRO",57,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",58,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",59,0)
 ..;
"RTN","ECXPRO",60,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",61,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",62,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",63,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXPRO",64,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",65,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",66,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXPRO",67,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",68,0)
 ;* Send the Exception message
"RTN","ECXPRO",69,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",70,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",71,0)
 .S XMDUZ=.5
"RTN","ECXPRO",72,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",73,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",74,0)
 .D ^XMD
"RTN","ECXPRO",75,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ECXPRO",76,0)
 Q
"RTN","ECXPRO",77,0)
 ;
"RTN","ECXPRO",78,0)
FILE ;file extract record
"RTN","ECXPRO",79,0)
 ;node0
"RTN","ECXPRO",80,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",81,0)
 ;day^feeder location^
"RTN","ECXPRO",82,0)
 ;feeder key^qty^pc team^pc provider^hcpcs^icd9 (ECXICD9)^
"RTN","ECXPRO",83,0)
 ;icd9-1 (ECXICD91)^icd9-2 (ECXICD92)^icd9-3 (ECXICD93)^
"RTN","ECXPRO",84,0)
 ;icd9-4 (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",85,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",86,0)
 ;vet^transacton type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",87,0)
 ;node1
"RTN","ECXPRO",88,0)
 ;zip^dob^sex^amis grouper^pc prov npi^mpi^dss dept ECXDSSD^
"RTN","ECXPRO",89,0)
 ;pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",90,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",91,0)
 ;enroll loc^state^county^assoc pc provider^
"RTN","ECXPRO",92,0)
 ;assoc pc prov person class^assoc pc prov npi
"RTN","ECXPRO",93,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",94,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",95,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",96,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",97,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",98,0)
 ;head & neck canc. ind. (ECXHNCI)^ethnicity (ECXETH)^race1 (ECXRC1)^
"RTN","ECXPRO",99,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",100,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",101,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",102,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI
"RTN","ECXPRO",103,0)
 N DA,DIK
"RTN","ECXPRO",104,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",105,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPRO",106,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",107,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",108,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",109,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",110,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",111,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",112,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_ECPTNPI_U_ECXMPI_U
"RTN","ECXPRO",113,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",114,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",115,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U
"RTN","ECXPRO",116,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",117,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",118,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",119,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",120,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXPRO",121,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",122,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",123,0)
 Q
"RTN","ECXPRO",124,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",125,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",126,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",127,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",128,0)
 Q
"RTN","ECXPRO",129,0)
 ;
"RTN","ECXPRO",130,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",131,0)
 ;        routines.
"RTN","ECXPRO",132,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",133,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",134,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",135,0)
 ;
"RTN","ECXPRO",136,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",137,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPROCT")
0^16^B21026328
"RTN","ECXPROCT",1,0)
ECXPROCT ;ALB/GTS - ProstheticS Cost by PSAS HCPC Report DSS ; 11/22/04 3:55pm
"RTN","ECXPROCT",2,0)
 ;;3.0;DSS EXTRACTS;**71**;Dec 22, 1997
"RTN","ECXPROCT",3,0)
 ;
"RTN","ECXPROCT",4,0)
EN ;entry point from option
"RTN","ECXPROCT",5,0)
 ;Initialize varables
"RTN","ECXPROCT",6,0)
 N DIR,ECSD1,ECED,X,Y
"RTN","ECXPROCT",7,0)
 ;Prompt for start date
"RTN","ECXPROCT",8,0)
 S DIR(0)="D^::EX"
"RTN","ECXPROCT",9,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXPROCT",10,0)
 D ^DIR
"RTN","ECXPROCT",11,0)
 I $D(DIRUT) Q
"RTN","ECXPROCT",12,0)
 S ECSD1=Y
"RTN","ECXPROCT",13,0)
 ;Prompt for end date
"RTN","ECXPROCT",14,0)
 K DIR,X,Y
"RTN","ECXPROCT",15,0)
 S DIR(0)="D^"_ECSD1_":"_DT_":EX"
"RTN","ECXPROCT",16,0)
 S DIR("A")="Enter Report Ending Date"
"RTN","ECXPROCT",17,0)
 D ^DIR
"RTN","ECXPROCT",18,0)
 I $D(DIRUT) Q
"RTN","ECXPROCT",19,0)
 S ECED=Y
"RTN","ECXPROCT",20,0)
 ;Queue Report
"RTN","ECXPROCT",21,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!!
"RTN","ECXPROCT",22,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXPROCT",23,0)
 S ZTIO=""
"RTN","ECXPROCT",24,0)
 S ZTDESC="Prosthetic Cost by PSAS HCPC Report for DSS"
"RTN","ECXPROCT",25,0)
 F I="ECSD1","ECED","ECXPHCPC","ECXPHDESC","ECXHCPC","ECXQTY","ECXUOFI","ECXCOST","ECXTCOST" D
"RTN","ECXPROCT",26,0)
 .S ZTSAVE(I)=""
"RTN","ECXPROCT",27,0)
 D EN^XUTMDEVQ("EN1^ECXPROCT",ZTDESC,.ZTSAVE)
"RTN","ECXPROCT",28,0)
 Q
"RTN","ECXPROCT",29,0)
 ;
"RTN","ECXPROCT",30,0)
EN1 ;Tasked entry point
"RTN","ECXPROCT",31,0)
 ;Input : ECSD1  -  FM format report start date
"RTN","ECXPROCT",32,0)
 ;        ECED   -  FM format report end date
"RTN","ECXPROCT",33,0)
 ;
"RTN","ECXPROCT",34,0)
 ;Output : None
"RTN","ECXPROCT",35,0)
 ;
"RTN","ECXPROCT",36,0)
 ;Declare variables
"RTN","ECXPROCT",37,0)
 N ECXPHCPC,ECXHCDES,ECXHCPC,ECXQTY,ECXUOFI,ECXCOST,ECXTCOST,PAGENUM
"RTN","ECXPROCT",38,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECX1,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPROCT",39,0)
 N DIC,DR,DA,DIQ
"RTN","ECXPROCT",40,0)
 S ECXED1=ECED+.9999,ECXCT=ECSD1,(CNT,QFLG,PAGENUM,ECXTCOST,ECXQTY,STOP)=0
"RTN","ECXPROCT",41,0)
 D HEADER I STOP D EXIT Q
"RTN","ECXPROCT",42,0)
 D GETDATA
"RTN","ECXPROCT",43,0)
 I '$D(^TMP("ECXDSS",$J)) D  Q
"RTN","ECXPROCT",44,0)
 .W !
"RTN","ECXPROCT",45,0)
 .W !,"***********************************************"
"RTN","ECXPROCT",46,0)
 .W !,"*  NOTHING TO REPORT FOR SELECTED TIME FRAME  *"
"RTN","ECXPROCT",47,0)
 .W !,"***********************************************"
"RTN","ECXPROCT",48,0)
 .D WAIT
"RTN","ECXPROCT",49,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXPROCT",50,0)
 D TOTAL
"RTN","ECXPROCT",51,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXPROCT",52,0)
 Q
"RTN","ECXPROCT",53,0)
 ;
"RTN","ECXPROCT",54,0)
GETDATA ;Get data
"RTN","ECXPROCT",55,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)),CNT=CNT+1 Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPROCT",56,0)
 .S ECXDACT=0
"RTN","ECXPROCT",57,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPROCT",58,0)
 ..;Get data nodes and icrement conunter
"RTN","ECXPROCT",59,0)
 ..S CNT=CNT+1
"RTN","ECXPROCT",60,0)
 ..S ECX0=$G(^RMPR(660,ECXDACT,0)),ECX1=$G(^(1))
"RTN","ECXPROCT",61,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPROCT",62,0)
 ..S ECXPHCPC=$P(ECX1,U,4),ECHCDES=$P(ECX1,U,2),ECXHCPC=$P(ECX0,U,22)
"RTN","ECXPROCT",63,0)
 ..S ECXQTY=$P(ECX0,U,7),ECXUOFI=$P(ECX0,U,8),ECXCOST=$P(ECX0,U,16)
"RTN","ECXPROCT",64,0)
 ..;Resolve external values for PSAS HCPC
"RTN","ECXPROCT",65,0)
 ..K DIC S DIC="^RMPR(661.1,",DIC(0)="NZ",X=ECXPHCPC D ^DIC
"RTN","ECXPROCT",66,0)
 ..S ECXPHCPC=$P($G(Y(0)),U,1)
"RTN","ECXPROCT",67,0)
 ..;Resolve external values for HCPC
"RTN","ECXPROCT",68,0)
 ..K DIC S DIC="^ICPT(",DIC(0)="NZ",X=ECXHCPC D ^DIC
"RTN","ECXPROCT",69,0)
 ..S ECXHCPC=$P($G(Y(0)),U,1)
"RTN","ECXPROCT",70,0)
 ..;Resolve external value for unit of issue
"RTN","ECXPROCT",71,0)
 ..K DIC S DIC="^PRCD(420.5,",DIC(0)="NZ",X=ECXUOFI D ^DIC
"RTN","ECXPROCT",72,0)
 ..S ECXUOFI=$P($G(Y(0)),U,2)
"RTN","ECXPROCT",73,0)
 ..S ECXTCOST=ECXCOST+ECXTCOST
"RTN","ECXPROCT",74,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPROCT",75,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPROCT",76,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPROCT",77,0)
 ..;Save for later
"RTN","ECXPROCT",78,0)
 ..S ^TMP("ECXDSS",$J,CNT)=ECXPHCPC_U_ECHCDES_U_ECXHCPC_U_ECXQTY_U_ECXUOFI_U_ECXCOST
"RTN","ECXPROCT",79,0)
 ..Q
"RTN","ECXPROCT",80,0)
 .Q
"RTN","ECXPROCT",81,0)
 Q
"RTN","ECXPROCT",82,0)
HEADER ;print header
"RTN","ECXPROCT",83,0)
 S PAGENUM=PAGENUM+1
"RTN","ECXPROCT",84,0)
 S $P(LN,"-",132)=""
"RTN","ECXPROCT",85,0)
 W @IOF
"RTN","ECXPROCT",86,0)
 W !,"Cost by PSAS HCPC REPORT for "_$P($$SITE^VASITE,U,2)_" station "_$P($$SITE^VASITE,U,3),?120,"Page: ",PAGENUM
"RTN","ECXPROCT",87,0)
 W !!,"Report for ",$$FMTE^XLFDT(ECSD1)," thru ",$$FMTE^XLFDT(ECED)
"RTN","ECXPROCT",88,0)
 W !,?1,"PSAS HCPC",?15,"DESCRIPTION",?89,"HCPC",?98,"QTY",?104,"Unit of Issue",?126,"Cost"
"RTN","ECXPROCT",89,0)
 W !?1,LN
"RTN","ECXPROCT",90,0)
 Q
"RTN","ECXPROCT",91,0)
 ;
"RTN","ECXPROCT",92,0)
DETAIL ;Print detailed line
"RTN","ECXPROCT",93,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXPROCT",94,0)
 ;          ECXPHCPC  -   PSAS HCPCS
"RTN","ECXPROCT",95,0)
 ;          ECXPHDESC -   PSAS HCPC Description
"RTN","ECXPROCT",96,0)
 ;          ECXHCPC   -   HCPCS
"RTN","ECXPROCT",97,0)
 ;          ECXQTY    -   Quantity
"RTN","ECXPROCT",98,0)
 ;          ECXUOFI   -   Unit of issue
"RTN","ECXPROCT",99,0)
 ;          ECXCOST   -   Total cost
"RTN","ECXPROCT",100,0)
 ;Output  : None
"RTN","ECXPROCT",101,0)
 S RECORD=0 F  S RECORD=$O(^TMP("ECXDSS",$J,RECORD)) Q:'RECORD!(STOP)  D
"RTN","ECXPROCT",102,0)
 .S NODE=^TMP("ECXDSS",$J,RECORD)
"RTN","ECXPROCT",103,0)
 .W !?1,$$RJ^XLFSTR($P(NODE,U,1),6),?15,$P(NODE,U,2),?89,$$RJ^XLFSTR($P(NODE,U,3),U,6),?99,$$RJ^XLFSTR($P(NODE,U,4),U,6),?107,$P(NODE,U,5)
"RTN","ECXPROCT",104,0)
 .W ?122,"$"_$$RJ^XLFSTR($P($P(NODE,U,6),".",1),6)_"."_$$LJ^XLFSTR($P($P(NODE,U,6),".",2),2,0)
"RTN","ECXPROCT",105,0)
 .I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXPROCT",106,0)
 .Q
"RTN","ECXPROCT",107,0)
 Q
"RTN","ECXPROCT",108,0)
 ;
"RTN","ECXPROCT",109,0)
TOTAL ;Report totals
"RTN","ECXPROCT",110,0)
 N DASH
"RTN","ECXPROCT",111,0)
 S $P(DASH,"=",15)=""
"RTN","ECXPROCT",112,0)
 W !!,?118,DASH
"RTN","ECXPROCT",113,0)
 W !?90,"Grand Total: ",?118,"$ "_$$RJ^XLFSTR($FNUMBER(ECXTCOST,",",2),11)
"RTN","ECXPROCT",114,0)
 Q
"RTN","ECXPROCT",115,0)
 ;
"RTN","ECXPROCT",116,0)
WAIT ;End of page logic
"RTN","ECXPROCT",117,0)
 ;Input   ; None
"RTN","ECXPROCT",118,0)
 ;Output  ; STOP - Flag inidcating if printing should continue
"RTN","ECXPROCT",119,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXPROCT",120,0)
 ;
"RTN","ECXPROCT",121,0)
 S STOP=0
"RTN","ECXPROCT",122,0)
 ;CRT - Prompt for continue
"RTN","ECXPROCT",123,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXPROCT",124,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXPROCT",125,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXPROCT",126,0)
 .S DIR(0)="E"
"RTN","ECXPROCT",127,0)
 .D ^DIR
"RTN","ECXPROCT",128,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXPROCT",129,0)
 ;Background task - check taskman
"RTN","ECXPROCT",130,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXPROCT",131,0)
 I STOP D
"RTN","ECXPROCT",132,0)
 .W !,"*********************************************"
"RTN","ECXPROCT",133,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXPROCT",134,0)
 .W !,"*********************************************"
"RTN","ECXPROCT",135,0)
 Q
"RTN","ECXPROCT",136,0)
EXIT ;Kill temp global
"RTN","ECXPROCT",137,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXPROCT",138,0)
 Q
"RTN","ECXQSR")
0^10^B56202539
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 11/24/04 1:15pm
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71**;Dec 22, 1997
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
 ;
"RTN","ECXQSR",11,0)
START ;entry point from tasked job
"RTN","ECXQSR",12,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",13,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",14,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",15,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",16,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",17,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",18,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",19,0)
 Q
"RTN","ECXQSR",20,0)
 ;
"RTN","ECXQSR",21,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",22,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",23,0)
 S ECXQDT=""
"RTN","ECXQSR",24,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",25,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",26,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",28,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",29,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",30,0)
 Q
"RTN","ECXQSR",31,0)
 ;
"RTN","ECXQSR",32,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",33,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV
"RTN","ECXQSR",34,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",35,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",36,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",37,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",38,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",39,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",40,0)
 S ECHL=""
"RTN","ECXQSR",41,0)
 S ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",42,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",43,0)
 Q:ECSTOP=""
"RTN","ECXQSR",44,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",45,0)
 I ECAC D
"RTN","ECXQSR",46,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",47,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2)
"RTN","ECXQSR",48,0)
 ..S ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",49,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",50,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",51,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",52,0)
 .I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",53,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",54,0)
 Q:'ECDU
"RTN","ECXQSR",55,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10)
"RTN","ECXQSR",56,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",57,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",58,0)
 ; was performed.
"RTN","ECXQSR",59,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",60,0)
 S (ECDIA,ECXMST,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECUN1NPI)=""
"RTN","ECXQSR",61,0)
 ;if QUASAR v2
"RTN","ECXQSR",62,0)
 I +ECXQV=2 D
"RTN","ECXQSR",63,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3)
"RTN","ECXQSR",64,0)
 .S ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",65,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",66,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U)
"RTN","ECXQSR",67,0)
 ..S XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",68,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",69,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",70,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",71,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0))
"RTN","ECXQSR",72,0)
 .S ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",73,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",74,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",75,0)
 ;if QUASAR v3
"RTN","ECXQSR",76,0)
 I +ECXQV=3 D
"RTN","ECXQSR",77,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",78,0)
 .S ECXMST=$P(EC2NODE,U,9),ECXMST=$S(ECXMST=1:"Y",ECXMST=0:"N",1:"")
"RTN","ECXQSR",79,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0))
"RTN","ECXQSR",80,0)
 .S ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0))
"RTN","ECXQSR",81,0)
 .S ECPN=0
"RTN","ECXQSR",82,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",83,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0)
"RTN","ECXQSR",84,0)
 ..S ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",85,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",86,0)
 ..I ECTP D
"RTN","ECXQSR",87,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",88,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",89,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",90,0)
 ..I 'ECTP D
"RTN","ECXQSR",91,0)
 ...S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",92,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5)
"RTN","ECXQSR",93,0)
 ..S ECXMOD="",MOD=0
"RTN","ECXQSR",94,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",95,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",96,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",97,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",98,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",99,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",100,0)
 ..S ECV=ECV+$G(LOC(ECXCPT))
"RTN","ECXQSR",101,0)
 ..S LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",102,0)
 .S ECIEN=0
"RTN","ECXQSR",103,0)
 .F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",104,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0)
"RTN","ECXQSR",105,0)
 ..S P=$P(DIA,U,2),P=$S(P=1:"P",1:"S"),CNT=$G(STR(P))+1
"RTN","ECXQSR",106,0)
 ..S STR(P,CNT)=$P($G(^ICD9(+DIA,0)),U),STR(P)=CNT
"RTN","ECXQSR",107,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",108,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",109,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",110,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",111,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",112,0)
 ;
"RTN","ECXQSR",113,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXQSR",114,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",115,0)
 ;set up Provider Person class
"RTN","ECXQSR",116,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXQSR",117,0)
 ;
"RTN","ECXQSR",118,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",119,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",120,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",121,0)
 F II=2,3 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",122,0)
 .S DA=@XVAR,(DIC,FILEN)=509850.3,DR=".01",DIQ="ECXQSR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXQSR",123,0)
 .S DA=ECXQSR(FILEN,DA,DR,"I"),(DIC,FILEN)=8930.3 D EN^DIQ1 S @XVAR=2_ECXQSR(FILEN,DA,DR,"I") K DA,DIC,DR,DIQ,ECXQSR
"RTN","ECXQSR",124,0)
 ;
"RTN","ECXQSR",125,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",126,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",127,0)
 ;
"RTN","ECXQSR",128,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",129,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",130,0)
 ;
"RTN","ECXQSR",131,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",132,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",133,0)
 ;
"RTN","ECXQSR",134,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",135,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",136,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",137,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",138,0)
 ;
"RTN","ECXQSR",139,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",140,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,)
"RTN","ECXQSR",141,0)
 Q:ECXENC=""
"RTN","ECXQSR",142,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",143,0)
 S CPT=""
"RTN","ECXQSR",144,0)
 F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",145,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",146,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",147,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD),ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",148,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",149,0)
 .D FILE
"RTN","ECXQSR",150,0)
 K CPT,LOC
"RTN","ECXQSR",151,0)
 Q
"RTN","ECXQSR",152,0)
 ;
"RTN","ECXQSR",153,0)
FILE ;file record in #727.825
"RTN","ECXQSR",154,0)
 ;node0
"RTN","ECXQSR",155,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^
"RTN","ECXQSR",156,0)
 ;day ECDAY^DSS unit ECDU^^
"RTN","ECXQSR",157,0)
 ;category ECPTTM^procedure ECP^volume ECV^
"RTN","ECXQSR",158,0)
 ;cost center ^ordering sec ^section^
"RTN","ECXQSR",159,0)
 ;provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^ECXPPC3^
"RTN","ECXQSR",160,0)
 ;mov # ECXMN^treat spec ECXTS^time ECTIME^
"RTN","ECXQSR",161,0)
 ;primary care team ECPTTM^
"RTN","ECXQSR",162,0)
 ;primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR",163,0)
 ;primary icd-9 code ECDIA^secondary icd-9 #1 ECXICD91^
"RTN","ECXQSR",164,0)
 ;secondary icd-9 #2 ECXICD92^secondary icd-9 #3 ECXICD93^
"RTN","ECXQSR",165,0)
 ;secondary icd-9 #4 ECXICD94^agent orange ECXAST^
"RTN","ECXQSR",166,0)
 ;radiation exposure ECRE^
"RTN","ECXQSR",167,0)
 ;environmental contaminants ECENV^
"RTN","ECXQSR",168,0)
 ;service connected ECSC^sent to pce^^dss identifier ECDSS^placeholder
"RTN","ECXQSR",169,0)
 ;node1
"RTN","ECXQSR",170,0)
 ;mpi ECXNPI^dss dept ECXDSSD^provider npi ECUN1NPI^^^
"RTN","ECXQSR",171,0)
 ;pc prov person class ECPTNPI^assoc pc provider ECASPR^
"RTN","ECXQSR",172,0)
 ;assoc pc prov person class ECCLAS2^assoc pc provider npi ECASNPI^
"RTN","ECXQSR",173,0)
 ;divison ECXDIV^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXQSR",174,0)
 ;enrollment status ECXSTAT^enrollment prior ECXPRIOR^period of
"RTN","ECXQSR",175,0)
 ;service ECXPOS^purple heart ECXPHI^observ pat ind ECXOBS^encounter
"RTN","ECXQSR",176,0)
 ;num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXQSR",177,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR",178,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR",179,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^
"RTN","ECXQSR",180,0)
 ;enrollment priority ECXPRIOR_enrollment subgroup ECXSBGRP^user
"RTN","ECXQSR",181,0)
 ;enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXQSR",182,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^
"RTN","ECXQSR",183,0)
 ;national patient record flag ECXNPRFI
"RTN","ECXQSR",184,0)
 N DA,DIK
"RTN","ECXQSR",185,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR",186,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR",187,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR",188,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR",189,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR",190,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR",191,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR",192,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR",193,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR",194,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECUN1NPI_U_U_U_ECCLAS_U_ECPTNPI_U_ECASPR_U
"RTN","ECXQSR",195,0)
 S ECODE1=ECODE1_ECCLAS2_U_ECASNPI_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR",196,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR",197,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR",198,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR",199,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR",200,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR",201,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE
"RTN","ECXQSR",202,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U
"RTN","ECXQSR",203,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXQSR",204,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR",205,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR",206,0)
 Q
"RTN","ECXQSR",207,0)
 ;
"RTN","ECXQSR",208,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",209,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",210,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",211,0)
 Q
"RTN","ECXQSR",212,0)
 ;
"RTN","ECXQSR",213,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",214,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^18^B36987201
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ; 10/15/04 9:23am
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71**;Dec 22, 1997
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 S QFLG=0
"RTN","ECXRAD",10,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",11,0)
 S ECXDFN="",ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",12,0)
 F  S ECDT=$O(^RADPT("AR",ECDT)) Q:ECDT>ECED1!(ECDT'>0)  D  Q:QFLG
"RTN","ECXRAD",13,0)
 .S ECXDFN=""
"RTN","ECXRAD",14,0)
 .F  S ECXDFN=$O(^RADPT("AR",ECDT,ECXDFN)) Q:ECXDFN=""  I '$D(^TMP("ECL",$J,ECXDFN)) D GET Q:QFLG
"RTN","ECXRAD",15,0)
 K ^TMP("ECL",$J)
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GET ;get data
"RTN","ECXRAD",19,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC
"RTN","ECXRAD",20,0)
 S ^TMP("ECL",$J,ECXDFN)=""
"RTN","ECXRAD",21,0)
 ;with dfn get all exams within date range
"RTN","ECXRAD",22,0)
 S ECXMDT=ECSD-.1
"RTN","ECXRAD",23,0)
 F  S ECXMDT=$O(^RADPT(ECXDFN,"DT","B",ECXMDT)) Q:((ECXMDT>ECED1)!(ECXMDT=""))  D  Q:QFLG
"RTN","ECXRAD",24,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",25,0)
 .S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",26,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;",.ECXPAT)
"RTN","ECXRAD",27,0)
 .Q:'OK
"RTN","ECXRAD",28,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",29,0)
 .S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",30,0)
 .S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",31,0)
 .S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",32,0)
 .S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",33,0)
 .S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",34,0)
 .;
"RTN","ECXRAD",35,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",36,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",37,0)
 .;for dfn & date get exam(s) ien
"RTN","ECXRAD",38,0)
 .S ECXMDA=""
"RTN","ECXRAD",39,0)
 .F  S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,ECXMDA)) Q:+ECXMDA=0  D
"RTN","ECXRAD",40,0)
 ..S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",41,0)
 ..;
"RTN","ECXRAD",42,0)
 ..;- Ordering stop code (based on imaging type)
"RTN","ECXRAD",43,0)
 ..S ECXORDST=$S($G(ECTY)=2:109,1:105)
"RTN","ECXRAD",44,0)
 ..;
"RTN","ECXRAD",45,0)
 ..;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",46,0)
 ..S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",47,0)
 ..S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",48,0)
 ..;
"RTN","ECXRAD",49,0)
 ..;- If no encounter number don't file record
"RTN","ECXRAD",50,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",51,0)
 ..;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",52,0)
 ..;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",53,0)
 ..S ECCN=0
"RTN","ECXRAD",54,0)
 ..F  S ECCN=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN)) Q:ECCN'>0  D
"RTN","ECXRAD",55,0)
 ...S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",56,0)
 ...S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",57,0)
 ...S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",58,0)
 ...S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",59,0)
 ...S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDOCNPI="",ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",60,0)
 ...S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",61,0)
 ...Q:'ECPRO 
"RTN","ECXRAD",62,0)
 ...Q:+ECSTAT=0
"RTN","ECXRAD",63,0)
 ...;get CPT code & modifiers
"RTN","ECXRAD",64,0)
 ...S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",65,0)
 ...;quit if this is a 'parent' procedure
"RTN","ECXRAD",66,0)
 ...S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",67,0)
 ...Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",68,0)
 ...;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",69,0)
 ...K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",70,0)
 ...I $D(ARR("LABEL")) D
"RTN","ECXRAD",71,0)
 ....K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",72,0)
 ....Q:$D(ERR("DIERR"))
"RTN","ECXRAD",73,0)
 ....S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",74,0)
 ....Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",75,0)
 ....F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",76,0)
 ...S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",77,0)
 ...;get procedure radiology modifiers
"RTN","ECXRAD",78,0)
 ...S ECMOD=0,ECMODS=""
"RTN","ECXRAD",79,0)
 ...F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",80,0)
 ...S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",81,0)
 ...;check CPT modifier for Department and Product numbers
"RTN","ECXRAD",82,0)
 ...;I ECXLOGIC>2004 D 
"RTN","ECXRAD",83,0)
 ...;.I ECXCMOD'["26"!ECXMOD'["TC" D
"RTN","ECXRAD",84,0)
 ...;..S ECFS="RAD",ECFL=ECXDIV_"-"_ECTY,ECFK=$E(ECXCPT,1,5)
"RTN","ECXRAD",85,0)
 ...;..X $$RAD^ECXDEPT(ECFS,ECFL,ECFK,ECXMDA)
"RTN","ECXRAD",86,0)
 ...;..D FILE
"RTN","ECXRAD",87,0)
 ...;.;check for component '26'
"RTN","ECXRAD",88,0)
 ...;.I ECXCMOD['26' D  Q
"RTN","ECXRAD",89,0)
 ...;..S ECFS="RAD",ECFL=ECXDIV_"-"_ECTY,ECFK=$E(ECXCPT,1,5)_"."_ECMOD
"RTN","ECXRAD",90,0)
 ...;..X $$RAD^ECXDEPT(ECFS,ECFL,ECFK,ECXMDA)
"RTN","ECXRAD",91,0)
 ...;..D FILE
"RTN","ECXRAD",92,0)
 ...;.;check for component 'TC'
"RTN","ECXRAD",93,0)
 ...;.I ECXCMOD['TC' D  Q
"RTN","ECXRAD",94,0)
 ...;..S ECFS="RAD",ECFL=ECXDIV_"-"_ECTY,ECFK=$E(ECXCPT,1,5)_"."_ECMOD
"RTN","ECXRAD",95,0)
 ...;..X $$RAD^ECXDEPT(ECFS,ECFL,ECFK,ECXMDA)
"RTN","ECXRAD",96,0)
 ...;..D FILE
"RTN","ECXRAD",97,0)
 ...;.;check PROCEDURES if CPT field is "" to generate feeder key
"RTN","ECXRAD",98,0)
 ...;.I ECXCPT="" D
"RTN","ECXRAD",99,0)
 ...;..S ECFS="RAD",ECFL=ECXDIV+"-"_ECTY
"RTN","ECXRAD",100,0)
 ...;..S ECFK=$S(ECPRO=468:777777,1:ECPRO)
"RTN","ECXRAD",101,0)
 ...;..X $$RAD^ECXDEPT(ECFS,ECFL,ECFK,ECXMDA)
"RTN","ECXRAD",102,0)
 ...;..D FILE
"RTN","ECXRAD",103,0)
 ...;.;check procedure modifiers for other records to be generated
"RTN","ECXRAD",104,0)
 ...;.I ECMODS D
"RTN","ECXRAD",105,0)
 ...;..;bilateral
"RTN","ECXRAD",106,0)
 ...;..S ECXFS="RAD",ECFL=ECXDIV_"-"_ECTY,ECFK=$E(ECXCPT,1,5)
"RTN","ECXRAD",107,0)
 ...;..X $$RAD^ECXDEPT(ECFS,ECFL,ECFK,ECXMDA)
"RTN","ECXRAD",108,0)
 ...;..D FILE
"RTN","ECXRAD",109,0)
 ...;..;bedside
"RTN","ECXRAD",110,0)
 ...;..S ECXFS="RAD",ECFL=ECXDIV_"-"_ECTY,ECFK="888888"
"RTN","ECXRAD",111,0)
 ...;..X $$RAD^ECXDEPT(ECFS,ECFL,ECFK,ECXMDA)
"RTN","ECXRAD",112,0)
 ...;..D FILE
"RTN","ECXRAD",113,0)
 ...;..;operating room
"RTN","ECXRAD",114,0)
 ...;..S ECXFS="RAD",ECFL=ECXDIV_"-"_ECTY,ECFK="999999"
"RTN","ECXRAD",115,0)
 ...;..X $$RAD^ECXDEPT(ECFS,ECFL,ECFK,ECXMDA)
"RTN","ECXRAD",116,0)
 ...;..D FILE
"RTN","ECXRAD",117,0)
 ...D FILE
"RTN","ECXRAD",118,0)
 Q
"RTN","ECXRAD",119,0)
 ;
"RTN","ECXRAD",120,0)
FILE ;file record
"RTN","ECXRAD",121,0)
 ;node0
"RTN","ECXRAD",122,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",123,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",124,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",125,0)
 ;node1
"RTN","ECXRAD",126,0)
 ;mpi^dss dept^req physician npi^pc provider npi^pc prov person class^
"RTN","ECXRAD",127,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^
"RTN","ECXRAD",128,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",129,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC
"RTN","ECXRAD",130,0)
 N DA,DIK
"RTN","ECXRAD",131,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",132,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",133,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",134,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTS_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",135,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",136,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECDOCNPI_U_ECPTNPI_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",137,0)
 S ECODE1=ECODE1_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",138,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",139,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",140,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXRAD",141,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",142,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",143,0)
 Q
"RTN","ECXRAD",144,0)
 ;
"RTN","ECXRAD",145,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",146,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",147,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",148,0)
 Q
"RTN","ECXSCLD")
0^24^B38077981
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ; 9/21/04 7:33am
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71**;Dec 22, 1997
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES file.",!
"RTN","ECXSCLD",6,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",7,0)
 K ZTSAVE S ZTDESC="Gather Clinic stop codes for DSS",ZTRTN="START^ECXSCLD",ZTIO="" D ^%ZTLOAD
"RTN","ECXSCLD",8,0)
 Q
"RTN","ECXSCLD",9,0)
START ; entry point
"RTN","ECXSCLD",10,0)
 S EC=0,ECNT=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S ECD=^(0),DAT=$G(^("I")) I $P(ECD,U,3)="C" D FIX
"RTN","ECXSCLD",11,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",12,0)
 ;S $P(^ECX(728.44,0),U,3,4)=ECL_U_ECNT
"RTN","ECXSCLD",13,0)
 K ZTDESC,EC,J,ECD,ECD2,ECL,ECS,ECS2,ECP
"RTN","ECXSCLD",14,0)
 S ZTREQ="@" Q
"RTN","ECXSCLD",15,0)
 ;
"RTN","ECXSCLD",16,0)
FIX ; get stop codes and default style for feeder key
"RTN","ECXSCLD",17,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",18,0)
 K ECD2,ECS2 I $D(^ECX(728.44,EC,0)) S ECD2=^(0) F ECS=2,3 S ECS2(ECS)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",19,0)
 S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCLD",20,0)
 I $D(ECD2) D
"RTN","ECXSCLD",21,0)
 .I ID,ID'>DT I 'RD!(RD>DT) S:$P(ECD2,U,10)'=ID $P(ECD2,U,7)="" S $P(ECD2,U,10)=ID
"RTN","ECXSCLD",22,0)
 .I ID,RD,RD'>DT S:$P(ECD2,U,10) $P(ECD2,U,7)="" S $P(ECD2,U,10)=""
"RTN","ECXSCLD",23,0)
 .I ID,ID>DT S:$P(ECD2,U,10) $P(ECD2,U,7)="" S $P(ECD2,U,10)=""
"RTN","ECXSCLD",24,0)
 .I 'ID,$P(ECD2,U,10) S $P(ECD2,U,7)="",$P(ECD2,U,10)=""
"RTN","ECXSCLD",25,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)
"RTN","ECXSCLD",26,0)
 S ECDF=$S(ECS(18)]"":5,1:1) S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",27,0)
 S ECL=EC,ECD=EC_U_ECS(7)_U_ECS(18)
"RTN","ECXSCLD",28,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",29,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECD_U_ECS(7)_U_ECS(18),ECNT=ECNT+1,$P(^(0),U,6)=ECDF
"RTN","ECXSCLD",30,0)
 I $D(ECD2) D
"RTN","ECXSCLD",31,0)
 .S $P(ECD2,U,1,3)=ECD
"RTN","ECXSCLD",32,0)
 .I +ECS(7)'=+ECS2(2)!(+ECS(18)'=+ECS2(3)) S $P(ECD2,U,7)=""
"RTN","ECXSCLD",33,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",34,0)
 Q
"RTN","ECXSCLD",35,0)
 ;
"RTN","ECXSCLD",36,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",37,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",38,0)
 W !!,"This option produces a worksheet of (A)ll DSS Clinic Stops or only the",!,"(U)nreviewed Clinic Stops that are awaiting approval.  Clinics that were"
"RTN","ECXSCLD",39,0)
 W !,"defined as ""inactive"" by MAS the last time the option ""Create DSS Clinic",!,"Stop Code File"" was run will be indicated with an ""*"".",!
"RTN","ECXSCLD",40,0)
 S DIR(0)="S^A:ALL;U:UNREVIEWED",DIR("A")="Enter ""A"" or ""U""",DIR("?",1)="Enter: ""A"" to print a worksheet of all DSS Clinic Stops,",DIR("?")="       ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",41,0)
 D ^DIR K DIR G END:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",42,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",43,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",44,0)
 U IO
"RTN","ECXSCLD",45,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",46,0)
 S QFLG=0,$P(LN,"-",81)="",PG=0
"RTN","ECXSCLD",47,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",48,0)
 K ^TMP("EC",$J) F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)),$S(ECALL="A":1,1:$P(^(0),U,7)="") S ECSD=^(0) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",49,0)
 D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! G END
"RTN","ECXSCLD",50,0)
 F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^(ECSC) D SHOWEM Q:QFLG
"RTN","ECXSCLD",51,0)
 I $E(IOST)="C",'QFLG D SS
"RTN","ECXSCLD",52,0)
 K ^TMP("EC",$J),J,ECSC,ECSD,ECDATE,QFLG,PG,LN,SS
"RTN","ECXSCLD",53,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",54,0)
 Q
"RTN","ECXSCLD",55,0)
 ;
"RTN","ECXSCLD",56,0)
HEAD ; header for worksheet
"RTN","ECXSCLD",57,0)
 D SS Q:QFLG
"RTN","ECXSCLD",58,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"WORKSHEET FOR DSS CLINIC STOPS",?72,"Page: ",PG
"RTN","ECXSCLD",59,0)
 I ECDATE]"" W !,"(last reviewed on ",ECDATE,")"
"RTN","ECXSCLD",60,0)
 E  W !,"(NEVER REVIEWED)"
"RTN","ECXSCLD",61,0)
 W !
"RTN","ECXSCLD",62,0)
 W !!,?1,"CLINIC",?27,"STOP",?34,"CREDIT",?43,"DSS",?50,"DSS",?59,"ACTION",?67,"NAT'L",?74,"DSS"
"RTN","ECXSCLD",63,0)
 W !,?27,"CODE",?34,"STOP",?43,"STOP",?50,"CREDIT",?67,"CODE",?74,"DEPT",!,?1,"(* - currently inactive)",?34,"CODE",?43,"CODE",?50,"CODE",!,LN Q
"RTN","ECXSCLD",64,0)
 ;
"RTN","ECXSCLD",65,0)
SHOWEM ; list clinics for worksheet
"RTN","ECXSCLD",66,0)
 I $Y+4>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",67,0)
 W !!,$E(ECSC,1,28) W:$P(ECD,U,9)]"" "*" F J=1:1:5 W ?$P("27,34,43,50,62",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD",68,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?67,$S(ECN]"":ECN,1:"____"),?74,$S($P(ECD,U,10)'="":$P(ECD,U,10),1:"___")
"RTN","ECXSCLD",69,0)
 Q
"RTN","ECXSCLD",70,0)
SS ;SCROLL STOPS
"RTN","ECXSCLD",71,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD",72,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD",73,0)
 Q
"RTN","ECXSCLD",74,0)
 ;
"RTN","ECXSCLD",75,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",76,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",77,0)
 W ! S DIC=728.44,DIC(0)="QEAMZ" D ^DIC G END:Y<0 W !,"STOP CODE : ",$P(Y(0),U,2),!,"CREDIT STOP CODE : ",$P(Y(0),U,3)
"RTN","ECXSCLD",78,0)
 S DIE=DIC,DA=+Y,DR="3;4;5//1;S:X'=4 Y=6;7;6///"_DT_";8" D ^DIE S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^(0),U,8)="" S $P(^(0),U,7)="" K DIC,DIE,DA G EDIT
"RTN","ECXSCLD",79,0)
 ;
"RTN","ECXSCLD",80,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",81,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",82,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",83,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",84,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",85,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",86,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",87,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",88,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G END
"RTN","ECXSCLD",89,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G END
"RTN","ECXSCLD",90,0)
 ;
"RTN","ECXSCLD",91,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",92,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^(EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",93,0)
 S ZTREQ="@" G END
"RTN","ECXSCLD",94,0)
END K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN
"RTN","ECXSCLD",95,0)
 Q
"RTN","ECXSCLD",96,0)
 ;
"RTN","ECXSCLD",97,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",98,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",99,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)),$P(^(0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",100,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",101,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",102,0)
 D ^ECXSCX1
"RTN","ECXSCLD",103,0)
 Q
"RTN","ECXSCX2")
0^7^B7727803
"RTN","ECXSCX2",1,0)
ECXSCX2 ;ALB/ESD  DSS Clinic Extract Utilities (continued) ; 10/13/04 8:07am
"RTN","ECXSCX2",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,49,71**;Dec 22, 1997
"RTN","ECXSCX2",3,0)
 ;
"RTN","ECXSCX2",4,0)
 ;
"RTN","ECXSCX2",5,0)
INTPAT ;initialize patient variables
"RTN","ECXSCX2",6,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCX2",7,0)
 S (ECPTTM,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX)=""
"RTN","ECXSCX2",8,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE)=""
"RTN","ECXSCX2",9,0)
 S (ECXCNTY,ECXATYP,ECXPVST,ECXMTST)=""
"RTN","ECXSCX2",10,0)
 Q
"RTN","ECXSCX2",11,0)
 ;
"RTN","ECXSCX2",12,0)
PAT1(ECXDFN,ECXDATE,ECXERR)     ;get patient demographic data
"RTN","ECXSCX2",13,0)
 N ECXPAT,K,OK,X
"RTN","ECXSCX2",14,0)
 S ECXERR=0
"RTN","ECXSCX2",15,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCX2",16,0)
 I 'OK S ECXERR=1 Q
"RTN","ECXSCX2",17,0)
 S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXSCX2",18,0)
 S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCX2",19,0)
 S ECXVET=ECXPAT("VET"),ECXSVC=ECXPAT("SC%"),ECXRACE=ECXPAT("RACE")
"RTN","ECXSCX2",20,0)
 S ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCX2",21,0)
 S ECXRST=ECXPAT("IR STAT"),ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCX2",22,0)
 S ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCX2",23,0)
 S ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCX2",24,0)
 S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXSCX2",25,0)
 ; changes for 2001
"RTN","ECXSCX2",26,0)
 S ECXPOS=ECXPAT("POS"),ECXPHI=ECXPAT("PHI")
"RTN","ECXSCX2",27,0)
 ;- Agent Orange location
"RTN","ECXSCX2",28,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXSCX2",29,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXSCX2",30,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSCX2",31,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",32,0)
 ; - Race and Ethnicity
"RTN","ECXSCX2",33,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXSCX2",34,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXSCX2",35,0)
 Q
"RTN","ECXSCX2",36,0)
 ;
"RTN","ECXSCX2",37,0)
PAT2(ECXDFN,ECXDATE)    ;get date specific patient data
"RTN","ECXSCX2",38,0)
 N K,X
"RTN","ECXSCX2",39,0)
 ;get primary care data
"RTN","ECXSCX2",40,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCX2",41,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXSCX2",42,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXSCX2",43,0)
 ;get inpatient data
"RTN","ECXSCX2",44,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXTS=$P(X,U,3)
"RTN","ECXSCX2",45,0)
 S ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXSCX2",46,0)
 ;- set national patient record flag if exist
"RTN","ECXSCX2",47,0)
 D NPRF^ECXUTL5
"RTN","ECXSCX2",48,0)
 Q
"RTN","ECXSCX2",49,0)
 ;
"RTN","ECXSCX2",50,0)
FILE2(ECXFILE,EC7,ECODE) ;file record
"RTN","ECXSCX2",51,0)
 N DA,DIK,X S X=""
"RTN","ECXSCX2",52,0)
 F  S X=$O(ECODE(X)) Q:X=""  S ^ECX(ECXFILE,EC7,X)=ECODE(X)
"RTN","ECXSCX2",53,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSCX2",54,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX2",55,0)
 Q
"RTN","ECXSCX2",56,0)
 ;
"RTN","ECXSCX2",57,0)
CBOC(MDIV) ;Determine whether patient's facility was CBOC
"RTN","ECXSCX2",58,0)
 N LOCARR,DIC,DR,DIQ,DA,INST,FTYP
"RTN","ECXSCX2",59,0)
 S DIC=40.8,DA=MDIV,DR=".07",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",60,0)
 S INST=$G(LOCARR(40.8,MDIV,.07,"I")) I INST="" Q ""
"RTN","ECXSCX2",61,0)
 K LOCARR S DIC=4,DA=INST,DR="13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",62,0)
 S FTYP=$G(LOCARR(4,INST,13,"I")) I FTYP="" Q ""
"RTN","ECXSCX2",63,0)
 K LOCARR S DIC=4.1,DA=FTYP,DR=".01",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",64,0)
 Q $S($G(LOCARR(4.1,FTYP,.01,"I"))="CBOC":"Y",1:"")
"RTN","ECXSCXN")
0^1^B52189244
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ; 10/26/04 10:26am
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71**;Dec 22, 1997
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",12,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",13,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI)=""
"RTN","ECXSCXN",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",15,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",16,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",17,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",18,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",19,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",20,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",21,0)
 .D EN^DIQ1
"RTN","ECXSCXN",22,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",23,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",24,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",25,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",26,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",27,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",28,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",29,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",30,0)
 ;send missing clinic msg
"RTN","ECXSCXN",31,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",32,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",33,0)
 Q
"RTN","ECXSCXN",34,0)
 ;
"RTN","ECXSCXN",35,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",36,0)
 N CHKOUT,ECD,JJ,K,OUT,PNODE,PP,STAT,STOP,MDIV
"RTN","ECXSCXN",37,0)
 S ECD=ECSD1
"RTN","ECXSCXN",38,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",39,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",40,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",41,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",42,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",43,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",44,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",45,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",46,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",47,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",48,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",49,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",50,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",51,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",52,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",53,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",54,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",55,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",56,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",57,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",58,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",59,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",62,0)
 ..S ECXERR=0
"RTN","ECXSCXN",63,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",64,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",65,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",66,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",67,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",68,0)
 ..;get date specific patient data
"RTN","ECXSCXN",69,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",70,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",71,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",72,0)
 ..;get visit specific data
"RTN","ECXSCXN",73,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",74,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",75,0)
 ..S ECXICD9P=$G(ECXVIST("ICD9P"))
"RTN","ECXSCXN",76,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=$G(ECXVIST("ICD9"_I))
"RTN","ECXSCXN",77,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",78,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV")
"RTN","ECXSCXN",79,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",80,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",81,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",82,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",83,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",84,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",85,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",86,0)
 ..;xray (105) or lab (108)
"RTN","ECXSCXN",87,0)
 ..I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",88,0)
 ...S ECXKEY=ECXSTOP_"00003000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",89,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE       ;- Don't file rec if no encounter num
"RTN","ECXSCXN",90,0)
 ..;appointments
"RTN","ECXSCXN",91,0)
 ..I PROCESS=1 D  Q     ;get appt length
"RTN","ECXSCXN",92,0)
 ...S (ALEN,JJ,OUT)=0
"RTN","ECXSCXN",93,0)
 ...F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:('JJ)!(OUT)  S K=0 D
"RTN","ECXSCXN",94,0)
 ....F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:('K)!(OUT)  D
"RTN","ECXSCXN",95,0)
 .....S ECXOBI=$G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,"OB")),PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U)
"RTN","ECXSCXN",96,0)
 .....S:PP=ECXDFN OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",97,0)
 .....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",98,0)
 ....S ECXSTOP=P1
"RTN","ECXSCXN",99,0)
 ....S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)),ECXPVST=$P(PNODE,U,7),ECXATYP=$P(PNODE,U,16)  ;Get purpose of visit & appt type
"RTN","ECXSCXN",100,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN",101,0)
 .....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",102,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",103,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",104,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",105,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",106,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",107,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",108,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",109,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",110,0)
 ...S ALEN=0
"RTN","ECXSCXN",111,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",112,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",113,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",114,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",115,0)
 ..;dispositions
"RTN","ECXSCXN",116,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",117,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",118,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",119,0)
 Q
"RTN","ECXSCXN",120,0)
 ;
"RTN","ECXSCXN",121,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",122,0)
 N STR
"RTN","ECXSCXN",123,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",124,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",125,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",126,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",127,0)
 S STR(0)=STR(0)_ECXCLIN_U_ECXTS_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",128,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",129,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",130,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",131,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",132,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",133,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",134,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_$G(ECXNPIPR)_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",135,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",136,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",137,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",138,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",139,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",140,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",141,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",142,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",143,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",144,0)
 Q
"RTN","ECXSCXN",145,0)
 ;
"RTN","ECXSCXN",146,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",147,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",148,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",149,0)
 Q
"RTN","ECXSCXN1")
0^25^B9561025
"RTN","ECXSCXN1",1,0)
ECXSCXN1 ;ALB/JAP  Clinic Extract No Shows; 8/28/02 1:11pm ; 10/26/04 10:35am
"RTN","ECXSCXN1",2,0)
 ;;3.0;DSS EXTRACTS;**71**;Dec 22, 1997
"RTN","ECXSCXN1",3,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN1",4,0)
 ;      ECXSD  = start date, ECXED  = end date
"RTN","ECXSCXN1",5,0)
 N ALEN,CLIN,JDATE,JJ,NODE,NOSHOW,PP,STAT,MDIV
"RTN","ECXSCXN1",6,0)
 S CLIN=0
"RTN","ECXSCXN1",7,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN  D
"RTN","ECXSCXN1",8,0)
 .Q:$P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C"
"RTN","ECXSCXN1",9,0)
 .S (P1,P2,P3)=""
"RTN","ECXSCXN1",10,0)
 .D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN1",11,0)
 .Q:TOSEND=6
"RTN","ECXSCXN1",12,0)
 .;find appts in date range
"RTN","ECXSCXN1",13,0)
 .S JDATE=ECXSD,(ALEN,NOSHOW)=""
"RTN","ECXSCXN1",14,0)
 .F  S JDATE=$O(^SC(CLIN,"S",JDATE)) Q:'JDATE  Q:JDATE>ECXED  D
"RTN","ECXSCXN1",15,0)
 ..S ECXDATE=JDATE,JJ=0,ECXTI=$P($$FMTE^XLFDT(JDATE,1),"@",2)
"RTN","ECXSCXN1",16,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN1",17,0)
 ..S:ECXTI="000000" ECXTI="000300"
"RTN","ECXSCXN1",18,0)
 ..;get noshows only - no data in check-in/check-out node
"RTN","ECXSCXN1",19,0)
 ..F  S JJ=$O(^SC(CLIN,"S",JDATE,JJ)) Q:'JJ  D
"RTN","ECXSCXN1",20,0)
 ...S K=0
"RTN","ECXSCXN1",21,0)
 ...F  S K=$O(^SC(CLIN,"S",JDATE,JJ,K)) Q:'K  D
"RTN","ECXSCXN1",22,0)
 ....S PP=$G(^SC(CLIN,"S",JDATE,JJ,K,0)),ECXDFN=$P(PP,U) Q:ECXDFN=""
"RTN","ECXSCXN1",23,0)
 ....S NODE=$G(^DPT(ECXDFN,"S",JDATE,0)),MDIV=$P($G(^SC(CLIN,0)),U,15)
"RTN","ECXSCXN1",24,0)
 ....Q:(NODE="")!($P(NODE,U)'=CLIN)
"RTN","ECXSCXN1",25,0)
 ....S ECXOBI=$G(^SC(CLIN,"S",JDATE,JJ,K,"OB")),STAT=$P(NODE,U,2)
"RTN","ECXSCXN1",26,0)
 ....S NOSHOW=$S(STAT="N":"N",STAT="NA":"N",1:"")
"RTN","ECXSCXN1",27,0)
 ....Q:NOSHOW=""  D INTPAT^ECXSCX2 S ECXERR=0
"RTN","ECXSCXN1",28,0)
 ....D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN1",29,0)
 ....S ALEN=$P(PP,U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN1",30,0)
 ....D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN1",31,0)
 ....S ECXPVST=$P(NODE,U,7),ECXATYP=$P(NODE,U,16)  ;Get POV & appt type
"RTN","ECXSCXN1",32,0)
 ....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2)
"RTN","ECXSCXN1",33,0)
 ....S ECXCLIN=CLIN,ECXSTOP=P1 S:ECXICD9P="" ECXICD9P="799.9"
"RTN","ECXSCXN1",34,0)
 ....S:ECXCPT1="" ECXCPT1="9919901"
"RTN","ECXSCXN1",35,0)
 ....S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")
"RTN","ECXSCXN1",36,0)
 ....S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN1",37,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN1",38,0)
 .....S ECXKEY=P1_P2_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",39,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",40,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN1",41,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",42,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",43,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN1",44,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",45,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",46,0)
 ....;create a record for noshow appended ekg. The code was removed for CTX-0604-70970 CLI Extract Problem EXPANDED to NoShows
"RTN","ECXSCXN1",47,0)
 Q
"RTN","ECXSURG")
0^20^B48062633
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ; 12/8/04 7:41am
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71**;Dec 22, 1997
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",10,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",11,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",12,0)
 ..I $D(^SRF(ECD0,0)) S ECXDFN=+$P(^(0),U,1) D STUFF Q:QFLG
"RTN","ECXSURG",13,0)
 Q
"RTN","ECXSURG",14,0)
 ;
"RTN","ECXSURG",15,0)
STUFF ;gather data
"RTN","ECXSURG",16,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",17,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI
"RTN","ECXSURG",18,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXSURG",19,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",20,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",21,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",22,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",23,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",24,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",25,0)
 S DATAOP=$S($D(^SRF(ECD0,"OP")):^("OP"),1:"")
"RTN","ECXSURG",26,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",27,0)
 ;get data
"RTN","ECXSURG",28,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",29,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",30,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",31,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",32,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",33,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",34,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",35,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",36,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",37,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",38,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",39,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",40,0)
 ;look for non-OR
"RTN","ECXSURG",41,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",42,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",43,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",44,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",45,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",46,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",47,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",48,0)
 .;
"RTN","ECXSURG",49,0)
 .;- Get DSS Stop Code to use in encounter number
"RTN","ECXSURG",50,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXSURG",51,0)
 ;
"RTN","ECXSURG",52,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",53,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",54,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",55,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",56,0)
 ;get service of attending surgeon
"RTN","ECXSURG",57,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",58,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",59,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",60,0)
 ;anesthesia technique
"RTN","ECXSURG",61,0)
 S ECANE="",PP=""
"RTN","ECXSURG",62,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",63,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",64,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",65,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",66,0)
 ;get primary procedure
"RTN","ECXSURG",67,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",68,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",69,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",70,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",71,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",72,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",73,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",74,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",75,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",76,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",77,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",78,0)
 .N ECNTIME,ECSTIME,ECATIME
"RTN","ECXSURG",79,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",80,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",81,0)
 .I (A1&A2)&(+J=1) D TIME  S ECATIME=TIME
"RTN","ECXSURG",82,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",83,0)
 ..;
"RTN","ECXSURG",84,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",85,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",86,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",87,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",88,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",89,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",90,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",91,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",92,0)
 ; -Recovery Room Time
"RTN","ECXSURG",93,0)
 S ECRR=""
"RTN","ECXSURG",94,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",95,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",96,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",97,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",98,0)
 ;
"RTN","ECXSURG",99,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",100,0)
 S ECXORCT=($$FMDIFF^XLFDT($P($G(DATA2),U,14),$P($G(DATA2),U,13),2)/60)/15
"RTN","ECXSURG",101,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",102,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",103,0)
 ;
"RTN","ECXSURG",104,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",105,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",106,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",107,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",108,0)
 .I CON S ECXPTHA=ECXPTHA/2
"RTN","ECXSURG",109,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",110,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",111,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",112,0)
 ;
"RTN","ECXSURG",113,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",114,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",115,0)
 ;
"RTN","ECXSURG",116,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",117,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",118,0)
 ;
"RTN","ECXSURG",119,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",120,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",121,0)
 ;
"RTN","ECXSURG",122,0)
 D FILE
"RTN","ECXSURG",123,0)
 ;get secondary procedures
"RTN","ECXSURG",124,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",125,0)
 S ECXJ=0
"RTN","ECXSURG",126,0)
 F  S ECXJ=$O(^SRF(ECD0,13,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(2)),$P(^(2),U)]"" D
"RTN","ECXSURG",127,0)
 .S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",128,0)
 .K ARR,ERR
"RTN","ECXSURG",129,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",130,0)
 ..K ARR,ERR
"RTN","ECXSURG",131,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",132,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",133,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",134,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",135,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",136,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",137,0)
 .D FILE
"RTN","ECXSURG",138,0)
 ;get prostheses
"RTN","ECXSURG",139,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",140,0)
 S ECXJ=0
"RTN","ECXSURG",141,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",142,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",143,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",144,0)
 .D FILE
"RTN","ECXSURG",145,0)
 Q
"RTN","ECXSURG",146,0)
 ;
"RTN","ECXSURG",147,0)
FILE ;file record
"RTN","ECXSURG",148,0)
 ;node0
"RTN","ECXSURG",149,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG",150,0)
 ;surg specialty^or room #^
"RTN","ECXSURG",151,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG",152,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^
"RTN","ECXSURG",153,0)
 ;prostheses^qty^^
"RTN","ECXSURG",154,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG",155,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG",156,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG",157,0)
 ;node1
"RTN","ECXSURG",158,0)
 ;mpi^dss dept ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG",159,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG",160,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG",161,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG",162,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG",163,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG",164,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG",165,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG",166,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG",167,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG",168,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG",169,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG",170,0)
 ;record flag ECXNPRFI
"RTN","ECXSURG",171,0)
 N DA,DIK,STR
"RTN","ECXSURG",172,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG",173,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG",174,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG",175,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG",176,0)
 S STR=ECXMN_U_ECXTS_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG",177,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG",178,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG",179,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECSRNPI_U_ECATNPI_U_ECSANPI_U_ECPTNPI_U
"RTN","ECXSURG",180,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG",181,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG",182,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG",183,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG",184,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG",185,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXSURG",186,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG",187,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG",188,0)
 ;
"RTN","ECXSURG",189,0)
TIME ; given date/time get increment
"RTN","ECXSURG",190,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",191,0)
 N CON,TIMEDIF
"RTN","ECXSURG",192,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",193,0)
 ;
"RTN","ECXSURG",194,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",195,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",196,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",197,0)
 I 'CON D
"RTN","ECXSURG",198,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",199,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",200,0)
 I CON D
"RTN","ECXSURG",201,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",202,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",203,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",204,0)
 Q
"RTN","ECXSURG",205,0)
 ;
"RTN","ECXSURG",206,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",207,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",208,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",209,0)
 Q
"RTN","ECXSURG",210,0)
 ;
"RTN","ECXSURG",211,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",212,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTRANS")
0^27^B59690762
"RTN","ECXTRANS",1,0)
ECXTRANS ;ALB/GTS,JAP,BIR/DMA-Extract from Local Editing Files and Transmit ; 12/14/04 9:10am
"RTN","ECXTRANS",2,0)
 ;;3.0;DSS EXTRACTS;**2,9,12,8,13,14,23,24,33,49,54,75,71**;Dec 22, 1997
"RTN","ECXTRANS",3,0)
EN ;entry point
"RTN","ECXTRANS",4,0)
 N ECDA,ECRE,ECTMP,ECCHK,ECDIVVR,ECXDIQ,JJ,SS,OUT,DIR,DUOUT
"RTN","ECXTRANS",5,0)
 N DTOUT,DIRUT,DIC,X,Y,ECXLOGIC,ECSD,FODMN
"RTN","ECXTRANS",6,0)
 S ECXQUEUE=$P($G(^ECX(728,1,"QUEUE")),"^",1)
"RTN","ECXTRANS",7,0)
 I ECXQUEUE'?1"DM"1U D  Q
"RTN","ECXTRANS",8,0)
 .W !,"You have not defined a proper transmission queue"
"RTN","ECXTRANS",9,0)
 .W !,"for entry number 1 in the DSS EXTRACTS file (#728)."
"RTN","ECXTRANS",10,0)
 .W !,"No transmission allowed."
"RTN","ECXTRANS",11,0)
 .D PAUSE
"RTN","ECXTRANS",12,0)
 ;** check divisions for transmission
"RTN","ECXTRANS",13,0)
 S ECCHK=$$DIV4^XUSER(.ECTMP,DUZ)
"RTN","ECXTRANS",14,0)
 I 'ECCHK D  Q
"RTN","ECXTRANS",15,0)
 .W !,"You do not have any divisions defined in your user set up and cannot transmit."
"RTN","ECXTRANS",16,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","ECXTRANS",17,0)
 W !!,"Your user setup will only allow you to transmit extracts from the"
"RTN","ECXTRANS",18,0)
 W !,"following divisions:",!
"RTN","ECXTRANS",19,0)
 S ECDIVVR=""
"RTN","ECXTRANS",20,0)
 F  S ECDIVVR=$O(ECTMP(ECDIVVR)) Q:'(+ECDIVVR)  D
"RTN","ECXTRANS",21,0)
 .K ECXDIC S DA=ECDIVVR,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01"
"RTN","ECXTRANS",22,0)
 .D EN^DIQ1 W !,"   ",$G(ECXDIC(4,DA,.01,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRANS",23,0)
 W !!,"If you can't select an extract, it is probably from another division.",!
"RTN","ECXTRANS",24,0)
 D PAUSE Q:OUT
"RTN","ECXTRANS",25,0)
AGAIN S ECRE="",DIC="^ECX(727,",DIC(0)="AEQM"
"RTN","ECXTRANS",26,0)
 S DIC("A")="Transmit which extract: "
"RTN","ECXTRANS",27,0)
 S DIC("S")="I '$D(^ECX(727,+Y,""L"")),'$D(^ECX(727,+Y,""PURG"")),$D(ECTMP(+$P($G(^ECX(727,+Y,""DIV"")),U,1)))"
"RTN","ECXTRANS",28,0)
 D ^DIC
"RTN","ECXTRANS",29,0)
 I Y<0 W !! Q
"RTN","ECXTRANS",30,0)
 ;get data on extract
"RTN","ECXTRANS",31,0)
 S DR="1;2;3;4;5;6;14;15",(ECDA,DA)=+Y,DIQ(0)="IE",DIQ="ECXDIQ" D EN^DIQ1
"RTN","ECXTRANS",32,0)
 I ECXDIQ(727,ECDA,14,"I")="" D
"RTN","ECXTRANS",33,0)
 .S ECXDIQ(727,ECDA,14,"I")=$$FISCAL^ECXUTL1(ECXDIQ(727,ECDA,3,"I"))
"RTN","ECXTRANS",34,0)
 .S ECXDIQ(727,ECDA,14,"E")=ECXDIQ(727,ECDA,14,"I")
"RTN","ECXTRANS",35,0)
 S ECXLOGIC=ECXDIQ(727,ECDA,14,"I")
"RTN","ECXTRANS",36,0)
 S ECSD=ECXDIQ(727,ECDA,3,"I")
"RTN","ECXTRANS",37,0)
 W !!,ECXDIQ(727,ECDA,6,"E")_" Extract (#"_ECDA_")",?42,"Records:    ",ECXDIQ(727,ECDA,5,"E")
"RTN","ECXTRANS",38,0)
 W !,"Generated on: ",ECXDIQ(727,ECDA,1,"E"),?42,"Start date: ",ECXDIQ(727,ECDA,3,"E")
"RTN","ECXTRANS",39,0)
 W !,"Division:     ",$E(ECXDIQ(727,ECDA,15,"E"),1,26),?42,"End date:   ",ECXDIQ(727,ECDA,4,"E")
"RTN","ECXTRANS",40,0)
 S X=$E(ECXDIQ(727,ECDA,14,"I"),5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTRANS",41,0)
 W !!,"The data was extracted using "_X_"fiscal year "_$E(ECXDIQ(727,ECDA,14,"I"),1,4)_" logic."
"RTN","ECXTRANS",42,0)
 W !!,"MailMan transmission of the "_ECXDIQ(727,ECDA,2,"E")_" extract is set to a"
"RTN","ECXTRANS",43,0)
 W !,"limit of 131,000 bytes per message.  Each extract record ends with a ^~."
"RTN","ECXTRANS",44,0)
 I $G(^ECX(727,ECDA,"TR")) S ECX=^("TR") D  Q:OUT
"RTN","ECXTRANS",45,0)
 .S OUT=0
"RTN","ECXTRANS",46,0)
 .W !!,"This extract was transmitted on ",$TR($$FMTE^XLFDT(ECX,"5DF")," ","0")
"RTN","ECXTRANS",47,0)
 .K ECX S DIR(0)="Y",DIR("A")="Do you want to retransmit " D ^DIR K DIR
"RTN","ECXTRANS",48,0)
 .I 'Y S OUT=1 Q
"RTN","ECXTRANS",49,0)
 .K ^ECX(727,ECDA,"TR")
"RTN","ECXTRANS",50,0)
 .S ECRE="re"
"RTN","ECXTRANS",51,0)
 S ECTYPE=$P(^ECX(727,ECDA,0),U,3),ECIEN=+$O(^ECX(727.1,"AC",ECTYPE,0))
"RTN","ECXTRANS",52,0)
 S ECPIECE=$P($G(^ECX(727.1,ECIEN,0)),U,10)
"RTN","ECXTRANS",53,0)
 I ECPIECE>0,$P($G(^ECX(728,1,7.1)),U,ECPIECE)]"" D  Q
"RTN","ECXTRANS",54,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",55,0)
 .D MES^XPDUTL("An "_ECTYPE_" Extract is currently running or scheduled to run.")
"RTN","ECXTRANS",56,0)
 .D MES^XPDUTL("Please wait until that job has completed before attempting")
"RTN","ECXTRANS",57,0)
 .D MES^XPDUTL("this transmission.")
"RTN","ECXTRANS",58,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",59,0)
 .D PAUSE
"RTN","ECXTRANS",60,0)
 S ZTSK=$G(^ECX(727,ECDA,"Q"))
"RTN","ECXTRANS",61,0)
 I ZTSK D STAT^%ZTLOAD I ZTSK(0) I ZTSK(1)<3 D  Q
"RTN","ECXTRANS",62,0)
 .W !!,"Task ",ZTSK," is already queued to transmit this extract."
"RTN","ECXTRANS",63,0)
 .K ZTSK
"RTN","ECXTRANS",64,0)
 .D PAUSE
"RTN","ECXTRANS",65,0)
 S FODMN=$$FODMN()
"RTN","ECXTRANS",66,0)
 ;Field office reminder
"RTN","ECXTRANS",67,0)
 I FODMN D
"RTN","ECXTRANS",68,0)
 .W !
"RTN","ECXTRANS",69,0)
 .W !,"** This extract is being sent from a field office domain.  **"
"RTN","ECXTRANS",70,0)
 .W !,"** Extract message(s) will only be delivered to you and    **"
"RTN","ECXTRANS",71,0)
 .W !,"** will be placed into your 'DSSXMIT' mail basket.         **"
"RTN","ECXTRANS",72,0)
 .W !
"RTN","ECXTRANS",73,0)
 .;Ensure user has a DSSXMIT mail basket
"RTN","ECXTRANS",74,0)
 .N TMPARR
"RTN","ECXTRANS",75,0)
 .D LISTBSKT^XMXAPIB(DUZ,,,,"DSSXMIT","TMPARR")
"RTN","ECXTRANS",76,0)
 .I '$D(TMPARR("XMLIST","BSKT","DSSXMIT")) D
"RTN","ECXTRANS",77,0)
 ..;Create DSSXMIT basket
"RTN","ECXTRANS",78,0)
 ..N IEN,XMERR
"RTN","ECXTRANS",79,0)
 ..D CRE8BSKT^XMXAPIB(DUZ,"DSSXMIT",.IEN)
"RTN","ECXTRANS",80,0)
 ..K ^TMP("XMERR",$J)
"RTN","ECXTRANS",81,0)
 ;Test queue clearance
"RTN","ECXTRANS",82,0)
 ;I 'FODMN I (ECXLOGIC'=$$FISCAL^ECXUTL1(ECSD))!((ECXLOGIC>$$FISCAL^ECXUTL1(DT))!(ECXLOGIC=$$FISCAL^ECXUTL1(DT))) D  Q:OUT
"RTN","ECXTRANS",83,0)
 ;.S OUT=0
"RTN","ECXTRANS",84,0)
 ;.K DIR
"RTN","ECXTRANS",85,0)
 ;.S DIR(0)="Y"
"RTN","ECXTRANS",86,0)
 ;.S DIR("A",1)="** This extract will be transmitted to the AAC test queue **"
"RTN","ECXTRANS",87,0)
 ;.S DIR("A")="Do you want to continue "
"RTN","ECXTRANS",88,0)
 ;.W !! D ^DIR
"RTN","ECXTRANS",89,0)
 ;.I 'Y S OUT=1 Q
"RTN","ECXTRANS",90,0)
 ;.S ECXQUEUE=$P($G(^ECX(728,1,"QUEUE")),"^",2)
"RTN","ECXTRANS",91,0)
 ;.S:ECXQUEUE="" ECXQUEUE="DMT"
"RTN","ECXTRANS",92,0)
 S ZTSAVE("ECDA")="",ZTSAVE("ECXQUEUE")="",ZTSAVE("ECRE")=""
"RTN","ECXTRANS",93,0)
 S ZTRTN="START^ECXTRANS",ZTIO=""
"RTN","ECXTRANS",94,0)
 S ZTDESC="Transmission of extract # "_ECDA
"RTN","ECXTRANS",95,0)
 W !! D ^%ZTLOAD
"RTN","ECXTRANS",96,0)
 I $D(ZTSK) D
"RTN","ECXTRANS",97,0)
 .W !,"Request queued as Task #",ZTSK,"."
"RTN","ECXTRANS",98,0)
 .S ^ECX(727,ECDA,"Q")=ZTSK K ZTSK
"RTN","ECXTRANS",99,0)
 .D PAUSE
"RTN","ECXTRANS",100,0)
 Q
"RTN","ECXTRANS",101,0)
 ; entry point for task
"RTN","ECXTRANS",102,0)
START N DA,DIC,DIQ,DR,ECAR1,ECAR2,ECC1,ECC2,ECED,ECGPR,ECF,ECGRP,ECHEAD,ECINST
"RTN","ECXTRANS",103,0)
 N ECMAX,ECMAXR,ECMSN,ECPACK,ECSIZ,ECVER,ECXDIC,I,J,EXDT
"RTN","ECXTRANS",104,0)
 N STR,STRCNT,X,ECSD,ECXLOGIC
"RTN","ECXTRANS",105,0)
 S:$P(^ECX(727,ECDA,0),U,3)'="Prosthetics" ECINST=$P(^ECX(728,1,0),U)
"RTN","ECXTRANS",106,0)
 S:$P(^ECX(727,ECDA,0),U,3)="Prosthetics" ECINST=$P(^("DIV"),U)
"RTN","ECXTRANS",107,0)
 S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRANS",108,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I"))
"RTN","ECXTRANS",109,0)
 S ECF=^ECX(727,ECDA,"FILE"),ECHEAD=^("HEAD"),ECGRP=^("GRP")
"RTN","ECXTRANS",110,0)
 S X=^(0),ECPACK=$P(X,U,3),ECSD=$P(X,U,4),ECED=$P(X,U,5)
"RTN","ECXTRANS",111,0)
 S X=$G(^("VER")),ECVER=$P(X,"^",1),ECXLOGIC=$P(X,"^",2)
"RTN","ECXTRANS",112,0)
 S:'ECVER ECVER=1 S ECVER=$$RJ^XLFSTR(ECVER,3,0)
"RTN","ECXTRANS",113,0)
 I ECXLOGIC="" S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTRANS",114,0)
 S ECXLOGIC=$$PAD^ECXUTL1(ECXLOGIC,5,"B"," ")
"RTN","ECXTRANS",115,0)
 I ECPACK["(setup)" S ECXQUEUE="DMU"
"RTN","ECXTRANS",116,0)
 K ^TMP($J)
"RTN","ECXTRANS",117,0)
 S ECHD(1)=ECINST_ECHEAD_$$ECXYM^ECXUTL(ECED)_ECVER_ECXLOGIC
"RTN","ECXTRANS",118,0)
 S ECMAX=130000,ECMAXR=250,ECLN=2,ECMSN=1,(ECRN,ECSIZ)=0,J=""
"RTN","ECXTRANS",119,0)
 F  S J=$O(^ECX(ECF,"AC",ECDA,J)) Q:('J)  D
"RTN","ECXTRANS",120,0)
 .M ECAR1=^ECX(ECF,J) S (ECAR2,ECC2)=1,(ECAR2(ECC2),ECC1)=""
"RTN","ECXTRANS",121,0)
 .F  S ECC1=$O(ECAR1(ECC1)) Q:ECC1=""  D
"RTN","ECXTRANS",122,0)
 ..S:ECC1=0 ECAR1(ECC1)=$P(ECAR1(ECC1),"^",4,999)
"RTN","ECXTRANS",123,0)
 ..S ECAR2(ECC2)=ECAR2(ECC2)_ECAR1(ECC1) I $L(ECAR2(ECC2))>ECMAXR D
"RTN","ECXTRANS",124,0)
 ...F I=ECMAXR:-1:1 Q:$E(ECAR2(ECC2),I)="^"
"RTN","ECXTRANS",125,0)
 ...S (X,ECAR2)=ECAR2+1,ECAR2(X)=$E(ECAR2(ECC2),I+1,$L(ECAR2(ECC2)))
"RTN","ECXTRANS",126,0)
 ...S ECAR2(ECC2)=$E(ECAR2(ECC2),1,I),ECC2=X
"RTN","ECXTRANS",127,0)
 .S ECAR2(ECC2)=ECAR2(ECC2)_"^~",ECRN=ECRN+1,X=""
"RTN","ECXTRANS",128,0)
 .F  S X=$O(ECAR2(X)) Q:X=""  D
"RTN","ECXTRANS",129,0)
 ..S ^TMP($J,ECMSN,ECLN,0)=ECAR2(X),ECLN=ECLN+1,ECSIZ=ECSIZ+$L(ECAR2(X))
"RTN","ECXTRANS",130,0)
 .K ECAR1,ECAR2
"RTN","ECXTRANS",131,0)
 .I (ECSIZ>ECMAX),($O(^ECX(ECF,"AC",ECDA,J))) D
"RTN","ECXTRANS",132,0)
 ..S ECLN=2,ECMSN=ECMSN+1,ECSIZ=0
"RTN","ECXTRANS",133,0)
 ;quit if user stopped task
"RTN","ECXTRANS",134,0)
 I $$S^%ZTLOAD D CLEAN Q
"RTN","ECXTRANS",135,0)
 ;generate mailman messages to aac
"RTN","ECXTRANS",136,0)
 S ECXLNCNT=9,(ECXXMZ,STRCNT)=0,STR=""
"RTN","ECXTRANS",137,0)
 F ECMS=1:1:ECMSN D
"RTN","ECXTRANS",138,0)
 .D SEND(.ECXXMZ)
"RTN","ECXTRANS",139,0)
 .S STR=STR_$$RJ^XLFSTR(ECXXMZ,18," "),STRCNT=STRCNT+1 I STRCNT=4 D
"RTN","ECXTRANS",140,0)
 ..S ^TMP($J,"LOC",ECXLNCNT,0)=STR,ECXLNCNT=ECXLNCNT+1
"RTN","ECXTRANS",141,0)
 ..S STR="",STRCNT=0
"RTN","ECXTRANS",142,0)
 I STR]"" S ^TMP($J,"LOC",ECXLNCNT,0)=STR
"RTN","ECXTRANS",143,0)
 ;send msg to local dss grp
"RTN","ECXTRANS",144,0)
 D SENDLOC,CLEAN
"RTN","ECXTRANS",145,0)
 Q
"RTN","ECXTRANS",146,0)
 ;
"RTN","ECXTRANS",147,0)
SEND(ECXXMZ) ;send individual messages
"RTN","ECXTRANS",148,0)
 N ECXDD,DA,DIC,DIE,DINUM,X,Y,Z,XMDUZ,XMTEXT,XMSUB,XMY,XMZ,FODMN
"RTN","ECXTRANS",149,0)
 S XMSUB="("_ECGRP_") "_ECINST_" - "_ECPACK_" DSS EXTRACT, MESSAGE "_ECMS_" OF "_ECMSN
"RTN","ECXTRANS",150,0)
 S XMDUZ="DSS SYSTEM",^TMP($J,ECMS,1,0)=ECHD(1)
"RTN","ECXTRANS",151,0)
 S XMY("XXX@Q-"_ECXQUEUE_".VA.GOV")=""
"RTN","ECXTRANS",152,0)
 ;Send extracts done at field offices to user instead of AAC
"RTN","ECXTRANS",153,0)
 S FODMN=$$FODMN()
"RTN","ECXTRANS",154,0)
 I FODMN D
"RTN","ECXTRANS",155,0)
 .K XMY
"RTN","ECXTRANS",156,0)
 .S XMY(DUZ)=""
"RTN","ECXTRANS",157,0)
 S XMTEXT="^TMP($J,ECMS,"
"RTN","ECXTRANS",158,0)
 D ^XMD
"RTN","ECXTRANS",159,0)
 S ECXXMZ=XMZ
"RTN","ECXTRANS",160,0)
 ;store msg# in extract log
"RTN","ECXTRANS",161,0)
 D FIELD^DID(727,301,"","SPECIFIER","ECXDD")
"RTN","ECXTRANS",162,0)
 S DA(1)=ECDA,DIC(0)="L",DIC("P")=ECXDD("SPECIFIER")
"RTN","ECXTRANS",163,0)
 S DIC="^ECX(727,"_DA(1)_",1,",X=XMZ,DINUM=X
"RTN","ECXTRANS",164,0)
 K DD,DO D FILE^DICN
"RTN","ECXTRANS",165,0)
 ;Move message to DSSXMIT basket if sending from field office
"RTN","ECXTRANS",166,0)
 I FODMN D
"RTN","ECXTRANS",167,0)
 .N XMERR
"RTN","ECXTRANS",168,0)
 .D MOVEMSG^XMXAPI(DUZ,,XMZ,"DSSXMIT",.X)
"RTN","ECXTRANS",169,0)
 .K ^TMP("XMERR",$J)
"RTN","ECXTRANS",170,0)
 Q
"RTN","ECXTRANS",171,0)
 ;
"RTN","ECXTRANS",172,0)
SENDLOC ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRANS",173,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRANS",174,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRANS",175,0)
 K XMY S XMY(DUZ)="",XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRANS",176,0)
 S ^TMP($J,"LOC",1,0)="The DSS "_ECPACK_" ("_ECHEAD_") extract, #"_ECDA_","
"RTN","ECXTRANS",177,0)
 S ^TMP($J,"LOC",2,0)="was "_ECRE_"transmitted on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". "
"RTN","ECXTRANS",178,0)
 S ^TMP($J,"LOC",3,0)=" "
"RTN","ECXTRANS",179,0)
 S ^TMP($J,"LOC",4,0)="Maximum number of Bytes (characters) per message: 131,000 "
"RTN","ECXTRANS",180,0)
 S ^TMP($J,"LOC",5,0)=" "
"RTN","ECXTRANS",181,0)
 S ^TMP($J,"LOC",6,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRANS",182,0)
 S ^TMP($J,"LOC",7,0)="A total of "_ECMSN_" messages were sent."
"RTN","ECXTRANS",183,0)
 S ^TMP($J,"LOC",8,0)="    Message numbers :"
"RTN","ECXTRANS",184,0)
 S XMTEXT="^TMP($J,""LOC"","
"RTN","ECXTRANS",185,0)
 D ^XMD
"RTN","ECXTRANS",186,0)
 S ^ECX(727,ECDA,"TR")=DT
"RTN","ECXTRANS",187,0)
 Q
"RTN","ECXTRANS",188,0)
 ;
"RTN","ECXTRANS",189,0)
CLEAN ;clean-up
"RTN","ECXTRANS",190,0)
 S ZTREQ="@"
"RTN","ECXTRANS",191,0)
 K ^TMP($J),^ECX(727,ECDA,"Q"),XMDUZ,XMTEXT,XMSUB,XMY,XMZ
"RTN","ECXTRANS",192,0)
 K ECDA,ECRE,ECTMP,ECCHK,ECDIVVR,ECXDIQ,ECXMAX,ECXMSG
"RTN","ECXTRANS",193,0)
 D ^ECXKILL
"RTN","ECXTRANS",194,0)
 I $$S^%ZTLOAD K ZTREQ S ZTSTOP=1
"RTN","ECXTRANS",195,0)
 Q
"RTN","ECXTRANS",196,0)
 ;
"RTN","ECXTRANS",197,0)
PAUSE ;pause screen
"RTN","ECXTRANS",198,0)
 S OUT=0
"RTN","ECXTRANS",199,0)
 I $E(IOST)="C" D
"RTN","ECXTRANS",200,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRANS",201,0)
 .K DIR S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRANS",202,0)
 I 'Y S OUT=1
"RTN","ECXTRANS",203,0)
 W !!
"RTN","ECXTRANS",204,0)
 Q
"RTN","ECXTRANS",205,0)
 ;
"RTN","ECXTRANS",206,0)
FODMN(DOMAIN)   ;Is domain a field office domain
"RTN","ECXTRANS",207,0)
 ;Input : DOMAIN - Domain name to check
"RTN","ECXTRANS",208,0)
 ;               - Default value pulled from ^XMB("NETNAME")
"RTN","ECXTRANS",209,0)
 ;Output: 1 = Yes  /  0 = No
"RTN","ECXTRANS",210,0)
 ;
"RTN","ECXTRANS",211,0)
 N X,SUB,OUT
"RTN","ECXTRANS",212,0)
 S DOMAIN=$G(DOMAIN)
"RTN","ECXTRANS",213,0)
 S:(DOMAIN="") DOMAIN=$G(^XMB("NETNAME"))
"RTN","ECXTRANS",214,0)
 S OUT=0
"RTN","ECXTRANS",215,0)
 F X=1:1:$L(DOMAIN,".") D  Q:OUT
"RTN","ECXTRANS",216,0)
 .S SUB=$P(DOMAIN,".",X)
"RTN","ECXTRANS",217,0)
 .I ($E(SUB,1,3)="FO-")!($E(SUB,1,4)="ISC-") S OUT=1
"RTN","ECXTRANS",218,0)
 Q OUT
"RTN","ECXTREX")
0^21^B11316274
"RTN","ECXTREX",1,0)
ECXTREX ;BPFO/JRP - Queue DSS Fiscal Year Specific Extract;8-AUG-2003 ; 9/20/04 3:11pm
"RTN","ECXTREX",2,0)
 ;;3.0;DSS EXTRACTS;**49,71**;Dec 22, 1997
"RTN","ECXTREX",3,0)
 ;
"RTN","ECXTREX",4,0)
EN ;Main entry point
"RTN","ECXTREX",5,0)
 W @IOF
"RTN","ECXTREX",6,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","ECXTREX",7,0)
 W !,"****************************************************************"
"RTN","ECXTREX",8,0)
 W !,"*                                                              *"
"RTN","ECXTREX",9,0)
 W !,"* This option should be used with caution as it allows for the *"
"RTN","ECXTREX",10,0)
 W !,"* extraction of data using specified fiscal year logic.  This  *"
"RTN","ECXTREX",11,0)
 W !,"* gives the ability to extract fiscal year 200x data using     *"
"RTN","ECXTREX",12,0)
 W !,"* fiscal year 200(x+1) logic and vice versa.  Note that data   *"
"RTN","ECXTREX",13,0)
 W !,"* extracted via this method may or may not be transmittable to *"
"RTN","ECXTREX",14,0)
 W !,"* the DSS production queue at the Austin Automation Center.    *"
"RTN","ECXTREX",15,0)
 W !,"*                                                              *"
"RTN","ECXTREX",16,0)
 W !,"*--------------------------------------------------------------*"
"RTN","ECXTREX",17,0)
 W !,"*                                                              *"
"RTN","ECXTREX",18,0)
 W !,"* Note that this option does not update the last date used for *"
"RTN","ECXTREX",19,0)
 W !,"* the given extraction.  It also does not verify that the time *"
"RTN","ECXTREX",20,0)
 W !,"* frame selected is after the last date used for the extract.  *"
"RTN","ECXTREX",21,0)
 W !,"*                                                              *"
"RTN","ECXTREX",22,0)
 W !,"****************************************************************"
"RTN","ECXTREX",23,0)
 W !!
"RTN","ECXTREX",24,0)
 ;Pick extract to queue
"RTN","ECXTREX",25,0)
 S DIC="^ECX(727.1,"
"RTN","ECXTREX",26,0)
 S DIC(0)="AEQMZ"
"RTN","ECXTREX",27,0)
 S DIC("A")="Select DSS Extract to queue: "
"RTN","ECXTREX",28,0)
 S DIC("S")="I ('$P(^(0),U,12))&($P(^(0),U,8)'="""")&($G(^(7))'[""Inactive"")"
"RTN","ECXTREX",29,0)
 S DIC("W")="W ""("",$P(^(0),U,8),"")"""
"RTN","ECXTREX",30,0)
 D ^DIC
"RTN","ECXTREX",31,0)
 I ($D(DUOUT))!($D(DTOUT))!(Y<1) Q
"RTN","ECXTREX",32,0)
 N ECXRTN,ECXDA
"RTN","ECXTREX",33,0)
 S ECXDA=+Y
"RTN","ECXTREX",34,0)
 ;Get extraxt specific routine name
"RTN","ECXTREX",35,0)
 S ECXRTN=$G(^ECX(727.1,ECXDA,"ROU"))
"RTN","ECXTREX",36,0)
 I ECXRTN="" D  Q
"RTN","ECXTREX",37,0)
 .W !!,"Selected extract is not correctly defined in the EXTRACT"
"RTN","ECXTREX",38,0)
 .W !,"DEFINITIONS file (#727.1).  The ROUTINE field (#4) does not"
"RTN","ECXTREX",39,0)
 .W !,"have a value in it."
"RTN","ECXTREX",40,0)
 .W !
"RTN","ECXTREX",41,0)
 .D PAUSE
"RTN","ECXTREX",42,0)
 ;Get time frame for extract
"RTN","ECXTREX",43,0)
 N STRTDT,ENDDT,DIR,DIRUT,DIROUT,OUT,ECXDATES
"RTN","ECXTREX",44,0)
 S OUT=0 F  S (STRTDT,ENDDT)="" D  Q:OUT
"RTN","ECXTREX",45,0)
 .;Get start date (must be in past)
"RTN","ECXTREX",46,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",47,0)
 .S $P(DIR(0),"^",2)=":"_DT_":AEXP"
"RTN","ECXTREX",48,0)
 .S DIR("A")="Starting with Date: "
"RTN","ECXTREX",49,0)
 .D ^DIR
"RTN","ECXTREX",50,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)="" S OUT=1 Q
"RTN","ECXTREX",51,0)
 .S STRTDT=Y
"RTN","ECXTREX",52,0)
 .K DIR
"RTN","ECXTREX",53,0)
 .;Get end date (must be in same month; must be in past)
"RTN","ECXTREX",54,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",55,0)
 .S X=$E(STRTDT,1,5)_"01"
"RTN","ECXTREX",56,0)
 .S X=$$FMADD^XLFDT(X,32)
"RTN","ECXTREX",57,0)
 .S X=$$FMADD^XLFDT(X,-($E(X,6,7)))
"RTN","ECXTREX",58,0)
 .I X>DT S X=DT
"RTN","ECXTREX",59,0)
 .S $P(DIR(0),"^",2)=STRTDT_":"_X_":AEXP"
"RTN","ECXTREX",60,0)
 .S DIR("A")="Ending with Date: "
"RTN","ECXTREX",61,0)
 .S DIR("B")=$$FMTE^XLFDT(X,"5D")
"RTN","ECXTREX",62,0)
 .D ^DIR
"RTN","ECXTREX",63,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)=""  S OUT=1 Q
"RTN","ECXTREX",64,0)
 .S ENDDT=Y
"RTN","ECXTREX",65,0)
 .S OUT=1
"RTN","ECXTREX",66,0)
 Q:(STRTDT="")!(ENDDT="")
"RTN","ECXTREX",67,0)
 S ECXDATES=STRTDT_"^"_ENDDT_"^1"
"RTN","ECXTREX",68,0)
 ;Get extract logic to use
"RTN","ECXTREX",69,0)
 N ECXLOGIC
"RTN","ECXTREX",70,0)
 K DIR
"RTN","ECXTREX",71,0)
 S DIR("A")="Select fiscal year logic to use for extract"
"RTN","ECXTREX",72,0)
 S DIR(0)="SO^"
"RTN","ECXTREX",73,0)
 F X=2003,2004,2005 D
"RTN","ECXTREX",74,0)
 .S Y=$E(X,5)
"RTN","ECXTREX",75,0)
 .S Y=$S((Y="")!(Y=" "):"",1:"Revision "_Y_" of ")
"RTN","ECXTREX",76,0)
 .S DIR(0)=DIR(0)_X_":"_Y_"Fiscal Year "_$E(X,1,4)_";"
"RTN","ECXTREX",77,0)
 D ^DIR
"RTN","ECXTREX",78,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","ECXTREX",79,0)
 S ECXLOGIC=Y
"RTN","ECXTREX",80,0)
 ;Queue extract
"RTN","ECXTREX",81,0)
 D @("BEG^"_ECXRTN)
"RTN","ECXTREX",82,0)
 Q
"RTN","ECXTREX",83,0)
PAUSE ;pause screen
"RTN","ECXTREX",84,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXTREX",85,0)
 S DIR(0)="E"
"RTN","ECXTREX",86,0)
 W !!
"RTN","ECXTREX",87,0)
 D ^DIR
"RTN","ECXTREX",88,0)
 W !!
"RTN","ECXTREX",89,0)
 Q
"RTN","ECXUD")
0^9^B43554889
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ; 12/2/04 9:07am
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71**;Dec 22, 1997
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 S QFLG=0
"RTN","ECXUD",11,0)
 S ECED=ECED+.3
"RTN","ECXUD",12,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",13,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",14,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",15,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",16,0)
 Q
"RTN","ECXUD",17,0)
 ;
"RTN","ECXUD",18,0)
STUFF ;get data
"RTN","ECXUD",19,0)
 N X,W,OK,P1,P3,PSTAT,PT
"RTN","ECXUD",20,0)
 S ECXDFN=$P(DATA,U,2)
"RTN","ECXUD",21,0)
 ;
"RTN","ECXUD",22,0)
 ;get patient specific data
"RTN","ECXUD",23,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",24,0)
 Q:ECXERR
"RTN","ECXUD",25,0)
 ;
"RTN","ECXUD",26,0)
 S ECXPRO=$P(DATA,U,7),ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",27,0)
 S ECXPRNPI="",W=$P(DATA,U,6)
"RTN","ECXUD",28,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXUD",29,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",30,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",31,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8)
"RTN","ECXUD",32,0)
 S ECCAT=$P(^PSDRUG(+$P(DATA,U,4),0),U,2),ECINV=$P(^(0),U,3)
"RTN","ECXUD",33,0)
 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",34,0)
 S ECNDC=$P($G(^PSDRUG(+$P(DATA,U,4),2)),U,4),ECNDF=$G(^("ND"))
"RTN","ECXUD",35,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",36,0)
 S P1=$P(ECNDF,U),P3=$P(ECNDF,U,3),X="PSNAPIS"
"RTN","ECXUD",37,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",38,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",39,0)
 ; - Department and National Production Division
"RTN","ECXUD",40,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",41,0)
 S ECXDSSD=""
"RTN","ECXUD",42,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",43,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",44,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",45,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",46,0)
 ;S ECXORDDT=$P(DATA,U,9)
"RTN","ECXUD",47,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",48,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",49,0)
 .I ECXOBS="NO" S ECXORDST=160
"RTN","ECXUD",50,0)
 .I ECXOBS="YES" S ECXORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXUD",51,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",52,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",53,0)
 ;BCMA data (place holder)
"RTN","ECXUD",54,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXUD",55,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",56,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",57,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",58,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",59,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",60,0)
 Q
"RTN","ECXUD",61,0)
 ;
"RTN","ECXUD",62,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",63,0)
 ;init variables
"RTN","ECXUD",64,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP)=""
"RTN","ECXUD",65,0)
 ;get patient data if saved
"RTN","ECXUD",66,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",67,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",68,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",69,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",70,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",71,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",72,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",73,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",74,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",75,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",76,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",77,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",78,0)
 ;set patient data
"RTN","ECXUD",79,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",80,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",81,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",82,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",83,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",84,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",85,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXUD",86,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",87,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",88,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",89,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",90,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",91,0)
 .;get CNHU status
"RTN","ECXUD",92,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",93,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",94,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",95,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",96,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",97,0)
 .; - Race and Ethnicity
"RTN","ECXUD",98,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",99,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",100,0)
 .;save for later
"RTN","ECXUD",101,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",102,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",103,0)
 ;
"RTN","ECXUD",104,0)
 ;get inpatient data
"RTN","ECXUD",105,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",106,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",107,0)
 ;
"RTN","ECXUD",108,0)
 ;get primary care data
"RTN","ECXUD",109,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",110,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",111,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",112,0)
 Q
"RTN","ECXUD",113,0)
 ;
"RTN","ECXUD",114,0)
FILE ;file record
"RTN","ECXUD",115,0)
 ;node0
"RTN","ECXUD",116,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",117,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",118,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",119,0)
 ;node1
"RTN","ECXUD",120,0)
 ;mpi^dss dept^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",121,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",122,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",123,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",124,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",125,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",126,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",127,0)
 ;node2
"RTN","ECXUD",128,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",129,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",130,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",131,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",132,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",133,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",134,0)
 ;ECXCVENC^national patient record flag ECXNPRFI
"RTN","ECXUD",135,0)
 N DA,DIK
"RTN","ECXUD",136,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",137,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",138,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",139,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",140,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",141,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",142,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXPRNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",143,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",144,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",145,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",146,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",147,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",148,0)
 S ECODE1=ECODE1_ECPTNPI_U_ECCLAS_U_ECASPR_U_ECASNPI_U_ECCLAS2_U
"RTN","ECXUD",149,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",150,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",151,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",152,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",153,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",154,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",155,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",156,0)
 Q
"RTN","ECXUD",157,0)
 ;
"RTN","ECXUD",158,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",159,0)
 S ECHEAD="UDP"
"RTN","ECXUD",160,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",161,0)
 Q
"RTN","ECXUD",162,0)
 ;
"RTN","ECXUD",163,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",164,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",165,0)
 Q
"RTN","ECXUSUR")
0^13^B27392923
"RTN","ECXUSUR",1,0)
ECXUSUR ;ALB/TJL-Surgery Extract Unusual Volume Report ; 12/10/04 10:08am
"RTN","ECXUSUR",2,0)
 ;;3.0;DSS EXTRACTS;**49,71**;July 1, 2003
"RTN","ECXUSUR",3,0)
 ;
"RTN","ECXUSUR",4,0)
EN ; entry point
"RTN","ECXUSUR",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUSUR",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXFLAG
"RTN","ECXUSUR",7,0)
 S QFLG=0,ECTHLD="",ECXFLAG=$G(FLAG)
"RTN","ECXUSUR",8,0)
 ; get today's date
"RTN","ECXUSUR",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUSUR",10,0)
 I 'ECXFLAG D BEGIN Q:QFLG
"RTN","ECXUSUR",11,0)
 D SELECT Q:QFLG
"RTN","ECXUSUR",12,0)
 S ECXDESC=$S(ECXFLAG:"Surgery Volume Report",1:"Surgery Extract Unusual Volume Report")
"RTN","ECXUSUR",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUSUR",14,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUSUR",15,0)
 D EN^XUTMDEVQ("PROCESS^ECXUSUR",ECXDESC,.ECXSAVE)
"RTN","ECXUSUR",16,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUSUR",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUSUR",18,0)
 D HOME^%ZIS
"RTN","ECXUSUR",19,0)
 D AUDIT^ECXKILL
"RTN","ECXUSUR",20,0)
 Q
"RTN","ECXUSUR",21,0)
 ;
"RTN","ECXUSUR",22,0)
BEGIN ; display report description
"RTN","ECXUSUR",23,0)
 W @IOF
"RTN","ECXUSUR",24,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXUSUR",25,0)
 W !,"generated by the Surgery extract (SUR) as determined by a"
"RTN","ECXUSUR",26,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUSUR",27,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUSUR",28,0)
 W !,"necessary, any volumes determined to be erroneous."
"RTN","ECXUSUR",29,0)
 W !!,"Unusual volumes are those where either the Operation Time,"
"RTN","ECXUSUR",30,0)
 W !,"Patient Time, Anesthesia Time, Recovery Room Time, OR Clean Time"
"RTN","ECXUSUR",31,0)
 W !,"or Pt Holding Time field is greater than the threshold value."
"RTN","ECXUSUR",32,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUSUR",33,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUSUR",34,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUSUR",35,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUSUR",36,0)
 W !,"can be run as needed."
"RTN","ECXUSUR",37,0)
 W !!,"The report is sorted by descending Volume and Case Number."
"RTN","ECXUSUR",38,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUSUR",39,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUSUR",40,0)
 Q
"RTN","ECXUSUR",41,0)
 ;
"RTN","ECXUSUR",42,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUSUR",43,0)
 N DONE,OUT
"RTN","ECXUSUR",44,0)
 ; allow user to set threshold volume
"RTN","ECXUSUR",45,0)
 I 'ECXFLAG D
"RTN","ECXUSUR",46,0)
 .S ECTHLD=25
"RTN","ECXUSUR",47,0)
 .W !!,"The default threshold volume for the Surgery extract is "_ECTHLD_"."
"RTN","ECXUSUR",48,0)
 .W !,"The default threshold volume ("_ECTHLD_") equates to 6 hours."
"RTN","ECXUSUR",49,0)
 .S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUSUR",50,0)
 .I Y D
"RTN","ECXUSUR",51,0)
 ..W !!,"Volume > threshold"
"RTN","ECXUSUR",52,0)
 ..S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUSUR",53,0)
 ; get date range from user
"RTN","ECXUSUR",54,0)
 Q:QFLG
"RTN","ECXUSUR",55,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUSUR",56,0)
 W !,"Surgery Extract records.",!
"RTN","ECXUSUR",57,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUSUR",58,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",59,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",60,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUSUR",61,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUSUR",62,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",63,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",64,0)
 .I Y<ECSD D  Q
"RTN","ECXUSUR",65,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUSUR",66,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",67,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUSUR",68,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUSUR",69,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",70,0)
 .S ECED=Y
"RTN","ECXUSUR",71,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUSUR",72,0)
 .S DONE=1
"RTN","ECXUSUR",73,0)
 Q
"RTN","ECXUSUR",74,0)
 ;
"RTN","ECXUSUR",75,0)
PROCESS ; entry point for queued report
"RTN","ECXUSUR",76,0)
 S ZTREQ="@"
"RTN","ECXUSUR",77,0)
 S ECXERR=0 D EN^ECXUSUR1 Q:ECXERR
"RTN","ECXUSUR",78,0)
 S QFLG=0 D PRINT
"RTN","ECXUSUR",79,0)
 Q
"RTN","ECXUSUR",80,0)
 ;
"RTN","ECXUSUR",81,0)
PRINT ; process temp file and print report
"RTN","ECXUSUR",82,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC
"RTN","ECXUSUR",83,0)
 U IO
"RTN","ECXUSUR",84,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUSUR",85,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)=""
"RTN","ECXUSUR",86,0)
 D HEADER Q:QFLG
"RTN","ECXUSUR",87,0)
 S VOL=-999999 F  S VOL=$O(^TMP($J,VOL)) Q:VOL=""!QFLG  D
"RTN","ECXUSUR",88,0)
 .S SUB="" F  S SUB=$O(^TMP($J,VOL,SUB)) Q:SUB=""!QFLG  S REC=^(SUB)  D
"RTN","ECXUSUR",89,0)
 ..S COUNT=COUNT+1
"RTN","ECXUSUR",90,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUSUR",91,0)
 ..W !,$P(REC,U),?6,$P(REC,U,2),?17,$P(REC,U,3),?26,$P(REC,U,4)
"RTN","ECXUSUR",92,0)
 ..W ?33,$P(REC,U,5),?55,$$RJ^XLFSTR($P(REC,U,9),4)
"RTN","ECXUSUR",93,0)
 ..W ?63,$$RJ^XLFSTR($P(REC,U,10),4),?74,$$RJ^XLFSTR($P(REC,U,11),4)
"RTN","ECXUSUR",94,0)
 ..W ?83,$$RJ^XLFSTR($P(REC,U,6),4),?90,$$RJ^XLFSTR($P(REC,U,8),4)
"RTN","ECXUSUR",95,0)
 ..W ?101,$$RJ^XLFSTR($P(REC,U,7),4),?114,$P(REC,U,13)
"RTN","ECXUSUR",96,0)
 Q:QFLG
"RTN","ECXUSUR",97,0)
 I COUNT=0 W !!,?8,"No unusual volumes to report for this extract"
"RTN","ECXUSUR",98,0)
CLOSE ;
"RTN","ECXUSUR",99,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUSUR",100,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",101,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUSUR",102,0)
 Q
"RTN","ECXUSUR",103,0)
 ;
"RTN","ECXUSUR",104,0)
HEADER ;header and page control
"RTN","ECXUSUR",105,0)
 N SS,JJ
"RTN","ECXUSUR",106,0)
 I $E(IOST)="C" D
"RTN","ECXUSUR",107,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",108,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUSUR",109,0)
 Q:QFLG
"RTN","ECXUSUR",110,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUSUR",111,0)
 W !,$S(ECXFLAG:"Surgery Extract Volume Report",1:"Surgery Extract Unusual Volume Report"),?124,"Page: "_PG
"RTN","ECXUSUR",112,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUSUR",113,0)
 W !,"  End Date: ",ECEND I 'ECXFLAG W ?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUSUR",114,0)
 W !!,?27,"Case",?37,"Encounter",?53,"Patient",?61,"Operation",?71,"Anesthesia",?83,"PACU",?89,"OR Clean",?99,"Pt Holding",?114,"Principal"
"RTN","ECXUSUR",115,0)
 W !,"Name",?9,"SSN",?19,"Day",?26,"Number",?39,"Number"
"RTN","ECXUSUR",116,0)
 W ?55,"Time",?63,"Time",?74,"Time",?83,"Time",?90,"Time",?101,"Time"
"RTN","ECXUSUR",117,0)
 W ?114,"Procedure"
"RTN","ECXUSUR",118,0)
 W !,LN,!
"RTN","ECXUSUR",119,0)
 Q
"RTN","ECXUSUR",120,0)
 ;
"RTN","ECXUSUR1")
0^14^B12781030
"RTN","ECXUSUR1",1,0)
ECXUSUR1 ;ALB/TJL-Surgery Extract Unusual Volume Report ; 12/1/04 4:48pm
"RTN","ECXUSUR1",2,0)
 ;;3.0;DSS EXTRACTS;**49,71**;July 1, 2003
"RTN","ECXUSUR1",3,0)
EN ;
"RTN","ECXUSUR1",4,0)
 N ECHEAD,COUNT,TIMEDIF,ECXPROC
"RTN","ECXUSUR1",5,0)
 S ECHEAD="SUR"
"RTN","ECXUSUR1",6,0)
 S (COUNT,QFLG)=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXUSUR1",7,0)
 F  S ECD=$O(^SRF("AC",ECD)) Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXUSUR1",8,0)
 .S ECD0=0
"RTN","ECXUSUR1",9,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXUSUR1",10,0)
 ..I $D(^SRF(ECD0,0)) S ECXDFN=+$P(^(0),U,1) D STUFF Q:QFLG
"RTN","ECXUSUR1",11,0)
 Q
"RTN","ECXUSUR1",12,0)
 ;
"RTN","ECXUSUR1",13,0)
STUFF ;gather data
"RTN","ECXUSUR1",14,0)
 N J,DATA1,DATA2,DATAOP,ECXNONL,ECXSTOP
"RTN","ECXUSUR1",15,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXUSUR1",16,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXUSUR1",17,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXUSUR1",18,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXUSUR1",19,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXUSUR1",20,0)
 S DATAOP=$S($D(^SRF(ECD0,"OP")):^("OP"),1:"")
"RTN","ECXUSUR1",21,0)
 S DATAPA=$S($D(^SRF(ECD0,1.1)):^(1.1),1:"")
"RTN","ECXUSUR1",22,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXUSUR1",23,0)
 ;get data
"RTN","ECXUSUR1",24,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXUSUR1",25,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXUSUR1",26,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXUSUR1",27,0)
 ;look for non-OR
"RTN","ECXUSUR1",28,0)
 S (ECNT,ECNL,ECXNONL,ECXSTOP)=""
"RTN","ECXUSUR1",29,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXUSUR1",30,0)
 .S A1=$P(ECNO,U,5)
"RTN","ECXUSUR1",31,0)
 .S A2=$P(ECNO,U,4)
"RTN","ECXUSUR1",32,0)
 .S TIME="##"
"RTN","ECXUSUR1",33,0)
 .D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXUSUR1",34,0)
 .S ECXNONL=+$P(ECNO,U,2)
"RTN","ECXUSUR1",35,0)
 .S ECNL=$P($G(^ECX(728.44,ECXNONL,0)),U,9)
"RTN","ECXUSUR1",36,0)
 .I ECNL="" S ECNL="UNKNOWN"
"RTN","ECXUSUR1",37,0)
 .;
"RTN","ECXUSUR1",38,0)
 .; Get DSS Stop Code to use in encounter number
"RTN","ECXUSUR1",39,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXUSUR1",40,0)
 ;
"RTN","ECXUSUR1",41,0)
 ;retrieving anesthesia times first, then operation and patient
"RTN","ECXUSUR1",42,0)
 ;times, then storing in following order:
"RTN","ECXUSUR1",43,0)
 ;ecode0="recovery room time^pt hold area time^or clean time^patient
"RTN","ECXUSUR1",44,0)
 ;time^operation time^anesthesia time
"RTN","ECXUSUR1",45,0)
 S ECODE0=""
"RTN","ECXUSUR1",46,0)
 F J="1,4","2,3","10,12","13,14","15,10" D
"RTN","ECXUSUR1",47,0)
 .S A2=$P(DATA2,U,$P(J,","))
"RTN","ECXUSUR1",48,0)
 .S A1=$P(DATA2,U,$P(J,",",2))
"RTN","ECXUSUR1",49,0)
 .S TIME="##"
"RTN","ECXUSUR1",50,0)
 .I (A1&A2) D TIMEDIF(A1,A2) D
"RTN","ECXUSUR1",51,0)
 ..I +J'=2 D TIME
"RTN","ECXUSUR1",52,0)
 ..I +J=2 D  ;-Operation Time
"RTN","ECXUSUR1",53,0)
 ...S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXUSUR1",54,0)
 ...;I TIME<0 S TIME="###"
"RTN","ECXUSUR1",55,0)
 .S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",56,0)
 ;
"RTN","ECXUSUR1",57,0)
 ;retrieve recovery room (PACU) time
"RTN","ECXUSUR1",58,0)
 S A2=$P($G(DATAPA),U,7)
"RTN","ECXUSUR1",59,0)
 S A1=$P($G(DATAPA),U,8)
"RTN","ECXUSUR1",60,0)
 S TIME="##"
"RTN","ECXUSUR1",61,0)
 I (A1&A2) D TIME
"RTN","ECXUSUR1",62,0)
 S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",63,0)
 ;
"RTN","ECXUSUR1",64,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXUSUR1",65,0)
 ;
"RTN","ECXUSUR1",66,0)
 I ECXFLAG D FILE  Q
"RTN","ECXUSUR1",67,0)
 N PIECE,FILE
"RTN","ECXUSUR1",68,0)
 S FILE="NO"
"RTN","ECXUSUR1",69,0)
 F PIECE=1,2,3,4,5,6 D
"RTN","ECXUSUR1",70,0)
 . I $P(ECODE0,U,PIECE)>ECTHLD S FILE="YES"
"RTN","ECXUSUR1",71,0)
 . I $P(ECODE0,U,PIECE)<0 S FILE="YES"
"RTN","ECXUSUR1",72,0)
 I FILE="YES" D FILE Q:ECXERR
"RTN","ECXUSUR1",73,0)
 Q
"RTN","ECXUSUR1",74,0)
 ;
"RTN","ECXUSUR1",75,0)
FILE ; Store unusual records for display later
"RTN","ECXUSUR1",76,0)
 N OK,SURPAT,SURNAME,SURSSN,SURDT,VOL
"RTN","ECXUSUR1",77,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.SURPAT)
"RTN","ECXUSUR1",78,0)
 I 'OK Q
"RTN","ECXUSUR1",79,0)
 S SURNAME=SURPAT("NAME")
"RTN","ECXUSUR1",80,0)
 S SURSSN=SURPAT("SSN")
"RTN","ECXUSUR1",81,0)
 S SURDT=$E(ECXDATE,4,5)_"/"_$E(ECXDATE,6,7)_"/"_$E(ECXDATE,2,3)
"RTN","ECXUSUR1",82,0)
 ;
"RTN","ECXUSUR1",83,0)
 ; Observation Patient Indicator (yes/no)
"RTN","ECXUSUR1",84,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXUSUR1",85,0)
 ;
"RTN","ECXUSUR1",86,0)
 ; Principal Procedure
"RTN","ECXUSUR1",87,0)
 S ECXPROC=$E($P(DATAOP,U),1,15)
"RTN","ECXUSUR1",88,0)
 ;
"RTN","ECXUSUR1",89,0)
 ; If no encounter number don't file record
"RTN","ECXUSUR1",90,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXUSUR1",91,0)
 ;
"RTN","ECXUSUR1",92,0)
 S VOL=$P(ECODE0,U,4)
"RTN","ECXUSUR1",93,0)
 I $P(ECODE0,U,5)>VOL S VOL=$P(ECODE0,U,5)
"RTN","ECXUSUR1",94,0)
 I $P(ECODE0,U,6)>VOL S VOL=$P(ECODE0,U,6)
"RTN","ECXUSUR1",95,0)
 S ^TMP($J,-VOL,-ECD0)=SURNAME_U_SURSSN_U_SURDT_U_ECD0_U_ECXENC_U_ECODE0_U_ECXPROC
"RTN","ECXUSUR1",96,0)
 S COUNT=COUNT+1
"RTN","ECXUSUR1",97,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXUSUR1",98,0)
 Q
"RTN","ECXUSUR1",99,0)
 ;
"RTN","ECXUSUR1",100,0)
TIME ; given date/time get increment
"RTN","ECXUSUR1",101,0)
 N CON
"RTN","ECXUSUR1",102,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXUSUR1",103,0)
 D TIMEDIF(A1,A2)
"RTN","ECXUSUR1",104,0)
 I 'CON D
"RTN","ECXUSUR1",105,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXUSUR1",106,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXUSUR1",107,0)
 I CON D
"RTN","ECXUSUR1",108,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXUSUR1",109,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXUSUR1",110,0)
 ;S:TIME<0 TIME="###"
"RTN","ECXUSUR1",111,0)
 Q
"RTN","ECXUSUR1",112,0)
 ;
"RTN","ECXUSUR1",113,0)
TIMEDIF(START,FINISH) ; Set values to be compared, in seconds
"RTN","ECXUSUR1",114,0)
 ;
"RTN","ECXUSUR1",115,0)
 S TIMEDIF=$$FMDIFF^XLFDT(START,FINISH,2)/900
"RTN","ECXUSUR1",116,0)
 I (TIMEDIF>0)&(TIMEDIF<.5) S TIMEDIF=.5
"RTN","ECXUSUR1",117,0)
 Q
"RTN","ECXUSUR1",118,0)
 ;
"RTN","ECXUSUR1",119,0)
EXIT S ECXERR=1 Q
"RTN","ECXUTL2")
0^2^B65648321
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ; 12/9/04 2:25pm
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71**;Dec 22, 1997
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 ;
"RTN","ECXUTL2",16,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",17,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",18,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",19,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",26,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",27,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",28,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",29,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",30,0)
 .W !!
"RTN","ECXUTL2",31,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11",DIQ="ECXARR"
"RTN","ECXUTL2",32,0)
 D EN^DIQ1
"RTN","ECXUTL2",33,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",34,0)
 ;if this is an inactive extract type, skip it
"RTN","ECXUTL2",35,0)
 I ECXPACK["Inactive" D  Q
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",40,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",41,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",42,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",43,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",44,0)
 .W !!
"RTN","ECXUTL2",45,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",46,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",47,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",48,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",49,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",50,0)
 S ECXVER=7
"RTN","ECXUTL2",51,0)
 Q
"RTN","ECXUTL2",52,0)
 ;
"RTN","ECXUTL2",53,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",54,0)
 ;  DFN   =
"RTN","ECXUTL2",55,0)
 ;  DT    =
"RTN","ECXUTL2",56,0)
 ;  PAR   =
"RTN","ECXUTL2",57,0)
 ;  FLG   =
"RTN","ECXUTL2",58,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",59,0)
 D KPATDEM
"RTN","ECXUTL2",60,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",61,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",62,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",63,0)
 I PAR["1" D
"RTN","ECXUTL2",64,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",65,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",66,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",67,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",68,0)
 I PAR["2" D
"RTN","ECXUTL2",69,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",70,0)
 I PAR["3" D
"RTN","ECXUTL2",71,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",72,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",73,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",74,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",75,0)
 I PAR["5" D
"RTN","ECXUTL2",76,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",77,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",78,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",79,0)
 I PAR["6" D
"RTN","ECXUTL2",80,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",81,0)
 I FLG'[3 D
"RTN","ECXUTL2",82,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",83,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",84,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",85,0)
 I FLG'[2 D
"RTN","ECXUTL2",86,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",87,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",88,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",89,0)
 Q 1
"RTN","ECXUTL2",90,0)
 ;
"RTN","ECXUTL2",91,0)
KPATDEM ;
"RTN","ECXUTL2",92,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",93,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",94,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",95,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",96,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",97,0)
 K ECXSBGRP
"RTN","ECXUTL2",98,0)
 Q
"RTN","ECXUTL2",99,0)
 ;
"RTN","ECXUTL2",100,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",101,0)
 ;and user enrolle status
"RTN","ECXUTL2",102,0)
 ; input
"RTN","ECXUTL2",103,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",104,0)
 ;    RNDT     = Entract Run Date
"RTN","ECXUTL2",105,0)
 ; output
"RTN","ECXUTL2",106,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",107,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",108,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",109,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",110,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",111,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",112,0)
 ;
"RTN","ECXUTL2",113,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",114,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",115,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",116,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",117,0)
 ;DBIA #3989
"RTN","ECXUTL2",118,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",119,0)
 ;Patient type
"RTN","ECXUTL2",120,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",121,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",122,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",123,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",124,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",125,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",126,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",127,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",128,0)
 ;find previous enrollment
"RTN","ECXUTL2",129,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",130,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",131,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",132,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",133,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",134,0)
 . I "^2^19^"[("^"_ENR("STATUS")_"^"),ENR("EFFDATE")>RNDT D
"RTN","ECXUTL2",135,0)
 . . S ECXSTAT=ENR("STATUS"),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",136,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",137,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",138,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",139,0)
 I FL Q 1
"RTN","ECXUTL2",140,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",141,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",142,0)
 Q 1
"RTN","ECXUTL2",143,0)
 ;
"RTN","ECXUTL2",144,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",145,0)
 ; input
"RTN","ECXUTL2",146,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",147,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",148,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",149,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",150,0)
 ; output
"RTN","ECXUTL2",151,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person class^pc provider npi
"RTN","ECXUTL2",152,0)
 ;             ^prefix_assoc pc provider ien^assoc pc provider person class^assoc pc provider npi
"RTN","ECXUTL2",153,0)
 ;
"RTN","ECXUTL2",154,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",155,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",156,0)
 ;get pc team data
"RTN","ECXUTL2",157,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",158,0)
 ;get primary pc provider data
"RTN","ECXUTL2",159,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",160,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",161,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",162,0)
 S ECPTNPI=""
"RTN","ECXUTL2",163,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",164,0)
 S ECASPR=""
"RTN","ECXUTL2",165,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",166,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",167,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",168,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",169,0)
 S ECASNPI=""
"RTN","ECXUTL2",170,0)
 ;assemble
"RTN","ECXUTL2",171,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",172,0)
 Q ECXPRIME
"RTN","ECXUTL2",173,0)
 ;
"RTN","ECXUTL2",174,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",175,0)
 ; input
"RTN","ECXUTL2",176,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",177,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",178,0)
 ; output
"RTN","ECXUTL2",179,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",180,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",181,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",182,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",183,0)
 ;       (file #40.8 ien);dss dept^dom
"RTN","ECXUTL2",184,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",185,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",186,0)
 ;
"RTN","ECXUTL2",187,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",188,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD
"RTN","ECXUTL2",189,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",190,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",191,0)
 ;
"RTN","ECXUTL2",192,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",193,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",194,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC)=""
"RTN","ECXUTL2",195,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",196,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",197,0)
 I ECMN D
"RTN","ECXUTL2",198,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",199,0)
 .;
"RTN","ECXUTL2",200,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",201,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",202,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",203,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",204,0)
 .I ECWARD D
"RTN","ECXUTL2",205,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",206,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",207,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",208,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",209,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",210,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",211,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",212,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",213,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",214,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM
"RTN","ECXUTL2",215,0)
 Q ECXINP
"RTN","ECXUTL2",216,0)
 ;
"RTN","ECXUTL2",217,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",218,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",219,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",220,0)
 ;
"RTN","ECXUTL2",221,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",222,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",223,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",224,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",225,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",226,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",227,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",228,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",229,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",230,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",231,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",232,0)
 . W !,"This is a test"
"RTN","ECXUTL2",233,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",234,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",235,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",236,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",237,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",238,0)
 Q
"RTN","ECXUTL5")
0^12^B17103643
"RTN","ECXUTL5",1,0)
ECXUTL5 ;BPFO/JRC - Utilities for DSS Extracts ; 10/26/04 10:57am
"RTN","ECXUTL5",2,0)
 ;;3.0;DSS EXTRACTS;**71**;Dec 22, 1997
"RTN","ECXUTL5",3,0)
 ;
"RTN","ECXUTL5",4,0)
REPEAT(CHAR,TIMES) ;REPEAT A STRING
"RTN","ECXUTL5",5,0)
 ;INPUT  : CHAR - Character to repeat
"RTN","ECXUTL5",6,0)
 ;         TIMES - Number of times to repeat CHAR
"RTN","ECXUTL5",7,0)
 ;OUTPUT : s - String of CHAR that is TIMES long
"RTN","ECXUTL5",8,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",9,0)
 ;
"RTN","ECXUTL5",10,0)
 ;CHECK INPUT
"RTN","ECXUTL5",11,0)
 Q:($G(CHAR)="") ""
"RTN","ECXUTL5",12,0)
 Q:((+$G(TIMES))=0) ""
"RTN","ECXUTL5",13,0)
 ;RETURN STRING
"RTN","ECXUTL5",14,0)
 Q $TR($J("",TIMES)," ",CHAR)
"RTN","ECXUTL5",15,0)
INSERT(INSTR,OUTSTR,COLUMN,LENGTH) ;INSERT A STRING INTO ANOTHER
"RTN","ECXUTL5",16,0)
 ;INPUT  : INSTR - String to insert
"RTN","ECXUTL5",17,0)
 ;         OUTSTR - String to insert into
"RTN","ECXUTL5",18,0)
 ;         COLUMN - Where to begin insertion (defaults to end of OUTSTR)
"RTN","ECXUTL5",19,0)
 ;         LENGTH - Number of characters to clear from OUTSTR
"RTN","ECXUTL5",20,0)
 ;                  (defaults to length of INSTR)
"RTN","ECXUTL5",21,0)
 ;OUTPUT : s - INSTR will be placed into OUTSTR starting at COLUMN
"RTN","ECXUTL5",22,0)
 ;             using LENGTH characters
"RTN","ECXUTL5",23,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",24,0)
 ;
"RTN","ECXUTL5",25,0)
 ;NOTE : This module is based on $$SETSTR^VALM1
"RTN","ECXUTL5",26,0)
 ;
"RTN","ECXUTL5",27,0)
 ;CHECK INPUT
"RTN","ECXUTL5",28,0)
 Q:('$D(INSTR)) ""
"RTN","ECXUTL5",29,0)
 Q:('$D(OUTSTR)) ""
"RTN","ECXUTL5",30,0)
 S:('$D(COLUMN)) COLUMN=$L(OUTSTR)+1
"RTN","ECXUTL5",31,0)
 S:('$D(LENGTH)) LENGTH=$L(INSTR)
"RTN","ECXUTL5",32,0)
 ;DECLARE VARIABLES
"RTN","ECXUTL5",33,0)
 N FRONT,END
"RTN","ECXUTL5",34,0)
 S FRONT=$E((OUTSTR_$J("",COLUMN-1)),1,(COLUMN-1))
"RTN","ECXUTL5",35,0)
 S END=$E(OUTSTR,(COLUMN+LENGTH),$L(OUTSTR))
"RTN","ECXUTL5",36,0)
 ;INSERT STRING
"RTN","ECXUTL5",37,0)
 Q FRONT_$E((INSTR_$J("",LENGTH)),1,LENGTH)_END
"RTN","ECXUTL5",38,0)
TYPE(DFN) ;Determine patient type DBIA #2511
"RTN","ECXUTL5",39,0)
 ;   input 
"RTN","ECXUTL5",40,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",41,0)
 ;
"RTN","ECXUTL5",42,0)
 ;   output
"RTN","ECXUTL5",43,0)
 ;   ECXPTYPE = patient type external value from fle 391
"RTN","ECXUTL5",44,0)
 ;
"RTN","ECXUTL5",45,0)
 ;          AC = ACTIVE DUTY        MI = MILITARY RETIREE
"RTN","ECXUTL5",46,0)
 ;          AL = ALLIED VETERAN     NO = NON-VETERAN (OTHER)
"RTN","ECXUTL5",47,0)
 ;          CO = COLLATERAL         NS = NSC VETERAN
"RTN","ECXUTL5",48,0)
 ;          EM = EMPLOYEE           SC = SC VETERAN
"RTN","ECXUTL5",49,0)
 ;          IN = INELIGIBLE         TR = TRICARE
"RTN","ECXUTL5",50,0)
 ;          return value 0 if no data found, 1 if data found
"RTN","ECXUTL5",51,0)
 ;
"RTN","ECXUTL5",52,0)
 N TYPE,ECXPTYPE
"RTN","ECXUTL5",53,0)
 ;Check input
"RTN","ECXUTL5",54,0)
 Q:'$D(DFN) ""
"RTN","ECXUTL5",55,0)
 S (TYPE,ECXPTYPE)=""
"RTN","ECXUTL5",56,0)
 S TYPE=$G(^DPT(DFN,"TYPE"))
"RTN","ECXUTL5",57,0)
 I 'TYPE Q ECXPTYPE
"RTN","ECXUTL5",58,0)
 S ECXPTYPE=$P($G(^DG(391,TYPE,0)),U,1)
"RTN","ECXUTL5",59,0)
 S ECXPTYPE=$E(ECXPTYPE,1,2)
"RTN","ECXUTL5",60,0)
 Q ECXPTYPE
"RTN","ECXUTL5",61,0)
CVEDT(DFN,DATE) ;Determine patient CV status DBIA #4156
"RTN","ECXUTL5",62,0)
 ;   input
"RTN","ECXUTL5",63,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",64,0)
 ;
"RTN","ECXUTL5",65,0)
 ;   output
"RTN","ECXUTL5",66,0)
 ;   ECXCVE = combat veteran status eligibility
"RTN","ECXUTL5",67,0)
 ;   ECXCVEDT = combat veteran eligibility end date
"RTN","ECXUTL5",68,0)
 ;   ECXCVENC = combat veteran encounter
"RTN","ECXUTL5",69,0)
 ;Initialize variables
"RTN","ECXUTL5",70,0)
 N CVSTAT
"RTN","ECXUTL5",71,0)
 S (CVSTAT,ECXCVE,ECXCVEDT,ECXCVENC)=""
"RTN","ECXUTL5",72,0)
 ;Check input
"RTN","ECXUTL5",73,0)
 Q:'$D(DFN) 0
"RTN","ECXUTL5",74,0)
 ;Call CV API
"RTN","ECXUTL5",75,0)
 S CVSTAT=$$CVEDT^DGCV(DFN,DATE)
"RTN","ECXUTL5",76,0)
 I CVSTAT<1 Q 0
"RTN","ECXUTL5",77,0)
 ;Veteran been given CV eligibility
"RTN","ECXUTL5",78,0)
 S ECXCVE=$S($P(CVSTAT,U,3)=1:"Y",$P(CVSTAT,U,3)=0:"E",1:"")
"RTN","ECXUTL5",79,0)
 ;Save CV eligibility end date and convert from FM to HL7 format
"RTN","ECXUTL5",80,0)
 S ECXCVEDT=$P(CVSTAT,U,2)
"RTN","ECXUTL5",81,0)
 S ECXCVEDT=$$FMTHL7^XLFDT(ECXCVEDT)
"RTN","ECXUTL5",82,0)
 ;Is the veteran eligible for CV in the date of encounter
"RTN","ECXUTL5",83,0)
 S ECXCVENC=$S($P(CVSTAT,U,3)=1:"Y",1:"")
"RTN","ECXUTL5",84,0)
 Q 1
"RTN","ECXUTL5",85,0)
NPRF ;National patient record flags DBIA #3860
"RTN","ECXUTL5",86,0)
 N ECXARR,FLG
"RTN","ECXUTL5",87,0)
 S ECXNPRFI="",CNT=$$GETACT^DGPFAPI(ECXDFN,"ECXARR"),FLG=""
"RTN","ECXUTL5",88,0)
 I 'CNT Q
"RTN","ECXUTL5",89,0)
 F I=1:1:CNT D  Q:FLG
"RTN","ECXUTL5",90,0)
 .I ECXARR(I,"CATEGORY")["NATIONAL" S ECXNPRFI="Y",FLG=1
"RTN","ECXUTL5",91,0)
 Q
"RTN","ECXUTL5",92,0)
RXPTST(K) ;Rx patient status DBIA #2511
"RTN","ECXUTL5",93,0)
 N ECXDIC,STAT
"RTN","ECXUTL5",94,0)
 S (ECXDIC,STAT)=""
"RTN","ECXUTL5",95,0)
 ;Check input
"RTN","ECXUTL5",96,0)
 Q:'$D(K) STAT
"RTN","ECXUTL5",97,0)
 S DA=K,DIC="^PS(53,",DIQ(0)="I",DIQ="ECXDIC",DR="6"
"RTN","ECXUTL5",98,0)
 D EN^DIQ1
"RTN","ECXUTL5",99,0)
 S STAT=$G(ECXDIC(53,K,6,"I"))
"RTN","ECXUTL5",100,0)
 S STAT=$S(STAT=1:"SC",STAT=2:"AA",STAT=3:"OTH",STAT=4:"INP",STAT=5:"NON",1:"")
"RTN","ECXUTL5",101,0)
 Q STAT
"RTN","ECXUTL5",102,0)
NONVAP(K) ;Non-va prescriber DBIA #10060
"RTN","ECXUTL5",103,0)
 N ECXDIC,NONVAP
"RTN","ECXUTL5",104,0)
 S (ECXDIC,NONVAP)=""
"RTN","ECXUTL5",105,0)
 Q:'$D(K) NONVAP
"RTN","ECXUTL5",106,0)
 S DA=K,DIC="^VA(200,",DIQ(0)="I",DIQ="ECXDIC",DR="53.91"
"RTN","ECXUTL5",107,0)
 D EN^DIQ1
"RTN","ECXUTL5",108,0)
 S NONVAP=$G(ECXDIC(200,K,53.91,"I"))
"RTN","ECXUTL5",109,0)
 I NONVAP S NONVAP="Y"
"RTN","ECXUTL5",110,0)
 Q NONVAP
"RTN","ECXUTL5",111,0)
DOIVPO(K,L) ;Add destination for outpatient ivp orders
"RTN","ECXUTL5",112,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",113,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",114,0)
 ;Check input
"RTN","ECXUTL5",115,0)
 Q:'$D(K)!'$D(L) SCODE
"RTN","ECXUTL5",116,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="100",DR(55.01)="136",DA=K,DA(55.01)=L
"RTN","ECXUTL5",117,0)
 D EN^DIQ1
"RTN","ECXUTL5",118,0)
 S CLINIC=$G(ECXDIC(55.01,L,136,"I"))
"RTN","ECXUTL5",119,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",120,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",121,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",122,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",123,0)
 ;Get stop code external value
"RTN","ECXUTL5",124,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",125,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",126,0)
 Q SCODE
"RTN","ECXUTL5",127,0)
DOUDO(K,L) ;Add destination for outpatient udp orders
"RTN","ECXUTL5",128,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",129,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",130,0)
 ;Check input
"RTN","ECXUTL5",131,0)
 Q:'$D(K)!'$D(L) SCODE
"RTN","ECXUTL5",132,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=K,DA(55.06)=L
"RTN","ECXUTL5",133,0)
 D EN^DIQ1
"RTN","ECXUTL5",134,0)
 S CLINIC=$G(ECXDIC(55.06,L,130,"I"))
"RTN","ECXUTL5",135,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",136,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",137,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",138,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",139,0)
 ;Get stop code external value
"RTN","ECXUTL5",140,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",141,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",142,0)
 Q SCODE
"VER")
8.0^22.0
"^DD",727.802,727.802,55,0)
PLACEHOLDER^F^^1;19^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,55,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,55,"DT")
3040301
"^DD",727.802,727.802,66,0)
ENROLLMENT PRIORITY^F^^1;30^K:$L(X)>2!($L(X)<1) X
"^DD",727.802,727.802,66,3)
Answer must be 1-2 characters in length.
"^DD",727.802,727.802,66,21,0)
^^2^2^3040317^
"^DD",727.802,727.802,66,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the
"^DD",727.802,727.802,66,21,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.     
"^DD",727.802,727.802,66,23,0)
^^19^19^3040317^
"^DD",727.802,727.802,66,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the
"^DD",727.802,727.802,66,23,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.802,727.802,66,23,3,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:   
"^DD",727.802,727.802,66,23,4,0)
 
"^DD",727.802,727.802,66,23,5,0)
                                '1' FOR GROUP 1 
"^DD",727.802,727.802,66,23,6,0)
                                '2' FOR GROUP 2 
"^DD",727.802,727.802,66,23,7,0)
                                '3' FOR GROUP 3 
"^DD",727.802,727.802,66,23,8,0)
                                '4' FOR GROUP 4 
"^DD",727.802,727.802,66,23,9,0)
                                '5' FOR GROUP 5 
"^DD",727.802,727.802,66,23,10,0)
                                '6' FOR GROUP 6 
"^DD",727.802,727.802,66,23,11,0)
                                '7' FOR GROUP 7 
"^DD",727.802,727.802,66,23,12,0)
                                '8' FOR GROUP 8 
"^DD",727.802,727.802,66,23,13,0)
 
"^DD",727.802,727.802,66,23,14,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.802,727.802,66,23,15,0)
 
"^DD",727.802,727.802,66,23,16,0)
                                '1' FOR a 
"^DD",727.802,727.802,66,23,17,0)
                                '3' FOR c 
"^DD",727.802,727.802,66,23,18,0)
                                '5' FOR e 
"^DD",727.802,727.802,66,23,19,0)
                                '7' FOR g 
"^DD",727.802,727.802,66,"DT")
3040301
"^DD",727.802,727.802,67,0)
USER ENROLLEE^F^^1;31^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,67,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,67,21,0)
^^4^4^3040317^
"^DD",727.802,727.802,67,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.802,727.802,67,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.802,727.802,67,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.802,727.802,67,21,4,0)
year's value is contained. 
"^DD",727.802,727.802,67,23,0)
^^4^4^3040317^
"^DD",727.802,727.802,67,23,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.802,727.802,67,23,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.802,727.802,67,23,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.802,727.802,67,23,4,0)
year's value is contained. 
"^DD",727.802,727.802,67,"DT")
3040301
"^DD",727.802,727.802,68,0)
PATIENT TYPE^F^^1;32^K:$L(X)>2!($L(X)<1) X
"^DD",727.802,727.802,68,3)
Answer must be 1-2 characters in length.
"^DD",727.802,727.802,68,21,0)
^^3^3^3040317^
"^DD",727.802,727.802,68,21,1,0)
"PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.802,727.802,68,21,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT File 
"^DD",727.802,727.802,68,21,3,0)
#2 which points to the TYPE OF PATIENT entries in File #391.
"^DD",727.802,727.802,68,23,0)
^^17^17^3040317^
"^DD",727.802,727.802,68,23,1,0)
"PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.802,727.802,68,23,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT File 
"^DD",727.802,727.802,68,23,3,0)
#2 which points to the TYPE OF PATIENT entries in File #391. Every 
"^DD",727.802,727.802,68,23,4,0)
patient added to the system must have a TYPE specified. It best 
"^DD",727.802,727.802,68,23,5,0)
classifies a patient as one of the following values listed below.  
"^DD",727.802,727.802,68,23,6,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.802,727.802,68,23,7,0)
 
"^DD",727.802,727.802,68,23,8,0)
AC= ACTIVE DUTY
"^DD",727.802,727.802,68,23,9,0)
AL= ALLIED VETERAN
"^DD",727.802,727.802,68,23,10,0)
CO= COLLATERAL
"^DD",727.802,727.802,68,23,11,0)
EM= EMPLOYEE
"^DD",727.802,727.802,68,23,12,0)
IN= INELIGIBLE
"^DD",727.802,727.802,68,23,13,0)
MI= MILITARY RETIREE
"^DD",727.802,727.802,68,23,14,0)
NO= NON-VETERAN (OTHER)
"^DD",727.802,727.802,68,23,15,0)
NS= NSC VETERAN
"^DD",727.802,727.802,68,23,16,0)
SC= SC VETERAN
"^DD",727.802,727.802,68,23,17,0)
TR= TRICARE
"^DD",727.802,727.802,68,"DT")
3040301
"^DD",727.802,727.802,69,0)
CV STATUS ELIGIBILITY^F^^1;33^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,69,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,69,21,0)
^.001^3^3^3040318^^^^
"^DD",727.802,727.802,69,21,1,0)
CV STATUS ELIGIBILITY is determined by the use of API $$CVEDT^DGCV (DFN.
"^DD",727.802,727.802,69,21,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the Patient
"^DD",727.802,727.802,69,21,3,0)
File #2 to determine CV Status.
"^DD",727.802,727.802,69,23,0)
^^11^11^3040318^
"^DD",727.802,727.802,69,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN.
"^DD",727.802,727.802,69,23,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the Patient
"^DD",727.802,727.802,69,23,3,0)
File #2 to determine CV Status.  API returns three pieces (i.e. 
"^DD",727.802,727.802,69,23,4,0)
1^3010106^0) and the first piece is resolved as follows.
"^DD",727.802,727.802,69,23,5,0)
 
"^DD",727.802,727.802,69,23,6,0)
 1 - veteran qualifies as a CV
"^DD",727.802,727.802,69,23,7,0)
 0 - veteran does not qualify as a CV
"^DD",727.802,727.802,69,23,8,0)
-1 - bad DFN
"^DD",727.802,727.802,69,23,9,0)
 
"^DD",727.802,727.802,69,23,10,0)
Based on this result the field will be set to 'Y' for 'YES' or 'E' for 
"^DD",727.802,727.802,69,23,11,0)
'ELIGIBILITY EXPIRED' or 'NULL' for not eligible.
"^DD",727.802,727.802,69,"DT")
3040301
"^DD",727.802,727.802,70,0)
CV ELIGIBILITY END DATE^F^^1;34^K:$L(X)>8!($L(X)<1) X
"^DD",727.802,727.802,70,3)
Answer must be 1-8 characters in length.
"^DD",727.802,727.802,70,21,0)
^.001^3^3^3040318^^
"^DD",727.802,727.802,70,21,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.802,727.802,70,21,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.802,727.802,70,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.802,727.802,70,23,0)
^.001^4^4^3040318^^
"^DD",727.802,727.802,70,23,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.802,727.802,70,23,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.802,727.802,70,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces 
"^DD",727.802,727.802,70,23,4,0)
(i.e. 1^3010106^0) the 2nd piece is the Combat Vet End Date.
"^DD",727.802,727.802,70,"DT")
3040301
"^DD",727.802,727.802,71,0)
ENCOUNTER CV^F^^1;35^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,71,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,71,21,0)
^^3^3^3040317^
"^DD",727.802,727.802,71,21,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.802,727.802,71,21,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 2 
"^DD",727.802,727.802,71,21,3,0)
to determine CV Status.
"^DD",727.802,727.802,71,23,0)
^^10^10^3040317^
"^DD",727.802,727.802,71,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.802,727.802,71,23,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 2 
"^DD",727.802,727.802,71,23,3,0)
to determine CV Status.   API returns three pieces (i.e. 1^3010106^0). The
"^DD",727.802,727.802,71,23,4,0)
third piece returns:
"^DD",727.802,727.802,71,23,5,0)
 
"^DD",727.802,727.802,71,23,6,0)
1 - vet was eligible on date specified
"^DD",727.802,727.802,71,23,7,0)
0 - vet was not eligible on date specified
"^DD",727.802,727.802,71,23,8,0)
 
"^DD",727.802,727.802,71,23,9,0)
Based on these returns, the value for this field shall be Y =Yes, or 
"^DD",727.802,727.802,71,23,10,0)
'NULL' for 'NO'.
"^DD",727.802,727.802,71,"DT")
3040301
"^DD",727.802,727.802,72,0)
NATIONAL PATIENT RECORD FLAG^F^^1;36^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,72,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,72,21,0)
^^6^6^3040317^
"^DD",727.802,727.802,72,21,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.802,727.802,72,21,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.802,727.802,72,21,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.802,727.802,72,21,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.802,727.802,72,21,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.802,727.802,72,21,6,0)
"Y  if the Category I flag is present and active, otherwise it is NULL.
"^DD",727.802,727.802,72,23,0)
^^6^6^3040317^
"^DD",727.802,727.802,72,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.802,727.802,72,23,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.802,727.802,72,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.802,727.802,72,23,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.802,727.802,72,23,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.802,727.802,72,23,6,0)
"Y  if the Category I flag is present and active, otherwise it is NULL.
"^DD",727.802,727.802,72,"DT")
3040301
"^DD",727.805,727.805,19,0)
DSS PRODUCT DEPARTMENT^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.805,727.805,19,.1)

"^DD",727.805,727.805,19,3)
Answer must be 1-10 characters in length.
"^DD",727.805,727.805,19,21,0)
^.001^2^2^3040318^^^
"^DD",727.805,727.805,19,21,1,0)
The nationally defined DSS Intermediate Department Number designated to 
"^DD",727.805,727.805,19,21,2,0)
the Nursing care product.
"^DD",727.805,727.805,19,23,0)
^^12^12^3040318^
"^DD",727.805,727.805,19,23,1,0)
DSS PRODUCT DEPARTMENT field value is determined via the following 
"^DD",727.805,727.805,19,23,2,0)
process: The DSS Product Department and IP Number File # 727.6 is
"^DD",727.805,727.805,19,23,3,0)
populated via site specific HL7 messages generated by AAC extracts which
"^DD",727.805,727.805,19,23,4,0)
run on a monthly basis.  The file is then used by the DSS extract routines
"^DD",727.805,727.805,19,23,5,0)
to identify and to populate the DSS PRODUCT DEPARTMENT and DSS IP# fields
"^DD",727.805,727.805,19,23,6,0)
in the DSS extract files before transmitting them to AAC.
"^DD",727.805,727.805,19,23,7,0)
 
"^DD",727.805,727.805,19,23,8,0)
Using the combination of Feeder System, Feeder Location and Feeder Key as
"^DD",727.805,727.805,19,23,9,0)
an identifier for each individual record matches are resolved and the 
"^DD",727.805,727.805,19,23,10,0)
designations are made. If no match is found in file 727.6 an error
"^DD",727.805,727.805,19,23,11,0)
message is generated and a bulletin is triggered and sent to a DSS mail
"^DD",727.805,727.805,19,23,12,0)
group identifying the problem.
"^DD",727.805,727.805,19,"DT")
3040302
"^DD",727.805,727.805,24,0)
DSS IP #^NJ7,0^^1;7^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.805,727.805,24,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.805,727.805,24,21,0)
^.001^2^2^3040318^^^
"^DD",727.805,727.805,24,21,1,0)
The nationally defined DSS Intermediate Product Number designated to the 
"^DD",727.805,727.805,24,21,2,0)
patient care product.
"^DD",727.805,727.805,24,23,0)
^.001^10^10^3041027^^
"^DD",727.805,727.805,24,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.805,727.805,24,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.805,727.805,24,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.805,727.805,24,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.805,727.805,24,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.805,727.805,24,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.805,727.805,24,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.805,727.805,24,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.805,727.805,24,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.805,727.805,24,23,10,0)
group identifying the problem. 
"^DD",727.805,727.805,24,"DT")
3031113
"^DD",727.809,727.809,23,0)
DSS PRODUCT DEPARTMENT^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.809,727.809,23,.1)

"^DD",727.809,727.809,23,3)
Answer must be 1-10 characters in length
"^DD",727.809,727.809,23,21,0)
^.001^2^2^3040318^^^^
"^DD",727.809,727.809,23,21,1,0)
The nationally defined DSS Intermediate Department Number designated to 
"^DD",727.809,727.809,23,21,2,0)
the Pharmacy care product.
"^DD",727.809,727.809,23,23,0)
^^12^12^3040318^
"^DD",727.809,727.809,23,23,1,0)
DSS PRODUCT DEPARTMENT field value is determined via the following 
"^DD",727.809,727.809,23,23,2,0)
process: The DSS Product Department and IP Number File # 727.6 is
"^DD",727.809,727.809,23,23,3,0)
populated via site specific HL7 messages generated by AAC extracts which
"^DD",727.809,727.809,23,23,4,0)
run on a monthly basis.  The file is then used by the DSS extract routines
"^DD",727.809,727.809,23,23,5,0)
to identify and to populate the DSS PRODUCT DEPARTMENT and DSS IP# fields
"^DD",727.809,727.809,23,23,6,0)
in the DSS extract files before transmitting them to AAC.
"^DD",727.809,727.809,23,23,7,0)
 
"^DD",727.809,727.809,23,23,8,0)
Using the combination of Feeder System, Feeder Location and Feeder Key as 
"^DD",727.809,727.809,23,23,9,0)
an identifier for each individual record matches are resolved and the 
"^DD",727.809,727.809,23,23,10,0)
designations are made. If no match is found in file 727.6 an error 
"^DD",727.809,727.809,23,23,11,0)
message is generated and a bulletin is triggered and sent to a DSS mail
"^DD",727.809,727.809,23,23,12,0)
group identifying the problem.
"^DD",727.809,727.809,23,"DT")
3040302
"^DD",727.809,727.809,49,0)
PLACEHOLDER^F^^1;28^K:$L(X)>1!($L(X)<1) X
"^DD",727.809,727.809,49,.1)

"^DD",727.809,727.809,49,3)
Answer must be 1 character in length
"^DD",727.809,727.809,49,"DT")
3040301
"^DD",727.809,727.809,67,0)
DSS IP #^NJ7,0^^2;11^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.809,727.809,67,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.809,727.809,67,21,0)
^^2^2^3040318^
"^DD",727.809,727.809,67,21,1,0)
The nationally defined DSS Intermediate Product Number designated to the 
"^DD",727.809,727.809,67,21,2,0)
patient care product.
"^DD",727.809,727.809,67,23,0)
^^10^10^3041027^
"^DD",727.809,727.809,67,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.809,727.809,67,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.809,727.809,67,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.809,727.809,67,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.809,727.809,67,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.809,727.809,67,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.809,727.809,67,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.809,727.809,67,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.809,727.809,67,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.809,727.809,67,23,10,0)
group identifying the problem.
"^DD",727.809,727.809,67,"DT")
3031113
"^DD",727.809,727.809,68,0)
ENROLLMENT PRIORITY^F^^2;12^K:$L(X)>2!($L(X)<1) X
"^DD",727.809,727.809,68,3)
Answer must be 1-2 characters in length.
"^DD",727.809,727.809,68,21,0)
^^2^2^3040317^
"^DD",727.809,727.809,68,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment piority group and the 
"^DD",727.809,727.809,68,21,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.809,727.809,68,23,0)
^^20^20^3041027^
"^DD",727.809,727.809,68,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.809,727.809,68,23,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.809,727.809,68,23,3,0)
 
"^DD",727.809,727.809,68,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.809,727.809,68,23,5,0)
 
"^DD",727.809,727.809,68,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.809,727.809,68,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.809,727.809,68,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.809,727.809,68,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.809,727.809,68,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.809,727.809,68,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.809,727.809,68,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.809,727.809,68,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.809,727.809,68,23,14,0)
 
"^DD",727.809,727.809,68,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.809,727.809,68,23,16,0)
 
"^DD",727.809,727.809,68,23,17,0)
                                'a' FOR 1 
"^DD",727.809,727.809,68,23,18,0)
                                'c' FOR 3 
"^DD",727.809,727.809,68,23,19,0)
                                'e' FOR 5 
"^DD",727.809,727.809,68,23,20,0)
                                'g' FOR 7   
"^DD",727.809,727.809,68,"DT")
3040301
"^DD",727.809,727.809,69,0)
USER ENROLLEE^F^^2;13^K:$L(X)>1!($L(X)<1) X
"^DD",727.809,727.809,69,3)
Answer must be 1 character in length.
"^DD",727.809,727.809,69,21,0)
^.001^4^4^3040317^^
"^DD",727.809,727.809,69,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.809,727.809,69,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.809,727.809,69,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.809,727.809,69,21,4,0)
year's value is contained. 
"^DD",727.809,727.809,69,"DT")
3040301
"^DD",727.809,727.809,70,0)
PATIENT TYPE^F^^2;14^K:$L(X)>2!($L(X)<1) X
"^DD",727.809,727.809,70,3)
Answer must be 1-2 characters in length.
"^DD",727.809,727.809,70,21,0)
^^3^3^3040317^
"^DD",727.809,727.809,70,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.809,727.809,70,21,2,0)
at a VA facility. It is determined by the TYPE field of the PATIENT 
"^DD",727.809,727.809,70,21,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391.
"^DD",727.809,727.809,70,23,0)
^^17^17^3040317^
"^DD",727.809,727.809,70,23,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.809,727.809,70,23,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT 
"^DD",727.809,727.809,70,23,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391. Every 
"^DD",727.809,727.809,70,23,4,0)
patient added to the system must have a TYPE specified. It best 
"^DD",727.809,727.809,70,23,5,0)
classifies a patient as one of the following values listed below.  
"^DD",727.809,727.809,70,23,6,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.809,727.809,70,23,7,0)
 
"^DD",727.809,727.809,70,23,8,0)
AC= ACTIVE DUTY
"^DD",727.809,727.809,70,23,9,0)
AL= ALLIED VETERAN
"^DD",727.809,727.809,70,23,10,0)
CO= COLLATERAL
"^DD",727.809,727.809,70,23,11,0)
EM= EMPLOYEE
"^DD",727.809,727.809,70,23,12,0)
IN= INELIGIBLE
"^DD",727.809,727.809,70,23,13,0)
MI= MILITARY RETIREE
"^DD",727.809,727.809,70,23,14,0)
NO= NON-VETERAN (OTHER)
"^DD",727.809,727.809,70,23,15,0)
NS= NSC VETERAN
"^DD",727.809,727.809,70,23,16,0)
SC= SC VETERAN
"^DD",727.809,727.809,70,23,17,0)
TR= TRICARE
"^DD",727.809,727.809,70,"DT")
3040301
"^DD",727.809,727.809,71,0)
CV STATUS ELIGIBILITY^F^^2;15^K:$L(X)>1!($L(X)<1) X
"^DD",727.809,727.809,71,3)
Answer must be 1 character in length.
"^DD",727.809,727.809,71,21,0)
^.001^3^3^3040318^^^
"^DD",727.809,727.809,71,21,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.809,727.809,71,21,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.809,727.809,71,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.809,727.809,71,23,0)
^^11^11^3040318^
"^DD",727.809,727.809,71,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.809,727.809,71,23,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.809,727.809,71,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces i.e. 
"^DD",727.809,727.809,71,23,4,0)
1^3010106^0, the first piece is resolved as follows.
"^DD",727.809,727.809,71,23,5,0)
 
"^DD",727.809,727.809,71,23,6,0)
 1 - qualifies as a CV
"^DD",727.809,727.809,71,23,7,0)
 0 - does not qualify as a CV
"^DD",727.809,727.809,71,23,8,0)
-1 - bad DFN or date
"^DD",727.809,727.809,71,23,9,0)
 
"^DD",727.809,727.809,71,23,10,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES', 
"^DD",727.809,727.809,71,23,11,0)
E for 'ELIGIBILITY EXPIRED' or 'NULL' for 'NOT ELIGIBLE'.
"^DD",727.809,727.809,71,"DT")
3040301
"^DD",727.809,727.809,72,0)
CV ELIGIBILITY END DATE^F^^2;16^K:$L(X)>8!($L(X)<1) X
"^DD",727.809,727.809,72,3)
Answer must be 1-8 characters in length.
"^DD",727.809,727.809,72,21,0)
^^3^3^3040317^
"^DD",727.809,727.809,72,21,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.809,727.809,72,21,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.809,727.809,72,21,3,0)
Patient File #2 to determine CV Status.  
"^DD",727.809,727.809,72,23,0)
^^4^4^3040317^
"^DD",727.809,727.809,72,23,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.809,727.809,72,23,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.809,727.809,72,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces (i.e. 
"^DD",727.809,727.809,72,23,4,0)
1^3010106^0) the 2nd piece is the Combat Vet End Date.
"^DD",727.809,727.809,72,"DT")
3040301
"^DD",727.809,727.809,73,0)
ENCOUNTER CV^F^^2;17^K:$L(X)>1!($L(X)<1) X
"^DD",727.809,727.809,73,3)
Answer must be 1 character in length.
"^DD",727.809,727.809,73,21,0)
^^3^3^3040317^
"^DD",727.809,727.809,73,21,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.809,727.809,73,21,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.809,727.809,73,21,3,0)
2 to determine CV Status.  
"^DD",727.809,727.809,73,23,0)
^^10^10^3040317^
"^DD",727.809,727.809,73,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.809,727.809,73,23,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.809,727.809,73,23,3,0)
2 to determine CV Status.   API returns three pieces (i.e. 1^3010106^0). 
"^DD",727.809,727.809,73,23,4,0)
The third piece returns:
"^DD",727.809,727.809,73,23,5,0)
 
"^DD",727.809,727.809,73,23,6,0)
1 - vet was eligible on date specified
"^DD",727.809,727.809,73,23,7,0)
0 - vet was not eligible on date specified
"^DD",727.809,727.809,73,23,8,0)
 
"^DD",727.809,727.809,73,23,9,0)
Based on these returns, the value for this field shall be Y =Yes, or 
"^DD",727.809,727.809,73,23,10,0)
'NULL' for 'NO'.
"^DD",727.809,727.809,73,"DT")
3040301
"^DD",727.809,727.809,74,0)
NATIONAL PATIENT RECORD FLAG^F^^2;18^K:$L(X)>1!($L(X)<1) X
"^DD",727.809,727.809,74,3)
Answer must be 1 character in length.
"^DD",727.809,727.809,74,21,0)
^^7^7^3040317^
"^DD",727.809,727.809,74,21,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.809,727.809,74,21,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.809,727.809,74,21,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.809,727.809,74,21,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.809,727.809,74,21,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.809,727.809,74,21,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.809,727.809,74,21,7,0)
NULL.
"^DD",727.809,727.809,74,23,0)
^^7^7^3040317^
"^DD",727.809,727.809,74,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.809,727.809,74,23,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.809,727.809,74,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.809,727.809,74,23,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.809,727.809,74,23,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.809,727.809,74,23,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.809,727.809,74,23,7,0)
NULL.
"^DD",727.809,727.809,74,"DT")
3040301
"^DD",727.81,727.81,35,0)
DSS PRODUCT DEPARTMENT^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.81,727.81,35,.1)

"^DD",727.81,727.81,35,3)
Answer must be 1-10 characters in length
"^DD",727.81,727.81,35,21,0)
^.001^2^2^3040318^^^^
"^DD",727.81,727.81,35,21,1,0)
The nationally defined DSS Intermediate Department Number designated to 
"^DD",727.81,727.81,35,21,2,0)
the Pharmacy care product.
"^DD",727.81,727.81,35,23,0)
^^12^12^3040318^
"^DD",727.81,727.81,35,23,1,0)
DSS PRODUCT DEPARTMENT field value is determined via the following 
"^DD",727.81,727.81,35,23,2,0)
process: The DSS Product Department and IP Number File # 727.6 is
"^DD",727.81,727.81,35,23,3,0)
populated via site specific HL7 messages generated by AAC extracts which
"^DD",727.81,727.81,35,23,4,0)
run on a monthly basis.  The file is then used by the DSS extract routines
"^DD",727.81,727.81,35,23,5,0)
to identify and to populate the DSS PRODUCT DEPARTMENT and DSS IP# fields
"^DD",727.81,727.81,35,23,6,0)
in the DSS extract files before transmitting them to AAC.
"^DD",727.81,727.81,35,23,7,0)
 
"^DD",727.81,727.81,35,23,8,0)
Using the combination of Feeder System, Feeder Location and Feeder Key as
"^DD",727.81,727.81,35,23,9,0)
an identifier for each individual record matches are resolved and the 
"^DD",727.81,727.81,35,23,10,0)
designations are made.. If no match is found in file 727.6 an error
"^DD",727.81,727.81,35,23,11,0)
message is generated and a bulletin is triggered and sent to a DSS mail
"^DD",727.81,727.81,35,23,12,0)
group identifying the problem.
"^DD",727.81,727.81,35,"DT")
3040302
"^DD",727.81,727.81,58,0)
PLACEHOLDER^F^^1;25^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,58,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,58,"DT")
3040301
"^DD",727.81,727.81,73,0)
DSS IP #^NJ7,0^^1;40^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.81,727.81,73,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.81,727.81,73,21,0)
^.001^2^2^3040318^^
"^DD",727.81,727.81,73,21,1,0)
The nationally defined DSS Intermediate Product Number designated to the 
"^DD",727.81,727.81,73,21,2,0)
patient care product.
"^DD",727.81,727.81,73,23,0)
^.001^10^10^3041027^^
"^DD",727.81,727.81,73,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.81,727.81,73,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.81,727.81,73,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.81,727.81,73,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.81,727.81,73,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.81,727.81,73,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.81,727.81,73,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.81,727.81,73,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.81,727.81,73,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.81,727.81,73,23,10,0)
group identifying the problem. 
"^DD",727.81,727.81,73,"DT")
3031113
"^DD",727.81,727.81,74,0)
ENROLLMENT PRIORITY^F^^1;41^K:$L(X)>2!($L(X)<1) X
"^DD",727.81,727.81,74,3)
Answer must be 1-2 characters in length.
"^DD",727.81,727.81,74,21,0)
^.001^2^2^3041027^^
"^DD",727.81,727.81,74,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment piority group and the 
"^DD",727.81,727.81,74,21,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.81,727.81,74,23,0)
^.001^20^20^3041027^^
"^DD",727.81,727.81,74,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.81,727.81,74,23,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11. 
"^DD",727.81,727.81,74,23,3,0)
 
"^DD",727.81,727.81,74,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.81,727.81,74,23,5,0)
 
"^DD",727.81,727.81,74,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.81,727.81,74,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.81,727.81,74,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.81,727.81,74,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.81,727.81,74,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.81,727.81,74,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.81,727.81,74,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.81,727.81,74,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.81,727.81,74,23,14,0)
 
"^DD",727.81,727.81,74,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.81,727.81,74,23,16,0)
 
"^DD",727.81,727.81,74,23,17,0)
                                'a' FOR 1 
"^DD",727.81,727.81,74,23,18,0)
                                'c' FOR 3 
"^DD",727.81,727.81,74,23,19,0)
                                'e' FOR 5 
"^DD",727.81,727.81,74,23,20,0)
                                'g' FOR 7   
"^DD",727.81,727.81,74,"DT")
3040301
"^DD",727.81,727.81,75,0)
USER ENROLLEE^F^^1;42^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,75,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,75,21,0)
^^4^4^3040317^
"^DD",727.81,727.81,75,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.81,727.81,75,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.81,727.81,75,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.81,727.81,75,21,4,0)
year's value is contained. 
"^DD",727.81,727.81,75,"DT")
3040301
"^DD",727.81,727.81,76,0)
PATIENT TYPE^F^^2;1^K:$L(X)>2!($L(X)<1) X
"^DD",727.81,727.81,76,3)
Answer must be 1-2 characters in length.
"^DD",727.81,727.81,76,21,0)
^^3^3^3040317^
"^DD",727.81,727.81,76,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.81,727.81,76,21,2,0)
at a VA facility. It is determined by the TYPE field of the PATIENT 
"^DD",727.81,727.81,76,21,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391.
"^DD",727.81,727.81,76,23,0)
^^17^17^3040317^
"^DD",727.81,727.81,76,23,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.81,727.81,76,23,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT 
"^DD",727.81,727.81,76,23,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391. Every 
"^DD",727.81,727.81,76,23,4,0)
patient added to the system must have a TYPE specified. It best 
"^DD",727.81,727.81,76,23,5,0)
classifies a patient as one of the following values listed below.  
"^DD",727.81,727.81,76,23,6,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.81,727.81,76,23,7,0)
 
"^DD",727.81,727.81,76,23,8,0)
AC= ACTIVE DUTY
"^DD",727.81,727.81,76,23,9,0)
AL= ALLIED VETERAN
"^DD",727.81,727.81,76,23,10,0)
CO= COLLATERAL
"^DD",727.81,727.81,76,23,11,0)
EM= EMPLOYEE
"^DD",727.81,727.81,76,23,12,0)
IN= INELIGIBLE
"^DD",727.81,727.81,76,23,13,0)
MI= MILITARY RETIREE
"^DD",727.81,727.81,76,23,14,0)
NO= NON-VETERAN (OTHER)
"^DD",727.81,727.81,76,23,15,0)
NS= NSC VETERAN
"^DD",727.81,727.81,76,23,16,0)
SC= SC VETERAN
"^DD",727.81,727.81,76,23,17,0)
TR= TRICARE
"^DD",727.81,727.81,76,"DT")
3040301
"^DD",727.81,727.81,77,0)
CV STATUS ELIGIBILITY^F^^2;2^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,77,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,77,21,0)
^.001^3^3^3040318^^^
"^DD",727.81,727.81,77,21,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.81,727.81,77,21,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.81,727.81,77,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.81,727.81,77,23,0)
^^11^11^3040318^
"^DD",727.81,727.81,77,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.81,727.81,77,23,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.81,727.81,77,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces i.e. 
"^DD",727.81,727.81,77,23,4,0)
1^3010106^0, the first piece is resolved as follows.
"^DD",727.81,727.81,77,23,5,0)
 
"^DD",727.81,727.81,77,23,6,0)
 1 - qualifies as a CV
"^DD",727.81,727.81,77,23,7,0)
 0 - does not qualify as a CV
"^DD",727.81,727.81,77,23,8,0)
-1 - bad DFN or date
"^DD",727.81,727.81,77,23,9,0)
 
"^DD",727.81,727.81,77,23,10,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES', 
"^DD",727.81,727.81,77,23,11,0)
E for 'ELIGIBILITY EXPIRED' or 'NULL' for 'NOT ELIGIBLE'.
"^DD",727.81,727.81,77,"DT")
3040317
"^DD",727.81,727.81,78,0)
CV ELIGIBILITY END DATE^F^^2;3^K:$L(X)>8!($L(X)<1) X
"^DD",727.81,727.81,78,3)
Answer must be 1-8 characters in length.
"^DD",727.81,727.81,78,21,0)
^^3^3^3040317^
"^DD",727.81,727.81,78,21,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.81,727.81,78,21,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.81,727.81,78,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.81,727.81,78,23,0)
^^4^4^3040317^
"^DD",727.81,727.81,78,23,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.81,727.81,78,23,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.81,727.81,78,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces (i.e. 
"^DD",727.81,727.81,78,23,4,0)
1^3010106^0) the 2nd piece is the Combat Vet End Date.
"^DD",727.81,727.81,78,"DT")
3040301
"^DD",727.81,727.81,79,0)
ENCOUNTER CV^F^^2;4^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,79,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,79,21,0)
^^3^3^3040317^
"^DD",727.81,727.81,79,21,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.81,727.81,79,21,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.81,727.81,79,21,3,0)
2 to determine CV Status.
"^DD",727.81,727.81,79,23,0)
^^10^10^3040317^
"^DD",727.81,727.81,79,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.81,727.81,79,23,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.81,727.81,79,23,3,0)
2 to determine CV Status.   API returns three pieces (i.e. 1^3010106^0). 
"^DD",727.81,727.81,79,23,4,0)
The third piece returns:
"^DD",727.81,727.81,79,23,5,0)
 
"^DD",727.81,727.81,79,23,6,0)
1 - vet was eligible on date specified
"^DD",727.81,727.81,79,23,7,0)
0 - vet was not eligible on date specified
"^DD",727.81,727.81,79,23,8,0)
 
"^DD",727.81,727.81,79,23,9,0)
Based on these returns, the value for this field shall be Y =Yes, or 
"^DD",727.81,727.81,79,23,10,0)
'NULL' for 'NO'.
"^DD",727.81,727.81,79,"DT")
3040301
"^DD",727.81,727.81,80,0)
NATIONAL PATIENT RECORD FLAG^F^^2;5^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,80,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,80,21,0)
^^7^7^3040317^
"^DD",727.81,727.81,80,21,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.81,727.81,80,21,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.81,727.81,80,21,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.81,727.81,80,21,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.81,727.81,80,21,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.81,727.81,80,21,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.81,727.81,80,21,7,0)
NULL.
"^DD",727.81,727.81,80,23,0)
^^7^7^3040317^
"^DD",727.81,727.81,80,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.81,727.81,80,23,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.81,727.81,80,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.81,727.81,80,23,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.81,727.81,80,23,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.81,727.81,80,23,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.81,727.81,80,23,7,0)
NULL.
"^DD",727.81,727.81,80,"DT")
3040301
"^DD",727.81,727.81,81,0)
RX PATIENT STATUS^F^^2;6^K:$L(X)>3!($L(X)<1) X
"^DD",727.81,727.81,81,3)
Answer must be 1-3 characters in length.
"^DD",727.81,727.81,81,21,0)
^.001^2^2^3040407^^
"^DD",727.81,727.81,81,21,1,0)
RX PATIENT STATUS indicates the status of the patient at the time the 
"^DD",727.81,727.81,81,21,2,0)
medication was filled.
"^DD",727.81,727.81,81,23,0)
^^13^13^3040407^
"^DD",727.81,727.81,81,23,1,0)
RX PATIENT STATUS indicates the status of the patient at the time the 
"^DD",727.81,727.81,81,23,2,0)
medication was filled. RX Patient Status is extracted from the Rx PATIENT 
"^DD",727.81,727.81,81,23,3,0)
STATUS (File #53) Field # 6 entitled: SC/A&A/OTHER/INPATIENT/NVA. 
"^DD",727.81,727.81,81,23,4,0)
 
"^DD",727.81,727.81,81,23,5,0)
The 3-character value for this field shall be an abbreviated version of
"^DD",727.81,727.81,81,23,6,0)
the DATA TYPE/set of codes of this required field. The values are as
"^DD",727.81,727.81,81,23,7,0)
follows: 
"^DD",727.81,727.81,81,23,8,0)
 
"^DD",727.81,727.81,81,23,9,0)
SC  = SERVICE CONNECTED 
"^DD",727.81,727.81,81,23,10,0)
AA  = A&A 
"^DD",727.81,727.81,81,23,11,0)
OTH = OTHER 
"^DD",727.81,727.81,81,23,12,0)
INP = INPATIENT 
"^DD",727.81,727.81,81,23,13,0)
NON = NON-VA
"^DD",727.81,727.81,81,"DT")
3040407
"^DD",727.81,727.81,82,0)
NON VA PRESCRIBER^F^^2;7^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,82,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,82,21,0)
^.001^2^2^3040407^^
"^DD",727.81,727.81,82,21,1,0)
NON VA PRESCRIBER is extracted from the New Person File #200, Field 
"^DD",727.81,727.81,82,21,2,0)
#53.91 entitled: NON-VA PRESCRIBER.
"^DD",727.81,727.81,82,23,0)
^^5^5^3040407^
"^DD",727.81,727.81,82,23,1,0)
NON VA PRESCRIBER is extracted from the New Person File #200, Field 
"^DD",727.81,727.81,82,23,2,0)
#53.91 entitled: NON-VA PRESCRIBER. The one character value for this 
"^DD",727.81,727.81,82,23,3,0)
field shall be "Y  or NULL based on the following codes:
"^DD",727.81,727.81,82,23,4,0)
 
"^DD",727.81,727.81,82,23,5,0)
Y =  YES Null =  NO.  
"^DD",727.81,727.81,82,"DT")
3040407
"^DD",727.811,727.811,38,0)
DSS PRODUCT DEPARTMENT^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.811,727.811,38,.1)

"^DD",727.811,727.811,38,3)
Answer must be 1-10 characters in length.
"^DD",727.811,727.811,38,21,0)
^.001^2^2^3040318^^
"^DD",727.811,727.811,38,21,1,0)
The nationally defined DSS Intermediate Department Number designated to 
"^DD",727.811,727.811,38,21,2,0)
the Surgery care product.
"^DD",727.811,727.811,38,23,0)
^^12^12^3040318^
"^DD",727.811,727.811,38,23,1,0)
DSS PRODUCT DEPARTMENT field value is determined via the following 
"^DD",727.811,727.811,38,23,2,0)
process: The DSS Product Department and IP Number File # 727.6 is
"^DD",727.811,727.811,38,23,3,0)
populated via site specific HL7 messages generated by AAC extracts which
"^DD",727.811,727.811,38,23,4,0)
run on a monthly basis.  The file is then used by the DSS extract routines
"^DD",727.811,727.811,38,23,5,0)
to identify and to populate the DSS PRODUCT DEPARTMENT and DSS IP# fields
"^DD",727.811,727.811,38,23,6,0)
in the DSS extract files before transmitting them to AAC.
"^DD",727.811,727.811,38,23,7,0)
 
"^DD",727.811,727.811,38,23,8,0)
Using the combination of Feeder System, Feeder Location and Feeder Key as 
"^DD",727.811,727.811,38,23,9,0)
an identifier for each individual record matches are resolved and the 
"^DD",727.811,727.811,38,23,10,0)
designations are made. If no match is found in file 727.6 an error 
"^DD",727.811,727.811,38,23,11,0)
message is generated and a bulletin is triggered and sent to a DSS mail
"^DD",727.811,727.811,38,23,12,0)
group identifying the problem.
"^DD",727.811,727.811,38,"DT")
3040302
"^DD",727.811,727.811,51,0)
PLACEHOLDER^F^^1;15^K:$L(X)>1!($L(X)<1) X
"^DD",727.811,727.811,51,3)
Answer must be 1 character in length.
"^DD",727.811,727.811,51,"DT")
3040301
"^DD",727.811,727.811,62,0)
DSS IP #^NJ7,0^^1;26^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.811,727.811,62,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.811,727.811,62,21,0)
^.001^2^2^3040318^^
"^DD",727.811,727.811,62,21,1,0)
The nationally defined DSS Intermediate Product Number designated to the 
"^DD",727.811,727.811,62,21,2,0)
patient care product.
"^DD",727.811,727.811,62,23,0)
^.001^10^10^3041027^^
"^DD",727.811,727.811,62,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.811,727.811,62,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.811,727.811,62,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.811,727.811,62,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.811,727.811,62,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.811,727.811,62,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.811,727.811,62,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.811,727.811,62,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.811,727.811,62,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.811,727.811,62,23,10,0)
group identifying the problem. 
"^DD",727.811,727.811,62,"DT")
3031113
"^DD",727.811,727.811,63,0)
ENROLLMENT PRIORITY^F^^1;27^K:$L(X)>2!($L(X)<1) X
"^DD",727.811,727.811,63,3)
Answer must be 1-2 characters in length.
"^DD",727.811,727.811,63,21,0)
^.001^2^2^3041027^^
"^DD",727.811,727.811,63,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment piority group and the 
"^DD",727.811,727.811,63,21,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.811,727.811,63,23,0)
^^20^20^3041027^
"^DD",727.811,727.811,63,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.811,727.811,63,23,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11. 
"^DD",727.811,727.811,63,23,3,0)
 
"^DD",727.811,727.811,63,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.811,727.811,63,23,5,0)
 
"^DD",727.811,727.811,63,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.811,727.811,63,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.811,727.811,63,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.811,727.811,63,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.811,727.811,63,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.811,727.811,63,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.811,727.811,63,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.811,727.811,63,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.811,727.811,63,23,14,0)
 
"^DD",727.811,727.811,63,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.811,727.811,63,23,16,0)
 
"^DD",727.811,727.811,63,23,17,0)
                                'a' FOR 1 
"^DD",727.811,727.811,63,23,18,0)
                                'c' FOR 3 
"^DD",727.811,727.811,63,23,19,0)
                                'e' FOR 5 
"^DD",727.811,727.811,63,23,20,0)
                                'g' FOR 7   
"^DD",727.811,727.811,63,"DT")
3040301
"^DD",727.811,727.811,64,0)
USER ENROLLEE^F^^1;28^K:$L(X)>1!($L(X)<1) X
"^DD",727.811,727.811,64,3)
Answer must be 1 character in length.
"^DD",727.811,727.811,64,21,0)
^^4^4^3040317^
"^DD",727.811,727.811,64,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.811,727.811,64,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.811,727.811,64,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.811,727.811,64,21,4,0)
year's value is contained. 
"^DD",727.811,727.811,64,"DT")
3040301
"^DD",727.811,727.811,65,0)
PATIENT TYPE^F^^1;29^K:$L(X)>2!($L(X)<1) X
"^DD",727.811,727.811,65,3)
Answer must be 1-2 characters in length.
"^DD",727.811,727.811,65,21,0)
^^3^3^3040317^
"^DD",727.811,727.811,65,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.811,727.811,65,21,2,0)
at a VA facility. It is determined by the TYPE field of the PATIENT 
"^DD",727.811,727.811,65,21,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391.
"^DD",727.811,727.811,65,23,0)
^^17^17^3040317^
"^DD",727.811,727.811,65,23,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.811,727.811,65,23,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT 
"^DD",727.811,727.811,65,23,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391. Every 
"^DD",727.811,727.811,65,23,4,0)
patient added to the system must have a TYPE specified. It best 
"^DD",727.811,727.811,65,23,5,0)
classifies a patient as one of the following values listed below.  
"^DD",727.811,727.811,65,23,6,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.811,727.811,65,23,7,0)
 
"^DD",727.811,727.811,65,23,8,0)
AC= ACTIVE DUTY
"^DD",727.811,727.811,65,23,9,0)
AL= ALLIED VETERAN
"^DD",727.811,727.811,65,23,10,0)
CO= COLLATERAL
"^DD",727.811,727.811,65,23,11,0)
EM= EMPLOYEE
"^DD",727.811,727.811,65,23,12,0)
IN= INELIGIBLE
"^DD",727.811,727.811,65,23,13,0)
MI= MILITARY RETIREE
"^DD",727.811,727.811,65,23,14,0)
NO= NON-VETERAN (OTHER)
"^DD",727.811,727.811,65,23,15,0)
NS= NSC VETERAN
"^DD",727.811,727.811,65,23,16,0)
SC= SC VETERAN
"^DD",727.811,727.811,65,23,17,0)
TR= TRICARE
"^DD",727.811,727.811,65,"DT")
3040301
"^DD",727.811,727.811,66,0)
CV STATUS ELIGIBILITY^F^^1;30^K:$L(X)>1!($L(X)<1) X
"^DD",727.811,727.811,66,3)
Answer must be 1 character in length.
"^DD",727.811,727.811,66,21,0)
^.001^3^3^3040318^^
"^DD",727.811,727.811,66,21,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.811,727.811,66,21,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.811,727.811,66,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.811,727.811,66,23,0)
^^11^11^3040318^
"^DD",727.811,727.811,66,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.811,727.811,66,23,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.811,727.811,66,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces i.e. 
"^DD",727.811,727.811,66,23,4,0)
1^3010106^0, the first piece is resolved as follows.
"^DD",727.811,727.811,66,23,5,0)
 
"^DD",727.811,727.811,66,23,6,0)
 1 - qualifies as a CV
"^DD",727.811,727.811,66,23,7,0)
 0 - does not qualify as a CV
"^DD",727.811,727.811,66,23,8,0)
-1 - bad DFN or date
"^DD",727.811,727.811,66,23,9,0)
 
"^DD",727.811,727.811,66,23,10,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES', 
"^DD",727.811,727.811,66,23,11,0)
E for 'ELIGIBILITY EXPIRED' or 'NULL' for 'NOT ELIGIBLE'.
"^DD",727.811,727.811,66,"DT")
3040301
"^DD",727.811,727.811,67,0)
CV ELIGIBILITY END DATE^F^^1;31^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,67,3)
Answer must be 1-8 characters in length.
"^DD",727.811,727.811,67,21,0)
^^3^3^3040317^
"^DD",727.811,727.811,67,21,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.811,727.811,67,21,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.811,727.811,67,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.811,727.811,67,23,0)
^^4^4^3040317^
"^DD",727.811,727.811,67,23,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.811,727.811,67,23,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.811,727.811,67,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces (i.e. 
"^DD",727.811,727.811,67,23,4,0)
1^3010106^0) the 2nd piece is the Combat Vet End Date.
"^DD",727.811,727.811,67,"DT")
3040301
"^DD",727.811,727.811,68,0)
ENCOUNTER CV^F^^1;32^K:$L(X)>1!($L(X)<1) X
"^DD",727.811,727.811,68,3)
Answer must be 1 character in length.
"^DD",727.811,727.811,68,20,0)
^.3LA^^0
"^DD",727.811,727.811,68,21,0)
^^3^3^3040317^
"^DD",727.811,727.811,68,21,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.811,727.811,68,21,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.811,727.811,68,21,3,0)
2 to determine CV Status.
"^DD",727.811,727.811,68,23,0)
^^10^10^3040317^
"^DD",727.811,727.811,68,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.811,727.811,68,23,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.811,727.811,68,23,3,0)
2 to determine CV Status.   API returns three pieces (i.e. 1^3010106^0). 
"^DD",727.811,727.811,68,23,4,0)
The third piece returns:
"^DD",727.811,727.811,68,23,5,0)
 
"^DD",727.811,727.811,68,23,6,0)
1 - vet was eligible on date specified
"^DD",727.811,727.811,68,23,7,0)
0 - vet was not eligible on date specified
"^DD",727.811,727.811,68,23,8,0)
 
"^DD",727.811,727.811,68,23,9,0)
Based on these returns, the value for this field shall be Y =Yes, or 
"^DD",727.811,727.811,68,23,10,0)
'NULL' for 'NO'.
"^DD",727.811,727.811,68,"DT")
3040301
"^DD",727.811,727.811,69,0)
ROOM CLEANING TIME^F^^1;33^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,69,3)
Answer must be 1-4 characters in length.
"^DD",727.811,727.811,69,21,0)
^^5^5^3040317^
"^DD",727.811,727.811,69,21,1,0)
ROOM CLEANING TIME field shall contain the time (converted to 15-minute 
"^DD",727.811,727.811,69,21,2,0)
increments) required to clean the room.  Current practice is to assign 
"^DD",727.811,727.811,69,21,3,0)
the same time (2 15-minute increments) to all cases, no matter what the 
"^DD",727.811,727.811,69,21,4,0)
actual time was, divide by 2 if surgical staff was performing concurrent
"^DD",727.811,727.811,69,21,5,0)
surgical procedures.
"^DD",727.811,727.811,69,23,0)
^^9^9^3040317^
"^DD",727.811,727.811,69,23,1,0)
ROOM CLEANING TIME field shall contain the time (converted to 15-minute 
"^DD",727.811,727.811,69,23,2,0)
increments) required to clean the room.  Current practice is to assign 
"^DD",727.811,727.811,69,23,3,0)
the same time (2 15-minute increments) to all cases, no matter what the 
"^DD",727.811,727.811,69,23,4,0)
actual time was divide by 2 if concurrent surgery.  
"^DD",727.811,727.811,69,23,5,0)
 
"^DD",727.811,727.811,69,23,6,0)
This is derived from the Room Cleaning Time associated with the case for 
"^DD",727.811,727.811,69,23,7,0)
which the record is being created; in the OR CLEAN UP TIME field.  If the 
"^DD",727.811,727.811,69,23,8,0)
value in OR CLEAN UP TIME = 0 or null, the field is set to 2 (2 15-minute
"^DD",727.811,727.811,69,23,9,0)
increments). 
"^DD",727.811,727.811,69,"DT")
3040301
"^DD",727.811,727.811,70,0)
HOLDING AREA TIME^F^^1;34^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,70,3)
Answer must be 1-4 characters in length.
"^DD",727.811,727.811,70,21,0)
^^2^2^3040317^
"^DD",727.811,727.811,70,21,1,0)
HOLDING AREA TIME field shall contain the time (in 15-minute increments) 
"^DD",727.811,727.811,70,21,2,0)
that the the patient spent in the holding area.
"^DD",727.811,727.811,70,23,0)
^.001^7^7^3040317^^
"^DD",727.811,727.811,70,23,1,0)
HOLDING AREA TIME field shall contain the time (in 15-minute increments) 
"^DD",727.811,727.811,70,23,2,0)
that the the patient spent in the holding area, divide by 2 if doing 
"^DD",727.811,727.811,70,23,3,0)
clnical staff are doing concurrent surgeries.
"^DD",727.811,727.811,70,23,4,0)
 
"^DD",727.811,727.811,70,23,5,0)
This is derived by subtracting the TIME PT IN HOLD AREA from TIME PT IN OR
"^DD",727.811,727.811,70,23,6,0)
and converting the result into the number of 15-minute increments.  If the
"^DD",727.811,727.811,70,23,7,0)
TIME PT IN HOLD AREA = 0 or null, set the extract field to null.
"^DD",727.811,727.811,70,"DT")
3040301
"^DD",727.811,727.811,71,0)
NATIONAL PATIENT RECORD FLAG^F^^1;35^K:$L(X)>1!($L(X)<1) X
"^DD",727.811,727.811,71,3)
Answer must be 1 character in length.
"^DD",727.811,727.811,71,21,0)
^^7^7^3040317^
"^DD",727.811,727.811,71,21,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.811,727.811,71,21,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.811,727.811,71,21,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.811,727.811,71,21,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.811,727.811,71,21,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.811,727.811,71,21,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.811,727.811,71,21,7,0)
NULL.
"^DD",727.811,727.811,71,23,0)
^^6^6^3040317^
"^DD",727.811,727.811,71,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.811,727.811,71,23,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.811,727.811,71,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.811,727.811,71,23,4,0)
established at a National level. NATIONAL PATIENT RECORD FLAG is retrieved
"^DD",727.811,727.811,71,23,5,0)
via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is "Y  if the
"^DD",727.811,727.811,71,23,6,0)
Category I flag is present and active, otherwise it is NULL.
"^DD",727.811,727.811,71,"DT")
3040301
"^DD",727.812,727.812,9,0)
PLACEHOLDER^RF^^0;10^K:$L(X)>1!($L(X)<1) X
"^DD",727.812,727.812,9,3)
Answer must be 1 character in length.
"^DD",727.812,727.812,9,"DT")
3040301
"^DD",727.812,727.812,39,0)
PLACEHOLDER^F^^1;12^K:$L(X)>1!($L(X)<1) X
"^DD",727.812,727.812,39,3)
Answer must be 1 character in length.
"^DD",727.812,727.812,39,"DT")
3040301
"^DD",727.812,727.812,46,0)
DSS PRODUCT DEPARTMENT^F^^1;19^K:$L(X)>10!($L(X)<1) X
"^DD",727.812,727.812,46,.1)

"^DD",727.812,727.812,46,3)
Answer must be 1-10 characters in length
"^DD",727.812,727.812,46,21,0)
^.001^2^2^3040318^^
"^DD",727.812,727.812,46,21,1,0)
The nationally defined DSS Intermediate Department Number designated to 
"^DD",727.812,727.812,46,21,2,0)
the Mental care product.
"^DD",727.812,727.812,46,23,0)
^^12^12^3040318^
"^DD",727.812,727.812,46,23,1,0)
DSS PRODUCT DEPARTMENT field value is determined via the following 
"^DD",727.812,727.812,46,23,2,0)
process: The DSS Product Department and IP Number File # 727.6 is
"^DD",727.812,727.812,46,23,3,0)
populated via site specific HL7 messages generated by AAC extracts which
"^DD",727.812,727.812,46,23,4,0)
run on a monthly basis.  The file is then used by the DSS extract routines
"^DD",727.812,727.812,46,23,5,0)
to identify and to populate the DSS PRODUCT DEPARTMENT and DSS IP# fields
"^DD",727.812,727.812,46,23,6,0)
in the DSS extract files before transmitting them to AAC.
"^DD",727.812,727.812,46,23,7,0)
 
"^DD",727.812,727.812,46,23,8,0)
Using the combination of Feeder System, Feeder Location and Feeder Key as
"^DD",727.812,727.812,46,23,9,0)
an identifier for each individual record matches are resolved and the 
"^DD",727.812,727.812,46,23,10,0)
designations are made. If no match is found in file 727.6 an error
"^DD",727.812,727.812,46,23,11,0)
message is generated and a bulletin is triggered and sent to a DSS mail
"^DD",727.812,727.812,46,23,12,0)
group identifying the problem.
"^DD",727.812,727.812,46,"DT")
3040302
"^DD",727.812,727.812,50,0)
DSS IP #^NJ7,0^^1;23^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.812,727.812,50,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.812,727.812,50,21,0)
^.001^2^2^3040318^^^^
"^DD",727.812,727.812,50,21,1,0)
The nationally defined DSS Intermediate Product Number designated to the 
"^DD",727.812,727.812,50,21,2,0)
patient care product.
"^DD",727.812,727.812,50,23,0)
^^10^10^3041027^
"^DD",727.812,727.812,50,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.812,727.812,50,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.812,727.812,50,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.812,727.812,50,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.812,727.812,50,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.812,727.812,50,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.812,727.812,50,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.812,727.812,50,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.812,727.812,50,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.812,727.812,50,23,10,0)
group identifying the problem.
"^DD",727.812,727.812,50,"DT")
3040301
"^DD",727.812,727.812,51,0)
ENROLLMENT PRIORITY^F^^1;24^K:$L(X)>2!($L(X)<1) X
"^DD",727.812,727.812,51,3)
Answer must be 1-2 characters in length.
"^DD",727.812,727.812,51,21,0)
^^2^2^3040317^
"^DD",727.812,727.812,51,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment piority group and the 
"^DD",727.812,727.812,51,21,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.812,727.812,51,23,0)
^^20^20^3041027^
"^DD",727.812,727.812,51,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.812,727.812,51,23,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11. 
"^DD",727.812,727.812,51,23,3,0)
 
"^DD",727.812,727.812,51,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.812,727.812,51,23,5,0)
 
"^DD",727.812,727.812,51,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.812,727.812,51,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.812,727.812,51,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.812,727.812,51,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.812,727.812,51,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.812,727.812,51,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.812,727.812,51,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.812,727.812,51,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.812,727.812,51,23,14,0)
 
"^DD",727.812,727.812,51,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.812,727.812,51,23,16,0)
 
"^DD",727.812,727.812,51,23,17,0)
                                'a' FOR 1 
"^DD",727.812,727.812,51,23,18,0)
                                'c' FOR 3 
"^DD",727.812,727.812,51,23,19,0)
                                'e' FOR 5 
"^DD",727.812,727.812,51,23,20,0)
                                'g' FOR 7   
"^DD",727.812,727.812,51,"DT")
3040226
"^DD",727.812,727.812,52,0)
USER ENROLLEE^F^^1;25^K:$L(X)>1!($L(X)<1) X
"^DD",727.812,727.812,52,3)
Answer must be 1 character in length.
"^DD",727.812,727.812,52,21,0)
^^4^4^3040317^
"^DD",727.812,727.812,52,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.812,727.812,52,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.812,727.812,52,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.812,727.812,52,21,4,0)
year's value is contained. 
"^DD",727.812,727.812,52,"DT")
3040226
"^DD",727.812,727.812,53,0)
DIVISION^F^^1;26^K:$L(X)>3!($L(X)<1) X
"^DD",727.812,727.812,53,3)
Answer must be 1-3 characters in length.
"^DD",727.812,727.812,53,21,0)
^.001^4^4^3040922^^^^
"^DD",727.812,727.812,53,21,1,0)
The medical center division associated with the extract data. For DSS
"^DD",727.812,727.812,53,21,2,0)
purposes, this must correspond to the labor pool that generated the 
"^DD",727.812,727.812,53,21,3,0)
workload. The division identifier is taken from the DSS DIVISION 
"^DD",727.812,727.812,53,21,4,0)
IDENTIFIER file (#727.3).
"^DD",727.812,727.812,53,23,0)
^.001^11^11^3040922^^^^
"^DD",727.812,727.812,53,23,1,0)
The DIVISION field is then derived as follows:
"^DD",727.812,727.812,53,23,2,0)
 
"^DD",727.812,727.812,53,23,3,0)
(1) A pointer to the INSTITUTION file (#4) is obtained using the pointer
"^DD",727.812,727.812,53,23,4,0)
to file #200. This is taken from the DIVISION field (#.01) of the first
"^DD",727.812,727.812,53,23,5,0)
sub-record of the DIVISION field (#16), sub-file #200.02. 
"^DD",727.812,727.812,53,23,6,0)
 
"^DD",727.812,727.812,53,23,7,0)
(2) A record in the MEDICAL CENTER DIVISION file (#40.8) which points 
"^DD",727.812,727.812,53,23,8,0)
to the same file #4 record
"^DD",727.812,727.812,53,23,9,0)
 
"^DD",727.812,727.812,53,23,10,0)
(3) The IDENTIFIER field (#1) of the DSS DIVISION IDENTIFIER file 
"^DD",727.812,727.812,53,23,11,0)
(#727.3) record which points to the same Medical Center Division.
"^DD",727.812,727.812,53,"DT")
3040922
"^DD",727.812,727.812,54,0)
PATIENT TYPE^F^^1;27^K:$L(X)>2!($L(X)<1) X
"^DD",727.812,727.812,54,3)
Answer must be 1-2 characters in length.
"^DD",727.812,727.812,54,21,0)
^^3^3^3040317^
"^DD",727.812,727.812,54,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.812,727.812,54,21,2,0)
at a VA facility. It is determined by the TYPE field of the PATIENT 
"^DD",727.812,727.812,54,21,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391.
"^DD",727.812,727.812,54,23,0)
^^17^17^3040317^
"^DD",727.812,727.812,54,23,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.812,727.812,54,23,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT 
"^DD",727.812,727.812,54,23,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391. Every 
"^DD",727.812,727.812,54,23,4,0)
patient added to the system must have a TYPE specified. It best 
"^DD",727.812,727.812,54,23,5,0)
classifies a patient as one of the following values listed below.  
"^DD",727.812,727.812,54,23,6,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.812,727.812,54,23,7,0)
 
"^DD",727.812,727.812,54,23,8,0)
AC= ACTIVE DUTY
"^DD",727.812,727.812,54,23,9,0)
AL= ALLIED VETERAN
"^DD",727.812,727.812,54,23,10,0)
CO= COLLATERAL
"^DD",727.812,727.812,54,23,11,0)
EM= EMPLOYEE
"^DD",727.812,727.812,54,23,12,0)
IN= INELIGIBLE
"^DD",727.812,727.812,54,23,13,0)
MI= MILITARY RETIREE
"^DD",727.812,727.812,54,23,14,0)
NO= NON-VETERAN (OTHER)
"^DD",727.812,727.812,54,23,15,0)
NS= NSC VETERAN
"^DD",727.812,727.812,54,23,16,0)
SC= SC VETERAN
"^DD",727.812,727.812,54,23,17,0)
TR= TRICARE
"^DD",727.812,727.812,54,"DT")
3040226
"^DD",727.812,727.812,55,0)
CV STATUS ELIGIBILITY^F^^1;28^K:$L(X)>1!($L(X)<1) X
"^DD",727.812,727.812,55,3)
Answer must be 1 character in length.
"^DD",727.812,727.812,55,21,0)
^.001^3^3^3040318^^^
"^DD",727.812,727.812,55,21,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.812,727.812,55,21,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.812,727.812,55,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.812,727.812,55,23,0)
^^11^11^3040318^
"^DD",727.812,727.812,55,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.812,727.812,55,23,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.812,727.812,55,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces i.e. 
"^DD",727.812,727.812,55,23,4,0)
1^3010106^0, the first piece is resolved as follows.
"^DD",727.812,727.812,55,23,5,0)
 
"^DD",727.812,727.812,55,23,6,0)
 1 - qualifies as a CV
"^DD",727.812,727.812,55,23,7,0)
 0 - does not qualify as a CV
"^DD",727.812,727.812,55,23,8,0)
-1 - bad DFN or date
"^DD",727.812,727.812,55,23,9,0)
 
"^DD",727.812,727.812,55,23,10,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES', 
"^DD",727.812,727.812,55,23,11,0)
E for 'ELIGIBILITY EXPIRED' or 'NULL' for 'NOT ELIGIBLE'.
"^DD",727.812,727.812,55,"DT")
3040317
"^DD",727.812,727.812,56,0)
CV ELIGIBILITY END DATE^F^^1;29^K:$L(X)>8!($L(X)<1) X
"^DD",727.812,727.812,56,3)
Answer must be 1-8 characters in length.
"^DD",727.812,727.812,56,21,0)
^^3^3^3040317^
"^DD",727.812,727.812,56,21,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.812,727.812,56,21,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.812,727.812,56,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.812,727.812,56,23,0)
^^4^4^3040317^
"^DD",727.812,727.812,56,23,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.812,727.812,56,23,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.812,727.812,56,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces (i.e. 
"^DD",727.812,727.812,56,23,4,0)
1^3010106^0) the 2nd piece is the Combat Vet End Date.
"^DD",727.812,727.812,56,"DT")
3040226
"^DD",727.812,727.812,57,0)
ENCOUNTER CV^F^^1;30^K:$L(X)>1!($L(X)<1) X
"^DD",727.812,727.812,57,3)
Answer must be 1 character in length.
"^DD",727.812,727.812,57,20,0)
^.3LA^1^1
"^DD",727.812,727.812,57,20,1,0)
\
"^DD",727.812,727.812,57,21,0)
^^3^3^3040317^
"^DD",727.812,727.812,57,21,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.812,727.812,57,21,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.812,727.812,57,21,3,0)
2 to determine CV Status.
"^DD",727.812,727.812,57,23,0)
^.001^10^10^3040317^^
"^DD",727.812,727.812,57,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.812,727.812,57,23,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.812,727.812,57,23,3,0)
2 to determine CV Status.   API returns three pieces (i.e. 1^3010106^0). 
"^DD",727.812,727.812,57,23,4,0)
The third piece returns:
"^DD",727.812,727.812,57,23,5,0)
 
"^DD",727.812,727.812,57,23,6,0)
1 - vet was eligible on date specified
"^DD",727.812,727.812,57,23,7,0)
0 - vet was not eligible on date specified
"^DD",727.812,727.812,57,23,8,0)
 
"^DD",727.812,727.812,57,23,9,0)
Based on these returns, the value for this field shall be Y =Yes, or 
"^DD",727.812,727.812,57,23,10,0)
'NULL' for 'NO'.
"^DD",727.812,727.812,57,"DT")
3040226
"^DD",727.812,727.812,58,0)
NATIONAL PATIENT RECORD FLAG^F^^1;31^K:$L(X)>1!($L(X)<1) X
"^DD",727.812,727.812,58,3)
Answer must be 1 character in length.
"^DD",727.812,727.812,58,21,0)
^^7^7^3040317^
"^DD",727.812,727.812,58,21,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.812,727.812,58,21,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.812,727.812,58,21,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.812,727.812,58,21,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.812,727.812,58,21,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.812,727.812,58,21,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.812,727.812,58,21,7,0)
NULL.
"^DD",727.812,727.812,58,23,0)
^^7^7^3040317^
"^DD",727.812,727.812,58,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.812,727.812,58,23,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.812,727.812,58,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.812,727.812,58,23,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.812,727.812,58,23,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.812,727.812,58,23,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.812,727.812,58,23,7,0)
NULL.
"^DD",727.812,727.812,58,"DT")
3040226
"^DD",727.813,727.813,23,0)
DSS PRODUCT DEPARTMENT^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.813,727.813,23,.1)

"^DD",727.813,727.813,23,3)
Answer must be 1-10 characters in length.
"^DD",727.813,727.813,23,21,0)
^.001^2^2^3040318^^
"^DD",727.813,727.813,23,21,1,0)
The nationally defined DSS Intermediate Department Number designated to 
"^DD",727.813,727.813,23,21,2,0)
the Laboratory care product.
"^DD",727.813,727.813,23,23,0)
^^12^12^3040318^
"^DD",727.813,727.813,23,23,1,0)
DSS PRODUCT DEPARTMENT field value is determined via the following 
"^DD",727.813,727.813,23,23,2,0)
process: The DSS Product Department and IP Number File # 727.6 is
"^DD",727.813,727.813,23,23,3,0)
populated via site specific HL7 messages generated by AAC extracts which
"^DD",727.813,727.813,23,23,4,0)
run on a monthly basis.  The file is then used by the DSS extract routines
"^DD",727.813,727.813,23,23,5,0)
to identify and to populate the DSS PRODUCT DEPARTMENT and DSS IP# fields
"^DD",727.813,727.813,23,23,6,0)
in the DSS extract files before transmitting them to AAC.
"^DD",727.813,727.813,23,23,7,0)
 
"^DD",727.813,727.813,23,23,8,0)
Using the combination of Feeder System, Feeder Location and Feeder Key as
"^DD",727.813,727.813,23,23,9,0)
an identifier for each individual record matches are resolved and the 
"^DD",727.813,727.813,23,23,10,0)
designations are made. If no match is found in file 727.6 an error
"^DD",727.813,727.813,23,23,11,0)
message is generated and a bulletin is triggered and sent to a DSS mail
"^DD",727.813,727.813,23,23,12,0)
group identifying the problem.
"^DD",727.813,727.813,23,"DT")
3040302
"^DD",727.813,727.813,36,0)
DSS IP #^NJ7,0^^1;15^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.813,727.813,36,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.813,727.813,36,21,0)
^.001^2^2^3040318^^
"^DD",727.813,727.813,36,21,1,0)
The nationally defined DSS Intermediate Product Number designated to the 
"^DD",727.813,727.813,36,21,2,0)
patient care product.
"^DD",727.813,727.813,36,23,0)
^.001^10^10^3041027^^
"^DD",727.813,727.813,36,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.813,727.813,36,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.813,727.813,36,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.813,727.813,36,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.813,727.813,36,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.813,727.813,36,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.813,727.813,36,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.813,727.813,36,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.813,727.813,36,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.813,727.813,36,23,10,0)
group identifying the problem. 
"^DD",727.813,727.813,36,"DT")
3031113
"^DD",727.813,727.813,37,0)
ORDERING PROVIDER PERSON CLASS^F^^1;16^K:$L(X)>7!($L(X)<1) X
"^DD",727.813,727.813,37,3)
Answer must be 1-7 characters in length.
"^DD",727.813,727.813,37,21,0)
^^3^3^3040317^
"^DD",727.813,727.813,37,21,1,0)
The ORDERING PROVIDER PERSON CLASS is derived via the Laboratory File # 63
"^DD",727.813,727.813,37,21,2,0)
which points to the New Person File # 200 for provider. File #200 points 
"^DD",727.813,727.813,37,21,3,0)
to the Person Class File #8932.1 for Person Class.  
"^DD",727.813,727.813,37,23,0)
^^3^3^3040317^
"^DD",727.813,727.813,37,23,1,0)
The ORDERING PROVIDER PERSON CLASS is derived via the Laboratory File # 63
"^DD",727.813,727.813,37,23,2,0)
which points to the New Person File # 200 for provider. File #200 points 
"^DD",727.813,727.813,37,23,3,0)
to the Person Class File #8932.1 for Person Class.  
"^DD",727.813,727.813,37,"DT")
3040303
"^DD",727.814,727.814,24,0)
DSS PRODUCT DEPARTMENT^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.814,727.814,24,.1)

"^DD",727.814,727.814,24,3)
Answer must be 1-10 characters in length
"^DD",727.814,727.814,24,21,0)
^.001^2^2^3040318^^^
"^DD",727.814,727.814,24,21,1,0)
The nationally definded DSS Intermediate Department Number designated to 
"^DD",727.814,727.814,24,21,2,0)
the Radiology care product.
"^DD",727.814,727.814,24,23,0)
^^12^12^3040318^
"^DD",727.814,727.814,24,23,1,0)
DSS PRODUCT DEPARTMENT field value is determined via the following 
"^DD",727.814,727.814,24,23,2,0)
process: The DSS Product Department and IP Number File # 727.6 is
"^DD",727.814,727.814,24,23,3,0)
populated via site specific HL7 messages generated by AAC extracts which
"^DD",727.814,727.814,24,23,4,0)
run on a monthly basis.  The file is then used by the DSS extract routines
"^DD",727.814,727.814,24,23,5,0)
to identify and to populate the DSS PRODUCT DEPARTMENT and DSS IP# fields
"^DD",727.814,727.814,24,23,6,0)
in the DSS extract files before transmitting them to AAC.
"^DD",727.814,727.814,24,23,7,0)
 
"^DD",727.814,727.814,24,23,8,0)
Using the combination of Feeder System, Feeder Location and Feeder Key as 
"^DD",727.814,727.814,24,23,9,0)
an identifier for each individual record matches are resolved and the 
"^DD",727.814,727.814,24,23,10,0)
designations are made. If no match is found in file 727.6 an error 
"^DD",727.814,727.814,24,23,11,0)
message is generated and a bulletin is triggered and sent to a DSS mail
"^DD",727.814,727.814,24,23,12,0)
group identifying the problem.
"^DD",727.814,727.814,24,"DT")
3040302
"^DD",727.814,727.814,37,0)
DSS IP #^NJ7,0^^1;15^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.814,727.814,37,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.814,727.814,37,21,0)
^.001^2^2^3040318^^^
"^DD",727.814,727.814,37,21,1,0)
The nationally defined DSS Intermediate Product Number designated to the 
"^DD",727.814,727.814,37,21,2,0)
patient care product.
"^DD",727.814,727.814,37,23,0)
^.001^10^10^3041027^^
"^DD",727.814,727.814,37,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.814,727.814,37,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.814,727.814,37,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.814,727.814,37,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.814,727.814,37,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.814,727.814,37,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.814,727.814,37,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.814,727.814,37,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.814,727.814,37,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.814,727.814,37,23,10,0)
group identifying the problem. 
"^DD",727.814,727.814,37,"DT")
3031113
"^DD",727.814,727.814,38,0)
ORDERING PROVIDER PERSON CLASS^F^^1;16^K:$L(X)>7!($L(X)<1) X
"^DD",727.814,727.814,38,3)
Answer must be 1-7 characters in length.
"^DD",727.814,727.814,38,21,0)
^^7^7^3041027^
"^DD",727.814,727.814,38,21,1,0)
ORDERING PROVIDER PERSON CLASS shall be seven characters in length and 
"^DD",727.814,727.814,38,21,2,0)
will hold the VA code associated with the active person class of the 
"^DD",727.814,727.814,38,21,3,0)
Ordering Provider. The format of the field shall be V999999, where the 
"^DD",727.814,727.814,38,21,4,0)
999999 will be six numeric digits. ORDERING PROVIDER PERSON CLASS value 
"^DD",727.814,727.814,38,21,5,0)
is based on the REQUESTING PHYSICIAN field (#13). Once this is located,
"^DD",727.814,727.814,38,21,6,0)
then the New Person file (#200) points to the Person Class file (#8932.1)
"^DD",727.814,727.814,38,21,7,0)
for person class.  
"^DD",727.814,727.814,38,23,0)
^.001^7^7^3041027^^
"^DD",727.814,727.814,38,23,1,0)
ORDERING PROVIDER PERSON CLASS shall be seven characters in length and 
"^DD",727.814,727.814,38,23,2,0)
will hold the VA code associated with the active person class of the 
"^DD",727.814,727.814,38,23,3,0)
Ordering Provider. The format of the field shall be V999999, where the 
"^DD",727.814,727.814,38,23,4,0)
999999 will be six numeric digits.   ORDERING PROVIDER PERSON CLASS value 
"^DD",727.814,727.814,38,23,5,0)
is based on the REQUESTING PHYSICIAN field (#13). Once this is located,
"^DD",727.814,727.814,38,23,6,0)
then the New Person file (#200) points to the Person Class file (#8932.1)
"^DD",727.814,727.814,38,23,7,0)
for person class.  
"^DD",727.814,727.814,38,"DT")
3040301
"^DD",727.815,727.815,43,0)
DSS PRODUCT DEPARTMENT^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.815,727.815,43,.1)

"^DD",727.815,727.815,43,3)
Answer must be 1-10 characters in length
"^DD",727.815,727.815,43,21,0)
^^1^1^3040921^
"^DD",727.815,727.815,43,21,1,0)
The DSS Department Code for the patient care product.
"^DD",727.815,727.815,43,23,0)
^.001^3^3^3040921^^^^
"^DD",727.815,727.815,43,23,1,0)
Obtained from the DSS UNIT field (#6), EVENT CAPTURE PATIENT file
"^DD",727.815,727.815,43,23,2,0)
(#721) which is a pointer to the UNIT NUMBER field (#4) of the DSS UNIT
"^DD",727.815,727.815,43,23,3,0)
file (#724).
"^DD",727.815,727.815,43,"DT")
3040302
"^DD",727.815,727.815,58,0)
PLACEHOLDER^F^^1;17^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,58,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,58,"DT")
3040226
"^DD",727.815,727.815,75,0)
DSS IP #^NJ7,0^^1;34^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.815,727.815,75,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",727.815,727.815,75,21,0)
^^2^2^3040317^
"^DD",727.815,727.815,75,21,1,0)
The nationally defined DSS Intermediate Product Number designated to 
"^DD",727.815,727.815,75,21,2,0)
the Event Capture care product
"^DD",727.815,727.815,75,23,0)
^^10^10^3041027^
"^DD",727.815,727.815,75,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.815,727.815,75,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.815,727.815,75,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.815,727.815,75,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.815,727.815,75,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.815,727.815,75,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.815,727.815,75,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.815,727.815,75,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.815,727.815,75,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.815,727.815,75,23,10,0)
group identifying the problem.
"^DD",727.815,727.815,75,"DT")
3040225
"^DD",727.815,727.815,76,0)
ENROLLMENT PRIORITY^F^^1;35^K:$L(X)>2!($L(X)<1) X
"^DD",727.815,727.815,76,3)
Answer must be 1-2 characters in length.
"^DD",727.815,727.815,76,21,0)
^^2^2^3040317^
"^DD",727.815,727.815,76,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment piority group and the 
"^DD",727.815,727.815,76,21,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.815,727.815,76,23,0)
^^20^20^3041027^
"^DD",727.815,727.815,76,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.815,727.815,76,23,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11. 
"^DD",727.815,727.815,76,23,3,0)
 
"^DD",727.815,727.815,76,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.815,727.815,76,23,5,0)
 
"^DD",727.815,727.815,76,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.815,727.815,76,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.815,727.815,76,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.815,727.815,76,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.815,727.815,76,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.815,727.815,76,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.815,727.815,76,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.815,727.815,76,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.815,727.815,76,23,14,0)
 
"^DD",727.815,727.815,76,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.815,727.815,76,23,16,0)
 
"^DD",727.815,727.815,76,23,17,0)
                                'a' FOR 1 
"^DD",727.815,727.815,76,23,18,0)
                                'c' FOR 3 
"^DD",727.815,727.815,76,23,19,0)
                                'e' FOR 5 
"^DD",727.815,727.815,76,23,20,0)
                                'g' FOR 7   
"^DD",727.815,727.815,76,"DT")
3040226
"^DD",727.815,727.815,77,0)
USER ENROLLEE^F^^1;36^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,77,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,77,21,0)
^^4^4^3040317^
"^DD",727.815,727.815,77,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.815,727.815,77,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.815,727.815,77,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.815,727.815,77,21,4,0)
year's value is contained. 
"^DD",727.815,727.815,77,"DT")
3040226
"^DD",727.815,727.815,78,0)
PATIENT TYPE^F^^1;37^K:$L(X)>2!($L(X)<1) X
"^DD",727.815,727.815,78,3)
Answer must be 1-2 characters in length.
"^DD",727.815,727.815,78,21,0)
^^3^3^3040317^
"^DD",727.815,727.815,78,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.815,727.815,78,21,2,0)
at a VA facility. It is determined by the TYPE field of the PATIENT 
"^DD",727.815,727.815,78,21,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391.
"^DD",727.815,727.815,78,23,0)
^^17^17^3040317^
"^DD",727.815,727.815,78,23,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.815,727.815,78,23,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT 
"^DD",727.815,727.815,78,23,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391. Every 
"^DD",727.815,727.815,78,23,4,0)
patient added to the system must have a TYPE specified. It best 
"^DD",727.815,727.815,78,23,5,0)
classifies a patient as one of the following values listed below.  
"^DD",727.815,727.815,78,23,6,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.815,727.815,78,23,7,0)
 
"^DD",727.815,727.815,78,23,8,0)
AC= ACTIVE DUTY
"^DD",727.815,727.815,78,23,9,0)
AL= ALLIED VETERAN
"^DD",727.815,727.815,78,23,10,0)
CO= COLLATERAL
"^DD",727.815,727.815,78,23,11,0)
EM= EMPLOYEE
"^DD",727.815,727.815,78,23,12,0)
IN= INELIGIBLE
"^DD",727.815,727.815,78,23,13,0)
MI= MILITARY RETIREE
"^DD",727.815,727.815,78,23,14,0)
NO= NON-VETERAN (OTHER)
"^DD",727.815,727.815,78,23,15,0)
NS= NSC VETERAN
"^DD",727.815,727.815,78,23,16,0)
SC= SC VETERAN
"^DD",727.815,727.815,78,23,17,0)
TR= TRICARE
"^DD",727.815,727.815,78,"DT")
3040226
"^DD",727.815,727.815,79,0)
CV STATUS ELIGIBILITY^F^^1;38^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,79,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,79,21,0)
^.001^3^3^3041104^^^^
"^DD",727.815,727.815,79,21,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.815,727.815,79,21,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.815,727.815,79,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.815,727.815,79,23,0)
^.001^11^11^3041104^^
"^DD",727.815,727.815,79,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.815,727.815,79,23,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.815,727.815,79,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces i.e. 
"^DD",727.815,727.815,79,23,4,0)
1^3010106^0, the first piece is resolved as follows.
"^DD",727.815,727.815,79,23,5,0)
 
"^DD",727.815,727.815,79,23,6,0)
 1 - qualifies as a CV
"^DD",727.815,727.815,79,23,7,0)
 0 - does not qualify as a CV
"^DD",727.815,727.815,79,23,8,0)
-1 - bad DFN or date
"^DD",727.815,727.815,79,23,9,0)
 
"^DD",727.815,727.815,79,23,10,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES', 
"^DD",727.815,727.815,79,23,11,0)
E for 'ELIGIBILITY EXPIRED' or 'NULL' for 'NOT ELIGIBLE'.
"^DD",727.815,727.815,79,"DT")
3040226
"^DD",727.815,727.815,80,0)
CV ELIGIBILITY END DATE^F^^2;1^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,80,3)
Answer must be 1-8 characters in length.
"^DD",727.815,727.815,80,21,0)
^^3^3^3040317^
"^DD",727.815,727.815,80,21,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.815,727.815,80,21,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.815,727.815,80,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.815,727.815,80,23,0)
^^4^4^3040317^
"^DD",727.815,727.815,80,23,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.815,727.815,80,23,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.815,727.815,80,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces (i.e. 
"^DD",727.815,727.815,80,23,4,0)
1^3010106^0) the 2nd piece is the Combat Vet End Date.
"^DD",727.815,727.815,80,"DT")
3040226
"^DD",727.815,727.815,81,0)
ENCOUNTER CV^F^^2;2^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,81,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,81,21,0)
^^3^3^3040317^
"^DD",727.815,727.815,81,21,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.815,727.815,81,21,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.815,727.815,81,21,3,0)
2 to determine CV Status.
"^DD",727.815,727.815,81,23,0)
^^10^10^3040317^
"^DD",727.815,727.815,81,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.815,727.815,81,23,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.815,727.815,81,23,3,0)
2 to determine CV Status.   API returns three pieces (i.e. 1^3010106^0). 
"^DD",727.815,727.815,81,23,4,0)
The third piece returns:
"^DD",727.815,727.815,81,23,5,0)
 
"^DD",727.815,727.815,81,23,6,0)
1 - vet was eligible on date specified
"^DD",727.815,727.815,81,23,7,0)
0 - vet was not eligible on date specified
"^DD",727.815,727.815,81,23,8,0)
 
"^DD",727.815,727.815,81,23,9,0)
Based on these returns, the value for this field shall be Y =Yes, or 
"^DD",727.815,727.815,81,23,10,0)
'NULL' for 'NO'.
"^DD",727.815,727.815,81,"DT")
3040226
"^DD",727.815,727.815,82,0)
NATIONAL PATIENT RECORD FLAG^F^^2;3^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,82,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,82,21,0)
^^7^7^3040317^
"^DD",727.815,727.815,82,21,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.815,727.815,82,21,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.815,727.815,82,21,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.815,727.815,82,21,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.815,727.815,82,21,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.815,727.815,82,21,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.815,727.815,82,21,7,0)
NULL.
"^DD",727.815,727.815,82,23,0)
^^7^7^3040317^
"^DD",727.815,727.815,82,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.815,727.815,82,23,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.815,727.815,82,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.815,727.815,82,23,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.815,727.815,82,23,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.815,727.815,82,23,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.815,727.815,82,23,7,0)
NULL.
"^DD",727.815,727.815,82,"DT")
3040226
"^DD",727.819,727.819,28,0)
DSS PRODUCT DEPARTMENT^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.819,727.819,28,.1)

"^DD",727.819,727.819,28,3)
Answer must be 1-10 characters in length
"^DD",727.819,727.819,28,21,0)
^.001^2^2^3040318^^^^
"^DD",727.819,727.819,28,21,1,0)
The nationally defined DSS Intermediate Department Number designated to 
"^DD",727.819,727.819,28,21,2,0)
the Pharmacy care product.
"^DD",727.819,727.819,28,23,0)
^^12^12^3040318^
"^DD",727.819,727.819,28,23,1,0)
DSS PRODUCT DEPARTMENT field value is determined via the following 
"^DD",727.819,727.819,28,23,2,0)
process: The DSS Product Department and IP Number File # 727.6 is
"^DD",727.819,727.819,28,23,3,0)
populated via site specific HL7 messages generated by AAC extracts which
"^DD",727.819,727.819,28,23,4,0)
run on a monthly basis.  The file is then used by the DSS extract routines
"^DD",727.819,727.819,28,23,5,0)
to identify and to populate the DSS PRODUCT DEPARTMENT and DSS IP# fields
"^DD",727.819,727.819,28,23,6,0)
in the DSS extract files before transmitting them to AAC.
"^DD",727.819,727.819,28,23,7,0)
 
"^DD",727.819,727.819,28,23,8,0)
Using the combination of Feeder System, Feeder Location and Feeder Key as
"^DD",727.819,727.819,28,23,9,0)
an identifier for each individual record matches are resolved and the 
"^DD",727.819,727.819,28,23,10,0)
designations are made.. If no match is found in file 727.6 an error
"^DD",727.819,727.819,28,23,11,0)
message is generated and a bulletin is triggered and sent to a DSS mail
"^DD",727.819,727.819,28,23,12,0)
group identifying the problem.
"^DD",727.819,727.819,28,"DT")
3040302
"^DD",727.819,727.819,61,0)
PLACEHOLDER^F^^1;35^K:$L(X)>1!($L(X)<1) X
"^DD",727.819,727.819,61,.1)

"^DD",727.819,727.819,61,3)
Answer must be 1 character in length
"^DD",727.819,727.819,61,"DT")
3040301
"^DD",727.819,727.819,72,0)
DSS IP #^NJ7,0^^2;9^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.819,727.819,72,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.819,727.819,72,21,0)
^^2^2^3040318^
"^DD",727.819,727.819,72,21,1,0)
The nationally defined DSS Intermediate Product Number designated to the 
"^DD",727.819,727.819,72,21,2,0)
patient care product.
"^DD",727.819,727.819,72,23,0)
^.001^10^10^3041027^^
"^DD",727.819,727.819,72,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.819,727.819,72,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.819,727.819,72,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.819,727.819,72,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.819,727.819,72,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.819,727.819,72,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.819,727.819,72,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.819,727.819,72,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.819,727.819,72,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.819,727.819,72,23,10,0)
group identifying the problem. 
"^DD",727.819,727.819,72,"DT")
3031113
"^DD",727.819,727.819,73,0)
ENROLLMENT PRIORITY^F^^2;10^K:$L(X)>2!($L(X)<1) X
"^DD",727.819,727.819,73,3)
Answer must be 1-2 characters in length.
"^DD",727.819,727.819,73,21,0)
^.001^2^2^3041027^^^
"^DD",727.819,727.819,73,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment piority group and the 
"^DD",727.819,727.819,73,21,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.819,727.819,73,23,0)
^.001^20^20^3041027^^
"^DD",727.819,727.819,73,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.819,727.819,73,23,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11. 
"^DD",727.819,727.819,73,23,3,0)
 
"^DD",727.819,727.819,73,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.819,727.819,73,23,5,0)
 
"^DD",727.819,727.819,73,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.819,727.819,73,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.819,727.819,73,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.819,727.819,73,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.819,727.819,73,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.819,727.819,73,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.819,727.819,73,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.819,727.819,73,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.819,727.819,73,23,14,0)
 
"^DD",727.819,727.819,73,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.819,727.819,73,23,16,0)
 
"^DD",727.819,727.819,73,23,17,0)
                                'a' FOR 1 
"^DD",727.819,727.819,73,23,18,0)
                                'c' FOR 3 
"^DD",727.819,727.819,73,23,19,0)
                                'e' FOR 5 
"^DD",727.819,727.819,73,23,20,0)
                                'g' FOR 7   
"^DD",727.819,727.819,73,"DT")
3040226
"^DD",727.819,727.819,74,0)
USER ENROLLEE^F^^2;11^K:$L(X)>1!($L(X)<1) X
"^DD",727.819,727.819,74,3)
Answer must be 1 character in length.
"^DD",727.819,727.819,74,21,0)
^^4^4^3040317^
"^DD",727.819,727.819,74,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.819,727.819,74,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.819,727.819,74,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.819,727.819,74,21,4,0)
year's value is contained. 
"^DD",727.819,727.819,74,"DT")
3040226
"^DD",727.819,727.819,75,0)
PATIENT TYPE^F^^2;12^K:$L(X)>2!($L(X)<1) X
"^DD",727.819,727.819,75,3)
Answer must be 1-2 characters in length.
"^DD",727.819,727.819,75,21,0)
^^3^3^3040317^
"^DD",727.819,727.819,75,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.819,727.819,75,21,2,0)
at a VA facility. It is determined by the TYPE field of the PATIENT 
"^DD",727.819,727.819,75,21,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391.
"^DD",727.819,727.819,75,23,0)
^^17^17^3040317^
"^DD",727.819,727.819,75,23,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.819,727.819,75,23,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT 
"^DD",727.819,727.819,75,23,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391. Every 
"^DD",727.819,727.819,75,23,4,0)
patient added to the system must have a TYPE specified. It best 
"^DD",727.819,727.819,75,23,5,0)
classifies a patient as one of the following values listed below.  
"^DD",727.819,727.819,75,23,6,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.819,727.819,75,23,7,0)
 
"^DD",727.819,727.819,75,23,8,0)
AC= ACTIVE DUTY
"^DD",727.819,727.819,75,23,9,0)
AL= ALLIED VETERAN
"^DD",727.819,727.819,75,23,10,0)
CO= COLLATERAL
"^DD",727.819,727.819,75,23,11,0)
EM= EMPLOYEE
"^DD",727.819,727.819,75,23,12,0)
IN= INELIGIBLE
"^DD",727.819,727.819,75,23,13,0)
MI= MILITARY RETIREE
"^DD",727.819,727.819,75,23,14,0)
NO= NON-VETERAN (OTHER)
"^DD",727.819,727.819,75,23,15,0)
NS= NSC VETERAN
"^DD",727.819,727.819,75,23,16,0)
SC= SC VETERAN
"^DD",727.819,727.819,75,23,17,0)
TR= TRICARE
"^DD",727.819,727.819,75,"DT")
3040226
"^DD",727.819,727.819,76,0)
CV STATUS ELIGIBILITY^F^^2;13^K:$L(X)>1!($L(X)<1) X
"^DD",727.819,727.819,76,3)
Answer must be 1 character in length.
"^DD",727.819,727.819,76,21,0)
^.001^3^3^3040318^^^
"^DD",727.819,727.819,76,21,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.819,727.819,76,21,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.819,727.819,76,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.819,727.819,76,23,0)
^^11^11^3040318^
"^DD",727.819,727.819,76,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.819,727.819,76,23,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.819,727.819,76,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces i.e. 
"^DD",727.819,727.819,76,23,4,0)
1^3010106^0, the first piece is resolved as follows.
"^DD",727.819,727.819,76,23,5,0)
 
"^DD",727.819,727.819,76,23,6,0)
 1 - qualifies as a CV
"^DD",727.819,727.819,76,23,7,0)
 0 - does not qualify as a CV
"^DD",727.819,727.819,76,23,8,0)
-1 - bad DFN or date
"^DD",727.819,727.819,76,23,9,0)
 
"^DD",727.819,727.819,76,23,10,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES', 
"^DD",727.819,727.819,76,23,11,0)
E for 'ELIGIBILITY EXPIRED' or 'NULL' for 'NOT ELIGIBLE'.
"^DD",727.819,727.819,76,"DT")
3040226
"^DD",727.819,727.819,77,0)
CV ELIGIBILITY END DATE^F^^2;14^K:$L(X)>8!($L(X)<1) X
"^DD",727.819,727.819,77,3)
Answer must be 1-8 characters in length.
"^DD",727.819,727.819,77,21,0)
^^3^3^3040317^
"^DD",727.819,727.819,77,21,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.819,727.819,77,21,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.819,727.819,77,21,3,0)
Patient File #2 to determine CV Status.  
"^DD",727.819,727.819,77,23,0)
^^4^4^3040317^
"^DD",727.819,727.819,77,23,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.819,727.819,77,23,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.819,727.819,77,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces (i.e. 
"^DD",727.819,727.819,77,23,4,0)
1^3010106^0) the 2nd piece is the Combat Vet End Date.
"^DD",727.819,727.819,77,"DT")
3040226
"^DD",727.819,727.819,78,0)
ENCOUNTER CV^F^^2;15^K:$L(X)>1!($L(X)<1) X
"^DD",727.819,727.819,78,3)
Answer must be 1 character in length.
"^DD",727.819,727.819,78,21,0)
^^3^3^3040317^
"^DD",727.819,727.819,78,21,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.819,727.819,78,21,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.819,727.819,78,21,3,0)
2 to determine CV Status.
"^DD",727.819,727.819,78,23,0)
^^10^10^3040317^
"^DD",727.819,727.819,78,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.819,727.819,78,23,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.819,727.819,78,23,3,0)
2 to determine CV Status.   API returns three pieces (i.e. 1^3010106^0). 
"^DD",727.819,727.819,78,23,4,0)
The third piece returns:
"^DD",727.819,727.819,78,23,5,0)
 
"^DD",727.819,727.819,78,23,6,0)
1 - vet was eligible on date specified
"^DD",727.819,727.819,78,23,7,0)
0 - vet was not eligible on date specified
"^DD",727.819,727.819,78,23,8,0)
 
"^DD",727.819,727.819,78,23,9,0)
Based on these returns, the value for this field shall be Y =Yes, or 
"^DD",727.819,727.819,78,23,10,0)
'NULL' for 'NO'.
"^DD",727.819,727.819,78,"DT")
3040226
"^DD",727.819,727.819,79,0)
NATIONAL PATIENT RECORD FLAG^F^^2;16^K:$L(X)>1!($L(X)<1) X
"^DD",727.819,727.819,79,3)
Answer must be 1 character in length.
"^DD",727.819,727.819,79,21,0)
^^7^7^3040317^
"^DD",727.819,727.819,79,21,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.819,727.819,79,21,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.819,727.819,79,21,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.819,727.819,79,21,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.819,727.819,79,21,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.819,727.819,79,21,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.819,727.819,79,21,7,0)
NULL.
"^DD",727.819,727.819,79,23,0)
^^7^7^3040317^
"^DD",727.819,727.819,79,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.819,727.819,79,23,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.819,727.819,79,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.819,727.819,79,23,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.819,727.819,79,23,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.819,727.819,79,23,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.819,727.819,79,23,7,0)
NULL.
"^DD",727.819,727.819,79,"DT")
3040226
"^DD",727.824,727.824,28,0)
ORDERING PROVIDER^F^^1;9^K:$L(X)>11!($L(X)<1) X
"^DD",727.824,727.824,28,3)
Answer must be 1-11 characters in length.
"^DD",727.824,727.824,28,21,0)
^^2^2^3040317^
"^DD",727.824,727.824,28,21,1,0)
ORDERING PROVIDER is derived by pointing to the New Person File # 200 for 
"^DD",727.824,727.824,28,21,2,0)
field indicating Provider.
"^DD",727.824,727.824,28,23,0)
^^2^2^3040317^
"^DD",727.824,727.824,28,23,1,0)
ORDERING PROVIDER is derived by pointing to the New Person File # 200 for 
"^DD",727.824,727.824,28,23,2,0)
field indicating Provider.
"^DD",727.824,727.824,28,"DT")
3040226
"^DD",727.824,727.824,29,0)
ORDERING PROVIDER PERSON CLASS^F^^1;10^K:$L(X)>7!($L(X)<1) X
"^DD",727.824,727.824,29,3)
Answer must be 1-7 characters in length.
"^DD",727.824,727.824,29,21,0)
^^3^3^3040317^
"^DD",727.824,727.824,29,21,1,0)
ORDERING PROVIDER PERSON CLASS is derived by first pointing to the New 
"^DD",727.824,727.824,29,21,2,0)
Person File # 200 for provider.  File # 200 then points to the Person 
"^DD",727.824,727.824,29,21,3,0)
Class File # 8932.1 to check for Person Class.
"^DD",727.824,727.824,29,23,0)
^^3^3^3040317^
"^DD",727.824,727.824,29,23,1,0)
ORDERING PROVIDER PERSON CLASS is derived by first pointing to the New 
"^DD",727.824,727.824,29,23,2,0)
Person File # 200 for provider.  File # 200 then points to the Person 
"^DD",727.824,727.824,29,23,3,0)
Class File # 8932.1 to check for Person Class.
"^DD",727.824,727.824,29,"DT")
3040226
"^DD",727.825,727.825,43,0)
DSS PRODUCT DEPARTMENT^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.825,727.825,43,.1)

"^DD",727.825,727.825,43,3)
Answer must be 1-10 characters in length
"^DD",727.825,727.825,43,21,0)
^.001^1^1^3040921^^^
"^DD",727.825,727.825,43,21,1,0)
The DSS Department Code for the patient care product.
"^DD",727.825,727.825,43,23,0)
^.001^4^4^3040921^^
"^DD",727.825,727.825,43,23,1,0)
Obtained from either the AUDIOLOGY DSS UNIT LINK field (#727.8251) or
"^DD",727.825,727.825,43,23,2,0)
SPEECH PATHOLOGY DSS UNIT LINK field (#727.8252) of the A&SP SITE
"^DD",727.825,727.825,43,23,3,0)
PARAMTETERS file (#509850.8) which is a pointer to the UNIT NUMBER field
"^DD",727.825,727.825,43,23,4,0)
(#4) of the DSS UNIT file (#724).
"^DD",727.825,727.825,43,"DT")
3040302
"^DD",727.825,727.825,58,0)
PLACEHOLDER^F^^1;17^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,58,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,58,"DT")
3040226
"^DD",727.825,727.825,75,0)
DSS IP #^NJ7,0^^1;34^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.825,727.825,75,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",727.825,727.825,75,21,0)
^.001^2^2^3040318^^^^
"^DD",727.825,727.825,75,21,1,0)
The nationally defined DSS Intermediate Product Number designated to 
"^DD",727.825,727.825,75,21,2,0)
the Quasar care product.
"^DD",727.825,727.825,75,23,0)
^.001^10^10^3041027^^
"^DD",727.825,727.825,75,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.825,727.825,75,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.825,727.825,75,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.825,727.825,75,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.825,727.825,75,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.825,727.825,75,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.825,727.825,75,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.825,727.825,75,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.825,727.825,75,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.825,727.825,75,23,10,0)
group identifying the problem. 
"^DD",727.825,727.825,75,"DT")
3040225
"^DD",727.825,727.825,76,0)
ENROLLMENT PRIORITY^F^^1;35^K:$L(X)>2!($L(X)<1) X
"^DD",727.825,727.825,76,3)
Answer must be 1-2 characters in length.
"^DD",727.825,727.825,76,21,0)
^.001^2^2^3041027^^
"^DD",727.825,727.825,76,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment piority group and the
"^DD",727.825,727.825,76,21,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.825,727.825,76,23,0)
^^20^20^3041027^
"^DD",727.825,727.825,76,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.825,727.825,76,23,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11. 
"^DD",727.825,727.825,76,23,3,0)
 
"^DD",727.825,727.825,76,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.825,727.825,76,23,5,0)
 
"^DD",727.825,727.825,76,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.825,727.825,76,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.825,727.825,76,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.825,727.825,76,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.825,727.825,76,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.825,727.825,76,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.825,727.825,76,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.825,727.825,76,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.825,727.825,76,23,14,0)
 
"^DD",727.825,727.825,76,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.825,727.825,76,23,16,0)
 
"^DD",727.825,727.825,76,23,17,0)
                                'a' FOR 1 
"^DD",727.825,727.825,76,23,18,0)
                                'c' FOR 3 
"^DD",727.825,727.825,76,23,19,0)
                                'e' FOR 5 
"^DD",727.825,727.825,76,23,20,0)
                                'g' FOR 7   
"^DD",727.825,727.825,76,"DT")
3040226
"^DD",727.825,727.825,77,0)
USER ENROLLEE^F^^1;36^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,77,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,77,21,0)
^^4^4^3040317^
"^DD",727.825,727.825,77,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.825,727.825,77,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.825,727.825,77,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.825,727.825,77,21,4,0)
year's value is contained. 
"^DD",727.825,727.825,77,"DT")
3040226
"^DD",727.825,727.825,78,0)
PATIENT TYPE^F^^1;37^K:$L(X)>2!($L(X)<1) X
"^DD",727.825,727.825,78,3)
Answer must be 1-2 characters in length.
"^DD",727.825,727.825,78,21,0)
^^3^3^3040317^
"^DD",727.825,727.825,78,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.825,727.825,78,21,2,0)
at a VA facility. It is determined by the TYPE field of the PATIENT 
"^DD",727.825,727.825,78,21,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391.
"^DD",727.825,727.825,78,23,0)
^^17^17^3040317^
"^DD",727.825,727.825,78,23,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.825,727.825,78,23,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT 
"^DD",727.825,727.825,78,23,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391. Every 
"^DD",727.825,727.825,78,23,4,0)
patient added to the system must have a TYPE specified. It best 
"^DD",727.825,727.825,78,23,5,0)
classifies a patient as one of the following values listed below.  
"^DD",727.825,727.825,78,23,6,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.825,727.825,78,23,7,0)
 
"^DD",727.825,727.825,78,23,8,0)
AC= ACTIVE DUTY
"^DD",727.825,727.825,78,23,9,0)
AL= ALLIED VETERAN
"^DD",727.825,727.825,78,23,10,0)
CO= COLLATERAL
"^DD",727.825,727.825,78,23,11,0)
EM= EMPLOYEE
"^DD",727.825,727.825,78,23,12,0)
IN= INELIGIBLE
"^DD",727.825,727.825,78,23,13,0)
MI= MILITARY RETIREE
"^DD",727.825,727.825,78,23,14,0)
NO= NON-VETERAN (OTHER)
"^DD",727.825,727.825,78,23,15,0)
NS= NSC VETERAN
"^DD",727.825,727.825,78,23,16,0)
SC= SC VETERAN
"^DD",727.825,727.825,78,23,17,0)
TR= TRICARE
"^DD",727.825,727.825,78,"DT")
3040226
"^DD",727.825,727.825,79,0)
CV STATUS ELIGIBILITY^F^^1;38^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,79,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,79,21,0)
^.001^3^3^3040318^^^
"^DD",727.825,727.825,79,21,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.825,727.825,79,21,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.825,727.825,79,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.825,727.825,79,23,0)
^^11^11^3040318^
"^DD",727.825,727.825,79,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.825,727.825,79,23,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.825,727.825,79,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces i.e. 
"^DD",727.825,727.825,79,23,4,0)
1^3010106^0, the first piece is resolved as follows.
"^DD",727.825,727.825,79,23,5,0)
 
"^DD",727.825,727.825,79,23,6,0)
 1 - qualifies as a CV
"^DD",727.825,727.825,79,23,7,0)
 0 - does not qualify as a CV
"^DD",727.825,727.825,79,23,8,0)
-1 - bad DFN or date
"^DD",727.825,727.825,79,23,9,0)
 
"^DD",727.825,727.825,79,23,10,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES', 
"^DD",727.825,727.825,79,23,11,0)
E for 'ELIGIBILITY EXPIRED' or 'NULL' for 'NOT ELIGIBLE'.
"^DD",727.825,727.825,79,"DT")
3040226
"^DD",727.825,727.825,80,0)
CV ELIGIBILITY END DATE^F^^2;1^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,80,3)
Answer must be 1-8 characters in length.
"^DD",727.825,727.825,80,21,0)
^^3^3^3040317^
"^DD",727.825,727.825,80,21,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.825,727.825,80,21,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.825,727.825,80,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.825,727.825,80,23,0)
^^4^4^3040317^
"^DD",727.825,727.825,80,23,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.825,727.825,80,23,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.825,727.825,80,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces (i.e. 
"^DD",727.825,727.825,80,23,4,0)
1^3010106^0) the 2nd piece is the Combat Vet End Date.
"^DD",727.825,727.825,80,"DT")
3040226
"^DD",727.825,727.825,81,0)
ENCOUNTER CV^F^^2;2^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,81,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,81,21,0)
^^3^3^3040317^
"^DD",727.825,727.825,81,21,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.825,727.825,81,21,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.825,727.825,81,21,3,0)
2 to determine CV Status.
"^DD",727.825,727.825,81,23,0)
^^10^10^3040317^
"^DD",727.825,727.825,81,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.825,727.825,81,23,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.825,727.825,81,23,3,0)
2 to determine CV Status.   API returns three pieces (i.e. 1^3010106^0). 
"^DD",727.825,727.825,81,23,4,0)
The third piece returns:
"^DD",727.825,727.825,81,23,5,0)
 
"^DD",727.825,727.825,81,23,6,0)
1 - vet was eligible on date specified
"^DD",727.825,727.825,81,23,7,0)
0 - vet was not eligible on date specified
"^DD",727.825,727.825,81,23,8,0)
 
"^DD",727.825,727.825,81,23,9,0)
Based on these returns, the value for this field shall be Y =Yes, or 
"^DD",727.825,727.825,81,23,10,0)
'NULL' for 'NO'.
"^DD",727.825,727.825,81,"DT")
3040226
"^DD",727.825,727.825,82,0)
NATIONAL PATIENT RECORD FLAG^F^^2;3^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,82,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,82,21,0)
^^7^7^3040317^
"^DD",727.825,727.825,82,21,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.825,727.825,82,21,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.825,727.825,82,21,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.825,727.825,82,21,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.825,727.825,82,21,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.825,727.825,82,21,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.825,727.825,82,21,7,0)
NULL.
"^DD",727.825,727.825,82,23,0)
^^7^7^3040317^
"^DD",727.825,727.825,82,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.825,727.825,82,23,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.825,727.825,82,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.825,727.825,82,23,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.825,727.825,82,23,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.825,727.825,82,23,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.825,727.825,82,23,7,0)
NULL.
"^DD",727.825,727.825,82,"DT")
3040226
"^DD",727.826,727.826,39,0)
DSS PRODUCT DEPARTMENT^F^^1;7^K:$L(X)>10!($L(X)<1) X
"^DD",727.826,727.826,39,.1)

"^DD",727.826,727.826,39,3)
Answer must be 1-10 characters in length
"^DD",727.826,727.826,39,10)

"^DD",727.826,727.826,39,21,0)
^.001^2^2^3040318^^
"^DD",727.826,727.826,39,21,1,0)
The nationally defined DSS Intermediate Department Number designated to 
"^DD",727.826,727.826,39,21,2,0)
the Prosthetic care product.
"^DD",727.826,727.826,39,23,0)
^^12^12^3040318^
"^DD",727.826,727.826,39,23,1,0)
DSS PRODUCT DEPARTMENT field value is determined via the following 
"^DD",727.826,727.826,39,23,2,0)
process: The DSS Product Department and IP Number File # 727.6 is
"^DD",727.826,727.826,39,23,3,0)
populated via site specific HL7 messages generated by AAC extracts which
"^DD",727.826,727.826,39,23,4,0)
run on a monthly basis.  The file is then used by the DSS extract routines
"^DD",727.826,727.826,39,23,5,0)
to identify and to populate the DSS PRODUCT DEPARTMENT and DSS IP# fields
"^DD",727.826,727.826,39,23,6,0)
in the DSS extract files before transmitting them to AAC.
"^DD",727.826,727.826,39,23,7,0)
 
"^DD",727.826,727.826,39,23,8,0)
Using the combination of Feeder System, Feeder Location and Feeder Key as
"^DD",727.826,727.826,39,23,9,0)
an identifier for each individual record matches are resolved and the 
"^DD",727.826,727.826,39,23,10,0)
designations are made.. If no match is found in file 727.6 an error
"^DD",727.826,727.826,39,23,11,0)
message is generated and a bulletin is triggered and sent to a DSS mail
"^DD",727.826,727.826,39,23,12,0)
group identifying the problem.
"^DD",727.826,727.826,39,"DT")
3040302
"^DD",727.826,727.826,56,0)
PLACEHOLDER^F^^1;24^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,56,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,56,"DT")
3040301
"^DD",727.826,727.826,67,0)
DSS IP #^NJ7,0^^1;35^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.826,727.826,67,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.826,727.826,67,21,0)
^.001^2^2^3040318^^
"^DD",727.826,727.826,67,21,1,0)
The nationally defined DSS Intermediate Product Number designated to the 
"^DD",727.826,727.826,67,21,2,0)
patient care product.
"^DD",727.826,727.826,67,23,0)
^^10^10^3041027^
"^DD",727.826,727.826,67,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.826,727.826,67,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.826,727.826,67,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.826,727.826,67,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.826,727.826,67,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.826,727.826,67,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.826,727.826,67,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.826,727.826,67,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.826,727.826,67,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.826,727.826,67,23,10,0)
group identifying the problem.
"^DD",727.826,727.826,67,"DT")
3031113
"^DD",727.826,727.826,68,0)
ENROLLMENT PRIORITY^F^^1;36^K:$L(X)>2!($L(X)<1) X
"^DD",727.826,727.826,68,3)
Answer must be 1-2 characters in length.
"^DD",727.826,727.826,68,21,0)
^^2^2^3040317^
"^DD",727.826,727.826,68,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment piority group and the 
"^DD",727.826,727.826,68,21,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.826,727.826,68,23,0)
^^20^20^3041027^
"^DD",727.826,727.826,68,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.826,727.826,68,23,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11. 
"^DD",727.826,727.826,68,23,3,0)
 
"^DD",727.826,727.826,68,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.826,727.826,68,23,5,0)
 
"^DD",727.826,727.826,68,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.826,727.826,68,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.826,727.826,68,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.826,727.826,68,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.826,727.826,68,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.826,727.826,68,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.826,727.826,68,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.826,727.826,68,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.826,727.826,68,23,14,0)
 
"^DD",727.826,727.826,68,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.826,727.826,68,23,16,0)
 
"^DD",727.826,727.826,68,23,17,0)
                                'a' FOR 1 
"^DD",727.826,727.826,68,23,18,0)
                                'c' FOR 3 
"^DD",727.826,727.826,68,23,19,0)
                                'e' FOR 5 
"^DD",727.826,727.826,68,23,20,0)
                                'g' FOR 7   
"^DD",727.826,727.826,68,"DT")
3040301
"^DD",727.826,727.826,69,0)
USER ENROLLEE^F^^1;37^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,69,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,69,21,0)
^^4^4^3040317^
"^DD",727.826,727.826,69,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.826,727.826,69,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.826,727.826,69,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.826,727.826,69,21,4,0)
year's value is contained. 
"^DD",727.826,727.826,69,"DT")
3040301
"^DD",727.826,727.826,70,0)
PATIENT TYPE^F^^1;38^K:$L(X)>2!($L(X)<1) X
"^DD",727.826,727.826,70,3)
Answer must be 1-2 characters in length.
"^DD",727.826,727.826,70,21,0)
^^3^3^3040317^
"^DD",727.826,727.826,70,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.826,727.826,70,21,2,0)
at a VA facility. It is determined by the TYPE field of the PATIENT 
"^DD",727.826,727.826,70,21,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391.
"^DD",727.826,727.826,70,23,0)
^^17^17^3040317^
"^DD",727.826,727.826,70,23,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.826,727.826,70,23,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT 
"^DD",727.826,727.826,70,23,3,0)
File #2 which points to the TYPE OF PATIENT entries in File #391. Every 
"^DD",727.826,727.826,70,23,4,0)
patient added to the system must have a TYPE specified. It best 
"^DD",727.826,727.826,70,23,5,0)
classifies a patient as one of the following values listed below.  
"^DD",727.826,727.826,70,23,6,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.826,727.826,70,23,7,0)
 
"^DD",727.826,727.826,70,23,8,0)
AC= ACTIVE DUTY
"^DD",727.826,727.826,70,23,9,0)
AL= ALLIED VETERAN
"^DD",727.826,727.826,70,23,10,0)
CO= COLLATERAL
"^DD",727.826,727.826,70,23,11,0)
EM= EMPLOYEE
"^DD",727.826,727.826,70,23,12,0)
IN= INELIGIBLE
"^DD",727.826,727.826,70,23,13,0)
MI= MILITARY RETIREE
"^DD",727.826,727.826,70,23,14,0)
NO= NON-VETERAN (OTHER)
"^DD",727.826,727.826,70,23,15,0)
NS= NSC VETERAN
"^DD",727.826,727.826,70,23,16,0)
SC= SC VETERAN
"^DD",727.826,727.826,70,23,17,0)
TR= TRICARE
"^DD",727.826,727.826,70,"DT")
3040301
"^DD",727.826,727.826,71,0)
CV STATUS ELIGIBILITY^F^^1;39^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,71,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,71,21,0)
^.001^3^3^3040318^^
"^DD",727.826,727.826,71,21,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.826,727.826,71,21,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.826,727.826,71,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.826,727.826,71,23,0)
^^11^11^3040318^
"^DD",727.826,727.826,71,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.826,727.826,71,23,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.826,727.826,71,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces i.e. 
"^DD",727.826,727.826,71,23,4,0)
1^3010106^0, the first piece is resolved as follows.
"^DD",727.826,727.826,71,23,5,0)
 
"^DD",727.826,727.826,71,23,6,0)
 1 - qualifies as a CV
"^DD",727.826,727.826,71,23,7,0)
 0 - does not qualify as a CV
"^DD",727.826,727.826,71,23,8,0)
-1 - bad DFN or date
"^DD",727.826,727.826,71,23,9,0)
 
"^DD",727.826,727.826,71,23,10,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES', 
"^DD",727.826,727.826,71,23,11,0)
E for 'ELIGIBILITY EXPIRED' or 'NULL' for 'NOT ELIGIBLE'.
"^DD",727.826,727.826,71,"DT")
3040301
"^DD",727.826,727.826,72,0)
CV ELIGIBILITY END DATE^F^^1;40^K:$L(X)>8!($L(X)<1) X
"^DD",727.826,727.826,72,3)
Answer must be 1-8 characters in length.
"^DD",727.826,727.826,72,21,0)
^^3^3^3040317^
"^DD",727.826,727.826,72,21,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.826,727.826,72,21,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.826,727.826,72,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.826,727.826,72,23,0)
^^4^4^3040317^
"^DD",727.826,727.826,72,23,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.826,727.826,72,23,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.826,727.826,72,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces (i.e. 
"^DD",727.826,727.826,72,23,4,0)
1^3010106^0) the 2nd piece is the Combat Vet End Date.
"^DD",727.826,727.826,72,"DT")
3040301
"^DD",727.826,727.826,73,0)
ENCOUNTER CV^F^^1;41^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,73,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,73,21,0)
^^3^3^3040317^
"^DD",727.826,727.826,73,21,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.826,727.826,73,21,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.826,727.826,73,21,3,0)
2 to determine CV Status.
"^DD",727.826,727.826,73,23,0)
^^10^10^3040317^
"^DD",727.826,727.826,73,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.826,727.826,73,23,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.826,727.826,73,23,3,0)
2 to determine CV Status.   API returns three pieces (i.e. 1^3010106^0). 
"^DD",727.826,727.826,73,23,4,0)
The third piece returns:
"^DD",727.826,727.826,73,23,5,0)
 
"^DD",727.826,727.826,73,23,6,0)
1 - vet was eligible on date specified
"^DD",727.826,727.826,73,23,7,0)
0 - vet was not eligible on date specified
"^DD",727.826,727.826,73,23,8,0)
 
"^DD",727.826,727.826,73,23,9,0)
Based on these returns, the value for this field shall be Y =Yes, or 
"^DD",727.826,727.826,73,23,10,0)
'NULL' for 'NO'.
"^DD",727.826,727.826,73,"DT")
3040301
"^DD",727.826,727.826,74,0)
NATIONAL PATIENT RECORD FLAG^F^^1;42^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,74,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,74,21,0)
^^7^7^3040317^
"^DD",727.826,727.826,74,21,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.826,727.826,74,21,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.826,727.826,74,21,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.826,727.826,74,21,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.826,727.826,74,21,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.826,727.826,74,21,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.826,727.826,74,21,7,0)
NULL.
"^DD",727.826,727.826,74,23,0)
^^7^7^3040317^
"^DD",727.826,727.826,74,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.826,727.826,74,23,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient 
"^DD",727.826,727.826,74,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.826,727.826,74,23,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is 
"^DD",727.826,727.826,74,23,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is 
"^DD",727.826,727.826,74,23,6,0)
"Y  if the Category I flag is present and active, otherwise it is 
"^DD",727.826,727.826,74,23,7,0)
NULL.
"^DD",727.826,727.826,74,"DT")
3040301
"^DD",727.827,727.827,43,0)
DSS PRODUCT DEPARTMENT^F^^1;20^K:$L(X)>10!($L(X)<1) X
"^DD",727.827,727.827,43,.1)

"^DD",727.827,727.827,43,3)
Answer must be 1-10 characters in length.
"^DD",727.827,727.827,43,21,0)
^^2^2^3040318^
"^DD",727.827,727.827,43,21,1,0)
The nationally defined DSS Intermediate Department Number designated to 
"^DD",727.827,727.827,43,21,2,0)
the patient care product being provided.
"^DD",727.827,727.827,43,23,0)
^^12^12^3040318^
"^DD",727.827,727.827,43,23,1,0)
DSS PRODUCT DEPARTMENT field value is determined via the following 
"^DD",727.827,727.827,43,23,2,0)
process: The DSS Product Department and IP Number File # 727.6 is
"^DD",727.827,727.827,43,23,3,0)
populated via site specific HL7 messages generated by AAC extracts which
"^DD",727.827,727.827,43,23,4,0)
run on a monthly basis.  The file is then used by the DSS extract routines
"^DD",727.827,727.827,43,23,5,0)
to identify and to populate the DSS PRODUCT DEPARTMENT and DSS IP# fields
"^DD",727.827,727.827,43,23,6,0)
in the DSS extract files before transmitting them to AAC.
"^DD",727.827,727.827,43,23,7,0)
 
"^DD",727.827,727.827,43,23,8,0)
Using the combination of Feeder System, Feeder Location and Feeder Key as
"^DD",727.827,727.827,43,23,9,0)
an identifier for each individual record matches are resolved and the 
"^DD",727.827,727.827,43,23,10,0)
designations are made.. If no match is found in file 727.6 an error
"^DD",727.827,727.827,43,23,11,0)
message is generated and a bulletin is triggered and sent to a DSS mail
"^DD",727.827,727.827,43,23,12,0)
group identifying the problem.
"^DD",727.827,727.827,43,"DT")
3040302
"^DD",727.827,727.827,62,0)
PLACEHOLDER^F^^2;2^K:$L(X)>1!($L(X)<1) X
"^DD",727.827,727.827,62,3)
Answer must be 1 character in length.
"^DD",727.827,727.827,62,"DT")
3040226
"^DD",727.827,727.827,76,0)
DSS IP #^NJ7,0^^2;16^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.827,727.827,76,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.827,727.827,76,21,0)
^.001^2^2^3040318^^
"^DD",727.827,727.827,76,21,1,0)
The nationally defined DSS Intermediate Product Number designated to 
"^DD",727.827,727.827,76,21,2,0)
the patient care product being provided.
"^DD",727.827,727.827,76,23,0)
^.001^10^10^3041027^^
"^DD",727.827,727.827,76,23,1,0)
DSS IP# field value is determined via the following process:  The DSS 
"^DD",727.827,727.827,76,23,2,0)
PRODUCT DEPARTMENT AND IP NUMBER file (#727.6) is populated via site 
"^DD",727.827,727.827,76,23,3,0)
specific HL7 messages generated by AAC extracts which run on a monthly 
"^DD",727.827,727.827,76,23,4,0)
basis.  The file is then used by the DSS extract routines to identify and 
"^DD",727.827,727.827,76,23,5,0)
to populate the DSS PRODUCT DEPARTMENT and DSS IP # fields in the DSS 
"^DD",727.827,727.827,76,23,6,0)
extract files before transmitting them to AAC. Using the combination of 
"^DD",727.827,727.827,76,23,7,0)
Feeder System, Feeder Location and Feeder Key as an identifier for each 
"^DD",727.827,727.827,76,23,8,0)
individual record does the matches.  If no match is found an error 
"^DD",727.827,727.827,76,23,9,0)
message is generated and a bulletin is triggered and sent to a DSS mail 
"^DD",727.827,727.827,76,23,10,0)
group identifying the problem. 
"^DD",727.827,727.827,76,"DT")
3031113
"^DD",727.827,727.827,77,0)
ENROLLMENT PRIORITY^F^^2;17^K:$L(X)>2!($L(X)<1) X
"^DD",727.827,727.827,77,3)
Answer must be 1-2 characters in length.
"^DD",727.827,727.827,77,21,0)
^^2^2^3041027^
"^DD",727.827,727.827,77,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment piority group and the 
"^DD",727.827,727.827,77,21,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11.
"^DD",727.827,727.827,77,23,0)
^^20^20^3041027^
"^DD",727.827,727.827,77,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.827,727.827,77,23,2,0)
enrollment priority subgroup from the Patient Enrollment File #27.11. 
"^DD",727.827,727.827,77,23,3,0)
 
"^DD",727.827,727.827,77,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.827,727.827,77,23,5,0)
 
"^DD",727.827,727.827,77,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.827,727.827,77,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.827,727.827,77,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.827,727.827,77,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.827,727.827,77,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.827,727.827,77,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.827,727.827,77,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.827,727.827,77,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.827,727.827,77,23,14,0)
 
"^DD",727.827,727.827,77,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.827,727.827,77,23,16,0)
 
"^DD",727.827,727.827,77,23,17,0)
                                'a' FOR 1 
"^DD",727.827,727.827,77,23,18,0)
                                'c' FOR 3 
"^DD",727.827,727.827,77,23,19,0)
                                'e' FOR 5 
"^DD",727.827,727.827,77,23,20,0)
                                'g' FOR 7   
"^DD",727.827,727.827,77,"DT")
3040226
"^DD",727.827,727.827,78,0)
USER ENROLLEE^F^^2;18^K:$L(X)>1!($L(X)<1) X
"^DD",727.827,727.827,78,3)
Answer must be 1 character in length.
"^DD",727.827,727.827,78,21,0)
^.001^4^4^3040317^^
"^DD",727.827,727.827,78,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.827,727.827,78,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.827,727.827,78,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.827,727.827,78,21,4,0)
year's value is contained. 
"^DD",727.827,727.827,78,"DT")
3040226
"^DD",727.827,727.827,79,0)
PATIENT TYPE^F^^2;19^K:$L(X)>2!($L(X)<1) X
"^DD",727.827,727.827,79,3)
Answer must be 1-2 characters in length.
"^DD",727.827,727.827,79,21,0)
^^3^3^3040317^
"^DD",727.827,727.827,79,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen at
"^DD",727.827,727.827,79,21,2,0)
a VA facility. It is determined by the TYPE field of the PATIENT File #2
"^DD",727.827,727.827,79,21,3,0)
which points to the TYPE OF PATIENT entries in File #391.
"^DD",727.827,727.827,79,23,0)
^^17^17^3040317^
"^DD",727.827,727.827,79,23,1,0)
PATIENT TYPE refers to the various types of patient which might be seen 
"^DD",727.827,727.827,79,23,2,0)
at a VA facility.  It is determined by the TYPE field of the PATIENT File 
"^DD",727.827,727.827,79,23,3,0)
#2 which points to the TYPE OF PATIENT entries in File #391. Every 
"^DD",727.827,727.827,79,23,4,0)
patient added to the system must have a TYPE specified. It best 
"^DD",727.827,727.827,79,23,5,0)
classifies a patient as one of the following values listed below.  
"^DD",727.827,727.827,79,23,6,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.827,727.827,79,23,7,0)
 
"^DD",727.827,727.827,79,23,8,0)
AC= ACTIVE DUTY
"^DD",727.827,727.827,79,23,9,0)
AL= ALLIED VETERAN
"^DD",727.827,727.827,79,23,10,0)
CO= COLLATERAL
"^DD",727.827,727.827,79,23,11,0)
EM= EMPLOYEE
"^DD",727.827,727.827,79,23,12,0)
IN= INELIGIBLE
"^DD",727.827,727.827,79,23,13,0)
MI= MILITARY RETIREE
"^DD",727.827,727.827,79,23,14,0)
NO= NON-VETERAN (OTHER)
"^DD",727.827,727.827,79,23,15,0)
NS= NSC VETERAN
"^DD",727.827,727.827,79,23,16,0)
SC= SC VETERAN
"^DD",727.827,727.827,79,23,17,0)
TR= TRICARE
"^DD",727.827,727.827,79,"DT")
3040226
"^DD",727.827,727.827,80,0)
CV STATUS ELIGIBILITY^F^^2;20^K:$L(X)>1!($L(X)<1) X
"^DD",727.827,727.827,80,3)
Answer must be 1 character in length.
"^DD",727.827,727.827,80,21,0)
^.001^3^3^3040318^^^^
"^DD",727.827,727.827,80,21,1,0)
CV STATUS ELIGIBILITY is determined by the use of API $$CVEDT^DGCV (DFN.  
"^DD",727.827,727.827,80,21,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the Patient
"^DD",727.827,727.827,80,21,3,0)
File #2 to determine CV Status.
"^DD",727.827,727.827,80,23,0)
^^11^11^3040318^
"^DD",727.827,727.827,80,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.827,727.827,80,23,2,0)
DATE) that checks the Combat Vet End Date field .5295 from the Patient 
"^DD",727.827,727.827,80,23,3,0)
File #2 to determine CV Status.  API returns three pieces i.e. 
"^DD",727.827,727.827,80,23,4,0)
1^3010106^0, the first piece is resolved as follows.
"^DD",727.827,727.827,80,23,5,0)
 
"^DD",727.827,727.827,80,23,6,0)
 1 - qualifies as a CV
"^DD",727.827,727.827,80,23,7,0)
 0 - does not qualify as a CV
"^DD",727.827,727.827,80,23,8,0)
-1 - bad DFN or date
"^DD",727.827,727.827,80,23,9,0)
 
"^DD",727.827,727.827,80,23,10,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES', 
"^DD",727.827,727.827,80,23,11,0)
E for 'ELIGIBILITY EXPIRED' or 'NULL' for 'NOT ELIGIBLE'.
"^DD",727.827,727.827,80,"DT")
3040317
"^DD",727.827,727.827,81,0)
CV ELIGIBILITY END DATE^F^^2;21^K:$L(X)>8!($L(X)<1) X
"^DD",727.827,727.827,81,3)
Answer must be 1-8 characters in length.
"^DD",727.827,727.827,81,21,0)
^^3^3^3040317^
"^DD",727.827,727.827,81,21,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.827,727.827,81,21,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.827,727.827,81,21,3,0)
Patient File #2 to determine CV Status.
"^DD",727.827,727.827,81,23,0)
^^4^4^3040317^
"^DD",727.827,727.827,81,23,1,0)
CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV 
"^DD",727.827,727.827,81,23,2,0)
(DFN. DATE) that checks the Combat Vet End Date field .5295 from the 
"^DD",727.827,727.827,81,23,3,0)
Patient File #2 to determine CV Status.  API returns three pieces (i.e. 
"^DD",727.827,727.827,81,23,4,0)
1^3010106^0) the 2nd piece is the Combat Vet End Date.
"^DD",727.827,727.827,81,"DT")
3040226
"^DD",727.827,727.827,82,0)
ENCOUNTER CV^F^^2;22^K:$L(X)>1!($L(X)<1) X
"^DD",727.827,727.827,82,3)
Answer must be 1 character in length.
"^DD",727.827,727.827,82,21,0)
^^3^3^3040317^
"^DD",727.827,727.827,82,21,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE)
"^DD",727.827,727.827,82,21,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 2
"^DD",727.827,727.827,82,21,3,0)
to determine CV Status.
"^DD",727.827,727.827,82,23,0)
^^10^10^3040317^
"^DD",727.827,727.827,82,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN. DATE) 
"^DD",727.827,727.827,82,23,2,0)
that checks the Combat Vet End Date field .5295 from the Patient File # 
"^DD",727.827,727.827,82,23,3,0)
2 to determine CV Status.   API returns three pieces (i.e. 1^3010106^0). 
"^DD",727.827,727.827,82,23,4,0)
The third piece returns:
"^DD",727.827,727.827,82,23,5,0)
 
"^DD",727.827,727.827,82,23,6,0)
1 - vet was eligible on date specified
"^DD",727.827,727.827,82,23,7,0)
0 - vet was not eligible on date specified
"^DD",727.827,727.827,82,23,8,0)
 
"^DD",727.827,727.827,82,23,9,0)
Based on these returns, the value for this field shall be Y =Yes, or 
"^DD",727.827,727.827,82,23,10,0)
'NULL' for 'NO'.
"^DD",727.827,727.827,82,"DT")
3040226
"^DD",727.827,727.827,83,0)
NATIONAL PATIENT RECORD FLAG^F^^2;23^K:$L(X)>1!($L(X)<1) X
"^DD",727.827,727.827,83,3)
Answer must be 1 character in length.
"^DD",727.827,727.827,83,21,0)
^^6^6^3040317^
"^DD",727.827,727.827,83,21,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File #
"^DD",727.827,727.827,83,21,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient
"^DD",727.827,727.827,83,21,3,0)
Record Flags that can be assigned to a patient. Category I flags are
"^DD",727.827,727.827,83,21,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is
"^DD",727.827,727.827,83,21,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is
"^DD",727.827,727.827,83,21,6,0)
"Y  if the Category I flag is present and active, otherwise it is NULL.
"^DD",727.827,727.827,83,23,0)
^^6^6^3040317^
"^DD",727.827,727.827,83,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File #
"^DD",727.827,727.827,83,23,2,0)
26.15.  This file contains a list of the Category 1 (National) Patient
"^DD",727.827,727.827,83,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are
"^DD",727.827,727.827,83,23,4,0)
established at a National level.   NATIONAL PATIENT RECORD FLAG is
"^DD",727.827,727.827,83,23,5,0)
retrieved via an API  $$GETACT^DGPFAPI(DFN, TARGET_ROOT . Field value is
"^DD",727.827,727.827,83,23,6,0)
"Y  if the Category I flag is present and active, otherwise it is NULL.
"^DD",727.827,727.827,83,"DT")
3040226
"^DD",728.44,728.44,5,0)
ACTION TO SEND^S^1:SEND STOP CODE;4:SEND BOTH AS ONE RECORD WITH NATIONAL CODE;5:SEND BOTH AS ONE RECORD WITHOUT NATIONAL CODE;6:DO NOT SEND;7:SEND BOTH AS ONE RECORD WITH DSS PRODUCT DEPARTMENT;^0;6^Q
"^DD",728.44,728.44,5,3)
Select the appropriate stop code action.
"^DD",728.44,728.44,5,21,0)
^.001^2^2^3040322^^^^
"^DD",728.44,728.44,5,21,1,0)
This determines how alternate stop code and alternate credit stop
"^DD",728.44,728.44,5,21,2,0)
codes are combined to form a feeder key for this clinic.
"^DD",728.44,728.44,5,23,0)
^.001^2^2^3040322^^^^
"^DD",728.44,728.44,5,23,1,0)
This field is used in routine ECXSCX to create the feeder key for
"^DD",728.44,728.44,5,23,2,0)
this clinic.
"^DD",728.44,728.44,5,"DT")
3040322
"^DD",728.44,728.44,10,0)
DSS PRODUCT DEPARTMENT^F^^0;11^K:$L(X)>10!($L(X)<1) X
"^DD",728.44,728.44,10,3)
Answer must be 1-10 characters in length.
"^DD",728.44,728.44,10,21,0)
^^2^2^3041012^
"^DD",728.44,728.44,10,21,1,0)
The nationally defined DSS Intermediate Department Number designated to 
"^DD",728.44,728.44,10,21,2,0)
the patient care product being provided.
"^DD",728.44,728.44,10,"DT")
3040223
**INSTALL NAME**
LR*5.2*326
"BLD",5796,0)
LR*5.2*326^LAB SERVICE^0^3041222^y
"BLD",5796,1,0)
^^171^171^3041028^
"BLD",5796,1,1,0)
 
"BLD",5796,1,2,0)
Description:
"BLD",5796,1,3,0)
===========
"BLD",5796,1,4,0)
 
"BLD",5796,1,5,0)
This patch implements a request from Decision Support System to expand 
"BLD",5796,1,6,0)
the LAB DSS LAR EXTRACT (#64.036) file to include the passing ordering 
"BLD",5796,1,7,0)
provider in DSS LAR API. The companion DSS patch is ECX*3.0*71. 
"BLD",5796,1,8,0)
 
"BLD",5796,1,9,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*326 does not 
"BLD",5796,1,10,0)
contain any changes to the VISTA BLOOD BANK Software as defined by VHA 
"BLD",5796,1,11,0)
DIRECTIVE 99-053 titled VISTA BLOOD BANK SOFTWARE VERSION 5.2.
"BLD",5796,1,12,0)
 
"BLD",5796,1,13,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*326 does not 
"BLD",5796,1,14,0)
alter or modify any software design safeguards or safety critical 
"BLD",5796,1,15,0)
elements functions.
"BLD",5796,1,16,0)
 
"BLD",5796,1,17,0)
RISK ANALYSIS: Changes made by patch LR*5.2*326 have no effect on Blood  
"BLD",5796,1,18,0)
software functionality, therefore RISK is none.
"BLD",5796,1,19,0)
 
"BLD",5796,1,20,0)
 
"BLD",5796,1,21,0)
Routine Description:
"BLD",5796,1,22,0)
====================
"BLD",5796,1,23,0)
 
"BLD",5796,1,24,0)
The LRCAPDAR routine has been enhanced to capture the ordering provider 
"BLD",5796,1,25,0)
for each accession being passed to DSS LAR API.
"BLD",5796,1,26,0)
 
"BLD",5796,1,27,0)
Option Description:
"BLD",5796,1,28,0)
==================
"BLD",5796,1,29,0)
There is no option attached to this functionality. The data extraction in 
"BLD",5796,1,30,0)
activated by ECX DSS API.
"BLD",5796,1,31,0)
 
"BLD",5796,1,32,0)
Data Dictionary Changes:
"BLD",5796,1,33,0)
=======================
"BLD",5796,1,34,0)
An additional field will be installed with this patch.
"BLD",5796,1,35,0)
PROVIDER (#12) field will be added to LAB DSS LAR EXTRACT (#64.036) file.
"BLD",5796,1,36,0)
This field will be populated by the Laboratory DSS LAR API.
"BLD",5796,1,37,0)
 
"BLD",5796,1,38,0)
 
"BLD",5796,1,39,0)
 
"BLD",5796,1,40,0)
NOTE: This patch is a companion to the ECX*3.0*71 patch.
"BLD",5796,1,41,0)
      LR*5.2*326 is not called by any menu option and does not
"BLD",5796,1,42,0)
      have any user interface.  Patch LR*5.2*326 MUST
"BLD",5796,1,43,0)
      be installed for the ECX*3.0*71 patch to work properly.
"BLD",5796,1,44,0)
 
"BLD",5796,1,45,0)
Test Sites
"BLD",5796,1,46,0)
==========
"BLD",5796,1,47,0)
Cheyenne, WY
"BLD",5796,1,48,0)
Little Rock, AR
"BLD",5796,1,49,0)
Portland, OR
"BLD",5796,1,50,0)
Minneapolis, MN
"BLD",5796,1,51,0)
 
"BLD",5796,1,52,0)
Associated NOIS:
"BLD",5796,1,53,0)
================
"BLD",5796,1,54,0)
N/A
"BLD",5796,1,55,0)
 
"BLD",5796,1,56,0)
Routine Summary
"BLD",5796,1,57,0)
===============
"BLD",5796,1,58,0)
 
"BLD",5796,1,59,0)
The following is a list of routines included in this patch.  The
"BLD",5796,1,60,0)
second line of each if these routines now looks like:
"BLD",5796,1,61,0)
 
"BLD",5796,1,62,0)
     <tab>;;5.2;LAB SERVICE;**[patch list]**;Sep 27, 1994
"BLD",5796,1,63,0)
 
"BLD",5796,1,64,0)
               CHECK^XTSUMBLD results
"BLD",5796,1,65,0)
 
"BLD",5796,1,66,0)
  Routine Name    Before Patch   After Patch   Patch List
"BLD",5796,1,67,0)
  ============    ============   ===========   ===========
"BLD",5796,1,68,0)
   LR326            N/A           2022894   326
"BLD",5796,1,69,0)
   LRCAPDAR        7334799        7585446   143,169,258,307,326  
"BLD",5796,1,70,0)
 
"BLD",5796,1,71,0)
 
"BLD",5796,1,72,0)
INSTALLATION INSTRUCTIONS
"BLD",5796,1,73,0)
=========================
"BLD",5796,1,74,0)
 
"BLD",5796,1,75,0)
The install time for this patch is less than 5 minutes.  This patch can 
"BLD",5796,1,76,0)
be installed when Laboratory users are on the system. Suggested time to 
"BLD",5796,1,77,0)
install: non-peak requirements hours.
"BLD",5796,1,78,0)
 
"BLD",5796,1,79,0)
NOTE: Patch LR*5.2*307 must be installed BEFORE this patch.
"BLD",5796,1,80,0)
 
"BLD",5796,1,81,0)
1. If LRCAPDAR is mapped, disable mapping for it.
"BLD",5796,1,82,0)
 
"BLD",5796,1,83,0)
2. Use the 'INSTALL/CHECK MESSAGE' option of the PackMan menu.
"BLD",5796,1,84,0)
   this option will load the KIDS patch onto your system.
"BLD",5796,1,85,0)
 
"BLD",5796,1,86,0)
3. From the 'Kernal Installation & Distribution System' (KIDS)
"BLD",5796,1,87,0)
   menu, select the 'Installation Menu'
"BLD",5796,1,88,0)
 
"BLD",5796,1,89,0)
4. Use the 'Verify Checksum in Tranport Global' option to
"BLD",5796,1,90,0)
   confirm that the correct checksums are present.
"BLD",5796,1,91,0)
 
"BLD",5796,1,92,0)
5. From the same menu select each of the following options:
"BLD",5796,1,93,0)
 
"BLD",5796,1,94,0)
   'Compare Transport Global to Current System'
"BLD",5796,1,95,0)
   'Backup Transport Global'
"BLD",5796,1,96,0)
 
"BLD",5796,1,97,0)
6. From the 'Installation Menu' of the KIDS menu, run the
"BLD",5796,1,98,0)
   option 'Install Package(s)'.  Select the package 'LR*5.2*326'
"BLD",5796,1,99,0)
   and proceed with the installation.
"BLD",5796,1,100,0)
 
"BLD",5796,1,101,0)
7. For each of the installation questions answer 'NO'.
"BLD",5796,1,102,0)
 
"BLD",5796,1,103,0)
8. If you unmapped the routine in step 1, rebuild your map set.
"BLD",5796,1,104,0)
 
"BLD",5796,1,105,0)
9. Routine LR326 will be deleted after a successful patch installation.
"BLD",5796,1,106,0)
 
"BLD",5796,1,107,0)
Installation Example
"BLD",5796,1,108,0)
====================
"BLD",5796,1,109,0)
 
"BLD",5796,1,110,0)
Select Installation Option: 6  Install Package(s) 
"BLD",5796,1,111,0)
Select INSTALL NAME:  LR*5.2*327     Loaded from Distribution  
"BLD",5796,1,112,0)
10/15/04@12:06:10 
"BLD",5796,1,113,0)
      => LR*5.2*326 DSS LAR SUPPORT PATCH ECX*3.0*71
"BLD",5796,1,114,0)
 
"BLD",5796,1,115,0)
This Distribution was loaded on Oct 15, 2004@12:06:10 with header of  
"BLD",5796,1,116,0)
 
"BLD",5796,1,117,0)
   LR*5.2*326 DSS LAR SUPPORT PATCH ECX*3.0*71
"BLD",5796,1,118,0)
   It consisted of the following Install(s): 
"BLD",5796,1,119,0)
     LR*5.2*326 
"BLD",5796,1,120,0)
Checking Install for Package LR*5.2*307 
"BLD",5796,1,121,0)
Will first run the Environment Check Routine, LR326 
"BLD",5796,1,122,0)
 
"BLD",5796,1,123,0)
  
"BLD",5796,1,124,0)
                        --- Environment Check is Ok 
"BLD",5796,1,125,0)
---                         
"BLD",5796,1,126,0)
  
"BLD",5796,1,127,0)
 
"BLD",5796,1,128,0)
Install Questions for LR*5.2*326 
"BLD",5796,1,129,0)
 
"BLD",5796,1,130,0)
Want KIDS to INHIBIT LOGONs during the install? YES// NO 
"BLD",5796,1,131,0)
 
"BLD",5796,1,132,0)
Want to DISABLE Scheduled Options, Menu Options, and Protocols? YES// NO 
"BLD",5796,1,133,0)
 
"BLD",5796,1,134,0)
Enter the Device you want to print the Install messages. 
"BLD",5796,1,135,0)
You can queue the install by enter a 'Q' at the device prompt. 
"BLD",5796,1,136,0)
Enter a '^' to abort the install. 
"BLD",5796,1,137,0)
 
"BLD",5796,1,138,0)
DEVICE: HOME//   UCX/TELNET 
"BLD",5796,1,139,0)
 
"BLD",5796,1,140,0)
  
"BLD",5796,1,141,0)
Install Started for LR*5.2*326 :  
"BLD",5796,1,142,0)
               Oct 15, 2004@09:56:40 
"BLD",5796,1,143,0)
  
"BLD",5796,1,144,0)
Build Distribution Date: Oct 15, 2004 
"BLD",5796,1,145,0)
                                   
"BLD",5796,1,146,0)
LR*5.2*326                                   
"BLD",5796,1,147,0)
  
"BLD",5796,1,148,0)
---------------------------------------- 
"BLD",5796,1,149,0)
  
"BLD",5796,1,150,0)
 Installing Routines: 
"BLD",5796,1,151,0)
               Oct 15, 2004@09:56:40 
"BLD",5796,1,152,0)
  
"BLD",5796,1,153,0)
 Running Pre-Install Routine: PRE^LR307 
"BLD",5796,1,154,0)
  
"BLD",5796,1,155,0)
 Running Post-Install Routine: POST^LR307 
"BLD",5796,1,156,0)
  
"BLD",5796,1,157,0)
 Updating Routine file... 
"BLD",5796,1,158,0)
  
"BLD",5796,1,159,0)
 Updating KIDS files... 
"BLD",5796,1,160,0)
  
"BLD",5796,1,161,0)
 LR*5.2*326 Installed.  
"BLD",5796,1,162,0)
 
"BLD",5796,1,163,0)
               Oct 15, 2004@09:56:40 
"BLD",5796,1,164,0)
  
"BLD",5796,1,165,0)
  
"BLD",5796,1,166,0)
Install Message sent  
"BLD",5796,1,167,0)
 
"BLD",5796,1,168,0)
Install Completed 
"BLD",5796,1,169,0)
 
"BLD",5796,1,170,0)
END OF INSTALLATION EXAMPLE
"BLD",5796,1,171,0)
=========================== 
"BLD",5796,4,0)
^9.64PA^64.036^1
"BLD",5796,4,64.036,0)
64.036
"BLD",5796,4,64.036,222)
y^y^f^^^^n
"BLD",5796,4,"B",64.036,64.036)

"BLD",5796,"INI")

"BLD",5796,"INID")
y
"BLD",5796,"INIT")
POST^LR326
"BLD",5796,"KRN",0)
^9.67PA^8989.52^19
"BLD",5796,"KRN",.4,0)
.4
"BLD",5796,"KRN",.401,0)
.401
"BLD",5796,"KRN",.402,0)
.402
"BLD",5796,"KRN",.403,0)
.403
"BLD",5796,"KRN",.5,0)
.5
"BLD",5796,"KRN",.84,0)
.84
"BLD",5796,"KRN",3.6,0)
3.6
"BLD",5796,"KRN",3.8,0)
3.8
"BLD",5796,"KRN",9.2,0)
9.2
"BLD",5796,"KRN",9.8,0)
9.8
"BLD",5796,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",5796,"KRN",9.8,"NM",1,0)
LRCAPDAR^^0^B16896329
"BLD",5796,"KRN",9.8,"NM",2,0)
LR326^^0^B4533242
"BLD",5796,"KRN",9.8,"NM","B","LR326",2)

"BLD",5796,"KRN",9.8,"NM","B","LRCAPDAR",1)

"BLD",5796,"KRN",19,0)
19
"BLD",5796,"KRN",19.1,0)
19.1
"BLD",5796,"KRN",101,0)
101
"BLD",5796,"KRN",409.61,0)
409.61
"BLD",5796,"KRN",771,0)
771
"BLD",5796,"KRN",870,0)
870
"BLD",5796,"KRN",8989.51,0)
8989.51
"BLD",5796,"KRN",8989.52,0)
8989.52
"BLD",5796,"KRN",8994,0)
8994
"BLD",5796,"KRN","B",.4,.4)

"BLD",5796,"KRN","B",.401,.401)

"BLD",5796,"KRN","B",.402,.402)

"BLD",5796,"KRN","B",.403,.403)

"BLD",5796,"KRN","B",.5,.5)

"BLD",5796,"KRN","B",.84,.84)

"BLD",5796,"KRN","B",3.6,3.6)

"BLD",5796,"KRN","B",3.8,3.8)

"BLD",5796,"KRN","B",9.2,9.2)

"BLD",5796,"KRN","B",9.8,9.8)

"BLD",5796,"KRN","B",19,19)

"BLD",5796,"KRN","B",19.1,19.1)

"BLD",5796,"KRN","B",101,101)

"BLD",5796,"KRN","B",409.61,409.61)

"BLD",5796,"KRN","B",771,771)

"BLD",5796,"KRN","B",870,870)

"BLD",5796,"KRN","B",8989.51,8989.51)

"BLD",5796,"KRN","B",8989.52,8989.52)

"BLD",5796,"KRN","B",8994,8994)

"BLD",5796,"PRE")
LR326
"BLD",5796,"QUES",0)
^9.62^^
"BLD",5796,"REQB",0)
^9.611^1^1
"BLD",5796,"REQB",1,0)
LR*5.2*307^2
"BLD",5796,"REQB","B","LR*5.2*307",1)

"FIA",64.036)
LAB DSS LAR EXTRACT
"FIA",64.036,0)
^LAR(64.036,
"FIA",64.036,0,0)
64.036
"FIA",64.036,0,1)
y^y^f^^^^n
"FIA",64.036,0,10)

"FIA",64.036,0,11)

"FIA",64.036,0,"RLRO")

"FIA",64.036,0,"VR")
5.2^LR
"FIA",64.036,64.036)
0
"FIA",64.036,64.368)
0
"FIA",64.036,64.369)
0
"INIT")
POST^LR326
"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2941128
"PKG",26,22,1,"PAH",1,0)
326^3041222^11724
"PKG",26,22,1,"PAH",1,1,0)
^^171^171^3041222
"PKG",26,22,1,"PAH",1,1,1,0)
 
"PKG",26,22,1,"PAH",1,1,2,0)
Description:
"PKG",26,22,1,"PAH",1,1,3,0)
===========
"PKG",26,22,1,"PAH",1,1,4,0)
 
"PKG",26,22,1,"PAH",1,1,5,0)
This patch implements a request from Decision Support System to expand 
"PKG",26,22,1,"PAH",1,1,6,0)
the LAB DSS LAR EXTRACT (#64.036) file to include the passing ordering 
"PKG",26,22,1,"PAH",1,1,7,0)
provider in DSS LAR API. The companion DSS patch is ECX*3.0*71. 
"PKG",26,22,1,"PAH",1,1,8,0)
 
"PKG",26,22,1,"PAH",1,1,9,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*326 does not 
"PKG",26,22,1,"PAH",1,1,10,0)
contain any changes to the VISTA BLOOD BANK Software as defined by VHA 
"PKG",26,22,1,"PAH",1,1,11,0)
DIRECTIVE 99-053 titled VISTA BLOOD BANK SOFTWARE VERSION 5.2.
"PKG",26,22,1,"PAH",1,1,12,0)
 
"PKG",26,22,1,"PAH",1,1,13,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*326 does not 
"PKG",26,22,1,"PAH",1,1,14,0)
alter or modify any software design safeguards or safety critical 
"PKG",26,22,1,"PAH",1,1,15,0)
elements functions.
"PKG",26,22,1,"PAH",1,1,16,0)
 
"PKG",26,22,1,"PAH",1,1,17,0)
RISK ANALYSIS: Changes made by patch LR*5.2*326 have no effect on Blood  
"PKG",26,22,1,"PAH",1,1,18,0)
software functionality, therefore RISK is none.
"PKG",26,22,1,"PAH",1,1,19,0)
 
"PKG",26,22,1,"PAH",1,1,20,0)
 
"PKG",26,22,1,"PAH",1,1,21,0)
Routine Description:
"PKG",26,22,1,"PAH",1,1,22,0)
====================
"PKG",26,22,1,"PAH",1,1,23,0)
 
"PKG",26,22,1,"PAH",1,1,24,0)
The LRCAPDAR routine has been enhanced to capture the ordering provider 
"PKG",26,22,1,"PAH",1,1,25,0)
for each accession being passed to DSS LAR API.
"PKG",26,22,1,"PAH",1,1,26,0)
 
"PKG",26,22,1,"PAH",1,1,27,0)
Option Description:
"PKG",26,22,1,"PAH",1,1,28,0)
==================
"PKG",26,22,1,"PAH",1,1,29,0)
There is no option attached to this functionality. The data extraction in 
"PKG",26,22,1,"PAH",1,1,30,0)
activated by ECX DSS API.
"PKG",26,22,1,"PAH",1,1,31,0)
 
"PKG",26,22,1,"PAH",1,1,32,0)
Data Dictionary Changes:
"PKG",26,22,1,"PAH",1,1,33,0)
=======================
"PKG",26,22,1,"PAH",1,1,34,0)
An additional field will be installed with this patch.
"PKG",26,22,1,"PAH",1,1,35,0)
PROVIDER (#12) field will be added to LAB DSS LAR EXTRACT (#64.036) file.
"PKG",26,22,1,"PAH",1,1,36,0)
This field will be populated by the Laboratory DSS LAR API.
"PKG",26,22,1,"PAH",1,1,37,0)
 
"PKG",26,22,1,"PAH",1,1,38,0)
 
"PKG",26,22,1,"PAH",1,1,39,0)
 
"PKG",26,22,1,"PAH",1,1,40,0)
NOTE: This patch is a companion to the ECX*3.0*71 patch.
"PKG",26,22,1,"PAH",1,1,41,0)
      LR*5.2*326 is not called by any menu option and does not
"PKG",26,22,1,"PAH",1,1,42,0)
      have any user interface.  Patch LR*5.2*326 MUST
"PKG",26,22,1,"PAH",1,1,43,0)
      be installed for the ECX*3.0*71 patch to work properly.
"PKG",26,22,1,"PAH",1,1,44,0)
 
"PKG",26,22,1,"PAH",1,1,45,0)
Test Sites
"PKG",26,22,1,"PAH",1,1,46,0)
==========
"PKG",26,22,1,"PAH",1,1,47,0)
Cheyenne, WY
"PKG",26,22,1,"PAH",1,1,48,0)
Little Rock, AR
"PKG",26,22,1,"PAH",1,1,49,0)
Portland, OR
"PKG",26,22,1,"PAH",1,1,50,0)
Minneapolis, MN
"PKG",26,22,1,"PAH",1,1,51,0)
 
"PKG",26,22,1,"PAH",1,1,52,0)
Associated NOIS:
"PKG",26,22,1,"PAH",1,1,53,0)
================
"PKG",26,22,1,"PAH",1,1,54,0)
N/A
"PKG",26,22,1,"PAH",1,1,55,0)
 
"PKG",26,22,1,"PAH",1,1,56,0)
Routine Summary
"PKG",26,22,1,"PAH",1,1,57,0)
===============
"PKG",26,22,1,"PAH",1,1,58,0)
 
"PKG",26,22,1,"PAH",1,1,59,0)
The following is a list of routines included in this patch.  The
"PKG",26,22,1,"PAH",1,1,60,0)
second line of each if these routines now looks like:
"PKG",26,22,1,"PAH",1,1,61,0)
 
"PKG",26,22,1,"PAH",1,1,62,0)
     <tab>;;5.2;LAB SERVICE;**[patch list]**;Sep 27, 1994
"PKG",26,22,1,"PAH",1,1,63,0)
 
"PKG",26,22,1,"PAH",1,1,64,0)
               CHECK^XTSUMBLD results
"PKG",26,22,1,"PAH",1,1,65,0)
 
"PKG",26,22,1,"PAH",1,1,66,0)
  Routine Name    Before Patch   After Patch   Patch List
"PKG",26,22,1,"PAH",1,1,67,0)
  ============    ============   ===========   ===========
"PKG",26,22,1,"PAH",1,1,68,0)
   LR326            N/A           2022894   326
"PKG",26,22,1,"PAH",1,1,69,0)
   LRCAPDAR        7334799        7585446   143,169,258,307,326  
"PKG",26,22,1,"PAH",1,1,70,0)
 
"PKG",26,22,1,"PAH",1,1,71,0)
 
"PKG",26,22,1,"PAH",1,1,72,0)
INSTALLATION INSTRUCTIONS
"PKG",26,22,1,"PAH",1,1,73,0)
=========================
"PKG",26,22,1,"PAH",1,1,74,0)
 
"PKG",26,22,1,"PAH",1,1,75,0)
The install time for this patch is less than 5 minutes.  This patch can 
"PKG",26,22,1,"PAH",1,1,76,0)
be installed when Laboratory users are on the system. Suggested time to 
"PKG",26,22,1,"PAH",1,1,77,0)
install: non-peak requirements hours.
"PKG",26,22,1,"PAH",1,1,78,0)
 
"PKG",26,22,1,"PAH",1,1,79,0)
NOTE: Patch LR*5.2*307 must be installed BEFORE this patch.
"PKG",26,22,1,"PAH",1,1,80,0)
 
"PKG",26,22,1,"PAH",1,1,81,0)
1. If LRCAPDAR is mapped, disable mapping for it.
"PKG",26,22,1,"PAH",1,1,82,0)
 
"PKG",26,22,1,"PAH",1,1,83,0)
2. Use the 'INSTALL/CHECK MESSAGE' option of the PackMan menu.
"PKG",26,22,1,"PAH",1,1,84,0)
   this option will load the KIDS patch onto your system.
"PKG",26,22,1,"PAH",1,1,85,0)
 
"PKG",26,22,1,"PAH",1,1,86,0)
3. From the 'Kernal Installation & Distribution System' (KIDS)
"PKG",26,22,1,"PAH",1,1,87,0)
   menu, select the 'Installation Menu'
"PKG",26,22,1,"PAH",1,1,88,0)
 
"PKG",26,22,1,"PAH",1,1,89,0)
4. Use the 'Verify Checksum in Tranport Global' option to
"PKG",26,22,1,"PAH",1,1,90,0)
   confirm that the correct checksums are present.
"PKG",26,22,1,"PAH",1,1,91,0)
 
"PKG",26,22,1,"PAH",1,1,92,0)
5. From the same menu select each of the following options:
"PKG",26,22,1,"PAH",1,1,93,0)
 
"PKG",26,22,1,"PAH",1,1,94,0)
   'Compare Transport Global to Current System'
"PKG",26,22,1,"PAH",1,1,95,0)
   'Backup Transport Global'
"PKG",26,22,1,"PAH",1,1,96,0)
 
"PKG",26,22,1,"PAH",1,1,97,0)
6. From the 'Installation Menu' of the KIDS menu, run the
"PKG",26,22,1,"PAH",1,1,98,0)
   option 'Install Package(s)'.  Select the package 'LR*5.2*326'
"PKG",26,22,1,"PAH",1,1,99,0)
   and proceed with the installation.
"PKG",26,22,1,"PAH",1,1,100,0)
 
"PKG",26,22,1,"PAH",1,1,101,0)
7. For each of the installation questions answer 'NO'.
"PKG",26,22,1,"PAH",1,1,102,0)
 
"PKG",26,22,1,"PAH",1,1,103,0)
8. If you unmapped the routine in step 1, rebuild your map set.
"PKG",26,22,1,"PAH",1,1,104,0)
 
"PKG",26,22,1,"PAH",1,1,105,0)
9. Routine LR326 will be deleted after a successful patch installation.
"PKG",26,22,1,"PAH",1,1,106,0)
 
"PKG",26,22,1,"PAH",1,1,107,0)
Installation Example
"PKG",26,22,1,"PAH",1,1,108,0)
====================
"PKG",26,22,1,"PAH",1,1,109,0)
 
"PKG",26,22,1,"PAH",1,1,110,0)
Select Installation Option: 6  Install Package(s) 
"PKG",26,22,1,"PAH",1,1,111,0)
Select INSTALL NAME:  LR*5.2*327     Loaded from Distribution  
"PKG",26,22,1,"PAH",1,1,112,0)
10/15/04@12:06:10 
"PKG",26,22,1,"PAH",1,1,113,0)
      => LR*5.2*326 DSS LAR SUPPORT PATCH ECX*3.0*71
"PKG",26,22,1,"PAH",1,1,114,0)
 
"PKG",26,22,1,"PAH",1,1,115,0)
This Distribution was loaded on Oct 15, 2004@12:06:10 with header of  
"PKG",26,22,1,"PAH",1,1,116,0)
 
"PKG",26,22,1,"PAH",1,1,117,0)
   LR*5.2*326 DSS LAR SUPPORT PATCH ECX*3.0*71
"PKG",26,22,1,"PAH",1,1,118,0)
   It consisted of the following Install(s): 
"PKG",26,22,1,"PAH",1,1,119,0)
     LR*5.2*326 
"PKG",26,22,1,"PAH",1,1,120,0)
Checking Install for Package LR*5.2*307 
"PKG",26,22,1,"PAH",1,1,121,0)
Will first run the Environment Check Routine, LR326 
"PKG",26,22,1,"PAH",1,1,122,0)
 
"PKG",26,22,1,"PAH",1,1,123,0)
  
"PKG",26,22,1,"PAH",1,1,124,0)
                        --- Environment Check is Ok 
"PKG",26,22,1,"PAH",1,1,125,0)
---                         
"PKG",26,22,1,"PAH",1,1,126,0)
  
"PKG",26,22,1,"PAH",1,1,127,0)
 
"PKG",26,22,1,"PAH",1,1,128,0)
Install Questions for LR*5.2*326 
"PKG",26,22,1,"PAH",1,1,129,0)
 
"PKG",26,22,1,"PAH",1,1,130,0)
Want KIDS to INHIBIT LOGONs during the install? YES// NO 
"PKG",26,22,1,"PAH",1,1,131,0)
 
"PKG",26,22,1,"PAH",1,1,132,0)
Want to DISABLE Scheduled Options, Menu Options, and Protocols? YES// NO 
"PKG",26,22,1,"PAH",1,1,133,0)
 
"PKG",26,22,1,"PAH",1,1,134,0)
Enter the Device you want to print the Install messages. 
"PKG",26,22,1,"PAH",1,1,135,0)
You can queue the install by enter a 'Q' at the device prompt. 
"PKG",26,22,1,"PAH",1,1,136,0)
Enter a '^' to abort the install. 
"PKG",26,22,1,"PAH",1,1,137,0)
 
"PKG",26,22,1,"PAH",1,1,138,0)
DEVICE: HOME//   UCX/TELNET 
"PKG",26,22,1,"PAH",1,1,139,0)
 
"PKG",26,22,1,"PAH",1,1,140,0)
  
"PKG",26,22,1,"PAH",1,1,141,0)
Install Started for LR*5.2*326 :  
"PKG",26,22,1,"PAH",1,1,142,0)
               Oct 15, 2004@09:56:40 
"PKG",26,22,1,"PAH",1,1,143,0)
  
"PKG",26,22,1,"PAH",1,1,144,0)
Build Distribution Date: Oct 15, 2004 
"PKG",26,22,1,"PAH",1,1,145,0)
                                   
"PKG",26,22,1,"PAH",1,1,146,0)
LR*5.2*326                                   
"PKG",26,22,1,"PAH",1,1,147,0)
  
"PKG",26,22,1,"PAH",1,1,148,0)
---------------------------------------- 
"PKG",26,22,1,"PAH",1,1,149,0)
  
"PKG",26,22,1,"PAH",1,1,150,0)
 Installing Routines: 
"PKG",26,22,1,"PAH",1,1,151,0)
               Oct 15, 2004@09:56:40 
"PKG",26,22,1,"PAH",1,1,152,0)
  
"PKG",26,22,1,"PAH",1,1,153,0)
 Running Pre-Install Routine: PRE^LR307 
"PKG",26,22,1,"PAH",1,1,154,0)
  
"PKG",26,22,1,"PAH",1,1,155,0)
 Running Post-Install Routine: POST^LR307 
"PKG",26,22,1,"PAH",1,1,156,0)
  
"PKG",26,22,1,"PAH",1,1,157,0)
 Updating Routine file... 
"PKG",26,22,1,"PAH",1,1,158,0)
  
"PKG",26,22,1,"PAH",1,1,159,0)
 Updating KIDS files... 
"PKG",26,22,1,"PAH",1,1,160,0)
  
"PKG",26,22,1,"PAH",1,1,161,0)
 LR*5.2*326 Installed.  
"PKG",26,22,1,"PAH",1,1,162,0)
 
"PKG",26,22,1,"PAH",1,1,163,0)
               Oct 15, 2004@09:56:40 
"PKG",26,22,1,"PAH",1,1,164,0)
  
"PKG",26,22,1,"PAH",1,1,165,0)
  
"PKG",26,22,1,"PAH",1,1,166,0)
Install Message sent  
"PKG",26,22,1,"PAH",1,1,167,0)
 
"PKG",26,22,1,"PAH",1,1,168,0)
Install Completed 
"PKG",26,22,1,"PAH",1,1,169,0)
 
"PKG",26,22,1,"PAH",1,1,170,0)
END OF INSTALLATION EXAMPLE
"PKG",26,22,1,"PAH",1,1,171,0)
=========================== 
"PRE")
LR326
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","LR326")
0^2^B4533242
"RTN","LR326",1,0)
LR326 ;DALOI/FHS - LR*5.2*326 PATCH ENVIRONMENT CHECK ROUTINE;31 -AUG-2001
"RTN","LR326",2,0)
 ;;5.2;LAB SERVICE;**326**;Sep 27,1994
"RTN","LR326",3,0)
 Q
"RTN","LR326",4,0)
ENV ; Does not prevent loading of the transport global.
"RTN","LR326",5,0)
 ; Environment check is done only during the install.
"RTN","LR326",6,0)
 ;
"RTN","LR326",7,0)
 N XQA,XQAMSG
"RTN","LR326",8,0)
 ;
"RTN","LR326",9,0)
CHKNM ; Make sure the patch name exist
"RTN","LR326",10,0)
 I '$D(XPDNM) D  G EXIT
"RTN","LR326",11,0)
 . D BMES("No valid patch name exist")
"RTN","LR326",12,0)
 . S XPDQUIT=2
"RTN","LR326",13,0)
 ;
"RTN","LR326",14,0)
 D CHECK
"RTN","LR326",15,0)
 D EXIT
"RTN","LR326",16,0)
 Q
"RTN","LR326",17,0)
 ;
"RTN","LR326",18,0)
CHECK ; Perform environment check
"RTN","LR326",19,0)
 I $S('$G(IOM):1,'$G(IOSL):1,$G(U)'="^":1,1:0) D
"RTN","LR326",20,0)
 . D BMES("Terminal Device is not defined")
"RTN","LR326",21,0)
 . S XPDQUIT=2
"RTN","LR326",22,0)
 I $S('$G(DUZ):1,$D(DUZ)[0:1,$D(DUZ(0))[0:1,1:0) D
"RTN","LR326",23,0)
 . D BMES("Please log in to set local DUZ... variables")
"RTN","LR326",24,0)
 . S XPDQUIT=2
"RTN","LR326",25,0)
 I $P($$ACTIVE^XUSER(DUZ),"^")'=1 D
"RTN","LR326",26,0)
 . D BMES("You are not a valid user on this system")
"RTN","LR326",27,0)
 . S XPDQUIT=2
"RTN","LR326",28,0)
 S XPDIQ("XPZ1","B")="NO"
"RTN","LR326",29,0)
 Q
"RTN","LR326",30,0)
 ;
"RTN","LR326",31,0)
EXIT ;
"RTN","LR326",32,0)
 N XQA
"RTN","LR326",33,0)
 I $G(XPDQUIT) D BMES("--- Install Environment Check FAILED ---") Q
"RTN","LR326",34,0)
 D BMES("--- Environment Check is Ok ---")
"RTN","LR326",35,0)
 S XQAMSG="Loading of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LR326",36,0)
 D BMES("Sending install loaded alert to mail group G.LMI")
"RTN","LR326",37,0)
 S XQA("G.LMI")=""
"RTN","LR326",38,0)
 D SETUP^XQALERT
"RTN","LR326",39,0)
 Q
"RTN","LR326",40,0)
POST ;Post Install
"RTN","LR326",41,0)
 N XQA
"RTN","LR326",42,0)
 I $G(XPDQUIT) D BMES("--- Install FAILED ---") Q
"RTN","LR326",43,0)
 D BMES("--- Install completed ---")
"RTN","LR326",44,0)
 S XQAMSG="Install of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LR326",45,0)
 D BMES("Sending install complete alert to mail group G.LMI")
"RTN","LR326",46,0)
 S XQA("G.LMI")=""
"RTN","LR326",47,0)
 D SETUP^XQALERT
"RTN","LR326",48,0)
 Q
"RTN","LR326",49,0)
BMES(STR) ;Write BMES^XPDUTL statements
"RTN","LR326",50,0)
 D BMES^XPDUTL($$CJ^XLFSTR(STR,IOM))
"RTN","LR326",51,0)
 Q
"RTN","LRCAPDAR")
0^1^B16896329
"RTN","LRCAPDAR",1,0)
LRCAPDAR ;DALOI/FHS/RBN - LAB DSS RESULTS EXTRACT (LAR)
"RTN","LRCAPDAR",2,0)
 ;;5.2;LAB SERVICE;**143,169,258,307,326**;Sep 27, 1994
"RTN","LRCAPDAR",3,0)
 ;
"RTN","LRCAPDAR",4,0)
 ; Call with Start Date (LRSDT)  End Date (LREDT) FileMan format
"RTN","LRCAPDAR",5,0)
 ; Calling routine should have already purged ^LAR(64.036)
"RTN","LRCAPDAR",6,0)
EN S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRCAPDAR",7,0)
 I $S($G(LRSDT)'?7N:1,$G(LREDT)'?7N:1,1:0) Q
"RTN","LRCAPDAR",8,0)
 L +^LAR(64.036):2 G:'$T END
"RTN","LRCAPDAR",9,0)
 N DIR,DIC,DIE,X,I,LR3,LRAA,LRAD,LRAN,LRC,LRSPDT,LRSPTM,UID,Y,DLAYGO
"RTN","LRCAPDAR",10,0)
 S DLAYGO=64
"RTN","LRCAPDAR",11,0)
 D INIT
"RTN","LRCAPDAR",12,0)
 I LRSDT>LREDT S X=LRSDT,LRSDT=LREDT,LREDT=X
"RTN","LRCAPDAR",13,0)
 S LRX1=9999999-(LRSDT_.0001),LRX2=9999999-(LREDT_.235959)
"RTN","LRCAPDAR",14,0)
 S:'$D(^LAR(64.036,0))#2 ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^2"
"RTN","LRCAPDAR",15,0)
LR K LRSP
"RTN","LRCAPDAR",16,0)
 S LRDFN=0 F  S LRDFN=$O(^LR(LRDFN)) Q:LRDFN<1  I $P($G(^LR(LRDFN,0)),U,2)=2 S LRN=^(0) D
"RTN","LRCAPDAR",17,0)
 . S DFN=$P(LRN,U,3),LRDPF=$P(LRN,U,2)
"RTN","LRCAPDAR",18,0)
 . S LRIDT=LRX2 F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:LRIDT<1!(LRIDT>LRX1)  I $D(^(LRIDT,0)),$P(^(0),U,3) S LRVSPEC=$P(^(0),U,5),LRN0=^(0) D
"RTN","LRCAPDAR",19,0)
 . . Q:'$D(LRVSPEC(LRVSPEC))  S LRSP=$E(LRVSPEC(LRVSPEC))
"RTN","LRCAPDAR",20,0)
 . . S LRSB=0 F  S LRSB=$O(LRSB(LRSP,LRSB)) Q:LRSB<2  I $D(^LR(LRDFN,"CH",LRIDT,LRSB)) S LRVR=^(LRSB) D SET
"RTN","LRCAPDAR",21,0)
 . . I $O(LRVV(0)) D FILE
"RTN","LRCAPDAR",22,0)
WRAP K DA,DR,DIC,DIE,DD,DO
"RTN","LRCAPDAR",23,0)
 S (X,DINUM)=1
"RTN","LRCAPDAR",24,0)
 S DIC="^LAR(64.036,",DIC(0)="LNM" D FILE^DICN S DA=+Y
"RTN","LRCAPDAR",25,0)
 G:Y<1 END
"RTN","LRCAPDAR",26,0)
 S DR="9///"_DT,DR(2,64.369)=".01///"_DT_";1///"_LRSDT_";2///"_LREDT_";3///"_$$NOW^LRAFUNC1_";4////"_$G(DUZ)
"RTN","LRCAPDAR",27,0)
 S DIE=DIC D ^DIE G END
"RTN","LRCAPDAR",28,0)
 Q
"RTN","LRCAPDAR",29,0)
SET S LRVV(+LRSB(LRSP,LRSB))=$P(LRVR,U)_U_$P(LRVR,U,2)_U_LRSB(LRSP,LRSB,64)
"RTN","LRCAPDAR",30,0)
 Q
"RTN","LRCAPDAR",31,0)
INIT ; ** This section modified by RBN to allow DSS to get all site/samples available from Lab
"RTN","LRCAPDAR",32,0)
 K LRVSPEC
"RTN","LRCAPDAR",33,0)
 N I,II
"RTN","LRCAPDAR",34,0)
 S I="B" F  S I=$O(^ECX(727.2,1,I)) Q:I=""!(I>0)  D
"RTN","LRCAPDAR",35,0)
 . S II=0 F  S II=$O(^ECX(727.2,1,I,II)) Q:II<1  D
"RTN","LRCAPDAR",36,0)
 . . I $D(^LAB(61,II,0))#2 S LRVSPEC(II)=I_U_$P(^(0),U)
"RTN","LRCAPDAR",37,0)
 K LRSP
"RTN","LRCAPDAR",38,0)
TEST ;
"RTN","LRCAPDAR",39,0)
 S I=0 F  S I=$O(^ECX(727.2,1,1,I)) Q:I<1  I $D(^(I,0)) S LRSP=$P(^(0),U,2) D
"RTN","LRCAPDAR",40,0)
 . S II=0 F  S II=$O(^ECX(727.2,1,1,I,"LOC",II)) Q:II<1  S LRTS=+$G(^(II,0)) I LRTS D
"RTN","LRCAPDAR",41,0)
 . . S LRSB=$P($G(^LAB(60,LRTS,0)),";",2) I LRSB,$G(^(64)) S LRSB(LRSP,LRSB)=I_U_LRTS_U_$P(^(0),U),LRSB(LRSP,LRSB,64)=$P(^(64),U)
"RTN","LRCAPDAR",42,0)
 K LRTS Q
"RTN","LRCAPDAR",43,0)
TST Q  ;S LRDBUG=1,LRSDT=2970100,LREDT=DT K ^LAR(64.036) G EN
"RTN","LRCAPDAR",44,0)
END L -^LAR(64.036)
"RTN","LRCAPDAR",45,0)
 K D,D0,D1,DA,DFN,DI,DIC,DIE,DR,I,II,LRDA,LRDPF,LRIDT,LRN,LRN0
"RTN","LRCAPDAR",46,0)
 K LRNOW,LRSB,LRSP,LRTS,LRVR,LRVSPEC,LRVV,LRX1,LRX2,X,DLAYGO
"RTN","LRCAPDAR",47,0)
 K LRDFN,D2,LRSP,LRTS,DINUM Q
"RTN","LRCAPDAR",48,0)
FILE K DR,DA,DIC,DIR,LRPROV
"RTN","LRCAPDAR",49,0)
 D UID
"RTN","LRCAPDAR",50,0)
 S LRN0T1=$P(LRN0,U),LRN0T2=$P(LRN0,U,3),LRPROV=$P(LRN0,U,10)
"RTN","LRCAPDAR",51,0)
 S $P(LRN0,U)=$S(LRN0T2<LRN0T1:LRN0T2,1:LRN0T1)
"RTN","LRCAPDAR",52,0)
 S X=$P(^LAR(64.036,0),U,3) S:X<2 X=2 F X=X:1 Q:'$D(^LAR(64.036,X))
"RTN","LRCAPDAR",53,0)
 S DA=X,DIC="^LAR(64.036,",DINUM=X,DIC(0)="LNMF"
"RTN","LRCAPDAR",54,0)
 S LRN0T1=$E($P($P(LRN0,U),".",2),1,4) S:'LRN0T1 LRN0T1=0 I LRN0T1,$E(LRN0T1,3,4)>59 S LRN0T1=$E(LRN0T1,1,2)_"59"
"RTN","LRCAPDAR",55,0)
 S LRN0T2=$E($P($P(LRN0,U,3),".",2),1,4) S:'LRN0T2 LRN0T2=0
"RTN","LRCAPDAR",56,0)
 S DIC("DR")="1///"_LRDPF_";2///"_DFN_";3///"_$P($P(LRN0,U),".")_";4///"_LRN0T1_";5///"_$P($P(LRN0,U,3),".")_";6///"_LRN0T2_";7///`"_LRVSPEC_";12///`"_LRPROV
"RTN","LRCAPDAR",57,0)
 K DD,DO D FILE^DICN K DA S LRDA=Y Q:LRDA<1
"RTN","LRCAPDAR",58,0)
 S $P(^LAR(64.036,+LRDA,0),U,9)=LRSPDT,$P(^(0),U,10)=LRSPTM
"RTN","LRCAPDAR",59,0)
F2 F LRTS=0:0 S LRTS=$O(LRVV(LRTS)) Q:LRTS<1  D DR1
"RTN","LRCAPDAR",60,0)
 K LRVV,LRN0T1,LRN0T2
"RTN","LRCAPDAR",61,0)
 Q
"RTN","LRCAPDAR",62,0)
DR1 K DR,DIC,DIR,DIE  S (X,DA)=+LRDA
"RTN","LRCAPDAR",63,0)
 S DR="8///"_LRTS
"RTN","LRCAPDAR",64,0)
 S DR(2,64.368)=".01///"_LRTS_";1///"_$P(LRVV(LRTS),U)_";2///"_$P(LRVV(LRTS),U,2)_";3///`"_$P(LRVV(LRTS),U,3)
"RTN","LRCAPDAR",65,0)
 S DIC="^LAR(64.036,"
"RTN","LRCAPDAR",66,0)
 S DIE=DIC,DIC(0)="LNM" D ^DIE
"RTN","LRCAPDAR",67,0)
 Q
"RTN","LRCAPDAR",68,0)
FIX S X=$P(^LAR(64.036,0),U,1,2) K ^LAR(64.036) S ^LAR(64.036,0)=X Q
"RTN","LRCAPDAR",69,0)
UID ;
"RTN","LRCAPDAR",70,0)
 S LRN0T2=$P(LRN0,U,3)
"RTN","LRCAPDAR",71,0)
 S LRSPDT=$P($P(LRN0,U),"."),LRSPTM=$E($P($P(LRN0,U),".",2),1,4)
"RTN","LRCAPDAR",72,0)
 D
"RTN","LRCAPDAR",73,0)
 . I 'LRSPTM S LRSPTM=1 Q
"RTN","LRCAPDAR",74,0)
 . I LRSPTM,$E(LRSPTM,3,4)>59 S LRSPTM=$E(LRSPTM,1,2)_"59"
"RTN","LRCAPDAR",75,0)
 S LRN0T1=LRSPDT_"."_LRSPTM,$P(LRN0,U)=LRN0T1
"RTN","LRCAPDAR",76,0)
 S UID=$P($G(^LR(LRDFN,"CH",LRIDT,"ORU")),U) Q:'$L(UID)
"RTN","LRCAPDAR",77,0)
 S LRC=$Q(^LRO(68,"C",UID)) Q:$QS(LRC,3)'=UID
"RTN","LRCAPDAR",78,0)
 S LRAA=$QS(LRC,4),LRAD=$QS(LRC,5),LRAN=$QS(LRC,6)
"RTN","LRCAPDAR",79,0)
 D
"RTN","LRCAPDAR",80,0)
 . N LR3,LRODT,LROODT,LRSN
"RTN","LRCAPDAR",81,0)
 . Q:'$G(^LRO(68,LRAA,1,LRAD,1,LRAN,0))  S LR3=^(0)
"RTN","LRCAPDAR",82,0)
 . S LRODT=$P(LR3,U,4),LRSN=$P(LR3,U,5)
"RTN","LRCAPDAR",83,0)
 . S LROODT=$P($G(^LRO(69,LRODT,1,LRSN,0)),U,5)
"RTN","LRCAPDAR",84,0)
 . I $G(LROODT) S $P(LRN0,U)=LROODT
"RTN","LRCAPDAR",85,0)
 Q
"VER")
8.0^22.0
"^DD",64.036,64.036,0)
FIELD^^12^13
"^DD",64.036,64.036,0,"DDA")
N
"^DD",64.036,64.036,0,"DT")
3040428
"^DD",64.036,64.036,0,"IX","B",64.036,.01)

"^DD",64.036,64.036,0,"NM","LAB DSS LAR EXTRACT")

"^DD",64.036,64.036,0,"VRPK")
LR
"^DD",64.036,64.036,.01,0)
SEQ #^RNJ8,0^^0;1^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",64.036,64.036,.01,1,0)
^.1
"^DD",64.036,64.036,.01,1,1,0)
64.036^B
"^DD",64.036,64.036,.01,1,1,1)
S ^LAR(64.036,"B",$E(X,1,30),DA)=""
"^DD",64.036,64.036,.01,1,1,2)
K ^LAR(64.036,"B",$E(X,1,30),DA)
"^DD",64.036,64.036,.01,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",64.036,64.036,.01,21,0)
^^1^1^3001114^
"^DD",64.036,64.036,.01,21,1,0)
 This is an incremental number for entries into this file.
"^DD",64.036,64.036,.01,23,0)
^^1^1^3001114^
"^DD",64.036,64.036,.01,23,1,0)
The first entry is used to record the extraction parameters.
"^DD",64.036,64.036,.01,"DT")
2970219
"^DD",64.036,64.036,1,0)
POINTED TO FILE^F^^0;2^K:$L(X)>6!($L(X)<1) X
"^DD",64.036,64.036,1,3)
Answer must be 1-6 characters in length.
"^DD",64.036,64.036,1,21,0)
^^2^2^3001114^
"^DD",64.036,64.036,1,21,1,0)
This field contains the point to the file that identifies the specimen
"^DD",64.036,64.036,1,21,2,0)
source.
"^DD",64.036,64.036,1,"DT")
2970219
"^DD",64.036,64.036,2,0)
DFN^NJ10,0^^0;3^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",64.036,64.036,2,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",64.036,64.036,2,21,0)
^^2^2^3001114^
"^DD",64.036,64.036,2,21,1,0)
This field contains the IEN of the pointed to file identified in POINTED
"^DD",64.036,64.036,2,21,2,0)
TO FILE (#1) field.
"^DD",64.036,64.036,2,"DT")
2970219
"^DD",64.036,64.036,3,0)
DATE ORDERED^D^^0;4^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",64.036,64.036,3,21,0)
^^1^1^3001114^
"^DD",64.036,64.036,3,21,1,0)
 This field contains the date the order was placed.
"^DD",64.036,64.036,3,"DT")
2970219
"^DD",64.036,64.036,4,0)
TIME ORDERED^F^^0;5^K:$L(X)>7!($L(X)<1) X
"^DD",64.036,64.036,4,3)
Answer must be 1-7 characters in length.
"^DD",64.036,64.036,4,21,0)
^^1^1^3001114^
"^DD",64.036,64.036,4,21,1,0)
This field contains the time the order was placed.
"^DD",64.036,64.036,4,"DT")
2970219
"^DD",64.036,64.036,5,0)
DATE RESULTS AVAIL^D^^0;6^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",64.036,64.036,5,21,0)
^^2^2^3001114^
"^DD",64.036,64.036,5,21,1,0)
This field contains the date the results were available (verified and
"^DD",64.036,64.036,5,21,2,0)
released).
"^DD",64.036,64.036,5,"DT")
2970219
"^DD",64.036,64.036,6,0)
TIME RESULTS AVAIL^F^^0;7^K:$L(X)>7!($L(X)<1) X
"^DD",64.036,64.036,6,3)
Answer must be 1-7 characters in length.
"^DD",64.036,64.036,6,21,0)
^^2^2^3001114^
"^DD",64.036,64.036,6,21,1,0)
This field contains the time the results were available (verified and
"^DD",64.036,64.036,6,21,2,0)
released).
"^DD",64.036,64.036,6,"DT")
2970219
"^DD",64.036,64.036,7,0)
SPECIMEN^P61'^LAB(61,^0;8^Q
"^DD",64.036,64.036,7,21,0)
^^2^2^3001114^
"^DD",64.036,64.036,7,21,1,0)
This field contains the pointer to TOPOGRAPHY FIELD (#61) file to identify
"^DD",64.036,64.036,7,21,2,0)
the specimen source.
"^DD",64.036,64.036,7,"DT")
2970219
"^DD",64.036,64.036,8,0)
RESULTS^64.368^^1;0
"^DD",64.036,64.036,8,21,0)
^^2^2^3001114^
"^DD",64.036,64.036,8,21,1,0)
This is a multiple that contains result information for the extracted
"^DD",64.036,64.036,8,21,2,0)
tests.
"^DD",64.036,64.036,9,0)
EXTRACTION DATA^64.369DA^^2;0
"^DD",64.036,64.036,9,21,0)
^^3^3^3001114^
"^DD",64.036,64.036,9,21,1,0)
This is a multiple field to extraction parameters. Usually there is only
"^DD",64.036,64.036,9,21,2,0)
one created and it is created for the first entry. Test extraction result
"^DD",64.036,64.036,9,21,3,0)
data is stored the next available internal entry number.
"^DD",64.036,64.036,10,0)
SPECIMEN COLLECTION DATE^D^^0;9^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",64.036,64.036,10,21,0)
^.001^1^1^3001114^^
"^DD",64.036,64.036,10,21,1,0)
 The date specimen was collected.
"^DD",64.036,64.036,10,"DT")
3000608
"^DD",64.036,64.036,11,0)
SPECIMEN COLLECTION TIME^F^^0;10^K:$L(X)>7!($L(X)<1) X
"^DD",64.036,64.036,11,3)
Answer must be 1-7 characters in length.
"^DD",64.036,64.036,11,21,0)
^.001^1^1^3001114^^
"^DD",64.036,64.036,11,21,1,0)
 The time the specimen was collected.
"^DD",64.036,64.036,11,"DT")
3000608
"^DD",64.036,64.036,12,0)
PROVIDER^P200'^VA(200,^0;11^Q
"^DD",64.036,64.036,12,21,0)
^^1^1^3040428^
"^DD",64.036,64.036,12,21,1,0)
This is the ordering provider of record for this set of test results.
"^DD",64.036,64.036,12,"DT")
3040428
"^DD",64.036,64.368,0)
RESULTS SUB-FIELD^^3^4
"^DD",64.036,64.368,0,"DT")
3021122
"^DD",64.036,64.368,0,"IX","B",64.368,.01)

"^DD",64.036,64.368,0,"NM","RESULTS")

"^DD",64.036,64.368,0,"UP")
64.036
"^DD",64.036,64.368,.01,0)
DSS TEST NUMBER^MNJ3,0^^0;1^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
"^DD",64.036,64.368,.01,1,0)
^.1
"^DD",64.036,64.368,.01,1,1,0)
64.368^B
"^DD",64.036,64.368,.01,1,1,1)
S ^LAR(64.036,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",64.036,64.368,.01,1,1,2)
K ^LAR(64.036,DA(1),1,"B",$E(X,1,30),DA)
"^DD",64.036,64.368,.01,3)
Type a Number between 1 and 300, 0 Decimal Digits
"^DD",64.036,64.368,.01,"DT")
3021122
"^DD",64.036,64.368,1,0)
RESULTS^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",64.036,64.368,1,3)
Answer must be 1-10 characters in length.
"^DD",64.036,64.368,1,21,0)
^^1^1^3001114^
"^DD",64.036,64.368,1,21,1,0)
This field contains the result value extracted for the test.
"^DD",64.036,64.368,1,"DT")
2970219
"^DD",64.036,64.368,2,0)
HI/LO FLAG^F^^0;3^K:$L(X)>2!($L(X)<1) X
"^DD",64.036,64.368,2,3)
Answer must be 1-2 characters in length.
"^DD",64.036,64.368,2,21,0)
^^6^6^3001114^
"^DD",64.036,64.368,2,21,1,0)
This field contains the result high/low flags if appropriate.
"^DD",64.036,64.368,2,21,2,0)
Were:
"^DD",64.036,64.368,2,21,3,0)
 L=low
"^DD",64.036,64.368,2,21,4,0)
*L=critical low
"^DD",64.036,64.368,2,21,5,0)
 H=high
"^DD",64.036,64.368,2,21,6,0)
*H=critical high
"^DD",64.036,64.368,2,"DT")
2970219
"^DD",64.036,64.368,3,0)
NLT CODE^P64'^LAM(^0;4^Q
"^DD",64.036,64.368,3,21,0)
^^2^2^3001114^
"^DD",64.036,64.368,3,21,1,0)
This field contains the pointer to WKLD CODE FILE (#64) file to identify
"^DD",64.036,64.368,3,21,2,0)
the results using laboratory specified National Laboratory Tests codes.
"^DD",64.036,64.368,3,"DT")
2970219
"^DD",64.036,64.369,0)
EXTRACTION DATA SUB-FIELD^^4^5
"^DD",64.036,64.369,0,"DT")
2970219
"^DD",64.036,64.369,0,"IX","B",64.369,.01)

"^DD",64.036,64.369,0,"NM","EXTRACTION DATA")

"^DD",64.036,64.369,0,"UP")
64.036
"^DD",64.036,64.369,.01,0)
EXTRACTION DATE^D^^0;1^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",64.036,64.369,.01,1,0)
^.1
"^DD",64.036,64.369,.01,1,1,0)
64.369^B
"^DD",64.036,64.369,.01,1,1,1)
S ^LAR(64.036,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",64.036,64.369,.01,1,1,2)
K ^LAR(64.036,DA(1),2,"B",$E(X,1,30),DA)
"^DD",64.036,64.369,.01,21,0)
^^1^1^3001114^
"^DD",64.036,64.369,.01,21,1,0)
This field contains the date of the data extraction.
"^DD",64.036,64.369,.01,"DT")
2970219
"^DD",64.036,64.369,1,0)
EXTRACT START DATE^D^^0;2^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",64.036,64.369,1,21,0)
^^2^2^3001114^
"^DD",64.036,64.369,1,21,1,0)
This field contains the request date to begin extraction of result values.
"^DD",64.036,64.369,1,21,2,0)
This value is passed in via the LRSDT variable by the calling application.
"^DD",64.036,64.369,1,"DT")
2970219
"^DD",64.036,64.369,2,0)
EXTRACT END DATE^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",64.036,64.369,2,21,0)
^^2^2^3001114^
"^DD",64.036,64.369,2,21,1,0)
This the requested end extraction of test results. This is pass in via the
"^DD",64.036,64.369,2,21,2,0)
variable LREDT by the calling application.
"^DD",64.036,64.369,2,23,0)
^^3^3^3001114^
"^DD",64.036,64.369,2,23,1,0)
If the start date and end date are not in numeric order, the software will
"^DD",64.036,64.369,2,23,2,0)
reverse the dates. The extraction dates times are from 0001 hours of the
"^DD",64.036,64.369,2,23,3,0)
start date to 2400 hours of the end date.
"^DD",64.036,64.369,2,"DT")
2970219
"^DD",64.036,64.369,3,0)
COMPLETED D/T^D^^0;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",64.036,64.369,3,21,0)
^^1^1^3001114^
"^DD",64.036,64.369,3,21,1,0)
This field contains the date/time the extraction was completed.
"^DD",64.036,64.369,3,"DT")
2970219
"^DD",64.036,64.369,4,0)
USER^P200'^VA(200,^0;5^Q
"^DD",64.036,64.369,4,21,0)
^^2^2^3001114^
"^DD",64.036,64.369,4,21,1,0)
This field contains the DUZ of the person that requested the extraction of
"^DD",64.036,64.369,4,21,2,0)
data. This field is a pointer to NEW PERSON (#200) file.
"^DD",64.036,64.369,4,"DT")
2970219
"^DIC",64.036,64.036,0)
LAB DSS LAR EXTRACT^64.036
"^DIC",64.036,64.036,0,"GL")
^LAR(64.036,
"^DIC",64.036,64.036,"%",0)
^1.005^^0
"^DIC",64.036,64.036,"%D",0)
^^20^20^3001114^
"^DIC",64.036,64.036,"%D",1,0)
This file is used to store extracted DSS clinical data. The calling
"^DIC",64.036,64.036,"%D",2,0)
application is responsible for purging the data before and after a call is
"^DIC",64.036,64.036,"%D",3,0)
made to the laboratory API routine LRCAPDAR.
"^DIC",64.036,64.036,"%D",4,0)
 
"^DIC",64.036,64.036,"%D",5,0)
The structure and contents of this file is to support DSS extraction of
"^DIC",64.036,64.036,"%D",6,0)
specific clinical values to monitor patient treatment effectiveness.
"^DIC",64.036,64.036,"%D",7,0)
 
"^DIC",64.036,64.036,"%D",8,0)
This file is not for local use and should only be used by the DSS calling
"^DIC",64.036,64.036,"%D",9,0)
application.
"^DIC",64.036,64.036,"%D",10,0)
 
"^DIC",64.036,64.036,"%D",11,0)
This file is solely for DSS utilization.
"^DIC",64.036,64.036,"%D",12,0)
 
"^DIC",64.036,64.036,"%D",13,0)
Criteria for data extraction of clinical values is specified the DSS LAB
"^DIC",64.036,64.036,"%D",14,0)
TESTS (#727.2) file. The file is populated by the DSS Coordinator with the
"^DIC",64.036,64.036,"%D",15,0)
advise of the Laboratory Information Manager (LIM). Populating DSS LAB
"^DIC",64.036,64.036,"%D",16,0)
TESTS file without the approval of the LIM will lead to unexpected or
"^DIC",64.036,64.036,"%D",17,0)
unreliable data extraction performance.
"^DIC",64.036,64.036,"%D",18,0)
 
"^DIC",64.036,64.036,"%D",19,0)
Normally there is no residual data stored in this file and journaling is
"^DIC",64.036,64.036,"%D",20,0)
not required.
"^DIC",64.036,"B","LAB DSS LAR EXTRACT",64.036)

**END**
**END**
