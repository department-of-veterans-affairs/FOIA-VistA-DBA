Released PSA*3*60 SEQ #47
Extracted from mail message
**KIDS**:PSA*3.0*60^

**INSTALL NAME**
PSA*3.0*60
"BLD",6905,0)
PSA*3.0*60^DRUG ACCOUNTABILITY^0^3061107^y
"BLD",6905,1,0)
^^33^33^3061019^
"BLD",6905,1,1,0)
This patch addresses the following problems:
"BLD",6905,1,2,0)
 
"BLD",6905,1,3,0)
1.  67941  PSAPROC1   undefined in PSAPROC1
"BLD",6905,1,4,0)
If a Controlled Substance (CS) drug has not been assigned to a master 
"BLD",6905,1,5,0)
vault, the  subsequent code path  is killing variables it will be needing 
"BLD",6905,1,6,0)
later when it returns from the call to perform vault selection.
"BLD",6905,1,7,0)
 
"BLD",6905,1,8,0)
2.  68039  PSAPROC3   default date
"BLD",6905,1,9,0)
The data element in invoices that represents the receive date, under 
"BLD",6905,1,10,0)
terms of the McKesson contract, is the date they deposit the invoice into 
"BLD",6905,1,11,0)
their output directories for sites to access. The default date in VistA 
"BLD",6905,1,12,0)
DA terms had been and is, the received at site date. Management has
"BLD",6905,1,13,0)
determined it is best to require the users to manually enter the receive 
"BLD",6905,1,14,0)
date than to present a default date which is never correct and should not 
"BLD",6905,1,15,0)
be accepted.
"BLD",6905,1,16,0)
 
"BLD",6905,1,17,0)
3.  68532  PSADRUGP   <UNDEFINED>DISP~PSADRUGP
"BLD",6905,1,18,0)
The "Enter/Edit a Drug" [PSA PV DRUG ENTER/EDIT] errors when the drugs
"BLD",6905,1,19,0)
inactivation date is less then the day of the data entry.
"BLD",6905,1,20,0)
 
"BLD",6905,1,21,0)
4. 131384  PSAVER2   Error using Verify Invoice [PSA VERIFY INVOICES] 
"BLD",6905,1,22,0)
When verifying invoices, the application errors if the data in the
"BLD",6905,1,23,0)
processed invoice contains a semicolon. 
"BLD",6905,1,24,0)
 
"BLD",6905,1,25,0)
5. 134108  PSAVER, PSAVER1, PSAVER4      Invoice approved twice
"BLD",6905,1,26,0)
During Invoice Verification, multiple users are aloud to select the same
"BLD",6905,1,27,0)
invoice and verify it.  The quantities in the DRUG file (#50) are updated 
"BLD",6905,1,28,0)
each time the invoice is verified.
"BLD",6905,1,29,0)
 
"BLD",6905,1,30,0)
6.   154985     PSAVER1    Invoice not verified, but message appears
"BLD",6905,1,31,0)
Invoices are being marked as verified at the line item level when using 
"BLD",6905,1,32,0)
the Verify Invoices [PSA VERIFY INVOICES] option and selecting an
"BLD",6905,1,33,0)
invoice from the <<< EDIT INVOICES TO BE VERIFIED SCREEN >>>
"BLD",6905,4,0)
^9.64PA^58.811^1
"BLD",6905,4,58.811,0)
58.811
"BLD",6905,4,58.811,2,0)
^9.641^58.8112^1
"BLD",6905,4,58.811,2,58.8112,0)
INVOICE DATA  (sub-file)
"BLD",6905,4,58.811,2,58.8112,1,0)
^9.6411^2^1
"BLD",6905,4,58.811,2,58.8112,1,2,0)
INVOICE STATUS
"BLD",6905,4,58.811,222)
y^y^p^^^^n^^n
"BLD",6905,4,58.811,224)

"BLD",6905,4,"APDD",58.811,58.8112)

"BLD",6905,4,"APDD",58.811,58.8112,2)

"BLD",6905,4,"B",58.811,58.811)

"BLD",6905,6.3)
4
"BLD",6905,"ABPKG")
n
"BLD",6905,"KRN",0)
^9.67PA^8989.52^19
"BLD",6905,"KRN",.4,0)
.4
"BLD",6905,"KRN",.401,0)
.401
"BLD",6905,"KRN",.402,0)
.402
"BLD",6905,"KRN",.403,0)
.403
"BLD",6905,"KRN",.5,0)
.5
"BLD",6905,"KRN",.84,0)
.84
"BLD",6905,"KRN",3.6,0)
3.6
"BLD",6905,"KRN",3.8,0)
3.8
"BLD",6905,"KRN",9.2,0)
9.2
"BLD",6905,"KRN",9.8,0)
9.8
"BLD",6905,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",6905,"KRN",9.8,"NM",1,0)
PSAVER^^0^B76434485
"BLD",6905,"KRN",9.8,"NM",2,0)
PSAVER1^^0^B53904582
"BLD",6905,"KRN",9.8,"NM",3,0)
PSAVER4^^0^B15659954
"BLD",6905,"KRN",9.8,"NM",4,0)
PSADRUGP^^0^B22701616
"BLD",6905,"KRN",9.8,"NM",5,0)
PSAPROC1^^0^B40487833
"BLD",6905,"KRN",9.8,"NM",6,0)
PSAPROC3^^0^B51608562
"BLD",6905,"KRN",9.8,"NM",7,0)
PSAVER2^^0^B48168766
"BLD",6905,"KRN",9.8,"NM","B","PSADRUGP",4)

"BLD",6905,"KRN",9.8,"NM","B","PSAPROC1",5)

"BLD",6905,"KRN",9.8,"NM","B","PSAPROC3",6)

"BLD",6905,"KRN",9.8,"NM","B","PSAVER",1)

"BLD",6905,"KRN",9.8,"NM","B","PSAVER1",2)

"BLD",6905,"KRN",9.8,"NM","B","PSAVER2",7)

"BLD",6905,"KRN",9.8,"NM","B","PSAVER4",3)

"BLD",6905,"KRN",19,0)
19
"BLD",6905,"KRN",19.1,0)
19.1
"BLD",6905,"KRN",101,0)
101
"BLD",6905,"KRN",409.61,0)
409.61
"BLD",6905,"KRN",771,0)
771
"BLD",6905,"KRN",870,0)
870
"BLD",6905,"KRN",8989.51,0)
8989.51
"BLD",6905,"KRN",8989.52,0)
8989.52
"BLD",6905,"KRN",8994,0)
8994
"BLD",6905,"KRN","B",.4,.4)

"BLD",6905,"KRN","B",.401,.401)

"BLD",6905,"KRN","B",.402,.402)

"BLD",6905,"KRN","B",.403,.403)

"BLD",6905,"KRN","B",.5,.5)

"BLD",6905,"KRN","B",.84,.84)

"BLD",6905,"KRN","B",3.6,3.6)

"BLD",6905,"KRN","B",3.8,3.8)

"BLD",6905,"KRN","B",9.2,9.2)

"BLD",6905,"KRN","B",9.8,9.8)

"BLD",6905,"KRN","B",19,19)

"BLD",6905,"KRN","B",19.1,19.1)

"BLD",6905,"KRN","B",101,101)

"BLD",6905,"KRN","B",409.61,409.61)

"BLD",6905,"KRN","B",771,771)

"BLD",6905,"KRN","B",870,870)

"BLD",6905,"KRN","B",8989.51,8989.51)

"BLD",6905,"KRN","B",8989.52,8989.52)

"BLD",6905,"KRN","B",8994,8994)

"BLD",6905,"QUES",0)
^9.62^^
"BLD",6905,"REQB",0)
^9.611^4^4
"BLD",6905,"REQB",1,0)
PSA*3.0*15^1
"BLD",6905,"REQB",2,0)
PSA*3.0*21^1
"BLD",6905,"REQB",3,0)
PSA*3.0*33^1
"BLD",6905,"REQB",4,0)
PSA*3.0*50^1
"BLD",6905,"REQB","B","PSA*3.0*15",1)

"BLD",6905,"REQB","B","PSA*3.0*21",2)

"BLD",6905,"REQB","B","PSA*3.0*33",3)

"BLD",6905,"REQB","B","PSA*3.0*50",4)

"FIA",58.811)
DRUG ACCOUNTABILITY ORDER
"FIA",58.811,0)
^PSD(58.811,
"FIA",58.811,0,0)
58.811
"FIA",58.811,0,1)
y^y^p^^^^n^^n
"FIA",58.811,0,10)

"FIA",58.811,0,11)

"FIA",58.811,0,"RLRO")

"FIA",58.811,0,"VR")
3.0^PSA
"FIA",58.811,58.811)
1
"FIA",58.811,58.8112)
1
"FIA",58.811,58.8112,2)

"MBREQ")
0
"PKG",487,-1)
1^1
"PKG",487,0)
DRUG ACCOUNTABILITY^PSA^Drug Accountability Inventory and Tracking module.
"PKG",487,20,0)
^9.402P^^
"PKG",487,22,0)
^9.49I^1^1
"PKG",487,22,1,0)
3.0^2971024^2981028^66481
"PKG",487,22,1,"PAH",1,0)
60^3061107^100104
"PKG",487,22,1,"PAH",1,1,0)
^^33^33^3061107
"PKG",487,22,1,"PAH",1,1,1,0)
This patch addresses the following problems:
"PKG",487,22,1,"PAH",1,1,2,0)
 
"PKG",487,22,1,"PAH",1,1,3,0)
1.  67941  PSAPROC1   undefined in PSAPROC1
"PKG",487,22,1,"PAH",1,1,4,0)
If a Controlled Substance (CS) drug has not been assigned to a master 
"PKG",487,22,1,"PAH",1,1,5,0)
vault, the  subsequent code path  is killing variables it will be needing 
"PKG",487,22,1,"PAH",1,1,6,0)
later when it returns from the call to perform vault selection.
"PKG",487,22,1,"PAH",1,1,7,0)
 
"PKG",487,22,1,"PAH",1,1,8,0)
2.  68039  PSAPROC3   default date
"PKG",487,22,1,"PAH",1,1,9,0)
The data element in invoices that represents the receive date, under 
"PKG",487,22,1,"PAH",1,1,10,0)
terms of the McKesson contract, is the date they deposit the invoice into 
"PKG",487,22,1,"PAH",1,1,11,0)
their output directories for sites to access. The default date in VistA 
"PKG",487,22,1,"PAH",1,1,12,0)
DA terms had been and is, the received at site date. Management has
"PKG",487,22,1,"PAH",1,1,13,0)
determined it is best to require the users to manually enter the receive 
"PKG",487,22,1,"PAH",1,1,14,0)
date than to present a default date which is never correct and should not 
"PKG",487,22,1,"PAH",1,1,15,0)
be accepted.
"PKG",487,22,1,"PAH",1,1,16,0)
 
"PKG",487,22,1,"PAH",1,1,17,0)
3.  68532  PSADRUGP   <UNDEFINED>DISP~PSADRUGP
"PKG",487,22,1,"PAH",1,1,18,0)
The "Enter/Edit a Drug" [PSA PV DRUG ENTER/EDIT] errors when the drugs
"PKG",487,22,1,"PAH",1,1,19,0)
inactivation date is less then the day of the data entry.
"PKG",487,22,1,"PAH",1,1,20,0)
 
"PKG",487,22,1,"PAH",1,1,21,0)
4. 131384  PSAVER2   Error using Verify Invoice [PSA VERIFY INVOICES] 
"PKG",487,22,1,"PAH",1,1,22,0)
When verifying invoices, the application errors if the data in the
"PKG",487,22,1,"PAH",1,1,23,0)
processed invoice contains a semicolon. 
"PKG",487,22,1,"PAH",1,1,24,0)
 
"PKG",487,22,1,"PAH",1,1,25,0)
5. 134108  PSAVER, PSAVER1, PSAVER4      Invoice approved twice
"PKG",487,22,1,"PAH",1,1,26,0)
During Invoice Verification, multiple users are aloud to select the same
"PKG",487,22,1,"PAH",1,1,27,0)
invoice and verify it.  The quantities in the DRUG file (#50) are updated 
"PKG",487,22,1,"PAH",1,1,28,0)
each time the invoice is verified.
"PKG",487,22,1,"PAH",1,1,29,0)
 
"PKG",487,22,1,"PAH",1,1,30,0)
6.   154985     PSAVER1    Invoice not verified, but message appears
"PKG",487,22,1,"PAH",1,1,31,0)
Invoices are being marked as verified at the line item level when using 
"PKG",487,22,1,"PAH",1,1,32,0)
the Verify Invoices [PSA VERIFY INVOICES] option and selecting an
"PKG",487,22,1,"PAH",1,1,33,0)
invoice from the <<< EDIT INVOICES TO BE VERIFIED SCREEN >>>
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","PSADRUGP")
0^4^B22701616^B22313421
"RTN","PSADRUGP",1,0)
PSADRUGP ;BIR/LTL,JMB-Enter/Edit a Drug ;7/23/97
"RTN","PSADRUGP",2,0)
 ;;3.0; DRUG ACCOUNTABILITY/INVENTORY INTERFACE;**3,21,60**; 10/24/97;Build 4
"RTN","PSADRUGP",3,0)
 ;
"RTN","PSADRUGP",4,0)
 ;References to ^PSDRUG( are covered by IA #2095
"RTN","PSADRUGP",5,0)
 ;References to ^PS(52.6, are covered by IA #270
"RTN","PSADRUGP",6,0)
 ;References to ^DIC(51.5 are covered by IA #1931
"RTN","PSADRUGP",7,0)
 ;References to ^PS(52.7 are covered by IA #770
"RTN","PSADRUGP",8,0)
LOC G:+$G(PSAOUT)&($G(PSACNT)=1) EXIT
"RTN","PSADRUGP",9,0)
 S (PSADD,PSACNT,PSAOUT)=0,PSASLN="",$P(PSASLN,"-",80)=""
"RTN","PSADRUGP",10,0)
 D ^PSAUTL3 G:PSAOUT EXIT S PSACHK=$O(PSALOC(""))
"RTN","PSADRUGP",11,0)
 I PSACHK="",'PSALOC W !,"There are no active pharmacy locations." G EXIT
"RTN","PSADRUGP",12,0)
 I $O(PSALOC(PSACHK))="" W !,PSALOCN
"RTN","PSADRUGP",13,0)
 ;
"RTN","PSADRUGP",14,0)
GETDRUG S PSAQTY=0
"RTN","PSADRUGP",15,0)
 S:'$D(^PSD(58.8,PSALOC,1,0)) ^(0)="^58.8001IP^^"
"RTN","PSADRUGP",16,0)
 S DA(1)=PSALOC,DIC="^PSD(58.8,"_PSALOC_",1,",DIC(0)="AEMQL",DIC("W")="I $S($P($G(^(0)),U,14):$P($G(^(0)),U,14)'>DT,1:0) W $C(7),""   *** INACTIVE ***""",DLAYGO=58.8 W ! D ^DIC K DIC,DLAYGO
"RTN","PSADRUGP",17,0)
 I Y<0!($G(DTOUT))!($G(DUOUT)) S PSAOUT=1 Q:$G(PSAOPT)="PSALOC"  G LOC
"RTN","PSADRUGP",18,0)
 S PSADRG=+Y,PSADRGN=$P($G(^PSDRUG(PSADRG,0)),"^")
"RTN","PSADRUGP",19,0)
 I $D(^PSD(58.8,PSALOC,1,PSADRG,0)),+$P(^(0),"^",14),$P(^(0),"^",14)'>DT W !,$C(7),"   *** INACTIVE ***" G DISP ;PSA*3*21 (Allow re-activation)
"RTN","PSADRUGP",20,0)
 S PSA660=$G(^PSDRUG(PSADRG,660))
"RTN","PSADRUGP",21,0)
 I '$D(^PSD(58.8,PSALOC,1,PSADRG,0)) G NOINV
"RTN","PSADRUGP",22,0)
 I $D(^PSD(58.8,PSALOC,1,PSADRG,0)),$P(^(0),"^",4)="" G DRUG
"RTN","PSADRUGP",23,0)
 G DISP
"RTN","PSADRUGP",24,0)
 ;
"RTN","PSADRUGP",25,0)
NOINV I '$D(^PSD(58.8,PSALOC,1,PSADRG,0)) D
"RTN","PSADRUGP",26,0)
 .S:'$D(^PSD(58.8,PSALOC,1,0)) ^(0)="^58.8001IP^^"
"RTN","PSADRUGP",27,0)
 .K DA,DD,DO S DIC="^PSD(58.8,"_PSALOC_",1,",DIC(0)="LM",DA(1)=PSALOC,(X,DINUM)=PSADRG,DLAYGO=58.8 D ^DIC K DIC,DINUM,DLAYGO
"RTN","PSADRUGP",28,0)
DRUG S DIE="^PSD(58.8,"_PSALOC_",1,",DA(1)=PSALOC,DA=PSADRG,DR="3Enter total "_$P(PSA660,"^",8)_" currently on hand: "
"RTN","PSADRUGP",29,0)
 W @IOF,!,$G(PSALOCN),!,"DRUG: "_PSADRGN
"RTN","PSADRUGP",30,0)
 D:+$P(PSA660,"^",2)
"RTN","PSADRUGP",31,0)
 .W !!?30,"DRUG FILE info:",!
"RTN","PSADRUGP",32,0)
 .W ?20,"Order unit: "_$P(^DIC(51.5,$P(PSA660,"^",2),0),"^",1),!?20,"Dispense units per order unit: "_$P(PSA660,"^",5),!?20,"Dispense unit: "_$P(PSA660,"^",8)
"RTN","PSADRUGP",33,0)
 .W !!,"Current Inventory from the DRUG file = "_$P($G(^PSDRUG(PSADRG,660.1)),"^")
"RTN","PSADRUGP",34,0)
 I '$P(^PSD(58.8,PSALOC,1,PSADRG,0),"^",4) D
"RTN","PSADRUGP",35,0)
 .W !!,"Once an initial quantity is entered, it can only be updated by receiving,",!,"dispensing, adjusting, or transferring."
"RTN","PSADRUGP",36,0)
 .W:+$P(PSA660,"^",2) " The Current Inventory from the",!,"DRUG file is only offered as an initial balance and and is NOT updated."
"RTN","PSADRUGP",37,0)
 F  L +^PSD(58.8,PSALOC,1,PSADRG,0):0 I  Q
"RTN","PSADRUGP",38,0)
 W ! D ^DIE L -^PSD(58.8,PSALOC,1,PSADRG,0) K DA,DIE G:$D(Y) LOC
"RTN","PSADRUGP",39,0)
 S PSAQTY=X
"RTN","PSADRUGP",40,0)
 I +$P($G(^PSD(58.8,PSALOC,0)),"^",14) D
"RTN","PSADRUGP",41,0)
 .S DIE="^PSD(58.8,"_PSALOC_",1,",DA(1)=PSALOC,DA=PSADRG,DR="2Stock Level: ;4Reorder Level: "
"RTN","PSADRUGP",42,0)
 .F  L +^PSD(58.8,PSALOC,1,PSADRG,0):0 I  Q
"RTN","PSADRUGP",43,0)
 .D ^DIE L -^PSD(58.8,PSALOC,1,PSADRG,0) K DA,DIE
"RTN","PSADRUGP",44,0)
DISP ;
"RTN","PSADRUGP",45,0)
 S:'$D(PSA660) PSA660=$G(^PSDRUG(PSADRG,660)) ;*60
"RTN","PSADRUGP",46,0)
 W !!,"Current balance:  "_+$P($G(^PSD(58.8,PSALOC,1,PSADRG,0)),"^",4)," ",$P(PSA660,"^",8)
"RTN","PSADRUGP",47,0)
 ;PSA*3*21 (Give option of inactivation - Dave B)
"RTN","PSADRUGP",48,0)
 S DIE="^PSD(58.8,"_PSALOC_",1,",DA(1)=PSALOC,DA=PSADRG,DR="13;14" D ^DIE K DIE,DR
"RTN","PSADRUGP",49,0)
 S PSAIT=PSADRG,PSAIT(2)=PSADRGN,PSAIT(4)=$G(^PSDRUG(PSAIT,660)) D:$O(^PS(52.6,"AC",PSADRG,0))!($O(^PS(52.7,"AC",PSADRG,0))) ^PSAPSI4
"RTN","PSADRUGP",50,0)
 G:'$G(PSAQTY) GETDRUG
"RTN","PSADRUGP",51,0)
 D NOW^%DTC S PSADT=+$E(%,1,12)
"RTN","PSADRUGP",52,0)
MON S:'$D(^PSD(58.8,PSALOC,1,PSADRG,5,0)) ^PSD(58.8,PSALOC,1,PSADRG,5,0)="^58.801A^^"
"RTN","PSADRUGP",53,0)
 I '$D(^PSD(58.8,PSALOC,1,PSADRG,5,+($E(DT,1,5)*100),0)) S DIC="^PSD(58.8,"_PSALOC_",1,"_PSADRG_",5,",DIC(0)="LM",(X,DINUM)=($E(DT,1,5)*100),DA(2)=PSALOC,DA(1)=PSADRG,DLAYGO=58.8 D ^DIC K DA,DIC,DLAYGO
"RTN","PSADRUGP",54,0)
 S DIE="^PSD(58.8,"_PSALOC_",1,"_PSADRG_",5,",DA(2)=PSALOC,DA(1)=PSADRG,DA=($E(DT,1,5)*100),DR="1////^S X=PSAQTY;7////^S X=PSAQTY" D ^DIE K DA,DIE
"RTN","PSADRUGP",55,0)
 W !!,"Updating beginning balance and transaction history."
"RTN","PSADRUGP",56,0)
 F  L +^PSD(58.81,0):0 I  Q
"RTN","PSADRUGP",57,0)
FIND S PSAT=$P(^PSD(58.81,0),"^",3)+1 I $D(^PSD(58.81,PSAT)) S $P(^PSD(58.81,0),"^",3)=$P(^PSD(58.81,0),"^",3)+1 G FIND
"RTN","PSADRUGP",58,0)
 S DIC="^PSD(58.81,",DIC(0)="L",DLAYGO=58.81,(DINUM,X)=PSAT D ^DIC
"RTN","PSADRUGP",59,0)
 L -^PSD(58.81,0) K DIC,DLAYGO
"RTN","PSADRUGP",60,0)
 S DIE="^PSD(58.81,",DA=PSAT,DR="1////11;2////^S X=PSALOC;3////^S X=PSADT;4////^S X=PSADRG;5////^S X=PSAQTY;6////^S X=DUZ;9////0" D ^DIE K DIE,DA
"RTN","PSADRUGP",61,0)
 S:'$D(^PSD(58.8,PSALOC,1,PSADRG,4,0)) ^PSD(58.8,PSALOC,1,PSADRG,4,0)="^58.800119PA^^"
"RTN","PSADRUGP",62,0)
 S DIC="^PSD(58.8,"_PSALOC_",1,"_PSADRG_",4,",DIC(0)="LM",(X,DINUM)=PSAT
"RTN","PSADRUGP",63,0)
 S DA(2)=PSALOC,DA(1)=PSADRG,DLAYGO=58.8 D ^DIC K DA,DIC,DLAYGO
"RTN","PSADRUGP",64,0)
 G GETDRUG
"RTN","PSADRUGP",65,0)
EXIT K %,DA,DIC,DIE,DINUM,DR,DTOUT,DUOUT,PSA660,PSACHK,PSACNT,PSADD,PSADRG,PSADRGN,PSADT,PSALOC,PSALOCA,PSALOCN,PSAOUT,PSAQTY,PSASLN,PSAT,X,Y
"RTN","PSADRUGP",66,0)
 Q
"RTN","PSAPROC1")
0^5^B40487833^B40499741
"RTN","PSAPROC1",1,0)
PSAPROC1 ;BIR/JMB-Process Uploaded Prime Vendor Invoice Data - CONT'D ;7/23/97
"RTN","PSAPROC1",2,0)
 ;;3.0; DRUG ACCOUNTABILITY/INVENTORY INTERFACE;**12,21,50,60**; 10/24/97;Build 4
"RTN","PSAPROC1",3,0)
 ;
"RTN","PSAPROC1",4,0)
 ;This routine processes uploaded invoices.
"RTN","PSAPROC1",5,0)
 ;
"RTN","PSAPROC1",6,0)
 ;;References to ^PSDRUG( are covered by IA #2095
"RTN","PSAPROC1",7,0)
 ;
"RTN","PSAPROC1",8,0)
CHK ;Check for invoices with a status of "OK" (uploaded & error free)
"RTN","PSAPROC1",9,0)
 ;& status of "" (uploaded & errors). 
"RTN","PSAPROC1",10,0)
 K PSA,PSAOK S (PSACNTOK,PSACNTER,PSACTRL)=0
"RTN","PSAPROC1",11,0)
 F  S PSACTRL=$O(^XTMP("PSAPV",PSACTRL)) Q:PSACTRL=""  D
"RTN","PSAPROC1",12,0)
 .;DAVE B (PSA*3*12 13MAY99) Restrict to appropriate division
"RTN","PSAPROC1",13,0)
 .I $G(PSASORT)'=0,$G(PSASORT)'="",$D(^XTMP("PSAPV",PSACTRL,"ST")),$P(^XTMP("PSAPV",PSACTRL,"ST"),"^",1)'=PSASORT Q
"RTN","PSAPROC1",14,0)
 .Q:'$D(^XTMP("PSAPV",PSACTRL,"IN"))  S PSAIN=^XTMP("PSAPV",PSACTRL,"IN")
"RTN","PSAPROC1",15,0)
 .I $P(PSAIN,"^",8)="OK"!($P(PSAIN,"^",13)="SUP") D  Q
"RTN","PSAPROC1",16,0)
 ..I $P(PSAIN,"^",10)="ALL CS",$P(PSAIN,"^",12)'="" D OK Q
"RTN","PSAPROC1",17,0)
 ..I $P(PSAIN,"^",10)'="ALL CS",$P(PSAIN,"^",9)="CS",$P(PSAIN,"^",12)'="",$P(PSAIN,"^",7)'="" D OK Q
"RTN","PSAPROC1",18,0)
 ..I $P(PSAIN,"^",10)'="ALL CS",$P(PSAIN,"^",9)'="CS",$P(PSAIN,"^",7)'="" D OK Q
"RTN","PSAPROC1",19,0)
 ..S PSACNTER=PSACNTER+1,PSAERR(PSACNTER)=$P(PSAIN,"^",4)_"^"_$P(PSAIN,"^",2)_"^"_PSACTRL_"^"_$P(PSAIN,"^",7)
"RTN","PSAPROC1",20,0)
 .I $P(PSAIN,"^",8)="" S PSACNTER=PSACNTER+1,PSAERR(PSACNTER)=$P(PSAIN,"^",4)_"^"_$P(PSAIN,"^",2)_"^"_PSACTRL_"^"_$P(PSAIN,"^",7)
"RTN","PSAPROC1",21,0)
 S PSA=+$O(PSAOK(0))
"RTN","PSAPROC1",22,0)
 G:'PSA ^PSAPROC2
"RTN","PSAPROC1",23,0)
 ;
"RTN","PSAPROC1",24,0)
NOERROR ;Display list of invoices that can be processed by selecting
"RTN","PSAPROC1",25,0)
 ;invoice number.
"RTN","PSAPROC1",26,0)
 W @IOF,!?21,"<<< PROCESS ENTIRE INVOICE SCREEN >>>"
"RTN","PSAPROC1",27,0)
 W !!?2,"No errors have been detected on the following invoices. If there are no",!?2,"corrections, you can change the invoices' status to ""Processed"" by"
"RTN","PSAPROC1",28,0)
 W !?2,"selecting them from the list. If you do have corrections, press the return",!?2,"key then a second list will be displayed. You will be able to choose the",!?2,"invoices from that list and enter corrections."
"RTN","PSAPROC1",29,0)
 W !!?2,"Choose the invoices from the list you want to process.",!,PSADLN
"RTN","PSAPROC1",30,0)
 S (PSACNT,PSASTOP)=0,PSAMENU=""
"RTN","PSAPROC1",31,0)
 F  S PSAMENU=$O(PSAOK(PSAMENU)) Q:PSAMENU=""!(PSAOUT)  D  Q:PSASTOP
"RTN","PSAPROC1",32,0)
 .I $Y+4>IOSL D HEADER Q:PSASTOP
"RTN","PSAPROC1",33,0)
 .S PSAORD=$P(PSAOK(PSAMENU),"^"),PSAINV=$P(PSAOK(PSAMENU),"^",2),PSACTRL=$P(PSAOK(PSAMENU),"^",3),PSACNT=PSACNT+1
"RTN","PSAPROC1",34,0)
 .W !?2,PSAMENU_". ",?4,"Order#: "_PSAORD_"  Invoice#: "_PSAINV_"  Invoice Date: "_$$FMTE^XLFDT(+^XTMP("PSAPV",PSACTRL,"IN"))
"RTN","PSAPROC1",35,0)
 K PSASTOP W !,PSADLN
"RTN","PSAPROC1",36,0)
 S DIR(0)="LO^1:"_PSACNT,DIR("A")="Select invoices to process",DIR("?",1)="Enter the number to the left of the invoice",DIR("?")="data to be processed or a range of numbers." W !
"RTN","PSAPROC1",37,0)
 S DIR("??")="^D SEL^PSAPROC1" D ^DIR K DIR G:Y="" EDIT I $G(DIRUT) S PSAOUT=1 Q
"RTN","PSAPROC1",38,0)
 S PSASEL=Y
"RTN","PSAPROC1",39,0)
INVSEL F PSAPC=1:1 S PSA=+$P(PSASEL,",",PSAPC) Q:'PSA  D  Q:PSAOUT
"RTN","PSAPROC1",40,0)
 .I '$D(PSAOK(PSA)) Q  ;*50
"RTN","PSAPROC1",41,0)
 .S PSACTRL=$P(PSAOK(PSA),"^",3) Q:'$D(^XTMP("PSAPV",PSACTRL,"IN"))
"RTN","PSAPROC1",42,0)
 .S PSAIN=^XTMP("PSAPV",PSACTRL,"IN"),PSARECD=+$P(PSAIN,"^",6),PSALINES=0
"RTN","PSAPROC1",43,0)
 .D PROCESS
"RTN","PSAPROC1",44,0)
 Q:PSAOUT  G:'+$O(PSAOK(0)) PROC2
"RTN","PSAPROC1",45,0)
EDIT ;Edit error free invoices
"RTN","PSAPROC1",46,0)
 S PSA=0 F  S PSA=$O(PSAOK(PSA)) Q:'PSA  D
"RTN","PSAPROC1",47,0)
 .I $P($G(^XTMP("PSAPV",$P(PSAOK(PSA),"^",3),"IN")),"^",8)="OK"!($P($G(^("IN")),"^",13)="SUP") D
"RTN","PSAPROC1",48,0)
 ..S PSACNTER=PSACNTER+1,PSAERR(PSACNTER)=$P(^XTMP("PSAPV",$P(PSAOK(PSA),"^",3),"IN"),"^",4)_"^"_$P(^("IN"),"^",2)_"^"_$P(PSAOK(PSA),"^",3)_"^"_$P(^("IN"),"^",7)
"RTN","PSAPROC1",49,0)
 ;
"RTN","PSAPROC1",50,0)
PROC2 I +$O(PSAERR(0)) D ^PSAPROC2
"RTN","PSAPROC1",51,0)
 Q
"RTN","PSAPROC1",52,0)
 ;
"RTN","PSAPROC1",53,0)
HEADER S PSASS=21-$Y F PSAKK=1:1:PSASS W !
"RTN","PSAPROC1",54,0)
 S DIR(0)="E" D ^DIR K DIR I $G(DIRUT) S PSASTOP=1 Q
"RTN","PSAPROC1",55,0)
 W @IOF,!?21,"<<< PROCESS ENTIRE INVOICE SCREEN >>>",!!,PSADLN
"RTN","PSAPROC1",56,0)
 Q
"RTN","PSAPROC1",57,0)
 ;
"RTN","PSAPROC1",58,0)
PROCESS ;Get date recd & line item data
"RTN","PSAPROC1",59,0)
 I $P(PSAIN,"^",13)="SUP" D HDR,SUPPLY^PSAPROC6 Q
"RTN","PSAPROC1",60,0)
 D HDR,RECD^PSAPROC3 Q:PSAOUT  S (PSACS,PSALNCNT)=0,PSALINE=""
"RTN","PSAPROC1",61,0)
 F  S PSALINE=$O(^XTMP("PSAPV",PSACTRL,"IT",PSALINE)) Q:PSALINE=""  D  Q:PSAOUT
"RTN","PSAPROC1",62,0)
 .K PSAPHARM,PSAMV
"RTN","PSAPROC1",63,0)
 .S PSALNCNT=PSALNCNT+1,(PSADISP,PSADU,PSAHDR)=0
"RTN","PSAPROC1",64,0)
 .S PSADATA=^XTMP("PSAPV",PSACTRL,"IT",PSALINE),PSAIEN=$S(+$P(PSADATA,"^",15):+$P(PSADATA,"^",15),+$P(PSADATA,"^",6):+$P(PSADATA,"^",6),1:0),PSASUB=+$P(PSADATA,"^",7)
"RTN","PSAPROC1",65,0)
 .S:$P(PSADATA,"^",19)="CS" PSAMV=+$P(PSAIN,"^",12) S:$P(PSADATA,"^",19)'="CS" PSAPHARM=+$P(PSAIN,"^",7)
"RTN","PSAPROC1",66,0)
 .S PSALOC=+$S($P(PSADATA,"^",19)="CS":PSAMV,1:PSAPHARM)
"RTN","PSAPROC1",67,0)
 .I $P($G(^PSDRUG(PSAIEN,660)),"^",8)="" D:'PSAHDR HDR D:'PSADISP DISPLAY^PSAUTL1 D DU^PSAPROC8 Q:PSAOUT
"RTN","PSAPROC1",68,0)
 .I '+$P($G(^PSDRUG(PSAIEN,1,PSASUB,0)),"^",7),$P($G(^PSDRUG(PSAIEN,660)),"^",8)'="" D:'PSAHDR HDR D:'PSADISP DISPLAY^PSAUTL1 D:PSASUB DUOU^PSAPROC8 D:'PSASUB DUOU^PSAPROC3 Q:PSAOUT
"RTN","PSAPROC1",69,0)
 .I +$P($G(^PSDRUG(PSAIEN,1,PSASUB,0)),"^",6)'=+$P(PSADATA,"^",3) D:'PSAHDR HDR D:'PSADISP DISPLAY^PSAUTL1 D PRICE^PSAPROC8 Q:PSAOUT
"RTN","PSAPROC1",70,0)
 .I +$P($G(^PSD(58.8,PSALOC,0)),"^",14) D  Q:PSAOUT
"RTN","PSAPROC1",71,0)
 ..I '+$P($G(^PSD(58.8,PSALOC,1,PSAIEN,0)),"^",3),'+$P(PSADATA,"^",27) D:'PSAHDR HDR D:'PSADISP DISPLAY^PSAUTL1 D STOCK^PSAPROC8 Q:PSAOUT
"RTN","PSAPROC1",72,0)
 ..I '+$P($G(^PSD(58.8,PSALOC,1,PSAIEN,0)),"^",5),'+$P(PSADATA,"^",21) D:'PSAHDR HDR D:'PSADISP DISPLAY^PSAUTL1 D REORDER^PSAPROC8
"RTN","PSAPROC1",73,0)
 .D SETLINE^PSAPROC3 S:$P(^XTMP("PSAPV",PSACTRL,"IT",PSALINE),"^",19)="CS" PSACS=PSACS+1
"RTN","PSAPROC1",74,0)
 S PSAOK=0
"RTN","PSAPROC1",75,0)
CS I PSACS D  Q:PSAOUT
"RTN","PSAPROC1",76,0)
 .S $P(^XTMP("PSAPV",PSACTRL,"IN"),"^",9)="CS"
"RTN","PSAPROC1",77,0)
 .I $P(^XTMP("PSAPV",PSACTRL,"IN"),"^",12)="" S PSACS(PSACTRL)="" D MASTER^PSAPROC9 Q:PSAOUT  S:$P(^XTMP("PSAPV",PSACTRL,"IN"),"^",12)'="" PSAOK=1 ;PSA*60
"RTN","PSAPROC1",78,0)
 .I PSACS=PSALNCNT S $P(^XTMP("PSAPV",PSACTRL,"IN"),"^",10)="ALL CS" Q
"RTN","PSAPROC1",79,0)
 .I PSACS'=PSALNCNT S $P(^XTMP("PSAPV",PSACTRL,"IN"),"^",10)=""
"RTN","PSAPROC1",80,0)
NCS I 'PSACS S $P(^XTMP("PSAPV",PSACTRL,"IN"),"^",9)="",$P(^("IN"),"^",10)="",$P(^("IN"),"^",12)="" D:$P(^("IN"),"^",7)="" GETLOC^PSAPROC9 Q:PSAOUT  S:$P(^XTMP("PSAPV",PSACTRL,"IN"),"^",7)'="" PSAOK=1
"RTN","PSAPROC1",81,0)
 ;
"RTN","PSAPROC1",82,0)
 I PSALNCNT=PSALINES S $P(^XTMP("PSAPV",PSACTRL,"IN"),"^",8)="P" K PSAOK(PSA) W !!,"The invoice status has been changed to Processed!" D ^PSAPROC7 I 1 ;PSA*3*21 (1/3/01- file immediately);*50 
"RTN","PSAPROC1",83,0)
 E  W !!,"** The invoice has not been placed in a Processed status!"
"RTN","PSAPROC1",84,0)
 D END^PSAPROC
"RTN","PSAPROC1",85,0)
 Q
"RTN","PSAPROC1",86,0)
 ;
"RTN","PSAPROC1",87,0)
HDR ;Header for editing line items with missing data
"RTN","PSAPROC1",88,0)
 S PSAHDR=1
"RTN","PSAPROC1",89,0)
 W @IOF,!?21,"<<< PROCESS ENTIRE INVOICE SCREEN >>>",!,"Order#: "_$P(PSAIN,"^",4)_"  Invoice#: "_$P(PSAIN,"^",2)_"  Invoice Date: "_$$FMTE^XLFDT(+PSAIN),!,PSADLN
"RTN","PSAPROC1",90,0)
 Q
"RTN","PSAPROC1",91,0)
OK ;Sets okay array
"RTN","PSAPROC1",92,0)
 S PSACNTOK=PSACNTOK+1,PSAOK(PSACNTOK)=$P(^XTMP("PSAPV",PSACTRL,"IN"),"^",4)_"^"_$P(^("IN"),"^",2)_"^"_PSACTRL_"^"_$P(^("IN"),"^",7)
"RTN","PSAPROC1",93,0)
 Q
"RTN","PSAPROC1",94,0)
 ;
"RTN","PSAPROC1",95,0)
SEL ;Extended help to 'Select invoices'
"RTN","PSAPROC1",96,0)
 W !?5,"Enter the number to the left of the invoice data that you want to process."
"RTN","PSAPROC1",97,0)
 Q
"RTN","PSAPROC3")
0^6^B51608562^B51547340
"RTN","PSAPROC3",1,0)
PSAPROC3 ;BIR/JMB-Process Uploaded Prime Vendor Invoice Data - CONT'D ;7/23/97
"RTN","PSAPROC3",2,0)
 ;;3.0; DRUG ACCOUNTABILITY/INVENTORY INTERFACE;**3,60**; 10/24/97;Build 4
"RTN","PSAPROC3",3,0)
 ;This routine allows the user to edit invoices with errors or missing
"RTN","PSAPROC3",4,0)
 ;data.
"RTN","PSAPROC3",5,0)
 ;
"RTN","PSAPROC3",6,0)
DUOU ;Gets & stores dispense unit per order unit in XTMP
"RTN","PSAPROC3",7,0)
 W:'$G(PSADU) !,"DISPENSE UNITS: "_$P($G(^PSDRUG(PSAIEN,660)),"^",8)
"RTN","PSAPROC3",8,0)
 S PSADU=1
"RTN","PSAPROC3",9,0)
 ;
"RTN","PSAPROC3",10,0)
 ;DAVE B (PSA*3*3)
"RTN","PSAPROC3",11,0)
 S DIR(0)="NO^::2",DIR("A")="DISPENSE UNIT PER ORDER UNIT",DIR("?")="Enter the number of dispense units contained in one order unit.",DIR("??")="^D DUOUHELP^PSAPROC3"
"RTN","PSAPROC3",12,0)
 D ^DIR K DIR I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1 Q
"RTN","PSAPROC3",13,0)
 I +Y S $P(^XTMP("PSAPV",PSACTRL,"IT",PSALINE),"^",20)=+Y,PSADATA=^(PSALINE) Q
"RTN","PSAPROC3",14,0)
 ;
"RTN","PSAPROC3",15,0)
 W !,"The dispense units per order unit must be entered",!,"to change the status of the invoice to Processed."
"RTN","PSAPROC3",16,0)
 S DIR(0)="Y",DIR("B")="Y",DIR("A")="Do you want to enter the data now"
"RTN","PSAPROC3",17,0)
 S DIR("?",1)="Enter Yes to return to the DISPENSE UNIT PER ORDER UNIT prompt.",DIR("?")="Enter No to bypass entering the dispense units now."
"RTN","PSAPROC3",18,0)
 S DIR("??")="^D DUOUYN^PSAPROC8" D ^DIR K DIR I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1 Q
"RTN","PSAPROC3",19,0)
 Q:Y=""  G:+Y DUOU Q
"RTN","PSAPROC3",20,0)
 ;
"RTN","PSAPROC3",21,0)
GETOU ;Get the Order Unit if it is blank or if it is not in the ORDER UNIT file.
"RTN","PSAPROC3",22,0)
 S DIR(0)="P^51.5:EMZ",DIR("A")="ORDER UNIT",DIR("?")="Enter the unit of order.",DIR("??")="^D OUHELP^PSAPROC3"
"RTN","PSAPROC3",23,0)
 S DIR("B")=$S(+$P($P(PSADATA,"^",2),"~",2):$P($G(^DIC(51.5,+$P($P(PSADATA,"^",2),"~",2),0)),"^"),+$P($G(^PSDRUG(PSAIEN,660)),"^",2):$P($G(^DIC(51.5,+$P($G(^PSDRUG(PSAIEN,660)),"^",2),0)),"^"),1:"")
"RTN","PSAPROC3",24,0)
 D ^DIR K DIR I $G(DIRUT) S PSAOUT=1 Q
"RTN","PSAPROC3",25,0)
 ;
"RTN","PSAPROC3",26,0)
 ;DAVE B (PSA*3*3)
"RTN","PSAPROC3",27,0)
 ;Q:+$P($P(PSADATA,"^",2),"~",2)=+Y
"RTN","PSAPROC3",28,0)
 I +Y S $P(^XTMP("PSAPV",PSACTRL,"IT",PSALINE),"^",12)=+Y,$P(^(PSALINE),"^",13)=DUZ,$P(^(PSALINE),"^",14)=DT,PSADATA=^(PSALINE) Q
"RTN","PSAPROC3",29,0)
 ;
"RTN","PSAPROC3",30,0)
 W !,"The order unit must be entered to change",!,"the status of the invoice to Processed.",!
"RTN","PSAPROC3",31,0)
 S DIR(0)="Y",DIR("B")="Y",DIR("A")="Do you want to enter the data now"
"RTN","PSAPROC3",32,0)
 S DIR("?",1)="Enter Yes to return to the ORDER UNIT prompt.",DIR("?")="Enter No to bypass entering the order units now.",DIR("??")="^D OUYN^PSAPROC3"
"RTN","PSAPROC3",33,0)
 D ^DIR K DIR I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1 Q
"RTN","PSAPROC3",34,0)
 Q:Y=""
"RTN","PSAPROC3",35,0)
 G:+Y GETOU
"RTN","PSAPROC3",36,0)
 Q
"RTN","PSAPROC3",37,0)
 ;
"RTN","PSAPROC3",38,0)
PRICE ;If price per order unit is blank or 0, get price from user.
"RTN","PSAPROC3",39,0)
 S DIR(0)="NO^0:9999:4",DIR("A")="PRICE PER ORDER UNIT",DIR("B")=0
"RTN","PSAPROC3",40,0)
 S DIR("?",1)="If the price per order unit is not zero (0), enter",DIR("?",2)="the correct price. If the price per order unit is",DIR("?")="zero, press return to verify that the price is correct."
"RTN","PSAPROC3",41,0)
 S DIR("??")="^D PRICEHLP^PSAPROC3" D ^DIR K DIR I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1 Q
"RTN","PSAPROC3",42,0)
 I +$P(PSADATA,"^",3),+$P(PSADATA,"^",3)=+Y Q
"RTN","PSAPROC3",43,0)
 S $P(^XTMP("PSAPV",PSACTRL,"IT",PSALINE),"^",23)=+Y,$P(^(PSALINE),"^",24)=DUZ,$P(^(PSALINE),"^",25)=DT,PSADATA=^(PSALINE)
"RTN","PSAPROC3",44,0)
 Q
"RTN","PSAPROC3",45,0)
 ;
"RTN","PSAPROC3",46,0)
QTY ;If qty is blank, prompt for it.
"RTN","PSAPROC3",47,0)
 S DIR(0)="N",DIR("A")="QUANTITY RECEIVED",DIR("B")=$S(+$P(PSADATA,"^",8):+$P(PSADATA,"^",8),+PSADATA:+PSADATA,1:0)
"RTN","PSAPROC3",48,0)
 S DIR("?",1)="If the quantity received is different than the",DIR("?")="quantity invoiced, enter the correct quantity received.",DIR("??")="^D QTYHELP^PSAPROC3"
"RTN","PSAPROC3",49,0)
 D ^DIR K DIR I $G(DIRUT) S PSAOUT=1 Q
"RTN","PSAPROC3",50,0)
 Q:+PSADATA=+Y  S PSADJQTY=+Y
"RTN","PSAPROC3",51,0)
 S DIR(0)="F^1:30",DIR("A")="ADJUSTMENT REASON",DIR("?")="Enter the reason you adjusted the quantity received.",DIR("??")="^D ADJREA^PSAPROC3"
"RTN","PSAPROC3",52,0)
 D ^DIR K DIR I $G(DIRUT) S PSAOUT=1 Q
"RTN","PSAPROC3",53,0)
 S $P(^XTMP("PSAPV",PSACTRL,"IT",PSALINE),"^",8)=PSADJQTY,$P(^(PSALINE),"^",9)=DUZ,$P(^(PSALINE),"^",10)=DT,$P(^(PSALINE),"^",11)=Y,PSADATA=^(PSALINE)
"RTN","PSAPROC3",54,0)
 Q
"RTN","PSAPROC3",55,0)
 ;
"RTN","PSAPROC3",56,0)
RECD ;Enter the date the invoiced drugs were received.
"RTN","PSAPROC3",57,0)
 S DIR(0)="D",DIR("A")="Date received",DIR("?")="Enter the date the drugs were received.",DIR("??")="^D RECHELP^PSAPROC3" ;*60 removed default receive date
"RTN","PSAPROC3",58,0)
 D ^DIR K DIR I $G(DIRUT) S PSAOUT=1 Q
"RTN","PSAPROC3",59,0)
 S:$P(^XTMP("PSAPV",PSACTRL,"IN"),"^",6)'=+Y $P(^XTMP("PSAPV",PSACTRL,"IN"),"^",11)=+Y S PSAIN=^XTMP("PSAPV",PSACTRL,"IN")
"RTN","PSAPROC3",60,0)
 Q
"RTN","PSAPROC3",61,0)
 ;
"RTN","PSAPROC3",62,0)
SETLINE ;Set line as process if all data is present.
"RTN","PSAPROC3",63,0)
 S PSADATA=^XTMP("PSAPV",PSACTRL,"IT",PSALINE),PSAIN=^XTMP("PSAPV",PSACTRL,"IN")
"RTN","PSAPROC3",64,0)
 I $D(^XTMP("PSAPV",PSACTRL,"IT",PSALINE,"SUP")) S $P(^XTMP("PSAPV",PSACTRL,"IT",PSALINE),"^",18)="P",PSALINES=PSALINES+1,PSALLSUP=PSALLSUP+1 Q
"RTN","PSAPROC3",65,0)
 S PSAIEN=$S(+$P(PSADATA,"^",15):+$P(PSADATA,"^",15),+$P(PSADATA,"^",6):+$P(PSADATA,"^",6),1:0),PSASUB=+$P(PSADATA,"^",7)
"RTN","PSAPROC3",66,0)
 I PSAIEN,$P($G(^PSDRUG(PSAIEN,2)),"^",3)["N" S $P(^XTMP("PSAPV",PSACTRL,"IT",PSALINE),"^",19)="CS"
"RTN","PSAPROC3",67,0)
 E  S $P(^XTMP("PSAPV",PSACTRL,"IT",PSALINE),"^",19)=""
"RTN","PSAPROC3",68,0)
 S PSADATA=^XTMP("PSAPV",PSACTRL,"IT",PSALINE),PSALOC=$S($P(PSADATA,"^",19)'="CS":+$P(PSAIN,"^",7),1:+$P(PSAIN,"^",12))
"RTN","PSAPROC3",69,0)
 I +$P(PSADATA,"^",6)!(+$P(PSADATA,"^",15)),$P(PSADATA,"^")'=""!($P(PSADATA,"^",8)'=""),$P($G(^PSDRUG(PSAIEN,660)),"^",8)'="" D
"RTN","PSAPROC3",70,0)
 .I +$P($G(^PSDRUG(PSAIEN,1,+$G(PSASUB),0)),"^",7)!(+$P(PSADATA,"^",20)),+$P($P(PSADATA,"^",2),"~",2)!(+$P(PSADATA,"^",12))!(+$P($G(^PSDRUG(PSAIEN,1,+$G(PSASUB),0)),"^",5)) D
"RTN","PSAPROC3",71,0)
 ..S $P(^XTMP("PSAPV",PSACTRL,"IT",PSALINE),"^",18)="P",PSALINES=PSALINES+1,$P(^XTMP("PSAPV",PSACTRL,"IN"),"^",13)="",PSAIN=^("IN")
"RTN","PSAPROC3",72,0)
 Q
"RTN","PSAPROC3",73,0)
 ;
"RTN","PSAPROC3",74,0)
ADJREA ;Extended help for 'qty adjustment reason'
"RTN","PSAPROC3",75,0)
 W !?5,"Enter why you changed the quantity.",!?5,"For example: 2 bottles were broken.",!?5,"             Package contained only 11 tubes."
"RTN","PSAPROC3",76,0)
 Q
"RTN","PSAPROC3",77,0)
DUOUHELP ;Extended help for entering dispense units per order unit
"RTN","PSAPROC3",78,0)
 W !?5,"Enter the number of dispense units contained in the order unit.",!!?5,"For example: Dispense Units: TAB",!?18,"Order Unit    : CS"
"RTN","PSAPROC3",79,0)
 W !!?18,"The case contains 12 bottles of 1,000 tablets",!?18,"12 x 1,000 = 12,000",!?18,"DISPENSE UNITS PER ORDER UNIT: 12,000"
"RTN","PSAPROC3",80,0)
 Q
"RTN","PSAPROC3",81,0)
NDCHELP ;Extended help for selecting invoiced drug
"RTN","PSAPROC3",82,0)
 W !?5,"Enter the number to the left of the invoiced drug. If you select  a drug",!?5,"from the list, the invoiced drug will be matched to that drug. If you"
"RTN","PSAPROC3",83,0)
 W !?5,"choose to select another drug, you can select the invoiced drug from the",!?5,"DRUG file or flag this item as a supply item."
"RTN","PSAPROC3",84,0)
 Q
"RTN","PSAPROC3",85,0)
OUHELP ;Extended help for selecting the Order Unit
"RTN","PSAPROC3",86,0)
 W !?5,"Enter the packaging unit for which the drug was ordered."
"RTN","PSAPROC3",87,0)
 Q
"RTN","PSAPROC3",88,0)
OUYN ;Extended help for returning to the 'ORDER UNIT' prompt.
"RTN","PSAPROC3",89,0)
 W !?5,"Enter Yes if you want to enter the order unit now.",!?5,"Enter No to bypass entering the order unit."
"RTN","PSAPROC3",90,0)
 W !!?5,"The invoice will not be placed in a Processed",!?5,"status if the order units are not entered."
"RTN","PSAPROC3",91,0)
 Q
"RTN","PSAPROC3",92,0)
PRICEHLP ;Extended help for price per order unit
"RTN","PSAPROC3",93,0)
 W !?5,"If the price per order unit is not zero, enter the correct price. ",!?5,"The total cost for the item will be adjusted. If it is zero, press ",!?5,"the return key to verify that zero is the correct price."
"RTN","PSAPROC3",94,0)
 Q
"RTN","PSAPROC3",95,0)
QTYHELP ;Extended help for quantity delivered
"RTN","PSAPROC3",96,0)
 W !?5,"If the quantity received is different than the quantity",!?5,"displayed, enter the correct quantity you received. The",!?5,"total cost for the item will be adjusted."
"RTN","PSAPROC3",97,0)
 Q
"RTN","PSAPROC3",98,0)
RECHELP ;Extended help to 'Date Received'
"RTN","PSAPROC3",99,0)
 W !?5,"Enter the date the drugs were received. The date the prime vendor",!?5,"said the drugs were delivered and the date you say the drugs were",!?5,"received will be retained."
"RTN","PSAPROC3",100,0)
 Q
"RTN","PSAVER")
0^1^B76434485^B73058041
"RTN","PSAVER",1,0)
PSAVER ;BIR/JMB-Verify Invoices ;9/6/97
"RTN","PSAVER",2,0)
 ;;3.0; DRUG ACCOUNTABILITY/INVENTORY INTERFACE;**60**; 10/24/97;Build 4
"RTN","PSAVER",3,0)
 ;This routine allows the user to verify processed invoices. The entire
"RTN","PSAVER",4,0)
 ;invoice may be verified with/without editing. After verification, the
"RTN","PSAVER",5,0)
 ;pharmacy location or master vault balances are incremented during a
"RTN","PSAVER",6,0)
 ;background job (PSAVER5).
"RTN","PSAVER",7,0)
 ;
"RTN","PSAVER",8,0)
 I '$D(^XUSEC("PSA ORDERS",DUZ)) W !,"You do not hold the key to enter the option." Q
"RTN","PSAVER",9,0)
 I '$D(^PSD(58.811,"ASTAT","P")) W !!,"There are no invoices that need to be verified." H 1 Q
"RTN","PSAVER",10,0)
 ;
"RTN","PSAVER",11,0)
 ;Creates a list of invoices that can be verified by the user. If the
"RTN","PSAVER",12,0)
 ;invoice contains at least one item marked as a controlled substance,
"RTN","PSAVER",13,0)
 ;the user must have the pharmacist key before it can be verified.
"RTN","PSAVER",14,0)
 S (PSACNT,PSAIEN,PSASUP)=0
"RTN","PSAVER",15,0)
 F  S PSAIEN=+$O(^PSD(58.811,"ASTAT","P",PSAIEN)) Q:'PSAIEN  D
"RTN","PSAVER",16,0)
 .Q:'$D(^PSD(58.811,PSAIEN,0))
"RTN","PSAVER",17,0)
 .S PSAIEN1=0 F  S PSAIEN1=+$O(^PSD(58.811,"ASTAT","P",PSAIEN,PSAIEN1)) Q:'PSAIEN1  D
"RTN","PSAVER",18,0)
 ..Q:'$D(^PSD(58.811,PSAIEN,1,PSAIEN1,0))
"RTN","PSAVER",19,0)
 ..I $P(^PSD(58.811,PSAIEN,1,PSAIEN1,0),"^",10)'=DUZ,$P(^(0),"^",8)="N"!(($P(^(0),"^",8)="S"!($P(^(0),"^",8)="A"))&($D(^XUSEC("PSJ RPHARM",DUZ)))) S PSACNT=PSACNT+1,PSAVER(PSACNT)=PSAIEN_"^"_PSAIEN1
"RTN","PSAVER",20,0)
 I 'PSACNT D  H 1 G EXIT
"RTN","PSAVER",21,0)
 .W !!,"There is at least one invoice that needs to be verified. However, invoices",!,"cannot be verified by the same person who processed them and a pharmacist",!,"must verify invoices that contain a drug marked as a controlled substance."
"RTN","PSAVER",22,0)
 .W !!,"There are no invoices you can verify because the invoice(s) meet one of the",!,"above conditions."
"RTN","PSAVER",23,0)
 ;
"RTN","PSAVER",24,0)
ESIG D SIG^XUSESIG G:X1="" EXIT S PSAOUT=0
"RTN","PSAVER",25,0)
 ;
"RTN","PSAVER",26,0)
PRINT ;Asks & prints all invoices the user can verify.
"RTN","PSAVER",27,0)
 W ! S DIR(0)="Y",DIR("B")="N",DIR("A")="Print processed invoices",DIR("?",1)="Enter YES to print all invoices you can verify then begin verification.",DIR("?")="Enter NO to bypass printing the invoices and begin verification."
"RTN","PSAVER",28,0)
 S DIR("??")="^D PRINTYN^PSAVER"
"RTN","PSAVER",29,0)
 D ^DIR K DIR G:$G(DIRUT) EXIT G:'Y ENTIRE
"RTN","PSAVER",30,0)
 W ! S %ZIS="Q" D ^%ZIS G:POP ENTIRE
"RTN","PSAVER",31,0)
 I $D(IO("Q")) D  G ENTIRE
"RTN","PSAVER",32,0)
 .K ZTSAVE
"RTN","PSAVER",33,0)
 .S ZTDESC="Drug Acct. - Print Prime Vendor Invoices",ZTDTH=$H,ZTRTN="PRTINV^PSAVER",ZTSAVE("PSAVER(")="" D ^%ZTLOAD
"RTN","PSAVER",34,0)
 D PRTINV
"RTN","PSAVER",35,0)
 ;
"RTN","PSAVER",36,0)
ENTIRE ;Displays a list of all invoices the user can select to be verified.
"RTN","PSAVER",37,0)
 S PSASLN="",$P(PSASLN,"-",80)="",PSADLN="",$P(PSADLN,"=",80)=""
"RTN","PSAVER",38,0)
 W @IOF,!?21,"<<< VERIFY ENTIRE INVOICE SCREEN >>>"
"RTN","PSAVER",39,0)
 W !!?2,"If there are no corrections, you can change the invoices' status",!?2,"to ""Verified"" by selecting them from the list. If you do have"
"RTN","PSAVER",40,0)
 W !?2,"corrections, press the return key then a second list will be",!?2,"displayed. You will be able to choose the invoices from that list",!?2,"and enter corrections.",!!?2,"Choose the invoices from the list you want to verify.",!,PSADLN
"RTN","PSAVER",41,0)
 S (PSA,PSACNT,PSASTOP)=0
"RTN","PSAVER",42,0)
 F  S PSA=+$O(PSAVER(PSA)) Q:'PSA  D  Q:PSASTOP
"RTN","PSAVER",43,0)
 .I $Y+5>IOSL D HDR Q:PSASTOP
"RTN","PSAVER",44,0)
 .S PSAIEN=$P(PSAVER(PSA),"^"),PSAIEN1=$P(PSAVER(PSA),"^",2),PSAORD=$P(^PSD(58.811,PSAIEN,0),"^"),PSAINV=$P(^PSD(58.811,PSAIEN,1,PSAIEN1,0),"^"),PSAINVDT=+$P(^(0),"^",2),PSACNT=PSACNT+1
"RTN","PSAVER",45,0)
 .W !?(3-$L(PSA)),PSA_".  Order#: "_PSAORD_"  Invoice#: "_PSAINV_"  Invoice Date: "_$$FMTE^XLFDT(PSAINVDT)
"RTN","PSAVER",46,0)
 K PSASTOP W !,PSADLN
"RTN","PSAVER",47,0)
 S DIR(0)="LO^1:"_PSACNT,DIR("A")="Select invoices to verify",DIR("?",1)="Enter the number to the left of the invoice",DIR("?")="data to be verified or a range of numbers.",DIR("??")="^D SEL^PSAVER"
"RTN","PSAVER",48,0)
 W ! D ^DIR K DIR G:$G(DTOUT)!($G(DUOUT)) EXIT
"RTN","PSAVER",49,0)
 I Y="" D LOAD G EDIT
"RTN","PSAVER",50,0)
 S PSASEL=Y
"RTN","PSAVER",51,0)
 ;
"RTN","PSAVER",52,0)
OKAY ;Verifies correct invoices were selected.
"RTN","PSAVER",53,0)
 W @IOF,!?21,"<<< VERIFY ENTIRE INVOICE SCREEN >>>",!,PSADLN,!
"RTN","PSAVER",54,0)
 S PSACNT=0,PSATMP="" F PSAPC=1:1 S PSA=+$P(PSASEL,",",PSAPC) Q:'PSA  D
"RTN","PSAVER",55,0)
 .S PSAIEN=$P(PSAVER(PSA),"^"),PSAIEN1=$P(PSAVER(PSA),"^",2)
"RTN","PSAVER",56,0)
 .Q:'$D(^PSD(58.811,PSAIEN,1,PSAIEN1,0))
"RTN","PSAVER",57,0)
 .S PSAIN=^PSD(58.811,PSAIEN,1,PSAIEN1,0)
"RTN","PSAVER",58,0)
 .S PSAORD=$P(^PSD(58.811,PSAIEN,0),"^"),PSAINV=$P(PSAIN,"^"),PSAINVDT=+$P(PSAIN,"^",2),PSACNT=PSACNT+1
"RTN","PSAVER",59,0)
 .W !?(3-$L(PSACNT)),PSACNT_".  Order#: "_PSAORD_"  Invoice#: "_PSAINV_"  Invoice Date: "_$$FMTE^XLFDT(PSAINVDT)
"RTN","PSAVER",60,0)
 .I +$P(PSAIN,"^",5) D
"RTN","PSAVER",61,0)
 ..S PSALOC=+$P(PSAIN,"^",5) D SITES^PSAUTL1 S PSALOCN=$P(^PSD(58.8,PSALOC,0),"^")_PSACOMB
"RTN","PSAVER",62,0)
 ..W:$L(PSALOCN)>76 !?6,$P(PSALOCN,"(IP)",1)_"(IP)",!?23,$P(PSALOCN,"(IP)",2) W:$L(PSALOCN)<77 !?6,PSALOCN
"RTN","PSAVER",63,0)
 .I +$P(PSAIN,"^",12) W !?6,"MASTER VAULT: "_$P(^PSD(58.8,+$P(PSAIN,"^",12),0),"^")
"RTN","PSAVER",64,0)
 .W !
"RTN","PSAVER",65,0)
 .S PSAMSG="" D VERLOCK^PSAVER4 ; <== PSA*3*60 (RJS-VMP)
"RTN","PSAVER",66,0)
 .W:$L(PSAMSG) ?5,PSAMSG,!
"RTN","PSAVER",67,0)
 I PSASEL'=PSATMP S PSASEL=PSATMP K PSATMP
"RTN","PSAVER",68,0)
 I PSASEL="" S DIR(0)="E" D ^DIR G:$G(DIRUT) EXIT G ENTIRE
"RTN","PSAVER",69,0)
 S DIR(0)="Y",DIR("B")="N",DIR("A")="Are you sure "_$S(PSACNT=1:"this invoice's",1:"these invoices'")_" status should be changed to Verified"
"RTN","PSAVER",70,0)
 S DIR("?",1)="Enter YES if the list contains invoices with no corrections.",DIR("?",2)="Enter NO if the list contains at least one invoice you do not",DIR("?")="want to verify.",DIR("??")="^D VERIFY^PSAVER"
"RTN","PSAVER",71,0)
 D ^DIR K DIR D:'Y VERUNLCK^PSAVER4 G:$G(DIRUT) EXIT G:'Y ENTIRE ; <== PSA*3*60 (RJS-VMP)
"RTN","PSAVER",72,0)
 ;
"RTN","PSAVER",73,0)
 ;Send entire invoices to be verified in background, delete these
"RTN","PSAVER",74,0)
 ;invoices from the list, then create a new list of remaining invoices
"RTN","PSAVER",75,0)
 ;to be verified.
"RTN","PSAVER",76,0)
BKGJOB K PSAVBKG W ! F PSAPC=1:1 S PSA=+$P(PSASEL,",",PSAPC) Q:'PSA!(PSAOUT)  D
"RTN","PSAVER",77,0)
 .S PSAIEN=$P(PSAVER(PSA),"^"),PSAIEN1=$P(PSAVER(PSA),"^",2),PSASUP=0
"RTN","PSAVER",78,0)
 .Q:'$D(^PSD(58.811,PSAIEN,1,PSAIEN1,0))!('$D(^PSD(58.811,PSAIEN,0)))
"RTN","PSAVER",79,0)
 .S (PSACS,PSAERR,PSALINE,PSALNCNT,PSALNERR,PSALNSU)=0
"RTN","PSAVER",80,0)
 .S PSAIN=^PSD(58.811,PSAIEN,1,PSAIEN1,0),PSAINV=$P(PSAIN,"^"),PSAORD=$P(^PSD(58.811,PSAIEN,0),"^")
"RTN","PSAVER",81,0)
 .F  S PSALINE=+$O(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE)) Q:'PSALINE!(PSAOUT)  D
"RTN","PSAVER",82,0)
 ..Q:'$D(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,0))
"RTN","PSAVER",83,0)
 ..S PSADATA=^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,0),PSALNCNT=PSALNCNT+1
"RTN","PSAVER",84,0)
 ..S PSALOC=$S(+$P(PSADATA,"^",10):$P(PSAIN,"^",12),1:$P(PSAIN,"^",5))
"RTN","PSAVER",85,0)
 ..W "." D SETLINE^PSAVER3
"RTN","PSAVER",86,0)
 .Q:PSAOUT
"RTN","PSAVER",87,0)
 .I '$O(PSANOVER(PSAIEN,PSAIEN1,0)) D  Q
"RTN","PSAVER",88,0)
 ..S PSAVBKG(PSAIEN,PSAIEN1)="" K PSAVER(PSA) D STATUS^PSAVER3
"RTN","PSAVER",89,0)
 ..I '+$P(^PSD(58.811,PSAIEN,1,PSAIEN1,0),"^",13),$P($G(^PSD(58.8,+$P(PSAIN,"^",5),0)),"^",14)!($P($G(^PSD(58.8,+$P(PSAIN,"^",12),0)),"^",14)) D NEWDRUG^PSAVER1 I 1 ;*50
"RTN","PSAVER",90,0)
 ..W !,"   Order# "_PSAORD_" Invoice# "_PSAINV_"'s status has been changed to Verified!"
"RTN","PSAVER",91,0)
 .H 1 I $O(PSANOVER(PSAIEN,PSAIEN1,0)) D
"RTN","PSAVER",92,0)
 ..W !,"** Order# "_PSAORD_" Invoice# "_PSAINV_"'s status has not been changed to Verified."
"RTN","PSAVER",93,0)
 ..S PSAERR=0,PSAVER(PSA)=PSAIEN_"^"_PSAIEN1
"RTN","PSAVER",94,0)
 ..D PRINT^PSAVER3
"RTN","PSAVER",95,0)
 ;
"RTN","PSAVER",96,0)
 ;If the invoices selected are error free, send them to the background
"RTN","PSAVER",97,0)
 ;job to complete the invoice and increment inventory.
"RTN","PSAVER",98,0)
 D LOAD
"RTN","PSAVER",99,0)
 I $O(PSAVBKG(0)) D
"RTN","PSAVER",100,0)
 . K ZTSAVE S ZTDESC="Drug Acct. - Verify Prime Vendor Invoices",ZTIO="",ZTDTH=$H,ZTRTN="^PSAVER6",ZTSAVE("PSASEL")="",ZTSAVE("PSAVBKG(")="" D ^%ZTLOAD Q:$G(POP)
"RTN","PSAVER",101,0)
 K PSAVBKG G:'$O(PSAEDIT(0)) EXIT
"RTN","PSAVER",102,0)
EDIT D EDIT^PSAVER1
"RTN","PSAVER",103,0)
 ;
"RTN","PSAVER",104,0)
EXIT I $O(PSANEWD(0)) D ^PSAVER4
"RTN","PSAVER",105,0)
 K %ZIS,DA,DD,DIC,DIE,DIK,DIR,DIRUT,DO,DR,DTOUT,DUOUT,PSA,PSA10,PSAGAIN,PSA50IEN,PSAA,PSABEFOR,PSACHG,PSACHO,PSACNT,PSACOMB,PSACS,PSACSLN,PSACTRL
"RTN","PSAVER",106,0)
 K PSADATA,PSADD,PSADJ,PSADJD,PSADJFLD,PSADJN,PSADJO,PSADJOP,PSADJOV,PSADJP,PSADJPP,PSADJPV,PSADJQ,PSADJQP,PSADJQV,PSADJSUP,PSADLN,PSADRG
"RTN","PSAVER",107,0)
 K PSADRGN,PSADUOU,PSAEDIT,PSAERR,PSAFLD,PSAFLDS,PSAHOLD,PSAIEN,PSAIEN1,PSAIN,PSAINV,PSAINVDT,PSAISIT,PSAISITN,PSAKK,PSAL,PSALEN,PSALINE,PSALINEN
"RTN","PSAVER",108,0)
 K PSALINES,PSALN,PSALN0,PSALNCNT,PSALND,PSALNERR,PSALNP,PSALNSU,PSALNV,PSALOAD,PSALOC,PSALOCA,PSALOCN,PSAMENU,PSAMV,PSAMVA,PSAMVIEN,PSAMVN,PSAN10,PSANAME,PSANDC,PSANEW,PSANEWD
"RTN","PSAVER",109,0)
 K PSANO,PSANODE,PSANOVER,PSANUM,PSAONE,PSAONEMV,PSAORD,PSAORDU,PSAPHARM,PSAPRICE,PSAOSIT,PSAOSITN,PSAOU,PSAOUT,PSAPC,PSAPCF,PSAPCL,PSAPG,PSAPRINT,PSAQTY,PSALOCK,PSAMSG
"RTN","PSAVER",110,0)
 K PSAREA,PSAREC,PSARECD,PSAREORD,PSASAVE,PSASEL,PSASET,PSASLN,PSASTOCK,PSASUB,PSASUP,PSASUPP,PSATAB,PSATEMP,PSAUPC,PSAVAULT,PSAVBKG,PSAVER,PSAVSN,PSAOU,PSATMP,PSALCK
"RTN","PSAVER",111,0)
 K PSASS,X,X1,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PSAVER",112,0)
 Q
"RTN","PSAVER",113,0)
 ;
"RTN","PSAVER",114,0)
HDR ;Header with screen hold
"RTN","PSAVER",115,0)
 S PSASS=21-$Y F PSAKK=1:1:PSASS W !
"RTN","PSAVER",116,0)
 S DIR(0)="E" D ^DIR K DIR I $G(DIRUT) S PSASTOP=1 Q
"RTN","PSAVER",117,0)
 W @IOF,!?21,"<<< VERIFY ENTIRE INVOICE SCREEN >>>",!!,PSADLN
"RTN","PSAVER",118,0)
 Q
"RTN","PSAVER",119,0)
LOAD ;Loads invoices to be edited into an array
"RTN","PSAVER",120,0)
 K PSAEDIT S (PSALOAD,PSACNT)=0
"RTN","PSAVER",121,0)
 F  S PSALOAD=+$O(PSAVER(PSALOAD)) Q:'PSALOAD  S PSACNT=PSACNT+1,PSAEDIT(PSACNT)=PSAVER(PSALOAD)
"RTN","PSAVER",122,0)
 K PSAVER
"RTN","PSAVER",123,0)
 Q
"RTN","PSAVER",124,0)
 ;
"RTN","PSAVER",125,0)
PRTINV ;Sends invoices to printer
"RTN","PSAVER",126,0)
 S (PSA,PSAOUT)=0 F  S PSA=+$O(PSAVER(PSA)) Q:'PSA!(PSAOUT)  D
"RTN","PSAVER",127,0)
 .S PSAORD=$P(PSAVER(PSA),"^"),PSAINV=$P(PSAVER(PSA),"^",2) D ^PSAORDP1
"RTN","PSAVER",128,0)
 D ^%ZISC
"RTN","PSAVER",129,0)
 Q
"RTN","PSAVER",130,0)
 ;
"RTN","PSAVER",131,0)
SEL ;Extended help to 'Select invoices'
"RTN","PSAVER",132,0)
 W !?5,"Enter the number to the left of the invoice data that you want to verify.",!?5,"The invoices' statuses will be changed to Verified."
"RTN","PSAVER",133,0)
 Q
"RTN","PSAVER",134,0)
SELHELP ;Extended help for 'Select invoices to verify'
"RTN","PSAVER",135,0)
 W !?5,"Enter the number to the left of the invoice data you want to verify.",!?5,"The line items will be displayed for you to select the ones you want"
"RTN","PSAVER",136,0)
 W !?5,"to correct."
"RTN","PSAVER",137,0)
 Q
"RTN","PSAVER",138,0)
PRINTYN ;Extended help for 'Print invoices?'
"RTN","PSAVER",139,0)
 W !?5,"Enter YES to print all of the processed invoices you can verify.",!?5,"Enter NO to bypass printing the invoices and continue with verification."
"RTN","PSAVER",140,0)
 Q
"RTN","PSAVER",141,0)
VERIFY ;Extended help for 'Are you sure...'
"RTN","PSAVER",142,0)
 W !!?5,"Enter YES if the list contains invoices to be verified.",!!?5,"Enter NO if the list contains at least one invoice that should not be"
"RTN","PSAVER",143,0)
 W !?5,"verified. You will be returned to the original list so you can choose",!?5,"the invoices to be verified again."
"RTN","PSAVER",144,0)
 Q
"RTN","PSAVER1")
0^2^B53904582^B45709811
"RTN","PSAVER1",1,0)
PSAVER1 ;BIR/JMB-Verify Invoices - CONT'D ;7/23/97
"RTN","PSAVER1",2,0)
 ;;3.0; DRUG ACCOUNTABILITY/INVENTORY INTERFACE;**33,60**; 10/24/97;Build 4
"RTN","PSAVER1",3,0)
 ;This routine allows the user to edit processed invoices by selecting
"RTN","PSAVER1",4,0)
 ;the invoice's line item number. If there are no errors after editing
"RTN","PSAVER1",5,0)
 ;the line item is verified.
"RTN","PSAVER1",6,0)
 ;
"RTN","PSAVER1",7,0)
EDIT W @IOF,!?18,"<<< EDIT INVOICES TO BE VERIFIED SCREEN >>>",!!?2,"Choose the invoices from the list you want to edit.",!,PSASLN
"RTN","PSAVER1",8,0)
 S (PSA,PSACNT,PSASTOP)=0,PSATMP="" F  S PSA=+$O(PSAEDIT(PSA)) Q:'PSA  D  Q:PSASTOP
"RTN","PSAVER1",9,0)
 .I $Y+5>IOSL D HEADER Q:PSASTOP
"RTN","PSAVER1",10,0)
 .S PSAIEN=$P(PSAEDIT(PSA),"^"),PSAIEN1=$P(PSAEDIT(PSA),"^",2),PSAORD=$P(^PSD(58.811,PSAIEN,0),"^")
"RTN","PSAVER1",11,0)
 .S PSAINV=$P(^PSD(58.811,PSAIEN,1,PSAIEN1,0),"^"),PSAINVDT=+$P(^(0),"^",2),PSACNT=PSACNT+1
"RTN","PSAVER1",12,0)
 .W !?2,PSA_".",?6,"Order#: "_PSAORD_"  Invoice#: "_PSAINV_"  Invoice Date: "_$$FMTE^XLFDT(PSAINVDT)
"RTN","PSAVER1",13,0)
 K PSASTOP W !,PSASLN
"RTN","PSAVER1",14,0)
 S DIR(0)="LO^1:"_PSACNT,DIR("A")="Select invoices to edit",DIR("?",1)="Enter the number to the left of the invoice",DIR("?")="data to be verified or a range of numbers.",DIR("??")="^D SELHELP^PSAVER"
"RTN","PSAVER1",15,0)
 W ! D ^DIR K DIR Q:$G(DIRUT)
"RTN","PSAVER1",16,0)
 S PSASEL=Y
"RTN","PSAVER1",17,0)
 ;
"RTN","PSAVER1",18,0)
SEL ;Select line items to be edit
"RTN","PSAVER1",19,0)
 K PSAVBKG S PSATMP=""
"RTN","PSAVER1",20,0)
 F PSAPC=1:1 S PSA=$P(PSASEL,",",PSAPC) Q:'PSA  D CORR Q:PSAOUT
"RTN","PSAVER1",21,0)
 I $O(PSAVBKG(0)) D
"RTN","PSAVER1",22,0)
 .K ZTSAVE S ZTDESC="Drug Acct. - Verify Prime Vendor Invoices",ZTIO="",ZTDTH=$H,ZTRTN="^PSAVER6",ZTSAVE("PSAVBKG(")="" D ^%ZTLOAD
"RTN","PSAVER1",23,0)
 Q
"RTN","PSAVER1",24,0)
 ;
"RTN","PSAVER1",25,0)
HEADER ;Header with screen hold
"RTN","PSAVER1",26,0)
 S PSASS=21-$Y F PSAKK=1:1:PSASS W !
"RTN","PSAVER1",27,0)
 S DIR(0)="E" D ^DIR K DIR I $G(DIRUT) S PSASTOP=1 Q
"RTN","PSAVER1",28,0)
 W @IOF,!?18,"<<< EDIT INVOICES TO BE VERIFIED SCREEN >>>",!!,PSASLN
"RTN","PSAVER1",29,0)
 Q
"RTN","PSAVER1",30,0)
 ;
"RTN","PSAVER1",31,0)
CORR S PSAIEN=$P(PSAEDIT(PSA),"^"),PSAIEN1=$P(PSAEDIT(PSA),"^",2),PSASEL1=PSASEL,PSASEL=PSA
"RTN","PSAVER1",32,0)
 S PSAMSG="" D VERLOCK^PSAVER4 ; <== PSA*3*60 (RJS-VMP)
"RTN","PSAVER1",33,0)
 I $L(PSAMSG) D  Q
"RTN","PSAVER1",34,0)
 .D HDR W !,?5,PSAMSG,! S DIR(0)="E" D ^DIR K DIR S PSASEL=PSASEL1 K PSALOCK(PSA),PSASEL1
"RTN","PSAVER1",35,0)
 S PSAIN=^PSD(58.811,PSAIEN,1,PSAIEN1,0),PSAINV=$P(^(0),"^"),PSAINVDT=$P(^(0),"^",2),PSAORD=$P(^PSD(58.811,PSAIEN,0),"^")
"RTN","PSAVER1",36,0)
 D HDR,RECD^PSAVER2 D:PSAOUT
"RTN","PSAVER1",37,0)
 .I PSAOUT D VERUNLCK^PSAVER4 W !,"** The invoice's status has not been changed to Verified!"
"RTN","PSAVER1",38,0)
 I $G(PSAOUT)!$G(DUOUT) S PSAOUT=0,PSASEL=PSASEL1 K PSALOCK(PSA),PSASEL1 Q
"RTN","PSAVER1",39,0)
 S PSALOC=+$P(PSAIN,"^",5),PSAMV=+$P(PSAIN,"^",12)
"RTN","PSAVER1",40,0)
 I PSALOC!($P(PSAIN,"^",8)="S")!($P(PSAIN,"^",8)="N") D  Q:PSAOUT
"RTN","PSAVER1",41,0)
 .D SITES^PSAUTL1 S PSALOCN=$S($G(PSALOC)'>0:"UNKNOWN",1:$P(^PSD(58.8,PSALOC,0),"^"))_PSACOMB
"RTN","PSAVER1",42,0)
 .W:$L(PSALOCN)>76 !!,$P(PSALOCN,"(IP)",1)_"(IP)",!?17,$P(PSALOCN,"(IP)",2) W:$L(PSALOCN)<77 !!,PSALOCN
"RTN","PSAVER1",43,0)
 .S DR=4 D PHARM^PSAVER2
"RTN","PSAVER1",44,0)
 I PSAMV!($P(PSAIN,"^",8)="S")!($P(PSAIN,"^",8)="A") W !!,$P($G(^PSD(58.8,PSAMV,0)),"^") S DR=13 D PHARM^PSAVER2
"RTN","PSAVER1",45,0)
 I X="" D VERUNLCK^PSAVER4 W !,"** The invoice's status has not been changed to Verified!" S PSAOUT=0,PSASEL=PSASEL1 K PSALOCK(PSA),PSASEL1 Q
"RTN","PSAVER1",46,0)
 ;
"RTN","PSAVER1",47,0)
LINES F  W ! S DIC="^PSD(58.811,"_PSAIEN_",1,"_PSAIEN1_",1,",DA(2)=PSAIEN,DA(1)=PSAIEN1,DIC(0)="QAEMZ",DIC("A")="Select Line#: " D ^DIC K DIC D  Q:PSAOUT
"RTN","PSAVER1",48,0)
 .I $G(DTOUT)!($G(DUOUT))!(Y<1) S PSAOUT=1 Q
"RTN","PSAVER1",49,0)
 .S PSALINE=+Y,PSALINEN=$P(Y,"^",2)
"RTN","PSAVER1",50,0)
 .I '$D(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,0)) W !,"Invalid line number." Q
"RTN","PSAVER1",51,0)
 .S PSADATA=^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,0),PSASUP=0
"RTN","PSAVER1",52,0)
 .S PSANDC=$P(PSADATA,"^",11),PSAVSN=$P(PSADATA,"^",12),PSALOC=$S(+$P(PSADATA,"^",10):+$P(PSAIN,"^",12),1:+$P(PSAIN,"^",5))
"RTN","PSAVER1",53,0)
VIEW .D HDR,VERDISP^PSAUTL4 W PSASLN,!
"RTN","PSAVER1",54,0)
 .W "1. Drug",!,"2. Quantity Received",!,"3. Order Unit",!,"4. Dispense Units per Order Unit",! S PSACHO=4
"RTN","PSAVER1",55,0)
 .I $P($G(^PSD(58.8,PSALOC,0)),"^",14)  W "5. Stock Level",!,"6. Reorder Level",! S PSACHO=6
"RTN","PSAVER1",56,0)
 .S DIR(0)="LO^1:"_PSACHO,DIR("A")="Edit fields",DIR("?")="Enter the number(s) of the data to be edited" S DIR("??")="^D DDQOR^PSAVER3"
"RTN","PSAVER1",57,0)
 .D ^DIR K DIR I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1 Q
"RTN","PSAVER1",58,0)
 .Q:Y=""  S PSAFLDS=Y,PSASET=0 D HDR,VERDISP^PSAUTL4 W PSASLN
"RTN","PSAVER1",59,0)
FIELDS .F PSAPCF=1:1 S PSAFLD=$P(PSAFLDS,",",PSAPCF) Q:'PSAFLD!(PSAOUT)  D
"RTN","PSAVER1",60,0)
 ..I PSAFLD=1 D ASKDRUG^PSAVER2 Q
"RTN","PSAVER1",61,0)
 ..I PSAFLD=2 D QTY^PSAVER2 Q
"RTN","PSAVER1",62,0)
 ..I PSAFLD=3 D OU^PSAVER2 Q
"RTN","PSAVER1",63,0)
 ..I PSAFLD=4,'PSASET S PSA50IEN=PSADRG D DUOU^PSAVER2 Q
"RTN","PSAVER1",64,0)
 ..I PSAFLD=5 D STOCK^PSAVER2 Q
"RTN","PSAVER1",65,0)
 ..I PSAFLD=6 D REORDER^PSAVER2
"RTN","PSAVER1",66,0)
 ;<== PSA*3*60 (RJS-VMP)
"RTN","PSAVER1",67,0)
 ;Determines if the invoice's status should be changed to verified. If
"RTN","PSAVER1",68,0)
 ;so, the status is changed and the new drugs to the location is listed.
"RTN","PSAVER1",69,0)
 W ! S DIR(0)="Y",DIR("A")="Do you want to change the invoice's status to Verified",DIR("?",1)="Enter YES to change the invoice's status to Verified.",DIR("?")="Enter NO to keep the invoice's status as Processed."
"RTN","PSAVER1",70,0)
 S DIR("??")="^D CHGYN^PSAVER1" D ^DIR K DIR ;D:'Y VERUNLCK^PSAVER4
"RTN","PSAVER1",71,0)
 I $G(DIRUT)!('Y) D VERUNLCK^PSAVER4 W !,"** The invoice's status has not been changed to Verified!" S (PSAOUT,PSACHG)=0,PSASEL=PSASEL1 K PSALOCK(PSA),PSASEL1 Q
"RTN","PSAVER1",72,0)
 S PSACHG=Y,PSAVBKG(PSAIEN,PSAIEN1)=""
"RTN","PSAVER1",73,0)
 ;==> PSA*3*60 (RJS-VMP)
"RTN","PSAVER1",74,0)
 ;Looks to see if all line items are processed.
"RTN","PSAVER1",75,0)
PROCESS S (PSACS,PSAERR,PSALINE,PSALINES,PSALNCNT,PSALNSU,PSAOUT,PSASUP)=0
"RTN","PSAVER1",76,0)
 S PSAIN=$G(^PSD(58.811,PSAIEN,1,PSAIEN1,0)),PSAORD=$P($G(^PSD(58.811,PSAIEN,0)),"^")
"RTN","PSAVER1",77,0)
 F  S PSALINE=$O(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE)) Q:'PSALINE!(PSAOUT)  D
"RTN","PSAVER1",78,0)
 .S PSADATA=^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,0),PSALNERR=0,PSALNCNT=PSALNCNT+1
"RTN","PSAVER1",79,0)
 .D SETLINE^PSAVER3 I PSAOUT D VERUNLCK^PSAVER4 W !,"** The invoice's status has not been changed to Verified!" S (PSAOUT,PSACHG)=0,PSASEL=PSASEL1 K PSALOCK(PSA),PSASEL1 Q
"RTN","PSAVER1",80,0)
 .S:'+$G(PSALNERR) PSALINES=PSALINES+1 S PSADATA=^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,0)
"RTN","PSAVER1",81,0)
 .S:+$P(PSADATA,"^",10) PSACS=PSACS+1
"RTN","PSAVER1",82,0)
 ;
"RTN","PSAVER1",83,0)
CHECK I PSALNCNT'=PSALINES D  Q
"RTN","PSAVER1",84,0)
 .K PSAHOLD(PSALOC,PSAIEN,PSAIEN1) W !!,"** The invoice has not been placed in a Verified status!"
"RTN","PSAVER1",85,0)
 .D END^PSAPROC D:+$G(PSAERR) PRINT^PSAVER3
"RTN","PSAVER1",86,0)
 .D VERUNLCK^PSAVER4 S PSASEL=PSASEL1 K PSALOCK(PSA),PSASEL1 Q
"RTN","PSAVER1",87,0)
 I +PSALNCNT,PSALNCNT=PSACS D
"RTN","PSAVER1",88,0)
 .S $P(^PSD(58.811,PSAIEN,1,PSAIEN1,0),"^",8)="A" W !,"All drugs on the invoice are marked as a controlled substance."
"RTN","PSAVER1",89,0)
 .D:'+$P($G(^PSD(58.811,PSAIEN,1,PSAIEN1,0)),"^",12) MASTER^PSAVER5
"RTN","PSAVER1",90,0)
 I PSACS,PSALNCNT'=PSACS S $P(^PSD(58.811,PSAIEN,1,PSAIEN1,0),"^",8)="S" D:'$P($G(^PSD(58.811,PSAIEN,1,PSAIEN1,0)),"^",5) GETLOC^PSAVER5
"RTN","PSAVER1",91,0)
 I 'PSACS S $P(^PSD(58.811,PSAIEN,1,PSAIEN1,0),"^",8)="N" D:'$P($G(^PSD(58.811,PSAIEN,1,PSAIEN1,0)),"^",5) GETLOC^PSAVER5
"RTN","PSAVER1",92,0)
 I +PSALNCNT,PSALNCNT=PSALINES D  Q
"RTN","PSAVER1",93,0)
 .D CHG
"RTN","PSAVER1",94,0)
 .I PSALNCNT=PSASUP S $P(^PSD(58.811,PSAIEN,1,PSAIEN1,0),"^",13)=1 Q
"RTN","PSAVER1",95,0)
 .S $P(^PSD(58.811,PSAIEN,1,PSAIEN1,0),"^",13)=0
"RTN","PSAVER1",96,0)
 D END^PSAPROC D:+$G(PSAERR) PRINT^PSAVER3
"RTN","PSAVER1",97,0)
 Q
"RTN","PSAVER1",98,0)
 ;<== PSA*3*60 (RJS-VMP)
"RTN","PSAVER1",99,0)
CHG D STATUS^PSAVER3,NEWDRUG
"RTN","PSAVER1",100,0)
 W !!,"The invoice status has been changed to Verified!"
"RTN","PSAVER1",101,0)
 D END^PSAPROC
"RTN","PSAVER1",102,0)
 Q
"RTN","PSAVER1",103,0)
 ;
"RTN","PSAVER1",104,0)
NEWDRUG ;If this invoice will add new drugs to location/vault, store in an
"RTN","PSAVER1",105,0)
 ;array the location/vault and drug name to be printed later.
"RTN","PSAVER1",106,0)
 K PSALND,PSALN0,PSALNP,PSALNV
"RTN","PSAVER1",107,0)
 S PSALINE=0,PSAPHARM=+$P($G(^PSD(58.811,PSAIEN,1,PSAIEN1,0)),"^",5),PSAMV=$P($G(^(0)),"^",12)
"RTN","PSAVER1",108,0)
 Q:'PSALOC
"RTN","PSAVER1",109,0)
 F  S PSALINE=$O(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE)) Q:'PSALINE  D
"RTN","PSAVER1",110,0)
 .S PSALN0=+$P($G(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,0)),"^",2),PSALOC=$S($P($G(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,0)),"^",10):PSAMV,1:PSAPHARM)
"RTN","PSAVER1",111,0)
 .I $O(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,1,"D",0)) D
"RTN","PSAVER1",112,0)
 ..S PSADJ=$O(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,1,"D",0))
"RTN","PSAVER1",113,0)
 ..Q:'$D(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,1,PSADJ,0))
"RTN","PSAVER1",114,0)
 ..S PSALNP=+$P(PSADJ,"^",2),PSALNV=+$P(PSADJ,"^",6)
"RTN","PSAVER1",115,0)
 .S PSADD=$S($G(PSALNV):PSALNV,$G(PSALNP):PSALNP,PSALN0:PSALN0,1:0)
"RTN","PSAVER1",116,0)
 .I PSADD,'$D(^PSD(58.8,PSALOC,1,PSADD,0)) S PSANEWD(PSALOC,$S($P($G(^PSDRUG(PSADD,0)),"^")'="":$P($G(^PSDRUG(PSADD,0)),"^"),1:"UNKNOWN"))=PSADD
"RTN","PSAVER1",117,0)
 Q
"RTN","PSAVER1",118,0)
 ;
"RTN","PSAVER1",119,0)
HDR ;Header for screen that displays invoice data to be edited.
"RTN","PSAVER1",120,0)
 W @IOF,!?18,"<<< EDIT INVOICES TO BE VERIFIED SCREEN >>>"
"RTN","PSAVER1",121,0)
 W !!,"Order#: "_PSAORD_"  Invoice#: "_PSAINV_"  Invoice Date: "_$$FMTE^XLFDT(PSAINVDT),!,PSASLN,!
"RTN","PSAVER1",122,0)
 Q
"RTN","PSAVER1",123,0)
 ;
"RTN","PSAVER1",124,0)
CHGYN ;Extended help for 'Do you want to change the invoice's status to Verified'
"RTN","PSAVER1",125,0)
 W !?5,"Enter YES if the invoice is completely correct. You will not be able",!?5,"to edit it again."
"RTN","PSAVER1",126,0)
 W !!?5,"Enter NO if you need to edit the invoice again. You can edit it again",!?5,"by selecting the Verify Orders option."
"RTN","PSAVER1",127,0)
 Q
"RTN","PSAVER2")
0^7^B48168766^B48083431
"RTN","PSAVER2",1,0)
PSAVER2 ;BIR/JMB-Verify Invoices - CONT'D ;10/7/97
"RTN","PSAVER2",2,0)
 ;;3.0; DRUG ACCOUNTABILITY/INVENTORY INTERFACE;**3,12,21,60**; 10/24/97;Build 4
"RTN","PSAVER2",3,0)
 ;This routine contains the prompts for the fields that the verifier
"RTN","PSAVER2",4,0)
 ;is allowed to edit.
"RTN","PSAVER2",5,0)
 ;
"RTN","PSAVER2",6,0)
 ;References to ^DIC(51.5, are covered by IA #1931
"RTN","PSAVER2",7,0)
 ;References to ^PSDRUG( are covered by IA #2095
"RTN","PSAVER2",8,0)
 ;References to ^PSDRUG("C" are covered by IA #2095
"RTN","PSAVER2",9,0)
 ;
"RTN","PSAVER2",10,0)
ASKDRUG W !,"If the item will never be in the DRUG, press the Return key then",!,"answer YES to the ""Is this a supply item?"" prompt. To bypass this",!,"line item, enter ""^"" then press the Return key.",!
"RTN","PSAVER2",11,0)
 S PSAGAIN=0,PSABEFOR=PSADRG,DIC(0)="AEMQZ",DIC="^PSDRUG(" D ^DIC K DIC
"RTN","PSAVER2",12,0)
 I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1 Q
"RTN","PSAVER2",13,0)
 S PSADJFLD="D",PSAREA="",PSASUPP=0
"RTN","PSAVER2",14,0)
 I +Y=-1 D  Q:PSASUPP!(PSAOUT)
"RTN","PSAVER2",15,0)
 .S PSAVER=1 D SUPPLY^PSANDF Q:PSAOUT  I 'PSASUPP S PSAGAIN=1 Q
"RTN","PSAVER2",16,0)
 .S PSA50IEN=0,PSADJ=PSAREA,PSAREA="" K ^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,2)
"RTN","PSAVER2",17,0)
 .D RECORD
"RTN","PSAVER2",18,0)
 G:$G(PSAGAIN) ASKDRUG
"RTN","PSAVER2",19,0)
 S (PSA50IEN,PSADJ,PSADRG)=+Y D RECORD,HDR^PSAVER1,VERDISP^PSAUTL4
"RTN","PSAVER2",20,0)
 I PSANDC'="",$O(^PSDRUG("C",PSANDC,PSA50IEN,0)) D
"RTN","PSAVER2",21,0)
 .S PSASUB=+$O(^PSDRUG("C",PSANDC,PSA50IEN,0)),$P(^PSD(58.811,PSAIEN,1,PSAIEN1,2),"^",3)=PSASUB
"RTN","PSAVER2",22,0)
 .I '+$P($G(^PSDRUG(PSA50IEN,1,PSASUB,0)),"^",7) D DUOU Q
"RTN","PSAVER2",23,0)
 .I +$P($G(^PSDRUG(PSA50IEN,1,PSASUB,0)),"^",7),+$P($G(^PSDRUG(PSA50IEN,1,PSASUB,0)),"^",7)'=+$P($G(^PSDRUG(PSABEFOR,1,PSASUB,0)),"^",7) D DUOU
"RTN","PSAVER2",24,0)
 ;
"RTN","PSAVER2",25,0)
 I PSANDC'="",'$O(^PSDRUG("C",PSANDC,PSA50IEN,0)),PSA50IEN'=PSABEFOR D DUOU
"RTN","PSAVER2",26,0)
 ;
"RTN","PSAVER2",27,0)
 I PSANDC="",PSAUPC="" D
"RTN","PSAVER2",28,0)
 .W !,"The vendor did not send a NDC or UPC for the drug. Enter the",!,"NDC if it is available. Enter the UPC if you do not know the NDC.",!
"RTN","PSAVER2",29,0)
 .S DIR(0)="SA^N:NDC;U:UPC",DIR("A")="Will you enter the NDC or UPC? ",DIR("B")="N",DIR("??")="^D NDCUPC^PSANDF1" D ^DIR K DIR I $G(DIRUT) S PSAOUT=1 Q
"RTN","PSAVER2",30,0)
 .I Y="N" D GETNDC^PSANDF Q:PSAOUT  S PSANDC=Y D:PSANDC'="" ADDDATA
"RTN","PSAVER2",31,0)
 .I Y="U" D GETUPC^PSANDF Q:PSAOUT  S PSANDC="S"_Y,PSAUPC=Y D:PSANDC'="" ADDDATA
"RTN","PSAVER2",32,0)
 Q
"RTN","PSAVER2",33,0)
 ;
"RTN","PSAVER2",34,0)
ADDDATA ;Adds the missing NDC and/or UPC
"RTN","PSAVER2",35,0)
 K DA S DA(2)=PSAIEN,DA(1)=PSAIEN1,DA=PSALINE,DIE="^PSD(58.811,"_DA(2)_",1,"_DA(1)_",1,",DR="13///^S X="_PSANDC_$S(PSAUPC'="":";15///^S X="_PSAUPC,1:"")
"RTN","PSAVER2",36,0)
 F  L +^PSD(58.811,PSAIEN,1,PSAIEN1,0):0 I  Q
"RTN","PSAVER2",37,0)
 D ^DIE L -^PSD(58.811,PSAIEN,1,PSAIEN1,0)
"RTN","PSAVER2",38,0)
 K DIE I $G(DTOUT)!($G(DUOUT)) S PSAOUT=0 Q
"RTN","PSAVER2",39,0)
 D VERDISP^PSAUTL4
"RTN","PSAVER2",40,0)
 Q
"RTN","PSAVER2",41,0)
RECORD ;Adds adjusted data to DA ORDERS file
"RTN","PSAVER2",42,0)
 S PSANEW=0
"RTN","PSAVER2",43,0)
 I '$D(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,1,0)) S ^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,1,0)="^58.811259SA^^"
"RTN","PSAVER2",44,0)
 I $D(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,1,"B",PSADJFLD)) D  Q
"RTN","PSAVER2",45,0)
 .S DA=$O(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,1,"B",PSADJFLD,0))
"RTN","PSAVER2",46,0)
 .I '$D(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,1,DA,0)) D NEW Q
"RTN","PSAVER2",47,0)
 .D ADJ
"RTN","PSAVER2",48,0)
 ;
"RTN","PSAVER2",49,0)
NEW S:'$D(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,1,0)) DIC("P")=$P(^DD(58.81125,9,0),"^",2) K DA
"RTN","PSAVER2",50,0)
 S DA(3)=PSAIEN,DA(2)=PSAIEN1,DA(1)=PSALINE,X=PSADJFLD,DIC="^PSD(58.811,"_DA(3)_",1,"_DA(2)_",1,"_DA(1)_",1,",DIC(0)="L",DLAYGO=58.811
"RTN","PSAVER2",51,0)
 F  L +^PSD(58.811,PSAIEN,1,PSAIEN1,0):0 I  Q
"RTN","PSAVER2",52,0)
 D ^DIC L -^PSD(58.811,PSAIEN,1,PSAIEN1,0) K DIC,DLAYGO S DA=+Y
"RTN","PSAVER2",53,0)
 ;
"RTN","PSAVER2",54,0)
ADJ S DA(3)=PSAIEN,DA(2)=PSAIEN1,DA(1)=PSALINE,DIE="^PSD(58.811,"_DA(3)_",1,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","PSAVER2",55,0)
 ;
"RTN","PSAVER2",56,0)
 ;PSA*3*3 (DaveB 1JUN98)
"RTN","PSAVER2",57,0)
 S DR="5///^S X=PSADJ"_$S(PSAREA'="":";6////^S X=PSAREA",1:"")_";7///^S X="_DT_";8////^S X="_DUZ  ; *60
"RTN","PSAVER2",58,0)
 F  L +^PSD(58.811,PSAIEN,1,PSAIEN1,0):0 I  Q
"RTN","PSAVER2",59,0)
 D ^DIE
"RTN","PSAVER2",60,0)
INDEX S DIK=DIE D IX1^DIK K DIE,DIK L -^PSD(58.811,PSAIEN,1,PSAIEN1,0)
"RTN","PSAVER2",61,0)
 Q
"RTN","PSAVER2",62,0)
 ;
"RTN","PSAVER2",63,0)
DUOU ;Gets Dispense Units Per Order Unit
"RTN","PSAVER2",64,0)
 ;DAVE B (PSA*3*12) If PSASUPP is defined, the item is supply
"RTN","PSAVER2",65,0)
 ;no need to ask for dispense units per order unit.
"RTN","PSAVER2",66,0)
 I $G(PSASUPP)=1 W !,"Item appears to be marked for supply, no need to enter Dispense Units Per Order Unit." Q
"RTN","PSAVER2",67,0)
 W !,"DISPENSE UNITS: "_$S($P($G(^PSDRUG(PSA50IEN,660)),"^",8)'="":$P($G(^PSDRUG(PSA50IEN,660)),"^",8),1:"Blank")
"RTN","PSAVER2",68,0)
 S DIR(0)="NO^::2",DIR("A")="DISPENSE UNITS PER ORDER UNIT",DIR("B")=$P($G(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,2)),"^")
"RTN","PSAVER2",69,0)
 S DIR("?")="Enter the number of dispense units contained in one order unit",DIR("??")="^D DUOUHELP^PSAPROC3"
"RTN","PSAVER2",70,0)
 D ^DIR K DIR I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1 Q
"RTN","PSAVER2",71,0)
 S $P(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,2),"^")=+Y S:+Y PSASET=1
"RTN","PSAVER2",72,0)
 Q:Y'=""
"RTN","PSAVER2",73,0)
 ;
"RTN","PSAVER2",74,0)
 W !!,"The dispense units per order unit must be entered",!,"to change the status of the invoice to Verified."
"RTN","PSAVER2",75,0)
 S DIR(0)="Y",DIR("B")="Y",DIR("A")="Do you want to enter the data now"
"RTN","PSAVER2",76,0)
 S DIR("?",1)="Enter Yes to return to the DISPENSE UNITS PER ORDER UNIT prompt.",DIR("?")="Enter No to bypass entering the dispense units now."
"RTN","PSAVER2",77,0)
 S DIR("??")="^D DUOUYN^PSAPROC8" D ^DIR K DIR I $G(DIRUT) S PSAOUT=1 Q
"RTN","PSAVER2",78,0)
 W ! G:+Y DUOU
"RTN","PSAVER2",79,0)
 Q
"RTN","PSAVER2",80,0)
 ;
"RTN","PSAVER2",81,0)
OU ;Get order unit
"RTN","PSAVER2",82,0)
 S DIC(0)="QAEMZ",DIC="^DIC(51.5,",DIC("A")="ORDER UNIT: ",DR=.01 S:+PSAOU&($P($G(^DIC(51.5,+PSAOU,0)),"^")'="") DIC("B")=$P(^DIC(51.5,+PSAOU,0),"^") D ^DIC K DIC
"RTN","PSAVER2",83,0)
 I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1 Q
"RTN","PSAVER2",84,0)
 ;
"RTN","PSAVER2",85,0)
 ;PSA*3*12 Dave B, allow verifier to change OU to original if necessary
"RTN","PSAVER2",86,0)
 G:Y=-1 OU S PSADJFLD="O",PSADJ=+Y,PSAREA="" D RECORD
"RTN","PSAVER2",87,0)
 Q
"RTN","PSAVER2",88,0)
 ;
"RTN","PSAVER2",89,0)
PHARM ;Pharmacy Location/Master Vault -- DR is set prior to the call.
"RTN","PSAVER2",90,0)
 K DA S DA(1)=PSAIEN,DA=PSAIEN1,DIE="^PSD(58.811,"_DA(1)_",1," D ^DIE K DIE
"RTN","PSAVER2",91,0)
 S:$G(DTOUT)!($G(DUOUT)) PSAOUT=1
"RTN","PSAVER2",92,0)
 Q
"RTN","PSAVER2",93,0)
 ;
"RTN","PSAVER2",94,0)
QTY ;Adjust the quantity received
"RTN","PSAVER2",95,0)
 S DIR(0)="N",DIR("A")="QUANTITY RECEIVED",DIR("B")=PSAQTY
"RTN","PSAVER2",96,0)
 S DIR("?",1)="If the quantity received is different than the invoiced or",DIR("?")="adjusted quantity, enter the correct quantity received.",DIR("??")="^D QTYHELP^PSAPROC3"
"RTN","PSAVER2",97,0)
 D ^DIR K DIR I $G(DIRUT) S PSAOUT=1 Q
"RTN","PSAVER2",98,0)
 Q:PSAQTY=+Y  S PSADJ=+Y
"RTN","PSAVER2",99,0)
 S DIR(0)="F^1:30",DIR("A")="ADJUSTMENT REASON",DIR("?")="Enter the reason you adjusted the quantity received.",DIR("??")="^D ADJREA^PSAPROC3"
"RTN","PSAVER2",100,0)
 D ^DIR K DIR I $G(DIRUT) S PSAOUT=1 Q
"RTN","PSAVER2",101,0)
 S PSADJFLD="Q",PSAREA=Y D RECORD
"RTN","PSAVER2",102,0)
 Q
"RTN","PSAVER2",103,0)
 ;
"RTN","PSAVER2",104,0)
RECD ;Date Received
"RTN","PSAVER2",105,0)
 K PSARECD S PSAREC=$S(+$P(PSAIN,"^",7):+$P(PSAIN,"^",7),+$P(PSAIN,"^",6):+$P(PSAIN,"^",6),1:"")
"RTN","PSAVER2",106,0)
 S DIR(0)="D",DIR("A")="Date received",DIR("?")="Enter the date the drugs were received.",DIR("??")="^D RECHELP^PSAPROC3" S:PSAREC DIR("B")=$$FMTE^XLFDT(PSAREC)
"RTN","PSAVER2",107,0)
 D ^DIR K DIR I $G(DIRUT) S PSAOUT=1 Q
"RTN","PSAVER2",108,0)
 Q:'+$P(PSAIN,"^",7)&(+Y=+$P(PSAIN,"^",6))
"RTN","PSAVER2",109,0)
 Q:+$P(PSAIN,"^",6)'=+$P(PSAIN,"^",7)&(+$P(PSAIN,"^",7)=+Y)
"RTN","PSAVER2",110,0)
 S:+$P(PSAIN,"^",6)=+Y PSARECD="@"
"RTN","PSAVER2",111,0)
 S:+$P(PSAIN,"^",6)'=+Y&(+$P(PSAIN,"^",7)'=+Y) PSARECD=+Y
"RTN","PSAVER2",112,0)
 Q:'$D(PSARECD)  K DA
"RTN","PSAVER2",113,0)
 S DA(1)=PSAIEN,DA=PSAIEN1,DIE="^PSD(58.811,"_DA(1)_",1,",DR="8///"_$S(+PSARECD:"^S X="_PSARECD,1:"@")
"RTN","PSAVER2",114,0)
 F  L +^PSD(58.811,PSAIEN,1,PSAIEN1,0):0 I  Q
"RTN","PSAVER2",115,0)
 D ^DIE L -^PSD(58.811,PSAIEN,1,PSAIEN1,0)
"RTN","PSAVER2",116,0)
 K DIE
"RTN","PSAVER2",117,0)
 I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1
"RTN","PSAVER2",118,0)
 Q
"RTN","PSAVER2",119,0)
 ;
"RTN","PSAVER2",120,0)
REORDER ;Enter reorder level for drug if the field is blank.
"RTN","PSAVER2",121,0)
 S DIR(0)="NO^0:99999",DIR("A")="REORDER LEVEL (in Dispense Units)",DIR("??")="^D REORD^PSAPROC8",DIR("B")=+PSAREORD
"RTN","PSAVER2",122,0)
 S DIR("?")="Enter the minimum number of dispense units to keep in the "_$S(+$P(PSADATA,"^",10):"master vault",1:"pharmacy location")_"."
"RTN","PSAVER2",123,0)
 D ^DIR K DIR I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1 Q
"RTN","PSAVER2",124,0)
 S $P(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,2),"^",2)=+Y
"RTN","PSAVER2",125,0)
 Q
"RTN","PSAVER2",126,0)
STOCK ;Enter stock level for drug if the field is blank.
"RTN","PSAVER2",127,0)
 S DIR(0)="NO^0:99999",DIR("A")="STOCK LEVEL (in Dispense Units)",DIR("??")="^D STKLEVEL^PSAPROC8",DIR("B")=+PSASTOCK
"RTN","PSAVER2",128,0)
 S DIR("?")="Enter the ideal number of dispense units to keep on the shelf."
"RTN","PSAVER2",129,0)
 D ^DIR K DIR I $G(DTOUT)!($G(DUOUT)) S PSAOUT=1 Q
"RTN","PSAVER2",130,0)
 S $P(^PSD(58.811,PSAIEN,1,PSAIEN1,1,PSALINE,2),"^",4)=+Y
"RTN","PSAVER2",131,0)
 Q
"RTN","PSAVER4")
0^3^B15659954^B8379472
"RTN","PSAVER4",1,0)
PSAVER4 ;;BIR/JMB-Verify Invoices - CONT'D ;9/8/97
"RTN","PSAVER4",2,0)
 ;;3.0; DRUG ACCOUNTABILITY/INVENTORY INTERFACE;**15,60**; 10/24/97;Build 4
"RTN","PSAVER4",3,0)
 ;This routine prints the report of new drugs that will be added to
"RTN","PSAVER4",4,0)
 ;each pharmacy location or master vault.
"RTN","PSAVER4",5,0)
 ;
"RTN","PSAVER4",6,0)
 ;Asks & prints all invoices the user can verify.
"RTN","PSAVER4",7,0)
 W @IOF,!,"The verified invoices contain new drugs for the assigned pharmacy location.",!,"A report will print by pharmacy location listing the new drugs. Use the"
"RTN","PSAVER4",8,0)
 W !,"Balance Adjustment option to enter an adjustment that reflects the total",!,"dispense units on hand for each new drug.",!!,"It is suggested that you send the report to a print."
"RTN","PSAVER4",9,0)
 K IO("Q") S %ZIS="Q" W !
"RTN","PSAVER4",10,0)
 D ^%ZIS I POP W !,"NO DEVICE SELECTED OR OUTPUT PRINTED!" Q
"RTN","PSAVER4",11,0)
 I $D(IO("Q")) D  G QUIT
"RTN","PSAVER4",12,0)
 .N ZTSAVE,ZTIO,ZTRTN,ZTSAVE,ZTDTH,ZTSK
"RTN","PSAVER4",13,0)
 .S ZTDESC="Drug Acct. - Print New Drugs",ZTDTH=$H,ZTRTN="PRINT^PSAVER4"
"RTN","PSAVER4",14,0)
 .S ZTSAVE("PSANEWD(")="" D ^%ZTLOAD
"RTN","PSAVER4",15,0)
 ;
"RTN","PSAVER4",16,0)
PRINT ;Sends invoices to printer
"RTN","PSAVER4",17,0)
 S (PSALOC,PSAOUT)=0,PSAPG=1,PSADLN="",$P(PSADLN,"=",80)="",PSASLN="",$P(PSASLN,"-",80)=""
"RTN","PSAVER4",18,0)
 F  S PSALOC=+$O(PSANEWD(PSALOC)) Q:'PSALOC!(PSAOUT)  S PSADRGN=1 D HDR  Q:PSAOUT  D  Q:PSAOUT
"RTN","PSAVER4",19,0)
 .F  S PSADRGN=$O(PSANEWD(PSALOC,PSADRGN)) Q:PSADRGN=""!(PSAOUT)  D:$Y+5>IOSL HDR Q:PSAOUT  W !,PSADRGN,!,PSASLN,!
"RTN","PSAVER4",20,0)
 D:$E(IOST,1,2)="C-"&('PSAOUT) END^PSAPROC W:$E(IOST)'="C" @IOF
"RTN","PSAVER4",21,0)
 K PSANEWD(PSALOC)
"RTN","PSAVER4",22,0)
QUIT D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" K IO("Q")
"RTN","PSAVER4",23,0)
 Q
"RTN","PSAVER4",24,0)
 ;
"RTN","PSAVER4",25,0)
HDR ;Prints the header to the New Drug Report on the screen & paper.
"RTN","PSAVER4",26,0)
 I $E(IOST,1,2)="C-" D:PSAPG'=1 END^PSAPROC Q:PSAOUT  W @IOF,!?28,"<<< NEW DRUG REPORT >>>"
"RTN","PSAVER4",27,0)
 I $E(IOST)'="C" W:PSAPG'=1 @IOF W !?20,"DRUG ACCOUNTABILITY/INVENTORY INTERFACE",!?28,"<<< NEW DRUG REPORT >>>",?72,"Page "_PSAPG
"RTN","PSAVER4",28,0)
 I $P($G(^PSD(58.8,PSALOC,0)),"^",2)="M" W !?34,"MASTER VAULT",!!,$P($G(^PSD(58.8,PSALOC,0)),"^")
"RTN","PSAVER4",29,0)
 I $P($G(^PSD(58.8,PSALOC,0)),"^",2)="P" D
"RTN","PSAVER4",30,0)
 .D SITES^PSAUTL1 S PSALOCN=$P(^PSD(58.8,PSALOC,0),"^")_PSACOMB
"RTN","PSAVER4",31,0)
 .W !?31,"PHARMACY LOCATION",!!
"RTN","PSAVER4",32,0)
 .W:$L(PSALOCN)>76 $P(PSALOCN,"(IP)",1)_"(IP)",!?17,$P(PSALOCN,"(IP)",2) W:$L(PSALOCN)<77 PSALOCN
"RTN","PSAVER4",33,0)
 W !,PSADLN S PSAPG=PSAPG+1
"RTN","PSAVER4",34,0)
 Q
"RTN","PSAVER4",35,0)
 ;
"RTN","PSAVER4",36,0)
VERLOCK ;==> PSA*3*60 (RJS-VMP)Sets invoice's status to Verifying
"RTN","PSAVER4",37,0)
 N DIC,DA,DR,DIE
"RTN","PSAVER4",38,0)
 I '$D(^PSD(58.811,"ASTAT","V",PSAIEN,PSAIEN1)),'$D(^PSD(58.811,"ASTAT","P",PSAIEN,PSAIEN1)),$D(^PSD(58.811,"ASTAT","L",PSAIEN,PSAIEN1)) D  Q
"RTN","PSAVER4",39,0)
 .S PSAMSG="**This Invoice is currently being Verified by another user"
"RTN","PSAVER4",40,0)
 I '$D(^PSD(58.811,"ASTAT","P",PSAIEN,PSAIEN1)),'$D(^PSD(58.811,"ASTAT","L",PSAIEN,PSAIEN1))&(($D(^PSD(58.811,"ASTAT","V",PSAIEN,PSAIEN1)))!($D(^PSD(58.811,"ASTAT","C",PSAIEN,PSAIEN1)))) D  Q
"RTN","PSAVER4",41,0)
 .S PSAMSG="**This Invoice has already been Verified by another user"
"RTN","PSAVER4",42,0)
 F  L +^PSD(58.811,PSAIEN,1,PSAIEN1,0):0 I  Q:$T
"RTN","PSAVER4",43,0)
 I '$D(^PSD(58.811,"ASTAT","L",PSAIEN,PSAIEN1)),'$D(^PSD(58.811,"ASTAT","V",PSAIEN,PSAIEN1)),$D(^PSD(58.811,"ASTAT","P",PSAIEN,PSAIEN1)) D
"RTN","PSAVER4",44,0)
 .S DA=PSAIEN1,DA(1)=PSAIEN,DIE="^PSD(58.811,"_DA(1)_",1,",DR="2///L;12////^S X="_DUZ
"RTN","PSAVER4",45,0)
 .D ^DIE
"RTN","PSAVER4",46,0)
 .S PSALOCK(PSA)=PSAIEN_"^"_PSAIEN1
"RTN","PSAVER4",47,0)
 .I PSATMP S PSATMP=PSATMP_","_PSA
"RTN","PSAVER4",48,0)
 .I 'PSATMP S PSATMP=PSA
"RTN","PSAVER4",49,0)
 L -^PSD(58.811,PSAIEN,1,PSAIEN1,0)
"RTN","PSAVER4",50,0)
 Q
"RTN","PSAVER4",51,0)
 ;
"RTN","PSAVER4",52,0)
VERUNLCK ; VERIFY CANCELED RESET INVOICE TO PROCESSED
"RTN","PSAVER4",53,0)
 N Y,PSAPC S PSACNT=0 F PSAPC=1:1 S PSA=+$P(PSASEL,",",PSAPC) Q:'PSA  D
"RTN","PSAVER4",54,0)
 .S PSAIEN=$P(PSALOCK(PSA),"^"),PSAIEN1=$P(PSALOCK(PSA),"^",2)
"RTN","PSAVER4",55,0)
 .I $D(^PSD(58.811,"ASTAT","L",PSAIEN,PSAIEN1)) D
"RTN","PSAVER4",56,0)
 ..N DIC,DA,DR,DIE
"RTN","PSAVER4",57,0)
 ..F  L +^PSD(58.811,PSAIEN,1,PSAIEN1,0):0 I  Q
"RTN","PSAVER4",58,0)
 ..S DA=PSAIEN1,DA(1)=PSAIEN,DIE="^PSD(58.811,"_DA(1)_",1,",DR="2///P;12////@" D ^DIE
"RTN","PSAVER4",59,0)
 ..L -^PSD(58.811,PSAIEN,1,PSAIEN1,0)
"RTN","PSAVER4",60,0)
 Q  ;<== PSA*3*?? (RJS-VMP)
"UP",58.811,58.8112,-1)
58.811^1
"UP",58.811,58.8112,0)
58.8112
"VER")
8.0^22.0
"^DD",58.811,58.8112,2,0)
INVOICE STATUS^S^P:PROCESSED;V:VERIFIED;C:COMPLETED;L:LOCKED VERIFYING;^0;3^Q
"^DD",58.811,58.8112,2,.1)
Invoice Status
"^DD",58.811,58.8112,2,1,0)
^.1
"^DD",58.811,58.8112,2,1,1,0)
58.811^ASTAT
"^DD",58.811,58.8112,2,1,1,1)
S ^PSD(58.811,"ASTAT",$E(X,1,30),DA(1),DA)=""
"^DD",58.811,58.8112,2,1,1,2)
K ^PSD(58.811,"ASTAT",$E(X,1,30),DA(1),DA)
"^DD",58.811,58.8112,2,1,1,3)
DO NOT DELETE!
"^DD",58.811,58.8112,2,1,1,"%D",0)
^^2^2^2961129^^
"^DD",58.811,58.8112,2,1,1,"%D",1,0)
This cross-reference is used to locate all invoices with a specific
"^DD",58.811,58.8112,2,1,1,"%D",2,0)
status.
"^DD",58.811,58.8112,2,1,1,"DT")
2961129
"^DD",58.811,58.8112,2,3)
Enter the status of the invoice.
"^DD",58.811,58.8112,2,21,0)
^^3^3^2960503^^
"^DD",58.811,58.8112,2,21,1,0)
The INVOICE STATUS field contains the status of the invoice. 
"^DD",58.811,58.8112,2,21,2,0)
When the invoice is completed, the drug balances are incremented 
"^DD",58.811,58.8112,2,21,3,0)
with the quantities received on the invoice.
"^DD",58.811,58.8112,2,"DT")
3060322
"BLD",6905,6)
^47
**END**
**END**
