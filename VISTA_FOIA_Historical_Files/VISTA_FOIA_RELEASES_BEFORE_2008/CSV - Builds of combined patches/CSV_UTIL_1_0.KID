KIDS Distribution saved on Sep 10, 2003@06:40:39
LEXICON/ICD/CPT CSV UPDATE
**KIDS**:CSV UTIL 1.0^LEX*2.0*25^ICD*18.0*6^ICPT*6.0*14^

**INSTALL NAME**
CSV UTIL 1.0
"BLD",3230,0)
CSV UTIL 1.0^^1^3030910^n
"BLD",3230,1,0)
^^45^45^3030903^^^^
"BLD",3230,1,1,0)

"BLD",3230,1,2,0)
 **********************************************************************
"BLD",3230,1,3,0)
 *                                                                    *
"BLD",3230,1,4,0)
 *   This build is part of the CSV Project and must be installed at   *
"BLD",3230,1,5,0)
 *                   all sites by September 30, 2003                  *
"BLD",3230,1,6,0)
 *                                                                    *
"BLD",3230,1,7,0)
 **********************************************************************
"BLD",3230,1,8,0)

"BLD",3230,1,9,0)
 Please refer to the Health Insurance Portability and Accountability 
"BLD",3230,1,10,0)
 Act (HIPAA) Code Set Versioning (CSV) Installation Guide for details
"BLD",3230,1,11,0)
 of the installation procedure for this patch.
"BLD",3230,1,12,0)
 
"BLD",3230,1,13,0)
 The HIPAA CSV Installation Guide can be found in the following
"BLD",3230,1,14,0)
 [ANONYMOUS.SOFTWARE] directories:
"BLD",3230,1,15,0)
   
"BLD",3230,1,16,0)
                                 Preferred Address
"BLD",3230,1,17,0)
                                 -------------------------
"BLD",3230,1,18,0)
    First available FTP server   download.vista.med.va.gov
"BLD",3230,1,19,0)
   
"BLD",3230,1,20,0)
    Specific Field Office        FTD Address
"BLD",3230,1,21,0)
    ---------------------        ------------------------
"BLD",3230,1,22,0)
    Albany                       ftp.fo-albany.med.va.gov
"BLD",3230,1,23,0)
    Hines                        ftp.fo-hines.med.va.gov
"BLD",3230,1,24,0)
    Salt Lake City               ftp.fo-slc.med.va.gov
"BLD",3230,1,25,0)
   
"BLD",3230,1,26,0)
   
"BLD",3230,1,27,0)
    File Name       Description              Format         FTP Protocol
"BLD",3230,1,28,0)
    --------------  -----------------------  -------------  ------------
"BLD",3230,1,29,0)
    CSV_1_0_IG.PDF  HIPAA CSV Install Guide  Adobe Acrobat  Binary
"BLD",3230,1,30,0)

"BLD",3230,1,31,0)

"BLD",3230,1,32,0)
 This is a Multi-Package KIDS Distribution containing three Builds:
"BLD",3230,1,33,0)
 
"BLD",3230,1,34,0)
    CSV UTIL 1.0
"BLD",3230,1,35,0)
 
"BLD",3230,1,36,0)
        LEX*2.0*25
"BLD",3230,1,37,0)
        ICD*18.0*6
"BLD",3230,1,38,0)
        ICPT*6.0*14
"BLD",3230,1,39,0)
 
"BLD",3230,1,40,0)
 The Multi-Package KIDS Distribution consists of both a KIDS host file 
"BLD",3230,1,41,0)
 and a data global host file:
"BLD",3230,1,42,0)
 
"BLD",3230,1,43,0)
    KIDS Distribution        CSV_UTIL_1_0.KID
"BLD",3230,1,44,0)
    Data Global              CSV_UTIL_1_0.GBL
"BLD",3230,1,45,0)

"BLD",3230,10,0)
^9.63^3^3
"BLD",3230,10,1,0)
LEX*2.0*25^1
"BLD",3230,10,2,0)
ICD*18.0*6^1
"BLD",3230,10,3,0)
ICPT*6.0*14^1
"BLD",3230,10,"B","ICD*18.0*6",2)

"BLD",3230,10,"B","ICPT*6.0*14",3)

"BLD",3230,10,"B","LEX*2.0*25",1)

"BLD",3230,"KRN",0)
^9.67PA^8989.52^19
"BLD",3230,"KRN",.4,0)
.4
"BLD",3230,"KRN",.401,0)
.401
"BLD",3230,"KRN",.402,0)
.402
"BLD",3230,"KRN",.403,0)
.403
"BLD",3230,"KRN",.5,0)
.5
"BLD",3230,"KRN",.84,0)
.84
"BLD",3230,"KRN",3.6,0)
3.6
"BLD",3230,"KRN",3.8,0)
3.8
"BLD",3230,"KRN",9.2,0)
9.2
"BLD",3230,"KRN",9.8,0)
9.8
"BLD",3230,"KRN",19,0)
19
"BLD",3230,"KRN",19.1,0)
19.1
"BLD",3230,"KRN",101,0)
101
"BLD",3230,"KRN",409.61,0)
409.61
"BLD",3230,"KRN",771,0)
771
"BLD",3230,"KRN",870,0)
870
"BLD",3230,"KRN",8989.51,0)
8989.51
"BLD",3230,"KRN",8989.52,0)
8989.52
"BLD",3230,"KRN",8994,0)
8994
"BLD",3230,"KRN","B",.4,.4)

"BLD",3230,"KRN","B",.401,.401)

"BLD",3230,"KRN","B",.402,.402)

"BLD",3230,"KRN","B",.403,.403)

"BLD",3230,"KRN","B",.5,.5)

"BLD",3230,"KRN","B",.84,.84)

"BLD",3230,"KRN","B",3.6,3.6)

"BLD",3230,"KRN","B",3.8,3.8)

"BLD",3230,"KRN","B",9.2,9.2)

"BLD",3230,"KRN","B",9.8,9.8)

"BLD",3230,"KRN","B",19,19)

"BLD",3230,"KRN","B",19.1,19.1)

"BLD",3230,"KRN","B",101,101)

"BLD",3230,"KRN","B",409.61,409.61)

"BLD",3230,"KRN","B",771,771)

"BLD",3230,"KRN","B",870,870)

"BLD",3230,"KRN","B",8989.51,8989.51)

"BLD",3230,"KRN","B",8989.52,8989.52)

"BLD",3230,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
LEX*2.0*25
"BLD",3231,0)
LEX*2.0*25^LEXICON UTILITY^0^3030910^y
"BLD",3231,1,0)
^^2^2^3030521^^^
"BLD",3231,1,1,0)
Please see the National Patch Module for details of the enhancements 
"BLD",3231,1,2,0)
included in this patch.
"BLD",3231,4,0)
^9.64PA^757.03^8
"BLD",3231,4,757.02,0)
757.02
"BLD",3231,4,757.02,222)
y^y^f^^^^n
"BLD",3231,4,757.03,0)
757.03
"BLD",3231,4,757.03,222)
y^y^f^^^^n
"BLD",3231,4,757.2,0)
757.2
"BLD",3231,4,757.2,222)
y^y^f^^n^^y^o^n
"BLD",3231,4,757.2,224)
I $G(^LEXT(757.2,+Y,6))["+($G(LEXVDT))"
"BLD",3231,4,757.9,0)
757.9
"BLD",3231,4,757.9,222)
y^y^f^^^^n
"BLD",3231,4,757.901,0)
757.901
"BLD",3231,4,757.901,222)
y^y^f^^n^^y^o^n
"BLD",3231,4,757.902,0)
757.902
"BLD",3231,4,757.902,222)
y^y^f^^n^^y^o^n
"BLD",3231,4,757.903,0)
757.903
"BLD",3231,4,757.903,222)
y^y^f^^^^n
"BLD",3231,4,757.91,0)
757.91
"BLD",3231,4,757.91,222)
y^y^f^^^^n
"BLD",3231,4,"B",757.02,757.02)

"BLD",3231,4,"B",757.03,757.03)

"BLD",3231,4,"B",757.2,757.2)

"BLD",3231,4,"B",757.9,757.9)

"BLD",3231,4,"B",757.901,757.901)

"BLD",3231,4,"B",757.902,757.902)

"BLD",3231,4,"B",757.903,757.903)

"BLD",3231,4,"B",757.91,757.91)

"BLD",3231,"INI")
PRE^LEX2025P
"BLD",3231,"INIT")
POST^LEX2025P
"BLD",3231,"KRN",0)
^9.67PA^8989.52^19
"BLD",3231,"KRN",.4,0)
.4
"BLD",3231,"KRN",.401,0)
.401
"BLD",3231,"KRN",.402,0)
.402
"BLD",3231,"KRN",.403,0)
.403
"BLD",3231,"KRN",.5,0)
.5
"BLD",3231,"KRN",.84,0)
.84
"BLD",3231,"KRN",3.6,0)
3.6
"BLD",3231,"KRN",3.8,0)
3.8
"BLD",3231,"KRN",9.2,0)
9.2
"BLD",3231,"KRN",9.8,0)
9.8
"BLD",3231,"KRN",9.8,"NM",0)
^9.68A^29^29
"BLD",3231,"KRN",9.8,"NM",1,0)
LEXSET^^0^B11622540
"BLD",3231,"KRN",9.8,"NM",2,0)
LEXAR5^^0^B24963469
"BLD",3231,"KRN",9.8,"NM",3,0)
LEXNDX7^^0^B12564019
"BLD",3231,"KRN",9.8,"NM",4,0)
LEXNDX8^^0^B32650581
"BLD",3231,"KRN",9.8,"NM",5,0)
LEXU^^0^B21360008
"BLD",3231,"KRN",9.8,"NM",6,0)
LEXSRC^^0^B5511347
"BLD",3231,"KRN",9.8,"NM",7,0)
LEXSRC2^^0^B19094912
"BLD",3231,"KRN",9.8,"NM",8,0)
LEXABC^^0^B35289957
"BLD",3231,"KRN",9.8,"NM",9,0)
LEXASO^^0^B11571330
"BLD",3231,"KRN",9.8,"NM",10,0)
LEXAB^^0^B9544212
"BLD",3231,"KRN",9.8,"NM",11,0)
LEXAR4^^0^B9380127
"BLD",3231,"KRN",9.8,"NM",12,0)
LEXAR^^0^B18400371
"BLD",3231,"KRN",9.8,"NM",13,0)
LEXALK^^0^B22765108
"BLD",3231,"KRN",9.8,"NM",14,0)
LEXAMD^^0^B24549577
"BLD",3231,"KRN",9.8,"NM",15,0)
LEXCODE^^0^B7512354
"BLD",3231,"KRN",9.8,"NM",16,0)
LEXASC^^0^B6679811
"BLD",3231,"KRN",9.8,"NM",17,0)
LEXA^^0^B29452021
"BLD",3231,"KRN",9.8,"NM",18,0)
LEXXGI^^0^B64208237
"BLD",3231,"KRN",9.8,"NM",19,0)
LEXCHGF^^0^B30234977
"BLD",3231,"KRN",9.8,"NM",20,0)
LEXCHGF2^^0^B21566747
"BLD",3231,"KRN",9.8,"NM",21,0)
LEXXGI2^^0^B25914700
"BLD",3231,"KRN",9.8,"NM",22,0)
LEXXST^^0^B63588277
"BLD",3231,"KRN",9.8,"NM",23,0)
LEXXST3^^0^B23757267
"BLD",3231,"KRN",9.8,"NM",24,0)
LEXXST5^^0^B38762877
"BLD",3231,"KRN",9.8,"NM",25,0)
LEXAR7^^0^B17065693
"BLD",3231,"KRN",9.8,"NM",26,0)
LEXPL^^0^B17998468
"BLD",3231,"KRN",9.8,"NM",27,0)
LEXLGM^^0^B24937877
"BLD",3231,"KRN",9.8,"NM",28,0)
LEXEDF1^^0^B14571584
"BLD",3231,"KRN",9.8,"NM",29,0)
LEXXFQ^^0^B15092959
"BLD",3231,"KRN",9.8,"NM","B","LEXA",17)

"BLD",3231,"KRN",9.8,"NM","B","LEXAB",10)

"BLD",3231,"KRN",9.8,"NM","B","LEXABC",8)

"BLD",3231,"KRN",9.8,"NM","B","LEXALK",13)

"BLD",3231,"KRN",9.8,"NM","B","LEXAMD",14)

"BLD",3231,"KRN",9.8,"NM","B","LEXAR",12)

"BLD",3231,"KRN",9.8,"NM","B","LEXAR4",11)

"BLD",3231,"KRN",9.8,"NM","B","LEXAR5",2)

"BLD",3231,"KRN",9.8,"NM","B","LEXAR7",25)

"BLD",3231,"KRN",9.8,"NM","B","LEXASC",16)

"BLD",3231,"KRN",9.8,"NM","B","LEXASO",9)

"BLD",3231,"KRN",9.8,"NM","B","LEXCHGF",19)

"BLD",3231,"KRN",9.8,"NM","B","LEXCHGF2",20)

"BLD",3231,"KRN",9.8,"NM","B","LEXCODE",15)

"BLD",3231,"KRN",9.8,"NM","B","LEXEDF1",28)

"BLD",3231,"KRN",9.8,"NM","B","LEXLGM",27)

"BLD",3231,"KRN",9.8,"NM","B","LEXNDX7",3)

"BLD",3231,"KRN",9.8,"NM","B","LEXNDX8",4)

"BLD",3231,"KRN",9.8,"NM","B","LEXPL",26)

"BLD",3231,"KRN",9.8,"NM","B","LEXSET",1)

"BLD",3231,"KRN",9.8,"NM","B","LEXSRC",6)

"BLD",3231,"KRN",9.8,"NM","B","LEXSRC2",7)

"BLD",3231,"KRN",9.8,"NM","B","LEXU",5)

"BLD",3231,"KRN",9.8,"NM","B","LEXXFQ",29)

"BLD",3231,"KRN",9.8,"NM","B","LEXXGI",18)

"BLD",3231,"KRN",9.8,"NM","B","LEXXGI2",21)

"BLD",3231,"KRN",9.8,"NM","B","LEXXST",22)

"BLD",3231,"KRN",9.8,"NM","B","LEXXST3",23)

"BLD",3231,"KRN",9.8,"NM","B","LEXXST5",24)

"BLD",3231,"KRN",19,0)
19
"BLD",3231,"KRN",19.1,0)
19.1
"BLD",3231,"KRN",101,0)
101
"BLD",3231,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",3231,"KRN",101,"NM",1,0)
LEXICAL SERVICES UPDATE^^0
"BLD",3231,"KRN",101,"NM","B","LEXICAL SERVICES UPDATE",1)

"BLD",3231,"KRN",409.61,0)
409.61
"BLD",3231,"KRN",771,0)
771
"BLD",3231,"KRN",870,0)
870
"BLD",3231,"KRN",8989.51,0)
8989.51
"BLD",3231,"KRN",8989.52,0)
8989.52
"BLD",3231,"KRN",8994,0)
8994
"BLD",3231,"KRN","B",.4,.4)

"BLD",3231,"KRN","B",.401,.401)

"BLD",3231,"KRN","B",.402,.402)

"BLD",3231,"KRN","B",.403,.403)

"BLD",3231,"KRN","B",.5,.5)

"BLD",3231,"KRN","B",.84,.84)

"BLD",3231,"KRN","B",3.6,3.6)

"BLD",3231,"KRN","B",3.8,3.8)

"BLD",3231,"KRN","B",9.2,9.2)

"BLD",3231,"KRN","B",9.8,9.8)

"BLD",3231,"KRN","B",19,19)

"BLD",3231,"KRN","B",19.1,19.1)

"BLD",3231,"KRN","B",101,101)

"BLD",3231,"KRN","B",409.61,409.61)

"BLD",3231,"KRN","B",771,771)

"BLD",3231,"KRN","B",870,870)

"BLD",3231,"KRN","B",8989.51,8989.51)

"BLD",3231,"KRN","B",8989.52,8989.52)

"BLD",3231,"KRN","B",8994,8994)

"BLD",3231,"PRE")
LEX2025
"BLD",3231,"QUES",0)
^9.62^^
"BLD",3231,"REQB",0)
^9.611^8^8
"BLD",3231,"REQB",1,0)
LEX*2.0*7^2
"BLD",3231,"REQB",2,0)
LEX*2.0*14^2
"BLD",3231,"REQB",3,0)
LEX*2.0*15^2
"BLD",3231,"REQB",4,0)
LEX*2.0*19^2
"BLD",3231,"REQB",5,0)
ICPT*6.0*13^2
"BLD",3231,"REQB",6,0)
ICPT*6.0*12^2
"BLD",3231,"REQB",7,0)
ICD*18.0*5^2
"BLD",3231,"REQB",8,0)
LEX*2.0*24^2
"BLD",3231,"REQB","B","ICD*18.0*5",7)

"BLD",3231,"REQB","B","ICPT*6.0*12",6)

"BLD",3231,"REQB","B","ICPT*6.0*13",5)

"BLD",3231,"REQB","B","LEX*2.0*14",2)

"BLD",3231,"REQB","B","LEX*2.0*15",3)

"BLD",3231,"REQB","B","LEX*2.0*19",4)

"BLD",3231,"REQB","B","LEX*2.0*24",8)

"BLD",3231,"REQB","B","LEX*2.0*7",1)

"DATA",757.2,4,0)
Problem List
"DATA",757.2,4,1)
^LEX(757.01,
"DATA",757.2,4,2)
XTLK^LEXHLP
"DATA",757.2,4,3)
XTLK^LEXPRNT
"DATA",757.2,4,4)
ICD/ICP/CPT/DS4
"DATA",757.2,4,5)
PL1^WRD^1^9000011^GMPL^1^0^3
"DATA",757.2,4,6)
I $$SC^LEXU(Y,"BEH/DIS;999/64/66/73/74/77/82/169/170/171;ICD/ICP/CPT/DS4",+($G(LEXVDT)))
"DATA",757.2,4,7)
ICD/ICP/CPT/DS4
"DATA",757.2,5,0)
Int'l Class Dis/Diag (ICD)
"DATA",757.2,5,1)
^LEX(757.01,
"DATA",757.2,5,2)
XTLK^LEXHLP
"DATA",757.2,5,3)
XTLK^LEXPRNT
"DATA",757.2,5,4)
ICD/ICP
"DATA",757.2,5,5)
PL2^WRD^^^^1^1^2
"DATA",757.2,5,6)
I $$SO^LEXU(Y,"ICD",+($G(LEXVDT)))
"DATA",757.2,5,7)
ICD/ICP
"DATA",757.2,5,100,0)
^^4^4^2960721^^^^
"DATA",757.2,5,100,1,0)
This subset is artificially created through the use of a 
"DATA",757.2,5,100,2,0)
filter (not a physical subset), and contains only those 
"DATA",757.2,5,100,3,0)
expressions which are linked to an ICD classification code.
"DATA",757.2,5,100,4,0)

"DATA",757.2,11,0)
Nursing Interventions
"DATA",757.2,11,1)
^LEX(757.21,
"DATA",757.2,11,2)
XTLK^LEXHLP
"DATA",757.2,11,3)
XTLK^LEXPRNT
"DATA",757.2,11,4)
ICD/NAN/NIC/OMA
"DATA",757.2,11,5)
NIC^NUR^^^^^1
"DATA",757.2,11,6)
I $$SO^LEXU(Y,"NIC",+($G(LEXVDT)))
"DATA",757.2,11,7)
ICD/NAN/NIC/OMA
"DATA",757.2,12,0)
ICD Diagnosis
"DATA",757.2,12,1)
^LEX(757.01,
"DATA",757.2,12,2)
XTLK^LEXHLP
"DATA",757.2,12,3)
XTLK^LEXPRNT
"DATA",757.2,12,4)
ICD
"DATA",757.2,12,5)
ICD^WRD^0^80^ICD^0^1
"DATA",757.2,12,6)
I $L($$ICDONE^LEXU(+Y,+($G(LEXVDT))))
"DATA",757.2,12,7)
ICD
"DATA",757.2,12,100,0)
^^4^4^2960721^^^^
"DATA",757.2,12,100,1,0)
This subset is artifically created through the use of a
"DATA",757.2,12,100,2,0)
filter which will not permit the selection of a term
"DATA",757.2,12,100,3,0)
which does not have a valid ICD code assigned (ICD code
"DATA",757.2,12,100,4,0)
in the Lexicon is also in file 80, ICD Diagnosis).
"DATA",757.2,13,0)
CPT Procedures
"DATA",757.2,13,1)
^LEX(757.01,
"DATA",757.2,13,2)
XTLK^LEXHLP
"DATA",757.2,13,3)
XTLK^LEXPRNT
"DATA",757.2,13,4)
CPT
"DATA",757.2,13,5)
CPT^WRD^0^81^CPT^0^1
"DATA",757.2,13,6)
I $L($$CPTONE^LEXU(+Y,+($G(LEXVDT))))
"DATA",757.2,13,7)
CPT
"DATA",757.2,13,100,0)
^^4^4^2980220^^^^
"DATA",757.2,13,100,1,0)
This subset is artificially created through the use of a
"DATA",757.2,13,100,2,0)
filter which will not permit the selection of a term
"DATA",757.2,13,100,3,0)
which does not have a valid CPT code assigned (CPT code
"DATA",757.2,13,100,4,0)
in the Lexicon is also in file 81, CPT Procedures).
"DATA",757.2,14,0)
Mental Health (DSM)
"DATA",757.2,14,1)
^LEX(757.01,
"DATA",757.2,14,2)
XTLK^LEXHLP
"DATA",757.2,14,3)
XTLK^LEXPRNT
"DATA",757.2,14,4)
DS4/ICD
"DATA",757.2,14,5)
DSM^WRD^0^627.7^DSM^0^1
"DATA",757.2,14,6)
I $$SO^LEXU(Y,"DS4",+($G(LEXVDT)))
"DATA",757.2,14,7)
DS4/ICD
"DATA",757.2,14,100,0)
^^3^3^2960724^^^^
"DATA",757.2,14,100,1,0)
This subset is artifically created through the use of a
"DATA",757.2,14,100,2,0)
filter which will not permit the selection of a term
"DATA",757.2,14,100,3,0)
which does not have a DSM code assigned.
"DATA",757.2,15,0)
ICD, CPT and DSM Terminology
"DATA",757.2,15,1)
^LEX(757.01,
"DATA",757.2,15,2)
XTLK^LEXHLP
"DATA",757.2,15,3)
XTLK^LEXPRNT
"DATA",757.2,15,4)
ICD/ICP/CPT/DS4
"DATA",757.2,15,5)
VAC^WRD^0^757.03^VAC^0^1
"DATA",757.2,15,6)
I $$SO^LEXU(Y,"ICD/ICP/CPT/DS4",+($G(LEXVDT)))
"DATA",757.2,15,7)
ICD/ICP/CPT/DS4
"DATA",757.2,15,100,0)
^^4^4^2960724^^^^
"DATA",757.2,15,100,1,0)
This subset is artifically created through the use of a
"DATA",757.2,15,100,2,0)
filter which will limit the selection of a term to 
"DATA",757.2,15,100,3,0)
those classification systems commonly used by the VA.
"DATA",757.2,15,100,4,0)
These systems include ICD-9-CM, CPT-4, and DSM.
"DATA",757.2,17,0)
CPT/HCPCS Procedures
"DATA",757.2,17,1)
^LEX(757.01,
"DATA",757.2,17,2)
XTLK^LEXHLP
"DATA",757.2,17,3)
XTLK^LEXPRNT
"DATA",757.2,17,4)
CPT/CPC
"DATA",757.2,17,5)
CHP^WRD^0^81^CHP^0^1
"DATA",757.2,17,6)
I $$SO^LEXU(Y,"CPT/CPC",+($G(LEXVDT)))
"DATA",757.2,17,7)
CPT/CPC
"DATA",757.2,17,100,0)
^^5^5^2980221^^^
"DATA",757.2,17,100,1,0)
This subset is artificially created through the use of a
"DATA",757.2,17,100,2,0)
filter which will not permit the selection of a term
"DATA",757.2,17,100,3,0)
which does not have a valid CPT-4 or HCPCS procedure 
"DATA",757.2,17,100,4,0)
code assigned (A code found in the Lexicon that is also
"DATA",757.2,17,100,5,0)
in file 81, CPT Procedures).
"DATA",757.901,1,0)
ICD-9-CM Diagnosis^ICD-9-CM Diag
"DATA",757.901,2,0)
ICD-9 Procedures/Operations^ICD-9 Proc
"DATA",757.901,3,0)
ICD-9 Diagnosis and Procedures^ICD-9-CM
"DATA",757.901,4,0)
CPT-4/HCPCS Procedures^CPT-4/HCPCS
"DATA",757.901,5,0)
Routine Maintenance^Maintenance
"DATA",757.902,1,0)
VistA Lexicon Utility^VistA
"DATA",757.902,2,0)
National Center for Health Statistics (NCHS)^NCHS
"DATA",757.902,3,0)
American Medical Association (AMA)^AMA
"FIA",757.02)
CODES
"FIA",757.02,0)
^LEX(757.02,
"FIA",757.02,0,0)
757.02IP
"FIA",757.02,0,1)
y^y^f^^^^n
"FIA",757.02,0,10)

"FIA",757.02,0,11)

"FIA",757.02,0,"RLRO")

"FIA",757.02,0,"VR")
2.0^LEX
"FIA",757.02,757.02)
0
"FIA",757.02,757.28)
0
"FIA",757.03)
CODING SYSTEMS
"FIA",757.03,0)
^LEX(757.03,
"FIA",757.03,0,0)
757.03I
"FIA",757.03,0,1)
y^y^f^^^^n
"FIA",757.03,0,10)

"FIA",757.03,0,11)

"FIA",757.03,0,"RLRO")

"FIA",757.03,0,"VR")
2.0^LEX
"FIA",757.03,757.03)
0
"FIA",757.2)
SUBSET DEFINITIONS
"FIA",757.2,0)
^LEXT(757.2,
"FIA",757.2,0,0)
757.2
"FIA",757.2,0,1)
y^y^f^^n^^y^o^n
"FIA",757.2,0,10)

"FIA",757.2,0,11)
I $G(^LEXT(757.2,+Y,6))["+($G(LEXVDT))"
"FIA",757.2,0,"RLRO")

"FIA",757.2,0,"VR")
2.0^LEX
"FIA",757.2,757.2)
0
"FIA",757.2,757.201)
0
"FIA",757.2,757.22)
0
"FIA",757.9)
CHANGE LOG
"FIA",757.9,0)
^LEXC(757.9,
"FIA",757.9,0,0)
757.9DI
"FIA",757.9,0,1)
y^y^f^^^^n
"FIA",757.9,0,10)

"FIA",757.9,0,11)

"FIA",757.9,0,"RLRO")

"FIA",757.9,0,"VR")
2.0^LEX
"FIA",757.9,757.9)
0
"FIA",757.901)
CHANGE TYPE
"FIA",757.901,0)
^LEXC(757.901,
"FIA",757.901,0,0)
757.901
"FIA",757.901,0,1)
y^y^f^^n^^y^o^n
"FIA",757.901,0,10)

"FIA",757.901,0,11)

"FIA",757.901,0,"RLRO")

"FIA",757.901,0,"VR")
2.0^LEX
"FIA",757.901,757.901)
0
"FIA",757.902)
CONTRIBUTING AGENCY
"FIA",757.902,0)
^LEXC(757.902,
"FIA",757.902,0,0)
757.902
"FIA",757.902,0,1)
y^y^f^^n^^y^o^n
"FIA",757.902,0,10)

"FIA",757.902,0,11)

"FIA",757.902,0,"RLRO")

"FIA",757.902,0,"VR")
2.0^LEX
"FIA",757.902,757.902)
0
"FIA",757.903)
IMPORT GLOBAL
"FIA",757.903,0)
^LEXC(757.903,
"FIA",757.903,0,0)
757.903P
"FIA",757.903,0,1)
y^y^f^^^^n
"FIA",757.903,0,10)

"FIA",757.903,0,11)

"FIA",757.903,0,"RLRO")

"FIA",757.903,0,"VR")
2.0^LEX
"FIA",757.903,757.903)
0
"FIA",757.903,757.9031)
0
"FIA",757.903,757.90311)
0
"FIA",757.91)
CHANGE FILE
"FIA",757.91,0)
^LEXC(757.91,
"FIA",757.91,0,0)
757.91I
"FIA",757.91,0,1)
y^y^f^^^^n
"FIA",757.91,0,10)

"FIA",757.91,0,11)

"FIA",757.91,0,"RLRO")

"FIA",757.91,0,"VR")
2.0^LEX
"FIA",757.91,757.91)
0
"FIA",757.91,757.9103)
0
"FIA",757.91,757.9104)
0
"FIA",757.91,757.9106)
0
"INI")
PRE^LEX2025P
"INIT")
POST^LEX2025P
"IX",757.91,757.91,"ACHG",0)
757.91^ACHG^Changed Codes^R^^R^IR^I^757.91^^^^^S
"IX",757.91,757.91,"ACHG",.1,0)
^^2^2^3030226^
"IX",757.91,757.91,"ACHG",.1,1,0)
This cross-reference contains all the codes changed during a specified 
"IX",757.91,757.91,"ACHG",.1,2,0)
change release.
"IX",757.91,757.91,"ACHG",1)
S ^LEXC(757.91,"ACHG",X(1),$E(X(2),1,30),X(3),DA)=""
"IX",757.91,757.91,"ACHG",2)
K ^LEXC(757.91,"ACHG",X(1),$E(X(2),1,30),X(3),DA)
"IX",757.91,757.91,"ACHG",2.5)
K ^LEXC(757.91,"ACHG")
"IX",757.91,757.91,"ACHG",11.1,0)
^.114IA^3^3
"IX",757.91,757.91,"ACHG",11.1,1,0)
1^F^757.91^.04^^1^F
"IX",757.91,757.91,"ACHG",11.1,1,3)

"IX",757.91,757.91,"ACHG",11.1,2,0)
2^F^757.91^.01^30^2^F
"IX",757.91,757.91,"ACHG",11.1,2,3)

"IX",757.91,757.91,"ACHG",11.1,3,0)
3^F^757.91^.06^^3^F
"IX",757.91,757.91,"ACHG",11.1,3,3)

"KRN",101,5931,-1)
0^1
"KRN",101,5931,0)
LEXICAL SERVICES UPDATE^Lexical Services Update^^X^^^^^^^^LEXICON UTILITY
"KRN",101,5931,.1)
LEX UPD
"KRN",101,5931,1,0)
^^52^52^3030326^
"KRN",101,5931,1,1,0)
This protocol is used to notify other applications and processes 
"KRN",101,5931,1,2,0)
when the Lexicon Utility or the Lexicon Change file is updated.
"KRN",101,5931,1,3,0)
The Lexicon is updated using a temporary maintenance global, ^LEXM.
"KRN",101,5931,1,4,0)
This global is processed by the routine LEXXGI.  Once processed, 
"KRN",101,5931,1,5,0)
this protocol is triggered and the global ^LEXM is deleted.
"KRN",101,5931,1,6,0)
 
"KRN",101,5931,1,7,0)
Required Variable LEXSCHG Array contains a listing of those Lexicon
"KRN",101,5931,1,8,0)
Files (#757 - 757.41) that were updated as a result of a recent 
"KRN",101,5931,1,9,0)
install.  In the case of the CHANGE LOG (file #757.9), new changes
"KRN",101,5931,1,10,0)
to SDO controlled files will be indicated by file number and the
"KRN",101,5931,1,11,0)
internal entry number to the CHANGE LOG.  The variable LEXSCHG is
"KRN",101,5931,1,12,0)
created while processing the Lexicon Maintenance global ^LEXM.
"KRN",101,5931,1,13,0)
 
"KRN",101,5931,1,14,0)
  Files updated in the ^LEX or ^LEXT globals
"KRN",101,5931,1,15,0)
 
"KRN",101,5931,1,16,0)
        LEXSCHG(<Lexicon file #>,0)=""
"KRN",101,5931,1,17,0)
        LEXSCHG(<Lexicon file #>,0)=""
"KRN",101,5931,1,18,0)
 
"KRN",101,5931,1,19,0)
  Files updated in the ^LEXC change global
"KRN",101,5931,1,20,0)
 
"KRN",101,5931,1,21,0)
    Change Log file 757.9
"KRN",101,5931,1,22,0)
 
"KRN",101,5931,1,23,0)
        LEXSCHG(757.9,<ien of 757.9>)=<SDO file number changed>
"KRN",101,5931,1,24,0)
        LEXSCHG(757.9,"B",<SDO file number changed>,<array ien>)=""
"KRN",101,5931,1,25,0)
 
"KRN",101,5931,1,26,0)
    Change fILE 757.91
"KRN",101,5931,1,27,0)
 
"KRN",101,5931,1,28,0)
        LEXSCHG(757.91,0)=""
"KRN",101,5931,1,29,0)
 
"KRN",101,5931,1,30,0)
  Example:
"KRN",101,5931,1,31,0)
 
"KRN",101,5931,1,32,0)
        LEXSCHG(757,0)=""
"KRN",101,5931,1,33,0)
        LEXSCHG(757.001,0)=""
"KRN",101,5931,1,34,0)
        LEXSCHG(757.01,0)=""
"KRN",101,5931,1,35,0)
        LEXSCHG(757.02,0)=""
"KRN",101,5931,1,36,0)
        LEXSCHG(757.1,0)=""
"KRN",101,5931,1,37,0)
        LEXSCHG(757.11,0)=""
"KRN",101,5931,1,38,0)
        LEXSCHG(757.9,0)=""
"KRN",101,5931,1,39,0)
        LEXSCHG(757.9,2)=80
"KRN",101,5931,1,40,0)
        LEXSCHG(757.9,3)=80.1
"KRN",101,5931,1,41,0)
        LEXSCHG(757.9,4)=81
"KRN",101,5931,1,42,0)
        LEXSCHG(757.9,"B",80,2)=""
"KRN",101,5931,1,43,0)
        LEXSCHG(757.9,"B",80.1,3)=""
"KRN",101,5931,1,44,0)
        LEXSCHG(757.9,"B",81,4)=""
"KRN",101,5931,1,45,0)
 
"KRN",101,5931,1,46,0)
  If ICD-9-CM and/or CPT-4 changes are included in the ^LEXM
"KRN",101,5931,1,47,0)
  global, then the following entries will be found in the
"KRN",101,5931,1,48,0)
  local array LEXSCHG:
"KRN",101,5931,1,49,0)
 
"KRN",101,5931,1,50,0)
       LEXSCHG(80,0)=""
"KRN",101,5931,1,51,0)
       LEXSCHG(80.1,0)=""
"KRN",101,5931,1,52,0)
       LEXSCHG(81,0)=""
"KRN",101,5931,2,0)
^101.02A^1^1
"KRN",101,5931,2,1,0)
LEXICON UPDATE
"KRN",101,5931,2,"B","LEXICON UPDATE",1)

"KRN",101,5931,4)
^^^LEX
"KRN",101,5931,15)
K LEXSCHG
"KRN",101,5931,20)
S:'$D(LEXSCHG) XQORQUIT=1
"KRN",101,5931,21,0)
^101.021A^1^1
"KRN",101,5931,21,1,0)
LEXSCHG
"KRN",101,5931,21,"B","LEXSCHG",1)

"KRN",101,5931,24)
I $D(LEXSCHG)
"KRN",101,5931,99)
59380,54553
"MBREQ")
1
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"PKG",167,-1)
1^1
"PKG",167,0)
LEXICON UTILITY^LEX^Medical and Biomedical Terminology System.^^^3010627
"PKG",167,20,0)
^9.402P^^
"PKG",167,22,0)
^9.49I^1^1
"PKG",167,22,1,0)
2.0^2960915
"PKG",167,22,1,"PAH",1,0)
25^3030910^1118
"PKG",167,22,1,"PAH",1,1,0)
^^2^2^3030910
"PKG",167,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details of the enhancements 
"PKG",167,22,1,"PAH",1,1,2,0)
included in this patch.
"PRE")
LEX2025
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
31
"RTN","LEX2025")
0^^B66581700
"RTN","LEX2025",1,0)
LEX2025 ;ISL/KER - Environment Check/Pre/Post Install ; 05/14/2003
"RTN","LEX2025",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEX2025",3,0)
 ;
"RTN","LEX2025",4,0)
 ; External References
"RTN","LEX2025",5,0)
 ;   DBIA 10141  $$PATCH^XPDUTL
"RTN","LEX2025",6,0)
 ;   DBIA 10141  $$VERSION^XPDUTL
"RTN","LEX2025",7,0)
 ;   DBIA 10141  BMES^XPDUTL
"RTN","LEX2025",8,0)
 ;   DBIA 10141  MES^XPDUTL
"RTN","LEX2025",9,0)
 ;   DBIA 10015  EN^DIQ1
"RTN","LEX2025",10,0)
 ;                            
"RTN","LEX2025",11,0)
ENV ; LEX*2.0*25 Environment Check
"RTN","LEX2025",12,0)
 ;           
"RTN","LEX2025",13,0)
 ;   General
"RTN","LEX2025",14,0)
 ;
"RTN","LEX2025",15,0)
 N LEXBUILD,LEXIGHF,LEXLAST,LEXLREV,LEXG
"RTN","LEX2025",16,0)
 D IMP S U="^"
"RTN","LEX2025",17,0)
 ;     No user
"RTN","LEX2025",18,0)
 I '$$UR D ET("User not defined (DUZ)")
"RTN","LEX2025",19,0)
 ;     No IO
"RTN","LEX2025",20,0)
 D:'$$SY ET("Undefined IO variable(s)") I $D(LEXE) D ABRT Q
"RTN","LEX2025",21,0)
 ;                
"RTN","LEX2025",22,0)
 ;   Load Distribution
"RTN","LEX2025",23,0)
 ;
"RTN","LEX2025",24,0)
 ;     Not version 2.0
"RTN","LEX2025",25,0)
 I $$VERSION^XPDUTL("LEX")'="2.0" D  D ABRT Q
"RTN","LEX2025",26,0)
 . D ET("Version 2.0 not found.  Please install Lexicon Utility v 2.0")
"RTN","LEX2025",27,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2025",28,0)
 ;     Missing last data patch
"RTN","LEX2025",29,0)
 D:'$L($G(LEXLAST)) IMP I $L(LEXLAST) D
"RTN","LEX2025",30,0)
 . N LEXPN S LEXPN=$$PATCH^XPDUTL(LEXLAST)
"RTN","LEX2025",31,0)
 . I 'LEXPN D ET((LEXLAST_" not found, please install "_LEXLAST_" before continuing"))
"RTN","LEX2025",32,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2025",33,0)
 S LEXG=$$RGBL
"RTN","LEX2025",34,0)
 I $D(LEXE)&(+LEXG=0) D ABRT Q
"RTN","LEX2025",35,0)
 I $D(LEXE)&(+LEXG<0) D ABRT Q
"RTN","LEX2025",36,0)
 I '$D(LEXFULL)&(+($G(XPDENV))'=1) D QUIT Q
"RTN","LEX2025",37,0)
 ;                
"RTN","LEX2025",38,0)
 ;   Install Package(s)
"RTN","LEX2025",39,0)
 ;
"RTN","LEX2025",40,0)
 ;     Check Data "is installed" or "is translated"
"RTN","LEX2025",41,0)
 N LEXIT S LEXIT=+($$CPD) I '$D(LEXFULL)&(LEXIT) D QUIT Q
"RTN","LEX2025",42,0)
 ;     Checking Global "Write" Protection during install
"RTN","LEX2025",43,0)
 D:+($G(XPDENV))=1 GBLS I $D(LEXE) D ABRT Q
"RTN","LEX2025",44,0)
 ;     Import Global Checksum during install
"RTN","LEX2025",45,0)
 D:+($G(XPDENV))=1 CS I $D(LEXE) D ABRT Q
"RTN","LEX2025",46,0)
 ;                
"RTN","LEX2025",47,0)
 ;   Quit, Exit or Abort
"RTN","LEX2025",48,0)
 ;
"RTN","LEX2025",49,0)
QUIT ;     Quit   Passed Environment Check
"RTN","LEX2025",50,0)
 K LEXFULL D OK
"RTN","LEX2025",51,0)
 Q
"RTN","LEX2025",52,0)
EXIT ;     Exit   Failed Environment Check
"RTN","LEX2025",53,0)
 D:$D(LEXE) ED S XPDQUIT=2 K LEXE,LEXFULL Q
"RTN","LEX2025",54,0)
ABRT ;     Abort  Failed Environment Check, KILL the distribution
"RTN","LEX2025",55,0)
 D:$D(LEXE) ED S XPDABORT=1,XPDQUIT=1,XPDQUIT("LEX*2.0*25")=1
"RTN","LEX2025",56,0)
 S XPDQUIT("ICD*18.0*6")=1,XPDQUIT("ICPT*6.0*14")=1
"RTN","LEX2025",57,0)
 S XPDQUIT("CSV UTIL 1.0")=1 K LEXE,LEXFULL
"RTN","LEX2025",58,0)
 Q
"RTN","LEX2025",59,0)
 ;               
"RTN","LEX2025",60,0)
 ; Checks
"RTN","LEX2025",61,0)
 ;
"RTN","LEX2025",62,0)
GBLS ;   Check Write access on globals
"RTN","LEX2025",63,0)
 N LEXOK S LEXOK=1
"RTN","LEX2025",64,0)
 D BM("I will now check the protection on ^LEX, ^LEXT, ^LEXC and ^LEXM Globals.")
"RTN","LEX2025",65,0)
 D M("If you get an ERROR, you will need to change the protection on these")
"RTN","LEX2025",66,0)
 D M("globals to allow read/write as indicated for the appropriate M system:")
"RTN","LEX2025",67,0)
 D BM("                      System    World    Group    UCI")
"RTN","LEX2025",68,0)
 D M("    DSM for OpenVMS    RWP       RW       RW      RW")
"RTN","LEX2025",69,0)
 D BM("                      System    World    Group    User")
"RTN","LEX2025",70,0)
 D M("    MSM-DOS            RWD       RWD      RWD     RWD")
"RTN","LEX2025",71,0)
 D BM("                      Owner     Group    World   Network")
"RTN","LEX2025",72,0)
 D M("    Cache systems      RWD       RW       RW      RWD")
"RTN","LEX2025",73,0)
 D BM("Checking:") N LEXGL,LEXRT
"RTN","LEX2025",74,0)
 F LEXGL="^LEX(757.01)","^LEXT(757.2)","^LEXC","^LEXM(0)","^ICD9(0)","^ICD0(0)","^ICPT(0)","^DIC(81.3,0)" D  Q:'LEXOK
"RTN","LEX2025",75,0)
 . S LEXRT=$P(LEXGL,"(",1) S:LEXRT["DIC" LEXRT="^DIC(81.3)" S:LEXRT["LEXT" LEXRT="^LEXT(757.2)" S:"^^LEX^^LEXC^^LEXM^^"[("^"_LEXRT_"^") LEXRT=LEXRT_"(*" S:"^^ICD9^^ICD0^^ICPT^^"[("^"_LEXRT_"^") LEXRT=LEXRT_"("
"RTN","LEX2025",76,0)
 . I '$D(@LEXGL) D RGNF S LEXOK=0 D  Q
"RTN","LEX2025",77,0)
 . . D M(("    <"_LEXRT_" not found>"))
"RTN","LEX2025",78,0)
 . D M(("    "_LEXRT)) S @LEXGL=$G(@LEXGL) H 1
"RTN","LEX2025",79,0)
 D:LEXOK M("    --> ok") D:'LEXOK M("    ??") D M(" ")
"RTN","LEX2025",80,0)
 Q
"RTN","LEX2025",81,0)
RGBL(X) ; Look for require globals
"RTN","LEX2025",82,0)
 N LEXLREV,LEXLAST,LEXBUILD,LEXIGHF,LEXGL,LEX0,LEXS S LEXS="",X=1
"RTN","LEX2025",83,0)
 F LEXGL="^ICD9(0)","^ICD0(0)","^ICPT(0)","^DIC(81.3,0)","^LEX(757,0)","^LEXT(757.2,0)","^LEXM(0)" D
"RTN","LEX2025",84,0)
 . I +($$CPD)>0,LEXGL["LEXM" Q
"RTN","LEX2025",85,0)
 . N LEXRT S LEXRT=$P(LEXGL,"(",1)
"RTN","LEX2025",86,0)
 . S:LEXRT["DIC" LEXRT="^DIC(81.3)"
"RTN","LEX2025",87,0)
 . S:LEXRT["LEXT" LEXRT="^LEXT(757.2)"
"RTN","LEX2025",88,0)
 . S:"^^LEX^^LEXC^^LEXM^^"[("^"_LEXRT_"^") LEXRT=LEXRT_"(*" S:"^^ICD9^^ICD0^^ICPT^^"[("^"_LEXRT_"^") LEXRT=LEXRT_"("
"RTN","LEX2025",89,0)
 . I '$D(@LEXGL) D
"RTN","LEX2025",90,0)
 . . S:LEXS'[LEXRT LEXS=LEXS_", "_LEXRT
"RTN","LEX2025",91,0)
 . . S X=-1 S:LEXGL["LEXM("&(X=1) X=0
"RTN","LEX2025",92,0)
 . I LEXGL'["^LEXC" S LEX0=$G(@LEXGL) I $L(LEX0,"^")'=4 D
"RTN","LEX2025",93,0)
 . . S:LEXS'[LEXRT LEXS=LEXS_", "_LEXRT
"RTN","LEX2025",94,0)
 . . S:LEXGL["X("!((LEXGL["T(")) X=-1 S:LEXGL["M("&(X=1) X=0
"RTN","LEX2025",95,0)
 I $L(LEXS),X'>0 D
"RTN","LEX2025",96,0)
 . S:LEXS[", " LEXS=$P(LEXS,", ",1,($L(LEXS,", ")-1))_" and "_$P(LEXS,", ",$L(LEXS,", "))
"RTN","LEX2025",97,0)
 . S:$E(LEXS,1,2)=", " LEXS=$E(LEXS,3,$L(LEXS))
"RTN","LEX2025",98,0)
 . S:$E(LEXS,1,7)[" and " LEXS=$P(LEXS," and ",2)
"RTN","LEX2025",99,0)
 . I X=-1,LEXS="^LEXC(*" D  Q
"RTN","LEX2025",100,0)
 . . D ET("Global ^LEXC not found, please create this global and set protection")
"RTN","LEX2025",101,0)
 . D:X=-1 ET(("Global"_$S(LEXS[", "!(LEXS[" and "):"s",1:"")_" "_LEXS_" either not found or incomplete."))
"RTN","LEX2025",102,0)
 . D:X=0 CM
"RTN","LEX2025",103,0)
 Q X
"RTN","LEX2025",104,0)
RGNF ; Required global not found
"RTN","LEX2025",105,0)
 N LEXLREV,LEXLAST,LEXBUILD,LEXIGHF D IMP
"RTN","LEX2025",106,0)
 D:$G(LEXGL)["^LEX"&($G(LEXGL)'["^LEXM") ET(""),ET("Required global "_$P($G(LEXGL),"(",1)_" not found.")
"RTN","LEX2025",107,0)
 D:$G(LEXGL)["^LEX"&($G(LEXGL)["^LEXM") CM
"RTN","LEX2025",108,0)
 Q
"RTN","LEX2025",109,0)
CHK D CS I $D(LEXE) D ED Q
"RTN","LEX2025",110,0)
 D BM("  OK"),M(" ")
"RTN","LEX2025",111,0)
 Q
"RTN","LEX2025",112,0)
CS ;   Checksum for import global
"RTN","LEX2025",113,0)
 K LEXE
"RTN","LEX2025",114,0)
 D BM("Running checksum routine on the ^LEXM import global, please wait")
"RTN","LEX2025",115,0)
 N LEXCHK,LEXNDS,LEXVER S LEXCHK=+($G(^LEXM(0,"CHECKSUM")))
"RTN","LEX2025",116,0)
 S LEXNDS=+($G(^LEXM(0,"NODES"))),LEXVER=+($$VC(LEXCHK,LEXNDS))
"RTN","LEX2025",117,0)
 D M(" ") D:LEXVER>0 M("  ok"),M(" ") D:LEXVER>0 KDD
"RTN","LEX2025",118,0)
 D:LEXVER=0 CM D:LEXVER=-1 CW D:LEXVER=-2 CU D:LEXVER=-3 CF
"RTN","LEX2025",119,0)
 Q
"RTN","LEX2025",120,0)
VC(X,Y) ;   Verify Checksum for import global
"RTN","LEX2025",121,0)
 N LEXLREV,LEXLAST,LEXBUILD,LEXIGHF Q:'$D(^LEXM) 0
"RTN","LEX2025",122,0)
 D IMP I $G(^LEXM(0,"BUILD"))'=$G(LEXBUILD) Q -1
"RTN","LEX2025",123,0)
 N LEXCHK,LEXNDS,LEXCNT,LEXLC,LEXL,LEXS,LEXNC,LEXD,LEXN,LEXC,LEXGCS,LEXP,LEXT
"RTN","LEX2025",124,0)
 S LEXCHK=+($G(X)),LEXNDS=+($G(Y))
"RTN","LEX2025",125,0)
 Q:LEXCHK'>0!(LEXNDS'>0) -2
"RTN","LEX2025",126,0)
 S LEXL=68,(LEXCNT,LEXLC)=0,LEXS=+(LEXNDS\LEXL)
"RTN","LEX2025",127,0)
 S:LEXS=0 LEXS=1 D:+($O(^LEXM(0)))>0 M("")
"RTN","LEX2025",128,0)
 S (LEXC,LEXN)="^LEXM",(LEXNC,LEXGCS)=0
"RTN","LEX2025",129,0)
 F  S LEXN=$Q(@LEXN) Q:LEXN=""!(LEXN'[LEXC)  D
"RTN","LEX2025",130,0)
 . Q:LEXN="^LEXM(0,""CHECKSUM"")"
"RTN","LEX2025",131,0)
 . Q:LEXN="^LEXM(0,""NODES"")"
"RTN","LEX2025",132,0)
 . S LEXCNT=LEXCNT+1
"RTN","LEX2025",133,0)
 . I LEXCNT'<LEXS S LEXLC=LEXLC+1 W:LEXLC'>LEXL "." S LEXCNT=0
"RTN","LEX2025",134,0)
 . S LEXNC=LEXNC+1,LEXD=@LEXN,LEXT=LEXN_"="_LEXD
"RTN","LEX2025",135,0)
 . F LEXP=1:1:$L(LEXT) S LEXGCS=$A(LEXT,LEXP)*LEXP+LEXGCS
"RTN","LEX2025",136,0)
 Q:LEXNC'=LEXNDS -3
"RTN","LEX2025",137,0)
 Q:LEXGCS'=LEXCHK -3
"RTN","LEX2025",138,0)
 Q 1
"RTN","LEX2025",139,0)
KDD ;   Kill previous copies of DDs
"RTN","LEX2025",140,0)
 N DIU,X S X="^DD(81.3,0,""ID"",5)" K @X S X="^DD(81,0,""ID"",5)" K @X
"RTN","LEX2025",141,0)
 Q
"RTN","LEX2025",142,0)
 F DIU=757.9,757.901,757.902,757.903,757.904,757.91 D
"RTN","LEX2025",143,0)
 . K ^LEXC(+($G(DIU))) S DIU(0)="" D EN^DIU2
"RTN","LEX2025",144,0)
 Q
"RTN","LEX2025",145,0)
SY(X) ;   Check System variables
"RTN","LEX2025",146,0)
 Q:'$D(IO)!('$D(IOF))!('$D(IOM))!('$D(ION))!('$D(IOSL))!('$D(IOST)) 0
"RTN","LEX2025",147,0)
 Q 1
"RTN","LEX2025",148,0)
UR(X) ;   Check User variables
"RTN","LEX2025",149,0)
 Q:'$L($G(DUZ(0))) 0
"RTN","LEX2025",150,0)
 Q:+($G(DUZ))=0!($$NOTDEF(+$G(DUZ))) 0
"RTN","LEX2025",151,0)
 Q 1
"RTN","LEX2025",152,0)
CPD(X) ;   Check Current Patched Data is installed
"RTN","LEX2025",153,0)
 Q:$D(^LEX(757.1,"B",180595,257762))&('$D(^LEX(757.02,"B",322162,3296))) 1
"RTN","LEX2025",154,0)
 Q 0
"RTN","LEX2025",155,0)
LPD(X) ;   Check Last Patched Data
"RTN","LEX2025",156,0)
 Q:$G(^LEX(757.02,325888,0))="329874^V5274^4^180594^1^^1" 1
"RTN","LEX2025",157,0)
 Q 0
"RTN","LEX2025",158,0)
 ;
"RTN","LEX2025",159,0)
 ; Error messages
"RTN","LEX2025",160,0)
 ;
"RTN","LEX2025",161,0)
CM ;   Missing ^LEXM
"RTN","LEX2025",162,0)
 N LEXLREV,LEXLAST,LEXBUILD,LEXIGHF D IMP
"RTN","LEX2025",163,0)
 D ET(""),ET("Missing import global ^LEXM.") D CO
"RTN","LEX2025",164,0)
 Q
"RTN","LEX2025",165,0)
CW ;   Wrong ^LEXM
"RTN","LEX2025",166,0)
 N LEXLREV,LEXLAST,LEXBUILD,LEXIGHF,LEXB D IMP
"RTN","LEX2025",167,0)
 S LEXB=$G(^LEXM(0,"BUILD")) D ET("")
"RTN","LEX2025",168,0)
 I $L(LEXBUILD),$L(LEXB),LEXBUILD'=LEXB D  Q
"RTN","LEX2025",169,0)
 . D ET(("Incorrect import global ^LEXM found ("_LEXB_" global)."))
"RTN","LEX2025",170,0)
 . D CKO
"RTN","LEX2025",171,0)
 D ET("Incorrect import global ^LEXM found.") D CKO
"RTN","LEX2025",172,0)
 Q
"RTN","LEX2025",173,0)
CU ;   Unable to verify
"RTN","LEX2025",174,0)
 N LEXLREV,LEXLAST,LEXBUILD,LEXIGHF D IMP
"RTN","LEX2025",175,0)
 D ET(""),ET("Unable to verify checksum for import global ^LEXM (possibly corrupt).") D CKO
"RTN","LEX2025",176,0)
 Q
"RTN","LEX2025",177,0)
CF ;   Failed checksum
"RTN","LEX2025",178,0)
 N LEXLREV,LEXLAST,LEXBUILD,LEXIGHF D IMP D ET("")
"RTN","LEX2025",179,0)
 D ET("Import global ^LEXM failed checksum.") D CKO
"RTN","LEX2025",180,0)
 Q
"RTN","LEX2025",181,0)
CO ;   Obtain new global
"RTN","LEX2025",182,0)
 N LEXLREV,LEXLAST,LEXBUILD,LEXIGHF D IMP
"RTN","LEX2025",183,0)
 D ET(""),ET("    Please obtain a copy of the import global ^LEXM contained in the ")
"RTN","LEX2025",184,0)
 D ET(("    global host file "_LEXIGHF_" before continuing with the "_LEXBUILD))
"RTN","LEX2025",185,0)
 D ET(("    installation."))
"RTN","LEX2025",186,0)
 Q
"RTN","LEX2025",187,0)
CKO ;   Kill and Obtain new global
"RTN","LEX2025",188,0)
 N LEXLREV,LEXLAST,LEXBUILD,LEXIGHF D IMP
"RTN","LEX2025",189,0)
 D ET(""),ET("    Please KILL the existing import global ^LEXM from your system")
"RTN","LEX2025",190,0)
 D ET(("    and obtain a new copy of ^LEXM contained in the global host file"))
"RTN","LEX2025",191,0)
 D ET(("    "_LEXIGHF_" before continuing with the "_LEXBUILD_" installation."))
"RTN","LEX2025",192,0)
 Q
"RTN","LEX2025",193,0)
ET(X) ;   Error Text
"RTN","LEX2025",194,0)
 N LEXI S LEXI=+($G(LEXE(0))),LEXI=LEXI+1,LEXE(LEXI)="    "_$G(X),LEXE(0)=LEXI
"RTN","LEX2025",195,0)
 Q
"RTN","LEX2025",196,0)
ED ;   Error Display
"RTN","LEX2025",197,0)
 N LEXI S LEXI=0 F  S LEXI=$O(LEXE(LEXI)) Q:+LEXI=0  D M(LEXE(LEXI))
"RTN","LEX2025",198,0)
 D M(" ") K LEXE Q
"RTN","LEX2025",199,0)
 ;                   
"RTN","LEX2025",200,0)
 ; Miscellaneous
"RTN","LEX2025",201,0)
 ;
"RTN","LEX2025",202,0)
IMP ;   Import names
"RTN","LEX2025",203,0)
 S LEXLREV=16,LEXLAST="LEX*2.0*24",LEXBUILD="LEX*2.0*25"
"RTN","LEX2025",204,0)
 S LEXIGHF="LEX20_25.GBL"
"RTN","LEX2025",205,0)
 Q
"RTN","LEX2025",206,0)
NOTDEF(IEN) ; check to see if user is defined
"RTN","LEX2025",207,0)
 N DA,DR,DIQ,LEX,DIC S DA=IEN,DR=.01,DIC=200,DIQ="LEX" D EN^DIQ1 Q '$D(LEX)
"RTN","LEX2025",208,0)
OK ;
"RTN","LEX2025",209,0)
 N LEXBUILD,LEXIGHF,LEXLAST,LEXLREV,LEXT
"RTN","LEX2025",210,0)
 D IMP S LEXT="  Environment "_$S($L(LEXBUILD):("for patch/build "_LEXBUILD_" "),1:"")_"is ok"
"RTN","LEX2025",211,0)
 D BM(LEXT),M(" ")
"RTN","LEX2025",212,0)
 Q
"RTN","LEX2025",213,0)
BM(X) ;   Blank Line with Message
"RTN","LEX2025",214,0)
 S X=" "_$G(X) Q:$D(LEXQT)  D:$D(XPDNM) BMES^XPDUTL($G(X)) W:'$D(XPDNM) !!,$G(X) Q
"RTN","LEX2025",215,0)
M(X) ;   Message
"RTN","LEX2025",216,0)
 S X=" "_$G(X) Q:$D(LEXQT)  D:$D(XPDNM) MES^XPDUTL($G(X)) W:'$D(XPDNM) !,$G(X) Q
"RTN","LEX2025P")
0^^B4918647
"RTN","LEX2025P",1,0)
LEX2025P ;ISA/FJF-Pre/Post Install; 05/14/2003
"RTN","LEX2025P",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEX2025P",3,0)
 ;
"RTN","LEX2025P",4,0)
 ; External References
"RTN","LEX2025P",5,0)
 ;   DBIA 10086  HOME^%ZIS
"RTN","LEX2025P",6,0)
 ;   DBIA  2052  $$GET1^DID
"RTN","LEX2025P",7,0)
 ;   DBIA  2055  PRD^DILFD
"RTN","LEX2025P",8,0)
 ;   DBIA 10014  EN^DIU2
"RTN","LEX2025P",9,0)
 ;   DBIA 10141  BMES^XPDUTL
"RTN","LEX2025P",10,0)
 ;   DBIA 10141  MES^XPDUTL
"RTN","LEX2025P",11,0)
 ;                      
"RTN","LEX2025P",12,0)
 Q
"RTN","LEX2025P",13,0)
 ;                      
"RTN","LEX2025P",14,0)
POST ; LEX*2.0*25 Post-Install
"RTN","LEX2025P",15,0)
 N LEXEDT S LEXEDT=$G(^LEXM(0,"CREATED")) D LOAD,MSG
"RTN","LEX2025P",16,0)
 Q
"RTN","LEX2025P",17,0)
LOAD ;   Load data
"RTN","LEX2025P",18,0)
 N LEXB,LEXBUILD,LEXCD,LEXIGHF,LEXLAST,LEXLREV D IMP^LEX2025
"RTN","LEX2025P",19,0)
 S U="^",LEXB=$G(^LEXM(0,"BUILD")) Q:LEXB=""  Q:LEXBUILD=""
"RTN","LEX2025P",20,0)
 S LEXCD=0 S LEXCD=+($$CPD^LEX2025)
"RTN","LEX2025P",21,0)
 I LEXCD,LEXB=LEXBUILD D  G RV
"RTN","LEX2025P",22,0)
 . S X="Data for patch "_LEXBUILD_" has already been installed"
"RTN","LEX2025P",23,0)
 . W:'$D(XPDNM) !!,X D:$D(XPDNM) BMES^XPDUTL(X)
"RTN","LEX2025P",24,0)
 . S X="" W:'$D(XPDNM) ! D:$D(XPDNM) MES^XPDUTL(X)
"RTN","LEX2025P",25,0)
 I 'LEXCD,LEXB=LEXBUILD D EN^LEXXGI
"RTN","LEX2025P",26,0)
RV ;   Revision Numbers
"RTN","LEX2025P",27,0)
 N LEXRV F LEXRV=757,757.001,757.01,757.02,757.1,757.9,757.901,757.902,757.903,757.91 D
"RTN","LEX2025P",28,0)
 . Q:'$D(^LEX(LEXRV,0))&('$D(^LEXT(LEXRV,0)))&('$D(^LEXC(LEXRV,0)))
"RTN","LEX2025P",29,0)
 . Q:'$L($$GET1^DID(+LEXRV,.01,,"LABEL"))  D PRD^DILFD(LEXRV,"25^3030930")
"RTN","LEX2025P",30,0)
 F LEXRV=80,80.1 D
"RTN","LEX2025P",31,0)
 . Q:'$D(^DD(LEXRV,0))  Q:'$L($$GET1^DID(+LEXRV,.01,,"LABEL"))
"RTN","LEX2025P",32,0)
 . D PRD^DILFD(LEXRV,"6^3030930")
"RTN","LEX2025P",33,0)
 F LEXRV=81,81.3 D
"RTN","LEX2025P",34,0)
 . Q:'$D(^DD(LEXRV,0))  Q:'$L($$GET1^DID(+LEXRV,.01,,"LABEL"))
"RTN","LEX2025P",35,0)
 . D PRD^DILFD(LEXRV,"14^3030930")
"RTN","LEX2025P",36,0)
LOADQ ;   Quit Load
"RTN","LEX2025P",37,0)
 D KLEXM
"RTN","LEX2025P",38,0)
 Q
"RTN","LEX2025P",39,0)
MSG ;   Send Installation Message
"RTN","LEX2025P",40,0)
 Q:+($G(DUZ))=0!($$NOTDEF^LEX2025($G(DUZ)))
"RTN","LEX2025P",41,0)
 D HOME^%ZIS N DIFROM,LEXLREV,LEXLAST,LEXBUILD,LEXIGHF
"RTN","LEX2025P",42,0)
 D IMP^LEX2025,SEND^LEXXST Q
"RTN","LEX2025P",43,0)
 ;                       
"RTN","LEX2025P",44,0)
PRE ; LEX*2.0*25 Pre-Install
"RTN","LEX2025P",45,0)
 D KDD Q
"RTN","LEX2025P",46,0)
KDD ;   Kill previous copies of DDs
"RTN","LEX2025P",47,0)
 N DIU,X S X="^DD(81.3,0,""ID"",5)" K @X S X="^DD(81,0,""ID"",5)" K @X
"RTN","LEX2025P",48,0)
 Q
"RTN","LEX2025P",49,0)
 F DIU=757.9,757.901,757.902,757.903,757.904,757.91 D
"RTN","LEX2025P",50,0)
 . Q:'$L($$GET1^DID(+DIU,.01,,"LABEL"))  S DIU(0)="" D EN^DIU2 K ^LEXC(+($G(DIU)))
"RTN","LEX2025P",51,0)
 Q
"RTN","LEX2025P",52,0)
 ;                   
"RTN","LEX2025P",53,0)
KLEXM ; Subscripted Kill of ^LEXM
"RTN","LEX2025P",54,0)
 N DA S DA=0 F  S DA=$O(^LEXM(DA)) Q:+DA=0  K ^LEXM(DA)
"RTN","LEX2025P",55,0)
 K ^LEXM(0)
"RTN","LEX2025P",56,0)
 Q
"RTN","LEX2025P",57,0)
CON ; Conversion of data (N/A for patch 25)
"RTN","LEX2025P",58,0)
 Q
"RTN","LEXA")
0^17^B29452021
"RTN","LEXA",1,0)
LEXA ;ISA/FJF/KER-Look-up (Silent) ; 05/14/2003
"RTN","LEXA",2,0)
 ;;2.0;LEXICON UTILITY;**3,4,6,19,25**;Sep 23, 1996
"RTN","LEXA",3,0)
 ;
"RTN","LEXA",4,0)
 ; External References
"RTN","LEXA",5,0)
 ;   DBIA 10104  $$UP^XLFSTR
"RTN","LEXA",6,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","LEXA",7,0)
 ;   DBIA 10060  ^VA(200,
"RTN","LEXA",8,0)
 ;   DBIA 10016  ^DIM
"RTN","LEXA",9,0)
 ;                   
"RTN","LEXA",10,0)
 ; Look-up  D LOOK^LEXA(LEXX,LEXAP,LEXLL,LEXSUB,lexvdt)
"RTN","LEXA",11,0)
 ;                   
"RTN","LEXA",12,0)
 ;         LEXX      User Input
"RTN","LEXA",13,0)
 ;         LEXAP     Application
"RTN","LEXA",14,0)
 ;         LEXLL     Selection List Length
"RTN","LEXA",15,0)
 ;         LEXSUB    Mode/Subset (file 757.2)
"RTN","LEXA",16,0)
 ;         LEXVDT    Date to use for retrieving/displaying codes
"RTN","LEXA",17,0)
 ;                   
"RTN","LEXA",18,0)
 ; 1.  Search parameters ^TMP("LEXSCH",$J,PAR)=VALUE
"RTN","LEXA",19,0)
 ; 2.  Expressions found ^TMP("LEXFND",$J,FQ,IEN)=DT
"RTN","LEXA",20,0)
 ; 3.  Review List       ^TMP("LEXHITS",$J,#)=IEN^DT
"RTN","LEXA",21,0)
 ; 4.  Display List      LEX("LIST",#)
"RTN","LEXA",22,0)
 ;                   
"RTN","LEXA",23,0)
 ;         LEX("LIST",0)=LAST^TOTAL
"RTN","LEXA",24,0)
 ;         LEX("LIST",#)=IEN^DT
"RTN","LEXA",25,0)
 ;                   
"RTN","LEXA",26,0)
LOOK(LEXX,LEXAP,LEXLL,LEXSUB,LEXVDT) ; Search for LEXX
"RTN","LEXA",27,0)
 K DIERR,LEX
"RTN","LEXA",28,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEXA",29,0)
 K:+$G(^TMP("LEXSCH",$J,"ADF",0))=0 ^TMP("LEXSCH",$J)
"RTN","LEXA",30,0)
 I $D(DIC(0)) D
"RTN","LEXA",31,0)
 .S:DIC(0)["L" DIC(0)=$P(DIC(0),"L",1)_$P(DIC(0),"L",2)
"RTN","LEXA",32,0)
 .S:DIC(0)["I" DIC(0)=$P(DIC(0),"I",1)_$P(DIC(0),"I",2)
"RTN","LEXA",33,0)
 S LEXQ=1,LEXX=$G(LEXX)
"RTN","LEXA",34,0)
 I LEXX=""!(LEXX["^") D EN^LEXAR("^",$G(LEXVDT)) K LEXAP D EXIT Q
"RTN","LEXA",35,0)
 S LEXAP=$$UP^XLFSTR($G(LEXAP))
"RTN","LEXA",36,0)
 S LEXLL=+$G(LEXLL)
"RTN","LEXA",37,0)
 S LEXSUB=$G(LEXSUB)
"RTN","LEXA",38,0)
 S ^TMP("LEXSCH",$J,"APP",0)=+$$AP^LEXDFN2($G(LEXAP))
"RTN","LEXA",39,0)
 S:^TMP("LEXSCH",$J,"APP",0)=0 ^TMP("LEXSCH",$J,"APP",0)=1
"RTN","LEXA",40,0)
 S:LEXSUB="" LEXSUB=^TMP("LEXSCH",$J,"APP",0)
"RTN","LEXA",41,0)
 S:$L($G(DIC("S"))) ^TMP("LEXSCH",$J,"FIL",0)=DIC("S")
"RTN","LEXA",42,0)
 S:LEXLL=0 LEXLL=5
"RTN","LEXA",43,0)
 S ^TMP("LEXSCH",$J,"LEN",0)=LEXLL
"RTN","LEXA",44,0)
X ; Search for X
"RTN","LEXA",45,0)
 I '$L($G(LEXX)) D  D EXIT Q
"RTN","LEXA",46,0)
 .S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",47,0)
 .S LEX("ERR",LEX("ERR",0))="User input LEXX missing or invalid"
"RTN","LEXA",48,0)
APP ; Application
"RTN","LEXA",49,0)
 I +$G(^TMP("LEXSCH",$J,"APP",0))=0!('$D(^LEXT(757.2,+$G(^TMP("LEXSCH",$J,"APP",0)),0))) D  D EXIT Q
"RTN","LEXA",50,0)
 .S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",51,0)
 .S LEX("ERR",LEX("ERR",0))="Calling application identification LEXAP missing or invalid"
"RTN","LEXA",52,0)
USR ; User
"RTN","LEXA",53,0)
 I +$G(DUZ)=0!('$D(^VA(200,+$G(DUZ),0))) D  D EXIT Q
"RTN","LEXA",54,0)
 .S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",55,0)
 .S LEX("ERR",LEX("ERR",0))="User identification DUZ missing or invalid"
"RTN","LEXA",56,0)
 N LEXFND
"RTN","LEXA",57,0)
 S LEXFND=0
"RTN","LEXA",58,0)
 S ^TMP("LEXSCH",$J,"USR",0)=+$G(DUZ)
"RTN","LEXA",59,0)
 S ^TMP("LEXSCH",$J,"NAR",0)=LEXX
"RTN","LEXA",60,0)
 S ^TMP("LEXSCH",$J,"SCH",0)=$$UP^XLFSTR(LEXX)
"RTN","LEXA",61,0)
DEF ; Defaults                     CONFIG^LEXSET
"RTN","LEXA",62,0)
 N LEXFIL,LEXDSP,LEXFILR S:$L($G(DIC("S"))) LEXFIL=DIC("S")
"RTN","LEXA",63,0)
 I '$L($G(LEXFIL)),$L($G(^TMP("LEXSCH",$J,"FIL",0))) S LEXFIL=^TMP("LEXSCH",$J,"FIL",0)
"RTN","LEXA",64,0)
 N LEXNS,LEXSS
"RTN","LEXA",65,0)
 S LEXNS=$$NS^LEXDFN2(LEXAP)
"RTN","LEXA",66,0)
 S LEXSS=$$MD^LEXDFN2(LEXSUB)
"RTN","LEXA",67,0)
 I +$G(^TMP("LEXSCH",$J,"ADF",0))=0 D CONFIG^LEXSET(LEXNS,LEXSS,$G(LEXVDT))
"RTN","LEXA",68,0)
 I '$L($G(LEXFIL)),$L($G(^TMP("LEXSCH",$J,"FIL",0))) S LEXFIL=^TMP("LEXSCH",$J,"FIL",0)
"RTN","LEXA",69,0)
 S:$L($G(LEXFIL)) LEXFIL=$$FIL(LEXFIL)
"RTN","LEXA",70,0)
 S LEXFIL=$G(LEXFIL)
"RTN","LEXA",71,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEXA",72,0)
 D MAN
"RTN","LEXA",73,0)
 I $D(LEX("ERR")) D EXIT Q
"RTN","LEXA",74,0)
 D SETUP^LEXAM($G(^TMP("LEXSCH",$J,"VOC",0)))
"RTN","LEXA",75,0)
 I $D(LEX("ERR")) D EXIT Q
"RTN","LEXA",76,0)
LK ; Look-up
"RTN","LEXA",77,0)
IEN ; Look-up by IEN               ADDL^LEXAL PCH 4
"RTN","LEXA",78,0)
 I ^TMP("LEXSCH",$J,"NAR",0)?1"`"1N.N D  I $D(LEX("LIST")) D EXIT Q
"RTN","LEXA",79,0)
 .N LEXE,LEXUN
"RTN","LEXA",80,0)
 .S LEXE=+$E(^TMP("LEXSCH",$J,"NAR",0),2,$L(^TMP("LEXSCH",$J,"NAR",0))) Q:LEXE=0
"RTN","LEXA",81,0)
 .S LEXUN=+$G(^TMP("LEXSCH",$J,"UNR",0))
"RTN","LEXA",82,0)
 .Q:'$D(^LEX(757.01,LEXE,0))
"RTN","LEXA",83,0)
 .D ADDL^LEXAL(LEXE,$$DES^LEXASC(LEXE),$$SO^LEXASO(LEXE,$G(^TMP("LEXSCH",$J,"DIS",0)),1,$G(LEXVDT)))
"RTN","LEXA",84,0)
 .I $D(^TMP("LEXFND",$J)) D BEG^LEXAL
"RTN","LEXA",85,0)
 .I LEXUN>0,$L($G(^TMP("LEXSCH",$J,"NAR",0))) S LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXA",86,0)
 .I LEXUN>0,$L($G(^LEX(757.01,+$G(LEXE),0))) S LEX("NAR")=$G(^LEX(757.01,+$G(LEXE),0))
"RTN","LEXA",87,0)
SCT ; Look-up by Shortcuts         EN^LEXASC  
"RTN","LEXA",88,0)
 I +$G(^TMP("LEXSCH",$J,"SCT",0)),$D(^LEX(757.41,^TMP("LEXSCH",$J,"SCT",0))) D
"RTN","LEXA",89,0)
 .S LEXFND=$$EN^LEXASC(^TMP("LEXSCH",$J,"SCH",0),^TMP("LEXSCH",$J,"SCT",0),$G(LEXVDT))
"RTN","LEXA",90,0)
 I +LEXFND D EXIT Q
"RTN","LEXA",91,0)
CODE ; Look-up by Code              EN^LEXABC
"RTN","LEXA",92,0)
 S LEXFND=$$EN^LEXABC(^TMP("LEXSCH",$J,"SCH",0),$G(LEXVDT))
"RTN","LEXA",93,0)
 I +LEXFND D EXIT Q
"RTN","LEXA",94,0)
 ; if code is found but it is inactive
"RTN","LEXA",95,0)
 ;I +$P(LEXFND,"^",2)'=-1 S LEX=0 D EXIT Q
"RTN","LEXA",96,0)
EXACT ; Look-up Exact Match          EN^LEXAB
"RTN","LEXA",97,0)
 S LEXFND=$$EN^LEXAB(^TMP("LEXSCH",$J,"SCH",0),$G(LEXVDT))
"RTN","LEXA",98,0)
 K:+LEXFND=0 ^TMP("LEXFND",$J)
"RTN","LEXA",99,0)
 K ^TMP("LEXHIT",$J)
"RTN","LEXA",100,0)
KEYWRD ; Look-up by word              EN^LEXALK
"RTN","LEXA",101,0)
 D EN^LEXALK
"RTN","LEXA",102,0)
EXIT ; Clean-up and quit
"RTN","LEXA",103,0)
 K LEXQ,LEXDICS,LEXFIL,LEXFILR,LEXDSP,LEXSHOW,LEXSHCT,LEXSUB
"RTN","LEXA",104,0)
 K LEXOVR,LEXUN,LEXLKFL,LEXLKGL,LEXLKIX,LEXLKSH,LEXTKNS,LEXTKN
"RTN","LEXA",105,0)
 K LEXI
"RTN","LEXA",106,0)
 D:$D(LEX("ERR")) CLN
"RTN","LEXA",107,0)
 I $D(LEX),+$G(LEX)=0,'$D(LEX("LIST")),$L($G(LEXX)) D
"RTN","LEXA",108,0)
 .N LEXC,LEXF,LEXV
"RTN","LEXA",109,0)
 .S LEXC=1
"RTN","LEXA",110,0)
 .S LEXF=$G(^TMP("LEXSCH",$J,"FIL",0))
"RTN","LEXA",111,0)
 .S LEXV=$G(^TMP("LEXSCH",$J,"VOC",0))
"RTN","LEXA",112,0)
 .D:+$G(^TMP("LEXSCH",$J,"UNR",0))>0 EN^LEXAR(LEXX,$G(LEXVDT))
"RTN","LEXA",113,0)
 .S LEX("NAR")=LEXX
"RTN","LEXA",114,0)
 .S LEX=0
"RTN","LEXA",115,0)
 .S LEX("HLP",LEXC)="    A suitable term could not be found based on user input"
"RTN","LEXA",116,0)
 .S:LEXF="I 1" LEXF=""
"RTN","LEXA",117,0)
 .I $L(LEXF)!(LEXV'="WRD") D
"RTN","LEXA",118,0)
 ..S LEX("HLP",LEXC)=$G(LEX("HLP",LEXC))_" and "
"RTN","LEXA",119,0)
 ..S LEXC=LEXC+1
"RTN","LEXA",120,0)
 ..S LEX("HLP",LEXC)="    current user defaults"
"RTN","LEXA",121,0)
 ..S LEX("HLP",0)=LEXC
"RTN","LEXA",122,0)
 .S LEX("HLP",LEXC)=$G(LEX("HLP",LEXC))_"."
"RTN","LEXA",123,0)
 Q
"RTN","LEXA",124,0)
CLN ; Clean
"RTN","LEXA",125,0)
 K LEXQ,LEXTKNS,LEXTKN,LEXI
"RTN","LEXA",126,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXHIT",$J),^TMP("LEXFND",$J)
"RTN","LEXA",127,0)
 Q
"RTN","LEXA",128,0)
CLR ; Clear all (FOR TESTING ONLY)
"RTN","LEXA",129,0)
 K LEX,LEXQ,LEXTKNS,LEXTKN,LEXI
"RTN","LEXA",130,0)
 K ^TMP("LEXSCH"),^TMP("LEXHIT"),^TMP("LEXFND")
"RTN","LEXA",131,0)
 Q
"RTN","LEXA",132,0)
MAN ; Mandatory variables
"RTN","LEXA",133,0)
 N LEXERR
"RTN","LEXA",134,0)
 F LEXERR="SCH","VOC","APP","USR" D
"RTN","LEXA",135,0)
 .I '$L($G(^TMP("LEXSCH",$J,LEXERR,0))) D
"RTN","LEXA",136,0)
 ..S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",137,0)
 ..S LEX("ERR",LEX("ERR",0))="Mandatory variable ^TMP(""LEXSCH"",$J,"""_LEXERR_""",0) missing or invalid"
"RTN","LEXA",138,0)
 Q
"RTN","LEXA",139,0)
FIL(X) ; Validate Filter
"RTN","LEXA",140,0)
 S X=$G(X)
"RTN","LEXA",141,0)
 Q:'$L(X) X
"RTN","LEXA",142,0)
 D ^DIM
"RTN","LEXA",143,0)
 S:'$D(X) X=""
"RTN","LEXA",144,0)
 Q X
"RTN","LEXA",145,0)
 ;                   
"RTN","LEXA",146,0)
 ; D INFO^LEXA(IEN,DATE)
"RTN","LEXA",147,0)
 ;                   
"RTN","LEXA",148,0)
 ;    IEN   Internal Entry Number in file 757.01
"RTN","LEXA",149,0)
 ;    DATE  Optional - retrieves codes active on a specified date
"RTN","LEXA",150,0)
 ;               
"RTN","LEXA",151,0)
 ; Returns array LEX("SEL") or null
"RTN","LEXA",152,0)
 ;                   
"RTN","LEXA",153,0)
 ;    LEX("SEL","EXP")   Expressions Concepts/Synonyms/Variants
"RTN","LEXA",154,0)
 ;    LEX("SEL","SIG")   Expression definition
"RTN","LEXA",155,0)
 ;    LEX("SEL","SRC")   Classification Codes
"RTN","LEXA",156,0)
 ;    LEX("SEL"."STY")   Semantic Class/Semantic Types
"RTN","LEXA",157,0)
 ;    LEX("SEL","VAS")   VA Classification Sources
"RTN","LEXA",158,0)
 ;                   
"RTN","LEXA",159,0)
INFO(X,LEXVDT) ; Get Information about a Term
"RTN","LEXA",160,0)
 K LEX("SEL") S X=+$G(X) Q:X=0  Q:'$D(^LEX(757.01,X,0))
"RTN","LEXA",161,0)
 N LEXD S LEXD=$G(LEXVDT) S:+LEXD'>0 LEXD=$$DT^XLFDT
"RTN","LEXA",162,0)
 N LEXVDT S LEXVDT=LEXD D SET^LEXAR4(X,LEXVDT)
"RTN","LEXA",163,0)
 Q
"RTN","LEXAB")
0^10^B9544212
"RTN","LEXAB",1,0)
LEXAB ; ISL/KER Look-up Exact Match "B" index ; 05/14/2003
"RTN","LEXAB",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXAB",3,0)
 ;
"RTN","LEXAB",4,0)
 ; External References
"RTN","LEXAB",5,0)
 ;   DBIA 10104  $$UP^XLFSTR
"RTN","LEXAB",6,0)
 ;                   
"RTN","LEXAB",7,0)
 ; Exact match  S X=$$EN^LEXAB("LEXSCH",LEXVDT)
"RTN","LEXAB",8,0)
 ;                   
"RTN","LEXAB",9,0)
 ;   INPUT
"RTN","LEXAB",10,0)
 ;     LEXSCH  User input string to search for
"RTN","LEXAB",11,0)
 ;     LEXVDT  Date used to screen out inactive codes
"RTN","LEXAB",12,0)
 ;                   
"RTN","LEXAB",13,0)
 ;   Notes:
"RTN","LEXAB",14,0)
 ;                   
"RTN","LEXAB",15,0)
 ;     1.  If an exact match is found, it is placed at
"RTN","LEXAB",16,0)
 ;         the top of the selection list at 
"RTN","LEXAB",17,0)
 ;         ^TMP("LEXFND",$J)
"RTN","LEXAB",18,0)
 ;                   
"RTN","LEXAB",19,0)
 ;     2.  Returns
"RTN","LEXAB",20,0)
 ;                   
"RTN","LEXAB",21,0)
 ;         0 - Exact match not found
"RTN","LEXAB",22,0)
 ;         1 - Exact match found
"RTN","LEXAB",23,0)
 ;                   
"RTN","LEXAB",24,0)
EN(LEXSCH,LEXVDT) ; Check "B" index for exact match
"RTN","LEXAB",25,0)
 Q:'$L(LEXSCH) 0
"RTN","LEXAB",26,0)
 N LEXLKGL,LEXEM,LEXEMC S LEXLKGL=$G(^TMP("LEXSCH",$J,"GBL",0)),LEXEMC=0
"RTN","LEXAB",27,0)
 Q:$G(LEXLKGL)'["757.01" 0
"RTN","LEXAB",28,0)
 N LEXSHOW S LEXSHOW=$G(^TMP("LEXSCH",$J,"DIS",0))
"RTN","LEXAB",29,0)
 N LEXO,LEXE,LEXOK,LEXDES,LEXDSP
"RTN","LEXAB",30,0)
 S (LEXE,LEXOK)=0,LEXO=$$SCH(LEXSCH)
"RTN","LEXAB",31,0)
 F  S LEXO=$O(^LEX(757.01,"B",LEXO)) Q:LEXO=""!(LEXSCH'[LEXO)  D
"RTN","LEXAB",32,0)
 . S (LEXE,LEXOK)=0
"RTN","LEXAB",33,0)
 . F  S LEXE=$O(^LEX(757.01,"B",LEXO,LEXE)) Q:+LEXE=0  D
"RTN","LEXAB",34,0)
 . . Q:+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1
"RTN","LEXAB",35,0)
 . . I $$UP^XLFSTR(LEXSCH)=$$UP^XLFSTR($G(^LEX(757.01,LEXE,0))) D
"RTN","LEXAB",36,0)
 . . . S LEXEMC=+($G(LEXEMC)),LEXEMC=LEXEMC+1,LEXEM=LEXE
"RTN","LEXAB",37,0)
 S:+($G(LEXEMC))=1 LEXOK=$G(LEXEM) S:+($G(LEXEMC))'=1 LEXOK=0
"RTN","LEXAB",38,0)
 ; Exact Match Found
"RTN","LEXAB",39,0)
 I +LEXOK>0 D
"RTN","LEXAB",40,0)
 . S LEXE=LEXOK
"RTN","LEXAB",41,0)
 . ; Filter
"RTN","LEXAB",42,0)
 . S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),LEXE) Q:LEXFILR=0
"RTN","LEXAB",43,0)
 . ; Deactivated
"RTN","LEXAB",44,0)
 . Q:+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1
"RTN","LEXAB",45,0)
 . S LEXDES=$$DES(LEXE)
"RTN","LEXAB",46,0)
 . S LEXDSP="" S:$L($G(LEXSHOW)) LEXDSP=$$DSP(LEXE,$G(LEXSHOW),$G(LEXVDT))
"RTN","LEXAB",47,0)
 . D ADDE^LEXAL(LEXE,LEXDES,LEXDSP)
"RTN","LEXAB",48,0)
 . S ^TMP("LEXSCH",$J,"EXM",0)=LEXE
"RTN","LEXAB",49,0)
 . S ^TMP("LEXSCH",$J,"EXM",1)=$G(^LEX(757.01,+LEXE,0))
"RTN","LEXAB",50,0)
 . I '$D(^LEX(757,"B",LEXE)) D
"RTN","LEXAB",51,0)
 . . N LEXME,LEXM S LEXM=+($G(^LEX(757.01,LEXE,1))) Q:LEXM=0
"RTN","LEXAB",52,0)
 . . S LEXME=+($G(^LEX(757,LEXM,0))) Q:LEXM=0  Q:LEXE=LEXME
"RTN","LEXAB",53,0)
 . . I +($G(^LEX(757.01,LEXME,1)))=LEXM D
"RTN","LEXAB",54,0)
 . . . S LEXDES=$$DES(LEXME),LEXDSP="" S:$L($G(LEXSHOW)) LEXDSP=$$DSP(LEXE,$G(LEXSHOW),$G(LEXVDT))
"RTN","LEXAB",55,0)
 . . . D ADDEM^LEXAL(LEXME,LEXDES,LEXDSP)
"RTN","LEXAB",56,0)
 . . . S ^TMP("LEXSCH",$J,"EXC",0)=LEXME
"RTN","LEXAB",57,0)
 . . . S ^TMP("LEXSCH",$J,"EXC",1)=$G(^LEX(757.01,+LEXME,0))
"RTN","LEXAB",58,0)
 Q:$D(^TMP("LEXFND",$J)) 1
"RTN","LEXAB",59,0)
 Q 0
"RTN","LEXAB",60,0)
DES(LEXX) ; Get description flag
"RTN","LEXAB",61,0)
 N LEXDES,LEXE,LEXM S LEXDES="",LEXE=+LEXX
"RTN","LEXAB",62,0)
 S LEXM=$P($G(^LEX(757.01,+($G(LEXX)),1)),"^",1)
"RTN","LEXAB",63,0)
 S LEXM=+($G(^LEX(757,+($G(LEXM)),0)))
"RTN","LEXAB",64,0)
 S:$D(^LEX(757.01,LEXM,3)) LEXDES="*"
"RTN","LEXAB",65,0)
 S LEXX=$G(LEXDES) Q LEXX
"RTN","LEXAB",66,0)
TERM(LEXX) ; Get expression
"RTN","LEXAB",67,0)
 Q $G(^LEX(757.01,LEXX,0))
"RTN","LEXAB",68,0)
DSP(LEXX,LEXDSP,LEXVDT) ; Return displayable text
"RTN","LEXAB",69,0)
 N LEXMCE S LEXMCE=+($G(^LEX(757,+($G(^LEX(757.01,LEXX,1))),0)))
"RTN","LEXAB",70,0)
 I +LEXMCE>0,$D(^LEX(757.01,+LEXMCE,0)) S LEXX=$$SO^LEXASO(+LEXMCE,LEXDSP,1,$G(LEXVDT)) Q LEXX
"RTN","LEXAB",71,0)
 S LEXX=$$SO^LEXASO(LEXX,LEXDSP,1,$G(LEXVDT)) Q LEXX
"RTN","LEXAB",72,0)
SCH(LEXX) ; Search for LEXX a $Orderable variable
"RTN","LEXAB",73,0)
 S LEXX=$$UP^XLFSTR($E(LEXX,1,63))
"RTN","LEXAB",74,0)
 S LEXX=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~" Q LEXX
"RTN","LEXABC")
0^8^B35289957
"RTN","LEXABC",1,0)
LEXABC ; ISL/KER/FJF Look-up by Code ; 05/14/2003
"RTN","LEXABC",2,0)
 ;;2.0;LEXICON UTILITY;**4,25**;Sep 23, 1996
"RTN","LEXABC",3,0)
 ;
"RTN","LEXABC",4,0)
 ; S X=$$EN^LEXABC(CODE,LEXVDT)
"RTN","LEXABC",5,0)
 ;
"RTN","LEXABC",6,0)
 ; INPUT
"RTN","LEXABC",7,0)
 ;   LEXSO   Code     Preferred terms only
"RTN","LEXABC",8,0)
 ;           Code+    All terms
"RTN","LEXABC",9,0)
 ;   LEXVDT  Version  Date to screen against (default = today)
"RTN","LEXABC",10,0)
 ;                  
"RTN","LEXABC",11,0)
EN(LEXSO,LEXVDT) ; Entry from LEXA
"RTN","LEXABC",12,0)
 S LEXSO=$G(LEXSO) Q:'$L(LEXSO) 0  Q:$L(LEXSO)>40 0
"RTN","LEXABC",13,0)
 ;N CODESTAT S CODESTAT=$$STATCHK^LEXSRC2($$NONPLUS(LEXSO),$G(LEXVDT)) Q:+CODESTAT=0 CODESTAT  K CODESTAT
"RTN","LEXABC",14,0)
 ;Q:+($$STATCHK^LEXSRC2($$NONPLUS(LEXSO),$G(LEXVDT)))'>0 0
"RTN","LEXABC",15,0)
 D BLD S:$L($G(^TMP("LEXSCH",$J,"NAR",0))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0)) Q:$D(^TMP("LEXHIT",$J)) 1 Q 0
"RTN","LEXABC",16,0)
BLD ; Build List
"RTN","LEXABC",17,0)
 N LEXSO2 D CLR K ^TMP("LEXSCH",$J,"LST",0),^TMP("LEXSCH",$J,"TOL",0),LEX S ^TMP("LEXSCH",$J,"NUM",0)=0,LEXSO=$G(LEXSO)
"RTN","LEXABC",18,0)
 I $E(LEXSO,$L(LEXSO))'="+"&($L(LEXSO)'>2)!($E(LEXSO,$L(LEXSO))="+"&($L(LEXSO)'>3)) D CLR Q
"RTN","LEXABC",19,0)
 S LEXSO2="" S:$E(LEXSO,$L(LEXSO))="+" LEXSO2=$E(LEXSO,$L(LEXSO)),LEXSO=$E(LEXSO,1,($L(LEXSO)-1)) I '(+($$IN(LEXSO))) D CLR Q
"RTN","LEXABC",20,0)
 Q:$E(LEXSO,1,3)="U00"  D FND D:$D(^TMP("LEXFND",$J)) BEG^LEXAL Q:$D(^TMP("LEXFND",$J))  D:'$D(^TMP("LEXFND",$J)) CLR
"RTN","LEXABC",21,0)
 Q
"RTN","LEXABC",22,0)
FND ; Find expressions
"RTN","LEXABC",23,0)
 K ^TMP("LEXL",$J),^TMP("LEXLE",$J)
"RTN","LEXABC",24,0)
 N LEXSIEN,LEXMIEN,LEXEIEN,LEXDESF,LEXDSPL,LEXDSPLA,LEXFORM,LEXFMTY,LEXS,LEXSAB,LEXSDATA
"RTN","LEXABC",25,0)
 N LEXP,LEXTP,LEXTYPE,LEXFILR,LEXFORM,LEXC,LEXCSTAT
"RTN","LEXABC",26,0)
 S U="^",LEXS=$$SCH(LEXSO)_" "
"RTN","LEXABC",27,0)
 S:'$L($G(LEXFIL))&($L($G(DIC("S")))) LEXFIL=DIC("S")
"RTN","LEXABC",28,0)
 S:'$L($G(LEXFIL))&($L($G(^TMP("LEXSCH",$J,"LEXFIL",0)))) LEXFIL=$G(^TMP("LEXSCH",$J,"LEXFIL",0))
"RTN","LEXABC",29,0)
 F  S LEXS=$O(^LEX(757.02,"AVA",LEXS)) Q:$E(LEXS,1,$L(LEXSO))'=LEXSO  D
"RTN","LEXABC",30,0)
 . S LEXEIEN=0 F  S LEXEIEN=$O(^LEX(757.02,"AVA",LEXS,LEXEIEN)) Q:+LEXEIEN=0  D
"RTN","LEXABC",31,0)
 . . I $L($G(LEXFIL)) S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),+($G(^LEX(757,+($G(^LEX(757.01,LEXEIEN,1))),0)))) Q:LEXFILR=0
"RTN","LEXABC",32,0)
 . . S LEXSAB="" F  S LEXSAB=$O(^LEX(757.02,"AVA",LEXS,LEXEIEN,LEXSAB)) Q:LEXSAB=""  D
"RTN","LEXABC",33,0)
 . . . S LEXSIEN=0 F  S LEXSIEN=$O(^LEX(757.02,"AVA",LEXS,LEXEIEN,LEXSAB,LEXSIEN)) Q:+LEXSIEN=0  D
"RTN","LEXABC",34,0)
 . . . . S LEXSDATA=$G(^LEX(757.02,LEXSIEN,0))
"RTN","LEXABC",35,0)
 . . . . S LEXC=$P(LEXSDATA,"^",2)
"RTN","LEXABC",36,0)
 . . . . Q:+$$STATCHK^LEXSRC2(LEXC,$G(LEXVDT))=0
"RTN","LEXABC",37,0)
 . . . . S LEXTYPE=+$P(LEXSDATA,"^",3)
"RTN","LEXABC",38,0)
 . . . . S LEXMIEN=+$P(LEXSDATA,"^",4),(LEXP,LEXTP)=+$P(LEXSDATA,"^",5)
"RTN","LEXABC",39,0)
 . . . . Q:+($$DE(LEXEIEN))=1
"RTN","LEXABC",40,0)
 . . . . Q:$$STATIEN(LEXSIEN)=0
"RTN","LEXABC",41,0)
 . . . . S LEXDESF=$$DC(LEXEIEN,LEXTP)
"RTN","LEXABC",42,0)
 . . . . S LEXDSPL=$$DP(LEXS,LEXTYPE),LEXDSPLA=$$DSO(+LEXEIEN,$G(LEXVDT))
"RTN","LEXABC",43,0)
 . . . . S LEXDSPL=$$MDS(LEXDSPL,LEXDSPLA)
"RTN","LEXABC",44,0)
 . . . . S LEXFORM=$$F(LEXEIEN),LEXFMTY=$P(LEXFORM,"^",1),LEXFORM=$P(LEXFORM,"^",2)
"RTN","LEXABC",45,0)
 . . . . I LEXTYPE>3,LEXTYPE'=17 D NP Q
"RTN","LEXABC",46,0)
 . . . . D PF
"RTN","LEXABC",47,0)
 D:$D(^TMP("LEXL",$J)) REO^LEXABC2,ADD^LEXABC2
"RTN","LEXABC",48,0)
 Q
"RTN","LEXABC",49,0)
PF ; Preferred
"RTN","LEXABC",50,0)
 S:LEXP=0 LEXTP=2 Q:LEXTP=2&($G(LEXSO2)'["+")
"RTN","LEXABC",51,0)
 S ^TMP("LEXL",$J,LEXS,LEXTYPE,LEXTP,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM
"RTN","LEXABC",52,0)
 S ^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^"_LEXTYPE_"^"_LEXTP_"^"_LEXSIEN
"RTN","LEXABC",53,0)
 Q
"RTN","LEXABC",54,0)
NP ; Not Preferred
"RTN","LEXABC",55,0)
 N LEXICD S:LEXP=0 LEXTP=1
"RTN","LEXABC",56,0)
 I $D(^TMP("LEXLE",$J,LEXEIEN)) D  Q
"RTN","LEXABC",57,0)
 . N LEX1,LEX2,LEX3,LEX4,LEXD,LEXDP
"RTN","LEXABC",58,0)
 . S LEXD=^TMP("LEXLE",$J,LEXEIEN),LEX1=$P(LEXD,"^",1) Q:'$L(LEX1)  S LEX2=$P(LEXD,"^",2) Q:'$L(LEX2)  S LEX3=$P(LEXD,"^",3) Q:'$L(LEX3)  S LEX4=$P(LEXD,"^",4) Q:'$L(LEX4)
"RTN","LEXABC",59,0)
 . S LEXD=$G(^TMP("LEXL",$J,LEX1,LEX2,LEX3,LEX4)) Q:'$L(LEXD)
"RTN","LEXABC",60,0)
 . S LEXDP=$P(LEXD,"^",4) S:$L(LEXDP) LEXDP=LEXDP_"/"_LEXDSPL S:'$L(LEXDP) LEXDP=LEXDSPL
"RTN","LEXABC",61,0)
 . S $P(LEXD,"^",4)=LEXDP,^TMP("LEXL",$J,LEX1,LEX2,LEX3,LEX4)=LEXD
"RTN","LEXABC",62,0)
 S LEXICD=$$ICDONE^LEXU(LEXEIEN)
"RTN","LEXABC",63,0)
 I '$L(LEXICD) S ^TMP("LEXL",$J,LEXS,LEXTYPE,LEXTP,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM,^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^"_LEXTYPE_"^"_LEXTP_"^"_LEXSIEN Q
"RTN","LEXABC",64,0)
 I $L(LEXICD) D  Q
"RTN","LEXABC",65,0)
 . S:$L(LEXDSPL)&(LEXSO2["+") LEXDSPL=LEXDSPL_"/ICD-9-CM "_LEXICD
"RTN","LEXABC",66,0)
 . I LEXSO2["+",$D(^TMP("LEXL",$J,LEXS,1)) S ^TMP("LEXL",$J,LEXS,1,4,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM,^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^1^3^"_LEXSIEN Q
"RTN","LEXABC",67,0)
 . S LEXTP=1,^TMP("LEXL",$J,LEXS,LEXTYPE,LEXTP,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM,^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^"_LEXTYPE_"^"_LEXTP_"^"_LEXSIEN
"RTN","LEXABC",68,0)
 Q
"RTN","LEXABC",69,0)
F(LEX) ; Form
"RTN","LEXABC",70,0)
 S LEX=+($G(LEX)),LEX=+($P($G(^LEX(757.01,LEX,1)),"^",2))
"RTN","LEXABC",71,0)
 S LEX=$S(LEX=1:"A^Concept:  ",LEX=2:"B^Synonym:  ",LEX=3:"C^Variant:  ",LEX=4:"D^Related:  ",LEX=5:"E^Modified: ",1:"F^Other:    ")
"RTN","LEXABC",72,0)
 Q LEX
"RTN","LEXABC",73,0)
DE(LEX) ; Deactivated 757.01
"RTN","LEXABC",74,0)
 S LEX=+($G(LEX)) Q:'$D(^LEX(757.01,LEX,0)) 1 Q:+($P($G(^LEX(757.01,LEX,1)),"^",5))=1 1
"RTN","LEXABC",75,0)
 S LEX=+($G(^LEX(757.01,LEX,1)))
"RTN","LEXABC",76,0)
 Q:'$D(^LEX(757,LEX,0)) 1 S LEX=+($G(^LEX(757,LEX,0)))
"RTN","LEXABC",77,0)
 Q:'$D(^LEX(757.01,LEX,1)) 1
"RTN","LEXABC",78,0)
 Q:+($P($G(^LEX(757.01,LEX,1)),"^",5))=1 1
"RTN","LEXABC",79,0)
 Q 0
"RTN","LEXABC",80,0)
DC(LEX,LEXT) ; Description
"RTN","LEXABC",81,0)
 N LEXD,LEXM S LEXD="",LEX=+($G(LEX)),LEXM=$P($G(^LEX(757.01,+($G(LEX)),1)),"^",1),LEXM=+($G(^LEX(757,+($G(LEXM)),0))) S:$D(^LEX(757.01,LEXM,3))&(+($G(LEXT))'=2) LEXD="*" S LEX=$G(LEXD) Q LEX
"RTN","LEXABC",82,0)
DP(LEXS,LEXT) ; Display
"RTN","LEXABC",83,0)
 S LEXT=+($G(LEXT)),LEXT=$P($G(^LEX(757.03,LEXT,0)),"^",2)
"RTN","LEXABC",84,0)
 S LEXS=$G(LEXS) S:$E(LEXS,$L(LEXS))=" " LEXS=$E(LEXS,1,($L(LEXS)-1))
"RTN","LEXABC",85,0)
 S:$L(LEXS)&($L(LEXT)) LEXS=LEXT_" "_LEXS Q:$L(LEXS)&($L(LEXT)) LEXS Q ""
"RTN","LEXABC",86,0)
DSO(X,LEXVDT) ; Display Sources String
"RTN","LEXABC",87,0)
 N LEXT,LEXIEN S LEXIEN=+($G(X)) Q:+LEXIEN'>0 ""
"RTN","LEXABC",88,0)
 S LEXT="ICD/10D/ICP/10P/CPT/CPC/DS4/NAN/HHC/NIC/SNM/SM3/OMA/SCC"
"RTN","LEXABC",89,0)
 ;S LEXT="ICD/ICP/CPT/NAN/NIC/OMA/DS4"
"RTN","LEXABC",90,0)
 ;S LEXT="10D/DOP/ACR/AIR/COS/CPC/CPT/CSP/CST/DMI/DOR/DS3/DXP/HHC/ICD/ICP/LCH/LNC/MCM/MSH/MTF/MTH/NAN/NIC/NOC/OMA/RVC/SCC/SNM/UMD/UND/UWA"
"RTN","LEXABC",91,0)
 S X=$$SO^LEXASO(LEXIEN,LEXT,1,$G(LEXVDT))
"RTN","LEXABC",92,0)
 Q X
"RTN","LEXABC",93,0)
MDS(LEXD,LEXA) ; Merge Display Strings
"RTN","LEXABC",94,0)
 S LEXA=$G(LEXA) F  Q:LEXA'[") ("  S LEXA=$P(LEXA,") (",1)_"/"_$P(LEXA,") (",2,299)
"RTN","LEXABC",95,0)
 S LEXA=$TR(LEXA,"(",""),LEXA=$TR(LEXA,")","")
"RTN","LEXABC",96,0)
 Q:'$L(LEXD) LEXA
"RTN","LEXABC",97,0)
 S:LEXA'[LEXD LEXA=LEXD_"/"_LEXA
"RTN","LEXABC",98,0)
 Q LEXA
"RTN","LEXABC",99,0)
CLR ; Clear
"RTN","LEXABC",100,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXL",$J),LEX S LEX=0 Q
"RTN","LEXABC",101,0)
IN(LEX) ; Flag in/not in file 757.02
"RTN","LEXABC",102,0)
 Q:$O(^LEX(757.02,"AVA",(($$SCH($E(LEX,1,61)))_" ")))[LEX 1 Q 0
"RTN","LEXABC",103,0)
SCH(LEX) ; Search
"RTN","LEXABC",104,0)
 S LEX=$E(LEX,1,($L(LEX)-1))_$C($A($E(LEX,$L(LEX)))-1)_"~" Q LEX
"RTN","LEXABC",105,0)
STATIEN(LEXCIEN)        ; Determine status of code-expression pairing based
"RTN","LEXABC",106,0)
 ;                 on code IEN
"RTN","LEXABC",107,0)
 N STATDAT,STATIEN
"RTN","LEXABC",108,0)
 S STATDAT=$O(^LEX(757.02,LEXCIEN,4,"B",$S($G(LEXVDT)'="":LEXVDT+1,1:"")),-1)
"RTN","LEXABC",109,0)
 Q:STATDAT="" 0
"RTN","LEXABC",110,0)
 S STATIEN=$O(^LEX(757.02,LEXCIEN,4,"B",STATDAT,""),-1)
"RTN","LEXABC",111,0)
 Q +$P(^LEX(757.02,LEXCIEN,4,STATIEN,0),"^",2)
"RTN","LEXABC",112,0)
NONPLUS(STRING) ; Remove trialing plus from a string
"RTN","LEXABC",113,0)
 S STRING=$G(STRING)
"RTN","LEXABC",114,0)
 I $E($RE(STRING))="+" Q $RE($E($RE(STRING),2,$L(STRING)))
"RTN","LEXABC",115,0)
 Q STRING
"RTN","LEXALK")
0^13^B22765108
"RTN","LEXALK",1,0)
LEXALK ; ISL/KER Look-up by Words ; 05/14/2003
"RTN","LEXALK",2,0)
 ;;2.0;LEXICON UTILITY;**2,3,6,25**;Sep 23, 1996
"RTN","LEXALK",3,0)
 ;
"RTN","LEXALK",4,0)
 ; External References
"RTN","LEXALK",5,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","LEXALK",6,0)
 ;   DBIA  1571  ^LEX(
"RTN","LEXALK",7,0)
 ;                    
"RTN","LEXALK",8,0)
 ; Special Lookup variables
"RTN","LEXALK",9,0)
 ;                    
"RTN","LEXALK",10,0)
 ;   LEXSUB      Vocabulary
"RTN","LEXALK",11,0)
 ;   LEXSHCT     Shortcuts
"RTN","LEXALK",12,0)
 ;   LEXDICS     Screen - DIC("S") Format
"RTN","LEXALK",13,0)
 ;   LEXSHOW     Displayable codes
"RTN","LEXALK",14,0)
 ;   LEXLKFL     File Number
"RTN","LEXALK",15,0)
 ;   LEXLKGL     Global Root
"RTN","LEXALK",16,0)
 ;   LEXLKMD     Use Modifiers
"RTN","LEXALK",17,0)
 ;   LEXLKIX     Index to use during lookup
"RTN","LEXALK",18,0)
 ;   LEXLKSH     User Input (Search String)
"RTN","LEXALK",19,0)
 ;   LEXTKN(     Tolkens in order of frequency of use
"RTN","LEXALK",20,0)
 ;   LEXTKNS(    Tolkens in order of entry
"RTN","LEXALK",21,0)
 ;                    
"RTN","LEXALK",22,0)
EN ; Look-up user input
"RTN","LEXALK",23,0)
 N LEXSUB,LEXSHCT,LEXDICS,LEXSHOW,LEXLKFL,LEXLKGL,LEXLKMD
"RTN","LEXALK",24,0)
 N LEXLKIX,LEXLKSH,LEXVDT S LEXVDT=$$DT^XLFDT
"RTN","LEXALK",25,0)
 S LEXLKSH=$G(^TMP("LEXSCH",$J,"SCH",0)) I $L(LEXLKSH)<2 D  Q
"RTN","LEXALK",26,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1,LEX("ERR",LEX("ERR",0))="User input missing or invalid"
"RTN","LEXALK",27,0)
 S LEXSUB=$G(^TMP("LEXSCH",$J,"VOC",0)) S:LEXSUB="" LEXSUB="WRD"
"RTN","LEXALK",28,0)
 S LEXLKMD=+($G(^TMP("LEXSCH",$J,"MOD",0)))
"RTN","LEXALK",29,0)
 S LEXLKIX=$G(^TMP("LEXSCH",$J,"IDX",0)) S:LEXLKIX="" LEXLKIX="AWRD"
"RTN","LEXALK",30,0)
 S LEXLKFL=$G(^TMP("LEXSCH",$J,"FLN",0)) I LEXLKFL'["757." D  Q
"RTN","LEXALK",31,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1,LEX("ERR",LEX("ERR",0))="File number missing or invalid"
"RTN","LEXALK",32,0)
 S LEXLKGL=$G(^TMP("LEXSCH",$J,"GBL",0)) I LEXLKGL'["LEX(757." D  Q
"RTN","LEXALK",33,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1,LEX("ERR",LEX("ERR",0))="Global location missing or invalid"
"RTN","LEXALK",34,0)
 S LEXSHOW=$G(^TMP("LEXSCH",$J,"DIS",0))
"RTN","LEXALK",35,0)
 D TOLKEN^LEXAM(LEXLKSH)
"RTN","LEXALK",36,0)
 N LEXOK,LEXDES,LEXDSP,LEXT,LEXO,LEXI,LEXE,LEXM,LEXME
"RTN","LEXALK",37,0)
 N LEXSS Q:$G(LEXLKFL)'["757."
"RTN","LEXALK",38,0)
 S LEXSS="" I $D(LEXTKNS(0)) D
"RTN","LEXALK",39,0)
 . N LEXI F LEXI=1:1:LEXTKNS(0) S LEXSS=LEXSS_" "_LEXTKNS(LEXI)
"RTN","LEXALK",40,0)
 . S LEXSS=$E(LEXSS,2,$L(LEXSS))
"RTN","LEXALK",41,0)
 S ^TMP("LEXSCH",$J,"SCH",0)=$G(LEXSS)
"RTN","LEXALK",42,0)
 S LEXT=$G(LEXTKN(1)),LEXO=$$SCH(LEXT)
"RTN","LEXALK",43,0)
 I $G(LEXSHCT)="",$G(LEXTKN(0))=1,$D(^LEX(LEXLKFL,LEXLKIX,LEXT)) D  G END
"RTN","LEXALK",44,0)
 . D EXACT
"RTN","LEXALK",45,0)
 . I +($O(^LEX(757.01,"ASL",LEXT,0)))>500 Q
"RTN","LEXALK",46,0)
 . D TOLKEN
"RTN","LEXALK",47,0)
 D TOLKEN
"RTN","LEXALK",48,0)
END ; End look-up by word
"RTN","LEXALK",49,0)
 I $D(^TMP("LEXFND",$J)) D BEG^LEXAL
"RTN","LEXALK",50,0)
 I '$D(^TMP("LEXFND",$J)) D
"RTN","LEXALK",51,0)
 . K LEX,^TMP("LEXFND",$J),^TMP("LEXHIT",$J) S LEX=0
"RTN","LEXALK",52,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXALK",53,0)
 Q
"RTN","LEXALK",54,0)
EXACT ; Main loop throuth TOLKENS that equal LEXT
"RTN","LEXALK",55,0)
 F  S LEXO=$O(^LEX(LEXLKFL,LEXLKIX,LEXO)) Q:LEXO'=LEXT  D IEN
"RTN","LEXALK",56,0)
 Q
"RTN","LEXALK",57,0)
TOLKEN ; Main loop though TOLKENS containing LEXT
"RTN","LEXALK",58,0)
 F  S LEXO=$O(^LEX(LEXLKFL,LEXLKIX,LEXO)) Q:LEXO'[LEXT!(LEXO="")  D IEN
"RTN","LEXALK",59,0)
 Q
"RTN","LEXALK",60,0)
IEN ; Loop throuth Internal Entry Numbers
"RTN","LEXALK",61,0)
 S LEXI=0
"RTN","LEXALK",62,0)
 F  S LEXI=$O(^LEX(LEXLKFL,LEXLKIX,LEXO,LEXI)) Q:+LEXI=0  D CHK
"RTN","LEXALK",63,0)
 Q
"RTN","LEXALK",64,0)
CHK ; Check each tolken
"RTN","LEXALK",65,0)
 N LEXOK,LEXO S LEXE=LEXI,LEXOK=1
"RTN","LEXALK",66,0)
 S:LEXLKGL'["757.01" LEXE=+($G(^LEX(LEXLKFL,LEXI,0))) Q:LEXE=0
"RTN","LEXALK",67,0)
 ; Filter
"RTN","LEXALK",68,0)
 S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),LEXE) Q:LEXFILR=0
"RTN","LEXALK",69,0)
 ; Deactivated
"RTN","LEXALK",70,0)
 Q:+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1
"RTN","LEXALK",71,0)
 ; Expression has Modifiers
"RTN","LEXALK",72,0)
 N LEXEMOD S LEXEMOD=+($P($G(^LEX(757.01,LEXE,1)),"^",6))
"RTN","LEXALK",73,0)
 S LEXM=+($G(^LEX(757.01,LEXE,1)))
"RTN","LEXALK",74,0)
 S LEXME=+($G(^LEX(757,LEXM,0)))
"RTN","LEXALK",75,0)
 ; Check not exact match
"RTN","LEXALK",76,0)
 I $L($G(^TMP("LEXSCH",$J,"EXM",0))),+(^TMP("LEXSCH",$J,"EXM",0))=LEXE Q
"RTN","LEXALK",77,0)
 I $L($G(^TMP("LEXSCH",$J,"EXC",0))),+(^TMP("LEXSCH",$J,"EXC",0))=LEXE Q
"RTN","LEXALK",78,0)
 ; Check tolkens
"RTN","LEXALK",79,0)
 S LEXOK=1 D CHKTKNS(LEXE)
"RTN","LEXALK",80,0)
 ; If the expression failed the search, and the expression has 
"RTN","LEXALK",81,0)
 ; modifiers then check the modifiers
"RTN","LEXALK",82,0)
 D:+LEXOK=0&(+($G(LEXEMOD))>0)&(+($G(LEXTKN(0)))>1) CHKMOD^LEXAMD2
"RTN","LEXALK",83,0)
 Q:'LEXOK
"RTN","LEXALK",84,0)
 ; Description (*)
"RTN","LEXALK",85,0)
 S LEXDES=$$DES^LEXASC(LEXE)
"RTN","LEXALK",86,0)
 ; Display of codes
"RTN","LEXALK",87,0)
 S LEXDSP=$$SO^LEXASO(LEXE,$G(LEXSHOW),1,$G(LEXVDT))
"RTN","LEXALK",88,0)
 D ADDL^LEXAL(LEXE,LEXDES,LEXDSP)
"RTN","LEXALK",89,0)
 Q
"RTN","LEXALK",90,0)
CHKTKNS(LEXE) ; Check tolkens
"RTN","LEXALK",91,0)
 N LEXM S LEXM=+($G(^LEX(757.01,LEXE,1))) Q:LEXM=0
"RTN","LEXALK",92,0)
 N LEXI,LEXOE,LEXC S LEXOE=LEXE,LEXI=1
"RTN","LEXALK",93,0)
 F  S LEXI=$O(LEXTKN(LEXI)) Q:+LEXI=0!('LEXOK)  D  Q:'LEXOK
"RTN","LEXALK",94,0)
 . N LEXT,LEXE S LEXT=LEXTKN(LEXI),LEXE=0,LEXOK=0
"RTN","LEXALK",95,0)
 . S LEXC=$$UP(^LEX(757.01,LEXOE,0))
"RTN","LEXALK",96,0)
 . I LEXC[(" "_LEXT) S LEXOK=1 Q
"RTN","LEXALK",97,0)
 . I LEXC[("-"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",98,0)
 . I LEXC[("("_LEXT) S LEXOK=1 Q
"RTN","LEXALK",99,0)
 . I LEXC[("/"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",100,0)
 . I $E(LEXC,1,$L(LEXT))=LEXT S LEXOK=1 Q
"RTN","LEXALK",101,0)
 . I $L(LEXT),$D(^LEX(757.01,LEXOE,5,"B",LEXT)) S LEXOK=1 Q
"RTN","LEXALK",102,0)
 . I $L(LEXT),$E($O(^LEX(757.01,LEXOE,5,"B",($E(LEXT,1,($L(LEXT)-1))_$C($A($E(LEXT,$L(LEXT)))-1)_"~"))),1,$L(LEXT))=LEXT S LEXOK=1 Q
"RTN","LEXALK",103,0)
 . F  S LEXE=$O(^LEX(757.01,"AMC",LEXM,LEXE)) Q:+LEXE=0!(LEXOK)  D  Q:LEXOK
"RTN","LEXALK",104,0)
 . . Q:+($P($G(^LEX(757.01,LEXE,1)),"^",2))>3
"RTN","LEXALK",105,0)
 . . S LEXC=$$UP(^LEX(757.01,LEXE,0))
"RTN","LEXALK",106,0)
 . . I LEXC[(" "_LEXT) S LEXOK=1 Q
"RTN","LEXALK",107,0)
 . . I LEXC[("-"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",108,0)
 . . I LEXC[("("_LEXT) S LEXOK=1 Q
"RTN","LEXALK",109,0)
 . . I LEXC[("/"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",110,0)
 . . I $E(LEXC,1,$L(LEXT))=LEXT S LEXOK=1 Q
"RTN","LEXALK",111,0)
 Q
"RTN","LEXALK",112,0)
DES(LEXX) ; Get description flag
"RTN","LEXALK",113,0)
 N LEXDES,LEXE,LEXM S LEXDES="",LEXE=+LEXX
"RTN","LEXALK",114,0)
 S LEXM=$P($G(^LEX(757.01,+($G(LEXX)),1)),"^",1)
"RTN","LEXALK",115,0)
 S LEXM=+($G(^LEX(757,+($G(LEXM)),0)))
"RTN","LEXALK",116,0)
 S:$D(^LEX(757.01,LEXM,3)) LEXDES="*"
"RTN","LEXALK",117,0)
 S LEXX=$G(LEXDES) Q LEXX
"RTN","LEXALK",118,0)
SCH(LEXX) ; Search for LEXX a $Orderable variable
"RTN","LEXALK",119,0)
 S LEXX=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~" Q LEXX
"RTN","LEXALK",120,0)
 Q
"RTN","LEXALK",121,0)
UP(X) ; Uppercase
"RTN","LEXALK",122,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXAMD")
0^14^B24549577
"RTN","LEXAMD",1,0)
LEXAMD ; ISL/KER Look-up Modifiers ; 05/14/2003
"RTN","LEXAMD",2,0)
 ;;2.0;LEXICON UTILITY;**6,25**;Sep 23, 1996
"RTN","LEXAMD",3,0)
 ;
"RTN","LEXAMD",4,0)
 ; LEXX     IEN file 757.01 of an expression w/Modifiers
"RTN","LEXAMD",5,0)
 ; LEXVDT   Date to screen against
"RTN","LEXAMD",6,0)
 ;
"RTN","LEXAMD",7,0)
EN(LEXX,LEXVDT) ; Look-up Modifiers
"RTN","LEXAMD",8,0)
 S LEXX=+($G(LEXX)) Q:+($G(^TMP("LEXSCH",$J,"MOD",0)))=0
"RTN","LEXAMD",9,0)
 Q:+($G(LEXX))'>2  Q:'$D(^LEX(757.01,+($G(LEXX)),0))
"RTN","LEXAMD",10,0)
 Q:+($P($G(^LEX(757.01,+LEXX,1)),"^",6))=0
"RTN","LEXAMD",11,0)
 Q:'$D(^LEX(757.01,"APAR",LEXX))  N LEXXN D ARY
"RTN","LEXAMD",12,0)
 Q
"RTN","LEXAMD",13,0)
ARY ; Build Array of Modified Terms
"RTN","LEXAMD",14,0)
 N LEXLVL,LEXO,LEXI,LEXN,LEXA,LEXT,LEXDSP,LEXDES,LEXL
"RTN","LEXAMD",15,0)
 S LEXI=0,LEXXN=$G(^LEX(757.01,LEXX,0)),LEXA(0)=1
"RTN","LEXAMD",16,0)
 S LEXA(1,LEXX)=LEXXN,LEXLVL=+($G(LEX("LVL"))) S:LEXLVL=0 LEXLVL=1
"RTN","LEXAMD",17,0)
 F  S LEXI=$O(^LEX(757.01,"APAR",LEXX,LEXI)) Q:+LEXI=0  D
"RTN","LEXAMD",18,0)
 . S LEXN=$G(^LEX(757.01,LEXI,1)) Q:LEXN=""  S LEXT=+($P(LEXN,"^",2)) Q:LEXT'=7
"RTN","LEXAMD",19,0)
 . S LEXO=+($P(LEXN,"^",10)) S:LEXO'=0 LEXO=LEXO+1 S:LEXO=0 LEXO=99999 I $D(LEXA(LEXO)) F  Q:'$D(LEXA(LEXO))  S LEXO=LEXO+1
"RTN","LEXAMD",20,0)
 . S LEXA(LEXO,LEXI)=$G(^LEX(757.01,LEXI,0)),LEXA(0)=+($G(LEXA(0)))+1
"RTN","LEXAMD",21,0)
 ; Quit if no Modified Terms Found
"RTN","LEXAMD",22,0)
 Q:+($G(LEXA(0)))'>1  S (LEXO,LEXI)=0 D FND
"RTN","LEXAMD",23,0)
 Q
"RTN","LEXAMD",24,0)
FND ; Build List of Modifiers Found (LEXFND)
"RTN","LEXAMD",25,0)
 K ^TMP("LEXSCH",$J,"EXM"),^TMP("LEXSCH",$J,"NAR"),^TMP("LEXSCH",$J,"SCH"),^TMP("LEXSCH",$J,"TOL"),^TMP("LEXSCH",$J,"NUM"),^TMP("LEXFND",$J)
"RTN","LEXAMD",26,0)
 F  S LEXO=$O(LEXA(LEXO)) Q:+LEXO=0  D
"RTN","LEXAMD",27,0)
 . S LEXI=0 F  S LEXI=$O(LEXA(LEXO,LEXI)) Q:+LEXI=0  D
"RTN","LEXAMD",28,0)
 . . I LEXO=1 S LEXDES=$$DES(LEXI),LEXDSP=$$SO^LEXASO(LEXI,$G(LEXSHOW),1,$G(LEXVDT))
"RTN","LEXAMD",29,0)
 . . I LEXO>1 S (LEXDES,LEXDSP)=""
"RTN","LEXAMD",30,0)
 . . S LEXT=$G(LEXA(LEXO,LEXI)) Q:'$L(LEXT)
"RTN","LEXAMD",31,0)
 . . S:$L(LEXDES) LEXT=LEXT_" "_LEXDES
"RTN","LEXAMD",32,0)
 . . S:$L(LEXDSP) LEXT=LEXT_" "_LEXDSP
"RTN","LEXAMD",33,0)
 . . S LEXN=-999999999+($G(LEXO))
"RTN","LEXAMD",34,0)
 . . S ^TMP("LEXFND",$J,LEXN,LEXI)=LEXT
"RTN","LEXAMD",35,0)
 . . S ^TMP("LEXSCH",$J,"NUM",0)=$G(^TMP("LEXSCH",$J,"NUM",0))+1
"RTN","LEXAMD",36,0)
HIT ; Build HIT list
"RTN","LEXAMD",37,0)
 I $D(^TMP("LEXFND",$J)) D  Q
"RTN","LEXAMD",38,0)
 . K LEX,^TMP("LEXHIT",$J) S LEX=+($G(LEXA(0))),LEX("LVL")=+($G(LEXLVL))+1 S:+LEX>0 (^TMP("LEXSCH",$J,"MAT",0),LEX("MAT"))=+LEX_" matches found for """_LEXXN_"""" D SCH,BEG,NAR
"RTN","LEXAMD",39,0)
 I '$D(^TMP("LEXFND",$J)) D NOM
"RTN","LEXAMD",40,0)
 Q
"RTN","LEXAMD",41,0)
SCH ; Search Conditions/Results
"RTN","LEXAMD",42,0)
 K ^TMP("LEXSCH",$J,"EXM") S ^TMP("LEXSCH",$J,"NAR",0)=$$UP(LEXXN),^TMP("LEXSCH",$J,"SCH",0)=$$UP(LEXXN),^TMP("LEXSCH",$J,"TOL",0)=1,^TMP("LEXSCH",$J,"NUM",0)=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAMD",43,0)
 Q
"RTN","LEXAMD",44,0)
NOM ; No Modifiers
"RTN","LEXAMD",45,0)
 K LEX,^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J,"EXM"),^TMP("LEXSCH",$J,"NAR"),^TMP("LEXSCH",$J,"SCH"),^TMP("LEXSCH",$J,"TOL")
"RTN","LEXAMD",46,0)
 S ^TMP("LEXSCH",$J,"NUM",0)=0 S:$L($G(LEXXN)) ^TMP("LEXSCH",$J,"NAR",0)=$$UP(LEXXN) S:$L($G(LEXXN)) ^TMP("LEXSCH",$J,"SCH",0)=$$UP(LEXXN)
"RTN","LEXAMD",47,0)
 Q
"RTN","LEXAMD",48,0)
NAR ; Narrative
"RTN","LEXAMD",49,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXAMD",50,0)
 Q
"RTN","LEXAMD",51,0)
DES(LEXX) ; Get description flag
"RTN","LEXAMD",52,0)
 N LEXDES,LEXE,LEXM S LEXDES="",LEXE=+LEXX
"RTN","LEXAMD",53,0)
 S LEXM=$P($G(^LEX(757.01,+($G(LEXX)),1)),"^",1),LEXM=+($G(^LEX(757,+($G(LEXM)),0))) S:$D(^LEX(757.01,LEXM,3)) LEXDES="*" S LEXX=$G(LEXDES) Q LEXX
"RTN","LEXAMD",54,0)
BEG ; Begin List
"RTN","LEXAMD",55,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXAMD",56,0)
 Q:'$D(^TMP("LEXFND",$J))
"RTN","LEXAMD",57,0)
 N LEXRL,LEXJ,LEXI,LEXA,LEXSTR,LEXDP,LEXLL
"RTN","LEXAMD",58,0)
 S LEXRL=0,LEXLL=+($G(^TMP("LEXSCH",$J,"LEN",0)))
"RTN","LEXAMD",59,0)
 S:+LEXLL=0 (LEXRL,LEXLL)=5 S LEXJ=0,LEXI=-9999999999
"RTN","LEXAMD",60,0)
 ; Hit List      ^TMP("LEXHIT",$J,#)
"RTN","LEXAMD",61,0)
 F  S LEXI=$O(^TMP("LEXFND",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXAMD",62,0)
 . S LEXA=0
"RTN","LEXAMD",63,0)
 . F  S LEXA=$O(^TMP("LEXFND",$J,LEXI,LEXA)) Q:+LEXA=0!(LEXJ=LEXLL)  D  Q:+LEXA=0!(LEXJ=LEXLL)
"RTN","LEXAMD",64,0)
 . . S LEXJ=LEXJ+1,LEXDP=^TMP("LEXFND",$J,LEXI,LEXA)
"RTN","LEXAMD",65,0)
 . . S ^TMP("LEXHIT",$J,0)=LEXJ
"RTN","LEXAMD",66,0)
 . . S ^TMP("LEXHIT",$J,LEXJ)=LEXA_"^"_LEXDP
"RTN","LEXAMD",67,0)
 . . S:+($G(^TMP("LEXSCH",$J,"EXM",0)))=+LEXA ^TMP("LEXSCH",$J,"EXM",2)=LEXJ_"^"_$G(^LEX(757.01,+LEXA,0))
"RTN","LEXAMD",68,0)
 . . S:+($G(^TMP("LEXSCH",$J,"EXC",0)))=+LEXA ^TMP("LEXSCH",$J,"EXC",2)=LEXJ_"^"_$G(^LEX(757.01,+LEXA,0))
"RTN","LEXAMD",69,0)
 . . K ^TMP("LEXFND",$J,LEXI,LEXA)
"RTN","LEXAMD",70,0)
 ; List          LEX("LIST")
"RTN","LEXAMD",71,0)
 I $D(^TMP("LEXSCH",$J,"NUM",0)) S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAMD",72,0)
 I LEXLL>0 D
"RTN","LEXAMD",73,0)
 . N LEXI,LEXJ S (LEXJ,LEXI)=0
"RTN","LEXAMD",74,0)
 . F  S LEXJ=$O(^TMP("LEXHIT",$J,LEXJ)) Q:+LEXJ=0!(+LEXI=LEXLL)  D  Q:+LEXI=LEXLL
"RTN","LEXAMD",75,0)
 . . S LEXI=LEXI+1,LEX("LIST",LEXI)=^TMP("LEXHIT",$J,LEXJ)
"RTN","LEXAMD",76,0)
 . . S LEX("LIST",0)=LEXI_"^"_LEXI
"RTN","LEXAMD",77,0)
 . . S (LEX("MAX"),^TMP("LEXSCH",$J,"LST",0))=LEXI
"RTN","LEXAMD",78,0)
 S ^TMP("LEXSCH",$J,"TOL",0)=0 S:$D(LEX("LIST",1)) ^TMP("LEXSCH",$J,"TOL",0)=1
"RTN","LEXAMD",79,0)
 S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAMD",80,0)
 S:^TMP("LEXSCH",$J,"TOL",0)=1&(+($G(LEX))>0) LEX("MAT")=+LEX_" match"_$S(+LEX>1:"es",1:"")_" found"
"RTN","LEXAMD",81,0)
 S:+($G(LEX("MAX")))>0 LEX("MIN")=1
"RTN","LEXAMD",82,0)
 I $L($G(^TMP("LEXSCH",$J,"EXM",2))) S LEX("EXM")=^TMP("LEXSCH",$J,"EXM",2)
"RTN","LEXAMD",83,0)
 I $L($G(^TMP("LEXSCH",$J,"EXC",2))) S LEX("EXC")=^TMP("LEXSCH",$J,"EXC",2)
"RTN","LEXAMD",84,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXAMD",85,0)
 Q:'$D(^TMP("LEXFND",$J))  K:+($G(LEXRL))>0 LEXLL
"RTN","LEXAMD",86,0)
 Q
"RTN","LEXAMD",87,0)
UP(X) Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXAMD",88,0)
CLR K X,Y,LEXLL,LEXSHOW,LEX,^TMP("LEXSCH"),^TMP("LEXHIT"),^TMP("LEXFND") Q
"RTN","LEXAR")
0^12^B18400371
"RTN","LEXAR",1,0)
LEXAR ;ISA/FJF/KER-Look-up (Interpret User Response) ; 05/14/2003
"RTN","LEXAR",2,0)
 ;;2.0;LEXICON UTILITY;**3,19,25**;Sep 23, 1996
"RTN","LEXAR",3,0)
 ;
"RTN","LEXAR",4,0)
 ; User Responses
"RTN","LEXAR",5,0)
 ;
"RTN","LEXAR",6,0)
 ; Numeric  -----------------------------------------------
"RTN","LEXAR",7,0)
 ;
"RTN","LEXAR",8,0)
 ; #             Select Entry
"RTN","LEXAR",9,0)
 ;
"RTN","LEXAR",10,0)
 ; Numeric^Comment ----------------------------------------
"RTN","LEXAR",11,0)
 ;
"RTN","LEXAR",12,0)
 ; IEN^COMMENT   Application comment about term
"RTN","LEXAR",13,0)
 ;
"RTN","LEXAR",14,0)
 ; Up-Arrow -----------------------------------------------
"RTN","LEXAR",15,0)
 ;
"RTN","LEXAR",16,0)
 ; ^#            Jump to # on list
"RTN","LEXAR",17,0)
 ; ^             End dialog with the user
"RTN","LEXAR",18,0)
 ; ^^            End dialog with the application
"RTN","LEXAR",19,0)
 ;
"RTN","LEXAR",20,0)
 ; Question -----------------------------------------------
"RTN","LEXAR",21,0)
 ;
"RTN","LEXAR",22,0)
 ; ?             Standard help in LEX("HLP")
"RTN","LEXAR",23,0)
 ; ??            Extended help in LEX("HLP")
"RTN","LEXAR",24,0)
 ; ?#            Definition for # in LEX("HLP")
"RTN","LEXAR",25,0)
 ;
"RTN","LEXAR",26,0)
 ; Null ---------------------------------------------------
"RTN","LEXAR",27,0)
 ;
"RTN","LEXAR",28,0)
 ;               Advance the selection list
"RTN","LEXAR",29,0)
 ;
"RTN","LEXAR",30,0)
 ; String -------------------------------------------------
"RTN","LEXAR",31,0)
 ;
"RTN","LEXAR",32,0)
 ; Narrative     Return and store Unresolved Narrative
"RTN","LEXAR",33,0)
 ;
"RTN","LEXAR",34,0)
 ; --------------------------------------------------------
"RTN","LEXAR",35,0)
EN(LEXUR,LEXVDT) ; Interpret user response
"RTN","LEXAR",36,0)
 I '$D(LEX) D APN Q
"RTN","LEXAR",37,0)
 K LEX("HLP")
"RTN","LEXAR",38,0)
 N LEXLL,LEXMAX
"RTN","LEXAR",39,0)
 I $D(LEX("LIST",0)),+$G(^TMP("LEXSCH",$J,"NUM",0))>0 D
"RTN","LEXAR",40,0)
 .S LEX=+$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAR",41,0)
 I LEXUR="END",+LEX>0 S LEXUR="^"_LEX
"RTN","LEXAR",42,0)
 S LEXLL=+$G(^TMP("LEXSCH",$J,"LEN",0))
"RTN","LEXAR",43,0)
 S:LEXLL=0 LEXLL=5
"RTN","LEXAR",44,0)
 S LEXMAX=+$G(^TMP("LEXSCH",$J,"LST",0))
"RTN","LEXAR",45,0)
 S LEXUR=$G(LEXUR)
"RTN","LEXAR",46,0)
 S (LEX("RES"),^TMP("LEXSCH",$J,"RES",0))=LEXUR
"RTN","LEXAR",47,0)
 S ^TMP("LEXSCH",$J,"RES",1)="User Response"
"RTN","LEXAR",48,0)
 ; Timed out/Quit
"RTN","LEXAR",49,0)
 I LEXUR="DTOUT"!(LEXUR="QUIT") D EDA Q
"RTN","LEXAR",50,0)
 ; Yes/No response list has one entry
"RTN","LEXAR",51,0)
 I $G(LEX)=1,+LEXUR=0,LEXUR'["^" D
"RTN","LEXAR",52,0)
 .I $E(LEXUR,1)="Y"!($E(LEXUR,1)="y") S LEXUR=1 Q
"RTN","LEXAR",53,0)
 .I LEXUR["?" D HLP^LEXAR3 Q
"RTN","LEXAR",54,0)
 .S LEXUR=""
"RTN","LEXAR",55,0)
 ; Null (Page Down)
"RTN","LEXAR",56,0)
 I LEXUR="" D NULL^LEXAR2 D END Q
"RTN","LEXAR",57,0)
 ; Minus (Page Up)
"RTN","LEXAR",58,0)
 I $E(LEXUR,1)="-" D LIST^LEXAL2("PGUP") D END Q
"RTN","LEXAR",59,0)
 ; Help
"RTN","LEXAR",60,0)
 I LEXUR["?" D HLP^LEXAR3 D END Q
"RTN","LEXAR",61,0)
 ; Up Arrow
"RTN","LEXAR",62,0)
 I LEXUR["^",$D(^TMP("LEXSCH",$J)) D UPA^LEXAR2(LEXUR) D END Q
"RTN","LEXAR",63,0)
 ; Select
"RTN","LEXAR",64,0)
 I +LEXUR>0,+LEXUR'>LEXMAX D SEL^LEXAR4(+LEXUR,$G(LEXVDT)) D END Q
"RTN","LEXAR",65,0)
 ; User Unresolved Narrative
"RTN","LEXAR",66,0)
 I LEXUR=$G(^TMP("LEXSCH",$J,"NAR",0)),+$G(^TMP("LEXSCH",$J,"UNR",0))=1 D  D END Q
"RTN","LEXAR",67,0)
 .D SAVE^LEXAR6
"RTN","LEXAR",68,0)
APN ; Application Unresolved Narrative
"RTN","LEXAR",69,0)
 I LEXUR["^",'$D(^TMP("LEXSCH",$J)),+LEXUR>0,$D(^LEX(757.01,+LEXUR,0)),$L($P(LEXUR,"^",2)) D  Q
"RTN","LEXAR",70,0)
 .K LEX
"RTN","LEXAR",71,0)
 .D COM^LEXAR6(LEXUR)
"RTN","LEXAR",72,0)
 D END
"RTN","LEXAR",73,0)
 Q
"RTN","LEXAR",74,0)
END ; End of Interpretation of the Users Response
"RTN","LEXAR",75,0)
 I $D(^TMP("LEXSCH",$J)) D
"RTN","LEXAR",76,0)
 .S (LEX("RES"),^TMP("LEXSCH",$J,"RES",0))=LEXUR
"RTN","LEXAR",77,0)
 .S ^TMP("LEXSCH",$J,"RES",1)="User Response"
"RTN","LEXAR",78,0)
 I $D(LEX("LIST",0)),+$G(^TMP("LEXSCH",$J,"NUM",0))>0 D
"RTN","LEXAR",79,0)
 .S LEX=+$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAR",80,0)
 Q
"RTN","LEXAR",81,0)
SEL ; Selection made
"RTN","LEXAR",82,0)
 K LEX("RES"),LEX("ERR"),LEX("LIST"),LEX("MIN"),LEX("MAX"),LEX("MAT"),LEX("HLP")
"RTN","LEXAR",83,0)
 D NAR,EMF,KLST,KSCH
"RTN","LEXAR",84,0)
 S:$D(LEX("SEL")) LEX=0
"RTN","LEXAR",85,0)
 Q
"RTN","LEXAR",86,0)
EDU ; End Dialog with the User
"RTN","LEXAR",87,0)
 D NAR,EMF,KLST,KARL,KSCH
"RTN","LEXAR",88,0)
 S LEX=0
"RTN","LEXAR",89,0)
 Q
"RTN","LEXAR",90,0)
EDA ; End Dialog with the Application
"RTN","LEXAR",91,0)
 K LEX
"RTN","LEXAR",92,0)
 D KLST,KSCH
"RTN","LEXAR",93,0)
 Q
"RTN","LEXAR",94,0)
LST ; List exist
"RTN","LEXAR",95,0)
 D NAR,MAX,MIN,MAT,EML
"RTN","LEXAR",96,0)
 Q
"RTN","LEXAR",97,0)
 ;
"RTN","LEXAR",98,0)
KLST ; Kill Global List 
"RTN","LEXAR",99,0)
 ;      ^TMP("LEXFND",$J)
"RTN","LEXAR",100,0)
 ;      ^TMP("LEXHIT",$J)
"RTN","LEXAR",101,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEXAR",102,0)
 Q
"RTN","LEXAR",103,0)
KSCH ; Kill Search Variables
"RTN","LEXAR",104,0)
 ;      ^TMP("LEXSCH",$J)
"RTN","LEXAR",105,0)
 I +$G(LEX)'=0 K ^TMP("LEXSCH",$J)  ; PCH 3 Do not kill if not found condition exist
"RTN","LEXAR",106,0)
 Q
"RTN","LEXAR",107,0)
KARL ; Kill Array List and supporting variables
"RTN","LEXAR",108,0)
 ;       LEX("LIST"),LEX("MAT"),LEX("MIN"),LEX("MAX")
"RTN","LEXAR",109,0)
 K LEX("LIST"),LEX("MAT"),LEX("MIN"),LEX("MAX")
"RTN","LEXAR",110,0)
 K LEX("EXC"),LEX("EXM")
"RTN","LEXAR",111,0)
 Q
"RTN","LEXAR",112,0)
LEX ; Set LEX to the number of entries on the list
"RTN","LEXAR",113,0)
 S:+$G(^TMP("LEXSCH",$J,"NUM",0))>0 LEX=+$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAR",114,0)
 Q
"RTN","LEXAR",115,0)
NAR ; Set LEX("NAR") to the user narrative
"RTN","LEXAR",116,0)
 K LEX("NAR")
"RTN","LEXAR",117,0)
 S:$L($G(^TMP("LEXSCH",$J,"NAR",0))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXAR",118,0)
 Q
"RTN","LEXAR",119,0)
MAX ; Set LEX("MAX") to the last entry reviewed by the user
"RTN","LEXAR",120,0)
 K LEX("MAX")
"RTN","LEXAR",121,0)
 S:+$G(^TMP("LEXSCH",$J,"LST",0))>0 LEX("MAX")=+$G(^TMP("LEXSCH",$J,"LST",0))
"RTN","LEXAR",122,0)
 Q
"RTN","LEXAR",123,0)
MIN ; Set LEX("MIN") to the first entry reviewed by the user
"RTN","LEXAR",124,0)
 K LEX("MIN")
"RTN","LEXAR",125,0)
 S:+$G(LEX("MAX"))>0 LEX("MIN")=1
"RTN","LEXAR",126,0)
 Q
"RTN","LEXAR",127,0)
EML ; Set LEX("EXM") post-selection IEN^Expression text
"RTN","LEXAR",128,0)
 K LEX("EXM")
"RTN","LEXAR",129,0)
 S:$L($G(^TMP("LEXSCH",$J,"EXM",2))) LEX("EXM")=$G(^TMP("LEXSCH",$J,"EXM",2))
"RTN","LEXAR",130,0)
 Q
"RTN","LEXAR",131,0)
EMF ; Set LEX("EXM") pre-selection LIST#^Expression text
"RTN","LEXAR",132,0)
 K LEX("EXM")
"RTN","LEXAR",133,0)
 I $L($G(^TMP("LEXSCH",$J,"EXM",0))),$L($G(^TMP("LEXSCH",$J,"EXM",1))) D
"RTN","LEXAR",134,0)
 .S LEX("EXM")=$G(^TMP("LEXSCH",$J,"EXM",0))_"^"_$G(^TMP("LEXSCH",$J,"EXM",1))
"RTN","LEXAR",135,0)
 Q
"RTN","LEXAR",136,0)
MAT ; Set "matches found" string and top of list flag
"RTN","LEXAR",137,0)
 ;       LEX("MAT")                 # Matches found
"RTN","LEXAR",138,0)
 ;       ^TMP("LEXSCH",$J,"TOL",0)  1 - Top of list
"RTN","LEXAR",139,0)
 ;                                   0 - Not top of list
"RTN","LEXAR",140,0)
 K LEX("MAT")
"RTN","LEXAR",141,0)
 I $D(LEX("SEL"))!('$D(^TMP("LEXSCH",$J)))!('$D(LEX("LIST"))) Q
"RTN","LEXAR",142,0)
 N LEXOL,LEXL
"RTN","LEXAR",143,0)
 S LEXOL=$G(^TMP("LEXSCH",$J,"TOL",0))
"RTN","LEXAR",144,0)
 S LEXL=$O(LEX("LIST",0))
"RTN","LEXAR",145,0)
 I LEXOL'=0,LEXL=1 S ^TMP("LEXSCH",$J,"TOL",0)=1
"RTN","LEXAR",146,0)
 I LEXOL'=0,LEXL'=1 S ^TMP("LEXSCH",$J,"TOL",0)=0
"RTN","LEXAR",147,0)
 I LEXOL=1,$L($G(^TMP("LEXSCH",$J,"MAT",0))) D
"RTN","LEXAR",148,0)
 .S LEX("MAT")=$G(^TMP("LEXSCH",$J,"MAT",0))
"RTN","LEXAR",149,0)
 Q
"RTN","LEXAR4")
0^11^B9380127
"RTN","LEXAR4",1,0)
LEXAR4 ; ISL/KER Look-up Response (Select Entry) ; 05/14/2003
"RTN","LEXAR4",2,0)
 ;;2.0;LEXICON UTILITY;**4,5,6,25**;Sep 23, 1996
"RTN","LEXAR4",3,0)
 ;
"RTN","LEXAR4",4,0)
 ; External References
"RTN","LEXAR4",5,0)
 ;   DBIA 10086  HOME^%ZIS
"RTN","LEXAR4",6,0)
 ;   DBIA 10063  ^%ZTLOAD
"RTN","LEXAR4",7,0)
 ;   DBIA 10018  ^DIE
"RTN","LEXAR4",8,0)
 ;                    
"RTN","LEXAR4",9,0)
SEL(LEXUR,LEXVDT) ; Select # on list
"RTN","LEXAR4",10,0)
 K LEX("SEL") N LEXLVL,LEXMAX,LEXLF S LEXLF=1,LEXMAX=+($G(^TMP("LEXSCH",$J,"LST",0)))
"RTN","LEXAR4",11,0)
 S LEX=+($G(LEX)),LEXUR=+($G(LEXUR))
"RTN","LEXAR4",12,0)
 I LEXMAX=0!(LEX=0) D EDA^LEXAR G SELQ
"RTN","LEXAR4",13,0)
 K LEX("ERR"),LEX("SEL") I LEXUR'>0!(LEXUR>LEXMAX) D  G SELQ
"RTN","LEXAR4",14,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAR4",15,0)
 . S LEX("ERR",LEX("ERR",0))="User response out of range"
"RTN","LEXAR4",16,0)
 I '$D(^TMP("LEXHIT",$J,LEXUR)) D  G SELQ
"RTN","LEXAR4",17,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAR4",18,0)
 . S LEX("ERR",LEX("ERR",0))="Selection is either out of range or invalid"
"RTN","LEXAR4",19,0)
 N LEXEXP S LEXEXP=+($P(^TMP("LEXHIT",$J,LEXUR),"^",1))
"RTN","LEXAR4",20,0)
 I '$D(^LEX(757.01,LEXEXP,0)) D  G SELQ
"RTN","LEXAR4",21,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAR4",22,0)
 . S LEX("ERR",LEX("ERR",0))="Selection not found in the Lexicon"
"RTN","LEXAR4",23,0)
 ; Set concept level, if modifiers are allowed build list
"RTN","LEXAR4",24,0)
 S LEXLVL=+($G(LEX("LVL"))) I LEXLVL'>1,+LEXEXP>2,$D(^LEX(757.01,+LEXEXP,0)),+($G(^TMP("LEXSCH",$J,"MOD",0)))>0 D EN^LEXAMD(LEXEXP,$G(LEXVDT))
"RTN","LEXAR4",25,0)
 ; Quit if modifiers found at next level
"RTN","LEXAR4",26,0)
 G:+($G(LEX("LVL")))>LEXLVL SELQ
"RTN","LEXAR4",27,0)
 D SET(LEXEXP,$G(LEXVDT)),EDU^LEXAR
"RTN","LEXAR4",28,0)
 G SELQ
"RTN","LEXAR4",29,0)
SET(LEXEXP,LEXVDT) ; Set LEX("SEL") Nodes
"RTN","LEXAR4",30,0)
 K LEX("SEL") D SETEXP^LEXAR5(LEXEXP)
"RTN","LEXAR4",31,0)
 N LEXMC S LEXMC=+($P(^LEX(757.01,LEXEXP,1),"^",1))
"RTN","LEXAR4",32,0)
 ; If selected from the list increment frequency
"RTN","LEXAR4",33,0)
 D:+($G(^TMP("LEXSCH",$J,"LST",0)))>0&(+($G(^TMP("LEXSCH",$J,"APP",0)))>1) INC(LEXMC)
"RTN","LEXAR4",34,0)
 N LEXMCE S LEXMCE=+(^LEX(757,LEXMC,0))
"RTN","LEXAR4",35,0)
 D SETSRC^LEXAR5(LEXMCE,$G(LEXVDT)),SETDEF^LEXAR5(LEXMCE)
"RTN","LEXAR4",36,0)
 D SETSTY^LEXAR5(LEXMC)
"RTN","LEXAR4",37,0)
 N LEXE S LEXE=0 F  S LEXE=$O(^LEX(757.01,"AMC",LEXMC,LEXE)) Q:+LEXE=0  D
"RTN","LEXAR4",38,0)
 . Q:LEXE=LEXEXP  D SETEXP^LEXAR5(LEXE),SETSRC^LEXAR5(LEXE,$G(LEXVDT))
"RTN","LEXAR4",39,0)
 G:+($G(LEXLF))=0 SELQ
"RTN","LEXAR4",40,0)
 Q
"RTN","LEXAR4",41,0)
INC(LEXMC) ; Increment frequency counter in ^LEX(757)
"RTN","LEXAR4",42,0)
 N LEXF,LEXFQ S LEXMC=+($G(LEXMC)) Q:LEXMC=0  Q:'$D(^LEX(757,LEXMC))
"RTN","LEXAR4",43,0)
 S ZTSAVE("LEXMC")="",ZTRTN="FQ^LEXAR4",ZTDESC="Updating Lexicon Frequencies",ZTIO="",ZTDTH=$H
"RTN","LEXAR4",44,0)
 D ^%ZTLOAD,HOME^%ZIS K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXAR4",45,0)
 Q
"RTN","LEXAR4",46,0)
FQ ; Edit Concept Frequency
"RTN","LEXAR4",47,0)
 N LEXA,LEXM,LEXQ,LEXS,DA,DIC,DIE S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXAR4",48,0)
 S LEXM=+($G(LEXMC)) Q:LEXM=0  Q:'$D(^LEX(757,LEXM,0))
"RTN","LEXAR4",49,0)
 I '$D(^LEX(757.001,LEXM,0)) D AFQ G FQQ
"RTN","LEXAR4",50,0)
 S LEXQ=+($P($G(^LEX(757.001,LEXM,0)),"^",3)),LEXQ=LEXQ+1
"RTN","LEXAR4",51,0)
 S DA=+($G(LEXM)) Q:+DA=0  Q:'$D(^LEX(757.001,DA,0))
"RTN","LEXAR4",52,0)
 S LEXM=+($G(LEXMC)) Q:'$D(^LEX(757,LEXMC,0))  S LEXA=0
"RTN","LEXAR4",53,0)
 S (DIC,DIE)="^LEX(757.001,",DR="2////^S X=LEXQ"
"RTN","LEXAR4",54,0)
EFQ ; Lock record and edit frequency record
"RTN","LEXAR4",55,0)
 L +^LEX(757.001,+DA):1 I '$T S LEXA=LEXA+1 H 2 G:LEXA<4 EFQ
"RTN","LEXAR4",56,0)
 D:LEXA<4 ^DIE L -^LEX(757.001,+DA)
"RTN","LEXAR4",57,0)
 G FQQ
"RTN","LEXAR4",58,0)
 Q
"RTN","LEXAR4",59,0)
AFQ ; Add frequency record
"RTN","LEXAR4",60,0)
 N DIC,DA S ^LEX(757.001,LEXM,0)=LEXM_"^0^0" S DIC="^LEX(757.001,",DA=LEXM D SET^LEXNDX2 Q
"RTN","LEXAR4",61,0)
 Q
"RTN","LEXAR4",62,0)
FQQ ; Quit Frequency
"RTN","LEXAR4",63,0)
 Q
"RTN","LEXAR4",64,0)
SELQ ; Quit Selection
"RTN","LEXAR4",65,0)
 D:$D(LEX("SEL")) SEL^LEXAR
"RTN","LEXAR4",66,0)
 D:$D(LEX("LIST")) LST^LEXAR
"RTN","LEXAR4",67,0)
 Q
"RTN","LEXAR5")
0^2^B24963469
"RTN","LEXAR5",1,0)
LEXAR5 ; ISL/KER/FJF Look-up Response (Select Entry) ; 05/14/2003
"RTN","LEXAR5",2,0)
 ;;2.0;LEXICON UTILITY;**14,25**;Sep 23, 1996
"RTN","LEXAR5",3,0)
 ;
"RTN","LEXAR5",4,0)
 ; External References
"RTN","LEXAR5",5,0)
 ;   DBIA 10104  $$UP^XLFSTR
"RTN","LEXAR5",6,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","LEXAR5",7,0)
 ;   DBIA  3992  $$STATCHK^ICDAPIU
"RTN","LEXAR5",8,0)
 ;   DBIA  1997  $$STATCHK^ICPTAPIU
"RTN","LEXAR5",9,0)
 ;   DBIA  1612  ^YSD(627.7,
"RTN","LEXAR5",10,0)
 ;                  
"RTN","LEXAR5",11,0)
SETEXP(LEXX)   ; Set LEX("SEL","EXP")
"RTN","LEXAR5",12,0)
 S LEXX=+($G(LEXX)) Q:LEXX'>0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",13,0)
 N LEXYPE S LEXYPE=$$TYPE(LEXX)
"RTN","LEXAR5",14,0)
 N LEXC S LEXC=+($G(LEX("SEL","EXP",0))),LEXC=LEXC+1
"RTN","LEXAR5",15,0)
 S LEX("SEL","EXP",LEXC)=LEXX_"^"_^LEX(757.01,LEXX,0),LEX("SEL","EXP",0)=LEXC
"RTN","LEXAR5",16,0)
 S LEX("SEL","EXP","B",LEXX,LEXC)=""
"RTN","LEXAR5",17,0)
 S:LEXYPE'="" LEX("SEL","EXP","C",LEXYPE,LEXC)=""
"RTN","LEXAR5",18,0)
 Q
"RTN","LEXAR5",19,0)
TYPE(LEXX)     ; Expression Type
"RTN","LEXAR5",20,0)
 N LEXYPE S LEXYPE=$P($G(^LEX(757.01,LEXX,1)),"^",2)
"RTN","LEXAR5",21,0)
 I +LEXYPE'>0!('$D(^LEX(757.011,+LEXYPE,0))) S LEXYPE="OTH"
"RTN","LEXAR5",22,0)
 I +LEXYPE>0,$D(^LEX(757.011,+LEXYPE,0)) D
"RTN","LEXAR5",23,0)
 . S LEXYPE=$P($G(^LEX(757.011,+LEXYPE,0)),"^",1)
"RTN","LEXAR5",24,0)
 . S:$L(LEXYPE)<3 LEXYPE="OTH"
"RTN","LEXAR5",25,0)
 . S LEXYPE=$$UP^XLFSTR($E(LEXYPE,1,3))
"RTN","LEXAR5",26,0)
 S LEXX=LEXYPE Q LEXX
"RTN","LEXAR5",27,0)
SETDEF(LEXX)   ; Set LEX("SEL","SIG")
"RTN","LEXAR5",28,0)
 S LEXX=+($G(LEXX)) Q:LEXX=0
"RTN","LEXAR5",29,0)
 Q:'$D(^LEX(757.01,LEXX,3,1,0))
"RTN","LEXAR5",30,0)
 N LEXC,LEXR S LEXR=0
"RTN","LEXAR5",31,0)
 F  S LEXR=$O(^LEX(757.01,LEXX,3,LEXR)) Q:+LEXR=0  D
"RTN","LEXAR5",32,0)
 . S LEXC=+($G(LEX("SEL","SIG",0))),LEXC=LEXC+1
"RTN","LEXAR5",33,0)
 . S LEX("SEL","SIG",LEXC)=$G(^LEX(757.01,LEXX,3,LEXR,0))
"RTN","LEXAR5",34,0)
 . S LEX("SEL","SIG",0)=LEXC
"RTN","LEXAR5",35,0)
 Q
"RTN","LEXAR5",36,0)
SETSTY(LEXX)   ; Set LEX("SEL","STY")
"RTN","LEXAR5",37,0)
 S LEXX=+($G(LEXX)) Q:LEXX=0
"RTN","LEXAR5",38,0)
 Q:'$D(^LEX(757.1,"B",LEXX))
"RTN","LEXAR5",39,0)
 N LEXC,LEXR,LEXSC,LEXST S LEXR=0
"RTN","LEXAR5",40,0)
 F  S LEXR=$O(^LEX(757.1,"B",LEXX,LEXR)) Q:+LEXR=0  D
"RTN","LEXAR5",41,0)
 . S LEXSC=+($P($G(^LEX(757.1,LEXR,0)),"^",2)) Q:LEXSC=0  Q:'$D(^LEX(757.11,LEXSC))
"RTN","LEXAR5",42,0)
 . S LEXSC=$P($G(^LEX(757.11,LEXSC,0)),"^",2) Q:'$L(LEXSC)
"RTN","LEXAR5",43,0)
 . S LEXST=+($P($G(^LEX(757.1,LEXR,0)),"^",3)) Q:LEXST=0  Q:'$D(^LEX(757.12,LEXST))
"RTN","LEXAR5",44,0)
 . S LEXST=$P($G(^LEX(757.12,LEXST,0)),"^",2) Q:'$L(LEXST)
"RTN","LEXAR5",45,0)
 . S LEXC=+($G(LEX("SEL","STY",0))),LEXC=LEXC+1
"RTN","LEXAR5",46,0)
 . S LEX("SEL","STY",LEXC)=LEXSC_"^"_LEXST
"RTN","LEXAR5",47,0)
 . S LEX("SEL","STY",0)=LEXC
"RTN","LEXAR5",48,0)
 Q
"RTN","LEXAR5",49,0)
SETSRC(LEXX,LEXVDT)     ; Set LEX("SEL","SRC")
"RTN","LEXAR5",50,0)
 N LEXSO,LEXSRC,LEXS,LEXC S LEXS=0
"RTN","LEXAR5",51,0)
 F  S LEXS=$O(^LEX(757.02,"B",LEXX,LEXS)) Q:+LEXS=0  D
"RTN","LEXAR5",52,0)
 . S LEXSO=$P(^LEX(757.02,LEXS,0),"^",2)
"RTN","LEXAR5",53,0)
 . Q:+$$STATCHK^LEXSRC2(LEXSO,LEXVDT)=0
"RTN","LEXAR5",54,0)
 . Q:'$D(^LEX(757.02,"AVA",(LEXSO_" "),LEXX))
"RTN","LEXAR5",55,0)
 . S LEXSRC=+($P(^LEX(757.02,LEXS,0),"^",3)) Q:LEXSRC=0
"RTN","LEXAR5",56,0)
 . S LEXSRC=$P(^LEX(757.03,LEXSRC,0),"^",2) Q:'$L(LEXSRC)
"RTN","LEXAR5",57,0)
 . S LEXC=+($G(LEX("SEL","SRC",0))),LEXC=LEXC+1
"RTN","LEXAR5",58,0)
 . S LEX("SEL","SRC",LEXC)=LEXSRC_"^"_LEXSO_"^"_LEXX
"RTN","LEXAR5",59,0)
 . S LEX("SEL","SRC","B",LEXSRC,LEXC)=""
"RTN","LEXAR5",60,0)
 . S LEX("SEL","SRC","C",LEXSO,LEXC)=""
"RTN","LEXAR5",61,0)
 . S LEX("SEL","SRC","D",LEXX,LEXC)=""
"RTN","LEXAR5",62,0)
 . S LEX("SEL","SRC",0)=LEXC
"RTN","LEXAR5",63,0)
 D SETVAS(LEXX,+($G(LEXVDT)))
"RTN","LEXAR5",64,0)
 Q
"RTN","LEXAR5",65,0)
SETVAS(LEXX,LEXVDT)     ; Find VA sources for LEX("SEL","VAS")
"RTN","LEXAR5",66,0)
 N LEXSAB,LEXRTN,LEXR,LEXVP S LEXVDT=$S(+($G(LEXVDT))>0:+($G(LEXVDT)),1:$$DT^XLFDT)
"RTN","LEXAR5",67,0)
  F LEXSAB="ICD","ICP","CPT","DS4" D
"RTN","LEXAR5",68,0)
 . K LEXSRC S LEXRTN=LEXSAB_"^LEXAR5"
"RTN","LEXAR5",69,0)
 . D ALL^LEXSRC(LEXX,LEXSAB) I +($G(LEXSRC(0)))>0 D @LEXRTN
"RTN","LEXAR5",70,0)
 Q
"RTN","LEXAR5",71,0)
ICD ; Intl' Classification of Diseases (diagnosis)
"RTN","LEXAR5",72,0)
 N LEXO,LEXI,LEXSO,LEXR,LEXVP S LEXI=0 F  S LEXI=$O(LEXSRC(LEXI)) Q:+LEXI=0  D
"RTN","LEXAR5",73,0)
 . S LEXSO=$G(LEXSRC(LEXI)) Q:LEXSO=""
"RTN","LEXAR5",74,0)
 . S LEXO=$$STATCHK^ICDAPIU(LEXSO,+($G(LEXVDT))) Q:+LEXO'>0
"RTN","LEXAR5",75,0)
 . S LEXO=+($P(LEXO,"^",2)) Q:+LEXO'>0  S LEXC=+($G(LEX("SEL","VAS",0)))+1
"RTN","LEXAR5",76,0)
 . S LEXVP=+LEXO_";ICD9(" D VAS("80",LEXSO,LEXX,LEXVP,LEXC)
"RTN","LEXAR5",77,0)
 Q
"RTN","LEXAR5",78,0)
ICP ; Intl' Classification of Diseases (procedures)
"RTN","LEXAR5",79,0)
 N LEXI,LEXSO,LEXR,LEXVP S LEXI=0 F  S LEXI=$O(LEXSRC(LEXI)) Q:+LEXI=0  D
"RTN","LEXAR5",80,0)
 . S LEXSO=$G(LEXSRC(LEXI)) Q:LEXSO=""
"RTN","LEXAR5",81,0)
 . S LEXO=$$STATCHK^ICDAPIU(LEXSO,+($G(LEXVDT))) Q:+LEXO'>0
"RTN","LEXAR5",82,0)
 . S LEXO=+($P(LEXO,"^",2)) Q:+LEXO'>0  S LEXC=+($G(LEX("SEL","VAS",0)))+1
"RTN","LEXAR5",83,0)
 . S LEXVP=+LEXO_";ICD0(" D VAS("80.1",LEXSO,LEXX,LEXVP,LEXC)
"RTN","LEXAR5",84,0)
 Q
"RTN","LEXAR5",85,0)
CPT ; Current Procedural Terminology
"RTN","LEXAR5",86,0)
 N LEXI,LEXSO,LEXR,LEXVP S LEXI=0 F  S LEXI=$O(LEXSRC(LEXI)) Q:+LEXI=0  D
"RTN","LEXAR5",87,0)
 . S LEXSO=$G(LEXSRC(LEXI)) Q:LEXSO=""
"RTN","LEXAR5",88,0)
 . S LEXO=$$STATCHK^ICPTAPIU(LEXSO,+($G(LEXVDT))) Q:+LEXO'>0
"RTN","LEXAR5",89,0)
 . S LEXO=+($P(LEXO,"^",2)) Q:+LEXO'>0  S LEXC=+($G(LEX("SEL","VAS",0)))+1
"RTN","LEXAR5",90,0)
 . S LEXVP=+LEXO_";ICPT(" D VAS("81",LEXSO,LEXX,LEXVP,LEXC)
"RTN","LEXAR5",91,0)
 Q
"RTN","LEXAR5",92,0)
DS4 ; Diagnostic and Statistical Manual of Mental Disorders
"RTN","LEXAR5",93,0)
 Q:'$D(LEXX)  S LEXX=+($G(LEXX)) Q:LEXX=0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",94,0)
 N LEXEXP,LEXR,LEXVP,LEXI,LEXSO,LEXVA,LEXIEN,LEXC S LEXEXP=$G(^LEX(757.01,LEXX,0)) Q:'$L(LEXEXP)
"RTN","LEXAR5",95,0)
 S LEXI=0 F  S LEXI=$O(LEXSRC(LEXI)) Q:+LEXI=0  D
"RTN","LEXAR5",96,0)
 . S LEXSO=$G(LEXSRC(LEXI)) Q:LEXSO=""  Q:'$D(^YSD(627.7,"B",LEXSO))  N LEXVA,LEXIEN S (LEXIEN,LEXVA)=0
"RTN","LEXAR5",97,0)
 . F  S LEXVA=$O(^YSD(627.7,"B",LEXSO,LEXVA)) Q:+LEXVA=0  D
"RTN","LEXAR5",98,0)
 . . I $$UP($G(^YSD(627.7,LEXVA,"D")))=$$UP(LEXEXP) S LEXIEN=LEXVA
"RTN","LEXAR5",99,0)
 . Q:LEXIEN=0  S LEXR=LEXIEN,LEXC=+($G(LEX("SEL","VAS",0))),LEXC=LEXC+1
"RTN","LEXAR5",100,0)
 . Q:+LEXR'>0  S LEXVP=LEXR_";YSD(627.7," D VAS("627.7",LEXSO,LEXX,LEXVP,LEXC)
"RTN","LEXAR5",101,0)
 Q
"RTN","LEXAR5",102,0)
VAS(LEXFI,LEXSO,LEXIEN,LEXV,LEXCNT)     ; Set LEX("SEL","VAS")
"RTN","LEXAR5",103,0)
 S LEX("SEL","VAS",LEXCNT)=LEXFI_"^"_LEXV_"^"_LEXSO_"^"_LEXIEN
"RTN","LEXAR5",104,0)
 S LEX("SEL","VAS","B",LEXFI,LEXCNT)=""
"RTN","LEXAR5",105,0)
 S LEX("SEL","VAS","C",LEXSO,LEXCNT)=""
"RTN","LEXAR5",106,0)
 S LEX("SEL","VAS","D",LEXIEN,LEXCNT)=""
"RTN","LEXAR5",107,0)
 S LEX("SEL","VAS","V",LEXV,LEXCNT)=""
"RTN","LEXAR5",108,0)
 S LEX("SEL","VAS",0)=LEXCNT
"RTN","LEXAR5",109,0)
 Q
"RTN","LEXAR5",110,0)
UP(X) ; Uppercase
"RTN","LEXAR5",111,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXAR7")
0^25^B17065693
"RTN","LEXAR7",1,0)
LEXAR7 ; ISL Look-up Response (MAIL)              ; 05/14/2003
"RTN","LEXAR7",2,0)
 ;;2.0;LEXICON UTILITY;**9,25**;Sep 23, 1996
"RTN","LEXAR7",3,0)
 ;
"RTN","LEXAR7",4,0)
 Q
"RTN","LEXAR7",5,0)
 ;  This routines sends a Mailman message containing the Unresolved
"RTN","LEXAR7",6,0)
 ;  Narratives and Comments stored in file 757.06 to the Field Office
"RTN","LEXAR7",7,0)
 ;  at G.LEXUNR@ISC-SLC.VA.GOV.  Once sent, the Unresolved Narratives
"RTN","LEXAR7",8,0)
 ;  and comments are purged from file 757.06.  Both the Unresolved 
"RTN","LEXAR7",9,0)
 ;  Narratives and comments are used to update the Lexicon Utility.
"RTN","LEXAR7",10,0)
 ;
"RTN","LEXAR7",11,0)
SEND ; Task MAILMAN to Send Unresolved Narratives to the ISC
"RTN","LEXAR7",12,0)
 I +($$TOT^LEXAR6)'>49!('$L($G(^LEX(757.06,0))))!(+($P($G(^LEX(757.06,0)),"^",4))<1) G SENDQ
"RTN","LEXAR7",13,0)
 G:$D(^TMP("LEXSEND")) SENDQ S ^TMP("LEXSEND")=""
"RTN","LEXAR7",14,0)
 N X,Y,ZTQUEUED,ZTREQ,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,%,%X,%Y
"RTN","LEXAR7",15,0)
 S ZTRTN="ISC^LEXAR7",ZTDESC="Sending Narratives to IRMFO",ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXAR7",16,0)
SENDQ ; End of Send
"RTN","LEXAR7",17,0)
 K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXAR7",18,0)
 Q
"RTN","LEXAR7",19,0)
DUMP ; Dump Narratives to Developer
"RTN","LEXAR7",20,0)
 D HOME^%ZIS S U="^" Q:+($G(DUZ))=0  Q:+($O(^LEX(757.06,0)))'>0
"RTN","LEXAR7",21,0)
 S ^TMP("LEXSEND")="" K ^TMP("LEXMSG",$J) D ISC K ^TMP("LEXSEND")
"RTN","LEXAR7",22,0)
 Q
"RTN","LEXAR7",23,0)
ISC ; Create MAILMAN Message for the IRMFO
"RTN","LEXAR7",24,0)
 G:'$D(^TMP("LEXSEND")) ISCQ G:$D(^TMP("LEXMSG")) ISCQ
"RTN","LEXAR7",25,0)
 ;
"RTN","LEXAR7",26,0)
 ; LEXT    Narrative Type
"RTN","LEXAR7",27,0)
 ; LEXN    Narrative
"RTN","LEXAR7",28,0)
 ; LEXA    # of Narratives Added to Message
"RTN","LEXAR7",29,0)
 ;
"RTN","LEXAR7",30,0)
 N DA,DIC,DIK,DIE,X,Y,LEXT,LEXN,LEXA S:$D(ZTQUEUED) ZTREQ="@" D INM S DA=0,DIK="^LEX(757.06,",LEXA=0
"RTN","LEXAR7",31,0)
 F  S DA=$O(^LEX(757.06,DA)) Q:+DA=0  D
"RTN","LEXAR7",32,0)
 . S LEXT="UNR"
"RTN","LEXAR7",33,0)
 . I '$D(^LEX(757.06,DA,1)),'$D(^LEX(757.06,DA,2)),'$D(^LEX(757.06,DA,3)),$D(^LEX(757.06,DA,4)) S LEXT="COM"
"RTN","LEXAR7",34,0)
 . Q:+($G(^LEX(757.06,DA,99)))'>0
"RTN","LEXAR7",35,0)
 . S LEXN=$P($G(^LEX(757.06,DA,0)),"^",1) Q:'$L(LEXN)  Q:'$D(^LEX(757.06,"B",$E(LEXN,1,30),DA))
"RTN","LEXAR7",36,0)
 . Q:+($G(LEXA))>50
"RTN","LEXAR7",37,0)
 . D ADD("   ",LEXT) S LEXA=LEXA+1
"RTN","LEXAR7",38,0)
 . I $L($P($G(^LEX(757.06,DA,0)),U,1)) D
"RTN","LEXAR7",39,0)
 . . I LEXT="UNR" D ADD("NAR",$P($G(^LEX(757.06,DA,0)),U,1,2)) Q
"RTN","LEXAR7",40,0)
 . . D ADD("EXP",$P($G(^LEX(757.06,DA,0)),U,1)) Q
"RTN","LEXAR7",41,0)
 . D:$L($P($G(^LEX(757.06,DA,0)),U,3)) ADD("SCH",$P($G(^LEX(757.06,DA,0)),U,3))
"RTN","LEXAR7",42,0)
 . D:$L($P($G(^LEX(757.06,DA,0)),U,4)) ADD("FND",$P($G(^LEX(757.06,DA,0)),U,4))
"RTN","LEXAR7",43,0)
 . D:$L($P($G(^LEX(757.06,DA,1)),U,1)) ADD("APP",$P($G(^LEX(757.06,DA,1)),U,1))
"RTN","LEXAR7",44,0)
 . D:$L($P($G(^LEX(757.06,DA,1)),U,2)) ADD("SER",$P($G(^LEX(757.06,DA,1)),U,2))
"RTN","LEXAR7",45,0)
 . D:$L($P($G(^LEX(757.06,DA,1)),U,3)) ADD("LOC",$P($G(^LEX(757.06,DA,1)),U,3))
"RTN","LEXAR7",46,0)
 . D:$L($P($G(^LEX(757.06,DA,2)),U,1)) ADD("FLN",$P($G(^LEX(757.06,DA,2)),U,1))
"RTN","LEXAR7",47,0)
 . D:$L($P($G(^LEX(757.06,DA,2)),U,2)) ADD("IDX",$P($G(^LEX(757.06,DA,2)),U,2))
"RTN","LEXAR7",48,0)
 . D:$L($P($G(^LEX(757.06,DA,2)),U,3)) ADD("SCT",$P($G(^LEX(757.06,DA,2)),U,3))
"RTN","LEXAR7",49,0)
 . D:$L($G(^LEX(757.06,DA,3))) ADD("SCR",$G(^LEX(757.06,DA,3)))
"RTN","LEXAR7",50,0)
 . D:$L($P($G(^LEX(757.06,DA,4)),U,1)) ADD("IEN",$P($G(^LEX(757.06,DA,4)),U,1))
"RTN","LEXAR7",51,0)
 . D:$L($P($G(^LEX(757.06,DA,4)),U,2)) ADD("COM",$P($G(^LEX(757.06,DA,4)),U,2))
"RTN","LEXAR7",52,0)
 . I +($G(DA))>0 K ^LEX(757.06,+($G(DA)),99) D:$D(^LEX(757.06,+($G(DA)),0)) ^DIK
"RTN","LEXAR7",53,0)
 D N0,MAIL S LEXA=$$TOT^LEXAR6
"RTN","LEXAR7",54,0)
ISCQ ; End of Send MAILMAN Message
"RTN","LEXAR7",55,0)
 K LEXA,LEXN,LEXT S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXAR7",56,0)
 Q
"RTN","LEXAR7",57,0)
ADD(LEXI,LEXS) ; Add text to message
"RTN","LEXAR7",58,0)
 ; 
"RTN","LEXAR7",59,0)
 ; LEXI    Narrative Segment ID
"RTN","LEXAR7",60,0)
 ; LEXS    Segment String
"RTN","LEXAR7",61,0)
 ; LEXC    Counter/IEN for ^TMP("LEXMSG",$J,LEXC)
"RTN","LEXAR7",62,0)
 ;
"RTN","LEXAR7",63,0)
 N LEXC S LEXC=+($G(^TMP("LEXMSG",$J,0)))+1,^TMP("LEXMSG",$J,0)=LEXC,^TMP("LEXMSG",$J,LEXC)=LEXI
"RTN","LEXAR7",64,0)
 S:$G(LEXS)'="" ^TMP("LEXMSG",$J,LEXC)=^TMP("LEXMSG",$J,LEXC)_"^"_LEXS
"RTN","LEXAR7",65,0)
 Q
"RTN","LEXAR7",66,0)
MAIL ; MAILMAN
"RTN","LEXAR7",67,0)
 N XCNP,XMDUZ,XMSUB,XMTEXT,XMY,XMZ,Y,LEXADR S LEXADR=$$ADR^LEXU G:'$L(LEXADR) MAILQ
"RTN","LEXAR7",68,0)
 G:'$D(^TMP("LEXMSG",$J)) MAILQ G:+($G(LEXA))=0 MAILQ G:+($G(^TMP("LEXMSG",$J,0)))=0 MAILQ
"RTN","LEXAR7",69,0)
 K XMZ N DIFROM S XMSUB="Unresolved Narratives - "_LEXA_" items"
"RTN","LEXAR7",70,0)
 S XMY(("G.LEXUNR@"_LEXADR))="",XMTEXT="^TMP(""LEXMSG"",$J,",XMDUZ=.5 D ^XMD
"RTN","LEXAR7",71,0)
MAILQ ; End of MAILMAN
"RTN","LEXAR7",72,0)
 K ^TMP("LEXSEND"),^TMP("LEXMSG",$J),DIFROM,LEXA,XCNP,XMDUZ,XMZ,XMSUB,XMY,XMTEXT,XMDUZ,XMSCR,REF,%,%X,%Y,%Z Q
"RTN","LEXAR7",73,0)
INM ; Initialize Message
"RTN","LEXAR7",74,0)
 N LEXI S (LEXI,^TMP("LEXMSG",$J,0))=0 F  S LEXI=$O(^TMP("LEXMSG",$J,LEXI)) Q:+LEXI=0  K ^TMP("LEXMSG",$J,LEXI)
"RTN","LEXAR7",75,0)
 Q
"RTN","LEXAR7",76,0)
N0 ; ^LEX(757.06,0)
"RTN","LEXAR7",77,0)
 N LEX3,LEX4,DA S (LEX3,LEX4,DA)=0 F  S DA=$O(^LEX(757.06,DA)) Q:+DA=0  S LEX3=DA,LEX4=LEX4+1
"RTN","LEXAR7",78,0)
 S LEX3=+LEX3,LEX4=+LEX4 S:+LEX3=0 LEX3="" S:+LEX4=0 LEX4="" S ^LEX(757.06,0)=$P($G(^LEX(757.06,0)),"^",1,2)_"^"_LEX3_"^"_LEX4
"RTN","LEXAR7",79,0)
 Q
"RTN","LEXAR7",80,0)
CLR ; Clear all narratives
"RTN","LEXAR7",81,0)
 N DA,DIK S DA=0,U="^",DIK="^LEX(757.06," F  S DA=$O(^LEX(757.06,DA)) Q:+DA=0  D ^DIK
"RTN","LEXAR7",82,0)
 N LEXN S LEXN=$P(^LEX(757.06,0),"^",1,2)_"^^" S ^LEX(757.06,0)=LEXN
"RTN","LEXAR7",83,0)
 Q
"RTN","LEXASC")
0^16^B6679811
"RTN","LEXASC",1,0)
LEXASC ; ISL/KER Look-up by Shortcuts ; 05/14/2003
"RTN","LEXASC",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXASC",3,0)
 ;
"RTN","LEXASC",4,0)
 ; ^TMP("LEXFND",$J)  Entries found
"RTN","LEXASC",5,0)
 ; ^TMP("LEXHIT",$J)  Entries returned
"RTN","LEXASC",6,0)
 ;
"RTN","LEXASC",7,0)
 ; LEXSCH   User input string to search for
"RTN","LEXASC",8,0)
 ; LEXVDT   Date is used to screen out inactive codes
"RTN","LEXASC",9,0)
 ;
"RTN","LEXASC",10,0)
 ; LEXC     Pointer to Shortcut Context  in file 757.41
"RTN","LEXASC",11,0)
 ; LEXS     Pointer to Shortcut in file 757.4
"RTN","LEXASC",12,0)
 ; LEXE     Pointer to expression in 757.01
"RTN","LEXASC",13,0)
 ; LEXM     Pointer to Major Concept in 757.01
"RTN","LEXASC",14,0)
 ;
"RTN","LEXASC",15,0)
 ; LEXDSP   Source Display string
"RTN","LEXASC",16,0)
 ; LEXDES   Flag - has (*) or doesn't have () a description
"RTN","LEXASC",17,0)
 ; LEXSHOW  Display string from Application/User defaults
"RTN","LEXASC",18,0)
 ; LEXX     Returned variable from functions
"RTN","LEXASC",19,0)
 ;
"RTN","LEXASC",20,0)
EN(LEXSCH,LEXC,LEXVDT) ; Check Shortcuts file 757.4 for LEXSCH
"RTN","LEXASC",21,0)
 S LEXC=+($G(LEXC))
"RTN","LEXASC",22,0)
 Q:'$L(LEXSCH)!(LEXC=0) 0
"RTN","LEXASC",23,0)
 Q:'$D(^LEX(757.41,LEXC)) 0
"RTN","LEXASC",24,0)
 Q:$L(LEXSCH)<2!($L(LEXSCH)>63) 0
"RTN","LEXASC",25,0)
 Q:'$D(^LEX(757.4,"ARA",LEXSCH,LEXC)) 0
"RTN","LEXASC",26,0)
 N LEXS S LEXS=0
"RTN","LEXASC",27,0)
 F  S LEXS=$O(^LEX(757.4,"ARA",LEXSCH,LEXC,LEXS)) Q:+LEXS=0  D
"RTN","LEXASC",28,0)
 . N LEXE,LEXDES,LEXDSP
"RTN","LEXASC",29,0)
 . S LEXE=+($G(^LEX(757.4,LEXS,0))) Q:LEXE'>0
"RTN","LEXASC",30,0)
 . ; Filter
"RTN","LEXASC",31,0)
 . S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),LEXE) Q:LEXFILR=0
"RTN","LEXASC",32,0)
 . ; Deactivated Term
"RTN","LEXASC",33,0)
 . Q:+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1
"RTN","LEXASC",34,0)
 . Q:+($$SUB(LEXE))=0
"RTN","LEXASC",35,0)
 . S LEXDES=$$DES(LEXE)
"RTN","LEXASC",36,0)
 . S LEXDSP="",LEXSHOW=$G(^TMP("LEXSCH",$J,"DIS",0)) S:$L($G(LEXSHOW)) LEXDSP=$$DSP(LEXE,$G(LEXSHOW),$G(LEXVDT))
"RTN","LEXASC",37,0)
 . D ADDL^LEXAL(LEXE,LEXDES,LEXDSP)
"RTN","LEXASC",38,0)
 I $D(^TMP("LEXFND",$J)) D BEG^LEXAL
"RTN","LEXASC",39,0)
 I '$D(^TMP("LEXFND",$J)) D
"RTN","LEXASC",40,0)
 . K LEX,^TMP("LEXFND",$J),^TMP("LEXHIT",$J) S LEX=0
"RTN","LEXASC",41,0)
 . S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXASC",42,0)
 Q:$D(^TMP("LEXHIT",$J)) 1
"RTN","LEXASC",43,0)
 Q 0
"RTN","LEXASC",44,0)
DES(LEXX) ; Get description flag
"RTN","LEXASC",45,0)
 N LEXDES,LEXE,LEXM S LEXDES="",LEXE=+LEXX
"RTN","LEXASC",46,0)
 S LEXM=$P($G(^LEX(757.01,+($G(LEXX)),1)),"^",1)
"RTN","LEXASC",47,0)
 S LEXM=+($G(^LEX(757,+($G(LEXM)),0)))
"RTN","LEXASC",48,0)
 S:$D(^LEX(757.01,LEXM,3)) LEXDES="*"
"RTN","LEXASC",49,0)
 S LEXX=$G(LEXDES) Q LEXX
"RTN","LEXASC",50,0)
TERM(LEXX) ; Get expression
"RTN","LEXASC",51,0)
 Q $G(^LEX(757.01,LEXX,0))
"RTN","LEXASC",52,0)
DSP(LEXX,LEXDSP,LEXVDT) ; Return displayable text
"RTN","LEXASC",53,0)
 S LEXX=$$SO^LEXASO(LEXX,LEXDSP,1,$G(LEXVDT)) Q LEXX
"RTN","LEXASC",54,0)
SUB(LEXX) ;
"RTN","LEXASC",55,0)
 Q:$G(^TMP("LEXSCH",$J,"GBL",0))'="^LEX(757.21," 1
"RTN","LEXASC",56,0)
 Q:'$L($G(^TMP("LEXSCH",$J,"IDX",0))) 1
"RTN","LEXASC",57,0)
 N LEXIDX,LEXSS,LEXSN S LEXIDX=$G(^TMP("LEXSCH",$J,"IDX",0))
"RTN","LEXASC",58,0)
 S LEXSS=$E(LEXIDX,2,$L(LEXIDX))
"RTN","LEXASC",59,0)
 S LEXSN=$O(^LEXT(757.2,"AA",LEXSS,0))
"RTN","LEXASC",60,0)
 Q:+($G(LEXSN))=0 1
"RTN","LEXASC",61,0)
 N LEXOK,LEXR S (LEXR,LEXOK)=0
"RTN","LEXASC",62,0)
 F  S LEXR=$O(^LEX(757.21,"B",LEXX,LEXR)) Q:+LEXR=0  D
"RTN","LEXASC",63,0)
 . I $P($G(^LEX(757.21,LEXR,0)),"^",2)=LEXSN S LEXOK=1
"RTN","LEXASC",64,0)
 S LEXX=LEXOK Q LEXX
"RTN","LEXASO")
0^9^B11571330
"RTN","LEXASO",1,0)
LEXASO ; ISL/KER Look-up Display String (Sources) ; 05/14/2003
"RTN","LEXASO",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXASO",3,0)
 ;
"RTN","LEXASO",4,0)
 ; Entry S X=$$SO^LEXASO(IEN,SAB,ALL,DATE)
"RTN","LEXASO",5,0)
 ;
"RTN","LEXASO",6,0)
 ;       IEN is an internal entry number in file 757.01
"RTN","LEXASO",7,0)
 ;           representing an expression
"RTN","LEXASO",8,0)
 ;
"RTN","LEXASO",9,0)
 ;       SAB is the source abbreviation of the classification
"RTN","LEXASO",10,0)
 ;           coding system, i.e., ICD, CPT, DSM, etc.
"RTN","LEXASO",11,0)
 ;
"RTN","LEXASO",12,0)
 ;       ALL is a flag 
"RTN","LEXASO",13,0)
 ;
"RTN","LEXASO",14,0)
 ;           0 - do not display all codes associated of the
"RTN","LEXASO",15,0)
 ;               major concept, display the codes only for the
"RTN","LEXASO",16,0)
 ;               expression
"RTN","LEXASO",17,0)
 ;
"RTN","LEXASO",18,0)
 ;           1 - display all codes associated for the major 
"RTN","LEXASO",19,0)
 ;               concept
"RTN","LEXASO",20,0)
 ;
"RTN","LEXASO",21,0)
 ;       DATE is used to screen out inactive codes
"RTN","LEXASO",22,0)
 ;
"RTN","LEXASO",23,0)
 ; LEXCC(   Array of classification codes
"RTN","LEXASO",24,0)
 ;
"RTN","LEXASO",25,0)
 ; LEXA     Flag - 1 All codes, 0 only the expression codes
"RTN","LEXASO",26,0)
 ; LEXM     Flag - M Major Concept
"RTN","LEXASO",27,0)
 ;
"RTN","LEXASO",28,0)
 ; LEXC     Counter, # $Piece of string LEXSA (SAB)
"RTN","LEXASO",29,0)
 ;
"RTN","LEXASO",30,0)
 ; LEXMC    IEN in file 757      Major Concept
"RTN","LEXASO",31,0)
 ; LEXME    IEN in file 757.01   Major Concept Expression
"RTN","LEXASO",32,0)
 ; LEXEX    IEN in file 757.01   Expression
"RTN","LEXASO",33,0)
 ; LEXSO    IEN in file 757.02   Sources
"RTN","LEXASO",34,0)
 ;
"RTN","LEXASO",35,0)
 ; LEXSA    Source Abbreviation i.e., ICD or ICD/CPT
"RTN","LEXASO",36,0)
 ; LEXSC    Source Classification Code
"RTN","LEXASO",37,0)
 ; LEXSR    Source Abbreviation single only i.e., ICD, CPT
"RTN","LEXASO",38,0)
 ; LEXST    String of classification sources and codes
"RTN","LEXASO",39,0)
 ;
"RTN","LEXASO",40,0)
 ; LEXX     Return value
"RTN","LEXASO",41,0)
 ;
"RTN","LEXASO",42,0)
SO(LEXX,LEXSA,LEXA,LEXVDT) ; Return string of source codes for LEXX SAB
"RTN","LEXASO",43,0)
 Q:+($G(LEXX))=0!('$L($G(LEXSA))) ""
"RTN","LEXASO",44,0)
 Q:'$L($G(^LEX(757.01,LEXX,0))) ""
"RTN","LEXASO",45,0)
 ;
"RTN","LEXASO",46,0)
 N LEXCC,LEXM,LEXC,LEXMC,LEXME,LEXEX,LEXSO,LEXSC,LEXSR,LEXST
"RTN","LEXASO",47,0)
 ;
"RTN","LEXASO",48,0)
 S LEXEX=+LEXX,LEXX="",LEXA=+($G(LEXA)),LEXMC=0
"RTN","LEXASO",49,0)
 S LEXM=$P($G(^LEX(757.01,LEXEX,1)),"^",2),LEXST=""
"RTN","LEXASO",50,0)
 ; Codes for an expression     D EXP
"RTN","LEXASO",51,0)
 I LEXM'=1!(+($G(LEXA))=0) D EXP G EXIT
"RTN","LEXASO",52,0)
 ; Codes for a major concept   D MAJ
"RTN","LEXASO",53,0)
 I LEXM=1 S LEXMC=LEXEX D MAJ
"RTN","LEXASO",54,0)
EXIT ; Clean up and quit
"RTN","LEXASO",55,0)
 Q LEXX
"RTN","LEXASO",56,0)
EXP ; Source string for an expression
"RTN","LEXASO",57,0)
 I LEXSA'["/" D CODES(LEXEX,LEXSA,$G(LEXVDT)) S LEXX=$$ASSEM Q
"RTN","LEXASO",58,0)
 I LEXSA["/" D  S LEXX=$$ASSEM
"RTN","LEXASO",59,0)
 . N LEXC F LEXC=1:1:$L(LEXSA,"/") D
"RTN","LEXASO",60,0)
 . . D CODES(LEXEX,$P(LEXSA,"/",LEXC),$G(LEXVDT))
"RTN","LEXASO",61,0)
 Q
"RTN","LEXASO",62,0)
MAJ ; Source string for a major concept
"RTN","LEXASO",63,0)
 S LEXMC=$P($G(^LEX(757.01,LEXEX,1)),"^",1),LEXEX=0
"RTN","LEXASO",64,0)
 S LEXEX=0 F  S LEXEX=$O(^LEX(757.02,"AMC",LEXMC,LEXEX)) Q:+LEXEX=0  D
"RTN","LEXASO",65,0)
 . N LEXME S LEXME=+($G(^LEX(757.02,LEXEX,0)))
"RTN","LEXASO",66,0)
 . I LEXSA'["/" D CODES(LEXME,LEXSA,$G(LEXVDT)) Q
"RTN","LEXASO",67,0)
 . I LEXSA["/" D  Q
"RTN","LEXASO",68,0)
 . . N LEXC F LEXC=1:1:$L(LEXSA,"/") D
"RTN","LEXASO",69,0)
 . . . D CODES(LEXME,$P(LEXSA,"/",LEXC),$G(LEXVDT))
"RTN","LEXASO",70,0)
 S LEXX=$$ASSEM
"RTN","LEXASO",71,0)
 Q
"RTN","LEXASO",72,0)
CODES(LEXEX,LEXSA,LEXVDT) ; Get Source Codes
"RTN","LEXASO",73,0)
 Q:$L($G(LEXSA))'=3  N LEXSO,LEXSR,LEXST,LEXSTA,LEXCD S LEXST=""
"RTN","LEXASO",74,0)
 S LEXSO=0 F  S LEXSO=$O(^LEX(757.02,"B",LEXEX,LEXSO)) Q:+LEXSO=0  D
"RTN","LEXASO",75,0)
 . S LEXCD=$P($G(^LEX(757.02,LEXSO,0)),"^",2) Q:'$L(LEXCD)
"RTN","LEXASO",76,0)
 . S LEXSTA=$$STATCHK^LEXSRC2(LEXCD,$G(LEXVDT)) Q:+LEXSTA'>0
"RTN","LEXASO",77,0)
 . I $E($G(^LEX(757.03,$P($G(^LEX(757.02,LEXSO,0)),"^",3),0)),1,3)=LEXSA D
"RTN","LEXASO",78,0)
 . . S LEXSR=$P($G(^LEX(757.03,$P($G(^LEX(757.02,LEXSO,0)),"^",3),0)),"^",2)
"RTN","LEXASO",79,0)
 . . S LEXCC(LEXSR,(($P($G(^LEX(757.02,LEXSO,0)),"^",2))_" "))=""
"RTN","LEXASO",80,0)
 Q
"RTN","LEXASO",81,0)
ASSEM(LEXX) ; Assemble display string  (SOURCE CODE/CODE/CODE)
"RTN","LEXASO",82,0)
 Q:'$D(LEXCC) ""
"RTN","LEXASO",83,0)
 Q:$O(LEXCC(""))="" ""
"RTN","LEXASO",84,0)
 N LEXSR,LEXST S LEXSR=""
"RTN","LEXASO",85,0)
 F  S LEXSR=$O(LEXCC(LEXSR)) Q:LEXSR=""  D
"RTN","LEXASO",86,0)
 . N LEXSC S LEXSC="",LEXST="("_LEXSR_" "
"RTN","LEXASO",87,0)
 . F  S LEXSC=$O(LEXCC(LEXSR,LEXSC)) Q:LEXSC=""  D
"RTN","LEXASO",88,0)
 . . S LEXST=LEXST_$$TRIM(LEXSC)_"/"
"RTN","LEXASO",89,0)
 . . K LEXCC(LEXSR,LEXSC)
"RTN","LEXASO",90,0)
 . S LEXCC(LEXSR)=$E(LEXST,1,($L(LEXST)-1))_")"
"RTN","LEXASO",91,0)
 S (LEXST,LEXSR)=""
"RTN","LEXASO",92,0)
 F  S LEXSR=$O(LEXCC(LEXSR)) Q:LEXSR=""  D
"RTN","LEXASO",93,0)
 . S LEXST=LEXST_" "_LEXCC(LEXSR)
"RTN","LEXASO",94,0)
 F  Q:$E(LEXST,1)'=" "  S LEXST=$E(LEXST,2,$L(LEXST))
"RTN","LEXASO",95,0)
 S LEXX=LEXST Q LEXX
"RTN","LEXASO",96,0)
TRIM(LEXX) ; Trim spaces
"RTN","LEXASO",97,0)
 F  Q:$E(LEXX,1)'=" "  S LEXX=$E(LEXX,2,$L(LEXX))
"RTN","LEXASO",98,0)
 F  Q:$E(LEXX,$L(LEXX))'=" "  S LEXX=$E(LEXX,1,($L(LEXX)-1))
"RTN","LEXASO",99,0)
 Q LEXX
"RTN","LEXCHGF")
0^19^B30234977
"RTN","LEXCHGF",1,0)
LEXCHGF ;ISL/KER - Lexicon Change File              ; 05/14/2003
"RTN","LEXCHGF",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXCHGF",3,0)
 Q
"RTN","LEXCHGF",4,0)
 ;                     
"RTN","LEXCHGF",5,0)
 ; External References
"RTN","LEXCHGF",6,0)
 ;   DBIA 10006  ^DIC
"RTN","LEXCHGF",7,0)
 ;   DBIA  2056  $$GET1^DIQ
"RTN","LEXCHGF",8,0)
 ;                  
"RTN","LEXCHGF",9,0)
ITEM ; Display an Item in the Change File
"RTN","LEXCHGF",10,0)
 N LEXIEN,LEXLOG,DIC,DTOUT,DUOUT,X,Y S LEXIEN=$$CF Q:+LEXIEN'>0  W !!
"RTN","LEXCHGF",11,0)
 S LEXLOG=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",4)
"RTN","LEXCHGF",12,0)
 W:$L($G(IOF)) @IOF D CHG(+LEXIEN),LOG(LEXLOG)
"RTN","LEXCHGF",13,0)
 Q
"RTN","LEXCHGF",14,0)
UPDATE ; Display Contents of an Update
"RTN","LEXCHGF",15,0)
 N LEXUP S LEXUP=$$CL Q:+LEXUP'>0  D CON^LEXCHGF2(+LEXUP)
"RTN","LEXCHGF",16,0)
 Q
"RTN","LEXCHGF",17,0)
LOG(X) ; Display Entry in the Log File - 757.9
"RTN","LEXCHGF",18,0)
 N LEXCD,LEXCT,LEXSC,LEXID,LEXRE,LEXIEN S LEXIEN=+($G(X)) Q:+LEXIEN'>0
"RTN","LEXCHGF",19,0)
 S LEXCD=$$GET1^DIQ(757.9,(+LEXIEN_","),.01),LEXCT=$$GET1^DIQ(757.9,(+LEXIEN_","),.02),LEXSC=$$GET1^DIQ(757.9,(+LEXIEN_","),.03),LEXID=$$GET1^DIQ(757.9,(+LEXIEN_","),.04),LEXRE=$$GET1^DIQ(757.9,(+LEXIEN_","),.05)
"RTN","LEXCHGF",20,0)
 W !!,"CHANGE DATE:   ",$$MIX(LEXCD),?35,"CHANGE TYPE: ",LEXCT
"RTN","LEXCHGF",21,0)
 W !,"CHANGE REASON: ",LEXRE,?35,"CHANGE ID:   ",LEXID
"RTN","LEXCHGF",22,0)
 W !,"SDO/AGENCY:    ",LEXSC,!!
"RTN","LEXCHGF",23,0)
 Q
"RTN","LEXCHGF",24,0)
CHG(X) ; Display Entry in the Change File - 757.91
"RTN","LEXCHGF",25,0)
 N LEXCHG,LEXCODE,LEXDE,LEXED,LEXI,LEXIEN,LEXLE,LEXNXT,LEXPCOD,LEXPE
"RTN","LEXCHGF",26,0)
 N LEXPSTX,LEXRE,LEXREM,LEXSDES,LEXSRC,LEXST,LEXSTO,LEXSTX,LEXT,LEXTE
"RTN","LEXCHGF",27,0)
 S LEXIEN=+($G(X)) Q:+LEXIEN'>0  Q:'$D(^LEXC(757.91,+LEXIEN))
"RTN","LEXCHGF",28,0)
 S LEXCHG=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",4)
"RTN","LEXCHGF",29,0)
 S LEXCODE=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",1)
"RTN","LEXCHGF",30,0)
 S LEXSRC=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",2)
"RTN","LEXCHGF",31,0)
 S LEXSRC=$P($G(^LEX(757.03,+LEXSRC,0)),"^",2)
"RTN","LEXCHGF",32,0)
 S LEXSTX=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",3)
"RTN","LEXCHGF",33,0)
 S LEXPCOD=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",8)
"RTN","LEXCHGF",34,0)
 S LEXPSTX=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",9)
"RTN","LEXCHGF",35,0)
 S LEXSDES=$P($G(^LEXC(757.91,+LEXIEN,1)),"^",1)
"RTN","LEXCHGF",36,0)
 W !,"CODE:          ",LEXCODE
"RTN","LEXCHGF",37,0)
 W ?42,"CODING SYSTEM:  ",LEXSRC
"RTN","LEXCHGF",38,0)
 S LEXED=$$MIX($$GET1^DIQ(757.91,(+LEXIEN_","),.05))
"RTN","LEXCHGF",39,0)
 S LEXST=$$MIX($$GET1^DIQ(757.91,(+LEXIEN_","),.06))
"RTN","LEXCHGF",40,0)
 S LEXRE=$$MIX($$GET1^DIQ(757.91,(+LEXIEN_","),.07))
"RTN","LEXCHGF",41,0)
 W !,"STATUS:        ",LEXST
"RTN","LEXCHGF",42,0)
 W ?42,"EFFECTIVE DATE: ",LEXED
"RTN","LEXCHGF",43,0)
 W !,"STATUS REASON: ",LEXRE
"RTN","LEXCHGF",44,0)
 W:$L(LEXPCOD) !,"PREVIOUS CODE: ",LEXPCOD
"RTN","LEXCHGF",45,0)
 W !,"SHORT TEXT:    ",LEXSTX
"RTN","LEXCHGF",46,0)
 W:$L(LEXPSTX) !,"PREVIOUS TEXT: ",LEXPSTX
"RTN","LEXCHGF",47,0)
 S LEXLE=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",10),LEXLE=$S(+LEXLE>0:("^LEX(757.01,"_+LEXLE_")"),1:"")
"RTN","LEXCHGF",48,0)
 S LEXDE=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",11),LEXDE=$S(+LEXDE>0:("^ICD9("_+LEXDE_")"),1:"")
"RTN","LEXCHGF",49,0)
 S LEXPE=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",12),LEXPE=$S(+LEXPE>0:("^ICD0("_+LEXPE_")"),1:"")
"RTN","LEXCHGF",50,0)
 S LEXTE=$P($G(^LEXC(757.91,+LEXIEN,0)),"^",13),LEXTE=$S(+LEXTE>0:("^ICPT("_+LEXTE_")"),1:"")
"RTN","LEXCHGF",51,0)
 S LEXT="" S:$L(LEXLE) LEXT=LEXT_LEXLE S:$L(LEXDE) LEXT=LEXT_", "_LEXDE S:$L(LEXPE) LEXT=LEXT_", "_LEXPE S:$L(LEXTE) LEXT=LEXT_", "_LEXTE F  Q:$E(LEXT,1,2)'=", "  S LEXT=$E(LEXT,3,$L(LEXT))
"RTN","LEXCHGF",52,0)
 W !,"GLOBAL REF(s): "
"RTN","LEXCHGF",53,0)
 W:'$L((LEXLE_LEXDE_LEXPE_LEXTE)) ?15,"None",!
"RTN","LEXCHGF",54,0)
 W:$L(LEXLE) ?15,LEXLE W:$L(LEXLE)&($L((LEXDE_LEXPE_LEXTE))) !
"RTN","LEXCHGF",55,0)
 W:$L(LEXDE) ?15,LEXDE W:$L((LEXDE))&($L((LEXPE_LEXTE))) !
"RTN","LEXCHGF",56,0)
 W:$L(LEXPE) ?15,LEXPE W:$L((LEXPE))&($L(LEXTE)) !
"RTN","LEXCHGF",57,0)
 W:$L(LEXTE) ?15,LEXTE
"RTN","LEXCHGF",58,0)
 W !,"DESCRIPTION:   "
"RTN","LEXCHGF",59,0)
 I $L(LEXSDES) D
"RTN","LEXCHGF",60,0)
 . N LEXREM,LEXSTO S LEXREM=LEXSDES F  D  Q:'$L(LEXREM)
"RTN","LEXCHGF",61,0)
 . . S:$L(LEXREM)'>77 LEXSTO=LEXREM
"RTN","LEXCHGF",62,0)
 . . S:$L(LEXREM)>77 LEXSTO=$P($E(LEXREM,1,77)," ",1,($L($E(LEXREM,1,77)," ")-1))
"RTN","LEXCHGF",63,0)
 . . W:$L($$TRIM(LEXSTO)) !,"  ",LEXSTO S LEXREM=$$TRIM($P(LEXREM,LEXSTO,2,299)) Q:'$L(LEXREM)
"RTN","LEXCHGF",64,0)
 I '$L(LEXSDES) D
"RTN","LEXCHGF",65,0)
 . N LEXI,LEXREM,LEXSTO,LEXNXT S (LEXREM,LEXSTO)=""
"RTN","LEXCHGF",66,0)
 . S LEXI=0 F  S LEXI=$O(^LEXC(757.91,+LEXIEN,2,LEXI)) Q:+LEXI=0  D
"RTN","LEXCHGF",67,0)
 . . S LEXNXT=$$TRIM($G(^LEXC(757.91,+LEXIEN,2,+LEXI,0)))
"RTN","LEXCHGF",68,0)
 . . S LEXREM=$$TRIM(($$TRIM(LEXREM)_" "_LEXNXT))
"RTN","LEXCHGF",69,0)
 . . I $L(LEXREM)<77 W !,"  ",LEXREM S LEXREM="" Q
"RTN","LEXCHGF",70,0)
 . . F  D  Q:$L(LEXREM)<77
"RTN","LEXCHGF",71,0)
 . . . S:$L(LEXREM)'>77 LEXSTO=LEXREM
"RTN","LEXCHGF",72,0)
 . . . S:$L(LEXREM)>77 LEXSTO=$P($E(LEXREM,1,77)," ",1,($L($E(LEXREM,1,77)," ")-1))
"RTN","LEXCHGF",73,0)
 . . . W:$L($$TRIM(LEXSTO)) !,"  ",LEXSTO S LEXREM=$$TRIM($P(LEXREM,LEXSTO,2,299))
"RTN","LEXCHGF",74,0)
 S LEXT=$P($G(^LEXC(757.91,+LEXIEN,3)),"^",1)
"RTN","LEXCHGF",75,0)
 I $L(LEXT) D
"RTN","LEXCHGF",76,0)
 . W !,"LEXICON TEXT:  "
"RTN","LEXCHGF",77,0)
 . N LEXREM,LEXSTO S LEXREM=LEXT F  D  Q:'$L(LEXREM)
"RTN","LEXCHGF",78,0)
 . . S:$L(LEXREM)'>77 LEXSTO=LEXREM
"RTN","LEXCHGF",79,0)
 . . S:$L(LEXREM)>77 LEXSTO=$P($E(LEXREM,1,77)," ",1,($L($E(LEXREM,1,77)," ")-1))
"RTN","LEXCHGF",80,0)
 . . W:$L($$TRIM(LEXSTO)) !,"  ",LEXSTO
"RTN","LEXCHGF",81,0)
 . . S LEXREM=$$TRIM($P(LEXREM,LEXSTO,2,299))
"RTN","LEXCHGF",82,0)
 I $P($G(^LEXC(757.91,+LEXIEN,4,0)),"^",3)>0 D
"RTN","LEXCHGF",83,0)
 . W !,"LEXICON DEFINITION:  "
"RTN","LEXCHGF",84,0)
 . N LEXI,LEXREM,LEXSTO,LEXNXT S (LEXREM,LEXSTO)=""
"RTN","LEXCHGF",85,0)
 . S LEXI=0 F  S LEXI=$O(^LEXC(757.91,+LEXIEN,4,LEXI)) Q:+LEXI=0  D
"RTN","LEXCHGF",86,0)
 . . S LEXNXT=$$TRIM($G(^LEXC(757.91,+LEXIEN,4,+LEXI,0)))
"RTN","LEXCHGF",87,0)
 . . S:+LEXI=1 LEXNXT=$$LC(LEXNXT)
"RTN","LEXCHGF",88,0)
 . . S LEXREM=$$TRIM(($$TRIM(LEXREM)_" "_LEXNXT))
"RTN","LEXCHGF",89,0)
 . . I $L(LEXREM)<77 W !,"  ",LEXREM S LEXREM="" Q
"RTN","LEXCHGF",90,0)
 . . F  D  Q:$L(LEXREM)<77
"RTN","LEXCHGF",91,0)
 . . . S:$L(LEXREM)'>77 LEXSTO=LEXREM
"RTN","LEXCHGF",92,0)
 . . . S:$L(LEXREM)>77 LEXSTO=$P($E(LEXREM,1,77)," ",1,($L($E(LEXREM,1,77)," ")-1))
"RTN","LEXCHGF",93,0)
 . . . W:$L($$TRIM(LEXSTO)) !,"  ",LEXSTO S LEXREM=$$TRIM($P(LEXREM,LEXSTO,2,299))
"RTN","LEXCHGF",94,0)
 Q
"RTN","LEXCHGF",95,0)
CD(X) ; Lookup Change Date
"RTN","LEXCHGF",96,0)
 S X=$$CL Q:+X'>0 -1  Q $P($G(^LEXC(757.9,+X,0)),"^",1)
"RTN","LEXCHGF",97,0)
CF(X) ; Lookup Change File
"RTN","LEXCHGF",98,0)
 N LEXIEN,LEXLG,DIC,DTOUT,DUOUT,X,Y S DIC=757.91,DIC(0)="AEMQ",DIC("A")="Select CLASSIFICATION CODE:  "
"RTN","LEXCHGF",99,0)
 D ^DIC S X=+Y Q:X'>0 -1  Q X
"RTN","LEXCHGF",100,0)
CL(X) ; Lookup Change Log
"RTN","LEXCHGF",101,0)
 N LEXIEN,LEXLG,DIC,DTOUT,DUOUT,X,Y S DIC=757.9,DIC(0)="AEMQ",DIC("A")="Select CHANGE/EFFECTIVE DATE:  "
"RTN","LEXCHGF",102,0)
 D ^DIC S X=+Y Q:X'>0 -1  Q X
"RTN","LEXCHGF",103,0)
 ;                     
"RTN","LEXCHGF",104,0)
 ; Miscellaneous
"RTN","LEXCHGF",105,0)
TRIM(X) ;   Trim Spaces
"RTN","LEXCHGF",106,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXCHGF",107,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXCHGF",108,0)
 Q X
"RTN","LEXCHGF",109,0)
MIX(X) ;   Mixed Case
"RTN","LEXCHGF",110,0)
 S X=$G(X) N LEXTXT,I S LEXTXT=""
"RTN","LEXCHGF",111,0)
 F I=1:1:$L(X," ") S LEXTXT=LEXTXT_" "_$$UP($E($P(X," ",I),1))_$$LO($E($P(X," ",I),2,$L($P(X," ",I))))
"RTN","LEXCHGF",112,0)
 F  Q:$E(LEXTXT,1)'=" "  S LEXTXT=$E(LEXTXT,2,$L(LEXTXT))
"RTN","LEXCHGF",113,0)
 S X=LEXTXT Q X
"RTN","LEXCHGF",114,0)
LC(X) ;   Leading Character
"RTN","LEXCHGF",115,0)
 S X=$$UP($E(X,1))_$E(X,2,$L(X)) Q X
"RTN","LEXCHGF",116,0)
UP(X) ;   Uppercase
"RTN","LEXCHGF",117,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXCHGF",118,0)
LO(X) ;   Lowercase
"RTN","LEXCHGF",119,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXCHGF2")
0^20^B21566747
"RTN","LEXCHGF2",1,0)
LEXCHGF2 ;ISL/KER - Lexicon Change File              ; 05/14/2003
"RTN","LEXCHGF2",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXCHGF2",3,0)
 Q
"RTN","LEXCHGF2",4,0)
 ;                     
"RTN","LEXCHGF2",5,0)
 ; External References
"RTN","LEXCHGF2",6,0)
 ;   DBIA 10086  ^%ZIS
"RTN","LEXCHGF2",7,0)
 ;   DBIA 10089  ^%ZISC
"RTN","LEXCHGF2",8,0)
 ;   DBIA 10063  ^%ZTLOAD
"RTN","LEXCHGF2",9,0)
 ;   DBIA  2056  $$GET1^DIQ
"RTN","LEXCHGF2",10,0)
 ;                     
"RTN","LEXCHGF2",11,0)
CON(X) ; Change Contents
"RTN","LEXCHGF2",12,0)
 K ^TMP("LEXCHGL",$J) N LEXC,LEXCD,LEXCODE,LEXCT,LEXH1,LEXH2,LEXDES
"RTN","LEXCHGF2",13,0)
 N LEXI,LEXLN,LEXLOG,LEXRE,LEXRE,LEXREA,LEXS,LEXSC,LEXSTX,LEXWHY
"RTN","LEXCHGF2",14,0)
 N LEX1,LEX2 S LEXLOG=+($G(X)) Q:+LEXLOG'>0
"RTN","LEXCHGF2",15,0)
 S LEXCD=$$GET1^DIQ(757.9,(+LEXLOG_","),.01),LEXCT=$$GET1^DIQ(757.9,(+LEXLOG_","),.02),LEXRE=$$GET1^DIQ(757.9,(+LEXLOG_","),.05)
"RTN","LEXCHGF2",16,0)
 S LEXSC=$P($G(^LEXC(757.902,+($P($G(^LEXC(757.9,+LEXLOG,0)),"^",3)),0)),"^",2)
"RTN","LEXCHGF2",17,0)
 S LEXH1=LEXCT S:$L(LEXSC) LEXH1=LEXH1_" ("_LEXSC_")" S:$L(LEXRE) LEXH1=LEXH1_" "_LEXRE S:$L(LEXCD) LEXH1=LEXH1_" - "_LEXCD
"RTN","LEXCHGF2",18,0)
 S LEXDES=LEXCT S:$L(LEXCD) LEXDES=LEXDES_" Changes for "_LEXCD S LEXDES=$$TRIM^LEXCHGF(LEXDES)
"RTN","LEXCHGF2",19,0)
 S LEXH2="CODE",LEXH2=LEXH2_$J("",(10-$L(LEXH2)))_" STATUS",LEXH2=LEXH2_$J("",(23-$L(LEXH2)))_"ACTION"
"RTN","LEXCHGF2",20,0)
 S LEXH2=LEXH2_$J("",(32-$L(LEXH2)))_"SHORT TEXT" S LEXC="" K ^TMP("LEXCHGC",$J)
"RTN","LEXCHGF2",21,0)
 F  S LEXC=$O(^LEXC(757.91,"ACHG",+($G(LEXLOG)),LEXC)) Q:LEXC=""  S LEXS="" D
"RTN","LEXCHGF2",22,0)
 . F  S LEXS=$O(^LEXC(757.91,"ACHG",+($G(LEXLOG)),LEXC,LEXS)) Q:LEXS=""  S LEXI=0 D
"RTN","LEXCHGF2",23,0)
 . . F  S LEXI=$O(^LEXC(757.91,"ACHG",+($G(LEXLOG)),LEXC,LEXS,LEXI)) Q:+LEXI=0  D
"RTN","LEXCHGF2",24,0)
 . . . S LEXCODE=$P($G(^LEXC(757.91,+LEXI,0)),"^",1),LEXRE=$$GET1^DIQ(757.91,(+LEXI_","),.07)
"RTN","LEXCHGF2",25,0)
 . . . S LEXREA=" ACTIVE" S:LEXRE["INACT" LEXREA="INACTIVE" S LEXWHY=$S(LEXREA["INACT":"DELETED",1:"ADDED")
"RTN","LEXCHGF2",26,0)
 . . . S:LEXRE["EDIT" LEXWHY="EDITED" S LEXSTX=$E($P($G(^LEXC(757.91,+LEXI,0)),"^",3),1,47)
"RTN","LEXCHGF2",27,0)
 . . . S LEXLN=LEXCODE,LEXLN=LEXCODE,LEXLN=LEXLN_$J("",(10-$L(LEXLN)))_LEXREA,LEXLN=LEXLN_$J("",(23-$L(LEXLN)))_LEXWHY,LEXLN=LEXLN_$J("",(32-$L(LEXLN)))_LEXSTX
"RTN","LEXCHGF2",28,0)
 . . . S LEX1=$S(LEXRE["INACT":2,1:1),LEX2=$S(LEXWHY["ADD":1,LEXWHY["EDIT":2,LEXWHY["DEL":3,1:4)
"RTN","LEXCHGF2",29,0)
 . . . S ^TMP("LEXCHGC",$J,(LEXCODE_" "),LEX1,LEX2)=$$UP^LEXCHGF(LEXLN)
"RTN","LEXCHGF2",30,0)
 S LEXC="" F  S LEXC=$O(^TMP("LEXCHGC",$J,LEXC)) Q:LEXC=""  D
"RTN","LEXCHGF2",31,0)
 . S LEX1="" F  S LEX1=$O(^TMP("LEXCHGC",$J,LEXC,LEX1)) Q:LEX1=""  D
"RTN","LEXCHGF2",32,0)
 . . S LEX2="" F  S LEX2=$O(^TMP("LEXCHGC",$J,LEXC,LEX1,LEX2)) Q:LEX2=""  D
"RTN","LEXCHGF2",33,0)
 . . . N LEXI S LEXI=+($G(^TMP("LEXCHGL",$J,+LEXLOG,0)))+1
"RTN","LEXCHGF2",34,0)
 . . . S ^TMP("LEXCHGL",$J,+LEXLOG,+LEXI,0)=$G(^TMP("LEXCHGC",$J,LEXC,LEX1,LEX2))
"RTN","LEXCHGF2",35,0)
 . . . S ^TMP("LEXCHGL",$J,+LEXLOG,0)=+LEXI
"RTN","LEXCHGF2",36,0)
 . . . S:$L($G(LEXH1)) ^TMP("LEXCHGL",$J,+LEXLOG,+LEXI,1)=$G(LEXH1)
"RTN","LEXCHGF2",37,0)
 . . . S:$L($G(LEXH2)) ^TMP("LEXCHGL",$J,+LEXLOG,+LEXI,2)=$G(LEXH2)
"RTN","LEXCHGF2",38,0)
 K ^TMP("LEXCHGC",$J) D DSP
"RTN","LEXCHGF2",39,0)
 Q
"RTN","LEXCHGF2",40,0)
 ;                      
"RTN","LEXCHGF2",41,0)
DSP ; Display (Device/Task/Que)
"RTN","LEXCHGF2",42,0)
 Q:'$D(^TMP("LEXCHGL",$J))  D DEV Q
"RTN","LEXCHGF2",43,0)
DEV ;   Select a Device
"RTN","LEXCHGF2",44,0)
 W ! N DIC,DIR,POP,X,Y,%,%ZIS,IOP,ZTRTN,ZTSAVE,ZTDESC,ZTDTH,ZTIO,ZTSK
"RTN","LEXCHGF2",45,0)
 S ZTRTN="DSPI^LEXCHGF2",ZTDESC=$S($L($G(LEXDES)):("Printing "_LEXDES),1:"Printing Lexicon Changes")
"RTN","LEXCHGF2",46,0)
 S ZTIO=ION,ZTDTH=$H,%ZIS="PQ",ZTSAVE("^TMP(""LEXCHGL"",$J,")=""
"RTN","LEXCHGF2",47,0)
 D ^%ZIS Q:POP  S ZTIO=ION I $D(IO("Q")) D QUE,^%ZISC Q
"RTN","LEXCHGF2",48,0)
 D NOQUE Q
"RTN","LEXCHGF2",49,0)
NOQUE ;   Do not Que Task
"RTN","LEXCHGF2",50,0)
 W @IOF W:IOST["P-" !,"< Not queued, printing ",$S($L($G(LEXDES)):(LEXDES_" "),1:""),">",! H 2
"RTN","LEXCHGF2",51,0)
 U:IOST["P-" IO D @ZTRTN,^%ZISC Q
"RTN","LEXCHGF2",52,0)
QUE ;   Task Queued to Print
"RTN","LEXCHGF2",53,0)
 K IO("Q") D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued",1:"Request Cancelled"),! H 2 Q
"RTN","LEXCHGF2",54,0)
 Q
"RTN","LEXCHGF2",55,0)
 ;                      
"RTN","LEXCHGF2",56,0)
DSPI ; Display ^TMP("LEXCHGL",$J)
"RTN","LEXCHGF2",57,0)
 N LEX1,LEXACT,LEXH1,LEXH2,LEXEX,LEXI,LEXT,LEXLL,LEXLG,LEXTC,LEXTL
"RTN","LEXCHGF2",58,0)
 N LEXLC,LEXH1,LEXH2,LEXH3,LEXH4 S (LEXEX,LEXI,LEXLC,LEXLL,LEXTL,LEXLG)=0
"RTN","LEXCHGF2",59,0)
 S LEX1="-------------------------------------------------------------------------------"
"RTN","LEXCHGF2",60,0)
 S LEXACT="" S:$E(IOST,1,2)["P-"!($E(IOST,1,2)["C-") LEXACT="C"
"RTN","LEXCHGF2",61,0)
 F  S LEXLG=$O(^TMP("LEXCHGL",$J,LEXLG)) Q:+LEXLG=0  Q:LEXEX  D  Q:LEXEX
"RTN","LEXCHGF2",62,0)
 . S LEXI=0,LEXTC=0
"RTN","LEXCHGF2",63,0)
 . F  S LEXI=$O(^TMP("LEXCHGL",$J,LEXLG,LEXI)) Q:+LEXI=0  Q:LEXEX  D  Q:LEXEX
"RTN","LEXCHGF2",64,0)
 . . Q:LEXEX>0  S LEXT=$G(^TMP("LEXCHGL",$J,LEXLG,LEXI,0))
"RTN","LEXCHGF2",65,0)
 . . S LEXTC=LEXTC+1,LEXLC=LEXLC+1,LEXTL=LEXTL+1
"RTN","LEXCHGF2",66,0)
 . . S LEXH1=$G(^TMP("LEXCHGL",$J,+LEXLG,+LEXI,1))
"RTN","LEXCHGF2",67,0)
 . . S LEXH2=$G(^TMP("LEXCHGL",$J,+LEXLG,+LEXI,2))
"RTN","LEXCHGF2",68,0)
 . . S:$O(^TMP("LEXCHGL",$J,LEXLG,LEXI))=0 LEXLL=1
"RTN","LEXCHGF2",69,0)
 . . D FF Q:LEXEX>0
"RTN","LEXCHGF2",70,0)
 . . S:$O(^TMP("LEXCHGL",$J,LEXLG,LEXI))=0 LEXEX=1
"RTN","LEXCHGF2",71,0)
 . . Q:LEXT=""&(LEXEX=1)
"RTN","LEXCHGF2",72,0)
 . . W !,LEXT
"RTN","LEXCHGF2",73,0)
 K ^TMP("LEXCHGL",$J)
"RTN","LEXCHGF2",74,0)
 Q
"RTN","LEXCHGF2",75,0)
FF ;   Form Feed
"RTN","LEXCHGF2",76,0)
 S LEXLC=+($G(LEXLC)),LEXTL=+($G(LEXTL))
"RTN","LEXCHGF2",77,0)
 I LEXTL=1!(LEXTC=1) W @IOF D TOF Q
"RTN","LEXCHGF2",78,0)
 Q:LEXLC<((+($G(IOSL)))-4)
"RTN","LEXCHGF2",79,0)
 D:$E(IOST,1,2)["C-" CONT D:$E(IOST,1,2)["P-" PRTF
"RTN","LEXCHGF2",80,0)
 Q
"RTN","LEXCHGF2",81,0)
CONT ;   Continue
"RTN","LEXCHGF2",82,0)
 N LEXANS W !!,"  Press <Return> to continue  "
"RTN","LEXCHGF2",83,0)
 R LEXANS:300 S:'$T LEXEX=1
"RTN","LEXCHGF2",84,0)
 S:LEXANS["^" LEXEX=1 Q:+($G(LEXEX))>0
"RTN","LEXCHGF2",85,0)
 W:LEXACT="C" @IOF D:LEXACT="C" TOF
"RTN","LEXCHGF2",86,0)
 Q
"RTN","LEXCHGF2",87,0)
PRTF ;   Printer Feed
"RTN","LEXCHGF2",88,0)
 I LEXACT="C" W @IOF D:+($G(LEXTL))>1 TOF Q
"RTN","LEXCHGF2",89,0)
 Q
"RTN","LEXCHGF2",90,0)
TOF ;   Top of Form
"RTN","LEXCHGF2",91,0)
 S LEXLC=0 I LEXTC=1 D HDR Q
"RTN","LEXCHGF2",92,0)
 I $O(^TMP("LEXCHGL",$J,LEXLG,LEXI))>0 D HDR Q
"RTN","LEXCHGF2",93,0)
 Q
"RTN","LEXCHGF2",94,0)
HDR ;   Report Header
"RTN","LEXCHGF2",95,0)
 W:$L($G(LEXH1)) !,$G(LEXH1) S:$L($G(LEXH1)) LEXLC=LEXLC+1
"RTN","LEXCHGF2",96,0)
 W:$L($G(LEXH2)) !,$G(LEXH2) S:$L($G(LEXH2)) LEXLC=LEXLC+1
"RTN","LEXCHGF2",97,0)
 W:$L($G(LEX1)) !,$G(LEX1) S:$L($G(LEX1)) LEXLC=LEXLC+1
"RTN","LEXCHGF2",98,0)
 Q
"RTN","LEXCODE")
0^15^B7512354
"RTN","LEXCODE",1,0)
LEXCODE ; ISL/KER Retrieval of IEN^Term based on Code ; 05/14/2003
"RTN","LEXCODE",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXCODE",3,0)
 ;
"RTN","LEXCODE",4,0)
 ; External References
"RTN","LEXCODE",5,0)
 ;   DBIA  10104  $$UP^XLFSTR
"RTN","LEXCODE",6,0)
 ;                   
"RTN","LEXCODE",7,0)
 Q
"RTN","LEXCODE",8,0)
 ; EN^LEXCODE(X,LEXVDT)
"RTN","LEXCODE",9,0)
 ;                   
"RTN","LEXCODE",10,0)
 ;   X        Code taken from a classification 
"RTN","LEXCODE",11,0)
 ;            system listed in Coding Systems
"RTN","LEXCODE",12,0)
 ;            file #757.03
"RTN","LEXCODE",13,0)
 ;                   
"RTN","LEXCODE",14,0)
 ;   LEXVDT   The date against which the codes 
"RTN","LEXCODE",15,0)
 ;            found by the search will be compared
"RTN","LEXCODE",16,0)
 ;            in order to determine whether they 
"RTN","LEXCODE",17,0)
 ;            are active or inactive. If null is 
"RTN","LEXCODE",18,0)
 ;            passed then it should default to
"RTN","LEXCODE",19,0)
 ;            the current date.
"RTN","LEXCODE",20,0)
 ;                   
"RTN","LEXCODE",21,0)
 ; Returns Local Array
"RTN","LEXCODE",22,0)
 ;     LEXS(0)=X
"RTN","LEXCODE",23,0)
 ;     LEXS(SAB,0)=#
"RTN","LEXCODE",24,0)
 ;     LEXS(SAB,#)=IEN^TERM
"RTN","LEXCODE",25,0)
 ;                   
"RTN","LEXCODE",26,0)
 ; 3 character mnemonics for SAB (Source Abbreviation)
"RTN","LEXCODE",27,0)
 ;                   
"RTN","LEXCODE",28,0)
 ;     SAB   Nomenclature  Source
"RTN","LEXCODE",29,0)
 ;     -----------------------------------------------------------
"RTN","LEXCODE",30,0)
 ;     ICD     ICD-9-CM    Int'l Class of Disease (Diagnosis)
"RTN","LEXCODE",31,0)
 ;     ICP     ICD-9-CM    Int'l Class of Disease (Procedures)
"RTN","LEXCODE",32,0)
 ;     CPT     CPT-4       Current Procedural Terminology
"RTN","LEXCODE",33,0)
 ;     DSM     DSM-IIIR    Diag & Stat Manual of Mental Disorders
"RTN","LEXCODE",34,0)
 ;     SNM     SNOMED      Systematic Nomenclature for Medicine
"RTN","LEXCODE",35,0)
 ;     NAN     NANDA       North American Nursing Diagnosis Assoc
"RTN","LEXCODE",36,0)
 ;     NIC                 Nursing Intervention Classification
"RTN","LEXCODE",37,0)
 ;     OMA                 Omaha Nursing Diagnosis/Interventions
"RTN","LEXCODE",38,0)
 ;     ACR                 American College of Radiology (Diag)
"RTN","LEXCODE",39,0)
 ;     AIR     AI/RHEUM    National Library of Medicine source
"RTN","LEXCODE",40,0)
 ;     COS     COSTAR      Computer Stored Ambulatory Records
"RTN","LEXCODE",41,0)
 ;     CST     COSTART     Coding Sym Thes Adverse Reaction Terms
"RTN","LEXCODE",42,0)
 ;     DXP     DXPLAIN     Diagnostic Prompting System
"RTN","LEXCODE",43,0)
 ;     MCM                 McMaster University (Epidemiology)
"RTN","LEXCODE",44,0)
 ;     UMD                 Universal Medical Device Nomemclature
"RTN","LEXCODE",45,0)
 ;     CSP     CRISP    
"RTN","LEXCODE",46,0)
 ;     UWA                 University of Washington (Neuronames)
"RTN","LEXCODE",47,0)
 ;                   
"RTN","LEXCODE",48,0)
 ; Example returned array using code 309.24
"RTN","LEXCODE",49,0)
 ;                   
"RTN","LEXCODE",50,0)
 ;     LEXS(0)=309.24
"RTN","LEXCODE",51,0)
 ;     LEXS("DSM",0)=1
"RTN","LEXCODE",52,0)
 ;     LEXS("DSM",1)=3273^Adjustment disorder with anxious mood
"RTN","LEXCODE",53,0)
 ;     LEXS("ICD",0)=2
"RTN","LEXCODE",54,0)
 ;     LEXS("ICD",1)=268308^Adjustment reaction with anxious mood
"RTN","LEXCODE",55,0)
 ;     LEXS("ICD",2)=3273^Adjustment disorder with anxious mood
"RTN","LEXCODE",56,0)
 ;                   
"RTN","LEXCODE",57,0)
 Q
"RTN","LEXCODE",58,0)
EN(LEX,LEXVDT) ; Get terms associated with a Code
"RTN","LEXCODE",59,0)
 K LEXS S LEX=$$UP^XLFSTR($G(LEX)) Q:'$L(LEX)
"RTN","LEXCODE",60,0)
 N LEXSRC,LEXSO,LEXO,LEXSAB,LEXDA,LEXPF,LEXINA,LEXSTA
"RTN","LEXCODE",61,0)
 S LEXS(0)=LEX,LEXO=LEX_" ",LEXDA=0 Q:'$D(^LEX(757.02,"CODE",LEXO))
"RTN","LEXCODE",62,0)
 F  S LEXDA=$O(^LEX(757.02,"CODE",LEXO,LEXDA)) Q:+LEXDA=0  D CHK
"RTN","LEXCODE",63,0)
 D ASEM Q
"RTN","LEXCODE",64,0)
CHK ; Check if Valid
"RTN","LEXCODE",65,0)
 S LEXSO=$P($G(^LEX(757.02,LEXDA,0)),"^",2) Q:LEXSO'=LEX
"RTN","LEXCODE",66,0)
 S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,$G(LEXVDT)) Q:+LEXSTA'>0
"RTN","LEXCODE",67,0)
 S LEXSRC=+($P($G(^LEX(757.02,LEXDA,0)),"^",3)) Q:LEXSRC'>0
"RTN","LEXCODE",68,0)
 S LEXSAB=$E($G(^LEX(757.03,+LEXSRC,0)),1,3) Q:$L(LEXSAB)'=3
"RTN","LEXCODE",69,0)
 S LEXPF=+($P($G(^LEX(757.02,LEXDA,0)),"^",5))
"RTN","LEXCODE",70,0)
 S:LEXPF=1 LEXS(LEXSAB,"PRE")=LEXDA
"RTN","LEXCODE",71,0)
 S:LEXPF'=1 LEXS(LEXSAB,"OTH",LEXDA)=""
"RTN","LEXCODE",72,0)
 Q
"RTN","LEXCODE",73,0)
ASEM ; Assemble List
"RTN","LEXCODE",74,0)
 Q:'$D(LEXS)
"RTN","LEXCODE",75,0)
 N LEXSAB,LEXCT,LEXDA,LEXEX,LEXEXP,LEXY S LEXSAB=""
"RTN","LEXCODE",76,0)
 F  S LEXSAB=$O(LEXS(LEXSAB)) Q:LEXSAB=""  S LEXCT=0 D
"RTN","LEXCODE",77,0)
 . I $D(LEXS(LEXSAB,"PRE")) D LEXY
"RTN","LEXCODE",78,0)
 . S LEXDA=0
"RTN","LEXCODE",79,0)
 . F  S LEXDA=$O(LEXS(LEXSAB,"OTH",LEXDA)) Q:+LEXDA=0  D LEXY
"RTN","LEXCODE",80,0)
 . S:+LEXSAB'>0&(LEXSAB'="0") LEXS(LEXSAB,0)=LEXCT
"RTN","LEXCODE",81,0)
 Q
"RTN","LEXCODE",82,0)
LEXY ; Get IEN^TERM for Code X
"RTN","LEXCODE",83,0)
 S:$D(LEXS(LEXSAB,"PRE")) LEXDA=LEXS(LEXSAB,"PRE")
"RTN","LEXCODE",84,0)
 K:'$D(LEXS(LEXSAB,"PRE")) LEXS(LEXSAB,"OTH",LEXDA) K LEXS(LEXSAB,"PRE")
"RTN","LEXCODE",85,0)
 S LEXY="",LEXEX=+($P($G(^LEX(757.02,LEXDA,0)),"^",1))
"RTN","LEXCODE",86,0)
 Q:'$L($G(^LEX(757.01,+LEXEX,0)))
"RTN","LEXCODE",87,0)
 S LEXEXP=$G(^LEX(757.01,+LEXEX,0)),LEXCT=LEXCT+1,LEXY=LEXEX_"^"_LEXEXP
"RTN","LEXCODE",88,0)
 S LEXS(LEXSAB,LEXCT)=LEXY
"RTN","LEXCODE",89,0)
 Q
"RTN","LEXEDF1")
0^28^B14571584
"RTN","LEXEDF1",1,0)
LEXEDF1 ; ISL Edit/Display a Definition (Part 1)   ; 05/14/2003
"RTN","LEXEDF1",2,0)
 ;;2.0;LEXICON UTILITY;**3,25**;Sep 23, 1996
"RTN","LEXEDF1",3,0)
 ;
"RTN","LEXEDF1",4,0)
 N DIC,DIE,DIR,DIROUT,DIRUT,DLAYGO,DR,DTOUT,DUOUT,DA,X,Y
"RTN","LEXEDF1",5,0)
 N LEX,LEXAID,LEXC,LEXDIC0,LEXE,LEXI,LEXL,LEXLC
"RTN","LEXEDF1",6,0)
 N LEXMC,LEXME,LEXMP,LEXS,LEXSAV,LEXST,LEXTY,LEXX
"RTN","LEXEDF1",7,0)
 K X I $D(DUZ)#2=0 G EXIT
"RTN","LEXEDF1",8,0)
ASK ; Ask user to select an expression to edit the definition
"RTN","LEXEDF1",9,0)
 N LEXAP S DIC("A")="Enter a concept to edit definition:  "
"RTN","LEXEDF1",10,0)
 S:'$D(DIC(0)) DIC(0)="QEAM" S LEXAP=1 D ^LEXA1 I X=""!(+Y'>0) G EXIT
"RTN","LEXEDF1",11,0)
 I +Y<3,+Y>0 D  G EXIT
"RTN","LEXEDF1",12,0)
 . W !,"The definition for ",^LEX(757.01,+Y,0)," is not editable"
"RTN","LEXEDF1",13,0)
 S LEXE=$$EXP^LEXEDF2(+Y) G:'$D(LEXE) EXIT
"RTN","LEXEDF1",14,0)
 ;
"RTN","LEXEDF1",15,0)
 I LEXE="" D  G:'$D(LEXE) ASK G:LEXE="" EXIT
"RTN","LEXEDF1",16,0)
 . W !!,"No selection made, try again using the same concept"
"RTN","LEXEDF1",17,0)
AGAIN . ; Ask user to try again using the same expression
"RTN","LEXEDF1",18,0)
 . S %=2 D YN^DICN S DIC(0)=$S(%=1:"QEM",1:"QEAM")
"RTN","LEXEDF1",19,0)
 . S LEXE=$S(%=-1:"",%=2:"",1:%) K:LEXE=% LEXE W:%=1 ! Q:%'=0
"RTN","LEXEDF1",20,0)
 . I '% D  G AGAIN
"RTN","LEXEDF1",21,0)
 . . W !!,"You were given various forms of an expression "
"RTN","LEXEDF1",22,0)
 . . W "(concept, synonyms and"
"RTN","LEXEDF1",23,0)
 . . W !,"lexical variants) to select from.  "
"RTN","LEXEDF1",24,0)
 . . W "Do you wish to try again using"
"RTN","LEXEDF1",25,0)
 . . W !,"the same concept"
"RTN","LEXEDF1",26,0)
 D:+($G(LEXE))>1&($D(^LEX(757.01,+($G(LEXE)),0))) EDIT(LEXE) G EXIT  ; PCH 3
"RTN","LEXEDF1",27,0)
EDIT(LEXE) ; Edit the expression definition
"RTN","LEXEDF1",28,0)
 W !,$E(^LEX(757.01,LEXE,0),1,78),! K ^TMP("LEXDEF",$J)
"RTN","LEXEDF1",29,0)
 G:'$D(LEXE) EDITQ
"RTN","LEXEDF1",30,0)
 S LEXMP=0 I $D(^LEX(757.01,LEXE,3,0)) D
"RTN","LEXEDF1",31,0)
 . S ^TMP("LEXDEF",$J,4)="Old Definition:"
"RTN","LEXEDF1",32,0)
 . S ^TMP("LEXDEF",$J,5)=^LEX(757.01,LEXE,3,0),(LEXMP,LEXLC)=0
"RTN","LEXEDF1",33,0)
 . F  S LEXLC=$O(^LEX(757.01,LEXE,3,LEXLC)) Q:+LEXLC=0  D
"RTN","LEXEDF1",34,0)
 . . S LEXMP=LEXLC+5
"RTN","LEXEDF1",35,0)
 . . S ^TMP("LEXDEF",$J,LEXMP)=^LEX(757.01,LEXE,3,LEXLC,0)
"RTN","LEXEDF1",36,0)
 N LEXDIC0 S DA=+LEXE,DIE="^LEX(757.01,",DR="6"
"RTN","LEXEDF1",37,0)
 S:DIC(0)'["L" DIC(0)=DIC(0)_"L" S LEXDIC0=DIC(0),DLAYGO=757
"RTN","LEXEDF1",38,0)
 L +^LEX(757.01,LEXE):1
"RTN","LEXEDF1",39,0)
 I '$T D  G EDITQ
"RTN","LEXEDF1",40,0)
 . W !,"This record is being edited by "
"RTN","LEXEDF1",41,0)
 . W "another user, try again later"
"RTN","LEXEDF1",42,0)
 S LEXSAV=0 D SNAP^LEXEDF2(+LEXE),^DIE,SHOT^LEXEDF2(+LEXE)
"RTN","LEXEDF1",43,0)
 S LEX=$$CHANGE^LEXEDF2
"RTN","LEXEDF1",44,0)
 I +LEX>0 S LEXSAV=$$SAVE^LEXEDF2
"RTN","LEXEDF1",45,0)
 I 'LEXSAV,+LEX>0 D RESTORE^LEXEDF2(+LEXE)
"RTN","LEXEDF1",46,0)
 K DLAYGO,LEXDIC0 L -^LEX(757.01,LEXE) G:+LEX=0!(+LEXSAV=0) RESULTS
"RTN","LEXEDF1",47,0)
 I $D(^LEX(757.01,LEXE,3,0)) D
"RTN","LEXEDF1",48,0)
 . S ^TMP("LEXDEF",$J,1)="TXT:  "_^LEX(757.01,LEXE,0)
"RTN","LEXEDF1",49,0)
 . S ^TMP("LEXDEF",$J,2)="IFN:  "_LEXE,^TMP("LEXDEF",$J,3)=""
"RTN","LEXEDF1",50,0)
 S:LEXMP=0 LEXMP=2
"RTN","LEXEDF1",51,0)
 I $D(^LEX(757.01,LEXE,3,0)) D
"RTN","LEXEDF1",52,0)
 . S ^TMP("LEXDEF",$J,(LEXMP+1))=""
"RTN","LEXEDF1",53,0)
 . S ^TMP("LEXDEF",$J,LEXMP+2)="New Definition:"
"RTN","LEXEDF1",54,0)
 . S ^TMP("LEXDEF",$J,LEXMP+3)=^LEX(757.01,LEXE,3,0)
"RTN","LEXEDF1",55,0)
 . S LEXMP=LEXMP+4
"RTN","LEXEDF1",56,0)
 . S LEXLC=0 F  S LEXLC=$O(^LEX(757.01,LEXE,3,LEXLC)) Q:+LEXLC=0  D
"RTN","LEXEDF1",57,0)
 . . S ^TMP("LEXDEF",$J,LEXMP)=^LEX(757.01,LEXE,3,LEXLC,0)
"RTN","LEXEDF1",58,0)
 . . S LEXMP=LEXMP+1
"RTN","LEXEDF1",59,0)
 D:+LEX>0&(+LEXSAV>0) SENDDEF
"RTN","LEXEDF1",60,0)
RESULTS ; Display results of edit
"RTN","LEXEDF1",61,0)
 I +LEXSAV=0 D
"RTN","LEXEDF1",62,0)
 . I +LEX W !,"Changes to the definition were not saved" Q
"RTN","LEXEDF1",63,0)
 . W !,"No changes made"
"RTN","LEXEDF1",64,0)
 I +LEXSAV>0 W !,$P(LEX,U,2)
"RTN","LEXEDF1",65,0)
EDITQ ; Quit edit
"RTN","LEXEDF1",66,0)
 K DIC,DIE,DIR,DLAYGO,DR,LEX,LEXAID,LEXC,LEXDIC0
"RTN","LEXEDF1",67,0)
 K LEXE,LEXI,LEXL,LEXLC,LEXMC,LEXME,LEXMP,LEXS
"RTN","LEXEDF1",68,0)
 K LEXSAV,LEXST,LEXTY,LEXX,^TMP("LEXDEF",$J) Q
"RTN","LEXEDF1",69,0)
DISP(LEXX) ; Display a definition
"RTN","LEXEDF1",70,0)
 Q:+($G(LEXX))=0  I '$D(^LEX(757.01,LEXX,3,1,0)) Q
"RTN","LEXEDF1",71,0)
 N X S X=0 F  S X=$O(^LEX(757.01,LEXX,3,X)) Q:+X=0  D
"RTN","LEXEDF1",72,0)
 . W:X=1 !!,"Definition:  ",! W !,^LEX(757.01,LEXX,3,X,0)
"RTN","LEXEDF1",73,0)
 Q
"RTN","LEXEDF1",74,0)
EXIT ; Clean up and exit
"RTN","LEXEDF1",75,0)
 K DIC,DIE,DIR,DLAYGO,DR,DA,X,Y,LEX,LEXAID,LEXC,LEXDIC0
"RTN","LEXEDF1",76,0)
 K LEXE,LEXI,LEXL,LEXLC,LEXMC,LEXME,LEXMP,LEXS
"RTN","LEXEDF1",77,0)
 K LEXSAV,LEXST,LEXTY,LEXX,^TMP("LEXDEF",$J) Q
"RTN","LEXEDF1",78,0)
SENDDEF ; Send edited definition to ISC
"RTN","LEXEDF1",79,0)
 N DIFROM,LEXADR K XMZ Q:'$D(^TMP("LEXDEF",$J))  S LEXADR=$$ADR^LEXU Q:'$L(LEXADR)
"RTN","LEXEDF1",80,0)
 S XMSUB=$P(LEX,U,2)_" in Expression File (#757.01)"
"RTN","LEXEDF1",81,0)
 S XMY(("G.LEXICON@"_LEXADR))=""
"RTN","LEXEDF1",82,0)
 S XMTEXT="^TMP(""LEXDEF"",$J,",XMDUZ=.5 D ^XMD
"RTN","LEXEDF1",83,0)
 K ^TMP("LEXDEF",$J),XCNP,XMDUZ,XMY("G.LEXICON@ISC-SLC.VA.GOV"),XMZ
"RTN","LEXEDF1",84,0)
 K XMSUB,XMY,XMTEXT
"RTN","LEXEDF1",85,0)
 Q
"RTN","LEXLGM")
0^27^B24937877
"RTN","LEXLGM",1,0)
LEXLGM ; ISL Lexicon Survey (Post Inst/Oper)     ; 05/14/2003
"RTN","LEXLGM",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXLGM",3,0)
 ;
"RTN","LEXLGM",4,0)
EN ; Operational Task
"RTN","LEXLGM",5,0)
 K ^TMP("LEXMSG")
"RTN","LEXLGM",6,0)
 S ZTRTN="OPR^LEXLGM",ZTDESC="Lexicon Terms in Problem List",ZTIO="",ZTDTH=$H
"RTN","LEXLGM",7,0)
 D ^%ZTLOAD,HOME^%ZIS K %X,%Y,Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN Q
"RTN","LEXLGM",8,0)
 Q
"RTN","LEXLGM",9,0)
EN2 ; Post-Install Task
"RTN","LEXLGM",10,0)
 K ^TMP("LEXMSG")
"RTN","LEXLGM",11,0)
 S ZTRTN="POST^LEXLGM",ZTDESC="Lexicon Installation",ZTIO="",ZTDTH=$H
"RTN","LEXLGM",12,0)
 D ^%ZTLOAD,HOME^%ZIS K %X,%Y,Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN Q
"RTN","LEXLGM",13,0)
 Q
"RTN","LEXLGM",14,0)
OPR ; Operational Survey
"RTN","LEXLGM",15,0)
 K ^TMP("LEXMSG") N LEXTYPE S LEXTYPE="O"
"RTN","LEXLGM",16,0)
 N LEXQ,LEXVERS,LEXFI,LEXDT,LEXS
"RTN","LEXLGM",17,0)
 D DATE S:'$D(LEXDT) LEXDT="" S LEXVERS=$$VR
"RTN","LEXLGM",18,0)
 D PLT^LEXLGM3,ASOF^LEXLGM3,PLUR^LEXLGM3,SG,SEND
"RTN","LEXLGM",19,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXLGM",20,0)
 Q
"RTN","LEXLGM",21,0)
POST ; Post-Install Survey
"RTN","LEXLGM",22,0)
 K ^TMP("LEXMSG") N LEXTYPE,LEXQ,LEXVERS,LEXFI,LEXDT,LEXS
"RTN","LEXLGM",23,0)
 S LEXTYPE="P" D DATE S:'$D(LEXDT) LEXDT="" S LEXVERS=$$VR
"RTN","LEXLGM",24,0)
 D TITLE,INIT D:+LEXVERS>1 INST,ACCT,WHO D:+LEXVERS'>1 ATTPT,ACCT,WHO
"RTN","LEXLGM",25,0)
 D BL,POST^LEXLGM2,PLUR^LEXLGM3,VER,SG,SEND
"RTN","LEXLGM",26,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXLGM",27,0)
 Q
"RTN","LEXLGM",28,0)
SG ; Show TMP Global
"RTN","LEXLGM",29,0)
 N LEXI S LEXI=0 F  S LEXI=$O(^TMP("LEXMSG",LEXI)) Q:+LEXI=0  W:'$D(ZTQUEUED) !,^TMP("LEXMSG",LEXI)
"RTN","LEXLGM",30,0)
 Q
"RTN","LEXLGM",31,0)
SEND ; Create message to send to ISC-SLC
"RTN","LEXLGM",32,0)
 N LEXADR,DIFROM Q:'$D(ZTQUEUED)  Q:'$L($G(LEXTYPE))  S LEXADR=$$ADR^LEXU Q:'$L(LEXADR)
"RTN","LEXLGM",33,0)
 N LEXT S LEXT=$G(LEXTYPE) Q:"OP"'[LEXT
"RTN","LEXLGM",34,0)
 K XMZ S:LEXT="P" XMSUB="Lexicon Installation" S:LEXT="O" XMSUB="Lexicon/Problem List Survey"
"RTN","LEXLGM",35,0)
 S XMY(("G.LEXICON@"_LEXADR))=""
"RTN","LEXLGM",36,0)
 S XMTEXT="^TMP(""LEXMSG"",",XMDUZ=.5 D ^XMD
"RTN","LEXLGM",37,0)
 K ^TMP("LEXMSG"),XCNP,XMDUZ,XMY,XMZ,XMSUB,XMTEXT,XMDUZ,LEXT
"RTN","LEXLGM",38,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXLGM",39,0)
 Q
"RTN","LEXLGM",40,0)
TITLE N LEXS,LEXVERS S LEXS="Lexicon Installation"
"RTN","LEXLGM",41,0)
 S LEXVERS=$P($G(^DD(757.01,0,"VR")),"^",1)
"RTN","LEXLGM",42,0)
 S:+LEXVERS>1 LEXS=LEXS_" v"_LEXVERS D SET($G(LEXS)) Q
"RTN","LEXLGM",43,0)
VER ; Verify
"RTN","LEXLGM",44,0)
 I +($G(LEXQ))>0 D  Q
"RTN","LEXLGM",45,0)
 . D BL S LEXS="Lexicon v 2.0 not completely installed"
"RTN","LEXLGM",46,0)
 . S LEXQ=1 D SET($G(LEXS))
"RTN","LEXLGM",47,0)
 D BL S LEXS="Lexicon v 2.0 installed" D SET($G(LEXS))
"RTN","LEXLGM",48,0)
 Q
"RTN","LEXLGM",49,0)
VR(LEXX) ; Version
"RTN","LEXLGM",50,0)
 S LEXX=$P($G(^DD(757.01,0,"VR")),"^",1) Q LEXX
"RTN","LEXLGM",51,0)
INIT ; Init/Install
"RTN","LEXLGM",52,0)
 N LEXS,LEXR,LEX1,LEX2,LEX4 I $L($T(+2^LEXLGM))>2 D
"RTN","LEXLGM",53,0)
 . S LEX1=$T(+2^LEXLGM)
"RTN","LEXLGM",54,0)
 . S LEX1=$P(LEX1,";",3),LEXR="^DD(",LEX4=1
"RTN","LEXLGM",55,0)
 . S LEX2="Lexicon Utility"
"RTN","LEXLGM",56,0)
 . D BL S LEXS="    Installing Version:" D SET($G(LEXS))
"RTN","LEXLGM",57,0)
 . S LEXS="    "_LEX1 D SET2($G(LEXS))
"RTN","LEXLGM",58,0)
 Q
"RTN","LEXLGM",59,0)
INST ; Installed on
"RTN","LEXLGM",60,0)
 N LEXS
"RTN","LEXLGM",61,0)
 I LEXDT'="" D  Q
"RTN","LEXLGM",62,0)
 . S LEXS="    Installed on:" D SET($G(LEXS))
"RTN","LEXLGM",63,0)
 . S LEXS="    "_LEXDT D SET2($G(LEXS))
"RTN","LEXLGM",64,0)
 D:$L($G(LEXS)) SET($G(LEXS)) Q
"RTN","LEXLGM",65,0)
ATTPT ; Attempted install on
"RTN","LEXLGM",66,0)
 N LEXS I $G(LEXDT)'="" D
"RTN","LEXLGM",67,0)
 . S LEXS="    Installation Attempted on:" D SET($G(LEXS))
"RTN","LEXLGM",68,0)
 . S LEXS=LEXDT D SET2($G(LEXS))
"RTN","LEXLGM",69,0)
 Q
"RTN","LEXLGM",70,0)
ACCT ; Account
"RTN","LEXLGM",71,0)
 N LEXS,LEXA X ^%ZOSF("UCI") S LEXA=Y
"RTN","LEXLGM",72,0)
 S:Y=^%ZOSF("PROD") LEXA=LEXA_" (Production)"
"RTN","LEXLGM",73,0)
 S:Y'=^%ZOSF("PROD") LEXA=LEXA_" (Test)"
"RTN","LEXLGM",74,0)
 S LEXS="    Installation in account:" D SET($G(LEXS))
"RTN","LEXLGM",75,0)
 S LEXS="    "_LEXA D SET2($G(LEXS))
"RTN","LEXLGM",76,0)
 Q
"RTN","LEXLGM",77,0)
WHO ; Installed by
"RTN","LEXLGM",78,0)
 N LEXDUZ,LEXPH S LEXDUZ=+($G(DUZ)) I +LEXDUZ<1 S LEXDUZ="UNKNOWN",LEXPH="" G W2
"RTN","LEXLGM",79,0)
 I '$D(^VA(200,LEXDUZ)) S LEXDUZ="UNKNOWN",LEXPH="" G W2
"RTN","LEXLGM",80,0)
 S LEXPH=$P($G(^VA(200,LEXDUZ,.13)),"^",2)
"RTN","LEXLGM",81,0)
 S:LEXPH="" LEXPH=$P($G(^VA(200,LEXDUZ,.13)),"^",1)
"RTN","LEXLGM",82,0)
 S:LEXPH="" LEXPH=$P($G(^VA(200,LEXDUZ,.13)),"^",3)
"RTN","LEXLGM",83,0)
 S:LEXPH="" LEXPH=$P($G(^VA(200,LEXDUZ,.13)),"^",4)
"RTN","LEXLGM",84,0)
 S LEXDUZ=$P(^VA(200,LEXDUZ,0),"^",1) S:LEXDUZ="" LEXDUZ="UNKNOWN"
"RTN","LEXLGM",85,0)
W2 S LEXS="    Installation by (POC):" D SET($G(LEXS))
"RTN","LEXLGM",86,0)
 S LEXS="    "_LEXDUZ S:LEXPH'="" LEXS=LEXS_"  ("_LEXPH_")"
"RTN","LEXLGM",87,0)
 D SET2($G(LEXS))
"RTN","LEXLGM",88,0)
 Q
"RTN","LEXLGM",89,0)
BL ; Blank Line
"RTN","LEXLGM",90,0)
 D SET("") Q
"RTN","LEXLGM",91,0)
SET(X) ; Set text in ^TMP (col 1)
"RTN","LEXLGM",92,0)
 S X=$G(X) N LEXLC S LEXLC=+($G(^TMP("LEXMSG",0))),LEXLC=LEXLC+1
"RTN","LEXLGM",93,0)
 S ^TMP("LEXMSG",0)=LEXLC,^TMP("LEXMSG",LEXLC)=X
"RTN","LEXLGM",94,0)
 Q
"RTN","LEXLGM",95,0)
SET2(X) ; Set text in ^TMP (col 2)
"RTN","LEXLGM",96,0)
 S X=$G(X) N LEXL,LEXLC,LEX1 S LEXL=32
"RTN","LEXLGM",97,0)
 S LEXLC=+($G(^TMP("LEXMSG",0))),LEX1=$G(^TMP("LEXMSG",LEXLC))
"RTN","LEXLGM",98,0)
 F  Q:$L(LEX1)=LEXL!($L(LEX1)>LEXL)  S LEX1=LEX1_" "
"RTN","LEXLGM",99,0)
 S X=$$TRIM(X),^TMP("LEXMSG",LEXLC)=LEX1_"  "_X
"RTN","LEXLGM",100,0)
 Q
"RTN","LEXLGM",101,0)
TRIM(X) ; Remove spaces from text
"RTN","LEXLGM",102,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXLGM",103,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXLGM",104,0)
 Q X
"RTN","LEXLGM",105,0)
DATE ; Installation Date and Time
"RTN","LEXLGM",106,0)
 N %,%H,X,LEXP,LEXMO,LEXDA,LEXYR,LEXHR,LEXMN,LEXSC D NOW^%DTC Q:+($G(%))=0
"RTN","LEXLGM",107,0)
 N LEXP,LEXMO,LEXDA,LEXYR,LEXHR,LEXMN,LEXSC S LEXYR=1700+($E(%,1,3)),LEXP=+($E(%,4,5)),LEXDA=+($E(%,6,7)),LEXHR=$E($P(%,".",2),1,2),LEXMN=$E($P(%,".",2),3,4),LEXSC=$E($P(%,".",2),5,6)
"RTN","LEXLGM",108,0)
 S LEXMO=$S(+LEXP=1:"January",+LEXP=2:"February",+LEXP=3:"March",+LEXP=4:"April",+LEXP=5:"May",+LEXP=6:"June",+LEXP=7:"July",+LEXP=8:"August",+LEXP=9:"September",+LEXP=10:"October",+LEXP=11:"November",+LEXP=12:"December",1:"")
"RTN","LEXLGM",109,0)
 S:$L(LEXSC)=1 LEXSC=LEXSC_"0" I LEXMO'="" S LEXDT=LEXMO_" "_LEXDA_", "_LEXYR_" at "_LEXHR_":"_LEXMN_":"_LEXSC
"RTN","LEXLGM",110,0)
 Q
"RTN","LEXNDX7")
0^3^B12564019
"RTN","LEXNDX7",1,0)
LEXNDX7 ; ISL/KER Set/kill indexes (Misc) ; 05/14/2003
"RTN","LEXNDX7",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXNDX7",3,0)
 ;                      
"RTN","LEXNDX7",4,0)
 ; Cross-Reference code for file 757.91
"RTN","LEXNDX7",5,0)
 ;                                                      
"RTN","LEXNDX7",6,0)
 Q
"RTN","LEXNDX7",7,0)
AI ; Check Codes
"RTN","LEXNDX7",8,0)
 N LEXI,LEXACT,LEXDEA,LEXTOT,LEXMIS
"RTN","LEXNDX7",9,0)
 S LEXTOT=0,LEXI=0 F  S LEXI=$O(^LEXC(757.91,LEXI)) Q:+LEXI=0  S LEXTOT=LEXTOT+1
"RTN","LEXNDX7",10,0)
 S LEXACT=0,LEXI="" F  S LEXI=$O(^LEXC(757.91,"ACT",LEXI)) Q:LEXI=""  S LEXACT=LEXACT+1
"RTN","LEXNDX7",11,0)
 S LEXDEA=0,LEXI="" F  S LEXI=$O(^LEXC(757.91,"AIN",LEXI)) Q:LEXI=""  S LEXDEA=LEXDEA+1
"RTN","LEXNDX7",12,0)
 S LEXMIS=0,LEXI=0 F  S LEXI=$O(^LEXC(757.91,LEXI)) Q:+LEXI=0  D
"RTN","LEXNDX7",13,0)
 . S CODE=$P($G(^LEXC(757.91,+($G(LEXI)),0)),"^",1) Q:'$L(CODE)
"RTN","LEXNDX7",14,0)
 . I '$D(^LEXC(757.91,"ACT",(CODE_" ")))&('$D(^LEXC(757.91,"AIN",(CODE_" ")))) S LEXMIS=LEXMIS+1
"RTN","LEXNDX7",15,0)
 W !!,"Total Codes:     ",$J(LEXTOT,6),!,"Active Codes:    ",$J(LEXACT,6),!,"Inactive Codes:  ",$J(LEXDEA,6) W:+LEXMIS>0&(+LEXMIS'=+LEXDEA) !,"Miscellaneous:   ",$J(LEXMIS,6) W !
"RTN","LEXNDX7",16,0)
 Q
"RTN","LEXNDX7",17,0)
SACT ; Set Active Node
"RTN","LEXNDX7",18,0)
 N CODE,STAT,EDAT,LDAT S CODE=$P($G(^LEXC(757.91,+($G(DA)),0)),"^",1) Q:'$L(CODE)
"RTN","LEXNDX7",19,0)
 S STAT=+($P($G(^LEXC(757.91,+($G(DA)),0)),"^",6)),EDAT=$P($G(^LEXC(757.91,+($G(DA)),0)),"^",5) Q:+EDAT=0
"RTN","LEXNDX7",20,0)
 S LDAT=+($O(^LEXC(757.91,"ACT",(CODE_" ")," "),-1)) K:+EDAT'=+LDAT!(+LDAT=0) ^LEXC(757.91,"ACT",(CODE_" "),+EDAT,DA)
"RTN","LEXNDX7",21,0)
 S LDAT=+($O(^LEXC(757.91,"AIN",(CODE_" ")," "),-1)) K:+EDAT'=+LDAT!(+LDAT=0) ^LEXC(757.91,"AIN",(CODE_" "),+EDAT,DA)
"RTN","LEXNDX7",22,0)
 I +STAT>0 D
"RTN","LEXNDX7",23,0)
 . S LDAT=+($O(^LEXC(757.91,"AIN",(CODE_" ")," "),-1)) K:+LDAT'>+EDAT!(+LDAT=0) ^LEXC(757.91,"AIN",(CODE_" "),+LDAT) S LDAT=+($O(^LEXC(757.91,"ACT",(CODE_" "),0)))
"RTN","LEXNDX7",24,0)
 . I +LDAT'>+EDAT!(+LDAT=0) K ^LEXC(757.91,"ACT",(CODE_" "),+LDAT,DA) S ^LEXC(757.91,"ACT",(CODE_" "),+EDAT,DA)=""
"RTN","LEXNDX7",25,0)
 I +STAT'>0 D
"RTN","LEXNDX7",26,0)
 . S LDAT=+($O(^LEXC(757.91,"ACT",(CODE_" ")," "),-1)) K:+LDAT'>+EDAT!(+LDAT=0) ^LEXC(757.91,"ACT",(CODE_" "),+LDAT) S LDAT=+($O(^LEXC(757.91,"AIN",(CODE_" "),0)))
"RTN","LEXNDX7",27,0)
 . I +LDAT'>+EDAT!(+LDAT=0) K ^LEXC(757.91,"AIN",(CODE_" "),+LDAT,DA) S ^LEXC(757.91,"AIN",(CODE_" "),+EDAT,DA)=""
"RTN","LEXNDX7",28,0)
 Q
"RTN","LEXNDX7",29,0)
KACT ; Kill Active Node
"RTN","LEXNDX7",30,0)
 N CODE,STAT,EDAT S CODE=$P($G(^LEXC(757.91,+($G(DA)),0)),"^",1) Q:'$L(CODE)
"RTN","LEXNDX7",31,0)
 S STAT=+($P($G(^LEXC(757.91,+($G(DA)),0)),"^",6)),EDAT=$P($G(^LEXC(757.91,+($G(DA)),0)),"^",5) Q:+EDAT=0
"RTN","LEXNDX7",32,0)
 K ^LEXC(757.91,"ACT",(CODE_" "),+EDAT,DA),^LEXC(757.91,"AIN",(CODE_" "),+EDAT,DA)
"RTN","LEXNDX7",33,0)
 Q
"RTN","LEXNDX7",34,0)
SSYS ; Set Active Node by System
"RTN","LEXNDX7",35,0)
 N CODE,SYS,FILE,STAT S CODE=$P($G(^LEXC(757.91,+($G(DA)),0)),"^",1) Q:'$L(CODE)
"RTN","LEXNDX7",36,0)
 S SYS=$$SYS(CODE) Q:SYS="^"
"RTN","LEXNDX7",37,0)
 Q
"RTN","LEXNDX7",38,0)
KSYS ; Kill Active Node by System
"RTN","LEXNDX7",39,0)
 N CODE,STAT,EDAT S CODE=$P($G(^LEXC(757.91,+($G(DA)),0)),"^",1) Q:'$L(CODE)
"RTN","LEXNDX7",40,0)
 S STAT=+($P($G(^LEXC(757.91,+($G(DA)),0)),"^",6)),EDAT=$P($G(^LEXC(757.91,+($G(DA)),0)),"^",5) Q:+EDAT=0
"RTN","LEXNDX7",41,0)
 K ^LEXC(757.91,"ACT",(CODE_" "),+EDAT,DA),^LEXC(757.91,"AIN",(CODE_" "),+EDAT,DA)
"RTN","LEXNDX7",42,0)
 Q
"RTN","LEXNDX7",43,0)
SYS(X) ; Classification System
"RTN","LEXNDX7",44,0)
 N CODE S CODE=$G(X) Q:'$L(CODE) "^"
"RTN","LEXNDX7",45,0)
 Q:CODE?5N!(CODE?4N1U) "CPT^81"  Q:CODE?1U4N "CPC^81"  Q:CODE?2N1P!(CODE?2N1P1N)!(CODE?2N1P2N)!(CODE?2N1P3N) "ICP^80.1"
"RTN","LEXNDX7",46,0)
 Q:CODE?3N1P!(CODE?3N1P1N)!(CODE?3N1P2N)!(CODE?3N1P3N)!(CODE?1U3N1P)!(CODE?1U3N1P1N)!(CODE?1U3N1P2N)!(CODE?1U2N1P)!(CODE?1U2N1P1N)!(CODE?1U2N1P2N) "ICD^80"
"RTN","LEXNDX7",47,0)
 Q "^"
"RTN","LEXNDX8")
0^4^B32650581
"RTN","LEXNDX8",1,0)
LEXNDX8 ; ISL/KER/FJF Set/kill indexes 757.02 ; 05/14/2003
"RTN","LEXNDX8",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXNDX8",3,0)
 ;                    
"RTN","LEXNDX8",4,0)
 ; Set and Kill Activation History
"RTN","LEXNDX8",5,0)
 ;   File 757.02, field 1
"RTN","LEXNDX8",6,0)
SAHC ;     Set new value when Code is Edited
"RTN","LEXNDX8",7,0)
 ;          ^DD(757.02,1,1,D0,1) = D SAHC^LEXNDX8
"RTN","LEXNDX8",8,0)
 N LEXCOD,LEXCODX,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",9,0)
 S LEXCODX=$G(X) Q:'$L(LEXCODX)  S LEXIEN=+($G(DA)) Q:+LEXIEN'>0
"RTN","LEXNDX8",10,0)
 S LEXSYS=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",3)) Q:LEXSYS'>0
"RTN","LEXNDX8",11,0)
 S LEXPRF=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",5))
"RTN","LEXNDX8",12,0)
 S LEXSYS=$E($G(^LEX(757.03,+LEXSYS,0)),1,3) Q:$L(LEXSYS)'=3
"RTN","LEXNDX8",13,0)
 I $D(^LEX(757.02,+LEXIEN,4,"B")) S LEXHIS=0 D  Q
"RTN","LEXNDX8",14,0)
 . F  S LEXHIS=$O(^LEX(757.02,+LEXIEN,4,LEXHIS)) Q:+LEXHIS=0  D
"RTN","LEXNDX8",15,0)
 . . N DA,X S DA=+LEXHIS,DA(1)=+LEXIEN D HDC
"RTN","LEXNDX8",16,0)
 . . S LEXCOD=LEXCODX Q:'$L($G(LEXCOD))  Q:'$L($G(LEXEFF))
"RTN","LEXNDX8",17,0)
 . . Q:'$L($G(LEXSTA))  D SHIS
"RTN","LEXNDX8",18,0)
 Q
"RTN","LEXNDX8",19,0)
KAHC ;   Kill old value when Code is Edited
"RTN","LEXNDX8",20,0)
 ;   ^DD(757.02,1,1,D0,2) = D KAHC^LEXNDX8
"RTN","LEXNDX8",21,0)
 N LEXCOD,LEXCODX,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",22,0)
 S LEXCODX=$G(X) Q:'$L(LEXCODX)  S LEXIEN=+($G(DA)) Q:+LEXIEN'>0
"RTN","LEXNDX8",23,0)
 S LEXSYS=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",3)) Q:LEXSYS'>0
"RTN","LEXNDX8",24,0)
 S LEXSYS=$E($G(^LEX(757.03,+LEXSYS,0)),1,3) Q:$L(LEXSYS)'=3
"RTN","LEXNDX8",25,0)
 S LEXPRF=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",5))
"RTN","LEXNDX8",26,0)
 I $D(^LEX(757.02,+LEXIEN,4,"B")) S LEXHIS=0 D  Q
"RTN","LEXNDX8",27,0)
 . F  S LEXHIS=$O(^LEX(757.02,+LEXIEN,4,LEXHIS)) Q:+LEXHIS=0  D
"RTN","LEXNDX8",28,0)
 . . N DA,X S DA=+LEXHIS,DA(1)=+LEXIEN D HDC
"RTN","LEXNDX8",29,0)
 . . S LEXCOD=LEXCODX Q:'$L($G(LEXCOD))  Q:'$L($G(LEXEFF))
"RTN","LEXNDX8",30,0)
 . . Q:'$L($G(LEXSTA))  D KHIS
"RTN","LEXNDX8",31,0)
 Q
"RTN","LEXNDX8",32,0)
 ;                    
"RTN","LEXNDX8",33,0)
 ;   File 757.28, field .01
"RTN","LEXNDX8",34,0)
SAHD ;   Set new value when Effective Date is Edited
"RTN","LEXNDX8",35,0)
 ;   ^DD(757.28,.01,1,D0,1) = D SAHD^LEXNDX8
"RTN","LEXNDX8",36,0)
 N LEXCOD,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",37,0)
 D HDC Q:'$L($G(LEXCOD))
"RTN","LEXNDX8",38,0)
 Q:'$L($G(LEXSTA))  S LEXEFF=+($G(X)) Q:+LEXEFF=0  D SHIS
"RTN","LEXNDX8",39,0)
 Q
"RTN","LEXNDX8",40,0)
KAHD ;   Kill old value when Effective Date is Edited
"RTN","LEXNDX8",41,0)
 ;   ^DD(757.28,.01,1,D0,2) = D KAHD^LEXIDX8
"RTN","LEXNDX8",42,0)
 N LEXCOD,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",43,0)
 D HDC Q:'$L($G(LEXCOD))
"RTN","LEXNDX8",44,0)
 Q:'$L($G(LEXSTA))  S LEXEFF=+($G(X)) Q:+LEXEFF=0  D KHIS
"RTN","LEXNDX8",45,0)
 Q
"RTN","LEXNDX8",46,0)
 ;                    
"RTN","LEXNDX8",47,0)
 ;   File 757.28 field 1
"RTN","LEXNDX8",48,0)
SAHS ;   Set new value when Status is Edited
"RTN","LEXNDX8",49,0)
 ;   ^DD(757.28,1,1,D0,1) = D SAHS^LEXNDX8
"RTN","LEXNDX8",50,0)
 N LEXCOD,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",51,0)
 D HDC Q:'$L($G(LEXCOD))  Q:+LEXEFF=0
"RTN","LEXNDX8",52,0)
 S LEXSTA=$G(X) Q:'$L(LEXSTA)  D SHIS
"RTN","LEXNDX8",53,0)
 Q
"RTN","LEXNDX8",54,0)
KAHS ;   Kill old value when Status is Edited
"RTN","LEXNDX8",55,0)
 ;   ^DD(757.28,1,1,D0,2) = D KAHS^LEXIDX8
"RTN","LEXNDX8",56,0)
 N LEXCOD,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",57,0)
 D HDC Q:'$L($G(LEXCOD))  Q:+LEXEFF=0
"RTN","LEXNDX8",58,0)
 S LEXSTA=$G(X)  Q:'$L(LEXSTA)  D KHIS
"RTN","LEXNDX8",59,0)
 Q
"RTN","LEXNDX8",60,0)
 ;                    
"RTN","LEXNDX8",61,0)
HDC ;  Set Common Variables (Code, Status and Effective Date)
"RTN","LEXNDX8",62,0)
 S (LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXCOD,LEXSTA,LEXEFF)=""  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0
"RTN","LEXNDX8",63,0)
 Q:'$D(^LEX(757.02,+($G(DA(1))),4,+($G(DA)),0))
"RTN","LEXNDX8",64,0)
 S LEXCOD=$P($G(^LEX(757.02,+($G(DA(1))),0)),"^",2)
"RTN","LEXNDX8",65,0)
 S LEXPRF=+($P($G(^LEX(757.02,+($G(DA(1))),0)),"^",5))
"RTN","LEXNDX8",66,0)
 S LEXNOD=$G(^LEX(757.02,+($G(DA(1))),4,+($G(DA)),0))
"RTN","LEXNDX8",67,0)
 S LEXSTA=$P(LEXNOD,"^",2),LEXEFF=$P(LEXNOD,"^",1)
"RTN","LEXNDX8",68,0)
 S LEXSTA=$S(LEXSTA="A":1,LEXSTA="I":0,1:LEXSTA)
"RTN","LEXNDX8",69,0)
 S LEXDSYS=+($P($G(^LEX(757.02,+($G(DA(1))),0)),"^",3))
"RTN","LEXNDX8",70,0)
 S LEXDSYS=$E($G(^LEX(757.03,+LEXDSYS,0)),1,3)
"RTN","LEXNDX8",71,0)
 S LEXDSTA=$$DF(+($G(DA(1))),$G(LEXCOD))
"RTN","LEXNDX8",72,0)
 S LEXDSTA=$S(+LEXDSTA'>0:1,1:0)
"RTN","LEXNDX8",73,0)
 S LEXDDT=$$DDTBR(LEXDSYS,LEXDSTA)
"RTN","LEXNDX8",74,0)
 Q
"RTN","LEXNDX8",75,0)
DHDC ;  Set Default Common Variables (Code, Status and Effective Date)
"RTN","LEXNDX8",76,0)
 ;    0 node
"RTN","LEXNDX8",77,0)
 S LEXCOD=$G(LEXCODX),LEXSYS=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",3))
"RTN","LEXNDX8",78,0)
 S (LEXSYS,LEXDSYS)=$E($G(^LEX(757.03,+LEXSYS,0)),1,3)
"RTN","LEXNDX8",79,0)
 S LEXPRF=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",5))
"RTN","LEXNDX8",80,0)
 S LEXSTA=$$DF(+($G(DA(1))),$G(LEXCOD))
"RTN","LEXNDX8",81,0)
 S (LEXSTA,LEXDSTA)=$S(+LEXSTA'>0:1,1:0)
"RTN","LEXNDX8",82,0)
 S LEXEFF=$$DDTBR(LEXSYS,LEXSTA)
"RTN","LEXNDX8",83,0)
 S LEXDDT=$$DDTBR(LEXDSYS,LEXDSTA)
"RTN","LEXNDX8",84,0)
 Q
"RTN","LEXNDX8",85,0)
SHIS ;  Set Index 
"RTN","LEXNDX8",86,0)
 ;  ^LEX(757.02,"ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","LEXNDX8",87,0)
 Q:'$L($G(LEXCOD))  Q:'$L($G(LEXSTA))  Q:'$L($G(LEXEFF)) 
"RTN","LEXNDX8",88,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0
"RTN","LEXNDX8",89,0)
 Q:'$D(^LEX(757.02,+($G(DA(1))),4,+($G(DA)),0))
"RTN","LEXNDX8",90,0)
 K:$L($G(LEXDDT)) ^LEX(757.02,"ACT",(LEXCOD_" "),LEXSTA,LEXDDT,DA(1),0)
"RTN","LEXNDX8",91,0)
 S ^LEX(757.02,"ACT",(LEXCOD_" "),LEXSTA,LEXEFF,DA(1),DA)=""
"RTN","LEXNDX8",92,0)
 I +($G(LEXPRF))>0 D
"RTN","LEXNDX8",93,0)
 . K:$L($G(LEXDDT)) ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXDDT,DA(1),0)
"RTN","LEXNDX8",94,0)
 . S ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXEFF,DA(1),DA)=""
"RTN","LEXNDX8",95,0)
 Q
"RTN","LEXNDX8",96,0)
SDHIS ;  Set Default Index 
"RTN","LEXNDX8",97,0)
 ;  ^LEX(757.02,"ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","LEXNDX8",98,0)
 Q:'$L($G(LEXCOD))  Q:'$L($G(LEXSTA))  Q:'$L($G(LEXEFF))
"RTN","LEXNDX8",99,0)
 Q:+($G(LEXIEN))'>0  Q:'$D(^LEX(757.02,+($G(LEXIEN)),0))
"RTN","LEXNDX8",100,0)
 S ^LEX(757.02,"ACT",(LEXCOD_" "),LEXSTA,LEXEFF,+LEXIEN,0)=""
"RTN","LEXNDX8",101,0)
 I +($G(LEXPRF))>0 D
"RTN","LEXNDX8",102,0)
 . S ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXEFF,+LEXIEN,0)=""
"RTN","LEXNDX8",103,0)
 Q
"RTN","LEXNDX8",104,0)
KHIS ;  Kill Index
"RTN","LEXNDX8",105,0)
 ;  ^LEX(757.02,"ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","LEXNDX8",106,0)
 Q:'$L($G(LEXCOD))  Q:'$L($G(LEXSTA))  Q:'$L($G(LEXEFF))
"RTN","LEXNDX8",107,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0
"RTN","LEXNDX8",108,0)
 Q:'$D(^LEX(757.02,+($G(DA(1))),4,+($G(DA)),0))
"RTN","LEXNDX8",109,0)
 K ^LEX(757.02,"ACT",(LEXCOD_" "),LEXSTA,LEXEFF,DA(1),DA)
"RTN","LEXNDX8",110,0)
 I +($G(LEXPRF))>0 D
"RTN","LEXNDX8",111,0)
 . K:$L($G(LEXDDT)) ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXDDT,DA(1),0)
"RTN","LEXNDX8",112,0)
 . K ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXEFF,DA(1),DA)
"RTN","LEXNDX8",113,0)
 Q
"RTN","LEXNDX8",114,0)
KDHIS ;  Kill Default Index
"RTN","LEXNDX8",115,0)
 ;  ^LEX(757.02,"ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","LEXNDX8",116,0)
 Q:'$L($G(LEXCOD))  Q:'$L($G(LEXSTA))  Q:'$L($G(LEXEFF))
"RTN","LEXNDX8",117,0)
 Q:+($G(LEXIEN))'>0  Q:'$D(^LEX(757.02,+($G(LEXIEN)),0))
"RTN","LEXNDX8",118,0)
 K ^LEX(757.02,"ACT",(LEXCOD_" "),LEXSTA,LEXEFF,+LEXIEN,0)
"RTN","LEXNDX8",119,0)
 I +($G(LEXPRF))>0 D
"RTN","LEXNDX8",120,0)
 . K ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXDDT,+LEXIEN,0)
"RTN","LEXNDX8",121,0)
 Q
"RTN","LEXNDX8",122,0)
DF(X,CODE) ; Default Status
"RTN","LEXNDX8",123,0)
 N LEXI,LEXDF,LEXNF,LEXL,LEXEFF,LEXC,LEXO
"RTN","LEXNDX8",124,0)
 S LEXI=+($G(X)) Q:+LEXI'>0 ""
"RTN","LEXNDX8",125,0)
 S LEXEFF=$O(^LEX(757.02,+LEXI,4,"B"," "),-1)
"RTN","LEXNDX8",126,0)
 S LEXL=$O(^LEX(757.02,+LEXI,4,"B",+LEXEFF,0))
"RTN","LEXNDX8",127,0)
 S LEXL=$P($G(^LEX(757.02,+LEXI,4,+LEXL,0)),"^",2)
"RTN","LEXNDX8",128,0)
 S LEXC=$G(CODE) S:'$L(LEXC) LEXC=$P($G(^LEX(757.02,LEXI,0)),U,2)
"RTN","LEXNDX8",129,0)
 S LEXDF='+$$STATCHK^LEXSRC2(LEXC)
"RTN","LEXNDX8",130,0)
 S LEXO=$P($G(^LEX(757.02,LEXI,0)),U,2)
"RTN","LEXNDX8",131,0)
 S LEXNF=$S(+LEXL=1:"",1:LEXDF)
"RTN","LEXNDX8",132,0)
 S X=LEXNF
"RTN","LEXNDX8",133,0)
 Q X
"RTN","LEXNDX8",134,0)
DDTBR(SYS,STA) ; Default Date Business Rules
"RTN","LEXNDX8",135,0)
 ; Input:
"RTN","LEXNDX8",136,0)
 ;   SYS - System
"RTN","LEXNDX8",137,0)
 ;   STA - Status
"RTN","LEXNDX8",138,0)
 ; Output:
"RTN","LEXNDX8",139,0)
 ;   If Status = 1 (Active)
"RTN","LEXNDX8",140,0)
 ;      If SYS = ICD/ICP  use October 1, 1978      2781001
"RTN","LEXNDX8",141,0)
 ;      If SYS = CPT/CPC  use January 1, 1989      2890101
"RTN","LEXNDX8",142,0)
 ;      If SYS is not listed above, use            2960923
"RTN","LEXNDX8",143,0)
 ;   If Status = 0 (Inactive)
"RTN","LEXNDX8",144,0)
 ;      If SYS = ICD/ICP  use October 2, 1978      2791001
"RTN","LEXNDX8",145,0)
 ;      If SYS = CPT/CPC  use January 2, 1989      2900101
"RTN","LEXNDX8",146,0)
 ;      If SYS is not listed above, use            2960924
"RTN","LEXNDX8",147,0)
 N LEXSTA,LEXSYS,LEXDT
"RTN","LEXNDX8",148,0)
 S LEXSTA=+($G(STA)),LEXSYS=$G(SYS),LEXDT=0
"RTN","LEXNDX8",149,0)
 S:$L(LEXSYS)=3&("^ICD^ICP^CPT^CPC^"'[LEXSYS) LEXSTA=1
"RTN","LEXNDX8",150,0)
 ;   No System, use Lexicon Release Date
"RTN","LEXNDX8",151,0)
 I $L(LEXSYS)'=3 D  Q LEXDT
"RTN","LEXNDX8",152,0)
 . S:+LEXSTA>0 LEXDT=2960923 S:+LEXSTA'>0 LEXDT=2970923
"RTN","LEXNDX8",153,0)
 ;   System is ICD, use 2781001/2791001
"RTN","LEXNDX8",154,0)
 I LEXSYS="ICD"!(LEXSYS="ICP") D  Q LEXDT
"RTN","LEXNDX8",155,0)
 . S:LEXSTA>0 LEXDT=2781001 S:LEXSTA'>0 LEXDT=2791001
"RTN","LEXNDX8",156,0)
 ;   System is CPT, use 2890101/2900101
"RTN","LEXNDX8",157,0)
 I LEXSYS="CPT"!(LEXSYS="CPC") D  Q LEXDT
"RTN","LEXNDX8",158,0)
 . S:LEXSTA>0 LEXDT=2890101 S:LEXSTA'>0 LEXDT=2900101
"RTN","LEXNDX8",159,0)
 ;   System is neither ICD or CPT, use 2960923/2970923
"RTN","LEXNDX8",160,0)
 I "^ICD^ICP^CPT^CPC^"'[LEXSYS D  Q LEXDT
"RTN","LEXNDX8",161,0)
 . S:LEXSTA>0 LEXDT=2960923 S:LEXSTA'>0 LEXDT=2970923
"RTN","LEXNDX8",162,0)
 ;   None of the Above
"RTN","LEXNDX8",163,0)
 S:+LEXSTA>0 LEXDT=2960923 S:+LEXSTA'>0 LEXDT=2970923
"RTN","LEXNDX8",164,0)
 Q LEXDT
"RTN","LEXPL")
0^26^B17998468
"RTN","LEXPL",1,0)
LEXPL ; ISL Problem List Survey                 ; 05/14/2003
"RTN","LEXPL",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXPL",3,0)
 ;
"RTN","LEXPL",4,0)
 ; Entry Points
"RTN","LEXPL",5,0)
 ;
"RTN","LEXPL",6,0)
 ;    EN^LEXPL   Task Survey and Sends Mailman Message to ISC-IRMFO
"RTN","LEXPL",7,0)
 ;    SV^LEXPL   Performs Survey (no task) and displays results
"RTN","LEXPL",8,0)
 ;
"RTN","LEXPL",9,0)
EN ; Tasked Survey
"RTN","LEXPL",10,0)
 S ZTRTN="SV^LEXPL",ZTDESC="Problem List Survey",ZTIO="",ZTDTH=$H D ^%ZTLOAD D HOME^%ZIS K %X,%Y,Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN Q
"RTN","LEXPL",11,0)
SV ; Operational Survey
"RTN","LEXPL",12,0)
 K ^TMP("LEXS") D UD,PLUR,SG,SEND K:'$D(ZTQUEUED) ^TMP("LEXS") S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","LEXPL",13,0)
UD ; UCI/Date
"RTN","LEXPL",14,0)
 N %,%H,%I,X,Y X ^%ZOSF("UCI") D SET("Problem List Survey"),BL S X="  UCI:  "_Y
"RTN","LEXPL",15,0)
 D:Y=$G(^%ZOSF("PROD")) SET((X_" (Production)")) D:Y'=$G(^%ZOSF("PROD")) SET((X_" (Test)"))
"RTN","LEXPL",16,0)
 S X=$$DT Q:X=""  D SET(("  ON:   "_$P(X,"^",1)_" at "_$P(X,"^",2))),BL Q
"RTN","LEXPL",17,0)
PLUR ; Survey
"RTN","LEXPL",18,0)
 N LEXD,LEXCE,LEXCI,LEXICD,LEXIIC,LEXLC,LEXPE,LEXLI,LEXLU,LEXPU,LEXUC,LEXUI,LEXCU,LEXUU,X
"RTN","LEXPL",19,0)
 S:$D(ZTQUEUED) LEXCE=$$EN2^LEXPLEM,LEXCI=$$EN2^LEXPLIA,LEXCU=$$EN2^LEXPLUP
"RTN","LEXPL",20,0)
 S (LEXD,LEXUU,LEXUI,LEXUC,LEXLU,LEXLI,LEXLC,LEXPU)=0
"RTN","LEXPL",21,0)
 S LEXPU=$O(^ICD9("AB","799.9 ",LEXPU)) Q:LEXPU=0
"RTN","LEXPL",22,0)
 F  S LEXD=$O(^AUPNPROB(LEXD)) Q:+LEXD=0  D
"RTN","LEXPL",23,0)
 . S LEXICD=+($G(^AUPNPROB(LEXD,0))),LEXPE=+($G(^AUPNPROB(LEXD,1)))
"RTN","LEXPL",24,0)
 . S LEXIIC=+($P($G(^ICD9(LEXICD,0)),"^",9))
"RTN","LEXPL",25,0)
 . S:LEXPE>1&(LEXICD=LEXPU) LEXLU=LEXLU+1
"RTN","LEXPL",26,0)
 . S:LEXPE=1&(LEXICD=LEXPU) LEXUU=LEXUU+1
"RTN","LEXPL",27,0)
 . S:LEXPE=1&(LEXICD'=LEXPU)&(LEXIIC=0) LEXUC=LEXUC+1
"RTN","LEXPL",28,0)
 . S:LEXPE>1&(LEXICD'=LEXPU)&(LEXIIC=0) LEXLC=LEXLC+1
"RTN","LEXPL",29,0)
 . S:LEXPE=1&(LEXICD'=LEXPU)&(LEXIIC=1) LEXUI=LEXUI+1
"RTN","LEXPL",30,0)
 . S:LEXPE>1&(LEXICD'=LEXPU)&(LEXIIC=1) LEXLI=LEXLI+1
"RTN","LEXPL",31,0)
 ;
"RTN","LEXPL",32,0)
 ; Titles
"RTN","LEXPL",33,0)
 ;
"RTN","LEXPL",34,0)
 D SET("    "),SET2(""),SET2("Inactive"),SET2("Active")
"RTN","LEXPL",35,0)
 D SET("    "),SET2("Uncoded"),SET2("ICD Code"),SET2("ICD Code"),SET2("Total"),BL
"RTN","LEXPL",36,0)
 ;
"RTN","LEXPL",37,0)
 ; Unresolved
"RTN","LEXPL",38,0)
 ;
"RTN","LEXPL",39,0)
 D SET("    Unresolved Narratives")
"RTN","LEXPL",40,0)
 D SET2(LEXUU) D SET2(LEXUI)
"RTN","LEXPL",41,0)
 D SET2(LEXUC) D SET2((LEXUU+LEXUC+LEXUI))
"RTN","LEXPL",42,0)
 ;
"RTN","LEXPL",43,0)
 ; Lexicon
"RTN","LEXPL",44,0)
 ;
"RTN","LEXPL",45,0)
 D SET("    Lexicon Terms")
"RTN","LEXPL",46,0)
 D SET2(LEXLU) D SET2(LEXLI)
"RTN","LEXPL",47,0)
 D SET2(LEXLC) D SET2((LEXLU+LEXLC+LEXLI))
"RTN","LEXPL",48,0)
 ;
"RTN","LEXPL",49,0)
 ; Total
"RTN","LEXPL",50,0)
 ;
"RTN","LEXPL",51,0)
 D SET("    ---------------------------------------------------------------------")
"RTN","LEXPL",52,0)
 D SET("    Total Problems")
"RTN","LEXPL",53,0)
 D SET2(LEXUU+LEXLU),SET2(LEXUI+LEXLI)
"RTN","LEXPL",54,0)
 D SET2(LEXUC+LEXLC),SET2((LEXUU+LEXUC+LEXUI+LEXLU+LEXLC+LEXLI))
"RTN","LEXPL",55,0)
 ;
"RTN","LEXPL",56,0)
 I +($G(LEXCE))>0!(+($G(LEXCI))>0)!(+($G(LEXCU))>0) D
"RTN","LEXPL",57,0)
 . D BL N LEXD S LEXCE=+($G(LEXCE)),LEXCI=+($G(LEXCI)),LEXCU=+($G(LEXCU))
"RTN","LEXPL",58,0)
 . S LEXD=$L(LEXCE) S:$L(LEXCI)>LEXD LEXD=$L(LEXCI) S:$L(LEXCU)>LEXD LEXD=$L(LEXCU) S LEXD=LEXD+1
"RTN","LEXPL",59,0)
 . I LEXCE>0 D SET(($J(LEXCE,LEXD)_" Exact match unresolved narratives resolved to to the Lexicon"))
"RTN","LEXPL",60,0)
 . I LEXCI>0 D SET(($J(LEXCI,LEXD)_" Inactive ICD codes/6 digit codes re-coded to an active ICD Code"))
"RTN","LEXPL",61,0)
 . I LEXCU>0 D SET(($J(LEXCU,LEXD)_" Uncoded Lexicon terms re-coded to an ICD code other than 799.9"))
"RTN","LEXPL",62,0)
 . D BL
"RTN","LEXPL",63,0)
 K LEXD,LEXCE,LEXCI,LEXICD,LEXIIC,LEXLC,LEXPE,LEXLI,LEXLU,LEXPU,LEXUC,LEXUI,LEXCU,LEXUU,X
"RTN","LEXPL",64,0)
 Q
"RTN","LEXPL",65,0)
SG ; Show survey
"RTN","LEXPL",66,0)
 Q:$D(ZTQUEUED)  N LEXD S LEXD=0
"RTN","LEXPL",67,0)
 F  S LEXD=$O(^TMP("LEXS",LEXD)) Q:+LEXD=0  W !,^TMP("LEXS",LEXD)
"RTN","LEXPL",68,0)
 W !! Q
"RTN","LEXPL",69,0)
SEND ; Mailman
"RTN","LEXPL",70,0)
 N DIFROM,LEXADR Q:'$D(ZTQUEUED)  S LEXADR=$$ADR^LEXU Q:'$L(LEXADR)
"RTN","LEXPL",71,0)
 K XMZ S XMSUB="Lexicon/Problem List Survey"
"RTN","LEXPL",72,0)
 S XMY(("G.LEXICON@"_LEXADR))=""
"RTN","LEXPL",73,0)
 S XMTEXT="^TMP(""LEXS"",",XMDUZ=.5
"RTN","LEXPL",74,0)
 D ^XMD K ^TMP("LEXS"),XCNP,XMDUZ,XMY,XMZ,XMSUB,XMTEXT,XMDUZ
"RTN","LEXPL",75,0)
 S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","LEXPL",76,0)
BL ; Blank
"RTN","LEXPL",77,0)
 D SET("") Q
"RTN","LEXPL",78,0)
SET(X) ; Column 1
"RTN","LEXPL",79,0)
 S X=$G(X),^TMP("LEXS",0)=+($G(^TMP("LEXS",0)))+1,^TMP("LEXS",+($G(^TMP("LEXS",0))))=X Q
"RTN","LEXPL",80,0)
SET2(X) ; Column X
"RTN","LEXPL",81,0)
 S X=$G(X),X=$$L($G(^TMP("LEXS",+($G(^TMP("LEXS",0))))))_"    "_$J(X,8),^TMP("LEXS",+($G(^TMP("LEXS",0))))=X Q
"RTN","LEXPL",82,0)
L(X) ; Lengthen text
"RTN","LEXPL",83,0)
 F  Q:$L(X)=25!($L(X)>25)  S X=X_" "
"RTN","LEXPL",84,0)
 Q X
"RTN","LEXPL",85,0)
T(X) ; Trim text
"RTN","LEXPL",86,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXPL",87,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXPL",88,0)
 Q X
"RTN","LEXPL",89,0)
DT(X) ; Date and time
"RTN","LEXPL",90,0)
 N %,%H,%I,X,Y D NOW^%DTC Q:+($G(X))=0 "" S X=$$FMTE^XLFDT(%,"1P") Q:$L(X," ")'=5 "" Q:$P(X," ",4)'[":" "" Q:$P(X," ",5)'["m" ""
"RTN","LEXPL",91,0)
 S X=$P(X," ",1,3)_"^"_$P($P(X," ",4),":",1,2)_" "_$P(X," ",5)
"RTN","LEXPL",92,0)
 Q X
"RTN","LEXSET")
0^1^B11622540
"RTN","LEXSET",1,0)
LEXSET ; ISL/KER Setup Appl/User Defaults for Look-up ; 05/14/2003
"RTN","LEXSET",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXSET",3,0)
 ;
"RTN","LEXSET",4,0)
 ; External References
"RTN","LEXSET",5,0)
 ;   DBIA  10103  $$DT^XLFDT
"RTN","LEXSET",6,0)
 ;   DBIA  10103  $$FMTE^XLFDT
"RTN","LEXSET",7,0)
 ;                  
"RTN","LEXSET",8,0)
EN ; Namespace/subset are not known
"RTN","LEXSET",9,0)
 N DTOUT,DUOUT,LEXNS,LEXSS,LEXDS,LEXDW,LEXDR,LEXDP,LEXDA,LEXDB,LEXD0,LEXD,LEXDX
"RTN","LEXSET",10,0)
 S LEXNS=$$NS^LEXSET4 Q:LEXNS[U!($D(DTOUT))!($D(DUOUT))
"RTN","LEXSET",11,0)
 S LEXSS=$$SS^LEXSET4(LEXNS) Q:LEXSS[U!($D(DTOUT))!($D(DUOUT))
"RTN","LEXSET",12,0)
 D CONFIG(LEXNS,LEXSS)
"RTN","LEXSET",13,0)
 Q
"RTN","LEXSET",14,0)
CONFIG(LEXNS,LEXSS,LEXVDT) ;  Namespace/subset are known
"RTN","LEXSET",15,0)
 K LEXD,LEXSUB,LEXAP,LEXSHOW,LEXSCT,LEXUN
"RTN","LEXSET",16,0)
 S LEXVDT=$S(+($G(LEXVDT))>0:+($G(LEXVDT)),1:$$DT^XLFDT)
"RTN","LEXSET",17,0)
 N LEXA,LEXL,LEXS,LEXM,LEXD S LEXNS=$G(LEXNS),LEXSS=$G(LEXSS)
"RTN","LEXSET",18,0)
 S LEXQ=$S($D(LEXQ):+LEXQ,1:1) S:LEXNS="" LEXNS="LEX" S:LEXSS="" LEXSS="WRD"
"RTN","LEXSET",19,0)
 S:'$D(^LEXT(757.2,"AN",LEXNS)) LEXNS=$$NS^LEXDFN2(LEXNS)
"RTN","LEXSET",20,0)
 S:'$D(^LEXT(757.2,"AA",LEXSS))&('$D(^LEXT(757.2,"AB",LEXSS))) LEXSS=$$MD^LEXDFN2(LEXSS)
"RTN","LEXSET",21,0)
 N LEXUS,LEXO,LEXT
"RTN","LEXSET",22,0)
 S LEXA=$$NSIEN(LEXNS),LEXS=$$SSIEN(LEXSS)
"RTN","LEXSET",23,0)
 S LEXM=$$MDIEN(LEXSS),LEXL=$$ASIEN(LEXA)
"RTN","LEXSET",24,0)
 I +LEXA=0!(+LEXS=0) D DEF G SET
"RTN","LEXSET",25,0)
 D APP^LEXSET2(LEXA)
"RTN","LEXSET",26,0)
 I LEXM=0!(LEXM>0&(LEXM=LEXA)) D SUB^LEXSET2(LEXS)
"RTN","LEXSET",27,0)
 I LEXM>0,LEXM'=LEXA D MOD^LEXSET2(LEXM)
"RTN","LEXSET",28,0)
 D USR^LEXSET2(LEXA)
"RTN","LEXSET",29,0)
 D GEN^LEXSET2
"RTN","LEXSET",30,0)
 I +($G(LEXD("DF","OVR")))>0 D OVER^LEXSET3
"RTN","LEXSET",31,0)
 I +($G(LEXD("DF","OVR")))=0 D USER^LEXSET3
"RTN","LEXSET",32,0)
 S ^TMP("LEXSCH",$J,"VDT",0)=+($G(LEXVDT))
"RTN","LEXSET",33,0)
 S ^TMP("LEXSCH",$J,"VDT",1)="Version Date Check"_$S(+($G(LEXVDT))>0:(": "_$$FMTE^XLFDT(+($G(LEXVDT)))),1:"")
"RTN","LEXSET",34,0)
 D EN^LEXSET5 S:+($G(LEXQ))=1 ^TMP("LEXSCH",$J,"ADF",0)=1
"RTN","LEXSET",35,0)
SET ; Quit Setting Defaults
"RTN","LEXSET",36,0)
 Q
"RTN","LEXSET",37,0)
DEF ; Defaults if LEXNS or LEXSS are invalid
"RTN","LEXSET",38,0)
 S LEXD("DF","DIS")="ICD/CPT",LEXD("DF","DSP")="XTLK^LEXPRNT"
"RTN","LEXSET",39,0)
 S LEXD("DF","FLN")=757.01,LEXD("DF","GBL")="^LEX(757.01,"
"RTN","LEXSET",40,0)
 S LEXD("DF","LEXAP")=1,LEXD("DF","UNR")=0
"RTN","LEXSET",41,0)
 S LEXD("DF","HLP")="D XTLK^LEXHLP",LEXD("DF","IDX")="AWRD"
"RTN","LEXSET",42,0)
 S LEXD("DF","NAM")="Lexicon",LEXD("DF","OVR")=0
"RTN","LEXSET",43,0)
 S LEXD("DF","SUB")="WRD"
"RTN","LEXSET",44,0)
 Q
"RTN","LEXSET",45,0)
ALTDEF ; Defaults if LEXNS or LEXSS are invalid
"RTN","LEXSET",46,0)
 S (DIC,XTLKGBL,XTLKKSCH("GBL"))="^LEX(757.01,"
"RTN","LEXSET",47,0)
 S XTLKKSCH("DSPLY")="XTLK^LEXPRNT",XTLKKSCH("INDEX")="AWRD",XTLKHLP="D XTLK^LEXHLP"
"RTN","LEXSET",48,0)
 S XTLKSAY=1 S:'$L($G(DIC(0))) DIC(0)="EQM" S:'$L($G(X))&(DIC(0)'["A") DIC(0)="A"_DIC(0)
"RTN","LEXSET",49,0)
 S:DIC(0)["L" DIC(0)=$P(DIC(0),"L",1)_$P(DIC(0),"L",2) S:DIC(0)["I" DIC(0)=$P(DIC(0),"I",1)_$P(DIC(0),"L",2)
"RTN","LEXSET",50,0)
 S LEXAP=1,LEXLL=5,LEXUN=0,LEXSUB="WRD",LEXSHOW="ICD/CPT"
"RTN","LEXSET",51,0)
 Q
"RTN","LEXSET",52,0)
NSIEN(LEX) ; Get IEN for application based on namespace
"RTN","LEXSET",53,0)
 Q:'$L($G(LEX)) 0 Q:$D(^LEXT(757.2,"AN",LEX)) $O(^LEXT(757.2,"AN",LEX,0)) Q 0
"RTN","LEXSET",54,0)
SSIEN(LEX) ; Get IEN for subset based on subset
"RTN","LEXSET",55,0)
 Q:'$L($G(LEX)) 0
"RTN","LEXSET",56,0)
 Q:$D(^LEXT(757.2,"AA",LEX)) $O(^LEXT(757.2,"AA",LEX,0))
"RTN","LEXSET",57,0)
 S:$D(^LEXT(757.2,"AB",LEX)) LEX=$O(^LEXT(757.2,"AB",LEX,0))
"RTN","LEXSET",58,0)
 I +LEX>0,$D(^LEXT(757.2,LEX,5)) S LEX=$P(^LEXT(757.2,LEX,5),"^",2)
"RTN","LEXSET",59,0)
 I LEX'="",$D(^LEXT(757.2,"AA",LEX)) Q $O(^LEXT(757.2,"AA",LEX,0))
"RTN","LEXSET",60,0)
 Q 0
"RTN","LEXSET",61,0)
MDIEN(LEX) ; Get IEN for mode based on subset
"RTN","LEXSET",62,0)
 Q:'$L($G(LEX)) 0
"RTN","LEXSET",63,0)
 I $D(^LEXT(757.2,"AB",LEX)) S LEX=$O(^LEXT(757.2,"AB",LEX,0)) S LEX=+LEX Q LEX
"RTN","LEXSET",64,0)
 Q 0
"RTN","LEXSET",65,0)
ASIEN(LEX) ; Get IEN for application 
"RTN","LEXSET",66,0)
 Q:+($G(LEX))=0 0
"RTN","LEXSET",67,0)
 S LEX=+LEX Q:'$L($P($G(^LEXT(757.2,LEX,5)),"^",2))&('$L($P($G(^LEXT(757.2,LEX,0)),"^",2))) 0
"RTN","LEXSET",68,0)
 S:$L($P($G(^LEXT(757.2,LEX,5)),"^",2)) LEX=$P($G(^LEXT(757.2,LEX,5)),"^",2)
"RTN","LEXSET",69,0)
 S:$L($P($G(^LEXT(757.2,LEX,0)),"^",2)) LEX=$P($G(^LEXT(757.2,LEX,0)),"^",2)
"RTN","LEXSET",70,0)
 Q:$D(^LEXT(757.2,"AA",LEX)) $O(^LEXT(757.2,"AA",LEX,0))
"RTN","LEXSET",71,0)
 Q 0
"RTN","LEXSRC")
0^6^B5511347
"RTN","LEXSRC",1,0)
LEXSRC ; ISL/KER Classification Code Source ; 05/14/2003
"RTN","LEXSRC",2,0)
 ;;2.0;LEXICON UTILITY;**7,25**;Sep 23, 1996
"RTN","LEXSRC",3,0)
 ;
"RTN","LEXSRC",4,0)
 ; External References
"RTN","LEXSRC",5,0)
 ;   None
"RTN","LEXSRC",6,0)
 ;                     
"RTN","LEXSRC",7,0)
ONE(LEXI,LEXS,LEXVDT) ; Return a single primary code of a source
"RTN","LEXSRC",8,0)
 S LEXI=+($G(LEXI)),LEXS=$G(LEXS) S LEXI=$$CODE(LEXI,LEXS,$G(LEXVDT)) Q LEXI
"RTN","LEXSRC",9,0)
ALL(LEXI,LEXS,LEXVDT) ; Return all codes of a source
"RTN","LEXSRC",10,0)
 S LEXI=+($G(LEXI)),LEXS=$G(LEXS)
"RTN","LEXSRC",11,0)
 D CODES(LEXI,LEXS,$G(LEXVDT))
"RTN","LEXSRC",12,0)
 Q
"RTN","LEXSRC",13,0)
CODE(LEXI,LEXS,LEXVDT) ; Return a single primary code
"RTN","LEXSRC",14,0)
 N LEXSRC D CODES(LEXI,LEXS,$G(LEXVDT)) S LEXI=$G(LEXSRC(1)) Q LEXI
"RTN","LEXSRC",15,0)
CODES(LEXI,LEXS,LEXVDT) ; Build an array LEXSRC of codes
"RTN","LEXSRC",16,0)
 S LEXI=+($G(LEXI)) Q:LEXI=0  Q:'$D(^LEX(757.01,LEXI))
"RTN","LEXSRC",17,0)
 S LEXS=$G(LEXS) Q:'$D(^LEX(757.03,"ASAB",LEXS))
"RTN","LEXSRC",18,0)
 N LEXMC S LEXMC=+($G(^LEX(757.01,LEXI,1))) Q:'$D(^LEX(757,LEXMC,0))
"RTN","LEXSRC",19,0)
 N LEXMCE S LEXMCE=+($G(^LEX(757,LEXMC,0))) Q:'$D(^LEX(757.01,LEXMCE,0))
"RTN","LEXSRC",20,0)
 N LEXUNI,LEXSA,LEXN,LEXSAB,LEXSTA,LEXPRI,LEXNOM,LEXCC,LEXX
"RTN","LEXSRC",21,0)
 S LEXSA=0
"RTN","LEXSRC",22,0)
 F  S LEXSA=$O(^LEX(757.02,"AMC",LEXMC,LEXSA)) Q:+LEXSA=0  D
"RTN","LEXSRC",23,0)
 . S LEXN=$G(^LEX(757.02,LEXSA,0))
"RTN","LEXSRC",24,0)
 . S LEXCC=$P(LEXN,"^",2) Q:LEXCC=""
"RTN","LEXSRC",25,0)
 . S LEXSTA=+($$STATCHK^LEXSRC2(LEXCC,$G(LEXVDT))) Q:+LEXSTA'>0
"RTN","LEXSRC",26,0)
 . S LEXSAB=+($P(LEXN,"^",3)),LEXSAB=$E($G(^LEX(757.03,LEXSAB,0)),1,3) Q:LEXSAB'=LEXS
"RTN","LEXSRC",27,0)
 . S LEXPRI=+($P(LEXN,"^",7)),LEXCC=$P(LEXN,"^",2) Q:LEXCC=""
"RTN","LEXSRC",28,0)
 . D:LEXPRI>0 PRI(LEXCC) D:LEXPRI=0 NOM(LEXCC)
"RTN","LEXSRC",29,0)
 D COMP
"RTN","LEXSRC",30,0)
 Q
"RTN","LEXSRC",31,0)
PRI(LEXX) ; Primary Code
"RTN","LEXSRC",32,0)
 N LEXCC S LEXCC=$G(LEXX) Q:LEXCC=""  S LEXX=+($G(LEXPRI(0))),LEXX=LEXX+1
"RTN","LEXSRC",33,0)
 S LEXPRI(LEXX)=LEXCC,LEXPRI(0)=LEXX Q
"RTN","LEXSRC",34,0)
NOM(LEXX) ; Normal Code
"RTN","LEXSRC",35,0)
 N LEXCC S LEXCC=$G(LEXX) Q:LEXCC=""  S LEXX=+($G(LEXNOM(0))),LEXX=LEXX+1
"RTN","LEXSRC",36,0)
 S LEXNOM(LEXX)=LEXCC,LEXNOM(0)=LEXX Q
"RTN","LEXSRC",37,0)
COMP ; Compile array from Primary and Normal Codes
"RTN","LEXSRC",38,0)
 N LEXUNI,LEXCT,LEXNT S (LEXCT,LEXNT)=0
"RTN","LEXSRC",39,0)
 I $L($G(LEXPRI(1))) D
"RTN","LEXSRC",40,0)
 . S LEXCT=LEXCT+1,LEXSRC(LEXCT)=LEXPRI(1)
"RTN","LEXSRC",41,0)
 . S LEXSRC(0)=LEXCT,LEXUNI(LEXPRI(1))=""
"RTN","LEXSRC",42,0)
 F  S LEXNT=$O(LEXNOM(LEXNT)) Q:+LEXNT=0  D
"RTN","LEXSRC",43,0)
 . Q:$D(LEXUNI(LEXNOM(LEXNT)))
"RTN","LEXSRC",44,0)
 . I $L($G(LEXNOM(LEXNT))) D
"RTN","LEXSRC",45,0)
 . . S LEXCT=LEXCT+1,LEXSRC(LEXCT)=LEXNOM(LEXNT),LEXSRC(0)=LEXCT,LEXUNI(LEXNOM(LEXNT))=""
"RTN","LEXSRC",46,0)
 K LEXPRI,LEXNOM,LEXUNI Q
"RTN","LEXSRC2")
0^7^B19094912
"RTN","LEXSRC2",1,0)
LEXSRC2 ; ISL/KER/FJF Classification Code Source Util ; 06/25/2003
"RTN","LEXSRC2",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXSRC2",3,0)
 ;
"RTN","LEXSRC2",4,0)
 ; External References
"RTN","LEXSRC2",5,0)
 ;   DBIA  3992  $$STATCHK^ICDAPIU
"RTN","LEXSRC2",6,0)
 ;   DBIA  1997  $$STATCHK^ICPTAPIU
"RTN","LEXSRC2",7,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","LEXSRC2",8,0)
 ;                      
"RTN","LEXSRC2",9,0)
 Q
"RTN","LEXSRC2",10,0)
CPT(LEXC,LEXVDT) ; Return Pointer to Active CPT
"RTN","LEXSRC2",11,0)
 ;                 
"RTN","LEXSRC2",12,0)
 ; Input  CPT Code
"RTN","LEXSRC2",13,0)
 ; Output IEN file 81 of Active Codes only
"RTN","LEXSRC2",14,0)
 S LEXC=$G(LEXC) Q:'$L(LEXC) ""  S LEXVDT=$G(LEXVDT) S:+LEXVDT'>0 LEXVDT=$$DT^XLFDT
"RTN","LEXSRC2",15,0)
 S LEXC=$$STATCHK^ICPTAPIU(LEXC,LEXVDT) Q:+LEXC'>0 ""  S LEXC=$P(LEXC,"^",2) Q:+LEXC'>0 ""
"RTN","LEXSRC2",16,0)
 Q +LEXC
"RTN","LEXSRC2",17,0)
 ;                
"RTN","LEXSRC2",18,0)
ICD(LEXC,LEXVDT) ; Return Pointer to Active ICD/ICP
"RTN","LEXSRC2",19,0)
 ;                 
"RTN","LEXSRC2",20,0)
 ; Input ICD9 or ICD0 Code
"RTN","LEXSRC2",21,0)
 ; Output IEN file 80 or 80.1 of Active Codes only
"RTN","LEXSRC2",22,0)
 S LEXC=$G(LEXC) Q:'$L(LEXC) ""  S LEXVDT=$G(LEXVDT) S:+LEXVDT'>0 LEXVDT=$$DT^XLFDT
"RTN","LEXSRC2",23,0)
 S LEXC=$$STATCHK^ICDAPIU(LEXC,LEXVDT) Q:+LEXC'>0 ""  S LEXC=$P(LEXC,"^",2) Q:+LEXC'>0 ""
"RTN","LEXSRC2",24,0)
 Q +LEXC
"RTN","LEXSRC2",25,0)
 ;                
"RTN","LEXSRC2",26,0)
STATCHK(CODE,CDT,LEX) ; Check Status of a Code
"RTN","LEXSRC2",27,0)
 ;                      
"RTN","LEXSRC2",28,0)
 ; Input:
"RTN","LEXSRC2",29,0)
 ;   CODE - Any Code (ICD/CPT/DSM etc)
"RTN","LEXSRC2",30,0)
 ;   CDT  - Date to screen against (default = today)
"RTN","LEXSRC2",31,0)
 ;   LEX  - Output Array, passed by reference
"RTN","LEXSRC2",32,0)
 ;                      
"RTN","LEXSRC2",33,0)
 ; Output:
"RTN","LEXSRC2",34,0)
 ;                      
"RTN","LEXSRC2",35,0)
 ;   2-Piece String containing the code's status
"RTN","LEXSRC2",36,0)
 ;   and the IEN if the code exists, else -1.
"RTN","LEXSRC2",37,0)
 ;   The following are possible outputs:
"RTN","LEXSRC2",38,0)
 ;           1 ^ IEN         Active Code
"RTN","LEXSRC2",39,0)
 ;           0 ^ IEN         Inactive Code
"RTN","LEXSRC2",40,0)
 ;           0 ^ -1          Code not Found
"RTN","LEXSRC2",41,0)
 ;                      
"RTN","LEXSRC2",42,0)
 ;   ASTM Triplet in array LEX passed by reference (optional)
"RTN","LEXSRC2",43,0)
 ;                      
"RTN","LEXSRC2",44,0)
 ;     LEX(0) = <ien 757.02> ^ <code>
"RTN","LEXSRC2",45,0)
 ;              2-Piece String containing the IEN of 
"RTN","LEXSRC2",46,0)
 ;              the code and the code
"RTN","LEXSRC2",47,0)
 ;                      
"RTN","LEXSRC2",48,0)
 ;     LEX(1) = <ien 757.01> ^ <expression>
"RTN","LEXSRC2",49,0)
 ;              2-Piece String containing the IEN of 
"RTN","LEXSRC2",50,0)
 ;              the code's expression and the expression
"RTN","LEXSRC2",51,0)
 ;                      
"RTN","LEXSRC2",52,0)
 ;     LEX(2) = <ien 757.03> ^ <abbr> ^ <nomen> ^ <name>
"RTN","LEXSRC2",53,0)
 ;              4-Piece String containing the IEN of 
"RTN","LEXSRC2",54,0)
 ;              the code's classification system, the 
"RTN","LEXSRC2",55,0)
 ;              source abbreviation, Nomenclature and
"RTN","LEXSRC2",56,0)
 ;              the name of the classification system
"RTN","LEXSRC2",57,0)
 ;                      
"RTN","LEXSRC2",58,0)
 ; This API requires the ACT Cross-Reference
"RTN","LEXSRC2",59,0)
 ;       ^LEX(757.02,"ACT",<code>,<status>,<date>,<ien>)
"RTN","LEXSRC2",60,0)
 ;
"RTN","LEXSRC2",61,0)
 ;
"RTN","LEXSRC2",62,0)
 N LEXC,LEXIEN,LEXDT,X,PREVACT,PREVINA,MOSTREC,STATUS
"RTN","LEXSRC2",63,0)
 S LEXC=$G(CODE) I '$L(LEXC) S (LEX,X)="0^-1" D UPD Q X
"RTN","LEXSRC2",64,0)
 S LEXDT=$P($G(CDT),".",1),LEXDT=$S(+LEXDT>0:LEXDT,1:$$DT^XLFDT)
"RTN","LEXSRC2",65,0)
 ;
"RTN","LEXSRC2",66,0)
 ; find preceding date for active codes
"RTN","LEXSRC2",67,0)
 S PREVACT=+$O(^LEX(757.02,"ACT",LEXC_" ",3,LEXDT+.00001),-1)
"RTN","LEXSRC2",68,0)
 ;
"RTN","LEXSRC2",69,0)
 ; find preceding date for inactive codes
"RTN","LEXSRC2",70,0)
 S PREVINA=+$O(^LEX(757.02,"ACT",LEXC_" ",2,LEXDT+.00001),-1)
"RTN","LEXSRC2",71,0)
 ; 
"RTN","LEXSRC2",72,0)
 ; check that both are not zero
"RTN","LEXSRC2",73,0)
 I PREVACT=0,PREVINA=0 S (LEX,X)="0^-1" D UPD Q X
"RTN","LEXSRC2",74,0)
 ;
"RTN","LEXSRC2",75,0)
 ; find the most recent of the two dates and matching status
"RTN","LEXSRC2",76,0)
 S MOSTREC=$S(PREVACT>PREVINA:PREVACT,1:PREVINA)
"RTN","LEXSRC2",77,0)
 S STATUS=$S(PREVACT>PREVINA:1,1:0)
"RTN","LEXSRC2",78,0)
 ;
"RTN","LEXSRC2",79,0)
 ; now cope with difficulties arising from boundary conditions
"RTN","LEXSRC2",80,0)
 I $$BOUND D
"RTN","LEXSRC2",81,0)
 .S STATUS='STATUS
"RTN","LEXSRC2",82,0)
 .S MOSTREC=$O(^LEX(757.02,"ACT",LEXC_" ",STATUS+2,LEXDT),-1)
"RTN","LEXSRC2",83,0)
 ;
"RTN","LEXSRC2",84,0)
 ; get code IEN
"RTN","LEXSRC2",85,0)
 S LEXIEN=$O(^LEX(757.02,"ACT",LEXC_" ",STATUS+2,MOSTREC,""))
"RTN","LEXSRC2",86,0)
 ;
"RTN","LEXSRC2",87,0)
 ; quit with valid status and code IEN
"RTN","LEXSRC2",88,0)
 S (LEX,X)=STATUS_"^"_LEXIEN D UPD
"RTN","LEXSRC2",89,0)
 Q X
"RTN","LEXSRC2",90,0)
 ;
"RTN","LEXSRC2",91,0)
BOUND() ; do we have a boundary?
"RTN","LEXSRC2",92,0)
 ; check if we have an entry for the next day of the complementary
"RTN","LEXSRC2",93,0)
 ; status, if so then we need to obtain the status for the 
"RTN","LEXSRC2",94,0)
 ; preceding day
"RTN","LEXSRC2",95,0)
 I $D(^LEX(757.02,"ACT",LEXC_" ",2+'STATUS,$$DPLUS1(MOSTREC))) Q 1
"RTN","LEXSRC2",96,0)
 Q 0
"RTN","LEXSRC2",97,0)
 ;
"RTN","LEXSRC2",98,0)
DPLUS1(DATE)    ; add a day to the date
"RTN","LEXSRC2",99,0)
 ;
"RTN","LEXSRC2",100,0)
 Q $$HTFM^XLFDT($$FMTH^XLFDT(DATE)+1)
"RTN","LEXSRC2",101,0)
 ;                      
"RTN","LEXSRC2",102,0)
UPD ; Update Array
"RTN","LEXSRC2",103,0)
 N LEXI,LEXC,LEXN,LEXE,LEXS S LEXI=+($P($G(X),"^",2)) Q:+LEXI'>0
"RTN","LEXSRC2",104,0)
 S LEXN=$G(^LEX(757.02,+LEXI,0)),LEXE=+LEXN,LEXC=$P(LEXN,"^",2)
"RTN","LEXSRC2",105,0)
 S LEXS=+($P(LEXN,"^",3)),LEX(0)=+LEXI_"^"_LEXC
"RTN","LEXSRC2",106,0)
 S LEX(1)=LEXE_"^"_$P($G(^LEX(757.01,+LEXE,0)),"^",1)
"RTN","LEXSRC2",107,0)
 S LEX(2)=LEXS_"^"_$P($G(^LEX(757.03,+LEXS,0)),"^",1,3)
"RTN","LEXSRC2",108,0)
 Q
"RTN","LEXSRC2",109,0)
PI(X) ; Preferred IEN for code X
"RTN","LEXSRC2",110,0)
 N LEXE,LEXLA,LEXA,LEXS,LEXC,LEXP,LEXPF,LEXF,LEXI,LEXC,LEXFL
"RTN","LEXSRC2",111,0)
 S LEXC=$G(X) Q:'$L(LEXC) ""  S (LEXP,LEXF,LEXI)=0,LEXPF(0)=LEXC
"RTN","LEXSRC2",112,0)
 F  S LEXI=$O(^LEX(757.02,"CODE",(LEXC_" "),LEXI)) Q:+LEXI=0!(LEXP>0)  D
"RTN","LEXSRC2",113,0)
 . S:+LEXF'>0 LEXF=LEXI S LEXFL=$S(+($P($G(^LEX(757.02,+LEXI,0)),"^",5))>0:1,1:0)
"RTN","LEXSRC2",114,0)
 . S LEXE=0,LEXLA="" F  S LEXE=$O(^LEX(757.02,+LEXI,4,LEXE)) Q:+LEXE=0  D
"RTN","LEXSRC2",115,0)
 . . S LEXS=$P($G(^LEX(757.02,+LEXI,4,LEXE,0)),"^",2) Q:+LEXS'>0
"RTN","LEXSRC2",116,0)
 . . S LEXA=$P($G(^LEX(757.02,+LEXI,4,LEXE,0)),"^",1)
"RTN","LEXSRC2",117,0)
 . . S:+LEXA>+LEXLA LEXLA=+LEXA
"RTN","LEXSRC2",118,0)
 . S:+LEXLA>0 LEXPF(LEXFL,LEXLA,LEXI)=""
"RTN","LEXSRC2",119,0)
 S X="" I $D(LEXPF(1)) S X=$O(LEXPF(1," "),-1),X=$O(LEXPF(1,+X," "),-1)
"RTN","LEXSRC2",120,0)
 I '$D(LEXPF(1)),$D(LEXPF(0)) S X=$O(LEXPF(0," "),-1),X=$O(LEXPF(0,+X," "),-1)
"RTN","LEXSRC2",121,0)
 Q X
"RTN","LEXSRC2",122,0)
 ;                      
"RTN","LEXSRC2",123,0)
HIST(CODE,ARY) ; Activation History
"RTN","LEXSRC2",124,0)
 ;                      
"RTN","LEXSRC2",125,0)
 ; Input:
"RTN","LEXSRC2",126,0)
 ;    CODE - Code - REQUIRED
"RTN","LEXSRC2",127,0)
 ;    .ARY - Array, passed by Reference
"RTN","LEXSRC2",128,0)
 ;                      
"RTN","LEXSRC2",129,0)
 ; Output:
"RTN","LEXSRC2",130,0)
 ;    ARY(0) = Number of Activation History Entries
"RTN","LEXSRC2",131,0)
 ;    ARY(<date>) = status    where: 1 is Active
"RTN","LEXSRC2",132,0)
 ;    ARY("IEN") = <ien>
"RTN","LEXSRC2",133,0)
 ;
"RTN","LEXSRC2",134,0)
 N LEXC,LEXI,LEXN,LEXD,LEXF,LEXO S LEXC=$G(CODE) Q:'$L(LEXC) -1
"RTN","LEXSRC2",135,0)
 S LEXI=$$PI(LEXC),ARY("IEN")=LEXI,LEXO=""
"RTN","LEXSRC2",136,0)
 M LEXO=^LEX(757.02,+LEXI,4) K LEXO("B")
"RTN","LEXSRC2",137,0)
 S ARY(0)=+($P($G(LEXO(0)),U,4))
"RTN","LEXSRC2",138,0)
 S:+ARY(0)=0 ARY(0)=-1 K:ARY(0)=-1 ARY("IEN")
"RTN","LEXSRC2",139,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(LEXO(LEXI)) Q:+LEXI=0  D
"RTN","LEXSRC2",140,0)
 . S LEXD=$P($G(LEXO(LEXI,0)),U,1) Q:+LEXD=0
"RTN","LEXSRC2",141,0)
 . S LEXF=$P($G(LEXO(LEXI,0)),U,2) Q:'$L(LEXF)
"RTN","LEXSRC2",142,0)
 . S LEXC=LEXC+1,ARY(0)=LEXC,ARY(LEXD)=LEXF
"RTN","LEXSRC2",143,0)
 Q ARY(0)
"RTN","LEXU")
0^5^B21360008
"RTN","LEXU",1,0)
LEXU ;ISA/FJF-Miscellaneous Lexicon Utilities; 05/14/2003
"RTN","LEXU",2,0)
 ;;2.0;LEXICON UTILITY;**2,6,9,15,25**;Sep 23, 1996
"RTN","LEXU",3,0)
 ;
"RTN","LEXU",4,0)
 ; External References
"RTN","LEXU",5,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","LEXU",6,0)
 ;   DBIA  3990  $$ICDDX^ICDCODE
"RTN","LEXU",7,0)
 ;   DBIA  1995  $$CPT^ICPTCOD
"RTN","LEXU",8,0)
 ;                         
"RTN","LEXU",9,0)
SC(LEX,LEXS,LEXVDT) ; Filter by Semantic Class
"RTN","LEXU",10,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",11,0)
 ;    LEXS     Filter
"RTN","LEXU",12,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",13,0)
 N LEXINC,LEXEXC,LEXIC,LEXEC,LEXRREC
"RTN","LEXU",14,0)
 S LEXRREC=LEX Q:'$D(^LEX(757.01,LEXRREC,0)) 0
"RTN","LEXU",15,0)
 I $L(LEXS,";")=3,$P(LEXS,";",3)'="" D  I LEXINC K LEXIC,LEXEXC,LEXS,LEXEC Q LEXINC
"RTN","LEXU",16,0)
 . S LEXINC=0 S LEXINC=$$SO(LEXRREC,$P(LEXS,";",3),$G(LEXVDT))
"RTN","LEXU",17,0)
 S LEXRREC=$P(^LEX(757.01,LEXRREC,1),U,1)
"RTN","LEXU",18,0)
 S LEXINC=0 F LEXIC=1:1:$L($P(LEXS,";",1),"/") D
"RTN","LEXU",19,0)
 . I $D(^LEX(757.1,"AMCC",LEXRREC,$P($P(LEXS,";",1),"/",LEXIC)))!($D(^LEX(757.1,"AMCT",LEXRREC,$P($P(LEXS,";",1),"/",LEXIC)))) S LEXINC=1,LEXIC=$L($P(LEXS,";",1),"/")+1
"RTN","LEXU",20,0)
 I LEXINC=0!($P(LEXS,";",2)="") K LEXIC,LEXS,LEXEC Q LEXINC
"RTN","LEXU",21,0)
 S LEXEXC=0 F LEXEC=1:1:$L($P(LEXS,";",2),"/") D
"RTN","LEXU",22,0)
 . I $D(^LEX(757.1,"AMCC",LEXRREC,$P($P(LEXS,";",2),"/",LEXEC)))!($D(^LEX(757.1,"AMCT",LEXRREC,$P($P(LEXS,";",2),"/",LEXEC)))) S LEXEXC=1,LEXEC=$L($P(LEXS,";",2),"/")+1
"RTN","LEXU",23,0)
 I LEXINC,'LEXEXC K LEXIC,LEXS,LEXEC Q 1
"RTN","LEXU",24,0)
 K LEXIC,LEXS,LEXEC Q 0
"RTN","LEXU",25,0)
SO(LEX,LEXS,LEXVDT) ; Filter by Source
"RTN","LEXU",26,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",27,0)
 ;    LEXS     Filter
"RTN","LEXU",28,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",29,0)
 N LEXTREC S LEXTREC=+LEX Q:'$D(^LEX(757.01,LEXTREC,0)) 0
"RTN","LEXU",30,0)
 N LEXFND S LEXFND=0,LEXTREC=+LEXTREC Q:'$D(^LEX(757.01,LEXTREC)) LEXFND
"RTN","LEXU",31,0)
 N LEXCODE,LEXSOID,LEXCREC,LEXSAB,LEXMC,LEXN0,LEXSO,LEXSTA
"RTN","LEXU",32,0)
 S LEXMC=$P(^LEX(757.01,LEXTREC,1),U,1)
"RTN","LEXU",33,0)
 S LEXMCE=+(^LEX(757,+($P(^LEX(757.01,LEXTREC,1),U,1)),0))
"RTN","LEXU",34,0)
 I LEXTREC=LEXMCE D  G SOQ
"RTN","LEXU",35,0)
 . S LEXFND=0 F LEXSOID=1:1:$L(LEXS,"/") Q:LEXFND  D
"RTN","LEXU",36,0)
 . . S LEXCODE=$P(LEXS,"/",LEXSOID),LEXCREC=0
"RTN","LEXU",37,0)
 . . F  S LEXCREC=$O(^LEX(757.02,"AMC",LEXMC,LEXCREC)) Q:+LEXCREC=0!(LEXFND)  D
"RTN","LEXU",38,0)
 . . . S LEXN0=$G(^LEX(757.02,LEXCREC,0))
"RTN","LEXU",39,0)
 . . . S LEXSAB=+($P(LEXN0,U,3)),LEXSO=+($P(LEXN0,U,2))
"RTN","LEXU",40,0)
 . . . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,$G(LEXVDT)) Q:+LEXSTA'>0
"RTN","LEXU",41,0)
 . . . Q:'$D(^LEX(757.03,LEXSAB,0))
"RTN","LEXU",42,0)
 . . . S LEXSAB=$E(^LEX(757.03,LEXSAB,0),1,3)
"RTN","LEXU",43,0)
 . . . I LEXSAB=LEXCODE S LEXFND=1
"RTN","LEXU",44,0)
SOQ ; Quit Source Filter
"RTN","LEXU",45,0)
 K LEX,LEXTREC,LEXMC,LEXS,LEXCODE,LEXMCE,LEXSOID Q LEXFND
"RTN","LEXU",46,0)
SRC(LEX,LEXS) ; Filter by Expression Source
"RTN","LEXU",47,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",48,0)
 ;    LEXS     Filter
"RTN","LEXU",49,0)
 S LEX=+($G(LEX)),LEXS=+($G(LEXS))
"RTN","LEXU",50,0)
 Q:LEX=0 0 Q:LEXS=0 0 Q:'$D(^LEX(757.01,LEX,0)) 0 Q:'$D(^LEX(757.14,LEXS,0)) 0
"RTN","LEXU",51,0)
 S LEXSR=$P($G(^LEX(757.01,LEX,1)),U,12) Q:LEXSR=LEXS 1
"RTN","LEXU",52,0)
 N LEXSR,LEXMC,LEXMCE S LEXMC=+($G(^LEX(757.01,LEX,1))),LEXMCE=+($G(^LEX(757,+LEXMC,0)))
"RTN","LEXU",53,0)
 S LEXSR=$P($G(^LEX(757.01,LEXMCE,1)),U,12) Q:LEXSR=LEXS 1
"RTN","LEXU",54,0)
 Q 0
"RTN","LEXU",55,0)
DEF(LEX) ; Display expression definition
"RTN","LEXU",56,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",57,0)
 I $D(^LEX(757.01,LEX,3,0)) D
"RTN","LEXU",58,0)
 . N LEXLN F LEXLN=1:1:$P(^LEX(757.01,LEX,3,0),U,4) D
"RTN","LEXU",59,0)
 . . I $D(^LEX(757.01,LEX,3,LEXLN,0)) W !,?2,^LEX(757.01,LEX,3,LEXLN,0)
"RTN","LEXU",60,0)
 . K LEX,LEXLN W !
"RTN","LEXU",61,0)
 Q
"RTN","LEXU",62,0)
ID(LEX) ; ICD Diagnosis retained - ICD procedures ignored
"RTN","LEXU",63,0)
 ;    LEX      Code
"RTN","LEXU",64,0)
 Q:'$L($G(LEX)) "" Q:$L($P(LEX,".",1))<3 "" Q:'$D(^LEX(757.02,"AVA",(LEX_" "))) ""
"RTN","LEXU",65,0)
 N LEXO,LEXR S (LEXO,LEXR)=0 F  S LEXR=$O(^LEX(757.02,"AVA",(LEX_" "),LEXR)) Q:+LEXR=0  D  Q:LEXO=1
"RTN","LEXU",66,0)
 . I $D(^LEX(757.02,"AVA",(LEX_" "),LEXR,"ICD")) S LEXO=1
"RTN","LEXU",67,0)
 Q:'LEXO "" Q LEX
"RTN","LEXU",68,0)
ICDONE(LEX,LEXVDT) ; Return one ICD code for an expression
"RTN","LEXU",69,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",70,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",71,0)
 N LEXICD
"RTN","LEXU",72,0)
 S LEXVDT=$S(+$G(LEXVDT)>0:LEXVDT,1:$$DT^XLFDT)
"RTN","LEXU",73,0)
 S LEX=$$ONE^LEXSRC(LEX,"ICD",LEXVDT)
"RTN","LEXU",74,0)
 Q:LEX="" ""
"RTN","LEXU",75,0)
 S LEXICD=$$ICDDX^ICDCODE(LEX,LEXVDT)
"RTN","LEXU",76,0)
 Q:$P(LEXICD,"^",2)="INVALID CODE" ""
"RTN","LEXU",77,0)
 Q LEX
"RTN","LEXU",78,0)
ICD(LEX,LEXVDT) ; Return all ICD codes for an expression
"RTN","LEXU",79,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",80,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",81,0)
 S LEXVDT=$S(+$G(LEXVDT)>0:LEXVDT,1:$$DT^XLFDT)
"RTN","LEXU",82,0)
 N LEXSRC,LEXICD
"RTN","LEXU",83,0)
 D ALL^LEXSRC(LEX,"ICD",LEXVDT) Q:+$G(LEXSRC(0))'>0 ""
"RTN","LEXU",84,0)
 N LEXI,LEXT,LEXS S LEXI=0,LEXT=""
"RTN","LEXU",85,0)
 F  S LEXI=$O(LEXSRC(LEXI)) Q:+LEXI=0  D
"RTN","LEXU",86,0)
 . S LEXS=LEXSRC(LEXI)
"RTN","LEXU",87,0)
 . S LEXICD=$$ICDDX^ICDCODE(LEXS,LEXVDT)
"RTN","LEXU",88,0)
 . Q:$P(LEXICD,"^",2)="INVALID CODE"
"RTN","LEXU",89,0)
 . Q:(LEXT_";")[(";"_LEXS_";")  S LEXT=LEXT_";"_LEXS
"RTN","LEXU",90,0)
 S:$E(LEXT,1)=";" LEXT=$E(LEXT,2,$L(LEXT)) S LEX=LEXT Q LEX
"RTN","LEXU",91,0)
CPTONE(LEX,LEXVDT) ; Return one CPT code for an expression
"RTN","LEXU",92,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",93,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",94,0)
 S LEXVDT=$S(+$G(LEXVDT)>0:LEXVDT,1:$$DT^XLFDT)
"RTN","LEXU",95,0)
 N LEXCPT
"RTN","LEXU",96,0)
 S LEX=$$ONE^LEXSRC(LEX,"CPT",LEXVDT)
"RTN","LEXU",97,0)
 Q:LEX="" ""
"RTN","LEXU",98,0)
 S LEXCPT=$$CPT^ICPTCOD(LEX,LEXVDT)
"RTN","LEXU",99,0)
 Q:$P(LEXCPT,"^",2)="NO SUCH ENTRY" ""
"RTN","LEXU",100,0)
 I +$P(LEXCPT,"^",7)=0 S LEX=""
"RTN","LEXU",101,0)
 Q LEX
"RTN","LEXU",102,0)
CPCONE(LEX,LEXVDT) ; Return one HCPCS code for an expression
"RTN","LEXU",103,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",104,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",105,0)
 S LEXVDT=$S(+$G(LEXVDT)>0:LEXVDT,1:$$DT^XLFDT)
"RTN","LEXU",106,0)
 N LEXCPT
"RTN","LEXU",107,0)
 S LEX=$$ONE^LEXSRC(LEX,"CPC",LEXVDT)
"RTN","LEXU",108,0)
 Q:LEX="" ""
"RTN","LEXU",109,0)
 S LEXCPT=$$CPT^ICPTCOD(LEX,LEXVDT)
"RTN","LEXU",110,0)
 Q:$P(LEXCPT,"^",2)="NO SUCH ENTRY" ""
"RTN","LEXU",111,0)
 I +$P(LEXCPT,"^",7)=0 S LEX=""
"RTN","LEXU",112,0)
 I LEX'?1U.4N S LEX=""
"RTN","LEXU",113,0)
 Q LEX
"RTN","LEXU",114,0)
DSMONE(LEX) ; Return one DSM code for an expression
"RTN","LEXU",115,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",116,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",117,0)
 ; Check for DSM-IV first
"RTN","LEXU",118,0)
 S LEX=$$ONE^LEXSRC(LEX,"DS4") I LEX'="" Q LEX
"RTN","LEXU",119,0)
 ; If not DSM-IV, then check for DSM-III
"RTN","LEXU",120,0)
 S LEX=$$ONE^LEXSRC(LEX,"DS3") Q LEX
"RTN","LEXU",121,0)
ADR(LEX) ; Mailing Address
"RTN","LEXU",122,0)
 N DIC,DTOUT,DUOUT,X,Y S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="FO-SLC.MED.VA.GOV" D ^DIC Q:+Y>0 LEX
"RTN","LEXU",123,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="ISC-SLC.MED.VA.GOV" D ^DIC Q:+Y>0 LEX
"RTN","LEXU",124,0)
 Q "ISC-SLC.VA.GOV"
"RTN","LEXXFQ")
0^29^B15092959
"RTN","LEXXFQ",1,0)
LEXXFQ ; ISL/FJF Set Frequencies in 757.001;04/08/03
"RTN","LEXXFQ",2,0)
 ;;2.0;LEXICON UTILITY;**4,25**;Sep 23, 1996
"RTN","LEXXFQ",3,0)
 Q
"RTN","LEXXFQ",4,0)
EN ; Update term frequencies when not found  (at site)
"RTN","LEXXFQ",5,0)
 S ZTRTN="UP^LEXXFQ",ZTDESC="Update Term Frequency in file 757.001"
"RTN","LEXXFQ",6,0)
 S ZTIO="",ZTDTH=$H
"RTN","LEXXFQ",7,0)
 D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXXFQ",8,0)
 K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXXFQ",9,0)
 Q
"RTN","LEXXFQ",10,0)
EN2 ; Reset term frequencies to export values (at IRMFO)
"RTN","LEXXFQ",11,0)
 S ZTRTN="RE^LEXXFQ",ZTDESC="Reset Term Frequencies in file 757.001"
"RTN","LEXXFQ",12,0)
 S ZTIO="",ZTDTH=$H
"RTN","LEXXFQ",13,0)
 D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXXFQ",14,0)
 K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXXFQ",15,0)
 Q
"RTN","LEXXFQ",16,0)
CHK ; Check frequencies                       (at site or IRMFO)
"RTN","LEXXFQ",17,0)
 N LEXI,LEXC S (LEXI,LEXC)=0
"RTN","LEXXFQ",18,0)
 F  S LEXI=$O(^LEX(757,LEXI)) Q:+LEXI=0  S:'$D(^LEX(757.001,LEXI)) LEXC=LEXC+1
"RTN","LEXXFQ",19,0)
 I '$D(ZTQUEUED) D
"RTN","LEXXFQ",20,0)
 .W:LEXC>0 !!,LEXC," Concepts do not have frequencies set",!!
"RTN","LEXXFQ",21,0)
 .W:LEXC'>0 !!,"All concepts have frequencies set",!!
"RTN","LEXXFQ",22,0)
 Q
"RTN","LEXXFQ",23,0)
UP ; Update frequencies
"RTN","LEXXFQ",24,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXFQ",25,0)
 N LEX1,LEX2,LEXU,LEXUC,LEXDC,LEXMA,LEXT,LEXL,LEXH
"RTN","LEXXFQ",26,0)
 S (LEXDC,LEXU,LEXUC,LEXT,LEXL,LEXMA)=0,LEXH="."
"RTN","LEXXFQ",27,0)
 S LEX1=$$HACK
"RTN","LEXXFQ",28,0)
 I '$D(ZTQUEUED) D
"RTN","LEXXFQ",29,0)
 .W !!,"Initializing Global",!,"  Start:     ",$P(LEX1,"^",2),!,"  "
"RTN","LEXXFQ",30,0)
 F  S LEXMA=$O(^LEX(757,LEXMA)) Q:+LEXMA=0  D
"RTN","LEXXFQ",31,0)
 . S:'$D(^LEX(757.001,LEXMA,0)) LEXH="+" S LEXT=LEXT+1,LEXL=LEXMA
"RTN","LEXXFQ",32,0)
 . W:'$D(ZTQUEUED)&(LEXT#1000=0) LEXH S:LEXT#1000=0 LEXH=".",LEXDC=LEXDC+1
"RTN","LEXXFQ",33,0)
 . W:'$D(ZTQUEUED)&(LEXDC#76=0)&(LEXDC>0)&(LEXT#1000=0) !,"  "
"RTN","LEXXFQ",34,0)
 . I '$D(^LEX(757.001,LEXMA,0)) D SET S LEXUC=LEXUC+1
"RTN","LEXXFQ",35,0)
 W:'$D(ZTQUEUED) LEXH
"RTN","LEXXFQ",36,0)
 S:LEXT>0 $P(^LEX(757.001,0),"^",4)=LEXT
"RTN","LEXXFQ",37,0)
 S:LEXL>0 $P(^LEX(757.001,0),"^",3)=LEXL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXFQ",38,0)
 S LEX2=$$HACK
"RTN","LEXXFQ",39,0)
 I '$D(ZTQUEUED) D
"RTN","LEXXFQ",40,0)
 .W !,"  Finished:  ",$P(LEX2,"^",2)
"RTN","LEXXFQ",41,0)
 .W !,"  Time:      ",$$TIME($P(LEX1,"^",1),$P(LEX2,"^",1)),!
"RTN","LEXXFQ",42,0)
 Q
"RTN","LEXXFQ",43,0)
RE ; Reset frequencies
"RTN","LEXXFQ",44,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXFQ",45,0)
 N LEXMA,LEXT,LEXL S (LEXT,LEXL,LEXMA)=0
"RTN","LEXXFQ",46,0)
 F  S LEXMA=$O(^LEX(757,LEXMA)) Q:+LEXMA=0  S LEXT=LEXT+1,LEXL=LEXMA D SET
"RTN","LEXXFQ",47,0)
 S:LEXT>0 $P(^LEX(757.001,0),"^",4)=LEXT
"RTN","LEXXFQ",48,0)
 S:LEXL>0 $P(^LEX(757.001,0),"^",3)=LEXL S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","LEXXFQ",49,0)
SET ; Set frequency
"RTN","LEXXFQ",50,0)
 N DIK,DIC,DA,LEXFQ
"RTN","LEXXFQ",51,0)
 S LEXMA=+($G(LEXMA))
"RTN","LEXXFQ",52,0)
 Q:'$D(^LEX(757,LEXMA,0))
"RTN","LEXXFQ",53,0)
 S DIC="^LEX(757.001,",DA=LEXMA,LEXFQ=+($$FQ(LEXMA))
"RTN","LEXXFQ",54,0)
 D:$D(^LEX(757.001,DA)) KILL^LEXNDX2
"RTN","LEXXFQ",55,0)
 S ^LEX(757.001,LEXMA,0)=LEXMA_"^"_LEXFQ_"^"_LEXFQ
"RTN","LEXXFQ",56,0)
 D SET^LEXNDX2
"RTN","LEXXFQ",57,0)
 Q
"RTN","LEXXFQ",58,0)
FQ(LEXX) ; Frequency
"RTN","LEXXFQ",59,0)
 ;
"RTN","LEXXFQ",60,0)
 ; LEXSAB  Source Abbreviation
"RTN","LEXXFQ",61,0)
 ; LEXSMC  Semantic Class
"RTN","LEXXFQ",62,0)
 ; LEXNUR  Nursing Class
"RTN","LEXXFQ",63,0)
 ; LEXBEH  Behavior/Mental Health Class
"RTN","LEXXFQ",64,0)
 ; LEXPRO  Procedural Class
"RTN","LEXXFQ",65,0)
 ; LEXDIA  Diagnostic Class
"RTN","LEXXFQ",66,0)
 ; LEXSA   IEN Source Code (ICD, CPT, DSM, etc)
"RTN","LEXXFQ",67,0)
 ; LEXMC   IEN Major Concept
"RTN","LEXXFQ",68,0)
 ; LEXSO   Code 
"RTN","LEXXFQ",69,0)
 ;
"RTN","LEXXFQ",70,0)
 N LEXMC S LEXMC=+($G(LEXX)) Q:'$D(^LEX(757,LEXMC,0)) 0 Q:LEXMC<3 0
"RTN","LEXXFQ",71,0)
 N LEXSA,LEXSAB,LEXSMC,LEXNUR,LEXBEH,LEXPRO,LEXDIA,LEXSO
"RTN","LEXXFQ",72,0)
 S (LEXSA,LEXNUR,LEXBEH,LEXPRO,LEXDIA)=0
"RTN","LEXXFQ",73,0)
 F  S LEXSA=$O(^LEX(757.02,"AMC",LEXMC,LEXSA)) Q:+LEXSA=0  D
"RTN","LEXXFQ",74,0)
 . S LEXSO=$P(^LEX(757.02,LEXSA,0),"^",2)
"RTN","LEXXFQ",75,0)
 . Q:+$$STATCHK^LEXSRC2(LEXSO)=0
"RTN","LEXXFQ",76,0)
 . S LEXSAB=+($P($G(^LEX(757.02,LEXSA,0)),"^",3)) Q:LEXSAB=0
"RTN","LEXXFQ",77,0)
 . Q:LEXSAB>15  S:LEXSAB=1 LEXDIA=1
"RTN","LEXXFQ",78,0)
 . S:LEXSAB>1&(LEXSAB<5) LEXPRO=1
"RTN","LEXXFQ",79,0)
 . S:LEXSAB>4&(LEXSAB<7) LEXBEH=1
"RTN","LEXXFQ",80,0)
 . S:LEXSAB>10&(LEXSAB<16) LEXNUR=1
"RTN","LEXXFQ",81,0)
 S LEXSMC=$$SM(LEXMC),LEXX=0 I LEXDIA=1 S LEXX=4 Q LEXX
"RTN","LEXXFQ",82,0)
 I LEXBEH=1!(LEXSMC=1) S LEXX=3 Q LEXX
"RTN","LEXXFQ",83,0)
 I LEXPRO=1 S LEXX=2 Q LEXX
"RTN","LEXXFQ",84,0)
 I LEXNUR=1 S LEXX=1 Q LEXX
"RTN","LEXXFQ",85,0)
 Q LEXX
"RTN","LEXXFQ",86,0)
SM(LEXX) ; Semantic Map (757.1)
"RTN","LEXXFQ",87,0)
 N LEXMC,LEXCL,LEXSA
"RTN","LEXXFQ",88,0)
 S LEXSA=0,LEXMC=+($G(LEXX)),LEXX=0
"RTN","LEXXFQ",89,0)
 Q:'$D(^LEX(757,LEXMC,0)) 0
"RTN","LEXXFQ",90,0)
 F  S LEXSA=$O(^LEX(757.1,"B",LEXMC,LEXSA)) Q:+LEXSA=0  D
"RTN","LEXXFQ",91,0)
 .S LEXCL=+($P($G(^LEX(757.1,LEXSA,0)),"^",2))
"RTN","LEXXFQ",92,0)
 .I LEXCL=3!(LEXCL=6) S LEXX=1
"RTN","LEXXFQ",93,0)
 Q LEXX
"RTN","LEXXFQ",94,0)
HACK(LEXX) ; Time Hack
"RTN","LEXXFQ",95,0)
 N X,%,%H,%I
"RTN","LEXXFQ",96,0)
 N HACK D NOW^%DTC S HACK=$$FMTE^XLFDT(%,1),HACK=$TR(HACK,"@"," ")
"RTN","LEXXFQ",97,0)
 S LEXX=%_"^"_HACK Q LEXX
"RTN","LEXXFQ",98,0)
TIME(LEXBEG,LEXEND) ; Elapsed time from begining to end
"RTN","LEXXFQ",99,0)
 S LEXBEG=+($G(LEXBEG)) Q:LEXBEG=0 "" S LEXEND=+($G(LEXEND)) Q:LEXBEG=0 ""
"RTN","LEXXFQ",100,0)
 S LEXBEG=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3) S:$L($P(LEXBEG,":",1))=1 $P(LEXBEG,":",1)="0"_$P(LEXBEG,":",1) S LEXBEG=$TR(LEXBEG," ","0")
"RTN","LEXXFQ",101,0)
 Q LEXBEG
"RTN","LEXXGI")
0^18^B64208237
"RTN","LEXXGI",1,0)
LEXXGI ; ISL/KER - Global Import (Needs ^LEXM) ; 05/14/2003
"RTN","LEXXGI",2,0)
 ;;2.0;LEXICON UTILITY;**4,25**;Sep 23, 1996
"RTN","LEXXGI",3,0)
 ;
"RTN","LEXXGI",4,0)
 ; External References
"RTN","LEXXGI",5,0)
 ;   DBIA 10103  $$NOW^XLFDT
"RTN","LEXXGI",6,0)
 ;   DBIA 10086  HOME^%ZIS
"RTN","LEXXGI",7,0)
 ;   DBIA 10063  ^%ZTLOAD
"RTN","LEXXGI",8,0)
 ;   DBIA 10103  $$FMDIFF^XLFDT
"RTN","LEXXGI",9,0)
 ;   DBIA 10103  $$FMTE^XLFDT
"RTN","LEXXGI",10,0)
 ;   DBIA 10141  BMES^XPDUTL
"RTN","LEXXGI",11,0)
 ;   DBIA 10141  MES^XPDUTL
"RTN","LEXXGI",12,0)
 ;   DBIA 10101  MSG^XQOR
"RTN","LEXXGI",13,0)
 ;                  
"RTN","LEXXGI",14,0)
EN ; Update Lexicon Data
"RTN","LEXXGI",15,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI",16,0)
 D IMP Q
"RTN","LEXXGI",17,0)
TASK ; Que Lexicon Update w/ Taskman
"RTN","LEXXGI",18,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSK
"RTN","LEXXGI",19,0)
 S ZTRTN="EN^LEXXGI",ZTDESC="Importing Updated Lexicon Data"
"RTN","LEXXGI",20,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXXGI",21,0)
 Q
"RTN","LEXXGI",22,0)
IMP ; Import
"RTN","LEXXGI",23,0)
 N LEXBEG,LEXELP,LEXEND,LEXMSG,LEXOK,LEXFL D:'$D(^LEXM) NF Q:'$D(^LEXM)  S LEXOK=0
"RTN","LEXXGI",24,0)
 S:$O(^LEXM(0))>0 LEXOK=1 Q:'LEXOK  S LEXBEG=$$HACK D IMPORT K ^LEXM(0)
"RTN","LEXXGI",25,0)
 S LEXEND=$$HACK,LEXELP=$$ELAP(LEXBEG,LEXEND) S:LEXELP="" LEXELP="00:00:00"
"RTN","LEXXGI",26,0)
 D PB("   Data Updated ")
"RTN","LEXXGI",27,0)
 D PB(("        Started:   "_$TR($$FMTE^XLFDT(LEXBEG),"@"," ")))
"RTN","LEXXGI",28,0)
 D TL(("        Finished:  "_$TR($$FMTE^XLFDT(LEXEND),"@"," ")))
"RTN","LEXXGI",29,0)
 D TL(("        Elapsed:   "_LEXELP)),NOTIFY
"RTN","LEXXGI",30,0)
 Q
"RTN","LEXXGI",31,0)
NOTIFY ; Notify by Protocol - LEX LEXICAL SERVICES UPDATE
"RTN","LEXXGI",32,0)
 Q:'$L($T(MSG^XQOR))  D MSG^XQOR("LEX LEXICAL SERVICES UPDATE",.LEXMSG)
"RTN","LEXXGI",33,0)
 N X,LEXT,LEXI,LEX1,LEX2,LEX3,LEXN Q:'$L($T(MSG^XQOR))
"RTN","LEXXGI",34,0)
 D MSG^XQOR("LEX LEXICAL SERVICES UPDATE",.LEXMSG)
"RTN","LEXXGI",35,0)
 S X="Lexical Files Updated" S LEXI=0 F  S LEXI=$O(LEXFL(LEXI)) Q:+LEXI=0  S LEXT=$G(LEXT)_", "_LEXI
"RTN","LEXXGI",36,0)
 S:$E($G(LEXT),1,2)=", " LEXT=$E($G(LEXT),3,$L($G(LEXT)))
"RTN","LEXXGI",37,0)
 S LEX3=$G(LEXT),LEX1=$P($G(LEXT),", ",1,($L($G(LEXT),", ")-1))
"RTN","LEXXGI",38,0)
 S LEX2=$P($G(LEXT),", ",$L($G(LEXT),", "))
"RTN","LEXXGI",39,0)
 S LEXT="File"_$S(LEX3[", ":"s",1:"")_" "_LEX1
"RTN","LEXXGI",40,0)
 S:$L(LEX2)&($L(LEXT)) LEXT=LEXT_$S($L(LEX1):" and ",1:"")_LEX2
"RTN","LEXXGI",41,0)
 S:$L(LEXT) LEXT=LEXT_$S($L(LEX1):" were ",1:" was ")_"updated" S:$L(LEX3) X=LEXT D BL,TL(X)
"RTN","LEXXGI",42,0)
 S X="Protocol 'LEX LEXICAL SERVICES UPDATE' was invoked" D TL(X)
"RTN","LEXXGI",43,0)
 S X="Subscribing applications were notified of the update" D TL(X),BL
"RTN","LEXXGI",44,0)
 Q
"RTN","LEXXGI",45,0)
IMPORT ; Import by File
"RTN","LEXXGI",46,0)
 N LEXHDR,LEXBLD,LEXFI,LEXFIC,LEXHDRS S (LEXFI,LEXFIC)=0,LEXHDR=0
"RTN","LEXXGI",47,0)
 S LEXBLD=$G(^LEXM(0,"BUILD")) D:LEXOK HDR
"RTN","LEXXGI",48,0)
 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI=0  D FILES
"RTN","LEXXGI",49,0)
 Q
"RTN","LEXXGI",50,0)
FILES ; File Data
"RTN","LEXXGI",51,0)
 N LEXCF,LEXCHG,LEXCHGS,LEXCNT,LEXCNT,LEXFIL,LEXI,LEXIEN,LEXL,LEXLC
"RTN","LEXXGI",52,0)
 N LEXMUMPS,LEXNM,LEXRT,LEXS,LEXTOT,LEXTXT,LEXIGL,LEXIGI,LEXIGF,LEXIGT
"RTN","LEXXGI",53,0)
 N LEXIGD,LEXIGO,LEXBEG,LEXEND,LEXELP,LEXFB
"RTN","LEXXGI",54,0)
 S LEXFB=$G(^LEXM(+LEXFI,0,"BUILD")),LEXIGO=0,LEXBEG=$$HACK D BEG^LEXXGI2
"RTN","LEXXGI",55,0)
 S (LEXCNT,LEXLC,LEXI)=0,LEXL=68,LEXFIC=LEXFIC+1
"RTN","LEXXGI",56,0)
 D:LEXOK FHDR(LEXFI)
"RTN","LEXXGI",57,0)
 S LEXTOT=+($G(^LEXM(LEXFI,0))) Q:LEXTOT=0
"RTN","LEXXGI",58,0)
 S LEXNM=$G(^LEXM(LEXFI,0,"NM"))
"RTN","LEXXGI",59,0)
 I $L(LEXNM),LEXNM'["FILE",LEXNM'["File",LEXNM'["file" D
"RTN","LEXXGI",60,0)
 . S LEXNM=LEXNM_" FILE"
"RTN","LEXXGI",61,0)
 S:$L(LEXNM) LEXNM=$$MIX(LEXNM) S LEXCHG=$G(^LEXM(LEXFI,0))
"RTN","LEXXGI",62,0)
 S LEXTXT="   "_LEXNM,LEXTXT=LEXTXT_$J("",(40-$L(LEXTXT)))_LEXFI
"RTN","LEXXGI",63,0)
 D:LEXFIC=1 PB(LEXTXT) D:LEXFIC'=1 TL(LEXTXT)
"RTN","LEXXGI",64,0)
 S LEXS=+(LEXTOT\LEXL) S:LEXS=0 LEXS=1 W:+($O(^LEXM(LEXFI,0)))>0 !,"   "
"RTN","LEXXGI",65,0)
 F  S LEXI=$O(^LEXM(LEXFI,LEXI)) Q:+LEXI=0  D
"RTN","LEXXGI",66,0)
 . S LEXCNT=LEXCNT+1,LEXMUMPS=$G(^LEXM(LEXFI,LEXI))
"RTN","LEXXGI",67,0)
 . I LEXCNT'<LEXS S LEXLC=LEXLC+1 W:LEXLC'>LEXL "." S LEXCNT=0
"RTN","LEXXGI",68,0)
 . S LEXRT=$P(LEXMUMPS,"^",2)
"RTN","LEXXGI",69,0)
 . S:LEXMUMPS["^LEX("!(LEXMUMPS["^LEXT(")!(LEXMUMPS["^LEXC(") LEXFIL=+($P(LEXRT,"(",2)),LEXFL(+($P(LEXRT,"(",2)))=""
"RTN","LEXXGI",70,0)
 . S:LEXMUMPS["^ICD9(" LEXFIL=80,LEXFL(80)=""
"RTN","LEXXGI",71,0)
 . S:LEXMUMPS["^ICD0(" LEXFIL=80.1,LEXFL(80.1)=""
"RTN","LEXXGI",72,0)
 . S:LEXMUMPS["^ICPT(" LEXFIL=81,LEXFL(81)=""
"RTN","LEXXGI",73,0)
 . S:LEXMUMPS["^DIC(81.3" LEXFIL=81.3,LEXFL(81.3)=""
"RTN","LEXXGI",74,0)
 . S:LEXMUMPS["^LEX("!(LEXMUMPS["^LEXT(")!(LEXMUMPS["^LEXC(") LEXFIL=+($P(LEXRT,"(",2))
"RTN","LEXXGI",75,0)
 . S:LEXMUMPS["^ICD9(" LEXFIL=80 S:LEXMUMPS["^ICD0(" LEXFIL=80.1
"RTN","LEXXGI",76,0)
 . S:LEXMUMPS["^ICPT(" LEXFIL=81 S:LEXMUMPS["^DIC(81.3" LEXFIL=81.3
"RTN","LEXXGI",77,0)
 . S:+LEXFIL>0 LEXSCHG(+LEXFIL,0)=""
"RTN","LEXXGI",78,0)
 . S LEXCF=+($P(LEXMUMPS,"LEXC(757.9,""AFIL"",",2))
"RTN","LEXXGI",79,0)
 . S:$P(LEXCF,".",1)'="757"&("^80^80.1^81^81.3^"'[("^"_LEXCF_"^")) LEXCF=""
"RTN","LEXXGI",80,0)
 . S LEXIEN=+($P(LEXMUMPS,("LEXC(757.9,""AFIL"","_+LEXCF_","),2))
"RTN","LEXXGI",81,0)
 . S:+LEXIEN>0&(+LEXCF)>0&("^80^80.1^81^81.3)"[LEXCF)&(+LEXFIL=757.9)&(LEXMUMPS["LEXC(757.9") LEXSCHG(+LEXFIL,LEXIEN)=LEXCF,LEXSCHG(757.9,"B",+LEXCF,LEXIEN)=""
"RTN","LEXXGI",82,0)
 . I $L(LEXMUMPS) D
"RTN","LEXXGI",83,0)
 . . S:$L(LEXCF) LEXCHGS(LEXCF)="" X LEXMUMPS S LEXIGO=1
"RTN","LEXXGI",84,0)
 I +($G(LEXIGO))>0 D
"RTN","LEXXGI",85,0)
 . S LEXEND=$$HACK S LEXELP=$$ELAP(LEXBEG,LEXEND)
"RTN","LEXXGI",86,0)
 . S:LEXELP="" LEXELP="00:00:00" D END^LEXXGI2
"RTN","LEXXGI",87,0)
 K ^LEXM(LEXFI)
"RTN","LEXXGI",88,0)
 Q
"RTN","LEXXGI",89,0)
HDR ; Header - Full
"RTN","LEXXGI",90,0)
 N LEXCRE,LEXL1 S LEXL1=""
"RTN","LEXXGI",91,0)
 S LEXCRE=$G(^LEXM(0,"CREATED"))
"RTN","LEXXGI",92,0)
 S LEXCRE=$S(+LEXCRE>0:($$MIX($$FMTE^XLFDT(LEXCRE))),1:"")
"RTN","LEXXGI",93,0)
 S:$L($P(LEXCRE,"@",2)) LEXCRE=$P(LEXCRE,"@",1)_" at "_$P(LEXCRE,"@",2)
"RTN","LEXXGI",94,0)
 S LEXL1=" Updating files "
"RTN","LEXXGI",95,0)
 S:$L($G(LEXCRE))&($L($G(LEXL1))) LEXL1=$G(LEXL1)_"using export global created "_$G(LEXCRE)
"RTN","LEXXGI",96,0)
 D PB(LEXL1)
"RTN","LEXXGI",97,0)
 Q
"RTN","LEXXGI",98,0)
FHDR(X) ; Header
"RTN","LEXXGI",99,0)
 N LEXB,LEXFI,LEXFID,LEXNM,LEXVR,LEXRV,LEXDT,LEXL1,LEXL2 S (LEXL1,LEXL2)="",LEXFI=+($G(X)),LEXFID=$P(LEXFI,".",1)
"RTN","LEXXGI",100,0)
 Q:+LEXFID'>0  Q:$D(LEXHDRS(+LEXFID))  S LEXHDRS(LEXFID)=""
"RTN","LEXXGI",101,0)
 S:+LEXFI=81!(+LEXFI=81.3) LEXHDRS(81)="",LEXHDRS(81.3)=""
"RTN","LEXXGI",102,0)
 S:LEXFID=80 LEXNM="ICD-9-CM" S:LEXFID=81 LEXNM="CPT-4/HCPSC" S:LEXFID=757 LEXNM="Lexicon"
"RTN","LEXXGI",103,0)
 S LEXB=$G(^LEXM(LEXFI,0,"BUILD"))
"RTN","LEXXGI",104,0)
 S LEXVR=$G(^LEXM(LEXFI,0,"VR")),LEXRV=$G(^LEXM(LEXFI,0,"VRRV"))
"RTN","LEXXGI",105,0)
 S LEXDT=$$MIX($$FMTE^XLFDT($P(LEXRV,"^",2))),LEXRV=$P(LEXRV,"^",1)
"RTN","LEXXGI",106,0)
 S LEXL1="Updating "_LEXNM S:$L(LEXB) LEXL1=LEXL1_" with patch/build "_LEXB
"RTN","LEXXGI",107,0)
 S:$L(LEXVR) LEXL2=" To version "_LEXVR
"RTN","LEXXGI",108,0)
 S:$L(LEXVR)&($L(LEXRV)) LEXL2=LEXL2_" revision "_LEXRV
"RTN","LEXXGI",109,0)
 S:$L(LEXVR)&($L(LEXRV))&($L(LEXDT)) LEXL2=LEXL2_" dated "_LEXDT
"RTN","LEXXGI",110,0)
 S:$L(LEXL1) LEXL1=" "_LEXL1 S:$L(LEXL2) LEXL2=" "_LEXL2
"RTN","LEXXGI",111,0)
 D BL D:$L(LEXL1) TL(LEXL1) D:$L(LEXL2) TL(LEXL2),BL
"RTN","LEXXGI",112,0)
 Q
"RTN","LEXXGI",113,0)
NF ; Import Global Not Found
"RTN","LEXXGI",114,0)
 D PB("Import Global ^LEXM not found, consult the installation instructions")
"RTN","LEXXGI",115,0)
 D TL("to install this global")
"RTN","LEXXGI",116,0)
 Q
"RTN","LEXXGI",117,0)
BL ; Blank Line
"RTN","LEXXGI",118,0)
 N X S X="" W:'$D(XPDNM) ! D:$D(XPDNM) MES^XPDUTL(X) Q
"RTN","LEXXGI",119,0)
PB(X) ; Preceeding Blank Line
"RTN","LEXXGI",120,0)
 S X=$G(X) Q:'$L(X)  W:'$D(XPDNM) !!,X D:$D(XPDNM) BMES^XPDUTL(X) Q
"RTN","LEXXGI",121,0)
TL(X) ; Text Line
"RTN","LEXXGI",122,0)
 S X=$G(X) Q:'$L(X)  W:'$D(XPDNM) !,X D:$D(XPDNM) MES^XPDUTL(X) Q
"RTN","LEXXGI",123,0)
HACK(X) ; Time Hack
"RTN","LEXXGI",124,0)
 S X=$$NOW^XLFDT Q X
"RTN","LEXXGI",125,0)
ELAP(X1,X2) ; Elapsed Time (start,end)
"RTN","LEXXGI",126,0)
 N X S X=$$FMDIFF^XLFDT(+($G(X2)),+($G(X1)),3)
"RTN","LEXXGI",127,0)
 S:X="" X="00:00:00" S X=$TR(X," ","0") S X1=X Q X1
"RTN","LEXXGI",128,0)
 Q
"RTN","LEXXGI",129,0)
CHECKSUM ; ^LEXM Checksum for Environment Check
"RTN","LEXXGI",130,0)
 W !!,"Running checksum routine on the ^LEXM import global, please wait"
"RTN","LEXXGI",131,0)
 N LEXCHK,LEXNDS,LEXVER S LEXCHK=+($G(^LEXM(0,"CHECKSUM")))
"RTN","LEXXGI",132,0)
 S LEXNDS=+($G(^LEXM(0,"NODES"))),LEXVER=+($$VER(LEXCHK,LEXNDS))
"RTN","LEXXGI",133,0)
 W ! W:LEXVER>0 "  ok",!
"RTN","LEXXGI",134,0)
 D:LEXVER=0 ET("Import global ^LEXM is missing.  Please obtain a copy of ^LEXM before"),ET("continuing.")
"RTN","LEXXGI",135,0)
 D:LEXVER=-1 ET("Unable to verify checksum for import global ^LEXM (possibly corrupt). "),ET("Please obtain a new copy of ^LEXM before continuing.")
"RTN","LEXXGI",136,0)
 D:LEXVER=-2 ET("Import global ^LEXM failed checksum.  Please obtain a new copy of ^LEXM"),ET("before continuing.")
"RTN","LEXXGI",137,0)
 I LEXVER=-3 D
"RTN","LEXXGI",138,0)
 . D ET("Import global ^LEXM failed checksum.  Additionally, your copy of the import")
"RTN","LEXXGI",139,0)
 . D ET("global ^LEXM is not complete (the number of global nodes exported and the")
"RTN","LEXXGI",140,0)
 . D ET("number of global nodes received do not match).  Please obtain a new copy of")
"RTN","LEXXGI",141,0)
 . D ET("^LEXM before continuing.")
"RTN","LEXXGI",142,0)
 D:$D(LEXE)&('$D(XPDNM)) ED
"RTN","LEXXGI",143,0)
 Q
"RTN","LEXXGI",144,0)
VER(X1,X2) ; Verify ^LEXM Global
"RTN","LEXXGI",145,0)
 Q:'$D(^LEXM) 0
"RTN","LEXXGI",146,0)
 N LEXC,LEXCHK,LEXCNT,LEXD,LEXE,LEXGCS,LEXL,LEXLC,LEXN,LEXNC
"RTN","LEXXGI",147,0)
 N LEXNDX,LEXP,LEXS,LEXT
"RTN","LEXXGI",148,0)
 S LEXCHK=+($G(X1)),LEXNDS=+($G(X2)) Q:LEXCHK'>0!(LEXNDS'>0) -1
"RTN","LEXXGI",149,0)
 S LEXL=68,(LEXCNT,LEXLC)=0,LEXS=+(LEXNDS\LEXL)
"RTN","LEXXGI",150,0)
 S:LEXS=0 LEXS=1 W:+($O(^LEXM(0)))>0 !
"RTN","LEXXGI",151,0)
 S (LEXC,LEXN)="^LEXM",(LEXNC,LEXGCS)=0
"RTN","LEXXGI",152,0)
 F  S LEXN=$Q(@LEXN) Q:LEXN=""!(LEXN'[LEXC)  D
"RTN","LEXXGI",153,0)
 . Q:LEXN="^LEXM(0,""CHECKSUM"")"  Q:LEXN="^LEXM(0,""NODES"")"
"RTN","LEXXGI",154,0)
 . S LEXCNT=LEXCNT+1
"RTN","LEXXGI",155,0)
 . I LEXCNT'<LEXS S LEXLC=LEXLC+1 W:LEXLC'>LEXL "." S LEXCNT=0
"RTN","LEXXGI",156,0)
 . S LEXNC=LEXNC+1,LEXD=@LEXN,LEXT=LEXN_"="_LEXD,LEXE=$L(LEXT)
"RTN","LEXXGI",157,0)
 . F LEXP=1:1:LEXE S LEXGCS=$A(LEXT,LEXP)*LEXP+LEXGCS
"RTN","LEXXGI",158,0)
 Q:LEXNC'=LEXNDS -3 Q:LEXGCS'=LEXCHK -2 Q 1
"RTN","LEXXGI",159,0)
ET(X) ; Error Text (save)
"RTN","LEXXGI",160,0)
 N LEXI S LEXI=+($G(LEXE(0))),LEXI=LEXI+1,LEXE(LEXI)=$G(X),LEXE(0)=LEXI Q
"RTN","LEXXGI",161,0)
ED ; Error Text (display)
"RTN","LEXXGI",162,0)
 N LEXI S LEXI=0 F  S LEXI=$O(LEXE(LEXI)) Q:+LEXI=0  W !,LEXE(LEXI)
"RTN","LEXXGI",163,0)
 W ! K LEXE Q
"RTN","LEXXGI",164,0)
MIX(X) ; Mixed Case
"RTN","LEXXGI",165,0)
 S X=$G(X) N LEXTXT,LEXI S LEXTXT=""
"RTN","LEXXGI",166,0)
 F LEXI=1:1:$L(X," ") S LEXTXT=LEXTXT_" "_$$UP($E($P(X," ",LEXI),1))_$$LO($E($P(X," ",LEXI),2,$L($P(X," ",LEXI))))
"RTN","LEXXGI",167,0)
 F  Q:$E(LEXTXT,1)'=" "  S LEXTXT=$E(LEXTXT,2,$L(LEXTXT))
"RTN","LEXXGI",168,0)
 S:$E(LEXTXT,1,3)="Cpt" LEXTXT="CPT"_$E(LEXTXT,4,$L(LEXTXT))
"RTN","LEXXGI",169,0)
 S:$E(LEXTXT,1,3)="Icd" LEXTXT="ICD"_$E(LEXTXT,4,$L(LEXTXT))
"RTN","LEXXGI",170,0)
 S X=LEXTXT Q X
"RTN","LEXXGI",171,0)
UP(X) ; Uppercase
"RTN","LEXXGI",172,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXGI",173,0)
LO(X) ; Lowercase
"RTN","LEXXGI",174,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXGI2")
0^21^B25914700
"RTN","LEXXGI2",1,0)
LEXXGI2 ; ISL Global Import (Update Change File w/^LEXM)  ; 05/14/2003
"RTN","LEXXGI2",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXXGI2",3,0)
 ;
"RTN","LEXXGI2",4,0)
 ; External References
"RTN","LEXXGI2",5,0)
 ;   DBIA  10103  $$NOW^XLFDT
"RTN","LEXXGI2",6,0)
 ;   DBIA  10103  $$DT^XLFDT
"RTN","LEXXGI2",7,0)
 ;   DBIA   2052  $$GET1^DID
"RTN","LEXXGI2",8,0)
 ;   DBIA  10006  ^DIC  (file #757.903)
"RTN","LEXXGI2",9,0)
 ;   DBIA  10009  FILE^DICN  (file #757.903)
"RTN","LEXXGI2",10,0)
 ;   DBIA  10013  IX1^DIK
"RTN","LEXXGI2",11,0)
 ;   DBIA  10018  ^DIE
"RTN","LEXXGI2",12,0)
 ;
"RTN","LEXXGI2",13,0)
 Q
"RTN","LEXXGI2",14,0)
BEG ; Begin Update
"RTN","LEXXGI2",15,0)
 Q:'$L($G(LEXBLD))  Q:'$L($G(LEXFI))  Q:+($G(LEXFI))'>0  Q:'$L($$GET1^DID(+($G(LEXFI)),.01,,"LABEL"))  Q:+($G(LEXBEG))'>0
"RTN","LEXXGI2",16,0)
 N LEXIGI,LEXIGD,LEXIGT,LEXIGL,LEXIGG,LEXIGB,LEXEXP
"RTN","LEXXGI2",17,0)
 S LEXIGI=$G(LEXBLD),LEXIGD=$$DT^XLFDT,LEXIGT=LEXBEG,LEXEXP=+($P($G(LEXEDT),".",1))
"RTN","LEXXGI2",18,0)
 S LEXEXP=$S((+LEXEXP>0&($L(LEXEXP)=7)):LEXEXP,1:0) S:LEXEXP>0 LEXIGD=LEXEXP
"RTN","LEXXGI2",19,0)
 S LEXIGL=$$LOG(LEXIGD,LEXIGI) Q:+LEXIGL'>0  S LEXIGB=$G(LEXFB)
"RTN","LEXXGI2",20,0)
 S LEXIGF=LEXFI D STRT(LEXIGL,LEXIGI,LEXIGF,LEXIGT,LEXIGB)
"RTN","LEXXGI2",21,0)
 Q
"RTN","LEXXGI2",22,0)
END ; End Update
"RTN","LEXXGI2",23,0)
 Q:'$L($G(LEXBLD))  Q:'$L($G(LEXFI))  Q:+($G(LEXFI))'>0  Q:'$L($$GET1^DID(+($G(LEXFI)),.01,,"LABEL"))  Q:+($G(LEXBEG))'>0  Q:+($G(LEXEND))'>0  Q:'$L($G(LEXELP))
"RTN","LEXXGI2",24,0)
 N LEXIGI,LEXIGD,LEXIGT,LEXIGL,LEXIGG,LEXDA0,LEXDA1,LEXDA2,LEXEXP
"RTN","LEXXGI2",25,0)
 S LEXEXP=+($P($G(LEXEDT),".",1)) S LEXEXP=$S((+LEXEXP>0&($L(LEXEXP)=7)):LEXEXP,1:0)
"RTN","LEXXGI2",26,0)
 S LEXDA2=$O(^LEXC(757.9,"C",LEXBLD,0)) Q:+LEXDA2'>0
"RTN","LEXXGI2",27,0)
 S LEXDA2=$O(^LEXC(757.903,"B",LEXDA2,0)) Q:+LEXDA2'>0
"RTN","LEXXGI2",28,0)
 S LEXDA1=$O(^LEXC(757.903,LEXDA2,1,"B",LEXFI,0)) Q:+LEXDA1'>0
"RTN","LEXXGI2",29,0)
 S LEXDA0=$O(^LEXC(757.903,LEXDA2,1,LEXDA1,1,"B",LEXBEG,0)) Q:+LEXDA0'>0
"RTN","LEXXGI2",30,0)
 D COMP(LEXDA2,LEXDA1,LEXDA0,LEXEND,LEXELP)
"RTN","LEXXGI2",31,0)
 Q
"RTN","LEXXGI2",32,0)
STRT(LEXIGL,LEXIGI,LEXIGF,LEXIGT,LEXIGB) ; Start Date/Time
"RTN","LEXXGI2",33,0)
 Q:+($G(LEXIGL))'>0  Q:'$D(^LEXC(757.9,+($G(LEXIGL)),0))
"RTN","LEXXGI2",34,0)
 Q:'$L($G(LEXIGI))  Q:+($G(LEXIGF))'>0  Q:'$L($$GET1^DID(+($G(LEXIGF)),.01,,"LABEL"))  Q:+($G(LEXIGT))'>0
"RTN","LEXXGI2",35,0)
 N DIE,DIC,DIK,DTOUT,DUOUT,DIROUT,DIRUT,DLAYGO,DA,DR,X,Y,LEXDA,LEXDA1,LEXDA2
"RTN","LEXXGI2",36,0)
 S LEXDA2=$$IG(LEXIGL,LEXIGI) Q:+LEXDA2'>0  Q:'$D(^LEXC(757.903,+LEXDA2,0))
"RTN","LEXXGI2",37,0)
 S LEXDA1=$$IGF(LEXDA2,LEXIGF,$G(LEXIGB)) Q:+LEXDA1'>0  Q:'$D(^LEXC(757.903,+LEXDA2,1,+LEXDA1,0))
"RTN","LEXXGI2",38,0)
 S DA(2)=LEXDA2,DA(1)=LEXDA1,X=LEXIGT,DIC="^LEXC(757.903,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","LEXXGI2",39,0)
 S DLAYGO=757.90311,DIC("P")="757.90311D",DIC(0)="ML" S DIC("DR")=".01////^S X=LEXIGT"
"RTN","LEXXGI2",40,0)
 D ^DIC S LEXDA=+($G(Y)) S DA=LEXDA2,DIK="^LEXC(757.903," D IX1^DIK
"RTN","LEXXGI2",41,0)
 Q
"RTN","LEXXGI2",42,0)
COMP(LEXDA2,LEXDA1,LEXDA0,LEXEND,LEXELP) ; Completion Date/Time
"RTN","LEXXGI2",43,0)
 Q:+($G(LEXDA2))'>0  Q:'$D(^LEXC(757.903,+($G(LEXDA2)),0))
"RTN","LEXXGI2",44,0)
 Q:+($G(LEXDA1))'>0  Q:'$D(^LEXC(757.903,+($G(LEXDA2)),1,+($G(LEXDA1)),0))
"RTN","LEXXGI2",45,0)
 Q:+($G(LEXDA0))'>0  Q:'$D(^LEXC(757.903,+($G(LEXDA2)),1,+($G(LEXDA1)),1,+($G(LEXDA0)),0))
"RTN","LEXXGI2",46,0)
 Q:+($G(LEXEND))'>0  Q:'$L($G(LEXELP))  Q:$L($G(LEXELP))>10
"RTN","LEXXGI2",47,0)
 N DIE,DIC,DIK,DTOUT,DUOUT,DIROUT,DIRUT,DLAYGO,DA,DR,X,Y,LEXL
"RTN","LEXXGI2",48,0)
 S DA(2)=LEXDA2,DA(1)=LEXDA1,DA=LEXDA0,DIE="^LEXC(757.903,"_LEXDA2_",1,"_LEXDA1_",1,",DR=".02////^S X=$G(LEXEND);.03////^S X=$G(LEXELP)"
"RTN","LEXXGI2",49,0)
C2 L +^LEXC(757.903,LEXDA2):0 S LEXL=+($T)
"RTN","LEXXGI2",50,0)
 I LEXL D ^DIE L -^LEXC(757.903,LEXDA2) Q
"RTN","LEXXGI2",51,0)
 I 'LEXL G C2
"RTN","LEXXGI2",52,0)
 Q
"RTN","LEXXGI2",53,0)
IG(LEXIGL,LEXIGI) ; Import Global
"RTN","LEXXGI2",54,0)
 Q:+($G(LEXIGL))'>0 -1  Q:'$D(^LEXC(757.9,+($G(LEXIGL)),0)) -1  Q:'$L($G(LEXIGI)) -1
"RTN","LEXXGI2",55,0)
 N DIE,DIC,DTOUT,DUOUT,DIROUT,DIRUT,DLAYGO,DA,DR,LEXI1,LEXI2,LEXDA,LEXDA1,LEXDA2
"RTN","LEXXGI2",56,0)
 S LEXI1=$O(^LEXC(757.903,"B",LEXIGL,0)),LEXI2=$O(^LEXC(757.903,"C",LEXIGI,0))
"RTN","LEXXGI2",57,0)
 Q:+LEXI1>0&(LEXI1=LEXI2) LEXI1  Q:LEXI2>0&($D(^LEXC(757.903,"B",LEXIGL,+LEXI2))) LEXI2  Q:LEXI1>0&($D(^LEXC(757.903,"C",LEXIGI,+LEXI1))) LEXI1
"RTN","LEXXGI2",58,0)
 S DIC="^LEXC(757.903,",DLAYGO=757.903,DIC(0)="ML",X=$P($G(^LEXC(757.9,+($G(LEXIGL)),0)),"^",1) Q:'$L(X) -1
"RTN","LEXXGI2",59,0)
 S DIC("DR")=".01////^S X=LEXIGL;.02////^S X=LEXIGI" K DO,D0 D FILE^DICN S X=+Y
"RTN","LEXXGI2",60,0)
 Q X
"RTN","LEXXGI2",61,0)
IGF(LEXDA2,LEXIGF,LEXIGB) ; Import Global File
"RTN","LEXXGI2",62,0)
 Q:+($G(LEXDA2))'>0 -1  Q:'$D(^LEXC(757.903,+($G(LEXDA2)),0)) -1
"RTN","LEXXGI2",63,0)
 Q:+($G(LEXIGF))'>0 -1  Q:'$L($$GET1^DID(+($G(LEXIGF)),.01,,"LABEL")) -1
"RTN","LEXXGI2",64,0)
 N DIE,DIC,DTOUT,DUOUT,DIROUT,DIRUT,DLAYGO,X,Y,DA
"RTN","LEXXGI2",65,0)
 S DIC="^LEXC(757.903,"_LEXDA2_",1,",DA(1)=LEXDA2,DLAYGO=757.9031,DIC("P")="757.9031P",DIC(0)="ML",X=LEXIGF
"RTN","LEXXGI2",66,0)
 S DIC("DR")=".01////^S X=LEXIGF" S:$L($G(LEXIGB)) DIC("DR")=".01////^S X=LEXIGF;.02////^S X=LEXIGB"
"RTN","LEXXGI2",67,0)
 D ^DIC S X=+Y
"RTN","LEXXGI2",68,0)
 Q X
"RTN","LEXXGI2",69,0)
LOG(LEXDT,LEXBD) ; Get Change Log IEN
"RTN","LEXXGI2",70,0)
 Q:+($G(LEXDT))'>0 -1  Q:'$L($G(LEXBD)) -1
"RTN","LEXXGI2",71,0)
 N DIE,DIC,DTOUT,DUOUT,DIROUT,DIRUT,DLAYGO,DA,DR,X,Y,LEXLOG,LEXTY,LEXSD,LEXRE
"RTN","LEXXGI2",72,0)
 S LEXLOG=$O(^LEXC(757.9,"C",LEXBD,0)) Q:+LEXLOG>0 +LEXLOG
"RTN","LEXXGI2",73,0)
 S LEXTY=$$TYPE Q:+LEXTY'>0 -1  S LEXSD=$$SDO Q:+LEXSD'>0 -1
"RTN","LEXXGI2",74,0)
 S LEXRE="M",DIC="^LEXC(757.9,",DLAYGO=757.9,DIC(0)="ML",X=LEXDT
"RTN","LEXXGI2",75,0)
 S DIC("DR")=".01////^S X=LEXDT;.02////^S X=LEXTY;.03////^S X=LEXSD;.04////^S X=LEXBD;.05////^S X=LEXRE"
"RTN","LEXXGI2",76,0)
 D ^DIC S X=+($G(Y))
"RTN","LEXXGI2",77,0)
 Q X
"RTN","LEXXGI2",78,0)
TYPE(X) ; Get Change Type
"RTN","LEXXGI2",79,0)
 N DIE,DIC,DTOUT,DUOUT,DIROUT,DIRUT,DLAYGO,Y,LEXS,LEXI,LEXN S LEXN="Routine Maintenance",LEXS="Maintenance",LEXI=$O(^LEXC(757.901,"C",$$UP(LEXN),0)) Q:+LEXI>0 +LEXI
"RTN","LEXXGI2",80,0)
 S DIC="^LEXC(757.901,",DLAYGO=757.901,DIC(0)="ML",X=LEXN
"RTN","LEXXGI2",81,0)
 S DIC("DR")=".01////^S X=$E(LEXN,1,30);.02////^S X=$E(LEXS,1,13)" D ^DIC S X=+Y
"RTN","LEXXGI2",82,0)
 Q X
"RTN","LEXXGI2",83,0)
SDO(X) ; Get Standards Organization
"RTN","LEXXGI2",84,0)
 N DIE,DIC,DTOUT,DUOUT,DIROUT,DIRUT,DLAYGO,Y,LEXS,LEXI,LEXN S LEXN="VistA Lexicon Utility",LEXS="Vista"
"RTN","LEXXGI2",85,0)
 S LEXI=$O(^LEXC(757.902,"C",$$UP(LEXN),0)) Q:+LEXI>0 +LEXI
"RTN","LEXXGI2",86,0)
 S DIC="^LEXC(757.902,",DLAYGO=757.902,DIC(0)="ML",X=LEXN
"RTN","LEXXGI2",87,0)
 S DIC("DR")=".01////^S X=$E(LEXN,1,30);.02////^S X=$E(LEXS,1,13)" D ^DIC S X=+Y
"RTN","LEXXGI2",88,0)
 Q X
"RTN","LEXXGI2",89,0)
UP(X) ; Uppercase
"RTN","LEXXGI2",90,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXST")
0^22^B63588277
"RTN","LEXXST",1,0)
LEXXST ; ISL Lexicon Status (Main/Files)          ; 05/14/2003
"RTN","LEXXST",2,0)
 ;;2.0;LEXICON UTILITY;**4,5,8,25**;Sep 23, 1996
"RTN","LEXXST",3,0)
 ;            
"RTN","LEXXST",4,0)
 ; External References
"RTN","LEXXST",5,0)
 ;   DBIA 10096  ^%ZOSF("PROD"
"RTN","LEXXST",6,0)
 ;   DBIA 10096  ^%ZOSF("UCI"
"RTN","LEXXST",7,0)
 ;   DBIA 10060  ^VA(200 
"RTN","LEXXST",8,0)
 ;   DBIA 10000  NOW^%DTC
"RTN","LEXXST",9,0)
 ;   DBIA 10086  ^%ZIS   
"RTN","LEXXST",10,0)
 ;   DBIA 10086  HOME^%ZIS
"RTN","LEXXST",11,0)
 ;   DBIA 10089  ^%ZISC  
"RTN","LEXXST",12,0)
 ;   DBIA 10063  ^%ZTLOAD
"RTN","LEXXST",13,0)
 ;   DBIA  2052  FILE^DID
"RTN","LEXXST",14,0)
 ;   DBIA 10103  $$FMTE^XLFDT
"RTN","LEXXST",15,0)
 ;   DBIA 10104  $$UP^XLFSTR
"RTN","LEXXST",16,0)
 ;   DBIA 10070  ^XMD
"RTN","LEXXST",17,0)
 ;                         
"RTN","LEXXST",18,0)
DISP ; Display Status only
"RTN","LEXXST",19,0)
 K ^TMP($J,"LEXINFO"),LEXMAIL,LEXAO N X,Y,LEXM,LEXY
"RTN","LEXXST",20,0)
 D DATA,SHOW Q
"RTN","LEXXST",21,0)
SEND ; Send Status to G.LEXINS@ISC-SLC.VA.GOV
"RTN","LEXXST",22,0)
 K ^TMP($J,"LEXINFO") N X,Y,LEXM,LEXY S:$L($G(LEXBUILD)) ZTSAVE("LEXBUILD")=""
"RTN","LEXXST",23,0)
 S ZTRTN="SENDTO^LEXXST",ZTDESC="Lexicon Status Report Msg [LEXXST]",ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXXST",24,0)
 K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTRTN Q
"RTN","LEXXST",25,0)
SENDTO ; Send Status (Tasked)
"RTN","LEXXST",26,0)
 N LEXMAIL,LEXAO S (LEXMAIL,LEXAO)="" S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXST",27,0)
 D N0,DATA,SHOW Q
"RTN","LEXXST",28,0)
DATA ; Get Data
"RTN","LEXXST",29,0)
 D TITLE,FILES,PT^LEXXST2,RTT^LEXXST2,KIDS^LEXXST3,RTN^LEXXST3,FS^LEXXST5
"RTN","LEXXST",30,0)
 Q
"RTN","LEXXST",31,0)
TITLE ; Title of display/message
"RTN","LEXXST",32,0)
 N LEXT,LEXA,LEXD,LEXU,LEXN,LEXP
"RTN","LEXXST",33,0)
 S LEXT="LEXICON UTILITY STATUS",LEXD=$$A,LEXA=$$U
"RTN","LEXXST",34,0)
 S LEXU=$$P,LEXN=$P(LEXU,"^",1),LEXP=$P(LEXU,"^",2)
"RTN","LEXXST",35,0)
 I $D(LEXAO) D  Q
"RTN","LEXXST",36,0)
 . D:$L(LEXT) TT(LEXT),BL S:$L(LEXD) LEXT="  AS OF:       "_LEXD D:$L(LEXD) TL(LEXT) S LEXT="" S:$L(LEXA) LEXT="  IN ACCOUNT:  "_$S($L($P(LEXA,"^",1)):"[",1:"")_$P(LEXA,"^",1)_$S($L($P(LEXA,"^",2)):"]",1:"")
"RTN","LEXXST",37,0)
 . S:$L(LEXT)&($L($P(LEXA,"^",2))) LEXT=LEXT_"  "_$P(LEXA,"^",2) D:$L(LEXA) TL(LEXT)
"RTN","LEXXST",38,0)
 . S LEXT="" S:$L(LEXU) LEXT="  MAINT BY:    " S:$L(LEXN) LEXT=LEXT_LEXN S:$L(LEXP)&($L(LEXN)) LEXT=LEXT_"   "_LEXP D:$L(LEXT) TL(LEXT)
"RTN","LEXXST",39,0)
 . S LEXT="" S:$L($G(LEXBUILD)) LEXT="  BUILD:       "_$G(LEXBUILD)
"RTN","LEXXST",40,0)
 . D:$L(LEXT) TL(LEXT) D BL
"RTN","LEXXST",41,0)
 I '$D(LEXAO) D  Q
"RTN","LEXXST",42,0)
 . D:$L(LEXT) TT(LEXT),BL S:$L(LEXD) LEXT="  AS OF:       "_LEXD D:$L(LEXD) TL(LEXT) S LEXT="" S:$L(LEXA) LEXT="  IN ACCOUNT:  "_$S($L($P(LEXA,"^",1)):"[",1:"")_$P(LEXA,"^",1)_$S($L($P(LEXA,"^",2)):"]",1:"")
"RTN","LEXXST",43,0)
 . S:$L(LEXT)&($L($P(LEXA,"^",2))) LEXT=LEXT_"  "_$P(LEXA,"^",2) D:$L(LEXA) TL(LEXT) D BL
"RTN","LEXXST",44,0)
 Q
"RTN","LEXXST",45,0)
U(LEX) ; UCI where Lexicon is installed
"RTN","LEXXST",46,0)
 N LEXU,LEXP,LEXT X ^%ZOSF("UCI") S LEXU=Y S:Y=^%ZOSF("PROD") LEXP=" (PRODUCTION)"
"RTN","LEXXST",47,0)
 S:Y'=^%ZOSF("PROD") LEXP=" (TEST)" S:LEXU["DEM" LEXP=" (DEMO)" S LEX="",$P(LEX,"^",1)=LEXU,$P(LEX,"^",2)=LEXP Q LEX
"RTN","LEXXST",48,0)
FILES ; File version/contents
"RTN","LEXXST",49,0)
 N LEXCT,LEXT,LEXSP,LEXFI,LEXX,LEXGL,LEXNM,LEXVR,LEXLR,LEXTR,LEXRLR
"RTN","LEXXST",50,0)
 N LEXDDA,LEXPRD,LEXRN,LEXRD,LEXFCT
"RTN","LEXXST",51,0)
 S LEXFI=756.999999,LEXCT=0,LEXSP="                           ",LEXFCT=$$FC
"RTN","LEXXST",52,0)
 S LEXT="     FILE     NAME                   VER  REV     DATE      LAST IEN    RECORDS"
"RTN","LEXXST",53,0)
 D BL,TT("FILE VERSIONS/REVISIONS"),BL,TL(LEXT),BK1
"RTN","LEXXST",54,0)
 D:+LEXFCT'>0 BL,TL("       NO FILES FOUND") Q:+LEXFCT'>0
"RTN","LEXXST",55,0)
 S LEXFI=756.999999 F  S LEXFI=$O(^LEX(LEXFI)) Q:+LEXFI=0!($E(LEXFI,1,3)'="757")  D FL
"RTN","LEXXST",56,0)
 S LEXFI=756.999999 F  S LEXFI=$O(^LEXT(LEXFI)) Q:+LEXFI=0!($E(LEXFI,1,3)'="757")  D FL
"RTN","LEXXST",57,0)
 S LEXFI=756.999999 F  S LEXFI=$O(^LEXC(LEXFI)) Q:+LEXFI=0!($E(LEXFI,1,3)'="757")  D FL
"RTN","LEXXST",58,0)
 F LEXFI=80,80.1,81,81.3 D FL
"RTN","LEXXST",59,0)
 Q
"RTN","LEXXST",60,0)
FL ; File List
"RTN","LEXXST",61,0)
 N LEXN K LEXDDA S LEXN=$$ATTR(LEXFI,"NAME") Q:'$L(LEXN)
"RTN","LEXXST",62,0)
 S LEXGL=$$ATTR(LEXFI,"GLOBAL NAME") Q:'$L(LEXGL)
"RTN","LEXXST",63,0)
 S LEXX=LEXGL_"0)",LEXX=$G(@LEXX),LEXTR=+($P(LEXX,"^",4)),LEXLR=+($P(LEXX,"^",3))
"RTN","LEXXST",64,0)
 S LEXRLR=$O(@(LEXGL_""" "")"),-1) S:'$L($G(LEXX)) (LEXTR,LEXLR)="??" S:LEXRLR'=LEXLR (LEXTR,LEXLR)="??"
"RTN","LEXXST",65,0)
 S LEXNM=$E(LEXN,1,21),LEXX=$$ATTR(LEXFI,"VERSION")
"RTN","LEXXST",66,0)
 S LEXVR=$P(LEXX,".",1),LEXX=$P(LEXX,".",2),LEXVR=$J(LEXVR,3)_$S($L(LEXVR):".",1:"")_LEXX
"RTN","LEXXST",67,0)
 S LEXPRD=$$ATTR(LEXFI,"PACKAGE REVISION DATA")
"RTN","LEXXST",68,0)
 S LEXRN=$P(LEXPRD,"^",1) S:LEXRN="" LEXRN="1"
"RTN","LEXXST",69,0)
 S LEXRD=$P(LEXPRD,"^",2) S:LEXRD'="" LEXRD=$$MDCY(LEXRD)
"RTN","LEXXST",70,0)
 S:LEXRD="" LEXRD="10/04/96"
"RTN","LEXXST",71,0)
 S LEXCT=LEXCT+1,LEXT=$J(LEXCT,3)_"  "_LEXFI_$E(LEXSP,1,(9-$L(LEXFI)))
"RTN","LEXXST",72,0)
 S LEXT=LEXT_LEXNM_$E(LEXSP,1,(21-$L(LEXNM))),LEXT=LEXT_LEXVR_$E(LEXSP,1,(8-$L(LEXVR)))
"RTN","LEXXST",73,0)
 S LEXT=LEXT_LEXRN_$E(LEXSP,1,(4-$L(LEXRN))),LEXT=LEXT_LEXRD_$E(LEXSP,1,(14-$L(LEXRD)))
"RTN","LEXXST",74,0)
 S LEXT=LEXT_$J(LEXLR,7)_"    "_$J(LEXTR,7) D TL(LEXT)
"RTN","LEXXST",75,0)
 Q
"RTN","LEXXST",76,0)
SHOW ; Show global array (display or mail)
"RTN","LEXXST",77,0)
 D:$D(LEXMAIL) MAIL,CLR D:'$D(LEXMAIL) DSP,CLR Q
"RTN","LEXXST",78,0)
SHOW2 ; Display global array
"RTN","LEXXST",79,0)
 N LEXI S LEXI=0 F  S LEXI=$O(^TMP($J,"LEXINFO",LEXI)) Q:+LEXI=0  W !,^TMP($J,"LEXINFO",LEXI)
"RTN","LEXXST",80,0)
 Q
"RTN","LEXXST",81,0)
MAIL ; Mail global array in message
"RTN","LEXXST",82,0)
 N DIFROM,LEXADR S U="^",XMSUB="LEXICON INFO",LEXADR=$$ADR^LEXU Q:'$L(LEXADR)
"RTN","LEXXST",83,0)
 S XMY(("G.LEXINS@"_LEXADR))="",XMTEXT="^TMP($J,""LEXINFO"",",XMDUZ=.5 D ^XMD
"RTN","LEXXST",84,0)
 K ^TMP($J,"LEXINFO"),%Z,XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ Q
"RTN","LEXXST",85,0)
 Q
"RTN","LEXXST",86,0)
CLR ; Clean up
"RTN","LEXXST",87,0)
 K ^TMP($J,"LEXINFO") Q
"RTN","LEXXST",88,0)
BL ; Blank Line
"RTN","LEXXST",89,0)
 N LEXNX S LEXNX=+($$NX),^TMP($J,"LEXINFO",LEXNX)="" Q
"RTN","LEXXST",90,0)
TT(LEXX) ; Title Line
"RTN","LEXXST",91,0)
 Q:'$L($G(LEXX))  D TL(LEXX) N LEXBK S LEXBK="===============================================================================",LEXBK=$E(LEXBK,1,$L($G(LEXX))) D:$L(LEXBK) TL(LEXBK) Q
"RTN","LEXXST",92,0)
TL(LEXX) ; Text Line
"RTN","LEXXST",93,0)
 N LEXNX S LEXNX=+($$NX),^TMP($J,"LEXINFO",LEXNX)=$G(LEXX) Q
"RTN","LEXXST",94,0)
BK1 ; Break Line
"RTN","LEXXST",95,0)
 N LEXNX S LEXNX=+($$NX),^TMP($J,"LEXINFO",LEXNX)="-------------------------------------------------------------------------------" Q
"RTN","LEXXST",96,0)
NX(LEXX) ; Next Line #
"RTN","LEXXST",97,0)
 S (LEXX,^TMP($J,"LEXINFO",0))=+($G(^TMP($J,"LEXINFO",0)))+1 Q LEXX
"RTN","LEXXST",98,0)
DSP ; Display ^TMP($J,"LEXINFO")
"RTN","LEXXST",99,0)
 D DEV Q
"RTN","LEXXST",100,0)
DEV ; Select a device
"RTN","LEXXST",101,0)
 N %,%ZIS,IOP,ZTRTN,ZTSAVE,ZTDESC,ZTDTH,ZTIO,ZTSK
"RTN","LEXXST",102,0)
 S ZTRTN="DSPI^LEXXST",ZTDESC="printing Lexicon installation information"
"RTN","LEXXST",103,0)
 S ZTIO=ION,ZTDTH=$H,%ZIS="PQ",ZTSAVE("^TMP($J,""LEXINFO"",")=""
"RTN","LEXXST",104,0)
 D ^%ZIS Q:POP  S ZTIO=ION I $D(IO("Q")) D QUE,^%ZISC Q
"RTN","LEXXST",105,0)
 D NOQUE Q
"RTN","LEXXST",106,0)
NOQUE ; Do not que task
"RTN","LEXXST",107,0)
 W @IOF W:IOST["P-" !,"< Not queued, printing Lexicon Installations >",! H 2 U:IOST["P-" IO D @ZTRTN,^%ZISC Q
"RTN","LEXXST",108,0)
QUE ; Task queued to print user defaults
"RTN","LEXXST",109,0)
 K IO("Q") D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued",1:"Request Cancelled"),! H 2 Q
"RTN","LEXXST",110,0)
 Q
"RTN","LEXXST",111,0)
DSPI ; Display installations
"RTN","LEXXST",112,0)
 I '$D(ZTQUEUED),$G(IOST)'["P-" W:'$D(LEXDNC) # I '$D(^TMP($J,"LEXINFO")) W !,"Installations not found"
"RTN","LEXXST",113,0)
 I IOST["P-" U IO
"RTN","LEXXST",114,0)
 G:'$D(^TMP($J,"LEXINFO")) DSPQ
"RTN","LEXXST",115,0)
 N LEXCONT,LEXI,LEXLC,LEXEOP S LEXCONT="",(LEXLC,LEXI)=0,LEXEOP=+($G(IOSL)) S:LEXEOP=0 LEXEOP=24
"RTN","LEXXST",116,0)
 F  S LEXI=$O(^TMP($J,"LEXINFO",LEXI)) Q:+LEXI=0!(LEXCONT["^")  D
"RTN","LEXXST",117,0)
 . W !,^TMP($J,"LEXINFO",LEXI) D LF Q:LEXCONT["^"
"RTN","LEXXST",118,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXST",119,0)
 W:$G(IOST)["P-" @IOF
"RTN","LEXXST",120,0)
DSPQ ; Quit Display
"RTN","LEXXST",121,0)
 Q
"RTN","LEXXST",122,0)
LF ; Line Feed
"RTN","LEXXST",123,0)
 S LEXLC=LEXLC+1 D:IOST["P-"&(LEXLC>(LEXEOP-7)) CONT D:IOST'["P-"&(LEXLC>(LEXEOP-4)) CONT
"RTN","LEXXST",124,0)
 Q
"RTN","LEXXST",125,0)
CONT ; Page/Form Feed
"RTN","LEXXST",126,0)
 S LEXLC=0 W:IOST["P-" @IOF Q:IOST["P-"  W !!,"Press <Return> to continue  " R LEXCONT:300 S:'$T LEXCONT="^" S:LEXCONT'["^" LEXCONT=""
"RTN","LEXXST",127,0)
 Q
"RTN","LEXXST",128,0)
A(LEX) ; As of date/time
"RTN","LEXXST",129,0)
 N %,X,%I,%H D NOW^%DTC S LEX=$$UP^XLFSTR($$FMTE^XLFDT(%,"1")) S:LEX["@" LEX=$P(LEX,"@",1)_"  "_$P(LEX,"@",2,299) Q LEX
"RTN","LEXXST",130,0)
P(LEX) ; Person
"RTN","LEXXST",131,0)
 S LEX=+($G(DUZ)) Q:'$L($P($G(^VA(200,+($G(LEX)),0)),"^",1)) "UNKNOWN^"
"RTN","LEXXST",132,0)
 N LEXDUZ,LEXPH S LEXDUZ=+($G(DUZ))
"RTN","LEXXST",133,0)
 S LEXPH=$P($G(^VA(200,LEXDUZ,.13)),"^",2) S:LEXPH="" LEXPH=$P($G(^VA(200,LEXDUZ,.13)),"^",1) S:LEXPH="" LEXPH=$P($G(^VA(200,LEXDUZ,.13)),"^",3) S:LEXPH="" LEXPH=$P($G(^VA(200,LEXDUZ,.13)),"^",4)
"RTN","LEXXST",134,0)
 S LEXDUZ=$P(^VA(200,LEXDUZ,0),"^",1),LEX=LEXDUZ_"^"_LEXPH Q LEX
"RTN","LEXXST",135,0)
N0 ; 0 Node
"RTN","LEXXST",136,0)
 N LEXFI,LEXCT,DIC S LEXCT=0
"RTN","LEXXST",137,0)
 S LEXFI=756.999999 F  S LEXFI=$O(^LEX(LEXFI)) Q:+LEXFI=0!($E(LEXFI,1,3)'="757")  S DIC=$$ATTR(LEXFI,"GLOBAL NAME") D N0C
"RTN","LEXXST",138,0)
 S LEXFI=756.999999 F  S LEXFI=$O(^LEXT(LEXFI)) Q:+LEXFI=0!($E(LEXFI,1,3)'="757")  S DIC=$$ATTR(LEXFI,"GLOBAL NAME") D N0C
"RTN","LEXXST",139,0)
 S LEXFI=756.999999 F  S LEXFI=$O(^LEXC(LEXFI)) Q:+LEXFI=0!($E(LEXFI,1,3)'="757")  S DIC=$$ATTR(LEXFI,"GLOBAL NAME") D N0C
"RTN","LEXXST",140,0)
 F LEXFI=80,80.1,81,81.3 S DIC=$$ATTR(LEXFI,"GLOBAL NAME") D N0C
"RTN","LEXXST",141,0)
 Q
"RTN","LEXXST",142,0)
N0C ; 0 Node Count
"RTN","LEXXST",143,0)
 N DA,LEXLR,LEXTR,LEXDDA,LEXNM
"RTN","LEXXST",144,0)
 K LEXDDA D FILE^DID(LEXFI,"N","NAME","LEXDDA","LEXDDA")
"RTN","LEXXST",145,0)
 S LEXNM=$G(LEXDDA("NAME")) Q:'$L(LEXNM)  S (DA,LEXLR,LEXTR)=0
"RTN","LEXXST",146,0)
 F  S DA=$O(@(DIC_DA_")")) Q:+DA=0  S LEXLR=DA,LEXTR=LEXTR+1
"RTN","LEXXST",147,0)
 S $P(@(DIC_"0)"),"^",3)=LEXLR,$P(@(DIC_"0)"),"^",4)=LEXTR
"RTN","LEXXST",148,0)
 W:'$D(ZTQUEUED) !,LEXFI,?10,$J(LEXLR,10),$J(LEXTR,10)
"RTN","LEXXST",149,0)
 Q
"RTN","LEXXST",150,0)
FC(X) ; File Count
"RTN","LEXXST",151,0)
 N LEXFI,LEXCT S LEXCT=0
"RTN","LEXXST",152,0)
 S LEXFI=756.999999 F  S LEXFI=$O(^LEX(LEXFI)) Q:+LEXFI=0!($E(LEXFI,1,3)'="757")  S LEXCT=LEXCT+1
"RTN","LEXXST",153,0)
 S LEXFI=756.999999 F  S LEXFI=$O(^LEXT(LEXFI)) Q:+LEXFI=0!($E(LEXFI,1,3)'="757")  S LEXCT=LEXCT+1
"RTN","LEXXST",154,0)
 S LEXFI=756.999999 F  S LEXFI=$O(^LEXC(LEXFI)) Q:+LEXFI=0!($E(LEXFI,1,3)'="757")  S LEXCT=LEXCT+1
"RTN","LEXXST",155,0)
 S X=LEXCT Q X
"RTN","LEXXST",156,0)
MDCY(X) ; Month/Day/Century-Year where X=FM Date
"RTN","LEXXST",157,0)
 N LEXCY S LEXCY=+($G(X)) Q:LEXCY=0 "" S LEXCY=$P($$FMTE^XLFDT(LEXCY,2),"/",1,2)_"/"_$P($P($$FMTE^XLFDT(LEXCY,1)," ",3),"@",1)
"RTN","LEXXST",158,0)
 S:$L($P(LEXCY,"/",1))<2 $P(LEXCY,"/",1)="0"_$P(LEXCY,"/",1) S:$L($P(LEXCY,"/",2))<2 $P(LEXCY,"/",2)="0"_$P(LEXCY,"/",2)
"RTN","LEXXST",159,0)
 S:$L($P(LEXCY,"/",1))<2 $P(LEXCY,"/",1)="0"_$P(LEXCY,"/",1) S:$L($P(LEXCY,"/",2))<2 $P(LEXCY,"/",2)="0"_$P(LEXCY,"/",2)
"RTN","LEXXST",160,0)
 S X=LEXCY Q X
"RTN","LEXXST",161,0)
ATTR(X,A) ; File Attributes
"RTN","LEXXST",162,0)
 N LEXFI,LEXATT,LEXDDA
"RTN","LEXXST",163,0)
 S LEXFI=+($G(X)) Q:+LEXFI'>0 ""  S LEXATT=$G(A) Q:'$L(LEXATT) ""
"RTN","LEXXST",164,0)
 D FILE^DID(LEXFI,"N",LEXATT,"LEXDDA","LEXDDA") S X=$G(LEXDDA(LEXATT))
"RTN","LEXXST",165,0)
 Q X
"RTN","LEXXST3")
0^23^B23757267
"RTN","LEXXST3",1,0)
LEXXST3 ; ISL Lexicon Status (KIDS/Routines Patch) ; 05/14/2003
"RTN","LEXXST3",2,0)
 ;;2.0;LEXICON UTILITY;**4,5,8,25**;Sep 23, 1996
"RTN","LEXXST3",3,0)
 Q
"RTN","LEXXST3",4,0)
KIDS ; KIDS entries
"RTN","LEXXST3",5,0)
 N LEXBLD D GB,SB Q
"RTN","LEXXST3",6,0)
GB ; Get KIDs builds
"RTN","LEXXST3",7,0)
 K LEXBLD Q:'$D(^DIC(9.4,"C","LEX"))
"RTN","LEXXST3",8,0)
 N LEXC,LEXIN,LEXPIN,LEXPN,LEXPA S LEXPA=$$PAC("LEX") Q:LEXPA=0
"RTN","LEXXST3",9,0)
 N LEXB S LEXB=0 F  S LEXB=$O(^XPD(9.6,"C",LEXPA,LEXB)) Q:+LEXB=0  D
"RTN","LEXXST3",10,0)
 . S LEXPN=$P($G(^XPD(9.6,LEXB,0)),"^",1)
"RTN","LEXXST3",11,0)
 . S LEXIN=$$INS(LEXPN)
"RTN","LEXXST3",12,0)
 . I LEXPN'["*" D
"RTN","LEXXST3",13,0)
 . . S LEXC=+($G(LEXBLD(1,0))),LEXC=LEXC+1
"RTN","LEXXST3",14,0)
 . . S LEXBLD(1,0)=LEXC,LEXBLD(1,LEXC)=LEXB_"^"_LEXPN_"^"_LEXIN
"RTN","LEXXST3",15,0)
 . I LEXPN["*" D
"RTN","LEXXST3",16,0)
 . . S LEXC=+($P(LEXPN,"*",3)) I $D(LEXBLD(2,LEXC)) D
"RTN","LEXXST3",17,0)
 . . . S LEXC=LEXC+99999
"RTN","LEXXST3",18,0)
 . . S LEXBLD(2,0)=LEXC,LEXBLD(2,LEXC)=LEXB_"^"_LEXPN_"^"_LEXIN
"RTN","LEXXST3",19,0)
 Q
"RTN","LEXXST3",20,0)
SB ; Save KIDs builds
"RTN","LEXXST3",21,0)
 I '$D(LEXBLD) D NOINS Q
"RTN","LEXXST3",22,0)
 I +($G(LEXBLD(1,0)))=0 D NOPAC G SP
"RTN","LEXXST3",23,0)
 N LEXLN,LEXIN I +($G(LEXBLD(1,0)))>0 D
"RTN","LEXXST3",24,0)
 . D BL,TT("KIDS INSTALLATION (PACKAGE)"),BL
"RTN","LEXXST3",25,0)
 . N LEXI S LEXI=0 F  S LEXI=$O(LEXBLD(1,LEXI)) Q:+LEXI=0  D
"RTN","LEXXST3",26,0)
 . . S LEXLN=$P($G(LEXBLD(1,LEXI)),"^",2) Q:'$L(LEXLN)
"RTN","LEXXST3",27,0)
 . . S LEXIN=$P($G(LEXBLD(1,LEXI)),"^",3) S:$L(LEXIN) LEXLN=LEXLN_$J("",(40-$L(LEXLN)))_"  "_LEXIN
"RTN","LEXXST3",28,0)
 . . S LEXLN="      "_LEXLN D TL(LEXLN)
"RTN","LEXXST3",29,0)
SP ; Save patches
"RTN","LEXXST3",30,0)
 I +($G(LEXBLD(2,0)))=0 D NOPAT Q
"RTN","LEXXST3",31,0)
 I +($G(LEXBLD(2,0)))>0 D
"RTN","LEXXST3",32,0)
 . D BL,TT("KIDS INSTALLATIONS (PATCHES)"),BL
"RTN","LEXXST3",33,0)
 . N LEXI S LEXI=0 F  S LEXI=$O(LEXBLD(2,LEXI)) Q:+LEXI=0  D
"RTN","LEXXST3",34,0)
 . . S LEXLN=$P($G(LEXBLD(2,LEXI)),"^",2) Q:'$L(LEXLN)
"RTN","LEXXST3",35,0)
 . . S LEXIN=$P($G(LEXBLD(2,LEXI)),"^",3) S:$L(LEXIN) LEXLN=LEXLN_$J("",(40-$L(LEXLN)))_"  "_LEXIN
"RTN","LEXXST3",36,0)
 . . S LEXLN="      "_LEXLN D TL(LEXLN)
"RTN","LEXXST3",37,0)
 Q
"RTN","LEXXST3",38,0)
NOINS ; None found
"RTN","LEXXST3",39,0)
 D BL,TT("KIDS INSTALLATION (PACKAGE/PATCHES)"),BL D TL("      NONE FOUND") Q
"RTN","LEXXST3",40,0)
NOPAC ; No package
"RTN","LEXXST3",41,0)
 D BL,TT("KIDS INSTALLATION (PACKAGE)"),BL,TL("      NONE FOUND") Q
"RTN","LEXXST3",42,0)
NOPAT ; No patches
"RTN","LEXXST3",43,0)
 D BL,TT("KIDS INSTALLATIONS (PATCHES)"),BL,TL("      NONE FOUND") Q
"RTN","LEXXST3",44,0)
PAC(LEXX) ; Package Entry
"RTN","LEXXST3",45,0)
 S LEXX=+($O(^DIC(9.4,"C",LEXX,0))) Q LEXX
"RTN","LEXXST3",46,0)
INS(LEXX) ; Installation Entry
"RTN","LEXXST3",47,0)
 S LEXX=$G(LEXX) Q:LEXX="" LEXX Q:'$D(^XPD(9.7,"B",LEXX)) ""
"RTN","LEXXST3",48,0)
 N LEXIA,LEXM,LEXI S (LEXIA,LEXM)=0
"RTN","LEXXST3",49,0)
 F  S LEXIA=$O(^XPD(9.7,"B",LEXX,LEXIA)) Q:+LEXIA=0  D
"RTN","LEXXST3",50,0)
 . S LEXI=$P($G(^XPD(9.7,LEXIA,1)),"^",3),LEXI=+LEXI
"RTN","LEXXST3",51,0)
 . S:LEXI>LEXM LEXM=LEXI
"RTN","LEXXST3",52,0)
 S:+LEXM=0 LEXM="" S:+LEXM>0 LEXM=$$FTE^LEXXST4(+LEXM)
"RTN","LEXXST3",53,0)
 S LEXX=LEXM Q LEXX
"RTN","LEXXST3",54,0)
 ;
"RTN","LEXXST3",55,0)
RTN ; Find Patched Routines
"RTN","LEXXST3",56,0)
 I '$D(^DIC(9.4,"C","LEX"))!('$D(^DIC(9.8,"B","LEXA1"))) D NORTN Q
"RTN","LEXXST3",57,0)
 N LEX,LEXPT,LEXP,LEXRT,LEXC,LEXT S LEXRT="LEW~",LEXC="LEX"
"RTN","LEXXST3",58,0)
 ; PCH 5 replace indirection $T(@LEXRT) with executable string
"RTN","LEXXST3",59,0)
 F  S LEXRT=$O(^DIC(9.8,"B",LEXRT)) Q:LEXRT=""!($E(LEXRT,1,$L(LEXC))'=LEXC)  D
"RTN","LEXXST3",60,0)
 . ; PCH 8 quit if routine is a environment check, pre/post install
"RTN","LEXXST3",61,0)
 . Q:$E(LEXRT,4)?1N
"RTN","LEXXST3",62,0)
 . N LEXEXC,X S X=LEXRT X ^%ZOSF("TEST") I $T D
"RTN","LEXXST3",63,0)
 . . S LEXT="",LEXEXC="S LEXT=$T("_LEXRT_"+1^"_LEXRT_")" X LEXEXC
"RTN","LEXXST3",64,0)
 . . S LEXT=$G(LEXT),LEXP=$$TRIM($P($G(LEXT),";",5)) I +LEXP>0 D
"RTN","LEXXST3",65,0)
 . . . N LEXPN,LEXPT F LEXPN=1:1 Q:$P(LEXP,",",LEXPN)=""  D
"RTN","LEXXST3",66,0)
 . . . . S LEXPT=$P(LEXP,",",LEXPN) I '$D(LEX(LEXPT,LEXRT)) D
"RTN","LEXXST3",67,0)
 . . . . . N LEXI F LEXI=1:1 Q:$L($G(LEX(LEXPT,LEXI)))<200
"RTN","LEXXST3",68,0)
 . . . . . S LEX(LEXPT,LEXI)=$G(LEX(LEXPT,LEXI))_", "_LEXRT,LEX(LEXPT,LEXRT)=""
"RTN","LEXXST3",69,0)
 . . . . . S:$E($G(LEX(LEXPT,LEXI)),1,2)=", " LEX(LEXPT,LEXI)=$E(LEX(LEXPT,LEXI),3,$L(LEX(LEXPT,LEXI)))
"RTN","LEXXST3",70,0)
 D PAT
"RTN","LEXXST3",71,0)
 Q
"RTN","LEXXST3",72,0)
PAT ; Save Patch Routines
"RTN","LEXXST3",73,0)
 D:+($O(LEX(0)))=0 NORTN Q:+($O(LEX(0)))=0
"RTN","LEXXST3",74,0)
 D:+($O(LEX(0)))>0 BL,TT("PATCHED ROUTINES")
"RTN","LEXXST3",75,0)
 N LEXSP,LEXLN,LEXLP S LEXLP=+($O(LEX(9999999),-1)),LEXSP="               "
"RTN","LEXXST3",76,0)
 I LEXLP>0 D BL,TL(("   LAST ROUTINE PATCH #  "_LEXLP))
"RTN","LEXXST3",77,0)
 I +($O(LEX(0)))>0 D BL,TL("      PATCH    ROUTINES"),TL("      ------------------------------------------------------------------------")
"RTN","LEXXST3",78,0)
 N LEXPN,LEXI S LEXPN=0 F  S LEXPN=$O(LEX(LEXPN)) Q:+LEXPN=0  F LEXI=1:1 Q:'$D(LEX(LEXPN,LEXI))  D
"RTN","LEXXST3",79,0)
 . S LEXLN=$G(LEX(LEXPN,LEXI)) I $L(LEXLN),LEXI'>1 S LEXLN=$J("",(9-$L(LEXPN)))_LEXPN_"      "_LEXLN D PL(LEXLN,LEXI)
"RTN","LEXXST3",80,0)
 . I $L(LEXLN),LEXI>1 D PL(LEXLN,LEXI)
"RTN","LEXXST3",81,0)
 D:+($O(LEX(0)))>0 BL
"RTN","LEXXST3",82,0)
 Q
"RTN","LEXXST3",83,0)
PL(LEXX,LEXI) ; Patch Line
"RTN","LEXXST3",84,0)
 S LEXX=$G(LEXX) Q:'$L(LEXX)  S LEXI=+($G(LEXI)) I LEXI>1 D
"RTN","LEXXST3",85,0)
 . N LEXNX,LEXNI S LEXNI=$O(^TMP("LEXINS",$J,9999999999),-1) Q:+LEXNI'>0
"RTN","LEXXST3",86,0)
 . S LEXNX=$G(^TMP("LEXINS",$J,LEXNI))
"RTN","LEXXST3",87,0)
 . I $L(LEXNX) D
"RTN","LEXXST3",88,0)
 . . K ^TMP("LEXINS",$J,LEXNI)
"RTN","LEXXST3",89,0)
 . . S ^TMP("LEXINS",$J,0)=(LEXNI-1),LEXX=LEXNX_", "_LEXX
"RTN","LEXXST3",90,0)
 N LEXLL S LEXLL=78 S:LEXI>1 LEXLL=60 D:$L(LEXX)'>LEXLL TL(LEXX) Q:$L(LEXX)'>LEXLL  N LEXP,LEXNL
"RTN","LEXXST3",91,0)
PL2 ; Patch Line (over 78 characters)
"RTN","LEXXST3",92,0)
 F LEXP=78:-1:1 Q:$E(LEXX,(LEXP-1),LEXP)=", "
"RTN","LEXXST3",93,0)
 I LEXP>1 S LEXNL=$E(LEXX,1,(LEXP-1)) D TL(LEXNL) S LEXX=$E(LEXX,(LEXP+1),$L(LEXX))
"RTN","LEXXST3",94,0)
 S LEXLL=60 I $L(LEXX)>LEXLL S LEXX=LEXSP_LEXX G PL2
"RTN","LEXXST3",95,0)
 S:$L(LEXX)'>LEXLL&(LEXX'[LEXSP) LEXX=LEXSP_LEXX D TL(LEXX)
"RTN","LEXXST3",96,0)
 Q
"RTN","LEXXST3",97,0)
NORTN ; No patched routines found
"RTN","LEXXST3",98,0)
 D BL,TT("PATCHED ROUTINES"),BL D TL("      NONE FOUND") Q
"RTN","LEXXST3",99,0)
TT(LEXX) ; Title Line
"RTN","LEXXST3",100,0)
 D TT^LEXXST($G(LEXX)) Q
"RTN","LEXXST3",101,0)
TL(LEXX) ; Text Line
"RTN","LEXXST3",102,0)
 D TL^LEXXST($G(LEXX)) Q
"RTN","LEXXST3",103,0)
BL ; Blank Line
"RTN","LEXXST3",104,0)
 D BL^LEXXST Q
"RTN","LEXXST3",105,0)
TRIM(LEXX) ; Trim spaces
"RTN","LEXXST3",106,0)
 S LEXX=$G(LEXX),LEXX=$TR(LEXX,"*","")
"RTN","LEXXST3",107,0)
 F  Q:$E(LEXX,1)'=" "  S LEXX=$E(LEXX,2,$L(LEXX))
"RTN","LEXXST3",108,0)
 F  Q:$E(LEXX,$L(LEXX))'=" "  S LEXX=$E(LEXX,1,($L(LEXX)-1))
"RTN","LEXXST3",109,0)
 F  Q:LEXX'["  "  S LEXX=$P(LEXX,"  ",1)_" "_$P(LEXX,"  ",2)
"RTN","LEXXST3",110,0)
 Q LEXX
"RTN","LEXXST3",111,0)
 Q
"RTN","LEXXST5")
0^24^B38762877
"RTN","LEXXST5",1,0)
LEXXST5 ; ISL Lexicon Status (Latest File Update)  ; 05/14/2003
"RTN","LEXXST5",2,0)
 ;;2.0;LEXICON UTILITY;**25**;Sep 23, 1996
"RTN","LEXXST5",3,0)
 ;
"RTN","LEXXST5",4,0)
 ; External References
"RTN","LEXXST5",5,0)
 ;   DBIA  2052  FILE^DID
"RTN","LEXXST5",6,0)
 ;   DBIA 10103  $$FMTE^XLFDT
"RTN","LEXXST5",7,0)
 ;   DBIA  2056  $$GET1^DIQ
"RTN","LEXXST5",8,0)
 ;                    
"RTN","LEXXST5",9,0)
 Q
"RTN","LEXXST5",10,0)
EN ; Entry Point - Most Recent Installs
"RTN","LEXXST5",11,0)
 K ^TMP($J,"LEXINFO") D FS N LEXI S LEXI=0 F  S LEXI=$O(^TMP($J,"LEXINFO",LEXI)) Q:+LEXI=0  W !,^TMP($J,"LEXINFO",LEXI)
"RTN","LEXXST5",12,0)
 K ^TMP($J,"LEXINFO")
"RTN","LEXXST5",13,0)
 Q
"RTN","LEXXST5",14,0)
EN2 ; Entry Point - All Installs
"RTN","LEXXST5",15,0)
 K ^TMP($J,"LEXINFO") D AI N LEXI S LEXI=0 F  S LEXI=$O(^TMP($J,"LEXINFO",LEXI)) Q:+LEXI=0  W !,^TMP($J,"LEXINFO",LEXI)
"RTN","LEXXST5",16,0)
 K ^TMP($J,"LEXINFO")
"RTN","LEXXST5",17,0)
 Q
"RTN","LEXXST5",18,0)
 ;                       
"RTN","LEXXST5",19,0)
 ; Most Recent Installs
"RTN","LEXXST5",20,0)
FS ;   File Install Status
"RTN","LEXXST5",21,0)
 N LEXFI,LEXCT S LEXCT=0
"RTN","LEXXST5",22,0)
 S LEXFI=756.9999 F  S LEXFI=$O(^LEXC(757.903,"AFD",LEXFI)) Q:+LEXFI=0!($E(LEXFI,1,3)'="757")  D DSP
"RTN","LEXXST5",23,0)
 S LEXFI=0 F  S LEXFI=$O(^LEXC(757.903,"AFD",LEXFI)) Q:+LEXFI=0  D:$E(LEXFI,1,3)'="757" DSP
"RTN","LEXXST5",24,0)
 Q
"RTN","LEXXST5",25,0)
DSP ;   Create Display
"RTN","LEXXST5",26,0)
 N LEXBB,LEXBG,LEXCB,LEXID,LEXCH,LEXIN,LEXND,LEXBT,LEXET,LEXEL,LEXDT,LEXN
"RTN","LEXXST5",27,0)
 N LEXNF,LEXM,LEXNM
"RTN","LEXXST5",28,0)
 S LEXBG=$O(^LEXC(757.903,"AFD",LEXFI," "),-1) Q:+LEXBG'>0
"RTN","LEXXST5",29,0)
 S LEXID=$O(^LEXC(757.903,"AFD",LEXFI,LEXBG," "),-1) Q:+LEXID'>0
"RTN","LEXXST5",30,0)
 S LEXCH=$O(^LEXC(757.903,"AFD",LEXFI,LEXBG,LEXID," "),-1) Q:+LEXCH'>0
"RTN","LEXXST5",31,0)
 S LEXIN=$O(^LEXC(757.903,"AFD",LEXFI,LEXBG,LEXID,LEXCH," "),-1) Q:+LEXIN'>0
"RTN","LEXXST5",32,0)
 S LEXND=$G(^LEXC(757.903,LEXID,1,LEXCH,1,LEXIN,0))
"RTN","LEXXST5",33,0)
 S LEXNF=$G(^LEXC(757.903,LEXID,1,LEXCH,0))
"RTN","LEXXST5",34,0)
 S LEXBB=$P($G(^LEXC(757.903,LEXID,0)),"^",2)
"RTN","LEXXST5",35,0)
 S LEXCB=$P(LEXNF,"^",2),LEXBT=$P(LEXND,"^",1) Q:+LEXBT'>0
"RTN","LEXXST5",36,0)
 S LEXBT=$TR($$FMTE^XLFDT(LEXBT,"5Z"),"@"," ")
"RTN","LEXXST5",37,0)
 S LEXDT=$P(LEXBT," ",1),LEXBT=$P(LEXBT," ",2)
"RTN","LEXXST5",38,0)
 S LEXET=$P(LEXND,"^",2) Q:+LEXET'>0
"RTN","LEXXST5",39,0)
 S LEXET=$TR($$FMTE^XLFDT(LEXET,"5Z"),"@"," ")
"RTN","LEXXST5",40,0)
 S LEXET=$P(LEXET," ",2),LEXEL=$P(LEXND,"^",3) Q:'$L(LEXEL)
"RTN","LEXXST5",41,0)
 D FILE^DID(LEXFI,"N","NAME","LEXN","LEXM")
"RTN","LEXXST5",42,0)
 S LEXNM=$G(LEXN("NAME")) K LEXN,LEXM Q:'$L(LEXNM)
"RTN","LEXXST5",43,0)
 S LEXCT=LEXCT+1 I LEXCT=1 D TITLE,HDR
"RTN","LEXXST5",44,0)
 D LINE
"RTN","LEXXST5",45,0)
 Q
"RTN","LEXXST5",46,0)
 ; All Installs
"RTN","LEXXST5",47,0)
AI ;   Installs for Changes
"RTN","LEXXST5",48,0)
 N LEXLOG,LEXLDT,LEXLIE S LEXLDT=0
"RTN","LEXXST5",49,0)
 F  S LEXLDT=$O(^LEXC(757.903,"AB",LEXLDT)) Q:+LEXLDT=0  D
"RTN","LEXXST5",50,0)
 . S LEXLOG=0 F  S LEXLOG=$O(^LEXC(757.903,"AB",LEXLDT,LEXLOG)) Q:+LEXLOG=0  D
"RTN","LEXXST5",51,0)
 . . S LEXLIE=0 F  S LEXLIE=$O(^LEXC(757.903,"AB",LEXLDT,LEXLOG,LEXLIE)) Q:+LEXLIE=0  D LOG
"RTN","LEXXST5",52,0)
 Q
"RTN","LEXXST5",53,0)
LOG ;   Log Entry for a Change
"RTN","LEXXST5",54,0)
 N LEX1,LEX2,LEXDTE,LEXND,LEXSDO,LEXLID,LEXACT,LEXT,LEXTYP S LEXT="",LEXND=$G(^LEXC(757.9,+LEXLOG,0)),LEXDTE=$$LDT(+LEXND)
"RTN","LEXXST5",55,0)
 S LEXTYP=$$GET1^DIQ(757.9,(+($G(LEXLOG))_","),.02) S:LEXTYP["Maintenance" LEXTYP=""
"RTN","LEXXST5",56,0)
 S LEXSDO=$$GET1^DIQ(757.9,(+($G(LEXLOG))_","),.03),LEXLID=$$GET1^DIQ(757.9,(+($G(LEXLOG))_","),.04),LEXACT=$$GET1^DIQ(757.9,(+($G(LEXLOG))_","),.05)
"RTN","LEXXST5",57,0)
 S:$L(LEXSDO) LEXT=LEXSDO S:$L(LEXTYP) LEXT=LEXT_", "_LEXTYP S:$L(LEXACT) LEXT=LEXT_" "_LEXACT S:$L(LEXDTE) LEXT=LEXT_" dated "_LEXDTE
"RTN","LEXXST5",58,0)
 F  Q:$E(LEXT,1,2)'=", "  S LEXT=$P(LEXT,", ",2,299)
"RTN","LEXXST5",59,0)
 S LEX1=$E(LEXT,1,60),LEX1=$P(LEX1," ",1,($L(LEX1," ")-1))
"RTN","LEXXST5",60,0)
 S:$L(LEXT)'>60 LEX1=LEXT S LEX2=$P(LEXT,LEX1,2,299),LEX1=$$TRIM(LEX1),LEX2=$$TRIM(LEX2),LEXT=LEXLID S LEXT=LEXT_$J(" ",(13-$L(LEXT)))_LEX1 D BL,TL(LEXT)
"RTN","LEXXST5",61,0)
 I $L(LEX2) S LEXT="",LEXT=LEXT_$J(" ",(13-$L(LEXT)))_LEX2 D TL(LEXT)
"RTN","LEXXST5",62,0)
 D INSF
"RTN","LEXXST5",63,0)
 Q
"RTN","LEXXST5",64,0)
INSF ;   Installed Files for a Change
"RTN","LEXXST5",65,0)
 N LEXI,LEXN,LEXND,LEXFN,LEXFI,LEXNFI,LEXOFI,LEXT,LEXFC,LEXIC,LEXFIID Q:+($G(LEXLIE))'>0
"RTN","LEXXST5",66,0)
 S (LEXIC,LEXFC,LEXI)=0 F  S LEXI=$O(^LEXC(757.903,+LEXLIE,1,LEXI)) Q:+LEXI'>0  D
"RTN","LEXXST5",67,0)
 . S LEXND=$G(^LEXC(757.903,+LEXLIE,1,+LEXI,0)),LEXNFI=+LEXND,LEXFIID=$P(LEXND,"^",2) Q:+LEXNFI'>0
"RTN","LEXXST5",68,0)
 . S LEXFN=$$GET1^DID(+LEXNFI,,,"NAME","LEXN","LEXN") Q:'$L(LEXFN)
"RTN","LEXXST5",69,0)
 . S LEXFC=LEXFC+1 D:LEXFC=1 BL D INST
"RTN","LEXXST5",70,0)
 Q
"RTN","LEXXST5",71,0)
INST ;   Install Times
"RTN","LEXXST5",72,0)
 N LEXIT,LEXCT,LEXDT,LEXODT,LEXCB,LEXOCB,LEXFI S (LEXCT,LEXIT)=0,LEXFI=+($G(LEXNFI))
"RTN","LEXXST5",73,0)
 F  S LEXIT=$O(^LEXC(757.903,+LEXLIE,1,+LEXI,1,LEXIT)) Q:+LEXIT'>0  D
"RTN","LEXXST5",74,0)
 . N LEXND,LEXBT,LEXDT,LEXET,LEXEL,LEXT,LEXNM,LEXCG,LEXBB
"RTN","LEXXST5",75,0)
 . S LEXCB=$G(LEXFIID),LEXBB=$G(LEXLID),LEXND=$G(^LEXC(757.903,+LEXLIE,1,+LEXI,1,+LEXIT,0))
"RTN","LEXXST5",76,0)
 . S LEXNM=$G(LEXFN),LEXFI=+($G(LEXFI)),LEXBT=$TR($$FMTE^XLFDT($P(LEXND,"^",1),"5Z"),"@"," ")
"RTN","LEXXST5",77,0)
 . S LEXDT=$P(LEXBT," ",1),LEXBT=$P(LEXBT," ",2),LEXET=$P(LEXND,"^",2) Q:+LEXET'>0
"RTN","LEXXST5",78,0)
 . S LEXET=$TR($$FMTE^XLFDT(LEXET,"5Z"),"@"," "),LEXET=$P(LEXET," ",2),LEXEL=$P(LEXND,"^",3) Q:'$L(LEXEL)
"RTN","LEXXST5",79,0)
 . S:LEXFI=$G(LEXOFI)!(+LEXFI'>0) LEXFI=" " S:LEXDT=$G(LEXODT) LEXDT=" "
"RTN","LEXXST5",80,0)
 . S:$L(LEXCB)&(LEXCB=$G(LEXOCB)) LEXCB=" "
"RTN","LEXXST5",81,0)
 . S LEXIC=LEXIC+1 D:LEXIC=1 HDR D LINE
"RTN","LEXXST5",82,0)
 . S:LEXFI'=" " LEXOFI=LEXFI S:LEXDT'=" " LEXODT=LEXDT S:LEXCB'=" " LEXOCB=LEXCB
"RTN","LEXXST5",83,0)
 Q
"RTN","LEXXST5",84,0)
 ; Text
"RTN","LEXXST5",85,0)
TITLE ;   Title
"RTN","LEXXST5",86,0)
 D TT("Latest Installations"),BL Q
"RTN","LEXXST5",87,0)
HDR ;   Header
"RTN","LEXXST5",88,0)
 N LEXT
"RTN","LEXXST5",89,0)
 S LEXT="   FILE #",LEXT=LEXT_$J(" ",(14-$L(LEXT)))_"UPDATE SOURCE"
"RTN","LEXXST5",90,0)
 S LEXT=LEXT_$J(" ",(33-$L(LEXT)))_"DATE",LEXT=LEXT_$J(" ",(47-$L(LEXT)))_"START"
"RTN","LEXXST5",91,0)
 S LEXT=LEXT_$J(" ",(59-$L(LEXT)))_"COMPLETE",LEXT=LEXT_$J(" ",(71-$L(LEXT)))_"ELAPSED"
"RTN","LEXXST5",92,0)
 D TL(LEXT)
"RTN","LEXXST5",93,0)
 S LEXT="   -------",LEXT=LEXT_$J(" ",(14-$L(LEXT)))_"---------------"
"RTN","LEXXST5",94,0)
 S LEXT=LEXT_$J(" ",(33-$L(LEXT)))_"----------",LEXT=LEXT_$J(" ",(47-$L(LEXT)))_"--------"
"RTN","LEXXST5",95,0)
 S LEXT=LEXT_$J(" ",(59-$L(LEXT)))_"--------",LEXT=LEXT_$J(" ",(71-$L(LEXT)))_"--------"
"RTN","LEXXST5",96,0)
 D TL(LEXT)
"RTN","LEXXST5",97,0)
 Q
"RTN","LEXXST5",98,0)
LINE ;   Text Line
"RTN","LEXXST5",99,0)
 Q:'$L($G(LEXFI))  Q:'$L($G(LEXNM))  Q:'$L($G(LEXDT))  Q:'$L($G(LEXBT))  Q:'$L($G(LEXET))  Q:'$L($G(LEXEL))
"RTN","LEXXST5",100,0)
 N LEXB S LEXB=$G(LEXCB) S:'$L(LEXB) LEXB=$G(LEXBB) Q:'$L(LEXB)
"RTN","LEXXST5",101,0)
 N LEXT,LEXFIT S LEXFIT=$J($P(LEXFI,".",1),4) S:LEXFI["." LEXFIT=LEXFIT_"."_$P(LEXFI,".",2)
"RTN","LEXXST5",102,0)
 S LEXT="  "_LEXFIT,LEXT=LEXT_$J(" ",(14-$L(LEXT)))_LEXB
"RTN","LEXXST5",103,0)
 S LEXT=LEXT_$J(" ",(33-$L(LEXT)))_LEXDT,LEXT=LEXT_$J(" ",(47-$L(LEXT)))_LEXBT
"RTN","LEXXST5",104,0)
 S LEXT=LEXT_$J(" ",(59-$L(LEXT)))_LEXET,LEXT=LEXT_$J(" ",(71-$L(LEXT)))_LEXEL
"RTN","LEXXST5",105,0)
 D TL(LEXT)
"RTN","LEXXST5",106,0)
 Q
"RTN","LEXXST5",107,0)
TT(LEXX) ;   Title Text
"RTN","LEXXST5",108,0)
 D TT^LEXXST($G(LEXX)) Q
"RTN","LEXXST5",109,0)
TL(LEXX) ;   Noraml Text Line
"RTN","LEXXST5",110,0)
 D TL^LEXXST($G(LEXX)) Q
"RTN","LEXXST5",111,0)
BL ;   Blank Line
"RTN","LEXXST5",112,0)
 D BL^LEXXST Q
"RTN","LEXXST5",113,0)
 ; Miscellaneous
"RTN","LEXXST5",114,0)
LDT(X) ;   Long Literal Date
"RTN","LEXXST5",115,0)
 S X=$P($$LDTM($G(X))," ",1,3) Q X
"RTN","LEXXST5",116,0)
LDTM(X) ;   Long Literal Date/Time
"RTN","LEXXST5",117,0)
 N LEX S LEX=+($$FMTE^XLFDT($G(X),2)),LEX=$S(LEX=1:"January",LEX=2:"February",LEX=3:"March",LEX=4:"April",LEX=5:"May",LEX=6:"June",LEX=7:"July",LEX=8:"August",LEX=9:"September",LEX=10:"October",LEX=11:"November",LEX=12:"December",1:"")
"RTN","LEXXST5",118,0)
 S X=$$FMTE^XLFDT($G(X)),X=$S($L(LEX):LEX,1:$P(X," ",1))_$S($L($P(X," ",1)):" ",1:"")_$S($L($P(X," ",2)):+($P(X," ",2)),1:"")_$S(X[",":",",1:"")_$S($L($P(X," ",3)):" ",1:"")_$P(X," ",3)
"RTN","LEXXST5",119,0)
 S X=$TR(X,"@"," ") Q X
"RTN","LEXXST5",120,0)
SDTM(X) ;   Short Date/Time
"RTN","LEXXST5",121,0)
 S X=$TR($$FMTE^XLFDT($G(X),"5ZM"),"@"," ") Q X
"RTN","LEXXST5",122,0)
SDT(X) ;   Short Date
"RTN","LEXXST5",123,0)
 S X=$TR($$FMTE^XLFDT($G(X),"5DZ"),"@"," ") Q X
"RTN","LEXXST5",124,0)
TRIM(X) ;   Trim Spaces
"RTN","LEXXST5",125,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXST5",126,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXST5",127,0)
 Q X
"SEC","^DIC",757.02,757.02,0,"AUDIT")
@
"SEC","^DIC",757.02,757.02,0,"DD")
@
"SEC","^DIC",757.02,757.02,0,"DEL")
@
"SEC","^DIC",757.02,757.02,0,"LAYGO")
@
"SEC","^DIC",757.02,757.02,0,"RD")
@
"SEC","^DIC",757.02,757.02,0,"WR")
@
"SEC","^DIC",757.03,757.03,0,"AUDIT")
@
"SEC","^DIC",757.03,757.03,0,"DD")
@
"SEC","^DIC",757.03,757.03,0,"DEL")
@
"SEC","^DIC",757.03,757.03,0,"LAYGO")
@
"SEC","^DIC",757.03,757.03,0,"RD")
@
"SEC","^DIC",757.03,757.03,0,"WR")
@
"SEC","^DIC",757.2,757.2,0,"AUDIT")
@
"SEC","^DIC",757.2,757.2,0,"DD")
@
"SEC","^DIC",757.2,757.2,0,"DEL")
@
"SEC","^DIC",757.2,757.2,0,"LAYGO")
@
"SEC","^DIC",757.2,757.2,0,"RD")
@
"SEC","^DIC",757.2,757.2,0,"WR")
@
"SEC","^DIC",757.9,757.9,0,"AUDIT")
@
"SEC","^DIC",757.9,757.9,0,"DD")
@
"SEC","^DIC",757.9,757.9,0,"DEL")
@
"SEC","^DIC",757.9,757.9,0,"LAYGO")
@
"SEC","^DIC",757.9,757.9,0,"RD")
@
"SEC","^DIC",757.9,757.9,0,"WR")
@
"SEC","^DIC",757.901,757.901,0,"AUDIT")
@
"SEC","^DIC",757.901,757.901,0,"DD")
@
"SEC","^DIC",757.901,757.901,0,"DEL")
@
"SEC","^DIC",757.901,757.901,0,"LAYGO")
@
"SEC","^DIC",757.901,757.901,0,"RD")
@
"SEC","^DIC",757.901,757.901,0,"WR")
@
"SEC","^DIC",757.902,757.902,0,"AUDIT")
@
"SEC","^DIC",757.902,757.902,0,"DD")
@
"SEC","^DIC",757.902,757.902,0,"DEL")
@
"SEC","^DIC",757.902,757.902,0,"LAYGO")
@
"SEC","^DIC",757.902,757.902,0,"RD")
@
"SEC","^DIC",757.902,757.902,0,"WR")
@
"SEC","^DIC",757.903,757.903,0,"AUDIT")
@
"SEC","^DIC",757.903,757.903,0,"DD")
@
"SEC","^DIC",757.903,757.903,0,"DEL")
@
"SEC","^DIC",757.903,757.903,0,"LAYGO")
@
"SEC","^DIC",757.903,757.903,0,"RD")
@
"SEC","^DIC",757.903,757.903,0,"WR")
@
"SEC","^DIC",757.91,757.91,0,"AUDIT")
@
"SEC","^DIC",757.91,757.91,0,"DD")
@
"SEC","^DIC",757.91,757.91,0,"DEL")
@
"SEC","^DIC",757.91,757.91,0,"LAYGO")
@
"SEC","^DIC",757.91,757.91,0,"RD")
@
"SEC","^DIC",757.91,757.91,0,"WR")
@
"VER")
8.0^22.0
"^DD",757.02,757.02,0)
FIELD^^8^8
"^DD",757.02,757.02,0,"DDA")
N
"^DD",757.02,757.02,0,"DT")
3030307
"^DD",757.02,757.02,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",757.02,757.02,0,"ID",2)
S %I=Y,Y=$S('$D(^(0)):"",$D(^LEX(757.03,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(757.03,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",757.02,757.02,0,"IX","ACODE",757.02,1)

"^DD",757.02,757.02,0,"IX","ACT",757.02,1)

"^DD",757.02,757.02,0,"IX","ACT",757.28,.01)

"^DD",757.02,757.02,0,"IX","ACT",757.28,1)

"^DD",757.02,757.02,0,"IX","ADC",757.02,5)

"^DD",757.02,757.02,0,"IX","ADCODE",757.02,5)

"^DD",757.02,757.02,0,"IX","AMC",757.02,3)

"^DD",757.02,757.02,0,"IX","APCODE",757.02,1)

"^DD",757.02,757.02,0,"IX","APCODE",757.02,4)

"^DD",757.02,757.02,0,"IX","ASRC",757.02,2)

"^DD",757.02,757.02,0,"IX","AVA",757.02,2)

"^DD",757.02,757.02,0,"IX","B",757.02,.01)

"^DD",757.02,757.02,0,"IX","CODE",757.02,1)

"^DD",757.02,757.02,0,"NM","CODES")

"^DD",757.02,757.02,0,"PK")
LEX
"^DD",757.02,757.02,0,"VRPK")
LEX
"^DD",757.02,757.02,0,"VRRV")
25^3030930
"^DD",757.02,757.02,.01,0)
EXPRESSION^RP757.01'I^LEX(757.01,^0;1^Q
"^DD",757.02,757.02,.01,1,0)
^.1
"^DD",757.02,757.02,.01,1,1,0)
757.02^B
"^DD",757.02,757.02,.01,1,1,1)
S ^LEX(757.02,"B",$E(X,1,30),DA)=""
"^DD",757.02,757.02,.01,1,1,2)
K ^LEX(757.02,"B",$E(X,1,30),DA)
"^DD",757.02,757.02,.01,1,1,"%D",0)
^^5^5^2940902^^
"^DD",757.02,757.02,.01,1,1,"%D",1,0)
^LEX(757.02,"B",EXP,IEN) - where EXP is a pointer to the expression in the
"^DD",757.02,757.02,.01,1,1,"%D",2,0)
Expression file (#757.01) which has been assigned a classification code and 
"^DD",757.02,757.02,.01,1,1,"%D",3,0)
IEN is the Internal Entry Number in the Codes file (#757.02) where this
"^DD",757.02,757.02,.01,1,1,"%D",4,0)
expression is located.  This index is used to retrieve all codes associated
"^DD",757.02,757.02,.01,1,1,"%D",5,0)
with an expression.
"^DD",757.02,757.02,.01,3)

"^DD",757.02,757.02,.01,21,0)
^^5^5^2981006^^^^
"^DD",757.02,757.02,.01,21,1,0)
Pointer to the expression in the Expression file #757.01 to which a
"^DD",757.02,757.02,.01,21,2,0)
classification code (i.e., ICD, CPT, DSM code) has been assigned.  This 
"^DD",757.02,757.02,.01,21,3,0)
pointer links the code to an expression.  This expression can be a Major 
"^DD",757.02,757.02,.01,21,4,0)
Concept, a Synonym or a Lexical Variant of either the Major Concept or the
"^DD",757.02,757.02,.01,21,5,0)
Synonym.
"^DD",757.02,757.02,.01,"DT")
2931124
"^DD",757.02,757.02,1,0)
CODE^RF^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<1) X
"^DD",757.02,757.02,1,1,0)
^.1
"^DD",757.02,757.02,1,1,1,0)
757.02^ACODE^MUMPS
"^DD",757.02,757.02,1,1,1,1)
Q:+$P($G(^LEX(757.02,DA,0)),U,6)  S ^LEX(757.02,"ACODE",X_" ",DA)=""
"^DD",757.02,757.02,1,1,1,2)
K ^LEX(757.02,"ACODE",X_" ",DA)
"^DD",757.02,757.02,1,1,1,"%D",0)
^.101^4^4^3030321^^^^
"^DD",757.02,757.02,1,1,1,"%D",1,0)
^LEX(757.02,"ACODE",CODE,IEN) - where CODE is a Classification Code (i.e., ICD
"^DD",757.02,757.02,1,1,1,"%D",2,0)
code, CPT code, DSM code, etc) and IEN is the Internal Entry Number in the
"^DD",757.02,757.02,1,1,1,"%D",3,0)
Codes file (#757.02) where this code is located.  This is an index of all 
"^DD",757.02,757.02,1,1,1,"%D",4,0)
active codes contained in this file.
"^DD",757.02,757.02,1,1,1,"DT")
3030321
"^DD",757.02,757.02,1,1,2,0)
757.02^ACT^MUMPS
"^DD",757.02,757.02,1,1,2,1)
D SAHC^LEXNDX8
"^DD",757.02,757.02,1,1,2,2)
D KAHC^LEXNDX8
"^DD",757.02,757.02,1,1,2,"%D",0)
^^6^6^3030310^
"^DD",757.02,757.02,1,1,2,"%D",1,0)
^LEX(757.02,"ACT",CODE,STA,DATE,IEN,HIS) - Where CODE is the
"^DD",757.02,757.02,1,1,2,"%D",2,0)
classification code, STA is the status (either 1 for active
"^DD",757.02,757.02,1,1,2,"%D",3,0)
or 0 for inactive), DATE is the date the code was activated
"^DD",757.02,757.02,1,1,2,"%D",4,0)
or inactivated, IEN is the internal entry number in 
"^DD",757.02,757.02,1,1,2,"%D",5,0)
the CODES file, and HIS is the entry number of the Activation 
"^DD",757.02,757.02,1,1,2,"%D",6,0)
Status multiple where this historical entry may be found.
"^DD",757.02,757.02,1,1,2,"DT")
3030310
"^DD",757.02,757.02,1,1,3,0)
757.02^CODE^MUMPS
"^DD",757.02,757.02,1,1,3,1)
S ^LEX(757.02,"CODE",X_" ",DA)=""
"^DD",757.02,757.02,1,1,3,2)
K ^LEX(757.02,"CODE",X_" ",DA)
"^DD",757.02,757.02,1,1,3,"%D",0)
^^4^4^3030320^
"^DD",757.02,757.02,1,1,3,"%D",1,0)
^LEX(757.02,"CODE",CODE,IEN) - Where CODE is a classification code (i.e.
"^DD",757.02,757.02,1,1,3,"%D",2,0)
ICD code, CPT code, DSM code, etc) and IEN is the Internal Entry Number
"^DD",757.02,757.02,1,1,3,"%D",3,0)
in the codes file (#757.02) where this code is located. This is an index 
"^DD",757.02,757.02,1,1,3,"%D",4,0)
of all codes contained in this file.
"^DD",757.02,757.02,1,1,3,"DT")
3030320
"^DD",757.02,757.02,1,1,4,0)
757.02^APCODE^MUMPS
"^DD",757.02,757.02,1,1,4,1)
S:$L(X)&(+$P(^LEX(757.02,+DA,0),"^",5)>0) ^LEX(757.02,"APCODE",(X_" "),+DA)=""
"^DD",757.02,757.02,1,1,4,2)
K:$L(X)&(+$P(^LEX(757.02,+DA,0),"^",5)>0) ^LEX(757.02,"APCODE",(X_" "),+DA)
"^DD",757.02,757.02,1,1,4,"%D",0)
^^3^3^3030321^
"^DD",757.02,757.02,1,1,4,"%D",1,0)
^LEX(757.02,"APCODE",(CODE_" "),IEN) - Where CODE is a classification 
"^DD",757.02,757.02,1,1,4,"%D",2,0)
code and IEN is the internal entry number where the record pointing to 
"^DD",757.02,757.02,1,1,4,"%D",3,0)
the preferred term for the code is stored in file 757.02.
"^DD",757.02,757.02,1,1,4,"DT")
3030321
"^DD",757.02,757.02,1,3)
Answer must be 1-40 characters in length.
"^DD",757.02,757.02,1,21,0)
^^2^2^2960812^^^
"^DD",757.02,757.02,1,21,1,0)
Classification Code as described by a controlled vocabulary (i.e., ICD, 
"^DD",757.02,757.02,1,21,2,0)
CPT, etc).
"^DD",757.02,757.02,1,"DT")
3030321
"^DD",757.02,757.02,2,0)
CLASSIFICATION SOURCE^RP757.03'^LEX(757.03,^0;3^Q
"^DD",757.02,757.02,2,1,0)
^.1
"^DD",757.02,757.02,2,1,1,0)
757.02^ASRC^MUMPS
"^DD",757.02,757.02,2,1,1,1)
S ^LEX(757.02,"ASRC",$E(^LEX(757.03,X,0),1,3),DA)=""
"^DD",757.02,757.02,2,1,1,2)
K ^LEX(757.02,"ASRC",$E(^LEX(757.03,X,0),1,3),DA)
"^DD",757.02,757.02,2,1,1,"%D",0)
2^^5^5^2940902^
"^DD",757.02,757.02,2,1,1,"%D",1,0)
^LEX(757.02,"ASRC",SAB,IEN) - where SAB is the three chracter mnemonic of the 
"^DD",757.02,757.02,2,1,1,"%D",2,0)
Source Abbreviation (i.e., ICD, CPT, etc) from the Coding Systems file #757.03
"^DD",757.02,757.02,2,1,1,"%D",3,0)
and IEN is the Internal Entry Number where this type of code can be located.
"^DD",757.02,757.02,2,1,1,"%D",4,0)
This index is used extensively in filtering searches by type of code and used
"^DD",757.02,757.02,2,1,1,"%D",5,0)
to determin the type of code selected.
"^DD",757.02,757.02,2,1,1,"DT")
2930325
"^DD",757.02,757.02,2,1,2,0)
757.02^AVA^MUMPS
"^DD",757.02,757.02,2,1,2,1)
Q:+($P($G(^LEX(757.02,DA,0)),U,6))  N SAB S SAB=$E(^LEX(757.03,X,0),1,3) S:"^ICD^10D^ICP^10P^CPT^CPC^DS4^NAN^HHC^NIC^SNM^SM3^OMA^SCC^"[SAB ^LEX(757.02,"AVA",($P(^LEX(757.02,DA,0),U,2)_" "),$P(^LEX(757.02,DA,0),U),SAB,DA)=""
"^DD",757.02,757.02,2,1,2,2)
S SAB=$E(^LEX(757.03,X,0),1,3) K ^LEX(757.02,"AVA",($P(^LEX(757.02,DA,0),U,2)_" "),$P(^LEX(757.02,DA,0),U),SAB,DA),SAB
"^DD",757.02,757.02,2,1,2,"%D",0)
^^6^6^2980114^^^^
"^DD",757.02,757.02,2,1,2,"%D",1,0)
^LEX(757.02,"AVA",CODE,SAB,IEN) - where CODE is the Classification Code from
"^DD",757.02,757.02,2,1,2,"%D",2,0)
field 1, SAB is the three character mnemonic for the source abbreviation in the
"^DD",757.02,757.02,2,1,2,"%D",3,0)
Coding Systems file #757.03 (i.e., ICD, CPT, etc) and IEN is the Internal Entry
"^DD",757.02,757.02,2,1,2,"%D",4,0)
Number in the Codes file #757.02 where the code is located.  This is an index
"^DD",757.02,757.02,2,1,2,"%D",5,0)
of only those codes frequently used by the VA (Source Abbreviation SAB is ICD, 
"^DD",757.02,757.02,2,1,2,"%D",6,0)
CPT, DSM, NAN, NIC, OMA, or SNM).
"^DD",757.02,757.02,2,1,2,"DT")
2980114
"^DD",757.02,757.02,2,21,0)
^^2^2^2940902^^
"^DD",757.02,757.02,2,21,1,0)
Pointer to the classification system (ICD/CPT/DSM etc) described in the
"^DD",757.02,757.02,2,21,2,0)
Coding Systems file (#757.03) from which the code (field 1) is derived.
"^DD",757.02,757.02,2,"DT")
2980114
"^DD",757.02,757.02,3,0)
MAJOR CONCEPT^RP757'I^LEX(757,^0;4^Q
"^DD",757.02,757.02,3,1,0)
^.1
"^DD",757.02,757.02,3,1,1,0)
757.02^AMC
"^DD",757.02,757.02,3,1,1,1)
S ^LEX(757.02,"AMC",$E(X,1,30),DA)=""
"^DD",757.02,757.02,3,1,1,2)
K ^LEX(757.02,"AMC",$E(X,1,30),DA)
"^DD",757.02,757.02,3,1,1,"%D",0)
^^4^4^2940902^^
"^DD",757.02,757.02,3,1,1,"%D",1,0)
^LEX(757.02,"AMC",MC,IEN) - where MC is a pointer to the Major Concept Map file
"^DD",757.02,757.02,3,1,1,"%D",2,0)
#757 and IEN is the Internal Entry Number of the Codes file #757.03 where this
"^DD",757.02,757.02,3,1,1,"%D",3,0)
Major Concept pointer is located.  Used to retrieve all codes associated with
"^DD",757.02,757.02,3,1,1,"%D",4,0)
a Major Concept.
"^DD",757.02,757.02,3,1,1,"DT")
2930325
"^DD",757.02,757.02,3,21,0)
^^4^4^2940902^^^
"^DD",757.02,757.02,3,21,1,0)
Pointer the the Major Concept in the Major Concept Map file #757 to which a
"^DD",757.02,757.02,3,21,2,0)
classification code (i.e., ICD, CPT, DSM code) has been assigned.  This pointer
"^DD",757.02,757.02,3,21,3,0)
links the code to the Major Concept of the expression defined in the .01 field
"^DD",757.02,757.02,3,21,4,0)
(Expression).
"^DD",757.02,757.02,3,"DT")
2931124
"^DD",757.02,757.02,4,0)
PREFERENCE FLAG^S^1:PREFERRED TERM;0:OTHER THAN PREFERRED TERM;^0;5^Q
"^DD",757.02,757.02,4,1,0)
^.1
"^DD",757.02,757.02,4,1,1,0)
757.02^APCODE^MUMPS
"^DD",757.02,757.02,4,1,1,1)
S:+X>0&($L($P($G(^LEX(757.02,+DA,0)),U,2))) ^LEX(757.02,"APCODE",($P($G(^LEX(757.02,+DA,0)),U,2)_" "),+DA)=""
"^DD",757.02,757.02,4,1,1,2)
K:$L($P($G(^LEX(757.02,+DA,0)),U,2)) ^LEX(757.02,"APCODE",($P($G(^LEX(757.02,+DA,0)),U,2)_" "),+DA)
"^DD",757.02,757.02,4,1,1,"%D",0)
^.101^3^3^3030321^^^^
"^DD",757.02,757.02,4,1,1,"%D",1,0)
^LEX(757.02,"APCODE",(CODE_" "),IEN) - Where CODE is a classification 
"^DD",757.02,757.02,4,1,1,"%D",2,0)
code and IEN is the internal entry number where the record pointing to 
"^DD",757.02,757.02,4,1,1,"%D",3,0)
the preferred term for the code is stored in file 757.02.
"^DD",757.02,757.02,4,1,1,"DT")
3030321
"^DD",757.02,757.02,4,21,0)
^^4^4^2940902^^
"^DD",757.02,757.02,4,21,1,0)
Some codes within a coding system are linked to multiple terms.  This flag
"^DD",757.02,757.02,4,21,2,0)
indicates the preferred term of a code (within a classification system),
"^DD",757.02,757.02,4,21,3,0)
providing a one-to-one relationship between codes and terms.  This field is 
"^DD",757.02,757.02,4,21,4,0)
only populated when a code is linked to multiple terms.
"^DD",757.02,757.02,4,"DT")
3030321
"^DD",757.02,757.02,5,0)
DEACTIVATION FLAG^S^1:DEACTIVATED CODE;^0;6^Q
"^DD",757.02,757.02,5,1,0)
^.1
"^DD",757.02,757.02,5,1,1,0)
757.02^ADC^MUMPS
"^DD",757.02,757.02,5,1,1,1)
S:X=1 ^LEX(757.02,"ADC",X,DA)=""
"^DD",757.02,757.02,5,1,1,2)
K ^LEX(757.02,"ADC",X,DA)
"^DD",757.02,757.02,5,1,1,"%D",0)
^^3^3^2950405^
"^DD",757.02,757.02,5,1,1,"%D",1,0)
^LEX(757.02,"ADC",1,IEN) - This is an index of all deactivated codes in the
"^DD",757.02,757.02,5,1,1,"%D",2,0)
code file where IEN is the Internal Entry Number in the CODES file (757.02)
"^DD",757.02,757.02,5,1,1,"%D",3,0)
where the deactivated code is located.
"^DD",757.02,757.02,5,1,1,"DT")
2950405
"^DD",757.02,757.02,5,1,2,0)
757.02^ADCODE^MUMPS
"^DD",757.02,757.02,5,1,2,1)
S:X=1 ^LEX(757.02,"ADCODE",($P($G(^LEX(757.02,DA,0)),U,2)_" "),DA)=""
"^DD",757.02,757.02,5,1,2,2)
K ^LEX(757.02,"ADCODE",($P($G(^LEX(757.02,DA,0)),U,2)_" "),DA)
"^DD",757.02,757.02,5,1,2,"%D",0)
^^3^3^2970702^
"^DD",757.02,757.02,5,1,2,"%D",1,0)
^LEX(757.02,"ADCODE",DC,IEN) - Where DC is a deactivated code and IEN is the
"^DD",757.02,757.02,5,1,2,"%D",2,0)
internal entry number in the Codes file #757.02 where the deactivated code 
"^DD",757.02,757.02,5,1,2,"%D",3,0)
is located.
"^DD",757.02,757.02,5,1,2,"DT")
2970702
"^DD",757.02,757.02,5,21,0)
^^2^2^2950410^^
"^DD",757.02,757.02,5,21,1,0)
This field indicates that a code formerly in use by the Lexicon has
"^DD",757.02,757.02,5,21,2,0)
been deactivated and should not be used in lookups or displays.
"^DD",757.02,757.02,5,"DT")
2970702
"^DD",757.02,757.02,6,0)
PRIMARY FLAG^RS^0:SUPPLEMENTAL CODE;1:PRIMARY CODE;^0;7^Q
"^DD",757.02,757.02,6,21,0)
^^4^4^2950823^
"^DD",757.02,757.02,6,21,1,0)
If an expression has multiple codes from the same classification system
"^DD",757.02,757.02,6,21,2,0)
(i.e., ICD, CPT, etc) then one will be flagged as the primary code and the
"^DD",757.02,757.02,6,21,3,0)
others will be flagged as supplemental.  If there is only one code of a
"^DD",757.02,757.02,6,21,4,0)
specific classification system then it will be flagged as the primary code.
"^DD",757.02,757.02,6,"DT")
2950823
"^DD",757.02,757.02,8,0)
ACTIVATION STATUS^757.28D^^4;0
"^DD",757.02,757.28,0)
ACTIVATION STATUS SUB-FIELD^^1^2
"^DD",757.02,757.28,0,"DT")
3030305
"^DD",757.02,757.28,0,"IX","B",757.28,.01)

"^DD",757.02,757.28,0,"NM","ACTIVATION STATUS")

"^DD",757.02,757.28,0,"UP")
757.02
"^DD",757.02,757.28,.01,0)
ACTIVATION EFFECTIVE DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",757.02,757.28,.01,1,0)
^.1
"^DD",757.02,757.28,.01,1,1,0)
757.28^B
"^DD",757.02,757.28,.01,1,1,1)
S ^LEX(757.02,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",757.02,757.28,.01,1,1,2)
K ^LEX(757.02,DA(1),4,"B",$E(X,1,30),DA)
"^DD",757.02,757.28,.01,1,2,0)
757.02^ACT^MUMPS
"^DD",757.02,757.28,.01,1,2,1)
D SAHD^LEXNDX8
"^DD",757.02,757.28,.01,1,2,2)
D KAHD^LEXNDX8
"^DD",757.02,757.28,.01,1,2,"%D",0)
^^6^6^3030310^
"^DD",757.02,757.28,.01,1,2,"%D",1,0)
^LEX(757.02,"ACT",CODE,STA,DATE,IEN,HIS) - Where CODE is the 
"^DD",757.02,757.28,.01,1,2,"%D",2,0)
classification code, STA is the status (either 1 for active 
"^DD",757.02,757.28,.01,1,2,"%D",3,0)
or 0 for inactive), DATE is the date the code was activated
"^DD",757.02,757.28,.01,1,2,"%D",4,0)
or inactivated, IEN is the internal entry number in the CODES
"^DD",757.02,757.28,.01,1,2,"%D",5,0)
file, and HIS is the entry number of the Activation Status 
"^DD",757.02,757.28,.01,1,2,"%D",6,0)
multiple where this historical entry may be found.
"^DD",757.02,757.28,.01,1,2,"DT")
3030310
"^DD",757.02,757.28,.01,3)
(No range limit on date)
"^DD",757.02,757.28,.01,"DT")
3030310
"^DD",757.02,757.28,1,0)
ACTIVATION STATUS^S^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",757.02,757.28,1,1,0)
^.1
"^DD",757.02,757.28,1,1,1,0)
757.02^ACT^MUMPS
"^DD",757.02,757.28,1,1,1,1)
D SAHS^LEXNDX8
"^DD",757.02,757.28,1,1,1,2)
D KAHS^LEXNDX8
"^DD",757.02,757.28,1,1,1,"%D",0)
^^6^6^3030310^
"^DD",757.02,757.28,1,1,1,"%D",1,0)
^LEX(757.02,"ACT",CODE,STA,DATE,IEN,HIS) - Where CODE is the 
"^DD",757.02,757.28,1,1,1,"%D",2,0)
classification code, STA is the status (either 1 for active 
"^DD",757.02,757.28,1,1,1,"%D",3,0)
or 0 for inactive), DATE is the date the code was activated
"^DD",757.02,757.28,1,1,1,"%D",4,0)
or inactivated, IEN is the internal entry number in the CODES
"^DD",757.02,757.28,1,1,1,"%D",5,0)
file, and HIS is the entry number of the Activation Status 
"^DD",757.02,757.28,1,1,1,"%D",6,0)
multiple where this historical entry may be found.
"^DD",757.02,757.28,1,1,1,"DT")
3030310
"^DD",757.02,757.28,1,"DT")
3030310
"^DD",757.03,757.03,0)
FIELD^^7^8
"^DD",757.03,757.03,0,"DDA")
N
"^DD",757.03,757.03,0,"DT")
3020118
"^DD",757.03,757.03,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",757.03,757.03,0,"ID",2)
W "   ",$P(^(0),U,3)
"^DD",757.03,757.03,0,"IX","ASAB",757.03,.01)

"^DD",757.03,757.03,0,"IX","B",757.03,.01)

"^DD",757.03,757.03,0,"IX","C",757.03,1)

"^DD",757.03,757.03,0,"IX","D",757.03,7)

"^DD",757.03,757.03,0,"NM","CODING SYSTEMS")

"^DD",757.03,757.03,0,"PK")
LEX
"^DD",757.03,757.03,0,"PT",757.02,2)

"^DD",757.03,757.03,0,"PT",757.91,.02)

"^DD",757.03,757.03,0,"VRPK")
LEX
"^DD",757.03,757.03,0,"VRRV")
13^3020115
"^DD",757.03,757.03,.01,0)
SOURCE ABBREVIATION^RF^^0;1^K:$L(X)>7!($L(X)<3) X
"^DD",757.03,757.03,.01,.1)
SAB
"^DD",757.03,757.03,.01,1,0)
^.1
"^DD",757.03,757.03,.01,1,1,0)
757.03^B
"^DD",757.03,757.03,.01,1,1,1)
S ^LEX(757.03,"B",$E(X,1,30),DA)=""
"^DD",757.03,757.03,.01,1,1,2)
K ^LEX(757.03,"B",$E(X,1,30),DA)
"^DD",757.03,757.03,.01,1,1,"%D",0)
^^3^3^2950922^^
"^DD",757.03,757.03,.01,1,1,"%D",1,0)
^LEX(757.03,"B",SAB,IEN) - where SAB is the Source Abbreviation and IEN is the
"^DD",757.03,757.03,.01,1,1,"%D",2,0)
Internal Entry Number in the Coding Systems file #757.03 where the Source is
"^DD",757.03,757.03,.01,1,1,"%D",3,0)
located.
"^DD",757.03,757.03,.01,1,2,0)
757.03^ASAB^MUMPS
"^DD",757.03,757.03,.01,1,2,1)
S ^LEX(757.03,"ASAB",$E(X,1,3),DA)=""
"^DD",757.03,757.03,.01,1,2,2)
K ^LEX(757.03,"ASAB",$E(X,1,3),DA)
"^DD",757.03,757.03,.01,1,2,"%D",0)
^^4^4^2960215^
"^DD",757.03,757.03,.01,1,2,"%D",1,0)
^LEX(757.03,"ASAB",SAB,IEN) - where SAB is a three representation of the 
"^DD",757.03,757.03,.01,1,2,"%D",2,0)
Source Abbreviation as used in the search filter DIC("S"), and IEN is the
"^DD",757.03,757.03,.01,1,2,"%D",3,0)
Internal Entry Number in the Coding Systems file #757.03 where the Source is
"^DD",757.03,757.03,.01,1,2,"%D",4,0)
located.
"^DD",757.03,757.03,.01,1,2,"DT")
2960215
"^DD",757.03,757.03,.01,3)
Answer must be 3-7 characters in length.
"^DD",757.03,757.03,.01,21,0)
^^4^4^2950110^^^^
"^DD",757.03,757.03,.01,21,1,0)
Three to six character identifier for the source of the classification
"^DD",757.03,757.03,.01,21,2,0)
code located in the Codes file (#757.02).  The normal format is a three
"^DD",757.03,757.03,.01,21,3,0)
character mnemonic for the classification source, appended with the year
"^DD",757.03,757.03,.01,21,4,0)
of publication of the source (i.e., ICD89).
"^DD",757.03,757.03,.01,"DT")
2960215
"^DD",757.03,757.03,1,0)
NOMENCLATURE^RF^^0;2^K:$L(X)>11!($L(X)<2) X
"^DD",757.03,757.03,1,1,0)
^.1
"^DD",757.03,757.03,1,1,1,0)
757.03^C
"^DD",757.03,757.03,1,1,1,1)
S ^LEX(757.03,"C",$E(X,1,30),DA)=""
"^DD",757.03,757.03,1,1,1,2)
K ^LEX(757.03,"C",$E(X,1,30),DA)
"^DD",757.03,757.03,1,1,1,"%D",1,0)
^LEX(757.03,"C",NOM,IEN) - Where NOM is the abbreviated nomenclature for a
"^DD",757.03,757.03,1,1,1,"%D",2,0)
specified coding or classification system and IEN is the Internal Entry Number
"^DD",757.03,757.03,1,1,1,"%D",3,0)
where the nomenclature is located.
"^DD",757.03,757.03,1,1,1,"DT")
2950922
"^DD",757.03,757.03,1,3)
Answer must be 2-11 characters in length.
"^DD",757.03,757.03,1,21,0)
^^2^2^2950919^^^^
"^DD",757.03,757.03,1,21,1,0)
Short title for the classification source.  This is the name normally used
"^DD",757.03,757.03,1,21,2,0)
to refer to the source (i.e., ICD-9, CPT-4, DSM-IIIR, SNOMED etc.)
"^DD",757.03,757.03,1,"DT")
2970430
"^DD",757.03,757.03,2,0)
SOURCE TITLE^RF^^0;3^K:$L(X)>52!($L(X)<2) X
"^DD",757.03,757.03,2,3)
Answer must be 2-52 characters in length.
"^DD",757.03,757.03,2,21,0)
^^2^2^2950920^^^
"^DD",757.03,757.03,2,21,1,0)
Full title of source.  Also includes edition/revision and year of
"^DD",757.03,757.03,2,21,2,0)
publication when available.
"^DD",757.03,757.03,2,"DT")
2950920
"^DD",757.03,757.03,3,0)
SOURCE^F^^0;4^K:$L(X)>50!($L(X)<2) X
"^DD",757.03,757.03,3,3)
Answer must be 2-50 characters in length.
"^DD",757.03,757.03,3,21,0)
^^1^1^2950919^
"^DD",757.03,757.03,3,21,1,0)
This is source of the named coding system.
"^DD",757.03,757.03,3,"DT")
2950919
"^DD",757.03,757.03,4,0)
ENTRIES^NJ10,0^^0;5^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",757.03,757.03,4,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits
"^DD",757.03,757.03,4,21,0)
^^3^3^2950919^
"^DD",757.03,757.03,4,21,1,0)
This is the number of coded entries found in the Lexicon (by classification
"^DD",757.03,757.03,4,21,2,0)
system) at the time of export.  NOTE:  This does not include deactivated
"^DD",757.03,757.03,4,21,3,0)
entries.
"^DD",757.03,757.03,4,"DT")
2950919
"^DD",757.03,757.03,5,0)
UNIQUE ENTRIES^NJ10,0^^0;6^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",757.03,757.03,5,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits
"^DD",757.03,757.03,5,21,0)
^^3^3^2950919^
"^DD",757.03,757.03,5,21,1,0)
This is the number of unique coded entries found in the Lexicon (by
"^DD",757.03,757.03,5,21,2,0)
classification system) at the time of export.  NOTE:  This does not include
"^DD",757.03,757.03,5,21,3,0)
deactivated entries.
"^DD",757.03,757.03,5,"DT")
2950919
"^DD",757.03,757.03,6,0)
INACTIVE VERSION^F^^0;7^K:$L(X)>20!($L(X)<1) X
"^DD",757.03,757.03,6,3)
Answer must be 1-20 characters in length.
"^DD",757.03,757.03,6,21,0)
^^2^2^2960415^
"^DD",757.03,757.03,6,21,1,0)
This represents the version number of the source file for which inactivated
"^DD",757.03,757.03,6,21,2,0)
codes are derived.
"^DD",757.03,757.03,6,"DT")
2960415
"^DD",757.03,757.03,7,0)
HL7 CODING SYSTEM^F^^0;8^K:$L(X)>40!($L(X)<2) X
"^DD",757.03,757.03,7,.1)
HL7 CODE SYSTEM
"^DD",757.03,757.03,7,1,0)
^.1
"^DD",757.03,757.03,7,1,1,0)
757.03^D
"^DD",757.03,757.03,7,1,1,1)
S ^LEX(757.03,"D",$E(X,1,30),DA)=""
"^DD",757.03,757.03,7,1,1,2)
K ^LEX(757.03,"D",$E(X,1,30),DA)
"^DD",757.03,757.03,7,1,1,"%D",0)
^^1^1^3020118^
"^DD",757.03,757.03,7,1,1,"%D",1,0)
HL7 Coding System cross reference
"^DD",757.03,757.03,7,1,1,"DT")
3020118
"^DD",757.03,757.03,7,3)
Answer must be 2-40 characters in length
"^DD",757.03,757.03,7,21,0)
^^1^1^3020118^
"^DD",757.03,757.03,7,21,1,0)
This is the HL7 coding system mnemonic for the Lexicon coding system
"^DD",757.03,757.03,7,"DT")
3020118
"^DD",757.2,757.2,0)
FIELD^^200^21
"^DD",757.2,757.2,0,"DDA")
N
"^DD",757.2,757.2,0,"DT")
2970705
"^DD",757.2,757.2,0,"IX","AA",757.2,1)

"^DD",757.2,757.2,0,"IX","AB",757.2,8)

"^DD",757.2,757.2,0,"IX","ADEF",757.2,13)

"^DD",757.2,757.2,0,"IX","AN",757.2,14)

"^DD",757.2,757.2,0,"IX","APPS",757.2,13)

"^DD",757.2,757.2,0,"IX","AUD",757.201,.01)

"^DD",757.2,757.2,0,"IX","B",757.2,.01)

"^DD",757.2,757.2,0,"IX","C",757.2,.01)

"^DD",757.2,757.2,0,"IX","D",757.2,.01)

"^DD",757.2,757.2,0,"NM","SUBSET DEFINITIONS")

"^DD",757.2,757.2,0,"PK")
LEX
"^DD",757.2,757.2,0,"PT",757.21,1)

"^DD",757.2,757.2,0,"VRPK")
LEX
"^DD",757.2,757.2,0,"VRRV")
6^2980422
"^DD",757.2,757.2,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>35!($L(X)<3)!'(X'?1P.E) X
"^DD",757.2,757.2,.01,.1)
DESCRIPTIVE TITLE
"^DD",757.2,757.2,.01,1,0)
^.1
"^DD",757.2,757.2,.01,1,1,0)
757.2^B
"^DD",757.2,757.2,.01,1,1,1)
S ^LEXT(757.2,"B",$E(X,1,30),DA)=""
"^DD",757.2,757.2,.01,1,1,2)
K ^LEXT(757.2,"B",$E(X,1,30),DA)
"^DD",757.2,757.2,.01,1,1,"%D",0)
^^3^3^2940902^^
"^DD",757.2,757.2,.01,1,1,"%D",1,0)
^LEXT(757.2,"B",NAME,IEN) - where NAME is the subset Name (.01) and IEN is the
"^DD",757.2,757.2,.01,1,1,"%D",2,0)
Internal Entry Number of the Subset Definition file #757.02 where the subset
"^DD",757.2,757.2,.01,1,1,"%D",3,0)
name is located.
"^DD",757.2,757.2,.01,1,2,0)
757.2^C^MUMPS
"^DD",757.2,757.2,.01,1,2,1)
S ^LEXT(757.2,"C",$E($$UP^XLFSTR(X),1,63),DA)=""
"^DD",757.2,757.2,.01,1,2,2)
K ^LEXT(757.2,"C",$E($$UP^XLFSTR(X),1,63),DA)
"^DD",757.2,757.2,.01,1,2,"%D",0)
^^3^3^2940902^^
"^DD",757.2,757.2,.01,1,2,"%D",1,0)
^LEXT(757.2,"C",NAME,IEN) - where NAME is an extended 63 character uppercase
"^DD",757.2,757.2,.01,1,2,"%D",2,0)
subset Name (.01) and IEN is the Internal Entry Number of the Subset Definition
"^DD",757.2,757.2,.01,1,2,"%D",3,0)
file #757.2 where the subset name is located.
"^DD",757.2,757.2,.01,1,2,"DT")
2940204
"^DD",757.2,757.2,.01,1,3,0)
757.2^D^MUMPS
"^DD",757.2,757.2,.01,1,3,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^LEXT(757.2,"D",I,DA)="",^LEXT(757.2,"D",$$UP^XLFSTR(I),DA)="",^LEXT(757.2,"D",$$LOW^XLFSTR(I),DA)=""
"^DD",757.2,757.2,.01,1,3,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^LEXT(757.2,"D",I,DA),^LEXT(757.2,"D",$$UP^XLFSTR(I),DA),^LEXT(757.2,"D",$$LOW^XLFSTR(I),DA)
"^DD",757.2,757.2,.01,1,3,"%D",0)
^^3^3^2960724^^
"^DD",757.2,757.2,.01,1,3,"%D",1,0)
^LEXT(757.2,"D",WORD,IEN) - This is a word index on the Subset name
"^DD",757.2,757.2,.01,1,3,"%D",2,0)
where WORD is a single uppercase/lowercase word parsed from the name
"^DD",757.2,757.2,.01,1,3,"%D",3,0)
and IEN is the Internal Entry Number where this word is located.
"^DD",757.2,757.2,.01,1,3,"DT")
2960724
"^DD",757.2,757.2,.01,3)
Descriptive title must be 3-35 characters in length.
"^DD",757.2,757.2,.01,21,0)
^^1^1^2940902^^^^
"^DD",757.2,757.2,.01,21,1,0)
Vocabulary subset name (i.e., "Nursing", "Social Work").
"^DD",757.2,757.2,.01,"DT")
2960724
"^DD",757.2,757.2,1,0)
SHORT TITLE^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>3!($L(X)<3)!'(X?3U) X
"^DD",757.2,757.2,1,1,0)
^.1
"^DD",757.2,757.2,1,1,1,0)
757.2^AA
"^DD",757.2,757.2,1,1,1,1)
S ^LEXT(757.2,"AA",$E(X,1,30),DA)=""
"^DD",757.2,757.2,1,1,1,2)
K ^LEXT(757.2,"AA",$E(X,1,30),DA)
"^DD",757.2,757.2,1,1,1,"%D",0)
^^5^5^2940902^^
"^DD",757.2,757.2,1,1,1,"%D",1,0)
^LEXT(757.2,"AA",ST,IEN) - where ST is the Short Title (1) of a subset and IEN
"^DD",757.2,757.2,1,1,1,"%D",2,0)
is the Internal Entry Number in the Subset Definition file #757.2 where the
"^DD",757.2,757.2,1,1,1,"%D",3,0)
Short Title is located.  The Short Title when when appended with a leading "A"
"^DD",757.2,757.2,1,1,1,"%D",4,0)
becomes the name of the index to use during look-up (i.e., NUR becomes "ANUR" 
"^DD",757.2,757.2,1,1,1,"%D",5,0)
for the Nursing subset index).
"^DD",757.2,757.2,1,1,1,"DT")
2940519
"^DD",757.2,757.2,1,3)
Short Title (index mnemonic) must be 3 characters in length.
"^DD",757.2,757.2,1,21,0)
^^3^3^2960812^^^^
"^DD",757.2,757.2,1,21,1,0)
Three character uppercase mnemonic representing the vocabulary subset.
"^DD",757.2,757.2,1,21,2,0)
This short title, when appended with the letter "A" (i.e. "A"_"NUR" to
"^DD",757.2,757.2,1,21,3,0)
"ANUR") becomes the name of the index to be used by the look-up utility.
"^DD",757.2,757.2,1,"DT")
2960425
"^DD",757.2,757.2,2,0)
GLOBAL REFERENCE^RF^^1;2^K:$L(X)>40!($L(X)<4) X
"^DD",757.2,757.2,2,3)
Global Reference (less ^) must be 4-40 characters in length, i.e., LEX(757,
"^DD",757.2,757.2,2,21,0)
^^1^1^2940902^^^^
"^DD",757.2,757.2,2,21,1,0)
Global root of the file containing the vocabulary subset.
"^DD",757.2,757.2,2,"DT")
2960401
"^DD",757.2,757.2,3,0)
HELP ROUTINE ENTRY POINT^RF^^2;1^K:$L(X)>8!($L(X)<1) X
"^DD",757.2,757.2,3,3)
Help Routine Entry Point must be 1-8 characters in length, i.e., XTLK
"^DD",757.2,757.2,3,21,0)
^^3^3^2940902^^
"^DD",757.2,757.2,3,21,1,0)
Contains the help routine's entry point (provided a separate help routine
"^DD",757.2,757.2,3,21,2,0)
has been written to support the vocabulary subset and the entry point of
"^DD",757.2,757.2,3,21,3,0)
this routine is other than the first line).
"^DD",757.2,757.2,3,"DT")
2960425
"^DD",757.2,757.2,4,0)
HELP ROUTINE^RF^^2;2^K:$L(X)>8!($L(X)<3) X
"^DD",757.2,757.2,4,3)
Help Routine must be 3-8 characters in length, i.e., LEXHLP
"^DD",757.2,757.2,4,21,0)
^^2^2^2960812^^^^
"^DD",757.2,757.2,4,21,1,0)
Contains the name of the help routine (provided a separate help routine
"^DD",757.2,757.2,4,21,2,0)
was written).  This help routine will be used by the look-up utility.
"^DD",757.2,757.2,4,"DT")
2960401
"^DD",757.2,757.2,5,0)
DISPLAY ROUTINE ENTRY POINT^RF^^3;1^K:$L(X)>8!($L(X)<1) X
"^DD",757.2,757.2,5,3)
Display Routine Entry Point must be 1-8 characters in length, i.e., XTLK
"^DD",757.2,757.2,5,21,0)
^^3^3^2940902^^
"^DD",757.2,757.2,5,21,1,0)
Contains the display routine's entry point (provided a separate display
"^DD",757.2,757.2,5,21,2,0)
routine has been written to support the vocabulary subset and the entry
"^DD",757.2,757.2,5,21,3,0)
point of this routine is other than the first line).
"^DD",757.2,757.2,5,"DT")
2960425
"^DD",757.2,757.2,6,0)
DISPLAY ROUTINE^RF^^3;2^K:$L(X)>8!($L(X)<3) X
"^DD",757.2,757.2,6,3)
Display Routine must be 3-8 characters in length, i.e., LEXPRNT
"^DD",757.2,757.2,6,21,0)
^^3^3^2960812^^^^
"^DD",757.2,757.2,6,21,1,0)
Contains the name of the display routine (provided a separate display
"^DD",757.2,757.2,6,21,2,0)
routine was written).  This display routine will be used by the 
"^DD",757.2,757.2,6,21,3,0)
look-up utility.
"^DD",757.2,757.2,6,"DT")
2960401
"^DD",757.2,757.2,7,0)
DISPLAY CODES^F^^4;1^K:$L(X)>100!($L(X)<3) X
"^DD",757.2,757.2,7,3)
Display Code String must be 3-100 characters in length, i.e., ICD/NAN/NIC
"^DD",757.2,757.2,7,21,0)
^^4^4^2940902^^^
"^DD",757.2,757.2,7,21,1,0)
This field contains a string of classification/coding systems (separated
"^DD",757.2,757.2,7,21,2,0)
by slashes) to be displayed during look-up (i.e., "ICD/CPT/DSM/NAN").
"^DD",757.2,757.2,7,21,3,0)
This string will not override the user's preferred code display stored in
"^DD",757.2,757.2,7,21,4,0)
^LEXT(757.2,D0,200,DUZ,2)
"^DD",757.2,757.2,7,"DT")
2960401
"^DD",757.2,757.2,8,0)
APPLICATION MNEMONIC^FX^^5;1^K:X[""""!($A(X)=45) X I $D(X) I '+($$APPS^LEXHLP(X)) K X
"^DD",757.2,757.2,8,1,0)
^.1
"^DD",757.2,757.2,8,1,1,0)
757.2^AB^MUMPS
"^DD",757.2,757.2,8,1,1,1)
D SAPP^LEXNDX2
"^DD",757.2,757.2,8,1,1,2)
D KAPP^LEXNDX2
"^DD",757.2,757.2,8,1,1,"%D",0)
^^4^4^2940902^^
"^DD",757.2,757.2,8,1,1,"%D",1,0)
^LEXT(757.2,"AB",AN,IEN) - where AN is the Application Mnemonic and IEN is the
"^DD",757.2,757.2,8,1,1,"%D",2,0)
Internal Entry Number of the Subset Definition file where the Application
"^DD",757.2,757.2,8,1,1,"%D",3,0)
Mnemonic is located.  This is an index of only those subsets which define an 
"^DD",757.2,757.2,8,1,1,"%D",4,0)
application.  (Note:  Subsets which define a vocabulary are indexed at "AA")
"^DD",757.2,757.2,8,1,1,"DT")
2930909
"^DD",757.2,757.2,8,3)
Application Mnemonic must be 3 characters in length, and cannot be the same as the Short Title (index identifier at field 1).
"^DD",757.2,757.2,8,21,0)
^^5^5^2940902^^
"^DD",757.2,757.2,8,21,1,0)
Unique 3 character mnemonic representing either the application using the
"^DD",757.2,757.2,8,21,2,0)
Lexicon or if an application has more than one set of defaults,
"^DD",757.2,757.2,8,21,3,0)
it will represent the applications preference.  For example, PL1 - Problem 
"^DD",757.2,757.2,8,21,4,0)
List Provider entry, PL2 - Problem List ICD only.  This field is populated 
"^DD",757.2,757.2,8,21,5,0)
by DB Integration Agreement only
"^DD",757.2,757.2,8,"DT")
2960401
"^DD",757.2,757.2,9,0)
APPLICATION INDEX^F^^5;2^K:$L(X)>3!($L(X)<3) X
"^DD",757.2,757.2,9,3)
Application Index must be 3 characters in length.
"^DD",757.2,757.2,9,21,0)
^^5^5^2940902^^
"^DD",757.2,757.2,9,21,1,0)
This is the index which the application will use during look-up.  This
"^DD",757.2,757.2,9,21,2,0)
index must be contained in the global defined in the Global Reference
"^DD",757.2,757.2,9,21,3,0)
(#2).  This index name will be appended with a leading "A" to create the
"^DD",757.2,757.2,9,21,4,0)
index name (i.e., "A"_NUR to "ANUR" to use the Nursing Index).  This field
"^DD",757.2,757.2,9,21,5,0)
is populated by DB Integration Agreement only.
"^DD",757.2,757.2,9,"DT")
2960401
"^DD",757.2,757.2,10,0)
APPLICATION FILTER^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",757.2,757.2,10,1,0)
^.1^^0
"^DD",757.2,757.2,10,3)
Application Filter is Standard MUMPS code.
"^DD",757.2,757.2,10,9)
@
"^DD",757.2,757.2,10,21,0)
^^3^3^2940902^^^^
"^DD",757.2,757.2,10,21,1,0)
This is the filter to be used by the application during look-up.  It is in
"^DD",757.2,757.2,10,21,2,0)
the format of a valid IF statement without an action to perform when the
"^DD",757.2,757.2,10,21,3,0)
condition is true.  This field is populated by DB Integration Agreement only.
"^DD",757.2,757.2,10,"DT")
2960401
"^DD",757.2,757.2,11,0)
APPLICATION DISPLAY CODES^F^^7;1^K:$L(X)>210!($L(X)<3) X
"^DD",757.2,757.2,11,3)
Application Display Codes must be 3-210 characters in length, i.e., "ICD/CPT"
"^DD",757.2,757.2,11,21,0)
^^8^8^2940302^
"^DD",757.2,757.2,11,21,1,0)
This is a string of source abbreviations (separated by slashes) of the
"^DD",757.2,757.2,11,21,2,0)
source code to display for an application during look-up.  For example:
"^DD",757.2,757.2,11,21,3,0)
 
"^DD",757.2,757.2,11,21,4,0)
   ICD/CPT/DSM
"^DD",757.2,757.2,11,21,5,0)
 
"^DD",757.2,757.2,11,21,6,0)
   will display ICD-9, CPT-4 and DSM-3R codes with the term during look-up
"^DD",757.2,757.2,11,21,7,0)
 
"^DD",757.2,757.2,11,21,8,0)
This field is populated by DB Integration Agreement only.
"^DD",757.2,757.2,11,"DT")
2960401
"^DD",757.2,757.2,12,0)
APPLICATION USER DEFAULTS^S^1:USER DEFAULTS ALLOWED;0:USER DEFAULTS ARE NOT ALLOWED;^5;3^Q
"^DD",757.2,757.2,12,21,0)
^^2^2^2951102^^^
"^DD",757.2,757.2,12,21,1,0)
This is a flag indicating whether an application allows users to specify
"^DD",757.2,757.2,12,21,2,0)
defaults in field 200 of this file.
"^DD",757.2,757.2,12,"DT")
2960401
"^DD",757.2,757.2,13,0)
APPLICATION FILE NUMBER^NJ19,8^^5;4^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."9N.N) X
"^DD",757.2,757.2,13,1,0)
^.1
"^DD",757.2,757.2,13,1,1,0)
757.2^ADEF^MUMPS
"^DD",757.2,757.2,13,1,1,1)
S:+($P($G(^LEXT(757.2,DA,5)),U,3))>0 ^LEXT(757.2,"ADEF",X,DA)=""
"^DD",757.2,757.2,13,1,1,2)
K ^LEXT(757.2,"ADEF",X,DA)
"^DD",757.2,757.2,13,1,1,"%D",0)
3^^5^5^2940902^
"^DD",757.2,757.2,13,1,1,"%D",1,0)
^LEXT(757.2,"ADEF",FI,IEN) - where FI is the Application File ID (13) and IEN is
"^DD",757.2,757.2,13,1,1,"%D",2,0)
the Internal Entry Number of the Subset Definition file #757.2 where the
"^DD",757.2,757.2,13,1,1,"%D",3,0)
Application File ID is located.  This index node is only set if Application
"^DD",757.2,757.2,13,1,1,"%D",4,0)
User Default flag (12) is set to 1, and provides an index of only those
"^DD",757.2,757.2,13,1,1,"%D",5,0)
applications who allow user defaults to be defined at the application level.
"^DD",757.2,757.2,13,1,1,"DT")
2940316
"^DD",757.2,757.2,13,1,2,0)
757.2^APPS
"^DD",757.2,757.2,13,1,2,1)
S ^LEXT(757.2,"APPS",$E(X,1,30),DA)=""
"^DD",757.2,757.2,13,1,2,2)
K ^LEXT(757.2,"APPS",$E(X,1,30),DA)
"^DD",757.2,757.2,13,1,2,"%D",0)
^^4^4^2940902^^
"^DD",757.2,757.2,13,1,2,"%D",1,0)
^LEXT(757.2,"APPS",FI,IEN) - where FI is the Application File ID (13) and IEN is
"^DD",757.2,757.2,13,1,2,"%D",2,0)
the Internal Entry Number of the Subset Definition file #757.2 where the
"^DD",757.2,757.2,13,1,2,"%D",3,0)
Application File ID is located.  This provides an index of all applications 
"^DD",757.2,757.2,13,1,2,"%D",4,0)
defined in this file (with or without user defined defaults).
"^DD",757.2,757.2,13,1,2,"DT")
2940316
"^DD",757.2,757.2,13,3)
Type a Number between 1 and 9999999999, 8 Decimal Digits
"^DD",757.2,757.2,13,21,0)
^^2^2^2951016^^^^
"^DD",757.2,757.2,13,21,1,0)
This is the file number from the application where the pointer to the
"^DD",757.2,757.2,13,21,2,0)
Expressions file (#757.01) will be stored.
"^DD",757.2,757.2,13,"DT")
2951016
"^DD",757.2,757.2,14,0)
APPLICATION NAMESPACE^F^^5;5^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>4!($L(X)<2) X
"^DD",757.2,757.2,14,1,0)
^.1
"^DD",757.2,757.2,14,1,1,0)
757.2^AN
"^DD",757.2,757.2,14,1,1,1)
S ^LEXT(757.2,"AN",$E(X,1,30),DA)=""
"^DD",757.2,757.2,14,1,1,2)
K ^LEXT(757.2,"AN",$E(X,1,30),DA)
"^DD",757.2,757.2,14,1,1,"%D",0)
^^4^4^2940902^^
"^DD",757.2,757.2,14,1,1,"%D",1,0)
^LEXT(757.2,"AN",AN,IEN) - where AN is an Application Namespace and IEN is the
"^DD",757.2,757.2,14,1,1,"%D",2,0)
Internal Entry Number of the Subset Definition file #757.2 where the
"^DD",757.2,757.2,14,1,1,"%D",3,0)
Application Namespace is located.  This index is used in both setting user 
"^DD",757.2,757.2,14,1,1,"%D",4,0)
defaults and setting up the special variables for Lexicon look-up.
"^DD",757.2,757.2,14,1,1,"DT")
2940520
"^DD",757.2,757.2,14,3)
Application Namespace must be 2-4 characters in length.
"^DD",757.2,757.2,14,4)
Q
"^DD",757.2,757.2,14,21,0)
^^3^3^2940902^^^
"^DD",757.2,757.2,14,21,1,0)
This is the unique namespace prefix assigned to the package/application
"^DD",757.2,757.2,14,21,2,0)
which is defined in this file.  It is used to extract application level
"^DD",757.2,757.2,14,21,3,0)
defaults (filter/display/vocabulary).
"^DD",757.2,757.2,14,"DT")
2960401
"^DD",757.2,757.2,15,0)
UNRESOLVED NARRATIVES^S^1:Use Unresolved Narratives;0:Do not use Unresolved Narratives;^5;6^Q
"^DD",757.2,757.2,15,21,0)
^^5^5^2940902^^
"^DD",757.2,757.2,15,21,1,0)
The Lexicon has the ability to capture user narratives which
"^DD",757.2,757.2,15,21,2,0)
result in unsuccessful searches.  These "Unresolved Narratives" are
"^DD",757.2,757.2,15,21,3,0)
returned to developers for consideration in future releases of the
"^DD",757.2,757.2,15,21,4,0)
Lexicon.  This flag indicates whether an application will use the
"^DD",757.2,757.2,15,21,5,0)
unresolved feature of the Lexicon.
"^DD",757.2,757.2,15,"DT")
2960401
"^DD",757.2,757.2,16,0)
OVERRIDE USER DEFAULTS^S^1:YES;0:NO;^5;7^Q
"^DD",757.2,757.2,16,21,0)
^^2^2^2960502^^^
"^DD",757.2,757.2,16,21,1,0)
Boolean flag for application definition to indicate if the application defaults
"^DD",757.2,757.2,16,21,2,0)
are to override the defaults set by the user.
"^DD",757.2,757.2,16,"DT")
2960401
"^DD",757.2,757.2,17,0)
SHORTCUT CONTEXT^P757.41'^LEX(757.41,^5;8^Q
"^DD",757.2,757.2,17,21,0)
^^2^2^2950211^^^
"^DD",757.2,757.2,17,21,1,0)
This points to the context describing the set of shortcuts to use during
"^DD",757.2,757.2,17,21,2,0)
searches of the Lexicon.
"^DD",757.2,757.2,17,"DT")
2950211
"^DD",757.2,757.2,18,0)
USER MODIFIERS^S^1:USE MODIFIERS;0:DO NOT USE MODIFIERS;^5;9^Q
"^DD",757.2,757.2,18,21,0)
^^3^3^2970705^
"^DD",757.2,757.2,18,21,1,0)
Some vocabularies have modifiers.  This field is a
"^DD",757.2,757.2,18,21,2,0)
flag indicating to the lookup whether these modifiers
"^DD",757.2,757.2,18,21,3,0)
should be accessed during the search.
"^DD",757.2,757.2,18,"DT")
2970705
"^DD",757.2,757.2,100,0)
DESCRIPTION^757.22^^100;0
"^DD",757.2,757.2,100,21,0)
^^1^1^2950124^
"^DD",757.2,757.2,100,21,1,0)
Contains a description of the general make-up of the vocabulary/subset.
"^DD",757.2,757.2,200,0)
DEFAULTS BY USER^757.201PA^^200;0
"^DD",757.2,757.2,200,21,0)
^^2^2^2950211^^^^
"^DD",757.2,757.2,200,21,1,0)
This multiple contains user defaults for the search filter, display and
"^DD",757.2,757.2,200,21,2,0)
the vocabulary for a limited number of applications.
"^DD",757.2,757.201,0)
DEFAULTS BY USER SUB-FIELD^^4.5^9
"^DD",757.2,757.201,0,"DT")
2950120
"^DD",757.2,757.201,0,"IX","B",757.201,.01)

"^DD",757.2,757.201,0,"NM","DEFAULTS BY USER")

"^DD",757.2,757.201,0,"UP")
757.2
"^DD",757.2,757.201,.01,0)
USER^P200'X^VA(200,^0;1^S DINUM=X
"^DD",757.2,757.201,.01,1,0)
^.1
"^DD",757.2,757.201,.01,1,1,0)
757.201^B
"^DD",757.2,757.201,.01,1,1,1)
S ^LEXT(757.2,DA(1),200,"B",$E(X,1,30),DA)=""
"^DD",757.2,757.201,.01,1,1,2)
K ^LEXT(757.2,DA(1),200,"B",$E(X,1,30),DA)
"^DD",757.2,757.201,.01,1,1,"%D",0)
^^5^5^2940902^
"^DD",757.2,757.201,.01,1,1,"%D",1,0)
^LEX(757.1,SD,200,"B",USER,IEN) - where SD is the Internal Entry Number for a
"^DD",757.2,757.201,.01,1,1,"%D",2,0)
Subset Definition in the Subset Definition file #757.2, USER is a pointer the
"^DD",757.2,757.201,.01,1,1,"%D",3,0)
the New Person file #200 who has default defined, and IEN is the Internal Entry
"^DD",757.2,757.201,.01,1,1,"%D",4,0)
Number in the Defaults by User Sub-file #757.201 where the user defaults are
"^DD",757.2,757.201,.01,1,1,"%D",5,0)
located.
"^DD",757.2,757.201,.01,1,2,0)
757.2^AUD^MUMPS
"^DD",757.2,757.201,.01,1,2,1)
Q:+X<1  S:$L($G(^VA(200,+X,0))) ^LEXT(757.2,"AUD",$P($G(^VA(200,+X,0)),U,1),+X,DA(1),DA)=""
"^DD",757.2,757.201,.01,1,2,2)
K:+X'<1&($L($G(^VA(200,+X,0)))) ^LEXT(757.2,"AUD",$P($G(^VA(200,+X,0)),U,1),+X,DA(1),DA)
"^DD",757.2,757.201,.01,1,2,"%D",0)
^^7^7^2940902^^
"^DD",757.2,757.201,.01,1,2,"%D",1,0)
^LEXT(757.2,"AUD",NAME,USER,SD,IEN) - where NAME is the name of the user taken
"^DD",757.2,757.201,.01,1,2,"%D",2,0)
from the New Person file #200, USER (.01) is a pointer to the New Person file 
"^DD",757.2,757.201,.01,1,2,"%D",3,0)
#200, SD is the Internal Entry Number of the Subset Definition file #757.2
"^DD",757.2,757.201,.01,1,2,"%D",4,0)
where the Application Defaults are located, and IEN is the Internal Entry
"^DD",757.2,757.201,.01,1,2,"%D",5,0)
Number of the Defaults by User Sub-file #757.201 where the user defaults are
"^DD",757.2,757.201,.01,1,2,"%D",6,0)
located.  This is an index used to create alphabetical listings of users who 
"^DD",757.2,757.201,.01,1,2,"%D",7,0)
have defaults set for the application defined at SD.
"^DD",757.2,757.201,.01,1,2,"DT")
2940808
"^DD",757.2,757.201,.01,21,0)
^^2^2^2940902^^
"^DD",757.2,757.201,.01,21,1,0)
This is a pointer to the New Person file #200 of the user who has defined 
"^DD",757.2,757.201,.01,21,2,0)
the defaults.
"^DD",757.2,757.201,.01,"DT")
2940808
"^DD",757.2,757.201,1,0)
SEARCH FILTER^FX^^1;E1,245^K:$L(X)>245!($L(X)<3) X D:$D(X) ^DIM
"^DD",757.2,757.201,1,3)
Search Filter must be 3-245 characters in length, in the form of a valid MUMPS IF statement.
"^DD",757.2,757.201,1,21,0)
^^2^2^2940902^^^
"^DD",757.2,757.201,1,21,1,0)
This is the search filter - DIC("S") - which was either selected or
"^DD",757.2,757.201,1,21,2,0)
created by the user for conducting searches in the Lexicon.
"^DD",757.2,757.201,1,"DT")
2940825
"^DD",757.2,757.201,1.5,0)
SEARCH FILTER NAME^F^^1.5;1^K:$L(X)>200!($L(X)<1) X
"^DD",757.2,757.201,1.5,3)
Answer must be 1-200 characters in length.
"^DD",757.2,757.201,1.5,21,0)
^^1^1^2950120^
"^DD",757.2,757.201,1.5,21,1,0)
This is the name of the user default search filter.
"^DD",757.2,757.201,1.5,"DT")
2950120
"^DD",757.2,757.201,2,0)
DISPLAY^F^^2;1^K:$L(X)>210!($L(X)<3) X
"^DD",757.2,757.201,2,3)
Answer must be 3-210 characters in length.
"^DD",757.2,757.201,2,21,0)
^^3^3^2940902^^
"^DD",757.2,757.201,2,21,1,0)
This is a string of classification codes to display while conducting
"^DD",757.2,757.201,2,21,2,0)
searches in the Lexicon.  It is a series of 3 character
"^DD",757.2,757.201,2,21,3,0)
mnemonics (separated by slashes).  For example:  "ICD/CPT/DSM"
"^DD",757.2,757.201,2,"DT")
2940324
"^DD",757.2,757.201,2.5,0)
DISPLAY NAME^F^^2.5;1^K:$L(X)>200!($L(X)<1) X
"^DD",757.2,757.201,2.5,3)
Answer must be 1-200 characters in length.
"^DD",757.2,757.201,2.5,21,0)
^^1^1^2950120^
"^DD",757.2,757.201,2.5,21,1,0)
This is the name of the default user display format.
"^DD",757.2,757.201,2.5,"DT")
2950120
"^DD",757.2,757.201,3,0)
VOCABULARY^F^^3;1^K:$L(X)>3!($L(X)<3) X
"^DD",757.2,757.201,3,3)
Answer must be 3 characters in length.
"^DD",757.2,757.201,3,21,0)
^^5^5^2940902^^
"^DD",757.2,757.201,3,21,1,0)
This is a 3 character mnemonic that, when appended with a leading "A"
"^DD",757.2,757.201,3,21,2,0)
becomes the name of the index to use while searching the Lexicon.
"^DD",757.2,757.201,3,21,3,0)
For example the subset mnemonic WRD for the Lexicon is indexed at
"^DD",757.2,757.201,3,21,4,0)
"AWRD", SOC for the Social Work subset is indexed at "ASOC", and NUR for the 
"^DD",757.2,757.201,3,21,5,0)
Nursing subset is indexed a "ANUR".
"^DD",757.2,757.201,3,"DT")
2940324
"^DD",757.2,757.201,3.5,0)
VOCABULARY NAME^F^^3.5;1^K:$L(X)>200!($L(X)<1) X
"^DD",757.2,757.201,3.5,3)
Answer must be 1-200 characters in length.
"^DD",757.2,757.201,3.5,21,0)
^^1^1^2950120^
"^DD",757.2,757.201,3.5,21,1,0)
This the name of the user default vocabulary (or subset).
"^DD",757.2,757.201,3.5,"DT")
2950120
"^DD",757.2,757.201,4,0)
SHORTCUTS^P757.41'^LEX(757.41,^4;1^Q
"^DD",757.2,757.201,4,21,0)
^^3^3^2950211^^^
"^DD",757.2,757.201,4,21,1,0)
This is a pointer to the Shortcuts Context file #757.41 which determines
"^DD",757.2,757.201,4,21,2,0)
the group of shortcuts in the Shortcuts file #757.4 to be used during searches
"^DD",757.2,757.201,4,21,3,0)
of the Lexicon.
"^DD",757.2,757.201,4,"DT")
2950211
"^DD",757.2,757.201,4.5,0)
SHORTCUTS NAME^F^^4.5;1^K:$L(X)>200!($L(X)<1) X
"^DD",757.2,757.201,4.5,3)
Shortcut Context Name must be 1-200 characters in length.
"^DD",757.2,757.201,4.5,21,0)
^^2^2^2950211^^
"^DD",757.2,757.201,4.5,21,1,0)
This is the name of the user default context for the set of shortcuts to use
"^DD",757.2,757.201,4.5,21,2,0)
during searches of the Lexicon.
"^DD",757.2,757.201,4.5,"DT")
2950211
"^DD",757.2,757.22,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",757.2,757.22,0,"DT")
2950124
"^DD",757.2,757.22,0,"NM","DESCRIPTION")

"^DD",757.2,757.22,0,"UP")
757.2
"^DD",757.2,757.22,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",757.2,757.22,.01,21,0)
^^2^2^2950124^
"^DD",757.2,757.22,.01,21,1,0)
Contains a description of the general make-up of the vocabulary/subset, and
"^DD",757.2,757.22,.01,21,2,0)
may be used for help in special look-up in this file.
"^DD",757.2,757.22,.01,"DT")
2950124
"^DD",757.9,757.9,0)
FIELD^^.05^5
"^DD",757.9,757.9,0,"DDA")
N
"^DD",757.9,757.9,0,"DT")
3030501
"^DD",757.9,757.9,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^LEXC(757.901,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(757.901,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",757.9,757.9,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^LEXC(757.902,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(757.902,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",757.9,757.9,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",757.9,757.9,0,"IX","AFIL",757.9,.02)

"^DD",757.9,757.9,0,"IX","B",757.9,.01)

"^DD",757.9,757.9,0,"IX","C",757.9,.04)

"^DD",757.9,757.9,0,"IX","D",757.9,.02)

"^DD",757.9,757.9,0,"NM","CHANGE LOG")

"^DD",757.9,757.9,0,"PT",757.903,.01)

"^DD",757.9,757.9,0,"PT",757.904,.01)

"^DD",757.9,757.9,0,"PT",757.91,.04)

"^DD",757.9,757.9,0,"VRPK")
LEX
"^DD",757.9,757.9,0,"VRRV")
25^3030930
"^DD",757.9,757.9,.01,0)
CHANGE DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:2781001>X X
"^DD",757.9,757.9,.01,1,0)
^.1
"^DD",757.9,757.9,.01,1,1,0)
757.9^B
"^DD",757.9,757.9,.01,1,1,1)
S ^LEXC(757.9,"B",$E(X,1,30),DA)=""
"^DD",757.9,757.9,.01,1,1,2)
K ^LEXC(757.9,"B",$E(X,1,30),DA)
"^DD",757.9,757.9,.01,3)
TYPE A DATE NOT EARLIER THAN OCT 01, 1978
"^DD",757.9,757.9,.01,21,0)
^^2^2^3030213^
"^DD",757.9,757.9,.01,21,1,0)
This is the date of publication of the source file provided by the SDO, 
"^DD",757.9,757.9,.01,21,2,0)
Vista package or other contributing agency.
"^DD",757.9,757.9,.01,"DT")
3030213
"^DD",757.9,757.9,.02,0)
CHANGE TYPE^P757.901^LEXC(757.901,^0;2^Q
"^DD",757.9,757.9,.02,1,0)
^.1
"^DD",757.9,757.9,.02,1,1,0)
757.9^D^MUMPS
"^DD",757.9,757.9,.02,1,1,1)
S:$L($P($G(^LEXC(757.901,+X,0)),U,1)) ^LEXC(757.9,"D",$P($G(^LEXC(757.901,+X,0)),U,1),DA)=""
"^DD",757.9,757.9,.02,1,1,2)
K:$L($P($G(^LEXC(757.901,+X,0)),U,1)) ^LEXC(757.9,"D",$P($G(^LEXC(757.901,+X,0)),U,1),DA)
"^DD",757.9,757.9,.02,1,1,"%D",0)
^^3^3^3030325^
"^DD",757.9,757.9,.02,1,1,"%D",1,0)
^LEXC(757.9,"D",SYS,IEN) - Where SYS is a coding classification system 
"^DD",757.9,757.9,.02,1,1,"%D",2,0)
(i.e., ICD-9-CM) and IEN is the internal entry number where the log entry 
"^DD",757.9,757.9,.02,1,1,"%D",3,0)
exist for a change to the classification system.
"^DD",757.9,757.9,.02,1,1,"DT")
3030325
"^DD",757.9,757.9,.02,1,2,0)
757.9^AFIL^MUMPS
"^DD",757.9,757.9,.02,1,2,1)
S ^LEXC(757.9,"AFIL",$S(X=1:80,X=2:80.1,X=3:81,1:"UNK"),DA)=""
"^DD",757.9,757.9,.02,1,2,2)
K ^LEXC(757.9,"AFIL",$S(X=1:80,X=2:80.1,X=3:81,1:"UNK"),DA)
"^DD",757.9,757.9,.02,1,2,"%D",0)
^^3^3^3030325^
"^DD",757.9,757.9,.02,1,2,"%D",1,0)
^LEXC(757.9,"AFIL",FILE,IEN) - Where file in the file number where the 
"^DD",757.9,757.9,.02,1,2,"%D",2,0)
logged changed is affective (i.e., 80, 80.1 or 81) and IEN is the 
"^DD",757.9,757.9,.02,1,2,"%D",3,0)
internal entry number where log entry exist for the change.
"^DD",757.9,757.9,.02,1,2,"DT")
3030325
"^DD",757.9,757.9,.02,21,0)
^^2^2^3030213^
"^DD",757.9,757.9,.02,21,1,0)
This is the type of change submitted in the source's change file (i.e., 
"^DD",757.9,757.9,.02,21,2,0)
ICD-9 diagnosis or procedures update, CPT update, etc.).
"^DD",757.9,757.9,.02,"DT")
3030325
"^DD",757.9,757.9,.03,0)
SDO/CONTRIBUTING AGENCY^P757.902^LEXC(757.902,^0;3^Q
"^DD",757.9,757.9,.03,21,0)
^^2^2^3030213^
"^DD",757.9,757.9,.03,21,1,0)
This is the name of the SDO, VistA package or other agency which provided 
"^DD",757.9,757.9,.03,21,2,0)
the source change data file.
"^DD",757.9,757.9,.03,"DT")
3030213
"^DD",757.9,757.9,.04,0)
SDO PROVIDED VERSION NUMBER/ID^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",757.9,757.9,.04,1,0)
^.1
"^DD",757.9,757.9,.04,1,1,0)
757.9^C
"^DD",757.9,757.9,.04,1,1,1)
S ^LEXC(757.9,"C",$E(X,1,30),DA)=""
"^DD",757.9,757.9,.04,1,1,2)
K ^LEXC(757.9,"C",$E(X,1,30),DA)
"^DD",757.9,757.9,.04,1,1,"DT")
3030319
"^DD",757.9,757.9,.04,3)
Answer must be 1-30 characters in length
"^DD",757.9,757.9,.04,21,0)
^^3^3^3030213^
"^DD",757.9,757.9,.04,21,1,0)
This field contains any versioning identifiers or version numbers provided 
"^DD",757.9,757.9,.04,21,2,0)
by the source Standards Development Organization (SDO) or other contributing 
"^DD",757.9,757.9,.04,21,3,0)
agencies.
"^DD",757.9,757.9,.04,"DT")
3030213
"^DD",757.9,757.9,.05,0)
REASON FOR CHANGE^S^B:Baseline;A:Annual Update;P:Periodic Update;U:Unscheduled Update;M:Maintenance;^0;5^Q
"^DD",757.9,757.9,.05,21,0)
^^1^1^3030219^
"^DD",757.9,757.9,.05,21,1,0)
This is the reason and/or period for updating lexical and coding files.
"^DD",757.9,757.9,.05,"DT")
3030501
"^DD",757.901,757.901,0)
FIELD^^.02^2
"^DD",757.901,757.901,0,"DDA")
N
"^DD",757.901,757.901,0,"DT")
3030213
"^DD",757.901,757.901,0,"IX","B",757.901,.01)

"^DD",757.901,757.901,0,"IX","C",757.901,.01)

"^DD",757.901,757.901,0,"NM","CHANGE TYPE")

"^DD",757.901,757.901,0,"PT",757.9,.02)

"^DD",757.901,757.901,0,"VRPK")
LEX
"^DD",757.901,757.901,0,"VRRV")
25^3030930
"^DD",757.901,757.901,.01,0)
CHANGE TYPE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",757.901,757.901,.01,1,0)
^.1
"^DD",757.901,757.901,.01,1,1,0)
757.901^B
"^DD",757.901,757.901,.01,1,1,1)
S ^LEXC(757.901,"B",$E(X,1,30),DA)=""
"^DD",757.901,757.901,.01,1,1,2)
K ^LEXC(757.901,"B",$E(X,1,30),DA)
"^DD",757.901,757.901,.01,1,2,0)
757.901^C^MUMPS
"^DD",757.901,757.901,.01,1,2,1)
S ^LEXC(757.901,"C",$$UP^XLFSTR(X),DA)=""
"^DD",757.901,757.901,.01,1,2,2)
K ^LEXC(757.901,"C",$$UP^XLFSTR(X),DA)
"^DD",757.901,757.901,.01,1,2,"%D",0)
^^3^3^3030424^
"^DD",757.901,757.901,.01,1,2,"%D",1,0)
^LEXC(757.901,"C",TYPE,IEN) - Where TYPE is an uppercase format
"^DD",757.901,757.901,.01,1,2,"%D",2,0)
of the type of change and IEN is the location in file 757.901 
"^DD",757.901,757.901,.01,1,2,"%D",3,0)
where it is stored.
"^DD",757.901,757.901,.01,1,2,"DT")
3030424
"^DD",757.901,757.901,.01,3)
Answer must be 3-30 characters in length
"^DD",757.901,757.901,.01,"DT")
3030213
"^DD",757.901,757.901,.02,0)
SHORT NAME^F^^0;2^K:$L(X)>13!($L(X)<2) X
"^DD",757.901,757.901,.02,3)
Answer must be 2-13 characters in length
"^DD",757.901,757.901,.02,21,0)
^^1^1^3030320^
"^DD",757.901,757.901,.02,21,1,0)
Short name of change type to be used as an identifier only.
"^DD",757.901,757.901,.02,"DT")
3030320
"^DD",757.902,757.902,0)
FIELD^^.02^2
"^DD",757.902,757.902,0,"DDA")
N
"^DD",757.902,757.902,0,"DT")
3030213
"^DD",757.902,757.902,0,"IX","B",757.902,.01)

"^DD",757.902,757.902,0,"IX","C",757.902,.01)

"^DD",757.902,757.902,0,"NM","CONTRIBUTING AGENCY")

"^DD",757.902,757.902,0,"PT",757.9,.03)

"^DD",757.902,757.902,0,"VRPK")
LEX
"^DD",757.902,757.902,0,"VRRV")
25^3030930
"^DD",757.902,757.902,.01,0)
SDO/CONTRIBUTING AGENCY^RF^^0;1^K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",757.902,757.902,.01,1,0)
^.1
"^DD",757.902,757.902,.01,1,1,0)
757.902^B
"^DD",757.902,757.902,.01,1,1,1)
S ^LEXC(757.902,"B",$E(X,1,30),DA)=""
"^DD",757.902,757.902,.01,1,1,2)
K ^LEXC(757.902,"B",$E(X,1,30),DA)
"^DD",757.902,757.902,.01,1,2,0)
757.902^C^MUMPS
"^DD",757.902,757.902,.01,1,2,1)
S ^LEXC(757.902,"C",$$UP^XLFSTR(X),DA)=""
"^DD",757.902,757.902,.01,1,2,2)
K ^LEXC(757.902,"C",$$UP^XLFSTR(X),DA)
"^DD",757.902,757.902,.01,1,2,"%D",0)
^^3^3^3030424^
"^DD",757.902,757.902,.01,1,2,"%D",1,0)
^LEXC(757.901,"C",SDO,IEN) - Where SDO is the Standards
"^DD",757.902,757.902,.01,1,2,"%D",2,0)
Organization that submitted the change in uppercase format
"^DD",757.902,757.902,.01,1,2,"%D",3,0)
and IEN is the location in file 757.901 where it is stored.
"^DD",757.902,757.902,.01,1,2,"DT")
3030424
"^DD",757.902,757.902,.01,3)
Answer must be 3-60 characters in length
"^DD",757.902,757.902,.01,21,0)
^^2^2^3030213^
"^DD",757.902,757.902,.01,21,1,0)
This is the name of the SDO, VistA package or other agency which provided 
"^DD",757.902,757.902,.01,21,2,0)
the source change data file.
"^DD",757.902,757.902,.01,"DT")
3030213
"^DD",757.902,757.902,.02,0)
SDO SHORT NAME^F^^0;2^K:$L(X)>10!($L(X)<2) X
"^DD",757.902,757.902,.02,3)
Answer must be 2-10 characters in length
"^DD",757.902,757.902,.02,21,0)
^^2^2^3030320^
"^DD",757.902,757.902,.02,21,1,0)
This is an abbreviated format of the Standards Development Organizaiton 
"^DD",757.902,757.902,.02,21,2,0)
(SDO) name.
"^DD",757.902,757.902,.02,"DT")
3030320
"^DD",757.903,757.903,0)
FIELD^^1^3
"^DD",757.903,757.903,0,"DDA")
N
"^DD",757.903,757.903,0,"DT")
3030428
"^DD",757.903,757.903,0,"IX","AB",757.903,.01)

"^DD",757.903,757.903,0,"IX","ADF",757.90311,.02)

"^DD",757.903,757.903,0,"IX","AFD",757.90311,.02)

"^DD",757.903,757.903,0,"IX","B",757.903,.01)

"^DD",757.903,757.903,0,"IX","C",757.903,.02)

"^DD",757.903,757.903,0,"IX","SF",757.9031,.01)

"^DD",757.903,757.903,0,"NM","IMPORT GLOBAL")

"^DD",757.903,757.903,0,"VRPK")
LEX
"^DD",757.903,757.903,0,"VRRV")
25^3030930
"^DD",757.903,757.903,.01,0)
UPDATE^RP757.9'^LEXC(757.9,^0;1^Q
"^DD",757.903,757.903,.01,1,0)
^.1
"^DD",757.903,757.903,.01,1,1,0)
757.903^B
"^DD",757.903,757.903,.01,1,1,1)
S ^LEXC(757.903,"B",$E(X,1,30),DA)=""
"^DD",757.903,757.903,.01,1,1,2)
K ^LEXC(757.903,"B",$E(X,1,30),DA)
"^DD",757.903,757.903,.01,1,2,0)
757.903^AB^MUMPS
"^DD",757.903,757.903,.01,1,2,1)
S ^LEXC(757.903,"AB",+($P($G(^LEXC(757.9,+X,0)),"^",1)),+X,DA)=""
"^DD",757.903,757.903,.01,1,2,2)
K ^LEXC(757.903,"AB",+($P($G(^LEXC(757.9,+X,0)),"^",1)),+X,DA)
"^DD",757.903,757.903,.01,1,2,"DT")
3030501
"^DD",757.903,757.903,.01,3)

"^DD",757.903,757.903,.01,21,0)
^^1^1^3030425^^
"^DD",757.903,757.903,.01,21,1,0)
This is a pointer to the Change Log for the entry for an import global ^LEXM.  
"^DD",757.903,757.903,.01,"DT")
3030501
"^DD",757.903,757.903,.02,0)
IMPORT IDENTIFIER^RF^^0;2^K:$L(X)>30!($L(X)<2) X
"^DD",757.903,757.903,.02,1,0)
^.1
"^DD",757.903,757.903,.02,1,1,0)
757.903^C
"^DD",757.903,757.903,.02,1,1,1)
S ^LEXC(757.903,"C",$E(X,1,30),DA)=""
"^DD",757.903,757.903,.02,1,1,2)
K ^LEXC(757.903,"C",$E(X,1,30),DA)
"^DD",757.903,757.903,.02,1,1,"%D",0)
^^3^3^3030326^
"^DD",757.903,757.903,.02,1,1,"%D",1,0)
^LEXC(757.903,"C",ID,IEN) - Where ID is the identifier of the import 
"^DD",757.903,757.903,.02,1,1,"%D",2,0)
global (normally a KIDs Build name) and IEN is the internal entry
"^DD",757.903,757.903,.02,1,1,"%D",3,0)
number of the IMPORT GLOBAL PROCESSING file.
"^DD",757.903,757.903,.02,1,1,"DT")
3030326
"^DD",757.903,757.903,.02,3)
Answer must be 2-30 characters in length
"^DD",757.903,757.903,.02,21,0)
^^2^2^3030425^^
"^DD",757.903,757.903,.02,21,1,0)
This field identifies what was imported, usually this will be a 
"^DD",757.903,757.903,.02,21,2,0)
name of a KIDs build.
"^DD",757.903,757.903,.02,"DT")
3030425
"^DD",757.903,757.903,1,0)
CONTENTS^757.9031P^^1;0
"^DD",757.903,757.9031,0)
CONTENTS SUB-FIELD^^1^3
"^DD",757.903,757.9031,0,"DT")
3030428
"^DD",757.903,757.9031,0,"IX","B",757.9031,.01)

"^DD",757.903,757.9031,0,"NM","CONTENTS")

"^DD",757.903,757.9031,0,"UP")
757.903
"^DD",757.903,757.9031,.01,0)
FILE UPDATED^M*P1'^DIC(^0;1^S DIC("S")="I $P(X,""."",1)=""757""!(""^80^80.1^81^81.3^""[(""^""_X_""^""))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",757.903,757.9031,.01,1,0)
^.1
"^DD",757.903,757.9031,.01,1,1,0)
757.9031^B
"^DD",757.903,757.9031,.01,1,1,1)
S ^LEXC(757.903,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",757.903,757.9031,.01,1,1,2)
K ^LEXC(757.903,DA(1),1,"B",$E(X,1,30),DA)
"^DD",757.903,757.9031,.01,1,1,"%D",0)
^^4^4^3030326^
"^DD",757.903,757.9031,.01,1,1,"%D",1,0)
^LEXC(757.903,IEN,1,"B",FILE,CON) - Where IEN is the internal entry 
"^DD",757.903,757.9031,.01,1,1,"%D",2,0)
number of the IMPORT GLOBAL PROCESSING file, FILE is the number of the 
"^DD",757.903,757.9031,.01,1,1,"%D",3,0)
file imported, and CON is the internal entry number of the CONTENTS
"^DD",757.903,757.9031,.01,1,1,"%D",4,0)
multiple, containing files distributed by a given import global.
"^DD",757.903,757.9031,.01,1,2,0)
757.903^SF
"^DD",757.903,757.9031,.01,1,2,1)
S ^LEXC(757.903,"SF",$E(X,1,30),DA(1),DA)=""
"^DD",757.903,757.9031,.01,1,2,2)
K ^LEXC(757.903,"SF",$E(X,1,30),DA(1),DA)
"^DD",757.903,757.9031,.01,1,2,"%D",0)
^^4^4^3030326^
"^DD",757.903,757.9031,.01,1,2,"%D",1,0)
^LEXC(757.903,"SF",FILE,IEN,CON) - Where FILE is the file number of a 
"^DD",757.903,757.9031,.01,1,2,"%D",2,0)
primary system file being imported in the import global, IEN is the 
"^DD",757.903,757.9031,.01,1,2,"%D",3,0)
internal entry number in IMPORT GLOBAL PROCESSING file and CON is the 
"^DD",757.903,757.9031,.01,1,2,"%D",4,0)
internal entry number in the CONTENTS multiple.
"^DD",757.903,757.9031,.01,1,2,"DT")
3030326
"^DD",757.903,757.9031,.01,12)
Only Lexicon files or SDO files 80, 80.1, 81 and 81.3
"^DD",757.903,757.9031,.01,12.1)
S DIC("S")="I $P(X,""."",1)=""757""!(""^80^80.1^81^81.3^""[(""^""_X_""^""))"
"^DD",757.903,757.9031,.01,21,0)
^^2^2^3030326^
"^DD",757.903,757.9031,.01,21,1,0)
This is a pointer to a file that was updated by processing the import 
"^DD",757.903,757.9031,.01,21,2,0)
global.
"^DD",757.903,757.9031,.01,"DT")
3030428
"^DD",757.903,757.9031,.02,0)
FILE BUILD^F^^0;2^K:$L(X)>30!($L(X)<2) X
"^DD",757.903,757.9031,.02,3)
Answer must be 2-30 characters in length
"^DD",757.903,757.9031,.02,"DT")
3030428
"^DD",757.903,757.9031,1,0)
DATE AND TIME UPDATED^757.90311D^^1;0
"^DD",757.903,757.90311,0)
DATE AND TIME UPDATED SUB-FIELD^^.03^3
"^DD",757.903,757.90311,0,"DT")
3030426
"^DD",757.903,757.90311,0,"IX","B",757.90311,.01)

"^DD",757.903,757.90311,0,"NM","DATE AND TIME UPDATED")

"^DD",757.903,757.90311,0,"UP")
757.9031
"^DD",757.903,757.90311,.01,0)
DATE AND TIME STARTED^D^^0;1^S %DT="EST" D ^%DT S X=Y K:2960923>X X
"^DD",757.903,757.90311,.01,1,0)
^.1
"^DD",757.903,757.90311,.01,1,1,0)
757.90311^B
"^DD",757.903,757.90311,.01,1,1,1)
S ^LEXC(757.903,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",757.903,757.90311,.01,1,1,2)
K ^LEXC(757.903,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",757.903,757.90311,.01,3)
Type a date not earlier than September 23, 1996
"^DD",757.903,757.90311,.01,21,0)
^^2^2^3030426^^^
"^DD",757.903,757.90311,.01,21,1,0)
This is the date and time that the updated to a file was 
"^DD",757.903,757.90311,.01,21,2,0)
started using the ^LEXM import global.
"^DD",757.903,757.90311,.01,"DT")
3030426
"^DD",757.903,757.90311,.02,0)
DATE AND TIME COMPLETED^D^^0;2^S %DT="EST" D ^%DT S X=Y K:2960923>X X
"^DD",757.903,757.90311,.02,1,0)
^.1
"^DD",757.903,757.90311,.02,1,2,0)
757.903^AFD^MUMPS
"^DD",757.903,757.90311,.02,1,2,1)
N LEXF S LEXF=$P($G(^LEXC(757.903,DA(2),1,DA(1),0)),"^",1) Q:'$L(LEXF)  S ^LEXC(757.903,"AFD",LEXF,X,DA(2),DA(1),DA)=""
"^DD",757.903,757.90311,.02,1,2,2)
N LEXF S LEXF=$P($G(^LEXC(757.903,DA(2),1,DA(1),0)),"^",1) Q:'$L(LEXF)  K ^LEXC(757.903,"AFD",LEXF,X,DA(2),DA(1),DA)
"^DD",757.903,757.90311,.02,1,2,"%D",0)
^.101^6^6^3030426^^
"^DD",757.903,757.90311,.02,1,2,"%D",1,0)
^LEXC(757.903,"AFD",FILE,DATE,D2,D1,D0) - Where FILE is the 
"^DD",757.903,757.90311,.02,1,2,"%D",2,0)
file number that was updated by the import global ^LEXM and 
"^DD",757.903,757.90311,.02,1,2,"%D",3,0)
DATE is the date on which the updated occurred.  DO, D1 and 
"^DD",757.903,757.90311,.02,1,2,"%D",4,0)
D2 are the internal entry numbers where the record is stored
"^DD",757.903,757.90311,.02,1,2,"%D",5,0)
in the 'DATE AND TIME UPDATED' multiple of the 'CONTENTS'
"^DD",757.903,757.90311,.02,1,2,"%D",6,0)
multiple in the 'IMPORT GLOBAL PROCESSING' global.
"^DD",757.903,757.90311,.02,1,2,"DT")
3030426
"^DD",757.903,757.90311,.02,1,3,0)
757.903^ADF^MUMPS
"^DD",757.903,757.90311,.02,1,3,1)
N LEXF S LEXF=$P($G(^LEXC(757.903,DA(2),1,DA(1),0)),"^",1) Q:'$L(LEXF)  S ^LEXC(757.903,"ADF",X,LEXF,DA(2),DA(1),DA)=""
"^DD",757.903,757.90311,.02,1,3,2)
N LEXF S LEXF=$P($G(^LEXC(757.903,DA(2),1,DA(1),0)),"^",1) Q:'$L(LEXF)  K ^LEXC(757.903,"ADF",X,LEXF,DA(2),DA(1),DA)
"^DD",757.903,757.90311,.02,1,3,"%D",0)
^^6^6^3030426^
"^DD",757.903,757.90311,.02,1,3,"%D",1,0)
^LEXC(757.903,"ADF",DATE,FILE,D2,D1,D0) - Where DATE is the 
"^DD",757.903,757.90311,.02,1,3,"%D",2,0)
date on which the updated occurred and FILE is the file number
"^DD",757.903,757.90311,.02,1,3,"%D",3,0)
that was updated by the import global ^LEXM.  DO, D1 and 
"^DD",757.903,757.90311,.02,1,3,"%D",4,0)
D2 are the internal entry numbers where the record is stored
"^DD",757.903,757.90311,.02,1,3,"%D",5,0)
in the 'DATE AND TIME UPDATED' multiple of the 'CONTENTS'
"^DD",757.903,757.90311,.02,1,3,"%D",6,0)
multiple in the 'IMPORT GLOBAL PROCESSING' global.
"^DD",757.903,757.90311,.02,1,3,"DT")
3030426
"^DD",757.903,757.90311,.02,3)
Type a date not earlier than September 23, 1996
"^DD",757.903,757.90311,.02,21,0)
^^2^2^3030426^
"^DD",757.903,757.90311,.02,21,1,0)
This is the date and time that the updated to a file was 
"^DD",757.903,757.90311,.02,21,2,0)
completed using the ^LEXM import global.
"^DD",757.903,757.90311,.02,"DT")
3030426
"^DD",757.903,757.90311,.03,0)
ELAPSED TIME^F^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",757.903,757.90311,.03,3)
Answer must be 1-10 characters in length
"^DD",757.903,757.90311,.03,21,0)
^^2^2^3030426^
"^DD",757.903,757.90311,.03,21,1,0)
This is the time that elpased while updating a file from the
"^DD",757.903,757.90311,.03,21,2,0)
^LEXM global.
"^DD",757.903,757.90311,.03,"DT")
3030426
"^DD",757.91,757.91,0)
FIELD^^.15^21
"^DD",757.91,757.91,0,"DDA")
N
"^DD",757.91,757.91,0,"DT")
3030827
"^DD",757.91,757.91,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^LEX(757.03,+$P(^(0),U,2),0))#2:$P(^(0),U,2),1:""),C=$P(^DD(757.03,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",757.91,757.91,0,"ID",.05)
W "   ",$$FMTE^DILIBF($P(^(0),U,5),5)
"^DD",757.91,757.91,0,"IX","ACT",757.91,.06)

"^DD",757.91,757.91,0,"IX","B",757.91,.01)

"^DD",757.91,757.91,0,"IX","BA",757.91,.01)

"^DD",757.91,757.91,0,"NM","CHANGE FILE")

"^DD",757.91,757.91,0,"VRPK")
LEX
"^DD",757.91,757.91,0,"VRRV")
25^3030930
"^DD",757.91,757.91,.01,0)
CODE^RF^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",757.91,757.91,.01,1,0)
^.1
"^DD",757.91,757.91,.01,1,1,0)
757.91^B
"^DD",757.91,757.91,.01,1,1,1)
S ^LEXC(757.91,"B",$E(X,1,30),DA)=""
"^DD",757.91,757.91,.01,1,1,2)
K ^LEXC(757.91,"B",$E(X,1,30),DA)
"^DD",757.91,757.91,.01,1,2,0)
757.91^BA^MUMPS
"^DD",757.91,757.91,.01,1,2,1)
S ^LEXC(757.91,"BA",(X_" "),DA)=""
"^DD",757.91,757.91,.01,1,2,2)
K ^LEXC(757.91,"BA",(X_" "),DA)
"^DD",757.91,757.91,.01,1,2,"%D",0)
^^1^1^3030220^
"^DD",757.91,757.91,.01,1,2,"%D",1,0)
Non-canonic cross-reference on CODE
"^DD",757.91,757.91,.01,1,2,"DT")
3030220
"^DD",757.91,757.91,.01,3)
Answer must be 1-10 characters in length
"^DD",757.91,757.91,.01,21,0)
^^1^1^3030213^
"^DD",757.91,757.91,.01,21,1,0)
Classification Code from a Standards Development Organization (SDO).
"^DD",757.91,757.91,.01,"DT")
3030226
"^DD",757.91,757.91,.02,0)
CLASSIFICATION SYSTEM^P757.03^LEX(757.03,^0;2^Q
"^DD",757.91,757.91,.02,21,0)
^^2^2^3030213^^
"^DD",757.91,757.91,.02,21,1,0)
This is the name of the classification system for which the code belongs, 
"^DD",757.91,757.91,.02,21,2,0)
i.e., ICD-9-CM, CPT-4, etc.
"^DD",757.91,757.91,.02,"DT")
3030213
"^DD",757.91,757.91,.03,0)
SDO SHORT TEXT^F^^0;3^K:$L(X)>50!($L(X)<2) X
"^DD",757.91,757.91,.03,3)
Answer must be 2-50 characters in length
"^DD",757.91,757.91,.03,21,0)
^^4^4^3030213^
"^DD",757.91,757.91,.03,21,1,0)
Short Text provided by the SDO:
"^DD",757.91,757.91,.03,21,2,0)
  File 80, field 3, Diagnosis, 2-30 characters, condensed
"^DD",757.91,757.91,.03,21,3,0)
  File 80.1, field 4, Operation/Procedure, 2-50 characters, condensed
"^DD",757.91,757.91,.03,21,4,0)
  File 81, field 2, Short Name, 1-28 characters, condensed
"^DD",757.91,757.91,.03,"DT")
3030213
"^DD",757.91,757.91,.04,0)
CHANGE/VERSIONING DATE^RP757.9^LEXC(757.9,^0;4^Q
"^DD",757.91,757.91,.04,21,0)
^.001^2^2^3030214^^^^
"^DD",757.91,757.91,.04,21,1,0)
This date reflects the date the Standards Development Organization (SDO) or 
"^DD",757.91,757.91,.04,21,2,0)
other contributing agency published the change.
"^DD",757.91,757.91,.04,"DT")
3030226
"^DD",757.91,757.91,.05,0)
EFFECTIVE DATE^RD^^0;5^S %DT="EX" D ^%DT S X=Y K:2781001>X X
"^DD",757.91,757.91,.05,3)
TYPE A DATE NOT EARLIER THAN OCT 01, 1978
"^DD",757.91,757.91,.05,21,0)
^^2^2^3030827^^^
"^DD",757.91,757.91,.05,21,1,0)
This is the date that the status (active/inactive) is effective.  It may or
"^DD",757.91,757.91,.05,21,2,0)
may not be the same as the date the change was published.
"^DD",757.91,757.91,.05,"DT")
3030827
"^DD",757.91,757.91,.06,0)
STATUS^RS^1:ACTIVE;0:INACTIVE;^0;6^Q
"^DD",757.91,757.91,.06,1,0)
^.1
"^DD",757.91,757.91,.06,1,1,0)
757.91^ACT^MUMPS
"^DD",757.91,757.91,.06,1,1,1)
D SACT^LEXNDX7
"^DD",757.91,757.91,.06,1,1,2)
D KACT^LEXNDX7
"^DD",757.91,757.91,.06,1,1,"%D",0)
^.101^10^10^3030225^^
"^DD",757.91,757.91,.06,1,1,"%D",1,0)
Creates two indexes, one of active codes (ACT) and one of inactive codes 
"^DD",757.91,757.91,.06,1,1,"%D",2,0)
(AIN).
"^DD",757.91,757.91,.06,1,1,"%D",3,0)

"^DD",757.91,757.91,.06,1,1,"%D",4,0)
^LEXC(757.91,"ACT",(CODE_" "),EFFDATE,IEN)=""
"^DD",757.91,757.91,.06,1,1,"%D",5,0)
^LEXC(757.91,"AIN",(CODE_" "),EFFDATE,IEN)=""
"^DD",757.91,757.91,.06,1,1,"%D",6,0)

"^DD",757.91,757.91,.06,1,1,"%D",7,0)
Where CODE is either an ICD-9-CM Diagnosis, ICD-9 Procedure or CPT-4 code, 
"^DD",757.91,757.91,.06,1,1,"%D",8,0)
EFFDATE is the effective date that it became either active or inactive, and 
"^DD",757.91,757.91,.06,1,1,"%D",9,0)
IEN is the location in the CLASSIFICATION CHANGE FILE #757.91 where the 
"^DD",757.91,757.91,.06,1,1,"%D",10,0)
entry can be found.
"^DD",757.91,757.91,.06,1,1,"DT")
3030225
"^DD",757.91,757.91,.06,21,0)
^^2^2^3030213^
"^DD",757.91,757.91,.06,21,1,0)
This flag indicates whether the code should be used as of the EFFECTIVE 
"^DD",757.91,757.91,.06,21,2,0)
DATE.  The STATUS and EFFECTIVE DATE make up the Activation History.
"^DD",757.91,757.91,.06,"DT")
3030226
"^DD",757.91,757.91,.07,0)
PREVIOUS EFFECTIVE DATE^D^^0;7^S %DT="EX" D ^%DT S X=Y K:2781001>X X
"^DD",757.91,757.91,.07,3)
TYPE A DATE NOT EARLIER THAN OCT 01, 1978
"^DD",757.91,757.91,.07,21,0)
^^2^2^3030827^
"^DD",757.91,757.91,.07,21,1,0)
This is the date that the status (active/inactive) was effective prior to 
"^DD",757.91,757.91,.07,21,2,0)
the update.
"^DD",757.91,757.91,.07,"DT")
3030827
"^DD",757.91,757.91,.08,0)
PREVIOUS STATUS^S^1:ACTIVE;0:INACTIVE;^0;8^Q
"^DD",757.91,757.91,.08,21,0)
^^3^3^3030827^
"^DD",757.91,757.91,.08,21,1,0)
This is the status of the code/text prior to the update.  This flag indicates
"^DD",757.91,757.91,.08,21,2,0)
whether the code should be used as of the EFFECTIVE DATE.  The STATUS 
"^DD",757.91,757.91,.08,21,3,0)
and EFFECTIVE DATE make up the Activation History.  
"^DD",757.91,757.91,.08,"DT")
3030827
"^DD",757.91,757.91,.09,0)
REASON FOR STATUS^S^1:ACTIVE - NEW;11:ACTIVE - EDIT;0:INACTIVE - REMOVE;^0;9^Q
"^DD",757.91,757.91,.09,21,0)
^^1^1^3030827^
"^DD",757.91,757.91,.09,21,1,0)
This is the reason for the STATUS change.  
"^DD",757.91,757.91,.09,"DT")
3030827
"^DD",757.91,757.91,.1,0)
PREVIOUS CODE^F^^0;10^K:$L(X)>10!($L(X)<2) X
"^DD",757.91,757.91,.1,3)
Answer must be 2-10 characters in length
"^DD",757.91,757.91,.1,21,0)
^^2^2^3030827^
"^DD",757.91,757.91,.1,21,1,0)
If this is not a new code, then this field will contain the previous code.  
"^DD",757.91,757.91,.1,21,2,0)
This field will often be the same as the CODE field.
"^DD",757.91,757.91,.1,"DT")
3030827
"^DD",757.91,757.91,.11,0)
PREVIOUS SHORT TEXT^F^^0;11^K:$L(X)>50!($L(X)<2) X
"^DD",757.91,757.91,.11,3)
Answer must be 2-50 characters in length
"^DD",757.91,757.91,.11,21,0)
^^7^7^3030827^
"^DD",757.91,757.91,.11,21,1,0)
If this is not a new entry, then this field will contain the previous text
"^DD",757.91,757.91,.11,21,2,0)
provided by the SDO.  This field will often be the same as the SDO SHORT TEXT.
"^DD",757.91,757.91,.11,21,3,0)
The PREVIOSU SHORT TEXT is in the following formats: 
"^DD",757.91,757.91,.11,21,4,0)
                                  
"^DD",757.91,757.91,.11,21,5,0)
   File 80, field 3, Diagnosis, 2-30 characters, condensed 
"^DD",757.91,757.91,.11,21,6,0)
   File 80.1, field 4, Operation/Procedure, 2-50 characters, condensed 
"^DD",757.91,757.91,.11,21,7,0)
   File 81, field 2, Short Name, 1-28 characters, condensed 
"^DD",757.91,757.91,.11,"DT")
3030827
"^DD",757.91,757.91,.12,0)
LEXICON ENTRY^P757.01'^LEX(757.01,^0;12^Q
"^DD",757.91,757.91,.12,21,0)
^^2^2^3030827^
"^DD",757.91,757.91,.12,21,1,0)
This is the Internal Entry Number of the Expression in the Lexicon that 
"^DD",757.91,757.91,.12,21,2,0)
represents the code.  
"^DD",757.91,757.91,.12,"DT")
3030827
"^DD",757.91,757.91,.13,0)
ICD ENTRY^P80'^ICD9(^0;13^Q
"^DD",757.91,757.91,.13,21,0)
^^1^1^3030827^
"^DD",757.91,757.91,.13,21,1,0)
This is the Internal Entry Number of the ICD-9-CM Diagnosis file #80.
"^DD",757.91,757.91,.13,"DT")
3030827
"^DD",757.91,757.91,.14,0)
ICP ENTRY^P80.1'^ICD0(^0;14^Q
"^DD",757.91,757.91,.14,21,0)
^^2^2^3030827^
"^DD",757.91,757.91,.14,21,1,0)
This is the Internal Entry Number of the ICD-9-CM Procedure/Operation file
"^DD",757.91,757.91,.14,21,2,0)
#80.1 
"^DD",757.91,757.91,.14,"DT")
3030827
"^DD",757.91,757.91,.15,0)
CPT ENTRY^P81'^ICPT(^0;15^Q
"^DD",757.91,757.91,.15,21,0)
^^1^1^3030827^
"^DD",757.91,757.91,.15,21,1,0)
This is the Internal Entry Number of the CPT-4 Procedure file #81.  
"^DD",757.91,757.91,.15,"DT")
3030827
"^DD",757.91,757.91,1,0)
SHORT DESCRIPTION^F^^1;1^K:$L(X)>245!($L(X)<2) X
"^DD",757.91,757.91,1,3)
Answer must be 2-245 characters in length
"^DD",757.91,757.91,1,21,0)
^^2^2^3030826^^^
"^DD",757.91,757.91,1,21,1,0)
This is the description text (short version) 2-245 characters normally 
"^DD",757.91,757.91,1,21,2,0)
associated with the ICD Classification System in files 80 and/or 80.1.
"^DD",757.91,757.91,1,"DT")
3030826
"^DD",757.91,757.91,2,0)
PREVIOUS SHORT DESCRIPTION^F^^2;1^K:$L(X)>245!($L(X)<2) X
"^DD",757.91,757.91,2,3)
Answer must be 2-245 characters in length
"^DD",757.91,757.91,2,21,0)
^^3^3^3030826^^
"^DD",757.91,757.91,2,21,1,0)
This is the previous description text (short version) 2-245 characters 
"^DD",757.91,757.91,2,21,2,0)
normally associated with the ICD Classification System in files 80 and/or
"^DD",757.91,757.91,2,21,3,0)
80.1.  It is populated when it differs from the current description text.
"^DD",757.91,757.91,2,"DT")
3030826
"^DD",757.91,757.91,3,0)
LONG DESCRIPTION^757.9103^^3;0
"^DD",757.91,757.91,4,0)
PREVIOUS LONG DESCRIPTION^757.9104^^4;0
"^DD",757.91,757.91,5,0)
LEXICON DISPLAY TEXT^F^^5;1^K:$L(X)>240!($L(X)<2) X
"^DD",757.91,757.91,5,3)
Answer must be 2-240 characters in length
"^DD",757.91,757.91,5,21,0)
^^4^4^3030826^
"^DD",757.91,757.91,5,21,1,0)
This is the text which will be used to represent the expression in the 
"^DD",757.91,757.91,5,21,2,0)
Lexicon file 757.01.  It will be of mixed case and plain language.  
"^DD",757.91,757.91,5,21,3,0)
Abbreviations will be expanded where possible (except in the most 
"^DD",757.91,757.91,5,21,4,0)
commonly used abbreviations).  It is supplied by Lexical Services.
"^DD",757.91,757.91,5,"DT")
3030826
"^DD",757.91,757.91,6,0)
LEXICON DEFINITION^757.9106^^6;0
"^DD",757.91,757.9103,0)
LONG DESCRIPTION SUB-FIELD^^.01^1
"^DD",757.91,757.9103,0,"DT")
3030826
"^DD",757.91,757.9103,0,"NM","LONG DESCRIPTION")

"^DD",757.91,757.9103,0,"UP")
757.91
"^DD",757.91,757.9103,.01,0)
LONG DESCRIPTION^W^^0;1
"^DD",757.91,757.9103,.01,21,0)
^^3^3^3030826^
"^DD",757.91,757.9103,.01,21,1,0)
This is the description text (long version) stored as a word processing 
"^DD",757.91,757.9103,.01,21,2,0)
field, and contains the text normally associated with the CPT Classification
"^DD",757.91,757.9103,.01,21,3,0)
System in file 81.
"^DD",757.91,757.9103,.01,"DT")
3030826
"^DD",757.91,757.9104,0)
PREVIOUS LONG DESCRIPTION SUB-FIELD^^.01^1
"^DD",757.91,757.9104,0,"DT")
3030826
"^DD",757.91,757.9104,0,"NM","PREVIOUS LONG DESCRIPTION")

"^DD",757.91,757.9104,0,"UP")
757.91
"^DD",757.91,757.9104,.01,0)
PREVIOUS LONG DESCRIPTION^W^^0;1
"^DD",757.91,757.9104,.01,21,0)
^^4^4^3030826^^
"^DD",757.91,757.9104,.01,21,1,0)
This is the previous description text (long version) stored as a word 
"^DD",757.91,757.9104,.01,21,2,0)
processing field, and contains the text normally associated with the CPT
"^DD",757.91,757.9104,.01,21,3,0)
Classification System in file 81.  It is populated when it differs from the 
"^DD",757.91,757.9104,.01,21,4,0)
current long description text.
"^DD",757.91,757.9104,.01,"DT")
3030826
"^DD",757.91,757.9106,0)
LEXICON DEFINITION SUB-FIELD^^.01^1
"^DD",757.91,757.9106,0,"DT")
3030826
"^DD",757.91,757.9106,0,"NM","LEXICON DEFINITION")

"^DD",757.91,757.9106,0,"UP")
757.91
"^DD",757.91,757.9106,.01,0)
LEXICON DEFINITION^W^^0;1
"^DD",757.91,757.9106,.01,21,0)
^^4^4^3030826^
"^DD",757.91,757.9106,.01,21,1,0)
Definition of an expression when available.  It differs from the SDO 
"^DD",757.91,757.9106,.01,21,2,0)
descriptions in that it is not a re-wording or expansion of the short text, 
"^DD",757.91,757.9106,.01,21,3,0)
rather it is a full definition of the diagnosis/procedure concept.  It is 
"^DD",757.91,757.9106,.01,21,4,0)
normally provided by either Lexical Services or other Lexical Source.
"^DD",757.91,757.9106,.01,"DT")
3030826
"^DIC",757.02,757.02,0)
CODES^757.02IP
"^DIC",757.02,757.02,0,"GL")
^LEX(757.02,
"^DIC",757.02,757.02,"%D",0)
^^3^3^2981006^^^^
"^DIC",757.02,757.02,"%D",1,0)
This file contains classification codes from multiple classification
"^DIC",757.02,757.02,"%D",2,0)
systems (i.e., ICD, CPT, DSM, SNOMED, Title 38, NANDA, NIC, COSTAR, COSTART,
"^DIC",757.02,757.02,"%D",3,0)
CRISP, etc.).
"^DIC",757.02,"B","CODES",757.02)

"^DIC",757.03,757.03,0)
CODING SYSTEMS^757.03I
"^DIC",757.03,757.03,0,"GL")
^LEX(757.03,
"^DIC",757.03,757.03,"%D",0)
^^2^2^2970704^^^^
"^DIC",757.03,757.03,"%D",1,0)
This file contains the descriptive titles for medical terminology and
"^DIC",757.03,757.03,"%D",2,0)
diagnosis and classification systems.
"^DIC",757.03,"B","CODING SYSTEMS",757.03)

"^DIC",757.2,757.2,0)
SUBSET DEFINITIONS^757.2
"^DIC",757.2,757.2,0,"GL")
^LEXT(757.2,
"^DIC",757.2,757.2,"%D",0)
^^6^6^2970704^^^^
"^DIC",757.2,757.2,"%D",1,0)
This file contains the definitions for vocabulary subsets in the Clinical
"^DIC",757.2,757.2,"%D",2,0)
Lexicon, application definitions and user defaults (by application).
"^DIC",757.2,757.2,"%D",3,0)
These vocabularies (defined primarily by the search filter and the index
"^DIC",757.2,757.2,"%D",4,0)
to be used while conducting searches) may be used during look-up in lieu
"^DIC",757.2,757.2,"%D",5,0)
of the main expression file (if indicated by either the application
"^DIC",757.2,757.2,"%D",6,0)
definition or the user's preferences).
"^DIC",757.2,"B","SUBSET DEFINITIONS",757.2)

"^DIC",757.9,757.9,0)
CHANGE LOG^757.9
"^DIC",757.9,757.9,0,"GL")
^LEXC(757.9,
"^DIC",757.9,757.9,"%",0)
^1.005^^0
"^DIC",757.9,757.9,"%D",0)
^^2^2^3030213^
"^DIC",757.9,757.9,"%D",1,0)
This is a log of all changes by date provided by a Standards Development 
"^DIC",757.9,757.9,"%D",2,0)
Organization (SDO) or other contributing agency.
"^DIC",757.9,"B","CHANGE LOG",757.9)

"^DIC",757.901,757.901,0)
CHANGE TYPE^757.901
"^DIC",757.901,757.901,0,"GL")
^LEXC(757.901,
"^DIC",757.901,757.901,"%",0)
^1.005^^0
"^DIC",757.901,757.901,"%D",0)
^^2^2^3030213^
"^DIC",757.901,757.901,"%D",1,0)
This is a listing of the different types of change files provided to Lexical 
"^DIC",757.901,757.901,"%D",2,0)
Services (i.e., ICD, CPT, etc).
"^DIC",757.901,"B","CHANGE TYPE",757.901)

"^DIC",757.902,757.902,0)
CONTRIBUTING AGENCY^757.902
"^DIC",757.902,757.902,0,"GL")
^LEXC(757.902,
"^DIC",757.902,757.902,"%",0)
^1.005^^0
"^DIC",757.902,757.902,"%D",0)
^^2^2^3030213^^
"^DIC",757.902,757.902,"%D",1,0)
This is a list of the Standards Development Organizations (SDO) or other 
"^DIC",757.902,757.902,"%D",2,0)
agencies that contribute changes to Lexical services.
"^DIC",757.902,"B","CONTRIBUTING AGENCY",757.902)

"^DIC",757.903,757.903,0)
IMPORT GLOBAL^757.903
"^DIC",757.903,757.903,0,"GL")
^LEXC(757.903,
"^DIC",757.903,757.903,"%",0)
^1.005^^0
"^DIC",757.903,757.903,"%D",0)
^^3^3^3030428^
"^DIC",757.903,757.903,"%D",1,0)
This file contains the status of the import global ^LEXM, including the 
"^DIC",757.903,757.903,"%D",2,0)
build contained in the global, the files imported, and the start and stop 
"^DIC",757.903,757.903,"%D",3,0)
times of the data import.
"^DIC",757.903,"B","IMPORT GLOBAL",757.903)

"^DIC",757.91,757.91,0)
CHANGE FILE^757.91
"^DIC",757.91,757.91,0,"GL")
^LEXC(757.91,
"^DIC",757.91,757.91,"%",0)
^1.005^^0
"^DIC",757.91,757.91,"%D",0)
^^2^2^3030213^
"^DIC",757.91,757.91,"%D",1,0)
This file contains data extracted from a change file provided by a Standards 
"^DIC",757.91,757.91,"%D",2,0)
Development Organization (SDO) or other contributing agency.
"^DIC",757.91,"B","CHANGE FILE",757.91)

**INSTALL NAME**
ICD*18.0*6
"BLD",3232,0)
ICD*18.0*6^DRG GROUPER^0^3030910^y
"BLD",3232,1,0)
^^2^2^3030521^^
"BLD",3232,1,1,0)
Please see the National Patch Module for details of the enhancements 
"BLD",3232,1,2,0)
included in this patch.
"BLD",3232,4,0)
^9.64PA^80.1^2
"BLD",3232,4,80,0)
80
"BLD",3232,4,80,2,0)
^9.641^80.066^2
"BLD",3232,4,80,2,80,0)
ICD DIAGNOSIS  (File-top level)
"BLD",3232,4,80,2,80,1,0)
^9.6411^16^4
"BLD",3232,4,80,2,80,1,.01,0)
CODE NUMBER
"BLD",3232,4,80,2,80,1,14,0)
AGE LOW
"BLD",3232,4,80,2,80,1,15,0)
AGE HIGH
"BLD",3232,4,80,2,80,1,16,0)
ACTIVATION DATE
"BLD",3232,4,80,2,80.066,0)
EFFECTIVE DATE  (sub-file)
"BLD",3232,4,80,2,80.066,1,0)
^9.6411^^0
"BLD",3232,4,80,222)
y^y^p^^^^n
"BLD",3232,4,80.1,0)
80.1
"BLD",3232,4,80.1,2,0)
^9.641^80.166^2
"BLD",3232,4,80.1,2,80.1,0)
ICD OPERATION/PROCEDURE  (File-top level)
"BLD",3232,4,80.1,2,80.1,1,0)
^9.6411^12^2
"BLD",3232,4,80.1,2,80.1,1,.01,0)
CODE NUMBER
"BLD",3232,4,80.1,2,80.1,1,12,0)
ACTIVATION DATE
"BLD",3232,4,80.1,2,80.166,0)
EFFECTIVE DATE  (sub-file)
"BLD",3232,4,80.1,2,80.166,1,0)
^9.6411^^0
"BLD",3232,4,80.1,222)
y^y^p^^^^n
"BLD",3232,4,"APDD",80,80)

"BLD",3232,4,"APDD",80,80,.01)

"BLD",3232,4,"APDD",80,80,14)

"BLD",3232,4,"APDD",80,80,15)

"BLD",3232,4,"APDD",80,80,16)

"BLD",3232,4,"APDD",80,80.066)

"BLD",3232,4,"APDD",80.1,80.1)

"BLD",3232,4,"APDD",80.1,80.1,.01)

"BLD",3232,4,"APDD",80.1,80.1,12)

"BLD",3232,4,"APDD",80.1,80.166)

"BLD",3232,4,"B",80,80)

"BLD",3232,4,"B",80.1,80.1)

"BLD",3232,"ABPKG")
n
"BLD",3232,"INI")

"BLD",3232,"INIT")
POST^ICD186E
"BLD",3232,"KRN",0)
^9.67PA^19^17
"BLD",3232,"KRN",.4,0)
.4
"BLD",3232,"KRN",.401,0)
.401
"BLD",3232,"KRN",.402,0)
.402
"BLD",3232,"KRN",.403,0)
.403
"BLD",3232,"KRN",.5,0)
.5
"BLD",3232,"KRN",.84,0)
.84
"BLD",3232,"KRN",3.6,0)
3.6
"BLD",3232,"KRN",3.8,0)
3.8
"BLD",3232,"KRN",9.2,0)
9.2
"BLD",3232,"KRN",9.8,0)
9.8
"BLD",3232,"KRN",9.8,"NM",0)
^9.68A^9^7
"BLD",3232,"KRN",9.8,"NM",1,0)
ICD0IDX^^0^B11419052
"BLD",3232,"KRN",9.8,"NM",2,0)
ICD186E^^0^B9617480
"BLD",3232,"KRN",9.8,"NM",4,0)
ICD9IDX^^0^B11648583
"BLD",3232,"KRN",9.8,"NM",5,0)
ICDAPIU^^0^B27021322
"BLD",3232,"KRN",9.8,"NM",6,0)
ICDCODE^^0^B26064804
"BLD",3232,"KRN",9.8,"NM",8,0)
ICDUPDT^^0^B2326652
"BLD",3232,"KRN",9.8,"NM",9,0)
ICDSUPT^^0^B4162240
"BLD",3232,"KRN",9.8,"NM","B","ICD0IDX",1)

"BLD",3232,"KRN",9.8,"NM","B","ICD186E",2)

"BLD",3232,"KRN",9.8,"NM","B","ICD9IDX",4)

"BLD",3232,"KRN",9.8,"NM","B","ICDAPIU",5)

"BLD",3232,"KRN",9.8,"NM","B","ICDCODE",6)

"BLD",3232,"KRN",9.8,"NM","B","ICDSUPT",9)

"BLD",3232,"KRN",9.8,"NM","B","ICDUPDT",8)

"BLD",3232,"KRN",19,0)
19
"BLD",3232,"KRN",19.1,0)
19.1
"BLD",3232,"KRN",101,0)
101
"BLD",3232,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",3232,"KRN",101,"NM",1,0)
ICD CODE UPDATE EVENT^^0
"BLD",3232,"KRN",101,"NM","B","ICD CODE UPDATE EVENT",1)

"BLD",3232,"KRN",409.61,0)
409.61
"BLD",3232,"KRN",771,0)
771
"BLD",3232,"KRN",870,0)
870
"BLD",3232,"KRN",8994,0)
8994
"BLD",3232,"KRN","B",.4,.4)

"BLD",3232,"KRN","B",.401,.401)

"BLD",3232,"KRN","B",.402,.402)

"BLD",3232,"KRN","B",.403,.403)

"BLD",3232,"KRN","B",.5,.5)

"BLD",3232,"KRN","B",.84,.84)

"BLD",3232,"KRN","B",3.6,3.6)

"BLD",3232,"KRN","B",3.8,3.8)

"BLD",3232,"KRN","B",9.2,9.2)

"BLD",3232,"KRN","B",9.8,9.8)

"BLD",3232,"KRN","B",19,19)

"BLD",3232,"KRN","B",19.1,19.1)

"BLD",3232,"KRN","B",101,101)

"BLD",3232,"KRN","B",409.61,409.61)

"BLD",3232,"KRN","B",771,771)

"BLD",3232,"KRN","B",870,870)

"BLD",3232,"KRN","B",8994,8994)

"BLD",3232,"PRE")
ICD186E
"BLD",3232,"PRET")

"BLD",3232,"QUES",0)
^9.62^^
"BLD",3232,"REQB",0)
^9.611^^
"FIA",80)
ICD DIAGNOSIS
"FIA",80,0)
^ICD9(
"FIA",80,0,0)
80OI
"FIA",80,0,1)
y^y^p^^^^n
"FIA",80,0,10)

"FIA",80,0,11)

"FIA",80,0,"RLRO")

"FIA",80,0,"VR")
18.0^ICD
"FIA",80,80)
1
"FIA",80,80,.01)

"FIA",80,80,14)

"FIA",80,80,15)

"FIA",80,80,16)

"FIA",80,80,66)

"FIA",80,80.066)
0
"FIA",80.1)
ICD OPERATION/PROCEDURE
"FIA",80.1,0)
^ICD0(
"FIA",80.1,0,0)
80.1OI
"FIA",80.1,0,1)
y^y^p^^^^n
"FIA",80.1,0,10)

"FIA",80.1,0,11)

"FIA",80.1,0,"RLRO")

"FIA",80.1,0,"VR")
18.0^ICD
"FIA",80.1,80.1)
1
"FIA",80.1,80.1,.01)

"FIA",80.1,80.1,12)

"FIA",80.1,80.1,66)

"FIA",80.1,80.166)
0
"INIT")
POST^ICD186E
"KRN",101,5932,-1)
0^1
"KRN",101,5932,0)
ICD CODE UPDATE EVENT^ICD Code Update^^X^^^^^^^^
"KRN",101,5932,1,0)
^101.06^2^2^3030421^^^
"KRN",101,5932,1,1,0)
Protocol Event for Notifying Applications that an
"KRN",101,5932,1,2,0)
update to File #80 or File #80.1 has occurred.
"KRN",101,5932,20)
D ^ICDUPDT
"KRN",101,5932,99)
59380,54556
"MBREQ")
1
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"PKG",283,-1)
1^1
"PKG",283,0)
DRG GROUPER^ICD^DRG GROUPER^^^3010710
"PKG",283,20,0)
^9.402P^^
"PKG",283,22,0)
^9.49I^1^1
"PKG",283,22,1,0)
18.0^3001024^3001114^1119
"PKG",283,22,1,"PAH",1,0)
6^3030910^1118
"PKG",283,22,1,"PAH",1,1,0)
^^2^2^3030910
"PKG",283,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details of the enhancements 
"PKG",283,22,1,"PAH",1,1,2,0)
included in this patch.
"PRE")
ICD186E
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","ICD0IDX")
0^1^B11419052
"RTN","ICD0IDX",1,0)
ICD0IDX ;DLS/DEK - MUMPS Cross Reference Routine for History ; 04/28/2003
"RTN","ICD0IDX",2,0)
 ;;18.0;DRG Grouper;**6**;Oct 20, 2000
"RTN","ICD0IDX",3,0)
 ;
"RTN","ICD0IDX",4,0)
 ; ICDCOD          ICD Code from Global
"RTN","ICD0IDX",5,0)
 ; ICDCODX         ICD Code passed in (X)
"RTN","ICD0IDX",6,0)
 ; ICDEFF          Effective Date
"RTN","ICD0IDX",7,0)
 ; ICDSTA          Status
"RTN","ICD0IDX",8,0)
 ; ICDNOD          Global Node (to reduce Global hits)
"RTN","ICD0IDX",9,0)
 ; DA              ien file 80.1 or 80.166
"RTN","ICD0IDX",10,0)
 ; ICDIEN,DA(1)    ien of file 80.1 
"RTN","ICD0IDX",11,0)
 ; ICDHIS          ien of file 80.166
"RTN","ICD0IDX",12,0)
 ; X               Data passed in to be indexed
"RTN","ICD0IDX",13,0)
 ;                 
"RTN","ICD0IDX",14,0)
 ; Set and Kill Activation History
"RTN","ICD0IDX",15,0)
 ;                 
"RTN","ICD0IDX",16,0)
 ;   File 80.1, field .01
"RTN","ICD0IDX",17,0)
SAHC ; Set new value when ICD Code is Edited
"RTN","ICD0IDX",18,0)
 ; ^DD(80.1,.01,1,D0,1) = D SAHC^ICD0IDX
"RTN","ICD0IDX",19,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDCODX,ICDHIS,ICDIEN
"RTN","ICD0IDX",20,0)
 S ICDCODX=$G(X) Q:'$L(ICDCODX)  S ICDIEN=+($G(DA)) Q:+ICDIEN'>0  Q:'$D(^ICD0(+ICDIEN,66))
"RTN","ICD0IDX",21,0)
 S ICDHIS=0 F  S ICDHIS=$O(^ICD0(+ICDIEN,66,ICDHIS)) Q:+ICDHIS=0  D
"RTN","ICD0IDX",22,0)
 . N DA,X S DA=+ICDHIS,DA(1)=+ICDIEN D HDC
"RTN","ICD0IDX",23,0)
 . S ICDCOD=ICDCODX Q:'$L($G(ICDCOD))
"RTN","ICD0IDX",24,0)
 . Q:'$L($G(ICDEFF))  Q:'$L($G(ICDSTA))  D SHIS
"RTN","ICD0IDX",25,0)
 Q
"RTN","ICD0IDX",26,0)
KAHC ; Kill old value when ICD Code is Edited
"RTN","ICD0IDX",27,0)
 ; ^DD(80.1,.01,1,D0,2) = D KAHC^ICD0IDX
"RTN","ICD0IDX",28,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDCODX,ICDHIS,ICDIEN
"RTN","ICD0IDX",29,0)
 S ICDCODX=$G(X) Q:'$L(ICDCODX)  S ICDIEN=+($G(DA)) Q:+ICDIEN'>0  Q:'$D(^ICD0(+ICDIEN,66))
"RTN","ICD0IDX",30,0)
 S ICDHIS=0 F  S ICDHIS=$O(^ICD0(+ICDIEN,66,ICDHIS)) Q:+ICDHIS=0  D
"RTN","ICD0IDX",31,0)
 . N DA,X S DA=+ICDHIS,DA(1)=+ICDIEN D HDC
"RTN","ICD0IDX",32,0)
 . S ICDCOD=ICDCODX Q:'$L($G(ICDCOD))
"RTN","ICD0IDX",33,0)
 . Q:'$L($G(ICDEFF))  Q:'$L($G(ICDSTA))  D KHIS
"RTN","ICD0IDX",34,0)
 Q
"RTN","ICD0IDX",35,0)
 ;                 
"RTN","ICD0IDX",36,0)
 ; File 80.166, field .01
"RTN","ICD0IDX",37,0)
SAHD ; Set new value when Effective Date is Edited
"RTN","ICD0IDX",38,0)
 ; ^DD(80.166,.01,1,D0,1) = D SAHD^ICD0IDX
"RTN","ICD0IDX",39,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD
"RTN","ICD0IDX",40,0)
 D HDC Q:'$L($G(ICDCOD))  Q:'$L($G(ICDSTA))  S ICDEFF=+($G(X)) Q:+ICDEFF=0  D SHIS
"RTN","ICD0IDX",41,0)
 Q
"RTN","ICD0IDX",42,0)
KAHD ; Kill old value when Effective Date is Edited
"RTN","ICD0IDX",43,0)
 ; ^DD(80.166,.01,1,D0,2) = D KAHD^ICD0IDX
"RTN","ICD0IDX",44,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD
"RTN","ICD0IDX",45,0)
 D HDC Q:'$L($G(ICDCOD))  Q:'$L($G(ICDSTA))
"RTN","ICD0IDX",46,0)
 S ICDEFF=+($G(X)) Q:+ICDEFF=0  D KHIS
"RTN","ICD0IDX",47,0)
 Q
"RTN","ICD0IDX",48,0)
 ;                 
"RTN","ICD0IDX",49,0)
 ; File 80.166, field .02
"RTN","ICD0IDX",50,0)
SAHS ; Set new value when Status is Edited
"RTN","ICD0IDX",51,0)
 ; ^DD(80.166,.02,1,D0,1) = D SAHS^ICD0IDX
"RTN","ICD0IDX",52,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD
"RTN","ICD0IDX",53,0)
 D HDC Q:'$L($G(ICDCOD))  Q:+ICDEFF=0
"RTN","ICD0IDX",54,0)
 S ICDSTA=$G(X) Q:'$L(ICDSTA)  D SHIS
"RTN","ICD0IDX",55,0)
 Q
"RTN","ICD0IDX",56,0)
KAHS ; Kill old value when Status is Edited
"RTN","ICD0IDX",57,0)
 ; ^DD(80.1.066,.02,1,D0,2) = D KAHS^ICD0IDX
"RTN","ICD0IDX",58,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD
"RTN","ICD0IDX",59,0)
 D HDC Q:'$L($G(ICDCOD))  Q:+ICDEFF=0
"RTN","ICD0IDX",60,0)
 S ICDSTA=$G(X) Q:'$L(ICDSTA)  D KHIS
"RTN","ICD0IDX",61,0)
 Q
"RTN","ICD0IDX",62,0)
 ;             
"RTN","ICD0IDX",63,0)
HDC ;  Set Common Variables (Code, Status and Effective Date)
"RTN","ICD0IDX",64,0)
 S (ICDCOD,ICDSTA,ICDEFF)=""
"RTN","ICD0IDX",65,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^ICD0(+($G(DA(1))),66,+($G(DA)),0))
"RTN","ICD0IDX",66,0)
 S ICDCOD=$P($G(^ICD0(+($G(DA(1))),0)),"^",1),ICDNOD=$G(^ICD0(+($G(DA(1))),66,+($G(DA)),0))
"RTN","ICD0IDX",67,0)
 S ICDSTA=$P(ICDNOD,"^",2),ICDEFF=$P(ICDNOD,"^",1)
"RTN","ICD0IDX",68,0)
 Q
"RTN","ICD0IDX",69,0)
 ;              
"RTN","ICD0IDX",70,0)
SHIS ; Set Index ^ICD0("ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","ICD0IDX",71,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^ICD0(+($G(DA(1))),66,+($G(DA)),0))
"RTN","ICD0IDX",72,0)
 S ^ICD0("ACT",(ICDCOD_" "),ICDSTA,ICDEFF,DA(1),DA)=""
"RTN","ICD0IDX",73,0)
 N PIECE,INACT S PIECE=$S('ICDSTA:11,1:12),INACT=$S('ICDSTA:1,1:"")
"RTN","ICD0IDX",74,0)
 S $P(^ICD0(DA(1),0),"^",9)=INACT,$P(^ICD0(DA(1),0),"^",PIECE)=ICDEFF
"RTN","ICD0IDX",75,0)
 Q
"RTN","ICD0IDX",76,0)
KHIS ; Kill Index ^ICD0("ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","ICD0IDX",77,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^ICD0(+($G(DA(1))),66,+($G(DA)),0))
"RTN","ICD0IDX",78,0)
 N PIECE,INACT,IEN,OPP,OPPSTA,OPPEFF,BOOL
"RTN","ICD0IDX",79,0)
 S PIECE=$S('ICDSTA:11,1:12),INACT=$S('ICDSTA:"",1:1),OPPEFF=ICDEFF,BOOL=0
"RTN","ICD0IDX",80,0)
 F  S OPPEFF=$O(^ICD0(DA(1),66,"B",OPPEFF),-1) Q:'OPPEFF!BOOL  D
"RTN","ICD0IDX",81,0)
 . S IEN=$O(^ICD0(DA(1),66,"B",OPPEFF,""))
"RTN","ICD0IDX",82,0)
 . I 'IEN S OPPEFF="" Q
"RTN","ICD0IDX",83,0)
 . S OPP=$G(^ICD0(DA(1),66,IEN,0)),OPPEFF=$P($G(OPP),"^",1)
"RTN","ICD0IDX",84,0)
 . S OPPSTA=$P($G(OPP),"^",2),BOOL=OPPSTA'=ICDSTA
"RTN","ICD0IDX",85,0)
 I BOOL D
"RTN","ICD0IDX",86,0)
 . S $P(^ICD0(DA(1),0),"^",9)=INACT,$P(^ICD0(DA(1),0),"^",PIECE)=$G(OPPEFF)
"RTN","ICD0IDX",87,0)
 E  S $P(^ICD0(DA(1),0),"^",9)=1,$P(^ICD0(DA(1),0),"^",11,12)="^"
"RTN","ICD0IDX",88,0)
 K ^ICD0("ACT",(ICDCOD_" "),ICDSTA,ICDEFF,DA(1),DA)
"RTN","ICD0IDX",89,0)
 Q
"RTN","ICD186E")
0^2^B9617480
"RTN","ICD186E",1,0)
ICD186E ;DLS/DEK- ICD Env. Check; 04/28/2003
"RTN","ICD186E",2,0)
 ;;18.0;DRG Grouper;**6**;Oct 20, 2000
"RTN","ICD186E",3,0)
 ;
"RTN","ICD186E",4,0)
 ; External References
"RTN","ICD186E",5,0)
 ;   DBIA  10141  $$PATCH^XPDUTL
"RTN","ICD186E",6,0)
 ;   DBIA  10141  BMES^XPDUTL   
"RTN","ICD186E",7,0)
 ;   DBIA  10141  MES^XPDUTL
"RTN","ICD186E",8,0)
 ;                           
"RTN","ICD186E",9,0)
ENVCHK ; Check Environment for needed vars.
"RTN","ICD186E",10,0)
 N PATCH,BUILD
"RTN","ICD186E",11,0)
 S XPDABORT="",PATCH="ICD*18.0*5",BUILD="ICD*18.0*6"
"RTN","ICD186E",12,0)
 I '$$PATCH^XPDUTL(PATCH) D  Q
"RTN","ICD186E",13,0)
 . D BM(PATCH_" is required and MUST be installed prior to this patch."),ABRT
"RTN","ICD186E",14,0)
 I +($$CPD)'>0,+($G(XPDENV))=0 D
"RTN","ICD186E",15,0)
 . I +($G(^LEXM(0,"CHECKSUM")))'=70183825959 D
"RTN","ICD186E",16,0)
 . . D BM("Global ^LEXM either not found or incomplete."),ABRT
"RTN","ICD186E",17,0)
 D:+($G(XPDABORT))'>0 PROGCHK(.XPDABORT)
"RTN","ICD186E",18,0)
 I $G(XPDABORT)="" K XPDABORT D OK
"RTN","ICD186E",19,0)
 Q
"RTN","ICD186E",20,0)
PROGCHK(XPDABORT) ; Check for Programmer
"RTN","ICD186E",21,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") D
"RTN","ICD186E",22,0)
 . D BM("Programming variables are not set up properly."),ABRT
"RTN","ICD186E",23,0)
 Q
"RTN","ICD186E",24,0)
ABRT ; Abort - All or nothing
"RTN","ICD186E",25,0)
 S XPDABORT=1,XPDQUIT=1,XPDQUIT("LEX*2.0*25")=1
"RTN","ICD186E",26,0)
 S XPDQUIT("ICD*18.0*6")=1,XPDQUIT("ICPT*6.0*14")=1
"RTN","ICD186E",27,0)
 S XPDQUIT("CSV UTIL 1.0")=1
"RTN","ICD186E",28,0)
 Q
"RTN","ICD186E",29,0)
OK ; Environment is Ok
"RTN","ICD186E",30,0)
 Q:+($G(XPDENV))>0
"RTN","ICD186E",31,0)
 D BM(("  Environment for patch/build "_BUILD_" is ok")),M(" ")
"RTN","ICD186E",32,0)
 Q
"RTN","ICD186E",33,0)
 ;                     
"RTN","ICD186E",34,0)
POST ; Post-Install - Rebuild Indexes
"RTN","ICD186E",35,0)
 N ZTRTN,ZTDESC,ZTSK,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ICD1,ICD2 S (ICD1,ICD2)=0
"RTN","ICD186E",36,0)
 S ZTRTN="ICDD^ICD186E",ZTDESC="Re-Index file #80"
"RTN","ICD186E",37,0)
 S ZTIO="",ZTDTH=$H K ZTSK D ^%ZTLOAD,HOME^%ZIS
"RTN","ICD186E",38,0)
 S:+($G(ZTSK))>0 ICD1=+($G(ZTSK))
"RTN","ICD186E",39,0)
 S ZTRTN="ICDP^ICD186E",ZTDESC="Re-Index file #80.1"
"RTN","ICD186E",40,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS
"RTN","ICD186E",41,0)
 S:+($G(ZTSK))>0 ICD2=+($G(ZTSK))
"RTN","ICD186E",42,0)
 I ICD1>0,ICD2'>0 D BM(("Task "_+ICD1_" to rebuild indexes for ICD Diagnosis file #80 started"))
"RTN","ICD186E",43,0)
 I ICD1'>0,ICD2>0 D BM(("Task "_+ICD2_" to rebuild indexes for ICD Procedure file #80.1 started"))
"RTN","ICD186E",44,0)
 I ICD1>0,ICD2>0 D
"RTN","ICD186E",45,0)
 . D BM(("Task "_+ICD1_" to rebuild indexes for ICD Diagnosis file #80 started"))
"RTN","ICD186E",46,0)
 . D M(("Task "_+ICD2_" to rebuild indexes for ICD Procedure file #80.1 started"))
"RTN","ICD186E",47,0)
 K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ICD1,ICD2
"RTN","ICD186E",48,0)
 Q
"RTN","ICD186E",49,0)
ICDD ;   ICD9( Diagnosis
"RTN","ICD186E",50,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ICD186E",51,0)
 N DA,DIK S U="^",DT=$$DT^XLFDT,DIK="^ICD9(",DA=0
"RTN","ICD186E",52,0)
 F  S DA=$O(^ICD9(DA)) Q:+DA=0  K ^ICD9(DA,66,"B")
"RTN","ICD186E",53,0)
 K ^ICD9("AB"),^ICD9("ACC"),^ICD9("ACT")
"RTN","ICD186E",54,0)
 K ^ICD9("BA"),^ICD9("D")
"RTN","ICD186E",55,0)
 D IXALL^DIK
"RTN","ICD186E",56,0)
 Q
"RTN","ICD186E",57,0)
ICDP ;   ICD0( Procedure
"RTN","ICD186E",58,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ICD186E",59,0)
 N DA,DIK S U="^",DT=$$DT^XLFDT,DIK="^ICD0(",DA=0
"RTN","ICD186E",60,0)
 F  S DA=$O(^ICD0(DA)) Q:+DA=0  K ^ICD0(DA,66,"B")
"RTN","ICD186E",61,0)
 K ^ICD0("AB"),^ICD0("ACT"),^ICD0("BA"),^ICD0("D")
"RTN","ICD186E",62,0)
 K ^ICD0("E") D IXALL^DIK
"RTN","ICD186E",63,0)
 Q
"RTN","ICD186E",64,0)
CPD(X) ;   Check Current Patched Data is installed
"RTN","ICD186E",65,0)
 Q:$D(^LEX(757.1,"B",180595,257762))&('$D(^LEX(757.02,"B",322162,3296))) 1
"RTN","ICD186E",66,0)
 Q 0
"RTN","ICD186E",67,0)
 ;                     
"RTN","ICD186E",68,0)
 ; Miscellaneous
"RTN","ICD186E",69,0)
BM(X) ;   Blank Line with Message
"RTN","ICD186E",70,0)
 S X=" "_$G(X) D:$D(XPDNM) BMES^XPDUTL($G(X)) W:'$D(XPDNM) !!,$G(X) Q
"RTN","ICD186E",71,0)
M(X) ;   Message
"RTN","ICD186E",72,0)
 S X=" "_$G(X) D:$D(XPDNM) MES^XPDUTL($G(X)) W:'$D(XPDNM) !,$G(X) Q
"RTN","ICD9IDX")
0^4^B11648583
"RTN","ICD9IDX",1,0)
ICD9IDX ;DLS/DEK - MUMPS Cross Reference Routine for History ; 04/28/2003
"RTN","ICD9IDX",2,0)
 ;;18.0;DRG Grouper;**6**;Oct 20, 2000
"RTN","ICD9IDX",3,0)
 ;
"RTN","ICD9IDX",4,0)
 ; ICDCOD          ICD Code from Global
"RTN","ICD9IDX",5,0)
 ; ICDCODX         ICD Code passed in (X)
"RTN","ICD9IDX",6,0)
 ; ICDEFF          Effective Date
"RTN","ICD9IDX",7,0)
 ; ICDSTA          Status
"RTN","ICD9IDX",8,0)
 ; ICDNOD          Global Node (to reduce Global hits)
"RTN","ICD9IDX",9,0)
 ; DA              ien file 80 or 80.066
"RTN","ICD9IDX",10,0)
 ; ICDIEN,DA(1)    ien of file 80 
"RTN","ICD9IDX",11,0)
 ; ICDHIS          ien of file 80.066
"RTN","ICD9IDX",12,0)
 ; X               Data passed in to be indexed
"RTN","ICD9IDX",13,0)
 ;                 
"RTN","ICD9IDX",14,0)
 ; Set and Kill Activation History
"RTN","ICD9IDX",15,0)
 ;                 
"RTN","ICD9IDX",16,0)
 ;   File 80, field .01
"RTN","ICD9IDX",17,0)
SAHC ; Set new value when ICD Code is Edited
"RTN","ICD9IDX",18,0)
 ; ^DD(80,.01,1,D0,1) = D SAHC^ICD9IDX
"RTN","ICD9IDX",19,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDCODX,ICDHIS,ICDIEN
"RTN","ICD9IDX",20,0)
 S ICDCODX=$G(X) Q:'$L(ICDCODX)  S ICDIEN=+($G(DA)) Q:+ICDIEN'>0  Q:'$D(^ICD9(+ICDIEN,66))
"RTN","ICD9IDX",21,0)
 S ICDHIS=0 F  S ICDHIS=$O(^ICD9(+ICDIEN,66,ICDHIS)) Q:+ICDHIS=0  D
"RTN","ICD9IDX",22,0)
 . N DA,X S DA=+ICDHIS,DA(1)=+ICDIEN D HDC
"RTN","ICD9IDX",23,0)
 . S ICDCOD=ICDCODX Q:'$L($G(ICDCOD))
"RTN","ICD9IDX",24,0)
 . Q:'$L($G(ICDEFF))  Q:'$L($G(ICDSTA))  D SHIS
"RTN","ICD9IDX",25,0)
 Q
"RTN","ICD9IDX",26,0)
KAHC ; Kill old value when ICD Code is Edited
"RTN","ICD9IDX",27,0)
 ; ^DD(80,.01,1,D0,2) = D KAHC^ICD9IDX
"RTN","ICD9IDX",28,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDCODX,ICDHIS,ICDIEN
"RTN","ICD9IDX",29,0)
 S ICDCODX=$G(X) Q:'$L(ICDCODX)  S ICDIEN=+($G(DA)) Q:+ICDIEN'>0  Q:'$D(^ICD9(+ICDIEN,66))
"RTN","ICD9IDX",30,0)
 S ICDHIS=0 F  S ICDHIS=$O(^ICD9(+ICDIEN,66,ICDHIS)) Q:+ICDHIS=0  D
"RTN","ICD9IDX",31,0)
 . N DA,X S DA=+ICDHIS,DA(1)=+ICDIEN D HDC
"RTN","ICD9IDX",32,0)
 . S ICDCOD=ICDCODX Q:'$L($G(ICDCOD))
"RTN","ICD9IDX",33,0)
 . Q:'$L($G(ICDEFF))  Q:'$L($G(ICDSTA))  D KHIS
"RTN","ICD9IDX",34,0)
 Q
"RTN","ICD9IDX",35,0)
 ;                 
"RTN","ICD9IDX",36,0)
 ; File 80.066, field .01
"RTN","ICD9IDX",37,0)
SAHD ; Set new value when Effective Date is Edited
"RTN","ICD9IDX",38,0)
 ; ^DD(80.066,.01,1,D0,1) = D SAHD^ICD9IDX
"RTN","ICD9IDX",39,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD
"RTN","ICD9IDX",40,0)
 D HDC Q:'$L($G(ICDCOD))  Q:'$L($G(ICDSTA))  S ICDEFF=+($G(X)) Q:+ICDEFF=0  D SHIS
"RTN","ICD9IDX",41,0)
 Q
"RTN","ICD9IDX",42,0)
KAHD ; Kill old value when Effective Date is Edited
"RTN","ICD9IDX",43,0)
 ; ^DD(80.066,.01,1,D0,2) = D KAHD^ICD9IDX
"RTN","ICD9IDX",44,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD
"RTN","ICD9IDX",45,0)
 D HDC Q:'$L($G(ICDCOD))  Q:'$L($G(ICDSTA))
"RTN","ICD9IDX",46,0)
 S ICDEFF=+($G(X)) Q:+ICDEFF=0  D KHIS
"RTN","ICD9IDX",47,0)
 Q
"RTN","ICD9IDX",48,0)
 ;                 
"RTN","ICD9IDX",49,0)
 ; File 80.066, field .02
"RTN","ICD9IDX",50,0)
SAHS ; Set new value when Status is Edited
"RTN","ICD9IDX",51,0)
 ; ^DD(80.066,.02,1,D0,1) = D SAHS^ICD9IDX
"RTN","ICD9IDX",52,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD
"RTN","ICD9IDX",53,0)
 D HDC Q:'$L($G(ICDCOD))  Q:+ICDEFF=0
"RTN","ICD9IDX",54,0)
 S ICDSTA=$G(X) Q:'$L(ICDSTA)  D SHIS
"RTN","ICD9IDX",55,0)
 Q
"RTN","ICD9IDX",56,0)
KAHS ; Kill old value when Status is Edited
"RTN","ICD9IDX",57,0)
 ; ^DD(80.066,.02,1,D0,2) = D KAHS^ICD9IDX
"RTN","ICD9IDX",58,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD
"RTN","ICD9IDX",59,0)
 D HDC Q:'$L($G(ICDCOD))  Q:+ICDEFF=0
"RTN","ICD9IDX",60,0)
 S ICDSTA=$G(X) Q:'$L(ICDSTA)  D KHIS
"RTN","ICD9IDX",61,0)
 Q
"RTN","ICD9IDX",62,0)
 ;             
"RTN","ICD9IDX",63,0)
HDC ;  Set Common Variables (Code, Status and Effective Date)
"RTN","ICD9IDX",64,0)
 S (ICDCOD,ICDSTA,ICDEFF)=""
"RTN","ICD9IDX",65,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^ICD9(+($G(DA(1))),66,+($G(DA)),0))
"RTN","ICD9IDX",66,0)
 S ICDCOD=$P($G(^ICD9(+($G(DA(1))),0)),"^",1),ICDNOD=$G(^ICD9(+($G(DA(1))),66,+($G(DA)),0))
"RTN","ICD9IDX",67,0)
 S ICDSTA=$P(ICDNOD,"^",2),ICDEFF=$P(ICDNOD,"^",1)
"RTN","ICD9IDX",68,0)
 Q
"RTN","ICD9IDX",69,0)
 ;              
"RTN","ICD9IDX",70,0)
SHIS ; Set Index ^ICD9("ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","ICD9IDX",71,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^ICD9(+($G(DA(1))),66,+($G(DA)),0))
"RTN","ICD9IDX",72,0)
 S ^ICD9("ACT",(ICDCOD_" "),ICDSTA,ICDEFF,DA(1),DA)=""
"RTN","ICD9IDX",73,0)
 N PIECE,INACT S PIECE=$S('ICDSTA:11,1:16),INACT=$S('ICDSTA:1,1:"")
"RTN","ICD9IDX",74,0)
 S $P(^ICD9(DA(1),0),"^",9)=INACT,$P(^ICD9(DA(1),0),"^",PIECE)=ICDEFF
"RTN","ICD9IDX",75,0)
 Q
"RTN","ICD9IDX",76,0)
KHIS ; Kill Index ^ICD9("ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","ICD9IDX",77,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^ICD9(+($G(DA(1))),66,+($G(DA)),0))
"RTN","ICD9IDX",78,0)
 N PIECE,INACT,IEN,OPP,OPPSTA,OPPEFF,BOOL
"RTN","ICD9IDX",79,0)
 S PIECE=$S('ICDSTA:11,1:16),INACT=$S('ICDSTA:"",1:1),OPPEFF=ICDEFF,BOOL=0
"RTN","ICD9IDX",80,0)
 F  S OPPEFF=$O(^ICD9(DA(1),66,"B",OPPEFF),-1) Q:'OPPEFF!BOOL  D
"RTN","ICD9IDX",81,0)
 . S IEN=$O(^ICD9(DA(1),66,"B",OPPEFF,""))
"RTN","ICD9IDX",82,0)
 . I 'IEN S OPPEFF="" Q
"RTN","ICD9IDX",83,0)
 . S OPP=$G(^ICD9(DA(1),66,IEN,0)),OPPEFF=$P($G(OPP),"^",1)
"RTN","ICD9IDX",84,0)
 . S OPPSTA=$P($G(OPP),"^",2),BOOL=OPPSTA'=ICDSTA
"RTN","ICD9IDX",85,0)
 I BOOL D
"RTN","ICD9IDX",86,0)
 . S $P(^ICD9(DA(1),0),"^",9)=INACT,$P(^ICD9(DA(1),0),"^",PIECE)=$G(OPPEFF)
"RTN","ICD9IDX",87,0)
 E  S $P(^ICD9(DA(1),0),"^",9)=1,$P(^ICD9(DA(1),0),"^",11)="",$P(^ICD9(DA(1),0),"^",16)=""
"RTN","ICD9IDX",88,0)
 K ^ICD9("ACT",(ICDCOD_" "),ICDSTA,ICDEFF,DA(1),DA)
"RTN","ICD9IDX",89,0)
 Q
"RTN","ICDAPIU")
0^5^B27021322
"RTN","ICDAPIU",1,0)
ICDAPIU ;DLS/DEK - ICD UTILITIES FOR APIS ; 04/28/2003
"RTN","ICDAPIU",2,0)
 ;;18.0;DRG Grouper;**6**;Oct 20, 2000
"RTN","ICDAPIU",3,0)
 ;
"RTN","ICDAPIU",4,0)
 ; External References
"RTN","ICDAPIU",5,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","ICDAPIU",6,0)
 ;
"RTN","ICDAPIU",7,0)
DTBR(CDT,CS) ; Date Business Rules
"RTN","ICDAPIU",8,0)
 ; Input:
"RTN","ICDAPIU",9,0)
 ;   CDT - Code Date to check (FileMan format, default=Today)
"RTN","ICDAPIU",10,0)
 ;   CS - Code System (0:ICD, 1:CPT/HCPCS, 2:DRG, Default=0)
"RTN","ICDAPIU",11,0)
 ;
"RTN","ICDAPIU",12,0)
 ; Output:
"RTN","ICDAPIU",13,0)
 ;   If CDT < 2781001 and CS=0, use 2781001
"RTN","ICDAPIU",14,0)
 ;   If CDT < 2890101 and CS=1, use 2890101
"RTN","ICDAPIU",15,0)
 ;   If CDT < 2821001 and CS=2, use 2821001
"RTN","ICDAPIU",16,0)
 ;   If CDT is year only, use first of the year
"RTN","ICDAPIU",17,0)
 ;   If CDT is year and month only, use first of the month
"RTN","ICDAPIU",18,0)
 ;
"RTN","ICDAPIU",19,0)
 Q:'$G(CDT) $$DT^XLFDT ;nothing passed - use today
"RTN","ICDAPIU",20,0)
 Q:$L($P(CDT,"."))'=7 $$DT^XLFDT ;bad date format - use today
"RTN","ICDAPIU",21,0)
 N BRDAT ;Business rule date
"RTN","ICDAPIU",22,0)
 S CS=+$G(CS) S:CS>2!(CS<0) CS=0
"RTN","ICDAPIU",23,0)
 S BRDAT=+$P("2781001^2890101^2821001","^",CS+1)
"RTN","ICDAPIU",24,0)
 I CDT#10000=0 S CDT=CDT+101
"RTN","ICDAPIU",25,0)
 S:CDT#100=0 CDT=CDT+1
"RTN","ICDAPIU",26,0)
 Q $S(CDT<BRDAT:BRDAT,1:CDT)
"RTN","ICDAPIU",27,0)
 ;
"RTN","ICDAPIU",28,0)
MSG(CDT,CS) ; inform of code text inaccuracy
"RTN","ICDAPIU",29,0)
 ; Input:
"RTN","ICDAPIU",30,0)
 ;   CDT - Code Date to check (FileMan format, Default = today)
"RTN","ICDAPIU",31,0)
 ;   CS - Code System (0:ICD, 1:CPT/HCPCS, 2:DRG, 3:LEX, Default=0)
"RTN","ICDAPIU",32,0)
 ; Output: User Alert
"RTN","ICDAPIU",33,0)
 ;
"RTN","ICDAPIU",34,0)
 S CS=+$G(CS) S:CS>3!(CS<0) CS=0
"RTN","ICDAPIU",35,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR(CDT,CS))
"RTN","ICDAPIU",36,0)
 N MSGTXT S MSGTXT="CODE TEXT MAY BE INACCURATE"
"RTN","ICDAPIU",37,0)
 ; On Date Text Versioning is Implemented (MSGDAT), code becomes:
"RTN","ICDAPIU",38,0)
 ; Q $S(CDT<MSGDAT:MSGTXT,1:"")
"RTN","ICDAPIU",39,0)
 I CS=3,CDT'<3031001 Q ""
"RTN","ICDAPIU",40,0)
 Q MSGTXT
"RTN","ICDAPIU",41,0)
 ;
"RTN","ICDAPIU",42,0)
STATCHK(CODE,CDT) ; Check Status of ICD Code
"RTN","ICDAPIU",43,0)
 ; Input:
"RTN","ICDAPIU",44,0)
 ;    CODE - ICD Code  REQUIRED
"RTN","ICDAPIU",45,0)
 ;    CDT - Date to screen against (FileMan format, default = today)
"RTN","ICDAPIU",46,0)
 ; Output:
"RTN","ICDAPIU",47,0)
 ;    2-Piece String containing the code's status
"RTN","ICDAPIU",48,0)
 ;    and the IEN if the code exist, else -1.
"RTN","ICDAPIU",49,0)
 ;    The following are possible outputs:
"RTN","ICDAPIU",50,0)
 ;         1^IEN    Active Code
"RTN","ICDAPIU",51,0)
 ;         0^IEN    Inactive Code
"RTN","ICDAPIU",52,0)
 ;         0^-1     Code not Found
"RTN","ICDAPIU",53,0)
 ;
"RTN","ICDAPIU",54,0)
 ; This API requires the ACT Cross-Reference
"RTN","ICDAPIU",55,0)
 ;     ^ICD9("ACT",<code>,<status>,<date>,<ien>)
"RTN","ICDAPIU",56,0)
 ;     ^ICD0("ACT",<code>,<status>,<date>,<ien>)
"RTN","ICDAPIU",57,0)
 ;
"RTN","ICDAPIU",58,0)
 N ICDC,ICDD,ICDIEN,ICDI,ICDA,ICDG,ICDR,X
"RTN","ICDAPIU",59,0)
 S ICDC=$G(CODE) Q:'$L(ICDC) "0^-1"
"RTN","ICDAPIU",60,0)
 ;    Case 1:  Not Valid                           0^-1
"RTN","ICDAPIU",61,0)
 ;             Fails Pattern Match for Code
"RTN","ICDAPIU",62,0)
 S CODE=$$CODEN^ICDCODE(CODE),ICDG=$P(CODE,"~",2),ICDIEN=+CODE
"RTN","ICDAPIU",63,0)
 Q:ICDIEN<1 "0^-1"
"RTN","ICDAPIU",64,0)
 ;    Case 2:  Never Active                        0^IEN
"RTN","ICDAPIU",65,0)
 ;             No Active/Inactive Date
"RTN","ICDAPIU",66,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR(CDT,1)),ICDD=CDT+.001
"RTN","ICDAPIU",67,0)
 S ICDR=$$ACTROOT(ICDG,ICDC,1,ICDD),ICDA=$O(@(ICDR_")"),-1)
"RTN","ICDAPIU",68,0)
 I '$L(ICDA) D  Q X
"RTN","ICDAPIU",69,0)
 . S ICDA=$O(@(ICDR_")")),X="0^-1" Q:'$L(ICDA)
"RTN","ICDAPIU",70,0)
 . S ICDR=$$ACTROOT(ICDG,ICDC,1,ICDA)
"RTN","ICDAPIU",71,0)
 . S ICDIEN=$O(@(ICDR_",0)")) S:+ICDIEN<1 ICDIEN=-1
"RTN","ICDAPIU",72,0)
 . S X="0^"_ICDIEN
"RTN","ICDAPIU",73,0)
 ;    Case 3:  Active, Never Inactive              1^IEN
"RTN","ICDAPIU",74,0)
 ;             Has an Activation Date
"RTN","ICDAPIU",75,0)
 ;             No Inactivation Date
"RTN","ICDAPIU",76,0)
 S ICDR=$$ACTROOT(ICDG,ICDC,0,ICDD),ICDI=$O(@(ICDR_")"),-1)
"RTN","ICDAPIU",77,0)
 I $L(ICDA),'$L(ICDI) D  Q X
"RTN","ICDAPIU",78,0)
 . S ICDR=$$ACTROOT(ICDG,ICDC,1,ICDA),ICDIEN=$O(@(ICDR_",0)"))
"RTN","ICDAPIU",79,0)
 . S X=$S(+ICDIEN=0:"0^-1",1:"1^"_ICDIEN)
"RTN","ICDAPIU",80,0)
 ;    Case 4:  Active, but later Inactivated       0^IEN
"RTN","ICDAPIU",81,0)
 ;             Has an Activation Date
"RTN","ICDAPIU",82,0)
 ;             Has an Inactivation Date
"RTN","ICDAPIU",83,0)
 I $L(ICDA),$L(ICDI),ICDI>ICDA,ICDI<ICDD D  Q X
"RTN","ICDAPIU",84,0)
 . S ICDR=$$ACTROOT(ICDG,ICDC,0,ICDI),ICDIEN=$O(@(ICDR_",0)"))
"RTN","ICDAPIU",85,0)
 . S X=$S(+ICDIEN=0:"0^-1",1:"0^"_ICDIEN)
"RTN","ICDAPIU",86,0)
 ;    Case 5:  Active, and not later Inactivated   1^IEN
"RTN","ICDAPIU",87,0)
 ;             Has an Activation Date
"RTN","ICDAPIU",88,0)
 ;             Has an Inactivation Date
"RTN","ICDAPIU",89,0)
 ;             Has a Newer Activation Date
"RTN","ICDAPIU",90,0)
 I $L(ICDA),$L(ICDI),ICDI'>ICDA D  Q X
"RTN","ICDAPIU",91,0)
 . S ICDR=$$ACTROOT(ICDG,ICDC,0,ICDI)
"RTN","ICDAPIU",92,0)
 . S X=$S(+$O(@(ICDR_",0)"))=0:"0^-1",1:"1^"_ICDI)
"RTN","ICDAPIU",93,0)
 ;    Case 6:  Fails Time Test                     0^-1
"RTN","ICDAPIU",94,0)
 Q "0^-1"
"RTN","ICDAPIU",95,0)
 ;
"RTN","ICDAPIU",96,0)
NEXT(CODE) ; Next ICD Code (active or inactive)
"RTN","ICDAPIU",97,0)
 ; Input:
"RTN","ICDAPIU",98,0)
 ;    CODE = ICD Code   REQUIRED
"RTN","ICDAPIU",99,0)
 ; Output:
"RTN","ICDAPIU",100,0)
 ;    The Next ICD Code, Null if none
"RTN","ICDAPIU",101,0)
 ;
"RTN","ICDAPIU",102,0)
 N ICDC,ICDG S ICDC=$G(CODE) Q:'$L(ICDC) ""
"RTN","ICDAPIU",103,0)
 Q:ICDC?1.9N ""  ;app passed an IEN
"RTN","ICDAPIU",104,0)
 S ICDG=$P($$CODEN^ICDCODE(ICDC),"~",2)
"RTN","ICDAPIU",105,0)
 Q:ICDG="INVALID CODE" ""
"RTN","ICDAPIU",106,0)
 S ICDC=$O(@(ICDG_"""BA"","""_ICDC_" "")"))
"RTN","ICDAPIU",107,0)
 Q $S(ICDC="":"",1:$E(ICDC,1,$L(ICDC)-1))
"RTN","ICDAPIU",108,0)
 ;
"RTN","ICDAPIU",109,0)
PREV(CODE) ; Previous ICD Code (active or inactive)
"RTN","ICDAPIU",110,0)
 ; Input:
"RTN","ICDAPIU",111,0)
 ;    CODE = ICD Code   REQUIRED
"RTN","ICDAPIU",112,0)
 ; Output:
"RTN","ICDAPIU",113,0)
 ;    The Previous ICD Code, Null if none
"RTN","ICDAPIU",114,0)
 ;
"RTN","ICDAPIU",115,0)
 N ICDC,ICDG
"RTN","ICDAPIU",116,0)
 S ICDC=$G(CODE) Q:'$L(ICDC) ""
"RTN","ICDAPIU",117,0)
 Q:ICDC?1.9N ""  ;app passed an IEN
"RTN","ICDAPIU",118,0)
 S ICDG=$P($$CODEN^ICDCODE(ICDC),"~",2)
"RTN","ICDAPIU",119,0)
 Q:ICDG="INVALID CODE" ""
"RTN","ICDAPIU",120,0)
 S ICDC=$O(@(ICDG_"""BA"","""_ICDC_" "")"),-1)
"RTN","ICDAPIU",121,0)
 Q $S(ICDC="":"",1:$E(ICDC,1,$L(ICDC)-1))
"RTN","ICDAPIU",122,0)
 ;
"RTN","ICDAPIU",123,0)
HIST(CODE,ARY)  ; Activation History
"RTN","ICDAPIU",124,0)
 ; Input:
"RTN","ICDAPIU",125,0)
 ;    CODE - ICD Code                     REQUIRED
"RTN","ICDAPIU",126,0)
 ;    .ARY - Array, passed by Reference   REQUIRED
"RTN","ICDAPIU",127,0)
 ;
"RTN","ICDAPIU",128,0)
 ; Output:    Mirrors ARY(0) (or, -1 on error)
"RTN","ICDAPIU",129,0)
 ;    ARY(0) = Number of Activation History Entries
"RTN","ICDAPIU",130,0)
 ;    ARY(<date>) = status    where: 1 is Active
"RTN","ICDAPIU",131,0)
 ;    ARY("IEN") = <ien>
"RTN","ICDAPIU",132,0)
 ;
"RTN","ICDAPIU",133,0)
 Q:$G(CODE)="" -1
"RTN","ICDAPIU",134,0)
 N ICDC,ICDI,ICDA,ICDN,ICDD,ICDG,ICDF
"RTN","ICDAPIU",135,0)
 S ICDI=$$CODEN^ICDCODE(CODE),ICDG=$P(ICDI,"~",2)
"RTN","ICDAPIU",136,0)
 S ICDI=+ICDI Q:ICDI<1 -1
"RTN","ICDAPIU",137,0)
 S ARY("IEN")=ICDI,ICDA="" M ICDA=@(ICDG_ICDI_",66)")
"RTN","ICDAPIU",138,0)
 K ICDA("B") S ARY(0)=+($P($G(ICDA(0)),"^",4))
"RTN","ICDAPIU",139,0)
 S:+ARY(0)=0 ARY(0)=-1 K:ARY(0)=-1 ARY("IEN")
"RTN","ICDAPIU",140,0)
 S (ICDI,ICDC)=0 F  S ICDI=$O(ICDA(ICDI)) Q:+ICDI=0  D
"RTN","ICDAPIU",141,0)
 . S ICDD=$P($G(ICDA(ICDI,0)),"^",1) Q:+ICDD=0
"RTN","ICDAPIU",142,0)
 . S ICDF=$P($G(ICDA(ICDI,0)),"^",2) Q:'$L(ICDF)
"RTN","ICDAPIU",143,0)
 . S ICDC=ICDC+1,ARY(0)=ICDC,ARY(ICDD)=ICDF
"RTN","ICDAPIU",144,0)
 Q ARY(0)
"RTN","ICDAPIU",145,0)
 ;
"RTN","ICDAPIU",146,0)
PERIOD(CODE,ARY) ; return Activation/Inactivation Period in ARY
"RTN","ICDAPIU",147,0)
 ; Input:
"RTN","ICDAPIU",148,0)
 ;    CODE - ICD Code                     REQUIRED
"RTN","ICDAPIU",149,0)
 ;    .ARY - Array, passed by Reference   REQUIRED
"RTN","ICDAPIU",150,0)
 ; Output:
"RTN","ICDAPIU",151,0)
 ;    ARY(0) = IEN^Selectable
"RTN","ICDAPIU",152,0)
 ;       Where IEN = -1 if error
"RTN","ICDAPIU",153,0)
 ;             Selectable = 0 for VA Only codes
"RTN","ICDAPIU",154,0)
 ;    ARY(Act_date) = Inactivation Date^Short Name Text
"RTN","ICDAPIU",155,0)
 ;
"RTN","ICDAPIU",156,0)
 I $G(CODE)="" S ARY(0)="-1^0" Q
"RTN","ICDAPIU",157,0)
 N ICDC,ICDI,ICDA,ICDG,ICDF,ICDBA,ICDBI,ICDST,ICDS,ICDZ
"RTN","ICDAPIU",158,0)
 S ICDC=$$CODEN^ICDCODE(CODE),ICDG=$P(ICDC,"~",2),ICDC=+ICDC
"RTN","ICDAPIU",159,0)
 I ICDC<1 S ARY(0)="-1^0" Q
"RTN","ICDAPIU",160,0)
 S ICDI=$S(ICDG="^ICD9(":3,1:4),ICDZ=$G(@(ICDG_ICDC_",0)"))
"RTN","ICDAPIU",161,0)
 S ICDS=$P(ICDZ,"^",ICDI),ARY(0)=ICDC_"^"_'$P(ICDZ,"^",8)
"RTN","ICDAPIU",162,0)
 S (ICDA,ICDBA)=0,ICDG=ICDG_ICDC_",66,"
"RTN","ICDAPIU",163,0)
 F  Q:ICDBA  D
"RTN","ICDAPIU",164,0)
 . S ICDA=$O(@(ICDG_"""B"","_ICDA_")"))
"RTN","ICDAPIU",165,0)
 . I ICDA="" S ICDBA=1 Q
"RTN","ICDAPIU",166,0)
 . S ICDF=$O(@(ICDG_"""B"","_ICDA_",0)"))
"RTN","ICDAPIU",167,0)
 . I '+ICDF S ICDBA=1 Q
"RTN","ICDAPIU",168,0)
 . S ICDST=$P($G(@(ICDG_ICDF_",0)")),"^",2)
"RTN","ICDAPIU",169,0)
 . Q:'ICDST  ;outer loop looks for active
"RTN","ICDAPIU",170,0)
 . S ARY(ICDA)="^"_ICDS,ICDBI=0,ICDI=ICDA
"RTN","ICDAPIU",171,0)
 . F  Q:ICDBI  D
"RTN","ICDAPIU",172,0)
 . . S ICDI=$O(@(ICDG_"""B"","_ICDI_")"))
"RTN","ICDAPIU",173,0)
 . . I ICDI="" S (ICDBI,ICDBA)=1 Q
"RTN","ICDAPIU",174,0)
 . . S ICDF=$O(@(ICDG_"""B"","_ICDI_",0)"))
"RTN","ICDAPIU",175,0)
 . . I '+ICDF S (ICDBI,ICDBA)=1 Q
"RTN","ICDAPIU",176,0)
 . . S ICDST=$P($G(@(ICDG_ICDF_",0)")),"^",2)
"RTN","ICDAPIU",177,0)
 . . I ICDST S ICDBI=1 Q  ;inner loop looks for inactive
"RTN","ICDAPIU",178,0)
 . . S $P(ARY(ICDA),"^")=ICDI,ICDBI=1,ICDA=ICDI
"RTN","ICDAPIU",179,0)
 Q
"RTN","ICDAPIU",180,0)
 ;
"RTN","ICDAPIU",181,0)
ACTROOT(ICDG,ICDC,ICDS,ICDD) ; return "ACT" root
"RTN","ICDAPIU",182,0)
 Q ICDG_"""ACT"","""_ICDC_" "","_ICDS_","_ICDD
"RTN","ICDCODE")
0^6^B26064804
"RTN","ICDCODE",1,0)
ICDCODE ;DLS/DEK - ICD CODE APIS ; 04/28/2003
"RTN","ICDCODE",2,0)
 ;;18.0;DRG Grouper;**6**;Oct 20, 2000
"RTN","ICDCODE",3,0)
 ;
"RTN","ICDCODE",4,0)
 ; External References
"RTN","ICDCODE",5,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","ICDCODE",6,0)
 ;
"RTN","ICDCODE",7,0)
ICDDX(CODE,CDT,DFN,SRC) ; return info on ICD Diagnosis code
"RTN","ICDCODE",8,0)
 ; Input:
"RTN","ICDCODE",9,0)
 ;    CODE - ICD code, ien or .01 format, REQUIRED
"RTN","ICDCODE",10,0)
 ;    CDT - date to screen against, default = today (FileMan format)
"RTN","ICDCODE",11,0)
 ;          If CDT < 10/1/1978, use 10/1/1978
"RTN","ICDCODE",12,0)
 ;          If CDT > DT, validate with newest In/Activation Dates
"RTN","ICDCODE",13,0)
 ;          If CDT is year only, use first of the year
"RTN","ICDCODE",14,0)
 ;          If CDT is year and month only, use first of the month
"RTN","ICDCODE",15,0)
 ;    DFN - not in use, included in anticipation of future need
"RTN","ICDCODE",16,0)
 ;    SRC - SCREEN SOURCE
"RTN","ICDCODE",17,0)
 ;          If '$G(SRC), level 1, Level 2 only.
"RTN","ICDCODE",18,0)
 ;          If $G(SRC), include level 3.
"RTN","ICDCODE",19,0)
 ; Output:
"RTN","ICDCODE",20,0)
 ;    ien^CODE NUMBER^IDENTIFIER^DIAGNOSIS^UNACCEPTABLE AS PRINCIPAL DX^MAJOR DIAGNOSTIC CATEGORY 
"RTN","ICDCODE",21,0)
 ;       ien^MDC13^COMPLICATION/COMORBIDITY^ICD EXPANDED^STATUS^SEX^INACTIVE DATE^MDC24^MDC25^AGE 
"RTN","ICDCODE",22,0)
 ;       LOW^AGE HIGH^ACTIVATION DATE^MSG
"RTN","ICDCODE",23,0)
 ; -or-
"RTN","ICDCODE",24,0)
 ;    -1^error description
"RTN","ICDCODE",25,0)
 ;
"RTN","ICDCODE",26,0)
 ;    STATUS = 0 if inactive, 1 if active
"RTN","ICDCODE",27,0)
 ;    SEX = M if Male, F if Female, null if non-specific
"RTN","ICDCODE",28,0)
 ;    Activation Date = date code became active
"RTN","ICDCODE",29,0)
 ;    Inactivation Date = date code became inactive
"RTN","ICDCODE",30,0)
 ;    AGE Low = minimum age for code, null if non-specific
"RTN","ICDCODE",31,0)
 ;    AGE High = maximum age for code, null if non-specific
"RTN","ICDCODE",32,0)
 ;    MSG = User Alert
"RTN","ICDCODE",33,0)
 ;
"RTN","ICDCODE",34,0)
 ; Variables:
"RTN","ICDCODE",35,0)
 ;    DATA = 0-node for ICD code
"RTN","ICDCODE",36,0)
 ;    EFF = effective date
"RTN","ICDCODE",37,0)
 ;
"RTN","ICDCODE",38,0)
 N DATA,EFF,INV
"RTN","ICDCODE",39,0)
 I $G(CODE)="" Q "-1^NO CODE SELECTED"
"RTN","ICDCODE",40,0)
 S INV="-1^INVALID CODE",CODE=+$$CODEN(CODE,80) ;find ien for code
"RTN","ICDCODE",41,0)
 I CODE<1 Q INV ;if no code, return error
"RTN","ICDCODE",42,0)
 I '$D(^ICD9(CODE)) Q INV ;if no code, return error
"RTN","ICDCODE",43,0)
 I '$G(SRC),$P(^ICD9(CODE,0),"^",8) Q "-1^VA LOCAL CODE SELECTED"
"RTN","ICDCODE",44,0)
 ;move 0-node into string
"RTN","ICDCODE",45,0)
 S DATA=$G(^ICD9(CODE,0)) I '$L(DATA) Q "-1^NO DATA"
"RTN","ICDCODE",46,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDAPIU(CDT))
"RTN","ICDCODE",47,0)
 S EFF=$$EFF^ICDSUPT(80,CODE,CDT)
"RTN","ICDCODE",48,0)
 S $P(DATA,"^",9)=$S(EFF<1:0,1:$P(EFF,"^"))
"RTN","ICDCODE",49,0)
 S $P(DATA,"^",11)=$P(EFF,"^",2),$P(DATA,"^",16)=$P(EFF,"^",3)
"RTN","ICDCODE",50,0)
 Q CODE_"^"_DATA_"^"_$$MSG^ICDAPIU(CDT)
"RTN","ICDCODE",51,0)
 ;
"RTN","ICDCODE",52,0)
ICDOP(CODE,CDT,DFN,SRC) ; return info on ICD Operation/Procedure code
"RTN","ICDCODE",53,0)
 ; Input:
"RTN","ICDCODE",54,0)
 ;    CODE - ICD code, ien or .01 format, REQUIRED
"RTN","ICDCODE",55,0)
 ;    CDT - date to screen against, default = today (FileMan format)
"RTN","ICDCODE",56,0)
 ;          If CDT < 10/1/1978, use 10/1/1978
"RTN","ICDCODE",57,0)
 ;          If CDT > DT, validate with newest In/Activation Dates
"RTN","ICDCODE",58,0)
 ;          If CDT is year only, use first of the year
"RTN","ICDCODE",59,0)
 ;          If CDT is year and month only, use first of the month
"RTN","ICDCODE",60,0)
 ;    DFN - not in use, included in anticipation of future need
"RTN","ICDCODE",61,0)
 ;    SRC - SCREEN SOURCE
"RTN","ICDCODE",62,0)
 ;          If '$G(SRC), level 1, Level 2 only.
"RTN","ICDCODE",63,0)
 ;          If $G(SRC), include level 3.
"RTN","ICDCODE",64,0)
 ; Output:
"RTN","ICDCODE",65,0)
 ;       ien^CODE NUMBER^IDENTIFIER^MDC24^OPERATION/PROCEDURE^^^^ICD EXPANDED^STATUS^SEX^INACTIVE 
"RTN","ICDCODE",66,0)
 ;         DATE^ACTIVATION DATE^MSG
"RTN","ICDCODE",67,0)
 ;  -or-
"RTN","ICDCODE",68,0)
 ;       -1^error description
"RTN","ICDCODE",69,0)
 ;
"RTN","ICDCODE",70,0)
 ;    STATUS = 0 if inactive, 1 if active
"RTN","ICDCODE",71,0)
 ;    SEX = M if Male, F if Female, null if non-specific
"RTN","ICDCODE",72,0)
 ;    Activation Date = date code became active
"RTN","ICDCODE",73,0)
 ;    Inactivation Date = date code became inactive
"RTN","ICDCODE",74,0)
 ;    MSG = User alert
"RTN","ICDCODE",75,0)
 ;
"RTN","ICDCODE",76,0)
 ; Variables:
"RTN","ICDCODE",77,0)
 ;    DATA = 0-node for ICD code
"RTN","ICDCODE",78,0)
 ;    EFF = effective date
"RTN","ICDCODE",79,0)
 ;
"RTN","ICDCODE",80,0)
 N DATA,EFF,STR,INV
"RTN","ICDCODE",81,0)
 I $G(CODE)="" Q "-1^NO CODE SELECTED"
"RTN","ICDCODE",82,0)
 S INV="-1^INVALID CODE",CODE=+$$CODEN(CODE,80.1) ; find ien for code
"RTN","ICDCODE",83,0)
 I CODE<1 Q INV ; if no code, return error
"RTN","ICDCODE",84,0)
 I '$D(^ICD0(CODE)) Q INV ; if no code, return error
"RTN","ICDCODE",85,0)
 I '$G(SRC),$P(^ICD0(CODE,0),"^",8) Q "-1^VA LOCAL CODE SELECTED"
"RTN","ICDCODE",86,0)
 ;move 0-node into string
"RTN","ICDCODE",87,0)
 S DATA=$G(^ICD0(CODE,0)) I '$L(DATA) Q "-1^NO DATA"
"RTN","ICDCODE",88,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDAPIU(CDT))
"RTN","ICDCODE",89,0)
 S EFF=$$EFF^ICDSUPT(80.1,CODE,CDT)
"RTN","ICDCODE",90,0)
 S $P(DATA,"^",9)=$S(EFF<1:0,1:$P(EFF,"^"))
"RTN","ICDCODE",91,0)
 S $P(DATA,"^",11,12)=$P(EFF,"^",2,3)
"RTN","ICDCODE",92,0)
 Q CODE_"^"_DATA_"^"_$$MSG^ICDAPIU(CDT)
"RTN","ICDCODE",93,0)
 ;
"RTN","ICDCODE",94,0)
ICDD(CODE,OUTARR,CDT) ; returns ICD description in array
"RTN","ICDCODE",95,0)
 ; Input:
"RTN","ICDCODE",96,0)
 ;    CODE - ICD code  REQUIRED
"RTN","ICDCODE",97,0)
 ;    OUTARR - array to store description
"RTN","ICDCODE",98,0)
 ;             name of array - e.g. "ABC" or "ABC("TEST")"
"RTN","ICDCODE",99,0)
 ;             or temp arr.   Default = ^TMP("ICDD",$J)
"RTN","ICDCODE",100,0)
 ;    CDT - date to screen against, default = today (FileMan format)
"RTN","ICDCODE",101,0)
 ;          If CDT < 10/1/1978, use 10/1/1978
"RTN","ICDCODE",102,0)
 ;          If CDT > DT, use DT
"RTN","ICDCODE",103,0)
 ;          If CDT is year only, use first of the year
"RTN","ICDCODE",104,0)
 ;          If CDT is year and month only, use first of the month
"RTN","ICDCODE",105,0)
 ; Output:
"RTN","ICDCODE",106,0)
 ;    # of lines
"RTN","ICDCODE",107,0)
 ;    @OUTARR(1-n) = lines of description
"RTN","ICDCODE",108,0)
 ;    @OUTARR(n) = User Alert
"RTN","ICDCODE",109,0)
 ; -or-
"RTN","ICDCODE",110,0)
 ;    -1^error message
"RTN","ICDCODE",111,0)
 ;
"RTN","ICDCODE",112,0)
 ; **NOTE - USER MUST INITIALIZE ^TMP("ICDD",$J), IF USED**
"RTN","ICDCODE",113,0)
 ;
"RTN","ICDCODE",114,0)
 N ARR,END,I,N,GLOB,INV
"RTN","ICDCODE",115,0)
 I $G(CODE)="" Q "-1^NO CODE SELECTED"
"RTN","ICDCODE",116,0)
 S INV="-1^INVALID CODE"
"RTN","ICDCODE",117,0)
 I CODE?1.9N Q "-1^"_INV
"RTN","ICDCODE",118,0)
 S CODE=$$CODEN(CODE),GLOB=$P(CODE,"~",2),CODE=+CODE
"RTN","ICDCODE",119,0)
 I CODE<1!(GLOB["INVALID") Q INV ;if no code, return error
"RTN","ICDCODE",120,0)
 I '$D(@(GLOB_CODE_")")) Q INV ;if no code, return error
"RTN","ICDCODE",121,0)
 I $G(OUTARR)="" S OUTARR="^TMP(""ICDD"",$J,"
"RTN","ICDCODE",122,0)
 ;ensure OUTARR is proper format
"RTN","ICDCODE",123,0)
 I OUTARR'["(" S OUTARR=OUTARR_"("
"RTN","ICDCODE",124,0)
 I OUTARR[")" S OUTARR=$P(OUTARR,")")
"RTN","ICDCODE",125,0)
 S END=$E(OUTARR,$L(OUTARR)) I END'="("&(END'=",") S OUTARR=OUTARR_","
"RTN","ICDCODE",126,0)
 ;clear ^TMP("ICDD",$J - if used
"RTN","ICDCODE",127,0)
 I OUTARR="^TMP(""ICDD"",$J," K ^TMP("ICDD",$J)
"RTN","ICDCODE",128,0)
 S I=0,N=0,CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDAPIU(CDT))
"RTN","ICDCODE",129,0)
 S N=N+1,ARR=OUTARR_N_")",@ARR=$G(@(GLOB_CODE_",1)"))
"RTN","ICDCODE",130,0)
 S N=N+1,ARR=OUTARR_N_")",@ARR=" "
"RTN","ICDCODE",131,0)
 S N=N+1,ARR=OUTARR_N_")",@ARR=$$MSG^ICDAPIU(CDT)
"RTN","ICDCODE",132,0)
 Q N
"RTN","ICDCODE",133,0)
 ;
"RTN","ICDCODE",134,0)
CODEN(CODE,FILE) ; return ien of ICD code
"RTN","ICDCODE",135,0)
 ; Input:
"RTN","ICDCODE",136,0)
 ;    CODE - ICD code  REQUIRED
"RTN","ICDCODE",137,0)
 ;    FILE - File Number to search for code
"RTN","ICDCODE",138,0)
 ;           80 = ICD Diagnosis file
"RTN","ICDCODE",139,0)
 ;           80.1 = ICD Opereration/Procedure file
"RTN","ICDCODE",140,0)
 ;
"RTN","ICDCODE",141,0)
 ; Output: ien~global root
"RTN","ICDCODE",142,0)
 ;    where global root is:
"RTN","ICDCODE",143,0)
 ;           "^ICD9(" - File 80
"RTN","ICDCODE",144,0)
 ;           "^ICD0(" - File 80.1
"RTN","ICDCODE",145,0)
 ;    -or-
"RTN","ICDCODE",146,0)
 ;         -1~error message
"RTN","ICDCODE",147,0)
 ;
"RTN","ICDCODE",148,0)
 I $G(CODE)="" Q "-1~NO CODE SELECTED"
"RTN","ICDCODE",149,0)
 N Y,GLOB,INV
"RTN","ICDCODE",150,0)
 S INV="INVALID ",CODE=$P(CODE," ")
"RTN","ICDCODE",151,0)
 ;use FILE if passed
"RTN","ICDCODE",152,0)
 I $G(FILE) D  Q Y_"~"_GLOB
"RTN","ICDCODE",153,0)
 . S GLOB=$S(FILE=80:"^ICD9(",FILE=80.1:"^ICD0(",1:INV_"FILE")
"RTN","ICDCODE",154,0)
 . I $E(GLOB)'="^" S Y=-1,GLOB=INV_"FILE" Q
"RTN","ICDCODE",155,0)
 . S Y=$S(CODE?1.9N:$$CODEZ(CODE,GLOB),1:$$CODEBA(CODE,GLOB))
"RTN","ICDCODE",156,0)
 ;FILE not passed - report where found
"RTN","ICDCODE",157,0)
 I CODE?1.9N S GLOB="^ICD9(",Y=$$CODEZ(CODE,GLOB) D  G CODENQ
"RTN","ICDCODE",158,0)
 . I Y<1 S GLOB="^ICD0(",Y=$$CODEZ(CODE,GLOB)
"RTN","ICDCODE",159,0)
 S GLOB=$S(CODE?2N1"."1.3N:"^ICD0(",CODE?3N1".".3N!(CODE?1U2.3N1".".2N):"^ICD9(",1:-1)
"RTN","ICDCODE",160,0)
 S Y=$S('GLOB:$$CODEBA(CODE,GLOB),1:-1)
"RTN","ICDCODE",161,0)
CODENQ I Y<1 S GLOB=INV_"CODE"
"RTN","ICDCODE",162,0)
 Q Y_"~"_GLOB
"RTN","ICDCODE",163,0)
 ;
"RTN","ICDCODE",164,0)
CODEC(CODE,FILE) ;return the ICD code of an ien
"RTN","ICDCODE",165,0)
 ;  Input:
"RTN","ICDCODE",166,0)
 ;    CODE - ien of ICD code    REQUIRED
"RTN","ICDCODE",167,0)
 ;    FILE - File Number to search for code
"RTN","ICDCODE",168,0)
 ;           80 = ICD Diagnosis file
"RTN","ICDCODE",169,0)
 ;           80.1 = ICD Opereration/Procedure file
"RTN","ICDCODE",170,0)
 ; Output: ICD code, -1 if not found
"RTN","ICDCODE",171,0)
 ;
"RTN","ICDCODE",172,0)
 S CODE=$G(CODE) Q:CODE'?1.9N -1
"RTN","ICDCODE",173,0)
 N Y,GLOB
"RTN","ICDCODE",174,0)
 I $G(FILE) D  Q Y
"RTN","ICDCODE",175,0)
 . S GLOB=$S(FILE=80:"^ICD9(",FILE=80.1:"^ICD0(",1:-1)
"RTN","ICDCODE",176,0)
 . S Y=$S(GLOB<0:-1,1:$$CODEZ(CODE,GLOB))
"RTN","ICDCODE",177,0)
 ;FILE not passed - Search for 1st match
"RTN","ICDCODE",178,0)
 S Y=$$CODEZ(CODE,"^ICD9(",1)
"RTN","ICDCODE",179,0)
 Q $S(+Y<0:$$CODEZ(CODE,"^ICD0(",1),1:Y)
"RTN","ICDCODE",180,0)
 ;
"RTN","ICDCODE",181,0)
CODEZ(CODE,ROOT,FLG) ; based on code ien and root:
"RTN","ICDCODE",182,0)
 N Y,ICDL            ; if 'FLG return code existence, else zero node - piece 1
"RTN","ICDCODE",183,0)
 S Y=$P($G(@(ROOT_CODE_",0)")),"^"),ICDL=$L(Y) I ICDL,'$G(FLG) Q CODE
"RTN","ICDCODE",184,0)
 Q $S('ICDL:-1,1:Y)
"RTN","ICDCODE",185,0)
 ;
"RTN","ICDCODE",186,0)
CODEBA(CODE,ROOT) ;return ien based on code and root
"RTN","ICDCODE",187,0)
 N IEN
"RTN","ICDCODE",188,0)
 S IEN=$O(@(ROOT_"""BA"","""_CODE_" "","""")"),-1)
"RTN","ICDCODE",189,0)
 Q $S('IEN:-1,1:IEN)
"RTN","ICDCODE",190,0)
 ;
"RTN","ICDSUPT")
0^9^B4162240
"RTN","ICDSUPT",1,0)
ICDSUPT ;DLS/DEK - ICD SUPPORT FOR APIS ; 04/28/2003
"RTN","ICDSUPT",2,0)
 ;;18.0;DRG Grouper;**6**;Oct 20, 2000
"RTN","ICDSUPT",3,0)
 ;
"RTN","ICDSUPT",4,0)
 ; External References
"RTN","ICDSUPT",5,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","ICDSUPT",6,0)
 ;
"RTN","ICDSUPT",7,0)
EFF(FILE,CODE,EDT) ; returns effective date and status for code/modifier
"RTN","ICDSUPT",8,0)
 ; Input:
"RTN","ICDSUPT",9,0)
 ;    FILE = file number  REQUIRED
"RTN","ICDSUPT",10,0)
 ;           80 = ICD DX
"RTN","ICDSUPT",11,0)
 ;           80.1 = ICD O/P
"RTN","ICDSUPT",12,0)
 ;    CODE = ICD CODE ien  REQUIRED
"RTN","ICDSUPT",13,0)
 ;    EDT = date to check (FileMan format) REQUIRED
"RTN","ICDSUPT",14,0)
 ;
"RTN","ICDSUPT",15,0)
 ; Output:  STATUS^Inactivation Date^Activation Date
"RTN","ICDSUPT",16,0)
 ;          where STATUS = 1 = active
"RTN","ICDSUPT",17,0)
 ;                         0 = inactive  
"RTN","ICDSUPT",18,0)
 ;          Activation Date = date code became active
"RTN","ICDSUPT",19,0)
 ;          Inactivation Date = date code became inactive
"RTN","ICDSUPT",20,0)
 ;     -or-
"RTN","ICDSUPT",21,0)
 ;          -1^error message
"RTN","ICDSUPT",22,0)
 ;
"RTN","ICDSUPT",23,0)
 ; Variables:
"RTN","ICDSUPT",24,0)
 ;   EFILE = indirect file reference for code
"RTN","ICDSUPT",25,0)
 ;   EFF,EFFDT,EFFDOS,EFFDFLT = effective dates
"RTN","ICDSUPT",26,0)
 ;   EFFN = sub-entry ien
"RTN","ICDSUPT",27,0)
 ;   EFFST = effective status
"RTN","ICDSUPT",28,0)
 ;   STR = output
"RTN","ICDSUPT",29,0)
 ;
"RTN","ICDSUPT",30,0)
 I $G(CODE)="" Q "-1^NO CODE SELECTED"
"RTN","ICDSUPT",31,0)
 I $G(FILE)="" Q "-1^NO FILE SELECTED"
"RTN","ICDSUPT",32,0)
 I '(FILE=80!(FILE=80.1)) Q "-1^INVALID FILE"
"RTN","ICDSUPT",33,0)
 I '$G(EDT) Q "-1^NO DATE SELECTED"
"RTN","ICDSUPT",34,0)
 N EFILE,EFF,EFFN,STR,EFFDT,EFFST,EFFB,EFFDOS
"RTN","ICDSUPT",35,0)
 S EFILE=$S(FILE=80:"^ICD9(",1:"^ICD0(")_CODE_",66,"
"RTN","ICDSUPT",36,0)
 S EDT=$S($G(EDT)="":$$DT^XLFDT,1:$$DTBR^ICDAPIU(EDT))+.001 ;date business rules
"RTN","ICDSUPT",37,0)
 S EFF=$O(@(EFILE_"""B"","_EDT_")"),-1)
"RTN","ICDSUPT",38,0)
 I 'EFF Q "0^^"
"RTN","ICDSUPT",39,0)
 S EFFN=$O(@(EFILE_"""B"","_EFF_",0)")) ; node 66 (effective date) sub-entry
"RTN","ICDSUPT",40,0)
 S STR=$G(@(EFILE_EFFN_",0)"))
"RTN","ICDSUPT",41,0)
 I STR="" Q "0^^"
"RTN","ICDSUPT",42,0)
 ;set Opposite eff. date based on status
"RTN","ICDSUPT",43,0)
 S EFFDT=$P(STR,"^"),EFFST=$P(STR,"^",2),EFFB=0,EFF=+EFF
"RTN","ICDSUPT",44,0)
 F  S EFF=$O(@(EFILE_"""B"","_EFF_")"),-1) Q:'EFF!EFFB  D
"RTN","ICDSUPT",45,0)
 . S EFFN=$O(@(EFILE_"""B"","_EFF_",0)")) I 'EFFN S EFFB=1 Q
"RTN","ICDSUPT",46,0)
 . S EFFDOS=$G(@(EFILE_EFFN_",0)")) I 'EFFDOS S EFFB=1 Q
"RTN","ICDSUPT",47,0)
 . S EFFB=(EFFST'=$P(EFFDOS,"^",2))
"RTN","ICDSUPT",48,0)
 S EFFDOS=$P($G(EFFDOS),"^")
"RTN","ICDSUPT",49,0)
 I EFFST S $P(STR,"^",3,4)=(EFFDOS)_"^"_EFFDT
"RTN","ICDSUPT",50,0)
 E  S $P(STR,"^",3,4)=EFFDT_"^"_(EFFDOS)
"RTN","ICDSUPT",51,0)
 Q $P(STR,"^",2,4)
"RTN","ICDSUPT",52,0)
 ;
"RTN","ICDSUPT",53,0)
NUM(Y) ; convert ICD to $A() of alpha _ numeric portion
"RTN","ICDSUPT",54,0)
 ; Input:  Y - ICD code
"RTN","ICDSUPT",55,0)
 ; Output:  'plussed' value for ICD OP code,
"RTN","ICDSUPT",56,0)
 ;          numeric for ICD based on $A of 1st character (alpha)
"RTN","ICDSUPT",57,0)
 ;          concatenated with the remainder of the ICD DX code
"RTN","ICDSUPT",58,0)
 ;
"RTN","ICDSUPT",59,0)
 ;      **This does not convert to ien**
"RTN","ICDSUPT",60,0)
 ;
"RTN","ICDSUPT",61,0)
 ;  This converts to a numeric that may be used for range sorting
"RTN","ICDSUPT",62,0)
 ;
"RTN","ICDSUPT",63,0)
 ; A few ICD DX codes start with "E", "M", or "V" - use ascii
"RTN","ICDSUPT",64,0)
 ; Remaining ICD DX codes will use 10 as a prefix - insuring DX > OP
"RTN","ICDSUPT",65,0)
 ; All ICD OP codes match dd.d, dd.dd, or dd.ddd
"RTN","ICDSUPT",66,0)
 ;     where 'd' is a digit; e.g. "V83.89"=8683.89 and "008.8"=10008.8
"RTN","ICDSUPT",67,0)
 ;
"RTN","ICDSUPT",68,0)
 Q $S(Y?2N1"."1.3N:+Y,Y?1U2.3N1".".2N:$A($E(Y))_$E(Y,2,6),1:10_$E(Y,2,7))
"RTN","ICDSUPT",69,0)
 ;
"RTN","ICDUPDT")
0^8^B2326652
"RTN","ICDUPDT",1,0)
ICDUPDT ;DLS/DEK - ICD Update Protocol for ICD Codes ; 04/28/2003
"RTN","ICDUPDT",2,0)
 ;;18.0;DRG Grouper;**6**;Oct 20, 2000
"RTN","ICDUPDT",3,0)
 ;
"RTN","ICDUPDT",4,0)
 ; External References
"RTN","ICDUPDT",5,0)
 ;   DBIA   2053  UPDATE^DIE
"RTN","ICDUPDT",6,0)
 ;                        
"RTN","ICDUPDT",7,0)
 Q
"RTN","ICDUPDT",8,0)
 N I S I=0
"RTN","ICDUPDT",9,0)
 F I=2:1 S CSD=$P($T(CSDATA+I),";;",2) Q:CSD']""  D
"RTN","ICDUPDT",10,0)
 . D ADD91(757.91,CSD)
"RTN","ICDUPDT",11,0)
 Q
"RTN","ICDUPDT",12,0)
 ;
"RTN","ICDUPDT",13,0)
ADD91(FN,ZNODE) ; add entry to Change Log
"RTN","ICDUPDT",14,0)
 N FDA,FDAIEN,ANS,ZNODE
"RTN","ICDUPDT",15,0)
 ;S FDAIEN="+1,"_IEN_","
"RTN","ICDUPDT",16,0)
 S FDAIEN="+1,"
"RTN","ICDUPDT",17,0)
 K ^TMP("DIERR",$J)
"RTN","ICDUPDT",18,0)
 ;Assumption: Values come from CSD
"RTN","ICDUPDT",19,0)
 S FDA(FN,FDAIEN,.01)="ICD CODE"
"RTN","ICDUPDT",20,0)
 S FDA(FN,FDAIEN,.02)=2
"RTN","ICDUPDT",21,0)
 S FDA(FN,FDAIEN,.03)="SDO SHORT TEXT"
"RTN","ICDUPDT",22,0)
 S FDA(FN,FDAIEN,.04)="PROVIDED BY LEX"  ;global has ans. ???
"RTN","ICDUPDT",23,0)
 S FDA(FN,FDAIEN,.05)=$E(DT,1,3)_"1001"
"RTN","ICDUPDT",24,0)
 S FDA(FN,FDAIEN,.06)="STATUS"
"RTN","ICDUPDT",25,0)
 S FDA(FN,FDAIEN,.07)="REASON"
"RTN","ICDUPDT",26,0)
 S FDA(FN,FDAIEN,.08)="PREVIOUS CODE"
"RTN","ICDUPDT",27,0)
 S FDA(FN,FDAIEN,.09)="PREVIOUS SHORT TEXT"
"RTN","ICDUPDT",28,0)
 S FDA(FN,FDAIEN,.1)="LEXICON ENTRY"     ;global has ans. ???
"RTN","ICDUPDT",29,0)
 S FDA(FN,FDAIEN,.11)=IEN        ;ICD ENTRY
"RTN","ICDUPDT",30,0)
 S FDA(FN,FDAIEN,.12)=0  ;ICP ENTRY
"RTN","ICDUPDT",31,0)
 S FDA(FN,FDAIEN,.13)=0  ;CPT ENTRY
"RTN","ICDUPDT",32,0)
 S FDA(FN,FDAIEN,1)="SHORT DESCRIPTION"
"RTN","ICDUPDT",33,0)
 D UPDATE^DIE("","FDA")
"RTN","ICDUPDT",34,0)
 S ANS='$D(^TMP("DIERR",$J))
"RTN","ICDUPDT",35,0)
 W !,"IEN ",IEN,$S('ANS:" DIDNT",1:" DID")," ADD ",STA
"RTN","ICDUPDT",36,0)
 Q
"RTN","ICDUPDT",37,0)
 ;
"RTN","ICDUPDT",38,0)
CSDATA ;not an entry point
"RTN","ICDUPDT",39,0)
 Q       ;used for data
"RTN","ICDUPDT",40,0)
 ;;
"UP",80,80.066,-1)
80^66
"UP",80,80.066,0)
80.066
"UP",80.1,80.166,-1)
80.1^66
"UP",80.1,80.166,0)
80.166
"VER")
8.0^22.0
"^DD",80,80,.01,0)
CODE NUMBER^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>7!($L(X)<1)!'(X?.E1".".N) X
"^DD",80,80,.01,1,0)
^.1
"^DD",80,80,.01,1,1,0)
80^BA^MUMPS
"^DD",80,80,.01,1,1,1)
S ^ICD9("BA",X_" ",DA)=""
"^DD",80,80,.01,1,1,2)
K ^ICD9("BA",X_" ",DA)
"^DD",80,80,.01,1,1,"%D",0)
^^2^2^2940314^
"^DD",80,80,.01,1,1,"%D",1,0)
This forces X to be regarded as a string, thus disallowing the dropping of
"^DD",80,80,.01,1,1,"%D",2,0)
leading or final '0's.
"^DD",80,80,.01,1,2,0)
80^AB^MUMPS
"^DD",80,80,.01,1,2,1)
S ^ICD9("AB",X_" ",DA)=""
"^DD",80,80,.01,1,2,2)
K ^ICD9("AB",X_" ",DA)
"^DD",80,80,.01,1,2,"%D",0)
^^2^2^2940314^
"^DD",80,80,.01,1,2,"%D",1,0)
This forces X to be regarded as a string, thus disallowing the dropping of
"^DD",80,80,.01,1,2,"%D",2,0)
leading or final '0's.
"^DD",80,80,.01,1,3,0)
80^BAA^MUMPS
"^DD",80,80,.01,1,3,1)
S:+X\1[$P(X,".",1) ^ICD9("BA",+X,DA)=""
"^DD",80,80,.01,1,3,2)
K:+X\1[$P(X,".",1) ^ICD9("BA",+X,DA)
"^DD",80,80,.01,1,3,"%D",0)
^^2^2^2940314^
"^DD",80,80,.01,1,3,"%D",1,0)
This x-references under the integral part of the code number, within
"^DD",80,80,.01,1,3,"%D",2,0)
the "BA" node, to allow selection from the integral part only.
"^DD",80,80,.01,1,4,0)
80^ACT^MUMPS
"^DD",80,80,.01,1,4,1)
D SAHC^ICD9IDX
"^DD",80,80,.01,1,4,2)
D KAHC^ICD9IDX
"^DD",80,80,.01,1,4,"%D",0)
^.101^1^1^3030305^^
"^DD",80,80,.01,1,4,"%D",1,0)
Set and Kill Activation History
"^DD",80,80,.01,1,4,"DT")
3030221
"^DD",80,80,.01,3)
Answer must be 1-7 characters in length and contain a decimal point (e.g.: 042.)
"^DD",80,80,.01,21,0)
^.001^2^2^3010313^^^
"^DD",80,80,.01,21,1,0)
 
"^DD",80,80,.01,21,2,0)
ICD 9 code number
"^DD",80,80,.01,"DT")
3030221
"^DD",80,80,.01,"LAYGO",1,0)
W !?5,*7,"Adding ICD codes is prohibited!" I 0
"^DD",80,80,14,0)
AGE LOW^NJ2,0^^0;14^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",80,80,14,3)
Type a Number between 0 and 99, 0 Decimal Digits
"^DD",80,80,14,21,0)
^^2^2^3030227^
"^DD",80,80,14,21,1,0)
Code reasonable for age within Age(low) and
"^DD",80,80,14,21,2,0)
Age(high) values.  Blank, otherwise.
"^DD",80,80,14,"DT")
3030227
"^DD",80,80,15,0)
AGE HIGH^NJ2,0^^0;15^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",80,80,15,3)
Type a Number between 0 and 99, 0 Decimal Digits
"^DD",80,80,15,21,0)
^^2^2^3030227^
"^DD",80,80,15,21,1,0)
Code reasonable for age within Age(low) and
"^DD",80,80,15,21,2,0)
Age(high) values.  Blank, otherwise.
"^DD",80,80,15,"DT")
3030227
"^DD",80,80,16,0)
ACTIVATION DATE^D^^0;16^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",80,80,16,3)
Enter date the ICD Code was activated.
"^DD",80,80,16,21,0)
^^1^1^3030220^
"^DD",80,80,16,21,1,0)
Date the ICD code becomes/became activated.
"^DD",80,80,16,"DT")
3030220
"^DD",80,80,66,0)
EFFECTIVE DATE^80.066DA^^66;0
"^DD",80,80,66,21,0)
^.001^2^2^3030221^^^
"^DD",80,80,66,21,1,0)
This multiple contains versioned information for an ICD code.
"^DD",80,80,66,21,2,0)
A new entry is created whenever an ICD code's status is changed.
"^DD",80,80.066,0)
EFFECTIVE DATE SUB-FIELD^^.02^2
"^DD",80,80.066,0,"DT")
3030221
"^DD",80,80.066,0,"IX","B",80.066,.01)

"^DD",80,80.066,0,"NM","EFFECTIVE DATE")

"^DD",80,80.066,0,"UP")
80
"^DD",80,80.066,.01,0)
EFFECTIVE DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",80,80.066,.01,1,0)
^.1
"^DD",80,80.066,.01,1,1,0)
80.066^B
"^DD",80,80.066,.01,1,1,1)
S ^ICD9(DA(1),66,"B",$E(X,1,30),DA)=""
"^DD",80,80.066,.01,1,1,2)
K ^ICD9(DA(1),66,"B",$E(X,1,30),DA)
"^DD",80,80.066,.01,1,2,0)
80^ACT^MUMPS
"^DD",80,80.066,.01,1,2,1)
D SAHD^ICD9IDX
"^DD",80,80.066,.01,1,2,2)
D KAHD^ICD9IDX
"^DD",80,80.066,.01,1,2,"%D",0)
^.101^1^1^3030305^^
"^DD",80,80.066,.01,1,2,"%D",1,0)
Set and Kill Activation History
"^DD",80,80.066,.01,1,2,"DT")
3030221
"^DD",80,80.066,.01,21,0)
^.001^1^1^3030221^^^^
"^DD",80,80.066,.01,21,1,0)
Date versioned information becomes/became effective.
"^DD",80,80.066,.01,"DT")
3030221
"^DD",80,80.066,.02,0)
STATUS^RS^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",80,80.066,.02,1,0)
^.1
"^DD",80,80.066,.02,1,1,0)
80^ACT^MUMPS
"^DD",80,80.066,.02,1,1,1)
D SAHS^ICD9IDX
"^DD",80,80.066,.02,1,1,2)
D KAHS^ICD9IDX
"^DD",80,80.066,.02,1,1,"%D",0)
^.101^1^1^3030305^^
"^DD",80,80.066,.02,1,1,"%D",1,0)
Set and Kill Activation History
"^DD",80,80.066,.02,1,1,"DT")
3030221
"^DD",80,80.066,.02,3)
Enter status of code.
"^DD",80,80.066,.02,21,0)
^.001^1^1^3030221^^
"^DD",80,80.066,.02,21,1,0)
Set = 1 when the code is active.
"^DD",80,80.066,.02,"DT")
3030221
"^DD",80.1,80.1,.01,0)
CODE NUMBER^RF^^0;1^K:X[""""!(X'?.ANP)!($A(X)=45) X I $D(X) K:$L(X)>6!($L(X)<1)!'(X?.N1".".N) X
"^DD",80.1,80.1,.01,.1)
ICD9 OPERATION/PROCEDURE CODE
"^DD",80.1,80.1,.01,1,0)
^.1
"^DD",80.1,80.1,.01,1,1,0)
80.1^BA^MUMPS
"^DD",80.1,80.1,.01,1,1,1)
S ^ICD0("BA",X_" ",DA)=""
"^DD",80.1,80.1,.01,1,1,2)
K ^ICD0("BA",X_" ",DA)
"^DD",80.1,80.1,.01,1,1,"%D",0)
^^2^2^2940314^
"^DD",80.1,80.1,.01,1,1,"%D",1,0)
This forces X to be regarded as a string, thus disallowing the dropping of
"^DD",80.1,80.1,.01,1,1,"%D",2,0)
final '0's.
"^DD",80.1,80.1,.01,1,2,0)
80.1^BAA^MUMPS
"^DD",80.1,80.1,.01,1,2,1)
S:+X[$P(X,".",1) ^ICD0("BA",+X,DA)=""
"^DD",80.1,80.1,.01,1,2,2)
K:+X[$P(X,".",1) ^ICD0("BA",+X,DA)
"^DD",80.1,80.1,.01,1,2,"%D",0)
^^1^1^2940314^
"^DD",80.1,80.1,.01,1,2,"%D",1,0)
This cross ref. looks at the integral portion of the code, and sort by that.
"^DD",80.1,80.1,.01,1,3,0)
80.1^AB
"^DD",80.1,80.1,.01,1,3,1)
S ^ICD0("AB",$E(X,1,30),DA)=""
"^DD",80.1,80.1,.01,1,3,2)
K ^ICD0("AB",$E(X,1,30),DA)
"^DD",80.1,80.1,.01,1,3,"%D",0)
^^2^2^2940314^^^^
"^DD",80.1,80.1,.01,1,3,"%D",1,0)
This forces X to be regarded as a string, thus disallowing the dropping of
"^DD",80.1,80.1,.01,1,3,"%D",2,0)
final '0's.
"^DD",80.1,80.1,.01,1,4,0)
80.1^ACT^MUMPS
"^DD",80.1,80.1,.01,1,4,1)
D SAHC^ICD0IDX
"^DD",80.1,80.1,.01,1,4,2)
D KAHC^ICD0IDX
"^DD",80.1,80.1,.01,1,4,"%D",0)
^.101^1^1^3030305^^
"^DD",80.1,80.1,.01,1,4,"%D",1,0)
Set and Kill Activation History
"^DD",80.1,80.1,.01,1,4,"DT")
3030221
"^DD",80.1,80.1,.01,3)
Answer must be 1-6 characters in length and contain a decimal point.
"^DD",80.1,80.1,.01,21,0)
^^1^1^2941229^^
"^DD",80.1,80.1,.01,21,1,0)
ICD9 procedure or operation code
"^DD",80.1,80.1,.01,"DT")
3030221
"^DD",80.1,80.1,.01,"LAYGO",1,0)
W !?5,*7,"Adding ICD codes is prohibited!" I 0
"^DD",80.1,80.1,12,0)
ACTIVATION DATE^D^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",80.1,80.1,12,3)
Enter date ICD Code was activated.
"^DD",80.1,80.1,12,21,0)
^^1^1^3030220^
"^DD",80.1,80.1,12,21,1,0)
Date the ICD code becomes/became activated.
"^DD",80.1,80.1,12,"DT")
3030220
"^DD",80.1,80.1,66,0)
EFFECTIVE DATE^80.166DA^^66;0
"^DD",80.1,80.166,0)
EFFECTIVE DATE SUB-FIELD^^.02^2
"^DD",80.1,80.166,0,"DT")
3030221
"^DD",80.1,80.166,0,"IX","B",80.166,.01)

"^DD",80.1,80.166,0,"NM","EFFECTIVE DATE")

"^DD",80.1,80.166,0,"UP")
80.1
"^DD",80.1,80.166,.01,0)
EFFECTIVE DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",80.1,80.166,.01,1,0)
^.1
"^DD",80.1,80.166,.01,1,1,0)
80.166^B
"^DD",80.1,80.166,.01,1,1,1)
S ^ICD0(DA(1),66,"B",$E(X,1,30),DA)=""
"^DD",80.1,80.166,.01,1,1,2)
K ^ICD0(DA(1),66,"B",$E(X,1,30),DA)
"^DD",80.1,80.166,.01,1,2,0)
80.1^ACT^MUMPS
"^DD",80.1,80.166,.01,1,2,1)
D SAHD^ICD0IDX
"^DD",80.1,80.166,.01,1,2,2)
D KAHD^ICD0IDX
"^DD",80.1,80.166,.01,1,2,"%D",0)
^.101^1^1^3030305^^
"^DD",80.1,80.166,.01,1,2,"%D",1,0)
Set and Kill Activation History
"^DD",80.1,80.166,.01,1,2,"DT")
3030221
"^DD",80.1,80.166,.01,21,0)
^.001^1^1^3030221^^
"^DD",80.1,80.166,.01,21,1,0)
Date versioned information becomes/became effective.
"^DD",80.1,80.166,.01,"DT")
3030221
"^DD",80.1,80.166,.02,0)
STATUS^RS^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",80.1,80.166,.02,1,0)
^.1
"^DD",80.1,80.166,.02,1,1,0)
80.1^ACT^MUMPS
"^DD",80.1,80.166,.02,1,1,1)
D SAHS^ICD0IDX
"^DD",80.1,80.166,.02,1,1,2)
D KAHS^ICD0IDX
"^DD",80.1,80.166,.02,1,1,"%D",0)
^.101^1^1^3030305^^
"^DD",80.1,80.166,.02,1,1,"%D",1,0)
Set and Kill Activation History
"^DD",80.1,80.166,.02,1,1,"DT")
3030221
"^DD",80.1,80.166,.02,3)
Enter code status.
"^DD",80.1,80.166,.02,21,0)
^.001^1^1^3030221^^^
"^DD",80.1,80.166,.02,21,1,0)
Set = 1 when the code is active.
"^DD",80.1,80.166,.02,"DT")
3030221
**INSTALL NAME**
ICPT*6.0*14
"BLD",3233,0)
ICPT*6.0*14^CPT/HCPCS CODES^0^3030910^y
"BLD",3233,1,0)
^^2^2^3030521^^
"BLD",3233,1,1,0)
Please see the National Patch Module for details of the enhancements 
"BLD",3233,1,2,0)
included in this patch. 
"BLD",3233,4,0)
^9.64PA^81.3^2
"BLD",3233,4,81,0)
81
"BLD",3233,4,81,2,0)
^9.641^81.02^2
"BLD",3233,4,81,2,81,0)
CPT  (File-top level)
"BLD",3233,4,81,2,81,1,0)
^9.6411^8^3
"BLD",3233,4,81,2,81,1,.01,0)
CPT CODE
"BLD",3233,4,81,2,81,1,7,0)
INACTIVE DATE
"BLD",3233,4,81,2,81,1,8,0)
ACTIVE DATE
"BLD",3233,4,81,2,81.02,0)
EFFECTIVE DATE  (sub-file)
"BLD",3233,4,81,2,81.02,1,0)
^9.6411^.02^2
"BLD",3233,4,81,2,81.02,1,.01,0)
EFFECTIVE DATE
"BLD",3233,4,81,2,81.02,1,.02,0)
STATUS
"BLD",3233,4,81,222)
y^y^p^^^^n
"BLD",3233,4,81.3,0)
81.3
"BLD",3233,4,81.3,2,0)
^9.641^81.33^2
"BLD",3233,4,81.3,2,81.3,0)
CPT MODIFIER  (File-top level)
"BLD",3233,4,81.3,2,81.3,1,0)
^9.6411^8^3
"BLD",3233,4,81.3,2,81.3,1,.01,0)
MODIFIER
"BLD",3233,4,81.3,2,81.3,1,7,0)
INACTIVE DATE
"BLD",3233,4,81.3,2,81.3,1,8,0)
ACTIVE DATE
"BLD",3233,4,81.3,2,81.33,0)
EFFECTIVE DATE  (sub-file)
"BLD",3233,4,81.3,2,81.33,1,0)
^9.6411^.02^2
"BLD",3233,4,81.3,2,81.33,1,.01,0)
EFFECTIVE DATE
"BLD",3233,4,81.3,2,81.33,1,.02,0)
STATUS
"BLD",3233,4,81.3,222)
y^y^p^^^^n
"BLD",3233,4,"APDD",81,81)

"BLD",3233,4,"APDD",81,81,.01)

"BLD",3233,4,"APDD",81,81,7)

"BLD",3233,4,"APDD",81,81,8)

"BLD",3233,4,"APDD",81,81.02)

"BLD",3233,4,"APDD",81,81.02,.01)

"BLD",3233,4,"APDD",81,81.02,.02)

"BLD",3233,4,"APDD",81.3,81.3)

"BLD",3233,4,"APDD",81.3,81.3,.01)

"BLD",3233,4,"APDD",81.3,81.3,7)

"BLD",3233,4,"APDD",81.3,81.3,8)

"BLD",3233,4,"APDD",81.3,81.33)

"BLD",3233,4,"APDD",81.3,81.33,.01)

"BLD",3233,4,"APDD",81.3,81.33,.02)

"BLD",3233,4,"B",81,81)

"BLD",3233,4,"B",81.3,81.3)

"BLD",3233,"ABPKG")
n
"BLD",3233,"INI")

"BLD",3233,"INIT")
POST^ICPT614E
"BLD",3233,"KRN",0)
^9.67PA^19^17
"BLD",3233,"KRN",.4,0)
.4
"BLD",3233,"KRN",.401,0)
.401
"BLD",3233,"KRN",.402,0)
.402
"BLD",3233,"KRN",.403,0)
.403
"BLD",3233,"KRN",.5,0)
.5
"BLD",3233,"KRN",.84,0)
.84
"BLD",3233,"KRN",3.6,0)
3.6
"BLD",3233,"KRN",3.8,0)
3.8
"BLD",3233,"KRN",9.2,0)
9.2
"BLD",3233,"KRN",9.8,0)
9.8
"BLD",3233,"KRN",9.8,"NM",0)
^9.68A^9^8
"BLD",3233,"KRN",9.8,"NM",1,0)
ICPTAPIU^^0^B35115686
"BLD",3233,"KRN",9.8,"NM",2,0)
ICPTCOD^^0^B27701443
"BLD",3233,"KRN",9.8,"NM",3,0)
ICPTMOD^^0^B19453032
"BLD",3233,"KRN",9.8,"NM",4,0)
ICPTIDX^^0^B11963252
"BLD",3233,"KRN",9.8,"NM",5,0)
ICPTMIDX^^0^B12426281
"BLD",3233,"KRN",9.8,"NM",6,0)
ICPT614E^^0^B10631074
"BLD",3233,"KRN",9.8,"NM",8,0)
ICPTAU^^0^B2311847
"BLD",3233,"KRN",9.8,"NM",9,0)
ICPTSUPT^^0^B5348332
"BLD",3233,"KRN",9.8,"NM","B","ICPT614E",6)

"BLD",3233,"KRN",9.8,"NM","B","ICPTAPIU",1)

"BLD",3233,"KRN",9.8,"NM","B","ICPTAU",8)

"BLD",3233,"KRN",9.8,"NM","B","ICPTCOD",2)

"BLD",3233,"KRN",9.8,"NM","B","ICPTIDX",4)

"BLD",3233,"KRN",9.8,"NM","B","ICPTMIDX",5)

"BLD",3233,"KRN",9.8,"NM","B","ICPTMOD",3)

"BLD",3233,"KRN",9.8,"NM","B","ICPTSUPT",9)

"BLD",3233,"KRN",19,0)
19
"BLD",3233,"KRN",19.1,0)
19.1
"BLD",3233,"KRN",101,0)
101
"BLD",3233,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",3233,"KRN",101,"NM",1,0)
ICPT CODE UPDATE EVENT^^0
"BLD",3233,"KRN",101,"NM","B","ICPT CODE UPDATE EVENT",1)

"BLD",3233,"KRN",409.61,0)
409.61
"BLD",3233,"KRN",771,0)
771
"BLD",3233,"KRN",870,0)
870
"BLD",3233,"KRN",8994,0)
8994
"BLD",3233,"KRN","B",.4,.4)

"BLD",3233,"KRN","B",.401,.401)

"BLD",3233,"KRN","B",.402,.402)

"BLD",3233,"KRN","B",.403,.403)

"BLD",3233,"KRN","B",.5,.5)

"BLD",3233,"KRN","B",.84,.84)

"BLD",3233,"KRN","B",3.6,3.6)

"BLD",3233,"KRN","B",3.8,3.8)

"BLD",3233,"KRN","B",9.2,9.2)

"BLD",3233,"KRN","B",9.8,9.8)

"BLD",3233,"KRN","B",19,19)

"BLD",3233,"KRN","B",19.1,19.1)

"BLD",3233,"KRN","B",101,101)

"BLD",3233,"KRN","B",409.61,409.61)

"BLD",3233,"KRN","B",771,771)

"BLD",3233,"KRN","B",870,870)

"BLD",3233,"KRN","B",8994,8994)

"BLD",3233,"PRE")
ICPT614E
"BLD",3233,"QUES",0)
^9.62^^
"BLD",3233,"REQB",0)
^9.611^^
"FIA",81)
CPT
"FIA",81,0)
^ICPT(
"FIA",81,0,0)
81I
"FIA",81,0,1)
y^y^p^^^^n
"FIA",81,0,10)

"FIA",81,0,11)

"FIA",81,0,"RLRO")

"FIA",81,0,"VR")
6.0^ICPT
"FIA",81,81)
1
"FIA",81,81,.01)

"FIA",81,81,7)

"FIA",81,81,8)

"FIA",81,81,60)

"FIA",81,81.02)
1
"FIA",81,81.02,.01)

"FIA",81,81.02,.02)

"FIA",81.3)
CPT MODIFIER
"FIA",81.3,0)
^DIC(81.3,
"FIA",81.3,0,0)
81.3I
"FIA",81.3,0,1)
y^y^p^^^^n
"FIA",81.3,0,10)

"FIA",81.3,0,11)

"FIA",81.3,0,"RLRO")

"FIA",81.3,0,"VR")
6.0^ICPT
"FIA",81.3,81.3)
1
"FIA",81.3,81.3,.01)

"FIA",81.3,81.3,7)

"FIA",81.3,81.3,8)

"FIA",81.3,81.3,60)

"FIA",81.3,81.33)
1
"FIA",81.3,81.33,.01)

"FIA",81.3,81.33,.02)

"INIT")
POST^ICPT614E
"KRN",101,5933,-1)
0^1
"KRN",101,5933,0)
ICPT CODE UPDATE EVENT^CPT Code Update^^X^^^^^^^^
"KRN",101,5933,1,0)
^^2^2^3030325^
"KRN",101,5933,1,1,0)
Protocol Event for Notifying Applications that an
"KRN",101,5933,1,2,0)
update to File #81 has occurred.
"KRN",101,5933,20)
D ^ICPTAU
"KRN",101,5933,99)
59380,54557
"MBREQ")
1
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"PKG",302,-1)
1^1
"PKG",302,0)
CPT/HCPCS CODES^ICPT^ICPT/HCPCS CODES
"PKG",302,20,0)
^9.402P^^
"PKG",302,22,0)
^9.49I^1^1
"PKG",302,22,1,0)
6.0^2970519^2970530^1294
"PKG",302,22,1,"PAH",1,0)
14^3030910^1118
"PKG",302,22,1,"PAH",1,1,0)
^^2^2^3030910
"PKG",302,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details of the enhancements 
"PKG",302,22,1,"PAH",1,1,2,0)
included in this patch. 
"PRE")
ICPT614E
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","ICPT614E")
0^6^B10631074
"RTN","ICPT614E",1,0)
ICPT614E ;DLS/DEK- ICPT Env. Check; 04/28/2003
"RTN","ICPT614E",2,0)
 ;;6.0;CPT/HCPCS;**14**;May 19, 1997
"RTN","ICPT614E",3,0)
 ;
"RTN","ICPT614E",4,0)
 ; External References
"RTN","ICPT614E",5,0)
 ;   DBIA  10141  $$PATCH^XPDUTL
"RTN","ICPT614E",6,0)
 ;   DBIA  10141  BMES^XPDUTL   
"RTN","ICPT614E",7,0)
 ;   DBIA  10141  MES^XPDUTL    
"RTN","ICPT614E",8,0)
 ;                    
"RTN","ICPT614E",9,0)
ENVCHK ; Check Environment for needed vars.
"RTN","ICPT614E",10,0)
 N PATCH,BUILD
"RTN","ICPT614E",11,0)
 S XPDABORT="",PATCH="ICPT*6.0*13",BUILD="ICPT*6.0*14"
"RTN","ICPT614E",12,0)
 F PATCH="ICPT*6.0*12","ICPT*6.0*13" D  Q:+($G(XPDABORT))>0 
"RTN","ICPT614E",13,0)
 . I '$$PATCH^XPDUTL(PATCH) D
"RTN","ICPT614E",14,0)
 . . D BM(PATCH_" is required and MUST be installed prior to this patch."),ABRT
"RTN","ICPT614E",15,0)
 I +($$CPD)'>0,+($G(XPDENV))=0 D
"RTN","ICPT614E",16,0)
 . I +($G(^LEXM(0,"CHECKSUM")))'=70183825959 D
"RTN","ICPT614E",17,0)
 . . D BM("Global ^LEXM either not found or incomplete."),ABRT
"RTN","ICPT614E",18,0)
 Q:+($G(XPDABORT))>0  D PROGCHK(.XPDABORT)
"RTN","ICPT614E",19,0)
 I $G(XPDABORT)="" K XPDABORT D OK
"RTN","ICPT614E",20,0)
 Q
"RTN","ICPT614E",21,0)
 ;
"RTN","ICPT614E",22,0)
PROGCHK(XPDABORT) ; Check for Programmer
"RTN","ICPT614E",23,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") D
"RTN","ICPT614E",24,0)
 . D BM("Programming variables are not set up properly."),ABRT
"RTN","ICPT614E",25,0)
 Q
"RTN","ICPT614E",26,0)
ABRT ; Abort - All or nothing
"RTN","ICPT614E",27,0)
 S XPDABORT=1,XPDQUIT=1,XPDQUIT("LEX*2.0*25")=1
"RTN","ICPT614E",28,0)
 S XPDQUIT("ICD*18.0*6")=1,XPDQUIT("ICPT*6.0*14")=1
"RTN","ICPT614E",29,0)
 S XPDQUIT("CSV UTIL 1.0")=1
"RTN","ICPT614E",30,0)
 Q
"RTN","ICPT614E",31,0)
OK ; Environment is Ok
"RTN","ICPT614E",32,0)
 Q:+($G(XPDENV))>0
"RTN","ICPT614E",33,0)
 D BM(("  Environment for patch/build "_BUILD_" is ok")),M(" ")
"RTN","ICPT614E",34,0)
 Q
"RTN","ICPT614E",35,0)
 ;                  
"RTN","ICPT614E",36,0)
POST ; Post-Install - Rebuild Indexes
"RTN","ICPT614E",37,0)
 N ZTRTN,ZTDESC,ZTSK,ZTDTH,ZTIO,CPT1,CPT2 S (CPT1,CPT2)=0
"RTN","ICPT614E",38,0)
 S ZTRTN="CPTP^ICPT614E",ZTDESC="Re-Index file #81"
"RTN","ICPT614E",39,0)
 S ZTIO="",ZTDTH=$H K ZTSK D ^%ZTLOAD,HOME^%ZIS
"RTN","ICPT614E",40,0)
 S:+($G(ZTSK))>0 CPT1=+($G(ZTSK))
"RTN","ICPT614E",41,0)
 S ZTRTN="CPTM^ICPT614E",ZTDESC="Re-Index file #81.3"
"RTN","ICPT614E",42,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS
"RTN","ICPT614E",43,0)
 S:+($G(ZTSK))>0 CPT2=+($G(ZTSK))
"RTN","ICPT614E",44,0)
 I CPT1>0,CPT2'>0 D BM(("Task "_+CPT1_" to rebuild indexes for CPT Procedures file #81 started"))
"RTN","ICPT614E",45,0)
 I CPT1'>0,CPT2>0 D BM(("Task "_+CPT2_" to rebuild indexes for CPT Modifier file #81.3 started"))
"RTN","ICPT614E",46,0)
 I CPT1>0,CPT2>0 D
"RTN","ICPT614E",47,0)
 . D BM(("Task "_+CPT1_" to rebuild indexes for CPT Procedures file #81 started"))
"RTN","ICPT614E",48,0)
 . D M(("Task "_+CPT2_" to rebuild indexes for CPT Modifier file #81.3 started"))
"RTN","ICPT614E",49,0)
 K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,CPT1,CPT2
"RTN","ICPT614E",50,0)
 Q
"RTN","ICPT614E",51,0)
CPTP ;   ICPT( Procedures
"RTN","ICPT614E",52,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ICPT614E",53,0)
 N DA,DIK S U="^",DT=$$DT^XLFDT,DIK="^ICPT(",DA=0
"RTN","ICPT614E",54,0)
 F  S DA=$O(^ICPT(DA)) Q:+DA=0  K ^ICPT(DA,60,"B")
"RTN","ICPT614E",55,0)
 K ^ICPT("ACT"),^ICPT("B"),^ICPT("BA"),^ICPT("C")
"RTN","ICPT614E",56,0)
 K ^ICPT("D"),^ICPT("E"),^ICPT("F") D IXALL^DIK
"RTN","ICPT614E",57,0)
 Q
"RTN","ICPT614E",58,0)
CPTM ;   DIC(81.3, Modifiers
"RTN","ICPT614E",59,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ICPT614E",60,0)
 N DA,DIK S U="^",DT=$$DT^XLFDT,DIK="^DIC(81.3,",DA=0
"RTN","ICPT614E",61,0)
 F  S DA=$O(^DIC(81.3,DA)) Q:+DA=0  D
"RTN","ICPT614E",62,0)
 . K ^DIC(81.3,DA,60,"B"),^DIC(81.3,DA,"M")
"RTN","ICPT614E",63,0)
 K ^DIC(81.3,"ACT"),^DIC(81.3,"B"),^DIC(81.3,"BA")
"RTN","ICPT614E",64,0)
 K ^DIC(81.3,"C"),^DIC(81.3,"D") D IXALL^DIK
"RTN","ICPT614E",65,0)
 Q
"RTN","ICPT614E",66,0)
CPD(X) ;   Check Current Patched Data is installed
"RTN","ICPT614E",67,0)
 Q:$D(^LEX(757.1,"B",180595,257762))&('$D(^LEX(757.02,"B",322162,3296))) 1
"RTN","ICPT614E",68,0)
 Q 0
"RTN","ICPT614E",69,0)
 ;                  
"RTN","ICPT614E",70,0)
 ; Miscellaneous
"RTN","ICPT614E",71,0)
BM(X) ;   Blank Line with Message
"RTN","ICPT614E",72,0)
 S X=" "_$G(X) Q:$D(GMTSQT)  D:$D(XPDNM) BMES^XPDUTL($G(X)) W:'$D(XPDNM) !!,$G(X) Q
"RTN","ICPT614E",73,0)
M(X) ;   Message
"RTN","ICPT614E",74,0)
 S X=" "_$G(X) Q:$D(GMTSQT)  D:$D(XPDNM) MES^XPDUTL($G(X)) W:'$D(XPDNM) !,$G(X) Q
"RTN","ICPTAPIU")
0^1^B35115686
"RTN","ICPTAPIU",1,0)
ICPTAPIU ;ALB/ABR/DEK - CPT UTILITIES FOR APIS ; 04/28/2003
"RTN","ICPTAPIU",2,0)
 ;;6.0;CPT/HCPCS;**1,6,12,14**;May 19, 1997
"RTN","ICPTAPIU",3,0)
 ;
"RTN","ICPTAPIU",4,0)
 ; External References
"RTN","ICPTAPIU",5,0)
 ;   DBIA 10011  ^DIWP
"RTN","ICPTAPIU",6,0)
 ;   DBIA 10029  ^DIWW
"RTN","ICPTAPIU",7,0)
 ;   DBIA 10103  $$DT^XLFDT 
"RTN","ICPTAPIU",8,0)
 ;                          
"RTN","ICPTAPIU",9,0)
CPTDIST() ; Distribution Date
"RTN","ICPTAPIU",10,0)
 ;  Input:  none (extrinsic variable)
"RTN","ICPTAPIU",11,0)
 ; Output:  returns DISTRIBUTION DATE, date codes effective in Austin
"RTN","ICPTAPIU",12,0)
 Q $P($G(^DIC(81.2,1,0)),"^",2)
"RTN","ICPTAPIU",13,0)
 ;
"RTN","ICPTAPIU",14,0)
CAT(CAT,DFN) ; Return CATEGORY NAME given IEN
"RTN","ICPTAPIU",15,0)
 ;   Input:  CAT = category ien REQUIRED
"RTN","ICPTAPIU",16,0)
 ;           DFN - not in use but included in anticipation of future need
"RTN","ICPTAPIU",17,0)
 ;
"RTN","ICPTAPIU",18,0)
 ;  Output:  STR = CATEGORY NAME^SOURCE (C or H)^MAJOR CATEGORY IEN^MAJOR CATEGORY NAME  
"RTN","ICPTAPIU",19,0)
 ;           STR = -1^error message, if error condition occurred
"RTN","ICPTAPIU",20,0)
 ;
"RTN","ICPTAPIU",21,0)
 N CATN,STR,MCATIEN,MCATNM
"RTN","ICPTAPIU",22,0)
 S (MCATIEN,MCATNM)=""
"RTN","ICPTAPIU",23,0)
 I $G(CAT)="" S STR="-1^NO CATEGORY SELECTED" G CATQ
"RTN","ICPTAPIU",24,0)
 I '$G(CAT) S STR="-1^INVALID CATEGORY FORMAT" G CATQ
"RTN","ICPTAPIU",25,0)
 S STR=$G(^DIC(81.1,+CAT,0))
"RTN","ICPTAPIU",26,0)
 I '$L(STR) S STR="-1^NO SUCH CATEGORY" G CATQ
"RTN","ICPTAPIU",27,0)
 I $P(STR,"^",2)="" S STR="-1^TYPE OF CATEGORY UNSPECIFIED" G CATQ
"RTN","ICPTAPIU",28,0)
 S CATN=$P(STR,"^")
"RTN","ICPTAPIU",29,0)
 I $P(STR,"^",2)="m" S MCATNM=CATN,MCATIEN=+CAT
"RTN","ICPTAPIU",30,0)
 I $P(STR,"^",2)="s" D
"RTN","ICPTAPIU",31,0)
 . S MCATIEN=$P(STR,"^",3)
"RTN","ICPTAPIU",32,0)
 . I MCATIEN S MCATNM=$P($G(^DIC(81.1,MCATIEN,0)),"^")
"RTN","ICPTAPIU",33,0)
 S STR=CATN_"^"_$P(STR,"^",6)_"^"_MCATIEN_"^"_MCATNM
"RTN","ICPTAPIU",34,0)
CATQ Q STR
"RTN","ICPTAPIU",35,0)
 ;
"RTN","ICPTAPIU",36,0)
NUM(Y) ; Convert CPT/HCPCS Code to Numeric
"RTN","ICPTAPIU",37,0)
 ;    Convert HCPCS to $A() of Alpha _ Numeric Portion
"RTN","ICPTAPIU",38,0)
 ;
"RTN","ICPTAPIU",39,0)
 ;   Input:  Y - CPT or HCPCS code
"RTN","ICPTAPIU",40,0)
 ;
"RTN","ICPTAPIU",41,0)
 ;  Output:  'plussed' value for CPT code,
"RTN","ICPTAPIU",42,0)
 ;         numeric for HCPCS based on $A of 1st character (alpha)
"RTN","ICPTAPIU",43,0)
 ;          concatenated with the 4-digit portion of code
"RTN","ICPTAPIU",44,0)
 ;
"RTN","ICPTAPIU",45,0)
 ;  **This does not convert to ien**
"RTN","ICPTAPIU",46,0)
 ;  This converts to a numeric that may be used for range sorting
"RTN","ICPTAPIU",47,0)
 ;
"RTN","ICPTAPIU",48,0)
 ;Q $S(Y:+Y,1:$A(Y)_$E(Y,2,5))
"RTN","ICPTAPIU",49,0)
 ; modified in 2002 to handle few CPT codes that end with "T"
"RTN","ICPTAPIU",50,0)
 ; needed to add multiplier to create higher and unique number
"RTN","ICPTAPIU",51,0)
 ; e.g. "Z9999"=909999 and "0001T"=8400001
"RTN","ICPTAPIU",52,0)
 Q $S(Y?1.N:+Y,Y?4N1A:$A($E(Y,5))*10_$E(Y,1,4),1:$A(Y)_$E(Y,2,5))
"RTN","ICPTAPIU",53,0)
 ;
"RTN","ICPTAPIU",54,0)
COPY ; API to Print Copyright Information
"RTN","ICPTAPIU",55,0)
 ;
"RTN","ICPTAPIU",56,0)
 N DIR,DIWL,DIWR,DIWF,VARR,VAXX,X
"RTN","ICPTAPIU",57,0)
 Q:'$D(^DIC(81.2,1))  K ^UTILITY($J,"W")
"RTN","ICPTAPIU",58,0)
 W !!! S DIWL=1,DIWR=80,DIWF="W"
"RTN","ICPTAPIU",59,0)
 F VARR=0:0 S VARR=$O(^DIC(81.2,1,1,VARR)) Q:VARR'>0  S VAXX=^(VARR,0),X=VAXX D ^DIWP
"RTN","ICPTAPIU",60,0)
 D:$D(VAXX) ^DIWW
"RTN","ICPTAPIU",61,0)
 Q
"RTN","ICPTAPIU",62,0)
 ;                   
"RTN","ICPTAPIU",63,0)
STATCHK(CODE,CDT) ; Check Status of CPT Code or Modifier
"RTN","ICPTAPIU",64,0)
 ; Input:
"RTN","ICPTAPIU",65,0)
 ;    CODE - CPT Code/Modifier    REQUIRED
"RTN","ICPTAPIU",66,0)
 ;    CDT - Date to screen against (FileMan format, default = today)
"RTN","ICPTAPIU",67,0)
 ;
"RTN","ICPTAPIU",68,0)
 ; Output:
"RTN","ICPTAPIU",69,0)
 ;    2-Piece String containing the status of the code/modifier
"RTN","ICPTAPIU",70,0)
 ;    and the IEN if the code/modifier exists, else -1.
"RTN","ICPTAPIU",71,0)
 ;    The following are possible outputs:
"RTN","ICPTAPIU",72,0)
 ;        1 ^ IEN    Active Code/Modifier
"RTN","ICPTAPIU",73,0)
 ;        0 ^ IEN    Inactive Code/Modifier
"RTN","ICPTAPIU",74,0)
 ;        0 ^ -1     Code/Modifier not Found
"RTN","ICPTAPIU",75,0)
 ;
"RTN","ICPTAPIU",76,0)
 ; This API requires the ACT Cross-Reference
"RTN","ICPTAPIU",77,0)
 ;    ^ICPT("ACT",<code>,<status>,<date>,<ien>)
"RTN","ICPTAPIU",78,0)
 ;    ^DIC(81.3,"ACT",<code>,<status>,<date>,<ien>)
"RTN","ICPTAPIU",79,0)
 ;
"RTN","ICPTAPIU",80,0)
 N ICPTC,ICPTD,ICPTIEN,ICPTA,ICPTI,X,ICPTG,ICPTR
"RTN","ICPTAPIU",81,0)
 S ICPTC=$G(CODE) Q:'$L(ICPTC) "0^-1"
"RTN","ICPTAPIU",82,0)
 ;    Case 1:  Not Valid                           0^-1
"RTN","ICPTAPIU",83,0)
 ;             Fails Pattern Match for Code
"RTN","ICPTAPIU",84,0)
 S ICPTG=$$GBL^ICPTSUPT(ICPTC) Q:ICPTG="" "0^-1"
"RTN","ICPTAPIU",85,0)
 ;    Case 2:  Never Active                        0^IEN
"RTN","ICPTAPIU",86,0)
 ;             No In/Active Date
"RTN","ICPTAPIU",87,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICPTSUPT(CDT)),ICPTD=CDT+.001
"RTN","ICPTAPIU",88,0)
 S ICPTR=$$ACT(ICPTG,ICPTC,1,ICPTD),ICPTA=$O(@(ICPTR_")"),-1)
"RTN","ICPTAPIU",89,0)
 I '$L(ICPTA) D  Q X
"RTN","ICPTAPIU",90,0)
 . S ICPTA=$O(@(ICPTR_")")),X="0^-1" Q:'$L(ICPTA)
"RTN","ICPTAPIU",91,0)
 . S ICPTR=$$ACT(ICPTG,ICPTC,1,ICPTA)
"RTN","ICPTAPIU",92,0)
 . S ICPTIEN=$O(@(ICPTR_",0)")) S:+ICPTIEN<1 ICPTIEN=-1
"RTN","ICPTAPIU",93,0)
 . S X="0^"_ICPTIEN
"RTN","ICPTAPIU",94,0)
 ;    Case 3:  Active, Never Inactive              1^IEN
"RTN","ICPTAPIU",95,0)
 ;             Has an Activation Date
"RTN","ICPTAPIU",96,0)
 ;             No Inactivation Date
"RTN","ICPTAPIU",97,0)
 S ICPTR=$$ACT(ICPTG,ICPTC,0,ICPTD),ICPTI=$O(@(ICPTR_")"),-1)
"RTN","ICPTAPIU",98,0)
 I $L(ICPTA),'$L(ICPTI) D  Q X
"RTN","ICPTAPIU",99,0)
 . S ICPTR=$$ACT(ICPTG,ICPTC,1,ICPTA),ICPTIEN=$O(@(ICPTR_",0)"))
"RTN","ICPTAPIU",100,0)
 . S X=$S(+ICPTIEN=0:"0^-1",1:"1^"_ICPTIEN)
"RTN","ICPTAPIU",101,0)
 ;    Case 4:  Active, but later Inactivated       0^IEN
"RTN","ICPTAPIU",102,0)
 ;             Has an In/Activation Date
"RTN","ICPTAPIU",103,0)
 I $L(ICPTA),$L(ICPTI),ICPTI>ICPTA,ICPTI<ICPTD D  Q X
"RTN","ICPTAPIU",104,0)
 . S ICPTR=$$ACT(ICPTG,ICPTC,0,ICPTI),ICPTIEN=$O(@(ICPTR_",0)"))
"RTN","ICPTAPIU",105,0)
 . S X=$S(+ICPTIEN=0:"0^-1",1:"0^"_ICPTIEN)
"RTN","ICPTAPIU",106,0)
 ;    Case 5:  Active, and not later Inactivated   1^IEN
"RTN","ICPTAPIU",107,0)
 ;             Has an In/Activation Date
"RTN","ICPTAPIU",108,0)
 ;             Has a Newer Activation Date
"RTN","ICPTAPIU",109,0)
 I $L(ICPTA),$L(ICPTI),ICPTI'>ICPTA D  Q X
"RTN","ICPTAPIU",110,0)
 . S ICPTR=$$ACT(ICPTG,ICPTC,0,ICPTI)
"RTN","ICPTAPIU",111,0)
 . S X=$S(+$O(@(ICPTR_",0)"))=0:"0^-1",1:"1^"_ICPTI)
"RTN","ICPTAPIU",112,0)
 ;    Case 6:  Fails Time Test                     0^-1
"RTN","ICPTAPIU",113,0)
 Q "0^-1"
"RTN","ICPTAPIU",114,0)
 ;
"RTN","ICPTAPIU",115,0)
NEXT(CODE) ; Next CPT Code or Modifier (active or inactive)
"RTN","ICPTAPIU",116,0)
 ; Input:
"RTN","ICPTAPIU",117,0)
 ;    CODE = CPT Code/Modifier   REQUIRED
"RTN","ICPTAPIU",118,0)
 ;
"RTN","ICPTAPIU",119,0)
 ; Output:
"RTN","ICPTAPIU",120,0)
 ;    The Next CPT Code/Modifier, Null if none
"RTN","ICPTAPIU",121,0)
 ;
"RTN","ICPTAPIU",122,0)
 N ICPTC,ICPTG
"RTN","ICPTAPIU",123,0)
 S ICPTC=$G(CODE) Q:'$L(ICPTC) ""
"RTN","ICPTAPIU",124,0)
 S ICPTG=$$GBL^ICPTSUPT(ICPTC) Q:'$L(ICPTG) ""
"RTN","ICPTAPIU",125,0)
 S ICPTC=$O(@(ICPTG_"""BA"","""_ICPTC_" "")"))
"RTN","ICPTAPIU",126,0)
 Q $S(ICPTC="":"",1:$E(ICPTC,1,$L(ICPTC)-1))
"RTN","ICPTAPIU",127,0)
 ;
"RTN","ICPTAPIU",128,0)
PREV(CODE) ; Previous CPT Code or Modifier (active or inactive)
"RTN","ICPTAPIU",129,0)
 ; Input:
"RTN","ICPTAPIU",130,0)
 ;    CODE = CPT Code/Modifier   REQUIRED
"RTN","ICPTAPIU",131,0)
 ;
"RTN","ICPTAPIU",132,0)
 ; Output:
"RTN","ICPTAPIU",133,0)
 ;    The Previous CPT Code/Modifier, Null if none
"RTN","ICPTAPIU",134,0)
 ;
"RTN","ICPTAPIU",135,0)
 N ICPTC,ICPTG
"RTN","ICPTAPIU",136,0)
 S ICPTC=$G(CODE) Q:'$L(ICPTC) ""
"RTN","ICPTAPIU",137,0)
 S ICPTG=$$GBL^ICPTSUPT(ICPTC) Q:'$L(ICPTG) ""
"RTN","ICPTAPIU",138,0)
 S ICPTC=$O(@(ICPTG_"""BA"","""_ICPTC_" "")"),-1)
"RTN","ICPTAPIU",139,0)
 Q $S(ICPTC="":"",1:$E(ICPTC,1,$L(ICPTC)-1))
"RTN","ICPTAPIU",140,0)
 ;
"RTN","ICPTAPIU",141,0)
HIST(CODE,ARY) ; Activation History
"RTN","ICPTAPIU",142,0)
 ; Input:
"RTN","ICPTAPIU",143,0)
 ;    CODE - CPT Code or Modifier          REQUIRED
"RTN","ICPTAPIU",144,0)
 ;    .ARY - Array, passed by Reference    REQUIRED
"RTN","ICPTAPIU",145,0)
 ;
"RTN","ICPTAPIU",146,0)
 ; Output:    Mirrors ARY(0) (or, -1 on error)
"RTN","ICPTAPIU",147,0)
 ;    ARY(0) = Number of Activation History Entries
"RTN","ICPTAPIU",148,0)
 ;    ARY(<date>) = status    where: 1 is Active
"RTN","ICPTAPIU",149,0)
 ;    ARY("IEN") = <ien>
"RTN","ICPTAPIU",150,0)
 ;
"RTN","ICPTAPIU",151,0)
 Q:$G(CODE)="" -1
"RTN","ICPTAPIU",152,0)
 N ICPTC,ICPTI,ICPTN,ICPTD,ICPTG,ICPTF,ICPTO
"RTN","ICPTAPIU",153,0)
 S ICPTG=$$GBL^ICPTSUPT(CODE) Q:'$L(ICPTG) -1
"RTN","ICPTAPIU",154,0)
 S ICPTI=$O(@(ICPTG_"""BA"","""_CODE_" "",0)")) Q:'$L(ICPTI) -1
"RTN","ICPTAPIU",155,0)
 S ARY("IEN")=ICPTI,ICPTO="" M ICPTO=@(ICPTG_ICPTI_",60)")
"RTN","ICPTAPIU",156,0)
 K ICPT0("B") S ARY(0)=+($P($G(ICPTO(0)),"^",4))
"RTN","ICPTAPIU",157,0)
 S:+ARY(0)=0 ARY(0)=-1 K:ARY(0)=-1 ARY("IEN")
"RTN","ICPTAPIU",158,0)
 S (ICPTI,ICPTC)=0 F  S ICPTI=$O(ICPTO(ICPTI)) Q:+ICPTI=0  D
"RTN","ICPTAPIU",159,0)
 . S ICPTD=$P($G(ICPTO(ICPTI,0)),"^",1) Q:+ICPTD=0
"RTN","ICPTAPIU",160,0)
 . S ICPTF=$P($G(ICPTO(ICPTI,0)),"^",2) Q:'$L(ICPTF)
"RTN","ICPTAPIU",161,0)
 . S ICPTC=ICPTC+1,ARY(0)=ICPTC,ARY(ICPTD)=ICPTF
"RTN","ICPTAPIU",162,0)
 Q ARY(0)
"RTN","ICPTAPIU",163,0)
 ;
"RTN","ICPTAPIU",164,0)
PERIOD(CODE,ARY) ; return Activation/Inactivation Period in ARY
"RTN","ICPTAPIU",165,0)
 ; Input:
"RTN","ICPTAPIU",166,0)
 ;    CODE - CPT  Code or Modifier        REQUIRED
"RTN","ICPTAPIU",167,0)
 ;    .ARY - Array, passed by Reference   REQUIRED
"RTN","ICPTAPIU",168,0)
 ; Output:
"RTN","ICPTAPIU",169,0)
 ;    ARY(0) = IEN^Selectable
"RTN","ICPTAPIU",170,0)
 ;       Where IEN = -1 if error
"RTN","ICPTAPIU",171,0)
 ;             Selectable = 0 for VA Only codes
"RTN","ICPTAPIU",172,0)
 ;    ARY(Act_date) = Inactivation Date^Short Name Text
"RTN","ICPTAPIU",173,0)
 ;
"RTN","ICPTAPIU",174,0)
 I $G(CODE)="" S ARY(0)="-1^0" Q
"RTN","ICPTAPIU",175,0)
 N ICPTC,ICPTI,ICPTA,ICPTG,ICPTF,ICPTBA,ICPTBI,ICPTST,ICPTS,ICPTZ
"RTN","ICPTAPIU",176,0)
 S ICPTG=$$GBL^ICPTSUPT(CODE) I ICPTG="" S ARY(0)="-1^0" Q
"RTN","ICPTAPIU",177,0)
 S ICPTC=$O(@(ICPTG_"""BA"","""_CODE_" "",0)")) I ICPTC="" S ARY(0)="-1^0" Q
"RTN","ICPTAPIU",178,0)
 S (ARY(0),ICPTC)=+ICPTC,ICPTZ=$G(@(ICPTG_ICPTC_",0)")),ICPTS=$P(ICPTZ,"^",2)
"RTN","ICPTAPIU",179,0)
 S $P(ARY(0),"^",2)=$S(ICPTG="^ICPT(":$P(ICPTZ,"^",6)'="L",1:$P(ICPTZ,"^",4)'="V")
"RTN","ICPTAPIU",180,0)
 S (ICPTA,ICPTBA)=0,ICPTG=ICPTG_ICPTC_",60,"
"RTN","ICPTAPIU",181,0)
 F  Q:ICPTBA  D
"RTN","ICPTAPIU",182,0)
 . S ICPTA=$O(@(ICPTG_"""B"","_ICPTA_")"))
"RTN","ICPTAPIU",183,0)
 . I ICPTA="" S ICPTBA=1 Q
"RTN","ICPTAPIU",184,0)
 . S ICPTF=$O(@(ICPTG_"""B"","_ICPTA_",0)"))
"RTN","ICPTAPIU",185,0)
 . I '+ICPTF S ICPTBA=1 Q
"RTN","ICPTAPIU",186,0)
 . S ICPTST=$P($G(@(ICPTG_ICPTF_",0)")),"^",2)
"RTN","ICPTAPIU",187,0)
 . Q:'ICPTST  ;outer loop looks for active
"RTN","ICPTAPIU",188,0)
 . S ARY(ICPTA)="^"_ICPTS,ICPTBI=0,ICPTI=ICPTA
"RTN","ICPTAPIU",189,0)
 . F  Q:ICPTBI  D
"RTN","ICPTAPIU",190,0)
 . . S ICPTI=$O(@(ICPTG_"""B"","_ICPTI_")"))
"RTN","ICPTAPIU",191,0)
 . . I ICPTI="" S (ICPTBI,ICPTBA)=1 Q
"RTN","ICPTAPIU",192,0)
 . . S ICPTF=$O(@(ICPTG_"""B"","_ICPTI_",0)"))
"RTN","ICPTAPIU",193,0)
 . . I '+ICPTF S (ICPTBI,ICPTBA)=1 Q
"RTN","ICPTAPIU",194,0)
 . . S ICPTST=$P($G(@(ICPTG_ICPTF_",0)")),"^",2)
"RTN","ICPTAPIU",195,0)
 . . I ICPTST S ICPTBI=1 Q  ;inner loop looks for inactive
"RTN","ICPTAPIU",196,0)
 . . S $P(ARY(ICPTA),"^")=ICPTI,ICPTBI=1,ICPTA=ICPTI
"RTN","ICPTAPIU",197,0)
 Q
"RTN","ICPTAPIU",198,0)
 ;
"RTN","ICPTAPIU",199,0)
ACT(ICPTG,ICPTC,ICPTS,ICPTD) ; return "ACT" root
"RTN","ICPTAPIU",200,0)
 Q ICPTG_"""ACT"","""_ICPTC_" "","_ICPTS_","_ICPTD
"RTN","ICPTAU")
0^8^B2311847
"RTN","ICPTAU",1,0)
ICPTAU ;DLS/DEK - CPT Annual Update Protocol for CPT Codes ; 04/28/2003
"RTN","ICPTAU",2,0)
 ;;6.0;CPT/HCPCS;**14**;May 19, 1997
"RTN","ICPTAU",3,0)
 ;
"RTN","ICPTAU",4,0)
 ; External References
"RTN","ICPTAU",5,0)
 ;   DBIA   2053  UPDATE^DIE
"RTN","ICPTAU",6,0)
 ;                    
"RTN","ICPTAU",7,0)
 Q
"RTN","ICPTAU",8,0)
 N I S I=0
"RTN","ICPTAU",9,0)
 F I=2:1 S CSD=$P($T(CSDATA+I),";;",2) Q:CSD']""  D
"RTN","ICPTAU",10,0)
 . D ADD91(757.91,CSD)
"RTN","ICPTAU",11,0)
 Q
"RTN","ICPTAU",12,0)
 ;
"RTN","ICPTAU",13,0)
ADD91(FN,ZNODE) ; add entry to Change Log
"RTN","ICPTAU",14,0)
 N FDA,FDAIEN,ANS,ZNODE
"RTN","ICPTAU",15,0)
 ;S FDAIEN="+1,"_IEN_","
"RTN","ICPTAU",16,0)
 S FDAIEN="+1,"
"RTN","ICPTAU",17,0)
 K ^TMP("DIERR",$J)
"RTN","ICPTAU",18,0)
 ;Assumption: Values come from CSD
"RTN","ICPTAU",19,0)
 S FDA(FN,FDAIEN,.01)="CPT CODE"
"RTN","ICPTAU",20,0)
 S FDA(FN,FDAIEN,.02)=2
"RTN","ICPTAU",21,0)
 S FDA(FN,FDAIEN,.03)="SDO SHORT TEXT"
"RTN","ICPTAU",22,0)
 S FDA(FN,FDAIEN,.04)="PROVIDED BY LEX"  ;global has ans. ???
"RTN","ICPTAU",23,0)
 S FDA(FN,FDAIEN,.05)=$E(DT,1,3)_"0101"
"RTN","ICPTAU",24,0)
 S FDA(FN,FDAIEN,.06)="STATUS"
"RTN","ICPTAU",25,0)
 S FDA(FN,FDAIEN,.07)="REASON"
"RTN","ICPTAU",26,0)
 S FDA(FN,FDAIEN,.08)="PREVIOUS CODE"
"RTN","ICPTAU",27,0)
 S FDA(FN,FDAIEN,.09)="PREVIOUS SHORT TEXT"
"RTN","ICPTAU",28,0)
 S FDA(FN,FDAIEN,.1)="LEXICON ENTRY"     ;global has ans. ???
"RTN","ICPTAU",29,0)
 S FDA(FN,FDAIEN,.11)=0  ;ICD ENTRY
"RTN","ICPTAU",30,0)
 S FDA(FN,FDAIEN,.12)=0  ;ICP ENTRY
"RTN","ICPTAU",31,0)
 S FDA(FN,FDAIEN,.13)=IEN  ;CPT ENTRY
"RTN","ICPTAU",32,0)
 S FDA(FN,FDAIEN,1)="SHORT DESCRIPTION"
"RTN","ICPTAU",33,0)
 D UPDATE^DIE("","FDA")
"RTN","ICPTAU",34,0)
 S ANS='$D(^TMP("DIERR",$J))
"RTN","ICPTAU",35,0)
 W !,"IEN ",IEN,$S('ANS:" DIDNT",1:" DID")," ADD ",STA
"RTN","ICPTAU",36,0)
 Q
"RTN","ICPTAU",37,0)
 ;
"RTN","ICPTAU",38,0)
CSDATA ;not an entry point
"RTN","ICPTAU",39,0)
 Q       ;used for data
"RTN","ICPTAU",40,0)
 ;;
"RTN","ICPTCOD")
0^2^B27701443
"RTN","ICPTCOD",1,0)
ICPTCOD ;ALB/ABR/DEK - CPT CODE APIS ; 04/28/2003
"RTN","ICPTCOD",2,0)
 ;;6.0;CPT/HCPCS;**6,12,13,14**;May 19, 1997
"RTN","ICPTCOD",3,0)
 ;
"RTN","ICPTCOD",4,0)
 ; External References
"RTN","ICPTCOD",5,0)
 ;   DBIA  10103  $$DT^XLFDT
"RTN","ICPTCOD",6,0)
 ;                         
"RTN","ICPTCOD",7,0)
CPT(CODE,CDT,SRC,DFN) ; returns basic info on CPT/HCPCS code
"RTN","ICPTCOD",8,0)
 ; Input:
"RTN","ICPTCOD",9,0)
 ;    CODE - CPT or HCPCS code, ien or .01 format, REQUIRED
"RTN","ICPTCOD",10,0)
 ;    CDT - active as of date, default = today (FileMan format)
"RTN","ICPTCOD",11,0)
 ;          If CDT < 2890101, use 2890101
"RTN","ICPTCOD",12,0)
 ;          If CDT > DT, validate with newest In/Activation Dates
"RTN","ICPTCOD",13,0)
 ;          If CDT is year only, use first of the year
"RTN","ICPTCOD",14,0)
 ;          If CDT is year and month only, use first of the month
"RTN","ICPTCOD",15,0)
 ;    SRC - SCREEN SOURCE
"RTN","ICPTCOD",16,0)
 ;          If '$G(SRC), level 1, Level 2 only.
"RTN","ICPTCOD",17,0)
 ;          If $G(SRC), include level 3.
"RTN","ICPTCOD",18,0)
 ;    DFN - not in use but included in anticipation of future need
"RTN","ICPTCOD",19,0)
 ;
"RTN","ICPTCOD",20,0)
 ;  Output:  string:
"RTN","ICPTCOD",21,0)
 ;      ien^CPT CODE^SHORT NAME^CATEGORY ien^SOURCE^EFFECTIVE DATE^STATUS^Inactivation Date^Activation Date^MSG
"RTN","ICPTCOD",22,0)
 ;             where STATUS = 0 - inactive
"RTN","ICPTCOD",23,0)
 ;                          = 1 - active
"RTN","ICPTCOD",24,0)
 ;           EFFECTIVE DATE = date status became effective
"RTN","ICPTCOD",25,0)
 ;           Activation Date = date code became active
"RTN","ICPTCOD",26,0)
 ;           Inactivation Date = date code became inactive
"RTN","ICPTCOD",27,0)
 ;           MSG = User Alert
"RTN","ICPTCOD",28,0)
 ;  -or-
"RTN","ICPTCOD",29,0)
 ;         -1^error description
"RTN","ICPTCOD",30,0)
 ;
"RTN","ICPTCOD",31,0)
 ; Variables:
"RTN","ICPTCOD",32,0)
 ;     DATA = 0-node for CPT code
"RTN","ICPTCOD",33,0)
 ;     EFF = effective date
"RTN","ICPTCOD",34,0)
 ;     STR = output
"RTN","ICPTCOD",35,0)
 ;
"RTN","ICPTCOD",36,0)
 N DATA,EFF,STR
"RTN","ICPTCOD",37,0)
 I $G(CODE)="" S STR="-1^NO CODE SELECTED" G CPTQ
"RTN","ICPTCOD",38,0)
 S CODE=$G(CODE),CODE=$S(CODE?1.N:+CODE,1:$$CODEN(CODE)) ; find ien for code
"RTN","ICPTCOD",39,0)
 I CODE<1!'$D(^ICPT(CODE)) S STR="-1^NO SUCH ENTRY" G CPTQ ; if no code, return error
"RTN","ICPTCOD",40,0)
 I '$G(SRC),$P(^ICPT(CODE,0),"^",6)="L" S STR="-1^VA LOCAL CODE SELECTED" G CPTQ
"RTN","ICPTCOD",41,0)
 ;
"RTN","ICPTCOD",42,0)
 S DATA=$G(^ICPT(CODE,0)) ;  store 0-node data
"RTN","ICPTCOD",43,0)
 I '$L(DATA) S STR="-1^NO DATA" G CPTQ
"RTN","ICPTCOD",44,0)
 ;I $G(CDT)="" S CDT=DT  ;if no date selected, picks today.
"RTN","ICPTCOD",45,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICPTSUPT(CDT))
"RTN","ICPTCOD",46,0)
 S STR=CODE_"^"_DATA,$P(STR,"^",5)=$P(STR,"^",7),STR=$P(STR,"^",1,5)
"RTN","ICPTCOD",47,0)
 S EFF=$$EFF^ICPTSUPT(81,CODE,CDT)
"RTN","ICPTCOD",48,0)
 I EFF<1 S $P(EFF,"^",2)=0
"RTN","ICPTCOD",49,0)
 S STR=STR_"^"_EFF_"^"_$$MSG^ICPTSUPT(CDT)
"RTN","ICPTCOD",50,0)
CPTQ Q STR
"RTN","ICPTCOD",51,0)
 ;
"RTN","ICPTCOD",52,0)
CPTD(CODE,OUTARR,DFN,CDT) ; returns CPT description in array
"RTN","ICPTCOD",53,0)
 ; Input:
"RTN","ICPTCOD",54,0)
 ;    CODE - CPT/HCPCS code  REQUIRED
"RTN","ICPTCOD",55,0)
 ;    OUTARR - array to store description
"RTN","ICPTCOD",56,0)
 ;               name of array - e.g. "ABC" or "ABC("TEST")" 
"RTN","ICPTCOD",57,0)
 ;               or temp array.  Default = ^TMP("ICPTD",$J)
"RTN","ICPTCOD",58,0)
 ;    DFN - not in use but included in anticipation of future need
"RTN","ICPTCOD",59,0)
 ;    CDT - active as of date, default = today (FileMan format)
"RTN","ICPTCOD",60,0)
 ;             If CDT < 2890101, use 2890101
"RTN","ICPTCOD",61,0)
 ;             If CDT > DT, validate with newest In/Activation Dates
"RTN","ICPTCOD",62,0)
 ;             If CDT is year only, use first of the year
"RTN","ICPTCOD",63,0)
 ;             If CDT is year and month only, use first of the month
"RTN","ICPTCOD",64,0)
 ;
"RTN","ICPTCOD",65,0)
 ;  Output:  # of lines
"RTN","ICPTCOD",66,0)
 ;           @OUTARR(1-n)  lines of description
"RTN","ICPTCOD",67,0)
 ;           @OUTARR(n) = User Alert
"RTN","ICPTCOD",68,0)
 ;        -or-
"RTN","ICPTCOD",69,0)
 ;           -1^error message
"RTN","ICPTCOD",70,0)
 ;
"RTN","ICPTCOD",71,0)
 ; **NOTE - USER MUST INITIALIZE ^TMP("ICPTD",$J), IF USED**
"RTN","ICPTCOD",72,0)
 ;
"RTN","ICPTCOD",73,0)
 N ARR,END,I,N,CDT
"RTN","ICPTCOD",74,0)
 I $G(CODE)="" S N="-1^NO CODE SELECTED" G CPTDQ
"RTN","ICPTCOD",75,0)
 I $G(OUTARR)="" S OUTARR="^TMP(""ICPTD"",$J,"
"RTN","ICPTCOD",76,0)
 ;
"RTN","ICPTCOD",77,0)
 ; check to make sure OUTARR is in proper format
"RTN","ICPTCOD",78,0)
 I OUTARR'["(" S OUTARR=OUTARR_"("
"RTN","ICPTCOD",79,0)
 I OUTARR[")" S OUTARR=$P(OUTARR,")")
"RTN","ICPTCOD",80,0)
 S END=$E(OUTARR,$L(OUTARR)) I END'="("&(END'=",") S OUTARR=OUTARR_","
"RTN","ICPTCOD",81,0)
 ;
"RTN","ICPTCOD",82,0)
 ; If ^TMP("ICPTD",$J, used, clear before using
"RTN","ICPTCOD",83,0)
 I OUTARR="^TMP(""ICPTD"",$J," K ^TMP("ICPTD",$J)
"RTN","ICPTCOD",84,0)
 S CODE=$S(CODE?1.N:+CODE,1:$$CODEN(CODE)),I=0,N=0
"RTN","ICPTCOD",85,0)
 I CODE<1!'$D(^ICPT(CODE)) S N="-1^NO SUCH CODE" G CPTDQ ; if no code, return error
"RTN","ICPTCOD",86,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICPTSUPT(CDT)) ;date business rules
"RTN","ICPTCOD",87,0)
 F  S I=$O(^ICPT(CODE,"D",I)) Q:'I  S N=N+1,ARR=OUTARR_N_")",@ARR=$G(^(I,0))
"RTN","ICPTCOD",88,0)
 S N=N+1,ARR=OUTARR_N_")",@ARR=" "
"RTN","ICPTCOD",89,0)
 S N=N+1,ARR=OUTARR_N_")",@ARR=$$MSG^ICPTSUPT(CDT)
"RTN","ICPTCOD",90,0)
CPTDQ Q N
"RTN","ICPTCOD",91,0)
 ;
"RTN","ICPTCOD",92,0)
CODM(CODE,OUTARR,SRC,CDT,DFN) ; returns list of modifiers for a code
"RTN","ICPTCOD",93,0)
 ; Input:
"RTN","ICPTCOD",94,0)
 ;       CODE = CPT/HCPCS code (Internal or external format)
"RTN","ICPTCOD",95,0)
 ;       OUTARR = array name for list returned
"RTN","ICPTCOD",96,0)
 ;               name of array - e.g. "ABC" or "ABC("TEST")"
"RTN","ICPTCOD",97,0)
 ;               or temp array.  Default = ^TMP("ICPTM",$J)
"RTN","ICPTCOD",98,0)
 ;       SRC = Source Screen.
"RTN","ICPTCOD",99,0)
 ;               If 0 or Null, use national(level 1,level 2)mods only
"RTN","ICPTCOD",100,0)
 ;               If SRC>0, use all mods, locals (level 3) included.
"RTN","ICPTCOD",101,0)
 ;       CDT = date in Fileman format to check modifier status.
"RTN","ICPTCOD",102,0)
 ;             If 0 or Null, return all the modifiers for a code.
"RTN","ICPTCOD",103,0)
 ;             Else return only modifiers active on the date of CDT
"RTN","ICPTCOD",104,0)
 ;             If CDT < 2890101, use 2890101
"RTN","ICPTCOD",105,0)
 ;             If CDT > DT, validate with newest In/Activation Dates
"RTN","ICPTCOD",106,0)
 ;             If CDT is year only, use first of the year
"RTN","ICPTCOD",107,0)
 ;             If CDT is year and month only, use first of the month
"RTN","ICPTCOD",108,0)
 ;       DFN = not in use. Included in anticipation of future need.
"RTN","ICPTCOD",109,0)
 ;
"RTN","ICPTCOD",110,0)
 ; Output:    STR = # of modifiers that apply
"RTN","ICPTCOD",111,0)
 ;          OUTARR array in the format:
"RTN","ICPTCOD",112,0)
 ;            OUTARR(mod) = name^mod ien
"RTN","ICPTCOD",113,0)
 ;                (mod is the .01 field)
"RTN","ICPTCOD",114,0)
 ;             -1^error description
"RTN","ICPTCOD",115,0)
 ;
"RTN","ICPTCOD",116,0)
 ;**NOTE - USER MUST INITIALIZE ^TMP("ICPTM",$J) ARRAY**
"RTN","ICPTCOD",117,0)
 ;
"RTN","ICPTCOD",118,0)
 N ARR,CODI,CODA,BR,END,ER,MD,MDST,MI,MN,STR,CODEC,ACTMD
"RTN","ICPTCOD",119,0)
 I $G(CODE)="" S STR="-1^NO CPT SELECTED" G CODMQ
"RTN","ICPTCOD",120,0)
 I $G(OUTARR)="" S OUTARR="^TMP(""ICPTM"",$J,"
"RTN","ICPTCOD",121,0)
 S STR=0,CODI=$S(CODE?1.N:+CODE,1:$$CODEN(CODE))
"RTN","ICPTCOD",122,0)
 I CODI<1!'$D(^ICPT(CODI,0)) S STR="-1^NO SUCH CODE" G CODMQ
"RTN","ICPTCOD",123,0)
 I '$G(SRC),$P(^ICPT(CODI,0),"^",6)="L" S STR="-1^VA LOCAL CODE SELECTED" G CODMQ
"RTN","ICPTCOD",124,0)
 S CODEC=$$CODEC(CODI),CODA=$$NUM^ICPTAPIU(CODEC)
"RTN","ICPTCOD",125,0)
 ;
"RTN","ICPTCOD",126,0)
 ; check to make sure OUTARR is in proper format
"RTN","ICPTCOD",127,0)
 I OUTARR'["(" S OUTARR=OUTARR_"("
"RTN","ICPTCOD",128,0)
 I OUTARR[")" S OUTARR=$P(OUTARR,")")
"RTN","ICPTCOD",129,0)
 S END=$E(OUTARR,$L(OUTARR)) I END'="("&(END'=",") S OUTARR=OUTARR_","
"RTN","ICPTCOD",130,0)
 ;
"RTN","ICPTCOD",131,0)
 ; If ^TMP("ICPTM",$J, used, clear before using
"RTN","ICPTCOD",132,0)
 I OUTARR="^TMP(""ICPTM"",$J," K ^TMP("ICPTM",$J)
"RTN","ICPTCOD",133,0)
 ;find first begin range
"RTN","ICPTCOD",134,0)
 ;  BR = Begin Range; ER = End Range
"RTN","ICPTCOD",135,0)
 S:$G(CDT) CDT=$$DTBR^ICPTSUPT(CDT) ;date business rules
"RTN","ICPTCOD",136,0)
 S BR="" F  S BR=$O(^DIC(81.3,"M",BR)) Q:BR>CODA!'BR  D  ; find begin range
"RTN","ICPTCOD",137,0)
 .S ER="" F  S ER=$O(^DIC(81.3,"M",BR,ER)) Q:'ER  I CODA'>ER D
"RTN","ICPTCOD",138,0)
 ..S MI=0 F  S MI=$O(^DIC(81.3,"M",BR,ER,MI)) Q:'MI  D
"RTN","ICPTCOD",139,0)
 ...S MDST=$G(^DIC(81.3,MI,0)) Q:'$L(MDST)  ; quits if no data node
"RTN","ICPTCOD",140,0)
 ...I '$G(SRC) Q:$P(MDST,"^",4)="V"  ; screens out local (VA) modifiers
"RTN","ICPTCOD",141,0)
 ...I $G(CDT) S ACTMD="",ACTMD=$$MOD^ICPTMOD(MI,"I",CDT,$G(SRC)) Q:($P(ACTMD,"^")=-1)!($P(ACTMD,"^",7)=0)  ;screens out inactive modifiers if asked to.
"RTN","ICPTCOD",142,0)
 ...S MD=$P(MDST,"^",1,2),MN=$P(MD,"^")
"RTN","ICPTCOD",143,0)
 ...I $L(MN)'=2 Q  ; checks for valid modifier format
"RTN","ICPTCOD",144,0)
 ...S ARR=OUTARR_""""_MN_""")",@ARR=$P(MD,"^",2)_"^"_MI,STR=STR+1
"RTN","ICPTCOD",145,0)
 I 'STR S STR=0
"RTN","ICPTCOD",146,0)
CODMQ Q STR
"RTN","ICPTCOD",147,0)
 ;
"RTN","ICPTCOD",148,0)
CODEN(CODE) ; return the ien of a CPT or HCPCS code
"RTN","ICPTCOD",149,0)
 ;   Input:  CPT/HCPCS code
"RTN","ICPTCOD",150,0)
 ;  Output:  ien of code
"RTN","ICPTCOD",151,0)
 ;
"RTN","ICPTCOD",152,0)
 I $G(CODE)="" Q -1
"RTN","ICPTCOD",153,0)
 N COD
"RTN","ICPTCOD",154,0)
 S COD=+$O(^ICPT("B",CODE,0))
"RTN","ICPTCOD",155,0)
 Q $S(COD>0:COD,1:-1)
"RTN","ICPTCOD",156,0)
 ;
"RTN","ICPTCOD",157,0)
CODEC(CODE) ; return the CPT or HCPCS code of an ien.
"RTN","ICPTCOD",158,0)
 ;  Input: ien of CPT/HCPCS code
"RTN","ICPTCOD",159,0)
 ; Output: CPT/HCPCS code
"RTN","ICPTCOD",160,0)
 ;
"RTN","ICPTCOD",161,0)
 I $G(CODE)="" Q -1
"RTN","ICPTCOD",162,0)
 N Y
"RTN","ICPTCOD",163,0)
 S Y=$P($G(^ICPT(CODE,0)),"^")
"RTN","ICPTCOD",164,0)
 Q $S(Y="":-1,1:Y)
"RTN","ICPTCOD",165,0)
 ;
"RTN","ICPTCOD",166,0)
VALCPT(CODE,CDT,SRC,DFN) ;check if CPT code is valid for selection
"RTN","ICPTCOD",167,0)
 ; Input:
"RTN","ICPTCOD",168,0)
 ;    CODE - CPT or HCPCS code, ien or .01 format, REQUIRED
"RTN","ICPTCOD",169,0)
 ;    CDT - active as of date, default = today (FileMan format)
"RTN","ICPTCOD",170,0)
 ;          If CDT < 2890101, use 2890101
"RTN","ICPTCOD",171,0)
 ;          If CDT > DT, validate with newest In/Activation Dates
"RTN","ICPTCOD",172,0)
 ;          If CDT is year only, use first of the year
"RTN","ICPTCOD",173,0)
 ;          If CDT is year and month only, use first of the month
"RTN","ICPTCOD",174,0)
 ;    SRC - SCREEN SOURCE '$G(SRC) level 1, Level 2 only, $G(SRC) include level 3
"RTN","ICPTCOD",175,0)
 ;    DFN - not in use but included in anticipation of future need
"RTN","ICPTCOD",176,0)
 ;
"RTN","ICPTCOD",177,0)
 ; Output: STR:  1 if valid code for selection
"RTN","ICPTCOD",178,0)
 ;               -1^error message    if not selectable
"RTN","ICPTCOD",179,0)
 ;
"RTN","ICPTCOD",180,0)
 N STR
"RTN","ICPTCOD",181,0)
 S CODE=$G(CODE),SRC=$G(SRC),DFN=$G(DFN)
"RTN","ICPTCOD",182,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICPTSUPT(CDT)) ;date business rules
"RTN","ICPTCOD",183,0)
 S STR=$$CPT(CODE,CDT,SRC,DFN)
"RTN","ICPTCOD",184,0)
 I STR<0 G VALCPTQ
"RTN","ICPTCOD",185,0)
 I '$P(STR,"^",7) S STR="-1^INACTIVE CODE"
"RTN","ICPTCOD",186,0)
 I STR>0 S STR=1
"RTN","ICPTCOD",187,0)
VALCPTQ Q STR
"RTN","ICPTIDX")
0^4^B11963252
"RTN","ICPTIDX",1,0)
ICPTIDX ;DLS/DEK - MUMPS Cross Reference Routine for History ; 04/28/2003
"RTN","ICPTIDX",2,0)
 ;;6.0;CPT/HCPCS;**14**;May 19, 1997
"RTN","ICPTIDX",3,0)
 ;
"RTN","ICPTIDX",4,0)
 ; ICPTCOD          CPT/HCPC Code from Global
"RTN","ICPTIDX",5,0)
 ; ICPTCODX         CPT/HCPC Code passed in (X)
"RTN","ICPTIDX",6,0)
 ; ICPTEFF          Effective Date
"RTN","ICPTIDX",7,0)
 ; ICPTSTA          Status
"RTN","ICPTIDX",8,0)
 ; ICPTNOD          Global Node (to reduce Global hits)
"RTN","ICPTIDX",9,0)
 ; DA               ien file 81 or 81.02
"RTN","ICPTIDX",10,0)
 ; ICPTIEN,DA(1)    ien of file 81 
"RTN","ICPTIDX",11,0)
 ; ICPTHIS          ien of file 81.02
"RTN","ICPTIDX",12,0)
 ; X                Data passed in to be indexed
"RTN","ICPTIDX",13,0)
 ;                 
"RTN","ICPTIDX",14,0)
 ; Set and Kill Activation History
"RTN","ICPTIDX",15,0)
 ;                 
"RTN","ICPTIDX",16,0)
 ;   File 81, field .01
"RTN","ICPTIDX",17,0)
SAHC ; Set new value when CPT Code is Edited
"RTN","ICPTIDX",18,0)
 ; ^DD(81,.01,1,D0,1) = D SAHC^ICPTIDX
"RTN","ICPTIDX",19,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTCOD,ICPTCODX,ICPTHIS,ICPTIEN
"RTN","ICPTIDX",20,0)
 S ICPTCODX=$G(X) Q:'$L(ICPTCODX)  S ICPTIEN=+($G(DA)) Q:+ICPTIEN'>0
"RTN","ICPTIDX",21,0)
 S ICPTHIS=0 F  S ICPTHIS=$O(^ICPT(+ICPTIEN,60,ICPTHIS)) Q:+ICPTHIS=0  D
"RTN","ICPTIDX",22,0)
 . N DA,X S DA=+ICPTHIS,DA(1)=+ICPTIEN D HDC
"RTN","ICPTIDX",23,0)
 . S ICPTCOD=ICPTCODX Q:'$L($G(ICPTCOD))
"RTN","ICPTIDX",24,0)
 . Q:'$L($G(ICPTEFF))  Q:'$L($G(ICPTSTA))  D SHIS
"RTN","ICPTIDX",25,0)
 Q
"RTN","ICPTIDX",26,0)
KAHC ; Kill old value when CPT Code is Edited
"RTN","ICPTIDX",27,0)
 ; ^DD(81,.01,1,D0,2) = D KAHC^ICPTIDX
"RTN","ICPTIDX",28,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTCOD,ICPTCODX,ICPTHIS,ICPTIEN
"RTN","ICPTIDX",29,0)
 S ICPTCODX=$G(X) Q:'$L(ICPTCODX)  S ICPTIEN=+($G(DA)) Q:+ICPTIEN'>0
"RTN","ICPTIDX",30,0)
 S ICPTHIS=0 F  S ICPTHIS=$O(^ICPT(+ICPTIEN,60,ICPTHIS)) Q:+ICPTHIS=0  D
"RTN","ICPTIDX",31,0)
 . N DA,X S DA=+ICPTHIS,DA(1)=+ICPTIEN D HDC
"RTN","ICPTIDX",32,0)
 . S ICPTCOD=ICPTCODX Q:'$L($G(ICPTCOD))
"RTN","ICPTIDX",33,0)
 . Q:'$L($G(ICPTEFF))  Q:'$L($G(ICPTSTA))  D KHIS
"RTN","ICPTIDX",34,0)
 Q
"RTN","ICPTIDX",35,0)
 ;                 
"RTN","ICPTIDX",36,0)
 ; File 81.02, field .01
"RTN","ICPTIDX",37,0)
SAHD ; Set new value when Effective Date is Edited
"RTN","ICPTIDX",38,0)
 ; ^DD(81.02,.01,1,D0,1) = D SAHD^ICPTIDX
"RTN","ICPTIDX",39,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTCOD
"RTN","ICPTIDX",40,0)
 D HDC Q:'$L($G(ICPTCOD))  Q:'$L($G(ICPTSTA))  S ICPTEFF=+($G(X)) Q:+ICPTEFF=0  D SHIS
"RTN","ICPTIDX",41,0)
 Q
"RTN","ICPTIDX",42,0)
KAHD ; Kill old value when Effective Date is Edited
"RTN","ICPTIDX",43,0)
 ; ^DD(81.02,.01,1,D0,2) = D KAHD^ICPTIDX
"RTN","ICPTIDX",44,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTCOD D HDC Q:'$L($G(ICPTCOD))  Q:'$L($G(ICPTSTA))
"RTN","ICPTIDX",45,0)
 S ICPTEFF=+($G(X)) Q:+ICPTEFF=0  D KHIS
"RTN","ICPTIDX",46,0)
 Q
"RTN","ICPTIDX",47,0)
 ;                 
"RTN","ICPTIDX",48,0)
 ; File 81.02, field .02
"RTN","ICPTIDX",49,0)
SAHS ; Set new value when Status is Edited
"RTN","ICPTIDX",50,0)
 ; ^DD(81.02,.02,1,D0,1) = D SAHS^ICPTIDX
"RTN","ICPTIDX",51,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTCOD
"RTN","ICPTIDX",52,0)
 D HDC Q:'$L($G(ICPTCOD))  Q:+ICPTEFF=0
"RTN","ICPTIDX",53,0)
 S ICPTSTA=$G(X) Q:'$L(ICPTSTA)  D SHIS
"RTN","ICPTIDX",54,0)
 Q
"RTN","ICPTIDX",55,0)
KAHS ; Kill old value when Status is Edited
"RTN","ICPTIDX",56,0)
 ; ^DD(81.02,.02,1,D0,2) = D KAHS^ICPTIDX
"RTN","ICPTIDX",57,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTCOD
"RTN","ICPTIDX",58,0)
 D HDC Q:'$L($G(ICPTCOD))  Q:+ICPTEFF=0
"RTN","ICPTIDX",59,0)
 S ICPTSTA=$G(X) Q:'$L(ICPTSTA)  D KHIS
"RTN","ICPTIDX",60,0)
 Q
"RTN","ICPTIDX",61,0)
 ;             
"RTN","ICPTIDX",62,0)
HDC ;  Set Common Variables (Code, Status and Effective Date)
"RTN","ICPTIDX",63,0)
 S (ICPTCOD,ICPTSTA,ICPTEFF)=""
"RTN","ICPTIDX",64,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^ICPT(+($G(DA(1))),60,+($G(DA)),0))
"RTN","ICPTIDX",65,0)
 S ICPTCOD=$P($G(^ICPT(+($G(DA(1))),0)),"^",1),ICPTNOD=$G(^ICPT(+($G(DA(1))),60,+($G(DA)),0))
"RTN","ICPTIDX",66,0)
 S ICPTSTA=$P(ICPTNOD,"^",2),ICPTEFF=$P(ICPTNOD,"^",1)
"RTN","ICPTIDX",67,0)
 Q
"RTN","ICPTIDX",68,0)
 ;              
"RTN","ICPTIDX",69,0)
SHIS ; Set Index ^ICPT("ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","ICPTIDX",70,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^ICPT(+($G(DA(1))),60,+($G(DA)),0))
"RTN","ICPTIDX",71,0)
 S ^ICPT("ACT",(ICPTCOD_" "),ICPTSTA,ICPTEFF,DA(1),DA)=""
"RTN","ICPTIDX",72,0)
 N PIECE,INACT S PIECE=$S('ICPTSTA:7,1:8),INACT=$S('ICPTSTA:1,1:"")
"RTN","ICPTIDX",73,0)
 S $P(^ICPT(DA(1),0),"^",4)=INACT,$P(^ICPT(DA(1),0),"^",PIECE)=ICPTEFF
"RTN","ICPTIDX",74,0)
 Q
"RTN","ICPTIDX",75,0)
KHIS ; Kill Index ^ICPT("ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","ICPTIDX",76,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^ICPT(+($G(DA(1))),60,+($G(DA)),0))
"RTN","ICPTIDX",77,0)
 N PIECE,INACT,IEN,OPP,OPPSTA,OPPEFF,BOOL
"RTN","ICPTIDX",78,0)
 S PIECE=$S('ICPTSTA:7,1:8),INACT=$S('ICPTSTA:"",1:1),OPPEFF=ICPTEFF,BOOL=0
"RTN","ICPTIDX",79,0)
 F  S OPPEFF=$O(^ICPT(DA(1),60,"B",OPPEFF),-1) Q:'OPPEFF!BOOL  D
"RTN","ICPTIDX",80,0)
 . S IEN=$O(^ICPT(DA(1),60,"B",OPPEFF,""))
"RTN","ICPTIDX",81,0)
 . I 'IEN S OPPEFF="" Q
"RTN","ICPTIDX",82,0)
 . S OPP=$G(^ICPT(DA(1),60,IEN,0)),OPPEFF=$P($G(OPP),"^",1)
"RTN","ICPTIDX",83,0)
 . S OPPSTA=$P($G(OPP),"^",2),BOOL=OPPSTA'=ICPTSTA
"RTN","ICPTIDX",84,0)
 I BOOL D
"RTN","ICPTIDX",85,0)
 . S $P(^ICPT(DA(1),0),"^",4)=INACT,$P(^ICPT(DA(1),0),"^",PIECE)=OPPEFF
"RTN","ICPTIDX",86,0)
 E  S $P(^ICPT(DA(1),0),"^",4)=1,$P(^ICPT(DA(1),0),"^",7,8)="^"
"RTN","ICPTIDX",87,0)
 K ^ICPT("ACT",(ICPTCOD_" "),ICPTSTA,ICPTEFF,DA(1),DA)
"RTN","ICPTIDX",88,0)
 Q
"RTN","ICPTMIDX")
0^5^B12426281
"RTN","ICPTMIDX",1,0)
ICPTMIDX ;DLS/DEK - MUMPS Cross Reference Routine for History ; 04/28/2003
"RTN","ICPTMIDX",2,0)
 ;;6.0;CPT/HCPCS;**14**;May 19, 1997
"RTN","ICPTMIDX",3,0)
 ;
"RTN","ICPTMIDX",4,0)
 ; ICPTMOD          CPT/HCPC Code Modifier from Global
"RTN","ICPTMIDX",5,0)
 ; ICPTMODX         CPT/HCPC Code Modifier passed in (X)
"RTN","ICPTMIDX",6,0)
 ; ICPTEFF          Effective Date
"RTN","ICPTMIDX",7,0)
 ; ICPTSTA          Status
"RTN","ICPTMIDX",8,0)
 ; ICPTNOD          Global Node (to reduce Global hits)
"RTN","ICPTMIDX",9,0)
 ; DA               ien file 81.3 or 81.33
"RTN","ICPTMIDX",10,0)
 ; ICPTIEN,DA(1)    ien of file 81.3
"RTN","ICPTMIDX",11,0)
 ; ICPTHIS          ien of file 81.33
"RTN","ICPTMIDX",12,0)
 ; X                Data passed in to be indexed
"RTN","ICPTMIDX",13,0)
 ;                 
"RTN","ICPTMIDX",14,0)
 ; Set and Kill Activation History
"RTN","ICPTMIDX",15,0)
 ;                 
"RTN","ICPTMIDX",16,0)
 ;   File 81.3, field .01
"RTN","ICPTMIDX",17,0)
SAHC ; Set new value when CPT Code Modifier is Edited
"RTN","ICPTMIDX",18,0)
 ; ^DD(81.3,.01,1,D0,1) = D SAHC^ICPTMIDX
"RTN","ICPTMIDX",19,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTMOD,ICPTMODX,ICPTHIS,ICPTIEN
"RTN","ICPTMIDX",20,0)
 S ICPTMODX=$G(X) Q:'$L(ICPTMODX)  S ICPTIEN=+($G(DA)) Q:+ICPTIEN'>0
"RTN","ICPTMIDX",21,0)
 S ICPTHIS=0 F  S ICPTHIS=$O(^DIC(81.3,+ICPTIEN,60,ICPTHIS)) Q:+ICPTHIS=0  D
"RTN","ICPTMIDX",22,0)
 . N DA,X S DA=+ICPTHIS,DA(1)=+ICPTIEN D HDC
"RTN","ICPTMIDX",23,0)
 . S ICPTMOD=ICPTMODX Q:'$L($G(ICPTMOD))
"RTN","ICPTMIDX",24,0)
 . Q:'$L($G(ICPTEFF))  Q:'$L($G(ICPTSTA))  D SHIS
"RTN","ICPTMIDX",25,0)
 Q
"RTN","ICPTMIDX",26,0)
KAHC ; Kill old value when CPT Code is Edited
"RTN","ICPTMIDX",27,0)
 ; ^DD(81.3,.01,1,D0,2) = D KAHC^ICPTMIDX
"RTN","ICPTMIDX",28,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTMOD,ICPTMODX,ICPTHIS,ICPTIEN
"RTN","ICPTMIDX",29,0)
 S ICPTMODX=$G(X) Q:'$L(ICPTMODX)  S ICPTIEN=+($G(DA)) Q:+ICPTIEN'>0
"RTN","ICPTMIDX",30,0)
 S ICPTHIS=0 F  S ICPTHIS=$O(^DIC(81.3,+ICPTIEN,60,ICPTHIS)) Q:+ICPTHIS=0  D
"RTN","ICPTMIDX",31,0)
 . N DA,X S DA=+ICPTHIS,DA(1)=+ICPTIEN D HDC
"RTN","ICPTMIDX",32,0)
 . S ICPTMOD=ICPTMODX Q:'$L($G(ICPTMOD))
"RTN","ICPTMIDX",33,0)
 . Q:'$L($G(ICPTEFF))  Q:'$L($G(ICPTSTA))  D KHIS
"RTN","ICPTMIDX",34,0)
 Q
"RTN","ICPTMIDX",35,0)
 ;                 
"RTN","ICPTMIDX",36,0)
 ; File 81.33, field .01
"RTN","ICPTMIDX",37,0)
SAHD ; Set new value when Effective Date is Edited
"RTN","ICPTMIDX",38,0)
 ; ^DD(81.33,.01,1,D0,1) = D SAHD^ICPTMIDX
"RTN","ICPTMIDX",39,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTMOD
"RTN","ICPTMIDX",40,0)
 D HDC Q:'$L($G(ICPTMOD))  Q:'$L($G(ICPTSTA))  S ICPTEFF=+($G(X)) Q:+ICPTEFF=0  D SHIS
"RTN","ICPTMIDX",41,0)
 Q
"RTN","ICPTMIDX",42,0)
KAHD ; Kill old value when Effective Date is Edited
"RTN","ICPTMIDX",43,0)
 ; ^DD(81.33,.01,1,D0,2) = D KAHD^ICPTMIDX
"RTN","ICPTMIDX",44,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTMOD
"RTN","ICPTMIDX",45,0)
 D HDC Q:'$L($G(ICPTMOD))  Q:'$L($G(ICPTSTA))
"RTN","ICPTMIDX",46,0)
 S ICPTEFF=+($G(X)) Q:+ICPTEFF=0  D KHIS
"RTN","ICPTMIDX",47,0)
 Q
"RTN","ICPTMIDX",48,0)
 ;                 
"RTN","ICPTMIDX",49,0)
 ; File 81.33, field .02
"RTN","ICPTMIDX",50,0)
SAHS ; Set new value when Status is Edited
"RTN","ICPTMIDX",51,0)
 ; ^DD(81.33,.02,1,D0,1) = D SAHS^ICPTMIDX
"RTN","ICPTMIDX",52,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTMOD
"RTN","ICPTMIDX",53,0)
 D HDC Q:'$L($G(ICPTMOD))  Q:+ICPTEFF=0
"RTN","ICPTMIDX",54,0)
 S ICPTSTA=$G(X) Q:'$L(ICPTSTA)  D SHIS
"RTN","ICPTMIDX",55,0)
 Q
"RTN","ICPTMIDX",56,0)
KAHS ; Kill old value when Status is Edited
"RTN","ICPTMIDX",57,0)
 ; ^DD(81.33,.02,1,D0,2) = D KAHS^ICPTMIDX
"RTN","ICPTMIDX",58,0)
 N ICPTNOD,ICPTSTA,ICPTEFF,ICPTMOD
"RTN","ICPTMIDX",59,0)
 D HDC Q:'$L($G(ICPTMOD))  Q:+ICPTEFF=0
"RTN","ICPTMIDX",60,0)
 S ICPTSTA=$G(X) Q:'$L(ICPTSTA)  D KHIS
"RTN","ICPTMIDX",61,0)
 Q
"RTN","ICPTMIDX",62,0)
 ;             
"RTN","ICPTMIDX",63,0)
HDC ;  Set Common Variables (Code, Status and Effective Date)
"RTN","ICPTMIDX",64,0)
 S (ICPTMOD,ICPTSTA,ICPTEFF)=""
"RTN","ICPTMIDX",65,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^DIC(81.3,+($G(DA(1))),60,+($G(DA)),0))
"RTN","ICPTMIDX",66,0)
 S ICPTMOD=$P($G(^DIC(81.3,+($G(DA(1))),0)),"^",1),ICPTNOD=$G(^DIC(81.3,+($G(DA(1))),60,+($G(DA)),0))
"RTN","ICPTMIDX",67,0)
 S ICPTSTA=$P(ICPTNOD,"^",2),ICPTEFF=$P(ICPTNOD,"^",1)
"RTN","ICPTMIDX",68,0)
 Q
"RTN","ICPTMIDX",69,0)
 ;              
"RTN","ICPTMIDX",70,0)
SHIS ; Set Index ^DIC(81.3,"ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","ICPTMIDX",71,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^DIC(81.3,+($G(DA(1))),60,+($G(DA)),0))
"RTN","ICPTMIDX",72,0)
 S ^DIC(81.3,"ACT",(ICPTMOD_" "),ICPTSTA,ICPTEFF,DA(1),DA)=""
"RTN","ICPTMIDX",73,0)
 N PIECE,INACT S PIECE=$S('ICPTSTA:7,1:8),INACT=$S('ICPTSTA:1,1:"")
"RTN","ICPTMIDX",74,0)
 S $P(^DIC(81.3,DA(1),0),"^",5)=INACT,$P(^DIC(81.3,DA(1),0),"^",PIECE)=ICPTEFF
"RTN","ICPTMIDX",75,0)
 Q
"RTN","ICPTMIDX",76,0)
KHIS ; Kill Index ^DIC(81.3,"ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","ICPTMIDX",77,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(^DIC(81.3,+($G(DA(1))),60,+($G(DA)),0))
"RTN","ICPTMIDX",78,0)
 N PIECE,INACT,IEN,OPP,OPPSTA,OPPEFF,BOOL
"RTN","ICPTMIDX",79,0)
 S PIECE=$S('ICPTSTA:7,1:8),INACT=$S('ICPTSTA:"",1:1),OPPEFF=ICPTEFF,BOOL=0
"RTN","ICPTMIDX",80,0)
 F  S OPPEFF=$O(^DIC(81.3,DA(1),60,"B",OPPEFF),-1) Q:'OPPEFF!BOOL  D
"RTN","ICPTMIDX",81,0)
 . S IEN=$O(^DIC(81.3,DA(1),60,"B",OPPEFF,""))
"RTN","ICPTMIDX",82,0)
 . I 'IEN S OPPEFF="" Q
"RTN","ICPTMIDX",83,0)
 . S OPP=$G(^DIC(81.3,DA(1),60,IEN,0)),OPPEFF=$P($G(OPP),"^",1)
"RTN","ICPTMIDX",84,0)
 . S OPPSTA=$P($G(OPP),"^",2),BOOL=OPPSTA'=ICPTSTA
"RTN","ICPTMIDX",85,0)
 I BOOL D
"RTN","ICPTMIDX",86,0)
 . S $P(^DIC(81.3,DA(1),0),"^",5)=INACT,$P(^DIC(81.3,DA(1),0),"^",PIECE)=OPPEFF
"RTN","ICPTMIDX",87,0)
 E  S $P(^DIC(81.3,DA(1),0),"^",5)=1,$P(^DIC(81.3,DA(1),0),"^",7,8)="^"
"RTN","ICPTMIDX",88,0)
 K ^DIC(81.3,"ACT",(ICPTMOD_" "),ICPTSTA,ICPTEFF,DA(1),DA)
"RTN","ICPTMIDX",89,0)
 Q
"RTN","ICPTMOD")
0^3^B19453032
"RTN","ICPTMOD",1,0)
ICPTMOD ;ALB/ABR/DEK - CPT MODIFIER APIS ; 04/28/2003
"RTN","ICPTMOD",2,0)
 ;;6.0;CPT/HCPCS;**6,12,13,14**;May 19, 1997
"RTN","ICPTMOD",3,0)
 ;
"RTN","ICPTMOD",4,0)
 ; External References
"RTN","ICPTMOD",5,0)
 ;   DBIA  10103  $$DT^XLFDT
"RTN","ICPTMOD",6,0)
 ;                     
"RTN","ICPTMOD",7,0)
MOD(MOD,MFT,MDT,SRC,DFN) ;  returns basic info on CPT MODIFIERs
"RTN","ICPTMOD",8,0)
 ; Input:
"RTN","ICPTMOD",9,0)
 ;    MOD - modifier REQUIRED
"RTN","ICPTMOD",10,0)
 ;    MFT - modifier format 
"RTN","ICPTMOD",11,0)
 ;          where:  "I" = ien format
"RTN","ICPTMOD",12,0)
 ;                  "E" = .01 format (default)
"RTN","ICPTMOD",13,0)
 ;    MDT - date to check active for, default = today (FileMan format)
"RTN","ICPTMOD",14,0)
 ;          If MDT < 2890101, use 2890101
"RTN","ICPTMOD",15,0)
 ;          If MDT > DT, validate with newest In/Activation Dates
"RTN","ICPTMOD",16,0)
 ;          If MDT is year only, use first of the year
"RTN","ICPTMOD",17,0)
 ;          If MDT is year and month only, use first of the month
"RTN","ICPTMOD",18,0)
 ;    SRC - Modifier Source Screen.
"RTN","ICPTMOD",19,0)
 ;          If 0 or Null, check national(level 1,level 2)mods only
"RTN","ICPTMOD",20,0)
 ;    DFN - not in use but included in anticipation of future need
"RTN","ICPTMOD",21,0)
 ;
"RTN","ICPTMOD",22,0)
 ;  Output:  string:
"RTN","ICPTMOD",23,0)
 ;         ien^modifier^NAME^CODE^SOURCE^EFFECTIVE DATE^STATUS^Inactivation Date^Activation Date^MSG
"RTN","ICPTMOD",24,0)
 ;             where STATUS = 0 - inactive
"RTN","ICPTMOD",25,0)
 ;                          = 1 - active
"RTN","ICPTMOD",26,0)
 ;           EFFECTIVE DATE = date status became effective
"RTN","ICPTMOD",27,0)
 ;                   Activation Date = date code became active
"RTN","ICPTMOD",28,0)
 ;                   Inactivation Date = date code became inactive
"RTN","ICPTMOD",29,0)
 ;                   MSG = User Alert
"RTN","ICPTMOD",30,0)
 ;      -or-
"RTN","ICPTMOD",31,0)
 ;         -1^error description
"RTN","ICPTMOD",32,0)
 ;
"RTN","ICPTMOD",33,0)
 ;
"RTN","ICPTMOD",34,0)
 ; Variables:
"RTN","ICPTMOD",35,0)
 ;     DATA = 0-node for cpt modifier code
"RTN","ICPTMOD",36,0)
 ;      EFF = effective date
"RTN","ICPTMOD",37,0)
 ;      EFFX = ien of effective date
"RTN","ICPTMOD",38,0)
 ;      EFFS = status for date
"RTN","ICPTMOD",39,0)
 ;      STR = output
"RTN","ICPTMOD",40,0)
 ;
"RTN","ICPTMOD",41,0)
 N DATA,EFF,EFFX,EFFS,STR,MODN
"RTN","ICPTMOD",42,0)
 I $G(MOD)="" S STR="-1^NO MODIFIER SELECTED" G MODQ
"RTN","ICPTMOD",43,0)
 I $G(MFT)="" S MFT="E"
"RTN","ICPTMOD",44,0)
 I "E^I"'[MFT S STR="-1^INVALID MODIFIER FORMAT" G MODQ
"RTN","ICPTMOD",45,0)
 S MDT=$S($G(MDT)="":$$DT^XLFDT,1:$$DTBR^ICPTSUPT(MDT))
"RTN","ICPTMOD",46,0)
 ;
"RTN","ICPTMOD",47,0)
 ; find ien of modifier
"RTN","ICPTMOD",48,0)
 ; if mult mods have same name, return list of iens
"RTN","ICPTMOD",49,0)
 I MFT="E" S MODN=$O(^DIC(81.3,"B",MOD,0)) I $O(^(MODN)) S STR="-1^Multiple modifiers w/same name.  Select IEN: " D MULT G MODQ
"RTN","ICPTMOD",50,0)
 I MFT="E" S MOD=MODN ; sets MOD = ien
"RTN","ICPTMOD",51,0)
 S MOD=+MOD
"RTN","ICPTMOD",52,0)
 I 'MOD!'$D(^DIC(81.3,MOD)) S STR="-1^NO SUCH MODIFIER" G MODQ ; if no modifier, return error
"RTN","ICPTMOD",53,0)
 ;
"RTN","ICPTMOD",54,0)
 ;  move 0-node data into string
"RTN","ICPTMOD",55,0)
 S DATA=$G(^DIC(81.3,MOD,0))
"RTN","ICPTMOD",56,0)
 I '$L(DATA) S STR="-1^NO DATA" G MODQ
"RTN","ICPTMOD",57,0)
 S STR=MOD_"^"_$P(DATA,"^",1,4)
"RTN","ICPTMOD",58,0)
 I '$G(SRC),$P(STR,"^",5)="V" Q "-1^VA LOCAL MODIFIER SELECTED"
"RTN","ICPTMOD",59,0)
 S EFF=$$EFF^ICPTSUPT(81.3,MOD,MDT)
"RTN","ICPTMOD",60,0)
 ;I EFF'>0 S EFF="^0"
"RTN","ICPTMOD",61,0)
 I EFF<1 S $P(EFF,"^",2)=0
"RTN","ICPTMOD",62,0)
 S STR=STR_"^"_EFF_"^"_$$MSG^ICPTSUPT(MDT)
"RTN","ICPTMOD",63,0)
MODQ Q STR
"RTN","ICPTMOD",64,0)
 ;
"RTN","ICPTMOD",65,0)
MODP(CODE,MOD,MFT,MDT,SRC,DFN) ;  check if modifier can be used with code
"RTN","ICPTMOD",66,0)
 ; Input:
"RTN","ICPTMOD",67,0)
 ;    CODE - CPT/HCPCS code  (ien or .01 format)  REQUIRED
"RTN","ICPTMOD",68,0)
 ;    MOD - MODIFIER          REQUIRED
"RTN","ICPTMOD",69,0)
 ;    MFT - modifier format
"RTN","ICPTMOD",70,0)
 ;          "I" = ien format
"RTN","ICPTMOD",71,0)
 ;          "E" = .01 format (default)
"RTN","ICPTMOD",72,0)
 ;    MDT - date (default = today)(FileMan format)
"RTN","ICPTMOD",73,0)
 ;          If MDT < 2890101, use 2890101
"RTN","ICPTMOD",74,0)
 ;          If MDT > DT, validate with newest In/Activation Dates
"RTN","ICPTMOD",75,0)
 ;          If MDT is year only, use first of the year
"RTN","ICPTMOD",76,0)
 ;          If MDT is year and month only, use first of the month
"RTN","ICPTMOD",77,0)
 ;    SRC - Modifier Source Screen.
"RTN","ICPTMOD",78,0)
 ;          If 0 or Null, check national(level 1,level 2)mods only
"RTN","ICPTMOD",79,0)
 ;          If SRC>0, include VA modifiers
"RTN","ICPTMOD",80,0)
 ;    DFN - not in use but included in anticipation of future need
"RTN","ICPTMOD",81,0)
 ;
"RTN","ICPTMOD",82,0)
 ;  Output:  STR = 0 if pair is unacceptable
"RTN","ICPTMOD",83,0)
 ;           STR = IEN in 81.3^MODIFIER name (.02 field) if acceptable
"RTN","ICPTMOD",84,0)
 ;        or STR = -1^error message
"RTN","ICPTMOD",85,0)
 ;
"RTN","ICPTMOD",86,0)
 ; Variables
"RTN","ICPTMOD",87,0)
 N CODEA,CODN,PR,PRN,STR,MODN,MODN,MODX,POP,MODCK
"RTN","ICPTMOD",88,0)
 I $G(CODE)="" S STR="-1^NO CODE SELECTED" G MODPQ
"RTN","ICPTMOD",89,0)
 I $G(MOD)="" S STR="-1^NO MODIFIER SELECTED" G MODPQ
"RTN","ICPTMOD",90,0)
 I $G(MFT)="" S MFT="E"  ;if no modifier format selected, default to "E"
"RTN","ICPTMOD",91,0)
 I "E^I"'[MFT S STR="-1^INVALID MODIFIER FORMAT" G MODQ
"RTN","ICPTMOD",92,0)
 S MDT=$S($G(MDT)="":$$DT^XLFDT,1:$$DTBR^ICPTSUPT(MDT))
"RTN","ICPTMOD",93,0)
 ;
"RTN","ICPTMOD",94,0)
 ; check to see if cpt code exists
"RTN","ICPTMOD",95,0)
 S CODN=$S(CODE?1.N:+CODE,1:$$CODEN^ICPTCOD(CODE))
"RTN","ICPTMOD",96,0)
 I CODN<1!'$D(^ICPT(CODN,0)) Q "-1^NO SUCH CPT CODE"
"RTN","ICPTMOD",97,0)
 S CODE=$P($G(^ICPT(CODN,0)),"^") I '$L(CODE) S STR="-1^NO SUCH CPT CODE" G MODPQ
"RTN","ICPTMOD",98,0)
 I '$G(SRC),$P(^ICPT(CODN,0),"^",6)="L" S STR="-1^VA LOCAL CODE SELECTED" G MODPQ
"RTN","ICPTMOD",99,0)
 ; ICPT*6*13 check to see if cpt code active
"RTN","ICPTMOD",100,0)
 ;I MDT=DT,$P($G(^ICPT(CODN,0)),"^",4) S STR="-1^CPT CODE INACTIVE" G MODPQ
"RTN","ICPTMOD",101,0)
 ;I MDT'=DT,'$P($$EFF^ICPTSUPT(81,CODN,MDT),"^",2) S STR="-1^CPT CODE INACTIVE" G MODPQ
"RTN","ICPTMOD",102,0)
 S PRN=$$EFF^ICPTSUPT(81,CODN,MDT)
"RTN","ICPTMOD",103,0)
 I '$P(PRN,"^",2) Q "-1^CPT CODE INACTIVE"
"RTN","ICPTMOD",104,0)
 S CODEA=$$NUM^ICPTAPIU(CODE) ; convert code to numeric format
"RTN","ICPTMOD",105,0)
 ;
"RTN","ICPTMOD",106,0)
 ; find ien for modifier, if .01 sent in
"RTN","ICPTMOD",107,0)
 S MODCK=""
"RTN","ICPTMOD",108,0)
 I MFT="E" S MODN="",POP=0  F  S MODN=$O(^DIC(81.3,"B",MOD,MODN)) Q:(MODN="")!POP  D 
"RTN","ICPTMOD",109,0)
 . S MODCK=MODN
"RTN","ICPTMOD",110,0)
 . D MODC(MODN)
"RTN","ICPTMOD",111,0)
 . I STR>0 S POP=1
"RTN","ICPTMOD",112,0)
 I MFT="I" S MODCK=MOD D MODC(MOD)
"RTN","ICPTMOD",113,0)
 I MODCK="" S MODCK=+MODCK
"RTN","ICPTMOD",114,0)
 I '$D(^DIC(81.3,MODCK,0)) S STR="-1^NO SUCH MODIFIER" G MODPQ
"RTN","ICPTMOD",115,0)
 I '$G(SRC),$P(^DIC(81.3,MODCK,0),"^",4)="V" S STR="-1^VA LOCAL MODIFIER SELECTED"
"RTN","ICPTMOD",116,0)
MODPQ Q $G(STR)
"RTN","ICPTMOD",117,0)
 ;
"RTN","ICPTMOD",118,0)
MODC(MOD) ;checks modifier for range including code, and active for date desired
"RTN","ICPTMOD",119,0)
 ;  MOD = modifier ien
"RTN","ICPTMOD",120,0)
 ;
"RTN","ICPTMOD",121,0)
 N MODNM,MODEFF
"RTN","ICPTMOD",122,0)
 ;I MDT=DT,$D(^DIC(81.3,MOD,0)),$P(^DIC(81.3,MOD,0),"^",5) S STR="-1^modifier inactive" Q
"RTN","ICPTMOD",123,0)
 S MODEFF=$$EFF^ICPTSUPT(81.3,MOD,MDT)
"RTN","ICPTMOD",124,0)
 I '$P(MODEFF,"^",2) S STR="-1^modifier inactive" Q
"RTN","ICPTMOD",125,0)
 S PR=CODEA_.0001,PR=$O(^DIC(81.3,MOD,"M",PR),-1) ; find start of range
"RTN","ICPTMOD",126,0)
 I 'PR S STR=0 Q
"RTN","ICPTMOD",127,0)
 S PRN=^DIC(81.3,MOD,"M",PR) ; END RANGE VALUE
"RTN","ICPTMOD",128,0)
 I 'PRN S STR="-1^bad modifier file entry" Q
"RTN","ICPTMOD",129,0)
 ;
"RTN","ICPTMOD",130,0)
 I PRN<CODEA S STR=0 Q  ; if code greater than end range
"RTN","ICPTMOD",131,0)
 S MODNM=$P($G(^DIC(81.3,MOD,0)),"^",2)
"RTN","ICPTMOD",132,0)
 S STR=MOD_"^"_MODNM ; code modifier pair okay pending date check
"RTN","ICPTMOD",133,0)
 Q
"RTN","ICPTMOD",134,0)
 ;
"RTN","ICPTMOD",135,0)
MULT ; finds iens for all modifiers with same 2-letter code
"RTN","ICPTMOD",136,0)
 ;  MOD = .01, check B x-ref for other mods with equivalent .01 fields
"RTN","ICPTMOD",137,0)
 ;  output concatenates ien of each mod to STR, separated by ":"
"RTN","ICPTMOD",138,0)
 F MODN=0:0 S MODN=$O(^DIC(81.3,"B",MOD,MODN)) Q:'MODN   S STR=STR_MODN_"; "
"RTN","ICPTMOD",139,0)
 Q
"RTN","ICPTSUPT")
0^9^B5348332
"RTN","ICPTSUPT",1,0)
ICPTSUPT ;DLS/DEK - CPT SUPPORT FOR APIS ; 04/28/2003
"RTN","ICPTSUPT",2,0)
 ;;6.0;CPT/HCPCS;**14**;May 19, 1997
"RTN","ICPTSUPT",3,0)
 ;
"RTN","ICPTSUPT",4,0)
 ; External References
"RTN","ICPTSUPT",5,0)
 ;   DBIA  10103  $$DT^XLFDT
"RTN","ICPTSUPT",6,0)
 ;                     
"RTN","ICPTSUPT",7,0)
EFF(FILE,CODE,EDT) ; Returns Effective Date and Status for Code/Modifier
"RTN","ICPTSUPT",8,0)
 ; Input:
"RTN","ICPTSUPT",9,0)
 ;    FILE = file number  REQUIRED
"RTN","ICPTSUPT",10,0)
 ;           81 for CPT file
"RTN","ICPTSUPT",11,0)
 ;           81.3 for CPT MODIFIER file
"RTN","ICPTSUPT",12,0)
 ;    CODE = CPT CODE ien or CPT MODIFIER ien REQUIRED
"RTN","ICPTSUPT",13,0)
 ;    EDT = date to check for (FileMan format) (default = today)
"RTN","ICPTSUPT",14,0)
 ;
"RTN","ICPTSUPT",15,0)
 ; Output:    effective date^status^Inactivation Date^Active Date
"RTN","ICPTSUPT",16,0)
 ;          where STATUS = 1 = active
"RTN","ICPTSUPT",17,0)
 ;                         0 = inactive  
"RTN","ICPTSUPT",18,0)
 ;          or -1^error message
"RTN","ICPTSUPT",19,0)
 ;
"RTN","ICPTSUPT",20,0)
 ; Variables:
"RTN","ICPTSUPT",21,0)
 ;   EFILE = indirect file reference for code
"RTN","ICPTSUPT",22,0)
 ;   EFF,EFFDT,EFFDOS = effective dates
"RTN","ICPTSUPT",23,0)
 ;   EFFN = sub-entry ien
"RTN","ICPTSUPT",24,0)
 ;   EFFST = effective status
"RTN","ICPTSUPT",25,0)
 ;   STR = output
"RTN","ICPTSUPT",26,0)
 ;
"RTN","ICPTSUPT",27,0)
 I $G(FILE)="" Q "-1^NO FILE SELECTED"
"RTN","ICPTSUPT",28,0)
 I '(FILE=81!(FILE=81.3)) Q "-1^INVALID FILE"
"RTN","ICPTSUPT",29,0)
 I $G(CODE)="" Q "-1^NO "_$S(FILE=81:"CODE",1:"MODIFIER")_" SELECTED"
"RTN","ICPTSUPT",30,0)
 N EFILE,EFF,EFFN,STR,EFFDT,EFFST,EFFB,EFFDOS
"RTN","ICPTSUPT",31,0)
 S EFILE=$S(FILE=81:"^ICPT(",1:"^DIC(81.3,")_CODE_",60,"
"RTN","ICPTSUPT",32,0)
 S EDT=$S($G(EDT)="":$$DT^XLFDT,1:$$DTBR(EDT))+.001 ;date business rules
"RTN","ICPTSUPT",33,0)
 S EFF=$O(@(EFILE_"""B"","_EDT_")"),-1)
"RTN","ICPTSUPT",34,0)
 I 'EFF Q "^0^^"
"RTN","ICPTSUPT",35,0)
 S EFFN=$O(@(EFILE_"""B"","_EFF_",0)")) ; node 60 (effective date) sub-entry
"RTN","ICPTSUPT",36,0)
 S STR=$G(@(EFILE_EFFN_",0)"))
"RTN","ICPTSUPT",37,0)
 I STR="" Q "^0^^"
"RTN","ICPTSUPT",38,0)
 ;set Opposite eff. date based on status
"RTN","ICPTSUPT",39,0)
 S EFFDT=$P(STR,"^"),EFFST=$P(STR,"^",2),EFFB=0,EFF=+EFF
"RTN","ICPTSUPT",40,0)
 F  S EFF=$O(@(EFILE_"""B"","_EFF_")"),-1) Q:'EFF!EFFB  D
"RTN","ICPTSUPT",41,0)
 . S EFFN=$O(@(EFILE_"""B"","_EFF_",0)")) I 'EFFN S EFFB=1 Q
"RTN","ICPTSUPT",42,0)
 . S EFFDOS=$G(@(EFILE_EFFN_",0)")) I 'EFFDOS S EFFB=1 Q
"RTN","ICPTSUPT",43,0)
 . S EFFB=(EFFST'=$P(EFFDOS,"^",2))
"RTN","ICPTSUPT",44,0)
 S EFFDOS=$P($G(EFFDOS),"^")
"RTN","ICPTSUPT",45,0)
 I EFFST S $P(STR,"^",3,4)=(EFFDOS)_"^"_EFFDT
"RTN","ICPTSUPT",46,0)
 E  S $P(STR,"^",3,4)=EFFDT_"^"_(EFFDOS)
"RTN","ICPTSUPT",47,0)
 Q STR
"RTN","ICPTSUPT",48,0)
 ;
"RTN","ICPTSUPT",49,0)
DTBR(CDT) ; Date Business Rules
"RTN","ICPTSUPT",50,0)
 ; Input:
"RTN","ICPTSUPT",51,0)
 ;   CDT - Code Date to check (FileMan format, default=Today)
"RTN","ICPTSUPT",52,0)
 ;
"RTN","ICPTSUPT",53,0)
 ; Output:
"RTN","ICPTSUPT",54,0)
 ;   If CDT < Bus.RuleDflt., use Bus.RuleDflt.
"RTN","ICPTSUPT",55,0)
 ;   If CDT is year only, use first of the year
"RTN","ICPTSUPT",56,0)
 ;   If CDT is year and month only, use first of the month
"RTN","ICPTSUPT",57,0)
 ;
"RTN","ICPTSUPT",58,0)
 Q:'$G(CDT) $$DT^XLFDT ;nothing passed - use today
"RTN","ICPTSUPT",59,0)
 Q:$L($P(CDT,"."))'=7 $$DT^XLFDT ;bad format - use today
"RTN","ICPTSUPT",60,0)
 I CDT#10000=0 S CDT=CDT+101
"RTN","ICPTSUPT",61,0)
 S:CDT#100=0 CDT=CDT+1
"RTN","ICPTSUPT",62,0)
 Q $S(CDT<2890101:2890101,1:CDT)
"RTN","ICPTSUPT",63,0)
 ;
"RTN","ICPTSUPT",64,0)
MSG(CDT) ; inform of code text inaccuracy
"RTN","ICPTSUPT",65,0)
 ; Input:
"RTN","ICPTSUPT",66,0)
 ;   CDT - Code Date to check (FileMan format, Default = today)
"RTN","ICPTSUPT",67,0)
 ;         Not used - added for future need.
"RTN","ICPTSUPT",68,0)
 ; Output: User Alert
"RTN","ICPTSUPT",69,0)
 ;
"RTN","ICPTSUPT",70,0)
 Q "CODE TEXT MAY BE INACCURATE"
"RTN","ICPTSUPT",71,0)
 ;
"RTN","ICPTSUPT",72,0)
GBL(CODE) ; return Global Node of Code
"RTN","ICPTSUPT",73,0)
 Q:CODE?5N!(CODE?1U4N)!(CODE?4N1U) "^ICPT("
"RTN","ICPTSUPT",74,0)
 Q:CODE?2N!(CODE?2U)!(CODE?1U1N) "^DIC(81.3,"
"RTN","ICPTSUPT",75,0)
 Q ""
"RTN","ICPTSUPT",76,0)
 ;
"UP",81,81.02,-1)
81^60
"UP",81,81.02,0)
81.02
"UP",81.3,81.33,-1)
81.3^60
"UP",81.3,81.33,0)
81.33
"VER")
8.0^22.0
"^DD",81,81,.01,0)
CPT CODE^RFI^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>5!($L(X)<5)!'(X?1A4N!(X?5N)!(X?4N1A))!(X'?.ANP) X
"^DD",81,81,.01,1,0)
^.1
"^DD",81,81,.01,1,1,0)
81^B
"^DD",81,81,.01,1,1,1)
S ^ICPT("B",$E(X,1,30),DA)=""
"^DD",81,81,.01,1,1,2)
K ^ICPT("B",$E(X,1,30),DA)
"^DD",81,81,.01,1,2,0)
81^E^MUMPS
"^DD",81,81,.01,1,2,1)
I +X,+X<10000 S ^ICPT("E",+X,DA)=""
"^DD",81,81,.01,1,2,2)
I +X,+X<10000 K ^ICPT("E",+X,DA)
"^DD",81,81,.01,1,3,0)
81^F^MUMPS
"^DD",81,81,.01,1,3,1)
I 'X S ^ICPT("F",$E(X,1,30),DA)=""
"^DD",81,81,.01,1,3,2)
I 'X K ^ICPT("F",$E(X,1,30),DA)
"^DD",81,81,.01,1,4,0)
81^BA^MUMPS
"^DD",81,81,.01,1,4,1)
S ^ICPT("BA",X_" ",DA)=""
"^DD",81,81,.01,1,4,2)
K ^ICPT("BA",X_" ",DA)
"^DD",81,81,.01,1,4,"DT")
2940217
"^DD",81,81,.01,1,5,0)
81^ACT^MUMPS
"^DD",81,81,.01,1,5,1)
D SAHC^ICPTIDX
"^DD",81,81,.01,1,5,2)
D KAHC^ICPTIDX
"^DD",81,81,.01,1,5,"%D",0)
^.101^1^1^3030305^^^^
"^DD",81,81,.01,1,5,"%D",1,0)
Set and Kill Activation History.
"^DD",81,81,.01,1,5,"DT")
3030221
"^DD",81,81,.01,3)
ANSWER MUST BE 5 CHARACTERS IN LENGTH
"^DD",81,81,.01,21,0)
^.001^6^6^3030325^^^^
"^DD",81,81,.01,21,1,0)
This file contains both CPT from the AMA and HCFA. The AMA entries
"^DD",81,81,.01,21,2,0)
will have an internal number less than 99999. The AMA CPT are '5'
"^DD",81,81,.01,21,3,0)
numbers that coorespond to the internal number. The HCFA codes will
"^DD",81,81,.01,21,4,0)
have an internal number of 100000 or greater. These codes are '1'
"^DD",81,81,.01,21,5,0)
alpha followed by '4' numbers, which will NOT correspond to the
"^DD",81,81,.01,21,6,0)
internal number.
"^DD",81,81,.01,"DT")
3030221
"^DD",81,81,.01,"LAYGO",1,0)
W !?5,*7,"Adding CPT codes is prohibited!" I 0
"^DD",81,81,7,0)
INACTIVE DATE^D^^0;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",81,81,7,3)
Enter date the CPT Code is deactivated.
"^DD",81,81,7,21,0)
^.001^1^1^3030220^^
"^DD",81,81,7,21,1,0)
Date the CPT code becomes/became inactivated.
"^DD",81,81,7,"DT")
3030220
"^DD",81,81,8,0)
ACTIVE DATE^D^^0;8^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",81,81,8,3)
Enter date the CPT Code is activated.
"^DD",81,81,8,21,0)
^^1^1^3030220^
"^DD",81,81,8,21,1,0)
Date the CPT code becomes/became activated.
"^DD",81,81,8,"DT")
3030220
"^DD",81,81,60,0)
EFFECTIVE DATE^81.02DA^^60;0
"^DD",81,81.02,0)
EFFECTIVE DATE SUB-FIELD^^.02^2
"^DD",81,81.02,0,"NM","EFFECTIVE DATE")

"^DD",81,81.02,.01,0)
EFFECTIVE DATE^RD^^0;1^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",81,81.02,.01,1,0)
^.1
"^DD",81,81.02,.01,1,1,0)
81.02^B
"^DD",81,81.02,.01,1,1,1)
S ^ICPT(DA(1),60,"B",$E(X,1,30),DA)=""
"^DD",81,81.02,.01,1,1,2)
K ^ICPT(DA(1),60,"B",$E(X,1,30),DA)
"^DD",81,81.02,.01,1,2,0)
81^ACT^MUMPS
"^DD",81,81.02,.01,1,2,1)
D SAHD^ICPTIDX
"^DD",81,81.02,.01,1,2,2)
D KAHD^ICPTIDX
"^DD",81,81.02,.01,1,2,"%D",0)
^.101^1^1^3030305^^^
"^DD",81,81.02,.01,1,2,"%D",1,0)
Set and Kill Activation History.
"^DD",81,81.02,.01,1,2,"DT")
3030221
"^DD",81,81.02,.01,21,0)
^.001^1^1^3030221^^
"^DD",81,81.02,.01,21,1,0)
Date from which current status is effective.
"^DD",81,81.02,.01,"DT")
3030221
"^DD",81,81.02,.02,0)
STATUS^RS^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",81,81.02,.02,1,0)
^.1
"^DD",81,81.02,.02,1,1,0)
81^ACT^MUMPS
"^DD",81,81.02,.02,1,1,1)
D SAHS^ICPTIDX
"^DD",81,81.02,.02,1,1,2)
D KAHS^ICPTIDX
"^DD",81,81.02,.02,1,1,"%D",0)
^.101^1^1^3030305^^^
"^DD",81,81.02,.02,1,1,"%D",1,0)
Set and Kill Activation History.
"^DD",81,81.02,.02,1,1,"DT")
3030221
"^DD",81,81.02,.02,"DT")
3030221
"^DD",81.3,81.3,.01,0)
MODIFIER^RF^^0;1^K:$L(X)>5!($L(X)<2)!'(X'?1P.E) X
"^DD",81.3,81.3,.01,1,0)
^.1
"^DD",81.3,81.3,.01,1,1,0)
81.3^B
"^DD",81.3,81.3,.01,1,1,1)
S ^DIC(81.3,"B",$E(X,1,30),DA)=""
"^DD",81.3,81.3,.01,1,1,2)
K ^DIC(81.3,"B",$E(X,1,30),DA)
"^DD",81.3,81.3,.01,1,1,"%D",0)
^^1^1^2970327^^
"^DD",81.3,81.3,.01,1,1,"%D",1,0)
This cross-reference allows look-up by modifier.
"^DD",81.3,81.3,.01,1,2,0)
81.3^BA^MUMPS
"^DD",81.3,81.3,.01,1,2,1)
S ^DIC(81.3,"BA",X_" ",DA)=""
"^DD",81.3,81.3,.01,1,2,2)
K ^DIC(81.3,"BA",X_" ",DA)
"^DD",81.3,81.3,.01,1,2,"DT")
3030307
"^DD",81.3,81.3,.01,1,3,0)
81.3^ACT^MUMPS
"^DD",81.3,81.3,.01,1,3,1)
D SAHC^ICPTMIDX
"^DD",81.3,81.3,.01,1,3,2)
D KAHC^ICPTMIDX
"^DD",81.3,81.3,.01,1,3,"%D",0)
^^1^1^3030307^
"^DD",81.3,81.3,.01,1,3,"%D",1,0)
Set and Kill Activation History.
"^DD",81.3,81.3,.01,1,3,"DT")
3030307
"^DD",81.3,81.3,.01,3)
Answer must be 2-5 characters in length.
"^DD",81.3,81.3,.01,21,0)
^^1^1^2990908^^^
"^DD",81.3,81.3,.01,21,1,0)
This field contains the modifier.
"^DD",81.3,81.3,.01,"DT")
3030307
"^DD",81.3,81.3,.01,"LAYGO",1,0)
W !?5,*7,"Adding CPT modifiers is prohibited!" I 0
"^DD",81.3,81.3,7,0)
INACTIVE DATE^D^^0;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",81.3,81.3,7,3)
Enter date the CPT Modifier became deactivated.
"^DD",81.3,81.3,7,21,0)
^^1^1^3030227^
"^DD",81.3,81.3,7,21,1,0)
Date the CPT Modifier becomes/became inactivated.
"^DD",81.3,81.3,7,"DT")
3030227
"^DD",81.3,81.3,8,0)
ACTIVE DATE^D^^0;8^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",81.3,81.3,8,3)
Enter date the CPT Modifier is activated.
"^DD",81.3,81.3,8,21,0)
^^1^1^3030227^
"^DD",81.3,81.3,8,21,1,0)
Date the CPT Modifier becomes/became activated.
"^DD",81.3,81.3,8,"DT")
3030227
"^DD",81.3,81.3,60,0)
EFFECTIVE DATE^81.33DA^^60;0
"^DD",81.3,81.33,0)
EFFECTIVE DATE SUB-FIELD^^.02^2
"^DD",81.3,81.33,0,"NM","EFFECTIVE DATE")

"^DD",81.3,81.33,.01,0)
EFFECTIVE DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",81.3,81.33,.01,1,0)
^.1
"^DD",81.3,81.33,.01,1,1,0)
81.33^B
"^DD",81.3,81.33,.01,1,1,1)
S ^DIC(81.3,DA(1),60,"B",$E(X,1,30),DA)=""
"^DD",81.3,81.33,.01,1,1,2)
K ^DIC(81.3,DA(1),60,"B",$E(X,1,30),DA)
"^DD",81.3,81.33,.01,1,2,0)
81.3^ACT^MUMPS
"^DD",81.3,81.33,.01,1,2,1)
D SAHD^ICPTMIDX
"^DD",81.3,81.33,.01,1,2,2)
D KAHD^ICPTMIDX
"^DD",81.3,81.33,.01,1,2,"%D",0)
^^1^1^3030307^
"^DD",81.3,81.33,.01,1,2,"%D",1,0)
Set and Kill Activation History.
"^DD",81.3,81.33,.01,1,2,"DT")
3030307
"^DD",81.3,81.33,.01,"DT")
3030307
"^DD",81.3,81.33,.02,0)
STATUS^S^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",81.3,81.33,.02,1,0)
^.1
"^DD",81.3,81.33,.02,1,1,0)
81.3^ACT^MUMPS
"^DD",81.3,81.33,.02,1,1,1)
D SAHS^ICPTMIDX
"^DD",81.3,81.33,.02,1,1,2)
D KAHS^ICPTMIDX
"^DD",81.3,81.33,.02,1,1,"%D",0)
^^1^1^3030307^
"^DD",81.3,81.33,.02,1,1,"%D",1,0)
Set and Kill Activation History.
"^DD",81.3,81.33,.02,1,1,"DT")
3030307
"^DD",81.3,81.33,.02,"DT")
3030307
**END**
**END**
