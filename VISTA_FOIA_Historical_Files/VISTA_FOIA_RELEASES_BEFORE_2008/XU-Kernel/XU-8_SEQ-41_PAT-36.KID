Released XU*8*36 SEQ #41
Extracted from mail message
**KIDS**:XU*8.0*36^

**INSTALL NAME**
XU*8.0*36
"BLD",141,0)
XU*8.0*36^KERNEL^0^2961003^n
"BLD",141,1,0)
^^165^165^2961108^
"BLD",141,1,1,0)
MSG from Warren Wright about large numbers of DEVICE LOCK bulletins
"BLD",141,1,2,0)
sent when someone leans on keyboard.
"BLD",141,1,3,0)
 
"BLD",141,1,4,0)
NOIS MCM-1195-51490 That the DEVICE LOCK bulletins aren't much help.
"BLD",141,1,5,0)
 
"BLD",141,1,6,0)
NOIS CLE-1095-43605  The check if a user needed to be deactivated was
"BLD",141,1,7,0)
counting 'Keep at Terminate' keys even though they would never be removed. 
"BLD",141,1,8,0)
 
"BLD",141,1,9,0)
NOIS MAC-0696-61616 WBP-1195-20971 CTX-0896-71639 
"BLD",141,1,10,0)
The check to close hung SPOOL documents had a incorrect test.
"BLD",141,1,11,0)
 
"BLD",141,1,12,0)
NOIS SEP-0796-62056  The purge option was failing to get any site data
"BLD",141,1,13,0)
from the Kernel System Parameter file. It was looking at the wrong node.
"BLD",141,1,14,0)
 
"BLD",141,1,15,0)
NOIS NOL-0796-70230  If the data in the spool file was longer that 255
"BLD",141,1,16,0)
characters, it would cause an error in %ZIS4 on DSM systems.  This has
"BLD",141,1,17,0)
been fixed but the report may not print the way it would have if sent
"BLD",141,1,18,0)
directly to the printer.
"BLD",141,1,19,0)
 
"BLD",141,1,20,0)
NOIS WBP-0796-20862 When the number of spool documents is checked, only
"BLD",141,1,21,0)
those with data are counted. This is changed to count all spool documents 
"BLD",141,1,22,0)
with or without data.
"BLD",141,1,23,0)
 
"BLD",141,1,24,0)
E3R  --  Request for a way to have the current date as part of a auto 
"BLD",141,1,25,0)
generated name (GENERATE SPL DOC NAME).  Now if the device name includes
"BLD",141,1,26,0)
"|DT|" that string will be replaced with the current date.
"BLD",141,1,27,0)
 
"BLD",141,1,28,0)
E3R 8844  To include Person class in the User Inquiry.
"BLD",141,1,29,0)
 
"BLD",141,1,30,0)
NOIS IVM-1095-32452 Some times taskman doesn't release devices
"BLD",141,1,31,0)
when it should.
"BLD",141,1,32,0)
 
"BLD",141,1,33,0)
NOIS NOL-0996-70063 At a dual TaskMan site Problem starting tasks on
"BLD",141,1,34,0)
the working node. The TaskMan part of this patch was developed to address
"BLD",141,1,35,0)
problems at dual TaskMan sites after the install of patch 24. It is
"BLD",141,1,36,0)
unclear exactly what the problem was, but with load balancing work would
"BLD",141,1,37,0)
back up.  There is a new algorithm to start new submanagers and when
"BLD",141,1,38,0)
submanagers should exit.  We try and keep the number of submanagers  at a
"BLD",141,1,39,0)
level equal to a: the number of devices in the IO list.  b: the MIN
"BLD",141,1,40,0)
SUBMANAGER CNT. All submanagers will remain if the JOB list has any tasks
"BLD",141,1,41,0)
in it.
"BLD",141,1,42,0)
 
"BLD",141,1,43,0)
       -----   This patch adds two new fields to the TaskMan site
"BLD",141,1,44,0)
parameter file (14.7):  (1), MIN SUBMANAGER CNT, allows a site to set a
"BLD",141,1,45,0)
lower limit on the number of submanagers to keep around.  (2), TM MASTER,
"BLD",141,1,46,0)
is only used when a volume set is mounted on another but shares the
"BLD",141,1,47,0)
library account.  This is a pointer back to file 14.7 and would point to
"BLD",141,1,48,0)
the entry that is the control entry for TaskMan on that node.
"BLD",141,1,49,0)
 
"BLD",141,1,50,0)
Local MSG #1082921 
"BLD",141,1,51,0)
       DIC error in Add a New User.  Problem in the page numbering of the
"BLD",141,1,52,0)
new FORM for Add a New User and SECONDARY MENUS.  Sending out all three
"BLD",141,1,53,0)
FORMs with unified page numbering.
"BLD",141,1,54,0)
 
"BLD",141,1,55,0)
 
"BLD",141,1,56,0)
NOIS MAD-0895-40177 Some sites have some leftover nodes in the Institution 
"BLD",141,1,57,0)
file.
"BLD",141,1,58,0)
 
"BLD",141,1,59,0)
Collect more data in the standard error trap.
"BLD",141,1,60,0)
 
"BLD",141,1,61,0)
In patch 24 $X was set to zero before doing the close execute code.
"BLD",141,1,62,0)
This was changed to check if $X>0 and to set it to 1 so that code (like
"BLD",141,1,63,0)
P-MESSAGE) that test $X would still work. 
"BLD",141,1,64,0)
 
"BLD",141,1,65,0)
If some package was installed after Kernel 8, the "ID" nodes on the
"BLD",141,1,66,0)
NEW PERSON file got changed back to an early version.  Nodes are reset.
"BLD",141,1,67,0)
 
"BLD",141,1,68,0)
NOIS IND-0996-41382 Changes to FTG^%ZISH made in XU*8*24 didn't work for
"BLD",141,1,69,0)
input like S Y=$$FTG^%ZISH("","TEST.DAT",$NA(OUT(0)),1) it did work
"BLD",141,1,70,0)
fine on S Y=$$FTG^%ZISH("","TEST.DAT",$NA(^TMP("XX",$J,0)),3). Fixed.
"BLD",141,1,71,0)
 
"BLD",141,1,72,0)
Various requests to bring back ZTMGRSET.  This new version will load all
"BLD",141,1,73,0)
all routines if called from the top, or only the routines with a given
"BLD",141,1,74,0)
patch number if called at RELOAD^ZTMGRSET.
"BLD",141,1,75,0)
 
"BLD",141,1,76,0)
NOIS BRK-1096-12512, CHW-0996-42161 While testing changes to %ZTER for
"BLD",141,1,77,0)
use with the new error trap we got ECODE errors under some conditions.
"BLD",141,1,78,0)
This has been fixed with a small change to %ZTER.
"BLD",141,1,79,0)
 
"BLD",141,1,80,0)
Routine      CheckSum    2nd Line
"BLD",141,1,81,0)
XUINPCH       1467475    ;;8.0;;KERNEL;**20,36**;Feb. 9, 1996
"BLD",141,1,82,0)
XUSTERM      14380010    ;;8.0;KERNEL;**36**;Jul 10, 1995
"BLD",141,1,83,0)
XUSTZ         3010944    ;;8.0;KERNEL;**36**;Jul 10, 1995
"BLD",141,1,84,0)
XUTMUSE2     13026855    ;;8.0;KERNEL;**36**;Jul 10, 1995
"BLD",141,1,85,0)
ZIS3          6450084    ;;8.0;KERNEL;**18,36**;JUL 10, 1995
"BLD",141,1,86,0)
ZIS4MSM       6649854    ;;8.0;KERNEL;**23,36**;JUL 03, 1995
"BLD",141,1,87,0)
ZIS4VXD       8342152    ;;8.0;KERNEL;**23,36**;JUL 03, 1995
"BLD",141,1,88,0)
ZISC          8463272    ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"BLD",141,1,89,0)
ZISHMSM       5354551    ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"BLD",141,1,90,0)
ZISHVXD       7245146    ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"BLD",141,1,91,0)
ZISPL1        8550686    ;;8.0;KERNEL;**23,36**;Jul 10, 1995
"BLD",141,1,92,0)
ZISPL2        4088281    ;;8.0;KERNEL;**23,36**;Jul 10, 1995
"BLD",141,1,93,0)
ZISTCP        1828160    ;;8.0;KERNEL;**36**;Jun 02, 1994
"BLD",141,1,94,0)
ZTER         18736553    ;;8.0;KERNEL;**8,18,32,24,36**;JUL 10, 1995
"BLD",141,1,95,0)
ZTER1         5603505    ;;8.0;KERNEL;**18,24,36**;JUL 10, 1995
"BLD",141,1,96,0)
ZTM           7805017    ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"BLD",141,1,97,0)
ZTM0          5563711    ;;8.0;KERNEL;**42,36**;JUL 10, 1995
"BLD",141,1,98,0)
ZTM5          3748675    ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"BLD",141,1,99,0)
ZTMGRSET     12724965    ;;8.0;KERNEL;**36**;Dec 30, 1993
"BLD",141,1,100,0)
ZTMON1        7519989    ;;8.0;KERNEL;**36**;Jul 10, 1995
"BLD",141,1,101,0)
ZTMS          5200197    ;;8.0;KERNEL;**2,18,24,36**;Jul 10, 1995
"BLD",141,1,102,0)
ZTMS1         6210144    ;;8.0;KERNEL;**36**;JUL 10, 1995
"BLD",141,1,103,0)
ZTMS2         5283853    ;;8.0;KERNEL;**2,18,23,36**;Jul 10, 1995
"BLD",141,1,104,0)
ZTMS3         9454395    ;;8.0;KERNEL;**1,18,36**;Jul 03, 1995
"BLD",141,1,105,0)
========================================================================= 
"BLD",141,1,106,0)
INSTALLATION:
"BLD",141,1,107,0)
  
"BLD",141,1,108,0)
1.  Some of these routines are usually mapped on systems that allow
"BLD",141,1,109,0)
mapping, so you will need to disable mapping for the affected routines.
"BLD",141,1,110,0)
 
"BLD",141,1,111,0)
2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",141,1,112,0)
option will load the KIDS package onto your system.
"BLD",141,1,113,0)
 
"BLD",141,1,114,0)
3.  The patch has now been loaded into a Transport global on your system.
"BLD",141,1,115,0)
You now need to use KIDS to install the Transport global.
"BLD",141,1,116,0)
On the KIDS menu, under the 'Installation' menu, use the following
"BLD",141,1,117,0)
options:
"BLD",141,1,118,0)
          Verify Checksums in Transport Global
"BLD",141,1,119,0)
          Print Transport Global
"BLD",141,1,120,0)
          Compare Transport Global to Current System
"BLD",141,1,121,0)
          Backup a Transport Global
"BLD",141,1,122,0)
  
"BLD",141,1,123,0)
4.  Users can remain on the system. 
"BLD",141,1,124,0)
Also STOP TASKMAN. As long running jobs exit, they will get CLOBER errors.
"BLD",141,1,125,0)
This isn't a problem because they have finished their work and TaskMan
"BLD",141,1,126,0)
will start new ones.
"BLD",141,1,127,0)
 
"BLD",141,1,128,0)
   5.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",141,1,129,0)
options:
"BLD",141,1,130,0)
          Install Package(s)  'XU*8.0*36'
"BLD",141,1,131,0)
 
"BLD",141,1,132,0)
6.  MSM Sites - Answer YES to the question 'Want to MOVE routines to other
"BLD",141,1,133,0)
CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",141,1,134,0)
 
"BLD",141,1,135,0)
7.  After installing this patch, you need to move several routines from
"BLD",141,1,136,0)
your production account to the manager account:
"BLD",141,1,137,0)
 
"BLD",141,1,138,0)
       ZIS4MSM
"BLD",141,1,139,0)
       ZIS4VXD
"BLD",141,1,140,0)
       ZISC
"BLD",141,1,141,0)
       ZISHMSM
"BLD",141,1,142,0)
       ZISHVXD
"BLD",141,1,143,0)
       ZISTCP
"BLD",141,1,144,0)
       ZTER
"BLD",141,1,145,0)
       ZTER1
"BLD",141,1,146,0)
       ZTM
"BLD",141,1,147,0)
       ZTM0
"BLD",141,1,148,0)
       ZTM5
"BLD",141,1,149,0)
       ZTMGRSET
"BLD",141,1,150,0)
       ZTMON1
"BLD",141,1,151,0)
       ZTMS
"BLD",141,1,152,0)
       ZTMS1
"BLD",141,1,153,0)
       ZTMS2
"BLD",141,1,154,0)
       ZTMS3
"BLD",141,1,155,0)
 
"BLD",141,1,156,0)
       and in the manager account, rename:
"BLD",141,1,157,0)
       
"BLD",141,1,158,0)
       DO RELOAD^ZTMGRSET
"BLD",141,1,159,0)
       Select the System
"BLD",141,1,160,0)
       Patch number to load: 36
"BLD",141,1,161,0)
        
"BLD",141,1,162,0)
8.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",141,1,163,0)
 
"BLD",141,1,164,0)
9.  Start TaskMan, Restart Taskman on other nodes if you need to run more
"BLD",141,1,165,0)
than one TaskMan.
"BLD",141,4,0)
^9.64PA^14.7^2
"BLD",141,4,3.2,0)
3.2
"BLD",141,4,3.2,2,0)
^9.641^3.2^1
"BLD",141,4,3.2,2,3.2,0)
TERMINAL TYPE  (File-top level)
"BLD",141,4,3.2,2,3.2,1,0)
^9.6411^110.1^2
"BLD",141,4,3.2,2,3.2,1,6.1,0)
OPEN EXECUTE DESCRIPTION
"BLD",141,4,3.2,2,3.2,1,110.1,0)
OPEN PRINTER DESCRIPTION
"BLD",141,4,3.2,222)
y^n^p^^^^n
"BLD",141,4,14.7,0)
14.7
"BLD",141,4,14.7,2,0)
^9.641^14.7^1
"BLD",141,4,14.7,2,14.7,0)
TASKMAN SITE PARAMETERS  (File-top level)
"BLD",141,4,14.7,2,14.7,1,0)
^9.6411^12^2
"BLD",141,4,14.7,2,14.7,1,11,0)
MIN SUBMANAGER CNT
"BLD",141,4,14.7,2,14.7,1,12,0)
TM MASTER
"BLD",141,4,14.7,222)
y^n^p^^^^n
"BLD",141,4,"APDD",3.2,3.2)

"BLD",141,4,"APDD",3.2,3.2,6.1)

"BLD",141,4,"APDD",3.2,3.2,110.1)

"BLD",141,4,"APDD",14.7,14.7)

"BLD",141,4,"APDD",14.7,14.7,11)

"BLD",141,4,"APDD",14.7,14.7,12)

"BLD",141,4,"B",3.2,3.2)

"BLD",141,4,"B",14.7,14.7)

"BLD",141,"INIT")
POST36^XUINPCH
"BLD",141,"KRN",0)
^9.67PA^8994^15
"BLD",141,"KRN",.4,0)
.4
"BLD",141,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",141,"KRN",.4,"NM",1,0)
XUSERINQ    FILE #200^200^0
"BLD",141,"KRN",.4,"NM","B","XUSERINQ    FILE #200",1)

"BLD",141,"KRN",.401,0)
.401
"BLD",141,"KRN",.402,0)
.402
"BLD",141,"KRN",.403,0)
.403
"BLD",141,"KRN",.403,"NM",0)
^9.68A^3^3
"BLD",141,"KRN",.403,"NM",1,0)
XUEXISTING USER    FILE #200^200^0
"BLD",141,"KRN",.403,"NM",2,0)
XUNEW USER    FILE #200^200^0
"BLD",141,"KRN",.403,"NM",3,0)
XUREACT USER    FILE #200^200^0
"BLD",141,"KRN",.403,"NM","B","XUEXISTING USER    FILE #200",1)

"BLD",141,"KRN",.403,"NM","B","XUNEW USER    FILE #200",2)

"BLD",141,"KRN",.403,"NM","B","XUREACT USER    FILE #200",3)

"BLD",141,"KRN",.5,0)
.5
"BLD",141,"KRN",.84,0)
.84
"BLD",141,"KRN",3.6,0)
3.6
"BLD",141,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",141,"KRN",3.6,"NM",1,0)
XUSLOCK^^0
"BLD",141,"KRN",3.6,"NM","B","XUSLOCK",1)

"BLD",141,"KRN",9.2,0)
9.2
"BLD",141,"KRN",9.8,0)
9.8
"BLD",141,"KRN",9.8,"NM",0)
^9.68A^23^23
"BLD",141,"KRN",9.8,"NM",1,0)
XUSTZ^^0^B4173723
"BLD",141,"KRN",9.8,"NM",2,0)
ZISPL2^^0^B5153831
"BLD",141,"KRN",9.8,"NM",3,0)
XUSTERM^^0^B23343614
"BLD",141,"KRN",9.8,"NM",4,0)
ZTMS3^^0^B20822122
"BLD",141,"KRN",9.8,"NM",5,0)
XUTMUSE2^^0^B24321902
"BLD",141,"KRN",9.8,"NM",6,0)
ZISTCP^^0^B5711371
"BLD",141,"KRN",9.8,"NM",7,0)
ZTER^^0^B26696573
"BLD",141,"KRN",9.8,"NM",8,0)
ZTER1^^0^B7922926
"BLD",141,"KRN",9.8,"NM",9,0)
ZTMS1^^0^B20410757
"BLD",141,"KRN",9.8,"NM",10,0)
ZTMS^^0^B12157337
"BLD",141,"KRN",9.8,"NM",11,0)
ZTM^^0^B22415402
"BLD",141,"KRN",9.8,"NM",12,0)
ZTM5^^0^B10278881
"BLD",141,"KRN",9.8,"NM",13,0)
ZISHVXD^^0^B40180333
"BLD",141,"KRN",9.8,"NM",14,0)
ZISHMSM^^0^B30589712
"BLD",141,"KRN",9.8,"NM",15,0)
ZTM0^^0^B11057147
"BLD",141,"KRN",9.8,"NM",16,0)
ZTMS2^^0^B16621838
"BLD",141,"KRN",9.8,"NM",17,0)
ZTMON1^^0^B12260259
"BLD",141,"KRN",9.8,"NM",18,0)
ZIS4VXD^^0^B16916951
"BLD",141,"KRN",9.8,"NM",19,0)
ZIS4MSM^^0^B14131618
"BLD",141,"KRN",9.8,"NM",20,0)
ZISC^^0^B19978972
"BLD",141,"KRN",9.8,"NM",21,0)
ZISPL1^^0^B14292978
"BLD",141,"KRN",9.8,"NM",22,0)
ZTMGRSET^^0^B28153462
"BLD",141,"KRN",9.8,"NM",23,0)
ZIS3^^0^B10917946
"BLD",141,"KRN",9.8,"NM","B","XUSTERM",3)

"BLD",141,"KRN",9.8,"NM","B","XUSTZ",1)

"BLD",141,"KRN",9.8,"NM","B","XUTMUSE2",5)

"BLD",141,"KRN",9.8,"NM","B","ZIS3",23)

"BLD",141,"KRN",9.8,"NM","B","ZIS4MSM",19)

"BLD",141,"KRN",9.8,"NM","B","ZIS4VXD",18)

"BLD",141,"KRN",9.8,"NM","B","ZISC",20)

"BLD",141,"KRN",9.8,"NM","B","ZISHMSM",14)

"BLD",141,"KRN",9.8,"NM","B","ZISHVXD",13)

"BLD",141,"KRN",9.8,"NM","B","ZISPL1",21)

"BLD",141,"KRN",9.8,"NM","B","ZISPL2",2)

"BLD",141,"KRN",9.8,"NM","B","ZISTCP",6)

"BLD",141,"KRN",9.8,"NM","B","ZTER",7)

"BLD",141,"KRN",9.8,"NM","B","ZTER1",8)

"BLD",141,"KRN",9.8,"NM","B","ZTM",11)

"BLD",141,"KRN",9.8,"NM","B","ZTM0",15)

"BLD",141,"KRN",9.8,"NM","B","ZTM5",12)

"BLD",141,"KRN",9.8,"NM","B","ZTMGRSET",22)

"BLD",141,"KRN",9.8,"NM","B","ZTMON1",17)

"BLD",141,"KRN",9.8,"NM","B","ZTMS",10)

"BLD",141,"KRN",9.8,"NM","B","ZTMS1",9)

"BLD",141,"KRN",9.8,"NM","B","ZTMS2",16)

"BLD",141,"KRN",9.8,"NM","B","ZTMS3",4)

"BLD",141,"KRN",19,0)
19
"BLD",141,"KRN",19.1,0)
19.1
"BLD",141,"KRN",101,0)
101
"BLD",141,"KRN",409.61,0)
409.61
"BLD",141,"KRN",8994,0)
8994
"BLD",141,"KRN",8995,0)
8995
"BLD",141,"KRN","B",.4,.4)

"BLD",141,"KRN","B",.401,.401)

"BLD",141,"KRN","B",.402,.402)

"BLD",141,"KRN","B",.403,.403)

"BLD",141,"KRN","B",.5,.5)

"BLD",141,"KRN","B",.84,.84)

"BLD",141,"KRN","B",3.6,3.6)

"BLD",141,"KRN","B",9.2,9.2)

"BLD",141,"KRN","B",9.8,9.8)

"BLD",141,"KRN","B",19,19)

"BLD",141,"KRN","B",19.1,19.1)

"BLD",141,"KRN","B",101,101)

"BLD",141,"KRN","B",409.61,409.61)

"BLD",141,"KRN","B",8994,8994)

"BLD",141,"KRN","B",8995,8995)

"FIA",3.2)
TERMINAL TYPE
"FIA",3.2,0)
^%ZIS(2,
"FIA",3.2,0,0)
3.2I
"FIA",3.2,0,1)
y^n^p^^^^n
"FIA",3.2,0,10)

"FIA",3.2,0,11)

"FIA",3.2,0,"RLRO")

"FIA",3.2,0,"VR")
8.0^XU
"FIA",3.2,3.2)
1
"FIA",3.2,3.2,6.1)

"FIA",3.2,3.2,110.1)

"FIA",3.2,3.206)
0
"FIA",3.2,3.207)
0
"FIA",14.7)
TASKMAN SITE PARAMETERS
"FIA",14.7,0)
^%ZIS(14.7,
"FIA",14.7,0,0)
14.7
"FIA",14.7,0,1)
y^n^p^^^^n
"FIA",14.7,0,10)

"FIA",14.7,0,11)

"FIA",14.7,0,"RLRO")

"FIA",14.7,0,"VR")
8.0^XU
"FIA",14.7,14.7)
1
"FIA",14.7,14.7,11)

"FIA",14.7,14.7,12)

"INIT")
POST36^XUINPCH
"KRN",.4,611,-1)
0^1
"KRN",.4,611,0)
XUSERINQ^2960920.0942^^200^^@^2960920
"KRN",.4,611,"DXS",1,9.2)
S DIP(1)=$S($D(^VA(200,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1)_"  (#"_$S('$D(D0):"",D0<0:"",1:D0)_")"
"KRN",.4,611,"DXS",2,9.2)
S DIP(1)=$S($D(^VA(200,D0,0)):^(0),1:"") S X=$P(DIP(1),U,11),DIP(2)=X S X=1,X1=DIP(2) S X=$$FMTE^XLFDT(X1,X) S X=X,DIP(3)=X S X="TD"
"KRN",.4,611,"DXS",3,9.2)
S DIP(2)=$C(59)_$S($D(^DD(200,7,0)):$P(^(0),U,3),1:""),DIP(1)=$S($D(^VA(200,D0,0)):^(0),1:"") S X=$P($P(DIP(2),$C(59)_$P(DIP(1),U,7)_":",2),$C(59),1)
"KRN",.4,611,"DXS",4,9.2)
S DIP(1)=$S($D(^VA(200,D0,1)):^(1),1:"") S X=$S('$D(^VA(200,+$P(DIP(1),U,8),0)):"",1:$P(^(0),U,1)),DIP(2)=X S X=19
"KRN",.4,611,"DXS",5,9.2)
S DIP(1)=$S($D(^VA(200,D0,1)):^(1),1:"") S X=$P(DIP(1),U,7),DIP(2)=X S X=1,X1=DIP(2) S X=$$FMTE^XLFDT(X1,X) S X=X,DIP(3)=X S X=62
"KRN",.4,611,"DXS",6,9.2)
S DIP(2)=$C(59)_$S($D(^DD(200,200.04,0)):$P(^(0),U,3),1:""),DIP(1)=$S($D(^VA(200,D0,200)):^(200),1:"") S X=$P($P(DIP(2),$C(59)_$P(DIP(1),U,4)_":",2),$C(59),1)
"KRN",.4,611,"DXS",7,9.2)
S DIP(1)=$S($D(^VA(200,D0,0)):^(0),1:"") S X=$P(DIP(1),U,4),DIP(2)=X S X=62
"KRN",.4,611,"DXS",8,9.2)
S DIP(1)=$S($D(^VA(200,D0,200)):^(200),1:"") S X=$P(DIP(1),U,10),DIP(2)=X S X=19
"KRN",.4,611,"DXS",9,9.2)
S DIP(2)=$C(59)_$S($D(^DD(200,200.09,0)):$P(^(0),U,3),1:""),DIP(1)=$S($D(^VA(200,D0,200)):^(200),1:"") S X=$P($P(DIP(2),$C(59)_$P(DIP(1),U,9)_":",2),$C(59),1)
"KRN",.4,611,"DXS",10,9.2)
S DIP(1)=$S($D(^VA(200,D0,0)):^(0),1:"") S X=$S('$D(^DIC(3.1,+$P(DIP(1),U,9),0)):"",1:$P(^(0),U,1)),DIP(2)=X S X=19
"KRN",.4,611,"DXS",11,9.2)
S DIP(1)=$S($D(^VA(200,D0,.13)):^(.13),1:"") S X=$P(DIP(1),U,2),DIP(2)=X S X=62
"KRN",.4,611,"DXS",12,9.2)
S DIP(2)=$C(59)_$S($D(^DD(200,200.06,0)):$P(^(0),U,3),1:""),DIP(1)=$S($D(^VA(200,D0,200)):^(200),1:"") S X=$P($P(DIP(2),$C(59)_$P(DIP(1),U,6)_":",2),$C(59),1)
"KRN",.4,611,"DXS",13,9.2)
S DIP(1)=$S($D(^VA(200,D0,.13)):^(.13),1:"") S X=$P(DIP(1),U,7),DIP(2)=X S X=62
"KRN",.4,611,"DXS",14,9.2)
S DIP(1)=$S($D(^VA(200,D0,1.1)):^(1.1),1:"") S X=$P(DIP(1),U,1),DIP(2)=X S X="1D",X1=DIP(2) S X=$$FMTE^XLFDT(X1,X) S X=X,DIP(3)=X S X=19
"KRN",.4,611,"DXS",15,9.2)
S DIP(1)=$S($D(^VA(200,D0,.13)):^(.13),1:"") S X=$P(DIP(1),U,8),DIP(2)=X S X=62
"KRN",.4,611,"DXS",16,9)
N % S X=$$GET^XUA4A72(D0),%=+X W:% !,?5,$P(X,U,2) W:%&$L($P(X,U,3)) !,?8,$P(X,U,3) W:%&$L($P(X,U,4)) !,?11,$P(X,U,4) S X=""
"KRN",.4,611,"DXS",17,9.2)
S I(1,0)=$S($D(D1):D1,1:""),I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^VA(200,D0,203,D1,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'$D(^DIC(19,+D0,0)) D0=-1
"KRN",.4,611,"DXS",18,9)
S Y=-1 F %=0:0 S %=$O(^VA(200,D0,51,%)),Y=Y+1 Q:%'>0  I $D(^DIC(19.1,%,0))#2 W:'(Y#5) ! W ?(Y#5*15+3),$P($G(^DIC(19.1,%,0)),U,1)
"KRN",.4,611,"F",1)
X DXS(1,9.2) S %=$L(X),%1=$X,$P(%2,"-",%)="-" W X,!,?%1,%2 K %1,%2 S X="" W X K DIP;C1;"";Z;"XUDASH(NAME_"  (#"_NUMBER_")")"~
"KRN",.4,611,"F",2)
X DXS(2,9.2) S X1=DIP(3) S:X]""&(X?.ANP)&(X1'[U)&(X1'["$C(94)") DIPA($E(X,1,30))=X1 S X="" W X K DIP;"";X;Z;"SETPARAM(XUFMTOEX(TERMINATION DATE,1),"TD")"~
"KRN",.4,611,"F",3)
W:$L($P(^VA(200,D0,0),U,11)) !,*7,?3,"Terminated: ",DIPA("TD");Z;"W:$L($P(^VA(200,D0,0),U,11)) !,*7,?3,"Terminated: ",DIPA("TD")"~
"KRN",.4,611,"F",4)
X DXS(3,9.2) S DIP(3)=X S X="DIS",X1=DIP(3) S:X]""&(X?.ANP)&(X1'[U)&(X1'["$C(94)") DIPA($E(X,1,30))=X1 S X="" W X K DIP;"";X;Z;"SETPARAM(DISUSER,"DIS")"~
"KRN",.4,611,"F",5)
W:DIPA("DIS")["Y" !,?3,"Disuser: ",DIPA("DIS");Z;"W:DIPA("DIS")["Y" !,?3,"Disuser: ",DIPA("DIS")"~D INQ^XUS9 S X="";Z;"D INQ^XUS9 S X="""~
"KRN",.4,611,"F",6)
S X="ATTRIBUTES",%=$L(X),%1=$X,$P(%2,"-",%)="-" W X,!,?%1,%2 K %1,%2 S X="" W X K DIP;C1;S2;Z;"XUDASH("ATTRIBUTES")"~"Creator";C3;""~
"KRN",.4,611,"F",7)
X DXS(4,9.2) S X1=DIP(2) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(CREATOR,19)"~
"KRN",.4,611,"F",8)
S X="Date entered" W X K DIP;C43;";Z;""Date entered""~
"KRN",.4,611,"F",9)
X DXS(5,9.2) S X1=DIP(3) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(XUFMTOEX(DATE ENTERED,1),62)"~
"KRN",.4,611,"F",10)
"Mult Sign-on";C3~
"KRN",.4,611,"F",11)
X DXS(6,9.2) S DIP(3)=X S X=19,X1=DIP(3) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(MULTIPLE SIGN-ON,19)"~
"KRN",.4,611,"F",12)
"Fileman codes";C43~
"KRN",.4,611,"F",13)
X DXS(7,9.2) S X1=DIP(2) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(FILE MANAGER ACCESS CODE,62)"~
"KRN",.4,611,"F",14)
"Time-out";C3~
"KRN",.4,611,"F",15)
X DXS(8,9.2) S X1=DIP(2) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(TIMED READ,19)"~
"KRN",.4,611,"F",16)
"Type-ahead";C43~
"KRN",.4,611,"F",17)
X DXS(9,9.2) S DIP(3)=X S X=62,X1=DIP(3) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(TYPE-AHEAD,62)"~
"KRN",.4,611,"F",18)
"Title";C3;""~X DXS(10,9.2) S X1=DIP(2) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(TITLE,19)"~
"KRN",.4,611,"F",19)
"Office Phone";C43~
"KRN",.4,611,"F",20)
X DXS(11,9.2) S X1=DIP(2) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(OFFICE PHONE,62)"~
"KRN",.4,611,"F",21)
"Auto-Menu";C3;""~
"KRN",.4,611,"F",22)
X DXS(12,9.2) S DIP(3)=X S X=19,X1=DIP(3) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(AUTO MENU,19)"~
"KRN",.4,611,"F",23)
"Voice Pager";C43~
"KRN",.4,611,"F",24)
X DXS(13,9.2) S X1=DIP(2) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(VOICE PAGER,62)"~
"KRN",.4,611,"F",25)
"Last Sign-on";C3~
"KRN",.4,611,"F",26)
X DXS(14,9.2) S X1=DIP(3) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(XUFMTOEX(LAST SIGN,"1D"),19)"~
"KRN",.4,611,"F",27)
"Digital Pager";C43~
"KRN",.4,611,"F",28)
X DXS(15,9.2) S X1=DIP(2) S %=$X,%1=$S(X>%:X-%,1:0),%="",$P(%,".",%1)="." W %,X1 K %,%1 S (X,X1)="" W X K DIP;"";Z;"XUDOTTAB(DIGITAL PAGER,62)"~" ";C1~
"KRN",.4,611,"F",29)
"Person Class: ";C3~
"KRN",.4,611,"F",30)
X DXS(16,9);Z;"N % S X=$$GET^XUA4A72(D0),%=+X W:% !,?5,$P(X,U,2) W:%&$L($P(X,U,3)) !,?8,$P(X,U,3) W:%&$L($P(X,U,4)) !,?11,$P(X,U,4) S X="""~" ";C1~
"KRN",.4,611,"F",31)
S DIP(1)=$S($D(^VA(200,D0,201)):^(201),1:"") S X="Primary Menu: "_$S('$D(^DIC(19,+$P(DIP(1),U,1),0)):"",1:$P(^(0),U,1)) W X K DIP;C1;Z;""Primary Menu: "_PRIMARY MENU"~
"KRN",.4,611,"F",32)
S X="Secondary Menu(s)",%=$L(X),%1=$X,$P(%2,"-",%)="-" W X,!,?%1,%2 K %1,%2 S X="" W X K DIP;C1;Z;"XUDASH("Secondary Menu(s)")"~
"KRN",.4,611,"F",33)
203,X DXS(17,9.2) S DIP(101)=$S($D(^DIC(19,D0,0)):^(0),1:"") S X=$P(DIP(101),U,2) S D0=I(0,0) S D1=I(1,0) W X K DIP;C5;"";"";Z;"SECONDARY MENU OPTION:MENU TEXT"~
"KRN",.4,611,"F",34)
S X="Keys Held",%=$L(X),%1=$X,$P(%2,"-",%)="-" W X,!,?%1,%2 K %1,%2 S X="" W X K DIP;S1;Z;"XUDASH("Keys Held")"~
"KRN",.4,611,"F",35)
X DXS(18,9);Z;"S Y=-1 F %=0:0 S %=$O(^VA(200,D0,51,%)),Y=Y+1 Q:%'>0  I $D(^DIC(19.1,%,0))#2 W:'(Y#5) ! W ?(Y#5*15+3),$P($G(^DIC(19.1,%,0)),U,1)"~
"KRN",.4,611,"H")
@
"KRN",.4,611,"IOM")
80
"KRN",.4,611,"LAST")

"KRN",.4,611,"ROU")
^XUCT01
"KRN",.4,611,"ROUOLD")
XUCT01
"KRN",.4,611,"SUB")
1
"KRN",.403,2,-1)
0^1
"KRN",.403,2,0)
XUEXISTING USER^^^^2920804^^^200^0^0^1
"KRN",.403,2,2)
1;33
"KRN",.403,2,40,0)
^.4031I^7^7
"KRN",.403,2,40,1,0)
1^^1,1^2
"KRN",.403,2,40,1,1)
Page 1 of 3
"KRN",.403,2,40,1,40,0)
^.4032PI^178^2
"KRN",.403,2,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,2,40,1,40,178,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,2,0)
2^^1,1^3^1
"KRN",.403,2,40,2,1)
Page 2 of 3
"KRN",.403,2,40,2,15,0)
^^1^1^2941114^
"KRN",.403,2,40,2,15,1,0)
This is Page 2 of the edit existing user.
"KRN",.403,2,40,2,40,0)
^.4032PI^178^2
"KRN",.403,2,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,2,40,2,40,178,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,3,0)
1.1^^11,9^^^1^17,66^^
"KRN",.403,2,40,3,1)
SECONDARY MENU OPTIONS Subpage
"KRN",.403,2,40,3,40,0)
^.4032PI^6^1
"KRN",.403,2,40,3,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,2,40,4,0)
1.2^^8,16^^^1^13,59^^
"KRN",.403,2,40,4,1)
DIVISION Subpage
"KRN",.403,2,40,4,40,0)
^.4032PI^7^1
"KRN",.403,2,40,4,40,7,0)
XUEXISTING USER 4^1^2,3^e
"KRN",.403,2,40,5,0)
3^^1,1^1^2
"KRN",.403,2,40,5,1)
Page 3
"KRN",.403,2,40,5,40,0)
^.4032PI^257^3
"KRN",.403,2,40,5,40,178,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,2,40,5,40,181,0)
XUEXISTING USER 5^2^2,1^e
"KRN",.403,2,40,5,40,257,0)
XU-PERSON CLASS 2^3^13,1^e
"KRN",.403,2,40,5,40,257,2)
4^!IEN^n
"KRN",.403,2,40,6,0)
6^^1,1
"KRN",.403,2,40,6,1)
Page 6
"KRN",.403,2,40,7,0)
8^^1,1^^
"KRN",.403,2,40,7,1)
Page 8
"KRN",.403,2,40,7,40,0)
^.4032IP^0^0
"KRN",.403,68,-1)
0^3
"KRN",.403,68,0)
XUREACT USER^^@^^2950327.1641^^^200^0^0^1
"KRN",.403,68,40,0)
^.4031I^5^5
"KRN",.403,68,40,1,0)
1^^1,1^2
"KRN",.403,68,40,1,1)
Page 1
"KRN",.403,68,40,1,11)
N % S %=$$GET^DDSVAL(200,XUN,2) D:$P(%,U,3)="" HLP^DDSUTL("USER has no ACCESS CODE")
"KRN",.403,68,40,1,40,0)
^.4032IP^178^2
"KRN",.403,68,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,68,40,1,40,4,11)
D PUT^DDSVAL(DIE,.DA,9.2,"@"),PUT^DDSVAL(DIE,.DA,7,"@")
"KRN",.403,68,40,1,40,178,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,68,40,2,0)
2^^1,1^3^1
"KRN",.403,68,40,2,1)
Page 2
"KRN",.403,68,40,2,40,0)
^.4032IP^178^2
"KRN",.403,68,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,68,40,2,40,178,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,68,40,3,0)
3^^1,1^1^2
"KRN",.403,68,40,3,1)
Page 3
"KRN",.403,68,40,3,40,0)
^.4032IP^257^3
"KRN",.403,68,40,3,40,178,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,68,40,3,40,181,0)
XUEXISTING USER 5^2^2,1^e
"KRN",.403,68,40,3,40,257,0)
XU-PERSON CLASS 2^3^13,1^e
"KRN",.403,68,40,3,40,257,2)
4^!IEN^n
"KRN",.403,68,40,4,0)
1.1^^11,9^^^1^17,66
"KRN",.403,68,40,4,1)
Page 1.1
"KRN",.403,68,40,4,40,0)
^.4032IP^6^1
"KRN",.403,68,40,4,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,68,40,5,0)
1.2^^8,16^^^1^13,59
"KRN",.403,68,40,5,1)
Page 1.2
"KRN",.403,68,40,5,40,0)
^.4032IP^7^1
"KRN",.403,68,40,5,40,7,0)
XUEXISTING USER 4^1^2,2^e
"KRN",.403,69,-1)
0^2
"KRN",.403,69,0)
XUNEW USER^ ^@^^2960729.0925^^^200^0^0^1
"KRN",.403,69,40,0)
^.4031I^5^5
"KRN",.403,69,40,1,0)
1^^1,1^2^
"KRN",.403,69,40,1,1)
Page 1
"KRN",.403,69,40,1,40,0)
^.4032IP^178^2
"KRN",.403,69,40,1,40,4,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,69,40,1,40,178,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,69,40,2,0)
2^^1,1^3^1
"KRN",.403,69,40,2,1)
Page 2
"KRN",.403,69,40,2,40,0)
^.4032IP^178^2
"KRN",.403,69,40,2,40,5,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,69,40,2,40,178,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,69,40,3,0)
3^^1,1^1^2
"KRN",.403,69,40,3,1)
Page 3
"KRN",.403,69,40,3,40,0)
^.4032IP^272^4
"KRN",.403,69,40,3,40,178,0)
XUEXISTING USER 0^2^1,1^e
"KRN",.403,69,40,3,40,181,0)
XUEXISTING USER 5^3^2,1^e
"KRN",.403,69,40,3,40,257,0)
XU-PERSON CLASS 2^4^13,1^e
"KRN",.403,69,40,3,40,257,2)
4^!IEN^n
"KRN",.403,69,40,3,40,272,0)
XUNEW USER^1^1,1^e
"KRN",.403,69,40,4,0)
1.1^^11,9^^^1^17,66
"KRN",.403,69,40,4,1)
Page 1.1
"KRN",.403,69,40,4,40,0)
^.4032IP^6^1
"KRN",.403,69,40,4,40,6,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,69,40,5,0)
1.2^^8,16^^^1^13,59
"KRN",.403,69,40,5,1)
Page 1.2
"KRN",.403,69,40,5,40,0)
^.4032IP^7^1
"KRN",.403,69,40,5,40,7,0)
XUEXISTING USER 4^1^2,3^e
"KRN",.404,4,0)
XUEXISTING USER 1^200^^^
"KRN",.404,4,40,0)
^.4044I^16^15
"KRN",.404,4,40,1,0)
1^NAME^3
"KRN",.404,4,40,1,1)
.01
"KRN",.404,4,40,1,2)
3,12^30^3,6
"KRN",.404,4,40,2,0)
2^TITLE^3
"KRN",.404,4,40,2,1)
8
"KRN",.404,4,40,2,2)
4,12^30^4,5
"KRN",.404,4,40,3,0)
3^INITIAL^3
"KRN",.404,4,40,3,1)
1
"KRN",.404,4,40,3,2)
3,65^5^3,56
"KRN",.404,4,40,4,0)
4^NICK NAME^3
"KRN",.404,4,40,4,1)
13
"KRN",.404,4,40,4,2)
4,65^10^4,54
"KRN",.404,4,40,5,0)
5^PRIMARY MENU OPTION^3^
"KRN",.404,4,40,5,1)
201
"KRN",.404,4,40,5,2)
7,33^30^7,12
"KRN",.404,4,40,6,0)
6^Select SECONDARY MENU OPTIONS^3
"KRN",.404,4,40,6,1)
203
"KRN",.404,4,40,6,2)
8,33^30^8,2
"KRN",.404,4,40,6,7)
^1.1
"KRN",.404,4,40,7,0)
7^Want to edit ACCESS CODE (Y/N)^3
"KRN",.404,4,40,7,1)
2.1
"KRN",.404,4,40,7,2)
10,33^3^10,1
"KRN",.404,4,40,8,0)
8^Want to edit VERIFY CODE (Y/N)^3
"KRN",.404,4,40,8,1)
11.1
"KRN",.404,4,40,8,2)
11,33^3^11,1
"KRN",.404,4,40,9,0)
9^FILE MANAGER ACCESS CODE^3
"KRN",.404,4,40,9,1)
3
"KRN",.404,4,40,9,2)
10,65^15^10,39
"KRN",.404,4,40,11,0)
11^PREFERRED EDITOR^3
"KRN",.404,4,40,11,1)
31.3
"KRN",.404,4,40,11,2)
13,33^30^13,15
"KRN",.404,4,40,12,0)
12^Select DIVISION^3
"KRN",.404,4,40,12,1)
16
"KRN",.404,4,40,12,2)
14,33^30^14,16
"KRN",.404,4,40,12,7)
^1.2
"KRN",.404,4,40,13,0)
13^SERVICE/SECTION^3
"KRN",.404,4,40,13,1)
29
"KRN",.404,4,40,13,2)
15,33^30^15,16
"KRN",.404,4,40,14,0)
4.5^MAIL CODE^3
"KRN",.404,4,40,14,1)
28
"KRN",.404,4,40,14,2)
5,65^10^5,54
"KRN",.404,4,40,15,0)
15^1^1^
"KRN",.404,4,40,15,2)
^^1,74^1
"KRN",.404,4,40,16,0)
2.5^SSN^3
"KRN",.404,4,40,16,1)
9
"KRN",.404,4,40,16,2)
5,12^9^5,7
"KRN",.404,5,0)
XUEXISTING USER 2^200^^^
"KRN",.404,5,40,0)
^.4044I^15^14
"KRN",.404,5,40,1,0)
1^TIMED READ (# OF SECONDS)^3
"KRN",.404,5,40,1,1)
200.1
"KRN",.404,5,40,1,2)
4,31^5^4,4
"KRN",.404,5,40,2,0)
2^MULTIPLE SIGN-ON^3
"KRN",.404,5,40,2,1)
200.04
"KRN",.404,5,40,2,2)
6,31^11^6,13
"KRN",.404,5,40,3,0)
3^AUTO MENU^3
"KRN",.404,5,40,3,1)
200.06
"KRN",.404,5,40,3,2)
6,60^20^6,49
"KRN",.404,5,40,4,0)
4^ASK DEVICE TYPE AT SIGN-ON^3
"KRN",.404,5,40,4,1)
200.05
"KRN",.404,5,40,4,2)
7,31^9^7,3
"KRN",.404,5,40,5,0)
5^TYPE-AHEAD^3
"KRN",.404,5,40,5,1)
200.09
"KRN",.404,5,40,5,2)
7,60^11^7,48
"KRN",.404,5,40,6,0)
6^PROHIBITED TIMES FOR SIGN-ON^3
"KRN",.404,5,40,6,1)
15
"KRN",.404,5,40,6,2)
8,31^9^8,1
"KRN",.404,5,40,7,0)
7^ALLOWED TO USE SPOOLER^3
"KRN",.404,5,40,7,1)
41
"KRN",.404,5,40,7,2)
10,31^3^10,7
"KRN",.404,5,40,8,0)
8^CAN MAKE INTO A MAIL MESSAGE^3
"KRN",.404,5,40,8,1)
41.2
"KRN",.404,5,40,8,2)
11,31^3^11,1
"KRN",.404,5,40,10,0)
10^FILE RANGE^3
"KRN",.404,5,40,10,1)
31.1
"KRN",.404,5,40,10,2)
13,31^30^13,19
"KRN",.404,5,40,11,0)
11^TERMINATION DATE^3
"KRN",.404,5,40,11,1)
9.2
"KRN",.404,5,40,11,2)
14,31^11^14,13
"KRN",.404,5,40,12,0)
12^ALWAYS SHOW SECONDARIES^3
"KRN",.404,5,40,12,1)
200.11
"KRN",.404,5,40,12,2)
15,31^3^15,6
"KRN",.404,5,40,13,0)
13^2^1^
"KRN",.404,5,40,13,2)
^^1,74^1
"KRN",.404,5,40,14,0)
14^PAC^3
"KRN",.404,5,40,14,1)
14
"KRN",.404,5,40,14,2)
10,63^8^10,58
"KRN",.404,5,40,15,0)
15^DISUSER^3
"KRN",.404,5,40,15,1)
7
"KRN",.404,5,40,15,2)
11,63^3^11,54
"KRN",.404,6,0)
XUEXISTING USER 3^200.03
"KRN",.404,6,40,0)
^.4044I^3^3
"KRN",.404,6,40,1,0)
1^SECONDARY MENU OPTIONS^1^
"KRN",.404,6,40,1,2)
^^1,33^
"KRN",.404,6,40,2,0)
2^SECONDARY MENU OPTIONS^3
"KRN",.404,6,40,2,1)
.01
"KRN",.404,6,40,2,2)
3,25^30^3,1
"KRN",.404,6,40,3,0)
3^SYNONYM^3
"KRN",.404,6,40,3,1)
2
"KRN",.404,6,40,3,2)
4,25^4^4,16
"KRN",.404,7,0)
XUEXISTING USER 4^200.02
"KRN",.404,7,40,0)
^.4044I^2^2
"KRN",.404,7,40,1,0)
1^DIVISION^1^
"KRN",.404,7,40,1,2)
^^1,33^
"KRN",.404,7,40,2,0)
2^DIVISION^3
"KRN",.404,7,40,2,1)
.01
"KRN",.404,7,40,2,2)
3,11^30^3,1
"KRN",.404,178,0)
XUEXISTING USER 0^200^
"KRN",.404,178,40,0)
^.4044I^5^5
"KRN",.404,178,40,1,0)
1^NAME^3
"KRN",.404,178,40,1,1)
.01
"KRN",.404,178,40,1,2)
2,7^30^2,1
"KRN",.404,178,40,1,4)
^^^1
"KRN",.404,178,40,2,0)
3^Edit an Existing User^1^
"KRN",.404,178,40,2,2)
^^1,30^1
"KRN",.404,178,40,3,0)
2^Page^1^
"KRN",.404,178,40,3,2)
^^2,69^1
"KRN",.404,178,40,4,0)
4^_______________________________________________________________________________^1^
"KRN",.404,178,40,4,2)
^^3,1^1
"KRN",.404,178,40,5,0)
5^of 3^1^
"KRN",.404,178,40,5,2)
^^2,76^1
"KRN",.404,181,0)
XUEXISTING USER 5^200
"KRN",.404,181,40,0)
^.4044I^10^10
"KRN",.404,181,40,1,0)
1^3^1^
"KRN",.404,181,40,1,2)
^^1,74^
"KRN",.404,181,40,2,0)
2^PROHIBITED TIMES FOR SIGN-ON^3
"KRN",.404,181,40,2,1)
15
"KRN",.404,181,40,2,2)
3,31^21^3,1
"KRN",.404,181,40,3,0)
3^PHONE^3
"KRN",.404,181,40,3,1)
.131
"KRN",.404,181,40,3,2)
5,19^20^5,12
"KRN",.404,181,40,4,0)
4^OFFICE PHONE^3
"KRN",.404,181,40,4,1)
.132
"KRN",.404,181,40,4,2)
5,56^20^5,42
"KRN",.404,181,40,5,0)
5^VOICE PAGER^3
"KRN",.404,181,40,5,1)
.137
"KRN",.404,181,40,5,2)
7,19^20^7,6
"KRN",.404,181,40,6,0)
6^FAX NUMBER^3
"KRN",.404,181,40,6,1)
.136
"KRN",.404,181,40,6,2)
6,56^20^6,44
"KRN",.404,181,40,7,0)
7^COMMERCIAL PHONE^3
"KRN",.404,181,40,7,1)
.135
"KRN",.404,181,40,7,2)
6,19^20^6,1
"KRN",.404,181,40,8,0)
8^DIGITAL PAGER^3
"KRN",.404,181,40,8,1)
.138
"KRN",.404,181,40,8,2)
7,56^20^7,41
"KRN",.404,181,40,9,0)
9^LANGUAGE^3
"KRN",.404,181,40,9,1)
200.07
"KRN",.404,181,40,9,2)
9,19^10^9,9
"KRN",.404,181,40,10,0)
10^Person Class                                         Effective     Expired^1
"KRN",.404,181,40,10,2)
^^11,2
"KRN",.404,257,0)
XU-PERSON CLASS 2^200.05
"KRN",.404,257,40,0)
^.4044I^3^3
"KRN",.404,257,40,1,0)
1^^3
"KRN",.404,257,40,1,1)
.01
"KRN",.404,257,40,1,2)
1,2^40
"KRN",.404,257,40,1,11)
N XU,% I X]"" S %=^USC(8932.1,X,0),XU(1)=$P(%,U,1),XU(2)="  "_$P(%,U,2),XU(3)="    "_$P(%,U,3) D HLP^DDSUTL(.XU)
"KRN",.404,257,40,1,14)
S:$L(DDSOLD)&(X'=DDSOLD) DDSERROR=1
"KRN",.404,257,40,2,0)
2^^3
"KRN",.404,257,40,2,1)
2
"KRN",.404,257,40,2,2)
1,52^12
"KRN",.404,257,40,2,4)
^^^0
"KRN",.404,257,40,2,12)
D DDS2^XUA4A72
"KRN",.404,257,40,3,0)
3^^3
"KRN",.404,257,40,3,1)
3
"KRN",.404,257,40,3,2)
1,67^12
"KRN",.404,272,0)
XUNEW USER^200
"KRN",3.6,7,-1)
0^1
"KRN",3.6,7,0)
XUSLOCK^DEVICE LOCKED DUE TO BAD SIGN-ONS
"KRN",3.6,7,1,0)
^^3^3^2960627^
"KRN",3.6,7,1,1,0)
|2| bad sign-ons on Device |1| have caused |1| to be locked.
"KRN",3.6,7,1,2,0)
Use the "CLEAR TERMINAL" Option to make the device available
"KRN",3.6,7,1,3,0)
again. Select |3| as the device to release.
"KRN",3.6,7,3,0)
^^2^2^2960627^^^^
"KRN",3.6,7,3,1,0)
This bulletin is triggered when a number of bad sign-ons
"KRN",3.6,7,3,2,0)
causes a terminal device to be "locked out".
"KRN",3.6,7,4,0)
^3.64A^3^2
"KRN",3.6,7,4,1,0)
1
"KRN",3.6,7,4,1,1,0)
^^1^1^2840725^^
"KRN",3.6,7,4,1,1,1,0)
Name of device being locked.
"KRN",3.6,7,4,2,0)
2
"KRN",3.6,7,4,2,1,0)
^^1^1^2960627^^^^
"KRN",3.6,7,4,2,1,1,0)
Number of bad signons recorded for the device.
"KRN",3.6,7,4,3,0)
3
"KRN",3.6,7,4,3,1,0)
^^1^1^2960627^
"KRN",3.6,7,4,3,1,1,0)
This hold the name of the device to release.
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"PKG",283,-1)
1^1
"PKG",283,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",283,22,0)
^9.49I^1^1
"PKG",283,22,1,0)
8.0^2950729^2950729^6
"PKG",283,22,1,"PAH",1,0)
36^2961003^2
"PKG",283,22,1,"PAH",1,1,0)
^^165^165^2961126
"PKG",283,22,1,"PAH",1,1,1,0)
MSG from Warren Wright about large numbers of DEVICE LOCK bulletins
"PKG",283,22,1,"PAH",1,1,2,0)
sent when someone leans on keyboard.
"PKG",283,22,1,"PAH",1,1,3,0)
 
"PKG",283,22,1,"PAH",1,1,4,0)
NOIS MCM-1195-51490 That the DEVICE LOCK bulletins aren't much help.
"PKG",283,22,1,"PAH",1,1,5,0)
 
"PKG",283,22,1,"PAH",1,1,6,0)
NOIS CLE-1095-43605  The check if a user needed to be deactivated was
"PKG",283,22,1,"PAH",1,1,7,0)
counting 'Keep at Terminate' keys even though they would never be removed. 
"PKG",283,22,1,"PAH",1,1,8,0)
 
"PKG",283,22,1,"PAH",1,1,9,0)
NOIS MAC-0696-61616 WBP-1195-20971 CTX-0896-71639 
"PKG",283,22,1,"PAH",1,1,10,0)
The check to close hung SPOOL documents had a incorrect test.
"PKG",283,22,1,"PAH",1,1,11,0)
 
"PKG",283,22,1,"PAH",1,1,12,0)
NOIS SEP-0796-62056  The purge option was failing to get any site data
"PKG",283,22,1,"PAH",1,1,13,0)
from the Kernel System Parameter file. It was looking at the wrong node.
"PKG",283,22,1,"PAH",1,1,14,0)
 
"PKG",283,22,1,"PAH",1,1,15,0)
NOIS NOL-0796-70230  If the data in the spool file was longer that 255
"PKG",283,22,1,"PAH",1,1,16,0)
characters, it would cause an error in %ZIS4 on DSM systems.  This has
"PKG",283,22,1,"PAH",1,1,17,0)
been fixed but the report may not print the way it would have if sent
"PKG",283,22,1,"PAH",1,1,18,0)
directly to the printer.
"PKG",283,22,1,"PAH",1,1,19,0)
 
"PKG",283,22,1,"PAH",1,1,20,0)
NOIS WBP-0796-20862 When the number of spool documents is checked, only
"PKG",283,22,1,"PAH",1,1,21,0)
those with data are counted. This is changed to count all spool documents 
"PKG",283,22,1,"PAH",1,1,22,0)
with or without data.
"PKG",283,22,1,"PAH",1,1,23,0)
 
"PKG",283,22,1,"PAH",1,1,24,0)
E3R  --  Request for a way to have the current date as part of a auto 
"PKG",283,22,1,"PAH",1,1,25,0)
generated name (GENERATE SPL DOC NAME).  Now if the device name includes
"PKG",283,22,1,"PAH",1,1,26,0)
"|DT|" that string will be replaced with the current date.
"PKG",283,22,1,"PAH",1,1,27,0)
 
"PKG",283,22,1,"PAH",1,1,28,0)
E3R 8844  To include Person class in the User Inquiry.
"PKG",283,22,1,"PAH",1,1,29,0)
 
"PKG",283,22,1,"PAH",1,1,30,0)
NOIS IVM-1095-32452 Some times taskman doesn't release devices
"PKG",283,22,1,"PAH",1,1,31,0)
when it should.
"PKG",283,22,1,"PAH",1,1,32,0)
 
"PKG",283,22,1,"PAH",1,1,33,0)
NOIS NOL-0996-70063 At a dual TaskMan site Problem starting tasks on
"PKG",283,22,1,"PAH",1,1,34,0)
the working node. The TaskMan part of this patch was developed to address
"PKG",283,22,1,"PAH",1,1,35,0)
problems at dual TaskMan sites after the install of patch 24. It is
"PKG",283,22,1,"PAH",1,1,36,0)
unclear exactly what the problem was, but with load balancing work would
"PKG",283,22,1,"PAH",1,1,37,0)
back up.  There is a new algorithm to start new submanagers and when
"PKG",283,22,1,"PAH",1,1,38,0)
submanagers should exit.  We try and keep the number of submanagers  at a
"PKG",283,22,1,"PAH",1,1,39,0)
level equal to a: the number of devices in the IO list.  b: the MIN
"PKG",283,22,1,"PAH",1,1,40,0)
SUBMANAGER CNT. All submanagers will remain if the JOB list has any tasks
"PKG",283,22,1,"PAH",1,1,41,0)
in it.
"PKG",283,22,1,"PAH",1,1,42,0)
 
"PKG",283,22,1,"PAH",1,1,43,0)
       -----   This patch adds two new fields to the TaskMan site
"PKG",283,22,1,"PAH",1,1,44,0)
parameter file (14.7):  (1), MIN SUBMANAGER CNT, allows a site to set a
"PKG",283,22,1,"PAH",1,1,45,0)
lower limit on the number of submanagers to keep around.  (2), TM MASTER,
"PKG",283,22,1,"PAH",1,1,46,0)
is only used when a volume set is mounted on another but shares the
"PKG",283,22,1,"PAH",1,1,47,0)
library account.  This is a pointer back to file 14.7 and would point to
"PKG",283,22,1,"PAH",1,1,48,0)
the entry that is the control entry for TaskMan on that node.
"PKG",283,22,1,"PAH",1,1,49,0)
 
"PKG",283,22,1,"PAH",1,1,50,0)
Local MSG #1082921 
"PKG",283,22,1,"PAH",1,1,51,0)
       DIC error in Add a New User.  Problem in the page numbering of the
"PKG",283,22,1,"PAH",1,1,52,0)
new FORM for Add a New User and SECONDARY MENUS.  Sending out all three
"PKG",283,22,1,"PAH",1,1,53,0)
FORMs with unified page numbering.
"PKG",283,22,1,"PAH",1,1,54,0)
 
"PKG",283,22,1,"PAH",1,1,55,0)
 
"PKG",283,22,1,"PAH",1,1,56,0)
NOIS MAD-0895-40177 Some sites have some leftover nodes in the Institution 
"PKG",283,22,1,"PAH",1,1,57,0)
file.
"PKG",283,22,1,"PAH",1,1,58,0)
 
"PKG",283,22,1,"PAH",1,1,59,0)
Collect more data in the standard error trap.
"PKG",283,22,1,"PAH",1,1,60,0)
 
"PKG",283,22,1,"PAH",1,1,61,0)
In patch 24 $X was set to zero before doing the close execute code.
"PKG",283,22,1,"PAH",1,1,62,0)
This was changed to check if $X>0 and to set it to 1 so that code (like
"PKG",283,22,1,"PAH",1,1,63,0)
P-MESSAGE) that test $X would still work. 
"PKG",283,22,1,"PAH",1,1,64,0)
 
"PKG",283,22,1,"PAH",1,1,65,0)
If some package was installed after Kernel 8, the "ID" nodes on the
"PKG",283,22,1,"PAH",1,1,66,0)
NEW PERSON file got changed back to an early version.  Nodes are reset.
"PKG",283,22,1,"PAH",1,1,67,0)
 
"PKG",283,22,1,"PAH",1,1,68,0)
NOIS IND-0996-41382 Changes to FTG^%ZISH made in XU*8*24 didn't work for
"PKG",283,22,1,"PAH",1,1,69,0)
input like S Y=$$FTG^%ZISH("","TEST.DAT",$NA(OUT(0)),1) it did work
"PKG",283,22,1,"PAH",1,1,70,0)
fine on S Y=$$FTG^%ZISH("","TEST.DAT",$NA(^TMP("XX",$J,0)),3). Fixed.
"PKG",283,22,1,"PAH",1,1,71,0)
 
"PKG",283,22,1,"PAH",1,1,72,0)
Various requests to bring back ZTMGRSET.  This new version will load all
"PKG",283,22,1,"PAH",1,1,73,0)
all routines if called from the top, or only the routines with a given
"PKG",283,22,1,"PAH",1,1,74,0)
patch number if called at RELOAD^ZTMGRSET.
"PKG",283,22,1,"PAH",1,1,75,0)
 
"PKG",283,22,1,"PAH",1,1,76,0)
NOIS BRK-1096-12512, CHW-0996-42161 While testing changes to %ZTER for
"PKG",283,22,1,"PAH",1,1,77,0)
use with the new error trap we got ECODE errors under some conditions.
"PKG",283,22,1,"PAH",1,1,78,0)
This has been fixed with a small change to %ZTER.
"PKG",283,22,1,"PAH",1,1,79,0)
 
"PKG",283,22,1,"PAH",1,1,80,0)
Routine      CheckSum    2nd Line
"PKG",283,22,1,"PAH",1,1,81,0)
XUINPCH       1467475    ;;8.0;;KERNEL;**20,36**;Feb. 9, 1996
"PKG",283,22,1,"PAH",1,1,82,0)
XUSTERM      14380010    ;;8.0;KERNEL;**36**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,83,0)
XUSTZ         3010944    ;;8.0;KERNEL;**36**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,84,0)
XUTMUSE2     13026855    ;;8.0;KERNEL;**36**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,85,0)
ZIS3          6450084    ;;8.0;KERNEL;**18,36**;JUL 10, 1995
"PKG",283,22,1,"PAH",1,1,86,0)
ZIS4MSM       6649854    ;;8.0;KERNEL;**23,36**;JUL 03, 1995
"PKG",283,22,1,"PAH",1,1,87,0)
ZIS4VXD       8342152    ;;8.0;KERNEL;**23,36**;JUL 03, 1995
"PKG",283,22,1,"PAH",1,1,88,0)
ZISC          8463272    ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"PKG",283,22,1,"PAH",1,1,89,0)
ZISHMSM       5354551    ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"PKG",283,22,1,"PAH",1,1,90,0)
ZISHVXD       7245146    ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"PKG",283,22,1,"PAH",1,1,91,0)
ZISPL1        8550686    ;;8.0;KERNEL;**23,36**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,92,0)
ZISPL2        4088281    ;;8.0;KERNEL;**23,36**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,93,0)
ZISTCP        1828160    ;;8.0;KERNEL;**36**;Jun 02, 1994
"PKG",283,22,1,"PAH",1,1,94,0)
ZTER         18736553    ;;8.0;KERNEL;**8,18,32,24,36**;JUL 10, 1995
"PKG",283,22,1,"PAH",1,1,95,0)
ZTER1         5603505    ;;8.0;KERNEL;**18,24,36**;JUL 10, 1995
"PKG",283,22,1,"PAH",1,1,96,0)
ZTM           7805017    ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"PKG",283,22,1,"PAH",1,1,97,0)
ZTM0          5563711    ;;8.0;KERNEL;**42,36**;JUL 10, 1995
"PKG",283,22,1,"PAH",1,1,98,0)
ZTM5          3748675    ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"PKG",283,22,1,"PAH",1,1,99,0)
ZTMGRSET     12724965    ;;8.0;KERNEL;**36**;Dec 30, 1993
"PKG",283,22,1,"PAH",1,1,100,0)
ZTMON1        7519989    ;;8.0;KERNEL;**36**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,101,0)
ZTMS          5200197    ;;8.0;KERNEL;**2,18,24,36**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,102,0)
ZTMS1         6210144    ;;8.0;KERNEL;**36**;JUL 10, 1995
"PKG",283,22,1,"PAH",1,1,103,0)
ZTMS2         5283853    ;;8.0;KERNEL;**2,18,23,36**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,104,0)
ZTMS3         9454395    ;;8.0;KERNEL;**1,18,36**;Jul 03, 1995
"PKG",283,22,1,"PAH",1,1,105,0)
========================================================================= 
"PKG",283,22,1,"PAH",1,1,106,0)
INSTALLATION:
"PKG",283,22,1,"PAH",1,1,107,0)
  
"PKG",283,22,1,"PAH",1,1,108,0)
1.  Some of these routines are usually mapped on systems that allow
"PKG",283,22,1,"PAH",1,1,109,0)
mapping, so you will need to disable mapping for the affected routines.
"PKG",283,22,1,"PAH",1,1,110,0)
 
"PKG",283,22,1,"PAH",1,1,111,0)
2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",283,22,1,"PAH",1,1,112,0)
option will load the KIDS package onto your system.
"PKG",283,22,1,"PAH",1,1,113,0)
 
"PKG",283,22,1,"PAH",1,1,114,0)
3.  The patch has now been loaded into a Transport global on your system.
"PKG",283,22,1,"PAH",1,1,115,0)
You now need to use KIDS to install the Transport global.
"PKG",283,22,1,"PAH",1,1,116,0)
On the KIDS menu, under the 'Installation' menu, use the following
"PKG",283,22,1,"PAH",1,1,117,0)
options:
"PKG",283,22,1,"PAH",1,1,118,0)
          Verify Checksums in Transport Global
"PKG",283,22,1,"PAH",1,1,119,0)
          Print Transport Global
"PKG",283,22,1,"PAH",1,1,120,0)
          Compare Transport Global to Current System
"PKG",283,22,1,"PAH",1,1,121,0)
          Backup a Transport Global
"PKG",283,22,1,"PAH",1,1,122,0)
  
"PKG",283,22,1,"PAH",1,1,123,0)
4.  Users can remain on the system. 
"PKG",283,22,1,"PAH",1,1,124,0)
Also STOP TASKMAN. As long running jobs exit, they will get CLOBER errors.
"PKG",283,22,1,"PAH",1,1,125,0)
This isn't a problem because they have finished their work and TaskMan
"PKG",283,22,1,"PAH",1,1,126,0)
will start new ones.
"PKG",283,22,1,"PAH",1,1,127,0)
 
"PKG",283,22,1,"PAH",1,1,128,0)
   5.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",283,22,1,"PAH",1,1,129,0)
options:
"PKG",283,22,1,"PAH",1,1,130,0)
          Install Package(s)  'XU*8.0*36'
"PKG",283,22,1,"PAH",1,1,131,0)
 
"PKG",283,22,1,"PAH",1,1,132,0)
6.  MSM Sites - Answer YES to the question 'Want to MOVE routines to other
"PKG",283,22,1,"PAH",1,1,133,0)
CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",283,22,1,"PAH",1,1,134,0)
 
"PKG",283,22,1,"PAH",1,1,135,0)
7.  After installing this patch, you need to move several routines from
"PKG",283,22,1,"PAH",1,1,136,0)
your production account to the manager account:
"PKG",283,22,1,"PAH",1,1,137,0)
 
"PKG",283,22,1,"PAH",1,1,138,0)
       ZIS4MSM
"PKG",283,22,1,"PAH",1,1,139,0)
       ZIS4VXD
"PKG",283,22,1,"PAH",1,1,140,0)
       ZISC
"PKG",283,22,1,"PAH",1,1,141,0)
       ZISHMSM
"PKG",283,22,1,"PAH",1,1,142,0)
       ZISHVXD
"PKG",283,22,1,"PAH",1,1,143,0)
       ZISTCP
"PKG",283,22,1,"PAH",1,1,144,0)
       ZTER
"PKG",283,22,1,"PAH",1,1,145,0)
       ZTER1
"PKG",283,22,1,"PAH",1,1,146,0)
       ZTM
"PKG",283,22,1,"PAH",1,1,147,0)
       ZTM0
"PKG",283,22,1,"PAH",1,1,148,0)
       ZTM5
"PKG",283,22,1,"PAH",1,1,149,0)
       ZTMGRSET
"PKG",283,22,1,"PAH",1,1,150,0)
       ZTMON1
"PKG",283,22,1,"PAH",1,1,151,0)
       ZTMS
"PKG",283,22,1,"PAH",1,1,152,0)
       ZTMS1
"PKG",283,22,1,"PAH",1,1,153,0)
       ZTMS2
"PKG",283,22,1,"PAH",1,1,154,0)
       ZTMS3
"PKG",283,22,1,"PAH",1,1,155,0)
 
"PKG",283,22,1,"PAH",1,1,156,0)
       and in the manager account, rename:
"PKG",283,22,1,"PAH",1,1,157,0)
       
"PKG",283,22,1,"PAH",1,1,158,0)
       DO RELOAD^ZTMGRSET
"PKG",283,22,1,"PAH",1,1,159,0)
       Select the System
"PKG",283,22,1,"PAH",1,1,160,0)
       Patch number to load: 36
"PKG",283,22,1,"PAH",1,1,161,0)
        
"PKG",283,22,1,"PAH",1,1,162,0)
8.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",283,22,1,"PAH",1,1,163,0)
 
"PKG",283,22,1,"PAH",1,1,164,0)
9.  Start TaskMan, Restart Taskman on other nodes if you need to run more
"PKG",283,22,1,"PAH",1,1,165,0)
than one TaskMan.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
24
"RTN","XUINPCH")
0^^B2431203
"RTN","XUINPCH",1,0)
XUINPCH ;SF/RWF - RE-INDEX NEW X-REF ON FILE 200 ;08/29/96  11:04
"RTN","XUINPCH",2,0)
 ;;8.0;;KERNEL;**20,36**;Feb. 9, 1996
"RTN","XUINPCH",3,0)
 Q
"RTN","XUINPCH",4,0)
POST1 ;Post init for patch XU*8*20 to reindex new X-ref on file 200.
"RTN","XUINPCH",5,0)
 N XU,DA,DIK
"RTN","XUINPCH",6,0)
 F XU=0:0 S XU=$O(^VA(200,XU)) Q:XU'>0  I $D(^VA(200,XU,203,0)) D
"RTN","XUINPCH",7,0)
 . S DA(1)=XU,DIK="^VA(200,"_XU_",203,",DIK(1)=".01^4"
"RTN","XUINPCH",8,0)
 . D ENALL^DIK
"RTN","XUINPCH",9,0)
 . Q
"RTN","XUINPCH",10,0)
 Q
"RTN","XUINPCH",11,0)
POST14 ;Post INIT for patch XU*8*14 to seed the E-sig last changed date.
"RTN","XUINPCH",12,0)
 N DA,%,%H S DA=.5,%H=$H
"RTN","XUINPCH",13,0)
 F  S DA=$O(^VA(200,DA)) Q:DA'>0  S %=$G(^VA(200,DA,20)) I $L(%) D
"RTN","XUINPCH",14,0)
 . Q:'$L($P(%,U,4))!$P(%,U,1)
"RTN","XUINPCH",15,0)
 . S $P(^VA(200,DA,20),U,1)=+$$HADD^XLFDT(%H,($R(60)+30),0,0,0)
"RTN","XUINPCH",16,0)
 . Q
"RTN","XUINPCH",17,0)
 Q
"RTN","XUINPCH",18,0)
 ;
"RTN","XUINPCH",19,0)
POST36 ;Post INIT for patch XU*8*36
"RTN","XUINPCH",20,0)
 N I,X
"RTN","XUINPCH",21,0)
 ;Cleanup some old data in file 4.
"RTN","XUINPCH",22,0)
 F I=0:0 S I=$O(^DIC(4,I)) Q:I'>0  I $D(^DIC(4,I,1,"B"))>2 K ^DIC(4,I,1,"B")
"RTN","XUINPCH",23,0)
 ;See that we have the current ID nodes for file 200
"RTN","XUINPCH",24,0)
 F I=1,2,3 S X=$T(ID200+I) I $P(X,";",3)]"" S ^DD(200,0,"ID",$P(X,";",3))=$P(X,";",4,99)
"RTN","XUINPCH",25,0)
 Q
"RTN","XUINPCH",26,0)
ID200 ;;
"RTN","XUINPCH",27,0)
 ;;1;D EN^DDIOL("   "_$P(^(0),U,2),"","?0")
"RTN","XUINPCH",28,0)
 ;;28;D:$D(^(5)) EN^DDIOL("   "_$P(^(5),U,2),"","?0")
"RTN","XUINPCH",29,0)
 ;;W8;D:$P(^(0),U,9) EN^DDIOL("   "_$$EXTERNAL^DILFD(200,8,"",$P(^(0),U,9)),"","?0")
"RTN","XUINPCH",30,0)
 ;
"RTN","XUINPCH",31,0)
POST43 ;Post INIT for patch 43, Inst file support for CIRN/VISN
"RTN","XUINPCH",32,0)
 N FDA,IEN S FDA(4.1,"?+1,",.01)="VISN",FDA(4.1,"?+1,",1)="VETERANS INTEGRATED SERVICE NETWORK"
"RTN","XUINPCH",33,0)
 D UPDATE^DIE("E","FDA","IEN")
"RTN","XUINPCH",34,0)
 Q
"RTN","XUSTERM")
0^3^B23343614
"RTN","XUSTERM",1,0)
XUSTERM ;SEA/AMF/WDE - DEACTIVATE USER ;08/14/96  07:46
"RTN","XUSTERM",2,0)
 ;;8.0;KERNEL;**36**;Jul 10, 1995
"RTN","XUSTERM",3,0)
LKUP S (DIC,DIE)=200,DIC("S")="I $P(^(0),U,3)]""""",DIC(0)="AEQMZ",DIC("A")="Select USER to be deactivated: "
"RTN","XUSTERM",4,0)
 D ^DIC K DIC G END:Y<0
"RTN","XUSTERM",5,0)
 S XUDA=+Y,DR="["_$$GET^XUPARAM("XUSERDEACT","N")_"]" D GET,XUDIE^XUS5
"RTN","XUSTERM",6,0)
 S XUDT=$P(^VA(200,DA,0),U,11),XUACT=XUDT&(XUDT>DT) G END:'XUDT
"RTN","XUSTERM",7,0)
 ;
"RTN","XUSTERM",8,0)
WHEN I XUACT W !!,XUNAM," will be deactivated on date specified." S ZTDTH=XUDT,ZTRTN="DQ1^XUSTERM1",ZTDESC="DEACTIVATE USER",ZTSAVE("XUDA")="",ZTIO="" D ^%ZTLOAD G END
"RTN","XUSTERM",9,0)
NOW S DIR("A")=XUNAM_" will be deactivated now.  Do you wish to proceed",DIR("B")="YES",DIR("??")="XUUSER-DEACT",DIR(0)="Y" D ^DIR G:"Yy"'[$E(X_U) END
"RTN","XUSTERM",10,0)
 W ! S XUVE=1 D ACT G END
"RTN","XUSTERM",11,0)
 ;
"RTN","XUSTERM",12,0)
GET ;XUGRP=mail group, XUKEY=keys, XUSUR=mail surrogates, XUJ=# baskets, XUK=# mail msg, XUIN=# in-basket msg
"RTN","XUSTERM",13,0)
 ;XUTX1, XUTX2 used in edit templates
"RTN","XUSTERM",14,0)
 K XUGRP,XUKEY,XUSUR,XUTX1,XUTX2 N %,XU10,XU11,XU20,XU21,XU30
"RTN","XUSTERM",15,0)
 S (XU10,XU20)=0,(XU11,XU21,XU31)=""
"RTN","XUSTERM",16,0)
 S DA=XUDA,XUNAM=$P(^VA(200,XUDA,0),U,1)
"RTN","XUSTERM",17,0)
 F XUI=0:0 S XUI=$O(^XMB(3.8,"AB",XUDA,XUI)) Q:XUI'>0  D  ;Mail groups
"RTN","XUSTERM",18,0)
 . S XUK=^XMB(3.8,XUI,0) S:'$L($P(XUK,U,2)) $P(XUK,U,2)="PU"
"RTN","XUSTERM",19,0)
 . S XUGRP(XUI)=$P(XUK,U,1,2)_U_$S('$D(^XMB(3.8,XUI,3)):0,1:^(3)=XUDA)
"RTN","XUSTERM",20,0)
 . S XU10=XU10+1 S:$L(XU11)<70 XU11=XU11_","_$P(XUK,U)
"RTN","XUSTERM",21,0)
 F XUI=0:0 S XUI=$O(^VA(200,XUDA,51,XUI)) Q:XUI'>0  D  ;Get keys
"RTN","XUSTERM",22,0)
 . S %=$G(^DIC(19.1,XUI,0)),XU20=XU20+1
"RTN","XUSTERM",23,0)
 . S:$L(XU21)<70 XU21=XU21_","_$P(%,U)
"RTN","XUSTERM",24,0)
 . Q:$P(%,U,4)="y"  ;Don't count keep at terminate keys
"RTN","XUSTERM",25,0)
 . S XUKEY(XUI)=""
"RTN","XUSTERM",26,0)
 F XUI=0:0 S XUI=$O(^XMB(3.7,"AB",XUDA,XUI)) Q:XUI'>0  D
"RTN","XUSTERM",27,0)
 . S XUSUR(XUI)="" S:$L(XU31)<70 XU31=XU31_","_$P(^VA(200,XUI,0),U)
"RTN","XUSTERM",28,0)
 S (XUJ,XUK,XUIN,XUNUM)=0 F I=.9:0 S I=$O(^XMB(3.7,XUDA,2,I)) Q:I'>0  S XUJ=XUJ+1,XUNUM=$P($G(^XMB(3.7,XUDA,2,I,0)),U,5) S:XUNUM>0 XUK=XUK+XUNUM S:I=1 XUIN=XUNUM
"RTN","XUSTERM",29,0)
 S XUTX1(1)="User has "_XUK_" messages in "_XUJ_" baskets, Member of "_XU10_" Mail Groups."
"RTN","XUSTERM",30,0)
 S:XU10 XUTX1(2)="Mail Groups: "_$E(XU11,2,80) S:$L(XU31) XUTX1(3)="Surrogate for: "_$E(XU31,2,80)
"RTN","XUSTERM",31,0)
 S XUTX2(1)="User has "_XU20_" keys" S:XU20 XUTX2(2)=$E(XU21,2,80)
"RTN","XUSTERM",32,0)
 S XUEMP='($D(XUSUR)!$D(XUKEY)!$D(XUGRP)!XUJ!XUK!XUIN!$L($P(^VA(200,XUDA,0),U,3)))
"RTN","XUSTERM",33,0)
 Q
"RTN","XUSTERM",34,0)
ACT ;First let others clean-up, Then do our part.
"RTN","XUSTERM",35,0)
 D A^XUSTERM2 ;Cleanup by other packages.
"RTN","XUSTERM",36,0)
 K DIC S DA=XUDA,XUJ=^VA(200,XUDA,0),XUNAM=$P(XUJ,U,1),XUACT(19)=$S($D(^VA(200,XUDA,19)):^(19),1:"") F XUI=5,6,10 S XUACT(XUI)=$P(XUJ,U,XUI)
"RTN","XUSTERM",37,0)
ACT1 K ^DISV(XUDA) ; WARNING: This only gets ^DISV entries on current CPU
"RTN","XUSTERM",38,0)
 ;keys
"RTN","XUSTERM",39,0)
 I XUACT(6)="y" F XUI=0:0 S XUI=$O(^VA(200,XUDA,51,XUI)) Q:XUI'>0  I $P($G(^DIC(19.1,XUI,0)),U,4)'="y" S DA=XUI,DA(1)=XUDA,DIK="^VA(200,XUDA,51," D ^DIK W:XUVE "..."
"RTN","XUSTERM",40,0)
 ;delegated keys
"RTN","XUSTERM",41,0)
 I XUACT(6)="y" F XUI=0:0 S XUI=$O(^VA(200,XUDA,52,XUI)) Q:XUI'>0  S DA=XUI,DA(1)=XUDA,DIK="^VA(200,XUDA,52," D ^DIK W:XUVE "..."
"RTN","XUSTERM",42,0)
 ;Access;Verify;PAC;Last signon;SMD delagate;electronic signature,Primary menu,Hinq Employee #
"RTN","XUSTERM",43,0)
 S DIE=200,DA=XUDA,DR="2///@;11///@;14///@;1.1///@;19///@;19.2///@;20.4///@;201///@;14.9///@" D ^DIE
"RTN","XUSTERM",44,0)
 ;Delegated options
"RTN","XUSTERM",45,0)
 S DIK="^VA(200,XUDA,19.5,",DA(1)=XUDA F XUI=0:0 S XUI=$O(^VA(200,XUDA,19.5,XUI)) Q:XUI'>0  S DA=XUI D ^DIK
"RTN","XUSTERM",46,0)
 ;Menu templates
"RTN","XUSTERM",47,0)
 S DIK="^VA(200,XUDA,19.8,",DA(1)=XUDA F XUI=0:0 S XUI=$O(^VA(200,XUDA,19.8,XUI)) Q:XUI'>0  S DA=XUI D ^DIK
"RTN","XUSTERM",48,0)
 ;Secondary Menus
"RTN","XUSTERM",49,0)
 S DIK="^VA(200,XUDA,203,",DA(1)=XUDA F XUI=0:0 S XUI=$O(^VA(200,XUDA,203,XUI)) Q:XUI'>0  S DA=XUI D ^DIK
"RTN","XUSTERM",50,0)
 S DA=0,DA(1)=XUDA D D2^XUFILE1 ;Remove all access to files.
"RTN","XUSTERM",51,0)
ACT2 ;XUACT(5) All Mail access,  Mail groups
"RTN","XUSTERM",52,0)
 I XUACT(5)="y" F XUI=0:0 S XUI=$O(XUGRP(XUI)) Q:XUI=""  F XUJ=0:0 S XUJ=$O(^XMB(3.8,"AB",XUDA,XUI,XUJ)) Q:XUJ'>0  S DA=XUJ,DA(1)=XUI,DIK="^XMB(3.8,XUI,1," D ^DIK W:XUVE "..."
"RTN","XUSTERM",53,0)
 ; Personal Mail Groups
"RTN","XUSTERM",54,0)
 I XUACT(5)="y" F XUI=0:0 S XUI=$O(^XMB(3.8,XUI)) Q:XUI'>0  I $P(^(XUI,0),U,6)=1,$D(^(3))#2,^(3)=XUDA S DA=XUI,DIK="^XMB(3.8," D ^DIK W:XUVE "..."
"RTN","XUSTERM",55,0)
 ;Allways remove as authorized sender
"RTN","XUSTERM",56,0)
 S XUGP=0 F I=1:1 S XUGP=$O(^XMB(3.8,XUGP)) Q:+XUGP'=XUGP  S DIC="^XMB(3.8,"_XUGP_",4,",DA=$O(@(DIC_"""B"",XUDA,0)")) I +DA>0 S DIK=DIC,DA(1)=XUGP D ^DIK W:XUVE "..."
"RTN","XUSTERM",57,0)
 ;Remove as mail surrogate
"RTN","XUSTERM",58,0)
 F XUDB=0:0 S XUDB=$O(^XMB(3.7,"AB",XUDA,XUDB)) Q:XUDB'>0  S DA=$O(^XMB(3.7,"AB",XUDA,XUDB,0)),%=$D(^XMB(3.7,XUDB,9,DA,0)) K:%=0 ^XMB(3.7,"AB",XUDA,XUDB) I % S DA(1)=XUDB,DIK="^XMB(3.7,XUDB,9," D ^DIK
"RTN","XUSTERM",59,0)
 ;Mail basket
"RTN","XUSTERM",60,0)
 I XUACT(5)="y",$D(^XMB(3.7,XUDA,0)) W:XUVE "..." S DIK="^XMB(3.7,",DA=XUDA D ^DIK K DIK
"RTN","XUSTERM",61,0)
 ;Remove latered messages
"RTN","XUSTERM",62,0)
 I XUACT(5)="y" S DA=0 F  S DA=$O(^XMB(3.73,"C",XUDA,DA)) Q:DA'>0  S DIK="^XMB(3.73," D ^DIK K DIK
"RTN","XUSTERM",63,0)
 K ^XMB(3.7,"AB",XUDA) K:XUACT(5)="y" ^XMB(3.8,"AB",XUDA) ;Clean up X-refs
"RTN","XUSTERM",64,0)
 W:XUVE "... DONE" Q
"RTN","XUSTERM",65,0)
END K C,D,D0,DI,DR,DIC,DIE,DA,DIR,XUEMP,XUDA,XUI,XUJ,XUK,XUACT,XUKEY,XUGRP,XUSUR,XUNAM,XUF,XUDT,XUIN,DIC,XUDB,XUDC,XUDP,XUGP,XUNUM,XUVE,Y
"RTN","XUSTERM",66,0)
 K XUTX1,XUTX2
"RTN","XUSTERM",67,0)
 Q
"RTN","XUSTZ")
0^1^B4173723
"RTN","XUSTZ",1,0)
XUSTZ ;SF/RWF - Security Twilight Zone ;7/5/96  15:11
"RTN","XUSTZ",2,0)
 ;;8.0;KERNEL;**36**;Jul 10, 1995
"RTN","XUSTZ",3,0)
 ;Only send the bulletin once.
"RTN","XUSTZ",4,0)
 N XUSTZ
"RTN","XUSTZ",5,0)
A I XUT'>$P(XOPT,U,2),'$D(XUSTZ) S XUSTZ=1,XMB="XUSLOCK",XMB(1)=$S($D(IO("ZIO")):IO("ZIO"),1:$I),XMB(2)=+XUT,XMB(3)=ION D ^XMB
"RTN","XUSTZ",6,0)
 S ^DISV("XU",IOS)="" G:$D(XGWIN) WAIT
"RTN","XUSTZ",7,0)
 W !!!,"Please wait"
"RTN","XUSTZ",8,0)
 X XUEOFF S %="",XUM=4,XUEX=0,XUC=""
"RTN","XUSTZ",9,0)
A1 R !,"ACCESS CODE: ",X:$P(XOPT,"^",3) S X=$E(X,1,60) G OK:'$T,OK:'$D(^DISV("XU",IOS)),A1:X=""
"RTN","XUSTZ",10,0)
 I X[U W "  '^' not allowed in Access Code, Use EDIT USER option." G A1
"RTN","XUSTZ",11,0)
 S:X[";" %=$P(X,";",2),X=$P(X,";") S:XUF %1="Access: "_X D:XUF E H 1
"RTN","XUSTZ",12,0)
VC ;
"RTN","XUSTZ",13,0)
 S %1="" R:%="" !,"VERIFY CODE: ",%:60 S X=$E(%,1,60),%="" S:XUF %1="Verify: "_X D:XUF E H 1
"RTN","XUSTZ",14,0)
 I XUF,XUF(.2)>50 D FILE S XUF(.2)=0
"RTN","XUSTZ",15,0)
NO K ^DISV("XU",IOS) D  G A
"RTN","XUSTZ",16,0)
 . N XUT S %=$$NO^XUS3
"RTN","XUSTZ",17,0)
 . Q
"RTN","XUSTZ",18,0)
E G E^XUS
"RTN","XUSTZ",19,0)
FILE ;
"RTN","XUSTZ",20,0)
 S X1=IOS,X2=DT F I=1:1:XUF(.2) S X=XUF(I) D EN^XUSHSHP S XUF(I)=X
"RTN","XUSTZ",21,0)
 S XUSLNT=1,XQZ="FAAL^ZUA[MGR]" D DO^%XUCI
"RTN","XUSTZ",22,0)
 S %=XUF(.2),XUF(.2)=0 F I=1:1:% K XUF(I)
"RTN","XUSTZ",23,0)
 Q
"RTN","XUSTZ",24,0)
OK W !!,"You may now sign-on" I XUF D FILE
"RTN","XUSTZ",25,0)
 K ^DISV("XU",IOS) G ^XUS
"RTN","XUSTZ",26,0)
WAIT ;GUI WAIT
"RTN","XUSTZ",27,0)
 S XUT(1)="There have been too many sign-on attempts",XUT(2)="Please wait untill this message clears by its self.",XUT(3)=" ",XUT(4)="Then you may try again."
"RTN","XUSTZ",28,0)
 F  S %=$$OK^XGLMSG("E",.XUT,$P(XOPT,"^",3)) Q:%="TO"
"RTN","XUSTZ",29,0)
 Q
"RTN","XUTMUSE2")
0^5^B24321902
"RTN","XUTMUSE2",1,0)
XUTMUSE2 ;SEA/RDS - TaskMan: Option, XUTMUSER, Part 3 (Edit) ;08/12/96  13:31
"RTN","XUTMUSE2",2,0)
 ;;8.0;KERNEL;**36**;Jul 10, 1995
"RTN","XUTMUSE2",3,0)
 ;
"RTN","XUTMUSE2",4,0)
TASK ;Handle Unusual Tasks
"RTN","XUTMUSE2",5,0)
 N ZTD,ZTDEFALT,ZTL,ZTX
"RTN","XUTMUSE2",6,0)
 I $D(^%ZTSK(XUTMT,0))[0 W !,"This task's record is missing critical data.  There's nothing to edit." Q
"RTN","XUTMUSE2",7,0)
 I $D(^%ZTSCH("TASK",XUTMT)) W !,"This task is currently running.  You should either wait for the task to stop",!?5,"running, or use the Stop Task action to try to stop it sooner." Q
"RTN","XUTMUSE2",8,0)
 ;
"RTN","XUTMUSE2",9,0)
STOP ;Report Need To Stop Task, Prompt For Confirmation
"RTN","XUTMUSE2",10,0)
 W ! S DIR(0)="YO",DIR("A")="Before you edit the task I must unschedule it, is this okay",DIR("B")="YES",DIR("?")="Yes - task will be unscheduled and you can edit it.  No - don't edit."
"RTN","XUTMUSE2",11,0)
 D ^DIR K DIR I $D(DIRUT)!'Y W !,"Task not changed." Q
"RTN","XUTMUSE2",12,0)
 D ^XUTMTS I ZTSK<1 W !!,"Task not available for editing."
"RTN","XUTMUSE2",13,0)
 W !,"Task ready for editing."
"RTN","XUTMUSE2",14,0)
 ;
"RTN","XUTMUSE2",15,0)
OUTPUT ;Report Whether Task Involved Output
"RTN","XUTMUSE2",16,0)
 W ! W:$P(ZTSK(.2),U)="" !,"Currently, this task does not request an output device." W:$P(ZTSK(.2),U)]"" !,"Currently, this task requests output device ",$P($P(ZTSK(.2),U),";"),"."
"RTN","XUTMUSE2",17,0)
 S DIR(0)="YO",DIR("A")="Do you want to change the output device for this task",DIR("B")="NO"
"RTN","XUTMUSE2",18,0)
 D ^DIR Q:$D(DIRUT)  K DIR I 'Y G RUNTIME
"RTN","XUTMUSE2",19,0)
 ;
"RTN","XUTMUSE2",20,0)
DEVICE ;Allow User To Change Output Device Request
"RTN","XUTMUSE2",21,0)
 S ZTSK(.2)="",ZTSK(.25)="" K ZTIO
"RTN","XUTMUSE2",22,0)
 S %ZIS="NQS",%ZIS("A")="Select Task's Output Device (^ for none): ",%ZIS("B")=$P(ZTSK(.2),U) D ^%ZIS G:POP RUNTIME
"RTN","XUTMUSE2",23,0)
 S ZTIO=ION_";"_IOST_";"_$S($D(IO("DOC"))#2:IO("DOC"),1:IOM_";"_IOSL)_$S($D(IO("P"))[0:"",IO("P")="":"",1:";/"_IO("P")),ZTSK(.2)=ZTIO_U_IO_U_IOT_U_IOST_U_$P(ZTSK(.2),U,5)_U
"RTN","XUTMUSE2",24,0)
 I $D(IO("HFSIO"))#2,$D(IOPAR)#2 S $P(ZTSK(.2),U,6)=IO("HFSIO"),ZTSK(.25)=IOPAR
"RTN","XUTMUSE2",25,0)
 D HOME^%ZIS
"RTN","XUTMUSE2",26,0)
 ;
"RTN","XUTMUSE2",27,0)
RUNTIME ;Allow User To Change Task's Next Run Time
"RTN","XUTMUSE2",28,0)
 W ! S ZTDEFALT=$$HTFM^XLFDT($P(ZTSK(0),U,6))
"RTN","XUTMUSE2",29,0)
 S DIR(0)="D^::ERS^N ZTRSTRCT D SCREEN^XUTMUSE2 K:ZTRSTRCT X"
"RTN","XUTMUSE2",30,0)
 S DIR("A")="When should this task run?"
"RTN","XUTMUSE2",31,0)
 S DIR("B")=$$HTE^XLFDT($P(ZTSK(0),U,6))
"RTN","XUTMUSE2",32,0)
 S DIR("?",1)="     Your response must be a date, @ sign, and time."
"RTN","XUTMUSE2",33,0)
 S DIR("?",2)=" "
"RTN","XUTMUSE2",34,0)
 S DIR("?")="     Enter ?? for more help."
"RTN","XUTMUSE2",35,0)
 S DIR("??")="^D HELP2^XUTMUSE2"
"RTN","XUTMUSE2",36,0)
 D ^DIR K DIR
"RTN","XUTMUSE2",37,0)
R1 ;
"RTN","XUTMUSE2",38,0)
 I $D(DTOUT) W "     ** TIME-OUT **",$C(7)
"RTN","XUTMUSE2",39,0)
 I $D(DUOUT) W "     ** ^-ESCAPE **"
"RTN","XUTMUSE2",40,0)
 I $D(DIRUT) Q
"RTN","XUTMUSE2",41,0)
 S $P(ZTSK(0),U,6)=$$FMTH^XLFDT(Y)
"RTN","XUTMUSE2",42,0)
 ;
"RTN","XUTMUSE2",43,0)
PURPOSE ;Allow User To Edit Description Of Task's Purpose
"RTN","XUTMUSE2",44,0)
 W ! S DIR(0)="FO^1:200",DIR("A")="Task's purpose" S:ZTSK(.03)]"" DIR("B")=ZTSK(.03) D ^DIR Q:$D(DIRUT)  K DIR S ZTSK(.03)=Y
"RTN","XUTMUSE2",45,0)
 ;
"RTN","XUTMUSE2",46,0)
BRIEF ;Show User Brief Of Task
"RTN","XUTMUSE2",47,0)
 W !!,ZTSK,": ",$E(ZTSK(.03),1,70)
"RTN","XUTMUSE2",48,0)
 S ZTD=$E(ZTSK(.03),$L(ZTSK(.03)))=".",ZTX=$L(ZTSK)+2+$L(ZTSK(.03))+3-ZTD,ZTL=$S($P($P(ZTSK(.2),U),";")]"":$L($P($P(ZTSK(.2),U),";")),1:16)
"RTN","XUTMUSE2",49,0)
 W:ZTL+ZTX'>80 $E(".",'ZTD),"  " I ZTL+ZTX>80 W:ZTX<80&'ZTD "." W ! S ZTX=0
"RTN","XUTMUSE2",50,0)
 W $S($P($P(ZTSK(.2),U),";")]"":$P($P(ZTSK(.2),U),";"),1:"No output device") S ZTX=ZTL+ZTX+3,%H=$P(ZTSK(0),U,6) D YX^%DTC:%H]""
"RTN","XUTMUSE2",51,0)
 S ZTD=$S(%H="":"Next run time unknown",1:"Next run time: "_Y),ZTL=$L(ZTD) W:ZTL+ZTX'>80 ".  " I ZTL+ZTX>80 W:ZTL<80 "." W ! S ZTX=0
"RTN","XUTMUSE2",52,0)
 W ZTD I ZTL+ZTX<80 W "."
"RTN","XUTMUSE2",53,0)
 ;
"RTN","XUTMUSE2",54,0)
REQ ;Allow User To Reschedule Task
"RTN","XUTMUSE2",55,0)
 W ! S DIR(0)="YO",DIR("A")="Shall I reschedule this task as shown",DIR("B")="YES" D ^DIR K DIR I $D(DIRUT)!'Y W !,"Task not rescheduled." Q
"RTN","XUTMUSE2",56,0)
 S $P(ZTSK(.1),U,10,11)="^"
"RTN","XUTMUSE2",57,0)
 S $P(ZTSK(0),U,3)=DUZ
"RTN","XUTMUSE2",58,0)
 S $P(ZTSK(0),U,5)=$H
"RTN","XUTMUSE2",59,0)
 S $P(ZTSK(0),U,10)=ZTNAME
"RTN","XUTMUSE2",60,0)
 W !,"Task rescheduled."
"RTN","XUTMUSE2",61,0)
 L +^%ZTSK(ZTSK) S ^%ZTSK(ZTSK,0)=ZTSK(0),^(.03)=ZTSK(.03),^(.1)=ZTSK(.1),^(.2)=ZTSK(.2),^(.25)=ZTSK(.25)
"RTN","XUTMUSE2",62,0)
 K ZTDESC,ZTIO,ZTRTN S ZTDTH=$P(ZTSK(0),U,6) D REQ^%ZTLOAD L -^%ZTSK(ZTSK)
"RTN","XUTMUSE2",63,0)
 Q
"RTN","XUTMUSE2",64,0)
 ;
"RTN","XUTMUSE2",65,0)
HELP2 ;RUNTIME--provide ?? help in selecting a start time for this task
"RTN","XUTMUSE2",66,0)
 N ZTREC
"RTN","XUTMUSE2",67,0)
 W !!?5,"This will be the time TaskMan starts your task."
"RTN","XUTMUSE2",68,0)
 I $P(ZTSK(0),U,8)="" Q
"RTN","XUTMUSE2",69,0)
 S ZTREC=$G(^DIC(19,+$P(ZTSK(0),U,8),0))
"RTN","XUTMUSE2",70,0)
 I ZTREC="" Q
"RTN","XUTMUSE2",71,0)
 I $P(ZTREC,U,2)="" Q
"RTN","XUTMUSE2",72,0)
 W !!?5,"The option you used to queue this task was:"
"RTN","XUTMUSE2",73,0)
 W !?5,$P(ZTREC,U,2)
"RTN","XUTMUSE2",74,0)
H1 ;
"RTN","XUTMUSE2",75,0)
 I $O(^DIC(19,+$P(ZTSK(0),U,8),3.92,0))="" D  Q
"RTN","XUTMUSE2",76,0)
 .W !!?5,"It has no restricted times, so you may run this task any time"
"RTN","XUTMUSE2",77,0)
 .W !?5,"you wish." Q
"RTN","XUTMUSE2",78,0)
 W !!?5,"It may only be run at certain times."
"RTN","XUTMUSE2",79,0)
 W !?5,"This option will notify you if you select a restricted time."
"RTN","XUTMUSE2",80,0)
 Q
"RTN","XUTMUSE2",81,0)
 ;
"RTN","XUTMUSE2",82,0)
SCREEN ;RUNTIME--screen out start times prohibited according to the option
"RTN","XUTMUSE2",83,0)
 ;...that queued the task (or the option itself, if the task is a
"RTN","XUTMUSE2",84,0)
 ;...queued option).
"RTN","XUTMUSE2",85,0)
 I Y=ZTDEFALT S ZTRSTRCT=0 Q
"RTN","XUTMUSE2",86,0)
 N X,XQY S X=Y N Y
"RTN","XUTMUSE2",87,0)
 S XQY=+$P(ZTSK(0),U,8)
"RTN","XUTMUSE2",88,0)
 D ^XQ92
"RTN","XUTMUSE2",89,0)
 S ZTRSTRCT=X=""
"RTN","XUTMUSE2",90,0)
S1 ;
"RTN","XUTMUSE2",91,0)
 I ZTRSTRCT D
"RTN","XUTMUSE2",92,0)
 .W !!?5,"You may not start your task at that time."
"RTN","XUTMUSE2",93,0)
 .W !!?5,"The option you used to queue this task does not allow the task"
"RTN","XUTMUSE2",94,0)
 .W !?5,"to run at that time.  Please select a different time to start"
"RTN","XUTMUSE2",95,0)
 .W !?5,"the task."
"RTN","XUTMUSE2",96,0)
 .Q
"RTN","XUTMUSE2",97,0)
 Q
"RTN","XUTMUSE2",98,0)
 ;
"RTN","ZIS3")
0^23^B10917946
"RTN","ZIS3",1,0)
%ZIS3 ;SFISC/AC,RWF -- DEVICE HANDLER(DEVICE TYPES & PARAMETERS) ;10/25/96  15:18
"RTN","ZIS3",2,0)
 ;;8.0;KERNEL;**18,36**;JUL 10, 1995
"RTN","ZIS3",3,0)
 I %ZIS'["T",$G(^%ZIS(1,+%E,"POX"))]"" D XPOX^ZISX(%E)
"RTN","ZIS3",4,0)
 I $D(%ZISQUIT) S POP=1 K %ZISQUIT
"RTN","ZIS3",5,0)
 S %ZISCHK=1
"RTN","ZIS3",6,0)
 I 'POP&(%ZISB)&(%ZTYPE'="RES")&(%ZTYPE'="OTH")&(%ZTYPE'="SDP")&(IO'["::") D DEVOK
"RTN","ZIS3",7,0)
 G Q:POP
"RTN","ZIS3",8,0)
 I %ZTYPE["TRM" G @%ZTYPE
"RTN","ZIS3",9,0)
 G @(%ZTYPE_"^%ZIS6")
"RTN","ZIS3",10,0)
Q I $D(%ZISUOUT) K %ZISUOUT,%ZISHP,%ZISHPOP Q
"RTN","ZIS3",11,0)
 I $D(%ZISHPOP)&$S(IO="":1,1:'$D(IO(1,IO))) D HGBSY^%ZIS2 Q
"RTN","ZIS3",12,0)
 I POP S:%IS'["T" IO="" I $D(%ZISHG(0)),%IS'["D",'$D(%ZISHPOP) G HUNT^%ZIS2
"RTN","ZIS3",13,0)
 Q
"RTN","ZIS3",14,0)
VTRM ;Virtual terminal type
"RTN","ZIS3",15,0)
TRM D OPEN^%ZIS4:'POP&(%ZISB&(%IS'["T")),MARGN:'POP,SETPAR:'POP ;Terminal type
"RTN","ZIS3",16,0)
 I 'POP,%IS'["T",%ZISB=1,'$D(IOP),IO'=IO(0),'$D(IO("Q")),%IS["Q" D AQUE
"RTN","ZIS3",17,0)
 W:'$D(IOP) ! I '$D(IO("Q")) D O^%ZIS4:'POP&(%ZISB&(%IS'["T"))
"RTN","ZIS3",18,0)
 G Q
"RTN","ZIS3",19,0)
DEVOK N X,Y,X1
"RTN","ZIS3",20,0)
 S X=IO,X1=%ZTYPE
"RTN","ZIS3",21,0)
 D DEVOK^%ZOSV I Y=-99!(Y=0)!(Y=$J) Q
"RTN","ZIS3",22,0)
 I Y>0 S POP=1 W:'$D(IOP)&('$D(%ZISHG(0))!(%IS["D")) !,*7,"[DEVICE UNAVAILABLE]" Q
"RTN","ZIS3",23,0)
 I Y=-1 S IO="",POP=1 W:'$D(IOP)&('$D(ZISHG(0))!(%IS["D")) !,*7,"[DEVICE DOES NOT EXIST OR UNAVAILABLE]" Q
"RTN","ZIS3",24,0)
 Q
"RTN","ZIS3",25,0)
MARGN S %A=$P(%Y,";",1) I %A?1A.ANP D SUBIEN(.%A,1) I $D(^%ZIS(2,%A,1)) S %ZISTP=0 K %Z91 D ST S %Y=$P(%Y,";",2,9),%ZISMY=$P(%ZISMY,";",2,9) G MARGN
"RTN","ZIS3",26,0)
 S:$P(%Y,";",2) $P(%Z91,"^",3)=+$P(%Y,";",2) I %A>3 S $P(%Z91,"^")=$S(%A>255:255,1:+%A)
"RTN","ZIS3",27,0)
ALTP I '$D(IO("P")) Q:%A>3  G ASKMAR:%ZTYPE["TRM" Q
"RTN","ZIS3",28,0)
 S %X=$F(IO("P"),"M") I %X S %A=+$E(IO("P"),%X,99),$P(%Z91,"^")=$S(%A>255:255,1:%A)
"RTN","ZIS3",29,0)
 S %X=$F(IO("P"),"L") I %X S $P(%Z91,"^",3)=+$E(IO("P"),%X,99)
"RTN","ZIS3",30,0)
 Q:%A>3!(%ZTYPE'["TRM")
"RTN","ZIS3",31,0)
ASKMAR I %IS["M",'$D(IOP),$S(%E=%H:+$P(%Z,"^",3),1:1),$P(%Z,"^",4) W "    RIGHT MARGIN: " W:$P(%Z91,"^")]"" +%Z91,"// "
"RTN","ZIS3",32,0)
 E  Q
"RTN","ZIS3",33,0)
 D SBR^%ZIS1 I '$D(DTOUT)&'$D(DUOUT) S:%X=""&($P(%Z91,"^")]"") %X=+%Z91 G ASKMAR:%X'?1.N S $P(%Z91,"^")=$S(%X<256:%X,1:0) Q
"RTN","ZIS3",34,0)
 S POP=1 I %ZISB&(%ZTYPE["TRM")&(IO'=IO(0)) C IO K IO(1,IO) Q
"RTN","ZIS3",35,0)
 Q
"RTN","ZIS3",36,0)
SETPAR S:%ZISOPAR]""&($A(%ZISOPAR)-40) %ZISOPAR="("_%ZISOPAR_")" Q
"RTN","ZIS3",37,0)
AQUE S %=$S($D(IO("Q")):1,1:2),U="^",%ZISDTIM=60
"RTN","ZIS3",38,0)
 I $D(IO("Q")) W !,"PREVIOUSLY, YOU HAVE SELECTED QUEUEING."
"RTN","ZIS3",39,0)
 W !,"DO YOU "_$S($D(IO("Q")):"STILL ",1:"")_"WANT YOUR OUTPUT QUEUED"
"RTN","ZIS3",40,0)
 D YN^%ZIS1 K %ZISDTIM G AQUE:%=0 Q:$D(IO("Q"))
"RTN","ZIS3",41,0)
 I %=-1 S POP=1,%ZISHPOP=1,%ZISUOUT=1 C IO K IO(1,IO) Q
"RTN","ZIS3",42,0)
 I %=1 S IO("Q")=1 C IO K IO(1,IO) Q
"RTN","ZIS3",43,0)
 Q
"RTN","ZIS3",44,0)
ST S %ZISIOST(0)=%A,%ZISIOST=$P($G(^%ZIS(2,%A,0)),"^") Q:%ZISTP
"RTN","ZIS3",45,0)
STP S:'$D(%Z91) %Z91="" S %A=$G(^%ZIS(2,%A,1),"132^#^66^*8")
"RTN","ZIS3",46,0)
 S:$P(%Z91,"^")="" $P(%Z91,"^")=+%A S:$P(%Z91,"^",2)="" $P(%Z91,"^",2)=$P(%A,"^",2) S:'$P(%Z91,"^",3) $P(%Z91,"^",3)=$P(%A,"^",3) S:$P(%Z91,"^",4)="" $P(%Z91,"^",4)=$P(%A,"^",4) S $P(%Z91,"^",5)=$G(^%ZIS(2,%ZISIOST(0),"XY")) Q
"RTN","ZIS3",47,0)
 N %,%1
"RTN","ZIS3",48,0)
 F %=1:1:5 D
"RTN","ZIS3",49,0)
 .S %1=0
"RTN","ZIS3",50,0)
 .I %=3,'$P(%Z91,"^",%) S %1=1
"RTN","ZIS3",51,0)
 .I $P(%Z91,"^",%)="" D
"RTN","ZIS3",52,0)
 ..I %=1 S $P(%Z91,"^")=+%A
"RTN","ZIS3",53,0)
 ..E  S $P(%Z91,"^",%)=$P(%A,"^",%)
"RTN","ZIS3",54,0)
 Q
"RTN","ZIS3",55,0)
SUBIEN(X,%) ;Return Subtype ien.
"RTN","ZIS3",56,0)
 I $D(^%ZIS(2,"B",X))>9 S X=+$O(^%ZIS(2,"B",X,0)) Q
"RTN","ZIS3",57,0)
 I '$G(%) S X="" Q
"RTN","ZIS3",58,0)
 S %XX=X D 2^%ZIS5 S X=+%YY Q
"RTN","ZIS4MSM")
0^19^B14131618
"RTN","ZIS4MSM",1,0)
%ZIS4 ;SF/GFT,RWF,MVB - DEVICE HANDLER SPOOL SPECIFIC CODE(MSM) ;09/17/96  11:32
"RTN","ZIS4MSM",2,0)
 ;;8.0;KERNEL;**23,36**;JUL 03, 1995
"RTN","ZIS4MSM",3,0)
 ;
"RTN","ZIS4MSM",4,0)
OPEN G OPN2:$D(IO(1,IO))
"RTN","ZIS4MSM",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4MSM",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4MSM",7,0)
 Q
"RTN","ZIS4MSM",8,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4MSM",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4MSM",10,0)
 S POP=1 Q
"RTN","ZIS4MSM",11,0)
 Q
"RTN","ZIS4MSM",12,0)
OP1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",13,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4MSM",14,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4MSM",15,0)
OPNERR S POP=1,IO("ERROR")=$ZE,IO("LASTERR")=$ZE Q
"RTN","ZIS4MSM",16,0)
 ;
"RTN","ZIS4MSM",17,0)
O I $P($ZV,"Version ",2)'<3 S:%IS["L" IO("ZIO")=$ZDE(IO)
"RTN","ZIS4MSM",18,0)
 ;D:$D(%ZISIOS) ZISLPC^%ZIS Q:'%ZISB  ;No longer called in Kernel v8.
"RTN","ZIS4MSM",19,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4MSM",20,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4MSM",21,0)
 S %A=$S(%ZISOPAR]"":%ZISOPAR,%ZTYPE["TRM":+%Z91,1:"")
"RTN","ZIS4MSM",22,0)
 S %A=%A_$S(%A["):":"",%ZTYPE["OTH"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO),%A=""""_IO_""""_$E(":",%A]"")_%A
"RTN","ZIS4MSM",23,0)
 D O1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4MSM",24,0)
 S IO(1,IO)=""
"RTN","ZIS4MSM",25,0)
 I %ZTYPE="HFS" D  Q:POP
"RTN","ZIS4MSM",26,0)
 .N % S %=$I
"RTN","ZIS4MSM",27,0)
 .U IO S:$ZA<0 POP=1
"RTN","ZIS4MSM",28,0)
 .U:'$D(ZTQUEUED) % I POP C:IO]"" IO K:IO]"" IO(1,IO)
"RTN","ZIS4MSM",29,0)
 .I POP,'$D(IOP),'$D(ZTQUEUED) W !,?5,*7,"[FILE NOT FOUND]" Q
"RTN","ZIS4MSM",30,0)
 N DX,DY S (DX,DY)=0
"RTN","ZIS4MSM",31,0)
 U IO X:$D(^%ZOSF("XY"))&'(IO=IO(0)&'$D(ZTQUEUED)&'$D(IO("S"))) ^("XY")
"RTN","ZIS4MSM",32,0)
 U:%IS'[0 IO(0)
"RTN","ZIS4MSM",33,0)
 I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1 U:%IS'[0 IO(0)
"RTN","ZIS4MSM",34,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4MSM",35,0)
 ;
"RTN","ZIS4MSM",36,0)
O1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",37,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4MSM",38,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4MSM",39,0)
 ;
"RTN","ZIS4MSM",40,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name.
"RTN","ZIS4MSM",41,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4MSM",42,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G N
"RTN","ZIS4MSM",43,0)
 S ZOSFV=($P($ZV,"Version ",2)'<2)
"RTN","ZIS4MSM",44,0)
R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) I '%ZISB!$D(IO("Q")) S:'ZOSFV IO=51 G OK
"RTN","ZIS4MSM",45,0)
 I '$P(%ZY,"^",3),%ZFN D SPL3 G N:'%ZFN,DOC
"RTN","ZIS4MSM",46,0)
 S %ZFN=-1 D SPL2 G:%ZFN<0 N S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4MSM",47,0)
DOC S IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA,IOF="#"
"RTN","ZIS4MSM",48,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4MSM",49,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4MSM",50,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4MSM",51,0)
 ;
"RTN","ZIS4MSM",52,0)
SPL2 O 2:1 G SPL5:$ZA<0,SPL5:$ZC S %ZFN=$ZA#256 S IO(1,2)="",IO(1,2,"%ZFN")=%ZFN Q
"RTN","ZIS4MSM",53,0)
 ;
"RTN","ZIS4MSM",54,0)
SPL3 Q:$D(IO(1,2))#2  O 2:%ZFN+256 G:$ZA<0 SPL5:$ZA<0,SPL5:$ZC S IO(1,2)="",IO(1,2,"%ZFN")=%ZFN Q
"RTN","ZIS4MSM",55,0)
SPL4 E  G SPL5
"RTN","ZIS4MSM",56,0)
 ;U IO S %ZA=$ZA U:%IS'[0 IO(0) I %ZA<0 G SPL5
"RTN","ZIS4MSM",57,0)
 Q
"RTN","ZIS4MSM",58,0)
SPL5 W:'$D(IOP)&'$D(ZTQUEUED) !?5,*7,"Couldn't open the spool file." S %ZFN=-1 Q
"RTN","ZIS4MSM",59,0)
 ;
"RTN","ZIS4MSM",60,0)
CLOSE N %Z1 S ZOSFV=($P($ZV,"Version ",2)'<2)
"RTN","ZIS4MSM",61,0)
 C 2 K IO(1,2)
"RTN","ZIS4MSM",62,0)
 D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4MSM",63,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4MSM",64,0)
 S IO=2,%ZFN=$P(%ZS,"^",2) D SPL3 Q:%ZFN'>0  U IO S %ZCR=$C(13),%Y=""
"RTN","ZIS4MSM",65,0)
 G V2CL1^%ZOSV
"RTN","ZIS4MSM",66,0)
 Q  ;Send error up
"RTN","ZIS4MSM",67,0)
CL2 I %Z1<(%+1) S %=%+1,^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4MSM",68,0)
 I %2[$C(12) S %=%+1,^XMBS(3.519,XMZ,2,%,0)="|TOP|"
"RTN","ZIS4MSM",69,0)
 S %=%+1,^XMBS(3.519,XMZ,2,%,0)=%2 Q
"RTN","ZIS4MSM",70,0)
 ;
"RTN","ZIS4MSM",71,0)
HFS G HFS^%ZISF
"RTN","ZIS4MSM",72,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4MSM",73,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",74,0)
 U IO W *5
"RTN","ZIS4MSM",75,0)
 Q 1
"RTN","ZIS4MSM",76,0)
REWSDP(IO,IOPAR) ;Rewind Sequential Block Processor
"RTN","ZIS4MSM",77,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",78,0)
 U IO:IOPAR
"RTN","ZIS4MSM",79,0)
 Q 1
"RTN","ZIS4MSM",80,0)
REWHFS(IO,IOPAR) ;Rewind Host File.
"RTN","ZIS4MSM",81,0)
REW1 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4MSM",82,0)
 U IO:(::0)
"RTN","ZIS4MSM",83,0)
 Q 1
"RTN","ZIS4MSM",84,0)
REWERR ;Error encountered.
"RTN","ZIS4MSM",85,0)
 Q 0
"RTN","ZIS4VXD")
0^18^B16916951
"RTN","ZIS4VXD",1,0)
%ZIS4 ;SFISC/GFT,RWF,MVB - DEVICE HANDLER SPOOL SPECIFIC CODE(VAX DSM) ;09/17/96  11:42
"RTN","ZIS4VXD",2,0)
 ;;8.0;KERNEL;**23,36**;JUL 03, 1995
"RTN","ZIS4VXD",3,0)
 ;
"RTN","ZIS4VXD",4,0)
OPEN G OPN2:$D(IO(1,IO))
"RTN","ZIS4VXD",5,0)
 S POP=0 D OP1 S:'POP IO(1,IO)="" G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4VXD",6,0)
OPN2 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4VXD",7,0)
 Q
"RTN","ZIS4VXD",8,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4VXD",9,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4VXD",10,0)
 S POP=1 Q
"RTN","ZIS4VXD",11,0)
 Q
"RTN","ZIS4VXD",12,0)
OP1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",13,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4VXD",14,0)
 O IO::%ZISTO S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4VXD",15,0)
OPNERR S POP=1,IO("ERROR")=$ZE,IO("LASTERR")=$ZE Q
"RTN","ZIS4VXD",16,0)
 ZQ
"RTN","ZIS4VXD",17,0)
O S:%IS["L" IO("ZIO")=$ZIO
"RTN","ZIS4VXD",18,0)
 ;D:$D(%ZISIOS) ZISLPC^%ZIS Q:'%ZISB  ;No longer called in Kernel v8.
"RTN","ZIS4VXD",19,0)
LCKGBL ;Lock Global
"RTN","ZIS4VXD",20,0)
 I %ZTYPE="CHAN" N % S %=$G(^%ZIS(1,+%E,"GBL")) I %]"" L @("+^"_%_":0") S:'$T POP=1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4VXD",21,0)
OPRTPORT I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4VXD",22,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4VXD",23,0)
 I %ZTYPE="CHAN",IO["::""TASK="!(IO["SYS$NET") D ODECNET Q:POP  G OXECUTE^%ZIS6
"RTN","ZIS4VXD",24,0)
 S %A=%ZISOPAR_$S(%ZISOPAR["):":"",%ZTYPE["CHAN"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO)
"RTN","ZIS4VXD",25,0)
 N % S %(IO)="",%=$P($P($NA(%(IO)),"(",2),")")
"RTN","ZIS4VXD",26,0)
 S %A=%_$E(":",%A]"")_%A
"RTN","ZIS4VXD",27,0)
 ;,%A=""""_IO_""""_$E(":",%A]"")_%A
"RTN","ZIS4VXD",28,0)
 D O1 I POP D  Q
"RTN","ZIS4VXD",29,0)
 .I %ZTYPE="HFS",'$D(IOP),$G(IO("ERROR"))["file not found" W !,?5,*7,"[FILE NOT FOUND]" Q
"RTN","ZIS4VXD",30,0)
 .W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4VXD",31,0)
 S IO(1,IO)="" N DX,DY S (DX,DY)=0 U IO X:$D(^%ZOSF("XY"))&'(IO=IO(0)&'$D(ZTQUEUED)&'$D(IO("S"))) ^("XY") U:%IS'[0 IO(0) I %ZTYPE["TRM" U IO:(WIDTH=+%Z91) U:%IS'[0 IO(0)
"RTN","ZIS4VXD",32,0)
 I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1 U:%IS'[0 IO(0)
"RTN","ZIS4VXD",33,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4VXD",34,0)
 ;
"RTN","ZIS4VXD",35,0)
O1 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",36,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4VXD",37,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZIS4VXD",38,0)
 ;
"RTN","ZIS4VXD",39,0)
ODECNET ;OPEN DECNET CHANNEL
"RTN","ZIS4VXD",40,0)
 N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",41,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60 O IO L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4VXD",42,0)
 I IO="SYS$NET",$I="SYS$INPUT:;" S IO(0)=IO U IO Q
"RTN","ZIS4VXD",43,0)
 Q
"RTN","ZIS4VXD",44,0)
 ;
"RTN","ZIS4VXD",45,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name.
"RTN","ZIS4VXD",46,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4VXD",47,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G N
"RTN","ZIS4VXD",48,0)
R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) G OK:$D(IO("Q"))
"RTN","ZIS4VXD",49,0)
 G:'%ZISB OK I '$P(%ZY,"^",3),%ZFN]"" D SPL3 G N:%ZFN']"",DOC
"RTN","ZIS4VXD",50,0)
 S %ZFN=IO_"SPOOL_no_"_%ZDA_".TMP" D SPL2 G:%ZFN']"" N S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4VXD",51,0)
DOC S IO=%ZFN,IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA,IOF="#"
"RTN","ZIS4VXD",52,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4VXD",53,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4VXD",54,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4VXD",55,0)
SPL2 O %ZFN:(NEWVERSION:PROT=W:RWD) G:$ZA<0 SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4VXD",56,0)
SPL3 N X S X="SPL4^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",57,0)
 O %ZFN:READONLY:1 S:'$T ZISPLQ=1 G:$ZA<0!('$T) SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4VXD",58,0)
SPL4 W:'$D(IOP)&'$D(ZTQUEUED) !?5,*7,"Couldn't open the spool file." S %ZFN="" Q
"RTN","ZIS4VXD",59,0)
CLOSE N %Z1 C:IO]"" IO K:IO]"" IO(1,IO) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4VXD",60,0)
 S %ZFN=$P(%ZS,"^",2) D SPL3 Q:%ZFN']""  U %ZFN S %ZCR=$C(13),%Y="",$ZT="SPLEOF^%ZIS4"
"RTN","ZIS4VXD",61,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4VXD",62,0)
 F %=0:0 R %X#255:5 Q:$ZA<0  S %2=%X D CL2 G:%Z1<% SPLEX
"RTN","ZIS4VXD",63,0)
SPLEOF I $ZE'["ENDO" ZQ  ;Send error up
"RTN","ZIS4VXD",64,0)
SPLEX C %ZFN:DELETE K:%ZFN]"" IO(1,%ZFN) D CLOSE^ZISPL1 K %Y,%X,%1,%ZFN Q
"RTN","ZIS4VXD",65,0)
 ;
"RTN","ZIS4VXD",66,0)
CL2 S %=%+1 I %Z1<% S ^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4VXD",67,0)
 I %2[$C(12) S ^XMBS(3.519,XS,2,%,0)="|TOP|" Q
"RTN","ZIS4VXD",68,0)
 S ^XMBS(3.519,XS,2,%,0)=%2 Q
"RTN","ZIS4VXD",69,0)
 ;
"RTN","ZIS4VXD",70,0)
HFS G HFS^%ZISF
"RTN","ZIS4VXD",71,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4VXD",72,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",73,0)
 U IO W *5
"RTN","ZIS4VXD",74,0)
 Q 1
"RTN","ZIS4VXD",75,0)
REWSDP(IO,IOPAR) ;Rewind SDP
"RTN","ZIS4VXD",76,0)
 G REW1
"RTN","ZIS4VXD",77,0)
REWHFS(IO,IOPAR) ;Rewind Host File.
"RTN","ZIS4VXD",78,0)
REW1 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4VXD",79,0)
 U IO:DISCONNECT
"RTN","ZIS4VXD",80,0)
 Q 1
"RTN","ZIS4VXD",81,0)
REWERR ;Error encountered
"RTN","ZIS4VXD",82,0)
 Q 0
"RTN","ZISC")
0^20^B19978972
"RTN","ZISC",1,0)
%ZISC ;SF/GFT,AC,MUS - CLOSE LOGIC FOR DEVICES  ;09/18/96  14:18
"RTN","ZISC",2,0)
 ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"RTN","ZISC",3,0)
C0 ;D:$D(ZISLP) C^%ZISLPC ;-- No longer called in kernel v8.
"RTN","ZISC",4,0)
 K %,IO("DOC"),IO("HFSIO") S:$D(IO)[0 IO=$I S:'$D(IO(0)) IO(0)=$I S:$D(ION) %=ION S:'$D(%) %=IO
"RTN","ZISC",5,0)
 S %ZISOS=$G(^%ZOSF("OS")),%ZISV=$G(^("VOL"))
"RTN","ZISC",6,0)
 I %=""!(IO="") G SETIO:IO(0)]"" G END
"RTN","ZISC",7,0)
 I $D(IOT),IOT="RES" D RES G SETIO
"RTN","ZISC",8,0)
 ;D CHKDVOPN ;Code needs to be reviewed before it is distributed.
"RTN","ZISC",9,0)
 ;
"RTN","ZISC",10,0)
 I $D(IOST)#2,IOST]"" K % ;Define subtype info if not already defined.
"RTN","ZISC",11,0)
 I $D(%) S IOST=$P(%,";",2) D:IOST'?1A.ANP C2A S:IOST IOST(0)=IOST
"RTN","ZISC",12,0)
 I '$D(%)!($D(%)&(IOST?1A.ANP!($D(IOST(0))))) D
"RTN","ZISC",13,0)
 . S:'$D(IOST(0)) IOST(0)=$O(^%ZIS(2,"B",IOST,0)) K %
"RTN","ZISC",14,0)
 . I $G(^%ZIS(2,+IOST(0),3))]"",$D(IO(1,IO)) D
"RTN","ZISC",15,0)
 . . U IO S:$X $X=1 D X3^ZISX:'$D(IO("T")) ;perform close execute
"RTN","ZISC",16,0)
 ;
"RTN","ZISC",17,0)
 I $D(IO(1,IO)) D  ;Perform the following if the device is open.
"RTN","ZISC",18,0)
 .I $G(IO("P"))["B" D  ;Return to normal intensity
"RTN","ZISC",19,0)
 ..S %=$P($G(^%ZIS(2,+IOST(0),7)),"^",3) I %]"" W @%
"RTN","ZISC",20,0)
 .I $G(IO("P"))["P" D  ;Return to default pitch
"RTN","ZISC",21,0)
 ..S %=$G(^%ZIS(2,+IOST(0),12.11)) I %]"" W @%
"RTN","ZISC",22,0)
 ;
"RTN","ZISC",23,0)
 W:$$FF @IOF ;form feed issued at close
"RTN","ZISC",24,0)
 I $$CLOSPP D X11^ZISX:'$D(IO("T")) K IO("S") ;Close printer port
"RTN","ZISC",25,0)
 ;
"RTN","ZISC",26,0)
 I '$D(IOCPU)&(IO'=IO(0)!$D(IO("C"))),$D(IO(1,IO)) D
"RTN","ZISC",27,0)
 .U:$S($D(ZTQUEUED):0,'$D(IO(0)):0,IO(0)']"":0,$D(IO(1,IO(0)))#2:1,1:0) IO(0)
"RTN","ZISC",28,0)
 .C IO K IO(1,IO) ;close device
"RTN","ZISC",29,0)
 ;
"RTN","ZISC",30,0)
 ;I $G(^%ZIS(2,+IOST(0),3.1))]"" D X31^ZISX:'$D(IO("T"))
"RTN","ZISC",31,0)
 ;
"RTN","ZISC",32,0)
 S IO("CLOSE")=IO D:IO'=IO(0) RESETP
"RTN","ZISC",33,0)
 I $D(IOT),IOT="CHAN",$D(IOS) D
"RTN","ZISC",34,0)
 .S %=$G(^%ZIS(1,+IOS,"GBL"))
"RTN","ZISC",35,0)
 .I %]"" L @("-^"_%) ;unlock global used to control access to network channels.
"RTN","ZISC",36,0)
 D CLOSE^%ZIS4:$D(IO("SPOOL"))
"RTN","ZISC",37,0)
SETIO I $G(IOS),$G(^%ZIS(1,+IOS,"PCX"))]"" S %ZISPCX=^("PCX")
"RTN","ZISC",38,0)
 S (IO,IOS)=IO(0) K IO("T") D CIOS
"RTN","ZISC",39,0)
 G END:'IOS S ION=$P(^%ZIS(1,IOS,0),"^",1),IOT=$G(^("TYPE")),IOST(0)=$S(IOT["TRM"&($D(^XUTL("XQ",$J,"IOST(0)"))):^("IOST(0)"),1:$G(^%ZIS(1,IOS,"SUBTYPE")))
"RTN","ZISC",40,0)
 I IOT["TRM",$D(^XUTL("XQ",$J,"IOST(0)")) D HOME^%ZIS G END
"RTN","ZISC",41,0)
 I $D(^%ZIS(1,IOS,91)) S %=^%ZIS(1,IOS,91),IOM=+%,IOF=$P(%,"^",2),IOSL=$P(%,"^",3),IOBS=$P(%,"^",4) G S1
"RTN","ZISC",42,0)
 I IOST(0),$D(^%ZIS(2,IOST(0),1)) S %=^(1),IOM=+%,IOF=$P(%,"^",2),IOSL=$P(%,"^",3),IOBS=$P(%,"^",4) G S1
"RTN","ZISC",43,0)
 S (IOM,IOF,IOSL)=""
"RTN","ZISC",44,0)
S1 S:IOST(0) IOST=$P($G(^%ZIS(2,+IOST(0),0)),"^"),IOXY=$G(^("XY"))
"RTN","ZISC",45,0)
 I '$D(ZTQUEUED),'$D(IO("C")),IOT["TRM" D RM:$D(IO(1,IO))
"RTN","ZISC",46,0)
 ;I $G(^%ZIS(1,+IOS,"PCX"))]"" D XPCX^ZISX:'$D(IO("T")) ;Post-close execute code of Device file.
"RTN","ZISC",47,0)
END I '$D(IO("T")),$G(%ZISPCX)]"" S %Y=%ZISPCX D %Y^ZISX
"RTN","ZISC",48,0)
 K %,%E,%H,%ZISI,%ZISOS,%ZISPCX,%ZISV,%ZISVT,%ZISX,IO("P"),IOC,IOCPU,IONOFF Q
"RTN","ZISC",49,0)
 ;
"RTN","ZISC",50,0)
C2A S IOS=$P(%,";") D CIOS S IOST=IOS
"RTN","ZISC",51,0)
 S IOST=$S($D(^%ZIS(1,+IOST,"SUBTYPE")):^("SUBTYPE"),1:0)
"RTN","ZISC",52,0)
 Q
"RTN","ZISC",53,0)
 ;
"RTN","ZISC",54,0)
CIOS I $D(^XUTL("XQ",$J,"IOS")) S IOS=+^("IOS") Q
"RTN","ZISC",55,0)
 I $D(^%ZOSF("VOL")) S %ZISVT=IOS D VTLKUP^%ZIS S IOS=+%E
"RTN","ZISC",56,0)
 E  S IOS=+$O(^%ZIS(1,"C",IOS,0))
"RTN","ZISC",57,0)
 Q:IOS>0!(IO(0)']"")
"RTN","ZISC",58,0)
 S %ZISVT=IO(0) D VIRTUAL^%ZIS
"RTN","ZISC",59,0)
 I $D(%ZISVT) S %H=%E I %ZISVT]"",%H>0,$D(^%ZIS(1,%H,0)),$D(^("TYPE")),^("TYPE")="VTRM" K %ZISVT S IOS=%H
"RTN","ZISC",60,0)
 Q
"RTN","ZISC",61,0)
 ;
"RTN","ZISC",62,0)
RESETP I IO]"" K ^XUTL("ZISPARAM",IO) Q
"RTN","ZISC",63,0)
 Q
"RTN","ZISC",64,0)
RM N X S X=+IOM X ^%ZOSF("RM") Q
"RTN","ZISC",65,0)
RES ;Close resource device.
"RTN","ZISC",66,0)
 Q:'$D(IO(1,IO))&'$D(^%ZISL(3.54,"AJ",$J))
"RTN","ZISC",67,0)
 S %ZISJOB=$J L +^%ZISL(3.54):1000
"RTN","ZISC",68,0)
 I '$T S X=1/0 ; forces error if Lock fails
"RTN","ZISC",69,0)
 ;
"RTN","ZISC",70,0)
RES1 G RQ:'$D(IOS),RQ:'$D(^%ZIS(1,+IOS,1)) S %ZISRL=+$P(^(1),"^",10),%ZISRL=$S(%ZISRL:%ZISRL,1:1)
"RTN","ZISC",71,0)
 S %X=$O(^%ZISL(3.54,"B",IO,0)) G RQ:'%X
"RTN","ZISC",72,0)
 G RQ:'$D(^%ZISL(3.54,+%X,0)) S %ZISD0=+%X,%ZISY0=^(0)
"RTN","ZISC",73,0)
 S %X=$O(^%ZISL(3.54,"AJ",%ZISJOB,%ZISD0,0)) S %ZISD1=%X G RQ:'%X K ^(%X)
"RTN","ZISC",74,0)
 S %Y=$S($D(^%ZISL(3.54,%ZISD0,1,+%ZISD1,0)):^(0),1:"") G RQ:$P(%Y,"^",3)'=$J K ^(0),^%ZISL(3.54,%ZISD0,1,"B",+%ZISD1,+%ZISD1)
"RTN","ZISC",75,0)
 S %X=$P(%ZISY0,"^",2),%X=$S((%X+1)'>(%ZISRL):%X+1,1:%ZISRL),$P(%ZISY0,"^",2)=%X,^%ZISL(3.54,%ZISD0,0)=%ZISY0
"RTN","ZISC",76,0)
 I '$D(^%ZISL(3.54,%ZISD0,1,0)) S ^(0)="^3.542A^^" G RQ
"RTN","ZISC",77,0)
 S %Y=^%ZISL(3.54,%ZISD0,1,0),%X=$P(%Y,"^",4),$P(%Y,"^",3,4)="^"_$S(%X>2:(%X-1),1:1),^(0)=%Y
"RTN","ZISC",78,0)
RQ K IO(1,IO),%X,%Y,%ZISD0,%ZISD1,%ZISJOB,%ZISRES,%ZISRL,%ZISY0,%ZTRTN,ZTSAVE,ZTIO L -^%ZISL(3.54) Q
"RTN","ZISC",79,0)
DQCRES ;Tasked entry point to close resource device.
"RTN","ZISC",80,0)
 L +^%ZISL(3.54) S IO=%ZISRES G RES1
"RTN","ZISC",81,0)
CHKDVOPN ;CHECK DEVICES THAT ARE OPENED.
"RTN","ZISC",82,0)
 ;NEEDS TO BE REVIEWED BEFORE DISTRIBUTION
"RTN","ZISC",83,0)
 ;THE CODE BELOW IS SPECIFIC TO VAX DSM.
"RTN","ZISC",84,0)
 N X,Y
"RTN","ZISC",85,0)
 S X=$J D DEVOPN
"RTN","ZISC",86,0)
 S Y=","_Y,X=","_IO_","
"RTN","ZISC",87,0)
 I Y'[X K IO(1,IO)
"RTN","ZISC",88,0)
 Q
"RTN","ZISC",89,0)
DEVOPN ;
"RTN","ZISC",90,0)
 N %FST,X1,X2,X3,X4,X5,X6,X7,X8,X9
"RTN","ZISC",91,0)
 S %FST=1,Y=""
"RTN","ZISC",92,0)
 F  D  Q:%DONE=0
"RTN","ZISC",93,0)
 .S %DONE=$ZC(%OPNLIST,%FST,.X1,.X2,.X3,.X4,.X5,.X6,.X7,.X8,.X9)
"RTN","ZISC",94,0)
 .Q:%DONE=0
"RTN","ZISC",95,0)
 .S %FST=0,Y=Y_X1_","
"RTN","ZISC",96,0)
 Q
"RTN","ZISC",97,0)
FF() ;Issue form feed
"RTN","ZISC",98,0)
 I $E(IOST,1,2)'["C-",$D(IO(1,IO)),$G(IOT)="TRM"!($G(IOT)="SPL"),'$D(IO("T"))&$Y&'$D(IONOFF)&'$D(IO(1,IO,"NOFF")) Q 1
"RTN","ZISC",99,0)
 Q 0
"RTN","ZISC",100,0)
 ;I $E(IOST,1,2)'["C-",$D(IO(1,IO)),$G(IOT)="TRM"!($G(IOT)="SPL") W:'$D(IO("T"))&$Y&'$D(IONOFF)&'$D(IO(1,IO,"NOFF")) @IOF ;form feed issued at close
"RTN","ZISC",101,0)
 ;
"RTN","ZISC",102,0)
CLOSPP() ;Close printer port
"RTN","ZISC",103,0)
 I $D(IO("S")),$D(^%ZIS(2,+IO("S"),11))&$D(IO(1,IO)) Q 1
"RTN","ZISC",104,0)
 Q 0
"RTN","ZISC",105,0)
 ;I $D(IO("S")) D:$D(^%ZIS(2,+IO("S"),11))&$D(IO(1,IO)) X11^ZISX:'$D(IO("T")) K IO("S")
"RTN","ZISHMSM")
0^14^B30589712
"RTN","ZISHMSM",1,0)
%ZISH ;IHS\PR,SFISC/AC - Host File Control for MSM ;09/23/96  11:22
"RTN","ZISHMSM",2,0)
 ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"RTN","ZISHMSM",3,0)
 ;
"RTN","ZISHMSM",4,0)
OPEN(X1,X2,X3,X4,X5)    ;SR. Open Host File
"RTN","ZISHMSM",5,0)
 ;X1=handle name
"RTN","ZISHMSM",6,0)
 ;X2=directory name \dir\
"RTN","ZISHMSM",7,0)
 ;X3=file name
"RTN","ZISHMSM",8,0)
 ;X4=file access mode e.g.: W for write, R for read, A for append.
"RTN","ZISHMSM",9,0)
 ;X5=Max record size for a new file
"RTN","ZISHMSM",10,0)
 N %,%1,%2,%I,%T,%ZA,%ZISHIO
"RTN","ZISHMSM",11,0)
 S %I=$I,%T=0,POP=0 M %ZISHIO=IO
"RTN","ZISHMSM",12,0)
 F %=51:1:54 O %::0 I $T S %T=% Q
"RTN","ZISHMSM",13,0)
 I '%T U:%I]"" %I S POP=1 Q
"RTN","ZISHMSM",14,0)
 S %1=$$MODE^%ZISF(X2_X3,X4)
"RTN","ZISHMSM",15,0)
 S %2=%_":"_%1
"RTN","ZISHMSM",16,0)
 U @%2 S %ZA=$ZA
"RTN","ZISHMSM",17,0)
 I %ZA=-1 U:%I]"" %I C % S POP=1 Q
"RTN","ZISHMSM",18,0)
 S IO=%,IO(1,IO)=""
"RTN","ZISHMSM",19,0)
 I $G(X1)]"" D SAVDEV^%ZISUTL(X1)
"RTN","ZISHMSM",20,0)
 Q
"RTN","ZISHMSM",21,0)
 ;
"RTN","ZISHMSM",22,0)
CLOSE(X) ;SR. Close HFS device not opened by %ZIS.
"RTN","ZISHMSM",23,0)
 ;X=HANDLE NAME
"RTN","ZISHMSM",24,0)
 ;IO=Device
"RTN","ZISHMSM",25,0)
 N %
"RTN","ZISHMSM",26,0)
 I $G(IO)]"" C IO K IO(1,IO)
"RTN","ZISHMSM",27,0)
 I $G(X)]"" D RMDEV^%ZISUTL(X)
"RTN","ZISHMSM",28,0)
 D HOME^%ZIS
"RTN","ZISHMSM",29,0)
 Q
"RTN","ZISHMSM",30,0)
 ;
"RTN","ZISHMSM",31,0)
OPENERR ;
"RTN","ZISHMSM",32,0)
 Q 0
"RTN","ZISHMSM",33,0)
 ;
"RTN","ZISHMSM",34,0)
DEL(%ZISHX1,%ZISHX2) ;SR. Del fl(s)
"RTN","ZISHMSM",35,0)
 ;S Y=$$DEL^ZOSHMSM("\dir\","fl")
"RTN","ZISHMSM",36,0)
 ;                         ,.array)
"RTN","ZISHMSM",37,0)
 ;Changed X2 to a $NAME string
"RTN","ZISHMSM",38,0)
 N %,%ZISH
"RTN","ZISHMSM",39,0)
 N ZOSHDA,ZOSHF,ZOSHX,ZOSHQ,ZOSHDF,ZOSHC
"RTN","ZISHMSM",40,0)
 S %ZISHX1=$TR(%ZISHX1,"/","\")
"RTN","ZISHMSM",41,0)
 ;Get fls to act on
"RTN","ZISHMSM",42,0)
 ;No '*' allowed
"RTN","ZISHMSM",43,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:'%ZISH  I %ZISH["*" S ZOSHQ=1 Q
"RTN","ZISHMSM",44,0)
 I $D(ZOSHQ) Q 0
"RTN","ZISHMSM",45,0)
 S %ZISH="" F   S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHMSM",46,0)
 .;S ZOSHC="rm "_X1_%
"RTN","ZISHMSM",47,0)
 .S ZOSHC=$ZOS(2,%ZISHX1_%ZISH)
"RTN","ZISHMSM",48,0)
 .;D JW
"RTN","ZISHMSM",49,0)
 Q 1
"RTN","ZISHMSM",50,0)
 ;
"RTN","ZISHMSM",51,0)
LIST(%ZISHX1,%ZISHX2,%ZISHX3) ;SR. Create a local array holding fl names
"RTN","ZISHMSM",52,0)
 ;S Y=$$LIST^ZOSHDOS("\dir\","fl",".return array")
"RTN","ZISHMSM",53,0)
 ;                           "fl*",
"RTN","ZISHMSM",54,0)
 ;                           .array,
"RTN","ZISHMSM",55,0)
 ;
"RTN","ZISHMSM",56,0)
 ;Change X2 = $NAME OF CLOSE ROOT
"RTN","ZISHMSM",57,0)
 ;Change X3 = $NAME OF CLOSE ROOT
"RTN","ZISHMSM",58,0)
 ;
"RTN","ZISHMSM",59,0)
 N %ZISH,%ZISHN,%ZISHX,%ZISHY
"RTN","ZISHMSM",60,0)
 S %ZISHN=0
"RTN","ZISHMSM",61,0)
 ;Get fls to act on
"RTN","ZISHMSM",62,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHMSM",63,0)
 .S %ZISHX=%ZISHX1_%ZISH
"RTN","ZISHMSM",64,0)
 .F %ZISHN=1:1 D  Q:$P(%ZISHY,"^")=""!(%ZISHY<0)  S @%ZISHX3@($P(%ZISHY,"^"))="" ;S @%ZISHX3@(%ZISHN)=$P(%ZISHY,"^")
"RTN","ZISHMSM",65,0)
 ..I %ZISHN>1 S %ZISHY=$ZOS(13,%ZISHY)
"RTN","ZISHMSM",66,0)
 ..E  S %ZISHY=$ZOS(12,%ZISHX,0)
"RTN","ZISHMSM",67,0)
 Q $O(@%ZISHX3@(""))]""
"RTN","ZISHMSM",68,0)
 ;
"RTN","ZISHMSM",69,0)
MV(X1,X2,Y1,Y2) ;SR. Rename a fl
"RTN","ZISHMSM",70,0)
 ;S Y=$$MV^ZOSHDOS("\dir\","fl","\dir\","fl")
"RTN","ZISHMSM",71,0)
 ;
"RTN","ZISHMSM",72,0)
 N %ZB,%ZC,%ZISHDV1,%ZISHDV2,%ZISHFN1,%ZISHFN2,%ZISHPCT,%ZISHSIZ,%ZISHX,X,Y
"RTN","ZISHMSM",73,0)
 S X=X1_X2
"RTN","ZISHMSM",74,0)
 S Y=Y1_Y2
"RTN","ZISHMSM",75,0)
 I X1=Y1 Q $ZOS(3,X,Y)'<0
"RTN","ZISHMSM",76,0)
 ;
"RTN","ZISHMSM",77,0)
 S %ZISHDV1=51,%ZISHDV2=52,%ZISHFN1=X,%ZISHFN2=Y
"RTN","ZISHMSM",78,0)
 O %ZISHDV1:(%ZISHFN1)
"RTN","ZISHMSM",79,0)
 O %ZISHDV2:(%ZISHFN2:"W")
"RTN","ZISHMSM",80,0)
 U %ZISHDV1:(::0:2) S %ZISHSIZ=$ZB U %ZISHDV1:(::0:0) S (%ZISHPCT,%ZB,%ZC)=0
"RTN","ZISHMSM",81,0)
 D SLOWCOPY S %ZISHX(X2)="" S Y=$$DEL^%ZISH(X1,$NA(%ZISHX))
"RTN","ZISHMSM",82,0)
 Q 1
"RTN","ZISHMSM",83,0)
 ;
"RTN","ZISHMSM",84,0)
SLOWCOPY ; Copy without view buffer
"RTN","ZISHMSM",85,0)
 N X,Y
"RTN","ZISHMSM",86,0)
 O %ZISHDV1:(%ZISHFN1:"R"::::""),%ZISHDV2:(%ZISHFN2:"W"::::"")
"RTN","ZISHMSM",87,0)
 FOR  DO  Q:%ZC!(%ZB=%ZISHSIZ)
"RTN","ZISHMSM",88,0)
 . U %ZISHDV1 R X#1024 Q:$L(X)=0
"RTN","ZISHMSM",89,0)
 . U %ZISHDV2 W X S %ZB=$ZB,%ZC=$ZC Q:%ZC
"RTN","ZISHMSM",90,0)
 . I %ZB=%ZISHSIZ C %ZISHDV2 S %ZC=($ZA=-1)
"RTN","ZISHMSM",91,0)
 . S X=%ZB/%ZISHSIZ*100\1 ; %done
"RTN","ZISHMSM",92,0)
 . Q:X=%ZISHPCT  S %ZISHPCT=X
"RTN","ZISHMSM",93,0)
 . Q  ;U 0 W $J(%ZISHPCT,3),*13
"RTN","ZISHMSM",94,0)
 Q
"RTN","ZISHMSM",95,0)
 ;
"RTN","ZISHMSM",96,0)
PWD() ;SR. Print working directory
"RTN","ZISHMSM",97,0)
 N Y
"RTN","ZISHMSM",98,0)
 S Y=$ZOS(11,$ZOS(14))
"RTN","ZISHMSM",99,0)
 Q:Y<0 ""
"RTN","ZISHMSM",100,0)
 S Y=Y_$S($E(Y,$L(Y))'="\":"\",1:"")
"RTN","ZISHMSM",101,0)
 Q $ZOS(14)_":"_Y
"RTN","ZISHMSM",102,0)
 ;
"RTN","ZISHMSM",103,0)
JW ;Call dos $ZOS
"RTN","ZISHMSM",104,0)
 S ZOSHX=$ZOS(ZOSHNUM,ZOSHC)
"RTN","ZISHMSM",105,0)
 Q
"RTN","ZISHMSM",106,0)
DF(X) ;Dir frmt
"RTN","ZISHMSM",107,0)
 Q:X=""
"RTN","ZISHMSM",108,0)
 S X=$TR(X,"/","\")
"RTN","ZISHMSM",109,0)
 I $E(X,$L(X))'="\" S X=X_"\"
"RTN","ZISHMSM",110,0)
 Q
"RTN","ZISHMSM",111,0)
FL(X) ;Fl len
"RTN","ZISHMSM",112,0)
 N ZOSHP1,ZOSHP2
"RTN","ZISHMSM",113,0)
 S ZOSHP1=$P(X,"."),ZOSHP2=$P(X,".",2)
"RTN","ZISHMSM",114,0)
 I $L(ZOSHP1)>8 S X=4 Q
"RTN","ZISHMSM",115,0)
 I $L(ZOSHP2)>3 S X=4 Q
"RTN","ZISHMSM",116,0)
 Q
"RTN","ZISHMSM",117,0)
READNXT(REC) ;Read any sized record into array.
"RTN","ZISHMSM",118,0)
 N T,I,X,LB
"RTN","ZISHMSM",119,0)
 U IO S LB=$ZB R REC#255 S %ZA=$ZA,%ZB=$ZB,%ZC=$ZC,%ZL=%ZA Q:$$EOF(%ZC)
"RTN","ZISHMSM",120,0)
 Q:%ZA<255
"RTN","ZISHMSM",121,0)
 F I=1:1 S LB=LB+%ZA Q:LB<%ZB  R X#255 S %ZA=$ZA,%ZB=$ZB,%ZC=$ZC Q:$$EOF(%ZC)!('$L(X))  S REC(I)=X
"RTN","ZISHMSM",122,0)
 Q
"RTN","ZISHMSM",123,0)
STATUS() ;SR. Return EOF status
"RTN","ZISHMSM",124,0)
 U $I
"RTN","ZISHMSM",125,0)
 Q $$EOF($ZA)
"RTN","ZISHMSM",126,0)
 ;
"RTN","ZISHMSM",127,0)
EOF(X) ;Eof flag, pass in $ZC
"RTN","ZISHMSM",128,0)
 Q (X=-1)
"RTN","ZISHMSM",129,0)
 ;
"RTN","ZISHMSM",130,0)
READREC(X) ;Read record from host file.
"RTN","ZISHMSM",131,0)
 N Y
"RTN","ZISHMSM",132,0)
 U IO R X S Y=$ZC
"RTN","ZISHMSM",133,0)
 U $P
"RTN","ZISHMSM",134,0)
 Q Y
"RTN","ZISHMSM",135,0)
MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref.
"RTN","ZISHMSM",136,0)
 ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB
"RTN","ZISHMSM",137,0)
 N I,F,MX
"RTN","ZISHMSM",138,0)
 S OVF=$G(OVF,"%ZISHOF")
"RTN","ZISHMSM",139,0)
 S %ZISHI=$QS(HF,IX),MX=$QL(HF) ;
"RTN","ZISHMSM",140,0)
 S F=$NA(@HF,IX-1) ;Get first part
"RTN","ZISHMSM",141,0)
 I IX=1 S %ZISHF=F_"(%ZISHI" ;Build root, IX=1
"RTN","ZISHMSM",142,0)
 I IX>1 S %ZISHF=$E(F,1,$L(F)-1)_",%ZISHI" ;Build root
"RTN","ZISHMSM",143,0)
 S %ZISHO=%ZISHF_","_OVF_",%OVFCNT)" ;Make overflow
"RTN","ZISHMSM",144,0)
 F I=IX+1:1:MX S %ZISHF=%ZISHF_",%ZISUB("_I_")",%ZISUB(I)=$QS(HF,I)
"RTN","ZISHMSM",145,0)
 S %ZISHF=%ZISHF_")"
"RTN","ZISHMSM",146,0)
 Q
"RTN","ZISHMSM",147,0)
FTG(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,%ZISHX5) ;SR. Unload contents of host file into global
"RTN","ZISHMSM",148,0)
 ;p1=hostf file directory 
"RTN","ZISHMSM",149,0)
 ;p2=host file name
"RTN","ZISHMSM",150,0)
 ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT
"RTN","ZISHMSM",151,0)
 ;p4=INCREMENT SUBSCRIPT
"RTN","ZISHMSM",152,0)
 ;p5=Overflow subscript, defaults to "OVF"
"RTN","ZISHMSM",153,0)
 N %ZA,%ZB,%ZC,%ZL,X,%OVFCNT,%CONT
"RTN","ZISHMSM",154,0)
 N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHOF,%ZISHOX,%ZISHS,%ZISHX,%ZISHY,POP,%ZISUB
"RTN","ZISHMSM",155,0)
 S %ZISHOF=$G(%ZISHX5,"OVF")
"RTN","ZISHMSM",156,0)
 D MAKEREF(%ZISHX3,%ZISHX4,"%ZISHOF")
"RTN","ZISHMSM",157,0)
 D OPEN^%ZISH(,%ZISHX1,%ZISHX2,"R")
"RTN","ZISHMSM",158,0)
 I POP Q 0
"RTN","ZISHMSM",159,0)
 S X="ERREOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHMSM",160,0)
 U IO F  K %XX D READNXT(.%XX) Q:$$EOF(%ZC)  D
"RTN","ZISHMSM",161,0)
 . S @%ZISHF=%XX
"RTN","ZISHMSM",162,0)
 . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)
"RTN","ZISHMSM",163,0)
 . S %ZISHI=%ZISHI+1
"RTN","ZISHMSM",164,0)
 . Q
"RTN","ZISHMSM",165,0)
 D CLOSE() ;Normal exit
"RTN","ZISHMSM",166,0)
 Q 1
"RTN","ZISHMSM",167,0)
 ;
"RTN","ZISHMSM",168,0)
ERREOF D CLOSE() ;Error close and exit
"RTN","ZISHMSM",169,0)
 Q 0
"RTN","ZISHMSM",170,0)
 ;
"RTN","ZISHMSM",171,0)
GTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4) ;SR. Load contents of global to host file.
"RTN","ZISHMSM",172,0)
 ;Previously name LOAD
"RTN","ZISHMSM",173,0)
 ;p1=$NAME of global reference
"RTN","ZISHMSM",174,0)
 ;p2=incrementing subscript
"RTN","ZISHMSM",175,0)
 ;p3=host file directory
"RTN","ZISHMSM",176,0)
 ;p4=host file name
"RTN","ZISHMSM",177,0)
 N %ZISHY,%ZISHOX
"RTN","ZISHMSM",178,0)
 S %ZISHY=$$MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,"W")
"RTN","ZISHMSM",179,0)
 Q %ZISHY
"RTN","ZISHMSM",180,0)
 ;
"RTN","ZISHMSM",181,0)
GATF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4) ;SR. Append to host file.
"RTN","ZISHMSM",182,0)
 ;
"RTN","ZISHMSM",183,0)
 ;p1=$NAME of global reference
"RTN","ZISHMSM",184,0)
 ;p2=incrementing subscript
"RTN","ZISHMSM",185,0)
 ;p3=host file directory
"RTN","ZISHMSM",186,0)
 ;p4=host file name
"RTN","ZISHMSM",187,0)
 N %ZISHY
"RTN","ZISHMSM",188,0)
 S %ZISHY=$$MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,"A")
"RTN","ZISHMSM",189,0)
 Q %ZISHY
"RTN","ZISHMSM",190,0)
MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,%ZISHX5) ;
"RTN","ZISHMSM",191,0)
 ;p1=$NAME of global reference
"RTN","ZISHMSM",192,0)
 ;p2=incrementing subscript
"RTN","ZISHMSM",193,0)
 ;p3=host file directory
"RTN","ZISHMSM",194,0)
 ;p4=host file name
"RTN","ZISHMSM",195,0)
 N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHS,%ZISHOX,IO,%ZISHX,Y
"RTN","ZISHMSM",196,0)
 D MAKEREF(%ZISHX1,%ZISHX2)
"RTN","ZISHMSM",197,0)
 D OPEN^%ZISH(,%ZISHX3,%ZISHX4,%ZISHX5)
"RTN","ZISHMSM",198,0)
 I POP Q 0
"RTN","ZISHMSM",199,0)
 N X
"RTN","ZISHMSM",200,0)
 S X="ERREOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHMSM",201,0)
 F  Q:'($D(@%ZISHF)#2)  S %ZISHX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZISHX,!
"RTN","ZISHMSM",202,0)
 D CLOSE()
"RTN","ZISHMSM",203,0)
 Q 1
"RTN","ZISHMSM",204,0)
 ;
"RTN","ZISHVXD")
0^13^B40180333
"RTN","ZISHVXD",1,0)
ZISHVXD ;IHS/PR - Host file Control ;10/4/96  11:33
"RTN","ZISHVXD",2,0)
 ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"RTN","ZISHVXD",3,0)
 ;
"RTN","ZISHVXD",4,0)
OPENERR ;
"RTN","ZISHVXD",5,0)
 Q 0
"RTN","ZISHVXD",6,0)
 ;
"RTN","ZISHVXD",7,0)
OPEN(X1,X2,X3,X4,X5) ;SR. Open file
"RTN","ZISHVXD",8,0)
 ;X1=handle name
"RTN","ZISHVXD",9,0)
 ;X2=directory
"RTN","ZISHVXD",10,0)
 ;X3=filename
"RTN","ZISHVXD",11,0)
 ;X4=access mode
"RTN","ZISHVXD",12,0)
 ;X5=new file max record size
"RTN","ZISHVXD",13,0)
 ;
"RTN","ZISHVXD",14,0)
 N %,%1,%2,%IO,%P,%T,X,Y
"RTN","ZISHVXD",15,0)
 S X="OPNERR^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",16,0)
 S Y=$S(X4="A":"",X4="R":"READONLY",X4="W":"NEWVERSION",1:"")
"RTN","ZISHVXD",17,0)
 ;S %1="" I X4["R" S %1=$&ZLIB^%GETFILE(X2_X3,"MRS")
"RTN","ZISHVXD",18,0)
 S %IO=X2_X3 ;S %IO(X2_X3)="",%IO=$P($P($NA(%IO(X2_X3)),"(",2),")")
"RTN","ZISHVXD",19,0)
 S %IO("OPEN")="%IO:"_Y_$S($G(X5)&(X4="W"):":RECORDSIZE="_+X5,1:"")_":3"
"RTN","ZISHVXD",20,0)
 O @%IO("OPEN") S %T=$T ;O @(""""_X2_X3_""":"_Y_":0") S %T=$T
"RTN","ZISHVXD",21,0)
 S %=X2_X3
"RTN","ZISHVXD",22,0)
 I '%T S POP=1 Q
"RTN","ZISHVXD",23,0)
 S IO=%IO,IO(1,IO)=""
"RTN","ZISHVXD",24,0)
 I $G(X1)]"" D SAVDEV^%ZISUTL(X1)
"RTN","ZISHVXD",25,0)
 U IO:NOTRAP U $P ;Enable use of $ZA to test EOF condition.
"RTN","ZISHVXD",26,0)
 S POP=0
"RTN","ZISHVXD",27,0)
 Q
"RTN","ZISHVXD",28,0)
OPNERR ;error on open
"RTN","ZISHVXD",29,0)
 S POP=1
"RTN","ZISHVXD",30,0)
 U:$G(%P)]"" %P
"RTN","ZISHVXD",31,0)
 Q
"RTN","ZISHVXD",32,0)
CLOSE(X) ;SR. Close HFS device not opened by %ZIS.
"RTN","ZISHVXD",33,0)
 ;X1=Handle name
"RTN","ZISHVXD",34,0)
 I $G(X)]"" C IO K IO(1,IO) D RMDEV^%ZISUTL(X),HOME^%ZIS Q
"RTN","ZISHVXD",35,0)
 C IO K IO(1,IO) D HOME^%ZIS
"RTN","ZISHVXD",36,0)
 Q
"RTN","ZISHVXD",37,0)
DEL(%ZISHX1,%ZISHX2) ;SR. Del fl(s)
"RTN","ZISHVXD",38,0)
 ;S Y=$$DEL^ZOSHMSM("/dir/",namevalue)
"RTN","ZISHVXD",39,0)
 N %ZISH,%ZISHLGR,%ZISHXIT,X
"RTN","ZISHVXD",40,0)
 ;Get fls to act on
"RTN","ZISHVXD",41,0)
 ;No '*' allowed
"RTN","ZISHVXD",42,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:'%ZISH  I %ZISH["*" S %ZISHXIT=1 Q
"RTN","ZISHVXD",43,0)
 I $D(%ZISHXIT) Q 0
"RTN","ZISHVXD",44,0)
 S X="DELERR^%ZISH",@^%ZOSF("TRAP") ;need to evaluate this call
"RTN","ZISHVXD",45,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:%ZISH=""  S %ZISHX=%ZISHX1_%ZISH D
"RTN","ZISHVXD",46,0)
 .O %ZISHX:READONLY:0 I  C %ZISHX:DELETE
"RTN","ZISHVXD",47,0)
 Q 1
"RTN","ZISHVXD",48,0)
DELERR ;TRAP READ/DELETE ERROR
"RTN","ZISHVXD",49,0)
 I $G(%ZISHLGR)]"",$D(@%ZISHLGR)
"RTN","ZISHVXD",50,0)
 Q 0
"RTN","ZISHVXD",51,0)
LIST(%ZISHX1,%ZISHX2,%ZISHX3) ;SR. Set local array holding fl names
"RTN","ZISHVXD",52,0)
 ;S Y=$$LIST^ZOSHMSM("/dir/","list_root","return_root")
"RTN","ZISHVXD",53,0)
 ;list_root can have XX("A*"), XX("test.com")...
"RTN","ZISHVXD",54,0)
 ;Both arrays passed as closed roots.
"RTN","ZISHVXD",55,0)
 ;--------------------------------------
"RTN","ZISHVXD",56,0)
 N %IO,%X,%ZISH,%ZISH1,%ZISHIO,%ZISHX,POP,X,ZISHAUTO,ZISHTMP
"RTN","ZISHVXD",57,0)
 M %ZISHIO=IO N $ETRAP S $ETRAP=""
"RTN","ZISHVXD",58,0)
 S %IO=$I,ZISHAUTO="ZISH"_$J_".TMPA",ZISHTMP="ZISH"_$J_".TMPB"
"RTN","ZISHVXD",59,0)
 S X="SPAWNERR^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",60,0)
 ;Init ZISHAUTO, ZISHTMP by deleteing them
"RTN","ZISHVXD",61,0)
 ;O ZISHAUTO::0 I  C ZISHAUTO:DELETE
"RTN","ZISHVXD",62,0)
 ;O ZISHTMP::0 I  C ZISHTMP:DELETE
"RTN","ZISHVXD",63,0)
 I $ZSEARCH(ZISHAUTO)]"" S Y=$&ZLIB.%SPAWN("DEL "_ZISHAUTO_";*")
"RTN","ZISHVXD",64,0)
 I $ZSEARCH(ZISHTMP)]"" S Y=$&ZLIB.%SPAWN("DEL "_ZISHTMP_";*")
"RTN","ZISHVXD",65,0)
 ;Get fls to act on
"RTN","ZISHVXD",66,0)
 ;Append listing to ZISHAUTO
"RTN","ZISHVXD",67,0)
 S %ZISH1=0,%ZISH=""
"RTN","ZISHVXD",68,0)
 F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:%ZISH=""  S Y=$$LIST1(%ZISHX1_%ZISH)
"RTN","ZISHVXD",69,0)
 ;I $ZSEARCH(ZISHTMP)]"" S Y=$&ZLIB.%SPAWN("DEL "_ZISHTMP_";*")
"RTN","ZISHVXD",70,0)
 ;Open ZISHAUTO.$J to read.
"RTN","ZISHVXD",71,0)
 D OPEN(,"",ZISHAUTO,"R") I POP Q 0
"RTN","ZISHVXD",72,0)
 S X="LSTEOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",73,0)
 U ZISHAUTO:NOTRAP R %ZISHX,%ZISHX,%ZISHX
"RTN","ZISHVXD",74,0)
 I $ZA=-1 Q
"RTN","ZISHVXD",75,0)
 F  R %ZISHX G LSTEOF:$ZA=-1 I %ZISHX]"" S %X=$P(%ZISHX,$C(32)) D
"RTN","ZISHVXD",76,0)
 . I %ZISHX'["Total of",%ZISHX'?.E1".DIR;".N,%ZISHX'?1"Directory".E D
"RTN","ZISHVXD",77,0)
 . . I (%X[ZISHAUTO)!(%X[ZISHTMP) Q
"RTN","ZISHVXD",78,0)
 . . S @%ZISHX3@(%X)=""
"RTN","ZISHVXD",79,0)
LSTEOF C ZISHAUTO:DELETE
"RTN","ZISHVXD",80,0)
 U:$D(IO(1,%IO)) %IO
"RTN","ZISHVXD",81,0)
 K IO M IO=%ZISHIO
"RTN","ZISHVXD",82,0)
 I $ZSEARCH(ZISHTMP)]"" S Y=$&ZLIB.%SPAWN("DEL "_ZISHTMP_";*")
"RTN","ZISHVXD",83,0)
 I $ZSEARCH(ZISHAUTO)]"" S Y=$&ZLIB.%SPAWN("DEL "_ZISHAUTO_";*")
"RTN","ZISHVXD",84,0)
 Q ($Q(@%ZISHX3)]"")
"RTN","ZISHVXD",85,0)
 ;
"RTN","ZISHVXD",86,0)
LIST1(%ZISHX) ;Get one part of the list
"RTN","ZISHVXD",87,0)
 S $ZT="LSTERR^%ZISH"
"RTN","ZISHVXD",88,0)
 I %ZISH1 D
"RTN","ZISHVXD",89,0)
 . S Y=$&ZLIB.%SPAWN("DIR/COL=1 "_%ZISHX,,ZISHTMP)
"RTN","ZISHVXD",90,0)
 . I Y S Y=$&ZLIB.%SPAWN("APPEND "_ZISHTMP_" "_ZISHAUTO)
"RTN","ZISHVXD",91,0)
 I '%ZISH1 S Y=$&ZLIB.%SPAWN("DIR/COL=1 "_%ZISHX,,ZISHAUTO),%ZISH1=1
"RTN","ZISHVXD",92,0)
 Q 1
"RTN","ZISHVXD",93,0)
LSTERR ;Error in list
"RTN","ZISHVXD",94,0)
 I $ZSEARCH(ZISHTMP)]"" S Y=$&ZLIB.%SPAWN("DEL "_ZISHTMP_";*")
"RTN","ZISHVXD",95,0)
 Q 0
"RTN","ZISHVXD",96,0)
 ;
"RTN","ZISHVXD",97,0)
SPAWNERR ;TRAP ERROR OF SPAWN
"RTN","ZISHVXD",98,0)
 O ZISHAUTO:READONLY:1
"RTN","ZISHVXD",99,0)
 I $T C ZISHAUTO:DELETE
"RTN","ZISHVXD",100,0)
 Q 0
"RTN","ZISHVXD",101,0)
 ;
"RTN","ZISHVXD",102,0)
MV(X1,X2,X3,X4) ;SR. Rename a fl
"RTN","ZISHVXD",103,0)
 ;S Y=$$MV^ZOSHMSM("/dir/","fl","/dir/","fl")
"RTN","ZISHVXD",104,0)
 N X,ZISHAUTO
"RTN","ZISHVXD",105,0)
 S ZISHAUTO="ZISH"_$J_".TMPA"
"RTN","ZISHVXD",106,0)
 S X="SPAWNERR^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",107,0)
 ;Pbv or qit
"RTN","ZISHVXD",108,0)
 I $O(X2(0))!$O(X4(0)) X "I $G(%ZISHLGR)]"""",$D(@%ZISHLGR)" Q 0
"RTN","ZISHVXD",109,0)
 I X1=X3 D
"RTN","ZISHVXD",110,0)
 .O @(""""_X1_X2_"""")
"RTN","ZISHVXD",111,0)
 .C @(""""_X1_X2_""":RENAME="_""""_X3_X4_"""")
"RTN","ZISHVXD",112,0)
 E  D
"RTN","ZISHVXD",113,0)
 .S Y=$&ZLIB.%SPAWN("COPY "_X1_X2_" "_X3_X4,,ZISHAUTO)
"RTN","ZISHVXD",114,0)
 .O ZISHAUTO:READONLY:1
"RTN","ZISHVXD",115,0)
 .I $T C ZISHAUTO:DELETE
"RTN","ZISHVXD",116,0)
 .S X=$&ZLIB.%PARSE(X1_X2)
"RTN","ZISHVXD",117,0)
 .S Y=$&ZLIB.%SPAWN("DEL "_X,,ZISHAUTO)
"RTN","ZISHVXD",118,0)
 .O ZISHAUTO:READONLY:1
"RTN","ZISHVXD",119,0)
 .I $T C ZISHAUTO:DELETE
"RTN","ZISHVXD",120,0)
 Q 1
"RTN","ZISHVXD",121,0)
PWD() ;SR. Print working directory
"RTN","ZISHVXD",122,0)
 N Y
"RTN","ZISHVXD",123,0)
 S Y=$&ZLIB.%PARSE("TMP.TMP",,,"DEVICE")_$&ZLIB.%DIRECTORY
"RTN","ZISHVXD",124,0)
 Q Y
"RTN","ZISHVXD",125,0)
JW ;msm extrinsic
"RTN","ZISHVXD",126,0)
 S ZOSHX=$&ZLIB.%SPAWN(ZOSHC)
"RTN","ZISHVXD",127,0)
 Q
"RTN","ZISHVXD",128,0)
 ;
"RTN","ZISHVXD",129,0)
STATUS() ;SR. Return EOF status
"RTN","ZISHVXD",130,0)
 U $I:NOTRAP
"RTN","ZISHVXD",131,0)
 Q $$EOF($ZA)
"RTN","ZISHVXD",132,0)
 ;
"RTN","ZISHVXD",133,0)
EOF(X) ;Eof flag, Pass in $ZA
"RTN","ZISHVXD",134,0)
 Q (X=-1)
"RTN","ZISHVXD",135,0)
QL(X) ;Qlfrs
"RTN","ZISHVXD",136,0)
 Q:X=""
"RTN","ZISHVXD",137,0)
 S:$E(X)'="-" X="-"_X
"RTN","ZISHVXD",138,0)
 Q
"RTN","ZISHVXD",139,0)
FL(X) ;Fl len
"RTN","ZISHVXD",140,0)
 N ZOSHP1,ZOSHP2
"RTN","ZISHVXD",141,0)
 S ZOSHP1=$P(X,"."),ZOSHP2=$P(X,".",2)
"RTN","ZISHVXD",142,0)
 I $L(ZOSHP1)>14 S X=4 Q
"RTN","ZISHVXD",143,0)
 I $L(ZOSHP2)>8 S X=4 Q
"RTN","ZISHVXD",144,0)
 Q
"RTN","ZISHVXD",145,0)
 ;
"RTN","ZISHVXD",146,0)
MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref.
"RTN","ZISHVXD",147,0)
 ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB
"RTN","ZISHVXD",148,0)
 N I,F,MX
"RTN","ZISHVXD",149,0)
 S OVF=$G(OVF,"%ZISHOF")
"RTN","ZISHVXD",150,0)
 S %ZISHI=$QS(HF,IX),MX=$QL(HF) ;
"RTN","ZISHVXD",151,0)
 S F=$NA(@HF,IX-1) ;Get first part
"RTN","ZISHVXD",152,0)
 I IX=1 S %ZISHF=F_"(%ZISHI" ;Build root, IX=1
"RTN","ZISHVXD",153,0)
 I IX>1 S %ZISHF=$E(F,1,$L(F)-1)_",%ZISHI" ;Build root
"RTN","ZISHVXD",154,0)
 S %ZISHO=%ZISHF_","_OVF_",%OVFCNT)" ;Make overflow
"RTN","ZISHVXD",155,0)
 F I=IX+1:1:MX S %ZISHF=%ZISHF_",%ZISUB("_I_")",%ZISUB(I)=$QS(HF,I)
"RTN","ZISHVXD",156,0)
 S %ZISHF=%ZISHF_")"
"RTN","ZISHVXD",157,0)
 Q
"RTN","ZISHVXD",158,0)
FTG(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,%ZISHX5) ;SR. Unload contents of host file into global
"RTN","ZISHVXD",159,0)
 ;p1=hostf file directory 
"RTN","ZISHVXD",160,0)
 ;p2=host file name
"RTN","ZISHVXD",161,0)
 ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT
"RTN","ZISHVXD",162,0)
 ;p4=INCREMENT SUBSCRIPT
"RTN","ZISHVXD",163,0)
 ;p5=Overflow subscript, defaults to "OVF"
"RTN","ZISHVXD",164,0)
 N %ZA,%ZB,%ZC,%ZL,X,%OVFCNT,%CONT
"RTN","ZISHVXD",165,0)
 N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHLGR,%ZISHOF,%ZISHOX,%ZISHS,%ZISHX,%ZISHY,POP,%ZISUB
"RTN","ZISHVXD",166,0)
 S %ZISHOF=$G(%ZISHX5,"OVF")
"RTN","ZISHVXD",167,0)
 D MAKEREF(%ZISHX3,%ZISHX4,"%ZISHOF")
"RTN","ZISHVXD",168,0)
 D OPEN^%ZISH(,$G(%ZISHX1),%ZISHX2,"R")
"RTN","ZISHVXD",169,0)
 I POP Q 0
"RTN","ZISHVXD",170,0)
 N $ETRAP S $ETRAP="",X="ERREOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",171,0)
 U IO F  K %XX D READNXT(.%XX) Q:$$EOF(%ZA)  D
"RTN","ZISHVXD",172,0)
 . S @%ZISHF=%XX
"RTN","ZISHVXD",173,0)
 . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)
"RTN","ZISHVXD",174,0)
 . S %ZISHI=%ZISHI+1
"RTN","ZISHVXD",175,0)
 . Q
"RTN","ZISHVXD",176,0)
 D CLOSE() ;Normal exit
"RTN","ZISHVXD",177,0)
 Q 1
"RTN","ZISHVXD",178,0)
 ;
"RTN","ZISHVXD",179,0)
ERREOF D CLOSE() ;Got error Reading file
"RTN","ZISHVXD",180,0)
 Q 0
"RTN","ZISHVXD",181,0)
 ;
"RTN","ZISHVXD",182,0)
READNXT(REC) ;
"RTN","ZISHVXD",183,0)
 N T,I,X
"RTN","ZISHVXD",184,0)
 U IO:NOTRAP R REC#255 S %ZA=$ZA,%ZB=$ZB,%ZL=%ZA Q:$$EOF(%ZA)
"RTN","ZISHVXD",185,0)
 F I=1:1:%ZL\255 R X#255 S %ZA=$ZA Q:$$EOF(%ZA)  S REC(I)=X
"RTN","ZISHVXD",186,0)
 Q
"RTN","ZISHVXD",187,0)
GTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4) ;SR. Load contents of global to host file.
"RTN","ZISHVXD",188,0)
 ;Previously name LOAD
"RTN","ZISHVXD",189,0)
 ;p1=$NAME of global reference
"RTN","ZISHVXD",190,0)
 ;p2=incrementing subscript
"RTN","ZISHVXD",191,0)
 ;p3=host file directory
"RTN","ZISHVXD",192,0)
 ;p4=host file name
"RTN","ZISHVXD",193,0)
 N %ZISHY,%ZISHLGR,%ZISHOX
"RTN","ZISHVXD",194,0)
 S %ZISHY=$$MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,"W")
"RTN","ZISHVXD",195,0)
 Q %ZISHY
"RTN","ZISHVXD",196,0)
 ;
"RTN","ZISHVXD",197,0)
GATF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4) ;SR. Append to host file.
"RTN","ZISHVXD",198,0)
 ;
"RTN","ZISHVXD",199,0)
 ;p1=$NAME of global reference
"RTN","ZISHVXD",200,0)
 ;p2=incrementing subscript
"RTN","ZISHVXD",201,0)
 ;p3=host file directory
"RTN","ZISHVXD",202,0)
 ;p4=host file name
"RTN","ZISHVXD",203,0)
 N %ZISHY
"RTN","ZISHVXD",204,0)
 S %ZISHY=$$MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,"A")
"RTN","ZISHVXD",205,0)
 Q %ZISHY
"RTN","ZISHVXD",206,0)
MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,%ZISHX5) ;
"RTN","ZISHVXD",207,0)
 ;p1=$NAME of global reference
"RTN","ZISHVXD",208,0)
 ;p2=incrementing subscript
"RTN","ZISHVXD",209,0)
 ;p3=host file directory
"RTN","ZISHVXD",210,0)
 ;p4=host file name
"RTN","ZISHVXD",211,0)
 N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHLGR,%ZISHS,%ZISHOX,IO,%ZISHX,Y
"RTN","ZISHVXD",212,0)
 D MAKEREF(%ZISHX1,%ZISHX2)
"RTN","ZISHVXD",213,0)
 D OPEN^%ZISH(,%ZISHX3,%ZISHX4,%ZISHX5)
"RTN","ZISHVXD",214,0)
 I POP Q 0
"RTN","ZISHVXD",215,0)
 N X
"RTN","ZISHVXD",216,0)
 N $ETRAP S $ETRAP="",X="ERREOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",217,0)
 F  Q:'($D(@%ZISHF)#2)  S %ZISHX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZISHX,!
"RTN","ZISHVXD",218,0)
 D CLOSE() ;Normal Exit
"RTN","ZISHVXD",219,0)
 Q 1
"RTN","ZISHVXD",220,0)
 ;
"RTN","ZISPL1")
0^21^B14292978
"RTN","ZISPL1",1,0)
ZISPL1 ;SF/RWF - %ZIS UTILITIES FOR SPOOLING ;10/31/96  14:47
"RTN","ZISPL1",2,0)
 ;;8.0;KERNEL;**23,36**;Jul 10, 1995
"RTN","ZISPL1",3,0)
 ;This is general code for managment of the spooler file from %ZIS.
"RTN","ZISPL1",4,0)
 Q
"RTN","ZISPL1",5,0)
 ;
"RTN","ZISPL1",6,0)
FILE ;Called by %ZIS4 to setup spool data file.
"RTN","ZISPL1",7,0)
 S %ZDA=$S($D(IO("SPOOL")):IO("SPOOL"),$D(^XUTL("XQ",$J,"SPOOL")):^("SPOOL"),1:0) Q:%ZDA'>0
"RTN","ZISPL1",8,0)
 I '$D(ZISPLAD),$D(^XUTL("XQ",$J,"ADSPL")) S ZISPLAD=^("ADSPL")
"RTN","ZISPL1",9,0)
 K ^XUTL("XQ",$J,"SPOOL"),^("ADSPL"),IO("SPOOL") S %ZS=$S($D(^XMB(3.51,%ZDA,0)):^(0),1:"") I %ZS']"" S %ZDA=-1 Q
"RTN","ZISPL1",10,0)
 I '$D(ZTSK) S ZTRTN="DQC^ZISPL1",ZTDESC="Background Spool Filer",ZTDTH=$H,ZTIO="",ZTSAVE("%ZDA")="" S:$D(ZISPLAD) ZTSAVE("ZISPLAD")="",ZTSAVE("%ZS")="" D ^%ZTLOAD K ZISPLAD,ZTSK S %ZDA=-1 Q
"RTN","ZISPL1",11,0)
 N X,Y K DD,DO S X=%ZDA,DIC="^XMBS(3.519,",DIC(0)="LZ",DLAYGO=3.519 D FILE^DICN S XS=+Y
"RTN","ZISPL1",12,0)
 K DD,DO,DLAYGO
"RTN","ZISPL1",13,0)
 S $P(^XMB(3.51,%ZDA,0),"^",3)="a",$P(^(0),"^",6)=DT,$P(^(0),"^",10)=XS,^XMB(3.51,"AM",XS,%ZDA)="" Q
"RTN","ZISPL1",14,0)
 ;
"RTN","ZISPL1",15,0)
CLOSE S ^XMBS(3.519,XS,2,0)="^^"_%_"^"_%,$P(^XMB(3.51,%ZDA,0),"^",2,3)="^r",$P(^(0),"^",9)=%
"RTN","ZISPL1",16,0)
 I $D(ZISPLAD) F %=0:0 S %=$O(^%ZIS(1,+ZISPLAD,"SPL",%)) Q:%'>0  D
"RTN","ZISPL1",17,0)
 .I $D(^%ZIS(1,+ZISPLAD,"SPL",%,0)) S %X=^(0) D
"RTN","ZISPL1",18,0)
 ..S ZISPLC=$S($P(%X,"^",2)]"":+$P(%X,"^",2),1:1),%X=$P(%X,"^")
"RTN","ZISPL1",19,0)
 ..I $D(^%ZIS(1,+%X,0)) K ZISDA2 S ZISPLDV=$P(^(0),"^"),DIE="^XMB(3.51,",DR="[XU-ZISPL1]",(ZISDA,DA)=%ZDA D ADSPL
"RTN","ZISPL1",20,0)
 K ^XMB(3.51,"C",%ZFN),XMZ,XMDUZ,%ZDA,%ZFN,% Q
"RTN","ZISPL1",21,0)
 ;
"RTN","ZISPL1",22,0)
DQC ;DQ the move from spool to mail message.
"RTN","ZISPL1",23,0)
 S IO("SPOOL")=%ZDA D CLOSE^%ZIS4 Q
"RTN","ZISPL1",24,0)
 ;
"RTN","ZISPL1",25,0)
ADSPL N %,ZTSK D ^DIE Q:'$D(ZISDA2)
"RTN","ZISPL1",26,0)
 S %X="^"_ZISPLC_"^^^^^"_ZISPLDV_";"_$P(%ZS,"^",8)_"^"_$H
"RTN","ZISPL1",27,0)
 ;
"RTN","ZISPL1",28,0)
QDSPL S ZISPLC=$P(%X,"^",2),ZTIO=$P(%X,"^",7),ZTDTH=$P(%X,"^",8),ZTRTN="DQP^ZISPL2",ZTDESC="Auto despool document"
"RTN","ZISPL1",29,0)
 I ZTIO]"",ZTDTH]"",ZISPLC S ZISDA=%ZDA,ZTSAVE("ZISDA")="",ZTSAVE("ZISDA2")="",ZTSAVE("ZISPLC")="" D ^%ZTLOAD K ZTSK
"RTN","ZISPL1",30,0)
 Q
"RTN","ZISPL1",31,0)
 ;
"RTN","ZISPL1",32,0)
NEWDOC ;Called by %ZIS4 to get or setup a spool document.
"RTN","ZISPL1",33,0)
 N DIC,X,Y I $S($D(^VA(200,DUZ,"SPL")):$E(^("SPL"),1),1:"N")'["y" W:'$D(IOP) !?5,"You aren't an authorized SPOOLER user." Q
"RTN","ZISPL1",34,0)
 D LIMITS
"RTN","ZISPL1",35,0)
 I '$D(IOP),%Z1'>%Z2!($P(%Z1,"^",2)'>%Z3) D MSG1 Q
"RTN","ZISPL1",36,0)
R S %Y=$S($D(IO("DOC")):IO("DOC"),$G(%ZISMY)]"":$P(%ZISMY,";",1),1:$P(%Y,";",1)) K %Z1,%Z2,%Z3
"RTN","ZISPL1",37,0)
 S DIC=3.51,U="^",DIC("DR")="",DIC("S")="I '$P(^(0),U,10)",DIC("W")="W "" Status: "",$P(^(0),U,3),""  Lines: "",$P(^(0),U,9)"
"RTN","ZISPL1",38,0)
 I %IS'[0,$D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",9) D GENDOC G R1
"RTN","ZISPL1",39,0)
 I $D(IOP) S X=%Y,DIC(0)="XMLZ"
"RTN","ZISPL1",40,0)
 E  S DIC(0)="AEQMZL" S:%Y?1A.ANP DIC("B")=%Y
"RTN","ZISPL1",41,0)
 S DLAYGO=3,%ZY=-1 D ^DIC K DLAYGO Q:Y<0
"RTN","ZISPL1",42,0)
R1 S %ZY=Y,%ZY(0)=Y(0),ZISIOST="P-OTHER",$P(%Z91,"^",2)="#" G:'$P(Y,"^",3) ND3
"RTN","ZISPL1",43,0)
 S %=$P($H,",",2),%=$S($D(DT)#2:DT_(%#3600\60/100+(%\3600)/100),1:"")
"RTN","ZISPL1",44,0)
 S ^XMB(3.51,+Y,0)=$P(^XMB(3.51,+Y,0),"^",1)_"^^o^"_%_U_DUZ_"^^^"_+%Z91_";"_$P(%Z91,"^",3),^XMB(3.51,"AOK",+Y,DUZ)="",^XMB(3.51,"ADUZ",DUZ,+Y)=""
"RTN","ZISPL1",45,0)
ND3 S %=$P(^XMB(3.51,+Y,0),"^",8),$P(%Z91,"^")=+%,$P(%Z91,"^",3)=$P(%,";",2)
"RTN","ZISPL1",46,0)
 Q
"RTN","ZISPL1",47,0)
LIMITS S %Z1=$G(^XTV(8989.3,1,"SPL")),(%Z2,%Z3)=0
"RTN","ZISPL1",48,0)
 ;The next line only counts doc names w/ data
"RTN","ZISPL1",49,0)
 ;F %=0:0 S %=$O(^XMB(3.51,"ADUZ",DUZ,%)) Q:%'>0  S %Z4=$S($D(^XMB(3.51,%,0)):^(0),1:""),%Z2=%Z2+$P(%Z4,"^",9),%Z3=$P(%Z4,"^",10)>1+%Z3
"RTN","ZISPL1",50,0)
 ;This line counts all doc names.
"RTN","ZISPL1",51,0)
 F %=0:0 S %=$O(^XMB(3.51,"ADUZ",DUZ,%)) Q:%'>0  S %Z4=$G(^XMB(3.51,%,0)),%Z2=%Z2+$P(%Z4,"^",9),%Z3=%Z3+1
"RTN","ZISPL1",52,0)
 Q
"RTN","ZISPL1",53,0)
GENDOC ;Auto generate document name.
"RTN","ZISPL1",54,0)
 D FLST S %ZY=$E($P(^%ZIS(1,%ZISIOS,0),"^"),1,25)
"RTN","ZISPL1",55,0)
 I %ZY["|DT|" S %ZY=$P(%ZY,"|DT|")_$$HTE^XLFDT($H,"2D")_$P(%ZY,"|DT|",2)
"RTN","ZISPL1",56,0)
G1 S ZISPLST=ZISPLST+1,X=%ZY_"_"_+ZISPLST G G1:$D(^XMB(3.51,+ZISPLST,0)),G1:$O(^XMB(3.51,"B",X,0))>0
"RTN","ZISPL1",57,0)
 S DIC=3.51,DIC(0)="XMLZ",DINUM=+ZISPLST,DLAYGO=3
"RTN","ZISPL1",58,0)
 D ^DIC K DLAYGO I Y'>0 G G1
"RTN","ZISPL1",59,0)
 Q
"RTN","ZISPL1",60,0)
 ;
"RTN","ZISPL1",61,0)
MSG1 W !,*7,"You have too many documents or lines, Please delete some documents" Q
"RTN","ZISPL1",62,0)
 ;
"RTN","ZISPL1",63,0)
FLST S ZISPLST=$P($G(^XMB(3.51,0)),"^",3)
"RTN","ZISPL1",64,0)
 Q
"RTN","ZISPL2")
0^2^B5153831
"RTN","ZISPL2",1,0)
ZISPL2 ;SF/RWF - SPOOLER CLEAN-UP ;10/30/96  12:55
"RTN","ZISPL2",2,0)
 ;;8.0;KERNEL;**23,36**;Jul 10, 1995
"RTN","ZISPL2",3,0)
1 S ZISPL=$G(^XTV(8989.3,1,"SPL"),"1^1^999"),ZISDT=$$FMADD^XLFDT(DT,"-"_$P(ZISPL,"^",3))
"RTN","ZISPL2",4,0)
 F DA=0:0 S DA=$O(^XMB(3.51,DA)) Q:DA'>0  S ZIS=^XMB(3.51,DA,0) I "rpm"[$P(ZIS,"^",3),ZISDT>$S($P(ZIS,"^",6)]"":$P(ZIS,"^",6),$P(ZIS,"^",4)]"":$P(ZIS,"^",4),1:ZISDT) D DELETE
"RTN","ZISPL2",5,0)
 F DA=0:0 S DA=$O(^XMB(3.51,DA)) Q:DA'>0  S ZIS=^XMB(3.51,DA,0) I "ao"[$P(ZIS,"^",3),ZISDT>$S($P(ZIS,"^",6)]"":$P(ZIS,"^",6),$P(ZIS,"^",4)]"":$P(ZIS,"^",4),1:ZISDT) D CLOSE
"RTN","ZISPL2",6,0)
 K DA,DIC,ZIS,ZISPL Q
"RTN","ZISPL2",7,0)
DELETE ;REMOVE SPOOL DOC.
"RTN","ZISPL2",8,0)
 D DSD^ZISPL($P(ZIS,U,10)) ;Delete Spool Data entry
"RTN","ZISPL2",9,0)
 S DIK="^XMB(3.51," D ^DIK ;Delete entry
"RTN","ZISPL2",10,0)
 Q
"RTN","ZISPL2",11,0)
CLOSE ;Close a SPOOL DOC that has been open too long.
"RTN","ZISPL2",12,0)
 I $$NEWERR^%ZTER N $ESTACK,$ETRAP S $ETRAP=""
"RTN","ZISPL2",13,0)
 S X="ET^ZISPL2",@^%ZOSF("TRAP")
"RTN","ZISPL2",14,0)
 S %ZFN=$P(ZIS,"^",2),IO=%ZFN,IO("SPOOL")=DA
"RTN","ZISPL2",15,0)
 D SPL3^%ZIS4 I %ZFN="" D DELETE Q
"RTN","ZISPL2",16,0)
 X "N DA,ZIS D CLOSE^%ZIS4" Q
"RTN","ZISPL2",17,0)
ET ;TRAP ERROR.
"RTN","ZISPL2",18,0)
 D DELETE Q
"RTN","ZISPL2",19,0)
DQP Q:'$D(^XMB(3.51,ZISDA,2,ZISDA2,0))!('$D(ZISPLC))  ;Dequeue print
"RTN","ZISPL2",20,0)
 S ZISPL0=^XMB(3.51,ZISDA,0),FF="|TOP|",XS=$P(ZISPL0,U,10) Q:XS'>0
"RTN","ZISPL2",21,0)
 U IO F ZISCNT=ZISPLC:-1:1 S PG=1 D OUT S $P(^(0),U,6)=$P(^XMB(3.51,ZISDA,2,ZISDA2,0),U,6)+1
"RTN","ZISPL2",22,0)
 W:$Y>3 @IOF D NOW^%DTC S $P(^XMB(3.51,ZISDA,0),"^",3)="p",$P(^(0),"^",7)=%,$P(^XMB(3.51,ZISDA,2,ZISDA2,0),U,3,5)="^^"_%
"RTN","ZISPL2",23,0)
 D ^%ZISC G EXIT^ZISPL
"RTN","ZISPL2",24,0)
 ;
"RTN","ZISPL2",25,0)
OUT ;
"RTN","ZISPL2",26,0)
 F I=0:0 S I=$O(^XMBS(3.519,XS,2,I)) Q:I'>0  S X=^(I,0),Y=(X=FF) W:Y @IOF W:'Y X,! I Y S PG=PG+1,$P(^XMB(3.51,ZISDA,2,ZISDA2,0),"^",3,4)=PG_"^"_I
"RTN","ZISPL2",27,0)
 Q
"RTN","ZISTCP")
0^6^B5711371
"RTN","ZISTCP",1,0)
%ZISTCP ;ISC-SF/RWF - DEVICE HANDLER TCP/IP CALLS ;10/25/96  09:21
"RTN","ZISTCP",2,0)
 ;;8.0;KERNEL;**36**;Jun 02, 1994
"RTN","ZISTCP",3,0)
 Q
"RTN","ZISTCP",4,0)
 ;
"RTN","ZISTCP",5,0)
CALL(IP,SOCK) ;Open a socket to the IP address
"RTN","ZISTCP",6,0)
 N %A,ZISOS,X,NIO
"RTN","ZISTCP",7,0)
 S ZISOS=^%ZOSF("OS")
"RTN","ZISTCP",8,0)
 I $$NEWERR^%ZTER N $ETRAP S $ETRAP=""
"RTN","ZISTCP",9,0)
 S X="OPNERR^%ZISTCP",@^%ZOSF("TRAP"),POP=1
"RTN","ZISTCP",10,0)
 ;I IP'?1.3N1P1.3N1P1.3N1P1.3N S IP=$$NSLOOKUP(IP)  ;Lookup the name
"RTN","ZISTCP",11,0)
 I IP'?1.3N1P1.3N1P1.3N1P1.3N Q  ;Not in the IP format
"RTN","ZISTCP",12,0)
 I (SOCK<1)!(SOCK>65535) Q
"RTN","ZISTCP",13,0)
 G CVXD:ZISOS["VAX",CMSM:ZISOS["MSM",CONT:ZISOS["OpenM"
"RTN","ZISTCP",14,0)
 S POP=1
"RTN","ZISTCP",15,0)
 Q
"RTN","ZISTCP",16,0)
CVXD ;Open VAX DSM Socket
"RTN","ZISTCP",17,0)
 S NIO=SOCK
"RTN","ZISTCP",18,0)
 O NIO:(TCPCHAN,ADDRESS=IP):30 G:'$T NOOPN
"RTN","ZISTCP",19,0)
 U NIO:NOECHO D VAR
"RTN","ZISTCP",20,0)
 Q
"RTN","ZISTCP",21,0)
CMSM ;Open MSM Socket
"RTN","ZISTCP",22,0)
 S NIO=56 O NIO::30 G:'$T NOOPN
"RTN","ZISTCP",23,0)
 U NIO::"TCP" W /SOCKET(IP,SOCK) I $KEY="" C NIO G NOOPN
"RTN","ZISTCP",24,0)
 D VAR
"RTN","ZISTCP",25,0)
 Q
"RTN","ZISTCP",26,0)
CONT ;Open OpenM socket
"RTN","ZISTCP",27,0)
 S NIO="|TCP|"_(SOCK+2000)
"RTN","ZISTCP",28,0)
 O NIO:(IP:SOCK):30 G:'$T NOOPN
"RTN","ZISTCP",29,0)
 U NIO D VAR
"RTN","ZISTCP",30,0)
 Q
"RTN","ZISTCP",31,0)
VAR ;Setup IO variables
"RTN","ZISTCP",32,0)
 S:'$D(IO(0)) IO(0)=$I
"RTN","ZISTCP",33,0)
 S IO=NIO,IO(1,IO)="",IO("IP")=IP,POP=0
"RTN","ZISTCP",34,0)
 S IOT="TCP",IOF="#",IOST="P-TCP",IOST(0)=0
"RTN","ZISTCP",35,0)
 Q
"RTN","ZISTCP",36,0)
NOOPN ;Didn't make the conection
"RTN","ZISTCP",37,0)
 S POP=1
"RTN","ZISTCP",38,0)
 Q
"RTN","ZISTCP",39,0)
OPNERR ;
"RTN","ZISTCP",40,0)
 S POP=1
"RTN","ZISTCP",41,0)
 Q
"RTN","ZISTCP",42,0)
CLOSE ;Close and reset
"RTN","ZISTCP",43,0)
 C IO K IO(1,IO),IO("IP") S IO=$S($G(IO(0))]"":IO(0),1:$P)
"RTN","ZISTCP",44,0)
 D HOME^%ZIS
"RTN","ZISTCP",45,0)
 Q
"RTN","ZISTCP",46,0)
 ;
"RTN","ZISTCP",47,0)
LISTEN(SOCK,RTN,FLG) ;Listen on socket, start routine
"RTN","ZISTCP",48,0)
 N %A,ZISOS,X,NIO
"RTN","ZISTCP",49,0)
 S ZISOS=^%ZOSF("OS"),FLG=$G(FLG)
"RTN","ZISTCP",50,0)
 I $$NEWERR^%ZTER N $ETRAP S $ETRAP=""
"RTN","ZISTCP",51,0)
 S X="OPNERR^%ZISTCP",@^%ZOSF("TRAP"),POP=1
"RTN","ZISTCP",52,0)
LOOP D LVXD:ZISOS["VAX",LMSM:ZISOS["MSM",LONT:ZISOS["OpenM"
"RTN","ZISTCP",53,0)
 I POP Q
"RTN","ZISTCP",54,0)
 D  
"RTN","ZISTCP",55,0)
 . S (IO,IO(0))=NIO,IOST="TCP",IOST(0)=0,X=RTN N NIO,SOCK,RTN,FLG
"RTN","ZISTCP",56,0)
 . D @X
"RTN","ZISTCP",57,0)
 I ZISOS["DSM" U NIO:DISCONNECT
"RTN","ZISTCP",58,0)
 E  C NIO ;
"RTN","ZISTCP",59,0)
 G LOOP
"RTN","ZISTCP",60,0)
LMSM ;MSM
"RTN","ZISTCP",61,0)
 ;For multi thread use MSM's MSERVER process.
"RTN","ZISTCP",62,0)
 ;This is the listener for a TCP connects.
"RTN","ZISTCP",63,0)
 ;It takes the place of the INETD Unix process
"RTN","ZISTCP",64,0)
 S NIO=56,%="" O NIO::30 Q:'$T  S POP=0
"RTN","ZISTCP",65,0)
 U NIO::"TCP" W /SOCKET("",SOCK)
"RTN","ZISTCP",66,0)
 I FLG W 220,!
"RTN","ZISTCP",67,0)
 Q
"RTN","ZISTCP",68,0)
 ;
"RTN","ZISTCP",69,0)
LONT ;Open port in Accept mode with standard terminators, big buffers.
"RTN","ZISTCP",70,0)
 S NIO="|TCP|"_SOCK,%=""
"RTN","ZISTCP",71,0)
 O NIO:(:SOCK:"AT"::32767:32767):30 Q:'$T S POP=0 U NIO
"RTN","ZISTCP",72,0)
 ;Wait on read for a connect
"RTN","ZISTCP",73,0)
 R *NEWCHAR S %ZA=$ZA,%ZB=$ZB
"RTN","ZISTCP",74,0)
 I FLG W 220,!
"RTN","ZISTCP",75,0)
 Q
"RTN","ZISTCP",76,0)
 ;
"RTN","ZISTCP",77,0)
LVXD ;Open port and listen
"RTN","ZISTCP",78,0)
 ;Use UCX for multiple listeners
"RTN","ZISTCP",79,0)
 S NIO=SOCK O NIO:(TCPCHAN):30 Q:'$T  S POP=0
"RTN","ZISTCP",80,0)
 U NIO Q  ;Let application wait at the read for a connect.
"RTN","ZISTCP",81,0)
 F  R %#1:60 Q:$T
"RTN","ZISTCP",82,0)
 I FLG W 220,!
"RTN","ZISTCP",83,0)
 Q
"RTN","ZTER")
0^7^B26696573
"RTN","ZTER",1,0)
%ZTER ; ISC-SF.SEA/JLI - ERROR TRAP TO LOG ERRORS ;11/08/96  11:14
"RTN","ZTER",2,0)
 ;;8.0;KERNEL;**8,18,32,24,36**;JUL 10, 1995
"RTN","ZTER",3,0)
 I $ZE["-ALLOC,"!($ZE["<STORE>") D @$S('$D(^%ZOSF("OS")):"^%ET",^("OS")["DTM":"^%errlog",1:"^%ET") D H^XUS
"RTN","ZTER",4,0)
 S %ZT("^XUTL(""XQ"",$J)")="" S:'$D(%ZTERLGR) %ZTERLGR=$$LGR^%ZOSV()
"RTN","ZTER",5,0)
 S %ZTER11N=$P($G(^%ZTER(1,+$H,0)),"^",2)+1,^%ZTER(1,+$H,0)=(+$H)_"^"_%ZTER11N,^(1,0)="^3.0751^"_%ZTER11N_"^"_%ZTER11N
"RTN","ZTER",6,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,0)=%ZTER11N,^("ZE")=$ZE S:$D(%ZTERLGR) ^("GR")=%ZTERLGR K %ZTERLGR I %ZTER11N=1 S ^%ZTER(1,0)=$P(^%ZTER(1,0),"^",1,2)_"^"_(+$H)_"^"_($P(^%ZTER(1,0),"^",4)+1)
"RTN","ZTER",7,0)
 S %ZTER11B="" F %ZTER11I=1:1:$L($ZB) S %ZTER11A=$E($ZB,%ZTER11I),%ZTER11B=%ZTER11B_$S(%ZTER11A?1C:$C($A(%ZTER11A)+32#128),1:%ZTER11A)
"RTN","ZTER",8,0)
 S %ZTER11I="" I $D(^%ZOSF("UCI")) K %ZTER11A S:$D(Y) %ZTER11A="" S:($D(Y)#2) %ZTER11A=Y X ^%ZOSF("UCI") S %ZTER11I=Y K:'$D(%ZTER11A) Y S:$D(%ZTER11A) Y=%ZTER11A
"RTN","ZTER",9,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"H")=$H,^("J")=$J_"^^^"_%ZTER11I_"^"_$J,^("I")=$I_"^"_$S($I[":":$ZA,1:"")_"^"_%ZTER11B_"^"_$S($D(IO("ZIO")):IO("ZIO"),1:"")
"RTN","ZTER",10,0)
 S %ZTERROR=$S($ZE["%DSM-E":$P($P($ZE,"%DSM-E-",2),","),1:$P($P($ZE,"<",2),">"))
"RTN","ZTER",11,0)
 S %ZTER11C=0 I $$NEWERR() D STACK^%ZTER1
"RTN","ZTER",12,0)
 I ^%ZOSF("OS")["VAX DSM" K %ZTER11A,%ZTER11B D VXD^%ZTER1 I 1
"RTN","ZTER",13,0)
 E  S %ZTERVAR="%" D:$D(%) VAR:$D(%)#2,SUBS:$D(%)>9 F %ZTER11Z=0:0 S %ZTERVAR=$O(@%ZTERVAR) Q:%ZTERVAR=""  D VAR:$D(@%ZTERVAR)#2,SUBS:$D(@%ZTERVAR)>9
"RTN","ZTER",14,0)
 D GLOB S:%ZTER11C>0 ^%ZTER(1,+$H,1,%ZTER11N,"ZV",0)="^3.0752^"_%ZTER11C_"^"_%ZTER11C S:'$D(^%ZTER(1,"B",+$H)) ^(+$H,+$H)="" S ^%ZTER(1,+$H,1,"B",%ZTER11N,%ZTER11N)=""
"RTN","ZTER",15,0)
LIN ;
"RTN","ZTER",16,0)
 S %ZTY=$P($ZE,","),%ZTX=$P(%ZTY,"^") S:%ZTX[">" %ZTX=$P(%ZTX,">",2)
"RTN","ZTER",17,0)
 I %ZTX'="" S X=$P($P(%ZTY,"^",2),":") I X'="" X ^%ZOSF("TEST") I $T D
"RTN","ZTER",18,0)
 .S XCNP=0,DIF="^TMP($J,""XTER1""," X ^%ZOSF("LOAD") S %ZTY=$P(%ZTX,"+",1) D
"RTN","ZTER",19,0)
 ..I %ZTY'="" F X=0:0 S X=$O(^TMP($J,"XTER1",X)) Q:X'>0  I $P(^(X,0)," ")=%ZTY S X=X+$P(%ZTX,"+",2),%ZTZLIN=^TMP($J,"XTER1",X,0) Q
"RTN","ZTER",20,0)
 ..I %ZTY="" S X=+$P(%ZTX,"+",2) Q:X'>0  S %ZTZLIN=^TMP($J,"XTER1",X,0)
"RTN","ZTER",21,0)
 K ^TMP($J,"XTER1"),XCNP,DIF,%ZTY,%ZTX,X,Y
"RTN","ZTER",22,0)
 S:$D(%ZTZLIN) ^%ZTER(1,+$H,1,%ZTER11N,"LINE")=%ZTZLIN K %ZTZLIN
"RTN","ZTER",23,0)
 I %ZTERROR'="",$D(^%ZTER(2,"B",%ZTERROR)) S %ZTERROR=%ZTERROR_"^"_$P(^%ZTER(2,+$O(^(%ZTERROR,0)),0),"^",2)
"RTN","ZTER",24,0)
 K %ZTER11A,%ZTER11B,%ZTER11C,%ZTER11S,%ZTER11Z,%ZTERVAP,%ZTERVAR,%ZTERSUB,%ZTER11I,%ZTER11D,%ZTER11L,%ZTER11Q,%,%ZTER111,%ZTER112,%H,%ZTER11N
"RTN","ZTER",25,0)
 Q
"RTN","ZTER",26,0)
 ;
"RTN","ZTER",27,0)
VAR I ",%ZTERVAR,%ZTER11Z,%ZTER11A,%ZTER11B,%ZTER11C,%ZTER11N,%ZTER11I,%ZTER11L,%ZTER11S,%ZTERVAP,%ZTERSUB,"'[(","_%ZTERVAR_",") S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTERVAR D
"RTN","ZTER",28,0)
 . I $L(@%ZTERVAR)'>255 S ^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=@%ZTERVAR Q
"RTN","ZTER",29,0)
 . S ^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=" **** VALUE IS GREATER THAN 255 CHARACTERS (SEE SUBNODES FOR DATA) *** "
"RTN","ZTER",30,0)
 . N %ZTER11,%ZTER12
"RTN","ZTER",31,0)
 . F %ZTER11=1:1 S %ZTER12=$E(@%ZTERVAR,1,245) Q:%ZTER12=""  S @%ZTERVAR=$E(@%ZTERVAR,246,$L(@%ZTERVAR)),^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D",%ZTER11)=%ZTER12
"RTN","ZTER",32,0)
 . Q
"RTN","ZTER",33,0)
 Q
"RTN","ZTER",34,0)
 ;
"RTN","ZTER",35,0)
SUBS S %ZTER11S="" Q:"%ZT("=$E(%ZTERVAR,1,4)  Q:",%ZTER11S,%ZTER11L,"[(","_%ZTERVAR_",")  S %ZTERVAP=%ZTERVAR_"(",%ZTERSUB="%ZTER11S)"
"RTN","ZTER",36,0)
 ;
"RTN","ZTER",37,0)
DESC S %ZTER11I=%ZTER11I+1,%ZTER11S(%ZTER11I)=%ZTER11S,%ZTER11S="",%ZTER11L(%ZTER11I)=$L(%ZTERSUB)-9 F %ZTER11Z=0:0 S %ZTER11S=$O(@(%ZTERVAP_%ZTERSUB)) Q:%ZTER11S=""  D SUBX
"RTN","ZTER",38,0)
 S %ZTER11S=%ZTER11S(%ZTER11I) K %ZTER11S(%ZTER11I),%ZTER11L(%ZTER11I) S %ZTER11I=%ZTER11I-1
"RTN","ZTER",39,0)
 Q
"RTN","ZTER",40,0)
 ;
"RTN","ZTER",41,0)
SUBX I $D(@(%ZTERVAP_%ZTERSUB))#10 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=$P(%ZTERVAP_%ZTERSUB,"%ZTER11S",1)_""""_%ZTER11S_""""_$P(%ZTERVAP_%ZTERSUB,"%ZTER11S",2),^("D")=@(%ZTERVAP_%ZTERSUB)
"RTN","ZTER",42,0)
 I $D(@(%ZTERVAP_%ZTERSUB))\10 S %ZTERSUB=$E(%ZTERSUB,1,%ZTER11L(%ZTER11I))_""""_%ZTER11S_""""_",%ZTER11S)" D DESC S %ZTERSUB=$E(%ZTERSUB,1,%ZTER11L(%ZTER11I))_"%ZTER11S)"
"RTN","ZTER",43,0)
 Q
"RTN","ZTER",44,0)
 ;
"RTN","ZTER",45,0)
GLOB ;
"RTN","ZTER",46,0)
 S %ZTER11D="" F %ZTER11I=0:0 S %ZTER11D=$O(%ZT(%ZTER11D)) Q:%ZTER11D=""  S %ZTER11A=%ZTER11D S:%ZTER11A["$J" %ZTER11B=$J,%ZTER11A=$P(%ZTER11A,"$J",1)_%ZTER11B_$P(%ZTER11A,"$J",2,99) S %ZTER11B=$P(%ZTER11A,")",1) D LOOP
"RTN","ZTER",47,0)
 Q
"RTN","ZTER",48,0)
 ;
"RTN","ZTER",49,0)
LOOP ;
"RTN","ZTER",50,0)
 F %ZTER11I=0:0 S %ZTER11A=$ZO(@%ZTER11A) Q:%ZTER11A'[%ZTER11B  S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=$P(%ZTER11D,")")_$P(%ZTER11A,%ZTER11B,2),^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=@%ZTER11A
"RTN","ZTER",51,0)
 Q
"RTN","ZTER",52,0)
SCREEN(ERR) ;Screen out certain errors.
"RTN","ZTER",53,0)
 N %ZTE S:'$D(ERR) ERR=$$EC^%ZOSV
"RTN","ZTER",54,0)
 S %ZTE="" F  S %ZTE=$O(^%ZTSCH("ES",%ZTE)) Q:%ZTE=""  Q:ERR[%ZTE
"RTN","ZTER",55,0)
 I %ZTE]"" D  Q 1 ;Skip the recording of the error.
"RTN","ZTER",56,0)
 . I $D(^%ZTSCH("ES",%ZTE,1)) L +^%ZTSCH("ES") S ^(1)=$G(^%ZTSCH("ES",%ZTE,1))+1 L -^%ZTSCH("ES")
"RTN","ZTER",57,0)
 . Q
"RTN","ZTER",58,0)
 Q 0 ;record error
"RTN","ZTER",59,0)
 ;
"RTN","ZTER",60,0)
UNWIND ;Unwind stack for new error trap. Called by app code.
"RTN","ZTER",61,0)
 Q:'$$NEWERR()
"RTN","ZTER",62,0)
 S $ECODE="" S $ETRAP="D UNW^%ZTER Q" S $ECODE=",U1,"
"RTN","ZTER",63,0)
UNW Q:$ESTACK>1  S $ECODE="" Q:'$QUIT  Q 0
"RTN","ZTER",64,0)
 ;
"RTN","ZTER",65,0)
NEWERR() ;Does this OS support the M95 error trapping
"RTN","ZTER",66,0)
 N % S %=$G(^%ZOSF("OS")) Q:%="" 0
"RTN","ZTER",67,0)
 I %["VAX DSM" Q 1
"RTN","ZTER",68,0)
 I %["MSM",$P($ZV,"Version ",2)'<4.3 Q 1
"RTN","ZTER",69,0)
 Q 0
"RTN","ZTER",70,0)
ABORT ;Pop the stack all the way.
"RTN","ZTER",71,0)
 S $ETRAP="Q:$ST>1  S $ECODE="""" Q"
"RTN","ZTER",72,0)
 Q
"RTN","ZTER1")
0^8^B7922926
"RTN","ZTER1",1,0)
%ZTER1 ;ISC-SF.SEA/JLI - ERROR TRAP TO LOG ERRORS (VAX LOCAL SYMBOL TABLE) ;10/15/96  10:40
"RTN","ZTER1",2,0)
 ;;8.0;KERNEL;**18,24,36**;JUL 10, 1995
"RTN","ZTER1",3,0)
VXD ;Record VAX DSM variables
"RTN","ZTER1",4,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"J")=$J_"^"_$ZC(%GETJPI,0,"PRCNAM")_"^"_$ZC(%GETJPI,0,"USERNAME")_"^"_%ZTER11I_"^"_$ZC(%SYSFAO,"!XL",$J),^%ZTER(1,+$H,1,%ZTER11N,"I")=$IO_"^"_$ZA_"^"_$ZB_"^"_$ZIO K %ZTER11I
"RTN","ZTER1",5,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"ZH")=$TR($ZH,",","^")
"RTN","ZTER1",6,0)
 I $STACK>100 G VERR
"RTN","ZTER1",7,0)
 S %ZTER111="%" F  D  S %ZTER111=$ZSORT(@%ZTER111) Q:%ZTER111=""  ;Code from DEC
"RTN","ZTER1",8,0)
 . Q:$E(%ZTER111,1,5)="%ZTER"
"RTN","ZTER1",9,0)
 . I $D(@%ZTER111)#2 D VNXT2
"RTN","ZTER1",10,0)
 . I $D(@%ZTER111)>9 D VNXT3
"RTN","ZTER1",11,0)
 . Q
"RTN","ZTER1",12,0)
 Q
"RTN","ZTER1",13,0)
 ;
"RTN","ZTER1",14,0)
VNXT2 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTER111,^("D")=$E(@%ZTER111,1,255)
"RTN","ZTER1",15,0)
 Q
"RTN","ZTER1",16,0)
VNXT3 S %ZTER11Q=%ZTER111
"RTN","ZTER1",17,0)
 F  S %ZTER11Q=$Q(@%ZTER11Q) Q:%ZTER11Q=""  S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTER11Q,^("D")=$E(@%ZTER11Q,1,255)
"RTN","ZTER1",18,0)
 Q
"RTN","ZTER1",19,0)
 ;
"RTN","ZTER1",20,0)
STACK ;Record the new $STACK variable
"RTN","ZTER1",21,0)
 I $ECODE]"" S $ZE=""
"RTN","ZTER1",22,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$ECODE",^("D")=$E($ECODE,1,255)
"RTN","ZTER1",23,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$ESTACK",^("D")=$ESTACK
"RTN","ZTER1",24,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$ETRAP",^("D")=$ETRAP
"RTN","ZTER1",25,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK",^("D")=$STACK
"RTN","ZTER1",26,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$QUIT",^("D")=$QUIT
"RTN","ZTER1",27,0)
 N %,%1
"RTN","ZTER1",28,0)
 F %=0:1:$ST S %1=$E(1000+%,2,4) D  Q:$ST(%,"ECODE")]""
"RTN","ZTER1",29,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_")",^("D")=$STACK(%)
"RTN","ZTER1",30,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""ECODE"")",^("D")=$STACK(%,"ECODE")
"RTN","ZTER1",31,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""PLACE"")",^("D")=$STACK(%,"PLACE")
"RTN","ZTER1",32,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""MCODE"")",^("D")=$STACK(%,"MCODE")
"RTN","ZTER1",33,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"LINE")=$STACK(%,"MCODE")
"RTN","ZTER1",34,0)
 S $ECODE=""
"RTN","ZTER1",35,0)
 Q
"RTN","ZTER1",36,0)
 ;
"RTN","ZTER1",37,0)
VERR ;
"RTN","ZTER1",38,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"ZE2")="%DSM-E-ET, Error occurred in %ZTER, "_$ECODE
"RTN","ZTER1",39,0)
 HALT
"RTN","ZTM")
0^11^B22415402
"RTN","ZTM",1,0)
%ZTM ;SEA/RDS-TaskMan: Manager, Part 1 (Main Loop) ;09/05/96  07:58
"RTN","ZTM",2,0)
 ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"RTN","ZTM",3,0)
 ;
"RTN","ZTM",4,0)
LOOP ;Taskman's Main Loop
"RTN","ZTM",5,0)
 F %ZTLOOP=0:1 S %ZTLOOP=%ZTLOOP#8 D CHECK,SCHQ,IDLE:%ZTCHK
"RTN","ZTM",6,0)
 S %ZTFALL="" G LOOP
"RTN","ZTM",7,0)
 ;
"RTN","ZTM",8,0)
CHECK ;LOOP--Check Status And Update Loop Data
"RTN","ZTM",9,0)
 Q:%ZTLOOP&$G(%ZTCHK)
"RTN","ZTM",10,0)
 I $D(^%ZTSCH("RUN"))[0 K ^%ZTSCH("STATUS",$J) H
"RTN","ZTM",11,0)
 S ^%ZTSCH("RUN")=$H
"RTN","ZTM",12,0)
 I $D(^%ZTSCH("WAIT"))#2 D STATUS("WAIT^Taskman Waiting") H 5 G CHECK
"RTN","ZTM",13,0)
 ;
"RTN","ZTM",14,0)
 I $D(^%ZTSCH("UPDATE",$J))[0 D UPDATE^%ZTM5 D
"RTN","ZTM",15,0)
 . Q:"GP"[%ZTYPE
"RTN","ZTM",16,0)
 . K ^%ZTSCH("STATUS")
"RTN","ZTM",17,0)
 . S ^%ZTSCH("RUN")=%ZTNODE_" is the wrong type of volume set for TaskMan."
"RTN","ZTM",18,0)
 . H
"RTN","ZTM",19,0)
 I %ZTVLI D STATUS("PAUSE^Logons Inhibited") H 60 G CHECK ;Set in %ZTM5
"RTN","ZTM",20,0)
 I @%ZTNLG D INHIBIT^%ZTM5(1),STATUS("PAUSE^No Signons Allowed") H 60 G CHECK
"RTN","ZTM",21,0)
 I $G(^%ZIS(14.5,"LOGON",%ZTVOL)) D INHIBIT^%ZTM5(0) ;Check field
"RTN","ZTM",22,0)
 I $D(ZTREQUIR)#2 D STATUS("PAUSE^Required link to "_ZTREQUIR_" is down.") H 60 D REQUIR^%ZTM5 G CHECK
"RTN","ZTM",23,0)
 ;
"RTN","ZTM",24,0)
 I $D(^%ZTSCH("LINK"))#2,$$DIFF($H,^("LINK"))>900 D LINK^%ZTM3
"RTN","ZTM",25,0)
 ;
"RTN","ZTM",26,0)
 X ^%ZOSF("ACTJ") S %ZTRUN=%ZTVMJ>Y
"RTN","ZTM",27,0)
 I %ZTRUN,%ZTPFLG("BAL")]"" D BALANCE^%ZTM6 I $D(ZTOVERLD)#2 D STATUS("BALANCE^This cpu ("_%ZTPAIR_") is waiting to balance the load.") H 5 G CHECK
"RTN","ZTM",28,0)
 I %ZTRUN D STATUS("RUN^Main Loop")
"RTN","ZTM",29,0)
 E  D STATUS("RUN^Taskman Job Limit Reached")
"RTN","ZTM",30,0)
 Q
"RTN","ZTM",31,0)
 ;
"RTN","ZTM",32,0)
STATUS(MSG) ;Record TM status
"RTN","ZTM",33,0)
 S ^%ZTSCH("STATUS",$J)=$H_"^"_MSG Q
"RTN","ZTM",34,0)
 ;
"RTN","ZTM",35,0)
SCHQ ;LOOP--Check Schedule List
"RTN","ZTM",36,0)
 S %ZTIME=$$H3($H),ZTDTH=0,%ZTCHK=1,IO=""
"RTN","ZTM",37,0)
S1 S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:(ZTDTH>%ZTIME)  Q:('ZTDTH)!(ZTDTH'?6.N)  I +ZTDTH<0 K ^%ZTSCH(ZTDTH) G S1
"RTN","ZTM",38,0)
 S ZTSK=0
"RTN","ZTM",39,0)
S2 L  S ZTSK=$O(^%ZTSCH(ZTDTH,ZTSK)) G S1:ZTSK="" S ZTST=$G(^%ZTSCH(ZTDTH,ZTSK))
"RTN","ZTM",40,0)
 L ^%ZTSK(ZTSK):1 G S2:'$T K ^%ZTSCH(ZTDTH,ZTSK)
"RTN","ZTM",41,0)
 I $D(^%ZTSK(ZTSK,0))[0 S:$D(^%ZTSK(ZTSK)) $P(^(ZTSK,.1),U,1,3)="I^"_$H_U_1 G S2
"RTN","ZTM",42,0)
 I $D(^%ZTSK(ZTSK,.1))#2,$P(^(.1),U,10)]"" S $P(^(.1),U,1,3)="D^"_$H_"^1" G S2
"RTN","ZTM",43,0)
 D ^%ZTM1 G S2:%ZTREJCT
"RTN","ZTM",44,0)
 ;
"RTN","ZTM",45,0)
SEND ;Send Task To Submanager
"RTN","ZTM",46,0)
 S %ZTCHK=0,ZTPAIR=""
"RTN","ZTM",47,0)
 I ZTDVOL'=%ZTVOL D XLINK^%ZTM2 G:'ZTJOBIT SCHX
"RTN","ZTM",48,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,2)=$S(ZTYPE="C":"M",1:3)_U_$H
"RTN","ZTM",49,0)
 I (ZTYPE'="C")&(%ZTNODE[ZTNODE) L +^%ZTSCH("JOB"):10 S ^%ZTSCH("JOB",ZTDTH,ZTSK)=IO
"RTN","ZTM",50,0)
 E  L +^%ZTSCH("C"):10 S ZTPAIR=ZTDVOL_$S(ZTNODE]"":":"_ZTNODE,1:""),^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK)=IO
"RTN","ZTM",51,0)
 I '$D(^%ZTSCH("STOP")),(ZTYPE="C"!(%ZTRUN&$$NEWSUB)),'$$OOS(ZTPAIR) D
"RTN","ZTM",52,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",53,0)
 . Q
"RTN","ZTM",54,0)
SCHX L  K ZTREP Q
"RTN","ZTM",55,0)
 ;
"RTN","ZTM",56,0)
IDLE ;LOOP--DEV Node Maintenance; Backup JOB Commands
"RTN","ZTM",57,0)
 ;only proceed with idle work if 15 seconds since last check
"RTN","ZTM",58,0)
 S (ZTREC,ZTCVOL)="" H 2 Q:%ZTLOOP
"RTN","ZTM",59,0)
 L ^%ZTSCH("IDLE")
"RTN","ZTM",60,0)
 I $$DIFF(%ZTIME,^%ZTSCH("IDLE"),1)<15 L  Q
"RTN","ZTM",61,0)
 S ^%ZTSCH("IDLE")=%ZTIME L
"RTN","ZTM",62,0)
I1 ;
"RTN","ZTM",63,0)
 ;clear out old DEV nodes
"RTN","ZTM",64,0)
 I $D(^%ZTSCH("DEV")) S %ZTIO="" F  S %ZTIO=$O(^%ZTSCH("DEV",%ZTIO)) Q:%ZTIO=""  D
"RTN","ZTM",65,0)
 . L ^%ZTSCH("DEV",%ZTIO):5 I '$T Q
"RTN","ZTM",66,0)
 . N X S X=$G(^%ZTSCH("DEV",%ZTIO)) Q:'$L(X)
"RTN","ZTM",67,0)
 . I $$DIFF(%ZTIME,X,1)>120 K ^%ZTSCH("DEV",%ZTIO)
"RTN","ZTM",68,0)
 . Q
"RTN","ZTM",69,0)
 L  ;clear all locks.
"RTN","ZTM",70,0)
I2 ;
"RTN","ZTM",71,0)
 I $D(^%ZTSCH("STOP")) Q
"RTN","ZTM",72,0)
 ;job new submanagers cross-volume for each unfinished C list
"RTN","ZTM",73,0)
 I $D(^%ZTSCH("C")) D
"RTN","ZTM",74,0)
 . S X="ERCL^%ZTM2",@^%ZOSF("TRAP")
"RTN","ZTM",75,0)
 . S ZTVOL="" F  S ZTVOL=$O(^%ZTSCH("C",ZTVOL)) Q:ZTVOL=""  D
"RTN","ZTM",76,0)
 .. S ZTNODE="",ZTDVOL=ZTVOL S:ZTDVOL[":" ZTNODE=$P(ZTDVOL,":",2),ZTDVOL=$P(ZTDVOL,":")
"RTN","ZTM",77,0)
 .. S X=$G(^%ZTSCH("C",ZTVOL))
"RTN","ZTM",78,0)
 .. I $D(^%ZTSCH("LINK",ZTDVOL))!(X>9)!$$OOS(ZTVOL) Q
"RTN","ZTM",79,0)
 .. S ^%ZTSCH("C",ZTVOL)=X+1
"RTN","ZTM",80,0)
 .. S %ZTCHK=0,ZTUCI=$O(^%ZIS(14.6,"AV",ZTDVOL,""))
"RTN","ZTM",81,0)
 .. I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",82,0)
 .. Q
"RTN","ZTM",83,0)
 . Q
"RTN","ZTM",84,0)
I3 ;job off a new submanager if none are tending the Device List
"RTN","ZTM",85,0)
 I '%ZTRUN Q
"RTN","ZTM",86,0)
 I $$NEWSUB,$O(^%ZTSCH("IO",""))]"" D  Q
"RTN","ZTM",87,0)
 . Q:'$$SUBOK()
"RTN","ZTM",88,0)
 . S %ZTCHK=0,ZTUCI=%ZTUCI,ZTDVOL=%ZTVOL,ZTNODE=""
"RTN","ZTM",89,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",90,0)
 . Q
"RTN","ZTM",91,0)
I4 ;job off a new submanager if the Job List still has tasks
"RTN","ZTM",92,0)
 I $D(^%ZTSCH("JOB")) D
"RTN","ZTM",93,0)
 . ;D SUB^%ZTMS1(-1)
"RTN","ZTM",94,0)
 . Q:'$$SUBOK()  S %ZTCHK=0,ZTUCI=%ZTUCI,ZTDVOL=%ZTVOL,ZTNODE=""
"RTN","ZTM",95,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",96,0)
 . Q
"RTN","ZTM",97,0)
I5 ;Clean up %ZTSCH
"RTN","ZTM",98,0)
 S ZTDTH="0,0" F  S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:ZTDTH'[","  D
"RTN","ZTM",99,0)
 . N ZTSK,X L +^%ZTSCH(ZTDTH)
"RTN","ZTM",100,0)
 . S ZTSK=$O(^%ZTSCH(ZTDTH,0)) I ZTSK>0 S X=^(ZTSK),^%ZTSCH($$H3(ZTDTH),ZTSK)=X K ^%ZTSCH(ZTDTH,ZTSK)
"RTN","ZTM",101,0)
 . L -^%ZTSCH(ZTDTH)
"RTN","ZTM",102,0)
 . Q
"RTN","ZTM",103,0)
I9 K %ZTVS Q
"RTN","ZTM",104,0)
 ;
"RTN","ZTM",105,0)
DIFF(N,O,T) ;Diff in sec.
"RTN","ZTM",106,0)
 Q:$G(T) N-O ;For new seconds times
"RTN","ZTM",107,0)
 Q N-O*86400-$P(O,",",2)+$P(N,",",2)
"RTN","ZTM",108,0)
 ;
"RTN","ZTM",109,0)
OOS(BV) ;Check if Box-Volume is Out Of Service, Return 1 if OOS.
"RTN","ZTM",110,0)
 Q:BV="" 0 N %
"RTN","ZTM",111,0)
 S %=$O(^%ZIS(14.7,"B",BV,0)),%=$G(^%ZIS(14.7,+%,0))
"RTN","ZTM",112,0)
 Q:%="" 1 Q $P(%,U,11)=1
"RTN","ZTM",113,0)
 ;
"RTN","ZTM",114,0)
H3(%) ;Convert $H to seconds.
"RTN","ZTM",115,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTM",116,0)
H0(%) ;Covert from seconds to $H
"RTN","ZTM",117,0)
 Q (%\86400)_","_(%#86400)
"RTN","ZTM",118,0)
SUBOK() ;Check if sub's are starting, return 1 if OK
"RTN","ZTM",119,0)
 S ^%ZTSCH("SUB",%ZTPAIR,0)=$G(^%ZTSCH("SUB",%ZTPAIR,0))+1
"RTN","ZTM",120,0)
 Q ^%ZTSCH("SUB",%ZTPAIR,0)<10
"RTN","ZTM",121,0)
 ;
"RTN","ZTM",122,0)
NEWSUB() ;See if we need a new submanager
"RTN","ZTM",123,0)
 N JOBCNT,SUBS,%1,%2
"RTN","ZTM",124,0)
 S SUBS=^%ZTSCH("SUB",%ZTPAIR),JOBCNT=0,%1=$NA(^%ZTSCH("JOB"))
"RTN","ZTM",125,0)
 I SUBS<%ZTPFLG("MINSUB") Q 1
"RTN","ZTM",126,0)
 F  S %1=$Q(@%1) Q:%1'["JOB"  S JOBCNT=JOBCNT+1 Q:JOBCNT>SUBS
"RTN","ZTM",127,0)
 I SUBS<JOBCNT Q 1
"RTN","ZTM",128,0)
 Q 0
"RTN","ZTM0")
0^15^B11057147
"RTN","ZTM0",1,0)
%ZTM0 ;SEA/RDS-TaskMan: Manager, Part 2 (Begin) ;09/20/96  14:19
"RTN","ZTM0",2,0)
 ;;8.0;KERNEL;**42,36**;JUL 10, 1995
"RTN","ZTM0",3,0)
 ;
"RTN","ZTM0",4,0)
START ;Entry Point--start Task Manager at system startup
"RTN","ZTM0",5,0)
 S X="ER^%ZTM5",@^%ZOSF("TRAP"),^%ZTSCH("ER")=""
"RTN","ZTM0",6,0)
 L ^%ZTSCH
"RTN","ZTM0",7,0)
 K ^%ZTSCH("DEV"),^("LOAD"),^("LOADA"),^("STATUS"),^("STOP"),^("UPDATE")
"RTN","ZTM0",8,0)
 S ZTS=0 F  S ZTS=$O(^%ZTSCH("TASK",ZTS)) Q:'ZTS  S $P(^%ZTSK(ZTS,.1),"^",1,3)="E^"_$H_"^"
"RTN","ZTM0",9,0)
 D SETUP
"RTN","ZTM0",10,0)
 K ^%ZTSCH("TASK"),^%ZTSCH("SUB")
"RTN","ZTM0",11,0)
 S ^%ZTSCH("IDLE")=0,^%ZTSCH("SUB",%ZTPAIR)=0,^(%ZTPAIR,0)=0
"RTN","ZTM0",12,0)
 D STATUS^%ZTM("RUN^Startup Hang")
"RTN","ZTM0",13,0)
 L  H 90
"RTN","ZTM0",14,0)
S1 ;
"RTN","ZTM0",15,0)
 I "CFO"[%ZTYPE G BADTYPE
"RTN","ZTM0",16,0)
 D STATUS^%ZTM("RUN^Startup jobs")
"RTN","ZTM0",17,0)
 S %ZTLOOP=0 D CHECK^%ZTM
"RTN","ZTM0",18,0)
 S ZTU="" F %ZTJ=0:0 S ZTU=$O(^%ZTSCH("STARTUP",ZTU)) Q:ZTU=""  F ZTO=0:0 S ZTO=$O(^%ZTSCH("STARTUP",ZTU,ZTO)) Q:ZTO=""  D
"RTN","ZTM0",19,0)
 . S ZTDTH=$H,ZTIO=$P(^%ZTSCH("STARTUP",ZTU,ZTO),"^",2),ZTRTN="ZTSK^XQ1",ZTSAVE("XQY")=ZTO,ZTUCI=$P(ZTU,","),ZTCPU=$P(ZTU,",",2) D ^%ZTLOAD
"RTN","ZTM0",20,0)
 . Q
"RTN","ZTM0",21,0)
 S ZTU="" F  S ZTU=$O(^%ZTSCH("C",ZTU)) Q:ZTU=""  S ^%ZTSCH("C",ZTU)=0 ;Reset VS counts in C list.
"RTN","ZTM0",22,0)
 K %ZTI,%ZTY,ZTIO,ZTO,ZTP,ZTSK,ZTU
"RTN","ZTM0",23,0)
 G ^%ZTM
"RTN","ZTM0",24,0)
 ;
"RTN","ZTM0",25,0)
RESTART ;Entry Point--restart Task Manager
"RTN","ZTM0",26,0)
 S X="ER^%ZTM5",@^%ZOSF("TRAP"),^%ZTSCH("ER")=""
"RTN","ZTM0",27,0)
 K ^%ZTSCH("STATUS"),^("STOP")
"RTN","ZTM0",28,0)
 D SETUP
"RTN","ZTM0",29,0)
 I '$D(^%ZTSCH("IDLE")) S ^%ZTSCH("IDLE")=0
"RTN","ZTM0",30,0)
 I '$D(^%ZTSCH("SUB",%ZTPAIR)) S ^%ZTSCH("SUB",%ZTPAIR)=0
"RTN","ZTM0",31,0)
 I "CFO"[%ZTYPE G BADTYPE
"RTN","ZTM0",32,0)
 D STATUS^%ZTM("RUN^Restart")
"RTN","ZTM0",33,0)
 G ^%ZTM
"RTN","ZTM0",34,0)
 ;
"RTN","ZTM0",35,0)
 ;
"RTN","ZTM0",36,0)
SETUP ;Setup Task Manager's Environment
"RTN","ZTM0",37,0)
 S ^%ZTSCH("RUN")=$H
"RTN","ZTM0",38,0)
 D STATUS^%ZTM("RUN^Setup")
"RTN","ZTM0",39,0)
 D ZOSF I Y]"" D STATUS^%ZTM("PAUSE^The following required ^%ZOSF nodes are undefined: "_Y_".") H 60 G SETUP
"RTN","ZTM0",40,0)
 S %ZTOS=^%ZOSF("OS"),U="^"
"RTN","ZTM0",41,0)
 D GETENV^%ZOSV S %ZTUCI=$P(Y,U),%ZTVOL=$P(Y,U,2),%ZTNODE=$P(Y,U,3),%ZTPAIR=$P(Y,U,4)
"RTN","ZTM0",42,0)
 D UPDATE^%ZTM5 I $D(ZTREQUIR)#2 D STATUS^%ZTM("PAUSE^Required link to "_ZTREQUIR_" is down.") H 60 G SETUP
"RTN","ZTM0",43,0)
 D JOB,NOLOG^%ZOSV S %ZTNLG=Y,DTIME=0,DUZ=0,DUZ(0)="@"
"RTN","ZTM0",44,0)
 K Z D NAME K X,Y,Z,ZT
"RTN","ZTM0",45,0)
 Q
"RTN","ZTM0",46,0)
 ;
"RTN","ZTM0",47,0)
ZOSF ;SETUP--determine whether any required ^%ZOSF nodes are missing
"RTN","ZTM0",48,0)
 S Y=""
"RTN","ZTM0",49,0)
 F X="ACTJ","ERRTN","OS","PROD","TRAP","UCI","UCICHECK","VOL" I $D(^%ZOSF(X))[0 S Y=Y_","_X
"RTN","ZTM0",50,0)
 I Y]"" S Y=$E(Y,2,$L(Y))
"RTN","ZTM0",51,0)
 Q
"RTN","ZTM0",52,0)
 ;
"RTN","ZTM0",53,0)
JOB ;SETUP--setup JOB command
"RTN","ZTM0",54,0)
 I %ZTOS["VAX DSM" D  Q
"RTN","ZTM0",55,0)
 . S:%ZTPFLG("DCL")="" %ZTJOB="J ^%ZTMS:(OPTION=""/UCI=""_$P(ZTUCI,"","")_""/VOL=""_ZTDVOL):5"
"RTN","ZTM0",56,0)
 . S:%ZTPFLG("DCL")]"" %ZTJOB="D ^%ZTMDCL"
"RTN","ZTM0",57,0)
 . Q
"RTN","ZTM0",58,0)
 ;I %ZTOS["DSM" S %ZTJOB="J ^%ZTMS[ZTUCI]:%ZTSIZ" Q
"RTN","ZTM0",59,0)
 I %ZTOS["M/SQL" S %ZTJOB="J ^%ZTMS:ZTUCI" Q
"RTN","ZTM0",60,0)
 I %ZTOS["MSM" S %ZTJOB="J ^%ZTMS[ZTUCI,ZTDVOL]:%ZTSIZ:5" Q  ;Set Maxpartsiz
"RTN","ZTM0",61,0)
 I %ZTOS["DTM" S %ZTJOB="J ^%ZTMS:(NSPACE=ZTUCI)" Q
"RTN","ZTM0",62,0)
 I %ZTOS["OpenM-NT" S %ZTJOB="J ^%ZTMS:ZTUCI" Q
"RTN","ZTM0",63,0)
 S %ZTJOB="Q"
"RTN","ZTM0",64,0)
 Q
"RTN","ZTM0",65,0)
 ;
"RTN","ZTM0",66,0)
NAME ;Give a name to process.
"RTN","ZTM0",67,0)
 S X="NAME^%ZTM0",@^%ZOSF("TRAP"),Z=$G(Z)+1 Q:Z>9  S X="Taskman "_%ZTVOL_" "_Z D SETENV^%ZOSV
"RTN","ZTM0",68,0)
 Q
"RTN","ZTM0",69,0)
BADTYPE ;Taskman should not run on this type of node.
"RTN","ZTM0",70,0)
 K ^%ZTSCH("STATUS")
"RTN","ZTM0",71,0)
 S ^%ZTSCH("RUN")=%ZTPAIR_" is the wrong type in taskman site parameters."
"RTN","ZTM0",72,0)
 Q
"RTN","ZTM5")
0^12^B10278881
"RTN","ZTM5",1,0)
%ZTM5 ;SEA/RDS-TaskMan: Manager, Part 7 (Short Subroutines) ;09/04/96  09:02
"RTN","ZTM5",2,0)
 ;;8.0;KERNEL;**24,36**;JUL 10, 1995
"RTN","ZTM5",3,0)
 ;
"RTN","ZTM5",4,0)
ER ;primary error trap for manager
"RTN","ZTM5",5,0)
 S %ZTERLGR=$$LGR^%ZOSV
"RTN","ZTM5",6,0)
 S X="ER^%ZTM5",@^%ZOSF("TRAP")
"RTN","ZTM5",7,0)
 L  S ^%ZTSCH("RUN")=$H
"RTN","ZTM5",8,0)
 S ^%ZTSCH("STATUS",$J)=$H_"^ERROR^Recording A Trapped Error."
"RTN","ZTM5",9,0)
 ;
"RTN","ZTM5",10,0)
 S ZTERCODE=$$EC^%ZOSV,ZTE=""
"RTN","ZTM5",11,0)
 F ZTI=1:0 S ZTE=$O(^%ZTSCH("ES",ZTE)) Q:ZTE=""  I ZTERCODE[ZTE S ZTI=0 Q
"RTN","ZTM5",12,0)
 I 'ZTI,'$O(^%ZTSCH("ES",ZTE,"")) G RESTART^%ZTM0
"RTN","ZTM5",13,0)
 I 'ZTI L ^%ZTSCH("ES",ZTE) S ^(1)=$S($D(^(1))[0:1,^(1)<1:1,1:^(1)+1) L  G RESTART^%ZTM0
"RTN","ZTM5",14,0)
 ;
"RTN","ZTM5",15,0)
 L ^%ZTSCH("ER") H 1 S ZT=$H
"RTN","ZTM5",16,0)
 S ^%ZTSCH("ER",+ZT,$P(ZT,",",2))=ZTERCODE
"RTN","ZTM5",17,0)
 S ^($P(ZT,",",2),1)="Caused by the manager." L
"RTN","ZTM5",18,0)
 ;
"RTN","ZTM5",19,0)
 D @^%ZOSF("ERRTN")
"RTN","ZTM5",20,0)
 C:$I>0 $I K ZTERCODE
"RTN","ZTM5",21,0)
 H 10 G RESTART^%ZTM0 ;Lets wait before restarting.
"RTN","ZTM5",22,0)
 ;
"RTN","ZTM5",23,0)
UPDATE ;CHECK^%ZTM/LOOKUP^%ZTM0--update TaskMan site parameters
"RTN","ZTM5",24,0)
 L ^%ZTSCH("UPDATE",$J)
"RTN","ZTM5",25,0)
 S %ZTVSN=+$O(^%ZIS(14.5,"B",%ZTVOL,"")),%ZTVSS=$G(^%ZIS(14.5,%ZTVSN,0))
"RTN","ZTM5",26,0)
 S %ZTVLI=($P(%ZTVSS,U,2)="Y") ;Did site set Inhibit.
"RTN","ZTM5",27,0)
 S %ZTYPE("V")=$P(%ZTVSS,U,10) ;get vol set type
"RTN","ZTM5",28,0)
U1 ;
"RTN","ZTM5",29,0)
 S %ZTPN=+$O(^%ZIS(14.7,"B",%ZTPAIR,"")),%ZTPS=$G(^%ZIS(14.7,%ZTPN,0))
"RTN","ZTM5",30,0)
 S %ZTPT=+$P(%ZTPS,U,4)
"RTN","ZTM5",31,0)
 S %ZTSIZ=+$P(%ZTPS,U,5) ;par size
"RTN","ZTM5",32,0)
 I '%ZTSIZ,%ZTOS'["VAX DSM",%ZTOS["DSM" S %ZTSIZ=32
"RTN","ZTM5",33,0)
 S %ZTRET=+$P(%ZTPS,U,6)
"RTN","ZTM5",34,0)
 S %ZTVMJ=+$P(%ZTPS,U,7) ;TM job limit
"RTN","ZTM5",35,0)
 S %ZTSLO=+$P(%ZTPS,U,8) ;TM slow down
"RTN","ZTM5",36,0)
 S %ZTYPE=$P(%ZTPS,U,9),%ZTPFLG("DCL")=$P(%ZTPS,U,10) ;TM mode, VAX DCL
"RTN","ZTM5",37,0)
 S %ZTPFLG("BAL")=$E($G(^%ZIS(14.7,%ZTPN,2)),1,20)
"RTN","ZTM5",38,0)
 S %ZTPFLG("MINSUB")=$S($P(%ZTPS,U,12):$P(%ZTPS,U,12),1:1)
"RTN","ZTM5",39,0)
 S %ZTPFLG("START")=+$H
"RTN","ZTM5",40,0)
 S ^%ZTSCH("UPDATE",$J)=$H
"RTN","ZTM5",41,0)
 L
"RTN","ZTM5",42,0)
 ;
"RTN","ZTM5",43,0)
REQUIR ;UPDATE/CHECK^%ZTM--ensure required links are available
"RTN","ZTM5",44,0)
 K ZTREQUIR
"RTN","ZTM5",45,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^%ZIS(14.5,ZT1)) Q:'ZT1  I $D(^%ZIS(14.5,ZT1,0))#2 S ZTS=^(0) I $P(ZTS,U,5)="Y" D TEST I $D(ZTREQUIR)#2 Q
"RTN","ZTM5",46,0)
 K ZT,ZT1,ZTN,ZTS,ZTU
"RTN","ZTM5",47,0)
 Q
"RTN","ZTM5",48,0)
 ;
"RTN","ZTM5",49,0)
TEST ;REQUIR--test a required volume set
"RTN","ZTM5",50,0)
 S ZTN=$P(ZTS,U) I ZTN="" Q
"RTN","ZTM5",51,0)
 I ZTN=%ZTVOL Q
"RTN","ZTM5",52,0)
 I $P(ZTS,U,3)="N" S ZTREQUIR=ZTN Q
"RTN","ZTM5",53,0)
 I $P(ZTS,U,4)="Y" S ZTREQUIR=ZTN Q
"RTN","ZTM5",54,0)
 S ZTU=$O(^%ZIS(14.6,"AV",ZTN,"")) I ZTU="" Q
"RTN","ZTM5",55,0)
 S X="ERTEST^%ZTM5",@^%ZOSF("TRAP")
"RTN","ZTM5",56,0)
 S X=$D(^[ZTU,ZTN]DIC(0))
"RTN","ZTM5",57,0)
 S X="",@^%ZOSF("TRAP")
"RTN","ZTM5",58,0)
 L ^%ZTSCH("LINK",ZTN)
"RTN","ZTM5",59,0)
 I $D(^%ZTSCH("LINK",ZTN)) S ^%ZTSCH("LINK")=0
"RTN","ZTM5",60,0)
 L  Q
"RTN","ZTM5",61,0)
 ;
"RTN","ZTM5",62,0)
ERTEST ;TEST--trap if required link is down
"RTN","ZTM5",63,0)
 S X="",@^%ZOSF("TRAP")
"RTN","ZTM5",64,0)
 S ZTREQUIR=ZTN
"RTN","ZTM5",65,0)
 Q
"RTN","ZTM5",66,0)
 ;
"RTN","ZTM5",67,0)
LINK(ZTVOL) ;internal Kernel extrinsic function
"RTN","ZTM5",68,0)
 ;input--volume set where task should run
"RTN","ZTM5",69,0)
 ;output--UCI,volume set where record must be created
"RTN","ZTM5",70,0)
 ;after call check 1--if value is "", the input or file is bad
"RTN","ZTM5",71,0)
 ;after call check 2--if $P(value,",",2) is current volume set then
"RTN","ZTM5",72,0)
 ;...no extended reference should be used
"RTN","ZTM5",73,0)
 ;
"RTN","ZTM5",74,0)
L0 ;was a volume set passed in?
"RTN","ZTM5",75,0)
 N ZTN,ZTU,ZTV,ZTVD,ZTVN
"RTN","ZTM5",76,0)
 I $G(ZTVOL)'?2.7U Q ""
"RTN","ZTM5",77,0)
 ;
"RTN","ZTM5",78,0)
L1 ;is this volume set on file?
"RTN","ZTM5",79,0)
 S ZTVN=$O(^%ZIS(14.5,"B",ZTVOL,""))
"RTN","ZTM5",80,0)
 I ZTVN="" Q ""
"RTN","ZTM5",81,0)
 I $D(^%ZIS(14.5,ZTVN,0))[0 Q ""
"RTN","ZTM5",82,0)
 S ZTVD=^%ZIS(14.5,ZTVN,0)
"RTN","ZTM5",83,0)
 ;
"RTN","ZTM5",84,0)
L2 ;is there a TaskMan Files Volume Set?  if not, skip next section
"RTN","ZTM5",85,0)
 S ZTN=$P(ZTVD,"^",7)
"RTN","ZTM5",86,0)
 I ZTN="" S ZTV=ZTVOL G L4
"RTN","ZTM5",87,0)
 ;
"RTN","ZTM5",88,0)
L3 ;if there is a separate TaskMan Files Volume Set, is it on file?
"RTN","ZTM5",89,0)
 I $D(^%ZIS(14.5,ZTN,0))[0 Q ""
"RTN","ZTM5",90,0)
 S ZTVD=^%ZIS(14.5,ZTN,0)
"RTN","ZTM5",91,0)
 S ZTV=$P(ZTVD,"^")
"RTN","ZTM5",92,0)
 I ZTV="" Q ""
"RTN","ZTM5",93,0)
 ;
"RTN","ZTM5",94,0)
L4 ;if there is a TaskMan Files UCI, return UCI,volume set
"RTN","ZTM5",95,0)
 S ZTU=$P(ZTVD,"^",6)
"RTN","ZTM5",96,0)
 I ZTU="" Q ""
"RTN","ZTM5",97,0)
 Q ZTU_","_ZTV
"RTN","ZTM5",98,0)
 ;
"RTN","ZTM5",99,0)
 ;
"RTN","ZTM5",100,0)
INHIBIT(Y) ;Set/Clear the Inhibit logon field
"RTN","ZTM5",101,0)
 I Y=1 S $P(^%ZIS(14.5,%ZTVSN,0),U,2)="S",^%ZIS(14.5,"LOGON",%ZTVOL)=1 Q
"RTN","ZTM5",102,0)
 I Y=0 S $P(^%ZIS(14.5,%ZTVSN,0),U,2)="N" K ^%ZIS(14.5,"LOGON",%ZTVOL) Q
"RTN","ZTM5",103,0)
 Q
"RTN","ZTMGRSET")
0^22^B28153462
"RTN","ZTMGRSET",1,0)
ZTMGRSET ;SLC/RWF,SF/AC-TO SET UP THE MGR ACCOUNT FOR THE SYSTEM ;10/16/96  15:02
"RTN","ZTMGRSET",2,0)
 ;;8.0;KERNEL;**36**;Dec 30, 1993
"RTN","ZTMGRSET",3,0)
 N %D,%S,I,OSMAX,U,X,X1,X2,Y,Z1,Z2,ZTOS,ZTMODE,SCR
"RTN","ZTMGRSET",4,0)
 S ZTMODE=0
"RTN","ZTMGRSET",5,0)
A W !!,"ZTMGRSET Version ",$P($T(+2),";",3),!,"HELLO! I exist to assist you in correctly initializing the MGR account",!,"or to update the current account."
"RTN","ZTMGRSET",6,0)
 I $D(^%ZOSF("UCI")) X ^%ZOSF("UCI") I Y'["MG" W $C(7),!!,"THIS MAY NOT BE THE MANAGER UCI.",!," I think it is ",Y,". Should I continue anyway? N//" R X:120 G A:"YNyn"'[$E(X) Q:"Nn"[$E(X)
"RTN","ZTMGRSET",7,0)
 S ZTOS=$$OS() I ZTOS'>0 W !,"Can't determine the OS type." Q
"RTN","ZTMGRSET",8,0)
 I ZTMODE D  I (PCNM<1)!(PCNM>999) W !,"Need a Patch number to load." Q
"RTN","ZTMGRSET",9,0)
 . R !!,"Patch number to load: ",PCNM:120 Q:(PCNM<1)!(PCNM>999)
"RTN","ZTMGRSET",10,0)
 . S SCR="I $P($T(+2^@X),"";"",5)?.E1P1"_$C(34)_PCNM_$C(34)_"1P.E"
"RTN","ZTMGRSET",11,0)
 . Q
"RTN","ZTMGRSET",12,0)
 ;
"RTN","ZTMGRSET",13,0)
 K ^%ZOSF("MASTER"),^("SIGNOFF") ;Remove old nodes.
"RTN","ZTMGRSET",14,0)
DOIT W !!,"I will now rename a group of routines specific to your operating system."
"RTN","ZTMGRSET",15,0)
 D @ZTOS,ALL,GLOBALS:'ZTMODE W !,"ALL DONE" Q
"RTN","ZTMGRSET",16,0)
 ;
"RTN","ZTMGRSET",17,0)
RELOAD ;Reload any patched routines
"RTN","ZTMGRSET",18,0)
 N %D,%S,I,OSMAX,U,X,X1,X2,Y,Z1,Z2,ZTOS,ZTMODE,SCR
"RTN","ZTMGRSET",19,0)
 S ZTMODE=1 G A
"RTN","ZTMGRSET",20,0)
 Q
"RTN","ZTMGRSET",21,0)
OS() ;Select the OS
"RTN","ZTMGRSET",22,0)
 S U="^",SCR="I 1" F I=1:1:20 S X=$T(@I) Q:X=""  S OSMAX=I
"RTN","ZTMGRSET",23,0)
B S Y=0,ZTOS=0 I $D(^%ZOSF("OS")) D
"RTN","ZTMGRSET",24,0)
 . S X1=$P(^%ZOSF("OS"),U),ZTOS=$$OSNUM W !,"I think you are using ",X1
"RTN","ZTMGRSET",25,0)
 W !,"Which MUMPS system should I install?",! F I=1:1:OSMAX W !,I," = ",$P($T(@I),";",3)
"RTN","ZTMGRSET",26,0)
 W !,"System: " W:ZTOS ZTOS,"//" R X:300 S:X="" X=ZTOS I X<1!(X>OSMAX) W !,"NOT A VALID CHOICE" Q:X[U 0 G B
"RTN","ZTMGRSET",27,0)
 Q X
"RTN","ZTMGRSET",28,0)
OSNUM() ;Return the OS number
"RTN","ZTMGRSET",29,0)
 N I,X1,X2,Y S Y=0,X1=$P($G(^%ZOSF("OS")),"^")
"RTN","ZTMGRSET",30,0)
 F I=1:1 S X2=$T(@I) Q:X2=""  I X2[X1 S Y=I Q
"RTN","ZTMGRSET",31,0)
 Q Y
"RTN","ZTMGRSET",32,0)
ALL W !!,"Now to load routines common to all systems."
"RTN","ZTMGRSET",33,0)
 D TM,ETRAP,DEV,OTHER
"RTN","ZTMGRSET",34,0)
 W !,"Installing ^%Z editor" D ^ZTEDIT
"RTN","ZTMGRSET",35,0)
 I 'ZTMODE W !,"Setting ^%ZIS('C')" K ^%ZIS("C") S ^%ZIS("C")="G ^%ZISC"
"RTN","ZTMGRSET",36,0)
 Q
"RTN","ZTMGRSET",37,0)
 ;
"RTN","ZTMGRSET",38,0)
TM S %S="ZTLOAD^ZTLOAD1^ZTLOAD2^ZTLOAD3^ZTLOAD4^ZTLOAD5^ZTLOAD6^ZTM^ZTM0^ZTM1^ZTM2^ZTM3^ZTM4^ZTM5^ZTM6^ZTMS^ZTMS0^ZTMS1^ZTMS2^ZTMS3^ZTMS4^ZTMS7^ZTMSH"
"RTN","ZTMGRSET",39,0)
 S %D="%ZTLOAD^%ZTLOAD1^%ZTLOAD2^%ZTLOAD3^%ZTLOAD4^%ZTLOAD5^%ZTLOAD6^%ZTM^%ZTM0^%ZTM1^%ZTM2^%ZTM3^%ZTM4^%ZTM5^%ZTM6^%ZTMS^%ZTMS0^%ZTMS1^%ZTMS2^%ZTMS3^%ZTMS4^%ZTMS7^%ZTMSH"
"RTN","ZTMGRSET",40,0)
 D MOVE
"RTN","ZTMGRSET",41,0)
 Q
"RTN","ZTMGRSET",42,0)
ETRAP S %S="ZTER^ZTER1",%D="%ZTER^%ZTER1" D MOVE
"RTN","ZTMGRSET",43,0)
 Q
"RTN","ZTMGRSET",44,0)
OTHER S %S="ZTPP^ZTP1^ZTRDEL^ZTMOVE",%D="%ZTPP^%ZTP1^%ZTRDEL^%ZTMOVE" D MOVE
"RTN","ZTMGRSET",45,0)
 Q
"RTN","ZTMGRSET",46,0)
DEV S %S="ZIS^ZIS1^ZIS2^ZIS3^ZIS5^ZIS6^ZIS7^ZISC^ZISS^ZISS1^ZISS2^ZISTCP"
"RTN","ZTMGRSET",47,0)
 S %D="%ZIS^%ZIS1^%ZIS2^%ZIS3^%ZIS5^%ZIS6^%ZIS7^%ZISC^%ZISS^%ZISS1^%ZISS2^%ZISTCP"
"RTN","ZTMGRSET",48,0)
 D MOVE
"RTN","ZTMGRSET",49,0)
 Q
"RTN","ZTMGRSET",50,0)
ZOSF(X) ;
"RTN","ZTMGRSET",51,0)
 X SCR I $T D @(U_X)
"RTN","ZTMGRSET",52,0)
 Q
"RTN","ZTMGRSET",53,0)
1 ;;VAX DSM(V6)
"RTN","ZTMGRSET",54,0)
 S %S="ZOSVVXD^ZTBKCVXD^ZIS4VXD^ZISHVXD^XUCIVXD^ZISETVXD"
"RTN","ZTMGRSET",55,0)
 D DES,MOVE
"RTN","ZTMGRSET",56,0)
 S %S="ZOSV1VXD^ZOSV2VXD^ZISFVXD^ZTMDCL",%D="%ZOSV1^%ZOSV2^%ZISF^%ZTMDCL"
"RTN","ZTMGRSET",57,0)
 D MOVE,ZOSF("ZOSFVXD")
"RTN","ZTMGRSET",58,0)
 Q
"RTN","ZTMGRSET",59,0)
2 ;;MSM-PC/PLUS;MSM for NT
"RTN","ZTMGRSET",60,0)
 ;- Use autostart to do ZTMB don't resave as STUSER
"RTN","ZTMGRSET",61,0)
 S %S="ZOSVMSM^ZTBKCMSM^ZIS4MSM^ZISHMSM^XUCIMSM^ZISETMSM"
"RTN","ZTMGRSET",62,0)
 D DES,MOVE
"RTN","ZTMGRSET",63,0)
 S %S="ZOSV2MSM^ZISFMSM",%D="%ZOSV2^%ZISF"
"RTN","ZTMGRSET",64,0)
 D MOVE,ZOSF("ZOSFMSM")
"RTN","ZTMGRSET",65,0)
 I $$VERSION^%ZOSV(1)["UNIX" S %S="ZISHMSU",%D="%ZISH" D MOVE
"RTN","ZTMGRSET",66,0)
 Q
"RTN","ZTMGRSET",67,0)
3 ;;OpenM for NT;ISM
"RTN","ZTMGRSET",68,0)
 S %S="ZOSVONT^^ZIS4ONT^ZISHONT^XUCIONT"
"RTN","ZTMGRSET",69,0)
 D DES,MOVE
"RTN","ZTMGRSET",70,0)
 D ZOSF("ZOSFONT")
"RTN","ZTMGRSET",71,0)
 Q
"RTN","ZTMGRSET",72,0)
4 ;;Datatree,DTM-PC,DT-MAX
"RTN","ZTMGRSET",73,0)
 S %S="ZOSVDTM^ZTBKCDTM^ZIS4DTM^ZISHDTM^XUCIDTM^ZISETDTM"
"RTN","ZTMGRSET",74,0)
 D DES,MOVE
"RTN","ZTMGRSET",75,0)
 S %S="ZOSV1DTM^ZISFDTM^ZTMB",%D="%ZOSV1^%ZISF^%ustart"
"RTN","ZTMGRSET",76,0)
 D MOVE,ZOSF("ZOSFDTM")
"RTN","ZTMGRSET",77,0)
 Q
"RTN","ZTMGRSET",78,0)
5 ;;MVX,ISM VAX
"RTN","ZTMGRSET",79,0)
 S %S="ZOSVMSQ^ZTBKCMSQ^ZIS4MSQ^ZISHMSQ^XUCIMSQ^ZISETMSQ"
"RTN","ZTMGRSET",80,0)
 D DES,MOVE
"RTN","ZTMGRSET",81,0)
 S %S="ZTMB^ZISFMSQ",%D="ZSTU^%ZISF"
"RTN","ZTMGRSET",82,0)
 D MOVE,ZOSF("ZOSFMSQ")
"RTN","ZTMGRSET",83,0)
 Q
"RTN","ZTMGRSET",84,0)
6 ;;ISM (UNIX, Open VMS)
"RTN","ZTMGRSET",85,0)
 S %S="ZOSVIS2^^ZIS4IS2^ZISHIS2^XUCIIS2^ZISETIS2"
"RTN","ZTMGRSET",86,0)
 D DES,MOVE
"RTN","ZTMGRSET",87,0)
 S %S="ZTMB^ZISFIS2",%D="ZSTU^%ZISF"
"RTN","ZTMGRSET",88,0)
 D MOVE,ZOSF("ZOSFIS2")
"RTN","ZTMGRSET",89,0)
 Q
"RTN","ZTMGRSET",90,0)
10 ;;NOT SUPPORTED
"RTN","ZTMGRSET",91,0)
 Q
"RTN","ZTMGRSET",92,0)
MOVE ;
"RTN","ZTMGRSET",93,0)
 F %=1:1:$L(%D,"^") S X=$P(%S,U,%),Y=$P(%D,U,%) I X]"",Y]"",$T(^@X)]"" X SCR I $T W !,"Loading ",X X "ZL @X ZS @Y" W ?20,"Saved as ",Y
"RTN","ZTMGRSET",94,0)
 Q
"RTN","ZTMGRSET",95,0)
DES S %D="%ZOSV^%ZTBKC1^%ZIS4^%ZISH^%XUCI^ZISETUP" Q
"RTN","ZTMGRSET",96,0)
 ;
"RTN","ZTMGRSET",97,0)
GLOBALS ;Set node zero of file #3.05 & #3.07
"RTN","ZTMGRSET",98,0)
 W !!,"Now, I will check your % globals."
"RTN","ZTMGRSET",99,0)
 W ".........."
"RTN","ZTMGRSET",100,0)
 F %="^%ZIS","^%ZISL","^%ZTER","^%ZUA" S:'$D(@%) @%=""
"RTN","ZTMGRSET",101,0)
 S:$D(^%ZTSK(0))[0 ^%ZTSK(-1)=100,^%ZTSCH=""
"RTN","ZTMGRSET",102,0)
 S Z1=$G(^%ZTSK(-1),-1),Z2=$G(^%ZTSK(0))
"RTN","ZTMGRSET",103,0)
 I Z1'=$P(Z2,"^",3) S:Z1'>0 ^%ZTSK(-1)=+Z2 S ^%ZTSK(0)="TASK'S^14.4^"_^%ZTSK(-1)
"RTN","ZTMGRSET",104,0)
 S:$D(^%ZUA(3.05,0))[0 ^%ZUA(3.05,0)="FAILED ACCESS ATTEMPTS LOG^3.05^^"
"RTN","ZTMGRSET",105,0)
 S:$D(^%ZUA(3.07,0))[0 ^%ZUA(3.07,0)="PROGRAMMER MODE LOG^3.07^^"
"RTN","ZTMGRSET",106,0)
 Q
"RTN","ZTMGRSET",107,0)
NAME ;Setup the static names for this system
"RTN","ZTMGRSET",108,0)
MGR W !,"NAME OF MANAGER'S UCI,VOLUME SET: "_^%ZOSF("MGR")_"// " R X:$S($G(DTIME):DTIME,1:9999) I X]"" X ^("UCICHECK") G MGR:0[Y S ^%ZOSF("MGR")=X
"RTN","ZTMGRSET",109,0)
PROD W !,"PRODUCTION (SIGN-ON) UCI,VOLUME SET: "_^%ZOSF("PROD")_"// " R X:$S($G(DTIME):DTIME,1:9999) I X]"" X ^("UCICHECK") G PROD:0[Y S ^%ZOSF("PROD")=Y
"RTN","ZTMGRSET",110,0)
VOL W !,"NAME OF VOLUME SET: "_^%ZOSF("VOL")_"//" R X:$S($G(DTIME):DTIME,1:9999) I X]"" S:X?3U ^%ZOSF("VOL")=X I X'?3U W "MUST BE 3 Upper case." G VOL
"RTN","ZTMGRSET",111,0)
 W ! Q
"RTN","ZTMON1")
0^17^B12260259
"RTN","ZTMON1",1,0)
ZTMON1 ;SEA/RDS-TaskMan: Option, ZTMON, Part 2 (Main Loop) ;09/04/96  09:17
"RTN","ZTMON1",2,0)
 ;;8.0;KERNEL;**36**;Jul 10, 1995
"RTN","ZTMON1",3,0)
IO ;Evaluate Waiting Lists
"RTN","ZTMON1",4,0)
 S ZT1=$$H3^%ZTMS1($H),ZT2=$G(^%ZTSCH("IO")),ZT=$$DIFF^%ZTMS1(ZT1,+ZT2,1)
"RTN","ZTMON1",5,0)
 W !!,"Checking the IO Lists:" I $D(^%ZTSCH("IO"))>2 W:+ZT2 "  Last TM scan: ",ZT," sec, " W:$P(ZT2,"^",2)]"" "Last Dev: ",$P(ZT2,"^",2)
"RTN","ZTMON1",6,0)
 S ZT1="",ZTT=0
"RTN","ZTMON1",7,0)
I0 S ZT1=$O(^%ZTSCH("IO",ZT1)) I ZT1="" W:ZTT=0 !?5,"There are no tasks waiting for devices." G JOB
"RTN","ZTMON1",8,0)
 W !?5,"Device: ",ZT1 S Y=1 I ZT1'=$I S X=ZT1,X1=$G(^%ZTSCH("IO",ZT1)) D DEVOK^%ZOSV
"RTN","ZTMON1",9,0)
 W $S(Y:" is not available,",$D(^%ZTSCH("DEV",ZT1)):" is allocated,",1:" is AVAILABLE,")
"RTN","ZTMON1",10,0)
 S ZTC=0,ZT2="" F ZT=0:0 S ZT2=$O(^%ZTSCH("IO",ZT1,ZT2)),ZT3="" Q:'ZT2  F ZT=0:0 S ZT3=$O(^%ZTSCH("IO",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTC=ZTC+1,ZTT=1
"RTN","ZTMON1",11,0)
 W " and there ",$S(ZTC=1:"is one task",1:"are "_ZTC_" tasks")," waiting." W:ZTC>50 $C(7)
"RTN","ZTMON1",12,0)
 G I0
"RTN","ZTMON1",13,0)
 ;
"RTN","ZTMON1",14,0)
JOB ;Evaluate Job List
"RTN","ZTMON1",15,0)
 W !!,"Checking the Job List:"
"RTN","ZTMON1",16,0)
 S ZTC=0,ZT1="" F ZT=0:0 S ZT1=$O(^%ZTSCH("JOB",ZT1)),ZT2=0 Q:ZT1=""  F ZT=0:0 S ZT2=$O(^%ZTSCH("JOB",ZT1,ZT2)) Q:'ZT2  S ZTC=ZTC+1
"RTN","ZTMON1",17,0)
 W !?5,"There ",$S(ZTC=0:"are no tasks",ZTC=1:"is 1 task",1:"are "_ZTC_" tasks")," waiting for ",$S(ZTC'=1:"partitions.",1:"a partition.") W:ZTC>20 $C(7)
"RTN","ZTMON1",18,0)
 ;
"RTN","ZTMON1",19,0)
C ;Evaluate Cross CPU list
"RTN","ZTMON1",20,0)
 S ZT1=""
"RTN","ZTMON1",21,0)
 F  S ZT1=$O(^%ZTSCH("C",ZT1)) Q:ZT1=""  S ZTC=+$G(^(ZT1)) D
"RTN","ZTMON1",22,0)
 . S ZTCO=0,ZT2=""
"RTN","ZTMON1",23,0)
 . F  S ZT2=$O(^%ZTSCH("C",ZT1,ZT2)),ZT3=0 Q:ZT2=""  F  S ZT3=$O(^%ZTSCH("C",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTCO=ZTCO+1
"RTN","ZTMON1",24,0)
 . W !?5,"For ",ZT1," there ",$S(ZTCO=1:"is ",1:"are "),ZTCO," tasks.  "
"RTN","ZTMON1",25,0)
 . W $S(ZTC>8:"Not responding",$$OOS^%ZTM(ZT1):"Out Of Service",'$D(^%ZIS(14.7,"B",ZT1)):"Not defined",1:"")
"RTN","ZTMON1",26,0)
 . Q
"RTN","ZTMON1",27,0)
TASK ;Evaluate Task List
"RTN","ZTMON1",28,0)
 W !!,"Checking the Task List:"
"RTN","ZTMON1",29,0)
 S ZTC=0 F ZT1=0:0 S ZT1=$O(^%ZTSCH("TASK",ZT1)) Q:'ZT1  S ZTC=ZTC+1
"RTN","ZTMON1",30,0)
 W !?5,"There ",$S(ZTC=0:"are no tasks",ZTC=1:"is 1 task",1:"are "_ZTC_" tasks")," currently running."
"RTN","ZTMON1",31,0)
 ;
"RTN","ZTMON1",32,0)
SUB ;Look for idle submanagers
"RTN","ZTMON1",33,0)
 N %N S %N="" F  S %N=$O(^%ZTSCH("SUB",%N)) Q:%N=""  D
"RTN","ZTMON1",34,0)
 . S %=$G(^%ZTSCH("SUB",%N))
"RTN","ZTMON1",35,0)
 . W !?5,"On node ",%N," there ",$S('%:"are no",%=1:"is 1",1:"are "_%)," free Sub-Manager(s)."
"RTN","ZTMON1",36,0)
 . I $G(^%ZTSCH("SUB",%N,0))>5 W !?10,"SUB-MANAGERS ARE NOT STARTING."
"RTN","ZTMON1",37,0)
 . Q
"RTN","ZTMON1",38,0)
 ;
"RTN","ZTMON1",39,0)
DONE ;Prompt to Quit Or Continue
"RTN","ZTMON1",40,0)
 W !!,"Enter monitor action: UPDATE// "
"RTN","ZTMON1",41,0)
 R ZTR:$S($D(DTIME)#2:DTIME,1:60) S:ZTR="" ZTR="U"
"RTN","ZTMON1",42,0)
 I "Ee"[$E(ZTR) Q:$$CALL("LIST^XUTMKE")  G DONE
"RTN","ZTMON1",43,0)
 I "Ss"[$E(ZTR) W @IOF X ^%ZOSF("SS") G DONE
"RTN","ZTMON1",44,0)
 I "Pp"[$E(ZTR) W @IOF D PARAMS^ZTMCHK G DONE
"RTN","ZTMON1",45,0)
 I ZTR="^"!(ZTR="@") Q
"RTN","ZTMON1",46,0)
 I ZTR'["?" G RUN^ZTMON
"RTN","ZTMON1",47,0)
 I ZTR="??" Q:$$CALL("SELECT^XUTMONH")  G RUN^ZTMON
"RTN","ZTMON1",48,0)
 W !!?5,"Enter <RETURN> to update the monitor screen."
"RTN","ZTMON1",49,0)
 W !?5,"Enter ^ to exit the monitor."
"RTN","ZTMON1",50,0)
 W !?5,"Enter E to inspect the TaskMan Error file."
"RTN","ZTMON1",51,0)
 W !?5,"Enter S to see a system status listing."
"RTN","ZTMON1",52,0)
 W !?5,"Enter ? to see this message."
"RTN","ZTMON1",53,0)
 W !?5,"Enter ?? to inspect the tasks in the monitor's lists."
"RTN","ZTMON1",54,0)
 G DONE
"RTN","ZTMON1",55,0)
 ;
"RTN","ZTMON1",56,0)
CALL(RTN) ;Check for called routine
"RTN","ZTMON1",57,0)
 N DUOUT
"RTN","ZTMON1",58,0)
 I $D(^DIC(19,0))[0 W !,"In the wrong account." Q 0
"RTN","ZTMON1",59,0)
 D @RTN Q $D(DUOUT)
"RTN","ZTMON1",60,0)
 ;
"RTN","ZTMS")
0^10^B12157337
"RTN","ZTMS",1,0)
%ZTMS ;SEA/RDS-TaskMan: Submanager, (Entry & Trap) ;9/17/96  14:06
"RTN","ZTMS",2,0)
 ;;8.0;KERNEL;**2,18,24,36**;Jul 10, 1995
"RTN","ZTMS",3,0)
 ;
"RTN","ZTMS",4,0)
START ;Bottom level of submanager
"RTN","ZTMS",5,0)
 I $$NEWERR^%ZTER() S $ETRAP="S %ZTER11S=$STACK D ERROR^%ZTMS HALT"
"RTN","ZTMS",6,0)
 E  S X="ERROR^%ZTMS",@^%ZOSF("TRAP")
"RTN","ZTMS",7,0)
 I $D(^%ZTSCH("STOP")) Q
"RTN","ZTMS",8,0)
 S ZTQUEUED=0,U="^"
"RTN","ZTMS",9,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$STRT ZTMS")
"RTN","ZTMS",10,0)
 S X="Sub "_$J D SETENV^%ZOSV
"RTN","ZTMS",11,0)
 D PARAMS G:$D(ZTOUT) QUIT
"RTN","ZTMS",12,0)
 S ^%ZTSCH("SUB",ZTPFLG("HOME"),0)=0
"RTN","ZTMS",13,0)
 G SUBMGR^%ZTMS1
"RTN","ZTMS",14,0)
 ;
"RTN","ZTMS",15,0)
QUIT I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$STOP ZTMS")
"RTN","ZTMS",16,0)
 Q
"RTN","ZTMS",17,0)
PARAMS ;
"RTN","ZTMS",18,0)
 ;START--lookup parameters
"RTN","ZTMS",19,0)
 X ^%ZOSF("PRIINQ") S %ZTMS("PRIO")=Y ;Get starting priority
"RTN","ZTMS",20,0)
 D GETENV^%ZOSV
"RTN","ZTMS",21,0)
 S ZTCPU=$P(Y,U,2),ZTNODE=$P(Y,U,3),ZTPAIR=$P(Y,U,4),ZTUCI=$P(Y,U)_$S(ZTCPU]"":","_ZTCPU,1:"")
"RTN","ZTMS",22,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,0)),ZTPFLG("RT")=0,ZTPFLG("MIN")=1,ZTYPE=""
"RTN","ZTMS",23,0)
 I X>0 S %=$G(^%ZIS(14.7,X,0)) D
"RTN","ZTMS",24,0)
 . S ZTPFLG("RT")=+$P(%,U,6),ZTYPE=$P(%,U,9) S:$P(%,U,12)>1 ZTPFLG("MIN")=$P(%,U,12)
"RTN","ZTMS",25,0)
 . S ZTPFLG("HOME")=$S($P(%,U,13):$P(^%ZIS(14.7,+$P(%,U,13),0),U),1:ZTPAIR)
"RTN","ZTMS",26,0)
 . Q
"RTN","ZTMS",27,0)
 I "FO"[ZTYPE S ZTOUT=1 Q  ;SM only run on C,P,G types
"RTN","ZTMS",28,0)
 Q
"RTN","ZTMS",29,0)
ERROR ;START--trap
"RTN","ZTMS",30,0)
 ;prepare to handle error, set backup trap
"RTN","ZTMS",31,0)
 S %ZTERLGR=$$LGR^%ZOSV
"RTN","ZTMS",32,0)
 S %ZTME=$$EC^%ZOSV,ZTERROH=$H
"RTN","ZTMS",33,0)
 I $$NEWERR^%ZTER() S $ETRAP="D ERROR2^%ZTMS0 HALT"
"RTN","ZTMS",34,0)
 E  S %ZX=$G(X,"undef"),X="ERROR2^%ZTMS0",@^%ZOSF("TRAP")
"RTN","ZTMS",35,0)
 S %ZTMETSK=$S($D(%ZTTV)#2:$P(%ZTTV,"^",4),$G(ZTSK)>0:ZTSK,1:0)
"RTN","ZTMS",36,0)
 I %ZTMETSK L ^%ZTSK(%ZTMETSK) ;Unlock all other locks
"RTN","ZTMS",37,0)
 I $G(IO)]"" L +^%ZTSCH("DEV",IO) ;Keep other tasks from IO device.
"RTN","ZTMS",38,0)
 ;Check if to record error
"RTN","ZTMS",39,0)
 I '$$SCREEN^%ZTER(%ZTME) D
"RTN","ZTMS",40,0)
 . D ^%ZTER ;Kernel error file
"RTN","ZTMS",41,0)
 . ;log error and context in TaskMan Error file
"RTN","ZTMS",42,0)
 . L +^%ZTSCH("ER") H 1 S ZTERROH=$H
"RTN","ZTMS",43,0)
 . S ^%ZTSCH("ER",+ZTERROH,$P(ZTERROH,",",2))=%ZTME
"RTN","ZTMS",44,0)
 . D XREF^%ZTMS0
"RTN","ZTMS",45,0)
 . S ^%ZTSCH("ER",+ZTERROH,$P(ZTERROH,",",2),1)=ZTERROX1
"RTN","ZTMS",46,0)
 . L -^%ZTSCH("ER")
"RTN","ZTMS",47,0)
 . Q
"RTN","ZTMS",48,0)
 ;
"RTN","ZTMS",49,0)
 I $D(ZTDEVOK) S $P(^%ZTSCH("IO"),U,2)=ZTDEVOK ;Have others skip dev.
"RTN","ZTMS",50,0)
 ;Update Task file entry
"RTN","ZTMS",51,0)
 I $G(ZTQUEUED),%ZTMETSK,$D(^%ZTSK(%ZTMETSK)) D STATUS^%ZTMS0
"RTN","ZTMS",52,0)
 ;
"RTN","ZTMS",53,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$ETRP ZTMS")
"RTN","ZTMS",54,0)
 I ZTQUEUED>.9,%ZTMETSK>0,$G(DUZ)>.9,$D(^DD(8992,.01,0)) D
"RTN","ZTMS",55,0)
 . S XQA(DUZ)="",XQAMSG="Your task #"_%ZTMETSK_" stopped because of an error",XQADATA=%ZTMETSK,XQAROU="XQA^XUTMUTL"
"RTN","ZTMS",56,0)
 . D SETUP^XQALERT Q
"RTN","ZTMS",57,0)
 ;
"RTN","ZTMS",58,0)
CLEAN ;clean up global data related to this process
"RTN","ZTMS",59,0)
 I $G(ZTQUEUED)>.9 K ^%ZTSCH("TASK",ZTQUEUED)
"RTN","ZTMS",60,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS",61,0)
 I '$G(ZTQUEUED) D SUB^%ZTMS1(-1)
"RTN","ZTMS",62,0)
 I $D(ZTDEVN)#2,$D(%ZTIO)#2,%ZTIO]"" D DEVLK^%ZTMS1(-1,%ZTIO)
"RTN","ZTMS",63,0)
 I $D(ZTDEVOK)#2 D DEVBAD^%ZTMS0
"RTN","ZTMS",64,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2("S",ZTSYNCFL,"","Stopped because of an error")
"RTN","ZTMS",65,0)
 ;
"RTN","ZTMS",66,0)
CLOSE ;close i/o device after error
"RTN","ZTMS",67,0)
 D ERCLOZ^%ZTMS0
"RTN","ZTMS",68,0)
 I $G(IO)]"" C IO H 5 ;In case of a port problem give it time to reset.
"RTN","ZTMS",69,0)
 ;
"RTN","ZTMS",70,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$ESTP ZTMS")
"RTN","ZTMS",71,0)
 I ZTQUEUED=.5,%ZTMETSK>0,$P($G(^%ZTSK(%ZTMETSK,.12)),"^")<5 D  ;Only try 5 times
"RTN","ZTMS",72,0)
 . S $P(^(.12),"^")=^%ZTSK(%ZTMETSK,.12)+1
"RTN","ZTMS",73,0)
 . S ^%ZTSCH($$NEWH^%ZTMS2($H,600),%ZTMETSK)=""
"RTN","ZTMS",74,0)
 HALT  ;Start a new process to continue
"RTN","ZTMS1")
0^9^B20410757
"RTN","ZTMS1",1,0)
%ZTMS1 ;SEA/RDS-TaskMan: Submanager, Part 3 (Loop & Get Task) ;11/08/96  15:53
"RTN","ZTMS1",2,0)
 ;;8.0;KERNEL;**36**;JUL 10, 1995
"RTN","ZTMS1",3,0)
 ;
"RTN","ZTMS1",4,0)
SUBMGR ;START--outer submanager loop
"RTN","ZTMS1",5,0)
 D GETTASK G:ZTSK'>0 QUIT^%ZTMS ;task locked
"RTN","ZTMS1",6,0)
 D PROCESS^%ZTMS2 G:$D(ZTQUIT) QUIT^%ZTMS
"RTN","ZTMS1",7,0)
 G SUBMGR
"RTN","ZTMS1",8,0)
 ;
"RTN","ZTMS1",9,0)
GETTASK ;SUBMGR--retain the partition; check Waiting Lists every 5 seconds
"RTN","ZTMS1",10,0)
 I ZTYPE="C" D C Q
"RTN","ZTMS1",11,0)
 D SUB(1) S ZTSK=0
"RTN","ZTMS1",12,0)
 F ZT=0:0 D  Q:$$EXIT  S %=$S($O(^%ZTSCH("JOB",0))>0:2,1:($$SUB(0)\2+5)),ZT=ZT+% H % ;Space out the SM loop
"RTN","ZTMS1",13,0)
 . S %ZTIME=$$H3($H),ZTSK=0 I $D(^%ZTSCH("STOP")) Q
"RTN","ZTMS1",14,0)
 . I $$BALANCE S ZT=ZT+5 Q
"RTN","ZTMS1",15,0)
 . D JOB,IOQ:'ZTSK
"RTN","ZTMS1",16,0)
 . Q
"RTN","ZTMS1",17,0)
 Q
"RTN","ZTMS1",18,0)
 ;
"RTN","ZTMS1",19,0)
EXIT() ;GETTASK--decide whether to exit retention loop
"RTN","ZTMS1",20,0)
 I ZTSK,$D(^%ZTSCH("NO-OPTION")),$P(^%ZTSK(ZTSK,0),"^",1,2)="ZTSK^XQ1" D
"RTN","ZTMS1",21,0)
 . S ^%ZTSCH(ZTDTH+60,ZTSK)=%ZTIO,ZTSK=0
"RTN","ZTMS1",22,0)
 . Q
"RTN","ZTMS1",23,0)
 I ZTSK G YES
"RTN","ZTMS1",24,0)
 I $D(^%ZTSCH("STOP")) G YES
"RTN","ZTMS1",25,0)
 I ZTPFLG("RT")>ZT G NO ;Retention time check
"RTN","ZTMS1",26,0)
 I $D(^%ZTSCH("JOB")) G NO ;Keep going if anything in JOB list
"RTN","ZTMS1",27,0)
 I $$SUB(0)>ZTPFLG("MIN") G YES ;Let extras go
"RTN","ZTMS1",28,0)
NO ;EXIT--Don't exit
"RTN","ZTMS1",29,0)
 L  Q 0
"RTN","ZTMS1",30,0)
 ;
"RTN","ZTMS1",31,0)
YES ;EXIT--adjust counter and set flags
"RTN","ZTMS1",32,0)
 D SUB(-1)
"RTN","ZTMS1",33,0)
 Q 1
"RTN","ZTMS1",34,0)
 ;
"RTN","ZTMS1",35,0)
C ;GETTASK--On C type volume sets, get tasks from Cross-Volume Job List
"RTN","ZTMS1",36,0)
 L +^%ZTSCH("C",ZTPAIR)
"RTN","ZTMS1",37,0)
 S ZTDTH="",^%ZTSCH("C",ZTPAIR)=0
"RTN","ZTMS1",38,0)
 F  S ZTDTH=$O(^%ZTSCH("C",ZTPAIR,ZTDTH)),ZTSK=0 Q:ZTDTH=""  D  Q:ZTSK
"RTN","ZTMS1",39,0)
 . F  S ZTSK=$O(^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK)) Q:ZTSK=""  D  Q:ZTSK
"RTN","ZTMS1",40,0)
 .. I $D(^%ZTSK(ZTSK,0))[0!'ZTSK D  Q
"RTN","ZTMS1",41,0)
 ... I ZTSK'=0,$D(^%ZTSK(ZTSK)) S $P(^(ZTSK,.1),U,1,3)="I^"_$H_"^G"
"RTN","ZTMS1",42,0)
 ... K ^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK) S ZTSK=0
"RTN","ZTMS1",43,0)
 ... Q
"RTN","ZTMS1",44,0)
 .. S %ZTIO=^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK),ZTQUEUED=.5
"RTN","ZTMS1",45,0)
 .. I %ZTIO]"" S ZTDEVN=1
"RTN","ZTMS1",46,0)
 .. L +^%ZTSK(ZTSK) K ^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK)
"RTN","ZTMS1",47,0)
 .. S ZTREC1=$G(^%ZTSK(ZTSK,.1))
"RTN","ZTMS1",48,0)
 .. I $P(ZTREC1,U,10)]"" S $P(^%ZTSK(ZTSK,.1),U,1,3)="D^"_$H_"^G"
"RTN","ZTMS1",49,0)
 .. Q
"RTN","ZTMS1",50,0)
 . Q
"RTN","ZTMS1",51,0)
 I $D(^%ZTSCH("C",ZTPAIR))=1 K ^%ZTSCH("C",ZTPAIR)
"RTN","ZTMS1",52,0)
 L -^%ZTSCH("C",ZTPAIR)
"RTN","ZTMS1",53,0)
 Q
"RTN","ZTMS1",54,0)
 ;
"RTN","ZTMS1",55,0)
BALANCE() ;GETTASK--check load balance, and wait while Manager waits
"RTN","ZTMS1",56,0)
 Q:ZTPAIR="" 0
"RTN","ZTMS1",57,0)
 I $G(^%ZTSCH("LOADA",ZTPAIR))  H 5 Q 1
"RTN","ZTMS1",58,0)
 Q 0
"RTN","ZTMS1",59,0)
 ;
"RTN","ZTMS1",60,0)
JOB ;GETTASK--search Partition Waiting List
"RTN","ZTMS1",61,0)
 S ZTSK="",ZTDTH=""
"RTN","ZTMS1",62,0)
J2 S ZTDTH=$O(^%ZTSCH("JOB",ZTDTH)),ZTSK="" I ZTDTH="" Q
"RTN","ZTMS1",63,0)
J3 L  S ZTSK=$O(^%ZTSCH("JOB",ZTDTH,ZTSK)) I ZTSK="" G J2
"RTN","ZTMS1",64,0)
 L +^%ZTSK(ZTSK):2 G J3:'$T I $D(^%ZTSCH("JOB",ZTDTH,ZTSK))[0 G J3
"RTN","ZTMS1",65,0)
 I $D(^%ZTSK(ZTSK,0))[0!'ZTSK D BADTASK G J3
"RTN","ZTMS1",66,0)
 S %ZTIO=^%ZTSCH("JOB",ZTDTH,ZTSK) I %ZTIO]"" S ZTDEVN=1
"RTN","ZTMS1",67,0)
 S ZTQUEUED=.5 K ^%ZTSCH("JOB",ZTDTH,ZTSK)
"RTN","ZTMS1",68,0)
 I $D(^%ZTSK(ZTSK,.1))#2,$P(^(.1),U,10)]"" S $P(^(.1),U,1,3)="D^"_$H_"^3",ZTQUEUED=0 G J3
"RTN","ZTMS1",69,0)
 Q
"RTN","ZTMS1",70,0)
 ;
"RTN","ZTMS1",71,0)
BADTASK ;JOB--unschedule tasks with bad numbers or incomplete records
"RTN","ZTMS1",72,0)
 S %ZTIO=^%ZTSCH("JOB",ZTDTH,ZTSK) I %ZTIO]"" S ZTDEVN=1
"RTN","ZTMS1",73,0)
 I ZTSK'=0,$D(^%ZTSK(ZTSK)) S $P(^(ZTSK,.1),U,1,3)="I^"_$H_U_3
"RTN","ZTMS1",74,0)
 S ZTQUEUED=.5 K ^%ZTSCH("JOB",ZTDTH,ZTSK)
"RTN","ZTMS1",75,0)
 I %ZTIO]"" D DEVLK(-1,%ZTIO)
"RTN","ZTMS1",76,0)
 Q
"RTN","ZTMS1",77,0)
 ;
"RTN","ZTMS1",78,0)
IOQ ;GETTASK--search Device Waiting List, Lock IO then DEV.
"RTN","ZTMS1",79,0)
 S ZTSK=0 I '$D(^%ZTSCH("IO")) Q
"RTN","ZTMS1",80,0)
 L +^%ZTSCH("IO"):1 Q:'$T
"RTN","ZTMS1",81,0)
 S ZTH=$$H3($H),ZTI=$G(^%ZTSCH("IO")) I $$DIFF(ZTH,ZTI,1)'>15 L -^%ZTSCH("IO") Q
"RTN","ZTMS1",82,0)
 S $P(^%ZTSCH("IO"),"^")=%ZTIME,%ZTIO=$P(ZTI,"^",2)
"RTN","ZTMS1",83,0)
I2 S %ZTIO=$O(^%ZTSCH("IO",%ZTIO)),ZTDTH="" I %ZTIO="" G IOX
"RTN","ZTMS1",84,0)
 I $D(^%ZTSCH("IO",%ZTIO))=1 K ^%ZTSCH("IO",%ZTIO) G I2
"RTN","ZTMS1",85,0)
 G I2:'$$DEVLK(1,%ZTIO)
"RTN","ZTMS1",86,0)
 S X=%ZTIO,X1=$G(^%ZTSCH("IO",%ZTIO)),ZTDEVOK=X D DEVOK^%ZOSV I Y D DEVLK(-1,%ZTIO) G I2
"RTN","ZTMS1",87,0)
I3 S ZTDTH=$O(^%ZTSCH("IO",%ZTIO,ZTDTH)),ZTSK=0 I ZTDTH="" D DEVLK(-1,%ZTIO) G I2
"RTN","ZTMS1",88,0)
I5 S ZTSK=$O(^%ZTSCH("IO",%ZTIO,ZTDTH,ZTSK)) I ZTSK'>0 G I3
"RTN","ZTMS1",89,0)
 L +^%ZTSK(ZTSK):2 G I5:('$T)
"RTN","ZTMS1",90,0)
 ;I $D(^%ZTSK(ZTSK,0))[0!'ZTSK S:ZTSK'=0&$D(^%ZTSK(ZTSK)) $P(^(ZTSK,.1),U,1,3)="I^"_$H_"^A" D DQ^%ZTM4 G I5
"RTN","ZTMS1",91,0)
 S ZTQUEUED=.5 D DQ^%ZTM4 I $G(^%ZTSK(ZTSK,0))="" L -^%ZTSK(ZTSK) G I5
"RTN","ZTMS1",92,0)
 I $P($G(^%ZTSK(ZTSK,.1)),U,10)]"" S $P(^(.1),U,1,3)="D^"_$H_"^A" S ZTQUEUED=0 L -^%ZTSK(ZTSK) G I5
"RTN","ZTMS1",93,0)
 S ZTH=0
"RTN","ZTMS1",94,0)
IOX S ^%ZTSCH("IO")=ZTH_"^"_%ZTIO L -^%ZTSCH("IO")
"RTN","ZTMS1",95,0)
 K ZTDEVOK,%ZISCHK
"RTN","ZTMS1",96,0)
 Q
"RTN","ZTMS1",97,0)
 ;
"RTN","ZTMS1",98,0)
DEVLK(X,ZIO) ;1=Lock/-1=unlock the ^%ZTSCH("DEV",ZIO) node, 0=set node only.
"RTN","ZTMS1",99,0)
 I X<0 K ^%ZTSCH("DEV",ZIO) L -^%ZTSCH("DEV",ZIO) Q
"RTN","ZTMS1",100,0)
 L +^%ZTSCH("DEV",ZIO):5 I '$T Q 0
"RTN","ZTMS1",101,0)
 I $D(^%ZTSCH("DEV",ZIO)) L -^%ZTSCH("DEV",ZIO) Q 0
"RTN","ZTMS1",102,0)
 S ^%ZTSCH("DEV",ZIO)=$$H3($H)
"RTN","ZTMS1",103,0)
 I X=0 L -^%ZTSCH("DEV",ZIO)
"RTN","ZTMS1",104,0)
 Q 1
"RTN","ZTMS1",105,0)
 ;
"RTN","ZTMS1",106,0)
SUB(X) ;Inc/Dec SUB or return SUB count
"RTN","ZTMS1",107,0)
 N % L +^%ZTSCH("SUB",ZTPFLG("HOME"))
"RTN","ZTMS1",108,0)
 I X>0 S ^(ZTPFLG("HOME"))=$S($G(^%ZTSCH("SUB",ZTPFLG("HOME")))<1:1,1:^(ZTPFLG("HOME"))+1)
"RTN","ZTMS1",109,0)
 I X<0 S ^(ZTPFLG("HOME"))=$S($G(^%ZTSCH("SUB",ZTPFLG("HOME")))<2:0,1:^(ZTPFLG("HOME"))-1)
"RTN","ZTMS1",110,0)
 I X=0 S %=^%ZTSCH("SUB",ZTPFLG("HOME"))
"RTN","ZTMS1",111,0)
 L -^%ZTSCH("SUB",ZTPFLG("HOME"))
"RTN","ZTMS1",112,0)
 Q:$D(%) % Q
"RTN","ZTMS1",113,0)
 ;
"RTN","ZTMS1",114,0)
DIFF(N,O,T) ;Diff in sec.
"RTN","ZTMS1",115,0)
 Q:$G(T) N-O ;For new seconds times
"RTN","ZTMS1",116,0)
 Q N-O*86400-$P(O,",",2)+$P(N,",",2)
"RTN","ZTMS1",117,0)
 ;
"RTN","ZTMS1",118,0)
H3(%) ;Convert $H to seconds.
"RTN","ZTMS1",119,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTMS1",120,0)
H0(%) ;Covert from seconds to $H
"RTN","ZTMS1",121,0)
 Q (%\86400)_","_(%#86400)
"RTN","ZTMS2")
0^16^B16621838
"RTN","ZTMS2",1,0)
%ZTMS2 ;SEA/RDS-TaskMan: Submanager, Part 4 (Unload, Get Device) ;09/05/96  08:57
"RTN","ZTMS2",2,0)
 ;;8.0;KERNEL;**2,18,23,36**;Jul 10, 1995
"RTN","ZTMS2",3,0)
 ;^%ZTSK(ZTSK) is locked on entry or return from GETNEXT
"RTN","ZTMS2",4,0)
PROCESS ;SUBMGR--process task and all others waiting for same device
"RTN","ZTMS2",5,0)
 D LOOKUP I $D(ZTREJECT) Q
"RTN","ZTMS2",6,0)
 D DEVICE
"RTN","ZTMS2",7,0)
 Q:POP
"RTN","ZTMS2",8,0)
 I ZTSYNCFL]"",'$$SYNCFLG("A",ZTSYNCFL,%ZTIO) D SYNCQ(ZTSYNCFL,%ZTIO,ZTDTH,ZTSK),^%ZISC Q
"RTN","ZTMS2",9,0)
 D TASK^%ZTMS3 I ZTYPE="C"!$D(ZTNONEXT) Q
"RTN","ZTMS2",10,0)
 D GETNEXT^%ZTMS7 I $D(ZTNONEXT)!$D(ZTQUIT) Q
"RTN","ZTMS2",11,0)
 G PROCESS
"RTN","ZTMS2",12,0)
 ;
"RTN","ZTMS2",13,0)
LOOKUP ;PROCESS--unload task, switch ucis, and test entry routine
"RTN","ZTMS2",14,0)
 K (%ZTIO,IO,U,ZTCPU,ZTDEVN,ZTDTH,ZTNODE,ZTPAIR,ZTPFLG,ZTQUEUED,ZTSK,ZTUCI,ZTYPE)
"RTN","ZTMS2",15,0)
 D TSTAT(4,"")
"RTN","ZTMS2",16,0)
 S ZTREC=^%ZTSK(ZTSK,0),ZTREC02=^(.02)
"RTN","ZTMS2",17,0)
 S ZTREC2=^%ZTSK(ZTSK,.2),ZTREC21=^(.21),ZTREC25=^(.25)
"RTN","ZTMS2",18,0)
 S ZTSYNCFL=$P(ZTREC2,"^",7),DUZ=+$P(ZTREC,U,3),DUZ(0)="@"
"RTN","ZTMS2",19,0)
 S X=$P(ZTREC02,U)_","_$P(ZTREC02,U,2)
"RTN","ZTMS2",20,0)
 I $P(ZTREC02,U,4) S $P(X,",",2)=ZTCPU
"RTN","ZTMS2",21,0)
 ;should do a check to see if X is OK, Should check UCI mapping.
"RTN","ZTMS2",22,0)
 I X'=ZTUCI S ZTUCI=X D SWAP^%XUCI
"RTN","ZTMS2",23,0)
 S X=$P($P(ZTREC,U,2),"("),ZTRTN=$P(ZTREC,U,1,2)
"RTN","ZTMS2",24,0)
 I $E(X)'="%" X ^%ZOSF("TEST"):X]"" I X=""!'$T D REJECT S ZTREJECT=""
"RTN","ZTMS2",25,0)
 Q
"RTN","ZTMS2",26,0)
 ;
"RTN","ZTMS2",27,0)
REJECT ;LOOKUP--entry routine isn't here; reject task
"RTN","ZTMS2",28,0)
 N Y X ^%ZOSF("UCI")
"RTN","ZTMS2",29,0)
 D TSTAT("B","No routine at destination "_Y_".")
"RTN","ZTMS2",30,0)
 I $D(ZTDEVN) D DEVLK^%ZTMS1(-1,%ZTIO) K ZTDEVN
"RTN","ZTMS2",31,0)
 L  Q  ;Clear all locks
"RTN","ZTMS2",32,0)
 ;
"RTN","ZTMS2",33,0)
DEVICE ;PROCESS--prepare requested device; if can't, make task wait
"RTN","ZTMS2",34,0)
 ;shortcut & screen
"RTN","ZTMS2",35,0)
 S ZTIO=$P(ZTREC2,U),ZTIOT=$P(ZTREC2,U,3)
"RTN","ZTMS2",36,0)
 I ZTIO="" S (IO,IO(0),IOF,ION,IOS,IOST,IOT)="",POP=0 Q
"RTN","ZTMS2",37,0)
 ;
"RTN","ZTMS2",38,0)
 ;setup call
"RTN","ZTMS2",39,0)
 S %ZIS="LRS0"_$S($P(ZTREC2,U,5)="DIRECT":"D",1:"")
"RTN","ZTMS2",40,0)
 S:ZTIOT="HFS" %ZIS("HFSIO")=$P(ZTREC2,U,6),%ZIS("IOPAR")=ZTREC25
"RTN","ZTMS2",41,0)
 S:ZTIOT="MT" %ZIS("IOPAR")=ZTREC25
"RTN","ZTMS2",42,0)
 S (IO,IO(0))=%ZTIO,IOP=ZTIO
"RTN","ZTMS2",43,0)
 K ^XUTL("XQ",$J)
"RTN","ZTMS2",44,0)
 ;
"RTN","ZTMS2",45,0)
 S:$P(ZTREC2,U,4)["MINIOUT" %ZISLOCK="^%ZTSCH(""NETMAIL"",IO)" ;The hang is on the close
"RTN","ZTMS2",46,0)
 ;call
"RTN","ZTMS2",47,0)
 S %ZISTO=3 D ^%ZIS K %ZISTO,%ZISLOCK ;See that we use a timeout.
"RTN","ZTMS2",48,0)
 I %ZTIO]"" D DEVLK^%ZTMS1(-1,%ZTIO) K ZTDEVN
"RTN","ZTMS2",49,0)
 I 'POP,%ZTIO]"",IO'=%ZTIO C %ZTIO K IO(1,%ZTIO) S %ZTIO=IO ;Reset %ZTIO if IO doesn't match
"RTN","ZTMS2",50,0)
 ;
"RTN","ZTMS2",51,0)
 ;results
"RTN","ZTMS2",52,0)
 I POP,(ZTYPE'="C"),(ZTIOT="TRM")!(ZTIOT="RES")!(ZTIOT="HG") D IONQ Q  ;only add to IO queue if not type C.
"RTN","ZTMS2",53,0)
 I POP D SCHNQ Q
"RTN","ZTMS2",54,0)
 I IOT'="RES",IOT'="HG" U IO
"RTN","ZTMS2",55,0)
 S IO(0)=IO
"RTN","ZTMS2",56,0)
 I $P(^%ZIS(1,+IOS,0),U,7)="y" D ^%ZTMSH
"RTN","ZTMS2",57,0)
 Q
"RTN","ZTMS2",58,0)
 ;
"RTN","ZTMS2",59,0)
IONQ ;DEVICE--put task on Device Waiting List
"RTN","ZTMS2",60,0)
 L +^%ZTSCH("IO")
"RTN","ZTMS2",61,0)
 I $D(^%ZTSK(ZTSK,0))[0 D TSTAT("I",4) G IOQX
"RTN","ZTMS2",62,0)
 D TSTAT("A","")
"RTN","ZTMS2",63,0)
 S ZTIO(1)=$P(ZTREC2,U,5),ZTIOS=ZTREC21
"RTN","ZTMS2",64,0)
 D NQ^%ZTM4
"RTN","ZTMS2",65,0)
IOQX L  Q  ;Clear all Locks
"RTN","ZTMS2",66,0)
 ;
"RTN","ZTMS2",67,0)
SCHNQ ;DEVICE--if HFS or SPL or TYPE'=C, reschedule task 10 min in future (try later)
"RTN","ZTMS2",68,0)
 S ZTH=$$NEWH($H,300)
"RTN","ZTMS2",69,0)
 L +^%ZTSCH(ZTH,ZTSK)
"RTN","ZTMS2",70,0)
 D TSTAT(1,"rescheduled for busy device")
"RTN","ZTMS2",71,0)
 S ^%ZTSCH(ZTH,ZTSK)=""
"RTN","ZTMS2",72,0)
 L  Q  ;Clear all locks
"RTN","ZTMS2",73,0)
 ;
"RTN","ZTMS2",74,0)
NEWH(%H,%Y) ;Build a new schedule time, Return $H3 time.
"RTN","ZTMS2",75,0)
 N %
"RTN","ZTMS2",76,0)
 I %H["," S %H=$$H3^%ZTM(%H)
"RTN","ZTMS2",77,0)
 Q (%H+%Y)
"RTN","ZTMS2",78,0)
 ;
"RTN","ZTMS2",79,0)
SYNCFLG(ACT,FLAG,ZIO,STAT) ;Allocate/deallocate sync flag
"RTN","ZTMS2",80,0)
 N X,DA,SYNC
"RTN","ZTMS2",81,0)
 L +^%ZISL(14.8):30 E  Q 0
"RTN","ZTMS2",82,0)
 S X=0,SYNC=ZIO_"~"_FLAG,DA=$O(^%ZISL(14.8,"B",SYNC,0))
"RTN","ZTMS2",83,0)
 I ACT["A" D
"RTN","ZTMS2",84,0)
 . I DA S X=0 Q
"RTN","ZTMS2",85,0)
 . ;I $D(^%ZTSCH("SYNC",ZIO,FLAG)) S X=0 Q
"RTN","ZTMS2",86,0)
 . S X=$P(^%ZISL(14.8,0),"^",3)+1 F  Q:'$D(^%ZISL(14.8,X))  S X=X+1
"RTN","ZTMS2",87,0)
 . S $P(^(0),"^",3,4)=X_"^"_($P(^%ZISL(14.8,0),"^",4)+1),^%ZISL(14.8,X,0)=SYNC,^%ZISL(14.8,"B",SYNC,X)=""
"RTN","ZTMS2",88,0)
 . S X=1 Q
"RTN","ZTMS2",89,0)
 I ACT["D" D  S X=1
"RTN","ZTMS2",90,0)
 . Q:DA'>0
"RTN","ZTMS2",91,0)
 . K ^%ZISL(14.8,DA),^%ZISL(14.8,"B",SYNC,DA)
"RTN","ZTMS2",92,0)
 . S $P(^(0),"^",3,4)=(DA-1)_"^"_($P(^%ZISL(14.8,0),"^",4)-1)
"RTN","ZTMS2",93,0)
 . Q
"RTN","ZTMS2",94,0)
 I ACT["S" D  S X=1
"RTN","ZTMS2",95,0)
 . Q:DA'>0
"RTN","ZTMS2",96,0)
 . S ^%ZISL(14.8,DA,1)=$G(STAT)
"RTN","ZTMS2",97,0)
 . Q
"RTN","ZTMS2",98,0)
 I ACT["?" S X=(DA)!($D(^%ZTSCH("SYNC",ZIO,FLAG)))
"RTN","ZTMS2",99,0)
 L -^%ZISL(14.8)
"RTN","ZTMS2",100,0)
 Q X
"RTN","ZTMS2",101,0)
 ;
"RTN","ZTMS2",102,0)
SYNCQ(FLAG,ZIO,ZTH,ZTSK) ;Put task on sync flag waiting list
"RTN","ZTMS2",103,0)
 L +^%ZTSCH("SYNC")
"RTN","ZTMS2",104,0)
 S ^%ZTSCH("SYNC",ZIO,FLAG,ZTSK)=ZTH
"RTN","ZTMS2",105,0)
 L -^%ZTSCH("SYNC")
"RTN","ZTMS2",106,0)
 Q
"RTN","ZTMS2",107,0)
SCHSYNC(FLAG,ZIO) ;put a waiting task in IO queue
"RTN","ZTMS2",108,0)
 L +^%ZTSCH("SYNC") I $D(^%ZTSCH("SYNC",ZIO,FLAG)) N ZTH,ZTSK D
"RTN","ZTMS2",109,0)
 . S ZTSK=$O(^(FLAG,0)),ZTH=$G(^(+ZTSK)) Q:ZTSK=""  S:$D(^%ZTSCH("IO",ZIO))[0 ^(ZIO)=IOT
"RTN","ZTMS2",110,0)
 . S ^%ZTSCH("IO",ZIO,ZTH,ZTSK)=""
"RTN","ZTMS2",111,0)
 . K ^%ZTSCH("SYNC",ZIO,FLAG,ZTSK)
"RTN","ZTMS2",112,0)
 . Q
"RTN","ZTMS2",113,0)
 L -^%ZTSCH("SYNC")
"RTN","ZTMS2",114,0)
 Q
"RTN","ZTMS2",115,0)
TSTAT(CODE,TXT) ;Record status
"RTN","ZTMS2",116,0)
 Q:$D(^%ZTSK(ZTSK,.1))[0
"RTN","ZTMS2",117,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=CODE_U_$H_U_TXT
"RTN","ZTMS2",118,0)
 Q
"RTN","ZTMS3")
0^4^B20822122
"RTN","ZTMS3",1,0)
%ZTMS3 ;SEA/RDS-TaskMan: Submanager, Part 5 (Run Task) ;09/05/96  09:31
"RTN","ZTMS3",2,0)
 ;;8.0;KERNEL;**1,18,36**;Jul 03, 1995
"RTN","ZTMS3",3,0)
 ;
"RTN","ZTMS3",4,0)
TASK ;SUBMGR--prepare and run task; cleanup after
"RTN","ZTMS3",5,0)
 ;
"RTN","ZTMS3",6,0)
BEFORE ;prepare task
"RTN","ZTMS3",7,0)
 ;submanager's variables
"RTN","ZTMS3",8,0)
 S ZTDEF=""
"RTN","ZTMS3",9,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,""))
"RTN","ZTMS3",10,0)
 I X]"",$D(^%ZIS(14.7,X,0))#2 S ZTDEF=^(0)
"RTN","ZTMS3",11,0)
 S DUZ=+$P(ZTREC,U,3)
"RTN","ZTMS3",12,0)
 S %ZTTV=ZTUCI_U_IOS_U_U_ZTSK_U_IO_U_IOT_U_ZTCPU_U_ZTNODE_U_DUZ_U_U_IOF_U_IOST_U_ZTPAIR_U_ZTYPE_U
"RTN","ZTMS3",13,0)
 S %ZTTV(0)=ZTRTN_U_$P(ZTREC,U,8,9)_U_$P(ZTREC,U,6)_U_ION_U_ZTUCI_U_$P(ZTREC,U,5)_U_$S($P(ZTREC,U,10)]"":$P(ZTREC,U,10),1:$P(ZTREC,U,3))_U_$J_U_ZTSYNCFL_U
"RTN","ZTMS3",14,0)
 S %ZTTV(2)=ZTPFLG("HOME")_U_ZTPFLG("MIN")_U_ZTPFLG("RT")
"RTN","ZTMS3",15,0)
 I $D(^%ZTSCH("LOGRSRC")) D
"RTN","ZTMS3",16,0)
 .S %ZTTV(1)="!"_$P(ZTREC,U,9)
"RTN","ZTMS3",17,0)
 .I %ZTTV(1)="!" S %ZTTV(1)="!"_$P(ZTRTN,U,2)
"RTN","ZTMS3",18,0)
 ;
"RTN","ZTMS3",19,0)
 ;external calls
"RTN","ZTMS3",20,0)
 D NOW^%DTC S DT=% ;DT is Date.time at this point.
"RTN","ZTMS3",21,0)
1 D SETNM^%ZOSV($E("BTask ",(ZTIO]"")+1,6)_(ZTSK#100000000))
"RTN","ZTMS3",22,0)
 ;
"RTN","ZTMS3",23,0)
 ;priority
"RTN","ZTMS3",24,0)
 S X=$P(ZTREC,U,15)
"RTN","ZTMS3",25,0)
 S X=$S(+X'=X:0,X'<1&(X'>10):X\1,1:0)
"RTN","ZTMS3",26,0)
 S Y=$S(IOS="":0,$D(^%ZIS(1,+IOS,0))[0:0,1:+$P(^(0),U,5))
"RTN","ZTMS3",27,0)
 S Y=$S(Y'<1&(Y'>10):Y\1,1:0)
"RTN","ZTMS3",28,0)
 S X=$S(Y:Y,X:X,$P(ZTDEF,U,4):$P(ZTDEF,U,4),1:10)
"RTN","ZTMS3",29,0)
 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",30,0)
 ;
"RTN","ZTMS3",31,0)
2 ;restore saved variables
"RTN","ZTMS3",32,0)
 S X=$O(^XTV(8989.3,1,4,"B",ZTCPU,0)) S:$P($G(^XTV(8989.3,1,4,+X,0)),U,6)="y" XRTL=ZTUCI
"RTN","ZTMS3",33,0)
 K %,%H,%I,%ZTI,%ZTIO,IO("C"),IO("T"),X,Y,ZTCPU,ZTDEF,ZTIOST,ZTIOT,ZTNODE,ZTPAIR,ZTPFLG,ZTREC,ZTREC2,ZTREC21,ZTREC25,ZTUCI,^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS3",34,0)
 S DUZ(0)="" D RESTORE^%ZTMS4
"RTN","ZTMS3",35,0)
 ;
"RTN","ZTMS3",36,0)
 ;force values
"RTN","ZTMS3",37,0)
 S DUZ=+DUZ,DTIME=0,ZTDESC=$G(^%ZTSK(ZTSK,.03)),ZTDTH=$H
"RTN","ZTMS3",38,0)
 I DUZ(0)="" S DUZ(0)=$S($D(^VA(200,DUZ,0))#2:$P(^(0),U,4),1:"")
"RTN","ZTMS3",39,0)
 I $D(DUZ(2))[0 S DUZ(2)=$S($D(^VA(200,DUZ,2,0)):$O(^(0)),1:0)
"RTN","ZTMS3",40,0)
 S ^XUTL("XQ",$J,0)=DT,^("ZTSK")=ZTDESC
"RTN","ZTMS3",41,0)
 S X="DUZ" F  S X=$Q(@X) Q:X=""  I $D(@X) S ^XUTL("XQ",$J,$TR(X,""""))=@X
"RTN","ZTMS3",42,0)
 F X="DUZ","IO","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY","XQVOL" I $D(@X) S ^XUTL("XQ",$J,X)=@X
"RTN","ZTMS3",43,0)
3 ;
"RTN","ZTMS3",44,0)
 ;final checks & sets
"RTN","ZTMS3",45,0)
 I '$D(^%ZTSK(ZTSK)) S ZTTASK=0 D AFTER Q
"RTN","ZTMS3",46,0)
 I $S($D(^%ZTSK(ZTSK,.1))[0:0,1:$P(^(.1),U,10)]"") S $P(^%ZTSK(ZTSK,.1),U,1,3)="D^"_$H_"^4",ZTTASK=0 D AFTER Q
"RTN","ZTMS3",47,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=5_U_$H_U
"RTN","ZTMS3",48,0)
 S ZTQUEUED=ZTSK,ZTSTAT="1 General error"
"RTN","ZTMS3",49,0)
 S ^%ZTSCH("TASK",ZTSK)=%ZTTV(0)_$H
"RTN","ZTMS3",50,0)
 ;
"RTN","ZTMS3",51,0)
RUN ;run task
"RTN","ZTMS3",52,0)
 I ^%ZOSF("OS")["MSM-PC/PLUS" V:$P($ZV,"Version ",2)]]"4.0.11D" 360:$J:2**$V($V(58,-5)+8,-3,2)-1:4 ZSYNC
"RTN","ZTMS3",53,0)
 L
"RTN","ZTMS3",54,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,U,13),"")),0),U,3)="Y" D LOGIN^%ZTMS4
"RTN","ZTMS3",55,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV(%ZTTV(1))
"RTN","ZTMS3",56,0)
 S DT=DT\1 S:ZTRTN="ZTSK^XQ1" ZTREQ="@"
"RTN","ZTMS3",57,0)
 X "N %ZTTV D @ZTRTN"
"RTN","ZTMS3",58,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$AFTR ZTMS")
"RTN","ZTMS3",59,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,"^",13),"")),0),"^",3)="Y" D LOGOUT^%ZTMS4
"RTN","ZTMS3",60,0)
 L  ;Clear all user locks.
"RTN","ZTMS3",61,0)
 ;
"RTN","ZTMS3",62,0)
AFTER ;cleanup after task; reset partition
"RTN","ZTMS3",63,0)
 S U="^",ZTSK=$P(%ZTTV,U,4) L +^%ZTSK(ZTSK)
"RTN","ZTMS3",64,0)
 I $D(ZTTASK)[0 K ^%ZTSCH("TASK",ZTSK) S ZTQUEUED=.6,ZTTASK=1
"RTN","ZTMS3",65,0)
 S X=10 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",66,0)
 D SETNM^%ZOSV("Sub "_$J) ;Change name back
"RTN","ZTMS3",67,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J) I $T(XUTL^XUSCLEAN)]"" D XUTL^XUSCLEAN
"RTN","ZTMS3",68,0)
 S ZTUCI=$P(%ZTTV,U),IOS=$P(%ZTTV,U,2),(IO,IO(0),%ZTIO)=$P(%ZTTV,U,5),IOT=$P(%ZTTV,U,6),ZTCPU=$P(%ZTTV,U,7),ZTNODE=$P(%ZTTV,U,8)
"RTN","ZTMS3",69,0)
 S IOF=$P(%ZTTV,U,11),IOST=$P(%ZTTV,U,12),ZTPAIR=$P(%ZTTV,U,13),ZTYPE=$P(%ZTTV,U,14),ZTSYNCFL=$P(%ZTTV(0),U,11)
"RTN","ZTMS3",70,0)
 S ZTPFLG("HOME")=$P(%ZTTV(2),U,1),ZTPFLG("MIN")=$P(%ZTTV(2),U,2),ZTPFLG("RT")=$P(%ZTTV(2),U,3)
"RTN","ZTMS3",71,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2($S($G(ZTSTAT):"S",1:"D"),ZTSYNCFL,IO,$G(ZTSTAT)) D SCHSYNC^%ZTMS2(ZTSYNCFL,IO):'$G(ZTSTAT)
"RTN","ZTMS3",72,0)
 D POST^%ZTMS4:ZTTASK,CLOSE
"RTN","ZTMS3",73,0)
 K (%ZTIO,%ZTTV,IO,IOF,IOS,IOST,IOT,U,ZTCPU,ZTNODE,ZTNONEXT,ZTPAIR,ZTPFLG,ZTQUEUED,ZTREQ,ZTSTOP,ZTUCI,ZTYPE),IO("C"),IO("T"),IO("ERROR"),IO("LASTERR")
"RTN","ZTMS3",74,0)
 S DUZ=0,DUZ(0)="@",ZTQUEUED=0
"RTN","ZTMS3",75,0)
 L  ;Clear all locks, -^%ZTSK(ZTSK)
"RTN","ZTMS3",76,0)
 Q
"RTN","ZTMS3",77,0)
 ;
"RTN","ZTMS3",78,0)
CLOSE ;RUN--close &/or close execute
"RTN","ZTMS3",79,0)
 I %ZTIO="" S ZTNONEXT=1 G CLX
"RTN","ZTMS3",80,0)
 N ZTUCI,ZTCPU,ZTNODE,IOCPU,%IO
"RTN","ZTMS3",81,0)
 I IOT="HFS"!(IOT="SPL") S ZTNONEXT=1
"RTN","ZTMS3",82,0)
 K IO("C") S:IOT'="TRM" IO("C")=1
"RTN","ZTMS3",83,0)
 S:$D(IO("CLOSE")) IO("T")=1
"RTN","ZTMS3",84,0)
 ;Here is the Lock and hang to allow IDCU ports to reset. See %ZTMS2.
"RTN","ZTMS3",85,0)
 I IOST["MINIOUT" S IO("C")=1 L +^%ZTSCH("NETMAIL",%ZTIO):60
"RTN","ZTMS3",86,0)
 I $D(IO(1,IO))#2 D ^%ZISC
"RTN","ZTMS3",87,0)
 I IOST["MINIOUT" H 6 ;Wait for terminal server to reset.
"RTN","ZTMS3",88,0)
 ;Unlock of all locks is done in clean
"RTN","ZTMS3",89,0)
 ;See that all devices are closed.
"RTN","ZTMS3",90,0)
CLX S %IO="" F  S %IO=$O(IO(1,%IO)) Q:%IO=""  I %IO'=IO K IO(1,%IO) C %IO
"RTN","ZTMS3",91,0)
 Q
"RTN","ZTMS3",92,0)
 ;
"UP",3.2,3.206,-1)
3.2^W6
"UP",3.2,3.206,0)
3.206
"UP",3.2,3.207,-1)
3.2^W110
"UP",3.2,3.207,0)
3.207
"VER")
8.0^21.0
"^DD",3.2,3.2,6.1,0)
OPEN EXECUTE DESCRIPTION^3.206^^W6;0
"^DD",3.2,3.2,110.1,0)
OPEN PRINTER DESCRIPTION^3.207^^W110;0
"^DD",3.2,3.206,0)
OPEN EXECUTE DESCRIPTION SUB-FIELD^^.01^1
"^DD",3.2,3.206,0,"DT")
2960813
"^DD",3.2,3.206,0,"NM","OPEN EXECUTE DESCRIPTION")

"^DD",3.2,3.206,0,"UP")
3.2
"^DD",3.2,3.206,.01,0)
OPEN EXECUTE DESCRIPTION^W^^0;1^Q
"^DD",3.2,3.206,.01,21,0)
^^2^2^2960813^
"^DD",3.2,3.206,.01,21,1,0)
This field is to hold the description of what the OPEN EXECUTE and CLOSE
"^DD",3.2,3.206,.01,21,2,0)
EXECUTE are doing.
"^DD",3.2,3.206,.01,"DT")
2960813
"^DD",3.2,3.207,0)
OPEN PRINTER DESCRIPTION SUB-FIELD^^.01^1
"^DD",3.2,3.207,0,"DT")
2960813
"^DD",3.2,3.207,0,"NM","OPEN PRINTER DESCRIPTION")

"^DD",3.2,3.207,0,"UP")
3.2
"^DD",3.2,3.207,.01,0)
OPEN PRINTER DESCRIPTION^W^^0;1^Q
"^DD",3.2,3.207,.01,21,0)
^^2^2^2960813^
"^DD",3.2,3.207,.01,21,1,0)
This field is to hold a description of what the OPEN PRINTER PORT and
"^DD",3.2,3.207,.01,21,2,0)
CLOSE PRINTER PORT are doing.
"^DD",3.2,3.207,.01,"DT")
2960813
"^DD",14.7,14.7,11,0)
MIN SUBMANAGER CNT^NJ2,0^^0;12^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",14.7,14.7,11,3)
Type a Number between 0 and 99, 0 Decimal Digits
"^DD",14.7,14.7,11,21,0)
^^4^4^2960905^
"^DD",14.7,14.7,11,21,1,0)
This field sets a value that free submanagers will check and not stop if
"^DD",14.7,14.7,11,21,2,0)
there count doesn't exceed. The manager will check this and start new
"^DD",14.7,14.7,11,21,3,0)
submangers if the free count is below this value.  If this field is left
"^DD",14.7,14.7,11,21,4,0)
blank a default value of 1 is used.
"^DD",14.7,14.7,11,"DT")
2960905
"^DD",14.7,14.7,12,0)
TM MASTER^P14.7'^%ZIS(14.7,^0;13^Q
"^DD",14.7,14.7,12,21,0)
^^4^4^2960905^^
"^DD",14.7,14.7,12,21,1,0)
This field is holds a pointer to the TaskMan Master Box-Volume.
"^DD",14.7,14.7,12,21,2,0)
This is only needed if this Box-Volume is mounted on an other
"^DD",14.7,14.7,12,21,3,0)
configuration and shares the library account with that other
"^DD",14.7,14.7,12,21,4,0)
configuration. 
"^DD",14.7,14.7,12,"DT")
2960905
**END**
**END**
