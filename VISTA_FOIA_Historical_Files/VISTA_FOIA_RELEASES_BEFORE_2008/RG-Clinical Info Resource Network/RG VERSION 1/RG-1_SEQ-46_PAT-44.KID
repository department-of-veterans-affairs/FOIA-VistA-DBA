EMERGENCY Released RG*1*44 SEQ #46
Extracted from mail message
**KIDS**:RG*1.0*44^

**INSTALL NAME**
RG*1.0*44
"BLD",2476,0)
RG*1.0*44^CLINICAL INFO RESOURCE NETWORK^0^3070301^y
"BLD",2476,1,0)
^^3^3^3070228^
"BLD",2476,1,1,0)
PROCESSING PRIMARY REVIEW REJECT EXCEPTIONS
"BLD",2476,1,2,0)
Refer to patch RG*1*44 in the FORUM Patch Module for a complete
"BLD",2476,1,3,0)
description.
"BLD",2476,4,0)
^9.64PA^^
"BLD",2476,6.3)
8
"BLD",2476,"ABNS",0)
^9.66A^^
"BLD",2476,"ABPKG")
^^
"BLD",2476,"KRN",0)
^9.67PA^8989.52^19
"BLD",2476,"KRN",.4,0)
.4
"BLD",2476,"KRN",.401,0)
.401
"BLD",2476,"KRN",.402,0)
.402
"BLD",2476,"KRN",.403,0)
.403
"BLD",2476,"KRN",.5,0)
.5
"BLD",2476,"KRN",.84,0)
.84
"BLD",2476,"KRN",3.6,0)
3.6
"BLD",2476,"KRN",3.8,0)
3.8
"BLD",2476,"KRN",9.2,0)
9.2
"BLD",2476,"KRN",9.8,0)
9.8
"BLD",2476,"KRN",9.8,"NM",0)
^9.68A^9^7
"BLD",2476,"KRN",9.8,"NM",1,0)
RGEX03^^0^B64947419
"BLD",2476,"KRN",9.8,"NM",3,0)
RGEX07^^0^B4853896
"BLD",2476,"KRN",9.8,"NM",4,0)
RGPVREJ^^0^B14664495
"BLD",2476,"KRN",9.8,"NM",5,0)
RGEVPRG^^0^B65012676
"BLD",2476,"KRN",9.8,"NM",7,0)
RGADTP1^^0^B31035462
"BLD",2476,"KRN",9.8,"NM",8,0)
RGADTP2^^0^B42653247
"BLD",2476,"KRN",9.8,"NM",9,0)
RGADTP^^0^B77946765
"BLD",2476,"KRN",9.8,"NM","B","RGADTP",9)

"BLD",2476,"KRN",9.8,"NM","B","RGADTP1",7)

"BLD",2476,"KRN",9.8,"NM","B","RGADTP2",8)

"BLD",2476,"KRN",9.8,"NM","B","RGEVPRG",5)

"BLD",2476,"KRN",9.8,"NM","B","RGEX03",1)

"BLD",2476,"KRN",9.8,"NM","B","RGEX07",3)

"BLD",2476,"KRN",9.8,"NM","B","RGPVREJ",4)

"BLD",2476,"KRN",19,0)
19
"BLD",2476,"KRN",19.1,0)
19.1
"BLD",2476,"KRN",101,0)
101
"BLD",2476,"KRN",101,"NM",0)
^9.68A^26^22
"BLD",2476,"KRN",101,"NM",1,0)
RG EXCPT ACTION MENU^^0
"BLD",2476,"KRN",101,"NM",2,0)
RG EXCPT BLANK1^^0
"BLD",2476,"KRN",101,"NM",3,0)
RG EXCPT DATE SORT^^0
"BLD",2476,"KRN",101,"NM",4,0)
RG EXCPT DISPLAY ONLY QUERY^^0
"BLD",2476,"KRN",101,"NM",5,0)
RG EXCPT EDIT NOTE^^0
"BLD",2476,"KRN",101,"NM",6,0)
RG EXCPT EDIT PATIENT DATA^^0
"BLD",2476,"KRN",101,"NM",7,0)
RG EXCPT HINQ INQUIRY^^0
"BLD",2476,"KRN",101,"NM",8,0)
RG EXCPT MAIN MENU^^0
"BLD",2476,"KRN",101,"NM",9,0)
RG EXCPT MPI/PD DATA^^0
"BLD",2476,"KRN",101,"NM",10,0)
RG EXCPT PATIENT AUDIT^^0
"BLD",2476,"KRN",101,"NM",11,0)
RG EXCPT PATIENT INQUIRY^^0
"BLD",2476,"KRN",101,"NM",12,0)
RG EXCPT PATIENT SORT^^0
"BLD",2476,"KRN",101,"NM",13,0)
RG EXCPT PDAT MENU^^0
"BLD",2476,"KRN",101,"NM",14,0)
RG EXCPT POT MATCH^^0
"BLD",2476,"KRN",101,"NM",15,0)
RG EXCPT PV REJECT^^0
"BLD",2476,"KRN",101,"NM",20,0)
RG EXCPT RCHK^^0
"BLD",2476,"KRN",101,"NM",21,0)
RG EXCPT RDISP^^0
"BLD",2476,"KRN",101,"NM",22,0)
RG EXCPT RSEND^^0
"BLD",2476,"KRN",101,"NM",23,0)
RG EXCPT SELECT^^0
"BLD",2476,"KRN",101,"NM",24,0)
RG EXCPT SELECT TYPE^^0
"BLD",2476,"KRN",101,"NM",25,0)
RG EXCPT TYPE SORT^^0
"BLD",2476,"KRN",101,"NM",26,0)
RG EXCPT UPDATE STATUS^^0
"BLD",2476,"KRN",101,"NM","B","RG EXCPT ACTION MENU",1)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT BLANK1",2)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT DATE SORT",3)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT DISPLAY ONLY QUERY",4)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT EDIT NOTE",5)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT EDIT PATIENT DATA",6)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT HINQ INQUIRY",7)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT MAIN MENU",8)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT MPI/PD DATA",9)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT PATIENT AUDIT",10)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT PATIENT INQUIRY",11)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT PATIENT SORT",12)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT PDAT MENU",13)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT POT MATCH",14)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT PV REJECT",15)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT RCHK",20)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT RDISP",21)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT RSEND",22)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT SELECT",23)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT SELECT TYPE",24)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT TYPE SORT",25)

"BLD",2476,"KRN",101,"NM","B","RG EXCPT UPDATE STATUS",26)

"BLD",2476,"KRN",409.61,0)
409.61
"BLD",2476,"KRN",409.61,"NM",0)
^9.68A^2^1
"BLD",2476,"KRN",409.61,"NM",2,0)
RG EXCPT PV REJECT RDISPLAY^^0
"BLD",2476,"KRN",409.61,"NM","B","RG EXCPT PV REJECT RDISPLAY",2)

"BLD",2476,"KRN",771,0)
771
"BLD",2476,"KRN",870,0)
870
"BLD",2476,"KRN",8989.51,0)
8989.51
"BLD",2476,"KRN",8989.52,0)
8989.52
"BLD",2476,"KRN",8994,0)
8994
"BLD",2476,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",2476,"KRN",8994,"NM",1,0)
RG PRIMARY VIEW REJECT^^0
"BLD",2476,"KRN",8994,"NM","B","RG PRIMARY VIEW REJECT",1)

"BLD",2476,"KRN","B",.4,.4)

"BLD",2476,"KRN","B",.401,.401)

"BLD",2476,"KRN","B",.402,.402)

"BLD",2476,"KRN","B",.403,.403)

"BLD",2476,"KRN","B",.5,.5)

"BLD",2476,"KRN","B",.84,.84)

"BLD",2476,"KRN","B",3.6,3.6)

"BLD",2476,"KRN","B",3.8,3.8)

"BLD",2476,"KRN","B",9.2,9.2)

"BLD",2476,"KRN","B",9.8,9.8)

"BLD",2476,"KRN","B",19,19)

"BLD",2476,"KRN","B",19.1,19.1)

"BLD",2476,"KRN","B",101,101)

"BLD",2476,"KRN","B",409.61,409.61)

"BLD",2476,"KRN","B",771,771)

"BLD",2476,"KRN","B",870,870)

"BLD",2476,"KRN","B",8989.51,8989.51)

"BLD",2476,"KRN","B",8989.52,8989.52)

"BLD",2476,"KRN","B",8994,8994)

"BLD",2476,"QUES",0)
^9.62^^
"BLD",2476,"REQB",0)
^9.611^2^2
"BLD",2476,"REQB",1,0)
RG*1.0*45^2
"BLD",2476,"REQB",2,0)
RG*1.0*43^2
"BLD",2476,"REQB","B","RG*1.0*43",2)

"BLD",2476,"REQB","B","RG*1.0*45",1)

"KRN",101,1692,-1)
0^8
"KRN",101,1692,0)
RG EXCPT MAIN MENU^MPI/PD EXCEPTION MENU^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1692,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1692,1,1,0)
This protocol serves as the main menu of exception handling options
"KRN",101,1692,1,2,0)
under the MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1692,4)
40^4
"KRN",101,1692,10,0)
^101.01PA^7^7
"KRN",101,1692,10,3,0)
1693^SE^15^^^Select Exception
"KRN",101,1692,10,3,"^")
RG EXCPT SELECT
"KRN",101,1692,10,4,0)
1699^ST^10^^^Sort by Exception Type
"KRN",101,1692,10,4,"^")
RG EXCPT TYPE SORT
"KRN",101,1692,10,5,0)
1700^SD^5^^^Sort Exceptions by Date
"KRN",101,1692,10,5,"^")
RG EXCPT DATE SORT
"KRN",101,1692,10,6,0)
1701^SN^7^^^Sort by Patient Name
"KRN",101,1692,10,6,"^")
RG EXCPT PATIENT SORT
"KRN",101,1692,10,7,0)
1702^VT^12^^^View Selected Exception Type
"KRN",101,1692,10,7,"^")
RG EXCPT SELECT TYPE
"KRN",101,1692,26)
D SHOW^VALM
"KRN",101,1692,28)
Select Action:
"KRN",101,1692,99)
58639,51005
"KRN",101,1693,-1)
0^23
"KRN",101,1693,0)
RG EXCPT SELECT^Select Exception^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1693,1,0)
^101.06^3^3^3010719^^^^
"KRN",101,1693,1,1,0)
This protocol allows the user to select an exception for processing
"KRN",101,1693,1,2,0)
from the MPI/PD Exceptions screen in the MPI/PD Exception Handling
"KRN",101,1693,1,3,0)
option [RG EXCEPTION HANDLING].
"KRN",101,1693,20)
D SELECT^RGEXHND1
"KRN",101,1693,99)
58043,62323
"KRN",101,1694,-1)
0^1
"KRN",101,1694,0)
RG EXCPT ACTION MENU^MPI/PD EXCEPTION HANDLING^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1694,1,0)
^101.06^4^4^3070226^^^^
"KRN",101,1694,1,1,0)
This protocol serves as the action menu and allows several
"KRN",101,1694,1,2,0)
actions to be taken for a patient selected from the MPI/PD
"KRN",101,1694,1,3,0)
Exception Menu [RG EXCPT MAIN MENU].  This is activated through
"KRN",101,1694,1,4,0)
the MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1694,4)
26^4
"KRN",101,1694,10,0)
^101.01PAI^14^13
"KRN",101,1694,10,3,0)
1695^UPD^90^^^Update to Processed
"KRN",101,1694,10,3,"^")
RG EXCPT UPDATE STATUS
"KRN",101,1694,10,4,0)
1696^DO^50^^^MPI Display Only Qry
"KRN",101,1694,10,4,"^")
RG EXCPT DISPLAY ONLY QUERY
"KRN",101,1694,10,6,0)
1698^ED^70^^^Edit Patient Data
"KRN",101,1694,10,6,"^")
RG EXCPT EDIT PATIENT DATA
"KRN",101,1694,10,7,0)
1703^PI^20^^^Patient Inquiry
"KRN",101,1694,10,7,"^")
RG EXCPT PATIENT INQUIRY
"KRN",101,1694,10,8,0)
1704^AUD^10^^^Patient Audit
"KRN",101,1694,10,8,"^")
RG EXCPT PATIENT AUDIT
"KRN",101,1694,10,9,0)
1705^HI^30^^^Hinq Inquiry
"KRN",101,1694,10,9,"^")
RG EXCPT HINQ INQUIRY
"KRN",101,1694,10,10,0)
1806^DI^100^^^MPI/PD Data Inquiry
"KRN",101,1694,10,10,"^")
RG EXCPT MPI/PD DATA
"KRN",101,1694,10,11,0)
1846^NT^110^^^Edit Note
"KRN",101,1694,10,11,"^")
RG EXCPT EDIT NOTE
"KRN",101,1694,10,12,0)
2064^PMR^60^^^Potential Match Rev
"KRN",101,1694,10,12,"^")
RG EXCPT POT MATCH
"KRN",101,1694,10,13,0)
2098^PVR^80^^^View PV Rej Detail
"KRN",101,1694,10,13,"^")
RG EXCPT PV REJECT
"KRN",101,1694,10,14,0)
2103^^40^
"KRN",101,1694,10,14,"^")
RG EXCPT BLANK1
"KRN",101,1694,20)

"KRN",101,1694,26)
D SHOW^VALM
"KRN",101,1694,28)
Select Action:
"KRN",101,1694,99)
60687,57422
"KRN",101,1695,-1)
0^26
"KRN",101,1695,0)
RG EXCPT UPDATE STATUS^Update Status to Processed^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1695,1,0)
^101.06^3^3^3010719^^^^
"KRN",101,1695,1,1,0)
This protocol allows the user to update the exception status 
"KRN",101,1695,1,2,0)
to PROCESSED from the MPI/PD Exception Handling option [RG 
"KRN",101,1695,1,3,0)
EXCEPTION HANDLING].
"KRN",101,1695,2,0)
^101.02A^^0
"KRN",101,1695,4)
^^^
"KRN",101,1695,20)
D UPD^RGEX03
"KRN",101,1695,99)
58043,62323
"KRN",101,1696,-1)
0^4
"KRN",101,1696,0)
RG EXCPT DISPLAY ONLY QUERY^Display Only Query to MPI^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1696,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1696,1,1,0)
This protocol allows the user to perform a Display Only Query to the MPI
"KRN",101,1696,1,2,0)
from the MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1696,20)
D DISP^RGEX03
"KRN",101,1696,99)
58043,62323
"KRN",101,1698,-1)
0^6
"KRN",101,1698,0)
RG EXCPT EDIT PATIENT DATA^Edit Patient Data^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1698,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1698,1,1,0)
This protocol allows the user to edit patient data from the 
"KRN",101,1698,1,2,0)
MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1698,20)
D LOAD^RGEX03
"KRN",101,1698,99)
58043,62323
"KRN",101,1699,-1)
0^25
"KRN",101,1699,0)
RG EXCPT TYPE SORT^Sort by Exception Type^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1699,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1699,1,1,0)
This protocol allows the user to sort exceptions by type in the
"KRN",101,1699,1,2,0)
MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1699,20)
S RGSORT="ST" D SORT^RGEX01
"KRN",101,1699,99)
58043,62323
"KRN",101,1700,-1)
0^3
"KRN",101,1700,0)
RG EXCPT DATE SORT^Sort by Exception Date^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1700,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1700,1,1,0)
This protocol allows the user to sort exceptions by date in the
"KRN",101,1700,1,2,0)
MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1700,20)
S RGSORT="SD" D SORT^RGEX01
"KRN",101,1700,99)
58043,62323
"KRN",101,1701,-1)
0^12
"KRN",101,1701,0)
RG EXCPT PATIENT SORT^Sort by Patient ^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1701,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1701,1,1,0)
This protocol allows the user to sort exceptions by patient in
"KRN",101,1701,1,2,0)
the MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1701,20)
S RGSORT="SN" D SORT^RGEX01
"KRN",101,1701,99)
58043,62323
"KRN",101,1702,-1)
0^24
"KRN",101,1702,0)
RG EXCPT SELECT TYPE^View Selected Exception Type^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1702,1,0)
^101.06^4^4^3010719^^^^
"KRN",101,1702,1,1,0)
This protocol allows the user to select an exception type to 
"KRN",101,1702,1,2,0)
view, all others will be filtered out, for exception processing
"KRN",101,1702,1,3,0)
from the MPI/PD Exceptions screen in the MPI/PD Exception Handling
"KRN",101,1702,1,4,0)
option [RG EXCEPTION HANDLING].
"KRN",101,1702,20)
S RGSORT="VT" D SORT^RGEX01
"KRN",101,1702,27)

"KRN",101,1702,99)
58043,62323
"KRN",101,1703,-1)
0^11
"KRN",101,1703,0)
RG EXCPT PATIENT INQUIRY^Patient Inquiry^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1703,1,0)
^101.06^2^2^3061108^^^^
"KRN",101,1703,1,1,0)
This protocol allows the user to do a Patient Inquiry from the 
"KRN",101,1703,1,2,0)
MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1703,20)
D INQ^RGEX03
"KRN",101,1703,99)
58043,62323
"KRN",101,1704,-1)
0^10
"KRN",101,1704,0)
RG EXCPT PATIENT AUDIT^Patient Audit^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1704,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1704,1,1,0)
This protocol allows the user to audit the changes made in the
"KRN",101,1704,1,2,0)
MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1704,20)
D PA^RGEX03
"KRN",101,1704,99)
58043,62323
"KRN",101,1705,-1)
0^7
"KRN",101,1705,0)
RG EXCPT HINQ INQUIRY^Hinq Inquiry^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1705,1,0)
^101.06^3^3^3010719^^^^
"KRN",101,1705,1,1,0)
This protocol allows the user to do a HINQ Inquiry for a 
"KRN",101,1705,1,2,0)
selected patient in the MPI/PD Exception Handling option 
"KRN",101,1705,1,3,0)
[RG EXCEPTION HANDLING].
"KRN",101,1705,20)
D HI^RGEX03
"KRN",101,1705,99)
58043,62323
"KRN",101,1806,-1)
0^9
"KRN",101,1806,0)
RG EXCPT MPI/PD DATA^MPI/PD Data Inquiry^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1806,1,0)
^101.06^2^2^3011022^^^^
"KRN",101,1806,1,1,0)
This protocol displays Master Patient Index/Patient Demographics 
"KRN",101,1806,1,2,0)
(MPI/PD) information for the selected patient.
"KRN",101,1806,2,0)
^101.02A^2^1
"KRN",101,1806,2,2,0)
DI
"KRN",101,1806,2,"B","DI",2)

"KRN",101,1806,20)
D PDAT^RGEX03
"KRN",101,1806,99)
58734,46469
"KRN",101,1842,-1)
0^22
"KRN",101,1842,0)
RG EXCPT RSEND^Send Remote Patient Data Query^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1842,1,0)
^^2^2^3011016^
"KRN",101,1842,1,1,0)
This protocol allows the user to send a remote patient data query to
"KRN",101,1842,1,2,0)
treating facility sites.
"KRN",101,1842,20)
D RSEND^RGEX04
"KRN",101,1842,99)
58728,59197
"KRN",101,1843,-1)
0^20
"KRN",101,1843,0)
RG EXCPT RCHK^Check Remote Patient Data Query^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1843,1,0)
^^2^2^3011016^
"KRN",101,1843,1,1,0)
This protocol allows the user to check the status of a remote patient data
"KRN",101,1843,1,2,0)
query.
"KRN",101,1843,20)
D RCHK^RGEX04
"KRN",101,1843,99)
58728,59359
"KRN",101,1844,-1)
0^21
"KRN",101,1844,0)
RG EXCPT RDISP^Display Patient Data Query^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1844,1,0)
^^2^2^3011016^
"KRN",101,1844,1,1,0)
This protocol allows the user to check the status of a remote patient data
"KRN",101,1844,1,2,0)
query.
"KRN",101,1844,20)
D RDISP^RGEX04
"KRN",101,1844,99)
58728,59436
"KRN",101,1845,-1)
0^13
"KRN",101,1845,0)
RG EXCPT PDAT MENU^MPI/PD PATIENT DATA ACTION MENU^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1845,1,0)
^^2^2^3011016^
"KRN",101,1845,1,1,0)
This protocol serves as the action menu for the MPI/PD Exception Handling
"KRN",101,1845,1,2,0)
Patient Data Query actions.
"KRN",101,1845,4)
40
"KRN",101,1845,10,0)
^101.01PAI^3^3
"KRN",101,1845,10,1,0)
1842^SND^5^^^Send Remote Query
"KRN",101,1845,10,1,"^")
RG EXCPT RSEND
"KRN",101,1845,10,2,0)
1843^CHK^10^^^Check Remote Query
"KRN",101,1845,10,2,"^")
RG EXCPT RCHK
"KRN",101,1845,10,3,0)
1844^DSP^15^^^Display Query Data
"KRN",101,1845,10,3,"^")
RG EXCPT RDISP
"KRN",101,1845,26)
D SHOW^VALM
"KRN",101,1845,28)
Select Action:
"KRN",101,1845,99)
58728,59920
"KRN",101,1846,-1)
0^5
"KRN",101,1846,0)
RG EXCPT EDIT NOTE^Edit Notes^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1846,1,0)
^^1^1^3011030^
"KRN",101,1846,1,1,0)
This protocol allows the user to add/edit notes to the exception.
"KRN",101,1846,20)
D EDTNOT^RGEX03
"KRN",101,1846,99)
58742,35539
"KRN",101,2064,-1)
0^14
"KRN",101,2064,0)
RG EXCPT POT MATCH^Resolve Potential Match^^A^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,2064,1,0)
^101.06^2^2^3051212^^
"KRN",101,2064,1,1,0)
This action will allow the review of a potential match exception and 
"KRN",101,2064,1,2,0)
resolution even though the patient already has a National ICN.
"KRN",101,2064,20)
D POT^RGEX03
"KRN",101,2064,99)
60239,28567
"KRN",101,2098,-1)
0^15
"KRN",101,2098,0)
RG EXCPT PV REJECT^Primary View Reject^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,2098,1,0)
^101.06^8^8^3070226^^^^
"KRN",101,2098,1,1,0)
This action allows the review of remote data from the Master Patient 
"KRN",101,2098,1,2,0)
Index (MPI).  When patient identity information is edited locally and 
"KRN",101,2098,1,3,0)
sent to the MPI, it is compared to the Primary View data and must also 
"KRN",101,2098,1,4,0)
pass specific data business rules before updating the MPI.  If the local 
"KRN",101,2098,1,5,0)
data fails, either because the Authority Score was not high enough (in 
"KRN",101,2098,1,6,0)
comparison to Primary View) or it failed a business rule, it is 
"KRN",101,2098,1,7,0)
rejected.  This protocol allows the local facility to review the reason 
"KRN",101,2098,1,8,0)
for the rejected data.
"KRN",101,2098,20)
D REJ^RGEX03
"KRN",101,2098,99)
60687,44429
"KRN",101,2103,-1)
0^2
"KRN",101,2103,0)
RG EXCPT BLANK1^^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,2103,1,0)
^^2^2^3061116^
"KRN",101,2103,1,1,0)
The purpose of this protocol entry is to control menu alignment.
"KRN",101,2103,1,2,0)
It contains no ITEM TEXT or MNEMONIC, as it is only a placeholder.
"KRN",409.61,286,-1)
0^2
"KRN",409.61,286,0)
RG EXCPT PV REJECT RDISPLAY^1^^80^5^21^1^1^^^REMOTE PRIMARY VIEW REJECT^1^^1
"KRN",409.61,286,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,286,"ARRAY")
 ^TMP("RGEXC7",$J)
"KRN",409.61,286,"COL",0)
^409.621^1^1
"KRN",409.61,286,"COL",1,0)
EXCEPTION^5^70^MPI Primary View Reject Display^H^0
"KRN",409.61,286,"COL","AIDENT",0,1)

"KRN",409.61,286,"COL","B","EXCEPTION",1)

"KRN",409.61,286,"FNL")
D EXIT^RGEX07
"KRN",409.61,286,"HDR")
D HDR^RGEX07
"KRN",409.61,286,"HLP")
D HELP^RGEX07
"KRN",409.61,286,"INIT")
D INIT^RGEX07
"KRN",8994,235,-1)
0^1
"KRN",8994,235,0)
RG PRIMARY VIEW REJECT^PVREJ^MPIRPC^2^R^^^^1
"KRN",8994,235,1,0)
^8994.01^3^3^3061107^^^
"KRN",8994,235,1,1,0)
This remote procedure call will return the Primary View Reject report for 
"KRN",8994,235,1,2,0)
a particular station, ICN, and date range.  The date range will be from 
"KRN",8994,235,1,3,0)
the date of the exception to the current date.
"KRN",8994,235,2,0)
^8994.02A^3^3
"KRN",8994,235,2,1,0)
SITE^1^10^1^1
"KRN",8994,235,2,1,1,0)
^^1^1^3061103^
"KRN",8994,235,2,1,1,1,0)
This is the requesting site's station number.
"KRN",8994,235,2,2,0)
ICN^1^16^1^2
"KRN",8994,235,2,2,1,0)
^8994.021^2^2^3061103^^
"KRN",8994,235,2,2,1,1,0)
This is the Integration Control Number of the patient for whom data is 
"KRN",8994,235,2,2,1,2,0)
requested.
"KRN",8994,235,2,3,0)
EXCEPTION DATE^1^25^1^3
"KRN",8994,235,2,3,1,0)
^8994.021^2^2^3061107^^^
"KRN",8994,235,2,3,1,1,0)
The date/time of the exception will be used as the begin date for the 
"KRN",8994,235,2,3,1,2,0)
report data extraction.
"KRN",8994,235,2,"B","EXCEPTION DATE",3)

"KRN",8994,235,2,"B","ICN",2)

"KRN",8994,235,2,"B","SITE",1)

"KRN",8994,235,2,"PARAMSEQ",1,1)

"KRN",8994,235,2,"PARAMSEQ",2,2)

"KRN",8994,235,2,"PARAMSEQ",3,3)

"KRN",8994,235,3,0)
^8994.03^2^2^3061107^^^
"KRN",8994,235,3,1,0)
This Remote Procedure Call will return the Primary View Rejection Report 
"KRN",8994,235,3,2,0)
to the requesting VistA facility.
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"PKG",272,-1)
1^1
"PKG",272,0)
CLINICAL INFO RESOURCE NETWORK^RG^CIRN
"PKG",272,20,0)
^9.402P^^0
"PKG",272,22,0)
^9.49I^1^1
"PKG",272,22,1,0)
1.0^2990430^2990601^12555
"PKG",272,22,1,"PAH",1,0)
44^3070301
"PKG",272,22,1,"PAH",1,1,0)
^^3^3^3070301
"PKG",272,22,1,"PAH",1,1,1,0)
PROCESSING PRIMARY REVIEW REJECT EXCEPTIONS
"PKG",272,22,1,"PAH",1,1,2,0)
Refer to patch RG*1*44 in the FORUM Patch Module for a complete
"PKG",272,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","RGADTP")
0^9^B77946765^B80561867
"RTN","RGADTP",1,0)
RGADTP ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS ;5/28/02
"RTN","RGADTP",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**26,27,20,34,35,40,45,44**;30 Apr 99;Build 8
"RTN","RGADTP",3,0)
 ;
"RTN","RGADTP",4,0)
 ;Reference to BLDEVN^VAFCQRY and BLDPID^VAFCQRY supported by IA #3630
"RTN","RGADTP",5,0)
 ;Reference to EN1^VAFHLZEL is supported by IA #752
"RTN","RGADTP",6,0)
 ;Reference to Patient file (#2) PREFERRED FACILITY (#27.02) is supported by IA #1850
"RTN","RGADTP",7,0)
 ;Reference to $$PV2, $$PHARA, $$LABE, $$RADE ^VAFCSB is supported by IA #4921
"RTN","RGADTP",8,0)
 ;
"RTN","RGADTP",9,0)
INIT ;
"RTN","RGADTP",10,0)
 N RGER,RGSITE,ARRAY,MSH,RGLOCAL,RGEVNT,REP,DIC,DR,DIE,DA,DLAYGO
"RTN","RGADTP",11,0)
 S RGER=""
"RTN","RGADTP",12,0)
 D IN
"RTN","RGADTP",13,0)
 D PROCIN
"RTN","RGADTP",14,0)
 D GENACK
"RTN","RGADTP",15,0)
 Q
"RTN","RGADTP",16,0)
PROC ;processing entry point
"RTN","RGADTP",17,0)
 N HLA,RGADT,PV1,DIC,ARRAY,RGEVNT,RGLOCAL,REP,ICN,RGSITE
"RTN","RGADTP",18,0)
 S RGEVNT=HL("ETN")
"RTN","RGADTP",19,0)
 I $G(HL("MID"))'="" S RGADT=HL("MID")
"RTN","RGADTP",20,0)
 I $G(HL("MID"))="" S RGADT=999
"RTN","RGADTP",21,0)
 D IN
"RTN","RGADTP",22,0)
 S ICN=$G(ARRAY("ICN"))
"RTN","RGADTP",23,0)
 I +$G(ICN)<1 Q  ;quit if no ICN
"RTN","RGADTP",24,0)
 I $E($G(ICN),1,3)=$P($$SITE^VASITE,"^",3) Q  ;quit if ICN is a local
"RTN","RGADTP",25,0)
 S ZTSAVE("DFN")="",ZTSAVE("RGEVNT")="",ZTSAVE("HLA(""HLS"",")="",ZTRTN="SEND^RGADTPC",ZTDESC="Sending HL7 Patient Update...",ZTIO="RG QUEUE",ZTDTH=$H D ^%ZTLOAD
"RTN","RGADTP",26,0)
 K ZTSAVE,ZTRTN,ZTDESC,ZTIO,ZTDTH
"RTN","RGADTP",27,0)
 Q
"RTN","RGADTP",28,0)
IN ;Process in the ADT A04/A08 (routing logic)
"RTN","RGADTP",29,0)
 N RGI,MSG,RG,SG,DFN,EVN,SITE,RGC,RGJ,DIC,PV1,PID,COMP,ENT,EN,THLA,LAB,RAD,PHARM,TMP
"RTN","RGADTP",30,0)
 S ENT=1,REP=$E(HL("ECH"),2),COMP=$E(HL("ECH"),1)
"RTN","RGADTP",31,0)
 ;set local flag to indicate the processing of an outbound for reformatting
"RTN","RGADTP",32,0)
 I $P($G(HL("SAF")),COMP)=$P($$SITE^VASITE,"^",3) S RGLOCAL=1
"RTN","RGADTP",33,0)
 I $P($G(HL("SAF")),COMP)'=$P($$SITE^VASITE,"^",3) S RGLOCAL=0
"RTN","RGADTP",34,0)
 S RGC=$E($G(HL("ECH")),1)
"RTN","RGADTP",35,0)
 F RGI=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) D
"RTN","RGADTP",36,0)
 .S RGJ=0 F  S RGJ=$O(HLNODE(RGJ)) Q:'RGJ  S MSG(RGJ)=HLNODE(RGJ)
"RTN","RGADTP",37,0)
 .D:SG?2A1(1A,1N) PICK
"RTN","RGADTP",38,0)
 ;if message MSH sending facility matches the PID assigning authority update
"RTN","RGADTP",39,0)
 S ENT=0,EN=1 F  S ENT=$O(THLA("HLS",ENT)) Q:ENT=""  D
"RTN","RGADTP",40,0)
 .S HLA("HLS",EN)=THLA("HLS",ENT),EN=EN+1
"RTN","RGADTP",41,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="PID" D
"RTN","RGADTP",42,0)
 ..I $O(THLA("HLS",ENT,""))'="" S CNT="" F  S CNT=$O(THLA("HLS",ENT,CNT)) Q:CNT=""  S HLA("HLS",EN-1,CNT)=THLA("HLS",ENT,CNT)
"RTN","RGADTP",43,0)
 ..S EN=EN+1
"RTN","RGADTP",44,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="PV1" I RGLOCAL S TMP=$$PV2 I TMP'="" S HLA("HLS",EN)=$$PV2,EN=EN+1
"RTN","RGADTP",45,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="ZPD" I RGLOCAL D
"RTN","RGADTP",46,0)
 ..S RAD=$$RADE I RAD'="" S HLA("HLS",EN)=RAD,EN=EN+1
"RTN","RGADTP",47,0)
 ..S LAB=$$LABE I LAB'="" S HLA("HLS",EN)=LAB,EN=EN+1
"RTN","RGADTP",48,0)
 ..S PHARM=$$PHARA I PHARM'="" S HLA("HLS",EN)=PHARM,EN=EN+1
"RTN","RGADTP",49,0)
QUIT Q
"RTN","RGADTP",50,0)
ROUTE ;
"RTN","RGADTP",51,0)
 N RGERR
"RTN","RGADTP",52,0)
 I $G(RGEVNT)="" S RGEVNT=$G(HL("ETN"))
"RTN","RGADTP",53,0)
 N MPI S MPI=$$MPILINK^MPIFAPI() D
"RTN","RGADTP",54,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="RG ADT-"_HL("ETN")_" 2.4 CLIENT^"_MPI
"RTN","RGADTP",55,0)
 .I $P($G(MPI),U)=-1 D
"RTN","RGADTP",56,0)
 ..N RGLOG,RGMTXT D START^RGHLLOG(HLMTIEN,"","") S RGMTXT="for DFN#"_$G(DFN)
"RTN","RGADTP",57,0)
 ..D EXC^RGHLLOG(224,"No MPI link identified"_RGMTXT,$G(DFN)) S RGERR=1
"RTN","RGADTP",58,0)
 I $G(RGERR)'=1 S ^XTMP("RG"_HL("ETN")_"%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"RG"_HL("ETN")_" msg to MPI for DFN "_DFN S ^XTMP("RG"_HL("ETN")_"%"_DFN,"MPI",0)="A"
"RTN","RGADTP",59,0)
 Q
"RTN","RGADTP",60,0)
RESP ;
"RTN","RGADTP",61,0)
 N RGER,RGSITE,ARRAY,MSH,RGLOCAL,RGEVNT,RGI,MSG,RG,SG,DFN,EVN,SITE,RGC,RGJ,DIC,PV1,PID
"RTN","RGADTP",62,0)
 D IN
"RTN","RGADTP",63,0)
 Q
"RTN","RGADTP",64,0)
PICK ;check routine for segment entry point
"RTN","RGADTP",65,0)
 I $T(@SG)]"" D @SG
"RTN","RGADTP",66,0)
 I $T(@SG)="" Q
"RTN","RGADTP",67,0)
 Q
"RTN","RGADTP",68,0)
MSA ;process the MSA segment
"RTN","RGADTP",69,0)
 N ARRAY,CNT,DFN,EXIT,HLCOMP,RGAA,RGERR,RGEVNT,RGMSG,RETURN,RGX,RGY,RGCODE
"RTN","RGADTP",70,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",71,0)
 S RGAA=MSG,EXIT=0,RGCODE=$P(RGAA,HL("FS"),2),RGMSG=$P(RGAA,HL("FS"),3),RGERR=$P(RGAA,HL("FS"),4),RGMSG=$$MSG^HLCSUTL(RGMSG,"RETURN(1)") K RGMSG
"RTN","RGADTP",72,0)
 S CNT=1,RGX=0 F  S RGX=$O(RETURN(1,RGX)) Q:'RGX!(EXIT=1)  D
"RTN","RGADTP",73,0)
 .I RETURN(1,RGX)'="" D
"RTN","RGADTP",74,0)
 ..I $D(RGMSG) S RGMSG(CNT)=RETURN(1,RGX),CNT=CNT+1
"RTN","RGADTP",75,0)
 ..I '$D(RGMSG) S RGMSG=RETURN(1,RGX),RGY=RGX
"RTN","RGADTP",76,0)
 .I RETURN(1,RGX)="" D  S CNT=1 K RGMSG
"RTN","RGADTP",77,0)
 ..I $E(RETURN(1,RGY),1,3)="MSH" D MSH
"RTN","RGADTP",78,0)
 ..I $E(RETURN(1,RGY),1,3)="PID" D PIDP^RGADTP1(.RGMSG,.ARRAY,.HL) S EXIT=1
"RTN","RGADTP",79,0)
 S DFN=$G(ARRAY("DFN"))
"RTN","RGADTP",80,0)
 ;**45 Log Exception ONLY if AR is returned in MSA segment
"RTN","RGADTP",81,0)
 I RGCODE="AR" D
"RTN","RGADTP",82,0)
 .D START^RGHLLOG(HLMTIEN,"","")
"RTN","RGADTP",83,0)
 .D EXC^RGHLLOG(234,RGERR,DFN) ;**44
"RTN","RGADTP",84,0)
 .D STOP^RGHLLOG(0)
"RTN","RGADTP",85,0)
 I $D(^XTMP("RG"_HL("ETN")_"%"_DFN,0)) K ^XTMP("RG"_HL("ETN")_"%"_DFN)
"RTN","RGADTP",86,0)
 Q
"RTN","RGADTP",87,0)
MSH ;
"RTN","RGADTP",88,0)
 S MSH=1
"RTN","RGADTP",89,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",90,0)
 I 'RGLOCAL S RGC=$E(HL("ECH"),1)
"RTN","RGADTP",91,0)
 S RGSITE=$P($P(MSG,HL("FS"),4),RGC),RGEVNT=$P($P(MSG,HL("FS"),9),RGC,2)
"RTN","RGADTP",92,0)
 Q
"RTN","RGADTP",93,0)
PV2() ;build pv2 segment
"RTN","RGADTP",94,0)
 N RET S RET=""
"RTN","RGADTP",95,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",96,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",97,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",98,0)
 Q $$PV2^VAFCSB
"RTN","RGADTP",99,0)
PHARA() ;build obx to show active prescriptions
"RTN","RGADTP",100,0)
 N RET S RET=""
"RTN","RGADTP",101,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",102,0)
 I '$$PATCH^XPDUTL("PSS*1.0*101") Q RET
"RTN","RGADTP",103,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",104,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",105,0)
 Q $$PHARA^VAFCSB
"RTN","RGADTP",106,0)
LABE() ;BUILD OBX FOR LAST LAB TEST DATE
"RTN","RGADTP",107,0)
 N RET S RET=""
"RTN","RGADTP",108,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",109,0)
 I '$$PATCH^XPDUTL("LR*5.2*295") Q RET
"RTN","RGADTP",110,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",111,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",112,0)
 Q $$LABE^VAFCSB
"RTN","RGADTP",113,0)
RADE() ;BUILD OBX FOR LAST RADIOLOGY TEST DATE
"RTN","RGADTP",114,0)
 N RET S RET=""
"RTN","RGADTP",115,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",116,0)
 I '$$PATCH^XPDUTL("RA*5.0*76") Q RET
"RTN","RGADTP",117,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",118,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",119,0)
 Q $$RADE^VAFCSB
"RTN","RGADTP",120,0)
EVN ;;
"RTN","RGADTP",121,0)
 N CNT,ERR S EVN=RGI
"RTN","RGADTP",122,0)
 I RGLOCAL S (EVN(1),THLA("HLS",ENT))=MSG,ENT=ENT+1
"RTN","RGADTP",123,0)
 I 'RGLOCAL D
"RTN","RGADTP",124,0)
 .S ARRAY("EVR")=$P(MSG,HL("FS"),2),ARRAY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","RGADTP",125,0)
 .S ARRAY("EVNAME")=$$FMNAME^XLFNAME($P(MSG,HL("FS"),2),"",$E(HL("ECH"),1)),ARRAY("SENDING SITE")=$P(MSG,HL("FS"),8)
"RTN","RGADTP",126,0)
 Q
"RTN","RGADTP",127,0)
EVNP ;
"RTN","RGADTP",128,0)
 N EVNX
"RTN","RGADTP",129,0)
 I $G(DFN)'="" D BLDEVN^VAFCQRY(DFN,"1,2,4,5,6,7",.EVN,.HL,$G(HL("ETN")),.ERR) S CNT=0,EVNX=0 F  S EVNX=$O(EVN(EVNX)) Q:'EVNX  D
"RTN","RGADTP",130,0)
 .I CNT>0 S THLA("HLS",EVN,CNT)=EVN(EVNX),CNT=CNT+1
"RTN","RGADTP",131,0)
 .I CNT'>0 S THLA("HLS",EVN)=EVN(EVNX),CNT=CNT+1
"RTN","RGADTP",132,0)
 Q
"RTN","RGADTP",133,0)
PID ;;
"RTN","RGADTP",134,0)
 N CNT,PIDX
"RTN","RGADTP",135,0)
 I RGLOCAL D
"RTN","RGADTP",136,0)
 .N HLCOMP S HLCOMP=$E(HL("ECH"),1),THLA("HLS",ENT)=MSG,DFN=$P($P(MSG,HL("FS"),4),HLCOMP) ;**45 REMOVED +
"RTN","RGADTP",137,0)
 .D EVNP
"RTN","RGADTP",138,0)
 .D BLDPID^VAFCQRY(DFN,1,"ALL",.PID,.HL)
"RTN","RGADTP",139,0)
 .;get ICN value in the PID segment
"RTN","RGADTP",140,0)
 .S ARRAY("ICN")=+$P($P(PID(1),HL("FS"),4),HLCOMP)
"RTN","RGADTP",141,0)
 .S CNT=0,PIDX=0 F  S PIDX=$O(PID(PIDX)) Q:'PIDX  D
"RTN","RGADTP",142,0)
 ..I CNT>0 S THLA("HLS",ENT,CNT)=PID(PIDX),CNT=CNT+1
"RTN","RGADTP",143,0)
 ..I CNT'>0 S THLA("HLS",ENT)=PID(PIDX),CNT=CNT+1
"RTN","RGADTP",144,0)
 .S ENT=ENT+1
"RTN","RGADTP",145,0)
 I 'RGLOCAL D PIDP^RGADTP1(.MSG,.ARRAY,.HL)
"RTN","RGADTP",146,0)
 Q
"RTN","RGADTP",147,0)
PD1 ;SET PD1 SEQ 3 TO BE PREFERRED FACILITY INSTEAD OF CMOR PATCH **45
"RTN","RGADTP",148,0)
 N PD1
"RTN","RGADTP",149,0)
 I RGLOCAL D
"RTN","RGADTP",150,0)
 .;S PD1=$$PD1^VAFCSB
"RTN","RGADTP",151,0)
 .;I PD1'="" S THLA("HLS",ENT)=PD1,ENT=ENT+1
"RTN","RGADTP",152,0)
 I 'RGLOCAL S (ARRAY(991.03),ARRAY("CMOR"))=$P($P(MSG,HL("FS"),4),RGC) ;PUTTING BACK TO DO NEED FOR PATCH 40 ON MPI SIDE
"RTN","RGADTP",153,0)
 ;- NO LONGER DEALING WITH CMOR
"RTN","RGADTP",154,0)
 Q
"RTN","RGADTP",155,0)
PV1 ;;
"RTN","RGADTP",156,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",157,0)
 Q
"RTN","RGADTP",158,0)
OBX ;;
"RTN","RGADTP",159,0)
 N COMP,SSNV S COMP=$E(HL("ECH"),1)
"RTN","RGADTP",160,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",161,0)
 I 'RGLOCAL D:$$FREE^RGRSPARS($P($P(MSG,HL("FS"),4),RGC,2))="SECURITY LEVEL"
"RTN","RGADTP",162,0)
 .S ARRAY("SENSITIVITY")=$$SENSTIVE^RGRSPARS($P(MSG,HL("FS"),6),COMP),ARRAY("SENSITIVITY DATE")=$$FREE^RGRSPARS($$FMDATE^HLFNC($P(MSG,HL("FS"),15)))
"RTN","RGADTP",163,0)
 .S ARRAY("SENSITIVITY USER")=$$FREE^RGRSPARS($P($P(MSG,HL("FS"),17),RGC,2))_","_$$FREE^RGRSPARS($P($P(MSG,HL("FS"),17),RGC,3))
"RTN","RGADTP",164,0)
 ;**45 Get SSN VERIFICATION STATUS out of OBX if message is from the MPI
"RTN","RGADTP",165,0)
 I 'RGLOCAL,$P(HL("SFN"),COMP)="200M" I $P($P(MSG,HL("FS"),4),RGC)="SSN VERIFICATION STATUS" S SSNV=$P($P(MSG,HL("FS"),6),RGC,2),ARRAY(.0907)=$S(SSNV="VERIFIED":4,SSNV="INVALID":2,1:"@")
"RTN","RGADTP",166,0)
 Q
"RTN","RGADTP",167,0)
ZPD ;;
"RTN","RGADTP",168,0)
 I RGLOCAL S THLA("HLS",ENT)=$$EN1^VAFHLZPD(DFN,"1,17,21,34"),ENT=ENT+1 ;**45 to build new ZPD
"RTN","RGADTP",169,0)
 I 'RGLOCAL S ARRAY(.0906)=$P(MSG,HL("FS"),35) I ARRAY(.0906)=HL("Q") S ARRAY(.0906)="@" ;**45 Pull out pseudo ssn reason
"RTN","RGADTP",170,0)
 Q
"RTN","RGADTP",171,0)
ZSP ;;
"RTN","RGADTP",172,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",173,0)
 I 'RGLOCAL S ARRAY(.301)=$$YESNO^RGRSPARS($P(MSG,HL("FS"),3)),ARRAY(.302)=$$FREE^RGRSPARS($P(MSG,HL("FS"),4)),ARRAY(.323)=$$POS^RGRSPARS($P(MSG,HL("FS"),5))
"RTN","RGADTP",174,0)
 Q
"RTN","RGADTP",175,0)
ZEL ;;
"RTN","RGADTP",176,0)
 I RGLOCAL D
"RTN","RGADTP",177,0)
 .;**40 to rebuild ZEL segment
"RTN","RGADTP",178,0)
 .I '$D(DFN) S THLA("HLS",ENT)=MSG,ENT=ENT+1 Q  ;don't know DFN pass back original ZEL segment
"RTN","RGADTP",179,0)
 .N VAFZEL D EN1^VAFHLZEL(DFN,"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22",2,.VAFZEL) ;build a complete ZEL segment
"RTN","RGADTP",180,0)
 .;need to take into account may be more than 1 array entry and that each entry could go over 245 so there would be another subscript
"RTN","RGADTP",181,0)
 .N CNT,ZELX S (CNT,ZELX)=0 F  S ZELX=$O(VAFZEL(ZELX)) Q:'ZELX  D
"RTN","RGADTP",182,0)
 ..I CNT>0 S THLA("HLS",ENT,CNT)=VAFZEL(ZELX),CNT=CNT+1
"RTN","RGADTP",183,0)
 ..I CNT'>0 S THLA("HLS",ENT)=VAFZEL(ZELX),RGI=RGI+2
"RTN","RGADTP",184,0)
 .S ENT=ENT+1,RGI=RGI-2 ;reset to not end up wih 2 "" entries before next segment
"RTN","RGADTP",185,0)
 I 'RGLOCAL D
"RTN","RGADTP",186,0)
 . S ARRAY(.361)=$$ELIG^RGRSPARS($P(MSG,HL("FS"),3)),ARRAY(.3612)=$$FREE^RGRSPARS($P(MSG,HL("FS"),12))
"RTN","RGADTP",187,0)
 . S ARRAY(.3615)=$$FREE^RGRSPARS($P(MSG,HL("FS"),14)),ARRAY(391)=$$TYPE^RGRSPARS($P(MSG,HL("FS"),10)),ARRAY(1901)=$$VETERAN^RGRSPARS($P(MSG,HL("FS"),9))
"RTN","RGADTP",188,0)
 Q
"RTN","RGADTP",189,0)
ZCT ;;
"RTN","RGADTP",190,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",191,0)
 I 'RGLOCAL S ARRAY(.211)=$$FREE^RGRSPARS($P(MSG,HL("FS"),4)),ARRAY(.219)=$$FREE^RGRSPARS($P(MSG,HL("FS"),7))
"RTN","RGADTP",192,0)
 Q
"RTN","RGADTP",193,0)
ZEM ;;
"RTN","RGADTP",194,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",195,0)
 I 'RGLOCAL S ARRAY(.31115)=$$EMP^RGRSPARS($P(MSG,HL("FS"),4))
"RTN","RGADTP",196,0)
 Q
"RTN","RGADTP",197,0)
ZFF ;;
"RTN","RGADTP",198,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",199,0)
 I 'RGLOCAL S ARRAY("FLD")=$P(MSG,HL("FS"),3)
"RTN","RGADTP",200,0)
 Q
"RTN","RGADTP",201,0)
PROCIN ;
"RTN","RGADTP",202,0)
 D PROCIN^RGADTP2(.ARRAY,.RGLOCAL,.RGER,.DFN,.HL)
"RTN","RGADTP",203,0)
 Q
"RTN","RGADTP",204,0)
GENACK ;
"RTN","RGADTP",205,0)
 N RGCNT,IEN,RG
"RTN","RGADTP",206,0)
 I $G(ARRAY("DFN"))'>0 S RGER="-1^Unknown ICN#"_$G(ARRAY("ICN"))_" and SSN#"_$G(ARRAY(.09))
"RTN","RGADTP",207,0)
 S RGCNT=1,HLA("HLA",RGCNT)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(RGER)<0:$P(RGER,"^",2,3),1:""),RGCNT=RGCNT+1
"RTN","RGADTP",208,0)
 S RGSITE=$$LKUP^XUAF4(RGSITE)
"RTN","RGADTP",209,0)
 D LINK^HLUTIL3(RGSITE,.RG) S IEN=$O(RG(0)) S HLL("LINKS",1)="^"_RG(IEN)
"RTN","RGADTP",210,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA,"",.HL)
"RTN","RGADTP",211,0)
 K HLA
"RTN","RGADTP",212,0)
 Q
"RTN","RGADTP",213,0)
RSP ;
"RTN","RGADTP",214,0)
 Q
"RTN","RGADTP1")
0^7^B31035462^B30537639
"RTN","RGADTP1",1,0)
RGADTP1 ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS - CONTINUED ;6/2/02
"RTN","RGADTP1",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**26,27,42,45,44**;30 Apr 99;Build 8
"RTN","RGADTP1",3,0)
PIDP(MSG,ARRAY,HL) ;process PID segment
"RTN","RGADTP1",4,0)
 N ID,IDS,PIDAA,PIDNTC
"RTN","RGADTP1",5,0)
 ;Since PID can be over 245 characters loop through setting a PID ARRAY
"RTN","RGADTP1",6,0)
 ;sequenced PID(1)="PID"... PID(4 or 5) can be over 245 characters so
"RTN","RGADTP1",7,0)
 ;it will also loop and place it in PID(4,1...
"RTN","RGADTP1",8,0)
 ;
"RTN","RGADTP1",9,0)
 ; Input variables
"RTN","RGADTP1",10,0)
 ;   assumes that MSG or MSG(I) will contain the PID segment
"RTN","RGADTP1",11,0)
 ; Output ARRAY ARRAY will contain the following subscripts
"RTN","RGADTP1",12,0)
 ;   SSN - patient SSN
"RTN","RGADTP1",13,0)
 ;   ICN - patient ICN
"RTN","RGADTP1",14,0)
 ;   DFN - sites local identifier
"RTN","RGADTP1",15,0)
 ;   MPISSITE - authoritative source (station# of sending site)
"RTN","RGADTP1",16,0)
 ;   SEX - patient's SEX
"RTN","RGADTP1",17,0)
 ;   MPIDOB - Date of Birth
"RTN","RGADTP1",18,0)
 ;   NAME,SURNAME,FIRST,MIDDLE,PREFIX,and SUFFIX - Patient Name
"RTN","RGADTP1",19,0)
 ;   MMN - Mother's maiden name
"RTN","RGADTP1",20,0)
 ;   POBCITY, POBSTATE - Place of birth city and state
"RTN","RGADTP1",21,0)
 ;
"RTN","RGADTP1",22,0)
 N PID,MPIJ,LNGTH,LNGTH1,PID1,SEQ,SEQ1,COMP,SUBCOMP,REP,HLECH,X,Y,CNT,NXT,ID,IDS,PIDAA,PIDNTC,NAME,LNGTH2,PIDSITE,PIDXDT,HLECH,HLFS
"RTN","RGADTP1",23,0)
 S HLFS=HL("FS"),HLECH=HL("ECH")
"RTN","RGADTP1",24,0)
 S ARRAY("DFN")="",ARRAY("ICN")="",ARRAY("CLAIMN")="",ARRAY("SSN")=""
"RTN","RGADTP1",25,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","RGADTP1",26,0)
 S LNGTH=$L(MSG,HL("FS")) F SEQ=1:1:LNGTH S PID(SEQ)=$P(MSG,HL("FS"),SEQ)
"RTN","RGADTP1",27,0)
 S SEQ1=1,X=0 F  S X=$O(MSG(X)) Q:'X  S LNGTH=$L(MSG(X),HL("FS")) D
"RTN","RGADTP1",28,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1 D
"RTN","RGADTP1",29,0)
 .. S NXT=$P(MSG(X),HL("FS"),Y) D
"RTN","RGADTP1",30,0)
 ... I $L($G(PID(SEQ)))=245 D  Q
"RTN","RGADTP1",31,0)
 .... I $L(NXT_$G(PID(SEQ,SEQ1)))>245 S LNGTH1=$L(PID(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,PID(SEQ,SEQ1)=$G(PID(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","RGADTP1",32,0)
 .... I $L(NXT_$G(PID(SEQ,SEQ1)))'>245 S PID(SEQ,SEQ1)=$G(PID(SEQ,SEQ1))_NXT
"RTN","RGADTP1",33,0)
 ... I $L(NXT_$G(PID(SEQ)))>245 S LNGTH1=$L($G(PID(SEQ))) S LNGTH2=245-LNGTH1,PID(SEQ)=$G(PID(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S PID(SEQ,SEQ1)=NXT
"RTN","RGADTP1",34,0)
 ... I $L(NXT_$G(PID(SEQ)))'>245 S PID(SEQ)=$G(PID(SEQ))_NXT Q
"RTN","RGADTP1",35,0)
 ;get PID-3 Patient Identifier List (three ids should be returned ICN, SSN, and DFN)
"RTN","RGADTP1",36,0)
 N LASTID,IDCNT,CNT
"RTN","RGADTP1",37,0)
 S IDS=PID(4)
"RTN","RGADTP1",38,0)
 S LASTID=$L(IDS,REP),IDCNT=1,IDS=PID(4),CNT=1
"RTN","RGADTP1",39,0)
 F X=1:1:LASTID S ID=$P(IDS,REP,X) D
"RTN","RGADTP1",40,0)
 .;if this is the last entry check for an extension of the message and reset the key variables
"RTN","RGADTP1",41,0)
 .I X=LASTID I $D(PID(4,IDCNT)) S ID=ID_$P(PID(4,IDCNT),REP),IDS=$P(PID(4,IDCNT),REP,2,99),IDCNT=IDCNT+1,X=0,LASTID=$L(IDS,REP)
"RTN","RGADTP1",42,0)
 . ;get id, assigning authority, and name type code
"RTN","RGADTP1",43,0)
 . S PIDAA=$P($P(ID,COMP,4),SUBCOMP),PIDNTC=$P(ID,COMP,5),PIDSITE=$P($P(ID,COMP,6),SUBCOMP,2),PIDXDT=$P(ID,COMP,8)
"RTN","RGADTP1",44,0)
 . S ID=$P(ID,COMP)
"RTN","RGADTP1",45,0)
 . Q:ID=""
"RTN","RGADTP1",46,0)
 . ;check assigning authority(0363) AND name type code(0203)
"RTN","RGADTP1",47,0)
 . I PIDAA="USVHA" D
"RTN","RGADTP1",48,0)
 .. I PIDNTC="NI" D
"RTN","RGADTP1",49,0)
 ... I $G(PIDXDT)="" S ARRAY("ICN")=ID,ARRAY("MPISSITE")=PIDSITE,ARRAY(991.02)=$P(ID,"V",2)  ;National unique individual identifier
"RTN","RGADTP1",50,0)
 ... I $G(PIDXDT)'="" S ARRAY("OID",CNT)=ID_"^"_PIDAA_"^"_PIDSITE_"^"_PIDXDT,CNT=CNT+1  ;Deprecated National unique individual identifier
"RTN","RGADTP1",51,0)
 .. I PIDNTC="PI" S ARRAY("DFN")=ID,ARRAY("DFNLOC")=PIDSITE  ;Patient internal identifier
"RTN","RGADTP1",52,0)
 . I PIDAA="USSSA" D
"RTN","RGADTP1",53,0)
 .. I PIDNTC="SS",PIDXDT="" S ARRAY("SSN")=ID  ;Social Security number **44 (new) look out for alias ssns
"RTN","RGADTP1",54,0)
 . I PIDAA="USVBA" D
"RTN","RGADTP1",55,0)
 .. I PIDNTC="PN" S ARRAY("CLAIMN")=ID  ;VBA CLAIM#
"RTN","RGADTP1",56,0)
 ;get PID-4 alternate ID (ICN History)
"RTN","RGADTP1",57,0)
 I $G(PID(5))'="" D
"RTN","RGADTP1",58,0)
 . S CNT=1
"RTN","RGADTP1",59,0)
 . F X=1:1:$L(PID(5),REP) S ARRAY("OID",CNT)=$P(PID(5),REP,X),CNT=CNT+1
"RTN","RGADTP1",60,0)
 . S Y=0 F  S Y=$O(PID(5,Y)) Q:'Y  D
"RTN","RGADTP1",61,0)
 .. S ARRAY("OID",CNT-1)=ARRAY("OID",CNT-1)_$P(PID(5,Y),REP)
"RTN","RGADTP1",62,0)
 .. F X=2:1:$L(PID(5,Y),REP) S ARRAY("OID",CNT)=$P(PID(5,Y),REP,X),CNT=CNT+1
"RTN","RGADTP1",63,0)
 . S X=0 F  S X=$O(ARRAY("OID",X)) Q:'X  D
"RTN","RGADTP1",64,0)
 .. N ID,AA,AL S ID=$P(ARRAY("OID",X),COMP),AA=$P($P(ARRAY("OID",X),COMP,4),SUBCOMP,1),AL=$P($P(ARRAY("OID",X),COMP,6),SUBCOMP,2) S AL=$$IEN^XUAF4(AL)
"RTN","RGADTP1",65,0)
 .. S ARRAY("OID",X)=ID_"^"_AA_"^"_AL
"RTN","RGADTP1",66,0)
 ;get PID-5 Patient Name
"RTN","RGADTP1",67,0)
 I $G(PID(6))'="" S NAME=PID(6),ARRAY("SURNAME")=$P(NAME,COMP),ARRAY("FIRST")=$P(NAME,COMP,2),ARRAY("MIDDLE")=$P(NAME,COMP,3),ARRAY("PREFIX")=$P(NAME,COMP,4),ARRAY("SUFFIX")=$P(NAME,COMP,5) D
"RTN","RGADTP1",68,0)
 . S ARRAY("NAME")=$$FMNAME^HLFNC($P(PID(6),COMP,1,6))
"RTN","RGADTP1",69,0)
 ;get PID-6 Mother's maiden name
"RTN","RGADTP1",70,0)
 S ARRAY("MMN")=$P($G(PID(7)),COMP,1,5) D
"RTN","RGADTP1",71,0)
 . I $P(ARRAY("MMN"),COMP)'=HL("Q") S HLECH=HL("ECH") S ARRAY("MMN")=$$FREE^RGRSPARS($$FMNAME^HLFNC(ARRAY("MMN"))) Q
"RTN","RGADTP1",72,0)
 . I $P(ARRAY("MMN"),COMP)=HL("Q") S ARRAY("MMN")=$$FREE^RGRSPARS($P(ARRAY("MMN"),COMP))
"RTN","RGADTP1",73,0)
 ;get PID-7 Date of Birth
"RTN","RGADTP1",74,0)
 S ARRAY("MPIDOB")=$$FMDATE^HLFNC($G(PID(8)))
"RTN","RGADTP1",75,0)
 ;get PID-8 Sex
"RTN","RGADTP1",76,0)
 S ARRAY("SEX")=$G(PID(9))
"RTN","RGADTP1",77,0)
 ;get PID-11-3 ADDRESS BOTH "P"rimary and "N" Place of
"RTN","RGADTP1",78,0)
 S CNT=1
"RTN","RGADTP1",79,0)
 N ADRTYPE,ADDR
"RTN","RGADTP1",80,0)
 F X=1:1:$L(PID(12),REP) D
"RTN","RGADTP1",81,0)
 . S ADDR=$P(PID(12),REP,X),ADRTYPE=$P(ADDR,COMP,7)
"RTN","RGADTP1",82,0)
 . I ADRTYPE="P" D
"RTN","RGADTP1",83,0)
 .. S ADDR=$$FREE^RGRSPARS(ADDR)
"RTN","RGADTP1",84,0)
 .. S ARRAY(.111)=$$FREE^RGRSPARS($P(ADDR,COMP,1))  ;addr [1]
"RTN","RGADTP1",85,0)
 .. S ARRAY(.112)=$$FREE^RGRSPARS($P(ADDR,COMP,2))  ;addr [2]
"RTN","RGADTP1",86,0)
 .. S ARRAY(.113)=$$FREE^RGRSPARS($P(ADDR,COMP,8))  ;addr [3]
"RTN","RGADTP1",87,0)
 .. S ARRAY(.114)=$$FREE^RGRSPARS($P(ADDR,COMP,3))  ;city
"RTN","RGADTP1",88,0)
 .. S ARRAY(.115)=$$STATE^RGRSPARS($P(ADDR,COMP,4))  ;state
"RTN","RGADTP1",89,0)
 .. S ARRAY(.1112)=$$FREE^RGRSPARS($P(ADDR,COMP,5))  ;zip+4
"RTN","RGADTP1",90,0)
 .. N CNTYCODE S CNTYCODE=PID(13)  ;county code
"RTN","RGADTP1",91,0)
 .. S ARRAY(.117)=$$COUNTY^RGRSPARS(ARRAY(.115),CNTYCODE)
"RTN","RGADTP1",92,0)
 .. S ARRAY(.131)=$$FREE^RGRSPARS(PID(14))
"RTN","RGADTP1",93,0)
 .. S ARRAY(.132)=$$FREE^RGRSPARS(PID(15))
"RTN","RGADTP1",94,0)
 . I ADRTYPE="N" D
"RTN","RGADTP1",95,0)
 .. S ARRAY("POBCITY")=$$FREE^RGRSPARS($P(ADDR,COMP,3))  ;POB city
"RTN","RGADTP1",96,0)
 .. S ARRAY("POBSTATE")=$$STATE^RGRSPARS($P(ADDR,COMP,4))  ;POB state
"RTN","RGADTP1",97,0)
 ;marital status
"RTN","RGADTP1",98,0)
 S ARRAY(.05)=$$MARITAL^RGRSPARS(PID(17))
"RTN","RGADTP1",99,0)
 ;multiple birth indicator
"RTN","RGADTP1",100,0)
 ;;S ARRAY("MBI")=$G(PID(25)) I ARRAY("MBI")=HL("Q") S ARRAY("MBI")="@" ;**45 to get MBI and setup as yes/no field change to @ if HL("Q")
"RTN","RGADTP1",101,0)
 ;;REMOVED FROM PATCH 45 DUE TO NEEDING DG707
"RTN","RGADTP1",102,0)
 ;religious preference
"RTN","RGADTP1",103,0)
 S ARRAY(.08)=$$RELIG^RGRSPARS(PID(18))
"RTN","RGADTP1",104,0)
 ;address
"RTN","RGADTP1",105,0)
 ;get PID-29 Date of Death
"RTN","RGADTP1",106,0)
 S ARRAY("MPIDOD")=$$FREE^RGRSPARS($$FMDATE^HLFNC($G(PID(30)))),ARRAY(.351)=ARRAY("MPIDOD")
"RTN","RGADTP1",107,0)
 Q
"RTN","RGADTP2")
0^8^B42653247^B33963226
"RTN","RGADTP2",1,0)
RGADTP2 ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS - CONTINUED ;10/30/02  10:04
"RTN","RGADTP2",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**27,20,45,44**;30 Apr 99;Build 8
"RTN","RGADTP2",3,0)
DBIA ;
"RTN","RGADTP2",4,0)
 ;Reference to $$ADD^VAFCEHU1 supported by IA #2753
"RTN","RGADTP2",5,0)
 ;Reference to $$SEND2^VAFCUTL1 supported by IA #2779
"RTN","RGADTP2",6,0)
 ;Reference to EDIT^VAFCPTED supported by IA #2784
"RTN","RGADTP2",7,0)
 Q
"RTN","RGADTP2",8,0)
PROCIN(ARRAY,RGLOCAL,RGER,DFN,HL) ;
"RTN","RGADTP2",9,0)
 N RGRSDFN,OTHSITE,NODE,ICN,CMORIEN,CMOR,CMORDISP,SENSTVTY,RMTDOD,LOCDOD,VAFCA,VAFCA08,HERE,BOGUS,ARAY,REP
"RTN","RGADTP2",10,0)
 S REP=$E(HL("ECH"),2)
"RTN","RGADTP2",11,0)
 S HERE=$P($$SITE^VASITE,"^",3)
"RTN","RGADTP2",12,0)
 ;if sending site is your site quit
"RTN","RGADTP2",13,0)
 Q:$G(ARRAY("MPISSITE"))=$G(HERE)
"RTN","RGADTP2",14,0)
 S ARRAY(.097)=$P($$NOW^XLFDT,".")
"RTN","RGADTP2",15,0)
 I $G(ARRAY("ICN"))'="" D
"RTN","RGADTP2",16,0)
 . S RGRSDFN=$$GETDFN^MPIF001(+ARRAY("ICN")) I +RGRSDFN<1 S RGER=RGRSDFN_" ICN#"_$G(ARRAY("ICN")) Q  ;quit and return error msg
"RTN","RGADTP2",17,0)
 . S OTHSITE=ARRAY("SENDING SITE")
"RTN","RGADTP2",18,0)
 . ;**40 REMOVED THE PLUS TO KEEP SUFFIX ON STATION# & CHANGED THE SITE TO BE SENDING SITE INSTEAD OF AUTHORITATIVE SOURCE
"RTN","RGADTP2",19,0)
 I $G(RGRSDFN)="" S RGRSDFN=$G(DFN)
"RTN","RGADTP2",20,0)
 I $G(RGRSDFN)="" S RGER="-1^DFN not defined"
"RTN","RGADTP2",21,0)
 Q:$G(RGER)
"RTN","RGADTP2",22,0)
 I $G(OTHSITE)="" S OTHSITE=""
"RTN","RGADTP2",23,0)
 I +$$SEND2^VAFCUTL1(RGRSDFN,"T")  ;quit and return error msg
"RTN","RGADTP2",24,0)
 S NODE=$$MPINODE^MPIFAPI(RGRSDFN)
"RTN","RGADTP2",25,0)
 S ICN=$P(NODE,"^")
"RTN","RGADTP2",26,0)
 S CMORIEN=$P(NODE,"^",3)
"RTN","RGADTP2",27,0)
 S CMOR=$$NS^XUAF4(CMORIEN)
"RTN","RGADTP2",28,0)
 S CMORDISP=$P(CMOR,"^",1)
"RTN","RGADTP2",29,0)
 S CMOR=$P(CMOR,"^",2)
"RTN","RGADTP2",30,0)
 ;
"RTN","RGADTP2",31,0)
 ;If patient is Sensitive at other site but not here send bulletin
"RTN","RGADTP2",32,0)
 I $G(ARRAY("SENSITIVITY"))'="" S SENSTVTY=$G(ARRAY("SENSITIVITY")) D
"RTN","RGADTP2",33,0)
 . N NAME S NAME=ARRAY("NAME")
"RTN","RGADTP2",34,0)
 . I '$$SENSTIVE^RGRSENS(RGRSDFN),SENSTVTY D
"RTN","RGADTP2",35,0)
 .. S ARAY("SSN")=ARRAY("SSN")
"RTN","RGADTP2",36,0)
 .. S ARAY("SENDING SITE")=ARRAY("SENDING SITE")
"RTN","RGADTP2",37,0)
 .. S ARAY("SENSITIVITY USER")=ARRAY("SENSITIVITY USER")
"RTN","RGADTP2",38,0)
 .. S ARAY("SENSITIVITY DATE")=ARRAY("SENSITIVITY DATE")
"RTN","RGADTP2",39,0)
 .. D SENSTIVE^RGRSBUL1(RGRSDFN,"ARAY",NAME)
"RTN","RGADTP2",40,0)
 ;
"RTN","RGADTP2",41,0)
 ;If patient has DATE OF DEATH (DOD) at remote site send bulletin
"RTN","RGADTP2",42,0)
 ;Ignore time if present with date.
"RTN","RGADTP2",43,0)
 S RMTDOD=$G(ARRAY("MPIDOD")),RMTDOD=$P(RMTDOD,".")
"RTN","RGADTP2",44,0)
 S DFN=RGRSDFN D DEM^VADPT
"RTN","RGADTP2",45,0)
 S LOCDOD=$P($P(VADM(6),"^"),".")
"RTN","RGADTP2",46,0)
 ;If there is a remote DOD but no local DOD  OR
"RTN","RGADTP2",47,0)
 ;if remote DOD is different from local DOD, send bulletin
"RTN","RGADTP2",48,0)
 I RMTDOD D
"RTN","RGADTP2",49,0)
 . N NAME S NAME=ARRAY("NAME")
"RTN","RGADTP2",50,0)
 . S ARAY("SSN")=ARRAY("SSN")
"RTN","RGADTP2",51,0)
 . S ARAY("SENDING SITE")=ARRAY("SENDING SITE")
"RTN","RGADTP2",52,0)
 . D RMTDOD^RGRSBUL1(RGRSDFN,"ARAY",NAME,RMTDOD,LOCDOD)
"RTN","RGADTP2",53,0)
 K VADM
"RTN","RGADTP2",54,0)
 ;
"RTN","RGADTP2",55,0)
NOTLOC I 'RGLOCAL D
"RTN","RGADTP2",56,0)
 . ;if sending site is not the CMOR AND NOT THE MPI - log update into PDR if differences exist **45 ADDED MPI
"RTN","RGADTP2",57,0)
 . I (OTHSITE)'=(CMOR)&(OTHSITE'="200M") D  Q
"RTN","RGADTP2",58,0)
 .. S VAFCA=$P($$NOW^XLFDT,".")_"^"_$$NOW^XLFDT_"^"_$G(ARRAY("SENDING SITE"))_"^"_RGRSDFN
"RTN","RGADTP2",59,0)
 .. S ARRAY(.01)=$$FREE^RGRSPARS(ARRAY("NAME"))
"RTN","RGADTP2",60,0)
 .. S ARRAY(.03)=$$FREE^RGRSPARS($G(ARRAY("MPIDOB")))
"RTN","RGADTP2",61,0)
 .. S ARRAY(.09)=$$FREE^RGRSPARS($G(ARRAY("SSN")))
"RTN","RGADTP2",62,0)
 .. S ARRAY(.02)=$$SEX^RGRSPARS($G(ARRAY("SEX")))
"RTN","RGADTP2",63,0)
 .. S ARRAY(.2403)=$$FREE^RGRSPARS($G(ARRAY("MMN")))
"RTN","RGADTP2",64,0)
 .. S ARRAY(991.01)=$P($G(ARRAY("ICN")),"V")
"RTN","RGADTP2",65,0)
 .. N ARAY M ARAY(2)=ARRAY
"RTN","RGADTP2",66,0)
 .. S VAFCA08=1 S BOGUS=$$ADD^VAFCEHU1(VAFCA,"ARAY")
"RTN","RGADTP2",67,0)
 . ;if sending site is the CMOR OR MPI - synchronize data **45 ADDED MPI AND SSNV TO UPDATED FIELDS
"RTN","RGADTP2",68,0)
 . I (OTHSITE)=(CMOR)!(OTHSITE="200M") D
"RTN","RGADTP2",69,0)
 .. ;**44
"RTN","RGADTP2",70,0)
 .. ;is there an outstanding edit in the ADT/HL7 PIVOT file for this patient for an identity element
"RTN","RGADTP2",71,0)
 .. S RGER=$$CHKPVT(.ARRAY) Q:+RGER<0
"RTN","RGADTP2",72,0)
 .. N DR S DR=".01;.03;.09;.02;.2403;994"
"RTN","RGADTP2",73,0)
 .. S VAFCA08=1
"RTN","RGADTP2",74,0)
 .. S ARAY(2,.01)=ARRAY("NAME")
"RTN","RGADTP2",75,0)
 .. S ARAY(2,.03)=$G(ARRAY("MPIDOB"))
"RTN","RGADTP2",76,0)
 .. I ARRAY("SSN")'="" S ARAY(2,.09)=$G(ARRAY("SSN")) ;**45 only set SSN to update if it isn't null
"RTN","RGADTP2",77,0)
 .. S ARAY(2,.02)=$G(ARRAY("SEX"))
"RTN","RGADTP2",78,0)
 .. S ARAY(2,.2403)=$G(ARRAY("MMN"))
"RTN","RGADTP2",79,0)
 .. ;if SSN VERIFICATION STATUS field has been added to the DD then attempt to set it
"RTN","RGADTP2",80,0)
 .. N ERROR,LABEL D FIELD^DID(2,.0907,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",81,0)
 ... S ARAY(2,.0907)=$G(ARRAY(.0907)) S DR=DR_";.0907"
"RTN","RGADTP2",82,0)
 .. S ARAY(2,994)=$G(ARRAY("MBI"))
"RTN","RGADTP2",83,0)
 .. D EDIT^VAFCPTED(RGRSDFN,"ARAY(2)",DR)
"RTN","RGADTP2",84,0)
 .. ;check to see if edits were successful, if not set RGER="why it failed"
"RTN","RGADTP2",85,0)
 .. N NAME,SSN,PDOB,SEX,MMN,OLDNAME,OLDHLNAM,OLDMMN,OLDHLMMN,HLNAME,HLMMN,SSNV,MBI
"RTN","RGADTP2",86,0)
 .. S NAME=$$GET1^DIQ(2,+RGRSDFN_",",.01,"I")
"RTN","RGADTP2",87,0)
 .. S PDOB=$$GET1^DIQ(2,+RGRSDFN_",",.03,"I")
"RTN","RGADTP2",88,0)
 .. S SSN=$$GET1^DIQ(2,+RGRSDFN_",",.09,"I")
"RTN","RGADTP2",89,0)
 .. S SEX=$$GET1^DIQ(2,+RGRSDFN_",",.02,"I")
"RTN","RGADTP2",90,0)
 .. S MMN=$$GET1^DIQ(2,+RGRSDFN_",",.2403,"I")
"RTN","RGADTP2",91,0)
 .. S SSNV=$$GET1^DIQ(2,+RGRSDFN_",",.0907,"I")
"RTN","RGADTP2",92,0)
 .. S MBI=$$GET1^DIQ(2,+RGRSDFN_",",994,"I")
"RTN","RGADTP2",93,0)
 .. D STDNAME^XLFNAME(.NAME,"F",.OLDNAME) S HLNAME=ARRAY("NAME") D STDNAME^XLFNAME(.HLNAME,"F",.OLDHLNAM)
"RTN","RGADTP2",94,0)
 .. I NAME'=$G(HLNAME) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"Name field failure"
"RTN","RGADTP2",95,0)
 .. I PDOB'=$G(ARRAY("MPIDOB")) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"DOB field failure"
"RTN","RGADTP2",96,0)
 .. I $G(ARRAY("SSN"))'="",SSN'=$G(ARRAY("SSN")) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SSN field failure" ;**45 only check if SSN is sent isn't null
"RTN","RGADTP2",97,0)
 .. I SEX'=$G(ARRAY("SEX")) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SEX field failure"
"RTN","RGADTP2",98,0)
 .. D STDNAME^XLFNAME(.MMN,"F",.OLDMMN) S HLMMN=ARRAY("MMN") D STDNAME^XLFNAME(.HLMMN,"F",.OLDHLMMN)
"RTN","RGADTP2",99,0)
 .. I MMN'=$G(HLMMN) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"MOTHER'S MAIDEN NAME field failure"
"RTN","RGADTP2",100,0)
 .. I $D(ARAY(2,.0907)) S:$G(ARRAY(.0907))="@" ARRAY(.0907)="" I SSNV'=$G(ARRAY(.0907)) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SSN VERIFICATION field failure"
"RTN","RGADTP2",101,0)
 .. ;;**REMOVED MBI FROM PATCH 45
"RTN","RGADTP2",102,0)
 .. ;;I MBI'=$G(ARRAY("MBI")) D
"RTN","RGADTP2",103,0)
 ..;.;;Q:MBI=""&($G(ARRAY("MBI"))="@")  ;**45 "" AND @ ARE THE SAME
"RTN","RGADTP2",104,0)
 ..;.;;S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"MULTIPLE BIRTH INDICATOR field failure"
"RTN","RGADTP2",105,0)
 .. ;send the updated fields to the MPI to synch site with MPI
"RTN","RGADTP2",106,0)
 .. I HL("ETN")'="A31" S ZTSAVE("DFN")="",ZTRTN="MPISYN^RGADTPC",ZTDESC="Sending Synchronized Patient Data to MPI...",ZTIO="RG QUEUE",ZTDTH=$H D ^%ZTLOAD
"RTN","RGADTP2",107,0)
 .. ;**45 ^ don't trigger A31 sync message if A31 was being processed-- ack to a31 will sync id elements on MPI
"RTN","RGADTP2",108,0)
 Q
"RTN","RGADTP2",109,0)
CHKPVT(ARRAY) ;CHECKS TO SEE IF OUTSTANDING IDENTITY EDIT IS WAITING TO BE SENT IN THE ADT/HL7 PIVOT FILE
"RTN","RGADTP2",110,0)
 ;**44 CREATED
"RTN","RGADTP2",111,0)
 ;ARRAY CONTAINS THE ARRAY ELEMENTS NEEDED TO FIND THE PATIENT IN THE ADT/HL7 PIVOT FILE
"RTN","RGADTP2",112,0)
 ;RETURNED IS -1^EDIT PENDING IN PIVOT FILE OR 0 IF THERE ISN'T ONE
"RTN","RGADTP2",113,0)
 I '$D(^VAT(391.71,"C",ARRAY("DFN"))) Q 0
"RTN","RGADTP2",114,0)
 N PIV,FIELDS
"RTN","RGADTP2",115,0)
 S PIV=$O(^VAT(391.71,"C",ARRAY("DFN"),"A"),-1) ;get last entry in the pivot file for this patient
"RTN","RGADTP2",116,0)
 I '$D(^VAT(391.71,"AXMIT",4,PIV))&('$D(^VAT(391.71,"AXMIT",3,PIV))) Q 0
"RTN","RGADTP2",117,0)
 S FIELDS=$$GET1^DIQ(391.71,PIV_",",2.1,"I")
"RTN","RGADTP2",118,0)
 I FIELDS[".01;"!(FIELDS[".02;")!(FIELDS[".03;")!(FIELDS[".09;")!(FIELDS[".0906;")!(FIELDS[".2403;")!(FIELDS["994;") Q "-1^DFN "_ARRAY("DFN")_":  Edits made to identity fields waiting to come to MPI, MPI update not processed as of yet."
"RTN","RGADTP2",119,0)
 Q 0
"RTN","RGEVPRG")
0^5^B65012676^B41034951
"RTN","RGEVPRG",1,0)
RGEVPRG ;BAY/ALS-OPTIONS TO PURGE MPI/PD EXCEPTIONS ;08/23/99
"RTN","RGEVPRG",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**3,12,19,32,35,43,44**;30 Apr 99;Build 8
"RTN","RGEVPRG",3,0)
 ;
"RTN","RGEVPRG",4,0)
MAIN ;
"RTN","RGEVPRG",5,0)
 ;Q:($D(^TMP("RGEXC")))!($D(^TMP("RGEXC2")))
"RTN","RGEVPRG",6,0)
 L +^RGHL7(991.1):0 I '$T Q
"RTN","RGEVPRG",7,0)
 L -^RGHL7(991.1)
"RTN","RGEVPRG",8,0)
 L +^RGHL7(991.1,"RG PURGE EXCEPTION"):5 E  Q
"RTN","RGEVPRG",9,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RGEVPRG",10,0)
 S $P(^RGSITE(991.8,1,"EXCPRG"),"^",1)=$$NOW^XLFDT
"RTN","RGEVPRG",11,0)
 S $P(^RGSITE(991.8,1,"EXCPRG"),"^",3)="R"
"RTN","RGEVPRG",12,0)
 D PROC
"RTN","RGEVPRG",13,0)
 D PRGDUP
"RTN","RGEVPRG",14,0)
 D PRG30
"RTN","RGEVPRG",15,0)
 D PRGZZ
"RTN","RGEVPRG",16,0)
 S $P(^RGSITE(991.8,1,"EXCPRG"),"^",2)=$$NOW^XLFDT
"RTN","RGEVPRG",17,0)
 S $P(^RGSITE(991.8,1,"EXCPRG"),"^",3)="C"
"RTN","RGEVPRG",18,0)
 L -^RGHL7(991.1,"RG PURGE EXCEPTION")
"RTN","RGEVPRG",19,0)
 Q
"RTN","RGEVPRG",20,0)
PRGPAT ;Purge by Patient
"RTN","RGEVPRG",21,0)
 W !
"RTN","RGEVPRG",22,0)
 S DIC="^DPT(",DIC(0)="QEAM",DIC("A")="Select PATIENT: "
"RTN","RGEVPRG",23,0)
 D ^DIC K DIC G:Y<0 QUIT  S RGDFN=+Y
"RTN","RGEVPRG",24,0)
 S EXCT="",FLAG=0
"RTN","RGEVPRG",25,0)
 F  S EXCT=$O(^RGHL7(991.1,"ADFN",EXCT)) Q:EXCT=""  D
"RTN","RGEVPRG",26,0)
 . I $D(^RGHL7(991.1,"ADFN",EXCT,RGDFN)) S FLAG=1 Q
"RTN","RGEVPRG",27,0)
 I FLAG=0 W !,"There are no exceptions on file for this patient." G PRGPAT
"RTN","RGEVPRG",28,0)
 I $$IFLOCAL^MPIF001(RGDFN) W !,"This patient does not have a national ICN assigned, do not purge." Q
"RTN","RGEVPRG",29,0)
 S DFN=RGDFN D DEM^VADPT
"RTN","RGEVPRG",30,0)
 S DIR(0)="YA",DIR("B")="YES"
"RTN","RGEVPRG",31,0)
 S DIR("A")="Are you sure you want to purge all exceptions on file for "_VADM(1)_"?   YES//  "
"RTN","RGEVPRG",32,0)
 D ^DIR Q:$D(DIRUT)  I Y>0 D
"RTN","RGEVPRG",33,0)
 . S EXCT="",CNT=0
"RTN","RGEVPRG",34,0)
 . F  S EXCT=$O(^RGHL7(991.1,"ADFN",EXCT)) Q:'EXCT  D
"RTN","RGEVPRG",35,0)
 .. S IEN=0
"RTN","RGEVPRG",36,0)
 .. F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCT,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEVPRG",37,0)
 ... S IEN2=0
"RTN","RGEVPRG",38,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCT,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",39,0)
 .... S NUM="" S NUM=$P(^RGHL7(991.1,IEN,1,0),"^",4)
"RTN","RGEVPRG",40,0)
 .... I NUM=1 S DIK="^RGHL7(991.1,",DA=IEN D ^DIK K DIK,DA S CNT=CNT+1
"RTN","RGEVPRG",41,0)
 .... E  I NUM>1 D DEL
"RTN","RGEVPRG",42,0)
 . W !,"All exceptions purged for "_VADM(1)_"   DFN: "_RGDFN
"RTN","RGEVPRG",43,0)
 K EXCT,DFN,FLAG,VADM,CNT,IEN,IEN2,NUM,RGDFN,Y
"RTN","RGEVPRG",44,0)
QUIT Q
"RTN","RGEVPRG",45,0)
 ;
"RTN","RGEVPRG",46,0)
PRGDT ; Purge by Date
"RTN","RGEVPRG",47,0)
 W !!,"Enter a date for the purge. All exceptions on file, on or before that date, will be deleted."
"RTN","RGEVPRG",48,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","RGEVPRG",49,0)
 S DIR(0)="DA^:DT:EPX",DIR("A")="Enter Date for Purge: "
"RTN","RGEVPRG",50,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","RGEVPRG",51,0)
 S PURDT=Y
"RTN","RGEVPRG",52,0)
 S PDATE=$$FMTE^XLFDT(PURDT)
"RTN","RGEVPRG",53,0)
 S DIR(0)="YA",DIR("B")="YES"
"RTN","RGEVPRG",54,0)
 S DIR("A")="Are you sure you want to purge all exceptions on file dated on or before "_PDATE_"?  YES//  "
"RTN","RGEVPRG",55,0)
 D ^DIR Q:$D(DIRUT)  I Y>0 D
"RTN","RGEVPRG",56,0)
 . S EXCDT="",CNT=0
"RTN","RGEVPRG",57,0)
 . F  S EXCDT=$O(^RGHL7(991.1,"AD",EXCDT)) Q:'EXCDT  D
"RTN","RGEVPRG",58,0)
 .. I ($P(EXCDT,".",1)=PURDT)!($P(EXCDT,".",1)<PURDT) D
"RTN","RGEVPRG",59,0)
 ... S IEN=0
"RTN","RGEVPRG",60,0)
 ... F  S IEN=$O(^RGHL7(991.1,"AD",EXCDT,IEN)) Q:'IEN  D
"RTN","RGEVPRG",61,0)
 .... S NUM="" S NUM=$P($G(^RGHL7(991.1,IEN,1,0)),"^",4) Q:NUM<1
"RTN","RGEVPRG",62,0)
 .... S CNT=CNT+NUM
"RTN","RGEVPRG",63,0)
 .... S DIK="^RGHL7(991.1,",DA=IEN
"RTN","RGEVPRG",64,0)
 .... D ^DIK K DIK,DA
"RTN","RGEVPRG",65,0)
 I CNT=0 W !,"There are no exceptions dated on or before "_PDATE_", no data to purge."
"RTN","RGEVPRG",66,0)
 E  I CNT>0 W !,CNT_" exceptions, dated on or before "_PDATE_" have been purged!"
"RTN","RGEVPRG",67,0)
 K PDATE,PURDT,EXCDT,CNT,IEN,NUM,Y
"RTN","RGEVPRG",68,0)
 Q
"RTN","RGEVPRG",69,0)
PRG30   ; Purge Exceptions over 30 days old
"RTN","RGEVPRG",70,0)
 S TODAY=""
"RTN","RGEVPRG",71,0)
 S TODAY=$$NOW^XLFDT D
"RTN","RGEVPRG",72,0)
 . S EXCDT="",CNT=0,DIFF=""
"RTN","RGEVPRG",73,0)
 . F  S EXCDT=$O(^RGHL7(991.1,"AD",EXCDT)) Q:'EXCDT  D
"RTN","RGEVPRG",74,0)
 .. S DIFF=$$FMDIFF^XLFDT(TODAY,EXCDT)
"RTN","RGEVPRG",75,0)
 .. I DIFF>30 D
"RTN","RGEVPRG",76,0)
 ... S IEN=0
"RTN","RGEVPRG",77,0)
 ... F  S IEN=$O(^RGHL7(991.1,"AD",EXCDT,IEN)) Q:'IEN  D
"RTN","RGEVPRG",78,0)
 .... S NUM="" S NUM=$P($G(^RGHL7(991.1,IEN,1,0)),"^",4) Q:'NUM
"RTN","RGEVPRG",79,0)
 .... S IEN2=0
"RTN","RGEVPRG",80,0)
 .... F  S IEN2=$O(^RGHL7(991.1,IEN,1,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",81,0)
 ..... S STAT=""
"RTN","RGEVPRG",82,0)
 ..... S STAT=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",5)
"RTN","RGEVPRG",83,0)
 ..... ; Only delete PROCESSED exceptions
"RTN","RGEVPRG",84,0)
 ..... I (STAT>0)!(STAT="") D
"RTN","RGEVPRG",85,0)
 ...... I NUM>1 D DEL
"RTN","RGEVPRG",86,0)
 ...... E  I NUM=1 D
"RTN","RGEVPRG",87,0)
 ....... S CNT=CNT+NUM
"RTN","RGEVPRG",88,0)
 ....... S DIK="^RGHL7(991.1,",DA=IEN
"RTN","RGEVPRG",89,0)
 ....... D ^DIK K DIK,DA
"RTN","RGEVPRG",90,0)
 K DIFF,TODAY,EXCDT,CNT,IEN,IEN2,NUM,STAT
"RTN","RGEVPRG",91,0)
 Q
"RTN","RGEVPRG",92,0)
PRGEXC ; Purge by Exception Type
"RTN","RGEVPRG",93,0)
 ;S DIC="^RGHL7(991.11,",DIC(0)="QEAM"
"RTN","RGEVPRG",94,0)
 ;S DIC("A")="Enter an exception type to purge: "
"RTN","RGEVPRG",95,0)
 ;D ^DIC K DIC G:Y<200 QUIT  S EXCTYP=+Y,ETYPE=X
"RTN","RGEVPRG",96,0)
 ;S DIR(0)="YA",DIR("B")="YES"
"RTN","RGEVPRG",97,0)
 ;S DIR("A")="*WARNING* This will permanently delete all "_ETYPE_" exceptions. Are you sure you want to do this?  YES//  "
"RTN","RGEVPRG",98,0)
 ;D ^DIR Q:$D(DIRUT)  I Y>0 D
"RTN","RGEVPRG",99,0)
 ;. S CNT=0,IEN=""
"RTN","RGEVPRG",100,0)
 ;. F  S IEN=$O(^RGHL7(991.1,"AC",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGEVPRG",101,0)
 ;.. S IEN2=0
"RTN","RGEVPRG",102,0)
 ;.. F  S IEN2=$O(^RGHL7(991.1,"AC",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",103,0)
 ;... S NUM="" S NUM=$P(^RGHL7(991.1,IEN,1,0),"^",4)
"RTN","RGEVPRG",104,0)
 ;... I NUM=1 S DIK="^RGHL7(991.1,",DA=IEN D ^DIK K DIK,DA S CNT=CNT+1
"RTN","RGEVPRG",105,0)
 ;... E  I NUM>1 D DEL
"RTN","RGEVPRG",106,0)
 ;I CNT=0 W !,"There are no "_ETYPE_" exceptions on file."
"RTN","RGEVPRG",107,0)
 ;E  I CNT>0 W !,CNT_" "_ETYPE_" Exceptions purged!"
"RTN","RGEVPRG",108,0)
 ;K ETYPE,CNT,IEN,IEN2,NUM,X,Y
"RTN","RGEVPRG",109,0)
 ;Q
"RTN","RGEVPRG",110,0)
PRGDUP ; Purge Duplicate Entries; retain most recent for all types except 234.
"RTN","RGEVPRG",111,0)
 S EXCTYP="",CNT=0
"RTN","RGEVPRG",112,0)
 K ^TMP("RGEVDUP",$J)
"RTN","RGEVPRG",113,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ADFN",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEVPRG",114,0)
 . I EXCTYP=234 Q  ;**44 process 234s separately below
"RTN","RGEVPRG",115,0)
 . S RGDFN=""
"RTN","RGEVPRG",116,0)
 . F  S RGDFN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN)) Q:'RGDFN  D
"RTN","RGEVPRG",117,0)
 .. S IEN=0
"RTN","RGEVPRG",118,0)
 .. F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEVPRG",119,0)
 ... S IEN2=0
"RTN","RGEVPRG",120,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",121,0)
 .... S EXCDT=$P(^RGHL7(991.1,IEN,0),"^",3)
"RTN","RGEVPRG",122,0)
 .... I '$D(^TMP("RGEVDUP",$J,RGDFN,EXCTYP)) D  Q
"RTN","RGEVPRG",123,0)
 ..... S ^TMP("RGEVDUP",$J,RGDFN,EXCTYP)=EXCDT_"^"_IEN_"^"_IEN2
"RTN","RGEVPRG",124,0)
 .... I $D(^TMP("RGEVDUP",$J,RGDFN,EXCTYP)) D
"RTN","RGEVPRG",125,0)
 ..... S OLDNODE=^TMP("RGEVDUP",$J,RGDFN,EXCTYP)
"RTN","RGEVPRG",126,0)
 ..... S OLDDT=$P(OLDNODE,"^")
"RTN","RGEVPRG",127,0)
 ..... I EXCDT>OLDDT D  Q
"RTN","RGEVPRG",128,0)
 ...... S NUM="" S NUM=$P(^RGHL7(991.1,IEN,1,0),"^",4)
"RTN","RGEVPRG",129,0)
 ...... I NUM=1 S DIK="^RGHL7(991.1,",DA=$P(OLDNODE,"^",2) D ^DIK K DIK,DA
"RTN","RGEVPRG",130,0)
 ...... E  I NUM>1 D
"RTN","RGEVPRG",131,0)
 ....... S DA(1)=$P(OLDNODE,"^",2),DA=$P(OLDNODE,"^",3)
"RTN","RGEVPRG",132,0)
 ....... S DIK="^RGHL7(991.1,"_DA(1)_",1," D ^DIK K DIK,DA
"RTN","RGEVPRG",133,0)
 ...... S CNT=CNT+1
"RTN","RGEVPRG",134,0)
 ...... S ^TMP("RGEVDUP",$J,RGDFN,EXCTYP)=EXCDT_"^"_IEN_"^"_IEN2
"RTN","RGEVPRG",135,0)
 ..... I OLDDT>EXCDT!(OLDDT=EXCDT) D
"RTN","RGEVPRG",136,0)
 ...... S NUM="" S NUM=$P(^RGHL7(991.1,IEN,1,0),"^",4)
"RTN","RGEVPRG",137,0)
 ...... I NUM=1 S DIK="^RGHL7(991.1,",DA=IEN D ^DIK K DIK,DA S CNT=CNT+1
"RTN","RGEVPRG",138,0)
 ...... E  I NUM>1 D DEL
"RTN","RGEVPRG",139,0)
 ; W !,CNT_" Duplicate entries"
"RTN","RGEVPRG",140,0)
 ;Process PRIMARY VIEW REJECT (234) duplicates; purge if for SAME day.
"RTN","RGEVPRG",141,0)
 ;**44 through remainder of module.
"RTN","RGEVPRG",142,0)
 K ^TMP("RGDFNDT",$J) S RGDFN=""
"RTN","RGEVPRG",143,0)
 F  S RGDFN=$O(^RGHL7(991.1,"ADFN",234,RGDFN)) Q:'RGDFN  D
"RTN","RGEVPRG",144,0)
 .S IEN=0
"RTN","RGEVPRG",145,0)
 .F  S IEN=$O(^RGHL7(991.1,"ADFN",234,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEVPRG",146,0)
 ..S IEN2=0
"RTN","RGEVPRG",147,0)
 ..F  S IEN2=$O(^RGHL7(991.1,"ADFN",234,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",148,0)
 ...S EXCDT=$P(^RGHL7(991.1,IEN,0),"^",3)
"RTN","RGEVPRG",149,0)
 ...;How many for each DFN? Store in ^TMP("RGDFNDT")
"RTN","RGEVPRG",150,0)
 ...I '$D(^TMP("RGDFNDT",$J,RGDFN)) S ^TMP("RGDFNDT",$J,RGDFN)=0
"RTN","RGEVPRG",151,0)
 ...I $D(^TMP("RGDFNDT",$J,RGDFN)) D
"RTN","RGEVPRG",152,0)
 ....S ^TMP("RGDFNDT",$J,RGDFN)=^TMP("RGDFNDT",$J,RGDFN)+1
"RTN","RGEVPRG",153,0)
 ....S ^TMP("RGDFNDT",$J,RGDFN,IEN,IEN2)=$P(EXCDT,".") ;date only/no time
"RTN","RGEVPRG",154,0)
 ;If RGDFN has more than 1 exception, see if any are for same DAY.
"RTN","RGEVPRG",155,0)
 ;Process the ^TMP("RGDFNDT",$J global to build LOC array.
"RTN","RGEVPRG",156,0)
 I $D(^TMP("RGDFNDT",$J)) D
"RTN","RGEVPRG",157,0)
 .S RGDFN=""
"RTN","RGEVPRG",158,0)
 .F  S RGDFN=$O(^TMP("RGDFNDT",$J,RGDFN)) Q:'RGDFN  D
"RTN","RGEVPRG",159,0)
 ..;If only one 234 exception for DFN ignore it.
"RTN","RGEVPRG",160,0)
 ..I ^TMP("RGDFNDT",$J,RGDFN)=1 Q
"RTN","RGEVPRG",161,0)
 ..;More than one for this DFN?  How many for same day?
"RTN","RGEVPRG",162,0)
 ..S IEN=0 K LOC
"RTN","RGEVPRG",163,0)
 ..F  S IEN=$O(^TMP("RGDFNDT",$J,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEVPRG",164,0)
 ...S (IEN2,VAL)=0
"RTN","RGEVPRG",165,0)
 ...F  S IEN2=$O(^TMP("RGDFNDT",$J,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",166,0)
 ....S VAL=$P(^TMP("RGDFNDT",$J,RGDFN,IEN,IEN2),"^")
"RTN","RGEVPRG",167,0)
 ....I '$D(LOC(VAL)) S LOC(VAL)=0
"RTN","RGEVPRG",168,0)
 ....I $D(LOC(VAL)) D
"RTN","RGEVPRG",169,0)
 .....S LOC(VAL)=LOC(VAL)+1
"RTN","RGEVPRG",170,0)
 .....S LOC(VAL,IEN,IEN2)=""
"RTN","RGEVPRG",171,0)
 ..;Process the LOC array; contains numbers / day / DFN.
"RTN","RGEVPRG",172,0)
 ..;If only 1 exception / day, keep it.
"RTN","RGEVPRG",173,0)
 ..S RGDT=0 K CTR,TOT
"RTN","RGEVPRG",174,0)
 ..F  S RGDT=$O(LOC(RGDT)) Q:'RGDT  D
"RTN","RGEVPRG",175,0)
 ...S TOT=LOC(RGDT)
"RTN","RGEVPRG",176,0)
 ...I TOT=1 K TOT Q  ;only 1.
"RTN","RGEVPRG",177,0)
 ...;More than 1, delete all except 1.
"RTN","RGEVPRG",178,0)
 ...S TOT=TOT-1 ;leave 1; doesn't matter which - all are same day.
"RTN","RGEVPRG",179,0)
 ...S IEN=0,CTR=0
"RTN","RGEVPRG",180,0)
 ...F  S IEN=$O(LOC(RGDT,IEN)) Q:'IEN  D
"RTN","RGEVPRG",181,0)
 ....I CTR=TOT Q
"RTN","RGEVPRG",182,0)
 ....S CTR=CTR+1,IEN2=0
"RTN","RGEVPRG",183,0)
 ....F  S IEN2=$O(LOC(RGDT,IEN,IEN2)) Q:'IEN2  D DEL ;delete entry
"RTN","RGEVPRG",184,0)
 K CNT,CTR,EXCDT,IEN,IEN2,LOC,NUM,OLDDT,OLDNODE,RGDFN,RGDT,TOT,VAL,^TMP("RGDFNDT")
"RTN","RGEVPRG",185,0)
 Q
"RTN","RGEVPRG",186,0)
PRGZZ ;Purge if name field is null (incomplete record)
"RTN","RGEVPRG",187,0)
 ;Purge if -9 node exists, this indicates the record has been merged.
"RTN","RGEVPRG",188,0)
 S EXCTYP="",CNT=""
"RTN","RGEVPRG",189,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ADFN",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEVPRG",190,0)
 . S RGDFN=""
"RTN","RGEVPRG",191,0)
 . F  S RGDFN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN)) Q:'RGDFN  D
"RTN","RGEVPRG",192,0)
 .. S IEN=0
"RTN","RGEVPRG",193,0)
 .. F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEVPRG",194,0)
 ... S IEN2=0
"RTN","RGEVPRG",195,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",196,0)
 .... S DFN=RGDFN D DEM^VADPT
"RTN","RGEVPRG",197,0)
 .... I VADM(1)=""!($D(^DPT(RGDFN,-9))) D
"RTN","RGEVPRG",198,0)
 ..... S NUM="" S NUM=$P(^RGHL7(991.1,IEN,1,0),"^",4)
"RTN","RGEVPRG",199,0)
 ..... I NUM=1 S DIK="^RGHL7(991.1,",DA=IEN D ^DIK K DIK,DA
"RTN","RGEVPRG",200,0)
 ..... E  I NUM>1 D DEL
"RTN","RGEVPRG",201,0)
 K EXCTYP,RGDFN,DFN,IEN,IEN2,NUM,VADM
"RTN","RGEVPRG",202,0)
 Q
"RTN","RGEVPRG",203,0)
DEL ;
"RTN","RGEVPRG",204,0)
 S CNT=CNT+1
"RTN","RGEVPRG",205,0)
 S DA(1)=IEN,DA=IEN2
"RTN","RGEVPRG",206,0)
 S DIK="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGEVPRG",207,0)
 D ^DIK K DIK,DA
"RTN","RGEVPRG",208,0)
 Q
"RTN","RGEVPRG",209,0)
PROC ;Set these exception types to PROCESSED if they have a national ICN
"RTN","RGEVPRG",210,0)
 ;209 - Required field(s) missing for patient sent to MPI,
"RTN","RGEVPRG",211,0)
 ;227 - Multiple ICNs, 213 - SSN Match Failed, 214 - Name Doesn't Match
"RTN","RGEVPRG",212,0)
 S EXCTYP=""
"RTN","RGEVPRG",213,0)
 S HOME=$$SITE^VASITE()
"RTN","RGEVPRG",214,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"AC",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEVPRG",215,0)
 . I (EXCTYP=209)!(EXCTYP=227)!(EXCTYP=213)!(EXCTYP=214) D  ;**43
"RTN","RGEVPRG",216,0)
 .. S IEN=0
"RTN","RGEVPRG",217,0)
 .. F  S IEN=$O(^RGHL7(991.1,"AC",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGEVPRG",218,0)
 ... S IEN2=0,ICN="",RGDFN=""
"RTN","RGEVPRG",219,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"AC",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",220,0)
 .... S RGDFN=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",4) Q:'RGDFN
"RTN","RGEVPRG",221,0)
 .... S ICN=+$$GETICN^MPIF001(RGDFN)
"RTN","RGEVPRG",222,0)
 .... I $E(ICN,1,3)'=$E($P(HOME,"^",3),1,3)&(ICN>0) D
"RTN","RGEVPRG",223,0)
 ..... L +^RGHL7(991.1,IEN):10
"RTN","RGEVPRG",224,0)
 ..... S DA(1)=IEN,DA=IEN2,DR="6///"_1,DIE="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGEVPRG",225,0)
 ..... D ^DIE K DIE,DA,DR
"RTN","RGEVPRG",226,0)
 ..... L -^RGHL7(991.1,IEN)
"RTN","RGEVPRG",227,0)
 K EXCTYP,HOME,ICN,IEN,IEN2,RGDFN
"RTN","RGEVPRG",228,0)
 Q
"RTN","RGEX03")
0^1^B64947419^B68295667
"RTN","RGEX03",1,0)
RGEX03 ;BAY/ALS-LIST MANAGER FOR MPI/PD EXCEPTIONS ;10/13/99
"RTN","RGEX03",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**3,12,19,23,27,30,38,39,43,44**;30 Apr 99;Build 8
"RTN","RGEX03",3,0)
 ;
"RTN","RGEX03",4,0)
 ;Reference to START^VAFCPDAT supported by IA #3299
"RTN","RGEX03",5,0)
 ;Reference to ^DIA(2 supported by IA #2097
"RTN","RGEX03",6,0)
 ;Reference to ^DPT( supported by IA #2969
"RTN","RGEX03",7,0)
 ;Reference to HINQ^DG10 supported by IA #2076
"RTN","RGEX03",8,0)
 ;Reference to CIRNEXC^MPIFQ0 supported by IA #2942
"RTN","RGEX03",9,0)
 ;Reference to VTQ^MPIFSAQ supported by IA #2941
"RTN","RGEX03",10,0)
 ;Reference to NOTICE^DGSEC4 and PTSEC^DGSEC4 supported by IA#3027
"RTN","RGEX03",11,0)
 ;Reference to POT^MPIFDUP supported by IA #4464
"RTN","RGEX03",12,0)
 ;
"RTN","RGEX03",13,0)
EN(DATA) ; -- main entry point for RG EXCPT ACTION
"RTN","RGEX03",14,0)
 D EN^VALM("RG EXCPT ACTION")
"RTN","RGEX03",15,0)
 Q
"RTN","RGEX03",16,0)
HDR ; -- header code
"RTN","RGEX03",17,0)
 S VALMHDR(1)="MPI/PD EXCEPTION HANDLING ACTIONS.",VALMHDR(2)=""
"RTN","RGEX03",18,0)
 Q
"RTN","RGEX03",19,0)
INIT ; -- init variables and list array
"RTN","RGEX03",20,0)
 K ^TMP("RGEXC2",$J)
"RTN","RGEX03",21,0)
 K @VALMAR
"RTN","RGEX03",22,0)
 I DATA="" Q
"RTN","RGEX03",23,0)
 S STR="",LIN=1,STATUS="",NAME="",DOB="",SSN="",DFN="",CHKSM="" ;**44
"RTN","RGEX03",24,0)
 S NAME=$P(DATA,"^",1),DOB=$P(DATA,"^",8),SSN=$P(DATA,"^",2)
"RTN","RGEX03",25,0)
 S DFN=$P(DATA,"^",5),CHKSM=$P($G(^DPT(DFN,"MPI")),"^",2) ;**44
"RTN","RGEX03",26,0)
 S STR=$$SETSTR^VALM1("Name:",STR,6,6),STR=$$SETSTR^VALM1(NAME,STR,14,30) D ADDTMP
"RTN","RGEX03",27,0)
 S STR=$$SETSTR^VALM1(" SSN:",STR,6,6),STR=$$SETSTR^VALM1(SSN,STR,14,12) D ADDTMP
"RTN","RGEX03",28,0)
 S STR=$$SETSTR^VALM1(" DOB:",STR,6,6),STR=$$SETSTR^VALM1(DOB,STR,14,20) D ADDTMP
"RTN","RGEX03",29,0)
 S STR=$$SETSTR^VALM1(" DFN:",STR,6,6),STR=$$SETSTR^VALM1(DFN,STR,14,12) D ADDTMP ;**44
"RTN","RGEX03",30,0)
 S STR=$$SETSTR^VALM1(" ICN:",STR,6,6),ICN="" S ICN=$P(DATA,"^",6) I ICN<0 S ICN=""
"RTN","RGEX03",31,0)
 S STR=$$SETSTR^VALM1(ICN_($S(CHKSM="":"",1:"V"_CHKSM)),STR,14,20) D ADDTMP ;**44
"RTN","RGEX03",32,0)
 S STR=$$SETSTR^VALM1("Date of Death:",STR,6,20),STR=$$SETSTR^VALM1($P(DATA,"^",13),STR,26,20) D ADDTMP
"RTN","RGEX03",33,0)
 S STR=$$SETSTR^VALM1("Exception Type:",STR,6,20),STR=$$SETSTR^VALM1($P(DATA,"^",4),STR,26,50) D ADDTMP
"RTN","RGEX03",34,0)
 S STR=$$SETSTR^VALM1("Exception Date:",STR,6,20),STR=$$SETSTR^VALM1($P(DATA,"^",3),STR,26,30) D ADDTMP
"RTN","RGEX03",35,0)
 S STATUS=$P(DATA,"^",9)
"RTN","RGEX03",36,0)
 I STATUS<1 S STATUS="NOT PROCESSED"
"RTN","RGEX03",37,0)
 E  S STATUS="PROCESSED"
"RTN","RGEX03",38,0)
 S STR=$$SETSTR^VALM1("Exception Status:",STR,6,20),STR=$$SETSTR^VALM1(STATUS,STR,26,15) D ADDTMP
"RTN","RGEX03",39,0)
 ;Added Exception Text to Exception Handler, patch 39
"RTN","RGEX03",40,0)
 N IEN,IEN2,X K ^UTILITY($J,"W") S IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11)
"RTN","RGEX03",41,0)
 I IEN'=""!(IEN2'="") D
"RTN","RGEX03",42,0)
 .S EXCTEXT=$P($G(^RGHL7(991.1,IEN,1,IEN2,10)),"^",1) Q:EXCTEXT=""
"RTN","RGEX03",43,0)
 .S STR=$$SETSTR^VALM1("Exception Text:",STR,6,20)
"RTN","RGEX03",44,0)
 .S X=EXCTEXT,DIWL=1,DIWR=50,DIWF="|" D ^DIWP
"RTN","RGEX03",45,0)
 .F N=1:1:$P($G(^UTILITY($J,"W",1)),1) D  Q:'N
"RTN","RGEX03",46,0)
 ..S STR=$$SETSTR^VALM1(^UTILITY($J,"W",1,(N),0),STR,26,76)
"RTN","RGEX03",47,0)
 ..D ADDTMP
"RTN","RGEX03",48,0)
ADDNOTE ;Display Exception Notes, Word Processing field
"RTN","RGEX03",49,0)
 S STR=$$SETSTR^VALM1("Exception Notes:",STR,6,20) D ADDTMP
"RTN","RGEX03",50,0)
 N IEN,IEN2,IENS,N,NOTE
"RTN","RGEX03",51,0)
 S IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11),IENS=IEN2_","_IEN_",",N=$$GET1^DIQ(991.12,IENS,11,"","NT")
"RTN","RGEX03",52,0)
 S L=0 F  S L=$O(NT(L)) Q:'L  S NOTE=NT(L),STR=$$SETSTR^VALM1(NOTE,STR,6,74) D ADDTMP
"RTN","RGEX03",53,0)
 S VALMCNT=LIN-1,DFN=$P(DATA,"^",5),VAFCDFN=DFN
"RTN","RGEX03",54,0)
 K L,NT
"RTN","RGEX03",55,0)
 Q
"RTN","RGEX03",56,0)
ADDTMP ;
"RTN","RGEX03",57,0)
 S ^TMP("RGEXC2",$J,LIN,0)=STR,^TMP("RGEXC2",$J,"IDX",LIN,LIN)="",LIN=LIN+1,STR=""
"RTN","RGEX03",58,0)
 Q
"RTN","RGEX03",59,0)
UPD ;
"RTN","RGEX03",60,0)
 W !,"This option updates the exception status to PROCESSED.",!,"After it is processed it will not be listed in the summary."
"RTN","RGEX03",61,0)
 S DIR("A")="Are you sure you want to change the status? ",DIR(0)="YA",DIR("B")="YES"
"RTN","RGEX03",62,0)
 D ^DIR Q:$D(DIRUT)  I Y>0 D
"RTN","RGEX03",63,0)
 .S IEN="",IEN2="",IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11) L +^RGHL7(991.1,IEN):10
"RTN","RGEX03",64,0)
 .S DA(1)=IEN,DA=IEN2,DR="6///"_1,DIE="^RGHL7(991.1,"_DA(1)_",1," D ^DIE K DIE,DA,DR
"RTN","RGEX03",65,0)
 .L -^RGHL7(991.1,IEN) S $P(DATA,"^",9)=1
"RTN","RGEX03",66,0)
 .D INIT
"RTN","RGEX03",67,0)
 K DIR,DIRUT S VALMBCK="R"
"RTN","RGEX03",68,0)
 Q
"RTN","RGEX03",69,0)
PA ;Patient Audit
"RTN","RGEX03",70,0)
 S PDFN=DFN
"RTN","RGEX03",71,0)
 I '$O(^DIA(2,"B",VAFCDFN,0)) S VALMSG="This patient has no audit data available.",VALMBCK="" G PAQ
"RTN","RGEX03",72,0)
 N IEN S DFN=VAFCDFN,QFLG=1 D FULL^VALM1 D:$T(ASK2^RGMTAUD)]"" ASK2^RGMTAUD S VALMBCK="R"
"RTN","RGEX03",73,0)
 S DFN=PDFN K QFLG,PDFN
"RTN","RGEX03",74,0)
PAQ Q
"RTN","RGEX03",75,0)
HI ;Hinq Inquiry
"RTN","RGEX03",76,0)
 S VALMBCK="" D HINQ^DG10 D PAUSE^VALM1 S VALMBCK="R"
"RTN","RGEX03",77,0)
 Q
"RTN","RGEX03",78,0)
DISP ; Display Only Query
"RTN","RGEX03",79,0)
 S VALMBCK="" D FULL^VALM1
"RTN","RGEX03",80,0)
 S MPIVAR("DFN")=DFN,MPIVAR("SSN")=SSN,MPIVAR("NM")=NAME,MPIVAR("DOB")=$P($P(DATA,"^",7),".",1)
"RTN","RGEX03",81,0)
 D VTQ^MPIFSAQ(.MPIVAR) D PAUSE^VALM1
"RTN","RGEX03",82,0)
 S VALMBCK="R" K MPIVAR
"RTN","RGEX03",83,0)
 Q
"RTN","RGEX03",84,0)
 ;
"RTN","RGEX03",85,0)
POT ;Potential Match on MPI, Query MPI, resolve duplicate if needed. **43 Added this entry point
"RTN","RGEX03",86,0)
 D POT^MPIFDUP
"RTN","RGEX03",87,0)
 D INIT S VALMBCK="R" K PROCESS
"RTN","RGEX03",88,0)
 Q
"RTN","RGEX03",89,0)
 ;
"RTN","RGEX03",90,0)
REJ ;Primary View Reject. **44 Added entry point
"RTN","RGEX03",91,0)
 D REJ^RGPVREJ
"RTN","RGEX03",92,0)
 D INIT S VALMBCK="R"
"RTN","RGEX03",93,0)
 Q
"RTN","RGEX03",94,0)
 ;
"RTN","RGEX03",95,0)
LOAD ; Edit Patient Data, if patient's eligibility is verified - check for DG ELIGIBILITY key for user
"RTN","RGEX03",96,0)
 S VALMBCK="",DATAOLD=""
"RTN","RGEX03",97,0)
 D FULL^VALM1 D ELIG^VADPT
"RTN","RGEX03",98,0)
 I $P(VAEL(8),"^",1)="V" D
"RTN","RGEX03",99,0)
 .I '$D(^XUSEC("DG ELIGIBILITY",DUZ)) D
"RTN","RGEX03",100,0)
 ..W !!,"Eligibility has been verified for this patient.",!!,"You do not have access to edit the Name, Date of ",!,"Birth or Social Security Number for this patient."
"RTN","RGEX03",101,0)
 ..D PAUSE^VALM1 S VALMBCK="R"
"RTN","RGEX03",102,0)
 .E  D SENS
"RTN","RGEX03",103,0)
 E  D SENS
"RTN","RGEX03",104,0)
 Q
"RTN","RGEX03",105,0)
SENS ; check for patient sensitivity and user security
"RTN","RGEX03",106,0)
 N RESULT,RGSEN
"RTN","RGEX03",107,0)
 D PTSEC^DGSEC4(.RESULT,DFN,0,"RG EXCEPTION HANDLING^MPI/PD Exception Handling")
"RTN","RGEX03",108,0)
 I RESULT(1)=-1 W !!,"Access denied: Required parameters not defined" D PAUSE^VALM1 S VALMBCK="R" Q
"RTN","RGEX03",109,0)
 I RESULT(1)>0 W !!?15,"***PATIENT MARKED SENSITIVE***"
"RTN","RGEX03",110,0)
 I RESULT(1)=3 W !!?15,"Access not allowed on your own PATIENT (#2) file entry" D PAUSE^VALM1 S VALMBCK="R" Q
"RTN","RGEX03",111,0)
 I RESULT(1)=4 W !!?15,"Access denied: Your SSN is not defined" D PAUSE^VALM1 S VALMBCK="R" Q
"RTN","RGEX03",112,0)
 I RESULT(1)<3 D
"RTN","RGEX03",113,0)
 .I RESULT(1)=1 D NOTICE^DGSEC4(.RGSEN,DFN,"RG EXCEPTION HANDLING^MPI/PD Exception Handling",2)
"RTN","RGEX03",114,0)
 .I RESULT(1)=2 D NOTICE^DGSEC4(.RGSEN,DFN,"RG EXCEPTION HANDLING^MPI/PD Exception Handling",3)
"RTN","RGEX03",115,0)
 D EDIT
"RTN","RGEX03",116,0)
 Q
"RTN","RGEX03",117,0)
EDIT ; edit patient data
"RTN","RGEX03",118,0)
 S ACCESS=0
"RTN","RGEX03",119,0)
 D REC
"RTN","RGEX03",120,0)
 Q:ACCESS=0
"RTN","RGEX03",121,0)
 S DIE="^DPT(",DA=DFN,DR=".01///^S X=$$NCEDIT^DPTNAME(DA);.03//^S X=DOB;.09//^S X=SSN"
"RTN","RGEX03",122,0)
 L +^DPT(DFN):10 D ^DIE K DIE,DA,DR L -^DPT(DFN)
"RTN","RGEX03",123,0)
 S DATAOLD=DATA
"RTN","RGEX03",124,0)
 D DEATH
"RTN","RGEX03",125,0)
 D DEM^VADPT
"RTN","RGEX03",126,0)
 S DATA=VADM(1)_"^"_$P($G(VADM(2)),"^",1)_"^"_$P(DATAOLD,"^",3)_"^"_$P(DATAOLD,"^",4)_"^"_DFN_"^"_$P(DATAOLD,"^",6)_"^"
"RTN","RGEX03",127,0)
 S DATA=DATA_$G(VADM(3))_"^"_$P(DATAOLD,"^",9)_"^"_$P(DATAOLD,"^",10)_"^"_$P(DATAOLD,"^",11)_"^"_$P(DATAOLD,"^",12)_"^"_$P($G(VADM(6)),"^",2)
"RTN","RGEX03",128,0)
 D INIT
"RTN","RGEX03",129,0)
 S VALMBCK="R"
"RTN","RGEX03",130,0)
 K DGNEW,DATAOLD,VAEL,ACCESS,DGNPSSN
"RTN","RGEX03",131,0)
QUIT Q
"RTN","RGEX03",132,0)
REC ; Check if user is attempting to access own record
"RTN","RGEX03",133,0)
 ; check for security key
"RTN","RGEX03",134,0)
 I $D(^XUSEC("DG RECORD ACCESS",+DUZ)) S ACCESS=1 Q
"RTN","RGEX03",135,0)
 S DGNPSSN=$$GET1^DIQ(200,+DUZ_",",9,"I","","DGNPERR")
"RTN","RGEX03",136,0)
 I 'DGNPSSN D  Q
"RTN","RGEX03",137,0)
 .W !!,"Your SSN is missing from the NEW PERSON file.",!,"Contact your ADP Coordinator."
"RTN","RGEX03",138,0)
 .D PAUSE^VALM1 S VALMBCK="R"
"RTN","RGEX03",139,0)
 I DGNPSSN=SSN D  Q
"RTN","RGEX03",140,0)
 .W !!,"Security regulations prohibit computer access to your",!,"own medical record."
"RTN","RGEX03",141,0)
 .D PAUSE^VALM1 S VALMBCK="R"
"RTN","RGEX03",142,0)
 E  S ACCESS=1
"RTN","RGEX03",143,0)
 Q
"RTN","RGEX03",144,0)
DEATH ; Check for access to edit date of death
"RTN","RGEX03",145,0)
 I $D(^XUSEC("DG DETAIL",+DUZ)) D
"RTN","RGEX03",146,0)
 .K VADM,DIE,DA,DR
"RTN","RGEX03",147,0)
 .S DOD=""
"RTN","RGEX03",148,0)
 .D DEM^VADPT
"RTN","RGEX03",149,0)
 .S DOD=$P($G(VADM(6)),"^",2)
"RTN","RGEX03",150,0)
 .S DIE="^DPT(",DA=DFN,DR=".351//^S X=DOD"
"RTN","RGEX03",151,0)
 .L +^DPT(DFN):10
"RTN","RGEX03",152,0)
 .D ^DIE
"RTN","RGEX03",153,0)
 .L -^DPT(DFN)
"RTN","RGEX03",154,0)
 E  W !!,"You do not have the proper security to edit date of death." D PAUSE^VALM1 D INIT S VALMBCK="R"
"RTN","RGEX03",155,0)
 K VADM,DIE,DA,DR,DOD
"RTN","RGEX03",156,0)
 Q
"RTN","RGEX03",157,0)
INQ ; Patient Inquiry
"RTN","RGEX03",158,0)
 S VALMBCK=""
"RTN","RGEX03",159,0)
 D FULL^VALM1 D EN^DGRPD D PAUSE^VALM1 D CLEAN^VALM10 D INIT
"RTN","RGEX03",160,0)
 S VALMBCK="R"
"RTN","RGEX03",161,0)
 Q
"RTN","RGEX03",162,0)
EDTNOT ; Edit Exception Notes
"RTN","RGEX03",163,0)
 S IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11)
"RTN","RGEX03",164,0)
 L +^RGHL7(991.1,IEN):10 S DIE="^RGHL7(991.1,"_IEN_",1,",DA(1)=IEN,DA=IEN2,DR="11" D ^DIE L -^RGHL7(991.1,IEN)
"RTN","RGEX03",165,0)
 K DIE,DA,DR,IEN,IEN2
"RTN","RGEX03",166,0)
 D INIT
"RTN","RGEX03",167,0)
 S VALMBCK="R"
"RTN","RGEX03",168,0)
 Q
"RTN","RGEX03",169,0)
PDAT S VALMBCK="",PICN="",PSSN=""
"RTN","RGEX03",170,0)
 I $D(SSN) S PSSN=SSN
"RTN","RGEX03",171,0)
 S ARRAY="^TMP(""RGXHFS"","_$J_")",TYPE="I",REP=1,RGXDIR=$$GET^XPAR("SYS","RGX HFS SCRATCH"),RGXFILE="RGX"_DUZ_".DAT"
"RTN","RGEX03",172,0)
 S IOM=132,IOSL=99999,IOST="P-DUMMY",IOF=""""""
"RTN","RGEX03",173,0)
 D OPEN^%ZISH("RGX",RGXDIR,RGXFILE,"W") Q:POP
"RTN","RGEX03",174,0)
 U IO
"RTN","RGEX03",175,0)
 I ICN'="" S PICN=ICN D START^VAFCPDAT
"RTN","RGEX03",176,0)
 N RGXDEL
"RTN","RGEX03",177,0)
 D CLOSE^%ZISH("RGX")
"RTN","RGEX03",178,0)
 K ^TMP("RGPDAT",$J)
"RTN","RGEX03",179,0)
 S RGXDEL(RGXFILE)="",X=$$FTG^%ZISH(RGXDIR,RGXFILE,$NAME(^TMP("RGPDAT",$J,1)),3),X=$$DEL^%ZISH(RGXDIR,$NA(RGXDEL))
"RTN","RGEX03",180,0)
 I $D(^TMP("RGPDAT",$J)) D EN^RGEX04
"RTN","RGEX03",181,0)
 S ICN=PICN,SSN=PSSN
"RTN","RGEX03",182,0)
 D INIT
"RTN","RGEX03",183,0)
 S VALMBCK="R" K PICN,PSSN,ARRAY,REP,RGXDIR,RGXFILE,TYPE
"RTN","RGEX03",184,0)
 Q
"RTN","RGEX03",185,0)
GETEX(RETURN,DFN) ; Get array of pending exceptions for a patient
"RTN","RGEX03",186,0)
 K RETURN
"RTN","RGEX03",187,0)
 S CNT=0,RETURN(0)="0^No Pending Exceptions",TYP=""
"RTN","RGEX03",188,0)
 I 'DFN S RETURN(0)="-1^DFN not passed" G QGET
"RTN","RGEX03",189,0)
 F  S TYP=$O(^RGHL7(991.1,"ADFN",TYP)) Q:'TYP  D
"RTN","RGEX03",190,0)
 .I $D(^RGHL7(991.1,"ADFN",TYP,DFN)) D
"RTN","RGEX03",191,0)
 ..S IEN="" F  S IEN=$O(^RGHL7(991.1,"ADFN",TYP,DFN,IEN)) Q:'IEN  D
"RTN","RGEX03",192,0)
 ...S IEN2="",ETYP="" F  S IEN2=$O(^RGHL7(991.1,"ADFN",TYP,DFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEX03",193,0)
 ....I $P(^RGHL7(991.1,IEN,1,IEN2,0),"^",5)<1 D
"RTN","RGEX03",194,0)
 .....S CNT=CNT+1,ETYP=$P(^RGHL7(991.11,TYP,10),"^",1)
"RTN","RGEX03",195,0)
 .....S RETURN(CNT)=ETYP_"^"_IEN_"^"_IEN2
"RTN","RGEX03",196,0)
 I CNT>0 S RETURN(0)=CNT_"^Pending Exception(s)"
"RTN","RGEX03",197,0)
QGET ;
"RTN","RGEX03",198,0)
 K TYP,ETYP,IEN,IEN2,CNT
"RTN","RGEX03",199,0)
 Q
"RTN","RGEX03",200,0)
HELP ; -- help code
"RTN","RGEX03",201,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RGEX03",202,0)
 Q
"RTN","RGEX03",203,0)
EXIT ; -- exit code
"RTN","RGEX03",204,0)
 S VALMBCK="" K ^TMP("RGEXC2",$J),CHKSM,DFN,DIR,EXCTEXT,IEN,IEN2,NAME,DOB,SSN,LIN,STATUS,STR,VAFCDFN,X,Y
"RTN","RGEX03",205,0)
 S VALMBCK="R",RGBG=1
"RTN","RGEX03",206,0)
 Q
"RTN","RGEX03",207,0)
EXPND ; -- expand code
"RTN","RGEX03",208,0)
 Q
"RTN","RGEX07")
0^3^B4853896^n/a
"RTN","RGEX07",1,0)
RGEX07 ;BIR/PTD-LIST MANAGER ROUTINE FOR REMOTE PRIMARY VIEW DISPLAY ;10/17/06
"RTN","RGEX07",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**44**;30 Apr 99;Build 8
"RTN","RGEX07",3,0)
 ;
"RTN","RGEX07",4,0)
 ;Reference to ^XWB2HL7 supported by IA #3144
"RTN","RGEX07",5,0)
 ;Reference to ^XWBDRPC supported by IA #3149
"RTN","RGEX07",6,0)
 ;
"RTN","RGEX07",7,0)
EN(ICN,EXCDT) ;Entry point calling List Template for primary view reject display
"RTN","RGEX07",8,0)
 D EN^VALM("RG EXCPT PV REJECT RDISPLAY")
"RTN","RGEX07",9,0)
 Q
"RTN","RGEX07",10,0)
 ;
"RTN","RGEX07",11,0)
HDR ; -- header code
"RTN","RGEX07",12,0)
 S VALMHDR(1)="MPI PRIMARY VIEW REJECT DISPLAY"
"RTN","RGEX07",13,0)
 Q
"RTN","RGEX07",14,0)
 ;
"RTN","RGEX07",15,0)
INIT ;Display the MPI Primary View Rejected Data Report
"RTN","RGEX07",16,0)
 K ^TMP("RGEXC7",$J)
"RTN","RGEX07",17,0)
 K @VALMAR
"RTN","RGEX07",18,0)
 I '$D(ICN) G EXIT
"RTN","RGEX07",19,0)
 I '$D(EXCDT) G EXIT
"RTN","RGEX07",20,0)
 S LIN=1,X=0,STR="",TXT=""
"RTN","RGEX07",21,0)
 I '$D(^XTMP("RGPVREJ",ICN,EXCDT)) S TXT=" - No Primary View Reject data exists for this patient/exception date." D ADDTMP
"RTN","RGEX07",22,0)
 N STATUS,R,RETURN,RESULT,RET
"RTN","RGEX07",23,0)
 I $D(^XTMP("RGPVREJ",ICN,EXCDT)) S RETURN(0)=$P(^XTMP("RGPVREJ",ICN,EXCDT),"^") D
"RTN","RGEX07",24,0)
 .D RPCCHK^XWB2HL7(.RESULT,RETURN(0)) I +RESULT(0)=1 D
"RTN","RGEX07",25,0)
 ..;Retrieve the data
"RTN","RGEX07",26,0)
 ..D RTNDATA^XWBDRPC(.RET,RETURN(0)) D
"RTN","RGEX07",27,0)
 ...I $G(RET(0))<0 S TXT="No Data Returned Due To: "_$P(RET(0),"^",2,99) S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP Q
"RTN","RGEX07",28,0)
 ...I $G(RET)'="",$D(@RET) S GLO=RET F  S GLO=$Q(@GLO) Q:$QS(GLO,1)'=$J  S TXT=@GLO S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP
"RTN","RGEX07",29,0)
 ...S R="" F  S R=$O(RET(R)) Q:R=""  S TXT=RET(R) S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP
"RTN","RGEX07",30,0)
 K GLO,L,R,SL
"RTN","RGEX07",31,0)
 S VALMCNT=LIN-1
"RTN","RGEX07",32,0)
 Q
"RTN","RGEX07",33,0)
 ;
"RTN","RGEX07",34,0)
ADDTMP ;Set string into the array.
"RTN","RGEX07",35,0)
 S ^TMP("RGEXC7",$J,LIN,0)=STR
"RTN","RGEX07",36,0)
 S ^TMP("RGEXC7",$J,"IDX",LIN,LIN)=""
"RTN","RGEX07",37,0)
 S LIN=LIN+1,STR=""
"RTN","RGEX07",38,0)
 Q
"RTN","RGEX07",39,0)
 ;
"RTN","RGEX07",40,0)
HELP ; -- help code
"RTN","RGEX07",41,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RGEX07",42,0)
 Q
"RTN","RGEX07",43,0)
 ;
"RTN","RGEX07",44,0)
EXIT ; -- exit code
"RTN","RGEX07",45,0)
 S VALMBCK=""
"RTN","RGEX07",46,0)
 K ^TMP("RGEXC7",$J),GLO,L,LIN,R,RESULT,RET,RETURN,SL,STATUS,STR,TXT,X
"RTN","RGEX07",47,0)
 S VALMBCK="R"
"RTN","RGEX07",48,0)
 Q
"RTN","RGEX07",49,0)
 ;
"RTN","RGEX07",50,0)
EXPND ; -- expand code
"RTN","RGEX07",51,0)
 Q
"RTN","RGEX07",52,0)
 ;
"RTN","RGPVREJ")
0^4^B14664495^n/a
"RTN","RGPVREJ",1,0)
RGPVREJ ;BIR/PTD-REMOTE PRIMARY VIEW REJECT (PATIENT) ;10/8/06
"RTN","RGPVREJ",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**44**;30 Apr 99;Build 8
"RTN","RGPVREJ",3,0)
 ;
"RTN","RGPVREJ",4,0)
 ;Reference to ^XWB2HL7 supported by IA #3144
"RTN","RGPVREJ",5,0)
 ;Reference to ^XWBDRPC supported by IA #3149
"RTN","RGPVREJ",6,0)
 ;
"RTN","RGPVREJ",7,0)
REJ ;Option only available for Primary View Reject exceptions
"RTN","RGPVREJ",8,0)
 ;From within the Exception Handler, for selection, DATA should be defined.
"RTN","RGPVREJ",9,0)
 N RGBDT,RGICN,RGSITE,PTEN,PELV
"RTN","RGPVREJ",10,0)
 I DATA="" W !,"No Exception Data available." Q
"RTN","RGPVREJ",11,0)
 S PTEN=$P(DATA,"^",10) ;IEN IN 991.1
"RTN","RGPVREJ",12,0)
 S PELV=$P(DATA,"^",11) ;IEN IN 991.12
"RTN","RGPVREJ",13,0)
 I $P($G(^RGHL7(991.1,PTEN,1,PELV,0)),"^",3)'=234 S VALMSG="Action is ONLY for PRIMARY VIEW REJECT exceptions!" Q
"RTN","RGPVREJ",14,0)
 I $P($G(^RGHL7(991.1,PTEN,1,PELV,0)),"^",5)=1 S VALMSG="Exception has been PROCESSED; no longer active." Q
"RTN","RGPVREJ",15,0)
 S RGSITE=$P($$SITE^VASITE(),"^",3) I RGSITE="" W !,"No Site Data defined." Q
"RTN","RGPVREJ",16,0)
 S RGICN=$P(DATA,"^",6) I RGICN="" W !,"No ICN defined." Q
"RTN","RGPVREJ",17,0)
 S RGBDT=$P(DATA,"^",3) I RGBDT="" W !,"No Exception Date defined." Q
"RTN","RGPVREJ",18,0)
 S X=RGBDT D ^%DT S RGBDT=Y ;convert Exception Date from external format to internal
"RTN","RGPVREJ",19,0)
 ;
"RTN","RGPVREJ",20,0)
 S VALMBCK="",QUIT=0
"RTN","RGPVREJ",21,0)
 D FULL^VALM1
"RTN","RGPVREJ",22,0)
SEND ;Send a remote query to the MPI for Primary View Reject report
"RTN","RGPVREJ",23,0)
 N RETURN,RESULT,RGEDT,SNTDT
"RTN","RGPVREJ",24,0)
 S RGEDT=$$DT^XLFDT ;End date for report internal format
"RTN","RGPVREJ",25,0)
NOQ ;No previous query exists for this ICN/exception date
"RTN","RGPVREJ",26,0)
 I '$D(^XTMP("RGPVREJ",RGICN,RGBDT)) D RPC G DISP
"RTN","RGPVREJ",27,0)
 ;
"RTN","RGPVREJ",28,0)
OLDQ ;Query already sent for this ICN/ exception date
"RTN","RGPVREJ",29,0)
 I $D(^XTMP("RGPVREJ",RGICN,RGBDT)) D
"RTN","RGPVREJ",30,0)
 .S SNTDT=$$FMTE^XLFDT($P(^XTMP("RGPVREJ",RGICN,RGBDT),"^",2))
"RTN","RGPVREJ",31,0)
 .W !?3,"A query was last sent for this ICN/Exception Date on "_SNTDT
"RTN","RGPVREJ",32,0)
 .S X=$P(SNTDT,"@") D ^%DT S SNTDT=Y ;convert to internal, strip time
"RTN","RGPVREJ",33,0)
 .;Has data returned for existing query?
"RTN","RGPVREJ",34,0)
 .S RETURN(0)=$P(^XTMP("RGPVREJ",RGICN,RGBDT),"^")
"RTN","RGPVREJ",35,0)
 .D RPCCHK^XWB2HL7(.RESULT,RETURN(0)) I +RESULT(0)=1 D  ;Data has returned
"RTN","RGPVREJ",36,0)
 ..I RGEDT=SNTDT D  ;query was sent 'today', want to use that one?
"RTN","RGPVREJ",37,0)
 ...S DIR("A")="   Do you wish to review that existing query data now? ",DIR(0)="YA"
"RTN","RGPVREJ",38,0)
 ...S DIR("?")="     Enter YES to review the existing query; NO to send a new query"
"RTN","RGPVREJ",39,0)
 ...S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q  ;up-arrowed out
"RTN","RGPVREJ",40,0)
 ...I Y>0 K DIR Q  ;yes, use existing query
"RTN","RGPVREJ",41,0)
 ...I Y=0 D  Q  ;no, don't use existing, send new query
"RTN","RGPVREJ",42,0)
 ....K ^XTMP("RGPVREJ",RGICN,RGBDT)
"RTN","RGPVREJ",43,0)
 ....D RPC
"RTN","RGPVREJ",44,0)
 ....K DIR
"RTN","RGPVREJ",45,0)
 ....;
"RTN","RGPVREJ",46,0)
 ..I RGEDT'=SNTDT D  ;query was NOT sent 'today', data may be old, send new query
"RTN","RGPVREJ",47,0)
 ...W !?3,"Previous Query data may be obsolete."
"RTN","RGPVREJ",48,0)
 ...K ^XTMP("RGPVREJ",RGICN,RGBDT)
"RTN","RGPVREJ",49,0)
 ...D RPC
"RTN","RGPVREJ",50,0)
DISP ;Display Primary View Reject Data
"RTN","RGPVREJ",51,0)
 I QUIT'=1 D EN^RGEX07(RGICN,RGBDT)
"RTN","RGPVREJ",52,0)
EXIT ;Kill variables and quit
"RTN","RGPVREJ",53,0)
 K CNT,DIR,DIRUT,QUIT,X,Y
"RTN","RGPVREJ",54,0)
 Q
"RTN","RGPVREJ",55,0)
 ;
"RTN","RGPVREJ",56,0)
RPC ;Send the Remote Query
"RTN","RGPVREJ",57,0)
 W !?3,"Sending a Remote Query to the Master Patient Index."
"RTN","RGPVREJ",58,0)
 W !?3,"This will take some time; please be patient."
"RTN","RGPVREJ",59,0)
 D EN1^XWB2HL7(.RETURN,"200M","RG PRIMARY VIEW REJECT",1,RGSITE,RGICN,RGBDT,RGEDT)
"RTN","RGPVREJ",60,0)
 S ^XTMP("RGPVREJ",0)=$$FMADD^XLFDT(DT,2)_"^"_DT_"^"_"PRIMARY VIEW REJECT"
"RTN","RGPVREJ",61,0)
 S ^XTMP("RGPVREJ",RGICN,RGBDT)=RETURN(0)_"^"_$$NOW^XLFDT
"RTN","RGPVREJ",62,0)
 ;Has data returned for this query?
"RTN","RGPVREJ",63,0)
 S RETURN(0)=$P(^XTMP("RGPVREJ",RGICN,RGBDT),"^")
"RTN","RGPVREJ",64,0)
 S CNT=0 F  S CNT=CNT+1 D RPCCHK^XWB2HL7(.RESULT,RETURN(0)) Q:RESULT(0)  H 2 I CNT>15 Q  ;result(0)=status of handle
"RTN","RGPVREJ",65,0)
 I +RESULT(0)=1 W !?3,"Query data has returned from the MPI and is available for review."
"RTN","RGPVREJ",66,0)
 I +RESULT(0)'=1 D  ;quit, info not back after 30 seconds
"RTN","RGPVREJ",67,0)
 .W !?3,"Query data has NOT returned from the MPI; please check back later."
"RTN","RGPVREJ",68,0)
 .S QUIT=1
"RTN","RGPVREJ",69,0)
 .D PAUSE^VALM1
"RTN","RGPVREJ",70,0)
 Q
"RTN","RGPVREJ",71,0)
 ;
"VER")
8.0^22.0
"BLD",2476,6)
^46
**END**
**END**
