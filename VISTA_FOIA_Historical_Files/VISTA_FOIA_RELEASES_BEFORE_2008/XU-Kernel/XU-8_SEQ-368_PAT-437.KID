EMERGENCY Released XU*8*437 SEQ #368
Extracted from mail message
**KIDS**:XU*8.0*437^

**INSTALL NAME**
XU*8.0*437
"BLD",975,0)
XU*8.0*437^KERNEL^0^3070502^y
"BLD",975,1,0)
^^2^2^3070313^
"BLD",975,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",975,1,2,0)
XU*8*437  XUSESIG and other small fixes.
"BLD",975,4,0)
^9.64PA^44^1
"BLD",975,4,44,0)
44
"BLD",975,4,44,2,0)
^9.641^44^1
"BLD",975,4,44,2,44,0)
HOSPITAL LOCATION  (File-top level)
"BLD",975,4,44,2,44,1,0)
^9.6411^22901^2
"BLD",975,4,44,2,44,1,22900,0)
AUTOFINISH RX SITE
"BLD",975,4,44,2,44,1,22901,0)
AUTOFINISH CLINIC PRINTER
"BLD",975,4,44,222)
y^y^p^^^^n^^n
"BLD",975,4,44,224)

"BLD",975,4,"APDD",44,44)

"BLD",975,4,"APDD",44,44,22900)

"BLD",975,4,"APDD",44,44,22901)

"BLD",975,4,"B",44,44)

"BLD",975,6.3)
2
"BLD",975,"KRN",0)
^9.67PA^8989.52^19
"BLD",975,"KRN",.4,0)
.4
"BLD",975,"KRN",.401,0)
.401
"BLD",975,"KRN",.402,0)
.402
"BLD",975,"KRN",.403,0)
.403
"BLD",975,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",975,"KRN",.403,"NM",1,0)
XUSERDEACT    FILE #200^200^0
"BLD",975,"KRN",.403,"NM","B","XUSERDEACT    FILE #200",1)

"BLD",975,"KRN",.5,0)
.5
"BLD",975,"KRN",.84,0)
.84
"BLD",975,"KRN",3.6,0)
3.6
"BLD",975,"KRN",3.8,0)
3.8
"BLD",975,"KRN",9.2,0)
9.2
"BLD",975,"KRN",9.8,0)
9.8
"BLD",975,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",975,"KRN",9.8,"NM",1,0)
XUSESIG^^0^B11503633
"BLD",975,"KRN",9.8,"NM",2,0)
XUS2^^0^B48747049
"BLD",975,"KRN",9.8,"NM",3,0)
XLFSTR^^0^B7051089
"BLD",975,"KRN",9.8,"NM",4,0)
XUSRB4^^0^B12816308
"BLD",975,"KRN",9.8,"NM",5,0)
XUSRB^^0^B30600707
"BLD",975,"KRN",9.8,"NM","B","XLFSTR",3)

"BLD",975,"KRN",9.8,"NM","B","XUS2",2)

"BLD",975,"KRN",9.8,"NM","B","XUSESIG",1)

"BLD",975,"KRN",9.8,"NM","B","XUSRB",5)

"BLD",975,"KRN",9.8,"NM","B","XUSRB4",4)

"BLD",975,"KRN",19,0)
19
"BLD",975,"KRN",19.1,0)
19.1
"BLD",975,"KRN",101,0)
101
"BLD",975,"KRN",409.61,0)
409.61
"BLD",975,"KRN",771,0)
771
"BLD",975,"KRN",870,0)
870
"BLD",975,"KRN",8989.51,0)
8989.51
"BLD",975,"KRN",8989.52,0)
8989.52
"BLD",975,"KRN",8994,0)
8994
"BLD",975,"KRN","B",.4,.4)

"BLD",975,"KRN","B",.401,.401)

"BLD",975,"KRN","B",.402,.402)

"BLD",975,"KRN","B",.403,.403)

"BLD",975,"KRN","B",.5,.5)

"BLD",975,"KRN","B",.84,.84)

"BLD",975,"KRN","B",3.6,3.6)

"BLD",975,"KRN","B",3.8,3.8)

"BLD",975,"KRN","B",9.2,9.2)

"BLD",975,"KRN","B",9.8,9.8)

"BLD",975,"KRN","B",19,19)

"BLD",975,"KRN","B",19.1,19.1)

"BLD",975,"KRN","B",101,101)

"BLD",975,"KRN","B",409.61,409.61)

"BLD",975,"KRN","B",771,771)

"BLD",975,"KRN","B",870,870)

"BLD",975,"KRN","B",8989.51,8989.51)

"BLD",975,"KRN","B",8989.52,8989.52)

"BLD",975,"KRN","B",8994,8994)

"BLD",975,"QUES",0)
^9.62^^
"BLD",975,"REQB",0)
^9.611^3^3
"BLD",975,"REQB",1,0)
XU*8.0*400^2
"BLD",975,"REQB",2,0)
XU*8.0*404^2
"BLD",975,"REQB",3,0)
XU*8.0*419^2
"BLD",975,"REQB","B","XU*8.0*400",1)

"BLD",975,"REQB","B","XU*8.0*404",2)

"BLD",975,"REQB","B","XU*8.0*419",3)

"FIA",44)
HOSPITAL LOCATION
"FIA",44,0)
^SC(
"FIA",44,0,0)
44I
"FIA",44,0,1)
y^y^p^^^^n^^n
"FIA",44,0,10)

"FIA",44,0,11)

"FIA",44,0,"RLRO")

"FIA",44,0,"VR")
8.0^XU
"FIA",44,44)
1
"FIA",44,44,22900)

"FIA",44,44,22901)

"KRN",.403,10,-1)
0^1
"KRN",.403,10,0)
XUSERDEACT^^KRN,KDE^^2940419^^^200^0^0^1
"KRN",.403,10,15,0)
^^1^1^2940809^^
"KRN",.403,10,15,1,0)
The screen for the deactivate a user.
"KRN",.403,10,40,0)
^.4031I^1^1
"KRN",.403,10,40,1,0)
1^XUSERDEACT HDR^1,1
"KRN",.403,10,40,1,1)
Page 1
"KRN",.403,10,40,1,40,0)
^.4032PI^44^1
"KRN",.403,10,40,1,40,44,0)
XUSERDEACT^2^4,1^e
"KRN",.404,44,0)
XUSERDEACT^200
"KRN",.404,44,40,0)
^.4044I^5^5
"KRN",.404,44,40,1,0)
1^Disable User^3
"KRN",.404,44,40,1,1)
7
"KRN",.404,44,40,1,2)
2,35^3^2,21
"KRN",.404,44,40,2,0)
2^TERMINATION DATE^3
"KRN",.404,44,40,2,1)
9.2
"KRN",.404,44,40,2,2)
4,35^11^4,17
"KRN",.404,44,40,3,0)
3^DELETE ALL MAIL ACCESS^3
"KRN",.404,44,40,3,1)
9.21
"KRN",.404,44,40,3,2)
8,35^3^8,11
"KRN",.404,44,40,3,3)
Y
"KRN",.404,44,40,3,11)
S XUTX1=$G(XUTX1) D HLP^DDSUTL(.XUTX1)
"KRN",.404,44,40,4,0)
4^DELETE KEYS AT TERMINATION^3
"KRN",.404,44,40,4,1)
9.22
"KRN",.404,44,40,4,2)
9,39^3^9,11
"KRN",.404,44,40,4,3)
Y
"KRN",.404,44,40,4,11)
S XUTX2=$G(XUTX2) D HLP^DDSUTL(.XUTX2)
"KRN",.404,44,40,5,0)
5^Termination Reason^3
"KRN",.404,44,40,5,1)
9.4
"KRN",.404,44,40,5,2)
6,35^36^6,15
"KRN",.404,46,0)
XUSERDEACT HDR^200
"KRN",.404,46,15,0)
^^1^1^2940809^
"KRN",.404,46,15,1,0)
THIS IS A TEST
"KRN",.404,46,40,0)
^.4044I^6^3
"KRN",.404,46,40,1,0)
1^DEACTIVATE A USER^1^
"KRN",.404,46,40,1,2)
^^1,30^1
"KRN",.404,46,40,2,0)
2^NAME^3
"KRN",.404,46,40,2,1)
.01
"KRN",.404,46,40,2,2)
2,7^30^2,1
"KRN",.404,46,40,6,0)
4^_______________________________________________________________________________^1^
"KRN",.404,46,40,6,2)
^^3,1^
"MBREQ")
0
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
437^3070502
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3070502
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*437  XUSESIG and other small fixes.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","XLFSTR")
0^3^B7051089^B5626516
"RTN","XLFSTR",1,0)
XLFSTR ;ISC-SF/STAFF - String Functions ;12/19/06  09:45
"RTN","XLFSTR",2,0)
 ;;8.0;KERNEL;**112,120,400,437**;Jul 10, 1995;Build 2
"RTN","XLFSTR",3,0)
 ;
"RTN","XLFSTR",4,0)
UP(X) Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","XLFSTR",5,0)
 ;
"RTN","XLFSTR",6,0)
LOW(X) Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","XLFSTR",7,0)
 ;
"RTN","XLFSTR",8,0)
STRIP(X,Y) Q $TR(X,$G(Y),"")
"RTN","XLFSTR",9,0)
 ;
"RTN","XLFSTR",10,0)
REPEAT(X,Y) ;
"RTN","XLFSTR",11,0)
 N % Q:'$D(X) "" I $L(X)*$G(Y)>245 Q ""
"RTN","XLFSTR",12,0)
 S %="",$P(%,X,$G(Y)+1)=""
"RTN","XLFSTR",13,0)
 Q %
"RTN","XLFSTR",14,0)
 ;
"RTN","XLFSTR",15,0)
SPLIT(%SRC,%DLM,%VLIST) ;split a string by delimiter vars in list
"RTN","XLFSTR",16,0)
 ;returns number of vars in list
"RTN","XLFSTR",17,0)
 ;usage - s %=$$split(src,dlm,"d1,d2,d3,..")
"RTN","XLFSTR",18,0)
 N I,V,DV
"RTN","XLFSTR",19,0)
 S DV=$$DVARS(%VLIST),%DLM=$G(%DLM,",")
"RTN","XLFSTR",20,0)
 F I=1:1:$L(%VLIST,DV) S V=$P(%VLIST,DV,I) S:V'="" @V=$P(%SRC,%DLM,I)
"RTN","XLFSTR",21,0)
 Q I
"RTN","XLFSTR",22,0)
 ;
"RTN","XLFSTR",23,0)
DVARS(LIST) ;return a delimiter for a list of variables
"RTN","XLFSTR",24,0)
 Q $S(%VLIST[$C(9):$C(9),%VLIST[";":";",1:",")
"RTN","XLFSTR",25,0)
 ;
"RTN","XLFSTR",26,0)
INVERT(X) ;
"RTN","XLFSTR",27,0)
 N %,%1 S %="" F %1=$L(X):-1:1 S %=%_$E(X,%1)
"RTN","XLFSTR",28,0)
 Q %
"RTN","XLFSTR",29,0)
 ;
"RTN","XLFSTR",30,0)
REPLACE(IN,SPEC) ;See $$REPLACE in MDC minutes.
"RTN","XLFSTR",31,0)
 Q:'$D(IN) "" Q:$D(SPEC)'>9 IN N %1,%2,%3,%4,%5,%6,%7,%8
"RTN","XLFSTR",32,0)
 S %1=$L(IN),%7=$J("",%1),%3="",%6=9999 F  S %3=$O(SPEC(%3)) Q:%3=""  S %6(%6)=%3,%6=%6-1
"RTN","XLFSTR",33,0)
 F %6=0:0 S %6=$O(%6(%6)) Q:%6'>0  S %3=%6(%6) D:$D(SPEC(%3))#2 RE1
"RTN","XLFSTR",34,0)
 S %8="" F %2=1:1:%1 D RE3
"RTN","XLFSTR",35,0)
 Q %8
"RTN","XLFSTR",36,0)
 ;
"RTN","XLFSTR",37,0)
RE1 S %4=$L(%3),%5=0 F  S %5=$F(IN,%3,%5) Q:%5<1  D RE2
"RTN","XLFSTR",38,0)
 Q
"RTN","XLFSTR",39,0)
RE2 Q:$E(%7,%5-%4,%5-1)["X"  S %8(%5-%4)=SPEC(%3)
"RTN","XLFSTR",40,0)
 F %2=%5-%4:1:%5-1 S %7=$E(%7,1,%2-1)_"X"_$E(%7,%2+1,%1)
"RTN","XLFSTR",41,0)
 Q
"RTN","XLFSTR",42,0)
RE3 I $E(%7,%2)=" " S %8=%8_$E(IN,%2) Q
"RTN","XLFSTR",43,0)
 S:$D(%8(%2)) %8=%8_%8(%2)
"RTN","XLFSTR",44,0)
 Q
"RTN","XLFSTR",45,0)
 ;
"RTN","XLFSTR",46,0)
RJ(%,%1,%2) ;Right justify
"RTN","XLFSTR",47,0)
 N %3
"RTN","XLFSTR",48,0)
 S:%1["T" %1=+%1,%=$E(%,1,%1)
"RTN","XLFSTR",49,0)
 S %3=$J("",%1-$L(%)) S:$D(%2) %3=$TR(%3," ",%2)
"RTN","XLFSTR",50,0)
 Q %3_%
"RTN","XLFSTR",51,0)
 ;
"RTN","XLFSTR",52,0)
LJ(%,%1,%2) ;Left justify
"RTN","XLFSTR",53,0)
 N %3
"RTN","XLFSTR",54,0)
 S:%1["T" %1=+%1,%=$E(%,1,%1)
"RTN","XLFSTR",55,0)
 S %3=$J("",%1-$L(%)) S:$G(%2)]"" %3=$TR(%3," ",%2)
"RTN","XLFSTR",56,0)
 Q %_%3
"RTN","XLFSTR",57,0)
 ;
"RTN","XLFSTR",58,0)
CJ(%,%1,%2) ;Center Justify
"RTN","XLFSTR",59,0)
 N %3,%4
"RTN","XLFSTR",60,0)
 S:%1["T" %1=+%1,%=$E(%,1,%1) S %3=%1-$L(%) Q:%3<1 %
"RTN","XLFSTR",61,0)
 S %3=%3\2,%4=$J("",%3+1) I $G(%2)]"" S %4=$TR(%4," ",%2)
"RTN","XLFSTR",62,0)
 Q $E(%4,1,%3)_%_$E(%4,1,%1-%3-$L(%))
"RTN","XLFSTR",63,0)
 ;
"RTN","XLFSTR",64,0)
QUOTE(%) ;Add quotes to value for concatenation
"RTN","XLFSTR",65,0)
 S %(%)=0,%=$Q(%)
"RTN","XLFSTR",66,0)
 Q $P($E(%,1,$L(%)-1),"(",2,999)
"RTN","XLFSTR",67,0)
 ;
"RTN","XLFSTR",68,0)
TRIM(%X,%F,%V) ;Trim spaces\char from front(left)/back(right) of string
"RTN","XLFSTR",69,0)
 N %R,%L
"RTN","XLFSTR",70,0)
 S %F=$$UP($G(%F,"LR")),%L=1,%R=$L(%X),%V=$G(%V," ")
"RTN","XLFSTR",71,0)
 I %F["R" F %R=$L(%X):-1:1 Q:$E(%X,%R)'=%V
"RTN","XLFSTR",72,0)
 I %F["L" F %L=1:1:$L(%X) Q:$E(%X,%L)'=%V
"RTN","XLFSTR",73,0)
 I (%L>%R)!(%X=%V) Q ""
"RTN","XLFSTR",74,0)
 Q $E(%X,%L,%R)
"RTN","XLFSTR",75,0)
 ;
"RTN","XLFSTR",76,0)
SENTENCE(%X) ;
"RTN","XLFSTR",77,0)
 ; Converts a string into proper sentence case (first letter of each sentence
"RTN","XLFSTR",78,0)
 ;  upper case, all the others lower case)
"RTN","XLFSTR",79,0)
 ; Example Usage:
"RTN","XLFSTR",80,0)
 ; W $$SENTENCE^XLFSTR("HELLO WORLD!!! THIS IS A CAPITALIZED SENTENCE. (this isn't.)")
"RTN","XLFSTR",81,0)
 ;  produces
"RTN","XLFSTR",82,0)
 ; Hello world!!! This is a capitalized sentence. This isn't.
"RTN","XLFSTR",83,0)
 ;
"RTN","XLFSTR",84,0)
 ; %S = string during conversion
"RTN","XLFSTR",85,0)
 ; %P = state flag (1 = next letter should be caps)
"RTN","XLFSTR",86,0)
 ; I = iteration index
"RTN","XLFSTR",87,0)
 ; C = current character
"RTN","XLFSTR",88,0)
 ;
"RTN","XLFSTR",89,0)
 N %I,%C,%S,%P
"RTN","XLFSTR",90,0)
 S %S=$$LOW(%X),%P=1
"RTN","XLFSTR",91,0)
 F %I=1:1:$L(%X) D
"RTN","XLFSTR",92,0)
 . S %C=$E(%S,%I)
"RTN","XLFSTR",93,0)
 . I %P,%C?1L S $E(%S,%I)=$$UP(%C),%P=0
"RTN","XLFSTR",94,0)
 . S:".!?"[%C %P=1
"RTN","XLFSTR",95,0)
 Q %S
"RTN","XLFSTR",96,0)
 ;
"RTN","XLFSTR",97,0)
TITLE(%X) ;
"RTN","XLFSTR",98,0)
 ; Converts a string into TITLE CASE format (first letter of each word is uppercase)
"RTN","XLFSTR",99,0)
 ; Example Usage:
"RTN","XLFSTR",100,0)
 ; W $$TITLE^XLFSTR("THIS IS CAPITALIZED. (this isn't.)")
"RTN","XLFSTR",101,0)
 ; produces
"RTN","XLFSTR",102,0)
 ; This Is Capitalized. This Isn't.
"RTN","XLFSTR",103,0)
 ;
"RTN","XLFSTR",104,0)
 ; %S = string during conversion
"RTN","XLFSTR",105,0)
 ; %P = state flag
"RTN","XLFSTR",106,0)
 ; %I = iteration index
"RTN","XLFSTR",107,0)
 ; %C = current character
"RTN","XLFSTR",108,0)
 ;
"RTN","XLFSTR",109,0)
 N %I,%C,%S,%P
"RTN","XLFSTR",110,0)
 S %S=$$LOW(%X),%P=1
"RTN","XLFSTR",111,0)
 F %I=1:1:$L(%S) D
"RTN","XLFSTR",112,0)
 . S %C=$E(%S,%I)
"RTN","XLFSTR",113,0)
 . I %P,%C?1L S $E(%S,%I)=$$UP(%C),%P=0
"RTN","XLFSTR",114,0)
 . S:%C=" " %P=1
"RTN","XLFSTR",115,0)
 . Q
"RTN","XLFSTR",116,0)
 Q %S
"RTN","XUS2")
0^2^B48747049^B47237337
"RTN","XUS2",1,0)
XUS2 ;SF/RWF - TO CHECK OR RETURN USER ATTRIBUTES ;11/29/2006
"RTN","XUS2",2,0)
 ;;8.0;KERNEL;**59,180,313,419,437**;Jul 10, 1995;Build 2
"RTN","XUS2",3,0)
 Q
"RTN","XUS2",4,0)
 ;
"RTN","XUS2",5,0)
ACCED ; ACCESS CODE EDIT from DD
"RTN","XUS2",6,0)
 I "Nn"[$E(X,1) S X="" Q
"RTN","XUS2",7,0)
 I "Yy"'[$E(X,1) K X Q
"RTN","XUS2",8,0)
 N DIR,DIR0,XUAUTO,XUK
"RTN","XUS2",9,0)
 S XUAUTO=($P($G(^XTV(8989.3,1,3)),U,1)="y"),XUH=""
"RTN","XUS2",10,0)
AC1 D CLR,AAUTO:XUAUTO,AASK:'XUAUTO G OUT:$D(DIRUT) D REASK G OUT:$D(DIRUT),AC1:'XUK D CLR,AST(XUH)
"RTN","XUS2",11,0)
 G OUT
"RTN","XUS2",12,0)
 ;
"RTN","XUS2",13,0)
AASK ;Ask for Access code
"RTN","XUS2",14,0)
 N X,XUU,XUEX X ^%ZOSF("EOFF")
"RTN","XUS2",15,0)
 S XUEX=0
"RTN","XUS2",16,0)
 F  D AASK1 Q:XUEX!($D(DIRUT))
"RTN","XUS2",17,0)
 Q
"RTN","XUS2",18,0)
 ;
"RTN","XUS2",19,0)
AASK1 ;
"RTN","XUS2",20,0)
 W "Enter a new ACCESS CODE <Hidden>: " D GET Q:$D(DIRUT)
"RTN","XUS2",21,0)
 I X="@" D DEL D:Y'=1 DIRUT S XUH="",XUEX=1 Q
"RTN","XUS2",22,0)
 I X[$C(34)!(X[";")!(X["^")!(X[":")!(X'?.UNP)!($L(X)>20)!($L(X)<6)!(X="MAIL-BOX") D CLR W $C(7),$$AVHLPTXT(1) D AHELP Q
"RTN","XUS2",23,0)
 I 'XUAUTO,((X?6.20A)!(X?6.20N)) D CLR W $C(7),$$AVHLPTXT(1),! Q
"RTN","XUS2",24,0)
 S XUU=X,X=$$EN^XUSHSH(X),XUH=X,XMB(1)=$O(^VA(200,"A",XUH,0)) I XMB(1),XMB(1)'=DA S XMB="XUS ACCESS CODE VIOLATION",XMB(1)=$P(^VA(200,XMB(1),0),"^"),XMDUN="Security" D ^XMB
"RTN","XUS2",25,0)
 I $D(^VA(200,"AOLD",XUH))!$D(^VA(200,"A",XUH)) D CLR W $C(7),"This has been used previously as an ACCESS CODE.",! Q
"RTN","XUS2",26,0)
 S XUEX=1 ;Now we can quit
"RTN","XUS2",27,0)
 Q
"RTN","XUS2",28,0)
 ;
"RTN","XUS2",29,0)
REASK S XUK=1 Q:XUH=""  D CLR X ^%ZOSF("EOFF")
"RTN","XUS2",30,0)
 F XUK=3:-1:1 W "Please re-type the new code to show that I have it right: " D GET G:$D(DIRUT) DIRUT D ^XUSHSH Q:(XUH=X)  D CLR W "This doesn't match.  Try again!",!,$C(7)
"RTN","XUS2",31,0)
 S:XUH'=X XUK=0
"RTN","XUS2",32,0)
 Q
"RTN","XUS2",33,0)
 ;
"RTN","XUS2",34,0)
AST(XUH) ;Change ACCESS CODE and index.
"RTN","XUS2",35,0)
 W "OK, Access code has been changed!"
"RTN","XUS2",36,0)
 N FDA,IEN,ERR
"RTN","XUS2",37,0)
 S IEN=DA_","
"RTN","XUS2",38,0)
 S FDA(200,IEN,2)=XUH D FILE^DIE("","FDA","ERR")
"RTN","XUS2",39,0)
 W !,"The VERIFY CODE has been deleted as a security measure.",!,"You will need to enter a new VERIFY code so the user can sign-on.",$C(7)
"RTN","XUS2",40,0)
 D VST("",1)
"RTN","XUS2",41,0)
 I $D(^XMB(3.7,DA,0))[0 S Y=DA D NEW^XM ;Make sure has a Mailbox
"RTN","XUS2",42,0)
 Q
"RTN","XUS2",43,0)
 ;
"RTN","XUS2",44,0)
GET ;Get the user input and convert case.
"RTN","XUS2",45,0)
 S X=$$ACCEPT^XUS I (X["^")!('$L(X)) D DIRUT
"RTN","XUS2",46,0)
 S X=$$UP^XLFSTR(X)
"RTN","XUS2",47,0)
 Q
"RTN","XUS2",48,0)
 ;
"RTN","XUS2",49,0)
DIRUT S DIRUT=1
"RTN","XUS2",50,0)
 Q
"RTN","XUS2",51,0)
 ;
"RTN","XUS2",52,0)
CLR ;New line or Clear screenman area
"RTN","XUS2",53,0)
 I '$D(DDS) W ! Q
"RTN","XUS2",54,0)
 N DX,DY
"RTN","XUS2",55,0)
 D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X IOXY
"RTN","XUS2",56,0)
 Q
"RTN","XUS2",57,0)
 ;
"RTN","XUS2",58,0)
NEWCODE D REASK I XUK W !,"OK, remember this code for next time!"
"RTN","XUS2",59,0)
 G OUT
"RTN","XUS2",60,0)
 ;
"RTN","XUS2",61,0)
CVC ;From XUS1
"RTN","XUS2",62,0)
 N DA,X
"RTN","XUS2",63,0)
 S DA=DUZ,X="Y"
"RTN","XUS2",64,0)
 W !,"You must change your VERIFY CODE at this time."
"RTN","XUS2",65,0)
 ;Fall into next code
"RTN","XUS2",66,0)
VERED ; VERIFY CODE EDIT From DD
"RTN","XUS2",67,0)
 N DIR,DIR0,XUAUTO
"RTN","XUS2",68,0)
 I "Nn"[$E(X,1) S X="" Q
"RTN","XUS2",69,0)
 I "Yy"'[$E(X,1) K X Q
"RTN","XUS2",70,0)
 S XUH="",XUAUTO=($P($G(^XTV(8989.3,1,3)),U,3)="y") S:DUZ=DA XUAUTO="n" ;Auto only for admin
"RTN","XUS2",71,0)
VC1 D CLR,VASK:'XUAUTO,VAUTO:XUAUTO G OUT:$D(DIRUT) D REASK G OUT:$D(DIRUT),VC1:'XUK D CLR,VST(XUH,1)
"RTN","XUS2",72,0)
 D CALL^XUSERP(DA,2)
"RTN","XUS2",73,0)
 G OUT
"RTN","XUS2",74,0)
 ;
"RTN","XUS2",75,0)
VASK ;Ask for Verify Code
"RTN","XUS2",76,0)
 N X,XUU X ^%ZOSF("EOFF") G:'$$CHKCUR() DIRUT D CLR
"RTN","XUS2",77,0)
VASK1 W "Enter a new VERIFY CODE: " D GET Q:$D(DIRUT)
"RTN","XUS2",78,0)
 I '$D(XUNC),(X="@") D DEL G:Y'=1 DIRUT S XUH="" Q
"RTN","XUS2",79,0)
 D CLR S XUU=X,X=$$EN^XUSHSH(X),XUH=X,Y=$$VCHK(XUU,XUH) I +Y W $C(7),$P(Y,U,2,9),! D:+Y=1 VHELP G VASK1
"RTN","XUS2",80,0)
 Q
"RTN","XUS2",81,0)
 ;
"RTN","XUS2",82,0)
VCHK(S,EC) ;Call with String and Encripted versions
"RTN","XUS2",83,0)
 ;Updated per VHA directive 6210 Strong Passwords
"RTN","XUS2",84,0)
 N PUNC,NA S PUNC="~`!@#$%&*()_-+=|\{}[]'<>,.?/"
"RTN","XUS2",85,0)
 S NA("FILE")=200,NA("FIELD")=.01,NA("IENS")=DA_",",NA=$$HLNAME^XLFNAME(.NA)
"RTN","XUS2",86,0)
 I ($L(S)<8)!($L(S)>20)!(S'?.UNP)!(S[";")!(S["^")!(S[":") Q "1^"_$$AVHLPTXT
"RTN","XUS2",87,0)
 I (S?8.20A)!(S?8.20N)!(S?8.20P)!(S?8.20AN)!(S?8.20AP)!(S?8.20NP) Q "2^VERIFY CODE must be a mix of alpha and numerics and punctuation."
"RTN","XUS2",88,0)
 I $D(^VA(200,DA,.1)),EC=$P(^(.1),U,2) Q "3^This code is the same as the current one."
"RTN","XUS2",89,0)
 I $D(^VA(200,DA,"VOLD",EC)) Q "4^This has been used previously as the VERIFY CODE."
"RTN","XUS2",90,0)
 I EC=$P(^VA(200,DA,0),U,3) Q "5^VERIFY CODE must be different than the ACCESS CODE."
"RTN","XUS2",91,0)
 I S[$P(NA,"^")!(S[$P(NA,"^",2)) Q "6^Name cannot be part of code."
"RTN","XUS2",92,0)
 Q 0
"RTN","XUS2",93,0)
 ;
"RTN","XUS2",94,0)
VST(XUH,%) ;
"RTN","XUS2",95,0)
 W:$L(XUH)&% !,"OK, Verify code has been changed!"
"RTN","XUS2",96,0)
 N FDA,IEN,ERR S IEN=DA_","
"RTN","XUS2",97,0)
 S:XUH="" XUH="@" ;11.2 get triggerd
"RTN","XUS2",98,0)
 S FDA(200,IEN,11)=XUH D FILE^DIE("","FDA","ERR")
"RTN","XUS2",99,0)
 I $D(ERR) D ^%ZTER
"RTN","XUS2",100,0)
 S:DA=DUZ DUZ("NEWCODE")=XUH Q
"RTN","XUS2",101,0)
 ;
"RTN","XUS2",102,0)
DEL ;
"RTN","XUS2",103,0)
 X ^%ZOSF("EON") W $C(7) S DIR(0)="Y",DIR("A")="Sure you want to delete" D ^DIR I Y'=1 W:$X>55 !?9 W $C(7),"  <Nothing Deleted>"
"RTN","XUS2",104,0)
 Q
"RTN","XUS2",105,0)
 ;
"RTN","XUS2",106,0)
AAUTO ;Auto-get Access codes
"RTN","XUS2",107,0)
 N XUK,Y
"RTN","XUS2",108,0)
 X ^%ZOSF("EON") F XUK=1:1:3 D AGEN Q:(Y=1)!($D(DIRUT))
"RTN","XUS2",109,0)
 Q
"RTN","XUS2",110,0)
 ;
"RTN","XUS2",111,0)
AGEN ;Generate a ACCESS code
"RTN","XUS2",112,0)
 S XUU=$$AC^XUS4 S (X,XUH)=$$EN^XUSHSH(XUU) I $D(^VA(200,"A",X))!$D(^VA(200,"AOLD",X)) G AGEN
"RTN","XUS2",113,0)
 D CLR W "The new ACCESS CODE is: ",XUU,"   This is ",XUK," of 3 tries."
"RTN","XUS2",114,0)
 D YN
"RTN","XUS2",115,0)
 Q
"RTN","XUS2",116,0)
 ;
"RTN","XUS2",117,0)
AHELP S XUU=$$AC^XUS4 S X=$$EN^XUSHSH(XUU) I $D(^VA(200,"A",X))!$D(^VA(200,"AOLD",X)) G AHELP
"RTN","XUS2",118,0)
 W !,"Here is an example of an acceptable Access Code: ",XUU,!
"RTN","XUS2",119,0)
 Q
"RTN","XUS2",120,0)
 ;
"RTN","XUS2",121,0)
VHELP S XUU=$$VC^XUS4 S X=$$EN^XUSHSH(XUU) I ($P($G(^VA(200,DA,0)),U,3)=X)!$D(^VA(200,DA,"VOLD",X)) G VHELP
"RTN","XUS2",122,0)
 W !,"Here is an example of an acceptable Verify Code: ",XUU,!
"RTN","XUS2",123,0)
 Q
"RTN","XUS2",124,0)
 ;
"RTN","XUS2",125,0)
VAUTO ;Auto-get Access codes
"RTN","XUS2",126,0)
 N XUK
"RTN","XUS2",127,0)
 X ^%ZOSF("EON") F XUK=1:1:3 D VGEN Q:(Y=1)!($D(DIRUT))
"RTN","XUS2",128,0)
 Q
"RTN","XUS2",129,0)
 ;
"RTN","XUS2",130,0)
VGEN ;Generate a VERIFY code
"RTN","XUS2",131,0)
 S XUU=$$VC^XUS4 S (X,XUH)=$$EN^XUSHSH(XUU) I ($P($G(^VA(200,DA,0)),U,3)=X)!$D(^VA(200,DA,"VOLD",X)) G VGEN
"RTN","XUS2",132,0)
 D CLR W "The new VERIFY CODE is: ",XUU,"   This is ",XUK," of 3 tries."
"RTN","XUS2",133,0)
 D YN
"RTN","XUS2",134,0)
 Q
"RTN","XUS2",135,0)
YN ;Ask if want to keep
"RTN","XUS2",136,0)
 N DIR
"RTN","XUS2",137,0)
 S Y=1,DIR(0)="YA",DIR("A")=" Do you want to keep this one? ",DIR("B")="YES",DIR("?",1)="If you don't like this code, we can auto-generate another.",DIR("?")="Remember you only get 3 tries!"
"RTN","XUS2",138,0)
 S:XUK=3 DIR("A")="This is your final choice. "_DIR("A")
"RTN","XUS2",139,0)
 D ^DIR Q:(Y=1)!$D(DIRUT)  I XUK=2 W !,"O.K. You'll have to keep the next one!",! H 2
"RTN","XUS2",140,0)
 I (XUK=3)&(Y'=1) W !,"Lets stop and you can try later." H 3 D DIRUT
"RTN","XUS2",141,0)
 D CLR
"RTN","XUS2",142,0)
 Q
"RTN","XUS2",143,0)
 ;
"RTN","XUS2",144,0)
OUT ;
"RTN","XUS2",145,0)
 K DUOUT S:$D(DIRUT) DUOUT=1
"RTN","XUS2",146,0)
 X ^%ZOSF("EON") W !
"RTN","XUS2",147,0)
 K DIR,DIRUT,XUKO,XUAUTO,XUU,XUH,XUK,XUI S X=""
"RTN","XUS2",148,0)
 Q
"RTN","XUS2",149,0)
 ;
"RTN","XUS2",150,0)
CHKCUR() ;Check user knows current code, Return 1 if OK to continue
"RTN","XUS2",151,0)
 Q:DA'=DUZ 1 ;Only ask user
"RTN","XUS2",152,0)
 Q:$P($G(^VA(200,DA,.1)),U,2)="" 1 ;Must have an old one
"RTN","XUS2",153,0)
 S XUK=0 D CLR
"RTN","XUS2",154,0)
CHK1 W "Please enter your CURRENT verify code: " D GET Q:$D(DIRUT) 0
"RTN","XUS2",155,0)
 I $P(^VA(200,DA,.1),U,2)=$$EN^XUSHSH(X) Q 1
"RTN","XUS2",156,0)
 D CLR W "Sorry that is not correct!",!
"RTN","XUS2",157,0)
 S XUK=XUK+1 G:XUK<3 CHK1
"RTN","XUS2",158,0)
 Q 0
"RTN","XUS2",159,0)
 ;
"RTN","XUS2",160,0)
BRCVC(XV1,XV2) ;Broker change VC, return 0 if good, '1^msg' if bad.
"RTN","XUS2",161,0)
 N XUU,XUH
"RTN","XUS2",162,0)
 Q:$G(DUZ)'>0 "1^Bad DUZ" S DA=DUZ,XUH=$$EN^XUSHSH(XV2)
"RTN","XUS2",163,0)
 I $P($G(^VA(200,DUZ,.1)),"^",2)'=$$EN^XUSHSH(XV1) Q "1^Sorry that isn't the correct current code"
"RTN","XUS2",164,0)
 S Y=$$VCHK(XV2,XUH) Q:Y Y
"RTN","XUS2",165,0)
 D VST(XUH,0),CALL^XUSERP(DA,2)
"RTN","XUS2",166,0)
 Q 0
"RTN","XUS2",167,0)
 ;
"RTN","XUS2",168,0)
AVHLPTXT(%) ;
"RTN","XUS2",169,0)
 Q "Enter "_$S($G(%):"6-20",1:"8-20")_" characters mixed alphanumeric and punctuation (except '^', ';', ':')."
"RTN","XUS2",170,0)
 ;
"RTN","XUS2",171,0)
 ;Left over code, Don't think it is called anymore.
"RTN","XUS2",172,0)
 G XUS2^XUVERIFY ;All check or return user attributes moved to XUVERIFY
"RTN","XUS2",173,0)
USER G USER^XUVERIFY
"RTN","XUS2",174,0)
EDIT G EDIT^XUVERIFY
"RTN","XUSESIG")
0^1^B11503633^B10516400
"RTN","XUSESIG",1,0)
XUSESIG ;SF/RWF - ROUTINE TO ENTER OR CHANGE ELECTRONIC SIGNATURE CODE ;10/16/2006
"RTN","XUSESIG",2,0)
 ;;8.0;KERNEL;**14,55,437**;Jul 10, 1995;Build 2
"RTN","XUSESIG",3,0)
A ;Called by others from the top. See DBIC #936
"RTN","XUSESIG",4,0)
 I $D(DUZ)[0 W "NO ACTION CAN BE TAKEN ON YOUR REQUEST     " Q
"RTN","XUSESIG",5,0)
 N DA,DIE,DR,X1,K
"RTN","XUSESIG",6,0)
 S DA=+DUZ S:$D(^VA(200,DA,0))[0 DA=0
"RTN","XUSESIG",7,0)
 I DA'>0 W !,"You don't have an entry in the NEW PERSON file, See your site manager" G OUT
"RTN","XUSESIG",8,0)
 W !,"This option is designed to permit you to enter or change your Initials,"
"RTN","XUSESIG",9,0)
 W !,"Signature Block Information, Office Phone number, and Voice and",!,"Digital Pagers numbers."
"RTN","XUSESIG",10,0)
 W !,"In addition, you are permitted to enter a new Electronic Signature Code"
"RTN","XUSESIG",11,0)
 W !,"or to change an existing code."
"RTN","XUSESIG",12,0)
 W !! S DIE="^VA(200,",DR="1;20.2;20.3;.132;.137;.138" D ^DIE
"RTN","XUSESIG",13,0)
 I $P($G(^VA(200,DA,20)),U,2)="" W !,"You must have a SIGNATURE BLOCK PRINTED NAME before you can have",!,"an ELECTRONIC SIGNATURE CODE." G OUT1
"RTN","XUSESIG",14,0)
 S X1=$P($G(^VA(200,DA,20)),"^",4) I X1]"" S K=0 D S2 G:X1="" OUT1
"RTN","XUSESIG",15,0)
 S X1=$$NEW() W !,$S(X1:"DONE",1:"  OPTION ABORTED."_$C(7))
"RTN","XUSESIG",16,0)
 G OUT1
"RTN","XUSESIG",17,0)
 ;
"RTN","XUSESIG",18,0)
NEW() ;Enter a NEW E-Sig code, return 0 for fail, 1 if done, 2 skip.
"RTN","XUSESIG",19,0)
 N K,X,X1 S K=0
"RTN","XUSESIG",20,0)
 W !!,"Your typing will not show."
"RTN","XUSESIG",21,0)
N2 W !,"ENTER NEW SIGNATURE CODE: " D R Q:X=""!(X="^") 2
"RTN","XUSESIG",22,0)
 I X'?.UNP!($L(X)>20)!($L(X)<6) W *7,!,"Signature code must be 6 to 20 characters in length",!," With no control or lowercase characters.",! G N2
"RTN","XUSESIG",23,0)
 S X1=X W !,"RE-ENTER SIGNATURE CODE FOR VERIFICATION: " D R G:X=""!(X="^") N5
"RTN","XUSESIG",24,0)
 I X'=X1 W "  CODE NOT VERIFIED, TRY AGAIN.",*7,! S K=K+1 G N5:K>3 G N2
"RTN","XUSESIG",25,0)
 D HASH^XUSHSHP
"RTN","XUSESIG",26,0)
 I X=$P(^VA(200,DA,20),U,4) W *7,!,"You can't use the same one.",! G N2
"RTN","XUSESIG",27,0)
 S $P(^VA(200,DA,20),"^",4)=X
"RTN","XUSESIG",28,0)
 F XUS=0:0 S XUS=$O(^DD(200,20.4,1,XUS)) Q:XUS'>0  X ^(XUS,1)
"RTN","XUSESIG",29,0)
N4 Q 1 ;OK
"RTN","XUSESIG",30,0)
N5 Q 0 ;FAIL
"RTN","XUSESIG",31,0)
 ;
"RTN","XUSESIG",32,0)
R X ^%ZOSF("EOFF") R X:60 X ^%ZOSF("EON") S:'$T X="^" Q
"RTN","XUSESIG",33,0)
 ;
"RTN","XUSESIG",34,0)
OUT W !,"  OPTION ABORTED.",*7
"RTN","XUSESIG",35,0)
OUT1 K %,D,D0,DA,DIC,DIE,DQ,DR,X,X1,A,K,I,Z Q
"RTN","XUSESIG",36,0)
 ;
"RTN","XUSESIG",37,0)
SIG ;Call with DUZ; Return X1="" if fail else hashed ESC.
"RTN","XUSESIG",38,0)
 N X2,K
"RTN","XUSESIG",39,0)
 S X2=$G(^VA(200,+$G(DUZ),20)),X1=$P(X2,U,4) I X1="" W !,"No Electronic Signature code to check." Q
"RTN","XUSESIG",40,0)
 S K=0 D S2 Q:X1=""
"RTN","XUSESIG",41,0)
 Q  ;Following code was to force code change
"RTN","XUSESIG",42,0)
 N LIFE S LIFE=$$KSP^XUPARAM("LIFETIME")
"RTN","XUSESIG",43,0)
 S X2=+X2 I X2>0,(X2+LIFE)'>(+$H) D  I X1="" W !,*7,"Verification with held untill new code entered.",!
"RTN","XUSESIG",44,0)
 . W !!,"Your Electronic Signature Code has expired, you need to create a new one."
"RTN","XUSESIG",45,0)
 . N DA S DA=DUZ S:$$NEW()'=1 X1=""
"RTN","XUSESIG",46,0)
 . Q
"RTN","XUSESIG",47,0)
 Q
"RTN","XUSESIG",48,0)
 ;
"RTN","XUSESIG",49,0)
S2 W !!,"Enter your Current Signature Code: " D R G:X=""!(X="^") S9
"RTN","XUSESIG",50,0)
 I X?1.2"?" W !,"Enter your current Electronic Signature Code so it can be verified.",! G S2
"RTN","XUSESIG",51,0)
 S K=K+1 D HASH^XUSHSHP I X1'=X W "  ??",*7 S X="" G S2:K<3,S9
"RTN","XUSESIG",52,0)
 W "   SIGNATURE VERIFIED"
"RTN","XUSESIG",53,0)
S9 S:X=""!(X="^") X1=""
"RTN","XUSESIG",54,0)
 Q
"RTN","XUSESIG",55,0)
TEXT ;;
"RTN","XUSESIG",56,0)
CLEAR ;Clear (delete) a users ESC to allow entering a new one.
"RTN","XUSESIG",57,0)
 S DIC=200,DIC(0)="AEMQ" D ^DIC G OUT:Y'>0 S DA=+Y,DIR(0)="Y"
"RTN","XUSESIG",58,0)
 W !,"Clear SIGNATURE CODE from user ",$P(Y,U,2) D ^DIR G OUT1:Y'=1
"RTN","XUSESIG",59,0)
 S DIE=DIC,DR="20.4///@" D ^DIE G OUT1
"RTN","XUSESIG",60,0)
 Q
"RTN","XUSESIG",61,0)
 ;;
"RTN","XUSRB")
0^5^B30600707^B30617453
"RTN","XUSRB",1,0)
XUSRB ;ISCSF/RWF - Request Broker ;3/13/07  09:56
"RTN","XUSRB",2,0)
 ;;8.0;KERNEL;**11,16,28,32,59,70,82,109,115,165,150,180,213,234,238,265,337,395,404,437**;Jul 10, 1995;Build 2
"RTN","XUSRB",3,0)
 Q  ;No entry from top
"RTN","XUSRB",4,0)
 ;
"RTN","XUSRB",5,0)
 ;RPC BROKER calls, First parameter is always call-by-reference
"RTN","XUSRB",6,0)
VALIDAV(RET,AVCODE) ;Check a users access
"RTN","XUSRB",7,0)
 ;Return R(0)=DUZ, R(1)=(0=OK, 1,2...=Can't sign-on for some reason)
"RTN","XUSRB",8,0)
 ; R(2)=verify needs changing, R(3)=Message, R(4)=0, R(5)=msg cnt, R(5+n)
"RTN","XUSRB",9,0)
 ; R(R(5)+6)=# div user must select from, R(R(5)+6+n)=div
"RTN","XUSRB",10,0)
 ;
"RTN","XUSRB",11,0)
 N X,XUSER,XUNOW,XUDEV,XUM,XUMSG,%1,VCCH K DUZ
"RTN","XUSRB",12,0)
 S U="^",RET(0)=0,RET(5)=0,XUF=$G(XUF,0),XUM=0,XUMSG=0,XUDEV=0
"RTN","XUSRB",13,0)
 S DUZ=0,DUZ(0)="",VCCH=0 D NOW
"RTN","XUSRB",14,0)
 S XOPT=$$STATE^XWBSEC("XUS XOPT")
"RTN","XUSRB",15,0)
 S XUMSG=$$INHIBIT() I XUMSG S XUM=1 G VAX ;Logon inhibited
"RTN","XUSRB",16,0)
 ;3 Strikes
"RTN","XUSRB",17,0)
 I $$LKCHECK^XUSTZIP($G(IO("IP"))) S XUMSG=7 G VAX ;IP locked
"RTN","XUSRB",18,0)
 ;Check type of sign-on code
"RTN","XUSRB",19,0)
 I $L(AVCODE) D
"RTN","XUSRB",20,0)
 . I $E(AVCODE,1,2)="~1" S DUZ=$$CHKASH^XUSRB4(AVCODE) Q
"RTN","XUSRB",21,0)
 . I $E(AVCODE,1,2)="~2" S DUZ=$$CHKCCOW^XUSRB4(AVCODE) Q
"RTN","XUSRB",22,0)
 . S DUZ=$$CHECKAV^XUS($$DECRYP^XUSRB1(AVCODE))
"RTN","XUSRB",23,0)
 . Q
"RTN","XUSRB",24,0)
 I DUZ'>0,$$FAIL^XUS3 D  G VAX
"RTN","XUSRB",25,0)
 . S XUM=1,XUMSG=7,X=$$RA^XUSTZ H 5 ;3 Strikes
"RTN","XUSRB",26,0)
 S XUMSG=$$UVALID^XUS() G:XUMSG VAX ;Check User
"RTN","XUSRB",27,0)
 S VCCH=$$VCVALID() ;Check VC
"RTN","XUSRB",28,0)
 I DUZ>0 S XUMSG=$$POST(1)
"RTN","XUSRB",29,0)
 I XUMSG>0 S DUZ=0,VCCH=0 ;If can't sign-on, don't tell need to change VC
"RTN","XUSRB",30,0)
 I 'XUMSG,VCCH S XUMSG=12 D SET^XWBSEC("XUS DUZ",DUZ) ;Need to change VC
"RTN","XUSRB",31,0)
VAX S:XUMSG>0 DUZ=0 ;Can't sign-on, Clear DUZ.
"RTN","XUSRB",32,0)
 D:DUZ>0 POST2
"RTN","XUSRB",33,0)
 S RET(0)=DUZ,RET(1)=XUM,RET(2)=VCCH,RET(3)=$S(XUMSG:$$TXT^XUS3(XUMSG),1:""),RET(4)=0
"RTN","XUSRB",34,0)
 K DUZ("CCOW")
"RTN","XUSRB",35,0)
 Q
"RTN","XUSRB",36,0)
 ;
"RTN","XUSRB",37,0)
NOW S U="^",XUNOW=$$NOW^XLFDT(),DT=$P(XUNOW,".")
"RTN","XUSRB",38,0)
 Q
"RTN","XUSRB",39,0)
 ;
"RTN","XUSRB",40,0)
INTRO(RET) ;Return INTRO TEXT.
"RTN","XUSRB",41,0)
 D INTRO^XUS1A("RET")
"RTN","XUSRB",42,0)
 Q
"RTN","XUSRB",43,0)
 ;
"RTN","XUSRB",44,0)
VCVALID() ;Return 1 if the Verify code needs changing.
"RTN","XUSRB",45,0)
 Q:'$G(DUZ) 1
"RTN","XUSRB",46,0)
 Q:$P($G(^VA(200,DUZ,.1)),U,2)="" 1 ;VC is empty
"RTN","XUSRB",47,0)
 Q:$P(^VA(200,DUZ,0),U,8)=1 0 ;VC never expires
"RTN","XUSRB",48,0)
 N XUSER D USER^XUS(DUZ)
"RTN","XUSRB",49,0)
 Q $$VCHG^XUS1
"RTN","XUSRB",50,0)
 ;
"RTN","XUSRB",51,0)
CVC(RET,XU1) ;change VC, Return 0 = success
"RTN","XUSRB",52,0)
 N XU2,XU3,XU4 S DUZ=$G(DUZ),RET(0)=99,XU4=$$STATE^XWBSEC("XUS DUZ") S:(DUZ=0)&(XU4>0) DUZ=XU4 Q:DUZ'>0
"RTN","XUSRB",53,0)
 S U="^",XU2=$P(XU1,U,2),XU3=$P(XU1,U,3),XU1=$P(XU1,U)
"RTN","XUSRB",54,0)
 S XU1=$$DECRYP^XUSRB1(XU1),XU2=$$DECRYP^XUSRB1(XU2),XU3=$$DECRYP^XUSRB1(XU3)
"RTN","XUSRB",55,0)
 S XU3=$$BRCVC^XUS2(XU1,XU2),RET(0)=+XU3,RET(1)=$P(XU3,U,2,9)
"RTN","XUSRB",56,0)
 I XU3>0 S DUZ=0 ;Clean-up if not changed.
"RTN","XUSRB",57,0)
 I 'XU3,XU4 D KILL^XWBSEC("XUS DUZ"),POST2
"RTN","XUSRB",58,0)
 Q
"RTN","XUSRB",59,0)
 ;
"RTN","XUSRB",60,0)
SHOWPOST() ;EF. Check if should send the POST SIGN-ON msg.
"RTN","XUSRB",61,0)
 Q +$P($G(^XTV(8989.3,1,"XWB")),"^",2)
"RTN","XUSRB",62,0)
 ;
"RTN","XUSRB",63,0)
POST(CVC) ;Finish setup partition, I CVC don't log yet
"RTN","XUSRB",64,0)
 N X,XUM,XUDIV S:$D(IO)[0 IO=$I S IO(0)=IO
"RTN","XUSRB",65,0)
 K ^UTILITY($J),^TMP($J)
"RTN","XUSRB",66,0)
 I '$D(XUSER(0)),DUZ D USER^XUS(DUZ)
"RTN","XUSRB",67,0)
 S XUM=$$USER^XUS1A Q:XUM>0 XUM ;User can't sign on for some reason.
"RTN","XUSRB",68,0)
 S RET(5)=0 ;The next line sends the post sign-on msg
"RTN","XUSRB",69,0)
 F %=1:1 Q:'$D(XUTEXT(%))  S RET(5+%)=$E(XUTEXT(%),2,256),RET(5)=%
"RTN","XUSRB",70,0)
 I '$$SHOWPOST S RET(5)=0 ;This line stops the sending/display of the msg.
"RTN","XUSRB",71,0)
 D:'$G(CVC) POST2
"RTN","XUSRB",72,0)
 Q 0
"RTN","XUSRB",73,0)
 ;
"RTN","XUSRB",74,0)
POST2 D:'$D(XUNOW) NOW
"RTN","XUSRB",75,0)
 D DUZ^XUS1A,SAVE^XUS1,LOG^XUS1,ABT^XQ12
"RTN","XUSRB",76,0)
 D KILL^XWBSEC("XUS XOPT"),CLRFAC^XUS3($G(IO("IP"))) ;p265
"RTN","XUSRB",77,0)
 I $T(SETTIME^XWBTCPC)]"" D SETTIME^XWBTCPC() ;Clear sign-on time-out
"RTN","XUSRB",78,0)
 K:$G(XWBVER)<1.106 XQY,XQY0 ;Delete the sign-on context.
"RTN","XUSRB",79,0)
 K XUTEXT,XOPT,XUEON,XUEOFF,XUTT,XUDEV,XUSER
"RTN","XUSRB",80,0)
 Q
"RTN","XUSRB",81,0)
 ;
"RTN","XUSRB",82,0)
INHIBIT() ;Is Logon to this system Inhibited?
"RTN","XUSRB",83,0)
 I $$INHIB1() Q 1
"RTN","XUSRB",84,0)
 I $$INHIB2() Q 2
"RTN","XUSRB",85,0)
 Q 0
"RTN","XUSRB",86,0)
 ;
"RTN","XUSRB",87,0)
INHIB1() ;The LOGON check
"RTN","XUSRB",88,0)
 I $G(^%ZIS(14.5,"LOGON",XQVOL)) Q 1
"RTN","XUSRB",89,0)
 Q 0
"RTN","XUSRB",90,0)
 ;
"RTN","XUSRB",91,0)
INHIB2() ;The Max User Check
"RTN","XUSRB",92,0)
 I $D(^%ZOSF("ACTJ")) X ^("ACTJ") I $P(XUVOL,U,3),($P(XUVOL,U,3)'>Y) Q 2
"RTN","XUSRB",93,0)
 Q 0
"RTN","XUSRB",94,0)
 ;
"RTN","XUSRB",95,0)
LOGOUT ;Finish logout of user.
"RTN","XUSRB",96,0)
 N XU1
"RTN","XUSRB",97,0)
 D CLEARALL^XWBDRPC(.XU1)
"RTN","XUSRB",98,0)
 ;Remove CCOW sign-on data
"RTN","XUSRB",99,0)
 S HDL=$G(^XUTL("XQ",$J,"HDL")) I $L(HDL) D
"RTN","XUSRB",100,0)
 . K ^XTMP(HDL,"JOB",$J)
"RTN","XUSRB",101,0)
 . I $O(^XTMP(HDL,"JOB",0))="" K ^XTMP(HDL)
"RTN","XUSRB",102,0)
 ;
"RTN","XUSRB",103,0)
 D BYE^XUSCLEAN,XUTL^XUSCLEAN ;Mark the sign-on log, File cleanup.
"RTN","XUSRB",104,0)
 Q
"RTN","XUSRB",105,0)
 ;D1,D2 are place holders for now
"RTN","XUSRB",106,0)
SETUP(RET,XWBUSRNM,ASOSKIP,D2) ;sets up environment for GUI signon
"RTN","XUSRB",107,0)
 K DUZ
"RTN","XUSRB",108,0)
 S XWBUSRNM=$G(XWBUSRNM),ASOSKIP=$G(ASOSKIP)
"RTN","XUSRB",109,0)
 I $L($G(XWBTIP)) S IO("IP")=XWBTIP
"RTN","XUSRB",110,0)
 S IO("CLNM")=$$LOW^XLFSTR($G(XWBCLMAN)) D ZIO^%ZIS4
"RTN","XUSRB",111,0)
 ;Setup needed variables
"RTN","XUSRB",112,0)
 D SET1^XUS(0),SET^XWBSEC("XUS XOPT",XOPT) ;p265
"RTN","XUSRB",113,0)
 ;I '$D(IO("HOME")) S %ZIS="0H",IOP="NULL" D ^%ZIS ;Setup NULL as the home device
"RTN","XUSRB",114,0)
 D SAVE^XUS1 ;save the home device
"RTN","XUSRB",115,0)
 ;0=server name, 1=volume, 2=uci, 3=device, 4=# attempts, 5=skip signon-screen,6=Domain Name, 7=Production (0=no, 1=Yes)
"RTN","XUSRB",116,0)
 S RET(0)=$P(XUENV,U,3),RET(1)=$P(XUVOL,U),RET(2)=XUCI
"RTN","XUSRB",117,0)
 S RET(3)=$I,RET(4)=$P(XOPT,U,2),RET(5)=0
"RTN","XUSRB",118,0)
 S RET(6)=$G(^XMB("NETNAME")) ;DBIA #1131
"RTN","XUSRB",119,0)
 S RET(7)=$$PROD^XUPROD ;Tell if production.
"RTN","XUSRB",120,0)
 I $$INHIBIT() Q
"RTN","XUSRB",121,0)
 ; Code for DBA Capri Type Program
"RTN","XUSRB",122,0)
 I (+XWBUSRNM<-30),$$CHKUSER^XUSBSE1(XWBUSRNM) S RET(5)=1 Q  ; BSE CHANGE
"RTN","XUSRB",123,0)
 ; End of Code for DBA Capri Program
"RTN","XUSRB",124,0)
 ;Auto sign-on check only for Broker v1.1
"RTN","XUSRB",125,0)
 I $G(ASOSKIP) S XQXFLG("ASO")=1 ;Skip the ASO check
"RTN","XUSRB",126,0)
 I $G(XWBVER)<1.1 S XQXFLG("ZEBRA")=-1 ;Disable for v1.0
"RTN","XUSRB",127,0)
 I $L(IO("CLNM")) S DUZ=$$AUTOXWB^XUS1B() ;Only check when 1.1 CL.
"RTN","XUSRB",128,0)
 I DUZ>0 D NOW S XUMSG=$$POST(0) I XUMSG>0 S DUZ=0
"RTN","XUSRB",129,0)
 S:DUZ>0 RET(5)=1
"RTN","XUSRB",130,0)
 Q
"RTN","XUSRB",131,0)
 ;
"RTN","XUSRB",132,0)
OWNSKEY(RET,LIST,IEN) ;Does user have Key
"RTN","XUSRB",133,0)
 N I,K S I=""
"RTN","XUSRB",134,0)
 I $G(IEN)'>0 S IEN=$G(DUZ)
"RTN","XUSRB",135,0)
 I $G(IEN)'>0 S RET(0)=0 Q
"RTN","XUSRB",136,0)
 I $O(LIST(""))="" S RET(0)=$$KCHK(LIST,IEN) Q
"RTN","XUSRB",137,0)
 F  S I=$O(LIST(I)) Q:I=""  S RET(I)=$$KCHK(LIST(I),IEN)
"RTN","XUSRB",138,0)
 Q
"RTN","XUSRB",139,0)
 ;
"RTN","XUSRB",140,0)
KCHK(%,IEN) ;Key Check
"RTN","XUSRB",141,0)
 S:$G(IEN)'>0 IEN=$G(DUZ) Q $S($G(IEN)>0:$D(^XUSEC(%,IEN)),1:0)
"RTN","XUSRB",142,0)
 ;
"RTN","XUSRB",143,0)
ALLKEYS(RET,IEN,FLG) ;Return ALL or most KEYS that a user has.
"RTN","XUSRB",144,0)
 N I,J,K,L K ^TMP("XU",$J)
"RTN","XUSRB",145,0)
 S RET=$NA(^TMP("XU",$J))
"RTN","XUSRB",146,0)
 S:'$D(IEN) IEN=DUZ I IEN'>0 S @RET@(0)=-1 Q
"RTN","XUSRB",147,0)
 S I=0,L=0
"RTN","XUSRB",148,0)
 F  S I=$O(^VA(200,IEN,51,I)) Q:I'>0  S K=$G(^DIC(19.1,I,0)) D
"RTN","XUSRB",149,0)
 . Q:'$P(K,U,5)  ;Check 'Send to J2EE' field.
"RTN","XUSRB",150,0)
 . S L=L+1,@RET@(L,0)=$P(K,U,1)
"RTN","XUSRB",151,0)
 . Q
"RTN","XUSRB",152,0)
 Q
"RTN","XUSRB",153,0)
 ;
"RTN","XUSRB",154,0)
AVHELP(RET) ; send access/verify code instructions.
"RTN","XUSRB",155,0)
 S RET(0)=$$AVHLPTXT^XUS2()
"RTN","XUSRB",156,0)
 Q
"RTN","XUSRB",157,0)
 ;
"RTN","XUSRB",158,0)
OPTACCES(RET,USER,OPTIONS,MODE) ;Checks or sets user's access for passed in options
"RTN","XUSRB",159,0)
 S MODE="CHECK" ;only CHECK mode supported for now
"RTN","XUSRB",160,0)
 N I S I=""
"RTN","XUSRB",161,0)
 I $G(USER)'>0 S RET(0)=0 Q
"RTN","XUSRB",162,0)
 F  S I=$O(OPTIONS(I)) Q:I=""  S RET(I)=$$CHK^XQCS(USER,OPTIONS(I))=1
"RTN","XUSRB",163,0)
 Q
"RTN","XUSRB",164,0)
 ;
"RTN","XUSRB",165,0)
CHECKAV(AVC) ;SR. EF. to check an A/V code, Separate w/ ";", return IEN or 0
"RTN","XUSRB",166,0)
 N XUF,XUSER S XUF=0,U="^"
"RTN","XUSRB",167,0)
 Q $$CHECKAV^XUS(AVC)
"RTN","XUSRB4")
0^4^B12816308^B11538181
"RTN","XUSRB4",1,0)
XUSRB4 ;ISF/RWF - Build a temporary sign-on token ;02/27/2007
"RTN","XUSRB4",2,0)
 ;;8.0;KERNEL;**150,337,395,419,437**;Jul 10, 1995;Build 2
"RTN","XUSRB4",3,0)
 Q
"RTN","XUSRB4",4,0)
 ;
"RTN","XUSRB4",5,0)
ASH(RET) ;rpc. Auto Signon Handle
"RTN","XUSRB4",6,0)
 N HDL
"RTN","XUSRB4",7,0)
 S HDL=$$HANDLE("XWBAS",1),RET="~1"_HDL
"RTN","XUSRB4",8,0)
 ;Now place user info in it.
"RTN","XUSRB4",9,0)
 D TOK(HDL)
"RTN","XUSRB4",10,0)
 Q
"RTN","XUSRB4",11,0)
 ;
"RTN","XUSRB4",12,0)
CCOW(RET) ;rpc. CCOW Auto Signon Handle
"RTN","XUSRB4",13,0)
 N HDL,HDL2,X
"RTN","XUSRB4",14,0)
 S RET(0)="NO PROXY USER",RET(1)="ERROR"
"RTN","XUSRB4",15,0)
 I $$USERTYPE^XUSAP(DUZ,"APPLICATION PROXY") Q  ;No Proxy
"RTN","XUSRB4",16,0)
 I $$USERTYPE^XUSAP(DUZ,"CONNECTOR PROXY") Q  ;No Proxy
"RTN","XUSRB4",17,0)
 S X=$$ACTIVE^XUSER(DUZ) I 'X S RET(0)=X Q  ;User must be active
"RTN","XUSRB4",18,0)
 S HDL=$$HANDLE("XWBCCW",1)
"RTN","XUSRB4",19,0)
 ;Return RET(0) the CCOW token, RET(1) the domain name and the Station #
"RTN","XUSRB4",20,0)
 S RET(0)="~2"_$$LOW^XLFSTR(HDL),RET(1)=$G(^XMB("NETNAME"))_"^"_$$STA^XUAF4(DUZ(2))
"RTN","XUSRB4",21,0)
 ;Now place user info in it.
"RTN","XUSRB4",22,0)
 D TOK(HDL)
"RTN","XUSRB4",23,0)
 S ^XUTL("XQ",$J,"HDL")=HDL ;Save handle with job
"RTN","XUSRB4",24,0)
 Q
"RTN","XUSRB4",25,0)
 ;
"RTN","XUSRB4",26,0)
HANDLE(NS,LT) ;Return a unique handle into ^XTMP (ef. sup)
"RTN","XUSRB4",27,0)
 ;NS is the namespace, LT is the Handle Lifetime in days
"RTN","XUSRB4",28,0)
 N %H,A,J,HL
"RTN","XUSRB4",29,0)
 I $G(NS)="" Q "" ;Return null if no namespace
"RTN","XUSRB4",30,0)
 S LT=$G(LT,1) S:LT>7 LT=7 ;Default to 1
"RTN","XUSRB4",31,0)
 S %H=$H,J=NS_($J#2048)_"-"_(%H#7*86400+$P(%H,",",2))_"_",A=$R(10)
"RTN","XUSRB4",32,0)
 F  S HL=J_A,A=A+1 L +^XTMP(HL):1 I $T Q:'$D(^XTMP(HL))  L -^XTMP(HL)
"RTN","XUSRB4",33,0)
 S ^XTMP(HL,0)=$$HTFM^XLFDT(%H+LT)_"^"_$$DT^XLFDT()
"RTN","XUSRB4",34,0)
 L -^XTMP(HL)
"RTN","XUSRB4",35,0)
 Q HL
"RTN","XUSRB4",36,0)
 ;
"RTN","XUSRB4",37,0)
TOK(H) ;Store a Token
"RTN","XUSRB4",38,0)
 ;H is handle into XTMP
"RTN","XUSRB4",39,0)
 N J,T,R
"RTN","XUSRB4",40,0)
 S T=$$H3^%ZTM($H)
"RTN","XUSRB4",41,0)
 S R=$J_"|"_T_"|"_$G(DUZ)_"|"_H
"RTN","XUSRB4",42,0)
 S ^XTMP(H,"D",0)="|"_$$ENCRYP^XUSRB1(R)_"|"
"RTN","XUSRB4",43,0)
 S ^XTMP(H,"D2")=$G(DUZ(2))
"RTN","XUSRB4",44,0)
 S %=$G(IO("IP")) I $L(%),%'?1.3N1P1.3N1P1.3N1P1.3N S %=$P($$ADDRESS^XLFNSLK(%),",")
"RTN","XUSRB4",45,0)
 S ^XTMP(H,"D3")=%
"RTN","XUSRB4",46,0)
 S ^XTMP(H,"JOB",$J)=$G(IO("IP"))
"RTN","XUSRB4",47,0)
 S ^XTMP(H,"STATUS")="0^New",^("CNT")=0
"RTN","XUSRB4",48,0)
 Q
"RTN","XUSRB4",49,0)
 ;
"RTN","XUSRB4",50,0)
CHKASH(HL) ;rpc. Check a Auto Signon Handle
"RTN","XUSRB4",51,0)
 N HDL,RET,FDA,IEN S HDL=$E(HL,3,999)
"RTN","XUSRB4",52,0)
 S RET=$$CHECK(HDL)
"RTN","XUSRB4",53,0)
 I RET>0 D
"RTN","XUSRB4",54,0)
 . S DUZ("ASH")=1,IEN=DUZ_","
"RTN","XUSRB4",55,0)
 . I $$GET1^DIQ(200,IEN,7,"I") S FDA(200,DUZ_",",7)=0 D FILE^DIE("K","FDA") ;rwf 403
"RTN","XUSRB4",56,0)
 K ^XTMP(HDL) ;Token only good for one try.
"RTN","XUSRB4",57,0)
 Q RET
"RTN","XUSRB4",58,0)
 ;
"RTN","XUSRB4",59,0)
CHKCCOW(HL) ;rpc. Check a CCOW Auto Signon Handle
"RTN","XUSRB4",60,0)
 N HDL,RET,T
"RTN","XUSRB4",61,0)
 S HDL=$$UP^XLFSTR($E(HL,3,999)),T=$P($G(^XTV(8989.3,1,30),5400),U)
"RTN","XUSRB4",62,0)
 S RET=$$CHECK(HDL,T)
"RTN","XUSRB4",63,0)
 I RET>0 D
"RTN","XUSRB4",64,0)
 . ;This CCOW Token good for more that one try.
"RTN","XUSRB4",65,0)
 . S ^XTMP(HDL,"JOB",$J)=$G(IO("IP"))
"RTN","XUSRB4",66,0)
 . S ^XTMP(HDL,"STATUS")=(^XTMP(HDL,"STATUS")+1)_"^Active"
"RTN","XUSRB4",67,0)
 . S ^XUTL("XQ",$J,"HDL")=HDL ;Save handle with job
"RTN","XUSRB4",68,0)
 . S DUZ("CCOW")=1 ;Flag a CCOW sign-on.
"RTN","XUSRB4",69,0)
 Q RET
"RTN","XUSRB4",70,0)
 ;
"RTN","XUSRB4",71,0)
CHECK(HL,TOUT) ;Check a Token
"RTN","XUSRB4",72,0)
 N %,J,D,L,M,S,T
"RTN","XUSRB4",73,0)
 S S=$G(^XTMP(HL,0)) I '$L(S) Q "0^Bad Handle"
"RTN","XUSRB4",74,0)
 S S=$G(^XTMP(HL,"D",0)) I '$L(S) Q "0^Bad Handle" ;Now have real token
"RTN","XUSRB4",75,0)
 I $E(S)'="|" Q "0^Bad Token"
"RTN","XUSRB4",76,0)
 S S=$$DECRYP^XUSRB1($E(S,2,$L(S)-1)) I S="" Q "0^Bad Token"
"RTN","XUSRB4",77,0)
 S J=$P(S,"|"),T=$P(S,"|",2),D=$P(S,"|",3),M=$P(S,"|",4)
"RTN","XUSRB4",78,0)
 ;Check token time
"RTN","XUSRB4",79,0)
 S %=$$H3^%ZTM($H),TOUT=$G(TOUT,20)
"RTN","XUSRB4",80,0)
 I T+TOUT<% Q "0^Token Expired" ;Token good for TOUT or 20 seconds
"RTN","XUSRB4",81,0)
 ;Check job
"RTN","XUSRB4",82,0)
 ;Check that token has handle
"RTN","XUSRB4",83,0)
 I M'=HL Q "0^Bad Token"
"RTN","XUSRB4",84,0)
 ;Check User
"RTN","XUSRB4",85,0)
 I $G(^VA(200,D,0))="" Q "0^Bad User"
"RTN","XUSRB4",86,0)
 ;Do IP check
"RTN","XUSRB4",87,0)
 S %=$G(IO("IP")) I $L(%),%'?1.3N1P1.3N1P1.3N1P1.3N S %=$P($$ADDRESS^XLFNSLK(%),",")
"RTN","XUSRB4",88,0)
 I $L($G(^XTMP(HL,"D3"))),^XTMP(HL,"D3")'=% Q "0^Different IP"
"RTN","XUSRB4",89,0)
 I $D(^XTMP(HL,"D2")),D>0 S DUZ(2)=^XTMP(HL,"D2")
"RTN","XUSRB4",90,0)
 D USER^XUS(D)
"RTN","XUSRB4",91,0)
 Q D
"RTN","XUSRB4",92,0)
 ;
"RTN","XUSRB4",93,0)
 ;
"RTN","XUSRB4",94,0)
CCOWPC(RET) ;Return ap
"RTN","XUSRB4",95,0)
 N I,XU4
"RTN","XUSRB4",96,0)
 S RET(0)="" I '$$BROKER^XWBLIB Q
"RTN","XUSRB4",97,0)
 D GETLST^XPAR(.XU4,"SYS","XUS CCOW VAULT PARAM","Q")
"RTN","XUSRB4",98,0)
 F I=0,1 S RET(I)=$P($G(XU4(I+1)),"^",2,99)
"RTN","XUSRB4",99,0)
 Q
"VER")
8.0^22.0
"^DD",44,44,22900,0)
AUTOFINISH RX SITE^P59'^PS(59,^AFRXSITE;1^Q
"^DD",44,44,22900,3)
Enter outpatient site this location is associated with.
"^DD",44,44,22900,21,0)
^^3^3^3070502^
"^DD",44,44,22900,21,1,0)
This field is a pointer to File#59, Outpatient Site, that this hospital 
"^DD",44,44,22900,21,2,0)
location is associated with.  If this field is not set autofinishing of 
"^DD",44,44,22900,21,3,0)
Rx's for this hospital location will not take place.
"^DD",44,44,22900,"DT")
3070502
"^DD",44,44,22901,0)
AUTOFINISH CLINIC PRINTER^P3.5'^%ZIS(1,^AFRXCLINPRNT;1^Q
"^DD",44,44,22901,3)
Enter printer where autofinished Rx's for this clinic will be printed.
"^DD",44,44,22901,21,0)
^^1^1^3070502^
"^DD",44,44,22901,21,1,0)
Printer where autofinished Rx's will print for a particular clinic.
"^DD",44,44,22901,"DT")
3070502
"BLD",975,6)
^368
**END**
**END**
