Released DG*5.3*626 SEQ #553
Extracted from mail message
**KIDS**:DG*5.3*626^

**INSTALL NAME**
DG*5.3*626
"BLD",5363,0)
DG*5.3*626^REGISTRATION^0^3050118^y
"BLD",5363,4,0)
^9.64PA^^
"BLD",5363,"KRN",0)
^9.67PA^8989.52^19
"BLD",5363,"KRN",.4,0)
.4
"BLD",5363,"KRN",.401,0)
.401
"BLD",5363,"KRN",.402,0)
.402
"BLD",5363,"KRN",.403,0)
.403
"BLD",5363,"KRN",.5,0)
.5
"BLD",5363,"KRN",.84,0)
.84
"BLD",5363,"KRN",3.6,0)
3.6
"BLD",5363,"KRN",3.8,0)
3.8
"BLD",5363,"KRN",9.2,0)
9.2
"BLD",5363,"KRN",9.8,0)
9.8
"BLD",5363,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",5363,"KRN",9.8,"NM",1,0)
DGRPDT^^0^B49558820
"BLD",5363,"KRN",9.8,"NM",2,0)
DGRPMS^^0^B35311964
"BLD",5363,"KRN",9.8,"NM",3,0)
DGRPE^^0^B45803352
"BLD",5363,"KRN",9.8,"NM",4,0)
DGRPCE^^0^B28667064
"BLD",5363,"KRN",9.8,"NM","B","DGRPCE",4)

"BLD",5363,"KRN",9.8,"NM","B","DGRPDT",1)

"BLD",5363,"KRN",9.8,"NM","B","DGRPE",3)

"BLD",5363,"KRN",9.8,"NM","B","DGRPMS",2)

"BLD",5363,"KRN",19,0)
19
"BLD",5363,"KRN",19.1,0)
19.1
"BLD",5363,"KRN",101,0)
101
"BLD",5363,"KRN",409.61,0)
409.61
"BLD",5363,"KRN",771,0)
771
"BLD",5363,"KRN",870,0)
870
"BLD",5363,"KRN",8989.51,0)
8989.51
"BLD",5363,"KRN",8989.52,0)
8989.52
"BLD",5363,"KRN",8994,0)
8994
"BLD",5363,"KRN","B",.4,.4)

"BLD",5363,"KRN","B",.401,.401)

"BLD",5363,"KRN","B",.402,.402)

"BLD",5363,"KRN","B",.403,.403)

"BLD",5363,"KRN","B",.5,.5)

"BLD",5363,"KRN","B",.84,.84)

"BLD",5363,"KRN","B",3.6,3.6)

"BLD",5363,"KRN","B",3.8,3.8)

"BLD",5363,"KRN","B",9.2,9.2)

"BLD",5363,"KRN","B",9.8,9.8)

"BLD",5363,"KRN","B",19,19)

"BLD",5363,"KRN","B",19.1,19.1)

"BLD",5363,"KRN","B",101,101)

"BLD",5363,"KRN","B",409.61,409.61)

"BLD",5363,"KRN","B",771,771)

"BLD",5363,"KRN","B",870,870)

"BLD",5363,"KRN","B",8989.51,8989.51)

"BLD",5363,"KRN","B",8989.52,8989.52)

"BLD",5363,"KRN","B",8994,8994)

"BLD",5363,"QUES",0)
^9.62^^
"BLD",5363,"REQB",0)
^9.611^2^2
"BLD",5363,"REQB",1,0)
DG*5.3*451^2
"BLD",5363,"REQB",2,0)
DG*5.3*603^2
"BLD",5363,"REQB","B","DG*5.3*451",1)

"BLD",5363,"REQB","B","DG*5.3*603",2)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
626^3050118
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","DGRPCE")
0^4^B28667064
"RTN","DGRPCE",1,0)
DGRPCE ;ALB/MRL,KV,PJR,BRM - CONSISTENCY CHECKER, EDIT INCONSISTENCIES ; 12/14/04 9:42am
"RTN","DGRPCE",2,0)
 ;;5.3;Registration;**121,122,175,297,342,451,626**;Aug 13, 1993
"RTN","DGRPCE",3,0)
 ;
"RTN","DGRPCE",4,0)
 ;KV;11/15/00;DG*5.3*297;Disable addition of CD Elig Code in Reg. Screens
"RTN","DGRPCE",5,0)
 ;                      ;Adding CD Elig Codes in Load/Edit Screen used to
"RTN","DGRPCE",6,0)
 ;                      ;cause undefined line tag error.
"RTN","DGRPCE",7,0)
 ;
"RTN","DGRPCE",8,0)
 S DGVTYN=$P($G(^DPT(DFN,"VET")),"^",1),DGDR="DR",(DR,DGD,DGDRC,DGCCF)="",DGASK=",",DGER=","_DGER D ^DGRPCE1
"RTN","DGRPCE",9,0)
 S DGEK=0 F I=9,10,11,12,13,14,18,19,20,22,24,36,51 Q:DGEK  I DGER[(","_I_",") S DGEK=1 Q
"RTN","DGRPCE",10,0)
 I 'DGKEY(1) D:DGEK ELDR S I=15 D SASK S I=23 D SASK
"RTN","DGRPCE",11,0)
 F I=29,30,31,32,33,43,44,45,48,56 D SASK,MON:DGCCF S DGCCF=0
"RTN","DGRPCE",12,0)
 G NKEY:DGKEY(3) F I=25,26,27,28,34,35 D SASK
"RTN","DGRPCE",13,0)
 I DGASK'[26 F I=41,42 I DGASK'[41 D SASK
"RTN","DGRPCE",14,0)
 I DGASK'[27 S I=60 I DGASK'[25 D SASK
"RTN","DGRPCE",15,0)
 I DGASK'[34 F I=37,38 I DGASK'[37 D SASK
"RTN","DGRPCE",16,0)
 I DGASK'[35 F I=39,40 I DGASK'[39 D SASK
"RTN","DGRPCE",17,0)
NKEY D ^DGRPCE1
"RTN","DGRPCE",18,0)
 I $S(DGER[49:1,(DGER[50):1,(DGER[52):1,1:0) D
"RTN","DGRPCE",19,0)
 .I $G(DGPRFLG) D PREG^IBCNBME(DFN) Q
"RTN","DGRPCE",20,0)
 .D REG^IBCNBME(DFN)
"RTN","DGRPCE",21,0)
 .Q
"RTN","DGRPCE",22,0)
 D Q S DIE="^DPT(",(DA,Y)=DFN D ^DIE:$D(DR)
"RTN","DGRPCE",23,0)
 I DGER[54 D GETREL^DGMTU11(DFN,"SD",$$LYR^DGMTSCU1(DT)) D
"RTN","DGRPCE",24,0)
 . I $D(DGREL("S")),($$SSN^DGMTU1(+DGREL("S"))']"") D ASKSSN(DGREL("S"))
"RTN","DGRPCE",25,0)
 . F DGDEP=0:0 S DGDEP=$O(DGREL("D",DGDEP)) Q:'DGDEP  I $$SSN^DGMTU1(+DGREL("D",DGDEP))']"" D ASKSSN(DGREL("D",DGDEP))
"RTN","DGRPCE",26,0)
 ;
"RTN","DGRPCE",27,0)
 I DGER[59 D CATDIB
"RTN","DGRPCE",28,0)
 ;
"RTN","DGRPCE",29,0)
 K DGREL,DGDEP
"RTN","DGRPCE",30,0)
KVAR K DR,DGEDCN,DGCT,DGER,DGINC55,DGRPADI,DGRPOUT,DGVTYN
"RTN","DGRPCE",31,0)
Q K %,C,DA,DGASK,DGCCF,DGCT1,DGCT2,DGCT3,DGD,DGD1,DGD2,DGDR,DGDRC,DGECODE,DGEDIT,DGEK,DGKEY,DGP,DGRPADI,DGRPE,DIC,DIE,DIK,I,I1,J,X,X1,X2
"RTN","DGRPCE",32,0)
 K DGCOMLOC,DGCOMBR,FRDT,DGFRDT
"RTN","DGRPCE",33,0)
 D KVAR^VADPT
"RTN","DGRPCE",34,0)
 Q
"RTN","DGRPCE",35,0)
SASK I DGER[(","_I_","),DGASK'[(","_I_",") S DGD=$P($T(@I),";;",2,999),DGASK=DGASK_I_",",DGCCF=1 D SAVE
"RTN","DGRPCE",36,0)
 Q
"RTN","DGRPCE",37,0)
SAVE I $L(@DGDR)+$L(DGD)<241 S @DGDR=@DGDR_DGD,DGD="" Q
"RTN","DGRPCE",38,0)
 S DGDRC=DGDRC+1,DGDR="DR(1,2,"_DGDRC_")",@DGDR=DGD,DGD="" Q
"RTN","DGRPCE",39,0)
ELDR S DGASK=DGASK_"9,10,11,12,13,14,18,19,20,24,29,30,31,34,36,37,38,"
"RTN","DGRPCE",40,0)
 I 'DGKEY(1) S DGD="391;1901;S DGVTYN=$S($D(^DPT(DFN,""VET"")):$P(^(""VET""),""^"",1),1:"""");S:X'=""Y"" Y=""@1"";.301;S:X'=""Y"" Y=""@1"";.302;@1;" D SAVE
"RTN","DGRPCE",41,0)
 I 'DGKEY(2) F I=29,30,31 S DGD=$P($T(@I),";;",2,999) D SAVE
"RTN","DGRPCE",42,0)
 D:DGD]"" SAVE I 'DGKEY(3) S DGD=$P($T(34),";;",2,999) D SAVE S DGD=$P($T(51),";;",2,999) D SAVE
"RTN","DGRPCE",43,0)
 I 'DGKEY(1) D ELIG^DGRPCE1
"RTN","DGRPCE",44,0)
 Q
"RTN","DGRPCE",45,0)
MON I $S(I<40:1,I=56:1,1:0) D SAVE Q
"RTN","DGRPCE",46,0)
 I $S(I<46:1,1:0),DGASK'[(","_(I-14)_",") D SAVE Q
"RTN","DGRPCE",47,0)
 I DGASK'[(","_(I-15)_",") D SAVE
"RTN","DGRPCE",48,0)
 Q
"RTN","DGRPCE",49,0)
 ;
"RTN","DGRPCE",50,0)
15 ;;.152;S:X']"" Y="@15";S DIE("NO^")="";.307;I X']"" W !!,*7,"But I need a reason why this applicant is ineligible!" S Y=.152;@15;K DIE("NO^");
"RTN","DGRPCE",51,0)
23 ;;.3611;S:X'="V" Y="@23";.3612;S DIE("NO^")="";I X']"" W !!,*7,"But I need to know the date eligibility was verifed!";@23;K DIE("NO^");
"RTN","DGRPCE",52,0)
25 ;;.323;.32102;S:X'="Y" Y="@25";.32107;.3211;.32109;.3213;@25;
"RTN","DGRPCE",53,0)
26 ;;
"RTN","DGRPCE",54,0)
27 ;;
"RTN","DGRPCE",55,0)
28 ;;
"RTN","DGRPCE",56,0)
29 ;;.36205;S:X'="Y" Y="@29";I DGVTYN'="Y" W !,"Patient not a veteran-can't claim A&A" S Y=.36205;.36295;@29;
"RTN","DGRPCE",57,0)
30 ;;.36215;S:X'="Y" Y="@30";I DGVTYN'="Y" W !,"Patient not a veteran-can't claim HOUSEBOUND" S Y=.36215;.36295;@30;
"RTN","DGRPCE",58,0)
31 ;;.36235;S:X'="Y" Y="@31";I DGVTYN'="Y" W !,"Patient not a veteran-can't claim VA PENSION" S Y=.36235;.36295;@31;
"RTN","DGRPCE",59,0)
32 ;;.36255;S:X'="Y" Y="@32";I DGVTYN'="Y" W !,"Patient not a veteran-can't claim MIL. RET." S Y=.36255;.3625;@32;
"RTN","DGRPCE",60,0)
33 ;;
"RTN","DGRPCE",61,0)
34 ;;.525;S:X'="Y" Y="@34";I DGVTYN'="Y" W !,"Patient not a veteran-can't claim POW STATUS" S Y=.525;.526:.528;@34;
"RTN","DGRPCE",62,0)
35 ;;
"RTN","DGRPCE",63,0)
37 ;;.525;S:X'="Y" Y="@37";.526:.528;@37;
"RTN","DGRPCE",64,0)
38 ;;.525;S:X'="Y" Y="@38";.526:.528;@38;
"RTN","DGRPCE",65,0)
39 ;;.5291;S:X'="Y" Y="@39";.5292:.5294;@39;
"RTN","DGRPCE",66,0)
40 ;;.5291;S:X'="Y" Y="@40";.5292:.5294;@40;
"RTN","DGRPCE",67,0)
41 ;;.32101;S:X'="Y" Y="@41";.32104;.32105;@41;
"RTN","DGRPCE",68,0)
42 ;;.32101;S:X'="Y" Y="@42";.32104;.32105;@42;
"RTN","DGRPCE",69,0)
43 ;;
"RTN","DGRPCE",70,0)
44 ;;
"RTN","DGRPCE",71,0)
45 ;;
"RTN","DGRPCE",72,0)
46 ;;
"RTN","DGRPCE",73,0)
47 ;;
"RTN","DGRPCE",74,0)
48 ;;.36265;S:X'="Y" Y="@48";.3626;@48;
"RTN","DGRPCE",75,0)
51 ;;I DGVTYN'="Y" S Y="@51";.324:.328;@51;
"RTN","DGRPCE",76,0)
56 ;;.3025;S:X'="Y" Y="@56";.36295;@56;
"RTN","DGRPCE",77,0)
60 ;;.32102;S:X'="Y" Y="@60";.32107;.3211;.32109;.3213;@60;
"RTN","DGRPCE",78,0)
 ;
"RTN","DGRPCE",79,0)
 ; NOTE: #46 & 47 REMOVED WITH PIMS5.3
"RTN","DGRPCE",80,0)
 ;
"RTN","DGRPCE",81,0)
ASKSSN(DEP) ;edit ssns if missing
"RTN","DGRPCE",82,0)
 ;
"RTN","DGRPCE",83,0)
 ; input:  DEP as string for dependent (from GETREL)
"RTN","DGRPCE",84,0)
 ;
"RTN","DGRPCE",85,0)
 W !,$$NAME^DGMTU1(+DEP)
"RTN","DGRPCE",86,0)
 S DA=+$P(DEP,"^",2),DIE="^DGPR(408.13,",DR=.09 D ^DIE
"RTN","DGRPCE",87,0)
 K DA,DR,DIE
"RTN","DGRPCE",88,0)
 Q
"RTN","DGRPCE",89,0)
 ;
"RTN","DGRPCE",90,0)
CATDIB ;
"RTN","DGRPCE",91,0)
 ;Could be inconsistent because there is the catastrophic disability
"RTN","DGRPCE",92,0)
 ;code without supporting information, or visa versa
"RTN","DGRPCE",93,0)
 ;
"RTN","DGRPCE",94,0)
 N DGCDIS,CODE,INFO
"RTN","DGRPCE",95,0)
 S (INFO,CODE)=0
"RTN","DGRPCE",96,0)
 I $$GET^DGENCDA(DFN,.DGCDIS),DGCDIS("DATE") S INFO=1
"RTN","DGRPCE",97,0)
 S CODE=$$HASCAT^DGENCDA(DFN)
"RTN","DGRPCE",98,0)
 I CODE D  Q
"RTN","DGRPCE",99,0)
 .W !!,">>> Catastrophically Disabled eligibilty requires additional information <<<"
"RTN","DGRPCE",100,0)
 .D EDITCD^DGENCD(DFN)
"RTN","DGRPCE",101,0)
 I INFO D
"RTN","DGRPCE",102,0)
 . ;KV;11/15/00;DG*5.3*297;Start of modifications
"RTN","DGRPCE",103,0)
 . W !!,"The patient record indicates that a  determination was made "
"RTN","DGRPCE",104,0)
 . W "that the patient",!,"is catastrophically disabled."
"RTN","DGRPCE",105,0)
 . W !!,"To add Catastrophic Disability Eligibility Code(s), please use "
"RTN","DGRPCE",106,0)
 . W "the menu option",!,"DGEN PATIENT ENROLLMENT.",!!
"RTN","DGRPCE",107,0)
 .I $$ASKDEL() D
"RTN","DGRPCE",108,0)
 .. I $$DELETE^DGENCDA1(DFN) D
"RTN","DGRPCE",109,0)
 ...W !,">>> Determination Deleted <<<"
"RTN","DGRPCE",110,0)
 ..;
"RTN","DGRPCE",111,0)
 ..;could fail if lock could not be obtained
"RTN","DGRPCE",112,0)
 ..E  W !,"Catastrophic disability determination can not be deleted at this time.",!,"Please try again later."
"RTN","DGRPCE",113,0)
 ;KV;11/15/00;DG*5.3*297;End of modifications
"RTN","DGRPCE",114,0)
 Q
"RTN","DGRPCE",115,0)
 ;
"RTN","DGRPCE",116,0)
ASKDEL() ;
"RTN","DGRPCE",117,0)
 ;ask whether to delete catastrphic disability determination
"RTN","DGRPCE",118,0)
 N DIR
"RTN","DGRPCE",119,0)
 S DIR(0)="Y"
"RTN","DGRPCE",120,0)
 ;KV;11/15/00;DG*5.3*297;Cosmetic change for DIR("A")
"RTN","DGRPCE",121,0)
 S DIR("A")="Do you want to delete the determination showing that patient is catastrophically disabled"
"RTN","DGRPCE",122,0)
 S DIR("B")="YES"
"RTN","DGRPCE",123,0)
 D ^DIR
"RTN","DGRPCE",124,0)
 Q:$D(DIRUT) 0
"RTN","DGRPCE",125,0)
 Q $S(Y=1:1,1:0)
"RTN","DGRPDT")
0^1^B49558820
"RTN","DGRPDT",1,0)
DGRPDT ;ALB/BRM - MILITARY SERVICE DATE UTILITIES ; 1/18/05 4:27pm
"RTN","DGRPDT",2,0)
 ;;5.3;Registration;**562,603,626**;Aug 13, 1993
"RTN","DGRPDT",3,0)
 ;
"RTN","DGRPDT",4,0)
DTUTIL(DGNEWDT,DGOLDDT,MYFLG) ; Date precision comparision API
"RTN","DGRPDT",5,0)
 S:$G(DGOLDDT)="" DGOLDDT="0000000"
"RTN","DGRPDT",6,0)
 Q:'$$VALID(.DGNEWDT) "0^INVALID DATE PARAMETER"
"RTN","DGRPDT",7,0)
 I $L(DGOLDDT)<7 S DGOLDDT=DGOLDDT_$E("0000000",$L(DGOLDDT)+1,7)
"RTN","DGRPDT",8,0)
 N X,Y,EXACTO,EXACTN,I,RTN,MSDATE,MSG
"RTN","DGRPDT",9,0)
 S RTN="",EXACTO=$$CHKEXC(DGOLDDT),EXACTN=$$CHKEXC(DGNEWDT)
"RTN","DGRPDT",10,0)
 I $G(MYFLG) Q:'$$MNTHYR(DGNEWDT) "0^Date must contain month and year"
"RTN","DGRPDT",11,0)
 Q:EXACTO=EXACTN "1^Same Precision"
"RTN","DGRPDT",12,0)
 F I=1:1:3  Q:RTN'=""  D
"RTN","DGRPDT",13,0)
 .S:$E(EXACTN,I)<$E(EXACTO,I) RTN="0^ is Less Precise Than Previously Entered "
"RTN","DGRPDT",14,0)
 .S:$E(EXACTN,I)>$E(EXACTO,I) RTN="1^ is More Precise Than Previously Entered "
"RTN","DGRPDT",15,0)
 .S MSG=$S(I=1:"Year",I=2:"Month",I=3:"Day",1:"")
"RTN","DGRPDT",16,0)
 .S:RTN'="" $P(RTN,"^",2)=MSG_$P(RTN,"^",2)_MSG
"RTN","DGRPDT",17,0)
 Q $S($G(RTN)'="":RTN,1:"0^Unknown Precision")
"RTN","DGRPDT",18,0)
CHKEXC(MSDATE) ; construct precision string (3 digit return value - YMD)
"RTN","DGRPDT",19,0)
 Q ($E(MSDATE,1,3)'="000")_($E(MSDATE,4,5)'="00")_($E(MSDATE,6,7)'="00")
"RTN","DGRPDT",20,0)
MNTHYR(MSDATE) ; ensure month and year are not imprecise (binary return value)
"RTN","DGRPDT",21,0)
 Q ($E(MSDATE,1,3)'="000")&($E(MSDATE,4,5)'="00")
"RTN","DGRPDT",22,0)
WITHIN(FRDT,TODT,CHKDT) ; is CHKDT within FRDT and TODT?
"RTN","DGRPDT",23,0)
 N DGRPB41,DGRPB42
"RTN","DGRPDT",24,0)
 Q:'$$VALID($G(CHKDT)) "0^Invalid Date"
"RTN","DGRPDT",25,0)
 Q:('$G(FRDT))!('$G(TODT)) "0^Missing Required Date Range"
"RTN","DGRPDT",26,0)
 Q:('$$VALID(FRDT)!'$$VALID(TODT)!'$$B4(FRDT,TODT,1)) "0^Invalid Date Range"
"RTN","DGRPDT",27,0)
 S DGRPB41=$$B4(FRDT,CHKDT,1),DGRPB42=$$B4(CHKDT,TODT,1)
"RTN","DGRPDT",28,0)
 I 'DGRPB41!'DGRPB42 Q "0^Not Within Valid Date Range"
"RTN","DGRPDT",29,0)
 Q "1^Date is Within Date Range"_$S($P(DGRPB41,"^",2):"^1",$P(DGRPB42,"^",2):"^1",1:"")  ;add same flag if they are the same
"RTN","DGRPDT",30,0)
VALID(DATE) ; is this a valid Fileman date? (limits are from FR^XLFDT)
"RTN","DGRPDT",31,0)
 Q:'$D(DATE) 0
"RTN","DGRPDT",32,0)
 Q (1410102'>DATE)&(DATE'>4141015.235959)
"RTN","DGRPDT",33,0)
B4(DATE1,DATE2,SAME) ;is DATE1 before DATE2?
"RTN","DGRPDT",34,0)
 N IMPRDT,IDT,IRTN,CDATE1,CDATE2
"RTN","DGRPDT",35,0)
 S DATE1=$P($G(DATE1),"."),DATE2=$P($G(DATE2),".")
"RTN","DGRPDT",36,0)
 Q:DATE1=""!DATE2="" 1
"RTN","DGRPDT",37,0)
 I $G(SAME),DATE1=DATE2 Q "1^1"
"RTN","DGRPDT",38,0)
 I $$CHKEXC(DATE1)'=111!$$CHKEXC(DATE2)'=111 D  Q:$G(IRTN) IRTN
"RTN","DGRPDT",39,0)
 .S (CDATE1,CDATE2)="0000000"
"RTN","DGRPDT",40,0)
 .I $E(DATE1,1,3),$E(DATE2,1,3) F I=1:1:2 S $E(@("CDATE"_I),1,3)=$E(@("DATE"_I),1,3)
"RTN","DGRPDT",41,0)
 .I $E(DATE1,4,5),$E(DATE2,4,5) F I=1:1:2 S $E(@("CDATE"_I),4,5)=$E(@("DATE"_I),4,5)
"RTN","DGRPDT",42,0)
 .I $E(DATE1,6,7),$E(DATE2,6,7) F I=1:1:2 S $E(@("CDATE"_I),6,7)=$E(@("DATE"_I),6,7)
"RTN","DGRPDT",43,0)
 .I CDATE1<CDATE2 S IRTN=1 Q
"RTN","DGRPDT",44,0)
 .I CDATE1=CDATE2 S IRTN="1^1" Q
"RTN","DGRPDT",45,0)
 Q DATE1<DATE2
"RTN","DGRPDT",46,0)
RWITHIN(FRDT,TODT,CHKDT1,CHKDT2) ;are CHKDT1 and CHKDT2 within FRDT and TODT?
"RTN","DGRPDT",47,0)
 N CHK1,CHK2
"RTN","DGRPDT",48,0)
 S CHK1=$$WITHIN(.FRDT,.TODT,.CHKDT1) Q:'CHK1 CHK1
"RTN","DGRPDT",49,0)
 S CHK2=$$WITHIN(.FRDT,.TODT,.CHKDT2) Q:'CHK2 CHK2
"RTN","DGRPDT",50,0)
 Q "1^Both Date are Within Date Range"_$S(($P(CHK1,"^",3)!$P(CHK2,"^",3)):"^1",1:"")
"RTN","DGRPDT",51,0)
COVRLP2(DFN,FRDT,TODT,IGNORE) ; check conflict with type 0 and 2 (see below)
"RTN","DGRPDT",52,0)
 Q:('$G(DFN))!('$D(^DPT(DFN))) "0^INVALID DFN"
"RTN","DGRPDT",53,0)
 S RTN=$$OVRLPCHK(DFN,.FRDT,.TODT,-1,$G(IGNORE))
"RTN","DGRPDT",54,0)
 Q:$P(RTN,"^")=0 RTN
"RTN","DGRPDT",55,0)
 S RTN=$$OVRLPCHK(DFN,.FRDT,.TODT,2,$G(IGNORE))
"RTN","DGRPDT",56,0)
 Q RTN
"RTN","DGRPDT",57,0)
OVRLPCHK(DFN,FRDT,TODT,TYPE,IGNORE) ;check for overlapping date ranges
"RTN","DGRPDT",58,0)
 N RTN1,DATA,NODE,RTN,FRDT1,MSG,SUBRNG,TODT1,DGW1,DGW2,DGRW1,DGRW2
"RTN","DGRPDT",59,0)
 Q:('$G(DFN))!('$D(^DPT(DFN))) "0^INVALID DFN"
"RTN","DGRPDT",60,0)
 I TYPE<2 S NODE(.32)=".326,.327,.3285,.3292,.3293,.32945,.3297,.3298"
"RTN","DGRPDT",61,0)
 E  S NODE(.321)=".32104,.32105",NODE(.322)=".3222,.3223,.3225,.3226,.3228,.3229,.322011,.322012,.322017,.322018,.32202,.322021",NODE(.52)=".5293,.5294"
"RTN","DGRPDT",62,0)
 D:$G(IGNORE)]"" IGNORE(.NODE,.IGNORE)
"RTN","DGRPDT",63,0)
 D GETDAT(DFN,.NODE,.DATA) Q:'$D(DATA) "1^CANNOT FIND PATIENT DATA"
"RTN","DGRPDT",64,0)
 Q:TYPE<0 $$MSEONLY(.DATA,FRDT,TODT)
"RTN","DGRPDT",65,0)
 S SUBRNG="" F  S SUBRNG=$O(DATA(SUBRNG)) Q:SUBRNG=""!($D(RTN))  D
"RTN","DGRPDT",66,0)
 .S FRDT1=$P(DATA(SUBRNG),"^"),TODT1=$P(DATA(SUBRNG),"^",2)
"RTN","DGRPDT",67,0)
 .I FRDT1="",TODT1="" Q
"RTN","DGRPDT",68,0)
 .I 'TYPE S:$$RWITHIN(FRDT1,TODT1,.FRDT,.TODT) RTN1=$G(RTN1)+1 Q
"RTN","DGRPDT",69,0)
 .S MSG=$S(TYPE=1:"Military Service Episode",1:"Conflict")
"RTN","DGRPDT",70,0)
 .S DGW1=$$WITHIN(FRDT1,TODT1,.FRDT),DGW2=$$WITHIN(FRDT1,TODT1,.TODT)
"RTN","DGRPDT",71,0)
 .I DGW1,'$P(DGW1,"^",3) S RTN="0^This "_MSG_" overlaps with another "_MSG
"RTN","DGRPDT",72,0)
 .I DGW2,'$P(DGW2,"^",3) S RTN="0^This "_MSG_" overlaps with another "_MSG
"RTN","DGRPDT",73,0)
 .S DGRW1=$$RWITHIN(FRDT1,TODT1,.FRDT,.TODT),DGRW2=$$RWITHIN(.FRDT,.TODT,FRDT1,TODT1)
"RTN","DGRPDT",74,0)
 .I DGRW1,'$$SAME(FRDT1,TODT1,FRDT,TODT) S RTN="0^This "_MSG_" is within another "_MSG
"RTN","DGRPDT",75,0)
 .I DGRW2,'$$SAME(FRDT1,TODT1,FRDT,TODT) S RTN="0^Another "_MSG_" is within this "_MSG
"RTN","DGRPDT",76,0)
 I ('TYPE),'$D(RTN1) Q "0^This conflict is not within a Military Service Episode"
"RTN","DGRPDT",77,0)
 Q:$D(RTN) RTN
"RTN","DGRPDT",78,0)
 Q "1^OK"
"RTN","DGRPDT",79,0)
SAME(FRDT1,TODT1,FRDT,TODT) ;
"RTN","DGRPDT",80,0)
 N DGS1,DGS2,DGS3,DGS4
"RTN","DGRPDT",81,0)
 S DGS1=$$B4(FRDT,TODT1,1),DGS2=$$B4(FRDT1,TODT,1)
"RTN","DGRPDT",82,0)
 S DGS3=$$B4(TODT,FRDT1,1),DGS4=$$B4(TODT1,FRDT,1)
"RTN","DGRPDT",83,0)
 Q:$P(DGS1,"^",3) 1
"RTN","DGRPDT",84,0)
 Q:$P(DGS2,"^",3) 1
"RTN","DGRPDT",85,0)
 Q:$P(DGS3,"^",3) 1
"RTN","DGRPDT",86,0)
 Q:$P(DGS4,"^",3) 1
"RTN","DGRPDT",87,0)
 Q 0
"RTN","DGRPDT",88,0)
GETDAT(DFN,NODE,DATA) ;get data from the Patient (#2) file
"RTN","DGRPDT",89,0)
 N LOOP,SUB,Z,TMPDAT,DATA1,ERR,DR
"RTN","DGRPDT",90,0)
 Q:('$D(NODE))!('$D(DFN))
"RTN","DGRPDT",91,0)
 S SUB="",Z=1
"RTN","DGRPDT",92,0)
 F  S SUB=$O(NODE(SUB)) Q:SUB=""  D
"RTN","DGRPDT",93,0)
 .S DR=$TR(NODE(SUB),",",";") Q:DR=""
"RTN","DGRPDT",94,0)
 .D GETS^DIQ(2,DFN_",",DR,"I","TMPDAT","ERR")
"RTN","DGRPDT",95,0)
 .S LOOP="F X="_$G(NODE(SUB))_" S DATA1(X)=$G(TMPDAT(2,DFN_"","",X,""I"")),Z=Z+1"
"RTN","DGRPDT",96,0)
 .X LOOP
"RTN","DGRPDT",97,0)
 S DATA("MSL")=$G(DATA1(.326))_"^"_$G(DATA1(.327))
"RTN","DGRPDT",98,0)
 S DATA("MSNTL")=$S($G(DATA1(.3285))="Y":$G(DATA1(.3292))_"^"_$G(DATA1(.3293)),1:"^")
"RTN","DGRPDT",99,0)
 S DATA("MSNNTL")=$S($G(DATA1(.32945))="Y":$G(DATA1(.3297))_"^"_$G(DATA1(.3298)),1:"^")
"RTN","DGRPDT",100,0)
 S DATA("VIET")=$G(DATA1(.32104))_"^"_$G(DATA1(.32105))
"RTN","DGRPDT",101,0)
 S DATA("LEB")=$G(DATA1(.3222))_"^"_$G(DATA1(.3223))
"RTN","DGRPDT",102,0)
 S DATA("GREN")=$G(DATA1(.3225))_"^"_$G(DATA1(.3226))
"RTN","DGRPDT",103,0)
 S DATA("PAN")=$G(DATA1(.3228))_"^"_$G(DATA1(.3229))
"RTN","DGRPDT",104,0)
 S DATA("GULF")=$G(DATA1(.322011))_"^"_$G(DATA1(.322012))
"RTN","DGRPDT",105,0)
 S DATA("SOM")=$G(DATA1(.322017))_"^"_$G(DATA1(.322018))
"RTN","DGRPDT",106,0)
 S DATA("YUG")=$G(DATA1(.32202))_"^"_$G(DATA1(.322021))
"RTN","DGRPDT",107,0)
 S DATA("COMBAT")=$G(DATA1(.5293))_"^"_$G(DATA1(.5294))
"RTN","DGRPDT",108,0)
 Q
"RTN","DGRPDT",109,0)
MSEONLY(DATA,FRDT,TODT) ; are these dates within the whole MSE period?
"RTN","DGRPDT",110,0)
 N TO,FROM,SUBRNG,FRDT1,TODT1,MSEFR,MSETO
"RTN","DGRPDT",111,0)
 S SUBRNG="" F  S SUBRNG=$O(DATA(SUBRNG)) Q:SUBRNG=""  D
"RTN","DGRPDT",112,0)
 .S FRDT1=$P(DATA(SUBRNG),"^"),TODT1=$P(DATA(SUBRNG),"^",2)
"RTN","DGRPDT",113,0)
 .S:FRDT1 FROM(FRDT1)="" S:TODT1 TO(TODT1)=""
"RTN","DGRPDT",114,0)
 S MSEFR=$O(FROM("")),MSETO=$O(TO(""),-1)
"RTN","DGRPDT",115,0)
 I FRDT,(('$$B4(MSEFR,FRDT,1))!'$$B4(FRDT,MSETO,1)) Q "0^Conflict From Date is Not Within Military Service Episode Dates"
"RTN","DGRPDT",116,0)
 I TODT,(('$$B4(TODT,MSETO,1))!'$$B4(MSEFR,TODT,1)) Q "0^Conflict End Date is Not Within Military Service Episode Dates"
"RTN","DGRPDT",117,0)
 Q "1^OK"
"RTN","DGRPDT",118,0)
CNFLCTDT(FRDT,TODT,CNFLCT) ;are these dates valid for this conflict?
"RTN","DGRPDT",119,0)
 Q:'$D(CNFLCT) "0^INVALID CONFLICT"
"RTN","DGRPDT",120,0)
 N CRNG
"RTN","DGRPDT",121,0)
 S CRNG=$$GETCNFDT(CNFLCT) Q:$TR(CRNG,"^")="" "0^INVALID CONFLICT"
"RTN","DGRPDT",122,0)
 Q:$P(CRNG,"^")=0 CRNG
"RTN","DGRPDT",123,0)
 I $G(FRDT)="" Q $$WITHIN($P(CRNG,"^"),$P(CRNG,"^",2),.TODT)_" for Conflict - "_$$FMTE^XLFDT($P(CRNG,"^"))_" through "_$$FMTE^XLFDT($P(CRNG,"^",2))
"RTN","DGRPDT",124,0)
 I $G(TODT)="" Q $$WITHIN($P(CRNG,"^"),$P(CRNG,"^",2),.FRDT)_" for Conflict - "_$$FMTE^XLFDT($P(CRNG,"^"))_" through "_$$FMTE^XLFDT($P(CRNG,"^",2))
"RTN","DGRPDT",125,0)
 Q $$RWITHIN($P(CRNG,"^"),$P(CRNG,"^",2),.FRDT,.TODT)_" for Conflict - "_$$FMTE^XLFDT($P(CRNG,"^"))_" through "_$$FMTE^XLFDT($P(CRNG,"^",2))
"RTN","DGRPDT",126,0)
GETCNFDT(CNFLCT) ; get the date range for input conflict
"RTN","DGRPDT",127,0)
 Q:'$D(CNFLCT) "0^INVALID CONFLICT"
"RTN","DGRPDT",128,0)
 N CRNG
"RTN","DGRPDT",129,0)
 S CRNG=$T(@(CNFLCT)) Q:CRNG']"" "0^INVALID CONFLICT"
"RTN","DGRPDT",130,0)
 S CRNG=$P(CRNG,";;",2) S:$P(CRNG,"^",2)="" $P(CRNG,"^",2)=$$DT^XLFDT
"RTN","DGRPDT",131,0)
 S:$P(CRNG,"^")="" $P(CRNG,"^")=1410102
"RTN","DGRPDT",132,0)
 Q CRNG
"RTN","DGRPDT",133,0)
IGNORE(NODE,IFLD) ; extract field to ignore when comparing
"RTN","DGRPDT",134,0)
 N LOOP,QLOOP,RVAL,LSTPC,PC
"RTN","DGRPDT",135,0)
 S LOOP="",IFLD="^"_IFLD_"^"
"RTN","DGRPDT",136,0)
 F  S LOOP=$O(NODE(LOOP)) Q:LOOP=""  D
"RTN","DGRPDT",137,0)
 .I IFLD[("^"_$P(NODE(LOOP),",")_"^") S NODE(LOOP)=$P(NODE(LOOP),",",2,99),LOOP="" Q
"RTN","DGRPDT",138,0)
 .S LSTPC=$L($TR(NODE(LOOP),".0123456789"))+1
"RTN","DGRPDT",139,0)
 .I IFLD[("^"_$P(NODE(LOOP),",",LSTPC)_"^") S NODE(LOOP)=$P(NODE(LOOP),",",1,LSTPC-1),LOOP="" Q
"RTN","DGRPDT",140,0)
 .F PC=1:1:LSTPC Q:$G(QLOOP)  I IFLD[("^"_$P(NODE(LOOP),",",PC)_"^") S NODE(LOOP)=$P(NODE(LOOP),",",1,PC-1)_","_$P(NODE(LOOP),",",PC+1,99),LOOP="" Q
"RTN","DGRPDT",141,0)
 Q
"RTN","DGRPDT",142,0)
CNFLCT ;; ***  DO NOT REMOVE OR CHANGE BELOW CONFLICT VALUES  ***
"RTN","DGRPDT",143,0)
 ;;
"RTN","DGRPDT",144,0)
WWI ;;2170406^2181111
"RTN","DGRPDT",145,0)
WWIIE ;;2411207^2461231
"RTN","DGRPDT",146,0)
WWIIP ;;2411207^2461231
"RTN","DGRPDT",147,0)
KOR ;;2500627^2550131
"RTN","DGRPDT",148,0)
VIET ;;2610228^2750507
"RTN","DGRPDT",149,0)
LEB ;;2831001^
"RTN","DGRPDT",150,0)
GREN ;;2831023^2831121
"RTN","DGRPDT",151,0)
PAN ;;2891220^2900131
"RTN","DGRPDT",152,0)
GULF ;;2900802^
"RTN","DGRPDT",153,0)
SOM ;;2920928^
"RTN","DGRPDT",154,0)
YUG ;;2920622^
"RTN","DGRPDT",155,0)
OTHER ;;^
"RTN","DGRPE")
0^3^B45803352
"RTN","DGRPE",1,0)
DGRPE ;ALB/MRL,LBD - REGISTRATIONS EDITS ; 10/26/04 11:19am
"RTN","DGRPE",2,0)
 ;;5.3;Registration;**32,114,139,169,175,247,190,343,397,342,454,415,489,506,244,547,522,528,555,508,451,626**;Aug 13, 1993
"RTN","DGRPE",3,0)
 ;
"RTN","DGRPE",4,0)
 ;DGDR contains a string of edits; edit=screen*10+item #
"RTN","DGRPE",5,0)
 ;
"RTN","DGRPE",6,0)
 ;line tag screen*10+item*1000 = continuation line
"RTN","DGRPE",7,0)
 ;
"RTN","DGRPE",8,0)
 I DGRPS=8 D ^DGRPEIS,Q Q  ; family demographic edit...not conventional!!  :)
"RTN","DGRPE",9,0)
 I DGRPS=9 D EDIT9^DGRPEIS2,Q Q  ; income screening data ($$$)
"RTN","DGRPE",10,0)
 I DGRPS=5,DGDR["501," D
"RTN","DGRPE",11,0)
 .I $G(DGPRFLG) D PREG^IBCNBME(DFN) Q
"RTN","DGRPE",12,0)
 .D REG^IBCNBME(DFN)
"RTN","DGRPE",13,0)
 .Q
"RTN","DGRPE",14,0)
 ;-- Tricare screen #15
"RTN","DGRPE",15,0)
 I DGRPS=15 D EDIT^DGRP15,Q Q
"RTN","DGRPE",16,0)
 ;
"RTN","DGRPE",17,0)
 N DGPH,DGPHFLG
"RTN","DGRPE",18,0)
 K DR S (DA,Y)=DFN,DIE="^DPT(",DR="",DGDRS="DR",DGCT=0 G ^DGRPE1:DGRPS>6
"RTN","DGRPE",19,0)
 F I=1:1 S J=$P(DGDR,",",I) Q:J=""  F J1=J,J*1000,J*1000+1,J*1000+2 Q:'$T(@J1)  S DGDRD=$P($T(@J1),";;",2) D S
"RTN","DGRPE",20,0)
 D ^DIE
"RTN","DGRPE",21,0)
 ;check for Combat Vet status
"RTN","DGRPE",22,0)
 I $G(DGCVFLG)=1,($P($$CVEDT^DGCV(DFN),U,2)']"") D
"RTN","DGRPE",23,0)
 . W !!,"**NOTE-Change(s) made in this session deleted the veteran's Combat Vet status!"
"RTN","DGRPE",24,0)
 . S DIR(0)="EA" D ^DIR K DIR
"RTN","DGRPE",25,0)
 I $G(DGPHFLG)>0 D EDITPH1^DGRPLE()
"RTN","DGRPE",26,0)
Q K DA,DIE,DR,DGCT,DGCVFLG,DGDR,DGDRD,DGDRS,DGRPADI,I,J,J1,DGCOMLOC
"RTN","DGRPE",27,0)
 Q
"RTN","DGRPE",28,0)
S I $L(@DGDRS)+$L(DGDRD)<241 S @DGDRS=@DGDRS_DGDRD Q
"RTN","DGRPE",29,0)
 S DGCT=DGCT+1,DGDRS="DR(1,2,"_DGCT_")",@DGDRS=DGDRD Q
"RTN","DGRPE",30,0)
 Q
"RTN","DGRPE",31,0)
101 ;;K DG20NAME;.01;.01///^S X=$$NCEDIT^DPTNAME(DFN,,.DG20NAME);K DG20NAME;.09;.03;
"RTN","DGRPE",32,0)
102 ;;1;
"RTN","DGRPE",33,0)
103 ;;.091;
"RTN","DGRPE",34,0)
104 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGAED(DFN,.FLG);
"RTN","DGRPE",35,0)
105 ;;.12105//NO;S:X="N" Y="@15" S:X="Y" DIE("NO^")="";.1217;I X']"" W !?4,$C(7),"But I need a Start Date for this Temporary Address." S Y=.12105;.1218;.1211;I X']"" W !?4,$C(7),"But I need at least one line of a Temporary address." S Y=.12105;
"RTN","DGRPE",36,0)
111 ;;.14105//NO;S:X="N" Y="@111" S:X="Y" DIE("NO^")="";.1417;I X']"" W !?4,$C(7),"But I need a Start Date." S Y=.14105;.1418;D DR111^DGRPE;.141;I '$P($$CAACT^DGRPCADD(DFN),U,2) W !?4,"But I need at least one active category." S Y=.14105;
"RTN","DGRPE",37,0)
111000 ;;K DR(2,2.141);.1411;I X']"" W !?4,$C(7),"I need at least one line of Address." S Y=.14105;.1412;S:X']"" Y=.1414;.1413;.1414;.1415;.1416;Q;.14111;@111;K DIE("NO^");
"RTN","DGRPE",38,0)
109 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGAED(DFN,.FLG);.02;D DR109^DGRPE;6;2;K DR(2,2.02),DR(2,2.06);.05;.08;K DIE("NO^");
"RTN","DGRPE",39,0)
105000 ;;.1212;S:X']"" Y=.1214;.1213:.1215;.12112;Q;.12111;.1219;@15;K DIE("NO^");
"RTN","DGRPE",40,0)
201 ;;.02;.05;.08;.092;.093;.2401:.2403;57.4//NOT APPLICABLE;
"RTN","DGRPE",41,0)
202 ;;1010.15//NO;S:X'="Y" Y="@22";S DIE("NO^")="";1010.152;I X']"" W !?4,*7,"But I need to know where you were treated most recently." S Y=1010.15;1010.151;1010.154;S:X']"" Y="@22";1010.153;@22;K DIE("NO^");
"RTN","DGRPE",42,0)
203 ;;D DR203^DGRPE;6ETHNICITY;2RACE;K DR(2,2.02),DR(2,2.06);
"RTN","DGRPE",43,0)
301 ;;.211;S:X']"" Y="@31";.212;.2125//NO;I X="Y" S DGADD=".21" D AD^DGRPE S Y=.21011;.213;S:X']"" Y=.216;.214;S:X']"" Y=.216;.215:.217;.2207;.219;.21011;@31;
"RTN","DGRPE",44,0)
302 ;;.2191;S:X']"" Y="@32";.2192;.21925//NO;I X="Y" S DGADD=".211" D AD^DGRPE S Y=.211011;
"RTN","DGRPE",45,0)
302000 ;;.2193;S:X']"" Y=.2196;.2194;S:X']"" Y=.2196;.2195:.2197;.2203;.2199;.211011;@32;
"RTN","DGRPE",46,0)
303 ;;N DGX1,DGX2;I '$L($P($G(^DPT(DFN,.21)),U)) S Y="@33";.3305//NO;I X="Y" S Y="@34",DGX1=1;@33;S:$D(^DPT(DFN,.22)) $P(^(.22),U,1)=$P(^(.22),U,7);.331;S:X']"" DGX1=2,Y="@34";.332;@34;
"RTN","DGRPE",47,0)
303000 ;;S:$G(DGX1) Y="@341";.333;S:X']"" Y=.336;.334;S:X']"" Y=.336;.335:.337;.2201;.339;.33011;S DGX1=2;@341;
"RTN","DGRPE",48,0)
303001 ;;S:$G(DGX1)=2 Y="@35";S DGX2=$G(^DPT(DA,.21));.331///^S X=$P(DGX2,U);.332///^S X=$P(DGX2,U,2);.333////^S X=$P(DGX2,U,3);.334///^S X=$P(DGX2,U,4);@35;
"RTN","DGRPE",49,0)
303002 ;;S:$G(DGX1)=2 Y="@351";.335///^S X=$P(DGX2,U,5);.336///^S X=$P(DGX2,U,6);.337///^S X=$P(DGX2,U,7);.338///^S X=$P(DGX2,U,8);.339///^S X=$P(DGX2,U,9);.33011///^S X=$P(DGX2,U,11);@351;K DGX1,DGX2;
"RTN","DGRPE",50,0)
304 ;;.3311;S:X']"" Y="@36";.3312;.3313;S:X']"" Y=.3316;.3314;S:X']"" Y=.3316;.3315:.3317;.2204;.3319;.331011;@36;        
"RTN","DGRPE",51,0)
305 ;;N DGX1,DGX2;I '$L($P($G(^DPT(DFN,.21)),U)) S Y="@37";.3405//NO;I X="Y" S DGX1=1,Y="@371";@37;S:$D(^DPT(DFN,.22)) $P(^(.22),U,2)=$P(^(.22),U,7);.341;S:X']"" DGX1=2,Y="@371";.342;@371;
"RTN","DGRPE",52,0)
305000 ;;S:$G(DGX1) Y="@38";.343;S:X']"" Y=.346;.344;S:X']"" Y=.346;.345:.347;.2202;.349;.34011;S DGX1=2;@38;
"RTN","DGRPE",53,0)
305001 ;;S:$G(DGX1)=2 Y="@381";S DGX2=$G(^DPT(DA,.21));.341///^S X=$P(DGX2,U);.342///^S X=$P(DGX2,U,2);.343///^S X=$P(DGX2,U,3);.344///^S X=$P(DGX2,U,4);@381
"RTN","DGRPE",54,0)
305002 ;;S:$G(DGX1)=2 Y="@39";.345///^S X=$P(DGX2,U,5);.346///^S X=$P(DGX2,U,6);.347///^S X=$P(DGX2,U,7);.348///^S X=$P(DGX2,U,8);.349///^S X=$P(DGX2,U,9);.34011///^S X=$P(DGX2,U,11);@39;K DGX1,DGX2;
"RTN","DGRPE",55,0)
401 ;;.07;.31115;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@41";.3111;S:X']"" Y="@41";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115:.3117;.2205;.3119;@41;
"RTN","DGRPE",56,0)
402 ;;.2514;.2515;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@42";.251;S:X']"" Y="@42";.252;S:X']"" Y=.255;.253;S:X']"" Y=.255;.254:.256;.2206;.258;@42;
"RTN","DGRPE",57,0)
501 ;;
"RTN","DGRPE",58,0)
502 ;;.381;.382///NOW;
"RTN","DGRPE",59,0)
503 ;;.383;
"RTN","DGRPE",60,0)
601 ;;.325;S:X']"" Y="@61";S:$$FV^DGRPMS(X)'=1 Y=".328";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y=".325";.328;.326;.327;.324;
"RTN","DGRPE",61,0)
601000 ;;.3285//NO;S:X'="Y" Y="@61";.3291;S:X']"" Y="@61";S:$$FV^DGRPMS(X)'=1 Y=".3294";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y=".3291";.3294;.3292;.3293;.329;
"RTN","DGRPE",62,0)
601001 ;;.32945//NO;S:X'="Y" Y="@61";.3296;S:X']"" Y="@61";S:$$FV^DGRPMS(X)'=1 Y=".3299";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y=".3296";.3299;.3297;.3298;.3295;@61;
"RTN","DGRPE",63,0)
602 ;;.525//NO;S:X'="Y" Y="@62";.526:.528;@62;
"RTN","DGRPE",64,0)
603 ;;.5291//NO;S:X'="Y" Y="@63";.5292:.5294;@63;
"RTN","DGRPE",65,0)
604 ;;.32101//NO;S:X'="Y" Y="@64";.32104;.32105;@64;
"RTN","DGRPE",66,0)
605 ;;.32102//NO;S:X'="Y" Y="@65";.32107;.32109;.3211;.3213;@65;
"RTN","DGRPE",67,0)
606 ;;.32103//NO;S:X'="Y" Y="@66";.3212;.32111;@66;
"RTN","DGRPE",68,0)
607 ;;.3221//NO;S:X'="Y" Y="@67";.3222;Q;.3223;@67;
"RTN","DGRPE",69,0)
608 ;;.3224//NO;S:X'="Y" Y="@68";.3225;Q;.3226;@68;
"RTN","DGRPE",70,0)
609 ;;.3227//NO;S:X'="Y" Y="@69";.3228;Q;.3229;@69;
"RTN","DGRPE",71,0)
610 ;;.32201//NO;S:X'="Y" Y="@610";.322011;Q;.322012;@610;
"RTN","DGRPE",72,0)
611 ;;.322016//NO;S:X'="Y" Y="@611";.322017;Q;.322018;@611;
"RTN","DGRPE",73,0)
612 ;;.322013//NO;S:X'="Y" Y="@612";.322014;Q;.322015;@612;
"RTN","DGRPE",74,0)
613 ;;.362;
"RTN","DGRPE",75,0)
614 ;;.368//NO;.369//NO;I $S('$D(^DPT(DA,.36)):1,$P(^(.36),U,8)="Y"!($P(^(.36),U,9)="Y"):0,1:1) S Y="@614";.37;@614;
"RTN","DGRPE",76,0)
615 ;;.322019//NO;S:X'="Y" Y="@615";.32202;Q;.322021;@615;
"RTN","DGRPE",77,0)
616 ;;S DGPHFLG=0;.531;S:X'="Y" DGX=X,Y="@616";.532///^S X="PENDING";S Y="@6161";@616;S:DGX'="N" Y="@6162";.533///^S X="VAMC";@6161;S DGPHFLG=1;.535///^S X=$$DIV^DGRPLE();@6162;
"RTN","DGRPE",78,0)
617 ;;D REG^DGNTQ(DFN);
"RTN","DGRPE",79,0)
AD N DGZ4,DGPC
"RTN","DGRPE",80,0)
 S X=$S($D(^DPT(DA,.11)):^(.11),1:""),DGZ4=$P(X,U,12),DGPHONE=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(DGADD)):^(DGADD),1:""),^(DGADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_DGPHONE_U_$P(Y,U,10)
"RTN","DGRPE",81,0)
 I DGZ4 S DGPC=$S((DGADD=.33):1,(DGADD=.34):2,(DGADD=.211):3,(DGADD=.331):4,(DGADD=.311):5,(DGADD=.25):6,(DGADD=.21):7,1:0) S:DGPC $P(^DPT(DFN,.22),U,DGPC)=DGZ4
"RTN","DGRPE",82,0)
 K DGADD,DGPHONE Q
"RTN","DGRPE",83,0)
DR109 ;Drop through (use same logic as DR203)
"RTN","DGRPE",84,0)
DR203 S DR(2,2.02)=".01RACE;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.02,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2031"";.02;@2031;"
"RTN","DGRPE",85,0)
 S DR(2,2.06)=".01ETHNICITY;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.06,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2032"";.02;@2032;"
"RTN","DGRPE",86,0)
 Q
"RTN","DGRPE",87,0)
DR111 ;Set DR string for Confidential Address categories
"RTN","DGRPE",88,0)
 S DR(2,2.141)=".01;1//YES;"
"RTN","DGRPE",89,0)
 Q
"RTN","DGRPMS")
0^2^B35311964
"RTN","DGRPMS",1,0)
DGRPMS ;ALB/BRM,LBD - MILITARY SERVICE APIS ; 12/10/04 4:15pm
"RTN","DGRPMS",2,0)
 ;;5.3;Registration;**451,626**;Aug 13, 1993
"RTN","DGRPMS",3,0)
 ;
"RTN","DGRPMS",4,0)
VALCON(DFN,CNFLCT,CDATE,FRTO) ;is this a valid conflict input?
"RTN","DGRPMS",5,0)
 ;
"RTN","DGRPMS",6,0)
 ;INPUT:
"RTN","DGRPMS",7,0)
 ;      FRTO - 0=FRDT 1=TODT  (defaults to FRDT if FRTO="")
"RTN","DGRPMS",8,0)
 ;
"RTN","DGRPMS",9,0)
 N RTN,X,Y,FRDT,TODT,CNFLCTV,IGNORE,COMPOW,MSG,DTCHK,CNFLCT2
"RTN","DGRPMS",10,0)
 Q:'$D(DFN) "0^INVALID PATIENT"
"RTN","DGRPMS",11,0)
 Q:'$D(^DPT(DFN)) "0^INVALID PATIENT"
"RTN","DGRPMS",12,0)
 Q:'$$VALID^DGRPDT(.CDATE) "0^INVALID DATE"
"RTN","DGRPMS",13,0)
 S FRTO=+$G(FRTO)
"RTN","DGRPMS",14,0)
 I 'FRTO S TODT=$$GETDT(DFN,.CNFLCT),FRDT=CDATE K DGFRDT
"RTN","DGRPMS",15,0)
 E  S FRDT=$$GETDT(DFN,.CNFLCT,FRTO) S:$G(DGFRDT) FRDT=$G(DGFRDT) S TODT=CDATE K DGFRDT
"RTN","DGRPMS",16,0)
 S DTCHK=$$DTUTIL^DGRPDT(CDATE,$$GETDT(DFN,.CNFLCT,'FRTO),1)
"RTN","DGRPMS",17,0)
 I 'DTCHK D MSG($P(DTCHK,"^",2),2,2) Q DTCHK
"RTN","DGRPMS",18,0)
 I CNFLCT="COMB"!(CNFLCT="POW") D
"RTN","DGRPMS",19,0)
 .S COMPOW=$S(CNFLCT="COMB":1,1:2)
"RTN","DGRPMS",20,0)
 .S CNFLCT2=CNFLCT
"RTN","DGRPMS",21,0)
 .S CNFLCT=$$COMPOW($S($G(DGCOMLOC):$P(DGCOMLOC,"^"),1:$$GETDT(DFN,CNFLCT,3)))
"RTN","DGRPMS",22,0)
 S CNFLCTV=""
"RTN","DGRPMS",23,0)
 I CNFLCT]"" S CNFLCTV=$$CNFLCTDT^DGRPDT(FRDT,$S(FRTO:TODT,1:""),.CNFLCT)
"RTN","DGRPMS",24,0)
 I ('CNFLCTV) D MSG($P(CNFLCTV,"^",2),2,1) Q CNFLCTV  ;dates are not within conflict
"RTN","DGRPMS",25,0)
 ;
"RTN","DGRPMS",26,0)
 S MSG=$S('$G(COMPOW):"Conflict",$G(COMPOW)=2:"POW",1:"Combat")
"RTN","DGRPMS",27,0)
 I FRDT,TODT,'$$B4^DGRPDT(FRDT,TODT,0) D MSG((MSG_" From Date is not Before "_MSG_" To Date"),2,1) Q "0^"_MSG_" From Date is not Before "_MSG_" To Date"
"RTN","DGRPMS",28,0)
 S IGNORE=$P($P($T(@(CNFLCT)),";;",2),"^",FRTO+1)
"RTN","DGRPMS",29,0)
 S:$G(COMPOW) IGNORE=$P($P($T(@(CNFLCT2)),";;",2),"^",FRTO+1)
"RTN","DGRPMS",30,0)
 I $G(COMPOW)=2 S RTN=$$OVRLPCHK^DGRPDT(DFN,FRDT,TODT,-1,IGNORE)
"RTN","DGRPMS",31,0)
 E  S RTN=$$COVRLP2^DGRPDT(DFN,FRDT,TODT,IGNORE)
"RTN","DGRPMS",32,0)
 Q:RTN RTN
"RTN","DGRPMS",33,0)
 D MSG($P(RTN,"^",2),2,1)
"RTN","DGRPMS",34,0)
 Q RTN
"RTN","DGRPMS",35,0)
 ;
"RTN","DGRPMS",36,0)
VALMSE(DFN,MDATE,FRTO,FLD) ;is this a valid Military Service Episode date?
"RTN","DGRPMS",37,0)
 ;
"RTN","DGRPMS",38,0)
 ;INPUT:
"RTN","DGRPMS",39,0)
 ;      FRTO - 0=FRDT 1=TODT  (defaults to FRDT if FRTO="")
"RTN","DGRPMS",40,0)
 ;       FLD - MSE field being edited/added (MSL,MSNTL,MSNNTL)
"RTN","DGRPMS",41,0)
 ;
"RTN","DGRPMS",42,0)
 N RTN,X,Y,FRDT,TODT,IGNORE,DTCHK
"RTN","DGRPMS",43,0)
 Q:'$D(DFN) "0^INVALID PATIENT"
"RTN","DGRPMS",44,0)
 Q:'$D(^DPT(DFN)) "0^INVALID PATIENT"
"RTN","DGRPMS",45,0)
 Q:'$$VALID^DGRPDT(.MDATE) "0^INVALID DATE"
"RTN","DGRPMS",46,0)
 S FRTO=+$G(FRTO)
"RTN","DGRPMS",47,0)
 I 'FRTO S FRDT=MDATE,TODT=$$GETDT(DFN,.FLD,FRTO) K DGFRDT
"RTN","DGRPMS",48,0)
 E  S FRDT=$$GETDT(DFN,.FLD,FRTO) S:$G(DGFRDT) FRDT=$G(DGFRDT) S TODT=MDATE K DGFRDT
"RTN","DGRPMS",49,0)
 S DTCHK=$$DTUTIL^DGRPDT(MDATE,$$GETDT(DFN,.FLD,'FRTO),1)
"RTN","DGRPMS",50,0)
 I 'DTCHK D MSG($P(DTCHK,"^",2),2,2) K DGCOMBR Q DTCHK
"RTN","DGRPMS",51,0)
 I FRTO,FRDT,TODT,'$$B4^DGRPDT(.FRDT,.TODT,0) D MSG("Service Entry Date is not before Service Separation Date",2,1) K DGCOMBR Q "0^Service Entry Date is not before Service Separation Date"
"RTN","DGRPMS",52,0)
 S IGNORE=$P($P($T(@(FLD)),";;",2),"^",FRTO+1)
"RTN","DGRPMS",53,0)
 S RTN=$$OVRLPCHK^DGRPDT(.DFN,.FRDT,.TODT,1,.IGNORE)
"RTN","DGRPMS",54,0)
 I $G(DGCOMBR)']"" S DGCOMBR=$$GETDT(DFN,.FLD,4)
"RTN","DGRPMS",55,0)
 I RTN,FRTO,$$BRANCH(.DGCOMBR),('$$WWII(DFN,TODT,.FLD)) D MSG("Branch of Service Requires WWII Dates of Service",2,1) K DGCOMBR Q "0^BOS Requires WWII Dates"
"RTN","DGRPMS",56,0)
 K DGCOMBR
"RTN","DGRPMS",57,0)
 Q:RTN RTN
"RTN","DGRPMS",58,0)
 D MSG($P(RTN,"^",2),2,1)
"RTN","DGRPMS",59,0)
 Q RTN
"RTN","DGRPMS",60,0)
 ;
"RTN","DGRPMS",61,0)
BRANCH(DGCOMBR) ;branches of service that require WWII service dates
"RTN","DGRPMS",62,0)
 N BRANCH
"RTN","DGRPMS",63,0)
 Q:'$G(DGCOMBR) 0
"RTN","DGRPMS",64,0)
 S BRANCH=$P(DGCOMBR,"^",2)
"RTN","DGRPMS",65,0)
 Q:BRANCH="MERCHANT SEAMAN" 1
"RTN","DGRPMS",66,0)
 Q:BRANCH="F.COMMONWEALTH" 1
"RTN","DGRPMS",67,0)
 Q:BRANCH="F.GUERILLA" 1
"RTN","DGRPMS",68,0)
 Q:BRANCH="F.SCOUTS NEW" 1
"RTN","DGRPMS",69,0)
 Q:BRANCH="F.SCOUTS OLD" 1
"RTN","DGRPMS",70,0)
 Q 0
"RTN","DGRPMS",71,0)
 ;
"RTN","DGRPMS",72,0)
GETDT(DFN,CNFLCT,FRTO) ; get from date, to date, or location from patient file
"RTN","DGRPMS",73,0)
 ;
"RTN","DGRPMS",74,0)
 N CFLDS,CFLD
"RTN","DGRPMS",75,0)
 Q:'$D(DFN) ""
"RTN","DGRPMS",76,0)
 Q:'$D(^DPT(DFN)) ""
"RTN","DGRPMS",77,0)
 Q:$G(CNFLCT)="" ""
"RTN","DGRPMS",78,0)
 S:$G(FRTO)="" FRTO=0
"RTN","DGRPMS",79,0)
 S CFLDS=$P($T(@(CNFLCT)),";;",2) Q:CFLDS']"" ""
"RTN","DGRPMS",80,0)
 S CFLD=$S('FRTO:$P(CFLDS,"^",2),FRTO=1:$P(CFLDS,"^"),1:$P(CFLDS,"^",3))
"RTN","DGRPMS",81,0)
 Q:'CFLD ""
"RTN","DGRPMS",82,0)
 S RTN=$$GET1^DIQ(2,DFN_",",CFLD,"I")
"RTN","DGRPMS",83,0)
 I FRTO=4 S RTN=RTN_"^"_$$EXTERNAL^DILFD(2,CFLD,"",RTN)
"RTN","DGRPMS",84,0)
 Q RTN
"RTN","DGRPMS",85,0)
 ;
"RTN","DGRPMS",86,0)
WWII(DFN,TODT,FLD) ; was this patient in WWII?
"RTN","DGRPMS",87,0)
 ;  this API assumes the WWII period to be from 12/07/41-12/31/46
"RTN","DGRPMS",88,0)
 ;
"RTN","DGRPMS",89,0)
 N OK,NODE,DATA,WWIIS,WWIIE,PATDT,PATE,PATS
"RTN","DGRPMS",90,0)
 Q:'$G(DFN) "-1^UNKNOWN"
"RTN","DGRPMS",91,0)
 S NODE(.32)=".326,.327,.3285,.3292,.3293,.32945,.3297,.3298"
"RTN","DGRPMS",92,0)
 S WWIIS=2411207,WWIIE=2461231
"RTN","DGRPMS",93,0)
 D GETDAT^DGRPDT(DFN,.NODE,.DATA)
"RTN","DGRPMS",94,0)
 S PATDT=$G(FLD) Q:PATDT']"" 0
"RTN","DGRPMS",95,0)
 S PATS=$P($G(DATA(PATDT)),"^"),PATE=$P($G(DATA(PATDT)),"^",2)
"RTN","DGRPMS",96,0)
 S:'$G(TODT) TODT=PATE
"RTN","DGRPMS",97,0)
 S OK=0
"RTN","DGRPMS",98,0)
 S OK=$$WITHIN^DGRPDT(WWIIS,WWIIE,PATS)
"RTN","DGRPMS",99,0)
 S:'OK OK=$$WITHIN^DGRPDT(WWIIS,WWIIE,TODT)
"RTN","DGRPMS",100,0)
 S:'OK OK=$$RWITHIN^DGRPDT(PATS,TODT,WWIIS,WWIIE)
"RTN","DGRPMS",101,0)
 Q $G(OK)
"RTN","DGRPMS",102,0)
DELMSE(DFN,TYPE) ; delete MSE from patient
"RTN","DGRPMS",103,0)
 ;
"RTN","DGRPMS",104,0)
 ; Input: DFN - Internal entry number for the Patient File (#2)
"RTN","DGRPMS",105,0)
 ;       TYPE - 1=Last MSE  2=Next to Last MSE  3=Next to Next to Last
"RTN","DGRPMS",106,0)
 ;
"RTN","DGRPMS",107,0)
 Q:'$G(TYPE)
"RTN","DGRPMS",108,0)
 Q:(('$G(DFN))!'$D(^DPT(DFN)))
"RTN","DGRPMS",109,0)
 N IENS,FDA,X,X1,X2,Y,ZZ,ROOT
"RTN","DGRPMS",110,0)
 S IENS=DFN_",",ROOT="FDA(2,IENS)",X=""
"RTN","DGRPMS",111,0)
 I TYPE=1 F ZZ=.324,.326,.327,.328 S @ROOT@(ZZ)=X
"RTN","DGRPMS",112,0)
 I TYPE=2 F ZZ=.329,.3292,.3293,.3294 S @ROOT@(ZZ)=X
"RTN","DGRPMS",113,0)
 I TYPE=3 F ZZ=.3295,.3297,.3298,.3299 S @ROOT@(ZZ)=X
"RTN","DGRPMS",114,0)
 D FILE^DIE("K","FDA","ERR")
"RTN","DGRPMS",115,0)
 Q
"RTN","DGRPMS",116,0)
 ;
"RTN","DGRPMS",117,0)
COMPOW(VAL) ;convert POW and Combat Location fields
"RTN","DGRPMS",118,0)
 ;
"RTN","DGRPMS",119,0)
 N ABRV
"RTN","DGRPMS",120,0)
 Q:'$G(VAL) ""
"RTN","DGRPMS",121,0)
 S ABRV=$$GET1^DIQ(22,VAL_",",1,"I")
"RTN","DGRPMS",122,0)
 Q:ABRV="WWI" "WWI"
"RTN","DGRPMS",123,0)
 Q:ABRV="WWII-EUROPE" "WWIIE"
"RTN","DGRPMS",124,0)
 Q:ABRV="WWII-PACIFIC" "WWIIP"
"RTN","DGRPMS",125,0)
 Q:ABRV="KOREAN" "KOR"
"RTN","DGRPMS",126,0)
 Q:ABRV="VIETNAM" "VIET"
"RTN","DGRPMS",127,0)
 Q:ABRV="OTHER" "OTHER"
"RTN","DGRPMS",128,0)
 Q:ABRV="PERSIAN GULF" "GULF"
"RTN","DGRPMS",129,0)
 Q:ABRV="YUGOSLAVIA" "YUG"
"RTN","DGRPMS",130,0)
 Q:ABRV="SOMALIA" "SOM"
"RTN","DGRPMS",131,0)
 Q ""
"RTN","DGRPMS",132,0)
 ;
"RTN","DGRPMS",133,0)
FV(X) ;Is this a Filipino Vet branch of service?
"RTN","DGRPMS",134,0)
 ;Added for HVE II (DG*5.3*451)
"RTN","DGRPMS",135,0)
 ;INPUT:  X = IEN Branch of Service file #23
"RTN","DGRPMS",136,0)
 ;OUTPUT: 1 = Filipino Vet BOS (F.COMMONWEALTH, F.GUERILLA, F.SCOUTS NEW)
"RTN","DGRPMS",137,0)
 ;        2 = Filipino Vet BOS (F.SCOUTS OLD)
"RTN","DGRPMS",138,0)
 ;        0 = Not Filipino Vet BOS
"RTN","DGRPMS",139,0)
 N FV
"RTN","DGRPMS",140,0)
 I '$G(X) Q 0
"RTN","DGRPMS",141,0)
 S FV=$P($G(^DIC(23,X,0)),U,1)
"RTN","DGRPMS",142,0)
 Q $S(FV="F.SCOUTS OLD":2,$E(FV,1,2)="F.":1,1:0)
"RTN","DGRPMS",143,0)
 ;
"RTN","DGRPMS",144,0)
FVP ;MUMPS cross-reference "AFV1" on Service Branch [Last] (#.325), "AFV2"
"RTN","DGRPMS",145,0)
 ;on Service Branch [NTL] (#.3291), and "AFV3" on Service Branch [NNTL]
"RTN","DGRPMS",146,0)
 ;(#.3296) in the Patient file #2.  If the Service Branch fields do not
"RTN","DGRPMS",147,0)
 ;contain a Filipino Veteran branch of service, the Filipino Vet Proof
"RTN","DGRPMS",148,0)
 ;field (#.3214) will be deleted.
"RTN","DGRPMS",149,0)
 Q:'$G(DA)
"RTN","DGRPMS",150,0)
 N BOS,MS,FV,IENS,FDA
"RTN","DGRPMS",151,0)
 S MS=$G(^DPT(DA,.32))
"RTN","DGRPMS",152,0)
 F BOS=5,10,15 S FV=$$FV($P(MS,U,BOS)) Q:FV=1
"RTN","DGRPMS",153,0)
 I FV=1 Q  ;Filipino Vet BOS found, quit
"RTN","DGRPMS",154,0)
 ;Delete Filipino Vet Proof
"RTN","DGRPMS",155,0)
 S IENS=DA_",",FDA(2,IENS,.3214)="@"
"RTN","DGRPMS",156,0)
 D FILE^DIE("","FDA")
"RTN","DGRPMS",157,0)
 Q
"RTN","DGRPMS",158,0)
 ;
"RTN","DGRPMS",159,0)
MSG(MSGTXT,LF1,LF2) ; This api will format the output text in order to utilize
"RTN","DGRPMS",160,0)
 ; the EN^DDIOL utility.
"RTN","DGRPMS",161,0)
 ;INPUT:  MSGTXT = Message text to display
"RTN","DGRPMS",162,0)
 ;           LF1 = Number of line feeds to preceed the message
"RTN","DGRPMS",163,0)
 ;           L2F = Number of line feeds to follow the message
"RTN","DGRPMS",164,0)
 ;        
"RTN","DGRPMS",165,0)
 N MSGARY,LFSTR
"RTN","DGRPMS",166,0)
 S $P(LFSTR,"!",50)="!"
"RTN","DGRPMS",167,0)
 S:$G(LF1)'="" MSGARY(.5,"F")=$E(LFSTR,1,(LF1-1))
"RTN","DGRPMS",168,0)
 S MSGARY(1)=MSGTXT
"RTN","DGRPMS",169,0)
 S:$G(LF2)'="" MSGARY(2,"F")=$E(LFSTR,1,LF2)
"RTN","DGRPMS",170,0)
 D EN^DDIOL(.MSGARY)
"RTN","DGRPMS",171,0)
 Q
"RTN","DGRPMS",172,0)
 ;
"RTN","DGRPMS",173,0)
CNFLCT ;; ***  DO NOT REMOVE BELOW CONFLICT FIELD LOCATIONS  ***
"RTN","DGRPMS",174,0)
 ;; FROM DATE^TO DATE
"RTN","DGRPMS",175,0)
WWI ;;
"RTN","DGRPMS",176,0)
WWIIE ;;
"RTN","DGRPMS",177,0)
WWIIP ;;
"RTN","DGRPMS",178,0)
KOR ;;
"RTN","DGRPMS",179,0)
VIET ;;.32104^.32105
"RTN","DGRPMS",180,0)
LEB ;;.3222^.3223
"RTN","DGRPMS",181,0)
GREN ;;.3225^.3226
"RTN","DGRPMS",182,0)
PAN ;;.3228^.3229
"RTN","DGRPMS",183,0)
GULF ;;.322011^.322012
"RTN","DGRPMS",184,0)
SOM ;;.322017^.322018
"RTN","DGRPMS",185,0)
YUG ;;.32202^.322021
"RTN","DGRPMS",186,0)
 ;;
"RTN","DGRPMS",187,0)
 ;;  **BELOW VALUES ARE USED FOR MSE CHECKS - DO NOT REMOVE ***
"RTN","DGRPMS",188,0)
 ;; ENTRY DATE^SEPERATION DATE
"RTN","DGRPMS",189,0)
MSL ;;.326^.327^.325
"RTN","DGRPMS",190,0)
MSNTL ;;.3292^.3293^.3291
"RTN","DGRPMS",191,0)
MSNNTL ;;.3297^.3298^.3296
"RTN","DGRPMS",192,0)
 ;;
"RTN","DGRPMS",193,0)
 ;;  **BELOW VALUES ARE USED FOR POW AND COMBAT CHECKS - DO NOT REMOVE
"RTN","DGRPMS",194,0)
 ;; FROM DATE^TO DATE^LOCATION
"RTN","DGRPMS",195,0)
COMB ;;.5293^.5294^.5292
"RTN","DGRPMS",196,0)
POW ;;.527^.528^.526
"RTN","DGRPMS",197,0)
 ;;
"VER")
8.0^22
**END**
**END**
