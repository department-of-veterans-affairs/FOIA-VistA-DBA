KIDS Distribution saved on Jul 14, 2006@09:37:21
Electronic Signature v1.0 [Build 1.0.0.024]
**KIDS**:XOBE 1.0^

**INSTALL NAME**
XOBE 1.0
"BLD",708,0)
XOBE 1.0^ELECTRONIC SIGNATURE^0^3060714^y
"BLD",708,1,0)
^^4^4^3060120^
"BLD",708,1,1,0)
This build contains the routine(s), RPC context option, and remote 
"BLD",708,1,2,0)
procedures used by the Electronic Signature (XOBE) package.
"BLD",708,1,3,0)
 
"BLD",708,1,4,0)
[Build: 1.0.0.024]
"BLD",708,4,0)
^9.64PA^^
"BLD",708,"KRN",0)
^9.67PA^8989.52^19
"BLD",708,"KRN",.4,0)
.4
"BLD",708,"KRN",.401,0)
.401
"BLD",708,"KRN",.402,0)
.402
"BLD",708,"KRN",.403,0)
.403
"BLD",708,"KRN",.5,0)
.5
"BLD",708,"KRN",.84,0)
.84
"BLD",708,"KRN",3.6,0)
3.6
"BLD",708,"KRN",3.8,0)
3.8
"BLD",708,"KRN",9.2,0)
9.2
"BLD",708,"KRN",9.8,0)
9.8
"BLD",708,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",708,"KRN",9.8,"NM",1,0)
XOBESIG^^0^B35924230
"BLD",708,"KRN",9.8,"NM","B","XOBESIG",1)

"BLD",708,"KRN",19,0)
19
"BLD",708,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",708,"KRN",19,"NM",1,0)
XOBE ESIG USER^^0
"BLD",708,"KRN",19,"NM","B","XOBE ESIG USER",1)

"BLD",708,"KRN",19.1,0)
19.1
"BLD",708,"KRN",101,0)
101
"BLD",708,"KRN",409.61,0)
409.61
"BLD",708,"KRN",771,0)
771
"BLD",708,"KRN",870,0)
870
"BLD",708,"KRN",8989.51,0)
8989.51
"BLD",708,"KRN",8989.52,0)
8989.52
"BLD",708,"KRN",8994,0)
8994
"BLD",708,"KRN",8994,"NM",0)
^9.68A^5^5
"BLD",708,"KRN",8994,"NM",1,0)
XOBE ESIG GET CODE^^0
"BLD",708,"KRN",8994,"NM",2,0)
XOBE ESIG GET DATA^^0
"BLD",708,"KRN",8994,"NM",3,0)
XOBE ESIG SET CODE^^0
"BLD",708,"KRN",8994,"NM",4,0)
XOBE ESIG SET DATA^^0
"BLD",708,"KRN",8994,"NM",5,0)
XOBE ESIG IS DEFINED^^0
"BLD",708,"KRN",8994,"NM","B","XOBE ESIG GET CODE",1)

"BLD",708,"KRN",8994,"NM","B","XOBE ESIG GET DATA",2)

"BLD",708,"KRN",8994,"NM","B","XOBE ESIG IS DEFINED",5)

"BLD",708,"KRN",8994,"NM","B","XOBE ESIG SET CODE",3)

"BLD",708,"KRN",8994,"NM","B","XOBE ESIG SET DATA",4)

"BLD",708,"KRN","B",.4,.4)

"BLD",708,"KRN","B",.401,.401)

"BLD",708,"KRN","B",.402,.402)

"BLD",708,"KRN","B",.403,.403)

"BLD",708,"KRN","B",.5,.5)

"BLD",708,"KRN","B",.84,.84)

"BLD",708,"KRN","B",3.6,3.6)

"BLD",708,"KRN","B",3.8,3.8)

"BLD",708,"KRN","B",9.2,9.2)

"BLD",708,"KRN","B",9.8,9.8)

"BLD",708,"KRN","B",19,19)

"BLD",708,"KRN","B",19.1,19.1)

"BLD",708,"KRN","B",101,101)

"BLD",708,"KRN","B",409.61,409.61)

"BLD",708,"KRN","B",771,771)

"BLD",708,"KRN","B",870,870)

"BLD",708,"KRN","B",8989.51,8989.51)

"BLD",708,"KRN","B",8989.52,8989.52)

"BLD",708,"KRN","B",8994,8994)

"BLD",708,"QUES",0)
^9.62^^
"BLD",708,"REQB",0)
^9.611^^
"KRN",19,786,-1)
0^1
"KRN",19,786,0)
XOBE ESIG USER^Context for Electronic Signature Users^^B^^^^^^^^ELECTRONIC SIGNATURE
"KRN",19,786,1,0)
^^2^2^3031001^
"KRN",19,786,1,1,0)
This option is the Electronic Signature user context that contains the 
"KRN",19,786,1,2,0)
RPCs used by the Electronic Signature toolset.
"KRN",19,786,99.1)
59266,29344
"KRN",19,786,"RPC",0)
^19.05P^5^5
"KRN",19,786,"RPC",1,0)
XOBE ESIG GET CODE
"KRN",19,786,"RPC",2,0)
XOBE ESIG SET CODE
"KRN",19,786,"RPC",3,0)
XOBE ESIG GET DATA
"KRN",19,786,"RPC",4,0)
XOBE ESIG SET DATA
"KRN",19,786,"RPC",5,0)
XOBE ESIG IS DEFINED
"KRN",19,786,"U")
CONTEXT FOR ELECTRONIC SIGNATU
"KRN",8994,87,-1)
0^1
"KRN",8994,87,0)
XOBE ESIG GET CODE^GETCODE^XOBESIG^1^^
"KRN",8994,87,1,0)
^^2^2^3030729^
"KRN",8994,87,1,1,0)
Returns the electronic signature code for the user from the NEW PERSON
"KRN",8994,87,1,2,0)
file.
"KRN",8994,87,2,0)
^8994.02A^^0
"KRN",8994,88,-1)
0^3
"KRN",8994,88,0)
XOBE ESIG SET CODE^SETCODE^XOBESIG^1
"KRN",8994,88,1,0)
^^1^1^3030729^
"KRN",8994,88,1,1,0)
Saves the user's electronic signature code in the NEW PERSON file.
"KRN",8994,88,2,0)
^8994.02A^1^1
"KRN",8994,88,2,1,0)
ESIG^1
"KRN",8994,88,2,"B","ESIG",1)

"KRN",8994,89,-1)
0^2
"KRN",8994,89,0)
XOBE ESIG GET DATA^GETDATA^XOBESIG^2
"KRN",8994,89,1,0)
^^2^2^3030729^
"KRN",8994,89,1,1,0)
Returns the data for the electronic signature block-related  fields from 
"KRN",8994,89,1,2,0)
the NEW PERSON file.
"KRN",8994,90,-1)
0^4
"KRN",8994,90,0)
XOBE ESIG SET DATA^SETDATA^XOBESIG^2
"KRN",8994,90,1,0)
^^1^1^3030729^
"KRN",8994,90,1,1,0)
Saves the electronic signature block-related data in the NEW PERSON file.
"KRN",8994,90,2,0)
^8994.02A^1^1
"KRN",8994,90,2,1,0)
VALUES^2
"KRN",8994,90,2,"B","VALUES",1)

"KRN",8994,91,-1)
0^5
"KRN",8994,91,0)
XOBE ESIG IS DEFINED^ISDEF^XOBESIG^1
"KRN",8994,91,1,0)
^8994.01^2^2^3050628^^
"KRN",8994,91,1,1,0)
Returns whether the user currently has an Electronic Signature Code 
"KRN",8994,91,1,2,0)
defined. Returns 0 if the e-sig code is null, 1 otherwise.
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",104,-1)
1^1
"PKG",104,0)
ELECTRONIC SIGNATURE^XOBE^Foundations electronic signature code utilities.
"PKG",104,1,0)
^9.41A^3^3^3060711^^^^
"PKG",104,1,1,0)
Contains the M-side portion of the electronic signature methods for 
"PKG",104,1,2,0)
rehosted applications that validate, store, and retrieve electronic 
"PKG",104,1,3,0)
signature data.
"PKG",104,22,0)
^9.49I^1^1
"PKG",104,22,1,0)
1.0^3060714^3051122^1
"PKG",104,22,1,1,0)
^^4^4^3060714
"PKG",104,22,1,1,1,0)
This build contains the routine(s), RPC context option, and remote 
"PKG",104,22,1,1,2,0)
procedures used by the Electronic Signature (XOBE) package.
"PKG",104,22,1,1,3,0)
 
"PKG",104,22,1,1,4,0)
[Build: 1.0.0.024]
"PKG",104,"VERSION")
1.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","XOBESIG")
0^1^B35924230
"RTN","XOBESIG",1,0)
XOBESIG ;Oakland/mko-ELECTRONIC SIGNATURE CODES ;9:29 AM  14 Jul 2006
"RTN","XOBESIG",2,0)
 ;;1.0;Electronic Signature;;Jul 14, 2006
"RTN","XOBESIG",3,0)
 ;;Foundations Electronic Signature Release v1.0 [Build: 1.0.0.024]
"RTN","XOBESIG",4,0)
 ;
"RTN","XOBESIG",5,0)
ISDEF(RESULT) ; -- Returns whether the user has an Electronic Signature Code defined.
"RTN","XOBESIG",6,0)
 ; Returns:
"RTN","XOBESIG",7,0)
 ;   0 : if the user has no esig defined
"RTN","XOBESIG",8,0)
 ;   1 : if the user does have an esig defined
"RTN","XOBESIG",9,0)
 ;  -2 : if DUZ doesn't refer to a valid user
"RTN","XOBESIG",10,0)
 ;
"RTN","XOBESIG",11,0)
 ; Remote Procedure: XOBE ESIG IS DEFINED
"RTN","XOBESIG",12,0)
 ;
"RTN","XOBESIG",13,0)
 NEW XOBESIG,XOBEMSG,DIERR
"RTN","XOBESIG",14,0)
 KILL RESULT
"RTN","XOBESIG",15,0)
 ;
"RTN","XOBESIG",16,0)
 ; -- Get current esig
"RTN","XOBESIG",17,0)
 SET XOBESIG=$$GET1^DIQ(200,+$GET(DUZ)_",",20.4,"I","","XOBEMSG")
"RTN","XOBESIG",18,0)
 ;
"RTN","XOBESIG",19,0)
 ; -- Check result
"RTN","XOBESIG",20,0)
 IF $GET(DIERR),$DATA(XOBEMSG("DIERR","E",601)) SET RESULT=-2
"RTN","XOBESIG",21,0)
 ELSE  IF XOBESIG]"" SET RESULT=1
"RTN","XOBESIG",22,0)
 ELSE  SET RESULT=0
"RTN","XOBESIG",23,0)
 QUIT
"RTN","XOBESIG",24,0)
 ;
"RTN","XOBESIG",25,0)
GETCODE(RESULT) ; -- Get user's Electronic Signature Code
"RTN","XOBESIG",26,0)
 ; Return:
"RTN","XOBESIG",27,0)
 ;   Electronic signature code
"RTN","XOBESIG",28,0)
 ;   -2 : if DUZ doesn't refer to a valid user
"RTN","XOBESIG",29,0)
 ;
"RTN","XOBESIG",30,0)
 ; Remote Procedure: XOBE ESIG GET CODE
"RTN","XOBESIG",31,0)
 ;
"RTN","XOBESIG",32,0)
 NEW XOBESIG,XOBEMSG,DIERR
"RTN","XOBESIG",33,0)
 KILL RESULT
"RTN","XOBESIG",34,0)
 ;
"RTN","XOBESIG",35,0)
 ; -- Get current esig
"RTN","XOBESIG",36,0)
 SET XOBESIG=$$GET1^DIQ(200,+$GET(DUZ)_",",20.4,"I","","XOBEMSG")
"RTN","XOBESIG",37,0)
 ;
"RTN","XOBESIG",38,0)
 ; -- Return result
"RTN","XOBESIG",39,0)
 IF $GET(DIERR),$DATA(XOBEMSG("DIERR","E",601)) SET RESULT=-2
"RTN","XOBESIG",40,0)
 ELSE  IF XOBESIG="" SET RESULT=""
"RTN","XOBESIG",41,0)
 ELSE  SET RESULT=$$ENCRYP^XUSRB1(XOBESIG)
"RTN","XOBESIG",42,0)
 QUIT
"RTN","XOBESIG",43,0)
 ;
"RTN","XOBESIG",44,0)
SETCODE(RESULT,XOBESIG) ; -- Save user's Electronic Signature Code
"RTN","XOBESIG",45,0)
 ; Return:
"RTN","XOBESIG",46,0)
 ;   1 : if new ESig was correctly filed
"RTN","XOBESIG",47,0)
 ;   0 : if new ESig code is not valid
"RTN","XOBESIG",48,0)
 ;  -1 : if new ESig is the same as the old one
"RTN","XOBESIG",49,0)
 ;  -2 : if DUZ doesn't refer to a valid user
"RTN","XOBESIG",50,0)
 ;
"RTN","XOBESIG",51,0)
 ; Remote Procedure: XOBE ESIG SET CODE
"RTN","XOBESIG",52,0)
 ;
"RTN","XOBESIG",53,0)
 NEW X,XOBEIENS,XOBEOLD,XOBEFDA,XOBEMSG,DIERR
"RTN","XOBESIG",54,0)
 KILL RESULT
"RTN","XOBESIG",55,0)
 ;
"RTN","XOBESIG",56,0)
 ; -- Get the old esig code
"RTN","XOBESIG",57,0)
 SET XOBEIENS=+$GET(DUZ)_","
"RTN","XOBESIG",58,0)
 SET XOBEOLD=$$GET1^DIQ(200,XOBEIENS,20.4,"I","","XOBEMSG")
"RTN","XOBESIG",59,0)
 IF $GET(DIERR) DO  QUIT
"RTN","XOBESIG",60,0)
 . IF $DATA(XOBEMSG("DIERR","E",601)) SET RESULT=-2
"RTN","XOBESIG",61,0)
 . ELSE  SET RESULT=0
"RTN","XOBESIG",62,0)
 ;
"RTN","XOBESIG",63,0)
 ; -- Validate format of new esig
"RTN","XOBESIG",64,0)
 IF $GET(XOBESIG)="" SET RESULT=0 QUIT
"RTN","XOBESIG",65,0)
 SET X=$$DECRYP^XUSRB1(XOBESIG)
"RTN","XOBESIG",66,0)
 IF X'?.UNP!($LENGTH(X)>20)!($LENGTH(X)<6) SET RESULT=0 QUIT
"RTN","XOBESIG",67,0)
 ;
"RTN","XOBESIG",68,0)
 ; -- Make sure old and new are different
"RTN","XOBESIG",69,0)
 DO HASH^XUSHSHP
"RTN","XOBESIG",70,0)
 IF X=XOBEOLD SET RESULT=-1 QUIT
"RTN","XOBESIG",71,0)
 ;
"RTN","XOBESIG",72,0)
 ; -- Save the new code
"RTN","XOBESIG",73,0)
 SET XOBEFDA(200,XOBEIENS,20.4)=X
"RTN","XOBESIG",74,0)
 DO FILE^DIE("","XOBEFDA","XOBEMSG")
"RTN","XOBESIG",75,0)
 IF $GET(DIERR) SET RESULT=0 QUIT
"RTN","XOBESIG",76,0)
 ;
"RTN","XOBESIG",77,0)
 SET RESULT=1
"RTN","XOBESIG",78,0)
 QUIT
"RTN","XOBESIG",79,0)
 ;
"RTN","XOBESIG",80,0)
GETDATA(RESULT) ; -- Return electronic signature block-related data
"RTN","XOBESIG",81,0)
 ; Return:
"RTN","XOBESIG",82,0)
 ;   Electronic signature block-related data
"RTN","XOBESIG",83,0)
 ;   -2 : if DUZ doesn't refer to a valid user
"RTN","XOBESIG",84,0)
 ;
"RTN","XOBESIG",85,0)
 ; Remote Procedure: XOBE ESIG GET DATA
"RTN","XOBESIG",86,0)
 ;
"RTN","XOBESIG",87,0)
 NEW XOBEIENS,XOBEFLDS,XOBETARG,XOBEMSG,DIERR
"RTN","XOBESIG",88,0)
 KILL RESULT
"RTN","XOBESIG",89,0)
 ;
"RTN","XOBESIG",90,0)
 ; -- Setup input variables to GETS^DIQ call
"RTN","XOBESIG",91,0)
 SET XOBEIENS=+$GET(DUZ)_","
"RTN","XOBESIG",92,0)
 SET XOBEFLDS="1;20.2;20.3;.132;.137;.138"
"RTN","XOBESIG",93,0)
 ;
"RTN","XOBESIG",94,0)
 ; -- Get data
"RTN","XOBESIG",95,0)
 DO GETS^DIQ(200,XOBEIENS,XOBEFLDS,"I","XOBETARG","XOBEMSG")
"RTN","XOBESIG",96,0)
 IF $GET(DIERR) DO  QUIT
"RTN","XOBESIG",97,0)
 . IF $DATA(XOBEMSG("DIERR","E",601)) SET RESULT=-2
"RTN","XOBESIG",98,0)
 . ELSE  SET RESULT=""
"RTN","XOBESIG",99,0)
 ;
"RTN","XOBESIG",100,0)
 ; -- Put data into RESULT array
"RTN","XOBESIG",101,0)
 SET RESULT(1)=$$VALUE($GET(XOBETARG(200,XOBEIENS,1,"I"))) ;initial
"RTN","XOBESIG",102,0)
 SET RESULT(2)=$$VALUE($GET(XOBETARG(200,XOBEIENS,20.2,"I"))) ;sig blk printed name
"RTN","XOBESIG",103,0)
 SET RESULT(3)=$$VALUE($GET(XOBETARG(200,XOBEIENS,20.3,"I"))) ;sig blk title
"RTN","XOBESIG",104,0)
 SET RESULT(4)=$$VALUE($GET(XOBETARG(200,XOBEIENS,.132,"I"))) ;office phone
"RTN","XOBESIG",105,0)
 SET RESULT(5)=$$VALUE($GET(XOBETARG(200,XOBEIENS,.137,"I"))) ;voice pager
"RTN","XOBESIG",106,0)
 SET RESULT(6)=$$VALUE($GET(XOBETARG(200,XOBEIENS,.138,"I"))) ;digital pager
"RTN","XOBESIG",107,0)
 QUIT
"RTN","XOBESIG",108,0)
 ;
"RTN","XOBESIG",109,0)
VALUE(X) ; -- Return X or if X is "", return @
"RTN","XOBESIG",110,0)
 QUIT $SELECT($GET(X)="":"@",1:X)
"RTN","XOBESIG",111,0)
 ;
"RTN","XOBESIG",112,0)
SETDATA(RESULT,XOBEVALS) ; -- Save electronic signature block-related data
"RTN","XOBESIG",113,0)
 ; Return:
"RTN","XOBESIG",114,0)
 ;            1 : if successfully filed
"RTN","XOBESIG",115,0)
 ;           -2 : if DUZ doesn't refer to a valid user
"RTN","XOBESIG",116,0)
 ;   error text : if Filer call failed
"RTN","XOBESIG",117,0)
 ;
"RTN","XOBESIG",118,0)
 ; Remote Procedure: XOBE ESIG SET DATA
"RTN","XOBESIG",119,0)
 ;
"RTN","XOBESIG",120,0)
 NEW XOBEFDA,DIERR,XOBEMSG,XOBEIENS
"RTN","XOBESIG",121,0)
 KILL RESULT
"RTN","XOBESIG",122,0)
 SET XOBEIENS=+$GET(DUZ)_","
"RTN","XOBESIG",123,0)
 ;
"RTN","XOBESIG",124,0)
 ; -- Setup up FDA for FILE^DIE call
"RTN","XOBESIG",125,0)
 SET XOBEFDA(200,XOBEIENS,1)=$GET(XOBEVALS("initial"))
"RTN","XOBESIG",126,0)
 SET XOBEFDA(200,XOBEIENS,20.2)=$GET(XOBEVALS("signature block printed name"))
"RTN","XOBESIG",127,0)
 SET XOBEFDA(200,XOBEIENS,20.3)=$GET(XOBEVALS("signature block title"))
"RTN","XOBESIG",128,0)
 SET XOBEFDA(200,XOBEIENS,.132)=$GET(XOBEVALS("office phone"))
"RTN","XOBESIG",129,0)
 SET XOBEFDA(200,XOBEIENS,.137)=$GET(XOBEVALS("voice pager"))
"RTN","XOBESIG",130,0)
 SET XOBEFDA(200,XOBEIENS,.138)=$GET(XOBEVALS("digital pager"))
"RTN","XOBESIG",131,0)
 ;
"RTN","XOBESIG",132,0)
 ; -- File the data
"RTN","XOBESIG",133,0)
 DO FILE^DIE("ET","XOBEFDA","XOBEMSG")
"RTN","XOBESIG",134,0)
 ;
"RTN","XOBESIG",135,0)
 ; -- Handle errors
"RTN","XOBESIG",136,0)
 IF $GET(DIERR) DO  QUIT
"RTN","XOBESIG",137,0)
 . ; -- Entry not found error
"RTN","XOBESIG",138,0)
 . IF $DATA(XOBEMSG("DIERR","E",601)) SET RESULT(1)=-2 QUIT
"RTN","XOBESIG",139,0)
 . ;
"RTN","XOBESIG",140,0)
 . ; -- Put error message into RESULT array
"RTN","XOBESIG",141,0)
 . NEW ERR,LN
"RTN","XOBESIG",142,0)
 . SET ERR=0 FOR  SET ERR=$ORDER(XOBEMSG("DIERR",ERR)) QUIT:'ERR  DO
"RTN","XOBESIG",143,0)
 .. DO ADDTEXT("Error #"_XOBEMSG("DIERR",ERR),.RESULT)
"RTN","XOBESIG",144,0)
 .. DO ADDTEXT("--------------",.RESULT)
"RTN","XOBESIG",145,0)
 .. SET LN=0 FOR  SET LN=$ORDER(XOBEMSG("DIERR",ERR,"TEXT",LN)) QUIT:'LN  DO
"RTN","XOBESIG",146,0)
 ... DO ADDTEXT(XOBEMSG("DIERR",ERR,"TEXT",LN),.RESULT)
"RTN","XOBESIG",147,0)
 .. ;
"RTN","XOBESIG",148,0)
 .. ; -- If the error returned is 701 (invalid input),
"RTN","XOBESIG",149,0)
 .. ; -- put the ? help for the field into the RESULT array
"RTN","XOBESIG",150,0)
 .. IF XOBEMSG("DIERR",ERR)=701 DO ADDHELP(.XOBEMSG,ERR,.RESULT)
"RTN","XOBESIG",151,0)
 ;
"RTN","XOBESIG",152,0)
 ; -- Values were successfully saved
"RTN","XOBESIG",153,0)
 SET RESULT(1)=1
"RTN","XOBESIG",154,0)
 QUIT
"RTN","XOBESIG",155,0)
 ;
"RTN","XOBESIG",156,0)
ADDHELP(XOBEMSG,ERR,RESULT) ;
"RTN","XOBESIG",157,0)
 NEW FILE,IENS,FIELD,LINE,MSG,DIERR,DIHELP
"RTN","XOBESIG",158,0)
 ;
"RTN","XOBESIG",159,0)
 ; -- Get file/field information from the XOBEMSG array
"RTN","XOBESIG",160,0)
 SET FILE=$GET(XOBEMSG("DIERR",ERR,"PARAM","FILE"))
"RTN","XOBESIG",161,0)
 SET IENS=$GET(XOBEMSG("DIERR",ERR,"PARAM","IENS"))
"RTN","XOBESIG",162,0)
 SET FIELD=$GET(XOBEMSG("DIERR",ERR,"PARAM","FIELD"))
"RTN","XOBESIG",163,0)
 ;
"RTN","XOBESIG",164,0)
 ; -- Get the ? help for the field
"RTN","XOBESIG",165,0)
 DO HELP^DIE(FILE,IENS,FIELD,"?","MSG")
"RTN","XOBESIG",166,0)
 ;
"RTN","XOBESIG",167,0)
 ; -- Add the ? help to the RESULT array
"RTN","XOBESIG",168,0)
 SET LINE=0 FOR  SET LINE=$ORDER(MSG("DIHELP",LINE)) Q:'LINE  DO
"RTN","XOBESIG",169,0)
 . DO ADDTEXT(MSG("DIHELP",LINE),.RESULT)
"RTN","XOBESIG",170,0)
 DO ADDTEXT("",.RESULT)
"RTN","XOBESIG",171,0)
 QUIT
"RTN","XOBESIG",172,0)
 ;
"RTN","XOBESIG",173,0)
ADDTEXT(TEXT,RESULT) ;Add TEXT to RESULT array
"RTN","XOBESIG",174,0)
 NEW NODE
"RTN","XOBESIG",175,0)
 SET NODE=$ORDER(RESULT(" "),-1)+1
"RTN","XOBESIG",176,0)
 SET RESULT(NODE)=$GET(TEXT)
"RTN","XOBESIG",177,0)
 QUIT
"RTN","XOBESIG",178,0)
 ;
"RTN","XOBESIG",179,0)
VALIDATE(RESULT,XOBESIG) ; -- Return whether passed ESig is valid
"RTN","XOBESIG",180,0)
 ; Return:
"RTN","XOBESIG",181,0)
 ;   1 if ESig is valid
"RTN","XOBESIG",182,0)
 ;   0 if ESig is invalid
"RTN","XOBESIG",183,0)
 ;  -1 if ESig is null
"RTN","XOBESIG",184,0)
 ;  -2 if DUZ doesn't refer to a valid user
"RTN","XOBESIG",185,0)
 ; This entry point is not currently used.
"RTN","XOBESIG",186,0)
 ;
"RTN","XOBESIG",187,0)
 NEW X,XOBECURR,XOBEIENS,XOBEMSG,DIERR
"RTN","XOBESIG",188,0)
 KILL RESULT
"RTN","XOBESIG",189,0)
 ;
"RTN","XOBESIG",190,0)
 ; -- Get esig from New Person file
"RTN","XOBESIG",191,0)
 SET XOBEIENS=+$GET(DUZ)_","
"RTN","XOBESIG",192,0)
 SET XOBECURR=$$GET1^DIQ(200,XOBEIENS,20.4,"I","","XOBEMSG")
"RTN","XOBESIG",193,0)
 ;
"RTN","XOBESIG",194,0)
 ; -- Check that DUZ refers to a valid user
"RTN","XOBESIG",195,0)
 IF $GET(DIERR),$DATA(XOBEMSG("DIERR","E",601)) SET RESULT=-2 QUIT
"RTN","XOBESIG",196,0)
 ;
"RTN","XOBESIG",197,0)
 ; -- Check for null esig
"RTN","XOBESIG",198,0)
 IF XOBECURR="" SET RESULT=-1 QUIT
"RTN","XOBESIG",199,0)
 ;
"RTN","XOBESIG",200,0)
 ; -- Check whether old matches value passed in
"RTN","XOBESIG",201,0)
 SET X=$$DECRYP^XUSRB1(XOBESIG)
"RTN","XOBESIG",202,0)
 DO HASH^XUSHSHP
"RTN","XOBESIG",203,0)
 SET RESULT=X=XOBECURR
"RTN","XOBESIG",204,0)
 QUIT
"VER")
8.0^22.0
**END**
**END**
