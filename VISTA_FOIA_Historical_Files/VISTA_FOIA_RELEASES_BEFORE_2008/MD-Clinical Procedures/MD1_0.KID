KIDS Distribution saved on May 21, 2004@09:37:31
Clinical Procedures Version 1.0.
**KIDS**:MD 1.0^

**INSTALL NAME**
MD 1.0
"BLD",4936,0)
MD 1.0^CLINICAL PROCEDURES^0^3040521^y
"BLD",4936,1,0)
^^1^1^3031022^^^^
"BLD",4936,1,1,0)
Clinical Procedures Version 1.0.
"BLD",4936,4,0)
^9.64PA^703.1^4
"BLD",4936,4,702,0)
702
"BLD",4936,4,702,222)
y^y^f^^^^n
"BLD",4936,4,702.01,0)
702.01
"BLD",4936,4,702.01,222)
y^y^f^^^^n
"BLD",4936,4,702.09,0)
702.09
"BLD",4936,4,702.09,222)
y^y^f^^n^MD RELEASED INSTRUMENTS^y^a^n
"BLD",4936,4,703.1,0)
703.1
"BLD",4936,4,703.1,222)
y^y^f^^^^n
"BLD",4936,4,"B",702,702)

"BLD",4936,4,"B",702.01,702.01)

"BLD",4936,4,"B",702.09,702.09)

"BLD",4936,4,"B",703.1,703.1)

"BLD",4936,"ABPKG")
n
"BLD",4936,"INID")
n^n^n
"BLD",4936,"INIT")
MDPOST
"BLD",4936,"KRN",0)
^9.67PA^8989.52^19
"BLD",4936,"KRN",.4,0)
.4
"BLD",4936,"KRN",.4,"NM",0)
^9.68A^^0
"BLD",4936,"KRN",.401,0)
.401
"BLD",4936,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",4936,"KRN",.402,0)
.402
"BLD",4936,"KRN",.403,0)
.403
"BLD",4936,"KRN",.5,0)
.5
"BLD",4936,"KRN",.84,0)
.84
"BLD",4936,"KRN",3.6,0)
3.6
"BLD",4936,"KRN",3.8,0)
3.8
"BLD",4936,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",4936,"KRN",3.8,"NM",1,0)
MD DEVICE ERRORS^^0
"BLD",4936,"KRN",3.8,"NM","B","MD DEVICE ERRORS",1)

"BLD",4936,"KRN",9.2,0)
9.2
"BLD",4936,"KRN",9.8,0)
9.8
"BLD",4936,"KRN",9.8,"NM",0)
^9.68A^34^31
"BLD",4936,"KRN",9.8,"NM",1,0)
MDAPI^^0^B39106259
"BLD",4936,"KRN",9.8,"NM",5,0)
MDHL7A^^0^B40079774
"BLD",4936,"KRN",9.8,"NM",6,0)
MDHL7B^^0^B9814726
"BLD",4936,"KRN",9.8,"NM",7,0)
MDHL7BH^^0^B11540394
"BLD",4936,"KRN",9.8,"NM",8,0)
MDHL7E^^0^B1292108
"BLD",4936,"KRN",9.8,"NM",9,0)
MDHL7M1^^0^B3843075
"BLD",4936,"KRN",9.8,"NM",10,0)
MDHL7MCA^^0^B13615202
"BLD",4936,"KRN",9.8,"NM",11,0)
MDHL7MCX^^0^B2663326
"BLD",4936,"KRN",9.8,"NM",12,0)
MDHL7P1^^0^B352508
"BLD",4936,"KRN",9.8,"NM",13,0)
MDHL7R1^^0^B7248294
"BLD",4936,"KRN",9.8,"NM",14,0)
MDHL7U^^0^B5939416
"BLD",4936,"KRN",9.8,"NM",15,0)
MDHL7U1^^0^B15807235
"BLD",4936,"KRN",9.8,"NM",16,0)
MDHL7U2^^0^B34632878
"BLD",4936,"KRN",9.8,"NM",17,0)
MDHL7U3^^0^B550271
"BLD",4936,"KRN",9.8,"NM",18,0)
MDHL7X^^0^B3333344
"BLD",4936,"KRN",9.8,"NM",19,0)
MDPCE^^0^B4297640
"BLD",4936,"KRN",9.8,"NM",20,0)
MDPOST^^0^B10491828
"BLD",4936,"KRN",9.8,"NM",21,0)
MDPOST1^^0^B70965250
"BLD",4936,"KRN",9.8,"NM",22,0)
MDRPCOD^^0^B8917458
"BLD",4936,"KRN",9.8,"NM",23,0)
MDRPCOG^^0^B21809669
"BLD",4936,"KRN",9.8,"NM",24,0)
MDRPCOL^^0^B1101282
"BLD",4936,"KRN",9.8,"NM",25,0)
MDRPCOO^^0^B31723157
"BLD",4936,"KRN",9.8,"NM",26,0)
MDRPCOP^^0^B72382549
"BLD",4936,"KRN",9.8,"NM",27,0)
MDRPCOR^^0^B86251025
"BLD",4936,"KRN",9.8,"NM",28,0)
MDRPCOT^^0^B61489222
"BLD",4936,"KRN",9.8,"NM",29,0)
MDRPCOT1^^0^B26833377
"BLD",4936,"KRN",9.8,"NM",30,0)
MDRPCOU^^0^B4441113
"BLD",4936,"KRN",9.8,"NM",31,0)
MDRPCOV^^0^B19395157
"BLD",4936,"KRN",9.8,"NM",32,0)
MDRPCU^^0^B35769615
"BLD",4936,"KRN",9.8,"NM",33,0)
MDHL7K2^^0^B3501528
"BLD",4936,"KRN",9.8,"NM",34,0)
MDHL7XXX^^0^B4422982
"BLD",4936,"KRN",9.8,"NM","B","MDAPI",1)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7A",5)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7B",6)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7BH",7)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7E",8)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7K2",33)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7M1",9)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7MCA",10)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7MCX",11)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7P1",12)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7R1",13)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7U",14)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7U1",15)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7U2",16)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7U3",17)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7X",18)

"BLD",4936,"KRN",9.8,"NM","B","MDHL7XXX",34)

"BLD",4936,"KRN",9.8,"NM","B","MDPCE",19)

"BLD",4936,"KRN",9.8,"NM","B","MDPOST",20)

"BLD",4936,"KRN",9.8,"NM","B","MDPOST1",21)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCOD",22)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCOG",23)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCOL",24)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCOO",25)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCOP",26)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCOR",27)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCOT",28)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCOT1",29)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCOU",30)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCOV",31)

"BLD",4936,"KRN",9.8,"NM","B","MDRPCU",32)

"BLD",4936,"KRN",19,0)
19
"BLD",4936,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",4936,"KRN",19,"NM",1,0)
MD GUI MANAGER^^0
"BLD",4936,"KRN",19,"NM",2,0)
MD GUI USER^^0
"BLD",4936,"KRN",19,"NM","B","MD GUI MANAGER",1)

"BLD",4936,"KRN",19,"NM","B","MD GUI USER",2)

"BLD",4936,"KRN",19.1,0)
19.1
"BLD",4936,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",4936,"KRN",19.1,"NM",1,0)
MD MANAGER^^0
"BLD",4936,"KRN",19.1,"NM","B","MD MANAGER",1)

"BLD",4936,"KRN",101,0)
101
"BLD",4936,"KRN",101,"NM",0)
^9.68A^4^4
"BLD",4936,"KRN",101,"NM",1,0)
MCAR Device Client^^0
"BLD",4936,"KRN",101,"NM",2,0)
MCAR Device Server^^0
"BLD",4936,"KRN",101,"NM",3,0)
MCAR ORM CLIENT^^0
"BLD",4936,"KRN",101,"NM",4,0)
MCAR ORM SERVER^^0
"BLD",4936,"KRN",101,"NM","B","MCAR Device Client",1)

"BLD",4936,"KRN",101,"NM","B","MCAR Device Server",2)

"BLD",4936,"KRN",101,"NM","B","MCAR ORM CLIENT",3)

"BLD",4936,"KRN",101,"NM","B","MCAR ORM SERVER",4)

"BLD",4936,"KRN",409.61,0)
409.61
"BLD",4936,"KRN",771,0)
771
"BLD",4936,"KRN",771,"NM",0)
^9.68A^3^2
"BLD",4936,"KRN",771,"NM",1,0)
INST-MCAR^^0
"BLD",4936,"KRN",771,"NM",3,0)
MCAR-INST^^0
"BLD",4936,"KRN",771,"NM","B","INST-MCAR",1)

"BLD",4936,"KRN",771,"NM","B","MCAR-INST",3)

"BLD",4936,"KRN",870,0)
870
"BLD",4936,"KRN",870,"NM",0)
^9.68A^2^2
"BLD",4936,"KRN",870,"NM",1,0)
MCAR INST^^0
"BLD",4936,"KRN",870,"NM",2,0)
MCAR OUT^^0
"BLD",4936,"KRN",870,"NM","B","MCAR INST",1)

"BLD",4936,"KRN",870,"NM","B","MCAR OUT",2)

"BLD",4936,"KRN",8989.51,0)
8989.51
"BLD",4936,"KRN",8989.51,"NM",0)
^9.68A^13^13
"BLD",4936,"KRN",8989.51,"NM",1,0)
MD ALLOW EXTERNAL ATTACHMENTS^^0
"BLD",4936,"KRN",8989.51,"NM",2,0)
MD CRC BYPASS^^0
"BLD",4936,"KRN",8989.51,"NM",3,0)
MD CRC VALUES^^0
"BLD",4936,"KRN",8989.51,"NM",4,0)
MD DAYS FOR INSTRUMENT DATA^^0
"BLD",4936,"KRN",8989.51,"NM",5,0)
MD FILE EXTENSIONS^^0
"BLD",4936,"KRN",8989.51,"NM",6,0)
MD GATEWAY^^0
"BLD",4936,"KRN",8989.51,"NM",7,0)
MD HFS SCRATCH^^0
"BLD",4936,"KRN",8989.51,"NM",8,0)
MD IMAGING XFER^^0
"BLD",4936,"KRN",8989.51,"NM",9,0)
MD OFFLINE MESSAGE^^0
"BLD",4936,"KRN",8989.51,"NM",10,0)
MD ONLINE^^0
"BLD",4936,"KRN",8989.51,"NM",11,0)
MD USER DEFAULTS^^0
"BLD",4936,"KRN",8989.51,"NM",12,0)
MD VERSION CHK^^0
"BLD",4936,"KRN",8989.51,"NM",13,0)
MD WEBLINK^^0
"BLD",4936,"KRN",8989.51,"NM","B","MD ALLOW EXTERNAL ATTACHMENTS",1)

"BLD",4936,"KRN",8989.51,"NM","B","MD CRC BYPASS",2)

"BLD",4936,"KRN",8989.51,"NM","B","MD CRC VALUES",3)

"BLD",4936,"KRN",8989.51,"NM","B","MD DAYS FOR INSTRUMENT DATA",4)

"BLD",4936,"KRN",8989.51,"NM","B","MD FILE EXTENSIONS",5)

"BLD",4936,"KRN",8989.51,"NM","B","MD GATEWAY",6)

"BLD",4936,"KRN",8989.51,"NM","B","MD HFS SCRATCH",7)

"BLD",4936,"KRN",8989.51,"NM","B","MD IMAGING XFER",8)

"BLD",4936,"KRN",8989.51,"NM","B","MD OFFLINE MESSAGE",9)

"BLD",4936,"KRN",8989.51,"NM","B","MD ONLINE",10)

"BLD",4936,"KRN",8989.51,"NM","B","MD USER DEFAULTS",11)

"BLD",4936,"KRN",8989.51,"NM","B","MD VERSION CHK",12)

"BLD",4936,"KRN",8989.51,"NM","B","MD WEBLINK",13)

"BLD",4936,"KRN",8989.52,0)
8989.52
"BLD",4936,"KRN",8994,0)
8994
"BLD",4936,"KRN",8994,"NM",0)
^9.68A^9^9
"BLD",4936,"KRN",8994,"NM",1,0)
MD GATEWAY^^0
"BLD",4936,"KRN",8994,"NM",2,0)
MD TMDOUTPUT^^0
"BLD",4936,"KRN",8994,"NM",3,0)
MD TMDPARAMETER^^0
"BLD",4936,"KRN",8994,"NM",4,0)
MD TMDPATIENT^^0
"BLD",4936,"KRN",8994,"NM",5,0)
MD TMDPROCEDURE^^0
"BLD",4936,"KRN",8994,"NM",6,0)
MD TMDRECORDID^^0
"BLD",4936,"KRN",8994,"NM",7,0)
MD TMDTRANSACTION^^0
"BLD",4936,"KRN",8994,"NM",8,0)
MD TMDUSER^^0
"BLD",4936,"KRN",8994,"NM",9,0)
MD UTILITIES^^0
"BLD",4936,"KRN",8994,"NM","B","MD GATEWAY",1)

"BLD",4936,"KRN",8994,"NM","B","MD TMDOUTPUT",2)

"BLD",4936,"KRN",8994,"NM","B","MD TMDPARAMETER",3)

"BLD",4936,"KRN",8994,"NM","B","MD TMDPATIENT",4)

"BLD",4936,"KRN",8994,"NM","B","MD TMDPROCEDURE",5)

"BLD",4936,"KRN",8994,"NM","B","MD TMDRECORDID",6)

"BLD",4936,"KRN",8994,"NM","B","MD TMDTRANSACTION",7)

"BLD",4936,"KRN",8994,"NM","B","MD TMDUSER",8)

"BLD",4936,"KRN",8994,"NM","B","MD UTILITIES",9)

"BLD",4936,"KRN","B",.4,.4)

"BLD",4936,"KRN","B",.401,.401)

"BLD",4936,"KRN","B",.402,.402)

"BLD",4936,"KRN","B",.403,.403)

"BLD",4936,"KRN","B",.5,.5)

"BLD",4936,"KRN","B",.84,.84)

"BLD",4936,"KRN","B",3.6,3.6)

"BLD",4936,"KRN","B",3.8,3.8)

"BLD",4936,"KRN","B",9.2,9.2)

"BLD",4936,"KRN","B",9.8,9.8)

"BLD",4936,"KRN","B",19,19)

"BLD",4936,"KRN","B",19.1,19.1)

"BLD",4936,"KRN","B",101,101)

"BLD",4936,"KRN","B",409.61,409.61)

"BLD",4936,"KRN","B",771,771)

"BLD",4936,"KRN","B",870,870)

"BLD",4936,"KRN","B",8989.51,8989.51)

"BLD",4936,"KRN","B",8989.52,8989.52)

"BLD",4936,"KRN","B",8994,8994)

"BLD",4936,"QUES",0)
^9.62^^
"BLD",4936,"REQB",0)
^9.611^6^6
"BLD",4936,"REQB",1,0)
GMRC*3.0*17^1
"BLD",4936,"REQB",2,0)
OR*3.0*112^1
"BLD",4936,"REQB",3,0)
TIU*1.0*109^1
"BLD",4936,"REQB",4,0)
MAG*3.0*7^1
"BLD",4936,"REQB",5,0)
HL*1.6*93^1
"BLD",4936,"REQB",6,0)
HL*1.6*98^1
"BLD",4936,"REQB","B","GMRC*3.0*17",1)

"BLD",4936,"REQB","B","HL*1.6*93",5)

"BLD",4936,"REQB","B","HL*1.6*98",6)

"BLD",4936,"REQB","B","MAG*3.0*7",4)

"BLD",4936,"REQB","B","OR*3.0*112",2)

"BLD",4936,"REQB","B","TIU*1.0*109",3)

"DATA",702.09,6,0)
OLYMPUS^^Olympus Device Interface^^0^Olympus^^^0^
"DATA",702.09,6,.1)
MDHL7E^C^0^^^OLYMPUS^^
"DATA",702.09,6,.2)
^
"DATA",702.09,6,.3)
1^1
"DATA",702.09,7,0)
SMC^^Sensormedics Device Interface^^0^Sensormedics^^^0^
"DATA",702.09,7,.1)
MDHL7P1^C^1^^^SMC^^
"DATA",702.09,7,.3)
1^0
"DATA",702.09,27,0)
Muse EKG^^Muse EKG Device Interface^^^Marquette MUSE^^^0
"DATA",702.09,27,.1)
MDHL7M1^C^1^^^Muse EKG^93000=EKG^
"DATA",702.09,27,.3)
^^^^1
"DATA",702.09,32,0)
Muse Pacemaker EKG^^Muse Pacemaker EKG Device Interface^^^Marquette MUSE^^^0
"DATA",702.09,32,.1)
MDHL7M1^C^1^^^Muse EKG^93040=Pacemaker EKG^
"DATA",702.09,32,.3)
^^^^1
"DATA",702.09,33,0)
Muse Exercise^^ Muse Exercise Device Interface^^^Marquette MUSE^^^0
"DATA",702.09,33,.1)
MDHL7M1^C^1^^^Muse EKG^93015=Exercise^
"DATA",702.09,33,.3)
^^^^1
"DATA",702.09,34,0)
Muse Holter^^Muse Holter Device Interface^^^Marquette MUSE^^^0
"DATA",702.09,34,.1)
MDHL7M1^C^1^^^Muse EKG^93266=Holter^
"DATA",702.09,34,.3)
^^^^1
"DATA",702.09,35,0)
OLYMPUS EGD^^Olympus EGD Device Interface^^1^Olympus^^^0
"DATA",702.09,35,.1)
MDHL7E^C^1^^^OLYMPUS^EGD=EGD^
"DATA",702.09,35,.3)
1^1
"DATA",702.09,36,0)
OLYMPUS Colonoscopy^^Olympus Colonoscopy Device Interface^^1^Olympus^^^0
"DATA",702.09,36,.1)
MDHL7E^C^1^^^OLYMPUS^COL=Colonoscopy^
"DATA",702.09,36,.3)
1^1
"DATA",702.09,37,0)
OLYMPUS Sigmoidoscopy^^Olympus Sigmoidoscopy Device Interface^^0^Olympus^^^0
"DATA",702.09,37,.1)
MDHL7E^C^1^^^OLYMPUS^SIG=Sigmoidoscopy^
"DATA",702.09,37,.3)
1^1
"DATA",702.09,39,0)
OLYMPUS ERCP^^Olympus ERCP Device Interface^^0^Olympus^^^0
"DATA",702.09,39,.1)
MDHL7E^C^1^^^OLYMPUS^ERCP=ERCP^
"DATA",702.09,39,.3)
1^1
"DATA",702.09,44,0)
Muse^^Muse Device Interface^^0^MUSE^^^0
"DATA",702.09,44,.1)
MDHL7M1^C^0^^^Muse EKG^^
"DATA",702.09,44,.3)
^0^^^1
"DATA",702.09,49,0)
OLYMPUS Endo Ultrasound^^Olympus Endo Ultrasound Device Interface^^0^Olympus^^^0
"DATA",702.09,49,.1)
MDHL7E^C^1^^^OLYMPUS^EUS=Endoscopic Ultrasound
"DATA",702.09,49,.3)
1^1
"DATA",702.09,50,0)
OLYMPUS EGDPEG^^Olympus EGDPEG Device Interface^^0^Olympus^^^0
"DATA",702.09,50,.1)
MDHL7E^C^1^^^OLYMPUS^EGDPEG=Esophago-Gastro-Duodenoscopy with Percuta
"DATA",702.09,50,.3)
1^1
"DATA",702.09,51,0)
OLYMPUS Liver Biopsy^^Olympus Liver Biopsy Device Interface^^0^Olympus^^^0
"DATA",702.09,51,.1)
MDHL7E^C^1^^^OLYMPUS^LIVRBX=Liver Biopsy
"DATA",702.09,51,.3)
1^1
"DATA",702.09,52,0)
OLYMPUS Paracentesis^^Olympus Paracentesis Device Interface^^0^Olympus^^^0
"DATA",702.09,52,.1)
MDHL7E^C^1^^^OLYMPUS^PARA=Paracentesis
"DATA",702.09,52,.3)
1^1
"DATA",702.09,53,0)
OLYMPUS Enteroscopy^^Olympus Enteroscopy Device Interface^^1^Olympus^^^0
"DATA",702.09,53,.1)
MDHL7E^C^1^^^OLYMPUS^ENTERO=Enteroscopy
"DATA",702.09,53,.3)
1^1
"DATA",702.09,60,0)
CLINIVISION^^Clinivision Resporatory^^0^Clinivision^^^0
"DATA",702.09,60,.1)
MDHL7R1^C^0^^^CLINIVISION
"DATA",702.09,60,.3)
^1^^^0
"FIA",702)
CP TRANSACTION
"FIA",702,0)
^MDD(702,
"FIA",702,0,0)
702PIAO
"FIA",702,0,1)
y^y^f^^^^n
"FIA",702,0,10)

"FIA",702,0,11)

"FIA",702,0,"RLRO")

"FIA",702,0,"VR")
1.0^MD
"FIA",702,702)
0
"FIA",702,702.091)
0
"FIA",702,702.1)
0
"FIA",702.01)
CP DEFINITION
"FIA",702.01,0)
^MDS(702.01,
"FIA",702.01,0,0)
702.01I
"FIA",702.01,0,1)
y^y^f^^^^n
"FIA",702.01,0,10)

"FIA",702.01,0,11)

"FIA",702.01,0,"RLRO")

"FIA",702.01,0,"VR")
1.0^MD
"FIA",702.01,702.01)
0
"FIA",702.01,702.011)
0
"FIA",702.09)
CP INSTRUMENT
"FIA",702.09,0)
^MDS(702.09,
"FIA",702.09,0,0)
702.09I
"FIA",702.09,0,1)
y^y^f^^n^MD RELEASED INSTRUMENTS^y^a^n
"FIA",702.09,0,10)

"FIA",702.09,0,11)

"FIA",702.09,0,"RLRO")
^DIBT(1528,1)
"FIA",702.09,0,"VR")
1.0^MD
"FIA",702.09,702.09)
0
"FIA",703.1)
CP RESULT REPORT
"FIA",703.1,0)
^MDD(703.1,
"FIA",703.1,0,0)
703.1
"FIA",703.1,0,1)
y^y^f^^^^n
"FIA",703.1,0,10)

"FIA",703.1,0,11)

"FIA",703.1,0,"RLRO")

"FIA",703.1,0,"VR")
1.0^MD
"FIA",703.1,703.1)
0
"FIA",703.1,703.11)
0
"FIA",703.1,703.12)
0
"INIT")
MDPOST
"KRN",3.8,233,-1)
0^1
"KRN",3.8,233,0)
MD DEVICE ERRORS^PU^y^^^^
"KRN",3.8,233,2,0)
^3.801^1^1^3020730^^^^
"KRN",3.8,233,2,1,0)
Primary Mail Group for Medical Device errors.
"KRN",3.8,233,3)

"KRN",19,10994,-1)
0^1
"KRN",19,10994,0)
MD GUI MANAGER^MD GUI MANAGER^^B^^^^^^^^
"KRN",19,10994,99.1)
59627,24877
"KRN",19,10994,"RPC",0)
^19.05P^10^10
"KRN",19,10994,"RPC",2,0)
MD TMDOUTPUT
"KRN",19,10994,"RPC",3,0)
MD TMDPARAMETER
"KRN",19,10994,"RPC",4,0)
MD TMDPATIENT
"KRN",19,10994,"RPC",5,0)
MD TMDPROCEDURE
"KRN",19,10994,"RPC",6,0)
MD TMDRECORDID
"KRN",19,10994,"RPC",7,0)
MD TMDTRANSACTION
"KRN",19,10994,"RPC",8,0)
MD TMDUSER
"KRN",19,10994,"RPC",9,0)
MD UTILITIES
"KRN",19,10994,"RPC",10,0)
MD GATEWAY
"KRN",19,10994,"U")
MD GUI MANAGER
"KRN",19,11207,-1)
0^2
"KRN",19,11207,0)
MD GUI USER^MD GUI USER^^B^^^^^^^^
"KRN",19,11207,99.1)
59644,50780
"KRN",19,11207,"RPC",0)
^19.05P^9^9
"KRN",19,11207,"RPC",2,0)
MD TMDOUTPUT
"KRN",19,11207,"RPC",3,0)
MD TMDPARAMETER
"KRN",19,11207,"RPC",4,0)
MD TMDPATIENT
"KRN",19,11207,"RPC",5,0)
MD TMDPROCEDURE
"KRN",19,11207,"RPC",6,0)
MD TMDRECORDID
"KRN",19,11207,"RPC",7,0)
MD TMDTRANSACTION
"KRN",19,11207,"RPC",8,0)
MD TMDUSER
"KRN",19,11207,"RPC",9,0)
MD UTILITIES
"KRN",19,11207,"U")
MD GUI USER
"KRN",19.1,431,-1)
0^1
"KRN",19.1,431,0)
MD MANAGER^Clinical Procedures Manager
"KRN",19.1,431,1,0)
^^12^12^3020805^
"KRN",19.1,431,1,1,0)
The MD MANAGER key controls access the 'Update Study Status' and the 
"KRN",19.1,431,1,2,0)
'Delete Study' options. A user holding this key will be able to use the 
"KRN",19.1,431,1,3,0)
'Update Study Status' option on any study currently displayed on the 
"KRN",19.1,431,1,4,0)
screen. Holders of this key will also be taken directly to the 'Update 
"KRN",19.1,431,1,5,0)
Study Status' option when opening a study marked in status 'Error'. The 
"KRN",19.1,431,1,6,0)
'Update Study Status' option does not do any validation on the new status 
"KRN",19.1,431,1,7,0)
assigned to the study. The 'Delete Study' option will attempt to delete 
"KRN",19.1,431,1,8,0)
the study after checking the business rules on the VistA server for the 
"KRN",19.1,431,1,9,0)
study given it's current status and state on the server. This key should 
"KRN",19.1,431,1,10,0)
be given only with extreme care and to only to those users that fully 
"KRN",19.1,431,1,11,0)
understand the status structure, and the ramifications of changing the 
"KRN",19.1,431,1,12,0)
status or deletion of a study.
"KRN",19.1,431,2,0)
^19.12PA
"KRN",101,4340,-1)
0^2
"KRN",101,4340,0)
MCAR Device Server^Instrument HL7 Event Driver^^E^^^^^^^^MEDICINE
"KRN",101,4340,1,0)
^101.06^2^2^3020715^^^^
"KRN",101,4340,1,1,0)
This protocol is used by the HL7 package to send results to
"KRN",101,4340,1,2,0)
Vista from various clinical instrumentation.
"KRN",101,4340,99)
59276,54156
"KRN",101,4340,770)
INST-MCAR^^ORU^R01^^P^^^^2.3^
"KRN",101,4340,772)

"KRN",101,4340,773)
0^0
"KRN",101,4340,775,0)
^101.0775PA^1^1
"KRN",101,4340,775,1,0)
4341
"KRN",101,4340,775,1,"^")
MCAR Device Client
"KRN",101,4341,-1)
0^1
"KRN",101,4341,0)
MCAR Device Client^Instrument Device Client^^S^^^^^^^^MEDICINE
"KRN",101,4341,1,0)
^101.06^2^2^3020417^^^^
"KRN",101,4341,1,1,0)
Subscriber protocol for sending data to Vista from
"KRN",101,4341,1,2,0)
clinical instruments.
"KRN",101,4341,15)

"KRN",101,4341,20)

"KRN",101,4341,99)
59276,54156
"KRN",101,4341,770)
^MCAR-INST^ORU^R01^^P^MCAR INST^^^2.3^ACK
"KRN",101,4341,771)
D ^MDHL7A
"KRN",101,4341,773)
0^0^^
"KRN",101,5281,-1)
0^4
"KRN",101,5281,0)
MCAR ORM SERVER^Clinical Procedures ORM Protocol Server^^E^^^^^^^^
"KRN",101,5281,99)
59276,54156
"KRN",101,5281,770)
MCAR-INST^^ORM^O01^^^^^^2.3^
"KRN",101,5281,775,0)
^101.0775PA^1^1
"KRN",101,5281,775,1,0)
5282
"KRN",101,5281,775,1,"^")
MCAR ORM CLIENT
"KRN",101,5282,-1)
0^3
"KRN",101,5282,0)
MCAR ORM CLIENT^^^S^^^^^^^^
"KRN",101,5282,770)
^INST-MCAR^^O02^^^^^^^ORR
"KRN",101,5282,773)
0^0^0
"KRN",101,5282,774)
Q
"KRN",771,29,-1)
0^3
"KRN",771,29,0)
MCAR-INST^a^VISTA^POSTMASTER^^^US
"KRN",771,29,"EC")
^~\&
"KRN",771,29,"FS")
|
"KRN",771,29,"SEG",0)
^771.05P
"KRN",771,32,-1)
0^1
"KRN",771,32,0)
INST-MCAR^a^^^^^US
"KRN",771,32,"EC")
^~\&
"KRN",771,32,"FS")
|
"KRN",870,15,-1)
0^1
"KRN",870,15,0)
MCAR INST^^TCP^^^^^^^^^^^^^^^^^^100
"KRN",870,15,200)
^3^^60^60^^^^^I
"KRN",870,15,400)
^9026^S^N^^
"KRN",870,51,-1)
0^2
"KRN",870,51,0)
MCAR OUT^^TCP^^^^^^^^^^^^^^^^^^100
"KRN",870,51,200)
^3^^60^60^^^^^I
"KRN",870,51,400)
10.3.17.157^9028^C^N^^
"KRN",8989.51,316,-1)
0^11
"KRN",8989.51,316,0)
MD USER DEFAULTS^CP User Defaults^1^Parameter setting^Parameter value^0
"KRN",8989.51,316,1)
F^1:250
"KRN",8989.51,316,6)
F^1:250
"KRN",8989.51,316,20,0)
^^2^2^3020731^
"KRN",8989.51,316,20,1,0)
This parameter is used to store a users default parameter settings.  Each 
"KRN",8989.51,316,20,2,0)
setting is defined on the client.
"KRN",8989.51,316,30,0)
^8989.513I^1^1
"KRN",8989.51,316,30,1,0)
1^200
"KRN",8989.51,320,-1)
0^6
"KRN",8989.51,320,0)
MD GATEWAY^CP Gateway Parameters^1^Parameter Name^Parameter Value
"KRN",8989.51,320,1)
F^1:255
"KRN",8989.51,320,6)
F^1:255
"KRN",8989.51,320,30,0)
^8989.513I^1^1
"KRN",8989.51,320,30,1,0)
1^4.2
"KRN",8989.51,321,-1)
0^3
"KRN",8989.51,321,0)
MD CRC VALUES^Clinical Procedures CRC Values^1^Executable or Library Name^CRC Value^0
"KRN",8989.51,321,1)
F^1:15
"KRN",8989.51,321,6)
F^1:30
"KRN",8989.51,321,20,0)
^^3^3^3021115^
"KRN",8989.51,321,20,1,0)
This parameter is used to store the CRC values for the most recent
"KRN",8989.51,321,20,2,0)
versions of executable and libraries.  Use the Tools menu on the CPManager
"KRN",8989.51,321,20,3,0)
program to calculate the needed CRC Values of the current versions.
"KRN",8989.51,321,30,0)
^8989.513I^1^1
"KRN",8989.51,321,30,1,0)
1^4.2
"KRN",8989.51,4657,-1)
0^13
"KRN",8989.51,4657,0)
MD WEBLINK^Clinical Procedures Home Page^0^^Web Address
"KRN",8989.51,4657,1)
F^1:250
"KRN",8989.51,4657,20,0)
^8989.512^3^3^3010328^^^
"KRN",8989.51,4657,20,1,0)
This parameter contains the web address for the Clinical Procedures home
"KRN",8989.51,4657,20,2,0)
page.  This can be modified to a local address in the event that the pages
"KRN",8989.51,4657,20,3,0)
are downloaded to be displayed from a local server location.
"KRN",8989.51,4657,30,0)
^8989.513I^1^1
"KRN",8989.51,4657,30,1,0)
1^4.2
"KRN",8989.51,4659,-1)
0^4
"KRN",8989.51,4659,0)
MD DAYS FOR INSTRUMENT DATA^Temporary instrument data life (Days)^0^^Days^0
"KRN",8989.51,4659,1)
N^0:365
"KRN",8989.51,4659,20,0)
^8989.512^2^2^3011015^^^
"KRN",8989.51,4659,20,1,0)
The number of days to keep data from the auto-instruments after
"KRN",8989.51,4659,20,2,0)
the data has been associated with a Clinical Procedures report.
"KRN",8989.51,4659,30,0)
^8989.513I^1^1
"KRN",8989.51,4659,30,1,0)
1^4.2
"KRN",8989.51,4683,-1)
0^10
"KRN",8989.51,4683,0)
MD ONLINE^Clinical Procedure Online/Offline^0^^Is Clinical Procedures Online^0
"KRN",8989.51,4683,1)
Y^^Enter 'Yes' to allow access to CP
"KRN",8989.51,4683,20,0)
^8989.512^1^1^3010328^^
"KRN",8989.51,4683,20,1,0)
This parameter controls access to the Clinical Procedures package.
"KRN",8989.51,4683,30,0)
^8989.513I^1^1
"KRN",8989.51,4683,30,1,0)
1^4.2
"KRN",8989.51,4695,-1)
0^7
"KRN",8989.51,4695,0)
MD HFS SCRATCH^VistA Scratch HFS Directory^0^^Directory name
"KRN",8989.51,4695,1)
F^1:250^Enter in an OS level directory
"KRN",8989.51,4695,20,0)
^8989.512^2^2^3011220^^^
"KRN",8989.51,4695,20,1,0)
Contains the directory specification for the Kernel OPEN^%ZISH call.  This
"KRN",8989.51,4695,20,2,0)
directory should be accessible for read/write operations by all CP users.
"KRN",8989.51,4695,30,0)
^8989.513I^1^1
"KRN",8989.51,4695,30,1,0)
1^4.2
"KRN",8989.51,4705,-1)
0^12
"KRN",8989.51,4705,0)
MD VERSION CHK^Version Compatibility^1^Application:Version^Compatible with current server version^0
"KRN",8989.51,4705,1)
Y^
"KRN",8989.51,4705,6)
F^1:30
"KRN",8989.51,4705,20,0)
^8989.512^3^3^3020822^^^^
"KRN",8989.51,4705,20,1,0)
This parameter is used to store the application:versions that are compatible
"KRN",8989.51,4705,20,2,0)
with the current server version of Clinical Procedures.  Instance format
"KRN",8989.51,4705,20,3,0)
of APPLICATION:VERSION  (example: CPMANAGER.EXE:0.0.0.0).
"KRN",8989.51,4705,30,0)
^8989.513I^1^1
"KRN",8989.51,4705,30,1,0)
1^4.2
"KRN",8989.51,4717,-1)
0^8
"KRN",8989.51,4717,0)
MD IMAGING XFER^Imaging Network Share^0^^Imaging Network Share
"KRN",8989.51,4717,1)
F^1:250
"KRN",8989.51,4717,20,0)
^8989.512^3^3^3010221^
"KRN",8989.51,4717,20,1,0)
This parameter contains the name of a network server, share, and path
"KRN",8989.51,4717,20,2,0)
(UNC) to a location where Clinical Procedures can put files for pick-up by
"KRN",8989.51,4717,20,3,0)
the Imaging background processor for archiving.
"KRN",8989.51,4717,30,0)
^8989.513I^1^1
"KRN",8989.51,4717,30,1,0)
1^4.2
"KRN",8989.51,4723,-1)
0^5
"KRN",8989.51,4723,0)
MD FILE EXTENSIONS^Imaging File Types^1^Extension^File type^0
"KRN",8989.51,4723,1)
F^1:80^Enter a description of this file type
"KRN",8989.51,4723,6)
F^2:10^Enter the extension of the file type with a '.'
"KRN",8989.51,4723,7)
K:X'?1".".9ULN X
"KRN",8989.51,4723,20,0)
^8989.512^2^2^3010328^^
"KRN",8989.51,4723,20,1,0)
This parameter stores a list of valid file types and the associated
"KRN",8989.51,4723,20,2,0)
extensions of these files.
"KRN",8989.51,4723,30,0)
^8989.513I^1^1
"KRN",8989.51,4723,30,1,0)
1^4.2
"KRN",8989.51,4749,-1)
0^2
"KRN",8989.51,4749,0)
MD CRC BYPASS^Bypass CRC Checking^0^^Bypass CRC Checking
"KRN",8989.51,4749,1)
Y
"KRN",8989.51,4749,20,0)
^^2^2^3011015^
"KRN",8989.51,4749,20,1,0)
Set this value to 'Yes' to prevent the client application from verifying
"KRN",8989.51,4749,20,2,0)
its CRC Value at startup.
"KRN",8989.51,4749,30,0)
^8989.513I^1^1
"KRN",8989.51,4749,30,1,0)
1^4.2
"KRN",8989.51,4750,-1)
0^9
"KRN",8989.51,4750,0)
MD OFFLINE MESSAGE^Offline message^0^^Offline Message
"KRN",8989.51,4750,1)
W
"KRN",8989.51,4750,20,0)
^^2^2^3011024^
"KRN",8989.51,4750,20,1,0)
This parameter contains a message to display to the users when the Clinical
"KRN",8989.51,4750,20,2,0)
Procedures application is offline.
"KRN",8989.51,4750,30,0)
^8989.513I^1^1
"KRN",8989.51,4750,30,1,0)
1^4.2
"KRN",8989.51,4753,-1)
0^1
"KRN",8989.51,4753,0)
MD ALLOW EXTERNAL ATTACHMENTS^Allow non-instrument attachments^0^^Allowed
"KRN",8989.51,4753,1)
Y
"KRN",8989.51,4753,20,0)
^^2^2^3011220^
"KRN",8989.51,4753,20,1,0)
Set this value to Yes to allow users of CPUser.exe to attach documents to 
"KRN",8989.51,4753,20,2,0)
the transaction that are not created by an instrument.
"KRN",8989.51,4753,30,0)
^8989.513I^1^1
"KRN",8989.51,4753,30,1,0)
1^4.2
"KRN",8994,990,-1)
0^8
"KRN",8994,990,0)
MD TMDUSER^RPC^MDRPCOU^4^R^^^1
"KRN",8994,990,1,0)
^8994.01^6^6^3040316^^^^
"KRN",8994,990,1,1,0)
Manages the VistA interface to the TMDUser object.
"KRN",8994,990,1,2,0)
 
"KRN",8994,990,1,3,0)
Available options:
"KRN",8994,990,1,4,0)
  SIGNON     Connects session to the server and attempts signon.
"KRN",8994,990,1,5,0)
  ESIG       Verifies passed e-sig.
"KRN",8994,990,1,6,0)
  CHKVER     Verifies client version is compatible with server.
"KRN",8994,990,2,0)
^8994.02A^2^2
"KRN",8994,990,2,1,0)
OPTION^1^30^1^1
"KRN",8994,990,2,1,1,0)
^^1^1^3000731^
"KRN",8994,990,2,1,1,1,0)
See RPC description.
"KRN",8994,990,2,2,0)
DATA^1^250^0^2
"KRN",8994,990,2,2,1,0)
^8994.021^1^1^3011113^^^
"KRN",8994,990,2,2,1,1,0)
Required data for selected option.
"KRN",8994,990,2,"B","DATA",2)

"KRN",8994,990,2,"B","OPTION",1)

"KRN",8994,990,2,"PARAMSEQ",1,1)

"KRN",8994,990,2,"PARAMSEQ",2,2)

"KRN",8994,990,3,0)
^8994.03^1^1^3011113^^^
"KRN",8994,990,3,1,0)
Returns global array of status or requested data.
"KRN",8994,991,-1)
0^3
"KRN",8994,991,0)
MD TMDPARAMETER^RPC^MDRPCOV^4^R^^^1
"KRN",8994,991,1,0)
^8994.01^10^10^3040316^^^^
"KRN",8994,991,1,1,0)
Used to set/retrieve/modify parameters in the Kernel ToolKit PARAMETERS
"KRN",8994,991,1,2,0)
(XPAR) files.
"KRN",8994,991,1,3,0)
 
"KRN",8994,991,1,4,0)
RPC is called as follows:
"KRN",8994,991,1,5,0)
 
"KRN",8994,991,1,6,0)
Param[0] := OPTION
"KRN",8994,991,1,7,0)
Param[1] := Entity
"KRN",8994,991,1,8,0)
Param[2] := Parameter name
"KRN",8994,991,1,9,0)
Param[3] := Instance
"KRN",8994,991,1,10,0)
Param[4] := Value
"KRN",8994,991,2,0)
^8994.02A^5^5
"KRN",8994,991,2,1,0)
OPTION^1^10^1^1
"KRN",8994,991,2,1,1,0)
^^13^13^3000524^
"KRN",8994,991,2,1,1,1,0)
Contains the option for the RPC.  RPC is called as shown:
"KRN",8994,991,2,1,1,2,0)
 
"KRN",8994,991,2,1,1,3,0)
Options and other required parameters include:
"KRN",8994,991,2,1,1,4,0)
 
"KRN",8994,991,2,1,1,5,0)
ENTVAL    ENT
"KRN",8994,991,2,1,1,6,0)
GETPAR    ENT,PAR,INST
"KRN",8994,991,2,1,1,7,0)
GETLST    ENT,PAR
"KRN",8994,991,2,1,1,8,0)
GETWP     ENT,PAR,INST
"KRN",8994,991,2,1,1,9,0)
SETPAR    ENT,PAR,INST,VAL
"KRN",8994,991,2,1,1,10,0)
SETLST    ENT,PAR,,.VAL  (Uses instance 0-n)
"KRN",8994,991,2,1,1,11,0)
SETWP     ENT,PAR,INST,.VAL
"KRN",8994,991,2,1,1,12,0)
DELPAR    ENT,PAR,INST
"KRN",8994,991,2,1,1,13,0)
DELLST    ENT,PAR
"KRN",8994,991,2,2,0)
ENTITY^1^20^0^2
"KRN",8994,991,2,2,1,0)
^^28^28^3000524^
"KRN",8994,991,2,2,1,1,0)
An entity is a level at which you can define a parameter.  The entities
"KRN",8994,991,2,2,1,2,0)
allowed are stored in the Parameter Entity file (#8989.518).  The list of
"KRN",8994,991,2,2,1,3,0)
allowable entities at the time this utility was released were: 
"KRN",8994,991,2,2,1,4,0)
    
"KRN",8994,991,2,2,1,5,0)
Prefix  Message       Points to File 
"KRN",8994,991,2,2,1,6,0)
PKG     Package       Package (9.4) 
"KRN",8994,991,2,2,1,7,0)
SYS     System        Domain (4.2) 
"KRN",8994,991,2,2,1,8,0)
DIV     Division      Institution (4) 
"KRN",8994,991,2,2,1,9,0)
SRV     Service       Service/Section (49) 
"KRN",8994,991,2,2,1,10,0)
LOC     Location      Hospital Location (44) 
"KRN",8994,991,2,2,1,11,0)
TEA     Team          Team (404.51) 
"KRN",8994,991,2,2,1,12,0)
CLS     Class         Usr Class (8930) 
"KRN",8994,991,2,2,1,13,0)
USR     User          New Person (200) 
"KRN",8994,991,2,2,1,14,0)
BED     Room-Bed      Room-Bed (405.4) 
"KRN",8994,991,2,2,1,15,0)
OTL     Team (OE/RR)  OE/RR List (101.21) 
"KRN",8994,991,2,2,1,16,0)
    
"KRN",8994,991,2,2,1,17,0)
The entity may be referenced as follows: 
"KRN",8994,991,2,2,1,18,0)
1) The internal variable pointer (nnn;GLO(123,) 
"KRN",8994,991,2,2,1,19,0)
2) The external format of the variable pointer using the 3 character
"KRN",8994,991,2,2,1,20,0)
   prefix (prefix.entryname)
"KRN",8994,991,2,2,1,21,0)
3) The prefix alone to set the parameter based on current entity selected.
"KRN",8994,991,2,2,1,22,0)
   (prefix)
"KRN",8994,991,2,2,1,23,0)
 
"KRN",8994,991,2,2,1,24,0)
Method 3 uses the following values for the following entities: 
"KRN",8994,991,2,2,1,25,0)
USR     Current value of DUZ 
"KRN",8994,991,2,2,1,26,0)
DIV     Current value of DUZ(2) 
"KRN",8994,991,2,2,1,27,0)
SYS     System (domain) 
"KRN",8994,991,2,2,1,28,0)
PKG     Package to which the parameter belongs 
"KRN",8994,991,2,3,0)
PAR^1^30^0^3
"KRN",8994,991,2,3,1,0)
^8994.021^11^11^3040316^^
"KRN",8994,991,2,3,1,1,0)
A parameter is the actual name which values are stored under.  The name of
"KRN",8994,991,2,3,1,2,0)
the parameter must be namespaced and it must be unique.  Parameters can be
"KRN",8994,991,2,3,1,3,0)
defined to store the typical package parameter data (e.g. the default add
"KRN",8994,991,2,3,1,4,0)
order screen), but they can also be used to store GUI application screen
"KRN",8994,991,2,3,1,5,0)
settings a user has selected (e.g. font or window width).  When a
"KRN",8994,991,2,3,1,6,0)
parameter is defined, the entities, which may set that parameter, are also
"KRN",8994,991,2,3,1,7,0)
defined.  The definition of parameters is stored in the PARAMETER
"KRN",8994,991,2,3,1,8,0)
DEFINITION file (#8989.51). 
"KRN",8994,991,2,3,1,9,0)
 
"KRN",8994,991,2,3,1,10,0)
NOTE: This utility restricts the parameter name to those in the Clinical
"KRN",8994,991,2,3,1,11,0)
Procedures namespace (MD*).
"KRN",8994,991,2,4,0)
INST^1^30^0^4
"KRN",8994,991,2,4,1,0)
^^5^5^3000524^
"KRN",8994,991,2,4,1,1,0)
Most parameters will set instance to 1.  Instances are used when more than
"KRN",8994,991,2,4,1,2,0)
one value may be assigned to a given entity/parameter combination.  An
"KRN",8994,991,2,4,1,3,0)
example of this would be lab collection times at a division.  A single
"KRN",8994,991,2,4,1,4,0)
division may have multiple collection times.  Each collection time would
"KRN",8994,991,2,4,1,5,0)
be assigned a unique instance.
"KRN",8994,991,2,5,0)
VAL^1^80^0^5
"KRN",8994,991,2,5,1,0)
^8994.021^6^6^3040316^^^^
"KRN",8994,991,2,5,1,1,0)
A value may be assigned to every parameter for the entities allowed in the
"KRN",8994,991,2,5,1,2,0)
parameter definition.  Values are stored in the PARAMETERS file (#8989.5).
"KRN",8994,991,2,5,1,3,0)
VAL may be passed in external or internal format.  If using internal
"KRN",8994,991,2,5,1,4,0)
format for a pointer type parameter, VAL must be preceded with the grave
"KRN",8994,991,2,5,1,5,0)
(`) character.  If VAL is being assigned to a word processing parameter,
"KRN",8994,991,2,5,1,6,0)
the text is passed in the subordinate nodes of VAL (e.g. VAL(0-n)=Text).
"KRN",8994,991,2,"B","ENTITY",2)

"KRN",8994,991,2,"B","INST",4)

"KRN",8994,991,2,"B","OPTION",1)

"KRN",8994,991,2,"B","PAR",3)

"KRN",8994,991,2,"B","VAL",5)

"KRN",8994,991,2,"PARAMSEQ",1,1)

"KRN",8994,991,2,"PARAMSEQ",2,2)

"KRN",8994,991,2,"PARAMSEQ",3,3)

"KRN",8994,991,2,"PARAMSEQ",4,4)

"KRN",8994,991,2,"PARAMSEQ",5,5)

"KRN",8994,991,3,0)
^8994.03^1^1^3040316^^^^
"KRN",8994,991,3,1,0)
Returns requested data from the specified option.
"KRN",8994,1000,-1)
0^6
"KRN",8994,1000,0)
MD TMDRECORDID^RPC^MDRPCOR^4^R^^^1
"KRN",8994,1000,1,0)
^8994.01^22^22^3040316^^^^
"KRN",8994,1000,1,1,0)
General RPC for VA Fileman functions.
"KRN",8994,1000,1,2,0)
 
"KRN",8994,1000,1,3,0)
Param 1 is passed in as the function to perform and includes the
"KRN",8994,1000,1,4,0)
following:
"KRN",8994,1000,1,5,0)
 
"KRN",8994,1000,1,6,0)
LOOKUP:   Performs very generic file lookup functionality
"KRN",8994,1000,1,7,0)
VALIDATE: Validates input to a fileman field and saves to FDA
"KRN",8994,1000,1,8,0)
DELREC:   Validates ability to delete and if able deletes a record
"KRN",8994,1000,1,9,0)
SETFDA:   Validates input and stores in FDA
"KRN",8994,1000,1,10,0)
SAVEFDA:  Saves any data stored in FDA
"KRN",8994,1000,1,11,0)
CLEARFDA: Clears any data in the FDA without saving
"KRN",8994,1000,1,12,0)
GETDATA:  Retrieves a single field value
"KRN",8994,1000,1,13,0)
GETCODES: Retrieves the set of codes for a field
"KRN",8994,1000,1,14,0)
GETLABEL: Retrieves a fields TITLE or LABEL if no Title
"KRN",8994,1000,1,15,0)
GETIDS:   Returns required identifiers for a DD Number
"KRN",8994,1000,1,16,0)
GETHELP:  Returns Fileman help for a field
"KRN",8994,1000,1,17,0)
RENAME:   Validates and renames .01 field if valid
"KRN",8994,1000,1,18,0)
NEWREC:   Creates a new record
"KRN",8994,1000,1,19,0)
CHANGES:  Returns 0/1 if changes exist in FDA
"KRN",8994,1000,1,20,0)
CHKVER:   Version check Client <-> Server
"KRN",8994,1000,1,21,0)
LOCK:     Locks a record by DD and IENS
"KRN",8994,1000,1,22,0)
UNLOCK:   Unlocks record locked by LOCK option
"KRN",8994,1000,2,0)
^8994.02A^5^5
"KRN",8994,1000,2,1,0)
OPTION^1^30^1^1
"KRN",8994,1000,2,1,1,0)
^^1^1^3000517^^
"KRN",8994,1000,2,1,1,1,0)
See description of RPC.
"KRN",8994,1000,2,2,0)
DDNUM^1^10^0^2
"KRN",8994,1000,2,2,1,0)
^^1^1^3000517^
"KRN",8994,1000,2,2,1,1,0)
Contains the Data Dictionary number of the item being manipulated.
"KRN",8994,1000,2,3,0)
IENS^1^20^0^3
"KRN",8994,1000,2,3,1,0)
^^1^1^3000517^
"KRN",8994,1000,2,3,1,1,0)
Contains the IENS of the record being manipulated.
"KRN",8994,1000,2,4,0)
FLD^1^10^0^4
"KRN",8994,1000,2,4,1,0)
^^1^1^3000517^
"KRN",8994,1000,2,4,1,1,0)
Contains field specifications for the record.
"KRN",8994,1000,2,5,0)
DATA^1^30^0^5
"KRN",8994,1000,2,5,1,0)
^8994.021^1^1^3040316^^^^
"KRN",8994,1000,2,5,1,1,0)
Contains any other needed information for the call.
"KRN",8994,1000,2,"B","DATA",5)

"KRN",8994,1000,2,"B","DDNUM",2)

"KRN",8994,1000,2,"B","FLD",4)

"KRN",8994,1000,2,"B","IENS",3)

"KRN",8994,1000,2,"B","OPTION",1)

"KRN",8994,1000,2,"PARAMSEQ",1,1)

"KRN",8994,1000,2,"PARAMSEQ",2,2)

"KRN",8994,1000,2,"PARAMSEQ",3,3)

"KRN",8994,1000,2,"PARAMSEQ",4,4)

"KRN",8994,1000,2,"PARAMSEQ",5,5)

"KRN",8994,1000,3,0)
^8994.03^1^1^3040316^^^^
"KRN",8994,1000,3,1,0)
Returns global array of requested data or status.
"KRN",8994,1033,-1)
0^2
"KRN",8994,1033,0)
MD TMDOUTPUT^RPC^MDRPCOO^4^R^^^1
"KRN",8994,1033,1,0)
^8994.01^1^1^3011113^^^
"KRN",8994,1033,1,1,0)
Manages the output of VistA data to the client via the default HFS device.
"KRN",8994,1033,2,0)
^8994.02A^2^2
"KRN",8994,1033,2,1,0)
OPTION^1^30^1^1
"KRN",8994,1033,2,1,1,0)
^^1^1^3000731^
"KRN",8994,1033,2,1,1,1,0)
Currently set to EXECUTE as the only option.
"KRN",8994,1033,2,2,0)
RTN^1^30^1^2
"KRN",8994,1033,2,2,1,0)
^8994.021^3^3^3011113^^^
"KRN",8994,1033,2,2,1,1,0)
Contains the routine to produce the output.  Currently to client produces
"KRN",8994,1033,2,2,1,2,0)
this parameter in the form of TAG^ROUTINE(needed parameters) to simplify
"KRN",8994,1033,2,2,1,3,0)
the calling process.
"KRN",8994,1033,2,"B","OPTION",1)

"KRN",8994,1033,2,"B","RTN",2)

"KRN",8994,1033,2,"PARAMSEQ",1,1)

"KRN",8994,1033,2,"PARAMSEQ",2,2)

"KRN",8994,1033,3,0)
^8994.03^1^1^3011113^^^
"KRN",8994,1033,3,1,0)
Text of the requested report.
"KRN",8994,1172,-1)
0^5
"KRN",8994,1172,0)
MD TMDPROCEDURE^RPC^MDRPCOD^4^R^^^1
"KRN",8994,1172,2,0)
^8994.02A^^
"KRN",8994,1283,-1)
0^4
"KRN",8994,1283,0)
MD TMDPATIENT^RPC^MDRPCOP^4^R^^^1
"KRN",8994,1283,2,0)
^8994.02A^^
"KRN",8994,1297,-1)
0^7
"KRN",8994,1297,0)
MD TMDTRANSACTION^RPC^MDRPCOT^4^R^^^1
"KRN",8994,1609,-1)
0^9
"KRN",8994,1609,0)
MD UTILITIES^RPC^MDRPCU^4^R^^^1^1
"KRN",8994,1680,-1)
0^1
"KRN",8994,1680,0)
MD GATEWAY^RPC^MDRPCOG^4^R^^^1^1
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",365,-1)
1^1
"PKG",365,0)
CLINICAL PROCEDURES^MD^Clinical Procedures
"PKG",365,1,0)
^9.41A^5^5^3040520^^^^
"PKG",365,1,1,0)
Clinical Procedures (CP) primarily functions as a conduit for passing final
"PKG",365,1,2,0)
patient results, using HL7 messaging, between vendor clinical information
"PKG",365,1,3,0)
systems (CIS), and the VISTA hospital information system.  Clinical
"PKG",365,1,4,0)
Procedures was developed in conjunction with Consults, CPRS, TIU and
"PKG",365,1,5,0)
VISTA Imaging and is fully integrated with these packages.
"PKG",365,5)
Hines
"PKG",365,7)
^^I
"PKG",365,20,0)
^9.402P^^
"PKG",365,22,0)
^9.49I^1^1
"PKG",365,22,1,0)
1.0^3040521^2980529^363
"PKG",365,22,1,1,0)
^^1^1^3040521
"PKG",365,22,1,1,1,0)
Clinical Procedures Version 1.0.
"PKG",365,22,1,"PAH",0)
^9.4901^^0
"PKG",365,"DEV")
PETIT,DAN/HISC
"PKG",365,"VERSION")
1.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
31
"RTN","MDAPI")
0^1^B39106259
"RTN","MDAPI",1,0)
MDAPI ; HOIFO/DP/NCA - CP API Calls ; [05-05-2003 10:28]
"RTN","MDAPI",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDAPI",3,0)
 ; Description:
"RTN","MDAPI",4,0)
 ; These API's are for use by external packages communicating with CP.
"RTN","MDAPI",5,0)
 ;
"RTN","MDAPI",6,0)
 ; Integration Agreements:
"RTN","MDAPI",7,0)
 ; IA# 3378 [Restricted] Documents the APIs that external packages use to communicate with CP.
"RTN","MDAPI",8,0)
 ; IA# 3468 [Subscription] Use GMRCCP APIs.
"RTN","MDAPI",9,0)
 ;
"RTN","MDAPI",10,0)
EXTDATA(MDPROC) ; [Procedure] 
"RTN","MDAPI",11,0)
 ; Returns 0/1 for external data needed
"RTN","MDAPI",12,0)
 ; Called by Consults to determine status of consult ordered
"RTN","MDAPI",13,0)
 ;
"RTN","MDAPI",14,0)
 ; Input parameters
"RTN","MDAPI",15,0)
 ;  1. MDPROC [Literal/Required] CP Definition IEN
"RTN","MDAPI",16,0)
 ;
"RTN","MDAPI",17,0)
 Q:'$D(^MDS(702.01,+$G(MDPROC),0)) 0
"RTN","MDAPI",18,0)
 I +$P(^MDS(702.01,+$G(MDPROC),0),U,3)!($O(^(.1,0))) Q 1
"RTN","MDAPI",19,0)
 E  Q 0
"RTN","MDAPI",20,0)
 ;
"RTN","MDAPI",21,0)
ISTAT(MDARR) ; [Procedure] Called by Imaging to update status
"RTN","MDAPI",22,0)
 ; Input parameters
"RTN","MDAPI",23,0)
 ;  1. MDARR [Literal/Required] Array from Imaging
"RTN","MDAPI",24,0)
 ;
"RTN","MDAPI",25,0)
 ; Input: MDARR(0)="0^error message" or "1^success message"
"RTN","MDAPI",26,0)
 ;        MDARR(1)=TrackID  (CP;Transaction IEN)
"RTN","MDAPI",27,0)
 ;        MDARR(2)=Queue Number
"RTN","MDAPI",28,0)
 ;        MDARR(3..N)=Warnings
"RTN","MDAPI",29,0)
 N MDCON,MDCR,MDIEN,MDIENS,MDLP,MDSTAT,MDSTR,MDTIU,RESULTS
"RTN","MDAPI",30,0)
 Q:$G(MDARR(0))=""
"RTN","MDAPI",31,0)
 Q:$G(MDARR(1))=""
"RTN","MDAPI",32,0)
 Q:$P(MDARR(1),";")'="CP"
"RTN","MDAPI",33,0)
 Q:'(+$P(MDARR(1),";",2))
"RTN","MDAPI",34,0)
 S MDIEN=+$P(MDARR(1),";",2),MDIENS=MDIEN_","
"RTN","MDAPI",35,0)
 S MDSTAT=+$P(MDARR(0),"^")
"RTN","MDAPI",36,0)
 S DATA("TRANSACTION")=MDIEN
"RTN","MDAPI",37,0)
 ; Is it in error?
"RTN","MDAPI",38,0)
 I 'MDSTAT D  Q
"RTN","MDAPI",39,0)
 .D STATUS^MDRPCOT(MDIENS,2,$P(MDARR(0),"^",2))
"RTN","MDAPI",40,0)
 .S DATA("PKG")="IMAGING"
"RTN","MDAPI",41,0)
 .S DATA("MESSAGE")=$P(MDARR(0),"^",2) D RPC^MDRPCOT(.RESULTS,"ADDMSG",.DATA)
"RTN","MDAPI",42,0)
 .F MDLP=2:0 S MDLP=$O(MDARR(MDLP)) Q:'MDLP  I $G(MDARR(MDLP))'="" D
"RTN","MDAPI",43,0)
 ..S DATA("MESSAGE")=$$TRANS(MDARR(MDLP)) D RPC^MDRPCOT(.RESULTS,"ADDMSG",.DATA)
"RTN","MDAPI",44,0)
 .D IMGSTAT^MDRPCOT1(+MDIENS,2) Q
"RTN","MDAPI",45,0)
 ; Call Consults that Partial Result ready
"RTN","MDAPI",46,0)
 S MDCON=+$P(^MDD(702,MDIEN,0),"^",5),MDTIU=+$P(^(0),"^",6)
"RTN","MDAPI",47,0)
 S MDCR=$$UPDCONS^MDRPCOT1(MDCON,MDTIU)
"RTN","MDAPI",48,0)
 I +MDCR<0 D  Q
"RTN","MDAPI",49,0)
 .D STATUS^MDRPCOT(MDIENS,2,$P(MDCR,"^",2))
"RTN","MDAPI",50,0)
 .S DATA("PKG")="CONSULTS",DATA("MESSAGE")=$P(MDCR,"^",2)
"RTN","MDAPI",51,0)
 .D RPC^MDRPCOT(.RESULTS,"ADDMSG",.DATA)
"RTN","MDAPI",52,0)
 .Q
"RTN","MDAPI",53,0)
 ; Closeout the record
"RTN","MDAPI",54,0)
 D STATUS^MDRPCOT(MDIENS,3,"")
"RTN","MDAPI",55,0)
 ; Update Images Status
"RTN","MDAPI",56,0)
 D IMGSTAT^MDRPCOT1(+MDIENS,3)
"RTN","MDAPI",57,0)
 Q
"RTN","MDAPI",58,0)
 ;
"RTN","MDAPI",59,0)
ITIU(RESULTS,DFN,CONSULT,VSTRING) ; [Procedure] API for Vista Imaging
"RTN","MDAPI",60,0)
 ; This API enables VistA Imaging to retrieve/create a TIU note for
"RTN","MDAPI",61,0)
 ; a consult for attaching images to.
"RTN","MDAPI",62,0)
 ; 
"RTN","MDAPI",63,0)
 ; RESULTS(0) will equal one of the following
"RTN","MDAPI",64,0)
 ;   IEN of the TIU note if successful
"RTN","MDAPI",65,0)
 ;   or on failure one of the following status messages
"RTN","MDAPI",66,0)
 ;   -1^No patient DFN
"RTN","MDAPI",67,0)
 ;   -1^No Consult IEN
"RTN","MDAPI",68,0)
 ;   -1^No VString
"RTN","MDAPI",69,0)
 ;   -1^Error in CP transaction
"RTN","MDAPI",70,0)
 ;   -1^Unable to create CP transaction
"RTN","MDAPI",71,0)
 ;   -1^Unable to create the TIU document
"RTN","MDAPI",72,0)
 ;   -1^No such consult for this patient.
"RTN","MDAPI",73,0)
 ;
"RTN","MDAPI",74,0)
 ; Input parameters
"RTN","MDAPI",75,0)
 ;  1. RESULTS [Reference/Required] Return array
"RTN","MDAPI",76,0)
 ;  2. DFN [Literal/Required] Patient IEN
"RTN","MDAPI",77,0)
 ;  3. CONSULT [Literal/Required] Consult IEN
"RTN","MDAPI",78,0)
 ;  4. VSTRING [Literal/Optional] VString data for TIU Note (Required to create new TIU note)
"RTN","MDAPI",79,0)
 ;
"RTN","MDAPI",80,0)
 ; Variables:
"RTN","MDAPI",81,0)
 ;  MDIEN: [Private] Returns IEN from UPDATE~DIE call
"RTN","MDAPI",82,0)
 ;  MDIENS: [Private] Scratch
"RTN","MDAPI",83,0)
 ;  MDNOTE: [Private] Scratch
"RTN","MDAPI",84,0)
 ;  MDTRANS: [Private] Contains IEN of CP transaction
"RTN","MDAPI",85,0)
 ;
"RTN","MDAPI",86,0)
 ; New private variables
"RTN","MDAPI",87,0)
 NEW MDIEN,MDIENS,MDNOTE,MDTRANS
"RTN","MDAPI",88,0)
 K ^TMP($J),^TMP("MDTIUST",$J)
"RTN","MDAPI",89,0)
 N MDD,MDN,MDTIUER,MDTST,MDNEWV,MDTIUD S (MDTIUD,MDTIUER,MDTST)=""
"RTN","MDAPI",90,0)
 I '$G(DFN) S RESULTS(0)="-1^No patient DFN" Q
"RTN","MDAPI",91,0)
 I '$G(CONSULT) S RESULTS(0)="-1^No Consult IEN" Q
"RTN","MDAPI",92,0)
 ; Look for existing transaction
"RTN","MDAPI",93,0)
 S MDTIUD=$$PREV^MDRPCOT(+CONSULT,"")
"RTN","MDAPI",94,0)
 I +MDTIUD S RESULTS(0)=+MDTIUD Q
"RTN","MDAPI",95,0)
 ; No transaction, must create one for this consult
"RTN","MDAPI",96,0)
 I $G(VSTRING)="" S RESULTS(0)="-1^No VString" Q
"RTN","MDAPI",97,0)
 D CPLIST^GMRCCP(DFN,,$NA(^TMP($J)))
"RTN","MDAPI",98,0)
 S MDX="" F  S MDX=$O(^TMP($J,MDX)) Q:'MDX  I $P(^(MDX),U,5)=CONSULT D  Q
"RTN","MDAPI",99,0)
 .D NOW^%DTC S MDD=%
"RTN","MDAPI",100,0)
 .S:$L(VSTRING,";")=1 VSTRING=";"_VSTRING
"RTN","MDAPI",101,0)
 .S MDNEWV=$$GETVSTR^MDRPCOT1(DFN,VSTRING,$P(^TMP($J,MDX),U,6),MDD)
"RTN","MDAPI",102,0)
 .S MDFDA(702,"+1,",.01)=DFN
"RTN","MDAPI",103,0)
 .S MDFDA(702,"+1,",.02)=MDD
"RTN","MDAPI",104,0)
 .S MDFDA(702,"+1,",.03)=DUZ
"RTN","MDAPI",105,0)
 .S MDFDA(702,"+1,",.04)=$P(^TMP($J,MDX),U,6)
"RTN","MDAPI",106,0)
 .S MDFDA(702,"+1,",.05)=CONSULT
"RTN","MDAPI",107,0)
 .S MDFDA(702,"+1,",.07)=$P(MDNEWV,";",3)_";"_$P(MDNEWV,";",2)_";"_$P(MDNEWV,";")
"RTN","MDAPI",108,0)
 .S MDFDA(702,"+1,",.09)=0
"RTN","MDAPI",109,0)
 .;Create the new transaction
"RTN","MDAPI",110,0)
 .D UPDATE^DIE("","MDFDA","MDIEN") I '$G(MDIEN(1)) D  Q
"RTN","MDAPI",111,0)
 ..S RESULTS(0)="-1^Unable to create CP transaction"
"RTN","MDAPI",112,0)
 .
"RTN","MDAPI",113,0)
 .;Create the new TIU Note
"RTN","MDAPI",114,0)
 .S MDIENS=MDIEN(1)_","
"RTN","MDAPI",115,0)
 .S MDN=$$NEWTIUN^MDRPCOT(+MDIENS)
"RTN","MDAPI",116,0)
 .S MDNOTE=$S(MDN:$$GET1^DIQ(702,+MDIENS,.06,"I"),1:0)
"RTN","MDAPI",117,0)
 .I 'MDNOTE D  Q
"RTN","MDAPI",118,0)
 ..N DA,DIK
"RTN","MDAPI",119,0)
 ..S RESULTS(0)="-1^Unable to create the TIU document"
"RTN","MDAPI",120,0)
 ..S DA=+MDIENS,DIK="^MDD(702," D ^DIK
"RTN","MDAPI",121,0)
 .S RESULTS(0)=MDNOTE
"RTN","MDAPI",122,0)
 Q
"RTN","MDAPI",123,0)
 ;
"RTN","MDAPI",124,0)
TIUCOMP(MDNOTE) ; [Procedure] Post Signature action to complete transaction
"RTN","MDAPI",125,0)
 ; Input parameters
"RTN","MDAPI",126,0)
 ;  1. MDNOTE [Literal/Required] TIU IEN
"RTN","MDAPI",127,0)
 ;
"RTN","MDAPI",128,0)
 N MDFDA,MDRES
"RTN","MDAPI",129,0)
 S MDRES=$O(^MDD(702,"ATIU",MDNOTE,0))
"RTN","MDAPI",130,0)
 I $G(^MDD(702,+MDRES,0))="" Q 0
"RTN","MDAPI",131,0)
 I $P($G(^MDD(702,+MDRES,0)),"^",9)=3 Q 1
"RTN","MDAPI",132,0)
 S MDFDA(702,MDRES_",",.09)=3
"RTN","MDAPI",133,0)
 D FILE^DIE("","MDFDA")
"RTN","MDAPI",134,0)
 Q 1
"RTN","MDAPI",135,0)
 ;
"RTN","MDAPI",136,0)
TIUDEL(MDNOTE) ; [Procedure] TIU Note deletion Update
"RTN","MDAPI",137,0)
 ; Input parameters
"RTN","MDAPI",138,0)
 ;  1. MDNOTE [Literal/Required] TIU IEN
"RTN","MDAPI",139,0)
 ;
"RTN","MDAPI",140,0)
 N MDRES,MDFDA,RESULTS
"RTN","MDAPI",141,0)
 S MDRES="" F  S MDRES=$O(^MDD(702,"ATIU",MDNOTE,MDRES)) Q:'MDRES  D
"RTN","MDAPI",142,0)
 .Q:$G(^MDD(702,+MDRES,0))=""
"RTN","MDAPI",143,0)
 .S MDFDA(702,MDRES_",",.05)=""
"RTN","MDAPI",144,0)
 .S MDFDA(702,MDRES_",",.06)=""
"RTN","MDAPI",145,0)
 .D FILE^DIE("","MDFDA")
"RTN","MDAPI",146,0)
 .D STATUS^MDRPCOT(MDRES_",",2,"TIU note deleted.")
"RTN","MDAPI",147,0)
 .S DATA("TRANSACTION")=MDRES,DATA("PKG")="TIU"
"RTN","MDAPI",148,0)
 .S DATA("MESSAGE")="TIU note deleted." D RPC^MDRPCOT(.RESULTS,"ADDMSG",.DATA)
"RTN","MDAPI",149,0)
 Q 1
"RTN","MDAPI",150,0)
 ;
"RTN","MDAPI",151,0)
TIUREAS(MDFN,MDOLDC,MDANOTE,MDNDFN,MDNEWC,MDNEWV,MDNTIU) ; [Function] This is an API to clean up and update TIU note re-assignment.
"RTN","MDAPI",152,0)
 ; Input parameters
"RTN","MDAPI",153,0)
 ;  1. MDFN [Literal/Required] The Patient DFN whose TIU document is being re-assigned.
"RTN","MDAPI",154,0)
 ;  2. MDOLDC [Literal/Required] The Consult that the note is being re-assigned from.
"RTN","MDAPI",155,0)
 ;  3. MDANOTE [Literal/Required] The TIU Document IEN that is being re-assigned.
"RTN","MDAPI",156,0)
 ;  4. MDNDFN [Literal/Required] The Patient DFN who will be re-assigned the TIU document.
"RTN","MDAPI",157,0)
 ;  5. MDNEWC [Literal/Required] The consult number that will be assignment the TIU document.
"RTN","MDAPI",158,0)
 ;  6. MDNEWV [Literal/Required] The new visit for the TIU document assignment.
"RTN","MDAPI",159,0)
 ;  7. MDNTIU [Literal/Required] The new reassigned TIU document IEN.
"RTN","MDAPI",160,0)
 ;
"RTN","MDAPI",161,0)
 N MDD,MDTRAN,MDCHK,MDLP,MDPPR,MDREAS,MDTRANI,MDX
"RTN","MDAPI",162,0)
 I '$G(MDFN) Q "0^No DFN for the TIU note re-assignment."
"RTN","MDAPI",163,0)
 I '$G(MDOLDC) Q "0^No Old Consult # for the note re-assignment."
"RTN","MDAPI",164,0)
 I '$G(MDANOTE) Q "0^No TIU Note IEN."
"RTN","MDAPI",165,0)
 I '$G(MDNDFN) Q "0^No New DFN for the note assignment."
"RTN","MDAPI",166,0)
 I '$G(MDNEWC) Q "0^No New Consult # for the note assignment."
"RTN","MDAPI",167,0)
 I '$G(MDNTIU) Q "0^No New Reassigned TIU IEN."
"RTN","MDAPI",168,0)
 S (MDD,MDCHK,MDREAS,MDTRAN)="",MDPPR=0 K ^TMP("MDTMP",$J)
"RTN","MDAPI",169,0)
 F  S MDTRAN=$O(^MDD(702,"ACON",MDOLDC,MDTRAN)) Q:'MDTRAN  D
"RTN","MDAPI",170,0)
 .S MDCHK=$G(^MDD(702,MDTRAN,0)),MDTRANI=MDTRAN_","
"RTN","MDAPI",171,0)
 .I $P(MDCHK,U,5)=MDOLDC&($P(MDCHK,U,6)=MDANOTE) D
"RTN","MDAPI",172,0)
 ..S:'MDPPR MDPPR=$P(MDCHK,U,4)
"RTN","MDAPI",173,0)
 ..N DA,DIK S DA=+MDTRAN,DIK="^MDD(702," D ^DIK
"RTN","MDAPI",174,0)
 I 'MDPPR D
"RTN","MDAPI",175,0)
 .D CPLIST^GMRCCP(MDNDFN,,$NA(^TMP("MDTMP",$J)))
"RTN","MDAPI",176,0)
 .S MDX=""
"RTN","MDAPI",177,0)
 .F  S MDX=$O(^TMP("MDTMP",$J,MDX)) Q:'MDX  S:$P(^(MDX),U,5)=MDNEWC MDPPR=$P(^(MDX),U,6)
"RTN","MDAPI",178,0)
 K ^TMP("MDTMP",$J)
"RTN","MDAPI",179,0)
 I 'MDPPR Q 1
"RTN","MDAPI",180,0)
 D NOW^%DTC S MDD=%
"RTN","MDAPI",181,0)
 S MDREAS=$P(MDNEWV,";",3)_";"_$P(MDNEWV,";",2)_";"_$P(MDNEWV,";")
"RTN","MDAPI",182,0)
 S MDNEWV=$$GETVSTR^MDRPCOT1(MDNDFN,MDREAS,MDPPR,MDD)
"RTN","MDAPI",183,0)
 S MDFDA(702,"+1,",.01)=MDNDFN
"RTN","MDAPI",184,0)
 S MDFDA(702,"+1,",.02)=MDD
"RTN","MDAPI",185,0)
 S MDFDA(702,"+1,",.03)=DUZ
"RTN","MDAPI",186,0)
 S MDFDA(702,"+1,",.04)=MDPPR
"RTN","MDAPI",187,0)
 S MDFDA(702,"+1,",.05)=MDNEWC
"RTN","MDAPI",188,0)
 S MDFDA(702,"+1,",.06)=MDNTIU
"RTN","MDAPI",189,0)
 S MDFDA(702,"+1,",.07)=$P(MDNEWV,";",3)_";"_$P(MDNEWV,";",2)_";"_$P(MDNEWV,";")
"RTN","MDAPI",190,0)
 S MDFDA(702,"+1,",.09)=0
"RTN","MDAPI",191,0)
 D UPDATE^DIE("","MDFDA","MDTRANI") Q:'$G(MDTRANI(1)) 1
"RTN","MDAPI",192,0)
 Q 1
"RTN","MDAPI",193,0)
 ;
"RTN","MDAPI",194,0)
TRANS(STR) ; [Function] Translate the upper arrows to blanks
"RTN","MDAPI",195,0)
 ; Input parameters
"RTN","MDAPI",196,0)
 ;  1. STR [Literal/Required] Input: Text with upper arrows that needs to be removed
"RTN","MDAPI",197,0)
 ;
"RTN","MDAPI",198,0)
 I STR["^" Q $TR(STR,"^"," ")
"RTN","MDAPI",199,0)
 Q STR
"RTN","MDAPI",200,0)
 ;
"RTN","MDHL7A")
0^5^B40079774
"RTN","MDHL7A",1,0)
MDHL7A ; HOIFO/WAA - Routine to Decode HL7 for CP ; [05-07-2001 10:38]
"RTN","MDHL7A",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7A",3,0)
 ; Reference DBIA #10035 [Supported] for DPT calls.
"RTN","MDHL7A",4,0)
 ; Reference DBIA #10106 [Supported] for HLFNC calls.
"RTN","MDHL7A",5,0)
 ; Reference DBIA #10062 [Supported] for VADPT6 calls.
"RTN","MDHL7A",6,0)
 ; Reference DBIA #2701 [Supported] for MPIF001 Calls
"RTN","MDHL7A",7,0)
EN ; [Procedure] Entry Point for Message Array in MSG
"RTN","MDHL7A",8,0)
 N %,BID,CODE,CPT,DA,DATE,DFN,DIK,DLCO,DTO,DZ,ERRTX,EXAM,EXE,MDFLAG,FIL
"RTN","MDHL7A",9,0)
 N I,ICNT,ID,IMP,J,K,LBL,LINO,LINE,LN,MDAPP,MDRTN,MG,MSG,N,NAM,NEXT,NUM
"RTN","MDHL7A",10,0)
 N ORIFN,P,PID,PIEN,S,SEG,SET,SEP,MDSSN,STR,STYP,SUB,TCNT,TXT,UNIQ,SEC
"RTN","MDHL7A",11,0)
 N UNITS,VA,VAL,X,XMBODY,XMDUZ,XMSUBJ,XMTO,Z,ZZ,Z1,Z2,MDERROR
"RTN","MDHL7A",12,0)
 N ECODE,MDIEN,MDOBX,NUMZ,PNAM,ZCODE,MDDEV,MDD702,DEVNAME,DEVIEN,MDQFLG
"RTN","MDHL7A",13,0)
 N MDIORD
"RTN","MDHL7A",14,0)
 K ^TMP($J,"MDHL7A"),^TMP($J,"MDHL7")
"RTN","MDHL7A",15,0)
 S MDFLAG=0,MDERROR=0,MDQFLG=0
"RTN","MDHL7A",16,0)
 F I=1:1 X HLNEXT Q:MDQFLG  S ^TMP($J,"MDHL7A",I)=$TR(HLNODE,$C(10),""),J=0 S:HLQUIT<1 MDQFLG=1 F  S J=$O(HLNODE(J)) Q:J<1  S ^TMP($J,"MDHL7A",I,J)=$TR(HLNODE(J),$C(10),"")
"RTN","MDHL7A",17,0)
 K HLNODE
"RTN","MDHL7A",18,0)
 ;
"RTN","MDHL7A",19,0)
EN2 ; [Procedure] No Description
"RTN","MDHL7A",20,0)
 S (DEVIEN,DEVNAME)=""
"RTN","MDHL7A",21,0)
 F I=1:1 S X=$G(^TMP($J,"MDHL7A",I)) Q:X=""  Q:$E(X,1,3)="OBX"  D
"RTN","MDHL7A",22,0)
 . S:$E(X,1,3)="MSH" DEVNAME=$P(X,"|",4)
"RTN","MDHL7A",23,0)
 . I $E(X,1,3)="MSH",DEVNAME'="Instrument Manager" S DEVIEN=$O(^MDS(702.09,"B",DEVNAME,0))
"RTN","MDHL7A",24,0)
 . I $E(X,1,3)="OBR" D
"RTN","MDHL7A",25,0)
 .. I DEVNAME="Instrument Manager" D
"RTN","MDHL7A",26,0)
 ... S DEVNAME=$P(X,"|",25)
"RTN","MDHL7A",27,0)
 ... Q
"RTN","MDHL7A",28,0)
 .. S MDIORD=$P(X,"|",4)
"RTN","MDHL7A",29,0)
 .. S MDD702=$S(+MDIORD<1:"",1:$$GETSTDY^MDRPCOT1(MDIORD))
"RTN","MDHL7A",30,0)
 .. I MDD702<1 S MDD702="" Q
"RTN","MDHL7A",31,0)
 .. I MDD702>0 D  ;Validate the entry from 702 is good.
"RTN","MDHL7A",32,0)
 ... I $G(^MDD(702,MDD702,0))="" S MDD702="" Q
"RTN","MDHL7A",33,0)
 ... S DEVIEN=$$GET1^DIQ(702,MDD702,.11,"I")
"RTN","MDHL7A",34,0)
 ... I DEVIEN<1 S DEVIEN="" ; No device defined
"RTN","MDHL7A",35,0)
 ... Q
"RTN","MDHL7A",36,0)
 .. Q
"RTN","MDHL7A",37,0)
 . Q
"RTN","MDHL7A",38,0)
 I DEVIEN="",DEVNAME'="" S DEVIEN=$O(^MDS(702.09,"B",DEVNAME,0))
"RTN","MDHL7A",39,0)
 I DEVNAME="" S ERRTX="Invalid device Code" D ^MDHL7X Q
"RTN","MDHL7A",40,0)
 I DEVIEN="" S ERRTX="Invalid device entry" D ^MDHL7X Q
"RTN","MDHL7A",41,0)
 S ZCODE=$P($G(^MDS(702.09,DEVIEN,.1)),"^",2)
"RTN","MDHL7A",42,0)
 S ECODE=0,INST=DEVIEN,MDAPP=DEVNAME
"RTN","MDHL7A",43,0)
 I 'INST S ERRTX="Invalid Application Code" D ^MDHL7X Q
"RTN","MDHL7A",44,0)
 D INST^MDHL7U2(DEVIEN,.ECODE) I 'ECODE D  Q
"RTN","MDHL7A",45,0)
 . S ERRTX="Device Error" D ^MDHL7X
"RTN","MDHL7A",46,0)
 . Q
"RTN","MDHL7A",47,0)
 I (ZCODE="M")!(ZCODE="B") D  Q:MDERROR  Q:ZCODE="M"  ;
"RTN","MDHL7A",48,0)
 . S MDFLAG=1,MDERROR=0 ; Tell Medicine that CP is talking to HL7
"RTN","MDHL7A",49,0)
 . ;S MSG(1)=^TMP($J,"MDHL7A",1)
"RTN","MDHL7A",50,0)
 . ;S MSG(2)=^TMP($J,"MDHL7A",2)
"RTN","MDHL7A",51,0)
 . D ^MDHL7MCA ; Run the Medicine routines
"RTN","MDHL7A",52,0)
 . Q:MDERROR  ; Medicine found an error and sent an error back
"RTN","MDHL7A",53,0)
 . ;;I ZCODE="M" D GENACK^MDHL7X
"RTN","MDHL7A",54,0)
 . Q
"RTN","MDHL7A",55,0)
 S NUMZ=$O(^TMP($J,"MDHL7A",""),-1)
"RTN","MDHL7A",56,0)
 S NUM=0,MDOBX=0
"RTN","MDHL7A",57,0)
 F NUM=1:1:NUMZ  D  Q:$G(ERRTX)'=""
"RTN","MDHL7A",58,0)
 . S LINO=^TMP($J,"MDHL7A",NUM)
"RTN","MDHL7A",59,0)
 . S SEC=$P(LINO,"|")
"RTN","MDHL7A",60,0)
 . I SEC="MSH" D MSH Q
"RTN","MDHL7A",61,0)
 . I SEC="PID" D PID Q
"RTN","MDHL7A",62,0)
 . I SEC="OBR" D OBR Q
"RTN","MDHL7A",63,0)
 . I SEC="PV1" Q
"RTN","MDHL7A",64,0)
 . I SEC="ORC" Q
"RTN","MDHL7A",65,0)
 . I SEC="OBX" S MDOBX=1 Q
"RTN","MDHL7A",66,0)
 . Q
"RTN","MDHL7A",67,0)
 Q:$G(ERRTX)'=""
"RTN","MDHL7A",68,0)
 I 'MDOBX S ERRTX="OBX not found when expected" D ^MDHL7X Q
"RTN","MDHL7A",69,0)
 D OBX
"RTN","MDHL7A",70,0)
 D STATUS(MDIEN,"P")
"RTN","MDHL7A",71,0)
 K ^TMP($J,"MDHL7A"),^TMP($J,"MDHL7")
"RTN","MDHL7A",72,0)
 Q
"RTN","MDHL7A",73,0)
STATUS(DA,STAT) ; Update the status of the report in 703.1
"RTN","MDHL7A",74,0)
 Q:$G(ERRTX)'=""
"RTN","MDHL7A",75,0)
 S $P(^MDD(703.1,DA,0),U,9)=STAT
"RTN","MDHL7A",76,0)
 S DIK="^MDD(703.1," D IX1^DIK
"RTN","MDHL7A",77,0)
 Q
"RTN","MDHL7A",78,0)
IM ;Instrument Manager Interface
"RTN","MDHL7A",79,0)
 Q:DEVNAME'="Instrument Manager"
"RTN","MDHL7A",80,0)
 I $E(X,1,3)'="OBR" Q
"RTN","MDHL7A",81,0)
 S DEVNAME=$P(X,"|",25)
"RTN","MDHL7A",82,0)
 S DEVIEN=$O(^MDS(702.09,"B",DEVNAME,0))
"RTN","MDHL7A",83,0)
 Q
"RTN","MDHL7A",84,0)
 ;
"RTN","MDHL7A",85,0)
MSH ; [Procedure] Decode MSH
"RTN","MDHL7A",86,0)
 N SEG
"RTN","MDHL7A",87,0)
 I '$D(^TMP($J,"MDHL7A",NUM)) Q
"RTN","MDHL7A",88,0)
 S X=$G(^TMP($J,"MDHL7A",NUM)),SEG("MSH")=X
"RTN","MDHL7A",89,0)
 I $E(X,1,3)'="MSH" S ERRTX="MSH not first record" D ^MDHL7X Q
"RTN","MDHL7A",90,0)
 Q
"RTN","MDHL7A",91,0)
 ;
"RTN","MDHL7A",92,0)
OBR ; [Procedure] Check OBR
"RTN","MDHL7A",93,0)
 N MDGMRC
"RTN","MDHL7A",94,0)
 S X=$G(^TMP($J,"MDHL7A",NUM)) I $E(X,1,3)'="OBR" S ERRTX="OBR not found when expected" D ^MDHL7X Q
"RTN","MDHL7A",95,0)
 S SEG("OBR")=X
"RTN","MDHL7A",96,0)
 S MDIORD=$P(X,"|",4)
"RTN","MDHL7A",97,0)
 S MDD702=$S(+MDIORD<1:"",1:$$GETSTDY^MDRPCOT1(MDIORD))
"RTN","MDHL7A",98,0)
 S ORIFN=$P(X,"|",3),(EXAM,%)=$P(X,"|",5) I EXAM'="" S EXAM=$P(%,"^",2) I EXAM="" S EXAM=$P(%,"^",1)
"RTN","MDHL7A",99,0)
 S CPT=$P(X,"|",5) I $P(CPT,"^",3)["CPT" S CPT=$P(CPT,"^",1)
"RTN","MDHL7A",100,0)
 S DTO="",DATE=$P(X,"|",8) I DATE'="" S:$L(DATE)>14 DATE=$E(DATE,1,14) S DTO=$$FMDATE^HLFNC(DATE)
"RTN","MDHL7A",101,0)
 ;  vvv== Added to address the issues of mismatch
"RTN","MDHL7A",102,0)
 I $G(MDD702)>0 I DFN'=$$GET1^DIQ(702,MDD702,.01,"I") S ERRTX="Patient name Mismatch. Name in PID doesn't match the name in the CP Order #"_MDD702_"." D ^MDHL7X Q
"RTN","MDHL7A",103,0)
 I DTO="" S ERRTX="Missing required Date/Time of Procedure in OBR" D ^MDHL7X Q
"RTN","MDHL7A",104,0)
 ;;S UNIQ=$TR($H,",","-")
"RTN","MDHL7A",105,0)
 S UNIQ=$$NEWID(DFN,DATE,INST,$G(MDD702),HLMTIEN)
"RTN","MDHL7A",106,0)
 I +UNIQ="-1" S ERRTX="Unable to Create or Lock 703.1" D ^MDHL7X Q
"RTN","MDHL7A",107,0)
 S MDIEN=$P(UNIQ,"^",1) ; Got the IEN for 703.1
"RTN","MDHL7A",108,0)
 N SET S SET=DTO_"^"_$P(UNIQ,U,2),ICNT=0 N IMP
"RTN","MDHL7A",109,0)
 S MDRTN=$P($G(^MDS(702.09,INST,.1)),"^",1) S:MDRTN'["^" MDRTN="^"_MDRTN
"RTN","MDHL7A",110,0)
 S X=MDRTN S:X["^" X=$P(X,"^",2) X ^%ZOSF("TEST") I '$T S ERRTX="Processing routine not found" D ^MDHL7X Q  ; IA %10096
"RTN","MDHL7A",111,0)
 Q
"RTN","MDHL7A",112,0)
 ;
"RTN","MDHL7A",113,0)
PID ; [Procedure] Check PID
"RTN","MDHL7A",114,0)
 S X=$G(^TMP($J,"MDHL7A",NUM)) I $E(X,1,3)'="PID" S ERRTX="PID not second record" D ^MDHL7X Q
"RTN","MDHL7A",115,0)
 S SEG("PID")=X
"RTN","MDHL7A",116,0)
 I $L($P(X,"|",4))'<16 D  I +DFN=-1 Q
"RTN","MDHL7A",117,0)
 . N ICN
"RTN","MDHL7A",118,0)
 . S ICN=$P(X,"|",4)
"RTN","MDHL7A",119,0)
 . S DFN=$$GETDFN^MPIF001(ICN)
"RTN","MDHL7A",120,0)
 . I +DFN=-1 S ERRTX=$P(DFN,U,2)
"RTN","MDHL7A",121,0)
 . D MDSSN I DFN<1 S ERRTX="SSN not found" D ^MDHL7X Q
"RTN","MDHL7A",122,0)
 . I DFN>0 K ERRTX
"RTN","MDHL7A",123,0)
 . S MDSSN=$$GET1^DIQ(2,DFN,.09,"I") I MDSSN="" S MDSSN=" ",DFN=0
"RTN","MDHL7A",124,0)
 . Q
"RTN","MDHL7A",125,0)
 E  D MDSSN
"RTN","MDHL7A",126,0)
 I 'DFN S ERRTX="SSN not found" D ^MDHL7X Q
"RTN","MDHL7A",127,0)
 S Z1=$P($G(^DPT(DFN,0)),",",1),Z2=$P(NAM,"^",1)
"RTN","MDHL7A",128,0)
 S Z1=$TR(Z1,"abcdefghijklmnopqrstuvwxyz- '","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MDHL7A",129,0)
 S Z2=$TR(Z2,"abcdefghijklmnopqrstuvwxyz- '","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MDHL7A",130,0)
 I $E(Z1,1,3)'=$E(Z2,1,3) S ERRTX="Last Name MisMatch" D ^MDHL7X Q
"RTN","MDHL7A",131,0)
 S PNAM=$TR(NAM,"^",",")
"RTN","MDHL7A",132,0)
 D PID^VADPT6 S PID=$G(VA("PID")),BID=$G(VA("BID")) N VA
"RTN","MDHL7A",133,0)
 Q
"RTN","MDHL7A",134,0)
MDSSN ; This subroutine is to match up the SSN for a patient.
"RTN","MDHL7A",135,0)
 S NAM=$P(X,"|",6),MDSSN=$P(X,"|",20) I $L(MDSSN)<9 S MDSSN=$P(X,"|",4)
"RTN","MDHL7A",136,0)
 S MDSSN=$P(MDSSN,"^",1) I MDSSN'?9N S MDSSN=$TR(MDSSN,"- ","")
"RTN","MDHL7A",137,0)
 I $E(MDSSN,$L(MDSSN))="P" S MDSSN=$E(MDSSN,1,9)
"RTN","MDHL7A",138,0)
 S:MDSSN'?9N MDSSN=" " S DFN=$O(^DPT("SSN",MDSSN,0))
"RTN","MDHL7A",139,0)
 I 'DFN S DFN=$O(^DPT("SSN",MDSSN_"P",0))
"RTN","MDHL7A",140,0)
 Q
"RTN","MDHL7A",141,0)
 ;
"RTN","MDHL7A",142,0)
OBX ; [Observation]
"RTN","MDHL7A",143,0)
 ;Q:$P(^TMP($J,"MDHL7A",NUM),"|")'="OBX"
"RTN","MDHL7A",144,0)
 D @MDRTN
"RTN","MDHL7A",145,0)
 Q
"RTN","MDHL7A",146,0)
NEWID(DFN,DATE,INST,MDD702,HLMTIEN) ; Generate a new entry and ID of 703.1
"RTN","MDHL7A",147,0)
 N NEWID,MDFDA,MDIEN
"RTN","MDHL7A",148,0)
 S NEWID=$TR($H,",","-")  ; Create inital ID
"RTN","MDHL7A",149,0)
 L +(^MDD(703.1,"B")):60 E  Q "-1"
"RTN","MDHL7A",150,0)
 ;^^--- Unable to get an lock in the file
"RTN","MDHL7A",151,0)
 F  Q:'$D(^MDD(703.1,"B",NEWID))  H 1 S NEWID=$TR($H,",","-")
"RTN","MDHL7A",152,0)
 ;^^--- Search to create an new ID in current ID is in use
"RTN","MDHL7A",153,0)
 S MDFDA(703.1,"+1,",.01)=NEWID
"RTN","MDHL7A",154,0)
 S MDFDA(703.1,"+1,",.02)=DFN
"RTN","MDHL7A",155,0)
 S MDFDA(703.1,"+1,",.03)=$$HL7TFM^MDHL7U(DATE)
"RTN","MDHL7A",156,0)
 S MDFDA(703.1,"+1,",.04)=INST
"RTN","MDHL7A",157,0)
 S MDFDA(703.1,"+1,",.05)=MDD702
"RTN","MDHL7A",158,0)
 S MDFDA(703.1,"+1,",.06)=HLMTIEN
"RTN","MDHL7A",159,0)
 D UPDATE^DIE("","MDFDA","MDIEN")
"RTN","MDHL7A",160,0)
 L -(^MDD(703.1,"B"))
"RTN","MDHL7A",161,0)
 I $G(MDIEN(1))>0 S ^MDD(703.1,MDIEN(1),.1,0)="^703.11S^0^0" Q MDIEN(1)_U_NEWID
"RTN","MDHL7A",162,0)
 ; ^^--- Create Subfile and quit
"RTN","MDHL7A",163,0)
 Q "-1"  ; Unable to create file
"RTN","MDHL7A",164,0)
 ;
"RTN","MDHL7A",165,0)
PROC ; [Procedure] Create report entry in file (703.1)
"RTN","MDHL7A",166,0)
 D PROC^MDHL7U
"RTN","MDHL7A",167,0)
 Q
"RTN","MDHL7B")
0^6^B9814726
"RTN","MDHL7B",1,0)
MDHL7B ; HOIFO/WAA -Bi-directional interface routine ;7/23/01  11:41
"RTN","MDHL7B",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7B",3,0)
 ;
"RTN","MDHL7B",4,0)
 ; This routine will take an entry from 702 and submit that data
"RTN","MDHL7B",5,0)
 ; to the instrument that was indicated by the user
"RTN","MDHL7B",6,0)
 ; SUB is a submit function
"RTN","MDHL7B",7,0)
 ;    MDD702 is the IEN for the Entry from 702 that
"RTN","MDHL7B",8,0)
 ;           needs to be sent.
"RTN","MDHL7B",9,0)
 ;    The function will return -1^Submission failed and why
"RTN","MDHL7B",10,0)
 ;                              0^Device not Bi-Directional
"RTN","MDHL7B",11,0)
 ;                              1^Study submitted
"RTN","MDHL7B",12,0)
TMPSUB(MDD702) ; Process a submitted entry from user.
"RTN","MDHL7B",13,0)
 ; drp 16-JUL-2002 13:30:32 
"RTN","MDHL7B",14,0)
 N DEVICE
"RTN","MDHL7B",15,0)
 S DEVICE=+$P(^MDD(702,MDD702,0),U,11) Q:'DEVICE "0^No Device - TEST"
"RTN","MDHL7B",16,0)
 I +$P($G(^MDS(702.09,DEVICE,.1)),U,3) Q "1^Study Submitted - TEST"
"RTN","MDHL7B",17,0)
 Q "0^No Bi Di Cap - TEST"
"RTN","MDHL7B",18,0)
 ;
"RTN","MDHL7B",19,0)
SUB(MDD702) ; Change to SUB when working
"RTN","MDHL7B",20,0)
 N MDORFLG,RESULT,MSG,MDERROR
"RTN","MDHL7B",21,0)
 S MDORFLG=1
"RTN","MDHL7B",22,0)
 D EN1
"RTN","MDHL7B",23,0)
 Q RESULT_U_MSG
"RTN","MDHL7B",24,0)
 ;
"RTN","MDHL7B",25,0)
CANCEL(MDD702) ; Cancel Orders
"RTN","MDHL7B",26,0)
 N MDORFLG,RESULT,MSG,MDERROR
"RTN","MDHL7B",27,0)
 S MDORFLG=0
"RTN","MDHL7B",28,0)
 D EN1
"RTN","MDHL7B",29,0)
 Q RESULT_U_MSG
"RTN","MDHL7B",30,0)
 ;
"RTN","MDHL7B",31,0)
EN1 ; The main entry point for the order to be processed.
"RTN","MDHL7B",32,0)
 N DEVIEN,WORKING,MDIORD
"RTN","MDHL7B",33,0)
 ; Get the device that will process this study
"RTN","MDHL7B",34,0)
 ; Build an HL7 Message based in the device.
"RTN","MDHL7B",35,0)
 ; After the device has processed the message this routine will
"RTN","MDHL7B",36,0)
 ; update the status with in 702.
"RTN","MDHL7B",37,0)
 S RESULT=1,MSG=$S(MDORFLG=1:"Study Submitted.",1:"Study Cancelled")
"RTN","MDHL7B",38,0)
 I '$D(^MDD(702,MDD702,0)) S MSG="There is no study in 702 for entry "_MDD702_".",RESULT=-1
"RTN","MDHL7B",39,0)
 I RESULT'=-1 D  ;Get the device based on the CP def
"RTN","MDHL7B",40,0)
 . S DEF=$P(^MDD(702,MDD702,0),U,4) I DEF<1 S RESULT=-1,MSG="No CP DEFINITION for this entry in file 702.01."
"RTN","MDHL7B",41,0)
 . Q
"RTN","MDHL7B",42,0)
 I RESULT'=-1 D  ; Check to see that there is a device entered for this procedure
"RTN","MDHL7B",43,0)
 . S DEVIEN=$P(^MDD(702,MDD702,0),U,11) I DEVIEN>0 Q
"RTN","MDHL7B",44,0)
 . S RESULT=0,MSG="No DEVICE is defined." Q
"RTN","MDHL7B",45,0)
 . Q
"RTN","MDHL7B",46,0)
 ;
"RTN","MDHL7B",47,0)
 ; DRP/16-MAY-2003 14:44:36 - Check for Loopback IP
"RTN","MDHL7B",48,0)
 I $$GET1^DIQ(702.09,DEVIEN_",",.14)="127.0.0.1" D  Q
"RTN","MDHL7B",49,0)
 . D LOOPBACK^MDHL7XXX(MDD702,DEVIEN)
"RTN","MDHL7B",50,0)
 . S RESULT=+$$GET1^DIQ(702.09,DEVIEN_",",.13,"I"),MSG="OK"
"RTN","MDHL7B",51,0)
 . Q
"RTN","MDHL7B",52,0)
 ;
"RTN","MDHL7B",53,0)
 I RESULT>0 D  ; Check to see that the device is a active and working
"RTN","MDHL7B",54,0)
 . S WORKING="" D INST^MDHL7U2(DEVIEN,.WORKING)
"RTN","MDHL7B",55,0)
 . Q:WORKING
"RTN","MDHL7B",56,0)
 . S RESULT=-1,MSG="There is a problem with the device entry in file 702.09."
"RTN","MDHL7B",57,0)
 . Q
"RTN","MDHL7B",58,0)
 I RESULT>0 D  ; Check to see if the device is bi-directional
"RTN","MDHL7B",59,0)
 . N LINE
"RTN","MDHL7B",60,0)
 . S LINE=$G(^MDS(702.09,DEVIEN,.1))
"RTN","MDHL7B",61,0)
 . I $P(LINE,U,3)'=1 D  Q  ; The Device is not Bi-Directional 
"RTN","MDHL7B",62,0)
 . . S RESULT=0,MSG="Device not Bi-Directional."
"RTN","MDHL7B",63,0)
 . . Q
"RTN","MDHL7B",64,0)
 . ; The device is Bi-Directional and we are getting an MDIORD number.
"RTN","MDHL7B",65,0)
 . S MDIORD=$$GETIORD^MDRPCOT1(MDD702) I MDIORD=-1 D
"RTN","MDHL7B",66,0)
 . . S RESULT=-1,MSG="Unable to create Instrument Order Number."
"RTN","MDHL7B",67,0)
 . . Q
"RTN","MDHL7B",68,0)
 . Q
"RTN","MDHL7B",69,0)
 I RESULT=1 D  ; Process the message to be sent
"RTN","MDHL7B",70,0)
 . D EN1^MDHL7BH ; Build HL7 Message
"RTN","MDHL7B",71,0)
 . I $P(MDERROR,U,2) S RESULT="-1",MSG=$P(MDERROR,U,3)
"RTN","MDHL7B",72,0)
 . Q
"RTN","MDHL7B",73,0)
 Q
"RTN","MDHL7BH")
0^7^B11540394
"RTN","MDHL7BH",1,0)
MDHL7BH ; HOIFO/WAA -Bi-directional interface (HL7) routine ;7/23/01  11:41
"RTN","MDHL7BH",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7BH",3,0)
 ;
"RTN","MDHL7BH",4,0)
 ; This routine will build the HL7 Message and store that message.
"RTN","MDHL7BH",5,0)
 ; After the message has been created then it will call the
"RTN","MDHL7BH",6,0)
 ; The actual HL7package to start the processing of the message
"RTN","MDHL7BH",7,0)
 ;
"RTN","MDHL7BH",8,0)
 ; Reference DBIA #2161 [Supported] for HL7 calls.
"RTN","MDHL7BH",9,0)
 ; Reference DBIA #2164 [Supported] for HL7 calls.
"RTN","MDHL7BH",10,0)
 ; Reference DBIA #3065 [Supported]  call to HLFNAME.
"RTN","MDHL7BH",11,0)
 Q
"RTN","MDHL7BH",12,0)
EN1 ;Main Entry point.
"RTN","MDHL7BH",13,0)
 N MDMSG,MD101,CNT,HLA,LINE,MDHL,DFN,MDLINK
"RTN","MDHL7BH",14,0)
 Q:RESULT<1  ; This tells the study is not a BDi
"RTN","MDHL7BH",15,0)
 S MDLINK=$$GET1^DIQ(702.09,DEVIEN,.18,"E")
"RTN","MDHL7BH",16,0)
 I MDLINK="" S RESULT=-1,MSG="No HL Logical Link has been defined." Q  ; No no link has been defined 
"RTN","MDHL7BH",17,0)
 S MDERROR="0"
"RTN","MDHL7BH",18,0)
 D INIT^HLFNC2("MCAR ORM SERVER",.MDMSG)
"RTN","MDHL7BH",19,0)
 I +$G(MDMSG)>0 S RESULT=-1,MSG="Unable to produce a message." Q  ; something is wrong and no MSH was created
"RTN","MDHL7BH",20,0)
 S DFN=$$GET1^DIQ(702,MDD702,.01,"I")
"RTN","MDHL7BH",21,0)
 S DEVNAME=$$GET1^DIQ(702.09,DEVIEN,.16,"I")
"RTN","MDHL7BH",22,0)
 S CNT=0
"RTN","MDHL7BH",23,0)
 D PID S CNT=CNT+1,HLA("HLS",CNT)=LINE
"RTN","MDHL7BH",24,0)
 D PV1 S CNT=CNT+1,HLA("HLS",CNT)=LINE
"RTN","MDHL7BH",25,0)
 D ORC S CNT=CNT+1,HLA("HLS",CNT)=LINE
"RTN","MDHL7BH",26,0)
 D OBR I LINE'="" S CNT=CNT+1,HLA("HLS",CNT)=LINE
"RTN","MDHL7BH",27,0)
 S HLP("SUBSCRIBER")="^^VISTA^^"_DEVNAME_"^M"
"RTN","MDHL7BH",28,0)
 S HLL("LINKS",1)="MCAR ORM CLIENT"_"^"_MDLINK
"RTN","MDHL7BH",29,0)
 D GENERATE^HLMA("MCAR ORM SERVER","LM",1,.MDHL,,.HLP)
"RTN","MDHL7BH",30,0)
 I $P(MDHL,U,2) S MDERROR=MDHL
"RTN","MDHL7BH",31,0)
 Q
"RTN","MDHL7BH",32,0)
OBR ; Send the procedure to the correct device
"RTN","MDHL7BH",33,0)
 S LINE="OBR|"
"RTN","MDHL7BH",34,0)
 S DEVIEN=$$GET1^DIQ(702,MDD702,.11,"I")
"RTN","MDHL7BH",35,0)
 S USC=$$GET1^DIQ(702.09,DEVIEN,.17,"I")
"RTN","MDHL7BH",36,0)
 I USC="" S LINE="" Q
"RTN","MDHL7BH",37,0)
 E  S USC=$TR(USC,"=","^")
"RTN","MDHL7BH",38,0)
 S $P(LINE,"|",5)=USC_"|"
"RTN","MDHL7BH",39,0)
 Q
"RTN","MDHL7BH",40,0)
PID ;get the patient information and build the PID
"RTN","MDHL7BH",41,0)
 ;PID|||SSN||Last^First||DOB|SEX|||||||||||SSN
"RTN","MDHL7BH",42,0)
 N MDSSN,NAME,DOB,ADDR,TMP
"RTN","MDHL7BH",43,0)
 S LINE="PID|",$P(LINE,"|",21)=""
"RTN","MDHL7BH",44,0)
 S MDSSN=$$GET1^DIQ(702,MDD702,.011) ; Get the ssn for the patient
"RTN","MDHL7BH",45,0)
 S NAME=$$GET1^DIQ(702,MDD702,.01,"E") ; get the patient name
"RTN","MDHL7BH",46,0)
 S NAME=$$HLNAME^XLFNAME($P(NAME,"^"),"",$E(HLECH,1))
"RTN","MDHL7BH",47,0)
 I $P(NAME,$E(HLECH,1),7)'="L" S $P(NAME,$E(HLECH,1),7)="L"
"RTN","MDHL7BH",48,0)
 S DOB=$$GET1^DIQ(2,DFN,.03,"I") S DOB=$$FTOHL7^MDHL7U2(DOB)
"RTN","MDHL7BH",49,0)
 S ADDR=$$GET1^DIQ(2,DFN,.111,"E")_"^" ; Address 1
"RTN","MDHL7BH",50,0)
 S TMP=$$GET1^DIQ(2,DFN,.112,"E") I TMP'="" S ADDR=ADDR_TMP ; Add 2
"RTN","MDHL7BH",51,0)
 S TMP=$$GET1^DIQ(2,DFN,.113,"E") I TMP'="" S ADDR=ADDR_" "_TMP ; Add 3
"RTN","MDHL7BH",52,0)
 S ADDR=ADDR_"^"_$$GET1^DIQ(2,DFN,.114,"E") ; City
"RTN","MDHL7BH",53,0)
 S ADDR=ADDR_"^"_$$GET1^DIQ(5,$$GET1^DIQ(2,DFN,.115,"I"),1,"E") ; State
"RTN","MDHL7BH",54,0)
 S ADDR=ADDR_"^"_$$GET1^DIQ(2,DFN,.116,"E") ; Zip
"RTN","MDHL7BH",55,0)
 S $P(LINE,"|",2)="1"
"RTN","MDHL7BH",56,0)
 S $P(LINE,"|",4)=MDSSN
"RTN","MDHL7BH",57,0)
 S $P(LINE,"|",6)=NAME
"RTN","MDHL7BH",58,0)
 S $P(LINE,"|",8)=DOB
"RTN","MDHL7BH",59,0)
 S $P(LINE,"|",9)=$$GET1^DIQ(2,DFN,.02,"I")
"RTN","MDHL7BH",60,0)
 S $P(LINE,"|",12)=ADDR
"RTN","MDHL7BH",61,0)
 S $P(LINE,"|",20)=MDSSN
"RTN","MDHL7BH",62,0)
 Q
"RTN","MDHL7BH",63,0)
PV1 ;Get the ward location for PV1
"RTN","MDHL7BH",64,0)
 ;PV1||In or out|Ward location
"RTN","MDHL7BH",65,0)
 N WARD,INOUT,CONSULT,REF,NREF
"RTN","MDHL7BH",66,0)
 S WARD=$$GET1^DIQ(2,DFN,.1,"E")
"RTN","MDHL7BH",67,0)
 S INOUT=$S(WARD'="":"I",1:"O")
"RTN","MDHL7BH",68,0)
 S:WARD'="" WARD=WARD_U_WARD
"RTN","MDHL7BH",69,0)
 S LINE="PV1||"_INOUT_"|"_WARD
"RTN","MDHL7BH",70,0)
 S CONSULT=$$GET123^MDHL7U2(MDD702) Q:CONSULT<1
"RTN","MDHL7BH",71,0)
 S NREF=$$GETREF^MDHL7U2(CONSULT) Q:NREF="-1"
"RTN","MDHL7BH",72,0)
 S $P(LINE,"|",9)=NREF
"RTN","MDHL7BH",73,0)
 Q
"RTN","MDHL7BH",74,0)
ORC ;get ORC onformation
"RTN","MDHL7BH",75,0)
 ;ORC|NA|Order Number|||||||date/time ordered
"RTN","MDHL7BH",76,0)
 N DATE,SDATE
"RTN","MDHL7BH",77,0)
 S DATE=$$GET1^DIQ(702,MDD702,.02,"I")
"RTN","MDHL7BH",78,0)
 S DATE=$$FTOHL7^MDHL7U2(DATE)
"RTN","MDHL7BH",79,0)
 S SDATE=$$GET1^DIQ(702,MDD702,.07,"I")
"RTN","MDHL7BH",80,0)
 I SDATE[";" S SDATE=$P(SDATE,";",2)
"RTN","MDHL7BH",81,0)
 S SDATE=$$FTOHL7^MDHL7U2(SDATE)
"RTN","MDHL7BH",82,0)
 S LINE="ORC|"_$S(MDORFLG=1:"NW",MDORFLG=0:"CA",1:"")_"|"_MDIORD
"RTN","MDHL7BH",83,0)
 S $P(LINE,"|",6)=$S(MDORFLG=1:"NW",MDORFLG=0:"CA",1:"")
"RTN","MDHL7BH",84,0)
 S $P(LINE,"|",10)=DATE,$P(LINE,"|",16)=SDATE
"RTN","MDHL7BH",85,0)
 Q
"RTN","MDHL7E")
0^8^B1292108
"RTN","MDHL7E",1,0)
MDHL7E ; HOIFO/WAA -Olympus/CMore/Pentax Endoscopy ; 06/08/00
"RTN","MDHL7E",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7E",3,0)
 ;S (TCNT,ICNT,LN)=0
"RTN","MDHL7E",4,0)
OBX ; Process OBX
"RTN","MDHL7E",5,0)
 N MDATT,PROC
"RTN","MDHL7E",6,0)
 S MDAPP=$$GET1^DIQ(702.09,DEVIEN,.16,"I")
"RTN","MDHL7E",7,0)
 I MDAPP="OLYMPUS" S SEP="^"
"RTN","MDHL7E",8,0)
 I MDAPP="PENTAX" S SEP="^" D PENTAX
"RTN","MDHL7E",9,0)
 I MDAPP="CMore"  S SEP="~"
"RTN","MDHL7E",10,0)
 I MDAPP="ENDOSOFT"  S SEP="~"
"RTN","MDHL7E",11,0)
 D ATT^MDHL7U(DEVIEN,.MDATT) Q:MDATT<1
"RTN","MDHL7E",12,0)
 S PROC=0
"RTN","MDHL7E",13,0)
 F  S PROC=$O(MDATT(PROC)) Q:PROC<1  D
"RTN","MDHL7E",14,0)
 . N PROCESS
"RTN","MDHL7E",15,0)
 . S PROCESS=$P(MDATT(PROC),";",5)
"RTN","MDHL7E",16,0)
 . I PROCESS="TEXT^MDHL7U2" D TXT^MDHL7K2
"RTN","MDHL7E",17,0)
 . D @PROCESS
"RTN","MDHL7E",18,0)
 . Q
"RTN","MDHL7E",19,0)
 Q:'MDIEN
"RTN","MDHL7E",20,0)
 D REX^MDHL7U1(MDIEN)
"RTN","MDHL7E",21,0)
 D GENACK^MDHL7X
"RTN","MDHL7E",22,0)
 Q
"RTN","MDHL7E",23,0)
PENTAX ; This will convert the FT lines to TX lines
"RTN","MDHL7E",24,0)
 N CNT,LINE
"RTN","MDHL7E",25,0)
 S CNT=0
"RTN","MDHL7E",26,0)
 F  S CNT=$O(^TMP($J,"MDHL7A",CNT)) Q:CNT<1  D
"RTN","MDHL7E",27,0)
 . S LINE=^TMP($J,"MDHL7A",CNT)
"RTN","MDHL7E",28,0)
 . I $P(LINE,"|",1)'="OBX" Q
"RTN","MDHL7E",29,0)
 . I $P(LINE,"|",3)'="FT" Q
"RTN","MDHL7E",30,0)
 . S $P(LINE,"|",3)="TX"
"RTN","MDHL7E",31,0)
 . S ^TMP($J,"MDHL7A",CNT)=LINE
"RTN","MDHL7E",32,0)
 . Q
"RTN","MDHL7E",33,0)
 Q
"RTN","MDHL7K2")
0^33^B3501528
"RTN","MDHL7K2",1,0)
MDHL7K2 ; HOIFO/WAA -HP EnConcert Echo ; 06/08/00
"RTN","MDHL7K2",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7K2",3,0)
 N TCNT,ICNT,LN
"RTN","MDHL7K2",4,0)
 S (TCNT,ICNT,LN)=0
"RTN","MDHL7K2",5,0)
OBX ; Process OBX
"RTN","MDHL7K2",6,0)
 N MDATT,PROC
"RTN","MDHL7K2",7,0)
 D ATT^MDHL7U(DEVIEN,.MDATT) Q:MDATT<1
"RTN","MDHL7K2",8,0)
 S PROC=0
"RTN","MDHL7K2",9,0)
 F  S PROC=$O(MDATT(PROC)) Q:PROC<1  D
"RTN","MDHL7K2",10,0)
 . N PROCESS
"RTN","MDHL7K2",11,0)
 . S PROCESS=$P(MDATT(PROC),";",5)
"RTN","MDHL7K2",12,0)
 . I PROCESS="TEXT^MDHL7U2" D TXT
"RTN","MDHL7K2",13,0)
 . D @PROCESS
"RTN","MDHL7K2",14,0)
 . Q
"RTN","MDHL7K2",15,0)
 Q:'MDIEN
"RTN","MDHL7K2",16,0)
 D REX^MDHL7U1(MDIEN)
"RTN","MDHL7K2",17,0)
 D GENACK^MDHL7X
"RTN","MDHL7K2",18,0)
 Q
"RTN","MDHL7K2",19,0)
TXT ; Rebuild the text message for CLINICAL PROCEDURES
"RTN","MDHL7K2",20,0)
 N MDHLD,CNT,CNT2,LINE,P,TIM1,TIM2,TIME,MDDT,MDHT,MSGC,TITLE,TITLE1
"RTN","MDHL7K2",21,0)
 S P="|"
"RTN","MDHL7K2",22,0)
 S (CNT,CNT2,TITLE,TITLE1)=0
"RTN","MDHL7K2",23,0)
 F  S CNT=$O(^TMP($J,"MDHL7A",CNT)) Q:CNT<1  D
"RTN","MDHL7K2",24,0)
 .S LINE=^TMP($J,"MDHL7A",CNT)
"RTN","MDHL7K2",25,0)
 .I $P(LINE,P,1)'="OBX" Q
"RTN","MDHL7K2",26,0)
 .I $P(LINE,P,3)'="TX" Q
"RTN","MDHL7K2",27,0)
 .I $E($P(LINE,P,6),1,2)="//" Q
"RTN","MDHL7K2",28,0)
 .I $E($P(LINE,P,6),1,2)="\\" Q
"RTN","MDHL7K2",29,0)
 .S TITLE=$P(LINE,P,4),TITLE=$P(TITLE,U,2)
"RTN","MDHL7K2",30,0)
 .I TITLE="PreliminaryReader" D
"RTN","MDHL7K2",31,0)
 .. N MN,ML,MF,MI,MS,MT
"RTN","MDHL7K2",32,0)
 .. S MN=$P(LINE,P,6),ML=$P(MN,U,2)
"RTN","MDHL7K2",33,0)
 .. S MF=$P(MN,U,3),MI=$P(MN,U,4)
"RTN","MDHL7K2",34,0)
 .. S MS=$P(MN,U,5),MT=$P(MN,U,6)
"RTN","MDHL7K2",35,0)
 .. S MN=MF
"RTN","MDHL7K2",36,0)
 .. I MI'="" S MN=MN_" "_MI_"."
"RTN","MDHL7K2",37,0)
 .. S MN=MN_" "_ML
"RTN","MDHL7K2",38,0)
 .. I MS'="" S MN=MN_", "_MS_"."
"RTN","MDHL7K2",39,0)
 .. I MT'="" S MN=MN_", "_MT
"RTN","MDHL7K2",40,0)
 .. S $P(LINE,P,6)=MN
"RTN","MDHL7K2",41,0)
 ..Q
"RTN","MDHL7K2",42,0)
 .I TITLE'=TITLE1 D
"RTN","MDHL7K2",43,0)
 .. N LBL
"RTN","MDHL7K2",44,0)
 .. S CNT2=CNT2+1,^TMP($J,"MDHL7","TEXT",CNT2)="OBX||TX||| "
"RTN","MDHL7K2",45,0)
 .. S CNT2=CNT2+1
"RTN","MDHL7K2",46,0)
 .. S LBL=$P(TITLE,"&",2)
"RTN","MDHL7K2",47,0)
 .. I LBL="" S LBL=$P(TITLE,"&")
"RTN","MDHL7K2",48,0)
 .. S ^TMP($J,"MDHL7","TEXT",CNT2)="OBX||TX|||"_LBL,TITLE1=TITLE
"RTN","MDHL7K2",49,0)
 .. Q
"RTN","MDHL7K2",50,0)
 .S CNT2=CNT2+1,^TMP($J,"MDHL7","TEXT",CNT2)=LINE
"RTN","MDHL7K2",51,0)
 .Q
"RTN","MDHL7K2",52,0)
 Q
"RTN","MDHL7M1")
0^9^B3843075
"RTN","MDHL7M1",1,0)
MDHL7M1 ; HOIFO/WAA - Muse EKG ; [02-06-2002 16:13]
"RTN","MDHL7M1",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7M1",3,0)
OBX ; [Procedure] Process OBX
"RTN","MDHL7M1",4,0)
 N MDATT,PROC
"RTN","MDHL7M1",5,0)
 D ATT^MDHL7U(DEVIEN,.MDATT) Q:MDATT<1
"RTN","MDHL7M1",6,0)
 S PROC=0
"RTN","MDHL7M1",7,0)
 F  S PROC=$O(MDATT(PROC)) Q:PROC<1  D
"RTN","MDHL7M1",8,0)
 . N PROCESS
"RTN","MDHL7M1",9,0)
 . S PROCESS=$P(MDATT(PROC),";",5)
"RTN","MDHL7M1",10,0)
 . I PROCESS="UUEN^MDHL7U1" D ENCODE Q
"RTN","MDHL7M1",11,0)
 . D @PROCESS
"RTN","MDHL7M1",12,0)
 . Q
"RTN","MDHL7M1",13,0)
 Q:'MDIEN
"RTN","MDHL7M1",14,0)
 D REX^MDHL7U1(MDIEN)
"RTN","MDHL7M1",15,0)
 D GENACK^MDHL7X
"RTN","MDHL7M1",16,0)
 Q
"RTN","MDHL7M1",17,0)
 ;
"RTN","MDHL7M1",18,0)
ENCODE ; [Procedure] Process to the correct format
"RTN","MDHL7M1",19,0)
 N CNT,FTYPE,LINE,LINE2
"RTN","MDHL7M1",20,0)
 K ^TMP($J,"MDHL7M1")
"RTN","MDHL7M1",21,0)
 S CNT=0
"RTN","MDHL7M1",22,0)
 F  S CNT=$O(^TMP($J,"MDHL7A",CNT)) Q:CNT<1  D
"RTN","MDHL7M1",23,0)
 . N LCNT,CNT2
"RTN","MDHL7M1",24,0)
 . S LCNT=0
"RTN","MDHL7M1",25,0)
 . Q:$E(^TMP($J,"MDHL7A",CNT),1)'="Z"
"RTN","MDHL7M1",26,0)
 . S FTYPE=".PDF",LINE2=""
"RTN","MDHL7M1",27,0)
 . S LINE=$P(^TMP($J,"MDHL7A",CNT),"|",4)
"RTN","MDHL7M1",28,0)
 . S LINE=$E(LINE,$L($P(LINE,"\X0D\\X0A\"))+11,$L(LINE))
"RTN","MDHL7M1",29,0)
 . S CNT2=0
"RTN","MDHL7M1",30,0)
 . D TR(.LINE,.LINE2)
"RTN","MDHL7M1",31,0)
 . Q
"RTN","MDHL7M1",32,0)
 M ^TMP($J,"MDHL7","UUENCODE")=^TMP($J,"MDHL7M1")
"RTN","MDHL7M1",33,0)
 D @PROCESS
"RTN","MDHL7M1",34,0)
 K ^TMP($J,"MDHL7M1")
"RTN","MDHL7M1",35,0)
 Q
"RTN","MDHL7M1",36,0)
 ;
"RTN","MDHL7M1",37,0)
TR(LINE,LINE2) ; [Procedure] PARCE out the line and save the new file format
"RTN","MDHL7M1",38,0)
 N LLEN,I,X
"RTN","MDHL7M1",39,0)
 S I=0
"RTN","MDHL7M1",40,0)
TR2 D INC Q:LINE=""
"RTN","MDHL7M1",41,0)
 S X=$E(LINE,I)
"RTN","MDHL7M1",42,0)
 I X="\" D TRANS
"RTN","MDHL7M1",43,0)
 S LINE2=LINE2_X
"RTN","MDHL7M1",44,0)
 G TR2
"RTN","MDHL7M1",45,0)
 Q
"RTN","MDHL7M1",46,0)
INC ; INCREMENT I
"RTN","MDHL7M1",47,0)
 I (I+1)>$L(LINE) D
"RTN","MDHL7M1",48,0)
 . S I=0,CNT2=CNT2+1
"RTN","MDHL7M1",49,0)
 . S LINE=$G(^TMP($J,"MDHL7A",CNT,CNT2))
"RTN","MDHL7M1",50,0)
 . Q
"RTN","MDHL7M1",51,0)
 Q:LINE=""
"RTN","MDHL7M1",52,0)
 S I=I+1
"RTN","MDHL7M1",53,0)
 Q
"RTN","MDHL7M1",54,0)
TRANS ; TRANSLATE X TO THE CORRECT VALUE
"RTN","MDHL7M1",55,0)
 D INC Q:LINE=""
"RTN","MDHL7M1",56,0)
 S X=$E(LINE,I)
"RTN","MDHL7M1",57,0)
 I X="F" S X="|" D INC Q
"RTN","MDHL7M1",58,0)
 I X="S" S X="^" D INC Q
"RTN","MDHL7M1",59,0)
 I X="T" S X="&" D INC Q
"RTN","MDHL7M1",60,0)
 I X="E" S X="\" D INC Q
"RTN","MDHL7M1",61,0)
 I X="R" S X="~" D INC Q
"RTN","MDHL7M1",62,0)
 I X="X" D
"RTN","MDHL7M1",63,0)
 . D INC Q:LINE=""
"RTN","MDHL7M1",64,0)
 . D INC Q:LINE=""
"RTN","MDHL7M1",65,0)
 . S X=$E(LINE,I)
"RTN","MDHL7M1",66,0)
 . I X="D" D INC S LCNT=LCNT+1 D
"RTN","MDHL7M1",67,0)
 .. I LINE2'="end",LINE2'="" S ^TMP($J,"MDHL7M1",LCNT)=LINE2,X=""
"RTN","MDHL7M1",68,0)
 .. N Y
"RTN","MDHL7M1",69,0)
 .. F Y=1:1:5 D INC Q:LINE=""
"RTN","MDHL7M1",70,0)
 .. S LINE2=""
"RTN","MDHL7M1",71,0)
 .. Q
"RTN","MDHL7M1",72,0)
 . Q
"RTN","MDHL7M1",73,0)
 Q
"RTN","MDHL7MCA")
0^10^B13615202
"RTN","MDHL7MCA",1,0)
MDHL7MCA ; HIRMFO/REL-Routine to Decode HL7 for MEDICINE ; [05-07-2001 10:38]
"RTN","MDHL7MCA",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7MCA",3,0)
 ; Reference DBIA #10035 for DPT calls.
"RTN","MDHL7MCA",4,0)
 ; Reference DBIA #10062 for VADPT calls.
"RTN","MDHL7MCA",5,0)
 ; Reference DBIA #10106 for HL7 calls.
"RTN","MDHL7MCA",6,0)
EN ; Entry Point for Message Array in MSG
"RTN","MDHL7MCA",7,0)
 N MSG
"RTN","MDHL7MCA",8,0)
 K ERRTX
"RTN","MDHL7MCA",9,0)
 S MDERROR=0
"RTN","MDHL7MCA",10,0)
 ;F I=3:1 X HLNEXT Q:HLQUIT'>0  S MSG(I)=HLNODE,J=0 F  S J=$O(HLNODE(J)) Q:'J  S MSG(I,J)=HLNODE(J)
"RTN","MDHL7MCA",11,0)
 M MSG=^TMP($J,"MDHL7A")
"RTN","MDHL7MCA",12,0)
 S NUM=1
"RTN","MDHL7MCA",13,0)
MSH ; Decode MSH
"RTN","MDHL7MCA",14,0)
 K SEG
"RTN","MDHL7MCA",15,0)
 I '$D(MSG(NUM)) G KIL
"RTN","MDHL7MCA",16,0)
 S X=$G(MSG(NUM)),SEG("MSH")=X,MCAPP=""
"RTN","MDHL7MCA",17,0)
 I $E(X,1,3)'="MSH" S ERRTX="MSH not first record" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",18,0)
 S MCAPP=$P(MSG(NUM),"|",4) I MCAPP="" G KIL
"RTN","MDHL7MCA",19,0)
 S NUM=NUM+1
"RTN","MDHL7MCA",20,0)
PID ; Check PID
"RTN","MDHL7MCA",21,0)
 S X=$G(MSG(NUM)) I $E(X,1,3)'="PID" S ERRTX="PID not second record" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",22,0)
 S SEG("PID")=X
"RTN","MDHL7MCA",23,0)
 S NAM=$P(X,"|",6),MDSSN=$P(X,"|",20) I $L(MDSSN)<9 S MDSSN=$P(X,"|",4)
"RTN","MDHL7MCA",24,0)
 S MDSSN=$P(MDSSN,"^",1) I MDSSN'?9N S MDSSN=$TR(MDSSN,"- ","")
"RTN","MDHL7MCA",25,0)
 S:MDSSN'?9N MDSSN=" " S DFN=$O(^DPT("SSN",MDSSN,0))
"RTN","MDHL7MCA",26,0)
 I 'DFN S ERRTX="SSN not found" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",27,0)
 S Z1=$P($G(^DPT(DFN,0)),",",1),Z2=$P(NAM,"^",1)
"RTN","MDHL7MCA",28,0)
 S Z1=$TR(Z1,"abcdefghijklmnopqrstuvwxyz- '","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MDHL7MCA",29,0)
 S Z2=$TR(Z2,"abcdefghijklmnopqrstuvwxyz- '","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MDHL7MCA",30,0)
 I $E(Z1,1,3)'=$E(Z2,1,3) S ERRTX="Last Name MisMatch" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",31,0)
 D PID^VADPT6 S PID=$G(VA("PID")),BID=$G(VA("BID")) K VA
"RTN","MDHL7MCA",32,0)
 ; If DFN not a medical patient, add DFN to medical patient file
"RTN","MDHL7MCA",33,0)
 I '$D(^MCAR(690,DFN)) S ^MCAR(690,DFN,0)=DFN,^MCAR(690,"B",DFN,DFN)="",$P(^MCAR(690,0),U,4)=$P(^MCAR(690,0),U,4)+1 S:$P(^MCAR(690,0),U,3)<DFN $P(^MCAR(690,0),U,3)=DFN
"RTN","MDHL7MCA",34,0)
 S NUM=NUM+1
"RTN","MDHL7MCA",35,0)
 ; Skip PV1, ORC if necessary
"RTN","MDHL7MCA",36,0)
LPOBR I $E(MSG(NUM),1,3)'="OBR" S NUM=NUM+1 G LPOBR
"RTN","MDHL7MCA",37,0)
 ;I $E(MSG(NUM),1,3)="ORC" S NUM=NUM+1
"RTN","MDHL7MCA",38,0)
OBR ; Check OBR
"RTN","MDHL7MCA",39,0)
 W MSG(NUM)
"RTN","MDHL7MCA",40,0)
 S X=$G(MSG(NUM)) I $E(X,1,3)'="OBR" S ERRTX="OBR not found when expected" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",41,0)
 S SEG("OBR")=X
"RTN","MDHL7MCA",42,0)
 S ORIFN=$P(X,"|",3),INST=$P(X,"|",25) I MCAPP="Instrument Manager",INST'="" S MCAPP=INST
"RTN","MDHL7MCA",43,0)
 S ORIFN=$P(X,"|",3),(EXAM,%)=$P(X,"|",5) I EXAM'="" S EXAM=$P(%,"^",2),EXAM2=$P(%,"^",1) I EXAM="" S EXAM=EXAM2
"RTN","MDHL7MCA",44,0)
 S CPT=$P(X,"|",5) I $P(CPT,"^",3)["CPT" S CPT=$P(CPT,"^",1)
"RTN","MDHL7MCA",45,0)
 S DTO="",DATE=$P(X,"|",8) I DATE'="" S:$L(DATE)>14 DATE=$E(DATE,1,14) S DTO=$$FMDATE^HLFNC(DATE)
"RTN","MDHL7MCA",46,0)
 I DTO="" S ERRTX="Missing required Date/Time of Procedure in OBR" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",47,0)
 K SET S SET=DTO_"^"_DFN,NUM=NUM+1,ICNT=0 K IMP
"RTN","MDHL7MCA",48,0)
 ; Go to Application
"RTN","MDHL7MCA",49,0)
 S INST=$O(^MCAR(690.7,"B",MCAPP,0)) I 'INST S X=MCAPP,ERRTX="Invalid Application Code" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",50,0)
 S MCRTN=$G(^MCAR(690.7,INST,1)) S:MCRTN'["^" MCRTN="^"_MCRTN
"RTN","MDHL7MCA",51,0)
 ; test for existence
"RTN","MDHL7MCA",52,0)
 S X=MCRTN S:X["^" X=$P(X,"^",2) X ^%ZOSF("TEST") I '$T S ERRTX="Processing routine not found" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",53,0)
 D @MCRTN G KIL
"RTN","MDHL7MCA",54,0)
PROC ; Create Procedure entry in appropriate file (FIL)
"RTN","MDHL7MCA",55,0)
 I $P(SET,"^",1)=""!($P(SET,"^",2)="") Q
"RTN","MDHL7MCA",56,0)
 S DA=0 F  S DA=$O(^MCAR(FIL,"B",$P(SET,"^",1),DA)) Q:'DA  I $P($G(^MCAR(FIL,DA,0)),"^",1,2)=SET Q
"RTN","MDHL7MCA",57,0)
 Q:DA
"RTN","MDHL7MCA",58,0)
P1 L +^MCAR(FIL,0):3 G:'$T P1 S DA=$P(^MCAR(FIL,0),"^",3)+1,$P(^MCAR(FIL,0),"^",3,4)=DA_"^"_DA L -^MCAR(FIL,0)
"RTN","MDHL7MCA",59,0)
 I $D(^MCAR(FIL,DA)) G P1
"RTN","MDHL7MCA",60,0)
 S ^MCAR(FIL,DA,0)=SET S DIK="^MCAR("_FIL_"," D IX1^DIK Q
"RTN","MDHL7MCA",61,0)
KIL ; Kill Variables
"RTN","MDHL7MCA",62,0)
 K %,BID,CODE,CPT,DA,DATE,DFN,DIK,DLCO,DTO,ERRTX,EXAM,EXAM2,EXE,FIL
"RTN","MDHL7MCA",63,0)
 K I,ICNT,ID,IMP,J,K,LBL,LINE,LN,MCAPP,MCRTN,MG,MSG,N,NAM,NEXT,NUM
"RTN","MDHL7MCA",64,0)
 K ORIFN,P,PID,PIEN,S,SEG,SEP,SET,MDSSN,STR,STYP,SUB,TCNT,TXT
"RTN","MDHL7MCA",65,0)
 K UNITS,VA,VAL,X,XMBODY,XMDUZ,XMSUBJ,XMTO,Z1,Z2
"RTN","MDHL7MCA",66,0)
 Q
"RTN","MDHL7MCX")
0^11^B2663326
"RTN","MDHL7MCX",1,0)
MDHL7MCX ; HIRMFO/WAA - Generate HL7 Error Message for MEDICINE ; [05-07-2001 10:38]
"RTN","MDHL7MCX",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7MCX",3,0)
 ; Reference IA #1131 for ^XMB("NETNAME") access.
"RTN","MDHL7MCX",4,0)
 ; Reference IA #2165 for HLMA1 calls.
"RTN","MDHL7MCX",5,0)
 ; Reference IA #2729 for XMXAPI calls.
"RTN","MDHL7MCX",6,0)
 ; Reference IA #10111 call to file 3.8 (Read w/FM).
"RTN","MDHL7MCX",7,0)
 D BULL,GENACK S MDERROR=1 Q
"RTN","MDHL7MCX",8,0)
BULL ; Generate error message
"RTN","MDHL7MCX",9,0)
 I $G(MDERROR,0)=0 S MDERROR=1
"RTN","MDHL7MCX",10,0)
 S INST=$O(^MCAR(690.7,"B",MCAPP,0)) Q:'INST
"RTN","MDHL7MCX",11,0)
 S MG=$P($G(^MCAR(690.7,INST,0)),"^",2) Q:'MG
"RTN","MDHL7MCX",12,0)
 S MG=$$GET1^DIQ(3.8,MG_",",.01) Q:MG=""
"RTN","MDHL7MCX",13,0)
 S XMTO="G."_MG_"@"_^XMB("NETNAME"),XMINSTR("FROM")=.5
"RTN","MDHL7MCX",14,0)
 S TXT(1)=ERRTX,TXT(2)=X,TXT(3)=" "
"RTN","MDHL7MCX",15,0)
 S N=3 F X="MSH","PID","OBR","OBX" I $D(SEG(X)) S N=N+1,TXT(N)=SEG(X)
"RTN","MDHL7MCX",16,0)
 S XMSUBJ="A Clinical Instrument HL7 Error has occurred."
"RTN","MDHL7MCX",17,0)
 S XMBODY="TXT"
"RTN","MDHL7MCX",18,0)
 D SENDMSG^XMXAPI(DUZ,XMSUBJ,XMBODY,XMTO,.XMINSTR)
"RTN","MDHL7MCX",19,0)
 K TXT Q
"RTN","MDHL7MCX",20,0)
GENACK ; Generate an HL7 ACK message
"RTN","MDHL7MCX",21,0)
 I $G(MDERROR,0)=0 Q:$G(MDFLAG)=1  ; CP is the interface to HL7 at this point
"RTN","MDHL7MCX",22,0)
 S HLA("HLA",1)="MSA"_HL("FS")_$S($D(ERRTX):"AR",1:"AA")_HL("FS")_HL("MID")_$S($D(ERRTX):HL("FS")_ERRTX,1:"")
"RTN","MDHL7MCX",23,0)
 S HLEID=HL("EID"),HLEIDS=HL("EIDS"),HLARYTYP="LM",HLFORMAT=1,HLRESLTA=HL("MID")
"RTN","MDHL7MCX",24,0)
 D GENACK^HLMA1(HLEID,HLMTIENS,HLEIDS,HLARYTYP,HLFORMAT,.HLRESTLA)
"RTN","MDHL7MCX",25,0)
 K ERRTX Q
"RTN","MDHL7P1")
0^12^B352508
"RTN","MDHL7P1",1,0)
MDHL7P1 ; HOIFO/WAA-Sensormedics,Jaeger Pulmonary ; 06/08/00
"RTN","MDHL7P1",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7P1",3,0)
 N TCNT,ICNT,LN
"RTN","MDHL7P1",4,0)
 S (TCNT,ICNT,LN)=0
"RTN","MDHL7P1",5,0)
OBX ; Process OBX
"RTN","MDHL7P1",6,0)
 N MDATT,PROC
"RTN","MDHL7P1",7,0)
 D ATT^MDHL7U(DEVIEN,.MDATT) Q:MDATT<1
"RTN","MDHL7P1",8,0)
 S PROC=0
"RTN","MDHL7P1",9,0)
 F  S PROC=$O(MDATT(PROC)) Q:PROC<1  D
"RTN","MDHL7P1",10,0)
 . N PROCESS
"RTN","MDHL7P1",11,0)
 . S PROCESS=$P(MDATT(PROC),";",5)
"RTN","MDHL7P1",12,0)
 . D @PROCESS
"RTN","MDHL7P1",13,0)
 . Q
"RTN","MDHL7P1",14,0)
 Q:'MDIEN
"RTN","MDHL7P1",15,0)
 D REX^MDHL7U1(MDIEN)
"RTN","MDHL7P1",16,0)
 D GENACK^MDHL7X
"RTN","MDHL7P1",17,0)
 Q
"RTN","MDHL7R1")
0^13^B7248294
"RTN","MDHL7R1",1,0)
MDHL7R1 ; HOIFO/WAA -Clinivision Resporatory ; 06/13/02
"RTN","MDHL7R1",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7R1",3,0)
 ; Reference Supported DBIA #10035 PATIENT
"RTN","MDHL7R1",4,0)
 ; Reference Supported DBIA #10106 HL7
"RTN","MDHL7R1",5,0)
 ; IA# 10103 [Supported] Calls to XLFT
"RTN","MDHL7R1",6,0)
 ;     10090 [Supported] FM read of DIC(4
"RTN","MDHL7R1",7,0)
 ;
"RTN","MDHL7R1",8,0)
OBX ; Process OBX
"RTN","MDHL7R1",9,0)
 N MDATT,PROC,P,PNAM,AGE,DOB,DOBAGE,STATION
"RTN","MDHL7R1",10,0)
 I $G(STATION) S STATION=$$FIND1^DIC(4,"","MX",STATION)
"RTN","MDHL7R1",11,0)
 S:'$L($G(STATION)) STATION=$G(DUZ(2))
"RTN","MDHL7R1",12,0)
 S PNAM=$P(^DPT(DFN,0),U,1)
"RTN","MDHL7R1",13,0)
 S DOB=$P(^DPT(DFN,0),U,3)
"RTN","MDHL7R1",14,0)
 S DOB=$$FMTE^XLFDT(DOB,"1D")
"RTN","MDHL7R1",15,0)
 S AGE=$$GET1^DIQ(2,DFN,.033)
"RTN","MDHL7R1",16,0)
 S DOBAGE=DOB_" ("_AGE_")"
"RTN","MDHL7R1",17,0)
 K ^TMP($J,"MDHL7","TEXT")
"RTN","MDHL7R1",18,0)
 S P="|"
"RTN","MDHL7R1",19,0)
 D ATT^MDHL7U(DEVIEN,.MDATT) Q:MDATT<1
"RTN","MDHL7R1",20,0)
 S PROC=0
"RTN","MDHL7R1",21,0)
 F  S PROC=$O(MDATT(PROC)) Q:PROC<1  D
"RTN","MDHL7R1",22,0)
 . N PROCESS
"RTN","MDHL7R1",23,0)
 . S PROCESS=$P(MDATT(PROC),";",5)
"RTN","MDHL7R1",24,0)
 . I PROCESS="TEXT^MDHL7U2" D TXT
"RTN","MDHL7R1",25,0)
 . D @PROCESS
"RTN","MDHL7R1",26,0)
 . Q
"RTN","MDHL7R1",27,0)
 Q:'MDIEN
"RTN","MDHL7R1",28,0)
 D REX^MDHL7U1(MDIEN)
"RTN","MDHL7R1",29,0)
 D GENACK^MDHL7X
"RTN","MDHL7R1",30,0)
 Q
"RTN","MDHL7R1",31,0)
TXT ; Extract data and process it for the test fuinction
"RTN","MDHL7R1",32,0)
 N CNT,CNT2,LINE,LINE2
"RTN","MDHL7R1",33,0)
 S (CNT,CNT2)=0
"RTN","MDHL7R1",34,0)
 F  S CNT=$O(^TMP($J,"MDHL7A",CNT)) Q:CNT<1  D
"RTN","MDHL7R1",35,0)
 . S LINE=^TMP($J,"MDHL7A",CNT)
"RTN","MDHL7R1",36,0)
 . I $P(LINE,P,1)="PID" D  Q  ;HEADER
"RTN","MDHL7R1",37,0)
 .. N SPC
"RTN","MDHL7R1",38,0)
 .. S LINE2=$J("Report from: ",31)_$$GET1^DIQ(4,+STATION_",",.01,"E")_"    Station #"_$$GET1^DIQ(4,+STATION_",",99,"E")
"RTN","MDHL7R1",39,0)
 .. S CNT2=CNT2+1
"RTN","MDHL7R1",40,0)
 .. S ^TMP($J,"MDHL7","TEXT",CNT2)="OBX||TX|||"_LINE2
"RTN","MDHL7R1",41,0)
 .. S LINE2="Clinivision Report"
"RTN","MDHL7R1",42,0)
 .. S CNT2=CNT2+1
"RTN","MDHL7R1",43,0)
 .. S ^TMP($J,"MDHL7","TEXT",CNT2)="OBX||TX|||"_LINE2
"RTN","MDHL7R1",44,0)
 .. S LINE2=PNAM_"   "_$E(MDSSN,1,3)_"-"_$E(MDSSN,4,5)_"-"_$E(MDSSN,6,9)
"RTN","MDHL7R1",45,0)
 .. S SPC=77-$L(LINE2),LINE2=LINE2_$J(DOBAGE,SPC)
"RTN","MDHL7R1",46,0)
 .. S CNT2=CNT2+1
"RTN","MDHL7R1",47,0)
 .. S ^TMP($J,"MDHL7","TEXT",CNT2)="OBX||TX|||"_LINE2
"RTN","MDHL7R1",48,0)
 .. Q
"RTN","MDHL7R1",49,0)
 . I $P(LINE,P,1)="OBR" D  Q
"RTN","MDHL7R1",50,0)
 .. S LINE2=""
"RTN","MDHL7R1",51,0)
 .. S $P(LINE2,"=",79)=""
"RTN","MDHL7R1",52,0)
 .. S CNT2=CNT2+1
"RTN","MDHL7R1",53,0)
 .. S ^TMP($J,"MDHL7","TEXT",CNT2)="OBX||TX|||"_LINE2
"RTN","MDHL7R1",54,0)
 .. S LINE2=$$FMDATE^HLFNC($E($P(LINE,P,8),1,14))
"RTN","MDHL7R1",55,0)
 .. S LINE2=$$FMTE^XLFDT(LINE2,"1P")
"RTN","MDHL7R1",56,0)
 .. S LINE2="REPORT DATE: "_LINE2
"RTN","MDHL7R1",57,0)
 .. S CNT2=CNT2+1
"RTN","MDHL7R1",58,0)
 .. S ^TMP($J,"MDHL7","TEXT",CNT2)="OBX||TX|||"_LINE2
"RTN","MDHL7R1",59,0)
 .. Q
"RTN","MDHL7R1",60,0)
 . I $P(LINE,P,1)'="OBX" Q
"RTN","MDHL7R1",61,0)
 . I $P(LINE,P,3)'="ST" Q
"RTN","MDHL7R1",62,0)
 . S LINE2=$P($P(LINE,P,4),U,2)
"RTN","MDHL7R1",63,0)
 . I LINE2="Comment" D
"RTN","MDHL7R1",64,0)
 .. S LINE2=""
"RTN","MDHL7R1",65,0)
 .. S CNT2=CNT2+1
"RTN","MDHL7R1",66,0)
 .. S ^TMP($J,"MDHL7","TEXT",CNT2)="OBX||TX|||Comment:"
"RTN","MDHL7R1",67,0)
 .. Q
"RTN","MDHL7R1",68,0)
 . E  S LINE2=LINE2_": "
"RTN","MDHL7R1",69,0)
 . S LINE2=LINE2_$P(LINE,P,6)
"RTN","MDHL7R1",70,0)
 . S CNT2=CNT2+1
"RTN","MDHL7R1",71,0)
 . S ^TMP($J,"MDHL7","TEXT",CNT2)="OBX||TX|||"_LINE2
"RTN","MDHL7R1",72,0)
 . Q
"RTN","MDHL7R1",73,0)
 Q
"RTN","MDHL7U")
0^14^B5939416
"RTN","MDHL7U",1,0)
MDHL7U ; HOIFO/WAA -Routine utilities for CP ;7/23/01  11:41
"RTN","MDHL7U",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7U",3,0)
 ;
"RTN","MDHL7U",4,0)
UPDATE(MDIEN) ; Update File
"RTN","MDHL7U",5,0)
 N DZ
"RTN","MDHL7U",6,0)
 S DZ=0
"RTN","MDHL7U",7,0)
UPD1 L +^MDD(703.1,MDIEN,.1,0):1 G:'$T UPD1
"RTN","MDHL7U",8,0)
 S DZ=$P(^MDD(703.1,MDIEN,.1,0),"^",3)+1
"RTN","MDHL7U",9,0)
 S $P(^MDD(703.1,MDIEN,.1,0),"^",3,4)=DZ_"^"_DZ
"RTN","MDHL7U",10,0)
 L -^MDD(703.1,MDIEN,.1,0)
"RTN","MDHL7U",11,0)
 Q DZ
"RTN","MDHL7U",12,0)
 ;
"RTN","MDHL7U",13,0)
ATT(DEV,ARRAY) ; Get the attributes of a device and pass them back in an
"RTN","MDHL7U",14,0)
 ; array.
"RTN","MDHL7U",15,0)
 N X
"RTN","MDHL7U",16,0)
 S ARRAY=0
"RTN","MDHL7U",17,0)
 I $G(^MDS(702.09,DEV,0))="" D
"RTN","MDHL7U",18,0)
 . S X=0
"RTN","MDHL7U",19,0)
 . S X=$O(^MDS(702.09,"B",DEV,X))
"RTN","MDHL7U",20,0)
 . Q
"RTN","MDHL7U",21,0)
 E  S X=DEV
"RTN","MDHL7U",22,0)
 I X>0 D
"RTN","MDHL7U",23,0)
 . N LINE,I,Z
"RTN","MDHL7U",24,0)
 . S LINE=$G(^MDS(702.09,X,.3)) Q:LINE=""
"RTN","MDHL7U",25,0)
 . S Z=""
"RTN","MDHL7U",26,0)
 . F I=1:1:($L(LINE,U)) S Z=$P(LINE,U,I) I Z=1 D
"RTN","MDHL7U",27,0)
 . . N TEXT
"RTN","MDHL7U",28,0)
 . . S TEXT=$T(ATABLE+I)
"RTN","MDHL7U",29,0)
 . . S ARRAY(I)=TEXT,ARRAY=ARRAY+1
"RTN","MDHL7U",30,0)
 . . Q
"RTN","MDHL7U",31,0)
 . Q
"RTN","MDHL7U",32,0)
 Q
"RTN","MDHL7U",33,0)
PROC ; Create report entry in file (703.1)
"RTN","MDHL7U",34,0)
 N DA,DIK
"RTN","MDHL7U",35,0)
 I DTO=""!(DFN="") Q
"RTN","MDHL7U",36,0)
 S DA=0 F  S DA=$O(^MDD(703.1,"B",UNIQ,DA)) Q:'DA  I $P($G(^MDD(703.1,DA,0)),"^",5)=DFN Q
"RTN","MDHL7U",37,0)
 Q:DA
"RTN","MDHL7U",38,0)
P1 L +^MDD(703.1,0):0 G:'$T P1 D
"RTN","MDHL7U",39,0)
 .S DA=$P(^MDD(703.1,0),"^",3)+1
"RTN","MDHL7U",40,0)
 .S $P(^MDD(703.1,0),"^",3,4)=DA_"^"_DA
"RTN","MDHL7U",41,0)
 .L -^MDD(703.1,0)
"RTN","MDHL7U",42,0)
 .Q
"RTN","MDHL7U",43,0)
 I $D(^MDD(703.1,DA)) G P1
"RTN","MDHL7U",44,0)
 S ^MDD(703.1,DA,0)=UNIQ_"^"_DFN_"^"_$$HL7TFM(DATE)_"^"_INST_"^"_$G(MDD702)_"^"_HLMTIEN_"^^^P"
"RTN","MDHL7U",45,0)
 S ^MDD(703.1,DA,.1,0)="^703.11S^0^0"
"RTN","MDHL7U",46,0)
 S MDIEN=DA
"RTN","MDHL7U",47,0)
 S DIK="^MDD(703.1," D IX1^DIK
"RTN","MDHL7U",48,0)
 Q
"RTN","MDHL7U",49,0)
 ;
"RTN","MDHL7U",50,0)
HL7TFM(MDDATE) ; Convert an HL7 Date to FM
"RTN","MDHL7U",51,0)
 N MDDT,MDYR
"RTN","MDHL7U",52,0)
 S MDYR=$E(MDDATE,1,4)
"RTN","MDHL7U",53,0)
 S MDYR=MDYR-1700
"RTN","MDHL7U",54,0)
 S MDDT=MDYR_$E(MDDATE,5,8)
"RTN","MDHL7U",55,0)
 I $L(MDDATE)>8 S MDDT=MDDT_"."_$E(MDDATE,9,14)
"RTN","MDHL7U",56,0)
 Q MDDT
"RTN","MDHL7U",57,0)
REINDX ; Re-index record
"RTN","MDHL7U",58,0)
 S ^MDD(703.1,DA,.1,DZ,.2,0)="^^"_LN_"^"_LN_"^"_DTO
"RTN","MDHL7U",59,0)
 S DIK="^MDD(703.1," D IX1^DIK
"RTN","MDHL7U",60,0)
 D:ZCODE="C" GENACK^MDHL7X
"RTN","MDHL7U",61,0)
 Q
"RTN","MDHL7U",62,0)
ATABLE ;;This is a table of all the processing routines for devices
"RTN","MDHL7U",63,0)
 ;;PROCESS UNC;.301;UNC^MDHL7U1;3;
"RTN","MDHL7U",64,0)
 ;;PROCESS TEXT;.302;TEXT^MDHL7U2;2;
"RTN","MDHL7U",65,0)
 ;;PROCESS URL;.303;URL^MDHL7U1;4;
"RTN","MDHL7U",66,0)
 ;;PROCESS DLL;.304;DDL^MDHL7U1;6;
"RTN","MDHL7U",67,0)
 ;;PROCESS UUENCODE;.305;UUEN^MDHL7U1;5;
"RTN","MDHL7U",68,0)
 ;;PROCESS XML;.306;XML^MDHL7U1;7;
"RTN","MDHL7U",69,0)
 ;;PROCESS XMS;.307;XMS^MDHL7U1;8;
"RTN","MDHL7U1")
0^15^B15807235
"RTN","MDHL7U1",1,0)
MDHL7U1 ; HOIFO/WAA -Routine utilities for CP PROCESSING OBX ; 7/26/00
"RTN","MDHL7U1",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7U1",3,0)
 ;
"RTN","MDHL7U1",4,0)
PATHCHK(X,Y) ; Check the OBX to see if it is a path then set the path.
"RTN","MDHL7U1",5,0)
 ;
"RTN","MDHL7U1",6,0)
 S Y=0
"RTN","MDHL7U1",7,0)
 I $S($P(X,"|",3)="ST":0,$P(X,"|",3)="TX":0,1:1) Q
"RTN","MDHL7U1",8,0)
 I X["//" S X=$TR(X,"/","\")
"RTN","MDHL7U1",9,0)
 I X["\E\" D
"RTN","MDHL7U1",10,0)
 . N Y,Z
"RTN","MDHL7U1",11,0)
 . S Z=""
"RTN","MDHL7U1",12,0)
 . F I=1:1:$L(X) S Y=$E(X,I) D:Y="\"  S Z=Z_Y
"RTN","MDHL7U1",13,0)
 . . I $E(X,I+1)="E",$E(X,I+2)="\" S I=I+2
"RTN","MDHL7U1",14,0)
 . . Q
"RTN","MDHL7U1",15,0)
 . S X=Z
"RTN","MDHL7U1",16,0)
 . Q
"RTN","MDHL7U1",17,0)
 I X'["\\" Q
"RTN","MDHL7U1",18,0)
 S Y("FPATH")=$P(X,"|",6)
"RTN","MDHL7U1",19,0)
 I Y("FPATH")'["\\" S Y("FPATH")=$P(X,"|",4)
"RTN","MDHL7U1",20,0)
 S Y("FPATH")="\\"_$P(Y("FPATH"),"\\",2)
"RTN","MDHL7U1",21,0)
 S Y("FILE")=$P(Y("FPATH"),"\",($L(Y("FPATH"),"\")))
"RTN","MDHL7U1",22,0)
 I $P(Y("FILE"),".",2)="" Q
"RTN","MDHL7U1",23,0)
 S Y("PATH")=$P(Y("FPATH"),"\",1,($L(Y("FPATH"),"\")-1))
"RTN","MDHL7U1",24,0)
 S Y=1
"RTN","MDHL7U1",25,0)
 Q
"RTN","MDHL7U1",26,0)
REX(DA) ; Reindex the 703.1 entry
"RTN","MDHL7U1",27,0)
 Q:'$D(^MDD(703.1,DA,0))
"RTN","MDHL7U1",28,0)
 S DIK="^MDD(703.1," D IX1^DIK
"RTN","MDHL7U1",29,0)
 Q
"RTN","MDHL7U1",30,0)
UNC ;;PROCESS UNC;.301
"RTN","MDHL7U1",31,0)
 N CNT
"RTN","MDHL7U1",32,0)
 S CNT=0
"RTN","MDHL7U1",33,0)
 F  S CNT=$O(^TMP($J,"MDHL7A",CNT)) Q:CNT<1  D
"RTN","MDHL7U1",34,0)
 . N LINE,PATH,DA,DIK
"RTN","MDHL7U1",35,0)
 . S LINE=^TMP($J,"MDHL7A",CNT) Q:LINE=""
"RTN","MDHL7U1",36,0)
 . I $P(LINE,"|",1)'="OBX" Q
"RTN","MDHL7U1",37,0)
 . D PATHCHK(LINE,.PATH)
"RTN","MDHL7U1",38,0)
 . Q:'PATH
"RTN","MDHL7U1",39,0)
 . S MDDZ=$$UPDATE^MDHL7U(MDIEN) ; Create the entry in the multi.
"RTN","MDHL7U1",40,0)
 . Q:'MDDZ
"RTN","MDHL7U1",41,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,0)=$P(MDATT(PROC),";",6)
"RTN","MDHL7U1",42,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,.1)=PATH("FPATH")
"RTN","MDHL7U1",43,0)
 . Q
"RTN","MDHL7U1",44,0)
 Q
"RTN","MDHL7U1",45,0)
URL ;;PROCESS URL;.303
"RTN","MDHL7U1",46,0)
 N CNT
"RTN","MDHL7U1",47,0)
 S CNT=0
"RTN","MDHL7U1",48,0)
 F  S CNT=$O(^TMP($J,"MDHL7A",CNT)) Q:CNT<1  D
"RTN","MDHL7U1",49,0)
 . N LINE,PATH
"RTN","MDHL7U1",50,0)
 . S LINE=^TMP($J,"MDHL7A",CNT) Q:LINE=""
"RTN","MDHL7U1",51,0)
 . I $P(LINE,"|",1)'="OBX" Q
"RTN","MDHL7U1",52,0)
 . D PATHCHK(LINE,.PATH)
"RTN","MDHL7U1",53,0)
 . I PATH S MDDZ=$$UPDATE^MDHL7U(MDIEN) ; Create the entry in the multi.
"RTN","MDHL7U1",54,0)
 . Q:'MDDZ
"RTN","MDHL7U1",55,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,0)=$P(MDATT(PROC),";",6)
"RTN","MDHL7U1",56,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,.1)=PATH("FPATH")
"RTN","MDHL7U1",57,0)
 . Q
"RTN","MDHL7U1",58,0)
 Q
"RTN","MDHL7U1",59,0)
 Q
"RTN","MDHL7U1",60,0)
DDL ;;PROCESS DLL;.304
"RTN","MDHL7U1",61,0)
 N CNT
"RTN","MDHL7U1",62,0)
 S CNT=0
"RTN","MDHL7U1",63,0)
 F  S CNT=$O(^TMP($J,"MDHL7A",CNT)) Q:CNT<1  D
"RTN","MDHL7U1",64,0)
 . N LINE,PATH
"RTN","MDHL7U1",65,0)
 . S LINE=^TMP($J,"MDHL7A",CNT) Q:LINE=""
"RTN","MDHL7U1",66,0)
 . I $P(LINE,"|",1)'="OBX" Q
"RTN","MDHL7U1",67,0)
 . D PATHCHK(LINE,.PATH)
"RTN","MDHL7U1",68,0)
 . I PATH S MDDZ=$$UPDATE^MDHL7U(MDIEN) ; Create the entry in the multi.
"RTN","MDHL7U1",69,0)
 . Q:'MDDZ
"RTN","MDHL7U1",70,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,0)=$P(MDATT(PROC),";",6)
"RTN","MDHL7U1",71,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,.1)=PATH("FPATH")
"RTN","MDHL7U1",72,0)
 . Q
"RTN","MDHL7U1",73,0)
 Q
"RTN","MDHL7U1",74,0)
 Q
"RTN","MDHL7U1",75,0)
UUEN ;;PROCESS UUENCODE;.305
"RTN","MDHL7U1",76,0)
 N CNT,CNT2,MDDZ
"RTN","MDHL7U1",77,0)
 S (CNT,CNT2)=0
"RTN","MDHL7U1",78,0)
 S MDDZ=$$UPDATE^MDHL7U(MDIEN) ; Create the entry in the multi.
"RTN","MDHL7U1",79,0)
 Q:'MDDZ
"RTN","MDHL7U1",80,0)
 S ^MDD(703.1,MDIEN,.1,MDDZ,0)=$P(MDATT(PROC),";",6)
"RTN","MDHL7U1",81,0)
 S ^MDD(703.1,MDIEN,.1,MDDZ,.1)=$G(FTYPE,"")
"RTN","MDHL7U1",82,0)
 F  S CNT=$O(^TMP($J,"MDHL7","UUENCODE",CNT)) Q:CNT<1  D
"RTN","MDHL7U1",83,0)
 . N LINE
"RTN","MDHL7U1",84,0)
 . S LINE=^TMP($J,"MDHL7","UUENCODE",CNT)
"RTN","MDHL7U1",85,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,.2,CNT,0)=LINE
"RTN","MDHL7U1",86,0)
 . S CNT2=CNT
"RTN","MDHL7U1",87,0)
 . Q
"RTN","MDHL7U1",88,0)
 D NOW^%DTC
"RTN","MDHL7U1",89,0)
 S ^MDD(703.1,MDIEN,.1,MDDZ,.2,0)="^^"_CNT2_"^"_CNT2_"^"_$P(%,".")_"^"
"RTN","MDHL7U1",90,0)
 Q
"RTN","MDHL7U1",91,0)
XML ;;PROCESS XML;.306
"RTN","MDHL7U1",92,0)
 N CNT
"RTN","MDHL7U1",93,0)
 S CNT=0
"RTN","MDHL7U1",94,0)
 F  S CNT=$O(^TMP($J,"MDHL7A",CNT)) Q:CNT<1  D
"RTN","MDHL7U1",95,0)
 . N LINE,PATH
"RTN","MDHL7U1",96,0)
 . S LINE=^TMP($J,"MDHL7A",CNT) Q:LINE=""
"RTN","MDHL7U1",97,0)
 . I $P(LINE,"|",1)'="OBX" Q
"RTN","MDHL7U1",98,0)
 . D PATHCHK(LINE,.PATH)
"RTN","MDHL7U1",99,0)
 . I PATH S MDDZ=$$UPDATE^MDHL7U(MDIEN) ; Create the entry in the multi.
"RTN","MDHL7U1",100,0)
 . Q:'MDDZ
"RTN","MDHL7U1",101,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,0)=$P(MDATT(PROC),";",6)
"RTN","MDHL7U1",102,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,.1)=PATH("FPATH")
"RTN","MDHL7U1",103,0)
 . Q
"RTN","MDHL7U1",104,0)
 Q
"RTN","MDHL7U1",105,0)
 Q
"RTN","MDHL7U1",106,0)
XMS ;;PROCESS XMS;.307
"RTN","MDHL7U1",107,0)
 N CNT
"RTN","MDHL7U1",108,0)
 S CNT=0
"RTN","MDHL7U1",109,0)
 F  S CNT=$O(^TMP($J,"MDHL7A",CNT)) Q:CNT<1  D
"RTN","MDHL7U1",110,0)
 . N LINE,PATH
"RTN","MDHL7U1",111,0)
 . S LINE=^TMP($J,"MDHL7A",CNT) Q:LINE=""
"RTN","MDHL7U1",112,0)
 . I $P(LINE,"|",1)'="OBX" Q
"RTN","MDHL7U1",113,0)
 . D PATHCHK(LINE,.PATH)
"RTN","MDHL7U1",114,0)
 . I PATH S MDDZ=$$UPDATE^MDHL7U(MDIEN) ; Create the entry in the multi.
"RTN","MDHL7U1",115,0)
 . Q:'MDDZ
"RTN","MDHL7U1",116,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,0)=$P(MDATT(PROC),";",6)
"RTN","MDHL7U1",117,0)
 . S ^MDD(703.1,MDIEN,.1,MDDZ,.1)=PATH("FPATH")
"RTN","MDHL7U1",118,0)
 . Q
"RTN","MDHL7U1",119,0)
 Q
"RTN","MDHL7U2")
0^16^B34632878
"RTN","MDHL7U2",1,0)
MDHL7U2 ; HOIFO/WAA -Utilities for CP PROCESSING OBX text  ; 7/26/00
"RTN","MDHL7U2",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7U2",3,0)
 ; Supported IA #2263 for XPAR parameter calls.
"RTN","MDHL7U2",4,0)
 ; Supported IA #3006 for XMXAPIG calls.
"RTN","MDHL7U2",5,0)
 ; Supported IA #10106 for HL7 calls.
"RTN","MDHL7U2",6,0)
 ;
"RTN","MDHL7U2",7,0)
GET123(MDD702) ; return the IEN for an entry in 123 based on the 702
"RTN","MDHL7U2",8,0)
 ; This subroutine will return -1 if no entry is found
"RTN","MDHL7U2",9,0)
 N CONSULT
"RTN","MDHL7U2",10,0)
 S CONSULT=-1
"RTN","MDHL7U2",11,0)
 I $G(^MDD(702,MDD702,0))'="" D  ; Entry in 702 does exist
"RTN","MDHL7U2",12,0)
 . S CONSULT=$$GET1^DIQ(702,MDD702,.05,"I") ; Grab pointer to consults
"RTN","MDHL7U2",13,0)
 . I CONSULT'>0 S CONSULT=-1 Q  ; Bad consult
"RTN","MDHL7U2",14,0)
 . Q
"RTN","MDHL7U2",15,0)
 Q CONSULT
"RTN","MDHL7U2",16,0)
GETREF(CONSULT) ; Return the physician and pointer to 200
"RTN","MDHL7U2",17,0)
 ; in the format pointer200^last^first
"RTN","MDHL7U2",18,0)
 N NREF,REF,PHY
"RTN","MDHL7U2",19,0)
 S PHY=-1
"RTN","MDHL7U2",20,0)
 S REF=$$GET1^DIQ(123,CONSULT,10,"I") D
"RTN","MDHL7U2",21,0)
 . Q:REF=""
"RTN","MDHL7U2",22,0)
 . S NREF=$$GET1^DIQ(123,CONSULT,10,"E") Q:NREF=""
"RTN","MDHL7U2",23,0)
 . S NREF=$$HLNAME^HLFNC(NREF,"^~\&")
"RTN","MDHL7U2",24,0)
 . S PHY=REF_"^"_NREF
"RTN","MDHL7U2",25,0)
 . Q
"RTN","MDHL7U2",26,0)
 Q PHY
"RTN","MDHL7U2",27,0)
 ;
"RTN","MDHL7U2",28,0)
MG(MG) ; This function is to validate that a mailgroup
"RTN","MDHL7U2",29,0)
 ; and that there is someone in it
"RTN","MDHL7U2",30,0)
 ;
"RTN","MDHL7U2",31,0)
 ; Input:
"RTN","MDHL7U2",32,0)
 ;  MG the Mailgroup IEN in the file
"RTN","MDHL7U2",33,0)
 ;   
"RTN","MDHL7U2",34,0)
 ; Output:
"RTN","MDHL7U2",35,0)
 ;  1 = Valid mail group with people in it
"RTN","MDHL7U2",36,0)
 ;  0 = Invalid group with No people in it
"RTN","MDHL7U2",37,0)
 ;
"RTN","MDHL7U2",38,0)
 N X,MGU
"RTN","MDHL7U2",39,0)
 S X=0 I '$G(MG) Q X
"RTN","MDHL7U2",40,0)
 S MGU=$$GET1^DIQ(3.8,+MG_",",.01)
"RTN","MDHL7U2",41,0)
 I MGU'="" D
"RTN","MDHL7U2",42,0)
 . I $$GOTLOCAL^XMXAPIG(MGU) S X=1
"RTN","MDHL7U2",43,0)
 . Q
"RTN","MDHL7U2",44,0)
 Q X
"RTN","MDHL7U2",45,0)
INST(DEV,X) ; Process Device and determine if the device Functioning
"RTN","MDHL7U2",46,0)
 ; DEV = Name of the device from the .01 field
"RTN","MDHL7U2",47,0)
 ; X = 1 is true that the device cleared to process
"RTN","MDHL7U2",48,0)
 ;        0 is false the device is not allowed to process
"RTN","MDHL7U2",49,0)
 ; X(0) = The device name^IEN^Print name if one^
"RTN","MDHL7U2",50,0)
 ;        Processing routine^Routine Checksum^Patch Level
"RTN","MDHL7U2",51,0)
 ; X(I) = The reasons why it is OR is not allowed to process
"RTN","MDHL7U2",52,0)
 N LINE,I,J,Y
"RTN","MDHL7U2",53,0)
 S I=0
"RTN","MDHL7U2",54,0)
 S X=0
"RTN","MDHL7U2",55,0)
 I DEV'?1N.N S DEV=$O(^MDS(702.09,"B",DEV,0)) I DEV<1 S DEV=0
"RTN","MDHL7U2",56,0)
 S LINE=$G(^MDS(702.09,DEV,0))
"RTN","MDHL7U2",57,0)
 S X(I)=$S($P(LINE,U)'="":$P(LINE,U),1:"UNKNOWN")_U_DEV_U_$S($P(LINE,U)'="":$P(LINE,U,6),1:"Device Unknown")
"RTN","MDHL7U2",58,0)
 I LINE="" S I=I+1,X(I)="No Device Found." Q
"RTN","MDHL7U2",59,0)
 I $P(LINE,U,6)="" S I=I+1,X(I)="No Print Name Defined."
"RTN","MDHL7U2",60,0)
 I $P(LINE,U,9)="" S I=I+1,X(I)="Active switch is not set for this device."
"RTN","MDHL7U2",61,0)
 I $P(LINE,U,9)'=1 S I=I+1,X(I)="Device is set to Inactive."
"RTN","MDHL7U2",62,0)
 I $P(LINE,U,2)="" S I=I+1,X(I)="No Mail Group Defined in the instrument file."
"RTN","MDHL7U2",63,0)
 E  D
"RTN","MDHL7U2",64,0)
 . Q:$$MG^MDHL7U2($P(LINE,U,2))
"RTN","MDHL7U2",65,0)
 . N MGU
"RTN","MDHL7U2",66,0)
 . I $$FIND1^DIC(3.8,"","BX","MD DEVICE ERRORS")'=+$P(LINE,U,2) S I=I+1,X(I)="No Mail Group Defined in VISTA." Q
"RTN","MDHL7U2",67,0)
 . S MGU=$$GET1^DIQ(3.8,+$P(LINE,U,2)_",",.01)
"RTN","MDHL7U2",68,0)
 . I '$$GOTLOCAL^XMXAPIG(MGU) S I=I+1,X(I)="No User are defined in the "_MGU_" Mail Group."
"RTN","MDHL7U2",69,0)
 . Q 
"RTN","MDHL7U2",70,0)
 S LINE=$G(^MDS(702.09,DEV,.1))
"RTN","MDHL7U2",71,0)
 I $P(LINE,U,1)="" S I=I+1,X(I)="No Processing routine indicated."
"RTN","MDHL7U2",72,0)
 E  D
"RTN","MDHL7U2",73,0)
 . N ROU,ROUTINE
"RTN","MDHL7U2",74,0)
 . S ROUTINE=$P(LINE,U,1)
"RTN","MDHL7U2",75,0)
 . S ROU=$$VALRTN^MDHL7U2($P(LINE,U,1))
"RTN","MDHL7U2",76,0)
 . I 'ROU S I=I+1,X(I)="Processing routine does not exist."
"RTN","MDHL7U2",77,0)
 . E  D  ; Plug in the needed information about the routine
"RTN","MDHL7U2",78,0)
 . . N LINE,SCND,HOLD
"RTN","MDHL7U2",79,0)
 . . S LINE=X(0)
"RTN","MDHL7U2",80,0)
 . . S $P(LINE,U,4)=ROU ; processing routine
"RTN","MDHL7U2",81,0)
 . . S X(0)=LINE
"RTN","MDHL7U2",82,0)
 . . I $E(ROUTINE,1,2)="MD" Q
"RTN","MDHL7U2",83,0)
 . . I $E(ROUTINE,1,2)="MC" Q
"RTN","MDHL7U2",84,0)
 . . S X(10)="                  ***WARNING***"
"RTN","MDHL7U2",85,0)
 . . S X(11)="   This will not stop the processing of instrument."
"RTN","MDHL7U2",86,0)
 . . S X(12)=" Processing routine "_ROUTINE_" is not in CP Namespace."
"RTN","MDHL7U2",87,0)
 . . S X(13)="                        "
"RTN","MDHL7U2",88,0)
 . . S X(14)="                  ***WARNING***"
"RTN","MDHL7U2",89,0)
 . . Q
"RTN","MDHL7U2",90,0)
 . Q
"RTN","MDHL7U2",91,0)
 I $P(LINE,U,2)="" S I=I+1,X(I)="No Package Code."
"RTN","MDHL7U2",92,0)
 I $P(LINE,U,2)'="M" D
"RTN","MDHL7U2",93,0)
 . N J,VLD
"RTN","MDHL7U2",94,0)
 . S VLD=0
"RTN","MDHL7U2",95,0)
 . I $P(LINE,U,3) D
"RTN","MDHL7U2",96,0)
 . . I $P(LINE,U,6)="" S I=I+1,X(I)="No HL7 Instrument ID."
"RTN","MDHL7U2",97,0)
 . . I '$P(LINE,U,8) S I=I+1,X(I)="No HL7 Link."
"RTN","MDHL7U2",98,0)
 . . Q
"RTN","MDHL7U2",99,0)
 . S LINE=$G(^MDS(702.09,DEV,.3))
"RTN","MDHL7U2",100,0)
 . F J=1:1:7 S VLD=$P(LINE,U,J) I VLD Q 
"RTN","MDHL7U2",101,0)
 . I 'VLD S I=I+1,X(I)="No Valid Attachment Types indicated."
"RTN","MDHL7U2",102,0)
 . Q
"RTN","MDHL7U2",103,0)
 I $$GET^XPAR("SYS","MD IMAGING XFER")="" S I=I+1,X(I)="No Imaging Share indicated in the Systems Parameters"
"RTN","MDHL7U2",104,0)
 I I=0 S X="1",X(1)="Cleared to Process HL7 Messages"
"RTN","MDHL7U2",105,0)
 Q
"RTN","MDHL7U2",106,0)
VALRTN(RTN) ; Function to check Validity
"RTN","MDHL7U2",107,0)
 N X
"RTN","MDHL7U2",108,0)
 S X=RTN X ^%ZOSF("TEST") S X=$T
"RTN","MDHL7U2",109,0)
 Q X
"RTN","MDHL7U2",110,0)
TEXT ;;PROCESS TEXT;.302
"RTN","MDHL7U2",111,0)
 N CNT,LN,DEL
"RTN","MDHL7U2",112,0)
 S SEP=$G(SEP,"^")
"RTN","MDHL7U2",113,0)
 S CNT=0,LN=0,DEL=0
"RTN","MDHL7U2",114,0)
 S MDDZ=$$UPDATE^MDHL7U(MDIEN) ; Create the entry in the multi.
"RTN","MDHL7U2",115,0)
 Q:'MDDZ
"RTN","MDHL7U2",116,0)
 S ^MDD(703.1,MDIEN,.1,MDDZ,0)=$P(MDATT(PROC),";",6)
"RTN","MDHL7U2",117,0)
 S ^MDD(703.1,MDIEN,.1,MDDZ,.2,0)="^^"_LN_"^"_LN_"^"_DT_"^"
"RTN","MDHL7U2",118,0)
 F  S CNT=$O(^TMP($J,"MDHL7","TEXT",CNT)) Q:CNT<1  D
"RTN","MDHL7U2",119,0)
 . N LINE
"RTN","MDHL7U2",120,0)
 . S LINE=$G(^TMP($J,"MDHL7","TEXT",CNT)) Q:LINE=""
"RTN","MDHL7U2",121,0)
 . I $P(LINE,"|",1)'="OBX" Q
"RTN","MDHL7U2",122,0)
 . I $S($P(LINE,"|",3)="TX":0,$P(LINE,"|",3)="FT":0,1:1) Q
"RTN","MDHL7U2",123,0)
 . I $E($P(LINE,"|",6),1,2)="\\" Q
"RTN","MDHL7U2",124,0)
 . I $E($P(LINE,"|",6),1,2)="//" Q
"RTN","MDHL7U2",125,0)
 . ; ^-- Quit if the line is not a text line or a freetext line.
"RTN","MDHL7U2",126,0)
 . S TEXT=$P(LINE,"|",6) Q:TEXT=""
"RTN","MDHL7U2",127,0)
 . I $D(^TMP($J,"MDHL7","TEXT",CNT))=11 D  Q
"RTN","MDHL7U2",128,0)
 . . ; Process the first line then go move on the the sub line
"RTN","MDHL7U2",129,0)
 . . D PROCESS(.TEXT)
"RTN","MDHL7U2",130,0)
 . . N CNT2
"RTN","MDHL7U2",131,0)
 . . S CNT2=0
"RTN","MDHL7U2",132,0)
 . . F  S CNT2=$O(^TMP($J,"MDHL7","TEXT",CNT,CNT2)) Q:CNT2<1  D
"RTN","MDHL7U2",133,0)
 . . . N MSG1
"RTN","MDHL7U2",134,0)
 . . . S MSG1=^TMP($J,"MDHL7","TEXT",CNT,CNT2)
"RTN","MDHL7U2",135,0)
 . . . ; get the next message continution
"RTN","MDHL7U2",136,0)
 . . . S TEXT=TEXT_$P(MSG1,SEP)
"RTN","MDHL7U2",137,0)
 . . . D SAVE(TEXT)
"RTN","MDHL7U2",138,0)
 . . . S TEXT=$P(MSG1,SEP,2,($L(MSG1,SEP)))
"RTN","MDHL7U2",139,0)
 . . . D PROCESS(.TEXT)
"RTN","MDHL7U2",140,0)
 . . . Q
"RTN","MDHL7U2",141,0)
 . . I TEXT'="" S:TEXT["|" TEXT=$P(TEXT,"|") D SAVE(TEXT)
"RTN","MDHL7U2",142,0)
 . . Q
"RTN","MDHL7U2",143,0)
 . E  D SAVE(TEXT)
"RTN","MDHL7U2",144,0)
 . Q
"RTN","MDHL7U2",145,0)
 S ^MDD(703.1,MDIEN,.1,MDDZ,.2,0)="^^"_LN_"^"_LN_"^"_DT_"^"
"RTN","MDHL7U2",146,0)
 Q
"RTN","MDHL7U2",147,0)
SAVE(TEXT) ; Save the data to the file 703.1
"RTN","MDHL7U2",148,0)
 S LN=LN+1
"RTN","MDHL7U2",149,0)
 S TEXT=$P(TEXT,SEP)
"RTN","MDHL7U2",150,0)
 S ^MDD(703.1,MDIEN,.1,MDDZ,.2,LN,0)=TEXT
"RTN","MDHL7U2",151,0)
 Q
"RTN","MDHL7U2",152,0)
PROCESS(TEXT) ; Long lines
"RTN","MDHL7U2",153,0)
 N I,LN2,DEL
"RTN","MDHL7U2",154,0)
 S DEL=$L(TEXT,SEP)
"RTN","MDHL7U2",155,0)
 I DEL'>1 D  Q
"RTN","MDHL7U2",156,0)
 . D SAVE(TEXT)
"RTN","MDHL7U2",157,0)
 . S TEXT=""
"RTN","MDHL7U2",158,0)
 F I=1:1:(DEL-1) D
"RTN","MDHL7U2",159,0)
 . S LN2=$P(TEXT,SEP,I)
"RTN","MDHL7U2",160,0)
 . D SAVE(LN2)
"RTN","MDHL7U2",161,0)
 . ; Process the text and save the data up to the last del piece
"RTN","MDHL7U2",162,0)
 . Q
"RTN","MDHL7U2",163,0)
 ; This is to reset TEXT
"RTN","MDHL7U2",164,0)
 S TEXT=$P(TEXT,SEP,DEL)
"RTN","MDHL7U2",165,0)
 Q
"RTN","MDHL7U2",166,0)
FTOHL7(DATE) ; This subroutine will make a file manager date an HL7 date
"RTN","MDHL7U2",167,0)
 N HLDATE,YYYY,MM,DD,HMS
"RTN","MDHL7U2",168,0)
 S HLDATE=($E(DATE,1,3)+1700)_$E(DATE,4,7)_$P(DATE,".",2)
"RTN","MDHL7U2",169,0)
 I $L(HLDATE)<14 S HLDATE=HLDATE_"00000000000000",HLDATE=$E(HLDATE,1,14)
"RTN","MDHL7U2",170,0)
 Q HLDATE
"RTN","MDHL7U3")
0^17^B550271
"RTN","MDHL7U3",1,0)
MDHL7U3 ; HOIFO/WAA -Utilities for CP to process HL7 messages  ; 7/26/00
"RTN","MDHL7U3",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7U3",3,0)
 ; Reference DBIA #4262 [Supported] for HL7 call.
"RTN","MDHL7U3",4,0)
 ;
"RTN","MDHL7U3",5,0)
PURGE(MDD7031) ;
"RTN","MDHL7U3",6,0)
 ; This sub-routine will delete HL7 772 Message text after a message
"RTN","MDHL7U3",7,0)
 ; been processed by Imaging.
"RTN","MDHL7U3",8,0)
 Q:'$D(^MDD(703.1,MDD7031,0))  ; No entry found
"RTN","MDHL7U3",9,0)
 S MDD772=$P(^MDD(703.1,MDD7031,0),U,6) Q:MDD772=""
"RTN","MDHL7U3",10,0)
 D DELBODY^HLUOPT2(MDD772,"CLINICAL PROCEDURES message purge","^TMP($J,""IN"")")
"RTN","MDHL7U3",11,0)
 S $P(^MDD(703.1,MDD7031,0),U,6)=""
"RTN","MDHL7U3",12,0)
 Q
"RTN","MDHL7X")
0^18^B3333344
"RTN","MDHL7X",1,0)
MDHL7X ; HOIFO/WAA -Generate HL7 Error Message ; 06/08/00
"RTN","MDHL7X",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7X",3,0)
 ; Reference IA #1131 for ^XMB("NETNAME") access.
"RTN","MDHL7X",4,0)
 ; Reference IA #2165 for HLMA1 calls.
"RTN","MDHL7X",5,0)
 ; Reference IA #2729 for XMXAPI calls.
"RTN","MDHL7X",6,0)
 D GENERR,GENACK Q
"RTN","MDHL7X",7,0)
GENERR ; Generate error message
"RTN","MDHL7X",8,0)
 N TXT,INST,MG,XMTO,XMDUZ,XMSUBJ,XMBODY,N,X S MG=0
"RTN","MDHL7X",9,0)
 S INST=DEVIEN
"RTN","MDHL7X",10,0)
 I INST>1 S MG=$P($G(^MDS(702.09,INST,0)),"^",2)
"RTN","MDHL7X",11,0)
 I 'MG!('$$MG^MDHL7U2(MG)) S MG=$$FIND1^DIC(3.8,"","BX","MD DEVICE ERRORS") Q:'MG
"RTN","MDHL7X",12,0)
 S MG=$$GET1^DIQ(3.8,+MG_",",.01)
"RTN","MDHL7X",13,0)
 S XMTO="G."_MG_"@"_^XMB("NETNAME"),XMINSTR("FROM")=.5
"RTN","MDHL7X",14,0)
 I '$D(X) S X=ECODE(0)
"RTN","MDHL7X",15,0)
 S TXT(1)=ERRTX,TXT(2)=X,TXT(3)=" "
"RTN","MDHL7X",16,0)
 S N=3
"RTN","MDHL7X",17,0)
 I 'ECODE D  ; This is to process Device errors
"RTN","MDHL7X",18,0)
 . N X
"RTN","MDHL7X",19,0)
 . S X=0
"RTN","MDHL7X",20,0)
 . F  S X=$O(ECODE(X)) Q:X<1  S N=N+1,TXT(N)=ECODE(X)
"RTN","MDHL7X",21,0)
 . S N=N+1,TXT(N)=" "
"RTN","MDHL7X",22,0)
 . Q
"RTN","MDHL7X",23,0)
 F X="MSH","PID","OBR","OBX" I $D(SEG(X)) S N=N+1,TXT(N)=SEG(X)
"RTN","MDHL7X",24,0)
 S XMSUBJ="A Clinical Instrument HL7 Error has occurred."
"RTN","MDHL7X",25,0)
 S XMBODY="TXT"
"RTN","MDHL7X",26,0)
 D SENDMSG^XMXAPI(DUZ,XMSUBJ,XMBODY,XMTO,.XMINSTR)
"RTN","MDHL7X",27,0)
 Q
"RTN","MDHL7X",28,0)
GENACK ; Generate an HL7 ACK message
"RTN","MDHL7X",29,0)
 ; Reference IA #2165 for GENACK^HLMA1 call
"RTN","MDHL7X",30,0)
 N HLA,HLEID,HLEIDS,HLARYTYP,HLFORMAT,HLRESLTA
"RTN","MDHL7X",31,0)
 S HLA("HLA",1)="MSA"_HL("FS")_$S($D(ERRTX):"AR",1:"AA")_HL("FS")_HL("MID")_$S($D(ERRTX):HL("FS")_ERRTX,1:"")
"RTN","MDHL7X",32,0)
 S HLEID=HL("EID"),HLEIDS=HL("EIDS"),HLARYTYP="LM",HLFORMAT=1,HLRESLTA=HL("MID")
"RTN","MDHL7X",33,0)
 D GENACK^HLMA1(HLEID,HLMTIENS,HLEIDS,HLARYTYP,HLFORMAT,.HLRESTLA)
"RTN","MDHL7X",34,0)
 N ERRTX Q
"RTN","MDHL7XXX")
0^34^B4422982
"RTN","MDHL7XXX",1,0)
MDHL7XXX ; HOIFO/DP - Loopback device for CP ; 22-MAY-2003 13:37:41
"RTN","MDHL7XXX",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDHL7XXX",3,0)
 ; IA# 10103 [Supported] Calls to XLFDT
"RTN","MDHL7XXX",4,0)
 ;
"RTN","MDHL7XXX",5,0)
EN ; [Procedure] Main entry point
"RTN","MDHL7XXX",6,0)
 ; wait 10 seconds and then produce some results in the CP RESULTS file
"RTN","MDHL7XXX",7,0)
 ; Variables STUDY and INST passed in via taskman
"RTN","MDHL7XXX",8,0)
 H 10 ; Wait for the study to update
"RTN","MDHL7XXX",9,0)
 N MDFDA,MDIEN,MDERR K ^TMP($J)
"RTN","MDHL7XXX",10,0)
 L +(^MDD(703.1,"B")):15 E  Q
"RTN","MDHL7XXX",11,0)
 F  D  Q:'$D(^MDD(703.1,"B",X))
"RTN","MDHL7XXX",12,0)
 .S X="127001_"_(+$H)_$E($P($H,",",2)_"00000",1,5)
"RTN","MDHL7XXX",13,0)
 S MDFDA(703.1,"+1,",.01)=X
"RTN","MDHL7XXX",14,0)
 D UPDATE^DIE("","MDFDA","MDIEN","MDERR")
"RTN","MDHL7XXX",15,0)
 L -(^MDD(703.1,"B"))
"RTN","MDHL7XXX",16,0)
 S MDIEN=+$G(MDIEN(1),-1)_"," Q:+MDIEN<0
"RTN","MDHL7XXX",17,0)
 ; Proceed to build the report here using MDIEN in file 703.1
"RTN","MDHL7XXX",18,0)
 S MDFDA(703.1,MDIEN,.02)=$P(^MDD(702,STUDY,0),U,1)
"RTN","MDHL7XXX",19,0)
 S MDFDA(703.1,MDIEN,.03)=$$NOW^XLFDT()
"RTN","MDHL7XXX",20,0)
 S MDFDA(703.1,MDIEN,.04)=INST
"RTN","MDHL7XXX",21,0)
 D:+$$GET1^DIQ(702.09,INST_",",.13,"I")  ; Bi-Directional?
"RTN","MDHL7XXX",22,0)
 .S MDFDA(703.1,MDIEN,.05)=STUDY
"RTN","MDHL7XXX",23,0)
 S MDFDA(703.11,"+2,"_MDIEN,.01)="1"
"RTN","MDHL7XXX",24,0)
 D UPDATE^DIE("","MDFDA","MDIEN","MDERR")
"RTN","MDHL7XXX",25,0)
 S MDIEN=+MDIEN(2)_","_MDIEN
"RTN","MDHL7XXX",26,0)
 S MDFDA(703.11,MDIEN,.2)=$NA(MDFDA(703.11,MDIEN,.2))
"RTN","MDHL7XXX",27,0)
 D GETS^DIQ(702,STUDY_",",".01;.011;.02;.03;.04;.05;.06;.07;.08;.09;.091;.1;.11;.12;.991","ENR",$NA(^TMP($J)))
"RTN","MDHL7XXX",28,0)
 S X="" F  S X=$O(^TMP($J,702,STUDY_",",X)) Q:X=""  D
"RTN","MDHL7XXX",29,0)
 .S Y=$O(MDFDA(703.11,MDIEN,.2,""),-1)+1
"RTN","MDHL7XXX",30,0)
 .S MDFDA(703.11,MDIEN,.2,Y)=X_": "_$G(^TMP($J,702,STUDY_",",X,"E"))
"RTN","MDHL7XXX",31,0)
 S MDFDA(703.1,$P(MDIEN,",",2,3),.09)="P"
"RTN","MDHL7XXX",32,0)
 D UPDATE^DIE("","MDFDA","MDIEN","MDERR")
"RTN","MDHL7XXX",33,0)
 K ^TMP($J)
"RTN","MDHL7XXX",34,0)
 Q
"RTN","MDHL7XXX",35,0)
 ;
"RTN","MDHL7XXX",36,0)
TEST ; Queue up the study creator
"RTN","MDHL7XXX",37,0)
 N DIC
"RTN","MDHL7XXX",38,0)
 S DIC=702,DIC(0)="AEQM",DIC("A")="Select Study to create a report for: "
"RTN","MDHL7XXX",39,0)
 D ^DIC Q:+Y<1
"RTN","MDHL7XXX",40,0)
 S STUDY=+Y,INST=+$P(^MDD(702,+Y,0),U,11)
"RTN","MDHL7XXX",41,0)
 D LOOPBACK(STUDY,INST)
"RTN","MDHL7XXX",42,0)
 Q
"RTN","MDHL7XXX",43,0)
 ;
"RTN","MDHL7XXX",44,0)
LOOPBACK(STUDY,INST) ; Queue up the Loopback process
"RTN","MDHL7XXX",45,0)
 N ZTSAVE,ZTRTN,ZTIO,ZTDESC,ZTDTH,ZTSK
"RTN","MDHL7XXX",46,0)
 S ZTSAVE("STUDY")=STUDY,ZTSAVE("INST")=INST
"RTN","MDHL7XXX",47,0)
 S ZTRTN="EN^MDHL7XXX"
"RTN","MDHL7XXX",48,0)
 S ZTIO=""
"RTN","MDHL7XXX",49,0)
 S ZTDESC="CP Loopback test"
"RTN","MDHL7XXX",50,0)
 S ZTDTH=$$NOW^XLFDT()
"RTN","MDHL7XXX",51,0)
 D ^%ZTLOAD
"RTN","MDHL7XXX",52,0)
 Q
"RTN","MDHL7XXX",53,0)
 ;
"RTN","MDPCE")
0^19^B4297640
"RTN","MDPCE",1,0)
MDPCE ; HIRMFO/NCA - Routine For Data Extract ; [05-28-2002 12:55]
"RTN","MDPCE",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDPCE",3,0)
 ; Integration Agreements:
"RTN","MDPCE",4,0)
 ; IA# 1889 [Subscription] Create New Visit
"RTN","MDPCE",5,0)
 ;
"RTN","MDPCE",6,0)
EN1(MDINST,MDPDTE,MDPR,MDTYP) ; [Function] PCE Visit Creation
"RTN","MDPCE",7,0)
 ; Input parameters
"RTN","MDPCE",8,0)
 ;  1. MDINST [Literal/Required] Transaction IEN
"RTN","MDPCE",9,0)
 ;  2. MDPDT [Literal/Optional] Procedure Date/Time
"RTN","MDPCE",10,0)
 ;  3. MDPR [Literal/Required] CP Definition
"RTN","MDPCE",11,0)
 ;  4. MDTYP [Literal/Required] Type of Visit (Ambulatory or Hospitalization)
"RTN","MDPCE",12,0)
 ;
"RTN","MDPCE",13,0)
 N DATA,MDCLOC,MDPERR,MDJ,MDPKG,MDRES,MDSTR,MDVISIT,MDDRES K ^TMP("MDPXAPI",$J)
"RTN","MDPCE",14,0)
 S MDOUT=""
"RTN","MDPCE",15,0)
 S MDPKG=$$FIND1^DIC(9.4,"","MX","CLINICAL PROCEDURES")
"RTN","MDPCE",16,0)
 I 'MDPKG Q "-1^CLINICAL PROCEDURES does not exist in Package File."
"RTN","MDPCE",17,0)
 I '$D(^MDD(702,MDINST,0)) Q "-1^No Study Record."
"RTN","MDPCE",18,0)
 S MDSTR=$G(^MDD(702,MDINST,0))
"RTN","MDPCE",19,0)
 S MDJ=0,MDJ=MDJ+1
"RTN","MDPCE",20,0)
 S MDCLOC=$$GET1^DIQ(702.01,+MDPR_",",.05,"I")
"RTN","MDPCE",21,0)
 I 'MDCLOC Q "-1^No Hospital Location for CP Definition."
"RTN","MDPCE",22,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"ENC D/T")=MDPDTE
"RTN","MDPCE",23,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"PATIENT")=$P(MDSTR,"^",1)
"RTN","MDPCE",24,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"HOS LOC")=MDCLOC
"RTN","MDPCE",25,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"SERVICE CATEGORY")=MDTYP
"RTN","MDPCE",26,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"ENCOUNTER TYPE")="P"
"RTN","MDPCE",27,0)
 S MDRES=$$DATA2PCE^PXAPI("^TMP(""MDPXAPI"",$J)",MDPKG,"CLINICAL PROCEDURES",.MDVISIT,"","",1,"",.MDPERR)
"RTN","MDPCE",28,0)
 I MDRES S MDOUT=MDVISIT_"^"_MDCLOC_";"_MDPDTE_";"_MDTYP S MDFDA(702,MDINST_",",.07)=MDTYP_";"_MDPDTE_";"_MDCLOC D FILE^DIE("K","MDFDA") K ^TMP("MDPXAPI",$J) Q MDOUT
"RTN","MDPCE",29,0)
 K ^TMP("MDPXAPI",$J)
"RTN","MDPCE",30,0)
 S MDOUT="-1^PCE Visit Creation Error."
"RTN","MDPCE",31,0)
 Q MDOUT
"RTN","MDPCE",32,0)
 ;
"RTN","MDPOST")
0^20^B10491828
"RTN","MDPOST",1,0)
MDPOST ; HOIFO/DP - Post Init ;2/18/04  11:39
"RTN","MDPOST",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDPOST",3,0)
 ; Integration Agreements:
"RTN","MDPOST",4,0)
 ; IA# 2263 [Supported] XPAR Utilities
"RTN","MDPOST",5,0)
 ; IA# 3006 [Supported] Calls to XMXAPIG
"RTN","MDPOST",6,0)
 ; IA# 10141 [Supported] Calls to XPDUTL
"RTN","MDPOST",7,0)
 ;
"RTN","MDPOST",8,0)
EN ; [Procedure] Setup preliminary parameters
"RTN","MDPOST",9,0)
 ; This submodule is called during the KIDS installation
"RTN","MDPOST",10,0)
 ; process.
"RTN","MDPOST",11,0)
 ;
"RTN","MDPOST",12,0)
 ; Variables:
"RTN","MDPOST",13,0)
 ;  DIK: [Private] Fileman delete variable
"RTN","MDPOST",14,0)
 ;  MDCLIENT: [Private] Current client version (#.#.#.#)
"RTN","MDPOST",15,0)
 ;  MDFILE: [Private] Scratch
"RTN","MDPOST",16,0)
 ;  MDRET: [Private] Scratch
"RTN","MDPOST",17,0)
 ;  MDX: [Private] Scratch
"RTN","MDPOST",18,0)
 ;
"RTN","MDPOST",19,0)
 ; New private variables
"RTN","MDPOST",20,0)
 NEW DIK,MDCLIENT,MDFILE,MDRET,MDX
"RTN","MDPOST",21,0)
 W $$MSG("Setting compatible client versions")
"RTN","MDPOST",22,0)
 D XPARDEL("MD VERSION CHK",1)
"RTN","MDPOST",23,0)
 D XPARDEL("MD CRC VALUES",1)
"RTN","MDPOST",24,0)
 S MDCLIENT="1.0.0.0" D
"RTN","MDPOST",25,0)
 .D SETPAR("MD VERSION CHK","CPUSER.EXE:"_MDCLIENT,1)
"RTN","MDPOST",26,0)
 .D SETPAR("MD VERSION CHK","CPMANAGER.EXE:"_MDCLIENT,1)
"RTN","MDPOST",27,0)
 .D SETPAR("MD VERSION CHK","CPGATEWAY.EXE:"_MDCLIENT,1)
"RTN","MDPOST",28,0)
 .D SETPAR("MD CRC VALUES","CPUSER.EXE:"_MDCLIENT,"9FCFC891")
"RTN","MDPOST",29,0)
 .D SETPAR("MD CRC VALUES","CPMANAGER.EXE:"_MDCLIENT,"85F451A6")
"RTN","MDPOST",30,0)
 .D SETPAR("MD CRC VALUES","CPGATEWAY.EXE:"_MDCLIENT,"411D7A05")
"RTN","MDPOST",31,0)
 ;
"RTN","MDPOST",32,0)
 W $$MSG("Applying latest set of valid file types")
"RTN","MDPOST",33,0)
 D GETLST^XPAR(.MDRET,"SYS","MD FILE EXTENSIONS")
"RTN","MDPOST",34,0)
 F MDX=0:0 S MDX=$O(MDRET(MDX)) Q:'MDX  D
"RTN","MDPOST",35,0)
 .D DEL^XPAR("SYS","MD FILE EXTENSIONS",$P(MDRET(MDX),"^",1))
"RTN","MDPOST",36,0)
 F MDX=1:1 S MDFILE=$P($T(FILEDAT+MDX),";;",2) Q:MDFILE="**END**"  D
"RTN","MDPOST",37,0)
 .D SETPAR("MD FILE EXTENSIONS",$P(MDFILE,U,1),$P(MDFILE,U,2))
"RTN","MDPOST",38,0)
 ;
"RTN","MDPOST",39,0)
 W $$MSG("Setting CP web link")
"RTN","MDPOST",40,0)
 D SETPAR("MD WEBLINK",1,$$URL())
"RTN","MDPOST",41,0)
 ;
"RTN","MDPOST",42,0)
 W $$MSG("Validating Mail Group 'MD DEVICE ERRORS' membership")
"RTN","MDPOST",43,0)
 D:'$$GOTLOCAL^XMXAPIG("MD DEVICE ERRORS")
"RTN","MDPOST",44,0)
 .D MES^XPDUTL("There are no local users in the mail group.")
"RTN","MDPOST",45,0)
 .D MES^XPDUTL("Adding '"_$$GET1^DIQ(200,DUZ_",",.01)_"'...")
"RTN","MDPOST",46,0)
 .D ADDMBRS^XMXAPIG(DUZ,"MD DEVICE ERRORS",DUZ)
"RTN","MDPOST",47,0)
 Q
"RTN","MDPOST",48,0)
 ;
"RTN","MDPOST",49,0)
INIT ; [Procedure] Build Procedure File
"RTN","MDPOST",50,0)
 D INITPF^MDPOST1
"RTN","MDPOST",51,0)
 Q
"RTN","MDPOST",52,0)
 ;
"RTN","MDPOST",53,0)
MSG(TEXT) ; [Procedure] Display message to user
"RTN","MDPOST",54,0)
 ; Input parameters
"RTN","MDPOST",55,0)
 ;  1. TEXT [Literal/Required] Text to display to the user
"RTN","MDPOST",56,0)
 ;
"RTN","MDPOST",57,0)
 D MES^XPDUTL(" MDPOST-"_TEXT_"...")
"RTN","MDPOST",58,0)
 D MES^XPDUTL("")
"RTN","MDPOST",59,0)
 Q ""
"RTN","MDPOST",60,0)
 ;
"RTN","MDPOST",61,0)
SETPAR(PAR,INS,VAL) ; [Procedure] Set value into XPAR parameter
"RTN","MDPOST",62,0)
 ; Input parameters
"RTN","MDPOST",63,0)
 ;  1. PAR [Literal/Required] Parameter
"RTN","MDPOST",64,0)
 ;  2. INS [Literal/Required] Instance
"RTN","MDPOST",65,0)
 ;  3. VAL [Literal/Required] New value
"RTN","MDPOST",66,0)
 ;
"RTN","MDPOST",67,0)
 D EN^XPAR("SYS",PAR,INS,VAL)
"RTN","MDPOST",68,0)
 Q
"RTN","MDPOST",69,0)
 ;
"RTN","MDPOST",70,0)
XPARDEL(MDPAR,VALUES) ; [Procedure] Remove a parameter for XPAR
"RTN","MDPOST",71,0)
 ; VALUES determines the mode of deletion.
"RTN","MDPOST",72,0)
 ; 0: Will delete *BOTH* the values and the parameter definition (DEFAULT)
"RTN","MDPOST",73,0)
 ; 1: Will only delete the values of the parameter
"RTN","MDPOST",74,0)
 ;
"RTN","MDPOST",75,0)
 ; Input parameters
"RTN","MDPOST",76,0)
 ;  1. MDPAR [Literal/Required] Name of the parameter definition
"RTN","MDPOST",77,0)
 ;  2. VALUES [Literal/] Values Only 0/1
"RTN","MDPOST",78,0)
 ;
"RTN","MDPOST",79,0)
 ; Variables:
"RTN","MDPOST",80,0)
 ;  DA: [Private] Fileman variable
"RTN","MDPOST",81,0)
 ;  DIK: [Private] Fileman variable
"RTN","MDPOST",82,0)
 ;  MDENT: [Private] Parameter entity
"RTN","MDPOST",83,0)
 ;
"RTN","MDPOST",84,0)
 ; New private variables
"RTN","MDPOST",85,0)
 NEW DA,DIK,MDENT
"RTN","MDPOST",86,0)
 S VALUES=$G(VALUES,0)
"RTN","MDPOST",87,0)
 K ^TMP("MDPOST",$J)
"RTN","MDPOST",88,0)
 D ENVAL^XPAR($NA(^TMP("MDPOST",$J)),MDPAR,"","",1)
"RTN","MDPOST",89,0)
 S MDENT=""  F  S MDENT=$O(^TMP("MDPOST",$J,MDENT)) Q:MDENT=""  D
"RTN","MDPOST",90,0)
 .D NDEL^XPAR(MDENT,MDPAR)
"RTN","MDPOST",91,0)
 K ^TMP("MDPOST",$J)
"RTN","MDPOST",92,0)
 Q:VALUES
"RTN","MDPOST",93,0)
 S DA=$$FIND1^DIC(8989.51,"","",MDPAR,"B") D:DA>0
"RTN","MDPOST",94,0)
 .S DIK="^XTV(8989.51," D ^DIK
"RTN","MDPOST",95,0)
 Q
"RTN","MDPOST",96,0)
 ;
"RTN","MDPOST",97,0)
URL() ; [Function] Return Clinical Procedures Homepage URL
"RTN","MDPOST",98,0)
 Q "vista.med.va.gov/ClinicalSpecialties/clinproc/"
"RTN","MDPOST",99,0)
 ;
"RTN","MDPOST",100,0)
FILEDAT ; [Data Module] Allowable file types
"RTN","MDPOST",101,0)
 ;;.txt^Text files
"RTN","MDPOST",102,0)
 ;;.rtf^Rich text files
"RTN","MDPOST",103,0)
 ;;.jpg^JPEG Images
"RTN","MDPOST",104,0)
 ;;.jpeg^JPEG Images
"RTN","MDPOST",105,0)
 ;;.bmp^Bitmap Images
"RTN","MDPOST",106,0)
 ;;.tiff^TIFF Graphics
"RTN","MDPOST",107,0)
 ;;.pdf^Portable Document Format
"RTN","MDPOST",108,0)
 ;;.html^Hypertext Markup Language files
"RTN","MDPOST",109,0)
 ;;**END**
"RTN","MDPOST1")
0^21^B70965250
"RTN","MDPOST1",1,0)
MDPOST1 ; HOIFO/NCA/DP - Build CP DEFINITION file (#702.01) - Optional Post Init ; [12-04-2002 13:06]
"RTN","MDPOST1",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDPOST1",3,0)
INITPF ; [Procedure] Build Procedure File
"RTN","MDPOST1",4,0)
 NEW MD,MDADD,MDFDA,MDPROC,MDSKIP
"RTN","MDPOST1",5,0)
 W !,"This option will populate your CP PROCEDURE DEFINITION file"
"RTN","MDPOST1",6,0)
 W !,"with data."
"RTN","MDPOST1",7,0)
 D:$O(^MDS(702.01,0))
"RTN","MDPOST1",8,0)
 .W !!,$C(7),"NOTICE: You already have a procedure file with data."
"RTN","MDPOST1",9,0)
 .W !,"This option will not over-write existing data, it"
"RTN","MDPOST1",10,0)
 .W !,"will only add procedures not in your current file."
"RTN","MDPOST1",11,0)
 W !!,"Continue with loading" S %=2 D YN^DICN Q:%'=1
"RTN","MDPOST1",12,0)
 W !!,"Loading..."
"RTN","MDPOST1",13,0)
 S (MDADD,MDSKIP)=0
"RTN","MDPOST1",14,0)
 F MD=1:1 S MDPROC=$P($T(PROCDAT+MD),";;",2) Q:MDPROC="**END**"  D
"RTN","MDPOST1",15,0)
 .W !,MDPROC,"..."
"RTN","MDPOST1",16,0)
 .I $D(^MDS(702.01,"B",MDPROC)) D  Q
"RTN","MDPOST1",17,0)
 ..W "Already in file, skipped." S MDSKIP=MDSKIP+1
"RTN","MDPOST1",18,0)
 .Q:$D(^MDS(702.01,"B",MDPROC))
"RTN","MDPOST1",19,0)
 .S MDFDA(702.01,"+1,",.01)=MDPROC
"RTN","MDPOST1",20,0)
 .S MDFDA(702.01,"+1,",.09)=0
"RTN","MDPOST1",21,0)
 .D UPDATE^DIE("","MDFDA","")
"RTN","MDPOST1",22,0)
 .S MDADD=MDADD+1
"RTN","MDPOST1",23,0)
 .W "Added."
"RTN","MDPOST1",24,0)
 W !!,"Finished."
"RTN","MDPOST1",25,0)
 W !,"Procedures Added:   ",MDADD
"RTN","MDPOST1",26,0)
 W !,"Procedures Skipped: ",MDSKIP
"RTN","MDPOST1",27,0)
 Q
"RTN","MDPOST1",28,0)
 ;
"RTN","MDPOST1",29,0)
PROCDAT ; [Data Module] Procedure names as released with Version 1.0
"RTN","MDPOST1",30,0)
 ;;ABD PARACENTESIS: FOLLOWUP
"RTN","MDPOST1",31,0)
 ;;ABD PARACENTESIS: INITIAL
"RTN","MDPOST1",32,0)
 ;;ABLATION OF AV NODE FUNCTION
"RTN","MDPOST1",33,0)
 ;;AICD INTER/CONDITION
"RTN","MDPOST1",34,0)
 ;;AIRWAY RESISTANCE
"RTN","MDPOST1",35,0)
 ;;ANO BIOPSY
"RTN","MDPOST1",36,0)
 ;;ANO CONTROL BLEEDING
"RTN","MDPOST1",37,0)
 ;;ANO DIAGNOSTIC (BRUSHINGS)
"RTN","MDPOST1",38,0)
 ;;ANO HOT BIOPSY(IES)
"RTN","MDPOST1",39,0)
 ;;ANO SINGLE TUMOR (HOT/BICAP)
"RTN","MDPOST1",40,0)
 ;;ANOSCOPY
"RTN","MDPOST1",41,0)
 ;;ARRHYTHMIA INDUCTION BY PACING
"RTN","MDPOST1",42,0)
 ;;ARTERIAL BLOOD GASES
"RTN","MDPOST1",43,0)
 ;;ARTERIAL CANNULATION
"RTN","MDPOST1",44,0)
 ;;ARTERIAL PUNCTURE
"RTN","MDPOST1",45,0)
 ;;ARTHROC.ASPIR.INJ.INT.JT.BUR
"RTN","MDPOST1",46,0)
 ;;ARTHROC.ASPIR.INJ.MAJ.JT.BUR
"RTN","MDPOST1",47,0)
 ;;ARTHROCENT.ASPIR.INJ.SM.JT.BUR
"RTN","MDPOST1",48,0)
 ;;ASPIRATION
"RTN","MDPOST1",49,0)
 ;;BIOPSY
"RTN","MDPOST1",50,0)
 ;;BIOPSY LUNG, PERCUTANEOUS NDL
"RTN","MDPOST1",51,0)
 ;;BIOPSY, PLEURA
"RTN","MDPOST1",52,0)
 ;;BONE MARROW
"RTN","MDPOST1",53,0)
 ;;BONE MARROW INTERPRETATION
"RTN","MDPOST1",54,0)
 ;;BRONC DIAGNOSTIC W/BAL
"RTN","MDPOST1",55,0)
 ;;BRONC W/BRONC WASHING
"RTN","MDPOST1",56,0)
 ;;BRONC W/TRANSBRONC LUNG BX
"RTN","MDPOST1",57,0)
 ;;BRONCHIAL BRUSH
"RTN","MDPOST1",58,0)
 ;;BRONCHOSCOPY W/BRONCH BIOPSY
"RTN","MDPOST1",59,0)
 ;;BRONCHOSCOPY W/WANG NEEDLE
"RTN","MDPOST1",60,0)
 ;;BRONCHOSCOPY, LASER
"RTN","MDPOST1",61,0)
 ;;BRONCHOSCOPY, STENT PLACEMENT
"RTN","MDPOST1",62,0)
 ;;BRONCHOSCOPY, THERAPEUTIC
"RTN","MDPOST1",63,0)
 ;;BRONCOSCOPY/FB REMOVAL
"RTN","MDPOST1",64,0)
 ;;C&P EXAM
"RTN","MDPOST1",65,0)
 ;;CARDIAC CATHETERIZATION
"RTN","MDPOST1",66,0)
 ;;CARDIAC REHAB W/O ECG MON
"RTN","MDPOST1",67,0)
 ;;CARDIAC REHAB/W ECG MON
"RTN","MDPOST1",68,0)
 ;;CARDIOPULMONARY REHABILITATION
"RTN","MDPOST1",69,0)
 ;;CARDIOVERSION, ELECTIVE
"RTN","MDPOST1",70,0)
 ;;CENTRAL VENOUS CANNULATION
"RTN","MDPOST1",71,0)
 ;;CHEMOTHERAPY
"RTN","MDPOST1",72,0)
 ;;COL ABL (OTHR THAN SNARE/BI)
"RTN","MDPOST1",73,0)
 ;;COL BIOPSY
"RTN","MDPOST1",74,0)
 ;;COL CONTROL HEM.
"RTN","MDPOST1",75,0)
 ;;COL DIAGNOSTIC (BRUSHINGS)
"RTN","MDPOST1",76,0)
 ;;COL HOT BIOPSY(IES)
"RTN","MDPOST1",77,0)
 ;;COL REMOVAL FB
"RTN","MDPOST1",78,0)
 ;;COL SNARE
"RTN","MDPOST1",79,0)
 ;;COLONOSCOPY
"RTN","MDPOST1",80,0)
 ;;COMPREHENSIVE EP EVALUATION
"RTN","MDPOST1",81,0)
 ;;CPAP/BIPAP VENTILATION
"RTN","MDPOST1",82,0)
 ;;DIALYSIS PROCEDURES, HEMO
"RTN","MDPOST1",83,0)
 ;;DIALYSIS TRAINING/COMPLETE
"RTN","MDPOST1",84,0)
 ;;DIFFUSION
"RTN","MDPOST1",85,0)
 ;;DILUTION STUDIES FOR CO MEAS
"RTN","MDPOST1",86,0)
 ;;ECG
"RTN","MDPOST1",87,0)
 ;;ECG (EKG), RHYTHM STRIP
"RTN","MDPOST1",88,0)
 ;;ECG 12 LEAD
"RTN","MDPOST1",89,0)
 ;;ECG 24 HOUR HOLTER MONITOR
"RTN","MDPOST1",90,0)
 ;;ECG MONITORING
"RTN","MDPOST1",91,0)
 ;;ECG WITH INTERPRETATION
"RTN","MDPOST1",92,0)
 ;;ECG, EVENT RECORDER
"RTN","MDPOST1",93,0)
 ;;ECG, RHYTHM TRACING
"RTN","MDPOST1",94,0)
 ;;ECG, SIGNAL AVERAGE
"RTN","MDPOST1",95,0)
 ;;ECHO
"RTN","MDPOST1",96,0)
 ;;ECHO TRANSESOPHOGEAL SINGLE PL
"RTN","MDPOST1",97,0)
 ;;ECHO, 2D M-MODE
"RTN","MDPOST1",98,0)
 ;;ECHO, DOPPLER COLOR FLOW
"RTN","MDPOST1",99,0)
 ;;ECHO, DOPPLER, COMPLETE
"RTN","MDPOST1",100,0)
 ;;ECHO, TRANSESOPHOGEAL
"RTN","MDPOST1",101,0)
 ;;ECHO, TRANSESOPHOGEAL BIPLANE
"RTN","MDPOST1",102,0)
 ;;ECHO, TRANSTHORACIC
"RTN","MDPOST1",103,0)
 ;;EGD
"RTN","MDPOST1",104,0)
 ;;EGD ABL (OTH THAN SNARE/BI)
"RTN","MDPOST1",105,0)
 ;;EGD BAND LIGATION
"RTN","MDPOST1",106,0)
 ;;EGD BIOPSY
"RTN","MDPOST1",107,0)
 ;;EGD DIAGNOSTIC (BRUSHINGS)
"RTN","MDPOST1",108,0)
 ;;EGD DILATION BALLOON
"RTN","MDPOST1",109,0)
 ;;EGD DILATION WIRE
"RTN","MDPOST1",110,0)
 ;;EGD FOREIGN BODY
"RTN","MDPOST1",111,0)
 ;;EGD HOT BIOPSY(IES) / BICAP
"RTN","MDPOST1",112,0)
 ;;EGD INJECTION / SCLEROSIS
"RTN","MDPOST1",113,0)
 ;;EGD SNARE/SINGLE
"RTN","MDPOST1",114,0)
 ;;EGD TUBE/STENT
"RTN","MDPOST1",115,0)
 ;;EKG, ROUTINE (12 LEADS)
"RTN","MDPOST1",116,0)
 ;;ENDO OF BOWEL POUCH W/ BIOPSY
"RTN","MDPOST1",117,0)
 ;;ENDOMYOCARDIAL BIOPSY
"RTN","MDPOST1",118,0)
 ;;ENDOSCOPIC ULTRASOUND
"RTN","MDPOST1",119,0)
 ;;ENDOSCOPIC ULTRASOUND, BIOPSY
"RTN","MDPOST1",120,0)
 ;;ENDOSCOPY OF BOWEL POUCH
"RTN","MDPOST1",121,0)
 ;;ENDOTRACHEAL INTUBATION
"RTN","MDPOST1",122,0)
 ;;ENTEROSCOPY
"RTN","MDPOST1",123,0)
 ;;EP EVAL OF CARDIO/DEFIB LEADS
"RTN","MDPOST1",124,0)
 ;;EP EVAL OF CARDIOVERTER/DEFIB
"RTN","MDPOST1",125,0)
 ;;EP EVAL W/ ARRHYTHMIA INDUCT
"RTN","MDPOST1",126,0)
 ;;EP EVAL W/ L ATRIAL RECORD
"RTN","MDPOST1",127,0)
 ;;EP EVAL W/ L VENTRIC RECORD
"RTN","MDPOST1",128,0)
 ;;EP FOLLOWUP STUDY W/PACING
"RTN","MDPOST1",129,0)
 ;;EP STUDY
"RTN","MDPOST1",130,0)
 ;;EPICARDIAL/ENDOCARDIAL MAPPING
"RTN","MDPOST1",131,0)
 ;;ERCP
"RTN","MDPOST1",132,0)
 ;;ERCP ABL (OTHR THAN SN/BI)
"RTN","MDPOST1",133,0)
 ;;ERCP BALLOON DILATION
"RTN","MDPOST1",134,0)
 ;;ERCP BIOPSY
"RTN","MDPOST1",135,0)
 ;;ERCP DEST STONES
"RTN","MDPOST1",136,0)
 ;;ERCP DIAGNOSTIC (BRUSHINGS)
"RTN","MDPOST1",137,0)
 ;;ERCP DRAIN, TUBE
"RTN","MDPOST1",138,0)
 ;;ERCP INSERTION OF TUBE/STENT
"RTN","MDPOST1",139,0)
 ;;ERCP PRESSURE OF ODDI
"RTN","MDPOST1",140,0)
 ;;ERCP REM STONES
"RTN","MDPOST1",141,0)
 ;;ERCP RMV FB OR CHG OF TUBE
"RTN","MDPOST1",142,0)
 ;;ERCP SPHINCTEROTOMY
"RTN","MDPOST1",143,0)
 ;;ES ABLATION (OTHER)
"RTN","MDPOST1",144,0)
 ;;ES BAND LIGATION
"RTN","MDPOST1",145,0)
 ;;ES BIOPSY
"RTN","MDPOST1",146,0)
 ;;ES CONTROL BLEEDING
"RTN","MDPOST1",147,0)
 ;;ES DIAGNOSTIC ENDO (BRUSHINGS)
"RTN","MDPOST1",148,0)
 ;;ES DILATION (BALLOON)
"RTN","MDPOST1",149,0)
 ;;ES DILATION (WIRE)
"RTN","MDPOST1",150,0)
 ;;ES HOT BIOPSY(IES)
"RTN","MDPOST1",151,0)
 ;;ES INJECTION / SCLEROSIS
"RTN","MDPOST1",152,0)
 ;;ES INSERTION TUBE/STENT
"RTN","MDPOST1",153,0)
 ;;ES REMOVAL FB
"RTN","MDPOST1",154,0)
 ;;ES SNARE
"RTN","MDPOST1",155,0)
 ;;ESOPHAGEAL DILATION
"RTN","MDPOST1",156,0)
 ;;ESOPHAGEAL MOTILITY STUDY
"RTN","MDPOST1",157,0)
 ;;ESOPHAGEAL RECORDING
"RTN","MDPOST1",158,0)
 ;;ESOPHAGUS
"RTN","MDPOST1",159,0)
 ;;ETT
"RTN","MDPOST1",160,0)
 ;;ETT W/ O2 CONSUMPTION
"RTN","MDPOST1",161,0)
 ;;ETT W/ THALLIUM SCAN
"RTN","MDPOST1",162,0)
 ;;EXAM,SYNOVIAL FLUID CRYSTALS
"RTN","MDPOST1",163,0)
 ;;EXCERCISE CHALLENGE
"RTN","MDPOST1",164,0)
 ;;FINE NEEDLE ASPIRATION
"RTN","MDPOST1",165,0)
 ;;FLEX SIG
"RTN","MDPOST1",166,0)
 ;;FLOW VOLUME LOOP
"RTN","MDPOST1",167,0)
 ;;FLX ABLATION (OTHER)
"RTN","MDPOST1",168,0)
 ;;FLX BIOPSY
"RTN","MDPOST1",169,0)
 ;;FLX CONTROL HEM.
"RTN","MDPOST1",170,0)
 ;;FLX DECOMPRESS VOLVULUS
"RTN","MDPOST1",171,0)
 ;;FLX DIAGNOSTIC (BRUSHINGS)
"RTN","MDPOST1",172,0)
 ;;FLX HOT BIOPSY(IES)
"RTN","MDPOST1",173,0)
 ;;FLX REMOVAL FB
"RTN","MDPOST1",174,0)
 ;;FLX SNARE
"RTN","MDPOST1",175,0)
 ;;FRC
"RTN","MDPOST1",176,0)
 ;;FT CHANGE OF G TUBE
"RTN","MDPOST1",177,0)
 ;;FT EGD FOR PEG PLACEMENT
"RTN","MDPOST1",178,0)
 ;;FT PERC PLACEMENT OF G TUBE
"RTN","MDPOST1",179,0)
 ;;FT REPOS TUBE THRU DUODENUM
"RTN","MDPOST1",180,0)
 ;;FT SM INT ENDO CONV G-J TUBE
"RTN","MDPOST1",181,0)
 ;;FT SM INT ENDO J TUBE PLACE
"RTN","MDPOST1",182,0)
 ;;HEART RATE VAR. ANALYSIS
"RTN","MDPOST1",183,0)
 ;;HEMODIALYSIS, ONE EVAL
"RTN","MDPOST1",184,0)
 ;;HEMODIALYSIS, REPEATED EVAL.
"RTN","MDPOST1",185,0)
 ;;HOLTER
"RTN","MDPOST1",186,0)
 ;;I & D /DEBRIDEMENT
"RTN","MDPOST1",187,0)
 ;;ICD IMPLANTATION
"RTN","MDPOST1",188,0)
 ;;ICD INTERROGATION
"RTN","MDPOST1",189,0)
 ;;ILEOSCOPY THROUGH STOMA
"RTN","MDPOST1",190,0)
 ;;ILEOSCOPY W/ BIOPSY
"RTN","MDPOST1",191,0)
 ;;INFUSION 1-8 HRS.
"RTN","MDPOST1",192,0)
 ;;INFUSION TO 1 HR.
"RTN","MDPOST1",193,0)
 ;;INJ FOR ANGIOGRAPHY
"RTN","MDPOST1",194,0)
 ;;INJ FOR AV BYPASS GRAFTS
"RTN","MDPOST1",195,0)
 ;;INJ TENDON/LIGAMENT/CYST
"RTN","MDPOST1",196,0)
 ;;INJECTION, CARDIAC CATH
"RTN","MDPOST1",197,0)
 ;;INTRA-ATRIAL PACING
"RTN","MDPOST1",198,0)
 ;;INTRA-ATRIAL RECORDING
"RTN","MDPOST1",199,0)
 ;;INTRAVENTRICULAR PACING
"RTN","MDPOST1",200,0)
 ;;INTRODUCTION OF NEEDLE/CATH
"RTN","MDPOST1",201,0)
 ;;IV FLUID THERAPY
"RTN","MDPOST1",202,0)
 ;;IV INFUSION
"RTN","MDPOST1",203,0)
 ;;IV PUSH
"RTN","MDPOST1",204,0)
 ;;IV THER. 1-8 HRS.
"RTN","MDPOST1",205,0)
 ;;IV THER. UP TO 1 HR.
"RTN","MDPOST1",206,0)
 ;;LASER SURGERY (NOT YAG)
"RTN","MDPOST1",207,0)
 ;;LEFT HEART CATHETERIZATIION
"RTN","MDPOST1",208,0)
 ;;LEFT VENTRICULAR RECORDING
"RTN","MDPOST1",209,0)
 ;;LIVER BIOPSY
"RTN","MDPOST1",210,0)
 ;;LUNG COMPLIANCE
"RTN","MDPOST1",211,0)
 ;;MECHANICAL VENTILATION
"RTN","MDPOST1",212,0)
 ;;METHACHOLINE CHALLENGE
"RTN","MDPOST1",213,0)
 ;;MONITOR W/ REVIEW & REPORT
"RTN","MDPOST1",214,0)
 ;;OVER GUIDE WIRE
"RTN","MDPOST1",215,0)
 ;;PACEMAKE IMPLANTATION
"RTN","MDPOST1",216,0)
 ;;PACEMAKER
"RTN","MDPOST1",217,0)
 ;;PACEMAKER FOLLOW UP
"RTN","MDPOST1",218,0)
 ;;PACEMAKER, RHYTHM STRIP
"RTN","MDPOST1",219,0)
 ;;PARACENTESIS
"RTN","MDPOST1",220,0)
 ;;PERIPH BLOOD SMEAR INTERPRET
"RTN","MDPOST1",221,0)
 ;;PHLEBOTOMY
"RTN","MDPOST1",222,0)
 ;;PLACE CATHETER IN VEIN, HEMO
"RTN","MDPOST1",223,0)
 ;;PLEURODESIS
"RTN","MDPOST1",224,0)
 ;;PNEU BALLOON (30MM+) ACHALASIA
"RTN","MDPOST1",225,0)
 ;;PROC ABLATION (OTHER)
"RTN","MDPOST1",226,0)
 ;;PROC BIOPSY
"RTN","MDPOST1",227,0)
 ;;PROC CONTROL BLEEDING
"RTN","MDPOST1",228,0)
 ;;PROC DIAGNOSTIC (BRUSHINGS)
"RTN","MDPOST1",229,0)
 ;;PROC DILATION
"RTN","MDPOST1",230,0)
 ;;PROC HOT BIOPSY(IES)
"RTN","MDPOST1",231,0)
 ;;PROC REMOVAL FB
"RTN","MDPOST1",232,0)
 ;;PROC SNARE
"RTN","MDPOST1",233,0)
 ;;PROC TUMORS, MULT (HOT/SN/BI)
"RTN","MDPOST1",234,0)
 ;;PROCTOSCOPY
"RTN","MDPOST1",235,0)
 ;;PROGRAMMED STIMULATION/PACING
"RTN","MDPOST1",236,0)
 ;;PSEUDOFOLLICULAR SCAN
"RTN","MDPOST1",237,0)
 ;;PULMONARY ARTERY CATHETER
"RTN","MDPOST1",238,0)
 ;;PULMONARY FUNCTION INTERPRET
"RTN","MDPOST1",239,0)
 ;;PULMONARY PROCEDURES
"RTN","MDPOST1",240,0)
 ;;PULSE OXIMETRY MULTIPLE REHAB
"RTN","MDPOST1",241,0)
 ;;PULSE OXIMETRY SINGLE REHAB
"RTN","MDPOST1",242,0)
 ;;PULSE OXIMETRY, MULTIPLE
"RTN","MDPOST1",243,0)
 ;;RHEUMATOLOGY PROCEDURES
"RTN","MDPOST1",244,0)
 ;;RIGHT HEART CATHETERIZATION
"RTN","MDPOST1",245,0)
 ;;RIGHT VENTRICULAR RECORDING
"RTN","MDPOST1",246,0)
 ;;RT & LT HEART CATHETERS
"RTN","MDPOST1",247,0)
 ;;SB ENDO W/ABLATION
"RTN","MDPOST1",248,0)
 ;;SB ENDO W/BLEEDING CONTROL
"RTN","MDPOST1",249,0)
 ;;SB ENDO W/FB REMOVAL
"RTN","MDPOST1",250,0)
 ;;SB ENDO W/HOT BIOPSIES
"RTN","MDPOST1",251,0)
 ;;SB ENDO W/INCL ILEUM
"RTN","MDPOST1",252,0)
 ;;SB ENDO W/INCL ILEUM,BIOPSY
"RTN","MDPOST1",253,0)
 ;;SB ENDO W/INCL ILEUM,BLD CONT
"RTN","MDPOST1",254,0)
 ;;SB ENDO W/TUMORS (SNARE)
"RTN","MDPOST1",255,0)
 ;;SCREENING, MAMMOGRAM
"RTN","MDPOST1",256,0)
 ;;SCREENS AND INJ, ANTI-COAG
"RTN","MDPOST1",257,0)
 ;;SLOW VITAL CAPACITY
"RTN","MDPOST1",258,0)
 ;;SMALL BOWEL ENDOSCOPY
"RTN","MDPOST1",259,0)
 ;;SMALL BOWEL ENDOSCOPY,BIOPSY
"RTN","MDPOST1",260,0)
 ;;SOUND/BOUGIE;SINGLE/MULT
"RTN","MDPOST1",261,0)
 ;;SPIROMETRY
"RTN","MDPOST1",262,0)
 ;;SPIROMETRY, PRE & POST
"RTN","MDPOST1",263,0)
 ;;STO ABLATION
"RTN","MDPOST1",264,0)
 ;;STO BIOPSY
"RTN","MDPOST1",265,0)
 ;;STO CONTROL HEM.
"RTN","MDPOST1",266,0)
 ;;STO DIAG/BRUSHING
"RTN","MDPOST1",267,0)
 ;;STO FOREIGN BODY
"RTN","MDPOST1",268,0)
 ;;STO HOT BIOPSY(IES)
"RTN","MDPOST1",269,0)
 ;;STO SNARE
"RTN","MDPOST1",270,0)
 ;;STOMA
"RTN","MDPOST1",271,0)
 ;;STRESS TEST, ECHO IMAGING
"RTN","MDPOST1",272,0)
 ;;STRESS TEST, EXER (NON-IMAGE)
"RTN","MDPOST1",273,0)
 ;;STRESS TEST, NUCLEAR IMAGING
"RTN","MDPOST1",274,0)
 ;;SUBCUT./IM
"RTN","MDPOST1",275,0)
 ;;SYMPTOM LIMITED EXERCISE TEST
"RTN","MDPOST1",276,0)
 ;;THORACENTESIS
"RTN","MDPOST1",277,0)
 ;;THORACIC GAS VOLUME
"RTN","MDPOST1",278,0)
 ;;THORACOSTOMY
"RTN","MDPOST1",279,0)
 ;;THRESHOLD TEST (DUAL)
"RTN","MDPOST1",280,0)
 ;;THRESHOLD TEST (SGL)
"RTN","MDPOST1",281,0)
 ;;TILT TABLE TEST FOR SYNCOPE
"RTN","MDPOST1",282,0)
 ;;TRANS. BLOOD
"RTN","MDPOST1",283,0)
 ;;TRANS. INDWELL. VEN. ACC. CARE
"RTN","MDPOST1",284,0)
 ;;TRANS. THERAPEUTIC APHERESIS
"RTN","MDPOST1",285,0)
 ;;TRANSFUSION
"RTN","MDPOST1",286,0)
 ;;VENIPUNCTURE (ROUTINE), HEMO
"RTN","MDPOST1",287,0)
 ;;**END**
"RTN","MDRPCOD")
0^22^B8917458
"RTN","MDRPCOD",1,0)
MDRPCOD ; HOIFO/DP - Object RPCs (TMDProcedureDef) ; [01-09-2003 15:20]
"RTN","MDRPCOD",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCOD",3,0)
 ; Integration Agreements:
"RTN","MDRPCOD",4,0)
 ; IA# 3468 [Subscription] Consult APIs.
"RTN","MDRPCOD",5,0)
ADDINST ; [Procedure] Add instrument to the list
"RTN","MDRPCOD",6,0)
 D:'$D(^MDS(702.01,MDPROC,.1,"B",DATA))
"RTN","MDRPCOD",7,0)
 .S MDFDA(702.011,"+1,"_MDPROC_",",.01)=DATA
"RTN","MDRPCOD",8,0)
 .D UPDATE^DIE("","MDFDA")
"RTN","MDRPCOD",9,0)
 S @RESULTS@(0)="1^Updated"
"RTN","MDRPCOD",10,0)
 Q
"RTN","MDRPCOD",11,0)
 ;
"RTN","MDRPCOD",12,0)
CONLIST ; [Procedure] Returns list of Consult Procedures linked to CP Def
"RTN","MDRPCOD",13,0)
 D CPLINKS^GMRCCP(.MDRET,MDPROC)
"RTN","MDRPCOD",14,0)
 F X=0:0 S X=$O(MDRET(X)) Q:'X  D
"RTN","MDRPCOD",15,0)
 .S ^TMP($J,X)=$P(MDRET(X),U,1)_"  Consults IEN: "_$P(MDRET(X),U,2)
"RTN","MDRPCOD",16,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOD",17,0)
 Q
"RTN","MDRPCOD",18,0)
 ;
"RTN","MDRPCOD",19,0)
CONSYN ; [Procedure] Returns 0/1 for linked to Consults
"RTN","MDRPCOD",20,0)
 S @RESULTS@(0)=+$$CPLINK^GMRCCP(MDPROC)
"RTN","MDRPCOD",21,0)
 Q
"RTN","MDRPCOD",22,0)
 ;
"RTN","MDRPCOD",23,0)
DELINST ; [Procedure] Delete instrument from procedure
"RTN","MDRPCOD",24,0)
 S X=$O(^MDS(702.01,MDPROC,.1,"B",DATA,0)) D:X
"RTN","MDRPCOD",25,0)
 .S MDFDA(702.011,X_","_MDPROC_",",.01)=""
"RTN","MDRPCOD",26,0)
 .D FILE^DIE("","MDFDA")
"RTN","MDRPCOD",27,0)
 S @RESULTS@(0)="1^Updated"
"RTN","MDRPCOD",28,0)
 Q
"RTN","MDRPCOD",29,0)
 ;
"RTN","MDRPCOD",30,0)
GETINST ; [Procedure] Return all instruments and IEN if assigned
"RTN","MDRPCOD",31,0)
 F X=0:0 S X=$O(^MDS(702.09,X)) Q:'X  D
"RTN","MDRPCOD",32,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOD",33,0)
 .S @RESULTS@(Y)="702.09;"_X_U_$P(^MDS(702.09,X,0),U)_U_($D(^MDS(702.01,MDPROC,.1,"B",X))>0)
"RTN","MDRPCOD",34,0)
 S @RESULTS@(0)=$O(@RESULTS@(""),-1)
"RTN","MDRPCOD",35,0)
 Q
"RTN","MDRPCOD",36,0)
 ;
"RTN","MDRPCOD",37,0)
GETPROC ; [Procedure] Get procedure list
"RTN","MDRPCOD",38,0)
 I MDPROC D  Q
"RTN","MDRPCOD",39,0)
 .F X=0:0 S X=$O(^MDS(702.01,"ASPEC",MDPROC,X)) Q:'X  D
"RTN","MDRPCOD",40,0)
 ..S Y="702.01;"_X_U_^MDS(702.01,X,0)
"RTN","MDRPCOD",41,0)
 ..S @RESULTS@(+$O(@RESULTS@(""),-1)+1)=Y
"RTN","MDRPCOD",42,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOD",43,0)
 F X=0:0 S X=$O(^MDS(702.01,X)) Q:'X  D:'$P(^MDS(702.01,X,0),U,2)
"RTN","MDRPCOD",44,0)
 .S Y="702.01;"_X_U_^MDS(702.01,X,0)
"RTN","MDRPCOD",45,0)
 .S @RESULTS@(+$O(@RESULTS@(""),-1)+1)=Y
"RTN","MDRPCOD",46,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOD",47,0)
 Q
"RTN","MDRPCOD",48,0)
 ;
"RTN","MDRPCOD",49,0)
GETSPEC ; [Procedure] Return all/active specialties (Default = ACTIVE)
"RTN","MDRPCOD",50,0)
 S MDPROC=$G(MDPROC,"ACTIVE")
"RTN","MDRPCOD",51,0)
 D:MDPROC="ACTIVE"
"RTN","MDRPCOD",52,0)
 .F X=0:0 S X=$O(^MDS(702.01,"ASPEC",X)) Q:'X  D
"RTN","MDRPCOD",53,0)
 ..S Y=$O(^TMP($J,""),-1)+1
"RTN","MDRPCOD",54,0)
 ..S @RESULTS@(Y)="45.7;"_X_U_$$GET1^DIQ(45.7,X_",",.01)_U_$D(^MDS(702.01,"ASPEC",X))
"RTN","MDRPCOD",55,0)
 D:MDPROC="ALL"
"RTN","MDRPCOD",56,0)
 .D LIST^DIC(45.7,,,"P")
"RTN","MDRPCOD",57,0)
 .F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","MDRPCOD",58,0)
 ..S @RESULTS@(X)="45.7;"_^TMP("DILIST",$J,X,0)
"RTN","MDRPCOD",59,0)
 ..S $P(@RESULTS@(X),U,3)=$D(^MDS(702.01,"ASPEC",+^TMP("DILIST",$J,X,0)))
"RTN","MDRPCOD",60,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOD",61,0)
 .S @RESULTS@(Y)="45.7;^Unassigned^1"
"RTN","MDRPCOD",62,0)
 S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOD",63,0)
 S @RESULTS@(0)=Y_"^SPECIALTY"
"RTN","MDRPCOD",64,0)
 Q
"RTN","MDRPCOD",65,0)
 ;
"RTN","MDRPCOD",66,0)
LINK(MDPROC) ; [Procedure] Check if CP Procedure Link to Consult
"RTN","MDRPCOD",67,0)
 I '$G(MDPROC) Q "-1^No Procedure Internal Entry Number"
"RTN","MDRPCOD",68,0)
 Q $$CPLINK^GMRCCP(MDPROC)
"RTN","MDRPCOD",69,0)
 ;
"RTN","MDRPCOD",70,0)
LINKS(RESULTS,MDPROC) ; [Procedure] Get list of Consults Procedure names linked to a CP
"RTN","MDRPCOD",71,0)
 I '$G(MDPROC) S RESULTS(1)="-1^No Procedure Internal Entry Number" Q
"RTN","MDRPCOD",72,0)
 D CPLINKS^GMRCCP(.RESULTS,MDPROC)
"RTN","MDRPCOD",73,0)
 Q
"RTN","MDRPCOD",74,0)
 ;
"RTN","MDRPCOD",75,0)
RPC(RESULTS,OPTION,MDPROC,DATA) ; [Procedure] Main RPC Call
"RTN","MDRPCOD",76,0)
 N MDX,MDENT,MDINST,MDRET,MDFDA
"RTN","MDRPCOD",77,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","MDRPCOD",78,0)
 I $T(@OPTION)]"" D @OPTION
"RTN","MDRPCOD",79,0)
 D:'$D(@RESULTS) BADRPC^MDRPCU("MD TMDPROCEDURE","MDRPCOD",OPTION)
"RTN","MDRPCOD",80,0)
 D CLEAN^DILF
"RTN","MDRPCOD",81,0)
 Q
"RTN","MDRPCOD",82,0)
 ;
"RTN","MDRPCOG")
0^23^B21809669
"RTN","MDRPCOG",1,0)
MDRPCOG ; HOIFO/DP - CP Gateway ; [01-09-2003 15:20]
"RTN","MDRPCOG",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCOG",3,0)
 ; Description:
"RTN","MDRPCOG",4,0)
 ; This is the main routine that manages the CLINICAL PROCEDURES Gateway functions.  
"RTN","MDRPCOG",5,0)
 ; Access to these functions is controlled via the MD GATEWAY RPC.
"RTN","MDRPCOG",6,0)
 ;
"RTN","MDRPCOG",7,0)
 ; Integration Agreements:
"RTN","MDRPCOG",8,0)
 ; IA# 10097 [Supported] %ZOSV calls
"RTN","MDRPCOG",9,0)
 ; IA# 10103 [Supported] Calls to XLFDT
"RTN","MDRPCOG",10,0)
 ; IA# 2263 [Supported] Calls to XPAR
"RTN","MDRPCOG",11,0)
 ;
"RTN","MDRPCOG",12,0)
CLEANUP ; [Procedure] Cleanup a past results report
"RTN","MDRPCOG",13,0)
 F X=0:0 S X=$O(^MDD(703.1,DATA,.1,X)) Q:'X  D
"RTN","MDRPCOG",14,0)
 .S:$G(^MDD(703.1,DATA,.1,X,.1))]"" MDFDA(703.11,X_","_DATA_",",.1)="@"
"RTN","MDRPCOG",15,0)
 .S:$O(^MDD(703.1,DATA,.1,X,.2,0)) MDFDA(703.11,X_","_DATA_",",.2)="@"
"RTN","MDRPCOG",16,0)
 D:$D(MDFDA) FILE^DIE("K","MDFDA","MDERR")
"RTN","MDRPCOG",17,0)
 I $D(MDERR) D ERROR^MDRPCU(RESULTS,.MDERR) Q
"RTN","MDRPCOG",18,0)
 ; Manual cleanup of the empty UNC nodes and WP root
"RTN","MDRPCOG",19,0)
 F X=0:0 S X=$O(^MDD(703.1,DATA,.1,X)) Q:'X  D
"RTN","MDRPCOG",20,0)
 .K ^MDD(703.1,DATA,.1,X,.1)
"RTN","MDRPCOG",21,0)
 .K ^MDD(703.1,DATA,.1,X,.2)
"RTN","MDRPCOG",22,0)
 S @RESULTS@(0)="1^Item purged"
"RTN","MDRPCOG",23,0)
 Q
"RTN","MDRPCOG",24,0)
 ;
"RTN","MDRPCOG",25,0)
DONE ; [Procedure] Done processing, Mark study status
"RTN","MDRPCOG",26,0)
 S MDFDA(703.1,+DATA_",",.09)=$G(P1,"U")
"RTN","MDRPCOG",27,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOG",28,0)
 Q
"RTN","MDRPCOG",29,0)
 ;
"RTN","MDRPCOG",30,0)
GETATT ; [Procedure] Get attachments for study
"RTN","MDRPCOG",31,0)
 F X=0:0 S X=$O(^MDD(703.1,+DATA,.1,X)) Q:'X  D
"RTN","MDRPCOG",32,0)
 .S Y=+$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOG",33,0)
 .S @RESULTS@(Y)="703.11;"_X_U_^MDD(703.1,+DATA,.1,X,0)
"RTN","MDRPCOG",34,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOG",35,0)
 Q
"RTN","MDRPCOG",36,0)
 ;
"RTN","MDRPCOG",37,0)
GETOLD ; [Procedure] Returns old results by date
"RTN","MDRPCOG",38,0)
 ; Variables:
"RTN","MDRPCOG",39,0)
 ;  LOGDATE: [Private] Loop variable
"RTN","MDRPCOG",40,0)
 ;  STOPDATE: [Private] Date to stop retrieving entries
"RTN","MDRPCOG",41,0)
 ;
"RTN","MDRPCOG",42,0)
 ; New private variables
"RTN","MDRPCOG",43,0)
 NEW LOGDATE,STOPDATE,MDX
"RTN","MDRPCOG",44,0)
 S LOGDATE=+DATA,STOPDATE=+$P(DATA,U,2)+.2359
"RTN","MDRPCOG",45,0)
 F  S LOGDATE=$O(^MDD(703.1,"ADTP",LOGDATE)) W !,"-->",LOGDATE Q:'LOGDATE!(LOGDATE>STOPDATE)  D  Q:Y>50
"RTN","MDRPCOG",46,0)
 .F MDX=0:0 S MDX=$O(^MDD(703.1,"ADTP",LOGDATE,MDX)) Q:'MDX  D
"RTN","MDRPCOG",47,0)
 ..I '$$CHECK(MDX) Q
"RTN","MDRPCOG",48,0)
 ..S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOG",49,0)
 ..S @RESULTS@(Y)="703.1;"_MDX_U_$G(^MDD(703.1,MDX,0))
"RTN","MDRPCOG",50,0)
 S:'LOGDATE!(LOGDATE>STOPDATE) LOGDATE=STOPDATE
"RTN","MDRPCOG",51,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_LOGDATE_U_$$FMTE^XLFDT(LOGDATE)
"RTN","MDRPCOG",52,0)
 Q
"RTN","MDRPCOG",53,0)
 ;
"RTN","MDRPCOG",54,0)
GETPAR ; [Procedure] Get a parameter value for an RPC Call
"RTN","MDRPCOG",55,0)
 S @RESULTS@(0)=$$PARVAL(DATA)
"RTN","MDRPCOG",56,0)
 Q
"RTN","MDRPCOG",57,0)
 ;
"RTN","MDRPCOG",58,0)
GETTXT ; [Procedure] Get attachment text for processing
"RTN","MDRPCOG",59,0)
 N X,STUDY,ATT
"RTN","MDRPCOG",60,0)
 S X=0,STUDY=$P(DATA,",",2),ATT=+DATA
"RTN","MDRPCOG",61,0)
 I '$O(^MDD(703.1,STUDY,.1,ATT,.2,0)) S @RESULTS@(0)="-1^No Data" Q
"RTN","MDRPCOG",62,0)
 F  S X=$O(^MDD(703.1,STUDY,.1,ATT,.2,X)) Q:'X  S @RESULTS@(X)=^(X,0)
"RTN","MDRPCOG",63,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOG",64,0)
 Q
"RTN","MDRPCOG",65,0)
 ;
"RTN","MDRPCOG",66,0)
NEXT ; [Procedure] Get the next study to process
"RTN","MDRPCOG",67,0)
 S Y=+$O(^MDD(703.1,"ASTATUS","P",$G(DATA)))
"RTN","MDRPCOG",68,0)
 S @RESULTS@(0)=$S($D(^MDD(703.1,Y,0)):"703.1;"_Y_U_^MDD(703.1,Y,0),1:0)
"RTN","MDRPCOG",69,0)
 Q
"RTN","MDRPCOG",70,0)
 ;
"RTN","MDRPCOG",71,0)
PARVAL(INSTANCE) ; [Procedure] Extrinsic get of parameter values
"RTN","MDRPCOG",72,0)
 ; Input parameters
"RTN","MDRPCOG",73,0)
 ;  1. INSTANCE [Literal/Required] XPAR instance
"RTN","MDRPCOG",74,0)
 ;
"RTN","MDRPCOG",75,0)
 Q $$GET^XPAR("SYS","MD GATEWAY",INSTANCE)
"RTN","MDRPCOG",76,0)
 ;
"RTN","MDRPCOG",77,0)
POLL ; [Procedure] Returns server time and flag for studies to process
"RTN","MDRPCOG",78,0)
 I $$PARVAL("Shutdown Flag")]"" D  Q
"RTN","MDRPCOG",79,0)
 .S @RESULTS@(0)="-1^SHUTDOWN"
"RTN","MDRPCOG",80,0)
 .D SETPAR("Shutdown Flag","")
"RTN","MDRPCOG",81,0)
 S @RESULTS@(0)=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MDRPCOG",82,0)
 S @RESULTS@(1)=$D(^MDD(703.1,"ASTATUS","P"))
"RTN","MDRPCOG",83,0)
 Q
"RTN","MDRPCOG",84,0)
 ;
"RTN","MDRPCOG",85,0)
POLLER(RESULTS) ; [Procedure] Non-Disk activity poller
"RTN","MDRPCOG",86,0)
 ; With the exception of a shutdown request pending, this stand alone RPC will operate 
"RTN","MDRPCOG",87,0)
 ; without creating any disk activity and not crash during backup operations on the main 
"RTN","MDRPCOG",88,0)
 ; VistA server.
"RTN","MDRPCOG",89,0)
 ;
"RTN","MDRPCOG",90,0)
 ; Input parameters
"RTN","MDRPCOG",91,0)
 ;  1. RESULTS [Reference/Required] 
"RTN","MDRPCOG",92,0)
 ;
"RTN","MDRPCOG",93,0)
 I $$PARVAL("Shutdown Flag")]"" D  Q
"RTN","MDRPCOG",94,0)
 .S RESULTS(0)="-1^SHUTDOWN"
"RTN","MDRPCOG",95,0)
 .D SETPAR("Shutdown Flag","")
"RTN","MDRPCOG",96,0)
 S RESULTS(0)=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MDRPCOG",97,0)
 S RESULTS(1)=$D(^MDD(703.1,"ASTATUS","P"))
"RTN","MDRPCOG",98,0)
 Q
"RTN","MDRPCOG",99,0)
 ;
"RTN","MDRPCOG",100,0)
RPC(RESULTS,OPTION,DATA,P1) ; [Procedure] 
"RTN","MDRPCOG",101,0)
 ; Input parameters
"RTN","MDRPCOG",102,0)
 ;  1. RESULTS [Literal/Required] RPC Return Array
"RTN","MDRPCOG",103,0)
 ;  2. OPTION [Literal/Required] Gateway Option to execute
"RTN","MDRPCOG",104,0)
 ;  3. DATA [Literal/Required] Other information
"RTN","MDRPCOG",105,0)
 ;  4. P1 [Literal/Required] Overflow variable
"RTN","MDRPCOG",106,0)
 ;
"RTN","MDRPCOG",107,0)
 ; Variables:
"RTN","MDRPCOG",108,0)
 ;  MDENV: [Private] Server environment variable
"RTN","MDRPCOG",109,0)
 ;  MDERR: [Private] Fileman return array
"RTN","MDRPCOG",110,0)
 ;  MDFDA: [Private] Fileman FDA
"RTN","MDRPCOG",111,0)
 ;
"RTN","MDRPCOG",112,0)
 ; New private variables
"RTN","MDRPCOG",113,0)
 NEW MDENV,MDERR,MDFDA
"RTN","MDRPCOG",114,0)
 S RESULTS=$NA(^TMP("MDRPCOB",$J)) K @RESULTS
"RTN","MDRPCOG",115,0)
 D @OPTION
"RTN","MDRPCOG",116,0)
 Q
"RTN","MDRPCOG",117,0)
 ;
"RTN","MDRPCOG",118,0)
SETFILE ; [Procedure] Set filename of new attachment
"RTN","MDRPCOG",119,0)
 S MDFDA(703.11,$P(DATA,U,1),.02)=$P(DATA,U,2)
"RTN","MDRPCOG",120,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOG",121,0)
 Q
"RTN","MDRPCOG",122,0)
 ;
"RTN","MDRPCOG",123,0)
SETPAR(INSTANCE,VALUE) ; [Procedure] Set value into XPAR parameter
"RTN","MDRPCOG",124,0)
 ; Input parameters
"RTN","MDRPCOG",125,0)
 ;  1. INSTANCE [Literal/Required] Parameter Instance
"RTN","MDRPCOG",126,0)
 ;  2. VALUE [Literal/Required] Parameter Value
"RTN","MDRPCOG",127,0)
 ;
"RTN","MDRPCOG",128,0)
 D EN^XPAR("SYS","MD GATEWAY",INSTANCE,VALUE)
"RTN","MDRPCOG",129,0)
 Q
"RTN","MDRPCOG",130,0)
 ;
"RTN","MDRPCOG",131,0)
START ; [Procedure] Can we begin?
"RTN","MDRPCOG",132,0)
 ; Ensure only one Gateway per system by locking the phantom global node
"RTN","MDRPCOG",133,0)
 L +^MDD("CPGATEWAY"):1
"RTN","MDRPCOG",134,0)
 I '$T D STATUS S @RESULTS@(0)="-1^FAIL" Q
"RTN","MDRPCOG",135,0)
 ; Clear all process settings
"RTN","MDRPCOG",136,0)
 D NDEL^XPAR("SYS","MD GATEWAY")
"RTN","MDRPCOG",137,0)
 S DATA=$G(DATA,"30^1000") ; Default poll interval and log entries
"RTN","MDRPCOG",138,0)
 D SETPAR("Polling Interval",+$P(DATA,U,1))
"RTN","MDRPCOG",139,0)
 D SETPAR("Maximum Log Entries",+$P(DATA,U,2))
"RTN","MDRPCOG",140,0)
 D SETPAR("Job ID",$J)
"RTN","MDRPCOG",141,0)
 D SETPAR("Started At",$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MDRPCOG",142,0)
 D SETPAR("Started By",$$GET1^DIQ(200,DUZ_",",.01))
"RTN","MDRPCOG",143,0)
 D GETENV^%ZOSV S MDENV=Y
"RTN","MDRPCOG",144,0)
 D SETPAR("UCI",$P(MDENV,U,1))
"RTN","MDRPCOG",145,0)
 D SETPAR("Volume",$P(MDENV,U,2))
"RTN","MDRPCOG",146,0)
 D SETPAR("Node",$P(MDENV,U,3))
"RTN","MDRPCOG",147,0)
 D SETNM^%ZOSV("CP Gateway")
"RTN","MDRPCOG",148,0)
 S @RESULTS@(0)="1^OK"
"RTN","MDRPCOG",149,0)
 Q
"RTN","MDRPCOG",150,0)
 ;
"RTN","MDRPCOG",151,0)
STATUS ; [Procedure] Return status of BP
"RTN","MDRPCOG",152,0)
 D GETLST^XPAR(.MDRET,"SYS","MD GATEWAY","Q")
"RTN","MDRPCOG",153,0)
 F X=0:0 S X=$O(MDRET(X)) Q:'X  S @RESULTS@(X)=MDRET(X)
"RTN","MDRPCOG",154,0)
 Q
"RTN","MDRPCOG",155,0)
 ;
"RTN","MDRPCOG",156,0)
STOP ; [Procedure] Flag client to stop via cal to POLL
"RTN","MDRPCOG",157,0)
 D SETPAR("Shutdown Flag","Yes")
"RTN","MDRPCOG",158,0)
 Q
"RTN","MDRPCOG",159,0)
 ;
"RTN","MDRPCOG",160,0)
XFERDIR ; [Procedure] Return Imaging xfer directory
"RTN","MDRPCOG",161,0)
 S @RESULTS@(0)=$$GET^XPAR("SYS","MD IMAGING XFER")
"RTN","MDRPCOG",162,0)
 Q
"RTN","MDRPCOG",163,0)
 ;
"RTN","MDRPCOG",164,0)
CHECK(MDRI) ; Check if Upload Value and Upload Text has already been purged.
"RTN","MDRPCOG",165,0)
 N MDFLG S MDFLG=0
"RTN","MDRPCOG",166,0)
 F X=0:0 S X=$O(^MDD(703.1,MDRI,.1,X)) Q:'X  D  Q:MDFLG
"RTN","MDRPCOG",167,0)
 .S:$G(^MDD(703.1,MDRI,.1,X,.1))]"" MDFLG=1
"RTN","MDRPCOG",168,0)
 .S:$O(^MDD(703.1,MDRI,.1,X,.2,0)) MDFLG=1
"RTN","MDRPCOG",169,0)
 Q MDFLG
"RTN","MDRPCOL")
0^24^B1101282
"RTN","MDRPCOL",1,0)
MDRPCOL ; HOIFO/DP - Object RPCs (Logfile) ; [02-11-2002 13:41]
"RTN","MDRPCOL",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCOL",3,0)
RPC(RESULTS,OPTION,P1,P2,P3,P4) ; [Procedure] Main RPC Call
"RTN","MDRPCOL",4,0)
 ; Input parameters
"RTN","MDRPCOL",5,0)
 ;  1. RESULTS [Literal/Required] No description
"RTN","MDRPCOL",6,0)
 ;  2. OPTION [Literal/Required] No description
"RTN","MDRPCOL",7,0)
 ;
"RTN","MDRPCOL",8,0)
 ; RPC: [MD TMDLOGFILE]
"RTN","MDRPCOL",9,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","MDRPCOL",10,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","MDRPCOL",11,0)
 D:'$D(@RESULTS) BADRPC^MDRPCU("MD TMDLOGFILE","MDRPCOL",OPTION)
"RTN","MDRPCOL",12,0)
 D CLEAN^DILF
"RTN","MDRPCOL",13,0)
 Q
"RTN","MDRPCOL",14,0)
 ;
"RTN","MDRPCOL",15,0)
GET40R ; Get next 40 Results from file 703.1
"RTN","MDRPCOL",16,0)
 N MDCNT,MDSTOP,MDSTRT
"RTN","MDRPCOL",17,0)
 S MDSTOP=+$G(P1),MDSTRT=+$G(P2,0)
"RTN","MDRPCOL",18,0)
 S X=MDSTRT,Y=0,MDCNT=0
"RTN","MDRPCOL",19,0)
 F  S X=$O(^MDD(703.1,"ADTP",X)) Q:'X!(X>MDSTOP)  D  Q:MDCNT>39
"RTN","MDRPCOL",20,0)
 .F Y=0:0 S Y=$O(^MDD(703.1,"ADTP",X,Y)) Q:'Y  D
"RTN","MDRPCOL",21,0)
 ..S MDCNT=MDCNT+1
"RTN","MDRPCOL",22,0)
 ..S @RESULTS@(MDCNT)="703.1;"_Y_"^"_$G(^MDD(703.1,Y,0))
"RTN","MDRPCOL",23,0)
 S @RESULTS@(0)=MDCNT_U_X
"RTN","MDRPCOL",24,0)
 Q
"RTN","MDRPCOL",25,0)
 ;
"RTN","MDRPCOO")
0^25^B31723157
"RTN","MDRPCOO",1,0)
MDRPCOO ; HOIFO/DP - Object RPCs (TMDOutput) ; [03-24-2003 15:44]
"RTN","MDRPCOO",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCOO",3,0)
 ; Integration Agreements:
"RTN","MDRPCOO",4,0)
 ; IA# 2263 [Supported] Kernel Parameter APIs.
"RTN","MDRPCOO",5,0)
 ; IA# 2541 [Supported] API to get some Kernel System Parameter fields.
"RTN","MDRPCOO",6,0)
 ; IA# 2320 [Supported] %ZISH entry points.
"RTN","MDRPCOO",7,0)
 ;
"RTN","MDRPCOO",8,0)
ANALYZE ; [Procedure] Analyze an insturment interface
"RTN","MDRPCOO",9,0)
 ; Checks the CP instrument file for completeness of an entry.
"RTN","MDRPCOO",10,0)
 ; Special Note, variable RTN actually contains the IEN of the
"RTN","MDRPCOO",11,0)
 ; entry.
"RTN","MDRPCOO",12,0)
 ;
"RTN","MDRPCOO",13,0)
 ; Variables:
"RTN","MDRPCOO",14,0)
 ;  MDTMP: [Private] Scratch
"RTN","MDRPCOO",15,0)
 ;
"RTN","MDRPCOO",16,0)
 ; New private variables
"RTN","MDRPCOO",17,0)
 NEW MDTMP
"RTN","MDRPCOO",18,0)
 D INST^MDHL7U2(RTN,.MDTMP)
"RTN","MDRPCOO",19,0)
 S @RESULTS@(0)=MDTMP_U_MDTMP(0)
"RTN","MDRPCOO",20,0)
 F X=0:0 S X=$O(MDTMP(X)) Q:X=""  D
"RTN","MDRPCOO",21,0)
 .S @RESULTS@(X)=MDTMP(X)
"RTN","MDRPCOO",22,0)
 Q
"RTN","MDRPCOO",23,0)
 ;
"RTN","MDRPCOO",24,0)
DIQ(DD,IENS) ; [Procedure] Gather data about an entry
"RTN","MDRPCOO",25,0)
 ; Input parameters
"RTN","MDRPCOO",26,0)
 ;  1. DD [Literal/Required] DDNumber
"RTN","MDRPCOO",27,0)
 ;  2. IENS [Literal/Required] IENS of entry to retrieve
"RTN","MDRPCOO",28,0)
 ;
"RTN","MDRPCOO",29,0)
 K ^TMP($J)
"RTN","MDRPCOO",30,0)
 D GETS^DIQ(DD,IENS,"*","",$NA(^TMP($J)))
"RTN","MDRPCOO",31,0)
 Q
"RTN","MDRPCOO",32,0)
 ;
"RTN","MDRPCOO",33,0)
EXECUTE ; [Procedure] Execute the output
"RTN","MDRPCOO",34,0)
 D INIT
"RTN","MDRPCOO",35,0)
 D HFSOPEN("TMDOUTPUT")
"RTN","MDRPCOO",36,0)
 I POP S @RESULTS@(0)="-1^Unable to open HFS Device" Q
"RTN","MDRPCOO",37,0)
 U IO D @RTN
"RTN","MDRPCOO",38,0)
 D HFSCLOSE("TMDOUTPUT")
"RTN","MDRPCOO",39,0)
 D EXIT
"RTN","MDRPCOO",40,0)
 Q
"RTN","MDRPCOO",41,0)
 ;
"RTN","MDRPCOO",42,0)
EXIT ; [Procedure] Cleanup
"RTN","MDRPCOO",43,0)
 K ^TMP("DILIST",$J),^TMP($J)
"RTN","MDRPCOO",44,0)
 Q
"RTN","MDRPCOO",45,0)
 ;
"RTN","MDRPCOO",46,0)
HFSCLOSE(HANDLE) ; [Procedure] 
"RTN","MDRPCOO",47,0)
 ; Input parameters
"RTN","MDRPCOO",48,0)
 ;  1. HANDLE [Literal/Required] File Handle
"RTN","MDRPCOO",49,0)
 ;
"RTN","MDRPCOO",50,0)
 ; Variables:
"RTN","MDRPCOO",51,0)
 ;  MDDEL: [Private] Deletion array for Kernel
"RTN","MDRPCOO",52,0)
 ;  MDDIR: [Private] Holds VistA scratch directory
"RTN","MDRPCOO",53,0)
 ;  MDFILE: [Private] Unique filename
"RTN","MDRPCOO",54,0)
 ;
"RTN","MDRPCOO",55,0)
 ; New private variables
"RTN","MDRPCOO",56,0)
 NEW MDDEL,MDDIR,MDFILE
"RTN","MDRPCOO",57,0)
 D CLOSE^%ZISH(HANDLE)
"RTN","MDRPCOO",58,0)
 K @RESULTS
"RTN","MDRPCOO",59,0)
 S MDDIR=$$GET^XPAR("DIV","MD HFS SCRATCH")
"RTN","MDRPCOO",60,0)
 S MDFILE="MD"_DUZ_".DAT",MDDEL(MDFILE)=""
"RTN","MDRPCOO",61,0)
 S X=$$FTG^%ZISH(MDDIR,MDFILE,$NAME(@RESULTS@(1)),3)
"RTN","MDRPCOO",62,0)
 S Y=$O(@RESULTS@(""),-1)+1,@RESULTS@(Y)="[End of Report]"
"RTN","MDRPCOO",63,0)
 S X=$$DEL^%ZISH(MDDIR,$NA(MDDEL))
"RTN","MDRPCOO",64,0)
 Q
"RTN","MDRPCOO",65,0)
 ;
"RTN","MDRPCOO",66,0)
HFSOPEN(HANDLE) ; [Procedure] Open Host File for output
"RTN","MDRPCOO",67,0)
 ; Input parameters
"RTN","MDRPCOO",68,0)
 ;  1. HANDLE [Literal/Required] File Handle
"RTN","MDRPCOO",69,0)
 ;
"RTN","MDRPCOO",70,0)
 ; Variables:
"RTN","MDRPCOO",71,0)
 ;  MDDIR: [Private] VistA scratch directory
"RTN","MDRPCOO",72,0)
 ;  MDFILE: [Private] Unique file name
"RTN","MDRPCOO",73,0)
 ;
"RTN","MDRPCOO",74,0)
 ; New private variables
"RTN","MDRPCOO",75,0)
 NEW MDDIR,MDFILE
"RTN","MDRPCOO",76,0)
 S MDDIR=$$GET^XPAR("DIV","MD HFS SCRATCH")
"RTN","MDRPCOO",77,0)
 S MDFILE="MD"_DUZ_".DAT"
"RTN","MDRPCOO",78,0)
 D OPEN^%ZISH(HANDLE,MDDIR,MDFILE,"W") Q:POP
"RTN","MDRPCOO",79,0)
 Q
"RTN","MDRPCOO",80,0)
 ;
"RTN","MDRPCOO",81,0)
INIT ; [Procedure] Cleanup environment before starting
"RTN","MDRPCOO",82,0)
 K ^TMP("DILIST",$J),^TMP($J)
"RTN","MDRPCOO",83,0)
 Q
"RTN","MDRPCOO",84,0)
 ;
"RTN","MDRPCOO",85,0)
INST(IEN) ; [Procedure] Display Instrument
"RTN","MDRPCOO",86,0)
 ; Input parameters
"RTN","MDRPCOO",87,0)
 ;  1. IEN [Literal/Required] Instrument IEN or * for all
"RTN","MDRPCOO",88,0)
 ;
"RTN","MDRPCOO",89,0)
 ; Variables:
"RTN","MDRPCOO",90,0)
 ;  MDDX: [Private] Scratch counter
"RTN","MDRPCOO",91,0)
 ;
"RTN","MDRPCOO",92,0)
 ; New private variables
"RTN","MDRPCOO",93,0)
 NEW MDDX
"RTN","MDRPCOO",94,0)
 I $G(IEN,"*")="*" D  Q
"RTN","MDRPCOO",95,0)
 .W "NAME",?20,"PRINT NAME",?40,"SERIAL #",?50,"M RTN",?60,"PKG",?72,"ACTIVE"
"RTN","MDRPCOO",96,0)
 .D LIST^DIC(702.09,"","@;.01;.06;.08;.11;.12;.09","P")
"RTN","MDRPCOO",97,0)
 .F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  S MDDX=$G(^(X,0)) D
"RTN","MDRPCOO",98,0)
 ..W !,$$EXT($P(MDDX,U,2),18),?20,$E($P(MDDX,U,3),1,18),?40,$P(MDDX,U,4),?50,$P(MDDX,U,5),?60,$P(MDDX,U,6),?72,$P(MDDX,U,7)
"RTN","MDRPCOO",99,0)
 D DIQ(702.09,IEN_",")
"RTN","MDRPCOO",100,0)
 W $$LINE(702.09,IEN_",",.01,0,1),!!
"RTN","MDRPCOO",101,0)
 S X=.01 F  S X=$O(^TMP($J,702.09,IEN_",",X)) Q:'X  D
"RTN","MDRPCOO",102,0)
 .W !,$$LINE(702.09,IEN_",",X,30,1)
"RTN","MDRPCOO",103,0)
 Q
"RTN","MDRPCOO",104,0)
 ;
"RTN","MDRPCOO",105,0)
LINE(DD,IENS,FIELD,COL,TITLE) ; [Procedure] Display a default line of a field loaded from DIQ above
"RTN","MDRPCOO",106,0)
 ; Input parameters
"RTN","MDRPCOO",107,0)
 ;  1. DD [Literal/Required] DD Number
"RTN","MDRPCOO",108,0)
 ;  2. IENS [Literal/Required] Record IENS
"RTN","MDRPCOO",109,0)
 ;  3. FIELD [Literal/Required] Field number
"RTN","MDRPCOO",110,0)
 ;  4. COL [Literal/Required] Column for data
"RTN","MDRPCOO",111,0)
 ;  5. TITLE [Literal/Required] Use FileMan TITLE:1 or LABEL:0
"RTN","MDRPCOO",112,0)
 ;
"RTN","MDRPCOO",113,0)
 Q:'$$VFIELD^DILFD(DD,FIELD) ""
"RTN","MDRPCOO",114,0)
 W:$X>1 !
"RTN","MDRPCOO",115,0)
 W $S($G(TITLE):$$GET1^DID(DD,FIELD,"","TITLE"),1:$$GET1^DID(DD,FIELD,"","LABEL"))
"RTN","MDRPCOO",116,0)
 W ": ",?($G(COL,0)),$S(^TMP($J,DD,IENS,FIELD)]"":^(FIELD),1:"<Blank>")
"RTN","MDRPCOO",117,0)
 Q ""
"RTN","MDRPCOO",118,0)
 ;
"RTN","MDRPCOO",119,0)
PAR ; [Procedure] Display System Parameters
"RTN","MDRPCOO",120,0)
 ; Variables:
"RTN","MDRPCOO",121,0)
 ;  MD: [Private] Scratch
"RTN","MDRPCOO",122,0)
 ;  MDLST: [Private] Scratch
"RTN","MDRPCOO",123,0)
 ;  MDMULT: [Private] Scratch
"RTN","MDRPCOO",124,0)
 ;  MDPAR: [Private] Scratch
"RTN","MDRPCOO",125,0)
 ;  MDWP: [Private] Scratch
"RTN","MDRPCOO",126,0)
 ;
"RTN","MDRPCOO",127,0)
 ; New private variables
"RTN","MDRPCOO",128,0)
 NEW MD,MDLST,MDMULT,MDPAR,MDWP
"RTN","MDRPCOO",129,0)
 W "System Parameters For: ",$$KSP^XUPARAM("WHERE")
"RTN","MDRPCOO",130,0)
 D RPC^MDRPCOV(.X,"PARLST","SYS")
"RTN","MDRPCOO",131,0)
 F MD=0:0 S MD=$O(^TMP($J,MD)) Q:'MD  D
"RTN","MDRPCOO",132,0)
 .S MDPAR=$P(^TMP($J,MD),U,2)
"RTN","MDRPCOO",133,0)
 .S MDMULT=($P(^TMP($J,MD),U,5)="Yes")
"RTN","MDRPCOO",134,0)
 .S MDWP=($P(^TMP($J,MD),U,4)="word processing")
"RTN","MDRPCOO",135,0)
 .W !!,"Parameter:   ",MDPAR
"RTN","MDRPCOO",136,0)
 .W ?55,"Type:     ",$P(^TMP($J,MD),U,4)
"RTN","MDRPCOO",137,0)
 .W !,"Description: ",$P(^TMP($J,MD),U,3)
"RTN","MDRPCOO",138,0)
 .W ?55,"Multiple: ",$P(^TMP($J,MD),U,5)
"RTN","MDRPCOO",139,0)
 .D:'MDMULT  ; Not Multiple
"RTN","MDRPCOO",140,0)
 ..I 'MDWP W !,"      Value: ",$$GET^XPAR("SYS",MDPAR,,"E") Q
"RTN","MDRPCOO",141,0)
 ..K MDWP D GETWP^XPAR(.MDWP,"SYS",MDPAR,1) D
"RTN","MDRPCOO",142,0)
 ...W !,"WP-Text:"
"RTN","MDRPCOO",143,0)
 ...F X=0:0 S X=$O(MDWP(X)) Q:'X  W !?2,MDWP(X,0)
"RTN","MDRPCOO",144,0)
 .D:MDMULT  ; Multiple Instances
"RTN","MDRPCOO",145,0)
 ..D:'MDWP
"RTN","MDRPCOO",146,0)
 ...W !,?2,"Values:"
"RTN","MDRPCOO",147,0)
 ...D GETLST^XPAR(.MDLST,"SYS",MDPAR,"E")
"RTN","MDRPCOO",148,0)
 ...F X=0:0 S X=$O(MDLST(X)) Q:'X  D
"RTN","MDRPCOO",149,0)
 ....W !?2,$P(MDLST(X),"^",1)
"RTN","MDRPCOO",150,0)
 ....W ?30,"= ",$P(MDLST(X),U,2)
"RTN","MDRPCOO",151,0)
 ....;W !!," Instance: ",$P(MDLST(X),"^",1)
"RTN","MDRPCOO",152,0)
 ....;W !,"    Value: ",$P(MDLST(X),U,2)
"RTN","MDRPCOO",153,0)
 K ^TMP($J)
"RTN","MDRPCOO",154,0)
 Q
"RTN","MDRPCOO",155,0)
 ;
"RTN","MDRPCOO",156,0)
PROC(IEN) ; [Procedure] Display a procedure
"RTN","MDRPCOO",157,0)
 ; Input parameters
"RTN","MDRPCOO",158,0)
 ;  1. IEN [Literal/Required] Procedure IEN or * for all
"RTN","MDRPCOO",159,0)
 ;
"RTN","MDRPCOO",160,0)
 I $G(IEN,"*")="*" D  Q
"RTN","MDRPCOO",161,0)
 .W "NAME",?32,"TREATING SPECIALTY",?54,"TIU NOTE",?76,"LOCATION",?98,"ACTIVE",?108,"EXT DATA"
"RTN","MDRPCOO",162,0)
 .D LIST^DIC(702.01,"","@;.01;.02;.04;.05;.09;.03","P")
"RTN","MDRPCOO",163,0)
 .F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","MDRPCOO",164,0)
 ..; Naked refs below are from ^TMP("DILIST",$J,X)
"RTN","MDRPCOO",165,0)
 ..W !,$$EXT($P(^(X,0),U,2),30)
"RTN","MDRPCOO",166,0)
 ..W ?32,$$EXT($P(^(0),U,3),20)
"RTN","MDRPCOO",167,0)
 ..W ?54,$$EXT($P(^(0),U,4),20)
"RTN","MDRPCOO",168,0)
 ..W ?76,$$EXT($P(^(0),U,5),20)
"RTN","MDRPCOO",169,0)
 ..W ?98,$P(^(0),U,6)
"RTN","MDRPCOO",170,0)
 ..W ?108,$P(^(0),U,7)
"RTN","MDRPCOO",171,0)
 D DIQ(702.01,IEN_",")
"RTN","MDRPCOO",172,0)
 W $$LINE(702.01,IEN_",",.01,0,1),!
"RTN","MDRPCOO",173,0)
 S X=.01 F  S X=$O(^TMP($J,702.01,IEN_",",X)) Q:'X  D
"RTN","MDRPCOO",174,0)
 .W !,$$LINE(702.01,IEN_",",X,32,1)
"RTN","MDRPCOO",175,0)
 K ^TMP("DILIST",$J),^TMP($J)
"RTN","MDRPCOO",176,0)
 W !!,"Associated Instruments",!,$TR($J("",30)," ","-"),!
"RTN","MDRPCOO",177,0)
 D LIST^DIC(702.011,","_IEN_",",.01,"P")
"RTN","MDRPCOO",178,0)
 I '$O(^TMP("DILIST",$J,0)) W ?5,"<None>"
"RTN","MDRPCOO",179,0)
 E  F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  W $P(^(X,0),U,2),!
"RTN","MDRPCOO",180,0)
 K ^TMP("DILIST",$J)
"RTN","MDRPCOO",181,0)
 Q
"RTN","MDRPCOO",182,0)
 ;
"RTN","MDRPCOO",183,0)
RPC(RESULTS,OPTION,RTN) ; [Procedure] Main RPC for TMD_Output Object
"RTN","MDRPCOO",184,0)
 ; RPC: [MD TMDOUTPUT]
"RTN","MDRPCOO",185,0)
 ;
"RTN","MDRPCOO",186,0)
 ; Input parameters
"RTN","MDRPCOO",187,0)
 ;  1. RESULTS [Literal/Required] RPC Return Array
"RTN","MDRPCOO",188,0)
 ;  2. OPTION [Literal/Required] Option to execute
"RTN","MDRPCOO",189,0)
 ;  3. RTN [Literal/Required] Routine to execute
"RTN","MDRPCOO",190,0)
 ;
"RTN","MDRPCOO",191,0)
 S RESULTS=$NA(^TMP("MD",$J)) K @RESULTS
"RTN","MDRPCOO",192,0)
 I $T(@OPTION)]"" D @OPTION
"RTN","MDRPCOO",193,0)
 D:'$D(@RESULTS) BADRPC^MDRPCU("MD TMDOUTPUT","MDRPCOO",OPTION)
"RTN","MDRPCOO",194,0)
 D CLEAN^DILF
"RTN","MDRPCOO",195,0)
 Q
"RTN","MDRPCOO",196,0)
 ;
"RTN","MDRPCOO",197,0)
EXT(VALUE,LENGTH) ; [Function] $Extract with ... trailer
"RTN","MDRPCOO",198,0)
 ; Input parameters
"RTN","MDRPCOO",199,0)
 ;  1. VALUE [Literal/Required] Value to truncate
"RTN","MDRPCOO",200,0)
 ;  2. LENGTH [Literal/Required] Result length
"RTN","MDRPCOO",201,0)
 ;
"RTN","MDRPCOO",202,0)
 I $L(VALUE)>LENGTH S VALUE=$E(VALUE,1,LENGTH-3)_"..."
"RTN","MDRPCOO",203,0)
 Q VALUE
"RTN","MDRPCOO",204,0)
 ;
"RTN","MDRPCOP")
0^26^B72382549
"RTN","MDRPCOP",1,0)
MDRPCOP ; HOIFO/DP - Object RPCs (TMDPatient) ; [01-09-2003 15:21]
"RTN","MDRPCOP",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCOP",3,0)
 ; Integration Agreements:
"RTN","MDRPCOP",4,0)
 ; IA# 3027 [Supported] Calls to DGSEC4
"RTN","MDRPCOP",5,0)
 ; IA# 2981 [Subscription] Calls to GUI~GMRCP5
"RTN","MDRPCOP",6,0)
 ; IA# 2548 [Supported] ACRP Interface Toolkit APIs.
"RTN","MDRPCOP",7,0)
 ; IA# 2552 [Supported] AIT API to provide outpatient encounter data.
"RTN","MDRPCOP",8,0)
 ; IA# 10061 [Supported] VADPT calls.
"RTN","MDRPCOP",9,0)
 ; IA# 3468 [Subscription] Use GMRCCP APIs.
"RTN","MDRPCOP",10,0)
 ; IA# 3266 [Subscription] Call to DPTLK1
"RTN","MDRPCOP",11,0)
 ; IA# 10103 [Supported] Call to XLFDT
"RTN","MDRPCOP",12,0)
 ; IA# 10039 [Supported] Ward Location File (#42) Access.
"RTN","MDRPCOP",13,0)
 ; IA# 10035 [Supported] DPT references
"RTN","MDRPCOP",14,0)
 ; IA# 3267 [Subscription] Call to DPTLK1
"RTN","MDRPCOP",15,0)
 ; IA# 3593 [Supported] Access to routine DPTLK6 utilities for lookup
"RTN","MDRPCOP",16,0)
 ; IA# 3613 [Private] GETVST^MDRPCOP API call
"RTN","MDRPCOP",17,0)
 ; IA# 10099 [Supported] GMRADPT call
"RTN","MDRPCOP",18,0)
 ; IA# 1096 [Controlled Subscription] ^DGPM("ATID1" x-ref loop
"RTN","MDRPCOP",19,0)
 ;
"RTN","MDRPCOP",20,0)
ADD(X) ; [Procedure] Add line to @RESULTS@(...
"RTN","MDRPCOP",21,0)
 S @RESULTS@(+$O(@RESULTS@(""),-1)+1)=X
"RTN","MDRPCOP",22,0)
 Q
"RTN","MDRPCOP",23,0)
 ;
"RTN","MDRPCOP",24,0)
ALLERGY ; [Procedure] Return Allergies
"RTN","MDRPCOP",25,0)
 D EN1^GMRADPT I '$O(GMRAL(0)) D  Q
"RTN","MDRPCOP",26,0)
 .I $G(GMRAL)="" S @RESULTS@(0)="No Allergy Assessment"
"RTN","MDRPCOP",27,0)
 .I $G(GMRAL)=0 S @RESULTS@(0)="No Known Allergies"
"RTN","MDRPCOP",28,0)
 S @RESULTS@(0)="This patient has the following allergy(ies): "
"RTN","MDRPCOP",29,0)
 F X=0:0 S X=$O(GMRAL(X)) Q:'X  D
"RTN","MDRPCOP",30,0)
 .S @RESULTS@(X)=$P($G(GMRAL(X)),U,2)
"RTN","MDRPCOP",31,0)
 Q
"RTN","MDRPCOP",32,0)
 ;
"RTN","MDRPCOP",33,0)
CHKIN ; [Procedure] Check In Study
"RTN","MDRPCOP",34,0)
 F X=2:1:5 D
"RTN","MDRPCOP",35,0)
 .I $P(DATA,U,X)]"" S MDFDA(702,$P(DATA,U,1),$P("^.04^.05^.11^.07",U,X))=$P(DATA,U,X)
"RTN","MDRPCOP",36,0)
 S MDFDA(702,$P(DATA,U,1),.09)=4  ; Status = Checked-In
"RTN","MDRPCOP",37,0)
 I $P(DATA,U,1)="+1," D
"RTN","MDRPCOP",38,0)
 .S MDFDA(702,"+1,",.01)=DFN
"RTN","MDRPCOP",39,0)
 .S MDFDA(702,"+1,",.02)=$$NOW^XLFDT()
"RTN","MDRPCOP",40,0)
 .S MDFDA(702,"+1,",.03)=DUZ
"RTN","MDRPCOP",41,0)
 .D UPDATE^DIE("","MDFDA","MDIEN","MDERR") Q:$D(MDERR)
"RTN","MDRPCOP",42,0)
 .S MDIENS=MDIEN(1)_",",MDHL7=$$SUB^MDHL7B(MDIEN(1))
"RTN","MDRPCOP",43,0)
 .I +MDHL7=-1 S MDFDA(702,MDIENS,.09)=2,MDFDA(702,MDIENS,.08)=$P(MDHL7,U,2)
"RTN","MDRPCOP",44,0)
 .I +MDHL7=1 S MDFDA(702,MDIENS,.09)=5,MDFDA(702,MDIENS,.08)=""
"RTN","MDRPCOP",45,0)
 .D:$D(MDFDA) FILE^DIE("","MDFDA","MDERR")
"RTN","MDRPCOP",46,0)
 I $P(DATA,U,1)'="+1," D
"RTN","MDRPCOP",47,0)
 .D FILE^DIE("","MDFDA","MDERR") Q:$D(MDERR)
"RTN","MDRPCOP",48,0)
 .S MDIENS=+DATA_","
"RTN","MDRPCOP",49,0)
 .S MDHL7=$$SUB^MDHL7B(+MDIENS)
"RTN","MDRPCOP",50,0)
 .I +MDHL7=-1 S MDFDA(702,MDIENS,.09)=2,MDFDA(702,MDIENS,.08)=$P(MDHL7,U,2)
"RTN","MDRPCOP",51,0)
 .I +MDHL7=1 S MDFDA(702,MDIENS,.09)=5,MDFDA(702,MDIENS,.08)=""
"RTN","MDRPCOP",52,0)
 .D:$D(MDFDA) FILE^DIE("","MDFDA","MDERR")
"RTN","MDRPCOP",53,0)
 I '$D(MDERR) S @RESULTS@(0)="1^OK" Q
"RTN","MDRPCOP",54,0)
 D ERROR^MDRPCU(RESULTS,.MDERR)
"RTN","MDRPCOP",55,0)
 Q
"RTN","MDRPCOP",56,0)
 ;
"RTN","MDRPCOP",57,0)
DISPCON ; [Procedure] Display a consult
"RTN","MDRPCOP",58,0)
 K ^TMP("GMRC",$J)
"RTN","MDRPCOP",59,0)
 D GUI^GMRCP5(.RESULTS,DATA)
"RTN","MDRPCOP",60,0)
 Q
"RTN","MDRPCOP",61,0)
 ;
"RTN","MDRPCOP",62,0)
GETCONS ; [Procedure] Get available consults for patient
"RTN","MDRPCOP",63,0)
 K ^TMP("MDTMP",$J)
"RTN","MDRPCOP",64,0)
 D CPLIST^GMRCCP(DFN,,$NA(^TMP("MDTMP",$J)))
"RTN","MDRPCOP",65,0)
 S MDX=0
"RTN","MDRPCOP",66,0)
 F  S MDX=$O(^TMP("MDTMP",$J,MDX)) Q:'MDX  D:"saprc"[$P(^(MDX),U,4)
"RTN","MDRPCOP",67,0)
 .S Y="123;"_$P(^TMP("MDTMP",$J,MDX),U,5)
"RTN","MDRPCOP",68,0)
 .F X=2,3,4,1,6,5 S Y=Y_U_$P(^TMP("MDTMP",$J,MDX),U,X)
"RTN","MDRPCOP",69,0)
 .S Y=Y_U_+$O(^MDD(702,"ACON",+$P(^TMP("MDTMP",$J,MDX),U,5)))
"RTN","MDRPCOP",70,0)
 .D ADD(Y)
"RTN","MDRPCOP",71,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOP",72,0)
 K ^TMP("MDTMP",$J)
"RTN","MDRPCOP",73,0)
 Q
"RTN","MDRPCOP",74,0)
 ;
"RTN","MDRPCOP",75,0)
GETHDR ; [Procedure] Get Pt Header
"RTN","MDRPCOP",76,0)
 S DFNIENS=DFN_","
"RTN","MDRPCOP",77,0)
 S @RESULTS@(0)=$$GET1^DIQ(2,DFNIENS,.01)_"  "_$$GET1^DIQ(2,DFNIENS,.1)_" "_$$GET1^DIQ(2,DFNIENS,.101)
"RTN","MDRPCOP",78,0)
 S @RESULTS@(1)=$$GET1^DIQ(2,DFNIENS,.09)_"  "_$$GET1^DIQ(2,DFNIENS,.02)_"  "_$$GET1^DIQ(2,DFNIENS,.03)_" ("_$$GET1^DIQ(2,DFNIENS,.033)_")"
"RTN","MDRPCOP",79,0)
 Q
"RTN","MDRPCOP",80,0)
 ;
"RTN","MDRPCOP",81,0)
GETOBJ ; [Procedure] Get information for TMDPATIENT object
"RTN","MDRPCOP",82,0)
 D DEM^VADPT,INP^VADPT
"RTN","MDRPCOP",83,0)
 S @RESULTS@(0)=DFN
"RTN","MDRPCOP",84,0)
 S @RESULTS@(1)=VADM(1)
"RTN","MDRPCOP",85,0)
 S @RESULTS@(2)=$P(VADM(2),U,2)
"RTN","MDRPCOP",86,0)
 S @RESULTS@(3)=$P(VADM(3),U,2)
"RTN","MDRPCOP",87,0)
 S @RESULTS@(4)=VADM(4)
"RTN","MDRPCOP",88,0)
 S @RESULTS@(5)=$P(VADM(5),U,2)
"RTN","MDRPCOP",89,0)
 I VAIN(4)]"" S @RESULTS@(6)="Ward: "_$P(VAIN(4),U,2)_" Rm: "_VAIN(5)
"RTN","MDRPCOP",90,0)
 E  S @RESULTS@(6)=""
"RTN","MDRPCOP",91,0)
 Q
"RTN","MDRPCOP",92,0)
 ;
"RTN","MDRPCOP",93,0)
GETRES ; [Procedure] Get results report
"RTN","MDRPCOP",94,0)
 F MDX=0:0 S MDX=$O(^MDD(703.1,"ADFN",DFN,MDX)) Q:'MDX  D
"RTN","MDRPCOP",95,0)
 .S MDINST=+$P($G(^MDD(703.1,MDX,0)),U,4)
"RTN","MDRPCOP",96,0)
 .I $G(DATA) Q:'$D(^MDS(702.01,DATA,.1,"B",MDINST))
"RTN","MDRPCOP",97,0)
 .S MDY=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOP",98,0)
 .S @RESULTS@(MDY)="703.1;"_MDX_U_^MDD(703.1,MDX,0)
"RTN","MDRPCOP",99,0)
 .S Y=$P(^MDD(703.1,MDX,0),U,3) D D^DIQ
"RTN","MDRPCOP",100,0)
 .S $P(@RESULTS@(MDY),U,11)=Y
"RTN","MDRPCOP",101,0)
 .S Y=$P($G(^MDS(702.09,+$P(^MDD(703.1,MDX,0),U,4),0)),U)
"RTN","MDRPCOP",102,0)
 .S $P(@RESULTS@(MDY),U,12)=Y
"RTN","MDRPCOP",103,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOP",104,0)
 Q
"RTN","MDRPCOP",105,0)
 ;
"RTN","MDRPCOP",106,0)
GETTRAN ; [Procedure] Get a patients transactions
"RTN","MDRPCOP",107,0)
 F MDX=0:0 S MDX=$O(^MDD(702,"B",DFN,+MDX))_"," Q:'MDX  D
"RTN","MDRPCOP",108,0)
 .S Z=$$GET1^DIQ(702,MDX,".04:.02","I")_U_$$GET1^DIQ(702,MDX,.04)_U_$$GET1^DIQ(702,MDX,.02,"I")_U_$$GET1^DIQ(702,MDX,.09)_U_$$GET1^DIQ(702,MDX,.11)_U_$$GET1^DIQ(702,MDX,.991)
"RTN","MDRPCOP",109,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOP",110,0)
 .S @RESULTS@(Y)="702;"_+MDX_U_Z
"RTN","MDRPCOP",111,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOP",112,0)
 Q
"RTN","MDRPCOP",113,0)
 ;
"RTN","MDRPCOP",114,0)
GETVST ; [Procedure] Return list of visits
"RTN","MDRPCOP",115,0)
 N BEG,END,VAERR,VASD,BDT,DTM,EDT,LOC,NOW,MDQUERY,MDLST,STI,STS,TODAY,I,J,K,XI,XE,X
"RTN","MDRPCOP",116,0)
 S NOW=$$NOW^XLFDT(),TODAY=$P(NOW,".",1)
"RTN","MDRPCOP",117,0)
 S BEG=$$X2FM("T-200"),END=$$X2FM("T")+0.2359
"RTN","MDRPCOP",118,0)
 S MDLST="",MDSTOP=""
"RTN","MDRPCOP",119,0)
 I END>NOW D   ; get future encounters, past cancels/no-shows from VADPT
"RTN","MDRPCOP",120,0)
 .S VASD("F")=BEG
"RTN","MDRPCOP",121,0)
 .S VASD("T")=END
"RTN","MDRPCOP",122,0)
 .S VASD("W")="123456789"
"RTN","MDRPCOP",123,0)
 .D SDA^VADPT
"RTN","MDRPCOP",124,0)
 .S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","MDRPCOP",125,0)
 ..S XI=^UTILITY("VASD",$J,I,"I"),XE=^("E")
"RTN","MDRPCOP",126,0)
 ..S DTM=$P(XI,U),IEN=$P(XI,U,2),STI=$P(XI,U,3)
"RTN","MDRPCOP",127,0)
 ..S LOC=$P(XE,U,2),STS=$P(XE,U,3)
"RTN","MDRPCOP",128,0)
 ..I DTM<TODAY,(STI=""!(STI["I")!(STI="NT")) Q  ; no prior kept appts
"RTN","MDRPCOP",129,0)
 ..S MDLST(DTM,"A",1)="A;"_DTM_";"_IEN_U_DTM_U_LOC_U_STS
"RTN","MDRPCOP",130,0)
 .K ^UTILITY("VASD",$J)
"RTN","MDRPCOP",131,0)
 I BEG'>NOW D  ;past encounters from ACRP Toolkit - set in CALLBACK
"RTN","MDRPCOP",132,0)
 .S BDT=BEG
"RTN","MDRPCOP",133,0)
 .S EDT=$S(END<NOW:END,1:NOW)
"RTN","MDRPCOP",134,0)
 .D OPEN^SDQ(.MDQUERY)
"RTN","MDRPCOP",135,0)
 .I '$$ERRCHK^SDQUT() D INDEX^SDQ(.MDQUERY,"PATIENT/DATE","SET")
"RTN","MDRPCOP",136,0)
 .I '$$ERRCHK^SDQUT() D PAT^SDQ(.MDQUERY,DFN,"SET")
"RTN","MDRPCOP",137,0)
 .I '$$ERRCHK^SDQUT() D DATE^SDQ(.MDQUERY,BDT,EDT,"SET")
"RTN","MDRPCOP",138,0)
 .I '$$ERRCHK^SDQUT() D
"RTN","MDRPCOP",139,0)
 ..D SCANCB^SDQ(.MDQUERY,"D CALLBACK^ORWCV(Y,Y0,$NA(MDLST),.MDSTOP)","SET")
"RTN","MDRPCOP",140,0)
 .I '$$ERRCHK^SDQUT() D ACTIVE^SDQ(.MDQUERY,"TRUE","SET")
"RTN","MDRPCOP",141,0)
 .I '$$ERRCHK^SDQUT() D SCAN^SDQ(.MDQUERY,"FORWARD")
"RTN","MDRPCOP",142,0)
 .D CLOSE^SDQ(.MDQUERY)
"RTN","MDRPCOP",143,0)
 N TIM,MOV,MDX0,Y,MTIM,XTYP,XLOC,XLOCI,HLOC,EARLY,DONE ; admits
"RTN","MDRPCOP",144,0)
 S EARLY=BEG,DONE=0
"RTN","MDRPCOP",145,0)
 S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D  Q:DONE
"RTN","MDRPCOP",146,0)
 .S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D  Q:DONE
"RTN","MDRPCOP",147,0)
 ..D GETS^DIQ(405,+MOV_",","*","IE","MDX0") S MTIM=$G(MDX0(405,MOV_",",".01","I"))
"RTN","MDRPCOP",148,0)
 ..S XTYP=$G(MDX0(405,+MOV_",",".04","E"))
"RTN","MDRPCOP",149,0)
 ..S XLOC=$G(MDX0(405,+MOV_",",".06","E"))
"RTN","MDRPCOP",150,0)
 ..S XLOCI=+$G(MDX0(405,+MOV_",",".06","I")),HLOC=+$G(^DIC(42,+XLOCI,44))
"RTN","MDRPCOP",151,0)
 ..S MDLST(MTIM,"I",1)="I;"_MTIM_";"_HLOC_U_MTIM_U_"Inpatient Stay"_U_XLOC_U_XTYP
"RTN","MDRPCOP",152,0)
 ..S DONE=1  ; Not sure if I should include all stays <DRP@Hines>
"RTN","MDRPCOP",153,0)
 S I=0 F  S I=$O(MDLST(I)) Q:'I  D
"RTN","MDRPCOP",154,0)
 .S J="" F  S J=$O(MDLST(I,J)) Q:J=""  D
"RTN","MDRPCOP",155,0)
 ..S K=0 F  S K=$O(MDLST(I,J,K)) Q:'K  D
"RTN","MDRPCOP",156,0)
 ...S @RESULTS@($O(@RESULTS@(""),-1)+1)=MDLST(I,J,K)
"RTN","MDRPCOP",157,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_($$GET1^DIQ(2,DFN_",",.1)]"")
"RTN","MDRPCOP",158,0)
 Q
"RTN","MDRPCOP",159,0)
 ;
"RTN","MDRPCOP",160,0)
LOGSEC ; [Procedure] Log Security
"RTN","MDRPCOP",161,0)
 D NOTICE^DGSEC4(.RESULTS,DFN,DATA,1)
"RTN","MDRPCOP",162,0)
 S @RESULTS@(0)=$S(RESULTS:"1^Logged",1:"-1^Unable to log")
"RTN","MDRPCOP",163,0)
 Q
"RTN","MDRPCOP",164,0)
 ;
"RTN","MDRPCOP",165,0)
RPC(RESULTS,OPTION,DFN,DATA) ; [Procedure] Main RPC call tag
"RTN","MDRPCOP",166,0)
 NEW DFNIENS,GMRAL,GMVALG,GN,IENS,MDDFN,MDERR,MDFDA,MDFLD,MDHL7,MDID,MDIDS,MDIEN,MDIENS,MDRET,MDX,MDY,VA,VADM,VAERR,VAIN,Z
"RTN","MDRPCOP",167,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","MDRPCOP",168,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","MDRPCOP",169,0)
 D:'$D(@RESULTS) BADRPC^MDRPCU("MD TMDPATIENT","MDRPCOP",OPTION)
"RTN","MDRPCOP",170,0)
 D CLEAN^DILF
"RTN","MDRPCOP",171,0)
 Q
"RTN","MDRPCOP",172,0)
 ;
"RTN","MDRPCOP",173,0)
SELECT ; [Procedure] Select patient
"RTN","MDRPCOP",174,0)
 I '$D(^DPT(+$G(DFN),0))#2 S @RESULTS@(0)="-1^No such patient" Q
"RTN","MDRPCOP",175,0)
 S @RESULTS@(0)="1^Required Identifiers & messages"
"RTN","MDRPCOP",176,0)
 S IENS=DFN_","
"RTN","MDRPCOP",177,0)
 D FILE^DID(2,,"REQUIRED IDENTIFIERS","MDIDS")
"RTN","MDRPCOP",178,0)
 F MDX=0:0 S MDX=$O(MDIDS("REQUIRED IDENTIFIERS",MDX)) Q:'MDX  D
"RTN","MDRPCOP",179,0)
 .S MDFLD=MDIDS("REQUIRED IDENTIFIERS",MDX,"FIELD")
"RTN","MDRPCOP",180,0)
 .S MDID="$$PTID^"_$$GET1^DID(2,MDFLD,"","LABEL")
"RTN","MDRPCOP",181,0)
 .S MDID=MDID_U_$$GET1^DIQ(2,IENS,MDFLD)
"RTN","MDRPCOP",182,0)
 .D:MDFLD=.03
"RTN","MDRPCOP",183,0)
 ..S MDID=MDID_" ("_$$GET1^DIQ(2,IENS,.033)_")"
"RTN","MDRPCOP",184,0)
 ..S MDID=MDID_U_$$DOB^DPTLK1(+IENS)
"RTN","MDRPCOP",185,0)
 .D:MDFLD=.09
"RTN","MDRPCOP",186,0)
 ..S X=$P(MDID,U,3),X=$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10)
"RTN","MDRPCOP",187,0)
 ..S $P(MDID,U,3)=X,$P(MDID,U,4)=$$SSN^DPTLK1(+IENS)
"RTN","MDRPCOP",188,0)
 .S @RESULTS@($O(@RESULTS@(""),-1)+1)=MDID
"RTN","MDRPCOP",189,0)
 S MDID="$$PTID^"_$$GET1^DID(2,.1,"","LABEL")
"RTN","MDRPCOP",190,0)
 S MDID=MDID_U_$$GET1^DIQ(2,IENS,.1)
"RTN","MDRPCOP",191,0)
 S @RESULTS@($O(@RESULTS@(""),-1)+1)=MDID
"RTN","MDRPCOP",192,0)
 S MDID="$$PTID^"_$$GET1^DID(2,.101,"","LABEL")
"RTN","MDRPCOP",193,0)
 S MDID=MDID_U_$$GET1^DIQ(2,IENS,.101)
"RTN","MDRPCOP",194,0)
 S @RESULTS@($O(@RESULTS@(""),-1)+1)=MDID
"RTN","MDRPCOP",195,0)
 K MDRET
"RTN","MDRPCOP",196,0)
 D GUIBS5A^DPTLK6(.MDRET,DFN) D:MDRET(1)=1
"RTN","MDRPCOP",197,0)
 .D ADD("$$MSGHDR^2^SAME LAST NAME AND LAST 4")
"RTN","MDRPCOP",198,0)
 .S MDX=1
"RTN","MDRPCOP",199,0)
 .F  S MDX=$O(MDRET(MDX)) Q:'MDX!(+$G(MDRET(MDX)))  D
"RTN","MDRPCOP",200,0)
 ..D ADD($P(MDRET(MDX),U,2))
"RTN","MDRPCOP",201,0)
 .D ADD(" ")
"RTN","MDRPCOP",202,0)
 .S MDX=1
"RTN","MDRPCOP",203,0)
 .F  S MDX=$O(MDRET(MDX)) Q:'MDX  D:+MDRET(MDX)
"RTN","MDRPCOP",204,0)
 ..S MDDFN=+$P(MDRET(MDX),U,2)
"RTN","MDRPCOP",205,0)
 ..D ADD($$GET1^DIQ(2,MDDFN_",",.01)_"    "_$$DOB^DPTLK1(MDDFN)_"    "_$$SSN^DPTLK1(MDDFN))
"RTN","MDRPCOP",206,0)
 .D ADD(" ")
"RTN","MDRPCOP",207,0)
 .D ADD("Please review carefully before continuing")
"RTN","MDRPCOP",208,0)
 .D ADD("$$MSGEND")
"RTN","MDRPCOP",209,0)
 K MDRET
"RTN","MDRPCOP",210,0)
 D PTSEC^DGSEC4(.MDRET,DFN) D:MDRET(1)'=0
"RTN","MDRPCOP",211,0)
 .D:MDRET(1)=3
"RTN","MDRPCOP",212,0)
 ..D ADD("$$MSGHDR^0^CAN'T ACCESS YOUR OWN RECORD!!")
"RTN","MDRPCOP",213,0)
 .D:MDRET(1)=-1
"RTN","MDRPCOP",214,0)
 ..D ADD("$$MSGHDR^0^INCOMPLETE INFORMATION - CAN'T PROCEED")
"RTN","MDRPCOP",215,0)
 .D:MDRET(1)=1
"RTN","MDRPCOP",216,0)
 ..D ADD("$$MSGHDR^1^SENSITIVE RECORD ACCESS")
"RTN","MDRPCOP",217,0)
 .D:MDRET(1)'=-1&(MDRET(1)'=3)&(MDRET(1)'=1)
"RTN","MDRPCOP",218,0)
 ..D ADD("$$MSGHDR^3^SENSITIVE RECORD ACCESS")
"RTN","MDRPCOP",219,0)
 .S MDX=1
"RTN","MDRPCOP",220,0)
 .F  S MDX=$O(MDRET(MDX)) Q:'MDX  D ADD($TR(MDRET(MDX),"*"," "))
"RTN","MDRPCOP",221,0)
 .D ADD("$$MSGEND")
"RTN","MDRPCOP",222,0)
 D GUIMTD^DPTLK6(.MDRET,DFN) D:MDRET(1)=1
"RTN","MDRPCOP",223,0)
 .D ADD("$$MSGHDR^1^NOTICE")
"RTN","MDRPCOP",224,0)
 .F MDX=1:0 S MDX=$O(MDRET(MDX)) Q:'MDX  D ADD(MDRET(MDX))
"RTN","MDRPCOP",225,0)
 .D ADD("$$MSGEND")
"RTN","MDRPCOP",226,0)
 Q
"RTN","MDRPCOP",227,0)
 ;
"RTN","MDRPCOP",228,0)
X2FM(X) ; [Function] return FM date given relative date
"RTN","MDRPCOP",229,0)
 N %DT S %DT="TS" D ^%DT
"RTN","MDRPCOP",230,0)
 Q Y
"RTN","MDRPCOP",231,0)
 ;
"RTN","MDRPCOR")
0^27^B86251025
"RTN","MDRPCOR",1,0)
MDRPCOR ; HOIFO/DP - Object RPCs (TMDRecordId) ; [01-10-2003 09:14]
"RTN","MDRPCOR",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCOR",3,0)
 ; Description:
"RTN","MDRPCOR",4,0)
 ; This routine manages both the MDVCL components and
"RTN","MDRPCOR",5,0)
 ; the TMDRecordID object
"RTN","MDRPCOR",6,0)
 ;
"RTN","MDRPCOR",7,0)
 ; Integration Agreements:
"RTN","MDRPCOR",8,0)
 ; IA# 3568 [Private] TIUCP call.
"RTN","MDRPCOR",9,0)
 ; IA# 3266 [Subscription] Calls to DPTLK1
"RTN","MDRPCOR",10,0)
 ; IA# 3267 [Subscription] Call to DPTLK1
"RTN","MDRPCOR",11,0)
 ; IA# 10104 [Public] Call to XLFSTR
"RTN","MDRPCOR",12,0)
 ;
"RTN","MDRPCOR",13,0)
CHANGES ; [Procedure] Returns number of changes to save
"RTN","MDRPCOR",14,0)
 S MDCHNG=0,(MDDD,MDIENS)=""
"RTN","MDRPCOR",15,0)
 F  S MDDD=$O(^TMP("MDFDA",$J,MDDD)) Q:MDDD=""  D
"RTN","MDRPCOR",16,0)
 .Q:$E(MDDD,1,$L(DD))'=DD  ; Not even the right DD
"RTN","MDRPCOR",17,0)
 .F  S MDIENS=$O(^TMP("MDFDA",$J,MDDD,MDIENS)) Q:MDIENS=""  D
"RTN","MDRPCOR",18,0)
 ..Q:$E(MDIENS,$L(MDIENS)-$L(IENS)+1,$L(MDIENS))'=IENS
"RTN","MDRPCOR",19,0)
 ..F FLD=0:0 S FLD=$O(^TMP("MDFDA",$J,MDDD,MDIENS,FLD)) Q:'FLD  D
"RTN","MDRPCOR",20,0)
 ...S MDCHNG=MDCHNG+1
"RTN","MDRPCOR",21,0)
 S @RESULTS@(0)=MDCHNG_"^Changes to Save"
"RTN","MDRPCOR",22,0)
 Q
"RTN","MDRPCOR",23,0)
 ;
"RTN","MDRPCOR",24,0)
CHKVER ; [Procedure] 
"RTN","MDRPCOR",25,0)
 S @RESULTS@(0)=+$G(DATA)'<1
"RTN","MDRPCOR",26,0)
 Q
"RTN","MDRPCOR",27,0)
 ;
"RTN","MDRPCOR",28,0)
CLEARFDA ; [Procedure] Discards changes in the FDA
"RTN","MDRPCOR",29,0)
 S MDFDA=$NA(^TMP("MDFDA",$J))
"RTN","MDRPCOR",30,0)
 F  S MDFDA=$Q(@MDFDA) Q:MDFDA=""  Q:$QS(MDFDA,2)'=$J  D
"RTN","MDRPCOR",31,0)
 .S MDDD=$QS(MDFDA,3),MDIENS=$QS(MDFDA,4)
"RTN","MDRPCOR",32,0)
 .I MDIENS'?@(".E1"""_IENS_"""") Q
"RTN","MDRPCOR",33,0)
 .I MDDD'?@("1"""_DD_""".E") Q
"RTN","MDRPCOR",34,0)
 .K ^TMP("MDFDA",$J,MDDD,MDIENS)
"RTN","MDRPCOR",35,0)
 S @RESULTS@(0)="1^FDA CLEARED"
"RTN","MDRPCOR",36,0)
 Q
"RTN","MDRPCOR",37,0)
 ;
"RTN","MDRPCOR",38,0)
DELREC ; [Procedure] Delete a fileman record
"RTN","MDRPCOR",39,0)
 D VAL^DIE(DD,IENS,.01,"FR","@",.MDRET,"MDDEL","MDERR")
"RTN","MDRPCOR",40,0)
 I MDRET="^" D ERROR^MDRPCU($NA(^TMP($J)),.MDERR) Q
"RTN","MDRPCOR",41,0)
 D FILE^DIE("","MDDEL","MDERR")
"RTN","MDRPCOR",42,0)
 I $D(MDERR) D ERROR^MDRPCU($NA(^TMP($J)),.MDERR) Q
"RTN","MDRPCOR",43,0)
 D RPC(.X,"CLEARFDA",DD,IENS)
"RTN","MDRPCOR",44,0)
 S @RESULTS@(0)="1^Record Deleted"
"RTN","MDRPCOR",45,0)
 Q
"RTN","MDRPCOR",46,0)
 ;
"RTN","MDRPCOR",47,0)
DT ; [Procedure] Convert date/time via %DT
"RTN","MDRPCOR",48,0)
 S DATA=$G(DATA,"NOW^TS")
"RTN","MDRPCOR",49,0)
 S X=$P(DATA,U,1),%DT=$P(DATA,U,2)
"RTN","MDRPCOR",50,0)
 D ^%DT
"RTN","MDRPCOR",51,0)
 I Y<1 S @RESULTS@(0)=Y_U_"Invalid date/time input '"_X_"'"
"RTN","MDRPCOR",52,0)
 E  S @RESULTS@(0)=1_U_Y D DD^%DT S $P(@RESULTS@(0),U,3)=Y
"RTN","MDRPCOR",53,0)
 Q
"RTN","MDRPCOR",54,0)
 ;
"RTN","MDRPCOR",55,0)
EXISTS ; [Procedure] Verify that a record exists
"RTN","MDRPCOR",56,0)
 S X=$$ROOT^DILFD(DD,IENS)
"RTN","MDRPCOR",57,0)
 S @RESULTS@(0)=$D(@(X_(+IENS)_",0)"))
"RTN","MDRPCOR",58,0)
 Q
"RTN","MDRPCOR",59,0)
 ;
"RTN","MDRPCOR",60,0)
FILENAME ; [Procedure] Return a filename
"RTN","MDRPCOR",61,0)
 I $$VFILE^DILFD(DD) S @RESULTS@(0)="1^"_$$GET1^DID(DD,"","","NAME")
"RTN","MDRPCOR",62,0)
 E  S @RESULTS@(0)="-1^Not a valid file #"
"RTN","MDRPCOR",63,0)
 Q
"RTN","MDRPCOR",64,0)
 ;
"RTN","MDRPCOR",65,0)
GETCODES ; [Procedure] Returns set of codes
"RTN","MDRPCOR",66,0)
 S MDTYPE=$$GET1^DID(DD,FLD,"","TYPE","","MDERR")
"RTN","MDRPCOR",67,0)
 I $D(MDERR) D ERROR^MDRPCU($NA(^TMP($J)),.MDERR) Q
"RTN","MDRPCOR",68,0)
 D:MDTYPE="SET"
"RTN","MDRPCOR",69,0)
 .S MDSET=$$GET1^DID(DD,FLD,"","POINTER")
"RTN","MDRPCOR",70,0)
 .F X=1:1:$L(MDSET,";")-1 D
"RTN","MDRPCOR",71,0)
 ..S @RESULTS@(X)=$P(MDSET,";",X)
"RTN","MDRPCOR",72,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_"^Set of Codes"
"RTN","MDRPCOR",73,0)
 D:MDTYPE="POINTER"
"RTN","MDRPCOR",74,0)
 .S MDPTR=$$GET1^DID(DD,FLD,"","POINTER")
"RTN","MDRPCOR",75,0)
 .F X=0:0 S X=$O(@(U_MDPTR_"X)")) Q:'X  D
"RTN","MDRPCOR",76,0)
 ..S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOR",77,0)
 ..S @RESULTS@(Y)="`"_X_":"_$P(@(U_MDPTR_"X,0)"),U,1)
"RTN","MDRPCOR",78,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_"^Pointers as set of codes"
"RTN","MDRPCOR",79,0)
 Q
"RTN","MDRPCOR",80,0)
 ;
"RTN","MDRPCOR",81,0)
GETDATA ; [Procedure] Returns data for a field
"RTN","MDRPCOR",82,0)
 I $$GET1^DID(DD,FLD,"","TYPE")["WORD" D  Q
"RTN","MDRPCOR",83,0)
 .I $D(^TMP("MDFDA",$J,DD,IENS,FLD)) M ^TMP($J)=^TMP("MDFDA",$J,DD,IENS,FLD)
"RTN","MDRPCOR",84,0)
 .E  S X=$$GET1^DIQ(DD,IENS,FLD,"",$NA(^TMP($J)))
"RTN","MDRPCOR",85,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOR",86,0)
 I $D(^TMP("MDFDA",$J,DD,IENS,FLD)) S Y=^(FLD) D  Q
"RTN","MDRPCOR",87,0)
 .I $G(DATA) S @RESULTS@(0)=Y Q  ; Internal Format
"RTN","MDRPCOR",88,0)
 .S @RESULTS@(0)=$$EXTERNAL^DILFD(DD,FLD,"",Y)
"RTN","MDRPCOR",89,0)
 S @RESULTS@(0)=$$GET1^DIQ(DD,IENS,FLD,$S($G(DATA):"I",1:""))
"RTN","MDRPCOR",90,0)
 Q
"RTN","MDRPCOR",91,0)
 ;
"RTN","MDRPCOR",92,0)
GETHELP ; [Procedure] Returns fileman help
"RTN","MDRPCOR",93,0)
 D HELP^DIE(DD,IENS,FLD,"D")
"RTN","MDRPCOR",94,0)
 D:'$O(^TMP("DIHELP",$J,0)) HELP^DIE(DD,IENS,FLD,"A")
"RTN","MDRPCOR",95,0)
 I '$O(^TMP("DIHELP",$J,0)) D  Q
"RTN","MDRPCOR",96,0)
 .S @RESULTS@(0)=1
"RTN","MDRPCOR",97,0)
 .S @RESULTS@(1)="SORRY: No help available"
"RTN","MDRPCOR",98,0)
 M ^TMP($J)=^TMP("DIHELP",$J)
"RTN","MDRPCOR",99,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOR",100,0)
 Q
"RTN","MDRPCOR",101,0)
 ;
"RTN","MDRPCOR",102,0)
GETIDS ; [Procedure] Returns list of required ID's
"RTN","MDRPCOR",103,0)
 D FILE^DID(DD,"","REQUIRED IDENTIFIERS;NAME;ENTRIES","MDRET")
"RTN","MDRPCOR",104,0)
 S X=$NA(MDRET("REQUIRED IDENTIFIERS",0))
"RTN","MDRPCOR",105,0)
 F  S X=$Q(@X) Q:X=""  D
"RTN","MDRPCOR",106,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOR",107,0)
 .S @RESULTS@(Y)=@X_U_$$GET1^DID(DD,@X,"","LABEL")_U_$$GET1^DID(DD,@X,"","TYPE")
"RTN","MDRPCOR",108,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_MDRET("NAME")_U_MDRET("ENTRIES")
"RTN","MDRPCOR",109,0)
 Q
"RTN","MDRPCOR",110,0)
 ;
"RTN","MDRPCOR",111,0)
GETLABEL ; [Procedure] Get field label/title
"RTN","MDRPCOR",112,0)
 S MDLBL=$$GET1^DID(DD,FLD,"",$S($G(DATA):"TITLE",1:"LABEL"))
"RTN","MDRPCOR",113,0)
 S:$G(DATA)&(MDLBL="") MDLBL=$$GET1^DID(DD,FLD,"","LABEL")
"RTN","MDRPCOR",114,0)
 S @RESULTS@(0)=MDLBL_":"
"RTN","MDRPCOR",115,0)
 Q
"RTN","MDRPCOR",116,0)
 ;
"RTN","MDRPCOR",117,0)
GETLST ; [Procedure] Get list of records
"RTN","MDRPCOR",118,0)
 S IENS=$G(IENS),FLD=$G(FLD,"@;.01")
"RTN","MDRPCOR",119,0)
 S:$P(FLD,";",1)'="@" FLD="@;"_FLD
"RTN","MDRPCOR",120,0)
 D LIST^DIC(DD,IENS,FLD,"P",,,,,$G(DATA))
"RTN","MDRPCOR",121,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X))  Q:'X  D
"RTN","MDRPCOR",122,0)
 .S @RESULTS@(X)=DD_";"_^TMP("DILIST",$J,X,0)
"RTN","MDRPCOR",123,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOR",124,0)
 F X=2:1 Q:$P(^TMP("DILIST",$J,0,"MAP"),U,X)=""  D
"RTN","MDRPCOR",125,0)
 .S @RESULTS@(0)=@RESULTS@(0)_U_$$GET1^DID(DD,$P(^TMP("DILIST",$J,0,"MAP"),U,X),"","LABEL")
"RTN","MDRPCOR",126,0)
 Q
"RTN","MDRPCOR",127,0)
 ;
"RTN","MDRPCOR",128,0)
LOCK ; [Procedure] Lock a record
"RTN","MDRPCOR",129,0)
 D LOCK^MDRPCU(.RESULTS,DD,IENS) Q
"RTN","MDRPCOR",130,0)
 ;
"RTN","MDRPCOR",131,0)
LOOKUP ; [Procedure] Lookup on a DD
"RTN","MDRPCOR",132,0)
 I DD=2 D RPC(.RESULTS,"PTLKUP",DD,,,DATA) Q
"RTN","MDRPCOR",133,0)
 D FIND^DIC(DD,IENS,.01,"P",DATA)
"RTN","MDRPCOR",134,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","MDRPCOR",135,0)
 .S @RESULTS@(X)=DD_";"_$P(^TMP("DILIST",$J,X,0),U,1,2)
"RTN","MDRPCOR",136,0)
 I '$D(^TMP($J)) S @RESULTS@(0)="-1^No entries found matching '"_DATA_"'"
"RTN","MDRPCOR",137,0)
 E  S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOR",138,0)
 Q
"RTN","MDRPCOR",139,0)
 ;
"RTN","MDRPCOR",140,0)
NEWIEN ; [Procedure] Return next available IEN
"RTN","MDRPCOR",141,0)
 S @RESULTS@(0)=$O(@($$ROOT^DILFD(DD,$G(IENS))_"""A"")"),-1)+1
"RTN","MDRPCOR",142,0)
 Q
"RTN","MDRPCOR",143,0)
 ;
"RTN","MDRPCOR",144,0)
NEWREC ; [Procedure] Create a new record
"RTN","MDRPCOR",145,0)
 I $G(DATA)]"" D  Q:MDRET="^"
"RTN","MDRPCOR",146,0)
 .D VAL^DIE(DD,"+1,"_IENS,$P(DATA,U,1),"F",$P(DATA,U,2,250),.MDRET,"MDNEW","MDERR")
"RTN","MDRPCOR",147,0)
 .I MDRET="^" D ERROR^MDRPCU($NA(^TMP($J)),.MDERR)
"RTN","MDRPCOR",148,0)
 S MDTMP="DATA"
"RTN","MDRPCOR",149,0)
 F  S MDTMP=$Q(@MDTMP) Q:MDTMP=""  D  Q:MDRET="^"
"RTN","MDRPCOR",150,0)
 .D VAL^DIE(DD,"+1,"_IENS,$P(@MDTMP,U,1),"F",$P(@MDTMP,U,2,250),.MDRET,"MDNEW","MDERR")
"RTN","MDRPCOR",151,0)
 .I MDRET="^" D ERROR^MDRPCU($NA(^TMP($J)),.MDERR)
"RTN","MDRPCOR",152,0)
 D:$D(MDNEW) UPDATE^DIE("","MDNEW","MDIEN")
"RTN","MDRPCOR",153,0)
 S @RESULTS@(0)=$G(MDIEN(1),"-1^Unable to create record")
"RTN","MDRPCOR",154,0)
 Q
"RTN","MDRPCOR",155,0)
 ;
"RTN","MDRPCOR",156,0)
PTLKUP ; [Procedure] Patient lookup handled separately for security
"RTN","MDRPCOR",157,0)
 D FIND^DIC(2,,"@;.01;.02;.03;.09","MP",DATA,45)
"RTN","MDRPCOR",158,0)
 I $P($G(^TMP("DILIST",$J,0)),U,3) D  Q
"RTN","MDRPCOR",159,0)
 .S @RESULTS@(0)="-1^Too many entries found matching '"_DATA_"', please be more specific."
"RTN","MDRPCOR",160,0)
 F MDX=0:0 S MDX=$O(^TMP("DILIST",$J,MDX)) Q:'MDX  D
"RTN","MDRPCOR",161,0)
 .S @RESULTS@(MDX)="2;"_$P(^TMP("DILIST",$J,MDX,0),U,1,5)
"RTN","MDRPCOR",162,0)
 .S MDIENS=+^TMP("DILIST",$J,MDX,0)_","
"RTN","MDRPCOR",163,0)
 .S $P(@RESULTS@(MDX),U,3)=$$GET1^DIQ(2,MDIENS,.02,"I")
"RTN","MDRPCOR",164,0)
 .S $P(@RESULTS@(MDX),U,4)=$$GET1^DIQ(2,MDIENS,.03,"I")
"RTN","MDRPCOR",165,0)
 .S $P(@RESULTS@(MDX),U,10)=$$DOB^DPTLK1(+MDIENS)
"RTN","MDRPCOR",166,0)
 .S $P(@RESULTS@(MDX),U,11)=$$SSN^DPTLK1(+MDIENS)
"RTN","MDRPCOR",167,0)
 I '$D(^TMP($J)) S @RESULTS@(0)="-1^No entries found matching '"_DATA_"'"
"RTN","MDRPCOR",168,0)
 E  S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOR",169,0)
 Q
"RTN","MDRPCOR",170,0)
 ;
"RTN","MDRPCOR",171,0)
PTRLKUP ; [Procedure] Lookup a pointer field
"RTN","MDRPCOR",172,0)
 S PTRDD=+$P($$GET1^DID(DD,FLD,"","SPECIFIER"),"P",2)
"RTN","MDRPCOR",173,0)
 I PTRDD=8925.1 D  Q  ; Handle TIU Note lookup with TIU API
"RTN","MDRPCOR",174,0)
 .S DATA=$$UP^XLFSTR(DATA)
"RTN","MDRPCOR",175,0)
 .D LNGCP^TIUCP(.MDRET,DATA)
"RTN","MDRPCOR",176,0)
 .I '$O(MDRET(0)) S @RESULTS@(0)=0 Q
"RTN","MDRPCOR",177,0)
 .I $D(MDRET(44)),$P($P(MDRET(44),U,2),DATA)="" S @RESULTS@(0)=0 Q
"RTN","MDRPCOR",178,0)
 .F X=0:0 S X=$O(MDRET(X)) Q:'X  D:$P($P(MDRET(X),U,2),DATA)=""
"RTN","MDRPCOR",179,0)
 ..S @RESULTS@(X)="8925.1;"_MDRET(X)
"RTN","MDRPCOR",180,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOR",181,0)
 D FIND^DIC(PTRDD,"","","PM",DATA,151,"",$G(PTRSCRN))
"RTN","MDRPCOR",182,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","MDRPCOR",183,0)
 .S @RESULTS@(X)=PTRDD_";"_^TMP("DILIST",$J,X,0)
"RTN","MDRPCOR",184,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOR",185,0)
 Q
"RTN","MDRPCOR",186,0)
 ;
"RTN","MDRPCOR",187,0)
RENAME ; [Procedure] Rename a record
"RTN","MDRPCOR",188,0)
 I DATA=""!(DATA="@") S @RESULTS@(0)="-1^Deletion Not Supported" Q
"RTN","MDRPCOR",189,0)
 I $$DUPS^MDRPCU(DD,+IENS,DATA) D  Q
"RTN","MDRPCOR",190,0)
 .S @RESULTS@(0)="-1",@RESULTS@(1)="Duplicates not allowed"
"RTN","MDRPCOR",191,0)
 D VAL^DIE(DD,IENS,.01,"EFHR",DATA,.MDRET,"MDRENAME","MDERR")
"RTN","MDRPCOR",192,0)
 I MDRET="^" D ERROR^MDRPCU($NA(^TMP($J)),.MDERR) Q
"RTN","MDRPCOR",193,0)
 D FILE^DIE("","MDRENAME")
"RTN","MDRPCOR",194,0)
 S @RESULTS@(0)="1^"_MDRET(0)
"RTN","MDRPCOR",195,0)
 K ^TMP("MDFDA",$J,DD,IENS,.01) ; In case of editing
"RTN","MDRPCOR",196,0)
 Q
"RTN","MDRPCOR",197,0)
 ;
"RTN","MDRPCOR",198,0)
RPC(RESULTS,OPTION,DD,IENS,FLD,DATA) ; [Procedure] RPC call tag
"RTN","MDRPCOR",199,0)
 NEW MDCHNG,MDDD,MDDEL,MDERR,MDFDA,MDGBL,MDIENS,MDIEN,MDLBL,MDNEW,MDPTR,MDRENAME,MDRET,MDSET,MDTYPE,MDUTL,PTRDD,PTRSCRN
"RTN","MDRPCOR",200,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","MDRPCOR",201,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","MDRPCOR",202,0)
 D:'$D(@RESULTS) BADRPC^MDRPCU("MD TMDRECORDID","MDRPCOR",OPTION)
"RTN","MDRPCOR",203,0)
 D CLEAN^DILF
"RTN","MDRPCOR",204,0)
 Q
"RTN","MDRPCOR",205,0)
 ;
"RTN","MDRPCOR",206,0)
SAVEFDA ; [Procedure] Save changes to the VistA database
"RTN","MDRPCOR",207,0)
 I DD<702!(DD>703.1999) D  Q
"RTN","MDRPCOR",208,0)
 .S @RESULTS@(0)="-1^Non CLINICAL PROCEDURES DD number space"
"RTN","MDRPCOR",209,0)
 K ^TMP("MDSAVE",$J)
"RTN","MDRPCOR",210,0)
 S MDFDA=$NA(^TMP("MDFDA",$J))
"RTN","MDRPCOR",211,0)
 F  S MDFDA=$Q(@MDFDA) Q:MDFDA=""  Q:$QS(MDFDA,2)'=$J  D
"RTN","MDRPCOR",212,0)
 .S MDDD=$QS(MDFDA,3),MDIENS=$QS(MDFDA,4)
"RTN","MDRPCOR",213,0)
 .I MDIENS'?@(".E1"""_IENS_"""") Q
"RTN","MDRPCOR",214,0)
 .I MDDD'?@("1"""_DD_""".E") Q
"RTN","MDRPCOR",215,0)
 .M ^TMP("MDSAVE",$J,MDDD,MDIENS)=^TMP("MDFDA",$J,MDDD,MDIENS)
"RTN","MDRPCOR",216,0)
 .K ^TMP("MDFDA",$J,MDDD,MDIENS)
"RTN","MDRPCOR",217,0)
 I '$D(^TMP("MDSAVE",$J)) S @RESULTS@(0)="1^No changes to save" Q
"RTN","MDRPCOR",218,0)
 D:IENS?1"+1,".NP  ; New record
"RTN","MDRPCOR",219,0)
 .D UPDATE^DIE("",$NA(^TMP("MDSAVE",$J)),"MDIEN","MDERR")
"RTN","MDRPCOR",220,0)
 .I '$D(MDERR) S @RESULTS@(0)="1^New Record Created^"_MDIEN(1) Q
"RTN","MDRPCOR",221,0)
 .D ERROR^MDRPCU($NA(^TMP($J)),.MDERR)
"RTN","MDRPCOR",222,0)
 .M ^TMP("MDFDA",$J)=^TMP("MDSAVE",$J)
"RTN","MDRPCOR",223,0)
 D:IENS'?1"+1,".NP  ; Existing record
"RTN","MDRPCOR",224,0)
 .D FILE^DIE("",$NA(^TMP("MDSAVE",$J)),"MDERR")
"RTN","MDRPCOR",225,0)
 .I '$D(MDERR) S @RESULTS@(0)="1^FDA Saved" Q
"RTN","MDRPCOR",226,0)
 .D ERROR^MDRPCU($NA(^TMP($J)),.MDERR)
"RTN","MDRPCOR",227,0)
 .M ^TMP("MDFDA",$J)=^TMP("MDSAVE",$J)
"RTN","MDRPCOR",228,0)
 K ^TMP("MDSAVE",$J)
"RTN","MDRPCOR",229,0)
 Q
"RTN","MDRPCOR",230,0)
 ;
"RTN","MDRPCOR",231,0)
SETFDA ; [Procedure] Validate data and store in FDA
"RTN","MDRPCOR",232,0)
 D VAL^DIE(DD,IENS,FLD,"F",.DATA,.MDRET,$NA(^TMP("MDFDA",$J)),"MDERR")
"RTN","MDRPCOR",233,0)
 I MDRET="^" D ERROR^MDRPCU($NA(^TMP($J)),.MDERR) Q
"RTN","MDRPCOR",234,0)
 S @RESULTS@(0)="1^FDA Set"
"RTN","MDRPCOR",235,0)
 Q
"RTN","MDRPCOR",236,0)
 ;
"RTN","MDRPCOR",237,0)
UNLOCK ; [Procedure] Unlock a record
"RTN","MDRPCOR",238,0)
 D UNLOCK^MDRPCU(.RESULTS,DD,IENS) Q
"RTN","MDRPCOR",239,0)
 ;
"RTN","MDRPCOR",240,0)
VALIDATE ; [Procedure] Validate data for a field
"RTN","MDRPCOR",241,0)
 I ($G(DATA)="@"!($G(DATA)=""))&(FLD=.01) D  Q
"RTN","MDRPCOR",242,0)
 .S @RESULTS@(0)="-1^Record Deletion Not Allowed Here."
"RTN","MDRPCOR",243,0)
 I FLD=.01 I $$DUPS^MDRPCU(DD,+IENS,DATA) D  Q
"RTN","MDRPCOR",244,0)
 .S @RESULTS@(0)="-1",@RESULTS@(1)="Duplicates not allowed"
"RTN","MDRPCOR",245,0)
 S:$G(DATA)="@" DATA=""
"RTN","MDRPCOR",246,0)
 I $$GET1^DID(DD,FLD,"","TYPE")["WORD" D  Q
"RTN","MDRPCOR",247,0)
 .S MDGBL=$NA(^TMP("MDFDA",$J,DD,IENS,FLD))
"RTN","MDRPCOR",248,0)
 .K @MDGBL
"RTN","MDRPCOR",249,0)
 .I $O(DATA(""))="" S @MDGBL="@",@RESULTS@(0)="1^OK" Q
"RTN","MDRPCOR",250,0)
 .I $O(DATA(""),-1)=1&($G(DATA(1)))="" S @MDGBL="@",@RESULTS@(0)="1^OK" Q
"RTN","MDRPCOR",251,0)
 .S X=""  F  S X=$O(DATA(X)) Q:X=""  D
"RTN","MDRPCOR",252,0)
 ..S Y=$O(@MDGBL@(""""),-1)+1
"RTN","MDRPCOR",253,0)
 ..S @MDGBL@(Y)=DATA(X)
"RTN","MDRPCOR",254,0)
 .S @MDGBL=$NA(^TMP("MDSAVE",$J,DD,IENS,FLD))
"RTN","MDRPCOR",255,0)
 .S RESULTS(0)="1^WP"
"RTN","MDRPCOR",256,0)
 D VAL^DIE(DD,IENS,FLD,"EF",$G(DATA),.MDRET,$NA(^TMP("MDFDA",$J)),"MDERR")
"RTN","MDRPCOR",257,0)
 I MDRET="^" D ERROR^MDRPCU($NA(^TMP($J)),.MDERR) Q
"RTN","MDRPCOR",258,0)
 S @RESULTS@(0)="1^"_MDRET(0)
"RTN","MDRPCOR",259,0)
 Q
"RTN","MDRPCOR",260,0)
 ;
"RTN","MDRPCOT")
0^28^B61489222
"RTN","MDRPCOT",1,0)
MDRPCOT ; HOIFO/DP/NCA - Object RPCs (TMDTransaction) ;12/5/02  15:33
"RTN","MDRPCOT",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCOT",3,0)
 ; Integration Agreements:
"RTN","MDRPCOT",4,0)
 ; IA# 2693 [Subscription] TIU Extractions.
"RTN","MDRPCOT",5,0)
 ; IA# 2944 [Subscription] Calls to TIUSRVR1.
"RTN","MDRPCOT",6,0)
 ; IA# 3535 [Subscription] Calls to TIUSRVP.
"RTN","MDRPCOT",7,0)
 ; IA# 10104 [Supported] Routine XLFSTR calls
"RTN","MDRPCOT",8,0)
ADDMSG ; [Procedure] Add message to transaction
"RTN","MDRPCOT",9,0)
 N MDIEN,MDIENS,MDRET
"RTN","MDRPCOT",10,0)
 Q:'$G(DATA("TRANSACTION"))
"RTN","MDRPCOT",11,0)
 Q:$G(DATA("MESSAGE"))=""
"RTN","MDRPCOT",12,0)
 S MDIEN=+DATA("TRANSACTION"),MDIENS="+1,"_MDIEN_","
"RTN","MDRPCOT",13,0)
 D NOW^%DTC S DATA("DATE")=%
"RTN","MDRPCOT",14,0)
 S MDFDA(702.091,MDIENS,.01)=+$O(^MDD(702,+MDIEN,.091,"A"),-1)+1
"RTN","MDRPCOT",15,0)
 S MDFDA(702.091,MDIENS,.02)=DATA("DATE")
"RTN","MDRPCOT",16,0)
 S MDFDA(702.091,MDIENS,.03)=$G(DATA("PKG"),"UNKNOWN")
"RTN","MDRPCOT",17,0)
 S MDFDA(702.091,MDIENS,.09)=DATA("MESSAGE")
"RTN","MDRPCOT",18,0)
 D UPDATE^DIE("","MDFDA","MDRET")
"RTN","MDRPCOT",19,0)
 Q
"RTN","MDRPCOT",20,0)
 ;
"RTN","MDRPCOT",21,0)
DELETE ; [Procedure] Delete Study
"RTN","MDRPCOT",22,0)
 ; Sets @RESULTS@(0)="-1^Reason for not deleting" or "1^Study Deleted"
"RTN","MDRPCOT",23,0)
 ;
"RTN","MDRPCOT",24,0)
 N MDHOLD,MDNOTE,MDRES,MDSIEN
"RTN","MDRPCOT",25,0)
 S (MDHOLD,MDSIEN)=+DATA,MDRES=0,MDNOTE=""
"RTN","MDRPCOT",26,0)
 S:+$P(^MDD(702,MDSIEN,0),U,6) MDNOTE=$P(^MDD(702,MDSIEN,0),U,6)
"RTN","MDRPCOT",27,0)
 I "13"[$P(^MDD(702,MDSIEN,0),U,9) S @RESULTS@(0)="-1^Can't Delete TIU Note from a "_$$GET1^DIQ(702,MDSIEN,.09,"E")_" Study." Q
"RTN","MDRPCOT",28,0)
 I "5"[$P(^MDD(702,MDSIEN,0),U,9) S MDCANR=$$CANCEL^MDHL7B(MDHOLD) I MDCANR<1 S @RESULTS@(0)="-1^"_$P(MDCANR,"^",2) Q
"RTN","MDRPCOT",29,0)
 I +MDNOTE S MDRES="" D DELETE^TIUSRVP(.MDRES,MDNOTE)
"RTN","MDRPCOT",30,0)
 I MDRES D  Q
"RTN","MDRPCOT",31,0)
 .D STATUS(MDSIEN_",",2,$P(MDRES,"^",2))
"RTN","MDRPCOT",32,0)
 .S DATA("TRANSACTION")=MDSIEN,DATA("PKG")="TIU"
"RTN","MDRPCOT",33,0)
 .S DATA("MESSAGE")=$P(MDRES,"^",2) D ADDMSG
"RTN","MDRPCOT",34,0)
 .S @RESULTS@(0)="-1^"_$P(MDRES,"^",2)
"RTN","MDRPCOT",35,0)
 .Q
"RTN","MDRPCOT",36,0)
 E  D
"RTN","MDRPCOT",37,0)
 .S MDFDA(702,DATA_",",.01)=""
"RTN","MDRPCOT",38,0)
 .D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",39,0)
 .N DA,DIK S DA=+MDSIEN,DIK="^MDD(702," D ^DIK
"RTN","MDRPCOT",40,0)
 .S @RESULTS@(0)="1^Study Deleted."
"RTN","MDRPCOT",41,0)
 .Q
"RTN","MDRPCOT",42,0)
 Q
"RTN","MDRPCOT",43,0)
 ;
"RTN","MDRPCOT",44,0)
FILEMSG(STUDY,MDPKG,MDSTAT,MDMSG) ; [Procedure] File Study Status and Message.
"RTN","MDRPCOT",45,0)
 S DATA("TRANSACTION")=STUDY,DATA("PKG")=MDPKG
"RTN","MDRPCOT",46,0)
 S DATA("MESSAGE")=$P(MDMSG,"^",2)
"RTN","MDRPCOT",47,0)
 D STATUS(STUDY_",",MDSTAT,$P(MDMSG,"^",2)),ADDMSG
"RTN","MDRPCOT",48,0)
 Q
"RTN","MDRPCOT",49,0)
 ;
"RTN","MDRPCOT",50,0)
FILES ; [Procedure] Add/remove an attachment to this transaction
"RTN","MDRPCOT",51,0)
 NEW MDFDA,MDIEN,MDIENS,MDRET,P1,P2,P3,P4
"RTN","MDRPCOT",52,0)
 S P1=$P(DATA,U,1),P2=$P(DATA,U,2),P3=$P(DATA,U,3),P4=$P(DATA,U,4)
"RTN","MDRPCOT",53,0)
 S MDIEN=0
"RTN","MDRPCOT",54,0)
 ; Look for file (All comparisons done on lower case values)
"RTN","MDRPCOT",55,0)
 F  S MDIEN=$O(^MDD(702,P1,.1,MDIEN)) Q:'MDIEN  D  Q:X=P3
"RTN","MDRPCOT",56,0)
 .S X=$$LOW^XLFSTR($G(^MDD(702,P1,.1,MDIEN,.1)))
"RTN","MDRPCOT",57,0)
 I MDIEN&P4 S @RESULTS@(0)="1^File already assigned" Q
"RTN","MDRPCOT",58,0)
 I 'MDIEN&'P4 S @RESULTS@(0)="1^File not assigned" Q
"RTN","MDRPCOT",59,0)
 I P4 D  Q  ; Add a file
"RTN","MDRPCOT",60,0)
 .S MDIENS="+1,"_P1_","
"RTN","MDRPCOT",61,0)
 .S MDFDA(702.1,MDIENS,.01)=$O(^MDD(702,P1,.1,"B",""),-1)+1
"RTN","MDRPCOT",62,0)
 .S MDFDA(702.1,MDIENS,.02)=$S(P2:"I",1:"U")
"RTN","MDRPCOT",63,0)
 .I P2 S MDFDA(702.1,MDIENS,.03)=P2
"RTN","MDRPCOT",64,0)
 .S MDFDA(702.1,MDIENS,.1)=P3
"RTN","MDRPCOT",65,0)
 .D UPDATE^DIE("","MDFDA","MDIEN")
"RTN","MDRPCOT",66,0)
 .S @RESULTS@(0)=+$G(MDIEN(1),-1)
"RTN","MDRPCOT",67,0)
 I 'P4 D  Q  ; Remove the file
"RTN","MDRPCOT",68,0)
 .S MDFDA(702.1,MDIEN_","_P1_",",.01)="@"
"RTN","MDRPCOT",69,0)
 .D FILE^DIE("","MDFDA","MDRET")
"RTN","MDRPCOT",70,0)
 .S @RESULTS@(0)=$S($D(MDRET):-1,1:1)
"RTN","MDRPCOT",71,0)
 Q
"RTN","MDRPCOT",72,0)
 ;
"RTN","MDRPCOT",73,0)
GETATT ; [Procedure] Get Attachments
"RTN","MDRPCOT",74,0)
 F X=0:0 S X=$O(^MDD(702,DATA,.1,X)) Q:'X  D
"RTN","MDRPCOT",75,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOT",76,0)
 .S @RESULTS@(Y)=$P(^MDD(702,DATA,.1,X,0),U,1,3)
"RTN","MDRPCOT",77,0)
 .S $P(@RESULTS@(Y),U,4)=$G(^MDD(702,DATA,.1,X,.1))
"RTN","MDRPCOT",78,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOT",79,0)
 Q
"RTN","MDRPCOT",80,0)
 ;
"RTN","MDRPCOT",81,0)
GETERR ; [Procedure] Return list of Imaging Errors
"RTN","MDRPCOT",82,0)
 ; DATA = Transaction IEN
"RTN","MDRPCOT",83,0)
 F MDX=0:0 S MDX=$O(^MDD(702,DATA,.091,MDX)) Q:'MDX  D
"RTN","MDRPCOT",84,0)
 .S MDY=+^MDD(702,DATA,.091,MDX,0)_U,Y=$P(^(0),U,2)
"RTN","MDRPCOT",85,0)
 .D D^DIQ S MDY=MDY_Y_U
"RTN","MDRPCOT",86,0)
 .S MDY=MDY_$P(^MDD(702,DATA,.091,MDX,0),U,3)_U_$P(^(0),U,9)
"RTN","MDRPCOT",87,0)
 .S ^TMP($J,$O(^TMP($J,""),-1)+1)=MDY
"RTN","MDRPCOT",88,0)
 S ^TMP($J,0)=+$O(^TMP($J,""),-1)
"RTN","MDRPCOT",89,0)
 Q
"RTN","MDRPCOT",90,0)
 ;
"RTN","MDRPCOT",91,0)
NEWSTAT ; [Procedure] RPC Call to set status
"RTN","MDRPCOT",92,0)
 S MDFDA(702,DATA,.09)=TYPE
"RTN","MDRPCOT",93,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",94,0)
 Q
"RTN","MDRPCOT",95,0)
 ;
"RTN","MDRPCOT",96,0)
RPC(RESULTS,OPTION,DATA,TYPE,FILE,RESREP) ; [Procedure] Main RPC call
"RTN","MDRPCOT",97,0)
 N MDCANR,MDCON,MDDOC,MDFDA,MDFN,MDGST,MDHOLD,MDIEN,MDIENS,MDL,MDLOC,MDMSG,MDNEWV,MDNOTE,MDNVST,MDPDT,MDPKG,MDPROC,MDRES,MDRESU,MDRESUL,MDRET,MDS,MDSIEN,MDSTAT,MDSTUDY,MDTITL,MDTIUER,MDTRAN,MDTST,MDTSTR,MDVST,MDVSTR,MDWP,MDX,MDY
"RTN","MDRPCOT",98,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","MDRPCOT",99,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","MDRPCOT",100,0)
 D:'$D(@RESULTS) BADRPC^MDRPCU("MD TMDTRANSACTION","MDRPCOT",OPTION)
"RTN","MDRPCOT",101,0)
 D CLEAN^DILF
"RTN","MDRPCOT",102,0)
 Q
"RTN","MDRPCOT",103,0)
 ;
"RTN","MDRPCOT",104,0)
STATUS(MDIENS,MDSTAT,MDMSG) ; [Procedure] Update transaction status
"RTN","MDRPCOT",105,0)
 S MDFDA(702,MDIENS,.08)=$G(MDMSG)
"RTN","MDRPCOT",106,0)
 S MDFDA(702,MDIENS,.09)=MDSTAT
"RTN","MDRPCOT",107,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",108,0)
 Q
"RTN","MDRPCOT",109,0)
 ;
"RTN","MDRPCOT",110,0)
SUBMIT ; [Procedure] Process the Image(s) Submission.
"RTN","MDRPCOT",111,0)
 ; Output: -1^Error Message or
"RTN","MDRPCOT",112,0)
 ;          1^Successful Message
"RTN","MDRPCOT",113,0)
 N MDRESUL,MDSTUDY
"RTN","MDRPCOT",114,0)
 S MDSTUDY=+DATA,MDRESUL=""
"RTN","MDRPCOT",115,0)
 ; Create New TIU Document
"RTN","MDRPCOT",116,0)
 S MDRESUL=$$NEWTIUN(MDSTUDY)
"RTN","MDRPCOT",117,0)
 ; File TIU Error messages
"RTN","MDRPCOT",118,0)
 ;I +MDRESUL<0 D FILEMSG(MDSTUDY,"TIU",2,MDRESUL) Q MDRESUL
"RTN","MDRPCOT",119,0)
 I +MDRESUL<0 D  Q
"RTN","MDRPCOT",120,0)
 .D FILEMSG(MDSTUDY,"TIU",2,MDRESUL)
"RTN","MDRPCOT",121,0)
 .S @RESULTS@(0)=MDRESUL
"RTN","MDRPCOT",122,0)
 ; Submit and export the images
"RTN","MDRPCOT",123,0)
 S MDRESUL=$$SUBMIT^MDRPCOT1(MDSTUDY)
"RTN","MDRPCOT",124,0)
 ; File message
"RTN","MDRPCOT",125,0)
 D FILEMSG(MDSTUDY,"IMAGING",$S(+MDRESUL>0:+MDRESUL,1:2),MDRESUL)
"RTN","MDRPCOT",126,0)
 S @RESULTS@(0)=MDRESUL
"RTN","MDRPCOT",127,0)
 Q
"RTN","MDRPCOT",128,0)
 ;
"RTN","MDRPCOT",129,0)
VIEWTIU ; [Procedure] VIew the associated tiu document
"RTN","MDRPCOT",130,0)
 I '$P(^MDD(702,+DATA,0),U,6) D  Q
"RTN","MDRPCOT",131,0)
 .S @RESULTS@(0)="NO TIU NOTE FOR THIS STUDY"
"RTN","MDRPCOT",132,0)
 D TGET^TIUSRVR1(.RESULTS,+$P(^MDD(702,+DATA,0),U,6))
"RTN","MDRPCOT",133,0)
 Q
"RTN","MDRPCOT",134,0)
 ;
"RTN","MDRPCOT",135,0)
GETDATA(STUDY) ; [Function] Return the Necessary data for creating a TIU note.
"RTN","MDRPCOT",136,0)
 ; Return: Patient DFN_"^"_TIU title_"^"_Hospital Location_"^"_TIU Note
"RTN","MDRPCOT",137,0)
 ;         IEN_"^"_Consult #_"^"_CP Definition IEN_"^"_Visit String_"^"
"RTN","MDRPCOT",138,0)
 ;         New Visit Flag
"RTN","MDRPCOT",139,0)
 ;         or
"RTN","MDRPCOT",140,0)
 ;         -1^Error Message
"RTN","MDRPCOT",141,0)
 N DFN,MDCON,MDFN,MDIEN,MDIENS,MDLOC,MDNEWV,MDNOTE,MDNVST,MDPROC,MDVSTR,MDTITL,MDX,MDTST
"RTN","MDRPCOT",142,0)
 S MDIEN=+STUDY,MDIENS=MDIEN_",",MDNVST=0
"RTN","MDRPCOT",143,0)
 I $$GET1^DIQ(702,MDIENS,.01)="" Q "-1^No such study entry."
"RTN","MDRPCOT",144,0)
 ; Get DFN
"RTN","MDRPCOT",145,0)
 S DFN=$$GET1^DIQ(702,MDIEN,.01,"I")
"RTN","MDRPCOT",146,0)
 I 'DFN Q "-1^No DFN."
"RTN","MDRPCOT",147,0)
 ; Get CP Def
"RTN","MDRPCOT",148,0)
 S MDPROC=$$GET1^DIQ(702,MDIEN,.04,"I")
"RTN","MDRPCOT",149,0)
 I 'MDPROC Q "-1^No CP Def."
"RTN","MDRPCOT",150,0)
 ; Get Consult
"RTN","MDRPCOT",151,0)
 S MDCON=$$GET1^DIQ(702,MDIEN,.05,"I")
"RTN","MDRPCOT",152,0)
 I 'MDCON Q "-1^No Consult #."
"RTN","MDRPCOT",153,0)
 ; Get TIU Note Title
"RTN","MDRPCOT",154,0)
 S MDTITL=$$GET1^DIQ(702.01,+MDPROC_",",.04,"I")
"RTN","MDRPCOT",155,0)
 I 'MDTITL Q "-1^No TIU Note Title."
"RTN","MDRPCOT",156,0)
 S MDVSTR=$$GET1^DIQ(702,MDIEN,.07)
"RTN","MDRPCOT",157,0)
 I MDVSTR=""  Q "-1^No Visit String."
"RTN","MDRPCOT",158,0)
 I $L(MDVSTR,";")=1 S MDNVST=1,MDVSTR=";"_MDVSTR ; If new visit is selected
"RTN","MDRPCOT",159,0)
 ; MDLOC is Hospital Location
"RTN","MDRPCOT",160,0)
 I MDVSTR'="" D
"RTN","MDRPCOT",161,0)
 .S MDVSTR=$$GETVSTR^MDRPCOT1(DFN,MDVSTR,MDPROC,$$GET1^DIQ(702,MDIEN,.02,"I"))
"RTN","MDRPCOT",162,0)
 .S MDLOC=$P(MDVSTR,";",1)
"RTN","MDRPCOT",163,0)
 ; Does TIU doc already exist?
"RTN","MDRPCOT",164,0)
 I $$GET1^DIQ(702,MDIEN,.06,"I") Q DFN_"^"_MDTITL_"^"_MDLOC_"^"_+$$GET1^DIQ(702,MDIEN,.06,"I")_"^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCOT",165,0)
 ; Does TIU doc exist for previous transaction of this consult?
"RTN","MDRPCOT",166,0)
 I MDCON S MDNOTE=$$PREV(MDCON,MDIEN)
"RTN","MDRPCOT",167,0)
 Q DFN_"^"_MDTITL_"^"_MDLOC_"^"_+MDNOTE_"^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCOT",168,0)
 ;
"RTN","MDRPCOT",169,0)
NEWTIUN(STUDY) ; [Function] Create a new TIU for transaction
"RTN","MDRPCOT",170,0)
 ; Input: STUDY - IENS of CP study entry
"RTN","MDRPCOT",171,0)
 ; Return: TIU Document IEN
"RTN","MDRPCOT",172,0)
 N CTR,DFN,MDCON,MDFDA,MDGST,MDL,MDLOC,MDNOTE,MDPDT,MDPROC,MDRESU,MDTITL,MDTSTR,MDVST,MDVSTR,MDWP S CTR=0,MDGST=+STUDY,MDRESU=""
"RTN","MDRPCOT",173,0)
 ; Get data for TIU Note Creation
"RTN","MDRPCOT",174,0)
 S (MDTSTR,MDRESU)=$$GETDATA(MDGST)
"RTN","MDRPCOT",175,0)
 ; File Error message
"RTN","MDRPCOT",176,0)
 I +MDRESU<0 D FILEMSG(MDGST,"CP",2,MDRESU) Q MDRESU
"RTN","MDRPCOT",177,0)
 I $G(MDTSTR)="" Q "-1^No Data to Create TIU Document"
"RTN","MDRPCOT",178,0)
 F MDL="DFN","MDTITL","MDLOC","MDNOTE","MDCON","MDPROC","MDVSTR","MDNVST" D
"RTN","MDRPCOT",179,0)
 .S CTR=CTR+1,@MDL=$P(MDTSTR,"^",CTR)
"RTN","MDRPCOT",180,0)
 S MDVST=""
"RTN","MDRPCOT",181,0)
 ; If previous TIU document exists, quit
"RTN","MDRPCOT",182,0)
 I MDNOTE Q MDNOTE
"RTN","MDRPCOT",183,0)
 ; Create new visit, if no vstring
"RTN","MDRPCOT",184,0)
 S MDPDT=$$PDT^MDRPCOT1(MDGST)
"RTN","MDRPCOT",185,0)
 S:'MDPDT MDPDT=$P(MDVSTR,";",2) ; If No D/T Performed grab visit D/T
"RTN","MDRPCOT",186,0)
 ; Build variables for TIU Call
"RTN","MDRPCOT",187,0)
 S MDWP(.05)=1 ; Undicated Status
"RTN","MDRPCOT",188,0)
 S MDWP(1405)=+MDCON_";GMR(123," ; Package Reference
"RTN","MDRPCOT",189,0)
 I MDPDT S MDWP(70202)=MDPDT ; Date/Time Performed
"RTN","MDRPCOT",190,0)
 ; File PCE Error message
"RTN","MDRPCOT",191,0)
 I MDNVST S MDRESU=$$EN1^MDPCE(MDGST,MDPDT,MDPROC,$P(MDVSTR,";",3)) I +MDRESU S MDVST=+MDRESU,MDVSTR=$P(MDRESU,"^",2)
"RTN","MDRPCOT",192,0)
 I MDNVST&(+MDRESU<0) D FILEMSG(MDGST,"PCE",2,$P(MDRESU,"^",2)) Q MDRESU
"RTN","MDRPCOT",193,0)
 ; Create the TIU note stub
"RTN","MDRPCOT",194,0)
 S MDNOTE="" D MAKE^TIUSRVP(.MDNOTE,DFN,MDTITL,$P(MDVSTR,";",2),MDLOC,$S(MDVST:MDVST,1:""),.MDWP,MDVSTR,1,1)
"RTN","MDRPCOT",195,0)
 I '(+MDNOTE) S $P(MDNOTE,"^")=-1 Q MDNOTE
"RTN","MDRPCOT",196,0)
 ; Finalize the transaction
"RTN","MDRPCOT",197,0)
 S MDFDA(702,STUDY_",",.06)=+MDNOTE
"RTN","MDRPCOT",198,0)
 S MDFDA(702,STUDY_",",.08)=""
"RTN","MDRPCOT",199,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",200,0)
 Q 1
"RTN","MDRPCOT",201,0)
 ;
"RTN","MDRPCOT",202,0)
PREV(MDC,MDS) ; [Function] Return the Previous TIU document.
"RTN","MDRPCOT",203,0)
 N MDNEWV,MDDOC,MDTRAN,MDTIUER,MDTST
"RTN","MDRPCOT",204,0)
 S (MDDOC,MDNEWV,MDTRAN,MDTIUER,MDTST)="" K ^TMP("MDTIUST",$J)
"RTN","MDRPCOT",205,0)
 F  S MDTRAN=$O(^MDD(702,"ACON",MDC,MDTRAN)) Q:'MDTRAN  D  Q:'MDTRAN
"RTN","MDRPCOT",206,0)
 .I $P(^MDD(702,MDTRAN,0),U,6) D
"RTN","MDRPCOT",207,0)
 ..D EXTRACT^TIULQ($P(^MDD(702,MDTRAN,0),U,6),"^TMP(""MDTIUST"",$J)",MDTIUER,".01;.05;1406") Q:+MDTIUER
"RTN","MDRPCOT",208,0)
 ..S MDTST=$G(^TMP("MDTIUST",$J,$P(^MDD(702,MDTRAN,0),U,6),.05,"E"))
"RTN","MDRPCOT",209,0)
 ..I MDTST'="UNDICTATED"&(MDTST'="UNSIGNED") K ^TMP("MDTIUST",$J) Q
"RTN","MDRPCOT",210,0)
 ..I MDTST="UNSIGNED"&'($G(^TMP("MDTIUST",$J,$P(^MDD(702,MDTRAN,0),U,6),1406,"I"))) K ^TMP("MDTIUST",$J) Q
"RTN","MDRPCOT",211,0)
 ..S MDDOC=$P(^MDD(702,MDTRAN,0),U,6),MDNEWV=$P(^MDD(702,MDTRAN,0),U,7)
"RTN","MDRPCOT",212,0)
 ..Q:'MDS
"RTN","MDRPCOT",213,0)
 ..S MDFDA(702,MDS_",",.06)=MDDOC
"RTN","MDRPCOT",214,0)
 ..S MDFDA(702,MDS_",",.07)=MDNEWV
"RTN","MDRPCOT",215,0)
 ..D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",216,0)
 ..S MDTRAN=""
"RTN","MDRPCOT",217,0)
 Q MDDOC
"RTN","MDRPCOT",218,0)
 ;
"RTN","MDRPCOT1")
0^29^B26833377
"RTN","MDRPCOT1",1,0)
MDRPCOT1 ; HOIFO/NCA/DP - Object RPCs (TMDTransaction) - Continued ; [08-02-2002 12:55]
"RTN","MDRPCOT1",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCOT1",3,0)
 ; Integration Agreements:
"RTN","MDRPCOT1",4,0)
 ; IA# 3468 [Subscription] GMRCCP API.
"RTN","MDRPCOT1",5,0)
 ; IA# 3567 [Subscription] MAGGSIUI API
"RTN","MDRPCOT1",6,0)
 ; IA# 10061 [Supported] Calls to VADPT
"RTN","MDRPCOT1",7,0)
 ; IA# 10103 [Supported] Calls to XLFDT.
"RTN","MDRPCOT1",8,0)
 ;
"RTN","MDRPCOT1",9,0)
DELERR(MDTIEN) ; [Procedure] Delete Imaging Error Messages
"RTN","MDRPCOT1",10,0)
 S MDLP=0 F  S MDLP=$O(^MDD(702,MDTIEN,.091,MDLP)) Q:'MDLP  D
"RTN","MDRPCOT1",11,0)
 .K DA,DIK
"RTN","MDRPCOT1",12,0)
 .S DA=+MDLP,DA(1)=+MDTIEN,DIK="^MDD(702,"_DA(1)_",.091," D ^DIK
"RTN","MDRPCOT1",13,0)
 .Q
"RTN","MDRPCOT1",14,0)
 Q
"RTN","MDRPCOT1",15,0)
 ;
"RTN","MDRPCOT1",16,0)
IMGSTAT(STUDY,MDSTAT) ; [Procedure] Update the Image Status.
"RTN","MDRPCOT1",17,0)
 N MDL
"RTN","MDRPCOT1",18,0)
 S MDL=0 F  S MDL=$O(^MDD(702,STUDY,.1,MDL)) Q:MDL<1  S $P(^(MDL,0),"^",9)=MDSTAT
"RTN","MDRPCOT1",19,0)
 Q
"RTN","MDRPCOT1",20,0)
 ;
"RTN","MDRPCOT1",21,0)
GETVSTR(DFN,MDSSTR,MDPR,MDTR) ; [Function] Check the Visit String
"RTN","MDRPCOT1",22,0)
 N MDCLOC,MDLOC,MDINPT,VAIP
"RTN","MDRPCOT1",23,0)
 I '$G(MDTR) Q 0
"RTN","MDRPCOT1",24,0)
 I '$G(MDPR) Q 0
"RTN","MDRPCOT1",25,0)
 I $G(MDSSTR)="" Q 0
"RTN","MDRPCOT1",26,0)
 S VAIP("D")=MDTR ; DT of Transaction Created
"RTN","MDRPCOT1",27,0)
 D IN5^VADPT S MDINPT=$S(+VAIP(13):1,1:0)
"RTN","MDRPCOT1",28,0)
 S MDCLOC=$$GET1^DIQ(702.01,+MDPR_",",.05,"I") I 'MDCLOC Q 0
"RTN","MDRPCOT1",29,0)
 S Y=MDCLOC_";"_$P(MDSSTR,";",2)_";"_$P(MDSSTR,";")
"RTN","MDRPCOT1",30,0)
 I $P(Y,";",3)="A" Q Y
"RTN","MDRPCOT1",31,0)
 S:$P(Y,";",3)="" $P(Y,";",3)="A"
"RTN","MDRPCOT1",32,0)
 S:+MDINPT $P(Y,";",3)="A"
"RTN","MDRPCOT1",33,0)
 Q Y
"RTN","MDRPCOT1",34,0)
 ;
"RTN","MDRPCOT1",35,0)
PDT(STUDY) ; [Function] Loop through the attachments for Date/Time Performed.
"RTN","MDRPCOT1",36,0)
 N MDL,MDDT
"RTN","MDRPCOT1",37,0)
 S MDL=0,MDDT=""
"RTN","MDRPCOT1",38,0)
 F  S MDL=$O(^MDD(702,STUDY,.1,MDL)) Q:'MDL  D  Q:MDDT
"RTN","MDRPCOT1",39,0)
 .S MDDT=$P($G(^MDD(702,STUDY,.1,MDL,0)),"^",3)
"RTN","MDRPCOT1",40,0)
 I MDDT S MDDT=$P($G(^MDD(703.1,+MDDT,0)),"^",3) ; Get Date/Time Performed
"RTN","MDRPCOT1",41,0)
 Q MDDT
"RTN","MDRPCOT1",42,0)
 ;
"RTN","MDRPCOT1",43,0)
SUBMIT(STUDY) ; [Function] Submit all non-pending/uncomplete images in transaction to Imaging
"RTN","MDRPCOT1",44,0)
 N DATA,MDACQ,MDC,MDCRES,MDCTR,MDLOC,MDAR,MDARR,MDDT,MDFDA,MDDEL,MDIEN,MDIENS,MDIMG,MDL,MDMAG,MDR,MDST,MDX,MDY,MDZ
"RTN","MDRPCOT1",45,0)
 S MDIEN=+STUDY,MDIENS=MDIEN_","
"RTN","MDRPCOT1",46,0)
 S MDST=$$GET1^DIQ(702,MDIEN,.09,"I") I "13"[MDST Q "-1^Study not in proper status"
"RTN","MDRPCOT1",47,0)
 D:MDST=2 DELERR(+MDIEN)
"RTN","MDRPCOT1",48,0)
 I $$GET1^DIQ(702,MDIEN,.01)="" Q "-1^No Entry in file (#702)."
"RTN","MDRPCOT1",49,0)
 D NOW^%DTC S MDDT=%
"RTN","MDRPCOT1",50,0)
 S MDMAG("IDFN")=+$$GET1^DIQ(702,MDIEN,.01,"I")
"RTN","MDRPCOT1",51,0)
 I 'MDMAG("IDFN") Q "-1^No Patient DFN."
"RTN","MDRPCOT1",52,0)
 S MDMAG("PXPKG")=8925
"RTN","MDRPCOT1",53,0)
 S MDMAG("PXIEN")=+$$GET1^DIQ(702,MDIEN,.06,"I")
"RTN","MDRPCOT1",54,0)
 I 'MDMAG("PXIEN") Q "-1^No TIU IEN"
"RTN","MDRPCOT1",55,0)
 I '$O(^MDD(702,MDIEN,.1,0)) D  Q $S(+MDR<0:MDR,1:"3^Transaction Complete")
"RTN","MDRPCOT1",56,0)
 .S MDC=$$GET1^DIQ(702,MDIEN,.05,"I")
"RTN","MDRPCOT1",57,0)
 .S MDR=$$UPDCONS(MDC,MDMAG("PXIEN"))
"RTN","MDRPCOT1",58,0)
 S MDMAG("STSCB")="ISTAT^MDAPI"
"RTN","MDRPCOT1",59,0)
 S MDMAG("TRKID")="CP;"_MDIEN_"-"_MDDT
"RTN","MDRPCOT1",60,0)
 S MDLOC=$$GET1^DIQ(702,MDIEN,.07,"I"),MDLOC=$P(MDLOC,";",3)
"RTN","MDRPCOT1",61,0)
 I 'MDLOC Q "-1^No Hospital Location."
"RTN","MDRPCOT1",62,0)
 S MDMAG("ACQS")=$S(+$$GET1^DIQ(44,MDLOC_",",3,"I"):+$$GET1^DIQ(44,MDLOC_",",3,"I"),1:+$G(DUZ(2)))
"RTN","MDRPCOT1",63,0)
 S MDMAG("ACQL")=MDLOC
"RTN","MDRPCOT1",64,0)
 S MDX=$$GET1^DIQ(702,MDIEN,.04,"I")
"RTN","MDRPCOT1",65,0)
 S MDZ=$P(^MDS(702.01,+MDX,0),"^",1)
"RTN","MDRPCOT1",66,0)
 S (MDACQ,MDX,MDDEL)="",MDCTR=0
"RTN","MDRPCOT1",67,0)
 N MDTOT S MDTOT=$$GET1^DIQ(702,MDIENS,.991)
"RTN","MDRPCOT1",68,0)
 S MDL=0 F  S MDL=$O(^MDD(702,MDIEN,.1,MDL)) Q:MDL<1  S MDX=$G(^(MDL,0)) D
"RTN","MDRPCOT1",69,0)
 .S:'MDDEL MDDEL=$P(MDX,"^",3)
"RTN","MDRPCOT1",70,0)
 .S MDY=$G(^MDD(702,MDIEN,.1,MDL,.1))
"RTN","MDRPCOT1",71,0)
 .S:MDACQ="" MDACQ=$P($P(MDY,"\\",2),"\")
"RTN","MDRPCOT1",72,0)
 .I MDY'="" S MDCTR=MDCTR+1,MDARR(MDCTR)=MDY_"^"_MDZ_" image "_MDCTR_" out of "_MDTOT
"RTN","MDRPCOT1",73,0)
 .Q
"RTN","MDRPCOT1",74,0)
 I '$O(MDARR(0)) Q "-1^No UNC."
"RTN","MDRPCOT1",75,0)
 S MDMAG("GDESC")=MDZ_" Result"
"RTN","MDRPCOT1",76,0)
 I MDDEL S MDY=$P($G(^MDD(703.1,+MDDEL,0)),"^",3,4),MDMAG("PXDT")=$P(MDY,"^",1),MDY=+$P(MDY,"^",2),MDMAG("ACQD")=$P($G(^MDS(702.09,+MDY,0)),"^"),MDMAG("DFLG")=+$P($G(^MDS(702.09,+MDY,0)),"^",5)
"RTN","MDRPCOT1",77,0)
 S:$G(MDMAG("ACQD"))="" MDMAG("ACQD")=MDACQ
"RTN","MDRPCOT1",78,0)
 S:'$G(MDMAG("PXDT")) MDMAG("PXDT")=MDDT ; If no date, use NOW in MDDT
"RTN","MDRPCOT1",79,0)
 S MDMAG("TRTYPE")="NEW"
"RTN","MDRPCOT1",80,0)
 D IMPORT^MAGGSIUI(.MDIMG,.MDARR,.MDMAG)
"RTN","MDRPCOT1",81,0)
 I '(+$G(MDIMG(0))) D  Q "-1^"_$P(MDIMG(0),"^",2)
"RTN","MDRPCOT1",82,0)
 .D IMGSTAT(+MDIENS,1)
"RTN","MDRPCOT1",83,0)
 .F MDAR=0:0 S MDAR=$O(MDIMG(MDAR)) Q:'MDAR  I $G(MDIMG(MDAR))'="" D
"RTN","MDRPCOT1",84,0)
 ..S DATA("MESSAGE")=$$TRANS^MDAPI(MDIMG(MDAR)) D ADDMSG^MDRPCOT
"RTN","MDRPCOT1",85,0)
 D IMGSTAT(+MDIENS,0)
"RTN","MDRPCOT1",86,0)
 Q "1^Images Submitted"
"RTN","MDRPCOT1",87,0)
 ;
"RTN","MDRPCOT1",88,0)
UPDCONS(MDC,MDDOC) ; [Function] Update Consults Procedure Status
"RTN","MDRPCOT1",89,0)
 N MDCRES
"RTN","MDRPCOT1",90,0)
 S MDCRES=$$CPDOC^GMRCCP(MDC,MDDOC,2)
"RTN","MDRPCOT1",91,0)
 I '(+MDCRES) Q "-1^"_$P(MDCRES,"^",2)
"RTN","MDRPCOT1",92,0)
 Q 1
"RTN","MDRPCOT1",93,0)
 ;
"RTN","MDRPCOT1",94,0)
GETIORD(MDIEN) ; [Function] Return the Instrument order number for this study
"RTN","MDRPCOT1",95,0)
 ; Called from instrument interface routines
"RTN","MDRPCOT1",96,0)
 Q:'$D(^MDD(702,MDIEN,0))#2 -1  ; No such study
"RTN","MDRPCOT1",97,0)
 Q:'$P(^MDD(702,MDIEN,0),U,12) $$NEWIORD(MDIEN)  ; Create a new one
"RTN","MDRPCOT1",98,0)
 Q $P(^MDD(702,MDIEN,0),U,12)  ; Return the existing one
"RTN","MDRPCOT1",99,0)
 ;
"RTN","MDRPCOT1",100,0)
NEWIORD(MDIEN) ; [Function] Generate & return new unique instrument order number
"RTN","MDRPCOT1",101,0)
 ; Notice: will overwrite existing order number if it exists
"RTN","MDRPCOT1",102,0)
 N MDFDA
"RTN","MDRPCOT1",103,0)
 Q:'$D(^MDD(702,MDIEN,0))#2 -1  ; No such study
"RTN","MDRPCOT1",104,0)
 L +^MDD(702,"AION"):15 E  Q -1  ; Unable to lock and guarantee uniqueness
"RTN","MDRPCOT1",105,0)
 F  D  Q:'$D(^MDD(702,"AION",X))  H 1  ; Loop until unique
"RTN","MDRPCOT1",106,0)
 . S X=$$NOW^XLFDT() ; Current DateTime
"RTN","MDRPCOT1",107,0)
 . S X=$TR($J(X,14,6),".","") ; Pad with 0's and strip the decimal
"RTN","MDRPCOT1",108,0)
 . Q
"RTN","MDRPCOT1",109,0)
 I $E($G(^MDS(702.09,DEVIEN,0)),1,4)="Muse" D
"RTN","MDRPCOT1",110,0)
 . ; Due to current limitation to the Muse can only except 9
"RTN","MDRPCOT1",111,0)
 . S X=$E($TR($H,",",""),2,10) ; Using $E($H) only for the MUSE
"RTN","MDRPCOT1",112,0)
 . I '$D(^MDD(702,"AION",X)) Q  ; It is unique and quit
"RTN","MDRPCOT1",113,0)
 . N I,FLG ; Not unique
"RTN","MDRPCOT1",114,0)
 . S FLG=0
"RTN","MDRPCOT1",115,0)
 . F I=1:1 D  Q:FLG
"RTN","MDRPCOT1",116,0)
 . . S X=X+1
"RTN","MDRPCOT1",117,0)
 . . I '$D(^MDD(702,"AION",X)) S FLG=1
"RTN","MDRPCOT1",118,0)
 . . Q
"RTN","MDRPCOT1",119,0)
 . Q
"RTN","MDRPCOT1",120,0)
 S MDFDA(702,MDIEN_",",.12)=X  ; Build FDA
"RTN","MDRPCOT1",121,0)
 D FILE^DIE("","MDFDA")  ; File it
"RTN","MDRPCOT1",122,0)
 L -(^MDD(702,"AION"))  ; Unlock it
"RTN","MDRPCOT1",123,0)
 Q $P(^MDD(702,MDIEN,0),U,12)  ; Return it from the file
"RTN","MDRPCOT1",124,0)
 ;
"RTN","MDRPCOT1",125,0)
GETSTDY(MDION) ; [Function] Return study from instrument order number
"RTN","MDRPCOT1",126,0)
 ; Called from instrument interface routines
"RTN","MDRPCOT1",127,0)
 Q:'$D(^MDD(702,"AION",MDION)) -1  ; No such order number
"RTN","MDRPCOT1",128,0)
 Q $O(^MDD(702,"AION",MDION,""))  ; Return the 702 ien
"RTN","MDRPCOT1",129,0)
 ;
"RTN","MDRPCOU")
0^30^B4441113
"RTN","MDRPCOU",1,0)
MDRPCOU ; HOIFO/DP - Object RPCs (TMDUser) ; [01-09-2003 15:21]
"RTN","MDRPCOU",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCOU",3,0)
 ; Integration Agreements:
"RTN","MDRPCOU",4,0)
 ; IA# 2263 [Supported] XPAR parameter calls.
"RTN","MDRPCOU",5,0)
 ; IA# 2541 [Supported] Call to XUPARAM.
"RTN","MDRPCOU",6,0)
 ; IA# 2241 [Supported] Call to XUSRB1.
"RTN","MDRPCOU",7,0)
 ; IA# 10045 [Supported] Call to XUSHSHP.
"RTN","MDRPCOU",8,0)
 ; IA# 10076 [Supported] Direct read of XUSEC
"RTN","MDRPCOU",9,0)
 ; IA# 10097 [Supported] Access to rtn %ZOSV
"RTN","MDRPCOU",10,0)
 ;
"RTN","MDRPCOU",11,0)
ESIG ; [Procedure] Verify users electronic signature
"RTN","MDRPCOU",12,0)
 I $G(DATA)="" D  Q
"RTN","MDRPCOU",13,0)
 .S @RESULTS@(0)="-1^Must supply electronic signature code"
"RTN","MDRPCOU",14,0)
 S X=$$DECRYP^XUSRB1(DATA)
"RTN","MDRPCOU",15,0)
 D HASH^XUSHSHP
"RTN","MDRPCOU",16,0)
 I X'=$$GET1^DIQ(200,DUZ_",",20.4,"I") S @RESULTS@(0)="-1^E-Sig Invalid^"
"RTN","MDRPCOU",17,0)
 E  S @RESULTS@(0)="1^E-Sig Verifed^"_X
"RTN","MDRPCOU",18,0)
 Q
"RTN","MDRPCOU",19,0)
 ;
"RTN","MDRPCOU",20,0)
GETPROC ; [Procedure] Get procedures access list
"RTN","MDRPCOU",21,0)
 NEW MDTMP
"RTN","MDRPCOU",22,0)
 S DATA=$G(DATA,DUZ)_";VA(200,"
"RTN","MDRPCOU",23,0)
 D GETLST^XPAR(.MDTMP,DATA,"MD PROCEDURE ACCESS","Q")
"RTN","MDRPCOU",24,0)
 F X=0:0 S X=$O(MDTMP(X)) Q:'X  D:$P(MDTMP(X),U,2)
"RTN","MDRPCOU",25,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOU",26,0)
 .S @RESULTS@(Y)=+MDTMP(X)
"RTN","MDRPCOU",27,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOU",28,0)
 Q
"RTN","MDRPCOU",29,0)
 ;
"RTN","MDRPCOU",30,0)
RPC(RESULTS,OPTION,DATA) ; [Procedure] Main RPC Call
"RTN","MDRPCOU",31,0)
 ; Input parameters
"RTN","MDRPCOU",32,0)
 ;  1. RESULTS [Literal/Required] No description
"RTN","MDRPCOU",33,0)
 ;  2. OPTION [Literal/Required] No description
"RTN","MDRPCOU",34,0)
 ;  3. DATA [Literal/Required] No description
"RTN","MDRPCOU",35,0)
 ;
"RTN","MDRPCOU",36,0)
 ; RPC: [MD TMDUSER]
"RTN","MDRPCOU",37,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","MDRPCOU",38,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","MDRPCOU",39,0)
 D:'$D(@RESULTS) BADRPC^MDRPCU("MD TMDUSER","MDRPCOU",OPTION)
"RTN","MDRPCOU",40,0)
 D CLEAN^DILF
"RTN","MDRPCOU",41,0)
 Q
"RTN","MDRPCOU",42,0)
 ;
"RTN","MDRPCOU",43,0)
SIGNON ; [Procedure] Returns sign-on information after Broker.Connected := True
"RTN","MDRPCOU",44,0)
 S @RESULTS@(0)=DUZ
"RTN","MDRPCOU",45,0)
 S @RESULTS@(1)=$$GET1^DIQ(200,DUZ_",",.01) ; Name
"RTN","MDRPCOU",46,0)
 S @RESULTS@(2)=+$$FIND1^DIC(4.2,"","QX",$$KSP^XUPARAM("WHERE")) ;Domain
"RTN","MDRPCOU",47,0)
 S @RESULTS@(3)=$$KSP^XUPARAM("WHERE") ; Domain Name
"RTN","MDRPCOU",48,0)
 S @RESULTS@(4)=+$G(DUZ(2)) ; Division IEN
"RTN","MDRPCOU",49,0)
 S @RESULTS@(5)=$S(+$G(DUZ(2)):$$GET1^DIQ(4,DUZ(2)_",",.01),1:"UNKNOWN")
"RTN","MDRPCOU",50,0)
 S @RESULTS@(6)=$D(^XUSEC("MD MANAGER",DUZ))#2
"RTN","MDRPCOU",51,0)
 S @RESULTS@(7)=$$GET1^DIQ(200,DUZ_",",8)
"RTN","MDRPCOU",52,0)
 S @RESULTS@(8)="" ; Obsolete Wizard Flag
"RTN","MDRPCOU",53,0)
 S @RESULTS@(9)=$G(DTIME,300)
"RTN","MDRPCOU",54,0)
 D GETENV^%ZOSV
"RTN","MDRPCOU",55,0)
 S @RESULTS@(10)=$P(Y,U,1,3)
"RTN","MDRPCOU",56,0)
 Q
"RTN","MDRPCOU",57,0)
 ;
"RTN","MDRPCOV")
0^31^B19395157
"RTN","MDRPCOV",1,0)
MDRPCOV ; HOIFO/DP - Object RPCs (TMDParameter) ; [04-15-2003 12:42]
"RTN","MDRPCOV",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCOV",3,0)
 ; Integration Agreements:
"RTN","MDRPCOV",4,0)
 ; IA# 2263 [Supported] XPAR parameter call.
"RTN","MDRPCOV",5,0)
 ; IA# 2541 [Supported] Call to XUPARAM.
"RTN","MDRPCOV",6,0)
 ;
"RTN","MDRPCOV",7,0)
DELLST ; [Procedure] Delete list of parameters
"RTN","MDRPCOV",8,0)
 D NDEL^XPAR(ENT,PAR,.ERR)
"RTN","MDRPCOV",9,0)
 S:'$G(ERR) @RESULTS@(0)="1^All instances removed"
"RTN","MDRPCOV",10,0)
 Q
"RTN","MDRPCOV",11,0)
 ;
"RTN","MDRPCOV",12,0)
DELPAR ; [Procedure] Delete single parameter value
"RTN","MDRPCOV",13,0)
 D DEL^XPAR(ENT,PAR,INST,.ERR)
"RTN","MDRPCOV",14,0)
 S:'$G(ERR) @RESULTS@(0)="1^Instance deleted"
"RTN","MDRPCOV",15,0)
 Q
"RTN","MDRPCOV",16,0)
 ;
"RTN","MDRPCOV",17,0)
ENTVAL ; [Procedure] Return value of the entity
"RTN","MDRPCOV",18,0)
 I ENT="SYS" S ENT=$$KSP^XUPARAM("WHERE")
"RTN","MDRPCOV",19,0)
 E  I ENT="DIV" S ENT=$$GET1^DIQ(4,DUZ(2)_",",.01)
"RTN","MDRPCOV",20,0)
 E  I ENT="USR" S ENT=$$GET1^DIQ(200,DUZ_",",.01)
"RTN","MDRPCOV",21,0)
 E  S ENT=$$GET1^DIQ(+$P(ENT,"(",2),+ENT_",",.01)
"RTN","MDRPCOV",22,0)
 S @RESULTS@(0)=ENT
"RTN","MDRPCOV",23,0)
 Q
"RTN","MDRPCOV",24,0)
 ;
"RTN","MDRPCOV",25,0)
GETHDR ; [Procedure] Returns common header format for TMDRecordID
"RTN","MDRPCOV",26,0)
 S X=$$FIND1^DIC(8989.51,,"QX",PAR)
"RTN","MDRPCOV",27,0)
 I X S @RESULTS@(0)=X_";8989.51^"_PAR
"RTN","MDRPCOV",28,0)
 E  S @RESULTS@(0)="-1^No such parameter ["_PAR_"]"
"RTN","MDRPCOV",29,0)
 Q
"RTN","MDRPCOV",30,0)
 ;
"RTN","MDRPCOV",31,0)
GETLST ; [Procedure] Return all instances of a parameter
"RTN","MDRPCOV",32,0)
 D GETLST^XPAR(.RET,ENT,PAR,"E",.ERR)
"RTN","MDRPCOV",33,0)
 Q:$G(ERR,0)
"RTN","MDRPCOV",34,0)
 S TMP="RET"
"RTN","MDRPCOV",35,0)
 F  S TMP=$Q(@TMP) Q:TMP=""  D
"RTN","MDRPCOV",36,0)
 .S @RESULTS@($O(@RESULTS@(""),-1)+1)=@TMP
"RTN","MDRPCOV",37,0)
 S @RESULTS@(0)=$O(@RESULTS@(""),-1)
"RTN","MDRPCOV",38,0)
 Q
"RTN","MDRPCOV",39,0)
 ;
"RTN","MDRPCOV",40,0)
GETPAR ; [Procedure] Returns external value of a parameter
"RTN","MDRPCOV",41,0)
 S @RESULTS@(0)=$$GET^XPAR(ENT,PAR,INST,"E")
"RTN","MDRPCOV",42,0)
 Q
"RTN","MDRPCOV",43,0)
 ;
"RTN","MDRPCOV",44,0)
GETWP ; [Procedure] Returns WP text for a parameter
"RTN","MDRPCOV",45,0)
 D GETWP^XPAR(.RET,ENT,PAR,INST,.ERR)
"RTN","MDRPCOV",46,0)
 Q:$G(ERR,0)
"RTN","MDRPCOV",47,0)
 S TMP="RET"
"RTN","MDRPCOV",48,0)
 F  S TMP=$Q(@TMP) Q:TMP=""  D
"RTN","MDRPCOV",49,0)
 .S @RESULTS@($O(@RESULTS@(""),-1)+1)=@TMP
"RTN","MDRPCOV",50,0)
 S @RESULTS@(0)=$O(@RESULTS@(""),-1)_U_INST
"RTN","MDRPCOV",51,0)
 Q
"RTN","MDRPCOV",52,0)
 ;
"RTN","MDRPCOV",53,0)
LOCK ; [Procedure] Gain exclusive access to the CP Parameters
"RTN","MDRPCOV",54,0)
 L +(^MDD("CP PARAMETERS")):5 S @RESULTS@(0)=$T
"RTN","MDRPCOV",55,0)
 Q
"RTN","MDRPCOV",56,0)
 ;
"RTN","MDRPCOV",57,0)
PARLST ; [Procedure] Returns list of all parameters
"RTN","MDRPCOV",58,0)
 F Y=1:1 Q:$P($T(PARS+Y),";;",2)["**EOD**"  D
"RTN","MDRPCOV",59,0)
 .S @RESULTS@(Y)=$P($T(PARS+Y),";;",2)
"RTN","MDRPCOV",60,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOV",61,0)
 Q
"RTN","MDRPCOV",62,0)
 ;
"RTN","MDRPCOV",63,0)
RPC(RESULTS,OPTION,ENT,PAR,INST,VAL) ; [Procedure] Main RPC Hit Point
"RTN","MDRPCOV",64,0)
 ; RPC: [MD TMDPARAMETER]
"RTN","MDRPCOV",65,0)
 ;
"RTN","MDRPCOV",66,0)
 ; Requires that the parameter name in PAR
"RTN","MDRPCOV",67,0)
 ; be in the Clinical Procedures namespace.
"RTN","MDRPCOV",68,0)
 ;
"RTN","MDRPCOV",69,0)
 ; Input parameters
"RTN","MDRPCOV",70,0)
 ;  1. RESULTS [Literal/Required] No description
"RTN","MDRPCOV",71,0)
 ;  2. OPTION [Literal/Required] No description
"RTN","MDRPCOV",72,0)
 ;  3. ENT [Literal/Required] No description
"RTN","MDRPCOV",73,0)
 ;  4. PAR [Literal/Required] No description
"RTN","MDRPCOV",74,0)
 ;  5. INST [Literal/Required] No description
"RTN","MDRPCOV",75,0)
 ;  6. VAL [Literal/Required] No description
"RTN","MDRPCOV",76,0)
 ;
"RTN","MDRPCOV",77,0)
 N ERR,TMP,RET,TXT,IEN,IENS,ROOT,MDD
"RTN","MDRPCOV",78,0)
 S INST=$G(INST,1)
"RTN","MDRPCOV",79,0)
 S PAR=$G(PAR,"MD")
"RTN","MDRPCOV",80,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","MDRPCOV",81,0)
 I PAR'?1"MD".E S ^TMP($J,0)="-1^Non Clinical Procedures Parameter" Q
"RTN","MDRPCOV",82,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","MDRPCOV",83,0)
 I +$G(ERR) K ^TMP($J,0) S ^(0)="-1^Error: "_(+ERR)_" "_$P(ERR,U,2)
"RTN","MDRPCOV",84,0)
 D:'$D(^TMP($J)) BADRPC^MDRPCU("MD TMDPARAMETER",$T(+0),OPTION)
"RTN","MDRPCOV",85,0)
 D CLEAN^DILF
"RTN","MDRPCOV",86,0)
 Q
"RTN","MDRPCOV",87,0)
 ;
"RTN","MDRPCOV",88,0)
SETLST ; [Procedure] Build list of parameters
"RTN","MDRPCOV",89,0)
 N MDINS ; Instance Counter
"RTN","MDRPCOV",90,0)
 D DELLST(ENT,PAR)
"RTN","MDRPCOV",91,0)
 S MDINS=""
"RTN","MDRPCOV",92,0)
 F  S MDINS=$O(VAL(MDINS)) Q:MDINS=""  D
"RTN","MDRPCOV",93,0)
 .D EN^XPAR(ENT,PAR,MDINS,VAL(MDINS),.ERR)
"RTN","MDRPCOV",94,0)
 S:'$G(ERR) @RESULTS@(0)="1^List "_PAR_" rebuilt"
"RTN","MDRPCOV",95,0)
 Q
"RTN","MDRPCOV",96,0)
 ;
"RTN","MDRPCOV",97,0)
SETPAR ; [Procedure] Set single value into a parameter
"RTN","MDRPCOV",98,0)
 D EN^XPAR(ENT,PAR,INST,VAL,.ERR)
"RTN","MDRPCOV",99,0)
 S:'$G(ERR) @RESULTS@(0)="1^Parameter updated"
"RTN","MDRPCOV",100,0)
 Q
"RTN","MDRPCOV",101,0)
 ;
"RTN","MDRPCOV",102,0)
SETWP ; [Procedure] Set WP text into a parameter
"RTN","MDRPCOV",103,0)
 S TXT=INST,TMP=""
"RTN","MDRPCOV",104,0)
 F  S TMP=$O(VAL(TMP)) Q:TMP=""  D
"RTN","MDRPCOV",105,0)
 .S TXT($O(TXT(""),-1)+1,0)=VAL(TMP)
"RTN","MDRPCOV",106,0)
 D EN^XPAR(ENT,PAR,INST,.TXT,.ERR)
"RTN","MDRPCOV",107,0)
 S:'$G(ERR) @RESULTS@(0)="1^WP Text Saved"
"RTN","MDRPCOV",108,0)
 Q
"RTN","MDRPCOV",109,0)
 ;
"RTN","MDRPCOV",110,0)
UNLOCK ; [Procedure] Relinquish exclusive access to CP Parameters
"RTN","MDRPCOV",111,0)
 L -(^MDD("CP PARAMETERS")) S @RESULTS@(0)=$T
"RTN","MDRPCOV",112,0)
 Q
"RTN","MDRPCOV",113,0)
 ;
"RTN","MDRPCOV",114,0)
PARS ; [Data Module] All Parameters
"RTN","MDRPCOV",115,0)
 ;;1^MD ALLOW EXTERNAL ATTACHMENTS^Allow non-instrument attachments^yes/no^No
"RTN","MDRPCOV",116,0)
 ;;2^MD CRC BYPASS^Bypass CRC Checking^yes/no^No
"RTN","MDRPCOV",117,0)
 ;;3^MD CRC VALUES^Clinical Procedures CRC Values^free text^Yes
"RTN","MDRPCOV",118,0)
 ;;4^MD DAYS FOR INSTRUMENT DATA^Temporary instrument data life (Days)^numeric^No
"RTN","MDRPCOV",119,0)
 ;;5^MD FILE EXTENSIONS^Imaging File Types^free text^Yes
"RTN","MDRPCOV",120,0)
 ;;6^MD HFS SCRATCH^VistA Scratch HFS Directory^free text^No
"RTN","MDRPCOV",121,0)
 ;;7^MD IMAGING XFER^Imaging Network Share^free text^No
"RTN","MDRPCOV",122,0)
 ;;8^MD OFFLINE MESSAGE^Offline message^word processing^No
"RTN","MDRPCOV",123,0)
 ;;9^MD ONLINE^Clinical Procedure Online/Offline^yes/no^No
"RTN","MDRPCOV",124,0)
 ;;10^MD VERSION CHK^Version Compatibility^yes/no^Yes
"RTN","MDRPCOV",125,0)
 ;;11^MD WEBLINK^Clinical Procedures Home Page^free text^No
"RTN","MDRPCOV",126,0)
 ;;**EOD**
"RTN","MDRPCU")
0^32^B35769615
"RTN","MDRPCU",1,0)
MDRPCU ; HOIFO/DP - Object RPC Utilities ; [05-23-2003 10:16]
"RTN","MDRPCU",2,0)
 ;;1.0;CLINICAL PROCEDURES;;Apr 01, 2004
"RTN","MDRPCU",3,0)
 ; Integration Agreements:
"RTN","MDRPCU",4,0)
 ; IA# 10039 [Supported] Ward Location File #42
"RTN","MDRPCU",5,0)
 ; IA# 10035 [Supported] Access to DPT global
"RTN","MDRPCU",6,0)
 ; IA# 10040 [Supported] Access to SC global
"RTN","MDRPCU",7,0)
 ; IA# 1246 [Supported] Call to DGPMDDCF
"RTN","MDRPCU",8,0)
 ; IA# 3266 [Subscription] $$DOB call to DPTLK1
"RTN","MDRPCU",9,0)
 ; IA# 3267 [Subscription] Call to $$SSN of DPTLK1
"RTN","MDRPCU",10,0)
 ; IA# 2692 [Subscription] Calls to ORQPTQ1
"RTN","MDRPCU",11,0)
 ; IA# 3869 [Subscription] SDAMA202 calls
"RTN","MDRPCU",12,0)
 ;
"RTN","MDRPCU",13,0)
BADRPC(RPC,RTN,OPTION) ; [Procedure] When and RPC gets lost
"RTN","MDRPCU",14,0)
 ; Input parameters
"RTN","MDRPCU",15,0)
 ;  1. RPC [Literal/Required] No description
"RTN","MDRPCU",16,0)
 ;  2. RTN [Literal/Required] No description
"RTN","MDRPCU",17,0)
 ;  3. OPTION [Literal/Required] No description
"RTN","MDRPCU",18,0)
 ;
"RTN","MDRPCU",19,0)
 S @RESULTS@(0)="-1^Error calling RPC: "_RPC_" at "_OPTION_U_RTN
"RTN","MDRPCU",20,0)
 Q
"RTN","MDRPCU",21,0)
 ;
"RTN","MDRPCU",22,0)
DUPS(MDD,MDIEN,MDX) ; [Function] Return boolean if dups exist
"RTN","MDRPCU",23,0)
 N MDGBL
"RTN","MDRPCU",24,0)
 S MDGBL=$$GET1^DID(+MDD,"","","GLOBAL NAME")
"RTN","MDRPCU",25,0)
 S X=MDX X ^%ZOSF("UPPERCASE") S MDX=Y
"RTN","MDRPCU",26,0)
 S Y=$O(@(MDGBL_"""UC"",MDX,"""")")) Q:Y&(Y'=MDIEN) 1
"RTN","MDRPCU",27,0)
 S Y=$O(@(MDGBL_"""UC"",MDX,"""")"),-1) Q:Y&(Y'=MDIEN) 1
"RTN","MDRPCU",28,0)
 Q 0
"RTN","MDRPCU",29,0)
 ;
"RTN","MDRPCU",30,0)
LOCK(RESULTS,DD,IENS) ; [Procedure] Lock a record
"RTN","MDRPCU",31,0)
 L @("+"_$$ROOT^DILFD(DD,IENS)_(+IENS)_")"_":2")
"RTN","MDRPCU",32,0)
 I $T S @RESULTS@(0)="1^Lock acquired"
"RTN","MDRPCU",33,0)
 E  S @RESULTS@(0)="-1^Lock *NOT* acquired"
"RTN","MDRPCU",34,0)
 Q
"RTN","MDRPCU",35,0)
 ;
"RTN","MDRPCU",36,0)
UNLOCK(RESULTS,DD,IENS) ; [Procedure] Unlock a record
"RTN","MDRPCU",37,0)
 L @("-"_$$ROOT^DILFD(DD,IENS)_(+IENS)_")")
"RTN","MDRPCU",38,0)
 S @RESULTS@(0)="1^Lock released"
"RTN","MDRPCU",39,0)
 Q
"RTN","MDRPCU",40,0)
 ;
"RTN","MDRPCU",41,0)
CLINICPT ; [Procedure] Return patients by clinic/appt dt
"RTN","MDRPCU",42,0)
 N MD,MDRET
"RTN","MDRPCU",43,0)
 S MDDT=P2\1,MDEND=MDDT+.24
"RTN","MDRPCU",44,0)
 D GETPLIST^SDAMA202(P1,"1;4;","R",MDDT,MDEND,.MDRET,"")
"RTN","MDRPCU",45,0)
 I MDRET<0 S @RESULTS@(0)="0^No patients for this clinic/appt date." Q
"RTN","MDRPCU",46,0)
 F MD=0:0 S MD=$O(^TMP($J,"SDAMA202","GETPLIST",MD)) Q:'MD  D
"RTN","MDRPCU",47,0)
 .; Naked ref from above
"RTN","MDRPCU",48,0)
 .S Y=+$G(^(MD,4)) Q:'Y  S @RESULTS@(Y)=$$GUIPT(Y)
"RTN","MDRPCU",49,0)
 I '$D(@RESULTS) S @RESULTS@(0)="0^No patients for this clinic/appointment date."
"RTN","MDRPCU",50,0)
 E  S @RESULTS@(0)=$D(@RESULTS)
"RTN","MDRPCU",51,0)
 Q
"RTN","MDRPCU",52,0)
 ;
"RTN","MDRPCU",53,0)
CLINICS ; [Procedure] 
"RTN","MDRPCU",54,0)
 F X=0:0 S X=$O(^SC(X)) Q:'X  D:$P(^(X,0),U,3)="C"
"RTN","MDRPCU",55,0)
 .Q:+$G(^SC(X,"OOS"))
"RTN","MDRPCU",56,0)
 .S Y=$G(^SC(X,"I"))
"RTN","MDRPCU",57,0)
 .I Y Q:DT>+Y&($P(Y,U,2)=""!(DT<$P(Y,U,2)))
"RTN","MDRPCU",58,0)
 .S @RESULTS@($O(@RESULTS@(""),-1)+1)="44;"_X_U_$P(^SC(X,0),U)
"RTN","MDRPCU",59,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCU",60,0)
 Q
"RTN","MDRPCU",61,0)
 ;
"RTN","MDRPCU",62,0)
COPY ; [Procedure] Make a copy of an item (Top level data only)
"RTN","MDRPCU",63,0)
 K ^TMP("MDCOPY",$J)
"RTN","MDRPCU",64,0)
 D GETS^DIQ(P1,P2_",","*","NI",$NA(^TMP("MDCOPY",$J)))
"RTN","MDRPCU",65,0)
 S MDFDA(P1,"+1,",.01)=$E("Copy of "_$$GET1^DIQ(P1,P2,.01),1,30)
"RTN","MDRPCU",66,0)
 F X=.01:0 S X=$O(^TMP("MDCOPY",$J,P1,P2_",",X)) Q:'X  D
"RTN","MDRPCU",67,0)
 .S MDFDA(P1,"+1,",X)=$G(^TMP("MDCOPY",$J,P1,P2_",",X,"I"))
"RTN","MDRPCU",68,0)
 K ^TMP("MDCOPY",$J)
"RTN","MDRPCU",69,0)
 D UPDATE^DIE("","MDFDA","MDIEN")
"RTN","MDRPCU",70,0)
 I $G(MDIEN(1))<1 D ERROR(RESULTS) Q
"RTN","MDRPCU",71,0)
 S @RESULTS@(0)=P1_";"_MDIEN(1)_"^"_$$GET1^DIQ(P1,MDIEN(1)_",",.01)
"RTN","MDRPCU",72,0)
 Q
"RTN","MDRPCU",73,0)
 ;
"RTN","MDRPCU",74,0)
DELITEM ; [Procedure] Determines if a file entry can be deleted and deletes it
"RTN","MDRPCU",75,0)
 I P1="702.01" D  ; Procedure File
"RTN","MDRPCU",76,0)
 .I $D(^MDD(702,"ACP",P2)) S @RESULTS@(1)="CP TRANSACTION"
"RTN","MDRPCU",77,0)
 I P1="702.09" D  ; Instrument File
"RTN","MDRPCU",78,0)
 .I $D(^MDS(702.01,"AINST",P2)) S @RESULTS@(1)="CP DEFINITION"
"RTN","MDRPCU",79,0)
 .I $D(^MDS(702,"AINST",P2)) S @RESULTS@(2)="CP TRANSACTION"
"RTN","MDRPCU",80,0)
 .I $D(^MDS(703.1,"AINST",P2)) S @RESULTS@(3)="CP RESULTS"
"RTN","MDRPCU",81,0)
 I $O(@RESULTS@("")) S @RESULTS@(0)="-1^Unable to delete."
"RTN","MDRPCU",82,0)
 E  S @RESULTS@(0)="1^OK"
"RTN","MDRPCU",83,0)
 Q
"RTN","MDRPCU",84,0)
 ;
"RTN","MDRPCU",85,0)
ERROR(TARGET,SOURCE) ; [Procedure] 
"RTN","MDRPCU",86,0)
 ; Input parameters
"RTN","MDRPCU",87,0)
 ;  1. TARGET [Literal/Required] No description
"RTN","MDRPCU",88,0)
 ;  2. SOURCE [Literal/Required] No description
"RTN","MDRPCU",89,0)
 ;
"RTN","MDRPCU",90,0)
 N X,Y
"RTN","MDRPCU",91,0)
 I '$D(SOURCE) M SOURCE("DIERR")=^TMP("DIERR",$J)
"RTN","MDRPCU",92,0)
 I '$D(SOURCE) S @TARGET@(0)="-1^No error message available" Q
"RTN","MDRPCU",93,0)
 S @TARGET@(0)="-1^Error Encountered"
"RTN","MDRPCU",94,0)
 S @TARGET@(1)="The following Error(s) occurred on the server."
"RTN","MDRPCU",95,0)
 S @TARGET@(2)=" "
"RTN","MDRPCU",96,0)
 F X=0:0 S X=$O(SOURCE("DIERR",X)) Q:'X  D
"RTN","MDRPCU",97,0)
 .S Y=$O(@TARGET@(X),-1)+1
"RTN","MDRPCU",98,0)
 .S @TARGET@(Y)="Error #: "_SOURCE("DIERR",X)_" "_$G(SOURCE("DIERR",X,"TEXT",1),"***")
"RTN","MDRPCU",99,0)
 .D:$D(SOURCE("DIERR",X,"PARAM"))
"RTN","MDRPCU",100,0)
 ..S @TARGET@(Y+1)=" ",@TARGET@(Y+2)="Parameters:"
"RTN","MDRPCU",101,0)
 ..S Z=0 F  S Z=$O(SOURCE("DIERR",X,"PARAM",Z)) Q:Z=""  D
"RTN","MDRPCU",102,0)
 ...S @TARGET@($O(@TARGET@(""),-1)+1)="Par: "_Z_" = "_SOURCE("DIERR",X,"PARAM",Z)
"RTN","MDRPCU",103,0)
 Q
"RTN","MDRPCU",104,0)
 ;
"RTN","MDRPCU",105,0)
GETRSLT ; [Procedure] Get result report entries
"RTN","MDRPCU",106,0)
 ; P1=PATIENT, P2=CPDefinition
"RTN","MDRPCU",107,0)
 ; Load valid instruments into MDINST()
"RTN","MDRPCU",108,0)
 F X=0:0 S X=$O(^MDS(702.01,+$G(P2),.1,"B",X)) Q:'X  S MDINST(X)=""
"RTN","MDRPCU",109,0)
 ; Loop on the DFN index in 703.1
"RTN","MDRPCU",110,0)
 F X=0:0 S X=$O(^MDD(703.1,"ADFN",P1,X)) Q:'X  D
"RTN","MDRPCU",111,0)
 .; Make sure it isn't pending CPGateway action
"RTN","MDRPCU",112,0)
 .Q:$P($G(^MDD(703.1,X,0)),U,9)="P"
"RTN","MDRPCU",113,0)
 .; Make sure it is for a valid instrument
"RTN","MDRPCU",114,0)
 .Q:'$D(MDINST(+$P($G(^MDD(703.1,X,0)),U,4)))
"RTN","MDRPCU",115,0)
 .F Y=0:0 S Y=$O(^MDD(703.1,X,.1,Y)) Q:'Y  D
"RTN","MDRPCU",116,0)
 ..S Z="703.11;"_Y_","_X_",^"_$P(^MDD(703.1,X,0),U,1,4)_"^^^^"
"RTN","MDRPCU",117,0)
 ..S $P(Z,U,6)=$P(^MDD(703.1,X,.1,Y,0),U,2)
"RTN","MDRPCU",118,0)
 ..S @RESULTS@(+$O(@RESULTS@(""),-1)+1)=Z
"RTN","MDRPCU",119,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCU",120,0)
 Q
"RTN","MDRPCU",121,0)
 ;
"RTN","MDRPCU",122,0)
GUIPT(X) ; [Procedure] 
"RTN","MDRPCU",123,0)
 ; Input parameters
"RTN","MDRPCU",124,0)
 ;  1. X [Literal/Required] No description
"RTN","MDRPCU",125,0)
 ;
"RTN","MDRPCU",126,0)
 S Y="2;"_X_U_$P(^DPT(X,0),U,1,3)
"RTN","MDRPCU",127,0)
 S $P(Y,U,5)=$P(^DPT(X,0),U,9)
"RTN","MDRPCU",128,0)
 S $P(Y,U,10)=$$DOB^DPTLK1(X)
"RTN","MDRPCU",129,0)
 S $P(Y,U,11)=$$SSN^DPTLK1(X)
"RTN","MDRPCU",130,0)
 Q Y
"RTN","MDRPCU",131,0)
 ;
"RTN","MDRPCU",132,0)
RPC(RESULTS,OPTION,P1,P2,P3,P4,P5,P6) ; [Procedure] Main RPC call
"RTN","MDRPCU",133,0)
 ; RPC: [MD UTILITIES]
"RTN","MDRPCU",134,0)
 ;
"RTN","MDRPCU",135,0)
 ; Input parameters
"RTN","MDRPCU",136,0)
 ;  1. RESULTS [Literal/Required] No description
"RTN","MDRPCU",137,0)
 ;  2. OPTION [Literal/Required] No description
"RTN","MDRPCU",138,0)
 ;  3. P1 [Literal/Required] No description
"RTN","MDRPCU",139,0)
 ;  4. P2 [Literal/Required] No description
"RTN","MDRPCU",140,0)
 ;  5. P3 [Literal/Required] No description
"RTN","MDRPCU",141,0)
 ;  6. P4 [Literal/Required] No description
"RTN","MDRPCU",142,0)
 ;  7. P5 [Literal/Required] No description
"RTN","MDRPCU",143,0)
 ;  8. P6 [Literal/Required] No description
"RTN","MDRPCU",144,0)
 ;
"RTN","MDRPCU",145,0)
 ; Variables:
"RTN","MDRPCU",146,0)
 ;  MDDT: [Private] Scratch
"RTN","MDRPCU",147,0)
 ;  MDEND: [Private] Scratch
"RTN","MDRPCU",148,0)
 ;  MDFDA: [Private] Fileman FDA variable
"RTN","MDRPCU",149,0)
 ;  MDGBL: [Private] Scratch
"RTN","MDRPCU",150,0)
 ;  MDIEN: [Private] Return array from UPDATE~DIE
"RTN","MDRPCU",151,0)
 ;  MDPT: [Private] Scratch
"RTN","MDRPCU",152,0)
 ;  Z: [Private] Scratch
"RTN","MDRPCU",153,0)
 ;
"RTN","MDRPCU",154,0)
 ; New private variables
"RTN","MDRPCU",155,0)
 NEW MDDT,MDEND,MDFDA,MDGBL,MDIEN,MDPT,Z
"RTN","MDRPCU",156,0)
 N MDRET,MDFDA,MDIEN,MDSCRN
"RTN","MDRPCU",157,0)
 D CLEAN^DILF
"RTN","MDRPCU",158,0)
 S RESULTS=$NA(^TMP("MDRPCU",$J)) K @RESULTS
"RTN","MDRPCU",159,0)
 I $T(@OPTION)="" D BADRPC("MD UTILITIES",OPTION,$T(+0)) Q
"RTN","MDRPCU",160,0)
 D @OPTION S:'$D(@RESULTS) @RESULTS@(0)="-1^No return"
"RTN","MDRPCU",161,0)
 D CLEAN^DILF
"RTN","MDRPCU",162,0)
 Q
"RTN","MDRPCU",163,0)
 ;
"RTN","MDRPCU",164,0)
TEAMPTS ; [Procedure] Return patients on a team
"RTN","MDRPCU",165,0)
 D TEAMPTS^ORQPTQ1(.MDRET,P1)
"RTN","MDRPCU",166,0)
 I '+$G(MDRET(1)) D  Q
"RTN","MDRPCU",167,0)
 .S @RESULTS@(0)="0^No patients assigned to this team."
"RTN","MDRPCU",168,0)
 F X=0:0 S X=$O(MDRET(X)) Q:'X  S @RESULTS@(X)=$$GUIPT(+MDRET(X))
"RTN","MDRPCU",169,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCU",170,0)
 Q
"RTN","MDRPCU",171,0)
 ;
"RTN","MDRPCU",172,0)
TEAMS ; [Procedure] Return list of teams
"RTN","MDRPCU",173,0)
 D TEAMS^ORQPTQ1(.MDRET)
"RTN","MDRPCU",174,0)
 F X=0:0 S X=$O(MDRET(X)) Q:'X  S @RESULTS@(X)="120.51;"_MDRET(X)
"RTN","MDRPCU",175,0)
 S @RESULTS@(0)=+$O(@RESULTS@(X))
"RTN","MDRPCU",176,0)
 Q
"RTN","MDRPCU",177,0)
 ;
"RTN","MDRPCU",178,0)
UNIQUE ; [Procedure] Is value P2 unique in file P1
"RTN","MDRPCU",179,0)
 S MDGBL=$$GET1^DID(+P1,"","","GLOBAL NAME")
"RTN","MDRPCU",180,0)
 I MDGBL="" S @RESULTS@(0)="-1^Not a valid DDNumber"
"RTN","MDRPCU",181,0)
 E  S @RESULTS@(0)=($D(@(MDGBL_"P2,P3)"))=0)
"RTN","MDRPCU",182,0)
 Q
"RTN","MDRPCU",183,0)
 ;
"RTN","MDRPCU",184,0)
WARDPTS ; [Procedure] Return pts for a ward
"RTN","MDRPCU",185,0)
 S P1=$P($G(^DIC(42,P1,0)),U)
"RTN","MDRPCU",186,0)
 I '$D(^DPT("CN",P1)) D  Q
"RTN","MDRPCU",187,0)
 .S @RESULTS@(0)="0^No Patients on ward '"_P1_"'."
"RTN","MDRPCU",188,0)
 F X=0:0 S X=$O(^DPT("CN",P1,X)) Q:'X  D
"RTN","MDRPCU",189,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCU",190,0)
 .S @RESULTS@(Y)=$$GUIPT(X)
"RTN","MDRPCU",191,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCU",192,0)
 Q
"RTN","MDRPCU",193,0)
 ;
"RTN","MDRPCU",194,0)
WARDS ; [Procedure] Return Active Set of Wards
"RTN","MDRPCU",195,0)
 N D0,X,Y
"RTN","MDRPCU",196,0)
 F D0=0:0 S D0=$O(^DIC(42,D0)) Q:'D0  D WIN^DGPMDDCF D:'X
"RTN","MDRPCU",197,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCU",198,0)
 .S @RESULTS@(Y)="42;"_D0_U_$P(^DIC(42,D0,0),U)
"RTN","MDRPCU",199,0)
 Q
"RTN","MDRPCU",200,0)
 ;
"SEC","^DIC",702,702,0,"AUDIT")
@
"SEC","^DIC",702,702,0,"DD")
@
"SEC","^DIC",702,702,0,"DEL")
@
"SEC","^DIC",702,702,0,"LAYGO")

"SEC","^DIC",702,702,0,"RD")

"SEC","^DIC",702,702,0,"WR")

"SEC","^DIC",702.01,702.01,0,"AUDIT")

"SEC","^DIC",702.01,702.01,0,"DD")
@
"SEC","^DIC",702.01,702.01,0,"DEL")
#
"SEC","^DIC",702.01,702.01,0,"LAYGO")
#
"SEC","^DIC",702.01,702.01,0,"RD")

"SEC","^DIC",702.01,702.01,0,"WR")
#
"SEC","^DIC",702.09,702.09,0,"AUDIT")
@
"SEC","^DIC",702.09,702.09,0,"DD")
@
"SEC","^DIC",702.09,702.09,0,"DEL")
#
"SEC","^DIC",702.09,702.09,0,"LAYGO")
#
"SEC","^DIC",702.09,702.09,0,"RD")

"SEC","^DIC",702.09,702.09,0,"WR")
#
"SEC","^DIC",703.1,703.1,0,"AUDIT")
@
"SEC","^DIC",703.1,703.1,0,"DD")
@
"SEC","^DIC",703.1,703.1,0,"DEL")
@
"SEC","^DIC",703.1,703.1,0,"LAYGO")
@
"SEC","^DIC",703.1,703.1,0,"RD")

"SEC","^DIC",703.1,703.1,0,"WR")
@
"VER")
8.0^22
"^DD",702,702,0)
FIELD^^.12^16
"^DD",702,702,0,"DDA")
N
"^DD",702,702,0,"DT")
3030513
"^DD",702,702,0,"ID",.02)
W "   ",$$FMTE^DILIBF($P(^(0),U,2),5)
"^DD",702,702,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^MDS(702.01,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(702.01,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",702,702,0,"IX","ACON",702,.05)

"^DD",702,702,0,"IX","ACP",702,.04)

"^DD",702,702,0,"IX","AINST",702,.11)

"^DD",702,702,0,"IX","AION",702,.12)

"^DD",702,702,0,"IX","ATIU",702,.06)

"^DD",702,702,0,"IX","B",702,.01)

"^DD",702,702,0,"NM","CP TRANSACTION")

"^DD",702,702,0,"VRPK")
MD
"^DD",702,702,.01,0)
PATIENT^RP2'^DPT(^0;1^Q
"^DD",702,702,.01,.1)
Patient
"^DD",702,702,.01,1,0)
^.1^^-1
"^DD",702,702,.01,1,1,0)
702^B
"^DD",702,702,.01,1,1,1)
S ^MDD(702,"B",$E(X,1,30),DA)=""
"^DD",702,702,.01,1,1,2)
K ^MDD(702,"B",$E(X,1,30),DA)
"^DD",702,702,.01,1,1,"%D",0)
^^1^1^3011019^
"^DD",702,702,.01,1,1,"%D",1,0)
Contains the standard Fileman "B" index of the file.
"^DD",702,702,.01,3)
Enter a patient name.
"^DD",702,702,.01,21,0)
^.001^2^2^3021112^^^
"^DD",702,702,.01,21,1,0)
This field contains a pointer to the Patient file (#2) for this
"^DD",702,702,.01,21,2,0)
transaction.
"^DD",702,702,.01,"DT")
3020703
"^DD",702,702,.011,0)
SSN (C)^CJ9^^ ; ^X ^DD(702,.011,9.2) S X=$P(Y(702,.011,101),U,9) S D0=Y(702,.011,80)
"^DD",702,702,.011,.1)
SSN
"^DD",702,702,.011,9)
^
"^DD",702,702,.011,9.01)
2^.09;702^.01
"^DD",702,702,.011,9.1)
#.01:#.09
"^DD",702,702,.011,9.2)
S Y(702,.011,80)=$S($D(D0):D0,1:""),Y(702,.011,1)=$S($D(^MDD(702,D0,0)):^(0),1:""),D0=$P(Y(702,.011,1),U,1) S:'$D(^DPT(+D0,0)) D0=-1 S Y(702,.011,101)=$S($D(^DPT(D0,0)):^(0),1:"")
"^DD",702,702,.011,21,0)
^.001^2^2^3021112^^^^
"^DD",702,702,.011,21,1,0)
This field contains the computed value of the patient's SSN from the
"^DD",702,702,.011,21,2,0)
Patient file (#2).
"^DD",702,702,.011,"DT")
3000725
"^DD",702,702,.012,0)
DOB (C)^CJ20^^ ; ^X ^DD(702,.012,9.2) S Y(702,.012,102)=X,Y=$P(Y(702,.012,101),U,3) X:$D(^DD(2,.03,2)) ^(2) S X=Y S D0=Y(702,.012,80)
"^DD",702,702,.012,.1)
Date of birth
"^DD",702,702,.012,9)
^
"^DD",702,702,.012,9.01)
2^.03;702^.01
"^DD",702,702,.012,9.1)
#.01:#.03
"^DD",702,702,.012,9.2)
S Y(702,.012,80)=$G(D0),Y(702,.012,1)=$S($D(^MDD(702,D0,0)):^(0),1:""),D0=$P(Y(702,.012,1),U,1) S:'D0!'$D(^DPT(+D0,0)) D0=-1 S Y(702,.012,101)=$S($D(^DPT(D0,0)):^(0),1:"")
"^DD",702,702,.012,21,0)
1^.001^2^2^3021112^^^^
"^DD",702,702,.012,21,1,0)
This field contains the computed value of the patient's DOB from the
"^DD",702,702,.012,21,2,0)
Patient file (#2).
"^DD",702,702,.012,"DT")
3000725
"^DD",702,702,.02,0)
CREATED DATE/TIME^RDX^^0;2^S %DT="ESTXR",%DT(0)="-NOW" D ^%DT K %DT(0) S X=Y K:Y<1 X
"^DD",702,702,.02,.1)
Date/Time Created
"^DD",702,702,.02,1,0)
^.1^^0
"^DD",702,702,.02,3)
Enter the date/time the procedure was entered.
"^DD",702,702,.02,21,0)
^^1^1^3011019^
"^DD",702,702,.02,21,1,0)
This field contains the date/time the transaction was created.
"^DD",702,702,.02,"DT")
3010226
"^DD",702,702,.03,0)
CREATED BY^RP200'^VA(200,^0;3^Q
"^DD",702,702,.03,.1)
Created By
"^DD",702,702,.03,3)
User who created this transaction.
"^DD",702,702,.03,21,0)
^.001^1^1^3011019^^^
"^DD",702,702,.03,21,1,0)
This field contains the DUZ of the user that created this transaction.
"^DD",702,702,.03,"DT")
3010402
"^DD",702,702,.04,0)
CP DEFINITION^RP702.01'^MDS(702.01,^0;4^Q
"^DD",702,702,.04,.1)
CP Definition
"^DD",702,702,.04,1,0)
^.1
"^DD",702,702,.04,1,1,0)
702^ACP
"^DD",702,702,.04,1,1,1)
S ^MDD(702,"ACP",$E(X,1,30),DA)=""
"^DD",702,702,.04,1,1,2)
K ^MDD(702,"ACP",$E(X,1,30),DA)
"^DD",702,702,.04,1,1,"%D",0)
^.101^3^3^3021114^^^
"^DD",702,702,.04,1,1,"%D",1,0)
This cross reference maintains a list of transactions by CP Definition 
"^DD",702,702,.04,1,1,"%D",2,0)
for quick retrieval. It is also used to prevent deletion of CP Definitions
"^DD",702,702,.04,1,1,"%D",3,0)
that are being pointed to.
"^DD",702,702,.04,1,1,"DT")
3020801
"^DD",702,702,.04,3)
Enter a CP Procedure Definition.
"^DD",702,702,.04,21,0)
^.001^2^2^3021112^^^^
"^DD",702,702,.04,21,1,0)
This field contains a pointer to the CP DEFINITION file (#702.01)
"^DD",702,702,.04,21,2,0)
indicating the procedure of the transaction.
"^DD",702,702,.04,"DT")
3020801
"^DD",702,702,.05,0)
CONSULT NUMBER^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",702,702,.05,.1)
Consult Number
"^DD",702,702,.05,1,0)
^.1
"^DD",702,702,.05,1,1,0)
702^ACON
"^DD",702,702,.05,1,1,1)
S ^MDD(702,"ACON",$E(X,1,30),DA)=""
"^DD",702,702,.05,1,1,2)
K ^MDD(702,"ACON",$E(X,1,30),DA)
"^DD",702,702,.05,1,1,"%D",0)
^^1^1^3011019^
"^DD",702,702,.05,1,1,"%D",1,0)
This is the cross reference of the Consult.
"^DD",702,702,.05,1,1,"DT")
3010226
"^DD",702,702,.05,3)
Answer must be 1-30 characters in length.
"^DD",702,702,.05,21,0)
^.001^3^3^3021112^^^^
"^DD",702,702,.05,21,1,0)
This field contains an Consult number from Request/Consultation file (#123).
"^DD",702,702,.05,21,2,0)
This field represents the Consult order that is matched up to this transaction.
"^DD",702,702,.05,21,3,0)
(Reference IA #3162)
"^DD",702,702,.05,"DT")
3020719
"^DD",702,702,.06,0)
TIU NOTE^P8925'^TIU(8925,^0;6^Q
"^DD",702,702,.06,.1)
TIU Note
"^DD",702,702,.06,1,0)
^.1
"^DD",702,702,.06,1,1,0)
702^ATIU
"^DD",702,702,.06,1,1,1)
S ^MDD(702,"ATIU",$E(X,1,30),DA)=""
"^DD",702,702,.06,1,1,2)
K ^MDD(702,"ATIU",$E(X,1,30),DA)
"^DD",702,702,.06,1,1,3)
Cross Reference of the TIU Note
"^DD",702,702,.06,1,1,"%D",0)
^^1^1^3010226^
"^DD",702,702,.06,1,1,"%D",1,0)
This is the cross reference of the TIU Note.
"^DD",702,702,.06,1,1,"DT")
3010226
"^DD",702,702,.06,3)
TIU note for interpretation of this transaction
"^DD",702,702,.06,21,0)
^.001^3^3^3011019^^^
"^DD",702,702,.06,21,1,0)
This field contains a pointer to the TIU DOCUMENT file (#8925)
"^DD",702,702,.06,21,2,0)
representing the note that contains the interpretation of this transaction
"^DD",702,702,.06,21,3,0)
as well as the links to the associated images.  (Reference IA #3376)
"^DD",702,702,.06,"DT")
3010226
"^DD",702,702,.07,0)
VSTRING^F^^0;7^K:$L(X)>50!($L(X)<1) X
"^DD",702,702,.07,3)
Answer must be 1-50 characters in length.
"^DD",702,702,.07,21,0)
^.001^3^3^3011019^^^
"^DD",702,702,.07,21,1,0)
This field contains the vstring.  The vstring is in the following format:
"^DD",702,702,.07,21,2,0)
Visit type_";"_Visit Date/Time_";"_Hospital Location (internal entry number
"^DD",702,702,.07,21,3,0)
of the visit).
"^DD",702,702,.07,"DT")
3010413
"^DD",702,702,.08,0)
TRANSACTION MESSAGE^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",702,702,.08,.1)
Message
"^DD",702,702,.08,3)
Answer must be 1-80 characters in length.
"^DD",702,702,.08,21,0)
^.001^2^2^3021112^^^^
"^DD",702,702,.08,21,1,0)
This field contains a short 80 characters text message of the
"^DD",702,702,.08,21,2,0)
transaction status update.
"^DD",702,702,.08,"DT")
3010226
"^DD",702,702,.09,0)
TRANSACTION STATUS^S^0:New;1:Submitted;2:Error;3:Complete;4:Ready to Complete;5:Pending Instrument Data;^0;9^Q
"^DD",702,702,.09,.1)
Status
"^DD",702,702,.09,3)
Status of this transaction.
"^DD",702,702,.09,21,0)
^.001^45^45^3021112^^^
"^DD",702,702,.09,21,1,0)
This field contains the status of this transaction. Available statuses 
"^DD",702,702,.09,21,2,0)
are listed below with a description of each.
"^DD",702,702,.09,21,3,0)
 
"^DD",702,702,.09,21,4,0)
0: New                                                                        
"^DD",702,702,.09,21,5,0)
This transaction has been created by an external application and needs to 
"^DD",702,702,.09,21,6,0)
be checked-in with the CPUser application and submitted to an instrument.
"^DD",702,702,.09,21,7,0)
An example of this status would be a consent form scanned in via the
"^DD",702,702,.09,21,8,0)
VistA Imaging Capture Workstation that creates a CP Study record 
"^DD",702,702,.09,21,9,0)
stub with a TIU document but allows further input with the CPUser 
"^DD",702,702,.09,21,10,0)
application.
"^DD",702,702,.09,21,11,0)
 
"^DD",702,702,.09,21,12,0)
1: Submitted                                                      
"^DD",702,702,.09,21,13,0)
This transaction has been submitted to the VistA Imaging Background 
"^DD",702,702,.09,21,14,0)
Processor and is awaiting the copy process to place the attachments for 
"^DD",702,702,.09,21,15,0)
the study on the VistA Imaging server.  A study in this status is not 
"^DD",702,702,.09,21,16,0)
accessible until VistA Imaging returns a status of Complete or Error and 
"^DD",702,702,.09,21,17,0)
logs any errors encountered in the submission process.
"^DD",702,702,.09,21,18,0)
 
"^DD",702,702,.09,21,19,0)
2: Error                                                               
"^DD",702,702,.09,21,20,0)
This transaction has encountered an error while being submitted to VistA 
"^DD",702,702,.09,21,21,0)
Imaging.  The error may be due to the TIU note creation or a problem with 
"^DD",702,702,.09,21,22,0)
the attachments sent to the VistA Imaging server. Error messages are 
"^DD",702,702,.09,21,23,0)
logged with the transaction and can be reviewed by users when opening the 
"^DD",702,702,.09,21,24,0)
transaction in an error status.
"^DD",702,702,.09,21,25,0)
 
"^DD",702,702,.09,21,26,0)
3: Complete                                                             
"^DD",702,702,.09,21,27,0)
This transaction has completed the process and has successfully created a 
"^DD",702,702,.09,21,28,0)
TIU note for interpretation on the selected Consult and if any 
"^DD",702,702,.09,21,29,0)
attachments were included they have been successfully copied to the VistA 
"^DD",702,702,.09,21,30,0)
Imaging server.
"^DD",702,702,.09,21,31,0)
 
"^DD",702,702,.09,21,32,0)
4: Ready to Complete                                                    
"^DD",702,702,.09,21,33,0)
This transaction has been checked in and alternatively, if submitted to a 
"^DD",702,702,.09,21,34,0)
bi-directional instrument, has received the data back from the 
"^DD",702,702,.09,21,35,0)
instrument.  Users may open these transactions and view the 
"^DD",702,702,.09,21,36,0)
Consult/Procedure order as well as assign instrument results to the 
"^DD",702,702,.09,21,37,0)
study.  Once these steps have been done this study can be submitted to 
"^DD",702,702,.09,21,38,0)
VistA Imaging.
"^DD",702,702,.09,21,39,0)
 
"^DD",702,702,.09,21,40,0)
5: Pending Instrument Data                                             
"^DD",702,702,.09,21,41,0)
This transaction has been submitted to a bi-directional instrument and is 
"^DD",702,702,.09,21,42,0)
awaiting that instrument to return the results of the procedure.  
"^DD",702,702,.09,21,43,0)
Transactions in this status should not be opened until the instrument has 
"^DD",702,702,.09,21,44,0)
returned the results, assigned them to the study, and marked it as Ready 
"^DD",702,702,.09,21,45,0)
to Complete.
"^DD",702,702,.09,"DT")
3020717
"^DD",702,702,.091,0)
ERROR MESSAGES^702.091^^.091;0
"^DD",702,702,.091,21,0)
^^3^3^3021112^
"^DD",702,702,.091,21,1,0)
This multiple contains the information on the error messages
"^DD",702,702,.091,21,2,0)
that Clinical Procedures receive from API calls with Consults,
"^DD",702,702,.091,21,3,0)
TIU, CPRS, and VistA Imaging.
"^DD",702,702,.1,0)
IMAGE^702.1^^.1;0
"^DD",702,702,.1,.1)
Image Index
"^DD",702,702,.1,21,0)
^.001^2^2^3021112^^^^
"^DD",702,702,.1,21,1,0)
This multiple contains the image attachment information for the
"^DD",702,702,.1,21,2,0)
transaction.
"^DD",702,702,.11,0)
SUBMITTED TO INSTRUMENT^P702.09'^MDS(702.09,^0;11^Q
"^DD",702,702,.11,1,0)
^.1
"^DD",702,702,.11,1,1,0)
702^AINST
"^DD",702,702,.11,1,1,1)
S ^MDD(702,"AINST",$E(X,1,30),DA)=""
"^DD",702,702,.11,1,1,2)
K ^MDD(702,"AINST",$E(X,1,30),DA)
"^DD",702,702,.11,1,1,"%D",0)
^^3^3^3021114^
"^DD",702,702,.11,1,1,"%D",1,0)
This cross reference maintains a list of transactions by instrument
"^DD",702,702,.11,1,1,"%D",2,0)
for quick retrieval. It is also used to prevent deletion of instruments
"^DD",702,702,.11,1,1,"%D",3,0)
that are being pointed to.
"^DD",702,702,.11,1,1,"DT")
3020801
"^DD",702,702,.11,21,0)
^^2^2^3030807^
"^DD",702,702,.11,21,1,0)
Points to the instrument definition that this study was submitted
"^DD",702,702,.11,21,2,0)
to at the time of check-in.
"^DD",702,702,.11,"DT")
3020801
"^DD",702,702,.12,0)
INSTRUMENT ORDER NUMBER^F^^0;12^K:$L(X)>22!($L(X)<1) X
"^DD",702,702,.12,1,0)
^.1
"^DD",702,702,.12,1,1,0)
702^AION
"^DD",702,702,.12,1,1,1)
S ^MDD(702,"AION",$E(X,1,30),DA)=""
"^DD",702,702,.12,1,1,2)
K ^MDD(702,"AION",$E(X,1,30),DA)
"^DD",702,702,.12,1,1,"%D",0)
^^2^2^3030514^
"^DD",702,702,.12,1,1,"%D",1,0)
This cross reference is used by the GETSTDY^MDRPCOT1 extrinsic to
"^DD",702,702,.12,1,1,"%D",2,0)
quickly retrieve the study ien from the instrument order number.
"^DD",702,702,.12,1,1,"DT")
3030513
"^DD",702,702,.12,3)
Answer must be 1-22 characters in length.
"^DD",702,702,.12,21,0)
^^4^4^3030513^
"^DD",702,702,.12,21,1,0)
Contains the unique order number for this study that is sent to the
"^DD",702,702,.12,21,2,0)
instrument if it is bi-directional so the results can be auto-matched
"^DD",702,702,.12,21,3,0)
back to this study by the CP Gateway.
"^DD",702,702,.12,21,4,0)
Field is 1-22 characters and contains only numeric characters.
"^DD",702,702,.12,23,0)
^^3^3^3030513^
"^DD",702,702,.12,23,1,0)
Generated from $$NOW^XLFDT() padded to 14 characters and stripped
"^DD",702,702,.12,23,2,0)
of the decimal point. Guaranteed unique by comparison to the AION
"^DD",702,702,.12,23,3,0)
cross reference in this file.
"^DD",702,702,.12,"DT")
3030513
"^DD",702,702,.991,0)
IMAGE COUNT^CJ8,0^^ ; ^S X=0 X "F Y=0:0 S Y=$O(^MDD(702,D0,.1,Y)) Q:'Y  S X=X+1" S X=$J(X,0,0)
"^DD",702,702,.991,.1)
Count
"^DD",702,702,.991,9)
^
"^DD",702,702,.991,9.01)

"^DD",702,702,.991,9.1)
S X=0 X "F Y=0:0 S Y=$O(^MDD(702,D0,.1,Y)) Q:'Y  S X=X+1"
"^DD",702,702,.991,21,0)
^.001^2^2^3021112^^^^
"^DD",702,702,.991,21,1,0)
Computed field to return the total number of images associated with this
"^DD",702,702,.991,21,2,0)
transaction.
"^DD",702,702.091,0)
ERROR MESSAGES SUB-FIELD^^.09^4
"^DD",702,702.091,0,"DT")
3010619
"^DD",702,702.091,0,"IX","B",702.091,.01)

"^DD",702,702.091,0,"NM","ERROR MESSAGES")

"^DD",702,702.091,0,"UP")
702
"^DD",702,702.091,.01,0)
ERROR MESSAGES^MNJ4,0^^0;1^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",702,702.091,.01,1,0)
^.1
"^DD",702,702.091,.01,1,1,0)
702.091^B
"^DD",702,702.091,.01,1,1,1)
S ^MDD(702,DA(1),.091,"B",$E(X,1,30),DA)=""
"^DD",702,702.091,.01,1,1,2)
K ^MDD(702,DA(1),.091,"B",$E(X,1,30),DA)
"^DD",702,702.091,.01,1,1,"%D",0)
^^1^1^3011019^
"^DD",702,702.091,.01,1,1,"%D",1,0)
Standard Fileman "B" index for the sub-file.
"^DD",702,702.091,.01,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",702,702.091,.01,21,0)
^.001^2^2^3021112^^
"^DD",702,702.091,.01,21,1,0)
This field contains a sequential number assigned to the error message
"^DD",702,702.091,.01,21,2,0)
and it has no meaning.
"^DD",702,702.091,.01,"DT")
3010619
"^DD",702,702.091,.02,0)
DATE RECEIVED^D^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",702,702.091,.02,3)
Enter a Date/Time.
"^DD",702,702.091,.02,21,0)
^^1^1^3011019^
"^DD",702,702.091,.02,21,1,0)
Date and Time this error message was generated.
"^DD",702,702.091,.02,"DT")
3010619
"^DD",702,702.091,.03,0)
RECEIVED FROM^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",702,702.091,.03,3)
Answer must be 1-30 characters in length.
"^DD",702,702.091,.03,21,0)
^.001^2^2^3021112^^^
"^DD",702,702.091,.03,21,1,0)
This field contains the free text name of the application that generated the
"^DD",702,702.091,.03,21,2,0)
error during an API call.
"^DD",702,702.091,.03,"DT")
3010619
"^DD",702,702.091,.09,0)
MESSAGE^F^^0;9^K:$L(X)>150!($L(X)<1) X
"^DD",702,702.091,.09,3)
Answer must be 1-150 characters in length.
"^DD",702,702.091,.09,21,0)
^.001^1^1^3021112^^
"^DD",702,702.091,.09,21,1,0)
This is the text of the error message that was generated.
"^DD",702,702.091,.09,"DT")
3010619
"^DD",702,702.1,0)
IMAGE SUB-FIELD^^.1^5
"^DD",702,702.1,0,"DT")
3010222
"^DD",702,702.1,0,"IX","B",702.1,.01)

"^DD",702,702.1,0,"NM","IMAGE")

"^DD",702,702.1,0,"UP")
702
"^DD",702,702.1,.01,0)
IMAGE^MNJ3,0^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",702,702.1,.01,.1)
Image
"^DD",702,702.1,.01,1,0)
^.1
"^DD",702,702.1,.01,1,1,0)
702.1^B
"^DD",702,702.1,.01,1,1,1)
S ^MDD(702,DA(1),.1,"B",$E(X,1,30),DA)=""
"^DD",702,702.1,.01,1,1,2)
K ^MDD(702,DA(1),.1,"B",$E(X,1,30),DA)
"^DD",702,702.1,.01,1,1,"%D",0)
^^1^1^3011019^
"^DD",702,702.1,.01,1,1,"%D",1,0)
Standard Fileman "B" index for the sub-file.
"^DD",702,702.1,.01,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",702,702.1,.01,21,0)
^.001^2^2^3021112^^^^
"^DD",702,702.1,.01,21,1,0)
This is a sequential number assigned to the attached image for this transaction
"^DD",702,702.1,.01,21,2,0)
and it has no meaning.
"^DD",702,702.1,.01,"DT")
3010216
"^DD",702,702.1,.02,0)
TYPE^S^I:Instrument data;U:User supplied file;^0;2^Q
"^DD",702,702.1,.02,.1)
Type
"^DD",702,702.1,.02,3)
Type of Image
"^DD",702,702.1,.02,21,0)
^.001^4^4^3021112^^^^
"^DD",702,702.1,.02,21,1,0)
Type of image attachment to be processed.
"^DD",702,702.1,.02,21,2,0)
 
"^DD",702,702.1,.02,21,3,0)
'I' FOR Instrument data - image generated from an instrument.
"^DD",702,702.1,.02,21,4,0)
'U' FOR User supplied file - image or file that user supplied.
"^DD",702,702.1,.02,"DT")
3010216
"^DD",702,702.1,.03,0)
RESULT REPORT^P703.1'^MDD(703.1,^0;3^Q
"^DD",702,702.1,.03,.1)
Result Report
"^DD",702,702.1,.03,3)
Enter in a CP RESULT REPORT.
"^DD",702,702.1,.03,21,0)
^.001^2^2^3021112^^^^
"^DD",702,702.1,.03,21,1,0)
This field contains a pointer to the CP RESULT REPORT file (#703.1) where the
"^DD",702,702.1,.03,21,2,0)
attachment from the instrument is located.
"^DD",702,702.1,.03,"DT")
3010222
"^DD",702,702.1,.09,0)
STATUS^S^0:Submitted to server;1:Error in submission;2:Error in filing;3:Copied to server;^0;9^Q
"^DD",702,702.1,.09,.1)
Status
"^DD",702,702.1,.09,3)
Status of attachment
"^DD",702,702.1,.09,21,0)
^.001^13^13^3021112^^^^
"^DD",702,702.1,.09,21,1,0)
This field contains the status of this image attachment.
"^DD",702,702.1,.09,21,2,0)
 
"^DD",702,702.1,.09,21,3,0)
'0' FOR Submitted to server - the image has been submitted to VistA Imaging
"^DD",702,702.1,.09,21,4,0)
                              server.
"^DD",702,702.1,.09,21,5,0)
 
"^DD",702,702.1,.09,21,6,0)
'1' FOR Error in submission - VistA Imaging has generated error(s) during
"^DD",702,702.1,.09,21,7,0)
                              image submission.
"^DD",702,702.1,.09,21,8,0)
 
"^DD",702,702.1,.09,21,9,0)
'2' FOR Error in filing - VistA Imaging has generated error(s) when the
"^DD",702,702.1,.09,21,10,0)
                          image is being copied over to the Imaging server.
"^DD",702,702.1,.09,21,11,0)
 
"^DD",702,702.1,.09,21,12,0)
'3' FOR Copied to server - the image is copied over to the VistA Imaging
"^DD",702,702.1,.09,21,13,0)
                           server successfully.
"^DD",702,702.1,.09,"DT")
3010216
"^DD",702,702.1,.1,0)
UNC^F^^.1;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",702,702.1,.1,3)
Answer must be 1-245 characters in length.
"^DD",702,702.1,.1,21,0)
^.001^2^2^3021112^^^^
"^DD",702,702.1,.1,21,1,0)
This field contains the Universal Naming Convention (UNC) for this attachment
"^DD",702,702.1,.1,21,2,0)
indicating where the image attachment is located.
"^DD",702,702.1,.1,"DT")
3010222
"^DD",702.01,702.01,0)
FIELD^^.1^9
"^DD",702.01,702.01,0,"DDA")
N
"^DD",702.01,702.01,0,"DT")
3020722
"^DD",702.01,702.01,0,"ID",.02)
W "   ",@("$P($P($C(59)_$S($D(^DD(702.01,.02,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",702.01,702.01,0,"IX","AINST",702.011,.01)

"^DD",702.01,702.01,0,"IX","ASPEC",702.01,.02)

"^DD",702.01,702.01,0,"IX","B",702.01,.01)

"^DD",702.01,702.01,0,"IX","UC",702.01,.01)

"^DD",702.01,702.01,0,"NM","CP DEFINITION")

"^DD",702.01,702.01,0,"PT",123,1.01)

"^DD",702.01,702.01,0,"PT",123.3,.04)

"^DD",702.01,702.01,0,"PT",702,.04)

"^DD",702.01,702.01,0,"PT",703.91,.02)

"^DD",702.01,702.01,0,"VRPK")
MD
"^DD",702.01,702.01,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!'(X?1A.E) X
"^DD",702.01,702.01,.01,.1)
Procedure Name
"^DD",702.01,702.01,.01,1,0)
^.1
"^DD",702.01,702.01,.01,1,1,0)
702.01^B
"^DD",702.01,702.01,.01,1,1,1)
S ^MDS(702.01,"B",$E(X,1,30),DA)=""
"^DD",702.01,702.01,.01,1,1,2)
K ^MDS(702.01,"B",$E(X,1,30),DA)
"^DD",702.01,702.01,.01,1,1,"%D",0)
^^1^1^3011019^
"^DD",702.01,702.01,.01,1,1,"%D",1,0)
Standard Fileman "B" index for the file.
"^DD",702.01,702.01,.01,1,2,0)
702.01^UC^MUMPS
"^DD",702.01,702.01,.01,1,2,1)
S ^MDS(702.01,"UC",$$UP^XLFSTR(X),DA)=""
"^DD",702.01,702.01,.01,1,2,2)
K ^MDS(702.01,"UC",$$UP^XLFSTR(X),DA)
"^DD",702.01,702.01,.01,1,2,"%D",0)
^^1^1^3020805^
"^DD",702.01,702.01,.01,1,2,"%D",1,0)
Used to validate a new entry as unique without case sensitivity.
"^DD",702.01,702.01,.01,1,2,"DT")
3020805
"^DD",702.01,702.01,.01,3)
Answer must be 3-30 characters in length.
"^DD",702.01,702.01,.01,21,0)
^.001^6^6^3020805^^^^
"^DD",702.01,702.01,.01,21,1,0)
This field contains the name of the procedure.  It should be descriptive
"^DD",702.01,702.01,.01,21,2,0)
of the procedure and contain 3-30 alphanumeric characters.  The first
"^DD",702.01,702.01,.01,21,3,0)
character MUST be a letter.  To maintain consistency it is recommended
"^DD",702.01,702.01,.01,21,4,0)
that all procedures be entered in UPPERCASE letters as well.
"^DD",702.01,702.01,.01,21,5,0)
 
"^DD",702.01,702.01,.01,21,6,0)
(Reference IA #3139)
"^DD",702.01,702.01,.01,"DT")
3020805
"^DD",702.01,702.01,.02,0)
TREATING SPECIALTY^P45.7'^DIC(45.7,^0;2^Q
"^DD",702.01,702.01,.02,.1)
Treating Specialty
"^DD",702.01,702.01,.02,1,0)
^.1^^-1
"^DD",702.01,702.01,.02,1,1,0)
702.01^ASPEC
"^DD",702.01,702.01,.02,1,1,1)
S ^MDS(702.01,"ASPEC",$E(X,1,30),DA)=""
"^DD",702.01,702.01,.02,1,1,2)
K ^MDS(702.01,"ASPEC",$E(X,1,30),DA)
"^DD",702.01,702.01,.02,1,1,"%D",0)
^^2^2^3011019^
"^DD",702.01,702.01,.02,1,1,"%D",1,0)
Standard Fileman "ASPEC" index for the sub-file on the TREATING 
"^DD",702.01,702.01,.02,1,1,"%D",2,0)
SPECIALTY field.
"^DD",702.01,702.01,.02,1,1,"DT")
3001121
"^DD",702.01,702.01,.02,3)
Enter the associated Treating Specialty.
"^DD",702.01,702.01,.02,21,0)
^.001^1^1^3011019^^^^
"^DD",702.01,702.01,.02,21,1,0)
This field defines the specialty that this procedure falls under.
"^DD",702.01,702.01,.02,"DT")
3010223
"^DD",702.01,702.01,.03,0)
REQUIRE EXTERNAL DATA^S^0:No;1:Yes;^0;3^Q
"^DD",702.01,702.01,.03,.1)
Require External Data
"^DD",702.01,702.01,.03,3)
Enter Yes or No
"^DD",702.01,702.01,.03,21,0)
^.001^3^3^3030909^^^^
"^DD",702.01,702.01,.03,21,1,0)
Setting this field to Yes will force this procedure to be processed
"^DD",702.01,702.01,.03,21,2,0)
via the CPUser executable for matching whether or not there are
"^DD",702.01,702.01,.03,21,3,0)
instruments associated with it.
"^DD",702.01,702.01,.03,"DT")
3011211
"^DD",702.01,702.01,.04,0)
DEFAULT TIU NOTE^RP8925.1'^TIU(8925.1,^0;4^Q
"^DD",702.01,702.01,.04,.1)
TIU Note Title
"^DD",702.01,702.01,.04,3)
Enter a TIU Note Title
"^DD",702.01,702.01,.04,21,0)
^.001^3^3^3030909^^
"^DD",702.01,702.01,.04,21,1,0)
This field contains a TIU Note Title to use as
"^DD",702.01,702.01,.04,21,2,0)
the default when CP creates a note for interpretation
"^DD",702.01,702.01,.04,21,3,0)
for this procedure.  (Reference IA #3377)
"^DD",702.01,702.01,.04,"DT")
3010226
"^DD",702.01,702.01,.05,0)
HOSPITAL LOCATION^P44'^SC(^0;5^Q
"^DD",702.01,702.01,.05,.1)
Hospital Location
"^DD",702.01,702.01,.05,3)
Enter a Hospital Location.
"^DD",702.01,702.01,.05,21,0)
^.001^2^2^3021112^^^^
"^DD",702.01,702.01,.05,21,1,0)
This is the location that will be used when creating the TIU note for
"^DD",702.01,702.01,.05,21,2,0)
interpretation.  This location will be used for workload reporting.
"^DD",702.01,702.01,.05,"DT")
3001127
"^DD",702.01,702.01,.07,0)
AUTO SUBMIT^S^0:No, manually complete;1:Yes, Submit to VistA Imaging;^0;7^Q
"^DD",702.01,702.01,.07,.1)
Auto Submit To VistA Imaging
"^DD",702.01,702.01,.07,21,0)
^.001^5^5^3030909^^
"^DD",702.01,702.01,.07,21,1,0)
This field only applies to procedures that are performed by instruments with
"^DD",702.01,702.01,.07,21,2,0)
Bi-directional interface capabilities.  This field is used to indicate
"^DD",702.01,702.01,.07,21,3,0)
whether the image attachment should be automatically submitted to VistA
"^DD",702.01,702.01,.07,21,4,0)
Imaging once the procedure is performed and the result is passed to CP or
"^DD",702.01,702.01,.07,21,5,0)
the submission process of the image should be done manually with user interface.
"^DD",702.01,702.01,.07,"DT")
3020729
"^DD",702.01,702.01,.08,0)
EXTERNAL DATA DIRECTORY^F^^0;8^K:$L(X)>150!($L(X)<3) X
"^DD",702.01,702.01,.08,.1)
External Attachment Directory
"^DD",702.01,702.01,.08,3)
Answer must be 3-150 characters in length.
"^DD",702.01,702.01,.08,21,0)
^.001^2^2^3011019^^^^
"^DD",702.01,702.01,.08,21,1,0)
This field contains a reference to a network share where user supplied
"^DD",702.01,702.01,.08,21,2,0)
attachments are located for this procedure.
"^DD",702.01,702.01,.08,"DT")
3020417
"^DD",702.01,702.01,.09,0)
ACTIVE^S^0:No;1:Yes;^0;9^Q
"^DD",702.01,702.01,.09,.1)
Active
"^DD",702.01,702.01,.09,3)
Enter Yes or No.
"^DD",702.01,702.01,.09,21,0)
^.001^1^1^3011019^^^^
"^DD",702.01,702.01,.09,21,1,0)
Yes/No to indicate active procedures that can be linked to Consults.
"^DD",702.01,702.01,.09,"DT")
3000524
"^DD",702.01,702.01,.1,0)
INSTRUMENT^702.011P^^.1;0
"^DD",702.01,702.01,.1,21,0)
^.001^2^2^3030909^^
"^DD",702.01,702.01,.1,21,1,0)
This multiple contains instruments that generate results for this
"^DD",702.01,702.01,.1,21,2,0)
procedure.
"^DD",702.01,702.011,0)
INSTRUMENT SUB-FIELD^^.01^1
"^DD",702.01,702.011,0,"DT")
3010214
"^DD",702.01,702.011,0,"IX","B",702.011,.01)

"^DD",702.01,702.011,0,"NM","INSTRUMENT")

"^DD",702.01,702.011,0,"UP")
702.01
"^DD",702.01,702.011,.01,0)
INSTRUMENT^MP702.09'^MDS(702.09,^0;1^Q
"^DD",702.01,702.011,.01,.1)
Instrument
"^DD",702.01,702.011,.01,1,0)
^.1
"^DD",702.01,702.011,.01,1,1,0)
702.011^B
"^DD",702.01,702.011,.01,1,1,1)
S ^MDS(702.01,DA(1),.1,"B",$E(X,1,30),DA)=""
"^DD",702.01,702.011,.01,1,1,2)
K ^MDS(702.01,DA(1),.1,"B",$E(X,1,30),DA)
"^DD",702.01,702.011,.01,1,1,"%D",0)
^^1^1^3011019^
"^DD",702.01,702.011,.01,1,1,"%D",1,0)
Standard Fileman "B" index for the sub-file.
"^DD",702.01,702.011,.01,1,2,0)
702.01^AINST
"^DD",702.01,702.011,.01,1,2,1)
S ^MDS(702.01,"AINST",$E(X,1,30),DA(1),DA)=""
"^DD",702.01,702.011,.01,1,2,2)
K ^MDS(702.01,"AINST",$E(X,1,30),DA(1),DA)
"^DD",702.01,702.011,.01,1,2,"%D",0)
^^3^3^3021114^
"^DD",702.01,702.011,.01,1,2,"%D",1,0)
This cross reference is used to quickly retrieve the available
"^DD",702.01,702.011,.01,1,2,"%D",2,0)
instruments for a CP Definition entry as well as prevent instruments
"^DD",702.01,702.011,.01,1,2,"%D",3,0)
from being deleted that are still pointed to.
"^DD",702.01,702.011,.01,1,2,"DT")
3020801
"^DD",702.01,702.011,.01,3)
Enter a CP INSTRUMENT.
"^DD",702.01,702.011,.01,21,0)
^.001^2^2^3021112^^^^
"^DD",702.01,702.011,.01,21,1,0)
This field contains a pointer to an instrument in the CP Instrument
"^DD",702.01,702.011,.01,21,2,0)
file (#702.09) that generates results for this procedure.
"^DD",702.01,702.011,.01,"DT")
3020801
"^DD",702.09,702.09,0)
FIELD^^.307^27
"^DD",702.09,702.09,0,"DDA")
N
"^DD",702.09,702.09,0,"DT")
3031223
"^DD",702.09,702.09,0,"IX","B",702.09,.01)

"^DD",702.09,702.09,0,"IX","UC",702.09,.01)

"^DD",702.09,702.09,0,"NM","CP INSTRUMENT")

"^DD",702.09,702.09,0,"PT",702,.11)

"^DD",702.09,702.09,0,"PT",702.011,.01)

"^DD",702.09,702.09,0,"PT",703.1,.04)

"^DD",702.09,702.09,0,"VRPK")
MD
"^DD",702.09,702.09,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",702.09,702.09,.01,.1)
Instrument Name
"^DD",702.09,702.09,.01,1,0)
^.1
"^DD",702.09,702.09,.01,1,1,0)
702.09^B
"^DD",702.09,702.09,.01,1,1,1)
S ^MDS(702.09,"B",$E(X,1,30),DA)=""
"^DD",702.09,702.09,.01,1,1,2)
K ^MDS(702.09,"B",$E(X,1,30),DA)
"^DD",702.09,702.09,.01,1,1,"%D",0)
^^1^1^3011019^
"^DD",702.09,702.09,.01,1,1,"%D",1,0)
Standard Fileman "B" index for the file.
"^DD",702.09,702.09,.01,1,2,0)
702.09^UC^MUMPS
"^DD",702.09,702.09,.01,1,2,1)
S ^MDS(702.09,"UC",$$UP^XLFSTR(X),DA)=""
"^DD",702.09,702.09,.01,1,2,2)
K ^MDS(702.09,"UC",$$UP^XLFSTR(X),DA)
"^DD",702.09,702.09,.01,1,2,"%D",0)
^^1^1^3020805^
"^DD",702.09,702.09,.01,1,2,"%D",1,0)
Used to validate a new entry as unique without case sensitivity.
"^DD",702.09,702.09,.01,1,2,"DT")
3020805
"^DD",702.09,702.09,.01,3)
Answer must be 3-30 characters in length.
"^DD",702.09,702.09,.01,21,0)
^.001^1^1^3020716^^^^
"^DD",702.09,702.09,.01,21,1,0)
Name or mnemonic of instrument - used by vendor in HL7 message header.
"^DD",702.09,702.09,.01,"DT")
3020805
"^DD",702.09,702.09,.02,0)
NOTIFICATION MAILGROUP^P3.8'^XMB(3.8,^0;2^Q
"^DD",702.09,702.09,.02,.1)
Notification Mailgroup
"^DD",702.09,702.09,.02,21,0)
^.001^3^3^3011105^^
"^DD",702.09,702.09,.02,21,1,0)
This field contains a pointer to a VA Mailman Mail Group that will 
"^DD",702.09,702.09,.02,21,2,0)
receive error messages and other notifications dealing with this device 
"^DD",702.09,702.09,.02,21,3,0)
from the interface routines.
"^DD",702.09,702.09,.02,"DT")
3011105
"^DD",702.09,702.09,.03,0)
DESCRIPTION^F^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",702.09,702.09,.03,.1)
Description
"^DD",702.09,702.09,.03,3)
Answer must be 1-50 characters in length.
"^DD",702.09,702.09,.03,21,0)
^^2^2^3021112^
"^DD",702.09,702.09,.03,21,1,0)
This field contains a short informational description text for the
"^DD",702.09,702.09,.03,21,2,0)
instrument.
"^DD",702.09,702.09,.03,"DT")
3020702
"^DD",702.09,702.09,.05,0)
DELETE WHEN SUBMITTED^S^0:No;1:Yes;^0;5^Q
"^DD",702.09,702.09,.05,.1)
Delete when submitted
"^DD",702.09,702.09,.05,3)
Enter Yes or No.
"^DD",702.09,702.09,.05,21,0)
^.001^3^3^3011019^^^
"^DD",702.09,702.09,.05,21,1,0)
Select 'Yes' if you want files created by this instrument deleted once
"^DD",702.09,702.09,.05,21,2,0)
they are successfully copied to the VistA Imaging Server.  Deletion will
"^DD",702.09,702.09,.05,21,3,0)
be performed by the VistA Imaging application.
"^DD",702.09,702.09,.05,"DT")
3010227
"^DD",702.09,702.09,.06,0)
PRINTABLE NAME^F^^0;6^K:$L(X)>30!($L(X)<3) X
"^DD",702.09,702.09,.06,.1)
Printable Name
"^DD",702.09,702.09,.06,3)
Answer must be 3-30 characters in length.
"^DD",702.09,702.09,.06,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.06,21,1,0)
Name of instrument that is printed on reports/etc.
"^DD",702.09,702.09,.06,"DT")
3000724
"^DD",702.09,702.09,.07,0)
DEFAULT FILE EXT^F^^0;7^K:$L(X)>10!($L(X)<1)!'(X?1"."1.9UL) X
"^DD",702.09,702.09,.07,.1)
Default Ext.
"^DD",702.09,702.09,.07,3)
Enter in a file extension for data uploaded from this instrument (Default .txt)
"^DD",702.09,702.09,.07,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.07,21,1,0)
Default file extension for vendor instrument reports (e.g. .doc .pdf).
"^DD",702.09,702.09,.07,"DT")
3020725
"^DD",702.09,702.09,.08,0)
SERIAL NUMBER^F^^0;8^K:$L(X)>50!($L(X)<1) X
"^DD",702.09,702.09,.08,.1)
Serial Number
"^DD",702.09,702.09,.08,3)
Answer must be 1-50 characters in length.
"^DD",702.09,702.09,.08,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.08,21,1,0)
Vendor serial number of the instrument (for reference only).
"^DD",702.09,702.09,.08,"DT")
3000724
"^DD",702.09,702.09,.09,0)
ACTIVE^RS^0:No;1:Yes;^0;9^Q
"^DD",702.09,702.09,.09,.1)
Active
"^DD",702.09,702.09,.09,3)
Enter Yes or No.
"^DD",702.09,702.09,.09,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.09,21,1,0)
Whether or not the instrument is active on the network.
"^DD",702.09,702.09,.09,"DT")
3000724
"^DD",702.09,702.09,.11,0)
PROCESSING ROUTINE^F^^.1;1^K:$L(X)>8!($L(X)<1) X
"^DD",702.09,702.09,.11,.1)
M Routine
"^DD",702.09,702.09,.11,3)
Answer must be 1-8 characters in length.
"^DD",702.09,702.09,.11,21,0)
^.001^1^1^3021112^^^^
"^DD",702.09,702.09,.11,21,1,0)
Name of the MUMPS routine used to process interface information.
"^DD",702.09,702.09,.11,"DT")
3020725
"^DD",702.09,702.09,.12,0)
PROCESSING CODE^S^M:Medicine;C:CP V1.0;^.1;2^Q
"^DD",702.09,702.09,.12,.1)
Pkg Code
"^DD",702.09,702.09,.12,3)
Select package this instrument uploads to.
"^DD",702.09,702.09,.12,21,0)
^.001^1^1^3031223^^^^
"^DD",702.09,702.09,.12,21,1,0)
Where data is to be processed - "M"edicine or "C"linical Procedures.
"^DD",702.09,702.09,.12,"DT")
3031223
"^DD",702.09,702.09,.13,0)
BI-DIRECTIONAL^S^0:No;1:Yes;^.1;3^Q
"^DD",702.09,702.09,.13,.1)
Bi-Directional Instrument
"^DD",702.09,702.09,.13,21,0)
^.001^2^2^3021112^^
"^DD",702.09,702.09,.13,21,1,0)
'Yes' or 'No" to indicate if this device can accept HL7 messages from
"^DD",702.09,702.09,.13,21,2,0)
VistA.
"^DD",702.09,702.09,.13,"DT")
3020730
"^DD",702.09,702.09,.14,0)
IP ADDRESS^F^^.1;4^K:$L(X)>15!($L(X)<7)!'(X?1.3N1"."1.3N1"."1.3N1"."1.3N) X
"^DD",702.09,702.09,.14,.1)
IP Address
"^DD",702.09,702.09,.14,3)
Answer must be 7-15 characters in length.
"^DD",702.09,702.09,.14,21,0)
^^1^1^3021112^
"^DD",702.09,702.09,.14,21,1,0)
This field contains the IP address of this instrument.
"^DD",702.09,702.09,.14,"DT")
3020702
"^DD",702.09,702.09,.15,0)
PORT^NJ5,0^^.1;5^K:+X'=X!(X>99999)!(X<1000)!(X?.E1"."1N.N) X
"^DD",702.09,702.09,.15,.1)
Port
"^DD",702.09,702.09,.15,3)
Type a Number between 1000 and 99999, 0 Decimal Digits
"^DD",702.09,702.09,.15,21,0)
^.001^1^1^3021220^^
"^DD",702.09,702.09,.15,21,1,0)
This field contains the port number for this instrument.
"^DD",702.09,702.09,.15,"DT")
3021220
"^DD",702.09,702.09,.16,0)
HL7 INSTRUMENT ID^F^^.1;6^K:$L(X)>30!($L(X)<3) X
"^DD",702.09,702.09,.16,.1)
HL7 Inst ID
"^DD",702.09,702.09,.16,3)
Answer must be 3-30 characters in length.
"^DD",702.09,702.09,.16,21,0)
^^2^2^3021112^
"^DD",702.09,702.09,.16,21,1,0)
This is the name of the actual device where the device name can
"^DD",702.09,702.09,.16,21,2,0)
be 'SMC St. Louis'.  This field is used to ID the device.
"^DD",702.09,702.09,.16,"DT")
3020725
"^DD",702.09,702.09,.17,0)
HL7 UNIVERSAL SERVICE ID^F^^.1;7^K:$L(X)>48!($L(X)<1) X
"^DD",702.09,702.09,.17,.1)
HL7 Unv Svc ID
"^DD",702.09,702.09,.17,3)
Answer must be 1-48 characters in length.
"^DD",702.09,702.09,.17,21,0)
^^2^2^3021112^
"^DD",702.09,702.09,.17,21,1,0)
This field defines what type of procedure the device can perform if the
"^DD",702.09,702.09,.17,21,2,0)
device can perform more than one procedure.
"^DD",702.09,702.09,.17,"DT")
3020725
"^DD",702.09,702.09,.18,0)
HL7 LOGICAL LINK^P870'^HLCS(870,^.1;8^Q
"^DD",702.09,702.09,.18,.1)
HL7 Link
"^DD",702.09,702.09,.18,21,0)
^.001^3^3^3040205^^^^
"^DD",702.09,702.09,.18,21,1,0)
This field contains the HL7 Logical Link.  There is one unique link for
"^DD",702.09,702.09,.18,21,2,0)
each instrument.  Used to determine where the bi-directional messages are sent.
"^DD",702.09,702.09,.18,21,3,0)
(Reference IA #1496)
"^DD",702.09,702.09,.18,"DT")
3020725
"^DD",702.09,702.09,.21,0)
SERVER NAME^F^^.2;1^K:$L(X)>30!($L(X)<1) X
"^DD",702.09,702.09,.21,.1)
Server Name
"^DD",702.09,702.09,.21,3)
Answer must be 1-30 characters in length.
"^DD",702.09,702.09,.21,21,0)
^^2^2^3020425^
"^DD",702.09,702.09,.21,21,1,0)
Network name of instrument server application
"^DD",702.09,702.09,.21,21,2,0)
that generates the attachments.
"^DD",702.09,702.09,.21,"DT")
3000724
"^DD",702.09,702.09,.22,0)
SERVER SHARE^F^^.2;2^K:$L(X)>30!($L(X)<1) X
"^DD",702.09,702.09,.22,.1)
Share Name
"^DD",702.09,702.09,.22,3)
Answer must be 1-30 characters in length.
"^DD",702.09,702.09,.22,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.22,21,1,0)
Share folder/drive on the instrument server where the report is stored.
"^DD",702.09,702.09,.22,"DT")
3020801
"^DD",702.09,702.09,.23,0)
SERVER PATH^F^^.2;3^K:$L(X)>150!($L(X)<1) X
"^DD",702.09,702.09,.23,.1)
Path Name
"^DD",702.09,702.09,.23,3)
Answer must be 1-150 characters in length.
"^DD",702.09,702.09,.23,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.23,21,1,0)
Path on the network where the report is stored.
"^DD",702.09,702.09,.23,"DT")
3020801
"^DD",702.09,702.09,.24,0)
SERVER EXECUTABLE^F^^.2;4^K:$L(X)>30!($L(X)<1) X
"^DD",702.09,702.09,.24,.1)
Executable Name
"^DD",702.09,702.09,.24,3)
Answer must be 1-30 characters in length.
"^DD",702.09,702.09,.24,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.24,21,1,0)
Name of server program that is ran to create the report for the interface.
"^DD",702.09,702.09,.24,"DT")
3020801
"^DD",702.09,702.09,.301,0)
PROCESS UNC^S^0:No;1:Yes;^.3;1^Q
"^DD",702.09,702.09,.301,.1)
UNC
"^DD",702.09,702.09,.301,3)
Enter Yes or No.
"^DD",702.09,702.09,.301,21,0)
^.001^1^1^3021112^^^
"^DD",702.09,702.09,.301,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces UNC type data.
"^DD",702.09,702.09,.301,"DT")
3010619
"^DD",702.09,702.09,.302,0)
PROCESS TEXT^S^0:No;1:Yes;^.3;2^Q
"^DD",702.09,702.09,.302,.1)
Text
"^DD",702.09,702.09,.302,3)
Enter Yes or No.
"^DD",702.09,702.09,.302,21,0)
^.001^1^1^3021112^^^
"^DD",702.09,702.09,.302,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces text type data.
"^DD",702.09,702.09,.302,"DT")
3010619
"^DD",702.09,702.09,.303,0)
PROCESS URL^S^0:No;1:Yes;^.3;3^Q
"^DD",702.09,702.09,.303,.1)
URL
"^DD",702.09,702.09,.303,3)
Enter Yes or No.
"^DD",702.09,702.09,.303,21,0)
^.001^1^1^3021112^^
"^DD",702.09,702.09,.303,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces URL type data.
"^DD",702.09,702.09,.303,"DT")
3010619
"^DD",702.09,702.09,.304,0)
PROCESS DLL^S^0:No;1:Yes;^.3;4^Q
"^DD",702.09,702.09,.304,.1)
DLL
"^DD",702.09,702.09,.304,3)
Enter Yes or No.
"^DD",702.09,702.09,.304,21,0)
^.001^1^1^3021112^^
"^DD",702.09,702.09,.304,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces DLL type data.
"^DD",702.09,702.09,.304,"DT")
3010619
"^DD",702.09,702.09,.305,0)
PROCESS UUENCODE^S^0:No;1:Yes;^.3;5^Q
"^DD",702.09,702.09,.305,.1)
UUEncode
"^DD",702.09,702.09,.305,3)
Enter Yes or No.
"^DD",702.09,702.09,.305,21,0)
^.001^1^1^3021112^^^
"^DD",702.09,702.09,.305,21,1,0)
Enter 'Yes'  or 'No" to indicate if this instrument produces UUENCODE type data.
"^DD",702.09,702.09,.305,"DT")
3020725
"^DD",702.09,702.09,.306,0)
PROCESS XML^S^0:No;1:Yes;^.3;6^Q
"^DD",702.09,702.09,.306,.1)
XML
"^DD",702.09,702.09,.306,3)
Enter Yes or No.
"^DD",702.09,702.09,.306,21,0)
^.001^1^1^3021112^^
"^DD",702.09,702.09,.306,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces XML type data.
"^DD",702.09,702.09,.306,"DT")
3010619
"^DD",702.09,702.09,.307,0)
PROCESS XMS^S^0:No;1:Yes;^.3;7^Q
"^DD",702.09,702.09,.307,.1)
XMS
"^DD",702.09,702.09,.307,3)
Enter Yes or No.
"^DD",702.09,702.09,.307,21,0)
^.001^1^1^3021112^^
"^DD",702.09,702.09,.307,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces XMS type data.
"^DD",702.09,702.09,.307,"DT")
3021204
"^DD",703.1,703.1,0)
FIELD^^.1^8
"^DD",703.1,703.1,0,"DDA")
N
"^DD",703.1,703.1,0,"DT")
3021118
"^DD",703.1,703.1,0,"IX","ADFN",703.1,.02)

"^DD",703.1,703.1,0,"IX","ADTP",703.1,.03)

"^DD",703.1,703.1,0,"IX","AINST",703.1,.04)

"^DD",703.1,703.1,0,"IX","ASTATUS",703.1,.09)

"^DD",703.1,703.1,0,"IX","B",703.1,.01)

"^DD",703.1,703.1,0,"NM","CP RESULT REPORT")

"^DD",703.1,703.1,0,"PT",702.1,.03)

"^DD",703.1,703.1,0,"VRPK")
MD
"^DD",703.1,703.1,.01,0)
UPLOAD ID^RF^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",703.1,703.1,.01,.1)
Upload ID
"^DD",703.1,703.1,.01,1,0)
^.1
"^DD",703.1,703.1,.01,1,1,0)
703.1^B
"^DD",703.1,703.1,.01,1,1,1)
S ^MDD(703.1,"B",$E(X,1,30),DA)=""
"^DD",703.1,703.1,.01,1,1,2)
K ^MDD(703.1,"B",$E(X,1,30),DA)
"^DD",703.1,703.1,.01,1,1,"%D",0)
^^1^1^3011019^
"^DD",703.1,703.1,.01,1,1,"%D",1,0)
Standard Fileman "B" index for the file.
"^DD",703.1,703.1,.01,3)
Answer must be 1-30 characters in length.
"^DD",703.1,703.1,.01,21,0)
^.001^1^1^3030516^^^^
"^DD",703.1,703.1,.01,21,1,0)
Unique identifier assigned for each upload.
"^DD",703.1,703.1,.01,"DT")
3010402
"^DD",703.1,703.1,.02,0)
PATIENT^P2'^DPT(^0;2^Q
"^DD",703.1,703.1,.02,.1)
Patient Name
"^DD",703.1,703.1,.02,1,0)
^.1
"^DD",703.1,703.1,.02,1,1,0)
703.1^ADFN
"^DD",703.1,703.1,.02,1,1,1)
S ^MDD(703.1,"ADFN",$E(X,1,30),DA)=""
"^DD",703.1,703.1,.02,1,1,2)
K ^MDD(703.1,"ADFN",$E(X,1,30),DA)
"^DD",703.1,703.1,.02,1,1,"%D",0)
^^1^1^3011019^
"^DD",703.1,703.1,.02,1,1,"%D",1,0)
Standard Fileman "ADFN" index on the patient IEN.
"^DD",703.1,703.1,.02,1,1,"DT")
3010216
"^DD",703.1,703.1,.02,3)
Enter a patient name.
"^DD",703.1,703.1,.02,21,0)
^.001^2^2^3011019^^^^
"^DD",703.1,703.1,.02,21,1,0)
Pointer to the PATIENT file (#2) of the patient uploaded from the result
"^DD",703.1,703.1,.02,21,2,0)
of the instrument.
"^DD",703.1,703.1,.02,"DT")
3010216
"^DD",703.1,703.1,.03,0)
DATE/TIME PERFORMED^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",703.1,703.1,.03,.1)
Date/Time Performed
"^DD",703.1,703.1,.03,1,0)
^.1
"^DD",703.1,703.1,.03,1,1,0)
703.1^ADTP
"^DD",703.1,703.1,.03,1,1,1)
S ^MDD(703.1,"ADTP",$E(X,1,30),DA)=""
"^DD",703.1,703.1,.03,1,1,2)
K ^MDD(703.1,"ADTP",$E(X,1,30),DA)
"^DD",703.1,703.1,.03,1,1,"%D",0)
^^2^2^3021114^
"^DD",703.1,703.1,.03,1,1,"%D",1,0)
This cross reference is used to quickly purge old entries in the
"^DD",703.1,703.1,.03,1,1,"%D",2,0)
CP RESULT REPORT file.
"^DD",703.1,703.1,.03,1,1,"DT")
3020401
"^DD",703.1,703.1,.03,3)
Enter date and time this result was performed.
"^DD",703.1,703.1,.03,21,0)
^.001^1^1^3011019^^^^
"^DD",703.1,703.1,.03,21,1,0)
Date/Time the procedure was performed on the instrument.
"^DD",703.1,703.1,.03,"DT")
3020401
"^DD",703.1,703.1,.04,0)
INSTRUMENT^P702.09'^MDS(702.09,^0;4^Q
"^DD",703.1,703.1,.04,.1)
Instrument
"^DD",703.1,703.1,.04,1,0)
^.1
"^DD",703.1,703.1,.04,1,1,0)
703.1^AINST
"^DD",703.1,703.1,.04,1,1,1)
S ^MDD(703.1,"AINST",$E(X,1,30),DA)=""
"^DD",703.1,703.1,.04,1,1,2)
K ^MDD(703.1,"AINST",$E(X,1,30),DA)
"^DD",703.1,703.1,.04,1,1,"DT")
3020801
"^DD",703.1,703.1,.04,3)
Enter a CP INSTRUMENT.
"^DD",703.1,703.1,.04,21,0)
^.001^2^2^3011019^^^^
"^DD",703.1,703.1,.04,21,1,0)
Pointer to the CP INSTRUMENT file (#702.9) of the instrument that produced
"^DD",703.1,703.1,.04,21,2,0)
these reports.
"^DD",703.1,703.1,.04,"DT")
3020801
"^DD",703.1,703.1,.05,0)
STUDY REFERENCE NUMBER^F^^0;5^K:$L(X)>12!($L(X)<1) X
"^DD",703.1,703.1,.05,3)
Answer must be 1-12 characters in length.
"^DD",703.1,703.1,.05,21,0)
^.001^2^2^3030909^^
"^DD",703.1,703.1,.05,21,1,0)
This is a pointer to the CP Transaction file (#702).  This field
"^DD",703.1,703.1,.05,21,2,0)
serves as a reference to the transaction.
"^DD",703.1,703.1,.05,"DT")
3020710
"^DD",703.1,703.1,.06,0)
HL7 REFERENCE NUMBER^F^^0;6^K:$L(X)>30!($L(X)<1) X
"^DD",703.1,703.1,.06,3)
Answer must be 1-30 characters in length.
"^DD",703.1,703.1,.06,21,0)
^.001^3^3^3021112^^
"^DD",703.1,703.1,.06,21,1,0)
This field is used to keep the IEN of the HL7 message.  It serves as a
"^DD",703.1,703.1,.06,21,2,0)
reference to the message that will be purged once the data has been 
"^DD",703.1,703.1,.06,21,3,0)
successfully moved to the VistA Imaging server.
"^DD",703.1,703.1,.06,"DT")
3020903
"^DD",703.1,703.1,.09,0)
STATUS^RS^U:Unmatched;M:Matched;P:Pending Gateway Action;^0;9^Q
"^DD",703.1,703.1,.09,.1)
Status
"^DD",703.1,703.1,.09,1,0)
^.1
"^DD",703.1,703.1,.09,1,1,0)
703.1^ASTATUS
"^DD",703.1,703.1,.09,1,1,1)
S ^MDD(703.1,"ASTATUS",$E(X,1,30),DA)=""
"^DD",703.1,703.1,.09,1,1,2)
K ^MDD(703.1,"ASTATUS",$E(X,1,30),DA)
"^DD",703.1,703.1,.09,1,1,"%D",0)
^^1^1^3020710^
"^DD",703.1,703.1,.09,1,1,"%D",1,0)
Sets the status for the Gateway to find studies to process.
"^DD",703.1,703.1,.09,1,1,"DT")
3020710
"^DD",703.1,703.1,.09,3)
Status of Result Report
"^DD",703.1,703.1,.09,21,0)
^.001^5^5^3021118^^^^
"^DD",703.1,703.1,.09,21,1,0)
Status of the result.
"^DD",703.1,703.1,.09,21,2,0)
 
"^DD",703.1,703.1,.09,21,3,0)
U:Unmatched - Result not matched to a CP transaction.
"^DD",703.1,703.1,.09,21,4,0)
M:Matched   - Result matched to a CP transaction.
"^DD",703.1,703.1,.09,21,5,0)
P:Pending Gateway Action - Result is awaiting CP Gateway action.
"^DD",703.1,703.1,.09,"DT")
3021118
"^DD",703.1,703.1,.1,0)
UPLOAD ITEM^703.11S^^.1;0
"^DD",703.1,703.1,.1,21,0)
^.001^1^1^3030909^^^
"^DD",703.1,703.1,.1,21,1,0)
This multiple contains information on the upload item.
"^DD",703.1,703.11,0)
UPLOAD ITEM SUB-FIELD^^.2^4
"^DD",703.1,703.11,0,"DT")
3020711
"^DD",703.1,703.11,0,"IX","B",703.11,.01)

"^DD",703.1,703.11,0,"NM","UPLOAD ITEM")

"^DD",703.1,703.11,0,"UP")
703.1
"^DD",703.1,703.11,.01,0)
UPLOAD ITEM^MS^1:Impression Text;2:Report Text;3:Attachment UNC;4:Attachment URL;5:UUEncoded Data;6:DLL;7:XML Data;8:XML Style Sheet;^0;1^Q
"^DD",703.1,703.11,.01,.1)
Item
"^DD",703.1,703.11,.01,1,0)
^.1
"^DD",703.1,703.11,.01,1,1,0)
703.11^B
"^DD",703.1,703.11,.01,1,1,1)
S ^MDD(703.1,DA(1),.1,"B",$E(X,1,30),DA)=""
"^DD",703.1,703.11,.01,1,1,2)
K ^MDD(703.1,DA(1),.1,"B",$E(X,1,30),DA)
"^DD",703.1,703.11,.01,1,1,"%D",0)
^^1^1^3011019^
"^DD",703.1,703.11,.01,1,1,"%D",1,0)
Standard Fileman "B" index for the sub-file.
"^DD",703.1,703.11,.01,3)
Enter and item.
"^DD",703.1,703.11,.01,21,0)
^.001^2^2^3021112^^^^
"^DD",703.1,703.11,.01,21,1,0)
This field contains the type of data element that can be uploaded from
"^DD",703.1,703.11,.01,21,2,0)
the instrument.
"^DD",703.1,703.11,.01,"DT")
3010618
"^DD",703.1,703.11,.02,0)
ATTACHMENT UNC^F^^0;2^K:$L(X)>240!($L(X)<1) X
"^DD",703.1,703.11,.02,3)
Answer must be 1-240 characters in length.
"^DD",703.1,703.11,.02,21,0)
^^2^2^3021112^
"^DD",703.1,703.11,.02,21,1,0)
This field contains the Universal Naming Convention (UNC) for this
"^DD",703.1,703.11,.02,21,2,0)
attachment.  This indicates where the attachment is located.
"^DD",703.1,703.11,.02,"DT")
3020711
"^DD",703.1,703.11,.1,0)
ITEM VALUE^F^^.1;1^K:$L(X)>245!($L(X)<1) X
"^DD",703.1,703.11,.1,.1)
Value
"^DD",703.1,703.11,.1,3)
Answer must be 1-245 characters in length.
"^DD",703.1,703.11,.1,21,0)
^.001^1^1^3030909^^^^
"^DD",703.1,703.11,.1,21,1,0)
This field stores uploaded items that are a single string value.
"^DD",703.1,703.11,.1,"DT")
3010216
"^DD",703.1,703.11,.2,0)
ITEM TEXT^703.12^^.2;0
"^DD",703.1,703.11,.2,21,0)
^.001^1^1^3021112^^^^
"^DD",703.1,703.11,.2,21,1,0)
This word-processing field is used to store uploaded data that is multi-lined.
"^DD",703.1,703.12,0)
ITEM TEXT SUB-FIELD^^.01^1
"^DD",703.1,703.12,0,"DT")
3000629
"^DD",703.1,703.12,0,"NM","ITEM TEXT")

"^DD",703.1,703.12,0,"UP")
703.11
"^DD",703.1,703.12,.01,0)
ITEM TEXT^WL^^0;1^Q
"^DD",703.1,703.12,.01,21,0)
^.001^1^1^3011019^^^^
"^DD",703.1,703.12,.01,21,1,0)
If the uploaded data is multi-lined, it is stored here.
"^DD",703.1,703.12,.01,"DT")
3000725
"^DIC",702,702,0)
CP TRANSACTION^702
"^DIC",702,702,0,"GL")
^MDD(702,
"^DIC",702,702,"%",0)
^1.005^^0
"^DIC",702,702,"%D",0)
^1.001^4^4^3040205^^^
"^DIC",702,702,"%D",1,0)
This file contains the transactions between the instruments and user
"^DIC",702,702,"%D",2,0)
generated data as it is matched to a consult order and a TIU document is
"^DIC",702,702,"%D",3,0)
created for the results.  It also manages the interface between the images
"^DIC",702,702,"%D",4,0)
and the Imaging server.
"^DIC",702,"B","CP TRANSACTION",702)

"^DIC",702.01,702.01,0)
CP DEFINITION^702.01I
"^DIC",702.01,702.01,0,"GL")
^MDS(702.01,
"^DIC",702.01,702.01,"%",0)
^1.005^^0
"^DIC",702.01,702.01,"%D",0)
^^3^3^3000714^
"^DIC",702.01,702.01,"%D",1,0)
This file defines all the procedures used by the Clinical Procedures
"^DIC",702.01,702.01,"%D",2,0)
package.  All elements that define a procedure are in this file.  This
"^DIC",702.01,702.01,"%D",3,0)
file is exported with data, but entries may be added by the site.
"^DIC",702.01,"B","CP DEFINITION",702.01)

"^DIC",702.09,702.09,0)
CP INSTRUMENT^702.09
"^DIC",702.09,702.09,0,"GL")
^MDS(702.09,
"^DIC",702.09,702.09,"%",0)
^1.005^^0
"^DIC",702.09,702.09,"%D",0)
^^2^2^3000725^^^
"^DIC",702.09,702.09,"%D",1,0)
This file contains the list of instruments used by the Clinical Procedures
"^DIC",702.09,702.09,"%D",2,0)
package.  This file is exported with data.
"^DIC",702.09,"B","CP INSTRUMENT",702.09)

"^DIC",703.1,703.1,0)
CP RESULT REPORT^703.1
"^DIC",703.1,703.1,0,"GL")
^MDD(703.1,
"^DIC",703.1,703.1,"%",0)
^1.005^^0
"^DIC",703.1,703.1,"%D",0)
^^4^4^3010220^
"^DIC",703.1,703.1,"%D",1,0)
This file contains the information for the results uploaded from the
"^DIC",703.1,703.1,"%D",2,0)
medical instruments used by Clinical Procedures.  It is distributed
"^DIC",703.1,703.1,"%D",3,0)
without any data.  All fields are automatically stuffed by Clinical
"^DIC",703.1,703.1,"%D",4,0)
Procedures. There is no user input.
"^DIC",703.1,"B","CP RESULT REPORT",703.1)

**END**
**END**
