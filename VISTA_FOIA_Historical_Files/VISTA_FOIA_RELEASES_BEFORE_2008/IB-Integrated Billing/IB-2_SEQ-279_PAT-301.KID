Released IB*2*301 SEQ #279
Extracted from mail message
**KIDS**:IB*2.0*301^

**INSTALL NAME**
IB*2.0*301
"BLD",6033,0)
IB*2.0*301^INTEGRATED BILLING^0^3050302^y
"BLD",6033,1,0)
^^8^8^3050224^
"BLD",6033,1,1,0)
CBO Data Extract enhancements
"BLD",6033,1,2,0)
 
"BLD",6033,1,3,0)
Routine IBJVDEQ
"BLD",6033,1,4,0)
Make sure the claim has been authorized before proceeding with the 
"BLD",6033,1,5,0)
extract.
"BLD",6033,1,6,0)
 
"BLD",6033,1,7,0)
Routine IBRFN4
"BLD",6033,1,8,0)
Provide a callable API for IB information.
"BLD",6033,4,0)
^9.64PA^^
"BLD",6033,"ABPKG")
n
"BLD",6033,"KRN",0)
^9.67PA^8989.52^19
"BLD",6033,"KRN",.4,0)
.4
"BLD",6033,"KRN",.401,0)
.401
"BLD",6033,"KRN",.402,0)
.402
"BLD",6033,"KRN",.403,0)
.403
"BLD",6033,"KRN",.5,0)
.5
"BLD",6033,"KRN",.84,0)
.84
"BLD",6033,"KRN",3.6,0)
3.6
"BLD",6033,"KRN",3.8,0)
3.8
"BLD",6033,"KRN",9.2,0)
9.2
"BLD",6033,"KRN",9.8,0)
9.8
"BLD",6033,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6033,"KRN",9.8,"NM",1,0)
IBJVDEQ^^0^B10714997
"BLD",6033,"KRN",9.8,"NM",2,0)
IBRFN4^^0^B21437252
"BLD",6033,"KRN",9.8,"NM","B","IBJVDEQ",1)

"BLD",6033,"KRN",9.8,"NM","B","IBRFN4",2)

"BLD",6033,"KRN",19,0)
19
"BLD",6033,"KRN",19,"NM",0)
^9.68A^^
"BLD",6033,"KRN",19.1,0)
19.1
"BLD",6033,"KRN",101,0)
101
"BLD",6033,"KRN",409.61,0)
409.61
"BLD",6033,"KRN",771,0)
771
"BLD",6033,"KRN",870,0)
870
"BLD",6033,"KRN",8989.51,0)
8989.51
"BLD",6033,"KRN",8989.52,0)
8989.52
"BLD",6033,"KRN",8994,0)
8994
"BLD",6033,"KRN","B",.4,.4)

"BLD",6033,"KRN","B",.401,.401)

"BLD",6033,"KRN","B",.402,.402)

"BLD",6033,"KRN","B",.403,.403)

"BLD",6033,"KRN","B",.5,.5)

"BLD",6033,"KRN","B",.84,.84)

"BLD",6033,"KRN","B",3.6,3.6)

"BLD",6033,"KRN","B",3.8,3.8)

"BLD",6033,"KRN","B",9.2,9.2)

"BLD",6033,"KRN","B",9.8,9.8)

"BLD",6033,"KRN","B",19,19)

"BLD",6033,"KRN","B",19.1,19.1)

"BLD",6033,"KRN","B",101,101)

"BLD",6033,"KRN","B",409.61,409.61)

"BLD",6033,"KRN","B",771,771)

"BLD",6033,"KRN","B",870,870)

"BLD",6033,"KRN","B",8989.51,8989.51)

"BLD",6033,"KRN","B",8989.52,8989.52)

"BLD",6033,"KRN","B",8994,8994)

"BLD",6033,"QUES",0)
^9.62^^
"BLD",6033,"REQB",0)
^9.611^1^1
"BLD",6033,"REQB",1,0)
IB*2.0*233^2
"BLD",6033,"REQB","B","IB*2.0*233",1)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)
 
"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
301^3050302^7
"PKG",200,22,1,"PAH",1,1,0)
^^8^8^3050302
"PKG",200,22,1,"PAH",1,1,1,0)
CBO Data Extract enhancements
"PKG",200,22,1,"PAH",1,1,2,0)
 
"PKG",200,22,1,"PAH",1,1,3,0)
Routine IBJVDEQ
"PKG",200,22,1,"PAH",1,1,4,0)
Make sure the claim has been authorized before proceeding with the 
"PKG",200,22,1,"PAH",1,1,5,0)
extract.
"PKG",200,22,1,"PAH",1,1,6,0)
 
"PKG",200,22,1,"PAH",1,1,7,0)
Routine IBRFN4
"PKG",200,22,1,"PAH",1,1,8,0)
Provide a callable API for IB information.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IBJVDEQ")
0^1^B10714997
"RTN","IBJVDEQ",1,0)
IBJVDEQ ;DAOU/ALA - CBO Data Extract Queue Trigger ;02-JUL-03
"RTN","IBJVDEQ",2,0)
 ;;2.0;INTEGRATED BILLING;**233,301**;21-MAR-94
"RTN","IBJVDEQ",3,0)
 ;
"RTN","IBJVDEQ",4,0)
 ;**Program Description**
"RTN","IBJVDEQ",5,0)
 ;  This program will log a record who meets the
"RTN","IBJVDEQ",6,0)
 ;  selection criteria for the VISTA Data Extract
"RTN","IBJVDEQ",7,0)
 ;
"RTN","IBJVDEQ",8,0)
BC ;  Triggers from the Bill/Claims File (#399)
"RTN","IBJVDEQ",9,0)
 ;  Called from the STATUS DATE field (#.14)
"RTN","IBJVDEQ",10,0)
 ;  Variable D0 is the internal bill# passed in by FileMan
"RTN","IBJVDEQ",11,0)
 ;
"RTN","IBJVDEQ",12,0)
 NEW DFN
"RTN","IBJVDEQ",13,0)
 ;
"RTN","IBJVDEQ",14,0)
 ; Filter (Auth DT must exist)
"RTN","IBJVDEQ",15,0)
 S RDATES=$G(^DGCR(399,D0,"S"))
"RTN","IBJVDEQ",16,0)
 I $P(RDATES,U,10)="" Q
"RTN","IBJVDEQ",17,0)
 ;
"RTN","IBJVDEQ",18,0)
 ;  Get the bill number
"RTN","IBJVDEQ",19,0)
 S RCBILL=$P($G(^DGCR(399,D0,0)),U,1)
"RTN","IBJVDEQ",20,0)
 ;  Use PRCA(430,"D",bill number to get 430 IEN
"RTN","IBJVDEQ",21,0)
 S RCXVBLN=$O(^PRCA(430,"D",RCBILL,""))
"RTN","IBJVDEQ",22,0)
 I RCXVBLN="" Q
"RTN","IBJVDEQ",23,0)
 ;
"RTN","IBJVDEQ",24,0)
 S DFN=$P(^DGCR(399,D0,0),U,2)
"RTN","IBJVDEQ",25,0)
 ;  Retrieve all for every new bill authorized in IB
"RTN","IBJVDEQ",26,0)
 D FIL("D")
"RTN","IBJVDEQ",27,0)
 ;
"RTN","IBJVDEQ",28,0)
 K RCBILL,RCXVBLN,RDATES
"RTN","IBJVDEQ",29,0)
 Q
"RTN","IBJVDEQ",30,0)
 ;
"RTN","IBJVDEQ",31,0)
FIL(RCXVBTY) ;  File the record into the AR Data Queue File (#348.4)
"RTN","IBJVDEQ",32,0)
 ;
"RTN","IBJVDEQ",33,0)
 ;  If a test system has 'turned off' extract, quit
"RTN","IBJVDEQ",34,0)
 I '$$GET1^DIQ(342,"1,",20.04,"I") Q
"RTN","IBJVDEQ",35,0)
 ;
"RTN","IBJVDEQ",36,0)
 ;  Input Parameter
"RTN","IBJVDEQ",37,0)
 ;    RCXVBTY = Batch Type (H=Historical, D=Daily, C=Current Fiscal Year, A=Active)
"RTN","IBJVDEQ",38,0)
 ;    RCXVBLN = Bill IEN
"RTN","IBJVDEQ",39,0)
 ;
"RTN","IBJVDEQ",40,0)
 NEW FDA,RCXVCURB,RCVXBNM,RCVXBMX
"RTN","IBJVDEQ",41,0)
 ; 
"RTN","IBJVDEQ",42,0)
 ; Where there has been any update/change to the system 
"RTN","IBJVDEQ",43,0)
 ; for a particular bill for the previous days business (T-1). 
"RTN","IBJVDEQ",44,0)
 ;
"RTN","IBJVDEQ",45,0)
 ; Get current batch
"RTN","IBJVDEQ",46,0)
BTC K ^TMP("RCXVA",$J)
"RTN","IBJVDEQ",47,0)
 D FIND^DIC(348.4,"","","P",DT,"","C","I $P(^(0),U,4)=RCXVBTY","","^TMP(""RCXVA"",$J)")
"RTN","IBJVDEQ",48,0)
 S RCXVCURB=$P(^TMP("RCXVA",$J,"DILIST",0),U,1)
"RTN","IBJVDEQ",49,0)
 S RCVXCTY="",RCXVBDT="",RCXQFL=0
"RTN","IBJVDEQ",50,0)
 ;
"RTN","IBJVDEQ",51,0)
 ;  If there is no batch for today, create a new batch
"RTN","IBJVDEQ",52,0)
 I RCXVCURB=0 D NBT G CON:'RCXQFL,BTC
"RTN","IBJVDEQ",53,0)
 ;
"RTN","IBJVDEQ",54,0)
 ; Check to see if batch is full.
"RTN","IBJVDEQ",55,0)
 S RCXVCURB=$P(^TMP("RCXVA",$J,"DILIST",RCXVCURB,0),U,1)
"RTN","IBJVDEQ",56,0)
 I RCXVCURB'=0 D
"RTN","IBJVDEQ",57,0)
 . S RCVXBNM=$P($G(^RCXV(RCXVCURB,0)),U,7) ; Number of record in batch
"RTN","IBJVDEQ",58,0)
 . S RCVXCTY=$P($G(^RCXV(RCXVCURB,0)),U,4) ; Current batch type
"RTN","IBJVDEQ",59,0)
 . S RCXVBDT=$P($G(^RCXV(RCXVCURB,0)),U,2) ; Batch Date
"RTN","IBJVDEQ",60,0)
 . S RCXVBST=$P($G(^RCXV(RCXVCURB,0)),U,3) ; Batch Status
"RTN","IBJVDEQ",61,0)
 S RCVXBMX=$P($G(^RC(342,1,20)),U,5) ; Max. # of record per batch
"RTN","IBJVDEQ",62,0)
 ;  OR if the number of records in batch exceeds the
"RTN","IBJVDEQ",63,0)
 ;  maximum number of records per batch --> create new batch
"RTN","IBJVDEQ",64,0)
 I (RCVXBNM>RCVXBMX)!(RCVXBNM=RCVXBMX)!(RCXVBST="T") D NBT G BTC:RCXQFL
"RTN","IBJVDEQ",65,0)
 ;
"RTN","IBJVDEQ",66,0)
CON ;  Continue with updating the AR Data Queue file
"RTN","IBJVDEQ",67,0)
 S RCXVDA=$S($G(RCXVCURB)'=0:RCXVCURB,1:RCXVDA)
"RTN","IBJVDEQ",68,0)
 ;
"RTN","IBJVDEQ",69,0)
 I $D(^RCXV(RCXVDA,1,RCXVBLN)) Q
"RTN","IBJVDEQ",70,0)
 ;
"RTN","IBJVDEQ",71,0)
 ; File record
"RTN","IBJVDEQ",72,0)
 NEW DIC,DIE,X,DA,DLAYGO,Y,DINUM,DO
"RTN","IBJVDEQ",73,0)
 S DA(1)=RCXVDA,DIC="^RCXV("_DA(1)_",1,",DIE=DIC,(X,DINUM)=RCXVBLN
"RTN","IBJVDEQ",74,0)
 S DLAYGO=348.41,DIC(0)="L",DIC("P")=DLAYGO
"RTN","IBJVDEQ",75,0)
 I '$D(^RCXV(DA(1),1,0)) S ^RCXV(DA(1),1,0)="^348.41^^"
"RTN","IBJVDEQ",76,0)
 D FILE^DICN
"RTN","IBJVDEQ",77,0)
 ;
"RTN","IBJVDEQ",78,0)
 S RCUPD(348.4,RCXVDA_",",.07)=(RCVXBNM+1)
"RTN","IBJVDEQ",79,0)
 S RCUPD(348.41,RCXVBLN_","_RCXVDA_",",.02)=DFN
"RTN","IBJVDEQ",80,0)
 D FILE^DIE("","RCUPD","RCERROR")
"RTN","IBJVDEQ",81,0)
 ;
"RTN","IBJVDEQ",82,0)
 K RCXVDA,RCVXBNM,RCXVBLN,RCXVCURB,RCXVBTY,RCVXBMX,RCVXCTY,RCXVBDT
"RTN","IBJVDEQ",83,0)
 K ^TMP("RCXVA",$J),IENARRAY,RCXVBST,DINUM,ERROR,RCUPD,RCXQFL
"RTN","IBJVDEQ",84,0)
 Q
"RTN","IBJVDEQ",85,0)
 ;
"RTN","IBJVDEQ",86,0)
NBT ;  Create a new batch
"RTN","IBJVDEQ",87,0)
 N $ES,$ET
"RTN","IBJVDEQ",88,0)
 S $ET="D ER^IBJVDEQ"
"RTN","IBJVDEQ",89,0)
 L +^RCXVLK:1 E  S RCXQFL=1 Q
"RTN","IBJVDEQ",90,0)
 S RCXVCURB=$P(^RCXV(0),U,3)+1
"RTN","IBJVDEQ",91,0)
 S RCVXBNM=0
"RTN","IBJVDEQ",92,0)
 S FDA(348.4,"+1,",.01)=RCXVCURB
"RTN","IBJVDEQ",93,0)
 S FDA(348.4,"+1,",.02)=DT
"RTN","IBJVDEQ",94,0)
 S FDA(348.4,"+1,",.03)="P"
"RTN","IBJVDEQ",95,0)
 S FDA(348.4,"+1,",.04)=RCXVBTY
"RTN","IBJVDEQ",96,0)
 S FDA(348.4,"+1,",.07)=RCVXBNM
"RTN","IBJVDEQ",97,0)
 D UPDATE^DIE("","FDA","IENARRAY","ERROR")
"RTN","IBJVDEQ",98,0)
 I '$D(ERROR) S RCXVDA=$G(IENARRAY(1))
"RTN","IBJVDEQ",99,0)
 L -^RCXVLK
"RTN","IBJVDEQ",100,0)
 Q
"RTN","IBJVDEQ",101,0)
 ;
"RTN","IBJVDEQ",102,0)
ER ; Unlock and log error
"RTN","IBJVDEQ",103,0)
 L -^RCXVLK
"RTN","IBJVDEQ",104,0)
 D ^%ZTER
"RTN","IBJVDEQ",105,0)
 D UNWIND^%ZTER
"RTN","IBJVDEQ",106,0)
 Q
"RTN","IBRFN4")
0^2^B21437252
"RTN","IBRFN4",1,0)
IBRFN4 ;ALB/TMK - Supported functions for AR/IB DATA EXTRACT ;15-FEB-2005
"RTN","IBRFN4",2,0)
 ;;2.0;INTEGRATED BILLING;**301**;21-MAR-94
"RTN","IBRFN4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBRFN4",4,0)
 ;
"RTN","IBRFN4",5,0)
IBAREXT(IBIFN,IBD) ; Returns data for claim IBIFN for IB/AR Extract
"RTN","IBRFN4",6,0)
 ; Data returned (pieces):
"RTN","IBRFN4",7,0)
 ; 1-MEDICARE Status (0=not MRA secondary, 1=MRA secondary)
"RTN","IBRFN4",8,0)
 ; 2-Last MRA requested date "S";7 (7 - INTERNAL)
"RTN","IBRFN4",9,0)
 ; 3-Last Electronic extract date  "TX";2 (21 - INTERNAL)
"RTN","IBRFN4",10,0)
 ; 4-Printed via EDI  "TX";7  (26 - EXTERNAL)
"RTN","IBRFN4",11,0)
 ; 5-Force Claim to Print  "TX";8  (27 - EXTERNAL)
"RTN","IBRFN4",12,0)
 ; 6-Claim MRA Status  "TX";5  (24 - EXTERNAL)
"RTN","IBRFN4",13,0)
 ; 7-MRA recorded date  "TX";3  (22 - INTERNAL)
"RTN","IBRFN4",14,0)
 ; 8-Bill cancelled date  "S";17  (17 - INTERNAL)
"RTN","IBRFN4",15,0)
 ; 9-form type  0;19   (.19 - EXTERNAL)
"RTN","IBRFN4",16,0)
 ; 10-Current Payer  $$CURR^IBCEF2(IBIFN) returns IEN;NAME (file 36)
"RTN","IBRFN4",17,0)
 ; 11-DRG 0;8==> file 45 (9 - EXTERNAL)
"RTN","IBRFN4",18,0)
 ; 12-ECME #  "M1";8 (460 - EXTERNAL)
"RTN","IBRFN4",19,0)
 ; 13-NON-VA Facility
"RTN","IBRFN4",20,0)
 ; 14-Rejections from MRA exist flag (1=YES,0=NO) $$REJ(IBIFN)
"RTN","IBRFN4",21,0)
 ; 15-National VA id number for Ins Verification (365.12;.02 - INTERNAL)
"RTN","IBRFN4",22,0)
 ; 16-Payer name (file 365.12;.01)
"RTN","IBRFN4",23,0)
 ;
"RTN","IBRFN4",24,0)
 ; IBD("PRD",seq #)=prosthetic item name^date^bill ien
"RTN","IBRFN4",25,0)
 ; IBD("IN")= TYPE OF PLAN NAME ^ GROUP NUMBER ^ RELATIONSHIP TO INSURED
"RTN","IBRFN4",26,0)
 ;   ^ SOURCE OF INFO ^ EDI ID NUMBER - INST ^ EDI ID NUMBER - PROF
"RTN","IBRFN4",27,0)
 ;   ^ INSURANCE REIMBURSE
"RTN","IBRFN4",28,0)
 ; IBD("IN","MMA")= MAILING STREET ADDRESS [LINE 1] ^
"RTN","IBRFN4",29,0)
 ;   ^ MAILING STREET ADDRESS [LINE 2] ^ CITY ^ STATE NAME  ^  ZIP
"RTN","IBRFN4",30,0)
 ;
"RTN","IBRFN4",31,0)
 N IB,IBI,IBJ,IBK,IBX,IBNODE,IBTMP,IBIN,Z
"RTN","IBRFN4",32,0)
 F IBNODE=0,"S","TX","M" S IB(IBNODE)=$G(^DGCR(399,IBIFN,IBNODE))
"RTN","IBRFN4",33,0)
 S IBD=$S($$MRASEC^IBCEF4(IBIFN):1,1:0)
"RTN","IBRFN4",34,0)
 S $P(IBD,U,2)=$P(IB("S"),U,7),$P(IBD,U,3)=$P(IB("TX"),U,2)
"RTN","IBRFN4",35,0)
 S $P(IBD,U,4)=$$GET1^DIQ(399,IBIFN_",",26,"E"),$P(IBD,U,5)=$$GET1^DIQ(399,IBIFN_",",27,"E")
"RTN","IBRFN4",36,0)
 S $P(IBD,U,6)=$$GET1^DIQ(399,IBIFN_",",24,"E"),$P(IBD,U,7)=$P(IB("TX"),U,3)
"RTN","IBRFN4",37,0)
 S $P(IBD,U,8)=$P(IB("S"),U,17),$P(IBD,U,9)=$$GET1^DIQ(399,IBIFN_",",.19,"E")
"RTN","IBRFN4",38,0)
 S Z=$$CURR^IBCEF2(IBIFN),$P(IBD,U,10)=Z_$S(Z:";"_$P($G(^DIC(36,Z,0)),U),1:"")
"RTN","IBRFN4",39,0)
 S Z=$P($G(^DIC(36,+Z,3)),U,10),$P(IBD,U,15)=$P($G(^IBE(365.12,+Z,0)),U,2),$P(IBD,U,16)=$P($G(^(0)),U)
"RTN","IBRFN4",40,0)
 S Z=$P(IB(0),U,8),$P(IBD,U,11)=$S(Z:$$GET1^DIQ(45,Z_",",9,"E"),1:"")
"RTN","IBRFN4",41,0)
 S $P(IBD,U,12)=$$GET1^DIQ(399,IBIFN_",",460,"E")
"RTN","IBRFN4",42,0)
 S Z=$P($G(^DGCR(399,IBIFN,"U2")),U,10),$P(IBD,U,13)=$S(Z:$P($G(^IBA(355.93,Z,0)),U,1),1:"")
"RTN","IBRFN4",43,0)
 ;
"RTN","IBRFN4",44,0)
 ;;;S $P(IBD,U,14)=$$REJ(IBIFN)
"RTN","IBRFN4",45,0)
 S $P(IBD,U,14)=0    ; esg 2/24/05 - until the MRA bug is fixed
"RTN","IBRFN4",46,0)
 ;
"RTN","IBRFN4",47,0)
 K IBTMP D SET^IBCSC5B(IBIFN,.IBTMP)
"RTN","IBRFN4",48,0)
 S (IBI,IBJ)=0 F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN4",49,0)
 . S IBK=0 F  S IBK=$O(IBTMP(IBI,IBK)) Q:'IBK  D
"RTN","IBRFN4",50,0)
 .. S IBX=IBTMP(IBI,IBK)
"RTN","IBRFN4",51,0)
 .. S IBJ=IBJ+1
"RTN","IBRFN4",52,0)
 .. S IBD("PRD",IBJ)=$P($$PIN^IBCSC5B(IBK),U,2)_U_IBI_U_+IBTMP
"RTN","IBRFN4",53,0)
 ;
"RTN","IBRFN4",54,0)
 S Z=" ",IBD("IN")="",DFN=+$P(IB(0),U,2)
"RTN","IBRFN4",55,0)
 F  S Z=$O(^DPT(DFN,.312,Z),-1) Q:Z=""  D  Q:Z=""
"RTN","IBRFN4",56,0)
 . S IBIN=$G(^DPT(DFN,.312,Z,0))
"RTN","IBRFN4",57,0)
 . I +IB("M")=+IBIN D
"RTN","IBRFN4",58,0)
 .. N IBQ,IBP
"RTN","IBRFN4",59,0)
 .. S IBP=+$P(IBIN,U,18),IBQ=$G(^IBA(355.3,+IBP,0))
"RTN","IBRFN4",60,0)
 .. S IBD("IN")=$S($P(IBQ,U,9):$$GET1^DIQ(355.3,IBP_",",.09,"E"),1:"")_U_$P(IBQ,U,4)_U_$P(IBIN,U,6)_U_$P($G(^DPT(DFN,.312,Z,1)),U,9)
"RTN","IBRFN4",61,0)
 .. S Z=""
"RTN","IBRFN4",62,0)
 ;
"RTN","IBRFN4",63,0)
 S Z=$G(^DIC(36,+IB("M"),3))
"RTN","IBRFN4",64,0)
 S $P(IBD("IN"),U,5)=$P(Z,U,4),$P(IBD("IN"),U,6)=$P(Z,U,2)
"RTN","IBRFN4",65,0)
 S $P(IBD("IN"),U,7)=$$GET1^DIQ(36,+IB("M")_",",1,"I")
"RTN","IBRFN4",66,0)
 S Z=$G(^DIC(36,+IB("M"),.11))
"RTN","IBRFN4",67,0)
 S IBD("IN","MMA")=$P(Z,U,1)_U_$P(Z,U,2)_U_$P(Z,U,4)_U_$S($P(Z,U,5):$P($G(^DIC(5,$P(Z,U,5),0)),U,1),1:"")_U_$P(Z,U,6)
"RTN","IBRFN4",68,0)
 ;
"RTN","IBRFN4",69,0)
 Q IBD
"RTN","IBRFN4",70,0)
 ;
"RTN","IBRFN4",71,0)
IBACT(IBIFN,IBARRY) ; Returns IB actions for bill ien IBIFN
"RTN","IBRFN4",72,0)
 ;IBARRY should be passed by reference and returns:
"RTN","IBRFN4",73,0)
 ;
"RTN","IBRFN4",74,0)
 ; IBARRY(seq)=AR bill #^reference #^external STATUS^IB ACTION TYPE NAME
"RTN","IBRFN4",75,0)
 ;             ^UNITS^TOTAL CHARGE^DT BILLD FROM^DT BILLD TO^AR BILL IEN
"RTN","IBRFN4",76,0)
 ;             ^DT ENTRY ADDED^PATIENT SSN^EVENT DATE^RESULTING FROM
"RTN","IBRFN4",77,0)
 ;             ^INSTITUTION IEN
"RTN","IBRFN4",78,0)
 ;
"RTN","IBRFN4",79,0)
 N IBNA,IB,IB0,DFN,IBCT,Z
"RTN","IBRFN4",80,0)
 S IBNA=$$BN1^PRCAFN(IBIFN),IB="",IBCT=0
"RTN","IBRFN4",81,0)
 F  S IB=$O(^IB("ABIL",IBNA,IB)) Q:IB=""  D
"RTN","IBRFN4",82,0)
 . S IBCT=IBCT+1
"RTN","IBRFN4",83,0)
 . S IB0=$G(^IB(IB,0))
"RTN","IBRFN4",84,0)
 . I $G(DFN)="" S DFN=$P(IB0,U,2)
"RTN","IBRFN4",85,0)
 . ;
"RTN","IBRFN4",86,0)
 . S IBARRY=IBNA_U_$P(IB0,U,1)_U_$$GET1^DIQ(350,IB_",",.05,"E")
"RTN","IBRFN4",87,0)
 . S Z=$P(IB0,U,3)
"RTN","IBRFN4",88,0)
 . S IBARRY=IBARRY_U_$S(Z'="":$P($G(^IBE(350.1,Z,0)),U,1),1:"")
"RTN","IBRFN4",89,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,6) ; UNITS
"RTN","IBRFN4",90,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,7) ; TOTAL CHARGE
"RTN","IBRFN4",91,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,14) ; DT BILLD FROM
"RTN","IBRFN4",92,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,15) ; DT BILLD TO
"RTN","IBRFN4",93,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,11) ; AR BILL #
"RTN","IBRFN4",94,0)
 . S IBARRY=IBARRY_U_$P($P($G(^IB(IB,1)),U,2),".",1) ; DT ENTRY ADDED
"RTN","IBRFN4",95,0)
 . S IBARRY=IBARRY_U_$P(^DPT(DFN,0),U,9) ; SSN
"RTN","IBRFN4",96,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,17) ; EVENT DT
"RTN","IBRFN4",97,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,4) ;RESULTING FROM
"RTN","IBRFN4",98,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,13) ; Institution
"RTN","IBRFN4",99,0)
 . S IBARRY(IBCT)=IBARRY,IBARRY=""
"RTN","IBRFN4",100,0)
 Q
"RTN","IBRFN4",101,0)
 ;
"RTN","IBRFN4",102,0)
REJ(IBIFN) ; Returns 1 if any rejects found for MRA secondary claim or for
"RTN","IBRFN4",103,0)
 ; any preceding claims it was cancelled/cloned from
"RTN","IBRFN4",104,0)
 N X,Y,I,X1,X2,X3,D0,CURSEQ
"RTN","IBRFN4",105,0)
 S Y=0 ;Y=REJECT FLAG
"RTN","IBRFN4",106,0)
 G:'$$MRASEC^IBCEF4(IBIFN) REJQ ; Not MEDICARE secondary
"RTN","IBRFN4",107,0)
 S CURSEQ=$$COBN^IBCEF(IBIFN),X1=+$P($G(^DGCR(399,IBIFN,0)),U,15)
"RTN","IBRFN4",108,0)
 S D0=IBIFN
"RTN","IBRFN4",109,0)
 F  D  Q:'D0!Y
"RTN","IBRFN4",110,0)
 . ; claim copied from not cancelled and not MRA secondary claim
"RTN","IBRFN4",111,0)
 . I X1,$P($G(^DGCR(399,X1,0)),U,13)'=7,X1'=IBIFN S D0="" Q
"RTN","IBRFN4",112,0)
 . I X1,$P($G(^DGCR(399,X1,0)),U,19)'=$P($G(^DGCR(399,D0,0)),U,19) S D0="" Q
"RTN","IBRFN4",113,0)
 . S I=0 F  S I=$O(^IBM(361,"B",D0,I)) Q:'I  D  Q:Y
"RTN","IBRFN4",114,0)
 .. S X2=$G(^IBM(361,I,0))
"RTN","IBRFN4",115,0)
 .. Q:$P(X2,U,3)'="R"!'$P(X2,U,11)  ;No reject or no transmit bill
"RTN","IBRFN4",116,0)
 .. S X3=$TR($P($G(^IBA(364,+$P(X2,U,11),0)),U,8),"PST","123") ;status msg seq
"RTN","IBRFN4",117,0)
 .. Q:X3'=(CURSEQ-1)
"RTN","IBRFN4",118,0)
 .. S Y=1
"RTN","IBRFN4",119,0)
 . I 'Y S D0=X1,X1=+$P($G(^DGCR(399,X1,0)),U,15) S:X1=D0 D0="" Q
"RTN","IBRFN4",120,0)
REJQ Q Y
"RTN","IBRFN4",121,0)
 ;
"VER")
8.0^22.0
"BLD",6033,6)
^SEQ #279
**END**
**END**
