EMERGENCY Released MPIF*1*46 SEQ #45
Extracted from mail message
**KIDS**:MPIF*1.0*46^

**INSTALL NAME**
MPIF*1.0*46
"BLD",2477,0)
MPIF*1.0*46^MASTER PATIENT INDEX VISTA^0^3070301^y
"BLD",2477,1,0)
^^3^3^3070213^
"BLD",2477,1,1,0)
MPI CHANGES 4 - FROM IMDQ UAT TESTING
"BLD",2477,1,2,0)
Refer to patch MPIF*1*46 in the FORUM Patch Module for a complete
"BLD",2477,1,3,0)
description.
"BLD",2477,4,0)
^9.64PA^^
"BLD",2477,6.3)
5
"BLD",2477,"ABNS",0)
^9.66A^^
"BLD",2477,"ABPKG")
^^
"BLD",2477,"KRN",0)
^9.67PA^8989.52^19
"BLD",2477,"KRN",.4,0)
.4
"BLD",2477,"KRN",.401,0)
.401
"BLD",2477,"KRN",.402,0)
.402
"BLD",2477,"KRN",.403,0)
.403
"BLD",2477,"KRN",.5,0)
.5
"BLD",2477,"KRN",.84,0)
.84
"BLD",2477,"KRN",3.6,0)
3.6
"BLD",2477,"KRN",3.8,0)
3.8
"BLD",2477,"KRN",9.2,0)
9.2
"BLD",2477,"KRN",9.8,0)
9.8
"BLD",2477,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",2477,"KRN",9.8,"NM",1,0)
MPIFAPI^^0^B47315880
"BLD",2477,"KRN",9.8,"NM",2,0)
MPIFA43^^0^B27108950
"BLD",2477,"KRN",9.8,"NM",3,0)
MPIFDUP^^0^B52134006
"BLD",2477,"KRN",9.8,"NM",4,0)
MPIFA31B^^0^B15257551
"BLD",2477,"KRN",9.8,"NM","B","MPIFA31B",4)

"BLD",2477,"KRN",9.8,"NM","B","MPIFA43",2)

"BLD",2477,"KRN",9.8,"NM","B","MPIFAPI",1)

"BLD",2477,"KRN",9.8,"NM","B","MPIFDUP",3)

"BLD",2477,"KRN",19,0)
19
"BLD",2477,"KRN",19.1,0)
19.1
"BLD",2477,"KRN",101,0)
101
"BLD",2477,"KRN",409.61,0)
409.61
"BLD",2477,"KRN",771,0)
771
"BLD",2477,"KRN",870,0)
870
"BLD",2477,"KRN",8989.51,0)
8989.51
"BLD",2477,"KRN",8989.52,0)
8989.52
"BLD",2477,"KRN",8994,0)
8994
"BLD",2477,"KRN","B",.4,.4)

"BLD",2477,"KRN","B",.401,.401)

"BLD",2477,"KRN","B",.402,.402)

"BLD",2477,"KRN","B",.403,.403)

"BLD",2477,"KRN","B",.5,.5)

"BLD",2477,"KRN","B",.84,.84)

"BLD",2477,"KRN","B",3.6,3.6)

"BLD",2477,"KRN","B",3.8,3.8)

"BLD",2477,"KRN","B",9.2,9.2)

"BLD",2477,"KRN","B",9.8,9.8)

"BLD",2477,"KRN","B",19,19)

"BLD",2477,"KRN","B",19.1,19.1)

"BLD",2477,"KRN","B",101,101)

"BLD",2477,"KRN","B",409.61,409.61)

"BLD",2477,"KRN","B",771,771)

"BLD",2477,"KRN","B",870,870)

"BLD",2477,"KRN","B",8989.51,8989.51)

"BLD",2477,"KRN","B",8989.52,8989.52)

"BLD",2477,"KRN","B",8994,8994)

"BLD",2477,"QUES",0)
^9.62^^
"BLD",2477,"REQB",0)
^9.611^2^2
"BLD",2477,"REQB",1,0)
MPIF*1.0*41^2
"BLD",2477,"REQB",2,0)
MPIF*1.0*44^2
"BLD",2477,"REQB","B","MPIF*1.0*41",1)

"BLD",2477,"REQB","B","MPIF*1.0*44",2)

"MBREQ")
0
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
46^3070301
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3070301
"PKG",282,22,1,"PAH",1,1,1,0)
MPI CHANGES 4 - FROM IMDQ UAT TESTING
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1*46 in the FORUM Patch Module for a complete
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","MPIFA31B")
0^4^B15257551^B16253562
"RTN","MPIFA31B",1,0)
MPIFA31B ;BP/CMC-BUILD A31 MSGS ;FEB 5, 2002
"RTN","MPIFA31B",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22,24,27,28,31,25,44,46**;30 Apr 99;Build 5
"RTN","MPIFA31B",3,0)
 ;
"RTN","MPIFA31B",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA31B",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA31B",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA31B",7,0)
 ;  $$PV1^VAFCSB, $$RADE^VAFCSB, $$LABE^VAFCSB, $$PHARA^VAFCSB, $$PV2^VAFCSB - #4921
"RTN","MPIFA31B",8,0)
TA31 ; Tasked entry point
"RTN","MPIFA31B",9,0)
 N TMP
"RTN","MPIFA31B",10,0)
 S TMP=$$A31(DFN)
"RTN","MPIFA31B",11,0)
 Q
"RTN","MPIFA31B",12,0)
 ;
"RTN","MPIFA31B",13,0)
A31(DFN) ;BUILD AND SEND A31
"RTN","MPIFA31B",14,0)
 I $P($$SITE^VASITE,"^",3)=200 Q 1
"RTN","MPIFA31B",15,0)
 ; ^ PATCH 25 IF this is the FHIE Host system, don't build A31 messages
"RTN","MPIFA31B",16,0)
 N RESLT,CNT,MPI,EVN,TCNT,ERR,PD1,PID,EN,LAB,PV1,PV2,RAD,PRE,ZPD
"RTN","MPIFA31B",17,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIFA31B",18,0)
 Q:$E($$GETICN^MPIF001(DFN),1,3)=$P($$SITE^VASITE(),"^",3) 0
"RTN","MPIFA31B",19,0)
 ; ^ LOCAL ICN DON'T SEND
"RTN","MPIFA31B",20,0)
 Q:+$$GETICN^MPIF001(DFN)=-1 0
"RTN","MPIFA31B",21,0)
 ; ^ NO ICN DON'T SEND
"RTN","MPIFA31B",22,0)
 S CNT=1
"RTN","MPIFA31B",23,0)
 D INIT^HLFNC2("MPIF ADT-A31 SERVER",.HL)
"RTN","MPIFA31B",24,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA31B",25,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA31B",26,0)
 S ERR="",TCNT=0
"RTN","MPIFA31B",27,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A31",.ERR)
"RTN","MPIFA31B",28,0)
 Q:ERR'="" ERR
"RTN","MPIFA31B",29,0)
 D BLDPID^VAFCQRY(DFN,1,"ALL",.PID,.HL,.ERR) ;**25
"RTN","MPIFA31B",30,0)
 Q:ERR'="" ERR
"RTN","MPIFA31B",31,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR) ;**44 NEW PD1 SEGMENT VALUES -- SENDING CMOR AGAIN AS WITHOUT 40 ON THE MPI SIDE THIS IS A PROBLEM.
"RTN","MPIFA31B",32,0)
 ;S PD1=$$PD1^VAFCSB ;**44 NEW PD1 SEGMENT VALUES -- IMDQ DECIDED NOT TO SEND PREFERRED FACILITY 9/7/06
"RTN","MPIFA31B",33,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") I $T D
"RTN","MPIFA31B",34,0)
 .;**44 VAFCSB coming in with DG*5.3*707
"RTN","MPIFA31B",35,0)
 .S PV1=$$PV1^VAFCSB ;**44 PV1 segment
"RTN","MPIFA31B",36,0)
 .S RAD=$$RADE^VAFCSB ;**44 OBX FOR LAST RADIOLOGY EXAM
"RTN","MPIFA31B",37,0)
 .S LAB=$$LABE^VAFCSB ;**44 OBX FOR LAST LAB EXAM
"RTN","MPIFA31B",38,0)
 .S PRE=$$PHARA^VAFCSB ;**44 OBX FOR ACTIVE PRESCRIPTIONS
"RTN","MPIFA31B",39,0)
 .S PV2=$$PV2^VAFCSB ;**44 PV2 segment
"RTN","MPIFA31B",40,0)
 S ZPD=$$EN1^VAFHLZPD(DFN,"1,17,21,34") ;25 ;**44 ADDED PSEUDO SSN REASON (34), 1 and 21 TO ZPD SEGMENT
"RTN","MPIFA31B",41,0)
 S EN=1
"RTN","MPIFA31B",42,0)
 S HLA("HLS",EN)=EVN(1),EN=EN+1
"RTN","MPIFA31B",43,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA31B",44,0)
 .I CNT=1 S HLA("HLS",EN)=PID(CNT)
"RTN","MPIFA31B",45,0)
 .I CNT>1 S HLA("HLS",EN,CNT-1)=PID(CNT)
"RTN","MPIFA31B",46,0)
 S EN=EN+1
"RTN","MPIFA31B",47,0)
 I $G(PD1(1))'="" S HLA("HLS",EN)=PD1(1),EN=EN+1 ;**44 only pass PD1 segment if has values -- SENDING CMOR AGAIN AS WITHOUT 40 ON MPI SIDE THIS IS A PROBLEM.
"RTN","MPIFA31B",48,0)
 I $G(PV1)'="" S HLA("HLS",EN)=PV1,EN=EN+1 ;**44 only pass PV1 segment if has values
"RTN","MPIFA31B",49,0)
 I $G(PV2)'="" S HLA("HLS",EN)=PV2,EN=EN+1 ;**44 only pass PV2 segment if has values
"RTN","MPIFA31B",50,0)
 I $G(RAD)'="" S HLA("HLS",EN)=RAD,EN=EN+1 ;**44 only pass RADIOLOGY IN OBX segment if has values
"RTN","MPIFA31B",51,0)
 I $G(LAB)'="" S HLA("HLS",EN)=LAB,EN=EN+1 ;**44 only pass LAB IN OBX segment if has values
"RTN","MPIFA31B",52,0)
 I $G(PRE)'="" S HLA("HLS",EN)=PRE,EN=EN+1 ;**44 only pass PRESCRIPTION IN OBX segment if has values
"RTN","MPIFA31B",53,0)
 S HLA("HLS",EN)=ZPD,EN=EN+1 ;**44 ZPD SEGMENT
"RTN","MPIFA31B",54,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA31B",55,0)
 Q:$P($G(MPI),"^")=-1 "-1^No logical link defined for the MPI"
"RTN","MPIFA31B",56,0)
 S HLL("LINKS",1)="MPIF ADT-A31 CLIENT^"_MPI
"RTN","MPIFA31B",57,0)
 D GENERATE^HLMA("MPIF ADT-A31 SERVER","LM",1,.MPIFRSLT,"","")
"RTN","MPIFA31B",58,0)
 S RESLT=$S(+MPIFRSLT:MPIFRSLT,1:$P(MPIFRSLT,"^",3))
"RTN","MPIFA31B",59,0)
 S ^XTMP("MPIFA31%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"MPIA31 msg to MPI for DFN "_DFN
"RTN","MPIFA31B",60,0)
 I '+RESLT S ^XTMP("MPIFA31%"_DFN,"MPI",0)="A"
"RTN","MPIFA31B",61,0)
 K HLA,HLL("LINKS"),COMP,REP,SUBCOMP,HLA("HLA"),HLA("HLS"),MPIFRSLT
"RTN","MPIFA31B",62,0)
 ;**44 REMOVED HLEID, HLECH AND HLFS from Kill line above
"RTN","MPIFA31B",63,0)
 Q RESLT
"RTN","MPIFA31B",64,0)
 ;
"RTN","MPIFA31B",65,0)
RES ;
"RTN","MPIFA31B",66,0)
 N NXT,DFN,ERROR,CODE S CODE=""
"RTN","MPIFA31B",67,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA31B",68,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2),ERROR=$P(HLNODE,HL("FS"),4),CODE=$P(HLNODE,HL("FS"),2)
"RTN","MPIFA31B",69,0)
 .I $E(HLNODE,1,3)="MSA"&(CODE="AR") D
"RTN","MPIFA31B",70,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA31B",71,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA31B",72,0)
 ..;**44 check which type of exception to be logged
"RTN","MPIFA31B",73,0)
 ..D EXC^RGHLLOG(234,ERROR,DFN) ;**46
"RTN","MPIFA31B",74,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA31B",75,0)
 K ^XTMP("MPIFA31%"_DFN)
"RTN","MPIFA31B",76,0)
 Q
"RTN","MPIFA43")
0^2^B27108950^B25989400
"RTN","MPIFA43",1,0)
MPIFA43 ;BIR/DLR-Utility for processing an ADT-A43 Un-link ID ;MAR 18, 2002
"RTN","MPIFA43",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22,41,46**;30 Apr 99;Build 5
"RTN","MPIFA43",3,0)
DBIA ; Supported IA's
"RTN","MPIFA43",4,0)
 ;
"RTN","MPIFA43",5,0)
 ;IA: 2796  - EXC, START, and STOP^RGHLLOG
"RTN","MPIFA43",6,0)
 ;IA: 2988  - $$DELALLTF and $$DELETETF^VAFCTFU
"RTN","MPIFA43",7,0)
 ;IA: 3767  - PIDP^RGADTP1
"RTN","MPIFA43",8,0)
 ;
"RTN","MPIFA43",9,0)
IN ;Entry point for processing ADT-A43 - Move patient information
"RTN","MPIFA43",10,0)
 ;Called from the MPIF ADT-A43 CLIENT protocol processing routine
"RTN","MPIFA43",11,0)
 ;There are no inputs or outputs
"RTN","MPIFA43",12,0)
 ;
"RTN","MPIFA43",13,0)
 N MPIF,STATN,MPIFI,MSG,SG,MPIFARR,PDFN,INST,MFUPT,PDLT,TFIEN,ICNAUTH,MPISITE,MRG
"RTN","MPIFA43",14,0)
 N ICN,HLCOMP,CNT,X,MPIFERR,MPIFX,MPIDFN,MPISSN,ERROR,DFN,NODE,CMOR2,PID,ARRAY
"RTN","MPIFA43",15,0)
 S MPISSN="",MPIDFN="",ICN="",ERROR=""
"RTN","MPIFA43",16,0)
INIT ;Process in the ADT-A43 Move Patient Identifier msg
"RTN","MPIFA43",17,0)
  F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE D
"RTN","MPIFA43",18,0)
 .S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIFA43",19,0)
 .S SG=$E(HLNODE,1,3),MPIF(MPII)=HLNODE D:SG?2A1(1A,1N) PICK
"RTN","MPIFA43",20,0)
 .;**45 ABOVE TO REPLACE COMMENTED LINE BELOW
"RTN","MPIFA43",21,0)
 ;F MPIFI=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,MPIF(MPIFI))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","MPIFA43",22,0)
 D MOVE(.ARRAY,.ERROR)
"RTN","MPIFA43",23,0)
 ;create response message
"RTN","MPIFA43",24,0)
 S CNT=1
"RTN","MPIFA43",25,0)
 S HLA("HLA",1)="MSA"_HL("FS")_$S($G(ERROR)=0:"AA",1:"AE")_HL("FS")_HL("MID")_HL("FS")_$S($G(ERROR)=0:"",1:$P(ERROR,"^",2)) S CNT=CNT+1
"RTN","MPIFA43",26,0)
 D ROUTE
"RTN","MPIFA43",27,0)
 ;Send back the appl. ack (ACK) with the ADT-A43 transaction status
"RTN","MPIFA43",28,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.MPIFERR,"",.HLP)
"RTN","MPIFA43",29,0)
 Q
"RTN","MPIFA43",30,0)
PICK ;check routine for segment entry point
"RTN","MPIFA43",31,0)
 I $T(@SG)]"" D @SG
"RTN","MPIFA43",32,0)
 I $T(@SG)="" Q
"RTN","MPIFA43",33,0)
 Q
"RTN","MPIFA43",34,0)
MSH ;;MSH
"RTN","MPIFA43",35,0)
 ;process the MSH segment
"RTN","MPIFA43",36,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","MPIFA43",37,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPIFA43",38,0)
 S MPIFARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","MPIFA43",39,0)
 Q
"RTN","MPIFA43",40,0)
EVN ;;EVN
"RTN","MPIFA43",41,0)
 ;process the EVN segment
"RTN","MPIFA43",42,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIFA43",43,0)
 Q
"RTN","MPIFA43",44,0)
PID ;;PID
"RTN","MPIFA43",45,0)
 ;process the PID segment
"RTN","MPIFA43",46,0)
 N COMP,REP,SUBCOMP,AUTH,IDTYP,LOC,AUTHTYP,MPIJ
"RTN","MPIFA43",47,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIFA43",48,0)
 S MPIJ=$P(MSG,HL("FS"),2)
"RTN","MPIFA43",49,0)
 D PIDP^RGADTP1(.MSG,.ARRAY,.HL)
"RTN","MPIFA43",50,0)
 ;ARRAY("ICN") = NEW ICN  and  ARRAY("DFN") = mismatched record to be corrected
"RTN","MPIFA43",51,0)
 Q
"RTN","MPIFA43",52,0)
PD1 ;processing PD1 fields for new CMOR
"RTN","MPIFA43",53,0)
 N COMP
"RTN","MPIFA43",54,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIFA43",55,0)
 S ARRAY("CMOR")=$P($P(HLNODE,HL("FS"),4),COMP,3)
"RTN","MPIFA43",56,0)
 Q
"RTN","MPIFA43",57,0)
MRG ;
"RTN","MPIFA43",58,0)
 N COMP,REP,SUBCOMP,AUTH,IDTYP,LOC,AUTHTYP,FID,ID
"RTN","MPIFA43",59,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIFA43",60,0)
 N MPIFX,ID,AUTH
"RTN","MPIFA43",61,0)
 S FID=$P(MSG,HL("FS"),2)
"RTN","MPIFA43",62,0)
 F MPIFX=1:1:$L(FID,REP)+1 S ID=$P(FID,REP,MPIFX),PID=$P(ID,COMP),AUTH=$P($P(ID,COMP,4),SUBCOMP),AUTHTYP=$P($P(ID,COMP,4),SUBCOMP,2),IDTYP=$P(ID,COMP,5),LOC=$P($P(ID,COMP,6),SUBCOMP,2) D
"RTN","MPIFA43",63,0)
 . I AUTH="USSSA" S MPISSN=PID
"RTN","MPIFA43",64,0)
 . ;capture the old or mismatched ICN in ARRAY("ICNMISMATCH")
"RTN","MPIFA43",65,0)
 . I AUTH="USVHA" I IDTYP="NI" S (ARRAY("ICNMISMATCH"),ICN)=PID S ARRAY("ICNMISMATCHLOC")=LOC
"RTN","MPIFA43",66,0)
 . I AUTH="USVHA" I IDTYP="PI" S MPIDFN=PID S ARRAY("DFNLOC")=LOC
"RTN","MPIFA43",67,0)
 Q
"RTN","MPIFA43",68,0)
RSP ;response process logic entry point
"RTN","MPIFA43",69,0)
 Q
"RTN","MPIFA43",70,0)
ROUTE ;routing logic entry point
"RTN","MPIFA43",71,0)
 N MPI S MPI=$$MPILINK^MPIFAPI() D
"RTN","MPIFA43",72,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="MPIF ADT-A43 CLIENT"_"^"_MPI
"RTN","MPIFA43",73,0)
 .I $P($G(MPI),U)=-1 D
"RTN","MPIFA43",74,0)
 ..N RGLOG D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA43",75,0)
 ..D EXC^RGHLLOG(224,"No MPI link identified ",$G(PDFN))
"RTN","MPIFA43",76,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA43",77,0)
 Q
"RTN","MPIFA43",78,0)
MOVE(ARRAY,ERROR) ;
"RTN","MPIFA43",79,0)
 ;replace ARRAY("ICNMISMATCHED") with ARRAY("ICN")
"RTN","MPIFA43",80,0)
 N MPIARR
"RTN","MPIFA43",81,0)
 S ERROR=0
"RTN","MPIFA43",82,0)
 ;I ARRAY("DFNLOC")="" OLD MESSAGING SO USE ARRAY("ICNMISMATCHLOC")
"RTN","MPIFA43",83,0)
 I $G(ARRAY("DFNLOC"))="" S ARRAY("DFNLOC")=ARRAY("ICNMISMATCHLOC")
"RTN","MPIFA43",84,0)
 I $G(ARRAY("CMOR"))="" S ARRAY("CMOR")=ARRAY("DFNLOC")
"RTN","MPIFA43",85,0)
 ;if assigning authority'= site station# then Quit because this is not the mismatched site so MFN-M05 sent as a result of site removal on MPI will remove it from all sites TF list
"RTN","MPIFA43",86,0)
 I ARRAY("DFNLOC")'=$P($$SITE^VASITE,"^",3) D  Q
"RTN","MPIFA43",87,0)
 .;if assigning authority '= site station# then remove assigning authority from TF list for the given ICN
"RTN","MPIFA43",88,0)
 .N MPISITE S MPISITE=$$IEN^XUAF4(ARRAY("DFNLOC"))
"RTN","MPIFA43",89,0)
 . I ARRAY("DFNLOC")'>0 S ERROR="-1^Unable to remove station#"_ARRAY("DFNLOC")_" from TF list" Q
"RTN","MPIFA43",90,0)
 . I +ARRAY("DFNLOC")>0 S ERROR=$$DELETETF^VAFCTFU(+ARRAY("ICNMISMATCH"),MPISITE)
"RTN","MPIFA43",91,0)
 ;delete all TF's for this mismatched record
"RTN","MPIFA43",92,0)
 S ERROR=$$DELALLTF^VAFCTFU(ARRAY("ICNMISMATCH"))
"RTN","MPIFA43",93,0)
 ;if ARRAY("DFN")="" assume this is old message format and use ARRAY("ICNMISMATCHED") to get the DFN that was mismatched
"RTN","MPIFA43",94,0)
 I $G(ARRAY("DFN"))="" D  Q
"RTN","MPIFA43",95,0)
 . S ARRAY("DFN")=$$GETDFN^MPIF001(ARRAY("ICNMISMATCH")) I +ARRAY("DFN")'>0 S ERROR="-1^Unable to break ICN "_ARRAY("ICNMISMATCH")_" because that ICN is unknown"
"RTN","MPIFA43",96,0)
 . Q:+$G(ERROR)=-1
"RTN","MPIFA43",97,0)
 . S MPIARR(991.01)="@",MPIARR(991.02)="@",MPIARR(991.03)="@",MPIARR(991.05)="@",MPIARR(992)=$P(ARRAY("ICNMISMATCH"),"V"),MPIARR(993)=$P($$SITE^VASITE,"^")
"RTN","MPIFA43",98,0)
 . S ERROR=$$UPDATE^MPIFAPI(ARRAY("DFN"),"MPIARR",1)
"RTN","MPIFA43",99,0)
 ;if new messaging
"RTN","MPIFA43",100,0)
 I ARRAY("ICN")'="""" D
"RTN","MPIFA43",101,0)
 . ;delete the entry first to prevent the ICN from going into history
"RTN","MPIFA43",102,0)
 . S MPIARR(991.01)="@",MPIARR(991.02)="@",MPIARR(991.03)="@",MPIARR(991.05)="@",MPIARR(992)=$P(ARRAY("ICNMISMATCH"),"V"),MPIARR(993)=$P($$SITE^VASITE,"^")
"RTN","MPIFA43",103,0)
 . S ERROR=$$UPDATE^MPIFAPI(ARRAY("DFN"),"MPIARR",1)
"RTN","MPIFA43",104,0)
 . ;update the record with the new ICN
"RTN","MPIFA43",105,0)
 . S MPIARR(991.01)=$P(ARRAY("ICN"),"V"),MPIARR(991.02)=$P(ARRAY("ICN"),"V",2),MPIARR(991.03)=$$IEN^XUAF4(ARRAY("CMOR")),MPIARR(991.05)="@",MPIARR(992)=$P(ARRAY("ICNMISMATCH"),"V"),MPIARR(993)=$P($$SITE^VASITE,"^")
"RTN","MPIFA43",106,0)
 ;move the mismatched record from ARRAY("ICNMISMATCH") to ARRAY("ICN")
"RTN","MPIFA43",107,0)
 S ERROR=$$UPDATE^MPIFAPI(ARRAY("DFN"),"MPIARR",1)
"RTN","MPIFA43",108,0)
 ;add LOCAL site to TF, if CMOR is different it will be auto added
"RTN","MPIFA43",109,0)
 D FILE^VAFCTFU(ARRAY("DFN"),+$$SITE^VASITE,1)
"RTN","MPIFA43",110,0)
 Q
"RTN","MPIFAPI")
0^1^B47315880^B47331120
"RTN","MPIFAPI",1,0)
MPIFAPI ;CMC/BP-APIS FOR MPI ;DEC 21, 1998
"RTN","MPIFAPI",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,14,16,17,21,27,28,33,35,37,43,45,44,46**;30 Apr 99;Build 5
"RTN","MPIFAPI",3,0)
 ; Integration Agreements Utilized:
"RTN","MPIFAPI",4,0)
 ;   ^DPT( - #2070 and #4079
"RTN","MPIFAPI",5,0)
 ;   ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFAPI",6,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFAPI",7,0)
 ;
"RTN","MPIFAPI",8,0)
EN2() ;NEW ENTRY POINT FOR LOCALS
"RTN","MPIFAPI",9,0)
 N MPIOUT,DIC,MPICHK,MPINCK,MPINNM,MPINUM1,DA,MPINUM
"RTN","MPIFAPI",10,0)
 I $O(^MPIF(984.1,0))="" G SETUP
"RTN","MPIFAPI",11,0)
AGN2 L +^MPIF(984.1):1 E  H 3 G AGN2
"RTN","MPIFAPI",12,0)
 S MPINUM=0,X=$$SITE^VASITE,X=$P(X,"^",3),X=X\1
"RTN","MPIFAPI",13,0)
 S DIC="^MPIF(984.1,",DIC(0)="XZ" D ^DIC
"RTN","MPIFAPI",14,0)
 S MPINUM1=$P(Y(0),"^",4),MPICHK=$P(Y(0),"^",5),MPINNM=MPINUM1+1
"RTN","MPIFAPI",15,0)
 S MPINUM=MPINUM1_"V"_MPICHK,MPINCK=$$CHECKDG^MPIFSPC(MPINNM)
"RTN","MPIFAPI",16,0)
 S DA=1,DIE="^MPIF(984.1,",DR="1////^S X=MPINUM1;2////^S X=MPICHK;3////^S X=MPINNM;5////"_MPINCK
"RTN","MPIFAPI",17,0)
 D ^DIE
"RTN","MPIFAPI",18,0)
 K DIE,DR,X,Y
"RTN","MPIFAPI",19,0)
 L -^MPIF(984.1)
"RTN","MPIFAPI",20,0)
 Q MPINUM
"RTN","MPIFAPI",21,0)
SETUP ;
"RTN","MPIFAPI",22,0)
 N CHK,NUM,NXTCHK,NXTNUM,SITE,DA
"RTN","MPIFAPI",23,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFAPI",24,0)
 S DIC="^MPIF(984.1,",DA=1,DIC(0)="",X=SITE
"RTN","MPIFAPI",25,0)
 S NUM=SITE_"0000000",CHK=$$CHECKDG^MPIFSPC(NUM),MPINUM=NUM_"V"_CHK
"RTN","MPIFAPI",26,0)
 S NXTNUM=NUM+1,NXTCHK=$$CHECKDG^MPIFSPC(NXTNUM)
"RTN","MPIFAPI",27,0)
 S DIC("DR")="1////^S X=NUM;2////^S X=CHK;3////^S X=NXTNUM;5////"_NXTCHK
"RTN","MPIFAPI",28,0)
 K DD,D0
"RTN","MPIFAPI",29,0)
 D FILE^DICN
"RTN","MPIFAPI",30,0)
 K DIC,X,Y
"RTN","MPIFAPI",31,0)
 Q MPINUM
"RTN","MPIFAPI",32,0)
 ;
"RTN","MPIFAPI",33,0)
MPILINK() ;returns MPI logical Link
"RTN","MPIFAPI",34,0)
 N MPIL,MPILINK
"RTN","MPIFAPI",35,0)
 D LINK^HLUTIL3("MPI",.MPIL)
"RTN","MPIFAPI",36,0)
 I '$D(MPIL) Q "-1^NOT DEFINED"
"RTN","MPIFAPI",37,0)
 S MPILINK=$O(MPIL(0))
"RTN","MPIFAPI",38,0)
 I MPILINK="" Q "-1^NOT DEFINED"
"RTN","MPIFAPI",39,0)
 S MPILINK=$G(MPIL(MPILINK))
"RTN","MPIFAPI",40,0)
 Q MPILINK
"RTN","MPIFAPI",41,0)
 ;
"RTN","MPIFAPI",42,0)
SUBNUM(DFN) ; returns SCN from MPI node for given DFN
"RTN","MPIFAPI",43,0)
 ; DFN - ien of patient file
"RTN","MPIFAPI",44,0)
 ; returns:  -1^error message << always returns.
"RTN","MPIFAPI",45,0)
 ;*** Subscription control numbers no longer exist
"RTN","MPIFAPI",46,0)
 Q "-1^No Subscription Control Number for DFN "_DFN
"RTN","MPIFAPI",47,0)
 ;
"RTN","MPIFAPI",48,0)
MPINODE(DFN) ; returns MPI node for given DFN
"RTN","MPIFAPI",49,0)
 ; DFN - patient file ien
"RTN","MPIFAPI",50,0)
 ; returns:  -1^error message or MPI node from patient file
"RTN","MPIFAPI",51,0)
 N TMP
"RTN","MPIFAPI",52,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",53,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",54,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",55,0)
 L +^DPT("MPI",DFN):10 ;**45 added lock check for getting ICN data back
"RTN","MPIFAPI",56,0)
 N NODE S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIFAPI",57,0)
 I NODE=""!(NODE?."^") S NODE="-1^No MPI data for DFN "_DFN
"RTN","MPIFAPI",58,0)
 I +NODE>0 D
"RTN","MPIFAPI",59,0)
 .;**45 checking if checksum for ICN is correct, if not update the 991.02 field
"RTN","MPIFAPI",60,0)
 .; and include new value in NODE returned.
"RTN","MPIFAPI",61,0)
 .N CHK S CHK=$$CHECKDG^MPIFSPC($P(NODE,"^"))
"RTN","MPIFAPI",62,0)
 .I CHK'=$P(NODE,"^",2) S TMP=$$SETICN^MPIF001(DFN,$P(NODE,"^"),CHK) S $P(NODE,"^",2)=CHK
"RTN","MPIFAPI",63,0)
 L -^DPT("MPI",DFN)
"RTN","MPIFAPI",64,0)
 Q NODE
"RTN","MPIFAPI",65,0)
 ;
"RTN","MPIFAPI",66,0)
GETADFN(ICN) ; return DFN ONLY if ICN is the active ICN
"RTN","MPIFAPI",67,0)
 ; ICN - Integration Control Number for patient to be returned
"RTN","MPIFAPI",68,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",69,0)
 ;           DFN - IEN for the patient entry in the Patient file (#2)
"RTN","MPIFAPI",70,0)
 N RETURN,DFN
"RTN","MPIFAPI",71,0)
 I $G(ICN)'>0 Q "-1^NO ICN"
"RTN","MPIFAPI",72,0)
 I '$D(^DPT("AICN",ICN)) Q "-1^ICN NOT IN DATABASE"
"RTN","MPIFAPI",73,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIFAPI",74,0)
 I $G(DFN)'>0 Q "-1^BAD AICN CROSS-REFERENCE"
"RTN","MPIFAPI",75,0)
 I $P($G(^DPT(DFN,"MPI")),"^")'=ICN Q "-1^ICN is not Active one"
"RTN","MPIFAPI",76,0)
 Q DFN
"RTN","MPIFAPI",77,0)
 ;
"RTN","MPIFAPI",78,0)
UPDATE(DFN,ARR,MPISILNT,REMOVE) ;api to edit 'mpi','mpifhis' and 'mpicmor' nodes
"RTN","MPIFAPI",79,0)
 ;**37 UPDATE module moved 3/30/05 from MPIFAPI into MPIFAPI1.
"RTN","MPIFAPI",80,0)
 ;Linetag must remain due to DBIA #2706.
"RTN","MPIFAPI",81,0)
 Q $$UPDATE^MPIFAPI1(DFN,ARR,.MPISILNT,.REMOVE)
"RTN","MPIFAPI",82,0)
 ;
"RTN","MPIFAPI",83,0)
MPIQ(DFN) ;MPI QUERY
"RTN","MPIFAPI",84,0)
 N MPIFARR
"RTN","MPIFAPI",85,0)
 L +^DPT(DFN):2 I '$T,'$D(MPIFS) W $C(7),!!,"Patient is being edited. No attempt will be made to connect to the MPI." H 2 Q
"RTN","MPIFAPI",86,0)
 I '$D(MPIFS) D  ;Not from SmartCard background job
"RTN","MPIFAPI",87,0)
 .;**37 mods to L -^DPT
"RTN","MPIFAPI",88,0)
 .I $G(DGNEW)=1 D  ;New patient, fields always blank, ask
"RTN","MPIFAPI",89,0)
 ..D WRTLN
"RTN","MPIFAPI",90,0)
 ..; **44 Adding Pseudo SSN Reason to the list of prompted fields if SSN is a pseudo and there isn't already a reason stored
"RTN","MPIFAPI",91,0)
 ..N MPIFP S MPIFP="" S DA=DFN,DIQ(0)="EI",DIC=2,DR=".09;.0906",DIQ="MPIFARR" D EN^DIQ1 K DA,DR,DIC,DQ,DR
"RTN","MPIFAPI",92,0)
 ..I $D(MPIFARR(2,DFN,.0906,"I")) D
"RTN","MPIFAPI",93,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",("S"[MPIFARR(2,DFN,.0906,"I")) S MPIFP=".0906;"
"RTN","MPIFAPI",94,0)
 ..S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",95,0)
 ..S DR=MPIFP_".2403;.092;.093;1",DR(2,2.01)=".01" D ^DIE K DA,DIE,DR Q
"RTN","MPIFAPI",96,0)
 .I $G(DGNEW)="" D  ;Existing patient, get current values
"RTN","MPIFAPI",97,0)
 ..N MPIDOB,IMPRS,MPIMMN,MPICTY,MPIST
"RTN","MPIFAPI",98,0)
 ..S DIC=2,DR=".02;.03;.09;.0906;.092;.093;.2403;994;1",DR(2.01)=".01" ;**44 include pseudo ssn reason to list
"RTN","MPIFAPI",99,0)
 ..S DA=DFN,DA(2.01)=1,DIQ(0)="EI",DIQ="MPIFARR"
"RTN","MPIFAPI",100,0)
 ..D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",101,0)
 ..;build DR from blank fields / imprecise DOB / pseudo SSN
"RTN","MPIFAPI",102,0)
 ..S DR=""
"RTN","MPIFAPI",103,0)
 ..S MPIDOB=$G(MPIFARR(2,DFN,.03,"I")) ;DATE OF BIRTH
"RTN","MPIFAPI",104,0)
 ..I MPIDOB="" S DR=DR_".03;" ;DOB null
"RTN","MPIFAPI",105,0)
 ..;Is DOB imprecise?
"RTN","MPIFAPI",106,0)
 ..I MPIDOB'="" S IMPRS=0 D
"RTN","MPIFAPI",107,0)
 ...I $E(MPIDOB,4,7)="0000" S IMPRS=1 ;Year only; no month/day
"RTN","MPIFAPI",108,0)
 ...I ($E(MPIDOB,6,7)="00")&($E(MPIDOB,4,5)'="00") S IMPRS=1 ;Year/month only; no day
"RTN","MPIFAPI",109,0)
 ...I IMPRS=1 S DR=DR_".03;" ;DOB imprecise
"RTN","MPIFAPI",110,0)
 ..I $G(MPIFARR(2,DFN,.02,"I"))="" S DR=DR_".02;" ;SEX
"RTN","MPIFAPI",111,0)
 ..;if the SSN is null, add to prompted fields
"RTN","MPIFAPI",112,0)
 ..N SSNP S SSNP=0
"RTN","MPIFAPI",113,0)
 ..I ($G(MPIFARR(2,DFN,.09,"E"))="") S DR=DR_".09;",SSNP=1 ;SSN
"RTN","MPIFAPI",114,0)
 ..I DR'="" D
"RTN","MPIFAPI",115,0)
 ...D WRTLN
"RTN","MPIFAPI",116,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",117,0)
 ...D ^DIE K DA,DIE,DR,DIC,DIQ
"RTN","MPIFAPI",118,0)
 ...;if SSN was prompted then reinitialize SSN ARRAY variable
"RTN","MPIFAPI",119,0)
 ...I SSNP=1 S MPIFARR(2,DFN,.09,"E")="" S DIC=2,DR=".09" S DA=DFN,DA(2.01)=1,DIQ(0)="E",DIQ="MPIFARR" D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",120,0)
 ...;**44 if the PSEUDO SSN REASON field exist
"RTN","MPIFAPI",121,0)
 ..S DR="" ;reset DR to null to be able to concatenate the fields together since DR was just killed above
"RTN","MPIFAPI",122,0)
 ..I $D(MPIFARR(2,DFN,.0906,"I")) D
"RTN","MPIFAPI",123,0)
 ...;check to see if the SSN is a PSEUDO and the PSEUDO SSN REASON is null or "S" (FOLLOW-UP REQUIRED), if so add PSEUDO SSN REASON to the prompted fields
"RTN","MPIFAPI",124,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",("S"[MPIFARR(2,DFN,.0906,"I")) S DR="" S:SSNP=0 DR=".09;" S DR=DR_".0906;"
"RTN","MPIFAPI",125,0)
 ..I $G(MPIFARR(2,DFN,994,"I"))="" S DR=DR_"994;" ;MULTIPLE BIRTH INDICATOR
"RTN","MPIFAPI",126,0)
 ..S MPIMMN=$G(MPIFARR(2,DFN,.2403,"E")) ;MOTHER'S MAIDEN NAME
"RTN","MPIFAPI",127,0)
 ..I $$VALDT(MPIMMN) S DR=DR_".2403;" ;Validate MMN value
"RTN","MPIFAPI",128,0)
 ..S MPICTY=$G(MPIFARR(2,DFN,.092,"E")) ;PLACE OF BIRTH [CITY]
"RTN","MPIFAPI",129,0)
 ..S MPIST=$G(MPIFARR(2,DFN,.093,"E")) ;PLACE OF BIRTH [STATE]
"RTN","MPIFAPI",130,0)
 ..I $S($$VALDT(MPICTY):1,$$VALDT(MPIST):1,1:0) S DR=DR_".092;.093;" ;Validate POB [CITY] & [STATE] value
"RTN","MPIFAPI",131,0)
 ..I $G(MPIFARR(2.01,1,.01,"E"))="" S DR=DR_"1",DR(2,2.01)=".01;1" ;ALIAS **44 ADDING ALIAS SSN TO FIELDS
"RTN","MPIFAPI",132,0)
 ..I DR'="" D
"RTN","MPIFAPI",133,0)
 ...D WRTLN
"RTN","MPIFAPI",134,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",135,0)
 ...D ^DIE K DA,DIE,DR,DIC,DIQ
"RTN","MPIFAPI",136,0)
 L -^DPT(DFN)
"RTN","MPIFAPI",137,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFAPI",138,0)
 K MPIFRTN D VTQ^MPIFQ0
"RTN","MPIFAPI",139,0)
 ;**43 No longer get list of potential matches to pick from
"RTN","MPIFAPI",140,0)
 ;I $G(MPIFRTN)="" D
"RTN","MPIFAPI",141,0)
 ;. ^ Quit at LM screen when presented with a list of possible matches
"RTN","MPIFAPI",142,0)
 ;. \/ setup Local ICN and proceed
"RTN","MPIFAPI",143,0)
 ;.N ICN,ERR
"RTN","MPIFAPI",144,0)
 ;.S ICN=$$EN2^MPIFAPI()
"RTN","MPIFAPI",145,0)
 ;.Q:ICN=""!(+ICN=-1)
"RTN","MPIFAPI",146,0)
 ;.S ERR=$$SETICN^MPIF001(DFN,+ICN,$P(ICN,"V",2))
"RTN","MPIFAPI",147,0)
 ;.Q:+ERR=-1
"RTN","MPIFAPI",148,0)
 ;. ^ couldn't set ICN don't set other fields
"RTN","MPIFAPI",149,0)
 ;.S ERR=$$SETLOC^MPIF001(DFN,1),ERR=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFAPI",150,0)
 K MPIFRTN,ZTREQ
"RTN","MPIFAPI",151,0)
 Q
"RTN","MPIFAPI",152,0)
 ;
"RTN","MPIFAPI",153,0)
MPIQQ(PDFN) ; Entry point for queuing d/c
"RTN","MPIFAPI",154,0)
 ; Returned is -1^error message OR Task #
"RTN","MPIFAPI",155,0)
 Q:'$D(PDFN) "-1^No DFN passed"
"RTN","MPIFAPI",156,0)
 S ZTRTN="MPIQ^MPIFAPI(PDFN)"
"RTN","MPIFAPI",157,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFAPI",158,0)
 S ZTSAVE("PDFN")=PDFN,ZTSAVE("MPIFS")=1
"RTN","MPIFAPI",159,0)
 ; ^ silent flag
"RTN","MPIFAPI",160,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFAPI",161,0)
 D ^%ZTLOAD
"RTN","MPIFAPI",162,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFAPI",163,0)
 N TSK S TSK=ZTSK
"RTN","MPIFAPI",164,0)
 K ZTSAVE,ZTRTN,ZTIO,ZTDTH,ZTSK
"RTN","MPIFAPI",165,0)
 Q TSK
"RTN","MPIFAPI",166,0)
 ;
"RTN","MPIFAPI",167,0)
WRTLN ;**37 Write intro text ONLY if there are fields to ask
"RTN","MPIFAPI",168,0)
 W !!,"Please verify or update the following information:",!
"RTN","MPIFAPI",169,0)
 Q
"RTN","MPIFAPI",170,0)
 ;
"RTN","MPIFAPI",171,0)
VALDT(VAL) ;**37 Validate value passed in.
"RTN","MPIFAPI",172,0)
 ;Prompt if field contains invalid data (e.g., UNKNOWN, NOT KNOWN, etc.)
"RTN","MPIFAPI",173,0)
 ;Returns 0 if not found
"RTN","MPIFAPI",174,0)
 ;Returns 1 if found
"RTN","MPIFAPI",175,0)
 I VAL="" Q 1
"RTN","MPIFAPI",176,0)
 I $E($$UP^XLFSTR(VAL),1,3)="UNK" Q 1
"RTN","MPIFAPI",177,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NONE" Q 1
"RTN","MPIFAPI",178,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NOT " Q 1
"RTN","MPIFAPI",179,0)
 I $$UP^XLFSTR(VAL)["UNAVAILABLE" Q 1
"RTN","MPIFAPI",180,0)
 I $$UP^XLFSTR(VAL)["DECEASED" Q 1
"RTN","MPIFAPI",181,0)
 I $E($$UP^XLFSTR(VAL),1,2)="DC" Q 1
"RTN","MPIFAPI",182,0)
 Q 0
"RTN","MPIFAPI",183,0)
 ;
"RTN","MPIFDUP")
0^3^B52134006^B52696250
"RTN","MPIFDUP",1,0)
MPIFDUP ;BIRM/CMC-RESOLVE DUP ACTION ;DEC 2, 2005
"RTN","MPIFDUP",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**43,46**;30 Apr 99;Build 5
"RTN","MPIFDUP",3,0)
 ;
"RTN","MPIFDUP",4,0)
POT ;EXCEPTION HANDLER CALLS HERE
"RTN","MPIFDUP",5,0)
 ;Potential Match on MPI, Query MPI, resolve duplicate if needed. **43 Added this entry point
"RTN","MPIFDUP",6,0)
 ; Only available when Exception Being Reviewed is Potential Match
"RTN","MPIFDUP",7,0)
 N PELV,PTEN
"RTN","MPIFDUP",8,0)
 ;S PTEN=$P(DATA,"^",10)
"RTN","MPIFDUP",9,0)
 ;I '$D(^RGHL7(991.1,"ADFN",218,DFN)) W !,"Potential Match Review Option is Only Available for Potential Match Exceptions" H 5 S VALMBCK="R" Q
"RTN","MPIFDUP",10,0)
 ;I $D(^RGHL7(991.1,"ADFN",218,DFN,PTEN)) S SUB=$O(^RGHL7(991.1,"ADFN",218,DFN,PTEN,"")) I $P($G(^RGHL7(991.1,PTEN,SUB,1,0)),"^",5)=1 W !,"Potential Match Review is Only Available for Exceptions still pending." H 5 S VALMBCK="R" Q
"RTN","MPIFDUP",11,0)
 S PTEN=$P(DATA,"^",10) ;IEN IN 991.1
"RTN","MPIFDUP",12,0)
 S PELV=$P(DATA,"^",11) ;IEN IN 991.12
"RTN","MPIFDUP",13,0)
 I $P($G(^RGHL7(991.1,PTEN,1,PELV,0)),"^",3)'=218 S VALMSG="Action is ONLY for POTENTIAL MATCH exceptions!",VALMBCK="R" Q
"RTN","MPIFDUP",14,0)
 ; ^**46 changed check to ensure exception is Potential Match exception
"RTN","MPIFDUP",15,0)
 I $E($$GETICN^MPIF001(DFN),1,3)=$P($$SITE^VASITE,"^",3) W !,"Messaging outstanding please try again in a few minutes." H 5 Q
"RTN","MPIFDUP",16,0)
 S VALMBCK="",MPIFRES="",MPIFINT=""
"RTN","MPIFDUP",17,0)
 D FULL^VALM1
"RTN","MPIFDUP",18,0)
 D EXC
"RTN","MPIFDUP",19,0)
 D PAUSE^VALM1
"RTN","MPIFDUP",20,0)
 K MPIFRES,MPIFINT
"RTN","MPIFDUP",21,0)
 N X,Y,DIR,DIE,DA,DR,IEN,IEN2
"RTN","MPIFDUP",22,0)
 I '$D(PROCESS) D
"RTN","MPIFDUP",23,0)
 .S DIR("A")="Do you want to mark this exception as processed? ",DIR(0)="YA",DIR("B")="NO" D ^DIR K DIR(0),DIR("A")
"RTN","MPIFDUP",24,0)
 .I Y S PROCESS=1 K X,Y
"RTN","MPIFDUP",25,0)
 I $D(PROCESS) D
"RTN","MPIFDUP",26,0)
 .S IEN="",IEN2="",IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11)
"RTN","MPIFDUP",27,0)
 .L +^RGHL7(991.1,IEN):10
"RTN","MPIFDUP",28,0)
 .S DA(1)=IEN,DA=IEN2,DR="6///"_1,DIE="^RGHL7(991.1,"_DA(1)_",1," D ^DIE K DIE,DA,DR
"RTN","MPIFDUP",29,0)
 .L -^RGHL7(991.1,IEN)
"RTN","MPIFDUP",30,0)
 .S $P(DATA,"^",9)=1
"RTN","MPIFDUP",31,0)
 K PROCESS
"RTN","MPIFDUP",32,0)
 Q
"RTN","MPIFDUP",33,0)
EXC ; Exception Entry Point
"RTN","MPIFDUP",34,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFDUP",35,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFDUP",36,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFDUP",37,0)
 S HLP("ACKTIME")=300,MPIQRYNM="POTENTIAL_DUP_RES"
"RTN","MPIFDUP",38,0)
 N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFDUP",39,0)
 N HL,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,TEST,SITE,MPIDC,SSN
"RTN","MPIFDUP",40,0)
 S HL("ECH")="^~\&",HL("FS")="|"
"RTN","MPIFDUP",41,0)
 S MPIIN="",MPIMCNT=DFN,MPICNT=1,MPICS=$E(HL("ECH"),1),MPIFRES=1
"RTN","MPIFDUP",42,0)
 D VTQ1^MPIFVTQ(DFN,.MPIOUT,.HL,.MPIQRYNM)
"RTN","MPIFDUP",43,0)
 I +MPIOUT(0)=-1 D  G EXIT
"RTN","MPIFDUP",44,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=$G(MPIOUT(0)),MPIFRTN="CONTINUE"
"RTN","MPIFDUP",45,0)
 ;Create MSH
"RTN","MPIFDUP",46,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1,HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")
"RTN","MPIFDUP",47,0)
 S HEADER=HEADER_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VQQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;**38 changed VTQ to VQQ
"RTN","MPIFDUP",48,0)
 S MPIOUT(1)=HEADER K MPIOUT(0)
"RTN","MPIFDUP",49,0)
 W !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If no SSN or inexact DOB or common name, this request",!,"may take some time, please be patient...",!
"RTN","MPIFDUP",50,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFDUP",51,0)
 K HLP("ACKTIME") ;kill the HLP array set for the ack timeout
"RTN","MPIFDUP",52,0)
 I +TEST=-1 D  G EXIT
"RTN","MPIFDUP",53,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=TEST
"RTN","MPIFDUP",54,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Could not connect to MPI or Timed Out.  Try again later."
"RTN","MPIFDUP",55,0)
 K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) ;array data is parsed into for display in LM
"RTN","MPIFDUP",56,0)
INIPARS ;
"RTN","MPIFDUP",57,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFDUP",58,0)
 S INDEX=0 K CHECK
"RTN","MPIFDUP",59,0)
LOOP1 ;
"RTN","MPIFDUP",60,0)
 ;process in ADT type messages
"RTN","MPIFDUP",61,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFDUP",62,0)
 K TWODFN S MPIQUIT=0
"RTN","MPIFDUP",63,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFDUP",64,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFDUP",65,0)
 .. S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFDUP",66,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFDUP",67,0)
DECIDE ;If no data in ^TMP that means the patient was not found in the MPI w/VTQ Query. So we go to A28 to add the patient to the MPI.
"RTN","MPIFDUP",68,0)
 N EXC,TEXT,EXACT,EXACT2,DATA,NODE2,ICN,CHKSUM,MORE,COMMON
"RTN","MPIFDUP",69,0)
 I '$D(^TMP("MPIFVQQ",$J)) W !,"No Potential Matches Found.",!!,"Exception has been marked automatically as processed." S PROCESS=1 G EXIT
"RTN","MPIFDUP",70,0)
 I INDEX=1 D
"RTN","MPIFDUP",71,0)
 .;need to check if exact match was returned.
"RTN","MPIFDUP",72,0)
 .S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFDUP",73,0)
 .S NODE2=$G(^TMP("MPIFVQQ",$J,INDEX,"INDICATOR"))
"RTN","MPIFDUP",74,0)
 .S DATA(.01)=$P(DATA,"^",1) I $E(DATA(.01),$L(DATA(.01)))=" " S DATA(.01)=$E(DATA(.01),1,$L(DATA(.01))-1) ;NAME
"RTN","MPIFDUP",75,0)
 .S DATA(.03)=$P(DATA,"^",4),DATA(.09)=$P(DATA,"^",3),DATA(.02)=$P(DATA,"^",11) ;DOB, SSN, SEX
"RTN","MPIFDUP",76,0)
 .S ICN=$P(DATA,"^",6),CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),DATA(991.01)=ICN,DATA(991.02)=CHKSUM,DATA(991.03)=$$LKUP^XUAF4($P(DATA,"^",5))
"RTN","MPIFDUP",77,0)
 .Q:NODE2["*"
"RTN","MPIFDUP",78,0)
 .;^ ICN is already known at this site
"RTN","MPIFDUP",79,0)
 .;check if this patient has another VISTA site now OR tfs in common
"RTN","MPIFDUP",80,0)
 .S (MORE,COMMON)=0
"RTN","MPIFDUP",81,0)
 .D COMPARE^MPIF002(DFN,INDEX,.COMMON,.MORE)
"RTN","MPIFDUP",82,0)
 .Q:COMMON!(MORE)
"RTN","MPIFDUP",83,0)
 .; check that now have an exact match returned
"RTN","MPIFDUP",84,0)
 .N MPIFD,SSN,NAME,SEX,NAME3,BIR K COMMON,MORE
"RTN","MPIFDUP",85,0)
 .D GETDATA^MPIFQ0("^DPT(",DFN,"MPIFD",".01;.09;.02;.03","EI")
"RTN","MPIFDUP",86,0)
 .S SSN=$G(MPIFD(2,DFN,.09,"E")),NAME=$G(MPIFD(2,DFN,.01,"E")),SEX=$G(MPIFD(2,DFN,.02,"I"))
"RTN","MPIFDUP",87,0)
 .S BIR=$G(MPIFD(2,DFN,.03,"I")) I BIR]"" S BIR=$TR($$FMTE^XLFDT(BIR,"5D"),"/","-")
"RTN","MPIFDUP",88,0)
 .; if dob doesn't match -- not allowed to update ICN automatically
"RTN","MPIFDUP",89,0)
 .Q:DATA(.03)'=BIR
"RTN","MPIFDUP",90,0)
 .; if sex doesn't match -- not allowed to update ICN automatically
"RTN","MPIFDUP",91,0)
 .Q:DATA(.02)'=SEX
"RTN","MPIFDUP",92,0)
 .;if dob doesn't match -- not allowed to update ICN automatically
"RTN","MPIFDUP",93,0)
 .I SSN["P" S SSN=""
"RTN","MPIFDUP",94,0)
 .Q:DATA(.09)'=SSN
"RTN","MPIFDUP",95,0)
 .D NAME^VAFCPID2(0,.NAME,0) ;reformat name into DG 149 format
"RTN","MPIFDUP",96,0)
 .S NAME3=DATA(.01) D NAME^VAFCPID2(0,.NAME3,0) S DATA(.01)=NAME3 ;reformat name into DG 149 format
"RTN","MPIFDUP",97,0)
 .; check if Last, First MATCH if so is it a middle name vs middle initial
"RTN","MPIFDUP",98,0)
 .I $P(DATA(.01),",")=$P(NAME,",")&($P($P(NAME,",",2)," ")=$P($P(DATA(.01),",",2)," ")) D
"RTN","MPIFDUP",99,0)
 ..N MPIMID,NMMN S MPIMID=$P($P(DATA(.01),",",2)," ",2)
"RTN","MPIFDUP",100,0)
 ..S NMMN=$P($P(NAME,",",2)," ",2)
"RTN","MPIFDUP",101,0)
 ..I $L(NMMN)>1&($L(MPIMID)=1),($E(NMMN,1)=MPIMID) S EXACT=1
"RTN","MPIFDUP",102,0)
 ..I $L(MPIMID)>1&($L(NMMN)=1),($E(MPIMID,1)=NMMN) S EXACT=1
"RTN","MPIFDUP",103,0)
 .I DATA(.01)=NAME!($D(EXACT)) K DATA(.09),DATA(.01),DATA(.03) D  Q
"RTN","MPIFDUP",104,0)
 ..N PID2,ERR
"RTN","MPIFDUP",105,0)
 ..D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFDUP",106,0)
 ..D BLDPID^VAFCQRY(DFN,2,"ALL",.PID2,.HL,.ERR)
"RTN","MPIFDUP",107,0)
 ..D EDIT^MPIFQED(DFN,"DATA"),MSG3^MPIFQ3,PROMPT^MPIFQ3
"RTN","MPIFDUP",108,0)
 ..S RESLT=$$A24^MPIFA24B(DFN,.PID2) ;send a24 link icns
"RTN","MPIFDUP",109,0)
 ..S PROCESS=1
"RTN","MPIFDUP",110,0)
 I $G(PROCESS)=1 G END
"RTN","MPIFDUP",111,0)
 D START^MPIFD1(INDEX) G END
"RTN","MPIFDUP",112,0)
EXIT I $D(MPIFINT) K MPIFINT,MPIFRES,MPIQRYNM,TSSN,TWODFN,SDFN
"RTN","MPIFDUP",113,0)
 K VALMCNT,VALMLST,CCMOR,FICN H 3 W:'$D(MPIFRPC) !!
"RTN","MPIFDUP",114,0)
END K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) Q
"RTN","MPIFDUP",115,0)
 ;
"RTN","MPIFDUP",116,0)
GETDATA(DIC,DA,MPIFAR,DR,EI) ;
"RTN","MPIFDUP",117,0)
 ;This function returns the values stored in the fields via FM call DIQ1
"RTN","MPIFDUP",118,0)
 ;DIC=file reference, DA=IEN in file, ARRAY=array for the values to be stored in, DR=fields requested, EI=external/internal values
"RTN","MPIFDUP",119,0)
 N DIQ S DIQ=MPIFAR
"RTN","MPIFDUP",120,0)
 I $G(EI)]"" S DIQ(0)=EI
"RTN","MPIFDUP",121,0)
 D EN^DIQ1
"RTN","MPIFDUP",122,0)
 Q
"RTN","MPIFDUP",123,0)
LOOP2 ;
"RTN","MPIFDUP",124,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFDUP",125,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFDUP",126,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFDUP",127,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFDUP",128,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFDUP",129,0)
 Q
"RTN","MPIFDUP",130,0)
MSH ;
"RTN","MPIFDUP",131,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFDUP",132,0)
 Q
"RTN","MPIFDUP",133,0)
MSA ;
"RTN","MPIFDUP",134,0)
 Q
"RTN","MPIFDUP",135,0)
RDF ;
"RTN","MPIFDUP",136,0)
 Q
"RTN","MPIFDUP",137,0)
QAK ;**43 added check for potential matches
"RTN","MPIFDUP",138,0)
 K MPIPOT S MPIPOT=0
"RTN","MPIFDUP",139,0)
 I MSG(1)["POTENTIAL MATCHES" S MPIPOT=1
"RTN","MPIFDUP",140,0)
 S SDFN=$P(MSG(1),HL("FS"),2)
"RTN","MPIFDUP",141,0)
 Q
"RTN","MPIFDUP",142,0)
RDT ;
"RTN","MPIFDUP",143,0)
 N NAME,ICN,BIRTHDAY,CMOR,IEN,SEG,HEREICN,STRING,LASTNAME,FRSTNAME,MIDDLE,SUFF,SEX,THISGUY
"RTN","MPIFDUP",144,0)
 S STRING="",INDEX=$G(INDEX)+1
"RTN","MPIFDUP",145,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFDUP",146,0)
 S SEG=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFDUP",147,0)
 S FRSTNAME=$P(SEG,"^",7),LASTNAME=$P(SEG,"^",2),MIDDLE=$P(SEG,"^",10),SUFF=$P(SEG,"^",15)
"RTN","MPIFDUP",148,0)
 S SSN=$P(SEG,"^",3),NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFDUP",149,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFDUP",150,0)
 I SUFF'="" S NAME=NAME_" "_SUFF
"RTN","MPIFDUP",151,0)
 S SEX=$P(SEG,"^",11)
"RTN","MPIFDUP",152,0)
 S ICN=$P(SEG,"^",6)
"RTN","MPIFDUP",153,0)
 S THISGUY=$$GETDFN^MPIF001(+ICN) I THISGUY=DFN Q
"RTN","MPIFDUP",154,0)
 S BIRTHDAY=$P(SEG,"^",4)
"RTN","MPIFDUP",155,0)
 S CMOR=$P(SEG,"^",5),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFDUP",156,0)
 S CMOR=$P($$NS^XUAF4(IEN),"^")
"RTN","MPIFDUP",157,0)
 S HEREICN=$$HEREICN^MPIFQ3($P(ICN,"V",1))
"RTN","MPIFDUP",158,0)
 I HEREICN S STRING=$$SETSTR^VALM1("*",STRING,1,1),^TMP("MPIFVQQ",$J,INDEX,"INDICATOR")="*"_"^"_HEREICN
"RTN","MPIFDUP",159,0)
 S STRING=$$SETSTR^VALM1(INDEX,STRING,2,4),STRING=$$SETSTR^VALM1($E(NAME,1,23),STRING,6,23)
"RTN","MPIFDUP",160,0)
 S STRING=$$SETSTR^VALM1(SSN,STRING,30,9),STRING=$$SETSTR^VALM1(BIRTHDAY,STRING,41,10)
"RTN","MPIFDUP",161,0)
 S STRING=$$SETSTR^VALM1(CMOR,STRING,54,20)
"RTN","MPIFDUP",162,0)
 S ^TMP("MPIFVQQ",$J,INDEX,0)=STRING,^TMP("MPIFVQQ",$J,"IDX",INDEX,INDEX)=""
"RTN","MPIFDUP",163,0)
 Q
"VER")
8.0^22.0
"BLD",2477,6)
^45
**END**
**END**
