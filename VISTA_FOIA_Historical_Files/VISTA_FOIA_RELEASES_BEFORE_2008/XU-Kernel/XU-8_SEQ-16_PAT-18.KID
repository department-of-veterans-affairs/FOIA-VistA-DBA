Released XU*8*18 SEQ #16
Extracted from mail message
**KIDS**:XU*8.0*18^

**INSTALL NAME**
XU*8.0*18
"BLD",21,0)
XU*8.0*18^KERNEL^0^2960125^n
"BLD",21,1,0)
^^101^101^2960201^
"BLD",21,1,1,0)
This patch fixes several NOIS and FORUM mail message problems.
"BLD",21,1,2,0)

"BLD",21,1,3,0)
NOIS HOT-0196-40372 When displaying the $JOB number in XUS91, if the number was
"BLD",21,1,4,0)
greater than 127 it was converted to a HEX value needed by DSM sites.  This 
"BLD",21,1,5,0)
caused problems with the newer versions of MSM that can have $JOB values greater
"BLD",21,1,6,0)
than 127.  This has been changed to check for values greater than 32768.
"BLD",21,1,7,0)

"BLD",21,1,8,0)
NOIS DAY-1295-41565 In %ZIS3 the use of %ZISQUIT in a hunt group would cause
"BLD",21,1,9,0)
the complete hunt group to fail, not the one entry.  This has been fixed
"BLD",21,1,10,0)
by killing %ZISQUIT after each try.
"BLD",21,1,11,0)

"BLD",21,1,12,0)
NOIS SAT-0196-71702  The number of characters on the task number that were
"BLD",21,1,13,0)
included in the VMS name was to small for the current task numbers at some
"BLD",21,1,14,0)
sites.  This has been fixed in %ZTMS3 to allow more characters in the name.
"BLD",21,1,15,0)

"BLD",21,1,16,0)
NOIS BRX-0196-10212  The executable help for the related frame subfield
"BLD",21,1,17,0)
of the Help frame file has bad code in it that prevents its use.  The
"BLD",21,1,18,0)
code has been commented out. (sent as a partial DD for file 9.2)
"BLD",21,1,19,0)

"BLD",21,1,20,0)
'IO/%ZTIO MM' TaskMan errors, This was used to confirm and understand an
"BLD",21,1,21,0)
 issue. The problem is understood and there isn't an need for the entry in
"BLD",21,1,22,0)
 the error log.  It has been removed from ZTMS2.
"BLD",21,1,23,0)

"BLD",21,1,24,0)
Forum # 17283911  On this message it was agreed that IO should be restored
"BLD",21,1,25,0)
if POP was returned with a non-zero value.  It currently is returned as 'NULL'
"BLD",21,1,26,0)
in this case.  This has been fixed.
"BLD",21,1,27,0)
 
"BLD",21,1,28,0)
Forum # 18837345  The help display of printers was impacted by a screen
"BLD",21,1,29,0)
%ZIS("S") that changed the naked.  This did not follow SAC guidelines, 
"BLD",21,1,30,0)
and has been fixed in ZIS5.
"BLD",21,1,31,0)

"BLD",21,1,32,0)
The OPEN/USE/CLOSE ^%ZISUTL calls didn't work.  This has been fixed in
"BLD",21,1,33,0)
ZISUTL and ZIS1.  The setting of IO(0) was changed to only happen one time
"BLD",21,1,34,0)
so that IO(0) should always point to the HOME device, fixed in ZIS.
"BLD",21,1,35,0)

"BLD",21,1,36,0)
Hans found that the taskman resource logging was not being done. The fix
"BLD",21,1,37,0)
was found in XUTMG43.  To make the sorting of taskman work consistent
"BLD",21,1,38,0)
the resource log string was changed in %ZTMS and %ZTMS3
"BLD",21,1,39,0)

"BLD",21,1,40,0)
I was found that the order of event during error traping needed improvment.
"BLD",21,1,41,0)
also requested was a hang to allow IO ports to reset during errors. This
"BLD",21,1,42,0)
has been done in %ZTMS.
"BLD",21,1,43,0)
 
"BLD",21,1,44,0)
routine         new checksum
"BLD",21,1,45,0)
XUS91           8464418
"BLD",21,1,46,0)
XUTMG43          487942
"BLD",21,1,47,0)
ZIS             9225804
"BLD",21,1,48,0)
ZIS1            9986473
"BLD",21,1,49,0)
ZIS3            6454404
"BLD",21,1,50,0)
ZIS5            7443452
"BLD",21,1,51,0)
ZISUTL          2297285
"BLD",21,1,52,0)
ZTER           18033524
"BLD",21,1,53,0)
ZTER1           5362718
"BLD",21,1,54,0)
ZTMS            5438606
"BLD",21,1,55,0)
ZTMS2           5327585
"BLD",21,1,56,0)
ZTMS3           8978754
"BLD",21,1,57,0)

"BLD",21,1,58,0)
========================================================================= 
"BLD",21,1,59,0)
Installation:
"BLD",21,1,60,0)
 
"BLD",21,1,61,0)
 1. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",21,1,62,0)
    option will load the KIDS package in this message onto your system.
"BLD",21,1,63,0)
 2. Answer NO to the question:
"BLD",21,1,64,0)
    'Shall I preserve what is on disk in a separate back-up message ?'
"BLD",21,1,65,0)
 3. From the 'Installation Menu' of the KIDS menu, run the option
"BLD",21,1,66,0)
    'Verify Checksums in Transport Global' and verify that all routines
"BLD",21,1,67,0)
    have the correct checksum.
"BLD",21,1,68,0)
 4. Inhibit users from login into system. 
"BLD",21,1,69,0)
 5. From the 'Installation Menu' of the KIDS menu, run the option 'Install
"BLD",21,1,70,0)
    Package(s)' Select the package 'XU*8.0*18' and proceed with install.
"BLD",21,1,71,0)
 6. After installing this patch, you need to move several routines from 
"BLD",21,1,72,0)
    your productions account to the manager account:
"BLD",21,1,73,0)
    ZIS
"BLD",21,1,74,0)
    ZIS1
"BLD",21,1,75,0)
    ZIS3
"BLD",21,1,76,0)
    ZIS5
"BLD",21,1,77,0)
    ZISUTL
"BLD",21,1,78,0)
    ZTER
"BLD",21,1,79,0)
    ZTER1
"BLD",21,1,80,0)
    ZTMS
"BLD",21,1,81,0)
    ZTMS2
"BLD",21,1,82,0)
    ZTMS3
"BLD",21,1,83,0)
    and in the manager account rename
"BLD",21,1,84,0)
    ZIS    to %ZIS
"BLD",21,1,85,0)
    ZIS1   to %ZIS1
"BLD",21,1,86,0)
    ZIS3   to %ZIS3
"BLD",21,1,87,0)
    ZIS5   to %ZIS5
"BLD",21,1,88,0)
    ZISUTL to %ZISUTL
"BLD",21,1,89,0)
    ZTER   to %ZTER
"BLD",21,1,90,0)
    ZTER1  to %ZTER1
"BLD",21,1,91,0)
    ZTMS   to %ZTMS
"BLD",21,1,92,0)
    ZTMS2  to %ZTMS2
"BLD",21,1,93,0)
    ZTMS3  to %ZTMS3
"BLD",21,1,94,0)

"BLD",21,1,95,0)
       Example: ZL ZOSVVXD ZS %ZOSV
"BLD",21,1,96,0)
       
"BLD",21,1,97,0)
 7.  On MSM move the routines to the other servers.  
"BLD",21,1,98,0)
     On DSM, rebuild your map set.  
"BLD",21,1,99,0)
 9. Enable user's login.
"BLD",21,1,100,0)
========================================================================= 
"BLD",21,1,101,0)

"BLD",21,4,0)
^9.64PA^9.2^1
"BLD",21,4,9.2,0)
9.2
"BLD",21,4,9.2,2,0)
^9.641^9.22^2
"BLD",21,4,9.2,2,9.2,0)
HELP FRAME  (File-top level)
"BLD",21,4,9.2,2,9.2,1,0)
^9.6411^^
"BLD",21,4,9.2,2,9.22,0)
RELATED FRAME  (sub-file)
"BLD",21,4,9.2,2,9.22,1,0)
^9.6411^.01^1
"BLD",21,4,9.2,2,9.22,1,.01,0)
RELATED FRAME KEYWORD
"BLD",21,4,9.2,222)
y^n^p^^^^n
"BLD",21,4,"APDD",9.2,9.2)

"BLD",21,4,"APDD",9.2,9.22)

"BLD",21,4,"APDD",9.2,9.22,.01)

"BLD",21,4,"B",9.2,9.2)

"BLD",21,"KRN",0)
^9.67PA^8994^15
"BLD",21,"KRN",.4,0)
.4
"BLD",21,"KRN",.401,0)
.401
"BLD",21,"KRN",.402,0)
.402
"BLD",21,"KRN",.403,0)
.403
"BLD",21,"KRN",.403,"NM",0)
^9.68A^^0
"BLD",21,"KRN",.5,0)
.5
"BLD",21,"KRN",.84,0)
.84
"BLD",21,"KRN",3.6,0)
3.6
"BLD",21,"KRN",9.2,0)
9.2
"BLD",21,"KRN",9.8,0)
9.8
"BLD",21,"KRN",9.8,"NM",0)
^9.68A^12^12
"BLD",21,"KRN",9.8,"NM",1,0)
XUS91^^0^B12485277
"BLD",21,"KRN",9.8,"NM",2,0)
ZIS3^^0^B10793701
"BLD",21,"KRN",9.8,"NM",3,0)
ZIS5^^0^B12317199
"BLD",21,"KRN",9.8,"NM",4,0)
ZIS1^^0^B18399731
"BLD",21,"KRN",9.8,"NM",5,0)
ZISUTL^^0^B7438788
"BLD",21,"KRN",9.8,"NM",6,0)
ZTMS2^^0^B16565191
"BLD",21,"KRN",9.8,"NM",7,0)
ZIS^^0^B16919479
"BLD",21,"KRN",9.8,"NM",8,0)
ZTER1^^0^B7128429
"BLD",21,"KRN",9.8,"NM",9,0)
ZTER^^0^B24005575
"BLD",21,"KRN",9.8,"NM",10,0)
ZTMS^^0^B12470217
"BLD",21,"KRN",9.8,"NM",11,0)
XUTMG43^^0^B1058948
"BLD",21,"KRN",9.8,"NM",12,0)
ZTMS3^^0^B19488663
"BLD",21,"KRN",9.8,"NM","B","XUS91",1)

"BLD",21,"KRN",9.8,"NM","B","XUTMG43",11)

"BLD",21,"KRN",9.8,"NM","B","ZIS",7)

"BLD",21,"KRN",9.8,"NM","B","ZIS1",4)

"BLD",21,"KRN",9.8,"NM","B","ZIS3",2)

"BLD",21,"KRN",9.8,"NM","B","ZIS5",3)

"BLD",21,"KRN",9.8,"NM","B","ZISUTL",5)

"BLD",21,"KRN",9.8,"NM","B","ZTER",9)

"BLD",21,"KRN",9.8,"NM","B","ZTER1",8)

"BLD",21,"KRN",9.8,"NM","B","ZTMS",10)

"BLD",21,"KRN",9.8,"NM","B","ZTMS2",6)

"BLD",21,"KRN",9.8,"NM","B","ZTMS3",12)

"BLD",21,"KRN",19,0)
19
"BLD",21,"KRN",19.1,0)
19.1
"BLD",21,"KRN",101,0)
101
"BLD",21,"KRN",409.61,0)
409.61
"BLD",21,"KRN",8994,0)
8994
"BLD",21,"KRN",8995,0)
8995
"BLD",21,"KRN","B",.4,.4)

"BLD",21,"KRN","B",.401,.401)

"BLD",21,"KRN","B",.402,.402)

"BLD",21,"KRN","B",.403,.403)

"BLD",21,"KRN","B",.5,.5)

"BLD",21,"KRN","B",.84,.84)

"BLD",21,"KRN","B",3.6,3.6)

"BLD",21,"KRN","B",9.2,9.2)

"BLD",21,"KRN","B",9.8,9.8)

"BLD",21,"KRN","B",19,19)

"BLD",21,"KRN","B",19.1,19.1)

"BLD",21,"KRN","B",101,101)

"BLD",21,"KRN","B",409.61,409.61)

"BLD",21,"KRN","B",8994,8994)

"BLD",21,"KRN","B",8995,8995)

"FIA",9.2)
HELP FRAME
"FIA",9.2,0)
^DIC(9.2,
"FIA",9.2,0,0)
9.2I
"FIA",9.2,0,1)
y^n^f^^^^n
"FIA",9.2,0,10)

"FIA",9.2,0,11)

"FIA",9.2,0,"RLRO")

"FIA",9.2,0,"VR")
8.0^XU
"FIA",9.2,9.2)
0
"FIA",9.2,9.201)
0
"FIA",9.2,9.21)
0
"FIA",9.2,9.22)
0
"FIA",9.2,9.22,.01)

"FIA",9.2,9.23)
0
"FIA",9.2,9.24)
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^XUDOCV7 NEW FEATURES
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2951018^4
"PKG",3,22,1,"PAH",1,0)
18^2960125
"PKG",3,22,1,"PAH",1,1,0)
^^101^101^2960201
"PKG",3,22,1,"PAH",1,1,1,0)
This patch fixes several NOIS and FORUM mail message problems.
"PKG",3,22,1,"PAH",1,1,2,0)

"PKG",3,22,1,"PAH",1,1,3,0)
NOIS HOT-0196-40372 When displaying the $JOB number in XUS91, if the number was
"PKG",3,22,1,"PAH",1,1,4,0)
greater than 127 it was converted to a HEX value needed by DSM sites.  This 
"PKG",3,22,1,"PAH",1,1,5,0)
caused problems with the newer versions of MSM that can have $JOB values greater
"PKG",3,22,1,"PAH",1,1,6,0)
than 127.  This has been changed to check for values greater than 32768.
"PKG",3,22,1,"PAH",1,1,7,0)

"PKG",3,22,1,"PAH",1,1,8,0)
NOIS DAY-1295-41565 In %ZIS3 the use of %ZISQUIT in a hunt group would cause
"PKG",3,22,1,"PAH",1,1,9,0)
the complete hunt group to fail, not the one entry.  This has been fixed
"PKG",3,22,1,"PAH",1,1,10,0)
by killing %ZISQUIT after each try.
"PKG",3,22,1,"PAH",1,1,11,0)

"PKG",3,22,1,"PAH",1,1,12,0)
NOIS SAT-0196-71702  The number of characters on the task number that were
"PKG",3,22,1,"PAH",1,1,13,0)
included in the VMS name was to small for the current task numbers at some
"PKG",3,22,1,"PAH",1,1,14,0)
sites.  This has been fixed in %ZTMS3 to allow more characters in the name.
"PKG",3,22,1,"PAH",1,1,15,0)

"PKG",3,22,1,"PAH",1,1,16,0)
NOIS BRX-0196-10212  The executable help for the related frame subfield
"PKG",3,22,1,"PAH",1,1,17,0)
of the Help frame file has bad code in it that prevents its use.  The
"PKG",3,22,1,"PAH",1,1,18,0)
code has been commented out. (sent as a partial DD for file 9.2)
"PKG",3,22,1,"PAH",1,1,19,0)

"PKG",3,22,1,"PAH",1,1,20,0)
'IO/%ZTIO MM' TaskMan errors, This was used to confirm and understand an
"PKG",3,22,1,"PAH",1,1,21,0)
 issue. The problem is understood and there isn't an need for the entry in
"PKG",3,22,1,"PAH",1,1,22,0)
 the error log.  It has been removed from ZTMS2.
"PKG",3,22,1,"PAH",1,1,23,0)

"PKG",3,22,1,"PAH",1,1,24,0)
Forum # 17283911  On this message it was agreed that IO should be restored
"PKG",3,22,1,"PAH",1,1,25,0)
if POP was returned with a non-zero value.  It currently is returned as 'NULL'
"PKG",3,22,1,"PAH",1,1,26,0)
in this case.  This has been fixed.
"PKG",3,22,1,"PAH",1,1,27,0)
 
"PKG",3,22,1,"PAH",1,1,28,0)
Forum # 18837345  The help display of printers was impacted by a screen
"PKG",3,22,1,"PAH",1,1,29,0)
%ZIS("S") that changed the naked.  This did not follow SAC guidelines, 
"PKG",3,22,1,"PAH",1,1,30,0)
and has been fixed in ZIS5.
"PKG",3,22,1,"PAH",1,1,31,0)

"PKG",3,22,1,"PAH",1,1,32,0)
The OPEN/USE/CLOSE ^%ZISUTL calls didn't work.  This has been fixed in
"PKG",3,22,1,"PAH",1,1,33,0)
ZISUTL and ZIS1.  The setting of IO(0) was changed to only happen one time
"PKG",3,22,1,"PAH",1,1,34,0)
so that IO(0) should always point to the HOME device, fixed in ZIS.
"PKG",3,22,1,"PAH",1,1,35,0)

"PKG",3,22,1,"PAH",1,1,36,0)
Hans found that the taskman resource logging was not being done. The fix
"PKG",3,22,1,"PAH",1,1,37,0)
was found in XUTMG43.  To make the sorting of taskman work consistent
"PKG",3,22,1,"PAH",1,1,38,0)
the resource log string was changed in %ZTMS and %ZTMS3
"PKG",3,22,1,"PAH",1,1,39,0)

"PKG",3,22,1,"PAH",1,1,40,0)
I was found that the order of event during error traping needed improvment.
"PKG",3,22,1,"PAH",1,1,41,0)
also requested was a hang to allow IO ports to reset during errors. This
"PKG",3,22,1,"PAH",1,1,42,0)
has been done in %ZTMS.
"PKG",3,22,1,"PAH",1,1,43,0)
 
"PKG",3,22,1,"PAH",1,1,44,0)
routine         new checksum
"PKG",3,22,1,"PAH",1,1,45,0)
XUS91           8464418
"PKG",3,22,1,"PAH",1,1,46,0)
XUTMG43          487942
"PKG",3,22,1,"PAH",1,1,47,0)
ZIS             9225804
"PKG",3,22,1,"PAH",1,1,48,0)
ZIS1            9986473
"PKG",3,22,1,"PAH",1,1,49,0)
ZIS3            6454404
"PKG",3,22,1,"PAH",1,1,50,0)
ZIS5            7443452
"PKG",3,22,1,"PAH",1,1,51,0)
ZISUTL          2297285
"PKG",3,22,1,"PAH",1,1,52,0)
ZTER           18033524
"PKG",3,22,1,"PAH",1,1,53,0)
ZTER1           5362718
"PKG",3,22,1,"PAH",1,1,54,0)
ZTMS            5438606
"PKG",3,22,1,"PAH",1,1,55,0)
ZTMS2           5327585
"PKG",3,22,1,"PAH",1,1,56,0)
ZTMS3           8978754
"PKG",3,22,1,"PAH",1,1,57,0)

"PKG",3,22,1,"PAH",1,1,58,0)
========================================================================= 
"PKG",3,22,1,"PAH",1,1,59,0)
Installation:
"PKG",3,22,1,"PAH",1,1,60,0)
 
"PKG",3,22,1,"PAH",1,1,61,0)
 1. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",3,22,1,"PAH",1,1,62,0)
    option will load the KIDS package in this message onto your system.
"PKG",3,22,1,"PAH",1,1,63,0)
 2. Answer NO to the question:
"PKG",3,22,1,"PAH",1,1,64,0)
    'Shall I preserve what is on disk in a separate back-up message ?'
"PKG",3,22,1,"PAH",1,1,65,0)
 3. From the 'Installation Menu' of the KIDS menu, run the option
"PKG",3,22,1,"PAH",1,1,66,0)
    'Verify Checksums in Transport Global' and verify that all routines
"PKG",3,22,1,"PAH",1,1,67,0)
    have the correct checksum.
"PKG",3,22,1,"PAH",1,1,68,0)
 4. Inhibit users from login into system. 
"PKG",3,22,1,"PAH",1,1,69,0)
 5. From the 'Installation Menu' of the KIDS menu, run the option 'Install
"PKG",3,22,1,"PAH",1,1,70,0)
    Package(s)' Select the package 'XU*8.0*18' and proceed with install.
"PKG",3,22,1,"PAH",1,1,71,0)
 6. After installing this patch, you need to move several routines from 
"PKG",3,22,1,"PAH",1,1,72,0)
    your productions account to the manager account:
"PKG",3,22,1,"PAH",1,1,73,0)
    ZIS
"PKG",3,22,1,"PAH",1,1,74,0)
    ZIS1
"PKG",3,22,1,"PAH",1,1,75,0)
    ZIS3
"PKG",3,22,1,"PAH",1,1,76,0)
    ZIS5
"PKG",3,22,1,"PAH",1,1,77,0)
    ZISUTL
"PKG",3,22,1,"PAH",1,1,78,0)
    ZTER
"PKG",3,22,1,"PAH",1,1,79,0)
    ZTER1
"PKG",3,22,1,"PAH",1,1,80,0)
    ZTMS
"PKG",3,22,1,"PAH",1,1,81,0)
    ZTMS2
"PKG",3,22,1,"PAH",1,1,82,0)
    ZTMS3
"PKG",3,22,1,"PAH",1,1,83,0)
    and in the manager account rename
"PKG",3,22,1,"PAH",1,1,84,0)
    ZIS    to %ZIS
"PKG",3,22,1,"PAH",1,1,85,0)
    ZIS1   to %ZIS1
"PKG",3,22,1,"PAH",1,1,86,0)
    ZIS3   to %ZIS3
"PKG",3,22,1,"PAH",1,1,87,0)
    ZIS5   to %ZIS5
"PKG",3,22,1,"PAH",1,1,88,0)
    ZISUTL to %ZISUTL
"PKG",3,22,1,"PAH",1,1,89,0)
    ZTER   to %ZTER
"PKG",3,22,1,"PAH",1,1,90,0)
    ZTER1  to %ZTER1
"PKG",3,22,1,"PAH",1,1,91,0)
    ZTMS   to %ZTMS
"PKG",3,22,1,"PAH",1,1,92,0)
    ZTMS2  to %ZTMS2
"PKG",3,22,1,"PAH",1,1,93,0)
    ZTMS3  to %ZTMS3
"PKG",3,22,1,"PAH",1,1,94,0)

"PKG",3,22,1,"PAH",1,1,95,0)
       Example: ZL ZOSVVXD ZS %ZOSV
"PKG",3,22,1,"PAH",1,1,96,0)
       
"PKG",3,22,1,"PAH",1,1,97,0)
 7.  On MSM move the routines to the other servers.  
"PKG",3,22,1,"PAH",1,1,98,0)
     On DSM, rebuild your map set.  
"PKG",3,22,1,"PAH",1,1,99,0)
 9. Enable user's login.
"PKG",3,22,1,"PAH",1,1,100,0)
========================================================================= 
"PKG",3,22,1,"PAH",1,1,101,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options and Menu Options
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
12
"RTN","XUS91")
0^1^B12485277
"RTN","XUS91",1,0)
XUS91 ;SF/STAFF -  REPORT OF USERS SIGNED ON ;1/25/96  13:29
"RTN","XUS91",2,0)
 ;;8.0;KERNEL;**18**;Jul 10, 1995
"RTN","XUS91",3,0)
 S U="^",XUSUCI="" I $D(^%ZOSF("UCI")) X ^%ZOSF("UCI") S XUSUCI=Y
"RTN","XUS91",4,0)
 S XQHDR="    USER STATUS REPORT      "_XUSUCI
"RTN","XUS91",5,0)
 S %H=$H D YMD^%DTC S DT=X
"RTN","XUS91",6,0)
 W !,"Lookup pass " K ^TMP($J) S XQJN=0
"RTN","XUS91",7,0)
 F I=0:0 S XQJN=$O(^XUTL("XQ",XQJN)) Q:XQJN'>0  S X=XQJN X ^%ZOSF("JOBPARAM") S XQK=$P(Y,U,1) D:(XUSUCI=XQK)!(XQK="UNKNOWN") PASS1
"RTN","XUS91",8,0)
 S IOP="" D ^%ZIS K IOP S XQPG=0,XQUI=0 D NEWPG
"RTN","XUS91",9,0)
PRINT S XQUN=-1 F I=0:0 S XQUN=$O(^TMP($J,XQUN)) Q:(XQUN="")!XQUI  S XQJN=0 F J=0:0 S XQJN=$O(^TMP($J,XQUN,XQJN)) Q:(XQJN="")!XQUI  S XQV=^(XQJN) D LIST
"RTN","XUS91",10,0)
 G END
"RTN","XUS91",11,0)
PASS1 ;
"RTN","XUS91",12,0)
 W "." S XQUN="UNKNOWN" I $D(^XUTL("XQ",XQJN,"DUZ")) S XQUN=^("DUZ"),XQUN=$S($D(^VA(200,XQUN,0)):$P(^(0),U,1),1:"UNKNOWN")
"RTN","XUS91",13,0)
 S XQV="UNKNOWN" I $D(^XUTL("XQ",XQJN,0)) S XQV=$P(^(0),".",2)_"00",XQV=$E(XQV,1,2)_":"_$E(XQV,3,4)
"RTN","XUS91",14,0)
 S XQV=XQV_U_$S('$D(^XUTL("XQ",XQJN,"IO")):"UNKNOWN",1:^("IO"))
"RTN","XUS91",15,0)
 S XQK="UNKNOWN" I $D(^XUTL("XQ",XQJN,"T")),^("T") S XQK=^("T") I $D(^(XQK)) S XQK=$E($P(^(XQK),U,3),1,29)
"RTN","XUS91",16,0)
 I XQK="UNKNOWN",$D(^XUTL("XQ",XQJN,"ZTSK")) S XQJ=^("ZTSK") S:$D(^("XQM")) XQJ=$P(^DIC(19,^("XQM"),0),U,2) S XQK=$E(XQJ,1,18)_" *Tasked"
"RTN","XUS91",17,0)
 S ^TMP($J,XQUN,XQJN)=XQV_U_XQK
"RTN","XUS91",18,0)
 Q
"RTN","XUS91",19,0)
LIST ;
"RTN","XUS91",20,0)
 D:$Y>19 NEWPG Q:XQUI  S (X,Y)=XQJN,X1=16 S:X>32768 Y=$$CNV^XLFUTL(X,16)
"RTN","XUS91",21,0)
 W !,Y,?12,$E(XQUN,1,19),?33,$P(XQV,U,1),?42,$P(XQV,U,2),?50,$P(XQV,U,3,99)
"RTN","XUS91",22,0)
 Q
"RTN","XUS91",23,0)
NEWPG ;
"RTN","XUS91",24,0)
 I XQPG,$E(IOST,1)="C" D CON S XQUI=(X="^") Q:XQUI
"RTN","XUS91",25,0)
 D HDR Q
"RTN","XUS91",26,0)
CON ;
"RTN","XUS91",27,0)
 W !!,"Press return to continue or '^' to escape " R X:DTIME S:'$T X=U
"RTN","XUS91",28,0)
 Q
"RTN","XUS91",29,0)
HDR ;
"RTN","XUS91",30,0)
 W @IOF S XQPG=XQPG+1
"RTN","XUS91",31,0)
 S Y=$P($H,",",2)\60,Y=(Y#60/100+(Y\60)/100+DT) D DT^DIO2
"RTN","XUS91",32,0)
 W ?22,XQHDR,?71,"PAGE ",XQPG
"RTN","XUS91",33,0)
 W !!,"JOB NUMBER  USER NAME            TIME ON  DEVICE  CURRENT MENU OPTION"
"RTN","XUS91",34,0)
 W !,"----------  -------------------  -------  ------  ------------------------------"
"RTN","XUS91",35,0)
 Q
"RTN","XUS91",36,0)
END ;
"RTN","XUS91",37,0)
 K XQI,XQJN,XQUN,XUSUCI,ZJ,XQJ,XQK,XQUI,XQPG,XQHDR,XQV,D,J,X,XQM,XQT,Y,Z,^TMP($J)
"RTN","XUS91",38,0)
 Q
"RTN","XUS91",39,0)
 Q
"RTN","XUS91",40,0)
TESTM ;
"RTN","XUS91",41,0)
 W !!,"This option will allow you to simulate signing on as another user to test their",!,"menus and keys.  You can step through menus, but cannot execute options.",!,"Return to your own identity by entering a '*'.",!
"RTN","XUS91",42,0)
 S DIC=200,DIC(0)="AEQMZ" D ^DIC Q:Y<0
"RTN","XUS91",43,0)
 I $S('$D(^VA(200,+Y,201)):1,($P(^VA(200,+Y,201),U,1)=""):1,1:0) W !!,*7,"This user has no primary menu." Q
"RTN","XUS91",44,0)
 S XQY=^VA(200,+Y,201),DUZ("SAV")=DUZ_U_DUZ(0),DUZ=+Y,DUZ(0)=$P(Y(0),U,4),%=$P(^VA(200,+Y,0),U,1),DUZ("SAV")=DUZ("SAV")_U_$P(%,",",2)_" "_$P(%,",",1) G ^XQ
"RTN","XUS91",45,0)
 Q
"RTN","XUS91",46,0)
TESTN ;
"RTN","XUS91",47,0)
 S DUZ=+DUZ("SAV"),DUZ(0)=$P(DUZ("SAV"),U,2),XQY=+^VA(200,DUZ,201) K DUZ("SAV"),XQUR,XMDUZ
"RTN","XUS91",48,0)
 W !!,"OK...  Returning to your own identity." L  ;Clear all locks
"RTN","XUS91",49,0)
 G ^XQ
"RTN","XUTMG43")
0^11^B1058948
"RTN","XUTMG43",1,0)
XUTMG43 ;SEA/RDS - TaskMan: Globals: X-Refs For File 8989.3 ;01/23/96  08:29
"RTN","XUTMG43",2,0)
 ;;8.0;KERNEL;**18**;Jul 03, 1995
"RTN","XUTMG43",3,0)
 ;
"RTN","XUTMG43",4,0)
SET ;set logic entry point
"RTN","XUTMG43",5,0)
 N ZTLOG S ZTLOG=(X="Y") G UPDATE
"RTN","XUTMG43",6,0)
 ;
"RTN","XUTMG43",7,0)
KILL ;kill logic entry point
"RTN","XUTMG43",8,0)
 N ZTLOG S ZTLOG=0 G UPDATE
"RTN","XUTMG43",9,0)
 ;
"RTN","XUTMG43",10,0)
UPDATE ;shared logic for MUMPS X-ref: Tell MGR to adjust resource logging
"RTN","XUTMG43",11,0)
 N X,ZTM,ZTN,ZTV
"RTN","XUTMG43",12,0)
 S ZTV=0
"RTN","XUTMG43",13,0)
U1 ;
"RTN","XUTMG43",14,0)
 F  S ZTV=$O(^%ZIS(14.5,ZTV)) Q:'ZTV  D
"RTN","XUTMG43",15,0)
 . S ZTREC=$G(^%ZIS(14.5,ZTV,0))
"RTN","XUTMG43",16,0)
 . I ZTREC="" Q
"RTN","XUTMG43",17,0)
 . I $P(ZTREC,U,3)="N" Q
"RTN","XUTMG43",18,0)
 . I $P(ZTREC,U,4)="Y" Q
"RTN","XUTMG43",19,0)
 . S X="TRAP^XUTMG43",@^%ZOSF("TRAP")
"RTN","XUTMG43",20,0)
 . S ZTN=$P(ZTREC,U)
"RTN","XUTMG43",21,0)
 . S ZTM=$P(ZTREC,U,6)
"RTN","XUTMG43",22,0)
 . I '$D(^[ZTM,ZTN]%ZTSCH) Q
"RTN","XUTMG43",23,0)
 . L +^[ZTM,ZTN]%ZTSCH("LOGRSRC")
"RTN","XUTMG43",24,0)
 . I ZTLOG S ^[ZTM,ZTN]%ZTSCH("LOGRSRC")=1
"RTN","XUTMG43",25,0)
 . E  K ^[ZTM,ZTN]%ZTSCH("LOGRSRC")
"RTN","XUTMG43",26,0)
 . L -^[ZTM,ZTN]%ZTSCH("LOGRSRC") Q
"RTN","XUTMG43",27,0)
 Q
"RTN","XUTMG43",28,0)
 ;
"RTN","XUTMG43",29,0)
TRAP ;UPDATE--trap link errors, which represent unaccessible links
"RTN","XUTMG43",30,0)
 G U1
"RTN","XUTMG43",31,0)
 ;
"RTN","ZIS")
0^7^B16919479
"RTN","ZIS",1,0)
%ZIS ;SFISC/AC,RWF -- DEVICE HANDLER ;01/19/96  10:57
"RTN","ZIS",2,0)
 ;;8.0;KERNEL;**18**;JUL 10, 1995
"RTN","ZIS",3,0)
INIT I $D(ZTQUEUED),$G(IOT)="SPL",$D(IO)#2,$D(IO(0))#2,IO]"",IO=IO(0),$D(IO(1,IO))#2,$D(^%ZOSF("OS")),^("OS")["VAX DSM"!(^("OS")["M/VX"),$D(IOP),IOP[ION!(IOP[IO) K %ZIS,%IS,IOP Q
"RTN","ZIS",4,0)
 ;
"RTN","ZIS",5,0)
 I '$D(%ZIS),$D(%IS) M %ZIS=%IS
"RTN","ZIS",6,0)
 ;See if we need any of the ';' lines
"RTN","ZIS",7,0)
 ;S:$D(%ZIS)#2 %IS=%ZIS
"RTN","ZIS",8,0)
 ;F %X="A","B","HFSIO","IOPAR","IOUPAR","T" S:$D(%ZIS(%X))#2 %IS(%X)=%ZIS(%X)
"RTN","ZIS",9,0)
 ;S:$D(%ZIS("B","HFS"))#2 %IS("B","HFS")=%ZIS("B","HFS")
"RTN","ZIS",10,0)
 ;I $D(%IS)[0 D
"RTN","ZIS",11,0)
 ;.S %IS="M" S:$D(%ZIS)[0 %ZIS="M"
"RTN","ZIS",12,0)
 ;.I '($D(%IS("B"))#2) S %IS("B")="",%ZIS("B")=""
"RTN","ZIS",13,0)
 S:$D(%ZIS)[0 %ZIS="M" M %IS=%ZIS ;update %IS for now
"RTN","ZIS",14,0)
 ;
"RTN","ZIS",15,0)
 I $D(ZTQUEUED) D  I '$D(IOP) S POP=1 G EXIT^%ZIS1
"RTN","ZIS",16,0)
 .I $D(ZTIO)#2,ZTIO="" S:%IS'[0 %IS=%IS_"0",%ZIS=%ZIS_"0"
"RTN","ZIS",17,0)
 I '$D(ZTQUEUED),%IS["T",$P($G(IOP),";")="Q" S POP=1 G EXIT^%ZIS1
"RTN","ZIS",18,0)
 S %ZISOS=$G(^%ZOSF("OS")),%ZISV=$G(^%ZOSF("VOL")) K IO("CLOSE"),IO("HFSIO"),IO("T")
"RTN","ZIS",19,0)
 N %,%A,%Z,%Z90,%Z95,%ZTIME,%ZTYPE,%E,%H
"RTN","ZIS",20,0)
A K %Z9,%ZISIOS,%ZISQUIT,DTOUT,DUOUT,IO("P"),IO("Q"),IO("S")
"RTN","ZIS",21,0)
K2 D K2^%ZIS1
"RTN","ZIS",22,0)
 S %ZISB=%ZIS'["N",POP=0,%Y="" S:'$D(IO(0)) IO(0)=$I
"RTN","ZIS",23,0)
 I %ZISOS["VAX DSM",$I["SYS$INPUT:.;" S:%IS'[0 %IS=%IS_"0",%ZIS=%ZIS_"0" S (%H,%E)=0 G ^%ZIS1
"RTN","ZIS",24,0)
 I %IS["T"&(%IS["0") S (%H,%E)=0 G ^%ZIS1
"RTN","ZIS",25,0)
 I $D(IOP),IOP=$I!(IOP="HOME")!(0[IOP),$D(^XUTL("XQ",$J,"IO")) D HOME K %IS,%Y,%ZIS,%ZISB,%ZISV,IOP Q
"RTN","ZIS",26,0)
 D GETHOME G EXIT^%ZIS1:POP,^%ZIS1
"RTN","ZIS",27,0)
GETHOME S %ZISVT=$I,%E=0 I $D(IO("HOME")),$P(IO("HOME"),"^",2)=IO(0) S (%E,%H)=+IO("HOME") Q
"RTN","ZIS",28,0)
 I $D(^XUTL("XQ",$J,"IOS")),$D(^("IO")),IO(0)=^("IO") S (%E,%H)=^("IOS"),IO("HOME")=%H_"^"_IO(0) Q
"RTN","ZIS",29,0)
 ;CALL LINEPORT CODE HERE---
"RTN","ZIS",30,0)
 S %=$$LINEPORT^%ZISUTL I % S (%E,%H)=% Q
"RTN","ZIS",31,0)
 S %ZISVT=$I D VTLKUP
"RTN","ZIS",32,0)
 I '%E S %ZISVT=$I D VIRTUAL I %ZISVT=""!(%E'>0) I %IS'[0 O IO(0)::0 I $T U IO(0) W !,"HOME DEVICE DOES NOT EXIST IN THE DEVICE FILE",!,"PLEASE CONTACT YOUR SYSTEM MANAGER!",*7
"RTN","ZIS",33,0)
 S %H=%E S:'%H&(%IS'[0) POP=1 Q
"RTN","ZIS",34,0)
MSMVTRM X "S %ZISVT=$ZDE(%ZISVT)" Q
"RTN","ZIS",35,0)
VIRTUAL X:%ZISOS["MSM" "I $P($ZV,""Version "",2)'<3 D MSMVTRM Q" ;Virtual Terminal
"RTN","ZIS",36,0)
 F %ZISI=$L(%ZISVT):-1 D:$D(^%ZIS(1,"C",%ZISVT))  Q:$S('%E:0,'$D(^%ZIS(1,%E,"TYPE")):0,^("TYPE")="VTRM":1,1:0)  S %ZISVT=$E(%ZISVT,1,%ZISI) Q:%ZISVT=""
"RTN","ZIS",37,0)
 .D VTLKUP Q:$S('%E:0,'$D(^%ZIS(1,%E,"TYPE")):0,^("TYPE")="VTRM":1,1:0)
"RTN","ZIS",38,0)
 .S %X=0 F %ZISX=%ZISV,"" Q:%X>0  S %X=0 F  S %E=+$O(^%ZIS(1,"CPU",%ZISX_"."_%ZISVT,%X)) S %X=%E Q:%E'>0  I $G(^%ZIS(1,+%E,"TYPE"))="VTRM" Q
"RTN","ZIS",39,0)
 Q
"RTN","ZIS",40,0)
VTLKUP F %ZISX=%ZISV,"" S %E=+$O(^%ZIS(1,"G","SYS."_%ZISX_"."_%ZISVT,0)) Q:%E  S %E=+$O(^%ZIS(1,"CPU",%ZISX_"."_%ZISVT,0)) Q:%E
"RTN","ZIS",41,0)
 Q
"RTN","ZIS",42,0)
 ;
"RTN","ZIS",43,0)
CURRENT N POP S FF="#",SL=24,BS="*8",RM=80,(SUB,XY)="",%IS=0,%ZISOS=$G(^%ZOSF("OS")),%ZISV=$G(^("VOL")),POP=0
"RTN","ZIS",44,0)
 D GETHOME K %E,%IS,%ZISI,%ZISOS,%ZISV,%ZISVT,%ZISX Q:POP
"RTN","ZIS",45,0)
 I $D(^%ZIS(1,%H,"SUBTYPE")) S SUB=+^("SUBTYPE") K %H
"RTN","ZIS",46,0)
 I $D(SUB),SUB,$D(^%ZIS(2,SUB,1)) S SUB=$S($D(^(0)):$P(^(0),"^"),1:""),FF=$P(^(1),"^",2),SL=$P(^(1),"^",3),BS=$P(^(1),"^",4),XY=$P(^(1),"^",5),RM=+^(1)
"RTN","ZIS",47,0)
 E  S SUB=""
"RTN","ZIS",48,0)
 I $D(^%ZOSF("RM")) N X S X=RM X ^("RM") K %A
"RTN","ZIS",49,0)
 Q
"RTN","ZIS",50,0)
HOME ;Entry point to establish IO* variables for home device.
"RTN","ZIS",51,0)
 N %,X I '$D(^XUTL("XQ",$J,"IO")) S IOP="HOME" D ^%ZIS Q
"RTN","ZIS",52,0)
 D RESETVAR
"RTN","ZIS",53,0)
 I '$D(IO("C")),$D(IOM),IO=$I,$D(IO(1,IO)),$D(^%ZOSF("RM")) S X=+IOM X ^("RM") Q
"RTN","ZIS",54,0)
 Q
"RTN","ZIS",55,0)
RESETVAR ;Reset IO* variables.
"RTN","ZIS",56,0)
 I '$D(^XUTL("XQ",$J,"IO")) Q
"RTN","ZIS",57,0)
 N % F %="IO","IOS","IOT","IOBS","IOF","IOM","ION","IOSL","IOST","IOST(0)","IOXY" I $D(^XUTL("XQ",$J,%))#2 S @%=^(%)
"RTN","ZIS",58,0)
 S POP=0,IO(0)=IO
"RTN","ZIS",59,0)
 Q
"RTN","ZIS",60,0)
ZISLPC Q  ;No longer called in Kernel v8.
"RTN","ZIS",61,0)
 ;
"RTN","ZIS",62,0)
HLP1 G EN1^%ZIS7
"RTN","ZIS",63,0)
HLP2 N %E,%H,%X,%ZISV,X S %ZISV=$S($D(^%ZOSF("VOL")):^("VOL"),1:"") G EN2^%ZIS7
"RTN","ZIS",64,0)
 ;
"RTN","ZIS",65,0)
REWIND(IO,IOT,IOPAR) ;Rewind Device
"RTN","ZIS",66,0)
 ;S $ZT="REWERR^%ZIS"
"RTN","ZIS",67,0)
 N %,X,Y,ZISGR S ZISGR=$$LGR^%ZOSV,X="REWERR^%ZIS",@^%ZOSF("TRAP")
"RTN","ZIS",68,0)
 S %=$I I ZISGR]"",$D(@ZISGR) ;Restore last globa reference
"RTN","ZIS",69,0)
 I '($D(IO)#2)!'$D(IOT)!'$D(IOPAR) Q 0
"RTN","ZIS",70,0)
 I "MT^SDP^HFS"'[IOT Q 0
"RTN","ZIS",71,0)
 S @("Y=$$REW"_IOT_"^%ZIS4(IO,IOPAR)")
"RTN","ZIS",72,0)
 I ZISGR]"",$D(@ZISGR) ;Restore last global reference
"RTN","ZIS",73,0)
 U % Q Y
"RTN","ZIS",74,0)
REWERR ;Error encountered
"RTN","ZIS",75,0)
 I ZISGR]"",$D(@ZISGR) ;Restore last globa reference
"RTN","ZIS",76,0)
 Q 0
"RTN","ZIS1")
0^4^B18399731
"RTN","ZIS1",1,0)
%ZIS1 ;SFISC/AC,RWF -- DEVICE HANDLER (DEVICE INPUT) 3/16/89  12:50 PM;3/30/89  9:58 AM ;01/26/96  10:31
"RTN","ZIS1",2,0)
 ;;8.0;KERNEL;**18**;JUL 10, 1995
"RTN","ZIS1",3,0)
MAIN I '$D(IOP),$D(^%ZIS(1,%E,0)),'$P(^(0),"^",3) S %A=%H,%Z=^(0) D L2^%ZIS2 G EXIT
"RTN","ZIS1",4,0)
L1 I '$D(IOP),$D(IO("Q")),POP D AQUE^%ZIS3 K:%=2 IO("Q") S:%=2 %ZISB=$S(%IS'["N":2,1:0) I %=-1 S POP=1 G EXIT ;Main Loop
"RTN","ZIS1",5,0)
 S %E=%H,POP=0
"RTN","ZIS1",6,0)
 I %IS'["Q",$D(XQNOGO) S POP=1 W:'$D(IOP) !,*7,"OUTPUT IS NEVER ALLOWED FOR THIS OPTION" G EXIT
"RTN","ZIS1",7,0)
 D IOP:$D(IOP),R:'$D(IOP)
"RTN","ZIS1",8,0)
 G EXIT:$D(DTOUT)!$D(DUOUT)!(POP&$D(IOP)),L1:POP&'$D(IOP)
"RTN","ZIS1",9,0)
 D LKUP I %A'>0 S POP=1 D:'$D(DUOUT) MSG1 K DUOUT
"RTN","ZIS1",10,0)
 I POP G EXIT:$D(IOP),L1:'$D(IOP)
"RTN","ZIS1",11,0)
 I '$D(^%ZIS(1,%A,0)) D MSG1 K %ZISIOS S POP=1
"RTN","ZIS1",12,0)
 I POP G EXIT:$D(IOP),L1:'$D(IOP)
"RTN","ZIS1",13,0)
 S %E=%A,%Z=^%ZIS(1,%A,0),%Z1=$G(^(1))
"RTN","ZIS1",14,0)
 I $D(%ZIS("S")) N Y S Y=%E D XS^ZISX S:'$T POP=1 G G:POP
"RTN","ZIS1",15,0)
 W:'$D(IOP)&($P(%Z,"^",2)'=$I)&($P(%Z1,"^")]"") "  ",$P(%Z1,"^") D L2^%ZIS2
"RTN","ZIS1",16,0)
G G L1:POP&'$D(IOP)&'($D(DTOUT)!$D(DUOUT))
"RTN","ZIS1",17,0)
EXIT I $D(IO)#2,IO]"",$D(IO(1,IO))#2,$D(%Z1),$P(%Z1,"^",11) S IO(1,IO,"NOFF")=1
"RTN","ZIS1",18,0)
 G SETVAR:'POP!(%IS["T"),KILVAR
"RTN","ZIS1",19,0)
IOP S (%ZISVT,%X)=IOP D LC:%X'?1.UNP I %X'="Q" D SETQ Q  ;Request From IOP
"RTN","ZIS1",20,0)
 S %IS=%IS_%X K IOP W %X D SETQ Q
"RTN","ZIS1",21,0)
R I %IS["Q",$D(XQNOGO) W !,*7,"AT THIS TIME, OUTPUT MUST BE QUEUED"
"RTN","ZIS1",22,0)
 S %A=$S($D(%IS("B")):%IS("B"),1:"HOME") ;Request From Read At Device Prompt
"RTN","ZIS1",23,0)
 I %IS["P",%A="HOME",$D(^%ZIS(1,%E,99)),$D(^%ZIS(1,+^(99),0)) S %A=$P(^(0),"^",1)
"RTN","ZIS1",24,0)
RD W !,$S($D(%IS("A")):%IS("A"),1:"DEVICE: ") W:%A]"" %A,"// " D SBR S:%X="" %X=%A S %ZISVT=%X
"RTN","ZIS1",25,0)
 I %X?2"?".E D EN2^%ZIS7 G R
"RTN","ZIS1",26,0)
 I %X?1"?".E D EN1^%ZIS7 G R
"RTN","ZIS1",27,0)
 I $D(DTOUT)!$D(DUOUT)!(%X'?.ANP)!($L($P(%X,";"))>31) S:%IS["T" IO="" S POP=1 Q
"RTN","ZIS1",28,0)
 D LC:%X'?1.UNP,SETQ G R:$T Q
"RTN","ZIS1",29,0)
SETQ S %Y=$P(%X,";",2,9),%X=$P(%X,";",1) S:$L(";"_%Y,";/")=2 IO("P")=$P(";"_%Y,";/",2)
"RTN","ZIS1",30,0)
 I %IS["Q",%X="Q" S %X=%Y,%ZISVT=$P(%ZISVT,";",2,9),%ZISB=0,IO("Q")=1,%IS("A")="DEVICE: " S:$D(IOP) %Y=$P(%X,";",2,9),%X=$P(%X,";",1)
"RTN","ZIS1",31,0)
 I $T,'$D(IOP) W "UEUE TO PRINT ON" Q  ; Return $T value
"RTN","ZIS1",32,0)
 Q
"RTN","ZIS1",33,0)
LKUP S %ZISMY=$P(%ZISVT,";",2,999),%ZISVT=$P(%ZISVT,";")
"RTN","ZIS1",34,0)
 I %X="H" W:'$D(IOP) "ome" S %X=0
"RTN","ZIS1",35,0)
 I 0[%X!(%X="HOME")!(%X=$I) S %A=%H Q
"RTN","ZIS1",36,0)
 I $E(%ZISVT)="`",$D(IOP) S %A=+$E(%ZISVT,2,999) I $G(^%ZIS(1,%A,0))]"" Q
"RTN","ZIS1",37,0)
 S %A=0 I "P"[%X Q:$D(IOP)&('$D(^%ZIS(1,%E,99)))  I $D(^%ZIS(1,%E,99)) S %A=+^(99) Q
"RTN","ZIS1",38,0)
 I %X=" ",$D(DUZ)#2,$D(^DISV(+DUZ,"^%ZIS(1,")) S %A=^("^%ZIS(1,") Q
"RTN","ZIS1",39,0)
 S %A=+$O(^%ZIS(1,"B",%ZISVT,0)) Q:%A>0  ;mixed case lookup
"RTN","ZIS1",40,0)
 I %X'=%ZISVT S %A=+$O(^%ZIS(1,"B",%X,0)) Q:%A>0  ;uppercase lookup
"RTN","ZIS1",41,0)
 D VTLKUP^%ZIS S %A=%E Q:%A>0  ;mixed case lookup
"RTN","ZIS1",42,0)
 I %X'=%ZISVT S %ZISVT=%X D VTLKUP^%ZIS S %A=%E Q:%A>0  ;uppercase lookup
"RTN","ZIS1",43,0)
 S %XX=%X D 1^%ZIS5 S %A=+%YY Q
"RTN","ZIS1",44,0)
SBR K DFOUT,DTOUT,DUOUT R %X:$S($D(DTIME)#2:DTIME,1:300) E  W *7 S DTOUT=1 Q
"RTN","ZIS1",45,0)
 S:%X="."!(%X="^") DUOUT=1,%X="" Q
"RTN","ZIS1",46,0)
LC S %X=$TR(%X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ZIS1",47,0)
 Q
"RTN","ZIS1",48,0)
YN W "? ",$P("YES// ^NO// ",U,%)
"RTN","ZIS1",49,0)
RYN R %X:$S($D(DTIME):DTIME,$D(%ZISDTIM):%ZISDTIM,1:300) E  S DTOUT=1,%X=U W *7
"RTN","ZIS1",50,0)
 S:%X]""!'% %=$A(%X),%=$S(%=89:1,%=121:1,%=78:2,%=110:2,%=94:-1,1:0)
"RTN","ZIS1",51,0)
 I '%,%X'?."?" W *7,"??",!?4,"ANSWER 'YES' OR 'NO': " G RYN
"RTN","ZIS1",52,0)
 W:$X>73 ! W $P("  (YES)^  (NO)",U,%) Q
"RTN","ZIS1",53,0)
MSG1 I '$D(IOP) W ?20,*7,"  [DEVICE DOES NOT EXIST]"
"RTN","ZIS1",54,0)
 Q
"RTN","ZIS1",55,0)
SETVAR S:'$D(IO)#2 IO="" G KILVAR:%IS["T"&(IO="")
"RTN","ZIS1",56,0)
 S:IO'=IO(0)&($D(DUZ)#2) ^DISV(+DUZ,"^%ZIS(1,")=%E
"RTN","ZIS1",57,0)
 S ION=$P(%Z,"^",1),IOM=+%Z91,IOF=$P(%Z91,"^",2),IOSL=$P(%Z91,"^",3),IOBS=$P(%Z91,"^",4),IOXY=$P(%Z91,"^",5)
"RTN","ZIS1",58,0)
 S IOT=%ZTYPE,IOST(0)=%ZISIOST(0),IOST=%ZISIOST,IOPAR=%ZISOPAR,IOUPAR=%ZISUPAR,IOHG=%ZISHG
"RTN","ZIS1",59,0)
 ;
"RTN","ZIS1",60,0)
 K IOCPU S:$D(%ZISCPU) IOCPU=%ZISCPU G KIL
"RTN","ZIS1",61,0)
KILVAR S:0&(%IS'["T") IO="" S:'$D(IOF) IOF="#" S:'$D(IOST(0)) IOST(0)=0 F %I="IO","ION","IOM","IOBS","IOSL","IOST" S:$D(@%I)[0 @%I=""
"RTN","ZIS1",62,0)
 K IO("HFSIO"),IO("OPEN") I $D(%ZISCPU) S:'$D(IOCPU) IOCPU=%ZISCPU
"RTN","ZIS1",63,0)
KIL S:'POP IOS=%ZISIOS I POP K:%IS'["T" %ZISIOS I %IS["T" K IOS S:$D(%ZISIOS) IOS=%ZISIOS
"RTN","ZIS1",64,0)
 S:%IS["T" IO("T")=1 K %ZIS,%IS,%A,%E,%H,%ZISOS,%ZISV,IOP
"RTN","ZIS1",65,0)
K2 K %ZISCHK,%ZISCPU,%ZISI,%ZISR,%ZISVT,%ZISB,%I,%X,%Y,%Z,%Z1,%Z91,%Z95,%ZTYPE,%ZTIME,%ZISX,ZISI,%ZISHGL,%ZISHP,%ZISIO,%ZISIOS,%ZISIOM,%ZISIOF,%ZISIOSL,%ZISIOBS,%ZISIOST,%ZISIOST(0),%ZISTO,%ZISTP,%ZISHG,%ZISSIO,%ZISOPEN,%ZISOPAR,%ZISUPAR
"RTN","ZIS1",66,0)
 K %ZISMY,%ZISQUIT
"RTN","ZIS1",67,0)
 Q
"RTN","ZIS3")
0^2^B10793701
"RTN","ZIS3",1,0)
%ZIS3 ;SFISC/AC,RWF -- DEVICE HANDLER(DEVICE TYPES & PARAMETERS) ;01/11/96  12:21
"RTN","ZIS3",2,0)
 ;;8.0;KERNEL;**18**;JUL 10, 1995
"RTN","ZIS3",3,0)
 I %ZIS'["T",$G(^%ZIS(1,+%E,"POX"))]"" D XPOX^ZISX(%E)
"RTN","ZIS3",4,0)
 I $D(%ZISQUIT) S POP=1 K %ZISQUIT
"RTN","ZIS3",5,0)
 S %ZISCHK=1
"RTN","ZIS3",6,0)
 I 'POP&(%ZISB)&(%ZTYPE'="RES")&(%ZTYPE'="OTH")&(%ZTYPE'="SDP")&(IO'["::") D DEVOK
"RTN","ZIS3",7,0)
 G Q:POP
"RTN","ZIS3",8,0)
 I %ZTYPE["TRM" G @%ZTYPE
"RTN","ZIS3",9,0)
 G @(%ZTYPE_"^%ZIS6")
"RTN","ZIS3",10,0)
Q I $D(%ZISUOUT) K %ZISUOUT,%ZISHP,%ZISHPOP Q
"RTN","ZIS3",11,0)
 I $D(%ZISHPOP)&$S(IO="":1,1:'$D(IO(1,IO))) D HGBSY^%ZIS2 Q
"RTN","ZIS3",12,0)
 I POP S:%IS'["T" IO="" I $D(%ZISHG(0)),%IS'["D",'$D(%ZISHPOP) G HUNT^%ZIS2
"RTN","ZIS3",13,0)
 Q
"RTN","ZIS3",14,0)
VTRM ;Virtual terminal type
"RTN","ZIS3",15,0)
TRM D OPEN^%ZIS4:'POP&(%ZISB&(%IS'["T")),MARGN:'POP,SETPAR:'POP ;Terminal type
"RTN","ZIS3",16,0)
 I 'POP,%IS'["T",%ZISB=1,'$D(IOP),IO'=IO(0),'$D(IO("Q")),%IS["Q" D AQUE
"RTN","ZIS3",17,0)
 W:'$D(IOP) ! I '$D(IO("Q")) D O^%ZIS4:'POP&(%ZISB&(%IS'["T"))
"RTN","ZIS3",18,0)
 G Q
"RTN","ZIS3",19,0)
DEVOK N X,Y
"RTN","ZIS3",20,0)
 S X=IO D DEVOK^%ZOSV I Y=-99!(Y=0)!(Y=$J) Q
"RTN","ZIS3",21,0)
 I Y>0 S POP=1 W:'$D(IOP)&('$D(%ZISHG(0))!(%IS["D")) !,*7,"[DEVICE UNAVAILABLE]" Q
"RTN","ZIS3",22,0)
 I Y=-1 S IO="",POP=1 W:'$D(IOP)&('$D(ZISHG(0))!(%IS["D")) !,*7,"[DEVICE DOES NOT EXIST OR UNAVAILABLE]" Q
"RTN","ZIS3",23,0)
 Q
"RTN","ZIS3",24,0)
MARGN S %A=$P(%Y,";",1) I %A?1A.ANP D SUBIEN(.%A,1) I $D(^%ZIS(2,%A,1)) S %ZISTP=0 K %Z91 D ST S %Y=$P(%Y,";",2,9),%ZISMY=$P(%ZISMY,";",2,9) G MARGN
"RTN","ZIS3",25,0)
 S:$P(%Y,";",2) $P(%Z91,"^",3)=+$P(%Y,";",2) I %A>3 S $P(%Z91,"^")=$S(%A>255:255,1:+%A)
"RTN","ZIS3",26,0)
ALTP I '$D(IO("P")) Q:%A>3  G ASKMAR:%ZTYPE["TRM" Q
"RTN","ZIS3",27,0)
 S %X=$F(IO("P"),"M") I %X S %A=+$E(IO("P"),%X,99),$P(%Z91,"^")=$S(%A>255:255,1:%A)
"RTN","ZIS3",28,0)
 S %X=$F(IO("P"),"L") I %X S $P(%Z91,"^",3)=+$E(IO("P"),%X,99)
"RTN","ZIS3",29,0)
 Q:%A>3!(%ZTYPE'["TRM")
"RTN","ZIS3",30,0)
ASKMAR I %IS["M",'$D(IOP),$S(%E=%H:+$P(%Z,"^",3),1:1),$P(%Z,"^",4) W "    RIGHT MARGIN: " W:$P(%Z91,"^")]"" +%Z91,"// "
"RTN","ZIS3",31,0)
 E  Q
"RTN","ZIS3",32,0)
 D SBR^%ZIS1 I '$D(DTOUT)&'$D(DUOUT) S:%X=""&($P(%Z91,"^")]"") %X=+%Z91 G ASKMAR:%X'?1.N S $P(%Z91,"^")=$S(%X<256:%X,1:0) Q
"RTN","ZIS3",33,0)
 S POP=1 I %ZISB&(%ZTYPE["TRM")&(IO'=IO(0)) C IO K IO(1,IO) Q
"RTN","ZIS3",34,0)
 Q
"RTN","ZIS3",35,0)
SETPAR S:%ZISOPAR]""&($A(%ZISOPAR)-40) %ZISOPAR="("_%ZISOPAR_")" Q
"RTN","ZIS3",36,0)
AQUE S %=$S($D(IO("Q")):1,1:2),U="^",%ZISDTIM=60
"RTN","ZIS3",37,0)
 I $D(IO("Q")) W !,"PREVIOUSLY, YOU HAVE SELECTED QUEUEING."
"RTN","ZIS3",38,0)
 W !,"DO YOU "_$S($D(IO("Q")):"STILL ",1:"")_"WANT YOUR OUTPUT QUEUED"
"RTN","ZIS3",39,0)
 D YN^%ZIS1 K %ZISDTIM G AQUE:%=0 Q:$D(IO("Q"))
"RTN","ZIS3",40,0)
 I %=-1 S POP=1,%ZISHPOP=1,%ZISUOUT=1 C IO K IO(1,IO) Q
"RTN","ZIS3",41,0)
 I %=1 S IO("Q")=1 C IO K IO(1,IO) Q
"RTN","ZIS3",42,0)
 Q
"RTN","ZIS3",43,0)
ST S %ZISIOST(0)=%A,%ZISIOST=$P($G(^%ZIS(2,%A,0)),"^") Q:%ZISTP
"RTN","ZIS3",44,0)
STP S:'$D(%Z91) %Z91="" S %A=$G(^%ZIS(2,%A,1),"132^#^66^*8")
"RTN","ZIS3",45,0)
 S:$P(%Z91,"^")="" $P(%Z91,"^")=+%A S:$P(%Z91,"^",2)="" $P(%Z91,"^",2)=$P(%A,"^",2) S:'$P(%Z91,"^",3) $P(%Z91,"^",3)=$P(%A,"^",3) S:$P(%Z91,"^",4)="" $P(%Z91,"^",4)=$P(%A,"^",4) S $P(%Z91,"^",5)=$G(^%ZIS(2,%ZISIOST(0),"XY")) Q
"RTN","ZIS3",46,0)
 N %,%1
"RTN","ZIS3",47,0)
 F %=1:1:5 D
"RTN","ZIS3",48,0)
 .S %1=0
"RTN","ZIS3",49,0)
 .I %=3,'$P(%Z91,"^",%) S %1=1
"RTN","ZIS3",50,0)
 .I $P(%Z91,"^",%)="" D
"RTN","ZIS3",51,0)
 ..I %=1 S $P(%Z91,"^")=+%A
"RTN","ZIS3",52,0)
 ..E  S $P(%Z91,"^",%)=$P(%A,"^",%)
"RTN","ZIS3",53,0)
 Q
"RTN","ZIS3",54,0)
SUBIEN(X,%) ;Return Subtype ien.
"RTN","ZIS3",55,0)
 I $D(^%ZIS(2,"B",X))>9 S X=+$O(^%ZIS(2,"B",X,0)) Q
"RTN","ZIS3",56,0)
 I '$G(%) S X="" Q
"RTN","ZIS3",57,0)
 S %XX=X D 2^%ZIS5 S X=+%YY Q
"RTN","ZIS5")
0^3^B12317199
"RTN","ZIS5",1,0)
%ZIS5 ;SFISC/STAFF --DEVICE LOOK-UP ;01/11/96  12:17
"RTN","ZIS5",2,0)
 ;;8.0;KERNEL;**18**;JUL 10, 1995
"RTN","ZIS5",3,0)
 S U="^",%DO=""
"RTN","ZIS5",4,0)
 I $D(^%ZIS(%ZISDFN,0)) S %DO=^(0)
"RTN","ZIS5",5,0)
A G:%ZIS(0)'["A" X I $D(%ZIS("A")) S %DD=%ZIS("A") G B
"RTN","ZIS5",6,0)
 S %DD="Select "_$P(%DO,U,1)_": "
"RTN","ZIS5",7,0)
B I $D(%ZIS("B")),%ZIS("B")]"" S %YY=%ZIS("B"),%XX=$O(^%ZIS(%ZISDFN,%D,%YY)),%DIY=$S($F(%XX,%YY)-1=$L(%YY):%XX,$D(^%ZIS(%ZISDFN,%YY,0)):$P(^(0),U,1),1:%YY) W %DD,%DIY,"// " R %XX:$S($D(DTIME):DTIME,1:9999) G G:%XX]"" S %XX=%DIY G G
"RTN","ZIS5",8,0)
 W !,%DD R %XX:$S($D(DTIME):DTIME,1:9999)
"RTN","ZIS5",9,0)
G G NO:'$T,NO:%XX["^" G:%XX?.N&(+%XX=%XX) NUM I %XX'?.ANP!($L(%XX)>30) W:%ZIS(0)["Q" *7," ??" G A
"RTN","ZIS5",10,0)
X I %XX=" ",$D(DUZ)#2,$D(^DISV(+DUZ,"^%ZIS("_%ZISDFN_",")) S %YY=+^("^%ZIS("_%ZISDFN_",") D S G:'$T NO G GOT
"RTN","ZIS5",11,0)
F G NO:%XX="" K %DS S %DS=0,%DS(0)=1,%DIX=%XX,%DIY=0
"RTN","ZIS5",12,0)
 I $D(^%ZIS(%ZISDFN,%D,%XX)) G T1
"RTN","ZIS5",13,0)
TRY S %DIX=$O(^%ZIS(%ZISDFN,%D,%DIX)) G:$P(%DIX,%XX,1)'=""!(%DIX="") T2 S %DIY=0
"RTN","ZIS5",14,0)
T1 S %DIY=$O(^%ZIS(%ZISDFN,%D,%DIX,+%DIY)) G:%DIY'>0 TRY S %YY=+%DIY D S G:'$T T1
"RTN","ZIS5",15,0)
 I %DS,'(%DS#10) D LST G NO:%XX=U,ADD:%YY<0,GOT:%YY>0
"RTN","ZIS5",16,0)
 S %DS=%DS+1,%DS(%DS)=%DIY G T1
"RTN","ZIS5",17,0)
LSYN ;
"RTN","ZIS5",18,0)
S I $D(^%ZIS(%ZISDFN,%YY,0)) G S1
"RTN","ZIS5",19,0)
 Q
"RTN","ZIS5",20,0)
S1 G S2:%ZISDFN'=1!(%D'="LSYN") I $P(^%ZIS(1,%YY,0),U,9)=%ZISV!($P(^(0),U,9)="") G S2
"RTN","ZIS5",21,0)
 Q
"RTN","ZIS5",22,0)
S2 N Y S Y=%YY D:$D(%ZIS("S")) XS^ZISX Q
"RTN","ZIS5",23,0)
T2 G:'%DS NO S %DIY="" D LST G NO:%XX=U,ADD:%YY<1,GOT
"RTN","ZIS5",24,0)
LST I %DS=1,'$D(%ZISLST) S %YY=%DS(1) Q
"RTN","ZIS5",25,0)
 S %YY=-1 Q:%ZIS(0)'["E"  W ! F %DZ=%DS(0):1:%DS W !,$J(%DZ,2)," ",$P(^%ZIS(%ZISDFN,%DS(%DZ),0),U,1) I $D(%ZIS("W")) W "  " D XW^ZISX
"RTN","ZIS5",26,0)
L1 W:%DIY !,"Type '^' to Stop, or" W !,"Choose 1" W:%DS>1 "-",%DS
"RTN","ZIS5",27,0)
 R "> ",%YY:$S($D(DTIME):DTIME,1:9999) S %ZISLST=1 I %YY="",%DIY S %DS(0)=%DS+1,%YY=0 W ! Q
"RTN","ZIS5",28,0)
 I %YY=U!(%YY="") S %YY=-1,DUOUT=1 S:%YY=U %XX=U Q
"RTN","ZIS5",29,0)
 I +%YY'=%YY!(%YY<1)!(%YY>%DS) W:%ZIS(0)["Q" *7," ??" G L1
"RTN","ZIS5",30,0)
 S %YY=%DS(%YY) Q
"RTN","ZIS5",31,0)
GOT S %DZ=^%ZIS(%ZISDFN,+%YY,0)
"RTN","ZIS5",32,0)
 W:%ZIS(0)["E" "  ",$P(%DZ,U,1)
"RTN","ZIS5",33,0)
R I %ZIS(0)'["F" S:$S($D(DUZ)#2:$S(DUZ:1,1:0),1:0) ^DISV(DUZ,"^%ZIS("_%ZISDFN_",")=+%YY
"RTN","ZIS5",34,0)
 I %ZIS(0)["Z" S %YY(0)=^%ZIS(%ZISDFN,+%YY,0)
"RTN","ZIS5",35,0)
Q K %ZISDFN,%DO,%DD,%DIX,%DIY,%DZ Q
"RTN","ZIS5",36,0)
K K %D,%DS,%ZISLST Q
"RTN","ZIS5",37,0)
ADD ;can't add to files
"RTN","ZIS5",38,0)
NO S %YY=-1 G Q
"RTN","ZIS5",39,0)
NUM I $D(^%ZIS(%ZISDFN,%XX)) S %YY=%XX D S I $T G GOT
"RTN","ZIS5",40,0)
 G F
"RTN","ZIS5",41,0)
1 F %D="B","LSYN" S %ZISDFN=1,%ZIS(0)=$S($D(IOP):"M",1:"EMQ") D %ZIS5 Q:%YY>0
"RTN","ZIS5",42,0)
 D K Q
"RTN","ZIS5",43,0)
2 S %D="B",%ZISDFN=2,%ZIS(0)=$S($D(IOP):"M",1:"EMQ") D %ZIS5 D K Q
"RTN","ZIS5",44,0)
 ;
"RTN","ZIS5",45,0)
LD1 S %E=0,%Y=0 D LCPU:"PD"[$E(%X) S %E=0 W !
"RTN","ZIS5",46,0)
L S %E=$S("PD"[$E(%X):$O(^UTILITY("ZIS",$J,"DEVLST","B",%E)),1:$O(^%ZIS(1,"B",%E))) G:%E="" RESTART
"RTN","ZIS5",47,0)
 S %A=+$O(^(%E,0))
"RTN","ZIS5",48,0)
 G L:'$D(^%ZIS(1,%A,0)),L:$P(^(0),"^",2)=46,L:$P(^(0),"^",2)=63 I $D(%ZIS("S")) N Y S Y=%A D XS^ZISX G L:'$T
"RTN","ZIS5",49,0)
 I "AP"[$E(%X) G L:$P($G(^%ZIS(2,+$G(^%ZIS(1,%A,"SUBTYPE")),0)),U)'?1"P".E
"RTN","ZIS5",50,0)
 W $J($P(^%ZIS(1,%A,0),"^",1),9) W:$D(^(1)) " ",$P(^(1),"^",1) I $D(^(90)),^(90) W " ** OUT OF SERVICE"
"RTN","ZIS5",51,0)
 W ?39 I $X>40 W ! S %Y=%Y+1 I %Y>20 R "'^' TO STOP: ",%Y:$S($D(DTIME):DTIME,1:60),! G RESTART:%Y?1P S %Y=0
"RTN","ZIS5",52,0)
 G L
"RTN","ZIS5",53,0)
 ;
"RTN","ZIS5",54,0)
LCPU S %A=%ZISV
"RTN","ZIS5",55,0)
LC1 S %A=$O(^%ZIS(1,"CPU",%A)) Q:$P(%A,".")'=%ZISV  S %E=0
"RTN","ZIS5",56,0)
LC2 S %E=+$O(^%ZIS(1,"CPU",%A,%E)) G LC1:%E'>0,LC1:'$D(^%ZIS(1,%E,0)) S ^UTILITY("ZIS",$J,"DEVLST","B",$P(^(0),"^",1),%E)="" G LC2
"RTN","ZIS5",57,0)
RESTART S:$D(%H) %E=+%H K %X,^UTILITY("ZIS",$J,"DEVLST") Q
"RTN","ZISUTL")
0^5^B7438788
"RTN","ZISUTL",1,0)
%ZISUTL ;Device Handler Utility routine ;01/12/96  09:40
"RTN","ZISUTL",2,0)
 ;;8.0;KERNEL;**18**;JUL 10, 1995
"RTN","ZISUTL",3,0)
 Q  ;No entry from top
"RTN","ZISUTL",4,0)
GETDEV(X) ;Return IO variables
"RTN","ZISUTL",5,0)
 I '$D(^TMP("XUDEVICE",$J,X)) S POP=1 Q
"RTN","ZISUTL",6,0)
 ;Cleanup first
"RTN","ZISUTL",7,0)
 K IO("S")
"RTN","ZISUTL",8,0)
 F %="IO","IO(""S"")","IOS","IOT","IOBS","IOF","IOM","ION","IOSL","IOST","IOST(0)","IOXY" I $D(^TMP("XUDEVICE",$J,X,%))#2 S @%=^(%)
"RTN","ZISUTL",9,0)
 Q
"RTN","ZISUTL",10,0)
 ;
"RTN","ZISUTL",11,0)
SAVDEV(NM) ;Save IO variables
"RTN","ZISUTL",12,0)
 ;NM=Handle name
"RTN","ZISUTL",13,0)
 N %,Y
"RTN","ZISUTL",14,0)
 S Y=$$FINDEV(NM) I 'Y S Y=$$NEXTDEV
"RTN","ZISUTL",15,0)
 S ^TMP("XUDEVICE",$J,Y,0)=NM,^TMP("XUDEVICE",$J,"B",NM,Y)=""
"RTN","ZISUTL",16,0)
 F %="IO","IO(""S"")","IOS","IOT","IOBS","IOF","IOM","ION","IOSL","IOST","IOST(0)","IOXY" I $D(@%)#2 S ^TMP("XUDEVICE",$J,Y,%)=@%
"RTN","ZISUTL",17,0)
 Q
"RTN","ZISUTL",18,0)
 ;
"RTN","ZISUTL",19,0)
FINDEV(NM) ;Find Device name and return IEN.
"RTN","ZISUTL",20,0)
 Q $O(^TMP("XUDEVICE",$J,"B",NM,0))
"RTN","ZISUTL",21,0)
 ;
"RTN","ZISUTL",22,0)
RMDEV(X) ;Remove saved IO variables.
"RTN","ZISUTL",23,0)
 N Y
"RTN","ZISUTL",24,0)
 S Y=$$FINDEV(X)
"RTN","ZISUTL",25,0)
 Q:'Y
"RTN","ZISUTL",26,0)
 K ^TMP("XUDEVICE",$J,"B",X),^TMP("XUDEVICE",$J,+Y)
"RTN","ZISUTL",27,0)
 Q
"RTN","ZISUTL",28,0)
 ;
"RTN","ZISUTL",29,0)
RMALLDEV() ;Remove saved IO variables for all devices saved in table.
"RTN","ZISUTL",30,0)
 K ^TMP("XUDEVICE",$J)
"RTN","ZISUTL",31,0)
 Q 1
"RTN","ZISUTL",32,0)
 ;
"RTN","ZISUTL",33,0)
NEXTDEV() ;Return next available device.
"RTN","ZISUTL",34,0)
 N Y
"RTN","ZISUTL",35,0)
 F Y=1:1 Q:'$D(^TMP("XUDEVICE",$J,Y))
"RTN","ZISUTL",36,0)
 Q Y
"RTN","ZISUTL",37,0)
 ;
"RTN","ZISUTL",38,0)
OPEN(HNDL,IOP,%ZIS) ;Open extrinsic function
"RTN","ZISUTL",39,0)
 ;Parameters
"RTN","ZISUTL",40,0)
 ;HNDL=Handle name
"RTN","ZISUTL",41,0)
 ;IOP string--optional
"RTN","ZISUTL",42,0)
 ;X3=%ZIS string--optional
"RTN","ZISUTL",43,0)
 N %,%ZIS
"RTN","ZISUTL",44,0)
 I $G(IOP)="" K IOP ;Remove IOP if null.
"RTN","ZISUTL",45,0)
 D ^%ZIS,SAVDEV(HNDL):POP=0
"RTN","ZISUTL",46,0)
 Q
"RTN","ZISUTL",47,0)
 ;
"RTN","ZISUTL",48,0)
CLOSE(X1) ;Close extrinsic functionsl
"RTN","ZISUTL",49,0)
 ;X1=Handle
"RTN","ZISUTL",50,0)
 ;
"RTN","ZISUTL",51,0)
 N %,Y
"RTN","ZISUTL",52,0)
 S Y=$$FINDEV^%ZISUTL(X1)
"RTN","ZISUTL",53,0)
 Q:'Y
"RTN","ZISUTL",54,0)
 D GETDEV^%ZISUTL(Y)
"RTN","ZISUTL",55,0)
 D ^%ZISC,RMDEV^%ZISUTL(X1)
"RTN","ZISUTL",56,0)
 Q
"RTN","ZISUTL",57,0)
 ;
"RTN","ZISUTL",58,0)
USE(X1) ;Restore IO* variables pertaining to the device.
"RTN","ZISUTL",59,0)
 ;X1=Handle name
"RTN","ZISUTL",60,0)
 N %,Y
"RTN","ZISUTL",61,0)
 S Y=$$FINDEV^%ZISUTL(X1)
"RTN","ZISUTL",62,0)
 Q:'Y
"RTN","ZISUTL",63,0)
 D GETDEV^%ZISUTL(Y) U IO
"RTN","ZISUTL",64,0)
 Q
"RTN","ZISUTL",65,0)
 ;
"RTN","ZISUTL",66,0)
OPENHFS(X1,X2,X3,X4,X5,X6,X7,X8,X9) ;Open HFS with handles
"RTN","ZISUTL",67,0)
 ;X1=Handle
"RTN","ZISUTL",68,0)
 ;X2=Directory
"RTN","ZISUTL",69,0)
 ;X3=Filename
"RTN","ZISUTL",70,0)
 ;X4=Access mode
"RTN","ZISUTL",71,0)
 N Y
"RTN","ZISUTL",72,0)
 S Y=$$OPEN2^%ZISH(X2,X3,X4)
"RTN","ZISUTL",73,0)
 ;Save info into ^TMP("XUDEVICE,$J) array.
"RTN","ZISUTL",74,0)
 I Y,X1]"",'$D(^TMP("XUDEVICE",$J,"B",IO)) N % D
"RTN","ZISUTL",75,0)
 .S %=X1 D SAVDEV^%ZISUTL(%) S IO(1,IO)=""
"RTN","ZISUTL",76,0)
 Q 1
"RTN","ZISUTL",77,0)
 ;
"RTN","ZISUTL",78,0)
LINEPORT() ;Obtain line port information and return to home.
"RTN","ZISUTL",79,0)
 ;
"RTN","ZISUTL",80,0)
 N %,%1,Y
"RTN","ZISUTL",81,0)
 S Y=0
"RTN","ZISUTL",82,0)
 S %=$$LNPRTIEN^%ZISUTL($$LNPRTNAM^%ZISUTL)
"RTN","ZISUTL",83,0)
 S Y=+$P($G(^%ZIS(3.23,+%,0)),"^",3)
"RTN","ZISUTL",84,0)
 Q Y
"RTN","ZISUTL",85,0)
LNPRTSUB() ;Obtain line port information and return to home.
"RTN","ZISUTL",86,0)
 ;
"RTN","ZISUTL",87,0)
 N %,%1,Y
"RTN","ZISUTL",88,0)
 S Y=0
"RTN","ZISUTL",89,0)
 S %=$$LNPRTIEN^%ZISUTL($$LNPRTNAM^%ZISUTL)
"RTN","ZISUTL",90,0)
 S Y=$P($G(^%ZIS(2,+$P($G(^%ZIS(3.23,+%,0)),"^",4),0)),"^")
"RTN","ZISUTL",91,0)
 Q Y
"RTN","ZISUTL",92,0)
LNPRTNAM() ;Return Line port name
"RTN","ZISUTL",93,0)
 N Y
"RTN","ZISUTL",94,0)
 S Y=""
"RTN","ZISUTL",95,0)
 I $G(^%ZOSF("OS"))["VAX DSM" D
"RTN","ZISUTL",96,0)
 .S Y=$ZIO
"RTN","ZISUTL",97,0)
 E  I $G(^%ZOSF("OS"))["MSM" D
"RTN","ZISUTL",98,0)
 .S Y=$ZDEV($I)
"RTN","ZISUTL",99,0)
 Q Y
"RTN","ZISUTL",100,0)
LNPRTIEN(X) ;Return internal entry number of Line/port
"RTN","ZISUTL",101,0)
 N Y
"RTN","ZISUTL",102,0)
 S Y=$O(^%ZIS(3.23,"B",X,0))
"RTN","ZISUTL",103,0)
 Q Y
"RTN","ZISUTL",104,0)
LNPRTADR(X) ;Returns Line/Port name of a fixed device.
"RTN","ZISUTL",105,0)
 N %,Y
"RTN","ZISUTL",106,0)
 S Y=""
"RTN","ZISUTL",107,0)
 S %=$O(^%ZIS(1,"B",X,0))
"RTN","ZISUTL",108,0)
 S %=$O(^%ZIS(3.23,"C",+%,0))
"RTN","ZISUTL",109,0)
 I %,$G(^%ZIS(3.23,+%,0))]"" S Y=$P(^(0),"^")
"RTN","ZISUTL",110,0)
 Q Y
"RTN","ZISUTL",111,0)
 ;
"RTN","ZTER")
0^9^B24005575
"RTN","ZTER",1,0)
%ZTER ; ISC-SF.SEA/JLI - ERROR TRAP TO LOG ERRORS ;01/16/96  11:55
"RTN","ZTER",2,0)
 ;;8.0;KERNEL;**8,18**;JUL 10, 1995
"RTN","ZTER",3,0)
 I $ZE["-ALLOC,"!($ZE["<STORE>") D @$S('$D(^%ZOSF("OS")):"^%ET",^("OS")["DTM":"^%errlog",1:"^%ET") D H^XUS
"RTN","ZTER",4,0)
 S %ZT("^XUTL(""XQ"",$J)")="" S:'$D(%ZTERLGR) %ZTERLGR=$$LGR^%ZOSV()
"RTN","ZTER",5,0)
 S %ZTER11N=$P($G(^%ZTER(1,+$H,0)),"^",2)+1,^%ZTER(1,+$H,0)=(+$H)_"^"_%ZTER11N,^(1,0)="^3.0751^"_%ZTER11N_"^"_%ZTER11N
"RTN","ZTER",6,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,0)=%ZTER11N,^("ZE")=$ZE S:$D(%ZTERLGR) ^("GR")=%ZTERLGR K %ZTERLGR I %ZTER11N=1 S ^%ZTER(1,0)=$P(^%ZTER(1,0),"^",1,2)_"^"_(+$H)_"^"_($P(^%ZTER(1,0),"^",4)+1)
"RTN","ZTER",7,0)
 S %ZTER11B="" F %ZTER11I=1:1:$L($ZB) S %ZTER11A=$E($ZB,%ZTER11I),%ZTER11B=%ZTER11B_$S(%ZTER11A?1C:$C($A(%ZTER11A)+32#128),1:%ZTER11A)
"RTN","ZTER",8,0)
 S %ZTER11I="" I $D(^%ZOSF("UCI")) K %ZTER11A S:$D(Y) %ZTER11A="" S:($D(Y)#2) %ZTER11A=Y X ^%ZOSF("UCI") S %ZTER11I=Y K:'$D(%ZTER11A) Y S:$D(%ZTER11A) Y=%ZTER11A
"RTN","ZTER",9,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"H")=$H,^("J")=$J_"^^^"_%ZTER11I_"^"_$J,^("I")=$I_"^"_$ZA_"^"_%ZTER11B_"^"_$S($D(IO("ZIO")):IO("ZIO"),1:""),%ZTER11C=0
"RTN","ZTER",10,0)
 S %ZTERROR=$S($ZE["%DSM-E":$P($P($ZE,"%DSM-E-",2),","),1:$P($P($ZE,"<",2),">"))
"RTN","ZTER",11,0)
 I $G(^%ZOSF("OS"))["VAX DSM" K %ZTER11A,%ZTER11B S:'$D(%ZTER11S) %ZTER11S=$STACK-1 D ^%ZTER1 I 1
"RTN","ZTER",12,0)
 E  S %ZTERVAR="%" D:$D(%) VAR:$D(%)#2,SUBS:$D(%)\10 F %ZTER11Z=0:0 S %ZTERVAR=$O(@%ZTERVAR) Q:%ZTERVAR=""  D VAR:$D(@%ZTERVAR)#2,SUBS:$D(@%ZTERVAR)\10
"RTN","ZTER",13,0)
 D GLOB S:%ZTER11C>0 ^%ZTER(1,+$H,1,%ZTER11N,"ZV",0)="^3.0752^"_%ZTER11C_"^"_%ZTER11C S:'$D(^%ZTER(1,"B",+$H)) ^(+$H,+$H)="" S ^%ZTER(1,+$H,1,"B",%ZTER11N,%ZTER11N)=""
"RTN","ZTER",14,0)
LIN ;
"RTN","ZTER",15,0)
 S %ZTY=$P($ZE,","),%ZTX=$P(%ZTY,"^") S:%ZTX[">" %ZTX=$P(%ZTX,">",2)
"RTN","ZTER",16,0)
 I %ZTX'="" S X=$P($P(%ZTY,"^",2),":") I X'="" X ^%ZOSF("TEST") I $T D
"RTN","ZTER",17,0)
 .S XCNP=0,DIF="^TMP($J,""XTER1""," X ^%ZOSF("LOAD") S %ZTY=$P(%ZTX,"+",1) D
"RTN","ZTER",18,0)
 ..I %ZTY'="" F X=0:0 S X=$O(^TMP($J,"XTER1",X)) Q:X'>0  I $P(^(X,0)," ")=%ZTY S X=X+$P(%ZTX,"+",2),%ZTZLIN=^TMP($J,"XTER1",X,0) Q
"RTN","ZTER",19,0)
 ..I %ZTY="" S X=+$P(%ZTX,"+",2) Q:X'>0  S %ZTZLIN=^TMP($J,"XTER1",X,0)
"RTN","ZTER",20,0)
 K ^TMP($J,"XTER1"),XCNP,DIF,%ZTY,%ZTX,X,Y
"RTN","ZTER",21,0)
 S:$D(%ZTZLIN) ^%ZTER(1,+$H,1,%ZTER11N,"LINE")=%ZTZLIN K %ZTZLIN
"RTN","ZTER",22,0)
 I %ZTERROR'="",$D(^%ZTER(2,"B",%ZTERROR)) S %ZTERROR=%ZTERROR_"^"_$P(^%ZTER(2,+$O(^(%ZTERROR,0)),0),"^",2)
"RTN","ZTER",23,0)
 K %ZTER11A,%ZTER11B,%ZTER11C,%ZTER11S,%ZTER11Z,%ZTERVAP,%ZTERVAR,%ZTERSUB,%ZTER11I,%ZTER11D,%ZTER11L,%ZTER11Q,%,%ZTER111,%ZTER112,%H,%ZTER11N
"RTN","ZTER",24,0)
 Q
"RTN","ZTER",25,0)
 ;
"RTN","ZTER",26,0)
VAR I ",%ZTERVAR,%ZTER11Z,%ZTER11A,%ZTER11B,%ZTER11C,%ZTER11N,%ZTER11I,%ZTER11L,%ZTER11S,%ZTERVAP,%ZTERSUB,"'[(","_%ZTERVAR_",") S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTERVAR D
"RTN","ZTER",27,0)
 . I $L(@%ZTERVAR)'>255 S ^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=@%ZTERVAR Q
"RTN","ZTER",28,0)
 . S ^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=" **** VALUE IS GREATER THAN 255 CHARACTERS (SEE SUBNODES FOR DATA) *** "
"RTN","ZTER",29,0)
 . N %ZTER11,%ZTER12
"RTN","ZTER",30,0)
 . F %ZTER11=1:1 S %ZTER12=$E(@%ZTERVAR,1,245) Q:%ZTER12=""  S @%ZTERVAR=$E(@%ZTERVAR,246,$L(@%ZTERVAR)),^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D",%ZTER11)=%ZTER12
"RTN","ZTER",31,0)
 . Q
"RTN","ZTER",32,0)
 Q
"RTN","ZTER",33,0)
 ;
"RTN","ZTER",34,0)
SUBS S %ZTER11S="" Q:"%ZT("=$E(%ZTERVAR,1,4)  Q:",%ZTER11S,%ZTER11L,"[(","_%ZTERVAR_",")  S %ZTERVAP=%ZTERVAR_"(",%ZTERSUB="%ZTER11S)"
"RTN","ZTER",35,0)
 ;
"RTN","ZTER",36,0)
DESC S %ZTER11I=%ZTER11I+1,%ZTER11S(%ZTER11I)=%ZTER11S,%ZTER11S="",%ZTER11L(%ZTER11I)=$L(%ZTERSUB)-9 F %ZTER11Z=0:0 S %ZTER11S=$O(@(%ZTERVAP_%ZTERSUB)) Q:%ZTER11S=""  D SUBX
"RTN","ZTER",37,0)
 S %ZTER11S=%ZTER11S(%ZTER11I) K %ZTER11S(%ZTER11I),%ZTER11L(%ZTER11I) S %ZTER11I=%ZTER11I-1
"RTN","ZTER",38,0)
 Q
"RTN","ZTER",39,0)
 ;
"RTN","ZTER",40,0)
SUBX I $D(@(%ZTERVAP_%ZTERSUB))#10 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=$P(%ZTERVAP_%ZTERSUB,"%ZTER11S",1)_""""_%ZTER11S_""""_$P(%ZTERVAP_%ZTERSUB,"%ZTER11S",2),^("D")=@(%ZTERVAP_%ZTERSUB)
"RTN","ZTER",41,0)
 I $D(@(%ZTERVAP_%ZTERSUB))\10 S %ZTERSUB=$E(%ZTERSUB,1,%ZTER11L(%ZTER11I))_""""_%ZTER11S_""""_",%ZTER11S)" D DESC S %ZTERSUB=$E(%ZTERSUB,1,%ZTER11L(%ZTER11I))_"%ZTER11S)"
"RTN","ZTER",42,0)
 Q
"RTN","ZTER",43,0)
 ;
"RTN","ZTER",44,0)
GLOB ;
"RTN","ZTER",45,0)
 S %ZTER11D="" F %ZTER11I=0:0 S %ZTER11D=$O(%ZT(%ZTER11D)) Q:%ZTER11D=""  S %ZTER11A=%ZTER11D S:%ZTER11A["$J" %ZTER11B=$J,%ZTER11A=$P(%ZTER11A,"$J",1)_%ZTER11B_$P(%ZTER11A,"$J",2,99) S %ZTER11B=$P(%ZTER11A,")",1) D LOOP
"RTN","ZTER",46,0)
 Q
"RTN","ZTER",47,0)
 ;
"RTN","ZTER",48,0)
LOOP ;
"RTN","ZTER",49,0)
 F %ZTER11I=0:0 S %ZTER11A=$ZO(@%ZTER11A) Q:%ZTER11A'[%ZTER11B  S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=$P(%ZTER11D,")")_$P(%ZTER11A,%ZTER11B,2),^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=@%ZTER11A
"RTN","ZTER",50,0)
 Q
"RTN","ZTER",51,0)
UNWIND ;Unwind stack for new error trap. Called by app code.
"RTN","ZTER",52,0)
 S $ETRAP="D UNW^%ZTER Q"
"RTN","ZTER",53,0)
UNW Q:$ESTACK>1  S $ECODE="" Q
"RTN","ZTER1")
0^8^B7128429
"RTN","ZTER1",1,0)
%ZTER1 ;ISC-SF.SEA/JLI - ERROR TRAP TO LOG ERRORS (VAX LOCAL SYMBOL TABLE) ;01/16/96  15:10
"RTN","ZTER1",2,0)
 ;;8.0;KERNEL;**18**;JUL 10, 1995
"RTN","ZTER1",3,0)
VAX ;
"RTN","ZTER1",4,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"J")=$J_"^"_$ZC(%GETJPI,0,"PRCNAM")_"^"_$ZC(%GETJPI,0,"USERNAME")_"^"_%ZTER11I_"^"_$ZC(%SYSFAO,"!XL",$J),^%ZTER(1,+$H,1,%ZTER11N,"I")=$IO_"^"_$ZA_"^"_$ZB_"^"_$ZIO K %ZTER11I
"RTN","ZTER1",5,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"ZH")=$TR($ZH,",","^")
"RTN","ZTER1",6,0)
 I $STACK>100 G VERR
"RTN","ZTER1",7,0)
 S %ZTER111="%" F  D  S %ZTER111=$ZSORT(@%ZTER111) Q:%ZTER111=""  ;Code from DEC
"RTN","ZTER1",8,0)
 . Q:$E(%ZTER111,1,5)="%ZTER"
"RTN","ZTER1",9,0)
 . I $D(@%ZTER111)#2 D VNXT2
"RTN","ZTER1",10,0)
 . I $D(@%ZTER111)>9 D VNXT3
"RTN","ZTER1",11,0)
 . Q
"RTN","ZTER1",12,0)
 I $ECODE]"" S $ZE=""
"RTN","ZTER1",13,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$ECODE",^("D")=$E($ECODE,1,255)
"RTN","ZTER1",14,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$ESTACK",^("D")=$ESTACK
"RTN","ZTER1",15,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK",^("D")=$STACK
"RTN","ZTER1",16,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$QUIT",^("D")=$QUIT
"RTN","ZTER1",17,0)
 F %=0:1:%ZTER11S S %1=$E(1000+%,2,4) D
"RTN","ZTER1",18,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_")",^("D")=$STACK(%)
"RTN","ZTER1",19,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""ECODE"")",^("D")=$STACK(%,"ECODE")
"RTN","ZTER1",20,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""PLACE"")",^("D")=$STACK(%,"PLACE")
"RTN","ZTER1",21,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""MCODE"")",^("D")=$STACK(%,"MCODE")
"RTN","ZTER1",22,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"LINE")=$STACK(%ZTER11S,"MCODE")
"RTN","ZTER1",23,0)
 S $ECODE=""
"RTN","ZTER1",24,0)
 Q
"RTN","ZTER1",25,0)
 ;
"RTN","ZTER1",26,0)
VNXT2 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTER111,^("D")=$E(@%ZTER111,1,255)
"RTN","ZTER1",27,0)
 Q
"RTN","ZTER1",28,0)
VNXT3 S %ZTER11Q=%ZTER111
"RTN","ZTER1",29,0)
 F  S %ZTER11Q=$Q(@%ZTER11Q) Q:%ZTER11Q=""  S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTER11Q,^("D")=$E(@%ZTER11Q,1,255)
"RTN","ZTER1",30,0)
 Q
"RTN","ZTER1",31,0)
VERR ;
"RTN","ZTER1",32,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"ZE2")="%DSM-E-ET, Error occurred in %ZTER, "_$ECODE
"RTN","ZTER1",33,0)
 HALT
"RTN","ZTMS")
0^10^B12470217
"RTN","ZTMS",1,0)
%ZTMS ;SEA/RDS-TaskMan: Submanager, (Entry & Trap) ;02/01/96  11:09
"RTN","ZTMS",2,0)
 ;;8.0;KERNEL;**2,18**;Jul 10, 1995
"RTN","ZTMS",3,0)
 ;
"RTN","ZTMS",4,0)
START ;Bottom level of submanager
"RTN","ZTMS",5,0)
 I $G(^%ZOSF("OS"))["VAX DSM" S $ETRAP="S %ZTER11S=$STACK D ERROR^%ZTMS HALT"
"RTN","ZTMS",6,0)
 E  S X="ERROR^%ZTMS",@^%ZOSF("TRAP")
"RTN","ZTMS",7,0)
 I $D(^%ZTSCH("STOP")) Q
"RTN","ZTMS",8,0)
 S ZTQUEUED=0,U="^",^%ZTSCH("SUB",0)=0
"RTN","ZTMS",9,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$STRT ZTMS")
"RTN","ZTMS",10,0)
 S X="Sub "_$J D SETENV^%ZOSV
"RTN","ZTMS",11,0)
 D PARAMS
"RTN","ZTMS",12,0)
 I '$D(ZTOUT) G SUBMGR^%ZTMS1
"RTN","ZTMS",13,0)
QUIT I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$STOP ZTMS")
"RTN","ZTMS",14,0)
 Q
"RTN","ZTMS",15,0)
PARAMS ;
"RTN","ZTMS",16,0)
 ;START--lookup parameters
"RTN","ZTMS",17,0)
 X ^%ZOSF("PRIINQ") S %ZTMS("PRIO")=Y ;Get starting priority
"RTN","ZTMS",18,0)
 D GETENV^%ZOSV
"RTN","ZTMS",19,0)
 S ZTCPU=$P(Y,U,2),ZTNODE=$P(Y,U,3),ZTPAIR=$P(Y,U,4),ZTUCI=$P(Y,U)_$S(ZTCPU]"":","_ZTCPU,1:"")
"RTN","ZTMS",20,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,"")),ZTPRE=0,ZTYPE=""
"RTN","ZTMS",21,0)
 I X]"" S %=$G(^%ZIS(14.7,X,0)),ZTPRE=+$P(%,U,6),ZTYPE=$P(%,U,9)
"RTN","ZTMS",22,0)
 I 'X S ZTOUT=1 Q
"RTN","ZTMS",23,0)
 I "FO"[ZTYPE S ZTOUT=1 Q  ;SM only run on C,P,G types
"RTN","ZTMS",24,0)
 Q
"RTN","ZTMS",25,0)
ERROR ;START--trap
"RTN","ZTMS",26,0)
 ;prepare to handle error, set backup trap
"RTN","ZTMS",27,0)
 S %ZTERLGR=$$LGR^%ZOSV
"RTN","ZTMS",28,0)
 S %ZTME=$$EC^%ZOSV
"RTN","ZTMS",29,0)
 I $G(^%ZOSF("OS"))["VAX DSM" S $ETRAP="D ERROR2^%ZTMS0 HALT"
"RTN","ZTMS",30,0)
 E  S %ZX=$G(X,"undef"),X="ERROR2^%ZTMS0",@^%ZOSF("TRAP")
"RTN","ZTMS",31,0)
 S %ZTMETSK=$S($D(%ZTTV)#2:$P(%ZTTV,"^",4),$G(ZTSK)>0:ZTSK,1:0)
"RTN","ZTMS",32,0)
 I %ZTMETSK L ^%ZTSK(%ZTMETSK) ;Unlock all other locks
"RTN","ZTMS",33,0)
 I $G(IO)]"" L +^%ZTSCH("DEV",IO) ;Keep other tasks from IO device.
"RTN","ZTMS",34,0)
CHECK ;identify and screen out certain errors
"RTN","ZTMS",35,0)
 S %ZTE="" F  S %ZTE=$O(^%ZTSCH("ES",%ZTE)) Q:%ZTE=""  Q:%ZTME[%ZTE
"RTN","ZTMS",36,0)
 I %ZTE]"" D  G CK2 ;Skip the recording of the error.
"RTN","ZTMS",37,0)
 . I $D(^%ZTSCH("ES",%ZTE,1)) L +^%ZTSCH("ES") S ^(1)=$G(^%ZTSCH("ES",%ZTE,1))+1 L -^%ZTSCH("ES")
"RTN","ZTMS",38,0)
 . Q
"RTN","ZTMS",39,0)
 ;record error in Kernel error file
"RTN","ZTMS",40,0)
 D ^%ZTER
"RTN","ZTMS",41,0)
 S ZTERROZT=%ZTMETSK,ZTERROR=%ZTME ;Set old variables
"RTN","ZTMS",42,0)
 ;log error and context in TaskMan Error file
"RTN","ZTMS",43,0)
 L +^%ZTSCH("ER") H 1 S ZTERROH=$H
"RTN","ZTMS",44,0)
 S ^%ZTSCH("ER",+ZTERROH,$P(ZTERROH,",",2))=%ZTME
"RTN","ZTMS",45,0)
 D XREF^%ZTMS0
"RTN","ZTMS",46,0)
 S ^%ZTSCH("ER",+ZTERROH,$P(ZTERROH,",",2),1)=ZTERROX1
"RTN","ZTMS",47,0)
 L -^%ZTSCH("ER")
"RTN","ZTMS",48,0)
CK2 ;
"RTN","ZTMS",49,0)
 I $D(ZTDEVOK) S $P(^%ZTSCH("IO"),U,2)=ZTDEVOK ;Have others skip dev.
"RTN","ZTMS",50,0)
 ;Update Task file entry
"RTN","ZTMS",51,0)
 I $G(ZTQUEUED),%ZTMETSK,$D(^%ZTSK(%ZTMETSK)) D STATUS^%ZTMS0
"RTN","ZTMS",52,0)
 ;
"RTN","ZTMS",53,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$ETRP ZTMS")
"RTN","ZTMS",54,0)
 I ZTQUEUED>.9,%ZTMETSK>0,$G(DUZ)>.9,$D(^DD(8992,.01,0)) D
"RTN","ZTMS",55,0)
 . S XQA(DUZ)="",XQAMSG="Your task #"_%ZTMETSK_" stopped because of an error",XQADATA=%ZTMETSK,XQAROU="XQA^XUTMUTL"
"RTN","ZTMS",56,0)
 . D SETUP^XQALERT Q
"RTN","ZTMS",57,0)
 ;
"RTN","ZTMS",58,0)
CLEAN ;clean up global data related to this process
"RTN","ZTMS",59,0)
 I $G(ZTQUEUED)>.9 K ^%ZTSCH("TASK",ZTQUEUED)
"RTN","ZTMS",60,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS",61,0)
 I $D(ZTFREE)#2,$D(ZTUCI)#2,ZTUCI]"" D SUB^%ZTMS1(-1)
"RTN","ZTMS",62,0)
 I $D(ZTDEVN)#2,$D(%ZTIO)#2,%ZTIO]"" D DEVLK^%ZTMS1(-1,%ZTIO)
"RTN","ZTMS",63,0)
 I $D(ZTDEVOK)#2 D DEVBAD^%ZTMS0
"RTN","ZTMS",64,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2("S",ZTSYNCFL,"","Stopped because of an error")
"RTN","ZTMS",65,0)
 ;
"RTN","ZTMS",66,0)
CLOSE ;close i/o device after error
"RTN","ZTMS",67,0)
 D ERCLOZ^%ZTMS0
"RTN","ZTMS",68,0)
 I $G(IO)]"" C IO H 5 ;In case of a port problem give it time to reset.
"RTN","ZTMS",69,0)
 ;
"RTN","ZTMS",70,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$ESTP ZTMS")
"RTN","ZTMS",71,0)
 I ZTQUEUED=.5,%ZTMETSK>0,$P($G(^%ZTSK(%ZTMETSK,.12)),"^")<5 D  ;Only try 5 times
"RTN","ZTMS",72,0)
 . S $P(^(.12),"^")=^%ZTSK(%ZTMETSK,.12)+1
"RTN","ZTMS",73,0)
 . S ^%ZTSCH($$NEWH^%ZTMS2($H,600),%ZTMETSK)=""
"RTN","ZTMS",74,0)
 HALT  ;Start a new process to continue
"RTN","ZTMS2")
0^6^B16565191
"RTN","ZTMS2",1,0)
%ZTMS2 ;SEA/RDS-TaskMan: Submanager, Part 4 (Unload, Get Device) ;01/11/96  16:18
"RTN","ZTMS2",2,0)
 ;;8.0;KERNEL;**2,18**;Jul 10, 1995
"RTN","ZTMS2",3,0)
 ;^%ZTSK(ZTSK) is locked on entry or return from GETNEXT
"RTN","ZTMS2",4,0)
PROCESS ;SUBMGR--process task and all others waiting for same device
"RTN","ZTMS2",5,0)
 D LOOKUP I $D(ZTREJECT) Q
"RTN","ZTMS2",6,0)
 D DEVICE
"RTN","ZTMS2",7,0)
 Q:POP
"RTN","ZTMS2",8,0)
 I ZTSYNCFL]"",'$$SYNCFLG("A",ZTSYNCFL,%ZTIO) D SYNCQ(ZTSYNCFL,%ZTIO,ZTDTH,ZTSK),^%ZISC Q
"RTN","ZTMS2",9,0)
 D TASK^%ZTMS3 I ZTYPE="C"!$D(ZTNONEXT) Q
"RTN","ZTMS2",10,0)
 D GETNEXT^%ZTMS7 I $D(ZTNONEXT)!$D(ZTQUIT) Q
"RTN","ZTMS2",11,0)
 G PROCESS
"RTN","ZTMS2",12,0)
 ;
"RTN","ZTMS2",13,0)
LOOKUP ;PROCESS--unload task, switch ucis, and test entry routine
"RTN","ZTMS2",14,0)
 K (%ZTIO,IO,U,ZTCPU,ZTDEVN,ZTDTH,ZTNODE,ZTPAIR,ZTPRE,ZTQUEUED,ZTSK,ZTUCI,ZTYPE)
"RTN","ZTMS2",15,0)
 D TSTAT(4,"")
"RTN","ZTMS2",16,0)
 S ZTREC=^%ZTSK(ZTSK,0),ZTREC02=^(.02)
"RTN","ZTMS2",17,0)
 S ZTREC2=^%ZTSK(ZTSK,.2),ZTREC21=^(.21),ZTREC25=^(.25)
"RTN","ZTMS2",18,0)
 S ZTSYNCFL=$P(ZTREC2,"^",7),DUZ=+$P(ZTREC,U,3),DUZ(0)="@"
"RTN","ZTMS2",19,0)
 S X=$P(ZTREC02,U)_","_$P(ZTREC02,U,2)
"RTN","ZTMS2",20,0)
 I $P(ZTREC02,U,4) S $P(X,",",2)=ZTCPU
"RTN","ZTMS2",21,0)
 ;should do a check to see if X is OK, Should check UCI mapping.
"RTN","ZTMS2",22,0)
 I X'=ZTUCI S ZTUCI=X D SWAP^%XUCI
"RTN","ZTMS2",23,0)
 S X=$P($P(ZTREC,U,2),"("),ZTRTN=$P(ZTREC,U,1,2)
"RTN","ZTMS2",24,0)
 I $E(X)'="%" X ^%ZOSF("TEST"):X]"" I X=""!'$T D REJECT S ZTREJECT=""
"RTN","ZTMS2",25,0)
 Q
"RTN","ZTMS2",26,0)
 ;
"RTN","ZTMS2",27,0)
REJECT ;LOOKUP--entry routine isn't here; reject task
"RTN","ZTMS2",28,0)
 N Y X ^%ZOSF("UCI")
"RTN","ZTMS2",29,0)
 D TSTAT("B","No routine at destination "_Y_".")
"RTN","ZTMS2",30,0)
 I $D(ZTDEVN) D DEVLK^%ZTMS1(-1,%ZTIO) K ZTDEVN
"RTN","ZTMS2",31,0)
 L  Q  ;Clear all locks
"RTN","ZTMS2",32,0)
 ;
"RTN","ZTMS2",33,0)
DEVICE ;PROCESS--prepare requested device; if can't, make task wait
"RTN","ZTMS2",34,0)
 ;shortcut & screen
"RTN","ZTMS2",35,0)
 S ZTIO=$P(ZTREC2,U),ZTIOT=$P(ZTREC2,U,3)
"RTN","ZTMS2",36,0)
 I ZTIO="" S (IO,IO(0),IOF,ION,IOS,IOST,IOT)="",POP=0 Q
"RTN","ZTMS2",37,0)
 ;
"RTN","ZTMS2",38,0)
 ;setup call
"RTN","ZTMS2",39,0)
 S %ZIS="LRS0"_$S($P(ZTREC2,U,5)="DIRECT":"D",1:"")
"RTN","ZTMS2",40,0)
 S:ZTIOT="HFS" %ZIS("HFSIO")=$P(ZTREC2,U,6),%ZIS("IOPAR")=ZTREC25
"RTN","ZTMS2",41,0)
 S:ZTIOT="MT" %ZIS("IOPAR")=ZTREC25
"RTN","ZTMS2",42,0)
 S (IO,IO(0))=%ZTIO,IOP=ZTIO
"RTN","ZTMS2",43,0)
 K ^XUTL("XQ",$J)
"RTN","ZTMS2",44,0)
 ;
"RTN","ZTMS2",45,0)
 S:$P(ZTREC2,U,4)["MINIOUT" %ZISLOCK="^%ZTSCH(""NETMAIL"",IO)" ;The hang is on the close
"RTN","ZTMS2",46,0)
 ;call
"RTN","ZTMS2",47,0)
 S %ZISTO=3 D ^%ZIS K %ZISTO,%ZISLOCK ;See that we use a timeout.
"RTN","ZTMS2",48,0)
 I %ZTIO]"" D DEVLK^%ZTMS1(-1,%ZTIO) K ZTDEVN
"RTN","ZTMS2",49,0)
 I 'POP,%ZTIO]"",IO'=%ZTIO C %ZTIO K IO(1,%ZTIO) S %ZTIO=IO ;Reset %ZTIO if IO doesn't match
"RTN","ZTMS2",50,0)
 ;
"RTN","ZTMS2",51,0)
 ;results
"RTN","ZTMS2",52,0)
 I POP,(ZTYPE'="C"),(ZTIOT="TRM")!(ZTIOT="RES")!(ZTIOT="HG") D IONQ Q  ;only add to IO queue if not type C.
"RTN","ZTMS2",53,0)
 I POP D SCHNQ Q
"RTN","ZTMS2",54,0)
 I IOT'="RES",IOT'="HG" U IO
"RTN","ZTMS2",55,0)
 S IO(0)=IO
"RTN","ZTMS2",56,0)
 I $P(^%ZIS(1,+IOS,0),U,7)="y" D ^%ZTMSH
"RTN","ZTMS2",57,0)
 Q
"RTN","ZTMS2",58,0)
 ;
"RTN","ZTMS2",59,0)
IONQ ;DEVICE--put task on Device Waiting List
"RTN","ZTMS2",60,0)
 L +^%ZTSCH("IO")
"RTN","ZTMS2",61,0)
 I $D(^%ZTSK(ZTSK,0))[0 D TSTAT("I",4) G IOQX
"RTN","ZTMS2",62,0)
 D TSTAT("A","")
"RTN","ZTMS2",63,0)
 S ZTIO(1)=$P(ZTREC2,U,5),ZTIOS=ZTREC21
"RTN","ZTMS2",64,0)
 D NQ^%ZTM4
"RTN","ZTMS2",65,0)
IOQX L  Q  ;Clear all Locks
"RTN","ZTMS2",66,0)
 ;
"RTN","ZTMS2",67,0)
SCHNQ ;DEVICE--if HFS or SPL or TYPE'=C, reschedule task 10 min in future (try later)
"RTN","ZTMS2",68,0)
 S ZTH=$$NEWH($H,300)
"RTN","ZTMS2",69,0)
 L +^%ZTSCH(ZTH,ZTSK)
"RTN","ZTMS2",70,0)
 D TSTAT(1,"rescheduled for busy device")
"RTN","ZTMS2",71,0)
 S ^%ZTSCH(ZTH,ZTSK)=""
"RTN","ZTMS2",72,0)
 L  Q  ;Clear all locks
"RTN","ZTMS2",73,0)
 ;
"RTN","ZTMS2",74,0)
NEWH(%H,%Y) ;Build a new schedule time
"RTN","ZTMS2",75,0)
 N % S %=$P(%H,",",2)+%Y Q (%H+(%>86400))_","_(%#86400)
"RTN","ZTMS2",76,0)
 ;
"RTN","ZTMS2",77,0)
SYNCFLG(ACT,FLAG,ZIO,STAT) ;Allocate/deallocate sync flag
"RTN","ZTMS2",78,0)
 N X,DA,SYNC
"RTN","ZTMS2",79,0)
 L +^%ZISL(14.8):30 E  Q 0
"RTN","ZTMS2",80,0)
 S X=0,SYNC=ZIO_"~"_FLAG,DA=$O(^%ZISL(14.8,"B",SYNC,0))
"RTN","ZTMS2",81,0)
 I ACT["A" D
"RTN","ZTMS2",82,0)
 . I DA S X=0 Q
"RTN","ZTMS2",83,0)
 . ;I $D(^%ZTSCH("SYNC",ZIO,FLAG)) S X=0 Q
"RTN","ZTMS2",84,0)
 . S X=$P(^%ZISL(14.8,0),"^",3)+1 F  Q:'$D(^%ZISL(14.8,X))  S X=X+1
"RTN","ZTMS2",85,0)
 . S $P(^(0),"^",3,4)=X_"^"_($P(^%ZISL(14.8,0),"^",4)+1),^%ZISL(14.8,X,0)=SYNC,^%ZISL(14.8,"B",SYNC,X)=""
"RTN","ZTMS2",86,0)
 . S X=1 Q
"RTN","ZTMS2",87,0)
 I ACT["D" D  S X=1
"RTN","ZTMS2",88,0)
 . Q:DA'>0
"RTN","ZTMS2",89,0)
 . K ^%ZISL(14.8,DA),^%ZISL(14.8,"B",SYNC,DA)
"RTN","ZTMS2",90,0)
 . S $P(^(0),"^",3,4)=(DA-1)_"^"_($P(^%ZISL(14.8,0),"^",4)-1)
"RTN","ZTMS2",91,0)
 . Q
"RTN","ZTMS2",92,0)
 I ACT["S" D  S X=1
"RTN","ZTMS2",93,0)
 . Q:DA'>0
"RTN","ZTMS2",94,0)
 . S ^%ZISL(14.8,DA,1)=$G(STAT)
"RTN","ZTMS2",95,0)
 . Q
"RTN","ZTMS2",96,0)
 I ACT["?" S X=(DA)!($D(^%ZTSCH("SYNC",ZIO,FLAG)))
"RTN","ZTMS2",97,0)
 L -^%ZISL(14.8)
"RTN","ZTMS2",98,0)
 Q X
"RTN","ZTMS2",99,0)
 ;
"RTN","ZTMS2",100,0)
SYNCQ(FLAG,ZIO,ZTH,ZTSK) ;Put task on sync flag waiting list
"RTN","ZTMS2",101,0)
 L +^%ZTSCH("SYNC")
"RTN","ZTMS2",102,0)
 S ^%ZTSCH("SYNC",ZIO,FLAG,ZTSK)=ZTH
"RTN","ZTMS2",103,0)
 L -^%ZTSCH("SYNC")
"RTN","ZTMS2",104,0)
 Q
"RTN","ZTMS2",105,0)
SCHSYNC(FLAG,ZIO) ;put a waiting task in IO queue
"RTN","ZTMS2",106,0)
 L +^%ZTSCH("SYNC") I $D(^%ZTSCH("SYNC",ZIO,FLAG)) N ZTH,ZTSK D
"RTN","ZTMS2",107,0)
 . S ZTSK=$O(^(FLAG,0)),ZTH=$G(^(+ZTSK)) Q:ZTSK=""  S:$D(^%ZTSCH("IO",ZIO))[0 ^(ZIO)=IOT
"RTN","ZTMS2",108,0)
 . S ^%ZTSCH("IO",ZIO,ZTH,ZTSK)=""
"RTN","ZTMS2",109,0)
 . K ^%ZTSCH("SYNC",ZIO,FLAG,ZTSK)
"RTN","ZTMS2",110,0)
 . Q
"RTN","ZTMS2",111,0)
 L -^%ZTSCH("SYNC")
"RTN","ZTMS2",112,0)
 Q
"RTN","ZTMS2",113,0)
TSTAT(CODE,TXT) ;Record status
"RTN","ZTMS2",114,0)
 Q:$D(^%ZTSK(ZTSK,.1))[0
"RTN","ZTMS2",115,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=CODE_U_$H_U_TXT
"RTN","ZTMS2",116,0)
 Q
"RTN","ZTMS3")
0^12^B19488663
"RTN","ZTMS3",1,0)
%ZTMS3 ;SEA/RDS-TaskMan: Submanager, Part 5 (Run Task) ;1/31/96  11:52
"RTN","ZTMS3",2,0)
 ;;8.0;KERNEL;**1,18**;Jul 03, 1995
"RTN","ZTMS3",3,0)
 ;
"RTN","ZTMS3",4,0)
TASK ;SUBMGR--prepare and run task; cleanup after
"RTN","ZTMS3",5,0)
 ;
"RTN","ZTMS3",6,0)
BEFORE ;prepare task
"RTN","ZTMS3",7,0)
 ;submanager's variables
"RTN","ZTMS3",8,0)
 S ZTDEF=""
"RTN","ZTMS3",9,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,""))
"RTN","ZTMS3",10,0)
 I X]"",$D(^%ZIS(14.7,X,0))#2 S ZTDEF=^(0)
"RTN","ZTMS3",11,0)
 S DUZ=+$P(ZTREC,U,3)
"RTN","ZTMS3",12,0)
 S %ZTTV=ZTUCI_U_IOS_U_ZTPRE_U_ZTSK_U_IO_U_IOT_U_ZTCPU_U_ZTNODE_U_DUZ_U_U_IOF_U_IOST_U_ZTPAIR_U_ZTYPE_U
"RTN","ZTMS3",13,0)
 S %ZTTV(0)=ZTRTN_U_$P(ZTREC,U,8,9)_U_$P(ZTREC,U,6)_U_ION_U_ZTUCI_U_$P(ZTREC,U,5)_U_$S($P(ZTREC,U,10)]"":$P(ZTREC,U,10),1:$P(ZTREC,U,3))_U_$J_U_ZTSYNCFL_U
"RTN","ZTMS3",14,0)
 I $D(^%ZTSCH("LOGRSRC")) D
"RTN","ZTMS3",15,0)
 .S %ZTTV(1)="!"_$P(ZTREC,U,9)
"RTN","ZTMS3",16,0)
 .I %ZTTV(1)="" S %ZTTV(1)="!"_$P(ZTRTN,U,2)
"RTN","ZTMS3",17,0)
 ;
"RTN","ZTMS3",18,0)
 ;external calls
"RTN","ZTMS3",19,0)
 D NOW^%DTC S DT=% ;DT is Date.time at this point.
"RTN","ZTMS3",20,0)
1 D SETNM^%ZOSV($E("BTask ",(ZTIO]"")+1,6)_(ZTSK#100000000))
"RTN","ZTMS3",21,0)
 ;
"RTN","ZTMS3",22,0)
 ;priority
"RTN","ZTMS3",23,0)
 S X=$P(ZTREC,U,15)
"RTN","ZTMS3",24,0)
 S X=$S(+X'=X:0,X'<1&(X'>10):X\1,1:0)
"RTN","ZTMS3",25,0)
 S Y=$S(IOS="":0,$D(^%ZIS(1,+IOS,0))[0:0,1:+$P(^(0),U,5))
"RTN","ZTMS3",26,0)
 S Y=$S(Y'<1&(Y'>10):Y\1,1:0)
"RTN","ZTMS3",27,0)
 S X=$S(Y:Y,X:X,$P(ZTDEF,U,4):$P(ZTDEF,U,4),1:10)
"RTN","ZTMS3",28,0)
 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",29,0)
 ;
"RTN","ZTMS3",30,0)
2 ;restore saved variables
"RTN","ZTMS3",31,0)
 S X=$O(^XTV(8989.3,1,4,"B",ZTCPU,0)) S:$P($G(^XTV(8989.3,1,4,+X,0)),U,6)="y" XRTL=ZTUCI
"RTN","ZTMS3",32,0)
 K %,%H,%I,%ZTI,%ZTIO,IO("C"),IO("T"),X,Y,ZTCPU,ZTDEF,ZTIOST,ZTIOT,ZTNODE,ZTPAIR,ZTPRE,ZTREC,ZTREC2,ZTREC21,ZTREC25,ZTUCI,^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS3",33,0)
 S DUZ(0)="" D RESTORE^%ZTMS4
"RTN","ZTMS3",34,0)
 ;
"RTN","ZTMS3",35,0)
 ;force values
"RTN","ZTMS3",36,0)
 S DUZ=+DUZ,DTIME=0,ZTDESC=$G(^%ZTSK(ZTSK,.03)),ZTDTH=$H
"RTN","ZTMS3",37,0)
 I DUZ(0)="" S DUZ(0)=$S($D(^VA(200,DUZ,0))#2:$P(^(0),U,4),1:"")
"RTN","ZTMS3",38,0)
 I $D(DUZ(2))[0 S DUZ(2)=$S($D(^VA(200,DUZ,2,0)):$O(^(0)),1:0)
"RTN","ZTMS3",39,0)
 S ^XUTL("XQ",$J,0)=DT,^("ZTSK")=ZTDESC
"RTN","ZTMS3",40,0)
 S X="DUZ" F  S X=$Q(@X) Q:X=""  I $D(@X) S ^XUTL("XQ",$J,$TR(X,""""))=@X
"RTN","ZTMS3",41,0)
 F X="DUZ","IO","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY","XQVOL" I $D(@X) S ^XUTL("XQ",$J,X)=@X
"RTN","ZTMS3",42,0)
3 ;
"RTN","ZTMS3",43,0)
 ;final checks & sets
"RTN","ZTMS3",44,0)
 I '$D(^%ZTSK(ZTSK)) S ZTTASK=0 D AFTER Q
"RTN","ZTMS3",45,0)
 I $S($D(^%ZTSK(ZTSK,.1))[0:0,1:$P(^(.1),U,10)]"") S $P(^%ZTSK(ZTSK,.1),U,1,3)="D^"_$H_"^4",ZTTASK=0 D AFTER Q
"RTN","ZTMS3",46,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=5_U_$H_U
"RTN","ZTMS3",47,0)
 S ZTQUEUED=ZTSK,ZTSTAT="1 General error"
"RTN","ZTMS3",48,0)
 S ^%ZTSCH("TASK",ZTSK)=%ZTTV(0)_$H
"RTN","ZTMS3",49,0)
 ;
"RTN","ZTMS3",50,0)
RUN ;run task
"RTN","ZTMS3",51,0)
 I ^%ZOSF("OS")["MSM-PC/PLUS" V:$P($ZV,"Version ",2)]]"4.0.11D" 360:$J:2**$V($V(58,-5)+8,-3,2)-1:4 ZSYNC
"RTN","ZTMS3",52,0)
 L
"RTN","ZTMS3",53,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,U,13),"")),0),U,3)="Y" D LOGIN^%ZTMS4
"RTN","ZTMS3",54,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV(%ZTTV(1))
"RTN","ZTMS3",55,0)
 S DT=DT\1 S:ZTRTN="ZTSK^XQ1" ZTREQ="@"
"RTN","ZTMS3",56,0)
 X "N %ZTTV D @ZTRTN"
"RTN","ZTMS3",57,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$AFTR ZTMS")
"RTN","ZTMS3",58,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,"^",13),"")),0),"^",3)="Y" D LOGOUT^%ZTMS4
"RTN","ZTMS3",59,0)
 L  ;Clear all user locks.
"RTN","ZTMS3",60,0)
 ;
"RTN","ZTMS3",61,0)
AFTER ;cleanup after task; reset partition
"RTN","ZTMS3",62,0)
 S U="^",ZTSK=$P(%ZTTV,U,4) L +^%ZTSK(ZTSK)
"RTN","ZTMS3",63,0)
 I $D(ZTTASK)[0 K ^%ZTSCH("TASK",ZTSK) S ZTQUEUED=.6,ZTTASK=1
"RTN","ZTMS3",64,0)
 S X=10 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",65,0)
 S X="Sub "_$J D SETENV^%ZOSV
"RTN","ZTMS3",66,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J) I $T(XUTL^XUSCLEAN)]"" D XUTL^XUSCLEAN
"RTN","ZTMS3",67,0)
 S ZTUCI=$P(%ZTTV,U),IOS=$P(%ZTTV,U,2),ZTPRE=$P(%ZTTV,U,3),(IO,IO(0),%ZTIO)=$P(%ZTTV,U,5),IOT=$P(%ZTTV,U,6),ZTCPU=$P(%ZTTV,U,7),ZTNODE=$P(%ZTTV,U,8)
"RTN","ZTMS3",68,0)
 S IOF=$P(%ZTTV,U,11),IOST=$P(%ZTTV,U,12),ZTPAIR=$P(%ZTTV,U,13),ZTYPE=$P(%ZTTV,U,14),ZTSYNCFL=$P(%ZTTV(0),U,11)
"RTN","ZTMS3",69,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2($S($G(ZTSTAT):"S",1:"D"),ZTSYNCFL,IO,$G(ZTSTAT)) D SCHSYNC^%ZTMS2(ZTSYNCFL,IO):'$G(ZTSTAT)
"RTN","ZTMS3",70,0)
 D POST^%ZTMS4:ZTTASK,CLOSE
"RTN","ZTMS3",71,0)
 K (%ZTIO,%ZTTV,IO,IOF,IOS,IOST,IOT,U,ZTCPU,ZTNODE,ZTNONEXT,ZTPAIR,ZTPRE,ZTQUEUED,ZTREQ,ZTSTOP,ZTUCI,ZTYPE),IO("C"),IO("T")
"RTN","ZTMS3",72,0)
 S DUZ=0,DUZ(0)="@",ZTQUEUED=0
"RTN","ZTMS3",73,0)
 L  ;Clear all locks, -^%ZTSK(ZTSK)
"RTN","ZTMS3",74,0)
 Q
"RTN","ZTMS3",75,0)
 ;
"RTN","ZTMS3",76,0)
CLOSE ;RUN--close &/or close execute
"RTN","ZTMS3",77,0)
 I %ZTIO="" S ZTNONEXT=1 Q
"RTN","ZTMS3",78,0)
 N ZTUCI,ZTCPU,ZTNODE,IOCPU
"RTN","ZTMS3",79,0)
 I IOT="HFS"!(IOT="SPL") S ZTNONEXT=1
"RTN","ZTMS3",80,0)
 ;I IOT="RES" Q
"RTN","ZTMS3",81,0)
 K IO("C") S:IOT'="TRM" IO("C")=1
"RTN","ZTMS3",82,0)
 I $D(IO("CLOSE")) S IO("T")=1
"RTN","ZTMS3",83,0)
 ;Here is the Lock and hang to allow IDCU ports to reset. See %ZTMS2.
"RTN","ZTMS3",84,0)
 I IOST["MINIOUT" S IO("C")=1 L +^%ZTSCH("NETMAIL",%ZTIO):60
"RTN","ZTMS3",85,0)
 I $D(IO(1,IO))#2 D ^%ZISC
"RTN","ZTMS3",86,0)
 I IOST["MINIOUT" H 6 ;Wait for terminal server to reset.
"RTN","ZTMS3",87,0)
 ;Unlock of all locks is done in clean
"RTN","ZTMS3",88,0)
 ;See that all devices are closed.
"RTN","ZTMS3",89,0)
 I $D(IO("C")) S IO="" F  S IO=$O(IO(1,IO)) Q:IO=""  K IO(1,IO) C IO
"RTN","ZTMS3",90,0)
 Q
"RTN","ZTMS3",91,0)
 ;
"VER")
8.0^21.0
"^DD",9.2,9.2,0)
FIELD^^10.2^14
"^DD",9.2,9.2,0,"DDA")
N
"^DD",9.2,9.2,0,"DT")
2910815
"^DD",9.2,9.2,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",9.2,9.2,0,"IX","AC",9.2,6)

"^DD",9.2,9.2,0,"IX","AD",9.24,.01)

"^DD",9.2,9.2,0,"IX","AE",9.22,1)

"^DD",9.2,9.2,0,"IX","B",9.2,.01)

"^DD",9.2,9.2,0,"IX","C",9.2,1)

"^DD",9.2,9.2,0,"IX","D",9.2,4)

"^DD",9.2,9.2,0,"IX","D",9.23,.01)

"^DD",9.2,9.2,0,"NM","HELP FRAME")

"^DD",9.2,9.2,0,"PT",3.3,3.7)

"^DD",9.2,9.2,0,"PT",9.22,1)

"^DD",9.2,9.2,0,"PT",9.4,12)

"^DD",9.2,9.2,0,"PT",9.698,.01)

"^DD",9.2,9.2,0,"PT",19,3.7)

"^DD",9.2,9.2,0,"PT",120.51,5)

"^DD",9.2,9.2,0,"PT",2020,21)

"^DD",9.2,9.2,0,"PT",8995,.05)

"^DD",9.2,9.2,0,"PT",16003,3.7)

"^DD",9.2,9.2,0,"PT",16003.6,12)

"^DD",9.2,9.2,0,"PT",16003.698,.01)

"^DD",9.2,9.2,0,"PT",16076.019,.01)

"^DD",9.2,9.2,0,"PT",99999,3.7)

"^DD",9.2,9.2,0,"VRPK")
KERNEL PUBLIC DOMAIN
"^DD",9.2,9.2,.001,0)
NUMBER^NJ7,0^^ ^K:+X'=X!(X>1000000)!(X<1)!(X?.E1"."1N.N) X
"^DD",9.2,9.2,.001,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 1000000
"^DD",9.2,9.2,.001,21,0)
^^1^1^2931214^
"^DD",9.2,9.2,.001,21,1,0)
This field uniquely identifies a help frame.
"^DD",9.2,9.2,.01,0)
NAME^RX^^0;1^D CHKNAME^XQ5 K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
"^DD",9.2,9.2,.01,.1)
SHORT DESCRIPTION OF THE FRAME
"^DD",9.2,9.2,.01,1,0)
^.1
"^DD",9.2,9.2,.01,1,1,0)
9.2^B
"^DD",9.2,9.2,.01,1,1,1)
S ^DIC(9.2,"B",$E(X,1,30),DA)=""
"^DD",9.2,9.2,.01,1,1,2)
K ^DIC(9.2,"B",$E(X,1,30),DA)
"^DD",9.2,9.2,.01,1,2,0)
^^TRIGGER^9.2^4
"^DD",9.2,9.2,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DIC(9.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,3)="" I X S X=DIV S Y(1)=$S($D(^DIC(9.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y X ^DD(9.2,.01,1,2,1.1) X ^DD(9.2,.01,1,2,1.4)
"^DD",9.2,9.2,.01,1,2,1.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",9.2,9.2,.01,1,2,1.4)
S DIH=$S($D(^DIC(9.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=9.2,DIG=4 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",9.2,9.2,.01,1,2,2)
Q
"^DD",9.2,9.2,.01,1,2,"%D",0)
^^2^2^2900723^
"^DD",9.2,9.2,.01,1,2,"%D",1,0)
This trigger sets the 'DATE ENTERED' field to the date and time when
"^DD",9.2,9.2,.01,1,2,"%D",2,0)
the help frame is created.
"^DD",9.2,9.2,.01,1,2,"CREATE CONDITION")
DATE ENTERED=""
"^DD",9.2,9.2,.01,1,2,"CREATE VALUE")
NOW
"^DD",9.2,9.2,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",9.2,9.2,.01,1,2,"DT")
2900723
"^DD",9.2,9.2,.01,1,2,"FIELD")
DATE ENTERED
"^DD",9.2,9.2,.01,1,3,0)
^^TRIGGER^9.2^6
"^DD",9.2,9.2,.01,1,3,1)
X ^DD(9.2,.01,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(9.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y X ^DD(9.2,.01,1,3,1.1) X ^DD(9.2,.01,1,3,1.4)
"^DD",9.2,9.2,.01,1,3,1.1)
S X=DIV X ^DD(9.2,.01,1,3,49.2) S %=$S($D(^VA(200,+DUZ,0)):^(0),1:""),X=$S('DUZ:"??",X="#":DUZ,X="N":$P(%,U,1),X="I":$P(%,U,2),X="T":$S($D(^DIC(3.1,+$P(%,U,9),0)):$P(^(0),U,1),1:""),X="NN":$S($D(^VA(200,+DUZ,.1)):$P(^(.1),U,4),1:""),1:"??") K %
"^DD",9.2,9.2,.01,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DIC(9.2,D0,0)):^(0),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,4),0)):"",1:$P(^(0),U,1))=""
"^DD",9.2,9.2,.01,1,3,1.4)
S DIH=$S($D(^DIC(9.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=9.2,DIG=6 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",9.2,9.2,.01,1,3,2)
Q
"^DD",9.2,9.2,.01,1,3,49.2)
S X="#"
"^DD",9.2,9.2,.01,1,3,"%D",0)
^^2^2^2940202^
"^DD",9.2,9.2,.01,1,3,"%D",1,0)
This cross reference marks Help Frames with the creater in the
"^DD",9.2,9.2,.01,1,3,"%D",2,0)
Author field.
"^DD",9.2,9.2,.01,1,3,"CREATE CONDITION")
AUTHOR=""
"^DD",9.2,9.2,.01,1,3,"CREATE VALUE")
USER("#")
"^DD",9.2,9.2,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",9.2,9.2,.01,1,3,"DT")
2940202
"^DD",9.2,9.2,.01,1,3,"FIELD")
author
"^DD",9.2,9.2,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",9.2,9.2,.01,21,0)
^^2^2^2840809^
"^DD",9.2,9.2,.01,21,1,0)
The unique name of the frame, preceded with the package prefix name,
"^DD",9.2,9.2,.01,21,2,0)
similar to option names.
"^DD",9.2,9.2,.01,"DT")
2940202
"^DD",9.2,9.2,1,0)
HEADER^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>65!($L(X)<2) X
"^DD",9.2,9.2,1,1,0)
^.1
"^DD",9.2,9.2,1,1,1,0)
9.2^C^KWIC
"^DD",9.2,9.2,1,1,1,1)
F %=1:1 Q:$P(X," ",%,99)=""  S I=$P(X," ",%) I $L(I)>2,$L(I)<31,^DD("KWIC")'[I S ^DIC(9.2,"C",I,DA)=""
"^DD",9.2,9.2,1,1,1,2)
F %=1:1 Q:$P(X," ",%,99)=""  S I=$P(X," ",%) I $L(I)>2,$L(I)<31 K ^DIC(9.2,"C",I,DA)
"^DD",9.2,9.2,1,3)
ANSWER MUST BE 2-65 CHARACTERS IN LENGTH
"^DD",9.2,9.2,1,21,0)
^^2^2^2840809^
"^DD",9.2,9.2,1,21,1,0)
A short description of the frame, succinctly describing the content
"^DD",9.2,9.2,1,21,2,0)
of the frame
"^DD",9.2,9.2,2,0)
TEXT^9.21^^1;0
"^DD",9.2,9.2,2,21,0)
^^3^3^2920702^
"^DD",9.2,9.2,2,21,1,0)
The actual text of the help frame, which will be displayed when the user
"^DD",9.2,9.2,2,21,2,0)
presses question mark.  Screen breaks are indicated by a line terminating
"^DD",9.2,9.2,2,21,3,0)
with "..".
"^DD",9.2,9.2,2,21,4,0)
continuation screens, or 'related frames'.
"^DD",9.2,9.2,3,0)
RELATED FRAME^9.22A^^2;0
"^DD",9.2,9.2,3,21,0)
^^4^4^2930402^
"^DD",9.2,9.2,3,21,1,0)
This is a multiple field which contains information on the other help
"^DD",9.2,9.2,3,21,2,0)
frames which are related to the current help frame through specific
"^DD",9.2,9.2,3,21,3,0)
keywords.  The keywords may be selected to obtain additional information
"^DD",9.2,9.2,3,21,4,0)
about the topic through the related help frame(s).
"^DD",9.2,9.2,3.5,0)
Want to LOAD KEYWORDS (Y/N)?^FX^^0;5^D LOADKW^XQH2
"^DD",9.2,9.2,3.5,.1)

"^DD",9.2,9.2,3.5,1,0)
^.1^^0
"^DD",9.2,9.2,3.5,3)
Enter 'Y' if you wish to make all bracketed words appearing in the text into keywords.
"^DD",9.2,9.2,3.5,21,0)
^^2^2^2890125^
"^DD",9.2,9.2,3.5,21,1,0)
This field is designed for internal use.  Its input transform will
"^DD",9.2,9.2,3.5,21,2,0)
invoke a routine to associate keywords with related help frames.
"^DD",9.2,9.2,3.5,"DT")
2860724
"^DD",9.2,9.2,4,0)
DATE ENTERED^D^^0;3^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",9.2,9.2,4,1,0)
^.1
"^DD",9.2,9.2,4,1,1,0)
9.2^D
"^DD",9.2,9.2,4,1,1,1)
S ^DIC(9.2,"D",$E(X,1,30),DA)=""
"^DD",9.2,9.2,4,1,1,2)
K ^DIC(9.2,"D",$E(X,1,30),DA)
"^DD",9.2,9.2,4,5,1,0)
9.2^.01^2
"^DD",9.2,9.2,4,5,2,0)
9.2^.01^3
"^DD",9.2,9.2,4,5,3,0)
9.2^.01^3
"^DD",9.2,9.2,4,5,4,0)
9.2^.01^3
"^DD",9.2,9.2,4,5,5,0)
9.2^.01^3
"^DD",9.2,9.2,4,5,6,0)
9.2^.01^3
"^DD",9.2,9.2,4,5,7,0)
9.2^.01^3
"^DD",9.2,9.2,4,5,8,0)
9.2^.01^3
"^DD",9.2,9.2,4,5,9,0)
9.2^.01^3
"^DD",9.2,9.2,4,5,10,0)
9.2^.01^3
"^DD",9.2,9.2,4,5,11,0)
9.2^.01^3
"^DD",9.2,9.2,4,5,12,0)
9.2^.01^3
"^DD",9.2,9.2,4,9)
^
"^DD",9.2,9.2,4,21,0)
^^2^2^2840809^
"^DD",9.2,9.2,4,21,1,0)
Date/time that this frame was entered into the system, which is used to 
"^DD",9.2,9.2,4,21,2,0)
track new Help frame activity.
"^DD",9.2,9.2,5,0)
INVOKED BY ROUTINE^9.23A^^3;0
"^DD",9.2,9.2,5,21,0)
^^2^2^2850919^^^
"^DD",9.2,9.2,5,21,1,0)
This field is for documentation purposes.  It serves as a record of which
"^DD",9.2,9.2,5,21,2,0)
routines reference a particular help frame.
"^DD",9.2,9.2,6,0)
AUTHOR^P200'^VA(200,^0;4^Q
"^DD",9.2,9.2,6,1,0)
^.1
"^DD",9.2,9.2,6,1,1,0)
9.2^AC
"^DD",9.2,9.2,6,1,1,1)
S ^DIC(9.2,"AC",$E(X,1,30),DA)=""
"^DD",9.2,9.2,6,1,1,2)
K ^DIC(9.2,"AC",$E(X,1,30),DA)
"^DD",9.2,9.2,6,5,1,0)
9.2^.01^2
"^DD",9.2,9.2,6,5,2,0)
9.2^.01^3
"^DD",9.2,9.2,6,5,3,0)
9.2^.01^2
"^DD",9.2,9.2,6,5,4,0)
9.2^.01^2
"^DD",9.2,9.2,6,5,5,0)
9.2^.01^2
"^DD",9.2,9.2,6,5,6,0)
9.2^.01^2
"^DD",9.2,9.2,6,5,7,0)
9.2^.01^2
"^DD",9.2,9.2,6,5,8,0)
9.2^.01^2
"^DD",9.2,9.2,6,5,9,0)
9.2^.01^2
"^DD",9.2,9.2,6,5,10,0)
9.2^.01^2
"^DD",9.2,9.2,6,5,11,0)
9.2^.01^2
"^DD",9.2,9.2,6,5,12,0)
9.2^.01^2
"^DD",9.2,9.2,6,9)
^
"^DD",9.2,9.2,6,21,0)
^^2^2^2850919^
"^DD",9.2,9.2,6,21,1,0)
The person who created the entry for this help frame.  This is a triggered
"^DD",9.2,9.2,6,21,2,0)
field, it's value determined by the creator of the .01 entry.
"^DD",9.2,9.2,6,"DT")
2890908
"^DD",9.2,9.2,7,0)
EDITOR^9.24P^^4;0
"^DD",9.2,9.2,7,21,0)
^^1^1^2850919^^
"^DD",9.2,9.2,7,21,1,0)
Users who are allowed to edit this help frame, as determined by the author.
"^DD",9.2,9.2,8,0)
DATE LAST UPDATED^CDJ15^^ ; ^S Y(9.2,8,1)=$S($D(^DIC(9.2,D0,1,0)):^(0),1:"") S X=$P(Y(9.2,8,1),U,5)
"^DD",9.2,9.2,8,9)
^
"^DD",9.2,9.2,8,9.01)

"^DD",9.2,9.2,8,9.1)
S Y(9.2,8,1)=$S($D(^DIC(9.2,D0,1,0)):^(0),1:"") S X=$P(Y(9.2,8,1),U,5)
"^DD",9.2,9.2,8,21,0)
^^2^2^2930402^
"^DD",9.2,9.2,8,21,1,0)
This field is used to maintain an indication of the date on which the help
"^DD",9.2,9.2,8,21,2,0)
frame was last modified or updated.
"^DD",9.2,9.2,8,"DT")
2851013
"^DD",9.2,9.2,10,0)
OBJECT^9.201P^^10;0
"^DD",9.2,9.2,10,21,0)
^^3^3^2930402^
"^DD",9.2,9.2,10,21,1,0)
This field is a multiple provided to point to the object file to
"^DD",9.2,9.2,10,21,2,0)
specify particular objects, and is primarily used in conjunction with the
"^DD",9.2,9.2,10,21,3,0)
Enter and Exit Execute fields (fields 10.1 and 10.2).
"^DD",9.2,9.2,10.1,0)
ENTRY EXECUTE STATEMENT^K^^10.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",9.2,9.2,10.1,3)
This is Standard MUMPS code which will be executed as the user enters this Help Frame
"^DD",9.2,9.2,10.1,9)
"@"
"^DD",9.2,9.2,10.1,21,0)
^^2^2^2930402^
"^DD",9.2,9.2,10.1,21,1,0)
This field is used to include an M code statement which is executed as the
"^DD",9.2,9.2,10.1,21,2,0)
user enters this help frame.
"^DD",9.2,9.2,10.1,"DT")
2910116
"^DD",9.2,9.2,10.2,0)
EXIT EXECUTE STATEMENT^K^^10.2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",9.2,9.2,10.2,3)
This is Standard MUMPS code which will be executed as the user leaves the current Help Frame.
"^DD",9.2,9.2,10.2,9)
"@"
"^DD",9.2,9.2,10.2,21,0)
^^3^3^2930402^
"^DD",9.2,9.2,10.2,21,1,0)
This field is used to provide an M code statement which is to be executed
"^DD",9.2,9.2,10.2,21,2,0)
as the user exits the current help frame (whether moving into another help
"^DD",9.2,9.2,10.2,21,3,0)
frame or back out of the current help frame).
"^DD",9.2,9.2,10.2,"DT")
2910116
"^DD",9.2,9.201,0)
OBJECT SUB-FIELD^^.01^1
"^DD",9.2,9.201,0,"DT")
2910116
"^DD",9.2,9.201,0,"IX","B",9.201,.01)

"^DD",9.2,9.201,0,"NM","OBJECT")

"^DD",9.2,9.201,0,"UP")
9.2
"^DD",9.2,9.201,.01,0)
OBJECT^MP2005'^MAG(^0;1^Q
"^DD",9.2,9.201,.01,1,0)
^.1
"^DD",9.2,9.201,.01,1,1,0)
9.201^B
"^DD",9.2,9.201,.01,1,1,1)
S ^DIC(9.2,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",9.2,9.201,.01,1,1,2)
K ^DIC(9.2,DA(1),10,"B",$E(X,1,30),DA)
"^DD",9.2,9.201,.01,3)
This is a pointer to entries in the OBJECT file which may be referenced in the ENTRY or EXIT EXECUTE STATEMENTS associated with this Help Frame
"^DD",9.2,9.201,.01,21,0)
^^3^3^2930402^
"^DD",9.2,9.201,.01,21,1,0)
This field is used to indicate a specific object in the OBJECT file.  It
"^DD",9.2,9.201,.01,21,2,0)
is primarily intended for use with the Entry and Exit Execute fields to
"^DD",9.2,9.201,.01,21,3,0)
provide the ability to relate to the specified object.
"^DD",9.2,9.201,.01,"DT")
2910116
"^DD",9.2,9.21,0)
TEXT SUB-FIELD^NL^.01^1
"^DD",9.2,9.21,0,"DT")
2910815
"^DD",9.2,9.21,0,"NM","TEXT")

"^DD",9.2,9.21,0,"UP")
9.2
"^DD",9.2,9.21,.01,0)
TEXT^W^^0;1^Q
"^DD",9.2,9.21,.01,.1)
THE ACTUAL TEXT OF THE FIELD, IN DIWE FORMAT
"^DD",9.2,9.21,.01,3)
ANSWER MUST BE 1-72 CHARACTERS IN LENGTH
"^DD",9.2,9.21,.01,21,0)
^^3^3^2920702^
"^DD",9.2,9.21,.01,21,1,0)
The actual text of the help frame, which will be displayed when the user
"^DD",9.2,9.21,.01,21,2,0)
presses question mark.  Screen breaks are indicated by a line terminating
"^DD",9.2,9.21,.01,21,3,0)
with "..".
"^DD",9.2,9.21,.01,"DT")
2910815
"^DD",9.2,9.22,0)
RELATED FRAME SUB-FIELD^NL^1^2
"^DD",9.2,9.22,0,"DT")
2910801
"^DD",9.2,9.22,0,"IX","B",9.22,.01)

"^DD",9.2,9.22,0,"NM","RELATED FRAME")

"^DD",9.2,9.22,0,"UP")
9.2
"^DD",9.2,9.22,.01,0)
RELATED FRAME KEYWORD^MF^^0;1^K:$L(X)>30!($L(X)<1)!'(X?.PNU) X
"^DD",9.2,9.22,.01,.1)
FRAMES WHICH MAY BE CHOSEN FOR GREATER DETAIL, AT THE USER'S DISCRETION
"^DD",9.2,9.22,.01,1,0)
^.1
"^DD",9.2,9.22,.01,1,1,0)
9.22^B
"^DD",9.2,9.22,.01,1,1,1)
S ^DIC(9.2,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",9.2,9.22,.01,1,1,2)
K ^DIC(9.2,DA(1),2,"B",$E(X,1,30),DA)
"^DD",9.2,9.22,.01,3)
Answer must be 1-30 characters in length.
"^DD",9.2,9.22,.01,4)
Q  ;S Y=22 D EN^XQH ;Unknow what this was to do.
"^DD",9.2,9.22,.01,21,0)
^^3^3^2850919^
"^DD",9.2,9.22,.01,21,1,0)
A keyword appears in the text surrounded by brackets.  When the user
"^DD",9.2,9.22,.01,21,2,0)
enters the keyword, a related frame will be displayed with more detailed
"^DD",9.2,9.22,.01,21,3,0)
information on the topic suggested by the keyword.
"^DD",9.2,9.22,.01,"DT")
2910801
"^DD",9.2,9.22,1,0)
RELATED FRAME^P9.2^DIC(9.2,^0;2^Q
"^DD",9.2,9.22,1,1,0)
^.1
"^DD",9.2,9.22,1,1,1,0)
9.2^AE
"^DD",9.2,9.22,1,1,1,1)
S ^DIC(9.2,"AE",$E(X,1,30),DA(1),DA)=""
"^DD",9.2,9.22,1,1,1,2)
K ^DIC(9.2,"AE",$E(X,1,30),DA(1),DA)
"^DD",9.2,9.22,1,1,1,3)
For clean-up tools
"^DD",9.2,9.22,1,1,1,"DT")
2950315
"^DD",9.2,9.22,1,3)

"^DD",9.2,9.22,1,21,0)
^^2^2^2850919^^
"^DD",9.2,9.22,1,21,1,0)
The internal name of another help-frame which can be invoked by the
"^DD",9.2,9.22,1,21,2,0)
keyword to obtain more detailed information on a sub-topic.
"^DD",9.2,9.22,1,"DT")
2950315
"^DD",9.2,9.23,0)
INVOKED BY ROUTINE SUB-FIELD^NL^.01^1
"^DD",9.2,9.23,0,"NM","INVOKED BY ROUTINE")

"^DD",9.2,9.23,0,"NM","MAIN MENU")

"^DD",9.2,9.23,0,"UP")
9.2
"^DD",9.2,9.23,.01,0)
INVOKED BY ROUTINE^F^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",9.2,9.23,.01,.1)
NOT USED AT THE MOMENT
"^DD",9.2,9.23,.01,1,0)
^.1
"^DD",9.2,9.23,.01,1,1,0)
9.2^D
"^DD",9.2,9.23,.01,1,1,1)
S ^XHLP("D",$E(X,1,30),DA(1),DA)=""
"^DD",9.2,9.23,.01,1,1,2)
K ^XHLP("D",$E(X,1,30),DA(1),DA)
"^DD",9.2,9.23,.01,3)
ANSWER MUST BE 3-30 CHARACTERS IN LENGTH
"^DD",9.2,9.23,.01,21,0)
^^2^2^2850919^^
"^DD",9.2,9.23,.01,21,1,0)
This field is for documentation purposes.  It serves as a record of which
"^DD",9.2,9.23,.01,21,2,0)
routines reference a particular help frame.
"^DD",9.2,9.23,.01,"DT")
2850610
"^DD",9.2,9.24,0)
EDITOR SUB-FIELD^NL^.01^1
"^DD",9.2,9.24,0,"DT")
2890908
"^DD",9.2,9.24,0,"IX","AB",9.24,.01)

"^DD",9.2,9.24,0,"NM","EDITOR")

"^DD",9.2,9.24,0,"NM","NEXT FRAME")

"^DD",9.2,9.24,0,"UP")
9.2
"^DD",9.2,9.24,.01,0)
EDITOR^MP200'^VA(200,^0;1^Q
"^DD",9.2,9.24,.01,.1)
A LIST OF FRAMES WHICH SHOULD BE SEQUENTIALLY SCANNED AFTER THIS ONE.
"^DD",9.2,9.24,.01,1,0)
^.1
"^DD",9.2,9.24,.01,1,1,0)
9.24^AB
"^DD",9.2,9.24,.01,1,1,1)
S ^DIC(9.2,DA(1),4,"AB",$E(X,1,30),DA)=""
"^DD",9.2,9.24,.01,1,1,2)
K ^DIC(9.2,DA(1),4,"AB",$E(X,1,30),DA)
"^DD",9.2,9.24,.01,1,2,0)
9.2^AD
"^DD",9.2,9.24,.01,1,2,1)
S ^DIC(9.2,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",9.2,9.24,.01,1,2,2)
K ^DIC(9.2,"AD",$E(X,1,30),DA(1),DA)
"^DD",9.2,9.24,.01,4)
Q
"^DD",9.2,9.24,.01,21,0)
^^1^1^2850919^
"^DD",9.2,9.24,.01,21,1,0)
Users who are allowed to edit this help frame, as determined by the author.
"^DD",9.2,9.24,.01,"DT")
2890908
"^DIC",9.2,9.2,0)
HELP FRAME^9.2I
"^DIC",9.2,9.2,0,"GL")
^DIC(9.2,
"^DIC",9.2,9.2,"%",0)
^1.005^1^1
"^DIC",9.2,9.2,"%",1,0)
XU
"^DIC",9.2,9.2,"%","B","XU",1)

"^DIC",9.2,9.2,"%D",0)
^^4^4^2941128^^^
"^DIC",9.2,9.2,"%D",0,0,99999999)
^1^2^3^4^6^50002^50003^99999999
"^DIC",9.2,9.2,"%D",0,"W")
75
"^DIC",9.2,9.2,"%D",1,0)
This file contains the text of help frames created via the Help
"^DIC",9.2,9.2,"%D",2,0)
Processor (XQH).  Help frames may be associated with options or with
"^DIC",9.2,9.2,"%D",3,0)
data dictionary fields to provide on-line instruction.  The file
"^DIC",9.2,9.2,"%D",4,0)
is cross-referenced by name, header, date entered, author, and editor.
"^DIC",9.2,9.2,"%D",6,0)

"^DIC",9.2,9.2,"%D",6,1)
^^*
"^DIC",9.2,9.2,"%D",50002,0)

"^DIC",9.2,9.2,"%D",50002,1)
^^*
"^DIC",9.2,9.2,"%D",50003,0)

"^DIC",9.2,"B","HELP FRAME",9.2)

**END**
**END**
