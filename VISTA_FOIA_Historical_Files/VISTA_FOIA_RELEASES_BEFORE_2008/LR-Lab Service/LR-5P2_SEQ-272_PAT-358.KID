Released LR*5.2*358 SEQ #272
Extracted from mail message
**KIDS**:LR*5.2*358^

**INSTALL NAME**
LR*5.2*358
"BLD",6761,0)
LR*5.2*358^LAB SERVICE^0^3060413^y
"BLD",6761,1,0)
^^2^2^3060413^^
"BLD",6761,1,1,0)
This patch corrects problems with the LEDI Turnaround Time Report and
"BLD",6761,1,2,0)
the Worksheet Accession List.
"BLD",6761,4,0)
^9.64PA^^
"BLD",6761,"ABPKG")
n
"BLD",6761,"KRN",0)
^9.67PA^8989.52^19
"BLD",6761,"KRN",.4,0)
.4
"BLD",6761,"KRN",.401,0)
.401
"BLD",6761,"KRN",.402,0)
.402
"BLD",6761,"KRN",.403,0)
.403
"BLD",6761,"KRN",.5,0)
.5
"BLD",6761,"KRN",.84,0)
.84
"BLD",6761,"KRN",3.6,0)
3.6
"BLD",6761,"KRN",3.8,0)
3.8
"BLD",6761,"KRN",9.2,0)
9.2
"BLD",6761,"KRN",9.8,0)
9.8
"BLD",6761,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6761,"KRN",9.8,"NM",1,0)
LRTT5P1^^0^25400134
"BLD",6761,"KRN",9.8,"NM",2,0)
LRWRKS^^0^11444581
"BLD",6761,"KRN",9.8,"NM","B","LRTT5P1",1)

"BLD",6761,"KRN",9.8,"NM","B","LRWRKS",2)

"BLD",6761,"KRN",19,0)
19
"BLD",6761,"KRN",19.1,0)
19.1
"BLD",6761,"KRN",101,0)
101
"BLD",6761,"KRN",409.61,0)
409.61
"BLD",6761,"KRN",771,0)
771
"BLD",6761,"KRN",870,0)
870
"BLD",6761,"KRN",8989.51,0)
8989.51
"BLD",6761,"KRN",8989.52,0)
8989.52
"BLD",6761,"KRN",8994,0)
8994
"BLD",6761,"KRN","B",.4,.4)

"BLD",6761,"KRN","B",.401,.401)

"BLD",6761,"KRN","B",.402,.402)

"BLD",6761,"KRN","B",.403,.403)

"BLD",6761,"KRN","B",.5,.5)

"BLD",6761,"KRN","B",.84,.84)

"BLD",6761,"KRN","B",3.6,3.6)

"BLD",6761,"KRN","B",3.8,3.8)

"BLD",6761,"KRN","B",9.2,9.2)

"BLD",6761,"KRN","B",9.8,9.8)

"BLD",6761,"KRN","B",19,19)

"BLD",6761,"KRN","B",19.1,19.1)

"BLD",6761,"KRN","B",101,101)

"BLD",6761,"KRN","B",409.61,409.61)

"BLD",6761,"KRN","B",771,771)

"BLD",6761,"KRN","B",870,870)

"BLD",6761,"KRN","B",8989.51,8989.51)

"BLD",6761,"KRN","B",8989.52,8989.52)

"BLD",6761,"KRN","B",8994,8994)

"BLD",6761,"QUES",0)
^9.62^^
"BLD",6761,"REQB",0)
^9.611^2^2
"BLD",6761,"REQB",1,0)
LR*5.2*153^2
"BLD",6761,"REQB",2,0)
LR*5.2*274^2
"BLD",6761,"REQB","B","LR*5.2*153",1)

"BLD",6761,"REQB","B","LR*5.2*274",2)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950304
"PKG",26,22,1,"PAH",1,0)
358^3060413
"PKG",26,22,1,"PAH",1,1,0)
^^2^2^3060413
"PKG",26,22,1,"PAH",1,1,1,0)
This patch corrects problems with the LEDI Turnaround Time Report and
"PKG",26,22,1,"PAH",1,1,2,0)
the Worksheet Accession List.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","LRTT5P1")
0^1^B25400134^B25358507
"RTN","LRTT5P1",1,0)
LRTT5P1 ;DALOI/FHS-LAB URGENCY TURNAROUND TIMES PROCESSOR ;12/3/1997
"RTN","LRTT5P1",2,0)
 ;;5.2;LAB SERVICE;**153,221,263,274,358**;Sep 27, 1994
"RTN","LRTT5P1",3,0)
ONE ; from LRTT5
"RTN","LRTT5P1",4,0)
 ; return for reg & irreg: # tests, total time, bad turnaround time
"RTN","LRTT5P1",5,0)
 ; input:
"RTN","LRTT5P1",6,0)
 ; ^TMP("LRTT5",$J,"TESTS",tests)=test names
"RTN","LRTT5P1",7,0)
 ; LRPQ("URGENCY",urgencies)=urgency names
"RTN","LRTT5P1",8,0)
 ; LRSDT, LREDT, LRPDET
"RTN","LRTT5P1",9,0)
 ; output:
"RTN","LRTT5P1",10,0)
 ; ^TMP("LR",$J,"REG")=#tests^total time
"RTN","LRTT5P1",11,0)
 ; ^TMP("LR",$J,"REG",TAT,#)=acc^test^in^out
"RTN","LRTT5P1",12,0)
 ; ^TMP("LR",$J,"REGT",test)=#tests^total time
"RTN","LRTT5P1",13,0)
 ; ^TMP("LR",$J,"IRREG")=#tests^total time
"RTN","LRTT5P1",14,0)
 ; ^TMP("LR",$J,"IRREG",TAT,#)=acc^test^in^out
"RTN","LRTT5P1",15,0)
 ; ^TMP("LR",$J,"IRREGT",test)=#tests^total time
"RTN","LRTT5P1",16,0)
 ; ^TMP("LR",$J,"BAD",TAT,#)=acc^test^in^out
"RTN","LRTT5P1",17,0)
 ;
"RTN","LRTT5P1",18,0)
START ; go thru tests
"RTN","LRTT5P1",19,0)
 S LRSDT=$P(LRSDT,"."),LREDT=$P(LREDT,".")
"RTN","LRTT5P1",20,0)
 I LRSDT>LREDT S X=LRSDT,LRSDT=LREDT,LREDT=X
"RTN","LRTT5P1",21,0)
 S LRPSDT=LRSDT,LRPEDT=LREDT
"RTN","LRTT5P1",22,0)
 S LRTEST=0 F  S LRTEST=$O(^TMP("LRTT5",$J,"TESTS",LRTEST)) Q:LRTEST<1  D
"RTN","LRTT5P1",23,0)
 .; get acc areas for tests
"RTN","LRTT5P1",24,0)
 . S LRPN=0 F  S LRPN=$O(^LAB(60,LRTEST,8,LRPN)) Q:LRPN<1  I $D(^(LRPN,0)) S LRAA=+$P(^(0),U,2) I $D(^LRO(68,LRAA,0)) S LRAA(LRAA)=""
"RTN","LRTT5P1",25,0)
 ; go thru valid accession areas, get accession type - daily, yearly, etc
"RTN","LRTT5P1",26,0)
 S (LRPN,LRAA)=0 F  S LRAA=$O(LRAA(LRAA)) Q:LRAA<1  I $D(^LRO(68,LRAA,0)) S LRAAT=$P(^(0),U,3) D
"RTN","LRTT5P1",27,0)
 . ; go thru accession dates, start using appropriate acc type
"RTN","LRTT5P1",28,0)
 . S LRSDT=LRPSDT,LREDT=$P(LRPEDT,".")_".24"
"RTN","LRTT5P1",29,0)
 . S LRAD=$S(LRAAT="D":LRSDT,LRAAT="M":LRSDT\100*100,1:LRSDT\10000*10000)-.000001
"RTN","LRTT5P1",30,0)
 . F  S LRAD=$O(^LRO(68,LRAA,1,LRAD)) Q:LRAD<1!(LRAD>(LREDT))  D
"RTN","LRTT5P1",31,0)
 . . ; go thru accession #s
"RTN","LRTT5P1",32,0)
 . . S LRAN=0 F  S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN)) Q:LRAN<1  S LRDPF=$P($G(^(LRAN,0)),U,2) D
"RTN","LRTT5P1",33,0)
 . . . Q:$S('LRDPF:1,LRDPF=2:0,LRDPF=67:0,1:1)
"RTN","LRTT5P1",34,0)
 . . . ; check lab arrival time, must be >= begin time and <= end time
"RTN","LRTT5P1",35,0)
 . . . Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,3))  S LRPLRRX1=$P(^(3),U,3) Q:LRPLRRX1<LRSDT  Q:LRPLRRX1>(LREDT)
"RTN","LRTT5P1",36,0)
 . . . I $G(^LRO(68,LRAA,1,LRAD,1,LRAN,.4)),$O(LRLLOC(0)),'$D(LRLLOC(+$G(^(.4)))) Q
"RTN","LRTT5P1",37,0)
 . . . ; go thru tests on accession, if valid urgency get date reported
"RTN","LRTT5P1",38,0)
 . . . S LRTEST=0 F  S LRTEST=$O(^TMP("LRTT5",$J,"TESTS",LRTEST)) Q:LRTEST<1  I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTEST,0)),$D(LRPQ("URGENCY",+$P(^(0),U,2))),$P(^(0),U,8)'="" S LRPLRRX2=+$P(^(0),U,5) D
"RTN","LRTT5P1",39,0)
 . . . . Q:'$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTEST,0),U,4)  ;Must be verified and have suffix code.
"RTN","LRTT5P1",40,0)
 . . . . ; increment sequence number
"RTN","LRTT5P1",41,0)
 . . . . S LRPN=LRPN+1
"RTN","LRTT5P1",42,0)
 . . . . ; no report date, set to zero TAT save as bad and quit
"RTN","LRTT5P1",43,0)
 . . . . I 'LRPLRRX2 S LRPLRRX2=LRPLRRX1 D SAVE("BAD") Q
"RTN","LRTT5P1",44,0)
 . . . . ; if negative times save as bad and quit
"RTN","LRTT5P1",45,0)
 . . . . I LRPLRRX1>LRPLRRX2 D SAVE("BAD") Q
"RTN","LRTT5P1",46,0)
 . . . . ; if time is not regular (7am-5pm) then save as irregular and quit
"RTN","LRTT5P1",47,0)
 . . . . S LRPRX1T="."_$P(LRPLRRX1,".",2) I LRPRX1T<.07!(LRPRX1T>.17) D SAVE("IRREG") Q
"RTN","LRTT5P1",48,0)
 . . . . ; if Sunday or Saturday save as irregular and quit
"RTN","LRTT5P1",49,0)
 . . . . S (LRPRX1D,X)=LRPLRRX1\1 D H^%DTC I %Y=0!(%Y=6) D SAVE("IRREG") Q
"RTN","LRTT5P1",50,0)
 . . . . ; if holiday save as irregular and quit
"RTN","LRTT5P1",51,0)
 . . . . I $D(^HOLIDAY("B",LRPRX1D)) D SAVE("IRREG") Q
"RTN","LRTT5P1",52,0)
 . . . . ; otherwise save as regular and quit
"RTN","LRTT5P1",53,0)
 . . . . D SAVE("REG")
"RTN","LRTT5P1",54,0)
 ; go thru reg & irreg
"RTN","LRTT5P1",55,0)
 F LRPTYPE="REG","IRREG" D
"RTN","LRTT5P1",56,0)
 . ; go thru TATs
"RTN","LRTT5P1",57,0)
 . S (LRPNN,LRPNT)=0,LRPDIFF="" F  S LRPDIFF=$O(^TMP("LR",$J,LRPTYPE,LRPDIFF)) Q:LRPDIFF=""  D
"RTN","LRTT5P1",58,0)
 . . ; go thru each reg & irreg TAT, count # and total
"RTN","LRTT5P1",59,0)
 . . S LRPN="" F  S LRPN=$O(^TMP("LR",$J,LRPTYPE,LRPDIFF,LRPN)) Q:LRPN=""  S LRPNN=LRPNN+1,LRPNT=LRPNT+LRPDIFF
"RTN","LRTT5P1",60,0)
 . ; store reg data
"RTN","LRTT5P1",61,0)
 . S ^TMP("LR",$J,LRPTYPE)=LRPNN_U_LRPNT
"RTN","LRTT5P1",62,0)
CLEAN K %Y,LRAA,LRAAT,LRAN,LRPDIFF,LRAD,LRPLRRX1,LRPLRRX2,LRPN,LRPNN,LRPNT,LRPRX1D,LRPRX1T,LRTEST,LRTESTN,LRPTYPE,X
"RTN","LRTT5P1",63,0)
 Q
"RTN","LRTT5P1",64,0)
SAVE(LRPUTYPE) ; collect reg, irreg, and bad
"RTN","LRTT5P1",65,0)
 N LRUID
"RTN","LRTT5P1",66,0)
 S LRUID=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","LRTT5P1",67,0)
 S LRPDIFF=$$DIFF(LRPLRRX2,LRPLRRX1),LRTESTN=$P(^LAB(60,LRTEST,0),U)
"RTN","LRTT5P1",68,0)
 I LRPUTYPE="BAD"!('$L(LRUID)) S ^TMP("LR",$J,"BAD",-LRPDIFF,LRPN)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2))_U_LRTESTN_U_LRPLRRX1_U_$S(LRPLRRX2=LRPLRRX1:"",1:LRPLRRX2) Q
"RTN","LRTT5P1",69,0)
 Q:$D(^TMP("LR",$J,LRPUTYPE,+LRPDIFF,LRTESTN_LRUID))#2
"RTN","LRTT5P1",70,0)
 S ^TMP("LR",$J,LRPUTYPE,+LRPDIFF,LRTESTN_LRUID)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2))_U_LRTESTN_U_LRPLRRX1_U_LRPLRRX2
"RTN","LRTT5P1",71,0)
 S $P(^(LRTESTN),U)=$P($G(^TMP("LR",$J,LRPUTYPE_"T",LRTESTN)),U)+1,$P(^(LRTESTN),U,2)=$P($G(^(LRTESTN)),U,2)+LRPDIFF
"RTN","LRTT5P1",72,0)
 Q
"RTN","LRTT5P1",73,0)
DIFF(LRPUT1,LRPUT2) ; $$(time1,time2) -> difference in min
"RTN","LRTT5P1",74,0)
 N LRPUDIFF,X1,X2,LRPUX1M,LRPUX2M,LRPUX1H,LRPUX2H,LRPUX1TH,LRPUX2TH,LRPUX1TM,LRPUX2TM,LRPUXMI
"RTN","LRTT5P1",75,0)
 S X1=$P(LRPUT1,"."),X2=$P(LRPUT2,"."),LRPUX1TH=$E(LRPUT1,9),LRPUX2TH=$E(LRPUT2,9),LRPUX1H=$E(LRPUT1,10),LRPUX2H=$E(LRPUT2,10),LRPUX1TM=$E(LRPUT1,11),LRPUX2TM=$E(LRPUT2,11),LRPUX1M=$E(LRPUT1,12),LRPUX2M=$E(LRPUT2,12)
"RTN","LRTT5P1",76,0)
 D ^%DTC S LRPUXMI=X*1440+(LRPUX1M+(LRPUX1TM*10)+(LRPUX1TH*600)+(LRPUX1H*60))-(LRPUX2M+(LRPUX2TM*10)+(LRPUX2TH*600)+(LRPUX2H*60)),LRPUDIFF=LRPUXMI S:LRPUXMI<0 LRPUDIFF=-LRPUXMI
"RTN","LRTT5P1",77,0)
 Q LRPUDIFF
"RTN","LRWRKS")
0^2^B11444581^B11389478
"RTN","LRWRKS",1,0)
LRWRKS ;SLC/RWF - WORK SHEET ACCESSION LIST ;2/19/91  11:48 ;
"RTN","LRWRKS",2,0)
 ;;5.2;LAB SERVICE;**153,358**;Sep 27, 1994
"RTN","LRWRKS",3,0)
 K DIC S DIC="^LRO(68,",DIC(0)="AEMOQ",LREND=0 D ^DIC S LRAA=+Y,LRNAME=$P(Y,U,2) G END:LRAA<1
"RTN","LRWRKS",4,0)
 K LRSTAR,DIC D STAR^LRWU3:$P(^LRO(68,LRAA,0),U,3)="Y",PHD:'$D(LRSTAR) G END:LREND
"RTN","LRWRKS",5,0)
W G END:'$D(^LRO(68,LRAA,1,LRAD,1,0))&'$D(LRSTAR)
"RTN","LRWRKS",6,0)
 S LRUNC=0,LRTSE=-1
"RTN","LRWRKS",7,0)
 K DIC W !,"Do you want a specific test?" S %=2 D YN^DICN IF %=1 S DIC="^LAB(60,",DIC(0)="AEMOQ" D ^DIC S LRTSE=+Y
"RTN","LRWRKS",8,0)
 W !,"Do you want only incomplete entries?" S %=1 D YN^DICN S:%=2 LRUNC=1
"RTN","LRWRKS",9,0)
 W !,"Do you want a long list?" S %=2 D YN^DICN S LRSHORT=(%=2)
"RTN","LRWRKS",10,0)
 S %ZIS="Q" D ^%ZIS G END:POP
"RTN","LRWRKS",11,0)
 I $D(IO("Q")) K IO("Q") S ZTRTN="DQ^LRWRKS" S ZTSAVE("LR*")="",ZTSAVE("LAST")="" D ^%ZTLOAD G END
"RTN","LRWRKS",12,0)
 D ENT G END
"RTN","LRWRKS",13,0)
ENT U IO D URG^LRX S Y=DT D DD^LRX S LRDT0=Y,LRDC=1,LRLINE="---------------------------------------"
"RTN","LRWRKS",14,0)
 I '$D(LRSTAR) S LRAN=LRFAN-1 F LRIX=0:0 S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN)),LREND=0 Q:LRAN>LRLAN!(LRAN<1)  D ACC
"RTN","LRWRKS",15,0)
 I $D(LRSTAR) F A=0:0 S LRAD=$O(^LRO(68,LRAA,1,LRAD)) Q:LRAD<1!(LRAD>LRWDTL)  D AC
"RTN","LRWRKS",16,0)
 Q
"RTN","LRWRKS",17,0)
ACC D TD IF 'LREND,K1 D:LRUNC!'LRVER ENT^LRWRKS2
"RTN","LRWRKS",18,0)
 Q
"RTN","LRWRKS",19,0)
TD S:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) LREND=1 Q:LREND  S LRSN=+$P(^(0),U,5),LRDAT=+$P(^(0),U,4)
"RTN","LRWRKS",20,0)
 S LRVER=1,K1=0,I=0 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<.5  S LRVER=(LRVER&$P(^(I,0),U,5)) I 'K1,LRTSE>0,+^(0)=LRTSE S K1=I
"RTN","LRWRKS",21,0)
 S K1=$S(LRTSE<0:1,1:K1) Q
"RTN","LRWRKS",22,0)
 Q
"RTN","LRWRKS",23,0)
PHD Q:LREND  S LREND=0,U="^" D ADATE^LRWU Q:LREND  D LRAN^LRWU3 Q
"RTN","LRWRKS",24,0)
 Q
"RTN","LRWRKS",25,0)
AC S LRTK=LRSTAR-.00001 F B=0:0 S LRTK=$O(^LRO(68,LRAA,1,LRAD,1,"E",LRTK)) Q:LRTK<1!(LAST>1&(LRTK\1>LAST))  D AC1
"RTN","LRWRKS",26,0)
 Q
"RTN","LRWRKS",27,0)
AC1 S LRAN=0 F  S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,"E",LRTK,LRAN)) Q:LRAN<1  I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D ACC
"RTN","LRWRKS",28,0)
 Q
"RTN","LRWRKS",29,0)
% R %:DTIME Q:%=""!(%["N")!(%["Y")  W !,"Answer 'Y' or 'N': " G %
"RTN","LRWRKS",30,0)
END W !! W:$E(IOST)="P" @IOF D ^%ZISC K ZTRTN,ZTIO,ZTDESC,ZTSAVE,%H,%ZIS,DFN,J,LRDFN,LRDOC,LREDT,LRSDT,LRCDT,LRUID
"RTN","LRWRKS",31,0)
 K %,A,B,I,K,K1,L,LRACC,LRSPEC,LRURG,SEX,SSN,X,Y,DIC,LRUNC,LRDAT,LRAA,LRAD,LRAN,LRDPF,LRSN,LRSTAR,LRSHORT,LAST,PNM,ZTSK,LRDC,LRIDT,LRLLOC,LRODNUM,LRTK,LRV,LRWDTL,POP,T
"RTN","LRWRKS",32,0)
 K LRTSTS,LRLAN,LREND,LRLINE,LRFAN,LRFI,LRIX,LRNAME,LRTSE,LRVER,VA("BID"),VA("PID")
"RTN","LRWRKS",33,0)
 Q
"RTN","LRWRKS",34,0)
EN ;
"RTN","LRWRKS",35,0)
DQ U IO S U="^" D ENT S:$D(ZTQUEUED) ZTREQ="@" G END
"RTN","LRWRKS",36,0)
ALLUNC W !,"LIST ALL UNVERIFIED TEST's for one day",! D ADATE^LRWU3 G END:LREND S %ZIS="Q" D ^%ZIS G END:POP
"RTN","LRWRKS",37,0)
 I $D(IO("Q")) K IO("Q") S ZTRTN="ALL^LRWRKS",ZTSAVE("LRAD")="" D ^%ZTLOAD G END
"RTN","LRWRKS",38,0)
ALL S U="^",LRUNC=0,LRTSE=-1,LRFAN=1,LRLAN=999999,LRSHORT=1
"RTN","LRWRKS",39,0)
 F LRAA=0:0 S LRAA=$O(^LRO(68,LRAA)) Q:LRAA'>0  S LRAD(1)=LRAD,LRDC=1 D AL2
"RTN","LRWRKS",40,0)
 S:$D(ZTQUEUED) ZTREQ="@" G END
"RTN","LRWRKS",41,0)
AL2 K LRSTAR S LAST=LRAD+.99 S LRNAME=$P(^LRO(68,LRAA,0),U,1) I $P(^(0),U,3)="Y" S LRSTAR=LRAD,LRWDTL=$E(LRAD,1,3)_"0000",LRAD=LRWDTL-10000
"RTN","LRWRKS",42,0)
 D ENT S LRAD=LRAD(1) Q
"VER")
8.0^22.0
"BLD",6761,6)
^272
**END**
**END**
