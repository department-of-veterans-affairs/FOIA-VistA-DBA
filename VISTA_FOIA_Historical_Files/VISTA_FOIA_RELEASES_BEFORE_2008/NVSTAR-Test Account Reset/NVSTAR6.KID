KIDS Distribution saved on Oct 30, 2002@10:42:06
Test Account Reset Utilities v6.0 (09/02)
**KIDS**:NVS*4.0*1^

**INSTALL NAME**
NVS*4.0*1
"BLD",1685,0)
NVS*4.0*1^NATIONAL VISTA SUPPORT^0^3021030^n
"BLD",1685,1,0)
^^109^109^3021017^^
"BLD",1685,1,1,0)
This KIDs build contains the routine set for the EMC Test Account Reset 
"BLD",1685,1,2,0)
Utilities, version 6.0 dated September 1, 2002.
"BLD",1685,1,3,0)
 
"BLD",1685,1,4,0)
Release Notes:
"BLD",1685,1,5,0)
 
"BLD",1685,1,6,0)
Test Account Reset Utilities
"BLD",1685,1,7,0)
 
"BLD",1685,1,8,0)
      1. Domain name synonyms are removed (deleted) when the domain name 
"BLD",1685,1,9,0)
in the Kernel Systems Parameters file is re-named.  This helps prevent 
"BLD",1685,1,10,0)
problems with incoming mail from the production system.
"BLD",1685,1,11,0)
 
"BLD",1685,1,12,0)
      2. The option to start up Task Manager at the completion of the 
"BLD",1685,1,13,0)
procedures has been removed.  There are several different platforms that 
"BLD",1685,1,14,0)
have different procedures for starting/restarting Task Manager.  The 
"BLD",1685,1,15,0)
Utilities no longer attempt to provide for these various startup 
"BLD",1685,1,16,0)
procedures.
"BLD",1685,1,17,0)
 
"BLD",1685,1,18,0)
      3. The NVSCIRN* routines are no longer distributed with the 
"BLD",1685,1,19,0)
Utilities.  This is because the core procedures provided in ^NVSCIRN1 and 
"BLD",1685,1,20,0)
^NVSCIRN2 are incorporated into the basic NVSTAR procedures (note 
"BLD",1685,1,21,0)
additional information below.)
"BLD",1685,1,22,0)
 
"BLD",1685,1,23,0)
      4. Two additional HL7 clean up steps have been added.  It should be 
"BLD",1685,1,24,0)
noted that these new procedures significantly increase the time required 
"BLD",1685,1,25,0)
to complete a test account reset.
"BLD",1685,1,26,0)
 
"BLD",1685,1,27,0)
         a. In the HL7 MESSAGE ADMINISTRATION file (#773), a new procedure
"BLD",1685,1,28,0)
loops through and examines each entry for its STATUS (field #20).  If 
"BLD",1685,1,29,0)
this field is not set to "SUCCESSFULLY COMPLETED , the record is edited 
"BLD",1685,1,30,0)
to reflect that status.  Further, the cross reference ^HLMA("AC ) is 
"BLD",1685,1,31,0)
deleted.
"BLD",1685,1,32,0)
         b. A module previously documented to be run separately   
"BLD",1685,1,33,0)
DELMPI^NVSCIRN1 is now incorporated into the basic procedures performed 
"BLD",1685,1,34,0)
by the Utilities.  This procedure examines all records in the Patient 
"BLD",1685,1,35,0)
file (#2) for CIRN/MPI data.  If any are found, they are cleaned out.
"BLD",1685,1,36,0)
 
"BLD",1685,1,37,0)
      5. All entries in the ALERTS file (#8989) are deleted.  This 
"BLD",1685,1,38,0)
prevents potential user confusion with active alerts on the Test versus 
"BLD",1685,1,39,0)
production accounts.
"BLD",1685,1,40,0)
 
"BLD",1685,1,41,0)
      6. The Procedure Monitor (routine ^NVSTARM) has been removed.  The 
"BLD",1685,1,42,0)
output from the Utilities  procedures is now displayed directly to the 
"BLD",1685,1,43,0)
monitor.  This has been done primarily because of the HL7 clean up 
"BLD",1685,1,44,0)
additions noted above.  Those two procedures have significantly increased 
"BLD",1685,1,45,0)
the run time of the Utilities (see below).
"BLD",1685,1,46,0)
 
"BLD",1685,1,47,0)
      7. The amount of time required to run the Utilities to completion 
"BLD",1685,1,48,0)
has significantly increased. Previous versions usually completed in less 
"BLD",1685,1,49,0)
than 5 minutes regardless of platform (VMS/NT, DSM/Cache).  However, 
"BLD",1685,1,50,0)
depending upon the number of records in files 2, 773, and 8989, 
"BLD",1685,1,51,0)
completion may take as much as an hour or more.  Recent testing at a 
"BLD",1685,1,52,0)
Windows NT/Cache site with 61,000 patient records and approximately 
"BLD",1685,1,53,0)
140,000 HL7 messages required just over 20 minutes for completion of the 
"BLD",1685,1,54,0)
Utilities.  The Utilities simply do significantly more work than before 
"BLD",1685,1,55,0)
and as a result will require more time to complete.
"BLD",1685,1,56,0)
 
"BLD",1685,1,57,0)
      8. The modified XQ routines for use on test accounts are not 
"BLD",1685,1,58,0)
distributed in the NVSTAR KIDs build.  A separate set of files, 
"BLD",1685,1,59,0)
platform-specific, are provided at the ftp site.  These routines (XQ, 
"BLD",1685,1,60,0)
XQ12, XQ2 and XQTOC) are patched through XU*8.0*157.
"BLD",1685,1,61,0)
 
"BLD",1685,1,62,0)
Data Scrambler and User Access Utilities
"BLD",1685,1,63,0)
 
"BLD",1685,1,64,0)
Patient Data Scrambler Utility.
"BLD",1685,1,65,0)
 
"BLD",1685,1,66,0)
      1. Name and SSN scrambling algorithm has changed.  The first letter 
"BLD",1685,1,67,0)
of the patient s last name is no longer scrambled.
"BLD",1685,1,68,0)
 
"BLD",1685,1,69,0)
      2. The last 4 numbers of the patient s social security number are no
"BLD",1685,1,70,0)
longer scrambled.  This, in conjunction with the change in name scrambling
"BLD",1685,1,71,0)
mentioned above, provides for the retention of the "BS  and "BS5  cross
"BLD",1685,1,72,0)
references (first letter last name+last 4 SSN) in the Patient file.  This
"BLD",1685,1,73,0)
is a feature that was present in previous versions and many sites have
"BLD",1685,1,74,0)
asked that it be reinstated.
"BLD",1685,1,75,0)
 
"BLD",1685,1,76,0)
New Person/PAID Employee File Data Scrambler
"BLD",1685,1,77,0)
 
"BLD",1685,1,78,0)
      1. Various code changes have been made in response to bug reports.
"BLD",1685,1,79,0)
 
"BLD",1685,1,80,0)
      2. Update of the NAME COMPONENT file (#20) has been added so that 
"BLD",1685,1,81,0)
when NEW PERSON record names are scrambled, so too is the record in the 
"BLD",1685,1,82,0)
NAME COMPONENTS file.
"BLD",1685,1,83,0)
 
"BLD",1685,1,84,0)
(It is noted that some sites use this data scrambler, but there have been 
"BLD",1685,1,85,0)
others that have used it and been unhappy with the results.  It is 
"BLD",1685,1,86,0)
recommended that any potential users of this data scrambler read the 
"BLD",1685,1,87,0)
warning when the routine is executed.  If there are any questions about 
"BLD",1685,1,88,0)
what this scrambler will do, a support request should be submitted.)
"BLD",1685,1,89,0)
 
"BLD",1685,1,90,0)
Set the DISUSER Field in User Accounts
"BLD",1685,1,91,0)
 
"BLD",1685,1,92,0)
        This new and optional utility provides a means of setting the 
"BLD",1685,1,93,0)
DISUSER field (#7) in the New Person file for any or all user accounts 
"BLD",1685,1,94,0)
effectively terminating their access to the test system.  POSTMASTER s 
"BLD",1685,1,95,0)
account is excluded and will not be disabled.  Further, the user's 
"BLD",1685,1,96,0)
account in which the utility is running will also not be disabled.  The 
"BLD",1685,1,97,0)
user running the utility has the option of specifying user accounts that 
"BLD",1685,1,98,0)
should be excluded   that is, should NOT be disabled.  These accounts can 
"BLD",1685,1,99,0)
be either selected by individual user name, or by using the members in a 
"BLD",1685,1,100,0)
selected mail group (e.g., IRM).  If a mail group is selected, the local 
"BLD",1685,1,101,0)
members of that group will excluded from the DISUSER procedure.  The list 
"BLD",1685,1,102,0)
of excluded users can be further edited through another option provided.  
"BLD",1685,1,103,0)
Of course, FileMan can be used to reset the field for any user after this 
"BLD",1685,1,104,0)
utility has been run.
"BLD",1685,1,105,0)
 
"BLD",1685,1,106,0)
Mail Message and Basket Purge Utility
"BLD",1685,1,107,0)
 
"BLD",1685,1,108,0)
        This optional utility that cleans out all mail messages and 
"BLD",1685,1,109,0)
purges all users  mail baskets has not been changed.
"BLD",1685,4,0)
^9.64PA^^
"BLD",1685,"ABPKG")
n
"BLD",1685,"KRN",0)
^9.67PA^8989.52^19
"BLD",1685,"KRN",.4,0)
.4
"BLD",1685,"KRN",.401,0)
.401
"BLD",1685,"KRN",.402,0)
.402
"BLD",1685,"KRN",.403,0)
.403
"BLD",1685,"KRN",.5,0)
.5
"BLD",1685,"KRN",.84,0)
.84
"BLD",1685,"KRN",3.6,0)
3.6
"BLD",1685,"KRN",3.8,0)
3.8
"BLD",1685,"KRN",9.2,0)
9.2
"BLD",1685,"KRN",9.8,0)
9.8
"BLD",1685,"KRN",9.8,"NM",0)
^9.68A^59^21
"BLD",1685,"KRN",9.8,"NM",24,0)
NVSMMP^^0^B40632679
"BLD",1685,"KRN",9.8,"NM",29,0)
NVSPDS^^0^B99482481
"BLD",1685,"KRN",9.8,"NM",30,0)
NVSPDS1^^0^B18041205
"BLD",1685,"KRN",9.8,"NM",31,0)
NVSPDS2^^0^B33660080
"BLD",1685,"KRN",9.8,"NM",32,0)
NVSPDS3^^0^B7793945
"BLD",1685,"KRN",9.8,"NM",33,0)
NVSPDS4^^0^B88363199
"BLD",1685,"KRN",9.8,"NM",34,0)
NVSPDSU^^0^B43942745
"BLD",1685,"KRN",9.8,"NM",35,0)
NVSPDSU1^^0^B21935953
"BLD",1685,"KRN",9.8,"NM",47,0)
NVSTAR^^0^B59367487
"BLD",1685,"KRN",9.8,"NM",48,0)
NVSTAR0^^0^B10588595
"BLD",1685,"KRN",9.8,"NM",49,0)
NVSTAR1^^0^B88766773
"BLD",1685,"KRN",9.8,"NM",50,0)
NVSTAR2^^0^B352008
"BLD",1685,"KRN",9.8,"NM",51,0)
NVSTAR3^^0^B7013486
"BLD",1685,"KRN",9.8,"NM",52,0)
NVSTAR4^^0^B66932712
"BLD",1685,"KRN",9.8,"NM",53,0)
NVSTAR5^^0^B8279680
"BLD",1685,"KRN",9.8,"NM",54,0)
NVSTAR6^^0^B21265561
"BLD",1685,"KRN",9.8,"NM",55,0)
NVSTAR7^^0^B5850149
"BLD",1685,"KRN",9.8,"NM",56,0)
NVSTAR8^^0^B1238557
"BLD",1685,"KRN",9.8,"NM",57,0)
NVSTARH^^0^B47700301
"BLD",1685,"KRN",9.8,"NM",58,0)
NVSPDS6^^0^B29870414
"BLD",1685,"KRN",9.8,"NM",59,0)
NVSPDS5^^0^B6971221
"BLD",1685,"KRN",9.8,"NM","B","NVSMMP",24)

"BLD",1685,"KRN",9.8,"NM","B","NVSPDS",29)

"BLD",1685,"KRN",9.8,"NM","B","NVSPDS1",30)

"BLD",1685,"KRN",9.8,"NM","B","NVSPDS2",31)

"BLD",1685,"KRN",9.8,"NM","B","NVSPDS3",32)

"BLD",1685,"KRN",9.8,"NM","B","NVSPDS4",33)

"BLD",1685,"KRN",9.8,"NM","B","NVSPDS5",59)

"BLD",1685,"KRN",9.8,"NM","B","NVSPDS6",58)

"BLD",1685,"KRN",9.8,"NM","B","NVSPDSU",34)

"BLD",1685,"KRN",9.8,"NM","B","NVSPDSU1",35)

"BLD",1685,"KRN",9.8,"NM","B","NVSTAR",47)

"BLD",1685,"KRN",9.8,"NM","B","NVSTAR0",48)

"BLD",1685,"KRN",9.8,"NM","B","NVSTAR1",49)

"BLD",1685,"KRN",9.8,"NM","B","NVSTAR2",50)

"BLD",1685,"KRN",9.8,"NM","B","NVSTAR3",51)

"BLD",1685,"KRN",9.8,"NM","B","NVSTAR4",52)

"BLD",1685,"KRN",9.8,"NM","B","NVSTAR5",53)

"BLD",1685,"KRN",9.8,"NM","B","NVSTAR6",54)

"BLD",1685,"KRN",9.8,"NM","B","NVSTAR7",55)

"BLD",1685,"KRN",9.8,"NM","B","NVSTAR8",56)

"BLD",1685,"KRN",9.8,"NM","B","NVSTARH",57)

"BLD",1685,"KRN",19,0)
19
"BLD",1685,"KRN",19,"NM",0)
^9.68A^^0
"BLD",1685,"KRN",19.1,0)
19.1
"BLD",1685,"KRN",101,0)
101
"BLD",1685,"KRN",101,"NM",0)
^9.68A^^0
"BLD",1685,"KRN",409.61,0)
409.61
"BLD",1685,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",1685,"KRN",771,0)
771
"BLD",1685,"KRN",870,0)
870
"BLD",1685,"KRN",8989.51,0)
8989.51
"BLD",1685,"KRN",8989.52,0)
8989.52
"BLD",1685,"KRN",8994,0)
8994
"BLD",1685,"KRN","B",.4,.4)

"BLD",1685,"KRN","B",.401,.401)

"BLD",1685,"KRN","B",.402,.402)

"BLD",1685,"KRN","B",.403,.403)

"BLD",1685,"KRN","B",.5,.5)

"BLD",1685,"KRN","B",.84,.84)

"BLD",1685,"KRN","B",3.6,3.6)

"BLD",1685,"KRN","B",3.8,3.8)

"BLD",1685,"KRN","B",9.2,9.2)

"BLD",1685,"KRN","B",9.8,9.8)

"BLD",1685,"KRN","B",19,19)

"BLD",1685,"KRN","B",19.1,19.1)

"BLD",1685,"KRN","B",101,101)

"BLD",1685,"KRN","B",409.61,409.61)

"BLD",1685,"KRN","B",771,771)

"BLD",1685,"KRN","B",870,870)

"BLD",1685,"KRN","B",8989.51,8989.51)

"BLD",1685,"KRN","B",8989.52,8989.52)

"BLD",1685,"KRN","B",8994,8994)

"BLD",1685,"QUES",0)
^9.62^^
"BLD",1685,"REQB",0)
^9.611^^
"MBREQ")
0
"PKG",539,-1)
1^1
"PKG",539,0)
NATIONAL VISTA SUPPORT^NVS^Utilities developed and used by National VistA Support
"PKG",539,20,0)
^9.402P^^
"PKG",539,22,0)
^9.49I^1^1
"PKG",539,22,1,0)
4.0^3021017^3021017^520628471
"PKG",539,22,1,"PAH",1,0)
1^3021030
"PKG",539,22,1,"PAH",1,1,0)
^^109^109^3021030
"PKG",539,22,1,"PAH",1,1,1,0)
This KIDs build contains the routine set for the EMC Test Account Reset 
"PKG",539,22,1,"PAH",1,1,2,0)
Utilities, version 6.0 dated September 1, 2002.
"PKG",539,22,1,"PAH",1,1,3,0)
 
"PKG",539,22,1,"PAH",1,1,4,0)
Release Notes:
"PKG",539,22,1,"PAH",1,1,5,0)
 
"PKG",539,22,1,"PAH",1,1,6,0)
Test Account Reset Utilities
"PKG",539,22,1,"PAH",1,1,7,0)
 
"PKG",539,22,1,"PAH",1,1,8,0)
      1. Domain name synonyms are removed (deleted) when the domain name 
"PKG",539,22,1,"PAH",1,1,9,0)
in the Kernel Systems Parameters file is re-named.  This helps prevent 
"PKG",539,22,1,"PAH",1,1,10,0)
problems with incoming mail from the production system.
"PKG",539,22,1,"PAH",1,1,11,0)
 
"PKG",539,22,1,"PAH",1,1,12,0)
      2. The option to start up Task Manager at the completion of the 
"PKG",539,22,1,"PAH",1,1,13,0)
procedures has been removed.  There are several different platforms that 
"PKG",539,22,1,"PAH",1,1,14,0)
have different procedures for starting/restarting Task Manager.  The 
"PKG",539,22,1,"PAH",1,1,15,0)
Utilities no longer attempt to provide for these various startup 
"PKG",539,22,1,"PAH",1,1,16,0)
procedures.
"PKG",539,22,1,"PAH",1,1,17,0)
 
"PKG",539,22,1,"PAH",1,1,18,0)
      3. The NVSCIRN* routines are no longer distributed with the 
"PKG",539,22,1,"PAH",1,1,19,0)
Utilities.  This is because the core procedures provided in ^NVSCIRN1 and 
"PKG",539,22,1,"PAH",1,1,20,0)
^NVSCIRN2 are incorporated into the basic NVSTAR procedures (note 
"PKG",539,22,1,"PAH",1,1,21,0)
additional information below.)
"PKG",539,22,1,"PAH",1,1,22,0)
 
"PKG",539,22,1,"PAH",1,1,23,0)
      4. Two additional HL7 clean up steps have been added.  It should be 
"PKG",539,22,1,"PAH",1,1,24,0)
noted that these new procedures significantly increase the time required 
"PKG",539,22,1,"PAH",1,1,25,0)
to complete a test account reset.
"PKG",539,22,1,"PAH",1,1,26,0)
 
"PKG",539,22,1,"PAH",1,1,27,0)
         a. In the HL7 MESSAGE ADMINISTRATION file (#773), a new procedure
"PKG",539,22,1,"PAH",1,1,28,0)
loops through and examines each entry for its STATUS (field #20).  If 
"PKG",539,22,1,"PAH",1,1,29,0)
this field is not set to "SUCCESSFULLY COMPLETED , the record is edited 
"PKG",539,22,1,"PAH",1,1,30,0)
to reflect that status.  Further, the cross reference ^HLMA("AC ) is 
"PKG",539,22,1,"PAH",1,1,31,0)
deleted.
"PKG",539,22,1,"PAH",1,1,32,0)
         b. A module previously documented to be run separately   
"PKG",539,22,1,"PAH",1,1,33,0)
DELMPI^NVSCIRN1 is now incorporated into the basic procedures performed 
"PKG",539,22,1,"PAH",1,1,34,0)
by the Utilities.  This procedure examines all records in the Patient 
"PKG",539,22,1,"PAH",1,1,35,0)
file (#2) for CIRN/MPI data.  If any are found, they are cleaned out.
"PKG",539,22,1,"PAH",1,1,36,0)
 
"PKG",539,22,1,"PAH",1,1,37,0)
      5. All entries in the ALERTS file (#8989) are deleted.  This 
"PKG",539,22,1,"PAH",1,1,38,0)
prevents potential user confusion with active alerts on the Test versus 
"PKG",539,22,1,"PAH",1,1,39,0)
production accounts.
"PKG",539,22,1,"PAH",1,1,40,0)
 
"PKG",539,22,1,"PAH",1,1,41,0)
      6. The Procedure Monitor (routine ^NVSTARM) has been removed.  The 
"PKG",539,22,1,"PAH",1,1,42,0)
output from the Utilities  procedures is now displayed directly to the 
"PKG",539,22,1,"PAH",1,1,43,0)
monitor.  This has been done primarily because of the HL7 clean up 
"PKG",539,22,1,"PAH",1,1,44,0)
additions noted above.  Those two procedures have significantly increased 
"PKG",539,22,1,"PAH",1,1,45,0)
the run time of the Utilities (see below).
"PKG",539,22,1,"PAH",1,1,46,0)
 
"PKG",539,22,1,"PAH",1,1,47,0)
      7. The amount of time required to run the Utilities to completion 
"PKG",539,22,1,"PAH",1,1,48,0)
has significantly increased. Previous versions usually completed in less 
"PKG",539,22,1,"PAH",1,1,49,0)
than 5 minutes regardless of platform (VMS/NT, DSM/Cache).  However, 
"PKG",539,22,1,"PAH",1,1,50,0)
depending upon the number of records in files 2, 773, and 8989, 
"PKG",539,22,1,"PAH",1,1,51,0)
completion may take as much as an hour or more.  Recent testing at a 
"PKG",539,22,1,"PAH",1,1,52,0)
Windows NT/Cache site with 61,000 patient records and approximately 
"PKG",539,22,1,"PAH",1,1,53,0)
140,000 HL7 messages required just over 20 minutes for completion of the 
"PKG",539,22,1,"PAH",1,1,54,0)
Utilities.  The Utilities simply do significantly more work than before 
"PKG",539,22,1,"PAH",1,1,55,0)
and as a result will require more time to complete.
"PKG",539,22,1,"PAH",1,1,56,0)
 
"PKG",539,22,1,"PAH",1,1,57,0)
      8. The modified XQ routines for use on test accounts are not 
"PKG",539,22,1,"PAH",1,1,58,0)
distributed in the NVSTAR KIDs build.  A separate set of files, 
"PKG",539,22,1,"PAH",1,1,59,0)
platform-specific, are provided at the ftp site.  These routines (XQ, 
"PKG",539,22,1,"PAH",1,1,60,0)
XQ12, XQ2 and XQTOC) are patched through XU*8.0*157.
"PKG",539,22,1,"PAH",1,1,61,0)
 
"PKG",539,22,1,"PAH",1,1,62,0)
Data Scrambler and User Access Utilities
"PKG",539,22,1,"PAH",1,1,63,0)
 
"PKG",539,22,1,"PAH",1,1,64,0)
Patient Data Scrambler Utility.
"PKG",539,22,1,"PAH",1,1,65,0)
 
"PKG",539,22,1,"PAH",1,1,66,0)
      1. Name and SSN scrambling algorithm has changed.  The first letter 
"PKG",539,22,1,"PAH",1,1,67,0)
of the patient s last name is no longer scrambled.
"PKG",539,22,1,"PAH",1,1,68,0)
 
"PKG",539,22,1,"PAH",1,1,69,0)
      2. The last 4 numbers of the patient s social security number are no
"PKG",539,22,1,"PAH",1,1,70,0)
longer scrambled.  This, in conjunction with the change in name scrambling
"PKG",539,22,1,"PAH",1,1,71,0)
mentioned above, provides for the retention of the "BS  and "BS5  cross
"PKG",539,22,1,"PAH",1,1,72,0)
references (first letter last name+last 4 SSN) in the Patient file.  This
"PKG",539,22,1,"PAH",1,1,73,0)
is a feature that was present in previous versions and many sites have
"PKG",539,22,1,"PAH",1,1,74,0)
asked that it be reinstated.
"PKG",539,22,1,"PAH",1,1,75,0)
 
"PKG",539,22,1,"PAH",1,1,76,0)
New Person/PAID Employee File Data Scrambler
"PKG",539,22,1,"PAH",1,1,77,0)
 
"PKG",539,22,1,"PAH",1,1,78,0)
      1. Various code changes have been made in response to bug reports.
"PKG",539,22,1,"PAH",1,1,79,0)
 
"PKG",539,22,1,"PAH",1,1,80,0)
      2. Update of the NAME COMPONENT file (#20) has been added so that 
"PKG",539,22,1,"PAH",1,1,81,0)
when NEW PERSON record names are scrambled, so too is the record in the 
"PKG",539,22,1,"PAH",1,1,82,0)
NAME COMPONENTS file.
"PKG",539,22,1,"PAH",1,1,83,0)
 
"PKG",539,22,1,"PAH",1,1,84,0)
(It is noted that some sites use this data scrambler, but there have been 
"PKG",539,22,1,"PAH",1,1,85,0)
others that have used it and been unhappy with the results.  It is 
"PKG",539,22,1,"PAH",1,1,86,0)
recommended that any potential users of this data scrambler read the 
"PKG",539,22,1,"PAH",1,1,87,0)
warning when the routine is executed.  If there are any questions about 
"PKG",539,22,1,"PAH",1,1,88,0)
what this scrambler will do, a support request should be submitted.)
"PKG",539,22,1,"PAH",1,1,89,0)
 
"PKG",539,22,1,"PAH",1,1,90,0)
Set the DISUSER Field in User Accounts
"PKG",539,22,1,"PAH",1,1,91,0)
 
"PKG",539,22,1,"PAH",1,1,92,0)
        This new and optional utility provides a means of setting the 
"PKG",539,22,1,"PAH",1,1,93,0)
DISUSER field (#7) in the New Person file for any or all user accounts 
"PKG",539,22,1,"PAH",1,1,94,0)
effectively terminating their access to the test system.  POSTMASTER s 
"PKG",539,22,1,"PAH",1,1,95,0)
account is excluded and will not be disabled.  Further, the user's 
"PKG",539,22,1,"PAH",1,1,96,0)
account in which the utility is running will also not be disabled.  The 
"PKG",539,22,1,"PAH",1,1,97,0)
user running the utility has the option of specifying user accounts that 
"PKG",539,22,1,"PAH",1,1,98,0)
should be excluded   that is, should NOT be disabled.  These accounts can 
"PKG",539,22,1,"PAH",1,1,99,0)
be either selected by individual user name, or by using the members in a 
"PKG",539,22,1,"PAH",1,1,100,0)
selected mail group (e.g., IRM).  If a mail group is selected, the local 
"PKG",539,22,1,"PAH",1,1,101,0)
members of that group will excluded from the DISUSER procedure.  The list 
"PKG",539,22,1,"PAH",1,1,102,0)
of excluded users can be further edited through another option provided.  
"PKG",539,22,1,"PAH",1,1,103,0)
Of course, FileMan can be used to reset the field for any user after this 
"PKG",539,22,1,"PAH",1,1,104,0)
utility has been run.
"PKG",539,22,1,"PAH",1,1,105,0)
 
"PKG",539,22,1,"PAH",1,1,106,0)
Mail Message and Basket Purge Utility
"PKG",539,22,1,"PAH",1,1,107,0)
 
"PKG",539,22,1,"PAH",1,1,108,0)
        This optional utility that cleans out all mail messages and 
"PKG",539,22,1,"PAH",1,1,109,0)
purges all users  mail baskets has not been changed.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
21
"RTN","NVSMMP")
0^24^B40632679
"RTN","NVSMMP",1,0)
NVSMMP ;nvsiss/maw-test account mail messages/baskets purge; 06 Oct 2000  3:57 PM ; 09/01/02
"RTN","NVSMMP",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSMMP",3,0)
 ;
"RTN","NVSMMP",4,0)
 D HOME^%ZIS
"RTN","NVSMMP",5,0)
 I $G(IOF)'="" W @IOF
"RTN","NVSMMP",6,0)
 I '$D(DUZ) S DUZ=.5,DUZ(0)="@"
"RTN","NVSMMP",7,0)
 D DT^DICRW
"RTN","NVSMMP",8,0)
 ;
"RTN","NVSMMP",9,0)
 W !,$$CJ^XLFSTR("ENTERPRISE MANAGEMENT CENTER :: TEST ACCOUNT RESET UTILITIES v6.0",80)
"RTN","NVSMMP",10,0)
 W !,$$CJ^XLFSTR("MAIL MESSAGE AND BASKET PURGE UTILITY",80)
"RTN","NVSMMP",11,0)
 I '$D(NVSUCI) S NVSQUIT=0 D  I NVSQUIT'=0 K NVSOPSYS,NVSQUIT,NVSUCI Q
"RTN","NVSMMP",12,0)
 .I $D(^%ZOSF("UCI")) X ^%ZOSF("UCI")
"RTN","NVSMMP",13,0)
 .I '$D(Y) D  Q
"RTN","NVSMMP",14,0)
 ..W $C(7)
"RTN","NVSMMP",15,0)
 ..W !!,"ERROR:  UCI COULD NOT BE DETERMINED!  ABORTING!"
"RTN","NVSMMP",16,0)
 ..S NVSQUIT=1
"RTN","NVSMMP",17,0)
 .S NVSUCI=Y
"RTN","NVSMMP",18,0)
 .S NVSOPSYS=$P($G(^%ZOSF("OS"),"undefined"),U)
"RTN","NVSMMP",19,0)
 .;
"RTN","NVSMMP",20,0)
 W !!,"Current UCI: ",NVSUCI
"RTN","NVSMMP",21,0)
 I NVSUCI'["TST"&(NVSUCI'["TOU") D
"RTN","NVSMMP",22,0)
 .W $C(7)
"RTN","NVSMMP",23,0)
 .W !!,"WARNING:  THIS ACCOUNT DOESN'T APPEAR TO BE YOUR TEST SYSTEM!"
"RTN","NVSMMP",24,0)
 .W !,"MAKE SURE YOU'RE RUNNING THIS UTILITY IN YOUR TEST SYSTEM!"
"RTN","NVSMMP",25,0)
 S DIR(0)="YA"
"RTN","NVSMMP",26,0)
 S DIR("A")="Okay to continue? "
"RTN","NVSMMP",27,0)
 S DIR("B")="NO"
"RTN","NVSMMP",28,0)
 W ! D ^DIR K DIR
"RTN","NVSMMP",29,0)
 I Y'=1!($D(DIRUT)) D  Q
"RTN","NVSMMP",30,0)
 .S NVSQUIT=1
"RTN","NVSMMP",31,0)
 .W !!,"Mail Message and Basket Purge Utility aborted!"
"RTN","NVSMMP",32,0)
 .K DIRUT,DTOUT,X,Y
"RTN","NVSMMP",33,0)
 D PURGE
"RTN","NVSMMP",34,0)
 Q
"RTN","NVSMMP",35,0)
 ;
"RTN","NVSMMP",36,0)
 ; the following portion of this routine is under development...
"RTN","NVSMMP",37,0)
 W !!,"This utility will do one of the following things based upon your choice:"
"RTN","NVSMMP",38,0)
 W !!,"  -delete all messages in the MESSAGE file (^XMB(3.9,...), and then"
"RTN","NVSMMP",39,0)
 W !,"    (obviously required) clean out all users' mail baskets.  Note that"
"RTN","NVSMMP",40,0)
 W !,"    the baskets themselves are not deleted.  The end result is NO messages"
"RTN","NVSMMP",41,0)
 W !,"    remaining in the MESSAGE file."
"RTN","NVSMMP",42,0)
 W !!,"  -delete all messages EXCEPT for those owned by selected users and/or"
"RTN","NVSMMP",43,0)
 W !,"    members of selected mail groups.  This obviously takes longer, but"
"RTN","NVSMMP",44,0)
 W !,"    will leave messages for specified users (for example, members of the"
"RTN","NVSMMP",45,0)
 W !,"    IRM mail group) untouched.  This could be useful if certain users'"
"RTN","NVSMMP",46,0)
 W !,"    messages need to be available in the Test account."
"RTN","NVSMMP",47,0)
 ;
"RTN","NVSMMP",48,0)
 ; user selects options...
"RTN","NVSMMP",49,0)
 W !!,"Options for Purging Mail"
"RTN","NVSMMP",50,0)
 S DIR(0)="NA^1:2"
"RTN","NVSMMP",51,0)
 S DIR("A")="Select OPTION (1 or 2): "
"RTN","NVSMMP",52,0)
 S DIR("A",1)="  Option 1:  Purge All Messages"
"RTN","NVSMMP",53,0)
 S DIR("A",2)="  Option 2:  Select User/Mail Group(s) Message NOT to Purge"
"RTN","NVSMMP",54,0)
 S DIR("A",3)=" "
"RTN","NVSMMP",55,0)
 S DIR("?",1)="To delete all messages and clean out all baskets, select Option 1"
"RTN","NVSMMP",56,0)
 S DIR("?",2)="To select users or mail groups whose messages you DO NOT want to"
"RTN","NVSMMP",57,0)
 S DIR("?")="delete, select Option 2"
"RTN","NVSMMP",58,0)
 W ! D ^DIR K DIR
"RTN","NVSMMP",59,0)
 I $D(DIRUT) K DTOUT,DIRUT,X,Y Q
"RTN","NVSMMP",60,0)
 S NVSOPT=+Y
"RTN","NVSMMP",61,0)
 W !,"NVSOPT=",NVSOPT
"RTN","NVSMMP",62,0)
 I NVSOPT=2 D USEL
"RTN","NVSMMP",63,0)
 Q
"RTN","NVSMMP",64,0)
 ;
"RTN","NVSMMP",65,0)
PURGE ;
"RTN","NVSMMP",66,0)
 W !!,"Beginning ",$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","NVSMMP",67,0)
 ;
"RTN","NVSMMP",68,0)
 ; if Option 2 was selected, search selected users' mail baskets for messages
"RTN","NVSMMP",69,0)
 ; that will not be deleted...
"RTN","NVSMMP",70,0)
 ;I $D(^TMP("NVSMMP",$J)) D ^NVSMMP1
"RTN","NVSMMP",71,0)
 ;
"RTN","NVSMMP",72,0)
 ; purge messages from ^XMB(3.9)...
"RTN","NVSMMP",73,0)
 W !!,"Purging MESSAGE file..."
"RTN","NVSMMP",74,0)
 I '$D(^TMP("NVSMMP",$J,"MESSAGES")) D
"RTN","NVSMMP",75,0)
 .K ^XMB(3.9)
"RTN","NVSMMP",76,0)
 .S ^XMB(3.9,0)="MESSAGE^3.9s^^"
"RTN","NVSMMP",77,0)
 ;I $D(^TMP("NVSMMP",$J,"MESSAGES")) D
"RTN","NVSMMP",78,0)
 ;.W "(this may take a while)..."
"RTN","NVSMMP",79,0)
 ;.S NVSMSG=0
"RTN","NVSMMP",80,0)
 ;.F  S NVSMSG=$O(^XMB(3.9,NVSMSG)) Q:'NVSMSG  D
"RTN","NVSMMP",81,0)
 ;..I $D(^TMP("NVSMMP",$J,"MESSAGES",NVSMSG)) Q
"RTN","NVSMMP",82,0)
 ;..S DA=NVSMSG
"RTN","NVSMMP",83,0)
 ;..S DIK="^XMB(3.9,"
"RTN","NVSMMP",84,0)
 ;..D ^DIK
"RTN","NVSMMP",85,0)
 W "done."
"RTN","NVSMMP",86,0)
 ;
"RTN","NVSMMP",87,0)
 W !!,"Cleaning out mail baskets in ^XMB(3.7) "
"RTN","NVSMMP",88,0)
 S NVSCOUNT=0
"RTN","NVSMMP",89,0)
 ; remove some mail box file xrefs...
"RTN","NVSMMP",90,0)
 K ^XMB(3.7,"AC")
"RTN","NVSMMP",91,0)
 K ^XMB(3.7,"AD")
"RTN","NVSMMP",92,0)
 K ^XMB(3.7,"M")
"RTN","NVSMMP",93,0)
 ;
"RTN","NVSMMP",94,0)
 ; purge mail boxes...
"RTN","NVSMMP",95,0)
 S NVSMBOX=0
"RTN","NVSMMP",96,0)
 F  S NVSMBOX=$O(^XMB(3.7,NVSMBOX)) Q:'NVSMBOX  D
"RTN","NVSMMP",97,0)
 .I $D(^TMP("NVSMMP",$J,"USERS",NVSMBOX)) Q
"RTN","NVSMMP",98,0)
 .S NVSCOUNT=NVSCOUNT+1
"RTN","NVSMMP",99,0)
 .I '(NVSCOUNT#100) W "."
"RTN","NVSMMP",100,0)
 .;
"RTN","NVSMMP",101,0)
 .; remove forwarding address and make sure local delivery flag is on...
"RTN","NVSMMP",102,0)
 .S $P(^XMB(3.7,NVSMBOX,0),U,2)=""
"RTN","NVSMMP",103,0)
 .S $P(^XMB(3.7,NVSMBOX,0),U,8)=1
"RTN","NVSMMP",104,0)
 .;
"RTN","NVSMMP",105,0)
 .; reset message edited and message responded fields...
"RTN","NVSMMP",106,0)
 .S NVSDATA=$G(^XMB(3.7,NVSMBOX,"T"))
"RTN","NVSMMP",107,0)
 .I NVSDATA'="" D
"RTN","NVSMMP",108,0)
 ..S $P(NVSDATA,U)=""
"RTN","NVSMMP",109,0)
 ..S $P(NVSDATA,U,3)=""
"RTN","NVSMMP",110,0)
 ..S ^XMB(3.7,NVSMBOX,"T")=NVSDATA
"RTN","NVSMMP",111,0)
 .K NVSDATA
"RTN","NVSMMP",112,0)
 .;
"RTN","NVSMMP",113,0)
 .; delete new message and priority message nodes...
"RTN","NVSMMP",114,0)
 .K ^XMB(3.7,NVSMBOX,"N")
"RTN","NVSMMP",115,0)
 .K ^XMB(3.7,NVSMBOX,"N0")
"RTN","NVSMMP",116,0)
 .;
"RTN","NVSMMP",117,0)
 .; reset new message count and MESSAGE @ REINSTATEMENT fields...
"RTN","NVSMMP",118,0)
 .S $P(^XMB(3.7,NVSMBOX,0),U,6)=0
"RTN","NVSMMP",119,0)
 .S $P(^XMB(3.7,NVSMBOX,0),U,7)=0
"RTN","NVSMMP",120,0)
 .;
"RTN","NVSMMP",121,0)
 .S NVSMBSKT=0
"RTN","NVSMMP",122,0)
 .F  S NVSMBSKT=$O(^XMB(3.7,NVSMBOX,2,NVSMBSKT)) Q:'NVSMBSKT  D
"RTN","NVSMMP",123,0)
 ..S NVSDATA=$G(^XMB(3.7,NVSMBOX,2,NVSMBSKT,0))
"RTN","NVSMMP",124,0)
 ..F NVSX=2:1:5 S $P(NVSDATA,U,NVSX)=""
"RTN","NVSMMP",125,0)
 ..S ^XMB(3.7,NVSMBOX,2,NVSMBSKT,0)=NVSDATA
"RTN","NVSMMP",126,0)
 ..K NVSDATA,NVSX
"RTN","NVSMMP",127,0)
 ..S ^XMB(3.7,NVSMBOX,2,NVSMBSKT,1,0)="^3.702P^^"
"RTN","NVSMMP",128,0)
 ..S NVSMSG=""
"RTN","NVSMMP",129,0)
 ..F  S NVSMSG=$O(^XMB(3.7,NVSMBOX,2,NVSMBSKT,1,NVSMSG)) Q:NVSMSG=""  D
"RTN","NVSMMP",130,0)
 ...K ^XMB(3.7,NVSMBOX,2,NVSMBSKT,1,NVSMSG)
"RTN","NVSMMP",131,0)
 W "done."
"RTN","NVSMMP",132,0)
 ;
"RTN","NVSMMP",133,0)
 ; clean up ^XMBPOST...
"RTN","NVSMMP",134,0)
 W !!,"Cleaning up ^XMBPOST"
"RTN","NVSMMP",135,0)
 S NVSX=""
"RTN","NVSMMP",136,0)
 F  S NVSX=$O(^XMBPOST(NVSX)) Q:NVSX=""  K ^XMBPOST(NVSX)
"RTN","NVSMMP",137,0)
 S ^XMBPOST("LINES_READ",0)=0
"RTN","NVSMMP",138,0)
 S ^XMBPOST("PGROUPM",1)=""
"RTN","NVSMMP",139,0)
 S ^XMBPOST("PGROUPR",1)=""
"RTN","NVSMMP",140,0)
 S ^XMBPOST("POST")=0
"RTN","NVSMMP",141,0)
 S ^XMBPOST("STATS","M")=0
"RTN","NVSMMP",142,0)
 S ^XMBPOST("STATS","R")=0
"RTN","NVSMMP",143,0)
 K NVSX
"RTN","NVSMMP",144,0)
 W " -- done."
"RTN","NVSMMP",145,0)
 ;
"RTN","NVSMMP",146,0)
 ; finally, delete the network mail file...
"RTN","NVSMMP",147,0)
 W !!,"Deleting network mail file ^XMBX(3.9,""AI"")"
"RTN","NVSMMP",148,0)
 K ^XMBX(3.9,"AI")
"RTN","NVSMMP",149,0)
 W " -- done."
"RTN","NVSMMP",150,0)
 ;
"RTN","NVSMMP",151,0)
 W !!,"All processing done ",$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","NVSMMP",152,0)
 K NVSCOUNT,NVSDATA,NVSMBOX,NVSMBSKT,NVSMSG,NVSOPSYS,NVSUCI,NVSQUIT
"RTN","NVSMMP",153,0)
 Q
"RTN","NVSMMP",154,0)
 ;
"RTN","NVSMMP",155,0)
USEL ; select user(s) and/or member(s) of mail group(s) whose messages will NOT be deleted..
"RTN","NVSMMP",156,0)
 K ^TMP("NVSMMP",$J)
"RTN","NVSMMP",157,0)
 F  D  Q:$D(DIRUT)
"RTN","NVSMMP",158,0)
 .S DIR(0)="SAO^U:User;M:Mail Group"
"RTN","NVSMMP",159,0)
 .S DIR("A")=" Select a [U]ser or a [M]ail Group? "
"RTN","NVSMMP",160,0)
 .W ! D ^DIR K DIR
"RTN","NVSMMP",161,0)
 .I $D(DIRUT) Q
"RTN","NVSMMP",162,0)
 .S NVSSEL=Y
"RTN","NVSMMP",163,0)
 .I NVSSEL="U" D
"RTN","NVSMMP",164,0)
 ..F  D  I $D(DIRUT) K DTOUT,DIRUT,X,Y Q
"RTN","NVSMMP",165,0)
 ...S DIR(0)="PAO^3.7:QEFMZ"
"RTN","NVSMMP",166,0)
 ...S DIR("A")="Select USER: "
"RTN","NVSMMP",167,0)
 ...D ^DIR K DIR
"RTN","NVSMMP",168,0)
 ...I $D(DIRUT) Q
"RTN","NVSMMP",169,0)
 ...S NVSUSER=+Y
"RTN","NVSMMP",170,0)
 ...S ^TMP("NVSMMP",$J,"USERS",NVSUSER)=""
"RTN","NVSMMP",171,0)
 ..K NVSUSER
"RTN","NVSMMP",172,0)
 .K DIRUT,DTOUT,X,Y
"RTN","NVSMMP",173,0)
 .I NVSSEL="M" D
"RTN","NVSMMP",174,0)
 ..F  D  I $D(DIRUT) K DTOUT,DIRUT,X,Y Q
"RTN","NVSMMP",175,0)
 ...S DIR(0)="PAO^3.8:QEFMZ"
"RTN","NVSMMP",176,0)
 ...S DIR("A")="Select MAIL GROUP: "
"RTN","NVSMMP",177,0)
 ...W ! D ^DIR K DIR
"RTN","NVSMMP",178,0)
 ...I $D(DIRUT) Q
"RTN","NVSMMP",179,0)
 ...S NVSGROUP=+Y
"RTN","NVSMMP",180,0)
 ...W !,"  Extracting member(s)..."
"RTN","NVSMMP",181,0)
 ...S NVSUSER=0
"RTN","NVSMMP",182,0)
 ...F  S NVSUSER=$O(^XMB(3.8,NVSGROUP,1,"B",NVSUSER)) Q:'NVSUSER  D
"RTN","NVSMMP",183,0)
 ....I $G(^VA(200,+NVSUSER,0))="" Q
"RTN","NVSMMP",184,0)
 ....W !,"    ",$P($G(^VA(200,NVSUSER,0)),U)
"RTN","NVSMMP",185,0)
 ....S ^TMP("NVSMMP",$J,"USERS",NVSUSER)=""
"RTN","NVSMMP",186,0)
 ...K NVSGROUP,NVSUSER
"RTN","NVSMMP",187,0)
 .K DIRUT,DTOUT,X,Y
"RTN","NVSMMP",188,0)
 I '$D(^TMP("NVSMMP",$J)) W !!,"No user(s) and/or mail group(s) were selected."
"RTN","NVSMMP",189,0)
 K DTOUT,DIRUT,X,Y
"RTN","NVSMMP",190,0)
 Q
"RTN","NVSPDS")
0^29^B99482481
"RTN","NVSPDS",1,0)
NVSPDS ;emciss/maw-scramble patient data in test system ; 09/01/02
"RTN","NVSPDS",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSPDS",3,0)
 ;
"RTN","NVSPDS",4,0)
 ; original concept taken from routine ZDWGTDEM (author unknown).
"RTN","NVSPDS",5,0)
 ; additional input to this procedure was provided by Warren Wright at
"RTN","NVSPDS",6,0)
 ; VAMC Huntington, WV and Jack Snyder at VAMC Danville, IL.
"RTN","NVSPDS",7,0)
 ;
"RTN","NVSPDS",8,0)
 F  D  Q:$D(DIRUT)
"RTN","NVSPDS",9,0)
 .I $G(IOF)'="" W @IOF
"RTN","NVSPDS",10,0)
 .W !!,"ENTERPRISE MANAGEMENT CENTER :: TEST ACCOUNT RESET UTILITIES"
"RTN","NVSPDS",11,0)
 .W !,"DATA SCRAMBLERS AND USER ACCESS UTILITIES"
"RTN","NVSPDS",12,0)
 .W !!,"Note:  these are OPTIONAL procedures"
"RTN","NVSPDS",13,0)
 .S DIR(0)="SA^1:PDS;2:NPPE;3:DISUSER;4:QUIT"
"RTN","NVSPDS",14,0)
 .S DIR("A")="Select OPTION (1-4): "
"RTN","NVSPDS",15,0)
 .S DIR("A",1)="  [1] Patient Data Scrambler"
"RTN","NVSPDS",16,0)
 .S DIR("A",2)="  [2] New Person/Paid Employee Scrambler"
"RTN","NVSPDS",17,0)
 .S DIR("A",3)="  [3] DISUSER User Accounts"
"RTN","NVSPDS",18,0)
 .S DIR("A",4)="  [4] QUIT"
"RTN","NVSPDS",19,0)
 .S DIR("A",5)=" "
"RTN","NVSPDS",20,0)
 .S DIR("B")="4"
"RTN","NVSPDS",21,0)
 .W !
"RTN","NVSPDS",22,0)
 .D ^DIR K DIR
"RTN","NVSPDS",23,0)
 .I +Y=4 S DIRUT=1
"RTN","NVSPDS",24,0)
 .I $D(DIRUT) Q
"RTN","NVSPDS",25,0)
 .S NVSOPT=+Y
"RTN","NVSPDS",26,0)
 .I NVSOPT=1 D PDS Q
"RTN","NVSPDS",27,0)
 .I NVSOPT=2 D ^NVSPDS4 Q
"RTN","NVSPDS",28,0)
 .I NVSOPT=3 D ^NVSPDS6
"RTN","NVSPDS",29,0)
 .K DIRUT,DTOUT,X,Y
"RTN","NVSPDS",30,0)
 Q
"RTN","NVSPDS",31,0)
PDS ;
"RTN","NVSPDS",32,0)
 D HOME^%ZIS
"RTN","NVSPDS",33,0)
 I $G(IOF)'="" W @IOF
"RTN","NVSPDS",34,0)
 I '$D(DUZ) D
"RTN","NVSPDS",35,0)
 .S DUZ=.5
"RTN","NVSPDS",36,0)
 .S DUZ(0)="@"
"RTN","NVSPDS",37,0)
 D DT^DICRW
"RTN","NVSPDS",38,0)
 W !!,"ENTERPRISE MANAGEMENT CENTER :: PATIENT DATA SCRAMBLER UTILITY"
"RTN","NVSPDS",39,0)
 ; make sure we're in the right place to run this utility...
"RTN","NVSPDS",40,0)
 I '$D(NVSUCI) S NVSQUIT=0 D  I NVSQUIT'=0 K NVSOPSYS,NVSQUIT,NVSUCI Q
"RTN","NVSPDS",41,0)
 .X $G(^%ZOSF("UCI"))
"RTN","NVSPDS",42,0)
 .I '$D(Y) D  Q
"RTN","NVSPDS",43,0)
 ..W $C(7)
"RTN","NVSPDS",44,0)
 ..W !!,"ERROR:  UCI COULD NOT BE DETERMINED!  ABORTING!"
"RTN","NVSPDS",45,0)
 ..S NVSQUIT=1
"RTN","NVSPDS",46,0)
 .S NVSUCI=Y
"RTN","NVSPDS",47,0)
 .S NVSOPSYS=$P($G(^%ZOSF("OS"),"undefined"),U)
"RTN","NVSPDS",48,0)
 .;
"RTN","NVSPDS",49,0)
 .W !!,"Current UCI: ",NVSUCI
"RTN","NVSPDS",50,0)
 .I NVSUCI'["TST"&(NVSUCI'["TOU") D
"RTN","NVSPDS",51,0)
 ..W $C(7)
"RTN","NVSPDS",52,0)
 ..W !!,"WARNING:  THIS ACCOUNT DOESN'T APPEAR TO BE YOUR TEST SYSTEM!"
"RTN","NVSPDS",53,0)
 ..W !,"MAKE SURE YOU'RE RUNNING THIS UTILITY IN YOUR TEST SYSTEM!"
"RTN","NVSPDS",54,0)
 .S DIR(0)="YA"
"RTN","NVSPDS",55,0)
 .S DIR("A")="Okay to continue? "
"RTN","NVSPDS",56,0)
 .S DIR("B")="NO"
"RTN","NVSPDS",57,0)
 .W ! D ^DIR K DIR
"RTN","NVSPDS",58,0)
 .I Y'=1!($D(DIRUT)) D  Q
"RTN","NVSPDS",59,0)
 ..S NVSQUIT=1
"RTN","NVSPDS",60,0)
 ..W !!,"Patient File Scrambler aborted!"
"RTN","NVSPDS",61,0)
 ..K DIRUT,DTOUT,X,Y
"RTN","NVSPDS",62,0)
 .;
"RTN","NVSPDS",63,0)
 .; check for existence of the process tracking global...
"RTN","NVSPDS",64,0)
 .I $G(^XTMP("NVSPDS",0))="" D
"RTN","NVSPDS",65,0)
 ..S NVSNOW=$$DT^XLFDT
"RTN","NVSPDS",66,0)
 ..S X1=NVSNOW
"RTN","NVSPDS",67,0)
 ..S X2=10
"RTN","NVSPDS",68,0)
 ..D C^%DTC
"RTN","NVSPDS",69,0)
 ..S ^XTMP("NVSPDS",0)=X_U_NVSNOW_U_"NVS Patient Data Scrambler Utility"
"RTN","NVSPDS",70,0)
 ..K NVSNOW,X,X1,X2
"RTN","NVSPDS",71,0)
 .;
"RTN","NVSPDS",72,0)
 .I $G(^XTMP("NVSPDS","JOB"))'="" D  I $G(NVSQUIT)'=0 Q
"RTN","NVSPDS",73,0)
 ..W !!,"The Patient Data Scrambler process tracking global"
"RTN","NVSPDS",74,0)
 ..W !,"already exists in this account."
"RTN","NVSPDS",75,0)
 ..W !!,"It was created ",$P(^XTMP("NVSPDS","JOB"),U)
"RTN","NVSPDS",76,0)
 ..W !,"and contains these statistics:"
"RTN","NVSPDS",77,0)
 ..W !!,"Total records in ^DPT: "
"RTN","NVSPDS",78,0)
 ..W ?34,$J(+$P(^XTMP("NVSPDS","JOB"),U,5),10)
"RTN","NVSPDS",79,0)
 ..W !,"Total records processed so far:"
"RTN","NVSPDS",80,0)
 ..W ?34,$J(+$P(^XTMP("NVSPDS","JOB"),U,6),10)
"RTN","NVSPDS",81,0)
 ..W !,"Last DFN processed:"
"RTN","NVSPDS",82,0)
 ..W ?34,$J(+$P(^XTMP("NVSPDS","JOB"),U,4),10)
"RTN","NVSPDS",83,0)
 ..W !!,"Caution:  if you choose to reset and start from the beginning,"
"RTN","NVSPDS",84,0)
 ..W !,"any patient names already scrambled will be UNSCRAMBLED.  There may"
"RTN","NVSPDS",85,0)
 ..W !,"be other problems, too.  It is recommended that you restart from"
"RTN","NVSPDS",86,0)
 ..W !,"the last DFN processed."
"RTN","NVSPDS",87,0)
 ..W !!,"Your options are:"
"RTN","NVSPDS",88,0)
 ..S DIR(0)="SA^1:Reset/Restart;2:Restart;3:Quit"
"RTN","NVSPDS",89,0)
 ..S DIR("A")="Select your option (1-3): "
"RTN","NVSPDS",90,0)
 ..S DIR("A",1)="  1 : Reset the tracking global and restart from beginning"
"RTN","NVSPDS",91,0)
 ..S DIR("A",2)="  2 : Restart from last DFN processed"
"RTN","NVSPDS",92,0)
 ..S DIR("A",3)="  3 : Quit and take NO action"
"RTN","NVSPDS",93,0)
 ..S DIR("A",4)=" "
"RTN","NVSPDS",94,0)
 ..S DIR("B")="3"
"RTN","NVSPDS",95,0)
 ..W !
"RTN","NVSPDS",96,0)
 ..D ^DIR K DIR
"RTN","NVSPDS",97,0)
 ..I $D(DIRUT)!(Y=3) S NVSQUIT=1 Q
"RTN","NVSPDS",98,0)
 ..I Y'=1 Q
"RTN","NVSPDS",99,0)
 ..K ^XTMP("NVSPDS","JOB")
"RTN","NVSPDS",100,0)
 ..K ^XTMP("NVSPDS","E")
"RTN","NVSPDS",101,0)
 ..K ^XTMP("NVSPDS","FATAL_ERROR")
"RTN","NVSPDS",102,0)
 .;
"RTN","NVSPDS",103,0)
 .I $G(^XTMP("NVSPDS","JOB"))="" D
"RTN","NVSPDS",104,0)
 ..S ^XTMP("NVSPDS","JOB")=$$FMTE^XLFDT($$NOW^XLFDT)_"^0^^^^0"
"RTN","NVSPDS",105,0)
 ..W !!,"I need to get an ACCURATE count of total number of"
"RTN","NVSPDS",106,0)
 ..W !,"patient records...this may take a while, please be patient..."
"RTN","NVSPDS",107,0)
 ..S $P(^XTMP("NVSPDS","JOB"),U,5)=$$DPTTOT^NVSPDSU
"RTN","NVSPDS",108,0)
 ..W !!,"The record count in $P(^DPT(0),""^"",4)=",+$P(^DPT(0),U,4)
"RTN","NVSPDS",109,0)
 ..W !,"The count I just completed=",+$P(^XTMP("NVSPDS","JOB"),U,5)
"RTN","NVSPDS",110,0)
 .;
"RTN","NVSPDS",111,0)
 .; if the global exists, ask to clear any errors...
"RTN","NVSPDS",112,0)
 .I $D(^XTMP("NVSPDS","E")) D
"RTN","NVSPDS",113,0)
 ..W !!,"Error notes exist in the tracking global."
"RTN","NVSPDS",114,0)
 ..S DIR(0)="YA"
"RTN","NVSPDS",115,0)
 ..S DIR("A")="Okay to delete them? "
"RTN","NVSPDS",116,0)
 ..S DIR("B")="NO"
"RTN","NVSPDS",117,0)
 ..W ! D ^DIR K DIR
"RTN","NVSPDS",118,0)
 ..I Y=1 D  Q
"RTN","NVSPDS",119,0)
 ...K ^XTMP("NVSPDS","E")
"RTN","NVSPDS",120,0)
 ...W !,"  okay, errors deleted."
"RTN","NVSPDS",121,0)
 ..W !!,"Okay, I'll append any errors found during this run of the"
"RTN","NVSPDS",122,0)
 ..W !,"Patient Data Scrambler to the existing error list."
"RTN","NVSPDS",123,0)
 ..W !,"Note that the last error number currently on file is "
"RTN","NVSPDS",124,0)
 ..W $O(^XTMP("NVSPDS","E",0),-1)
"RTN","NVSPDS",125,0)
 K NVSQUIT
"RTN","NVSPDS",126,0)
 ;
"RTN","NVSPDS",127,0)
 ; set the error trap...
"RTN","NVSPDS",128,0)
 S $ZT="ET^NVSPDSU"
"RTN","NVSPDS",129,0)
 ;
"RTN","NVSPDS",130,0)
 ; set the progress screen...
"RTN","NVSPDS",131,0)
 S NVSSTR=""
"RTN","NVSPDS",132,0)
 S NVSIDTOT=+$P(^XTMP("NVSPDS","JOB"),U,5)
"RTN","NVSPDS",133,0)
 S NVSCOUNT=+$P(^XTMP("NVSPDS","JOB"),U,6)
"RTN","NVSPDS",134,0)
 D INIT^NVSPDSU1
"RTN","NVSPDS",135,0)
 I NVSIDVT D
"RTN","NVSPDS",136,0)
 .D TITLE^NVSPDSU1("TEST ACCOUNT PATIENT DATA SCRAMBLER")
"RTN","NVSPDS",137,0)
 ;
"RTN","NVSPDS",138,0)
 W !!,"Job beginning "
"RTN","NVSPDS",139,0)
 S $P(^XTMP("NVSPDS","JOB"),U,3)=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","NVSPDS",140,0)
 W $P(^XTMP("NVSPDS","JOB"),U,3)
"RTN","NVSPDS",141,0)
 ;
"RTN","NVSPDS",142,0)
 ; delete IVM xrefs from the Patient file...
"RTN","NVSPDS",143,0)
 I '$D(^XTMP("NVSPDS","DELETE_XREFS")) D
"RTN","NVSPDS",144,0)
 .W !!,"Permanently removing some undesired x-refs from the Patient file..."
"RTN","NVSPDS",145,0)
 .D XREF^NVSPDSU1
"RTN","NVSPDS",146,0)
 .S ^XTMP("NVSPDS","DELETE_XREFS")=$H
"RTN","NVSPDS",147,0)
 ;
"RTN","NVSPDS",148,0)
 ; temporarily move the notifications node from the MAS PARAMETERS file from
"RTN","NVSPDS",149,0)
 ; ^DG(43,x,"NOT") to ^DG(43,x,"NVSNOT").  this will prevent alerts, bulletins,
"RTN","NVSPDS",150,0)
 ; etc.  we'll put it back when were done, but if a fatal error should occur,
"RTN","NVSPDS",151,0)
 ; the site may need to reset the node manually...
"RTN","NVSPDS",152,0)
 I '$D(^XTMP("NVSPDS","MAS_XREFS")) D
"RTN","NVSPDS",153,0)
 .W !!,"Temporarily moving notifications out of the MAS PARAMETERS file..."
"RTN","NVSPDS",154,0)
 .S NVSX=0
"RTN","NVSPDS",155,0)
 .F  S NVSX=$O(^DG(43,NVSX)) Q:'NVSX  D
"RTN","NVSPDS",156,0)
 ..I $D(^DG(43,NVSX,"NVSNOT")) Q
"RTN","NVSPDS",157,0)
 ..S NVSY=$G(^DG(43,NVSX,"NOT"))
"RTN","NVSPDS",158,0)
 ..S ^DG(43,NVSX,"NOT")=""
"RTN","NVSPDS",159,0)
 ..S ^DG(43,NVSX,"NVSNOT")=NVSY
"RTN","NVSPDS",160,0)
 ..K NVSY
"RTN","NVSPDS",161,0)
 .K NVSX
"RTN","NVSPDS",162,0)
 .S ^XTMP("NVSPDS","MAS_XREFS")=$H
"RTN","NVSPDS",163,0)
 .W "done."
"RTN","NVSPDS",164,0)
 ;
"RTN","NVSPDS",165,0)
 ; launch the procedure..
"RTN","NVSPDS",166,0)
 ;
"RTN","NVSPDS",167,0)
 ; **NOTE:  if this module stops due to a fatal error, or by programmer
"RTN","NVSPDS",168,0)
 ;          intervention, restart it by D ^NVSPDS.  it will pick up from
"RTN","NVSPDS",169,0)
 ;          the point where it stopped.
"RTN","NVSPDS",170,0)
 ;
"RTN","NVSPDS",171,0)
 W !!,"Any errors encountered will be displayed here, and logged in the tracking"
"RTN","NVSPDS",172,0)
 W !,"global for later reference."
"RTN","NVSPDS",173,0)
 W !!,"There are ",+$P(^XTMP("NVSPDS","JOB"),U,5)," total records to process.",!
"RTN","NVSPDS",174,0)
 I $P(^XTMP("NVSPDS","JOB"),U,6)>0 D
"RTN","NVSPDS",175,0)
 .W !,"Note ---> Records processed so far = "
"RTN","NVSPDS",176,0)
 .W $P(^XTMP("NVSPDS","JOB"),U,6)
"RTN","NVSPDS",177,0)
 ;
"RTN","NVSPDS",178,0)
RESTART ; if fatal error occurs, the error is trapped and handled in ^NVSPDSU and
"RTN","NVSPDS",179,0)
 ; restarted by a call to this entry point...
"RTN","NVSPDS",180,0)
 S U="^"
"RTN","NVSPDS",181,0)
 I '$D(^DPT("ANVSPDS","SSN")) S ^DPT("ANVSPDS","SSN")="0^0"
"RTN","NVSPDS",182,0)
 S NVSIDTOT=+$P($G(^XTMP("NVSPDS","JOB")),U,5)
"RTN","NVSPDS",183,0)
 I NVSIDTOT'>0 D
"RTN","NVSPDS",184,0)
 .S $P(^XTMP("NVSPDS","JOB"),U,5)=$$DPTTOT^NVSPDSU
"RTN","NVSPDS",185,0)
 .S NVSIDTOT=+$P($G(^XTMP("NVSPDS","JOB")),U,5)
"RTN","NVSPDS",186,0)
 S NVSCOUNT=+$P($G(^XTMP("NVSPDS","JOB")),U,6)
"RTN","NVSPDS",187,0)
 S NVSDFN=+$P($G(^XTMP("NVSPDS","JOB")),U,4)
"RTN","NVSPDS",188,0)
 F  S NVSDFN=$O(^DPT(NVSDFN)) Q:'NVSDFN  D
"RTN","NVSPDS",189,0)
 .W !,"Record # ",NVSDFN
"RTN","NVSPDS",190,0)
 .S $P(^XTMP("NVSPDS","JOB"),U,4)=NVSDFN
"RTN","NVSPDS",191,0)
 .S NVSCOUNT=$G(NVSCOUNT)+1
"RTN","NVSPDS",192,0)
 .S $P(^XTMP("NVSPDS","JOB"),U,6)=NVSCOUNT
"RTN","NVSPDS",193,0)
 .I '(NVSCOUNT#1000) D
"RTN","NVSPDS",194,0)
 ..W !!?5,"** STATUS **"
"RTN","NVSPDS",195,0)
 ..W !?5,$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","NVSPDS",196,0)
 ..W !?7,"Total records     = ",$J($P(^XTMP("NVSPDS","JOB"),U,5),8)
"RTN","NVSPDS",197,0)
 ..W !?7,"Records processed = ",$J(NVSCOUNT,8)
"RTN","NVSPDS",198,0)
 ..W !?7,"Records remaining = ",$J((NVSIDTOT-NVSCOUNT),8)
"RTN","NVSPDS",199,0)
 ..W !!?5,"************"
"RTN","NVSPDS",200,0)
 ..R NVSXX:5
"RTN","NVSPDS",201,0)
 ..K NVSXX
"RTN","NVSPDS",202,0)
 .;
"RTN","NVSPDS",203,0)
 .; initial record check...
"RTN","NVSPDS",204,0)
 .; if this is not a valid record (e.g., merged, marked-as-duplicate record, or incomplete)
"RTN","NVSPDS",205,0)
 .; forget it.  Note that merged records are dealt with after Scrambler has completed...
"RTN","NVSPDS",206,0)
 .S NVSOK=1
"RTN","NVSPDS",207,0)
 .I $G(^DPT(NVSDFN,0))="" S NVSOK=0
"RTN","NVSPDS",208,0)
 .I +$G(^DPT(NVSDFN,-9)) S NVSOK=0
"RTN","NVSPDS",209,0)
 .I +$P($G(^DPT(NVSDFN,0)),"^")'=0 S NVSOK=0
"RTN","NVSPDS",210,0)
 .I $G(^DPT(NVSDFN,"NVS"))'="" S NVSOK=0
"RTN","NVSPDS",211,0)
 .;
"RTN","NVSPDS",212,0)
 .S NVSDATA=$G(^DPT(NVSDFN,0))
"RTN","NVSPDS",213,0)
 .; check for DOB, if none create one...
"RTN","NVSPDS",214,0)
 .I $P(NVSDATA,U,3)="" D
"RTN","NVSPDS",215,0)
 ..D CDOB^NVSPDSU1(NVSDFN)
"RTN","NVSPDS",216,0)
 ..S $P(NVSDATA,U,3)=$P($G(^DPT(NVSDFN,0)),U,3)
"RTN","NVSPDS",217,0)
 ..I $P(NVSDATA,U,3)="" S NVSOK=0
"RTN","NVSPDS",218,0)
 .;
"RTN","NVSPDS",219,0)
 .; if the record didn't pass the initial checks, update the counter and quit...
"RTN","NVSPDS",220,0)
 .I NVSOK'=1 D UPDATE^NVSPDSU1(NVSCOUNT) Q
"RTN","NVSPDS",221,0)
 .K NVSDATA,NVSOK
"RTN","NVSPDS",222,0)
 .;
"RTN","NVSPDS",223,0)
 .; perform the changes for this patient record...
"RTN","NVSPDS",224,0)
 .D ^NVSPDS1
"RTN","NVSPDS",225,0)
 .D ^NVSPDS2
"RTN","NVSPDS",226,0)
 .D ^NVSPDS3
"RTN","NVSPDS",227,0)
 .;
"RTN","NVSPDS",228,0)
 .; update the monitor screen and set the completion flag in this record...
"RTN","NVSPDS",229,0)
 .D UPDATE^NVSPDSU1(NVSCOUNT)
"RTN","NVSPDS",230,0)
 .S ^DPT(NVSDFN,"NVS")=$H
"RTN","NVSPDS",231,0)
 ;
"RTN","NVSPDS",232,0)
 ; scramble SSNs in all patient records...
"RTN","NVSPDS",233,0)
 W !!,"Scrambling SSNs..."
"RTN","NVSPDS",234,0)
 ; need to reset NVSIDTOT to the number of unique last-4 SSNs...
"RTN","NVSPDS",235,0)
 S (NVSIDTOT,NVSL4)=0
"RTN","NVSPDS",236,0)
 F  S NVSL4=$O(^DPT("BS",NVSL4)) Q:'NVSL4  S NVSIDTOT=NVSIDTOT+1
"RTN","NVSPDS",237,0)
 K NVSL4
"RTN","NVSPDS",238,0)
 D ^NVSPDS5
"RTN","NVSPDS",239,0)
 W "done."
"RTN","NVSPDS",240,0)
 ;
"RTN","NVSPDS",241,0)
 ; re-index the "ADOB" and "B" x-refs in the Patient file...
"RTN","NVSPDS",242,0)
 W !!,"Re-indexing Patient file cross references"
"RTN","NVSPDS",243,0)
 W !?2,"Deleting ^DPT(""ADOB"",...)"
"RTN","NVSPDS",244,0)
 K ^DPT("ADOB") W " -- done."
"RTN","NVSPDS",245,0)
 W !?2,"Deleting ^DPT(""B"",...)"
"RTN","NVSPDS",246,0)
 K ^DPT("B") W " -- done."
"RTN","NVSPDS",247,0)
 ;
"RTN","NVSPDS",248,0)
 W !,"Re-indexing..."
"RTN","NVSPDS",249,0)
 S NVSIDTOT=$P(^XTMP("NVSPDS","JOB"),"^",5)
"RTN","NVSPDS",250,0)
 S (NVSCOUNT,NVSDFN)=0
"RTN","NVSPDS",251,0)
 F  S NVSDFN=$O(^DPT(NVSDFN)) Q:'NVSDFN  D
"RTN","NVSPDS",252,0)
 .S NVSCOUNT=NVSCOUNT+1
"RTN","NVSPDS",253,0)
 .D UPDATE^NVSPDSU1(NVSCOUNT)
"RTN","NVSPDS",254,0)
 .;
"RTN","NVSPDS",255,0)
 .; deal with merged records...
"RTN","NVSPDS",256,0)
 .I $D(^DPT(NVSDFN,-9)) D  Q
"RTN","NVSPDS",257,0)
 ..D MREC^NVSPDSU1(NVSDFN)
"RTN","NVSPDS",258,0)
 ..K ^DPT(NVSDFN,"NVS")
"RTN","NVSPDS",259,0)
 .I '$D(^DPT(NVSDFN,"NVS")) Q
"RTN","NVSPDS",260,0)
 .S NVSDATA=$G(^DPT(NVSDFN,0))
"RTN","NVSPDS",261,0)
 .I $P(NVSDATA,U)=""!($P(NVSDATA,U,9)="") Q
"RTN","NVSPDS",262,0)
 .S NVSOK=1
"RTN","NVSPDS",263,0)
 .D REINDX^NVSPDSU1(NVSDFN,.NVSOK)
"RTN","NVSPDS",264,0)
 .I NVSOK=0 D ERR^NVSPDSU("Record # "_NVSDFN_" not re-indexed.") Q
"RTN","NVSPDS",265,0)
 .K ^DPT(NVSDFN,"NVS")
"RTN","NVSPDS",266,0)
 K NVSOK
"RTN","NVSPDS",267,0)
 ;
"RTN","NVSPDS",268,0)
 ; module completed -- put the MAS PARAMETERS notifications node(s) back in place...
"RTN","NVSPDS",269,0)
 I $D(^XTMP("NVSPDS","MAS_XREFS")) D
"RTN","NVSPDS",270,0)
 .W !!,"Replacing notifications in the MAS PARAMETERS file..."
"RTN","NVSPDS",271,0)
 .S NVSX=0
"RTN","NVSPDS",272,0)
 .F  S NVSX=$O(^DG(43,NVSX)) Q:'NVSX  D
"RTN","NVSPDS",273,0)
 ..S NVSY=$G(^DG(43,NVSX,"NVSNOT"))
"RTN","NVSPDS",274,0)
 ..I NVSY="" Q
"RTN","NVSPDS",275,0)
 ..S ^DG(43,NVSX,"NOT")=NVSY
"RTN","NVSPDS",276,0)
 ..K ^DG(43,NVSX,"NVSNOT")
"RTN","NVSPDS",277,0)
 ..K NVSY
"RTN","NVSPDS",278,0)
 .K ^XTMP("NVSPDS","MAS_XREFS")
"RTN","NVSPDS",279,0)
 .W "done."
"RTN","NVSPDS",280,0)
 ;
"RTN","NVSPDS",281,0)
 ; remove the temporary holding node for SSN scrambling...
"RTN","NVSPDS",282,0)
 K ^DPT("ANVSPDS","SSN")
"RTN","NVSPDS",283,0)
 ;
"RTN","NVSPDS",284,0)
 ; done...
"RTN","NVSPDS",285,0)
 W !!,"Processing ended ",$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","NVSPDS",286,0)
 I '$D(^XTMP("NVSPDS","E")) W !!,"No errors or messages in the log."
"RTN","NVSPDS",287,0)
 I $D(^XTMP("NVSPDS","E")) W !!,"Errors are in the log.  Check global ^XTMP(""NVSPDS"") for details."
"RTN","NVSPDS",288,0)
 ;
"RTN","NVSPDS",289,0)
 S DIR(0)="EA"
"RTN","NVSPDS",290,0)
 S DIR("A")="Press enter to continue..."
"RTN","NVSPDS",291,0)
 W ! D ^DIR K DIR
"RTN","NVSPDS",292,0)
 D EXIT^NVSPDSU1("DONE")
"RTN","NVSPDS",293,0)
 K NVSCOUNT,NVSDFN,NVSNSSN,NVSOPSYS,NVSRECS,NVSUCI,NVSX,DIRUT,DTOUT,X,Y
"RTN","NVSPDS",294,0)
 S $ZT=""
"RTN","NVSPDS",295,0)
 Q
"RTN","NVSPDS1")
0^30^B18041205
"RTN","NVSPDS1",1,0)
NVSPDS1 ;emciss/maw-scramble patient data (continued) ; 09/01/02
"RTN","NVSPDS1",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSPDS1",3,0)
 ;
"RTN","NVSPDS1",4,0)
 ; called from ^NVSPDS
"RTN","NVSPDS1",5,0)
 ; Note:  the variable NVSDFN is set in the main loop through ^DPT(...)
"RTN","NVSPDS1",6,0)
 ;        that begins in routine ^NVSPDS.
"RTN","NVSPDS1",7,0)
 I '$D(NVSDFN) Q
"RTN","NVSPDS1",8,0)
 ;
"RTN","NVSPDS1",9,0)
 ; delete any aliases on file for this patient (we'd have to scramble them and
"RTN","NVSPDS1",10,0)
 ; basically make them completely useless, so let's get rid of them)...
"RTN","NVSPDS1",11,0)
 S NVSX=NVSDFN
"RTN","NVSPDS1",12,0)
 S NVSY=0
"RTN","NVSPDS1",13,0)
 F  S NVSY=$O(^DPT(NVSX,.01,NVSY)) Q:'NVSY  D
"RTN","NVSPDS1",14,0)
 .S DA=NVSY
"RTN","NVSPDS1",15,0)
 .S DA(1)=NVSX
"RTN","NVSPDS1",16,0)
 .S DIK="^DPT("_DA(1)_",.01,"
"RTN","NVSPDS1",17,0)
 .D ^DIK
"RTN","NVSPDS1",18,0)
 .K DA,DIK
"RTN","NVSPDS1",19,0)
 K NVSX,NVSY
"RTN","NVSPDS1",20,0)
 ;
"RTN","NVSPDS1",21,0)
 ; retrieve the zero-eth node of the patient's record...
"RTN","NVSPDS1",22,0)
 S NVSDATA(0)=^DPT(NVSDFN,0)
"RTN","NVSPDS1",23,0)
 ;
"RTN","NVSPDS1",24,0)
 ; make sure the patient's unscrambled name is in the VistA standard format...
"RTN","NVSPDS1",25,0)
 S NVSNAME=$P(NVSDATA(0),U)
"RTN","NVSPDS1",26,0)
 D STDNAME^XLFNAME(.NVSNAME,"FGP",.NVSNAUD)
"RTN","NVSPDS1",27,0)
 S $P(NVSDATA(0),U)=NVSNAME
"RTN","NVSPDS1",28,0)
 K NVSNAME,NVSNAUD
"RTN","NVSPDS1",29,0)
 ; 
"RTN","NVSPDS1",30,0)
 ; scramble patient's name...
"RTN","NVSPDS1",31,0)
 S $P(NVSDATA(0),U)=$$REVN^NVSPDSU($P(NVSDATA(0),U))
"RTN","NVSPDS1",32,0)
 ;
"RTN","NVSPDS1",33,0)
 ; set scrambled name into $P(1) of patient's record...
"RTN","NVSPDS1",34,0)
 S $P(^DPT(NVSDFN,0),U)=$P(NVSDATA(0),U)
"RTN","NVSPDS1",35,0)
 ;
"RTN","NVSPDS1",36,0)
 ; pull the other data nodes we want to work with...
"RTN","NVSPDS1",37,0)
 F NVSX=.11,.111,.12,.121,.13,.24 S NVSDATA(NVSX)=$G(^DPT(NVSDFN,NVSX))
"RTN","NVSPDS1",38,0)
 ;
"RTN","NVSPDS1",39,0)
 ; change place of birth (city and state)... 
"RTN","NVSPDS1",40,0)
 I $P(NVSDATA(0),U,11)'="" S $P(^DPT(NVSDFN,0),U,11)=$$CITY^NVSPDSU
"RTN","NVSPDS1",41,0)
 I $P(NVSDATA(0),U,12)'="" S $P(^DPT(NVSDFN,0),U,12)=+$$ST^NVSPDSU
"RTN","NVSPDS1",42,0)
 ;
"RTN","NVSPDS1",43,0)
 ; change current address node...
"RTN","NVSPDS1",44,0)
 I NVSDATA(.11)'="" D
"RTN","NVSPDS1",45,0)
 .S $P(NVSDATA(.11),U,4)=$$CITY^NVSPDSU
"RTN","NVSPDS1",46,0)
 .S $P(NVSDATA(.11),U,5)=+$$ST^NVSPDSU
"RTN","NVSPDS1",47,0)
 .I $P(NVSDATA(.11),U,6)'="" D
"RTN","NVSPDS1",48,0)
 ..S $P(NVSDATA(.11),U,6)=$$ZIP^NVSPDSU($P(NVSDATA(.11),U,6))
"RTN","NVSPDS1",49,0)
 .S $P(NVSDATA(.11),U,7)=$$CTY^NVSPDSU(+$P(NVSDATA(.11),U,5))
"RTN","NVSPDS1",50,0)
 .I $P(NVSDATA(.11),U,12)'="" D
"RTN","NVSPDS1",51,0)
 ..S $P(NVSDATA(.11),U,12)=$$ZIP^NVSPDSU($P(NVSDATA(.11),U,12))
"RTN","NVSPDS1",52,0)
 .S ^DPT(NVSDFN,.11)=NVSDATA(.11)
"RTN","NVSPDS1",53,0)
 ;
"RTN","NVSPDS1",54,0)
 ; change legal residence node...
"RTN","NVSPDS1",55,0)
 I NVSDATA(.111)'="" D
"RTN","NVSPDS1",56,0)
 .S $P(NVSDATA(.111),U,4)=$$CITY^NVSPDSU        
"RTN","NVSPDS1",57,0)
 .S $P(NVSDATA(.111),U,5)=+$$ST^NVSPDSU
"RTN","NVSPDS1",58,0)
 .I $P(NVSDATA(.111),U,6)'="" D
"RTN","NVSPDS1",59,0)
 ..S $P(NVSDATA(.111),U,6)=$$ZIP^NVSPDSU($P(NVSDATA(.111),U,6))
"RTN","NVSPDS1",60,0)
 .S $P(NVSDATA(.111),U,7)=$$CTY^NVSPDSU($P(NVSDATA(.111),U,5))
"RTN","NVSPDS1",61,0)
 .S ^DPT(NVSDFN,.111)=NVSDATA(.111)
"RTN","NVSPDS1",62,0)
 ;
"RTN","NVSPDS1",63,0)
 ; change prior address node...
"RTN","NVSPDS1",64,0)
 I NVSDATA(.12)'="" D
"RTN","NVSPDS1",65,0)
 .S $P(NVSDATA(.12),U,4)=$$CITY^NVSPDSU       
"RTN","NVSPDS1",66,0)
 .S $P(NVSDATA(.12),U,5)=+$$ST^NVSPDSU
"RTN","NVSPDS1",67,0)
 .I $P(NVSDATA(.12),U,6)'="" D
"RTN","NVSPDS1",68,0)
 ..S $P(NVSDATA(.12),U,6)=$$ZIP^NVSPDSU($P(NVSDATA(.12),U,6))       
"RTN","NVSPDS1",69,0)
 .I $P(NVSDATA(.12),U,7)'="" D
"RTN","NVSPDS1",70,0)
 ..;
"RTN","NVSPDS1",71,0)
 ..; up to now, NVSNCNTY=a number, this county field requires free text...
"RTN","NVSPDS1",72,0)
 ..S NVSNST=+$$ST^NVSPDSU
"RTN","NVSPDS1",73,0)
 ..S NVSNCNTY=+$$CTY^NVSPDSU(NVSNST)
"RTN","NVSPDS1",74,0)
 ..S NVSNCNTY=$P(^DIC(5,NVSNST,1,NVSNCNTY,0),U)
"RTN","NVSPDS1",75,0)
 ..I NVSNCNTY="" S NVSNCNTY="SOMECOUNTY"
"RTN","NVSPDS1",76,0)
 ..S $P(NVSDATA(.12),U,7)=NVSNCNTY
"RTN","NVSPDS1",77,0)
 ..K NVSNCNTY,NVSNST
"RTN","NVSPDS1",78,0)
 .S ^DPT(NVSDFN,.12)=NVSDATA(.12)
"RTN","NVSPDS1",79,0)
 ;
"RTN","NVSPDS1",80,0)
 ; change temporary address node...
"RTN","NVSPDS1",81,0)
 I NVSDATA(.121)'="" D
"RTN","NVSPDS1",82,0)
 .S $P(NVSDATA(.121),U,5)=$$CITY^NVSPDSU
"RTN","NVSPDS1",83,0)
 .S $P(NVSDATA(.121),U,6)=+$$ST^NVSPDSU
"RTN","NVSPDS1",84,0)
 .I $P(NVSDATA(.121),U,7)'="" D 
"RTN","NVSPDS1",85,0)
 ..S $P(NVSDATA(.121),U,7)=$$ZIP^NVSPDSU($P(NVSDATA(.121),U,7))
"RTN","NVSPDS1",86,0)
 .S $P(NVSDATA(.121),U,10)=$$PHONE^NVSPDSU
"RTN","NVSPDS1",87,0)
 .S $P(NVSDATA(.121),U,11)=$$CTY^NVSPDSU($P(NVSDATA(.121),U,6))
"RTN","NVSPDS1",88,0)
 .I $P(NVSDATA(.121),U,12)'="" D
"RTN","NVSPDS1",89,0)
 ..S $P(NVSDATA(.121),U,12)=$$ZIP^NVSPDSU($P(NVSDATA(.121),U,12))
"RTN","NVSPDS1",90,0)
 .S ^DPT(NVSDFN,.121)=NVSDATA(.121)
"RTN","NVSPDS1",91,0)
 ;
"RTN","NVSPDS1",92,0)
 ; change phone number(s) node...
"RTN","NVSPDS1",93,0)
 I NVSDATA(.13)'="" D
"RTN","NVSPDS1",94,0)
 .I $P(NVSDATA(.13),U,1)'="" S $P(NVSDATA(.13),U,1)=$$SCR^NVSPDSU($P(NVSDATA(.13),U,1))
"RTN","NVSPDS1",95,0)
 .I $P(NVSDATA(.13),U,2)'="" S $P(NVSDATA(.13),U,2)=$$SCR^NVSPDSU($P(NVSDATA(.13),U,2))
"RTN","NVSPDS1",96,0)
 .I $P(NVSDATA(.13),U,3)'="" S $P(NVSDATA(.13),U,3)=$$SCR^NVSPDSU($P(NVSDATA(.13),U,3))
"RTN","NVSPDS1",97,0)
 .I $P(NVSDATA(.13),U,4)'="" S $P(NVSDATA(.13),U,4)=$$SCR^NVSPDSU($P(NVSDATA(.13),U,4))
"RTN","NVSPDS1",98,0)
 .S ^DPT(NVSDFN,.13)=NVSDATA(.13)
"RTN","NVSPDS1",99,0)
 ;
"RTN","NVSPDS1",100,0)
TEMP ;
"RTN","NVSPDS1",101,0)
 ; change parents' names node...
"RTN","NVSPDS1",102,0)
 I NVSDATA(.24)'="" D
"RTN","NVSPDS1",103,0)
 .; father's name...
"RTN","NVSPDS1",104,0)
 .I $P(NVSDATA(.24),U)'="" S $P(NVSDATA(.24),U)=$$REVN^NVSPDSU($P(NVSDATA(.24),U))
"RTN","NVSPDS1",105,0)
 .; mother's name...
"RTN","NVSPDS1",106,0)
 .I $P(NVSDATA(.24),U,2)'="" S $P(NVSDATA(.24),U,2)=$$REVN^NVSPDSU($P(NVSDATA(.24),U,2))
"RTN","NVSPDS1",107,0)
 .; mother's maiden name...
"RTN","NVSPDS1",108,0)
 .I $P(NVSDATA(.24),U,3)'="" S $P(NVSDATA(.24),U,3)=$$REVN^NVSPDSU($P(NVSDATA(.24),U,3))
"RTN","NVSPDS1",109,0)
 .S ^DPT(NVSDFN,.24)=NVSDATA(.24)
"RTN","NVSPDS1",110,0)
 ;
"RTN","NVSPDS1",111,0)
 K NVSDATA,NVSX
"RTN","NVSPDS1",112,0)
 Q
"RTN","NVSPDS2")
0^31^B33660080
"RTN","NVSPDS2",1,0)
NVSPDS2 ;emciss/maw-scramble patient data (cont) ; 09/01/02
"RTN","NVSPDS2",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSPDS2",3,0)
 ;
"RTN","NVSPDS2",4,0)
 N NVSDATA
"RTN","NVSPDS2",5,0)
 ;
"RTN","NVSPDS2",6,0)
 ; note:  the variable NVSDFN is set in the main loop through ^DPT(...)
"RTN","NVSPDS2",7,0)
 ;        that begins in routine ^NVSPDS.
"RTN","NVSPDS2",8,0)
 I '$D(NVSDFN) Q
"RTN","NVSPDS2",9,0)
 ;
"RTN","NVSPDS2",10,0)
 ; scramble primary next of kin data...
"RTN","NVSPDS2",11,0)
 S NVSDATA=$G(^DPT(NVSDFN,.21))
"RTN","NVSPDS2",12,0)
 I NVSDATA'="" D
"RTN","NVSPDS2",13,0)
 .I $P(NVSDATA,U,1)'="" D PFEDIT^NVSPDSU(NVSDFN,".211",$$REVN^NVSPDSU($P(NVSDATA,U,1)))
"RTN","NVSPDS2",14,0)
 .I $P(NVSDATA,U,6)'="" D PFEDIT^NVSPDSU(NVSDFN,".216",$$CITY^NVSPDSU)
"RTN","NVSPDS2",15,0)
 .I $P(NVSDATA,U,7)'="" D PFEDIT^NVSPDSU(NVSDFN,".217",$P($$ST^NVSPDSU(),U,2))
"RTN","NVSPDS2",16,0)
 .I $P(NVSDATA,U,8)'="" D PFEDIT^NVSPDSU(NVSDFN,".218",$$SCR^NVSPDSU($P(NVSDATA,U,8)))
"RTN","NVSPDS2",17,0)
 .I $P(NVSDATA,U,9)'="" D PFEDIT^NVSPDSU(NVSDFN,".219",$$SCR^NVSPDSU($P(NVSDATA,U,9)))
"RTN","NVSPDS2",18,0)
 K NVSDATA
"RTN","NVSPDS2",19,0)
 ;
"RTN","NVSPDS2",20,0)
 ; scramble secondary next of kin data...
"RTN","NVSPDS2",21,0)
 S NVSDATA=$G(^DPT(NVSDFN,.211))
"RTN","NVSPDS2",22,0)
 I NVSDATA'="" D
"RTN","NVSPDS2",23,0)
 .I $P(NVSDATA,U,1)'="" D PFEDIT^NVSPDSU(NVSDFN,".2191",$$REVN^NVSPDSU($P(NVSDATA,U,1)))
"RTN","NVSPDS2",24,0)
 .I $P(NVSDATA,U,6)'="" D PFEDIT^NVSPDSU(NVSDFN,".2196",$$CITY^NVSPDSU)
"RTN","NVSPDS2",25,0)
 .I $P(NVSDATA,U,7)'="" D PFEDIT^NVSPDSU(NVSDFN,".2197",$P($$ST^NVSPDSU(),U,2))
"RTN","NVSPDS2",26,0)
 .I $P(NVSDATA,U,8)'="" D PFEDIT^NVSPDSU(NVSDFN,".2198",$$SCR^NVSPDSU($P(NVSDATA,U,8)))
"RTN","NVSPDS2",27,0)
 .I $P(NVSDATA,U,9)'="" D PFEDIT^NVSPDSU(NVSDFN,".2199",$$SCR^NVSPDSU($P(NVSDATA,U,9)))
"RTN","NVSPDS2",28,0)
 K NVSDATA
"RTN","NVSPDS2",29,0)
 ;
"RTN","NVSPDS2",30,0)
 ; hash up any zip+4 entries...
"RTN","NVSPDS2",31,0)
 S NVSDATA=$G(^DPT(NVSDFN,.22))
"RTN","NVSPDS2",32,0)
 I NVSDATA'="" D
"RTN","NVSPDS2",33,0)
 .F NVSX=1:1:7 D
"RTN","NVSPDS2",34,0)
 ..I $P(NVSDATA,U,NVSX)'="" D PFEDIT^NVSPDSU(NVSDFN,".220"_NVSX,$$SCR^NVSPDSU($P(NVSDATA,U,NVSX)))
"RTN","NVSPDS2",35,0)
 .K NVSX
"RTN","NVSPDS2",36,0)
 K NVSDATA
"RTN","NVSPDS2",37,0)
 ;
"RTN","NVSPDS2",38,0)
 ; scramble spouse employer data...
"RTN","NVSPDS2",39,0)
 S NVSDATA=$G(^DPT(NVSDFN,.25))
"RTN","NVSPDS2",40,0)
 I NVSDATA'="" D
"RTN","NVSPDS2",41,0)
 .I $P(NVSDATA,U,1)'="" D
"RTN","NVSPDS2",42,0)
 ..S NVSEMPN=$P("AB DICK^IBM^EATS CAFE^PENNY'S^IRON WORKS INC.^TRUCKING INC.^EAST MED. CENTER^CATERPILLAR^JOHN JONES & SON^SOUTH BANK^FUNPARK INC.^INTERWEST FARMERS^EPX CHEMICAL",U,$R(12)+1) 
"RTN","NVSPDS2",43,0)
 ..D PFEDIT^NVSPDSU(NVSDFN,".251",NVSEMPN)
"RTN","NVSPDS2",44,0)
 ..K NVSEMPN
"RTN","NVSPDS2",45,0)
 .I $P(NVSDATA,U,5)'="" D PFEDIT^NVSPDSU(NVSDFN,".255",$$CITY^NVSPDSU)
"RTN","NVSPDS2",46,0)
 .I $P(NVSDATA,U,6)'="" D PFEDIT^NVSPDSU(NVSDFN,".256",$P($$ST^NVSPDSU(),U,2))
"RTN","NVSPDS2",47,0)
 .I $P(NVSDATA,U,7)'="" D PFEDIT^NVSPDSU(NVSDFN,".257",$$SCR^NVSPDSU($P(NVSDATA,U,7)))
"RTN","NVSPDS2",48,0)
 .I $P(NVSDATA,U,8)'="" D PFEDIT^NVSPDSU(NVSDFN,".258",$$SCR^NVSPDSU($P(NVSDATA,U,8)))
"RTN","NVSPDS2",49,0)
 K NVSDATA
"RTN","NVSPDS2",50,0)
 ;
"RTN","NVSPDS2",51,0)
 ; scramble guardian data...
"RTN","NVSPDS2",52,0)
 S NVSDATA=$G(^DPT(NVSDFN,.29))
"RTN","NVSPDS2",53,0)
 I NVSDATA'="" D
"RTN","NVSPDS2",54,0)
 .I $P(NVSDATA,U,4)'="" D PFEDIT^NVSPDSU(NVSDFN,".2912",$$REVN^NVSPDSU($P(NVSDATA,U,1)))
"RTN","NVSPDS2",55,0)
 .I $P(NVSDATA,U,8)'="" D PFEDIT^NVSPDSU(NVSDFN,".2916",$$CITY^NVSPDSU)
"RTN","NVSPDS2",56,0)
 .I $P(NVSDATA,U,9)'="" D PFEDIT^NVSPDSU(NVSDFN,".2917",$P($$ST^NVSPDSU(),U,2))
"RTN","NVSPDS2",57,0)
 .I $P(NVSDATA,U,10)'="" D PFEDIT^NVSPDSU(NVSDFN,".2918",$$SCR^NVSPDSU($P(NVSDATA,U,8)))
"RTN","NVSPDS2",58,0)
 .I $P(NVSDATA,U,11)'="" D PFEDIT^NVSPDSU(NVSDFN,".2919",$$SCR^NVSPDSU($P(NVSDATA,U,9)))
"RTN","NVSPDS2",59,0)
 K NVSDATA
"RTN","NVSPDS2",60,0)
 ;
"RTN","NVSPDS2",61,0)
 ; scramble claim number...
"RTN","NVSPDS2",62,0)
 I $P($G(^DPT(NVSDFN,.31)),U,3)'="" S $P(^DPT(NVSDFN,.31),U,3)="SS"
"RTN","NVSPDS2",63,0)
 ;
"RTN","NVSPDS2",64,0)
 ; scramble employer data...
"RTN","NVSPDS2",65,0)
 S NVSDATA=$G(^DPT(NVSDFN,.311))
"RTN","NVSPDS2",66,0)
 I NVSDATA'="" D
"RTN","NVSPDS2",67,0)
 .I $P(NVSDATA,U,1)'="" D
"RTN","NVSPDS2",68,0)
 ..S NVSEMPN=$P("DELTA LINES^LEWIS & SON INC.^A&B AUTO^GENERAL MOTORS^ACME INSURANCE^SEARS^SECOND BANK^POP'S GROCERY^BOX CO. INC.^PAPER CO.",U,$R(9)+1)
"RTN","NVSPDS2",69,0)
 ..D PFEDIT^NVSPDSU(NVSDFN,".3111",NVSEMPN)
"RTN","NVSPDS2",70,0)
 ..K NVSEMPN
"RTN","NVSPDS2",71,0)
 .I $P(NVSDATA,U,6)'="" D PFEDIT^NVSPDSU(NVSDFN,".3116",$$CITY^NVSPDSU)
"RTN","NVSPDS2",72,0)
 .I $P(NVSDATA,U,7)'="" D PFEDIT^NVSPDSU(NVSDFN,".3117",$P($$ST^NVSPDSU(),U,2))
"RTN","NVSPDS2",73,0)
 .I $P(NVSDATA,U,8)'="" D PFEDIT^NVSPDSU(NVSDFN,".3118",$$SCR^NVSPDSU($P(NVSDATA,U,7)))
"RTN","NVSPDS2",74,0)
 .I $P(NVSDATA,U,9)'="" D PFEDIT^NVSPDSU(NVSDFN,".3119",$$SCR^NVSPDSU($P(NVSDATA,U,8)))
"RTN","NVSPDS2",75,0)
 K NVSDATA
"RTN","NVSPDS2",76,0)
 ;
"RTN","NVSPDS2",77,0)
 ; scramble insurance data...
"RTN","NVSPDS2",78,0)
 S NVSX=0
"RTN","NVSPDS2",79,0)
 F  S NVSX=$O(^DPT(NVSDFN,.312,NVSX)) Q:'NVSX  D
"RTN","NVSPDS2",80,0)
 .S NVSDATA=$G(^DPT(NVSDFN,.312,NVSX,0))
"RTN","NVSPDS2",81,0)
 .I $P(NVSDATA,U,2)="" Q
"RTN","NVSPDS2",82,0)
 .S $P(NVSDATA,U,2)=$$SCR^NVSPDSU($P(NVSDATA,U,2))
"RTN","NVSPDS2",83,0)
 .I $P(NVSDATA,U,9)'="" S $P(NVSDATA,U,9)=$$REVN^NVSPDSU($P(NVSDATA,U,9))
"RTN","NVSPDS2",84,0)
 .I $P(NVSDATA,U,10)'="" S $P(NVSDATA,U,10)=$$SCR^NVSPDSU($P(NVSDATA,U,10))
"RTN","NVSPDS2",85,0)
 .I $P(NVSDATA,U,11)'="" S $P(NVSDATA,U,11)="1234 AGENTS STREET"
"RTN","NVSPDS2",86,0)
 .I $P(NVSDATA,U,12)'="" S $P(NVSDATA,U,12)=$$CITY^NVSPDSU
"RTN","NVSPDS2",87,0)
 .I $P(NVSDATA,U,13)'="" S $P(NVSDATA,U,13)=$P($$ST^NVSPDSU(),U,2)
"RTN","NVSPDS2",88,0)
 .I $P(NVSDATA,U,14)'="" S $P(NVSDATA,U,14)=$$SCR^NVSPDSU($P(NVSDATA,U,14))
"RTN","NVSPDS2",89,0)
 .I $P(NVSDATA,U,15)'="" S $P(NVSDATA,U,15)=$$SCR^NVSPDSU($P(NVSDATA,U,15))
"RTN","NVSPDS2",90,0)
 .I $P(NVSDATA,U,17)'="" S $P(NVSDATA,U,17)=$P(^DPT(NVSDFN,0),U)
"RTN","NVSPDS2",91,0)
 .S ^DPT(NVSDFN,.312,NVSX,0)=NVSDATA
"RTN","NVSPDS2",92,0)
 .K NVSDATA
"RTN","NVSPDS2",93,0)
 .S NVSDATA=$G(^DPT(NVSDFN,.312,NVSX,2))
"RTN","NVSPDS2",94,0)
 .I $P(NVSDATA,U,2)'="" S $P(NVSDATA,U,2)="1234 EMPLOYER STREET"
"RTN","NVSPDS2",95,0)
 .I $P(NVSDATA,U,3)'="" S $P(NVSDATA,U,3)=""
"RTN","NVSPDS2",96,0)
 .I $P(NVSDATA,U,4)'="" S $P(NVSDATA,U,4)=""
"RTN","NVSPDS2",97,0)
 .I $P(NVSDATA,U,5)'="" S $P(NVSDATA,U,5)=$$CITY^NVSPDSU
"RTN","NVSPDS2",98,0)
 .I $P(NVSDATA,U,6)'="" S $P(NVSDATA,U,6)=$P($$ST^NVSPDSU(),U,2)
"RTN","NVSPDS2",99,0)
 .I $P(NVSDATA,U,7)'="" S $P(NVSDATA,U,7)=$$ZIP^NVSPDSU($P(NVSDATA,U,7))
"RTN","NVSPDS2",100,0)
 .I $P(NVSDATA,U,8)'="" S $P(NVSDATA,U,8)=$$SCR^NVSPDSU($P(NVSDATA,U,8))
"RTN","NVSPDS2",101,0)
 .I $P(NVSDATA,U,9)'="" S $P(NVSDATA,U,9)=$$REVN^NVSPDSU($P(NVSDATA,U,9))
"RTN","NVSPDS2",102,0)
 .S ^DPT(NVSDFN,.312,NVSX,2)=NVSDATA
"RTN","NVSPDS2",103,0)
 .K NVSDATA
"RTN","NVSPDS2",104,0)
 .S NVSDATA=$G(^DPT(NVSDFN,.312,NVSX,3))
"RTN","NVSPDS2",105,0)
 .I $P(NVSDATA,U,5)'="" S $P(NVSDATA,U,5)=$$SCR^NVSPDSU($P(NVSDATA,U,5))
"RTN","NVSPDS2",106,0)
 .I $P(NVSDATA,U,6)'="" S $P(NVSDATA,U,6)="1234 INSURED STREET"
"RTN","NVSPDS2",107,0)
 .I $P(NVSDATA,U,7)'="" S $P(NVSDATA,U,7)=""
"RTN","NVSPDS2",108,0)
 .I $P(NVSDATA,U,8)'="" S $P(NVSDATA,U,8)=$$CITY^NVSPDSU
"RTN","NVSPDS2",109,0)
 .I $P(NVSDATA,U,9)'="" S $P(NVSDATA,U,9)=$P($$ST^NVSPDSU(),U,2)
"RTN","NVSPDS2",110,0)
 .I $P(NVSDATA,U,10)'="" S $P(NVSDATA,U,10)=$$SCR^NVSPDSU($P(NVSDATA,U,10))
"RTN","NVSPDS2",111,0)
 .I $P(NVSDATA,U,11)'="" S $P(NVSDATA,U,11)=$$ZIP^NVSPDSU($P(NVSDATA,U,11))
"RTN","NVSPDS2",112,0)
 .S ^DPT(NVSDFN,.312,NVSX,3)=NVSDATA
"RTN","NVSPDS2",113,0)
 .K NVSDATA
"RTN","NVSPDS2",114,0)
 K NVSX
"RTN","NVSPDS2",115,0)
 ;
"RTN","NVSPDS2",116,0)
 ; scramble service-related data...
"RTN","NVSPDS2",117,0)
 S NVSDATA=$G(^DPT(NVSDFN,.32))
"RTN","NVSPDS2",118,0)
 I NVSDATA'="" D
"RTN","NVSPDS2",119,0)
 .I $P(NVSDATA,U,8)'="" S $P(NVSDATA,U,8)=$$SCR^NVSPDSU($P(NVSDATA,U,8))
"RTN","NVSPDS2",120,0)
 .I $P(NVSDATA,U,13)'="" S $P(NVSDATA,U,13)=$$SCR^NVSPDSU($P(NVSDATA,U,13))
"RTN","NVSPDS2",121,0)
 .I $P(NVSDATA,U,18)'="" S $P(NVSDATA,U,18)=$$SCR^NVSPDSU($P(NVSDATA,U,18))
"RTN","NVSPDS2",122,0)
 .S ^DPT(NVSDFN,.32)=NVSDATA
"RTN","NVSPDS2",123,0)
 K NVSDATA
"RTN","NVSPDS2",124,0)
 Q
"RTN","NVSPDS3")
0^32^B7793945
"RTN","NVSPDS3",1,0)
NVSPDS3 ;emciss/maw-scramble patient data (cont) ; 09/01/02
"RTN","NVSPDS3",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSPDS3",3,0)
 ;
"RTN","NVSPDS3",4,0)
 N NVSDATA
"RTN","NVSPDS3",5,0)
 ;
"RTN","NVSPDS3",6,0)
 ; note:  the variable NVSDFN is set in the main loop through ^DPT(...)
"RTN","NVSPDS3",7,0)
 ;        that begins in routine ^NVSPDS.
"RTN","NVSPDS3",8,0)
 I '$D(NVSDFN) Q
"RTN","NVSPDS3",9,0)
 ;        
"RTN","NVSPDS3",10,0)
 ; scramble agent orange registration number...
"RTN","NVSPDS3",11,0)
 S NVSDATA=$G(^DPT(NVSDFN,.321))
"RTN","NVSPDS3",12,0)
 I $P(NVSDATA,U,10)'="" D PFEDIT^NVSPDSU(NVSDFN,".3211",$$SCR^NVSPDSU($P(NVSDATA,U,10)))
"RTN","NVSPDS3",13,0)
 K NVSDATA
"RTN","NVSPDS3",14,0)
 ;
"RTN","NVSPDS3",15,0)
 ; scramble emergency contact data...
"RTN","NVSPDS3",16,0)
 S NVSDATA=$G(^DPT(NVSDFN,.33))
"RTN","NVSPDS3",17,0)
 I NVSDATA'="" D
"RTN","NVSPDS3",18,0)
 .I $P(NVSDATA,U,1)]"" D PFEDIT^NVSPDSU(NVSDFN,".331",$$REVN^NVSPDSU($P(NVSDATA,U,1)))
"RTN","NVSPDS3",19,0)
 .I $P(NVSDATA,U,6)]"" D PFEDIT^NVSPDSU(NVSDFN,".336",$$CITY^NVSPDSU)
"RTN","NVSPDS3",20,0)
 .I $P(NVSDATA,U,7)]"" D PFEDIT^NVSPDSU(NVSDFN,".337",$P($$ST^NVSPDSU(),U,2))
"RTN","NVSPDS3",21,0)
 .I $P(NVSDATA,U,8)]"" D PFEDIT^NVSPDSU(NVSDFN,".338",$$SCR^NVSPDSU($P(NVSDATA,U,8)))
"RTN","NVSPDS3",22,0)
 .I $P(NVSDATA,U,9)]"" D PFEDIT^NVSPDSU(NVSDFN,".339",$$SCR^NVSPDSU($P(NVSDATA,U,9)))
"RTN","NVSPDS3",23,0)
 .I $P(NVSDATA,U,11)]"" D PFEDIT^NVSPDSU(NVSDFN,".33011",$$SCR^NVSPDSU($P(NVSDATA,U,11)))
"RTN","NVSPDS3",24,0)
 K NVSDATA
"RTN","NVSPDS3",25,0)
 ;
"RTN","NVSPDS3",26,0)
 ; scramble secondary emergency contact data...
"RTN","NVSPDS3",27,0)
 S NVSDATA=$G(^DPT(NVSDFN,.331))
"RTN","NVSPDS3",28,0)
 I NVSDATA'="" D
"RTN","NVSPDS3",29,0)
 .I $P(NVSDATA,U,1)]"" D PFEDIT^NVSPDSU(NVSDFN,".3311",$$REVN^NVSPDSU($P(NVSDATA,U,1)))
"RTN","NVSPDS3",30,0)
 .I $P(NVSDATA,U,6)]"" D PFEDIT^NVSPDSU(NVSDFN,".3316",$$CITY^NVSPDSU)
"RTN","NVSPDS3",31,0)
 .I $P(NVSDATA,U,7)]"" D PFEDIT^NVSPDSU(NVSDFN,".3317",$P($$ST^NVSPDSU(),U,2))
"RTN","NVSPDS3",32,0)
 .I $P(NVSDATA,U,8)]"" D PFEDIT^NVSPDSU(NVSDFN,".3318",$$SCR^NVSPDSU($P(NVSDATA,U,8)))
"RTN","NVSPDS3",33,0)
 .I $P(NVSDATA,U,9)]"" D PFEDIT^NVSPDSU(NVSDFN,".3319",$$SCR^NVSPDSU($P(NVSDATA,U,9)))
"RTN","NVSPDS3",34,0)
 .I $P(NVSDATA,U,11)["" D PFEDIT^NVSPDSU(NVSDFN,".331011",$$SCR^NVSPDSU($P(NVSDATA,U,11)))
"RTN","NVSPDS3",35,0)
 K NVSDATA 
"RTN","NVSPDS3",36,0)
 ;
"RTN","NVSPDS3",37,0)
 ; scramble designee data...
"RTN","NVSPDS3",38,0)
 S NVSDATA=$G(^DPT(NVSDFN,.34))
"RTN","NVSPDS3",39,0)
 I NVSDATA'="" D
"RTN","NVSPDS3",40,0)
 .I $P(NVSDATA,U,1)]"" D PFEDIT^NVSPDSU(NVSDFN,".341",$$REVN^NVSPDSU($P(NVSDATA,U,1)))
"RTN","NVSPDS3",41,0)
 .I $P(NVSDATA,U,6)]"" D PFEDIT^NVSPDSU(NVSDFN,".346",$$CITY^NVSPDSU)
"RTN","NVSPDS3",42,0)
 .I $P(NVSDATA,U,7)]"" D PFEDIT^NVSPDSU(NVSDFN,".347",$P($$ST^NVSPDSU(),U,2))
"RTN","NVSPDS3",43,0)
 .I $P(NVSDATA,U,8)]"" D PFEDIT^NVSPDSU(NVSDFN,".348",$$SCR^NVSPDSU($P(NVSDATA,U,8)))
"RTN","NVSPDS3",44,0)
 .I $P(NVSDATA,U,9)]"" D PFEDIT^NVSPDSU(NVSDFN,".349",$$SCR^NVSPDSU($P(NVSDATA,U,9)))
"RTN","NVSPDS3",45,0)
 .I $P(NVSDATA,U,11)["" D PFEDIT^NVSPDSU(NVSDFN,".34011",$$SCR^NVSPDSU($P(NVSDATA,U,11)))
"RTN","NVSPDS3",46,0)
 K NVSDATA
"RTN","NVSPDS3",47,0)
 Q
"RTN","NVSPDS4")
0^33^B88363199
"RTN","NVSPDS4",1,0)
NVSPDS4 ;emciss/maw,lh-scramble data in files 200 and 450 ; 09/01/02
"RTN","NVSPDS4",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSPDS4",3,0)
 ;
"RTN","NVSPDS4",4,0)
 ; This routine is based on original work done by Lynn Howell at
"RTN","NVSPDS4",5,0)
 ; VAMC Bay Pines, Florida and incorporated into the National VistA
"RTN","NVSPDS4",6,0)
 ; Support Test Account Reset Utilities July 2001.
"RTN","NVSPDS4",7,0)
 ;
"RTN","NVSPDS4",8,0)
 ; Changes from the original routine include using NEW PERSON file as
"RTN","NVSPDS4",9,0)
 ; basis for the scramble -- ALL names in NEW PERSON are scrambled.  If
"RTN","NVSPDS4",10,0)
 ; NEW PERSON record has a pointer to PAID EMPLOYEE (450), then the record
"RTN","NVSPDS4",11,0)
 ; in 450 is also scrambled to match.  If, however, there is no pointer
"RTN","NVSPDS4",12,0)
 ; from 200 to 450, the last step is to run through all 450 records and
"RTN","NVSPDS4",13,0)
 ; scramble them even if there isn't a pointer relationship with 200.
"RTN","NVSPDS4",14,0)
 ; All records in both files get scrambled.
"RTN","NVSPDS4",15,0)
 ;
"RTN","NVSPDS4",16,0)
 N D450,D200,IEN,IEN200,NM450,SSN450,SSN
"RTN","NVSPDS4",17,0)
 I $G(IOF)'="" W @IOF
"RTN","NVSPDS4",18,0)
 W !,$$CJ^XLFSTR("ENTERPRISE MANAGEMENT CENTER :: TEST ACCOUNT RESET UTILITIES",80)
"RTN","NVSPDS4",19,0)
 W !,$$CJ^XLFSTR("NEW PERSON (file 200) and PAID EMPLOYEE (file 450) DATA SCRAMBLER",80)
"RTN","NVSPDS4",20,0)
 W !,$$CJ^XLFSTR("**WARNING**WARNING**WARNING**WARNING**",80)
"RTN","NVSPDS4",21,0)
 W !,$$CJ^XLFSTR("**DO NOT RUN THIS UTILITY IN YOUR PRODUCTION SYSTEM!!**",80)
"RTN","NVSPDS4",22,0)
 W !!,"This scrambling procedure is done in two parts.  First, NEW PERSON"
"RTN","NVSPDS4",23,0)
 W !,"records will be scrambled along with its associated record in PAID"
"RTN","NVSPDS4",24,0)
 W !,"EMPLOYEE if any.  A tracking node is kept in the PAID EMPLOYEE file"
"RTN","NVSPDS4",25,0)
 W !,"denoting records that have been scrambled.  After all records in NEW"
"RTN","NVSPDS4",26,0)
 W !,"PERSON have been scrambled, part two of this procedure looks for any"
"RTN","NVSPDS4",27,0)
 W !,"PAID EMPLOYEE records that have not been flagged.  The records will"
"RTN","NVSPDS4",28,0)
 W !,"then be scrambled separately."
"RTN","NVSPDS4",29,0)
 W !!,"CAUTION:  ONCE SCRAMBLED, THESE FILES CANNOT BE UN-SCRAMBLED.  USER"
"RTN","NVSPDS4",30,0)
 W !,"AND EMPLOYEE NAMES, SSNs, ETC. WILL BE COMPLETELY UNRECOGNIZABLE."
"RTN","NVSPDS4",31,0)
 W !,"BE ABSOLUTELY CERTAIN THAT YOU WANT TO DO THIS AND WHY YOU'RE DOING IT."
"RTN","NVSPDS4",32,0)
 W !!,"Additionally, if you plan to use the DISUSER option, it is likely"
"RTN","NVSPDS4",33,0)
 W !,"that you will NOT be able to decipher user names to exclude."
"RTN","NVSPDS4",34,0)
 ;
"RTN","NVSPDS4",35,0)
 W !!,"There are ",+$P(^VA(200,0),"^",4)," NEW PERSON records."
"RTN","NVSPDS4",36,0)
 W " and ",+$P(^PRSPC(0),"^",4)," PAID EMPLOYEE records."
"RTN","NVSPDS4",37,0)
 W !,"Log-ins should be disabled and no users on the system while this runs."
"RTN","NVSPDS4",38,0)
 S DIR(0)="YA"
"RTN","NVSPDS4",39,0)
 S DIR("A")="Are you ABSOLUTELY CERTAIN it is okay to continue? "
"RTN","NVSPDS4",40,0)
 S DIR("B")="NO"
"RTN","NVSPDS4",41,0)
 W ! D ^DIR K DIR
"RTN","NVSPDS4",42,0)
 I Y'=1 W "  ABORTED!" Q
"RTN","NVSPDS4",43,0)
 ;
"RTN","NVSPDS4",44,0)
RESTART ; in the event of an error or some other reason the scrambler is
"RTN","NVSPDS4",45,0)
 ; stopped, this module can be called to restart from the last record
"RTN","NVSPDS4",46,0)
 ; completed (stored in $P(^XTMP("NVSPDS4"),"^",1))...
"RTN","NVSPDS4",47,0)
 W !!,"NEW PERSON and PAID EMPLOYEE file scrambler starting "
"RTN","NVSPDS4",48,0)
 W $$FMTE^XLFDT($$NOW^XLFDT)
"RTN","NVSPDS4",49,0)
 I '$D(^XTMP("NVSPDS4",0)) D
"RTN","NVSPDS4",50,0)
 .S ^XTMP("NVSPDS4",0)="0^0"
"RTN","NVSPDS4",51,0)
 .S ^XTMP("NVSPDS4","SSN")="0^0^0"
"RTN","NVSPDS4",52,0)
 S IEN200=+$P(^XTMP("NVSPDS4",0),"^")
"RTN","NVSPDS4",53,0)
 F  S IEN200=$O(^VA(200,IEN200)) Q:'IEN200  D
"RTN","NVSPDS4",54,0)
 .; don't scramble POSTMASTER and SHARED,MAIL...
"RTN","NVSPDS4",55,0)
 .I IEN200'>.9 Q
"RTN","NVSPDS4",56,0)
 .W !!,"NEW PERSON record ",IEN200
"RTN","NVSPDS4",57,0)
 .I $G(^VA(200,IEN200,0))="" W !?2,"No zero-eth node...200 scramble aborted."
"RTN","NVSPDS4",58,0)
 .;
"RTN","NVSPDS4",59,0)
 .; scramble the New Person file record...
"RTN","NVSPDS4",60,0)
 .I $G(^VA(200,IEN200,0))'="" D S200(IEN200) W "...done"
"RTN","NVSPDS4",61,0)
 .S $P(^XTMP("NVSPDS4"),"^")=IEN200
"RTN","NVSPDS4",62,0)
 .;
"RTN","NVSPDS4",63,0)
 .; scramble this PERSON's PAID EMPLOYEE record (if it exists)...
"RTN","NVSPDS4",64,0)
 .S IEN450=+$G(^VA(200,IEN200,450))
"RTN","NVSPDS4",65,0)
 .I IEN450'>0 W !?2,"No PAID EMPLOYEE record." K IEN450 Q
"RTN","NVSPDS4",66,0)
 .W !?2,"PAID EMPLOYEE record ",IEN450
"RTN","NVSPDS4",67,0)
 .I $D(^PRSPC(IEN450,"ZZNVSPDS")) W !?2,"done" Q
"RTN","NVSPDS4",68,0)
 .D S450(IEN450,IEN200)
"RTN","NVSPDS4",69,0)
 .S ^PRSPC(IEN450,"ZZNVSPDS")=""
"RTN","NVSPDS4",70,0)
 .S $P(^XTMP("NVSPDS4"),"^",2)=IEN450
"RTN","NVSPDS4",71,0)
 .W !?2,"done"
"RTN","NVSPDS4",72,0)
 ;
"RTN","NVSPDS4",73,0)
 ; now, run through the records in file 450 and scramble any that didn't
"RTN","NVSPDS4",74,0)
 ; have a file 200 record...
"RTN","NVSPDS4",75,0)
 W !!,"Done with NEW PERSON file records.  Now, checking for any un-scrambled"
"RTN","NVSPDS4",76,0)
 W !,"records in PAID EMPLOYEE..."
"RTN","NVSPDS4",77,0)
 S IEN450=0
"RTN","NVSPDS4",78,0)
 F  S IEN450=$O(^PRSPC(IEN450)) Q:'IEN450  D
"RTN","NVSPDS4",79,0)
 .I $D(^PRSPC(IEN450,"ZZNVSPDS")) Q
"RTN","NVSPDS4",80,0)
 .W !!?2,"Record number ",IEN450
"RTN","NVSPDS4",81,0)
 .D S450(IEN450,0)
"RTN","NVSPDS4",82,0)
 .W !?2,"done"
"RTN","NVSPDS4",83,0)
 ;
"RTN","NVSPDS4",84,0)
 ; re-index...
"RTN","NVSPDS4",85,0)
 W !!,"Re-indexing file 200"
"RTN","NVSPDS4",86,0)
 K ^VA(200,"B")
"RTN","NVSPDS4",87,0)
 K ^VA(200,"BS")
"RTN","NVSPDS4",88,0)
 K ^VA(200,"BS5")
"RTN","NVSPDS4",89,0)
 K ^VA(200,"C")
"RTN","NVSPDS4",90,0)
 K ^VA(200,"D")
"RTN","NVSPDS4",91,0)
 K ^VA(200,"SSN")
"RTN","NVSPDS4",92,0)
 S X=0
"RTN","NVSPDS4",93,0)
 S IEN200=.9
"RTN","NVSPDS4",94,0)
 F  S IEN200=$O(^VA(200,IEN200)) Q:'IEN200  D
"RTN","NVSPDS4",95,0)
 .S X=X+1
"RTN","NVSPDS4",96,0)
 .I '(X#100) W "."
"RTN","NVSPDS4",97,0)
 .S NVSDATA(0)=$G(^VA(200,IEN200,0))
"RTN","NVSPDS4",98,0)
 .S NVSDATA(.1)=$G(^VA(200,IEN200,.1))
"RTN","NVSPDS4",99,0)
 .S NVSDATA(1)=$G(^VA(200,IEN200,1))
"RTN","NVSPDS4",100,0)
 .S NAME200=$P(NVSDATA(0),"^")
"RTN","NVSPDS4",101,0)
 .S SSN200=$P(NVSDATA(1),"^",9)
"RTN","NVSPDS4",102,0)
 .S INIT200=$P(NVSDATA(0),"^",2)
"RTN","NVSPDS4",103,0)
 .S NICK200=$P(NVSDATA(.1),"^",4)
"RTN","NVSPDS4",104,0)
 .I NAME200'="" D
"RTN","NVSPDS4",105,0)
 ..S ^VA(200,"B",NAME200,IEN200)=""
"RTN","NVSPDS4",106,0)
 .I SSN200'="" D
"RTN","NVSPDS4",107,0)
 ..S ^VA(200,"BS",$E(SSN200,1,4),IEN200)=""
"RTN","NVSPDS4",108,0)
 ..S ^VA(200,"BS5",($E(NAME200)_$E(SSN200,6,9)),IEN200)=""
"RTN","NVSPDS4",109,0)
 ..S ^VA(200,"SSN",SSN200,IEN200)=""
"RTN","NVSPDS4",110,0)
 .I INIT200'="" D
"RTN","NVSPDS4",111,0)
 ..S ^VA(200,"C",INIT200,IEN200)=""
"RTN","NVSPDS4",112,0)
 .I NICK200'="" D
"RTN","NVSPDS4",113,0)
 ..S ^VA(200,"D",NICK200,IEN200)=""
"RTN","NVSPDS4",114,0)
 .K INIT200,NAME200,NICK200,NVSDATA,SSN200
"RTN","NVSPDS4",115,0)
 K IEN200
"RTN","NVSPDS4",116,0)
 W "done."
"RTN","NVSPDS4",117,0)
 ;
"RTN","NVSPDS4",118,0)
 ;
"RTN","NVSPDS4",119,0)
 W !!,"Re-indexing file 450..."
"RTN","NVSPDS4",120,0)
 S X="ATL"
"RTN","NVSPDS4",121,0)
 F  S X=$O(^PRSPC(X)) Q:X=""!($E(X,1,3)'="ATL")  K ^PRSPC(X)
"RTN","NVSPDS4",122,0)
 K ^PRSPC("B")
"RTN","NVSPDS4",123,0)
 K ^PRSPC("BS")
"RTN","NVSPDS4",124,0)
 K ^PRSPC("BS1")
"RTN","NVSPDS4",125,0)
 K ^PRSPC("SSN")
"RTN","NVSPDS4",126,0)
 S (IEN450,X)=0
"RTN","NVSPDS4",127,0)
 F  S IEN450=$O(^PRSPC(IEN450)) Q:'IEN450  D
"RTN","NVSPDS4",128,0)
 .S X=X+1
"RTN","NVSPDS4",129,0)
 .I '(X#100) W "."
"RTN","NVSPDS4",130,0)
 .S NAME450=$P($G(^PRSPC(IEN450,0)),"^")
"RTN","NVSPDS4",131,0)
 .S ATL450=$P($G(^PRSPC(IEN450,0)),"^",8)
"RTN","NVSPDS4",132,0)
 .S SSN450=$P($G(^PRSPC(IEN450,0)),"^",9)
"RTN","NVSPDS4",133,0)
 .I NAME450'="" D
"RTN","NVSPDS4",134,0)
 ..S ^PRSPC("B",NAME450,IEN450)=""
"RTN","NVSPDS4",135,0)
 .I SSN450'="" D
"RTN","NVSPDS4",136,0)
 ..S ^PRSPC("BS",($E(NAME450)_$E(SSN450,6,9)),IEN450)=""
"RTN","NVSPDS4",137,0)
 ..S ^PRSPC("BS1",($E(NAME450)_$E(SSN450,6,9)),IEN450)=""
"RTN","NVSPDS4",138,0)
 ..S ^PRSPC("SSN",SSN450,IEN450)=""
"RTN","NVSPDS4",139,0)
 .I ATL450'="" D
"RTN","NVSPDS4",140,0)
 ..S ^PRSPC("ATL"_ATL450,NAME450,IEN450)=""
"RTN","NVSPDS4",141,0)
 K ATL450,IEN450,NAME450,SSN450
"RTN","NVSPDS4",142,0)
 W "done."
"RTN","NVSPDS4",143,0)
 ;
"RTN","NVSPDS4",144,0)
 ; finished...
"RTN","NVSPDS4",145,0)
 W !!,"NEW PERSON and PAID EMPLOYEE file scramblers completed "
"RTN","NVSPDS4",146,0)
 W $$FMTE^XLFDT($$NOW^XLFDT)
"RTN","NVSPDS4",147,0)
 S DIR(0)="YA"
"RTN","NVSPDS4",148,0)
 S DIR("A")="Okay to delete the tracking global ^XTMP(""NVSPDS4"")? "
"RTN","NVSPDS4",149,0)
 S DIR("B")="YES"
"RTN","NVSPDS4",150,0)
 S DIR("?")="Unless you have a reason to keep it, answer YES to delete it."
"RTN","NVSPDS4",151,0)
 W ! D ^DIR K DIR
"RTN","NVSPDS4",152,0)
 I Y=1 D
"RTN","NVSPDS4",153,0)
 .W !!,"Okay...cleaning up...a moment please..."
"RTN","NVSPDS4",154,0)
 .S IEN=0
"RTN","NVSPDS4",155,0)
 .F  S IEN=$O(^PRSPC(IEN)) Q:'IEN  K ^PRSPC(IEN,"ZZNVSPDS")
"RTN","NVSPDS4",156,0)
 .K ^XTMP("NVSPDS4") W "done."
"RTN","NVSPDS4",157,0)
 E  W !,"NO clean up done -- tracking global still defined."
"RTN","NVSPDS4",158,0)
 Q
"RTN","NVSPDS4",159,0)
 ;
"RTN","NVSPDS4",160,0)
S200(IEN)       ; scramble NEW PERSON file record...
"RTN","NVSPDS4",161,0)
 ; IEN = record number in file 200 to be scrambled
"RTN","NVSPDS4",162,0)
 N D200,I,IEN20,INIT200,NAME200,NICK200,SSN200
"RTN","NVSPDS4",163,0)
 S D200(0)=^VA(200,IEN,0)
"RTN","NVSPDS4",164,0)
 S NAME200=$P(D200(0),"^")
"RTN","NVSPDS4",165,0)
 ; get record number in NAME COMPONENT file...
"RTN","NVSPDS4",166,0)
 S IEN20=+$O(^VA(20,"C",NAME200,0))
"RTN","NVSPDS4",167,0)
 S INIT200=$P(D200(0),"^",2)
"RTN","NVSPDS4",168,0)
 S NICK200=$P($G(^VA(200,IEN,.1)),"^",4)
"RTN","NVSPDS4",169,0)
 S SSN200=$P($G(^VA(200,IEN,1)),"^",9)
"RTN","NVSPDS4",170,0)
 W !?4,"Name: ",NAME200
"RTN","NVSPDS4",171,0)
 S NAME200=$$REVN^NVSPDSU(NAME200)
"RTN","NVSPDS4",172,0)
 S INIT200=$$REVN^NVSPDSU(INIT200)
"RTN","NVSPDS4",173,0)
 S NICK200=$$REVN^NVSPDSU(NICK200)
"RTN","NVSPDS4",174,0)
 W " scrambled to ",NAME200
"RTN","NVSPDS4",175,0)
 S $P(D200(0),"^")=NAME200
"RTN","NVSPDS4",176,0)
 S $P(D200(0),"^",2)=INIT200
"RTN","NVSPDS4",177,0)
 S ^VA(200,IEN,0)=D200(0)
"RTN","NVSPDS4",178,0)
 S $P(^VA(200,IEN,.1),"^",4)=NICK200
"RTN","NVSPDS4",179,0)
 ;
"RTN","NVSPDS4",180,0)
 ; update NAME COMPONENT file with scrambled name components...
"RTN","NVSPDS4",181,0)
 I +IEN20 D
"RTN","NVSPDS4",182,0)
 .S NAME20X=$TR(NAME200,",","^")
"RTN","NVSPDS4",183,0)
 .S NAME20=$TR(NAME20X," ","^")
"RTN","NVSPDS4",184,0)
 .S NAMLAST=$P(NAME20,"^")
"RTN","NVSPDS4",185,0)
 .S NAMFIRST=$P(NAME20,"^",2)
"RTN","NVSPDS4",186,0)
 .S NAMMIDL=$P(NAME20,"^",3)
"RTN","NVSPDS4",187,0)
 .S DIE="^VA(20,"
"RTN","NVSPDS4",188,0)
 .S DA=IEN20
"RTN","NVSPDS4",189,0)
 .S DR="1///^S X=NAMLAST"
"RTN","NVSPDS4",190,0)
 .I NAMFIRST'="" S DR=DR_";2///^S X=NAMFIRST"
"RTN","NVSPDS4",191,0)
 .I NAMMIDL'="" S DR=DR_";3///^S X=NAMMIDL"
"RTN","NVSPDS4",192,0)
 .D ^DIE
"RTN","NVSPDS4",193,0)
 .K DA,DIE,DR,NAMFIRST,NAMLAST,NAMMIDL
"RTN","NVSPDS4",194,0)
 ;
"RTN","NVSPDS4",195,0)
 ; electronic signature block...
"RTN","NVSPDS4",196,0)
 S ESIGBLK=$P($G(^VA(200,IEN,20)),"^",2)
"RTN","NVSPDS4",197,0)
 I ESIGBLK'="" D
"RTN","NVSPDS4",198,0)
 .S ESIGBLK=$$REVN^NVSPDSU(ESIGBLK)
"RTN","NVSPDS4",199,0)
 .S $P(^VA(200,IEN,20),"^",2)=ESIGBLK
"RTN","NVSPDS4",200,0)
 K ESIGBLK
"RTN","NVSPDS4",201,0)
 ;
"RTN","NVSPDS4",202,0)
 ; ssn...
"RTN","NVSPDS4",203,0)
 S SSN200X=0
"RTN","NVSPDS4",204,0)
 W !?4,"SSN: "
"RTN","NVSPDS4",205,0)
 D SSN(.SSN200)
"RTN","NVSPDS4",206,0)
 I SSN200'="COMPLETE" D
"RTN","NVSPDS4",207,0)
 .S $P(^VA(200,IEN,1),"^",9)=SSN200
"RTN","NVSPDS4",208,0)
 .S SSN200X=1
"RTN","NVSPDS4",209,0)
 I SSN200="COMPLETE" S SSN200=$P(^VA(200,IEN,1),"^",9)
"RTN","NVSPDS4",210,0)
 W SSN200
"RTN","NVSPDS4",211,0)
 I SSN200X'=1 W "*NOT SCRAMBLED*",!?4
"RTN","NVSPDS4",212,0)
 ;
"RTN","NVSPDS4",213,0)
 ; address...
"RTN","NVSPDS4",214,0)
 W "...address"
"RTN","NVSPDS4",215,0)
 S D200(.11)=$G(^VA(200,IEN,.11))
"RTN","NVSPDS4",216,0)
 F I=1:1:4 D
"RTN","NVSPDS4",217,0)
 .I $P(D200(.11),"^",I)="" Q
"RTN","NVSPDS4",218,0)
 .S $P(D200(.11),"^",I)=$$REVN^NVSPDSU($P(D200(.11),"^",I))
"RTN","NVSPDS4",219,0)
 S $P(D200(.11),"^",6)="00001"
"RTN","NVSPDS4",220,0)
 S ^VA(200,IEN,.11)=D200(.11)
"RTN","NVSPDS4",221,0)
 ;
"RTN","NVSPDS4",222,0)
 ; temp address...
"RTN","NVSPDS4",223,0)
 W "...temp address"
"RTN","NVSPDS4",224,0)
 S D200(.121)=$G(^VA(200,IEN,.121))
"RTN","NVSPDS4",225,0)
 F I=1:1:4 D
"RTN","NVSPDS4",226,0)
 .I $P(D200(.121),"^",I)="" Q
"RTN","NVSPDS4",227,0)
 .S $P(D200(.121),"^",I)=$$REVN^NVSPDSU($P(D200(.121),"^",I))
"RTN","NVSPDS4",228,0)
 S $P(D200(.121),"^",6)="00001"
"RTN","NVSPDS4",229,0)
 S ^VA(200,IEN,.121)=D200(.121)
"RTN","NVSPDS4",230,0)
 ;
"RTN","NVSPDS4",231,0)
 ; delete phone numbers...
"RTN","NVSPDS4",232,0)
 W "...phone #s"
"RTN","NVSPDS4",233,0)
 S ^VA(200,IEN,.13)="^^^^^^^^"
"RTN","NVSPDS4",234,0)
 ;
"RTN","NVSPDS4",235,0)
 ; delete email address...
"RTN","NVSPDS4",236,0)
 W "...email address"
"RTN","NVSPDS4",237,0)
 S ^VA(200,IEN,.15)="^"
"RTN","NVSPDS4",238,0)
 ;
"RTN","NVSPDS4",239,0)
 ; delete alias(es)...
"RTN","NVSPDS4",240,0)
 W !?4,"...aliases"
"RTN","NVSPDS4",241,0)
 K ^VA(200,IEN,3)
"RTN","NVSPDS4",242,0)
 S ^VA(200,IEN,3,0)="^200.04^^"
"RTN","NVSPDS4",243,0)
 ;
"RTN","NVSPDS4",244,0)
 ; delete network address...
"RTN","NVSPDS4",245,0)
 W "...network address"
"RTN","NVSPDS4",246,0)
 K ^VA(200,IEN,500)
"RTN","NVSPDS4",247,0)
 S ^VA(200,IEN,500,0)="^200.005A^^"
"RTN","NVSPDS4",248,0)
 Q
"RTN","NVSPDS4",249,0)
 ;
"RTN","NVSPDS4",250,0)
S450(IEN450,IEN200)     ; scramble PAID EMPLOYEE file record...
"RTN","NVSPDS4",251,0)
 ; IEN450 = record number in file 450 to be scrambled
"RTN","NVSPDS4",252,0)
 ; IEN200 = associated file 200 record (name, ssn, etc. will be used from 200)
"RTN","NVSPDS4",253,0)
 ;          if IEN200 is passed = 0, then that means there is no file 200
"RTN","NVSPDS4",254,0)
 ;          entry for this PAID EMPLOYEE record.  this module will scramble
"RTN","NVSPDS4",255,0)
 ;          the file 450 data anyway...
"RTN","NVSPDS4",256,0)
 N D450,I,NAME200,NAME450,NICK200,SSN200,SSN450
"RTN","NVSPDS4",257,0)
 S D450(0)=$G(^PRSPC(IEN450,0))
"RTN","NVSPDS4",258,0)
 I D450(0)="" Q
"RTN","NVSPDS4",259,0)
 S NAME450=$P(D450(0),"^")
"RTN","NVSPDS4",260,0)
 W !?4,"Name: ",NAME450
"RTN","NVSPDS4",261,0)
 S SSN450=$P(D450(0),"^",9)
"RTN","NVSPDS4",262,0)
 ; if a file 200 record exists, get name and ssn...
"RTN","NVSPDS4",263,0)
 I IEN200>0 D
"RTN","NVSPDS4",264,0)
 .S NAME200=$P(^VA(200,IEN200,0),"^")
"RTN","NVSPDS4",265,0)
 .S SSN200=$P(^VA(200,IEN200,1),"^",9)
"RTN","NVSPDS4",266,0)
 ; if a file 200 record does not exist, scramble the 450 name and ssn...
"RTN","NVSPDS4",267,0)
 I IEN200=0 D
"RTN","NVSPDS4",268,0)
 .S NAME200=$$REVN^NVSPDSU(NAME450)
"RTN","NVSPDS4",269,0)
 .D SSN(.SSN200)
"RTN","NVSPDS4",270,0)
 .I SSN200="COMPLETE" S SSN200=SSN450
"RTN","NVSPDS4",271,0)
 W " scrambled to ",NAME200
"RTN","NVSPDS4",272,0)
 W !?4,"SSN ",SSN200
"RTN","NVSPDS4",273,0)
 S $P(^PRSPC(IEN450,0),"^")=NAME200
"RTN","NVSPDS4",274,0)
 S $P(^PRSPC(IEN450,0),"^",9)=SSN200
"RTN","NVSPDS4",275,0)
 ; clean up address node while here
"RTN","NVSPDS4",276,0)
 W "...address"
"RTN","NVSPDS4",277,0)
 S D450("ADD")=$G(^PRSPC(IEN450,"ADD"))
"RTN","NVSPDS4",278,0)
 I D450("ADD")="" Q
"RTN","NVSPDS4",279,0)
 ; delete check mailing address...
"RTN","NVSPDS4",280,0)
 W "...check mailing address" 
"RTN","NVSPDS4",281,0)
 F I=1:1:5 S $P(D450("ADD"),"^",I)=""
"RTN","NVSPDS4",282,0)
 ; scramble current address node...
"RTN","NVSPDS4",283,0)
 W "...current address"
"RTN","NVSPDS4",284,0)
 S $P(D450("ADD"),"^",8)=$$CITY^NVSPDSU
"RTN","NVSPDS4",285,0)
 S $P(D450("ADD"),"^",6)=+$$ST^NVSPDSU
"RTN","NVSPDS4",286,0)
 S $P(D450("ADD"),"^",10)=$$ZIP^NVSPDSU($P(D450("ADD"),"^",10))
"RTN","NVSPDS4",287,0)
 S ^PRSPC(IEN450,"ADD")=D450("ADD")
"RTN","NVSPDS4",288,0)
 S ^PRSPC(IEN450,"ZZNVSPDS")=""
"RTN","NVSPDS4",289,0)
 Q
"RTN","NVSPDS4",290,0)
 ;
"RTN","NVSPDS4",291,0)
SSN(X) ; create an SSN...
"RTN","NVSPDS4",292,0)
 ; X is passed by reference = "" and returned with the created SSN
"RTN","NVSPDS4",293,0)
 ; note:  uses the node ^XTMP("NVSPDS4","SSN" to maintain last created SSN used
"RTN","NVSPDS4",294,0)
 N F3,I,L4,M2,XSSN
"RTN","NVSPDS4",295,0)
 I $G(^XTMP("NVSPDS4","SSN"))="" S ^XTMP("NVSPDS4","SSN")="0^0^0"
"RTN","NVSPDS4",296,0)
 S XSSN=""
"RTN","NVSPDS4",297,0)
 F I=1:1:3 S XSSN=XSSN_$P(^XTMP("NVSPDS4","SSN"),"^",I)
"RTN","NVSPDS4",298,0)
 I XSSN=999999999 S X="COMPLETE" Q
"RTN","NVSPDS4",299,0)
 ;
"RTN","NVSPDS4",300,0)
 S $P(^XTMP("NVSPDS4","SSN"),"^",3)=$P(^XTMP("NVSPDS4","SSN"),"^",3)+1
"RTN","NVSPDS4",301,0)
 I $P(^XTMP("NVSPDS4","SSN"),"^",3)>9999 D
"RTN","NVSPDS4",302,0)
 .S $P(^XTMP("NVSPDS4","SSN"),"^",3)=1
"RTN","NVSPDS4",303,0)
 .S $P(^XTMP("NVSPDS4","SSN"),"^",2)=$P(^XTMP("NVSPDS4","SSN"),"^",2)+1
"RTN","NVSPDS4",304,0)
 .I $P(^XTMP("NVSPDS4","SSN"),"^",2)>99 D
"RTN","NVSPDS4",305,0)
 ..S $P(^XTMP("NVSPDS4","SSN"),"^",2)=1
"RTN","NVSPDS4",306,0)
 ..S $P(^XTMP("NVSPDS4","SSN"),"^")=$P(^XTMP("NVSPDS4","SSN"),"^")+1
"RTN","NVSPDS4",307,0)
 ;
"RTN","NVSPDS4",308,0)
 S L4=$P(^XTMP("NVSPDS4","SSN"),"^",3)
"RTN","NVSPDS4",309,0)
 I $L(L4)<4 D
"RTN","NVSPDS4",310,0)
 .F I=1:1 Q:$L(L4)=4  S L4="0"_L4
"RTN","NVSPDS4",311,0)
 S M2=$P(^XTMP("NVSPDS4","SSN"),"^",2)
"RTN","NVSPDS4",312,0)
 I $L(M2)'=2 S M2="0"_M2
"RTN","NVSPDS4",313,0)
 S F3=$P(^XTMP("NVSPDS4","SSN"),"^")
"RTN","NVSPDS4",314,0)
 I $L(F3)<3 D
"RTN","NVSPDS4",315,0)
 .F I=1:1 Q:$L(F3)=3  S F3="0"_F3
"RTN","NVSPDS4",316,0)
 S X=F3_M2_L4
"RTN","NVSPDS4",317,0)
 Q
"RTN","NVSPDS4",318,0)
 
"RTN","NVSPDS5")
0^59^B6971221
"RTN","NVSPDS5",1,0)
NVSPDS5 ;emciss/maw-scramble patient SSNs ; 09/01/02
"RTN","NVSPDS5",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSPDS5",3,0)
 ;
"RTN","NVSPDS5",4,0)
 ; New SSN scrambling algorithm.  Uses a base prefix of
"RTN","NVSPDS5",5,0)
 ; 001-01.  Loops through the existing last-4 SSN cross
"RTN","NVSPDS5",6,0)
 ; reference (^DPT("BS")) and simply increments the base
"RTN","NVSPDS5",7,0)
 ; prefix as required for the number of records with the
"RTN","NVSPDS5",8,0)
 ; same last-4 SSN.  For example, 3 patients that have
"RTN","NVSPDS5",9,0)
 ; the same last-4 SSN of 1234:
"RTN","NVSPDS5",10,0)
 ; 
"RTN","NVSPDS5",11,0)
 ;       ^DPT("BS",1234,1)=""    SSN=***********
"RTN","NVSPDS5",12,0)
 ;       ^DPT("BS",1234,2)=""    SSN=***********
"RTN","NVSPDS5",13,0)
 ;       ^DPT("BS",1234,3)=""    SSN=***********
"RTN","NVSPDS5",14,0)
 ; 
"RTN","NVSPDS5",15,0)
 ; This routine would start with the base prefix of
"RTN","NVSPDS5",16,0)
 ; 101-01.  The "01" portion is incremented for each
"RTN","NVSPDS5",17,0)
 ; record, so the resulting scrambled SSNs would be:
"RTN","NVSPDS5",18,0)
 ; 
"RTN","NVSPDS5",19,0)
 ;       ^DPT("BS",1234,1)=""    SSN=***********
"RTN","NVSPDS5",20,0)
 ;       ^DPT("BS",1234,2)=""    SSN=***********
"RTN","NVSPDS5",21,0)
 ;       ^DPT("BS",1234,3)=""    SSN=***********
"RTN","NVSPDS5",22,0)
 ;
"RTN","NVSPDS5",23,0)
 I +$G(NVSIDVT)=0 D INIT^NVSPDSU1
"RTN","NVSPDS5",24,0)
 ;
"RTN","NVSPDS5",25,0)
 W !!,"Deleting ^DPT(""SSN"",...)"
"RTN","NVSPDS5",26,0)
 K ^DPT("SSN")
"RTN","NVSPDS5",27,0)
 W "done."
"RTN","NVSPDS5",28,0)
 W !!,"Scrambling and re-indexing"
"RTN","NVSPDS5",29,0)
 ;
"RTN","NVSPDS5",30,0)
 S (NVSCOUNT,NVSL4)=0
"RTN","NVSPDS5",31,0)
 F  S NVSL4=$O(^DPT("BS",NVSL4)) Q:'NVSL4  D
"RTN","NVSPDS5",32,0)
 .S NVSCOUNT=NVSCOUNT+1
"RTN","NVSPDS5",33,0)
 .D UPDATE^NVSPDSU1(NVSCOUNT)
"RTN","NVSPDS5",34,0)
 .S NVSBASE="101^01"
"RTN","NVSPDS5",35,0)
 .S NVSDFN=0
"RTN","NVSPDS5",36,0)
 .F  S NVSDFN=$O(^DPT("BS",NVSL4,NVSDFN)) Q:'NVSDFN  D
"RTN","NVSPDS5",37,0)
 ..S NVSXS1=$P(NVSBASE,"^")
"RTN","NVSPDS5",38,0)
 ..S NVSXS2=$P(NVSBASE,"^",2)
"RTN","NVSPDS5",39,0)
 ..S NVSNSSN=NVSXS1_NVSXS2_NVSL4
"RTN","NVSPDS5",40,0)
 ..;
"RTN","NVSPDS5",41,0)
 ..; update SSN data...
"RTN","NVSPDS5",42,0)
 ..S $P(^DPT(NVSDFN,0),"^",9)=NVSNSSN
"RTN","NVSPDS5",43,0)
 ..S ^DPT("SSN",NVSNSSN,NVSDFN)=""
"RTN","NVSPDS5",44,0)
 ..S NVSESSN=NVSNSSN
"RTN","NVSPDS5",45,0)
 ..; set PRIMARY LONG ID field (#.363) and PRIMARY SHORT ID field (#.364)
"RTN","NVSPDS5",46,0)
 ..; to SSN...
"RTN","NVSPDS5",47,0)
 ..I $D(^DPT(NVSDFN,.36)) D
"RTN","NVSPDS5",48,0)
 ...S $P(^DPT(NVSDFN,.36),U,3)=$$SSND^NVSPDSU(NVSESSN)
"RTN","NVSPDS5",49,0)
 ...S $P(^DPT(NVSDFN,.36),U,4)=$$SSNS^NVSPDSU(NVSESSN)
"RTN","NVSPDS5",50,0)
 ..; in the ELIGIBILITY field (2.0361) multiple, set SSN into fields
"RTN","NVSPDS5",51,0)
 ..; LONG ID (#.03) and SHORT ID (#.04)...
"RTN","NVSPDS5",52,0)
 ..S NVSX=0
"RTN","NVSPDS5",53,0)
 ..F  S NVSX=$O(^DPT(NVSDFN,"E",NVSX)) Q:'NVSX  D
"RTN","NVSPDS5",54,0)
 ...S NVSXDATA=$G(^DPT(NVSDFN,"E",NVSX,0))
"RTN","NVSPDS5",55,0)
 ...I NVSXDATA="" K NVSXDATA Q
"RTN","NVSPDS5",56,0)
 ...S $P(NVSXDATA,"^",3)=$$SSND^NVSPDSU(NVSESSN)
"RTN","NVSPDS5",57,0)
 ...S $P(NVSXDATA,"^",4)=$$SSNS^NVSPDSU(NVSESSN)
"RTN","NVSPDS5",58,0)
 ...S ^DPT(NVSDFN,"E",NVSX,0)=NVSXDATA
"RTN","NVSPDS5",59,0)
 ...K NVSXDATA
"RTN","NVSPDS5",60,0)
 ..K NVSESSN,NVSNSSN,NVSX,NVSXDATA
"RTN","NVSPDS5",61,0)
 ..;
"RTN","NVSPDS5",62,0)
 ..; increment NVSBASE...
"RTN","NVSPDS5",63,0)
 ..S NVSXS2=NVSXS2+1
"RTN","NVSPDS5",64,0)
 ..I NVSXS2<10 S NVSXS2="0"_NVSXS2
"RTN","NVSPDS5",65,0)
 ..I NVSXS2>99 D
"RTN","NVSPDS5",66,0)
 ...S NVSXS1X=NVSXS1+1
"RTN","NVSPDS5",67,0)
 ...I NVSXS1X<10 S NVSXS1="10"_NVSXS1X
"RTN","NVSPDS5",68,0)
 ...I NVSXS1X>10&(NVSXS1X<100) S NVSXS1="1"_NVSXS1X
"RTN","NVSPDS5",69,0)
 ...S NVSXS2="01"
"RTN","NVSPDS5",70,0)
 ..S $P(NVSBASE,"^")=NVSXS1
"RTN","NVSPDS5",71,0)
 ..S $P(NVSBASE,"^",2)=NVSXS2
"RTN","NVSPDS5",72,0)
 ..K NVSXS1,NVSXS1X,NVSXS2
"RTN","NVSPDS5",73,0)
 K NVSBASE,NVSCOUNT,NVSDFN
"RTN","NVSPDS5",74,0)
 Q
"RTN","NVSPDS6")
0^58^B29870414
"RTN","NVSPDS6",1,0)
NVSPDS6 ;emc/maw-set DISUSER flag on selected New Person file records ;09/01/02
"RTN","NVSPDS6",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSPDS6",3,0)
 ;
"RTN","NVSPDS6",4,0)
 K ^TMP("NVSPDS6",$J)
"RTN","NVSPDS6",5,0)
 S ^TMP("NVSPDS6",$J,.5)=""
"RTN","NVSPDS6",6,0)
 S ^TMP("NVSPDS6",$J,"B","POSTMASTER")=.5
"RTN","NVSPDS6",7,0)
 I $G(IOF)'="" W @IOF
"RTN","NVSPDS6",8,0)
 W !!,"Set DISUSER Flag on New Person Records"
"RTN","NVSPDS6",9,0)
 W !!,"Note:  setting this flag will DISABLE access for"
"RTN","NVSPDS6",10,0)
 W !,"all selected users.  To re-enable access, simply"
"RTN","NVSPDS6",11,0)
 W !,"use File Manager to edit field 7 of the New Person"
"RTN","NVSPDS6",12,0)
 W !,"file (#200) and remove the flag."
"RTN","NVSPDS6",13,0)
 W !!,"POSTMASTER's ACCOUNT WILL NOT BE DISABLED."
"RTN","NVSPDS6",14,0)
 ;
"RTN","NVSPDS6",15,0)
 I +$G(DUZ)="" D
"RTN","NVSPDS6",16,0)
 .W $C(7)
"RTN","NVSPDS6",17,0)
 .W !!,"NO DUZ IS DEFINED IN THIS SESSION!"
"RTN","NVSPDS6",18,0)
 .S DIR(0)="PA^200:QEFMZ"
"RTN","NVSPDS6",19,0)
 .S DIR("A")="Please enter YOUR NAME: "
"RTN","NVSPDS6",20,0)
 .D ^DIR K DIR
"RTN","NVSPDS6",21,0)
 .I $D(DIRUT) Q
"RTN","NVSPDS6",22,0)
 .S DUZ=+Y
"RTN","NVSPDS6",23,0)
 .S ^TMP("NVSPDS6",$J,DUZ)=""
"RTN","NVSPDS6",24,0)
 .S ^TMP("NVSPDS6",$J,"B",$P(^VA(200,+DUZ,0),"^"))=+DUZ
"RTN","NVSPDS6",25,0)
 .D DT^DICRW
"RTN","NVSPDS6",26,0)
 .W !!,"The account for ",$P(^VA(200,+DUZ,0),"^")
"RTN","NVSPDS6",27,0)
 .W !,"will NOT be disabled."
"RTN","NVSPDS6",28,0)
 ;
"RTN","NVSPDS6",29,0)
 I +$G(DUZ)=0&($D(DIRUT)) D  Q
"RTN","NVSPDS6",30,0)
 .W !!,"ABORTED"
"RTN","NVSPDS6",31,0)
 .K DIRUT,DTOUT,X,Y
"RTN","NVSPDS6",32,0)
 ;
"RTN","NVSPDS6",33,0)
 ; get any exclusions...
"RTN","NVSPDS6",34,0)
 W !!,"EXCLUSIONS"
"RTN","NVSPDS6",35,0)
 W !,"You may select user accounts that will NOT be disabled."
"RTN","NVSPDS6",36,0)
 W !,"You may do this by either selecting each user individually"
"RTN","NVSPDS6",37,0)
 W !,"or by using a mail group whose members' user accounts will"
"RTN","NVSPDS6",38,0)
 W !,"not be disabled."
"RTN","NVSPDS6",39,0)
 S DIR(0)="YA"
"RTN","NVSPDS6",40,0)
 S DIR("A")="Do you wish to exclude any user accounts? "
"RTN","NVSPDS6",41,0)
 S DIR("B")="NO"
"RTN","NVSPDS6",42,0)
 W !
"RTN","NVSPDS6",43,0)
 D ^DIR K DIR
"RTN","NVSPDS6",44,0)
 I $D(DIRUT) D  Q
"RTN","NVSPDS6",45,0)
 .W !!,"ABORTED!"
"RTN","NVSPDS6",46,0)
 .K DIRUT,DTOUT,X,Y
"RTN","NVSPDS6",47,0)
 .K ^TMP("NVSPDS6",$J)
"RTN","NVSPDS6",48,0)
 S NVSEXCL=+Y
"RTN","NVSPDS6",49,0)
 I NVSEXCL D EXCLUD
"RTN","NVSPDS6",50,0)
 ;
"RTN","NVSPDS6",51,0)
 ; do it...
"RTN","NVSPDS6",52,0)
 W !!,"Okay, I'm ready to begin.  I will disable user access for"
"RTN","NVSPDS6",53,0)
 W !,"all records in the New Person file except for those accounts"
"RTN","NVSPDS6",54,0)
 W !,"that have been excluded."
"RTN","NVSPDS6",55,0)
 S DIR(0)="YA"
"RTN","NVSPDS6",56,0)
 S DIR("A")="Okay to continue? "
"RTN","NVSPDS6",57,0)
 S DIR("B")="NO"
"RTN","NVSPDS6",58,0)
 W !
"RTN","NVSPDS6",59,0)
 D ^DIR K DIR
"RTN","NVSPDS6",60,0)
 I +Y'=1!($D(DIRUT)) W !!,"ABORTED!  NO ACTION TAKEN."
"RTN","NVSPDS6",61,0)
 I +Y=1 D
"RTN","NVSPDS6",62,0)
 .W !!,"Job starting ",$$HTE^XLFDT($H)
"RTN","NVSPDS6",63,0)
 .W !,"There are ",+$P(^VA(200,0),"^",4)," records to process."
"RTN","NVSPDS6",64,0)
 .S NVSUDUZ=.9
"RTN","NVSPDS6",65,0)
 .F  S NVSUDUZ=$O(^VA(200,NVSUDUZ)) Q:'NVSUDUZ  D
"RTN","NVSPDS6",66,0)
 ..W !?2,$P(^VA(200,NVSUDUZ,0),"^")
"RTN","NVSPDS6",67,0)
 ..I $D(^TMP("NVSPDS6",$J,NVSUDUZ)) W ?34,"account NOT disabled" Q 
"RTN","NVSPDS6",68,0)
 ..S DA=NVSUDUZ
"RTN","NVSPDS6",69,0)
 ..S DIE="^VA(200,"
"RTN","NVSPDS6",70,0)
 ..S DR="7///S X=""YES"""
"RTN","NVSPDS6",71,0)
 ..D ^DIE
"RTN","NVSPDS6",72,0)
 ..K DA,DIE,DR
"RTN","NVSPDS6",73,0)
 ..W ?34,"account disabled"
"RTN","NVSPDS6",74,0)
 .K NVSUDUZ
"RTN","NVSPDS6",75,0)
 K ^TMP("NVSPDS6",$J)
"RTN","NVSPDS6",76,0)
 ;
"RTN","NVSPDS6",77,0)
 Q
"RTN","NVSPDS6",78,0)
 ;
"RTN","NVSPDS6",79,0)
EXCLUD ; exclude user accounts...
"RTN","NVSPDS6",80,0)
 F  D  Q:$D(DIRUT)
"RTN","NVSPDS6",81,0)
 .W !!,"EXCLUDE USER ACCOUNTS"
"RTN","NVSPDS6",82,0)
 .S DIR(0)="SA^1:USER;2:MAIL GROUP;3:VIEW;4:EDIT;5:QUIT"
"RTN","NVSPDS6",83,0)
 .S DIR("A")="Select OPTION (1-5): "
"RTN","NVSPDS6",84,0)
 .S DIR("A",1)="  [1] Select Users Individually"
"RTN","NVSPDS6",85,0)
 .S DIR("A",2)="  [2] Select Users by Mail Group"
"RTN","NVSPDS6",86,0)
 .S DIR("A",3)="  [3] View List of Excluded Accounts"
"RTN","NVSPDS6",87,0)
 .S DIR("A",4)="  [4] Remove Accounts from the Exclusion List"
"RTN","NVSPDS6",88,0)
 .S DIR("A",5)="  [5] QUIT"
"RTN","NVSPDS6",89,0)
 .S DIR("A",6)=" "
"RTN","NVSPDS6",90,0)
 .S DIR("B")="5"
"RTN","NVSPDS6",91,0)
 .W !
"RTN","NVSPDS6",92,0)
 .D ^DIR K DIR
"RTN","NVSPDS6",93,0)
 .I +Y=5 S DIRUT=1
"RTN","NVSPDS6",94,0)
 .I $D(DIRUT) Q
"RTN","NVSPDS6",95,0)
 .S NVSOPT=+Y
"RTN","NVSPDS6",96,0)
 .I NVSOPT=1 D  Q
"RTN","NVSPDS6",97,0)
 ..D USER
"RTN","NVSPDS6",98,0)
 ..K NVSOPT
"RTN","NVSPDS6",99,0)
 .I NVSOPT=2 D  Q
"RTN","NVSPDS6",100,0)
 ..D MGRP
"RTN","NVSPDS6",101,0)
 ..K NVSOPT
"RTN","NVSPDS6",102,0)
 .I NVSOPT=3 D  Q
"RTN","NVSPDS6",103,0)
 ..D VIEW
"RTN","NVSPDS6",104,0)
 ..K NVSOPT
"RTN","NVSPDS6",105,0)
 .I NVSOPT=4 D
"RTN","NVSPDS6",106,0)
 ..D EDIT
"RTN","NVSPDS6",107,0)
 ..K NVSOPT
"RTN","NVSPDS6",108,0)
 K DIRUT,DTOUT,X,Y
"RTN","NVSPDS6",109,0)
 Q
"RTN","NVSPDS6",110,0)
 ;
"RTN","NVSPDS6",111,0)
USER ; select users individually...
"RTN","NVSPDS6",112,0)
 F  D  Q:$D(DIRUT)
"RTN","NVSPDS6",113,0)
 .S DIR(0)="PO^200:QEFMZ"
"RTN","NVSPDS6",114,0)
 .W !
"RTN","NVSPDS6",115,0)
 .D ^DIR K DIR
"RTN","NVSPDS6",116,0)
 .I $D(DIRUT) Q
"RTN","NVSPDS6",117,0)
 .S NVSUDUZ=+Y
"RTN","NVSPDS6",118,0)
 .S NVSUNAM=Y(0,0)
"RTN","NVSPDS6",119,0)
 .S ^TMP("NVSPDS6",$J,NVSUDUZ)=""
"RTN","NVSPDS6",120,0)
 .S ^TMP("NVSPDS6",$J,"B",NVSUNAM)=NVSUDUZ
"RTN","NVSPDS6",121,0)
 .W !?2,NVSUNAM," excluded."
"RTN","NVSPDS6",122,0)
 .K NVSUDUZ,NVSUNAM
"RTN","NVSPDS6",123,0)
 K DIRUT,DTOUT,X,Y
"RTN","NVSPDS6",124,0)
 Q
"RTN","NVSPDS6",125,0)
 ;
"RTN","NVSPDS6",126,0)
MGRP ; select users by mail group...
"RTN","NVSPDS6",127,0)
 F  D  Q:$D(DIRUT)
"RTN","NVSPDS6",128,0)
 .S DIR(0)="PO^3.8:QEFMZ"
"RTN","NVSPDS6",129,0)
 .W !
"RTN","NVSPDS6",130,0)
 .D ^DIR K DIR
"RTN","NVSPDS6",131,0)
 .I $D(DIRUT) Q
"RTN","NVSPDS6",132,0)
 .S NVSMGRP=+Y
"RTN","NVSPDS6",133,0)
 .S NVSMGNM=Y(0,0)
"RTN","NVSPDS6",134,0)
 .S NVSX=0
"RTN","NVSPDS6",135,0)
 .F  S NVSX=$O(^XMB(3.8,NVSMGRP,1,NVSX)) Q:'NVSX  D
"RTN","NVSPDS6",136,0)
 ..S NVSUDUZ=+^XMB(3.8,NVSMGRP,1,NVSX,0)
"RTN","NVSPDS6",137,0)
 ..S NVSUNAM=$P(^VA(200,NVSUDUZ,0),"^")
"RTN","NVSPDS6",138,0)
 ..S ^TMP("NVSPDS6",$J,NVSUDUZ)=""
"RTN","NVSPDS6",139,0)
 ..S ^TMP("NVSPDS6",$J,"B",NVSUNAM)=NVSUDUZ
"RTN","NVSPDS6",140,0)
 ..W !?2,NVSUNAM," excluded."
"RTN","NVSPDS6",141,0)
 ..K NVSUDUZ,NVSUNAM
"RTN","NVSPDS6",142,0)
 .K NVSMGNM,NVSMGRP,NVSX
"RTN","NVSPDS6",143,0)
 K DIRUT,DTOUT,X,Y
"RTN","NVSPDS6",144,0)
 Q
"RTN","NVSPDS6",145,0)
 ;
"RTN","NVSPDS6",146,0)
VIEW ; view the list of selected users...
"RTN","NVSPDS6",147,0)
 I $G(IOF)'="" W @IOF
"RTN","NVSPDS6",148,0)
 W !!,"User Accounts that WILL NOT be disabled:"
"RTN","NVSPDS6",149,0)
 W !
"RTN","NVSPDS6",150,0)
 S NVSUNAM=""
"RTN","NVSPDS6",151,0)
 F  S NVSUNAM=$O(^TMP("NVSPDS6",$J,"B",NVSUNAM)) Q:NVSUNAM=""  D
"RTN","NVSPDS6",152,0)
 .I $X>1&($X<40) W ?40
"RTN","NVSPDS6",153,0)
 .W NVSUNAM
"RTN","NVSPDS6",154,0)
 .I $X>40 W !
"RTN","NVSPDS6",155,0)
 S DIR(0)="EA"
"RTN","NVSPDS6",156,0)
 S DIR("A")="Press <enter> to continue..."
"RTN","NVSPDS6",157,0)
 W !
"RTN","NVSPDS6",158,0)
 D ^DIR K DIR
"RTN","NVSPDS6",159,0)
 K DIRUT,DTOUT,X,Y
"RTN","NVSPDS6",160,0)
 Q
"RTN","NVSPDS6",161,0)
 ;
"RTN","NVSPDS6",162,0)
EDIT ; edit the exclusion list...
"RTN","NVSPDS6",163,0)
 F  D  Q:$D(DIRUT)
"RTN","NVSPDS6",164,0)
 .S DIR(0)="PA^200:QEFMZ"
"RTN","NVSPDS6",165,0)
 .S DIR("A")="Select USER NAME TO REMOVE FROM EXCLUSION LIST: "
"RTN","NVSPDS6",166,0)
 .S DIR("?")="^D VIEW^NVSPDS6"
"RTN","NVSPDS6",167,0)
 .W !
"RTN","NVSPDS6",168,0)
 .D ^DIR K DIR
"RTN","NVSPDS6",169,0)
 .I $D(DIRUT) Q
"RTN","NVSPDS6",170,0)
 .S NVSUDUZ=+Y
"RTN","NVSPDS6",171,0)
 .S NVSUNAM=Y(0,0)
"RTN","NVSPDS6",172,0)
 .I NVSUDUZ=.5 D  Q
"RTN","NVSPDS6",173,0)
 ..W !?2,"POSTMASTER's account WILL NOT BE DISABLED."
"RTN","NVSPDS6",174,0)
 .I '$D(^TMP("NVSPDS6",$J,NVSUDUZ)) D  Q
"RTN","NVSPDS6",175,0)
 ..W !?2,NVSUNAM," is NOT in the current exclusion list."
"RTN","NVSPDS6",176,0)
 ..K NVSUDUZ,NVSUNAM
"RTN","NVSPDS6",177,0)
 .K ^TMP("NVSPDS6",$J,NVSUDUZ)
"RTN","NVSPDS6",178,0)
 .K ^TMP("NVSPDS6",$J,"B",NVSUNAM)
"RTN","NVSPDS6",179,0)
 .W !?2,NVSUNAM," removed from exclusion list."
"RTN","NVSPDS6",180,0)
 .K NVSUDUZ,NVSUNAM
"RTN","NVSPDS6",181,0)
 K DIRUT,DTOUT,X,Y
"RTN","NVSPDS6",182,0)
 Q
"RTN","NVSPDSU")
0^34^B43942745
"RTN","NVSPDSU",1,0)
NVSPDSU ;emciss/maw-patient data scrambler functions/utilities ; 09/01/02
"RTN","NVSPDSU",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSPDSU",3,0)
 ;
"RTN","NVSPDSU",4,0)
REVN(X) ; scramble a patient name...
"RTN","NVSPDSU",5,0)
 ; new algorithm: first letter of last name is NOT changed
"RTN","NVSPDSU",6,0)
 ; X = a patient name
"RTN","NVSPDSU",7,0)
 ; returns patient name scrambled using $TRANSLATE for
"RTN","NVSPDSU",8,0)
 ; letter-by-letter exchange of all characters after the first
"RTN","NVSPDSU",9,0)
 ;
"RTN","NVSPDSU",10,0)
 N L1,LX
"RTN","NVSPDSU",11,0)
 I $G(X)="" Q "ERROR--NO NAME PASSED"
"RTN","NVSPDSU",12,0)
 S L1=$E(X)
"RTN","NVSPDSU",13,0)
 S LX=$E(X,2,99)
"RTN","NVSPDSU",14,0)
 Q L1_$TR(LX,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","LKJIHGFEDCBAZYXWVUTSRQPONM")
"RTN","NVSPDSU",15,0)
 ;
"RTN","NVSPDSU",16,0)
SSN(NAME,DOB,PSSN)      ; generate a pseudo-SSN...
"RTN","NVSPDSU",17,0)
 ; NAME = passed by value = client's name
"RTN","NVSPDSU",18,0)
 ; DOB  = passed by value = client's date of birth
"RTN","NVSPDSU",19,0)
 ; PSSN = passed by reference = ""
"RTN","NVSPDSU",20,0)
 ; returns PSSN = a valid pseudo-SSN based upon the parameters passed
"RTN","NVSPDSU",21,0)
 ; NOTE:  this is only used as a last resort.      
"RTN","NVSPDSU",22,0)
 ;
"RTN","NVSPDSU",23,0)
 N DOB1,FIRSTI,I,LASTI,MIDFIND,MIDLI,NAME2
"RTN","NVSPDSU",24,0)
 S LASTI=$E(NAME)
"RTN","NVSPDSU",25,0)
 S NAME2=$P(NAME,",",2)
"RTN","NVSPDSU",26,0)
 S FIRSTI=$E(NAME2)
"RTN","NVSPDSU",27,0)
 S MIDFIND=$F(NAME2," ")
"RTN","NVSPDSU",28,0)
 I MIDFIND=0 S MIDLI=""
"RTN","NVSPDSU",29,0)
 I MIDFIND>0 S MIDLI=$E(NAME2,MIDFIND)
"RTN","NVSPDSU",30,0)
 S PSSN=""
"RTN","NVSPDSU",31,0)
 F I="FIRSTI","MIDLI","LASTI" D
"RTN","NVSPDSU",32,0)
 .S PSSN=PSSN_$$SSN2(@I)
"RTN","NVSPDSU",33,0)
 F I=1:1:3 D
"RTN","NVSPDSU",34,0)
 .S DOB1=$S(I=1:+$E(DOB,4,5),I=2:+$E(DOB,6,7),1:+$E(DOB,2,3))
"RTN","NVSPDSU",35,0)
 .I DOB1<10 S DOB1="0"_DOB1
"RTN","NVSPDSU",36,0)
 .S PSSN=PSSN_DOB1
"RTN","NVSPDSU",37,0)
 S PSSN=PSSN_"P"
"RTN","NVSPDSU",38,0)
 Q
"RTN","NVSPDSU",39,0)
 ;
"RTN","NVSPDSU",40,0)
SSN2(X) ; convert alphas to digits...
"RTN","NVSPDSU",41,0)
 ; (only called from SSN module above)
"RTN","NVSPDSU",42,0)
 ; X = an alpha character
"RTN","NVSPDSU",43,0)
 ; returns X converted into a specific numeric value
"RTN","NVSPDSU",44,0)
 ;
"RTN","NVSPDSU",45,0)
 I $G(X)="" Q 0
"RTN","NVSPDSU",46,0)
 I "ABC"[X Q 1
"RTN","NVSPDSU",47,0)
 I "DEF"[X Q 2
"RTN","NVSPDSU",48,0)
 I "GHI"[X Q 3
"RTN","NVSPDSU",49,0)
 I "JKL"[X Q 4
"RTN","NVSPDSU",50,0)
 I "MNO"[X Q 5
"RTN","NVSPDSU",51,0)
 I "PQR"[X Q 6
"RTN","NVSPDSU",52,0)
 I "STU"[X Q 7
"RTN","NVSPDSU",53,0)
 I "VWX"[X Q 8
"RTN","NVSPDSU",54,0)
 I "YZ"[X Q 9
"RTN","NVSPDSU",55,0)
 Q 0
"RTN","NVSPDSU",56,0)
 ;
"RTN","NVSPDSU",57,0)
SSND(X) ; format an SSN into nnn-nn-nnnn...
"RTN","NVSPDSU",58,0)
 ; X = an SSN in a format with no dashes
"RTN","NVSPDSU",59,0)
 ; returns X in the format indicated above
"RTN","NVSPDSU",60,0)
 I $G(X)="" Q ""
"RTN","NVSPDSU",61,0)
 S X=$TR(X,"-","")
"RTN","NVSPDSU",62,0)
 Q $E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,9)
"RTN","NVSPDSU",63,0)
 ;
"RTN","NVSPDSU",64,0)
SSNS(X) ; get short ID (last 4-5 characters of SSN)...
"RTN","NVSPDSU",65,0)
 ; X = an SSN in a format with no dashes
"RTN","NVSPDSU",66,0)
 ; returns X as the last 4 digits of SSN
"RTN","NVSPDSU",67,0)
 I $G(X)="" Q ""
"RTN","NVSPDSU",68,0)
 I X["-" Q X
"RTN","NVSPDSU",69,0)
 Q $E(X,6,9)
"RTN","NVSPDSU",70,0)
 ;
"RTN","NVSPDSU",71,0)
PFEDIT(DFN,FIELD,VALUE) ; edit a particular field in the patient file...
"RTN","NVSPDSU",72,0)
 ; call VA FileMan DBS to edit/update a field in the Patient file
"RTN","NVSPDSU",73,0)
 ;   DFN = patient record number
"RTN","NVSPDSU",74,0)
 ; FIELD = the field number to be edited
"RTN","NVSPDSU",75,0)
 ; VALUE = the value that will be stuffed into the field
"RTN","NVSPDSU",76,0)
 ; nothing is returned from this call
"RTN","NVSPDSU",77,0)
 ;
"RTN","NVSPDSU",78,0)
 I $G(DFN)=""!($G(FIELD)="")!($G(VALUE)="") Q
"RTN","NVSPDSU",79,0)
 N NVSDIERR,NVSFILE,NVSMSG,NVSVAL,NVSX,NVSY,X,Y
"RTN","NVSPDSU",80,0)
 N VAFCFLG
"RTN","NVSPDSU",81,0)
 S VAFCFLG=1
"RTN","NVSPDSU",82,0)
 S NVSFILE(2,DFN_",",FIELD)=VALUE
"RTN","NVSPDSU",83,0)
 ;
"RTN","NVSPDSU",84,0)
 ; validate the edit.  quit if we can't edit it...
"RTN","NVSPDSU",85,0)
 D VAL^DIE(2,DFN_",",FIELD,"EFHR",VALUE,.NVSVAL,"NVSFILE","NVSDIERR")
"RTN","NVSPDSU",86,0)
 I NVSVAL="^" Q
"RTN","NVSPDSU",87,0)
 ;
"RTN","NVSPDSU",88,0)
 D FILE^DIE("E","NVSFILE","NVSDIERR")
"RTN","NVSPDSU",89,0)
 I $D(NVSDIERR("DIERR")) D
"RTN","NVSPDSU",90,0)
 .S NVSX=0
"RTN","NVSPDSU",91,0)
 .F  S NVSX=$O(NVSDIERR("DIERR",NVSX)) Q:'NVSX  D
"RTN","NVSPDSU",92,0)
 ..S NVSY=0
"RTN","NVSPDSU",93,0)
 ..F  S NVSY=$O(NVSDIERR("DIERR",NVSX,"TEXT",NVSY)) Q:'NVSY  D
"RTN","NVSPDSU",94,0)
 ...S NVSMSG=NVSDIERR("DIERR",NVSX,"TEXT",NVSY)
"RTN","NVSPDSU",95,0)
 ...D ERR^NVSPDSU(NVSMSG_" DFN="_DFN_" Field: "_FIELD)
"RTN","NVSPDSU",96,0)
 I $D(NVSDIERR("DIMSG")) D
"RTN","NVSPDSU",97,0)
 .S NVSX=0
"RTN","NVSPDSU",98,0)
 .F  S NVSX=$O(NVSDIERR("DIMSG",NVSX)) Q:'NVSX  D
"RTN","NVSPDSU",99,0)
 ..S NVSMSG=NVSDIERR("DIMSG",NVSX)
"RTN","NVSPDSU",100,0)
 ..D ERR^NVSPDSU(NVSMSG_" DFN="_DFN_" Field: "_FIELD)
"RTN","NVSPDSU",101,0)
 Q
"RTN","NVSPDSU",102,0)
 ;        
"RTN","NVSPDSU",103,0)
CITY() ; city...
"RTN","NVSPDSU",104,0)
 ; returns a bogus city name randomly selected from the temporary array
"RTN","NVSPDSU",105,0)
 ;
"RTN","NVSPDSU",106,0)
 N C1,C2,NVSCITY,CITY
"RTN","NVSPDSU",107,0)
 S NVSCITY("CITY",0)="MAYBERRY^BEDROCK^METROPOLIS^GOTHAM CITY^ST ELSEWHERE^ELM RIDGE^RED PLAINS^WEST FALLS^ELDORADO^PICKLETON^STEELTOWN^MINOPOLIS^NEW KRANSTON^FOREST HILLS^BUCHANAN^GUCCHI^PADDLETON^OAK LEAF^WATERFALL^PORTSEND"
"RTN","NVSPDSU",108,0)
 S NVSCITY("CITY",1)="COALHILL^LITTLETON^CREEK JUNCTION^CAPISTRANO^MYOPIA^SUBURBIA^GOLD RIDGE^COPPER CITY^BLOUNT^MEGOPOLIS^BLUEVILLE^ACRETON^ST RICHARDS^EL TORRO^SUN GROVE^MAYBERRY^CACTUS^COLLEGE TOWN^PAPERMILL^WINNEBEGO"
"RTN","NVSPDSU",109,0)
 S NVSCITY("CITY",2)="SHADY GROVE^HARDING^CLOVER^SHOSHONE HILL^PLANKTON^PULLOVER^LOST LAKE^FARM HILL^SEDGEBRUSH^LOS NUEVOS^PORTERVILLE^IRONTON^PINE HILL^DIAMOND^ZULU^WHISTLE JUNCT.^CORNER GROVE^WOLVINGTON^PAPERMILL^DEEP LAKE"
"RTN","NVSPDSU",110,0)
 S NVSCITY("CITY",3)="NOD HILL^NEWTOPIA^STARWOOD^KING ARTHUR^SAN BERNADA^ST BERNARD^BUTTERVILLE^CASA BLANCA^CHEROKEE^EVERGREEN^CRESTWOOD^FARMSTEAD^GLOVER^LAKEPINE^HIGHLAND^MANCHESTER^COVE CITY^OAKSHIRE^RUSHTOWN^TWIN PEAKS"
"RTN","NVSPDSU",111,0)
 S NVSCITY("CITY",4)="SPEEDTRAP^HOVINGTON^BEAVERSTON^LONGLY^TOONTOWN^TRANSYLVANIA^BEEHIVE^TINSYLTOWN^STARCREEK^EDENS GARDEN^KANE COVE^BAGDAD^MECCAH^EERIE^GOLDRUSH^LOS DIABLOS^CASA GRANDA^SHANGRILA^VALHALIA^TIMBUKTUU"
"RTN","NVSPDSU",112,0)
 S NVSCITY("CITY",5)="NIRVANA^WEST GOLDRUSH^RIVER CITY^URBANTOWN^GULCH^SMOCKSTACK^VENICIA^HOMBERG^NESTELVILLE^SERIA LEONE^COVALLA^TOMBSTONE^MILE CITY^KRYPTON^UPTON^KOKERVILLE^BOONVILLE^CANYON^LAST CHANCE^GEYSER"
"RTN","NVSPDSU",113,0)
 S CITY=""
"RTN","NVSPDSU",114,0)
 S C1=$R(6)
"RTN","NVSPDSU",115,0)
 S C2=$R(20)
"RTN","NVSPDSU",116,0)
 I C2=0 S C2=1
"RTN","NVSPDSU",117,0)
 S CITY=$P($G(NVSCITY("CITY",C1)),"^",C2)
"RTN","NVSPDSU",118,0)
 I CITY="" S CITY="SOMECITY"
"RTN","NVSPDSU",119,0)
 Q CITY
"RTN","NVSPDSU",120,0)
 ;
"RTN","NVSPDSU",121,0)
CTY(ST) ; get a county...
"RTN","NVSPDSU",122,0)
 ; ST = a valid entry in the State file -or- null.  if null, this module
"RTN","NVSPDSU",123,0)
 ;        calls $$ST to randomly select a state.
"RTN","NVSPDSU",124,0)
 ; returns a randomly selected county from the entries for the specified
"RTN","NVSPDSU",125,0)
 ;   state
"RTN","NVSPDSU",126,0)
 ;
"RTN","NVSPDSU",127,0)
 N CTY,CTYX
"RTN","NVSPDSU",128,0)
 I +$G(ST)=0 S ST=$$ST()
"RTN","NVSPDSU",129,0)
 I ST=0 S CTY=""
"RTN","NVSPDSU",130,0)
 I ST>0 D
"RTN","NVSPDSU",131,0)
 .S CTY=0
"RTN","NVSPDSU",132,0)
 .S CTYX=+$P($G(^DIC(5,ST,1,0)),"^",4)-1
"RTN","NVSPDSU",133,0)
 .I CTYX'>0 S CTY=0 Q
"RTN","NVSPDSU",134,0)
 .F  Q:$D(^DIC(5,ST,1,CTY,0))  S CTY=$R(CTYX)+1
"RTN","NVSPDSU",135,0)
 I +CTY'>0 S CTY=1
"RTN","NVSPDSU",136,0)
 Q CTY
"RTN","NVSPDSU",137,0)
 ;
"RTN","NVSPDSU",138,0)
ST() ; get a state name...
"RTN","NVSPDSU",139,0)
 ; returns a randomly-selected state name from the State file.
"RTN","NVSPDSU",140,0)
 N ST
"RTN","NVSPDSU",141,0)
 S ST="0^"
"RTN","NVSPDSU",142,0)
 I $D(^DIC(5)) D
"RTN","NVSPDSU",143,0)
 .S ST="0^"
"RTN","NVSPDSU",144,0)
 .F  Q:$D(^DIC(5,+ST,0))  S $P(ST,U)=$R(51)+1
"RTN","NVSPDSU",145,0)
 I +ST'>0 S ST=$O(^DIC(5,0))
"RTN","NVSPDSU",146,0)
 S $P(ST,U,2)=$P($G(^DIC(5,+ST,0)),U)
"RTN","NVSPDSU",147,0)
 I +ST=0 D
"RTN","NVSPDSU",148,0)
 .S ST=$O(^DIC(5,"B",""))
"RTN","NVSPDSU",149,0)
 .S $P(ST,U)=+$O(^DIC(5,"B",ST,0))
"RTN","NVSPDSU",150,0)
 Q ST
"RTN","NVSPDSU",151,0)
 ;               
"RTN","NVSPDSU",152,0)
ZIP(X) ; scrambled zip code...
"RTN","NVSPDSU",153,0)
 ; X = a zip code (passed only for the purpose of determining
"RTN","NVSPDSU",154,0)
 ;                 whether it is a straight 5-digit zip code or
"RTN","NVSPDSU",155,0)
 ;                 a zip+4 format zip code)
"RTN","NVSPDSU",156,0)
 ; returns either a 5-digit zip code of 12345, or a zip+4 format
"RTN","NVSPDSU",157,0)
 ;   zip code of 12345-1234
"RTN","NVSPDSU",158,0)
 N ZIP
"RTN","NVSPDSU",159,0)
 S ZIP=12345
"RTN","NVSPDSU",160,0)
 I $L(X)>5 S ZIP=ZIP_"-1234"
"RTN","NVSPDSU",161,0)
 Q ZIP
"RTN","NVSPDSU",162,0)
 ;
"RTN","NVSPDSU",163,0)
PHONE(X) ; set a bogus phone number that will be used everywhere...
"RTN","NVSPDSU",164,0)
 Q "800-555-1212"
"RTN","NVSPDSU",165,0)
 ;
"RTN","NVSPDSU",166,0)
SCR(X) ; scramble a given string...
"RTN","NVSPDSU",167,0)
 ; this algorithm can be used for mixed alpha/numeric strings
"RTN","NVSPDSU",168,0)
 ; X = string to be scrambled
"RTN","NVSPDSU",169,0)
 ; returns string scrambled:  alpha characters are replaced with other
"RTN","NVSPDSU",170,0)
 ;                            alphas, numbers are replaced with numbers
"RTN","NVSPDSU",171,0)
 I $G(X)="" Q ""
"RTN","NVSPDSU",172,0)
 N L,ST,Y
"RTN","NVSPDSU",173,0)
 S Y=""
"RTN","NVSPDSU",174,0)
 F L=1:1:$L(X) D
"RTN","NVSPDSU",175,0)
 .S ST=$E(X,L)
"RTN","NVSPDSU",176,0)
 .S Y=Y_$S(ST?1A:$C($A(ST)-64+$R(26)#26+65),ST?1N:$R(9),1:ST)
"RTN","NVSPDSU",177,0)
 ;
"RTN","NVSPDSU",178,0)
 ; make sure we haven't inserted a bogus character to the string...
"RTN","NVSPDSU",179,0)
 S Y=$TR(Y,"^;_"," ")
"RTN","NVSPDSU",180,0)
 Q Y
"RTN","NVSPDSU",181,0)
 ;
"RTN","NVSPDSU",182,0)
ERR(MSG)        ; set error message in tracking global...
"RTN","NVSPDSU",183,0)
 I $G(MSG)="" Q
"RTN","NVSPDSU",184,0)
 N NVSECT
"RTN","NVSPDSU",185,0)
 S NVSECT=+$O(^XTMP("NVSPDS","E",""),-1)+1
"RTN","NVSPDSU",186,0)
 S ^XTMP("NVSPDS","E",NVSECT,0)=MSG
"RTN","NVSPDSU",187,0)
 W !?5,MSG
"RTN","NVSPDSU",188,0)
 Q
"RTN","NVSPDSU",189,0)
 ;
"RTN","NVSPDSU",190,0)
ET ; come here on fatal error...
"RTN","NVSPDSU",191,0)
 N NVSNOW
"RTN","NVSPDSU",192,0)
 S NVSNOW=$H
"RTN","NVSPDSU",193,0)
 S ^XTMP("NVSPDS","FATAL_ERROR",NVSNOW)="Record #"_$G(NVSDFN,"UNKNOWN")
"RTN","NVSPDSU",194,0)
 S ^XTMP("NVSPDS","FATAL_ERROR",NVSNOW,1,0)=$ZE
"RTN","NVSPDSU",195,0)
 G RESTART^NVSPDS
"RTN","NVSPDSU",196,0)
 ;
"RTN","NVSPDSU",197,0)
DPTTOT()        ; get count of total records in ^DPT...
"RTN","NVSPDSU",198,0)
 N COUNT,DFN
"RTN","NVSPDSU",199,0)
 S (COUNT,DFN)=0
"RTN","NVSPDSU",200,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN  S COUNT=COUNT+1
"RTN","NVSPDSU",201,0)
 Q COUNT
"RTN","NVSPDSU",202,0)
  
"RTN","NVSPDSU1")
0^35^B21935953
"RTN","NVSPDSU1",1,0)
NVSPDSU1        ;emciss/maw-patient data scrambler functions/utilities ; 09/01/02
"RTN","NVSPDSU1",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSPDSU1",3,0)
 ;
"RTN","NVSPDSU1",4,0)
 ; the screen control modules in this routine were borrowed from
"RTN","NVSPDSU1",5,0)
 ; ^XPDID (thanks RD@CIOFO SF).  Variables' namespace changed to
"RTN","NVSPDSU1",6,0)
 ; protect the innocent.
"RTN","NVSPDSU1",7,0)
 ;
"RTN","NVSPDSU1",8,0)
INIT ;initialize progress screen
"RTN","NVSPDSU1",9,0)
 N X,NVSDSTR
"RTN","NVSPDSU1",10,0)
 D HOME^%ZIS
"RTN","NVSPDSU1",11,0)
 I IO'=IO(0)!(IOST'["C-VT") S NVSIDVT=0 Q
"RTN","NVSPDSU1",12,0)
 I $T(PREP^XGF)="" S NVSIDVT=0 Q
"RTN","NVSPDSU1",13,0)
 D PREP^XGF
"RTN","NVSPDSU1",14,0)
 S NVSIDVT=1,X="IOSTBM",NVSDSTR="             25             50             75               "
"RTN","NVSPDSU1",15,0)
 D ENDR^%ZISS
"RTN","NVSPDSU1",16,0)
 S IOTM=4,IOBM=IOSL-4
"RTN","NVSPDSU1",17,0)
 W @IOSTBM
"RTN","NVSPDSU1",18,0)
 D FRAME^XGF(IOTM-2,0,IOTM-2,IOM-1)
"RTN","NVSPDSU1",19,0)
 D FRAME^XGF(IOBM,0,IOBM,IOM-1)
"RTN","NVSPDSU1",20,0)
 D FRAME^XGF(IOBM+1,10,IOBM+3,71)
"RTN","NVSPDSU1",21,0)
 D SAY^XGF(IOBM+2,11,NVSDSTR)
"RTN","NVSPDSU1",22,0)
 D SAY^XGF(IOBM+2,0,$J("0",5)_"%")
"RTN","NVSPDSU1",23,0)
 D SAY^XGF(IOBM+3,0,"Complete")
"RTN","NVSPDSU1",24,0)
 D IOXY^XGF(IOTM-2,0)
"RTN","NVSPDSU1",25,0)
 Q
"RTN","NVSPDSU1",26,0)
 ;
"RTN","NVSPDSU1",27,0)
EXIT(NVSM) ;exit progress screen restore screen to normal
"RTN","NVSPDSU1",28,0)
 I $G(NVSIDVT) D
"RTN","NVSPDSU1",29,0)
 .S IOTM=1,IOBM=IOSL
"RTN","NVSPDSU1",30,0)
 .W @IOSTBM,@IOF
"RTN","NVSPDSU1",31,0)
 .W:$G(NVSM)]"" !!,NVSM,!!
"RTN","NVSPDSU1",32,0)
 .D CLEAN^XGF
"RTN","NVSPDSU1",33,0)
 K IOTM,IOBM,IOSTBM,NVSIDCNT,NVSIDMOD,NVSIDTOT,NVSIDVT
"RTN","NVSPDSU1",34,0)
 Q
"RTN","NVSPDSU1",35,0)
 ;
"RTN","NVSPDSU1",36,0)
TITLE(X) ;display title X
"RTN","NVSPDSU1",37,0)
 Q:'NVSIDVT
"RTN","NVSPDSU1",38,0)
 N NVSOX,NVSOY
"RTN","NVSPDSU1",39,0)
 S NVSOX=$X,NVSOY=$Y
"RTN","NVSPDSU1",40,0)
 D SAY^XGF(0,0,$$CJ^XLFSTR(X,IOM_"T")),CURSOR
"RTN","NVSPDSU1",41,0)
 Q
"RTN","NVSPDSU1",42,0)
 ;
"RTN","NVSPDSU1",43,0)
SETTOT(X) ;X=file # from build
"RTN","NVSPDSU1",44,0)
 Q:'$D(NVSIDVT)
"RTN","NVSPDSU1",45,0)
 S NVSIDTOT=$S(X=4:+$P($G(^XTMP("NVSI",NVSA,"BLD",NVSBLD,4,0)),U,4),X=9.8:+$G(^XTMP("NVSI",NVSA,"RTN")),1:+$P($G(^XTMP("NVSI",NVSA,"BLD",NVSBLD,"KRN",X,"NM",0)),U,4))
"RTN","NVSPDSU1",46,0)
 S NVSIDMOD=$S(NVSIDTOT<60:1,1:NVSIDTOT\60),NVSIDCNT=0
"RTN","NVSPDSU1",47,0)
 Q:'NVSIDVT
"RTN","NVSPDSU1",48,0)
 D UPDATE(0)
"RTN","NVSPDSU1",49,0)
 Q
"RTN","NVSPDSU1",50,0)
 ;
"RTN","NVSPDSU1",51,0)
UPDATE(NVSN) ;update the progress bar
"RTN","NVSPDSU1",52,0)
 I '+$G(NVSIDVT) W "." Q
"RTN","NVSPDSU1",53,0)
 N NVSLEN,NVSMC,NVSOX,NVSOY,NVSS,NVSSTR
"RTN","NVSPDSU1",54,0)
 S NVSOX=$X,NVSOY=$Y,NVSMC=60,NVSSTR="             25             50             75               "
"RTN","NVSPDSU1",55,0)
 S NVSLEN=$S(NVSIDTOT:NVSN/NVSIDTOT*NVSMC\1,1:0),NVSS=$E(NVSSTR,1,NVSLEN)
"RTN","NVSPDSU1",56,0)
 D SAY^XGF(IOBM+2,11,NVSS,"R1")
"RTN","NVSPDSU1",57,0)
 S NVSS=$E(NVSSTR,NVSLEN+1,NVSMC)
"RTN","NVSPDSU1",58,0)
 D SAY^XGF(IOBM+2,11+NVSLEN,NVSS)
"RTN","NVSPDSU1",59,0)
 D SAY^XGF(IOBM+2,0,$J(NVSLEN/NVSMC*100,5,0)),CURSOR
"RTN","NVSPDSU1",60,0)
 Q
"RTN","NVSPDSU1",61,0)
 ;
"RTN","NVSPDSU1",62,0)
CURSOR ;put cursor back
"RTN","NVSPDSU1",63,0)
 S:NVSOY>(IOBM-1) NVSOY=IOBM-1
"RTN","NVSPDSU1",64,0)
 D IOXY^XGF(NVSOY,NVSOX)
"RTN","NVSPDSU1",65,0)
 Q
"RTN","NVSPDSU1",66,0)
 ;
"RTN","NVSPDSU1",67,0)
XREF ; clean up Patient file x-refs that contain triggers in the event edits
"RTN","NVSPDSU1",68,0)
 ; are made to various patient file fields...
"RTN","NVSPDSU1",69,0)
 N NVSCHK,NVSFLD,X,Y
"RTN","NVSPDSU1",70,0)
 W !,"Patient file cross references..."
"RTN","NVSPDSU1",71,0)
 W !!,"  NAME field (.01), xref 301..."
"RTN","NVSPDSU1",72,0)
 I '$D(^DD(2,.01,1,301)) W "already deleted."
"RTN","NVSPDSU1",73,0)
 I $D(^DD(2,.01,1,301)) D
"RTN","NVSPDSU1",74,0)
 .D DELIX^DDMOD(2,.01,301,"W")
"RTN","NVSPDSU1",75,0)
 .W !,"Done."
"RTN","NVSPDSU1",76,0)
 W !!,"  NAME field (.01), xref 2005..."
"RTN","NVSPDSU1",77,0)
 I '$D(^DD(2,.01,1,2005)) W "already deleted."
"RTN","NVSPDSU1",78,0)
 I $D(^DD(2,.01,1,2005)) D
"RTN","NVSPDSU1",79,0)
 .D DELIX^DDMOD(2,.01,2005,"W")
"RTN","NVSPDSU1",80,0)
 .W !,"Done."
"RTN","NVSPDSU1",81,0)
 W !!,"  SSN field (.09), xref 9..."
"RTN","NVSPDSU1",82,0)
 I '$D(^DD(2,.01,1,9)) W "already deleted."
"RTN","NVSPDSU1",83,0)
 I $D(^DD(2,.01,1,9)) D
"RTN","NVSPDSU1",84,0)
 .D DELIX^DDMOD(2,.09,9,"W")
"RTN","NVSPDSU1",85,0)
 .W !,"Done."
"RTN","NVSPDSU1",86,0)
 W !!,"  SSN field (.09), xref 301..."
"RTN","NVSPDSU1",87,0)
 I '$D(^DD(2,.09,1,301)) W "...already deleted."
"RTN","NVSPDSU1",88,0)
 I $D(^DD(2,.09,1,301)) D
"RTN","NVSPDSU1",89,0)
 .D DELIX^DDMOD(2,.09,301,"W")
"RTN","NVSPDSU1",90,0)
 .W !,"Done."
"RTN","NVSPDSU1",91,0)
 W !!,"  SSN field (.09), xref 2005..."
"RTN","NVSPDSU1",92,0)
 I '$D(^DD(2,.09,1,2005)) W "already deleted."
"RTN","NVSPDSU1",93,0)
 I $D(^DD(2,.09,1,2005)) D
"RTN","NVSPDSU1",94,0)
 .D DELIX^DDMOD(2,.09,2005,"W")
"RTN","NVSPDSU1",95,0)
 .W !,"Done."
"RTN","NVSPDSU1",96,0)
 ;
"RTN","NVSPDSU1",97,0)
 W !!,"Now, searching Patient file to delete AVAF* x-refs..."
"RTN","NVSPDSU1",98,0)
 S (NVSCHK,NVSFLD)=0
"RTN","NVSPDSU1",99,0)
 F  S NVSFLD=$O(^DD(2,NVSFLD)) Q:'NVSFLD  D
"RTN","NVSPDSU1",100,0)
 .I '$D(^DD(2,NVSFLD,1,991)) Q
"RTN","NVSPDSU1",101,0)
 .W !!?2,$P(^DD(2,NVSFLD,0),"^")," field (",NVSFLD,")..."
"RTN","NVSPDSU1",102,0)
 .D DELIX^DDMOD(2,NVSFLD,991,"W")
"RTN","NVSPDSU1",103,0)
 .W !?2,"Done."
"RTN","NVSPDSU1",104,0)
 .S NVSCHK=NVSCHK+1
"RTN","NVSPDSU1",105,0)
 I NVSCHK=0 W "already deleted."
"RTN","NVSPDSU1",106,0)
 Q
"RTN","NVSPDSU1",107,0)
 ;
"RTN","NVSPDSU1",108,0)
REINDX(DFN,OK)  ; re-index the "ADOB" and "B" x-refs for a record...
"RTN","NVSPDSU1",109,0)
 ; DFN = record number in the Patient file
"RTN","NVSPDSU1",110,0)
 ; OK  = a flag passed by reference that will be set to 0 (zero) if re-index fails
"RTN","NVSPDSU1",111,0)
 ; this module is called after all scrambling has been accomplished.  in order
"RTN","NVSPDSU1",112,0)
 ; for a record to be indexed (and therefore able to be looked up), the basic
"RTN","NVSPDSU1",113,0)
 ; scrambling mechanism for name and SSN must have completed -- completion is
"RTN","NVSPDSU1",114,0)
 ; indicated by the existence of a temporary node ^DPT(DFN,"NVS").
"RTN","NVSPDSU1",115,0)
 N NVSDATA,NVSNAME,NVSSSN
"RTN","NVSPDSU1",116,0)
 S NVSDATA=$G(^DPT(+$G(DFN),0))
"RTN","NVSPDSU1",117,0)
 I NVSDATA="" Q
"RTN","NVSPDSU1",118,0)
 S NVSNAME=$P(NVSDATA,"^")
"RTN","NVSPDSU1",119,0)
 S NVSSSN=$P(NVSDATA,"^",9)
"RTN","NVSPDSU1",120,0)
 S NVSDOB=$P(NVSDATA,"^",3)
"RTN","NVSPDSU1",121,0)
 I +NVSNAME'=0!(NVSNAME="") S OK=0 Q
"RTN","NVSPDSU1",122,0)
 I $L(NVSSSN)>9&($E(NVSSSN,$L(NVSSSN))'="P") S OK=0 Q
"RTN","NVSPDSU1",123,0)
 I $L(NVSSSN)<9 S OK=0 Q
"RTN","NVSPDSU1",124,0)
 I NVSDOB="" S OK=0 Q
"RTN","NVSPDSU1",125,0)
 S ^DPT("ADOB",NVSDOB,DFN)=""
"RTN","NVSPDSU1",126,0)
 S ^DPT("B",NVSNAME,DFN)=""
"RTN","NVSPDSU1",127,0)
 Q
"RTN","NVSPDSU1",128,0)
 ;
"RTN","NVSPDSU1",129,0)
MREC(DFN)       ; deal with merged records...
"RTN","NVSPDSU1",130,0)
 ; DFN = record number of the merged record
"RTN","NVSPDSU1",131,0)
 ; "Merged" records are identified in the Patient file by the existence of the node
"RTN","NVSPDSU1",132,0)
 ; ^DPT(DFN,-9).  This node contains a number that is a pointer to the record in the
"RTN","NVSPDSU1",133,0)
 ; Patient file into which the data from this record was merged.  This module will
"RTN","NVSPDSU1",134,0)
 ; set zero-eth node of this merged record equal to the NAME field in the actual record
"RTN","NVSPDSU1",135,0)
 ; (don't ask, just trust me)...
"RTN","NVSPDSU1",136,0)
 N NVSNAME,NVSXDFN
"RTN","NVSPDSU1",137,0)
 S NVSXDFN=+$G(^DPT(DFN,-9))
"RTN","NVSPDSU1",138,0)
 I NVSXDFN'>0 Q
"RTN","NVSPDSU1",139,0)
 S NVSNAME=$P($G(^DPT(NVSXDFN,0)),"^")
"RTN","NVSPDSU1",140,0)
 I NVSNAME="" D
"RTN","NVSPDSU1",141,0)
 .S NVSNAME=$P(^DPT(DFN,0),"^")
"RTN","NVSPDSU1",142,0)
 .S NVSNAME=$$REVN^NVSPDSU(NVSNAME)
"RTN","NVSPDSU1",143,0)
 I NVSNAME="" S NVSNAME="ZZPATIENT,MERGED"
"RTN","NVSPDSU1",144,0)
 S ^DPT(DFN,0)=NVSNAME
"RTN","NVSPDSU1",145,0)
 Q
"RTN","NVSPDSU1",146,0)
 ;
"RTN","NVSPDSU1",147,0)
CDOB(DFN)       ; deal with records which have no date of birth...
"RTN","NVSPDSU1",148,0)
 ; DFN = record number in Patient file
"RTN","NVSPDSU1",149,0)
 ; This module sets the Date of Birth field (and "ADOB" x-ref) with 2541227 so that
"RTN","NVSPDSU1",150,0)
 ; a pseudo-SSN can be created and the record can be scrambled.
"RTN","NVSPDSU1",151,0)
 N NVSDATA
"RTN","NVSPDSU1",152,0)
 I +$G(DFN)'>0 Q
"RTN","NVSPDSU1",153,0)
 S $P(^DPT(DFN,0),"^",3)=2541227
"RTN","NVSPDSU1",154,0)
 Q
"RTN","NVSTAR")
0^47^B59367487
"RTN","NVSTAR",1,0)
NVSTAR ;emc/maw-Test Account Reset Utilities main routine ;09/01/02
"RTN","NVSTAR",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSTAR",3,0)
 ;
"RTN","NVSTAR",4,0)
 D HOME^%ZIS
"RTN","NVSTAR",5,0)
 I $G(IOF)'="" W @IOF
"RTN","NVSTAR",6,0)
 W !!,$$CJ^XLFSTR("ENTERPRISE MANAGEMENT CENTER :: TEST ACCOUNT RESET UTILITIES",80)
"RTN","NVSTAR",7,0)
 W !,$$CJ^XLFSTR("VERSION 6.0 :: September 1, 2002",80)
"RTN","NVSTAR",8,0)
 ;
"RTN","NVSTAR",9,0)
 W !!,"CAUTION:  IT IS IMPORTANT TO USE UP TO DATE SOFTWARE!"
"RTN","NVSTAR",10,0)
 W !!,"If you did not retrieve this software from the documented source site"
"RTN","NVSTAR",11,0)
 W !,"today (or within the past couple of days), you may be using out-of-date"
"RTN","NVSTAR",12,0)
 W !,"software.  If this isn't a recent download, it is highly recommended that"
"RTN","NVSTAR",13,0)
 W !,"you abort this and retrieve the latest software from the source site."
"RTN","NVSTAR",14,0)
 S DIR(0)="YA"
"RTN","NVSTAR",15,0)
 S DIR("A")="Are you sure it is OK to continue? "
"RTN","NVSTAR",16,0)
 S DIR("?")="If you aren't sure, then you should abort, log a NOIS and get some assistance."
"RTN","NVSTAR",17,0)
 S DIR("B")="NO"
"RTN","NVSTAR",18,0)
 W ! D ^DIR K DIR
"RTN","NVSTAR",19,0)
 I Y'=1 D  Q
"RTN","NVSTAR",20,0)
 .W !,"ABORTED."
"RTN","NVSTAR",21,0)
 .K DIRUT,DTOUT,X,Y
"RTN","NVSTAR",22,0)
 ;
"RTN","NVSTAR",23,0)
 W !!,"If you encounter any problems using this software, please log a NOIS"
"RTN","NVSTAR",24,0)
 W !,"with your technical support team."
"RTN","NVSTAR",25,0)
 ;
"RTN","NVSTAR",26,0)
 W !!,"There is some documentation that describes what this software is about to do."
"RTN","NVSTAR",27,0)
 S DIR(0)="YA"
"RTN","NVSTAR",28,0)
 S DIR("A")="Would you like to see it? "
"RTN","NVSTAR",29,0)
 S DIR("B")="YES"
"RTN","NVSTAR",30,0)
 D ^DIR K DIR
"RTN","NVSTAR",31,0)
 I Y=1 D ^NVSTARH
"RTN","NVSTAR",32,0)
 K DIRUT,DTOUT,X,Y
"RTN","NVSTAR",33,0)
 ;
"RTN","NVSTAR",34,0)
 I '$D(DUZ) D
"RTN","NVSTAR",35,0)
 .S DUZ=.5
"RTN","NVSTAR",36,0)
 .S DUZ(0)="@"
"RTN","NVSTAR",37,0)
 .D DT^DICRW
"RTN","NVSTAR",38,0)
 .W "okay."
"RTN","NVSTAR",39,0)
 ;
"RTN","NVSTAR",40,0)
 ; get initial values...
"RTN","NVSTAR",41,0)
 K ^XTMP("NVSTAR")
"RTN","NVSTAR",42,0)
 S X1=$$DT^XLFDT()
"RTN","NVSTAR",43,0)
 S X2=+7
"RTN","NVSTAR",44,0)
 D C^%DTC
"RTN","NVSTAR",45,0)
 S NVSPDT=X
"RTN","NVSTAR",46,0)
 S ^XTMP("NVSTAR",0)=NVSPDT_"^"_$$DT^XLFDT()_"^EMC TEST ACCOUNT RESET UTILITIES"
"RTN","NVSTAR",47,0)
 K NVSPDT,X,X1,X2,Y
"RTN","NVSTAR",48,0)
 ;
"RTN","NVSTAR",49,0)
 I $G(^%ZOSF("UCI"))="" Q
"RTN","NVSTAR",50,0)
 X ^%ZOSF("UCI")
"RTN","NVSTAR",51,0)
 S ^XTMP("NVSTAR","NVSUCI")=Y
"RTN","NVSTAR",52,0)
 S ^XTMP("NVSTAR","NVSOPSYS")=$P($G(^%ZOSF("OS")),"^")
"RTN","NVSTAR",53,0)
 ;
"RTN","NVSTAR",54,0)
 ; ask user to select NULL DEVICE...
"RTN","NVSTAR",55,0)
 I $G(^XTMP("NVSTAR","NULL DEVICE"))="" D
"RTN","NVSTAR",56,0)
 .W !!,"I need to make sure I have the right $I for the NULL device."
"RTN","NVSTAR",57,0)
 .W !,"Please assist me by selecting the NULL device from the Device file"
"RTN","NVSTAR",58,0)
 .W !,"prompt below..."
"RTN","NVSTAR",59,0)
 .S DIR(0)="PA^3.5:QEFMZ"
"RTN","NVSTAR",60,0)
 .S DIR("A")="Select DEVICE: "
"RTN","NVSTAR",61,0)
 .W ! D ^DIR K DIR
"RTN","NVSTAR",62,0)
 .I $D(DIRUT) D  K DTOUT,DIRUT,^XTMP("NVSTAR","NULL DEVICE") Q
"RTN","NVSTAR",63,0)
 ..W !!,"Sorry, but you can't bypass this...aborting the reset."
"RTN","NVSTAR",64,0)
 ..W !,"Please take a look in your Device file (#3.5) and decide how to"
"RTN","NVSTAR",65,0)
 ..W !,"answer this prompt, and try again.  Thanks."
"RTN","NVSTAR",66,0)
 .W !!,"Thank you.  I'll use ",$P(Y(0),U,2)," for disabled print devices."
"RTN","NVSTAR",67,0)
 .S ^XTMP("NVSTAR","NULL DEVICE")=+Y_"^"_$P(Y(0),"^",2)
"RTN","NVSTAR",68,0)
 ;
"RTN","NVSTAR",69,0)
 I $G(^XTMP("NVSTAR","NULL DEVICE"))="" D  Q
"RTN","NVSTAR",70,0)
 .W $C(7)
"RTN","NVSTAR",71,0)
 .W !!,"NULL DEVICE was not selected.  This value is required."
"RTN","NVSTAR",72,0)
 .W !,"Process aborted."
"RTN","NVSTAR",73,0)
 .K ^XTMP("NVSTAR")
"RTN","NVSTAR",74,0)
 ;
"RTN","NVSTAR",75,0)
 S NVSUCI=$G(^XTMP("NVSTAR","NVSUCI"))
"RTN","NVSTAR",76,0)
 I NVSUCI="" D  Q
"RTN","NVSTAR",77,0)
 .W $C(7)
"RTN","NVSTAR",78,0)
 .W !!,"Error:  namespace/UCI is undefined."
"RTN","NVSTAR",79,0)
 .W !,"Process aborted."
"RTN","NVSTAR",80,0)
 S NVSOPSYS=$G(^XTMP("NVSTAR","NVSOPSYS"))
"RTN","NVSTAR",81,0)
 I NVSOPSYS="" D  Q
"RTN","NVSTAR",82,0)
 .W $C(7)
"RTN","NVSTAR",83,0)
 .W !!,"Error:  Operating system is undefined."
"RTN","NVSTAR",84,0)
 .W !,"Process aborted."
"RTN","NVSTAR",85,0)
 ;
"RTN","NVSTAR",86,0)
 W !!,"The current account is: ",NVSUCI
"RTN","NVSTAR",87,0)
 W !,"The operating system is: ",NVSOPSYS
"RTN","NVSTAR",88,0)
 ;
"RTN","NVSTAR",89,0)
 ; make sure we're in the right place to run this utility.  we'll use Kernel
"RTN","NVSTAR",90,0)
 ; to make the initial determination so that we cover both ISM and DSM systems.
"RTN","NVSTAR",91,0)
 ; we'll check the uci to see if it contains VAH...
"RTN","NVSTAR",92,0)
 S NVSUCIOK=0
"RTN","NVSTAR",93,0)
 I NVSOPSYS["DSM" S NVSUCIOK=$S($P(NVSUCI,",",2)'="ROU":1,1:0)
"RTN","NVSTAR",94,0)
 I NVSOPSYS["OpenM" S NVSUCIOK=$S($P(NVSUCI,",")'="VAH":1,1:0)
"RTN","NVSTAR",95,0)
 I NVSUCIOK'=1 D  I $D(DIRUT) K DTOUT,DIRUT Q
"RTN","NVSTAR",96,0)
 .W $C(7)
"RTN","NVSTAR",97,0)
 .W !!,"** WARNING :: WARNING :: WARNING **"
"RTN","NVSTAR",98,0)
 .W !!,"This account/namespace (",NVSUCI,") does NOT appear to be your Test system!!"
"RTN","NVSTAR",99,0)
 .W !,"Running ANY of the reset procedures on your production account WILL DEFINITELY"
"RTN","NVSTAR",100,0)
 .W !,"CAUSE YOU MAJOR PROBLEMS."
"RTN","NVSTAR",101,0)
 .S DIR(0)="YA"
"RTN","NVSTAR",102,0)
 .S DIR("A")="Are you ABSOLUTELY SURE you wish to continue? "
"RTN","NVSTAR",103,0)
 .S DIR("B")="NO"
"RTN","NVSTAR",104,0)
 .W ! D ^DIR K DIR
"RTN","NVSTAR",105,0)
 .I Y'=1 S DIRUT=1 W !,"Aborted!" Q
"RTN","NVSTAR",106,0)
 .W !,"Okay, continuing..."
"RTN","NVSTAR",107,0)
 K NVSUCIOK
"RTN","NVSTAR",108,0)
 ;
"RTN","NVSTAR",109,0)
 ; get user choice on completion tasks...
"RTN","NVSTAR",110,0)
 I $G(^XTMP("NVSTAR","LOGINS"))'="YES" D
"RTN","NVSTAR",111,0)
 .W !!,"When the Reset Utility starts, logins will be disabled in the Volume"
"RTN","NVSTAR",112,0)
 .W !,"Set file (#14.5).  Logins will NOT be automatically re-enabled unless"
"RTN","NVSTAR",113,0)
 .W !,"you say so..."
"RTN","NVSTAR",114,0)
 .S DIR(0)="YA"
"RTN","NVSTAR",115,0)
 .S DIR("A")="Okay to re-enable logins when the Utility finishes? "
"RTN","NVSTAR",116,0)
 .S DIR("B")="NO"
"RTN","NVSTAR",117,0)
 .W ! D ^DIR K DIR
"RTN","NVSTAR",118,0)
 .I Y'=1 W !?2,"Logins will NOT be re-enabled."
"RTN","NVSTAR",119,0)
 .I Y=1 D
"RTN","NVSTAR",120,0)
 ..S ^XTMP("NVSTAR","LOGINS")="YES"
"RTN","NVSTAR",121,0)
 ..W !?2,"Logins will be re-enabled when reset is complete."
"RTN","NVSTAR",122,0)
 .K DIRUT,DTOUT,X,Y
"RTN","NVSTAR",123,0)
 ;
"RTN","NVSTAR",124,0)
 ; warn DSM site user regarding the deletion and reset of the ^%Z* globals...
"RTN","NVSTAR",125,0)
 I NVSOPSYS["DSM" D
"RTN","NVSTAR",126,0)
 .W !!,"Note to DSM sites regarding ^%Z* global deletion and reset:"
"RTN","NVSTAR",127,0)
 .W !!,"In Part 5 of this Utility (routine ^NVSTAR5), the Task Manager globals"
"RTN","NVSTAR",128,0)
 .W !,"^%ZTSK and ^%ZTSCH will be completely deleted and their top-level nodes"
"RTN","NVSTAR",129,0)
 .W !,"reset.  Additionally, the error trap global ^%ZTER(1) is deleted in routine"
"RTN","NVSTAR",130,0)
 .W !,"^NVSTAR0.  Finally, the FAILED ACCESS ATTEMPTS global ^%ZUA(3.05), and the"
"RTN","NVSTAR",131,0)
 .W !,"PROGRAMMER MODE LOG global ^%ZUA(3.07) will all be cleaned out and reset."
"RTN","NVSTAR",132,0)
 .W !!,"You should check the protection settings on all these globals and temporarily"
"RTN","NVSTAR",133,0)
 .W !,"set them such that this procedure can succeed.  Without this temporary"
"RTN","NVSTAR",134,0)
 .W !,"change, you will get protection errors when the Utility tries to KILL"
"RTN","NVSTAR",135,0)
 .W !,"and/or reset these globals."
"RTN","NVSTAR",136,0)
 .W !!,"Please refer to the AXP Team's document on mirror account reset for"
"RTN","NVSTAR",137,0)
 .W !,"further information.  If you have any questions about this, please log"
"RTN","NVSTAR",138,0)
 .W !,"a NOIS and request clarification."
"RTN","NVSTAR",139,0)
 ;
"RTN","NVSTAR",140,0)
 ; okay to go?...
"RTN","NVSTAR",141,0)
 S DIR(0)="YA"
"RTN","NVSTAR",142,0)
 S DIR("A")="I'm all set...okay to continue? "
"RTN","NVSTAR",143,0)
 W !
"RTN","NVSTAR",144,0)
 D ^DIR K DIR
"RTN","NVSTAR",145,0)
 I Y'=1 D  Q
"RTN","NVSTAR",146,0)
 .W !!,"ABORTED!"
"RTN","NVSTAR",147,0)
 .K NVSOPSYS,NVSUCI,^XTMP("NVSTAR")
"RTN","NVSTAR",148,0)
 ;
"RTN","NVSTAR",149,0)
 ; is TaskMan running?...
"RTN","NVSTAR",150,0)
 I $$TM^%ZTLOAD() D
"RTN","NVSTAR",151,0)
 .W !!,"TaskMan is running...stopping him now..."
"RTN","NVSTAR",152,0)
 .S NVSX=0
"RTN","NVSTAR",153,0)
 .F  S NVSX=$O(^%ZTSCH("STATUS",NVSX)) Q:'NVSX  D
"RTN","NVSTAR",154,0)
 ..S NODE=$P(^%ZTSCH("STATUS",NVSX),"^",3)
"RTN","NVSTAR",155,0)
 ..D GROUP^ZTMKU("SMAN(NODE)")
"RTN","NVSTAR",156,0)
 ..D GROUP^ZTMKU("SSUB(NODE)")
"RTN","NVSTAR",157,0)
 .K ^%ZTSCH("UPDATE"),NODE,NVSX
"RTN","NVSTAR",158,0)
 .W "done."
"RTN","NVSTAR",159,0)
 ;
"RTN","NVSTAR",160,0)
 S ^XTMP("NVSTAR","START")=$$NOW^XLFDT()
"RTN","NVSTAR",161,0)
 W @IOF
"RTN","NVSTAR",162,0)
 W !!,"-TEST ACCOUNT RESET UTILITIES-"
"RTN","NVSTAR",163,0)
 W !," Started ",$$FMTE^XLFDT(^XTMP("NVSTAR","START"))
"RTN","NVSTAR",164,0)
 ;
"RTN","NVSTAR",165,0)
 ; disable logins...
"RTN","NVSTAR",166,0)
 W !!,"DISABLE LOGINS..."
"RTN","NVSTAR",167,0)
 D DISABL^NVSTAR8
"RTN","NVSTAR",168,0)
 W "done."
"RTN","NVSTAR",169,0)
 ;
"RTN","NVSTAR",170,0)
 ; clean out the existing error trap...
"RTN","NVSTAR",171,0)
 D CETRAP^NVSTAR0
"RTN","NVSTAR",172,0)
 ;
"RTN","NVSTAR",173,0)
 ; check for existence of ^XMB("TIMEDIFF").  if undefined, ask user to fix it...
"RTN","NVSTAR",174,0)
 D TZ^NVSTAR0
"RTN","NVSTAR",175,0)
 ;
"RTN","NVSTAR",176,0)
 ; patient file x-refs...
"RTN","NVSTAR",177,0)
 D PXREF^NVSTAR0
"RTN","NVSTAR",178,0)
 ;
"RTN","NVSTAR",179,0)
 ; Kernel system parameters...
"RTN","NVSTAR",180,0)
 D ^NVSTAR1
"RTN","NVSTAR",181,0)
 ;
"RTN","NVSTAR",182,0)
 ; Close all mailman domains...
"RTN","NVSTAR",183,0)
 D ^NVSTAR2
"RTN","NVSTAR",184,0)
 ;
"RTN","NVSTAR",185,0)
 ; disable printers...
"RTN","NVSTAR",186,0)
 D ^NVSTAR3
"RTN","NVSTAR",187,0)
 ;
"RTN","NVSTAR",188,0)
 ; Clean up HL7, CIRN and MPI data and parameters...
"RTN","NVSTAR",189,0)
 D RAIMDS^NVSTAR4
"RTN","NVSTAR",190,0)
 D HL7^NVSTAR4
"RTN","NVSTAR",191,0)
 D HLCS^NVSTAR4
"RTN","NVSTAR",192,0)
 D HLL^NVSTAR4
"RTN","NVSTAR",193,0)
 D HLMA^NVSTAR4
"RTN","NVSTAR",194,0)
 D DELMPI^NVSTAR4
"RTN","NVSTAR",195,0)
 ;
"RTN","NVSTAR",196,0)
 ; reset kernel and taskman data and parameters...
"RTN","NVSTAR",197,0)
 D ^NVSTAR5
"RTN","NVSTAR",198,0)
 ;
"RTN","NVSTAR",199,0)
 ; reset rpc broker parameters...
"RTN","NVSTAR",200,0)
 D BROKER^NVSTAR6
"RTN","NVSTAR",201,0)
 ;
"RTN","NVSTAR",202,0)
 ; clear alerts from the alert file...
"RTN","NVSTAR",203,0)
 D ALERTS^NVSTAR6
"RTN","NVSTAR",204,0)
 ;
"RTN","NVSTAR",205,0)
 ; clean up network mail...
"RTN","NVSTAR",206,0)
 D ^NVSTAR7
"RTN","NVSTAR",207,0)
 ;
"RTN","NVSTAR",208,0)
 ; re-enable logins if appropriate...
"RTN","NVSTAR",209,0)
 I $G(^XTMP("NVSTAR","LOGINS"))'="YES" D
"RTN","NVSTAR",210,0)
 .W !!,"**LOGINS NOT RE-ENABLED**"
"RTN","NVSTAR",211,0)
 I $G(^XTMP("NVSTAR","LOGINS"))="YES" D
"RTN","NVSTAR",212,0)
 .D ^NVSTAR8
"RTN","NVSTAR",213,0)
 .W !!,"LOGINS RE-ENABLED"
"RTN","NVSTAR",214,0)
 ;
"RTN","NVSTAR",215,0)
 K NVSOPSYS,NVSUCI
"RTN","NVSTAR",216,0)
 S ^XTMP("NVSTAR","END")=$$NOW^XLFDT()
"RTN","NVSTAR",217,0)
 W !!,"-TEST ACCOUNT RESET UTILITIES-"
"RTN","NVSTAR",218,0)
 W !," Started:   ",$$FMTE^XLFDT(^XTMP("NVSTAR","START"))
"RTN","NVSTAR",219,0)
 W !," Completed: ",$$FMTE^XLFDT(^XTMP("NVSTAR","END"))
"RTN","NVSTAR",220,0)
 K ^XTMP("NVSTAR")
"RTN","NVSTAR",221,0)
 ;
"RTN","NVSTAR",222,0)
 S DIR(0)="YA"
"RTN","NVSTAR",223,0)
 S DIR("A")="Would you like to run the Mail Message Purge procedure? "
"RTN","NVSTAR",224,0)
 S DIR("B")="NO"
"RTN","NVSTAR",225,0)
 W !
"RTN","NVSTAR",226,0)
 D ^DIR K DIR
"RTN","NVSTAR",227,0)
 I +Y'=1 D
"RTN","NVSTAR",228,0)
 .W !!,"You can run this separately later if you wish."
"RTN","NVSTAR",229,0)
 .W !,"The routine name is ^NVSMMP."
"RTN","NVSTAR",230,0)
 I +Y=1 D ^NVSMMP
"RTN","NVSTAR",231,0)
 K DIRUT,DTOUT,X,Y
"RTN","NVSTAR",232,0)
 Q
"RTN","NVSTAR0")
0^48^B10588595
"RTN","NVSTAR0",1,0)
NVSTAR0 ;emc/maw-clean up Patient file x-refs ;09/01/02
"RTN","NVSTAR0",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSTAR0",3,0)
 ;
"RTN","NVSTAR0",4,0)
CETRAP ; clean out/reset the existing error global...
"RTN","NVSTAR0",5,0)
 W !!,"DELETING AND RESETTING ERROR GLOBAL ^%ZTER(1,...)..."
"RTN","NVSTAR0",6,0)
 K ^%ZTER(1)
"RTN","NVSTAR0",7,0)
 S ^%ZTER(1,0)="ERROR LOG^3.075^^"
"RTN","NVSTAR0",8,0)
 W "done."
"RTN","NVSTAR0",9,0)
 Q
"RTN","NVSTAR0",10,0)
 ;
"RTN","NVSTAR0",11,0)
PXREF ; clean up Patient file x-refs that contain triggers in the event edits
"RTN","NVSTAR0",12,0)
 ; are made to various patient file fields...
"RTN","NVSTAR0",13,0)
 W !!,"DELETING SELECTED TRIGGER CROSS REFERENCES IN THE PATIENT FILE"
"RTN","NVSTAR0",14,0)
 N NVSCHK,NVSFLD,X,Y
"RTN","NVSTAR0",15,0)
 W !?2,"NAME field (.01), xref 301..."
"RTN","NVSTAR0",16,0)
 I '$D(^DD(2,.01,1,301)) W "already deleted."
"RTN","NVSTAR0",17,0)
 I $D(^DD(2,.01,1,301)) D
"RTN","NVSTAR0",18,0)
 .D DELIX^DDMOD(2,.01,301,"W")
"RTN","NVSTAR0",19,0)
 .W !?2,"Done."
"RTN","NVSTAR0",20,0)
 W !?2,"NAME field (.01), xref 991..."
"RTN","NVSTAR0",21,0)
 I '$D(^DD(2,.01,1,991)) W "already deleted."
"RTN","NVSTAR0",22,0)
 I $D(^DD(2,.01,1,991)) D
"RTN","NVSTAR0",23,0)
 .D DELIX^DDMOD(2,.01,991,"W")
"RTN","NVSTAR0",24,0)
 .W !?2,"Done."
"RTN","NVSTAR0",25,0)
 W !?2,"NAME field (.01), xref 992..."
"RTN","NVSTAR0",26,0)
 I '$D(^DD(2,.01,1,992)) W "already deleted."
"RTN","NVSTAR0",27,0)
 I $D(^DD(2,.01,1,992)) D
"RTN","NVSTAR0",28,0)
 .D DELIX^DDMOD(2,.01,992,"W")
"RTN","NVSTAR0",29,0)
 .W !?2,"Done."
"RTN","NVSTAR0",30,0)
 W !?2,"NAME field (.01), xref 993..."
"RTN","NVSTAR0",31,0)
 I '$D(^DD(2,.01,1,993)) W "already deleted."
"RTN","NVSTAR0",32,0)
 I $D(^DD(2,.01,1,993)) D
"RTN","NVSTAR0",33,0)
 .D DELIX^DDMOD(2,.01,993,"W")
"RTN","NVSTAR0",34,0)
 .W !?2,"Done."
"RTN","NVSTAR0",35,0)
 W !?2,"SSN field (.09), xref 9..."
"RTN","NVSTAR0",36,0)
 I '$D(^DD(2,.01,1,9)) W "already deleted."
"RTN","NVSTAR0",37,0)
 I $D(^DD(2,.01,1,9)) D
"RTN","NVSTAR0",38,0)
 .D DELIX^DDMOD(2,.09,9,"W")
"RTN","NVSTAR0",39,0)
 .W !?2,"Done."
"RTN","NVSTAR0",40,0)
 W !?2,"SSN field (.09), xref 301..."
"RTN","NVSTAR0",41,0)
 I '$D(^DD(2,.09,1,301)) W "already deleted."
"RTN","NVSTAR0",42,0)
 I $D(^DD(2,.09,1,301)) D
"RTN","NVSTAR0",43,0)
 .D DELIX^DDMOD(2,.09,301,"W")
"RTN","NVSTAR0",44,0)
 .W !?2,"Done."
"RTN","NVSTAR0",45,0)
 W !?2,"SSN field (.09), xref 991..."
"RTN","NVSTAR0",46,0)
 I '$D(^DD(2,.09,1,991)) W "already deleted."
"RTN","NVSTAR0",47,0)
 I $D(^DD(2,.09,1,991)) D
"RTN","NVSTAR0",48,0)
 .D DELIX^DDMOD(2,.09,991,"W")
"RTN","NVSTAR0",49,0)
 .W !?2,"Done."
"RTN","NVSTAR0",50,0)
 W !?2,"SSN field (.09), xref 992..."
"RTN","NVSTAR0",51,0)
 I '$D(^DD(2,.09,1,992)) W "already deleted."
"RTN","NVSTAR0",52,0)
 I $D(^DD(2,.09,1,992)) D
"RTN","NVSTAR0",53,0)
 .D DELIX^DDMOD(2,.09,992,"W")
"RTN","NVSTAR0",54,0)
 .W !?2,"Done."
"RTN","NVSTAR0",55,0)
 W !?2,"Now, searching Patient file DD to delete"
"RTN","NVSTAR0",56,0)
 W !?4,"any other AVAF* (#991) x-refs..."
"RTN","NVSTAR0",57,0)
 S (NVSCHK,NVSFLD)=0
"RTN","NVSTAR0",58,0)
 F  S NVSFLD=$O(^DD(2,NVSFLD)) Q:'NVSFLD  D
"RTN","NVSTAR0",59,0)
 .I '$D(^DD(2,NVSFLD,1,991)) Q
"RTN","NVSTAR0",60,0)
 .W !?2,$P(^DD(2,NVSFLD,0),"^")," field (",NVSFLD,")..."
"RTN","NVSTAR0",61,0)
 .D DELIX^DDMOD(2,NVSFLD,991,"W")
"RTN","NVSTAR0",62,0)
 .W !?2,"Done."
"RTN","NVSTAR0",63,0)
 .S NVSCHK=NVSCHK+1
"RTN","NVSTAR0",64,0)
 I NVSCHK=0 W "already deleted."
"RTN","NVSTAR0",65,0)
 Q
"RTN","NVSTAR0",66,0)
 ;
"RTN","NVSTAR0",67,0)
TZ ; if ^XMB("TIMEDIFF") is undefined, come here to fix...
"RTN","NVSTAR0",68,0)
 W !!,"CHECK/VERIFY TIME ZONE AND TIME DIFFERENTIAL SETTINGS"
"RTN","NVSTAR0",69,0)
 N DA,DIE,DIR,DIRUT,DR,DTOUT,NVSOK,NVSTZ,NVSTZN,X,Y
"RTN","NVSTAR0",70,0)
 ; if TIME ZONE is defined, use it to reset ^XMB("TIMEDIFF") and quit...
"RTN","NVSTAR0",71,0)
 S NVSTZ=$G(^XMB("TIMEZONE"))
"RTN","NVSTAR0",72,0)
 W !,"Current time zone is ",NVSTZ
"RTN","NVSTAR0",73,0)
 S DIR(0)="YA"
"RTN","NVSTAR0",74,0)
 S DIR("A")="Is this correct? "
"RTN","NVSTAR0",75,0)
 S DIR("B")="YES"
"RTN","NVSTAR0",76,0)
 D ^DIR K DIR
"RTN","NVSTAR0",77,0)
 K DIRUT,DTOUT
"RTN","NVSTAR0",78,0)
 S NVSOK=Y
"RTN","NVSTAR0",79,0)
 I NVSOK=1 D TZEDIT(NVSTZ)
"RTN","NVSTAR0",80,0)
 I NVSOK'=1 D
"RTN","NVSTAR0",81,0)
 .S DIR(0)="PA^4.4:QEFMZ"
"RTN","NVSTAR0",82,0)
 .S DIR("A")="Select CURRENT TIME ZONE: "
"RTN","NVSTAR0",83,0)
 .W ! D ^DIR K DIR
"RTN","NVSTAR0",84,0)
 .I $D(DIRUT) K DIRUT,DTOUT,X,Y Q
"RTN","NVSTAR0",85,0)
 .S NVSTZN=Y(0,0)
"RTN","NVSTAR0",86,0)
 .D TZEDIT(NVSTZN)
"RTN","NVSTAR0",87,0)
 W !?2,"Time Zone: ",$G(^XMB("TIMEZONE"),"**UNDEFINED**")
"RTN","NVSTAR0",88,0)
 W !?2,"Time Diff: ",$G(^XMB("TIMEDIFF"),"**UNDEFINED**")
"RTN","NVSTAR0",89,0)
 Q
"RTN","NVSTAR0",90,0)
 ;
"RTN","NVSTAR0",91,0)
TZEDIT(ZONE) ; edit time zone and time differential...
"RTN","NVSTAR0",92,0)
 N DA,DIE,DR,NVSTZN
"RTN","NVSTAR0",93,0)
 S NVSTZN=ZONE
"RTN","NVSTAR0",94,0)
 S DIE="^XMB(1,"
"RTN","NVSTAR0",95,0)
 S DA=+^XMB(1,1,0)
"RTN","NVSTAR0",96,0)
 S DR="1///^S X=NVSTZN"
"RTN","NVSTAR0",97,0)
 D ^DIE
"RTN","NVSTAR0",98,0)
 Q
"RTN","NVSTAR1")
0^49^B88766773
"RTN","NVSTAR1",1,0)
NVSTAR1 ;emc/maw-reset various kernel system parameters ;09/01/02
"RTN","NVSTAR1",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSTAR1",3,0)
 ;
"RTN","NVSTAR1",4,0)
 W !!,"RESET KERNEL SYSTEM PARAMETERS"
"RTN","NVSTAR1",5,0)
 ; check the integrity of the Kernel Site Parameters file...repair if needed...
"RTN","NVSTAR1",6,0)
 W !?2,"Integrity of Kernel Site Parameters file..."
"RTN","NVSTAR1",7,0)
 S NVSX=$O(^XMB(1,0))
"RTN","NVSTAR1",8,0)
 I NVSX'=1 D
"RTN","NVSTAR1",9,0)
 .S %X="^XMB(1,"_NVSX_","
"RTN","NVSTAR1",10,0)
 .S %Y="^XMB(1,1,"
"RTN","NVSTAR1",11,0)
 .D %XY^%RCR
"RTN","NVSTAR1",12,0)
 .S DA=NVSX
"RTN","NVSTAR1",13,0)
 .S DIK="^XMB(1,"
"RTN","NVSTAR1",14,0)
 .D ^DIK
"RTN","NVSTAR1",15,0)
 .K %X,%Y,DA,DIK,X,Y
"RTN","NVSTAR1",16,0)
 W "okay."
"RTN","NVSTAR1",17,0)
 K NVSX
"RTN","NVSTAR1",18,0)
 ;
"RTN","NVSTAR1",19,0)
 ; get data about the current domain set up...
"RTN","NVSTAR1",20,0)
 S NVSDATA=$G(^XMB(1,1,0))
"RTN","NVSTAR1",21,0)
 I NVSDATA="" D  Q
"RTN","NVSTAR1",22,0)
 .W $C(7)
"RTN","NVSTAR1",23,0)
 .W !,"ERROR: There is no usable or existing Kernel Site Parameters file!"
"RTN","NVSTAR1",24,0)
 .W !,"ABORTED!"
"RTN","NVSTAR1",25,0)
 .K NVSDATA
"RTN","NVSTAR1",26,0)
 ;
"RTN","NVSTAR1",27,0)
 ; the variable NVSTHISY will equal the pointer (record number) of the
"RTN","NVSTAR1",28,0)
 ; *current* domain name from the DOMAIN file...
"RTN","NVSTAR1",29,0)
 S NVSTHISY=+NVSDATA
"RTN","NVSTAR1",30,0)
 S NVSTHIS=$P($G(^DIC(4.2,NVSTHISY,0)),U)
"RTN","NVSTAR1",31,0)
 W !?2,"Checking/resetting this system's domain name..."
"RTN","NVSTAR1",32,0)
 I NVSTHIS="" D  Q
"RTN","NVSTAR1",33,0)
 .W $C(7)
"RTN","NVSTAR1",34,0)
 .W !?4,"ERROR: Domain file entry for this domain is missing!!"
"RTN","NVSTAR1",35,0)
 .W !?4,"**DOMAIN NAME RESET ABORTED**"
"RTN","NVSTAR1",36,0)
 .K NVSDATA,NVSTHIS,NVSTHISY
"RTN","NVSTAR1",37,0)
 ;
"RTN","NVSTAR1",38,0)
 W !?4,"The Domain file record number pointer at $P(^XMB(1,1,0),""^"",1) = ",NVSTHISY
"RTN","NVSTAR1",39,0)
 W !?4,"The NAME field for this record = ",NVSTHIS
"RTN","NVSTAR1",40,0)
 I $P(NVSTHIS,".")="TEST"!($P(NVSTHIS,".")="TST") W !?4,"This is correct -- no changes will be made."
"RTN","NVSTAR1",41,0)
 ;
"RTN","NVSTAR1",42,0)
 ; if the *current* domain name isn't already TEST.domain OR TST.domain, then we'll need to
"RTN","NVSTAR1",43,0)
 ; make sure we have one (i.e., one called TEST.domain) in the Domain file.  We'll
"RTN","NVSTAR1",44,0)
 ; then need to swap that created TEST.domain with the *current* domain record in
"RTN","NVSTAR1",45,0)
 ; order to create a domain that is TEST.domain.  If, however, the *current* domain
"RTN","NVSTAR1",46,0)
 ; already contains TEST.domain, then we do nothing (everything is already done)...
"RTN","NVSTAR1",47,0)
 I $P(NVSTHIS,".")'="TEST"&($P(NVSTHIS,".")'="TST") D
"RTN","NVSTAR1",48,0)
 .S (NVSTEST,X)="TEST."_NVSTHIS
"RTN","NVSTAR1",49,0)
 .S X=NVSTEST
"RTN","NVSTAR1",50,0)
 .S DIC="^DIC(4.2,"
"RTN","NVSTAR1",51,0)
 .S DIC(0)="MZ"
"RTN","NVSTAR1",52,0)
 .D ^DIC
"RTN","NVSTAR1",53,0)
 .K DIC
"RTN","NVSTAR1",54,0)
 .S NVSTESTY=+Y
"RTN","NVSTAR1",55,0)
 .;
"RTN","NVSTAR1",56,0)
 .; if NVSTESTY'>0 then the first ^DIC lookup failed.  Let's try it with "TST."...
"RTN","NVSTAR1",57,0)
 .I NVSTESTY'>0 D
"RTN","NVSTAR1",58,0)
 ..S (NVSTEST,X)="TST."_NVSTHIS
"RTN","NVSTAR1",59,0)
 ..S DIC="^DIC(4.2,"
"RTN","NVSTAR1",60,0)
 ..S DIC(0)="MZ"
"RTN","NVSTAR1",61,0)
 ..D ^DIC
"RTN","NVSTAR1",62,0)
 ..K DIC
"RTN","NVSTAR1",63,0)
 ..S NVSTESTY=+Y
"RTN","NVSTAR1",64,0)
 .;
"RTN","NVSTAR1",65,0)
 .; if NVSTESTY'>0 then both ^DIC lookups failed.  We need to create a stub TEST.domain
"RTN","NVSTAR1",66,0)
 .; record entry...
"RTN","NVSTAR1",67,0)
 .I NVSTESTY'>0 D
"RTN","NVSTAR1",68,0)
 ..L +^DIC(4.2,0):5
"RTN","NVSTAR1",69,0)
 ..I '$T D  Q
"RTN","NVSTAR1",70,0)
 ...W $C(7)
"RTN","NVSTAR1",71,0)
 ...W !!?4,"ERROR: Unable to create an entry in the Domain file for"
"RTN","NVSTAR1",72,0)
 ...W !?4,"TEST.",NVSTHIS,"!"
"RTN","NVSTAR1",73,0)
 ..S NVSTESTY=+$P(^DIC(4.2,0),U,3)+1
"RTN","NVSTAR1",74,0)
 ..S NVSX=+$P(^DIC(4.2,0),U,4)+1
"RTN","NVSTAR1",75,0)
 ..S $P(^DIC(4.2,0),U,3)=NVSTESTY
"RTN","NVSTAR1",76,0)
 ..S $P(^DIC(4.2,0),U,4)=NVSX
"RTN","NVSTAR1",77,0)
 ..S $P(^DIC(4.2,NVSTESTY,0),U)="TEST."_NVSTHIS_"^C"
"RTN","NVSTAR1",78,0)
 ..S ^DIC(4.2,"B","TEST."_NVSTHIS,NVSTESTY)=""
"RTN","NVSTAR1",79,0)
 ..K NVSX
"RTN","NVSTAR1",80,0)
 ..L -^DIC(4.2,0)
"RTN","NVSTAR1",81,0)
 .;
"RTN","NVSTAR1",82,0)
 .; we now have both the domains we need.  next, swap their entire records...
"RTN","NVSTAR1",83,0)
 .K NVSTHIS1,NVSTEST1
"RTN","NVSTAR1",84,0)
 .; merge the current domain record into NVSTHIS1...
"RTN","NVSTAR1",85,0)
 .M NVSTHIS1=^DIC(4.2,NVSTHISY)
"RTN","NVSTAR1",86,0)
 .; merge the test domain record into NVSTEST1...
"RTN","NVSTAR1",87,0)
 .M NVSTEST1=^DIC(4.2,NVSTESTY)
"RTN","NVSTAR1",88,0)
 .; delete the current and test domain file records...
"RTN","NVSTAR1",89,0)
 .F NVSX=NVSTHISY,NVSTESTY D
"RTN","NVSTAR1",90,0)
 ..S DA=NVSX
"RTN","NVSTAR1",91,0)
 ..S DIK="^DIC(4.2,"
"RTN","NVSTAR1",92,0)
 ..D ^DIK
"RTN","NVSTAR1",93,0)
 .; merge the test domain into the current domain record number...
"RTN","NVSTAR1",94,0)
 .M ^DIC(4.2,NVSTHISY)=NVSTEST1
"RTN","NVSTAR1",95,0)
 .; merge the current domain into the test domain record number...
"RTN","NVSTAR1",96,0)
 .M ^DIC(4.2,NVSTESTY)=NVSTHIS1
"RTN","NVSTAR1",97,0)
 .; re-index just these two records...
"RTN","NVSTAR1",98,0)
 .F NVSX=NVSTHISY,NVSTESTY D
"RTN","NVSTAR1",99,0)
 ..S DA=NVSX
"RTN","NVSTAR1",100,0)
 ..S DIK="^DIC(4.2,"
"RTN","NVSTAR1",101,0)
 ..D IX1^DIK
"RTN","NVSTAR1",102,0)
 .;
"RTN","NVSTAR1",103,0)
 .; reset domain names so: NVSTHIS now = TEST.domain,
"RTN","NVSTAR1",104,0)
 .;                    and NVSTEST now = production.domain...
"RTN","NVSTAR1",105,0)
 .S NVSTHIS=$P(^DIC(4.2,NVSTHISY,0),U)
"RTN","NVSTAR1",106,0)
 .S NVSTEST=$P(^DIC(4.2,NVSTESTY,0),U)
"RTN","NVSTAR1",107,0)
 .;
"RTN","NVSTAR1",108,0)
 .; edit ^XMB("NAME") and ^XMB("NETNAME") to our *new* TEST.domain name...
"RTN","NVSTAR1",109,0)
 .; reference: KSP^XMYPOST2...
"RTN","NVSTAR1",110,0)
 .S (^XMB("NAME"),^XMB("NETNAME"))=NVSTHIS
"RTN","NVSTAR1",111,0)
 .;
"RTN","NVSTAR1",112,0)
 .W !?4,"Renamed the Domain file record ",NVSTHISY," NAME field to ",NVSTHIS
"RTN","NVSTAR1",113,0)
 .;
"RTN","NVSTAR1",114,0)
 .S DIE="^XMB(1,"
"RTN","NVSTAR1",115,0)
 .S DA=1
"RTN","NVSTAR1",116,0)
 .S DR="3///^S X=NVSTEST"
"RTN","NVSTAR1",117,0)
 .D ^DIE
"RTN","NVSTAR1",118,0)
 .K DA,DIE,DR,X,Y
"RTN","NVSTAR1",119,0)
 .;
"RTN","NVSTAR1",120,0)
 .; remove any relay domain for production domain (NVSTEST)...
"RTN","NVSTAR1",121,0)
 .W !!?2,"Removing any relay domains..."
"RTN","NVSTAR1",122,0)
 .I $P(^DIC(4.2,NVSTESTY,0),U,2)="" W !?2,"None found."
"RTN","NVSTAR1",123,0)
 .I $P(^DIC(4.2,NVSTESTY,0),U,2)'="" D
"RTN","NVSTAR1",124,0)
 ..S DIE=4.2
"RTN","NVSTAR1",125,0)
 ..S DA=NVSTESTY
"RTN","NVSTAR1",126,0)
 ..S DR="2///@"
"RTN","NVSTAR1",127,0)
 ..D ^DIE
"RTN","NVSTAR1",128,0)
 ..K DA,DIE,DR,X,Y
"RTN","NVSTAR1",129,0)
 ..W !?4,"Relay domain entry in ",NVSTEST," deleted."
"RTN","NVSTAR1",130,0)
 .;
"RTN","NVSTAR1",131,0)
 .; remove any synonyms for the TEST.sitename record...
"RTN","NVSTAR1",132,0)
 .W !!?2,"Removing any synonyms..."
"RTN","NVSTAR1",133,0)
 .I '$O(^DIC(4.2,NVSTESTY,2,0)) W !?2,"None found."
"RTN","NVSTAR1",134,0)
 .I $O(^DIC(4.2,NVSTESTY,2,0)) D
"RTN","NVSTAR1",135,0)
 ..S NVSX=0
"RTN","NVSTAR1",136,0)
 ..F  S NVSX=$O(^DIC(4.2,NVSTESTY,2,NVSX)) Q:'NVSX  D
"RTN","NVSTAR1",137,0)
 ...W !?4,$G(^DIC(4.2,NVSTESTY,2,NVSX,0))
"RTN","NVSTAR1",138,0)
 ...S DA=NVSX
"RTN","NVSTAR1",139,0)
 ...S DA(1)=NVSTESTY
"RTN","NVSTAR1",140,0)
 ...S DIK="^DIC(4.2,"_DA(1)_",2,"
"RTN","NVSTAR1",141,0)
 ...D ^DIK
"RTN","NVSTAR1",142,0)
 ...W "...deleted."
"RTN","NVSTAR1",143,0)
 ..K DA,DIK,NVSX
"RTN","NVSTAR1",144,0)
 ; 
"RTN","NVSTAR1",145,0)
 ; Cache system-specific changes to ^XMB(1,1,0), and Taskman files 14.5 and 14.7...
"RTN","NVSTAR1",146,0)
 ; Note:  changes are made to DSM systems later in this routine.
"RTN","NVSTAR1",147,0)
 I NVSOPSYS["OpenM" D
"RTN","NVSTAR1",148,0)
 .I $P(^XMB(1,1,0),U,12)="TST" Q
"RTN","NVSTAR1",149,0)
 .S DIE="^XMB(1,"
"RTN","NVSTAR1",150,0)
 .S DA=1
"RTN","NVSTAR1",151,0)
 .S DR="7.5///^S X=""TST"""
"RTN","NVSTAR1",152,0)
 .D ^DIE
"RTN","NVSTAR1",153,0)
 .K DA,DIE,DR,X,Y
"RTN","NVSTAR1",154,0)
 .;
"RTN","NVSTAR1",155,0)
 .W !?2,"MailMan's ""CPU (UCI,VOL) FOR FILER TO RUN"" field reset to ""TST""."
"RTN","NVSTAR1",156,0)
 .;
"RTN","NVSTAR1",157,0)
 .; reset TaskMan Files UCI field in file 14.5 (OpenM/Cache only)...
"RTN","NVSTAR1",158,0)
 .S NVSX=+$O(^%ZIS(14.5,"B","ROU",0))
"RTN","NVSTAR1",159,0)
 .I 'NVSX D
"RTN","NVSTAR1",160,0)
 ..W $C(7)
"RTN","NVSTAR1",161,0)
 ..S (DIC,DLAYGO)=14.5
"RTN","NVSTAR1",162,0)
 ..S DIC(0)="L"
"RTN","NVSTAR1",163,0)
 ..S X="ROU"
"RTN","NVSTAR1",164,0)
 ..D ^DIC
"RTN","NVSTAR1",165,0)
 ..K DIC,DLAYGO
"RTN","NVSTAR1",166,0)
 ..S NVSX=+Y
"RTN","NVSTAR1",167,0)
 ..I NVSX'>0 D
"RTN","NVSTAR1",168,0)
 ...W $C(7)
"RTN","NVSTAR1",169,0)
 ...W !,"ERROR: No ""ROU"" entry found nor could be added to Volume Set file"
"RTN","NVSTAR1",170,0)
 ...K X,Y,NVSX
"RTN","NVSTAR1",171,0)
 ..K X,Y
"RTN","NVSTAR1",172,0)
 .I NVSX>0 D
"RTN","NVSTAR1",173,0)
 ..S $P(^%ZIS(14.5,NVSX,0),U,6)="TST"
"RTN","NVSTAR1",174,0)
 ..W !?2,"File 14.5, ""TaskMan Files UCI"" field reset to ""TST""."
"RTN","NVSTAR1",175,0)
 .K NVSX
"RTN","NVSTAR1",176,0)
 .;
"RTN","NVSTAR1",177,0)
 .; delete BOX-VOLUME PAIR file (14.7) entries and rebuild it
"RTN","NVSTAR1",178,0)
 .; with Test system configuration.  use the first entry found in
"RTN","NVSTAR1",179,0)
 .; 14.7, edit the name, kill off the file, rebuild it with using the
"RTN","NVSTAR1",180,0)
 .; original IEN for the first entry...
"RTN","NVSTAR1",181,0)
 .W !?2,"Rebulding BOX-VOLUME PAIR entries in file 14.7..."
"RTN","NVSTAR1",182,0)
 .S NVSBOXVN=$O(^%ZIS(14.7,"B",""))
"RTN","NVSTAR1",183,0)
 .S NVSBOXFN=0
"RTN","NVSTAR1",184,0)
 .I NVSBOXVN'="" S NVSBOXFN=+$O(^%ZIS(14.7,"B",NVSBOXVN,0))
"RTN","NVSTAR1",185,0)
 .I NVSBOXFN'>0 D  Q
"RTN","NVSTAR1",186,0)
 ..; error! no BOX-VOLUME PAIR in file 14.7...
"RTN","NVSTAR1",187,0)
 ..W !?2,"ERROR: No BOX-VOLUME PAIR entry in file 14.7!"
"RTN","NVSTAR1",188,0)
 .S NVSDATA=$G(^%ZIS(14.7,NVSBOXFN,0))
"RTN","NVSTAR1",189,0)
 .S NVSCFG="ROU:"
"RTN","NVSTAR1",190,0)
 .S NVSVER=$ZV
"RTN","NVSTAR1",191,0)
 .I NVSVER["2.1." S NVSCFG=NVSCFG_$P($ZU(86),"*",3)
"RTN","NVSTAR1",192,0)
 .I NVSVER["3.2" S NVSCFG=NVSCFG_$P($ZU(86),"*",2)
"RTN","NVSTAR1",193,0)
 .I NVSVER["OpenVMS" S NVSCFG=NVSCFG_$P($ZU(86),"*",2)
"RTN","NVSTAR1",194,0)
 .K NVSVER
"RTN","NVSTAR1",195,0)
 .S $P(NVSDATA,"^")=NVSCFG
"RTN","NVSTAR1",196,0)
 .K ^%ZIS(14.7)
"RTN","NVSTAR1",197,0)
 .S ^%ZIS(14.7,0)="TASKMAN SITE PARAMETERS^14.7^"_NVSBOXFN_"^1"
"RTN","NVSTAR1",198,0)
 .S ^%ZIS(14.7,NVSBOXFN,0)=NVSDATA
"RTN","NVSTAR1",199,0)
 .S ^%ZIS(14.7,"B",NVSCFG,NVSBOXFN)=""
"RTN","NVSTAR1",200,0)
 .W !?4,NVSCFG,"...done."
"RTN","NVSTAR1",201,0)
 ;
"RTN","NVSTAR1",202,0)
 ; remove any "required" entries for volumes in the volume set file...
"RTN","NVSTAR1",203,0)
 W !?2,"Removing any ""required"" entries for volumes in file 14.5..."
"RTN","NVSTAR1",204,0)
 S NVSX=0
"RTN","NVSTAR1",205,0)
 F  S NVSX=$O(^%ZIS(14.5,NVSX)) Q:'NVSX  D
"RTN","NVSTAR1",206,0)
 .W !?4,"Volume ",$P(^%ZIS(14.5,NVSX,0),"^")
"RTN","NVSTAR1",207,0)
 .I $P($G(^%ZIS(14.5,NVSX,0)),U,5)'="Y" W "...OK." Q
"RTN","NVSTAR1",208,0)
 .S $P(^%ZIS(14.5,NVSX,0),U,5)="N"
"RTN","NVSTAR1",209,0)
 .W "...reset to ""NO""."
"RTN","NVSTAR1",210,0)
 K NVSX
"RTN","NVSTAR1",211,0)
 ;
"RTN","NVSTAR1",212,0)
 ; reset ^DD("SITE")...
"RTN","NVSTAR1",213,0)
 W !?2,"^DD(""SITE"") reset to ",NVSTHIS
"RTN","NVSTAR1",214,0)
 S ^DD("SITE")=NVSTHIS
"RTN","NVSTAR1",215,0)
 ;
"RTN","NVSTAR1",216,0)
 ; for DSM system, reset ^%ZOSF("VOL")="TOU"
"RTN","NVSTAR1",217,0)
 I NVSOPSYS["DSM" D 
"RTN","NVSTAR1",218,0)
 .W $C(7)
"RTN","NVSTAR1",219,0)
 .W !?2,">>DSM SITE << **NOTE FOLLOWING CHANGE** >> DSM SITE<<"
"RTN","NVSTAR1",220,0)
 .S ^%ZOSF("VOL")="TOU"
"RTN","NVSTAR1",221,0)
 .W !?2,"^%ZOSF(""VOL"") reset to ""TOU""."
"RTN","NVSTAR1",222,0)
 .W !?2,"This is the ""cookbook"" setting for the VOL name."
"RTN","NVSTAR1",223,0)
 .W !?2,"If this is not what you are using, you will need"
"RTN","NVSTAR1",224,0)
 .W !?2,"to manually edit this global node after the Reset"
"RTN","NVSTAR1",225,0)
 .W !?2,"utility finishes."
"RTN","NVSTAR1",226,0)
 ;        
"RTN","NVSTAR1",227,0)
 ; replacing intro (logon) text...
"RTN","NVSTAR1",228,0)
 S NVSX=+$O(^XTV(8989.3,0))
"RTN","NVSTAR1",229,0)
 I NVSX D
"RTN","NVSTAR1",230,0)
 .W !?2,"Replacing the introductory (logon) text at"
"RTN","NVSTAR1",231,0)
 .W !?4,"^XTV(8989.2,",NVSX,",""INTRO"")"
"RTN","NVSTAR1",232,0)
 .K ^XTV(8989.3,NVSX,"INTRO")
"RTN","NVSTAR1",233,0)
 .S ^XTV(8989.3,NVSX,"INTRO",0)="^^^^"_DT
"RTN","NVSTAR1",234,0)
 .F NVSY=1:1 Q:$P($T(INTRO+NVSY^NVSTAR1),";;",2)["@@"  D
"RTN","NVSTAR1",235,0)
 ..S NVSTEXT=$P($T(INTRO+NVSY^NVSTAR1),";;",2)
"RTN","NVSTAR1",236,0)
 ..S ^XTV(8989.3,NVSX,"INTRO",NVSY,0)=NVSTEXT
"RTN","NVSTAR1",237,0)
 .W "...done."
"RTN","NVSTAR1",238,0)
 .I $D(^XTV(8989.3,NVSX,"POST")) D
"RTN","NVSTAR1",239,0)
 ..W !?2,"Deleting the POST-LOGON text from"
"RTN","NVSTAR1",240,0)
 ..W !?4,"^XTV(8989.3,",NVSX,",""POST"")"
"RTN","NVSTAR1",241,0)
 ..K ^XTV(8989.3,NVSX,"POST")
"RTN","NVSTAR1",242,0)
 .K NVSTEXT,NVSY
"RTN","NVSTAR1",243,0)
 .W "...done."
"RTN","NVSTAR1",244,0)
 ;
"RTN","NVSTAR1",245,0)
 K NVSBOXFN,NVSBOXVN,NVSCFG,NVSDATA,NVSTEST,NVSTESTY,NVSTHIS,NVSTHISY
"RTN","NVSTAR1",246,0)
 Q
"RTN","NVSTAR1",247,0)
 ;       
"RTN","NVSTAR1",248,0)
INTRO ;; introductory text replacement...
"RTN","NVSTAR1",249,0)
 ;;
"RTN","NVSTAR1",250,0)
 ;;            **********     **********     **********     **********
"RTN","NVSTAR1",251,0)
 ;;            **********     **********     **********     **********
"RTN","NVSTAR1",252,0)
 ;;               ****        ****           ****              ****
"RTN","NVSTAR1",253,0)
 ;;               ****        ****           ****              ****
"RTN","NVSTAR1",254,0)
 ;;               ****        *******        **********        ****
"RTN","NVSTAR1",255,0)
 ;;               ****        *******        **********        ****
"RTN","NVSTAR1",256,0)
 ;;               ****        ****                 ****        ****
"RTN","NVSTAR1",257,0)
 ;;               ****        ****                 ****        ****
"RTN","NVSTAR1",258,0)
 ;;               ****        **********     **********        ****
"RTN","NVSTAR1",259,0)
 ;;               ****        **********     **********        ****
"RTN","NVSTAR1",260,0)
 ;;
"RTN","NVSTAR1",261,0)
 ;;                              >>>>> NOTICE <<<<<
"RTN","NVSTAR1",262,0)
 ;;   This account is established for software demonstration, testing and user
"RTN","NVSTAR1",263,0)
 ;;                                 training only.
"RTN","NVSTAR1",264,0)
 ;;    The data in this TEST system is protected by the same confidentiality
"RTN","NVSTAR1",265,0)
 ;;     regulations, statutes, and penalties for unauthorized disclosure as
"RTN","NVSTAR1",266,0)
 ;;                             the production system.
"RTN","NVSTAR1",267,0)
 ;;@@
"RTN","NVSTAR2")
0^50^B352008
"RTN","NVSTAR2",1,0)
NVSTAR2 ;emc/maw-close all mailman domains; 09/01/02
"RTN","NVSTAR2",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSTAR2",3,0)
 ;
"RTN","NVSTAR2",4,0)
 W !!,"CLOSE ALL MAILMAN DOMAINS"
"RTN","NVSTAR2",5,0)
 W !?2
"RTN","NVSTAR2",6,0)
 S NVSXDA=0
"RTN","NVSTAR2",7,0)
 F  S NVSXDA=$O(^DIC(4.2,NVSXDA)) Q:'NVSXDA  D
"RTN","NVSTAR2",8,0)
 .I $X>(IOM-10) W !?2
"RTN","NVSTAR2",9,0)
 .S DIE="^DIC(4.2,"
"RTN","NVSTAR2",10,0)
 .S DA=NVSXDA
"RTN","NVSTAR2",11,0)
 .S DR="1///^S X=""C"";1.7///^S X=""y"";2////@"
"RTN","NVSTAR2",12,0)
 .D ^DIE
"RTN","NVSTAR2",13,0)
 .K DA,DIE,DR
"RTN","NVSTAR2",14,0)
 .W "."
"RTN","NVSTAR2",15,0)
 W !,"Done."
"RTN","NVSTAR2",16,0)
 K NVSXDA
"RTN","NVSTAR2",17,0)
 Q
"RTN","NVSTAR3")
0^51^B7013486
"RTN","NVSTAR3",1,0)
NVSTAR3 ;emc/maw-disable all print devices ;09/01/02
"RTN","NVSTAR3",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSTAR3",3,0)
 ;
"RTN","NVSTAR3",4,0)
 ; this routine goes through the Device file and examines the sub-type
"RTN","NVSTAR3",5,0)
 ; for each device.  If the device's sub-type contains "P-", then the $I field
"RTN","NVSTAR3",6,0)
 ; is set equal to the NULL device, the OUT-OF-SERVICE DATE is set to DT, and
"RTN","NVSTAR3",7,0)
 ; the QUEUING field is set to NOT ALLOWED.  Note, however, that there is a
"RTN","NVSTAR3",8,0)
 ; screen so that devices with the sub-type of P-MESSAGE, P-BROWSER, P-HFS
"RTN","NVSTAR3",9,0)
 ; *AND* P-OTHER are NOT disabled.  You should specifically check devices that
"RTN","NVSTAR3",10,0)
 ; use the P-OTHER sub-type to make sure that you get all actual printers
"RTN","NVSTAR3",11,0)
 ; disabled.
"RTN","NVSTAR3",12,0)
 ;
"RTN","NVSTAR3",13,0)
 W !!,"DISABLE PRINT DEVICES"
"RTN","NVSTAR3",14,0)
 W !?2
"RTN","NVSTAR3",15,0)
 ; see if we can retrieve the null device's $I from the device file...
"RTN","NVSTAR3",16,0)
 S NVSNULDV=$G(^XTMP("NVSTAR","NULL DEVICE"))
"RTN","NVSTAR3",17,0)
 I NVSNULDV="" W !?2,"No $I for NULL device!  Aborted!" K NVSNULDV Q
"RTN","NVSTAR3",18,0)
 ;
"RTN","NVSTAR3",19,0)
 S NVSDEV=0
"RTN","NVSTAR3",20,0)
 F  S NVSDEV=$O(^%ZIS(1,NVSDEV)) Q:'NVSDEV  D
"RTN","NVSTAR3",21,0)
 .;
"RTN","NVSTAR3",22,0)
 .; for all devices, remove any data in the volume set(cpu) field...
"RTN","NVSTAR3",23,0)
 .S NVSFILE(3.5,NVSDEV_",",1.9)="@"
"RTN","NVSTAR3",24,0)
 .D FILE^DIE("E","NVSFILE","NVSDIERR")
"RTN","NVSTAR3",25,0)
 .K NVSDIERR,NVSFILE
"RTN","NVSTAR3",26,0)
 .;
"RTN","NVSTAR3",27,0)
 .; check device's subtype -- we're looking for printer subtypes...
"RTN","NVSTAR3",28,0)
 .S NVSSTYPE=+$G(^%ZIS(1,NVSDEV,"SUBTYPE"))
"RTN","NVSTAR3",29,0)
 .S NVSSTYPE=$P($G(^%ZIS(2,NVSSTYPE,0)),U)
"RTN","NVSTAR3",30,0)
 .I $E(NVSSTYPE)'="P" D  Q
"RTN","NVSTAR3",31,0)
 ..S $P(^XTMP("NVSTAR",3,0),U,4)=NVSDEV
"RTN","NVSTAR3",32,0)
 .;
"RTN","NVSTAR3",33,0)
 .; if subtype is P-OTHER, check TYPE.  if TYPE'=TRM then leave it alone...
"RTN","NVSTAR3",34,0)
 .S NVSTCHK=0
"RTN","NVSTAR3",35,0)
 .I NVSSTYPE["OTHER"&($G(^%ZIS(1,NVSDEV,"TYPE"))'="TRM") S NVSTCHK=1
"RTN","NVSTAR3",36,0)
 .; *but*, if the device type is network channel, let's reset the check
"RTN","NVSTAR3",37,0)
 .; flag and continue with disabling it...
"RTN","NVSTAR3",38,0)
 .I $G(^%ZIS(1,NVSDEV,"TYPE"))="CHAN" S NVSTCHK=0
"RTN","NVSTAR3",39,0)
 .I NVSTCHK=1 K NVSTCHK Q
"RTN","NVSTAR3",40,0)
 .K NVSTCHK
"RTN","NVSTAR3",41,0)
 .;
"RTN","NVSTAR3",42,0)
 .; don't disable the null device...
"RTN","NVSTAR3",43,0)
 .I NVSDEV=+NVSNULDV Q
"RTN","NVSTAR3",44,0)
 .;
"RTN","NVSTAR3",45,0)
 .; don't disable P-MESSAGE, P-BROWSER, and P-HFS devices...
"RTN","NVSTAR3",46,0)
 .I NVSSTYPE["MESSAGE"!(NVSSTYPE["BROWSER")!(NVSSTYPE["HFS") Q
"RTN","NVSTAR3",47,0)
 .;
"RTN","NVSTAR3",48,0)
 .; edit the record...
"RTN","NVSTAR3",49,0)
 .D DEDIT(NVSDEV,NVSNULDV)
"RTN","NVSTAR3",50,0)
 .I $X>(IOM-10) W !?2
"RTN","NVSTAR3",51,0)
 .W "."
"RTN","NVSTAR3",52,0)
 ;
"RTN","NVSTAR3",53,0)
 K NVSDEV,NVSSTYPE
"RTN","NVSTAR3",54,0)
 Q
"RTN","NVSTAR3",55,0)
 ;
"RTN","NVSTAR3",56,0)
DEDIT(DEVIEN,NULLDEV)   ; edit device file fields...
"RTN","NVSTAR3",57,0)
 ; DEVIEN  = device file record number
"RTN","NVSTAR3",58,0)
 ; NULLDEV = the $I value for this system's NULL device
"RTN","NVSTAR3",59,0)
 ;
"RTN","NVSTAR3",60,0)
 I $G(DEVIEN)'>0 Q
"RTN","NVSTAR3",61,0)
 N NVSDIERR,NVSFILE
"RTN","NVSTAR3",62,0)
 ;
"RTN","NVSTAR3",63,0)
 ; set OUT-OF-SERVICE DATE field to today's date...
"RTN","NVSTAR3",64,0)
 S NVSFILE(3.5,DEVIEN_",",6)=$$FMTE^XLFDT($$DT^XLFDT)
"RTN","NVSTAR3",65,0)
 ;
"RTN","NVSTAR3",66,0)
 ; set QUEUEING field to not allowed...
"RTN","NVSTAR3",67,0)
 S NVSFILE(3.5,DEVIEN_",",5.5)="NOT ALLOWED"
"RTN","NVSTAR3",68,0)
 ;
"RTN","NVSTAR3",69,0)
 ; edit $I to that of the null device...
"RTN","NVSTAR3",70,0)
 I $P($G(NULLDEV),"^",2)'="" S NVSFILE(3.5,DEVIEN_",",1)=$P(NULLDEV,"^",2)
"RTN","NVSTAR3",71,0)
 ;
"RTN","NVSTAR3",72,0)
 ; delete anything in the OPEN PARAMETERS field...
"RTN","NVSTAR3",73,0)
 S NVSFILE(3.5,DEVIEN_",",19)="@"
"RTN","NVSTAR3",74,0)
 ;
"RTN","NVSTAR3",75,0)
 ; call FM DBS to update the record...
"RTN","NVSTAR3",76,0)
 D FILE^DIE("E","NVSFILE","NVSDIERR")
"RTN","NVSTAR3",77,0)
 Q
"RTN","NVSTAR3",78,0)
 Q
"RTN","NVSTAR4")
0^52^B66932712
"RTN","NVSTAR4",1,0)
NVSTAR4 ;emc/maw-clean up and reset HL7, CIRN and MPI data and parameters ;09/01/02
"RTN","NVSTAR4",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSTAR4",3,0)
 ;
"RTN","NVSTAR4",4,0)
 ; NOTE:  the procedures are modularized in this routine so that if an
"RTN","NVSTAR4",5,0)
 ;        error occurs in any one of them, they can be re-run separately.
"RTN","NVSTAR4",6,0)
 ;
"RTN","NVSTAR4",7,0)
RAIMDS ;
"RTN","NVSTAR4",8,0)
 W !!,"CLEAN UP RAI/MDS DATA"
"RTN","NVSTAR4",9,0)
 W !,"This module loops through the WARD LOCATION file (#42) and sets the"
"RTN","NVSTAR4",10,0)
 W !,"RAI/MDS WARD field (#.035) to 0 (zero) to disable any possible HL7"
"RTN","NVSTAR4",11,0)
 W !,"transmissions to a COTS database (reference patch DG*5.3*190)."
"RTN","NVSTAR4",12,0)
 W !?2
"RTN","NVSTAR4",13,0)
 N CNT,NVSIEN
"RTN","NVSTAR4",14,0)
 S (CNT,NVSIEN)=0
"RTN","NVSTAR4",15,0)
 F  S NVSIEN=$O(^DIC(42,NVSIEN)) Q:'NVSIEN  D
"RTN","NVSTAR4",16,0)
 .S $P(^DIC(42,NVSIEN,0),"^",16)=0
"RTN","NVSTAR4",17,0)
 .S CNT=CNT+1
"RTN","NVSTAR4",18,0)
 .I '(CNT#10) W "."
"RTN","NVSTAR4",19,0)
 .I $X>(IOM-10) W !?2
"RTN","NVSTAR4",20,0)
 W !,"Done."
"RTN","NVSTAR4",21,0)
 K NVSIEN
"RTN","NVSTAR4",22,0)
 Q
"RTN","NVSTAR4",23,0)
 ;
"RTN","NVSTAR4",24,0)
HL7 ;
"RTN","NVSTAR4",25,0)
 S NVSNULDV=$P(^XTMP("NVSTAR","NULL DEVICE"),"^",2)
"RTN","NVSTAR4",26,0)
 W !!,"CLEAN UP HL7 PARAMETERS AND DATA"
"RTN","NVSTAR4",27,0)
 W !,"This module goes through the HL LOWER LEVEL PROTOCOL PARAMETER"
"RTN","NVSTAR4",28,0)
 W !,"(#869.2) and HL LOGICAL LINK (#870) and resets or deletes specific HL7"
"RTN","NVSTAR4",29,0)
 W !,"devices/parameters.  Note:  in file 869.2, there is a pointer to the"
"RTN","NVSTAR4",30,0)
 W !,"device file in field 200.01.  During this portion of the procedures, the"
"RTN","NVSTAR4",31,0)
 W !,"device listed in these HL7 file fields are placed out of service, etc."
"RTN","NVSTAR4",32,0)
 W !,"in the Device file (#3.5)."
"RTN","NVSTAR4",33,0)
 ;
"RTN","NVSTAR4",34,0)
HLLP ;
"RTN","NVSTAR4",35,0)
 W !!?2,"HL LOWER LEVEL PROTOCOL file (#869.2)."
"RTN","NVSTAR4",36,0)
 W !?4,"Delete TCP/IP addresses and disable HLLP devices..."
"RTN","NVSTAR4",37,0)
 S NVSI=0
"RTN","NVSTAR4",38,0)
 F  S NVSI=$O(^HLCS(869.2,NVSI)) Q:'NVSI  D
"RTN","NVSTAR4",39,0)
 .;
"RTN","NVSTAR4",40,0)
 .; delete TCP/IP address data...
"RTN","NVSTAR4",41,0)
 .I $D(^HLCS(869.2,NVSI,400)) D
"RTN","NVSTAR4",42,0)
 ..S NVSFILE(869.2,NVSI_",",400.01)="@"
"RTN","NVSTAR4",43,0)
 ..D FILE^DIE("E","NVSFILE","NVSDIERR")
"RTN","NVSTAR4",44,0)
 ..K NVSDIERR,NVSFILE
"RTN","NVSTAR4",45,0)
 .;
"RTN","NVSTAR4",46,0)
 .; check for and disable the hllp device in the Device file...
"RTN","NVSTAR4",47,0)
 .I $D(^HLCS(869.2,NVSI,200)) D
"RTN","NVSTAR4",48,0)
 ..S NVSDATA=^HLCS(869.2,NVSI,200)
"RTN","NVSTAR4",49,0)
 ..S NVSDEV=+NVSDATA
"RTN","NVSTAR4",50,0)
 ..I NVSDEV>0 D DEDIT(NVSDEV,NVSNULDV)
"RTN","NVSTAR4",51,0)
 ..K NVSDATA,NVSDEV
"RTN","NVSTAR4",52,0)
 K NVSI,NVSNULDV
"RTN","NVSTAR4",53,0)
 W "done."
"RTN","NVSTAR4",54,0)
 Q
"RTN","NVSTAR4",55,0)
 ;
"RTN","NVSTAR4",56,0)
HLCS ;
"RTN","NVSTAR4",57,0)
 W !?2,"HL COMMUNICATION SERVER PARAMETERS file (#869.3)."
"RTN","NVSTAR4",58,0)
 W !?4,"Set DEFAULT PROCESSING ID (field .03) to ""T"" for Test..."
"RTN","NVSTAR4",59,0)
 S NVSI=0
"RTN","NVSTAR4",60,0)
 F  S NVSI=$O(^HLCS(869.3,NVSI)) Q:'NVSI  D
"RTN","NVSTAR4",61,0)
 .S NVSFILE(869.3,NVSI_",",.03)="T"
"RTN","NVSTAR4",62,0)
 .D FILE^DIE("E","NVSFILE","NVSDIERR")
"RTN","NVSTAR4",63,0)
 .K NVSDIERR,NVSFILE
"RTN","NVSTAR4",64,0)
 K NVSI
"RTN","NVSTAR4",65,0)
 W "done."
"RTN","NVSTAR4",66,0)
 Q
"RTN","NVSTAR4",67,0)
 ;
"RTN","NVSTAR4",68,0)
HLL ;
"RTN","NVSTAR4",69,0)
 S NVSNULDV=$P(^XTMP("NVSTAR","NULL DEVICE"),"^",2)
"RTN","NVSTAR4",70,0)
 W !?2,"HL LOGICAL LINK file (#870)."
"RTN","NVSTAR4",71,0)
 ; additional code has been added to make this code compatible post-HL*1.6*57...
"RTN","NVSTAR4",72,0)
 W !?4,"Reset the following fields:"
"RTN","NVSTAR4",73,0)
 W !?4,"AUTOSTART (field 4.5)         = ""Disabled"""
"RTN","NVSTAR4",74,0)
 W !?4,"SHUTDOWN LLP ? (field 14)     = ""YES"""
"RTN","NVSTAR4",75,0)
 W !?4,"TCP/IP ADDRESS (field 400.01) = delete any entry found"
"RTN","NVSTAR4",76,0)
 W !?4,"DOMAIN (field .03)            = delete any entry found"
"RTN","NVSTAR4",77,0)
 W !?4,"HLLP DEVICE (field 200.01)    = disable pointed to device in Device file"
"RTN","NVSTAR4",78,0)
 ;
"RTN","NVSTAR4",79,0)
 S NVSI=0
"RTN","NVSTAR4",80,0)
 F  S NVSI=$O(^HLCS(870,NVSI)) Q:'NVSI  D
"RTN","NVSTAR4",81,0)
 .;
"RTN","NVSTAR4",82,0)
 .; set AUTOSTART to disabled...
"RTN","NVSTAR4",83,0)
 .S NVSFILE(870,NVSI_",",4.5)="Disabled"
"RTN","NVSTAR4",84,0)
 .;
"RTN","NVSTAR4",85,0)
 .; set SHUTDOWN LLP ? to YES...
"RTN","NVSTAR4",86,0)
 .S NVSFILE(870,NVSI_",",14)="YES"
"RTN","NVSTAR4",87,0)
 .;
"RTN","NVSTAR4",88,0)
 .; delete TCP/IP address data...
"RTN","NVSTAR4",89,0)
 .I $D(^HLCS(870,NVSI,400)) S NVSFILE(870,NVSI_",",400.01)="@"
"RTN","NVSTAR4",90,0)
 .;
"RTN","NVSTAR4",91,0)
 .; delete pointer to the Domain file...
"RTN","NVSTAR4",92,0)
 .I $D(^HLCS(870,NVSI,0)) S NVSFILE(870,NVSI_",",.03)="@"
"RTN","NVSTAR4",93,0)
 .;
"RTN","NVSTAR4",94,0)
 .;  check for and disable the hllp device in the Device file...
"RTN","NVSTAR4",95,0)
 .I $D(^HLCS(870,NVSI,200)) D
"RTN","NVSTAR4",96,0)
 ..S NVSDATA=$G(^HLCS(870,NVSI,200))
"RTN","NVSTAR4",97,0)
 ..S NVSDEV=+NVSDATA
"RTN","NVSTAR4",98,0)
 ..I NVSDEV>0 D
"RTN","NVSTAR4",99,0)
 ...D DEDIT(NVSDEV,NVSNULDV)
"RTN","NVSTAR4",100,0)
 ..K NVSDATA
"RTN","NVSTAR4",101,0)
 .;
"RTN","NVSTAR4",102,0)
 .D FILE^DIE("E","NVSFILE","NVSDIERR")
"RTN","NVSTAR4",103,0)
 .K NVSDIERR,NVSFILE
"RTN","NVSTAR4",104,0)
 W !?2,"Done."
"RTN","NVSTAR4",105,0)
 K NVSDATA,NVSDEV,NVSNULDV
"RTN","NVSTAR4",106,0)
 Q
"RTN","NVSTAR4",107,0)
 ;
"RTN","NVSTAR4",108,0)
HLMA ;
"RTN","NVSTAR4",109,0)
 W !?2,"HL7 MESSAGE ADMINISTRATION file (#773)."
"RTN","NVSTAR4",110,0)
 W !?4,"Search ^HLMA(""AG"",...) for any records marked"
"RTN","NVSTAR4",111,0)
 W !?4,"'PENDING TRANSMISSION'."
"RTN","NVSTAR4",112,0)
 W !?4,"For any such records found, reset STATUS (field 20)"
"RTN","NVSTAR4",113,0)
 W !?4,"to 'SUCCESSFULLY COMPLETED'."
"RTN","NVSTAR4",114,0)
 I '$D(^HLMA("AG",1)) D
"RTN","NVSTAR4",115,0)
 .W !?2,"Note: there are 0 records marked 'PENDING TRANSMISSION'."
"RTN","NVSTAR4",116,0)
 .W !?2,"The cross reference ^HLMA(""AG"",1,...) is empty."
"RTN","NVSTAR4",117,0)
 I $D(^HLMA("AG",1)) D
"RTN","NVSTAR4",118,0)
 .N NVSC,NVSDATA,NVSFILE,NVSI
"RTN","NVSTAR4",119,0)
 .S NVSC="F ZZ=1:1:10 W $C(8)"
"RTN","NVSTAR4",120,0)
 .S (NVSCOUNT,NVSI)=0
"RTN","NVSTAR4",121,0)
 .F  S NVSI=$O(^HLMA("AG",1,NVSI)) Q:'NVSI  S NVSCOUNT=NVSCOUNT+1
"RTN","NVSTAR4",122,0)
 .W !?4,"Records processed = "
"RTN","NVSTAR4",123,0)
 .W ?26,$J(NVSCOUNT,10)
"RTN","NVSTAR4",124,0)
 .I NVSCOUNT>0 D
"RTN","NVSTAR4",125,0)
 ..S NVSI=0
"RTN","NVSTAR4",126,0)
 ..F  S NVSI=$O(^HLMA("AG",1,NVSI)) Q:'NVSI  D
"RTN","NVSTAR4",127,0)
 ...S NVSCOUNT=NVSCOUNT+1
"RTN","NVSTAR4",128,0)
 ...X NVSC
"RTN","NVSTAR4",129,0)
 ...W $J(NVSCOUNT,10)
"RTN","NVSTAR4",130,0)
 ...S NVSDATA=$G(^HLMA(NVSI,"P"))
"RTN","NVSTAR4",131,0)
 ...; is the record really marked 'PENDING'?  If not, reset the x-ref and move on...
"RTN","NVSTAR4",132,0)
 ...I +NVSDATA'=1 D  Q
"RTN","NVSTAR4",133,0)
 ....K ^HLMA("AG",1,NVSI)
"RTN","NVSTAR4",134,0)
 ....; if the pointer at +NVSDATA exists in ^HL(771.6, correct the x-ref...
"RTN","NVSTAR4",135,0)
 ....I $D(^HL(771.6,+NVSDATA,0)) S ^HLMA("AG",+NVSDATA,NVSI)=""
"RTN","NVSTAR4",136,0)
 ....K NVSDATA
"RTN","NVSTAR4",137,0)
 ...; reset the STATUS field to 3 (SUCCESSFULLY COMPLETED) and reset the x-ref...
"RTN","NVSTAR4",138,0)
 ...S $P(^HLMA(NVSI,"P"),"^")=3
"RTN","NVSTAR4",139,0)
 ...K ^HLMA("AG",1,NVSI)
"RTN","NVSTAR4",140,0)
 ...S ^HLMA("AG",3,NVSI)=""
"RTN","NVSTAR4",141,0)
 .W !?2,"Done."
"RTN","NVSTAR4",142,0)
 ;
"RTN","NVSTAR4",143,0)
 W !!?2,"Deleting the cross reference ^HLMA(""AC"")..."
"RTN","NVSTAR4",144,0)
 K ^HLMA("AC")
"RTN","NVSTAR4",145,0)
 W "done."
"RTN","NVSTAR4",146,0)
 K NVSC,NVSCOUNT,NVSDATA,NVSFILE,NVSI
"RTN","NVSTAR4",147,0)
 Q
"RTN","NVSTAR4",148,0)
 ;
"RTN","NVSTAR4",149,0)
DELMPI ;
"RTN","NVSTAR4",150,0)
 ; delete CIRN MPI data brought over from production account
"RTN","NVSTAR4",151,0)
 W !!,"CLEAN UP/RESET CIRN MPI DATA"
"RTN","NVSTAR4",152,0)
 W !,"This procedure loops through ^DPT(""AICN"",...) and deletes CIRN MPI"
"RTN","NVSTAR4",153,0)
 W !,"data brought over from the production system.  Only CMOR activity"
"RTN","NVSTAR4",154,0)
 W !,"scores will be left intact.  This procedure will also kill several"
"RTN","NVSTAR4",155,0)
 W !,"CIRN-related cross references.  Finally, it will delete the entries"
"RTN","NVSTAR4",156,0)
 W !,"in the following files:"
"RTN","NVSTAR4",157,0)
 W !?2,"SUBSCRIPTION CONTROL file (#774)"
"RTN","NVSTAR4",158,0)
 W !?2,"TREATING FACILITY file (#391.91)"
"RTN","NVSTAR4",159,0)
 W !?2,"PATIENT DATA EXCEPTION file (#391.98)"
"RTN","NVSTAR4",160,0)
 W !?2,"PATIENT DATA ELEMENT file (#391.99)"
"RTN","NVSTAR4",161,0)
 ;
"RTN","NVSTAR4",162,0)
 ; Code copied from module DEL^NVSCIRN1 on 5/29/02 (maw)
"RTN","NVSTAR4",163,0)
 ;
"RTN","NVSTAR4",164,0)
 W !!?2,"Searching cross reference ^DPT(""AICN"",...)..."
"RTN","NVSTAR4",165,0)
 I +$O(^DPT("AICN",0))=0 D
"RTN","NVSTAR4",166,0)
 .W !?2,"Note: there are 0 records in this cross reference."
"RTN","NVSTAR4",167,0)
 I +$O(^DPT("AICN",0))>0 D
"RTN","NVSTAR4",168,0)
 .W !?4,"^DPT(""AICN"") records processed ="
"RTN","NVSTAR4",169,0)
 .W ?40,$J("0",10)
"RTN","NVSTAR4",170,0)
 .N CNT,DFN,ICN,NVSC
"RTN","NVSTAR4",171,0)
 .S NVSC="F ZZ=1:1:10 W $C(8)"
"RTN","NVSTAR4",172,0)
 .S (CNT,ICN)=0
"RTN","NVSTAR4",173,0)
 .F  S ICN=$O(^DPT("AICN",ICN)) Q:'ICN  D
"RTN","NVSTAR4",174,0)
 ..S CNT=CNT+1
"RTN","NVSTAR4",175,0)
 ..X NVSC
"RTN","NVSTAR4",176,0)
 ..W $J(CNT,10)
"RTN","NVSTAR4",177,0)
 ..S DFN=+$O(^DPT("AICN",ICN,0))
"RTN","NVSTAR4",178,0)
 ..I $D(^DPT(DFN,"MPI")) D
"RTN","NVSTAR4",179,0)
 ...S $P(^DPT(DFN,"MPI"),"^",1,5)="^^^^"
"RTN","NVSTAR4",180,0)
 ...K ^DPT(DFN,"MPIFHIS")
"RTN","NVSTAR4",181,0)
 W !?2,"Patient file MPI data clean up/reset completed."
"RTN","NVSTAR4",182,0)
 ;
"RTN","NVSTAR4",183,0)
 W !!?2,"Deleting MPI-related Patient file cross references..."
"RTN","NVSTAR4",184,0)
 K ^DPT("ACMOR")
"RTN","NVSTAR4",185,0)
 W !?4,"""ACMOR"" xref"
"RTN","NVSTAR4",186,0)
 K ^DPT("AHICN")
"RTN","NVSTAR4",187,0)
 W !?4,"""AHICN"" xref"
"RTN","NVSTAR4",188,0)
 K ^DPT("AICN")
"RTN","NVSTAR4",189,0)
 W !?4,"""AICN"" xref"
"RTN","NVSTAR4",190,0)
 K ^DPT("AICNL")
"RTN","NVSTAR4",191,0)
 W !?4,"""AICNL"" xref"
"RTN","NVSTAR4",192,0)
 K ^DPT("AMPIMIS")
"RTN","NVSTAR4",193,0)
 W !?4,"""AMPIMIS"" xref"
"RTN","NVSTAR4",194,0)
 K ^DPT("ASCN2")
"RTN","NVSTAR4",195,0)
 W !?4,"""ASCN2"" xref"
"RTN","NVSTAR4",196,0)
 W !?2,"Done."
"RTN","NVSTAR4",197,0)
 ;
"RTN","NVSTAR4",198,0)
 W !!?2,"Reset SUBSCRIPTION CONTROL file (#774)..."
"RTN","NVSTAR4",199,0)
 W !?4,"Deleting ",+$P($G(^HLS(774,0)),"^",4)," record(s)..."
"RTN","NVSTAR4",200,0)
 K ^HLS(774)
"RTN","NVSTAR4",201,0)
 S ^HLS(774,0)="SUBSCRIPTION CONTROL^774^0^0"
"RTN","NVSTAR4",202,0)
 W "done."
"RTN","NVSTAR4",203,0)
 ;
"RTN","NVSTAR4",204,0)
 W !?2,"Reset TREATING FACILITY LIST file (#391.91)..."
"RTN","NVSTAR4",205,0)
 W !?4,"Deleting ",+$P($G(^DGCN(391.91,0)),"^",4)," record(s)..."
"RTN","NVSTAR4",206,0)
 K ^DGCN(391.91)
"RTN","NVSTAR4",207,0)
 S ^DGCN(391.91,0)="TREATING FACILITY LIST^391.91PI^0^0"
"RTN","NVSTAR4",208,0)
 W "done."
"RTN","NVSTAR4",209,0)
 ;
"RTN","NVSTAR4",210,0)
 W !?2,"Reset PATIENT DATA EXCEPTION file (#391.98)..."
"RTN","NVSTAR4",211,0)
 W !?4,"Deleting ",+$P($G(^DGCN(391.98,0)),"^",4)," record(s)..."
"RTN","NVSTAR4",212,0)
 K ^DGCN(391.98)
"RTN","NVSTAR4",213,0)
 S ^DGCN(391.98,0)="PATIENT DATA EXCEPTION^391.98P^0^0"
"RTN","NVSTAR4",214,0)
 W "done."
"RTN","NVSTAR4",215,0)
 ;
"RTN","NVSTAR4",216,0)
 W !?2,"Reset PATIENT DATA ELEMENT file (#391.99)..."
"RTN","NVSTAR4",217,0)
 W !?4,"Deleting ",+$P($G(^DGCN(391.99,0)),"^",4)," record(s)..."
"RTN","NVSTAR4",218,0)
 K ^DGCN(391.99)
"RTN","NVSTAR4",219,0)
 S ^DGCN(391.99,0)="PATIENT DATA ELEMENT^391.99P^0^0"
"RTN","NVSTAR4",220,0)
 W "done."
"RTN","NVSTAR4",221,0)
 W !,"Patient file MPI data clean up completed."
"RTN","NVSTAR4",222,0)
 Q
"RTN","NVSTAR4",223,0)
 ;
"RTN","NVSTAR4",224,0)
DEDIT(DEVIEN,NULLDEV)   ; edit device file fields...
"RTN","NVSTAR4",225,0)
 ; DEVIEN  = device file record number
"RTN","NVSTAR4",226,0)
 ; NULLDEV = the $I value for this system's NULL device
"RTN","NVSTAR4",227,0)
 ;
"RTN","NVSTAR4",228,0)
 I $G(DEVIEN)'>0 Q
"RTN","NVSTAR4",229,0)
 N NVSDIERR,NVSFILE
"RTN","NVSTAR4",230,0)
 ;
"RTN","NVSTAR4",231,0)
 ; set OUT-OF-SERVICE DATE field to today's date...
"RTN","NVSTAR4",232,0)
 S NVSFILE(3.5,DEVIEN_",",6)=$$FMTE^XLFDT($$DT^XLFDT)
"RTN","NVSTAR4",233,0)
 ;
"RTN","NVSTAR4",234,0)
 ; set QUEUEING field to not allowed...
"RTN","NVSTAR4",235,0)
 S NVSFILE(3.5,DEVIEN_",",5.5)="NOT ALLOWED"
"RTN","NVSTAR4",236,0)
 ;
"RTN","NVSTAR4",237,0)
 ; edit $I to that of the null device...
"RTN","NVSTAR4",238,0)
 I $P($G(NULLDEV),"^",2)'="" S NVSFILE(3.5,DEVIEN_",",1)=$P(NULLDEV,"^",2)
"RTN","NVSTAR4",239,0)
 ;
"RTN","NVSTAR4",240,0)
 ; delete anything in the OPEN PARAMETERS field...
"RTN","NVSTAR4",241,0)
 S NVSFILE(3.5,DEVIEN_",",19)="@"
"RTN","NVSTAR4",242,0)
 ;
"RTN","NVSTAR4",243,0)
 ; call FM DBS to update the record...
"RTN","NVSTAR4",244,0)
 D FILE^DIE("E","NVSFILE","NVSDIERR")
"RTN","NVSTAR4",245,0)
 Q
"RTN","NVSTAR5")
0^53^B8279680
"RTN","NVSTAR5",1,0)
NVSTAR5 ;emc/maw-reset task manager parameters and data ;09/01/02
"RTN","NVSTAR5",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSTAR5",3,0)
 ;
"RTN","NVSTAR5",4,0)
 ; reference: NAME^ZTMGRSET:
"RTN","NVSTAR5",5,0)
 ; if the OS is Cache, make sure certain nodes in ^%ZOSF are correct (note
"RTN","NVSTAR5",6,0)
 ; that these are the cookbook settings for the namespaces on the test system)...
"RTN","NVSTAR5",7,0)
 W !!,"RESET KERNEL AND TASK MANAGER PARAMETERS AND DATA"
"RTN","NVSTAR5",8,0)
 I NVSOPSYS["OpenM" D
"RTN","NVSTAR5",9,0)
 .I ^%ZOSF("MGR")'="TST" S ^%ZOSF("MGR")="TST"
"RTN","NVSTAR5",10,0)
 .W !?2,"Set ^%ZOSF(""MGR"")=",^%ZOSF("MGR"),"...done."
"RTN","NVSTAR5",11,0)
 .I ^%ZOSF("PROD")'="TST" S ^%ZOSF("PROD")="TST"
"RTN","NVSTAR5",12,0)
 .W !?2,"Set ^%ZOSF(""PROD"")=",^%ZOSF("PROD"),"...done."
"RTN","NVSTAR5",13,0)
 .I ^%ZOSF("VOL")'="ROU" S ^%ZOSF("VOL")="ROU"
"RTN","NVSTAR5",14,0)
 .W !?2,"Set ^%ZOSF(""VOL"")=",^%ZOSF("VOL"),"...done."
"RTN","NVSTAR5",15,0)
 .;
"RTN","NVSTAR5",16,0)
 .; allow unsubscripted global kills...
"RTN","NVSTAR5",17,0)
 .S X=$ZU(68,28,0)
"RTN","NVSTAR5",18,0)
 .;
"RTN","NVSTAR5",19,0)
 .; reference: GLOBALS^ZTMGRSET:
"RTN","NVSTAR5",20,0)
 .; reset task list...
"RTN","NVSTAR5",21,0)
 .W !!?2,"Delete TASKS (^%ZTSK(...))..."
"RTN","NVSTAR5",22,0)
 .K ^%ZTSK
"RTN","NVSTAR5",23,0)
 .S ^%ZTSK(-1)=100
"RTN","NVSTAR5",24,0)
 .S ^%ZTSK(0)="TASK'S^14.4^100"
"RTN","NVSTAR5",25,0)
 .W "done."
"RTN","NVSTAR5",26,0)
 .;
"RTN","NVSTAR5",27,0)
 .; delete and reset the schedule file...
"RTN","NVSTAR5",28,0)
 .W !?2,"Delete SCHEDULED TASKS (^%ZTSCH(...))..."
"RTN","NVSTAR5",29,0)
 .K ^%ZTSCH
"RTN","NVSTAR5",30,0)
 .S ^%ZTSCH=""
"RTN","NVSTAR5",31,0)
 .W "done."
"RTN","NVSTAR5",32,0)
 ;
"RTN","NVSTAR5",33,0)
 ; for DSM, we have to handle the KILL and SET of the TaskMan globals
"RTN","NVSTAR5",34,0)
 ; a little more carefully...
"RTN","NVSTAR5",35,0)
 I NVSOPSYS["DSM" D
"RTN","NVSTAR5",36,0)
 .W !!?2,"Delete TASKS (^%ZTSK(...))..."
"RTN","NVSTAR5",37,0)
 .S NVSX=0
"RTN","NVSTAR5",38,0)
 .F  S NVSX=$O(^%ZTSK(NVSX)) Q:'NVSX  K ^%ZTSK(NVSX)
"RTN","NVSTAR5",39,0)
 .S ^%ZTSK(-1)=100
"RTN","NVSTAR5",40,0)
 .S ^%ZTSK(0)="TASK'S^14.4^100"
"RTN","NVSTAR5",41,0)
 .K NVSX
"RTN","NVSTAR5",42,0)
 .W "done."
"RTN","NVSTAR5",43,0)
 .;
"RTN","NVSTAR5",44,0)
 .W !?2,"Delete SCHEDULED TASKS (^%ZTSCH(...))..."
"RTN","NVSTAR5",45,0)
 .S NVSX=""
"RTN","NVSTAR5",46,0)
 .F  S NVSX=$O(^%ZTSCH(NVSX)) Q:NVSX=""  K ^%ZTSCH(NVSX)
"RTN","NVSTAR5",47,0)
 .K NVSX
"RTN","NVSTAR5",48,0)
 .W "done."
"RTN","NVSTAR5",49,0)
 ;
"RTN","NVSTAR5",50,0)
 ; remove TASK ID data for all previously-scheduled options in the
"RTN","NVSTAR5",51,0)
 ; OPTION SCHEDULING file (#19.2)...
"RTN","NVSTAR5",52,0)
 W !?2,"Remove any TASKS pointers from OPTION SCHEDULING file (#19.2)..."
"RTN","NVSTAR5",53,0)
 N NVSDATA,NVSIEN
"RTN","NVSTAR5",54,0)
 S NVSIEN=0
"RTN","NVSTAR5",55,0)
 F  S NVSIEN=$O(^DIC(19.2,NVSIEN)) Q:'NVSIEN  D
"RTN","NVSTAR5",56,0)
 .S NVSDATA=$G(^DIC(19.2,NVSIEN,1))
"RTN","NVSTAR5",57,0)
 .I $P(NVSDATA,"^")="" Q
"RTN","NVSTAR5",58,0)
 .S $P(^DIC(19.2,NVSIEN,1),"^")=""
"RTN","NVSTAR5",59,0)
 K NVSDATA,NVSIEN
"RTN","NVSTAR5",60,0)
 W "done."
"RTN","NVSTAR5",61,0)
 ;
"RTN","NVSTAR5",62,0)
 ; if account is post patch XU*8.0*142, set DNS IP field in file
"RTN","NVSTAR5",63,0)
 ; 8989.3 (KERNEL SYSTEM PARAMETERS) to 0.0.0.0 (per HL7 Development)...
"RTN","NVSTAR5",64,0)
 I $D(^DD(8989.3,51)) D
"RTN","NVSTAR5",65,0)
 .W !?2,"Set DNS IP (field 51) in KERNEL SYSTEM PARAMETERS file (#8989.3)"
"RTN","NVSTAR5",66,0)
 .W !?4,"to 0.0.0.0 ..."
"RTN","NVSTAR5",67,0)
 .S NVSDNS="0.0.0.0"
"RTN","NVSTAR5",68,0)
 .S DIE="^XTV(8989.3,"
"RTN","NVSTAR5",69,0)
 .S DA=1
"RTN","NVSTAR5",70,0)
 .S DR="51////^S X=NVSDNS"
"RTN","NVSTAR5",71,0)
 .D ^DIE
"RTN","NVSTAR5",72,0)
 .K DA,DIE,DR,NVSDNS
"RTN","NVSTAR5",73,0)
 .W "done."
"RTN","NVSTAR5",74,0)
 ;
"RTN","NVSTAR5",75,0)
 ; reset failed access attempts log...
"RTN","NVSTAR5",76,0)
 W !?2,"Reset FAILED ACCESS ATTEMPTS LOG file (#3.05)..."
"RTN","NVSTAR5",77,0)
 S NVSX=""
"RTN","NVSTAR5",78,0)
 F  S NVSX=$O(^%ZUA(3.05,NVSX)) Q:NVSX=""  K ^%ZUA(3.05,NVSX)
"RTN","NVSTAR5",79,0)
 S ^%ZUA(3.05,0)="FAILED ACCESS ATTEMPTS LOG^3.05^^"
"RTN","NVSTAR5",80,0)
 K NVSX
"RTN","NVSTAR5",81,0)
 W "done."
"RTN","NVSTAR5",82,0)
 ;
"RTN","NVSTAR5",83,0)
 ; reset programmer mode access log...
"RTN","NVSTAR5",84,0)
 W !?2,"Reset PROGRAMMER MODE LOG file (#3.07)..."
"RTN","NVSTAR5",85,0)
 S NVSX=""
"RTN","NVSTAR5",86,0)
 F  S NVSX=$O(^%ZUA(3.07,NVSX)) Q:NVSX=""  K ^%ZUA(3.07,NVSX)
"RTN","NVSTAR5",87,0)
 S ^%ZUA(3.07,0)="PROGRAMMER MODE LOG^3.07^^"
"RTN","NVSTAR5",88,0)
 K NVSX
"RTN","NVSTAR5",89,0)
 W "done."
"RTN","NVSTAR5",90,0)
 Q
"RTN","NVSTAR6")
0^54^B21265561
"RTN","NVSTAR6",1,0)
NVSTAR6 ;emc/maw-reset rpc broker parameters and clear alerts ;09/01/02
"RTN","NVSTAR6",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSTAR6",3,0)
 ;
"RTN","NVSTAR6",4,0)
BROKER ; reset rpc broker parameters...
"RTN","NVSTAR6",5,0)
 ; rpc broker parameters file exists?...
"RTN","NVSTAR6",6,0)
 W !,"RESET RPC BROKER PARAMETERS file"
"RTN","NVSTAR6",7,0)
 I '$D(^XWB(8994.1,0)) D  Q
"RTN","NVSTAR6",8,0)
 .W !?2,"No RPC BROKER PARAMETERS file exists here!" Q
"RTN","NVSTAR6",9,0)
 ;
"RTN","NVSTAR6",10,0)
 S NVSCKFLG=1
"RTN","NVSTAR6",11,0)
 ;
"RTN","NVSTAR6",12,0)
 ; a BOX-VOLUME pair exists in ^%ZIS(14.7,...)?  If NVSOPSYS["OpenM" we're
"RTN","NVSTAR6",13,0)
 ; looking for 'ROU:'_Cache configuration name (e.g., ROU:TEST).
"RTN","NVSTAR6",14,0)
 ; If NVSOPSYS["DSM" we're looking for [at least] 'TOU'.
"RTN","NVSTAR6",15,0)
 ; NOTE: NVSBOXFN *may* be used later in this routine to set up at least one
"RTN","NVSTAR6",16,0)
 ; BOX-VOLUME PAIR (if no PAIR(s) exist at all)...
"RTN","NVSTAR6",17,0)
 I NVSOPSYS["OpenM" D
"RTN","NVSTAR6",18,0)
 .S NVSCFG="ROU:"
"RTN","NVSTAR6",19,0)
 .S NVSVER=$ZV
"RTN","NVSTAR6",20,0)
 .I NVSVER["2.1." S NVSCFG=NVSCFG_$P($ZU(86),"*",3)
"RTN","NVSTAR6",21,0)
 .I NVSVER["3.2" S NVSCFG=NVSCFG_$P($ZU(86),"*",2)
"RTN","NVSTAR6",22,0)
 .I NVSVER["OpenVMS" S NVSCFG=NVSCFG_$P($ZU(86),"*",2)
"RTN","NVSTAR6",23,0)
 .I NVSVER["4.1." S NVSCFG=NVSCFG_$P($ZU(86),"*",2)
"RTN","NVSTAR6",24,0)
 .K NVSVER
"RTN","NVSTAR6",25,0)
 .W !?2,"Edit TASKMAN SITE PARAMETERS file (#14.7) for"
"RTN","NVSTAR6",26,0)
 .W !?2,"this Cache configuration name: ",NVSCFG
"RTN","NVSTAR6",27,0)
 .W !?2,"This procedure looks for the first BOX-VOLUME PAIR record"
"RTN","NVSTAR6",28,0)
 .W !?2,"in file 14.7 and changes the NAME field of that record..."
"RTN","NVSTAR6",29,0)
 .S NVSBOXFN=+$O(^%ZIS(14.7,"B",NVSCFG,0))
"RTN","NVSTAR6",30,0)
 .; if NVSBOXFN=0 then we don't have a good BOX-VOLUME PAIR.  so, let's
"RTN","NVSTAR6",31,0)
 .; see if there is an entry and if so, let's rename it for this account...
"RTN","NVSTAR6",32,0)
 .I NVSBOXFN=0 D
"RTN","NVSTAR6",33,0)
 ..S NVSX=+$O(^%ZIS(14.7,0))
"RTN","NVSTAR6",34,0)
 ..I NVSX=0 K NVSX Q
"RTN","NVSTAR6",35,0)
 ..W !?4,"Record #",NVSX
"RTN","NVSTAR6",36,0)
 ..W "  NAME field = ",$P($G(^%ZIS(14.7,NVSX,0)),"^")
"RTN","NVSTAR6",37,0)
 ..S NVSBOXFN=NVSX
"RTN","NVSTAR6",38,0)
 ..S DIE="^%ZIS(14.7,"
"RTN","NVSTAR6",39,0)
 ..S DA=NVSX
"RTN","NVSTAR6",40,0)
 ..S DR=".01///^S X=NVSCFG"
"RTN","NVSTAR6",41,0)
 ..D ^DIE
"RTN","NVSTAR6",42,0)
 ..K DA,DIE,DR,NVSX
"RTN","NVSTAR6",43,0)
 .I NVSBOXFN=0 D
"RTN","NVSTAR6",44,0)
 ..S NVSCKFLG=0
"RTN","NVSTAR6",45,0)
 ..W $C(7)
"RTN","NVSTAR6",46,0)
 ..W !?2,"Error editing TASKMAN SITE PARAMETERS file!"
"RTN","NVSTAR6",47,0)
 ..W !?2,"I could not find a record in file 14.7."
"RTN","NVSTAR6",48,0)
 .I NVSBOXFN'=0 W !?4,"Changed to ",NVSCFG
"RTN","NVSTAR6",49,0)
 ;
"RTN","NVSTAR6",50,0)
 ; DSM operating system...
"RTN","NVSTAR6",51,0)
 I NVSOPSYS["DSM" D
"RTN","NVSTAR6",52,0)
 .D GETENV^%ZOSV
"RTN","NVSTAR6",53,0)
 .S NVSCFG=$P(Y,"^",4)
"RTN","NVSTAR6",54,0)
 .S NVSBOXFN=+$O(^%ZIS(14.7,"B",NVSCFG,0))
"RTN","NVSTAR6",55,0)
 .I NVSBOXFN'>0 D
"RTN","NVSTAR6",56,0)
 ..S NVSCKFLG=0
"RTN","NVSTAR6",57,0)
 ..W !?4,"Error finding BOX-VOLUME PAIR in TASKMAN SITE PARAMETERS file (#14.7)."
"RTN","NVSTAR6",58,0)
 ..W !?4,"There should be an entry for ",NVSCFG," in file 14.7 but there is not."
"RTN","NVSTAR6",59,0)
 ..W !?4,"This particular procedure is abandoned, but you should check this out"
"RTN","NVSTAR6",60,0)
 ..W !?4,"because Task Manager may not run in this account without the correct"
"RTN","NVSTAR6",61,0)
 ..W !?4,"BOX-VOLUME PAIR entry for ",NVSCFG," in that file."
"RTN","NVSTAR6",62,0)
 ;
"RTN","NVSTAR6",63,0)
 ; a domain name exists at ^XMB(1,1,0)?  NOTE:  NVSDOMFN will be used later in
"RTN","NVSTAR6",64,0)
 ; this routine...
"RTN","NVSTAR6",65,0)
 I NVSCKFLG D
"RTN","NVSTAR6",66,0)
 .S NVSDOMFN=+^XMB(1,1,0)
"RTN","NVSTAR6",67,0)
 .S NVSDOMNM=$P($G(^DIC(4.2,NVSDOMFN,0)),U)
"RTN","NVSTAR6",68,0)
 .I NVSDOMNM="" D
"RTN","NVSTAR6",69,0)
 ..S NVSCKFLG=0
"RTN","NVSTAR6",70,0)
 ..W !?2,"No DOMAIN name exits in the Domain file (^XMB(1,1,0)!"
"RTN","NVSTAR6",71,0)
 ;
"RTN","NVSTAR6",72,0)
 ; at this point, if any checks failed, we abort our reset attempt...
"RTN","NVSTAR6",73,0)
 I 'NVSCKFLG D  Q
"RTN","NVSTAR6",74,0)
 .W !,"Reset of RPC BROKER PARAMETERS file aborted."
"RTN","NVSTAR6",75,0)
 .K NVSBOXFN,NVSCKFLG,NVSDOMFN,NVSDOMNM
"RTN","NVSTAR6",76,0)
 ;
"RTN","NVSTAR6",77,0)
 ; we're ready to set/reset what've we've got...
"RTN","NVSTAR6",78,0)
 K NVSCKFLG,NVSX
"RTN","NVSTAR6",79,0)
 ;
"RTN","NVSTAR6",80,0)
 ; reset domain name (if needed)...
"RTN","NVSTAR6",81,0)
 W !?4,"Edit domain name in RPC BROKER PARAMETERS file (#8994.1)..."
"RTN","NVSTAR6",82,0)
 S NVSCURDM=+$G(^XWB(8994.1,1,0))
"RTN","NVSTAR6",83,0)
 S NVSCURDM=$P($G(^DIC(4.2,NVSCURDM,0)),U)
"RTN","NVSTAR6",84,0)
 S NVSDOMF=$S(NVSCURDM=NVSDOMNM:1,1:0)
"RTN","NVSTAR6",85,0)
 I 'NVSDOMF D
"RTN","NVSTAR6",86,0)
 .K ^XWB(8994.1,"B")
"RTN","NVSTAR6",87,0)
 .S $P(^XWB(8994.1,1,0),U)=NVSDOMFN
"RTN","NVSTAR6",88,0)
 .S ^XWB(8994.1,"B",NVSDOMFN,1)=""
"RTN","NVSTAR6",89,0)
 .I NVSCURDM="" D
"RTN","NVSTAR6",90,0)
 ..S $P(^XWB(8994.1,0),U,3)=1
"RTN","NVSTAR6",91,0)
 ..S $P(^XWB(8994.1,0),U,4)=1
"RTN","NVSTAR6",92,0)
 W "done."
"RTN","NVSTAR6",93,0)
 ;
"RTN","NVSTAR6",94,0)
 ; if no box-volume pair, enter one (from the taskman parameters file) found
"RTN","NVSTAR6",95,0)
 ; in the module above.  enter tcp port 9200 as well...
"RTN","NVSTAR6",96,0)
 I '+$O(^XWB(8994.1,1,7,0)) D
"RTN","NVSTAR6",97,0)
 .S ^XWB(8994.1,1,7,0)="^8994.17P^1^1"
"RTN","NVSTAR6",98,0)
 .S ^XWB(8994.1,1,7,1,0)=NVSBOXFN
"RTN","NVSTAR6",99,0)
 .S ^XWB(8994.1,1,7,"B",NVSBOXFN,1)=""
"RTN","NVSTAR6",100,0)
 .S ^XWB(8994.1,1,7,1,1,0)="^8994.171^1^1"
"RTN","NVSTAR6",101,0)
 .S ^XWB(8994.1,1,7,1,1,1,0)="9200^^^"
"RTN","NVSTAR6",102,0)
 .S ^XWB(8994.1,1,7,1,1,"B","9200",1)=""
"RTN","NVSTAR6",103,0)
 ;
"RTN","NVSTAR6",104,0)
 ; reset status to STOPPED for any ports found in all BOX-VOLUME pairs...
"RTN","NVSTAR6",105,0)
 W !?4,"Reset STATUS field to ""STOPPED"" for any ports found..."
"RTN","NVSTAR6",106,0)
 S NVSX=0
"RTN","NVSTAR6",107,0)
 F  S NVSX=$O(^XWB(8994.1,1,7,NVSX)) Q:'NVSX  D
"RTN","NVSTAR6",108,0)
 .S NVSY=0
"RTN","NVSTAR6",109,0)
 .F  S NVSY=$O(^XWB(8994.1,1,7,NVSX,1,NVSY)) Q:'NVSY  D
"RTN","NVSTAR6",110,0)
 ..S NVSDATA=^XWB(8994.1,1,7,NVSX,1,NVSY,0)
"RTN","NVSTAR6",111,0)
 ..S $P(NVSDATA,U,2)=6
"RTN","NVSTAR6",112,0)
 ..S $P(NVSDATA,U,4)=1
"RTN","NVSTAR6",113,0)
 ..S ^XWB(8994.1,1,7,NVSX,1,NVSY,0)=NVSDATA
"RTN","NVSTAR6",114,0)
 ..K NVSDATA
"RTN","NVSTAR6",115,0)
 W "done."
"RTN","NVSTAR6",116,0)
 ;
"RTN","NVSTAR6",117,0)
 K NVSBOX,NVSBOXFN,NVSBVF,NVSCFG,NVSCURDM,NVSDOMF,NVSDOMFN,NVSDOMNM,NVSPORTF,NVSX,NVSY
"RTN","NVSTAR6",118,0)
 Q
"RTN","NVSTAR6",119,0)
 ;
"RTN","NVSTAR6",120,0)
ALERTS ; clear all alerts from the ALERT file (^XTV(8992,...))...
"RTN","NVSTAR6",121,0)
 W !!,"CLEAR ALERTS FROM THE ALERT FILE (^XTV(8992,...)"
"RTN","NVSTAR6",122,0)
 W !?2,"Records processed = "
"RTN","NVSTAR6",123,0)
 W ?22,$J("0",10)
"RTN","NVSTAR6",124,0)
 N DA,DIK,NVSC,NVSCOUNT,NVSX,X,Y
"RTN","NVSTAR6",125,0)
 S NVSC="F ZZ=1:1:10 W $C(8)"
"RTN","NVSTAR6",126,0)
 S (NVSCOUNT,NVSX)=0
"RTN","NVSTAR6",127,0)
 F  S NVSX=$O(^XTV(8992,NVSX)) Q:'NVSX  D
"RTN","NVSTAR6",128,0)
 .S NVSCOUNT=NVSCOUNT+1
"RTN","NVSTAR6",129,0)
 .X NVSC
"RTN","NVSTAR6",130,0)
 .W $J(NVSCOUNT,10)
"RTN","NVSTAR6",131,0)
 .S DIK="^XTV(8992,"
"RTN","NVSTAR6",132,0)
 .S DA=NVSX
"RTN","NVSTAR6",133,0)
 .D ^DIK
"RTN","NVSTAR6",134,0)
 .K DA,DIK,X,Y
"RTN","NVSTAR6",135,0)
 W !,"Done."
"RTN","NVSTAR6",136,0)
 Q
"RTN","NVSTAR7")
0^55^B5850149
"RTN","NVSTAR7",1,0)
NVSTAR7 ;emc/maw-clean out network mail ;09/01/02
"RTN","NVSTAR7",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSTAR7",3,0)
 ;
"RTN","NVSTAR7",4,0)
 W !!,"CLEAN OUT POSTMASTER'S NETWORK MAIL BASKETS"
"RTN","NVSTAR7",5,0)
 W !,"This module loops through Postmaster's network mail baskets"
"RTN","NVSTAR7",6,0)
 W !,"(i.e., those baskets containing pointers to messages to be"
"RTN","NVSTAR7",7,0)
 W !,"sent to other sites) and deletes references to messages to"
"RTN","NVSTAR7",8,0)
 W !,"other domains.  It also deletes the actual messages from the"
"RTN","NVSTAR7",9,0)
 W !,"Message file (#3.9)."
"RTN","NVSTAR7",10,0)
 ; get current domain name (should be TEST.domain.yada...)...
"RTN","NVSTAR7",11,0)
 S NVSDOM=+^XMB(1,1,0)
"RTN","NVSTAR7",12,0)
 S NVSDOM=$P(^DIC(4.2,NVSDOM,0),"^")
"RTN","NVSTAR7",13,0)
 ;
"RTN","NVSTAR7",14,0)
 ; clean out Postmaster's network mail baskets (basket record number
"RTN","NVSTAR7",15,0)
 ; increment taken from example in ENT^XMS5)...
"RTN","NVSTAR7",16,0)
 W !?2,"Cleaning out POSTMASTER's network mail baskets"
"RTN","NVSTAR7",17,0)
 S NVSBSKT=999
"RTN","NVSTAR7",18,0)
 F  S NVSBSKT=$O(^XMB(3.7,.5,2,NVSBSKT)) Q:'NVSBSKT!(NVSBSKT>9999)  D
"RTN","NVSTAR7",19,0)
 .S NVSBSKTN=$P(^XMB(3.7,.5,2,NVSBSKT,0),"^")
"RTN","NVSTAR7",20,0)
 .S NVSMSG=0
"RTN","NVSTAR7",21,0)
 .F  S NVSMSG=$O(^XMB(3.7,.5,2,NVSBSKT,1,NVSMSG)) Q:'NVSMSG  D
"RTN","NVSTAR7",22,0)
 ..S NVSMSGN=+$G(^XMB(3.7,.5,2,NVSBSKT,1,NVSMSG,0))
"RTN","NVSTAR7",23,0)
 ..; delete the message entry in this basket...
"RTN","NVSTAR7",24,0)
 ..S DA=NVSMSGN
"RTN","NVSTAR7",25,0)
 ..S DA(1)=NVSBSKT
"RTN","NVSTAR7",26,0)
 ..S DA(2)=.5
"RTN","NVSTAR7",27,0)
 ..S DIK="^XMB(3.7,"_DA(2)_",2,"_DA(1)_",1,"
"RTN","NVSTAR7",28,0)
 ..D ^DIK
"RTN","NVSTAR7",29,0)
 ..K DA,DIK
"RTN","NVSTAR7",30,0)
 ..; delete the message from the message file...
"RTN","NVSTAR7",31,0)
 ..S DA=NVSMSGN
"RTN","NVSTAR7",32,0)
 ..S DIK="^XMB(3.9,"
"RTN","NVSTAR7",33,0)
 ..D ^DIK
"RTN","NVSTAR7",34,0)
 ..K DA,DIK,NVSMSGN
"RTN","NVSTAR7",35,0)
 .;
"RTN","NVSTAR7",36,0)
 .; if this basket happens to be the TEST.domain.yada basket, delete it...
"RTN","NVSTAR7",37,0)
 .I NVSBSKTN=NVSDOM D
"RTN","NVSTAR7",38,0)
 ..S DA=NVSBSKT
"RTN","NVSTAR7",39,0)
 ..S DA(1)=.5
"RTN","NVSTAR7",40,0)
 ..S DIK="^XMB(3.7,"_DA(1)_",2,"
"RTN","NVSTAR7",41,0)
 ..D ^DIK
"RTN","NVSTAR7",42,0)
 ..K DA,DIK
"RTN","NVSTAR7",43,0)
 K NVSBSKT,NVSBSKTN,NVSMSG
"RTN","NVSTAR7",44,0)
 ;
"RTN","NVSTAR7",45,0)
 ; delete the network mail file...
"RTN","NVSTAR7",46,0)
 W !?2,"Deleting the ^XMB(3.9,""AI"") cross reference..."
"RTN","NVSTAR7",47,0)
 K ^XMBX(3.9,"AI")
"RTN","NVSTAR7",48,0)
 W "done."
"RTN","NVSTAR7",49,0)
 ;
"RTN","NVSTAR7",50,0)
 ; remove any remote users from the MAIL GROUP file...
"RTN","NVSTAR7",51,0)
 W !?2,"Removing any remote users from the MAIL GROUP file (#3.8)..."
"RTN","NVSTAR7",52,0)
 S NVSGRP=0
"RTN","NVSTAR7",53,0)
 F  S NVSGRP=$O(^XMB(3.8,NVSGRP)) Q:'NVSGRP  D
"RTN","NVSTAR7",54,0)
 .S NVSREM=0
"RTN","NVSTAR7",55,0)
 .F  S NVSREM=$O(^XMB(3.8,NVSGRP,6,NVSREM)) Q:'NVSREM  D
"RTN","NVSTAR7",56,0)
 ..S DA=NVSREM
"RTN","NVSTAR7",57,0)
 ..S DA(1)=NVSGRP
"RTN","NVSTAR7",58,0)
 ..S DIK="^XMB(3.8,"_DA(1)_",6,"
"RTN","NVSTAR7",59,0)
 ..D ^DIK
"RTN","NVSTAR7",60,0)
 W "done."
"RTN","NVSTAR7",61,0)
 K NVSDOM,NVSGRP,NVSREM
"RTN","NVSTAR7",62,0)
 Q
"RTN","NVSTAR8")
0^56^B1238557
"RTN","NVSTAR8",1,0)
NVSTAR8 ;emc/maw-enable/disable logins ;09/01/02
"RTN","NVSTAR8",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITIES; 01 Jun 1999
"RTN","NVSTAR8",3,0)
 ;
"RTN","NVSTAR8",4,0)
 ; enable logons...
"RTN","NVSTAR8",5,0)
 ; if this is an Cache system, first check to make sure the system-level
"RTN","NVSTAR8",6,0)
 ; switch is re-enabled...
"RTN","NVSTAR8",7,0)
 I $G(^XTMP("NVSTAR","NVSOPSYS"))["OpenM" D
"RTN","NVSTAR8",8,0)
 .S NVSCNSP=$ZU(5)
"RTN","NVSTAR8",9,0)
 .S X=$ZU(5,"%SYS")
"RTN","NVSTAR8",10,0)
 .I $$%swstat^SWSET(10,0)=1 S X=$$%swset^SWSET(10,0,0)
"RTN","NVSTAR8",11,0)
 .S X=$ZU(5,NVSCNSP)
"RTN","NVSTAR8",12,0)
 .K NVSCNSP
"RTN","NVSTAR8",13,0)
 ;
"RTN","NVSTAR8",14,0)
 D ENABL
"RTN","NVSTAR8",15,0)
 Q
"RTN","NVSTAR8",16,0)
 ;
"RTN","NVSTAR8",17,0)
ENABL ; (re-)enable logons in the volume set file...
"RTN","NVSTAR8",18,0)
 S NVSX=0
"RTN","NVSTAR8",19,0)
 F  S NVSX=$O(^%ZIS(14.5,NVSX)) Q:'NVSX  D
"RTN","NVSTAR8",20,0)
 .S $P(^%ZIS(14.5,NVSX,0),U,2)="N"
"RTN","NVSTAR8",21,0)
 .S NVSXN=$P(^%ZIS(14.5,NVSX,0),U)
"RTN","NVSTAR8",22,0)
 .S ^%ZIS(14.5,"LOGON",NVSXN)=0
"RTN","NVSTAR8",23,0)
 .K NVSXN
"RTN","NVSTAR8",24,0)
 K NVSX
"RTN","NVSTAR8",25,0)
 Q
"RTN","NVSTAR8",26,0)
 ;
"RTN","NVSTAR8",27,0)
DISABL ; disable logons in the volume set file...
"RTN","NVSTAR8",28,0)
 N NVSX,NVSXN
"RTN","NVSTAR8",29,0)
 S NVSX=0
"RTN","NVSTAR8",30,0)
 F  S NVSX=$O(^%ZIS(14.5,NVSX)) Q:'NVSX  D
"RTN","NVSTAR8",31,0)
 .S NVSXN=$P(^%ZIS(14.5,NVSX,0),"^")
"RTN","NVSTAR8",32,0)
 .S $P(^%ZIS(14.5,NVSX,0),"^",2)="Y"
"RTN","NVSTAR8",33,0)
 .S ^%ZIS(14.5,"LOGON",NVSXN)=1
"RTN","NVSTAR8",34,0)
 .K NVSXN
"RTN","NVSTAR8",35,0)
 Q
"RTN","NVSTARH")
0^57^B47700301
"RTN","NVSTARH",1,0)
NVSTARH ;emciss/maw-brief documentation/help ;08/01/02
"RTN","NVSTARH",2,0)
 ;;6.0;EMC TEST ACCOUNT RESET UTILITY; 01 Jun 1999
"RTN","NVSTARH",3,0)
 ;
"RTN","NVSTARH",4,0)
 N DIR,DIROUT,DIRUT,X,Y
"RTN","NVSTARH",5,0)
 W @IOF
"RTN","NVSTARH",6,0)
 F NVSX=1:1 S NVSTEXT=$P($T(DESC+NVSX),";;",2) Q:NVSTEXT["@@"!($D(DIRUT))  D
"RTN","NVSTARH",7,0)
 .I $Y>(IOSL-3) D  Q:$D(DIRUT)
"RTN","NVSTARH",8,0)
 ..S DIR(0)="E"
"RTN","NVSTARH",9,0)
 ..W !
"RTN","NVSTARH",10,0)
 ..D ^DIR K DIR
"RTN","NVSTARH",11,0)
 ..I '$D(DIRUT) W @IOF
"RTN","NVSTARH",12,0)
 .W !,NVSTEXT
"RTN","NVSTARH",13,0)
 I '$D(DIRUT) D
"RTN","NVSTARH",14,0)
 .S DIR(0)="EA"
"RTN","NVSTARH",15,0)
 .S DIR("A")="Press <enter> to continue..."
"RTN","NVSTARH",16,0)
 .W ! D ^DIR K DIR
"RTN","NVSTARH",17,0)
 K NVSTEXT,NVSX
"RTN","NVSTARH",18,0)
 Q
"RTN","NVSTARH",19,0)
 ;        
"RTN","NVSTARH",20,0)
DESC ;;
"RTN","NVSTARH",21,0)
 ;;ENTERPRISE MANAGEMENT CENTER :: TEST ACCOUNT RESET UTILITY v6.0
"RTN","NVSTARH",22,0)
 ;;
"RTN","NVSTARH",23,0)
 ;;This utility is used to reset various file parameters in order for you
"RTN","NVSTARH",24,0)
 ;;to use a restored production system as a "test" system.  Following are
"RTN","NVSTARH",25,0)
 ;;the actions that will be taken.  Note that this utility uses all published
"RTN","NVSTARH",26,0)
 ;;conventions for file settings, domain naming, and "production" namespace
"RTN","NVSTARH",27,0)
 ;;(or UCI).  If any errors are encountered during the running of this utility,
"RTN","NVSTARH",28,0)
 ;;please log a NOIS and seek assistance in getting things set up correctly.
"RTN","NVSTARH",29,0)
 ;;
"RTN","NVSTARH",30,0)
 ;;The NVSTAR* routines perform the following actions:
"RTN","NVSTARH",31,0)
 ;;
"RTN","NVSTARH",32,0)
 ;; 1. Rename the domain so that it begins with "TEST" (for example:
"RTN","NVSTARH",33,0)
 ;;    DOMAIN.VA.GOV would be changed to TEST.DOMAIN.VA.GOV).  The introductory
"RTN","NVSTARH",34,0)
 ;;    text is replaced with something that is meant to scream out to anyone
"RTN","NVSTARH",35,0)
 ;;    logging onto the system that this is the TEST system.
"RTN","NVSTARH",36,0)
 ;;
"RTN","NVSTARH",37,0)
 ;; 2. Close, remove any relay domains, and disable "turn" for ALL domains.
"RTN","NVSTARH",38,0)
 ;;    If you want to open mail communications from your Test system to your
"RTN","NVSTARH",39,0)
 ;;    production domain, you will need to do that manually.  You should be
"RTN","NVSTARH",40,0)
 ;;    very careful, however, to make sure that domains are left closed.
"RTN","NVSTARH",41,0)
 ;;
"RTN","NVSTARH",42,0)
 ;; 3. Disable all devices that contain a printer subtype (for example, any device
"RTN","NVSTARH",43,0)
 ;;    that has a subtype of P-anything will be disabled).  "Disabled" means that
"RTN","NVSTARH",44,0)
 ;;    the $I values are set equal to the NULL device's $I (the NULL device's $I
"RTN","NVSTARH",45,0)
 ;;    is retrieved from your Device file automatically).  Also, the OUT-OF-SERVICE
"RTN","NVSTARH",46,0)
 ;;    DATE field is set to today's date.  Lastly, the QUEUEING field is set to
"RTN","NVSTARH",47,0)
 ;;    NOT ALLOWED.  (Note that the BROWSER device and the HFS devices are screened
"RTN","NVSTARH",48,0)
 ;;    out of this process and are NOT disabled.)
"RTN","NVSTARH",49,0)
 ;;
"RTN","NVSTARH",50,0)
 ;; 4. Clean up HL7/CIRN/MPI data.  Following are the clean up actions:
"RTN","NVSTARH",51,0)
 ;;    -In HL LOWER LEVEL PROTOCOL PARAMETER (file 869.2):  deletes TCP/IP
"RTN","NVSTARH",52,0)
 ;;     addresses from field 400.01.
"RTN","NVSTARH",53,0)
 ;;    -In HL COMMUNICATION SERVER PARAMETERS (file 869.3):  deletes TCP/IP
"RTN","NVSTARH",54,0)
 ;;     addresses from field .03.
"RTN","NVSTARH",55,0)
 ;;    -In HL LOGICAL LINK (file 870):  sets field 4.5 (AUTOSTART) to DISABLED,
"RTN","NVSTARH",56,0)
 ;;     field 14 (SHUTDOWN LLP?) to YES, and clears TCP/IP addresses from field
"RTN","NVSTARH",57,0)
 ;;     400.01.  Also, devices listed in file 870 are pointers to the Device file
"RTN","NVSTARH",58,0)
 ;;     (#3.5), so these device entries in file 3.5 are also disabled using the
"RTN","NVSTARH",59,0)
 ;;     same reset process described in Step 3 above.
"RTN","NVSTARH",60,0)
 ;;    -In HL7 MESSAGE ADMINISTRATION (file 773):  sets field 20 (STATUS) to
"RTN","NVSTARH",61,0)
 ;;     SUCCESSFULLY COMPLETED, and deletes the "AC" cross reference.
"RTN","NVSTARH",62,0)
 ;;
"RTN","NVSTARH",63,0)
 ;; 5. Clean up RAI/MDS data.
"RTN","NVSTARH",64,0)
 ;;    This module loops through the WARD LOCATION file (#42) and sets the
"RTN","NVSTARH",65,0)
 ;;    RAI/MDS WARD field (#.035) to 0 (zero) to disable any possible HL7
"RTN","NVSTARH",66,0)
 ;;    transmissions to a COTS database (reference patch DG*5.3*190).
"RTN","NVSTARH",67,0)
 ;;
"RTN","NVSTARH",68,0)
 ;; 6. DELETE CIRN MPI DATA"
"RTN","NVSTARH",69,0)
 ;;    This call loops through ^DPT and deletes CIRN MPI data brought over from
"RTN","NVSTARH",70,0)
 ;;    a Production account refresh of a mirrored Test account.  Only CMOR
"RTN","NVSTARH",71,0)
 ;;    activity scores with be left intact.  It will also kill several CIRN-related
"RTN","NVSTARH",72,0)
 ;;    cross references.  Finally, it will delete the entries in the following
"RTN","NVSTARH",73,0)
 ;;    files:
"RTN","NVSTARH",74,0)
 ;;      SUBSCRIPTION CONTROL file (#774)
"RTN","NVSTARH",75,0)
 ;;      TREATING FACILITY file (#391.91)
"RTN","NVSTARH",76,0)
 ;;      PATIENT DATA EXCEPTION file (#391.98)
"RTN","NVSTARH",77,0)
 ;;      PATIENT DATA ELEMENT file (#391.99)
"RTN","NVSTARH",78,0)
 ;;   
"RTN","NVSTARH",79,0)
 ;; 7. Reset selected %Z globals.  All the entries in the schedule file (^%ZTSCH),
"RTN","NVSTARH",80,0)
 ;;    the task file (^%ZTSK), the failed access attempts log (^%ZUA(3.05)), and
"RTN","NVSTARH",81,0)
 ;;    the programmer mode log (^%ZUA(3.07)) are deleted and the top levels of the
"RTN","NVSTARH",82,0)
 ;;    globals reset appropriately.  NOTE:  All scheduled tasks are deleted.  If
"RTN","NVSTARH",83,0)
 ;;    you have any scheduled options that you wish to run, you will have to use
"RTN","NVSTARH",84,0)
 ;;    the Task Manager option "Schedule/Unschedule Options" (XUTM SCHEDULE) to
"RTN","NVSTARH",85,0)
 ;;    reschedule the options to run at your desired dates and times.
"RTN","NVSTARH",86,0)
 ;;
"RTN","NVSTARH",87,0)
 ;; 8. Reset RPC Broker Parameters file -- so that Broker will start up correctly
"RTN","NVSTARH",88,0)
 ;;    once TaskMan is started.  Note:  this procedure examines the RPC BROKER
"RTN","NVSTARH",89,0)
 ;;    PARAMETERS file (file number 8994.1, global ^XWB(8994.1,...)).  If this
"RTN","NVSTARH",90,0)
 ;;    file is not present on your system, or if you have not set it up correctly,
"RTN","NVSTARH",91,0)
 ;;    you will receive a message stating that fact.  If the file is not present,
"RTN","NVSTARH",92,0)
 ;;    or it is not set up correctly, THIS IS NOT A FAILURE EVENT.  Whatever Broker
"RTN","NVSTARH",93,0)
 ;;    startup procedure you currently have in place will have to be used to
"RTN","NVSTARH",94,0)
 ;;    restart the RPC Broker listener.
"RTN","NVSTARH",95,0)
 ;;
"RTN","NVSTARH",96,0)
 ;; 9. Clean up outgoing network mail.  This module processes through POSTMASTER's
"RTN","NVSTARH",97,0)
 ;;    network mail baskets and cleans out any messages pending transmission to
"RTN","NVSTARH",98,0)
 ;;    the remote site.
"RTN","NVSTARH",99,0)
 ;;   
"RTN","NVSTARH",100,0)
 ;;10. Re-enable logons in the Volume Set file.  This is an optional step.  When
"RTN","NVSTARH",101,0)
 ;;    you start the reset procedures (DO ^NVSTAR), you are asked whether you wish
"RTN","NVSTARH",102,0)
 ;;    this particular part to run automatically.  If you choose not to allow this
"RTN","NVSTARH",103,0)
 ;;    part to run automatically, logons will remain disabled.  Otherwise, this
"RTN","NVSTARH",104,0)
 ;;    part processes all entries in the Volume Set file (#14.5) and re-enables
"RTN","NVSTARH",105,0)
 ;;    logons.
"RTN","NVSTARH",106,0)
 ;;
"RTN","NVSTARH",107,0)
 ;;IMPORTANT NOTE:  If a fatal error occurs, fix the problem that caused the
"RTN","NVSTARH",108,0)
 ;;error (remember, log a NOIS if you need help) and then restart the entire
"RTN","NVSTARH",109,0)
 ;;reset procedure by DO ^NVSTAR.  The entire reset procedure can be done
"RTN","NVSTARH",110,0)
 ;;repeatedly without problems because the software is designed to know what
"RTN","NVSTARH",111,0)
 ;;reset procedures have already been accomplished.
"RTN","NVSTARH",112,0)
 ;;@@
"VER")
8.0^22.0
**END**
**END**
