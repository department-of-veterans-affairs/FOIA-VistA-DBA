Released DG*5.3*749 SEQ #678
Extracted from mail message
**KIDS**:DG*5.3*749^

**INSTALL NAME**
DG*5.3*749
"BLD",7217,0)
DG*5.3*749^REGISTRATION^0^3071106^y
"BLD",7217,1,0)
^^3^3^3071106^
"BLD",7217,1,1,0)
This patch replaces ^%DTC calls in VADPT* routines, references to HCFA, 
"BLD",7217,1,2,0)
changes Widow/widower entry and corrects Eligibility Inquiry and mothers 
"BLD",7217,1,3,0)
maiden name in PID segment.
"BLD",7217,4,0)
^9.64PA^46^2
"BLD",7217,4,11,0)
11
"BLD",7217,4,11,2,0)
^9.641^11^1
"BLD",7217,4,11,2,11,0)
MARITAL STATUS  (File-top level)
"BLD",7217,4,11,2,11,1,0)
^9.6411^2^1
"BLD",7217,4,11,2,11,1,2,0)
MARITAL STATUS CODE
"BLD",7217,4,11,222)
y^n^p^^^^n^^n
"BLD",7217,4,11,224)

"BLD",7217,4,46,0)
46
"BLD",7217,4,46,222)
y^n^f^^^^n^^n
"BLD",7217,4,46,224)

"BLD",7217,4,"APDD",11,11)

"BLD",7217,4,"APDD",11,11,2)

"BLD",7217,4,"B",11,11)

"BLD",7217,4,"B",46,46)

"BLD",7217,6)
2^
"BLD",7217,6.3)
10
"BLD",7217,"ABPKG")
n
"BLD",7217,"INI")
DG53P749
"BLD",7217,"INID")
n^^n
"BLD",7217,"KRN",0)
^9.67PA^8989.52^19
"BLD",7217,"KRN",.4,0)
.4
"BLD",7217,"KRN",.4,"NM",0)
^9.68A^^
"BLD",7217,"KRN",.401,0)
.401
"BLD",7217,"KRN",.402,0)
.402
"BLD",7217,"KRN",.403,0)
.403
"BLD",7217,"KRN",.5,0)
.5
"BLD",7217,"KRN",.84,0)
.84
"BLD",7217,"KRN",3.6,0)
3.6
"BLD",7217,"KRN",3.8,0)
3.8
"BLD",7217,"KRN",9.2,0)
9.2
"BLD",7217,"KRN",9.8,0)
9.8
"BLD",7217,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",7217,"KRN",9.8,"NM",1,0)
DGRPDB^^0^B22806300
"BLD",7217,"KRN",9.8,"NM",2,0)
VADATE^^0^B6755062
"BLD",7217,"KRN",9.8,"NM",3,0)
VADPT2^^0^B11093574
"BLD",7217,"KRN",9.8,"NM",4,0)
VADPT3^^0^B14493357
"BLD",7217,"KRN",9.8,"NM",5,0)
VADPT5^^0^B23003439
"BLD",7217,"KRN",9.8,"NM",6,0)
VADPT61^^0^B8939828
"BLD",7217,"KRN",9.8,"NM",7,0)
VAFCPID^^0^B13319408
"BLD",7217,"KRN",9.8,"NM",8,0)
VAFHLPID^^0^B10207470
"BLD",7217,"KRN",9.8,"NM","B","DGRPDB",1)

"BLD",7217,"KRN",9.8,"NM","B","VADATE",2)

"BLD",7217,"KRN",9.8,"NM","B","VADPT2",3)

"BLD",7217,"KRN",9.8,"NM","B","VADPT3",4)

"BLD",7217,"KRN",9.8,"NM","B","VADPT5",5)

"BLD",7217,"KRN",9.8,"NM","B","VADPT61",6)

"BLD",7217,"KRN",9.8,"NM","B","VAFCPID",7)

"BLD",7217,"KRN",9.8,"NM","B","VAFHLPID",8)

"BLD",7217,"KRN",19,0)
19
"BLD",7217,"KRN",19,"NM",0)
^9.68A^^
"BLD",7217,"KRN",19.1,0)
19.1
"BLD",7217,"KRN",101,0)
101
"BLD",7217,"KRN",409.61,0)
409.61
"BLD",7217,"KRN",771,0)
771
"BLD",7217,"KRN",870,0)
870
"BLD",7217,"KRN",8989.51,0)
8989.51
"BLD",7217,"KRN",8989.52,0)
8989.52
"BLD",7217,"KRN",8994,0)
8994
"BLD",7217,"KRN","B",.4,.4)

"BLD",7217,"KRN","B",.401,.401)

"BLD",7217,"KRN","B",.402,.402)

"BLD",7217,"KRN","B",.403,.403)

"BLD",7217,"KRN","B",.5,.5)

"BLD",7217,"KRN","B",.84,.84)

"BLD",7217,"KRN","B",3.6,3.6)

"BLD",7217,"KRN","B",3.8,3.8)

"BLD",7217,"KRN","B",9.2,9.2)

"BLD",7217,"KRN","B",9.8,9.8)

"BLD",7217,"KRN","B",19,19)

"BLD",7217,"KRN","B",19.1,19.1)

"BLD",7217,"KRN","B",101,101)

"BLD",7217,"KRN","B",409.61,409.61)

"BLD",7217,"KRN","B",771,771)

"BLD",7217,"KRN","B",870,870)

"BLD",7217,"KRN","B",8989.51,8989.51)

"BLD",7217,"KRN","B",8989.52,8989.52)

"BLD",7217,"KRN","B",8994,8994)

"BLD",7217,"PRE")
DG53749V
"BLD",7217,"QUES",0)
^9.62^^
"BLD",7217,"REQB",0)
^9.611^4^4
"BLD",7217,"REQB",1,0)
DG*5.3*713^1
"BLD",7217,"REQB",2,0)
DG*5.3*532^1
"BLD",7217,"REQB",3,0)
DG*5.3*584^1
"BLD",7217,"REQB",4,0)
DG*5.3*508^1
"BLD",7217,"REQB","B","DG*5.3*508",4)

"BLD",7217,"REQB","B","DG*5.3*532",2)

"BLD",7217,"REQB","B","DG*5.3*584",3)

"BLD",7217,"REQB","B","DG*5.3*713",1)

"FIA",11)
MARITAL STATUS
"FIA",11,0)
^DIC(11,
"FIA",11,0,0)
11
"FIA",11,0,1)
y^n^p^^^^n^^n
"FIA",11,0,10)

"FIA",11,0,11)

"FIA",11,0,"RLRO")

"FIA",11,0,"VR")
5.3^DG
"FIA",11,11)
1
"FIA",11,11,2)

"FIA",46)
INPATIENT CPT CODE
"FIA",46,0)
^DGCPT(46,
"FIA",46,0,0)
46P
"FIA",46,0,1)
y^n^f^^^^n^^n
"FIA",46,0,10)

"FIA",46,0,11)

"FIA",46,0,"RLRO")

"FIA",46,0,"VR")
5.3^DG
"FIA",46,46)
0
"INI")
DG53P749
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
749^3071106^123456802
"PKG",5,22,1,"PAH",1,1,0)
^^3^3^3071106
"PKG",5,22,1,"PAH",1,1,1,0)
This patch replaces ^%DTC calls in VADPT* routines, references to HCFA, 
"PKG",5,22,1,"PAH",1,1,2,0)
changes Widow/widower entry and corrects Eligibility Inquiry and mothers 
"PKG",5,22,1,"PAH",1,1,3,0)
maiden name in PID segment.
"PRE")
DG53749V
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","DG53749V")
0^^B732365^n/a
"RTN","DG53749V",1,0)
DG53749V ;ALB/MRY - ENVIRONMENT CHECK; 10/2/03 3:32pm
"RTN","DG53749V",2,0)
  ;;5.3;Registration;**749**;Aug 13, 1993;Build 10
"RTN","DG53749V",3,0)
 ;;
"RTN","DG53749V",4,0)
EN ;
"RTN","DG53749V",5,0)
 S XPDABORT=""
"RTN","DG53749V",6,0)
 D PROGCHK(.XPDABORT)
"RTN","DG53749V",7,0)
 I XPDABORT="" K XPDABORT
"RTN","DG53749V",8,0)
 ;
"RTN","DG53749V",9,0)
 Q
"RTN","DG53749V",10,0)
 ;
"RTN","DG53749V",11,0)
PROGCHK(XPDABORT) ;
"RTN","DG53749V",12,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") DO
"RTN","DG53749V",13,0)
 .D BMES^XPDUTL("*****")
"RTN","DG53749V",14,0)
 .D MES^XPDUTL("Your programming variables are not set up properly.")
"RTN","DG53749V",15,0)
 .D MES^XPDUTL("Installation aborted.")
"RTN","DG53749V",16,0)
 .D MES^XPDUTL("*****")
"RTN","DG53749V",17,0)
 .S XPDABORT=2
"RTN","DG53749V",18,0)
 .Q
"RTN","DG53749V",19,0)
 Q
"RTN","DG53P749")
0^^B114625^n/a
"RTN","DG53P749",1,0)
DG53P749 ;ALB/MJB-UPDATE FOR FILE 11 ;5/10/07
"RTN","DG53P749",2,0)
 ;;5.3;Registration;**749**;Aug 13, 1993;Build 10
"RTN","DG53P749",3,0)
 N DA,DIE,D
"RTN","DG53P749",4,0)
 S DA=$O(^DIC(11,"B","WIDOW/WIDOWER",0))
"RTN","DG53P749",5,0)
 S DIE=11,DR=".01////WIDOWED"
"RTN","DG53P749",6,0)
 I DA'=4 Q
"RTN","DG53P749",7,0)
 D ^DIE
"RTN","DG53P749",8,0)
 Q
"RTN","DGRPDB")
0^1^B22806300^B20319584
"RTN","DGRPDB",1,0)
DGRPDB ;ALB/AAS,JAN,ERC,PHH - VIEW ONLY SCREEN TO DETERMINE BILLING ELIGIBILITY ; 3/23/06 8:16am
"RTN","DGRPDB",2,0)
 ;;5.3;Registration;**26,50,358,570,631,709,713,749**;Aug 13, 1993;Build 10
"RTN","DGRPDB",3,0)
 ;
"RTN","DGRPDB",4,0)
% S:'$D(DGQUIT) DGQUIT=0
"RTN","DGRPDB",5,0)
 G:DGQUIT END S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC G:+Y<1 END S DFN=+Y D EN
"RTN","DGRPDB",6,0)
 G %
"RTN","DGRPDB",7,0)
 ;
"RTN","DGRPDB",8,0)
EN ;entry with DFN defined.
"RTN","DGRPDB",9,0)
 Q:'$D(DFN)  D HOME^%ZIS,2^VADPT,HDR
"RTN","DGRPDB",10,0)
 D MT,AOIR,ELIG,DIS
"RTN","DGRPDB",11,0)
 N DGINS
"RTN","DGRPDB",12,0)
 I $$INSUR^IBBAPI(DFN,"","AR",.DGINS,1)
"RTN","DGRPDB",13,0)
 S C="",C=$O(DGINS("IBBAPI","INSUR",C),-1),C=+C+6
"RTN","DGRPDB",14,0)
 D:($Y>(IOSL-C)) PAUSE,HDR:'DGQUIT Q:DGQUIT  D INS,PAUSE
"RTN","DGRPDB",15,0)
 Q
"RTN","DGRPDB",16,0)
 ;
"RTN","DGRPDB",17,0)
ELIG ;eligibility code(s)
"RTN","DGRPDB",18,0)
 W !!," Primary Elig. Code: ",$P(VAEL(1),"^",2),"  --  ",$S(VAEL(8)']"":"NOT VERIFIED",1:$P(VAEL(8),"^",2))
"RTN","DGRPDB",19,0)
 I VAEL(8)]"" S Y=$S($D(^DPT(DFN,.361)):$P(^(.361),"^",2),1:"") W "  " D DT^DIQ
"RTN","DGRPDB",20,0)
 W !,"Other Elig. Code(s): " I $D(VAEL(1))>9 S I1=0 F I=0:0 S I=$O(VAEL(1,I)) Q:'I  S I1=I1+1 W:I1>1 !?21 W $P(VAEL(1,I),"^",2)
"RTN","DGRPDB",21,0)
 E  W "NO ADDITIONAL ELIGIBILITIES IDENTIFIED"
"RTN","DGRPDB",22,0)
 Q
"RTN","DGRPDB",23,0)
 ;
"RTN","DGRPDB",24,0)
DIS ;rated disabilities - Integration Agreement #700
"RTN","DGRPDB",25,0)
 ;
"RTN","DGRPDB",26,0)
 ;  This is called from the FEE and MCCR package!!!
"RTN","DGRPDB",27,0)
 ;
"RTN","DGRPDB",28,0)
 ;  Input:  DFN as IEN of PATIENT file
"RTN","DGRPDB",29,0)
 ;          VAEL array (if no passed, it is set) of eligibility info
"RTN","DGRPDB",30,0)
 ;
"RTN","DGRPDB",31,0)
 I '$D(VAEL) D ELIG^VADPT S DGKVAR=1
"RTN","DGRPDB",32,0)
 W:'+VAEL(3) !!,"  Service Connected: NO" W:+VAEL(3) !!,"         SC Percent: ",$P(VAEL(3),"^",2)_"%"
"RTN","DGRPDB",33,0)
 N DGQUIT
"RTN","DGRPDB",34,0)
 W !," Rated Disabilities: " I 'VAEL(4),$S('$D(^DG(391,+VAEL(6),0)):1,$P(^(0),"^",2):0,1:1) W "NOT A VETERAN" G DISQ
"RTN","DGRPDB",35,0)
 S I3=0 F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I!($G(DGQUIT)=1)  D
"RTN","DGRPDB",36,0)
 . S I1=^(I,0),I2=$S($D(^DIC(31,+I1,0)):$P(^(0),"^",1)_" ("_+$P(I1,"^",2)_"%-"_$S($P(I1,"^",3):"SC",$P(I1,"^",3)']"":"not specified",1:"NSC")_")",1:""),I3=I3+1
"RTN","DGRPDB",37,0)
 . I $Y>(IOSL-3) D PAUSE I $G(DGQUIT)=0 W @IOF
"RTN","DGRPDB",38,0)
 . I $G(DGQUIT)=1 Q
"RTN","DGRPDB",39,0)
 . W:I3>1 !?21 W I2
"RTN","DGRPDB",40,0)
 W:'I3 "NONE STATED"
"RTN","DGRPDB",41,0)
DISQ I $D(DGKVAR) D KVAR^VADPT K DGKVAR
"RTN","DGRPDB",42,0)
 K I,I1,I2,I3
"RTN","DGRPDB",43,0)
 Q
"RTN","DGRPDB",44,0)
 ;
"RTN","DGRPDB",45,0)
INS ;insurance information
"RTN","DGRPDB",46,0)
 ;
"RTN","DGRPDB",47,0)
 ;  This is called form the FEE package!!!
"RTN","DGRPDB",48,0)
 ;
"RTN","DGRPDB",49,0)
 ;  Input:  DFN as IEN of PATIENT file
"RTN","DGRPDB",50,0)
 ;          DGINSDT as date to compute insurance flag as of (default DT)
"RTN","DGRPDB",51,0)
 ;
"RTN","DGRPDB",52,0)
 Q:'$D(DFN)
"RTN","DGRPDB",53,0)
 W !!,"    Health Insurance: "
"RTN","DGRPDB",54,0)
 S Z=$$INSUR^IBBAPI(DFN,$S($D(DGINSDT):DGINSDT,1:DT))
"RTN","DGRPDB",55,0)
 W $S(Z:"YES",1:"NO")
"RTN","DGRPDB",56,0)
 D DISP^DGIBDSP
"RTN","DGRPDB",57,0)
INSQ K I,I1,DGX,Z
"RTN","DGRPDB",58,0)
 Q
"RTN","DGRPDB",59,0)
 ;
"RTN","DGRPDB",60,0)
IN ; Old code
"RTN","DGRPDB",61,0)
 Q
"RTN","DGRPDB",62,0)
 ;
"RTN","DGRPDB",63,0)
AOIR ;Agent Orange/ionizing radiation
"RTN","DGRPDB",64,0)
 N DGEC,NTA
"RTN","DGRPDB",65,0)
 S DGX=$S($D(^DPT(DFN,.321)):^(.321),1:"")
"RTN","DGRPDB",66,0)
 F I=2,3 S X=$P(DGX,"^",I) W:I=2 !,"           A/O Exp.: " W:I=3 "ION Rad.: " W $S(X="Y":"YES",X="N":"NO",X="U":"UNKNOWN",1:"NOT ANSWERED"),"   "
"RTN","DGRPDB",67,0)
 S X=$G(^DPT(DFN,.38)),X1=$P(X,"^",1) W "Medicaid Elig: ",$S(X1="":"NOT ANSWERED",'X1:"NO",1:"YES") I ($X+15)'>IOM W " - " S Y=$P(X,"^",2) D D^DIQ W $P(Y,"@")
"RTN","DGRPDB",68,0)
 S DGEC=$S($D(^DPT(DFN,.322)):^DPT(DFN,.322),1:"")
"RTN","DGRPDB",69,0)
 S X=$P(DGEC,U,13) W !,"        Env Contam.: " W $S(X="Y":"YES",X="N":"NO",X="U":"UNKNOWN",1:"NOT ANSWERED"),"   "
"RTN","DGRPDB",70,0)
 S NTA=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("INTRP"),1:"")
"RTN","DGRPDB",71,0)
 K DGNTARR
"RTN","DGRPDB",72,0)
 W "N/T Radium: " W $S(NTA'="":NTA,1:"NOT ANSWERED")
"RTN","DGRPDB",73,0)
 Q
"RTN","DGRPDB",74,0)
 ;
"RTN","DGRPDB",75,0)
PAUSE F J=1:1 Q:($Y>(IOSL-3))  W !
"RTN","DGRPDB",76,0)
 S DGX1="" I $E(IOST,1,2)["C-" N DIR S DIR(0)="E" D ^DIR S DGQUIT='Y
"RTN","DGRPDB",77,0)
 Q
"RTN","DGRPDB",78,0)
 ;
"RTN","DGRPDB",79,0)
HDR ;Screen Header
"RTN","DGRPDB",80,0)
 W @IOF I $P(VAEL(6),"^",2)]"" S DGTYPE=$P(VAEL(6),"^",2)
"RTN","DGRPDB",81,0)
 W $P(VADM(1),"^",1),?32,VA("PID"),?47,$P(VADM(3),"^",2) S X=$S($D(DGTYPE):$P(DGTYPE,"^",1),1:"PATIENT TYPE UNKNOWN"),X1=79-$L(X) W ?X1,X
"RTN","DGRPDB",82,0)
 S X="",$P(X,"=",80)="" W !,X Q
"RTN","DGRPDB",83,0)
 Q
"RTN","DGRPDB",84,0)
 ;
"RTN","DGRPDB",85,0)
MT I '$O(^DGMT(408.31,"AD",1,DFN,0)) W !,"  Means Test Status:  NOT IN MEANS TEST FILE" Q
"RTN","DGRPDB",86,0)
 ;if patient is on a DOM ward, don't display Means Test required message
"RTN","DGRPDB",87,0)
 D DOM^DGMTR D:'$G(DGDOM) DIS^DGMTU(DFN) K DGDOM
"RTN","DGRPDB",88,0)
 Q
"RTN","DGRPDB",89,0)
 ;
"RTN","DGRPDB",90,0)
END D KVAR^VADPT
"RTN","DGRPDB",91,0)
 K A,C,I,I1,I2,I3,J,DIC,DIR,DFN,DGA1,DGMT,DGMTL,DGMTLA,DGX,DGX1,DGT,DGTYPE,DGQUIT,DGMTLL,X,X1,VAROOT,VA,Y,Z
"RTN","DGRPDB",92,0)
 Q
"RTN","DGRPDB",93,0)
 ;
"RTN","DGRPDB",94,0)
RDIS(DGDFN,DGARR) ;API to return all Rated Disabilities from the 
"RTN","DGRPDB",95,0)
 ;Patient file for a patient using an array.  Returned in descending Service Connected percent.
"RTN","DGRPDB",96,0)
 ;
"RTN","DGRPDB",97,0)
 ; Integration Agreement #4807
"RTN","DGRPDB",98,0)
 ; 
"RTN","DGRPDB",99,0)
 ;Input          DGDFN - IEN of patient file (required)
"RTN","DGRPDB",100,0)
 ;Input/Output   DGARR - name of array for returned disability info (required)
"RTN","DGRPDB",101,0)
 ;               piece 1 - Disability IEN (in file 31)
"RTN","DGRPDB",102,0)
 ;               piece 2 - Disability %
"RTN","DGRPDB",103,0)
 ;               piece 3 - SC? (1,0)
"RTN","DGRPDB",104,0)
 ;               piece 4 - extremity affected
"RTN","DGRPDB",105,0)
 ;               piece 5 - original effective date
"RTN","DGRPDB",106,0)
 ;               piece 6 - current effective date
"RTN","DGRPDB",107,0)
 ;Output 1=successful and array returned with data
"RTN","DGRPDB",108,0)
 ;       0=unsuccessful and no array
"RTN","DGRPDB",109,0)
 ;         
"RTN","DGRPDB",110,0)
 N DGARR1,DGC,DGCC,DGERR,DGNODE,DGCT,DGE,DGEE
"RTN","DGRPDB",111,0)
 K DGW,DGARR
"RTN","DGRPDB",112,0)
 I $G(DGDFN)']"" Q 0
"RTN","DGRPDB",113,0)
 I '$D(^DPT(DGDFN,0)) Q 0
"RTN","DGRPDB",114,0)
 D GETS^DIQ(2,DGDFN,".3721*","I","DGARR1","DGERR")
"RTN","DGRPDB",115,0)
 I $D(DGERR) Q 0
"RTN","DGRPDB",116,0)
 S DGCC=0
"RTN","DGRPDB",117,0)
 S DGCC=$O(^DPT(DGDFN,.372,DGCC))
"RTN","DGRPDB",118,0)
 I 'DGCC Q 0
"RTN","DGRPDB",119,0)
 S DGC=""
"RTN","DGRPDB",120,0)
 F  S DGC=$O(DGARR1(2.04,DGC)) Q:DGC']""  D
"RTN","DGRPDB",121,0)
 . S DGNODE=DGC
"RTN","DGRPDB",122,0)
 . S DGARR(DGC)=DGARR1(2.04,DGNODE,.01,"I")_"^"_DGARR1(2.04,DGNODE,2,"I")_"^"_DGARR1(2.04,DGNODE,3,"I")_"^"_DGARR1(2.04,DGNODE,4,"I")_"^"_DGARR1(2.04,DGNODE,5,"I")_"^"_DGARR1(2.04,DGNODE,6,"I")
"RTN","DGRPDB",123,0)
 S DGE=""
"RTN","DGRPDB",124,0)
 F  S DGE=$O(DGARR(DGE)) Q:'DGE  D
"RTN","DGRPDB",125,0)
 . I $P(DGARR(DGE),U,2)="" S $P(DGARR(DGE),U,2)=0
"RTN","DGRPDB",126,0)
 . S DGW($P(DGARR(DGE),U,2),$P(DGE,",",1))=DGARR(DGE)
"RTN","DGRPDB",127,0)
 S DGE="",DGCT=1
"RTN","DGRPDB",128,0)
 K DGARR
"RTN","DGRPDB",129,0)
 F  S DGE=$O(DGW(DGE),-1) Q:DGE']""  D
"RTN","DGRPDB",130,0)
 . F DGEE=0:0 S DGEE=$O(DGW(DGE,DGEE)) Q:DGEE'>0  D
"RTN","DGRPDB",131,0)
 . . S DGARR(DGCT)=DGW(DGE,DGEE) S DGCT=DGCT+1
"RTN","DGRPDB",132,0)
 K DGW
"RTN","DGRPDB",133,0)
 Q 1
"RTN","DGRPDB",134,0)
 ;
"RTN","VADATE")
0^2^B6755062^B6671061
"RTN","VADATE",1,0)
VADATE ;ALB/MLI - GENERIC DATE ROUTINE ; 1 DEC 88 @1000
"RTN","VADATE",2,0)
 ;;5.3;Registration,;**749**;Aug 13, 1993;Build 10
"RTN","VADATE",3,0)
 ;
"RTN","VADATE",4,0)
 I $D(VADAT("F")),$S(VADAT("F")<1:1,VADAT("F")>2:1,1:0) K VADAT("F")
"RTN","VADATE",5,0)
 I '$D(VADAT("W")) S VANOW=$$NOW^XLFDT
"RTN","VADATE",6,0)
 S VA=$S('$D(VADAT("W")):VANOW,1:VADAT("W")),(VA,VADATE("I"))=$S($D(VADAT("S")):VA,'$D(VADAT("T")):$E(VA,1,12),1:$P(VA,".",1))
"RTN","VADATE",7,0)
 S:'$D(VADAT("H")) (VA(1),VA(2),VA(3))=1 I $D(VADAT("H")) F I=1:1:3 S VA(I)=$S(VADAT("H")[I:1,1:0)
"RTN","VADATE",8,0)
 S VAM=$S('$E(VA,4,5):"",'VA(2):"",$S('$D(VADAT("F")):1,VADAT("F")=2:1,1:0):$P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC","^",+$E(VA,4,5)),1:$E(VA,4,5)),VAY=$S(VA(3):(1700+$E(VA,1,3)),1:""),VAD=$S(VA(1)&$E(VA,6,7):$E(VA,6,7),1:"")
"RTN","VADATE",9,0)
 I $P(VA,".",2)]"" S VA=$P(VA,".",2),VAT=$E(VA_"000000",1,2)_":"_$E(VA_"000000",3,4) S:$D(VADAT("S")) VAT=VAT_":"_$E(VA_"000000",5,6)
"RTN","VADATE",10,0)
 I '$D(VADAT("F")) S VADATE("E")=VAM_$S(VAM]""&(VAD!VAY):" ",1:"")_$S(VAD:$J(+VAD,2),1:"")_$S(VAD&VAY:",",1:"")_VAY_$S($D(VAT):"@"_VAT,1:"") G QUIT
"RTN","VADATE",11,0)
 S VADEL=$S('$D(VADAT("D")):"-",1:VADAT("D")) I VADAT("F")=1 S VADATE("E")=$S('VA(2):"",VAM]"":VAM,1:"00")_$S(VA(1)&VA(2):VADEL,1:"")_$S('VA(1):"",VAD]"":VAD,1:"00")_$S((VA(1)!VA(2))&VA(3):VADEL,1:"")
"RTN","VADATE",12,0)
 I VADAT("F")=2 S VADATE("E")=$S('VA(1):"",VAD]"":VAD,1:"00")_$S(VA(1)&VA(2):VADEL,1:"")_$S('VA(2):"",VAM]"":VAM,1:"XXX")_$S((VA(1)!VA(2))&VA(3):VADEL,1:"")
"RTN","VADATE",13,0)
 S VADATE("E")=VADATE("E")_$S(VA(3):$E(VAY,3,4),1:"")_$S($D(VAT):"@"_VAT,1:"")
"RTN","VADATE",14,0)
QUIT I $D(VADAT("J")),VADAT("J")?.N F I=$L(VADATE("E"))+1:1:VADAT("J") S VADATE("E")=" "_VADATE("E")
"RTN","VADATE",15,0)
 K %DT,VA,VAD,VADEL,VAM,VAT,VAX,VAY,VANOW Q
"RTN","VADATE",16,0)
KVAR K VADAT,VADATE Q
"RTN","VADPT2")
0^3^B11093574^B11084652
"RTN","VADPT2",1,0)
VADPT2 ;ALB/MJK - ESTABLISH PATIENT VARIABLES ; 3/23/88  9:13 PM ; [10/20/95 4:02pm]
"RTN","VADPT2",2,0)
 ;;5.3;Registration;**69,749**;Aug 13, 1993;Build 10
"RTN","VADPT2",3,0)
5 ; -- INP call
"RTN","VADPT2",4,0)
 S (VAWD,VATS,VADX,VAPP,VAAP,VARM)="" S VANOW=$$NOW^XLFDT K VAMV,VAMV0
"RTN","VADPT2",5,0)
 I '$D(VAINDT) N VAINDT S VAINDT=VANOW
"RTN","VADPT2",6,0)
 S VATD=9999999.999999-VAINDT
"RTN","VADPT2",7,0)
 F VAID=VATD:0 S VAID=$O(^DGPM("APID",DFN,VAID)) Q:'VAID  S VAMV=$O(^(VAID,0)) D CHK I $D(VAMV) K:"^3^4^5^"[("^"_VAMT_"^") VAMV,VAMV0 Q
"RTN","VADPT2",8,0)
 ;
"RTN","VADPT2",9,0)
 G:'$D(VAMV0) DONE
"RTN","VADPT2",10,0)
 S (VAPRT,VAPRC,VACN)=1 D GET^VADPT30
"RTN","VADPT2",11,0)
 S VAMV0=^DGPM(VAMV,0),VAMVT=$P(VAMV0,"^",4),VACA=$P(VAMV0,"^",14),VACA0=$S($D(^DGPM(+VACA,0)):^(0),1:"")
"RTN","VADPT2",12,0)
 ;
"RTN","VADPT2",13,0)
 ; set: adm ifn(1) ; doctor(2) ; tr spec(3) ; ward(4) ; room(5) ; attending (11)
"RTN","VADPT2",14,0)
 S @VAV@($P(VAS,"^",1))=VACA,@VAV@($P(VAS,"^",2))=VAPP,@VAV@($P(VAS,"^",3))=VATS,@VAV@($P(VAS,"^",4))=VAWD,@VAV@($P(VAS,"^",5))=$P(VARM,"^",2),@VAV@($P(VAS,"^",11))=VAAP
"RTN","VADPT2",15,0)
 ;
"RTN","VADPT2",16,0)
 ; set bed/no bed  mvt type(6)
"RTN","VADPT2",17,0)
 D IB S @VAV@($P(VAS,"^",6))=VAZ
"RTN","VADPT2",18,0)
 ;
"RTN","VADPT2",19,0)
 ; set adm date(7)
"RTN","VADPT2",20,0)
 S Y=+VACA0 X:Y ^DD("DD") S @VAV@($P(VAS,"^",7))=+VACA0_"^"_Y
"RTN","VADPT2",21,0)
 ;
"RTN","VADPT2",22,0)
 ; set: adm type(8) ; adm dx(9) ; ptf ifn(10)
"RTN","VADPT2",23,0)
 S @VAV@($P(VAS,"^",8))=$P(VACA0,"^",4)_"^"_$S($D(^DG(405.1,+$P(VACA0,"^",4),0)):$P(^(0),"^"),1:""),@VAV@($P(VAS,"^",9))=$P(VACA0,"^",10),@VAV@($P(VAS,"^",10))=$P(VACA0,"^",16)
"RTN","VADPT2",24,0)
 ;
"RTN","VADPT2",25,0)
DONE K VAID,VANOW,VACA,VACA0,VAMV,VAMV0,VATD,VAMT,VAMVT D KVAR^VADPT30 Q
"RTN","VADPT2",26,0)
 ;
"RTN","VADPT2",27,0)
IB ;In-Bed status
"RTN","VADPT2",28,0)
 ; input:  VAINDT = internal date of requested info
"RTN","VADPT2",29,0)
 ;         VAMV   = starting IFN
"RTN","VADPT2",30,0)
 ;         VAMV0  = 0th of VAMV
"RTN","VADPT2",31,0)
 ;
"RTN","VADPT2",32,0)
 ; output: VAZ    = <O:not in bed OR 1: in bed>^fac. mvt name
"RTN","VADPT2",33,0)
 ;         VAZ(2) = abs ret date
"RTN","VADPT2",34,0)
 ;
"RTN","VADPT2",35,0)
 S VAZ=0,VAZ(2)=""
"RTN","VADPT2",36,0)
 S VAXI=+$O(^DGPM("APMV",DFN,+$P(VAMV0,"^",14),9999999.999999-VAINDT)),VAXI=+$O(^(VAXI,0))
"RTN","VADPT2",37,0)
 I 'VAXI,$D(VAIP("L")),$P(VAMV0,"^",2)=4 S VAXI=VAMV ; only used via IN5
"RTN","VADPT2",38,0)
 G IBQ:'VAXI
"RTN","VADPT2",39,0)
 S VAX0=$S($D(^DGPM(VAXI,0)):^(0),1:"")
"RTN","VADPT2",40,0)
 G IBQ:VAX0']"",IBQ:"^3^5^"[("^"_$P(VAX0,"^",2)_"^")
"RTN","VADPT2",41,0)
 S VAXI=$S($D(^DG(405.1,+$P(VAX0,"^",4),0)):$P(^(0),"^"),1:"")
"RTN","VADPT2",42,0)
 ; -- check in-bed status flag
"RTN","VADPT2",43,0)
 S VAZ=$S('$D(^DG(405.2,+$P(VAX0,"^",18),"E")):1,1:'^("E"))_"^"_VAXI,VAZ(2)=$P(VAX0,"^",13)
"RTN","VADPT2",44,0)
IBQ K VAXI,VAX0 Q
"RTN","VADPT2",45,0)
 ;
"RTN","VADPT2",46,0)
CHK ; -- check if mvt exists and if 'while asih' type d/c
"RTN","VADPT2",47,0)
 ;    if VAMV returned undefined then continue $Oing
"RTN","VADPT2",48,0)
 ;
"RTN","VADPT2",49,0)
 I $D(^DGPM(+VAMV,0)) S VAMV0=^(0),VAMT=$P(VAMV0,"^",2)
"RTN","VADPT2",50,0)
 I '$D(VAMV0) K VAMV G CHKQ
"RTN","VADPT2",51,0)
 I "^42^47^"[("^"_$P(VAMV0,"^",18)_"^"),$P(VAMV0,"^",22)'=2,$O(^DGPM("APMV",DFN,+$P(VAMV0,"^",14),VAID)),$O(^($O(^(VAID)),0)),$D(^DGPM($O(^(0)),0)),"^13^44^"[("^"_$P(^(0),"^",18)_"^") K VAMV,VAMV0
"RTN","VADPT2",52,0)
 ; info: 47 mvt can not have seq #; will always be null
"RTN","VADPT2",53,0)
CHKQ Q
"RTN","VADPT2",54,0)
 ;
"RTN","VADPT2",55,0)
ADM ; -- send back adm ifn for dfn on vaindt or now
"RTN","VADPT2",56,0)
 S VADT=$S($D(VAINDT):VAINDT,1:"") I 'VADT  S VADT=$$NOW^XLFDT
"RTN","VADPT2",57,0)
 S VAID=9999999.999999-VADT,VADMVT=""
"RTN","VADPT2",58,0)
 F  S VAID=$O(^DGPM("ATID1",DFN,VAID)) Q:'VAID  S VAMV=+$O(^DGPM("ATID1",DFN,VAID,0)) I $D(^DGPM(VAMV,0)) S VAMV0=^(0),VAMV1=$S($D(^DGPM(+$P(VAMV0,"^",17),0)):^(0),1:9999999.999999) D  Q:VADMVT!($P(VAMV0,U,18)'=40)
"RTN","VADPT2",59,0)
 .I VAMV0'>VADT,VAMV1>VADT S VADMVT=VAMV
"RTN","VADPT2",60,0)
 K VAID,VADT,VAMV,VAMV0,VAMV1
"RTN","VADPT3")
0^4^B14493357^B14480011
"RTN","VADPT3",1,0)
VADPT3 ;ALB/MRL - PATIENT VARIABLES [IN5]; 12 DEC 1988 ; 7/22/03 5:00pm
"RTN","VADPT3",2,0)
 ;;5.3;Registration;**532,749**;Aug 13, 1993;Build 10
"RTN","VADPT3",3,0)
 ;Inpatient variables [Version 5.0 and above]
"RTN","VADPT3",4,0)
6 ;
"RTN","VADPT3",5,0)
 S (NOW,VAX("DAT"))=$$NOW^XLFDT,NOWI=9999999.999999-NOW
"RTN","VADPT3",6,0)
 ;
"RTN","VADPT3",7,0)
 I $D(VAIP("E")),$D(^DGPM(+VAIP("E"),0)) S VAX("DT")=+^(0),E=+VAIP("E") G GO ;Specific Entry
"RTN","VADPT3",8,0)
 ;
"RTN","VADPT3",9,0)
 I $D(VAIP("D")),"^l^L^"[("^"_$E(VAIP("D"))_"^") D LAST G GO:E,Q
"RTN","VADPT3",10,0)
 ;
"RTN","VADPT3",11,0)
 S VAX=$S($D(VAIP("D")):VAIP("D"),$D(VAINDT):VAINDT,1:0)
"RTN","VADPT3",12,0)
 I VAX S:VAX?7N!(VAX?7N1".".N) VAX("DT")=VAX I '$D(VAX("DT")) G Q ;Invalid Entry
"RTN","VADPT3",13,0)
 ;
"RTN","VADPT3",14,0)
 S:'$D(VAX("DT")) VAX("DT")=NOW
"RTN","VADPT3",15,0)
 I VAX("DT")=VAX("DAT") S E=$S($D(^DPT(DFN,.102)):+^(.102),1:0),E=$S($D(^DGPM(E,0)):E,1:0) G GO:E D LODGER G GO:E D ASIHOF G GO:E,Q ;Current IP
"RTN","VADPT3",16,0)
 ;
"RTN","VADPT3",17,0)
 ;Find Past Movement
"RTN","VADPT3",18,0)
 S VAX=+$O(^DGPM("APID",DFN,9999999.999999-VAX("DT"))) I 'VAX D LODGER G GO:E,Q
"RTN","VADPT3",19,0)
 S VAX=+$O(^DGPM("APID",DFN,VAX,0)) I '$D(^DGPM(VAX,0)) D LODGER G GO:E,Q
"RTN","VADPT3",20,0)
 S VAZ=^DGPM(VAX,0) D OK G GO:E D LODGER G GO:E,Q
"RTN","VADPT3",21,0)
 ;
"RTN","VADPT3",22,0)
GO S:'$D(VAX("DT")) VAX("DT")=NOW D ^VADPT31 ; setting of VAX("DT") can be removed??
"RTN","VADPT3",23,0)
 ;
"RTN","VADPT3",24,0)
Q K NOW,NOWI,VAX,VAZ,VAZ2,E,VACC,VAQ,VANN,VASET,^UTILITY("VADPTZ",$J,DFN) D KVAR^VADPT30 Q
"RTN","VADPT3",25,0)
 ;
"RTN","VADPT3",26,0)
OK N VAADT,VADDT,VAQUIT
"RTN","VADPT3",27,0)
 S E=0,VAZ2="^"_(+$P(VAZ,"^",18))_"^"
"RTN","VADPT3",28,0)
 I "^13^41^46^"[VAZ2 D OK1 Q:'VAX  G OK
"RTN","VADPT3",29,0)
 I "^42^"[VAZ2 D 42 I 'Y D OK1 Q:'VAX  G OK
"RTN","VADPT3",30,0)
 I "^47^"[VAZ2 D 47 I 'Y D OK1 Q:'VAX  G OK
"RTN","VADPT3",31,0)
 I $D(VAX("DT")),$P(VAZ,"^",2)=3,VAZ'>VAX("DT") Q
"RTN","VADPT3",32,0)
 ;DG*5.3*532
"RTN","VADPT3",33,0)
 ;Check for out-of-order disch. recs caused by same day adm./disch.
"RTN","VADPT3",34,0)
 ;where disch. date < adm. date because disch. date had no time
"RTN","VADPT3",35,0)
 I +VAZ<2890000,$D(VAX("DT")),$P(VAZ,"^",2)'=3 S VAQUIT=0 D  Q:VAQUIT
"RTN","VADPT3",36,0)
 .S VAADT=$P(VAZ,"^",14) Q:'VAADT
"RTN","VADPT3",37,0)
 .S VADDT=$P($G(^DGPM(VAADT,0)),"^",17) Q:'VADDT
"RTN","VADPT3",38,0)
 .S VADDT=$P($G(^DGPM(VADDT,0)),"^",14) I $P(VADDT,".",2)="",VADDT=$P(VAADT,"."),VAZ'>VAX("DT") S VAQUIT=1
"RTN","VADPT3",39,0)
 S E=+VAX Q
"RTN","VADPT3",40,0)
 ;
"RTN","VADPT3",41,0)
OK1 S VAX=+$O(^DGPM("APID",DFN,9999999.9999999-(VAZ+($P(VAZ,"^",22)/10000000)))),VAX=+$O(^(VAX,0))
"RTN","VADPT3",42,0)
 I VAX,$D(^DGPM(VAX,0)) S VAZ=^(0)
"RTN","VADPT3",43,0)
 Q
"RTN","VADPT3",44,0)
 ;
"RTN","VADPT3",45,0)
LAST ; returns last movement for patient
"RTN","VADPT3",46,0)
 ; called by bed control and pt inquiry
"RTN","VADPT3",47,0)
 S VAX=+$O(^DGPM("APID",DFN,NOWI)),E=0
"RTN","VADPT3",48,0)
 I $D(VAIP("L")) D LLDCHK G LASTQ:E
"RTN","VADPT3",49,0)
 S VAX=+$O(^DGPM("APID",DFN,VAX,0)) I $D(^DGPM(VAX,0)) S VAZ=^(0) D OK
"RTN","VADPT3",50,0)
LASTQ S VAX("DT")=NOW
"RTN","VADPT3",51,0)
 Q
"RTN","VADPT3",52,0)
 ;
"RTN","VADPT3",53,0)
LODGER ;
"RTN","VADPT3",54,0)
 S E=0 G LODGERQ:'$D(VAIP("L"))
"RTN","VADPT3",55,0)
 I VAX("DT")=VAX("DAT") S VAX=$S($D(^DPT(DFN,.107)):^(.107),1:"") G LODGERQ:VAX']"" S E=$S($D(^DPT("LD",VAX,DFN)):+^(DFN),1:0) G LODGERQ
"RTN","VADPT3",56,0)
 ;
"RTN","VADPT3",57,0)
 S VAX=$O(^DGPM("ATID4",DFN,9999999.999999-VAX("DT"))) S:VAX E=+$O(^DGPM("ATID4",DFN,VAX,0))
"RTN","VADPT3",58,0)
 I E S E=$S($D(^DGPM(E,0)):E,1:0) I E,$D(^DGPM(+$P(^(0),"^",17),0)),^(0)'>VAX("DT") S E=0
"RTN","VADPT3",59,0)
LODGERQ Q
"RTN","VADPT3",60,0)
 ;
"RTN","VADPT3",61,0)
LLDCHK ; -- last lodger mvt checking ; build array of inverse dates and chk
"RTN","VADPT3",62,0)
 N IDT S IDT(VAX)=0
"RTN","VADPT3",63,0)
 S IDT=+$O(^DGPM("ATID4",DFN,NOWI)) S:IDT IDT(IDT)=+$O(^(IDT,0))
"RTN","VADPT3",64,0)
 S IDT=+$O(^DGPM("ATID5",DFN,NOWI)) S:IDT IDT(IDT)=+$O(^(IDT,0))
"RTN","VADPT3",65,0)
 S IDT=+$O(IDT(0)) I IDT S E=IDT(IDT),E=$S($D(^DGPM(E,0)):E,1:0)
"RTN","VADPT3",66,0)
 Q
"RTN","VADPT3",67,0)
 ; 
"RTN","VADPT3",68,0)
CHK ;
"RTN","VADPT3",69,0)
 G VAR^VADPT30
"RTN","VADPT3",70,0)
 ;
"RTN","VADPT3",71,0)
ASIHOF ; -- is last mvt asih oth fac
"RTN","VADPT3",72,0)
 S E=0,VAX=$S('$O(^DGPM("APID",DFN,NOWI)):"",1:$O(^DGPM("APID",DFN,$O(^(NOWI)),0)))
"RTN","VADPT3",73,0)
 I VAX,$D(^DGPM(VAX,0)),"^43^45^"[("^"_$P(^(0),"^",18)_"^") S E=VAX
"RTN","VADPT3",74,0)
 Q
"RTN","VADPT3",75,0)
 ;
"RTN","VADPT3",76,0)
42 ; -- check to see if this mvt can be used; for 'while asih' d/c category
"RTN","VADPT3",77,0)
 ;   If Y returned high then mvt is good
"RTN","VADPT3",78,0)
 ;
"RTN","VADPT3",79,0)
 I VAZ'<VAX("DAT") S Y=0 G Q42 ; not a real d/c yet
"RTN","VADPT3",80,0)
 I $P(VAZ,"^",22)=2 S Y=0 G Q42 ; nhcu d/c assoicated w/asih d/c (seq #2)
"RTN","VADPT3",81,0)
 D SCAN
"RTN","VADPT3",82,0)
Q42 Q
"RTN","VADPT3",83,0)
 ;
"RTN","VADPT3",84,0)
SCAN ; -- determine is d/c while in other fac(Y=1 returned if so.)
"RTN","VADPT3",85,0)
 ;
"RTN","VADPT3",86,0)
 N VAID,VACA,M S Y=0,VAID=9999999.999999-VAZ,VACA=+$P(VAZ,"^",14)
"RTN","VADPT3",87,0)
 F VAID=VAID:0 S VAID=$O(^DGPM("APMV",DFN,VACA,VAID)) Q:'VAID  I $D(^DGPM(+$O(^(VAID,0)),0)) S M=$P(^(0),"^",18) I "^13^44^43^45^"[("^"_M_"^") S Y=$S(M=43!(M=45):1,1:0) Q
"RTN","VADPT3",88,0)
 Q
"RTN","VADPT3",89,0)
 ;
"RTN","VADPT3",90,0)
47 ; -- check to see if d/c from nhcu while asih in other fac
"RTN","VADPT3",91,0)
 ;   If y returned high then mvt is good.
"RTN","VADPT3",92,0)
 D SCAN Q
"RTN","VADPT3",93,0)
 ;
"RTN","VADPT3",94,0)
 ; 13 = to asih (vah)     (xfr)|44 = resume asih in parent facility (xfr)
"RTN","VADPT3",95,0)
 ; 41 = from asih         (d/c)|45 = change asih location(other fac)(xfr)
"RTN","VADPT3",96,0)
 ; 42 = while asih        (d/c)|46 = continues asih (other fac)     (d/c)
"RTN","VADPT3",97,0)
 ; 43 = to asih(other fac)(xfr)|47 = discharge from nhcu while asih (d/c)
"RTN","VADPT5")
0^5^B23003439^B22917941
"RTN","VADPT5",1,0)
VADPT5 ;ALB/MRL/MJK - PATIENT VARIABLES [REG]; 14 DEC 1988 ; 8/6/04 7:42am
"RTN","VADPT5",2,0)
 ;;5.3;Registration;**54,63,242,584,749**;Aug 13, 1993;Build 10
"RTN","VADPT5",3,0)
10 ;Registration/Disposition [REG]
"RTN","VADPT5",4,0)
 N VARPSV
"RTN","VADPT5",5,0)
 S VARPSV("C")=$S('$G(VARP("C")):999999999,1:+VARP("C"))
"RTN","VADPT5",6,0)
 S VARPSV("F")=9999999-$S($G(VARP("F"))?7N.E:VARP("F"),1:0)
"RTN","VADPT5",7,0)
 S VARPSV("T")=$S($G(VARP("T"))?7N.E:VARP("T"),1:7777777) I '$P(VARPSV("T"),".",2) S $P(VARPSV("T"),".",2)=999999
"RTN","VADPT5",8,0)
 S VARPSV("T")=9999999-VARPSV("T")
"RTN","VADPT5",9,0)
 S VAX=VARPSV("T"),VAX(1)=0
"RTN","VADPT5",10,0)
 I '$D(^DPT(DFN,"DIS")) Q
"RTN","VADPT5",11,0)
 F I=0:0 S VAX=$O(^DPT(DFN,"DIS",VAX)) Q:VAX=""!(VAX>VARPSV("F"))!(VAX(1)+1>VARPSV("C"))  S VAX(2)=$G(^DPT(DFN,"DIS",VAX,0)),VAX(1)=VAX(1)+1 D 101:+VAX(2)>0
"RTN","VADPT5",12,0)
 Q
"RTN","VADPT5",13,0)
101 S (VAX("I"),VAX("E"))="",VAX(3)=0 F I=1,2,3,4,5,6,7,9 S VAX(3)=VAX(3)+1,$P(VAX("I"),"^",VAX(3))=$P(VAX(2),"^",I) D 102
"RTN","VADPT5",14,0)
 S @VAV@(VAX(1),"I")=VAX("I"),@VAV@(VAX(1),"E")=VAX("E") Q
"RTN","VADPT5",15,0)
102 I "^1^6^"[("^"_VAX(3)_"^") S Y=$P(VAX("I"),"^",VAX(3)) I Y]"" X ^DD("DD") S $P(VAX("E"),"^",VAX(3))=Y Q
"RTN","VADPT5",16,0)
 S X(1)=$S($D(^DD(2.101,$S(I<9:(I-1),1:I),0)):$P(^(0),"^",3),1:"") I "^2^3^"[("^"_VAX(3)_"^"),$P(VAX("I"),"^",VAX(3))]"",X(1)]"" S $P(VAX("E"),"^",VAX(3))=$P($P(X(1),$P(VAX("I"),"^",VAX(3))_":",2),";",1) Q
"RTN","VADPT5",17,0)
 I "^4^5^7^8^"[("^"_VAX(3)_"^"),$P(VAX("I"),"^",VAX(3))]"",X(1)]"" S X(1)="^"_X(1)_$P(VAX("I"),"^",VAX(3))_",0)" I $D(@(X(1))) S $P(VAX("E"),"^",VAX(3))=$P(^(0),"^",1)
"RTN","VADPT5",18,0)
 Q
"RTN","VADPT5",19,0)
 ;
"RTN","VADPT5",20,0)
11 ;Clinic Enrollments [SDE]
"RTN","VADPT5",21,0)
 S (VAX,VAX(1))=0 F I=0:0 S VAX=$O(^DPT(DFN,"DE",VAX)) Q:VAX'>0  S VAZ=$S($D(^DPT(DFN,"DE",VAX,0)):^(0),1:"") I +VAZ,$P(VAZ,"^",2)'="I" S VAX(3)=0 D 111
"RTN","VADPT5",22,0)
 Q
"RTN","VADPT5",23,0)
111 S VAX(4)=0 F I1=0:0 S VAX(4)=$O(^DPT(DFN,"DE",VAX,1,VAX(4))) Q:VAX(4)'>0!(VAX(3))  S VAZ(1)=$S($D(^DPT(DFN,"DE",VAX,1,VAX(4),0)):^(0),1:"") I +VAZ(1),$P(VAZ(1),"^",3)']"" S VAX(3)=VAZ(1)
"RTN","VADPT5",24,0)
 Q:'VAX(3)  S (VAX("I"),VAX("E"))="",Y=+VAX(3),$P(VAX("I"),"^",2)=Y X ^DD("DD") S $P(VAX("E"),"^",2)=Y
"RTN","VADPT5",25,0)
 S $P(VAX("I"),"^",3)=$P(VAX(3),"^",2) I $P(VAX("I"),"^",3)]"" S $P(VAX("E"),"^",3)=$S($P(VAX("I"),"^",3)="O":"OPT",$P(VAX("I"),"^",3)="A":"AC",1:"")
"RTN","VADPT5",26,0)
 S $P(VAX("I"),"^",1)=+VAZ,$P(VAX("E"),"^",1)=$S($D(^SC(+VAZ,0)):$P(^(0),"^",1),1:""),VAX(1)=VAX(1)+1,@VAV@(VAX(1),"I")=VAX("I"),@VAV@(VAX(1),"E")=VAX("E") Q
"RTN","VADPT5",27,0)
 ;
"RTN","VADPT5",28,0)
12 ;Appointments [SDA]
"RTN","VADPT5",29,0)
 N VASDSV,SDCNT,SDARRAY,VANOW
"RTN","VADPT5",30,0)
 S VANOW=$$NOW^XLFDT
"RTN","VADPT5",31,0)
 S VASDSV("F")=$S($G(VASD("F"))?7N.E:VASD("F"),1:VANOW)
"RTN","VADPT5",32,0)
 S VASDSV("T")=$S(+$G(VASD("T")):+VASD("T"),1:9999999) I '$P(VASDSV("T"),".",2) S $P(VASDSV("T"),".",2)=999999
"RTN","VADPT5",33,0)
 S VASDSV("W")=$S('$G(VASD("W")):12,1:VASD("W"))
"RTN","VADPT5",34,0)
 S VAZ(2)=$S($D(VASD("N")):VASD("N"),1:9999)
"RTN","VADPT5",35,0)
 ;Set STATUS Codes (VistA;RSA)
"RTN","VADPT5",36,0)
 S VAZ=";R^I;I^N;NS^NA;NSR^C;CC^CA;CCR^PC;CP^PCA;CPR^NT;NT^",VAZ(1)=""
"RTN","VADPT5",37,0)
 ;Extract User Required STATUS Codes in RSA format
"RTN","VADPT5",38,0)
 F I=1:1 S I1=+$E(VASDSV("W"),I) Q:'I1  D
"RTN","VADPT5",39,0)
 .S VAZ(1)=VAZ(1)_$P($P(VAZ,"^",I1),";",2)_";"
"RTN","VADPT5",40,0)
 ;Create parameter list for the extrinsic call to the Appointment API
"RTN","VADPT5",41,0)
 ;Note: Appointment API can only accept a maximum of 3 fields 
"RTN","VADPT5",42,0)
 ;               to filter on.
"RTN","VADPT5",43,0)
 ; 1 : "FROM;TO" Appointment Date Range to Search
"RTN","VADPT5",44,0)
 ; 2 : Clinic IEN or Array of Clinic IENs if defined (Pass the Root)
"RTN","VADPT5",45,0)
 ; 3 : Requested STATUS Codes (Passed if VASD("C") is not defined.)
"RTN","VADPT5",46,0)
 ; 4 : Patient IEN
"RTN","VADPT5",47,0)
 S SDARRAY="",SDARRAY(1)=VASDSV("F")_";"_VASDSV("T")
"RTN","VADPT5",48,0)
 I $O(VASD("C",0))>0 S SDARRAY(2)="VASD(""C"","
"RTN","VADPT5",49,0)
 E  S SDARRAY(3)=VAZ(1)
"RTN","VADPT5",50,0)
 S SDARRAY(4)=DFN
"RTN","VADPT5",51,0)
 ;Set Fields for API to Return
"RTN","VADPT5",52,0)
 ;  1 : Appointment Date/Time
"RTN","VADPT5",53,0)
 ;  2 : Clinic
"RTN","VADPT5",54,0)
 ;  3 : Appointment Status
"RTN","VADPT5",55,0)
 ; 10 : Appointment Type
"RTN","VADPT5",56,0)
 S SDARRAY("FLDS")="1;2;3;10"
"RTN","VADPT5",57,0)
 ;Remove Clinic IEN from Global Reference
"RTN","VADPT5",58,0)
 S SDARRAY("SORT")="P"
"RTN","VADPT5",59,0)
 ;Call Appointment API (Pass Array by reference)
"RTN","VADPT5",60,0)
 S SDCNT=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","VADPT5",61,0)
 S VAX="",VAX(1)=0
"RTN","VADPT5",62,0)
 ;If error returned, determine error and set VAERR appropriately
"RTN","VADPT5",63,0)
 ; 1 : For any error other than 101
"RTN","VADPT5",64,0)
 ; 2 : If error is 101 : Database is unavailable  
"RTN","VADPT5",65,0)
 I SDCNT<0 S VAX=$O(^TMP($J,"SDAMA301",VAX)) S VAERR=$S(VAX=101:2,1:1) K ^TMP($J,"SDAMA301") Q
"RTN","VADPT5",66,0)
 D 122:SDCNT>0
"RTN","VADPT5",67,0)
 Q
"RTN","VADPT5",68,0)
121 S VAX(5)=1 I VASDSV("W")'[1,$P(VAZ,"^",2)']"" S VAX(5)=0 Q
"RTN","VADPT5",69,0)
 I VASDSV("C"),'$D(VASD("C",+VAZ)) S VAX(5)=0 Q
"RTN","VADPT5",70,0)
 S (VAX("I"),VAX("E"))="",VAX(2)=1,$P(VAX("I"),"^",1)=+VAX F I1=1,2,16 S VAX(2)=VAX(2)+1,$P(VAX("I"),"^",VAX(2))=$P(VAZ,"^",I1)
"RTN","VADPT5",71,0)
 Q
"RTN","VADPT5",72,0)
122 ;Build Internal/External Output Globals
"RTN","VADPT5",73,0)
 ;
"RTN","VADPT5",74,0)
 N SDCIEN,SDDTM,SDNODE
"RTN","VADPT5",75,0)
 S (SDCIEN,SDDTM)=""
"RTN","VADPT5",76,0)
 ;Redefine VAZ (STATUS Codes(RSA;VistA))
"RTN","VADPT5",77,0)
 S VAZ="R;^I;I^NS;N^NSR;NA^CC;C^CCR;CA^CP;PC^CPR;PCA^NT;NT^"
"RTN","VADPT5",78,0)
 S SDDTM=""
"RTN","VADPT5",79,0)
 ;Loop through appointments and convert for output
"RTN","VADPT5",80,0)
 F  S SDDTM=$O(^TMP($J,"SDAMA301",DFN,SDDTM)) Q:'SDDTM  D 
"RTN","VADPT5",81,0)
 .;Get Appointment Information and clear VAX("I") & VAX("E")
"RTN","VADPT5",82,0)
 .S SDNODE=^(SDDTM),(VAX("I"),VAX("E"))=""
"RTN","VADPT5",83,0)
 .;If Clinics were passed to appointment API,
"RTN","VADPT5",84,0)
 .;     Filter on Appointment Status Codes
"RTN","VADPT5",85,0)
 .I $O(VASD("C",0))>0,(VAZ(1)'[($P($P(SDNODE,"^",3),";")_";")) Q
"RTN","VADPT5",86,0)
 .;Extract and format Appointment Date/Time
"RTN","VADPT5",87,0)
 .S Y=$P(SDNODE,"^",1)
"RTN","VADPT5",88,0)
 .S $P(VAX("I"),"^",1)=Y
"RTN","VADPT5",89,0)
 .X ^DD("DD") S $P(VAX("E"),"^",1)=Y
"RTN","VADPT5",90,0)
 .;Extract and format Clinic Information
"RTN","VADPT5",91,0)
 .S $P(VAX("I"),"^",2)=$P($P(SDNODE,"^",2),";",1)
"RTN","VADPT5",92,0)
 .S $P(VAX("E"),"^",2)=$P($P(SDNODE,"^",2),";",2)
"RTN","VADPT5",93,0)
 .;Extract and format Appointment Type
"RTN","VADPT5",94,0)
 .S $P(VAX("I"),"^",4)=$P($P(SDNODE,"^",10),";",1)
"RTN","VADPT5",95,0)
 .S $P(VAX("E"),"^",4)=$P($P(SDNODE,"^",10),";",2)
"RTN","VADPT5",96,0)
 .;Extract and format Appointment Status
"RTN","VADPT5",97,0)
 .S Y=$P($P(VAZ,$P($P(SDNODE,"^",3),";")_";",2),"^"),$P(VAX("I"),"^",3)=Y
"RTN","VADPT5",98,0)
 .I Y]"" S X=$S($D(^DD(2.98,3,0)):$P(^(0),"^",3),1:""),$P(VAX("E"),"^",3)=$P($P(X,Y_":",2),";",1)
"RTN","VADPT5",99,0)
 .S VAX(1)=VAX(1)+1
"RTN","VADPT5",100,0)
 .;Store information in global
"RTN","VADPT5",101,0)
 .S @VAV@(VAX(1),"I")=VAX("I"),@VAV@(VAX(1),"E")=VAX("E")
"RTN","VADPT5",102,0)
 K ^TMP($J,"SDAMA301")
"RTN","VADPT5",103,0)
 Q
"RTN","VADPT61")
0^6^B8939828^B8937468
"RTN","VADPT61",1,0)
VADPT61 ;ALB/MJK - Patient ID Utilities (cont.); 12 AUG 89 @1200
"RTN","VADPT61",2,0)
 ;;5.3;Registration,;**749**;Aug 13, 1993;Build 10
"RTN","VADPT61",3,0)
 ;
"RTN","VADPT61",4,0)
1 ;;ID Format Enter/Edit
"RTN","VADPT61",5,0)
 W ! S DIC="^DIC(8.2,",DIC(0)="AELMQ" D ^DIC K DIC G Q1:+Y<1
"RTN","VADPT61",6,0)
 S DA=+Y,DIE="^DIC(8.2,",DR="[DG ID FORMAT ENTER/EDIT]" D ^DIE G 1
"RTN","VADPT61",7,0)
Q1 K DIE,DR,DA,Y Q
"RTN","VADPT61",8,0)
 ;
"RTN","VADPT61",9,0)
2 ;;Eligibility Code Enter/Edit
"RTN","VADPT61",10,0)
 W ! S DIC="^DIC(8,",DIC(0)="AELMQ",DIC("DR")=8 D ^DIC K DIC G Q2:+Y<1
"RTN","VADPT61",11,0)
 S DA=+Y,DIE="^DIC(8,",DR="[DG ELIG ENTER/EDIT]" D ^DIE G 2
"RTN","VADPT61",12,0)
Q2 K DIE,DR,DA,Y
"RTN","VADPT61",13,0)
 Q
"RTN","VADPT61",14,0)
 ;
"RTN","VADPT61",15,0)
ASK ;
"RTN","VADPT61",16,0)
 Q:$S('$D(^DIC(8.2,+$P(^DIC(8,VAELG,0),U,10),0)):1,1:'$P(^(0),U,2))
"RTN","VADPT61",17,0)
 W !!,*7,"User Input Needed for '",$P(^DIC(8,VAELG,0),U),"' id:"
"RTN","VADPT61",18,0)
 S DIE="^DPT("_DFN_",""E"",",DR=.03,DA(1)=DFN,DA=VAELG D ^DIE
"RTN","VADPT61",19,0)
 W !!?5,"...",$P(^DIC(8,VAELG,0),U)
"RTN","VADPT61",20,0)
 K DIE,DR,DA,Y
"RTN","VADPT61",21,0)
 Q
"RTN","VADPT61",22,0)
 ;
"RTN","VADPT61",23,0)
WARN ; -- interaction warning
"RTN","VADPT61",24,0)
 I $P(X,U,2) W !!?5,*7,"WARNING: User interaction usually is required for this format."
"RTN","VADPT61",25,0)
 Q
"RTN","VADPT61",26,0)
 ;
"RTN","VADPT61",27,0)
BEG ;
"RTN","VADPT61",28,0)
 S VASTART=$$NOW^XLFDT
"RTN","VADPT61",29,0)
 Q
"RTN","VADPT61",30,0)
 ;
"RTN","VADPT61",31,0)
END ;
"RTN","VADPT61",32,0)
 S VAEND=$$NOW^XLFDT,L=0
"RTN","VADPT61",33,0)
 K XMY
"RTN","VADPT61",34,0)
 S XMSUB=$P($T(OPTS+VAOPT),";",4),XMDUZ=.5,XMTEXT="VATEXT(",XMY(DUZ)=""
"RTN","VADPT61",35,0)
 I VAOPT=3 S XMSUB=XMSUB_" (Format: "_$S($D(^DIC(8.2,VAFMT,0)):$P(^(0),U),1:"UNKNOWN")_")"
"RTN","VADPT61",36,0)
 I VAOPT=5 S XMSUB=XMSUB_" (Eligibility: "_$S($D(^DIC(8,VAELG,0)):$P(^(0),U),1:"UNKNOWN")_")"
"RTN","VADPT61",37,0)
 S L=L+1 S VATEXT(L,0)=" "
"RTN","VADPT61",38,0)
 S Y=VASTART,L=L+1 X ^DD("DD") S VATEXT(L,0)="  Job started   at "_Y
"RTN","VADPT61",39,0)
 S Y=VAEND,L=L+1 X ^DD("DD") S VATEXT(L,0)="  Job completed at "_Y
"RTN","VADPT61",40,0)
 D ^XMD
"RTN","VADPT61",41,0)
 K VAOPT,VASTART,VAEND,L,VATEXT,XMY,XMSUB,XMDUZ,XMTEXT,Y,% Q
"RTN","VADPT61",42,0)
 ;
"RTN","VADPT61",43,0)
TASK ;
"RTN","VADPT61",44,0)
 W !!?5,"The resetting of ID formats can take many hours."
"RTN","VADPT61",45,0)
 W !?5,"It is suggested that it be run at off-peak hours,"
"RTN","VADPT61",46,0)
 W !?5,"perferably over a weekend.",!
"RTN","VADPT61",47,0)
 K ZTSK S X=$T(OPTS+VAOPT),VARS=$P(X,";",5)
"RTN","VADPT61",48,0)
 F I=1:1 S Y=$P(VARS,"^",I) Q:Y=""  S ZTSAVE(Y)=""
"RTN","VADPT61",49,0)
 S ZTSAVE("VAOPT")="",ZTRTN="QUE"_VAOPT_"^VADPT60",ZTDESC=$P(X,";",4),ZTIO="" D ^%ZTLOAD
"RTN","VADPT61",50,0)
 I $D(ZTSK) W !!,"Job has been queued. (Task #",ZTSK,")",!,"A MailMan message will be sent to you when the job has completed."
"RTN","VADPT61",51,0)
TASKQ K ZTIO,ZTRTN,ZTDESC,ZTSAVE,VARS,Y,X,ZTSK Q
"RTN","VADPT61",52,0)
 ;
"RTN","VADPT61",53,0)
OPTS ; -- queue task list ;;opt#;description;vars to save
"RTN","VADPT61",54,0)
 ;;1;none
"RTN","VADPT61",55,0)
 ;;2;none
"RTN","VADPT61",56,0)
 ;;3;Reset ID Format;VAFMT
"RTN","VADPT61",57,0)
 ;;4;Reset Primary Eligibilty ID Format
"RTN","VADPT61",58,0)
 ;;5;Reset Specific Eligibilty ID Format;VAELG
"RTN","VADPT61",59,0)
 ;;6;none
"RTN","VADPT61",60,0)
 ;;7;Reset All ID Formats for all Patients
"RTN","VAFCPID")
0^7^B13319408^B12777319
"RTN","VAFCPID",1,0)
VAFCPID ;ALB/MLI,PKE-Create generic PID segment ; 21 Nov 2002  3:13 PM
"RTN","VAFCPID",2,0)
 ;;5.3;Registration;**91,149,190,415,508,749**;Aug 13, 1993;Build 10
"RTN","VAFCPID",3,0)
 ;
"RTN","VAFCPID",4,0)
 ; This routine returns the HL7 defined PID segment with its
"RTN","VAFCPID",5,0)
 ; mappings to DHCP PATIENT file fields.
"RTN","VAFCPID",6,0)
 ;
"RTN","VAFCPID",7,0)
EN(DFN,VAFSTR,VAFNUM) ; returns PID segment
"RTN","VAFCPID",8,0)
 ;  Input - DFN as internal entry number of the PATIENT file
"RTN","VAFCPID",9,0)
 ;          VAFSTR as string of fields requested separated by commas
"RTN","VAFCPID",10,0)
 ;          VAFNUM as sequential number for SET ID (default=1)
"RTN","VAFCPID",11,0)
 ;
"RTN","VAFCPID",12,0)
 ;      ****Also assumes all HL7 variables returned from****
"RTN","VAFCPID",13,0)
 ;          INIT^HLTRANS are defined
"RTN","VAFCPID",14,0)
 ;
"RTN","VAFCPID",15,0)
 ; Output - String containing the desired components of the PID segment
"RTN","VAFCPID",16,0)
 ;          VAFPID(n) - if the string is longer than 245, the remaining
"RTN","VAFCPID",17,0)
 ;                      characters will be returned in VAFPID(n) where
"RTN","VAFCPID",18,0)
 ;                      n is a sequential number beginning with 1
"RTN","VAFCPID",19,0)
 ;
"RTN","VAFCPID",20,0)
 ; WARNING: This routine makes external calls to VADPT.  Non-namespaced
"RTN","VAFCPID",21,0)
 ;          variables may be altered.
"RTN","VAFCPID",22,0)
 ;
"RTN","VAFCPID",23,0)
 N I,VAFY,VA,VADM,X,X1,Y,OUTPUT,DGNAME,DGMMN,VAPA ; calls VADPT...have to NEW
"RTN","VAFCPID",24,0)
 S VAFSTR=$G(VAFSTR) ; if not defined, just return required fields
"RTN","VAFCPID",25,0)
 S DFN=$G(DFN)
"RTN","VAFCPID",26,0)
 I DFN']"" G QUIT
"RTN","VAFCPID",27,0)
 ;Get demographics and permanent address
"RTN","VAFCPID",28,0)
 S VAPA("P")="" D 4^VADPT
"RTN","VAFCPID",29,0)
 S VAFSTR=","_VAFSTR_","
"RTN","VAFCPID",30,0)
 K VAFY
"RTN","VAFCPID",31,0)
 ;Set ID (#1)
"RTN","VAFCPID",32,0)
 I VAFSTR[",1," S VAFY(1)=$S($G(VAFNUM):VAFNUM,1:1)
"RTN","VAFCPID",33,0)
 ;External ID (#2 - always included)
"RTN","VAFCPID",34,0)
 S X=$$GETICN^MPIF001(DFN) S:(+X=-1) X="" S VAFY(2)=$S(X]"":X,1:HLQ)
"RTN","VAFCPID",35,0)
 ;Patient ID (#3 - req)
"RTN","VAFCPID",36,0)
 S VAFY(3)=$$M10^HLFNC(DFN)
"RTN","VAFCPID",37,0)
 ;Alternate ID (#4)
"RTN","VAFCPID",38,0)
 I VAFSTR[",4," S X=$G(VA("BID")),VAFY(4)=$S(X]"":X,1:HLQ)
"RTN","VAFCPID",39,0)
 ;Name (#5 - req)
"RTN","VAFCPID",40,0)
 S DGNAME("FILE")=2,DGNAME("IENS")=DFN,DGNAME("FIELD")=.01
"RTN","VAFCPID",41,0)
 S X=$$HLNAME^XLFNAME(.DGNAME,"",$E(HLECH)),VAFY(5)=$S(X]"":X,1:HLQ)
"RTN","VAFCPID",42,0)
 ;Mother's maiden name (#6)
"RTN","VAFCPID",43,0)
 I VAFSTR[",6," D
"RTN","VAFCPID",44,0)
 .S DGMMN("FILE")=2,DGMMN("IENS")=DFN,DGMMN("FIELD")=.2403
"RTN","VAFCPID",45,0)
 .S X=$$HLNAME^XLFNAME(.DGMMN,"",$E(HLECH)),VAFY(6)=$S(X]"":X,1:HLQ)
"RTN","VAFCPID",46,0)
 ;Date of birth (#7)
"RTN","VAFCPID",47,0)
 I VAFSTR[",7," S VAFY(7)=$$HLDATE^HLFNC(+VADM(3))
"RTN","VAFCPID",48,0)
 ;Sex (#8)
"RTN","VAFCPID",49,0)
 I VAFSTR[",8," S X=$P(VADM(5),"^",1),VAFY(8)=$S("^M^F^"[("^"_X_"^"):X,1:"U")
"RTN","VAFCPID",50,0)
 ;Race (#10)
"RTN","VAFCPID",51,0)
 I VAFSTR[10 D
"RTN","VAFCPID",52,0)
 .N HOW
"RTN","VAFCPID",53,0)
 .S Y=$F(VAFSTR,"10")
"RTN","VAFCPID",54,0)
 .S HOW=$P($E(VAFSTR,Y,$F(VAFSTR,",",Y)),",",1)
"RTN","VAFCPID",55,0)
 .D SEQ10^VAFHLPI1(HOW,HLQ)
"RTN","VAFCPID",56,0)
 ;Address (#11)
"RTN","VAFCPID",57,0)
 I VAFSTR[11 D
"RTN","VAFCPID",58,0)
 .N HOW
"RTN","VAFCPID",59,0)
 .S Y=$F(VAFSTR,"11")
"RTN","VAFCPID",60,0)
 .S HOW=$P($E(VAFSTR,Y,$F(VAFSTR,",",Y)),",",1)
"RTN","VAFCPID",61,0)
 .D SEQ11^VAFHLPI2(HOW,HLQ)
"RTN","VAFCPID",62,0)
 ;County (#12)
"RTN","VAFCPID",63,0)
 I VAFSTR[12 S X1=$P($G(^DIC(5,+$G(VAPA(5)),1,+$G(VAPA(7)),0)),"^",3),VAFY(12)=$S(X1]"":X1,1:HLQ)
"RTN","VAFCPID",64,0)
 S X=$G(^DPT(DFN,.13))
"RTN","VAFCPID",65,0)
 ;Home phone (#13)
"RTN","VAFCPID",66,0)
 I VAFSTR[13 S X1=$$HLPHONE^HLFNC($P(X,"^",1)),VAFY(13)=$S(X1]"":X1,1:HLQ)
"RTN","VAFCPID",67,0)
 ;Business phone (#14)
"RTN","VAFCPID",68,0)
 I VAFSTR[14 S X1=$$HLPHONE^HLFNC($P(X,"^",2)),VAFY(14)=$S(X1]"":X1,1:HLQ)
"RTN","VAFCPID",69,0)
 ;Marital status (#16)
"RTN","VAFCPID",70,0)
 I VAFSTR[16 S X=$P($G(^DIC(11,+VADM(10),0)),"^",3),VAFY(16)=$S(X="M":"M",X="N":"S",X="S":"A",X]"":X,1:HLQ)
"RTN","VAFCPID",71,0)
 ;Religious preference (#17) (if blank send 29 (UNKNOWN))
"RTN","VAFCPID",72,0)
 I VAFSTR[17 S X=$P($G(^DIC(13,+VADM(9),0)),"^",4),VAFY(17)=$S(X]"":X,1:29)
"RTN","VAFCPID",73,0)
 ;SSN (#19)
"RTN","VAFCPID",74,0)
 I VAFSTR[19 S X=$P(VADM(2),"^",1),VAFY(19)=$S(X]"":X,1:HLQ)
"RTN","VAFCPID",75,0)
 ;Ethnicity (#22)
"RTN","VAFCPID",76,0)
 I VAFSTR[22 D
"RTN","VAFCPID",77,0)
 .N HOW
"RTN","VAFCPID",78,0)
 .S Y=$F(VAFSTR,"22")
"RTN","VAFCPID",79,0)
 .S HOW=$P($E(VAFSTR,Y,$F(VAFSTR,",",Y)),",",1)
"RTN","VAFCPID",80,0)
 .D SEQ22^VAFHLPI1(HOW,HLQ)
"RTN","VAFCPID",81,0)
 ;Birth place (#23)
"RTN","VAFCPID",82,0)
 I VAFSTR[23 D
"RTN","VAFCPID",83,0)
 .N DGBC,DGBS
"RTN","VAFCPID",84,0)
 .S DGBC=$$GET1^DIQ(2,DFN,.092,"I")
"RTN","VAFCPID",85,0)
 .S DGBS=$$GET1^DIQ(2,DFN,.093,"E")
"RTN","VAFCPID",86,0)
 .S VAFY(23)=DGBC_" "_DGBS
"RTN","VAFCPID",87,0)
 ;Date of death (#29) & Death indicator (#30) (always included if dead)
"RTN","VAFCPID",88,0)
 S X=+VADM(6) I X D
"RTN","VAFCPID",89,0)
 .S VAFY(29)=$$HLDATE^HLFNC(X)
"RTN","VAFCPID",90,0)
 .S VAFY(30)="Y"
"RTN","VAFCPID",91,0)
 ;
"RTN","VAFCPID",92,0)
QUIT D KVA^VADPT
"RTN","VAFCPID",93,0)
 D MAKEIT^VAFHLU("PID",.VAFY,.OUTPUT,.VAFPID)
"RTN","VAFCPID",94,0)
 Q OUTPUT
"RTN","VAFCPID",95,0)
 ;
"RTN","VAFCPID",96,0)
ADDR(VAFADDR,VAFCOUNT) ;Return HL7 address
"RTN","VAFCPID",97,0)
 ; Input  - VAFADDR as address in format:
"RTN","VAFCPID",98,0)
 ;            line1^line2^line3^city^state^zip+4
"RTN","VAFCPID",99,0)
 ;          VAFCOUNT as internal value of county (optional)
"RTN","VAFCPID",100,0)
 ; Output - HL7 v2.3 formatted Address_HLFS_County Code
"RTN","VAFCPID",101,0)
 ;
"RTN","VAFCPID",102,0)
 ;      ****Also assumes all HL7 variables returned from****
"RTN","VAFCPID",103,0)
 ;          INIT^HLTRANS are defined
"RTN","VAFCPID",104,0)
 ;
"RTN","VAFCPID",105,0)
 N X,Y,Z S X=$E(HLECH)
"RTN","VAFCPID",106,0)
 ;Street address (line 1)
"RTN","VAFCPID",107,0)
 S $P(Y,X,1)=$P(VAFADDR,"^",1)
"RTN","VAFCPID",108,0)
 ;Other designation (line 2)
"RTN","VAFCPID",109,0)
 S $P(Y,X,2)=$P(VAFADDR,"^",2)
"RTN","VAFCPID",110,0)
 ;City
"RTN","VAFCPID",111,0)
 S $P(Y,X,3)=$P(VAFADDR,"^",4)
"RTN","VAFCPID",112,0)
 ;State
"RTN","VAFCPID",113,0)
 S $P(Y,X,4)=$P($G(^DIC(5,+$P(VAFADDR,"^",5),0)),"^",2)
"RTN","VAFCPID",114,0)
 ;Zip
"RTN","VAFCPID",115,0)
 S $P(Y,X,5)=$P(VAFADDR,"^",6)
"RTN","VAFCPID",116,0)
 ;Other geographic designation (line 3)
"RTN","VAFCPID",117,0)
 S $P(Y,X,8)=$P(VAFADDR,"^",3)
"RTN","VAFCPID",118,0)
 ;County
"RTN","VAFCPID",119,0)
 S $P(Y,X,9)=$P($G(^DIC(5,+$P(VAFADDR,"^",5),1,+$G(VAFCOUNT),0)),"^",3)
"RTN","VAFCPID",120,0)
 F Z=1,2,3,4,5,8,9 I $P(Y,X,Z)="" S $P(Y,X,Z)=HLQ
"RTN","VAFCPID",121,0)
 I $G(VAFCOUNT) D
"RTN","VAFCPID",122,0)
 .S $P(Y,HLFS,2)=$P(Y,X,9)
"RTN","VAFCPID",123,0)
 Q Y
"RTN","VAFHLPID")
0^8^B10207470^B9694943
"RTN","VAFHLPID",1,0)
VAFHLPID ;ALB/MLI/ESD - Create generic PID segment ; 21 Nov 2002  3:13 PM
"RTN","VAFHLPID",2,0)
 ;;5.3;Registration;**68,94,415,508,749**;Aug 13, 1993;Build 10
"RTN","VAFHLPID",3,0)
 ;
"RTN","VAFHLPID",4,0)
 ; This routine returns the HL7 defined PID segment with its
"RTN","VAFHLPID",5,0)
 ; mappings to DHCP PATIENT file fields.
"RTN","VAFHLPID",6,0)
 ;
"RTN","VAFHLPID",7,0)
EN(DFN,VAFSTR,VAFNUM,PTID) ; returns PID segment
"RTN","VAFHLPID",8,0)
 ;  Input - DFN as internal entry number of the PATIENT file
"RTN","VAFHLPID",9,0)
 ;          VAFSTR as string of fields requested separated by commas
"RTN","VAFHLPID",10,0)
 ;          VAFNUM as sequential number for SET ID (default=1)
"RTN","VAFHLPID",11,0)
 ;          PTID is flag denoting which Patient ID (seq 3) to use
"RTN","VAFHLPID",12,0)
 ;              0 - Use DFN formatted as data type CK (default)
"RTN","VAFHLPID",13,0)
 ;              1 - Use ICN
"RTN","VAFHLPID",14,0)
 ;              2 - Use DFN formatted as data type CX
"RTN","VAFHLPID",15,0)
 ;              3 - Use SSN (with dashes)
"RTN","VAFHLPID",16,0)
 ;
"RTN","VAFHLPID",17,0)
 ;      ****Also assumes all HL7 variables returned from****
"RTN","VAFHLPID",18,0)
 ;          INIT^HLTRANS are defined
"RTN","VAFHLPID",19,0)
 ;
"RTN","VAFHLPID",20,0)
 ; Output - String containing the desired components of the PID segment
"RTN","VAFHLPID",21,0)
 ;          VAFPID(n) - if the string is longer than 245, the remaining
"RTN","VAFHLPID",22,0)
 ;                      characters will be returned in VAFPID(n) where
"RTN","VAFHLPID",23,0)
 ;                      n is a sequential number beginning with 1
"RTN","VAFHLPID",24,0)
 ;
"RTN","VAFHLPID",25,0)
 ; WARNING: This routine makes external calls to VADPT.  Non-namespaced
"RTN","VAFHLPID",26,0)
 ;          variables may be altered.
"RTN","VAFHLPID",27,0)
 ;
"RTN","VAFHLPID",28,0)
 N I,VAFY,VA,VADM,X,X1,Y,OUTPUT,DGNAME,DGMMN,VAPA ; calls VADPT...have to NEW
"RTN","VAFHLPID",29,0)
 S VAFSTR=$G(VAFSTR) ; if not defined, just return required fields
"RTN","VAFHLPID",30,0)
 S DFN=$G(DFN)
"RTN","VAFHLPID",31,0)
 I DFN']"" G QUIT
"RTN","VAFHLPID",32,0)
 ;Get demographics and permanent address
"RTN","VAFHLPID",33,0)
 S VAPA("P")="" D 4^VADPT
"RTN","VAFHLPID",34,0)
 S VAFSTR=","_VAFSTR_","
"RTN","VAFHLPID",35,0)
 K VAFY
"RTN","VAFHLPID",36,0)
 ;Set ID (#1)
"RTN","VAFHLPID",37,0)
 I VAFSTR[",1," S VAFY(1)=$S($G(VAFNUM):VAFNUM,1:1)
"RTN","VAFHLPID",38,0)
 ;External ID (#2)
"RTN","VAFHLPID",39,0)
 I VAFSTR[",2," S X=$G(VA("PID")),VAFY(2)=$S(X]"":$$M10^HLFNC(X),1:HLQ)
"RTN","VAFHLPID",40,0)
 ;Patient ID (#3 - req)
"RTN","VAFHLPID",41,0)
 S PTID=+$G(PTID)
"RTN","VAFHLPID",42,0)
 I 'PTID S VAFY(3)=$$M10^HLFNC(DFN)
"RTN","VAFHLPID",43,0)
 I PTID D
"RTN","VAFHLPID",44,0)
 .S X=$S(PTID=1:"NI",PTID=2:"PI",PTID=3:"SS")
"RTN","VAFHLPID",45,0)
 .S VAFY(3)=$$SEQ3^VAFHLPI1(DFN,X,HLECH,HLQ)
"RTN","VAFHLPID",46,0)
 ;Alternate ID (#4)
"RTN","VAFHLPID",47,0)
 I VAFSTR[",4," S X=$G(VA("BID")),VAFY(4)=$S(X]"":X,1:HLQ)
"RTN","VAFHLPID",48,0)
 ;Name (#5 - req)
"RTN","VAFHLPID",49,0)
 S DGNAME("FILE")=2,DGNAME("IENS")=DFN,DGNAME("FIELD")=.01
"RTN","VAFHLPID",50,0)
 S X=$$HLNAME^XLFNAME(.DGNAME,"",$E(HLECH)),VAFY(5)=$S(X]"":X,1:HLQ)
"RTN","VAFHLPID",51,0)
 ;Mother's maiden name (#6)
"RTN","VAFHLPID",52,0)
 I VAFSTR[",6," D
"RTN","VAFHLPID",53,0)
 .S DGMMN("FILE")=2,DGMMN("IENS")=DFN,DGMMN("FIELD")=.2403
"RTN","VAFHLPID",54,0)
 .S X=$$HLNAME^XLFNAME(.DGMMN,"",$E(HLECH)),VAFY(6)=$S(X]"":X,1:HLQ)
"RTN","VAFHLPID",55,0)
 ;Date of birth (#7)
"RTN","VAFHLPID",56,0)
 I VAFSTR[",7," S VAFY(7)=$$HLDATE^HLFNC(+VADM(3))
"RTN","VAFHLPID",57,0)
 ;Sex (#8)
"RTN","VAFHLPID",58,0)
 I VAFSTR[",8," S X=$P(VADM(5),"^",1),VAFY(8)=$S("^M^F^"[("^"_X_"^"):X,1:"U")
"RTN","VAFHLPID",59,0)
 ;Race (#10)
"RTN","VAFHLPID",60,0)
 I VAFSTR[10 D
"RTN","VAFHLPID",61,0)
 .N HOW
"RTN","VAFHLPID",62,0)
 .S Y=$F(VAFSTR,"10")
"RTN","VAFHLPID",63,0)
 .S HOW=$P($E(VAFSTR,Y,$F(VAFSTR,",",Y)),",",1)
"RTN","VAFHLPID",64,0)
 .D SEQ10^VAFHLPI1(HOW,HLQ)
"RTN","VAFHLPID",65,0)
 ;Address (#11)
"RTN","VAFHLPID",66,0)
 I VAFSTR[11 D
"RTN","VAFHLPID",67,0)
 .N HOW
"RTN","VAFHLPID",68,0)
 .S Y=$F(VAFSTR,"11")
"RTN","VAFHLPID",69,0)
 .S HOW=$P($E(VAFSTR,Y,$F(VAFSTR,",",Y)),",",1)
"RTN","VAFHLPID",70,0)
 .D SEQ11^VAFHLPI2(HOW,HLQ)
"RTN","VAFHLPID",71,0)
 ;County (#12)
"RTN","VAFHLPID",72,0)
 I VAFSTR[12 S X1=$P($G(^DIC(5,+$G(VAPA(5)),1,+$G(VAPA(7)),0)),"^",3),VAFY(12)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLPID",73,0)
 S X=$G(^DPT(DFN,.13))
"RTN","VAFHLPID",74,0)
 ;Home phone (#13)
"RTN","VAFHLPID",75,0)
 I VAFSTR[13 S X1=$$HLPHONE^HLFNC($P(X,"^",1)),VAFY(13)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLPID",76,0)
 ;Business phone (#14)
"RTN","VAFHLPID",77,0)
 I VAFSTR[14 S X1=$$HLPHONE^HLFNC($P(X,"^",2)),VAFY(14)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLPID",78,0)
 ;Marital status (#16)
"RTN","VAFHLPID",79,0)
 I VAFSTR[16 S X=$P($G(^DIC(11,+VADM(10),0)),"^",3),VAFY(16)=$S(X="N":"S",X="U":"",X="":HLQ,1:X)
"RTN","VAFHLPID",80,0)
 ;Religious preference (#17) (if blank send 29 (UNKNOWN))
"RTN","VAFHLPID",81,0)
 I VAFSTR[17 S X=$P($G(^DIC(13,+VADM(9),0)),"^",4),VAFY(17)=$S(X]"":X,1:29)
"RTN","VAFHLPID",82,0)
 ;SSN (#19)
"RTN","VAFHLPID",83,0)
 I VAFSTR[19 S X=$P(VADM(2),"^",1),VAFY(19)=$S(X]"":X,1:HLQ)
"RTN","VAFHLPID",84,0)
 ;Ethnicity (#22)
"RTN","VAFHLPID",85,0)
 I VAFSTR[22 D
"RTN","VAFHLPID",86,0)
 .N HOW
"RTN","VAFHLPID",87,0)
 .S Y=$F(VAFSTR,"22")
"RTN","VAFHLPID",88,0)
 .S HOW=$P($E(VAFSTR,Y,$F(VAFSTR,",",Y)),",",1)
"RTN","VAFHLPID",89,0)
 .D SEQ22^VAFHLPI1(HOW,HLQ)
"RTN","VAFHLPID",90,0)
 ;
"RTN","VAFHLPID",91,0)
QUIT D KVA^VADPT
"RTN","VAFHLPID",92,0)
 D MAKEIT^VAFHLU("PID",.VAFY,.OUTPUT,.VAFPID)
"RTN","VAFHLPID",93,0)
 Q OUTPUT
"VER")
8.0^22.0
"^DD",11,11,2,0)
MARITAL STATUS CODE^S^D:DIVORCED;M:MARRIED;N:NEVER MARRIED;S:SEPARATED;W:WIDOWED;U:UNKNOWN;^0;3^Q
"^DD",11,11,2,21,0)
^^5^5^3070423^^
"^DD",11,11,2,21,1,0)
This field contains the code for the marital status.  It must NOT be
"^DD",11,11,2,21,2,0)
edited unless through a software upgrade!  This field is used widely
"^DD",11,11,2,21,3,0)
throughout DHCP to determine programming flow.  It will be displayed
"^DD",11,11,2,21,4,0)
on the patient's data card as well as many other places throughout
"^DD",11,11,2,21,5,0)
DHCP.
"^DD",11,11,2,"DT")
3070425
"^DD",46,46,0)
FIELDS ^^1^24
"^DD",46,46,0,"DDA")
N
"^DD",46,46,0,"DT")
3070425
"^DD",46,46,0,"IX","B",46,.01)

"^DD",46,46,0,"IX","C",46,.16)

"^DD",46,46,0,"NM","INPATIENT CPT CODE")

"^DD",46,46,0,"VRPK")
DG
"^DD",46,46,.01,0)
CPT CODE^R*P81'^ICPT(^0;1^S DIC("S")="D EN6^DGPTFJC I 'DGER" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",46,46,.01,1,0)
^.1
"^DD",46,46,.01,1,1,0)
46^B
"^DD",46,46,.01,1,1,1)
S ^DGCPT(46,"B",$E(X,1,30),DA)=""
"^DD",46,46,.01,1,1,2)
K ^DGCPT(46,"B",$E(X,1,30),DA)
"^DD",46,46,.01,1,2,0)
^^TRIGGER^46^.02
"^DD",46,46,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCPT(46,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="" S DIH=$G(^DGCPT(46,DIV(0),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=46,DIG=.02 D ^DICR
"^DD",46,46,.01,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCPT(46,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="" S DIH=$G(^DGCPT(46,DIV(0),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=46,DIG=.02 D ^DICR
"^DD",46,46,.01,1,2,"CREATE VALUE")
S X="@"
"^DD",46,46,.01,1,2,"DELETE VALUE")
S X="@"
"^DD",46,46,.01,1,2,"DT")
3050603
"^DD",46,46,.01,1,2,"FIELD")
CPT MODIFIER 1
"^DD",46,46,.01,1,3,0)
^^TRIGGER^46^.03
"^DD",46,46,.01,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCPT(46,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^DGCPT(46,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=46,DIG=.03 D ^DICR
"^DD",46,46,.01,1,3,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCPT(46,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^DGCPT(46,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=46,DIG=.03 D ^DICR
"^DD",46,46,.01,1,3,"CREATE VALUE")
S X=""
"^DD",46,46,.01,1,3,"DELETE VALUE")
S X=""
"^DD",46,46,.01,1,3,"DT")
3050603
"^DD",46,46,.01,1,3,"FIELD")
CPT MODIFIER 2
"^DD",46,46,.01,3)
Enter the procedure, services or supplies using CPT or HCPCS
"^DD",46,46,.01,12)
Allow only active CPT procedures
"^DD",46,46,.01,12.1)
S DIC("S")="D EN6^DGPTFJC I 'DGER"
"^DD",46,46,.01,21,0)
^^5^5^3070430^
"^DD",46,46,.01,21,1,0)
This is the procedure, services, or supplies used for the patient.  It is
"^DD",46,46,.01,21,2,0)
using the Healthcare Common Procedure Coding System (HCPCS) or Common
"^DD",46,46,.01,21,3,0)
Procedure Terminology (CPT) code.  This value appears on the CMS 1500 in
"^DD",46,46,.01,21,4,0)
box 24d. The values in this field will be provided to the billing package
"^DD",46,46,.01,21,5,0)
when the record is closed.
"^DD",46,46,.01,"DEL",1,0)
W *7,!,"USE DELETE OPTION TO DO LOGICAL DELETE"
"^DD",46,46,.01,"DT")
3070430
"^DD",46,46,.02,0)
CPT MODIFIER 1^*P81.3'^DIC(81.3,^0;2^S DIC("S")="I $$MODP^ICPTMOD($P(^DGCPT(46,DA,0),U),Y,""I"",DGPRD)>0,$P(^DGCPT(46,DA,0),U,3)'=Y" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",46,46,.02,3)
Indicates that a service or procedure has been altered, but code unchanged.
"^DD",46,46,.02,5,1,0)
46^.01^2
"^DD",46,46,.02,12)
ALLOW ONLY MODIFIERS VALID FOR THIS CPT
"^DD",46,46,.02,12.1)
S DIC("S")="I $$MODP^ICPTMOD($P(^DGCPT(46,DA,0),U),Y,""I"",DGPRD)>0,$P(^DGCPT(46,DA,0),U,3)'=Y"
"^DD",46,46,.02,21,0)
^.001^2^2^3050331^^^^
"^DD",46,46,.02,21,1,0)
Used to indicate that a service or procedure has been altered by some 
"^DD",46,46,.02,21,2,0)
specific circumstance but without changing the definition or code.
"^DD",46,46,.02,"DT")
3050331
"^DD",46,46,.03,0)
CPT MODIFIER 2^*P81.3'^DIC(81.3,^0;3 ^S DIC("S")="I $$MODP^ICPTMOD($P(^DGCPT(46,DA,0),U),Y,""I"",DGPRD)>0,$P(^DGCPT(46,DA,0),U,2)'=Y" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",46,46,.03,3)
Indicates that a service or procedure has been altered, but code UNCHANGED.
"^DD",46,46,.03,5,1,0)
46^.01^3
"^DD",46,46,.03,12)
ALLOW ONLY MODIFIERS VALID FOR THIS CPT
"^DD",46,46,.03,12.1)
S DIC("S")="I $$MODP^ICPTMOD($P(^DGCPT(46,DA,0),U),Y,""I"",DGPRD)>0,$P(^DGCPT(46,DA,0),U,2)'=Y"
"^DD",46,46,.03,21,0)
^.001^2^2^3050331^^^^
"^DD",46,46,.03,21,1,0)
Used to indicate that a service or procedure has been altered by some
"^DD",46,46,.03,21,2,0)
specific circumstance but not changed definition or code.
"^DD",46,46,.03,"DT")
3050331
"^DD",46,46,.04,0)
PRIMARY DIAGNOSIS^*P80X^ICD9(^0;4^D ICDEN^DGPTF5 Q:X=""  S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",46,46,.04,3)
The primary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.04,12)
Allow only active Diagnosis codes.
"^DD",46,46,.04,12.1)
S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",46,46,.04,21,0)
^^4^4^3070425^^
"^DD",46,46,.04,21,1,0)
The diagnosis code most directly related to the procedure code performed for 
"^DD",46,46,.04,21,2,0)
this professional service.  This field must be entered for each CPT code
"^DD",46,46,.04,21,3,0)
entered.  It appears in box 21 on the CMS-1500 and is associated with a
"^DD",46,46,.04,21,4,0)
procedure in box 24e.
"^DD",46,46,.04,"DT")
3070425
"^DD",46,46,.05,0)
SECONDARY DIAGNOSIS 1^*P80'X^ICD9(^0;5^D ICDEN^DGPTF5 Q:X=""  S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",46,46,.05,3)
A secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.05,12)
Allow only active diagnosis codes.
"^DD",46,46,.05,12.1)
S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",46,46,.05,21,0)
^^3^3^3070425^^^
"^DD",46,46,.05,21,1,0)
A secondary diagnosis related to the procedure performed for this 
"^DD",46,46,.05,21,2,0)
professional service.  This field is optional.  It appears in box 21 on 
"^DD",46,46,.05,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.05,"DT")
3070425
"^DD",46,46,.06,0)
SECONDARY DIAGNOSIS 2^*P80'X^ICD9(^0;6^D ICDEN^DGPTF5 Q:X=""  S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",46,46,.06,3)
A secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.06,12)
Allow only active diagnosis codes.
"^DD",46,46,.06,12.1)
S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",46,46,.06,21,0)
^^3^3^3070425^^
"^DD",46,46,.06,21,1,0)
A secondary diagnosis related to the procedure performed for this 
"^DD",46,46,.06,21,2,0)
professional service.  This field is optional.  It appears in box 21 on 
"^DD",46,46,.06,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.06,"DT")
3070425
"^DD",46,46,.07,0)
SECONDARY DIAGNOSIS 3^*P80'X^ICD9(^0;7^D ICDEN^DGPTF5 Q:X=""  S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",46,46,.07,3)
A secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.07,12)
Allow only active diagnosis codes.
"^DD",46,46,.07,12.1)
S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",46,46,.07,21,0)
^^3^3^3070425^
"^DD",46,46,.07,21,1,0)
A secondary diagnosis related to the procedure performed for this 
"^DD",46,46,.07,21,2,0)
professional service.  This field is optional.  It appears in box 21 on 
"^DD",46,46,.07,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.07,"DT")
3070425
"^DD",46,46,.08,0)
TREATED FOR SC CONDITION^RS^1:YES;0:NO;^0;8^Q
"^DD",46,46,.08,3)
The patient care must be Service Connected.
"^DD",46,46,.08,21,0)
^.001^4^4^3031016^^^^
"^DD",46,46,.08,21,1,0)
Enter 'Y' if this applicant is service connected and the professional
"^DD",46,46,.08,21,2,0)
service is related to that service connection.  Otherwise enter 'N'.  This
"^DD",46,46,.08,21,3,0)
field can only be entered if the service connection information was entered
"^DD",46,46,.08,21,4,0)
in registration.  See field .301 in file 2.
"^DD",46,46,.08,"DT")
3030527
"^DD",46,46,.09,0)
TREATED FOR AO CONDITION^RS^1:YES;0:NO;^0;9^Q
"^DD",46,46,.09,3)
The Patient must have Agent Orange exposure indicated!
"^DD",46,46,.09,21,0)
^^4^4^3030605^
"^DD",46,46,.09,21,1,0)
The Agent Orange questions must be answered yes in registration
"^DD",46,46,.09,21,2,0)
before this field can be entered.  Enter 'Y' if this procedure is related
"^DD",46,46,.09,21,3,0)
to Agent Orange exposure based on the related diagnosis.  See field .32102
"^DD",46,46,.09,21,4,0)
in file 2.
"^DD",46,46,.09,"DT")
3030527
"^DD",46,46,.1,0)
TREATED FOR IR CONDITION^RS^1:YES;0:NO;^0;10^Q
"^DD",46,46,.1,3)
The Patient must have Ionizing Radiation exposure indicated!
"^DD",46,46,.1,21,0)
^^4^4^3030605^
"^DD",46,46,.1,21,1,0)
Enter 'Y' if the procedure performed is related to exposure to ionizing
"^DD",46,46,.1,21,2,0)
.  Enter 'N' if the procedure performed is unrelated to ionizing radiation.
"^DD",46,46,.1,21,3,0)
The ionizing radiation information must be entered in registration
"^DD",46,46,.1,21,4,0)
before it can be entered here.  See field .32111 in file 2.
"^DD",46,46,.1,"DT")
3030527
"^DD",46,46,.11,0)
EXPOSED TO ENVIR CONTAMINANTS^RS^1:YES;0:NO;^0;11^Q
"^DD",46,46,.11,3)
The Patient must have Environment Contaminants exposure!
"^DD",46,46,.11,21,0)
^.001^4^4^3030605^^
"^DD",46,46,.11,21,1,0)
Enter 'Y' if the procedure performed is related to exposure to environmental
"^DD",46,46,.11,21,2,0)
contamination.  Enter 'N' if the procedure performed is unrelated to
"^DD",46,46,.11,21,3,0)
environmental contamination.  This information must be entered in
"^DD",46,46,.11,21,4,0)
Registration before it can be entered here.  See field .322013 in file 2.
"^DD",46,46,.11,"DT")
3030527
"^DD",46,46,.12,0)
TREATMENT FOR MST^RS^1:YES;0:NO;^0;12^Q
"^DD",46,46,.12,3)
Was the treatment related to Military Sexual Trauma.
"^DD",46,46,.12,21,0)
^^3^3^3030605^
"^DD",46,46,.12,21,1,0)
Enter 'Y' if the procedure performed is related to military sexual trauma.
"^DD",46,46,.12,21,2,0)
Enter 'N' if the procedure performed is unrelated to military sexual
"^DD",46,46,.12,21,3,0)
trauma.  This information must be entered in registration first.
"^DD",46,46,.12,"DT")
3030527
"^DD",46,46,.13,0)
TREATMENT FOR HEAD/NECK CA^RS^1:YES;0:NO;^0;13^Q
"^DD",46,46,.13,3)
Was the treatment related to Head and/or Neck Cancer.
"^DD",46,46,.13,21,0)
^.001^3^3^3040218^^
"^DD",46,46,.13,21,1,0)
Enter 'Y' if this procedure is related to treatment for head/neck cancer.
"^DD",46,46,.13,21,2,0)
Enter 'N' is the procedure is unrelated to the patient's head/neck
"^DD",46,46,.13,21,3,0)
cancer.
"^DD",46,46,.13,"DT")
3030527
"^DD",46,46,.131,0)
COMBAT VET^S^Y:YES;N:NO;^0;19^Q
"^DD",46,46,.131,3)
Care is potentially related to military combat.
"^DD",46,46,.131,21,0)
^^7^7^3040224^
"^DD",46,46,.131,21,1,0)
Indiacte if the inpatient stay at this location is related to military
"^DD",46,46,.131,21,2,0)
service in combat and not from cause other than military
"^DD",46,46,.131,21,3,0)
service in combat operations (congenital, developmental, pre-service
"^DD",46,46,.131,21,4,0)
existing conditions, or conditions having specific and well-established
"^DD",46,46,.131,21,5,0)
etiology that began after military combat service, i.e., bone
"^DD",46,46,.131,21,6,0)
fractures occuring after separation date, comon colds, ect).  This
"^DD",46,46,.131,21,7,0)
information can only be entered if the patient has CV status in Registration.
"^DD",46,46,.131,"DT")
3040224
"^DD",46,46,.14,0)
CPT RECORD DATE/TIME^RD^^1;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",46,46,.14,3)
Date and time the professional service occurred.
"^DD",46,46,.14,21,0)
^^2^2^3030528^
"^DD",46,46,.14,21,1,0)
The date and time the professional service was performed.  May not be exact.
"^DD",46,46,.14,21,2,0)
Must be unique.
"^DD",46,46,.14,"DT")
3040122
"^DD",46,46,.16,0)
PTF^RP45'^DGPT(^1;3^Q
"^DD",46,46,.16,1,0)
^.1
"^DD",46,46,.16,1,1,0)
46^C
"^DD",46,46,.16,1,1,1)
S ^DGCPT(46,"C",$E(X,1,30),DA)=""
"^DD",46,46,.16,1,1,2)
K ^DGCPT(46,"C",$E(X,1,30),DA)
"^DD",46,46,.16,1,1,"DT")
3030513
"^DD",46,46,.16,3)
Enter the inpatient episode to enter professional service for.
"^DD",46,46,.16,21,0)
^^1^1^3030528^
"^DD",46,46,.16,21,1,0)
Pointer to the inpatient record in the PTF file (45).
"^DD",46,46,.16,"DT")
3030513
"^DD",46,46,.17,0)
SOURCE^F^^1;4^K:$L(X)>30!($L(X)<3) X
"^DD",46,46,.17,3)
ENTER THE PACKAGE WHICH PROVIDED THE DATA.
"^DD",46,46,.17,21,0)
^^2^2^3030923^
"^DD",46,46,.17,21,1,0)
SOURCE is a string of text (3-30 character) identifying the source of the
"^DD",46,46,.17,21,2,0)
data or Examples of  SOURCE are:  "LAB  DATA". "RADIOLOGY DATA".
"^DD",46,46,.17,"DT")
3030917
"^DD",46,46,.18,0)
USER^P200'^VA(200,^1;2^Q
"^DD",46,46,.18,3)
ENTER THE USER WHO LAST EDITED THIS ENTRY.
"^DD",46,46,.18,21,0)
^^2^2^3030923^
"^DD",46,46,.18,21,1,0)
User who is responsible for add/edit/delete action on the encounter. Pointer
"^DD",46,46,.18,21,2,0)
to the New Person file (200).
"^DD",46,46,.18,"DT")
3030917
"^DD",46,46,.2,0)
QUANTITY^NJ2,0^^0;14^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",46,46,.2,3)
Enter a number between 1 and 99 indicating how many times this procedure was done.
"^DD",46,46,.2,21,0)
^^2^2^3030619^
"^DD",46,46,.2,21,1,0)
This is the number of times this procedure was done to the patient for
"^DD",46,46,.2,21,2,0)
one professional service.
"^DD",46,46,.2,"DT")
3030619
"^DD",46,46,.21,0)
SECONDARY DIAGNOSIS 4^*P80'X^ICD9(^0;15^D ICDEN^DGPTF5 Q:X=""  S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",46,46,.21,3)
A secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.21,12)
Allow only active diagnosis codes.
"^DD",46,46,.21,12.1)
S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",46,46,.21,21,0)
^^3^3^3070430^
"^DD",46,46,.21,21,1,0)
A secondary diagnosis related to the procedure performed for this
"^DD",46,46,.21,21,2,0)
professional service. This field is optional. It appears in box 21 on
"^DD",46,46,.21,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.21,"DT")
3070430
"^DD",46,46,.22,0)
SECONDARY DIAGNOSIS 5^*P80'X^ICD9(^0;16^D ICDEN^DGPTF5 Q:X=""  S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",46,46,.22,3)
A secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.22,12)
Allow only active diagnosis codes.
"^DD",46,46,.22,12.1)
S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",46,46,.22,21,0)
^^3^3^3070425^
"^DD",46,46,.22,21,1,0)
A secondary diagnosis related to the procedure performed for this
"^DD",46,46,.22,21,2,0)
professional service. This field is optional. It appears in box 21 on
"^DD",46,46,.22,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.22,"DT")
3070425
"^DD",46,46,.23,0)
SECONDARY DIAGNOSIS 6^*P80'X^ICD9(^0;17^D ICDEN^DGPTF5 Q:X=""  S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",46,46,.23,12)
Allow only active diagnosis codes.
"^DD",46,46,.23,12.1)
S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",46,46,.23,21,0)
^^3^3^3070425^
"^DD",46,46,.23,21,1,0)
A secondary diagnosis related to the procedure performed for this
"^DD",46,46,.23,21,2,0)
professional service. This field is optional. It appears in box 21 on
"^DD",46,46,.23,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.23,"DT")
3070425
"^DD",46,46,.24,0)
SECONDARY DIAGNOSIS 7^*P80'X^ICD9(^0;18^D ICDEN^DGPTF5 Q:X=""  S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",46,46,.24,12)
Allow only active diagnosis codes.
"^DD",46,46,.24,12.1)
S DIC("S")="D EN5^DGPTFJC I 'DGER" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",46,46,.24,21,0)
^^3^3^3070425^
"^DD",46,46,.24,21,1,0)
A secondary diagnosis related to the procedure performed for this
"^DD",46,46,.24,21,2,0)
professional service. This field is optional. It appears in box 21 on
"^DD",46,46,.24,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.24,"DT")
3070425
"^DD",46,46,1,0)
DELETE DATE^D^^9;1^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",46,46,1,3)
Enter the date that the CPT code was deleted from the professional service.
"^DD",46,46,1,"DT")
3030620
"^DIC",46,46,0)
INPATIENT CPT CODE^46
"^DIC",46,46,0,"GL")
^DGCPT(46,
"^DIC",46,46,"%",0)
^1.005^^0
"^DIC",46,46,"%D",0)
^^5^5^3070425^
"^DIC",46,46,"%D",1,0)
This file is used to capture inpatient professional services for billing.
"^DIC",46,46,"%D",2,0)
Entries from this file are used on the CMS 1500.  This file can be used
"^DIC",46,46,"%D",3,0)
to capture billing information for observation visits  The date and time
"^DIC",46,46,"%D",4,0)
of the professional service is used as a unique identifier for the
"^DIC",46,46,"%D",5,0)
professional service.
"^DIC",46,"B","INPATIENT CPT CODE",46)

"BLD",7217,6)
^678
**END**
**END**
