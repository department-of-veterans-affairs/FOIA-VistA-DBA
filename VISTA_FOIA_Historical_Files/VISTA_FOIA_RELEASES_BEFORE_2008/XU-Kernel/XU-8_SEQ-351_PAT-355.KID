Released XU*8*355 SEQ #351
Extracted from mail message
**KIDS**:XU*8.0*355^

**INSTALL NAME**
XU*8.0*355
"BLD",835,0)
XU*8.0*355^KERNEL^0^3060911^y
"BLD",835,1,0)
^^3^3^3051221^^^
"BLD",835,1,1,0)
Cache Taskman with DCL environment.
"BLD",835,1,2,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",835,1,3,0)
Patch XU*8.0*355
"BLD",835,4,0)
^9.64PA^14.7^1
"BLD",835,4,14.7,0)
14.7
"BLD",835,4,14.7,2,0)
^9.641^14.7^1
"BLD",835,4,14.7,2,14.7,0)
TASKMAN SITE PARAMETERS  (File-top level)
"BLD",835,4,14.7,2,14.7,1,0)
^9.6411^21^2
"BLD",835,4,14.7,2,14.7,1,9,0)
VAX ENVIROMENT FOR DCL
"BLD",835,4,14.7,2,14.7,1,21,0)
LOAD BALANCE ROUTINE
"BLD",835,4,14.7,222)
y^y^p^^^^n^^n
"BLD",835,4,14.7,224)

"BLD",835,4,"APDD",14.7,14.7)

"BLD",835,4,"APDD",14.7,14.7,9)

"BLD",835,4,"APDD",14.7,14.7,21)

"BLD",835,4,"B",14.7,14.7)

"BLD",835,6.3)
9
"BLD",835,"KRN",0)
^9.67PA^8989.52^19
"BLD",835,"KRN",.4,0)
.4
"BLD",835,"KRN",.401,0)
.401
"BLD",835,"KRN",.402,0)
.402
"BLD",835,"KRN",.403,0)
.403
"BLD",835,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",835,"KRN",.403,"NM",1,0)
XU OPTION SCHEDULE    FILE #19.2^19.2^0
"BLD",835,"KRN",.403,"NM","B","XU OPTION SCHEDULE    FILE #19.2",1)

"BLD",835,"KRN",.5,0)
.5
"BLD",835,"KRN",.84,0)
.84
"BLD",835,"KRN",3.6,0)
3.6
"BLD",835,"KRN",3.8,0)
3.8
"BLD",835,"KRN",9.2,0)
9.2
"BLD",835,"KRN",9.8,0)
9.8
"BLD",835,"KRN",9.8,"NM",0)
^9.68A^11^11
"BLD",835,"KRN",9.8,"NM",1,0)
ZTM0^^0^B16458023
"BLD",835,"KRN",9.8,"NM",2,0)
ZTMB^^0^B25235985
"BLD",835,"KRN",9.8,"NM",3,0)
ZTMDCL^^0^B1335612
"BLD",835,"KRN",9.8,"NM",4,0)
ZTMS3^^0^B24216355
"BLD",835,"KRN",9.8,"NM",5,0)
ZTM6^^0^B9543070
"BLD",835,"KRN",9.8,"NM",6,0)
ZTMON^^0^B9427081
"BLD",835,"KRN",9.8,"NM",7,0)
ZTM1^^0^B21133324
"BLD",835,"KRN",9.8,"NM",8,0)
ZTMGRSET^^0^B46344405
"BLD",835,"KRN",9.8,"NM",9,0)
ZTMKU^^0^B20082059
"BLD",835,"KRN",9.8,"NM",10,0)
ZTM5^^0^B16898185
"BLD",835,"KRN",9.8,"NM",11,0)
ZTM^^0^B34923748
"BLD",835,"KRN",9.8,"NM","B","ZTM",11)

"BLD",835,"KRN",9.8,"NM","B","ZTM0",1)

"BLD",835,"KRN",9.8,"NM","B","ZTM1",7)

"BLD",835,"KRN",9.8,"NM","B","ZTM5",10)

"BLD",835,"KRN",9.8,"NM","B","ZTM6",5)

"BLD",835,"KRN",9.8,"NM","B","ZTMB",2)

"BLD",835,"KRN",9.8,"NM","B","ZTMDCL",3)

"BLD",835,"KRN",9.8,"NM","B","ZTMGRSET",8)

"BLD",835,"KRN",9.8,"NM","B","ZTMKU",9)

"BLD",835,"KRN",9.8,"NM","B","ZTMON",6)

"BLD",835,"KRN",9.8,"NM","B","ZTMS3",4)

"BLD",835,"KRN",19,0)
19
"BLD",835,"KRN",19.1,0)
19.1
"BLD",835,"KRN",101,0)
101
"BLD",835,"KRN",409.61,0)
409.61
"BLD",835,"KRN",771,0)
771
"BLD",835,"KRN",870,0)
870
"BLD",835,"KRN",8989.51,0)
8989.51
"BLD",835,"KRN",8989.52,0)
8989.52
"BLD",835,"KRN",8994,0)
8994
"BLD",835,"KRN","B",.4,.4)

"BLD",835,"KRN","B",.401,.401)

"BLD",835,"KRN","B",.402,.402)

"BLD",835,"KRN","B",.403,.403)

"BLD",835,"KRN","B",.5,.5)

"BLD",835,"KRN","B",.84,.84)

"BLD",835,"KRN","B",3.6,3.6)

"BLD",835,"KRN","B",3.8,3.8)

"BLD",835,"KRN","B",9.2,9.2)

"BLD",835,"KRN","B",9.8,9.8)

"BLD",835,"KRN","B",19,19)

"BLD",835,"KRN","B",19.1,19.1)

"BLD",835,"KRN","B",101,101)

"BLD",835,"KRN","B",409.61,409.61)

"BLD",835,"KRN","B",771,771)

"BLD",835,"KRN","B",870,870)

"BLD",835,"KRN","B",8989.51,8989.51)

"BLD",835,"KRN","B",8989.52,8989.52)

"BLD",835,"KRN","B",8994,8994)

"BLD",835,"QUES",0)
^9.62^^
"BLD",835,"REQB",0)
^9.611^1^1
"BLD",835,"REQB",1,0)
XU*8.0*275^2
"BLD",835,"REQB","B","XU*8.0*275",1)

"FIA",14.7)
TASKMAN SITE PARAMETERS
"FIA",14.7,0)
^%ZIS(14.7,
"FIA",14.7,0,0)
14.7
"FIA",14.7,0,1)
y^y^p^^^^n^^n
"FIA",14.7,0,10)

"FIA",14.7,0,11)

"FIA",14.7,0,"RLRO")

"FIA",14.7,0,"VR")
8.0^XU
"FIA",14.7,14.7)
1
"FIA",14.7,14.7,9)

"FIA",14.7,14.7,21)

"KRN",.403,9,-1)
0^1
"KRN",.403,9,0)
XU OPTION SCHEDULE^^^^2940310^^^19.2^0^0^1
"KRN",.403,9,40,0)
^.4031I^2^2
"KRN",.403,9,40,1,0)
1^^1,1^2
"KRN",.403,9,40,1,1)
Page 1
"KRN",.403,9,40,1,40,0)
^.4032PI^43^1
"KRN",.403,9,40,1,40,43,0)
XU OPTION SCHEDULE^2^1,1^e
"KRN",.403,9,40,2,0)
2^^1,1^1^1
"KRN",.403,9,40,2,1)
Page 2
"KRN",.403,9,40,2,40,0)
^.4032PI^49^2
"KRN",.403,9,40,2,40,48,0)
XUOPTION SCHEDULE 2^1^1,1^e
"KRN",.403,9,40,2,40,49,0)
XUOPTION SCHEDULE 3^2^8,5^e
"KRN",.403,9,40,2,40,49,2)
5
"KRN",.404,43,0)
XU OPTION SCHEDULE^19.2
"KRN",.404,43,40,0)
^.4044I^11^11
"KRN",.404,43,40,1,0)
6^QUEUED TO RUN AT WHAT TIME^3
"KRN",.404,43,40,1,1)
2
"KRN",.404,43,40,1,2)
6,31^30^6,3
"KRN",.404,43,40,1,10)
S:X="" DDSBR=5
"KRN",.404,43,40,1,11)
K T S T(1)="This is the date/time you want this option to be started by TaskMan.",T(2)="",T(3)="The current time is "_$$HTE^XLFDT($H,"1P") D HLP^DDSUTL(.T)
"KRN",.404,43,40,2,0)
7^DEVICE FOR QUEUED JOB OUTPUT^3
"KRN",.404,43,40,2,1)
3
"KRN",.404,43,40,2,2)
8,31^30^8,1
"KRN",.404,43,40,2,11)
D HLP^DDSUTL("Only enter a DEVICE if the job needs an output device.")
"KRN",.404,43,40,3,0)
8^QUEUED TO RUN ON VOLUME SET^3
"KRN",.404,43,40,3,1)
5
"KRN",.404,43,40,3,2)
10,31^21^10,2
"KRN",.404,43,40,3,11)
D HLP^DDSUTL("This is the Volume set [:node] that you want the job to run on.")
"KRN",.404,43,40,4,0)
9^RESCHEDULING FREQUENCY^3
"KRN",.404,43,40,4,1)
6
"KRN",.404,43,40,4,2)
12,31^30^12,7
"KRN",.404,43,40,4,11)
D HLP^DDSUTL("If this field is blank then the job will run only once.")
"KRN",.404,43,40,5,0)
11^SPECIAL QUEUEING^3
"KRN",.404,43,40,5,1)
9
"KRN",.404,43,40,5,2)
16,31^20^16,13
"KRN",.404,43,40,5,11)
K T S T(1)="This field is only for special jobs:",T(2)="1. That need to start every time the system is rebooted.",T(3)="2. Need to be persistent.",T(4)="3. BOTH" D HLP^DDSUTL(.T)
"KRN",.404,43,40,6,0)
1^Edit Option Schedule^1^
"KRN",.404,43,40,6,2)
^^1,27^1
"KRN",.404,43,40,7,0)
2^Option Name^3
"KRN",.404,43,40,7,1)
.01
"KRN",.404,43,40,7,2)
2,18^30^2,5
"KRN",.404,43,40,8,0)
5^__________________________________________________________________________^1^
"KRN",.404,43,40,8,2)
^^4,3^1
"KRN",.404,43,40,9,0)
3^Menu Text^4
"KRN",.404,43,40,9,2)
3,16^32^3,5
"KRN",.404,43,40,9,30)
={NAME:MENU TEXT}
"KRN",.404,43,40,10,0)
4^TASK ID^3
"KRN",.404,43,40,10,1)
12
"KRN",.404,43,40,10,2)
3,67^7^3,58
"KRN",.404,43,40,10,4)
^^^1
"KRN",.404,43,40,11,0)
10^TASK PARAMETERS^3
"KRN",.404,43,40,11,1)
15
"KRN",.404,43,40,11,2)
14,31^48^14,14
"KRN",.404,48,0)
XUOPTION SCHEDULE 2^19.2
"KRN",.404,48,40,0)
^.4044I^4^4
"KRN",.404,48,40,1,0)
1^Edit Option Schedule^1^
"KRN",.404,48,40,1,2)
^^1,26^
"KRN",.404,48,40,2,0)
2^Option Name^3
"KRN",.404,48,40,2,1)
.01
"KRN",.404,48,40,2,2)
2,18^30^2,5
"KRN",.404,48,40,2,4)
^^^1
"KRN",.404,48,40,3,0)
3^_____________________________________________________________________^1^
"KRN",.404,48,40,3,2)
^^3,5^1
"KRN",.404,48,40,4,0)
4^USER TO RUN TASK^3
"KRN",.404,48,40,4,1)
11
"KRN",.404,48,40,4,2)
5,23^35^5,5
"KRN",.404,48,40,4,11)
I '$D(^XUSEC("XUMGR",DUZ)) D UNED^DDSUTL("USER TO RUN TASK","XUOPTION SCHEDULE 2",,1)
"KRN",.404,49,0)
XUOPTION SCHEDULE 3^19.21
"KRN",.404,49,40,0)
^.4044I^2^2
"KRN",.404,49,40,1,0)
1^VARIABLE NAME^3
"KRN",.404,49,40,1,1)
.01
"KRN",.404,49,40,1,2)
1,16^20^1,1
"KRN",.404,49,40,1,4)
0
"KRN",.404,49,40,2,0)
2^VALUE^3
"KRN",.404,49,40,2,1)
1
"KRN",.404,49,40,2,2)
1,48^24^1,41
"MBREQ")
0
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
355^3060911^2
"PKG",3,22,1,"PAH",1,1,0)
^^3^3^3060911
"PKG",3,22,1,"PAH",1,1,1,0)
Cache Taskman with DCL environment.
"PKG",3,22,1,"PAH",1,1,2,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,3,0)
Patch XU*8.0*355
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","ZTM")
0^11^B34923748^B34894883
"RTN","ZTM",1,0)
%ZTM ;SEA/RDS-TaskMan: Manager, Part 1 (Main Loop) ;1/9/2006
"RTN","ZTM",2,0)
 ;;8.0;KERNEL;**24,36,64,67,118,127,136,275,355**;JUL 10, 1995;Build 9
"RTN","ZTM",3,0)
 ;
"RTN","ZTM",4,0)
 ;%ZTCHK is set to 1 @ top of SCHQ, set to 0 if send a task to SM
"RTN","ZTM",5,0)
LOOP ;Taskman's Main Loop
"RTN","ZTM",6,0)
 F %ZTLOOP=0:1 S %ZTLOOP=%ZTLOOP#16 D CHECK,SCHQ,IDLE:%ZTCHK
"RTN","ZTM",7,0)
 S %ZTFALL="" G LOOP
"RTN","ZTM",8,0)
 ;
"RTN","ZTM",9,0)
CHECK ;LOOP--Check Status And Update Loop Data
"RTN","ZTM",10,0)
 ;Do CHECK if sent a new job or %ZTLOOP=0.
"RTN","ZTM",11,0)
 Q:%ZTLOOP&$G(%ZTCHK)
"RTN","ZTM",12,0)
 I $D(^%ZTSCH("STOP","MGR",%ZTPAIR)) G HALT^%ZTM0
"RTN","ZTM",13,0)
 S ^%ZTSCH("RUN")=$H,ZTPAIR="",%ZTIME=$$H3($H)
"RTN","ZTM",14,0)
 I $D(^%ZTSCH("WAIT","MGR"))#2 D STATUS("WAIT","Taskman Waiting") H 5 G CHECK
"RTN","ZTM",15,0)
 ;
"RTN","ZTM",16,0)
 I $D(^%ZTSCH("UPDATE",$J))[0 D UPDATE^%ZTM5
"RTN","ZTM",17,0)
 I %ZTVLI D STATUS("PAUSE","Logons Inhibited") H 60 G CHECK ;Set in %ZTM5
"RTN","ZTM",18,0)
 I @%ZTNLG D INHIBIT^%ZTM5(1),STATUS("PAUSE","No Signons Allowed") H 60 G CHECK
"RTN","ZTM",19,0)
 I $G(^%ZIS(14.5,"LOGON",%ZTVOL)) D INHIBIT^%ZTM5(0) ;Check field
"RTN","ZTM",20,0)
 I $D(ZTREQUIR)#2 D STATUS("PAUSE","Required link to "_ZTREQUIR_" is down.") H 60 D REQUIR^%ZTM5 G CHECK
"RTN","ZTM",21,0)
 ;
"RTN","ZTM",22,0)
 I $D(^%ZTSCH("LINK"))#2,$$DIFF($H,^("LINK"))>900 D LINK^%ZTM3
"RTN","ZTM",23,0)
 ;
"RTN","ZTM",24,0)
 S %ZTRUN=%ZTVMJ>$$ACTJ^%ZOSV ;Check for job limit
"RTN","ZTM",25,0)
 ;
"RTN","ZTM",26,0)
 I %ZTPFLG("BAL")]"" D  I ZTOVERLD G CHECK
"RTN","ZTM",27,0)
 . S ZTOVERLD=0
"RTN","ZTM",28,0)
 . Q:%ZTPFLG("LBT")>%ZTIME  S %ZTPFLG("LBT")=%ZTIME+%ZTPFLG("BI")
"RTN","ZTM",29,0)
 . D BALANCE^%ZTM6 Q:'ZTOVERLD
"RTN","ZTM",30,0)
 . D STATUS("BALANCE","Waiting to balance the load.")
"RTN","ZTM",31,0)
 . ;Start submanagers for C list work
"RTN","ZTM",32,0)
 . I $D(^%ZTSCH("C",%ZTPAIR))>9,%ZTRUN D NEWJOB(%ZTUCI,%ZTVOL,"")
"RTN","ZTM",33,0)
 . N T F T=1:1:%ZTPFLG("BI") H 1 Q:$$STOPWT^%ZTM6()
"RTN","ZTM",34,0)
 . Q
"RTN","ZTM",35,0)
 ;
"RTN","ZTM",36,0)
 I %ZTRUN D STATUS("RUN","Main Loop")
"RTN","ZTM",37,0)
 I '%ZTRUN D STATUS("RUN","Taskman Job Limit Reached"),CHECK^%ZTM6
"RTN","ZTM",38,0)
 Q
"RTN","ZTM",39,0)
 ;
"RTN","ZTM",40,0)
STATUS(ST,MSG) ;Record TM status
"RTN","ZTM",41,0)
 S ^%ZTSCH("STATUS",$J)=$H_"^"_ST_"^"_$G(%ZTPAIR)_"^"_MSG
"RTN","ZTM",42,0)
 Q
"RTN","ZTM",43,0)
 ;
"RTN","ZTM",44,0)
TLOCK(M,T) ;Lock a time node
"RTN","ZTM",45,0)
 I M>0 L +^%ZTSCH(ZTDTH):0 Q $T
"RTN","ZTM",46,0)
 L -^%ZTSCH(ZTDTH) Q
"RTN","ZTM",47,0)
 ;
"RTN","ZTM",48,0)
SCHQ ;LOOP--Check Schedule List
"RTN","ZTM",49,0)
 S %ZTIME=$$H3($H),ZTDTH=0,%ZTCHK=1,IO=""
"RTN","ZTM",50,0)
S1 S ZTDTH=$O(^%ZTSCH(ZTDTH)),ZTSK=0 Q:(ZTDTH>%ZTIME)  Q:('ZTDTH)!(ZTDTH'?1.N)  I +ZTDTH<0 K ^%ZTSCH(ZTDTH) G S1
"RTN","ZTM",51,0)
 I '$$TLOCK(1,ZTDTH) G S1
"RTN","ZTM",52,0)
S2 S ZTSK=$O(^%ZTSCH(ZTDTH,ZTSK)) I ZTSK="" D TLOCK(-1,ZTDTH) G S1
"RTN","ZTM",53,0)
 S ZTST=$G(^%ZTSCH(ZTDTH,ZTSK))
"RTN","ZTM",54,0)
 ;Get task lock then release time lock
"RTN","ZTM",55,0)
 L +^%ZTSK(ZTSK):0 G S2:'$T
"RTN","ZTM",56,0)
 K ^%ZTSCH(ZTDTH,ZTSK) D TLOCK(-1,ZTDTH)
"RTN","ZTM",57,0)
 ;Count tasks
"RTN","ZTM",58,0)
 S %ZTMON(%ZTMON)=$G(%ZTMON(%ZTMON))+1
"RTN","ZTM",59,0)
 I $D(^%ZTSK(ZTSK,0))[0 D TSKSTAT("I") L -^%ZTSK(ZTSK) G S2
"RTN","ZTM",60,0)
 I $L($P($G(^%ZTSK(ZTSK,.1)),U,10)) D TSKSTAT("D","Stopped") L -^%ZTSK(ZTSK) G S2
"RTN","ZTM",61,0)
 D ^%ZTM1
"RTN","ZTM",62,0)
 I %ZTREJCT L -^%ZTSK(ZTSK) G S2
"RTN","ZTM",63,0)
 ;
"RTN","ZTM",64,0)
SEND ;Send Task To Submanager
"RTN","ZTM",65,0)
 S %ZTCHK=0,ZTPAIR=""
"RTN","ZTM",66,0)
 I ZTDVOL'=%ZTVOL D XLINK^%ZTM2 G:'ZTJOBIT SCHX
"RTN","ZTM",67,0)
 ;Clear before job cmd
"RTN","ZTM",68,0)
 I (ZTYPE'="C")&(%ZTNODE[ZTNODE) D
"RTN","ZTM",69,0)
 . D TSKSTAT(3,"Placed on JOB List")
"RTN","ZTM",70,0)
 . S ^%ZTSCH("JOB",ZTDTH,ZTSK)=IO ;No other lock on JOB
"RTN","ZTM",71,0)
 E  D
"RTN","ZTM",72,0)
 . D TSKSTAT("M","Placed on C List")
"RTN","ZTM",73,0)
 . S ZTPAIR=ZTDVOL_$S($L(ZTNODE):":"_ZTNODE,1:"")
"RTN","ZTM",74,0)
 . S ^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK)=IO
"RTN","ZTM",75,0)
 ;
"RTN","ZTM",76,0)
 L -^%ZTSK(ZTSK)
"RTN","ZTM",77,0)
 ;
"RTN","ZTM",78,0)
 ;I '$D(^%ZTSCH("STOP","SUB",%ZTPAIR)),'$$OOS(ZTPAIR) D NEWJOB(ZTUCI,ZTDVOL,ZTNODE,ZTYPE,ZTPAIR)
"RTN","ZTM",79,0)
 ;I '$D(^%ZTSCH("STOP","SUB",%ZTPAIR)),(ZTYPE="C"!(%ZTRUN&$$NEWSUB)),'$$OOS(ZTPAIR) D
"RTN","ZTM",80,0)
 ;. I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",81,0)
 ;. Q
"RTN","ZTM",82,0)
 I (ZTYPE="C"!(%ZTRUN&$$NEWSUB)),'$$OOS(ZTPAIR) D NEWJOB(ZTUCI,ZTDVOL,ZTNODE)
"RTN","ZTM",83,0)
SCHX L  K ZTREP Q
"RTN","ZTM",84,0)
 ;
"RTN","ZTM",85,0)
IDLE ;LOOP--DEV Node Maintenance; Backup JOB Commands
"RTN","ZTM",86,0)
 S (ZTREC,ZTCVOL)="" H 1 ;This is the main hang
"RTN","ZTM",87,0)
 I %ZTMON("NEXT")'>%ZTIME D MON ;See if time to update %ZTMON
"RTN","ZTM",88,0)
 Q:'%ZTRUN  ;Only do IDLE work if not at job limit
"RTN","ZTM",89,0)
 I $D(^%ZTSCH("STOP","MGR",%ZTPAIR)) Q
"RTN","ZTM",90,0)
 ;job off a new submanager if MIN count < # SUBs
"RTN","ZTM",91,0)
 I $$NEWSUB D NEWJOB(%ZTUCI,%ZTVOL,"")
"RTN","ZTM",92,0)
 L +^%ZTSCH("IDLE",%ZTPAIR):0 Q:'$T  D IDLE1 L -^%ZTSCH("IDLE",%ZTPAIR)
"RTN","ZTM",93,0)
 Q
"RTN","ZTM",94,0)
IDLE1 ;only proceed with idle work if 60 seconds since last check
"RTN","ZTM",95,0)
 I $$DIFF(%ZTIME,^%ZTSCH("IDLE"),1)<60 Q
"RTN","ZTM",96,0)
 I %ZTPFLG("XUSCNT") D TOUCH^XUSCNT
"RTN","ZTM",97,0)
 D I1,I2,I5,I6
"RTN","ZTM",98,0)
 S ^%ZTSCH("IDLE")=%ZTIME
"RTN","ZTM",99,0)
 Q
"RTN","ZTM",100,0)
 ;
"RTN","ZTM",101,0)
I1 ;clear out old DEV nodes
"RTN","ZTM",102,0)
 N X,%ZTIO S %ZTIO=""
"RTN","ZTM",103,0)
 F  S %ZTIO=$O(^%ZTSCH("DEV",%ZTIO)) Q:%ZTIO=""  L ^%ZTSCH("DEV",%ZTIO):0 I $T D  L -^%ZTSCH("DEV",%ZTIO)
"RTN","ZTM",104,0)
 . S X=$G(^%ZTSCH("DEV",%ZTIO)) Q:'$L(X)
"RTN","ZTM",105,0)
 . I $$DIFF(%ZTIME,X,1)>120 K ^%ZTSCH("DEV",%ZTIO)
"RTN","ZTM",106,0)
 . Q
"RTN","ZTM",107,0)
 Q
"RTN","ZTM",108,0)
 ;
"RTN","ZTM",109,0)
I2 ;job new submanagers cross-volume for each unfinished C list
"RTN","ZTM",110,0)
 I $D(^%ZTSCH("C")) D
"RTN","ZTM",111,0)
 . N Y,ZTUCI,ZTVOL,ZTNODE,$ETRAP,$ESTACK S $ET="S $EC="""" D ERCL^%ZTM2"
"RTN","ZTM",112,0)
 . S ZTVOL="" F  S ZTVOL=$O(^%ZTSCH("C",ZTVOL)) Q:ZTVOL=""  D
"RTN","ZTM",113,0)
 .. I $O(^%ZTSCH("C",ZTVOL,0))="" Q
"RTN","ZTM",114,0)
 .. S ZTNODE="",ZTDVOL=ZTVOL S:ZTDVOL[":" ZTNODE=$P(ZTDVOL,":",2),ZTDVOL=$P(ZTDVOL,":")
"RTN","ZTM",115,0)
 .. S X=$G(^%ZTSCH("C",ZTVOL))
"RTN","ZTM",116,0)
 .. I $D(^%ZTSCH("LINK",ZTDVOL))!(X>9)!$$OOS(ZTVOL) Q
"RTN","ZTM",117,0)
 .. S ^%ZTSCH("C",ZTVOL)=X+1
"RTN","ZTM",118,0)
 .. S ZTUCI=$O(^%ZIS(14.6,"AV",ZTDVOL,""))
"RTN","ZTM",119,0)
 .. D NEWJOB(ZTUCI,ZTDVOL,ZTNODE)
"RTN","ZTM",120,0)
 .. Q
"RTN","ZTM",121,0)
 . Q
"RTN","ZTM",122,0)
 Q
"RTN","ZTM",123,0)
 ;
"RTN","ZTM",124,0)
I4 ;job off a new submanager if the Job List still has tasks
"RTN","ZTM",125,0)
 I $D(^%ZTSCH("JOB"))>9 D NEWJOB(%ZTUCI,%ZTVOL,"")
"RTN","ZTM",126,0)
 Q
"RTN","ZTM",127,0)
 ;
"RTN","ZTM",128,0)
I5 ;Clean up %ZTSCH
"RTN","ZTM",129,0)
 S ZTDTH="0,0" F  S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:ZTDTH'[","  D
"RTN","ZTM",130,0)
 . N ZTSK,X L +^%ZTSCH(ZTDTH):0 Q:'$T
"RTN","ZTM",131,0)
 . S ZTSK=$O(^%ZTSCH(ZTDTH,0)) I ZTSK>0 S X=^(ZTSK),^%ZTSCH($$H3(ZTDTH),ZTSK)=X K ^%ZTSCH(ZTDTH,ZTSK)
"RTN","ZTM",132,0)
 . L -^%ZTSCH(ZTDTH)
"RTN","ZTM",133,0)
 . Q
"RTN","ZTM",134,0)
 Q
"RTN","ZTM",135,0)
 ;
"RTN","ZTM",136,0)
I6 ;Check on persistent jobs.
"RTN","ZTM",137,0)
 S ZTSK=0 F  S ZTSK=$O(^%ZTSCH("TASK",ZTSK)) Q:ZTSK'>0  D:$D(^%ZTSCH("TASK",ZTSK,"P"))
"RTN","ZTM",138,0)
 . L +^%ZTSCH("TASK",ZTSK):0 E  Q  ;Still running
"RTN","ZTM",139,0)
 . L -^%ZTSCH("TASK",ZTSK)
"RTN","ZTM",140,0)
 . D REQP^%ZTLOAD3(ZTSK) ;START NEW TASK.
"RTN","ZTM",141,0)
 K %ZTVS Q
"RTN","ZTM",142,0)
 ;
"RTN","ZTM",143,0)
MON ;Set Next %ZTMON each Hour
"RTN","ZTM",144,0)
 S %ZTMON=$P($H,",",2)\3600,%ZTMON(%ZTMON)=0
"RTN","ZTM",145,0)
 S %ZTMON("NEXT")=($H*86400)+(%ZTMON+1*3600)
"RTN","ZTM",146,0)
 D HOUR^%ZTM5
"RTN","ZTM",147,0)
 I %ZTMON("DAY")<+$H D DAY^%ZTM5
"RTN","ZTM",148,0)
 Q
"RTN","ZTM",149,0)
 ;
"RTN","ZTM",150,0)
NEWJOB(ZTUCI,ZTDVOL,ZTNODE) ;Start a new Job
"RTN","ZTM",151,0)
 S ZTUCI=$G(ZTUCI),ZTDVOL=$G(ZTDVOL),ZTNODE=$G(ZTNODE)
"RTN","ZTM",152,0)
 X %ZTJOB H %ZTSLO ;If job doesn't work, will catch next time.
"RTN","ZTM",153,0)
 Q
"RTN","ZTM",154,0)
 ;
"RTN","ZTM",155,0)
DIFF(N,O,T) ;Diff in sec.
"RTN","ZTM",156,0)
 Q:$G(T) N-O ;For new seconds times
"RTN","ZTM",157,0)
 Q N-O*86400-$P(O,",",2)+$P(N,",",2)
"RTN","ZTM",158,0)
 ;
"RTN","ZTM",159,0)
OOS(BV) ;Check if Box-Volume is Out Of Service, Return 1 if OOS.
"RTN","ZTM",160,0)
 Q:BV="" 0 N %
"RTN","ZTM",161,0)
 S %=$O(^%ZIS(14.7,"B",BV,0)),%=$G(^%ZIS(14.7,+%,0))
"RTN","ZTM",162,0)
 Q:%="" 1 Q $P(%,U,11)=1
"RTN","ZTM",163,0)
 ;
"RTN","ZTM",164,0)
H3(%) ;Convert $H to seconds.
"RTN","ZTM",165,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTM",166,0)
H0(%) ;Covert from seconds to $H
"RTN","ZTM",167,0)
 Q (%\86400)_","_(%#86400)
"RTN","ZTM",168,0)
SUBOK() ;Check if sub's are starting, return 1 if OK
"RTN","ZTM",169,0)
 S ^%ZTSCH("SUB",%ZTPAIR,0)=($G(^%ZTSCH("SUB",%ZTPAIR,0))+1)_"^"_$H
"RTN","ZTM",170,0)
 Q ^%ZTSCH("SUB",%ZTPAIR,0)<10
"RTN","ZTM",171,0)
 ;
"RTN","ZTM",172,0)
NEWSUB() ;See if we need a new submanager
"RTN","ZTM",173,0)
 N SUBS
"RTN","ZTM",174,0)
 L +^%ZTSCH("SUB",%ZTPAIR):0 S SUBS=^%ZTSCH("SUB",%ZTPAIR)
"RTN","ZTM",175,0)
 L -^%ZTSCH("SUB",%ZTPAIR)
"RTN","ZTM",176,0)
 I SUBS<%ZTPFLG("MINSUB") Q 1
"RTN","ZTM",177,0)
 Q 0
"RTN","ZTM",178,0)
 ;
"RTN","ZTM",179,0)
TSKSTAT(CODE,MSG) ; Update task's status
"RTN","ZTM",180,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=$G(CODE)_U_$H_U_$G(MSG)
"RTN","ZTM",181,0)
 Q
"RTN","ZTM0")
0^1^B16458023^B15924444
"RTN","ZTM0",1,0)
%ZTM0 ;SEA/RDS-TaskMan: Manager, Part 2 (Begin) ;09/29/2004  08:42
"RTN","ZTM0",2,0)
 ;;8.0;KERNEL;**42,36,67,88,118,127,136,175,275,355**;Jul 10, 1995;Build 9
"RTN","ZTM0",3,0)
 ;
"RTN","ZTM0",4,0)
START ;Entry Point--start Task Manager at system startup
"RTN","ZTM0",5,0)
 S $ETRAP="D ER^%ZTM5",^%ZTSCH("ER")="",U="^"
"RTN","ZTM0",6,0)
 D STATUS^%ZTM("RUN","Startup")
"RTN","ZTM0",7,0)
 L ^%ZTSCH:10 G:'$T RESTART ;Someone already running
"RTN","ZTM0",8,0)
 K ^%ZTSCH("DEV"),^("DEVOPEN"),^("LOAD"),^("LOADA"),^("STATUS"),^("STOP"),^("UPDATE")
"RTN","ZTM0",9,0)
 D I6^%ZTM ;Handle Persistent Jobs
"RTN","ZTM0",10,0)
 S ZTSK=0 F  S ZTSK=$O(^%ZTSCH("TASK",ZTSK)) Q:'ZTSK  D
"RTN","ZTM0",11,0)
 . D TSKSTAT^%ZTM1("E","Interrupted While Running")
"RTN","ZTM0",12,0)
 . K ^%ZTSCH("TASK",ZTSK)
"RTN","ZTM0",13,0)
 D SETUP
"RTN","ZTM0",14,0)
 K ^%ZTSCH("TASK"),^%ZTSCH("SUB")
"RTN","ZTM0",15,0)
 S ^%ZTSCH("IDLE")=0,^%ZTSCH("SUB",%ZTPAIR)=0,^(%ZTPAIR,0)=0
"RTN","ZTM0",16,0)
 D STATUS^%ZTM("RUN","Startup Hang")
"RTN","ZTM0",17,0)
 I "CFO"[%ZTYPE G BADTYPE
"RTN","ZTM0",18,0)
 H %ZTPFLG("TM-DELAY") ;Wait for system stability.
"RTN","ZTM0",19,0)
S1 ;
"RTN","ZTM0",20,0)
 D STATUS^%ZTM("RUN","Startup jobs")
"RTN","ZTM0",21,0)
 S %ZTLOOP=0 D CHECK^%ZTM
"RTN","ZTM0",22,0)
 D STRTUP
"RTN","ZTM0",23,0)
 S ZTU="" F  S ZTU=$O(^%ZTSCH("C",ZTU)) Q:ZTU=""  S ^%ZTSCH("C",ZTU)=0 ;Reset VS counts in C list.
"RTN","ZTM0",24,0)
 K %ZTI,%ZTY,ZTIO,ZTO,ZTP,ZTSK,ZTU
"RTN","ZTM0",25,0)
 I %ZTPFLG("XUSCNT") D COUNT^XUSCNT(1)
"RTN","ZTM0",26,0)
 G ^%ZTM
"RTN","ZTM0",27,0)
 ;
"RTN","ZTM0",28,0)
RESTART ;Entry Point--restart Task Manager
"RTN","ZTM0",29,0)
 S $ETRAP="D ER^%ZTM5",^%ZTSCH("ER")="",U="^"
"RTN","ZTM0",30,0)
 D STATUS^%ZTM("RUN","Restart")
"RTN","ZTM0",31,0)
 K ^%ZTSCH("STATUS"),^("STOP")
"RTN","ZTM0",32,0)
 D SETUP
"RTN","ZTM0",33,0)
 I '$D(^%ZTSCH("IDLE")) S ^%ZTSCH("IDLE")=0
"RTN","ZTM0",34,0)
 I '$D(^%ZTSCH("SUB",%ZTPAIR)) S ^%ZTSCH("SUB",%ZTPAIR)=0
"RTN","ZTM0",35,0)
 I "CFO"[%ZTYPE G BADTYPE
"RTN","ZTM0",36,0)
 I %ZTPFLG("XUSCNT") D COUNT^XUSCNT(1)
"RTN","ZTM0",37,0)
 G ^%ZTM
"RTN","ZTM0",38,0)
 ;
"RTN","ZTM0",39,0)
 ;
"RTN","ZTM0",40,0)
SETUP ;Setup Task Manager's Environment
"RTN","ZTM0",41,0)
 N X,Y,Z,ZT
"RTN","ZTM0",42,0)
ST2 S ^%ZTSCH("RUN")=$H,%ZTPAIR="ROU"
"RTN","ZTM0",43,0)
 D STATUS^%ZTM("RUN","Setup")
"RTN","ZTM0",44,0)
 D ZOSF I Y]"" D STATUS^%ZTM("PAUSE","The following required ^%ZOSF nodes are undefined: "_Y_".") H 60 G ST2
"RTN","ZTM0",45,0)
 D UPDATE^%ZTM5 I $D(ZTREQUIR)#2 D STATUS^%ZTM("PAUSE","Required link to "_ZTREQUIR_" is down.") H 60 G ST2
"RTN","ZTM0",46,0)
 ;Clear the NOT Responding count
"RTN","ZTM0",47,0)
 S X="" F  S X=$O(^%ZTSCH("C",X)) Q:X=""  S ^%ZTSCH("C",X)=0
"RTN","ZTM0",48,0)
 D JOB,NOLOG^%ZOSV S %ZTNLG=Y,DTIME=0,DUZ=0,DUZ(0)="@"
"RTN","ZTM0",49,0)
 K Z D NAME K X,Y,Z,ZT
"RTN","ZTM0",50,0)
 Q
"RTN","ZTM0",51,0)
STRTUP ;Queue the entries from the STARTUP X-ref
"RTN","ZTM0",52,0)
 ;After talking with the DBA, All STARTUP jobs will have DUZ=.5
"RTN","ZTM0",53,0)
 N ZTU,ZTO,ZTSAVE,ZTRTN,DUZ
"RTN","ZTM0",54,0)
 S DUZ=.5,DUZ(0)="@"
"RTN","ZTM0",55,0)
 S ZTU="" F  S ZTU=$O(^%ZTSCH("STARTUP",ZTU)),ZTO="" Q:ZTU=""  F  S ZTO=$O(^%ZTSCH("STARTUP",ZTU,ZTO)) Q:ZTO=""  D
"RTN","ZTM0",56,0)
 . S ZTSAVE("XQY")=$P(ZTO,"Q",2) ;This must be set for %ZTLOAD
"RTN","ZTM0",57,0)
 . S ZTDTH=$H,ZTIO=$P(^%ZTSCH("STARTUP",ZTU,ZTO),"^",2),ZTRTN="ZTSK^XQ1",ZTSAVE($S(ZTO["Q":"XQSCH",1:"XQY"))=+ZTO,ZTUCI=$P(ZTU,","),ZTCPU=$P(ZTU,",",2)
"RTN","ZTM0",58,0)
 . D ^%ZTLOAD
"RTN","ZTM0",59,0)
 . Q
"RTN","ZTM0",60,0)
 Q
"RTN","ZTM0",61,0)
 ;
"RTN","ZTM0",62,0)
ZOSF ;SETUP--determine whether any required ^%ZOSF nodes are missing
"RTN","ZTM0",63,0)
 S Y=""
"RTN","ZTM0",64,0)
 F X="ACTJ","OS","PROD","UCI","UCICHECK","VOL" I $D(^%ZOSF(X))[0 S Y=Y_","_X
"RTN","ZTM0",65,0)
 S:$T(ACTJ^%ZOSV)="" Y=Y_",ACTJ^%ZOSV"
"RTN","ZTM0",66,0)
 I Y]"" S Y=$E(Y,2,$L(Y))
"RTN","ZTM0",67,0)
 Q
"RTN","ZTM0",68,0)
 ;
"RTN","ZTM0",69,0)
JOB ;SETUP--setup JOB command
"RTN","ZTM0",70,0)
 I %ZTOS["VAX DSM" D  Q
"RTN","ZTM0",71,0)
 . S:'$L(%ZTPFLG("DCL")) %ZTJOB="J ^%ZTMS:(OPTION=""/UCI=""_$P(ZTUCI,"","")_""/VOL=""_ZTDVOL):5"
"RTN","ZTM0",72,0)
 . S:$L(%ZTPFLG("DCL")) %ZTJOB="D ^%ZTMDCL"
"RTN","ZTM0",73,0)
 . Q
"RTN","ZTM0",74,0)
 I %ZTOS["OpenM" D  Q
"RTN","ZTM0",75,0)
 . S:'$L(%ZTPFLG("DCL")) %ZTJOB="J ^%ZTMS::5"  ;"J ^%ZTMS:ZTUCI:5"
"RTN","ZTM0",76,0)
 . S:$L(%ZTPFLG("DCL")) %ZTJOB="D ^%ZTMDCL"
"RTN","ZTM0",77,0)
 . Q
"RTN","ZTM0",78,0)
 I %ZTOS["GT.M" S %ZTJOB="J GTM^%ZTMS::5",$ZINTERRUPT="I $$JOBEXAM^ZU($ZPOSITION)" Q
"RTN","ZTM0",79,0)
 I %ZTOS["M/SQL" S %ZTJOB="J ^%ZTMS:ZTUCI" Q
"RTN","ZTM0",80,0)
 I %ZTOS["MSM" S %ZTJOB="J ^%ZTMS[ZTUCI,ZTDVOL]:%ZTSIZ:5" Q  ;Set Maxpartsiz
"RTN","ZTM0",81,0)
 I %ZTOS["DTM" S %ZTJOB="J ^%ZTMS:(NSPACE=ZTUCI)" Q
"RTN","ZTM0",82,0)
 S %ZTJOB="J ^%ZTMS::5"
"RTN","ZTM0",83,0)
 Q
"RTN","ZTM0",84,0)
 ;
"RTN","ZTM0",85,0)
NAME ;Give a name to process.
"RTN","ZTM0",86,0)
 N $ETRAP,ZQ S $ETRAP="S ZQ=0,$EC="""" Q"
"RTN","ZTM0",87,0)
 F Z=1:1:9 S X="Taskman "_%ZTVOL_" "_Z,ZQ=1 D SETENV^%ZOSV Q:ZQ
"RTN","ZTM0",88,0)
 Q
"RTN","ZTM0",89,0)
BADTYPE ;Taskman should not run on this type of node.
"RTN","ZTM0",90,0)
 K ^%ZTSCH("STATUS")
"RTN","ZTM0",91,0)
 S ^%ZTSCH("RUN")=%ZTPAIR_" is the wrong type in taskman site parameters."
"RTN","ZTM0",92,0)
 Q
"RTN","ZTM0",93,0)
 ;
"RTN","ZTM0",94,0)
HALT ;Cleanup and halt
"RTN","ZTM0",95,0)
 I %ZTPFLG("XUSCNT") D COUNT^XUSCNT(-1)
"RTN","ZTM0",96,0)
 K ^%ZTSCH("STATUS",$J),^%ZTSCH("RUN"),^%ZTSCH("UPDATE",$J)
"RTN","ZTM0",97,0)
 K ^%ZTSCH("LOADA",%ZTPAIR)
"RTN","ZTM0",98,0)
 HALT
"RTN","ZTM1")
0^7^B21133324^B20977172
"RTN","ZTM1",1,0)
%ZTM1 ;SEA/RDS-TaskMan: Manager, Part 3 (Validate Task) ;07/27/2005  18:13
"RTN","ZTM1",2,0)
 ;;8.0;KERNEL;**118,127,275,355**;JUL 10, 1995;Build 9
"RTN","ZTM1",3,0)
MAIN ;
"RTN","ZTM1",4,0)
 ;SCHQ^%ZTM--examine task, determine device and destination, ^%ZTSK(ZTSK) lock at call.
"RTN","ZTM1",5,0)
 D LOOKUP D  D STORE
"RTN","ZTM1",6,0)
 .D ZIS I %ZTREJCT Q
"RTN","ZTM1",7,0)
 .D VOLUME I %ZTREJCT Q
"RTN","ZTM1",8,0)
 .D UCI I %ZTREJCT Q
"RTN","ZTM1",9,0)
 .Q
"RTN","ZTM1",10,0)
 Q  ;Un-lock back in %ZTM
"RTN","ZTM1",11,0)
LOOKUP ;
"RTN","ZTM1",12,0)
 ;MAIN--Unload Task Variables For Validation
"RTN","ZTM1",13,0)
 S %ZTREJCT=0
"RTN","ZTM1",14,0)
 D TSKSTAT(2,"Inspected")
"RTN","ZTM1",15,0)
 S ZTREC=^%ZTSK(ZTSK,0)
"RTN","ZTM1",16,0)
 S ZTREC02="",ZTREC1=$G(^%ZTSK(ZTSK,.1)),ZTREC2=$G(^%ZTSK(ZTSK,.2))
"RTN","ZTM1",17,0)
 S ZTREC21="",ZTREC25=$G(^%ZTSK(ZTSK,.25)) ;,$P(ZTREC,U,6)=ZTDTH
"RTN","ZTM1",18,0)
 S ^%ZTSK(ZTSK,.02)="" ;Clear
"RTN","ZTM1",19,0)
 Q
"RTN","ZTM1",20,0)
 ;
"RTN","ZTM1",21,0)
ZIS ;MAIN--Determine Output Device
"RTN","ZTM1",22,0)
 S ZTIO=$S($P(ZTREC2,U)]"":$P(ZTREC2,U),1:ZTST)
"RTN","ZTM1",23,0)
 I ZTIO="" S (IO,ZTREC2,ZTREC21,ZTREC25)="" G ZISX
"RTN","ZTM1",24,0)
 S $P(ZTREC2,U)=ZTIO,%ZIS="NQRST0",IOP=ZTIO,ZTIO(1)=$P(ZTREC2,U,5)
"RTN","ZTM1",25,0)
 I ZTIO(1)="DIRECT" S %ZIS=%ZIS_"D"
"RTN","ZTM1",26,0)
 D ^%ZIS K IO(1)
"RTN","ZTM1",27,0)
 I $S($G(IOT)="VTRM":1,IO="":1,1:POP) D REJCT("INVALID OUTPUT DEVICE") G ZISX
"RTN","ZTM1",28,0)
 I IOT="HG" S IO=""
"RTN","ZTM1",29,0)
 ;Check for IO queue at end
"RTN","ZTM1",30,0)
 S $P(ZTREC2,U,1,4)=ZTIO_U_IO_U_IOT_U_IOST
"RTN","ZTM1",31,0)
 S:'$D(IOCPU) IOCPU=$P($G(^%ZIS(1,+$G(IOS),0)),U,9) ;need IOCPU
"RTN","ZTM1",32,0)
 S ZTREC21=$G(IOS)
"RTN","ZTM1",33,0)
ZISX Q
"RTN","ZTM1",34,0)
 ;
"RTN","ZTM1",35,0)
VOLUME ;determine destination volume set
"RTN","ZTM1",36,0)
 S ZTDVOL(1)="",A=$P($G(IOCPU),":",2) ;device node
"RTN","ZTM1",37,0)
 S ZTNODE=$S($L(A):A,1:$P($P(ZTREC,U,14),":",2))
"RTN","ZTM1",38,0)
 S A=$S(ZTIO="":"",1:$P($G(IOCPU),":")) ;device cpu
"RTN","ZTM1",39,0)
 S ZTDVOL=$S($L(A):A,1:$P($P(ZTREC,U,14),":")) ;Destination
"RTN","ZTM1",40,0)
 S ZTCVOL=$P(ZTREC,U,12),ZTCVT=$$VSTYP(ZTCVOL) ;Creation
"RTN","ZTM1",41,0)
 I ZTDVOL="" D
"RTN","ZTM1",42,0)
 . I ZTCVT="C" S ZTDVOL=$S(%ZTYPE="P":%ZTVOL,ZTCVOL]"":ZTCVOL,1:%ZTVOL),ZTDVOL(1)=1 Q
"RTN","ZTM1",43,0)
 . S ZTDVOL=$S(ZTCVOL]"":ZTCVOL,1:%ZTVOL) Q
"RTN","ZTM1",44,0)
 S ZTREC02=U_ZTDVOL_U_ZTNODE_U_ZTDVOL(1)
"RTN","ZTM1",45,0)
 ;
"RTN","ZTM1",46,0)
V1 ;reject tasks with destination volume sets not in Volume Set file
"RTN","ZTM1",47,0)
 S ZT1=$O(^%ZIS(14.5,"B",ZTDVOL,""))
"RTN","ZTM1",48,0)
 I ZT1="" D REJCT("Task's volume set not listed in index.") Q
"RTN","ZTM1",49,0)
 S ZTS=$G(^%ZIS(14.5,ZT1,0))
"RTN","ZTM1",50,0)
 I ZTS="" D REJCT("Task's volume set not listed in file.") Q
"RTN","ZTM1",51,0)
 ;
"RTN","ZTM1",52,0)
V2 ;lookup type of volume set, and reject tasks to F or O types
"RTN","ZTM1",53,0)
 S ZTYPE=$P(ZTS,U,10)
"RTN","ZTM1",54,0)
 I ZTYPE="F"!(ZTYPE="O") D REJCT("Task's volume set can't accept tasks.") Q
"RTN","ZTM1",55,0)
 ;
"RTN","ZTM1",56,0)
V3 ;accept tasks with the current volume set as the destination
"RTN","ZTM1",57,0)
 I ZTDVOL=%ZTVOL Q
"RTN","ZTM1",58,0)
 ;
"RTN","ZTM1",59,0)
V4 ;reject tasks whose destination volume sets lack link access
"RTN","ZTM1",60,0)
 I $P(ZTS,U,3)="N" D REJCT("Task's volume set has no link access.") Q
"RTN","ZTM1",61,0)
 Q
"RTN","ZTM1",62,0)
VSTYP(VS) ;Get a VS's type
"RTN","ZTM1",63,0)
 Q:VS="" VS N %
"RTN","ZTM1",64,0)
 S %=$O(^%ZIS(14.5,"B",VS,0)),%=$G(^%ZIS(14.5,+%,0))
"RTN","ZTM1",65,0)
 Q $P(%,U,10)
"RTN","ZTM1",66,0)
 ;
"RTN","ZTM1",67,0)
UCI ;MAIN--determine destination UCI
"RTN","ZTM1",68,0)
 S ZTUCI=$P($P(ZTREC,U,4),",")
"RTN","ZTM1",69,0)
 S ZTUCI=$S(ZTUCI]"":ZTUCI,1:$P(ZTREC,U,11))
"RTN","ZTM1",70,0)
 ;
"RTN","ZTM1",71,0)
 ;reject tasks that lack a destination UCI
"RTN","ZTM1",72,0)
U1 ;
"RTN","ZTM1",73,0)
 ;reject tasks with no UCI of origin or requested destination
"RTN","ZTM1",74,0)
 I ZTUCI="" D REJCT("Task has no destination UCI listed.") Q
"RTN","ZTM1",75,0)
U2 ;
"RTN","ZTM1",76,0)
 ;handle tasks whose destination volume set is the current one
"RTN","ZTM1",77,0)
 ;if UCI is here, accept the task; if not, reject it
"RTN","ZTM1",78,0)
 I ZTDVOL=%ZTVOL D  Q
"RTN","ZTM1",79,0)
 . S X=ZTUCI_","_ZTDVOL X ^%ZOSF("UCICHECK")
"RTN","ZTM1",80,0)
 . I 0[Y D REJCT("Task's UCI does not exist here.") Q
"RTN","ZTM1",81,0)
 . S ZTUCI=$P(Y,",")
"RTN","ZTM1",82,0)
 . S $P(ZTREC02,U)=ZTUCI
"RTN","ZTM1",83,0)
 . I $E($P(ZTREC,U,2))'="%" Q
"RTN","ZTM1",84,0)
 . S X=$P(ZTREC,U,2) X ^%ZOSF("TEST")
"RTN","ZTM1",85,0)
 . I $T Q
"RTN","ZTM1",86,0)
 . D REJCT("Task's entry routine does not exist here.")
"RTN","ZTM1",87,0)
 .Q
"RTN","ZTM1",88,0)
U3 ;
"RTN","ZTM1",89,0)
 ;accept tasks whose dest. UCIs are listed under their dest. volume sets
"RTN","ZTM1",90,0)
 I $O(^%ZIS(14.6,"AV",ZTDVOL,ZTUCI,"")) S $P(ZTREC02,U)=ZTUCI Q
"RTN","ZTM1",91,0)
U4 ;
"RTN","ZTM1",92,0)
 ;otherwise, the destination UCI must be a valid one here...
"RTN","ZTM1",93,0)
 S X=ZTUCI X ^%ZOSF("UCICHECK")
"RTN","ZTM1",94,0)
 I 0[Y D REJCT("Task's destination UCI failed check.") Q
"RTN","ZTM1",95,0)
U5 ;
"RTN","ZTM1",96,0)
 ;...and it must be changed to the associated UCI over there
"RTN","ZTM1",97,0)
 S ZT1=$O(^%ZIS(14.6,"AT",ZTUCI,%ZTVOL,ZTDVOL,""))
"RTN","ZTM1",98,0)
 I ZT1]"" S ZTUCI=ZT1
"RTN","ZTM1",99,0)
 S $P(ZTREC02,U)=ZTUCI
"RTN","ZTM1",100,0)
 Q
"RTN","ZTM1",101,0)
 ;
"RTN","ZTM1",102,0)
STORE ;Store Validated Data In Task Log, Quit If Needn't Do WAIT
"RTN","ZTM1",103,0)
 I %ZTREJCT S $P(ZTREC1,U,1,2)="B^"_$H ;Rejected
"RTN","ZTM1",104,0)
 I $D(^%ZTSK(ZTSK,0))[0 D TSKSTAT("I") S %ZTREJCT=1 Q
"RTN","ZTM1",105,0)
 S ^%ZTSK(ZTSK,0)=ZTREC
"RTN","ZTM1",106,0)
 S ^%ZTSK(ZTSK,.02)=ZTREC02
"RTN","ZTM1",107,0)
 S ^%ZTSK(ZTSK,.1)=$P(ZTREC1,U,1,9)_U_$P(^(.1),U,10,11)
"RTN","ZTM1",108,0)
 S ^%ZTSK(ZTSK,.2)=ZTREC2,^(.21)=ZTREC21,^(.25)=ZTREC25
"RTN","ZTM1",109,0)
 K %ZTF,IOCPU
"RTN","ZTM1",110,0)
 I ZTIO="" Q
"RTN","ZTM1",111,0)
 I %ZTREJCT Q
"RTN","ZTM1",112,0)
 I ZTDVOL'=%ZTVOL Q
"RTN","ZTM1",113,0)
 I IOT'="TRM",IOT'="RES" Q
"RTN","ZTM1",114,0)
 I $D(^%ZTSCH("IO",IO))>9 D IOWAIT
"RTN","ZTM1",115,0)
 K X,Y
"RTN","ZTM1",116,0)
 Q
"RTN","ZTM1",117,0)
 ;
"RTN","ZTM1",118,0)
IOWAIT ;If Device has a queue, Put Task On IO Queue.
"RTN","ZTM1",119,0)
 S %ZTREJCT=1 D TSKSTAT("A","Put On The IO List")
"RTN","ZTM1",120,0)
 S %ZTIO=IO,ZTIOS=ZTREC21,ZTIOT=IOT
"RTN","ZTM1",121,0)
 D NQ^%ZTM4
"RTN","ZTM1",122,0)
 Q
"RTN","ZTM1",123,0)
 ;
"RTN","ZTM1",124,0)
REJCT(MSG) ;Save reject msg, set flag
"RTN","ZTM1",125,0)
 S %ZTREJCT=1,$P(ZTREC1,U,3)=MSG
"RTN","ZTM1",126,0)
 I $G(DUZ)>.9 D
"RTN","ZTM1",127,0)
 . N XQA,XQAMSG,XQADATA,XQAROU,ZTUCI
"RTN","ZTM1",128,0)
 . S XQA(DUZ)="",XQAMSG="Your task #"_ZTSK_" rejected because: "_MSG,XQADATA=ZTSK,XQAROU="XQA^XUTMUTL"
"RTN","ZTM1",129,0)
 . S ZTUCI=$P($P(ZTREC,U,4),","),ZTUCI=$S(ZTUCI]"":ZTUCI,1:$P(ZTREC,U,11))
"RTN","ZTM1",130,0)
 . N ZTSK,ZTIO,ZTDTH,ZTCPU,ZTREC
"RTN","ZTM1",131,0)
 . S ZTRTN="ALERT^%ZTMS4",ZTDTH=$H,ZTIO="",ZTSAVE("XQA*")=""
"RTN","ZTM1",132,0)
 . D ^%ZTLOAD Q
"RTN","ZTM1",133,0)
 Q
"RTN","ZTM1",134,0)
 ;
"RTN","ZTM1",135,0)
TSKSTAT(CODE,MSG) ; Update task's status
"RTN","ZTM1",136,0)
 S $P(^%ZTSK(ZTSK,.1),"^",1,3)=$G(CODE)_U_$H_U_$G(MSG)
"RTN","ZTM1",137,0)
 Q
"RTN","ZTM1",138,0)
 ;
"RTN","ZTM1",139,0)
H3(%) ;Convert $H to seconds.
"RTN","ZTM1",140,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTM5")
0^10^B16898185^B14928719
"RTN","ZTM5",1,0)
%ZTM5 ;SEA/RDS-TaskMan: Manager, Part 5 (Short Subroutines) ;10/29/2003  22:07
"RTN","ZTM5",2,0)
 ;;8.0;KERNEL;**24,36,118,127,136,162,275,355**;JUL 10, 1995;Build 9
"RTN","ZTM5",3,0)
 ;
"RTN","ZTM5",4,0)
ER ;primary error trap for manager
"RTN","ZTM5",5,0)
 S %ZTERLGR=$$LGR^%ZOSV
"RTN","ZTM5",6,0)
 S $ETRAP="D ER2^%ZTM5"
"RTN","ZTM5",7,0)
 L  S ^%ZTSCH("RUN")=$H
"RTN","ZTM5",8,0)
 S ^%ZTSCH("STATUS",$J)=$H_"^ERROR^Recording A Trapped Error."
"RTN","ZTM5",9,0)
 ;
"RTN","ZTM5",10,0)
 S ZTERCODE=$$EC^%ZOSV,ZTE=""
"RTN","ZTM5",11,0)
 I '$$SCREEN^%ZTER(ZTERCODE) D
"RTN","ZTM5",12,0)
 . L ^%ZTSCH("ER") H 1 S ZT=$H
"RTN","ZTM5",13,0)
 . S ^%ZTSCH("ER",+ZT,$P(ZT,",",2))=ZTERCODE
"RTN","ZTM5",14,0)
 . S ^($P(ZT,",",2),1)="Caused by the manager." L
"RTN","ZTM5",15,0)
 . Q
"RTN","ZTM5",16,0)
 ;
"RTN","ZTM5",17,0)
 D ^%ZTER K ZTERCODE
"RTN","ZTM5",18,0)
 ;Lets wait before restarting.
"RTN","ZTM5",19,0)
ER2 H 10 S $ET="Q:$STACK  S $EC="""" G RESTART^%ZTM0" S $EC=",U99,"
"RTN","ZTM5",20,0)
 ;
"RTN","ZTM5",21,0)
UPDATE ;CHECK^%ZTM/LOOKUP^%ZTM0--update TaskMan site parameters
"RTN","ZTM5",22,0)
 L ^%ZTSCH("UPDATE",$J)
"RTN","ZTM5",23,0)
 S %ZTOS=^%ZOSF("OS"),U="^"
"RTN","ZTM5",24,0)
 D GETENV^%ZOSV
"RTN","ZTM5",25,0)
 S %ZTUCI=$P(Y,U),%ZTVOL=$P(Y,U,2),%ZTNODE=$P(Y,U,3),%ZTPAIR=$P(Y,U,4)
"RTN","ZTM5",26,0)
 S %ZTVSN=+$O(^%ZIS(14.5,"B",%ZTVOL,"")),%ZTVSS=$G(^%ZIS(14.5,%ZTVSN,0))
"RTN","ZTM5",27,0)
 S %ZTVLI=($P(%ZTVSS,U,2)="Y") ;Did site set Inhibit.
"RTN","ZTM5",28,0)
 S %ZTYPE("V")=$P(%ZTVSS,U,10) ;get vol set type
"RTN","ZTM5",29,0)
U1 ;
"RTN","ZTM5",30,0)
 S %ZTPN=+$O(^%ZIS(14.7,"B",%ZTPAIR,"")),%ZTPS=$G(^%ZIS(14.7,%ZTPN,0))
"RTN","ZTM5",31,0)
 S %ZTPT=+$P(%ZTPS,U,4) ;Priority
"RTN","ZTM5",32,0)
 S %ZTSIZ=+$P(%ZTPS,U,5) ;par size
"RTN","ZTM5",33,0)
 S %ZTRET=+$P(%ZTPS,U,6) ;Retention Time
"RTN","ZTM5",34,0)
 S %ZTVMJ=+$P(%ZTPS,U,7) ;TM job limit
"RTN","ZTM5",35,0)
 S %ZTSLO=+$P(%ZTPS,U,8) ;TM slow down
"RTN","ZTM5",36,0)
 S %ZTYPE=$P(%ZTPS,U,9) ;TM Mode
"RTN","ZTM5",37,0)
 S %ZTPFLG("DCL")=$P(%ZTPS,U,10) ;TM mode, VAX DCL
"RTN","ZTM5",38,0)
 S %ZTPFLG("BAL")=$E($G(^%ZIS(14.7,%ZTPN,2)),1,40)
"RTN","ZTM5",39,0)
 S %ZTPFLG("MINSUB")=$S($P(%ZTPS,U,12):$P(%ZTPS,U,12),1:1)
"RTN","ZTM5",40,0)
 S %ZTPFLG("LBT")=0,%ZTPFLG("BI")=$S($P(%ZTPS,U,14):$P(%ZTPS,U,14),1:30) ;Balance Interval
"RTN","ZTM5",41,0)
 S %ZTPFLG("TM-DELAY")=$P($G(^%ZIS(14.7,%ZTPN,3),"^60"),U,2) ;Start Delay
"RTN","ZTM5",42,0)
 S %ZTPFLG("START")=+$H
"RTN","ZTM5",43,0)
 S %ZTPFLG("XUSCNT")=0 I %ZTOS["GT.M" S %ZTPFLG("XUSCNT")=$L($T(^XUSCNT))
"RTN","ZTM5",44,0)
 S ^%ZTSCH("UPDATE",$J)=$H
"RTN","ZTM5",45,0)
 S %ZTMON("DAY")=+$H D MON^%ZTM ;Setup Task Counting
"RTN","ZTM5",46,0)
 K ^%ZTSCH("LOADA",%ZTPAIR) ;Clear LB in case we stop doing LB.
"RTN","ZTM5",47,0)
 L
"RTN","ZTM5",48,0)
 I "GP"'[%ZTYPE D  HALT
"RTN","ZTM5",49,0)
 . K ^%ZTSCH("STATUS")
"RTN","ZTM5",50,0)
 . S ^%ZTSCH("RUN")=%ZTNODE_" is the wrong type of volume set for TaskMan."
"RTN","ZTM5",51,0)
 . Q
"RTN","ZTM5",52,0)
 ;For Cache Map CPF to Node.
"RTN","ZTM5",53,0)
 I %ZTOS["OpenM",$ZV["VMS" D
"RTN","ZTM5",54,0)
 . N I,X,Y S Y=$P(%ZTPAIR,":"),X=Y
"RTN","ZTM5",55,0)
 . F  S X=$O(^%ZIS(14.7,"B",X)) Q:X'[Y  D
"RTN","ZTM5",56,0)
 . . S I=$O(^%ZIS(14.7,"B",X,0)),Z=^%ZIS(14.7,I,0)
"RTN","ZTM5",57,0)
 . . S I=$P(Z,U,10) S:$L(I) %ZTPFLG("Q",$P($P(Z,U),":",2))=I,%ZTPFLG("Q",I)=$P($P(Z,U),":",2)
"RTN","ZTM5",58,0)
 . Q
"RTN","ZTM5",59,0)
 Q
"RTN","ZTM5",60,0)
 ;
"RTN","ZTM5",61,0)
HOUR ;Run once an hour for each taskman
"RTN","ZTM5",62,0)
 D SUBCHK
"RTN","ZTM5",63,0)
 Q
"RTN","ZTM5",64,0)
 ;
"RTN","ZTM5",65,0)
DAY ;Run once a DAY for each Taskman
"RTN","ZTM5",66,0)
 D MON
"RTN","ZTM5",67,0)
 Q
"RTN","ZTM5",68,0)
 ;
"RTN","ZTM5",69,0)
MON ;Save off the monitor data
"RTN","ZTM5",70,0)
 N X S X=""
"RTN","ZTM5",71,0)
 F I=0:1:23 S X=X_$G(%ZTMON(I))_"^",%ZTMON(I)=0
"RTN","ZTM5",72,0)
 S ^%ZTSCH("MON",%ZTPAIR,%ZTMON("DAY"))=X
"RTN","ZTM5",73,0)
 S %ZTMON("DAY")=+$H
"RTN","ZTM5",74,0)
 Q
"RTN","ZTM5",75,0)
 ;
"RTN","ZTM5",76,0)
SUBCHK ;Job the SUB check routine
"RTN","ZTM5",77,0)
 J SUBCHK^%ZTMS5
"RTN","ZTM5",78,0)
 Q
"RTN","ZTM5",79,0)
 ;
"RTN","ZTM5",80,0)
REQUIR ;UPDATE/CHECK^%ZTM--ensure required links are available
"RTN","ZTM5",81,0)
 K ZTREQUIR N ZT1,ZTN,ZTS,ZTU S ZT1=0
"RTN","ZTM5",82,0)
 F  S ZT1=$O(^%ZIS(14.5,ZT1)) Q:'ZT1  I $D(^%ZIS(14.5,ZT1,0))#2 S ZTS=^(0) I $P(ZTS,U,5)="Y" D TEST I $D(ZTREQUIR)#2 Q
"RTN","ZTM5",83,0)
 K ZT,ZT1,ZTN,ZTS,ZTU
"RTN","ZTM5",84,0)
 Q
"RTN","ZTM5",85,0)
 ;
"RTN","ZTM5",86,0)
TEST ;REQUIR--test a required volume set
"RTN","ZTM5",87,0)
 N $ET,$ES,NULL
"RTN","ZTM5",88,0)
 S ZTN=$P(ZTS,U),NULL="" I ZTN="" Q
"RTN","ZTM5",89,0)
 I ZTN=%ZTVOL Q
"RTN","ZTM5",90,0)
 I $P(ZTS,U,3)="N" S ZTREQUIR=ZTN Q
"RTN","ZTM5",91,0)
 I $P(ZTS,U,4)="Y" S ZTREQUIR=ZTN Q
"RTN","ZTM5",92,0)
 S ZTU=$O(^%ZIS(14.6,"AV",ZTN,"")) I ZTU="" Q
"RTN","ZTM5",93,0)
 S $ET="S ZTREQUIR=ZTN,$EC=NULL Q"
"RTN","ZTM5",94,0)
 S X=$D(^[ZTU,ZTN]DIC(0))
"RTN","ZTM5",95,0)
 L +^%ZTSCH("LINK",ZTN)
"RTN","ZTM5",96,0)
 I $D(^%ZTSCH("LINK",ZTN)) S ^%ZTSCH("LINK")=0
"RTN","ZTM5",97,0)
 L -^%ZTSCH("LINK",ZTN)
"RTN","ZTM5",98,0)
 Q
"RTN","ZTM5",99,0)
 ;
"RTN","ZTM5",100,0)
LINK(ZTVOL) ;internal Kernel extrinsic function
"RTN","ZTM5",101,0)
 ;input--volume set where task should run
"RTN","ZTM5",102,0)
 ;output--UCI,volume set where record must be created
"RTN","ZTM5",103,0)
 ;after call check 1--if value is "", the input or file is bad
"RTN","ZTM5",104,0)
 ;after call check 2--if $P(value,",",2) is current volume set then
"RTN","ZTM5",105,0)
 ;...no extended reference should be used
"RTN","ZTM5",106,0)
 ;
"RTN","ZTM5",107,0)
L0 ;was a volume set passed in?
"RTN","ZTM5",108,0)
 N ZTN,ZTU,ZTV,ZTVD,ZTVN
"RTN","ZTM5",109,0)
 I $G(ZTVOL)'?2.7U Q ""
"RTN","ZTM5",110,0)
 ;
"RTN","ZTM5",111,0)
L1 ;is this volume set on file?
"RTN","ZTM5",112,0)
 S ZTVN=$O(^%ZIS(14.5,"B",ZTVOL,""))
"RTN","ZTM5",113,0)
 I ZTVN="" Q ""
"RTN","ZTM5",114,0)
 I $D(^%ZIS(14.5,ZTVN,0))[0 Q ""
"RTN","ZTM5",115,0)
 S ZTVD=^%ZIS(14.5,ZTVN,0)
"RTN","ZTM5",116,0)
 ;
"RTN","ZTM5",117,0)
L2 ;is there a TaskMan Files Volume Set?  if not, skip next section
"RTN","ZTM5",118,0)
 S ZTN=$P(ZTVD,"^",7)
"RTN","ZTM5",119,0)
 I ZTN="" S ZTV=ZTVOL G L4
"RTN","ZTM5",120,0)
 ;
"RTN","ZTM5",121,0)
L3 ;if there is a separate TaskMan Files Volume Set, is it on file?
"RTN","ZTM5",122,0)
 I $D(^%ZIS(14.5,ZTN,0))[0 Q ""
"RTN","ZTM5",123,0)
 S ZTVD=^%ZIS(14.5,ZTN,0)
"RTN","ZTM5",124,0)
 S ZTV=$P(ZTVD,"^")
"RTN","ZTM5",125,0)
 I ZTV="" Q ""
"RTN","ZTM5",126,0)
 ;
"RTN","ZTM5",127,0)
L4 ;if there is a TaskMan Files UCI, return UCI,volume set
"RTN","ZTM5",128,0)
 S ZTU=$P(ZTVD,"^",6)
"RTN","ZTM5",129,0)
 I ZTU="" Q ""
"RTN","ZTM5",130,0)
 Q ZTU_","_ZTV
"RTN","ZTM5",131,0)
 ;
"RTN","ZTM5",132,0)
 ;
"RTN","ZTM5",133,0)
INHIBIT(Y) ;Set/Clear the Inhibit logon field
"RTN","ZTM5",134,0)
 I Y=1 S $P(^%ZIS(14.5,%ZTVSN,0),U,2)="S",^%ZIS(14.5,"LOGON",%ZTVOL)=1 Q
"RTN","ZTM5",135,0)
 I Y=0 S $P(^%ZIS(14.5,%ZTVSN,0),U,2)="N" K ^%ZIS(14.5,"LOGON",%ZTVOL) Q
"RTN","ZTM5",136,0)
 Q
"RTN","ZTM6")
0^5^B9543070^B7780198
"RTN","ZTM6",1,0)
%ZTM6 ;SEA/RDS-TaskMan: Manager, Part 8 (Load Balancing) ;07/28/2005  16:14
"RTN","ZTM6",2,0)
 ;;8.0;KERNEL;**23,118,127,136,355**;JUL 10, 1995;Build 9
"RTN","ZTM6",3,0)
 ;
"RTN","ZTM6",4,0)
BALANCE ;CHECK^%ZTM--determine whether cpu should wait for balance
"RTN","ZTM6",5,0)
 ;Return ZTOVERLD =1 if need to wait, 0 to run
"RTN","ZTM6",6,0)
 ;The TM with the largest value sets ^%ZTSCH("LOAD",value)=who^when
"RTN","ZTM6",7,0)
 ;If your value is greater or equal then you run.
"RTN","ZTM6",8,0)
 ;If your value is less you wait unless you set LOAD then you run.
"RTN","ZTM6",9,0)
 L +^%ZTSCH("LOAD"):5 N X,ZTIME,ZTLEFT,ZTPREV
"RTN","ZTM6",10,0)
 N $ES,$ET S $ET="Q:$ES>0  D ER^%ZTM6"
"RTN","ZTM6",11,0)
 S ZTOVERLD=0,ZTPREV=+$O(^%ZTSCH("LOAD",0)),@("ZTLEFT="_%ZTPFLG("BAL"))
"RTN","ZTM6",12,0)
 S ZTIME=$$H3($H),ZTOVERLD=$$COMPARE(%ZTPAIR,ZTLEFT,ZTPREV)
"RTN","ZTM6",13,0)
 ;If we are RUNNING have other submanagers wait
"RTN","ZTM6",14,0)
 I 'ZTOVERLD D
"RTN","ZTM6",15,0)
 . S X="" F  S X=$O(^%ZTSCH("LOADA",X)) Q:X=""  S $P(^(X),"^")=1
"RTN","ZTM6",16,0)
 . K ^%ZTSCH("LOAD") S ^("LOAD",ZTLEFT)=%ZTPAIR_"^"_ZTIME
"RTN","ZTM6",17,0)
 ;Now set a value that is used by our %ZTMS to run/wait also
"RTN","ZTM6",18,0)
 S ^%ZTSCH("LOADA",%ZTPAIR)=ZTOVERLD_"^"_ZTLEFT_"^"_ZTIME_"^"_$J
"RTN","ZTM6",19,0)
 L -^%ZTSCH("LOAD")
"RTN","ZTM6",20,0)
 Q
"RTN","ZTM6",21,0)
 ;
"RTN","ZTM6",22,0)
STOPWT() ;See if we should stop Balance wait
"RTN","ZTM6",23,0)
 L +^%ZTSCH("LOAD"):0 Q:'$T 0 ;Keep waiting if can't get lock
"RTN","ZTM6",24,0)
 N I,J S I="",J=1
"RTN","ZTM6",25,0)
 F  S I=$O(^%ZTSCH("LOADA",I)) Q:I=""  I '^(I) S J=0
"RTN","ZTM6",26,0)
 L -^%ZTSCH("LOAD")
"RTN","ZTM6",27,0)
 Q J ;Return: stop waiting 1, keep waiting 0.
"RTN","ZTM6",28,0)
 ;
"RTN","ZTM6",29,0)
CHECK ;Called when job limit reached.
"RTN","ZTM6",30,0)
 ;If not doing balancing, remove node and quit
"RTN","ZTM6",31,0)
 N I,J I %ZTPFLG("BAL")="" K ^%ZTSCH("LOADA",%ZTPAIR) Q
"RTN","ZTM6",32,0)
 L +^%ZTSCH("LOAD"):0 Q:'$T  ;Get it next time
"RTN","ZTM6",33,0)
 S I=$O(^%ZTSCH("LOAD",0)),J=$G(^%ZTSCH("LOADA",%ZTPAIR))
"RTN","ZTM6",34,0)
 S I=$P(J,"^",2)<I,$P(^%ZTSCH("LOADA",%ZTPAIR),"^",1)=I
"RTN","ZTM6",35,0)
 L -^%ZTSCH("LOAD")
"RTN","ZTM6",36,0)
 Q
"RTN","ZTM6",37,0)
 ;
"RTN","ZTM6",38,0)
COMPARE(ID,ZTLEFT,ZTPREV) ;
"RTN","ZTM6",39,0)
 ;BALANCE--compare our cpu capacity left to that of previous checker
"RTN","ZTM6",40,0)
 ;input:  cpu name, cpu capacity left, cpu capacity of previous checker
"RTN","ZTM6",41,0)
 ;output: whether current cpu should wait, 0=run, 1=wait
"RTN","ZTM6",42,0)
 N X
"RTN","ZTM6",43,0)
 I ZTLEFT'<ZTPREV Q 0
"RTN","ZTM6",44,0)
 S X=^%ZTSCH("LOAD",ZTPREV)
"RTN","ZTM6",45,0)
 I $P(X,"^",2)+150<ZTIME Q 0
"RTN","ZTM6",46,0)
 Q $P(X,"^")'[ID
"RTN","ZTM6",47,0)
 ;
"RTN","ZTM6",48,0)
ER ;Clean up if error
"RTN","ZTM6",49,0)
 S $EC="",%ZTPFLG("BAL")="",ZTOVERLD=0 L -^%ZTSCH("LOAD")
"RTN","ZTM6",50,0)
 Q
"RTN","ZTM6",51,0)
 ;
"RTN","ZTM6",52,0)
H3(%) ;Convert $H to seconds
"RTN","ZTM6",53,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTM6",54,0)
 ;
"RTN","ZTM6",55,0)
VXD(BIAS) ;--algorithm for VAX DSM
"RTN","ZTM6",56,0)
 ;Capacity Left=Available Jobs - Active Jobs - (4 * Compute Queue Length)
"RTN","ZTM6",57,0)
 ;output: cpu capacity left+bias
"RTN","ZTM6",58,0)
 N ZTJ,ZTL S ZTJ=$$VXDJOBS
"RTN","ZTM6",59,0)
 S ZTL=$P(ZTJ,",")-$P(ZTJ,",",2)-(4*$P(ZTJ,",",3)) I ZTL<1 S ZTL=1
"RTN","ZTM6",60,0)
 Q ZTL+$G(BIAS)
"RTN","ZTM6",61,0)
 ;
"RTN","ZTM6",62,0)
VXDJOBS() ;
"RTN","ZTM6",63,0)
 ;VXD--gather job table information
"RTN","ZTM6",64,0)
 ;output: sysgen max # jobs, current # jobs, current # computable jobs
"RTN","ZTM6",65,0)
 N
"RTN","ZTM6",66,0)
 D INIT^%VOLDEF I '%SMSTART Q ""
"RTN","ZTM6",67,0)
 S ZTJOBSIZ=%JOBSIZ,ZTJOBTAB=%JOBTAB
"RTN","ZTM6",68,0)
 S ZTMAX=%MAXPROC,(ZTCOMP,ZTCOUNT)=0
"RTN","ZTM6",69,0)
 F ZTJOB=1:1:ZTMAX D
"RTN","ZTM6",70,0)
 .S ZTADDR=ZTJOB*ZTJOBSIZ+ZTJOBTAB,ZTPID=$V(ZTADDR+20) D VXDJ1:ZTPID Q
"RTN","ZTM6",71,0)
 Q ZTMAX_","_ZTCOUNT_","_ZTCOMP
"RTN","ZTM6",72,0)
 ;
"RTN","ZTM6",73,0)
VXDJ1 ;VXDJOBS--adjust # active and # computable based on current entry
"RTN","ZTM6",74,0)
 S X="VXDJE",@^%ZOSF("TRAP")
"RTN","ZTM6",75,0)
 S ZTNAME=$ZC(%GETJPI,ZTPID,"PRCNAM") Q:ZTNAME["Sub"
"RTN","ZTM6",76,0)
 S ZTSTATE=$ZC(%GETJPI,ZTPID,"STATE")
"RTN","ZTM6",77,0)
 S ZTCOUNT=ZTCOUNT+1
"RTN","ZTM6",78,0)
 I ZTSTATE["COM"!(ZTSTATE["CUR") S ZTCOMP=ZTCOMP+1
"RTN","ZTM6",79,0)
VXDJE S X="",@^%ZOSF("TRAP") Q
"RTN","ZTM6",80,0)
 ;
"RTN","ZTM6",81,0)
MSM4() ;Use MSMv4 LAT calcuation
"RTN","ZTM6",82,0)
 N MAXJOB,CURJOB
"RTN","ZTM6",83,0)
 S MAXJOB=$V($V(3,-5),-3,0),CURJOB=$V(168,-4,2)
"RTN","ZTM6",84,0)
 Q MAXJOB-CURJOB*255\MAXJOB
"RTN","ZTM6",85,0)
 ;
"RTN","ZTM6",86,0)
CACHE1(%) ;Use available jobs
"RTN","ZTM6",87,0)
 N CUR,MAX
"RTN","ZTM6",88,0)
 Q $$AVJ^%ZOSV()+$G(%)
"RTN","ZTM6",89,0)
 ;
"RTN","ZTM6",90,0)
CACHE2(%COM,%LOG) ;Cache, Pull metric data
"RTN","ZTM6",91,0)
 N TMP,$ET
"RTN","ZTM6",92,0)
 S $ETRAP="S $ECODE="""" Q ZTPREV"
"RTN","ZTM6",93,0)
 S %LOG=$G(%LOG,"VISTA$METRIC")
"RTN","ZTM6",94,0)
 I $L($G(%COM)) S TMP=$ZF(-1,%COM)
"RTN","ZTM6",95,0)
 Q $ZF("TRNLNM",%LOG)
"RTN","ZTM6",96,0)
 ;
"RTN","ZTM6",97,0)
RNDRBN() ;Round Robin
"RTN","ZTM6",98,0)
 L +^%ZTSCH("RNDRBN"):1
"RTN","ZTM6",99,0)
 N R S R=$G(^%ZTSCH("RNDRBN"))+2,^%ZTSCH("RNDRBN")=(R#512)
"RTN","ZTM6",100,0)
 L -^%ZTSCH("RNDRBN")
"RTN","ZTM6",101,0)
 Q
"RTN","ZTMB")
0^2^B25235985^B18416099
"RTN","ZTMB",1,0)
ZTMB ;SEA/RDS-Taskman: Manager, Boot/ Option, ZTMRESTART ;12/21/2004  14:37
"RTN","ZTMB",2,0)
 ;;8.0;KERNEL;**275,355**;Jul 10, 1995;Build 9
"RTN","ZTMB",3,0)
 ;
"RTN","ZTMB",4,0)
 ;NOTE:  On DataTree systems:
"RTN","ZTMB",5,0)
 ;For automatic startup of TaskMan at boot, save as %ustart in SYS.
"RTN","ZTMB",6,0)
 ;In %ustart, remove ';' from the next two lines:
"RTN","ZTMB",7,0)
 ;I $P($ZVER,"/",2)>4.0,$P($ZVER,"/",2)<4.3 VIEW 1:296:$C(2) ;increase name table allocation
"RTN","ZTMB",8,0)
 ;I  ZZSWITCH 256 ;display current namespace
"RTN","ZTMB",9,0)
 ;
"RTN","ZTMB",10,0)
START ;Start Taskmanager
"RTN","ZTMB",11,0)
 N %,X,Z,ZTOS,ZTMB,ZTUCI,ZTMODE,ZTPAIR,ZTVOL,ZTNODE,ZTMULT
"RTN","ZTMB",12,0)
 D INIT S ZTMB="START"
"RTN","ZTMB",13,0)
 I ZTOS["OpenM" G CACHE
"RTN","ZTMB",14,0)
 I ZTOS["VAX DSM" G VXD
"RTN","ZTMB",15,0)
 I ZTOS["GT.M" J START^%ZTM0 Q
"RTN","ZTMB",16,0)
 I ZTOS["DTM" G DTM
"RTN","ZTMB",17,0)
 I $L($T(START^%ZTM0)) J START^%ZTM0 Q
"RTN","ZTMB",18,0)
 W !,"Taskman NOT Started"
"RTN","ZTMB",19,0)
 Q
"RTN","ZTMB",20,0)
VXD S %=($ZC(%GETJPI,$J,"CURPRIV")["SHARE") I % W !,"Don't start TaskMan with the SHARE privilege" Q
"RTN","ZTMB",21,0)
 S Z=0,%=$O(^%ZIS(14.7,"B",ZTPAIR,0)),ZTMODE=$P($G(^%ZIS(14.7,+%,0)),U,10)
"RTN","ZTMB",22,0)
VXD2 I Z,$$EC^%ZOSV["access not authorized"!($$EC^%ZOSV["no privilege") W !!,"You lack the system privilege to start TaskMan." H 2 Q
"RTN","ZTMB",23,0)
 I Z,$$EC^%ZOSV'["duplicate name" W !!,"The following error has prevented TaskMan from starting:",!,$$EC^%ZOSV H 2 Q
"RTN","ZTMB",24,0)
 S X="VXD2",@^%ZOSF("TRAP"),Z=Z+1
"RTN","ZTMB",25,0)
 I ZTMODE="" S %=ZTMB_"^%ZTM0:(OPTION=""/UCI=""_ZTUCI,NAME=""TaskMan ""_$E(^%ZOSF(""VOL""),1,3)_"" ""_Z)" J @% Q
"RTN","ZTMB",26,0)
 ;Remove the '/NOLOG' if you want a log file for trouble shooting
"RTN","ZTMB",27,0)
 I $L(ZTMODE) S %SPAWN="SUBMIT/NOPRINT/NOLOG/USER=TASKMAN/QUEUE=TM$"_ZTNODE_" DHCP$TASKMAN:ZTMWDCL/PARAM=("_ZTMODE_","_(ZTMB["RE")_")" D ^%SPAWN
"RTN","ZTMB",28,0)
 Q
"RTN","ZTMB",29,0)
 ;
"RTN","ZTMB",30,0)
CACHE ;Cache or OpenM
"RTN","ZTMB",31,0)
 I $ZV'["VMS" J START^%ZTM0:ZTUCI Q  ;Non-VMS start
"RTN","ZTMB",32,0)
 ;For Cache/VMS
"RTN","ZTMB",33,0)
 S %=($ZF("GETJPI",$J,"PROCPRIV")["SHARE") I % W !,"Don't start TaskMan with the SHARE privilege" Q
"RTN","ZTMB",34,0)
 S Z=0,%=$O(^%ZIS(14.7,"B",ZTPAIR,0)),ZTMODE=$P($G(^%ZIS(14.7,+%,0)),U,10)
"RTN","ZTMB",35,0)
 I '$L(ZTMODE) J START^%ZTM0:ZTUCI Q  ;Non-DCL start
"RTN","ZTMB",36,0)
 I $L(ZTMODE) D
"RTN","ZTMB",37,0)
 . N CONF S CONF=$P(ZTPAIR,":",2)
"RTN","ZTMB",38,0)
 . ;Remove the '/NOLOG' if you want a log file for trouble shooting
"RTN","ZTMB",39,0)
 . S %SPAWN="SUBMIT/NOPRINT/NOLOG/USER=TASKMAN/QUEUE=TM$"_ZTNODE_" DHCP$TASKMAN:ZTM2WDCL.COM/PARAM=("_CONF_","_ZTUCI_",0)"
"RTN","ZTMB",40,0)
 . S %=$ZF(-1,%SPAWN)
"RTN","ZTMB",41,0)
 Q
"RTN","ZTMB",42,0)
 ;
"RTN","ZTMB",43,0)
DTM ;For DTM only
"RTN","ZTMB",44,0)
 N DEV,NULLDEV
"RTN","ZTMB",45,0)
 I ZTMB="START" D NULLDEV F DEV=10:1:19 O DEV:("W":NULLDEV):0 C DEV
"RTN","ZTMB",46,0)
 S Z=0
"RTN","ZTMB",47,0)
DTM2 S X="DTM2",@^%ZOSF("TRAP"),Z=Z+1,%=ZTMB_"^%ZTM0:(NSPACE="""_ZTUCI_""":STRSTK=8000:LVMEM=12000:NAME=""TaskMan "_$E(^%ZOSF("VOL"),1,3)_" "_Z_""")" J @% Q
"RTN","ZTMB",48,0)
 ;
"RTN","ZTMB",49,0)
RESTART ;Restart Taskmanager
"RTN","ZTMB",50,0)
 N %,%ZTI,X,Z,ZTOS,ZTMB,ZTUCI,ZTMODE,ZTPAIR,ZTVOL,ZTNODE,ZTMULT
"RTN","ZTMB",51,0)
 D INIT
"RTN","ZTMB",52,0)
 I $D(^%ZOSF("SIGNOFF")) X ^("SIGNOFF") I  D  Q
"RTN","ZTMB",53,0)
 . W $C(7),!,"NOTE THAT THE SYSTEM IS IN A 'SIGNOFF' STATE,",!?4,"WHICH PROBABLY EXPLAINS WHY TASKS ARE NOT RUNNING!!",!
"RTN","ZTMB",54,0)
 S ZTMULT=0
"RTN","ZTMB",55,0)
 I $S($D(^%ZTSCH("RUN"))[0:0,^("RUN")-$H:0,1:$P($H,",",2)-150'>$P(^("RUN"),",",2)) W !,"TASKMAN IS ALREADY RUNNING" S ZTMULT=1
"RTN","ZTMB",56,0)
 I ZTOS["VAX DSM" I $ZC(%GETJPI,$J,"CURPRIV")["SHARE" D  Q
"RTN","ZTMB",57,0)
 . W !,"Don't start TaskMan with the SHARE privilege" Q
"RTN","ZTMB",58,0)
 I ZTOS["OpenM",$ZV["VMS" I $ZF("GETJPI",$J,"PROCPRIV")["SHARE" D  Q
"RTN","ZTMB",59,0)
 . W !,"Don't start TaskMan with the SHARE privilege" Q
"RTN","ZTMB",60,0)
 F %ZTI=0:0 D  Q:"YESyes^NOno"[%Y
"RTN","ZTMB",61,0)
 . W !,"ARE YOU SURE YOU WANT TO RESTART ",$S(ZTMULT:"ANOTHER ",1:""),"TASKMAN? NO//"
"RTN","ZTMB",62,0)
 . R %Y:$S($D(DTIME)#2:DTIME,1:60) S:'$T %Y="^" Q:"YESyes^NOno"[%Y
"RTN","ZTMB",63,0)
 . W:'$T "*TIMEOUT*" W:%Y'["?" *7 D HELP1:%Y'["??",HELP2:%Y["??"
"RTN","ZTMB",64,0)
 I %Y=""!("YESyes"'[%Y) W "  (NO)",!,*7,"<NO ACTION TAKEN>",! Q
"RTN","ZTMB",65,0)
 W "  (YES)",!,"Restarting..."
"RTN","ZTMB",66,0)
 S ZTMB="RESTART"
"RTN","ZTMB",67,0)
 I ZTOS["OpenM" D CACHE,DONE Q
"RTN","ZTMB",68,0)
 I ZTOS["DTM" G DTM
"RTN","ZTMB",69,0)
 I ZTOS["GT.M" J RESTART^%ZTM0 D DONE Q
"RTN","ZTMB",70,0)
 I ZTOS'["VAX DSM" J RESTART^%ZTM0[ZTUCI] D DONE Q
"RTN","ZTMB",71,0)
 I ZTOS["VAX DSM" G VXD
"RTN","ZTMB",72,0)
 W !!,$C(7),"Taskman NOT Restared",!
"RTN","ZTMB",73,0)
 Q
"RTN","ZTMB",74,0)
INIT S U="^",ZTOS=^%ZOSF("OS"),ZTUCI=$P(^%ZOSF("MGR"),",")
"RTN","ZTMB",75,0)
 D GETENV^%ZOSV S ZTVOL=$P(Y,U,2),ZTNODE=$P(Y,U,3),ZTPAIR=$P(Y,U,4)
"RTN","ZTMB",76,0)
 Q
"RTN","ZTMB",77,0)
 ;
"RTN","ZTMB",78,0)
NULLDEV ;SELECT NULL DEVICE (DTM OS Dependent)
"RTN","ZTMB",79,0)
 N %HW
"RTN","ZTMB",80,0)
 D HWTYPE S NULLDEV="NUL" I %HW'="PC" S NULLDEV="[NUL]"
"RTN","ZTMB",81,0)
 Q
"RTN","ZTMB",82,0)
 ;
"RTN","ZTMB",83,0)
HWTYPE ;HARDWARE TYPE(DTM OS Dependent)
"RTN","ZTMB",84,0)
 K %HW S %H=$S($P($ZVER,"/",2)<4:$V(4,3,-1),1:$V(1,3,-1)) ;get hardware type number
"RTN","ZTMB",85,0)
 S %HW=$S(%H<10:"WS",%H<20:"MF",%H<64:"?",%H<129:"PC",1:"?")
"RTN","ZTMB",86,0)
 Q
"RTN","ZTMB",87,0)
 ;
"RTN","ZTMB",88,0)
HELP1 ;RESTART--improved help for the confirmation prompt.
"RTN","ZTMB",89,0)
 W !!?5,"Answer must be YES or NO."
"RTN","ZTMB",90,0)
 W !?5,"Answer YES to restart ",$S(ZTMULT:"another ",1:""),"TaskMan.",!
"RTN","ZTMB",91,0)
 Q
"RTN","ZTMB",92,0)
 ;
"RTN","ZTMB",93,0)
HELP2 ;RESTART--??-help for confirmation prompt
"RTN","ZTMB",94,0)
 W !!?5,"TaskMan must be running in each library uci on the system for tasks to run."
"RTN","ZTMB",95,0)
 W !?5,"One TaskMan per library uci should be enough for all but the busiest sites."
"RTN","ZTMB",96,0)
 W !?5,"The System Status option and the Monitor TaskMan option can help determine"
"RTN","ZTMB",97,0)
 W !?5,"whether a TaskMan is running on this volume set."
"RTN","ZTMB",98,0)
 W !!?5,"If you are still uncertain how to respond, answer NO and consult your"
"RTN","ZTMB",99,0)
 W !?5,"documentation or your support ISC.",!
"RTN","ZTMB",100,0)
 Q
"RTN","ZTMB",101,0)
 ;
"RTN","ZTMB",102,0)
DONE ;RESTART--feedback after restarting TaskMan
"RTN","ZTMB",103,0)
 W "TaskMan restarted!",! Q
"RTN","ZTMB",104,0)
 ;
"RTN","ZTMDCL")
0^3^B1335612^B616863
"RTN","ZTMDCL",1,0)
ZTMDCL ;SFISC/RWF - Run Taskman with a DCL context. ;09/11/2006
"RTN","ZTMDCL",2,0)
 ;;8.0;KERNEL;**24,355**;Jul 10, 1995;Build 9
"RTN","ZTMDCL",3,0)
 ;This assumes that TM was started with a DCL context.
"RTN","ZTMDCL",4,0)
 N FILE,QUEUE,ENV,%SPAWN,%
"RTN","ZTMDCL",5,0)
 S FILE=$S(%ZTOS["OpenM":"ZTMS2WDCL.COM",%ZTOS["DSM":"ZTMSWDCL.COM",1:"")
"RTN","ZTMDCL",6,0)
 S QUEUE=$S($L(ZTNODE):ZTNODE,1:%ZTNODE)
"RTN","ZTMDCL",7,0)
 S ENV=%ZTPFLG("DCL")
"RTN","ZTMDCL",8,0)
 I %ZTOS["OpenM" D
"RTN","ZTMDCL",9,0)
 . S ENV=$S($L(ZTNODE):ZTNODE,1:$P(%ZTPAIR,":",2))
"RTN","ZTMDCL",10,0)
 . S QUEUE=$G(%ZTPFLG("Q",ENV))
"RTN","ZTMDCL",11,0)
 I ENV="" D ^%ZTER Q  ;Something is wrong
"RTN","ZTMDCL",12,0)
 ;Use the next line if you want/need log files
"RTN","ZTMDCL",13,0)
 ;S %SPAWN="SUBMIT/NOPRINT/KEEP/QUEUE=TM$"_QUEUE_" DHCP$TASKMAN:"_FILE_"/PARAM=("_ENV_","_ZTUCI_","_ZTDVOL_")"
"RTN","ZTMDCL",14,0)
 ;Use the next line if you don't need log files.
"RTN","ZTMDCL",15,0)
 S %SPAWN="SUBMIT/NOPRINT/NOLOG/QUEUE=TM$"_QUEUE_" DHCP$TASKMAN:"_FILE_"/PARAM=("_ENV_","_ZTUCI_","_ZTDVOL_")"
"RTN","ZTMDCL",16,0)
 I %ZTOS["VAX DSM" S %=$ZC(%SPAWN,%SPAWN) I 1
"RTN","ZTMDCL",17,0)
 I %ZTOS["OpenM" S %=$ZF(-1,%SPAWN) I 1
"RTN","ZTMDCL",18,0)
 Q
"RTN","ZTMDCL",19,0)
 ;
"RTN","ZTMGRSET")
0^8^B46344405^B48565811
"RTN","ZTMGRSET",1,0)
ZTMGRSET ;SF/RWF,PUG/TOAD - SET UP THE MGR ACCOUNT FOR THE SYSTEM ;02/22/2006
"RTN","ZTMGRSET",2,0)
 ;;8.0;KERNEL;**34,36,69,94,121,127,136,191,275,355**;JUL 10, 1995;Build 9
"RTN","ZTMGRSET",3,0)
 ;
"RTN","ZTMGRSET",4,0)
 N %D,%S,I,OSMAX,U,X,X1,X2,Y,Z1,Z2,ZTOS,ZTMODE,SCR
"RTN","ZTMGRSET",5,0)
 S ZTMODE=0
"RTN","ZTMGRSET",6,0)
A W !!,"ZTMGRSET Version ",$P($T(+2),";",3)," Patch level ",$P($T(+2),";",5)
"RTN","ZTMGRSET",7,0)
 W !,"HELLO! I exist to assist you in correctly initializing the current account."
"RTN","ZTMGRSET",8,0)
 I $D(^%ZOSF("UCI")) X ^%ZOSF("UCI") D  G A:"YNyn"'[$E(X) Q:"Nn"[$E(X)
"RTN","ZTMGRSET",9,0)
 . W $C(7),!!,"This is namespace or uci ",Y,".",!
"RTN","ZTMGRSET",10,0)
 . R "Should I continue? N//",X:120
"RTN","ZTMGRSET",11,0)
 . Q
"RTN","ZTMGRSET",12,0)
 S ZTOS=$$OS() I ZTOS'>0 W !,"OS type not selected. Exiting ZTMGRSET." Q
"RTN","ZTMGRSET",13,0)
 I ZTMODE D  I (PCNM<1)!(PCNM>999) W !,"Need a Patch number to load." Q
"RTN","ZTMGRSET",14,0)
 . R !!,"Patch number to load: ",PCNM:120 Q:(PCNM<1)!(PCNM>999)
"RTN","ZTMGRSET",15,0)
 . S SCR="I $P($T(+2^@X),"";"",5)?.E1P1"_$C(34)_PCNM_$C(34)_"1P.E"
"RTN","ZTMGRSET",16,0)
 ;
"RTN","ZTMGRSET",17,0)
 K ^%ZOSF("MASTER"),^("SIGNOFF") ;Remove old nodes.
"RTN","ZTMGRSET",18,0)
 ;
"RTN","ZTMGRSET",19,0)
DOIT W !!,"I will now rename a group of routines specific to your operating system."
"RTN","ZTMGRSET",20,0)
 D @ZTOS,ALL,GLOBALS:'ZTMODE W !,"ALL DONE"
"RTN","ZTMGRSET",21,0)
 Q
"RTN","ZTMGRSET",22,0)
 ;========================================
"RTN","ZTMGRSET",23,0)
RELOAD ;Reload any patched routines
"RTN","ZTMGRSET",24,0)
 N %D,%S,I,OSMAX,U,X,X1,X2,Y,Z1,Z2,ZTOS,ZTMODE,SCR
"RTN","ZTMGRSET",25,0)
 S ZTMODE=1 G A
"RTN","ZTMGRSET",26,0)
 Q
"RTN","ZTMGRSET",27,0)
 ;
"RTN","ZTMGRSET",28,0)
OS() ;Select the OS
"RTN","ZTMGRSET",29,0)
 N Y,X1,X
"RTN","ZTMGRSET",30,0)
 S U="^",SCR="I 1" F I=1:1:20 S X=$T(@I) Q:X=""  S OSMAX=I
"RTN","ZTMGRSET",31,0)
B S Y=0,ZTOS=0 I $D(^%ZOSF("OS")) D
"RTN","ZTMGRSET",32,0)
 . S X1=$P(^%ZOSF("OS"),U),ZTOS=$$OSNUM W !,"I think you are using ",X1
"RTN","ZTMGRSET",33,0)
 W !,"Which MUMPS system should I install?",!
"RTN","ZTMGRSET",34,0)
 F I=1:1:OSMAX W !,I," = ",$P($T(@I),";",3)
"RTN","ZTMGRSET",35,0)
 W !,"System: " W:ZTOS ZTOS,"//"
"RTN","ZTMGRSET",36,0)
 R X:300 S:X="" X=ZTOS
"RTN","ZTMGRSET",37,0)
 I X<1!(X>OSMAX) W !,"NOT A VALID CHOICE" Q:X[U 0 G B
"RTN","ZTMGRSET",38,0)
 Q X
"RTN","ZTMGRSET",39,0)
 ;
"RTN","ZTMGRSET",40,0)
OSNUM() ;Return the OS number
"RTN","ZTMGRSET",41,0)
 N I,X1,X2,Y S Y=0,X1=$P($G(^%ZOSF("OS")),"^")
"RTN","ZTMGRSET",42,0)
 F I=1:1 S X2=$T(@I) Q:X2=""  I X2[X1 S Y=I Q
"RTN","ZTMGRSET",43,0)
 Q Y
"RTN","ZTMGRSET",44,0)
 ;
"RTN","ZTMGRSET",45,0)
ALL W !!,"Now to load routines common to all systems."
"RTN","ZTMGRSET",46,0)
 D TM,ETRAP,DEV,OTHER,FM
"RTN","ZTMGRSET",47,0)
 I ZTOS=7!(ZTOS=8) D
"RTN","ZTMGRSET",48,0)
 . S ^%ZE="D ^ZE"
"RTN","ZTMGRSET",49,0)
 E  D  ;With ZLoad, ZSave, ZInsert
"RTN","ZTMGRSET",50,0)
 . W !,"Installing ^%Z editor"
"RTN","ZTMGRSET",51,0)
 . D ^ZTEDIT
"RTN","ZTMGRSET",52,0)
 I 'ZTMODE W !,"Setting ^%ZIS('C')" K ^%ZIS("C") S ^%ZIS("C")="G ^%ZISC"
"RTN","ZTMGRSET",53,0)
 Q
"RTN","ZTMGRSET",54,0)
 ;
"RTN","ZTMGRSET",55,0)
TM ;Taskman
"RTN","ZTMGRSET",56,0)
 S %S="ZTLOAD^ZTLOAD1^ZTLOAD2^ZTLOAD3^ZTLOAD4^ZTLOAD5^ZTLOAD6^ZTLOAD7"
"RTN","ZTMGRSET",57,0)
 S %D="%ZTLOAD^%ZTLOAD1^%ZTLOAD2^%ZTLOAD3^%ZTLOAD4^%ZTLOAD5^%ZTLOAD6^%ZTLOAD7"
"RTN","ZTMGRSET",58,0)
 D MOVE
"RTN","ZTMGRSET",59,0)
 S %S="ZTM^ZTM0^ZTM1^ZTM2^ZTM3^ZTM4^ZTM5^ZTM6"
"RTN","ZTMGRSET",60,0)
 S %D="%ZTM^%ZTM0^%ZTM1^%ZTM2^%ZTM3^%ZTM4^%ZTM5^%ZTM6"
"RTN","ZTMGRSET",61,0)
 D MOVE
"RTN","ZTMGRSET",62,0)
 S %S="ZTMS^ZTMS0^ZTMS1^ZTMS2^ZTMS3^ZTMS4^ZTMS5^ZTMS7^ZTMSH"
"RTN","ZTMGRSET",63,0)
 ;I ZTOS=7!(ZTOS=8) S $P(%S,U,1)="ZTMSGTM"
"RTN","ZTMGRSET",64,0)
 S %D="%ZTMS^%ZTMS0^%ZTMS1^%ZTMS2^%ZTMS3^%ZTMS4^%ZTMS5^%ZTMS7^%ZTMSH"
"RTN","ZTMGRSET",65,0)
 D MOVE
"RTN","ZTMGRSET",66,0)
 Q
"RTN","ZTMGRSET",67,0)
FM ;Rename the FileMan routines
"RTN","ZTMGRSET",68,0)
 I ZTMODE=1 Q  ;Only ask on full install
"RTN","ZTMGRSET",69,0)
 R !,"Want to rename the FileMan routines: No//",X:600 Q:"Yy"'[$E(X_"N")
"RTN","ZTMGRSET",70,0)
 S %S="DIDT^DIDTC^DIRCR",%D="%DT^%DTC^%RCR"
"RTN","ZTMGRSET",71,0)
 D MOVE
"RTN","ZTMGRSET",72,0)
 Q
"RTN","ZTMGRSET",73,0)
 ;
"RTN","ZTMGRSET",74,0)
ETRAP ;Error Trap
"RTN","ZTMGRSET",75,0)
 S %S="ZTER^ZTER1",%D="%ZTER^%ZTER1"
"RTN","ZTMGRSET",76,0)
 D MOVE
"RTN","ZTMGRSET",77,0)
 Q
"RTN","ZTMGRSET",78,0)
OTHER S %S="ZTPP^ZTP1^ZTPTCH^ZTRDEL^ZTMOVE"
"RTN","ZTMGRSET",79,0)
 S %D="%ZTPP^%ZTP1^%ZTPTCH^%ZTRDEL^%ZTMOVE"
"RTN","ZTMGRSET",80,0)
 D MOVE
"RTN","ZTMGRSET",81,0)
 Q
"RTN","ZTMGRSET",82,0)
DEV S %S="ZIS^ZIS1^ZIS2^ZIS3^ZIS5^ZIS6^ZIS7^ZISC^ZISP^ZISS^ZISS1^ZISS2^ZISTCP^ZISUTL"
"RTN","ZTMGRSET",83,0)
 S %D="%ZIS^%ZIS1^%ZIS2^%ZIS3^%ZIS5^%ZIS6^%ZIS7^%ZISC^%ZISP^%ZISS^%ZISS1^%ZISS2^%ZISTCP^%ZISUTL"
"RTN","ZTMGRSET",84,0)
 D MOVE
"RTN","ZTMGRSET",85,0)
 Q
"RTN","ZTMGRSET",86,0)
RUM ;Build the routines for Capacity Management (CM)
"RTN","ZTMGRSET",87,0)
 S %S=""
"RTN","ZTMGRSET",88,0)
 I ZTOS=1 S %S="ZOSVKRV^ZOSVKSVE^ZOSVKSVS^ZOSVKSD" ;DSM
"RTN","ZTMGRSET",89,0)
 I ZTOS=2 S %S="ZOSVKRM^ZOSVKSME^ZOSVKSMS^ZOSVKSD" ;MSM
"RTN","ZTMGRSET",90,0)
 I ZTOS=3 S %S="ZOSVKRO^ZOSVKSOE^ZOSVKSOS^ZOSVKSD" ;OpenM
"RTN","ZTMGRSET",91,0)
 I ZTOS=7!(ZTOS=8) S %S="ZOSVKRG^ZOSVKSGE^ZOSVKSGS^ZOSVKSD" ;GT.M
"RTN","ZTMGRSET",92,0)
 S %D="%ZOSVKR^%ZOSVKSE^%ZOSVKSS^%ZOSVKSD"
"RTN","ZTMGRSET",93,0)
 D MOVE
"RTN","ZTMGRSET",94,0)
 Q
"RTN","ZTMGRSET",95,0)
ZOSF(X) ;
"RTN","ZTMGRSET",96,0)
 X SCR I $T W ! D @(U_X) W !
"RTN","ZTMGRSET",97,0)
 Q
"RTN","ZTMGRSET",98,0)
1 ;;VAX DSM(V6), VAX DSM(V7)
"RTN","ZTMGRSET",99,0)
 S %S="ZOSVVXD^ZTBKCVXD^ZIS4VXD^ZISFVXD^ZISHVXD^XUCIVXD^ZISETVXD"
"RTN","ZTMGRSET",100,0)
 D DES,MOVE
"RTN","ZTMGRSET",101,0)
 S %S="ZOSV2VXD^ZTMDCL",%D="%ZOSV2^%ZTMDCL"
"RTN","ZTMGRSET",102,0)
 D MOVE,RUM,ZOSF("ZOSFVXD")
"RTN","ZTMGRSET",103,0)
 Q
"RTN","ZTMGRSET",104,0)
2 ;;MSM-PC/PLUS, MSM for NT or UNIX
"RTN","ZTMGRSET",105,0)
 W !,"- Use autostart to do ZTMB don't resave as STUSER."
"RTN","ZTMGRSET",106,0)
 S %S="ZOSVMSM^ZTBKCMSM^ZIS4MSM^ZISFMSM^ZISHMSM^XUCIMSM^ZISETMSM"
"RTN","ZTMGRSET",107,0)
 D DES,MOVE
"RTN","ZTMGRSET",108,0)
 S %S="ZOSV2MSM",%D="%ZOSV2"
"RTN","ZTMGRSET",109,0)
 D MOVE,RUM,ZOSF("ZOSFMSM")
"RTN","ZTMGRSET",110,0)
 I $$VERSION^%ZOSV(1)["UNIX" S %S="ZISHMSU",%D="%ZISH" D MOVE
"RTN","ZTMGRSET",111,0)
 Q
"RTN","ZTMGRSET",112,0)
3 ;;Cache (VMS, NT, Linux), OpenM-NT
"RTN","ZTMGRSET",113,0)
 S %S="ZOSVONT^^ZIS4ONT^ZISFONT^ZISHONT^XUCIONT"
"RTN","ZTMGRSET",114,0)
 D DES,MOVE
"RTN","ZTMGRSET",115,0)
 S %S="ZISTCPS^ZTMDCL",%D="%ZISTCPS^%ZTMDCL"
"RTN","ZTMGRSET",116,0)
 D MOVE,RUM,ZOSF("ZOSFONT")
"RTN","ZTMGRSET",117,0)
 Q
"RTN","ZTMGRSET",118,0)
4 ;;Datatree, DTM-PC, DT-MAX
"RTN","ZTMGRSET",119,0)
 S %S="ZOSVDTM^ZTBKCDTM^ZIS4DTM^ZISFDTM^ZISHDTM^XUCIDTM^ZISETDTM"
"RTN","ZTMGRSET",120,0)
 D DES,MOVE
"RTN","ZTMGRSET",121,0)
 S %S="ZOSV1DTM^ZTMB",%D="%ZOSV1^%ustart"
"RTN","ZTMGRSET",122,0)
 D MOVE,ZOSF("ZOSFDTM")
"RTN","ZTMGRSET",123,0)
 Q
"RTN","ZTMGRSET",124,0)
5 ;;
"RTN","ZTMGRSET",125,0)
6 ;;
"RTN","ZTMGRSET",126,0)
7 ;;GT.M (VMS)
"RTN","ZTMGRSET",127,0)
 S %ZE=".M" D init^%RSEL
"RTN","ZTMGRSET",128,0)
 S %S="ZOSVGTM^^ZIS4GTM^ZISFGTM^ZISHGTM^XUCIGTM^ZISETGTM"
"RTN","ZTMGRSET",129,0)
 D DES,MOVE
"RTN","ZTMGRSET",130,0)
 S %S="ZOSV2GTM^ZISTCPS^ZTMDCL",%D="%ZOSV2^%ZISTCPS^ZTMDCL"
"RTN","ZTMGRSET",131,0)
 D MOVE,ZOSF("ZOSFGTM")
"RTN","ZTMGRSET",132,0)
 Q
"RTN","ZTMGRSET",133,0)
8 ;;GT.M (Unix)
"RTN","ZTMGRSET",134,0)
 S %ZE=".m" D init^%RSEL
"RTN","ZTMGRSET",135,0)
 S %S="ZOSVGUX^^ZIS4GTM^ZISFGTM^ZISHGTM^XUCIGTM^ZISETGUX"
"RTN","ZTMGRSET",136,0)
 D DES,MOVE
"RTN","ZTMGRSET",137,0)
 S %S="ZOSV2GTM^ZISTCPS",%D="%ZOSV2^%ZISTCPS"
"RTN","ZTMGRSET",138,0)
 D MOVE,ZOSF("ZOSFGUX")
"RTN","ZTMGRSET",139,0)
 Q
"RTN","ZTMGRSET",140,0)
10 ;;NOT SUPPORTED
"RTN","ZTMGRSET",141,0)
 Q
"RTN","ZTMGRSET",142,0)
MOVE ; rename % routines
"RTN","ZTMGRSET",143,0)
 N %,X,Y
"RTN","ZTMGRSET",144,0)
 F %=1:1:$L(%D,"^") D
"RTN","ZTMGRSET",145,0)
 . S X=$P(%S,U,%) ; from
"RTN","ZTMGRSET",146,0)
 . S Y=$P(%D,U,%) ; to
"RTN","ZTMGRSET",147,0)
 . W !,"Routine: ",X
"RTN","ZTMGRSET",148,0)
 . Q:X=""  Q:Y=""  I $T(^@X)=""  W ?20,"  Missing" Q
"RTN","ZTMGRSET",149,0)
 . X SCR Q:'$T
"RTN","ZTMGRSET",150,0)
 . W ?20,"  Loaded, "
"RTN","ZTMGRSET",151,0)
 . D COPY(X,Y)
"RTN","ZTMGRSET",152,0)
 . W ?20,"Saved as ",Y
"RTN","ZTMGRSET",153,0)
 Q
"RTN","ZTMGRSET",154,0)
 ;
"RTN","ZTMGRSET",155,0)
COPY(FROM,TO) ;
"RTN","ZTMGRSET",156,0)
 I ZTOS'=7,ZTOS'=8 X "ZL @FROM ZS @TO" Q
"RTN","ZTMGRSET",157,0)
 ;For GT.M below
"RTN","ZTMGRSET",158,0)
 N PATH,COPY,CMD S PATH=$$R
"RTN","ZTMGRSET",159,0)
 S FROM=PATH_FROM_".m"
"RTN","ZTMGRSET",160,0)
 S TO=PATH_$TR(TO,"%","_")_".m"
"RTN","ZTMGRSET",161,0)
 S COPY=$S(ZTOS=7:"COPY",1:"cp")
"RTN","ZTMGRSET",162,0)
 S CMD=COPY_" "_FROM_" "_TO
"RTN","ZTMGRSET",163,0)
 X "ZSYSTEM CMD"
"RTN","ZTMGRSET",164,0)
 Q
"RTN","ZTMGRSET",165,0)
 ;
"RTN","ZTMGRSET",166,0)
R() ; routine directory for GT.M
"RTN","ZTMGRSET",167,0)
 Q d(1) ;
"RTN","ZTMGRSET",168,0)
 I ZTOS=7 Q $P($ZRO,",")
"RTN","ZTMGRSET",169,0)
 I ZTOS=8 Q $P($S($ZRO["(":$P($P($ZRO,"(",2),")"),1:$ZRO)," ")_"/"
"RTN","ZTMGRSET",170,0)
 E  Q ""
"RTN","ZTMGRSET",171,0)
 ;
"RTN","ZTMGRSET",172,0)
DES S %D="%ZOSV^%ZTBKC1^%ZIS4^%ZISF^%ZISH^%XUCI^ZISETUP" Q
"RTN","ZTMGRSET",173,0)
 ;
"RTN","ZTMGRSET",174,0)
GLOBALS ;Set node zero of file #3.05 & #3.07
"RTN","ZTMGRSET",175,0)
 W !!,"Now, I will check your % globals."
"RTN","ZTMGRSET",176,0)
 W ".........."
"RTN","ZTMGRSET",177,0)
 F %="^%ZIS","^%ZISL","^%ZTER","^%ZUA" S:'$D(@%) @%=""
"RTN","ZTMGRSET",178,0)
 S:$D(^%ZTSK(0))[0 ^%ZTSK(-1)=100,^%ZTSCH=""
"RTN","ZTMGRSET",179,0)
 S Z1=$G(^%ZTSK(-1),-1),Z2=$G(^%ZTSK(0))
"RTN","ZTMGRSET",180,0)
 I Z1'=$P(Z2,"^",3) S:Z1'>0 ^%ZTSK(-1)=+Z2 S ^%ZTSK(0)="TASK'S^14.4^"_^%ZTSK(-1)
"RTN","ZTMGRSET",181,0)
 S:$D(^%ZUA(3.05,0))[0 ^%ZUA(3.05,0)="FAILED ACCESS ATTEMPTS LOG^3.05^^"
"RTN","ZTMGRSET",182,0)
 S:$D(^%ZUA(3.07,0))[0 ^%ZUA(3.07,0)="PROGRAMMER MODE LOG^3.07^^"
"RTN","ZTMGRSET",183,0)
 Q
"RTN","ZTMGRSET",184,0)
NAME ;Setup the static names for this system
"RTN","ZTMGRSET",185,0)
MGR W !,"NAME OF MANAGER'S UCI,VOLUME SET: "_^%ZOSF("MGR")_"// " R X:$S($G(DTIME):DTIME,1:9999) I X]"" X ^("UCICHECK") G MGR:0[Y S ^%ZOSF("MGR")=X
"RTN","ZTMGRSET",186,0)
PROD W !,"PRODUCTION (SIGN-ON) UCI,VOLUME SET: "_^%ZOSF("PROD")_"// " R X:$S($G(DTIME):DTIME,1:9999) I X]"" X ^("UCICHECK") G PROD:0[Y S ^%ZOSF("PROD")=X
"RTN","ZTMGRSET",187,0)
VOL W !,"NAME OF VOLUME SET: "_^%ZOSF("VOL")_"//" R X:$S($G(DTIME):DTIME,1:9999) I X]"" S:X?3U ^%ZOSF("VOL")=X I X'?3U W "MUST BE 3 Upper case." G VOL
"RTN","ZTMGRSET",188,0)
 W ! Q
"RTN","ZTMKU")
0^9^B20082059^B19402170
"RTN","ZTMKU",1,0)
ZTMKU ;SEA/RDS-Taskman: Option, ZTMWAIT/RUN/STOP ;11/04/99  15:05
"RTN","ZTMKU",2,0)
 ;;8.0;KERNEL;**118,127,275,355**;Jul 10, 1995;Build 9
"RTN","ZTMKU",3,0)
 ;
"RTN","ZTMKU",4,0)
 Q
"RTN","ZTMKU",5,0)
SSUB(NODE) ;Stop sub-managers
"RTN","ZTMKU",6,0)
 D SS(1,"SUB",NODE) Q
"RTN","ZTMKU",7,0)
SMAN(NODE) ;stop managers
"RTN","ZTMKU",8,0)
 D SS(1,"MGR",NODE) Q
"RTN","ZTMKU",9,0)
 ;
"RTN","ZTMKU",10,0)
SS(MD,GR,NODE) ;Set/clear STOP nodes.
"RTN","ZTMKU",11,0)
 S GR=$G(GR,"MGR") S:"MGR_SUB_"'[GR GR="MGR"
"RTN","ZTMKU",12,0)
 I MD=1 S ^%ZTSCH("STOP",GR,NODE)=$H D WS(0,GR)
"RTN","ZTMKU",13,0)
 I MD=0 K ^%ZTSCH("STOP",GR,NODE)
"RTN","ZTMKU",14,0)
 Q
"RTN","ZTMKU",15,0)
 ;
"RTN","ZTMKU",16,0)
WS(MD,GR) ;Set/Clear Wait state
"RTN","ZTMKU",17,0)
 S GR=$G(GR,"MGR") S:"MGR_SUB_"'[GR GR="MGR"
"RTN","ZTMKU",18,0)
 I MD=1 S ^%ZTSCH("WAIT",GR)=$H ;set wait state
"RTN","ZTMKU",19,0)
 I MD=0 K ^%ZTSCH("WAIT",GR) ;Clear wait
"RTN","ZTMKU",20,0)
 Q
"RTN","ZTMKU",21,0)
 ;
"RTN","ZTMKU",22,0)
GROUP(CALL) ;Do CALL for each node, use NODE as the parameter
"RTN","ZTMKU",23,0)
 N J,ND,NODE
"RTN","ZTMKU",24,0)
 ;Get the Managers
"RTN","ZTMKU",25,0)
 F J=0:0 S J=$O(^%ZTSCH("STATUS",J)) Q:J=""  S ND=$G(^(J)),NODE=$P(ND,"^",3) D @CALL
"RTN","ZTMKU",26,0)
 ;Get any remote Sub-Managers
"RTN","ZTMKU",27,0)
 S NODE="" F  S NODE=$O(^%ZTSCH("SUB",NODE)) Q:NODE=""  D @CALL
"RTN","ZTMKU",28,0)
 Q
"RTN","ZTMKU",29,0)
 ;
"RTN","ZTMKU",30,0)
OPT(MD) ;Disable/Enable option prosessing
"RTN","ZTMKU",31,0)
 I MD=1 S ^%ZTSCH("NO-OPTION")=""
"RTN","ZTMKU",32,0)
 I MD=0 K ^%ZTSCH("NO-OPTION")
"RTN","ZTMKU",33,0)
 Q
"RTN","ZTMKU",34,0)
 ;
"RTN","ZTMKU",35,0)
RUN ;Remove Task Managers From WAIT State
"RTN","ZTMKU",36,0)
 D WS(0,"MGR"),WS(0,"SUB") K ^%ZTSCH("STOP") W !,"Done!",!
"RTN","ZTMKU",37,0)
 Q
"RTN","ZTMKU",38,0)
 ;
"RTN","ZTMKU",39,0)
UPDATE ;Have Managers Do an parameter Update
"RTN","ZTMKU",40,0)
 K ^%ZTSCH("UPDATE") W !,"Done!",!
"RTN","ZTMKU",41,0)
 Q
"RTN","ZTMKU",42,0)
 ;
"RTN","ZTMKU",43,0)
WAIT ;Put Task Managers In WAIT State
"RTN","ZTMKU",44,0)
 D WS(1,"MGR") W !,"TaskMan now in 'WAIT STATE'",$C(7)
"RTN","ZTMKU",45,0)
 D QSUB
"RTN","ZTMKU",46,0)
 Q
"RTN","ZTMKU",47,0)
 ;
"RTN","ZTMKU",48,0)
STOP ;Shut Down Task Managers
"RTN","ZTMKU",49,0)
 N ZTX,ND,J
"RTN","ZTMKU",50,0)
 F  R !!,"Are you sure you want to stop TaskMan? NO// ",ZTX:$S($D(DTIME)#2:DTIME,1:60) Q:'$T!("^YESyesNOno"[ZTX)  W:ZTX'["?" $C(7) W !,"Answer YES to shut down all Task Managers on current the volume set."
"RTN","ZTMKU",51,0)
 I "^NOno"[ZTX W !,"TaskMan NOT shut down." Q
"RTN","ZTMKU",52,0)
 W !,"Shutting down TaskMan." D GROUP("SMAN(NODE)")
"RTN","ZTMKU",53,0)
 ;. F J=0:0 S J=$O(^%ZTSCH("STATUS",J)) Q:J=""  S ND=$G(^(J)) D SMAN($P(ND,U,3))
"RTN","ZTMKU",54,0)
 ;. Q
"RTN","ZTMKU",55,0)
 D QSUB
"RTN","ZTMKU",56,0)
 Q
"RTN","ZTMKU",57,0)
 ;
"RTN","ZTMKU",58,0)
QSUB N ZTX,ND
"RTN","ZTMKU",59,0)
 F  R !!,"Should active submanagers shut down after finishing their current tasks? NO// ",ZTX:$S($D(DTIME)#2:DTIME,1:60) Q:'$T!("^"[ZTX)!("YESyesNOno"[ZTX)  W:ZTX'["?" $C(7) W !,"Please answer YES or NO."
"RTN","ZTMKU",60,0)
 D:"YESyes"[ZTX&(ZTX]"") GROUP("SSUB(NODE)") W !,"Okay!",!
"RTN","ZTMKU",61,0)
 Q
"RTN","ZTMKU",62,0)
 ;
"RTN","ZTMKU",63,0)
QUERY ;Query Status Of A Task Manager
"RTN","ZTMKU",64,0)
 Q:$D(%ZTX)[0  Q:%ZTX=""  S %ZTY=0
"RTN","ZTMKU",65,0)
 I $D(^%ZTSCH("STATUS",%ZTX))#2 S %ZTY=^%ZTSCH("STATUS",%ZTX)
"RTN","ZTMKU",66,0)
 K %ZTX Q
"RTN","ZTMKU",67,0)
 ;
"RTN","ZTMKU",68,0)
NODES ;Return Task Manager Status Nodes
"RTN","ZTMKU",69,0)
 S %ZTX="" F %ZTY=0:0 S %ZTX=$O(^%ZTSCH("STATUS",%ZTX)) Q:%ZTX=""  S %ZTY=%ZTY+1,%ZTY(%ZTY)=%ZTX
"RTN","ZTMKU",70,0)
 K %ZTX Q
"RTN","ZTMKU",71,0)
 ;
"RTN","ZTMKU",72,0)
LIVE ;Return Whether A Task Manager Is Live
"RTN","ZTMKU",73,0)
 Q:$D(%ZTX)[0  Q:%ZTX=""  S %ZTY=0,U="^",%ZTX1=$H,%ZTX2=$P(%ZTX,U)
"RTN","ZTMKU",74,0)
 S %ZTX3=%ZTX1-%ZTX2*86400+$P(%ZTX1,",",2)-$P(%ZTX2,",",2)
"RTN","ZTMKU",75,0)
 I %ZTX3'<0 S %ZTY=$S($D(^%ZTSCH("RUN"))[0&(%ZTX'["WAIT"):0,%ZTX3<30:1,%ZTX3<120&(%ZTX["PAUSE"):1,1:0)
"RTN","ZTMKU",76,0)
 K %ZTX,%ZTX1,%ZTX2,%ZTX3 Q
"RTN","ZTMKU",77,0)
 ;
"RTN","ZTMKU",78,0)
TABLE ;Display Task Manager Table
"RTN","ZTMKU",79,0)
 W !,"NUMBER",?15,"STATUS",?25,"DESCRIPTION",?55,"LAST UPDATED",?75,"LIVE"
"RTN","ZTMKU",80,0)
 W !,"------",?15,"------",?25,"-----------",?55,"------------",?75,"----"
"RTN","ZTMKU",81,0)
 D NODES S %ZTZ=%ZTY,%ZTZ1=0,U="^",%H=$H D YMD^%DTC S DT=X
"RTN","ZTMKU",82,0)
 F %ZTI=1:1:%ZTZ S %ZTX=%ZTY(%ZTI) D QUERY I %ZTY'=0 W !,%ZTY(%ZTI),?15,$P(%ZTY,U,2),?25,$P(%ZTY,U,3),?55 S %ZTT=$P(%ZTY,U) D T S %ZTX=%ZTY D LIVE W ?75,$S(%ZTY:"YES",1:"NO") I %ZTY S %ZTZ1=%ZTZ1+1
"RTN","ZTMKU",83,0)
 W !?6,"Total:",$J(%ZTZ,3),!?6,"Live :",$J(%ZTZ1,3)
"RTN","ZTMKU",84,0)
 K %ZTI,%ZTT,%ZTY,%ZTZ Q
"RTN","ZTMKU",85,0)
 ;
"RTN","ZTMKU",86,0)
CLEAN ;Cleanup Status Node
"RTN","ZTMKU",87,0)
 K ^%ZTSCH("STATUS") W !,"Done!",! Q
"RTN","ZTMKU",88,0)
PURGE ;Purge the TASK list of running tasks.
"RTN","ZTMKU",89,0)
 N TSK S TSK=0
"RTN","ZTMKU",90,0)
 F  S TSK=$O(^%ZTSCH("TASK",TSK)) Q:TSK'>0  I '$D(^%ZTSCH("TASK",TSK,"P")) K ^%ZTSCH("TASK",TSK)
"RTN","ZTMKU",91,0)
 W !,"Done!",! Q
"RTN","ZTMKU",92,0)
 ;
"RTN","ZTMKU",93,0)
ZTM ;Return Number Of Live Task Managers
"RTN","ZTMKU",94,0)
 D NODES S %ZTZ=%ZTY,%ZTZ1=0 F %ZTI=1:1:%ZTZ S %ZTX=%ZTY(%ZTI) D QUERY I %ZTY'=0 S %ZTX=%ZTY D LIVE I %ZTY S %ZTZ1=%ZTZ1+1
"RTN","ZTMKU",95,0)
 S %ZTY=%ZTZ1 K %ZTI,%ZTZ,%ZTZ1 Q
"RTN","ZTMKU",96,0)
 ;
"RTN","ZTMKU",97,0)
T ;Print Informal-format Conversion Of $H-format Date ; Input: %ZTT, DT.
"RTN","ZTMKU",98,0)
 S %H=%ZTT D 7^%DTC W $S(DT=X:"TODAY",DT+1=X:"TOMORROW",1:$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3))_" AT " S X=$P(%ZTT,",",2)\60,%H=X\60 W $E(%H+100,2,3)_":"_$E(X#60+100,2,3)
"RTN","ZTMKU",99,0)
 K %,%D,%H,%M,%Y,X Q  ; Output: %ZTT, DT.
"RTN","ZTMKU",100,0)
 ;
"RTN","ZTMON")
0^6^B9427081^B9314594
"RTN","ZTMON",1,0)
ZTMON ;SEA/RDS-TaskMan: Option, ZTMON, Part 1 (Main Loop) ;05/12/2005  13:21
"RTN","ZTMON",2,0)
 ;;8.0;KERNEL;**118,127,136,355**;Jul 10, 1995;Build 9
"RTN","ZTMON",3,0)
 ;
"RTN","ZTMON",4,0)
ENV ;Main Entry Point For Taskman Status Monitor
"RTN","ZTMON",5,0)
 D EN(1) ;Long mode
"RTN","ZTMON",6,0)
 Q
"RTN","ZTMON",7,0)
EN(MODE) ;
"RTN","ZTMON",8,0)
 D HOME^%ZIS N %,%H,X,Y,Z,ZT,ZT1,ZT2,ZT3,ZT4,ZTC,ZTCO,ZTD,ZTENV,ZTH,ZTR,ZTUCI,ZTX,ZTY
"RTN","ZTMON",9,0)
 S U="^" X ^%ZOSF("UCI") S ZTUCI=Y W @IOF
"RTN","ZTMON",10,0)
MON D RUN,STATUS,SCHQ
"RTN","ZTMON",11,0)
 ;Continued in ZTMON1
"RTN","ZTMON",12,0)
 G ^ZTMON1
"RTN","ZTMON",13,0)
 ;
"RTN","ZTMON",14,0)
EN2 ;A shorter monitor
"RTN","ZTMON",15,0)
 D EN(0)
"RTN","ZTMON",16,0)
 Q
"RTN","ZTMON",17,0)
 ;
"RTN","ZTMON",18,0)
RUN ;Evaluate RUN-Node
"RTN","ZTMON",19,0)
 W @IOF,!!,"Checking Taskman."
"RTN","ZTMON",20,0)
 S ZTH=$H,ZTR=$G(^%ZTSCH("RUN"))
"RTN","ZTMON",21,0)
 I ZTR]"" S ZTD=$$DIFF^%ZTM(ZTH,ZTR,0)
"RTN","ZTMON",22,0)
 S ZTY=$S(ZTR="":0,ZTD>20:0,1:1)
"RTN","ZTMON",23,0)
 W ?20,"Current $H=",ZTH,"  (",$$HTE^%ZTLOAD7(ZTH),")"
"RTN","ZTMON",24,0)
 W !,?22,"RUN NODE=",$S(ZTR]"":ZTR,1:"<Undefined>") I ZTR]"" W "  (",$$HTE^%ZTLOAD7(ZTR),")"
"RTN","ZTMON",25,0)
 W !,"Taskman is ",$S(ZTY:"current.",ZTR]"":"late by "_(ZTD-15)_" seconds."_$C(7),1:"")
"RTN","ZTMON",26,0)
 W:$D(^%ZTSCH("STOP")) " shutting down" W:'$D(^%ZTSCH("STATUS")) " not running."_$C(7) W "."
"RTN","ZTMON",27,0)
 Q
"RTN","ZTMON",28,0)
 ;
"RTN","ZTMON",29,0)
STATUS ;Evaluate Status List
"RTN","ZTMON",30,0)
 K X,ZTC S ZT="",ZTH=$$H3^%ZTM($H),ZT2=""
"RTN","ZTMON",31,0)
 M ZTC("S")=^%ZTSCH("STATUS"),ZTC("L")=^%ZTSCH("LOADA")
"RTN","ZTMON",32,0)
 F  S ZT=$O(ZTC("S",ZT)) Q:ZT=""  S X=ZTC("S",ZT) I $L($P(X,U,3)) S ZTC("D",$P(X,U,3),ZT)=ZT
"RTN","ZTMON",33,0)
 W !,"Checking the Status List:",!,"  Node      weight  status",?32,"time",?42," $J"
"RTN","ZTMON",34,0)
 S ZT=""
"RTN","ZTMON",35,0)
 F  S ZT=$O(ZTC("D",ZT)),ZT1="" Q:ZT=""  F  S ZT1=$O(ZTC("D",ZT,ZT1)) Q:ZT1=""  D
"RTN","ZTMON",36,0)
 . S %=ZTC("S",ZT1),ZT2=1
"RTN","ZTMON",37,0)
 . W !?1,ZT W ?13,$S($D(ZTC("L",ZT)):$J($P(ZTC("L",ZT),U,2),3),1:""),?20,$P(%,U,2),?29,$$STIME($P(%,U)) W ?42,ZT1,?52,$P(%,U,4)
"RTN","ZTMON",38,0)
 . Q
"RTN","ZTMON",39,0)
 I 'ZT2 W !?5,"The Status List is ",$S(ZTY:"temporarily ",1:""),"empty."
"RTN","ZTMON",40,0)
 Q
"RTN","ZTMON",41,0)
 ;
"RTN","ZTMON",42,0)
SCHQ ;Evaluate Schedule List
"RTN","ZTMON",43,0)
 N X,ZTL
"RTN","ZTMON",44,0)
 W !!,"Checking the Schedule List:"
"RTN","ZTMON",45,0)
 S ZT1=0,ZTCO=0,ZTC=0,ZTH=$$H3^%ZTM($H)
"RTN","ZTMON",46,0)
 S X=$O(^%ZTSCH(0)),ZTL=$$DIFF(ZTH,X,1)
"RTN","ZTMON",47,0)
 F  S ZT1=$O(^%ZTSCH(ZT1)) Q:'ZT1  D
"RTN","ZTMON",48,0)
 . F ZT2=0:0 S ZT2=$O(^%ZTSCH(ZT1,ZT2)) Q:ZT2=""  S ZTC=ZTC+1 I $$DIFF(ZTH,ZT1,1)>0 S ZTCO=ZTCO+1
"RTN","ZTMON",49,0)
 W !?5,"Taskman has ",$S('ZTC:"no",1:ZTC)," task",$S(ZTC'=1:"s",1:"")," scheduled."
"RTN","ZTMON",50,0)
 I ZTC=1 W !?5,"It is ",$S('ZTCO:"not ",1:""),"overdue."
"RTN","ZTMON",51,0)
 I ZTC>1 W !?5,$S('ZTCO:"None",ZTCO=ZTC&(ZTCO=2):"Both",ZTCO=ZTC:"All",1:ZTCO)," of them ",$S(ZTCO=1:"is",1:"are")," overdue." W:ZTCO>10 *7
"RTN","ZTMON",52,0)
 I ZTC>0,ZTL>0 W "  First task is ",ZTL," seconds late."
"RTN","ZTMON",53,0)
 Q
"RTN","ZTMON",54,0)
 ;
"RTN","ZTMON",55,0)
DIFF(N,O,T) ;Diff in sec.
"RTN","ZTMON",56,0)
 Q:$G(T) N-O ;For new seconds times
"RTN","ZTMON",57,0)
 Q N-O*86400-$P(O,",",2)+$P(N,",",2)
"RTN","ZTMON",58,0)
 ;
"RTN","ZTMON",59,0)
STIME(%H) ;Status time
"RTN","ZTMON",60,0)
 I +$H=+%H Q "T@"_$P($$HTE^%ZTLOAD7(%H),"@",2)
"RTN","ZTMON",61,0)
 Q "T-"_($H-%H)_"@"_$P($$HTE^%ZTLOAD7(%H),"@",2)
"RTN","ZTMS3")
0^4^B24216355^B23747001
"RTN","ZTMS3",1,0)
%ZTMS3 ;SEA/RDS-TaskMan: Submanager, Part 5 (Run Task) ;07/20/2005  13:54
"RTN","ZTMS3",2,0)
 ;;8.0;KERNEL;**1,18,36,49,64,67,94,118,127,136,175,275,355**;Jul 10, 1995;Build 9
"RTN","ZTMS3",3,0)
 ;
"RTN","ZTMS3",4,0)
TASK ;SUBMGR--prepare and run task; cleanup after
"RTN","ZTMS3",5,0)
 ;
"RTN","ZTMS3",6,0)
BEFORE ;prepare task
"RTN","ZTMS3",7,0)
 ;submanager's variables
"RTN","ZTMS3",8,0)
 S ZTDEF=""
"RTN","ZTMS3",9,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,""))
"RTN","ZTMS3",10,0)
 I X]"",$D(^%ZIS(14.7,X,0))#2 S ZTDEF=^(0)
"RTN","ZTMS3",11,0)
 S DUZ=+$P(ZTREC,U,3)
"RTN","ZTMS3",12,0)
 S %ZTTV=ZTUCI_U_IOS_U_U_ZTSK_U_IO_U_IOT_U_ZTCPU_U_ZTNODE_U_DUZ_U_U_IOF_U_IOST_U_ZTPAIR_U_ZTYPE_U
"RTN","ZTMS3",13,0)
 S %ZTTV(0)=ZTRTN_U_$P(ZTREC,U,8,9)_U_$P(ZTREC,U,6)_U_ION_U_ZTUCI_U_$P(ZTREC,U,5)_U_$S($L($P(ZTREC,U,10)):$P(ZTREC,U,10),1:$P(ZTREC,U,3))_U_$J_U_ZTSYNCFL_U_ZTPAIR_U
"RTN","ZTMS3",14,0)
 ;
"RTN","ZTMS3",15,0)
 I +$G(^%ZTSCH("LOGRSRC")) S %ZTTV(1)="!"_$S($P(ZTREC,U,9)="":$P(ZTREC,U,2),1:$P(ZTREC,U,9))
"RTN","ZTMS3",16,0)
 ;
"RTN","ZTMS3",17,0)
 ;external calls
"RTN","ZTMS3",18,0)
 D NOW^%DTC S DT=% ;DT is Date.time at this point.
"RTN","ZTMS3",19,0)
1 D SETNM^%ZOSV($E("BTask ",(ZTIO]"")+1,6)_(ZTSK#100000000))
"RTN","ZTMS3",20,0)
 ;
"RTN","ZTMS3",21,0)
 ;priority (Not done in the VA)
"RTN","ZTMS3",22,0)
 ;S X=$P(ZTREC,U,15)
"RTN","ZTMS3",23,0)
 ;S X=$S(+X'=X:0,X'<1&(X'>10):X\1,1:0)
"RTN","ZTMS3",24,0)
 ;S Y=$S(IOS="":0,$D(^%ZIS(1,+IOS,0))[0:0,1:+$P(^(0),U,5))
"RTN","ZTMS3",25,0)
 ;S Y=$S(Y'<1&(Y'>10):Y\1,1:0)
"RTN","ZTMS3",26,0)
 ;S X=$S(Y:Y,X:X,$P(ZTDEF,U,4):$P(ZTDEF,U,4),1:10)
"RTN","ZTMS3",27,0)
 ;X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",28,0)
 ;
"RTN","ZTMS3",29,0)
2 ;restore saved variables
"RTN","ZTMS3",30,0)
 S X=$O(^XTV(8989.3,1,4,"B",ZTCPU,0)) S:$P($G(^XTV(8989.3,1,4,+X,0)),U,6)="y" XRTL=ZTUCI
"RTN","ZTMS3",31,0)
 K %,%H,%I,%ZTI,%ZTIO,IO("C"),IO("T"),X,Y,ZTCPU,ZTDEF,ZTIOST,ZTIOT,ZTNODE,ZTPAIR,ZTREC,ZTREC2,ZTREC21,ZTREC25,ZTUCI
"RTN","ZTMS3",32,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS3",33,0)
 S DUZ(0)="" D RESTORE^%ZTMS4
"RTN","ZTMS3",34,0)
 ;
"RTN","ZTMS3",35,0)
 ;force values, DTIME=1 so HFS reads work under Cache
"RTN","ZTMS3",36,0)
 S DUZ=+DUZ,DTIME=1,ZTDESC=$G(^%ZTSK(ZTSK,.03)),ZTDTH=$H
"RTN","ZTMS3",37,0)
 I DUZ(0)="" S DUZ(0)=$S($D(^VA(200,DUZ,0))#2:$P(^(0),U,4),1:"")
"RTN","ZTMS3",38,0)
 I $D(DUZ(2))[0 S DUZ(2)=$S($D(^VA(200,DUZ,2,0)):$O(^(0)),1:0)
"RTN","ZTMS3",39,0)
 S ^XUTL("XQ",$J,0)=DT,^("ZTSK")=ZTDESC,^("ZTSKNUM")=ZTSK
"RTN","ZTMS3",40,0)
 S X="DUZ" F  S X=$Q(@X) Q:X=""  I $D(@X) S ^XUTL("XQ",$J,$TR(X,""""))=@X
"RTN","ZTMS3",41,0)
 F X="DUZ","IO","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY","XQVOL" I $D(@X) S ^XUTL("XQ",$J,X)=@X
"RTN","ZTMS3",42,0)
3 ;
"RTN","ZTMS3",43,0)
 ;final checks & sets
"RTN","ZTMS3",44,0)
 I '$D(^%ZTSK(ZTSK)) S ZTTASK=0 D AFTER Q
"RTN","ZTMS3",45,0)
 I $L($P($G(^%ZTSK(ZTSK,.1)),U,10)) D  Q
"RTN","ZTMS3",46,0)
 . D TSKSTAT("D","Stopped by User")
"RTN","ZTMS3",47,0)
 . S ZTTASK=0
"RTN","ZTMS3",48,0)
 . D AFTER
"RTN","ZTMS3",49,0)
 D TSKSTAT(5,"Started Running",$J)
"RTN","ZTMS3",50,0)
 S ZTQUEUED=ZTSK,ZTSTAT="1 General error"
"RTN","ZTMS3",51,0)
 S ^%ZTSCH("TASK",ZTSK)=%ZTTV(0)_$H,^(ZTSK,2)=%ZTTV
"RTN","ZTMS3",52,0)
 ;
"RTN","ZTMS3",53,0)
4 ;run task
"RTN","ZTMS3",54,0)
 I ^%ZOSF("OS")["MSM" D
"RTN","ZTMS3",55,0)
 . I $P($ZV,"Version ",2)]]"4.3.0" D PURGELST^%MSMOPS Q
"RTN","ZTMS3",56,0)
 . Q
"RTN","ZTMS3",57,0)
 L
"RTN","ZTMS3",58,0)
 I ZTPFLG("XUSCNT") D SETLOCK^XUSCNT($NA(^%ZTSCH("TASK",ZTSK)))
"RTN","ZTMS3",59,0)
 L +^%ZTSCH("TASK",ZTSK) ;establish a lock on the task to be used to indicate that it is active
"RTN","ZTMS3",60,0)
 ;Persistent task get set in ZTSK^XQ1
"RTN","ZTMS3",61,0)
 I $P(^%ZIS(14.7,ZTPFLG("ZTPN"),0),U,3)="Y" S %ZTTV("LOG")=1 D LOGIN^%ZTMS4
"RTN","ZTMS3",62,0)
 I $D(%ZTTV(1)) D:+$G(^%ZTSCH("LOGRSRC")) LOGRSRC^%ZOSV(%ZTTV(1))
"RTN","ZTMS3",63,0)
 S DT=DT\1 S:ZTPFLG("ZTREQ") ZTREQ="@"
"RTN","ZTMS3",64,0)
 M %ZTPFLG=ZTPFLG
"RTN","ZTMS3",65,0)
 D RUN
"RTN","ZTMS3",66,0)
 M ZTPFLG=%ZTPFLG K %ZTPFLG
"RTN","ZTMS3",67,0)
 I $D(%ZTTV(1)) D:+$G(^%ZTSCH("LOGRSRC")) LOGRSRC^%ZOSV("$AFTR ZTMS$")
"RTN","ZTMS3",68,0)
 I $G(%ZTTV("LOG")) D LOGOUT^%ZTMS4
"RTN","ZTMS3",69,0)
 ;
"RTN","ZTMS3",70,0)
AFTER ;cleanup after task; reset partition
"RTN","ZTMS3",71,0)
 S U="^",ZTSK=$P(%ZTTV,U,4) D PCLEAR^%ZTLOAD(ZTSK) ;Clear persistent flag
"RTN","ZTMS3",72,0)
 D TSKSTAT(6,"Finished")
"RTN","ZTMS3",73,0)
 I ZTPFLG("XUSCNT") D SETLOCK^XUSCNT()
"RTN","ZTMS3",74,0)
 L  ;Clear all user locks.
"RTN","ZTMS3",75,0)
 L +^%ZTSK(ZTSK)
"RTN","ZTMS3",76,0)
 I $D(ZTTASK)[0 K ^%ZTSCH("TASK",ZTSK) S ZTQUEUED=.6,ZTTASK=1
"RTN","ZTMS3",77,0)
 ;S X=10 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",78,0)
 D SETNM^%ZOSV("Sub "_$J) ;Change name back
"RTN","ZTMS3",79,0)
 S ZTUCI=$P(%ZTTV,U),IOS=$P(%ZTTV,U,2),(IO,IO(0),%ZTIO)=$P(%ZTTV,U,5),IOT=$P(%ZTTV,U,6),ZTCPU=$P(%ZTTV,U,7),ZTNODE=$P(%ZTTV,U,8)
"RTN","ZTMS3",80,0)
 S IOF=$P(%ZTTV,U,11),IOST=$P(%ZTTV,U,12),ZTPAIR=$P(%ZTTV,U,13),ZTYPE=$P(%ZTTV,U,14),ZTSYNCFL=$P(%ZTTV(0),U,11)
"RTN","ZTMS3",81,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2($S($G(ZTSTAT):"S",1:"D"),ZTSYNCFL,IO,$G(ZTSTAT)) D SCHSYNC^%ZTMS2(ZTSYNCFL,IO):'$G(ZTSTAT)
"RTN","ZTMS3",82,0)
 D POST^%ZTMS4:ZTTASK,CLOSE
"RTN","ZTMS3",83,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J) I $T(XUTL^XUSCLEAN)]"" D XUTL^XUSCLEAN
"RTN","ZTMS3",84,0)
 K (%ZTIO,%ZTTV,DT,IO,IOF,ION,IOS,IOST,IOT,U,ZTCPU,ZTNODE,ZTNONEXT,ZTPAIR,ZTPFLG,ZTQUEUED,ZTREQ,ZTSTOP,ZTUCI,ZTYPE)
"RTN","ZTMS3",85,0)
 K IO("C"),IO("T"),IO("ERROR"),IO("LASTERR"),IO("DOC"),IO("P"),IO("HFSIO")
"RTN","ZTMS3",86,0)
 S DUZ=0,DUZ(0)="@",ZTQUEUED=0
"RTN","ZTMS3",87,0)
 L  ;Clear all locks, -^%ZTSK(ZTSK)
"RTN","ZTMS3",88,0)
 Q
"RTN","ZTMS3",89,0)
 ;
"RTN","ZTMS3",90,0)
RUN ;
"RTN","ZTMS3",91,0)
 N %,%ZTTV,%ZTPFLG,XUALLOC
"RTN","ZTMS3",92,0)
 F %=1:1:12 S $P(XUALLOC(%)," ",250)=""
"RTN","ZTMS3",93,0)
 D @ZTRTN
"RTN","ZTMS3",94,0)
 Q
"RTN","ZTMS3",95,0)
 ;
"RTN","ZTMS3",96,0)
CLOSE ;RUN--close &/or close execute
"RTN","ZTMS3",97,0)
 I %ZTIO="" S ZTNONEXT=1 G CLX
"RTN","ZTMS3",98,0)
 N ZTUCI,ZTCPU,ZTNODE,IOCPU,%IO
"RTN","ZTMS3",99,0)
 I IOT="HFS"!(IOT="SPL") S ZTNONEXT=1
"RTN","ZTMS3",100,0)
 K IO("C") S:IOT'="TRM" IO("C")=1
"RTN","ZTMS3",101,0)
 S:$D(IO("CLOSE")) IO("T")=1
"RTN","ZTMS3",102,0)
 I IOT="RES" K ZTNONEXT Q  ;For a Resource, don't close.
"RTN","ZTMS3",103,0)
 ;Here is the Lock and hang to allow IDCU ports to reset. See %ZTMS2.
"RTN","ZTMS3",104,0)
 I IOST["MINIOUT" S IO("C")=1,%IO=1 L +^%ZTSCH("NETMAIL",%ZTIO):8
"RTN","ZTMS3",105,0)
 I $D(IO(1,IO))#2 D ^%ZISC
"RTN","ZTMS3",106,0)
 I $G(%IO) H 6 ;Wait for terminal server to reset.
"RTN","ZTMS3",107,0)
 ;Unlock of all locks is done in clean
"RTN","ZTMS3",108,0)
 ;See that all devices are closed.
"RTN","ZTMS3",109,0)
CLX S %IO="" F  S %IO=$O(IO(1,%IO)) Q:%IO=""  I %IO'=IO K IO(1,%IO) C %IO
"RTN","ZTMS3",110,0)
 Q
"RTN","ZTMS3",111,0)
 ;
"RTN","ZTMS3",112,0)
TSKSTAT(CODE,MSG,JOB) ; Update task's status
"RTN","ZTMS3",113,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=$G(CODE)_U_$H_U_$G(MSG)
"RTN","ZTMS3",114,0)
 I $G(JOB)>0 S $P(^%ZTSK(ZTSK,.1),U,4)=JOB
"RTN","ZTMS3",115,0)
 Q
"RTN","ZTMS3",116,0)
 ;
"VER")
8.0^22.0
"^DD",14.7,14.7,9,0)
VAX ENVIROMENT FOR DCL^F^^0;10^K:$L(X)>12!($L(X)<2) X
"^DD",14.7,14.7,9,3)
Answer must be 2-12 characters in length.
"^DD",14.7,14.7,9,21,0)
^^23^23^3060124^
"^DD",14.7,14.7,9,21,1,0)
This field only has meaning on OpenVMS systems.
"^DD",14.7,14.7,9,21,2,0)
 
"^DD",14.7,14.7,9,21,3,0)
If this field is empty, then the M JOB command will be used.
"^DD",14.7,14.7,9,21,4,0)
 
"^DD",14.7,14.7,9,21,5,0)
If this field has a value, it will cause TM to SUBMIT submanagers
"^DD",14.7,14.7,9,21,6,0)
to run from a VMS batch queue with a name of TM$<nodename>.
"^DD",14.7,14.7,9,21,7,0)
 
"^DD",14.7,14.7,9,21,8,0)
For Cache VMS, Put the VMS NODE name in this field as the BOX:VOLUME field 
"^DD",14.7,14.7,9,21,9,0)
has the configuration name in it.
"^DD",14.7,14.7,9,21,10,0)
 
"^DD",14.7,14.7,9,21,11,0)
For VAX DSM, Put the NAME of the DSM manager that starts the environment.
"^DD",14.7,14.7,9,21,12,0)
 
"^DD",14.7,14.7,9,21,13,0)
TM will submit submanagers to the queue TM$<node_name>, have this queue 
"^DD",14.7,14.7,9,21,14,0)
assigned to the proper node.
"^DD",14.7,14.7,9,21,15,0)
 
"^DD",14.7,14.7,9,21,16,0)
There are several VMS setups that must be in place before starting
"^DD",14.7,14.7,9,21,17,0)
to use this method.
"^DD",14.7,14.7,9,21,18,0)
The TASKMAN user account and directory, ZTM2WDCL.COM and ZTMS2WDCL.COM,
"^DD",14.7,14.7,9,21,19,0)
Batch queue TM$<node>, DHCP$TASKMAN logical.
"^DD",14.7,14.7,9,21,20,0)
(For DSM use ZTMWDCL.COM and ZTMSWDCL.COM)
"^DD",14.7,14.7,9,21,21,0)
 
"^DD",14.7,14.7,9,21,22,0)
For more information, See the systems management issues section of the
"^DD",14.7,14.7,9,21,23,0)
taskman chapter in the Kernel systems manual.
"^DD",14.7,14.7,9,"DT")
3060124
"^DD",14.7,14.7,21,0)
LOAD BALANCE ROUTINE^F^^2;E1,75^K:$L(X)>75!($L(X)<3)!'(X?1"$".1PA.E) X
"^DD",14.7,14.7,21,3)
Answer must be 3-75 characters in length. Funtion, Extrinsic function, External routine.
"^DD",14.7,14.7,21,21,0)
^^28^28^3050224^
"^DD",14.7,14.7,21,21,1,0)
This field holds the name of a Function, Extrinsic function or External
"^DD",14.7,14.7,21,21,2,0)
routine call that returns a load rating. If this field contains a value,
"^DD",14.7,14.7,21,21,3,0)
TaskMan will use this name in preforming Load Balancing.
"^DD",14.7,14.7,21,21,4,0)
 
"^DD",14.7,14.7,21,21,5,0)
Only use Load Balancing if you have two or more CPU's running TM that
"^DD",14.7,14.7,21,21,6,0)
share the same %ZTSCH global.
"^DD",14.7,14.7,21,21,7,0)
 
"^DD",14.7,14.7,21,21,8,0)
The Load Balancing function must return a value between 1 and 256.
"^DD",14.7,14.7,21,21,9,0)
Where: 1 represents a CPU with no capacity for any more work.
"^DD",14.7,14.7,21,21,10,0)
       256 represents a CPU that is Idle.
"^DD",14.7,14.7,21,21,11,0)
 
"^DD",14.7,14.7,21,21,12,0)
The only included functions are
"^DD",14.7,14.7,21,21,13,0)
For VAX DSM it is '$$VXD' and its algorithm is:
"^DD",14.7,14.7,21,21,14,0)
Capacity left= Available jobs - Active jobs - (4 * Computable jobs)
"^DD",14.7,14.7,21,21,15,0)
 
"^DD",14.7,14.7,21,21,16,0)
For Cache/NT it is '$$CACHE1(constant)' its algorithm is:
"^DD",14.7,14.7,21,21,17,0)
Capacity left= Available jobs + constant
"^DD",14.7,14.7,21,21,18,0)
 
"^DD",14.7,14.7,21,21,19,0)
For Cache/VMS it is '$$CACHE2(@com-file,logical-name)'.
"^DD",14.7,14.7,21,21,20,0)
If the com-file value is set, that com-file will be run each time taskman
"^DD",14.7,14.7,21,21,21,0)
wants to get the balance value.
"^DD",14.7,14.7,21,21,22,0)
The logical-name will default to "VISTA$METRIC" or us the value entered.
"^DD",14.7,14.7,21,21,23,0)
The normal way would be to have $$CACHE2() in the field and use the two
"^DD",14.7,14.7,21,21,24,0)
scripts.
"^DD",14.7,14.7,21,21,25,0)
 
"^DD",14.7,14.7,21,21,26,0)
A script "GET_METRIC.COM" will set the logical "VISTA$METRIC".
"^DD",14.7,14.7,21,21,27,0)
This can be run by taskman or from the TM$node batch queue with the 
"^DD",14.7,14.7,21,21,28,0)
script "METRIC_SCHEDULE.COM".
"^DD",14.7,14.7,21,"DT")
3050516
"BLD",835,6)
^351
**END**
**END**
