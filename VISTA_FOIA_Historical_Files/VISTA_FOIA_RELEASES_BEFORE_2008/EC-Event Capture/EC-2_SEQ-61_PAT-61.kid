Released EC*2*61 SEQ #61
Extracted from mail message
**KIDS**:EC*2.0*61^

**INSTALL NAME**
EC*2.0*61
"BLD",4915,0)
EC*2.0*61^EVENT CAPTURE^0^3041129^y
"BLD",4915,1,0)
^^1^1^3040213^^^^
"BLD",4915,1,1,0)

"BLD",4915,4,0)
^9.64PA^^
"BLD",4915,"ABPKG")
n
"BLD",4915,"INID")
^
"BLD",4915,"INIT")

"BLD",4915,"KRN",0)
^9.67PA^8989.52^20
"BLD",4915,"KRN",.4,0)
.4
"BLD",4915,"KRN",.401,0)
.401
"BLD",4915,"KRN",.402,0)
.402
"BLD",4915,"KRN",.403,0)
.403
"BLD",4915,"KRN",.5,0)
.5
"BLD",4915,"KRN",.84,0)
.84
"BLD",4915,"KRN",3.6,0)
3.6
"BLD",4915,"KRN",3.8,0)
3.8
"BLD",4915,"KRN",9.2,0)
9.2
"BLD",4915,"KRN",9.2,"NM",0)
^9.68A^1^1
"BLD",4915,"KRN",9.2,"NM",1,0)
EC NTPCE^^0
"BLD",4915,"KRN",9.2,"NM","B","EC NTPCE",1)

"BLD",4915,"KRN",9.8,0)
9.8
"BLD",4915,"KRN",9.8,"NM",0)
^9.68A^11^8
"BLD",4915,"KRN",9.8,"NM",1,0)
ECV3RPC^^0^B44536732
"BLD",4915,"KRN",9.8,"NM",2,0)
ECRRPT1^^0^B33008688
"BLD",4915,"KRN",9.8,"NM",3,0)
ECNTPCE^^0^B18587127
"BLD",4915,"KRN",9.8,"NM",4,0)
ECRRPC^^0^B10912061
"BLD",4915,"KRN",9.8,"NM",8,0)
ECRRPT^^0^B40916605
"BLD",4915,"KRN",9.8,"NM",9,0)
ECU1RPC^^0^B19527731
"BLD",4915,"KRN",9.8,"NM",10,0)
ECV1RPC^^0^B7956996
"BLD",4915,"KRN",9.8,"NM",11,0)
ECPRSUM1^^0^B26520258
"BLD",4915,"KRN",9.8,"NM","B","ECNTPCE",3)

"BLD",4915,"KRN",9.8,"NM","B","ECPRSUM1",11)

"BLD",4915,"KRN",9.8,"NM","B","ECRRPC",4)

"BLD",4915,"KRN",9.8,"NM","B","ECRRPT",8)

"BLD",4915,"KRN",9.8,"NM","B","ECRRPT1",2)

"BLD",4915,"KRN",9.8,"NM","B","ECU1RPC",9)

"BLD",4915,"KRN",9.8,"NM","B","ECV1RPC",10)

"BLD",4915,"KRN",9.8,"NM","B","ECV3RPC",1)

"BLD",4915,"KRN",19,0)
19
"BLD",4915,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",4915,"KRN",19,"NM",1,0)
EC NTPCE REPORT^^0^
"BLD",4915,"KRN",19,"NM",2,0)
ECREPS^^2
"BLD",4915,"KRN",19,"NM",3,0)
EC GUI CONTEXT^^0
"BLD",4915,"KRN",19,"NM","B","EC GUI CONTEXT",3)

"BLD",4915,"KRN",19,"NM","B","EC NTPCE REPORT",1)

"BLD",4915,"KRN",19,"NM","B","ECREPS",2)

"BLD",4915,"KRN",19.1,0)
19.1
"BLD",4915,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",4915,"KRN",101,0)
101
"BLD",4915,"KRN",101,"NM",0)
^9.68A^^
"BLD",4915,"KRN",409.61,0)
409.61
"BLD",4915,"KRN",771,0)
771
"BLD",4915,"KRN",869.2,0)
869.2
"BLD",4915,"KRN",870,0)
870
"BLD",4915,"KRN",8989.51,0)
8989.51
"BLD",4915,"KRN",8989.52,0)
8989.52
"BLD",4915,"KRN",8994,0)
8994
"BLD",4915,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",4915,"KRN","B",.4,.4)

"BLD",4915,"KRN","B",.401,.401)

"BLD",4915,"KRN","B",.402,.402)

"BLD",4915,"KRN","B",.403,.403)

"BLD",4915,"KRN","B",.5,.5)

"BLD",4915,"KRN","B",.84,.84)

"BLD",4915,"KRN","B",3.6,3.6)

"BLD",4915,"KRN","B",3.8,3.8)

"BLD",4915,"KRN","B",9.2,9.2)

"BLD",4915,"KRN","B",9.8,9.8)

"BLD",4915,"KRN","B",19,19)

"BLD",4915,"KRN","B",19.1,19.1)

"BLD",4915,"KRN","B",101,101)

"BLD",4915,"KRN","B",409.61,409.61)

"BLD",4915,"KRN","B",771,771)

"BLD",4915,"KRN","B",869.2,869.2)

"BLD",4915,"KRN","B",870,870)

"BLD",4915,"KRN","B",8989.51,8989.51)

"BLD",4915,"KRN","B",8989.52,8989.52)

"BLD",4915,"KRN","B",8994,8994)

"BLD",4915,"QUES",0)
^9.62^^
"BLD",4915,"REQB",0)
^9.611^3^2
"BLD",4915,"REQB",1,0)
EC*2.0*49^2
"BLD",4915,"REQB",3,0)
EC*2.0*63^2
"BLD",4915,"REQB","B","EC*2.0*49",1)

"BLD",4915,"REQB","B","EC*2.0*63",3)

"KRN",9.2,3497,-1)
0^1
"KRN",9.2,3497,0)
EC NTPCE^ECS Records Failing Transmission to PCE^3040219.150605^
"KRN",9.2,3497,1,0)
^^4^4^3040219^
"KRN",9.2,3497,1,1,0)
This Event Capture report provides a list of encounters and the reasons why
"KRN",9.2,3497,1,2,0)
the records were not transmitted to PCE.  The Procedure Date/Time, Location, 
"KRN",9.2,3497,1,3,0)
DSS Unit, Patient, Procedure, Category, Provider(s) of care and Reason are 
"KRN",9.2,3497,1,4,0)
listed on the report.
"KRN",9.2,3497,10.2)
W @IOF
"KRN",19,9667,-1)
2^2
"KRN",19,9667,0)
ECREPS^Event Capture Reports^^M^11715^^2937^^^^^499^^1^1
"KRN",19,9667,10,0)
^19.01IP^9^9
"KRN",19,9667,10,9,0)
12465
"KRN",19,9667,10,9,"^")
EC NTPCE REPORT
"KRN",19,9667,"U")
EVENT CAPTURE REPORTS
"KRN",19,11860,-1)
0^3
"KRN",19,11860,0)
EC GUI CONTEXT^EC GUI Context version 2.0.11.0^^B^^^^^^^^EVENT CAPTURE
"KRN",19,11860,1,0)
^19.06^1^1^3040809^^^^
"KRN",19,11860,1,1,0)
This is the Broker Client/Server type option for the Event Capture GUI option
"KRN",19,11860,99)
58583,58456
"KRN",19,11860,99.1)
58981,55862
"KRN",19,11860,"RPC",0)
^19.05P^53^53
"KRN",19,11860,"RPC",1,0)
EC DSSCATCHECK
"KRN",19,11860,"RPC",2,0)
EC FILER
"KRN",19,11860,"RPC",3,0)
EC GETBATPROCS
"KRN",19,11860,"RPC",4,0)
EC GETCAT
"KRN",19,11860,"RPC",5,0)
EC GETCPTLST
"KRN",19,11860,"RPC",6,0)
EC GETDSSECS
"KRN",19,11860,"RPC",7,0)
EC GETDSSUNIT
"KRN",19,11860,"RPC",8,0)
EC GETDSSUNITUSRS
"KRN",19,11860,"RPC",9,0)
EC GETECLOC
"KRN",19,11860,"RPC",10,0)
EC GETECSCATS
"KRN",19,11860,"RPC",11,0)
EC GETECSCREEN
"KRN",19,11860,"RPC",12,0)
EC GETECSDETAIL
"KRN",19,11860,"RPC",13,0)
EC GETECSPROCS
"KRN",19,11860,"RPC",14,0)
EC GETENCDXS
"KRN",19,11860,"RPC",15,0)
EC GETIEN
"KRN",19,11860,"RPC",16,0)
EC GETLIST
"KRN",19,11860,"RPC",17,0)
EC GETLOC
"KRN",19,11860,"RPC",18,0)
EC GETNATPX
"KRN",19,11860,"RPC",19,0)
EC GETPATCLASTAT
"KRN",19,11860,"RPC",20,0)
EC GETPATELIG
"KRN",19,11860,"RPC",21,0)
EC GETPATINFO
"KRN",19,11860,"RPC",22,0)
EC GETPATPROCS
"KRN",19,11860,"RPC",23,0)
EC GETPRODEFS
"KRN",19,11860,"RPC",24,0)
EC GETPROVIDER
"KRN",19,11860,"RPC",25,0)
EC GETPXLST
"KRN",19,11860,"RPC",26,0)
EC GETPXMODIFIER
"KRN",19,11860,"RPC",27,0)
EC GETPXREASON
"KRN",19,11860,"RPC",28,0)
EC GETSCNHELP
"KRN",19,11860,"RPC",29,0)
EC GETUSRDSSUNIT
"KRN",19,11860,"RPC",30,0)
EC REPORTS
"KRN",19,11860,"RPC",31,0)
EC VALIDATE SPREADSHEET DATA
"KRN",19,11860,"RPC",32,0)
ORWU USERINFO
"KRN",19,11860,"RPC",33,0)
ORWU HASKEY
"KRN",19,11860,"RPC",34,0)
ORWU DEVICE
"KRN",19,11860,"RPC",35,0)
SC PATIENT LOOKUP
"KRN",19,11860,"RPC",36,0)
ORWU NEWPERS
"KRN",19,11860,"RPC",37,0)
DDR GET DD HELP
"KRN",19,11860,"RPC",38,0)
DDR FINDER
"KRN",19,11860,"RPC",39,0)
DDR FIND1
"KRN",19,11860,"RPC",40,0)
DDR LISTER
"KRN",19,11860,"RPC",41,0)
EC GETDATE
"KRN",19,11860,"RPC",42,0)
EC CLASHELP
"KRN",19,11860,"RPC",43,0)
DDR GETS ENTRY DATA
"KRN",19,11860,"RPC",44,0)
DG CHK BS5 XREF Y/N
"KRN",19,11860,"RPC",45,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,11860,"RPC",46,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,11860,"RPC",47,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,11860,"RPC",48,0)
EC SPACEBAR
"KRN",19,11860,"RPC",49,0)
EC DIEDON
"KRN",19,11860,"RPC",50,0)
EC GETPATCH
"KRN",19,11860,"RPC",51,0)
EC GETVISITINFO
"KRN",19,11860,"RPC",52,0)
EC GETVERSION
"KRN",19,11860,"RPC",53,0)
ORWU DT
"KRN",19,11860,"U")
EC GUI CONTEXT VERSION 2.0.11.
"KRN",19,12465,-1)
0^1
"KRN",19,12465,0)
EC NTPCE REPORT^Records Failing Transmission to PCE Report^^R^^^EC NTPCE^^^^^EVENT CAPTURE^^1^1
"KRN",19,12465,1,0)
^19.06^4^4^3041004^^^^
"KRN",19,12465,1,1,0)
This Event Capture report provides a list of encounters and the reasons why
"KRN",19,12465,1,2,0)
the records were not sent to PCE.  The Procedure Date/Time, Location, DSS Unit, 
"KRN",19,12465,1,3,0)
Patient, Procedure, Category, Provider(s) of care and Reason are listed on 
"KRN",19,12465,1,4,0)
the report.
"KRN",19,12465,15)
W @IOF
"KRN",19,12465,20)
W @IOF
"KRN",19,12465,25)
EN^ECNTPCE
"KRN",19,12465,"U")
RECORDS FAILING TRANSMISSION T
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",499,-1)
1^1
"PKG",499,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",499,20,0)
^9.402P^^
"PKG",499,22,0)
^9.49I^1^1
"PKG",499,22,1,0)
2.0^2960508^2970410^11715
"PKG",499,22,1,"PAH",1,0)
61^3041129
"PKG",499,22,1,"PAH",1,1,0)
^^1^1^3041129
"PKG",499,22,1,"PAH",1,1,1,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","ECNTPCE")
0^3^B18587127
"RTN","ECNTPCE",1,0)
ECNTPCE ;ALB/JAM-Event Capture Records failing transmission to PCE;14 Jan 04
"RTN","ECNTPCE",2,0)
 ;;2.0; EVENT CAPTURE ;**61**;8 May 96
"RTN","ECNTPCE",3,0)
EN ; entry point
"RTN","ECNTPCE",4,0)
 K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT I Y<0 G END
"RTN","ECNTPCE",5,0)
 S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y
"RTN","ECNTPCE",6,0)
 I ECED<ECSD W !,"End date must be after start date",! G EN
"RTN","ECNTPCE",7,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_U_$$FMTE^XLFDT(ECED)
"RTN","ECNTPCE",8,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECNTPCE",9,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM"
"RTN","ECNTPCE",10,0)
 D ^%ZIS G:POP END
"RTN","ECNTPCE",11,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECNTPCE",12,0)
 .S (ZTSAVE("ECDFN"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))=""
"RTN","ECNTPCE",13,0)
 .S ZTDESC="ECS RECORDS FAILING TRANSMISSION TO PCE REPORT",ZTRTN="START^ECNTPCE"
"RTN","ECNTPCE",14,0)
 .S ZTIO=ION D ^%ZTLOAD,HOME^%ZIS
"RTN","ECNTPCE",15,0)
 W !,?5,"Please be patient, this may take a few moments..."
"RTN","ECNTPCE",16,0)
 ;
"RTN","ECNTPCE",17,0)
START ; entry when queued
"RTN","ECNTPCE",18,0)
 N ECOUT,X,Y,DIR,LINE,ECPG,ECRDT,%H
"RTN","ECNTPCE",19,0)
 S ECOUT=0,ECPG=1
"RTN","ECNTPCE",20,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECNTPCE",21,0)
 U IO
"RTN","ECNTPCE",22,0)
 D GET
"RTN","ECNTPCE",23,0)
 D END
"RTN","ECNTPCE",24,0)
 Q
"RTN","ECNTPCE",25,0)
GET ; start processing or records
"RTN","ECNTPCE",26,0)
 N DATE,ECL,ECNT,ECFN,ECEC,ECPX,ECSTR,ECD
"RTN","ECNTPCE",27,0)
 K ^TMP("ECNTPCE",$J)
"RTN","ECNTPCE",28,0)
 S DATE=ECSD,ECNT=0
"RTN","ECNTPCE",29,0)
 F  S DATE=$O(^ECH("AC",DATE)) Q:('DATE)!(DATE>ECED)  D
"RTN","ECNTPCE",30,0)
 .S ECFN=0 F  S ECFN=$O(^ECH("AC",DATE,ECFN)) Q:'ECFN  D 
"RTN","ECNTPCE",31,0)
 ..Q:'$D(^ECH(ECFN,"R"))  S ECEC=$G(^ECH(ECFN,0)) Q:ECEC=""
"RTN","ECNTPCE",32,0)
 ..S ECL=$P(ECEC,U,4),ECD=$P(ECEC,U,7),ECPX=$P(ECEC,U,9)
"RTN","ECNTPCE",33,0)
 ..S ECDFN=$P(ECEC,U,2)
"RTN","ECNTPCE",34,0)
 ..I (ECL="")!(ECD="")!(ECPX="")!(ECDFN="") Q
"RTN","ECNTPCE",35,0)
 ..S ECSTR=ECFN_U_$P(ECEC,U,8)_U_ECPX_U_$P(ECEC,U,11)_U_$P(ECEC,U,15)
"RTN","ECNTPCE",36,0)
 ..S ECSTR=ECSTR_U_$P(ECEC,U,17)
"RTN","ECNTPCE",37,0)
 ..S ECNT=ECNT+1,^TMP("ECNTPCE",$J,DATE,ECL,ECD,ECDFN,ECNT)=ECSTR
"RTN","ECNTPCE",38,0)
 D HDR
"RTN","ECNTPCE",39,0)
 I '$O(^TMP("ECNTPCE",$J,0)) D  Q
"RTN","ECNTPCE",40,0)
 .W !!,?10,"No Data found during the time selected."
"RTN","ECNTPCE",41,0)
 D PRT
"RTN","ECNTPCE",42,0)
 Q
"RTN","ECNTPCE",43,0)
 ;
"RTN","ECNTPCE",44,0)
END K ECSD,ECED
"RTN","ECNTPCE",45,0)
 I $D(ECGUI) D ^ECKILL Q
"RTN","ECNTPCE",46,0)
 W !
"RTN","ECNTPCE",47,0)
 I $E(IOST,1,2)="C-",$G(ECOUT)=0 W !!,"Press <RET> to continue" R X:DTIME
"RTN","ECNTPCE",48,0)
 ;W @IOF
"RTN","ECNTPCE",49,0)
 D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECNTPCE",50,0)
 Q
"RTN","ECNTPCE",51,0)
PAGE ; end of page
"RTN","ECNTPCE",52,0)
 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECOUT=1 Q
"RTN","ECNTPCE",53,0)
 D HDR
"RTN","ECNTPCE",54,0)
 Q
"RTN","ECNTPCE",55,0)
HDR ; print header
"RTN","ECNTPCE",56,0)
 W @IOF
"RTN","ECNTPCE",57,0)
 W ECRDT,?75,"Page: ",ECPG,!
"RTN","ECNTPCE",58,0)
 W !,?17,"ECS RECORDS FAILING TRANSMISSION TO PCE REPORT",!,?24
"RTN","ECNTPCE",59,0)
 W "FROM "_$P(ECDATE,U)_" TO "_$P(ECDATE,U,2),!!
"RTN","ECNTPCE",60,0)
 W "DATE/TIME",?16,"PATIENT",?39,"SSN",?44,"PROVIDER(S)",?61,"REASONS"
"RTN","ECNTPCE",61,0)
 W !,"LOCATION",?16,"PROCEDURE",!,"DSS UNIT",?16,"CATEGORY",!
"RTN","ECNTPCE",62,0)
 F LINE=1:1:80 W "-"
"RTN","ECNTPCE",63,0)
 W !
"RTN","ECNTPCE",64,0)
 S ECPG=ECPG+1
"RTN","ECNTPCE",65,0)
 Q
"RTN","ECNTPCE",66,0)
 ;
"RTN","ECNTPCE",67,0)
PRT N ECLN,ECDN,ECPAT,ECEC,ECPS,ECDFN,ECUN,ECUN1,ECUN2,ECDTE,ECDT,ECRS,ECDE
"RTN","ECNTPCE",68,0)
 N ECX,ECAT,ECSSN,DFN,VA,VADM
"RTN","ECNTPCE",69,0)
 S ECDTE=0 F  S ECDTE=$O(^TMP("ECNTPCE",$J,ECDTE)) Q:'ECDTE  D  Q:ECOUT
"RTN","ECNTPCE",70,0)
 .S ECDT=$$FMTE^XLFDT(ECDTE,2),ECL=0
"RTN","ECNTPCE",71,0)
 .F  S ECL=$O(^TMP("ECNTPCE",$J,ECDTE,ECL)) Q:'ECL  D  Q:ECOUT
"RTN","ECNTPCE",72,0)
 ..S ECLN=$P($G(^DIC(4,ECL,0)),U),ECLN=$S(ECLN="":"UNKNOWN",1:ECLN),ECD=0
"RTN","ECNTPCE",73,0)
 ..F  S ECD=$O(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD)) Q:'ECD  D  Q:ECOUT
"RTN","ECNTPCE",74,0)
 ...S ECDN=$P($G(^ECD(ECD,0)),U),ECDN=$S(ECDN="":"UNKNOWN",1:ECDN)
"RTN","ECNTPCE",75,0)
 ...S ECDFN=0
"RTN","ECNTPCE",76,0)
 ...F  S ECDFN=$O(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN)) Q:'ECDFN  D  Q:ECOUT
"RTN","ECNTPCE",77,0)
 ....S DFN=ECDFN D DEM^VADPT
"RTN","ECNTPCE",78,0)
 ....S ECPAT=VADM(1),ECSSN=$P($P(VADM(2),U,2),"-",3),ECNT=0
"RTN","ECNTPCE",79,0)
 ....F  S ECNT=$O(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN,ECNT)) Q:'ECNT  D PR2  Q:ECOUT
"RTN","ECNTPCE",80,0)
 Q
"RTN","ECNTPCE",81,0)
 ;
"RTN","ECNTPCE",82,0)
PR2 S ECEC=$G(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN,ECNT))
"RTN","ECNTPCE",83,0)
 S ECUN=$P(ECEC,U,4),ECUN1=$P(ECEC,U,5),ECUN2=$P(ECEC,U,6),ECPS=""
"RTN","ECNTPCE",84,0)
 S ECUN=$S(ECUN:$P($G(^VA(200,ECUN,0)),U),1:"UNKNOWN"),ECFN=$P(ECEC,U)
"RTN","ECNTPCE",85,0)
 S:ECUN1 ECUN1=$P($G(^VA(200,ECUN1,0)),U)
"RTN","ECNTPCE",86,0)
 S:ECUN2 ECUN2=$P($G(^VA(200,ECUN2,0)),U)
"RTN","ECNTPCE",87,0)
 S ECAT=$S($P(ECEC,U,2):$P($G(^EC(726,$P(ECEC,U,2),0)),U),1:"")
"RTN","ECNTPCE",88,0)
 I $P(ECEC,U,3)'="" S ECDE=+$P(ECEC,U,3) D
"RTN","ECNTPCE",89,0)
 .I $P(ECEC,U,3)[";EC" D  Q
"RTN","ECNTPCE",90,0)
 ..S ECPS=$G(^EC(725,+ECDE,0)),ECPS=$P(ECPS,U,2)_" "_$P(ECPS,U)
"RTN","ECNTPCE",91,0)
 .S ECPS=$$CPT^ICPTCOD(ECDE,ECDTE)
"RTN","ECNTPCE",92,0)
 .S ECPS=$S(+ECPS>0:$P(ECPS,U,2)_" "_$P(ECPS,U,3),1:"CPT NAME UNKNOWN")
"RTN","ECNTPCE",93,0)
 S ECRS=^ECH(ECFN,"R")
"RTN","ECNTPCE",94,0)
 W ECDT,?16,$E(ECPAT,1,20),?39,ECSSN,?44,$E(ECUN,1,16),?61,$E($P(ECRS,";"),1,19),!
"RTN","ECNTPCE",95,0)
 W $E(ECLN,1,15),?16,$E(ECPS,1,27),?44,$E(ECUN1,1,16)
"RTN","ECNTPCE",96,0)
 W ?61,$E($P(ECRS,";",2),1,19),!
"RTN","ECNTPCE",97,0)
 W $E(ECDN,1,15),?16,$E(ECAT,1,27),?44,$E(ECUN2,1,16)
"RTN","ECNTPCE",98,0)
 W ?61,$E($P(ECRS,";",3),1,198),!
"RTN","ECNTPCE",99,0)
 I $P(ECRS,";",4)'="" D  W ! Q
"RTN","ECNTPCE",100,0)
 .F ECX=4:1:$L(ECRS,";")-1 W ?61,$E($P(ECRS,";",ECX),1,19),!
"RTN","ECNTPCE",101,0)
 W !
"RTN","ECNTPCE",102,0)
 I ($Y+6)>IOSL D PAGE I ECOUT Q
"RTN","ECNTPCE",103,0)
 Q
"RTN","ECPRSUM1")
0^11^B26520258
"RTN","ECPRSUM1",1,0)
ECPRSUM1 ;BIR/DMA,RHK,JPW-Provider Summary (1, 2, and 3) ;27 Mar 96
"RTN","ECPRSUM1",2,0)
 ;;2.0; EVENT CAPTURE ;**5,18,33,47,62,63,61**;8 May 96
"RTN","ECPRSUM1",3,0)
 S DIC=200,DIC(0)="AQEMZ",DIC("A")="Select Provider: "
"RTN","ECPRSUM1",4,0)
 D ^DIC K DIC G END:Y<0 S ECU=+Y,ECUN=$P(Y,"^",2)
"RTN","ECPRSUM1",5,0)
 D REASON^ECRUTL ;* Prompt to include Procedure Reasons
"RTN","ECPRSUM1",6,0)
BDATE K %DT S %DT="AEX",%DT("A")="Starting with Date: "
"RTN","ECPRSUM1",7,0)
 D ^%DT G:Y<0 END S ECSD=Y
"RTN","ECPRSUM1",8,0)
EDATE K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT G:Y<0 END
"RTN","ECPRSUM1",9,0)
 I Y<ECSD D  G EDATE
"RTN","ECPRSUM1",10,0)
 .W !!,"The ending date cannot be earlier than the starting date.  "
"RTN","ECPRSUM1",11,0)
 .W "Please re-enter",!,"the ending date.",!
"RTN","ECPRSUM1",12,0)
 S ECED=Y,ECDATE=ECSD_"^"_ECED
"RTN","ECPRSUM1",13,0)
DEV ;dev call
"RTN","ECPRSUM1",14,0)
 W !!,"This report is formatted for 132 column output.",!!
"RTN","ECPRSUM1",15,0)
 S %ZIS="Q",%ZIS("A")="Select Device: " D ^%ZIS G END:POP
"RTN","ECPRSUM1",16,0)
 I $D(IO("Q")) K ZTSAVE S (ZTSAVE("ECRY"),ZTSAVE("ECSD"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECU"),ZTSAVE("ECUN"))="",ZTDESC="Event Capture Provider Summary",ZTRTN="EN^ECPRSUM1" D ^%ZTLOAD,HOME^%ZIS K ZTSK G END
"RTN","ECPRSUM1",17,0)
 ;
"RTN","ECPRSUM1",18,0)
EN ;QUEUED ENTRY POINT
"RTN","ECPRSUM1",19,0)
 N ECPG,ECGT,EC,ECCAT,ECPXD,MODI
"RTN","ECPRSUM1",20,0)
 U IO S (ECOUT,ECPG,ECGT(1),ECGT(2),ECGT(3))=0
"RTN","ECPRSUM1",21,0)
 K ^TMP($J) S ECOUT=0,ECSD=ECSD-.1,ECED=ECED+.3
"RTN","ECPRSUM1",22,0)
 F ECD=ECSD:0 S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  F DA=0:0 S DA=$O(^ECH("AC",ECD,DA)) Q:'DA  S EC=$G(^ECH(DA,0)),A(1)=$P(EC,"^",11)=ECU,A(2)=$P(EC,"^",15)=ECU,A(3)=$P(EC,"^",17)=ECU I A(1)!A(2)!A(3) D
"RTN","ECPRSUM1",23,0)
 .S ECPAT=+$P(EC,"^",2),PA=$G(^DPT(ECPAT,0))
"RTN","ECPRSUM1",24,0)
 .S SS=$P(PA,"^",9)
"RTN","ECPRSUM1",25,0)
 .S PA=$S($P(PA,"^")]"":$P(PA,"^"),1:"UNKNOWN")
"RTN","ECPRSUM1",26,0)
 .S ECP=$P(EC,"^",9)
"RTN","ECPRSUM1",27,0)
 .Q:ECP']""
"RTN","ECPRSUM1",28,0)
 .S ECLOC=+$P(EC,U,4)
"RTN","ECPRSUM1",29,0)
 .S ECUNIT=+$P(EC,U,7)
"RTN","ECPRSUM1",30,0)
 .S ECCAT=+$P(EC,U,8)
"RTN","ECPRSUM1",31,0)
 .S ECPSY=+$O(^ECJ("AP",ECLOC,ECUNIT,ECCAT,ECP,""))
"RTN","ECPRSUM1",32,0)
 .S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPRSUM1",33,0)
 .S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPRSUM1",34,0)
 .I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECPRSUM1",35,0)
 .S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECPRSUM1",36,0)
 .I ECCPT'="" D
"RTN","ECPRSUM1",37,0)
 ..S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPXD,"^",2)_" "
"RTN","ECPRSUM1",38,0)
 .I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECPRSUM1",39,0)
 .I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPRSUM1",40,0)
 .S ECPTDS=ECCPT_ECPN_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPRSUM1",41,0)
 .;Get Procedure CPT modifiers
"RTN","ECPRSUM1",42,0)
 .S ECMODF=0 I $O(^ECH(DA,"MOD",0))'="" D
"RTN","ECPRSUM1",43,0)
 ..K ECMOD S ECMODF=$$MOD^ECUTL(DA,"I",.ECMOD)
"RTN","ECPRSUM1",44,0)
 .;
"RTN","ECPRSUM1",45,0)
 .;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPRSUM1",46,0)
 .S ECPRSN=""
"RTN","ECPRSUM1",47,0)
 .S ECLNK=+$P(EC,"^",23)
"RTN","ECPRSUM1",48,0)
 .I +ECLNK>0 DO
"RTN","ECPRSUM1",49,0)
 ..S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPRSUM1",50,0)
 ..S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",51,0)
 ..S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPRSUM1",52,0)
 .S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",53,0)
 .I '$D(ECRY) S ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",54,0)
 .;
"RTN","ECPRSUM1",55,0)
 .;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPRSUM1",56,0)
 .S PRO=ECCPT_ECPN I PRO]"" S V=+$P(EC,"^",10) D
"RTN","ECPRSUM1",57,0)
 ..F J=1,2,3 I A(J) S ^(J)=$G(^TMP($J,PRO,ECPRSN,PA_"^"_SS,J))+V D
"RTN","ECPRSUM1",58,0)
 ...I $G(^TMP($J,PRO))="" S ^TMP($J,PRO)=ECPTDS
"RTN","ECPRSUM1",59,0)
 ..;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPRSUM1",60,0)
 ..S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPRSUM1",61,0)
 ...S ^TMP($J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD)=$G(^TMP($J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD))+V
"RTN","ECPRSUM1",62,0)
 K ECLNK,MOD,ECPTDS
"RTN","ECPRSUM1",63,0)
 ;
"RTN","ECPRSUM1",64,0)
PRINT ;print report
"RTN","ECPRSUM1",65,0)
 S ECSD=$P(ECDATE,"^"),ECED=$P(ECDATE,"^",2)
"RTN","ECPRSUM1",66,0)
 D HDR I '$D(^TMP($J)) W !!,?12,"No Event Capture Provider Summary for "_ECUN_" to report for the date range selected.",!! D PAGE G END
"RTN","ECPRSUM1",67,0)
 S (A(1),A(2),A(3))=0
"RTN","ECPRSUM1",68,0)
 S (ECREAS,PA,PR)=""
"RTN","ECPRSUM1",69,0)
 F  S PR=$O(^TMP($J,PR)),PA="" Q:PR=""  D  Q:ECOUT
"RTN","ECPRSUM1",70,0)
 .W !,^TMP($J,PR)
"RTN","ECPRSUM1",71,0)
 .F  S ECREAS=$O(^TMP($J,PR,ECREAS)) Q:ECREAS=""  D  Q:ECOUT
"RTN","ECPRSUM1",72,0)
 ..F  S PA=$O(^TMP($J,PR,ECREAS,PA)) D:PA="" TOT Q:PA=""  D  Q:ECOUT
"RTN","ECPRSUM1",73,0)
 ...S A=$G(^TMP($J,PR,ECREAS,PA,0))
"RTN","ECPRSUM1",74,0)
 ...W ! W:$D(ECRY) ?5,ECREAS
"RTN","ECPRSUM1",75,0)
 ...W ?37,$P(PA,"^"),?69,$P(PA,"^",2)
"RTN","ECPRSUM1",76,0)
 ...F J=1,2,3 S A=$G(^TMP($J,PR,ECREAS,PA,J)),A(J)=A(J)+A W ?10*J+70,$J(A,5,0) I J=3 I $Y+5>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",77,0)
 ...;print CPT procedure modifiers
"RTN","ECPRSUM1",78,0)
 ...Q:ECOUT  S IEN=""
"RTN","ECPRSUM1",79,0)
 ...F  S IEN=$O(^TMP($J,PR,ECREAS,PA,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPRSUM1",80,0)
 ....S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPRSUM1",81,0)
 ....S MOD=$P(MODI,U,2) I MOD="" Q
"RTN","ECPRSUM1",82,0)
 ....S MODESC=$P(MODI,U,3)  I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPRSUM1",83,0)
 ....S MODAMT=^TMP($J,PR,ECREAS,PA,"MOD",IEN)
"RTN","ECPRSUM1",84,0)
 ....W !?5,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPRSUM1",85,0)
 ....I ($Y+4)>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",86,0)
 ...K MODESC,MOD,MODAMT
"RTN","ECPRSUM1",87,0)
 W !!,?81,"*************************",!,?35,"GRAND TOTAL - PROCEDURES"
"RTN","ECPRSUM1",88,0)
 F J=1,2,3 W ?10*J+70,$J(ECGT(J),5,0)
"RTN","ECPRSUM1",89,0)
 D:'ECOUT PAGE G END
"RTN","ECPRSUM1",90,0)
 ;
"RTN","ECPRSUM1",91,0)
PAGE ; end of page
"RTN","ECPRSUM1",92,0)
 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECPRSUM1",93,0)
 Q
"RTN","ECPRSUM1",94,0)
HDR ;
"RTN","ECPRSUM1",95,0)
 W:$Y @IOF S ECPG=ECPG+1
"RTN","ECPRSUM1",96,0)
 W !!?33,"EVENT CAPTURE PROVIDER SUMMARY FOR ",ECUN,?118,"Page: ",ECPG,!,?33,"FOR THE DATE RANGE ",$$FMTE^XLFDT(ECSD)," TO ",$$FMTE^XLFDT(ECED),!!,"PROCEDURE",?85,"TOTALS AS PROVIDER #",!
"RTN","ECPRSUM1",97,0)
 W:$D(ECRY) "PROCEDURE REASON" W ?40,"PATIENT",?71,"SSN",?84,1,?94,2,?104,3
"RTN","ECPRSUM1",98,0)
 W !,?5,"CPT MODIFIER (Volume of modifiers use)",!
"RTN","ECPRSUM1",99,0)
 F RK=1:1:IOM W "-"
"RTN","ECPRSUM1",100,0)
 W !
"RTN","ECPRSUM1",101,0)
 Q
"RTN","ECPRSUM1",102,0)
 ;
"RTN","ECPRSUM1",103,0)
TOT W !,?81,"-------------------------",!,?35,"TOTAL PROCEDURES"
"RTN","ECPRSUM1",104,0)
 F J=1,2,3 W ?10*J+70,$J(A(J),5,0) S ECGT(J)=ECGT(J)+A(J)
"RTN","ECPRSUM1",105,0)
 W ! S (A(1),A(2),A(3))=0
"RTN","ECPRSUM1",106,0)
 Q
"RTN","ECPRSUM1",107,0)
 ;
"RTN","ECPRSUM1",108,0)
 ;
"RTN","ECPRSUM1",109,0)
END D ^ECKILL K ^TMP($J),ZTSK W @IOF
"RTN","ECPRSUM1",110,0)
 K ^TMP($J) Q:$D(ECGUI)
"RTN","ECPRSUM1",111,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECPRSUM1",112,0)
 D ^%ZISC
"RTN","ECPRSUM1",113,0)
 Q
"RTN","ECRRPC")
0^4^B10912061
"RTN","ECRRPC",1,0)
ECRRPC ;ALB/JAM;Event Capture Report RPC Broker ;Sep 5, 2000
"RTN","ECRRPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,47,61**;8 May 96
"RTN","ECRRPC",3,0)
 ;
"RTN","ECRRPC",4,0)
RPTEN(RESULTS,ECARY) ;RPC Broker entry point for EC Reports
"RTN","ECRRPC",5,0)
 ;All EC GUI reports will call this line tag
"RTN","ECRRPC",6,0)
 ;        RPC: EC REPORTS
"RTN","ECRRPC",7,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECRRPC",8,0)
 ;          ECDEV  - Print to queue, if device
"RTN","ECRRPC",9,0)
 ;          ECQDT  - Queue to print (date/time), optional
"RTN","ECRRPC",10,0)
 ;
"RTN","ECRRPC",11,0)
 ;OUTPUTS  RESULTS - Array of help text in the HELP FRAM File (#9.2)
"RTN","ECRRPC",12,0)
 ;
"RTN","ECRRPC",13,0)
 N HLPDA,HND,ECSTR,ECFILER,ECERR,ECDIRY,ECUFILE,ECGUI
"RTN","ECRRPC",14,0)
 D SETENV^ECUMRPC
"RTN","ECRRPC",15,0)
 S ECERR=0,ECGUI=1 D PARSE,CHKDT I ECERR Q
"RTN","ECRRPC",16,0)
 K ^TMP("ECMSG",$J),^TMP($J,"ECRPT")
"RTN","ECRRPC",17,0)
 D  I ECERR D END Q
"RTN","ECRRPC",18,0)
 . I ECPTYP="D" D HFSOPEN(ECHNDL) Q
"RTN","ECRRPC",19,0)
 . I '$D(ECDEV) S ^TMP("ECMSG",$J,1)="0^Device undefined",ECERR=1
"RTN","ECRRPC",20,0)
 S HND=$P($T(@ECHNDL),";;",2) I HND="" D  Q
"RTN","ECRRPC",21,0)
 . S ^TMP("ECMSG",$J,1)="0^Line Tag undefined" D END
"RTN","ECRRPC",22,0)
 S ECQDT=$G(ECQDT,"NOW"),%DT="XT",X=ECQDT D ^%DT  ;Print time
"RTN","ECRRPC",23,0)
 S ECQDT=$S(Y>0:Y,1:"NOW")
"RTN","ECRRPC",24,0)
 D @$P(HND,";",2)
"RTN","ECRRPC",25,0)
 I ECPTYP="D" D HFSCLOSE(ECFILER) ;S RESULTS=$NA(^TMP($J))
"RTN","ECRRPC",26,0)
END D KILLVAR
"RTN","ECRRPC",27,0)
 I $D(^TMP("ECMSG",$J)) S RESULTS=$NA(^TMP("ECMSG",$J)) Q
"RTN","ECRRPC",28,0)
 S RESULTS=$NA(^TMP($J))
"RTN","ECRRPC",29,0)
 Q
"RTN","ECRRPC",30,0)
 ;
"RTN","ECRRPC",31,0)
PARSE ;Parse data from array for filing
"RTN","ECRRPC",32,0)
 N SUB
"RTN","ECRRPC",33,0)
 S SUB="" F  S SUB=$O(ECARY(SUB)) Q:SUB=""  S @SUB=ECARY(SUB)
"RTN","ECRRPC",34,0)
 Q
"RTN","ECRRPC",35,0)
CHKDT ;Required Data Check
"RTN","ECRRPC",36,0)
 N I,C
"RTN","ECRRPC",37,0)
 S C=1
"RTN","ECRRPC",38,0)
 F I="ECHNDL","ECPTYP" D
"RTN","ECRRPC",39,0)
 .I $G(@I)="" S ^TMP("ECMSG",$J,C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECRRPC",40,0)
 Q
"RTN","ECRRPC",41,0)
KILLVAR ;Kill variables
"RTN","ECRRPC",42,0)
 N SUB
"RTN","ECRRPC",43,0)
 S SUB="" F  S SUB=$O(ECARY(SUB)) Q:SUB=""  K @SUB
"RTN","ECRRPC",44,0)
 K ECARY,POP,ECQDT
"RTN","ECRRPC",45,0)
 Q
"RTN","ECRRPC",46,0)
HFSOPEN(HANDLE) ; 
"RTN","ECRRPC",47,0)
 S ECDIRY=$$GET^XPAR("DIV","EC HFS SCRATCH")
"RTN","ECRRPC",48,0)
 I ECDIRY="" S ECERR=1 D  Q
"RTN","ECRRPC",49,0)
 .S ^TMP("ECMSG",$J,1)="0^A scratch directory for reports doesn't exist"
"RTN","ECRRPC",50,0)
 S ECFILER="EC"_DUZ_".DAT",ECUFILE=ECFILER
"RTN","ECRRPC",51,0)
 D OPEN^%ZISH(HANDLE,ECDIRY,ECFILER,"W") D:POP  Q:POP
"RTN","ECRRPC",52,0)
 .S ECERR=1,^TMP("ECMSG",$J,1)="0^Unable to open file "_ECDIRY_ECFILER
"RTN","ECRRPC",53,0)
 S IOM=132,IOSL=99999,IOST="P-DUMMY",IOF=""""""
"RTN","ECRRPC",54,0)
 Q
"RTN","ECRRPC",55,0)
 ;
"RTN","ECRRPC",56,0)
HFSCLOSE(HANDLE) ; 
"RTN","ECRRPC",57,0)
 N ECDEL
"RTN","ECRRPC",58,0)
 D CLOSE^%ZISH(ECDIRY_HANDLE)
"RTN","ECRRPC",59,0)
 K ^TMP($J)
"RTN","ECRRPC",60,0)
 S ECDEL(ECFILER)=""
"RTN","ECRRPC",61,0)
 S X=$$FTG^%ZISH(ECDIRY,ECFILER,$NAME(^TMP($J,1)),2)
"RTN","ECRRPC",62,0)
 S X=$$DEL^%ZISH(ECDIRY,$NA(ECDEL))
"RTN","ECRRPC",63,0)
 Q
"RTN","ECRRPC",64,0)
ECPAT ;;Patient Summary Report;ECPAT^ECRRPT
"RTN","ECRRPC",65,0)
ECRDSSU ;;DSS Unit Workload Summary;ECRDSSU^ECRRPT
"RTN","ECRRPC",66,0)
ECPROV ;;Provider Summary Report;ECPROV^ECRRPT
"RTN","ECRRPC",67,0)
PROSUM ;;Provider (1-3) Summary Report;PROSUM^ECRRPT
"RTN","ECRRPC",68,0)
ECOSSUM ;;Ordering Section Summary Report;ECOSSUM^ECRRPT
"RTN","ECRRPC",69,0)
ECPCER ;;PCE Data Summary Report;ECPCER^ECRRPT
"RTN","ECRRPC",70,0)
ECRPERS ;;Inactive Person Class Report;ECRPERS^ECRRPT1
"RTN","ECRRPC",71,0)
ECRPRSN ;;Procedure Reason Report;ECRPRSN^ECRRPT1
"RTN","ECRRPC",72,0)
ECDSS1 ;;National/Local Procedure Reports;ECDSS1^ECRRPT1
"RTN","ECRRPC",73,0)
ECDSS3 ;;Category Reports;ECDSS3^ECRRPT1
"RTN","ECRRPC",74,0)
ECSUM ;;Print Category and Procedure Summary (Report);ECSUM^ECRRPT1
"RTN","ECRRPC",75,0)
ECNTPCE ;;Records Failing Transmission to PCE Report;ECNTPCE^ECRRPT1
"RTN","ECRRPT")
0^8^B40916605
"RTN","ECRRPT",1,0)
ECRRPT ;ALB/JAM;Event Capture Report RPC Broker ;Jan 2, 2001
"RTN","ECRRPT",2,0)
 ;;2.0; EVENT CAPTURE ;**25,32,41,56,61**;8 May 96
"RTN","ECRRPT",3,0)
 ;
"RTN","ECRRPT",4,0)
REQCHK(ECV) ;Required data check
"RTN","ECRRPT",5,0)
 N I,C
"RTN","ECRRPT",6,0)
 S C=1
"RTN","ECRRPT",7,0)
 F I=1:1:$L(ECV,U) I '$D(@$P(ECV,U,I)) D
"RTN","ECRRPT",8,0)
 . S ^TMP("ECMSG",$J,C)="0^Required data missing "_$P(ECV,U,I)
"RTN","ECRRPT",9,0)
 . S C=C+1,ECERR=1
"RTN","ECRRPT",10,0)
 Q
"RTN","ECRRPT",11,0)
DATECHK(ECSD,ECED) ;Check human format date and converts to FileMan format
"RTN","ECRRPT",12,0)
 ;    Input  ECSD  - Start Date (ex. 10/9/01)
"RTN","ECRRPT",13,0)
 ;           ECED  - End Date
"RTN","ECRRPT",14,0)
 N ECI,X,Y
"RTN","ECRRPT",15,0)
 S %DT="X" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECRRPT",16,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD),ECED=$S(ECED=-1:DT,1:ECED)
"RTN","ECRRPT",17,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED)
"RTN","ECRRPT",18,0)
 Q
"RTN","ECRRPT",19,0)
QUEUE ;Queues report to printer
"RTN","ECRRPT",20,0)
 N ZTIO,ZTDESC,ZTRTN,ZTDTH,ZTSAVE,%ZIS,I,IOP,POP
"RTN","ECRRPT",21,0)
 S XNAM=$P($G(^%ZIS(1,ECDEV,0)),U,2)
"RTN","ECRRPT",22,0)
 S IOP="Q;`"_ECDEV,%ZIS="Q" D ^%ZIS I POP D  Q
"RTN","ECRRPT",23,0)
 . ;S IOP="Q;"_XNAM,%ZIS="Q" D ^%ZIS I POP D  Q
"RTN","ECRRPT",24,0)
 . S ^TMP("ECMSG",$J,1)="0^Device selection unsuccessful"
"RTN","ECRRPT",25,0)
 S ZTIO=ION,ZTDESC=ECDESC,ZTRTN=ECROU
"RTN","ECRRPT",26,0)
 S ZTDTH=$$FMTH^XLFDT(ECQDT)
"RTN","ECRRPT",27,0)
 ;D NOW^%DTC S ZTDTH=$S(%'<ECQDT:%+.0002,1:ECQDT)
"RTN","ECRRPT",28,0)
 F I=1:1:$L(ECV,U) I $D(@$P(ECV,U,I)) S ZTSAVE($P(ECV,U,I))=""
"RTN","ECRRPT",29,0)
 M ZTSAVE=ECSAVE
"RTN","ECRRPT",30,0)
 D ^%ZTLOAD,HOME^%ZIS,^%ZISC ;K IO("Q")
"RTN","ECRRPT",31,0)
 I $D(ZTSK) S ^TMP("ECMSG",$J)="1^Report queued. Task #"_ZTSK Q
"RTN","ECRRPT",32,0)
 S ^TMP("ECMSG",$J)="0^Task Rejected"
"RTN","ECRRPT",33,0)
 Q
"RTN","ECRRPT",34,0)
 ;
"RTN","ECRRPT",35,0)
ECPAT ;Patient Summary Report for RPC Call
"RTN","ECRRPT",36,0)
 ;     Variables passed in
"RTN","ECRRPT",37,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",38,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",39,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",40,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",41,0)
 ;
"RTN","ECRRPT",42,0)
 ;     Variable return
"RTN","ECRRPT",43,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",44,0)
 N ECDATE,ECPAT,ECV,DIC,X,Y,ECROU,ECDESC
"RTN","ECRRPT",45,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",46,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",47,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",48,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",49,0)
 I $E($G(ECRY))'="Y" K ECRY
"RTN","ECRRPT",50,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",51,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED^ECRY",ECROU="SUM^ECPAT"
"RTN","ECRRPT",52,0)
 . S ECDESC="EVENT CAPTURE PATIENT SUMMARY"
"RTN","ECRRPT",53,0)
 . D QUEUE
"RTN","ECRRPT",54,0)
 D SUM^ECPAT
"RTN","ECRRPT",55,0)
 Q
"RTN","ECRRPT",56,0)
ECRDSSU ;DSS Unit Workload Summary Report
"RTN","ECRRPT",57,0)
 ;     Variables passed in
"RTN","ECRRPT",58,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",59,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",60,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",61,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",62,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",63,0)
 ;
"RTN","ECRRPT",64,0)
 ;     Variable return
"RTN","ECRRPT",65,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",66,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",67,0)
 N ECDATE,ECX,DUZ,DIC,X,Y
"RTN","ECRRPT",68,0)
 S ECV="ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",69,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",70,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",71,0)
 . S DIC=4,DIC(0)="QNMZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",72,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",73,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",74,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0),DUZ=ECDUZ D ALLU^ECRUTL
"RTN","ECRRPT",75,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",76,0)
 . . K DIC S DIC=724,DIC(0)="QNMZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",77,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",78,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",79,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",80,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",81,0)
 . S ECV="ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSU"
"RTN","ECRRPT",82,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",83,0)
 . S ECDESC="DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRRPT",84,0)
 . D QUEUE
"RTN","ECRRPT",85,0)
 D STRPT^ECRDSSU
"RTN","ECRRPT",86,0)
 Q
"RTN","ECRRPT",87,0)
PROSUM ;Provider (1-3) Summary Report for RPC Call
"RTN","ECRRPT",88,0)
 ;     Variables passed in
"RTN","ECRRPT",89,0)
 ;       ECU    - Provider IEN for file #200
"RTN","ECRRPT",90,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",91,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",92,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",93,0)
 ;
"RTN","ECRRPT",94,0)
 ;     Variable return
"RTN","ECRRPT",95,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",96,0)
 N ECV,ECDATE,ECUN,ECROU,ECDESC,DIC,X,Y
"RTN","ECRRPT",97,0)
 S ECV="ECU^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",98,0)
 S DIC=200,DIC(0)="QNZX",X=ECU D ^DIC D:Y<0  Q:Y<0  S ECUN=$P(Y,U,2)
"RTN","ECRRPT",99,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",100,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",101,0)
 I ECRY'="Y" K ECRY
"RTN","ECRRPT",102,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",103,0)
 . S ECV="ECU^ECUN^ECDATE^ECSD^ECED^ECRY"
"RTN","ECRRPT",104,0)
 . S ECROU="EN^ECPRSUM1",ECDESC="Event Capture Provider Summary"
"RTN","ECRRPT",105,0)
 . D QUEUE
"RTN","ECRRPT",106,0)
 D EN^ECPRSUM1
"RTN","ECRRPT",107,0)
 Q
"RTN","ECRRPT",108,0)
ECPROV ;Provider Summary Report for RPC Call
"RTN","ECRRPT",109,0)
 ;     Variables passed in
"RTN","ECRRPT",110,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",111,0)
 ;       ECD    - DSS Unit to report (1 or ALL)
"RTN","ECRRPT",112,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",113,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",114,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",115,0)
 ;       ECDUZ  - User DUZ (ien in #200)
"RTN","ECRRPT",116,0)
 ;
"RTN","ECRRPT",117,0)
 ;     Variable return
"RTN","ECRRPT",118,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",119,0)
 N ECV,ECDN,ECDATE,ECLN,ECSAVE,ECDESC,ECROU,DIC,X,Y,CNT,UNIT
"RTN","ECRRPT",120,0)
 S ECDN="ALL",ECV="ECL^ECD^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",121,0)
 I ECL'="ALL" D  I ECERR Q
"RTN","ECRRPT",122,0)
 . ;The line below was changed by VMP for NOIS ANN-1003-42305
"RTN","ECRRPT",123,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC D:Y<0  Q:Y<0  S ECLN=$P(Y,U,2)
"RTN","ECRRPT",124,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",125,0)
 I ECD'="ALL" K DIC D  I ECERR Q
"RTN","ECRRPT",126,0)
 . S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC D:Y<0  Q:Y<0  S ECDN=$P(Y,U,2)
"RTN","ECRRPT",127,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",128,0)
 I ECD="ALL",'$D(^XUSEC("ECALLU",ECDUZ)) D
"RTN","ECRRPT",129,0)
 . S (ECD,ECDN)="SOME",(X,CNT)=0
"RTN","ECRRPT",130,0)
 . F  S X=$O(^VA(200,ECDUZ,"EC",X)) Q:'X  D
"RTN","ECRRPT",131,0)
 . . S CNT=CNT+1,UNIT=$P(^VA(200,ECDUZ,"EC",X,0),"^")
"RTN","ECRRPT",132,0)
 . . S UNIT(CNT)=UNIT_"^"_$P(^ECD(UNIT,0),"^")
"RTN","ECRRPT",133,0)
 I $E($G(ECRY))'="Y" K ECRY
"RTN","ECRRPT",134,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",135,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999 S:'$D(UNIT) UNIT=""
"RTN","ECRRPT",136,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",137,0)
 . S ECV="ECDATE^ECSD^ECED^ECRY",ECROU="START^ECPROV2"
"RTN","ECRRPT",138,0)
 . S (ECSAVE("ECL*"),ECSAVE("ECD*"),ECSAVE("UNIT*"))=""
"RTN","ECRRPT",139,0)
 . S ECDESC="EVENT CAPTURE PROVIDER SUMMARY"
"RTN","ECRRPT",140,0)
 . D QUEUE
"RTN","ECRRPT",141,0)
 U IO D START^ECPROV2
"RTN","ECRRPT",142,0)
 Q
"RTN","ECRRPT",143,0)
ECOSSUM ;Ordering Section Summary Report for RPC Call
"RTN","ECRRPT",144,0)
 ;     Variables passed in
"RTN","ECRRPT",145,0)
 ;       ECOS   - Ordering Section
"RTN","ECRRPT",146,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",147,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",148,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",149,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",150,0)
 ;       ECDUZ  - User ien (#200)
"RTN","ECRRPT",151,0)
 ;
"RTN","ECRRPT",152,0)
 ;     Variable return
"RTN","ECRRPT",153,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",154,0)
 N ECV,ECI,ECOSN,ECLOC,ECDSSU,ECDATE,ECNT,ECSAVE,ECROU,ECDESC,DUZ,DIC,X,Y
"RTN","ECRRPT",155,0)
 S ECV="ECOS^ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",156,0)
 S DIC=723,DIC(0)="QNMZX",X=ECOS D ^DIC D:Y<0  Q:Y<0  S ECOSN=$P(Y,U,2)
"RTN","ECRRPT",157,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Ordering Section.",ECERR=1
"RTN","ECRRPT",158,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1 Q
"RTN","ECRRPT",159,0)
 . K DIC I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",160,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",161,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",162,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",163,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0),DUZ=ECDUZ D ALLU^ECRUTL
"RTN","ECRRPT",164,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",165,0)
 . . K DIC S DIC=724,DIC(0)="QNMZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",166,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",167,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",168,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",169,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",170,0)
 . S ECV="ECOS^ECSD^ECED^ECOSN",ECROU="START^ECOSSUM"
"RTN","ECRRPT",171,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",172,0)
 . S ECDESC="EC Ordering Section Summary"
"RTN","ECRRPT",173,0)
 . D QUEUE
"RTN","ECRRPT",174,0)
 D START^ECOSSUM
"RTN","ECRRPT",175,0)
 Q
"RTN","ECRRPT",176,0)
ECPCER ;PCE Data Summary Report for RPC Call
"RTN","ECRRPT",177,0)
 ;     Variables passed in
"RTN","ECRRPT",178,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",179,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",180,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",181,0)
 ;
"RTN","ECRRPT",182,0)
 ;     Variable return
"RTN","ECRRPT",183,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",184,0)
 N ECV,ECDATE,ECPAT,ECROU,ECDESC,X,DIC,Y
"RTN","ECRRPT",185,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",186,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC D:Y<0  Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",187,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",188,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",189,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",190,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",191,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED",ECROU="SUM^ECPCER"
"RTN","ECRRPT",192,0)
 . S ECDESC="ECS/PCE PATIENT SUMMARY"
"RTN","ECRRPT",193,0)
 . D QUEUE
"RTN","ECRRPT",194,0)
 D SUM^ECPCER
"RTN","ECRRPT",195,0)
 Q
"RTN","ECRRPT1")
0^2^B33008688
"RTN","ECRRPT1",1,0)
ECRRPT1 ;ALB/JAM;Event Capture Report RPC Broker ;Jan 2, 2001
"RTN","ECRRPT1",2,0)
 ;;2.0; EVENT CAPTURE ;**25,32,33,61**;8 May 96
"RTN","ECRRPT1",3,0)
 ;
"RTN","ECRRPT1",4,0)
ECRPRSN ;Procedure Reason Report for RPC Call
"RTN","ECRRPT1",5,0)
 ;     Variables passed in
"RTN","ECRRPT1",6,0)
 ;       ECSD     - Start Date or Report
"RTN","ECRRPT1",7,0)
 ;       ECED     - End Date or Report
"RTN","ECRRPT1",8,0)
 ;       ECL      - Location to report (1 or ALL)
"RTN","ECRRPT1",9,0)
 ;       ECD0..n  - DSS Unit to report (1,some or ALL)
"RTN","ECRRPT1",10,0)
 ;       ECRY0..n - Procedure reason (some or ALL)
"RTN","ECRRPT1",11,0)
 ;
"RTN","ECRRPT1",12,0)
 ;     Variable return
"RTN","ECRRPT1",13,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",14,0)
 N ECV,ECI,ECLOC,ECDSSU,ECDN,ECDATE,ECUN,ECNT,ECKEY,ECX,DUZ,ECLINK,ECZ
"RTN","ECRRPT1",15,0)
 N ECROU,ECSAVE,ECDESC,ECW,DIC,X,Y
"RTN","ECRRPT1",16,0)
 S ECV="ECL^ECD0^ECSD^ECED^ECRY0" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",17,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",18,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT1",19,0)
 . S DIC=4,DIC(0)="QNMZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT1",20,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",21,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT1",22,0)
 . . I '$D(ECDUZ) Q
"RTN","ECRRPT1",23,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0),DUZ=ECDUZ D ALLU^ECRUTL
"RTN","ECRRPT1",24,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT1",25,0)
 . . K DIC S DIC=724,DIC(0)="QNMZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT1",26,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT1",27,0)
 S ECX=0 D
"RTN","ECRRPT1",28,0)
 .I ECRY0="ALL" D PXREAS Q
"RTN","ECRRPT1",29,0)
 .N TLOC,TDSS,ECY
"RTN","ECRRPT1",30,0)
 .S ECI=0 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  S TLOC(+ECLOC(ECI))=""
"RTN","ECRRPT1",31,0)
 .S ECI=0 F  S ECI=$O(ECDSSU(ECI)) Q:'ECI  S TDSS(+ECDSSU(ECI))=""
"RTN","ECRRPT1",32,0)
 .S ECI=0 F ECI=0:1 S ECZ="ECRY"_ECI Q:'$D(@ECZ)  D
"RTN","ECRRPT1",33,0)
 ..S ECW=0 F  S ECW=$O(^ECL("B",@ECZ,ECW)) Q:'ECW  D
"RTN","ECRRPT1",34,0)
 ...S ECY=$P($G(^ECL(ECW,0)),U,2) Q:ECY=""  S ECJ=$P($G(^ECJ(ECY,0)),U)
"RTN","ECRRPT1",35,0)
 ...Q:ECJ=""  Q:'$D(TLOC($P(ECJ,"-")))  Q:'$D(TDSS($P(ECJ,"-",2)))
"RTN","ECRRPT1",36,0)
 ...S ECLINK(ECW)=$P($G(^ECL(ECW,0)),U)
"RTN","ECRRPT1",37,0)
 D DATECHK^ECRRPT(.ECSD,.ECED) S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT1",38,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",39,0)
 . S ECV="ECSD^ECED",ECROU="START^ECRPRSN"
"RTN","ECRRPT1",40,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("),ECSAVE("ECLINK("))=""
"RTN","ECRRPT1",41,0)
 . S ECDESC="EC Procedure Reason Report"
"RTN","ECRRPT1",42,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",43,0)
 D START^ECRPRSN,EXIT^ECRPRSN
"RTN","ECRRPT1",44,0)
 Q
"RTN","ECRRPT1",45,0)
PXREAS ;Procedure reason link
"RTN","ECRRPT1",46,0)
 N ECZ,ECX,ECY,ECV
"RTN","ECRRPT1",47,0)
 S ECX=0 F  S ECX=$O(ECLOC(ECX)) Q:'ECX  S ECY=0 D
"RTN","ECRRPT1",48,0)
 . F  S ECY=$O(ECDSSU(ECY)) Q:'ECY  S ECV=+ECLOC(ECX)_"-"_+ECDSSU(ECY) D
"RTN","ECRRPT1",49,0)
 . . S ECZ=ECV_"-0-0"
"RTN","ECRRPT1",50,0)
 . . F  S ECZ=$O(^ECJ("B",ECZ)) Q:('ECZ)!($P(ECZ,"-",1,2)'=ECV)  D
"RTN","ECRRPT1",51,0)
 . . . S ECW=$O(^ECJ("B",ECZ,"")) Q:ECW=""  D REALNK
"RTN","ECRRPT1",52,0)
 Q
"RTN","ECRRPT1",53,0)
REALNK ;Reason link
"RTN","ECRRPT1",54,0)
 N XX,YY,ZZ
"RTN","ECRRPT1",55,0)
 S XX=0 F  S XX=$O(^ECL("AD",ECW,XX)) Q:'XX  S YY=0 D
"RTN","ECRRPT1",56,0)
 . F  S YY=$O(^ECL("AD",ECW,XX,YY)) Q:'YY  D
"RTN","ECRRPT1",57,0)
 . . Q:$G(^ECL(YY,0))=""  S ECLINK(YY)=XX
"RTN","ECRRPT1",58,0)
 Q
"RTN","ECRRPT1",59,0)
ECRPERS ;Inactive Person Class Report for RPC Call
"RTN","ECRRPT1",60,0)
 ;     Variables passed in
"RTN","ECRRPT1",61,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT1",62,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT1",63,0)
 ;       ECSORT - Sort by Patient (P) or Provider (R)
"RTN","ECRRPT1",64,0)
 ;
"RTN","ECRRPT1",65,0)
 ;     Variable return
"RTN","ECRRPT1",66,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",67,0)
 N ECV,ECDATE,ECBEGIN,ECEND,ECROU,ECDESC
"RTN","ECRRPT1",68,0)
 S ECV="ECSD^ECED^ECSORT" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",69,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT1",70,0)
 S ECBEGIN=ECSD-.0001,ECEND=ECED+.9999
"RTN","ECRRPT1",71,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",72,0)
 . S ECV="ECBEGIN^ECEND^ECSORT",ECROU="START^ECRPCLS"
"RTN","ECRRPT1",73,0)
 . S ECDESC="EC Invalid Provider Report"
"RTN","ECRRPT1",74,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",75,0)
 D START^ECRPCLS
"RTN","ECRRPT1",76,0)
 Q
"RTN","ECRRPT1",77,0)
ECDSS1 ;National/Local Procedure Reports for RPC Call
"RTN","ECRRPT1",78,0)
 ;     Variables passed in
"RTN","ECRRPT1",79,0)
 ;       ECRTN    - Procedure Report (A-active or I-inactive)
"RTN","ECRRPT1",80,0)
 ;    If ECRTN=A, also
"RTN","ECRRPT1",81,0)
 ;       ECRN     - Preferred Report (N-ational, L-ocal or Both)
"RTN","ECRRPT1",82,0)
 ;       ECRD     - Sort Method (P-rocedure Name, N-ational Number)
"RTN","ECRRPT1",83,0)
 ;
"RTN","ECRRPT1",84,0)
 ;     Variable return
"RTN","ECRRPT1",85,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",86,0)
 N ECV,ECDESC,ECROU,DQTIME
"RTN","ECRRPT1",87,0)
 S ECV=$S($G(ECRTN)="A":"ECRTN^ECRN^ECRD",1:"ECRTN")
"RTN","ECRRPT1",88,0)
 D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",89,0)
 S DQTIME=ECQDT
"RTN","ECRRPT1",90,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",91,0)
 . S ECV="ECRTN^ECRN^ECRD",ECROU=$S(ECRTN="I":"LISTI",1:"PRT")_"^ECDSS1"
"RTN","ECRRPT1",92,0)
 . S ECDESC="Event Capture National Procedure Report",ECDIP=1
"RTN","ECRRPT1",93,0)
 . ;S ECSAVE("IO*")=""
"RTN","ECRRPT1",94,0)
 .D QUEDIP D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1")
"RTN","ECRRPT1",95,0)
 D CLOSE^%ZISH(ECDIRY_ECFILER)
"RTN","ECRRPT1",96,0)
 S %ZIS("HFSNAME")=ECDIRY_ECFILER,%ZIS("HFSMODE")="W",IOP="HFS"
"RTN","ECRRPT1",97,0)
 D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1")
"RTN","ECRRPT1",98,0)
 Q
"RTN","ECRRPT1",99,0)
ECDSS3 ;Category Reports for RPC Call
"RTN","ECRRPT1",100,0)
 ;     Variables passed in
"RTN","ECRRPT1",101,0)
 ;       ECRTN    - Category Procedure Report 
"RTN","ECRRPT1",102,0)
 ;                  (A-active, I-inactive or B-oth)
"RTN","ECRRPT1",103,0)
 ;
"RTN","ECRRPT1",104,0)
 ;     Variable return
"RTN","ECRRPT1",105,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",106,0)
 N ECV,ECDIP,DQTIME
"RTN","ECRRPT1",107,0)
 S ECV="ECRTN" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",108,0)
 S DQTIME=ECQDT
"RTN","ECRRPT1",109,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",110,0)
 . S ECV="ECRTN",ECROU="PRINT^ECDSS3"
"RTN","ECRRPT1",111,0)
 . S ECDESC="Event Capture Category Reports"
"RTN","ECRRPT1",112,0)
 . D QUEDIP D PRINT^ECDSS3
"RTN","ECRRPT1",113,0)
 D CLOSE^%ZISH(ECDIRY_ECFILER)
"RTN","ECRRPT1",114,0)
 S %ZIS("HFSNAME")=ECDIRY_ECFILER,%ZIS("HFSMODE")="W",IOP="HFS"
"RTN","ECRRPT1",115,0)
 D PRINT^ECDSS3
"RTN","ECRRPT1",116,0)
 Q
"RTN","ECRRPT1",117,0)
QUEDIP ;Queue when using DIP
"RTN","ECRRPT1",118,0)
 N DIC,X,Y
"RTN","ECRRPT1",119,0)
 D  I Y=-1 S ECERR=1 Q
"RTN","ECRRPT1",120,0)
 . S DIC(0)="MN",X=ECDEV,DIC="^%ZIS(1," D ^DIC
"RTN","ECRRPT1",121,0)
 . S:+Y>0 IOP="Q;"_$P(Y,U,2)
"RTN","ECRRPT1",122,0)
 . S Y=ECQDT X ^DD("DD") S DQTIME=Y
"RTN","ECRRPT1",123,0)
 Q
"RTN","ECRRPT1",124,0)
ECSUM ;Print Category and Procedure Summary (Report) for RPC Call
"RTN","ECRRPT1",125,0)
 ;     Variables passed in
"RTN","ECRRPT1",126,0)
 ;       ECL      - Location to report (1)
"RTN","ECRRPT1",127,0)
 ;       ECD      - DSS Unit to report (1 or ALL), If ECD'="ALL" then ECC
"RTN","ECRRPT1",128,0)
 ;       ECC      - Category (1 or ALL) (optional)
"RTN","ECRRPT1",129,0)
 ;       ECRTN    - Event Code Screen (Active, Inactive or Both)
"RTN","ECRRPT1",130,0)
 ;
"RTN","ECRRPT1",131,0)
 ;     Variable return
"RTN","ECRRPT1",132,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",133,0)
 N ECV,ECDN,ECCN,ECROU,ECSAVE,ECDESC,ECLN,ECS,ECJLP,ECSN,ECALL,DIC,X,Y
"RTN","ECRRPT1",134,0)
 N ECSCN
"RTN","ECRRPT1",135,0)
 S (ECJLP,ECALL)=0,ECV="ECL^ECD^ECRTN" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",136,0)
 S DIC=4,DIC(0)="QNMZX",X=ECL D ^DIC D:Y<0  Q:ECERR  S ECLN=$P(Y,U,2)
"RTN","ECRRPT1",137,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT1",138,0)
 S ECSCN=ECRTN D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",139,0)
 . I ECD="ALL" S ECALL=1 Q
"RTN","ECRRPT1",140,0)
 . K DIC S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",141,0)
 . S ECDN=$P(Y,U,2)_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECRRPT1",142,0)
 . S ECS=+$P(^ECD(ECD,0),"^",2),ECJLP=+$P(^(0),"^",11)
"RTN","ECRRPT1",143,0)
 . S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECRRPT1",144,0)
 . I 'ECJLP S ECC=0,ECCN="None"
"RTN","ECRRPT1",145,0)
 I ECALL D PXRUN Q
"RTN","ECRRPT1",146,0)
 S ECV="ECC" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",147,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid Category." Q
"RTN","ECRRPT1",148,0)
 . I (ECC="ALL")!(ECC=0) Q
"RTN","ECRRPT1",149,0)
 . K DIC S DIC=726,DIC(0)="QNMZX",X=ECC D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",150,0)
 . S ECCN=$P(Y,U,2)
"RTN","ECRRPT1",151,0)
PXRUN I ECPTYP="P" D  Q
"RTN","ECRRPT1",152,0)
 . S ECV="ECL^ECLN^ECALL^ECSCN",ECROU="START^ECSUM"
"RTN","ECRRPT1",153,0)
 . I 'ECALL S ECV=ECV_"^ECD^ECC^ECLN^ECSN^ECDN^ECJLP^ECCN^ECSCN"
"RTN","ECRRPT1",154,0)
 . S ECDESC="EC Print Category and Procedure Summary"
"RTN","ECRRPT1",155,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",156,0)
 U IO D START^ECSUM
"RTN","ECRRPT1",157,0)
 Q
"RTN","ECRRPT1",158,0)
ECNTPCE ;ECS Records Failing Transmission to PCE
"RTN","ECRRPT1",159,0)
 ;     Variables passed in
"RTN","ECRRPT1",160,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT1",161,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT1",162,0)
 ;
"RTN","ECRRPT1",163,0)
 ;     Variable return
"RTN","ECRRPT1",164,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",165,0)
 N ECV,ECDATE,ECROU,ECDESC
"RTN","ECRRPT1",166,0)
 S ECV="ECSD^ECED" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",167,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT1",168,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT1",169,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",170,0)
 . S ECV="ECSD^ECED",ECROU="START^ECNTPCE"
"RTN","ECRRPT1",171,0)
 . S ECDESC="ECS Records Failing Transmission to PCE Report"
"RTN","ECRRPT1",172,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",173,0)
 D START^ECNTPCE
"RTN","ECRRPT1",174,0)
 Q
"RTN","ECU1RPC")
0^9^B19527731
"RTN","ECU1RPC",1,0)
ECU1RPC ;ALB/ACS;Event Capture Spreadsheet Utilities ;07 Aug 01
"RTN","ECU1RPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,30,49,61**;8 May 96
"RTN","ECU1RPC",3,0)
 ;
"RTN","ECU1RPC",4,0)
 ;-----------------------------------------------------------------------
"RTN","ECU1RPC",5,0)
 ;
"RTN","ECU1RPC",6,0)
 ;INPUT     ECDATA  - Contains column headers or a row of Event Capture
"RTN","ECU1RPC",7,0)
 ;                    spreadshet data
"RTN","ECU1RPC",8,0)
 ;
"RTN","ECU1RPC",9,0)
 ;
"RTN","ECU1RPC",10,0)
 ;OTHER     ^TMP($J,"COLS" array will store the column header order
"RTN","ECU1RPC",11,0)
 ;
"RTN","ECU1RPC",12,0)
 ;-----------------------------------------------------------------------
"RTN","ECU1RPC",13,0)
 ;=======================================================================
"RTN","ECU1RPC",14,0)
 ;MODIFICATIONS:
"RTN","ECU1RPC",15,0)
 ;
"RTN","ECU1RPC",16,0)
 ;08/2001    EC*2.0*30   Changed column header from 'Station' to
"RTN","ECU1RPC",17,0)
 ;                       'Location'.
"RTN","ECU1RPC",18,0)
 ;=======================================================================
"RTN","ECU1RPC",19,0)
 ;
"RTN","ECU1RPC",20,0)
ECHDRS(ECDATA) ;
"RTN","ECU1RPC",21,0)
 ;
"RTN","ECU1RPC",22,0)
 ;--kill temporary file
"RTN","ECU1RPC",23,0)
 K ^TMP($J,"COLS")
"RTN","ECU1RPC",24,0)
 N PIECENUM,NUMCOLS
"RTN","ECU1RPC",25,0)
 ;
"RTN","ECU1RPC",26,0)
 ; --Set up column header order
"RTN","ECU1RPC",27,0)
 S NUMCOLS=$L(ECDATA,U)
"RTN","ECU1RPC",28,0)
 ;
"RTN","ECU1RPC",29,0)
 ; --Remove first piece "COLHEADERS" from colum header string--
"RTN","ECU1RPC",30,0)
 S ECDATA=$P(ECDATA,U,2,NUMCOLS)
"RTN","ECU1RPC",31,0)
 S NUMCOLS=$L(ECDATA,U)
"RTN","ECU1RPC",32,0)
 ;
"RTN","ECU1RPC",33,0)
 ; --Spin through each piece in string and assign 'piece' value 
"RTN","ECU1RPC",34,0)
 F PIECENUM=1:1 Q:PIECENUM>NUMCOLS  D
"RTN","ECU1RPC",35,0)
 . S DATA=$P(ECDATA,U,PIECENUM)
"RTN","ECU1RPC",36,0)
 . I DATA["Record Num" S ECRECPC=PIECENUM Q
"RTN","ECU1RPC",37,0)
 . I DATA["Location" S ECSTAPC=PIECENUM Q
"RTN","ECU1RPC",38,0)
 . I DATA["SSN" S ECSSNPC=PIECENUM Q
"RTN","ECU1RPC",39,0)
 . I DATA["Pat LName" S ECPATLPC=PIECENUM Q
"RTN","ECU1RPC",40,0)
 . I DATA["Pat FName" S ECPATFPC=PIECENUM Q
"RTN","ECU1RPC",41,0)
 . I DATA["Unit Name" S ECDSSPC=PIECENUM Q
"RTN","ECU1RPC",42,0)
 . I DATA["Unit Num" S ECDCMPC=PIECENUM Q
"RTN","ECU1RPC",43,0)
 . I DATA["Unit IEN" S ECUNITPC=PIECENUM Q
"RTN","ECU1RPC",44,0)
 . I DATA["Proc" S ECPROCPC=PIECENUM Q
"RTN","ECU1RPC",45,0)
 . I DATA["Volume" S ECVOLPC=PIECENUM Q
"RTN","ECU1RPC",46,0)
 . I DATA["Ordering Sect" S ECOSPC=PIECENUM Q
"RTN","ECU1RPC",47,0)
 . I DATA["Prov" S ECPRVLPC=PIECENUM Q
"RTN","ECU1RPC",48,0)
 . I DATA["Date/Time" S ECENCPC=PIECENUM Q
"RTN","ECU1RPC",49,0)
 . I DATA["Category" S ECCATPC=PIECENUM Q
"RTN","ECU1RPC",50,0)
 . I DATA["Diag" S ECDXPC=PIECENUM Q
"RTN","ECU1RPC",51,0)
 . I DATA["Assoc Clin" S ECCLNPC=PIECENUM Q
"RTN","ECU1RPC",52,0)
 . ;
"RTN","ECU1RPC",53,0)
 . I DATA["Pat Stat" S ECPSTATV=+DATA Q
"RTN","ECU1RPC",54,0)
 . I DATA["Override Deceased" S ECDECPAT=+DATA Q
"RTN","ECU1RPC",55,0)
 . I DATA["Override Duplicate" S ECFILDUP=+DATA
"RTN","ECU1RPC",56,0)
 ; 
"RTN","ECU1RPC",57,0)
 ;--Move column header piece numbers into Temp file ^TMP($J,"COLS")
"RTN","ECU1RPC",58,0)
 ;   for future reference
"RTN","ECU1RPC",59,0)
 ;
"RTN","ECU1RPC",60,0)
 K ^TMP($J,"COLS")
"RTN","ECU1RPC",61,0)
 S ^TMP($J,"COLS","ECRECPC")=ECRECPC
"RTN","ECU1RPC",62,0)
 S ^TMP($J,"COLS","ECSTAPC")=ECSTAPC
"RTN","ECU1RPC",63,0)
 S ^TMP($J,"COLS","ECSSNPC")=ECSSNPC
"RTN","ECU1RPC",64,0)
 S ^TMP($J,"COLS","ECPATLPC")=ECPATLPC
"RTN","ECU1RPC",65,0)
 S ^TMP($J,"COLS","ECPATFPC")=ECPATFPC
"RTN","ECU1RPC",66,0)
 S ^TMP($J,"COLS","ECDSSPC")=ECDSSPC
"RTN","ECU1RPC",67,0)
 S ^TMP($J,"COLS","ECDCMPC")=ECDCMPC
"RTN","ECU1RPC",68,0)
 S ^TMP($J,"COLS","ECUNITPC")=ECUNITPC
"RTN","ECU1RPC",69,0)
 S ^TMP($J,"COLS","ECPROCPC")=ECPROCPC
"RTN","ECU1RPC",70,0)
 S ^TMP($J,"COLS","ECVOLPC")=ECVOLPC
"RTN","ECU1RPC",71,0)
 S ^TMP($J,"COLS","ECOSPC")=ECOSPC
"RTN","ECU1RPC",72,0)
 S ^TMP($J,"COLS","ECPRVLPC")=ECPRVLPC
"RTN","ECU1RPC",73,0)
 S ^TMP($J,"COLS","ECENCPC")=ECENCPC
"RTN","ECU1RPC",74,0)
 S ^TMP($J,"COLS","ECCATPC")=ECCATPC
"RTN","ECU1RPC",75,0)
 S ^TMP($J,"COLS","ECDXPC")=ECDXPC
"RTN","ECU1RPC",76,0)
 S ^TMP($J,"COLS","ECCLNPC")=ECCLNPC
"RTN","ECU1RPC",77,0)
 S ^TMP($J,"COLS","ECPSTATV")=ECPSTATV
"RTN","ECU1RPC",78,0)
 S ^TMP($J,"COLS","ECDECPAT")=ECDECPAT
"RTN","ECU1RPC",79,0)
 S ^TMP($J,"COLS","ECFILDUP")=ECFILDUP
"RTN","ECU1RPC",80,0)
 ;
"RTN","ECU1RPC",81,0)
 Q
"RTN","ECU1RPC",82,0)
 ;
"RTN","ECU1RPC",83,0)
GETDATA(ECDATA) ;
"RTN","ECU1RPC",84,0)
 ;
"RTN","ECU1RPC",85,0)
 ;--Get data piece numbers and uploaded data values
"RTN","ECU1RPC",86,0)
 S ECRECPC=$G(^TMP($J,"COLS","ECRECPC"))
"RTN","ECU1RPC",87,0)
 S ECRECV=$P(ECDATA,U,ECRECPC)
"RTN","ECU1RPC",88,0)
 ;
"RTN","ECU1RPC",89,0)
 S ECSTAPC=$G(^TMP($J,"COLS","ECSTAPC"))
"RTN","ECU1RPC",90,0)
 S ECSTAV=$P(ECDATA,U,ECSTAPC)
"RTN","ECU1RPC",91,0)
 ;
"RTN","ECU1RPC",92,0)
 S ECSSNPC=$G(^TMP($J,"COLS","ECSSNPC"))
"RTN","ECU1RPC",93,0)
 I ECSSNPC S ECSSNV=$P(ECDATA,U,ECSSNPC)
"RTN","ECU1RPC",94,0)
 ;
"RTN","ECU1RPC",95,0)
 S ECPATLPC=$G(^TMP($J,"COLS","ECPATLPC"))
"RTN","ECU1RPC",96,0)
 S ECPATLV=$P(ECDATA,U,ECPATLPC)
"RTN","ECU1RPC",97,0)
 ;
"RTN","ECU1RPC",98,0)
 S ECPATFPC=$G(^TMP($J,"COLS","ECPATFPC"))
"RTN","ECU1RPC",99,0)
 S ECPATFV=$P(ECDATA,U,ECPATFPC)
"RTN","ECU1RPC",100,0)
 ; --concatenate patient name into one string, comma separated
"RTN","ECU1RPC",101,0)
 S ECPATV=ECPATLV_","_ECPATFV
"RTN","ECU1RPC",102,0)
 ;
"RTN","ECU1RPC",103,0)
 S ECDSSPC=$G(^TMP($J,"COLS","ECDSSPC"))
"RTN","ECU1RPC",104,0)
 S ECDSSV=$P(ECDATA,U,ECDSSPC)
"RTN","ECU1RPC",105,0)
 ;
"RTN","ECU1RPC",106,0)
 S ECDCMPC=$G(^TMP($J,"COLS","ECDCMPC"))
"RTN","ECU1RPC",107,0)
 S ECDCMV=$P(ECDATA,U,ECDCMPC)
"RTN","ECU1RPC",108,0)
 ;
"RTN","ECU1RPC",109,0)
 S ECUNITPC=$G(^TMP($J,"COLS","ECUNITPC"))
"RTN","ECU1RPC",110,0)
 S ECUNITV=$P(ECDATA,U,ECUNITPC)
"RTN","ECU1RPC",111,0)
 ;
"RTN","ECU1RPC",112,0)
 S ECPROCPC=$G(^TMP($J,"COLS","ECPROCPC"))
"RTN","ECU1RPC",113,0)
 S ECPROCV=$P(ECDATA,U,ECPROCPC)
"RTN","ECU1RPC",114,0)
 ;
"RTN","ECU1RPC",115,0)
 S ECVOLPC=$G(^TMP($J,"COLS","ECVOLPC"))
"RTN","ECU1RPC",116,0)
 S ECVOLV=$P(ECDATA,U,ECVOLPC)
"RTN","ECU1RPC",117,0)
 ;
"RTN","ECU1RPC",118,0)
 S ECOSPC=$G(^TMP($J,"COLS","ECOSPC"))
"RTN","ECU1RPC",119,0)
 S ECOSV=$P(ECDATA,U,ECOSPC)
"RTN","ECU1RPC",120,0)
 ;
"RTN","ECU1RPC",121,0)
 S ECPRVLPC=$G(^TMP($J,"COLS","ECPRVLPC"))
"RTN","ECU1RPC",122,0)
 S ECPROVV=$P(ECDATA,U,ECPRVLPC)
"RTN","ECU1RPC",123,0)
 ;
"RTN","ECU1RPC",124,0)
 S ECENCPC=$G(^TMP($J,"COLS","ECENCPC"))
"RTN","ECU1RPC",125,0)
 S ECENCV=$P(ECDATA,U,ECENCPC),ECENCV=$TR(ECENCV," ","")
"RTN","ECU1RPC",126,0)
 ;
"RTN","ECU1RPC",127,0)
 S ECCATPC=$G(^TMP($J,"COLS","ECCATPC"))
"RTN","ECU1RPC",128,0)
 S ECCATV=$P(ECDATA,U,ECCATPC)
"RTN","ECU1RPC",129,0)
 ;
"RTN","ECU1RPC",130,0)
 S ECDXPC=$G(^TMP($J,"COLS","ECDXPC"))
"RTN","ECU1RPC",131,0)
 S ECDXV=$P(ECDATA,U,ECDXPC)
"RTN","ECU1RPC",132,0)
 ;
"RTN","ECU1RPC",133,0)
 S ECCLNPC=$G(^TMP($J,"COLS","ECCLNPC"))
"RTN","ECU1RPC",134,0)
 S ECCLNV=$P(ECDATA,U,ECCLNPC)
"RTN","ECU1RPC",135,0)
 ;
"RTN","ECU1RPC",136,0)
 S ECPSTATV=$G(^TMP($J,"COLS","ECPSTATV"))
"RTN","ECU1RPC",137,0)
 ;
"RTN","ECU1RPC",138,0)
 S ECDECPAT=$G(^TMP($J,"COLS","ECDECPAT"))
"RTN","ECU1RPC",139,0)
 ;
"RTN","ECU1RPC",140,0)
 S ECFILDUP=$G(^TMP($J,"COLS","ECFILDUP"))
"RTN","ECU1RPC",141,0)
 ;
"RTN","ECU1RPC",142,0)
END Q
"RTN","ECV1RPC")
0^10^B7956996
"RTN","ECV1RPC",1,0)
ECV1RPC ;ALB/ACS;Event Capture Spreadsheet Upload Broker Utilities ;13 Oct 00
"RTN","ECV1RPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,33,49,61**;8 May 96
"RTN","ECV1RPC",3,0)
 ;
"RTN","ECV1RPC",4,0)
IN(RESULTS,ECDATA) ;
"RTN","ECV1RPC",5,0)
 ;-----------------------------------------------------------------------
"RTN","ECV1RPC",6,0)
 ;This broker entry point receives a row of data from the Event
"RTN","ECV1RPC",7,0)
 ;Capture GUI Spreadsheet (a module of the Event Capture GUI app).
"RTN","ECV1RPC",8,0)
 ;The data is validated and an array is returned to the spreadsheet
"RTN","ECV1RPC",9,0)
 ;module.
"RTN","ECV1RPC",10,0)
 ;
"RTN","ECV1RPC",11,0)
 ;          RPC: EC VALIDATE SPREADSHEET DATA
"RTN","ECV1RPC",12,0)
 ;
"RTN","ECV1RPC",13,0)
 ;INPUT     ECDATA  - Contains either the column headers or a row of
"RTN","ECV1RPC",14,0)
 ;                    spreadshet data.  Fields included are:
"RTN","ECV1RPC",15,0)
 ;                    Record number, station, SSN, patient last
"RTN","ECV1RPC",16,0)
 ;                    name, patient first name, DSS unit IEN, DSS
"RTN","ECV1RPC",17,0)
 ;                    unit number, DSS unit name, procedure code,
"RTN","ECV1RPC",18,0)
 ;                    volume, ordering section, provider last name,
"RTN","ECV1RPC",19,0)
 ;                    provider first name, encounter date/time,
"RTN","ECV1RPC",20,0)
 ;                    event code category, diag code, associated clinic,
"RTN","ECV1RPC",21,0)
 ;                    patient status override flag, override deceased
"RTN","ECV1RPC",22,0)
 ;                    flag and file duplicate(s) flag.
"RTN","ECV1RPC",23,0)
 ;
"RTN","ECV1RPC",24,0)
 ;OUTPUT    RESULTS - If an error is found during data validation,
"RTN","ECV1RPC",25,0)
 ;                    then the output contains an array of error
"RTN","ECV1RPC",26,0)
 ;                    messages:
"RTN","ECV1RPC",27,0)
 ;
"RTN","ECV1RPC",28,0)
 ;                    PIECE     Description
"RTN","ECV1RPC",29,0)
 ;                    -----     ------------------------
"RTN","ECV1RPC",30,0)
 ;                      1       Record number
"RTN","ECV1RPC",31,0)
 ;                      2       Column number (on spreadsheet)
"RTN","ECV1RPC",32,0)
 ;                              containing the record number
"RTN","ECV1RPC",33,0)
 ;                      3       Column number (on spreadsheet)
"RTN","ECV1RPC",34,0)
 ;                              containing the data in error
"RTN","ECV1RPC",35,0)
 ;                      4       Error message
"RTN","ECV1RPC",36,0)
 ;
"RTN","ECV1RPC",37,0)
 ;                  - If no errors are found during data validation,
"RTN","ECV1RPC",38,0)
 ;                    then the output contains a string of Event
"RTN","ECV1RPC",39,0)
 ;                    Capture data for that patient, beginning with
"RTN","ECV1RPC",40,0)
 ;                    the string "NO ERRORS":
"RTN","ECV1RPC",41,0)
 ;
"RTN","ECV1RPC",42,0)
 ;                    "NO ERRORS"^Patient SSN IEN^Encounter Date/Time^
"RTN","ECV1RPC",43,0)
 ;                    Station IEN^DSS Unit IEN^0^Procedure^Volume^
"RTN","ECV1RPC",44,0)
 ;                    Provider IEN^Ordering Section IEN^Provider IEN^
"RTN","ECV1RPC",45,0)
 ;                    Patient Status^
"RTN","ECV1RPC",46,0)
 ;                 
"RTN","ECV1RPC",47,0)
 ;OTHER     ^TMP($J,"COLS") will store the column/data order
"RTN","ECV1RPC",48,0)
 ;          (used as data 'piece') of the input data string.
"RTN","ECV1RPC",49,0)
 ;          For example:
"RTN","ECV1RPC",50,0)
 ;
"RTN","ECV1RPC",51,0)
 ;          ^TMP($J,"COLS","ECRECPC")=1   => Record number is 1st piece
"RTN","ECV1RPC",52,0)
 ;          ^TMP($J,"COLS","ECSTAPC")=2   => Station is 2nd piece
"RTN","ECV1RPC",53,0)
 ;
"RTN","ECV1RPC",54,0)
 ;SPECIAL PROCESSING
"RTN","ECV1RPC",55,0)
 ;          An exception to the above described output exists when no
"RTN","ECV1RPC",56,0)
 ;          exact match is found on the provider.  In this case, some
"RTN","ECV1RPC",57,0)
 ;          provider info will be sent back with the error message
"RTN","ECV1RPC",58,0)
 ;          so the user can determine which provider they want.  For
"RTN","ECV1RPC",59,0)
 ;          example, provider JONES,WILLIAM is entered by the user, but
"RTN","ECV1RPC",60,0)
 ;          the file contains JONES,WILLIAM H and JONES,WILLIAM J.
"RTN","ECV1RPC",61,0)
 ;          Both of those providers and their associated information 
"RTN","ECV1RPC",62,0)
 ;          will be sent with the error message.
"RTN","ECV1RPC",63,0)
 ;       
"RTN","ECV1RPC",64,0)
 ;
"RTN","ECV1RPC",65,0)
 ;-----------------------------------------------------------------------
"RTN","ECV1RPC",66,0)
 ;
"RTN","ECV1RPC",67,0)
INIT ;-- piece numbers (associated with column numbers in the spreadsheet)
"RTN","ECV1RPC",68,0)
 N ECRECPC,ECSTAPC,ECSSNPC,ECPATLPC,ECPATFPC,ECDSSPC,ECDCMPC,ECUNITPC
"RTN","ECV1RPC",69,0)
 N ECPROCPC,ECVOLPC,ECOSPC,ECPRVLPC,ECPRVFPC,ECENCPC,ECCATPC,ECDXPC
"RTN","ECV1RPC",70,0)
 N ECCLNPC
"RTN","ECV1RPC",71,0)
 ;-- spreadsheet values entered by user
"RTN","ECV1RPC",72,0)
 N ECRECV,ECSTAV,ECSSNV,ECPATLV,ECPATFV,ECPATV,ECDSSV,ECDCMV,ECUNITV
"RTN","ECV1RPC",73,0)
 N ECPROCV,ECVOLV,ECOSV,ECPROVLV,ECPROVFV,ECPROVV,ECENCV,ECCATV,ECDXV
"RTN","ECV1RPC",74,0)
 N ECCLNV,ECPSTATV,ECDECPAT,ECFILDUP
"RTN","ECV1RPC",75,0)
 ;-- error flags and derived data
"RTN","ECV1RPC",76,0)
 N ECERR,ECERRFLG,ECERRMSG,ECCOLERR,ECPRVIEN,ECOSIEN,ECVSSN,ECDSSIEN
"RTN","ECV1RPC",77,0)
 N ECINDEX,ECSSNIEN,ECPCLASS,ECPRVTYP,ECCATIEN,ECDXIEN,ECCLNIEN
"RTN","ECV1RPC",78,0)
 N ECPSTAT
"RTN","ECV1RPC",79,0)
 ;
"RTN","ECV1RPC",80,0)
 S U="^"
"RTN","ECV1RPC",81,0)
 S (ECINDEX,ECERR)=0
"RTN","ECV1RPC",82,0)
 K RESULTS
"RTN","ECV1RPC",83,0)
 ;
"RTN","ECV1RPC",84,0)
 ;--Call utility program to set up piece numbers and column header info
"RTN","ECV1RPC",85,0)
 I ECDATA["COLHEADERS" D ECHDRS^ECU1RPC(ECDATA) Q
"RTN","ECV1RPC",86,0)
 ;
"RTN","ECV1RPC",87,0)
 I ECDATA["END OF PROCESSING" D CLEANUP Q
"RTN","ECV1RPC",88,0)
 ;
"RTN","ECV1RPC",89,0)
MAIN ;--Call utility program to get piece numbers and set up data values
"RTN","ECV1RPC",90,0)
 D GETDATA^ECU1RPC(ECDATA)
"RTN","ECV1RPC",91,0)
 ;
"RTN","ECV1RPC",92,0)
 ;--Call validation routines to validate the data
"RTN","ECV1RPC",93,0)
 D ^ECV2RPC
"RTN","ECV1RPC",94,0)
 D ^ECV3RPC
"RTN","ECV1RPC",95,0)
 D ^ECV4RPC
"RTN","ECV1RPC",96,0)
 ;
"RTN","ECV1RPC",97,0)
FINAL ;If no errors, send data back to spreadsheet module
"RTN","ECV1RPC",98,0)
 ;note: ECDXIEN and ECCLNIEN will not be sent back if the record is 
"RTN","ECV1RPC",99,0)
 ;not being sent to PCE.
"RTN","ECV1RPC",100,0)
 ;
"RTN","ECV1RPC",101,0)
 I '($D(RESULTS(1))) D
"RTN","ECV1RPC",102,0)
 . N RESDATA
"RTN","ECV1RPC",103,0)
 . S RESDATA="NO ERRORS"_"^"_ECSSNIEN_"^"_ECENCV_"^"_ECSTAV_"^"_ECDSSIEN
"RTN","ECV1RPC",104,0)
 . S RESDATA=RESDATA_"^"_ECCATIEN_"^"_ECPROCV_"^"_ECVOLV_"^"_ECPRVIEN
"RTN","ECV1RPC",105,0)
 . S RESDATA=RESDATA_"^"_ECOSIEN_"^"_ECDUZ_"^"_$G(ECDXIEN)
"RTN","ECV1RPC",106,0)
 . S RESDATA=RESDATA_"^"_$G(ECCLNIEN)_"^"_ECPSTAT_"^"
"RTN","ECV1RPC",107,0)
 . S RESULTS(1)=RESDATA
"RTN","ECV1RPC",108,0)
 . Q
"RTN","ECV1RPC",109,0)
 Q
"RTN","ECV1RPC",110,0)
 ;
"RTN","ECV1RPC",111,0)
CLEANUP ;Delete temporary files
"RTN","ECV1RPC",112,0)
 I $D(^TMP($J,"COLS")) K ^TMP($J,"COLS")
"RTN","ECV1RPC",113,0)
 Q
"RTN","ECV3RPC")
0^1^B44536732
"RTN","ECV3RPC",1,0)
ECV3RPC ;ALB/ACS;Event Capture Spreadsheet Data Validation ;Oct 13, 2000
"RTN","ECV3RPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,47,49,61**;8 May 96
"RTN","ECV3RPC",3,0)
 ;
"RTN","ECV3RPC",4,0)
 ;-----------------------------------------------------------------------
"RTN","ECV3RPC",5,0)
 ;  Validates the following Event Capture Spreadsheet Upload fields:
"RTN","ECV3RPC",6,0)
 ;    1. DSS UNIT IEN, DSS UNIT NUMBER, DSS UNIT NAME
"RTN","ECV3RPC",7,0)
 ;    2. ORDERING SECTION
"RTN","ECV3RPC",8,0)
 ;    3. PROCEDURE CODE
"RTN","ECV3RPC",9,0)
 ;    4. CATEGORY
"RTN","ECV3RPC",10,0)
 ;
"RTN","ECV3RPC",11,0)
 ;-----------------------------------------------------------------------
"RTN","ECV3RPC",12,0)
 ;
"RTN","ECV3RPC",13,0)
 ;--Set up error flag
"RTN","ECV3RPC",14,0)
 S ECERRFLG=0
"RTN","ECV3RPC",15,0)
 ;
"RTN","ECV3RPC",16,0)
 ;--GET DSS Unit IEN--
"RTN","ECV3RPC",17,0)
 S ECDSSIEN=""
"RTN","ECV3RPC",18,0)
 ; -Check for DSS Unit IEN first
"RTN","ECV3RPC",19,0)
 I ECUNITV'="",(ECUNITV'=+ECUNITV) D
"RTN","ECV3RPC",20,0)
 . S ECERRMSG=$P($T(DSS1^ECV3RPC),";;",2)
"RTN","ECV3RPC",21,0)
 . S ECCOLERR=ECUNITPC
"RTN","ECV3RPC",22,0)
 . D ERROR
"RTN","ECV3RPC",23,0)
 I ECUNITV,'ECERRFLG,$D(^ECD(ECUNITV,0)) S ECDSSIEN=ECUNITV
"RTN","ECV3RPC",24,0)
 I ECUNITV,'ECERRFLG,'$D(^ECD(ECUNITV,0)) D
"RTN","ECV3RPC",25,0)
 . ; DSS unit ien not found on VistA
"RTN","ECV3RPC",26,0)
 . S ECERRMSG=$P($T(DSS1^ECV3RPC),";;",2)
"RTN","ECV3RPC",27,0)
 . S ECCOLERR=ECUNITPC
"RTN","ECV3RPC",28,0)
 . D ERROR
"RTN","ECV3RPC",29,0)
 . Q
"RTN","ECV3RPC",30,0)
 ; -Check for DSS Unit Number
"RTN","ECV3RPC",31,0)
 I ECDCMV'="",'$D(^ECD("C",ECDCMV)) D
"RTN","ECV3RPC",32,0)
 . ; DSS Unit Number not found on VistA
"RTN","ECV3RPC",33,0)
 . S ECERRMSG=$P($T(DSS2^ECV3RPC),";;",2)
"RTN","ECV3RPC",34,0)
 . S ECCOLERR=ECDCMPC
"RTN","ECV3RPC",35,0)
 . D ERROR
"RTN","ECV3RPC",36,0)
 I 'ECERRFLG,ECDCMV'="",$D(^ECD("C",ECDCMV)) S ECDSSIEN=$O(^ECD("C",ECDCMV,0))
"RTN","ECV3RPC",37,0)
 ;Check if the next record is a match
"RTN","ECV3RPC",38,0)
 I 'ECERRFLG,'ECDSSIEN,ECDCMV'="",$D(^ECD("C",ECDCMV)) D
"RTN","ECV3RPC",39,0)
 . S ECDSSIEN=$O(^ECD("C",ECDCMV,0))
"RTN","ECV3RPC",40,0)
 . I '$D(^ECD("C",ECDCMV)) D
"RTN","ECV3RPC",41,0)
 . . ; DSS Unit Number not found on VistA
"RTN","ECV3RPC",42,0)
 . . S ECERRMSG=$P($T(DSS2^ECV3RPC),";;",2)
"RTN","ECV3RPC",43,0)
 . . S ECCOLERR=ECDCMPC
"RTN","ECV3RPC",44,0)
 . . D ERROR
"RTN","ECV3RPC",45,0)
 . . Q
"RTN","ECV3RPC",46,0)
 ; -Check for DSS Unit Name
"RTN","ECV3RPC",47,0)
 I ECDSSV'="",'$D(^ECD("B",ECDSSV)) D
"RTN","ECV3RPC",48,0)
 . S ECERRMSG=$P($T(DSS3^ECV3RPC),";;",2)
"RTN","ECV3RPC",49,0)
 . S ECCOLERR=ECDSSPC
"RTN","ECV3RPC",50,0)
 . D ERROR
"RTN","ECV3RPC",51,0)
 ; 
"RTN","ECV3RPC",52,0)
 I 'ECERRFLG,'ECDSSIEN,ECDSSV'="",$D(^ECD("B",ECDSSV)) S ECDSSIEN=$O(^ECD("B",ECDSSV,0))
"RTN","ECV3RPC",53,0)
 I 'ECERRFLG,'ECDSSIEN,ECDSSV'="",'$D(^ECD("B",ECDSSV)) D
"RTN","ECV3RPC",54,0)
 . N ECNXTDSS
"RTN","ECV3RPC",55,0)
 . S ECNXTDSS=$O(^ECD("B",ECDSSV))
"RTN","ECV3RPC",56,0)
 . I ECDSSV=$E(ECNXTDSS,1,$L(ECDSSV)) S ECDSSIEN=$O(^ECD("B",ECNXTDSS,0))
"RTN","ECV3RPC",57,0)
 . ;
"RTN","ECV3RPC",58,0)
 . I ECDSSV'=$E(ECNXTDSS,1,$L(ECDSSV)) D
"RTN","ECV3RPC",59,0)
 . . ; DSS unit name not found on VistA
"RTN","ECV3RPC",60,0)
 . . S ECERRMSG=$P($T(DSS3^ECV3RPC),";;",2)
"RTN","ECV3RPC",61,0)
 . . S ECCOLERR=ECDSSPC
"RTN","ECV3RPC",62,0)
 . . D ERROR
"RTN","ECV3RPC",63,0)
 . . Q
"RTN","ECV3RPC",64,0)
 . Q
"RTN","ECV3RPC",65,0)
 ;
"RTN","ECV3RPC",66,0)
 ;--Validate Ordering section or derive from DSS Unit IEN--
"RTN","ECV3RPC",67,0)
 I ECOSV'="" D
"RTN","ECV3RPC",68,0)
 . S ECOSIEN=$O(^ECC(723,"B",ECOSV,0))
"RTN","ECV3RPC",69,0)
 . I ECOSIEN="" D
"RTN","ECV3RPC",70,0)
 . . ; Ordering Section "B" x-ref doesn't exist
"RTN","ECV3RPC",71,0)
 . . S ECERRMSG=$P($T(ORDSEC1^ECV3RPC),";;",2)
"RTN","ECV3RPC",72,0)
 . . S ECCOLERR=ECOSPC
"RTN","ECV3RPC",73,0)
 . . D ERROR
"RTN","ECV3RPC",74,0)
 . . Q
"RTN","ECV3RPC",75,0)
 . Q
"RTN","ECV3RPC",76,0)
 I ECOSV="" D
"RTN","ECV3RPC",77,0)
 . I 'ECDSSIEN D
"RTN","ECV3RPC",78,0)
 . . ; Unable to derive Ordering section from DSS Unit
"RTN","ECV3RPC",79,0)
 . . S ECERRMSG=$P($T(ORDSEC2^ECV3RPC),";;",2)
"RTN","ECV3RPC",80,0)
 . . S ECCOLERR=ECOSPC
"RTN","ECV3RPC",81,0)
 . . D ERROR
"RTN","ECV3RPC",82,0)
 . . Q
"RTN","ECV3RPC",83,0)
 . I ECDSSIEN D
"RTN","ECV3RPC",84,0)
 . . S ECOSIEN=$P(^ECD(ECDSSIEN,0),U,3)
"RTN","ECV3RPC",85,0)
 . . I ECOSIEN="" D
"RTN","ECV3RPC",86,0)
 . . . ; Unable to derive Ordering section from DSS Unit
"RTN","ECV3RPC",87,0)
 . . . S ECERRMSG=$P($T(ORDSEC2^ECV3RPC),";;",2)
"RTN","ECV3RPC",88,0)
 . . . S ECCOLERR=ECOSPC
"RTN","ECV3RPC",89,0)
 . . . D ERROR
"RTN","ECV3RPC",90,0)
 . . . Q
"RTN","ECV3RPC",91,0)
 . . Q
"RTN","ECV3RPC",92,0)
 ;
"RTN","ECV3RPC",93,0)
 ;--Procedure must be a National Procedure, Local Procedure,   --
"RTN","ECV3RPC",94,0)
 ;--or a CPT code, and the EC Event Code Screen must be active --
"RTN","ECV3RPC",95,0)
 N ECFOUND,ECPI,ECDT
"RTN","ECV3RPC",96,0)
 S ECERRFLG=0,ECFOUND=0
"RTN","ECV3RPC",97,0)
 S %DT="XST",X=$G(ECENCV,"NOW") D ^%DT S ECDT=+Y
"RTN","ECV3RPC",98,0)
 ; Check for National Procedure code (D x-ref)
"RTN","ECV3RPC",99,0)
 I $D(^EC(725,"D",ECPROCV)) D
"RTN","ECV3RPC",100,0)
 . S ECPROCV=$O(^EC(725,"D",ECPROCV,0))_";EC(725,"
"RTN","ECV3RPC",101,0)
 . S ECPI=$P($G(^EC(725,ECPROCV,0)),"^",5)
"RTN","ECV3RPC",102,0)
 . I ECPI="" S ECFOUND=1 Q
"RTN","ECV3RPC",103,0)
 . S ECPI=$$CPT^ICPTCOD(ECPI,ECDT) I +ECPI>0,$P(ECPI,"^",7) S ECFOUND=1
"RTN","ECV3RPC",104,0)
 ; Check for local procedure code (DL x-ref)
"RTN","ECV3RPC",105,0)
 I 'ECFOUND,$D(^EC(725,"DL",ECPROCV)) D
"RTN","ECV3RPC",106,0)
 . S ECPROCV=$O(^EC(725,"DL",ECPROCV,0))_";EC(725,"
"RTN","ECV3RPC",107,0)
 . S ECPI=$P($G(^EC(725,ECPROCV,0)),"^",5)
"RTN","ECV3RPC",108,0)
 . I ECPI="" S ECFOUND=1 Q
"RTN","ECV3RPC",109,0)
 . S ECPI=$$CPT^ICPTCOD(ECPI,ECDT) I +ECPI>0,$P(ECPI,"^",7)  S ECFOUND=1
"RTN","ECV3RPC",110,0)
 ; Check for CPT code (B x-ref)
"RTN","ECV3RPC",111,0)
 I 'ECFOUND S ECPI=$$CPT^ICPTCOD(ECPROCV,ECDT) I +ECPI>0,$P(ECPI,"^",7) D
"RTN","ECV3RPC",112,0)
 . S ECPROCV=$P(ECPI,"^")_";ICPT("
"RTN","ECV3RPC",113,0)
 . S ECFOUND=1
"RTN","ECV3RPC",114,0)
 ;
"RTN","ECV3RPC",115,0)
 I 'ECFOUND D
"RTN","ECV3RPC",116,0)
 . ; Invalid procedure code
"RTN","ECV3RPC",117,0)
 . S ECERRMSG=$P($T(PROC1^ECV3RPC),";;",2)
"RTN","ECV3RPC",118,0)
 . S ECCOLERR=ECPROCPC
"RTN","ECV3RPC",119,0)
 . D ERROR
"RTN","ECV3RPC",120,0)
 . Q
"RTN","ECV3RPC",121,0)
 ;
"RTN","ECV3RPC",122,0)
 ; -Category must exist on the Event Capture Category file
"RTN","ECV3RPC",123,0)
 I ECCATV="" S ECCATIEN=0
"RTN","ECV3RPC",124,0)
 I ECCATV'="" D
"RTN","ECV3RPC",125,0)
 . I $D(^EC(726,"B",ECCATV)) S ECCATIEN=$O(^EC(726,"B",ECCATV,0))
"RTN","ECV3RPC",126,0)
 . I '$D(^EC(726,"B",ECCATV)) D
"RTN","ECV3RPC",127,0)
 . . ; B cross reference not found for category
"RTN","ECV3RPC",128,0)
 . . S ECERRMSG=$P($T(CAT1^ECV3RPC),";;",2)
"RTN","ECV3RPC",129,0)
 . . S ECCOLERR=ECCATPC
"RTN","ECV3RPC",130,0)
 . . D ERROR
"RTN","ECV3RPC",131,0)
 . . Q
"RTN","ECV3RPC",132,0)
 ;
"RTN","ECV3RPC",133,0)
 ; -check for active Event Code screen
"RTN","ECV3RPC",134,0)
 N ECEVNT,ECSNODE,ECSDATA,ECSFOUND
"RTN","ECV3RPC",135,0)
 I 'ECERRFLG D
"RTN","ECV3RPC",136,0)
 . S ECEVNT=ECSTAV_"-"_ECDSSIEN_"-"_ECCATIEN_"-"_ECPROCV
"RTN","ECV3RPC",137,0)
 . S (ECSNODE,ECSFOUND)=0
"RTN","ECV3RPC",138,0)
 . F  S ECSNODE=$O(^ECJ(ECSNODE)) Q:ECSNODE=""  D
"RTN","ECV3RPC",139,0)
 . . S ECSDATA=$G(^ECJ(ECSNODE,0))
"RTN","ECV3RPC",140,0)
 . . I ECEVNT=$P(ECSDATA,U,1) D
"RTN","ECV3RPC",141,0)
 . . . S ECSFOUND=1
"RTN","ECV3RPC",142,0)
 . . . I $P(ECSDATA,U,2)'="" D
"RTN","ECV3RPC",143,0)
 . . . . ; Event Code screen inactive
"RTN","ECV3RPC",144,0)
 . . . . S ECERRMSG=$P($T(PROC2^ECV3RPC),";;",2)
"RTN","ECV3RPC",145,0)
 . . . . S ECCOLERR=ECPROCPC
"RTN","ECV3RPC",146,0)
 . . . . D ERROR
"RTN","ECV3RPC",147,0)
 . . . . Q
"RTN","ECV3RPC",148,0)
 . . . Q
"RTN","ECV3RPC",149,0)
 . . Q
"RTN","ECV3RPC",150,0)
 . Q
"RTN","ECV3RPC",151,0)
 ;
"RTN","ECV3RPC",152,0)
 ;Generate error if event code screen not found
"RTN","ECV3RPC",153,0)
 I 'ECERRFLG,'ECSFOUND,ECDSSIEN D
"RTN","ECV3RPC",154,0)
 . ; Event Code screen not found
"RTN","ECV3RPC",155,0)
 . S ECERRMSG=$P($T(PROC3^ECV3RPC),";;",2)
"RTN","ECV3RPC",156,0)
 . S ECCOLERR=ECPROCPC
"RTN","ECV3RPC",157,0)
 . D ERROR
"RTN","ECV3RPC",158,0)
 . Q
"RTN","ECV3RPC",159,0)
 ;
"RTN","ECV3RPC",160,0)
 I 'ECERRFLG,'ECFILDUP D
"RTN","ECV3RPC",161,0)
 .;Check for duplicate uploaded record base on Loc_DSS Unit_Category_Proc
"RTN","ECV3RPC",162,0)
 .;Date_Procedure
"RTN","ECV3RPC",163,0)
 . N ECDUP,ECNAM,ECPNAM,ECI,ECX
"RTN","ECV3RPC",164,0)
 . S (ECDA,ECDUP)=0
"RTN","ECV3RPC",165,0)
 . F  S ECDA=$O(^ECH("ADT",ECSTAV,ECSSNIEN,ECDSSIEN,ECDT,ECDA)) Q:'ECDA  D  I ECDUP Q
"RTN","ECV3RPC",166,0)
 . . S ECX=$G(^ECH(ECDA,0)) I ECX="" Q
"RTN","ECV3RPC",167,0)
 . . I $P(ECX,U,8)'=ECCATIEN Q
"RTN","ECV3RPC",168,0)
 . . I $P(ECX,U,9)'=ECPROCV Q
"RTN","ECV3RPC",169,0)
 . . S ECPNAM="",ECDUP=1
"RTN","ECV3RPC",170,0)
 . . F ECI=11,15,17 Q:$P(ECX,U,ECI)=""  D
"RTN","ECV3RPC",171,0)
 . . . S ECNAM=$$GET1^DIQ(200,$P(ECX,U,ECI),.01,"I")
"RTN","ECV3RPC",172,0)
 . . . S ECPNAM=ECPNAM_" "_$P(ECNAM,",")_","_$E($P(ECNAM,",",2))
"RTN","ECV3RPC",173,0)
 . . S ECERRMSG="**DUPLICATE** "
"RTN","ECV3RPC",174,0)
 . . S ECERRMSG=ECERRMSG_" Clinic: "_$$GET1^DIQ(44,$P(ECX,U,19),.01,"I")
"RTN","ECV3RPC",175,0)
 . . S ECERRMSG=ECERRMSG_" Order Sect: "_$$GET1^DIQ(723,$P(ECX,U,12),.01,"I")
"RTN","ECV3RPC",176,0)
 . . S ECERRMSG=ECERRMSG_" Provider: "_ECPNAM
"RTN","ECV3RPC",177,0)
 . . S ECNAM=$$GET1^DIQ(200,$P(ECX,U,13),.01,"I")
"RTN","ECV3RPC",178,0)
 . . S ECERRMSG=ECERRMSG_" Entered: "_$P(ECNAM,",")_","_$E($P(ECNAM,",",2))
"RTN","ECV3RPC",179,0)
 . . S ECCOLERR=ECSTAPC    ;(???)
"RTN","ECV3RPC",180,0)
 . . D ERROR
"RTN","ECV3RPC",181,0)
 Q
"RTN","ECV3RPC",182,0)
ERROR ;--Set up array entry to contain the following:
"RTN","ECV3RPC",183,0)
 ;1. record number
"RTN","ECV3RPC",184,0)
 ;2. column number on spreadsheet containing the record number
"RTN","ECV3RPC",185,0)
 ;3. column number on spreadsheet containing the data in error
"RTN","ECV3RPC",186,0)
 ;4. error message
"RTN","ECV3RPC",187,0)
 ;
"RTN","ECV3RPC",188,0)
 S ECINDEX=ECINDEX+1
"RTN","ECV3RPC",189,0)
 S RESULTS(ECINDEX)=ECRECV_"^"_ECRECPC_"^"_ECCOLERR_"^"_ECERRMSG_"^"
"RTN","ECV3RPC",190,0)
 S ECERRFLG=1
"RTN","ECV3RPC",191,0)
 Q
"RTN","ECV3RPC",192,0)
 ;
"RTN","ECV3RPC",193,0)
DSS1 ;;Invalid DSS Unit IEN
"RTN","ECV3RPC",194,0)
DSS2 ;;Invalid DSS Unit Number
"RTN","ECV3RPC",195,0)
DSS3 ;;Invalid DSS Unit Name
"RTN","ECV3RPC",196,0)
ORDSEC1 ;;Ordering Section "B" x-ref not on Med Specialty file(#723)
"RTN","ECV3RPC",197,0)
ORDSEC2 ;;Unable to derive Ordering Section from DSS Unit
"RTN","ECV3RPC",198,0)
PROC1 ;;Procedure/CPT invalid
"RTN","ECV3RPC",199,0)
PROC2 ;;Procedure/CPT invalid for this Station and DSS Unit
"RTN","ECV3RPC",200,0)
PROC3 ;;Event Code screen not found
"RTN","ECV3RPC",201,0)
CAT1 ;;Category "B" x-ref not on EC Category file(#726)
"VER")
8.0^22.0
**END**
**END**
