EMERGENCY Released DG*5.3*731 SEQ #647
Extracted from mail message
**KIDS**:DG*5.3*731^

**INSTALL NAME**
DG*5.3*731
"BLD",6882,0)
DG*5.3*731^REGISTRATION^0^3061016^y
"BLD",6882,1,0)
^^1^1^3061010^^
"BLD",6882,1,1,0)
Please refer to the National Patch Module for a description of this patch.
"BLD",6882,4,0)
^9.64PA^2^1
"BLD",6882,4,2,0)
2
"BLD",6882,4,2,2,0)
^9.641^2.3215^1
"BLD",6882,4,2,2,2.3215,0)
SERVICE [OEF OR OIF]  (sub-file)
"BLD",6882,4,2,2,2.3215,1,0)
^9.6411^.03^1
"BLD",6882,4,2,2,2.3215,1,.03,0)
OEF/OIF TO DATE
"BLD",6882,4,2,222)
y^n^p^^^^n^^n
"BLD",6882,4,2,224)

"BLD",6882,4,"APDD",2,2.3215)

"BLD",6882,4,"APDD",2,2.3215,.03)

"BLD",6882,4,"B",2,2)

"BLD",6882,6.3)
8
"BLD",6882,"ABPKG")
n
"BLD",6882,"KRN",0)
^9.67PA^8989.52^19
"BLD",6882,"KRN",.4,0)
.4
"BLD",6882,"KRN",.401,0)
.401
"BLD",6882,"KRN",.402,0)
.402
"BLD",6882,"KRN",.403,0)
.403
"BLD",6882,"KRN",.5,0)
.5
"BLD",6882,"KRN",.84,0)
.84
"BLD",6882,"KRN",3.6,0)
3.6
"BLD",6882,"KRN",3.8,0)
3.8
"BLD",6882,"KRN",9.2,0)
9.2
"BLD",6882,"KRN",9.8,0)
9.8
"BLD",6882,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6882,"KRN",9.8,"NM",1,0)
DGCVRPT^^0^B26310985
"BLD",6882,"KRN",9.8,"NM",2,0)
DGRPDT^^0^B69084078
"BLD",6882,"KRN",9.8,"NM","B","DGCVRPT",1)

"BLD",6882,"KRN",9.8,"NM","B","DGRPDT",2)

"BLD",6882,"KRN",19,0)
19
"BLD",6882,"KRN",19.1,0)
19.1
"BLD",6882,"KRN",101,0)
101
"BLD",6882,"KRN",409.61,0)
409.61
"BLD",6882,"KRN",771,0)
771
"BLD",6882,"KRN",870,0)
870
"BLD",6882,"KRN",8989.51,0)
8989.51
"BLD",6882,"KRN",8989.52,0)
8989.52
"BLD",6882,"KRN",8994,0)
8994
"BLD",6882,"KRN","B",.4,.4)

"BLD",6882,"KRN","B",.401,.401)

"BLD",6882,"KRN","B",.402,.402)

"BLD",6882,"KRN","B",.403,.403)

"BLD",6882,"KRN","B",.5,.5)

"BLD",6882,"KRN","B",.84,.84)

"BLD",6882,"KRN","B",3.6,3.6)

"BLD",6882,"KRN","B",3.8,3.8)

"BLD",6882,"KRN","B",9.2,9.2)

"BLD",6882,"KRN","B",9.8,9.8)

"BLD",6882,"KRN","B",19,19)

"BLD",6882,"KRN","B",19.1,19.1)

"BLD",6882,"KRN","B",101,101)

"BLD",6882,"KRN","B",409.61,409.61)

"BLD",6882,"KRN","B",771,771)

"BLD",6882,"KRN","B",870,870)

"BLD",6882,"KRN","B",8989.51,8989.51)

"BLD",6882,"KRN","B",8989.52,8989.52)

"BLD",6882,"KRN","B",8994,8994)

"BLD",6882,"QUES",0)
^9.62^^
"BLD",6882,"REQB",0)
^9.611^2^2
"BLD",6882,"REQB",1,0)
DG*5.3*689^2
"BLD",6882,"REQB",2,0)
DG*5.3*564^2
"BLD",6882,"REQB","B","DG*5.3*564",2)

"BLD",6882,"REQB","B","DG*5.3*689",1)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2.3215)
1
"FIA",2,2.3215,.03)

"IX",2,2.3215,"ACVCOM1",0)
2.3215^ACVCOM1^Set CV End Date based on OEF/OIF fields^MU^^R^^I^2.3215^^^^^A
"IX",2,2.3215,"ACVCOM1",.1,0)
^^8^8^3061010^^^^
"IX",2,2.3215,"ACVCOM1",.1,1,0)
This MUMPS x-ref will trigger an update to the Combat Vet Eligibility End
"IX",2,2.3215,"ACVCOM1",.1,2,0)
Date field under the following conditions:
"IX",2,2.3215,"ACVCOM1",.1,3,0)
  If the COMBAT VETERAN END DATE (#.5295) of the PATIENT file (#2) is null
"IX",2,2.3215,"ACVCOM1",.1,4,0)
 AND either
"IX",2,2.3215,"ACVCOM1",.1,5,0)
        The SERVICE SEPARATION DATE [LAST] (#.327) is missing
"IX",2,2.3215,"ACVCOM1",.1,6,0)
                          OR
"IX",2,2.3215,"ACVCOM1",.1,7,0)
        The SERVICE SEPARATION DATE [LAST] (#.327) is less than the
"IX",2,2.3215,"ACVCOM1",.1,8,0)
           OEF/OIF TO DATE - #.03 in subfile 2.3215
"IX",2,2.3215,"ACVCOM1",1)
N DGZ S DGZ=$S(X2(3)'<X2(2):X2(3),1:X2(2)) D SETCV^DGCV(DA(1),DGZ)
"IX",2,2.3215,"ACVCOM1",1.4)
I '$P($G(^DPT(DA(1),.52)),"^",15) S X=$$CVELIG^DGCV(DA(1))
"IX",2,2.3215,"ACVCOM1",2)
Q
"IX",2,2.3215,"ACVCOM1",11.1,0)
^.114IA^3^3
"IX",2,2.3215,"ACVCOM1",11.1,1,0)
1^F^2.3215^.03^^^F
"IX",2,2.3215,"ACVCOM1",11.1,2,0)
2^C
"IX",2,2.3215,"ACVCOM1",11.1,2,1.5)
S X=$P($$LAST^DGENOEIF(DA(1)),U)
"IX",2,2.3215,"ACVCOM1",11.1,3,0)
3^C
"IX",2,2.3215,"ACVCOM1",11.1,3,1.5)
S X=$P($G(^DPT(DA(1),.32)),U,7)
"IX",2,2.3215,"ALOEIF",0)
2.3215^ALOEIF^Sets the latest OIF/ OEF/ UNKNOWN OEF/OIF episode in a cross reference^MU^^R^IR^I^2.3215^^^^^A
"IX",2,2.3215,"ALOEIF",.1,0)
^^10^10^3060105^^^^
"IX",2,2.3215,"ALOEIF",.1,1,0)
Cross reference is:
"IX",2,2.3215,"ALOEIF",.1,2,0)
  ^DPT("ALOEIF",TO DATE,FROM DATE,OIF/ OEF/ UNKNOWN OEF/OIF indicator,
"IX",2,2.3215,"ALOEIF",.1,3,0)
                DA(1),DA)=""
"IX",2,2.3215,"ALOEIF",.1,4,0)
 
"IX",2,2.3215,"ALOEIF",.1,5,0)
Subscripts are:
"IX",2,2.3215,"ALOEIF",.1,6,0)
  TO DATE = latest conflict to date for OIF/ OEF/ UNKNOWN OEF/OIF
"IX",2,2.3215,"ALOEIF",.1,7,0)
  FROM DATE = corresponding from date for TO DATE value
"IX",2,2.3215,"ALOEIF",.1,8,0)
  OIF/ OEF/ UNKNOWN OEF/OIF indicator = "OIF" "OEF" "UNK"
"IX",2,2.3215,"ALOEIF",.1,9,0)
 
"IX",2,2.3215,"ALOEIF",.1,10,0)
 DA(1) = entry in patient file      DA = entry in OEF/OIF subfile
"IX",2,2.3215,"ALOEIF",1)
D UPDLAST^DGENOEIF(.DA,.X2,1)
"IX",2,2.3215,"ALOEIF",2)
D UPDLAST^DGENOEIF(.DA,.X1,0)
"IX",2,2.3215,"ALOEIF",2.5)

"IX",2,2.3215,"ALOEIF",11.1,0)
^.114IA^4^3
"IX",2,2.3215,"ALOEIF",11.1,2,0)
1^F^2.3215^.03^^^F
"IX",2,2.3215,"ALOEIF",11.1,2,3)

"IX",2,2.3215,"ALOEIF",11.1,3,0)
3^F^2.3215^.02^^^F
"IX",2,2.3215,"ALOEIF",11.1,4,0)
2^F^2.3215^.01^^^F
"IX",2,2.3215,"ALSTUP",0)
2.3215^ALSTUP^TRIGGER THE DATE/TIME OF LAST CHANGE WHEN ANY PERTINENT FIELDS CHANGE^MU^^R^IR^I^2.3215^^^^^A
"IX",2,2.3215,"ALSTUP",1)
N DATA,DGENDA S DATA(.05)=$$NOW^XLFDT,DGENDA=DA,DGENDA(1)=DA(1) I $$UPD^DGENDBS(2.3215,.DGENDA,.DATA)
"IX",2,2.3215,"ALSTUP",1.4)
S X=$S($G(X2(1))'=""&($G(X1(1))'=$G(X2(1))):1,$G(X1(2))'=$G(X2(2)):1,$G(X1(3))'=$G(X2(3)):1,1:0)
"IX",2,2.3215,"ALSTUP",2)
N DATA,DGENDA S DATA(.05)=$$NOW^XLFDT,DGENDA=DA,DGENDA(1)=DA(1) I $$UPD^DGENDBS(2.3215,.DGENDA,.DATA)
"IX",2,2.3215,"ALSTUP",11.1,0)
^.114IA^3^3
"IX",2,2.3215,"ALSTUP",11.1,1,0)
1^F^2.3215^.01^^^F
"IX",2,2.3215,"ALSTUP",11.1,2,0)
2^F^2.3215^.02^^^F
"IX",2,2.3215,"ALSTUP",11.1,3,0)
3^F^2.3215^.03^^^F
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
731^3061016
"PKG",5,22,1,"PAH",1,1,0)
^^1^1^3061016
"PKG",5,22,1,"PAH",1,1,1,0)
Please refer to the National Patch Module for a description of this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGCVRPT")
0^1^B26310985^B20362364
"RTN","DGCVRPT",1,0)
DGCVRPT ;ALB/PJR - Unsupported CV End Dates Report;  ; 6/10/04 12:15pm
"RTN","DGCVRPT",2,0)
 ;;5.3;Registration;**564,731**; Aug 13,1993;Build 8
"RTN","DGCVRPT",3,0)
 ;
"RTN","DGCVRPT",4,0)
EN ; Called from DG UNSUPPORTED CV END DATES RPT option
"RTN","DGCVRPT",5,0)
 N DGSRT
"RTN","DGCVRPT",6,0)
 S DGSRT=$$SRT I DGSRT="" Q
"RTN","DGCVRPT",7,0)
 D RPTQUE Q
"RTN","DGCVRPT",8,0)
SRT() ; Get sort order
"RTN","DGCVRPT",9,0)
 ; OUPUT: Y - Sort (N=Name; D=DFN)
"RTN","DGCVRPT",10,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","DGCVRPT",11,0)
 S DIR(0)="SA^N:Name;D:DFN (Internal ID)"
"RTN","DGCVRPT",12,0)
 S DIR("A")="Sort report by Name or DFN (Internal ID): ",DIR("B")="NAME"
"RTN","DGCVRPT",13,0)
 S DIR("?",1)="Indicate whether the report should be sorted by the"
"RTN","DGCVRPT",14,0)
 S DIR("?")="Veteran's Name or the Internal ID (DFN) of the Veteran"
"RTN","DGCVRPT",15,0)
 D ^DIR I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","DGCVRPT",16,0)
 Q Y
"RTN","DGCVRPT",17,0)
 ;
"RTN","DGCVRPT",18,0)
RPTQUE ; Get report device. Queue report if requested.
"RTN","DGCVRPT",19,0)
 N POP,ZTRTN,ZTDESC,ZTSAVE,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","DGCVRPT",20,0)
 K IOP,%ZIS
"RTN","DGCVRPT",21,0)
 S %ZIS="MQ"
"RTN","DGCVRPT",22,0)
 W !
"RTN","DGCVRPT",23,0)
 D ^%ZIS I POP W !!,*7,"Report Cancelled!",! S DIR(0)="E" D ^DIR Q
"RTN","DGCVRPT",24,0)
 I $D(IO("Q")) D  Q
"RTN","DGCVRPT",25,0)
 .S ZTRTN="RPT^DGCVRPT(DGSRT)"
"RTN","DGCVRPT",26,0)
 .S ZTDESC="Print Unsupported CV End Dates Report"
"RTN","DGCVRPT",27,0)
 .S ZTSAVE("DGSRT")=""
"RTN","DGCVRPT",28,0)
 .D ^%ZTLOAD
"RTN","DGCVRPT",29,0)
 .W !!,"Report "_$S($D(ZTSK):"Queued!",1:"Cancelled!")
"RTN","DGCVRPT",30,0)
 .W ! S DIR(0)="E" D ^DIR
"RTN","DGCVRPT",31,0)
 .D HOME^%ZIS
"RTN","DGCVRPT",32,0)
 D RPT(DGSRT)
"RTN","DGCVRPT",33,0)
 D ^%ZISC
"RTN","DGCVRPT",34,0)
 Q
"RTN","DGCVRPT",35,0)
 ;
"RTN","DGCVRPT",36,0)
RPT(DGSRT) ; Entry point to produce report
"RTN","DGCVRPT",37,0)
 D EN1,EN2(DGSRT) Q
"RTN","DGCVRPT",38,0)
EN1 ; Extract
"RTN","DGCVRPT",39,0)
 N RNAME,DFN,RECCOUNT,SELCOUNT,DGXTMP,RES,CEN,CALC,EDITED
"RTN","DGCVRPT",40,0)
 ; Initialize ^XTMP global and set start date
"RTN","DGCVRPT",41,0)
 K ^XTMP("DGCVRPT")
"RTN","DGCVRPT",42,0)
 S RNAME="DG UNSUPPORTED CV END DATE REPORT"
"RTN","DGCVRPT",43,0)
 S ^XTMP("DGCVRPT",0)=$$FMADD^XLFDT(DT,60)_U_DT_U_RNAME
"RTN","DGCVRPT",44,0)
 S $P(^XTMP("DGCVRPT","DATE"),U,1)=$$FMTE^XLFDT($$NOW^XLFDT(),"5P")
"RTN","DGCVRPT",45,0)
 S:$G(ZTSK) ZTREQ="@"
"RTN","DGCVRPT",46,0)
 ; Set variables and initialize array for counts
"RTN","DGCVRPT",47,0)
 S (DFN,RECCOUNT,SELCOUNT,EDITED)=0
"RTN","DGCVRPT",48,0)
 S DGXTMP="^XTMP(""DGCVRPT"",""NOSUP"")"
"RTN","DGCVRPT",49,0)
 ; Loop through cross-reference "E"
"RTN","DGCVRPT",50,0)
 ; If patient meets report criteria, put on list
"RTN","DGCVRPT",51,0)
 F  S EDITED=$O(^DPT("E",EDITED)) Q:'EDITED  S DFN=0 D
"RTN","DGCVRPT",52,0)
 .F  S DFN=$O(^DPT("E",EDITED,DFN)) Q:'DFN  D CHK I CEN,CEN'=CALC D PUT
"RTN","DGCVRPT",53,0)
 S $P(^XTMP("DGCVRPT","DATE"),U,2)=$$FMTE^XLFDT($$NOW^XLFDT(),"5P")
"RTN","DGCVRPT",54,0)
 K ^XTMP("DGCVRPT","RUNNING"),DGXTMP
"RTN","DGCVRPT",55,0)
 Q
"RTN","DGCVRPT",56,0)
 ;
"RTN","DGCVRPT",57,0)
CHK ; Calculate CV End Date, check MSE data is supporting it
"RTN","DGCVRPT",58,0)
 ; INPUT: DFN - Patient file IEN
"RTN","DGCVRPT",59,0)
 ; OUTPUT: CEN  = CV End Date on file
"RTN","DGCVRPT",60,0)
 ;         CALC = Calculated CV End Date
"RTN","DGCVRPT",61,0)
 N DGARRY
"RTN","DGCVRPT",62,0)
 S RECCOUNT=RECCOUNT+1 D CNT
"RTN","DGCVRPT",63,0)
 S CALC="",CEN=$P($G(^DPT(DFN,.52)),U,15) I 'CEN Q
"RTN","DGCVRPT",64,0)
 S CALC=$$CVDATE(DFN,.DGARRY)
"RTN","DGCVRPT",65,0)
 ; If OEF/OIF date's "to date" is used for the CV End date, (not the
"RTN","DGCVRPT",66,0)
 ;   last SSD), include it as an inconsistency on this report
"RTN","DGCVRPT",67,0)
 I $G(DGARRY("OEF/OIF")),DGARRY("OEF/OIF")>$G(DGARRY(2,DFN_",",.327,"I")) S CALC=""
"RTN","DGCVRPT",68,0)
 Q
"RTN","DGCVRPT",69,0)
 ;
"RTN","DGCVRPT",70,0)
SCH S CALC=$P($$SCH^XLFDT("24M",SSD),".",1) Q
"RTN","DGCVRPT",71,0)
 ;
"RTN","DGCVRPT",72,0)
PUT ; Put record on list
"RTN","DGCVRPT",73,0)
 N NAM,SSN,NZERO
"RTN","DGCVRPT",74,0)
 S SELCOUNT=SELCOUNT+1 D CNT
"RTN","DGCVRPT",75,0)
 S NZERO=$G(^DPT(DFN,0)),NAM=$P(NZERO,U,1),SSN=$P(NZERO,U,9)
"RTN","DGCVRPT",76,0)
 S @DGXTMP@("DFN",DFN,0)=NAM_U_SSN_U_CEN
"RTN","DGCVRPT",77,0)
 I NAM'="" S @DGXTMP@("NAM",NAM,DFN)=""
"RTN","DGCVRPT",78,0)
 Q
"RTN","DGCVRPT",79,0)
 ;
"RTN","DGCVRPT",80,0)
CNT S @DGXTMP@("CNT","VET")=SELCOUNT_U_RECCOUNT Q
"RTN","DGCVRPT",81,0)
 ;
"RTN","DGCVRPT",82,0)
EN2(DGSRT) ; Print
"RTN","DGCVRPT",83,0)
 ; INPUT    DGSRT - Sort order for report (Name or DFN)
"RTN","DGCVRPT",84,0)
 N PG,LINE,RPTDT,CRT,OUT,DSH,CNT,MXLNE,DGXTMP,DGTOT,LOOP
"RTN","DGCVRPT",85,0)
 S:$G(ZTSK) ZTREQ="@"
"RTN","DGCVRPT",86,0)
 D PRTVAR
"RTN","DGCVRPT",87,0)
 U IO D HDR
"RTN","DGCVRPT",88,0)
 ;;
"RTN","DGCVRPT",89,0)
 S LOOP="LOOP"_DGSRT
"RTN","DGCVRPT",90,0)
 D @LOOP Q:OUT
"RTN","DGCVRPT",91,0)
 D TOT Q:OUT
"RTN","DGCVRPT",92,0)
 W ! S OUT=$$PAUSE
"RTN","DGCVRPT",93,0)
 Q
"RTN","DGCVRPT",94,0)
LOOPN ; Sort by name. Loop through ^XTMP("DGCVRPT","NOSUP","NAM", x-ref
"RTN","DGCVRPT",95,0)
 N NM,DFN
"RTN","DGCVRPT",96,0)
 S (NM,DFN)=""
"RTN","DGCVRPT",97,0)
 F  S NM=$O(@DGXTMP@("NAM",NM)) Q:NM=""!OUT  D
"RTN","DGCVRPT",98,0)
 .F  S DFN=$O(@DGXTMP@("NAM",NM,DFN)) Q:DFN=""!OUT  D PRINT
"RTN","DGCVRPT",99,0)
 Q
"RTN","DGCVRPT",100,0)
LOOPD ; Sort by DFN. Loop through ^XTMP("DGCVRPT","NOSUP","DFN", x-ref
"RTN","DGCVRPT",101,0)
 N DFN S DFN=0
"RTN","DGCVRPT",102,0)
 F  S DFN=$O(@DGXTMP@("DFN",DFN)) Q:'DFN!OUT  D PRINT
"RTN","DGCVRPT",103,0)
 Q
"RTN","DGCVRPT",104,0)
PRINT ; Print veteran
"RTN","DGCVRPT",105,0)
 N VET
"RTN","DGCVRPT",106,0)
 Q:'$D(@DGXTMP@("DFN",DFN))
"RTN","DGCVRPT",107,0)
 S VET=$G(@DGXTMP@("DFN",DFN,0))
"RTN","DGCVRPT",108,0)
 I LINE>MXLNE S OUT=$$PAUSE Q:OUT  D HDR
"RTN","DGCVRPT",109,0)
 W !,DFN,?12,$P(VET,U,2),?24,$E($P(VET,U,1),1,39),?64,$$FMTE^XLFDT($P(VET,U,3))
"RTN","DGCVRPT",110,0)
 S LINE=LINE+1 Q
"RTN","DGCVRPT",111,0)
TOT ; Print total records at the end of the report
"RTN","DGCVRPT",112,0)
 I LINE+4>MXLNE S OUT=$$PAUSE Q:OUT  D HDR
"RTN","DGCVRPT",113,0)
 W !!,"Total Records Printed:          ",$$RJ^XLFSTR($P(DGTOT,U,1),7)
"RTN","DGCVRPT",114,0)
 W !!,"Total Records with CV End Dates:",$$RJ^XLFSTR($P(DGTOT,U,2),7)
"RTN","DGCVRPT",115,0)
 Q
"RTN","DGCVRPT",116,0)
PRTVAR ; Set up variables needed to print report
"RTN","DGCVRPT",117,0)
 S CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","DGCVRPT",118,0)
 S DGXTMP="^XTMP(""DGCVRPT"",""NOSUP"")"
"RTN","DGCVRPT",119,0)
 S DGTOT=$G(@DGXTMP@("CNT","VET"))
"RTN","DGCVRPT",120,0)
 S:$G(DGSRT)="" DGSRT="N"
"RTN","DGCVRPT",121,0)
 S (PG,CNT,OUT)=0,RPTDT=$$FMTE^XLFDT(DT),MXLNE=$S(CRT:15,1:52)
"RTN","DGCVRPT",122,0)
 S DSH="",$P(DSH,"=",80)=""
"RTN","DGCVRPT",123,0)
 Q
"RTN","DGCVRPT",124,0)
HDR ; Print report header
"RTN","DGCVRPT",125,0)
 S PG=PG+1,LINE=0
"RTN","DGCVRPT",126,0)
 W @IOF
"RTN","DGCVRPT",127,0)
 W ?0,"Report Date: ",RPTDT,?68,"Page: ",$$RJ^XLFSTR(PG,4)
"RTN","DGCVRPT",128,0)
 W !,"Sorted By: "_$S(DGSRT="N":"Name",1:"DFN")
"RTN","DGCVRPT",129,0)
 W !!,$$CJ^XLFSTR("CV END DATES WITH NO SUPPORTING MS DATA REPORT",80)
"RTN","DGCVRPT",130,0)
 W !!,"DFN",?12,"SSN",?24,"Veteran's Name",?64,"CV End Date"
"RTN","DGCVRPT",131,0)
 W !,DSH
"RTN","DGCVRPT",132,0)
 Q
"RTN","DGCVRPT",133,0)
PAUSE() ; If report is sent to screen, prompt for next page or quit
"RTN","DGCVRPT",134,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","DGCVRPT",135,0)
 I 'CRT Q 0
"RTN","DGCVRPT",136,0)
 S DIR(0)="E"
"RTN","DGCVRPT",137,0)
 D ^DIR I 'Y Q 1
"RTN","DGCVRPT",138,0)
 Q 0
"RTN","DGCVRPT",139,0)
CVDATE(DFN,DGARR,DGERR) ; Returns all values for calculating the CV End date
"RTN","DGCVRPT",140,0)
 ; in DGARR (passed by reference)
"RTN","DGCVRPT",141,0)
 ;   AND
"RTN","DGCVRPT",142,0)
 ; any error codes from the DIQ call in DGERR (passed by reference)
"RTN","DGCVRPT",143,0)
 ;   AND
"RTN","DGCVRPT",144,0)
 ; the calculated CV End Date as the result of the function call
"RTN","DGCVRPT",145,0)
 ;
"RTN","DGCVRPT",146,0)
 N N,DATE,SSD,X,Y
"RTN","DGCVRPT",147,0)
 S DATE=""
"RTN","DGCVRPT",148,0)
 D GETS^DIQ(2,DFN_",",".327;.322012;.322018;.322021;.5294;.5295","I","DGARR","DGERR")
"RTN","DGCVRPT",149,0)
 S DGARR("OEF/OIF")=$P($$LAST^DGENOEIF(DFN),U)
"RTN","DGCVRPT",150,0)
 S SSD=$G(DGARRY(2,DFN_",",.327,"I"))
"RTN","DGCVRPT",151,0)
 ; If OEF/OIF date later than last serv sep dt, use to date of OEF/OIF
"RTN","DGCVRPT",152,0)
 I $G(DGARRY("OEF/OIF")),DGARRY("OEF/OIF")>SSD S DATE=DGARRY("OEF/OIF") G CVDATEQ
"RTN","DGCVRPT",153,0)
 I SSD D
"RTN","DGCVRPT",154,0)
 . Q:$E(SSD,6,7)="00"!(SSD'>2981111)
"RTN","DGCVRPT",155,0)
 . ; If conflict dates exist for any of the above listed fields, use SSD 
"RTN","DGCVRPT",156,0)
 . S N=0 F  S N=$O(DGARR(2,DFN_",",N)) Q:'N  I N'=.327,$G(DGARR(2,DFN_",",N,"I"))>2981111 S DATE=SSD Q
"RTN","DGCVRPT",157,0)
 ;
"RTN","DGCVRPT",158,0)
CVDATEQ Q $S(DATE:$P($$SCH^XLFDT("24M",DATE),".",1),1:"")
"RTN","DGCVRPT",159,0)
 ;
"RTN","DGRPDT")
0^2^B69084078^B69102930
"RTN","DGRPDT",1,0)
DGRPDT ;ALB/BRM - MILITARY SERVICE DATE UTILITIES ; 1/18/05 4:27pm
"RTN","DGRPDT",2,0)
 ;;5.3;Registration;**562,603,626,673,731**;Aug 13, 1993;Build 8
"RTN","DGRPDT",3,0)
 ;
"RTN","DGRPDT",4,0)
DTUTIL(DGNEWDT,DGOLDDT,MYFLG) ; Date precision comparision API
"RTN","DGRPDT",5,0)
 S:$G(DGOLDDT)="" DGOLDDT="0000000"
"RTN","DGRPDT",6,0)
 Q:'$$VALID(.DGNEWDT) "0^INVALID DATE PARAMETER"
"RTN","DGRPDT",7,0)
 I $L(DGOLDDT)<7 S DGOLDDT=DGOLDDT_$E("0000000",$L(DGOLDDT)+1,7)
"RTN","DGRPDT",8,0)
 N X,Y,EXACTO,EXACTN,I,RTN,MSDATE,MSG
"RTN","DGRPDT",9,0)
 S RTN="",EXACTO=$$CHKEXC(DGOLDDT),EXACTN=$$CHKEXC(DGNEWDT)
"RTN","DGRPDT",10,0)
 I $G(MYFLG) Q:'$$MNTHYR(DGNEWDT) "0^Date must contain month and year"
"RTN","DGRPDT",11,0)
 Q:EXACTO=EXACTN "1^Same Precision"
"RTN","DGRPDT",12,0)
 F I=1:1:3  Q:RTN'=""  D
"RTN","DGRPDT",13,0)
 .S:$E(EXACTN,I)<$E(EXACTO,I) RTN="0^ is Less Precise Than Previously Entered "
"RTN","DGRPDT",14,0)
 .S:$E(EXACTN,I)>$E(EXACTO,I) RTN="1^ is More Precise Than Previously Entered "
"RTN","DGRPDT",15,0)
 .S MSG=$S(I=1:"Year",I=2:"Month",I=3:"Day",1:"")
"RTN","DGRPDT",16,0)
 .S:RTN'="" $P(RTN,"^",2)=MSG_$P(RTN,"^",2)_MSG
"RTN","DGRPDT",17,0)
 Q $S($G(RTN)'="":RTN,1:"0^Unknown Precision")
"RTN","DGRPDT",18,0)
CHKEXC(MSDATE) ; construct precision string (3 digit return value - YMD)
"RTN","DGRPDT",19,0)
 Q ($E(MSDATE,1,3)'="000")_($E(MSDATE,4,5)'="00")_($E(MSDATE,6,7)'="00")
"RTN","DGRPDT",20,0)
MNTHYR(MSDATE) ; ensure month and year are not imprecise (binary return value)
"RTN","DGRPDT",21,0)
 Q ($E(MSDATE,1,3)'="000")&($E(MSDATE,4,5)'="00")
"RTN","DGRPDT",22,0)
WITHIN(FRDT,TODT,CHKDT) ; is CHKDT within FRDT and TODT?
"RTN","DGRPDT",23,0)
 N DGRPB41,DGRPB42
"RTN","DGRPDT",24,0)
 Q:'$$VALID($G(CHKDT)) "0^Invalid Date"
"RTN","DGRPDT",25,0)
 Q:('$G(FRDT))!('$G(TODT)) "0^Missing Required Date Range"
"RTN","DGRPDT",26,0)
 Q:('$$VALID(FRDT)!'$$VALID(TODT)!'$$B4(FRDT,TODT,1)) "0^Invalid Date Range"
"RTN","DGRPDT",27,0)
 S DGRPB41=$$B4(FRDT,CHKDT,1),DGRPB42=$$B4(CHKDT,TODT,1)
"RTN","DGRPDT",28,0)
 I 'DGRPB41!'DGRPB42 Q "0^Not Within Valid Date Range"
"RTN","DGRPDT",29,0)
 Q "1^Date is Within Date Range"_$S($P(DGRPB41,"^",2):"^1",$P(DGRPB42,"^",2):"^1",1:"")  ;add same flag if they are the same
"RTN","DGRPDT",30,0)
VALID(DATE) ; is this a valid Fileman date? (limits are from FR^XLFDT)
"RTN","DGRPDT",31,0)
 Q:'$D(DATE) 0
"RTN","DGRPDT",32,0)
 Q (1410102'>DATE)&(DATE'>4141015.235959)
"RTN","DGRPDT",33,0)
B4(DATE1,DATE2,SAME) ;is DATE1 before DATE2?
"RTN","DGRPDT",34,0)
 N IMPRDT,IDT,IRTN,CDATE1,CDATE2
"RTN","DGRPDT",35,0)
 S DATE1=$P($G(DATE1),"."),DATE2=$P($G(DATE2),".")
"RTN","DGRPDT",36,0)
 Q:DATE1=""!DATE2="" 1
"RTN","DGRPDT",37,0)
 I $G(SAME),DATE1=DATE2 Q "1^1"
"RTN","DGRPDT",38,0)
 I $$CHKEXC(DATE1)'=111!$$CHKEXC(DATE2)'=111 D  Q:$G(IRTN) IRTN
"RTN","DGRPDT",39,0)
 .S (CDATE1,CDATE2)="0000000"
"RTN","DGRPDT",40,0)
 .I $E(DATE1,1,3),$E(DATE2,1,3) F I=1:1:2 S $E(@("CDATE"_I),1,3)=$E(@("DATE"_I),1,3)
"RTN","DGRPDT",41,0)
 .I $E(DATE1,4,5),$E(DATE2,4,5) F I=1:1:2 S $E(@("CDATE"_I),4,5)=$E(@("DATE"_I),4,5)
"RTN","DGRPDT",42,0)
 .I $E(DATE1,6,7),$E(DATE2,6,7) F I=1:1:2 S $E(@("CDATE"_I),6,7)=$E(@("DATE"_I),6,7)
"RTN","DGRPDT",43,0)
 .I CDATE1<CDATE2 S IRTN=1 Q
"RTN","DGRPDT",44,0)
 .I CDATE1=CDATE2 S IRTN="1^1" Q
"RTN","DGRPDT",45,0)
 Q DATE1<DATE2
"RTN","DGRPDT",46,0)
RWITHIN(FRDT,TODT,CHKDT1,CHKDT2) ;are CHKDT1 and CHKDT2 within FRDT and TODT?
"RTN","DGRPDT",47,0)
 N CHK1,CHK2
"RTN","DGRPDT",48,0)
 S CHK1=$$WITHIN(.FRDT,.TODT,.CHKDT1) Q:'CHK1 CHK1
"RTN","DGRPDT",49,0)
 S CHK2=$$WITHIN(.FRDT,.TODT,.CHKDT2) Q:'CHK2 CHK2
"RTN","DGRPDT",50,0)
 Q "1^Both Date are Within Date Range"_$S(($P(CHK1,"^",3)!$P(CHK2,"^",3)):"^1",1:"")
"RTN","DGRPDT",51,0)
COVRLP2(DFN,FRDT,TODT,IGNORE,OEFOIF) ; check conflict with type 0 and 2 (see below)
"RTN","DGRPDT",52,0)
 Q:('$G(DFN))!('$D(^DPT(DFN))) "0^INVALID DFN"
"RTN","DGRPDT",53,0)
 S RTN=$$OVRLPCHK(DFN,.FRDT,.TODT,-1,$G(IGNORE),.OEFOIF)
"RTN","DGRPDT",54,0)
 Q:$P(RTN,"^")=0 RTN
"RTN","DGRPDT",55,0)
 S RTN=$$OVRLPCHK(DFN,.FRDT,.TODT,2,$G(IGNORE),.OEFOIF)
"RTN","DGRPDT",56,0)
 Q RTN
"RTN","DGRPDT",57,0)
OVRLPCHK(DFN,FRDT,TODT,TYPE,IGNORE,OEFOIF) ;check for overlapping date ranges
"RTN","DGRPDT",58,0)
 ; pass OEFOIF by ref - return OEFOIF(1)=1: OEF/OIF "cnflct not within MSE
"RTN","DGRPDT",59,0)
 N RTN1,DATA,NODE,RTN,FRDT1,MSG,SUBRNG,TODT1,DGW1,DGW2,DGRW1,DGRW2,DGZ
"RTN","DGRPDT",60,0)
 Q:('$G(DFN))!('$D(^DPT(DFN))) "0^INVALID DFN"
"RTN","DGRPDT",61,0)
 I TYPE<2 D
"RTN","DGRPDT",62,0)
 . S NODE(.32)=".326,.327,.3285,.3292,.3293,.32945,.3297,.3298"
"RTN","DGRPDT",63,0)
 E  D
"RTN","DGRPDT",64,0)
 . ; If checking an OEF/OIF period, only check against OEF/OIF
"RTN","DGRPDT",65,0)
 . I $G(OEFOIF) S NODE(2.3215)=".02,.03" K IGNORE Q
"RTN","DGRPDT",66,0)
 . S NODE(.321)=".32104,.32105",NODE(.322)=".3222,.3223,.3225,.3226,.3228,.3229,.322011,.322012,.322017,.322018,.32202,.322021",NODE(.52)=".5293,.5294"
"RTN","DGRPDT",67,0)
 D:$G(IGNORE)]"" IGNORE(.NODE,.IGNORE)
"RTN","DGRPDT",68,0)
 D GETDAT(DFN,.NODE,.DATA) Q:'$D(DATA) "1^CANNOT FIND PATIENT DATA"
"RTN","DGRPDT",69,0)
 I $G(OEFOIF),$P(OEFOIF,U,2)'="" K DATA($P(OEFOIF,U,2)) ; OEF/OIF entry to exclude (used instead of IGNORE)
"RTN","DGRPDT",70,0)
 I TYPE<0 S DGZ=$$MSEONLY(.DATA,FRDT,TODT) S:'DGZ&$G(OEFOIF) OEFOIF(1)=1 Q DGZ
"RTN","DGRPDT",71,0)
 S SUBRNG="" F  S SUBRNG=$O(DATA(SUBRNG)) Q:SUBRNG=""!($D(RTN))  D
"RTN","DGRPDT",72,0)
 .S FRDT1=$P(DATA(SUBRNG),"^"),TODT1=$P(DATA(SUBRNG),"^",2)
"RTN","DGRPDT",73,0)
 .I FRDT1="",TODT1="" Q
"RTN","DGRPDT",74,0)
 .I 'TYPE S:$$RWITHIN(FRDT1,TODT1,.FRDT,.TODT) RTN1=$G(RTN1)+1 Q
"RTN","DGRPDT",75,0)
 .S MSG=$S(TYPE=1:"Military Service Episode",1:"Conflict")
"RTN","DGRPDT",76,0)
 . ; For OEF/OIF only - dates must be totally non-overlapping
"RTN","DGRPDT",77,0)
 .S DGW1=$$WITHIN(FRDT1,TODT1,.FRDT),DGW2=$$WITHIN(FRDT1,TODT1,.TODT)
"RTN","DGRPDT",78,0)
 .I DGW1,$S($G(OEFOIF):'$P(DGW1,"^",3),1:1) S RTN="0^This "_MSG_" overlaps with another "_MSG
"RTN","DGRPDT",79,0)
 .I DGW2,$S($G(OEFOIF):'$P(DGW2,"^",3),1:1) S RTN="0^This "_MSG_" overlaps with another "_MSG
"RTN","DGRPDT",80,0)
 .S DGRW1=$$RWITHIN(FRDT1,TODT1,.FRDT,.TODT),DGRW2=$$RWITHIN(.FRDT,.TODT,FRDT1,TODT1)
"RTN","DGRPDT",81,0)
 .I '$G(OEFOIF),DGRW1,'$$SAME(FRDT1,TODT1,FRDT,TODT) S RTN="0^This "_MSG_" is within another "_MSG
"RTN","DGRPDT",82,0)
 .I '$G(OEFOIF),DGRW2,'$$SAME(FRDT1,TODT1,FRDT,TODT) S RTN="0^Another "_MSG_" is within another "_MSG
"RTN","DGRPDT",83,0)
 .I $E($P($G(OEFOIF),U,2),1,3)="UNK"!($E(SUBRNG,1,3)="UNK") D
"RTN","DGRPDT",84,0)
 .. I FRDT,TODT,'(DGRW1!DGRW2),DGW1!DGW2 S RTN="0^This "_MSG_" is within another "_MSG
"RTN","DGRPDT",85,0)
 .I (DGRW1!(DGRW2)),$S($E($P($G(OEFOIF),U,2),1,3)'="UNK"&($E(SUBRNG,1,3)'="UNK"):'$$SAME(FRDT1,TODT1,FRDT,TODT),1:$E(SUBRNG,1,3)="UNK"&(FRDT'=FRDT1!(TODT'=TODT1))) S RTN="0^This "_MSG_" is within another "_MSG
"RTN","DGRPDT",86,0)
 I ('TYPE),'$D(RTN1) S:$G(OEFOIF) OEFOIF(1)=1 Q "0^This conflict is not within a Military Service Episode"
"RTN","DGRPDT",87,0)
 Q:$D(RTN) RTN
"RTN","DGRPDT",88,0)
 Q "1^OK"
"RTN","DGRPDT",89,0)
SAME(FRDT1,TODT1,FRDT,TODT) ;
"RTN","DGRPDT",90,0)
 N DGS1,DGS2,DGS3,DGS4
"RTN","DGRPDT",91,0)
 S DGS1=$$B4(FRDT,TODT1,1),DGS2=$$B4(FRDT1,TODT,1)
"RTN","DGRPDT",92,0)
 S DGS3=$$B4(TODT,FRDT1,1),DGS4=$$B4(TODT1,FRDT,1)
"RTN","DGRPDT",93,0)
 Q:$P(DGS1,"^",3) 1
"RTN","DGRPDT",94,0)
 Q:$P(DGS2,"^",3) 1
"RTN","DGRPDT",95,0)
 Q:$P(DGS3,"^",3) 1
"RTN","DGRPDT",96,0)
 Q:$P(DGS4,"^",3) 1
"RTN","DGRPDT",97,0)
 Q 0
"RTN","DGRPDT",98,0)
GETDAT(DFN,NODE,DATA) ;get data from the Patient (#2) file
"RTN","DGRPDT",99,0)
 N LOOP,SUB,SUB1,Z,Z0,TMPDAT,DATA1,ERR,DR,SUBND,X,X1
"RTN","DGRPDT",100,0)
 Q:('$D(NODE))!('$D(DFN))
"RTN","DGRPDT",101,0)
 S SUB="",Z=1
"RTN","DGRPDT",102,0)
 F  S SUB=$O(NODE(SUB)) Q:SUB=""  D
"RTN","DGRPDT",103,0)
 .S SUBND=$P(SUB,".")
"RTN","DGRPDT",104,0)
 .S DR=$TR(NODE(SUB),",",";") Q:DR=""
"RTN","DGRPDT",105,0)
 .I 'SUBND D  Q
"RTN","DGRPDT",106,0)
 ..D GETS^DIQ(2,DFN_",",DR,"I","TMPDAT","ERR")
"RTN","DGRPDT",107,0)
 ..S LOOP="F X="_$G(NODE(SUB))_" S DATA1(X)=$G(TMPDAT(2,DFN_"","",X,""I"")),Z=Z+1"
"RTN","DGRPDT",108,0)
 ..X LOOP
"RTN","DGRPDT",109,0)
 . ; Extract dates from OIF OEF multiple too
"RTN","DGRPDT",110,0)
 . S Z0=0 F  S Z0=$O(^DPT(DFN,SUB-2,Z0)) Q:'Z0  S SUB1(Z0)=+$G(^(Z0,0)) D GETS^DIQ(SUB,Z0_","_DFN_",",DR,"I","TMPDAT","ERR")
"RTN","DGRPDT",111,0)
 .S LOOP="F X="_$G(NODE(SUB))_" F X1=0:0 S X1=$O(SUB1(X1)) Q:'X1  S DATA1($S(SUB1(X1)=3:""UNK"",1:$$EXTERNAL^DILFD(SUB,.01,,SUB1(X1)))_""-""_X1,X)=$G(TMPDAT(SUB,X1_"",""_DFN_"","",X,""I"")),Z=Z+1" X LOOP
"RTN","DGRPDT",112,0)
 S DATA("MSL")=$G(DATA1(.326))_"^"_$G(DATA1(.327))
"RTN","DGRPDT",113,0)
 S DATA("MSNTL")=$S($G(DATA1(.3285))="Y":$G(DATA1(.3292))_"^"_$G(DATA1(.3293)),1:"^")
"RTN","DGRPDT",114,0)
 S DATA("MSNNTL")=$S($G(DATA1(.32945))="Y":$G(DATA1(.3297))_"^"_$G(DATA1(.3298)),1:"^")
"RTN","DGRPDT",115,0)
 S DATA("VIET")=$G(DATA1(.32104))_"^"_$G(DATA1(.32105))
"RTN","DGRPDT",116,0)
 S DATA("LEB")=$G(DATA1(.3222))_"^"_$G(DATA1(.3223))
"RTN","DGRPDT",117,0)
 S DATA("GREN")=$G(DATA1(.3225))_"^"_$G(DATA1(.3226))
"RTN","DGRPDT",118,0)
 S DATA("PAN")=$G(DATA1(.3228))_"^"_$G(DATA1(.3229))
"RTN","DGRPDT",119,0)
 S DATA("GULF")=$G(DATA1(.322011))_"^"_$G(DATA1(.322012))
"RTN","DGRPDT",120,0)
 S DATA("SOM")=$G(DATA1(.322017))_"^"_$G(DATA1(.322018))
"RTN","DGRPDT",121,0)
 S DATA("YUG")=$G(DATA1(.32202))_"^"_$G(DATA1(.322021))
"RTN","DGRPDT",122,0)
 S DATA("COMBAT")=$G(DATA1(.5293))_"^"_$G(DATA1(.5294))
"RTN","DGRPDT",123,0)
 ; Pick up the OEF/OIF nodes here - subscript is not numeric
"RTN","DGRPDT",124,0)
 S Z=" " F  S Z=$O(DATA1(Z)) Q:Z=""  S DATA(Z)=$G(DATA1(Z,.02))_"^"_$G(DATA1(Z,.03))
"RTN","DGRPDT",125,0)
 Q
"RTN","DGRPDT",126,0)
MSEONLY(DATA,FRDT,TODT) ; are these dates within the whole MSE period?
"RTN","DGRPDT",127,0)
 N TO,FROM,SUBRNG,FRDT1,TODT1,MSEFR,MSETO
"RTN","DGRPDT",128,0)
 S SUBRNG="" F  S SUBRNG=$O(DATA(SUBRNG)) Q:SUBRNG=""  D
"RTN","DGRPDT",129,0)
 .S FRDT1=$P(DATA(SUBRNG),"^"),TODT1=$P(DATA(SUBRNG),"^",2)
"RTN","DGRPDT",130,0)
 .S:FRDT1 FROM(FRDT1)="" S:TODT1 TO(TODT1)=""
"RTN","DGRPDT",131,0)
 S MSEFR=$O(FROM("")),MSETO=$O(TO(""),-1)
"RTN","DGRPDT",132,0)
 I FRDT,(('$$B4(MSEFR,FRDT,1))!'$$B4(FRDT,MSETO,1)) Q "0^Conflict From Date is Not Within Military Service Episode Dates"
"RTN","DGRPDT",133,0)
 I TODT,(('$$B4(TODT,MSETO,1))!'$$B4(MSEFR,TODT,1)) Q "0^Conflict End Date is Not Within Military Service Episode Dates"
"RTN","DGRPDT",134,0)
 Q "1^OK"
"RTN","DGRPDT",135,0)
CNFLCTDT(FRDT,TODT,CNFLCT) ;are these dates valid for this conflict?
"RTN","DGRPDT",136,0)
 Q:'$D(CNFLCT) "0^INVALID CONFLICT"
"RTN","DGRPDT",137,0)
 N CRNG
"RTN","DGRPDT",138,0)
 S CRNG=$$GETCNFDT($P(CNFLCT,"-")) Q:$TR(CRNG,"^")="" "0^INVALID CONFLICT"
"RTN","DGRPDT",139,0)
 Q:$P(CRNG,"^")=0 CRNG
"RTN","DGRPDT",140,0)
 I $G(TODT)'="",TODT<$P(CRNG,U,3) Q "0^Not Within Valid Date Range"
"RTN","DGRPDT",141,0)
 I $G(FRDT)="" Q $$WITHIN($P(CRNG,"^"),$P(CRNG,"^",2),.TODT)_" for Conflict - "_$$FMTE^XLFDT($P(CRNG,"^"))_" through "_$$FMTE^XLFDT($P(CRNG,"^",2))
"RTN","DGRPDT",142,0)
 I $G(TODT)="" Q $$WITHIN($P(CRNG,"^"),$P(CRNG,"^",2),.FRDT)_" for Conflict - "_$$FMTE^XLFDT($P(CRNG,"^"))_" through "_$$FMTE^XLFDT($P(CRNG,"^",2))
"RTN","DGRPDT",143,0)
 Q $$RWITHIN($P(CRNG,"^"),$P(CRNG,"^",2),.FRDT,.TODT)_" for Conflict - "_$$FMTE^XLFDT($P(CRNG,"^"))_" through "_$$FMTE^XLFDT($P(CRNG,"^",2))
"RTN","DGRPDT",144,0)
GETCNFDT(CNFLCT) ; get the date range for input conflict
"RTN","DGRPDT",145,0)
 Q:'$D(CNFLCT) "0^INVALID CONFLICT"
"RTN","DGRPDT",146,0)
 N CRNG,CNFLCT1
"RTN","DGRPDT",147,0)
 S CNFLCT1=$P(CNFLCT,"-")
"RTN","DGRPDT",148,0)
 S CRNG=$T(@(CNFLCT1)) Q:CRNG']"" "0^INVALID CONFLICT"
"RTN","DGRPDT",149,0)
 S CRNG=$P(CRNG,";;",2) S:$P(CRNG,"^",2)="" $P(CRNG,"^",2)=$$DT^XLFDT
"RTN","DGRPDT",150,0)
 S:$P(CRNG,"^")="" $P(CRNG,"^")=1410102
"RTN","DGRPDT",151,0)
 S:$P(CRNG,U,3)="" $P(CRNG,U,3)=$P(CRNG,U)
"RTN","DGRPDT",152,0)
 Q CRNG
"RTN","DGRPDT",153,0)
IGNORE(NODE,IFLD) ; extract top-level field to ignore when comparing
"RTN","DGRPDT",154,0)
 N LOOP,QLOOP,RVAL,LSTPC,PC
"RTN","DGRPDT",155,0)
 S LOOP="",IFLD="^"_IFLD_"^"
"RTN","DGRPDT",156,0)
 F  S LOOP=$O(NODE(LOOP)) Q:LOOP=""  D
"RTN","DGRPDT",157,0)
 .I IFLD[("^"_$P(NODE(LOOP),",")_"^") S NODE(LOOP)=$P(NODE(LOOP),",",2,99),LOOP="" Q
"RTN","DGRPDT",158,0)
 .S LSTPC=$L($TR(NODE(LOOP),".0123456789"))+1
"RTN","DGRPDT",159,0)
 .I IFLD[("^"_$P(NODE(LOOP),",",LSTPC)_"^") S NODE(LOOP)=$P(NODE(LOOP),",",1,LSTPC-1),LOOP="" Q
"RTN","DGRPDT",160,0)
 .F PC=1:1:LSTPC Q:$G(QLOOP)  I IFLD[("^"_$P(NODE(LOOP),",",PC)_"^") S NODE(LOOP)=$P(NODE(LOOP),",",1,PC-1)_","_$P(NODE(LOOP),",",PC+1,99),LOOP="" Q
"RTN","DGRPDT",161,0)
 Q
"RTN","DGRPDT",162,0)
CNFLCT ;; ***  DO NOT REMOVE OR CHANGE BELOW CONFLICT VALUES  ***
"RTN","DGRPDT",163,0)
 ;;
"RTN","DGRPDT",164,0)
 ;'fr dt'^'to dt'^minimum 'to dt'
"RTN","DGRPDT",165,0)
WWI ;;2170406^2181111
"RTN","DGRPDT",166,0)
WWIIE ;;2411207^2461231
"RTN","DGRPDT",167,0)
WWIIP ;;2411207^2461231
"RTN","DGRPDT",168,0)
KOR ;;2500627^2550131
"RTN","DGRPDT",169,0)
VIET ;;2610228^2750507
"RTN","DGRPDT",170,0)
LEB ;;2831001^
"RTN","DGRPDT",171,0)
GREN ;;2831023^2831121
"RTN","DGRPDT",172,0)
PAN ;;2891220^2900131
"RTN","DGRPDT",173,0)
GULF ;;2900802^
"RTN","DGRPDT",174,0)
SOM ;;2920928^
"RTN","DGRPDT",175,0)
YUG ;;2920622^
"RTN","DGRPDT",176,0)
OTHER ;;^
"RTN","DGRPDT",177,0)
OIF ;;3030301^^3030319
"RTN","DGRPDT",178,0)
OEF ;;3010901^^3010911
"RTN","DGRPDT",179,0)
UNK ;;3010901^^3010911
"UP",2,2.3215,-1)
2^.3215
"UP",2,2.3215,0)
2.3215
"VER")
8.0^22.0
"^DD",2,2.3215,.03,0)
OEF/OIF TO DATE^DX^^0;3^S %DT="E" D ^%DT S X=Y I $D(X) K:'$$VALCON1^DGRPMS(DA(1),DA,X,1) X I $D(X) S DFN=DA(1) D OEIF^DGLOCK
"^DD",2,2.3215,.03,1,0)
^.1
"^DD",2,2.3215,.03,1,1,0)
2.3215^AENR321503^MUMPS
"^DD",2,2.3215,.03,1,1,1)
D EVENT^IVMPLOG(DA(1))
"^DD",2,2.3215,.03,1,1,2)
D EVENT^IVMPLOG(DA(1))
"^DD",2,2.3215,.03,1,1,"%D",0)
^^2^2^3060123^
"^DD",2,2.3215,.03,1,1,"%D",1,0)
This MUMPS cross-reference is used to notify HEC of changes to the
"^DD",2,2.3215,.03,1,1,"%D",2,0)
OEF/OIF TO DATE field.
"^DD",2,2.3215,.03,1,1,"DT")
3060123
"^DD",2,2.3215,.03,3)
Enter the date the patient left the OEF/OIF area if known.  Otherwise, enter the end date of military pay for this OEF/OIF deployment.
"^DD",2,2.3215,.03,4)

"^DD",2,2.3215,.03,21,0)
^.001^9^9^3060322^^^^
"^DD",2,2.3215,.03,21,1,0)
If the service indicated is OEF or UNKNOWN OEF/OIF, this date must be on
"^DD",2,2.3215,.03,21,2,0)
or after 9/11/2001. If the service indicated is OIF, this date must be on
"^DD",2,2.3215,.03,21,3,0)
or after 3/19/2003.
"^DD",2,2.3215,.03,21,4,0)
 
"^DD",2,2.3215,.03,21,5,0)
The meaning of this date depends on where the information was obtained
"^DD",2,2.3215,.03,21,6,0)
from.  If the data came from the VIS, Environmental Medicine or FHIE
"^DD",2,2.3215,.03,21,7,0)
systems, this is the military pay end date for the assignment to
"^DD",2,2.3215,.03,21,8,0)
the OEF/OIF operation.  If it came from any other source, it is the date
"^DD",2,2.3215,.03,21,9,0)
the patient actually left the OEF/OIF area.
"^DD",2,2.3215,.03,"DT")
3061011
"BLD",6882,6)
^647
**END**
**END**
