KIDS Distribution saved on Aug 17, 2006@15:00:16
PXRM*2.0*4 build 08/17/2006
**KIDS**:PXRM*2.0*4^GMTS*2.7*75^

**INSTALL NAME**
PXRM*2.0*4
"BLD",5288,0)
PXRM*2.0*4^CLINICAL REMINDERS^0^3060817^y
"BLD",5288,1,0)
^^3^3^3060614^^^^
"BLD",5288,1,1,0)
Removal of old-style MRD and bug fixes.
"BLD",5288,1,2,0)

"BLD",5288,1,3,0)

"BLD",5288,4,0)
^9.64PA^810.5^17
"BLD",5288,4,800,0)
800
"BLD",5288,4,800,222)
y^y^f^^^^n
"BLD",5288,4,801.41,0)
801.41
"BLD",5288,4,801.41,222)
y^y^f^^^^n
"BLD",5288,4,801.5,0)
801.5
"BLD",5288,4,801.5,222)
y^y^f^^^^n
"BLD",5288,4,801.55,0)
801.55
"BLD",5288,4,801.55,222)
y^y^f^^^^n
"BLD",5288,4,802.4,0)
802.4
"BLD",5288,4,802.4,222)
y^y^f^^y^^y^o^n
"BLD",5288,4,802.4,224)
I Y>0
"BLD",5288,4,810.1,0)
810.1
"BLD",5288,4,810.1,222)
y^y^f^^^^n
"BLD",5288,4,810.2,0)
810.2
"BLD",5288,4,810.2,222)
y^y^f^^^^n
"BLD",5288,4,810.3,0)
810.3
"BLD",5288,4,810.3,222)
y^y^f^^^^n
"BLD",5288,4,810.4,0)
810.4
"BLD",5288,4,810.4,222)
y^y^f^^^^n
"BLD",5288,4,810.5,0)
810.5
"BLD",5288,4,810.5,222)
y^y^f^^^^n
"BLD",5288,4,810.7,0)
810.7
"BLD",5288,4,810.7,222)
y^y^f^^^^n
"BLD",5288,4,810.8,0)
810.8
"BLD",5288,4,810.8,222)
y^y^f^^^^n
"BLD",5288,4,810.9,0)
810.9
"BLD",5288,4,810.9,222)
y^y^f^^n^^y^o^n
"BLD",5288,4,810.9,224)
I Y=20
"BLD",5288,4,811.4,0)
811.4
"BLD",5288,4,811.4,222)
y^y^f^^n^^y^o^n
"BLD",5288,4,811.4,224)
I $$CFTINC^PXRMP4I(Y)
"BLD",5288,4,811.5,0)
811.5
"BLD",5288,4,811.5,222)
y^y^f^^n^^y^o^n
"BLD",5288,4,811.5,224)
I Y=610
"BLD",5288,4,811.8,0)
811.8
"BLD",5288,4,811.8,222)
n^y^f^^n^^y^o^n
"BLD",5288,4,811.8,224)
I $$EXFINC^PXRMP4I(Y)
"BLD",5288,4,811.9,0)
811.9
"BLD",5288,4,811.9,222)
y^y^f^^^^n
"BLD",5288,4,"B",800,800)

"BLD",5288,4,"B",801.41,801.41)

"BLD",5288,4,"B",801.5,801.5)

"BLD",5288,4,"B",801.55,801.55)

"BLD",5288,4,"B",802.4,802.4)

"BLD",5288,4,"B",810.1,810.1)

"BLD",5288,4,"B",810.2,810.2)

"BLD",5288,4,"B",810.3,810.3)

"BLD",5288,4,"B",810.4,810.4)

"BLD",5288,4,"B",810.5,810.5)

"BLD",5288,4,"B",810.7,810.7)

"BLD",5288,4,"B",810.8,810.8)

"BLD",5288,4,"B",810.9,810.9)

"BLD",5288,4,"B",811.4,811.4)

"BLD",5288,4,"B",811.5,811.5)

"BLD",5288,4,"B",811.8,811.8)

"BLD",5288,4,"B",811.9,811.9)

"BLD",5288,6.3)
21
"BLD",5288,"ABPKG")
n
"BLD",5288,"INI")
PRE^PXRMP4I
"BLD",5288,"INID")
^
"BLD",5288,"INIT")
POST^PXRMP4I
"BLD",5288,"KRN",0)
^9.67PA^8989.52^19
"BLD",5288,"KRN",.4,0)
.4
"BLD",5288,"KRN",.4,"NM",0)
^9.68A^12^12
"BLD",5288,"KRN",.4,"NM",1,0)
PXRM LOCATION LIST INQUIRY    FILE #810.9^810.9^0
"BLD",5288,"KRN",.4,"NM",2,0)
PXRM SPONSOR INQUIRY    FILE #811.6^811.6^0
"BLD",5288,"KRN",.4,"NM",3,0)
PXRM RULE SET    FILE #810.4^810.4^0
"BLD",5288,"KRN",.4,"NM",4,0)
PXRM REMINDER RULE    FILE #810.4^810.4^0
"BLD",5288,"KRN",.4,"NM",5,0)
PXRM EXTRACT PARAMETER    FILE #810.2^810.2^1^
"BLD",5288,"KRN",.4,"NM",6,0)
PXRM EXTRACT DEFINITION    FILE #810.2^810.2^0
"BLD",5288,"KRN",.4,"NM",7,0)
PXRM EXTRACT FINDING    FILE #810.7^810.7^1^
"BLD",5288,"KRN",.4,"NM",8,0)
PXRM EXTRACT COUNTING    FILE #810.7^810.7^0
"BLD",5288,"KRN",.4,"NM",9,0)
PXRM EXTRACT FINDING GROUP    FILE #810.8^810.8^1^
"BLD",5288,"KRN",.4,"NM",10,0)
PXRM EXTRACT COUNTING GROUP    FILE #810.8^810.8^0
"BLD",5288,"KRN",.4,"NM",11,0)
PXRM PATIENT LIST RULE    FILE #810.4^810.4^0
"BLD",5288,"KRN",.4,"NM",12,0)
PXRM LOCATION LIST LIST    FILE #810.9^810.9^0
"BLD",5288,"KRN",.4,"NM","B","PXRM EXTRACT COUNTING    FILE #810.7",8)

"BLD",5288,"KRN",.4,"NM","B","PXRM EXTRACT COUNTING GROUP    FILE #810.8",10)

"BLD",5288,"KRN",.4,"NM","B","PXRM EXTRACT DEFINITION    FILE #810.2",6)

"BLD",5288,"KRN",.4,"NM","B","PXRM EXTRACT FINDING    FILE #810.7",7)

"BLD",5288,"KRN",.4,"NM","B","PXRM EXTRACT FINDING GROUP    FILE #810.8",9)

"BLD",5288,"KRN",.4,"NM","B","PXRM EXTRACT PARAMETER    FILE #810.2",5)

"BLD",5288,"KRN",.4,"NM","B","PXRM LOCATION LIST INQUIRY    FILE #810.9",1)

"BLD",5288,"KRN",.4,"NM","B","PXRM LOCATION LIST LIST    FILE #810.9",12)

"BLD",5288,"KRN",.4,"NM","B","PXRM PATIENT LIST RULE    FILE #810.4",11)

"BLD",5288,"KRN",.4,"NM","B","PXRM REMINDER RULE    FILE #810.4",4)

"BLD",5288,"KRN",.4,"NM","B","PXRM RULE SET    FILE #810.4",3)

"BLD",5288,"KRN",.4,"NM","B","PXRM SPONSOR INQUIRY    FILE #811.6",2)

"BLD",5288,"KRN",.401,0)
.401
"BLD",5288,"KRN",.401,"NM",0)
^9.68A^^
"BLD",5288,"KRN",.402,0)
.402
"BLD",5288,"KRN",.402,"NM",0)
^9.68A^9^9
"BLD",5288,"KRN",.402,"NM",1,0)
PXRM EDIT REMINDER RULE    FILE #810.4^810.4^0
"BLD",5288,"KRN",.402,"NM",2,0)
PXRM EDIT RULE SET    FILE #810.4^810.4^0
"BLD",5288,"KRN",.402,"NM",3,0)
PXRM EDIT PATIENT LIST RULE    FILE #810.4^810.4^0
"BLD",5288,"KRN",.402,"NM",4,0)
PXRM EXTRACT PARAMETERS    FILE #810.2^810.2^1^
"BLD",5288,"KRN",.402,"NM",5,0)
PXRM EXTRACT DEFINITION    FILE #810.2^810.2^0
"BLD",5288,"KRN",.402,"NM",6,0)
PXRM EXTRACT FINDINGS    FILE #810.7^810.7^1^
"BLD",5288,"KRN",.402,"NM",7,0)
PXRM EXTRACT COUNTING    FILE #810.7^810.7^0
"BLD",5288,"KRN",.402,"NM",8,0)
PXRM EXTRACT FINDING GROUP    FILE #810.8^810.8^1^
"BLD",5288,"KRN",.402,"NM",9,0)
PXRM EXTRACT COUNTING GROUP    FILE #810.8^810.8^0
"BLD",5288,"KRN",.402,"NM","B","PXRM EDIT PATIENT LIST RULE    FILE #810.4",3)

"BLD",5288,"KRN",.402,"NM","B","PXRM EDIT REMINDER RULE    FILE #810.4",1)

"BLD",5288,"KRN",.402,"NM","B","PXRM EDIT RULE SET    FILE #810.4",2)

"BLD",5288,"KRN",.402,"NM","B","PXRM EXTRACT COUNTING    FILE #810.7",7)

"BLD",5288,"KRN",.402,"NM","B","PXRM EXTRACT COUNTING GROUP    FILE #810.8",9)

"BLD",5288,"KRN",.402,"NM","B","PXRM EXTRACT DEFINITION    FILE #810.2",5)

"BLD",5288,"KRN",.402,"NM","B","PXRM EXTRACT FINDING GROUP    FILE #810.8",8)

"BLD",5288,"KRN",.402,"NM","B","PXRM EXTRACT FINDINGS    FILE #810.7",6)

"BLD",5288,"KRN",.402,"NM","B","PXRM EXTRACT PARAMETERS    FILE #810.2",4)

"BLD",5288,"KRN",.403,0)
.403
"BLD",5288,"KRN",.5,0)
.5
"BLD",5288,"KRN",.84,0)
.84
"BLD",5288,"KRN",3.6,0)
3.6
"BLD",5288,"KRN",3.8,0)
3.8
"BLD",5288,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",5288,"KRN",3.8,"NM",1,0)
GEC2 NATIONAL ROLLUP^^0
"BLD",5288,"KRN",3.8,"NM","B","GEC2 NATIONAL ROLLUP",1)

"BLD",5288,"KRN",9.2,0)
9.2
"BLD",5288,"KRN",9.8,0)
9.8
"BLD",5288,"KRN",9.8,"NM",0)
^9.68A^173^171
"BLD",5288,"KRN",9.8,"NM",1,0)
PXRMXD^^0^B78697890
"BLD",5288,"KRN",9.8,"NM",2,0)
PXRMXDET^^1^
"BLD",5288,"KRN",9.8,"NM",3,0)
PXRMPD1^^1^
"BLD",5288,"KRN",9.8,"NM",4,0)
PXRMXSEL^^1^
"BLD",5288,"KRN",9.8,"NM",5,0)
PXRMXTA^^0^B50397705
"BLD",5288,"KRN",9.8,"NM",6,0)
PXRMEXLC^^0^B45607046
"BLD",5288,"KRN",9.8,"NM",7,0)
PXRMEXLD^^0^B89789485
"BLD",5288,"KRN",9.8,"NM",8,0)
PXRMDEDI^^0^B22823576
"BLD",5288,"KRN",9.8,"NM",9,0)
PXRMDCPY^^0^B35646048
"BLD",5288,"KRN",9.8,"NM",10,0)
PXRMLPOE^^0^B17281673
"BLD",5288,"KRN",9.8,"NM",11,0)
PXRMLOG^^0^B57930315
"BLD",5288,"KRN",9.8,"NM",12,0)
PXRMLOGF^^1^
"BLD",5288,"KRN",9.8,"NM",13,0)
PXRMP18E^^1^
"BLD",5288,"KRN",9.8,"NM",14,0)
PXRMP18I^^1^
"BLD",5288,"KRN",9.8,"NM",15,0)
PXRMPARS^^0^B2984777
"BLD",5288,"KRN",9.8,"NM",16,0)
PXRMINQ^^0^B22208346
"BLD",5288,"KRN",9.8,"NM",17,0)
PXRMLOCL^^0^B21905784
"BLD",5288,"KRN",9.8,"NM",18,0)
PXRMPD^^1^
"BLD",5288,"KRN",9.8,"NM",19,0)
PXRMVCPT^^0^B26000582
"BLD",5288,"KRN",9.8,"NM",20,0)
PXRMXSEO^^1^
"BLD",5288,"KRN",9.8,"NM",21,0)
PXRMXSE^^1^
"BLD",5288,"KRN",9.8,"NM",22,0)
PXRMXPR^^0^B83078518
"BLD",5288,"KRN",9.8,"NM",23,0)
PXRMMH^^0^B26669447
"BLD",5288,"KRN",9.8,"NM",24,0)
PXRMTAXS^^0^B665414
"BLD",5288,"KRN",9.8,"NM",25,0)
PXRMCWH^^0^B41378773
"BLD",5288,"KRN",9.8,"NM",26,0)
PXRMPDEM^^0^B22239744
"BLD",5288,"KRN",9.8,"NM",27,0)
PXRMCDEF^^0^B1896226
"BLD",5288,"KRN",9.8,"NM",28,0)
PXRMLPU^^0^B69127085
"BLD",5288,"KRN",9.8,"NM",29,0)
PXRMDLG5^^0^B23189985
"BLD",5288,"KRN",9.8,"NM",30,0)
PXRMDEV^^0^B28754110
"BLD",5288,"KRN",9.8,"NM",31,0)
PXRMDATE^^0^B43288012
"BLD",5288,"KRN",9.8,"NM",32,0)
PXRMINDX^^0^B34936278
"BLD",5288,"KRN",9.8,"NM",33,0)
PXRMMST^^0^B74220364
"BLD",5288,"KRN",9.8,"NM",34,0)
PXRMPCIN^^0^B551449
"BLD",5288,"KRN",9.8,"NM",35,0)
PXRMPLST^^0^B54076318
"BLD",5288,"KRN",9.8,"NM",36,0)
PXRMINDL^^0^B23505754
"BLD",5288,"KRN",9.8,"NM",37,0)
PXRMDISC^^0^B1065588
"BLD",5288,"KRN",9.8,"NM",38,0)
PXRM^^0^B33753989
"BLD",5288,"KRN",9.8,"NM",39,0)
PXRMVLST^^0^B42728225
"BLD",5288,"KRN",9.8,"NM",40,0)
PXRMSPED^^0^B6621847
"BLD",5288,"KRN",9.8,"NM",41,0)
PXRMLLED^^0^B3989594
"BLD",5288,"KRN",9.8,"NM",42,0)
PXRMLCR^^0^B36285554
"BLD",5288,"KRN",9.8,"NM",43,0)
PXRMLPP^^0^B46321797
"BLD",5288,"KRN",9.8,"NM",44,0)
PXRMRULE^^0^B97735576
"BLD",5288,"KRN",9.8,"NM",45,0)
PXRMEXIU^^0^B67491313
"BLD",5288,"KRN",9.8,"NM",46,0)
PXRMEXU0^^0^B5214971
"BLD",5288,"KRN",9.8,"NM",47,0)
PXRMLPM^^1^
"BLD",5288,"KRN",9.8,"NM",48,0)
PXRMETH^^0^B89915697
"BLD",5288,"KRN",9.8,"NM",49,0)
PXRMETM^^0^B28395504
"BLD",5288,"KRN",9.8,"NM",50,0)
PXRMEUT^^0^B48878170
"BLD",5288,"KRN",9.8,"NM",51,0)
PXRMLRED^^0^B50465867
"BLD",5288,"KRN",9.8,"NM",52,0)
PXRMLCD^^0^B2868685
"BLD",5288,"KRN",9.8,"NM",53,0)
PXRMREDF^^0^B83881893
"BLD",5288,"KRN",9.8,"NM",54,0)
PXRMPTDF^^0^B74692080
"BLD",5288,"KRN",9.8,"NM",55,0)
PXRMPTTR^^0^B21604330
"BLD",5288,"KRN",9.8,"NM",56,0)
PXRMTMED^^0^B12460684
"BLD",5288,"KRN",9.8,"NM",57,0)
PXRMSTAT^^0^B4309689
"BLD",5288,"KRN",9.8,"NM",58,0)
PXRMOBJ^^0^B23584122
"BLD",5288,"KRN",9.8,"NM",59,0)
PXRMG2E1^^0^B23065425
"BLD",5288,"KRN",9.8,"NM",60,0)
PXRMG2E4^^0^B11886015
"BLD",5288,"KRN",9.8,"NM",61,0)
PXRMG2M1^^0^B19673315
"BLD",5288,"KRN",9.8,"NM",62,0)
PXRMG2R1^^0^B25500840
"BLD",5288,"KRN",9.8,"NM",63,0)
PXRMG2E2^^0^B38360258
"BLD",5288,"KRN",9.8,"NM",64,0)
PXRMGECJ^^0^B75725828
"BLD",5288,"KRN",9.8,"NM",65,0)
PXRMGECK^^0^B15693311
"BLD",5288,"KRN",9.8,"NM",66,0)
PXRMGECL^^0^B5710145
"BLD",5288,"KRN",9.8,"NM",67,0)
PXRMGECM^^0^B33651688
"BLD",5288,"KRN",9.8,"NM",68,0)
PXRMGECP^^0^B63775895
"BLD",5288,"KRN",9.8,"NM",69,0)
PXRMGECQ^^0^B80289381
"BLD",5288,"KRN",9.8,"NM",70,0)
PXRMGECR^^0^B66172935
"BLD",5288,"KRN",9.8,"NM",71,0)
PXRMGECS^^0^B39772388
"BLD",5288,"KRN",9.8,"NM",72,0)
PXRMGECT^^0^B25262357
"BLD",5288,"KRN",9.8,"NM",73,0)
PXRMGECU^^0^B91128162
"BLD",5288,"KRN",9.8,"NM",74,0)
PXRMGECV^^0^B44364226
"BLD",5288,"KRN",9.8,"NM",75,0)
PXRMGECZ^^0^B46355261
"BLD",5288,"KRN",9.8,"NM",76,0)
PXRMPDR^^0^B46925206
"BLD",5288,"KRN",9.8,"NM",78,0)
PXRMPDRS^^0^B52646601
"BLD",5288,"KRN",9.8,"NM",79,0)
PXRMXSE1^^0^B52743138
"BLD",5288,"KRN",9.8,"NM",80,0)
PXRMXSL1^^0^B71901899
"BLD",5288,"KRN",9.8,"NM",81,0)
PXRMXSL2^^0^B44572298
"BLD",5288,"KRN",9.8,"NM",82,0)
PXRMXEVL^^0^B2049131
"BLD",5288,"KRN",9.8,"NM",83,0)
PXRMXDT1^^0^B54036830
"BLD",5288,"KRN",9.8,"NM",84,0)
PXRMXX1^^0^B34315133
"BLD",5288,"KRN",9.8,"NM",85,0)
PXRMETX^^0^B58362915
"BLD",5288,"KRN",9.8,"NM",86,0)
PXRMSTA1^^0^B72646186
"BLD",5288,"KRN",9.8,"NM",87,0)
PXRMSTA2^^0^B23595910
"BLD",5288,"KRN",9.8,"NM",88,0)
PXRMFF0^^0^B5682907
"BLD",5288,"KRN",9.8,"NM",89,0)
PXRMMHV^^0^B3798193
"BLD",5288,"KRN",9.8,"NM",90,0)
PXRMOUTD^^0^B14357446
"BLD",5288,"KRN",9.8,"NM",91,0)
PXRMOUTM^^0^B27278123
"BLD",5288,"KRN",9.8,"NM",92,0)
PXRMXPR1^^0^B16927076
"BLD",5288,"KRN",9.8,"NM",93,0)
PXRMXQUE^^0^B19825120
"BLD",5288,"KRN",9.8,"NM",94,0)
PXRMETXU^^0^B4055861
"BLD",5288,"KRN",9.8,"NM",95,0)
PXRMLPHS^^0^B5917705
"BLD",5288,"KRN",9.8,"NM",96,0)
PXRMERRH^^0^B23062075
"BLD",5288,"KRN",9.8,"NM",97,0)
PXRMPROB^^0^B44715259
"BLD",5288,"KRN",9.8,"NM",98,0)
PXRMREV^^0^B10699713
"BLD",5288,"KRN",9.8,"NM",99,0)
PXRMRUL1^^0^B12674426
"BLD",5288,"KRN",9.8,"NM",100,0)
PXRMTIU^^0^B5275428
"BLD",5288,"KRN",9.8,"NM",101,0)
PXRMPDRP^^0^B93112998
"BLD",5288,"KRN",9.8,"NM",102,0)
PXRMXDUT^^0^B36214366
"BLD",5288,"KRN",9.8,"NM",103,0)
PXRMDGPT^^0^B43220720
"BLD",5288,"KRN",9.8,"NM",104,0)
PXRMRCPT^^0^B20161375
"BLD",5288,"KRN",9.8,"NM",105,0)
PXRMXGPR^^0^B76948185
"BLD",5288,"KRN",9.8,"NM",106,0)
PXRMXTD^^0^B10909295
"BLD",5288,"KRN",9.8,"NM",107,0)
PXRMOUTC^^0^B29005432
"BLD",5288,"KRN",9.8,"NM",108,0)
PXRMREDT^^0^B59440295
"BLD",5288,"KRN",9.8,"NM",109,0)
PXRMLOGX^^0^B66287455
"BLD",5288,"KRN",9.8,"NM",110,0)
PXRMAGE^^0^B13089093
"BLD",5288,"KRN",9.8,"NM",111,0)
PXRMDIN^^0^B6339292
"BLD",5288,"KRN",9.8,"NM",112,0)
PXRMDOUT^^0^B6790272
"BLD",5288,"KRN",9.8,"NM",113,0)
PXRMTERM^^0^B73050345
"BLD",5288,"KRN",9.8,"NM",114,0)
PXRMETXR^^0^B73752465
"BLD",5288,"KRN",9.8,"NM",115,0)
PXRMETT^^0^B44639799
"BLD",5288,"KRN",9.8,"NM",116,0)
PXRMPTD2^^0^B4770975
"BLD",5288,"KRN",9.8,"NM",117,0)
PXRMFNFT^^0^B38705516
"BLD",5288,"KRN",9.8,"NM",118,0)
PXRMEUT1^^0^B17787361
"BLD",5288,"KRN",9.8,"NM",119,0)
PXRMRST^^0^B3083518
"BLD",5288,"KRN",9.8,"NM",120,0)
PXRMP4IW^^0^B41425248
"BLD",5288,"KRN",9.8,"NM",121,0)
PXRMLRM^^0^B33634264
"BLD",5288,"KRN",9.8,"NM",122,0)
PXRMXBSY^^0^B3137765
"BLD",5288,"KRN",9.8,"NM",123,0)
PXRMVPOV^^0^B26252424
"BLD",5288,"KRN",9.8,"NM",124,0)
PXRMRAD^^0^B7364662
"BLD",5288,"KRN",9.8,"NM",125,0)
PXRMDLG4^^0^B90053996
"BLD",5288,"KRN",9.8,"NM",126,0)
PXRMXSC^^0^B6596635
"BLD",5288,"KRN",9.8,"NM",127,0)
PXRMXT^^0^B32803390
"BLD",5288,"KRN",9.8,"NM",128,0)
PXRMXTU^^0^B33168453
"BLD",5288,"KRN",9.8,"NM",129,0)
PXRMXGUT^^0^B4442825
"BLD",5288,"KRN",9.8,"NM",130,0)
PXRMINTR^^0^B41426356
"BLD",5288,"KRN",9.8,"NM",131,0)
PXRMTEDT^^0^B4554623
"BLD",5288,"KRN",9.8,"NM",132,0)
PXRMXSU^^0^B67359624
"BLD",5288,"KRN",9.8,"NM",134,0)
PXRMETHL^^0^B3978454
"BLD",5288,"KRN",9.8,"NM",135,0)
PXRMFFDB^^0^B50297267
"BLD",5288,"KRN",9.8,"NM",136,0)
PXRMDRGR^^0^B43133634
"BLD",5288,"KRN",9.8,"NM",137,0)
PXRMDRUG^^0^B54195557
"BLD",5288,"KRN",9.8,"NM",138,0)
PXRMDATA^^0^B5652428
"BLD",5288,"KRN",9.8,"NM",139,0)
PXRMVSIT^^0^B8397874
"BLD",5288,"KRN",9.8,"NM",140,0)
PXRMTAX^^0^B60240316
"BLD",5288,"KRN",9.8,"NM",141,0)
PXRMXTE^^0^B13504501
"BLD",5288,"KRN",9.8,"NM",142,0)
PXRMUTIL^^0^B28919429
"BLD",5288,"KRN",9.8,"NM",143,0)
PXRMLAB^^0^B7845306
"BLD",5288,"KRN",9.8,"NM",144,0)
PXRMRDI^^0^B13129062
"BLD",5288,"KRN",9.8,"NM",145,0)
PXRMXSD^^0^B37722805
"BLD",5288,"KRN",9.8,"NM",146,0)
PXRMENOD^^0^B2553031
"BLD",5288,"KRN",9.8,"NM",147,0)
PXRMP4I1^^0^B81567254
"BLD",5288,"KRN",9.8,"NM",148,0)
PXRMINDC^^0^B63259177
"BLD",5288,"KRN",9.8,"NM",149,0)
PXRMINDD^^0^B61787180
"BLD",5288,"KRN",9.8,"NM",150,0)
PXRMLOCF^^0^B66370340
"BLD",5288,"KRN",9.8,"NM",151,0)
PXRMPTD1^^0^B6511730
"BLD",5288,"KRN",9.8,"NM",152,0)
PXRMEPED^^0^B10077314
"BLD",5288,"KRN",9.8,"NM",153,0)
PXRMEGED^^0^B10382097
"BLD",5288,"KRN",9.8,"NM",154,0)
PXRMEFED^^0^B10643956
"BLD",5288,"KRN",9.8,"NM",155,0)
PXRMEGM^^0^B19306296
"BLD",5288,"KRN",9.8,"NM",156,0)
PXRMEHLP^^0^B21957169
"BLD",5288,"KRN",9.8,"NM",157,0)
PXRMEFM^^0^B14152898
"BLD",5288,"KRN",9.8,"NM",158,0)
PXRMEPM^^0^B29139356
"BLD",5288,"KRN",9.8,"NM",159,0)
PXRMDNVA^^0^B5718957
"BLD",5288,"KRN",9.8,"NM",160,0)
PXRMLHLP^^0^B22028636
"BLD",5288,"KRN",9.8,"NM",161,0)
PXRMLRHL^^0^B5896989
"BLD",5288,"KRN",9.8,"NM",162,0)
PXRMDEDT^^0^B83786039
"BLD",5288,"KRN",9.8,"NM",163,0)
PXRMDLGZ^^0^B41128562
"BLD",5288,"KRN",9.8,"NM",164,0)
PXRMDGEN^^0^B5814259
"BLD",5288,"KRN",9.8,"NM",165,0)
PXRM7API^^0^B3561001
"BLD",5288,"KRN",9.8,"NM",166,0)
PXRMFF^^0^B17969546
"BLD",5288,"KRN",9.8,"NM",167,0)
PXRMFFAT^^0^B889862
"BLD",5288,"KRN",9.8,"NM",168,0)
PXRMPTL^^0^B39396517
"BLD",5288,"KRN",9.8,"NM",169,0)
PXRMCDUE^^0^B28018765
"BLD",5288,"KRN",9.8,"NM",170,0)
PXRMORDR^^0^B9484065
"BLD",5288,"KRN",9.8,"NM",171,0)
PXRMETH1^^0^B13018351
"BLD",5288,"KRN",9.8,"NM",172,0)
PXRMDRCL^^0^B6327601
"BLD",5288,"KRN",9.8,"NM",173,0)
PXRMVALC^^0^B64415082
"BLD",5288,"KRN",9.8,"NM","B","PXRM",38)

"BLD",5288,"KRN",9.8,"NM","B","PXRM7API",165)

"BLD",5288,"KRN",9.8,"NM","B","PXRMAGE",110)

"BLD",5288,"KRN",9.8,"NM","B","PXRMCDEF",27)

"BLD",5288,"KRN",9.8,"NM","B","PXRMCDUE",169)

"BLD",5288,"KRN",9.8,"NM","B","PXRMCWH",25)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDATA",138)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDATE",31)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDCPY",9)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDEDI",8)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDEDT",162)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDEV",30)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDGEN",164)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDGPT",103)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDIN",111)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDISC",37)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDLG4",125)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDLG5",29)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDLGZ",163)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDNVA",159)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDOUT",112)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDRCL",172)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDRGR",136)

"BLD",5288,"KRN",9.8,"NM","B","PXRMDRUG",137)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEFED",154)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEFM",157)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEGED",153)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEGM",155)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEHLP",156)

"BLD",5288,"KRN",9.8,"NM","B","PXRMENOD",146)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEPED",152)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEPM",158)

"BLD",5288,"KRN",9.8,"NM","B","PXRMERRH",96)

"BLD",5288,"KRN",9.8,"NM","B","PXRMETH",48)

"BLD",5288,"KRN",9.8,"NM","B","PXRMETH1",171)

"BLD",5288,"KRN",9.8,"NM","B","PXRMETHL",134)

"BLD",5288,"KRN",9.8,"NM","B","PXRMETM",49)

"BLD",5288,"KRN",9.8,"NM","B","PXRMETT",115)

"BLD",5288,"KRN",9.8,"NM","B","PXRMETX",85)

"BLD",5288,"KRN",9.8,"NM","B","PXRMETXR",114)

"BLD",5288,"KRN",9.8,"NM","B","PXRMETXU",94)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEUT",50)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEUT1",118)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEXIU",45)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEXLC",6)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEXLD",7)

"BLD",5288,"KRN",9.8,"NM","B","PXRMEXU0",46)

"BLD",5288,"KRN",9.8,"NM","B","PXRMFF",166)

"BLD",5288,"KRN",9.8,"NM","B","PXRMFF0",88)

"BLD",5288,"KRN",9.8,"NM","B","PXRMFFAT",167)

"BLD",5288,"KRN",9.8,"NM","B","PXRMFFDB",135)

"BLD",5288,"KRN",9.8,"NM","B","PXRMFNFT",117)

"BLD",5288,"KRN",9.8,"NM","B","PXRMG2E1",59)

"BLD",5288,"KRN",9.8,"NM","B","PXRMG2E2",63)

"BLD",5288,"KRN",9.8,"NM","B","PXRMG2E4",60)

"BLD",5288,"KRN",9.8,"NM","B","PXRMG2M1",61)

"BLD",5288,"KRN",9.8,"NM","B","PXRMG2R1",62)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECJ",64)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECK",65)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECL",66)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECM",67)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECP",68)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECQ",69)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECR",70)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECS",71)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECT",72)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECU",73)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECV",74)

"BLD",5288,"KRN",9.8,"NM","B","PXRMGECZ",75)

"BLD",5288,"KRN",9.8,"NM","B","PXRMINDC",148)

"BLD",5288,"KRN",9.8,"NM","B","PXRMINDD",149)

"BLD",5288,"KRN",9.8,"NM","B","PXRMINDL",36)

"BLD",5288,"KRN",9.8,"NM","B","PXRMINDX",32)

"BLD",5288,"KRN",9.8,"NM","B","PXRMINQ",16)

"BLD",5288,"KRN",9.8,"NM","B","PXRMINTR",130)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLAB",143)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLCD",52)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLCR",42)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLHLP",160)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLLED",41)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLOCF",150)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLOCL",17)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLOG",11)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLOGF",12)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLOGX",109)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLPHS",95)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLPM",47)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLPOE",10)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLPP",43)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLPU",28)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLRED",51)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLRHL",161)

"BLD",5288,"KRN",9.8,"NM","B","PXRMLRM",121)

"BLD",5288,"KRN",9.8,"NM","B","PXRMMH",23)

"BLD",5288,"KRN",9.8,"NM","B","PXRMMHV",89)

"BLD",5288,"KRN",9.8,"NM","B","PXRMMST",33)

"BLD",5288,"KRN",9.8,"NM","B","PXRMOBJ",58)

"BLD",5288,"KRN",9.8,"NM","B","PXRMORDR",170)

"BLD",5288,"KRN",9.8,"NM","B","PXRMOUTC",107)

"BLD",5288,"KRN",9.8,"NM","B","PXRMOUTD",90)

"BLD",5288,"KRN",9.8,"NM","B","PXRMOUTM",91)

"BLD",5288,"KRN",9.8,"NM","B","PXRMP18E",13)

"BLD",5288,"KRN",9.8,"NM","B","PXRMP18I",14)

"BLD",5288,"KRN",9.8,"NM","B","PXRMP4I1",147)

"BLD",5288,"KRN",9.8,"NM","B","PXRMP4IW",120)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPARS",15)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPCIN",34)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPD",18)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPD1",3)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPDEM",26)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPDR",76)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPDRP",101)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPDRS",78)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPLST",35)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPROB",97)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPTD1",151)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPTD2",116)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPTDF",54)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPTL",168)

"BLD",5288,"KRN",9.8,"NM","B","PXRMPTTR",55)

"BLD",5288,"KRN",9.8,"NM","B","PXRMRAD",124)

"BLD",5288,"KRN",9.8,"NM","B","PXRMRCPT",104)

"BLD",5288,"KRN",9.8,"NM","B","PXRMRDI",144)

"BLD",5288,"KRN",9.8,"NM","B","PXRMREDF",53)

"BLD",5288,"KRN",9.8,"NM","B","PXRMREDT",108)

"BLD",5288,"KRN",9.8,"NM","B","PXRMREV",98)

"BLD",5288,"KRN",9.8,"NM","B","PXRMRST",119)

"BLD",5288,"KRN",9.8,"NM","B","PXRMRUL1",99)

"BLD",5288,"KRN",9.8,"NM","B","PXRMRULE",44)

"BLD",5288,"KRN",9.8,"NM","B","PXRMSPED",40)

"BLD",5288,"KRN",9.8,"NM","B","PXRMSTA1",86)

"BLD",5288,"KRN",9.8,"NM","B","PXRMSTA2",87)

"BLD",5288,"KRN",9.8,"NM","B","PXRMSTAT",57)

"BLD",5288,"KRN",9.8,"NM","B","PXRMTAX",140)

"BLD",5288,"KRN",9.8,"NM","B","PXRMTAXS",24)

"BLD",5288,"KRN",9.8,"NM","B","PXRMTEDT",131)

"BLD",5288,"KRN",9.8,"NM","B","PXRMTERM",113)

"BLD",5288,"KRN",9.8,"NM","B","PXRMTIU",100)

"BLD",5288,"KRN",9.8,"NM","B","PXRMTMED",56)

"BLD",5288,"KRN",9.8,"NM","B","PXRMUTIL",142)

"BLD",5288,"KRN",9.8,"NM","B","PXRMVALC",173)

"BLD",5288,"KRN",9.8,"NM","B","PXRMVCPT",19)

"BLD",5288,"KRN",9.8,"NM","B","PXRMVLST",39)

"BLD",5288,"KRN",9.8,"NM","B","PXRMVPOV",123)

"BLD",5288,"KRN",9.8,"NM","B","PXRMVSIT",139)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXBSY",122)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXD",1)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXDET",2)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXDT1",83)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXDUT",102)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXEVL",82)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXGPR",105)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXGUT",129)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXPR",22)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXPR1",92)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXQUE",93)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXSC",126)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXSD",145)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXSE",21)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXSE1",79)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXSEL",4)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXSEO",20)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXSL1",80)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXSL2",81)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXSU",132)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXT",127)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXTA",5)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXTD",106)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXTE",141)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXTU",128)

"BLD",5288,"KRN",9.8,"NM","B","PXRMXX1",84)

"BLD",5288,"KRN",19,0)
19
"BLD",5288,"KRN",19,"NM",0)
^9.68A^20^20
"BLD",5288,"KRN",19,"NM",1,0)
PXRM EXTRACT PATIENT LIST^^0
"BLD",5288,"KRN",19,"NM",2,0)
PXRM GEC DEGUG REPORTS^^1^
"BLD",5288,"KRN",19,"NM",3,0)
PXRM GEC DEBUG REPORTS^^0
"BLD",5288,"KRN",19,"NM",4,0)
PXRM GEC2 QUARTERLY ROLLUP^^0
"BLD",5288,"KRN",19,"NM",5,0)
PXRM REMINDER REPORTS^^2
"BLD",5288,"KRN",19,"NM",6,0)
PXRM REMINDERS DUE^^0
"BLD",5288,"KRN",19,"NM",7,0)
PXRM REMINDERS DUE NEW^^1^
"BLD",5288,"KRN",19,"NM",8,0)
PXRM LOCATION LIST INQUIRY^^0
"BLD",5288,"KRN",19,"NM",9,0)
PXRM REVIEW DATES^^0
"BLD",5288,"KRN",19,"NM",10,0)
PXRM COMPUTED FINDING EDIT^^0
"BLD",5288,"KRN",19,"NM",11,0)
PXRM SPONSOR EDIT^^0
"BLD",5288,"KRN",19,"NM",12,0)
PXRM TAXONOMY EDIT^^0
"BLD",5288,"KRN",19,"NM",13,0)
PXRM LOCATION LIST EDIT^^0
"BLD",5288,"KRN",19,"NM",14,0)
PXRM TERM EDIT^^0
"BLD",5288,"KRN",19,"NM",15,0)
PXRM EXTRACT MENU^^0
"BLD",5288,"KRN",19,"NM",16,0)
PXRM EXTRACT DEFINITION^^0
"BLD",5288,"KRN",19,"NM",17,0)
PXRM EXTRACT COUNTING GROUPS^^0
"BLD",5288,"KRN",19,"NM",18,0)
PXRM EXTRACT COUNTING RULES^^0
"BLD",5288,"KRN",19,"NM",19,0)
PXRM LIST RULE MANAGEMENT^^0
"BLD",5288,"KRN",19,"NM",20,0)
PXRM EXTRACT MANAGEMENT^^0
"BLD",5288,"KRN",19,"NM","B","PXRM COMPUTED FINDING EDIT",10)

"BLD",5288,"KRN",19,"NM","B","PXRM EXTRACT COUNTING GROUPS",17)

"BLD",5288,"KRN",19,"NM","B","PXRM EXTRACT COUNTING RULES",18)

"BLD",5288,"KRN",19,"NM","B","PXRM EXTRACT DEFINITION",16)

"BLD",5288,"KRN",19,"NM","B","PXRM EXTRACT MANAGEMENT",20)

"BLD",5288,"KRN",19,"NM","B","PXRM EXTRACT MENU",15)

"BLD",5288,"KRN",19,"NM","B","PXRM EXTRACT PATIENT LIST",1)

"BLD",5288,"KRN",19,"NM","B","PXRM GEC DEBUG REPORTS",3)

"BLD",5288,"KRN",19,"NM","B","PXRM GEC DEGUG REPORTS",2)

"BLD",5288,"KRN",19,"NM","B","PXRM GEC2 QUARTERLY ROLLUP",4)

"BLD",5288,"KRN",19,"NM","B","PXRM LIST RULE MANAGEMENT",19)

"BLD",5288,"KRN",19,"NM","B","PXRM LOCATION LIST EDIT",13)

"BLD",5288,"KRN",19,"NM","B","PXRM LOCATION LIST INQUIRY",8)

"BLD",5288,"KRN",19,"NM","B","PXRM REMINDER REPORTS",5)

"BLD",5288,"KRN",19,"NM","B","PXRM REMINDERS DUE",6)

"BLD",5288,"KRN",19,"NM","B","PXRM REMINDERS DUE NEW",7)

"BLD",5288,"KRN",19,"NM","B","PXRM REVIEW DATES",9)

"BLD",5288,"KRN",19,"NM","B","PXRM SPONSOR EDIT",11)

"BLD",5288,"KRN",19,"NM","B","PXRM TAXONOMY EDIT",12)

"BLD",5288,"KRN",19,"NM","B","PXRM TERM EDIT",14)

"BLD",5288,"KRN",19.1,0)
19.1
"BLD",5288,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",5288,"KRN",19.1,"NM",1,0)
PXRM MANAGER^^0
"BLD",5288,"KRN",19.1,"NM","B","PXRM MANAGER",1)

"BLD",5288,"KRN",101,0)
101
"BLD",5288,"KRN",101,"NM",0)
^9.68A^60^59
"BLD",5288,"KRN",101,"NM",1,0)
PXRM PATIENT LIST PATIENTS MENU^^2
"BLD",5288,"KRN",101,"NM",2,0)
PXRM PATIENT LIST AUTH USER^^0
"BLD",5288,"KRN",101,"NM",4,0)
PXRM PATIENT LIST VIEW^^0
"BLD",5288,"KRN",101,"NM",5,0)
PXRM PATIENT LIST MENU^^2
"BLD",5288,"KRN",101,"NM",6,0)
PXRM PATIENT LIST CREATE^^0
"BLD",5288,"KRN",101,"NM",7,0)
PXRM PATIENT LIST USER^^0
"BLD",5288,"KRN",101,"NM",8,0)
PXRM PATIENT LIST CREATION DOC^^0
"BLD",5288,"KRN",101,"NM",9,0)
PXRM PATIENT LIST HEALTH SUMMARY (INDIVIDUAL)^^0
"BLD",5288,"KRN",101,"NM",10,0)
PXRM PATIENT LIST EDIT^^0
"BLD",5288,"KRN",101,"NM",11,0)
PXRM PATIENT LIST HEALTH SUMMARY (ALL)^^0
"BLD",5288,"KRN",101,"NM",12,0)
PXRM PATIENT LIST DEMOGRAPHIC^^0
"BLD",5288,"KRN",101,"NM",13,0)
PXRM PATIENT LIST CHANGE VIEW^^0
"BLD",5288,"KRN",101,"NM",14,0)
PXRM PATIENT LIST DELETE^^0
"BLD",5288,"KRN",101,"NM",15,0)
PXRM PATIENT LIST DISPLAY^^0
"BLD",5288,"KRN",101,"NM",16,0)
PXRM PATIENT LIST EXIT^^0
"BLD",5288,"KRN",101,"NM",17,0)
PXRM PATIENT LIST OE/RR^^0
"BLD",5288,"KRN",101,"NM",18,0)
PXRM PATIENT LIST RULES^^0
"BLD",5288,"KRN",101,"NM",19,0)
PXRM PATIENT LIST USER COPY^^0
"BLD",5288,"KRN",101,"NM",20,0)
PXRM PATIENT LIST USER CREATE^^0
"BLD",5288,"KRN",101,"NM",21,0)
PXRM EXTRACT SUMMARY MENU^^0
"BLD",5288,"KRN",101,"NM",22,0)
PXRM EXTRACT SUMMARY PAT TOTALS^^1^
"BLD",5288,"KRN",101,"NM",23,0)
PXRM RULE SET TEST^^0
"BLD",5288,"KRN",101,"NM",24,0)
PXRM LIST RULE MENU^^0
"BLD",5288,"KRN",101,"NM",25,0)
PXRM LIST RULE CHANGE VIEW^^0
"BLD",5288,"KRN",101,"NM",26,0)
PXRM LIST RULE CREATE^^0
"BLD",5288,"KRN",101,"NM",27,0)
PXRM LIST RULE EXIT^^0
"BLD",5288,"KRN",101,"NM",28,0)
PXRM LIST RULE DISPLAY/EDIT^^0
"BLD",5288,"KRN",101,"NM",29,0)
PXRM EXTRACT PATIENT LIST^^0
"BLD",5288,"KRN",101,"NM",30,0)
PXRM EXTRACT SUMMARY EXIT^^0
"BLD",5288,"KRN",101,"NM",31,0)
PXRM EXTRACT SUMMARY FINDING TOTALS^^0
"BLD",5288,"KRN",101,"NM",32,0)
PXRM7 RECO SUBSCRIBER^^0
"BLD",5288,"KRN",101,"NM",33,0)
PXRM7 RECO SERVER^^0
"BLD",5288,"KRN",101,"NM",34,0)
PXRM EXTRACT COUNTING GROUP CREATE^^0
"BLD",5288,"KRN",101,"NM",35,0)
PXRM EXTRACT COUNTING GROUP DISPLAY MENU^^0
"BLD",5288,"KRN",101,"NM",36,0)
PXRM EXTRACT COUNTING GROUP DISPLAY/EDIT^^0
"BLD",5288,"KRN",101,"NM",37,0)
PXRM EXTRACT COUNTING GROUP EDIT^^0
"BLD",5288,"KRN",101,"NM",38,0)
PXRM EXTRACT COUNTING GROUP EXIT^^0
"BLD",5288,"KRN",101,"NM",39,0)
PXRM EXTRACT COUNTING GROUP MENU^^0
"BLD",5288,"KRN",101,"NM",40,0)
PXRM EXTRACT COUNTING GROUP SELECT ENTRY^^0
"BLD",5288,"KRN",101,"NM",41,0)
PXRM EXTRACT COUNTING GROUPS ^^0
"BLD",5288,"KRN",101,"NM",42,0)
PXRM EXTRACT COUNTING RULE CREATE^^0
"BLD",5288,"KRN",101,"NM",43,0)
PXRM EXTRACT COUNTING RULE DISPLAY MENU^^0
"BLD",5288,"KRN",101,"NM",44,0)
PXRM EXTRACT COUNTING RULE DISPLAY/EDIT^^0
"BLD",5288,"KRN",101,"NM",45,0)
PXRM EXTRACT COUNTING RULE EDIT^^0
"BLD",5288,"KRN",101,"NM",46,0)
PXRM EXTRACT COUNTING RULE EXIT^^0
"BLD",5288,"KRN",101,"NM",47,0)
PXRM EXTRACT COUNTING RULE MENU^^0
"BLD",5288,"KRN",101,"NM",48,0)
PXRM EXTRACT COUNTING RULE SELECT ENTRY^^0
"BLD",5288,"KRN",101,"NM",49,0)
PXRM EXTRACT DEFINITION CREATE^^0
"BLD",5288,"KRN",101,"NM",50,0)
PXRM EXTRACT DEFINITION DISPLAY MENU^^0
"BLD",5288,"KRN",101,"NM",51,0)
PXRM EXTRACT DEFINITION DISPLAY/EDIT^^0
"BLD",5288,"KRN",101,"NM",52,0)
PXRM EXTRACT DEFINITION EDIT^^0
"BLD",5288,"KRN",101,"NM",53,0)
PXRM EXTRACT DEFINITION EXIT^^0
"BLD",5288,"KRN",101,"NM",54,0)
PXRM EXTRACT DEFINITION MANAGEMENT^^0
"BLD",5288,"KRN",101,"NM",55,0)
PXRM EXTRACT DEFINITION MENU^^0
"BLD",5288,"KRN",101,"NM",56,0)
PXRM EXTRACT DEFINITION SELECT ENTRY^^0
"BLD",5288,"KRN",101,"NM",57,0)
PXRM RECEIVE HL7^^1^
"BLD",5288,"KRN",101,"NM",58,0)
PXRM EXTRACT VIEW/SCHEDULE^^0
"BLD",5288,"KRN",101,"NM",59,0)
PXRM EXTRACT MANAGEMENT EXIT^^0
"BLD",5288,"KRN",101,"NM",60,0)
PXRM EXTRACT MANAGEMENT MENU^^0
"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING GROUP CREATE",34)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING GROUP DISPLAY MENU",35)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING GROUP DISPLAY/EDIT",36)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING GROUP EDIT",37)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING GROUP EXIT",38)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING GROUP MENU",39)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING GROUP SELECT ENTRY",40)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING GROUPS ",41)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING RULE CREATE",42)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING RULE DISPLAY MENU",43)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING RULE DISPLAY/EDIT",44)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING RULE EDIT",45)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING RULE EXIT",46)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING RULE MENU",47)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT COUNTING RULE SELECT ENTRY",48)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT DEFINITION CREATE",49)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT DEFINITION DISPLAY MENU",50)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT DEFINITION DISPLAY/EDIT",51)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT DEFINITION EDIT",52)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT DEFINITION EXIT",53)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT DEFINITION MANAGEMENT",54)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT DEFINITION MENU",55)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT DEFINITION SELECT ENTRY",56)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT MANAGEMENT EXIT",59)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT MANAGEMENT MENU",60)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT PATIENT LIST",29)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT SUMMARY EXIT",30)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT SUMMARY FINDING TOTALS",31)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT SUMMARY MENU",21)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT SUMMARY PAT TOTALS",22)

"BLD",5288,"KRN",101,"NM","B","PXRM EXTRACT VIEW/SCHEDULE",58)

"BLD",5288,"KRN",101,"NM","B","PXRM LIST RULE CHANGE VIEW",25)

"BLD",5288,"KRN",101,"NM","B","PXRM LIST RULE CREATE",26)

"BLD",5288,"KRN",101,"NM","B","PXRM LIST RULE DISPLAY/EDIT",28)

"BLD",5288,"KRN",101,"NM","B","PXRM LIST RULE EXIT",27)

"BLD",5288,"KRN",101,"NM","B","PXRM LIST RULE MENU",24)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST AUTH USER",2)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST CHANGE VIEW",13)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST CREATE",6)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST CREATION DOC",8)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST DELETE",14)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST DEMOGRAPHIC",12)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST DISPLAY",15)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST EDIT",10)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST EXIT",16)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST HEALTH SUMMARY (ALL)",11)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST HEALTH SUMMARY (INDIVIDUAL)",9)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST MENU",5)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST OE/RR",17)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST PATIENTS MENU",1)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST RULES",18)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST USER",7)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST USER COPY",19)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST USER CREATE",20)

"BLD",5288,"KRN",101,"NM","B","PXRM PATIENT LIST VIEW",4)

"BLD",5288,"KRN",101,"NM","B","PXRM RECEIVE HL7",57)

"BLD",5288,"KRN",101,"NM","B","PXRM RULE SET TEST",23)

"BLD",5288,"KRN",101,"NM","B","PXRM7 RECO SERVER",33)

"BLD",5288,"KRN",101,"NM","B","PXRM7 RECO SUBSCRIBER",32)

"BLD",5288,"KRN",409.61,0)
409.61
"BLD",5288,"KRN",409.61,"NM",0)
^9.68A^18^18
"BLD",5288,"KRN",409.61,"NM",1,0)
PXRM PATIENT LIST USER^^0
"BLD",5288,"KRN",409.61,"NM",2,0)
PXRM PATIENT LIST CREATION DOC^^0
"BLD",5288,"KRN",409.61,"NM",3,0)
PXRM PATIENT LIST PATIENTS^^0
"BLD",5288,"KRN",409.61,"NM",4,0)
PXRM RULE SET TEST^^0
"BLD",5288,"KRN",409.61,"NM",5,0)
PXRM EXTRACT MANAGEMENT^^0
"BLD",5288,"KRN",409.61,"NM",6,0)
PXRM EXTRACT COUNTING RULES^^0
"BLD",5288,"KRN",409.61,"NM",7,0)
PXRM EXTRACT COUNT RULE EDIT^^0
"BLD",5288,"KRN",409.61,"NM",8,0)
PXRM EXTRACT COUNTING GROUPS^^0
"BLD",5288,"KRN",409.61,"NM",9,0)
PXRM EXTRACT COUNTING GRP EDIT^^0
"BLD",5288,"KRN",409.61,"NM",10,0)
PXRM EXTRACT DEF DISPLAY^^0
"BLD",5288,"KRN",409.61,"NM",11,0)
PXRM EXTRACT DEFINITION EDIT^^0
"BLD",5288,"KRN",409.61,"NM",12,0)
PXRM EXTRACT DEFINITIONS^^0
"BLD",5288,"KRN",409.61,"NM",13,0)
PXRM EXTRACT HELP^^0
"BLD",5288,"KRN",409.61,"NM",14,0)
PXRM EXTRACT HISTORY^^0
"BLD",5288,"KRN",409.61,"NM",15,0)
PXRM EXTRACT SUMMARY^^0
"BLD",5288,"KRN",409.61,"NM",16,0)
PXRM EXTRACT TRANSMISSIONS^^0
"BLD",5288,"KRN",409.61,"NM",17,0)
PXRM LIST RULE MANAGEMENT^^0
"BLD",5288,"KRN",409.61,"NM",18,0)
PXRM PATIENT LIST^^1^
"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT COUNT RULE EDIT",7)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT COUNTING GROUPS",8)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT COUNTING GRP EDIT",9)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT COUNTING RULES",6)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT DEF DISPLAY",10)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT DEFINITION EDIT",11)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT DEFINITIONS",12)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT HELP",13)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT HISTORY",14)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT MANAGEMENT",5)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT SUMMARY",15)

"BLD",5288,"KRN",409.61,"NM","B","PXRM EXTRACT TRANSMISSIONS",16)

"BLD",5288,"KRN",409.61,"NM","B","PXRM LIST RULE MANAGEMENT",17)

"BLD",5288,"KRN",409.61,"NM","B","PXRM PATIENT LIST",18)

"BLD",5288,"KRN",409.61,"NM","B","PXRM PATIENT LIST CREATION DOC",2)

"BLD",5288,"KRN",409.61,"NM","B","PXRM PATIENT LIST PATIENTS",3)

"BLD",5288,"KRN",409.61,"NM","B","PXRM PATIENT LIST USER",1)

"BLD",5288,"KRN",409.61,"NM","B","PXRM RULE SET TEST",4)

"BLD",5288,"KRN",771,0)
771
"BLD",5288,"KRN",870,0)
870
"BLD",5288,"KRN",870,"NM",0)
^9.68A^^0
"BLD",5288,"KRN",8989.51,0)
8989.51
"BLD",5288,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",5288,"KRN",8989.52,0)
8989.52
"BLD",5288,"KRN",8994,0)
8994
"BLD",5288,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",5288,"KRN","B",.4,.4)

"BLD",5288,"KRN","B",.401,.401)

"BLD",5288,"KRN","B",.402,.402)

"BLD",5288,"KRN","B",.403,.403)

"BLD",5288,"KRN","B",.5,.5)

"BLD",5288,"KRN","B",.84,.84)

"BLD",5288,"KRN","B",3.6,3.6)

"BLD",5288,"KRN","B",3.8,3.8)

"BLD",5288,"KRN","B",9.2,9.2)

"BLD",5288,"KRN","B",9.8,9.8)

"BLD",5288,"KRN","B",19,19)

"BLD",5288,"KRN","B",19.1,19.1)

"BLD",5288,"KRN","B",101,101)

"BLD",5288,"KRN","B",409.61,409.61)

"BLD",5288,"KRN","B",771,771)

"BLD",5288,"KRN","B",870,870)

"BLD",5288,"KRN","B",8989.51,8989.51)

"BLD",5288,"KRN","B",8989.52,8989.52)

"BLD",5288,"KRN","B",8994,8994)

"BLD",5288,"PRE")
PXRMP4EC
"BLD",5288,"PRET")

"BLD",5288,"QUES",0)
^9.62^^
"BLD",5288,"REQB",0)
^9.611^2^1
"BLD",5288,"REQB",2,0)
PXRM*2.0*5^2
"BLD",5288,"REQB","B","PXRM*2.0*5",2)

"DATA",802.4,1,0)
MRD^MRD^PXRMFF0^Most Recent Date^0.98(1.N1",")1.N
"DATA",802.4,1,1,0)
^802.41^8^8^3060223^^^^
"DATA",802.4,1,1,1,0)
MRD is the Most Recent Date function. Given a list of findings, this
"DATA",802.4,1,1,2,0)
function returns the finding date. An example of a FUNCTION FINDING
"DATA",802.4,1,1,3,0)
using MRD is:
"DATA",802.4,1,1,4,0)

"DATA",802.4,1,1,5,0)
MRD(1,3)>MRD(2,4)
"DATA",802.4,1,1,6,0)

"DATA",802.4,1,1,7,0)
This FUNCTION FINDING would be true if the most recent date of findings
"DATA",802.4,1,1,8,0)
1 and 3 is greater than the most recent date of findings 2 and 4.
"DATA",802.4,1,100)
N
"DATA",802.4,2,0)
COUNT^COUNT^PXRMFF0^Count^1.N
"DATA",802.4,2,1,0)
^802.41^8^8^3060223^^^^
"DATA",802.4,2,1,1,0)
The COUNT function works in conjunction with the OCCURRENCE COUNT
"DATA",802.4,2,1,2,0)
parameter. For example, if OCCURRENCE COUNT is set to 5 for finding
"DATA",802.4,2,1,3,0)
number 2 and 3 of the 5 occurrences are true, then COUNT(2) will return a
"DATA",802.4,2,1,4,0)
value of 3. An example of a FUNCTION FINDING using COUNT is:
"DATA",802.4,2,1,5,0)

"DATA",802.4,2,1,6,0)
 COUNT(2)>2
"DATA",802.4,2,1,7,0)

"DATA",802.4,2,1,8,0)
This would be true if finding 2 has 3 or more true occurrences.
"DATA",802.4,2,100)
N
"DATA",802.4,3,0)
MAX_DATE^MAXDATE^PXRMFF0^Maximum Date^0.98(1.N1",")1.N
"DATA",802.4,3,1,0)
^802.41^8^8^3060223^^^^
"DATA",802.4,3,1,1,0)
Given a list of findings, returns the maximum finding date, which will be the
"DATA",802.4,3,1,2,0)
most recent date. Note: MAX_DATE and MRD are equivalent functions. An 
"DATA",802.4,3,1,3,0)
example of a FUNCTION FINDING using MAX_DATE is:
"DATA",802.4,3,1,4,0)

"DATA",802.4,3,1,5,0)
MAX_DATE(1,3)>MAX_DATE(2,4)
"DATA",802.4,3,1,6,0)

"DATA",802.4,3,1,7,0)
This would be true if the maximum date of findings 1 and 3 is greater
"DATA",802.4,3,1,8,0)
than the maximum date of findings 2 and 4.
"DATA",802.4,3,100)
N
"DATA",802.4,4,0)
MIN_DATE^MINDATE^PXRMFF0^Minimum Date^0.98(1.N1",")1.N
"DATA",802.4,4,1,0)
^802.41^7^7^3060223^^^^
"DATA",802.4,4,1,1,0)
Given a list of findings, returns the minimum finding date. This will be the
"DATA",802.4,4,1,2,0)
oldest date. An example of a FUNCTION FINDING using the minimum date is:
"DATA",802.4,4,1,3,0)

"DATA",802.4,4,1,4,0)
MIN_DATE(1,3)>MIN_DATE(2,4)
"DATA",802.4,4,1,5,0)

"DATA",802.4,4,1,6,0)
This will be true if the minimum date of findings 1 and 3 is greater
"DATA",802.4,4,1,7,0)
than the minimum date of findings 2 and 4.
"DATA",802.4,4,100)
N
"DATA",802.4,5,0)
FI^FI^PXRMFF0^FI^1.N
"DATA",802.4,5,1,0)
^802.41^6^6^3060623^^^^
"DATA",802.4,5,1,1,0)
This function finding returns the true or false value of a finding. It
"DATA",802.4,5,1,2,0)
provides a way to combine a logical string of regular findings into a
"DATA",802.4,5,1,3,0)
single function finding. This function only takes a single finding
"DATA",802.4,5,1,4,0)
number in its argument list. Example:
"DATA",802.4,5,1,5,0)

"DATA",802.4,5,1,6,0)
  FI(1)&FI(2)&(FI(3)!FI(4))
"DATA",802.4,5,100)
N
"DATA",802.4,6,0)
DUR^DUR^PXRMFF0^Dur^1.N
"DATA",802.4,6,1,0)
^802.41^9^9^3060223^^^
"DATA",802.4,6,1,1,0)
The duration function works on a single finding and its action depends
"DATA",802.4,6,1,2,0)
on the type of finding. For findings with a start and stop date, the
"DATA",802.4,6,1,3,0)
function returns the number of days between the start and stop dates.
"DATA",802.4,6,1,4,0)
For findings that have a single date, duration works in conjunction with
"DATA",802.4,6,1,5,0)
Occurrence Count and returns the number of days between the first
"DATA",802.4,6,1,6,0)
occurrence and the last occurrence.
"DATA",802.4,6,1,7,0)

"DATA",802.4,6,1,8,0)
Example: DUR(2)>120 would be true if the duration of finding 2 is
"DATA",802.4,6,1,9,0)
greater than 120 days.
"DATA",802.4,6,100)
N
"DATA",802.4,7,0)
DIFF_DATE^DIFFDATE^PXRMFF0^Date Difference^1.N1","1.N
"DATA",802.4,7,1,0)
^802.41^3^3^3060223^^
"DATA",802.4,7,1,1,0)
This function finding returns the absolute value of the difference
"DATA",802.4,7,1,2,0)
in days between the date of the first finding in the list and the
"DATA",802.4,7,1,3,0)
date of the second finding.
"DATA",802.4,7,100)
N
"DATA",802.4,8,0)
VALUE^VALUE^PXRMFF0^Value^1.N1","1.N1","1""""1.A1""""
"DATA",802.4,8,1,0)
^802.41^11^11^3060623^^
"DATA",802.4,8,1,1,0)
The VALUE function returns any of the "CSUB" values for a finding.
"DATA",802.4,8,1,2,0)
The argument list is the finding number, the occurrence, and the
"DATA",802.4,8,1,3,0)
"CSUB" subscript of interest. For example, if finding number 4 was
"DATA",802.4,8,1,4,0)
for a lab test and you wanted to check see if occurrence 1 was less
"DATA",802.4,8,1,5,0)
than occurrence 2, the function finding would be:
"DATA",802.4,8,1,6,0)
 
"DATA",802.4,8,1,7,0)
VALUE(4,1,"VALUE")<VALUE(4,2,"VALUE")
"DATA",802.4,8,1,8,0)
 
"DATA",802.4,8,1,9,0)
Note: OCCURRENCE COUNT for the finding must be equal to or greater
"DATA",802.4,8,1,10,0)
than the occurrence(s) you want to use.
"DATA",802.4,8,1,11,0)

"DATA",802.4,8,100)
N
"DATA",810.9,20,0)
VA-ALL LOCATIONS
"DATA",810.9,20,1,0)
^810.91^5^5^3060703^^
"DATA",810.9,20,1,1,0)
When this special Location List is used, the "AHL" index of the Visit
"DATA",810.9,20,1,2,0)
file is searched to create a list of every hospital location for
"DATA",810.9,20,1,3,0)
which one or more visits have been recorded.
"DATA",810.9,20,1,4,0)

"DATA",810.9,20,1,5,0)

"DATA",810.9,20,100)
N
"DATA",811.4,2,0)
VA-DATE OF BIRTH^PXRMPDEM^DOB^Patient's Date of Birth^S
"DATA",811.4,2,1,0)
^811.41^6^6^3060628^^^^
"DATA",811.4,2,1,1,0)
This is a single occurrence computed finding that returns the 
"DATA",811.4,2,1,2,0)
patient's date of birth as a FileMan date. It can be used as the value
"DATA",811.4,2,1,3,0)
in the Condition. For example: I V>2850302. The date of the finding
"DATA",811.4,2,1,4,0)
is the date of birth so that date range searches can be used to
"DATA",811.4,2,1,5,0)
find patients who were born in a certain time frame.
"DATA",811.4,2,1,6,0)

"DATA",811.4,2,100)
N^
"DATA",811.4,2,110,0)
^811.42D^^0
"DATA",811.4,3,0)
VA-DATE OF DEATH^PXRMPDEM^DOD^Patient's Date of Death^S
"DATA",811.4,3,1,0)
^811.41^8^8^3060628^^^
"DATA",811.4,3,1,1,0)
This is a single occurrence computed finding that returns the 
"DATA",811.4,3,1,2,0)
patient's date of death, if it exists, as a FileMan date. It can be
"DATA",811.4,3,1,3,0)
used as the value in the Condition. For example: I V>2330304
"DATA",811.4,3,1,4,0)
The date of the finding is the date of death so that date range
"DATA",811.4,3,1,5,0)
searches can be used to find patients who died in a certain time
"DATA",811.4,3,1,6,0)
frame.
"DATA",811.4,3,1,7,0)

"DATA",811.4,3,1,8,0)

"DATA",811.4,3,100)
N^
"DATA",811.4,3,110,0)
^811.42D^^0
"DATA",811.4,11,0)
VA-PATIENT TYPE^PXRMPDEM^PATTYPE^PATIENT TYPE^S
"DATA",811.4,11,1,0)
^811.41^17^17^3050809^^
"DATA",811.4,11,1,1,0)
This computed finding is a single value computed finding. If a patient type 
"DATA",811.4,11,1,2,0)
is found for the patient the computed finding will be true and type will be 
"DATA",811.4,11,1,3,0)
returned as the Value.
"DATA",811.4,11,1,4,0)

"DATA",811.4,11,1,5,0)
Example: I V="ACTIVE DUTY"
"DATA",811.4,11,1,6,0)

"DATA",811.4,11,1,7,0)

"DATA",811.4,11,1,8,0)
Possible Values that can be returned from this computed finding are:
"DATA",811.4,11,1,9,0)
   ACTIVE DUTY   
"DATA",811.4,11,1,10,0)
   ALLIED VETERAN   
"DATA",811.4,11,1,11,0)
   COLLATERAL   
"DATA",811.4,11,1,12,0)
   EMPLOYEE   
"DATA",811.4,11,1,13,0)
   MILITARY RETIREE   
"DATA",811.4,11,1,14,0)
   NON-VETERAN (OTHER)   
"DATA",811.4,11,1,15,0)
   NSC VETERAN   
"DATA",811.4,11,1,16,0)
   SC VETERAN   
"DATA",811.4,11,1,17,0)
   TRICARE
"DATA",811.4,11,100)
N
"DATA",811.4,15,0)
VA-APPOINTMENTS FOR A PATIENT^PXRMRDI^PAPPL^Appointments for a Patient^M
"DATA",811.4,15,1,0)
^811.41^39^39^3060314^^^^
"DATA",811.4,15,1,1,0)
This multiple occurrence computed finding returns a list of
"DATA",811.4,15,1,2,0)
appointments for a patient in the specified date range. The COMPUTED
"DATA",811.4,15,1,3,0)
FINDING PARAMETER can be used to filter the results. The values that
"DATA",811.4,15,1,4,0)
can be used in the parameter are:
"DATA",811.4,15,1,5,0)
 FLDS:F1,F2,... where F1,F2 are any of the possible integer ID values
"DATA",811.4,15,1,6,0)
 listed in the Available Appointment Data Fields table in the
"DATA",811.4,15,1,7,0)
 Computed Finding section of the Clinical Reminders Managers Manual.
"DATA",811.4,15,1,8,0)
 These specify what data associated with the appointment is to be
"DATA",811.4,15,1,9,0)
 returned; this data can be used in a CONDITION statement. Field
"DATA",811.4,15,1,10,0)
 number n will be the nth piece of the value. For example FLDS:1,16
"DATA",811.4,15,1,11,0)
 would return the Appointment Date/Time in piece 1 and Date
"DATA",811.4,15,1,12,0)
 Appointment Made in piece 16. A condition such as I
"DATA",811.4,15,1,13,0)
 $P(V,U,16)>3060301 would be true if the date the appointment was
"DATA",811.4,15,1,14,0)
 made was after March 1, 2006. If FLDS is not specified then the
"DATA",811.4,15,1,15,0)
 value will be ID=1 (Appointment Date/Time) and ID=2 (Clinic IEN and
"DATA",811.4,15,1,16,0)
 Name).
"DATA",811.4,15,1,17,0)
 
"DATA",811.4,15,1,18,0)
 STATUS sets a filter on the appointment status; only those
"DATA",811.4,15,1,19,0)
 appointments with status on the list will be returned. The possible
"DATA",811.4,15,1,20,0)
 values for STATUS are R (Scheduled/Kept), I (Inpatient), NS
"DATA",811.4,15,1,21,0)
 (No-show), NSR (No-show, Rescheduled), CP (Cancelled by Patient),
"DATA",811.4,15,1,22,0)
 
"DATA",811.4,15,1,23,0)
 CPR (Cancelled by Patient, Rescheduled), CC (Cancelled by Clinic),
"DATA",811.4,15,1,24,0)
 CCR (Cancelled by Clinic, Rescheduled), NT (No Action Taken).
"DATA",811.4,15,1,25,0)
 If STATUS is not specified the default is R,I.
"DATA",811.4,15,1,26,0)
 
"DATA",811.4,15,1,27,0)
 LL:Reminder Location List specifies a list of locations so that only
"DATA",811.4,15,1,28,0)
 appointments for those locations will be returned. If LL is not
"DATA",811.4,15,1,29,0)
 specified, then appointments for all locations will be returned.
"DATA",811.4,15,1,30,0)
 
"DATA",811.4,15,1,31,0)
FLDS, STATUS, and LL are all optional and can be given in any order.
"DATA",811.4,15,1,32,0)
Some examples:
"DATA",811.4,15,1,33,0)
 
"DATA",811.4,15,1,34,0)
 FLDS:1,2,16^STATUS:R^LL:DIABETIC LOCATIONS
"DATA",811.4,15,1,35,0)
 STATUS:CP,CC^FLDS:25
"DATA",811.4,15,1,36,0)
 LL:DIABETIC LOCATION
"DATA",811.4,15,1,37,0)

"DATA",811.4,15,1,38,0)

"DATA",811.4,15,1,39,0)

"DATA",811.4,15,100)
N
"DATA",811.4,15,110,0)
^811.42D^1^1
"DATA",811.4,15,110,1,0)
3060310.145857^1342
"DATA",811.4,22,0)
VA-PROGRESS NOTE^PXRMTIU^NOTE^Progress Note^M
"DATA",811.4,22,1,0)
^811.41^68^68^3060517^^^^
"DATA",811.4,22,1,1,0)
This computed finding will return multiple instances of a progress note
"DATA",811.4,22,1,2,0)
based on the exact title of the note and optionally the status. The
"DATA",811.4,22,1,3,0)
note title is specified in the COMPUTED FINDING PARAMETER field. If you
"DATA",811.4,22,1,4,0)
want to search for notes with a certain status, then append "^status" to
"DATA",811.4,22,1,5,0)
the title. Status can be any of the following:
"DATA",811.4,22,1,6,0)

"DATA",811.4,22,1,7,0)
  1 = UNDICTATED
"DATA",811.4,22,1,8,0)
  2 = UNTRANSCRIBED
"DATA",811.4,22,1,9,0)
  3 = UNRELEASED
"DATA",811.4,22,1,10,0)
  4 = UNVERIFIED
"DATA",811.4,22,1,11,0)
  5 = UNSIGNED
"DATA",811.4,22,1,12,0)
  6 = UNCOSIGNED
"DATA",811.4,22,1,13,0)
  7 = COMPLETED
"DATA",811.4,22,1,14,0)
  8 = AMENDED
"DATA",811.4,22,1,15,0)
  9 = PURGED
"DATA",811.4,22,1,16,0)
 10 = TEST
"DATA",811.4,22,1,17,0)
 11 = ACTIVE
"DATA",811.4,22,1,18,0)
 13 = INACTIVE
"DATA",811.4,22,1,19,0)
 14 = DELETED
"DATA",811.4,22,1,20,0)
 15 = RETRACTED
"DATA",811.4,22,1,21,0)

"DATA",811.4,22,1,22,0)
If status is not specified, then the default is to search for notes with
"DATA",811.4,22,1,23,0)
a status of COMPLETED.
"DATA",811.4,22,1,24,0)

"DATA",811.4,22,1,25,0)
For example, if the COMPUTED FINDING PARAMETER field contains:
"DATA",811.4,22,1,26,0)
 ADMITTING HISTORY & PHYSICAL^5
"DATA",811.4,22,1,27,0)

"DATA",811.4,22,1,28,0)
the search would be for notes with the exact title of "ADMITTING
"DATA",811.4,22,1,29,0)
HISTORY & PHYSICAL" and a status of "UNSIGNED."
"DATA",811.4,22,1,30,0)

"DATA",811.4,22,1,31,0)
The values returned by this computed finding that can be used in the
"DATA",811.4,22,1,32,0)
Condition are V=note title, V("TITLE")=note title and
"DATA",811.4,22,1,33,0)
V("AUTH")=author of note.
"DATA",811.4,22,1,34,0)

"DATA",811.4,22,1,35,0)
Additional data for use in the Condition can be obtained by
"DATA",811.4,22,1,36,0)
appending "^1" after the status, for example:
"DATA",811.4,22,1,37,0)
 ADMITTING HISTORY & PHYSICAL^5^1
"DATA",811.4,22,1,38,0)
 ADMITTING HISTORY & PHYSICAL^^1
"DATA",811.4,22,1,39,0)

"DATA",811.4,22,1,40,0)
(In the second example since the status is blank it would default to
"DATA",811.4,22,1,41,0)
notes with a status of COMPLETED.)
"DATA",811.4,22,1,42,0)

"DATA",811.4,22,1,43,0)
The additional data is:
"DATA",811.4,22,1,44,0)

"DATA",811.4,22,1,45,0)
V("DISPLAY NAME")=Display name of TIU title.
"DATA",811.4,22,1,46,0)

"DATA",811.4,22,1,47,0)
V("EPISODE BEGIN DATE/TIME")=String_":"_EPISODE BEGIN DATE/TIME
"DATA",811.4,22,1,48,0)
where String is "Adm" for ward locations and "Visit" for all other
"DATA",811.4,22,1,49,0)
location types. Date/time is in MM/DD/YY format.
"DATA",811.4,22,1,50,0)

"DATA",811.4,22,1,51,0)
V("EPISODE END DATE/TIME")=String_" "_EPISODE END DATE/TIME where
"DATA",811.4,22,1,52,0)
string is null if no date/time or "Dis: " if date/time exists.
"DATA",811.4,22,1,53,0)
Date/time is in MM/DD/YY format
"DATA",811.4,22,1,54,0)

"DATA",811.4,22,1,55,0)
V("HOSPITAL LOCATION")=External format of HOSPITAL LOCATION from TIU
"DATA",811.4,22,1,56,0)
DOCUMENT file
"DATA",811.4,22,1,57,0)

"DATA",811.4,22,1,58,0)
V("NUMBER OF IMAGES")=Number of images associated with TIU DOCUMENT
"DATA",811.4,22,1,59,0)
entry
"DATA",811.4,22,1,60,0)

"DATA",811.4,22,1,61,0)
V("REQUESTING PACKAGE")=REQUESTING PACKAGE REFERENCE field from TIU
"DATA",811.4,22,1,62,0)
DOCUMENT file (internal format)
"DATA",811.4,22,1,63,0)

"DATA",811.4,22,1,64,0)
V("SUBJECT")=SUBJECT (OPTIONAL description) field from TIU DOCUMENT
"DATA",811.4,22,1,65,0)
file (note that characters are limited to ensure returned string is
"DATA",811.4,22,1,66,0)
not longer than 255 characters). (This piece was added with
"DATA",811.4,22,1,67,0)
TIU*1*63)
"DATA",811.4,22,1,68,0)

"DATA",811.4,22,100)
N
"DATA",811.4,22,110,0)
^811.42D^^0
"DATA",811.4,35,0)
VA-REMINDER DEFINITION^PXRMCDEF^RDEF^Reminder Definition Computed Finding^S
"DATA",811.4,35,1,0)
^811.41^47^47^3051128^^^^
"DATA",811.4,35,1,1,0)
This computed finding will evaluate the reminder definition that is 
"DATA",811.4,35,1,2,0)
specified by name in the COMPUTED FINDING PARAMETER field. The name
"DATA",811.4,35,1,3,0)
that is used is the NAME field (.01) of the reminder definition, not
"DATA",811.4,35,1,4,0)
the PRINT NAME, additionally the definition must be active. The
"DATA",811.4,35,1,5,0)
computed finding will be false if the reminder evaluation status is
"DATA",811.4,35,1,6,0)
CNBD or ERROR, in all other cases it will be true.
"DATA",811.4,35,1,7,0)

"DATA",811.4,35,1,8,0)
The default date of the finding is the evaluation date; this can be
"DATA",811.4,35,1,9,0)
overridden by appending "^DATE=DUE DATE" or "^DATE=LAST DONE" to the
"DATA",811.4,35,1,10,0)
reminder name. If a last done date cannot be determined then the date
"DATA",811.4,35,1,11,0)
of the finding will be the evaluation date.
"DATA",811.4,35,1,12,0)
 
"DATA",811.4,35,1,13,0)
Examples:
"DATA",811.4,35,1,14,0)
  VA-IHD LIPID PROFILE
"DATA",811.4,35,1,15,0)
  VA-IHD LIPID PROFILE^DATE=LAST DONE
"DATA",811.4,35,1,16,0)
  VA-IHD LIPID PROFILE^DATE=DUE DATE
"DATA",811.4,35,1,17,0)
 
"DATA",811.4,35,1,18,0)
The VALUE array, which can be used in a Condition, will contain the
"DATA",811.4,35,1,19,0)
evaluation status, due date, and last done date. The date values
"DATA",811.4,35,1,20,0)
are in VA FileMan format. The variable V is the reminder evaluation
"DATA",811.4,35,1,21,0)
status. Possible values for the reminder evaluation status are:
"DATA",811.4,35,1,22,0)
 DONE
"DATA",811.4,35,1,23,0)
 DUE NOW
"DATA",811.4,35,1,24,0)
 DUE SOON
"DATA",811.4,35,1,25,0)
 RESOLVED
"DATA",811.4,35,1,26,0)
 NEVER
"DATA",811.4,35,1,27,0)
 N/A
"DATA",811.4,35,1,28,0)
 
"DATA",811.4,35,1,29,0)
Example of the Value array:
"DATA",811.4,35,1,30,0)
  VALUE("STATUS")="DUE NOW" 
"DATA",811.4,35,1,31,0)
  VALUE("DUEDATE")=3051010.1220 
"DATA",811.4,35,1,32,0)
  VALUE("LASTDONE")=3051010.1220 
"DATA",811.4,35,1,33,0)
 
"DATA",811.4,35,1,34,0)
Condition examples:
"DATA",811.4,35,1,35,0)
  I V="DUE NOW" 
"DATA",811.4,35,1,36,0)
  I V("STATUS")="DUE NOW" 
"DATA",811.4,35,1,37,0)
  I V("DUEDATE")>3051010.1220 
"DATA",811.4,35,1,38,0)
  I V("LASTDONE")=3051010.1220 
"DATA",811.4,35,1,39,0)
  
"DATA",811.4,35,1,40,0)
***WARNING*** This computed finding can be used to evaluate a reminder 
"DATA",811.4,35,1,41,0)
inside of a reminder evaluation - do not have this computed finding 
"DATA",811.4,35,1,42,0)
evaluate the same reminder as the one being evaluated.  
"DATA",811.4,35,1,43,0)

"DATA",811.4,35,1,44,0)

"DATA",811.4,35,1,45,0)

"DATA",811.4,35,1,46,0)

"DATA",811.4,35,1,47,0)

"DATA",811.4,35,100)
N
"DATA",811.4,37,0)
VA-PATIENTS WITH APPOINTMENTS^PXRMRDI^APPL^Patients with Appointments^L
"DATA",811.4,37,1,0)
^811.41^36^36^3060314^^
"DATA",811.4,37,1,1,0)
This list computed finding returns a list of patients with
"DATA",811.4,37,1,2,0)
appointments in the specified date range. The COMPUTED
"DATA",811.4,37,1,3,0)
FINDING PARAMETER can be used to filter the results. The values that
"DATA",811.4,37,1,4,0)
can be used in the parameter are:
"DATA",811.4,37,1,5,0)
 FLDS:F1,F2,... where F1,F2 are any of the possible integer ID values listed in
"DATA",811.4,37,1,6,0)
 the table for this computed finding in the Computed Finding section of the
"DATA",811.4,37,1,7,0)
 Clinical Reminders Managers Manual. These specify what data associated with the
"DATA",811.4,37,1,8,0)
 appointment is to be returned; this data can be used in a CONDITION statement.
"DATA",811.4,37,1,9,0)
 Field number n will be the nth piece of the value. For example FLDS:1,16 would
"DATA",811.4,37,1,10,0)
 return the Appointment Date/Time in piece 1 and Date Appointment Made in piece
"DATA",811.4,37,1,11,0)
 16. A condition such as I $P(V,U,16)>3060301 would be true if the date the
"DATA",811.4,37,1,12,0)
 appointment was made was after March 1, 2006. If FLDS is not specified then the
"DATA",811.4,37,1,13,0)
 value will be ID=1 (Appointment Date/Time) and ID=2 (Clinic IEN and Name).
"DATA",811.4,37,1,14,0)
 
"DATA",811.4,37,1,15,0)
 STATUS sets a filter on the appointment status; only those
"DATA",811.4,37,1,16,0)
 appointments with status on the list will be returned. The possible
"DATA",811.4,37,1,17,0)
 values for STATUS are R (Scheduled/Kept), I (Inpatient), NS
"DATA",811.4,37,1,18,0)
 (No-show), NSR (No-show, Rescheduled), CP (Cancelled by Patient),
"DATA",811.4,37,1,19,0)
 
"DATA",811.4,37,1,20,0)
 CPR (Cancelled by Patient, Rescheduled), CC (Cancelled by Clinic),
"DATA",811.4,37,1,21,0)
 CCR (Cancelled by Clinic, Rescheduled), NT (No Action Taken).
"DATA",811.4,37,1,22,0)
 If STATUS is not specified the default is R,I.
"DATA",811.4,37,1,23,0)
 
"DATA",811.4,37,1,24,0)
 LL:Reminder Location List specifies a list of locations so that only
"DATA",811.4,37,1,25,0)
 appointments for those locations will be returned. If LL is not
"DATA",811.4,37,1,26,0)
 specified, then appointments for all locations will be returned.
"DATA",811.4,37,1,27,0)
 
"DATA",811.4,37,1,28,0)
FLDS, STATUS, and LL are all optional and can be given in any order.
"DATA",811.4,37,1,29,0)
Some examples:
"DATA",811.4,37,1,30,0)
 
"DATA",811.4,37,1,31,0)
 FLDS:1,2,16^STATUS:R^LL:DIABETIC LOCATIONS
"DATA",811.4,37,1,32,0)
 STATUS:CP,CC^FLDS:25
"DATA",811.4,37,1,33,0)
 LL:DIABETIC LOCATION
"DATA",811.4,37,1,34,0)

"DATA",811.4,37,1,35,0)

"DATA",811.4,37,1,36,0)

"DATA",811.4,37,100)
N
"DATA",811.4,37,110,0)
^811.42D^1^1
"DATA",811.4,37,110,1,0)
3060310.145937^1342
"DATA",811.4,38,0)
VA-TREATING FACILITY LIST^PXRMRDI^TFL^Treating FaciLity list^M
"DATA",811.4,38,1,0)
^811.41^30^30^3060314^^^
"DATA",811.4,38,1,1,0)
This multi-occurrence computed finding returns a list of treating
"DATA",811.4,38,1,2,0)
facilities i.e., systems that store data related to a patient. The
"DATA",811.4,38,1,3,0)
value for each entry is:
"DATA",811.4,38,1,4,0)
 STATION NUMBER^NAME^DATE LAST TREATED^ADT/HL7 EVENT REASON^FACILITY
"DATA",811.4,38,1,5,0)
 TYPE
"DATA",811.4,38,1,6,0)
 
"DATA",811.4,38,1,7,0)
STATION NUMBER, NAME, and FACILITY TYPE are from the Institution
"DATA",811.4,38,1,8,0)
file. FACILITY TYPE is one of the entries found in the FACILITY TYPE
"DATA",811.4,38,1,9,0)
file. ADT/HL7 EVENT REASON is a code from the ADT/HL7 EVENT REASON
"DATA",811.4,38,1,10,0)
file. If there is no ADT/HL7 EVENT REASON then DATE LAST TREATED
"DATA",811.4,38,1,11,0)
will also be null.
"DATA",811.4,38,1,12,0)
 
"DATA",811.4,38,1,13,0)
Some examples of values that are returned:
"DATA",811.4,38,1,14,0)
 "516^BAY PINES VAMC^^^VAMC"
"DATA",811.4,38,1,15,0)
 "537^JESSE BROWN VAMC^3041122.110926^3^VAMC"
"DATA",811.4,38,1,16,0)
 "552^DAYTON^3001113.092056^3^VAMC"
"DATA",811.4,38,1,17,0)
 "556^NORTH CHICAGO VAMC^3050406.13^3^VAMC"
"DATA",811.4,38,1,18,0)
 "578^HINES, IL VAMC^3020919.2324^3^VAMC"
"DATA",811.4,38,1,19,0)
 "589^VA HEARTLAND - WEST, VISN 15^^^VAMC"
"DATA",811.4,38,1,20,0)
 "636^VA NWIHS, OMAHA DIVISION^^^VAMC"
"DATA",811.4,38,1,21,0)
 "673^TAMPA VAMC^3001215.1327^3^VAMC"
"DATA",811.4,38,1,22,0)
 "695^MILWAUKEE VAMC^3030328.13^3^VAMC"
"DATA",811.4,38,1,23,0)
 
"DATA",811.4,38,1,24,0)
A CONDITION can be written that uses any of the pieces of the value.
"DATA",811.4,38,1,25,0)
For example, a CONDITION to check that the FACILITY TYPE is VAMC
"DATA",811.4,38,1,26,0)
would be: I $P(V,U,5)="VAMC"
"DATA",811.4,38,1,27,0)
 
"DATA",811.4,38,1,28,0)
Since no date can be associated with an entry, the date of evaluation
"DATA",811.4,38,1,29,0)
will be used.
"DATA",811.4,38,1,30,0)

"DATA",811.4,38,100)
N
"DATA",811.4,38,110,0)
^811.42D^1^1
"DATA",811.4,38,110,1,0)
3060310.15002^1342
"DATA",811.4,40,0)
VA-PTF HOSPITAL DISCHARGE DATE^PXRMPDEM^HDISCH^PTF Hospital Discharge Date^M
"DATA",811.4,40,1,0)
^811.41^9^9^3060721^^^^
"DATA",811.4,40,1,1,0)
This multi-occurrence computed finding returns a list of hospital
"DATA",811.4,40,1,2,0)
discharge dates from the Patient Treatment File. The default is to
"DATA",811.4,40,1,3,0)
not include fee basis or census entries. The computed finding
"DATA",811.4,40,1,4,0)
parameter can be used to include them. The format is IN:FEE to
"DATA",811.4,40,1,5,0)
include fee bases and IN:CEN to include census. If you want to
"DATA",811.4,40,1,6,0)
include both, the format is IN:FEE,CEN.
"DATA",811.4,40,1,7,0)

"DATA",811.4,40,1,8,0)

"DATA",811.4,40,1,9,0)

"DATA",811.4,40,100)
N
"DATA",811.5,610,0)
VA-PCMM INSTITUTION
"DATA",811.5,610,1,0)
^^6^6^3050830^
"DATA",811.5,610,1,1,0)
The purpose of this term is for creating a finding rule to include
"DATA",811.5,610,1,2,0)
patient's PCMM Institutions on a patient list. The PCMM Institution
"DATA",811.5,610,1,3,0)
is determined by finding the patient's PCMM Team and then the Team's
"DATA",811.5,610,1,4,0)
Institution. Institution refers to an entry in file #4 the
"DATA",811.5,610,1,5,0)
Institution file.
"DATA",811.5,610,1,6,0)

"DATA",811.5,610,20,0)
^811.52V
"DATA",811.5,610,100)
N
"DATA",811.5,610,110,0)
^811.53D^1^1
"DATA",811.5,610,110,1,0)
3050830.081538^1342
"DATA",811.8,89,0)
VA-MST SCREENING^REDINGTON,PATRICK at SALT LAKE CITY OIFO^3050711.140848
"DATA",811.8,89,100,0)
^811.801^1188^1188
"DATA",811.8,89,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,89,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,89,100,3,0)
<PACKAGE_VERSION>2.0</PACKAGE_VERSION>
"DATA",811.8,89,100,4,0)
<INDEX_AT>1050</INDEX_AT>
"DATA",811.8,89,100,5,0)
<SOURCE>
"DATA",811.8,89,100,6,0)
<NAME>VA-MST SCREENING</NAME>
"DATA",811.8,89,100,7,0)
<USER>REDINGTON,PATRICK</USER>
"DATA",811.8,89,100,8,0)
<SITE>SALT LAKE CITY OIFO</SITE>
"DATA",811.8,89,100,9,0)
<DATE_PACKED>07/11/2005@14:08:48</DATE_PACKED>
"DATA",811.8,89,100,10,0)
</SOURCE>
"DATA",811.8,89,100,11,0)
<EXCHANGE_TYPE>REMINDER</EXCHANGE_TYPE>
"DATA",811.8,89,100,12,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,89,100,13,0)
All veterans should be screened at least once in their lifetime for
"DATA",811.8,89,100,14,0)
Military Sexual Trauma.
"DATA",811.8,89,100,15,0)
 
"DATA",811.8,89,100,16,0)
Sample Screening Questions.
"DATA",811.8,89,100,17,0)
   1. When you were in the military, did you ever receive uninvited
"DATA",811.8,89,100,18,0)
      and unwanted sexual attention (i.e. touching, cornering, pressure
"DATA",811.8,89,100,19,0)
      for sexual favors, verbal remarks)?
"DATA",811.8,89,100,20,0)
 
"DATA",811.8,89,100,21,0)
   2. When you were in the military, did anyone ever use force or the
"DATA",811.8,89,100,22,0)
      threat of force to have sex with you against your will?
"DATA",811.8,89,100,23,0)
 
"DATA",811.8,89,100,24,0)
Documenting YES, NO, or Declined to Answer responses to Screening
"DATA",811.8,89,100,25,0)
Questions:
"DATA",811.8,89,100,26,0)
 
"DATA",811.8,89,100,27,0)
  A YES response should be documented in progress notes, the MST History
"DATA",811.8,89,100,28,0)
  file, and local findings that represent the MST status (e.g.,health 
"DATA",811.8,89,100,29,0)
  factors). A follow-up consult order for counseling should be considered 
"DATA",811.8,89,100,30,0)
  for the veteran.
"DATA",811.8,89,100,31,0)
 
"DATA",811.8,89,100,32,0)
  A NO or DECLINES TO ANSWER response should be documented in progress
"DATA",811.8,89,100,33,0)
  notes, the MST History file, and local findings that represent the MST 
"DATA",811.8,89,100,34,0)
  status (e.g., health factors).
"DATA",811.8,89,100,35,0)
 
"DATA",811.8,89,100,36,0)
This national clinical reminder will ensure the VIA has the ability to
"DATA",811.8,89,100,37,0)
meet congressional military sexual trauma treatment and reporting
"DATA",811.8,89,100,38,0)
mandates by providing accurate data collection through the sharing of
"DATA",811.8,89,100,39,0)
MST data between facilities and data collection agencies.
"DATA",811.8,89,100,40,0)
 
"DATA",811.8,89,100,41,0)
This national clinical reminder will ensure the appropriate and timely
"DATA",811.8,89,100,42,0)
counseling and treatment of individuals with an incidence of military
"DATA",811.8,89,100,43,0)
sexual trauma.
"DATA",811.8,89,100,44,0)
 
"DATA",811.8,89,100,45,0)
 
"DATA",811.8,89,100,46,0)
]]></DESCRIPTION>
"DATA",811.8,89,100,47,0)
<KEYWORDS>
"DATA",811.8,89,100,48,0)
</KEYWORDS>
"DATA",811.8,89,100,49,0)
<M_ROUTINE>
"DATA",811.8,89,100,50,0)
<ROUTINE_NAME>PXRMMST</ROUTINE_NAME>
"DATA",811.8,89,100,51,0)
<CODE>
"DATA",811.8,89,100,52,0)
<![CDATA[
"DATA",811.8,89,100,53,0)
PXRMMST ; SLC/PKR - Routines for dealing with MST. ;05/11/2005
"DATA",811.8,89,100,54,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005
"DATA",811.8,89,100,55,0)
 ;Use of DGMSTAPI supported by DBIA #2716.
"DATA",811.8,89,100,56,0)
 ;====================================================
"DATA",811.8,89,100,57,0)
GSYINFO(TYPE) ;Return the Clinical Reminders MST synchronization date
"DATA",811.8,89,100,58,0)
 ;and the number of updates made. The format is an up-arrow delimited
"DATA",811.8,89,100,59,0)
 ;string. The first piece is the date and the second is the number
"DATA",811.8,89,100,60,0)
 ;of updates. If TYPE is "I" then the data for the initial
"DATA",811.8,89,100,61,0)
 ;synchronization is returned. For any other value the data for the
"DATA",811.8,89,100,62,0)
 ;last daily synchronization is returned.
"DATA",811.8,89,100,63,0)
 I $G(TYPE)="I" Q $P($G(^PXRM(800,1,"MST")),U,1,2) Q
"DATA",811.8,89,100,64,0)
 Q $P($G(^PXRM(800,1,"MST")),U,3,4)
"DATA",811.8,89,100,65,0)
 ;
"DATA",811.8,89,100,66,0)
 ;====================================================
"DATA",811.8,89,100,67,0)
QUE ;Queue the MST synchronization job.
"DATA",811.8,89,100,68,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,MINDT,SDTIME,STIME,X,Y
"DATA",811.8,89,100,69,0)
 S MINDT=$$NOW^XLFDT
"DATA",811.8,89,100,70,0)
 W !,"Queue the Clinical Reminders MST synchronization."
"DATA",811.8,89,100,71,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"DATA",811.8,89,100,72,0)
 S DIR("A")="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")_" "
"DATA",811.8,89,100,73,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"DATA",811.8,89,100,74,0)
 D ^DIR
"DATA",811.8,89,100,75,0)
 I $D(DIROUT)!$D(DIRUT) Q
"DATA",811.8,89,100,76,0)
 I $D(DTOUT)!$D(DUOUT) Q
"DATA",811.8,89,100,77,0)
 S SDTIME=Y
"DATA",811.8,89,100,78,0)
 K DIR
"DATA",811.8,89,100,79,0)
 S DIR(0)="YA"
"DATA",811.8,89,100,80,0)
 S DIR("A")="Do you want to run the MST synchronization at the same time every day? "
"DATA",811.8,89,100,81,0)
 S DIR("B")="Y"
"DATA",811.8,89,100,82,0)
 D ^DIR
"DATA",811.8,89,100,83,0)
 I $D(DIROUT)!$D(DIRUT) Q
"DATA",811.8,89,100,84,0)
 I $D(DTOUT)!$D(DUOUT) Q
"DATA",811.8,89,100,85,0)
 S STIME=$S(Y:"1."_$P(SDTIME,".",2),1:-1)
"DATA",811.8,89,100,86,0)
 ;
"DATA",811.8,89,100,87,0)
 ;Put the task into the queue.
"DATA",811.8,89,100,88,0)
 K ZTSAVE
"DATA",811.8,89,100,89,0)
 S ZTSAVE("STIME")=STIME
"DATA",811.8,89,100,90,0)
 S ZTRTN="SYNCH^PXRMMST"
"DATA",811.8,89,100,91,0)
 S ZTDESC="Clinical Reminders MST synchronization job"
"DATA",811.8,89,100,92,0)
 S ZTDTH=SDTIME
"DATA",811.8,89,100,93,0)
 S ZTIO=""
"DATA",811.8,89,100,94,0)
 D ^%ZTLOAD
"DATA",811.8,89,100,95,0)
 W !,"Task number ",ZTSK," queued."
"DATA",811.8,89,100,96,0)
 Q
"DATA",811.8,89,100,97,0)
 ;
"DATA",811.8,89,100,98,0)
 ;====================================================
"DATA",811.8,89,100,99,0)
STATUS(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a
"DATA",811.8,89,100,100,0)
 ;patient's MST status.
"DATA",811.8,89,100,101,0)
 N IEN,TEMP
"DATA",811.8,89,100,102,0)
 S TEMP=$$GETSTAT^DGMSTAPI(DFN)
"DATA",811.8,89,100,103,0)
 S IEN=$P(TEMP,U,1)
"DATA",811.8,89,100,104,0)
 I IEN=-1 D  Q
"DATA",811.8,89,100,105,0)
 . S TEST=0,VALUE="",DATE=$$NOW^PXRMDATE
"DATA",811.8,89,100,106,0)
 I IEN=0 D  Q
"DATA",811.8,89,100,107,0)
 . S TEST=0
"DATA",811.8,89,100,108,0)
 . S VALUE=$P(TEMP,U,2)
"DATA",811.8,89,100,109,0)
 . S DATE=$P(TEMP,U,3)
"DATA",811.8,89,100,110,0)
 . S TEXT="No MST status found"
"DATA",811.8,89,100,111,0)
 ;If we get to here then a valid entry was found.
"DATA",811.8,89,100,112,0)
 S TEST=1
"DATA",811.8,89,100,113,0)
 S VALUE=$P(TEMP,U,2)
"DATA",811.8,89,100,114,0)
 S DATE=$P(TEMP,U,3)
"DATA",811.8,89,100,115,0)
 Q
"DATA",811.8,89,100,116,0)
 ;
"DATA",811.8,89,100,117,0)
 ;====================================================
"DATA",811.8,89,100,118,0)
STCODE(TERM) ;Return the MST status code based on the term name.
"DATA",811.8,89,100,119,0)
 N STCODE
"DATA",811.8,89,100,120,0)
 S STCODE=$S(TERM="VA-MST DECLINES REPORT":"D",TERM="VA-MST NEGATIVE REPORT":"N",TERM="VA-MST POSITIVE REPORT":"Y",1:"U")
"DATA",811.8,89,100,121,0)
 Q STCODE
"DATA",811.8,89,100,122,0)
 ;
"DATA",811.8,89,100,123,0)
 ;====================================================
"DATA",811.8,89,100,124,0)
SYNCH ;Synchronize the MST history file.
"DATA",811.8,89,100,125,0)
 N INID,LTIME,NUMUPD,START,TEMP
"DATA",811.8,89,100,126,0)
 ;STIME is passed from QUE via ZTSAVE.
"DATA",811.8,89,100,127,0)
 D UPDSTAT(.NUMUPD,.START)
"DATA",811.8,89,100,128,0)
 ;If the initial sync data has been stored then update the daily
"DATA",811.8,89,100,129,0)
 ;data.
"DATA",811.8,89,100,130,0)
 S INID=+$P($G(^PXRM(800,1,"MST")),U,1)
"DATA",811.8,89,100,131,0)
 I INID>0 D
"DATA",811.8,89,100,132,0)
 . S $P(^PXRM(800,1,"MST"),U,3)=$$NOW^XLFDT
"DATA",811.8,89,100,133,0)
 . S $P(^PXRM(800,1,"MST"),U,4)=NUMUPD
"DATA",811.8,89,100,134,0)
 . S $P(^PXRM(800,1,"MST"),U,6)=START
"DATA",811.8,89,100,135,0)
 E  D
"DATA",811.8,89,100,136,0)
 . S $P(^PXRM(800,1,"MST"),U,1)=$$NOW^XLFDT
"DATA",811.8,89,100,137,0)
 . S $P(^PXRM(800,1,"MST"),U,2)=NUMUPD
"DATA",811.8,89,100,138,0)
 . S $P(^PXRM(800,1,"MST"),U,5)=START
"DATA",811.8,89,100,139,0)
 ;
"DATA",811.8,89,100,140,0)
 ;Cleanup the task stuff.
"DATA",811.8,89,100,141,0)
 I STIME=-1 S ZTREQ="@" Q
"DATA",811.8,89,100,142,0)
 E  D
"DATA",811.8,89,100,143,0)
 . S TEMP=$G(^PXRM(800,1,"MST"))
"DATA",811.8,89,100,144,0)
 . S LTIME=+$P(TEMP,U,3)
"DATA",811.8,89,100,145,0)
 . I LTIME=0 S LTIME=+$P(TEMP,U,1)
"DATA",811.8,89,100,146,0)
 .;Adding STIME sets the new starting time at exactly one day following
"DATA",811.8,89,100,147,0)
 .;the previous starting time.
"DATA",811.8,89,100,148,0)
 . S $P(ZTREQ,U,1)=$P(LTIME,".",1)+STIME
"DATA",811.8,89,100,149,0)
 Q
"DATA",811.8,89,100,150,0)
 ;
"DATA",811.8,89,100,151,0)
 ;====================================================
"DATA",811.8,89,100,152,0)
SYNREP ;Provide a report of the synchronization data.
"DATA",811.8,89,100,153,0)
 N EDTIME,EITIME,IDATE,LDATE,NIUPD,NLUPD,TEMP
"DATA",811.8,89,100,154,0)
 S TEMP=$G(^PXRM(800,1,"MST"))
"DATA",811.8,89,100,155,0)
 S IDATE=$$FMTE^XLFDT($P(TEMP,U,1))
"DATA",811.8,89,100,156,0)
 I IDATE=0 S IDATE="none"
"DATA",811.8,89,100,157,0)
 S NIUPD=$P(TEMP,U,2)
"DATA",811.8,89,100,158,0)
 S EITIME=$$FMDIFF^XLFDT($P(TEMP,U,1),$P(TEMP,U,5),2)
"DATA",811.8,89,100,159,0)
 S LDATE=$$FMTE^XLFDT($P(TEMP,U,3))
"DATA",811.8,89,100,160,0)
 I LDATE=0 S LDATE="none"
"DATA",811.8,89,100,161,0)
 S NLUPD=$P(TEMP,U,4)
"DATA",811.8,89,100,162,0)
 S EDTIME=$$FMDIFF^XLFDT($P(TEMP,U,3),$P(TEMP,U,6),2)
"DATA",811.8,89,100,163,0)
 W !!,"Clinical Reminders MST Synchronization Report"
"DATA",811.8,89,100,164,0)
 W !,"---------------------------------------------"
"DATA",811.8,89,100,165,0)
 W !,"Initial synchronization date: ",IDATE
"DATA",811.8,89,100,166,0)
 W !,"Number of updates made: ",NIUPD
"DATA",811.8,89,100,167,0)
 I EITIME>60 D
"DATA",811.8,89,100,168,0)
 . S EITIME=$$FMDIFF^XLFDT($P(TEMP,U,1),$P(TEMP,U,5),3)
"DATA",811.8,89,100,169,0)
 . W !,"Elapsed time: ",EITIME
"DATA",811.8,89,100,170,0)
 E  W !,"Elapsed time: ",EITIME," secs"
"DATA",811.8,89,100,171,0)
 W !!,"Last daily synchronization date: ",LDATE
"DATA",811.8,89,100,172,0)
 W !,"Number of updates made: ",NLUPD
"DATA",811.8,89,100,173,0)
 I EDTIME>60 D
"DATA",811.8,89,100,174,0)
 . S EDTIME=$$FMDIFF^XLFDT($P(TEMP,U,3),$P(TEMP,U,6),3)
"DATA",811.8,89,100,175,0)
 . W !,"Elapsed time: ",EDTIME
"DATA",811.8,89,100,176,0)
 E  W !,"Elapsed time: ",EDTIME," secs"
"DATA",811.8,89,100,177,0)
 Q
"DATA",811.8,89,100,178,0)
 ;
"DATA",811.8,89,100,179,0)
 ;====================================================
"DATA",811.8,89,100,180,0)
UPDATE(DFN,VISIT,SOURCE,STCODE,TYPE) ;Make an update to the MST History file.
"DATA",811.8,89,100,181,0)
 N DATE,MSTDATE,PROV,STAT,TEMP,UPDSTAT,VPRVIEN
"DATA",811.8,89,100,182,0)
 S UPDSTAT=-1
"DATA",811.8,89,100,183,0)
 ;If the update is because of a protocol event use NOW for the
"DATA",811.8,89,100,184,0)
 ;date/time. If it is being done as part of a synchronization use
"DATA",811.8,89,100,185,0)
 ;the date the visit was created.
"DATA",811.8,89,100,186,0)
 S DATE=$S(TYPE="PROTOCOL":$$NOW^XLFDT,1:$P($G(^AUPNVSIT(VISIT,0)),U,2))
"DATA",811.8,89,100,187,0)
 ;If the date does not contain the time use noon.
"DATA",811.8,89,100,188,0)
 I DATE'["." S DATE=DATE_".12"
"DATA",811.8,89,100,189,0)
 S STAT=$$GETSTAT^DGMSTAPI(DFN)
"DATA",811.8,89,100,190,0)
 S MSTDATE=$S($P(STAT,U,1)>0:$P(STAT,U,3),1:0)
"DATA",811.8,89,100,191,0)
 I DATE>MSTDATE D
"DATA",811.8,89,100,192,0)
 .;Determine the provider.
"DATA",811.8,89,100,193,0)
 . S TEMP=$P(SOURCE,";",2)_$P(SOURCE,";",1)_",12)"
"DATA",811.8,89,100,194,0)
 . S PROV=$P($G(@TEMP),U,4)
"DATA",811.8,89,100,195,0)
 . I PROV="" D
"DATA",811.8,89,100,196,0)
 ..;DBIA #2316
"DATA",811.8,89,100,197,0)
 .. S VPRVIEN=+$O(^AUPNVPRV("AD",VISIT,""))
"DATA",811.8,89,100,198,0)
 .. I VPRVIEN>0 S PROV=$P(^AUPNVPRV(VPRVIEN,0),U,1)
"DATA",811.8,89,100,199,0)
 . S UPDSTAT=$$NEWSTAT^DGMSTAPI(DFN,STCODE,DATE,PROV)
"DATA",811.8,89,100,200,0)
 . I +UPDSTAT=-1 D
"DATA",811.8,89,100,201,0)
 .. N FN,GBL,IEN,NAME,TARGET,XMSUB,VADM
"DATA",811.8,89,100,202,0)
 .. K ^TMP("PXRMXMZ",$J)
"DATA",811.8,89,100,203,0)
 .. S XMSUB="CLINICAL REMINDER MST UPDATE PROBLEM"
"DATA",811.8,89,100,204,0)
 .. S ^TMP("PXRMXMZ",$J,1,0)="NEWSTAT^DGMSTAPI returned the following error:"
"DATA",811.8,89,100,205,0)
 .. S ^TMP("PXRMXMZ",$J,2,0)=$P(UPDSTAT,U,2)
"DATA",811.8,89,100,206,0)
 .. S ^TMP("PXRMXMZ",$J,3,0)="The following data was passed to NEWSTAT^DGMSTAPI"
"DATA",811.8,89,100,207,0)
 .. S ^TMP("PXRMXMZ",$J,4,0)="DFN = "_DFN
"DATA",811.8,89,100,208,0)
 .. S ^TMP("PXRMXMZ",$J,5,0)="Status code = "_STCODE
"DATA",811.8,89,100,209,0)
 .. S ^TMP("PXRMXMZ",$J,6,0)="Date = "_DATE
"DATA",811.8,89,100,210,0)
 .. S ^TMP("PXRMXMZ",$J,7,0)="Provider = "_PROV
"DATA",811.8,89,100,211,0)
 .. S ^TMP("PXRMXMZ",$J,8,0)="Data source = "_SOURCE
"DATA",811.8,89,100,212,0)
 .. S ^TMP("PXRMXMZ",$J,9,0)="This corresponds to the following:"
"DATA",811.8,89,100,213,0)
 .. D DEM^VADPT
"DATA",811.8,89,100,214,0)
 .. S ^TMP("PXRMXMZ",$J,10,0)="Patient = "_VADM(1)
"DATA",811.8,89,100,215,0)
 .. S ^TMP("PXRMXMZ",$J,11,0)="SSN = "_$P(VADM(2),U,2)
"DATA",811.8,89,100,216,0)
 .. S ^TMP("PXRMXMZ",$J,12,0)="MST Status = "_$$EXTERNAL^DILFD(29.11,3,"",STCODE)
"DATA",811.8,89,100,217,0)
 .. S ^TMP("PXRMXMZ",$J,13,0)="Date = "_$$FMTE^XLFDT(DATE,"5Z")
"DATA",811.8,89,100,218,0)
 .. S TEMP=$S(PROV="":"Unknown",1:TEMP=$$GET1^DIQ(200,PROV,.01,"","",""))
"DATA",811.8,89,100,219,0)
 .. I TEMP="" S TEMP="Unknown"
"DATA",811.8,89,100,220,0)
 .. S ^TMP("PXRMXMZ",$J,14,0)="Provider = "_TEMP
"DATA",811.8,89,100,221,0)
 .. S GBL=$P($P(SOURCE,";",2),"(",1)
"DATA",811.8,89,100,222,0)
 .. S TEMP=GBL_"(0)"
"DATA",811.8,89,100,223,0)
 .. S FN=+$P(@TEMP,U,2)
"DATA",811.8,89,100,224,0)
 .. S TEMP=GBL_"("_$P(SOURCE,";",1)_",0)"
"DATA",811.8,89,100,225,0)
 .. S TEMP=$G(@TEMP)
"DATA",811.8,89,100,226,0)
 .. S IEN=$P(TEMP,U,1)
"DATA",811.8,89,100,227,0)
 .. D FIELD^DID(FN,.01,"N","POINTER","TARGET")
"DATA",811.8,89,100,228,0)
 .. S GBL="^"_$P(TARGET("POINTER"),"(",1)
"DATA",811.8,89,100,229,0)
 .. S TEMP=GBL_"(0)"
"DATA",811.8,89,100,230,0)
 .. S FN=$P(@TEMP,U,1)
"DATA",811.8,89,100,231,0)
 .. S TEMP=GBL_"("_IEN_",0)"
"DATA",811.8,89,100,232,0)
 .. S NAME=$P(@TEMP,U,1)
"DATA",811.8,89,100,233,0)
 .. S ^TMP("PXRMXMZ",$J,14,0)="Data type = "_FN
"DATA",811.8,89,100,234,0)
 .. S ^TMP("PXRMXMZ",$J,15,0)="Name = "_NAME
"DATA",811.8,89,100,235,0)
 .. D SEND^PXRMMSG(XMSUB)
"DATA",811.8,89,100,236,0)
 Q UPDSTAT
"DATA",811.8,89,100,237,0)
 ;
"DATA",811.8,89,100,238,0)
 ;====================================================
"DATA",811.8,89,100,239,0)
UPDPAT(DFN,VISIT,VFL) ;Update the MST history file for a single patient
"DATA",811.8,89,100,240,0)
 ;using term mappings. Called from DATACHG^PXRMPINF which is invoked
"DATA",811.8,89,100,241,0)
 ;by the protocol PXK VISIT DATA EVENT.
"DATA",811.8,89,100,242,0)
 N AFTER,BEFORE,DGBL,SP,STCODE,SIEN,SOURCE
"DATA",811.8,89,100,243,0)
 N TEMP,TERM,TERMIEN,VF
"DATA",811.8,89,100,244,0)
 ;Search all the MST terms to build patient lists.
"DATA",811.8,89,100,245,0)
 F TERM="VA-MST DECLINES REPORT","VA-MST NEGATIVE REPORT","VA-MST POSITIVE REPORT" D
"DATA",811.8,89,100,246,0)
 . S TERMIEN=$O(^PXRMD(811.5,"B",TERM,""))
"DATA",811.8,89,100,247,0)
 . S VF=""
"DATA",811.8,89,100,248,0)
 . F  S VF=$O(VFL(VF)) Q:VF=""  D
"DATA",811.8,89,100,249,0)
 .. I VFL(VF)=U Q
"DATA",811.8,89,100,250,0)
 .. S DGBL=$P(VFL(VF),U,1)
"DATA",811.8,89,100,251,0)
 .. I '$D(^PXRMD(811.5,TERMIEN,20,"E",DGBL)) Q
"DATA",811.8,89,100,252,0)
 .. S SIEN=""
"DATA",811.8,89,100,253,0)
 .. F  S SIEN=$O(^TMP("PXKCO",$J,VISIT,VF,SIEN)) Q:SIEN=""  D
"DATA",811.8,89,100,254,0)
 ... S AFTER=$G(^TMP("PXKCO",$J,VISIT,VF,SIEN,0,"AFTER"))
"DATA",811.8,89,100,255,0)
 ... S BEFORE=$G(^TMP("PXKCO",$J,VISIT,VF,SIEN,0,"BEFORE"))
"DATA",811.8,89,100,256,0)
 ... I AFTER=BEFORE Q
"DATA",811.8,89,100,257,0)
 ... S SP=$P(AFTER,U,1)
"DATA",811.8,89,100,258,0)
 ... I SP="" Q
"DATA",811.8,89,100,259,0)
 ... I '$D(^PXRMD(811.5,TERMIEN,20,"E",DGBL,SP)) Q
"DATA",811.8,89,100,260,0)
 ... S SOURCE=SIEN_";^"_$P(VFL(VF),U,2)
"DATA",811.8,89,100,261,0)
 ...;The status code depends on the term name.
"DATA",811.8,89,100,262,0)
 ... S STCODE=$$STCODE(TERM)
"DATA",811.8,89,100,263,0)
 ... S TEMP=$$UPDATE(DFN,VISIT,SOURCE,STCODE,"PROTOCOL")
"DATA",811.8,89,100,264,0)
 Q
"DATA",811.8,89,100,265,0)
 ;
"DATA",811.8,89,100,266,0)
 ;====================================================
"DATA",811.8,89,100,267,0)
UPDSTAT(NUMUPD,START) ;Update the MST history file using term mappings.
"DATA",811.8,89,100,268,0)
 N DAS,DATA,DFN,FILENUM,FINDPA,INDEX,ITEM,NOCC,STCODE,SOURCE
"DATA",811.8,89,100,269,0)
 N TEMP,TERM,TERMARR,TERMIEN,UPDSTAT,VDATE,VISIT
"DATA",811.8,89,100,270,0)
 S FINDPA=""
"DATA",811.8,89,100,271,0)
 ;Set the start time for the synchronization.
"DATA",811.8,89,100,272,0)
 S START=$$NOW^XLFDT
"DATA",811.8,89,100,273,0)
 S INDEX="PXRM_MST_LIST"
"DATA",811.8,89,100,274,0)
 S NUMUPD=0
"DATA",811.8,89,100,275,0)
 ;Search all the MST terms to build patient lists. Only V file data
"DATA",811.8,89,100,276,0)
 ;is used for the update.
"DATA",811.8,89,100,277,0)
 F TERM="VA-MST DECLINES REPORT","VA-MST NEGATIVE REPORT","VA-MST POSITIVE REPORT" D
"DATA",811.8,89,100,278,0)
 . K TERMARR,^TMP($J,INDEX)
"DATA",811.8,89,100,279,0)
 .;The status code depends on the term name.
"DATA",811.8,89,100,280,0)
 . S STCODE=$$STCODE(TERM)
"DATA",811.8,89,100,281,0)
 . S TERMIEN=$O(^PXRMD(811.5,"B",TERM,""))
"DATA",811.8,89,100,282,0)
 . I TERMIEN="" Q
"DATA",811.8,89,100,283,0)
 . D TERM^PXRMLDR(TERMIEN,.TERMARR)
"DATA",811.8,89,100,284,0)
 . D EVALPL^PXRMTERM(.FINDPA,.TERMARR,INDEX)
"DATA",811.8,89,100,285,0)
 . S DFN=0
"DATA",811.8,89,100,286,0)
 . F  S DFN=+$O(^TMP($J,INDEX,1,DFN)) Q:DFN=0  D
"DATA",811.8,89,100,287,0)
 .. S ITEM=""
"DATA",811.8,89,100,288,0)
 .. F  S ITEM=$O(^TMP($J,INDEX,1,DFN,ITEM)) Q:ITEM=""  D
"DATA",811.8,89,100,289,0)
 ... S NOCC=0
"DATA",811.8,89,100,290,0)
 ... F  S NOCC=$O(^TMP($J,INDEX,1,DFN,ITEM,NOCC)) Q:NOCC=""  D
"DATA",811.8,89,100,291,0)
 .... S FILENUM=""
"DATA",811.8,89,100,292,0)
 .... F  S FILENUM=$O(^TMP($J,INDEX,1,DFN,ITEM,NOCC,FILENUM)) Q:FILENUM=""  D
"DATA",811.8,89,100,293,0)
 ..... S TEMP=^TMP($J,INDEX,1,DFN,ITEM,NOCC,FILENUM)
"DATA",811.8,89,100,294,0)
 ..... S DAS=$P(TEMP,U,1)
"DATA",811.8,89,100,295,0)
 ..... K DATA
"DATA",811.8,89,100,296,0)
 ..... D GETDATA^PXRMDATA(FILENUM,DAS,.DATA)
"DATA",811.8,89,100,297,0)
 ..... S VISIT=$G(DATA("VISIT"))
"DATA",811.8,89,100,298,0)
 ..... I VISIT="" Q
"DATA",811.8,89,100,299,0)
 ..... S SOURCE=DAS_";"_^PXRMINDX(FILENUM,"GLOBAL NAME")
"DATA",811.8,89,100,300,0)
 ..... S UPDSTAT=$$UPDATE(DFN,VISIT,SOURCE,STCODE,"SYNCH")
"DATA",811.8,89,100,301,0)
 ..... I UPDSTAT'=-1 S NUMUPD=NUMUPD+1
"DATA",811.8,89,100,302,0)
 K ^TMP($J,INDEX)
"DATA",811.8,89,100,303,0)
 Q
"DATA",811.8,89,100,304,0)
 ;
"DATA",811.8,89,100,305,0)
]]>
"DATA",811.8,89,100,306,0)
</CODE>
"DATA",811.8,89,100,307,0)
</M_ROUTINE>
"DATA",811.8,89,100,308,0)
<M_ROUTINE>
"DATA",811.8,89,100,309,0)
<ROUTINE_NAME>PXRMPDEM</ROUTINE_NAME>
"DATA",811.8,89,100,310,0)
<CODE>
"DATA",811.8,89,100,311,0)
<![CDATA[
"DATA",811.8,89,100,312,0)
PXRMPDEM ; SLC/PKR - Computed findings for patient demographics. ;04/15/2005
"DATA",811.8,89,100,313,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005
"DATA",811.8,89,100,314,0)
 ;
"DATA",811.8,89,100,315,0)
 ;======================================================
"DATA",811.8,89,100,316,0)
AGE(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for returning a patient's
"DATA",811.8,89,100,317,0)
 ;age
"DATA",811.8,89,100,318,0)
 S DATE=$$NOW^PXRMDATE,TEST=1
"DATA",811.8,89,100,319,0)
 I $D(PXRMPDEM) D  Q
"DATA",811.8,89,100,320,0)
 . S VALUE=PXRMPDEM("AGE")
"DATA",811.8,89,100,321,0)
 . I +PXRMPDEM("DOD")=0 S VALUE("DECEASED")=0 Q
"DATA",811.8,89,100,322,0)
 . I +PXRMPDEM("DOD")>0 S VALUE("DECEASED")=1,TEXT="Patient is deceased"
"DATA",811.8,89,100,323,0)
 I '$D(PXRMPDEM) D
"DATA",811.8,89,100,324,0)
 . N DOB,DOD
"DATA",811.8,89,100,325,0)
 .;DBIA #10035
"DATA",811.8,89,100,326,0)
 . S DOB=$P(^DPT(DFN,0),U,3)
"DATA",811.8,89,100,327,0)
 . S DOD=$P($G(^DPT(DFN,.35)),U,1)
"DATA",811.8,89,100,328,0)
 . S VALUE=$$AGE^PXRMAGE(DOB,DOD,$$NOW^PXRMDATE)
"DATA",811.8,89,100,329,0)
 . I +DOD=0 S VALUE("DECEASED")=0 Q
"DATA",811.8,89,100,330,0)
 . I +DOD>0 S VALUE("DECEASED")=1,TEXT="Patient is deceased"
"DATA",811.8,89,100,331,0)
 Q
"DATA",811.8,89,100,332,0)
 ;
"DATA",811.8,89,100,333,0)
 ;======================================================
"DATA",811.8,89,100,334,0)
DISCHDT(DFN,TEST,DATE,VALUE,TEXT) ;This computed finding will return
"DATA",811.8,89,100,335,0)
 ;the most recent service separation date.
"DATA",811.8,89,100,336,0)
 N CNT,IRW,VAROOT
"DATA",811.8,89,100,337,0)
 S VAROOT="IRW"
"DATA",811.8,89,100,338,0)
 D SVC^VADPT
"DATA",811.8,89,100,339,0)
 S VALUE=$P($G(IRW(6,5)),U)
"DATA",811.8,89,100,340,0)
 I VALUE="" S TEST=0 D KVA^VADPT Q
"DATA",811.8,89,100,341,0)
 S DATE=VALUE,TEST=1
"DATA",811.8,89,100,342,0)
 S TEXT="Last Service Separation date: "_$$EDATE^PXRMDATE(VALUE)_" Branch of Service: "_$P($G(IRW(6,1)),U,2)
"DATA",811.8,89,100,343,0)
 D KVA^VADPT
"DATA",811.8,89,100,344,0)
 Q
"DATA",811.8,89,100,345,0)
 ;
"DATA",811.8,89,100,346,0)
 ;======================================================
"DATA",811.8,89,100,347,0)
DOB(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for a patient's
"DATA",811.8,89,100,348,0)
 ;date of birth.
"DATA",811.8,89,100,349,0)
 S DATE=$$NOW^PXRMDATE,TEST=1
"DATA",811.8,89,100,350,0)
 I $D(PXRMPDEM) S VALUE=PXRMPDEM("DOB")
"DATA",811.8,89,100,351,0)
 ;DBIA #10035 DATE OF BIRTH is a required field.
"DATA",811.8,89,100,352,0)
 I '$D(PXRMPDEM) S VALUE=$P(^DPT(DFN,0),U,3)
"DATA",811.8,89,100,353,0)
 S TEXT=$$EDATE^PXRMDATE(VALUE)
"DATA",811.8,89,100,354,0)
 Q
"DATA",811.8,89,100,355,0)
 ;
"DATA",811.8,89,100,356,0)
 ;======================================================
"DATA",811.8,89,100,357,0)
DOD(DFN,TEST,DATE,VALUE,TEXT)   ;Computed finding for a patient's
"DATA",811.8,89,100,358,0)
 ;date of death.
"DATA",811.8,89,100,359,0)
 S DATE=$$NOW^PXRMDATE
"DATA",811.8,89,100,360,0)
 I $D(PXRMPDEM) S VALUE=PXRMPDEM("DOD")
"DATA",811.8,89,100,361,0)
 ;DBIA #10035
"DATA",811.8,89,100,362,0)
 I '$D(PXRMPDEM) S VALUE=$P($G(^DPT(DFN,.35)),U,1)
"DATA",811.8,89,100,363,0)
 S TEST=$S(VALUE="":0,1:1)
"DATA",811.8,89,100,364,0)
 I TEST S TEXT=$$EDATE^PXRMDATE(VALUE)
"DATA",811.8,89,100,365,0)
 Q
"DATA",811.8,89,100,366,0)
 ;
"DATA",811.8,89,100,367,0)
 ;======================================================
"DATA",811.8,89,100,368,0)
ETHNY(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,VALUE,TEXT) ;Computed finding for
"DATA",811.8,89,100,369,0)
 ;a patient's ethnicity.
"DATA",811.8,89,100,370,0)
 N CNT,CNT1,VADM
"DATA",811.8,89,100,371,0)
 D DEM^VADPT
"DATA",811.8,89,100,372,0)
 I $D(VADM(11))'=11 S NFOUND=0 D KVA^VADPT Q
"DATA",811.8,89,100,373,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"DATA",811.8,89,100,374,0)
 S (CNT,CNT1)=0
"DATA",811.8,89,100,375,0)
 F  S CNT=$O(VADM(11,CNT)) Q:(CNT="")!(CNT1=NGET)  D
"DATA",811.8,89,100,376,0)
 . S CNT1=CNT1+1,TEST(CNT1)=1,DATE(CNT1)=$$NOW^PXRMDATE
"DATA",811.8,89,100,377,0)
 . S TEXT(CNT1)="",VALUE(CNT1,"VALUE")=$P($G(VADM(11,CNT)),U,2)
"DATA",811.8,89,100,378,0)
 S NFOUND=CNT1
"DATA",811.8,89,100,379,0)
 D KVA^VADPT
"DATA",811.8,89,100,380,0)
 Q
"DATA",811.8,89,100,381,0)
 ;
"DATA",811.8,89,100,382,0)
 ;======================================================
"DATA",811.8,89,100,383,0)
NEWRACE(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,VALUE,TEXT)       ;Computed finding
"DATA",811.8,89,100,384,0)
 ;for returning a patient's multi-valued race.
"DATA",811.8,89,100,385,0)
 N CNT,CNT1,VADM
"DATA",811.8,89,100,386,0)
 D DEM^VADPT
"DATA",811.8,89,100,387,0)
 I $D(VADM(12))'=11 S NFOUND=0 D KVA^VADPT Q
"DATA",811.8,89,100,388,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"DATA",811.8,89,100,389,0)
 S (CNT,CNT1)=0
"DATA",811.8,89,100,390,0)
 F  S CNT=$O(VADM(12,CNT)) Q:(CNT="")!(CNT1=NGET)  D
"DATA",811.8,89,100,391,0)
 . S CNT1=CNT1+1,TEST(CNT1)=1,DATE(CNT1)=$$NOW^PXRMDATE
"DATA",811.8,89,100,392,0)
 . S TEXT(CNT1)="",VALUE(CNT1,"VALUE")=$P($G(VADM(12,CNT)),U,2)
"DATA",811.8,89,100,393,0)
 S NFOUND=CNT1
"DATA",811.8,89,100,394,0)
 D KVA^VADPT
"DATA",811.8,89,100,395,0)
 Q
"DATA",811.8,89,100,396,0)
 ;
"DATA",811.8,89,100,397,0)
 ;======================================================
"DATA",811.8,89,100,398,0)
RACE(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's race.
"DATA",811.8,89,100,399,0)
 N RACE
"DATA",811.8,89,100,400,0)
 S DATE=$$NOW^PXRMDATE
"DATA",811.8,89,100,401,0)
 ;DBIA #10035
"DATA",811.8,89,100,402,0)
 S RACE=$P($G(^DPT(DFN,0)),U,6)
"DATA",811.8,89,100,403,0)
 I RACE="" S TEST=0,VALUE="" Q
"DATA",811.8,89,100,404,0)
 S TEST=1,VALUE=$$EXTERNAL^DILFD(2,.06,"",RACE)
"DATA",811.8,89,100,405,0)
 Q
"DATA",811.8,89,100,406,0)
 ;
"DATA",811.8,89,100,407,0)
 ;======================================================
"DATA",811.8,89,100,408,0)
SEX(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for returning a patient's
"DATA",811.8,89,100,409,0)
 ;sex.
"DATA",811.8,89,100,410,0)
 S DATE=$$NOW^PXRMDATE,TEST=1
"DATA",811.8,89,100,411,0)
 I $D(PXRMPDEM) S VALUE=PXRMPDEM("SEX") Q
"DATA",811.8,89,100,412,0)
 ;DBIA #10035 SEX is a required field.
"DATA",811.8,89,100,413,0)
 I '$D(PXRMPDEM) S VALUE=$P(^DPT(DFN,0),U,2)
"DATA",811.8,89,100,414,0)
 Q
"DATA",811.8,89,100,415,0)
 ;
"DATA",811.8,89,100,416,0)
 ;======================================================
"DATA",811.8,89,100,417,0)
VETERAN(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking if a
"DATA",811.8,89,100,418,0)
 ;patient is a veteran.
"DATA",811.8,89,100,419,0)
 N VAEL
"DATA",811.8,89,100,420,0)
 S DATE=$$NOW^PXRMDATE
"DATA",811.8,89,100,421,0)
 D ELIG^VADPT
"DATA",811.8,89,100,422,0)
 S TEST=VAEL(4)
"DATA",811.8,89,100,423,0)
 S VALUE=""
"DATA",811.8,89,100,424,0)
 D KVA^VADPT
"DATA",811.8,89,100,425,0)
 Q
"DATA",811.8,89,100,426,0)
 ;
"DATA",811.8,89,100,427,0)
]]>
"DATA",811.8,89,100,428,0)
</CODE>
"DATA",811.8,89,100,429,0)
</M_ROUTINE>
"DATA",811.8,89,100,430,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,431,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,89,100,432,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,89,100,433,0)
<POINT_01>Mental Health and Behavioral Science Strategic Group</POINT_01>
"DATA",811.8,89,100,434,0)
<INTERNAL_ENTRY_NUMBER>11</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,435,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,436,0)
<![CDATA[
"DATA",811.8,89,100,437,0)
811.6;+11,;.01~Mental Health and Behavioral Science Strategic Group
"DATA",811.8,89,100,438,0)
811.6;+11,;100~NATIONAL
"DATA",811.8,89,100,439,0)
811.61;+12,+11,;.01~Mental Health and Behavioral Science Strategic Group
"DATA",811.8,89,100,440,0)
811.61;+12,+11,;1~WP-start~4
"DATA",811.8,89,100,441,0)
Amy Street, PhD
"DATA",811.8,89,100,442,0)
Women's Health Sciences Division, National Center for PTSD
"DATA",811.8,89,100,443,0)
VA Boston HCS
"DATA",811.8,89,100,444,0)
(617) 232-9500, ext. 5111
"DATA",811.8,89,100,445,0)
811.63;+13,+11,;.01~07/11/2005@14:08:56
"DATA",811.8,89,100,446,0)
811.63;+13,+11,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,447,0)
811.63;+13,+11,;2~WP-start~1
"DATA",811.8,89,100,448,0)
Exchange Stub
"DATA",811.8,89,100,449,0)
]]>
"DATA",811.8,89,100,450,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,451,0)
<IEN_ROOT>
"DATA",811.8,89,100,452,0)
<![CDATA[
"DATA",811.8,89,100,453,0)
12^1
"DATA",811.8,89,100,454,0)
13^1
"DATA",811.8,89,100,455,0)
]]>
"DATA",811.8,89,100,456,0)
</IEN_ROOT>
"DATA",811.8,89,100,457,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,458,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,459,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,89,100,460,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,89,100,461,0)
<POINT_01>Women Veterans Health Program</POINT_01>
"DATA",811.8,89,100,462,0)
<INTERNAL_ENTRY_NUMBER>12</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,463,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,464,0)
<![CDATA[
"DATA",811.8,89,100,465,0)
811.6;+12,;.01~Women Veterans Health Program
"DATA",811.8,89,100,466,0)
811.6;+12,;100~NATIONAL
"DATA",811.8,89,100,467,0)
811.61;+13,+12,;.01~Women Veterans Health Program
"DATA",811.8,89,100,468,0)
811.61;+13,+12,;1~WP-start~1
"DATA",811.8,89,100,469,0)
(202) 273-8577
"DATA",811.8,89,100,470,0)
811.63;+14,+12,;.01~07/11/2005@14:08:56
"DATA",811.8,89,100,471,0)
811.63;+14,+12,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,472,0)
811.63;+14,+12,;2~WP-start~1
"DATA",811.8,89,100,473,0)
Exchange Stub
"DATA",811.8,89,100,474,0)
]]>
"DATA",811.8,89,100,475,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,476,0)
<IEN_ROOT>
"DATA",811.8,89,100,477,0)
<![CDATA[
"DATA",811.8,89,100,478,0)
13^1
"DATA",811.8,89,100,479,0)
14^1
"DATA",811.8,89,100,480,0)
]]>
"DATA",811.8,89,100,481,0)
</IEN_ROOT>
"DATA",811.8,89,100,482,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,483,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,484,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,89,100,485,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,89,100,486,0)
<POINT_01>Mental Health and Behavioral Science Strategic Group and Women Veterans Health Program</POINT_01>
"DATA",811.8,89,100,487,0)
<INTERNAL_ENTRY_NUMBER>13</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,488,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,489,0)
<![CDATA[
"DATA",811.8,89,100,490,0)
811.6;+13,;.01~Mental Health and Behavioral Science Strategic Group and Women Veterans Health Program
"DATA",811.8,89,100,491,0)
811.6;+13,;100~NATIONAL
"DATA",811.8,89,100,492,0)
811.62;+14,+13,;.01~Mental Health and Behavioral Science Strategic Group
"DATA",811.8,89,100,493,0)
811.62;+15,+13,;.01~Women Veterans Health Program
"DATA",811.8,89,100,494,0)
811.63;+16,+13,;.01~07/11/2005@14:08:56
"DATA",811.8,89,100,495,0)
811.63;+16,+13,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,496,0)
811.63;+16,+13,;2~WP-start~1
"DATA",811.8,89,100,497,0)
Exchange Stub
"DATA",811.8,89,100,498,0)
]]>
"DATA",811.8,89,100,499,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,500,0)
<IEN_ROOT>
"DATA",811.8,89,100,501,0)
<![CDATA[
"DATA",811.8,89,100,502,0)
14^1
"DATA",811.8,89,100,503,0)
15^2
"DATA",811.8,89,100,504,0)
16^1
"DATA",811.8,89,100,505,0)
]]>
"DATA",811.8,89,100,506,0)
</IEN_ROOT>
"DATA",811.8,89,100,507,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,508,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,509,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,89,100,510,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,89,100,511,0)
<POINT_01>MST CATEGORY</POINT_01>
"DATA",811.8,89,100,512,0)
<INTERNAL_ENTRY_NUMBER>74</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,513,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,514,0)
<![CDATA[
"DATA",811.8,89,100,515,0)
9999999.64;+74,;.01~MST CATEGORY
"DATA",811.8,89,100,516,0)
9999999.64;+74,;.1~CATEGORY
"DATA",811.8,89,100,517,0)
]]>
"DATA",811.8,89,100,518,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,519,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,520,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,521,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,89,100,522,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,89,100,523,0)
<POINT_01>MST DECLINES TO ANSWER</POINT_01>
"DATA",811.8,89,100,524,0)
<INTERNAL_ENTRY_NUMBER>75</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,525,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,526,0)
<![CDATA[
"DATA",811.8,89,100,527,0)
9999999.64;+75,;.01~MST DECLINES TO ANSWER
"DATA",811.8,89,100,528,0)
9999999.64;+75,;.03~MST CATEGORY
"DATA",811.8,89,100,529,0)
9999999.64;+75,;.1~FACTOR
"DATA",811.8,89,100,530,0)
]]>
"DATA",811.8,89,100,531,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,532,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,533,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,534,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,89,100,535,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,89,100,536,0)
<POINT_01>MST NO DOES NOT REPORT</POINT_01>
"DATA",811.8,89,100,537,0)
<INTERNAL_ENTRY_NUMBER>76</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,538,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,539,0)
<![CDATA[
"DATA",811.8,89,100,540,0)
9999999.64;+76,;.01~MST NO DOES NOT REPORT
"DATA",811.8,89,100,541,0)
9999999.64;+76,;.03~MST CATEGORY
"DATA",811.8,89,100,542,0)
9999999.64;+76,;.1~FACTOR
"DATA",811.8,89,100,543,0)
]]>
"DATA",811.8,89,100,544,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,545,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,546,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,547,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,89,100,548,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,89,100,549,0)
<POINT_01>MST YES REPORTS</POINT_01>
"DATA",811.8,89,100,550,0)
<INTERNAL_ENTRY_NUMBER>77</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,551,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,552,0)
<![CDATA[
"DATA",811.8,89,100,553,0)
9999999.64;+77,;.01~MST YES REPORTS
"DATA",811.8,89,100,554,0)
9999999.64;+77,;.03~MST CATEGORY
"DATA",811.8,89,100,555,0)
9999999.64;+77,;.1~FACTOR
"DATA",811.8,89,100,556,0)
]]>
"DATA",811.8,89,100,557,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,558,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,559,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,560,0)
<FILE_NAME>REMINDER COMPUTED FINDINGS</FILE_NAME>
"DATA",811.8,89,100,561,0)
<FILE_NUMBER>811.4</FILE_NUMBER>
"DATA",811.8,89,100,562,0)
<POINT_01>VA-MST STATUS</POINT_01>
"DATA",811.8,89,100,563,0)
<INTERNAL_ENTRY_NUMBER>8</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,564,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,565,0)
<![CDATA[
"DATA",811.8,89,100,566,0)
811.4;+8,;.01~VA-MST STATUS
"DATA",811.8,89,100,567,0)
811.4;+8,;.02~PXRMMST
"DATA",811.8,89,100,568,0)
811.4;+8,;.03~STATUS
"DATA",811.8,89,100,569,0)
811.4;+8,;.04~MST Status
"DATA",811.8,89,100,570,0)
811.4;+8,;1~WP-start~2
"DATA",811.8,89,100,571,0)
This computed finding uses $$GETSTAT^DGMSTAPI, DBIA #2716, to obtain a
"DATA",811.8,89,100,572,0)
patient's MST status information.
"DATA",811.8,89,100,573,0)
811.4;+8,;100~NATIONAL
"DATA",811.8,89,100,574,0)
811.4;+8,;101~Mental Health and Behavioral Science Strategic Group and Women Veterans Health Program
"DATA",811.8,89,100,575,0)
811.42;+9,+8,;.01~07/11/2005@14:08:57
"DATA",811.8,89,100,576,0)
811.42;+9,+8,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,577,0)
811.42;+9,+8,;2~WP-start~1
"DATA",811.8,89,100,578,0)
Exchange Stub
"DATA",811.8,89,100,579,0)
]]>
"DATA",811.8,89,100,580,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,581,0)
<IEN_ROOT>
"DATA",811.8,89,100,582,0)
<![CDATA[
"DATA",811.8,89,100,583,0)
9^1
"DATA",811.8,89,100,584,0)
]]>
"DATA",811.8,89,100,585,0)
</IEN_ROOT>
"DATA",811.8,89,100,586,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,587,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,588,0)
<FILE_NAME>REMINDER COMPUTED FINDINGS</FILE_NAME>
"DATA",811.8,89,100,589,0)
<FILE_NUMBER>811.4</FILE_NUMBER>
"DATA",811.8,89,100,590,0)
<POINT_01>VA-VETERAN</POINT_01>
"DATA",811.8,89,100,591,0)
<INTERNAL_ENTRY_NUMBER>9</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,592,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,593,0)
<![CDATA[
"DATA",811.8,89,100,594,0)
811.4;+9,;.01~VA-VETERAN
"DATA",811.8,89,100,595,0)
811.4;+9,;.02~PXRMPDEM
"DATA",811.8,89,100,596,0)
811.4;+9,;.03~VETERAN
"DATA",811.8,89,100,597,0)
811.4;+9,;.04~Patient is a Veteran
"DATA",811.8,89,100,598,0)
811.4;+9,;1~WP-start~3
"DATA",811.8,89,100,599,0)
This single occurrence computed finding returns true if the patient is
"DATA",811.8,89,100,600,0)
a veteran and false otherwise. DATE is always today's date. VALUE is
"DATA",811.8,89,100,601,0)
always null and TEXT is not set.
"DATA",811.8,89,100,602,0)
811.4;+9,;5~SINGLE
"DATA",811.8,89,100,603,0)
811.4;+9,;100~NATIONAL
"DATA",811.8,89,100,604,0)
811.42;+10,+9,;.01~07/11/2005@14:08:57
"DATA",811.8,89,100,605,0)
811.42;+10,+9,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,606,0)
811.42;+10,+9,;2~WP-start~1
"DATA",811.8,89,100,607,0)
Exchange Stub
"DATA",811.8,89,100,608,0)
]]>
"DATA",811.8,89,100,609,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,610,0)
<IEN_ROOT>
"DATA",811.8,89,100,611,0)
<![CDATA[
"DATA",811.8,89,100,612,0)
10^1
"DATA",811.8,89,100,613,0)
]]>
"DATA",811.8,89,100,614,0)
</IEN_ROOT>
"DATA",811.8,89,100,615,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,616,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,617,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,89,100,618,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,89,100,619,0)
<POINT_01>VA-MST POSITIVE REPORT</POINT_01>
"DATA",811.8,89,100,620,0)
<INTERNAL_ENTRY_NUMBER>28</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,621,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,622,0)
<![CDATA[
"DATA",811.8,89,100,623,0)
811.5;+28,;.01~VA-MST POSITIVE REPORT
"DATA",811.8,89,100,624,0)
811.5;+28,;.04~JUL 25, 2001
"DATA",811.8,89,100,625,0)
811.5;+28,;1~WP-start~15
"DATA",811.8,89,100,626,0)
This term represents a positive response to the Military Sexual Trauma
"DATA",811.8,89,100,627,0)
Screening questions. 
"DATA",811.8,89,100,628,0)
 
"DATA",811.8,89,100,629,0)
This term is distributed with mapping to two potential findings:
"DATA",811.8,89,100,630,0)
 
"DATA",811.8,89,100,631,0)
1)      Computed Finding: MILITARY SEXUAL TRAUMA SCREEN with CONDITON
"DATA",811.8,89,100,632,0)
field check for "Y". This Computed Finding checks for the MST HISTORY
"DATA",811.8,89,100,633,0)
status of YES.
"DATA",811.8,89,100,634,0)
 
"DATA",811.8,89,100,635,0)
2)      Health Factor: MST YES REPORTS
"DATA",811.8,89,100,636,0)
This Health Factor represents positive screening for MST. 
"DATA",811.8,89,100,637,0)
 
"DATA",811.8,89,100,638,0)
Enter any local finding that your facility is using to represent a
"DATA",811.8,89,100,639,0)
positive MST screening value.   (Typical findings may be health factors,
"DATA",811.8,89,100,640,0)
exams, or education topics)
"DATA",811.8,89,100,641,0)
811.5;+28,;100~NATIONAL
"DATA",811.8,89,100,642,0)
811.5;+28,;101~Mental Health and Behavioral Science Strategic Group and Women Veterans Health Program
"DATA",811.8,89,100,643,0)
811.52;+29,+28,;.01~CF.VA-MST STATUS
"DATA",811.8,89,100,644,0)
811.52;+29,+28,;14~I V="Y"
"DATA",811.8,89,100,645,0)
811.52;+29,+28,;22~I V="Y"
"DATA",811.8,89,100,646,0)
811.52;+30,+28,;.01~HF.MST YES REPORTS
"DATA",811.8,89,100,647,0)
811.53;+31,+28,;.01~07/11/2005@14:08:57
"DATA",811.8,89,100,648,0)
811.53;+31,+28,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,649,0)
811.53;+31,+28,;2~WP-start~1
"DATA",811.8,89,100,650,0)
Exchange Stub
"DATA",811.8,89,100,651,0)
]]>
"DATA",811.8,89,100,652,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,653,0)
<IEN_ROOT>
"DATA",811.8,89,100,654,0)
<![CDATA[
"DATA",811.8,89,100,655,0)
29^1
"DATA",811.8,89,100,656,0)
30^2
"DATA",811.8,89,100,657,0)
31^1
"DATA",811.8,89,100,658,0)
]]>
"DATA",811.8,89,100,659,0)
</IEN_ROOT>
"DATA",811.8,89,100,660,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,661,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,662,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,89,100,663,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,89,100,664,0)
<POINT_01>VA-MST NEGATIVE REPORT</POINT_01>
"DATA",811.8,89,100,665,0)
<INTERNAL_ENTRY_NUMBER>29</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,666,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,667,0)
<![CDATA[
"DATA",811.8,89,100,668,0)
811.5;+29,;.01~VA-MST NEGATIVE REPORT
"DATA",811.8,89,100,669,0)
811.5;+29,;.04~JUL 25, 2001
"DATA",811.8,89,100,670,0)
811.5;+29,;1~WP-start~15
"DATA",811.8,89,100,671,0)
This term represents a negative response to the Military Sexual Trauma
"DATA",811.8,89,100,672,0)
Screening questions. 
"DATA",811.8,89,100,673,0)
 
"DATA",811.8,89,100,674,0)
This term is distributed with mapping to two potential finding types:
"DATA",811.8,89,100,675,0)
 
"DATA",811.8,89,100,676,0)
1)      Computed Finding: MILITARY SEXUAL TRAUMA SCREEN with CONDITION
"DATA",811.8,89,100,677,0)
field check for "N". This Computed Finding checks for the MST HISTORY
"DATA",811.8,89,100,678,0)
status of NO.
"DATA",811.8,89,100,679,0)
 
"DATA",811.8,89,100,680,0)
2)      Health Factor: MST NO DOES NOT REPORT
"DATA",811.8,89,100,681,0)
This Health Factor represents negative screening for MST. 
"DATA",811.8,89,100,682,0)
 
"DATA",811.8,89,100,683,0)
Enter any local finding that your facility is using to represent a
"DATA",811.8,89,100,684,0)
negative MST screening value.   (Typical findings may be health factors,
"DATA",811.8,89,100,685,0)
exams, or education topics)
"DATA",811.8,89,100,686,0)
811.5;+29,;100~NATIONAL
"DATA",811.8,89,100,687,0)
811.5;+29,;101~Mental Health and Behavioral Science Strategic Group and Women Veterans Health Program
"DATA",811.8,89,100,688,0)
811.52;+30,+29,;.01~CF.VA-MST STATUS
"DATA",811.8,89,100,689,0)
811.52;+30,+29,;14~I V="N"
"DATA",811.8,89,100,690,0)
811.52;+30,+29,;22~I V="N"
"DATA",811.8,89,100,691,0)
811.52;+31,+29,;.01~HF.MST NO DOES NOT REPORT
"DATA",811.8,89,100,692,0)
811.53;+32,+29,;.01~07/11/2005@14:08:57
"DATA",811.8,89,100,693,0)
811.53;+32,+29,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,694,0)
811.53;+32,+29,;2~WP-start~1
"DATA",811.8,89,100,695,0)
Exchange Stub
"DATA",811.8,89,100,696,0)
]]>
"DATA",811.8,89,100,697,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,698,0)
<IEN_ROOT>
"DATA",811.8,89,100,699,0)
<![CDATA[
"DATA",811.8,89,100,700,0)
30^1
"DATA",811.8,89,100,701,0)
31^2
"DATA",811.8,89,100,702,0)
32^1
"DATA",811.8,89,100,703,0)
]]>
"DATA",811.8,89,100,704,0)
</IEN_ROOT>
"DATA",811.8,89,100,705,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,706,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,707,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,89,100,708,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,89,100,709,0)
<POINT_01>VA-MST DECLINES REPORT</POINT_01>
"DATA",811.8,89,100,710,0)
<INTERNAL_ENTRY_NUMBER>30</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,711,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,712,0)
<![CDATA[
"DATA",811.8,89,100,713,0)
811.5;+30,;.01~VA-MST DECLINES REPORT
"DATA",811.8,89,100,714,0)
811.5;+30,;.04~JUL 25, 2001
"DATA",811.8,89,100,715,0)
811.5;+30,;1~WP-start~14
"DATA",811.8,89,100,716,0)
This term represents a declines to answer response to the Military Sexual
"DATA",811.8,89,100,717,0)
Trauma Screening questions. 
"DATA",811.8,89,100,718,0)
 
"DATA",811.8,89,100,719,0)
This term is distributed with mapping to two potential finding types:
"DATA",811.8,89,100,720,0)
 
"DATA",811.8,89,100,721,0)
1)      Computed Finding: : MILITARY SEXUAL TRAUMA SCREEN with CONDITION
"DATA",811.8,89,100,722,0)
field check for "D". This Computed Finding checks for the MST HISTORY
"DATA",811.8,89,100,723,0)
status of DECLINES.
"DATA",811.8,89,100,724,0)
 
"DATA",811.8,89,100,725,0)
2)      Health Factor: MST DECLINES TO ANSWER
"DATA",811.8,89,100,726,0)
This Health Factor represents declines screening for MST. 
"DATA",811.8,89,100,727,0)
 
"DATA",811.8,89,100,728,0)
Enter any local finding that your facility is using to represent a
"DATA",811.8,89,100,729,0)
declined MST screening value. 
"DATA",811.8,89,100,730,0)
811.5;+30,;100~NATIONAL
"DATA",811.8,89,100,731,0)
811.5;+30,;101~Mental Health and Behavioral Science Strategic Group and Women Veterans Health Program
"DATA",811.8,89,100,732,0)
811.52;+31,+30,;.01~CF.VA-MST STATUS
"DATA",811.8,89,100,733,0)
811.52;+31,+30,;14~I V="D"
"DATA",811.8,89,100,734,0)
811.52;+31,+30,;22~I V="D"
"DATA",811.8,89,100,735,0)
811.52;+32,+30,;.01~HF.MST DECLINES TO ANSWER
"DATA",811.8,89,100,736,0)
811.53;+33,+30,;.01~07/11/2005@14:08:58
"DATA",811.8,89,100,737,0)
811.53;+33,+30,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,738,0)
811.53;+33,+30,;2~WP-start~1
"DATA",811.8,89,100,739,0)
Exchange Stub
"DATA",811.8,89,100,740,0)
]]>
"DATA",811.8,89,100,741,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,742,0)
<IEN_ROOT>
"DATA",811.8,89,100,743,0)
<![CDATA[
"DATA",811.8,89,100,744,0)
31^1
"DATA",811.8,89,100,745,0)
32^2
"DATA",811.8,89,100,746,0)
33^1
"DATA",811.8,89,100,747,0)
]]>
"DATA",811.8,89,100,748,0)
</IEN_ROOT>
"DATA",811.8,89,100,749,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,750,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,751,0)
<FILE_NAME>REMINDER DEFINITION</FILE_NAME>
"DATA",811.8,89,100,752,0)
<FILE_NUMBER>811.9</FILE_NUMBER>
"DATA",811.8,89,100,753,0)
<POINT_01>VA-MST SCREENING</POINT_01>
"DATA",811.8,89,100,754,0)
<INTERNAL_ENTRY_NUMBER>81</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,755,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,756,0)
<![CDATA[
"DATA",811.8,89,100,757,0)
811.9;+81,;.01~VA-MST SCREENING
"DATA",811.8,89,100,758,0)
811.9;+81,;1.2~MST Screening
"DATA",811.8,89,100,759,0)
811.9;+81,;1.8~*
"DATA",811.8,89,100,760,0)
811.9;+81,;2~WP-start~33
"DATA",811.8,89,100,761,0)
All veterans should be screened at least once in their lifetime for
"DATA",811.8,89,100,762,0)
Military Sexual Trauma.
"DATA",811.8,89,100,763,0)
 
"DATA",811.8,89,100,764,0)
Sample Screening Questions.
"DATA",811.8,89,100,765,0)
   1. When you were in the military, did you ever receive uninvited
"DATA",811.8,89,100,766,0)
      and unwanted sexual attention (i.e. touching, cornering, pressure
"DATA",811.8,89,100,767,0)
      for sexual favors, verbal remarks)?
"DATA",811.8,89,100,768,0)
 
"DATA",811.8,89,100,769,0)
   2. When you were in the military, did anyone ever use force or the
"DATA",811.8,89,100,770,0)
      threat of force to have sex with you against your will?
"DATA",811.8,89,100,771,0)
 
"DATA",811.8,89,100,772,0)
Documenting YES, NO, or Declined to Answer responses to Screening
"DATA",811.8,89,100,773,0)
Questions:
"DATA",811.8,89,100,774,0)
 
"DATA",811.8,89,100,775,0)
  A YES response should be documented in progress notes, the MST History
"DATA",811.8,89,100,776,0)
  file, and local findings that represent the MST status (e.g.,health 
"DATA",811.8,89,100,777,0)
  factors). A follow-up consult order for counseling should be considered 
"DATA",811.8,89,100,778,0)
  for the veteran.
"DATA",811.8,89,100,779,0)
 
"DATA",811.8,89,100,780,0)
  A NO or DECLINES TO ANSWER response should be documented in progress
"DATA",811.8,89,100,781,0)
  notes, the MST History file, and local findings that represent the MST 
"DATA",811.8,89,100,782,0)
  status (e.g., health factors).
"DATA",811.8,89,100,783,0)
 
"DATA",811.8,89,100,784,0)
This national clinical reminder will ensure the VIA has the ability to
"DATA",811.8,89,100,785,0)
meet congressional military sexual trauma treatment and reporting
"DATA",811.8,89,100,786,0)
mandates by providing accurate data collection through the sharing of
"DATA",811.8,89,100,787,0)
MST data between facilities and data collection agencies.
"DATA",811.8,89,100,788,0)
 
"DATA",811.8,89,100,789,0)
This national clinical reminder will ensure the appropriate and timely
"DATA",811.8,89,100,790,0)
counseling and treatment of individuals with an incidence of military
"DATA",811.8,89,100,791,0)
sexual trauma.
"DATA",811.8,89,100,792,0)
 
"DATA",811.8,89,100,793,0)
 
"DATA",811.8,89,100,794,0)
811.9;+81,;31~(SEX)&(AGE)&FI(4)
"DATA",811.8,89,100,795,0)
811.9;+81,;32~3
"DATA",811.8,89,100,796,0)
811.9;+81,;33~SEX;AGE;4
"DATA",811.8,89,100,797,0)
811.9;+81,;35~(0)!FI(1)!FI(2)!FI(3)
"DATA",811.8,89,100,798,0)
811.9;+81,;36~3
"DATA",811.8,89,100,799,0)
811.9;+81,;37~1;2;3
"DATA",811.8,89,100,800,0)
811.9;+81,;40~0
"DATA",811.8,89,100,801,0)
811.9;+81,;42~0
"DATA",811.8,89,100,802,0)
811.9;+81,;51~VA-MST SCREENING
"DATA",811.8,89,100,803,0)
811.9;+81,;62~0
"DATA",811.8,89,100,804,0)
811.9;+81,;63~0
"DATA",811.8,89,100,805,0)
811.9;+81,;66~WP-start~12
"DATA",811.8,89,100,806,0)
All veterans should be screened at least once in their lifetime for
"DATA",811.8,89,100,807,0)
Military Sexual Trauma.
"DATA",811.8,89,100,808,0)

"DATA",811.8,89,100,809,0)
Sample Screening Questions:\\
"DATA",811.8,89,100,810,0)
 1. When you were in the military, did you ever receive uninvited\\
"DATA",811.8,89,100,811,0)
    and unwanted sexual attention (i.e. touching, cornering, pressure\\
"DATA",811.8,89,100,812,0)
    for sexual favors, verbal remarks)?\\
"DATA",811.8,89,100,813,0)
 
"DATA",811.8,89,100,814,0)
 2. When you were in the military, did anyone ever use force or the\\
"DATA",811.8,89,100,815,0)
    threat of force to have sex with you against your will?\\
"DATA",811.8,89,100,816,0)
 
"DATA",811.8,89,100,817,0)
Document YES, NO, or DECLINED TO ANSWER responses to Screening.
"DATA",811.8,89,100,818,0)
811.9;+81,;67~0
"DATA",811.8,89,100,819,0)
811.9;+81,;68~12
"DATA",811.8,89,100,820,0)
811.9;+81,;72~0
"DATA",811.8,89,100,821,0)
811.9;+81,;73~0
"DATA",811.8,89,100,822,0)
811.9;+81,;77~0
"DATA",811.8,89,100,823,0)
811.9;+81,;78~0
"DATA",811.8,89,100,824,0)
811.9;+81,;100~NATIONAL
"DATA",811.8,89,100,825,0)
811.9;+81,;101~Mental Health and Behavioral Science Strategic Group and Women Veterans Health Program
"DATA",811.8,89,100,826,0)
811.9;+81,;103~*
"DATA",811.8,89,100,827,0)
811.9001;+82,+81,;.01~07/11/2005@14:08:59
"DATA",811.8,89,100,828,0)
811.9001;+82,+81,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,829,0)
811.9001;+82,+81,;2~WP-start~1
"DATA",811.8,89,100,830,0)
Exchange Stub
"DATA",811.8,89,100,831,0)
811.902;+83,+81,;.01~RT.VA-MST POSITIVE REPORT
"DATA",811.8,89,100,832,0)
811.902;+83,+81,;7~OR
"DATA",811.8,89,100,833,0)
811.902;+83,+81,;24~0
"DATA",811.8,89,100,834,0)
811.902;+83,+81,;25~0
"DATA",811.8,89,100,835,0)
811.902;+84,+81,;.01~RT.VA-MST NEGATIVE REPORT
"DATA",811.8,89,100,836,0)
811.902;+84,+81,;7~OR
"DATA",811.8,89,100,837,0)
811.902;+84,+81,;24~0
"DATA",811.8,89,100,838,0)
811.902;+84,+81,;25~0
"DATA",811.8,89,100,839,0)
811.902;+85,+81,;.01~RT.VA-MST DECLINES REPORT
"DATA",811.8,89,100,840,0)
811.902;+85,+81,;7~OR
"DATA",811.8,89,100,841,0)
811.902;+85,+81,;9~T-1Y
"DATA",811.8,89,100,842,0)
811.902;+85,+81,;24~0
"DATA",811.8,89,100,843,0)
811.902;+85,+81,;25~0
"DATA",811.8,89,100,844,0)
811.902;+86,+81,;.01~CF.VA-VETERAN
"DATA",811.8,89,100,845,0)
811.902;+86,+81,;8~AND
"DATA",811.8,89,100,846,0)
811.902;+86,+81,;24~0
"DATA",811.8,89,100,847,0)
811.902;+86,+81,;25~0
"DATA",811.8,89,100,848,0)
811.97;+87,+81,;.01~99Y
"DATA",811.8,89,100,849,0)
811.97;+87,+81,;5~0
"DATA",811.8,89,100,850,0)
811.97;+87,+81,;6~0
"DATA",811.8,89,100,851,0)
]]>
"DATA",811.8,89,100,852,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,853,0)
<IEN_ROOT>
"DATA",811.8,89,100,854,0)
<![CDATA[
"DATA",811.8,89,100,855,0)
82^1
"DATA",811.8,89,100,856,0)
83^1
"DATA",811.8,89,100,857,0)
84^2
"DATA",811.8,89,100,858,0)
85^3
"DATA",811.8,89,100,859,0)
86^4
"DATA",811.8,89,100,860,0)
87^1
"DATA",811.8,89,100,861,0)
]]>
"DATA",811.8,89,100,862,0)
</IEN_ROOT>
"DATA",811.8,89,100,863,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,864,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,865,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,89,100,866,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,89,100,867,0)
<POINT_01>VA-TEXT MST SERVICES</POINT_01>
"DATA",811.8,89,100,868,0)
<INTERNAL_ENTRY_NUMBER>350</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,869,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,870,0)
<![CDATA[
"DATA",811.8,89,100,871,0)
801.41;+350,;.01~VA-TEXT MST SERVICES
"DATA",811.8,89,100,872,0)
801.41;+350,;4~dialog element
"DATA",811.8,89,100,873,0)
801.41;+350,;23~YES
"DATA",811.8,89,100,874,0)
801.41;+350,;25~WP-start~2
"DATA",811.8,89,100,875,0)
If the patient is interested in receiving more information regarding MST
"DATA",811.8,89,100,876,0)
services, he/she should be referred for appropriate follow-up.
"DATA",811.8,89,100,877,0)
801.41;+350,;51~SUPPRESS
"DATA",811.8,89,100,878,0)
801.41;+350,;100~NATIONAL
"DATA",811.8,89,100,879,0)
801.44;+351,+350,;.01~07/11/2005@14:08:59
"DATA",811.8,89,100,880,0)
801.44;+351,+350,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,881,0)
801.44;+351,+350,;2~WP-start~1
"DATA",811.8,89,100,882,0)
Exchange Stub
"DATA",811.8,89,100,883,0)
]]>
"DATA",811.8,89,100,884,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,885,0)
<IEN_ROOT>
"DATA",811.8,89,100,886,0)
<![CDATA[
"DATA",811.8,89,100,887,0)
351^1
"DATA",811.8,89,100,888,0)
]]>
"DATA",811.8,89,100,889,0)
</IEN_ROOT>
"DATA",811.8,89,100,890,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,891,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,892,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,89,100,893,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,89,100,894,0)
<POINT_01>VA-HF PATIENT REFUSED (MST)</POINT_01>
"DATA",811.8,89,100,895,0)
<INTERNAL_ENTRY_NUMBER>366</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,896,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,897,0)
<![CDATA[
"DATA",811.8,89,100,898,0)
801.41;+366,;.01~VA-HF PATIENT REFUSED (MST)
"DATA",811.8,89,100,899,0)
801.41;+366,;4~dialog element
"DATA",811.8,89,100,900,0)
801.41;+366,;13~PATIENT REFUSED
"DATA",811.8,89,100,901,0)
801.41;+366,;15~HF.MST DECLINES TO ANSWER
"DATA",811.8,89,100,902,0)
801.41;+366,;25~WP-start~1
"DATA",811.8,89,100,903,0)
Patient declined to answer questions regarding MST.
"DATA",811.8,89,100,904,0)
801.41;+366,;100~NATIONAL
"DATA",811.8,89,100,905,0)
801.44;+367,+366,;.01~07/11/2005@14:09
"DATA",811.8,89,100,906,0)
801.44;+367,+366,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,907,0)
801.44;+367,+366,;2~WP-start~1
"DATA",811.8,89,100,908,0)
Exchange Stub
"DATA",811.8,89,100,909,0)
]]>
"DATA",811.8,89,100,910,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,911,0)
<IEN_ROOT>
"DATA",811.8,89,100,912,0)
<![CDATA[
"DATA",811.8,89,100,913,0)
367^1
"DATA",811.8,89,100,914,0)
]]>
"DATA",811.8,89,100,915,0)
</IEN_ROOT>
"DATA",811.8,89,100,916,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,917,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,918,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,89,100,919,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,89,100,920,0)
<POINT_01>VA-HF MST YES</POINT_01>
"DATA",811.8,89,100,921,0)
<INTERNAL_ENTRY_NUMBER>365</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,922,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,923,0)
<![CDATA[
"DATA",811.8,89,100,924,0)
801.41;+365,;.01~VA-HF MST YES
"DATA",811.8,89,100,925,0)
801.41;+365,;4~dialog element
"DATA",811.8,89,100,926,0)
801.41;+365,;13~DONE AT ENCOUNTER
"DATA",811.8,89,100,927,0)
801.41;+365,;15~HF.MST YES REPORTS
"DATA",811.8,89,100,928,0)
801.41;+365,;25~WP-start~2
"DATA",811.8,89,100,929,0)
YES - reports MST in the past
"DATA",811.8,89,100,930,0)
      (answered 'YES' to one or both questions)
"DATA",811.8,89,100,931,0)
801.41;+365,;35~WP-start~1
"DATA",811.8,89,100,932,0)
Patient reports experiencing MST in the past.
"DATA",811.8,89,100,933,0)
801.41;+365,;100~NATIONAL
"DATA",811.8,89,100,934,0)
801.44;+366,+365,;.01~07/11/2005@14:09
"DATA",811.8,89,100,935,0)
801.44;+366,+365,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,936,0)
801.44;+366,+365,;2~WP-start~1
"DATA",811.8,89,100,937,0)
Exchange Stub
"DATA",811.8,89,100,938,0)
]]>
"DATA",811.8,89,100,939,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,940,0)
<IEN_ROOT>
"DATA",811.8,89,100,941,0)
<![CDATA[
"DATA",811.8,89,100,942,0)
366^1
"DATA",811.8,89,100,943,0)
]]>
"DATA",811.8,89,100,944,0)
</IEN_ROOT>
"DATA",811.8,89,100,945,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,946,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,947,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,89,100,948,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,89,100,949,0)
<POINT_01>VA-HF MST NO</POINT_01>
"DATA",811.8,89,100,950,0)
<INTERNAL_ENTRY_NUMBER>364</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,951,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,952,0)
<![CDATA[
"DATA",811.8,89,100,953,0)
801.41;+364,;.01~VA-HF MST NO
"DATA",811.8,89,100,954,0)
801.41;+364,;4~dialog element
"DATA",811.8,89,100,955,0)
801.41;+364,;13~DONE AT ENCOUNTER
"DATA",811.8,89,100,956,0)
801.41;+364,;15~HF.MST NO DOES NOT REPORT
"DATA",811.8,89,100,957,0)
801.41;+364,;25~WP-start~2
"DATA",811.8,89,100,958,0)
NO - denies prior MST
"DATA",811.8,89,100,959,0)
     (answered 'NO' to both questions)
"DATA",811.8,89,100,960,0)
801.41;+364,;35~WP-start~1
"DATA",811.8,89,100,961,0)
Patient denies experiencing MST in the past.
"DATA",811.8,89,100,962,0)
801.41;+364,;100~NATIONAL
"DATA",811.8,89,100,963,0)
801.44;+365,+364,;.01~07/11/2005@14:09
"DATA",811.8,89,100,964,0)
801.44;+365,+364,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,965,0)
801.44;+365,+364,;2~WP-start~1
"DATA",811.8,89,100,966,0)
Exchange Stub
"DATA",811.8,89,100,967,0)
]]>
"DATA",811.8,89,100,968,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,969,0)
<IEN_ROOT>
"DATA",811.8,89,100,970,0)
<![CDATA[
"DATA",811.8,89,100,971,0)
365^1
"DATA",811.8,89,100,972,0)
]]>
"DATA",811.8,89,100,973,0)
</IEN_ROOT>
"DATA",811.8,89,100,974,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,975,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,976,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,89,100,977,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,89,100,978,0)
<POINT_01>VA-TEXT MST STATUS QUESTIONS</POINT_01>
"DATA",811.8,89,100,979,0)
<INTERNAL_ENTRY_NUMBER>363</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,980,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,981,0)
<![CDATA[
"DATA",811.8,89,100,982,0)
801.41;+363,;.01~VA-TEXT MST STATUS QUESTIONS
"DATA",811.8,89,100,983,0)
801.41;+363,;4~dialog group
"DATA",811.8,89,100,984,0)
801.41;+363,;7~2
"DATA",811.8,89,100,985,0)
801.41;+363,;9~ONE SELECTION ONLY
"DATA",811.8,89,100,986,0)
801.41;+363,;23~YES
"DATA",811.8,89,100,987,0)
801.41;+363,;25~WP-start~9
"DATA",811.8,89,100,988,0)
1.  When you were in the military, did you ever receive uninvited or
"DATA",811.8,89,100,989,0)
unwanted sexual attention (i.e, touching, cornering, pressure for sexual
"DATA",811.8,89,100,990,0)
favors or inappropriate verbal remarks, etc...)?
"DATA",811.8,89,100,991,0)
 
"DATA",811.8,89,100,992,0)
2.  When you were in the military, did anyone ever use force or the threat
"DATA",811.8,89,100,993,0)
of force to have sex against your will?
"DATA",811.8,89,100,994,0)
 
"DATA",811.8,89,100,995,0)
Please check off the appropriate box below based on the patient's
"DATA",811.8,89,100,996,0)
responses to the above questions:
"DATA",811.8,89,100,997,0)
801.41;+363,;50~SHOW
"DATA",811.8,89,100,998,0)
801.41;+363,;51~SUPPRESS
"DATA",811.8,89,100,999,0)
801.41;+363,;52~INDENT
"DATA",811.8,89,100,1000,0)
801.41;+363,;100~NATIONAL
"DATA",811.8,89,100,1001,0)
801.412;+364,+363,;.01~1
"DATA",811.8,89,100,1002,0)
801.412;+364,+363,;2~VA-HF MST NO
"DATA",811.8,89,100,1003,0)
801.412;+365,+363,;.01~2
"DATA",811.8,89,100,1004,0)
801.412;+365,+363,;2~VA-HF MST YES
"DATA",811.8,89,100,1005,0)
801.412;+366,+363,;.01~3
"DATA",811.8,89,100,1006,0)
801.412;+366,+363,;2~VA-HF PATIENT REFUSED (MST)
"DATA",811.8,89,100,1007,0)
801.44;+367,+363,;.01~07/11/2005@14:09
"DATA",811.8,89,100,1008,0)
801.44;+367,+363,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,1009,0)
801.44;+367,+363,;2~WP-start~1
"DATA",811.8,89,100,1010,0)
Exchange Stub
"DATA",811.8,89,100,1011,0)
]]>
"DATA",811.8,89,100,1012,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,1013,0)
<IEN_ROOT>
"DATA",811.8,89,100,1014,0)
<![CDATA[
"DATA",811.8,89,100,1015,0)
364^1
"DATA",811.8,89,100,1016,0)
365^2
"DATA",811.8,89,100,1017,0)
366^3
"DATA",811.8,89,100,1018,0)
367^1
"DATA",811.8,89,100,1019,0)
]]>
"DATA",811.8,89,100,1020,0)
</IEN_ROOT>
"DATA",811.8,89,100,1021,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,1022,0)
<FILEMAN_FILE>
"DATA",811.8,89,100,1023,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,89,100,1024,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,89,100,1025,0)
<POINT_01>VA-MST SCREENING</POINT_01>
"DATA",811.8,89,100,1026,0)
<INTERNAL_ENTRY_NUMBER>367</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,89,100,1027,0)
<FILEMAN_FDA>
"DATA",811.8,89,100,1028,0)
<![CDATA[
"DATA",811.8,89,100,1029,0)
801.41;+367,;.01~VA-MST SCREENING
"DATA",811.8,89,100,1030,0)
801.41;+367,;4~reminder dialog
"DATA",811.8,89,100,1031,0)
801.41;+367,;100~NATIONAL
"DATA",811.8,89,100,1032,0)
801.412;+368,+367,;.01~10
"DATA",811.8,89,100,1033,0)
801.412;+368,+367,;2~VA-TEXT MST STATUS QUESTIONS
"DATA",811.8,89,100,1034,0)
801.412;+369,+367,;.01~30
"DATA",811.8,89,100,1035,0)
801.412;+369,+367,;2~VA-TEXT MST SERVICES
"DATA",811.8,89,100,1036,0)
801.44;+370,+367,;.01~07/11/2005@14:09:01
"DATA",811.8,89,100,1037,0)
801.44;+370,+367,;1~REDINGTON,PATRICK
"DATA",811.8,89,100,1038,0)
801.44;+370,+367,;2~WP-start~1
"DATA",811.8,89,100,1039,0)
Exchange Stub
"DATA",811.8,89,100,1040,0)
]]>
"DATA",811.8,89,100,1041,0)
</FILEMAN_FDA>
"DATA",811.8,89,100,1042,0)
<IEN_ROOT>
"DATA",811.8,89,100,1043,0)
<![CDATA[
"DATA",811.8,89,100,1044,0)
368^1
"DATA",811.8,89,100,1045,0)
369^2
"DATA",811.8,89,100,1046,0)
370^1
"DATA",811.8,89,100,1047,0)
]]>
"DATA",811.8,89,100,1048,0)
</IEN_ROOT>
"DATA",811.8,89,100,1049,0)
</FILEMAN_FILE>
"DATA",811.8,89,100,1050,0)
<INDEX>
"DATA",811.8,89,100,1051,0)
<NUMBER_OF_COMPONENTS>21</NUMBER_OF_COMPONENTS>
"DATA",811.8,89,100,1052,0)
<COMPONENT>
"DATA",811.8,89,100,1053,0)
<M_ROUTINE_START>49</M_ROUTINE_START>
"DATA",811.8,89,100,1054,0)
<ROUTINE_CODE_END>304</ROUTINE_CODE_END>
"DATA",811.8,89,100,1055,0)
<ROUTINE_CODE_START>53</ROUTINE_CODE_START>
"DATA",811.8,89,100,1056,0)
</COMPONENT>
"DATA",811.8,89,100,1057,0)
<COMPONENT>
"DATA",811.8,89,100,1058,0)
<M_ROUTINE_START>308</M_ROUTINE_START>
"DATA",811.8,89,100,1059,0)
<ROUTINE_CODE_END>426</ROUTINE_CODE_END>
"DATA",811.8,89,100,1060,0)
<ROUTINE_CODE_START>312</ROUTINE_CODE_START>
"DATA",811.8,89,100,1061,0)
</COMPONENT>
"DATA",811.8,89,100,1062,0)
<COMPONENT>
"DATA",811.8,89,100,1063,0)
<FDA_END>448</FDA_END>
"DATA",811.8,89,100,1064,0)
<FDA_START>437</FDA_START>
"DATA",811.8,89,100,1065,0)
<FILE_START>430</FILE_START>
"DATA",811.8,89,100,1066,0)
<IEN_ROOT_END>454</IEN_ROOT_END>
"DATA",811.8,89,100,1067,0)
<IEN_ROOT_START>453</IEN_ROOT_START>
"DATA",811.8,89,100,1068,0)
</COMPONENT>
"DATA",811.8,89,100,1069,0)
<COMPONENT>
"DATA",811.8,89,100,1070,0)
<FDA_END>473</FDA_END>
"DATA",811.8,89,100,1071,0)
<FDA_START>465</FDA_START>
"DATA",811.8,89,100,1072,0)
<FILE_START>458</FILE_START>
"DATA",811.8,89,100,1073,0)
<IEN_ROOT_END>479</IEN_ROOT_END>
"DATA",811.8,89,100,1074,0)
<IEN_ROOT_START>478</IEN_ROOT_START>
"DATA",811.8,89,100,1075,0)
</COMPONENT>
"DATA",811.8,89,100,1076,0)
<COMPONENT>
"DATA",811.8,89,100,1077,0)
<FDA_END>497</FDA_END>
"DATA",811.8,89,100,1078,0)
<FDA_START>490</FDA_START>
"DATA",811.8,89,100,1079,0)
<FILE_START>483</FILE_START>
"DATA",811.8,89,100,1080,0)
<IEN_ROOT_END>504</IEN_ROOT_END>
"DATA",811.8,89,100,1081,0)
<IEN_ROOT_START>502</IEN_ROOT_START>
"DATA",811.8,89,100,1082,0)
</COMPONENT>
"DATA",811.8,89,100,1083,0)
<COMPONENT>
"DATA",811.8,89,100,1084,0)
<FDA_END>516</FDA_END>
"DATA",811.8,89,100,1085,0)
<FDA_START>515</FDA_START>
"DATA",811.8,89,100,1086,0)
<FILE_START>508</FILE_START>
"DATA",811.8,89,100,1087,0)
</COMPONENT>
"DATA",811.8,89,100,1088,0)
<COMPONENT>
"DATA",811.8,89,100,1089,0)
<FDA_END>529</FDA_END>
"DATA",811.8,89,100,1090,0)
<FDA_START>527</FDA_START>
"DATA",811.8,89,100,1091,0)
<FILE_START>520</FILE_START>
"DATA",811.8,89,100,1092,0)
</COMPONENT>
"DATA",811.8,89,100,1093,0)
<COMPONENT>
"DATA",811.8,89,100,1094,0)
<FDA_END>542</FDA_END>
"DATA",811.8,89,100,1095,0)
<FDA_START>540</FDA_START>
"DATA",811.8,89,100,1096,0)
<FILE_START>533</FILE_START>
"DATA",811.8,89,100,1097,0)
</COMPONENT>
"DATA",811.8,89,100,1098,0)
<COMPONENT>
"DATA",811.8,89,100,1099,0)
<FDA_END>555</FDA_END>
"DATA",811.8,89,100,1100,0)
<FDA_START>553</FDA_START>
"DATA",811.8,89,100,1101,0)
<FILE_START>546</FILE_START>
"DATA",811.8,89,100,1102,0)
</COMPONENT>
"DATA",811.8,89,100,1103,0)
<COMPONENT>
"DATA",811.8,89,100,1104,0)
<FDA_END>578</FDA_END>
"DATA",811.8,89,100,1105,0)
<FDA_START>566</FDA_START>
"DATA",811.8,89,100,1106,0)
<FILE_START>559</FILE_START>
"DATA",811.8,89,100,1107,0)
<IEN_ROOT_END>583</IEN_ROOT_END>
"DATA",811.8,89,100,1108,0)
<IEN_ROOT_START>583</IEN_ROOT_START>
"DATA",811.8,89,100,1109,0)
</COMPONENT>
"DATA",811.8,89,100,1110,0)
<COMPONENT>
"DATA",811.8,89,100,1111,0)
<FDA_END>607</FDA_END>
"DATA",811.8,89,100,1112,0)
<FDA_START>594</FDA_START>
"DATA",811.8,89,100,1113,0)
<FILE_START>587</FILE_START>
"DATA",811.8,89,100,1114,0)
<IEN_ROOT_END>612</IEN_ROOT_END>
"DATA",811.8,89,100,1115,0)
<IEN_ROOT_START>612</IEN_ROOT_START>
"DATA",811.8,89,100,1116,0)
</COMPONENT>
"DATA",811.8,89,100,1117,0)
<COMPONENT>
"DATA",811.8,89,100,1118,0)
<FDA_END>650</FDA_END>
"DATA",811.8,89,100,1119,0)
<FDA_START>623</FDA_START>
"DATA",811.8,89,100,1120,0)
<FILE_START>616</FILE_START>
"DATA",811.8,89,100,1121,0)
<IEN_ROOT_END>657</IEN_ROOT_END>
"DATA",811.8,89,100,1122,0)
<IEN_ROOT_START>655</IEN_ROOT_START>
"DATA",811.8,89,100,1123,0)
</COMPONENT>
"DATA",811.8,89,100,1124,0)
<COMPONENT>
"DATA",811.8,89,100,1125,0)
<FDA_END>695</FDA_END>
"DATA",811.8,89,100,1126,0)
<FDA_START>668</FDA_START>
"DATA",811.8,89,100,1127,0)
<FILE_START>661</FILE_START>
"DATA",811.8,89,100,1128,0)
<IEN_ROOT_END>702</IEN_ROOT_END>
"DATA",811.8,89,100,1129,0)
<IEN_ROOT_START>700</IEN_ROOT_START>
"DATA",811.8,89,100,1130,0)
</COMPONENT>
"DATA",811.8,89,100,1131,0)
<COMPONENT>
"DATA",811.8,89,100,1132,0)
<FDA_END>739</FDA_END>
"DATA",811.8,89,100,1133,0)
<FDA_START>713</FDA_START>
"DATA",811.8,89,100,1134,0)
<FILE_START>706</FILE_START>
"DATA",811.8,89,100,1135,0)
<IEN_ROOT_END>746</IEN_ROOT_END>
"DATA",811.8,89,100,1136,0)
<IEN_ROOT_START>744</IEN_ROOT_START>
"DATA",811.8,89,100,1137,0)
</COMPONENT>
"DATA",811.8,89,100,1138,0)
<COMPONENT>
"DATA",811.8,89,100,1139,0)
<FDA_END>850</FDA_END>
"DATA",811.8,89,100,1140,0)
<FDA_START>757</FDA_START>
"DATA",811.8,89,100,1141,0)
<FILE_START>750</FILE_START>
"DATA",811.8,89,100,1142,0)
<IEN_ROOT_END>860</IEN_ROOT_END>
"DATA",811.8,89,100,1143,0)
<IEN_ROOT_START>855</IEN_ROOT_START>
"DATA",811.8,89,100,1144,0)
</COMPONENT>
"DATA",811.8,89,100,1145,0)
<COMPONENT>
"DATA",811.8,89,100,1146,0)
<FDA_END>882</FDA_END>
"DATA",811.8,89,100,1147,0)
<FDA_START>871</FDA_START>
"DATA",811.8,89,100,1148,0)
<FILE_START>864</FILE_START>
"DATA",811.8,89,100,1149,0)
<IEN_ROOT_END>887</IEN_ROOT_END>
"DATA",811.8,89,100,1150,0)
<IEN_ROOT_START>887</IEN_ROOT_START>
"DATA",811.8,89,100,1151,0)
</COMPONENT>
"DATA",811.8,89,100,1152,0)
<COMPONENT>
"DATA",811.8,89,100,1153,0)
<FDA_END>908</FDA_END>
"DATA",811.8,89,100,1154,0)
<FDA_START>898</FDA_START>
"DATA",811.8,89,100,1155,0)
<FILE_START>891</FILE_START>
"DATA",811.8,89,100,1156,0)
<IEN_ROOT_END>913</IEN_ROOT_END>
"DATA",811.8,89,100,1157,0)
<IEN_ROOT_START>913</IEN_ROOT_START>
"DATA",811.8,89,100,1158,0)
</COMPONENT>
"DATA",811.8,89,100,1159,0)
<COMPONENT>
"DATA",811.8,89,100,1160,0)
<FDA_END>937</FDA_END>
"DATA",811.8,89,100,1161,0)
<FDA_START>924</FDA_START>
"DATA",811.8,89,100,1162,0)
<FILE_START>917</FILE_START>
"DATA",811.8,89,100,1163,0)
<IEN_ROOT_END>942</IEN_ROOT_END>
"DATA",811.8,89,100,1164,0)
<IEN_ROOT_START>942</IEN_ROOT_START>
"DATA",811.8,89,100,1165,0)
</COMPONENT>
"DATA",811.8,89,100,1166,0)
<COMPONENT>
"DATA",811.8,89,100,1167,0)
<FDA_END>966</FDA_END>
"DATA",811.8,89,100,1168,0)
<FDA_START>953</FDA_START>
"DATA",811.8,89,100,1169,0)
<FILE_START>946</FILE_START>
"DATA",811.8,89,100,1170,0)
<IEN_ROOT_END>971</IEN_ROOT_END>
"DATA",811.8,89,100,1171,0)
<IEN_ROOT_START>971</IEN_ROOT_START>
"DATA",811.8,89,100,1172,0)
</COMPONENT>
"DATA",811.8,89,100,1173,0)
<COMPONENT>
"DATA",811.8,89,100,1174,0)
<FDA_END>1010</FDA_END>
"DATA",811.8,89,100,1175,0)
<FDA_START>982</FDA_START>
"DATA",811.8,89,100,1176,0)
<FILE_START>975</FILE_START>
"DATA",811.8,89,100,1177,0)
<IEN_ROOT_END>1018</IEN_ROOT_END>
"DATA",811.8,89,100,1178,0)
<IEN_ROOT_START>1015</IEN_ROOT_START>
"DATA",811.8,89,100,1179,0)
</COMPONENT>
"DATA",811.8,89,100,1180,0)
<COMPONENT>
"DATA",811.8,89,100,1181,0)
<FDA_END>1039</FDA_END>
"DATA",811.8,89,100,1182,0)
<FDA_START>1029</FDA_START>
"DATA",811.8,89,100,1183,0)
<FILE_START>1022</FILE_START>
"DATA",811.8,89,100,1184,0)
<IEN_ROOT_END>1046</IEN_ROOT_END>
"DATA",811.8,89,100,1185,0)
<IEN_ROOT_START>1044</IEN_ROOT_START>
"DATA",811.8,89,100,1186,0)
</COMPONENT>
"DATA",811.8,89,100,1187,0)
</INDEX>
"DATA",811.8,89,100,1188,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,89,110,0)
^811.804^44^44
"DATA",811.8,89,110,1,0)
Reminder:    VA-MST SCREENING
"DATA",811.8,89,110,2,0)
Source:      REDINGTON,PATRICK at SALT LAKE CITY OIFO
"DATA",811.8,89,110,3,0)
Date Packed: 07/11/2005@14:08:48
"DATA",811.8,89,110,4,0)
Package Version: 2.0
"DATA",811.8,89,110,5,0)

"DATA",811.8,89,110,6,0)
Description:
"DATA",811.8,89,110,7,0)
All veterans should be screened at least once in their lifetime for
"DATA",811.8,89,110,8,0)
Military Sexual Trauma.
"DATA",811.8,89,110,9,0)
 
"DATA",811.8,89,110,10,0)
Sample Screening Questions.
"DATA",811.8,89,110,11,0)
   1. When you were in the military, did you ever receive uninvited
"DATA",811.8,89,110,12,0)
      and unwanted sexual attention (i.e. touching, cornering, pressure
"DATA",811.8,89,110,13,0)
      for sexual favors, verbal remarks)?
"DATA",811.8,89,110,14,0)
 
"DATA",811.8,89,110,15,0)
   2. When you were in the military, did anyone ever use force or the
"DATA",811.8,89,110,16,0)
      threat of force to have sex with you against your will?
"DATA",811.8,89,110,17,0)
 
"DATA",811.8,89,110,18,0)
Documenting YES, NO, or Declined to Answer responses to Screening
"DATA",811.8,89,110,19,0)
Questions:
"DATA",811.8,89,110,20,0)
 
"DATA",811.8,89,110,21,0)
  A YES response should be documented in progress notes, the MST History
"DATA",811.8,89,110,22,0)
  file, and local findings that represent the MST status (e.g.,health 
"DATA",811.8,89,110,23,0)
  factors). A follow-up consult order for counseling should be considered 
"DATA",811.8,89,110,24,0)
  for the veteran.
"DATA",811.8,89,110,25,0)
 
"DATA",811.8,89,110,26,0)
  A NO or DECLINES TO ANSWER response should be documented in progress
"DATA",811.8,89,110,27,0)
  notes, the MST History file, and local findings that represent the MST 
"DATA",811.8,89,110,28,0)
  status (e.g., health factors).
"DATA",811.8,89,110,29,0)
 
"DATA",811.8,89,110,30,0)
This national clinical reminder will ensure the VIA has the ability to
"DATA",811.8,89,110,31,0)
meet congressional military sexual trauma treatment and reporting
"DATA",811.8,89,110,32,0)
mandates by providing accurate data collection through the sharing of
"DATA",811.8,89,110,33,0)
MST data between facilities and data collection agencies.
"DATA",811.8,89,110,34,0)
 
"DATA",811.8,89,110,35,0)
This national clinical reminder will ensure the appropriate and timely
"DATA",811.8,89,110,36,0)
counseling and treatment of individuals with an incidence of military
"DATA",811.8,89,110,37,0)
sexual trauma.
"DATA",811.8,89,110,38,0)
 
"DATA",811.8,89,110,39,0)
 
"DATA",811.8,89,110,40,0)

"DATA",811.8,89,110,41,0)
Keywords:
"DATA",811.8,89,110,42,0)
No keywords given
"DATA",811.8,89,110,43,0)

"DATA",811.8,89,110,44,0)
Components:
"DATA",811.8,89,115)
REMINDER
"DATA",811.8,89,119)
7
"DATA",811.8,89,120,0)
^811.802A^21^21
"DATA",811.8,89,120,1,0)
ROUTINE^0^2
"DATA",811.8,89,120,1,1,0)
^811.8021A^2^2
"DATA",811.8,89,120,1,1,1,0)
PXRMMST^53^304
"DATA",811.8,89,120,1,1,2,0)
PXRMPDEM^312^426
"DATA",811.8,89,120,2,0)
REMINDER SPONSOR^811.6^3
"DATA",811.8,89,120,2,1,0)
^811.8021A^3^3
"DATA",811.8,89,120,2,1,1,0)
Mental Health and Behavioral Science Strategic Group^437^448^453^454
"DATA",811.8,89,120,2,1,2,0)
Women Veterans Health Program^465^473^478^479
"DATA",811.8,89,120,2,1,3,0)
Mental Health and Behavioral Science Strategic Group and Women Veterans Health Program^490^497^502^504
"DATA",811.8,89,120,3,0)
HEALTH FACTORS^9999999.64^4
"DATA",811.8,89,120,3,1,0)
^811.8021A^4^4
"DATA",811.8,89,120,3,1,1,0)
MST CATEGORY^515^516^^
"DATA",811.8,89,120,3,1,2,0)
MST DECLINES TO ANSWER^527^529^^
"DATA",811.8,89,120,3,1,3,0)
MST NO DOES NOT REPORT^540^542^^
"DATA",811.8,89,120,3,1,4,0)
MST YES REPORTS^553^555^^
"DATA",811.8,89,120,4,0)
REMINDER COMPUTED FINDINGS^811.4^2
"DATA",811.8,89,120,4,1,0)
^811.8021A^2^2
"DATA",811.8,89,120,4,1,1,0)
VA-MST STATUS^566^578^583^583
"DATA",811.8,89,120,4,1,2,0)
VA-VETERAN^594^607^612^612
"DATA",811.8,89,120,5,0)
REMINDER TERM^811.5^3
"DATA",811.8,89,120,5,1,0)
^811.8021A^3^3
"DATA",811.8,89,120,5,1,1,0)
VA-MST POSITIVE REPORT^623^650^655^657
"DATA",811.8,89,120,5,1,2,0)
VA-MST NEGATIVE REPORT^668^695^700^702
"DATA",811.8,89,120,5,1,3,0)
VA-MST DECLINES REPORT^713^739^744^746
"DATA",811.8,89,120,6,0)
REMINDER DEFINITION^811.9^1
"DATA",811.8,89,120,6,1,0)
^811.8021A^1^1
"DATA",811.8,89,120,6,1,1,0)
VA-MST SCREENING^757^850^855^860
"DATA",811.8,89,120,7,0)
REMINDER DIALOG^801.41^6
"DATA",811.8,89,120,7,1,0)
^811.8021A^6^6
"DATA",811.8,89,120,7,1,1,0)
VA-TEXT MST SERVICES^871^882^887^887
"DATA",811.8,89,120,7,1,2,0)
VA-HF PATIENT REFUSED (MST)^898^908^913^913
"DATA",811.8,89,120,7,1,3,0)
VA-HF MST YES^924^937^942^942
"DATA",811.8,89,120,7,1,4,0)
VA-HF MST NO^953^966^971^971
"DATA",811.8,89,120,7,1,5,0)
VA-TEXT MST STATUS QUESTIONS^982^1010^1015^1018
"DATA",811.8,89,120,7,1,6,0)
VA-MST SCREENING^1029^1039^1044^1046
"DATA",811.8,90,0)
VA-GEC REFERRAL CARE RECOMMENDATION^REDINGTON,PATRICK at SALT LAKE CITY OIFO^3050711.141335
"DATA",811.8,90,100,0)
^811.801^2805^2805
"DATA",811.8,90,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,90,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,90,100,3,0)
<PACKAGE_VERSION>2.0</PACKAGE_VERSION>
"DATA",811.8,90,100,4,0)
<INDEX_AT>2294</INDEX_AT>
"DATA",811.8,90,100,5,0)
<SOURCE>
"DATA",811.8,90,100,6,0)
<NAME>VA-GEC REFERRAL CARE RECOMMENDATION</NAME>
"DATA",811.8,90,100,7,0)
<USER>REDINGTON,PATRICK</USER>
"DATA",811.8,90,100,8,0)
<SITE>SALT LAKE CITY OIFO</SITE>
"DATA",811.8,90,100,9,0)
<DATE_PACKED>07/11/2005@14:13:35</DATE_PACKED>
"DATA",811.8,90,100,10,0)
</SOURCE>
"DATA",811.8,90,100,11,0)
<EXCHANGE_TYPE>REMINDER</EXCHANGE_TYPE>
"DATA",811.8,90,100,12,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,90,100,13,0)
The Office of Geriatric Extended Care (OGEC) approved the paper-based
"DATA",811.8,90,100,14,0)
GEC Referral as the preferred method for assessing and screening patients
"DATA",811.8,90,100,15,0)
for long-term and extended care services.  As part of the Long Term Care
"DATA",811.8,90,100,16,0)
Initiative and the Veterans Millennium Health Care and Benefits Act,
"DATA",811.8,90,100,17,0)
Public Law 106-177, OGEC identified this tool as the means to standardize
"DATA",811.8,90,100,18,0)
long-term care assessments and to prepare for the national collection of
"DATA",811.8,90,100,19,0)
data regarding long-term care needs in the veteran population.
"DATA",811.8,90,100,20,0)
 
"DATA",811.8,90,100,21,0)
Current VHA methods of assessing patients to determine the level of care
"DATA",811.8,90,100,22,0)
required of extended care service are inconsistent.  Some facilities use
"DATA",811.8,90,100,23,0)
the VA Form 10-7108, VA Form 10064a (Patient Assessment Instrument) or VA
"DATA",811.8,90,100,24,0)
Form 1204 (Referral for Community Nursing Home Care), while other sites
"DATA",811.8,90,100,25,0)
use various other assessments or consults.  OGEC seeks to standardize the
"DATA",811.8,90,100,26,0)
process of assessment as well as the data set in order to establish a
"DATA",811.8,90,100,27,0)
basis upon which program evaluation and quality performance can be
"DATA",811.8,90,100,28,0)
managed.
"DATA",811.8,90,100,29,0)
 
"DATA",811.8,90,100,30,0)
Four clinical reminder dialogs collect data regarding the need for
"DATA",811.8,90,100,31,0)
long-term care services in a standard format across VHA.  This provides
"DATA",811.8,90,100,32,0)
a mechanism for clinicians to administer comprehensive long-term care
"DATA",811.8,90,100,33,0)
assessments, stores the information within the patient medical record and
"DATA",811.8,90,100,34,0)
allows clinicians to notify local OGEC staff.  The screening data is
"DATA",811.8,90,100,35,0)
collected as health factors and is stored in the V Health Factor file.  
"DATA",811.8,90,100,36,0)
There is no cohort or resolution logic associated. The four reminder
"DATA",811.8,90,100,37,0)
dialogs are GEC Referral Social Services, GEC Referral Nursing Assessment,
"DATA",811.8,90,100,38,0)
GEC Referral Care Recommendations, and GEC Referral Care Coordination. An
"DATA",811.8,90,100,39,0)
M-based option routine accompanies these reminders that extracts the data
"DATA",811.8,90,100,40,0)
and makes it available for ad hoc reporting.
"DATA",811.8,90,100,41,0)
]]></DESCRIPTION>
"DATA",811.8,90,100,42,0)
<KEYWORDS>
"DATA",811.8,90,100,43,0)
</KEYWORDS>
"DATA",811.8,90,100,44,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,45,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,90,100,46,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,90,100,47,0)
<POINT_01>Office of Geriatric Extended Care</POINT_01>
"DATA",811.8,90,100,48,0)
<INTERNAL_ENTRY_NUMBER>663006</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,49,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,50,0)
<![CDATA[
"DATA",811.8,90,100,51,0)
811.6;+663006,;.01~Office of Geriatric Extended Care
"DATA",811.8,90,100,52,0)
811.6;+663006,;100~NATIONAL
"DATA",811.8,90,100,53,0)
811.63;+663007,+663006,;.01~07/11/2005@14:13:47
"DATA",811.8,90,100,54,0)
811.63;+663007,+663006,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,55,0)
811.63;+663007,+663006,;2~WP-start~1
"DATA",811.8,90,100,56,0)
Exchange Stub
"DATA",811.8,90,100,57,0)
]]>
"DATA",811.8,90,100,58,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,59,0)
<IEN_ROOT>
"DATA",811.8,90,100,60,0)
<![CDATA[
"DATA",811.8,90,100,61,0)
663007^1
"DATA",811.8,90,100,62,0)
]]>
"DATA",811.8,90,100,63,0)
</IEN_ROOT>
"DATA",811.8,90,100,64,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,65,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,66,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,67,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,68,0)
<POINT_01>GEC REFERRAL COMMENTS</POINT_01>
"DATA",811.8,90,100,69,0)
<INTERNAL_ENTRY_NUMBER>337</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,70,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,71,0)
<![CDATA[
"DATA",811.8,90,100,72,0)
9999999.64;+337,;.01~GEC REFERRAL COMMENTS
"DATA",811.8,90,100,73,0)
9999999.64;+337,;.09~GEC3C CARE RECOMMENDATIONS
"DATA",811.8,90,100,74,0)
9999999.64;+337,;.1~CATEGORY
"DATA",811.8,90,100,75,0)
]]>
"DATA",811.8,90,100,76,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,77,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,78,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,79,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,80,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,81,0)
<POINT_01>GEC REFERRAL EST. DURATION OF SERVICES</POINT_01>
"DATA",811.8,90,100,82,0)
<INTERNAL_ENTRY_NUMBER>342</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,83,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,84,0)
<![CDATA[
"DATA",811.8,90,100,85,0)
9999999.64;+342,;.01~GEC REFERRAL EST. DURATION OF SERVICES
"DATA",811.8,90,100,86,0)
9999999.64;+342,;.09~GEC3C CARE RECOMMENDATIONS
"DATA",811.8,90,100,87,0)
9999999.64;+342,;.1~CATEGORY
"DATA",811.8,90,100,88,0)
]]>
"DATA",811.8,90,100,89,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,90,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,91,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,92,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,93,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,94,0)
<POINT_01>GEC REFERRAL GOALS OF CARE</POINT_01>
"DATA",811.8,90,100,95,0)
<INTERNAL_ENTRY_NUMBER>344</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,96,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,97,0)
<![CDATA[
"DATA",811.8,90,100,98,0)
9999999.64;+344,;.01~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,99,0)
9999999.64;+344,;.09~GEC3C CARE RECOMMENDATIONS
"DATA",811.8,90,100,100,0)
9999999.64;+344,;.1~CATEGORY
"DATA",811.8,90,100,101,0)
]]>
"DATA",811.8,90,100,102,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,103,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,104,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,105,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,106,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,107,0)
<POINT_01>GEC REFERRAL REFERRING TO</POINT_01>
"DATA",811.8,90,100,108,0)
<INTERNAL_ENTRY_NUMBER>358</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,109,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,110,0)
<![CDATA[
"DATA",811.8,90,100,111,0)
9999999.64;+358,;.01~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,112,0)
9999999.64;+358,;.09~GEC3C CARE RECOMMENDATIONS
"DATA",811.8,90,100,113,0)
9999999.64;+358,;.1~CATEGORY
"DATA",811.8,90,100,114,0)
]]>
"DATA",811.8,90,100,115,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,116,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,117,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,118,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,119,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,120,0)
<POINT_01>GEC 2-3 MONTHS</POINT_01>
"DATA",811.8,90,100,121,0)
<INTERNAL_ENTRY_NUMBER>87</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,122,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,123,0)
<![CDATA[
"DATA",811.8,90,100,124,0)
9999999.64;+87,;.01~GEC 2-3 MONTHS
"DATA",811.8,90,100,125,0)
9999999.64;+87,;.03~GEC REFERRAL EST. DURATION OF SERVICES
"DATA",811.8,90,100,126,0)
9999999.64;+87,;.08~YES
"DATA",811.8,90,100,127,0)
9999999.64;+87,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,128,0)
9999999.64;+87,;.1~FACTOR
"DATA",811.8,90,100,129,0)
]]>
"DATA",811.8,90,100,130,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,131,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,132,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,133,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,134,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,135,0)
<POINT_01>GEC 2-3 WEEKS</POINT_01>
"DATA",811.8,90,100,136,0)
<INTERNAL_ENTRY_NUMBER>88</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,137,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,138,0)
<![CDATA[
"DATA",811.8,90,100,139,0)
9999999.64;+88,;.01~GEC 2-3 WEEKS
"DATA",811.8,90,100,140,0)
9999999.64;+88,;.03~GEC REFERRAL EST. DURATION OF SERVICES
"DATA",811.8,90,100,141,0)
9999999.64;+88,;.08~YES
"DATA",811.8,90,100,142,0)
9999999.64;+88,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,143,0)
9999999.64;+88,;.1~FACTOR
"DATA",811.8,90,100,144,0)
]]>
"DATA",811.8,90,100,145,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,146,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,147,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,148,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,149,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,150,0)
<POINT_01>GEC 4-6 MONTHS</POINT_01>
"DATA",811.8,90,100,151,0)
<INTERNAL_ENTRY_NUMBER>89</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,152,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,153,0)
<![CDATA[
"DATA",811.8,90,100,154,0)
9999999.64;+89,;.01~GEC 4-6 MONTHS
"DATA",811.8,90,100,155,0)
9999999.64;+89,;.03~GEC REFERRAL EST. DURATION OF SERVICES
"DATA",811.8,90,100,156,0)
9999999.64;+89,;.08~YES
"DATA",811.8,90,100,157,0)
9999999.64;+89,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,158,0)
9999999.64;+89,;.1~FACTOR
"DATA",811.8,90,100,159,0)
]]>
"DATA",811.8,90,100,160,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,161,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,162,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,163,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,164,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,165,0)
<POINT_01>GEC ADL ASSISTANCE IN HOME</POINT_01>
"DATA",811.8,90,100,166,0)
<INTERNAL_ENTRY_NUMBER>92</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,167,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,168,0)
<![CDATA[
"DATA",811.8,90,100,169,0)
9999999.64;+92,;.01~GEC ADL ASSISTANCE IN HOME
"DATA",811.8,90,100,170,0)
9999999.64;+92,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,171,0)
9999999.64;+92,;.08~YES
"DATA",811.8,90,100,172,0)
9999999.64;+92,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,173,0)
9999999.64;+92,;.1~FACTOR
"DATA",811.8,90,100,174,0)
]]>
"DATA",811.8,90,100,175,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,176,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,177,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,178,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,179,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,180,0)
<POINT_01>GEC ADULT DAY HEALTH CARE (REFERRING TO</POINT_01>
"DATA",811.8,90,100,181,0)
<INTERNAL_ENTRY_NUMBER>96</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,182,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,183,0)
<![CDATA[
"DATA",811.8,90,100,184,0)
9999999.64;+96,;.01~GEC ADULT DAY HEALTH CARE (REFERRING TO
"DATA",811.8,90,100,185,0)
9999999.64;+96,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,186,0)
9999999.64;+96,;.08~YES
"DATA",811.8,90,100,187,0)
9999999.64;+96,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,188,0)
9999999.64;+96,;.1~FACTOR
"DATA",811.8,90,100,189,0)
]]>
"DATA",811.8,90,100,190,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,191,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,192,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,193,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,194,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,195,0)
<POINT_01>GEC ALL INCLUSIVE CARE/PACE PROGRAM</POINT_01>
"DATA",811.8,90,100,196,0)
<INTERNAL_ENTRY_NUMBER>100</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,197,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,198,0)
<![CDATA[
"DATA",811.8,90,100,199,0)
9999999.64;+100,;.01~GEC ALL INCLUSIVE CARE/PACE PROGRAM
"DATA",811.8,90,100,200,0)
9999999.64;+100,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,201,0)
9999999.64;+100,;.08~YES
"DATA",811.8,90,100,202,0)
9999999.64;+100,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,203,0)
9999999.64;+100,;.1~FACTOR
"DATA",811.8,90,100,204,0)
]]>
"DATA",811.8,90,100,205,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,206,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,207,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,208,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,209,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,210,0)
<POINT_01>GEC ASSISTED LIVING (REFERRING TO)</POINT_01>
"DATA",811.8,90,100,211,0)
<INTERNAL_ENTRY_NUMBER>117</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,212,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,213,0)
<![CDATA[
"DATA",811.8,90,100,214,0)
9999999.64;+117,;.01~GEC ASSISTED LIVING (REFERRING TO)
"DATA",811.8,90,100,215,0)
9999999.64;+117,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,216,0)
9999999.64;+117,;.08~YES
"DATA",811.8,90,100,217,0)
9999999.64;+117,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,218,0)
9999999.64;+117,;.1~FACTOR
"DATA",811.8,90,100,219,0)
]]>
"DATA",811.8,90,100,220,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,221,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,222,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,223,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,224,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,225,0)
<POINT_01>GEC BEHAVIOR STABILIZATION</POINT_01>
"DATA",811.8,90,100,226,0)
<INTERNAL_ENTRY_NUMBER>125</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,227,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,228,0)
<![CDATA[
"DATA",811.8,90,100,229,0)
9999999.64;+125,;.01~GEC BEHAVIOR STABILIZATION
"DATA",811.8,90,100,230,0)
9999999.64;+125,;.03~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,231,0)
9999999.64;+125,;.08~YES
"DATA",811.8,90,100,232,0)
9999999.64;+125,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,233,0)
9999999.64;+125,;.1~FACTOR
"DATA",811.8,90,100,234,0)
]]>
"DATA",811.8,90,100,235,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,236,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,237,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,238,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,239,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,240,0)
<POINT_01>GEC CARE RECOMMENDATIONS COMMENTS</POINT_01>
"DATA",811.8,90,100,241,0)
<INTERNAL_ENTRY_NUMBER>135</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,242,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,243,0)
<![CDATA[
"DATA",811.8,90,100,244,0)
9999999.64;+135,;.01~GEC CARE RECOMMENDATIONS COMMENTS
"DATA",811.8,90,100,245,0)
9999999.64;+135,;.03~GEC REFERRAL COMMENTS
"DATA",811.8,90,100,246,0)
9999999.64;+135,;.08~YES
"DATA",811.8,90,100,247,0)
9999999.64;+135,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,248,0)
9999999.64;+135,;.1~FACTOR
"DATA",811.8,90,100,249,0)
]]>
"DATA",811.8,90,100,250,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,251,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,252,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,253,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,254,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,255,0)
<POINT_01>GEC CHORE SERVICES IN HOME</POINT_01>
"DATA",811.8,90,100,256,0)
<INTERNAL_ENTRY_NUMBER>147</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,257,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,258,0)
<![CDATA[
"DATA",811.8,90,100,259,0)
9999999.64;+147,;.01~GEC CHORE SERVICES IN HOME
"DATA",811.8,90,100,260,0)
9999999.64;+147,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,261,0)
9999999.64;+147,;.08~YES
"DATA",811.8,90,100,262,0)
9999999.64;+147,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,263,0)
9999999.64;+147,;.1~FACTOR
"DATA",811.8,90,100,264,0)
]]>
"DATA",811.8,90,100,265,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,266,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,267,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,268,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,269,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,270,0)
<POINT_01>GEC DOMICILIARY CARE</POINT_01>
"DATA",811.8,90,100,271,0)
<INTERNAL_ENTRY_NUMBER>185</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,272,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,273,0)
<![CDATA[
"DATA",811.8,90,100,274,0)
9999999.64;+185,;.01~GEC DOMICILIARY CARE
"DATA",811.8,90,100,275,0)
9999999.64;+185,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,276,0)
9999999.64;+185,;.08~YES
"DATA",811.8,90,100,277,0)
9999999.64;+185,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,278,0)
9999999.64;+185,;.1~FACTOR
"DATA",811.8,90,100,279,0)
]]>
"DATA",811.8,90,100,280,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,281,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,282,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,283,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,284,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,285,0)
<POINT_01>GEC RESPITE CARE OUTPATIENT</POINT_01>
"DATA",811.8,90,100,286,0)
<INTERNAL_ENTRY_NUMBER>218</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,287,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,288,0)
<![CDATA[
"DATA",811.8,90,100,289,0)
9999999.64;+218,;.01~GEC RESPITE CARE OUTPATIENT
"DATA",811.8,90,100,290,0)
9999999.64;+218,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,291,0)
9999999.64;+218,;.08~YES
"DATA",811.8,90,100,292,0)
9999999.64;+218,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,293,0)
9999999.64;+218,;.1~FACTOR
"DATA",811.8,90,100,294,0)
]]>
"DATA",811.8,90,100,295,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,296,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,297,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,298,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,299,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,300,0)
<POINT_01>GEC HOME BASED PR. CARE (REFERRING TO)</POINT_01>
"DATA",811.8,90,100,301,0)
<INTERNAL_ENTRY_NUMBER>226</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,302,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,303,0)
<![CDATA[
"DATA",811.8,90,100,304,0)
9999999.64;+226,;.01~GEC HOME BASED PR. CARE (REFERRING TO)
"DATA",811.8,90,100,305,0)
9999999.64;+226,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,306,0)
9999999.64;+226,;.08~YES
"DATA",811.8,90,100,307,0)
9999999.64;+226,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,308,0)
9999999.64;+226,;.1~FACTOR
"DATA",811.8,90,100,309,0)
]]>
"DATA",811.8,90,100,310,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,311,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,312,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,313,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,314,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,315,0)
<POINT_01>GEC IMPROVE COMPLIANCE MEDS/TREATMENTS</POINT_01>
"DATA",811.8,90,100,316,0)
<INTERNAL_ENTRY_NUMBER>250</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,317,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,318,0)
<![CDATA[
"DATA",811.8,90,100,319,0)
9999999.64;+250,;.01~GEC IMPROVE COMPLIANCE MEDS/TREATMENTS
"DATA",811.8,90,100,320,0)
9999999.64;+250,;.03~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,321,0)
9999999.64;+250,;.08~YES
"DATA",811.8,90,100,322,0)
9999999.64;+250,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,323,0)
9999999.64;+250,;.1~FACTOR
"DATA",811.8,90,100,324,0)
]]>
"DATA",811.8,90,100,325,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,326,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,327,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,328,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,329,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,330,0)
<POINT_01>GEC INDEFINITE</POINT_01>
"DATA",811.8,90,100,331,0)
<INTERNAL_ENTRY_NUMBER>251</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,332,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,333,0)
<![CDATA[
"DATA",811.8,90,100,334,0)
9999999.64;+251,;.01~GEC INDEFINITE
"DATA",811.8,90,100,335,0)
9999999.64;+251,;.03~GEC REFERRAL EST. DURATION OF SERVICES
"DATA",811.8,90,100,336,0)
9999999.64;+251,;.08~YES
"DATA",811.8,90,100,337,0)
9999999.64;+251,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,338,0)
9999999.64;+251,;.1~FACTOR
"DATA",811.8,90,100,339,0)
]]>
"DATA",811.8,90,100,340,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,341,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,342,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,343,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,344,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,345,0)
<POINT_01>GEC LONG TERM NURSING HOME CARE</POINT_01>
"DATA",811.8,90,100,346,0)
<INTERNAL_ENTRY_NUMBER>263</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,347,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,348,0)
<![CDATA[
"DATA",811.8,90,100,349,0)
9999999.64;+263,;.01~GEC LONG TERM NURSING HOME CARE
"DATA",811.8,90,100,350,0)
9999999.64;+263,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,351,0)
9999999.64;+263,;.08~YES
"DATA",811.8,90,100,352,0)
9999999.64;+263,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,353,0)
9999999.64;+263,;.1~FACTOR
"DATA",811.8,90,100,354,0)
]]>
"DATA",811.8,90,100,355,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,356,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,357,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,358,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,359,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,360,0)
<POINT_01>GEC MONITORING TO AVOID COMPLICATIONS</POINT_01>
"DATA",811.8,90,100,361,0)
<INTERNAL_ENTRY_NUMBER>271</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,362,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,363,0)
<![CDATA[
"DATA",811.8,90,100,364,0)
9999999.64;+271,;.01~GEC MONITORING TO AVOID COMPLICATIONS
"DATA",811.8,90,100,365,0)
9999999.64;+271,;.03~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,366,0)
9999999.64;+271,;.08~YES
"DATA",811.8,90,100,367,0)
9999999.64;+271,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,368,0)
9999999.64;+271,;.1~FACTOR
"DATA",811.8,90,100,369,0)
]]>
"DATA",811.8,90,100,370,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,371,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,372,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,373,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,374,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,375,0)
<POINT_01>GEC ONE MONTH</POINT_01>
"DATA",811.8,90,100,376,0)
<INTERNAL_ENTRY_NUMBER>286</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,377,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,378,0)
<![CDATA[
"DATA",811.8,90,100,379,0)
9999999.64;+286,;.01~GEC ONE MONTH
"DATA",811.8,90,100,380,0)
9999999.64;+286,;.03~GEC REFERRAL EST. DURATION OF SERVICES
"DATA",811.8,90,100,381,0)
9999999.64;+286,;.08~YES
"DATA",811.8,90,100,382,0)
9999999.64;+286,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,383,0)
9999999.64;+286,;.1~FACTOR
"DATA",811.8,90,100,384,0)
]]>
"DATA",811.8,90,100,385,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,386,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,387,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,388,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,389,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,390,0)
<POINT_01>GEC ONE WEEK OR LESS</POINT_01>
"DATA",811.8,90,100,391,0)
<INTERNAL_ENTRY_NUMBER>287</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,392,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,393,0)
<![CDATA[
"DATA",811.8,90,100,394,0)
9999999.64;+287,;.01~GEC ONE WEEK OR LESS
"DATA",811.8,90,100,395,0)
9999999.64;+287,;.03~GEC REFERRAL EST. DURATION OF SERVICES
"DATA",811.8,90,100,396,0)
9999999.64;+287,;.08~YES
"DATA",811.8,90,100,397,0)
9999999.64;+287,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,398,0)
9999999.64;+287,;.1~FACTOR
"DATA",811.8,90,100,399,0)
]]>
"DATA",811.8,90,100,400,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,401,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,402,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,403,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,404,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,405,0)
<POINT_01>GEC OTHER REFERRAL PROGRAM(REFERRING TO)</POINT_01>
"DATA",811.8,90,100,406,0)
<INTERNAL_ENTRY_NUMBER>300</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,407,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,408,0)
<![CDATA[
"DATA",811.8,90,100,409,0)
9999999.64;+300,;.01~GEC OTHER REFERRAL PROGRAM(REFERRING TO)
"DATA",811.8,90,100,410,0)
9999999.64;+300,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,411,0)
9999999.64;+300,;.08~YES
"DATA",811.8,90,100,412,0)
9999999.64;+300,;.09~GEC3F CARE RECOMMENDATION 0
"DATA",811.8,90,100,413,0)
9999999.64;+300,;.1~FACTOR
"DATA",811.8,90,100,414,0)
]]>
"DATA",811.8,90,100,415,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,416,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,417,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,418,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,419,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,420,0)
<POINT_01>GEC PALLIATIVE/END OF LIFE CARE</POINT_01>
"DATA",811.8,90,100,421,0)
<INTERNAL_ENTRY_NUMBER>312</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,422,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,423,0)
<![CDATA[
"DATA",811.8,90,100,424,0)
9999999.64;+312,;.01~GEC PALLIATIVE/END OF LIFE CARE
"DATA",811.8,90,100,425,0)
9999999.64;+312,;.03~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,426,0)
9999999.64;+312,;.08~YES
"DATA",811.8,90,100,427,0)
9999999.64;+312,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,428,0)
9999999.64;+312,;.1~FACTOR
"DATA",811.8,90,100,429,0)
]]>
"DATA",811.8,90,100,430,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,431,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,432,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,433,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,434,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,435,0)
<POINT_01>GEC INPATIENT PALLIATIVE/HOSPICE (NHCU)</POINT_01>
"DATA",811.8,90,100,436,0)
<INTERNAL_ENTRY_NUMBER>313</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,437,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,438,0)
<![CDATA[
"DATA",811.8,90,100,439,0)
9999999.64;+313,;.01~GEC INPATIENT PALLIATIVE/HOSPICE (NHCU)
"DATA",811.8,90,100,440,0)
9999999.64;+313,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,441,0)
9999999.64;+313,;.08~YES
"DATA",811.8,90,100,442,0)
9999999.64;+313,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,443,0)
9999999.64;+313,;.1~FACTOR
"DATA",811.8,90,100,444,0)
]]>
"DATA",811.8,90,100,445,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,446,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,447,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,448,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,449,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,450,0)
<POINT_01>GEC PATIENT/FAMILY EDUCATION</POINT_01>
"DATA",811.8,90,100,451,0)
<INTERNAL_ENTRY_NUMBER>319</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,452,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,453,0)
<![CDATA[
"DATA",811.8,90,100,454,0)
9999999.64;+319,;.01~GEC PATIENT/FAMILY EDUCATION
"DATA",811.8,90,100,455,0)
9999999.64;+319,;.03~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,456,0)
9999999.64;+319,;.08~YES
"DATA",811.8,90,100,457,0)
9999999.64;+319,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,458,0)
9999999.64;+319,;.1~FACTOR
"DATA",811.8,90,100,459,0)
]]>
"DATA",811.8,90,100,460,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,461,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,462,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,463,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,464,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,465,0)
<POINT_01>GEC REDUCE ER VISITS/HOSPITALIZATIONS</POINT_01>
"DATA",811.8,90,100,466,0)
<INTERNAL_ENTRY_NUMBER>333</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,467,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,468,0)
<![CDATA[
"DATA",811.8,90,100,469,0)
9999999.64;+333,;.01~GEC REDUCE ER VISITS/HOSPITALIZATIONS
"DATA",811.8,90,100,470,0)
9999999.64;+333,;.03~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,471,0)
9999999.64;+333,;.08~YES
"DATA",811.8,90,100,472,0)
9999999.64;+333,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,473,0)
9999999.64;+333,;.1~FACTOR
"DATA",811.8,90,100,474,0)
]]>
"DATA",811.8,90,100,475,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,476,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,477,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,478,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,479,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,480,0)
<POINT_01>GEC REHABILITATION/IMPROVED FX</POINT_01>
"DATA",811.8,90,100,481,0)
<INTERNAL_ENTRY_NUMBER>366</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,482,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,483,0)
<![CDATA[
"DATA",811.8,90,100,484,0)
9999999.64;+366,;.01~GEC REHABILITATION/IMPROVED FX
"DATA",811.8,90,100,485,0)
9999999.64;+366,;.03~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,486,0)
9999999.64;+366,;.08~YES
"DATA",811.8,90,100,487,0)
9999999.64;+366,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,488,0)
9999999.64;+366,;.1~FACTOR
"DATA",811.8,90,100,489,0)
]]>
"DATA",811.8,90,100,490,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,491,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,492,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,493,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,494,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,495,0)
<POINT_01>GEC RESIDENTIAL CARE (SUPERVISED LIVING)</POINT_01>
"DATA",811.8,90,100,496,0)
<INTERNAL_ENTRY_NUMBER>367</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,497,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,498,0)
<![CDATA[
"DATA",811.8,90,100,499,0)
9999999.64;+367,;.01~GEC RESIDENTIAL CARE (SUPERVISED LIVING)
"DATA",811.8,90,100,500,0)
9999999.64;+367,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,501,0)
9999999.64;+367,;.08~YES
"DATA",811.8,90,100,502,0)
9999999.64;+367,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,503,0)
9999999.64;+367,;.1~FACTOR
"DATA",811.8,90,100,504,0)
]]>
"DATA",811.8,90,100,505,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,506,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,507,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,508,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,509,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,510,0)
<POINT_01>GEC RESPITE CARE INPATIENT</POINT_01>
"DATA",811.8,90,100,511,0)
<INTERNAL_ENTRY_NUMBER>370</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,512,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,513,0)
<![CDATA[
"DATA",811.8,90,100,514,0)
9999999.64;+370,;.01~GEC RESPITE CARE INPATIENT
"DATA",811.8,90,100,515,0)
9999999.64;+370,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,516,0)
9999999.64;+370,;.08~YES
"DATA",811.8,90,100,517,0)
9999999.64;+370,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,518,0)
9999999.64;+370,;.1~FACTOR
"DATA",811.8,90,100,519,0)
]]>
"DATA",811.8,90,100,520,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,521,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,522,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,523,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,524,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,525,0)
<POINT_01>GEC RESPITE FOR CAREGIVER</POINT_01>
"DATA",811.8,90,100,526,0)
<INTERNAL_ENTRY_NUMBER>371</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,527,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,528,0)
<![CDATA[
"DATA",811.8,90,100,529,0)
9999999.64;+371,;.01~GEC RESPITE FOR CAREGIVER
"DATA",811.8,90,100,530,0)
9999999.64;+371,;.03~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,531,0)
9999999.64;+371,;.08~YES
"DATA",811.8,90,100,532,0)
9999999.64;+371,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,533,0)
9999999.64;+371,;.1~FACTOR
"DATA",811.8,90,100,534,0)
]]>
"DATA",811.8,90,100,535,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,536,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,537,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,538,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,539,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,540,0)
<POINT_01>GEC SHORT TERM NURSING HOME CARE</POINT_01>
"DATA",811.8,90,100,541,0)
<INTERNAL_ENTRY_NUMBER>374</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,542,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,543,0)
<![CDATA[
"DATA",811.8,90,100,544,0)
9999999.64;+374,;.01~GEC SHORT TERM NURSING HOME CARE
"DATA",811.8,90,100,545,0)
9999999.64;+374,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,546,0)
9999999.64;+374,;.08~YES
"DATA",811.8,90,100,547,0)
9999999.64;+374,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,548,0)
9999999.64;+374,;.1~FACTOR
"DATA",811.8,90,100,549,0)
]]>
"DATA",811.8,90,100,550,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,551,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,552,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,553,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,554,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,555,0)
<POINT_01>GEC SKILLED CARE IN HOME</POINT_01>
"DATA",811.8,90,100,556,0)
<INTERNAL_ENTRY_NUMBER>375</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,557,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,558,0)
<![CDATA[
"DATA",811.8,90,100,559,0)
9999999.64;+375,;.01~GEC SKILLED CARE IN HOME
"DATA",811.8,90,100,560,0)
9999999.64;+375,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,561,0)
9999999.64;+375,;.08~YES
"DATA",811.8,90,100,562,0)
9999999.64;+375,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,563,0)
9999999.64;+375,;.1~FACTOR
"DATA",811.8,90,100,564,0)
]]>
"DATA",811.8,90,100,565,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,566,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,567,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,568,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,569,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,570,0)
<POINT_01>GEC SKILLED NURSING CARE</POINT_01>
"DATA",811.8,90,100,571,0)
<INTERNAL_ENTRY_NUMBER>376</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,572,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,573,0)
<![CDATA[
"DATA",811.8,90,100,574,0)
9999999.64;+376,;.01~GEC SKILLED NURSING CARE
"DATA",811.8,90,100,575,0)
9999999.64;+376,;.03~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,576,0)
9999999.64;+376,;.08~YES
"DATA",811.8,90,100,577,0)
9999999.64;+376,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,578,0)
9999999.64;+376,;.1~FACTOR
"DATA",811.8,90,100,579,0)
]]>
"DATA",811.8,90,100,580,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,581,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,582,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,583,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,584,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,585,0)
<POINT_01>GEC SPECIALIZED DEMENTIA/GEROPSYCH CARE</POINT_01>
"DATA",811.8,90,100,586,0)
<INTERNAL_ENTRY_NUMBER>384</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,587,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,588,0)
<![CDATA[
"DATA",811.8,90,100,589,0)
9999999.64;+384,;.01~GEC SPECIALIZED DEMENTIA/GEROPSYCH CARE
"DATA",811.8,90,100,590,0)
9999999.64;+384,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,591,0)
9999999.64;+384,;.08~YES
"DATA",811.8,90,100,592,0)
9999999.64;+384,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,593,0)
9999999.64;+384,;.1~FACTOR
"DATA",811.8,90,100,594,0)
]]>
"DATA",811.8,90,100,595,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,596,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,597,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,598,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,599,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,600,0)
<POINT_01>GEC SUPERVISED/SUPPORTIVE LVNG SITUATION</POINT_01>
"DATA",811.8,90,100,601,0)
<INTERNAL_ENTRY_NUMBER>401</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,602,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,603,0)
<![CDATA[
"DATA",811.8,90,100,604,0)
9999999.64;+401,;.01~GEC SUPERVISED/SUPPORTIVE LVNG SITUATION
"DATA",811.8,90,100,605,0)
9999999.64;+401,;.03~GEC REFERRAL GOALS OF CARE
"DATA",811.8,90,100,606,0)
9999999.64;+401,;.08~YES
"DATA",811.8,90,100,607,0)
9999999.64;+401,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,608,0)
9999999.64;+401,;.1~FACTOR
"DATA",811.8,90,100,609,0)
]]>
"DATA",811.8,90,100,610,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,611,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,612,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,613,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,614,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,615,0)
<POINT_01>GEC OUTPATIENT PALLIATIVE/HOSPICE (HOME)</POINT_01>
"DATA",811.8,90,100,616,0)
<INTERNAL_ENTRY_NUMBER>660149</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,617,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,618,0)
<![CDATA[
"DATA",811.8,90,100,619,0)
9999999.64;+660149,;.01~GEC OUTPATIENT PALLIATIVE/HOSPICE (HOME)
"DATA",811.8,90,100,620,0)
9999999.64;+660149,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,621,0)
9999999.64;+660149,;.08~YES
"DATA",811.8,90,100,622,0)
9999999.64;+660149,;.09~GEC3F CARE RECOMMENDATIONS 0
"DATA",811.8,90,100,623,0)
9999999.64;+660149,;.1~FACTOR
"DATA",811.8,90,100,624,0)
]]>
"DATA",811.8,90,100,625,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,626,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,627,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,628,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,90,100,629,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,90,100,630,0)
<POINT_01>GEC HOME TELEHEALTH (REFERRING TO)</POINT_01>
"DATA",811.8,90,100,631,0)
<INTERNAL_ENTRY_NUMBER>660158</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,632,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,633,0)
<![CDATA[
"DATA",811.8,90,100,634,0)
9999999.64;+660158,;.01~GEC HOME TELEHEALTH (REFERRING TO)
"DATA",811.8,90,100,635,0)
9999999.64;+660158,;.03~GEC REFERRAL REFERRING TO
"DATA",811.8,90,100,636,0)
9999999.64;+660158,;.08~YES
"DATA",811.8,90,100,637,0)
9999999.64;+660158,;.09~GECFF CARE COORDINATION 0
"DATA",811.8,90,100,638,0)
9999999.64;+660158,;.1~FACTOR
"DATA",811.8,90,100,639,0)
]]>
"DATA",811.8,90,100,640,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,641,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,642,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,643,0)
<FILE_NAME>ORDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,644,0)
<FILE_NUMBER>101.41</FILE_NUMBER>
"DATA",811.8,90,100,645,0)
<POINT_01>GMRCT GEC</POINT_01>
"DATA",811.8,90,100,646,0)
<INTERNAL_ENTRY_NUMBER>1459</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,647,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,648,0)
<![CDATA[
"DATA",811.8,90,100,649,0)
101.41;+1459,;.01~GMRCT GEC
"DATA",811.8,90,100,650,0)
]]>
"DATA",811.8,90,100,651,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,652,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,653,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,654,0)
<FILE_NAME>REMINDER DEFINITION</FILE_NAME>
"DATA",811.8,90,100,655,0)
<FILE_NUMBER>811.9</FILE_NUMBER>
"DATA",811.8,90,100,656,0)
<POINT_01>VA-GEC REFERRAL CARE RECOMMENDATION</POINT_01>
"DATA",811.8,90,100,657,0)
<INTERNAL_ENTRY_NUMBER>136</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,658,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,659,0)
<![CDATA[
"DATA",811.8,90,100,660,0)
811.9;+136,;.01~VA-GEC REFERRAL CARE RECOMMENDATION
"DATA",811.8,90,100,661,0)
811.9;+136,;1.2~GEC REFERRAL CARE RECOMMENDATIONS
"DATA",811.8,90,100,662,0)
811.9;+136,;2~WP-start~28
"DATA",811.8,90,100,663,0)
The Office of Geriatric Extended Care (OGEC) approved the paper-based
"DATA",811.8,90,100,664,0)
GEC Referral as the preferred method for assessing and screening patients
"DATA",811.8,90,100,665,0)
for long-term and extended care services.  As part of the Long Term Care
"DATA",811.8,90,100,666,0)
Initiative and the Veterans Millennium Health Care and Benefits Act,
"DATA",811.8,90,100,667,0)
Public Law 106-177, OGEC identified this tool as the means to standardize
"DATA",811.8,90,100,668,0)
long-term care assessments and to prepare for the national collection of
"DATA",811.8,90,100,669,0)
data regarding long-term care needs in the veteran population.
"DATA",811.8,90,100,670,0)
 
"DATA",811.8,90,100,671,0)
Current VHA methods of assessing patients to determine the level of care
"DATA",811.8,90,100,672,0)
required of extended care service are inconsistent.  Some facilities use
"DATA",811.8,90,100,673,0)
the VA Form 10-7108, VA Form 10064a (Patient Assessment Instrument) or VA
"DATA",811.8,90,100,674,0)
Form 1204 (Referral for Community Nursing Home Care), while other sites
"DATA",811.8,90,100,675,0)
use various other assessments or consults.  OGEC seeks to standardize the
"DATA",811.8,90,100,676,0)
process of assessment as well as the data set in order to establish a
"DATA",811.8,90,100,677,0)
basis upon which program evaluation and quality performance can be
"DATA",811.8,90,100,678,0)
managed.
"DATA",811.8,90,100,679,0)
 
"DATA",811.8,90,100,680,0)
Four clinical reminder dialogs collect data regarding the need for
"DATA",811.8,90,100,681,0)
long-term care services in a standard format across VHA.  This provides
"DATA",811.8,90,100,682,0)
a mechanism for clinicians to administer comprehensive long-term care
"DATA",811.8,90,100,683,0)
assessments, stores the information within the patient medical record and
"DATA",811.8,90,100,684,0)
allows clinicians to notify local OGEC staff.  The screening data is
"DATA",811.8,90,100,685,0)
collected as health factors and is stored in the V Health Factor file.  
"DATA",811.8,90,100,686,0)
There is no cohort or resolution logic associated. The four reminder
"DATA",811.8,90,100,687,0)
dialogs are GEC Referral Social Services, GEC Referral Nursing Assessment,
"DATA",811.8,90,100,688,0)
GEC Referral Care Recommendations, and GEC Referral Care Coordination. An
"DATA",811.8,90,100,689,0)
M-based option routine accompanies these reminders that extracts the data
"DATA",811.8,90,100,690,0)
and makes it available for ad hoc reporting.
"DATA",811.8,90,100,691,0)
811.9;+136,;3~WP-start~250
"DATA",811.8,90,100,692,0)
I.      Basics.
"DATA",811.8,90,100,693,0)
II.     GEC Health Factors and their use.
"DATA",811.8,90,100,694,0)
III.    GEC Status Indicator.
"DATA",811.8,90,100,695,0)
IV.     GEC Referral ad hoc reports (CPRS GUI).
"DATA",811.8,90,100,696,0)
V.      GEC Referral Reminders and Dialogs.
"DATA",811.8,90,100,697,0)
    A.  GEC Consult Order.
"DATA",811.8,90,100,698,0)
VI.     GEC Interdisciplinary Notes.
"DATA",811.8,90,100,699,0)
VII.    GEC Referral Reports (LM CHUI).
"DATA",811.8,90,100,700,0)
VIII.   GEC Reminder Terms.
"DATA",811.8,90,100,701,0)
IX.     Training.
"DATA",811.8,90,100,702,0)
 
"DATA",811.8,90,100,703,0)
I.      Basics
"DATA",811.8,90,100,704,0)
The GEC Referral is comprised of 4 reminder dialogs: VA-GEC SOCIAL 
"DATA",811.8,90,100,705,0)
SERVICES, VA-GEC NURSING ASSESSMENT, VA-GEC CARE RECOMMENDATIONS and 
"DATA",811.8,90,100,706,0)
VA-GEC CARE COORDINATION.  These dialogs are designed for use as TIU 
"DATA",811.8,90,100,707,0)
templates to enter data regarding the need for extended care.  Data 
"DATA",811.8,90,100,708,0)
entered via the dialogs are captured as health factors to be used for 
"DATA",811.8,90,100,709,0)
local and national reporting.  The software includes a new report menu 
"DATA",811.8,90,100,710,0)
that may be used for local analysis.
"DATA",811.8,90,100,711,0)
 
"DATA",811.8,90,100,712,0)
II.     GEC Health Factors
"DATA",811.8,90,100,713,0)
The GEC Referral project distributes a large set of national health 
"DATA",811.8,90,100,714,0)
factors.  They may be identified by the GEC name-space and constitute the 
"DATA",811.8,90,100,715,0)
foundation of the GEC Referral project.  They establish a standard set of 
"DATA",811.8,90,100,716,0)
screening data, to be used across the Veterans Health Administration, and 
"DATA",811.8,90,100,717,0)
will be rolled-up nationally in Phase II.  
"DATA",811.8,90,100,718,0)
 
"DATA",811.8,90,100,719,0)
The Health Factor and V Health Factor files include factors and 
"DATA",811.8,90,100,720,0)
categories.  For this project, each section of the Referral is correlated 
"DATA",811.8,90,100,721,0)
to a health factor category.  Once entered, the data is stored in the 
"DATA",811.8,90,100,722,0)
Patient Care Encounter files.  The structure of these underlying files 
"DATA",811.8,90,100,723,0)
has a direct impact on the design of the GEC software.  Extracting, 
"DATA",811.8,90,100,724,0)
viewing and managing this set of data requires the GEC dialogs to remain 
"DATA",811.8,90,100,725,0)
as they are released.  Consequently, the Clinical Reminders package has 
"DATA",811.8,90,100,726,0)
been modified to prevent the GEC national reminders from being copied.  
"DATA",811.8,90,100,727,0)
This change was made to the Reminder Dialog, Dialog Group and Dialog 
"DATA",811.8,90,100,728,0)
Element levels.  To accommodate local business practices, sites will be 
"DATA",811.8,90,100,729,0)
permitted to add locally created health factors to the GEC dialogs.  A 
"DATA",811.8,90,100,730,0)
new List Manager screen is included to facilitate additions and any 
"DATA",811.8,90,100,731,0)
subsequent edits to those Groups and Elements added locally.  
"DATA",811.8,90,100,732,0)
 
"DATA",811.8,90,100,733,0)
NOTES:
"DATA",811.8,90,100,734,0)
 
"DATA",811.8,90,100,735,0)
    -Dialog elements that have an order associated as a finding item 
"DATA",811.8,90,100,736,0)
     will continue to be an editable field using the dialog editor.
"DATA",811.8,90,100,737,0)
    -Any local changes to the GEC dialogs will not be included with 
"DATA",811.8,90,100,738,0)
     the reports or future national extracts.
"DATA",811.8,90,100,739,0)
    -GEC health factors are populated with a synonym for 
"DATA",811.8,90,100,740,0)
     identification.
"DATA",811.8,90,100,741,0)
    -Sites are discouraged from using the GEC health factors 
"DATA",811.8,90,100,742,0)
     elsewhere. Phase II of the GEC project will involve national roll-up.
"DATA",811.8,90,100,743,0)
     Since this project has yet to be started, potential extraction rules
"DATA",811.8,90,100,744,0)
     may not be able to distinguish the data source.
"DATA",811.8,90,100,745,0)
    -Users should not enter GEC health factors from the Encounter 
"DATA",811.8,90,100,746,0)
     form. While it is possible to do so, Patient Care Encounter only
"DATA",811.8,90,100,747,0)
     allows one instance of a combination of the health factor, patient
"DATA",811.8,90,100,748,0)
     and visit IEN.  If one is entered via the Encounter, any subsequent
"DATA",811.8,90,100,749,0)
     entry of that health factor from the reminder dialog will not be
"DATA",811.8,90,100,750,0)
     available for the GEC reports.  This is a consequence of the GEC report
"DATA",811.8,90,100,751,0)
     routines relying on the health factor's Data Source.
"DATA",811.8,90,100,752,0)
 
"DATA",811.8,90,100,753,0)
 
"DATA",811.8,90,100,754,0)
III.    GEC Status Check
"DATA",811.8,90,100,755,0)
There is no limit to the entry of GEC Referral data.  Thus, there may be 
"DATA",811.8,90,100,756,0)
multiple entries of the same health factors over time.  Since the data is 
"DATA",811.8,90,100,757,0)
entered via separate dialogs, extraction and viewing requires the data to 
"DATA",811.8,90,100,758,0)
be discretely identified.  The GEC software depends upon the user to 
"DATA",811.8,90,100,759,0)
indicate when the data from a given referral should be concluded.  The 
"DATA",811.8,90,100,760,0)
referral is finalized using a new feature called the GEC Status 
"DATA",811.8,90,100,761,0)
Indicator.  This indicator is presented to the user as a modal dialog at 
"DATA",811.8,90,100,762,0)
the conclusion of the VA-GEC CARE COORDINATION dialog.  It will prompt 
"DATA",811.8,90,100,763,0)
the user to indicate the conclusion of the Referral with a Yes or NO 
"DATA",811.8,90,100,764,0)
response and will list any missing dialogs.  If YES is selected, the data 
"DATA",811.8,90,100,765,0)
for the current episode of the Referral is closed.  If No is selected, 
"DATA",811.8,90,100,766,0)
the Indicator is displayed with each succeeding GEC dialog until Yes is 
"DATA",811.8,90,100,767,0)
selected.
"DATA",811.8,90,100,768,0)
 
"DATA",811.8,90,100,769,0)
To assist the ongoing management of completing GEC Referrals, the GEC 
"DATA",811.8,90,100,770,0)
Status Indicator may be added to the CPRS GUI Tools drop-down menu.  The 
"DATA",811.8,90,100,771,0)
parameter to activate the Indicator is PXRM GEC STATUS CHECK.  If may be 
"DATA",811.8,90,100,772,0)
set at the User or Team level.  If added to the drop-down menu, the 
"DATA",811.8,90,100,773,0)
Indicator may be viewed at any time and used to close the referral if 
"DATA",811.8,90,100,774,0)
needed.
"DATA",811.8,90,100,775,0)
 
"DATA",811.8,90,100,776,0)
 
"DATA",811.8,90,100,777,0)
IV.     GEC Referral Ad hoc Reports
"DATA",811.8,90,100,778,0)
Two new health summary components have been created and distributed with 
"DATA",811.8,90,100,779,0)
this software:  GEC Completed Referral Count (GECC) and GEC Health Factor 
"DATA",811.8,90,100,780,0)
Category (GECH).  The first displays all GEC referral data according to 
"DATA",811.8,90,100,781,0)
the occurrence and time limits identified.  The GEC Health Factor 
"DATA",811.8,90,100,782,0)
Category component, in conjunction with PX*1*123 and GMTS*2.7*63, permits 
"DATA",811.8,90,100,783,0)
GEC data to be viewed by health factor or health factor category.  If a 
"DATA",811.8,90,100,784,0)
user should have access to these GEC reports, they must have access to 
"DATA",811.8,90,100,785,0)
the Ad Hoc Health Summary type.  [This can be set using GMTS GUI HS LIST 
"DATA",811.8,90,100,786,0)
PARAMETERS.]
"DATA",811.8,90,100,787,0)
 
"DATA",811.8,90,100,788,0)
V.      GEC Referral Reminders and Dialogs
"DATA",811.8,90,100,789,0)
The GEC reminders are comprised of dialogs and health factors only.  They 
"DATA",811.8,90,100,790,0)
have neither cohort nor resolution logic and will not become due.  They 
"DATA",811.8,90,100,791,0)
are intended only as TIU templates and do not need to be assigned to the 
"DATA",811.8,90,100,792,0)
CPRS Cover Sheet.  Due to potential complications with reporting and 
"DATA",811.8,90,100,793,0)
duplicate entries, it is recommended that the GEC dialogs not be added to 
"DATA",811.8,90,100,794,0)
the Reminders drawer/Cover sheet.  The Referral was designed for 
"DATA",811.8,90,100,795,0)
inter-disciplinary use with dialogs created for separate services.  
"DATA",811.8,90,100,796,0)
However, a single user may perform them all.  With only a few exceptions, 
"DATA",811.8,90,100,797,0)
each section of the dialogs is mandatory and is marked with an asterisk 
"DATA",811.8,90,100,798,0)
(*).  The completion of all four dialogs constitutes a discrete episode 
"DATA",811.8,90,100,799,0)
of the GEC Referral.
"DATA",811.8,90,100,800,0)
 
"DATA",811.8,90,100,801,0)
The VA-GEC REFERRAL SOCIAL SERVICES, VA-GEC REFERRAL NURSING ASSESSMENT 
"DATA",811.8,90,100,802,0)
and VA-GEC REFERRAL CARE RECOMMENDATIONS dialogs comprise the clinical 
"DATA",811.8,90,100,803,0)
screening.  The VA-GEC REFERRAL CARE COORDINATION dialog is used 
"DATA",811.8,90,100,804,0)
administratively to record the arrangement of and funding for extended 
"DATA",811.8,90,100,805,0)
care services.  These dialogs may be performed in any order local 
"DATA",811.8,90,100,806,0)
practices dictate.  However, it is expected the screening portion will be 
"DATA",811.8,90,100,807,0)
completed prior to the coordination of services.  When the screen is 
"DATA",811.8,90,100,808,0)
complete, a consult order should be placed to the service responsible for 
"DATA",811.8,90,100,809,0)
arranging services.
"DATA",811.8,90,100,810,0)
 
"DATA",811.8,90,100,811,0)
A.       GEC Consult Order
"DATA",811.8,90,100,812,0)
Most sites have either an individual or service responsible for arranging 
"DATA",811.8,90,100,813,0)
and coordinating extended care services.  To accommodate local business 
"DATA",811.8,90,100,814,0)
practices and flexibility, sites may associate any consult service (or 
"DATA",811.8,90,100,815,0)
menu) they already have in place.  If none exist, the sites may create a 
"DATA",811.8,90,100,816,0)
consult or establish some alternative practice to ensure that both 
"DATA",811.8,90,100,817,0)
services are arranged and that the VA-GEC REFERRAL CARE COORDINATION 
"DATA",811.8,90,100,818,0)
dialog is completed.  
"DATA",811.8,90,100,819,0)
 
"DATA",811.8,90,100,820,0)
A placeholder for this consult is included at the end of the VA-GEC 
"DATA",811.8,90,100,821,0)
REFERRAL SOCIAL SERVICES, VA-GEC REFERRAL NURSING ASSESSMENT and VA-GEC 
"DATA",811.8,90,100,822,0)
REFERRAL CARE RECOMMENDATIONS dialogs.  It must be substituted or deleted 
"DATA",811.8,90,100,823,0)
at the time of installation.  
"DATA",811.8,90,100,824,0)
 
"DATA",811.8,90,100,825,0)
Pre-Installation Requirements
"DATA",811.8,90,100,826,0)
 
"DATA",811.8,90,100,827,0)
Since nationally created orders do not map to local orderable items, 
"DATA",811.8,90,100,828,0)
orders do not pass through Reminder Exchange.  Installation of the 
"DATA",811.8,90,100,829,0)
Referral will prompt for a resolution of this dialog element.  Resolution 
"DATA",811.8,90,100,830,0)
will consist of either replacing the order with a locally created order, 
"DATA",811.8,90,100,831,0)
deleting the element or skipping the step.
"DATA",811.8,90,100,832,0)
 
"DATA",811.8,90,100,833,0)
Consult quick orders are existing functionality that are probably in use 
"DATA",811.8,90,100,834,0)
at your site.  It is also possible that an order has already been created 
"DATA",811.8,90,100,835,0)
that could be used.  To determine this, the installer should contact the 
"DATA",811.8,90,100,836,0)
CPRS CAC prior to installation and determine if an order is available.  
"DATA",811.8,90,100,837,0)
If it is, installation will only require entry of the Fileman name-space 
"DATA",811.8,90,100,838,0)
of the order at the prompt.  If it is not, follow the steps in the CAC 
"DATA",811.8,90,100,839,0)
section below.
"DATA",811.8,90,100,840,0)
 
"DATA",811.8,90,100,841,0)
During installation you will be presented with the following prompt:
"DATA",811.8,90,100,842,0)
 
"DATA",811.8,90,100,843,0)
        REMINDER DIALOG entry VA-ORDER GEC REFERRAL CONSULT does not
"DATA",811.8,90,100,844,0)
        EXIST, what do you want to do?
"DATA",811.8,90,100,845,0)
 
"DATA",811.8,90,100,846,0)
        Select one of the following:
"DATA",811.8,90,100,847,0)
 
"DATA",811.8,90,100,848,0)
             D   Delete (from the reminder/dialog)
"DATA",811.8,90,100,849,0)
             P   Replace (in the reminder/dialog) with an existing entry
"DATA",811.8,90,100,850,0)
             Q   Quit the install
"DATA",811.8,90,100,851,0)
 
"DATA",811.8,90,100,852,0)
The installer should select P (Replace with an existing entry), and enter
"DATA",811.8,90,100,853,0)
the name of the existing quick order provided by the CAC using Fileman
"DATA",811.8,90,100,854,0)
name.  [NOTE: The same quick order may be used on each of the dialogs].
"DATA",811.8,90,100,855,0)
 
"DATA",811.8,90,100,856,0)
CAC Section
"DATA",811.8,90,100,857,0)
1. The CAC should first determine if a Consult Service exists for
"DATA",811.8,90,100,858,0)
the management of extended care services.  If it exists, this service can 
"DATA",811.8,90,100,859,0)
be used for the quick order and you can proceed to step 2.  If one does 
"DATA",811.8,90,100,860,0)
not exist, the CAC will need to create a Consult Service by using the 
"DATA",811.8,90,100,861,0)
[GMRC Manager] option [GMRC SETUP REQUEST SERVICES].
"DATA",811.8,90,100,862,0)
     a. Recipients of the consult notifications should be GEC staff 
"DATA",811.8,90,100,863,0)
        responsible for coordinating extended care service (or any
"DATA",811.8,90,100,864,0)
        appropriate user).
"DATA",811.8,90,100,865,0)
2. The CAC should create a consult quick order using the [ORCM MGMT] 
"DATA",811.8,90,100,866,0)
option [ORCM MENU].  This order should be associated to the Consult 
"DATA",811.8,90,100,867,0)
Service in the Consult to Service/Specialty field of the quick order.
"DATA",811.8,90,100,868,0)
3. The CAC should then provide the name of the consult quick order 
"DATA",811.8,90,100,869,0)
to the installer.  The installer will then perform the installation and 
"DATA",811.8,90,100,870,0)
enter the name of the order at the prompt as above.
"DATA",811.8,90,100,871,0)
 
"DATA",811.8,90,100,872,0)
VI.     GEC Interdisciplinary Notes
"DATA",811.8,90,100,873,0)
The GEC Referral dialogs are intended for use as TIU templates.  It is 
"DATA",811.8,90,100,874,0)
also expected that they will be used as part of a TIU Interdisciplinary 
"DATA",811.8,90,100,875,0)
(ID) note.  This will require new TIU Document Definitions or the 
"DATA",811.8,90,100,876,0)
association of existing titles to the dialogs.  This project does not 
"DATA",811.8,90,100,877,0)
stipulate the titles to be used, preferring to allow the sites to use 
"DATA",811.8,90,100,878,0)
those titles that would best suit their business practices.  However, the 
"DATA",811.8,90,100,879,0)
Office of Geriatrics Extended Care requests that the parent ID note title 
"DATA",811.8,90,100,880,0)
be:
"DATA",811.8,90,100,881,0)
        "GEC EXTENDED CARE REFERRAL"
"DATA",811.8,90,100,882,0)
 
"DATA",811.8,90,100,883,0)
To create a TIU Document Definition, perform the following steps:
"DATA",811.8,90,100,884,0)
A.      Access the TIU IRM MAINTENANCE MENU.
"DATA",811.8,90,100,885,0)
B.      Select TIUF DOCUMENT DEFINITION MGR.
"DATA",811.8,90,100,886,0)
C.      Select Create Document Definitions or Edit Document Definitions.
"DATA",811.8,90,100,887,0)
D.      Select class and create title.
"DATA",811.8,90,100,888,0)
 
"DATA",811.8,90,100,889,0)
 
"DATA",811.8,90,100,890,0)
To associate reminder dialogs with TIU templates, perform the following 
"DATA",811.8,90,100,891,0)
steps*:
"DATA",811.8,90,100,892,0)
 
"DATA",811.8,90,100,893,0)
A.      Make the GEC Referral dialogs eligible to be used as a template 
"DATA",811.8,90,100,894,0)
        by using the parameter: TIU TEMPLATE REMINDER DIALOGS.
"DATA",811.8,90,100,895,0)
B.      Associate the dialog to a TIU Document Definition.
"DATA",811.8,90,100,896,0)
        1. Go to Shared Templates
"DATA",811.8,90,100,897,0)
        2. Click "New Template."
"DATA",811.8,90,100,898,0)
        3. Enter a name.
"DATA",811.8,90,100,899,0)
        4. Select the Template Type as Reminder Dialog.
"DATA",811.8,90,100,900,0)
        5. Pick a GEC dialog from the Reminder Dialog field.
"DATA",811.8,90,100,901,0)
        6. Under Shared Templates, pick Document Titles.
"DATA",811.8,90,100,902,0)
        7. In the Associated Title field, pick the Document Definition
"DATA",811.8,90,100,903,0)
           created or designated for this dialog.
"DATA",811.8,90,100,904,0)
        8. Click Apply.
"DATA",811.8,90,100,905,0)
 
"DATA",811.8,90,100,906,0)
(*You will require the Clinical Applications Coordinator User Class.)
"DATA",811.8,90,100,907,0)
 
"DATA",811.8,90,100,908,0)
VII.    GEC Referral Reports
"DATA",811.8,90,100,909,0)
The software includes a new set of reports that provide a variety of GEC 
"DATA",811.8,90,100,910,0)
health factor perspectives.  The reports are released as an option within 
"DATA",811.8,90,100,911,0)
the Clinical Reminder namespace and may be assigned as necessary.  The 
"DATA",811.8,90,100,912,0)
option is [PXRM GEC REFERRAL REPORT] and may be added to the PXRM 
"DATA",811.8,90,100,913,0)
MANAGERS MENU.  The reports capture data elements for reporting and 
"DATA",811.8,90,100,914,0)
tracking use of the GEC Referral Screening Tool.   The reports may be 
"DATA",811.8,90,100,915,0)
generated in formatted or delimited output.  The Summary (Score) report 
"DATA",811.8,90,100,916,0)
provides summary (calculated) totals from specific sections of the 
"DATA",811.8,90,100,917,0)
screening tool identified by the Office of Geriatrics Extended Care.
"DATA",811.8,90,100,918,0)
 
"DATA",811.8,90,100,919,0)
VIII.   GEC Reminder Terms
"DATA",811.8,90,100,920,0)
Phase I of the GEC Referral project distributes a set of terms that will 
"DATA",811.8,90,100,921,0)
be used with Phase II.  Since Phase II has not yet been initiated, the 
"DATA",811.8,90,100,922,0)
functional requirements and design have not been identified.  However, it 
"DATA",811.8,90,100,923,0)
is expected to include the national roll-up of GEC screening data using 
"DATA",811.8,90,100,924,0)
the Generic Extract Utility released concurrently with Clinical Reminders 
"DATA",811.8,90,100,925,0)
v2.0.  To allow the greatest degree of flexibility in design, one 
"DATA",811.8,90,100,926,0)
reminder term is released for each GEC Referral health factor. The terms 
"DATA",811.8,90,100,927,0)
are mapped to the health factors on the VA-GEC REFERRAL reminder 
"DATA",811.8,90,100,928,0)
dialogs.  The terms will be installed silently and reside dormant until 
"DATA",811.8,90,100,929,0)
Phase II of the GEC Referral project is implemented.  The reminder 
"DATA",811.8,90,100,930,0)
definitions used with these terms will be deleted via post-install 
"DATA",811.8,90,100,931,0)
routine after installation.
"DATA",811.8,90,100,932,0)
 
"DATA",811.8,90,100,933,0)
IX.     Training
"DATA",811.8,90,100,934,0)
The Office of Geriatric Extended Care (OGEC) will establish a web site to 
"DATA",811.8,90,100,935,0)
provide training on the GEC screening tool.  This training module is 
"DATA",811.8,90,100,936,0)
being developed with assistance from Employee Education Service and built 
"DATA",811.8,90,100,937,0)
by ImageITS, a private firm.  The module will consist of an interactive 
"DATA",811.8,90,100,938,0)
tutorial and reference material.  OGEC will coordinate the training 
"DATA",811.8,90,100,939,0)
initiative and serve as the custodian of the web site's content.  
"DATA",811.8,90,100,940,0)
Facilities may contact OGEC to obtain the website's URL or for more 
"DATA",811.8,90,100,941,0)
information.   
"DATA",811.8,90,100,942,0)
811.9;+136,;31~(SEX)&(AGE)
"DATA",811.8,90,100,943,0)
811.9;+136,;32~2
"DATA",811.8,90,100,944,0)
811.9;+136,;33~SEX;AGE
"DATA",811.8,90,100,945,0)
811.9;+136,;36~0
"DATA",811.8,90,100,946,0)
811.9;+136,;40~0
"DATA",811.8,90,100,947,0)
811.9;+136,;42~0
"DATA",811.8,90,100,948,0)
811.9;+136,;51~VA-GEC REFERRAL CARE RECOMMENDATION
"DATA",811.8,90,100,949,0)
811.9;+136,;62~0
"DATA",811.8,90,100,950,0)
811.9;+136,;63~0
"DATA",811.8,90,100,951,0)
811.9;+136,;67~0
"DATA",811.8,90,100,952,0)
811.9;+136,;68~0
"DATA",811.8,90,100,953,0)
811.9;+136,;72~0
"DATA",811.8,90,100,954,0)
811.9;+136,;73~0
"DATA",811.8,90,100,955,0)
811.9;+136,;77~0
"DATA",811.8,90,100,956,0)
811.9;+136,;78~0
"DATA",811.8,90,100,957,0)
811.9;+136,;100~NATIONAL
"DATA",811.8,90,100,958,0)
811.9;+136,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,959,0)
811.9;+136,;103~C
"DATA",811.8,90,100,960,0)
811.9001;+137,+136,;.01~07/11/2005@14:13:52
"DATA",811.8,90,100,961,0)
811.9001;+137,+136,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,962,0)
811.9001;+137,+136,;2~WP-start~1
"DATA",811.8,90,100,963,0)
Exchange Stub
"DATA",811.8,90,100,964,0)
]]>
"DATA",811.8,90,100,965,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,966,0)
<IEN_ROOT>
"DATA",811.8,90,100,967,0)
<![CDATA[
"DATA",811.8,90,100,968,0)
137^1
"DATA",811.8,90,100,969,0)
]]>
"DATA",811.8,90,100,970,0)
</IEN_ROOT>
"DATA",811.8,90,100,971,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,972,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,973,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,974,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,975,0)
<POINT_01>VA-HDR GEC REQUIRED</POINT_01>
"DATA",811.8,90,100,976,0)
<INTERNAL_ENTRY_NUMBER>593</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,977,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,978,0)
<![CDATA[
"DATA",811.8,90,100,979,0)
801.41;+593,;.01~VA-HDR GEC REQUIRED
"DATA",811.8,90,100,980,0)
801.41;+593,;4~dialog element
"DATA",811.8,90,100,981,0)
801.41;+593,;13~OTHER
"DATA",811.8,90,100,982,0)
801.41;+593,;23~YES
"DATA",811.8,90,100,983,0)
801.41;+593,;25~WP-start~1
"DATA",811.8,90,100,984,0)
[An * indicates the section is required.]
"DATA",811.8,90,100,985,0)
801.41;+593,;51~SUPPRESS
"DATA",811.8,90,100,986,0)
801.41;+593,;100~NATIONAL
"DATA",811.8,90,100,987,0)
801.41;+593,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,988,0)
801.41;+593,;114~YES
"DATA",811.8,90,100,989,0)
801.44;+594,+593,;.01~07/11/2005@14:13:52
"DATA",811.8,90,100,990,0)
801.44;+594,+593,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,991,0)
801.44;+594,+593,;2~WP-start~1
"DATA",811.8,90,100,992,0)
Exchange Stub
"DATA",811.8,90,100,993,0)
]]>
"DATA",811.8,90,100,994,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,995,0)
<IEN_ROOT>
"DATA",811.8,90,100,996,0)
<![CDATA[
"DATA",811.8,90,100,997,0)
594^1
"DATA",811.8,90,100,998,0)
]]>
"DATA",811.8,90,100,999,0)
</IEN_ROOT>
"DATA",811.8,90,100,1000,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1001,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1002,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1003,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1004,0)
<POINT_01>VA-ORDER GEC REFERRAL CONSULT</POINT_01>
"DATA",811.8,90,100,1005,0)
<INTERNAL_ENTRY_NUMBER>647</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1006,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1007,0)
<![CDATA[
"DATA",811.8,90,100,1008,0)
801.41;+647,;.01~VA-ORDER GEC REFERRAL CONSULT
"DATA",811.8,90,100,1009,0)
801.41;+647,;4~dialog element
"DATA",811.8,90,100,1010,0)
801.41;+647,;13~ORDERED
"DATA",811.8,90,100,1011,0)
801.41;+647,;15~Q.GMRCT GEC
"DATA",811.8,90,100,1012,0)
801.41;+647,;25~WP-start~1
"DATA",811.8,90,100,1013,0)
Place Consult to Geriatrics/Extended Care
"DATA",811.8,90,100,1014,0)
801.41;+647,;35~WP-start~1
"DATA",811.8,90,100,1015,0)
Consult to Geriatrics/Extended Care ordered.
"DATA",811.8,90,100,1016,0)
801.41;+647,;100~NATIONAL
"DATA",811.8,90,100,1017,0)
801.41;+647,;114~YES
"DATA",811.8,90,100,1018,0)
801.44;+648,+647,;.01~07/11/2005@14:13:52
"DATA",811.8,90,100,1019,0)
801.44;+648,+647,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1020,0)
801.44;+648,+647,;2~WP-start~1
"DATA",811.8,90,100,1021,0)
Exchange Stub
"DATA",811.8,90,100,1022,0)
]]>
"DATA",811.8,90,100,1023,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1024,0)
<IEN_ROOT>
"DATA",811.8,90,100,1025,0)
<![CDATA[
"DATA",811.8,90,100,1026,0)
648^1
"DATA",811.8,90,100,1027,0)
]]>
"DATA",811.8,90,100,1028,0)
</IEN_ROOT>
"DATA",811.8,90,100,1029,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1030,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1031,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1032,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1033,0)
<POINT_01>VA-HF GEC INDEFINITE</POINT_01>
"DATA",811.8,90,100,1034,0)
<INTERNAL_ENTRY_NUMBER>649</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1035,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1036,0)
<![CDATA[
"DATA",811.8,90,100,1037,0)
801.41;+649,;.01~VA-HF GEC INDEFINITE
"DATA",811.8,90,100,1038,0)
801.41;+649,;4~dialog element
"DATA",811.8,90,100,1039,0)
801.41;+649,;13~OTHER
"DATA",811.8,90,100,1040,0)
801.41;+649,;15~HF.GEC INDEFINITE
"DATA",811.8,90,100,1041,0)
801.41;+649,;25~WP-start~1
"DATA",811.8,90,100,1042,0)
Indefinite
"DATA",811.8,90,100,1043,0)
801.41;+649,;100~NATIONAL
"DATA",811.8,90,100,1044,0)
801.41;+649,;114~YES
"DATA",811.8,90,100,1045,0)
801.44;+650,+649,;.01~07/11/2005@14:13:53
"DATA",811.8,90,100,1046,0)
801.44;+650,+649,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1047,0)
801.44;+650,+649,;2~WP-start~1
"DATA",811.8,90,100,1048,0)
Exchange Stub
"DATA",811.8,90,100,1049,0)
]]>
"DATA",811.8,90,100,1050,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1051,0)
<IEN_ROOT>
"DATA",811.8,90,100,1052,0)
<![CDATA[
"DATA",811.8,90,100,1053,0)
650^1
"DATA",811.8,90,100,1054,0)
]]>
"DATA",811.8,90,100,1055,0)
</IEN_ROOT>
"DATA",811.8,90,100,1056,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1057,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1058,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1059,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1060,0)
<POINT_01>VA-HF GEC 4-6 MONTHS</POINT_01>
"DATA",811.8,90,100,1061,0)
<INTERNAL_ENTRY_NUMBER>650</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1062,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1063,0)
<![CDATA[
"DATA",811.8,90,100,1064,0)
801.41;+650,;.01~VA-HF GEC 4-6 MONTHS
"DATA",811.8,90,100,1065,0)
801.41;+650,;4~dialog element
"DATA",811.8,90,100,1066,0)
801.41;+650,;13~OTHER
"DATA",811.8,90,100,1067,0)
801.41;+650,;15~HF.GEC 4-6 MONTHS
"DATA",811.8,90,100,1068,0)
801.41;+650,;25~WP-start~1
"DATA",811.8,90,100,1069,0)
4-6 months
"DATA",811.8,90,100,1070,0)
801.41;+650,;100~NATIONAL
"DATA",811.8,90,100,1071,0)
801.41;+650,;114~YES
"DATA",811.8,90,100,1072,0)
801.44;+651,+650,;.01~07/11/2005@14:13:53
"DATA",811.8,90,100,1073,0)
801.44;+651,+650,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1074,0)
801.44;+651,+650,;2~WP-start~1
"DATA",811.8,90,100,1075,0)
Exchange Stub
"DATA",811.8,90,100,1076,0)
]]>
"DATA",811.8,90,100,1077,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1078,0)
<IEN_ROOT>
"DATA",811.8,90,100,1079,0)
<![CDATA[
"DATA",811.8,90,100,1080,0)
651^1
"DATA",811.8,90,100,1081,0)
]]>
"DATA",811.8,90,100,1082,0)
</IEN_ROOT>
"DATA",811.8,90,100,1083,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1084,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1085,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1086,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1087,0)
<POINT_01>VA-HF GEC 2-3 MONTHS</POINT_01>
"DATA",811.8,90,100,1088,0)
<INTERNAL_ENTRY_NUMBER>651</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1089,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1090,0)
<![CDATA[
"DATA",811.8,90,100,1091,0)
801.41;+651,;.01~VA-HF GEC 2-3 MONTHS
"DATA",811.8,90,100,1092,0)
801.41;+651,;4~dialog element
"DATA",811.8,90,100,1093,0)
801.41;+651,;13~OTHER
"DATA",811.8,90,100,1094,0)
801.41;+651,;15~HF.GEC 2-3 MONTHS
"DATA",811.8,90,100,1095,0)
801.41;+651,;25~WP-start~1
"DATA",811.8,90,100,1096,0)
2-3 months
"DATA",811.8,90,100,1097,0)
801.41;+651,;100~NATIONAL
"DATA",811.8,90,100,1098,0)
801.41;+651,;114~YES
"DATA",811.8,90,100,1099,0)
801.44;+652,+651,;.01~07/11/2005@14:13:54
"DATA",811.8,90,100,1100,0)
801.44;+652,+651,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1101,0)
801.44;+652,+651,;2~WP-start~1
"DATA",811.8,90,100,1102,0)
Exchange Stub
"DATA",811.8,90,100,1103,0)
]]>
"DATA",811.8,90,100,1104,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1105,0)
<IEN_ROOT>
"DATA",811.8,90,100,1106,0)
<![CDATA[
"DATA",811.8,90,100,1107,0)
652^1
"DATA",811.8,90,100,1108,0)
]]>
"DATA",811.8,90,100,1109,0)
</IEN_ROOT>
"DATA",811.8,90,100,1110,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1111,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1112,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1113,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1114,0)
<POINT_01>VA-HF GEC ONE MONTH</POINT_01>
"DATA",811.8,90,100,1115,0)
<INTERNAL_ENTRY_NUMBER>652</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1116,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1117,0)
<![CDATA[
"DATA",811.8,90,100,1118,0)
801.41;+652,;.01~VA-HF GEC ONE MONTH
"DATA",811.8,90,100,1119,0)
801.41;+652,;4~dialog element
"DATA",811.8,90,100,1120,0)
801.41;+652,;13~OTHER
"DATA",811.8,90,100,1121,0)
801.41;+652,;15~HF.GEC ONE MONTH
"DATA",811.8,90,100,1122,0)
801.41;+652,;25~WP-start~1
"DATA",811.8,90,100,1123,0)
One month
"DATA",811.8,90,100,1124,0)
801.41;+652,;100~NATIONAL
"DATA",811.8,90,100,1125,0)
801.41;+652,;114~YES
"DATA",811.8,90,100,1126,0)
801.44;+653,+652,;.01~07/11/2005@14:13:54
"DATA",811.8,90,100,1127,0)
801.44;+653,+652,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1128,0)
801.44;+653,+652,;2~WP-start~1
"DATA",811.8,90,100,1129,0)
Exchange Stub
"DATA",811.8,90,100,1130,0)
]]>
"DATA",811.8,90,100,1131,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1132,0)
<IEN_ROOT>
"DATA",811.8,90,100,1133,0)
<![CDATA[
"DATA",811.8,90,100,1134,0)
653^1
"DATA",811.8,90,100,1135,0)
]]>
"DATA",811.8,90,100,1136,0)
</IEN_ROOT>
"DATA",811.8,90,100,1137,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1138,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1139,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1140,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1141,0)
<POINT_01>VA-HF GEC 2-3 WEEKS</POINT_01>
"DATA",811.8,90,100,1142,0)
<INTERNAL_ENTRY_NUMBER>653</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1143,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1144,0)
<![CDATA[
"DATA",811.8,90,100,1145,0)
801.41;+653,;.01~VA-HF GEC 2-3 WEEKS
"DATA",811.8,90,100,1146,0)
801.41;+653,;4~dialog element
"DATA",811.8,90,100,1147,0)
801.41;+653,;13~OTHER
"DATA",811.8,90,100,1148,0)
801.41;+653,;15~HF.GEC 2-3 WEEKS
"DATA",811.8,90,100,1149,0)
801.41;+653,;25~WP-start~1
"DATA",811.8,90,100,1150,0)
2-3 weeks
"DATA",811.8,90,100,1151,0)
801.41;+653,;100~NATIONAL
"DATA",811.8,90,100,1152,0)
801.41;+653,;114~YES
"DATA",811.8,90,100,1153,0)
801.44;+654,+653,;.01~07/11/2005@14:13:54
"DATA",811.8,90,100,1154,0)
801.44;+654,+653,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1155,0)
801.44;+654,+653,;2~WP-start~1
"DATA",811.8,90,100,1156,0)
Exchange Stub
"DATA",811.8,90,100,1157,0)
]]>
"DATA",811.8,90,100,1158,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1159,0)
<IEN_ROOT>
"DATA",811.8,90,100,1160,0)
<![CDATA[
"DATA",811.8,90,100,1161,0)
654^1
"DATA",811.8,90,100,1162,0)
]]>
"DATA",811.8,90,100,1163,0)
</IEN_ROOT>
"DATA",811.8,90,100,1164,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1165,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1166,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1167,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1168,0)
<POINT_01>VA-HF GEC ONE WEEK</POINT_01>
"DATA",811.8,90,100,1169,0)
<INTERNAL_ENTRY_NUMBER>654</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1170,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1171,0)
<![CDATA[
"DATA",811.8,90,100,1172,0)
801.41;+654,;.01~VA-HF GEC ONE WEEK
"DATA",811.8,90,100,1173,0)
801.41;+654,;4~dialog element
"DATA",811.8,90,100,1174,0)
801.41;+654,;13~OTHER
"DATA",811.8,90,100,1175,0)
801.41;+654,;15~HF.GEC ONE WEEK OR LESS
"DATA",811.8,90,100,1176,0)
801.41;+654,;25~WP-start~1
"DATA",811.8,90,100,1177,0)
One week
"DATA",811.8,90,100,1178,0)
801.41;+654,;100~NATIONAL
"DATA",811.8,90,100,1179,0)
801.41;+654,;114~YES
"DATA",811.8,90,100,1180,0)
801.44;+655,+654,;.01~07/11/2005@14:13:54
"DATA",811.8,90,100,1181,0)
801.44;+655,+654,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1182,0)
801.44;+655,+654,;2~WP-start~1
"DATA",811.8,90,100,1183,0)
Exchange Stub
"DATA",811.8,90,100,1184,0)
]]>
"DATA",811.8,90,100,1185,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1186,0)
<IEN_ROOT>
"DATA",811.8,90,100,1187,0)
<![CDATA[
"DATA",811.8,90,100,1188,0)
655^1
"DATA",811.8,90,100,1189,0)
]]>
"DATA",811.8,90,100,1190,0)
</IEN_ROOT>
"DATA",811.8,90,100,1191,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1192,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1193,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1194,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1195,0)
<POINT_01>VA-DG GEC ESTIMATED DURATION OF SERVICES</POINT_01>
"DATA",811.8,90,100,1196,0)
<INTERNAL_ENTRY_NUMBER>663001019</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1197,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1198,0)
<![CDATA[
"DATA",811.8,90,100,1199,0)
801.41;+663001019,;.01~VA-DG GEC ESTIMATED DURATION OF SERVICES
"DATA",811.8,90,100,1200,0)
801.41;+663001019,;4~dialog group
"DATA",811.8,90,100,1201,0)
801.41;+663001019,;6~YES
"DATA",811.8,90,100,1202,0)
801.41;+663001019,;7~2
"DATA",811.8,90,100,1203,0)
801.41;+663001019,;9~ONE SELECTION ONLY
"DATA",811.8,90,100,1204,0)
801.41;+663001019,;13~OTHER
"DATA",811.8,90,100,1205,0)
801.41;+663001019,;23~NO
"DATA",811.8,90,100,1206,0)
801.41;+663001019,;25~WP-start~1
"DATA",811.8,90,100,1207,0)
*ESTIMATED DURATION OF SERVICES
"DATA",811.8,90,100,1208,0)
801.41;+663001019,;35~WP-start~1
"DATA",811.8,90,100,1209,0)
ESTIMATED DURATION OF SERVICES:
"DATA",811.8,90,100,1210,0)
801.41;+663001019,;50~SHOW
"DATA",811.8,90,100,1211,0)
801.41;+663001019,;51~SUPPRESS
"DATA",811.8,90,100,1212,0)
801.41;+663001019,;52~INDENT
"DATA",811.8,90,100,1213,0)
801.41;+663001019,;100~NATIONAL
"DATA",811.8,90,100,1214,0)
801.41;+663001019,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,1215,0)
801.41;+663001019,;114~YES
"DATA",811.8,90,100,1216,0)
801.412;+663001020,+663001019,;.01~5
"DATA",811.8,90,100,1217,0)
801.412;+663001020,+663001019,;2~VA-HF GEC ONE WEEK
"DATA",811.8,90,100,1218,0)
801.412;+663001021,+663001019,;.01~10
"DATA",811.8,90,100,1219,0)
801.412;+663001021,+663001019,;2~VA-HF GEC 2-3 WEEKS
"DATA",811.8,90,100,1220,0)
801.412;+663001022,+663001019,;.01~15
"DATA",811.8,90,100,1221,0)
801.412;+663001022,+663001019,;2~VA-HF GEC ONE MONTH
"DATA",811.8,90,100,1222,0)
801.412;+663001023,+663001019,;.01~20
"DATA",811.8,90,100,1223,0)
801.412;+663001023,+663001019,;2~VA-HF GEC 2-3 MONTHS
"DATA",811.8,90,100,1224,0)
801.412;+663001024,+663001019,;.01~25
"DATA",811.8,90,100,1225,0)
801.412;+663001024,+663001019,;2~VA-HF GEC 4-6 MONTHS
"DATA",811.8,90,100,1226,0)
801.412;+663001025,+663001019,;.01~30
"DATA",811.8,90,100,1227,0)
801.412;+663001025,+663001019,;2~VA-HF GEC INDEFINITE
"DATA",811.8,90,100,1228,0)
801.44;+663001026,+663001019,;.01~07/11/2005@14:13:55
"DATA",811.8,90,100,1229,0)
801.44;+663001026,+663001019,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1230,0)
801.44;+663001026,+663001019,;2~WP-start~1
"DATA",811.8,90,100,1231,0)
Exchange Stub
"DATA",811.8,90,100,1232,0)
]]>
"DATA",811.8,90,100,1233,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1234,0)
<IEN_ROOT>
"DATA",811.8,90,100,1235,0)
<![CDATA[
"DATA",811.8,90,100,1236,0)
663001020^1
"DATA",811.8,90,100,1237,0)
663001021^2
"DATA",811.8,90,100,1238,0)
663001022^3
"DATA",811.8,90,100,1239,0)
663001023^4
"DATA",811.8,90,100,1240,0)
663001024^5
"DATA",811.8,90,100,1241,0)
663001025^6
"DATA",811.8,90,100,1242,0)
663001026^1
"DATA",811.8,90,100,1243,0)
]]>
"DATA",811.8,90,100,1244,0)
</IEN_ROOT>
"DATA",811.8,90,100,1245,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1246,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1247,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1248,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1249,0)
<POINT_01>VA-HF GEC HOME TELEHEALTH (REFERRING TO)</POINT_01>
"DATA",811.8,90,100,1250,0)
<INTERNAL_ENTRY_NUMBER>1066</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1251,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1252,0)
<![CDATA[
"DATA",811.8,90,100,1253,0)
801.41;+1066,;.01~VA-HF GEC HOME TELEHEALTH (REFERRING TO)
"DATA",811.8,90,100,1254,0)
801.41;+1066,;4~dialog element
"DATA",811.8,90,100,1255,0)
801.41;+1066,;13~OTHER
"DATA",811.8,90,100,1256,0)
801.41;+1066,;15~HF.GEC HOME TELEHEALTH (REFERRING TO)
"DATA",811.8,90,100,1257,0)
801.41;+1066,;25~WP-start~1
"DATA",811.8,90,100,1258,0)
Home Telehealth
"DATA",811.8,90,100,1259,0)
801.41;+1066,;100~NATIONAL
"DATA",811.8,90,100,1260,0)
801.41;+1066,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,1261,0)
801.44;+1067,+1066,;.01~07/11/2005@14:13:55
"DATA",811.8,90,100,1262,0)
801.44;+1067,+1066,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1263,0)
801.44;+1067,+1066,;2~WP-start~1
"DATA",811.8,90,100,1264,0)
Exchange Stub
"DATA",811.8,90,100,1265,0)
]]>
"DATA",811.8,90,100,1266,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1267,0)
<IEN_ROOT>
"DATA",811.8,90,100,1268,0)
<![CDATA[
"DATA",811.8,90,100,1269,0)
1067^1
"DATA",811.8,90,100,1270,0)
]]>
"DATA",811.8,90,100,1271,0)
</IEN_ROOT>
"DATA",811.8,90,100,1272,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1273,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1274,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1275,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1276,0)
<POINT_01>VA-HF GEC OUTPATIENT PALLIATIVE/HOSPICE (HOME)</POINT_01>
"DATA",811.8,90,100,1277,0)
<INTERNAL_ENTRY_NUMBER>1035</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1278,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1279,0)
<![CDATA[
"DATA",811.8,90,100,1280,0)
801.41;+1035,;.01~VA-HF GEC OUTPATIENT PALLIATIVE/HOSPICE (HOME)
"DATA",811.8,90,100,1281,0)
801.41;+1035,;4~dialog element
"DATA",811.8,90,100,1282,0)
801.41;+1035,;13~OTHER
"DATA",811.8,90,100,1283,0)
801.41;+1035,;15~HF.GEC OUTPATIENT PALLIATIVE/HOSPICE (HOME)
"DATA",811.8,90,100,1284,0)
801.41;+1035,;25~WP-start~1
"DATA",811.8,90,100,1285,0)
Outpatient Palliative/Hospice Care (Home)
"DATA",811.8,90,100,1286,0)
801.41;+1035,;100~NATIONAL
"DATA",811.8,90,100,1287,0)
801.41;+1035,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,1288,0)
801.41;+1035,;114~YES
"DATA",811.8,90,100,1289,0)
801.44;+1036,+1035,;.01~07/11/2005@14:13:55
"DATA",811.8,90,100,1290,0)
801.44;+1036,+1035,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1291,0)
801.44;+1036,+1035,;2~WP-start~1
"DATA",811.8,90,100,1292,0)
Exchange Stub
"DATA",811.8,90,100,1293,0)
]]>
"DATA",811.8,90,100,1294,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1295,0)
<IEN_ROOT>
"DATA",811.8,90,100,1296,0)
<![CDATA[
"DATA",811.8,90,100,1297,0)
1036^1
"DATA",811.8,90,100,1298,0)
]]>
"DATA",811.8,90,100,1299,0)
</IEN_ROOT>
"DATA",811.8,90,100,1300,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1301,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1302,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1303,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1304,0)
<POINT_01>VA-HF GEC DOMICILIARY CARE</POINT_01>
"DATA",811.8,90,100,1305,0)
<INTERNAL_ENTRY_NUMBER>663001028</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1306,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1307,0)
<![CDATA[
"DATA",811.8,90,100,1308,0)
801.41;+663001028,;.01~VA-HF GEC DOMICILIARY CARE
"DATA",811.8,90,100,1309,0)
801.41;+663001028,;4~dialog element
"DATA",811.8,90,100,1310,0)
801.41;+663001028,;13~OTHER
"DATA",811.8,90,100,1311,0)
801.41;+663001028,;15~HF.GEC DOMICILIARY CARE
"DATA",811.8,90,100,1312,0)
801.41;+663001028,;25~WP-start~1
"DATA",811.8,90,100,1313,0)
Domiciliary care
"DATA",811.8,90,100,1314,0)
801.41;+663001028,;100~NATIONAL
"DATA",811.8,90,100,1315,0)
801.41;+663001028,;114~YES
"DATA",811.8,90,100,1316,0)
801.44;+663001029,+663001028,;.01~07/11/2005@14:13:56
"DATA",811.8,90,100,1317,0)
801.44;+663001029,+663001028,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1318,0)
801.44;+663001029,+663001028,;2~WP-start~1
"DATA",811.8,90,100,1319,0)
Exchange Stub
"DATA",811.8,90,100,1320,0)
]]>
"DATA",811.8,90,100,1321,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1322,0)
<IEN_ROOT>
"DATA",811.8,90,100,1323,0)
<![CDATA[
"DATA",811.8,90,100,1324,0)
663001029^1
"DATA",811.8,90,100,1325,0)
]]>
"DATA",811.8,90,100,1326,0)
</IEN_ROOT>
"DATA",811.8,90,100,1327,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1328,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1329,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1330,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1331,0)
<POINT_01>VA-HF GEC REFERRING TO OTHER PROGRAM</POINT_01>
"DATA",811.8,90,100,1332,0)
<INTERNAL_ENTRY_NUMBER>927</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1333,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1334,0)
<![CDATA[
"DATA",811.8,90,100,1335,0)
801.41;+927,;.01~VA-HF GEC REFERRING TO OTHER PROGRAM
"DATA",811.8,90,100,1336,0)
801.41;+927,;4~dialog element
"DATA",811.8,90,100,1337,0)
801.41;+927,;13~OTHER
"DATA",811.8,90,100,1338,0)
801.41;+927,;15~HF.GEC OTHER REFERRAL PROGRAM(REFERRING TO)
"DATA",811.8,90,100,1339,0)
801.41;+927,;25~WP-start~1
"DATA",811.8,90,100,1340,0)
Other: 
"DATA",811.8,90,100,1341,0)
801.41;+927,;100~NATIONAL
"DATA",811.8,90,100,1342,0)
801.41;+927,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,1343,0)
801.41;+927,;114~YES
"DATA",811.8,90,100,1344,0)
801.412;+928,+927,;.01~5
"DATA",811.8,90,100,1345,0)
801.412;+928,+927,;2~PXRM COMMENT
"DATA",811.8,90,100,1346,0)
801.412;+928,+927,;6~   
"DATA",811.8,90,100,1347,0)
801.412;+928,+927,;9~YES
"DATA",811.8,90,100,1348,0)
801.44;+929,+927,;.01~07/11/2005@14:13:56
"DATA",811.8,90,100,1349,0)
801.44;+929,+927,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1350,0)
801.44;+929,+927,;2~WP-start~1
"DATA",811.8,90,100,1351,0)
Exchange Stub
"DATA",811.8,90,100,1352,0)
]]>
"DATA",811.8,90,100,1353,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1354,0)
<IEN_ROOT>
"DATA",811.8,90,100,1355,0)
<![CDATA[
"DATA",811.8,90,100,1356,0)
928^1
"DATA",811.8,90,100,1357,0)
929^1
"DATA",811.8,90,100,1358,0)
]]>
"DATA",811.8,90,100,1359,0)
</IEN_ROOT>
"DATA",811.8,90,100,1360,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1361,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1362,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1363,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1364,0)
<POINT_01>VA-HF GEC ALL INCLUSIVE CARE/PACE PROGRAM</POINT_01>
"DATA",811.8,90,100,1365,0)
<INTERNAL_ENTRY_NUMBER>663001021</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1366,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1367,0)
<![CDATA[
"DATA",811.8,90,100,1368,0)
801.41;+663001021,;.01~VA-HF GEC ALL INCLUSIVE CARE/PACE PROGRAM
"DATA",811.8,90,100,1369,0)
801.41;+663001021,;4~dialog element
"DATA",811.8,90,100,1370,0)
801.41;+663001021,;13~OTHER
"DATA",811.8,90,100,1371,0)
801.41;+663001021,;15~HF.GEC ALL INCLUSIVE CARE/PACE PROGRAM
"DATA",811.8,90,100,1372,0)
801.41;+663001021,;25~WP-start~1
"DATA",811.8,90,100,1373,0)
All-inclusive care or PACE program
"DATA",811.8,90,100,1374,0)
801.41;+663001021,;100~NATIONAL
"DATA",811.8,90,100,1375,0)
801.41;+663001021,;114~YES
"DATA",811.8,90,100,1376,0)
801.44;+663001022,+663001021,;.01~07/11/2005@14:13:56
"DATA",811.8,90,100,1377,0)
801.44;+663001022,+663001021,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1378,0)
801.44;+663001022,+663001021,;2~WP-start~1
"DATA",811.8,90,100,1379,0)
Exchange Stub
"DATA",811.8,90,100,1380,0)
]]>
"DATA",811.8,90,100,1381,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1382,0)
<IEN_ROOT>
"DATA",811.8,90,100,1383,0)
<![CDATA[
"DATA",811.8,90,100,1384,0)
663001022^1
"DATA",811.8,90,100,1385,0)
]]>
"DATA",811.8,90,100,1386,0)
</IEN_ROOT>
"DATA",811.8,90,100,1387,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1388,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1389,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1390,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1391,0)
<POINT_01>VA-HF GEC INPATIENT PALLIATIVE/HOSPICE (NHCU)</POINT_01>
"DATA",811.8,90,100,1392,0)
<INTERNAL_ENTRY_NUMBER>663001022</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1393,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1394,0)
<![CDATA[
"DATA",811.8,90,100,1395,0)
801.41;+663001022,;.01~VA-HF GEC INPATIENT PALLIATIVE/HOSPICE (NHCU)
"DATA",811.8,90,100,1396,0)
801.41;+663001022,;4~dialog element
"DATA",811.8,90,100,1397,0)
801.41;+663001022,;13~OTHER
"DATA",811.8,90,100,1398,0)
801.41;+663001022,;15~HF.GEC INPATIENT PALLIATIVE/HOSPICE (NHCU)
"DATA",811.8,90,100,1399,0)
801.41;+663001022,;25~WP-start~1
"DATA",811.8,90,100,1400,0)
Inpatient Palliative/Hospice Care (NHCU)
"DATA",811.8,90,100,1401,0)
801.41;+663001022,;100~NATIONAL
"DATA",811.8,90,100,1402,0)
801.41;+663001022,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,1403,0)
801.41;+663001022,;114~YES
"DATA",811.8,90,100,1404,0)
801.44;+663001023,+663001022,;.01~07/11/2005@14:13:56
"DATA",811.8,90,100,1405,0)
801.44;+663001023,+663001022,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1406,0)
801.44;+663001023,+663001022,;2~WP-start~1
"DATA",811.8,90,100,1407,0)
Exchange Stub
"DATA",811.8,90,100,1408,0)
]]>
"DATA",811.8,90,100,1409,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1410,0)
<IEN_ROOT>
"DATA",811.8,90,100,1411,0)
<![CDATA[
"DATA",811.8,90,100,1412,0)
663001023^1
"DATA",811.8,90,100,1413,0)
]]>
"DATA",811.8,90,100,1414,0)
</IEN_ROOT>
"DATA",811.8,90,100,1415,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1416,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1417,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1418,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1419,0)
<POINT_01>VA-HF GEC SPECIALIZED DEMENTIA/GEROPSYCH CARE</POINT_01>
"DATA",811.8,90,100,1420,0)
<INTERNAL_ENTRY_NUMBER>663001023</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1421,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1422,0)
<![CDATA[
"DATA",811.8,90,100,1423,0)
801.41;+663001023,;.01~VA-HF GEC SPECIALIZED DEMENTIA/GEROPSYCH CARE
"DATA",811.8,90,100,1424,0)
801.41;+663001023,;4~dialog element
"DATA",811.8,90,100,1425,0)
801.41;+663001023,;13~OTHER
"DATA",811.8,90,100,1426,0)
801.41;+663001023,;15~HF.GEC SPECIALIZED DEMENTIA/GEROPSYCH CARE
"DATA",811.8,90,100,1427,0)
801.41;+663001023,;25~WP-start~1
"DATA",811.8,90,100,1428,0)
Specialized Dementia/Geropsych Care
"DATA",811.8,90,100,1429,0)
801.41;+663001023,;100~NATIONAL
"DATA",811.8,90,100,1430,0)
801.41;+663001023,;114~YES
"DATA",811.8,90,100,1431,0)
801.44;+663001024,+663001023,;.01~07/11/2005@14:13:56
"DATA",811.8,90,100,1432,0)
801.44;+663001024,+663001023,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1433,0)
801.44;+663001024,+663001023,;2~WP-start~1
"DATA",811.8,90,100,1434,0)
Exchange Stub
"DATA",811.8,90,100,1435,0)
]]>
"DATA",811.8,90,100,1436,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1437,0)
<IEN_ROOT>
"DATA",811.8,90,100,1438,0)
<![CDATA[
"DATA",811.8,90,100,1439,0)
663001024^1
"DATA",811.8,90,100,1440,0)
]]>
"DATA",811.8,90,100,1441,0)
</IEN_ROOT>
"DATA",811.8,90,100,1442,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1443,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1444,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1445,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1446,0)
<POINT_01>VA-HF GEC RESPITE CARE OUTPATIENT</POINT_01>
"DATA",811.8,90,100,1447,0)
<INTERNAL_ENTRY_NUMBER>663001024</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1448,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1449,0)
<![CDATA[
"DATA",811.8,90,100,1450,0)
801.41;+663001024,;.01~VA-HF GEC RESPITE CARE OUTPATIENT
"DATA",811.8,90,100,1451,0)
801.41;+663001024,;4~dialog element
"DATA",811.8,90,100,1452,0)
801.41;+663001024,;13~OTHER
"DATA",811.8,90,100,1453,0)
801.41;+663001024,;15~HF.GEC RESPITE CARE OUTPATIENT
"DATA",811.8,90,100,1454,0)
801.41;+663001024,;25~WP-start~1
"DATA",811.8,90,100,1455,0)
Outpatient Respite Care
"DATA",811.8,90,100,1456,0)
801.41;+663001024,;100~NATIONAL
"DATA",811.8,90,100,1457,0)
801.41;+663001024,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,1458,0)
801.41;+663001024,;114~YES
"DATA",811.8,90,100,1459,0)
801.44;+663001025,+663001024,;.01~07/11/2005@14:13:56
"DATA",811.8,90,100,1460,0)
801.44;+663001025,+663001024,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1461,0)
801.44;+663001025,+663001024,;2~WP-start~1
"DATA",811.8,90,100,1462,0)
Exchange Stub
"DATA",811.8,90,100,1463,0)
]]>
"DATA",811.8,90,100,1464,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1465,0)
<IEN_ROOT>
"DATA",811.8,90,100,1466,0)
<![CDATA[
"DATA",811.8,90,100,1467,0)
663001025^1
"DATA",811.8,90,100,1468,0)
]]>
"DATA",811.8,90,100,1469,0)
</IEN_ROOT>
"DATA",811.8,90,100,1470,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1471,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1472,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1473,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1474,0)
<POINT_01>VA-HF GEC RESPITE CARE INPATIENT</POINT_01>
"DATA",811.8,90,100,1475,0)
<INTERNAL_ENTRY_NUMBER>663001025</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1476,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1477,0)
<![CDATA[
"DATA",811.8,90,100,1478,0)
801.41;+663001025,;.01~VA-HF GEC RESPITE CARE INPATIENT
"DATA",811.8,90,100,1479,0)
801.41;+663001025,;4~dialog element
"DATA",811.8,90,100,1480,0)
801.41;+663001025,;13~OTHER
"DATA",811.8,90,100,1481,0)
801.41;+663001025,;15~HF.GEC RESPITE CARE INPATIENT
"DATA",811.8,90,100,1482,0)
801.41;+663001025,;25~WP-start~1
"DATA",811.8,90,100,1483,0)
Inpatient Respite Care
"DATA",811.8,90,100,1484,0)
801.41;+663001025,;100~NATIONAL
"DATA",811.8,90,100,1485,0)
801.41;+663001025,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,1486,0)
801.41;+663001025,;114~YES
"DATA",811.8,90,100,1487,0)
801.44;+663001026,+663001025,;.01~07/11/2005@14:13:56
"DATA",811.8,90,100,1488,0)
801.44;+663001026,+663001025,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1489,0)
801.44;+663001026,+663001025,;2~WP-start~1
"DATA",811.8,90,100,1490,0)
Exchange Stub
"DATA",811.8,90,100,1491,0)
]]>
"DATA",811.8,90,100,1492,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1493,0)
<IEN_ROOT>
"DATA",811.8,90,100,1494,0)
<![CDATA[
"DATA",811.8,90,100,1495,0)
663001026^1
"DATA",811.8,90,100,1496,0)
]]>
"DATA",811.8,90,100,1497,0)
</IEN_ROOT>
"DATA",811.8,90,100,1498,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1499,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1500,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1501,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1502,0)
<POINT_01>VA-HF GEC LONG TERM NURSING HOME CARE</POINT_01>
"DATA",811.8,90,100,1503,0)
<INTERNAL_ENTRY_NUMBER>663001026</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1504,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1505,0)
<![CDATA[
"DATA",811.8,90,100,1506,0)
801.41;+663001026,;.01~VA-HF GEC LONG TERM NURSING HOME CARE
"DATA",811.8,90,100,1507,0)
801.41;+663001026,;4~dialog element
"DATA",811.8,90,100,1508,0)
801.41;+663001026,;13~OTHER
"DATA",811.8,90,100,1509,0)
801.41;+663001026,;15~HF.GEC LONG TERM NURSING HOME CARE
"DATA",811.8,90,100,1510,0)
801.41;+663001026,;25~WP-start~1
"DATA",811.8,90,100,1511,0)
Long-term nursing home care
"DATA",811.8,90,100,1512,0)
801.41;+663001026,;100~NATIONAL
"DATA",811.8,90,100,1513,0)
801.41;+663001026,;114~YES
"DATA",811.8,90,100,1514,0)
801.44;+663001027,+663001026,;.01~07/11/2005@14:13:56
"DATA",811.8,90,100,1515,0)
801.44;+663001027,+663001026,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1516,0)
801.44;+663001027,+663001026,;2~WP-start~1
"DATA",811.8,90,100,1517,0)
Exchange Stub
"DATA",811.8,90,100,1518,0)
]]>
"DATA",811.8,90,100,1519,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1520,0)
<IEN_ROOT>
"DATA",811.8,90,100,1521,0)
<![CDATA[
"DATA",811.8,90,100,1522,0)
663001027^1
"DATA",811.8,90,100,1523,0)
]]>
"DATA",811.8,90,100,1524,0)
</IEN_ROOT>
"DATA",811.8,90,100,1525,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1526,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1527,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1528,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1529,0)
<POINT_01>VA-HF GEC SHORT TERM NURSING HOME CARE</POINT_01>
"DATA",811.8,90,100,1530,0)
<INTERNAL_ENTRY_NUMBER>663001027</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1531,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1532,0)
<![CDATA[
"DATA",811.8,90,100,1533,0)
801.41;+663001027,;.01~VA-HF GEC SHORT TERM NURSING HOME CARE
"DATA",811.8,90,100,1534,0)
801.41;+663001027,;4~dialog element
"DATA",811.8,90,100,1535,0)
801.41;+663001027,;13~OTHER
"DATA",811.8,90,100,1536,0)
801.41;+663001027,;15~HF.GEC SHORT TERM NURSING HOME CARE
"DATA",811.8,90,100,1537,0)
801.41;+663001027,;25~WP-start~1
"DATA",811.8,90,100,1538,0)
Short-term nursing home care (subacute care, rehab)
"DATA",811.8,90,100,1539,0)
801.41;+663001027,;100~NATIONAL
"DATA",811.8,90,100,1540,0)
801.41;+663001027,;114~YES
"DATA",811.8,90,100,1541,0)
801.44;+663001028,+663001027,;.01~07/11/2005@14:13:56
"DATA",811.8,90,100,1542,0)
801.44;+663001028,+663001027,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1543,0)
801.44;+663001028,+663001027,;2~WP-start~1
"DATA",811.8,90,100,1544,0)
Exchange Stub
"DATA",811.8,90,100,1545,0)
]]>
"DATA",811.8,90,100,1546,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1547,0)
<IEN_ROOT>
"DATA",811.8,90,100,1548,0)
<![CDATA[
"DATA",811.8,90,100,1549,0)
663001028^1
"DATA",811.8,90,100,1550,0)
]]>
"DATA",811.8,90,100,1551,0)
</IEN_ROOT>
"DATA",811.8,90,100,1552,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1553,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1554,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1555,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1556,0)
<POINT_01>VA-HF GEC ASSISTED LIVING (REFERRING TO)</POINT_01>
"DATA",811.8,90,100,1557,0)
<INTERNAL_ENTRY_NUMBER>663001029</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1558,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1559,0)
<![CDATA[
"DATA",811.8,90,100,1560,0)
801.41;+663001029,;.01~VA-HF GEC ASSISTED LIVING (REFERRING TO)
"DATA",811.8,90,100,1561,0)
801.41;+663001029,;4~dialog element
"DATA",811.8,90,100,1562,0)
801.41;+663001029,;13~OTHER
"DATA",811.8,90,100,1563,0)
801.41;+663001029,;15~HF.GEC ASSISTED LIVING (REFERRING TO)
"DATA",811.8,90,100,1564,0)
801.41;+663001029,;25~WP-start~1
"DATA",811.8,90,100,1565,0)
Assisted Living
"DATA",811.8,90,100,1566,0)
801.41;+663001029,;100~NATIONAL
"DATA",811.8,90,100,1567,0)
801.41;+663001029,;114~YES
"DATA",811.8,90,100,1568,0)
801.44;+663001030,+663001029,;.01~07/11/2005@14:13:57
"DATA",811.8,90,100,1569,0)
801.44;+663001030,+663001029,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1570,0)
801.44;+663001030,+663001029,;2~WP-start~1
"DATA",811.8,90,100,1571,0)
Exchange Stub
"DATA",811.8,90,100,1572,0)
]]>
"DATA",811.8,90,100,1573,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1574,0)
<IEN_ROOT>
"DATA",811.8,90,100,1575,0)
<![CDATA[
"DATA",811.8,90,100,1576,0)
663001030^1
"DATA",811.8,90,100,1577,0)
]]>
"DATA",811.8,90,100,1578,0)
</IEN_ROOT>
"DATA",811.8,90,100,1579,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1580,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1581,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1582,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1583,0)
<POINT_01>VA-HF GEC RESIDENTIAL CARE (SUPERVISED LIVING)</POINT_01>
"DATA",811.8,90,100,1584,0)
<INTERNAL_ENTRY_NUMBER>663001030</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1585,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1586,0)
<![CDATA[
"DATA",811.8,90,100,1587,0)
801.41;+663001030,;.01~VA-HF GEC RESIDENTIAL CARE (SUPERVISED LIVING)
"DATA",811.8,90,100,1588,0)
801.41;+663001030,;4~dialog element
"DATA",811.8,90,100,1589,0)
801.41;+663001030,;13~OTHER
"DATA",811.8,90,100,1590,0)
801.41;+663001030,;15~HF.GEC RESIDENTIAL CARE (SUPERVISED LIVING)
"DATA",811.8,90,100,1591,0)
801.41;+663001030,;25~WP-start~1
"DATA",811.8,90,100,1592,0)
Residential care (supervised living)
"DATA",811.8,90,100,1593,0)
801.41;+663001030,;100~NATIONAL
"DATA",811.8,90,100,1594,0)
801.41;+663001030,;114~YES
"DATA",811.8,90,100,1595,0)
801.44;+663001031,+663001030,;.01~07/11/2005@14:13:57
"DATA",811.8,90,100,1596,0)
801.44;+663001031,+663001030,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1597,0)
801.44;+663001031,+663001030,;2~WP-start~1
"DATA",811.8,90,100,1598,0)
Exchange Stub
"DATA",811.8,90,100,1599,0)
]]>
"DATA",811.8,90,100,1600,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1601,0)
<IEN_ROOT>
"DATA",811.8,90,100,1602,0)
<![CDATA[
"DATA",811.8,90,100,1603,0)
663001031^1
"DATA",811.8,90,100,1604,0)
]]>
"DATA",811.8,90,100,1605,0)
</IEN_ROOT>
"DATA",811.8,90,100,1606,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1607,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1608,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1609,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1610,0)
<POINT_01>VA-HF GEC ADULT DAY HEALTH CARE (REFERRING TO)</POINT_01>
"DATA",811.8,90,100,1611,0)
<INTERNAL_ENTRY_NUMBER>663001031</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1612,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1613,0)
<![CDATA[
"DATA",811.8,90,100,1614,0)
801.41;+663001031,;.01~VA-HF GEC ADULT DAY HEALTH CARE (REFERRING TO)
"DATA",811.8,90,100,1615,0)
801.41;+663001031,;4~dialog element
"DATA",811.8,90,100,1616,0)
801.41;+663001031,;13~OTHER
"DATA",811.8,90,100,1617,0)
801.41;+663001031,;15~HF.GEC ADULT DAY HEALTH CARE (REFERRING TO
"DATA",811.8,90,100,1618,0)
801.41;+663001031,;25~WP-start~1
"DATA",811.8,90,100,1619,0)
Adult Day Health Care
"DATA",811.8,90,100,1620,0)
801.41;+663001031,;100~NATIONAL
"DATA",811.8,90,100,1621,0)
801.41;+663001031,;114~YES
"DATA",811.8,90,100,1622,0)
801.44;+663001032,+663001031,;.01~07/11/2005@14:13:57
"DATA",811.8,90,100,1623,0)
801.44;+663001032,+663001031,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1624,0)
801.44;+663001032,+663001031,;2~WP-start~1
"DATA",811.8,90,100,1625,0)
Exchange Stub
"DATA",811.8,90,100,1626,0)
]]>
"DATA",811.8,90,100,1627,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1628,0)
<IEN_ROOT>
"DATA",811.8,90,100,1629,0)
<![CDATA[
"DATA",811.8,90,100,1630,0)
663001032^1
"DATA",811.8,90,100,1631,0)
]]>
"DATA",811.8,90,100,1632,0)
</IEN_ROOT>
"DATA",811.8,90,100,1633,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1634,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1635,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1636,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1637,0)
<POINT_01>VA-HF GEC CHORE SERVICES IN HOME</POINT_01>
"DATA",811.8,90,100,1638,0)
<INTERNAL_ENTRY_NUMBER>663001032</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1639,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1640,0)
<![CDATA[
"DATA",811.8,90,100,1641,0)
801.41;+663001032,;.01~VA-HF GEC CHORE SERVICES IN HOME
"DATA",811.8,90,100,1642,0)
801.41;+663001032,;4~dialog element
"DATA",811.8,90,100,1643,0)
801.41;+663001032,;13~OTHER
"DATA",811.8,90,100,1644,0)
801.41;+663001032,;15~HF.GEC CHORE SERVICES IN HOME
"DATA",811.8,90,100,1645,0)
801.41;+663001032,;25~WP-start~1
"DATA",811.8,90,100,1646,0)
Chore services (homemaker) in home
"DATA",811.8,90,100,1647,0)
801.41;+663001032,;100~NATIONAL
"DATA",811.8,90,100,1648,0)
801.41;+663001032,;114~YES
"DATA",811.8,90,100,1649,0)
801.44;+663001033,+663001032,;.01~07/11/2005@14:13:57
"DATA",811.8,90,100,1650,0)
801.44;+663001033,+663001032,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1651,0)
801.44;+663001033,+663001032,;2~WP-start~1
"DATA",811.8,90,100,1652,0)
Exchange Stub
"DATA",811.8,90,100,1653,0)
]]>
"DATA",811.8,90,100,1654,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1655,0)
<IEN_ROOT>
"DATA",811.8,90,100,1656,0)
<![CDATA[
"DATA",811.8,90,100,1657,0)
663001033^1
"DATA",811.8,90,100,1658,0)
]]>
"DATA",811.8,90,100,1659,0)
</IEN_ROOT>
"DATA",811.8,90,100,1660,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1661,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1662,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1663,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1664,0)
<POINT_01>VA-HF GEC ADL ASSISTANCE IN HOME</POINT_01>
"DATA",811.8,90,100,1665,0)
<INTERNAL_ENTRY_NUMBER>663001033</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1666,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1667,0)
<![CDATA[
"DATA",811.8,90,100,1668,0)
801.41;+663001033,;.01~VA-HF GEC ADL ASSISTANCE IN HOME
"DATA",811.8,90,100,1669,0)
801.41;+663001033,;4~dialog element
"DATA",811.8,90,100,1670,0)
801.41;+663001033,;13~OTHER
"DATA",811.8,90,100,1671,0)
801.41;+663001033,;15~HF.GEC ADL ASSISTANCE IN HOME
"DATA",811.8,90,100,1672,0)
801.41;+663001033,;25~WP-start~1
"DATA",811.8,90,100,1673,0)
ADL assistance (personal care) in home
"DATA",811.8,90,100,1674,0)
801.41;+663001033,;100~NATIONAL
"DATA",811.8,90,100,1675,0)
801.41;+663001033,;114~YES
"DATA",811.8,90,100,1676,0)
801.44;+663001034,+663001033,;.01~07/11/2005@14:13:57
"DATA",811.8,90,100,1677,0)
801.44;+663001034,+663001033,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1678,0)
801.44;+663001034,+663001033,;2~WP-start~1
"DATA",811.8,90,100,1679,0)
Exchange Stub
"DATA",811.8,90,100,1680,0)
]]>
"DATA",811.8,90,100,1681,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1682,0)
<IEN_ROOT>
"DATA",811.8,90,100,1683,0)
<![CDATA[
"DATA",811.8,90,100,1684,0)
663001034^1
"DATA",811.8,90,100,1685,0)
]]>
"DATA",811.8,90,100,1686,0)
</IEN_ROOT>
"DATA",811.8,90,100,1687,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1688,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1689,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1690,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1691,0)
<POINT_01>VA-HF GEC HBPC REFERRING TO</POINT_01>
"DATA",811.8,90,100,1692,0)
<INTERNAL_ENTRY_NUMBER>663001035</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1693,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1694,0)
<![CDATA[
"DATA",811.8,90,100,1695,0)
801.41;+663001035,;.01~VA-HF GEC HBPC REFERRING TO
"DATA",811.8,90,100,1696,0)
801.41;+663001035,;4~dialog element
"DATA",811.8,90,100,1697,0)
801.41;+663001035,;13~OTHER
"DATA",811.8,90,100,1698,0)
801.41;+663001035,;15~HF.GEC HOME BASED PR. CARE (REFERRING TO)
"DATA",811.8,90,100,1699,0)
801.41;+663001035,;25~WP-start~1
"DATA",811.8,90,100,1700,0)
Home Based Primary Care (HBPC)
"DATA",811.8,90,100,1701,0)
801.41;+663001035,;100~NATIONAL
"DATA",811.8,90,100,1702,0)
801.41;+663001035,;114~YES
"DATA",811.8,90,100,1703,0)
801.44;+663001036,+663001035,;.01~07/11/2005@14:13:57
"DATA",811.8,90,100,1704,0)
801.44;+663001036,+663001035,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1705,0)
801.44;+663001036,+663001035,;2~WP-start~1
"DATA",811.8,90,100,1706,0)
Exchange Stub
"DATA",811.8,90,100,1707,0)
]]>
"DATA",811.8,90,100,1708,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1709,0)
<IEN_ROOT>
"DATA",811.8,90,100,1710,0)
<![CDATA[
"DATA",811.8,90,100,1711,0)
663001036^1
"DATA",811.8,90,100,1712,0)
]]>
"DATA",811.8,90,100,1713,0)
</IEN_ROOT>
"DATA",811.8,90,100,1714,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1715,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1716,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1717,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1718,0)
<POINT_01>VA-HF GEC SKILLED CARE IN HOME</POINT_01>
"DATA",811.8,90,100,1719,0)
<INTERNAL_ENTRY_NUMBER>663001036</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1720,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1721,0)
<![CDATA[
"DATA",811.8,90,100,1722,0)
801.41;+663001036,;.01~VA-HF GEC SKILLED CARE IN HOME
"DATA",811.8,90,100,1723,0)
801.41;+663001036,;4~dialog element
"DATA",811.8,90,100,1724,0)
801.41;+663001036,;13~OTHER
"DATA",811.8,90,100,1725,0)
801.41;+663001036,;15~HF.GEC SKILLED CARE IN HOME
"DATA",811.8,90,100,1726,0)
801.41;+663001036,;25~WP-start~1
"DATA",811.8,90,100,1727,0)
Skilled care in home
"DATA",811.8,90,100,1728,0)
801.41;+663001036,;100~NATIONAL
"DATA",811.8,90,100,1729,0)
801.41;+663001036,;114~YES
"DATA",811.8,90,100,1730,0)
801.44;+663001037,+663001036,;.01~07/11/2005@14:13:57
"DATA",811.8,90,100,1731,0)
801.44;+663001037,+663001036,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1732,0)
801.44;+663001037,+663001036,;2~WP-start~1
"DATA",811.8,90,100,1733,0)
Exchange Stub
"DATA",811.8,90,100,1734,0)
]]>
"DATA",811.8,90,100,1735,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1736,0)
<IEN_ROOT>
"DATA",811.8,90,100,1737,0)
<![CDATA[
"DATA",811.8,90,100,1738,0)
663001037^1
"DATA",811.8,90,100,1739,0)
]]>
"DATA",811.8,90,100,1740,0)
</IEN_ROOT>
"DATA",811.8,90,100,1741,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1742,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1743,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1744,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1745,0)
<POINT_01>VA-DG GEC REFER TO WHICH PROGRAM</POINT_01>
"DATA",811.8,90,100,1746,0)
<INTERNAL_ENTRY_NUMBER>663001037</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1747,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1748,0)
<![CDATA[
"DATA",811.8,90,100,1749,0)
801.41;+663001037,;.01~VA-DG GEC REFER TO WHICH PROGRAM
"DATA",811.8,90,100,1750,0)
801.41;+663001037,;4~dialog group
"DATA",811.8,90,100,1751,0)
801.41;+663001037,;6~YES
"DATA",811.8,90,100,1752,0)
801.41;+663001037,;7~2
"DATA",811.8,90,100,1753,0)
801.41;+663001037,;9~ONE OR MORE SELECTIONS
"DATA",811.8,90,100,1754,0)
801.41;+663001037,;13~OTHER
"DATA",811.8,90,100,1755,0)
801.41;+663001037,;23~NO
"DATA",811.8,90,100,1756,0)
801.41;+663001037,;25~WP-start~1
"DATA",811.8,90,100,1757,0)
*REFERRING TO WHICH PROGRAM
"DATA",811.8,90,100,1758,0)
801.41;+663001037,;35~WP-start~1
"DATA",811.8,90,100,1759,0)
REFERRING TO WHICH PROGRAM:
"DATA",811.8,90,100,1760,0)
801.41;+663001037,;50~SHOW
"DATA",811.8,90,100,1761,0)
801.41;+663001037,;51~SUPPRESS
"DATA",811.8,90,100,1762,0)
801.41;+663001037,;52~INDENT
"DATA",811.8,90,100,1763,0)
801.41;+663001037,;100~NATIONAL
"DATA",811.8,90,100,1764,0)
801.41;+663001037,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,1765,0)
801.41;+663001037,;114~YES
"DATA",811.8,90,100,1766,0)
801.412;+663001038,+663001037,;.01~5
"DATA",811.8,90,100,1767,0)
801.412;+663001038,+663001037,;2~VA-HF GEC SKILLED CARE IN HOME
"DATA",811.8,90,100,1768,0)
801.412;+663001039,+663001037,;.01~55
"DATA",811.8,90,100,1769,0)
801.412;+663001039,+663001037,;2~VA-HF GEC RESPITE CARE INPATIENT
"DATA",811.8,90,100,1770,0)
801.412;+663001040,+663001037,;.01~50
"DATA",811.8,90,100,1771,0)
801.412;+663001040,+663001037,;2~VA-HF GEC RESPITE CARE OUTPATIENT
"DATA",811.8,90,100,1772,0)
801.412;+663001041,+663001037,;.01~60
"DATA",811.8,90,100,1773,0)
801.412;+663001041,+663001037,;2~VA-HF GEC SPECIALIZED DEMENTIA/GEROPSYCH CARE
"DATA",811.8,90,100,1774,0)
801.412;+663001042,+663001037,;.01~65
"DATA",811.8,90,100,1775,0)
801.412;+663001042,+663001037,;2~VA-HF GEC INPATIENT PALLIATIVE/HOSPICE (NHCU)
"DATA",811.8,90,100,1776,0)
801.412;+663001043,+663001037,;.01~75
"DATA",811.8,90,100,1777,0)
801.412;+663001043,+663001037,;2~VA-HF GEC ALL INCLUSIVE CARE/PACE PROGRAM
"DATA",811.8,90,100,1778,0)
801.412;+663001044,+663001037,;.01~85
"DATA",811.8,90,100,1779,0)
801.412;+663001044,+663001037,;2~VA-HF GEC REFERRING TO OTHER PROGRAM
"DATA",811.8,90,100,1780,0)
801.412;+663001045,+663001037,;.01~35
"DATA",811.8,90,100,1781,0)
801.412;+663001045,+663001037,;2~VA-HF GEC DOMICILIARY CARE
"DATA",811.8,90,100,1782,0)
801.412;+663001046,+663001037,;.01~70
"DATA",811.8,90,100,1783,0)
801.412;+663001046,+663001037,;2~VA-HF GEC OUTPATIENT PALLIATIVE/HOSPICE (HOME)
"DATA",811.8,90,100,1784,0)
801.412;+663001047,+663001037,;.01~80
"DATA",811.8,90,100,1785,0)
801.412;+663001047,+663001037,;2~VA-HF GEC HOME TELEHEALTH (REFERRING TO)
"DATA",811.8,90,100,1786,0)
801.412;+663001048,+663001037,;.01~10
"DATA",811.8,90,100,1787,0)
801.412;+663001048,+663001037,;2~VA-HF GEC HBPC REFERRING TO
"DATA",811.8,90,100,1788,0)
801.412;+663001049,+663001037,;.01~15
"DATA",811.8,90,100,1789,0)
801.412;+663001049,+663001037,;2~VA-HF GEC ADL ASSISTANCE IN HOME
"DATA",811.8,90,100,1790,0)
801.412;+663001050,+663001037,;.01~20
"DATA",811.8,90,100,1791,0)
801.412;+663001050,+663001037,;2~VA-HF GEC CHORE SERVICES IN HOME
"DATA",811.8,90,100,1792,0)
801.412;+663001051,+663001037,;.01~25
"DATA",811.8,90,100,1793,0)
801.412;+663001051,+663001037,;2~VA-HF GEC ADULT DAY HEALTH CARE (REFERRING TO)
"DATA",811.8,90,100,1794,0)
801.412;+663001052,+663001037,;.01~30
"DATA",811.8,90,100,1795,0)
801.412;+663001052,+663001037,;2~VA-HF GEC RESIDENTIAL CARE (SUPERVISED LIVING)
"DATA",811.8,90,100,1796,0)
801.412;+663001053,+663001037,;.01~33
"DATA",811.8,90,100,1797,0)
801.412;+663001053,+663001037,;2~VA-HF GEC ASSISTED LIVING (REFERRING TO)
"DATA",811.8,90,100,1798,0)
801.412;+663001054,+663001037,;.01~40
"DATA",811.8,90,100,1799,0)
801.412;+663001054,+663001037,;2~VA-HF GEC SHORT TERM NURSING HOME CARE
"DATA",811.8,90,100,1800,0)
801.412;+663001055,+663001037,;.01~45
"DATA",811.8,90,100,1801,0)
801.412;+663001055,+663001037,;2~VA-HF GEC LONG TERM NURSING HOME CARE
"DATA",811.8,90,100,1802,0)
801.44;+663001056,+663001037,;.01~07/11/2005@14:13:58
"DATA",811.8,90,100,1803,0)
801.44;+663001056,+663001037,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1804,0)
801.44;+663001056,+663001037,;2~WP-start~1
"DATA",811.8,90,100,1805,0)
Exchange Stub
"DATA",811.8,90,100,1806,0)
]]>
"DATA",811.8,90,100,1807,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1808,0)
<IEN_ROOT>
"DATA",811.8,90,100,1809,0)
<![CDATA[
"DATA",811.8,90,100,1810,0)
663001038^1
"DATA",811.8,90,100,1811,0)
663001039^10
"DATA",811.8,90,100,1812,0)
663001040^11
"DATA",811.8,90,100,1813,0)
663001041^12
"DATA",811.8,90,100,1814,0)
663001042^13
"DATA",811.8,90,100,1815,0)
663001043^14
"DATA",811.8,90,100,1816,0)
663001044^15
"DATA",811.8,90,100,1817,0)
663001045^16
"DATA",811.8,90,100,1818,0)
663001046^17
"DATA",811.8,90,100,1819,0)
663001047^18
"DATA",811.8,90,100,1820,0)
663001048^2
"DATA",811.8,90,100,1821,0)
663001049^3
"DATA",811.8,90,100,1822,0)
663001050^4
"DATA",811.8,90,100,1823,0)
663001051^5
"DATA",811.8,90,100,1824,0)
663001052^6
"DATA",811.8,90,100,1825,0)
663001053^7
"DATA",811.8,90,100,1826,0)
663001054^8
"DATA",811.8,90,100,1827,0)
663001055^9
"DATA",811.8,90,100,1828,0)
663001056^1
"DATA",811.8,90,100,1829,0)
]]>
"DATA",811.8,90,100,1830,0)
</IEN_ROOT>
"DATA",811.8,90,100,1831,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1832,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1833,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1834,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1835,0)
<POINT_01>VA-HF GEC CARE RECOMMENDATION COMMENTS</POINT_01>
"DATA",811.8,90,100,1836,0)
<INTERNAL_ENTRY_NUMBER>385</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1837,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1838,0)
<![CDATA[
"DATA",811.8,90,100,1839,0)
801.41;+385,;.01~VA-HF GEC CARE RECOMMENDATION COMMENTS
"DATA",811.8,90,100,1840,0)
801.41;+385,;4~dialog element
"DATA",811.8,90,100,1841,0)
801.41;+385,;13~OTHER
"DATA",811.8,90,100,1842,0)
801.41;+385,;15~HF.GEC CARE RECOMMENDATIONS COMMENTS
"DATA",811.8,90,100,1843,0)
801.41;+385,;25~WP-start~1
"DATA",811.8,90,100,1844,0)
Other Comments:
"DATA",811.8,90,100,1845,0)
801.41;+385,;100~NATIONAL
"DATA",811.8,90,100,1846,0)
801.41;+385,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,1847,0)
801.41;+385,;114~YES
"DATA",811.8,90,100,1848,0)
801.412;+386,+385,;.01~1
"DATA",811.8,90,100,1849,0)
801.412;+386,+385,;2~PXRM COMMENT
"DATA",811.8,90,100,1850,0)
801.412;+386,+385,;6~   
"DATA",811.8,90,100,1851,0)
801.412;+386,+385,;7~NO
"DATA",811.8,90,100,1852,0)
801.44;+387,+385,;.01~07/11/2005@14:13:58
"DATA",811.8,90,100,1853,0)
801.44;+387,+385,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1854,0)
801.44;+387,+385,;2~WP-start~1
"DATA",811.8,90,100,1855,0)
Exchange Stub
"DATA",811.8,90,100,1856,0)
]]>
"DATA",811.8,90,100,1857,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1858,0)
<IEN_ROOT>
"DATA",811.8,90,100,1859,0)
<![CDATA[
"DATA",811.8,90,100,1860,0)
386^1
"DATA",811.8,90,100,1861,0)
387^1
"DATA",811.8,90,100,1862,0)
]]>
"DATA",811.8,90,100,1863,0)
</IEN_ROOT>
"DATA",811.8,90,100,1864,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1865,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1866,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1867,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1868,0)
<POINT_01>VA-HF GEC GOALS BEHAVIOR STABILIZATION</POINT_01>
"DATA",811.8,90,100,1869,0)
<INTERNAL_ENTRY_NUMBER>663001039</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1870,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1871,0)
<![CDATA[
"DATA",811.8,90,100,1872,0)
801.41;+663001039,;.01~VA-HF GEC GOALS BEHAVIOR STABILIZATION
"DATA",811.8,90,100,1873,0)
801.41;+663001039,;4~dialog element
"DATA",811.8,90,100,1874,0)
801.41;+663001039,;13~OTHER
"DATA",811.8,90,100,1875,0)
801.41;+663001039,;15~HF.GEC BEHAVIOR STABILIZATION
"DATA",811.8,90,100,1876,0)
801.41;+663001039,;25~WP-start~1
"DATA",811.8,90,100,1877,0)
Care aimed at stabilizing problematic behaviors.
"DATA",811.8,90,100,1878,0)
801.41;+663001039,;35~WP-start~1
"DATA",811.8,90,100,1879,0)
Behavior stabilization.
"DATA",811.8,90,100,1880,0)
801.41;+663001039,;100~NATIONAL
"DATA",811.8,90,100,1881,0)
801.41;+663001039,;114~YES
"DATA",811.8,90,100,1882,0)
801.44;+663001040,+663001039,;.01~07/11/2005@14:13:58
"DATA",811.8,90,100,1883,0)
801.44;+663001040,+663001039,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1884,0)
801.44;+663001040,+663001039,;2~WP-start~1
"DATA",811.8,90,100,1885,0)
Exchange Stub
"DATA",811.8,90,100,1886,0)
]]>
"DATA",811.8,90,100,1887,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1888,0)
<IEN_ROOT>
"DATA",811.8,90,100,1889,0)
<![CDATA[
"DATA",811.8,90,100,1890,0)
663001040^1
"DATA",811.8,90,100,1891,0)
]]>
"DATA",811.8,90,100,1892,0)
</IEN_ROOT>
"DATA",811.8,90,100,1893,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1894,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1895,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1896,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1897,0)
<POINT_01>VA-HF GEC GOALS SUPPORTIVE LIVING/SUPERVISION</POINT_01>
"DATA",811.8,90,100,1898,0)
<INTERNAL_ENTRY_NUMBER>663001016</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1899,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1900,0)
<![CDATA[
"DATA",811.8,90,100,1901,0)
801.41;+663001016,;.01~VA-HF GEC GOALS SUPPORTIVE LIVING/SUPERVISION
"DATA",811.8,90,100,1902,0)
801.41;+663001016,;4~dialog element
"DATA",811.8,90,100,1903,0)
801.41;+663001016,;13~OTHER
"DATA",811.8,90,100,1904,0)
801.41;+663001016,;15~HF.GEC SUPERVISED/SUPPORTIVE LVNG SITUATION
"DATA",811.8,90,100,1905,0)
801.41;+663001016,;25~WP-start~2
"DATA",811.8,90,100,1906,0)
A supportive, structured living situation in which the patient will have
"DATA",811.8,90,100,1907,0)
assistance with medications, IADL's, and possibly personal care.
"DATA",811.8,90,100,1908,0)
801.41;+663001016,;35~WP-start~1
"DATA",811.8,90,100,1909,0)
Supportive living/supervision.
"DATA",811.8,90,100,1910,0)
801.41;+663001016,;100~NATIONAL
"DATA",811.8,90,100,1911,0)
801.41;+663001016,;114~YES
"DATA",811.8,90,100,1912,0)
801.44;+663001017,+663001016,;.01~07/11/2005@14:13:58
"DATA",811.8,90,100,1913,0)
801.44;+663001017,+663001016,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1914,0)
801.44;+663001017,+663001016,;2~WP-start~1
"DATA",811.8,90,100,1915,0)
Exchange Stub
"DATA",811.8,90,100,1916,0)
]]>
"DATA",811.8,90,100,1917,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1918,0)
<IEN_ROOT>
"DATA",811.8,90,100,1919,0)
<![CDATA[
"DATA",811.8,90,100,1920,0)
663001017^1
"DATA",811.8,90,100,1921,0)
]]>
"DATA",811.8,90,100,1922,0)
</IEN_ROOT>
"DATA",811.8,90,100,1923,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1924,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1925,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1926,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1927,0)
<POINT_01>VA-HF GEC GOALS REDUCE ER/HOSPITALIZATIONS</POINT_01>
"DATA",811.8,90,100,1928,0)
<INTERNAL_ENTRY_NUMBER>663001015</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1929,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1930,0)
<![CDATA[
"DATA",811.8,90,100,1931,0)
801.41;+663001015,;.01~VA-HF GEC GOALS REDUCE ER/HOSPITALIZATIONS
"DATA",811.8,90,100,1932,0)
801.41;+663001015,;4~dialog element
"DATA",811.8,90,100,1933,0)
801.41;+663001015,;13~OTHER
"DATA",811.8,90,100,1934,0)
801.41;+663001015,;15~HF.GEC REDUCE ER VISITS/HOSPITALIZATIONS
"DATA",811.8,90,100,1935,0)
801.41;+663001015,;25~WP-start~1
"DATA",811.8,90,100,1936,0)
Reduce hospitalizations and/or ER visits.
"DATA",811.8,90,100,1937,0)
801.41;+663001015,;100~NATIONAL
"DATA",811.8,90,100,1938,0)
801.41;+663001015,;114~YES
"DATA",811.8,90,100,1939,0)
801.44;+663001016,+663001015,;.01~07/11/2005@14:13:59
"DATA",811.8,90,100,1940,0)
801.44;+663001016,+663001015,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1941,0)
801.44;+663001016,+663001015,;2~WP-start~1
"DATA",811.8,90,100,1942,0)
Exchange Stub
"DATA",811.8,90,100,1943,0)
]]>
"DATA",811.8,90,100,1944,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1945,0)
<IEN_ROOT>
"DATA",811.8,90,100,1946,0)
<![CDATA[
"DATA",811.8,90,100,1947,0)
663001016^1
"DATA",811.8,90,100,1948,0)
]]>
"DATA",811.8,90,100,1949,0)
</IEN_ROOT>
"DATA",811.8,90,100,1950,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1951,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1952,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1953,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1954,0)
<POINT_01>VA-HF GEC GOALS PALLIATIVE/TERMINAL CARE</POINT_01>
"DATA",811.8,90,100,1955,0)
<INTERNAL_ENTRY_NUMBER>663001014</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1956,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1957,0)
<![CDATA[
"DATA",811.8,90,100,1958,0)
801.41;+663001014,;.01~VA-HF GEC GOALS PALLIATIVE/TERMINAL CARE
"DATA",811.8,90,100,1959,0)
801.41;+663001014,;4~dialog element
"DATA",811.8,90,100,1960,0)
801.41;+663001014,;13~OTHER
"DATA",811.8,90,100,1961,0)
801.41;+663001014,;15~HF.GEC PALLIATIVE/END OF LIFE CARE
"DATA",811.8,90,100,1962,0)
801.41;+663001014,;25~WP-start~1
"DATA",811.8,90,100,1963,0)
Palliative/terminal care.
"DATA",811.8,90,100,1964,0)
801.41;+663001014,;100~NATIONAL
"DATA",811.8,90,100,1965,0)
801.41;+663001014,;114~YES
"DATA",811.8,90,100,1966,0)
801.44;+663001015,+663001014,;.01~07/11/2005@14:13:59
"DATA",811.8,90,100,1967,0)
801.44;+663001015,+663001014,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1968,0)
801.44;+663001015,+663001014,;2~WP-start~1
"DATA",811.8,90,100,1969,0)
Exchange Stub
"DATA",811.8,90,100,1970,0)
]]>
"DATA",811.8,90,100,1971,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1972,0)
<IEN_ROOT>
"DATA",811.8,90,100,1973,0)
<![CDATA[
"DATA",811.8,90,100,1974,0)
663001015^1
"DATA",811.8,90,100,1975,0)
]]>
"DATA",811.8,90,100,1976,0)
</IEN_ROOT>
"DATA",811.8,90,100,1977,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,1978,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,1979,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,1980,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,1981,0)
<POINT_01>VA-HF GEC GOALS RESPITE FOR CAREGIVER</POINT_01>
"DATA",811.8,90,100,1982,0)
<INTERNAL_ENTRY_NUMBER>663001013</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,1983,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,1984,0)
<![CDATA[
"DATA",811.8,90,100,1985,0)
801.41;+663001013,;.01~VA-HF GEC GOALS RESPITE FOR CAREGIVER
"DATA",811.8,90,100,1986,0)
801.41;+663001013,;4~dialog element
"DATA",811.8,90,100,1987,0)
801.41;+663001013,;13~OTHER
"DATA",811.8,90,100,1988,0)
801.41;+663001013,;15~HF.GEC RESPITE FOR CAREGIVER
"DATA",811.8,90,100,1989,0)
801.41;+663001013,;25~WP-start~1
"DATA",811.8,90,100,1990,0)
Respite (temporary relief for caregiver).
"DATA",811.8,90,100,1991,0)
801.41;+663001013,;100~NATIONAL
"DATA",811.8,90,100,1992,0)
801.41;+663001013,;114~YES
"DATA",811.8,90,100,1993,0)
801.44;+663001014,+663001013,;.01~07/11/2005@14:13:59
"DATA",811.8,90,100,1994,0)
801.44;+663001014,+663001013,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,1995,0)
801.44;+663001014,+663001013,;2~WP-start~1
"DATA",811.8,90,100,1996,0)
Exchange Stub
"DATA",811.8,90,100,1997,0)
]]>
"DATA",811.8,90,100,1998,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,1999,0)
<IEN_ROOT>
"DATA",811.8,90,100,2000,0)
<![CDATA[
"DATA",811.8,90,100,2001,0)
663001014^1
"DATA",811.8,90,100,2002,0)
]]>
"DATA",811.8,90,100,2003,0)
</IEN_ROOT>
"DATA",811.8,90,100,2004,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,2005,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,2006,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,2007,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,2008,0)
<POINT_01>VA-HF GEC GOALS PATIENT/FAMILY ED</POINT_01>
"DATA",811.8,90,100,2009,0)
<INTERNAL_ENTRY_NUMBER>663001012</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,2010,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,2011,0)
<![CDATA[
"DATA",811.8,90,100,2012,0)
801.41;+663001012,;.01~VA-HF GEC GOALS PATIENT/FAMILY ED
"DATA",811.8,90,100,2013,0)
801.41;+663001012,;4~dialog element
"DATA",811.8,90,100,2014,0)
801.41;+663001012,;13~OTHER
"DATA",811.8,90,100,2015,0)
801.41;+663001012,;15~HF.GEC PATIENT/FAMILY EDUCATION
"DATA",811.8,90,100,2016,0)
801.41;+663001012,;25~WP-start~1
"DATA",811.8,90,100,2017,0)
Patient/Family education.
"DATA",811.8,90,100,2018,0)
801.41;+663001012,;100~NATIONAL
"DATA",811.8,90,100,2019,0)
801.41;+663001012,;114~YES
"DATA",811.8,90,100,2020,0)
801.44;+663001013,+663001012,;.01~07/11/2005@14:13:59
"DATA",811.8,90,100,2021,0)
801.44;+663001013,+663001012,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,2022,0)
801.44;+663001013,+663001012,;2~WP-start~1
"DATA",811.8,90,100,2023,0)
Exchange Stub
"DATA",811.8,90,100,2024,0)
]]>
"DATA",811.8,90,100,2025,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,2026,0)
<IEN_ROOT>
"DATA",811.8,90,100,2027,0)
<![CDATA[
"DATA",811.8,90,100,2028,0)
663001013^1
"DATA",811.8,90,100,2029,0)
]]>
"DATA",811.8,90,100,2030,0)
</IEN_ROOT>
"DATA",811.8,90,100,2031,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,2032,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,2033,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,2034,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,2035,0)
<POINT_01>VA-HF GEC GOALS IMPROVED COMPLIANCE</POINT_01>
"DATA",811.8,90,100,2036,0)
<INTERNAL_ENTRY_NUMBER>663001011</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,2037,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,2038,0)
<![CDATA[
"DATA",811.8,90,100,2039,0)
801.41;+663001011,;.01~VA-HF GEC GOALS IMPROVED COMPLIANCE
"DATA",811.8,90,100,2040,0)
801.41;+663001011,;4~dialog element
"DATA",811.8,90,100,2041,0)
801.41;+663001011,;13~OTHER
"DATA",811.8,90,100,2042,0)
801.41;+663001011,;15~HF.GEC IMPROVE COMPLIANCE MEDS/TREATMENTS
"DATA",811.8,90,100,2043,0)
801.41;+663001011,;25~WP-start~2
"DATA",811.8,90,100,2044,0)
Patient needs assistance in setting up a structure to manage medications 
"DATA",811.8,90,100,2045,0)
and treatments, e.g., medication cassettes.
"DATA",811.8,90,100,2046,0)
801.41;+663001011,;35~WP-start~1
"DATA",811.8,90,100,2047,0)
Improve compliance with medications and treatments.
"DATA",811.8,90,100,2048,0)
801.41;+663001011,;100~NATIONAL
"DATA",811.8,90,100,2049,0)
801.41;+663001011,;114~YES
"DATA",811.8,90,100,2050,0)
801.44;+663001012,+663001011,;.01~07/11/2005@14:13:59
"DATA",811.8,90,100,2051,0)
801.44;+663001012,+663001011,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,2052,0)
801.44;+663001012,+663001011,;2~WP-start~1
"DATA",811.8,90,100,2053,0)
Exchange Stub
"DATA",811.8,90,100,2054,0)
]]>
"DATA",811.8,90,100,2055,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,2056,0)
<IEN_ROOT>
"DATA",811.8,90,100,2057,0)
<![CDATA[
"DATA",811.8,90,100,2058,0)
663001012^1
"DATA",811.8,90,100,2059,0)
]]>
"DATA",811.8,90,100,2060,0)
</IEN_ROOT>
"DATA",811.8,90,100,2061,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,2062,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,2063,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,2064,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,2065,0)
<POINT_01>VA-HF GEC GOALS MONITORING FOR COMPLICATIONS</POINT_01>
"DATA",811.8,90,100,2066,0)
<INTERNAL_ENTRY_NUMBER>663001010</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,2067,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,2068,0)
<![CDATA[
"DATA",811.8,90,100,2069,0)
801.41;+663001010,;.01~VA-HF GEC GOALS MONITORING FOR COMPLICATIONS
"DATA",811.8,90,100,2070,0)
801.41;+663001010,;4~dialog element
"DATA",811.8,90,100,2071,0)
801.41;+663001010,;13~OTHER
"DATA",811.8,90,100,2072,0)
801.41;+663001010,;15~HF.GEC MONITORING TO AVOID COMPLICATIONS
"DATA",811.8,90,100,2073,0)
801.41;+663001010,;25~WP-start~2
"DATA",811.8,90,100,2074,0)
Patient needs nurse to monitor parameters, e.g., blood sugars, vital 
"DATA",811.8,90,100,2075,0)
signs, and medications, to avoid clinical complications.
"DATA",811.8,90,100,2076,0)
801.41;+663001010,;35~WP-start~1
"DATA",811.8,90,100,2077,0)
Monitoring/supervision to avoid clinical complications.
"DATA",811.8,90,100,2078,0)
801.41;+663001010,;100~NATIONAL
"DATA",811.8,90,100,2079,0)
801.41;+663001010,;114~YES
"DATA",811.8,90,100,2080,0)
801.44;+663001011,+663001010,;.01~07/11/2005@14:13:59
"DATA",811.8,90,100,2081,0)
801.44;+663001011,+663001010,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,2082,0)
801.44;+663001011,+663001010,;2~WP-start~1
"DATA",811.8,90,100,2083,0)
Exchange Stub
"DATA",811.8,90,100,2084,0)
]]>
"DATA",811.8,90,100,2085,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,2086,0)
<IEN_ROOT>
"DATA",811.8,90,100,2087,0)
<![CDATA[
"DATA",811.8,90,100,2088,0)
663001011^1
"DATA",811.8,90,100,2089,0)
]]>
"DATA",811.8,90,100,2090,0)
</IEN_ROOT>
"DATA",811.8,90,100,2091,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,2092,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,2093,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,2094,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,2095,0)
<POINT_01>VA-HF GEC GOALS SKILLED NURSING CARE</POINT_01>
"DATA",811.8,90,100,2096,0)
<INTERNAL_ENTRY_NUMBER>663001009</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,2097,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,2098,0)
<![CDATA[
"DATA",811.8,90,100,2099,0)
801.41;+663001009,;.01~VA-HF GEC GOALS SKILLED NURSING CARE
"DATA",811.8,90,100,2100,0)
801.41;+663001009,;4~dialog element
"DATA",811.8,90,100,2101,0)
801.41;+663001009,;13~OTHER
"DATA",811.8,90,100,2102,0)
801.41;+663001009,;15~HF.GEC SKILLED NURSING CARE
"DATA",811.8,90,100,2103,0)
801.41;+663001009,;25~WP-start~1
"DATA",811.8,90,100,2104,0)
Care requiring a licensed nurse, e.g., catheter care, wound care, etc.
"DATA",811.8,90,100,2105,0)
801.41;+663001009,;35~WP-start~2
"DATA",811.8,90,100,2106,0)
Skilled nursing care (e.g., manage wounds, medical devices, catheters,
"DATA",811.8,90,100,2107,0)
ostomy).
"DATA",811.8,90,100,2108,0)
801.41;+663001009,;100~NATIONAL
"DATA",811.8,90,100,2109,0)
801.41;+663001009,;114~YES
"DATA",811.8,90,100,2110,0)
801.44;+663001010,+663001009,;.01~07/11/2005@14:13:59
"DATA",811.8,90,100,2111,0)
801.44;+663001010,+663001009,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,2112,0)
801.44;+663001010,+663001009,;2~WP-start~1
"DATA",811.8,90,100,2113,0)
Exchange Stub
"DATA",811.8,90,100,2114,0)
]]>
"DATA",811.8,90,100,2115,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,2116,0)
<IEN_ROOT>
"DATA",811.8,90,100,2117,0)
<![CDATA[
"DATA",811.8,90,100,2118,0)
663001010^1
"DATA",811.8,90,100,2119,0)
]]>
"DATA",811.8,90,100,2120,0)
</IEN_ROOT>
"DATA",811.8,90,100,2121,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,2122,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,2123,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,2124,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,2125,0)
<POINT_01>VA-HF GEC GOALS REHABILITATION</POINT_01>
"DATA",811.8,90,100,2126,0)
<INTERNAL_ENTRY_NUMBER>663001008</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,2127,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,2128,0)
<![CDATA[
"DATA",811.8,90,100,2129,0)
801.41;+663001008,;.01~VA-HF GEC GOALS REHABILITATION
"DATA",811.8,90,100,2130,0)
801.41;+663001008,;4~dialog element
"DATA",811.8,90,100,2131,0)
801.41;+663001008,;13~OTHER
"DATA",811.8,90,100,2132,0)
801.41;+663001008,;15~HF.GEC REHABILITATION/IMPROVED FX
"DATA",811.8,90,100,2133,0)
801.41;+663001008,;25~WP-start~2
"DATA",811.8,90,100,2134,0)
Rehabilitation (Care by a licensed OT, PT, KT, or speech therapist aimed
"DATA",811.8,90,100,2135,0)
at restoring function).
"DATA",811.8,90,100,2136,0)
801.41;+663001008,;35~WP-start~1
"DATA",811.8,90,100,2137,0)
Rehabilitation (improved function).
"DATA",811.8,90,100,2138,0)
801.41;+663001008,;100~NATIONAL
"DATA",811.8,90,100,2139,0)
801.41;+663001008,;114~YES
"DATA",811.8,90,100,2140,0)
801.44;+663001009,+663001008,;.01~07/11/2005@14:13:59
"DATA",811.8,90,100,2141,0)
801.44;+663001009,+663001008,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,2142,0)
801.44;+663001009,+663001008,;2~WP-start~1
"DATA",811.8,90,100,2143,0)
Exchange Stub
"DATA",811.8,90,100,2144,0)
]]>
"DATA",811.8,90,100,2145,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,2146,0)
<IEN_ROOT>
"DATA",811.8,90,100,2147,0)
<![CDATA[
"DATA",811.8,90,100,2148,0)
663001009^1
"DATA",811.8,90,100,2149,0)
]]>
"DATA",811.8,90,100,2150,0)
</IEN_ROOT>
"DATA",811.8,90,100,2151,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,2152,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,2153,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,2154,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,2155,0)
<POINT_01>VA-DG GEC GOALS OF CARE INFO</POINT_01>
"DATA",811.8,90,100,2156,0)
<INTERNAL_ENTRY_NUMBER>639</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,2157,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,2158,0)
<![CDATA[
"DATA",811.8,90,100,2159,0)
801.41;+639,;.01~VA-DG GEC GOALS OF CARE INFO
"DATA",811.8,90,100,2160,0)
801.41;+639,;4~dialog group
"DATA",811.8,90,100,2161,0)
801.41;+639,;9~ONE OR MORE SELECTIONS
"DATA",811.8,90,100,2162,0)
801.41;+639,;13~OTHER
"DATA",811.8,90,100,2163,0)
801.41;+639,;23~YES
"DATA",811.8,90,100,2164,0)
801.41;+639,;25~WP-start~1
"DATA",811.8,90,100,2165,0)
Program Goals (Check as many as apply)
"DATA",811.8,90,100,2166,0)
801.41;+639,;50~SHOW
"DATA",811.8,90,100,2167,0)
801.41;+639,;51~SUPPRESS
"DATA",811.8,90,100,2168,0)
801.41;+639,;100~NATIONAL
"DATA",811.8,90,100,2169,0)
801.41;+639,;114~YES
"DATA",811.8,90,100,2170,0)
801.412;+640,+639,;.01~5
"DATA",811.8,90,100,2171,0)
801.412;+640,+639,;2~VA-HF GEC GOALS REHABILITATION
"DATA",811.8,90,100,2172,0)
801.412;+640,+639,;8~NO
"DATA",811.8,90,100,2173,0)
801.412;+641,+639,;.01~50
"DATA",811.8,90,100,2174,0)
801.412;+641,+639,;2~VA-HF GEC GOALS BEHAVIOR STABILIZATION
"DATA",811.8,90,100,2175,0)
801.412;+642,+639,;.01~10
"DATA",811.8,90,100,2176,0)
801.412;+642,+639,;2~VA-HF GEC GOALS SKILLED NURSING CARE
"DATA",811.8,90,100,2177,0)
801.412;+643,+639,;.01~15
"DATA",811.8,90,100,2178,0)
801.412;+643,+639,;2~VA-HF GEC GOALS MONITORING FOR COMPLICATIONS
"DATA",811.8,90,100,2179,0)
801.412;+644,+639,;.01~20
"DATA",811.8,90,100,2180,0)
801.412;+644,+639,;2~VA-HF GEC GOALS IMPROVED COMPLIANCE
"DATA",811.8,90,100,2181,0)
801.412;+645,+639,;.01~25
"DATA",811.8,90,100,2182,0)
801.412;+645,+639,;2~VA-HF GEC GOALS PATIENT/FAMILY ED
"DATA",811.8,90,100,2183,0)
801.412;+646,+639,;.01~30
"DATA",811.8,90,100,2184,0)
801.412;+646,+639,;2~VA-HF GEC GOALS RESPITE FOR CAREGIVER
"DATA",811.8,90,100,2185,0)
801.412;+647,+639,;.01~35
"DATA",811.8,90,100,2186,0)
801.412;+647,+639,;2~VA-HF GEC GOALS PALLIATIVE/TERMINAL CARE
"DATA",811.8,90,100,2187,0)
801.412;+648,+639,;.01~40
"DATA",811.8,90,100,2188,0)
801.412;+648,+639,;2~VA-HF GEC GOALS REDUCE ER/HOSPITALIZATIONS
"DATA",811.8,90,100,2189,0)
801.412;+649,+639,;.01~45
"DATA",811.8,90,100,2190,0)
801.412;+649,+639,;2~VA-HF GEC GOALS SUPPORTIVE LIVING/SUPERVISION
"DATA",811.8,90,100,2191,0)
801.44;+650,+639,;.01~07/11/2005@14:14
"DATA",811.8,90,100,2192,0)
801.44;+650,+639,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,2193,0)
801.44;+650,+639,;2~WP-start~1
"DATA",811.8,90,100,2194,0)
Exchange Stub
"DATA",811.8,90,100,2195,0)
]]>
"DATA",811.8,90,100,2196,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,2197,0)
<IEN_ROOT>
"DATA",811.8,90,100,2198,0)
<![CDATA[
"DATA",811.8,90,100,2199,0)
640^1
"DATA",811.8,90,100,2200,0)
641^10
"DATA",811.8,90,100,2201,0)
642^2
"DATA",811.8,90,100,2202,0)
643^3
"DATA",811.8,90,100,2203,0)
644^4
"DATA",811.8,90,100,2204,0)
645^5
"DATA",811.8,90,100,2205,0)
646^6
"DATA",811.8,90,100,2206,0)
647^7
"DATA",811.8,90,100,2207,0)
648^8
"DATA",811.8,90,100,2208,0)
649^9
"DATA",811.8,90,100,2209,0)
650^1
"DATA",811.8,90,100,2210,0)
]]>
"DATA",811.8,90,100,2211,0)
</IEN_ROOT>
"DATA",811.8,90,100,2212,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,2213,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,2214,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,2215,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,2216,0)
<POINT_01>VA-DG GEC GOALS OF CARE</POINT_01>
"DATA",811.8,90,100,2217,0)
<INTERNAL_ENTRY_NUMBER>663001162</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,2218,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,2219,0)
<![CDATA[
"DATA",811.8,90,100,2220,0)
801.41;+663001162,;.01~VA-DG GEC GOALS OF CARE
"DATA",811.8,90,100,2221,0)
801.41;+663001162,;4~dialog group
"DATA",811.8,90,100,2222,0)
801.41;+663001162,;6~YES
"DATA",811.8,90,100,2223,0)
801.41;+663001162,;7~2
"DATA",811.8,90,100,2224,0)
801.41;+663001162,;13~OTHER
"DATA",811.8,90,100,2225,0)
801.41;+663001162,;23~NO
"DATA",811.8,90,100,2226,0)
801.41;+663001162,;25~WP-start~1
"DATA",811.8,90,100,2227,0)
*GOALS OF CARE
"DATA",811.8,90,100,2228,0)
801.41;+663001162,;35~WP-start~1
"DATA",811.8,90,100,2229,0)
GOALS OF CARE:
"DATA",811.8,90,100,2230,0)
801.41;+663001162,;51~SUPPRESS
"DATA",811.8,90,100,2231,0)
801.41;+663001162,;52~INDENT
"DATA",811.8,90,100,2232,0)
801.41;+663001162,;100~NATIONAL
"DATA",811.8,90,100,2233,0)
801.41;+663001162,;114~YES
"DATA",811.8,90,100,2234,0)
801.412;+663001163,+663001162,;.01~5
"DATA",811.8,90,100,2235,0)
801.412;+663001163,+663001162,;2~VA-DG GEC GOALS OF CARE INFO
"DATA",811.8,90,100,2236,0)
801.412;+663001163,+663001162,;8~YES
"DATA",811.8,90,100,2237,0)
801.44;+663001164,+663001162,;.01~07/11/2005@14:14
"DATA",811.8,90,100,2238,0)
801.44;+663001164,+663001162,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,2239,0)
801.44;+663001164,+663001162,;2~WP-start~1
"DATA",811.8,90,100,2240,0)
Exchange Stub
"DATA",811.8,90,100,2241,0)
]]>
"DATA",811.8,90,100,2242,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,2243,0)
<IEN_ROOT>
"DATA",811.8,90,100,2244,0)
<![CDATA[
"DATA",811.8,90,100,2245,0)
663001163^12
"DATA",811.8,90,100,2246,0)
663001164^1
"DATA",811.8,90,100,2247,0)
]]>
"DATA",811.8,90,100,2248,0)
</IEN_ROOT>
"DATA",811.8,90,100,2249,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,2250,0)
<FILEMAN_FILE>
"DATA",811.8,90,100,2251,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,90,100,2252,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,90,100,2253,0)
<POINT_01>VA-GEC REFERRAL CARE RECOMMENDATION</POINT_01>
"DATA",811.8,90,100,2254,0)
<INTERNAL_ENTRY_NUMBER>663001163</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,90,100,2255,0)
<FILEMAN_FDA>
"DATA",811.8,90,100,2256,0)
<![CDATA[
"DATA",811.8,90,100,2257,0)
801.41;+663001163,;.01~VA-GEC REFERRAL CARE RECOMMENDATION
"DATA",811.8,90,100,2258,0)
801.41;+663001163,;2~VA-GEC REFERRAL CARE RECOMMENDATION
"DATA",811.8,90,100,2259,0)
801.41;+663001163,;4~reminder dialog
"DATA",811.8,90,100,2260,0)
801.41;+663001163,;100~NATIONAL
"DATA",811.8,90,100,2261,0)
801.41;+663001163,;101~Office of Geriatric Extended Care
"DATA",811.8,90,100,2262,0)
801.41;+663001163,;111~GEC3
"DATA",811.8,90,100,2263,0)
801.41;+663001163,;114~YES
"DATA",811.8,90,100,2264,0)
801.412;+663001164,+663001163,;.01~5
"DATA",811.8,90,100,2265,0)
801.412;+663001164,+663001163,;2~VA-DG GEC GOALS OF CARE
"DATA",811.8,90,100,2266,0)
801.412;+663001165,+663001163,;.01~20
"DATA",811.8,90,100,2267,0)
801.412;+663001165,+663001163,;2~VA-HF GEC CARE RECOMMENDATION COMMENTS
"DATA",811.8,90,100,2268,0)
801.412;+663001166,+663001163,;.01~10
"DATA",811.8,90,100,2269,0)
801.412;+663001166,+663001163,;2~VA-DG GEC REFER TO WHICH PROGRAM
"DATA",811.8,90,100,2270,0)
801.412;+663001167,+663001163,;.01~15
"DATA",811.8,90,100,2271,0)
801.412;+663001167,+663001163,;2~VA-DG GEC ESTIMATED DURATION OF SERVICES
"DATA",811.8,90,100,2272,0)
801.412;+663001168,+663001163,;.01~25
"DATA",811.8,90,100,2273,0)
801.412;+663001168,+663001163,;2~VA-ORDER GEC REFERRAL CONSULT
"DATA",811.8,90,100,2274,0)
801.412;+663001169,+663001163,;.01~1
"DATA",811.8,90,100,2275,0)
801.412;+663001169,+663001163,;2~VA-HDR GEC REQUIRED
"DATA",811.8,90,100,2276,0)
801.44;+663001170,+663001163,;.01~07/11/2005@14:14
"DATA",811.8,90,100,2277,0)
801.44;+663001170,+663001163,;1~REDINGTON,PATRICK
"DATA",811.8,90,100,2278,0)
801.44;+663001170,+663001163,;2~WP-start~1
"DATA",811.8,90,100,2279,0)
Exchange Stub
"DATA",811.8,90,100,2280,0)
]]>
"DATA",811.8,90,100,2281,0)
</FILEMAN_FDA>
"DATA",811.8,90,100,2282,0)
<IEN_ROOT>
"DATA",811.8,90,100,2283,0)
<![CDATA[
"DATA",811.8,90,100,2284,0)
663001164^3
"DATA",811.8,90,100,2285,0)
663001165^4
"DATA",811.8,90,100,2286,0)
663001166^6
"DATA",811.8,90,100,2287,0)
663001167^7
"DATA",811.8,90,100,2288,0)
663001168^8
"DATA",811.8,90,100,2289,0)
663001169^9
"DATA",811.8,90,100,2290,0)
663001170^1
"DATA",811.8,90,100,2291,0)
]]>
"DATA",811.8,90,100,2292,0)
</IEN_ROOT>
"DATA",811.8,90,100,2293,0)
</FILEMAN_FILE>
"DATA",811.8,90,100,2294,0)
<INDEX>
"DATA",811.8,90,100,2295,0)
<NUMBER_OF_COMPONENTS>84</NUMBER_OF_COMPONENTS>
"DATA",811.8,90,100,2296,0)
<COMPONENT>
"DATA",811.8,90,100,2297,0)
<FDA_END>56</FDA_END>
"DATA",811.8,90,100,2298,0)
<FDA_START>51</FDA_START>
"DATA",811.8,90,100,2299,0)
<FILE_START>44</FILE_START>
"DATA",811.8,90,100,2300,0)
<IEN_ROOT_END>61</IEN_ROOT_END>
"DATA",811.8,90,100,2301,0)
<IEN_ROOT_START>61</IEN_ROOT_START>
"DATA",811.8,90,100,2302,0)
</COMPONENT>
"DATA",811.8,90,100,2303,0)
<COMPONENT>
"DATA",811.8,90,100,2304,0)
<FDA_END>74</FDA_END>
"DATA",811.8,90,100,2305,0)
<FDA_START>72</FDA_START>
"DATA",811.8,90,100,2306,0)
<FILE_START>65</FILE_START>
"DATA",811.8,90,100,2307,0)
</COMPONENT>
"DATA",811.8,90,100,2308,0)
<COMPONENT>
"DATA",811.8,90,100,2309,0)
<FDA_END>87</FDA_END>
"DATA",811.8,90,100,2310,0)
<FDA_START>85</FDA_START>
"DATA",811.8,90,100,2311,0)
<FILE_START>78</FILE_START>
"DATA",811.8,90,100,2312,0)
</COMPONENT>
"DATA",811.8,90,100,2313,0)
<COMPONENT>
"DATA",811.8,90,100,2314,0)
<FDA_END>100</FDA_END>
"DATA",811.8,90,100,2315,0)
<FDA_START>98</FDA_START>
"DATA",811.8,90,100,2316,0)
<FILE_START>91</FILE_START>
"DATA",811.8,90,100,2317,0)
</COMPONENT>
"DATA",811.8,90,100,2318,0)
<COMPONENT>
"DATA",811.8,90,100,2319,0)
<FDA_END>113</FDA_END>
"DATA",811.8,90,100,2320,0)
<FDA_START>111</FDA_START>
"DATA",811.8,90,100,2321,0)
<FILE_START>104</FILE_START>
"DATA",811.8,90,100,2322,0)
</COMPONENT>
"DATA",811.8,90,100,2323,0)
<COMPONENT>
"DATA",811.8,90,100,2324,0)
<FDA_END>128</FDA_END>
"DATA",811.8,90,100,2325,0)
<FDA_START>124</FDA_START>
"DATA",811.8,90,100,2326,0)
<FILE_START>117</FILE_START>
"DATA",811.8,90,100,2327,0)
</COMPONENT>
"DATA",811.8,90,100,2328,0)
<COMPONENT>
"DATA",811.8,90,100,2329,0)
<FDA_END>143</FDA_END>
"DATA",811.8,90,100,2330,0)
<FDA_START>139</FDA_START>
"DATA",811.8,90,100,2331,0)
<FILE_START>132</FILE_START>
"DATA",811.8,90,100,2332,0)
</COMPONENT>
"DATA",811.8,90,100,2333,0)
<COMPONENT>
"DATA",811.8,90,100,2334,0)
<FDA_END>158</FDA_END>
"DATA",811.8,90,100,2335,0)
<FDA_START>154</FDA_START>
"DATA",811.8,90,100,2336,0)
<FILE_START>147</FILE_START>
"DATA",811.8,90,100,2337,0)
</COMPONENT>
"DATA",811.8,90,100,2338,0)
<COMPONENT>
"DATA",811.8,90,100,2339,0)
<FDA_END>173</FDA_END>
"DATA",811.8,90,100,2340,0)
<FDA_START>169</FDA_START>
"DATA",811.8,90,100,2341,0)
<FILE_START>162</FILE_START>
"DATA",811.8,90,100,2342,0)
</COMPONENT>
"DATA",811.8,90,100,2343,0)
<COMPONENT>
"DATA",811.8,90,100,2344,0)
<FDA_END>188</FDA_END>
"DATA",811.8,90,100,2345,0)
<FDA_START>184</FDA_START>
"DATA",811.8,90,100,2346,0)
<FILE_START>177</FILE_START>
"DATA",811.8,90,100,2347,0)
</COMPONENT>
"DATA",811.8,90,100,2348,0)
<COMPONENT>
"DATA",811.8,90,100,2349,0)
<FDA_END>203</FDA_END>
"DATA",811.8,90,100,2350,0)
<FDA_START>199</FDA_START>
"DATA",811.8,90,100,2351,0)
<FILE_START>192</FILE_START>
"DATA",811.8,90,100,2352,0)
</COMPONENT>
"DATA",811.8,90,100,2353,0)
<COMPONENT>
"DATA",811.8,90,100,2354,0)
<FDA_END>218</FDA_END>
"DATA",811.8,90,100,2355,0)
<FDA_START>214</FDA_START>
"DATA",811.8,90,100,2356,0)
<FILE_START>207</FILE_START>
"DATA",811.8,90,100,2357,0)
</COMPONENT>
"DATA",811.8,90,100,2358,0)
<COMPONENT>
"DATA",811.8,90,100,2359,0)
<FDA_END>233</FDA_END>
"DATA",811.8,90,100,2360,0)
<FDA_START>229</FDA_START>
"DATA",811.8,90,100,2361,0)
<FILE_START>222</FILE_START>
"DATA",811.8,90,100,2362,0)
</COMPONENT>
"DATA",811.8,90,100,2363,0)
<COMPONENT>
"DATA",811.8,90,100,2364,0)
<FDA_END>248</FDA_END>
"DATA",811.8,90,100,2365,0)
<FDA_START>244</FDA_START>
"DATA",811.8,90,100,2366,0)
<FILE_START>237</FILE_START>
"DATA",811.8,90,100,2367,0)
</COMPONENT>
"DATA",811.8,90,100,2368,0)
<COMPONENT>
"DATA",811.8,90,100,2369,0)
<FDA_END>263</FDA_END>
"DATA",811.8,90,100,2370,0)
<FDA_START>259</FDA_START>
"DATA",811.8,90,100,2371,0)
<FILE_START>252</FILE_START>
"DATA",811.8,90,100,2372,0)
</COMPONENT>
"DATA",811.8,90,100,2373,0)
<COMPONENT>
"DATA",811.8,90,100,2374,0)
<FDA_END>278</FDA_END>
"DATA",811.8,90,100,2375,0)
<FDA_START>274</FDA_START>
"DATA",811.8,90,100,2376,0)
<FILE_START>267</FILE_START>
"DATA",811.8,90,100,2377,0)
</COMPONENT>
"DATA",811.8,90,100,2378,0)
<COMPONENT>
"DATA",811.8,90,100,2379,0)
<FDA_END>293</FDA_END>
"DATA",811.8,90,100,2380,0)
<FDA_START>289</FDA_START>
"DATA",811.8,90,100,2381,0)
<FILE_START>282</FILE_START>
"DATA",811.8,90,100,2382,0)
</COMPONENT>
"DATA",811.8,90,100,2383,0)
<COMPONENT>
"DATA",811.8,90,100,2384,0)
<FDA_END>308</FDA_END>
"DATA",811.8,90,100,2385,0)
<FDA_START>304</FDA_START>
"DATA",811.8,90,100,2386,0)
<FILE_START>297</FILE_START>
"DATA",811.8,90,100,2387,0)
</COMPONENT>
"DATA",811.8,90,100,2388,0)
<COMPONENT>
"DATA",811.8,90,100,2389,0)
<FDA_END>323</FDA_END>
"DATA",811.8,90,100,2390,0)
<FDA_START>319</FDA_START>
"DATA",811.8,90,100,2391,0)
<FILE_START>312</FILE_START>
"DATA",811.8,90,100,2392,0)
</COMPONENT>
"DATA",811.8,90,100,2393,0)
<COMPONENT>
"DATA",811.8,90,100,2394,0)
<FDA_END>338</FDA_END>
"DATA",811.8,90,100,2395,0)
<FDA_START>334</FDA_START>
"DATA",811.8,90,100,2396,0)
<FILE_START>327</FILE_START>
"DATA",811.8,90,100,2397,0)
</COMPONENT>
"DATA",811.8,90,100,2398,0)
<COMPONENT>
"DATA",811.8,90,100,2399,0)
<FDA_END>353</FDA_END>
"DATA",811.8,90,100,2400,0)
<FDA_START>349</FDA_START>
"DATA",811.8,90,100,2401,0)
<FILE_START>342</FILE_START>
"DATA",811.8,90,100,2402,0)
</COMPONENT>
"DATA",811.8,90,100,2403,0)
<COMPONENT>
"DATA",811.8,90,100,2404,0)
<FDA_END>368</FDA_END>
"DATA",811.8,90,100,2405,0)
<FDA_START>364</FDA_START>
"DATA",811.8,90,100,2406,0)
<FILE_START>357</FILE_START>
"DATA",811.8,90,100,2407,0)
</COMPONENT>
"DATA",811.8,90,100,2408,0)
<COMPONENT>
"DATA",811.8,90,100,2409,0)
<FDA_END>383</FDA_END>
"DATA",811.8,90,100,2410,0)
<FDA_START>379</FDA_START>
"DATA",811.8,90,100,2411,0)
<FILE_START>372</FILE_START>
"DATA",811.8,90,100,2412,0)
</COMPONENT>
"DATA",811.8,90,100,2413,0)
<COMPONENT>
"DATA",811.8,90,100,2414,0)
<FDA_END>398</FDA_END>
"DATA",811.8,90,100,2415,0)
<FDA_START>394</FDA_START>
"DATA",811.8,90,100,2416,0)
<FILE_START>387</FILE_START>
"DATA",811.8,90,100,2417,0)
</COMPONENT>
"DATA",811.8,90,100,2418,0)
<COMPONENT>
"DATA",811.8,90,100,2419,0)
<FDA_END>413</FDA_END>
"DATA",811.8,90,100,2420,0)
<FDA_START>409</FDA_START>
"DATA",811.8,90,100,2421,0)
<FILE_START>402</FILE_START>
"DATA",811.8,90,100,2422,0)
</COMPONENT>
"DATA",811.8,90,100,2423,0)
<COMPONENT>
"DATA",811.8,90,100,2424,0)
<FDA_END>428</FDA_END>
"DATA",811.8,90,100,2425,0)
<FDA_START>424</FDA_START>
"DATA",811.8,90,100,2426,0)
<FILE_START>417</FILE_START>
"DATA",811.8,90,100,2427,0)
</COMPONENT>
"DATA",811.8,90,100,2428,0)
<COMPONENT>
"DATA",811.8,90,100,2429,0)
<FDA_END>443</FDA_END>
"DATA",811.8,90,100,2430,0)
<FDA_START>439</FDA_START>
"DATA",811.8,90,100,2431,0)
<FILE_START>432</FILE_START>
"DATA",811.8,90,100,2432,0)
</COMPONENT>
"DATA",811.8,90,100,2433,0)
<COMPONENT>
"DATA",811.8,90,100,2434,0)
<FDA_END>458</FDA_END>
"DATA",811.8,90,100,2435,0)
<FDA_START>454</FDA_START>
"DATA",811.8,90,100,2436,0)
<FILE_START>447</FILE_START>
"DATA",811.8,90,100,2437,0)
</COMPONENT>
"DATA",811.8,90,100,2438,0)
<COMPONENT>
"DATA",811.8,90,100,2439,0)
<FDA_END>473</FDA_END>
"DATA",811.8,90,100,2440,0)
<FDA_START>469</FDA_START>
"DATA",811.8,90,100,2441,0)
<FILE_START>462</FILE_START>
"DATA",811.8,90,100,2442,0)
</COMPONENT>
"DATA",811.8,90,100,2443,0)
<COMPONENT>
"DATA",811.8,90,100,2444,0)
<FDA_END>488</FDA_END>
"DATA",811.8,90,100,2445,0)
<FDA_START>484</FDA_START>
"DATA",811.8,90,100,2446,0)
<FILE_START>477</FILE_START>
"DATA",811.8,90,100,2447,0)
</COMPONENT>
"DATA",811.8,90,100,2448,0)
<COMPONENT>
"DATA",811.8,90,100,2449,0)
<FDA_END>503</FDA_END>
"DATA",811.8,90,100,2450,0)
<FDA_START>499</FDA_START>
"DATA",811.8,90,100,2451,0)
<FILE_START>492</FILE_START>
"DATA",811.8,90,100,2452,0)
</COMPONENT>
"DATA",811.8,90,100,2453,0)
<COMPONENT>
"DATA",811.8,90,100,2454,0)
<FDA_END>518</FDA_END>
"DATA",811.8,90,100,2455,0)
<FDA_START>514</FDA_START>
"DATA",811.8,90,100,2456,0)
<FILE_START>507</FILE_START>
"DATA",811.8,90,100,2457,0)
</COMPONENT>
"DATA",811.8,90,100,2458,0)
<COMPONENT>
"DATA",811.8,90,100,2459,0)
<FDA_END>533</FDA_END>
"DATA",811.8,90,100,2460,0)
<FDA_START>529</FDA_START>
"DATA",811.8,90,100,2461,0)
<FILE_START>522</FILE_START>
"DATA",811.8,90,100,2462,0)
</COMPONENT>
"DATA",811.8,90,100,2463,0)
<COMPONENT>
"DATA",811.8,90,100,2464,0)
<FDA_END>548</FDA_END>
"DATA",811.8,90,100,2465,0)
<FDA_START>544</FDA_START>
"DATA",811.8,90,100,2466,0)
<FILE_START>537</FILE_START>
"DATA",811.8,90,100,2467,0)
</COMPONENT>
"DATA",811.8,90,100,2468,0)
<COMPONENT>
"DATA",811.8,90,100,2469,0)
<FDA_END>563</FDA_END>
"DATA",811.8,90,100,2470,0)
<FDA_START>559</FDA_START>
"DATA",811.8,90,100,2471,0)
<FILE_START>552</FILE_START>
"DATA",811.8,90,100,2472,0)
</COMPONENT>
"DATA",811.8,90,100,2473,0)
<COMPONENT>
"DATA",811.8,90,100,2474,0)
<FDA_END>578</FDA_END>
"DATA",811.8,90,100,2475,0)
<FDA_START>574</FDA_START>
"DATA",811.8,90,100,2476,0)
<FILE_START>567</FILE_START>
"DATA",811.8,90,100,2477,0)
</COMPONENT>
"DATA",811.8,90,100,2478,0)
<COMPONENT>
"DATA",811.8,90,100,2479,0)
<FDA_END>593</FDA_END>
"DATA",811.8,90,100,2480,0)
<FDA_START>589</FDA_START>
"DATA",811.8,90,100,2481,0)
<FILE_START>582</FILE_START>
"DATA",811.8,90,100,2482,0)
</COMPONENT>
"DATA",811.8,90,100,2483,0)
<COMPONENT>
"DATA",811.8,90,100,2484,0)
<FDA_END>608</FDA_END>
"DATA",811.8,90,100,2485,0)
<FDA_START>604</FDA_START>
"DATA",811.8,90,100,2486,0)
<FILE_START>597</FILE_START>
"DATA",811.8,90,100,2487,0)
</COMPONENT>
"DATA",811.8,90,100,2488,0)
<COMPONENT>
"DATA",811.8,90,100,2489,0)
<FDA_END>623</FDA_END>
"DATA",811.8,90,100,2490,0)
<FDA_START>619</FDA_START>
"DATA",811.8,90,100,2491,0)
<FILE_START>612</FILE_START>
"DATA",811.8,90,100,2492,0)
</COMPONENT>
"DATA",811.8,90,100,2493,0)
<COMPONENT>
"DATA",811.8,90,100,2494,0)
<FDA_END>638</FDA_END>
"DATA",811.8,90,100,2495,0)
<FDA_START>634</FDA_START>
"DATA",811.8,90,100,2496,0)
<FILE_START>627</FILE_START>
"DATA",811.8,90,100,2497,0)
</COMPONENT>
"DATA",811.8,90,100,2498,0)
<COMPONENT>
"DATA",811.8,90,100,2499,0)
<FDA_END>649</FDA_END>
"DATA",811.8,90,100,2500,0)
<FDA_START>649</FDA_START>
"DATA",811.8,90,100,2501,0)
<FILE_START>642</FILE_START>
"DATA",811.8,90,100,2502,0)
</COMPONENT>
"DATA",811.8,90,100,2503,0)
<COMPONENT>
"DATA",811.8,90,100,2504,0)
<FDA_END>963</FDA_END>
"DATA",811.8,90,100,2505,0)
<FDA_START>660</FDA_START>
"DATA",811.8,90,100,2506,0)
<FILE_START>653</FILE_START>
"DATA",811.8,90,100,2507,0)
<IEN_ROOT_END>968</IEN_ROOT_END>
"DATA",811.8,90,100,2508,0)
<IEN_ROOT_START>968</IEN_ROOT_START>
"DATA",811.8,90,100,2509,0)
</COMPONENT>
"DATA",811.8,90,100,2510,0)
<COMPONENT>
"DATA",811.8,90,100,2511,0)
<FDA_END>992</FDA_END>
"DATA",811.8,90,100,2512,0)
<FDA_START>979</FDA_START>
"DATA",811.8,90,100,2513,0)
<FILE_START>972</FILE_START>
"DATA",811.8,90,100,2514,0)
<IEN_ROOT_END>997</IEN_ROOT_END>
"DATA",811.8,90,100,2515,0)
<IEN_ROOT_START>997</IEN_ROOT_START>
"DATA",811.8,90,100,2516,0)
</COMPONENT>
"DATA",811.8,90,100,2517,0)
<COMPONENT>
"DATA",811.8,90,100,2518,0)
<FDA_END>1021</FDA_END>
"DATA",811.8,90,100,2519,0)
<FDA_START>1008</FDA_START>
"DATA",811.8,90,100,2520,0)
<FILE_START>1001</FILE_START>
"DATA",811.8,90,100,2521,0)
<IEN_ROOT_END>1026</IEN_ROOT_END>
"DATA",811.8,90,100,2522,0)
<IEN_ROOT_START>1026</IEN_ROOT_START>
"DATA",811.8,90,100,2523,0)
</COMPONENT>
"DATA",811.8,90,100,2524,0)
<COMPONENT>
"DATA",811.8,90,100,2525,0)
<FDA_END>1048</FDA_END>
"DATA",811.8,90,100,2526,0)
<FDA_START>1037</FDA_START>
"DATA",811.8,90,100,2527,0)
<FILE_START>1030</FILE_START>
"DATA",811.8,90,100,2528,0)
<IEN_ROOT_END>1053</IEN_ROOT_END>
"DATA",811.8,90,100,2529,0)
<IEN_ROOT_START>1053</IEN_ROOT_START>
"DATA",811.8,90,100,2530,0)
</COMPONENT>
"DATA",811.8,90,100,2531,0)
<COMPONENT>
"DATA",811.8,90,100,2532,0)
<FDA_END>1075</FDA_END>
"DATA",811.8,90,100,2533,0)
<FDA_START>1064</FDA_START>
"DATA",811.8,90,100,2534,0)
<FILE_START>1057</FILE_START>
"DATA",811.8,90,100,2535,0)
<IEN_ROOT_END>1080</IEN_ROOT_END>
"DATA",811.8,90,100,2536,0)
<IEN_ROOT_START>1080</IEN_ROOT_START>
"DATA",811.8,90,100,2537,0)
</COMPONENT>
"DATA",811.8,90,100,2538,0)
<COMPONENT>
"DATA",811.8,90,100,2539,0)
<FDA_END>1102</FDA_END>
"DATA",811.8,90,100,2540,0)
<FDA_START>1091</FDA_START>
"DATA",811.8,90,100,2541,0)
<FILE_START>1084</FILE_START>
"DATA",811.8,90,100,2542,0)
<IEN_ROOT_END>1107</IEN_ROOT_END>
"DATA",811.8,90,100,2543,0)
<IEN_ROOT_START>1107</IEN_ROOT_START>
"DATA",811.8,90,100,2544,0)
</COMPONENT>
"DATA",811.8,90,100,2545,0)
<COMPONENT>
"DATA",811.8,90,100,2546,0)
<FDA_END>1129</FDA_END>
"DATA",811.8,90,100,2547,0)
<FDA_START>1118</FDA_START>
"DATA",811.8,90,100,2548,0)
<FILE_START>1111</FILE_START>
"DATA",811.8,90,100,2549,0)
<IEN_ROOT_END>1134</IEN_ROOT_END>
"DATA",811.8,90,100,2550,0)
<IEN_ROOT_START>1134</IEN_ROOT_START>
"DATA",811.8,90,100,2551,0)
</COMPONENT>
"DATA",811.8,90,100,2552,0)
<COMPONENT>
"DATA",811.8,90,100,2553,0)
<FDA_END>1156</FDA_END>
"DATA",811.8,90,100,2554,0)
<FDA_START>1145</FDA_START>
"DATA",811.8,90,100,2555,0)
<FILE_START>1138</FILE_START>
"DATA",811.8,90,100,2556,0)
<IEN_ROOT_END>1161</IEN_ROOT_END>
"DATA",811.8,90,100,2557,0)
<IEN_ROOT_START>1161</IEN_ROOT_START>
"DATA",811.8,90,100,2558,0)
</COMPONENT>
"DATA",811.8,90,100,2559,0)
<COMPONENT>
"DATA",811.8,90,100,2560,0)
<FDA_END>1183</FDA_END>
"DATA",811.8,90,100,2561,0)
<FDA_START>1172</FDA_START>
"DATA",811.8,90,100,2562,0)
<FILE_START>1165</FILE_START>
"DATA",811.8,90,100,2563,0)
<IEN_ROOT_END>1188</IEN_ROOT_END>
"DATA",811.8,90,100,2564,0)
<IEN_ROOT_START>1188</IEN_ROOT_START>
"DATA",811.8,90,100,2565,0)
</COMPONENT>
"DATA",811.8,90,100,2566,0)
<COMPONENT>
"DATA",811.8,90,100,2567,0)
<FDA_END>1231</FDA_END>
"DATA",811.8,90,100,2568,0)
<FDA_START>1199</FDA_START>
"DATA",811.8,90,100,2569,0)
<FILE_START>1192</FILE_START>
"DATA",811.8,90,100,2570,0)
<IEN_ROOT_END>1242</IEN_ROOT_END>
"DATA",811.8,90,100,2571,0)
<IEN_ROOT_START>1236</IEN_ROOT_START>
"DATA",811.8,90,100,2572,0)
</COMPONENT>
"DATA",811.8,90,100,2573,0)
<COMPONENT>
"DATA",811.8,90,100,2574,0)
<FDA_END>1264</FDA_END>
"DATA",811.8,90,100,2575,0)
<FDA_START>1253</FDA_START>
"DATA",811.8,90,100,2576,0)
<FILE_START>1246</FILE_START>
"DATA",811.8,90,100,2577,0)
<IEN_ROOT_END>1269</IEN_ROOT_END>
"DATA",811.8,90,100,2578,0)
<IEN_ROOT_START>1269</IEN_ROOT_START>
"DATA",811.8,90,100,2579,0)
</COMPONENT>
"DATA",811.8,90,100,2580,0)
<COMPONENT>
"DATA",811.8,90,100,2581,0)
<FDA_END>1292</FDA_END>
"DATA",811.8,90,100,2582,0)
<FDA_START>1280</FDA_START>
"DATA",811.8,90,100,2583,0)
<FILE_START>1273</FILE_START>
"DATA",811.8,90,100,2584,0)
<IEN_ROOT_END>1297</IEN_ROOT_END>
"DATA",811.8,90,100,2585,0)
<IEN_ROOT_START>1297</IEN_ROOT_START>
"DATA",811.8,90,100,2586,0)
</COMPONENT>
"DATA",811.8,90,100,2587,0)
<COMPONENT>
"DATA",811.8,90,100,2588,0)
<FDA_END>1319</FDA_END>
"DATA",811.8,90,100,2589,0)
<FDA_START>1308</FDA_START>
"DATA",811.8,90,100,2590,0)
<FILE_START>1301</FILE_START>
"DATA",811.8,90,100,2591,0)
<IEN_ROOT_END>1324</IEN_ROOT_END>
"DATA",811.8,90,100,2592,0)
<IEN_ROOT_START>1324</IEN_ROOT_START>
"DATA",811.8,90,100,2593,0)
</COMPONENT>
"DATA",811.8,90,100,2594,0)
<COMPONENT>
"DATA",811.8,90,100,2595,0)
<FDA_END>1351</FDA_END>
"DATA",811.8,90,100,2596,0)
<FDA_START>1335</FDA_START>
"DATA",811.8,90,100,2597,0)
<FILE_START>1328</FILE_START>
"DATA",811.8,90,100,2598,0)
<IEN_ROOT_END>1357</IEN_ROOT_END>
"DATA",811.8,90,100,2599,0)
<IEN_ROOT_START>1356</IEN_ROOT_START>
"DATA",811.8,90,100,2600,0)
</COMPONENT>
"DATA",811.8,90,100,2601,0)
<COMPONENT>
"DATA",811.8,90,100,2602,0)
<FDA_END>1379</FDA_END>
"DATA",811.8,90,100,2603,0)
<FDA_START>1368</FDA_START>
"DATA",811.8,90,100,2604,0)
<FILE_START>1361</FILE_START>
"DATA",811.8,90,100,2605,0)
<IEN_ROOT_END>1384</IEN_ROOT_END>
"DATA",811.8,90,100,2606,0)
<IEN_ROOT_START>1384</IEN_ROOT_START>
"DATA",811.8,90,100,2607,0)
</COMPONENT>
"DATA",811.8,90,100,2608,0)
<COMPONENT>
"DATA",811.8,90,100,2609,0)
<FDA_END>1407</FDA_END>
"DATA",811.8,90,100,2610,0)
<FDA_START>1395</FDA_START>
"DATA",811.8,90,100,2611,0)
<FILE_START>1388</FILE_START>
"DATA",811.8,90,100,2612,0)
<IEN_ROOT_END>1412</IEN_ROOT_END>
"DATA",811.8,90,100,2613,0)
<IEN_ROOT_START>1412</IEN_ROOT_START>
"DATA",811.8,90,100,2614,0)
</COMPONENT>
"DATA",811.8,90,100,2615,0)
<COMPONENT>
"DATA",811.8,90,100,2616,0)
<FDA_END>1434</FDA_END>
"DATA",811.8,90,100,2617,0)
<FDA_START>1423</FDA_START>
"DATA",811.8,90,100,2618,0)
<FILE_START>1416</FILE_START>
"DATA",811.8,90,100,2619,0)
<IEN_ROOT_END>1439</IEN_ROOT_END>
"DATA",811.8,90,100,2620,0)
<IEN_ROOT_START>1439</IEN_ROOT_START>
"DATA",811.8,90,100,2621,0)
</COMPONENT>
"DATA",811.8,90,100,2622,0)
<COMPONENT>
"DATA",811.8,90,100,2623,0)
<FDA_END>1462</FDA_END>
"DATA",811.8,90,100,2624,0)
<FDA_START>1450</FDA_START>
"DATA",811.8,90,100,2625,0)
<FILE_START>1443</FILE_START>
"DATA",811.8,90,100,2626,0)
<IEN_ROOT_END>1467</IEN_ROOT_END>
"DATA",811.8,90,100,2627,0)
<IEN_ROOT_START>1467</IEN_ROOT_START>
"DATA",811.8,90,100,2628,0)
</COMPONENT>
"DATA",811.8,90,100,2629,0)
<COMPONENT>
"DATA",811.8,90,100,2630,0)
<FDA_END>1490</FDA_END>
"DATA",811.8,90,100,2631,0)
<FDA_START>1478</FDA_START>
"DATA",811.8,90,100,2632,0)
<FILE_START>1471</FILE_START>
"DATA",811.8,90,100,2633,0)
<IEN_ROOT_END>1495</IEN_ROOT_END>
"DATA",811.8,90,100,2634,0)
<IEN_ROOT_START>1495</IEN_ROOT_START>
"DATA",811.8,90,100,2635,0)
</COMPONENT>
"DATA",811.8,90,100,2636,0)
<COMPONENT>
"DATA",811.8,90,100,2637,0)
<FDA_END>1517</FDA_END>
"DATA",811.8,90,100,2638,0)
<FDA_START>1506</FDA_START>
"DATA",811.8,90,100,2639,0)
<FILE_START>1499</FILE_START>
"DATA",811.8,90,100,2640,0)
<IEN_ROOT_END>1522</IEN_ROOT_END>
"DATA",811.8,90,100,2641,0)
<IEN_ROOT_START>1522</IEN_ROOT_START>
"DATA",811.8,90,100,2642,0)
</COMPONENT>
"DATA",811.8,90,100,2643,0)
<COMPONENT>
"DATA",811.8,90,100,2644,0)
<FDA_END>1544</FDA_END>
"DATA",811.8,90,100,2645,0)
<FDA_START>1533</FDA_START>
"DATA",811.8,90,100,2646,0)
<FILE_START>1526</FILE_START>
"DATA",811.8,90,100,2647,0)
<IEN_ROOT_END>1549</IEN_ROOT_END>
"DATA",811.8,90,100,2648,0)
<IEN_ROOT_START>1549</IEN_ROOT_START>
"DATA",811.8,90,100,2649,0)
</COMPONENT>
"DATA",811.8,90,100,2650,0)
<COMPONENT>
"DATA",811.8,90,100,2651,0)
<FDA_END>1571</FDA_END>
"DATA",811.8,90,100,2652,0)
<FDA_START>1560</FDA_START>
"DATA",811.8,90,100,2653,0)
<FILE_START>1553</FILE_START>
"DATA",811.8,90,100,2654,0)
<IEN_ROOT_END>1576</IEN_ROOT_END>
"DATA",811.8,90,100,2655,0)
<IEN_ROOT_START>1576</IEN_ROOT_START>
"DATA",811.8,90,100,2656,0)
</COMPONENT>
"DATA",811.8,90,100,2657,0)
<COMPONENT>
"DATA",811.8,90,100,2658,0)
<FDA_END>1598</FDA_END>
"DATA",811.8,90,100,2659,0)
<FDA_START>1587</FDA_START>
"DATA",811.8,90,100,2660,0)
<FILE_START>1580</FILE_START>
"DATA",811.8,90,100,2661,0)
<IEN_ROOT_END>1603</IEN_ROOT_END>
"DATA",811.8,90,100,2662,0)
<IEN_ROOT_START>1603</IEN_ROOT_START>
"DATA",811.8,90,100,2663,0)
</COMPONENT>
"DATA",811.8,90,100,2664,0)
<COMPONENT>
"DATA",811.8,90,100,2665,0)
<FDA_END>1625</FDA_END>
"DATA",811.8,90,100,2666,0)
<FDA_START>1614</FDA_START>
"DATA",811.8,90,100,2667,0)
<FILE_START>1607</FILE_START>
"DATA",811.8,90,100,2668,0)
<IEN_ROOT_END>1630</IEN_ROOT_END>
"DATA",811.8,90,100,2669,0)
<IEN_ROOT_START>1630</IEN_ROOT_START>
"DATA",811.8,90,100,2670,0)
</COMPONENT>
"DATA",811.8,90,100,2671,0)
<COMPONENT>
"DATA",811.8,90,100,2672,0)
<FDA_END>1652</FDA_END>
"DATA",811.8,90,100,2673,0)
<FDA_START>1641</FDA_START>
"DATA",811.8,90,100,2674,0)
<FILE_START>1634</FILE_START>
"DATA",811.8,90,100,2675,0)
<IEN_ROOT_END>1657</IEN_ROOT_END>
"DATA",811.8,90,100,2676,0)
<IEN_ROOT_START>1657</IEN_ROOT_START>
"DATA",811.8,90,100,2677,0)
</COMPONENT>
"DATA",811.8,90,100,2678,0)
<COMPONENT>
"DATA",811.8,90,100,2679,0)
<FDA_END>1679</FDA_END>
"DATA",811.8,90,100,2680,0)
<FDA_START>1668</FDA_START>
"DATA",811.8,90,100,2681,0)
<FILE_START>1661</FILE_START>
"DATA",811.8,90,100,2682,0)
<IEN_ROOT_END>1684</IEN_ROOT_END>
"DATA",811.8,90,100,2683,0)
<IEN_ROOT_START>1684</IEN_ROOT_START>
"DATA",811.8,90,100,2684,0)
</COMPONENT>
"DATA",811.8,90,100,2685,0)
<COMPONENT>
"DATA",811.8,90,100,2686,0)
<FDA_END>1706</FDA_END>
"DATA",811.8,90,100,2687,0)
<FDA_START>1695</FDA_START>
"DATA",811.8,90,100,2688,0)
<FILE_START>1688</FILE_START>
"DATA",811.8,90,100,2689,0)
<IEN_ROOT_END>1711</IEN_ROOT_END>
"DATA",811.8,90,100,2690,0)
<IEN_ROOT_START>1711</IEN_ROOT_START>
"DATA",811.8,90,100,2691,0)
</COMPONENT>
"DATA",811.8,90,100,2692,0)
<COMPONENT>
"DATA",811.8,90,100,2693,0)
<FDA_END>1733</FDA_END>
"DATA",811.8,90,100,2694,0)
<FDA_START>1722</FDA_START>
"DATA",811.8,90,100,2695,0)
<FILE_START>1715</FILE_START>
"DATA",811.8,90,100,2696,0)
<IEN_ROOT_END>1738</IEN_ROOT_END>
"DATA",811.8,90,100,2697,0)
<IEN_ROOT_START>1738</IEN_ROOT_START>
"DATA",811.8,90,100,2698,0)
</COMPONENT>
"DATA",811.8,90,100,2699,0)
<COMPONENT>
"DATA",811.8,90,100,2700,0)
<FDA_END>1805</FDA_END>
"DATA",811.8,90,100,2701,0)
<FDA_START>1749</FDA_START>
"DATA",811.8,90,100,2702,0)
<FILE_START>1742</FILE_START>
"DATA",811.8,90,100,2703,0)
<IEN_ROOT_END>1828</IEN_ROOT_END>
"DATA",811.8,90,100,2704,0)
<IEN_ROOT_START>1810</IEN_ROOT_START>
"DATA",811.8,90,100,2705,0)
</COMPONENT>
"DATA",811.8,90,100,2706,0)
<COMPONENT>
"DATA",811.8,90,100,2707,0)
<FDA_END>1855</FDA_END>
"DATA",811.8,90,100,2708,0)
<FDA_START>1839</FDA_START>
"DATA",811.8,90,100,2709,0)
<FILE_START>1832</FILE_START>
"DATA",811.8,90,100,2710,0)
<IEN_ROOT_END>1861</IEN_ROOT_END>
"DATA",811.8,90,100,2711,0)
<IEN_ROOT_START>1860</IEN_ROOT_START>
"DATA",811.8,90,100,2712,0)
</COMPONENT>
"DATA",811.8,90,100,2713,0)
<COMPONENT>
"DATA",811.8,90,100,2714,0)
<FDA_END>1885</FDA_END>
"DATA",811.8,90,100,2715,0)
<FDA_START>1872</FDA_START>
"DATA",811.8,90,100,2716,0)
<FILE_START>1865</FILE_START>
"DATA",811.8,90,100,2717,0)
<IEN_ROOT_END>1890</IEN_ROOT_END>
"DATA",811.8,90,100,2718,0)
<IEN_ROOT_START>1890</IEN_ROOT_START>
"DATA",811.8,90,100,2719,0)
</COMPONENT>
"DATA",811.8,90,100,2720,0)
<COMPONENT>
"DATA",811.8,90,100,2721,0)
<FDA_END>1915</FDA_END>
"DATA",811.8,90,100,2722,0)
<FDA_START>1901</FDA_START>
"DATA",811.8,90,100,2723,0)
<FILE_START>1894</FILE_START>
"DATA",811.8,90,100,2724,0)
<IEN_ROOT_END>1920</IEN_ROOT_END>
"DATA",811.8,90,100,2725,0)
<IEN_ROOT_START>1920</IEN_ROOT_START>
"DATA",811.8,90,100,2726,0)
</COMPONENT>
"DATA",811.8,90,100,2727,0)
<COMPONENT>
"DATA",811.8,90,100,2728,0)
<FDA_END>1942</FDA_END>
"DATA",811.8,90,100,2729,0)
<FDA_START>1931</FDA_START>
"DATA",811.8,90,100,2730,0)
<FILE_START>1924</FILE_START>
"DATA",811.8,90,100,2731,0)
<IEN_ROOT_END>1947</IEN_ROOT_END>
"DATA",811.8,90,100,2732,0)
<IEN_ROOT_START>1947</IEN_ROOT_START>
"DATA",811.8,90,100,2733,0)
</COMPONENT>
"DATA",811.8,90,100,2734,0)
<COMPONENT>
"DATA",811.8,90,100,2735,0)
<FDA_END>1969</FDA_END>
"DATA",811.8,90,100,2736,0)
<FDA_START>1958</FDA_START>
"DATA",811.8,90,100,2737,0)
<FILE_START>1951</FILE_START>
"DATA",811.8,90,100,2738,0)
<IEN_ROOT_END>1974</IEN_ROOT_END>
"DATA",811.8,90,100,2739,0)
<IEN_ROOT_START>1974</IEN_ROOT_START>
"DATA",811.8,90,100,2740,0)
</COMPONENT>
"DATA",811.8,90,100,2741,0)
<COMPONENT>
"DATA",811.8,90,100,2742,0)
<FDA_END>1996</FDA_END>
"DATA",811.8,90,100,2743,0)
<FDA_START>1985</FDA_START>
"DATA",811.8,90,100,2744,0)
<FILE_START>1978</FILE_START>
"DATA",811.8,90,100,2745,0)
<IEN_ROOT_END>2001</IEN_ROOT_END>
"DATA",811.8,90,100,2746,0)
<IEN_ROOT_START>2001</IEN_ROOT_START>
"DATA",811.8,90,100,2747,0)
</COMPONENT>
"DATA",811.8,90,100,2748,0)
<COMPONENT>
"DATA",811.8,90,100,2749,0)
<FDA_END>2023</FDA_END>
"DATA",811.8,90,100,2750,0)
<FDA_START>2012</FDA_START>
"DATA",811.8,90,100,2751,0)
<FILE_START>2005</FILE_START>
"DATA",811.8,90,100,2752,0)
<IEN_ROOT_END>2028</IEN_ROOT_END>
"DATA",811.8,90,100,2753,0)
<IEN_ROOT_START>2028</IEN_ROOT_START>
"DATA",811.8,90,100,2754,0)
</COMPONENT>
"DATA",811.8,90,100,2755,0)
<COMPONENT>
"DATA",811.8,90,100,2756,0)
<FDA_END>2053</FDA_END>
"DATA",811.8,90,100,2757,0)
<FDA_START>2039</FDA_START>
"DATA",811.8,90,100,2758,0)
<FILE_START>2032</FILE_START>
"DATA",811.8,90,100,2759,0)
<IEN_ROOT_END>2058</IEN_ROOT_END>
"DATA",811.8,90,100,2760,0)
<IEN_ROOT_START>2058</IEN_ROOT_START>
"DATA",811.8,90,100,2761,0)
</COMPONENT>
"DATA",811.8,90,100,2762,0)
<COMPONENT>
"DATA",811.8,90,100,2763,0)
<FDA_END>2083</FDA_END>
"DATA",811.8,90,100,2764,0)
<FDA_START>2069</FDA_START>
"DATA",811.8,90,100,2765,0)
<FILE_START>2062</FILE_START>
"DATA",811.8,90,100,2766,0)
<IEN_ROOT_END>2088</IEN_ROOT_END>
"DATA",811.8,90,100,2767,0)
<IEN_ROOT_START>2088</IEN_ROOT_START>
"DATA",811.8,90,100,2768,0)
</COMPONENT>
"DATA",811.8,90,100,2769,0)
<COMPONENT>
"DATA",811.8,90,100,2770,0)
<FDA_END>2113</FDA_END>
"DATA",811.8,90,100,2771,0)
<FDA_START>2099</FDA_START>
"DATA",811.8,90,100,2772,0)
<FILE_START>2092</FILE_START>
"DATA",811.8,90,100,2773,0)
<IEN_ROOT_END>2118</IEN_ROOT_END>
"DATA",811.8,90,100,2774,0)
<IEN_ROOT_START>2118</IEN_ROOT_START>
"DATA",811.8,90,100,2775,0)
</COMPONENT>
"DATA",811.8,90,100,2776,0)
<COMPONENT>
"DATA",811.8,90,100,2777,0)
<FDA_END>2143</FDA_END>
"DATA",811.8,90,100,2778,0)
<FDA_START>2129</FDA_START>
"DATA",811.8,90,100,2779,0)
<FILE_START>2122</FILE_START>
"DATA",811.8,90,100,2780,0)
<IEN_ROOT_END>2148</IEN_ROOT_END>
"DATA",811.8,90,100,2781,0)
<IEN_ROOT_START>2148</IEN_ROOT_START>
"DATA",811.8,90,100,2782,0)
</COMPONENT>
"DATA",811.8,90,100,2783,0)
<COMPONENT>
"DATA",811.8,90,100,2784,0)
<FDA_END>2194</FDA_END>
"DATA",811.8,90,100,2785,0)
<FDA_START>2159</FDA_START>
"DATA",811.8,90,100,2786,0)
<FILE_START>2152</FILE_START>
"DATA",811.8,90,100,2787,0)
<IEN_ROOT_END>2209</IEN_ROOT_END>
"DATA",811.8,90,100,2788,0)
<IEN_ROOT_START>2199</IEN_ROOT_START>
"DATA",811.8,90,100,2789,0)
</COMPONENT>
"DATA",811.8,90,100,2790,0)
<COMPONENT>
"DATA",811.8,90,100,2791,0)
<FDA_END>2240</FDA_END>
"DATA",811.8,90,100,2792,0)
<FDA_START>2220</FDA_START>
"DATA",811.8,90,100,2793,0)
<FILE_START>2213</FILE_START>
"DATA",811.8,90,100,2794,0)
<IEN_ROOT_END>2246</IEN_ROOT_END>
"DATA",811.8,90,100,2795,0)
<IEN_ROOT_START>2245</IEN_ROOT_START>
"DATA",811.8,90,100,2796,0)
</COMPONENT>
"DATA",811.8,90,100,2797,0)
<COMPONENT>
"DATA",811.8,90,100,2798,0)
<FDA_END>2279</FDA_END>
"DATA",811.8,90,100,2799,0)
<FDA_START>2257</FDA_START>
"DATA",811.8,90,100,2800,0)
<FILE_START>2250</FILE_START>
"DATA",811.8,90,100,2801,0)
<IEN_ROOT_END>2290</IEN_ROOT_END>
"DATA",811.8,90,100,2802,0)
<IEN_ROOT_START>2284</IEN_ROOT_START>
"DATA",811.8,90,100,2803,0)
</COMPONENT>
"DATA",811.8,90,100,2804,0)
</INDEX>
"DATA",811.8,90,100,2805,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,90,110,0)
^811.804^39^39
"DATA",811.8,90,110,1,0)
Reminder:    VA-GEC REFERRAL CARE RECOMMENDATION
"DATA",811.8,90,110,2,0)
Source:      REDINGTON,PATRICK at SALT LAKE CITY OIFO
"DATA",811.8,90,110,3,0)
Date Packed: 07/11/2005@14:13:35
"DATA",811.8,90,110,4,0)
Package Version: 2.0
"DATA",811.8,90,110,5,0)

"DATA",811.8,90,110,6,0)
Description:
"DATA",811.8,90,110,7,0)
The Office of Geriatric Extended Care (OGEC) approved the paper-based
"DATA",811.8,90,110,8,0)
GEC Referral as the preferred method for assessing and screening patients
"DATA",811.8,90,110,9,0)
for long-term and extended care services.  As part of the Long Term Care
"DATA",811.8,90,110,10,0)
Initiative and the Veterans Millennium Health Care and Benefits Act,
"DATA",811.8,90,110,11,0)
Public Law 106-177, OGEC identified this tool as the means to standardize
"DATA",811.8,90,110,12,0)
long-term care assessments and to prepare for the national collection of
"DATA",811.8,90,110,13,0)
data regarding long-term care needs in the veteran population.
"DATA",811.8,90,110,14,0)
 
"DATA",811.8,90,110,15,0)
Current VHA methods of assessing patients to determine the level of care
"DATA",811.8,90,110,16,0)
required of extended care service are inconsistent.  Some facilities use
"DATA",811.8,90,110,17,0)
the VA Form 10-7108, VA Form 10064a (Patient Assessment Instrument) or VA
"DATA",811.8,90,110,18,0)
Form 1204 (Referral for Community Nursing Home Care), while other sites
"DATA",811.8,90,110,19,0)
use various other assessments or consults.  OGEC seeks to standardize the
"DATA",811.8,90,110,20,0)
process of assessment as well as the data set in order to establish a
"DATA",811.8,90,110,21,0)
basis upon which program evaluation and quality performance can be
"DATA",811.8,90,110,22,0)
managed.
"DATA",811.8,90,110,23,0)
 
"DATA",811.8,90,110,24,0)
Four clinical reminder dialogs collect data regarding the need for
"DATA",811.8,90,110,25,0)
long-term care services in a standard format across VHA.  This provides
"DATA",811.8,90,110,26,0)
a mechanism for clinicians to administer comprehensive long-term care
"DATA",811.8,90,110,27,0)
assessments, stores the information within the patient medical record and
"DATA",811.8,90,110,28,0)
allows clinicians to notify local OGEC staff.  The screening data is
"DATA",811.8,90,110,29,0)
collected as health factors and is stored in the V Health Factor file.  
"DATA",811.8,90,110,30,0)
There is no cohort or resolution logic associated. The four reminder
"DATA",811.8,90,110,31,0)
dialogs are GEC Referral Social Services, GEC Referral Nursing Assessment,
"DATA",811.8,90,110,32,0)
GEC Referral Care Recommendations, and GEC Referral Care Coordination. An
"DATA",811.8,90,110,33,0)
M-based option routine accompanies these reminders that extracts the data
"DATA",811.8,90,110,34,0)
and makes it available for ad hoc reporting.
"DATA",811.8,90,110,35,0)

"DATA",811.8,90,110,36,0)
Keywords:
"DATA",811.8,90,110,37,0)
No keywords given
"DATA",811.8,90,110,38,0)

"DATA",811.8,90,110,39,0)
Components:
"DATA",811.8,90,115)
REMINDER
"DATA",811.8,109,0)
VA-WH BILATERAL MASTECTOMY^REDINGTON,PATRICK at SALT LAKE CITY OIFO^3050706.141252
"DATA",811.8,109,100,0)
^811.801^62^62
"DATA",811.8,109,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,109,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,109,100,3,0)
<PACKAGE_VERSION>2.0</PACKAGE_VERSION>
"DATA",811.8,109,100,4,0)
<INDEX_AT>52</INDEX_AT>
"DATA",811.8,109,100,5,0)
<SOURCE>
"DATA",811.8,109,100,6,0)
<NAME>VA-WH BILATERAL MASTECTOMY</NAME>
"DATA",811.8,109,100,7,0)
<USER>REDINGTON,PATRICK</USER>
"DATA",811.8,109,100,8,0)
<SITE>SALT LAKE CITY OIFO</SITE>
"DATA",811.8,109,100,9,0)
<DATE_PACKED>07/06/2005@14:12:52</DATE_PACKED>
"DATA",811.8,109,100,10,0)
</SOURCE>
"DATA",811.8,109,100,11,0)
<EXCHANGE_TYPE>REMINDER</EXCHANGE_TYPE>
"DATA",811.8,109,100,12,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,109,100,13,0)
Revised VA-WH BILATERAL MASTECTOMY taxonomy.
"DATA",811.8,109,100,14,0)
]]></DESCRIPTION>
"DATA",811.8,109,100,15,0)
<KEYWORDS>
"DATA",811.8,109,100,16,0)
<KEYWORD>BILATERAL MASTECTOMY</KEYWORD>
"DATA",811.8,109,100,17,0)
<KEYWORD></KEYWORD>
"DATA",811.8,109,100,18,0)
</KEYWORDS>
"DATA",811.8,109,100,19,0)
<FILEMAN_FILE>
"DATA",811.8,109,100,20,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,109,100,21,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,109,100,22,0)
<POINT_01>VA-WH BILATERAL MASTECTOMY</POINT_01>
"DATA",811.8,109,100,23,0)
<INTERNAL_ENTRY_NUMBER>62</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,109,100,24,0)
<FILEMAN_FDA>
"DATA",811.8,109,100,25,0)
<![CDATA[
"DATA",811.8,109,100,26,0)
811.2;+62,;.01~VA-WH BILATERAL MASTECTOMY
"DATA",811.8,109,100,27,0)
811.2;+62,;.02~Codes for bilateral mastectomy
"DATA",811.8,109,100,28,0)
811.2;+62,;100~NATIONAL
"DATA",811.8,109,100,29,0)
811.2;+62,;101~Women Veterans Health Program
"DATA",811.8,109,100,30,0)
811.21;+63,+62,;.01~07/06/2005@14:12:52
"DATA",811.8,109,100,31,0)
811.21;+63,+62,;1~REDINGTON,PATRICK
"DATA",811.8,109,100,32,0)
811.21;+63,+62,;2~WP-start~1
"DATA",811.8,109,100,33,0)
Exchange Stub
"DATA",811.8,109,100,34,0)
811.22103;+64,+62,;.01~85.46
"DATA",811.8,109,100,35,0)
811.22103;+64,+62,;1~85.46
"DATA",811.8,109,100,36,0)
811.22103;+64,+62,;2~85.45
"DATA",811.8,109,100,37,0)
811.22103;+64,+62,;3~85.47
"DATA",811.8,109,100,38,0)
811.22103;+65,+62,;.01~85.48
"DATA",811.8,109,100,39,0)
811.22103;+65,+62,;1~85.48
"DATA",811.8,109,100,40,0)
811.22103;+65,+62,;2~85.47
"DATA",811.8,109,100,41,0)
811.22103;+65,+62,;3~85.50
"DATA",811.8,109,100,42,0)
]]>
"DATA",811.8,109,100,43,0)
</FILEMAN_FDA>
"DATA",811.8,109,100,44,0)
<IEN_ROOT>
"DATA",811.8,109,100,45,0)
<![CDATA[
"DATA",811.8,109,100,46,0)
63^1
"DATA",811.8,109,100,47,0)
64^1
"DATA",811.8,109,100,48,0)
65^2
"DATA",811.8,109,100,49,0)
]]>
"DATA",811.8,109,100,50,0)
</IEN_ROOT>
"DATA",811.8,109,100,51,0)
</FILEMAN_FILE>
"DATA",811.8,109,100,52,0)
<INDEX>
"DATA",811.8,109,100,53,0)
<NUMBER_OF_COMPONENTS>1</NUMBER_OF_COMPONENTS>
"DATA",811.8,109,100,54,0)
<COMPONENT>
"DATA",811.8,109,100,55,0)
<FDA_END>41</FDA_END>
"DATA",811.8,109,100,56,0)
<FDA_START>26</FDA_START>
"DATA",811.8,109,100,57,0)
<FILE_START>19</FILE_START>
"DATA",811.8,109,100,58,0)
<IEN_ROOT_END>48</IEN_ROOT_END>
"DATA",811.8,109,100,59,0)
<IEN_ROOT_START>46</IEN_ROOT_START>
"DATA",811.8,109,100,60,0)
</COMPONENT>
"DATA",811.8,109,100,61,0)
</INDEX>
"DATA",811.8,109,100,62,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,109,110,0)
^811.804^13^13
"DATA",811.8,109,110,1,0)
Reminder:    VA-WH BILATERAL MASTECTOMY
"DATA",811.8,109,110,2,0)
Source:      REDINGTON,PATRICK at SALT LAKE CITY OIFO
"DATA",811.8,109,110,3,0)
Date Packed: 07/06/2005@14:12:52
"DATA",811.8,109,110,4,0)
Package Version: 2.0
"DATA",811.8,109,110,5,0)

"DATA",811.8,109,110,6,0)
Description:
"DATA",811.8,109,110,7,0)
Revised VA-WH BILATERAL MASTECTOMY taxonomy.
"DATA",811.8,109,110,8,0)

"DATA",811.8,109,110,9,0)
Keywords:
"DATA",811.8,109,110,10,0)
BILATERAL MASTECTOMY
"DATA",811.8,109,110,11,0)

"DATA",811.8,109,110,12,0)

"DATA",811.8,109,110,13,0)
Components:
"DATA",811.8,109,115)
REMINDER
"DATA",811.8,109,119)
1
"DATA",811.8,109,120,0)
^811.802A^1^1
"DATA",811.8,109,120,1,0)
REMINDER TAXONOMY^811.2^1
"DATA",811.8,109,120,1,1,0)
^811.8021A^1^1
"DATA",811.8,109,120,1,1,1,0)
VA-WH BILATERAL MASTECTOMY^26^41^46^48
"DATA",811.8,136,0)
VA-MHV INFLUENZA VACCINE^REDINGTON,PATRICK at SALT LAKE CITY OIFO^3051122.143428
"DATA",811.8,136,100,0)
^811.801^344^344
"DATA",811.8,136,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,136,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,136,100,3,0)
<PACKAGE_VERSION>2.0</PACKAGE_VERSION>
"DATA",811.8,136,100,4,0)
<INDEX_AT>296</INDEX_AT>
"DATA",811.8,136,100,5,0)
<SOURCE>
"DATA",811.8,136,100,6,0)
<NAME>VA-MHV INFLUENZA VACCINE</NAME>
"DATA",811.8,136,100,7,0)
<USER>REDINGTON,PATRICK</USER>
"DATA",811.8,136,100,8,0)
<SITE>SALT LAKE CITY OIFO</SITE>
"DATA",811.8,136,100,9,0)
<DATE_PACKED>11/22/2005@14:34:28</DATE_PACKED>
"DATA",811.8,136,100,10,0)
</SOURCE>
"DATA",811.8,136,100,11,0)
<EXCHANGE_TYPE>REMINDER</EXCHANGE_TYPE>
"DATA",811.8,136,100,12,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,136,100,13,0)

"DATA",811.8,136,100,14,0)
]]></DESCRIPTION>
"DATA",811.8,136,100,15,0)
<KEYWORDS>
"DATA",811.8,136,100,16,0)
<KEYWORD></KEYWORD>
"DATA",811.8,136,100,17,0)
</KEYWORDS>
"DATA",811.8,136,100,18,0)
<FILEMAN_FILE>
"DATA",811.8,136,100,19,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,136,100,20,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,136,100,21,0)
<POINT_01>National Clinical Practice Guideline Council</POINT_01>
"DATA",811.8,136,100,22,0)
<INTERNAL_ENTRY_NUMBER>663007</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,136,100,23,0)
<FILEMAN_FDA>
"DATA",811.8,136,100,24,0)
<![CDATA[
"DATA",811.8,136,100,25,0)
811.6;+663007,;.01~National Clinical Practice Guideline Council
"DATA",811.8,136,100,26,0)
811.6;+663007,;100~NATIONAL
"DATA",811.8,136,100,27,0)
811.63;+663008,+663007,;.01~11/22/2005@14:34:39
"DATA",811.8,136,100,28,0)
811.63;+663008,+663007,;1~REDINGTON,PATRICK
"DATA",811.8,136,100,29,0)
811.63;+663008,+663007,;2~WP-start~1
"DATA",811.8,136,100,30,0)
Exchange Stub
"DATA",811.8,136,100,31,0)
]]>
"DATA",811.8,136,100,32,0)
</FILEMAN_FDA>
"DATA",811.8,136,100,33,0)
<IEN_ROOT>
"DATA",811.8,136,100,34,0)
<![CDATA[
"DATA",811.8,136,100,35,0)
663008^1
"DATA",811.8,136,100,36,0)
]]>
"DATA",811.8,136,100,37,0)
</IEN_ROOT>
"DATA",811.8,136,100,38,0)
</FILEMAN_FILE>
"DATA",811.8,136,100,39,0)
<FILEMAN_FILE>
"DATA",811.8,136,100,40,0)
<FILE_NAME>IMMUNIZATION</FILE_NAME>
"DATA",811.8,136,100,41,0)
<FILE_NUMBER>9999999.14</FILE_NUMBER>
"DATA",811.8,136,100,42,0)
<POINT_01>FLU,3 YRS</POINT_01>
"DATA",811.8,136,100,43,0)
<INTERNAL_ENTRY_NUMBER>55</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,136,100,44,0)
<FILEMAN_FDA>
"DATA",811.8,136,100,45,0)
<![CDATA[
"DATA",811.8,136,100,46,0)
9999999.14;+55,;.01~FLU,3 YRS
"DATA",811.8,136,100,47,0)
9999999.14;+55,;.02~INFLUENZA
"DATA",811.8,136,100,48,0)
]]>
"DATA",811.8,136,100,49,0)
</FILEMAN_FDA>
"DATA",811.8,136,100,50,0)
</FILEMAN_FILE>
"DATA",811.8,136,100,51,0)
<FILEMAN_FILE>
"DATA",811.8,136,100,52,0)
<FILE_NAME>IMMUNIZATION</FILE_NAME>
"DATA",811.8,136,100,53,0)
<FILE_NUMBER>9999999.14</FILE_NUMBER>
"DATA",811.8,136,100,54,0)
<POINT_01>FLU,NASAL</POINT_01>
"DATA",811.8,136,100,55,0)
<INTERNAL_ENTRY_NUMBER>57</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,136,100,56,0)
<FILEMAN_FDA>
"DATA",811.8,136,100,57,0)
<![CDATA[
"DATA",811.8,136,100,58,0)
9999999.14;+57,;.01~FLU,NASAL
"DATA",811.8,136,100,59,0)
9999999.14;+57,;.02~FLU NAS
"DATA",811.8,136,100,60,0)
]]>
"DATA",811.8,136,100,61,0)
</FILEMAN_FDA>
"DATA",811.8,136,100,62,0)
</FILEMAN_FILE>
"DATA",811.8,136,100,63,0)
<FILEMAN_FILE>
"DATA",811.8,136,100,64,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,136,100,65,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,136,100,66,0)
<POINT_01>VA-MHV INFLUENZA IMMUNIZATION</POINT_01>
"DATA",811.8,136,100,67,0)
<INTERNAL_ENTRY_NUMBER>583</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,136,100,68,0)
<FILEMAN_FDA>
"DATA",811.8,136,100,69,0)
<![CDATA[
"DATA",811.8,136,100,70,0)
811.5;+583,;.01~VA-MHV INFLUENZA IMMUNIZATION
"DATA",811.8,136,100,71,0)
811.5;+583,;1~WP-start~5
"DATA",811.8,136,100,72,0)
Map any findings that indicate administration of influenza immunization.  
"DATA",811.8,136,100,73,0)
 
"DATA",811.8,136,100,74,0)
Each year, you will need to edit this term and change the begin dates on 
"DATA",811.8,136,100,75,0)
the findings to a date that is prior to the month when you first begin 
"DATA",811.8,136,100,76,0)
immunizing patients.   
"DATA",811.8,136,100,77,0)
811.5;+583,;100~NATIONAL
"DATA",811.8,136,100,78,0)
811.5;+583,;101~National Clinical Practice Guideline Council
"DATA",811.8,136,100,79,0)
811.5;+583,;102~JUL 01, 2006
"DATA",811.8,136,100,80,0)
811.52;+584,+583,;.01~IM.FLU,NASAL
"DATA",811.8,136,100,81,0)
811.52;+584,+583,;9~8/31/05
"DATA",811.8,136,100,82,0)
811.52;+585,+583,;.01~IM.FLU,3 YRS
"DATA",811.8,136,100,83,0)
811.52;+585,+583,;9~8/31/05
"DATA",811.8,136,100,84,0)
811.53;+586,+583,;.01~11/22/2005@14:34:39
"DATA",811.8,136,100,85,0)
811.53;+586,+583,;1~REDINGTON,PATRICK
"DATA",811.8,136,100,86,0)
811.53;+586,+583,;2~WP-start~1
"DATA",811.8,136,100,87,0)
Exchange Stub
"DATA",811.8,136,100,88,0)
]]>
"DATA",811.8,136,100,89,0)
</FILEMAN_FDA>
"DATA",811.8,136,100,90,0)
<IEN_ROOT>
"DATA",811.8,136,100,91,0)
<![CDATA[
"DATA",811.8,136,100,92,0)
584^2
"DATA",811.8,136,100,93,0)
585^3
"DATA",811.8,136,100,94,0)
586^1
"DATA",811.8,136,100,95,0)
]]>
"DATA",811.8,136,100,96,0)
</IEN_ROOT>
"DATA",811.8,136,100,97,0)
</FILEMAN_FILE>
"DATA",811.8,136,100,98,0)
<FILEMAN_FILE>
"DATA",811.8,136,100,99,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,136,100,100,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,136,100,101,0)
<POINT_01>VA-MHV CONTRAINDICATION TO INFLUENZA VACCINE</POINT_01>
"DATA",811.8,136,100,102,0)
<INTERNAL_ENTRY_NUMBER>584</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,136,100,103,0)
<FILEMAN_FDA>
"DATA",811.8,136,100,104,0)
<![CDATA[
"DATA",811.8,136,100,105,0)
811.5;+584,;.01~VA-MHV CONTRAINDICATION TO INFLUENZA VACCINE
"DATA",811.8,136,100,106,0)
811.5;+584,;100~NATIONAL
"DATA",811.8,136,100,107,0)
811.5;+584,;101~National Clinical Practice Guideline Council
"DATA",811.8,136,100,108,0)
811.53;+585,+584,;.01~11/22/2005@14:34:39
"DATA",811.8,136,100,109,0)
811.53;+585,+584,;1~REDINGTON,PATRICK
"DATA",811.8,136,100,110,0)
811.53;+585,+584,;2~WP-start~1
"DATA",811.8,136,100,111,0)
Exchange Stub
"DATA",811.8,136,100,112,0)
]]>
"DATA",811.8,136,100,113,0)
</FILEMAN_FDA>
"DATA",811.8,136,100,114,0)
<IEN_ROOT>
"DATA",811.8,136,100,115,0)
<![CDATA[
"DATA",811.8,136,100,116,0)
585^1
"DATA",811.8,136,100,117,0)
]]>
"DATA",811.8,136,100,118,0)
</IEN_ROOT>
"DATA",811.8,136,100,119,0)
</FILEMAN_FILE>
"DATA",811.8,136,100,120,0)
<FILEMAN_FILE>
"DATA",811.8,136,100,121,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,136,100,122,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,136,100,123,0)
<POINT_01>VA-MHV HIGH RISK FOR FLU</POINT_01>
"DATA",811.8,136,100,124,0)
<INTERNAL_ENTRY_NUMBER>585</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,136,100,125,0)
<FILEMAN_FDA>
"DATA",811.8,136,100,126,0)
<![CDATA[
"DATA",811.8,136,100,127,0)
811.5;+585,;.01~VA-MHV HIGH RISK FOR FLU
"DATA",811.8,136,100,128,0)
811.5;+585,;1~WP-start~6
"DATA",811.8,136,100,129,0)
Enter the taxonomy for high risk flu/pneumonia into this term.  If you 
"DATA",811.8,136,100,130,0)
are using the national term VA-HIGH RISK FOR FLU/PNEUMONIA in this 
"DATA",811.8,136,100,131,0)
reminder or in others, be aware that the national term has not been 
"DATA",811.8,136,100,132,0)
updated and does not include codes for spinal cord injury, multiple 
"DATA",811.8,136,100,133,0)
sclerosis, and some other newer ICD codes that may indicate high risk 
"DATA",811.8,136,100,134,0)
illnesses.  
"DATA",811.8,136,100,135,0)
811.5;+585,;100~NATIONAL
"DATA",811.8,136,100,136,0)
811.5;+585,;101~National Clinical Practice Guideline Council
"DATA",811.8,136,100,137,0)
811.53;+586,+585,;.01~11/22/2005@14:34:39
"DATA",811.8,136,100,138,0)
811.53;+586,+585,;1~REDINGTON,PATRICK
"DATA",811.8,136,100,139,0)
811.53;+586,+585,;2~WP-start~1
"DATA",811.8,136,100,140,0)
Exchange Stub
"DATA",811.8,136,100,141,0)
]]>
"DATA",811.8,136,100,142,0)
</FILEMAN_FDA>
"DATA",811.8,136,100,143,0)
<IEN_ROOT>
"DATA",811.8,136,100,144,0)
<![CDATA[
"DATA",811.8,136,100,145,0)
586^1
"DATA",811.8,136,100,146,0)
]]>
"DATA",811.8,136,100,147,0)
</IEN_ROOT>
"DATA",811.8,136,100,148,0)
</FILEMAN_FILE>
"DATA",811.8,136,100,149,0)
<FILEMAN_FILE>
"DATA",811.8,136,100,150,0)
<FILE_NAME>REMINDER DEFINITION</FILE_NAME>
"DATA",811.8,136,100,151,0)
<FILE_NUMBER>811.9</FILE_NUMBER>
"DATA",811.8,136,100,152,0)
<POINT_01>VA-MHV INFLUENZA VACCINE</POINT_01>
"DATA",811.8,136,100,153,0)
<INTERNAL_ENTRY_NUMBER>453</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,136,100,154,0)
<FILEMAN_FDA>
"DATA",811.8,136,100,155,0)
<![CDATA[
"DATA",811.8,136,100,156,0)
811.9;+453,;.01~VA-MHV INFLUENZA VACCINE
"DATA",811.8,136,100,157,0)
811.9;+453,;1.2~Influenza Vaccine
"DATA",811.8,136,100,158,0)
811.9;+453,;1.3~2M
"DATA",811.8,136,100,159,0)
811.9;+453,;1.7~OCT 22, 2003@16:13:51
"DATA",811.8,136,100,160,0)
811.9;+453,;3~WP-start~13
"DATA",811.8,136,100,161,0)
Reminder due for patients with high risk diagnosis or age 50 or older.  
"DATA",811.8,136,100,162,0)
The reminder term for flu vaccination will need to be updated yearly to
"DATA",811.8,136,100,163,0)
reset the start date of the flu vaccine so that it is due each fall for
"DATA",811.8,136,100,164,0)
patients in the cohort no matter when they received their last
"DATA",811.8,136,100,165,0)
immunization.
"DATA",811.8,136,100,166,0)
A few weeks prior to beginning flu vaccinations each fall, change the 
"DATA",811.8,136,100,167,0)
start date for each finding in the vaccination term to a recent date.  For
"DATA",811.8,136,100,168,0)
example, if flu vaccines in the community are to begin around September
"DATA",811.8,136,100,169,0)
20, then change the start date to August 31 in order to be sure to allow
"DATA",811.8,136,100,170,0)
any entries made for Sept to resolve the reminder (entries made for
"DATA",811.8,136,100,171,0)
immunizations for just the month and year are recorded as MO/00/YR). The
"DATA",811.8,136,100,172,0)
reminder is resolved by the reminder term for flu vaccine or by the 
"DATA",811.8,136,100,173,0)
reminder term for contraindications.
"DATA",811.8,136,100,174,0)
811.9;+453,;31~(SEX)&(AGE)!FI(2)&'FI(3)
"DATA",811.8,136,100,175,0)
811.9;+453,;32~4
"DATA",811.8,136,100,176,0)
811.9;+453,;33~SEX;AGE;2;3
"DATA",811.8,136,100,177,0)
811.9;+453,;35~(0)!FI(1)
"DATA",811.8,136,100,178,0)
811.9;+453,;36~1
"DATA",811.8,136,100,179,0)
811.9;+453,;37~1
"DATA",811.8,136,100,180,0)
811.9;+453,;40~1
"DATA",811.8,136,100,181,0)
811.9;+453,;41~2
"DATA",811.8,136,100,182,0)
811.9;+453,;42~0
"DATA",811.8,136,100,183,0)
811.9;+453,;60~WP-start~9
"DATA",811.8,136,100,184,0)
Anyone age 50 or older or anyone with certain medical problems should
"DATA",811.8,136,100,185,0)
receive the flu shot every year.  This vaccine will protect you from
"DATA",811.8,136,100,186,0)
getting the flu in most cases. \\
"DATA",811.8,136,100,187,0)
 
"DATA",811.8,136,100,188,0)
Influenza or "flu" is a serious disease that spreads easily. It causes
"DATA",811.8,136,100,189,0)
fever, chills, cough, fatigue, aches, or loss of appetite. It can progress
"DATA",811.8,136,100,190,0)
to bronchitis, pneumonia and death.  Flu causes thousands of deaths each
"DATA",811.8,136,100,191,0)
year in the US that could be prevented if the flu shot or vaccine was
"DATA",811.8,136,100,192,0)
received.
"DATA",811.8,136,100,193,0)
811.9;+453,;62~9
"DATA",811.8,136,100,194,0)
811.9;+453,;63~0
"DATA",811.8,136,100,195,0)
811.9;+453,;65~WP-start~2
"DATA",811.8,136,100,196,0)
Your record shows that you have received the flu vaccine recently.  You 
"DATA",811.8,136,100,197,0)
should continue to get this vaccine every year in the Fall.
"DATA",811.8,136,100,198,0)
811.9;+453,;66~WP-start~26
"DATA",811.8,136,100,199,0)
Our records show that you have not received your flu shot for this 
"DATA",811.8,136,100,200,0)
season.  Please get your flu shot soon or tell us if you already got one.
"DATA",811.8,136,100,201,0)
 
"DATA",811.8,136,100,202,0)
The flu shot is recommended yearly for those who are at a higher risk to
"DATA",811.8,136,100,203,0)
have severe flu if they catch the flu. They include:\\
"DATA",811.8,136,100,204,0)
*     Anyone age 50 older.\\
"DATA",811.8,136,100,205,0)
*     Anyone with long-term health problems of the lungs, heart, or
"DATA",811.8,136,100,206,0)
kidney, asthma, or diabetes.\\
"DATA",811.8,136,100,207,0)
*     Anyone who has a weak immune system from HIV/AIDS, steroid
"DATA",811.8,136,100,208,0)
treatment, or cancer treatment.\\
"DATA",811.8,136,100,209,0)
*     Residents of nursing homes or other long-term care facilities.\\
"DATA",811.8,136,100,210,0)
 
"DATA",811.8,136,100,211,0)
The flu shot is not recommended for people who are allergic to eggs,
"DATA",811.8,136,100,212,0)
who have had a severe reaction to flu shot in the past, who are allergic
"DATA",811.8,136,100,213,0)
to thimerosol, who have a history of Guillian-Barre Syndrome (GBS), or
"DATA",811.8,136,100,214,0)
who have a high fever at the time.\\
"DATA",811.8,136,100,215,0)
The flu shot or vaccine protects most people from the flu. Some may still
"DATA",811.8,136,100,216,0)
catch the flu after having the shot but are likely to have a milder one.
"DATA",811.8,136,100,217,0)
 
"DATA",811.8,136,100,218,0)
The flu shot does NOT cause the flu. It protects one from the flu. The
"DATA",811.8,136,100,219,0)
vaccine is safe and it works. Most people will not have side effects. A
"DATA",811.8,136,100,220,0)
few may feel sore at the site where the shot was given. Fewer may have
"DATA",811.8,136,100,221,0)
fever, chills, headaches, or muscle aches. The best time to get a flu shot
"DATA",811.8,136,100,222,0)
is in October or November. However, getting the flu shot later in December
"DATA",811.8,136,100,223,0)
thru March will still give very good protection. VA Clinics offer flu
"DATA",811.8,136,100,224,0)
shots usually from September thru March.
"DATA",811.8,136,100,225,0)
811.9;+453,;67~2
"DATA",811.8,136,100,226,0)
811.9;+453,;68~26
"DATA",811.8,136,100,227,0)
811.9;+453,;70~WP-start~1
"DATA",811.8,136,100,228,0)
You should receive a flu vaccine every year.
"DATA",811.8,136,100,229,0)
811.9;+453,;72~1
"DATA",811.8,136,100,230,0)
811.9;+453,;73~0
"DATA",811.8,136,100,231,0)
811.9;+453,;76~WP-start~4
"DATA",811.8,136,100,232,0)
It is time for your yearly "flu shot" to protect you from catching the 
"DATA",811.8,136,100,233,0)
flu.  Please call your VA Clinic to find out how you can get your flu
"DATA",811.8,136,100,234,0)
shot. If you already had your flu shot this year, please tell your
"DATA",811.8,136,100,235,0)
provider or nurse at your next visit.
"DATA",811.8,136,100,236,0)
811.9;+453,;77~0
"DATA",811.8,136,100,237,0)
811.9;+453,;78~4
"DATA",811.8,136,100,238,0)
811.9;+453,;100~NATIONAL
"DATA",811.8,136,100,239,0)
811.9;+453,;101~National Clinical Practice Guideline Council
"DATA",811.8,136,100,240,0)
811.9;+453,;102~AUG 31, 2005
"DATA",811.8,136,100,241,0)
811.9;+453,;103~CPR
"DATA",811.8,136,100,242,0)
811.9001;+454,+453,;.01~11/22/2005@14:34:39
"DATA",811.8,136,100,243,0)
811.9001;+454,+453,;1~REDINGTON,PATRICK
"DATA",811.8,136,100,244,0)
811.9001;+454,+453,;2~WP-start~1
"DATA",811.8,136,100,245,0)
Exchange Stub
"DATA",811.8,136,100,246,0)
811.9002;+455,+453,;.01~http://www.cdc.gov/flu/
"DATA",811.8,136,100,247,0)
811.9002;+455,+453,;.02~CDC Website on Influenza
"DATA",811.8,136,100,248,0)
811.9002;+456,+453,;.01~https://www2.healthwise.net/myhealthevet/Content/StdDocument.aspx?DOCHWID=hw122012&SECHWID=hw122014
"DATA",811.8,136,100,249,0)
811.9002;+456,+453,;.02~Influenza
"DATA",811.8,136,100,250,0)
811.902;+457,+453,;.01~RT.VA-MHV INFLUENZA IMMUNIZATION
"DATA",811.8,136,100,251,0)
811.902;+457,+453,;4~WP-start~2
"DATA",811.8,136,100,252,0)
You have received your flu shot in the past. Please continue to have it 
"DATA",811.8,136,100,253,0)
every year.
"DATA",811.8,136,100,254,0)
811.902;+457,+453,;7~OR
"DATA",811.8,136,100,255,0)
811.902;+457,+453,;24~2
"DATA",811.8,136,100,256,0)
811.902;+457,+453,;25~0
"DATA",811.8,136,100,257,0)
811.902;+458,+453,;.01~RT.VA-MHV HIGH RISK FOR FLU
"DATA",811.8,136,100,258,0)
811.902;+458,+453,;3~1Y
"DATA",811.8,136,100,259,0)
811.902;+458,+453,;4~WP-start~2
"DATA",811.8,136,100,260,0)
Your record suggests that you have at least one health problem that puts 
"DATA",811.8,136,100,261,0)
you at higher risk of getting severe flu.
"DATA",811.8,136,100,262,0)
811.902;+458,+453,;8~OR
"DATA",811.8,136,100,263,0)
811.902;+458,+453,;9~T-2Y
"DATA",811.8,136,100,264,0)
811.902;+458,+453,;24~2
"DATA",811.8,136,100,265,0)
811.902;+458,+453,;25~0
"DATA",811.8,136,100,266,0)
811.902;+459,+453,;.01~RT.VA-MHV CONTRAINDICATION TO INFLUENZA VACCINE
"DATA",811.8,136,100,267,0)
811.902;+459,+453,;8~AND NOT
"DATA",811.8,136,100,268,0)
811.902;+459,+453,;24~0
"DATA",811.8,136,100,269,0)
811.902;+459,+453,;25~0
"DATA",811.8,136,100,270,0)
811.97;+460,+453,;.01~1Y
"DATA",811.8,136,100,271,0)
811.97;+460,+453,;1~50
"DATA",811.8,136,100,272,0)
811.97;+460,+453,;3~WP-start~2
"DATA",811.8,136,100,273,0)
All patients over the age of 50 should receive influenza vaccination 
"DATA",811.8,136,100,274,0)
unless they are allergic to eggs.
"DATA",811.8,136,100,275,0)
811.97;+460,+453,;5~2
"DATA",811.8,136,100,276,0)
811.97;+460,+453,;6~0
"DATA",811.8,136,100,277,0)
811.97;+461,+453,;.01~0Y
"DATA",811.8,136,100,278,0)
811.97;+461,+453,;2~49
"DATA",811.8,136,100,279,0)
811.97;+461,+453,;5~0
"DATA",811.8,136,100,280,0)
811.97;+461,+453,;6~0
"DATA",811.8,136,100,281,0)
]]>
"DATA",811.8,136,100,282,0)
</FILEMAN_FDA>
"DATA",811.8,136,100,283,0)
<IEN_ROOT>
"DATA",811.8,136,100,284,0)
<![CDATA[
"DATA",811.8,136,100,285,0)
454^1
"DATA",811.8,136,100,286,0)
455^2
"DATA",811.8,136,100,287,0)
456^3
"DATA",811.8,136,100,288,0)
457^1
"DATA",811.8,136,100,289,0)
458^2
"DATA",811.8,136,100,290,0)
459^3
"DATA",811.8,136,100,291,0)
460^1
"DATA",811.8,136,100,292,0)
461^2
"DATA",811.8,136,100,293,0)
]]>
"DATA",811.8,136,100,294,0)
</IEN_ROOT>
"DATA",811.8,136,100,295,0)
</FILEMAN_FILE>
"DATA",811.8,136,100,296,0)
<INDEX>
"DATA",811.8,136,100,297,0)
<NUMBER_OF_COMPONENTS>7</NUMBER_OF_COMPONENTS>
"DATA",811.8,136,100,298,0)
<COMPONENT>
"DATA",811.8,136,100,299,0)
<FDA_END>30</FDA_END>
"DATA",811.8,136,100,300,0)
<FDA_START>25</FDA_START>
"DATA",811.8,136,100,301,0)
<FILE_START>18</FILE_START>
"DATA",811.8,136,100,302,0)
<IEN_ROOT_END>35</IEN_ROOT_END>
"DATA",811.8,136,100,303,0)
<IEN_ROOT_START>35</IEN_ROOT_START>
"DATA",811.8,136,100,304,0)
</COMPONENT>
"DATA",811.8,136,100,305,0)
<COMPONENT>
"DATA",811.8,136,100,306,0)
<FDA_END>47</FDA_END>
"DATA",811.8,136,100,307,0)
<FDA_START>46</FDA_START>
"DATA",811.8,136,100,308,0)
<FILE_START>39</FILE_START>
"DATA",811.8,136,100,309,0)
</COMPONENT>
"DATA",811.8,136,100,310,0)
<COMPONENT>
"DATA",811.8,136,100,311,0)
<FDA_END>59</FDA_END>
"DATA",811.8,136,100,312,0)
<FDA_START>58</FDA_START>
"DATA",811.8,136,100,313,0)
<FILE_START>51</FILE_START>
"DATA",811.8,136,100,314,0)
</COMPONENT>
"DATA",811.8,136,100,315,0)
<COMPONENT>
"DATA",811.8,136,100,316,0)
<FDA_END>87</FDA_END>
"DATA",811.8,136,100,317,0)
<FDA_START>70</FDA_START>
"DATA",811.8,136,100,318,0)
<FILE_START>63</FILE_START>
"DATA",811.8,136,100,319,0)
<IEN_ROOT_END>94</IEN_ROOT_END>
"DATA",811.8,136,100,320,0)
<IEN_ROOT_START>92</IEN_ROOT_START>
"DATA",811.8,136,100,321,0)
</COMPONENT>
"DATA",811.8,136,100,322,0)
<COMPONENT>
"DATA",811.8,136,100,323,0)
<FDA_END>111</FDA_END>
"DATA",811.8,136,100,324,0)
<FDA_START>105</FDA_START>
"DATA",811.8,136,100,325,0)
<FILE_START>98</FILE_START>
"DATA",811.8,136,100,326,0)
<IEN_ROOT_END>116</IEN_ROOT_END>
"DATA",811.8,136,100,327,0)
<IEN_ROOT_START>116</IEN_ROOT_START>
"DATA",811.8,136,100,328,0)
</COMPONENT>
"DATA",811.8,136,100,329,0)
<COMPONENT>
"DATA",811.8,136,100,330,0)
<FDA_END>140</FDA_END>
"DATA",811.8,136,100,331,0)
<FDA_START>127</FDA_START>
"DATA",811.8,136,100,332,0)
<FILE_START>120</FILE_START>
"DATA",811.8,136,100,333,0)
<IEN_ROOT_END>145</IEN_ROOT_END>
"DATA",811.8,136,100,334,0)
<IEN_ROOT_START>145</IEN_ROOT_START>
"DATA",811.8,136,100,335,0)
</COMPONENT>
"DATA",811.8,136,100,336,0)
<COMPONENT>
"DATA",811.8,136,100,337,0)
<FDA_END>280</FDA_END>
"DATA",811.8,136,100,338,0)
<FDA_START>156</FDA_START>
"DATA",811.8,136,100,339,0)
<FILE_START>149</FILE_START>
"DATA",811.8,136,100,340,0)
<IEN_ROOT_END>292</IEN_ROOT_END>
"DATA",811.8,136,100,341,0)
<IEN_ROOT_START>285</IEN_ROOT_START>
"DATA",811.8,136,100,342,0)
</COMPONENT>
"DATA",811.8,136,100,343,0)
</INDEX>
"DATA",811.8,136,100,344,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,136,110,0)
^811.804^12^12
"DATA",811.8,136,110,1,0)
Reminder:    VA-MHV INFLUENZA VACCINE
"DATA",811.8,136,110,2,0)
Source:      REDINGTON,PATRICK at SALT LAKE CITY OIFO
"DATA",811.8,136,110,3,0)
Date Packed: 11/22/2005@14:34:28
"DATA",811.8,136,110,4,0)
Package Version: 2.0
"DATA",811.8,136,110,5,0)

"DATA",811.8,136,110,6,0)
Description:
"DATA",811.8,136,110,7,0)

"DATA",811.8,136,110,8,0)

"DATA",811.8,136,110,9,0)
Keywords:
"DATA",811.8,136,110,10,0)

"DATA",811.8,136,110,11,0)

"DATA",811.8,136,110,12,0)
Components:
"DATA",811.8,136,115)
REMINDER
"DATA",811.8,152,0)
VA-*QUERI LIST RULE UPDATES^REDINGTON,PATRICK at SALT LAKE CITY OIFO^3060703.110054
"DATA",811.8,152,100,0)
^811.801^380^380
"DATA",811.8,152,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,152,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,152,100,3,0)
<PACKAGE_VERSION>2.0</PACKAGE_VERSION>
"DATA",811.8,152,100,4,0)
<INDEX_AT>314</INDEX_AT>
"DATA",811.8,152,100,5,0)
<SOURCE>
"DATA",811.8,152,100,6,0)
<NAME>QUERI LIST RULE UPDATES</NAME>
"DATA",811.8,152,100,7,0)
<USER>REDINGTON,PATRICK</USER>
"DATA",811.8,152,100,8,0)
<SITE>SALT LAKE CITY OIFO</SITE>
"DATA",811.8,152,100,9,0)
<DATE_PACKED>07/03/2006@11:00:54</DATE_PACKED>
"DATA",811.8,152,100,10,0)
</SOURCE>
"DATA",811.8,152,100,11,0)
<EXCHANGE_TYPE>EXTRACT</EXCHANGE_TYPE>
"DATA",811.8,152,100,12,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,152,100,13,0)
QUERI list rule updates using VA-FR-DATE OF DEATH.
"DATA",811.8,152,100,14,0)

"DATA",811.8,152,100,15,0)
]]></DESCRIPTION>
"DATA",811.8,152,100,16,0)
<KEYWORDS>
"DATA",811.8,152,100,17,0)
<KEYWORD>QUERI</KEYWORD>
"DATA",811.8,152,100,18,0)
<KEYWORD> LIST RULES</KEYWORD>
"DATA",811.8,152,100,19,0)
<KEYWORD></KEYWORD>
"DATA",811.8,152,100,20,0)
</KEYWORDS>
"DATA",811.8,152,100,21,0)
<FILEMAN_FILE>
"DATA",811.8,152,100,22,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,152,100,23,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,152,100,24,0)
<POINT_01>VA-DATE OF BIRTH</POINT_01>
"DATA",811.8,152,100,25,0)
<INTERNAL_ENTRY_NUMBER>698</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,152,100,26,0)
<FILEMAN_FDA>
"DATA",811.8,152,100,27,0)
<![CDATA[
"DATA",811.8,152,100,28,0)
811.5;+698,;.01~VA-DATE OF BIRTH
"DATA",811.8,152,100,29,0)
811.5;+698,;1~WP-start~3
"DATA",811.8,152,100,30,0)
This term can be used for information dealing with the patient's
"DATA",811.8,152,100,31,0)
date of birth.
"DATA",811.8,152,100,32,0)

"DATA",811.8,152,100,33,0)
811.5;+698,;100~NATIONAL
"DATA",811.8,152,100,34,0)
811.52;+699,+698,;.01~CF.VA-DATE OF BIRTH
"DATA",811.8,152,100,35,0)
811.53;+700,+698,;.01~07/03/2006@11:00:54
"DATA",811.8,152,100,36,0)
811.53;+700,+698,;1~REDINGTON,PATRICK
"DATA",811.8,152,100,37,0)
811.53;+700,+698,;2~WP-start~1
"DATA",811.8,152,100,38,0)
Exchange Stub
"DATA",811.8,152,100,39,0)
]]>
"DATA",811.8,152,100,40,0)
</FILEMAN_FDA>
"DATA",811.8,152,100,41,0)
<IEN_ROOT>
"DATA",811.8,152,100,42,0)
<![CDATA[
"DATA",811.8,152,100,43,0)
699^1
"DATA",811.8,152,100,44,0)
700^1
"DATA",811.8,152,100,45,0)
]]>
"DATA",811.8,152,100,46,0)
</IEN_ROOT>
"DATA",811.8,152,100,47,0)
</FILEMAN_FILE>
"DATA",811.8,152,100,48,0)
<FILEMAN_FILE>
"DATA",811.8,152,100,49,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,152,100,50,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,152,100,51,0)
<POINT_01>VA-DATE OF DEATH</POINT_01>
"DATA",811.8,152,100,52,0)
<INTERNAL_ENTRY_NUMBER>697</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,152,100,53,0)
<FILEMAN_FDA>
"DATA",811.8,152,100,54,0)
<![CDATA[
"DATA",811.8,152,100,55,0)
811.5;+697,;.01~VA-DATE OF DEATH
"DATA",811.8,152,100,56,0)
811.5;+697,;1~WP-start~3
"DATA",811.8,152,100,57,0)
This term is based on the computed finding VA-DATE OF DEATH and can
"DATA",811.8,152,100,58,0)
be used for findings the deal with the patient's date of death.
"DATA",811.8,152,100,59,0)

"DATA",811.8,152,100,60,0)
811.5;+697,;100~NATIONAL
"DATA",811.8,152,100,61,0)
811.52;+698,+697,;.01~CF.VA-DATE OF DEATH
"DATA",811.8,152,100,62,0)
811.53;+699,+697,;.01~07/03/2006@11:00:54
"DATA",811.8,152,100,63,0)
811.53;+699,+697,;1~REDINGTON,PATRICK
"DATA",811.8,152,100,64,0)
811.53;+699,+697,;2~WP-start~1
"DATA",811.8,152,100,65,0)
Exchange Stub
"DATA",811.8,152,100,66,0)
]]>
"DATA",811.8,152,100,67,0)
</FILEMAN_FDA>
"DATA",811.8,152,100,68,0)
<IEN_ROOT>
"DATA",811.8,152,100,69,0)
<![CDATA[
"DATA",811.8,152,100,70,0)
698^1
"DATA",811.8,152,100,71,0)
699^1
"DATA",811.8,152,100,72,0)
]]>
"DATA",811.8,152,100,73,0)
</IEN_ROOT>
"DATA",811.8,152,100,74,0)
</FILEMAN_FILE>
"DATA",811.8,152,100,75,0)
<FILEMAN_FILE>
"DATA",811.8,152,100,76,0)
<FILE_NAME>REMINDER LIST RULE</FILE_NAME>
"DATA",811.8,152,100,77,0)
<FILE_NUMBER>810.4</FILE_NUMBER>
"DATA",811.8,152,100,78,0)
<POINT_01>VA-FR-DATE OF DEATH</POINT_01>
"DATA",811.8,152,100,79,0)
<INTERNAL_ENTRY_NUMBER>60</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,152,100,80,0)
<FILEMAN_FDA>
"DATA",811.8,152,100,81,0)
<![CDATA[
"DATA",811.8,152,100,82,0)
810.4;+60,;.01~VA-FR-DATE OF DEATH
"DATA",811.8,152,100,83,0)
810.4;+60,;.02~Date of Death
"DATA",811.8,152,100,84,0)
810.4;+60,;.03~FINDING RULE
"DATA",811.8,152,100,85,0)
810.4;+60,;1~VA-DATE OF DEATH
"DATA",811.8,152,100,86,0)
810.4;+60,;100~NATIONAL
"DATA",811.8,152,100,87,0)
810.42;+61,+60,;.01~07/03/2006@11:00:54
"DATA",811.8,152,100,88,0)
810.42;+61,+60,;1~REDINGTON,PATRICK
"DATA",811.8,152,100,89,0)
810.42;+61,+60,;2~WP-start~1
"DATA",811.8,152,100,90,0)
Exchange Stub
"DATA",811.8,152,100,91,0)
]]>
"DATA",811.8,152,100,92,0)
</FILEMAN_FDA>
"DATA",811.8,152,100,93,0)
<IEN_ROOT>
"DATA",811.8,152,100,94,0)
<![CDATA[
"DATA",811.8,152,100,95,0)
61^1
"DATA",811.8,152,100,96,0)
]]>
"DATA",811.8,152,100,97,0)
</IEN_ROOT>
"DATA",811.8,152,100,98,0)
</FILEMAN_FILE>
"DATA",811.8,152,100,99,0)
<FILEMAN_FILE>
"DATA",811.8,152,100,100,0)
<FILE_NAME>REMINDER LIST RULE</FILE_NAME>
"DATA",811.8,152,100,101,0)
<FILE_NUMBER>810.4</FILE_NUMBER>
"DATA",811.8,152,100,102,0)
<POINT_01>VA-*IHD QUERI 412 PTS WITH QUALIFY AND ANCHOR VISIT</POINT_01>
"DATA",811.8,152,100,103,0)
<INTERNAL_ENTRY_NUMBER>12</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,152,100,104,0)
<FILEMAN_FDA>
"DATA",811.8,152,100,105,0)
<![CDATA[
"DATA",811.8,152,100,106,0)
810.4;+12,;.01~VA-*IHD QUERI 412 PTS WITH QUALIFY AND ANCHOR VISIT
"DATA",811.8,152,100,107,0)
810.4;+12,;.02~IHD 412 patients with qualifying and anchor visits.
"DATA",811.8,152,100,108,0)
810.4;+12,;.03~RULE SET
"DATA",811.8,152,100,109,0)
810.4;+12,;100~NATIONAL
"DATA",811.8,152,100,110,0)
810.41;+13,+12,;.01~001
"DATA",811.8,152,100,111,0)
810.41;+13,+12,;.02~VA-*IHD QUERI PATIENT LIST (QUALIFY AND ANCHOR)
"DATA",811.8,152,100,112,0)
810.41;+13,+12,;.03~ADD PATIENT
"DATA",811.8,152,100,113,0)
810.41;+14,+12,;.01~002
"DATA",811.8,152,100,114,0)
810.41;+14,+12,;.02~VA-*IHD QUERI 412 DIAGNOSIS
"DATA",811.8,152,100,115,0)
810.41;+14,+12,;.03~SELECT
"DATA",811.8,152,100,116,0)
810.41;+15,+12,;.01~003
"DATA",811.8,152,100,117,0)
810.41;+15,+12,;.02~VA-FR-DATE OF DEATH
"DATA",811.8,152,100,118,0)
810.41;+15,+12,;.03~REMOVE
"DATA",811.8,152,100,119,0)
810.41;+15,+12,;3~BDT-1D
"DATA",811.8,152,100,120,0)
810.42;+16,+12,;.01~07/03/2006@11:00:54
"DATA",811.8,152,100,121,0)
810.42;+16,+12,;1~REDINGTON,PATRICK
"DATA",811.8,152,100,122,0)
810.42;+16,+12,;2~WP-start~1
"DATA",811.8,152,100,123,0)
Exchange Stub
"DATA",811.8,152,100,124,0)
]]>
"DATA",811.8,152,100,125,0)
</FILEMAN_FDA>
"DATA",811.8,152,100,126,0)
<IEN_ROOT>
"DATA",811.8,152,100,127,0)
<![CDATA[
"DATA",811.8,152,100,128,0)
13^1
"DATA",811.8,152,100,129,0)
14^2
"DATA",811.8,152,100,130,0)
15^3
"DATA",811.8,152,100,131,0)
16^1
"DATA",811.8,152,100,132,0)
]]>
"DATA",811.8,152,100,133,0)
</IEN_ROOT>
"DATA",811.8,152,100,134,0)
</FILEMAN_FILE>
"DATA",811.8,152,100,135,0)
<FILEMAN_FILE>
"DATA",811.8,152,100,136,0)
<FILE_NAME>REMINDER LIST RULE</FILE_NAME>
"DATA",811.8,152,100,137,0)
<FILE_NUMBER>810.4</FILE_NUMBER>
"DATA",811.8,152,100,138,0)
<POINT_01>VA-*IHD QUERI 412 PTS WITH QUALIFY AND ANCHOR VISIT ON LLA MEDS</POINT_01>
"DATA",811.8,152,100,139,0)
<INTERNAL_ENTRY_NUMBER>15</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,152,100,140,0)
<FILEMAN_FDA>
"DATA",811.8,152,100,141,0)
<![CDATA[
"DATA",811.8,152,100,142,0)
810.4;+15,;.01~VA-*IHD QUERI 412 PTS WITH QUALIFY AND ANCHOR VISIT ON LLA MEDS
"DATA",811.8,152,100,143,0)
810.4;+15,;.02~IHD 412 patients with anchor and qualifying visits on LLA meds.
"DATA",811.8,152,100,144,0)
810.4;+15,;.03~RULE SET
"DATA",811.8,152,100,145,0)
810.4;+15,;100~NATIONAL
"DATA",811.8,152,100,146,0)
810.41;+16,+15,;.01~001
"DATA",811.8,152,100,147,0)
810.41;+16,+15,;.02~VA-*IHD QUERI PATIENT LIST (QUALIFY AND ANCHOR)
"DATA",811.8,152,100,148,0)
810.41;+16,+15,;.03~ADD PATIENT
"DATA",811.8,152,100,149,0)
810.41;+17,+15,;.01~002
"DATA",811.8,152,100,150,0)
810.41;+17,+15,;.02~VA-*IHD QUERI LIPID LOWERING MEDS
"DATA",811.8,152,100,151,0)
810.41;+17,+15,;.03~SELECT
"DATA",811.8,152,100,152,0)
810.41;+18,+15,;.01~003
"DATA",811.8,152,100,153,0)
810.41;+18,+15,;.02~VA-FR-DATE OF DEATH
"DATA",811.8,152,100,154,0)
810.41;+18,+15,;.03~REMOVE
"DATA",811.8,152,100,155,0)
810.41;+18,+15,;3~BDT-1D
"DATA",811.8,152,100,156,0)
810.42;+19,+15,;.01~07/03/2006@11:00:54
"DATA",811.8,152,100,157,0)
810.42;+19,+15,;1~REDINGTON,PATRICK
"DATA",811.8,152,100,158,0)
810.42;+19,+15,;2~WP-start~1
"DATA",811.8,152,100,159,0)
Exchange Stub
"DATA",811.8,152,100,160,0)
]]>
"DATA",811.8,152,100,161,0)
</FILEMAN_FDA>
"DATA",811.8,152,100,162,0)
<IEN_ROOT>
"DATA",811.8,152,100,163,0)
<![CDATA[
"DATA",811.8,152,100,164,0)
16^5
"DATA",811.8,152,100,165,0)
17^6
"DATA",811.8,152,100,166,0)
18^7
"DATA",811.8,152,100,167,0)
19^1
"DATA",811.8,152,100,168,0)
]]>
"DATA",811.8,152,100,169,0)
</IEN_ROOT>
"DATA",811.8,152,100,170,0)
</FILEMAN_FILE>
"DATA",811.8,152,100,171,0)
<FILEMAN_FILE>
"DATA",811.8,152,100,172,0)
<FILE_NAME>REMINDER LIST RULE</FILE_NAME>
"DATA",811.8,152,100,173,0)
<FILE_NUMBER>810.4</FILE_NUMBER>
"DATA",811.8,152,100,174,0)
<POINT_01>VA-*IHD QUERI PTS WITH QUALIFY AND ANCHOR VISIT</POINT_01>
"DATA",811.8,152,100,175,0)
<INTERNAL_ENTRY_NUMBER>6</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,152,100,176,0)
<FILEMAN_FDA>
"DATA",811.8,152,100,177,0)
<![CDATA[
"DATA",811.8,152,100,178,0)
810.4;+6,;.01~VA-*IHD QUERI PTS WITH QUALIFY AND ANCHOR VISIT
"DATA",811.8,152,100,179,0)
810.4;+6,;.02~IHD patients with qualifying and anchor visits.
"DATA",811.8,152,100,180,0)
810.4;+6,;.03~RULE SET
"DATA",811.8,152,100,181,0)
810.4;+6,;100~NATIONAL
"DATA",811.8,152,100,182,0)
810.41;+7,+6,;.01~001
"DATA",811.8,152,100,183,0)
810.41;+7,+6,;.02~VA-*IHD QUERI PATIENT LIST (QUALIFY VISIT, NO ANCHOR)
"DATA",811.8,152,100,184,0)
810.41;+7,+6,;.03~ADD PATIENT
"DATA",811.8,152,100,185,0)
810.41;+8,+6,;.01~002
"DATA",811.8,152,100,186,0)
810.41;+8,+6,;.02~VA-*IHD QUERI ANCHOR VISIT
"DATA",811.8,152,100,187,0)
810.41;+8,+6,;.03~SELECT
"DATA",811.8,152,100,188,0)
810.41;+9,+6,;.01~003
"DATA",811.8,152,100,189,0)
810.41;+9,+6,;.02~VA-FR-DATE OF DEATH
"DATA",811.8,152,100,190,0)
810.41;+9,+6,;.03~REMOVE
"DATA",811.8,152,100,191,0)
810.41;+9,+6,;3~BDT-1D
"DATA",811.8,152,100,192,0)
810.42;+10,+6,;.01~07/03/2006@11:00:54
"DATA",811.8,152,100,193,0)
810.42;+10,+6,;1~REDINGTON,PATRICK
"DATA",811.8,152,100,194,0)
810.42;+10,+6,;2~WP-start~1
"DATA",811.8,152,100,195,0)
Exchange Stub
"DATA",811.8,152,100,196,0)
]]>
"DATA",811.8,152,100,197,0)
</FILEMAN_FDA>
"DATA",811.8,152,100,198,0)
<IEN_ROOT>
"DATA",811.8,152,100,199,0)
<![CDATA[
"DATA",811.8,152,100,200,0)
7^3
"DATA",811.8,152,100,201,0)
8^4
"DATA",811.8,152,100,202,0)
9^5
"DATA",811.8,152,100,203,0)
10^1
"DATA",811.8,152,100,204,0)
]]>
"DATA",811.8,152,100,205,0)
</IEN_ROOT>
"DATA",811.8,152,100,206,0)
</FILEMAN_FILE>
"DATA",811.8,152,100,207,0)
<FILEMAN_FILE>
"DATA",811.8,152,100,208,0)
<FILE_NAME>REMINDER LIST RULE</FILE_NAME>
"DATA",811.8,152,100,209,0)
<FILE_NUMBER>810.4</FILE_NUMBER>
"DATA",811.8,152,100,210,0)
<POINT_01>VA-*IHD QUERI PTS WITH QUALIFY AND ANCHOR VISIT ON LLA MEDS</POINT_01>
"DATA",811.8,152,100,211,0)
<INTERNAL_ENTRY_NUMBER>14</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,152,100,212,0)
<FILEMAN_FDA>
"DATA",811.8,152,100,213,0)
<![CDATA[
"DATA",811.8,152,100,214,0)
810.4;+14,;.01~VA-*IHD QUERI PTS WITH QUALIFY AND ANCHOR VISIT ON LLA MEDS
"DATA",811.8,152,100,215,0)
810.4;+14,;.02~IHD patients with anchor and qualifying visits on LLA meds.
"DATA",811.8,152,100,216,0)
810.4;+14,;.03~RULE SET
"DATA",811.8,152,100,217,0)
810.4;+14,;100~NATIONAL
"DATA",811.8,152,100,218,0)
810.41;+15,+14,;.01~001
"DATA",811.8,152,100,219,0)
810.41;+15,+14,;.02~VA-*IHD QUERI PATIENT LIST (QUALIFY AND ANCHOR)
"DATA",811.8,152,100,220,0)
810.41;+15,+14,;.03~ADD PATIENT
"DATA",811.8,152,100,221,0)
810.41;+16,+14,;.01~002
"DATA",811.8,152,100,222,0)
810.41;+16,+14,;.02~VA-*IHD QUERI LIPID LOWERING MEDS
"DATA",811.8,152,100,223,0)
810.41;+16,+14,;.03~SELECT
"DATA",811.8,152,100,224,0)
810.41;+17,+14,;.01~003
"DATA",811.8,152,100,225,0)
810.41;+17,+14,;.02~VA-FR-DATE OF DEATH
"DATA",811.8,152,100,226,0)
810.41;+17,+14,;.03~REMOVE
"DATA",811.8,152,100,227,0)
810.41;+17,+14,;3~BDT-1D
"DATA",811.8,152,100,228,0)
810.42;+18,+14,;.01~07/03/2006@11:00:54
"DATA",811.8,152,100,229,0)
810.42;+18,+14,;1~REDINGTON,PATRICK
"DATA",811.8,152,100,230,0)
810.42;+18,+14,;2~WP-start~1
"DATA",811.8,152,100,231,0)
Exchange Stub
"DATA",811.8,152,100,232,0)
]]>
"DATA",811.8,152,100,233,0)
</FILEMAN_FDA>
"DATA",811.8,152,100,234,0)
<IEN_ROOT>
"DATA",811.8,152,100,235,0)
<![CDATA[
"DATA",811.8,152,100,236,0)
15^5
"DATA",811.8,152,100,237,0)
16^6
"DATA",811.8,152,100,238,0)
17^7
"DATA",811.8,152,100,239,0)
18^1
"DATA",811.8,152,100,240,0)
]]>
"DATA",811.8,152,100,241,0)
</IEN_ROOT>
"DATA",811.8,152,100,242,0)
</FILEMAN_FILE>
"DATA",811.8,152,100,243,0)
<FILEMAN_FILE>
"DATA",811.8,152,100,244,0)
<FILE_NAME>REMINDER LIST RULE</FILE_NAME>
"DATA",811.8,152,100,245,0)
<FILE_NUMBER>810.4</FILE_NUMBER>
"DATA",811.8,152,100,246,0)
<POINT_01>VA-*IHD QUERI PTS WITH QUALIFY VISIT</POINT_01>
"DATA",811.8,152,100,247,0)
<INTERNAL_ENTRY_NUMBER>7</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,152,100,248,0)
<FILEMAN_FDA>
"DATA",811.8,152,100,249,0)
<![CDATA[
"DATA",811.8,152,100,250,0)
810.4;+7,;.01~VA-*IHD QUERI PTS WITH QUALIFY VISIT
"DATA",811.8,152,100,251,0)
810.4;+7,;.02~IHD patients with a qualifying visit.
"DATA",811.8,152,100,252,0)
810.4;+7,;.03~RULE SET
"DATA",811.8,152,100,253,0)
810.4;+7,;100~NATIONAL
"DATA",811.8,152,100,254,0)
810.41;+10,+7,;.01~003
"DATA",811.8,152,100,255,0)
810.41;+10,+7,;.02~VA-*IHD QUERI AMI DIAGNOSIS WITHIN 60 DAYS
"DATA",811.8,152,100,256,0)
810.41;+10,+7,;.03~REMOVE
"DATA",811.8,152,100,257,0)
810.41;+11,+7,;.01~004
"DATA",811.8,152,100,258,0)
810.41;+11,+7,;.02~VA-*IHD QUERI ASSOCIATE PRIMARY CARE STATION
"DATA",811.8,152,100,259,0)
810.41;+11,+7,;.03~INSERT FINDING
"DATA",811.8,152,100,260,0)
810.41;+8,+7,;.01~001
"DATA",811.8,152,100,261,0)
810.41;+8,+7,;.02~VA-*IHD QUERI DIAGNOSIS
"DATA",811.8,152,100,262,0)
810.41;+8,+7,;.03~ADD PATIENT
"DATA",811.8,152,100,263,0)
810.41;+9,+7,;.01~002
"DATA",811.8,152,100,264,0)
810.41;+9,+7,;.02~VA-*IHD QUERI QUALIFYING VISIT
"DATA",811.8,152,100,265,0)
810.41;+9,+7,;.03~SELECT
"DATA",811.8,152,100,266,0)
810.42;+12,+7,;.01~07/03/2006@11:00:54
"DATA",811.8,152,100,267,0)
810.42;+12,+7,;1~REDINGTON,PATRICK
"DATA",811.8,152,100,268,0)
810.42;+12,+7,;2~WP-start~1
"DATA",811.8,152,100,269,0)
Exchange Stub
"DATA",811.8,152,100,270,0)
]]>
"DATA",811.8,152,100,271,0)
</FILEMAN_FDA>
"DATA",811.8,152,100,272,0)
<IEN_ROOT>
"DATA",811.8,152,100,273,0)
<![CDATA[
"DATA",811.8,152,100,274,0)
8^1
"DATA",811.8,152,100,275,0)
9^2
"DATA",811.8,152,100,276,0)
10^3
"DATA",811.8,152,100,277,0)
11^4
"DATA",811.8,152,100,278,0)
12^1
"DATA",811.8,152,100,279,0)
]]>
"DATA",811.8,152,100,280,0)
</IEN_ROOT>
"DATA",811.8,152,100,281,0)
</FILEMAN_FILE>
"DATA",811.8,152,100,282,0)
<FILEMAN_FILE>
"DATA",811.8,152,100,283,0)
<FILE_NAME>REMINDER LIST RULE</FILE_NAME>
"DATA",811.8,152,100,284,0)
<FILE_NUMBER>810.4</FILE_NUMBER>
"DATA",811.8,152,100,285,0)
<POINT_01>VA-*MH QUERI QUALIFYING PC VISIT</POINT_01>
"DATA",811.8,152,100,286,0)
<INTERNAL_ENTRY_NUMBER>10</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,152,100,287,0)
<FILEMAN_FDA>
"DATA",811.8,152,100,288,0)
<![CDATA[
"DATA",811.8,152,100,289,0)
810.4;+10,;.01~VA-*MH QUERI QUALIFYING PC VISIT
"DATA",811.8,152,100,290,0)
810.4;+10,;.02~Patients with qualifying primary care visit
"DATA",811.8,152,100,291,0)
810.4;+10,;.03~RULE SET
"DATA",811.8,152,100,292,0)
810.4;+10,;100~NATIONAL
"DATA",811.8,152,100,293,0)
810.41;+11,+10,;.01~001
"DATA",811.8,152,100,294,0)
810.41;+11,+10,;.02~VA-*MH QUERI QUALIFY PC VISIT
"DATA",811.8,152,100,295,0)
810.41;+11,+10,;.03~ADD PATIENT
"DATA",811.8,152,100,296,0)
810.41;+12,+10,;.01~002
"DATA",811.8,152,100,297,0)
810.41;+12,+10,;.02~VA-FR-DATE OF DEATH
"DATA",811.8,152,100,298,0)
810.41;+12,+10,;.03~REMOVE
"DATA",811.8,152,100,299,0)
810.41;+12,+10,;3~BDT-1D
"DATA",811.8,152,100,300,0)
810.42;+13,+10,;.01~07/03/2006@11:00:54
"DATA",811.8,152,100,301,0)
810.42;+13,+10,;1~REDINGTON,PATRICK
"DATA",811.8,152,100,302,0)
810.42;+13,+10,;2~WP-start~1
"DATA",811.8,152,100,303,0)
Exchange Stub
"DATA",811.8,152,100,304,0)
]]>
"DATA",811.8,152,100,305,0)
</FILEMAN_FDA>
"DATA",811.8,152,100,306,0)
<IEN_ROOT>
"DATA",811.8,152,100,307,0)
<![CDATA[
"DATA",811.8,152,100,308,0)
11^1
"DATA",811.8,152,100,309,0)
12^2
"DATA",811.8,152,100,310,0)
13^1
"DATA",811.8,152,100,311,0)
]]>
"DATA",811.8,152,100,312,0)
</IEN_ROOT>
"DATA",811.8,152,100,313,0)
</FILEMAN_FILE>
"DATA",811.8,152,100,314,0)
<INDEX>
"DATA",811.8,152,100,315,0)
<NUMBER_OF_COMPONENTS>9</NUMBER_OF_COMPONENTS>
"DATA",811.8,152,100,316,0)
<COMPONENT>
"DATA",811.8,152,100,317,0)
<FDA_END>38</FDA_END>
"DATA",811.8,152,100,318,0)
<FDA_START>28</FDA_START>
"DATA",811.8,152,100,319,0)
<FILE_START>21</FILE_START>
"DATA",811.8,152,100,320,0)
<IEN_ROOT_END>44</IEN_ROOT_END>
"DATA",811.8,152,100,321,0)
<IEN_ROOT_START>43</IEN_ROOT_START>
"DATA",811.8,152,100,322,0)
</COMPONENT>
"DATA",811.8,152,100,323,0)
<COMPONENT>
"DATA",811.8,152,100,324,0)
<FDA_END>65</FDA_END>
"DATA",811.8,152,100,325,0)
<FDA_START>55</FDA_START>
"DATA",811.8,152,100,326,0)
<FILE_START>48</FILE_START>
"DATA",811.8,152,100,327,0)
<IEN_ROOT_END>71</IEN_ROOT_END>
"DATA",811.8,152,100,328,0)
<IEN_ROOT_START>70</IEN_ROOT_START>
"DATA",811.8,152,100,329,0)
</COMPONENT>
"DATA",811.8,152,100,330,0)
<COMPONENT>
"DATA",811.8,152,100,331,0)
<FDA_END>90</FDA_END>
"DATA",811.8,152,100,332,0)
<FDA_START>82</FDA_START>
"DATA",811.8,152,100,333,0)
<FILE_START>75</FILE_START>
"DATA",811.8,152,100,334,0)
<IEN_ROOT_END>95</IEN_ROOT_END>
"DATA",811.8,152,100,335,0)
<IEN_ROOT_START>95</IEN_ROOT_START>
"DATA",811.8,152,100,336,0)
</COMPONENT>
"DATA",811.8,152,100,337,0)
<COMPONENT>
"DATA",811.8,152,100,338,0)
<FDA_END>123</FDA_END>
"DATA",811.8,152,100,339,0)
<FDA_START>106</FDA_START>
"DATA",811.8,152,100,340,0)
<FILE_START>99</FILE_START>
"DATA",811.8,152,100,341,0)
<IEN_ROOT_END>131</IEN_ROOT_END>
"DATA",811.8,152,100,342,0)
<IEN_ROOT_START>128</IEN_ROOT_START>
"DATA",811.8,152,100,343,0)
</COMPONENT>
"DATA",811.8,152,100,344,0)
<COMPONENT>
"DATA",811.8,152,100,345,0)
<FDA_END>159</FDA_END>
"DATA",811.8,152,100,346,0)
<FDA_START>142</FDA_START>
"DATA",811.8,152,100,347,0)
<FILE_START>135</FILE_START>
"DATA",811.8,152,100,348,0)
<IEN_ROOT_END>167</IEN_ROOT_END>
"DATA",811.8,152,100,349,0)
<IEN_ROOT_START>164</IEN_ROOT_START>
"DATA",811.8,152,100,350,0)
</COMPONENT>
"DATA",811.8,152,100,351,0)
<COMPONENT>
"DATA",811.8,152,100,352,0)
<FDA_END>195</FDA_END>
"DATA",811.8,152,100,353,0)
<FDA_START>178</FDA_START>
"DATA",811.8,152,100,354,0)
<FILE_START>171</FILE_START>
"DATA",811.8,152,100,355,0)
<IEN_ROOT_END>203</IEN_ROOT_END>
"DATA",811.8,152,100,356,0)
<IEN_ROOT_START>200</IEN_ROOT_START>
"DATA",811.8,152,100,357,0)
</COMPONENT>
"DATA",811.8,152,100,358,0)
<COMPONENT>
"DATA",811.8,152,100,359,0)
<FDA_END>231</FDA_END>
"DATA",811.8,152,100,360,0)
<FDA_START>214</FDA_START>
"DATA",811.8,152,100,361,0)
<FILE_START>207</FILE_START>
"DATA",811.8,152,100,362,0)
<IEN_ROOT_END>239</IEN_ROOT_END>
"DATA",811.8,152,100,363,0)
<IEN_ROOT_START>236</IEN_ROOT_START>
"DATA",811.8,152,100,364,0)
</COMPONENT>
"DATA",811.8,152,100,365,0)
<COMPONENT>
"DATA",811.8,152,100,366,0)
<FDA_END>269</FDA_END>
"DATA",811.8,152,100,367,0)
<FDA_START>250</FDA_START>
"DATA",811.8,152,100,368,0)
<FILE_START>243</FILE_START>
"DATA",811.8,152,100,369,0)
<IEN_ROOT_END>278</IEN_ROOT_END>
"DATA",811.8,152,100,370,0)
<IEN_ROOT_START>274</IEN_ROOT_START>
"DATA",811.8,152,100,371,0)
</COMPONENT>
"DATA",811.8,152,100,372,0)
<COMPONENT>
"DATA",811.8,152,100,373,0)
<FDA_END>303</FDA_END>
"DATA",811.8,152,100,374,0)
<FDA_START>289</FDA_START>
"DATA",811.8,152,100,375,0)
<FILE_START>282</FILE_START>
"DATA",811.8,152,100,376,0)
<IEN_ROOT_END>310</IEN_ROOT_END>
"DATA",811.8,152,100,377,0)
<IEN_ROOT_START>308</IEN_ROOT_START>
"DATA",811.8,152,100,378,0)
</COMPONENT>
"DATA",811.8,152,100,379,0)
</INDEX>
"DATA",811.8,152,100,380,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,152,110,0)
^811.804^14^14
"DATA",811.8,152,110,1,0)
Reminder:    QUERI LIST RULE UPDATES
"DATA",811.8,152,110,2,0)
Source:      REDINGTON,PATRICK at SALT LAKE CITY OIFO
"DATA",811.8,152,110,3,0)
Date Packed: 07/03/2006@11:00:54
"DATA",811.8,152,110,4,0)
Package Version: 2.0
"DATA",811.8,152,110,5,0)

"DATA",811.8,152,110,6,0)
Description:
"DATA",811.8,152,110,7,0)
QUERI list rule updates using VA-FR-DATE OF DEATH.
"DATA",811.8,152,110,8,0)

"DATA",811.8,152,110,9,0)

"DATA",811.8,152,110,10,0)
Keywords:
"DATA",811.8,152,110,11,0)
QUERI, LIST RULES
"DATA",811.8,152,110,12,0)

"DATA",811.8,152,110,13,0)

"DATA",811.8,152,110,14,0)
Components:
"DATA",811.8,152,115)
EXTRACT
"DATA",811.8,152,119)
2
"DATA",811.8,152,120,0)
^811.802A^9^9
"DATA",811.8,152,120,1,0)
REMINDER TERM^811.5^2
"DATA",811.8,152,120,1,1,0)
^811.8021A^2^2
"DATA",811.8,152,120,1,1,1,0)
VA-DATE OF BIRTH^28^38^43^44
"DATA",811.8,152,120,1,1,2,0)
VA-DATE OF DEATH^55^65^70^71
"DATA",811.8,152,120,2,0)
REMINDER LIST RULE^810.4^7
"DATA",811.8,152,120,2,1,0)
^811.8021A^7^7
"DATA",811.8,152,120,2,1,1,0)
VA-FR-DATE OF DEATH^82^90^95^95
"DATA",811.8,152,120,2,1,2,0)
VA-*IHD QUERI 412 PTS WITH QUALIFY AND ANCHOR VISIT^106^123^128^131
"DATA",811.8,152,120,2,1,3,0)
VA-*IHD QUERI 412 PTS WITH QUALIFY AND ANCHOR VISIT ON LLA MEDS^142^159^164^167
"DATA",811.8,152,120,2,1,4,0)
VA-*IHD QUERI PTS WITH QUALIFY AND ANCHOR VISIT^178^195^200^203
"DATA",811.8,152,120,2,1,5,0)
VA-*IHD QUERI PTS WITH QUALIFY AND ANCHOR VISIT ON LLA MEDS^214^231^236^239
"DATA",811.8,152,120,2,1,6,0)
VA-*IHD QUERI PTS WITH QUALIFY VISIT^250^269^274^278
"DATA",811.8,152,120,2,1,7,0)
VA-*MH QUERI QUALIFYING PC VISIT^289^303^308^310
"DATA",811.8,153,0)
VA-HTN ASSESSMENT BP >=140/90^REDINGTON,PATRICK at SALT LAKE CITY OIFO^3060711.143517
"DATA",811.8,153,100,0)
^811.801^2132^2132
"DATA",811.8,153,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,153,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,153,100,3,0)
<PACKAGE_VERSION>2.0</PACKAGE_VERSION>
"DATA",811.8,153,100,4,0)
<INDEX_AT>1784</INDEX_AT>
"DATA",811.8,153,100,5,0)
<SOURCE>
"DATA",811.8,153,100,6,0)
<NAME>VA-HTN ASSESSMENT BP &gt;=140/90</NAME>
"DATA",811.8,153,100,7,0)
<USER>REDINGTON,PATRICK</USER>
"DATA",811.8,153,100,8,0)
<SITE>SALT LAKE CITY OIFO</SITE>
"DATA",811.8,153,100,9,0)
<DATE_PACKED>07/11/2006@14:35:17</DATE_PACKED>
"DATA",811.8,153,100,10,0)
</SOURCE>
"DATA",811.8,153,100,11,0)
<EXCHANGE_TYPE>REMINDER</EXCHANGE_TYPE>
"DATA",811.8,153,100,12,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,153,100,13,0)
This reminder is due every 6 months for patients who have their last 
"DATA",811.8,153,100,14,0)
recorded DBP >89 or the last SBP >139 and the patient has a diagnosis of 
"DATA",811.8,153,100,15,0)
HTN in PCE, problem list or PTF in the past 18 months.  
"DATA",811.8,153,100,16,0)
 
"DATA",811.8,153,100,17,0)
The reminder becomes not applicable if the last BP <140/90 is recorded.  
"DATA",811.8,153,100,18,0)
It is also not applicable if the last SBP is >159 or the last DBP is >99 
"DATA",811.8,153,100,19,0)
since the "HTN ASSESSMENT BP >160/100" reminder will be applicable for 
"DATA",811.8,153,100,20,0)
the patient with the higher measured BPs.
"DATA",811.8,153,100,21,0)
 
"DATA",811.8,153,100,22,0)
The reminder is resolved for 6 months by any of the interventions listed 
"DATA",811.8,153,100,23,0)
below:
"DATA",811.8,153,100,24,0)
 
"DATA",811.8,153,100,25,0)
  Education  (reminder term HTN EDUCATIONAL INTERVENTIONS) 
"DATA",811.8,153,100,26,0)
     VA-HTN EXERCISE EDUCATION                    (ED)
"DATA",811.8,153,100,27,0)
     VA-HTN NUTRITION EDUCATION                   (ED)
"DATA",811.8,153,100,28,0)
     HTN LIFESTYLE MODIFICATIONS RECOMMENDED      (HF) 
"DATA",811.8,153,100,29,0)
     VA-HTN MEDICATION ADHERENCE                  (ED) 
"DATA",811.8,153,100,30,0)
     HTN NO EDUC INTERVENTION WARRANTED           (HF) 
"DATA",811.8,153,100,31,0)
     
"DATA",811.8,153,100,32,0)
 
"DATA",811.8,153,100,33,0)
  Medication   (reminder term HTN MED & OTHER INTERVENTIONS) 
"DATA",811.8,153,100,34,0)
     HTN MEDICATIONS ADJUSTED                   (HF)
"DATA",811.8,153,100,35,0)
     HTN REFUSAL OF MED INTERVENTION            (HF)
"DATA",811.8,153,100,36,0)
     HTN EVALUATION OF RESISTANT/SECONDARY      (HF)
"DATA",811.8,153,100,37,0)
     HTN NO MED CHANGE - BP CONTROLLED          (HF)
"DATA",811.8,153,100,38,0)
     HTN NO MED CHANGE - COMORBID ILLNESS       (HF)
"DATA",811.8,153,100,39,0)
     HTN NO MED CHANGE - SIDE EFFECTS FROM RX   (HF)
"DATA",811.8,153,100,40,0)
     HTN NO MED CHANGE - LIMITED LIFE EXP       (HF)
"DATA",811.8,153,100,41,0)
     HTN NO MED CHANGE - NONCOMPLIANCE          (HF)
"DATA",811.8,153,100,42,0)
     HTN NO MED CHANGE - OTHER                  (HF)
"DATA",811.8,153,100,43,0)
 
"DATA",811.8,153,100,44,0)
The reminder becomes not applicable if the health factor of INCORRECT HTN 
"DATA",811.8,153,100,45,0)
DIAGNOSIS is entered.  The reminder is reactivated the next time that an 
"DATA",811.8,153,100,46,0)
ICD code for HTN is entered.  
"DATA",811.8,153,100,47,0)
 
"DATA",811.8,153,100,48,0)
The following findings are included in the reminder to provide additional 
"DATA",811.8,153,100,49,0)
information in the clinical maintenance display:
"DATA",811.8,153,100,50,0)
 
"DATA",811.8,153,100,51,0)
Any diabetes diagnoses, drug classes for HTN meds (CV100, CV150, 
"DATA",811.8,153,100,52,0)
CV400, CV490, CV700, CV709, CV800, CV805), patient's BMI.
"DATA",811.8,153,100,53,0)

"DATA",811.8,153,100,54,0)
]]></DESCRIPTION>
"DATA",811.8,153,100,55,0)
<KEYWORDS>
"DATA",811.8,153,100,56,0)
<KEYWORD>HTN</KEYWORD>
"DATA",811.8,153,100,57,0)
<KEYWORD></KEYWORD>
"DATA",811.8,153,100,58,0)
</KEYWORDS>
"DATA",811.8,153,100,59,0)
<M_ROUTINE>
"DATA",811.8,153,100,60,0)
<ROUTINE_NAME>PXRMBMI</ROUTINE_NAME>
"DATA",811.8,153,100,61,0)
<CODE>
"DATA",811.8,153,100,62,0)
<![CDATA[
"DATA",811.8,153,100,63,0)
PXRMBMI ; SLC/PKR - National BMI computed finding. ;08/31/2004
"DATA",811.8,153,100,64,0)
 ;;2.0;CLINICAL REMINDERS;;Feb 04, 2005
"DATA",811.8,153,100,65,0)
 ;
"DATA",811.8,153,100,66,0)
 ;=========================================================
"DATA",811.8,153,100,67,0)
BMI(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding to return the BMI.
"DATA",811.8,153,100,68,0)
 N HDAS,HDATE,HT,HTEMP,WDAS,WDATE,WT,WTEMP
"DATA",811.8,153,100,69,0)
 ;Get the most recent height measurement
"DATA",811.8,153,100,70,0)
 S HDATE="",HT=0
"DATA",811.8,153,100,71,0)
 F  Q:HT>0  S HDATE=$O(^PXRMINDX(120.5,"PI",DFN,8,HDATE),-1) Q:HDATE=""  D
"DATA",811.8,153,100,72,0)
 . S HDAS=$O(^PXRMINDX(120.5,"PI",DFN,8,HDATE,""))
"DATA",811.8,153,100,73,0)
 . K HTEMP
"DATA",811.8,153,100,74,0)
 . D GETDATA^PXRMVITL(HDAS,.HTEMP)
"DATA",811.8,153,100,75,0)
 . S HT=(HTEMP("RATE")*2.54)/100
"DATA",811.8,153,100,76,0)
 I HT=0 S TEST=0,(VALUE,TEXT)="" Q
"DATA",811.8,153,100,77,0)
 ;Get the most recent weight measurement.
"DATA",811.8,153,100,78,0)
 S WDATE="",WT=0
"DATA",811.8,153,100,79,0)
 F  Q:WT>0  S WDATE=$O(^PXRMINDX(120.5,"PI",DFN,9,WDATE),-1) Q:WDATE=""  D
"DATA",811.8,153,100,80,0)
 . S WDAS=$O(^PXRMINDX(120.5,"PI",DFN,9,WDATE,""))
"DATA",811.8,153,100,81,0)
 . K WTEMP
"DATA",811.8,153,100,82,0)
 . D GETDATA^PXRMVITL(WDAS,.WTEMP)
"DATA",811.8,153,100,83,0)
 . S WT=WTEMP("RATE")/2.203
"DATA",811.8,153,100,84,0)
 I WT=0 S TEST=0,(VALUE,TEXT)="" Q
"DATA",811.8,153,100,85,0)
 S VALUE=WT/(HT*HT)
"DATA",811.8,153,100,86,0)
 S VALUE=$FN(VALUE,"",1)
"DATA",811.8,153,100,87,0)
 ;Use date of the weight measurement.
"DATA",811.8,153,100,88,0)
 S DATE=WDATE,TEST=1,TEXT=""
"DATA",811.8,153,100,89,0)
 Q
"DATA",811.8,153,100,90,0)
 ;
"DATA",811.8,153,100,91,0)
]]>
"DATA",811.8,153,100,92,0)
</CODE>
"DATA",811.8,153,100,93,0)
</M_ROUTINE>
"DATA",811.8,153,100,94,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,95,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,153,100,96,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,153,100,97,0)
<POINT_01>Office of Quality &amp; Performance</POINT_01>
"DATA",811.8,153,100,98,0)
<INTERNAL_ENTRY_NUMBER>15</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,99,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,100,0)
<![CDATA[
"DATA",811.8,153,100,101,0)
811.6;+15,;.01~Office of Quality & Performance
"DATA",811.8,153,100,102,0)
811.6;+15,;100~NATIONAL
"DATA",811.8,153,100,103,0)
811.63;+16,+15,;.01~07/11/2006@14:35:34
"DATA",811.8,153,100,104,0)
811.63;+16,+15,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,105,0)
811.63;+16,+15,;2~WP-start~1
"DATA",811.8,153,100,106,0)
Exchange Stub
"DATA",811.8,153,100,107,0)
]]>
"DATA",811.8,153,100,108,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,109,0)
<IEN_ROOT>
"DATA",811.8,153,100,110,0)
<![CDATA[
"DATA",811.8,153,100,111,0)
16^1
"DATA",811.8,153,100,112,0)
]]>
"DATA",811.8,153,100,113,0)
</IEN_ROOT>
"DATA",811.8,153,100,114,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,115,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,116,0)
<FILE_NAME>EDUCATION TOPICS</FILE_NAME>
"DATA",811.8,153,100,117,0)
<FILE_NUMBER>9999999.09</FILE_NUMBER>
"DATA",811.8,153,100,118,0)
<POINT_01>VA-HTN EXERCISE</POINT_01>
"DATA",811.8,153,100,119,0)
<INTERNAL_ENTRY_NUMBER>15</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,120,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,121,0)
<![CDATA[
"DATA",811.8,153,100,122,0)
9999999.09;+15,;.01~VA-HTN EXERCISE
"DATA",811.8,153,100,123,0)
9999999.09;+15,;.04~Exercise Education for HTN
"DATA",811.8,153,100,124,0)
9999999.09;+15,;11~WP-start~2
"DATA",811.8,153,100,125,0)
The patient will understand the importance and the role of exercise in
"DATA",811.8,153,100,126,0)
the control of hypertension.
"DATA",811.8,153,100,127,0)
9999999.09;+15,;12~WP-start~3
"DATA",811.8,153,100,128,0)
Exercise is an useful intervention for the improvement in BP control.  The
"DATA",811.8,153,100,129,0)
target for aerobic exercise should be 30 to 45 minutes per session, three
"DATA",811.8,153,100,130,0)
to five times per week if possible.
"DATA",811.8,153,100,131,0)
]]>
"DATA",811.8,153,100,132,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,133,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,134,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,135,0)
<FILE_NAME>EDUCATION TOPICS</FILE_NAME>
"DATA",811.8,153,100,136,0)
<FILE_NUMBER>9999999.09</FILE_NUMBER>
"DATA",811.8,153,100,137,0)
<POINT_01>VA-HTN NUTRITION EDUCATION</POINT_01>
"DATA",811.8,153,100,138,0)
<INTERNAL_ENTRY_NUMBER>16</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,139,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,140,0)
<![CDATA[
"DATA",811.8,153,100,141,0)
9999999.09;+16,;.01~VA-HTN NUTRITION EDUCATION
"DATA",811.8,153,100,142,0)
9999999.09;+16,;.04~Nutrition Education for HTN
"DATA",811.8,153,100,143,0)
9999999.09;+16,;11~WP-start~3
"DATA",811.8,153,100,144,0)
The patient will understand the lifestyle modifications that may help
"DATA",811.8,153,100,145,0)
improve blood pressure control including weight loss, decreased sodium
"DATA",811.8,153,100,146,0)
intake, and a heart healthy diet.
"DATA",811.8,153,100,147,0)
9999999.09;+16,;12~WP-start~26
"DATA",811.8,153,100,148,0)
Patients with HTN should receive counseling on the following nutritional
"DATA",811.8,153,100,149,0)
modifications:
"DATA",811.8,153,100,150,0)
 
"DATA",811.8,153,100,151,0)
1.      WEIGHT REDUCTION:  Overweight patients should reduce their weight
"DATA",811.8,153,100,152,0)
to within 10 percent of their ideal body weight. However, reduction even
"DATA",811.8,153,100,153,0)
of 5 to 10 pounds can be helpful in controlling HTN.
"DATA",811.8,153,100,154,0)
 
"DATA",811.8,153,100,155,0)
2.      ALCOHOL INTAKE:  Alcohol intake should be limited to no more than
"DATA",811.8,153,100,156,0)
one ounce (24 ounces of beer; or 10 ounces of wine; or 2 ounces of
"DATA",811.8,153,100,157,0)
100-proof whiskey) per day for men or 0.5 ounces of alcohol per day for
"DATA",811.8,153,100,158,0)
women and for lighter weight men.
"DATA",811.8,153,100,159,0)
 
"DATA",811.8,153,100,160,0)
3.      SODIUM INTAKE:  Sodium intake in the patient with HTN should be
"DATA",811.8,153,100,161,0)
limited to no more than 100 mmol/day (2.4 g of sodium or 6 g of sodium
"DATA",811.8,153,100,162,0)
chloride).
"DATA",811.8,153,100,163,0)
 
"DATA",811.8,153,100,164,0)
4.      DIET:  An adequate dietary intake of potassium, calcium, and
"DATA",811.8,153,100,165,0)
magnesium can be obtained from fresh fruits and vegetables. Other dietary
"DATA",811.8,153,100,166,0)
advice should include a heart-healthy diet such as the DASH Diet. This is
"DATA",811.8,153,100,167,0)
one means of satisfying the dietary steps above. See the DASH Diet table
"DATA",811.8,153,100,168,0)
below.
"DATA",811.8,153,100,169,0)
 
"DATA",811.8,153,100,170,0)
5.      HYPERLIPIDEMIA:  Counsel to reduce intake of dietary saturated
"DATA",811.8,153,100,171,0)
fats and cholesterol. A diet rich in fresh fruits and vegetables as well
"DATA",811.8,153,100,172,0)
as low in dietary saturated fats and cholesterol is also beneficial in
"DATA",811.8,153,100,173,0)
lowering blood pressure.
"DATA",811.8,153,100,174,0)
]]>
"DATA",811.8,153,100,175,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,176,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,177,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,178,0)
<FILE_NAME>EDUCATION TOPICS</FILE_NAME>
"DATA",811.8,153,100,179,0)
<FILE_NUMBER>9999999.09</FILE_NUMBER>
"DATA",811.8,153,100,180,0)
<POINT_01>VA-HTN MEDICATION ADHERENCE</POINT_01>
"DATA",811.8,153,100,181,0)
<INTERNAL_ENTRY_NUMBER>17</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,182,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,183,0)
<![CDATA[
"DATA",811.8,153,100,184,0)
9999999.09;+17,;.01~VA-HTN MEDICATION ADHERENCE
"DATA",811.8,153,100,185,0)
9999999.09;+17,;.04~HTN Medication Adherence
"DATA",811.8,153,100,186,0)
9999999.09;+17,;11~WP-start~3
"DATA",811.8,153,100,187,0)
The patient will understand the role and importance of medications in the
"DATA",811.8,153,100,188,0)
control of BP and will understand the importance of taking these
"DATA",811.8,153,100,189,0)
medications on a regular basis.
"DATA",811.8,153,100,190,0)
]]>
"DATA",811.8,153,100,191,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,192,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,193,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,194,0)
<FILE_NAME>GMRV VITAL TYPE</FILE_NAME>
"DATA",811.8,153,100,195,0)
<FILE_NUMBER>120.51</FILE_NUMBER>
"DATA",811.8,153,100,196,0)
<POINT_01>BLOOD PRESSURE</POINT_01>
"DATA",811.8,153,100,197,0)
<INTERNAL_ENTRY_NUMBER>1</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,198,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,199,0)
<![CDATA[
"DATA",811.8,153,100,200,0)
120.51;+1,;.01~BLOOD PRESSURE
"DATA",811.8,153,100,201,0)
]]>
"DATA",811.8,153,100,202,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,203,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,204,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,205,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,206,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,207,0)
<POINT_01>INCORRECT DIAGNOSES</POINT_01>
"DATA",811.8,153,100,208,0)
<INTERNAL_ENTRY_NUMBER>598002</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,209,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,210,0)
<![CDATA[
"DATA",811.8,153,100,211,0)
9999999.64;+598002,;.01~INCORRECT DIAGNOSES
"DATA",811.8,153,100,212,0)
9999999.64;+598002,;.1~CATEGORY
"DATA",811.8,153,100,213,0)
]]>
"DATA",811.8,153,100,214,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,215,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,216,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,217,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,218,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,219,0)
<POINT_01>HYPERTENSION</POINT_01>
"DATA",811.8,153,100,220,0)
<INTERNAL_ENTRY_NUMBER>598003</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,221,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,222,0)
<![CDATA[
"DATA",811.8,153,100,223,0)
9999999.64;+598003,;.01~HYPERTENSION
"DATA",811.8,153,100,224,0)
9999999.64;+598003,;.1~CATEGORY
"DATA",811.8,153,100,225,0)
]]>
"DATA",811.8,153,100,226,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,227,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,228,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,229,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,230,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,231,0)
<POINT_01>INCORRECT HTN DIAGNOSIS</POINT_01>
"DATA",811.8,153,100,232,0)
<INTERNAL_ENTRY_NUMBER>598004</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,233,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,234,0)
<![CDATA[
"DATA",811.8,153,100,235,0)
9999999.64;+598004,;.01~INCORRECT HTN DIAGNOSIS
"DATA",811.8,153,100,236,0)
9999999.64;+598004,;.03~INCORRECT DIAGNOSES
"DATA",811.8,153,100,237,0)
9999999.64;+598004,;.1~FACTOR
"DATA",811.8,153,100,238,0)
]]>
"DATA",811.8,153,100,239,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,240,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,241,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,242,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,243,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,244,0)
<POINT_01>HTN REFUSAL OF MED INTERVENTION</POINT_01>
"DATA",811.8,153,100,245,0)
<INTERNAL_ENTRY_NUMBER>598005</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,246,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,247,0)
<![CDATA[
"DATA",811.8,153,100,248,0)
9999999.64;+598005,;.01~HTN REFUSAL OF MED INTERVENTION
"DATA",811.8,153,100,249,0)
9999999.64;+598005,;.03~HYPERTENSION
"DATA",811.8,153,100,250,0)
9999999.64;+598005,;.1~FACTOR
"DATA",811.8,153,100,251,0)
]]>
"DATA",811.8,153,100,252,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,253,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,254,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,255,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,256,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,257,0)
<POINT_01>HTN NO MED CHANGE - NONCOMPLIANCE</POINT_01>
"DATA",811.8,153,100,258,0)
<INTERNAL_ENTRY_NUMBER>598006</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,259,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,260,0)
<![CDATA[
"DATA",811.8,153,100,261,0)
9999999.64;+598006,;.01~HTN NO MED CHANGE - NONCOMPLIANCE
"DATA",811.8,153,100,262,0)
9999999.64;+598006,;.03~HYPERTENSION
"DATA",811.8,153,100,263,0)
9999999.64;+598006,;.1~FACTOR
"DATA",811.8,153,100,264,0)
]]>
"DATA",811.8,153,100,265,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,266,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,267,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,268,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,269,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,270,0)
<POINT_01>HTN NO EDUC INTERVENTION WARRANTED</POINT_01>
"DATA",811.8,153,100,271,0)
<INTERNAL_ENTRY_NUMBER>598007</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,272,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,273,0)
<![CDATA[
"DATA",811.8,153,100,274,0)
9999999.64;+598007,;.01~HTN NO EDUC INTERVENTION WARRANTED
"DATA",811.8,153,100,275,0)
9999999.64;+598007,;.03~HYPERTENSION
"DATA",811.8,153,100,276,0)
9999999.64;+598007,;.1~FACTOR
"DATA",811.8,153,100,277,0)
]]>
"DATA",811.8,153,100,278,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,279,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,280,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,281,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,282,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,283,0)
<POINT_01>HTN LIFESTYLE MODIFICATIONS RECOMMENDED</POINT_01>
"DATA",811.8,153,100,284,0)
<INTERNAL_ENTRY_NUMBER>598008</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,285,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,286,0)
<![CDATA[
"DATA",811.8,153,100,287,0)
9999999.64;+598008,;.01~HTN LIFESTYLE MODIFICATIONS RECOMMENDED
"DATA",811.8,153,100,288,0)
9999999.64;+598008,;.03~HYPERTENSION
"DATA",811.8,153,100,289,0)
9999999.64;+598008,;.1~FACTOR
"DATA",811.8,153,100,290,0)
]]>
"DATA",811.8,153,100,291,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,292,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,293,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,294,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,295,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,296,0)
<POINT_01>HTN MEDICATIONS ADJUSTED</POINT_01>
"DATA",811.8,153,100,297,0)
<INTERNAL_ENTRY_NUMBER>598009</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,298,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,299,0)
<![CDATA[
"DATA",811.8,153,100,300,0)
9999999.64;+598009,;.01~HTN MEDICATIONS ADJUSTED
"DATA",811.8,153,100,301,0)
9999999.64;+598009,;.03~HYPERTENSION
"DATA",811.8,153,100,302,0)
9999999.64;+598009,;.1~FACTOR
"DATA",811.8,153,100,303,0)
]]>
"DATA",811.8,153,100,304,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,305,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,306,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,307,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,308,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,309,0)
<POINT_01>HTN NO MED CHANGE - OTHER</POINT_01>
"DATA",811.8,153,100,310,0)
<INTERNAL_ENTRY_NUMBER>598010</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,311,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,312,0)
<![CDATA[
"DATA",811.8,153,100,313,0)
9999999.64;+598010,;.01~HTN NO MED CHANGE - OTHER
"DATA",811.8,153,100,314,0)
9999999.64;+598010,;.03~HYPERTENSION
"DATA",811.8,153,100,315,0)
9999999.64;+598010,;.1~FACTOR
"DATA",811.8,153,100,316,0)
]]>
"DATA",811.8,153,100,317,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,318,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,319,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,320,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,321,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,322,0)
<POINT_01>HTN EVALUATION OF RESISTANT/SECONDARY</POINT_01>
"DATA",811.8,153,100,323,0)
<INTERNAL_ENTRY_NUMBER>598011</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,324,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,325,0)
<![CDATA[
"DATA",811.8,153,100,326,0)
9999999.64;+598011,;.01~HTN EVALUATION OF RESISTANT/SECONDARY
"DATA",811.8,153,100,327,0)
9999999.64;+598011,;.03~HYPERTENSION
"DATA",811.8,153,100,328,0)
9999999.64;+598011,;.1~FACTOR
"DATA",811.8,153,100,329,0)
]]>
"DATA",811.8,153,100,330,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,331,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,332,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,333,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,334,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,335,0)
<POINT_01>HTN NO MED CHANGE - BP CONTROLLED</POINT_01>
"DATA",811.8,153,100,336,0)
<INTERNAL_ENTRY_NUMBER>598012</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,337,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,338,0)
<![CDATA[
"DATA",811.8,153,100,339,0)
9999999.64;+598012,;.01~HTN NO MED CHANGE - BP CONTROLLED
"DATA",811.8,153,100,340,0)
9999999.64;+598012,;.03~HYPERTENSION
"DATA",811.8,153,100,341,0)
9999999.64;+598012,;.1~FACTOR
"DATA",811.8,153,100,342,0)
]]>
"DATA",811.8,153,100,343,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,344,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,345,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,346,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,347,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,348,0)
<POINT_01>HTN NO MED CHANGE - COMORBID ILLNESS</POINT_01>
"DATA",811.8,153,100,349,0)
<INTERNAL_ENTRY_NUMBER>598013</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,350,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,351,0)
<![CDATA[
"DATA",811.8,153,100,352,0)
9999999.64;+598013,;.01~HTN NO MED CHANGE - COMORBID ILLNESS
"DATA",811.8,153,100,353,0)
9999999.64;+598013,;.03~HYPERTENSION
"DATA",811.8,153,100,354,0)
9999999.64;+598013,;.1~FACTOR
"DATA",811.8,153,100,355,0)
]]>
"DATA",811.8,153,100,356,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,357,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,358,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,359,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,360,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,361,0)
<POINT_01>HTN NO MED CHANGE - SIDE EFFECTS FROM RX</POINT_01>
"DATA",811.8,153,100,362,0)
<INTERNAL_ENTRY_NUMBER>598014</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,363,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,364,0)
<![CDATA[
"DATA",811.8,153,100,365,0)
9999999.64;+598014,;.01~HTN NO MED CHANGE - SIDE EFFECTS FROM RX
"DATA",811.8,153,100,366,0)
9999999.64;+598014,;.03~HYPERTENSION
"DATA",811.8,153,100,367,0)
9999999.64;+598014,;.1~FACTOR
"DATA",811.8,153,100,368,0)
]]>
"DATA",811.8,153,100,369,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,370,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,371,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,372,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,153,100,373,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,153,100,374,0)
<POINT_01>HTN NO MED CHANGE - LIMITED LIFE EXP</POINT_01>
"DATA",811.8,153,100,375,0)
<INTERNAL_ENTRY_NUMBER>598015</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,376,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,377,0)
<![CDATA[
"DATA",811.8,153,100,378,0)
9999999.64;+598015,;.01~HTN NO MED CHANGE - LIMITED LIFE EXP
"DATA",811.8,153,100,379,0)
9999999.64;+598015,;.03~HYPERTENSION
"DATA",811.8,153,100,380,0)
9999999.64;+598015,;.1~FACTOR
"DATA",811.8,153,100,381,0)
]]>
"DATA",811.8,153,100,382,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,383,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,384,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,385,0)
<FILE_NAME>REMINDER COMPUTED FINDINGS</FILE_NAME>
"DATA",811.8,153,100,386,0)
<FILE_NUMBER>811.4</FILE_NUMBER>
"DATA",811.8,153,100,387,0)
<POINT_01>VA-BMI</POINT_01>
"DATA",811.8,153,100,388,0)
<INTERNAL_ENTRY_NUMBER>1</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,389,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,390,0)
<![CDATA[
"DATA",811.8,153,100,391,0)
811.4;+1,;.01~VA-BMI
"DATA",811.8,153,100,392,0)
811.4;+1,;.02~PXRMBMI
"DATA",811.8,153,100,393,0)
811.4;+1,;.03~BMI
"DATA",811.8,153,100,394,0)
811.4;+1,;.04~BMI
"DATA",811.8,153,100,395,0)
811.4;+1,;1~WP-start~10
"DATA",811.8,153,100,396,0)
The VA-BMI computed finding calculates the patient's body mass index.  The
"DATA",811.8,153,100,397,0)
value returned which can be used in the CONDITION field of the findings is
"DATA",811.8,153,100,398,0)
the body mass index value.
"DATA",811.8,153,100,399,0)
 
"DATA",811.8,153,100,400,0)
An example of using the VA-BMI computed finding is as follows:
"DATA",811.8,153,100,401,0)
1)  Create a finding in a reminder that is the VA-BMI computed finding.
"DATA",811.8,153,100,402,0)
2)  Add logic in the CONDITION field to check for a particular BMI value:
"DATA",811.8,153,100,403,0)
"I V>25"
"DATA",811.8,153,100,404,0)
3)  This finding will be evaluated to true for patients with a BMI that is
"DATA",811.8,153,100,405,0)
greater than 25.
"DATA",811.8,153,100,406,0)
811.4;+1,;100~NATIONAL
"DATA",811.8,153,100,407,0)
811.42;+2,+1,;.01~07/11/2006@14:35:34
"DATA",811.8,153,100,408,0)
811.42;+2,+1,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,409,0)
811.42;+2,+1,;2~WP-start~1
"DATA",811.8,153,100,410,0)
Exchange Stub
"DATA",811.8,153,100,411,0)
]]>
"DATA",811.8,153,100,412,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,413,0)
<IEN_ROOT>
"DATA",811.8,153,100,414,0)
<![CDATA[
"DATA",811.8,153,100,415,0)
2^1
"DATA",811.8,153,100,416,0)
]]>
"DATA",811.8,153,100,417,0)
</IEN_ROOT>
"DATA",811.8,153,100,418,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,419,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,420,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,153,100,421,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,153,100,422,0)
<POINT_01>VA-HYPERTENSION CODES</POINT_01>
"DATA",811.8,153,100,423,0)
<INTERNAL_ENTRY_NUMBER>65</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,424,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,425,0)
<![CDATA[
"DATA",811.8,153,100,426,0)
811.2;+65,;.01~VA-HYPERTENSION CODES
"DATA",811.8,153,100,427,0)
811.2;+65,;.02~Hypertension codes
"DATA",811.8,153,100,428,0)
811.2;+65,;100~NATIONAL
"DATA",811.8,153,100,429,0)
811.2;+65,;101~Office of Quality & Performance
"DATA",811.8,153,100,430,0)
811.21;+66,+65,;.01~07/11/2006@14:35:34
"DATA",811.8,153,100,431,0)
811.21;+66,+65,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,432,0)
811.21;+66,+65,;2~WP-start~1
"DATA",811.8,153,100,433,0)
Exchange Stub
"DATA",811.8,153,100,434,0)
811.22102;+67,+65,;.01~401.0
"DATA",811.8,153,100,435,0)
811.22102;+67,+65,;1~405.99
"DATA",811.8,153,100,436,0)
811.22102;+67,+65,;2~398.99
"DATA",811.8,153,100,437,0)
811.22102;+67,+65,;3~410.0
"DATA",811.8,153,100,438,0)
811.23102;+100,+65,;.01~405.99 
"DATA",811.8,153,100,439,0)
811.23102;+101,+65,;.01~402.00 
"DATA",811.8,153,100,440,0)
811.23102;+102,+65,;.01~402.01 
"DATA",811.8,153,100,441,0)
811.23102;+103,+65,;.01~402.10 
"DATA",811.8,153,100,442,0)
811.23102;+104,+65,;.01~402.11 
"DATA",811.8,153,100,443,0)
811.23102;+105,+65,;.01~402.90 
"DATA",811.8,153,100,444,0)
811.23102;+106,+65,;.01~402.91 
"DATA",811.8,153,100,445,0)
811.23102;+68,+65,;.01~401.0 
"DATA",811.8,153,100,446,0)
811.23102;+69,+65,;.01~403.0 
"DATA",811.8,153,100,447,0)
811.23102;+70,+65,;.01~403.00 
"DATA",811.8,153,100,448,0)
811.23102;+71,+65,;.01~403.01 
"DATA",811.8,153,100,449,0)
811.23102;+72,+65,;.01~403.1 
"DATA",811.8,153,100,450,0)
811.23102;+73,+65,;.01~403.10 
"DATA",811.8,153,100,451,0)
811.23102;+74,+65,;.01~403.11 
"DATA",811.8,153,100,452,0)
811.23102;+75,+65,;.01~403.9 
"DATA",811.8,153,100,453,0)
811.23102;+76,+65,;.01~403.90 
"DATA",811.8,153,100,454,0)
811.23102;+77,+65,;.01~403.91 
"DATA",811.8,153,100,455,0)
811.23102;+78,+65,;.01~404.0 
"DATA",811.8,153,100,456,0)
811.23102;+79,+65,;.01~401.1 
"DATA",811.8,153,100,457,0)
811.23102;+80,+65,;.01~404.00 
"DATA",811.8,153,100,458,0)
811.23102;+81,+65,;.01~404.01 
"DATA",811.8,153,100,459,0)
811.23102;+82,+65,;.01~404.02 
"DATA",811.8,153,100,460,0)
811.23102;+83,+65,;.01~404.03 
"DATA",811.8,153,100,461,0)
811.23102;+84,+65,;.01~404.1 
"DATA",811.8,153,100,462,0)
811.23102;+85,+65,;.01~404.10 
"DATA",811.8,153,100,463,0)
811.23102;+86,+65,;.01~404.11 
"DATA",811.8,153,100,464,0)
811.23102;+87,+65,;.01~404.12 
"DATA",811.8,153,100,465,0)
811.23102;+88,+65,;.01~404.13 
"DATA",811.8,153,100,466,0)
811.23102;+89,+65,;.01~404.9 
"DATA",811.8,153,100,467,0)
811.23102;+90,+65,;.01~401.9 
"DATA",811.8,153,100,468,0)
811.23102;+91,+65,;.01~404.90 
"DATA",811.8,153,100,469,0)
811.23102;+92,+65,;.01~404.91 
"DATA",811.8,153,100,470,0)
811.23102;+93,+65,;.01~404.92 
"DATA",811.8,153,100,471,0)
811.23102;+94,+65,;.01~404.93 
"DATA",811.8,153,100,472,0)
811.23102;+95,+65,;.01~405.01 
"DATA",811.8,153,100,473,0)
811.23102;+96,+65,;.01~405.09 
"DATA",811.8,153,100,474,0)
811.23102;+97,+65,;.01~405.11 
"DATA",811.8,153,100,475,0)
811.23102;+98,+65,;.01~405.19 
"DATA",811.8,153,100,476,0)
811.23102;+99,+65,;.01~405.91 
"DATA",811.8,153,100,477,0)
]]>
"DATA",811.8,153,100,478,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,479,0)
<IEN_ROOT>
"DATA",811.8,153,100,480,0)
<![CDATA[
"DATA",811.8,153,100,481,0)
66^1
"DATA",811.8,153,100,482,0)
67^1
"DATA",811.8,153,100,483,0)
68^1
"DATA",811.8,153,100,484,0)
69^10
"DATA",811.8,153,100,485,0)
70^11
"DATA",811.8,153,100,486,0)
71^12
"DATA",811.8,153,100,487,0)
72^13
"DATA",811.8,153,100,488,0)
73^14
"DATA",811.8,153,100,489,0)
74^15
"DATA",811.8,153,100,490,0)
75^16
"DATA",811.8,153,100,491,0)
76^17
"DATA",811.8,153,100,492,0)
77^18
"DATA",811.8,153,100,493,0)
78^19
"DATA",811.8,153,100,494,0)
79^2
"DATA",811.8,153,100,495,0)
80^20
"DATA",811.8,153,100,496,0)
81^21
"DATA",811.8,153,100,497,0)
82^22
"DATA",811.8,153,100,498,0)
83^23
"DATA",811.8,153,100,499,0)
84^24
"DATA",811.8,153,100,500,0)
85^25
"DATA",811.8,153,100,501,0)
86^26
"DATA",811.8,153,100,502,0)
87^27
"DATA",811.8,153,100,503,0)
88^28
"DATA",811.8,153,100,504,0)
89^29
"DATA",811.8,153,100,505,0)
90^3
"DATA",811.8,153,100,506,0)
91^30
"DATA",811.8,153,100,507,0)
92^31
"DATA",811.8,153,100,508,0)
93^32
"DATA",811.8,153,100,509,0)
94^33
"DATA",811.8,153,100,510,0)
95^34
"DATA",811.8,153,100,511,0)
96^35
"DATA",811.8,153,100,512,0)
97^36
"DATA",811.8,153,100,513,0)
98^37
"DATA",811.8,153,100,514,0)
99^38
"DATA",811.8,153,100,515,0)
100^39
"DATA",811.8,153,100,516,0)
101^4
"DATA",811.8,153,100,517,0)
102^5
"DATA",811.8,153,100,518,0)
103^6
"DATA",811.8,153,100,519,0)
104^7
"DATA",811.8,153,100,520,0)
105^8
"DATA",811.8,153,100,521,0)
106^9
"DATA",811.8,153,100,522,0)
]]>
"DATA",811.8,153,100,523,0)
</IEN_ROOT>
"DATA",811.8,153,100,524,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,525,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,526,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,153,100,527,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,153,100,528,0)
<POINT_01>VA-HTN INCORRECT DIAGNOSIS</POINT_01>
"DATA",811.8,153,100,529,0)
<INTERNAL_ENTRY_NUMBER>508</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,530,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,531,0)
<![CDATA[
"DATA",811.8,153,100,532,0)
811.5;+508,;.01~VA-HTN INCORRECT DIAGNOSIS
"DATA",811.8,153,100,533,0)
811.5;+508,;.04~OCT 16, 2002
"DATA",811.8,153,100,534,0)
811.5;+508,;100~NATIONAL
"DATA",811.8,153,100,535,0)
811.5;+508,;101~Office of Quality & Performance
"DATA",811.8,153,100,536,0)
811.52;+509,+508,;.01~HF.INCORRECT HTN DIAGNOSIS
"DATA",811.8,153,100,537,0)
811.53;+510,+508,;.01~07/11/2006@14:35:34
"DATA",811.8,153,100,538,0)
811.53;+510,+508,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,539,0)
811.53;+510,+508,;2~WP-start~1
"DATA",811.8,153,100,540,0)
Exchange Stub
"DATA",811.8,153,100,541,0)
]]>
"DATA",811.8,153,100,542,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,543,0)
<IEN_ROOT>
"DATA",811.8,153,100,544,0)
<![CDATA[
"DATA",811.8,153,100,545,0)
509^1
"DATA",811.8,153,100,546,0)
510^1
"DATA",811.8,153,100,547,0)
]]>
"DATA",811.8,153,100,548,0)
</IEN_ROOT>
"DATA",811.8,153,100,549,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,550,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,551,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,153,100,552,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,153,100,553,0)
<POINT_01>VA-HTN MED &amp; OTHER INTERVENTIONS</POINT_01>
"DATA",811.8,153,100,554,0)
<INTERNAL_ENTRY_NUMBER>509</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,555,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,556,0)
<![CDATA[
"DATA",811.8,153,100,557,0)
811.5;+509,;.01~VA-HTN MED & OTHER INTERVENTIONS
"DATA",811.8,153,100,558,0)
811.5;+509,;.04~OCT 16, 2002
"DATA",811.8,153,100,559,0)
811.5;+509,;1~WP-start~1
"DATA",811.8,153,100,560,0)
Interventions to improve BP control related to medications or pt. refusal.
"DATA",811.8,153,100,561,0)
811.5;+509,;100~NATIONAL
"DATA",811.8,153,100,562,0)
811.5;+509,;101~Office of Quality & Performance
"DATA",811.8,153,100,563,0)
811.52;+510,+509,;.01~HF.HTN NO MED CHANGE - SIDE EFFECTS FROM RX
"DATA",811.8,153,100,564,0)
811.52;+511,+509,;.01~HF.HTN NO MED CHANGE - OTHER
"DATA",811.8,153,100,565,0)
811.52;+512,+509,;.01~HF.HTN MEDICATIONS ADJUSTED
"DATA",811.8,153,100,566,0)
811.52;+513,+509,;.01~HF.HTN REFUSAL OF MED INTERVENTION
"DATA",811.8,153,100,567,0)
811.52;+514,+509,;.01~HF.HTN EVALUATION OF RESISTANT/SECONDARY
"DATA",811.8,153,100,568,0)
811.52;+515,+509,;.01~HF.HTN NO MED CHANGE - BP CONTROLLED
"DATA",811.8,153,100,569,0)
811.52;+516,+509,;.01~HF.HTN NO MED CHANGE - COMORBID ILLNESS
"DATA",811.8,153,100,570,0)
811.52;+517,+509,;.01~HF.HTN NO MED CHANGE - LIMITED LIFE EXP
"DATA",811.8,153,100,571,0)
811.52;+518,+509,;.01~HF.HTN NO MED CHANGE - NONCOMPLIANCE
"DATA",811.8,153,100,572,0)
811.53;+519,+509,;.01~07/11/2006@14:35:34
"DATA",811.8,153,100,573,0)
811.53;+519,+509,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,574,0)
811.53;+519,+509,;2~WP-start~1
"DATA",811.8,153,100,575,0)
Exchange Stub
"DATA",811.8,153,100,576,0)
]]>
"DATA",811.8,153,100,577,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,578,0)
<IEN_ROOT>
"DATA",811.8,153,100,579,0)
<![CDATA[
"DATA",811.8,153,100,580,0)
510^10
"DATA",811.8,153,100,581,0)
511^2
"DATA",811.8,153,100,582,0)
512^3
"DATA",811.8,153,100,583,0)
513^4
"DATA",811.8,153,100,584,0)
514^5
"DATA",811.8,153,100,585,0)
515^6
"DATA",811.8,153,100,586,0)
516^7
"DATA",811.8,153,100,587,0)
517^8
"DATA",811.8,153,100,588,0)
518^9
"DATA",811.8,153,100,589,0)
519^1
"DATA",811.8,153,100,590,0)
]]>
"DATA",811.8,153,100,591,0)
</IEN_ROOT>
"DATA",811.8,153,100,592,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,593,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,594,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,153,100,595,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,153,100,596,0)
<POINT_01>VA-HTN EDUCATIONAL INTERVENTIONS</POINT_01>
"DATA",811.8,153,100,597,0)
<INTERNAL_ENTRY_NUMBER>510</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,598,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,599,0)
<![CDATA[
"DATA",811.8,153,100,600,0)
811.5;+510,;.01~VA-HTN EDUCATIONAL INTERVENTIONS
"DATA",811.8,153,100,601,0)
811.5;+510,;.04~OCT 16, 2002
"DATA",811.8,153,100,602,0)
811.5;+510,;1~WP-start~2
"DATA",811.8,153,100,603,0)
Educational interventions to improve BP control. Includes nutrition, 
"DATA",811.8,153,100,604,0)
exercise and specific interventions for patients.  
"DATA",811.8,153,100,605,0)
811.5;+510,;100~NATIONAL
"DATA",811.8,153,100,606,0)
811.5;+510,;101~Office of Quality & Performance
"DATA",811.8,153,100,607,0)
811.52;+511,+510,;.01~HF.HTN LIFESTYLE MODIFICATIONS RECOMMENDED
"DATA",811.8,153,100,608,0)
811.52;+512,+510,;.01~HF.HTN NO EDUC INTERVENTION WARRANTED
"DATA",811.8,153,100,609,0)
811.52;+513,+510,;.01~ED.VA-HTN MEDICATION ADHERENCE
"DATA",811.8,153,100,610,0)
811.52;+514,+510,;.01~ED.VA-HTN EXERCISE
"DATA",811.8,153,100,611,0)
811.52;+515,+510,;.01~ED.VA-HTN NUTRITION EDUCATION
"DATA",811.8,153,100,612,0)
811.53;+516,+510,;.01~07/11/2006@14:35:34
"DATA",811.8,153,100,613,0)
811.53;+516,+510,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,614,0)
811.53;+516,+510,;2~WP-start~1
"DATA",811.8,153,100,615,0)
Exchange Stub
"DATA",811.8,153,100,616,0)
]]>
"DATA",811.8,153,100,617,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,618,0)
<IEN_ROOT>
"DATA",811.8,153,100,619,0)
<![CDATA[
"DATA",811.8,153,100,620,0)
511^1
"DATA",811.8,153,100,621,0)
512^2
"DATA",811.8,153,100,622,0)
513^4
"DATA",811.8,153,100,623,0)
514^5
"DATA",811.8,153,100,624,0)
515^6
"DATA",811.8,153,100,625,0)
516^1
"DATA",811.8,153,100,626,0)
]]>
"DATA",811.8,153,100,627,0)
</IEN_ROOT>
"DATA",811.8,153,100,628,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,629,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,630,0)
<FILE_NAME>TIU TEMPLATE FIELD</FILE_NAME>
"DATA",811.8,153,100,631,0)
<FILE_NUMBER>8927.1</FILE_NUMBER>
"DATA",811.8,153,100,632,0)
<POINT_01>BLANK TEXT FIELD FOR DIALOGS</POINT_01>
"DATA",811.8,153,100,633,0)
<INTERNAL_ENTRY_NUMBER>1149</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,634,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,635,0)
<![CDATA[
"DATA",811.8,153,100,636,0)
8927.1;+1149,;.01~BLANK TEXT FIELD FOR DIALOGS
"DATA",811.8,153,100,637,0)
8927.1;+1149,;.02~Text
"DATA",811.8,153,100,638,0)
8927.1;+1149,;.03~NO
"DATA",811.8,153,100,639,0)
8927.1;+1149,;.04~1
"DATA",811.8,153,100,640,0)
8927.1;+1149,;.07~0
"DATA",811.8,153,100,641,0)
8927.1;+1149,;.08~NO
"DATA",811.8,153,100,642,0)
8927.1;+1149,;.09~YES
"DATA",811.8,153,100,643,0)
8927.1;+1149,;.1~1
"DATA",811.8,153,100,644,0)
8927.1;+1149,;.11~0
"DATA",811.8,153,100,645,0)
8927.1;+1149,;.12~0
"DATA",811.8,153,100,646,0)
8927.1;+1149,;.13~0
"DATA",811.8,153,100,647,0)
8927.1;+1149,;.14~0
"DATA",811.8,153,100,648,0)
8927.1;+1149,;.15~0
"DATA",811.8,153,100,649,0)
8927.1;+1149,;3~http://
"DATA",811.8,153,100,650,0)
]]>
"DATA",811.8,153,100,651,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,652,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,653,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,654,0)
<FILE_NAME>REMINDER DEFINITION</FILE_NAME>
"DATA",811.8,153,100,655,0)
<FILE_NUMBER>811.9</FILE_NUMBER>
"DATA",811.8,153,100,656,0)
<POINT_01>VA-HTN ASSESSMENT BP &gt;=140/90</POINT_01>
"DATA",811.8,153,100,657,0)
<INTERNAL_ENTRY_NUMBER>198</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,658,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,659,0)
<![CDATA[
"DATA",811.8,153,100,660,0)
811.9;+198,;.01~VA-HTN ASSESSMENT BP >=140/90
"DATA",811.8,153,100,661,0)
811.9;+198,;1.2~HTN Assess for Elevated BP>=140/90
"DATA",811.8,153,100,662,0)
811.9;+198,;1.7~FEB 04, 2003@11:39:26
"DATA",811.8,153,100,663,0)
811.9;+198,;2~WP-start~40
"DATA",811.8,153,100,664,0)
This reminder is due every 6 months for patients who have their last 
"DATA",811.8,153,100,665,0)
recorded DBP >89 or the last SBP >139 and the patient has a diagnosis of 
"DATA",811.8,153,100,666,0)
HTN in PCE, problem list or PTF in the past 18 months.  
"DATA",811.8,153,100,667,0)
 
"DATA",811.8,153,100,668,0)
The reminder becomes not applicable if the last BP <140/90 is recorded.  
"DATA",811.8,153,100,669,0)
It is also not applicable if the last SBP is >159 or the last DBP is >99 
"DATA",811.8,153,100,670,0)
since the "HTN ASSESSMENT BP >160/100" reminder will be applicable for 
"DATA",811.8,153,100,671,0)
the patient with the higher measured BPs.
"DATA",811.8,153,100,672,0)
 
"DATA",811.8,153,100,673,0)
The reminder is resolved for 6 months by any of the interventions listed 
"DATA",811.8,153,100,674,0)
below:
"DATA",811.8,153,100,675,0)
 
"DATA",811.8,153,100,676,0)
  Education  (reminder term HTN EDUCATIONAL INTERVENTIONS) 
"DATA",811.8,153,100,677,0)
     VA-HTN EXERCISE EDUCATION                    (ED)
"DATA",811.8,153,100,678,0)
     VA-HTN NUTRITION EDUCATION                   (ED)
"DATA",811.8,153,100,679,0)
     HTN LIFESTYLE MODIFICATIONS RECOMMENDED      (HF) 
"DATA",811.8,153,100,680,0)
     VA-HTN MEDICATION ADHERENCE                  (ED) 
"DATA",811.8,153,100,681,0)
     HTN NO EDUC INTERVENTION WARRANTED           (HF) 
"DATA",811.8,153,100,682,0)
     
"DATA",811.8,153,100,683,0)
 
"DATA",811.8,153,100,684,0)
  Medication   (reminder term HTN MED & OTHER INTERVENTIONS) 
"DATA",811.8,153,100,685,0)
     HTN MEDICATIONS ADJUSTED                   (HF)
"DATA",811.8,153,100,686,0)
     HTN REFUSAL OF MED INTERVENTION            (HF)
"DATA",811.8,153,100,687,0)
     HTN EVALUATION OF RESISTANT/SECONDARY      (HF)
"DATA",811.8,153,100,688,0)
     HTN NO MED CHANGE - BP CONTROLLED          (HF)
"DATA",811.8,153,100,689,0)
     HTN NO MED CHANGE - COMORBID ILLNESS       (HF)
"DATA",811.8,153,100,690,0)
     HTN NO MED CHANGE - SIDE EFFECTS FROM RX   (HF)
"DATA",811.8,153,100,691,0)
     HTN NO MED CHANGE - LIMITED LIFE EXP       (HF)
"DATA",811.8,153,100,692,0)
     HTN NO MED CHANGE - NONCOMPLIANCE          (HF)
"DATA",811.8,153,100,693,0)
     HTN NO MED CHANGE - OTHER                  (HF)
"DATA",811.8,153,100,694,0)
 
"DATA",811.8,153,100,695,0)
The reminder becomes not applicable if the health factor of INCORRECT HTN 
"DATA",811.8,153,100,696,0)
DIAGNOSIS is entered.  The reminder is reactivated the next time that an 
"DATA",811.8,153,100,697,0)
ICD code for HTN is entered.  
"DATA",811.8,153,100,698,0)
 
"DATA",811.8,153,100,699,0)
The following findings are included in the reminder to provide additional 
"DATA",811.8,153,100,700,0)
information in the clinical maintenance display:
"DATA",811.8,153,100,701,0)
 
"DATA",811.8,153,100,702,0)
Any diabetes diagnoses, drug classes for HTN meds (CV100, CV150, 
"DATA",811.8,153,100,703,0)
CV400, CV490, CV700, CV709, CV800, CV805), patient's BMI.
"DATA",811.8,153,100,704,0)
811.9;+198,;3~WP-start~7
"DATA",811.8,153,100,705,0)
To modify this reminder from its distributed definition, copy the 
"DATA",811.8,153,100,706,0)
reminder to a new reminder and then make the modifications necessary to 
"DATA",811.8,153,100,707,0)
define your sites guideline.  
"DATA",811.8,153,100,708,0)
 
"DATA",811.8,153,100,709,0)
This reminder has customized cohort logic that uses the MRD function to 
"DATA",811.8,153,100,710,0)
use the INCORRECT DIAGNOSIS heath factor or the ICD code - whichever is 
"DATA",811.8,153,100,711,0)
entered most recently.
"DATA",811.8,153,100,712,0)
811.9;+198,;30~FI(2)&FI(11)&FF(1)&'FI(13)
"DATA",811.8,153,100,713,0)
811.9;+198,;31~FI(2)&FI(11)&FF(1)&'FI(13)
"DATA",811.8,153,100,714,0)
811.9;+198,;32~4
"DATA",811.8,153,100,715,0)
811.9;+198,;33~2;11;FF1;13
"DATA",811.8,153,100,716,0)
811.9;+198,;35~(0)!FI(27)!FI(28)
"DATA",811.8,153,100,717,0)
811.9;+198,;36~2
"DATA",811.8,153,100,718,0)
811.9;+198,;37~27;28
"DATA",811.8,153,100,719,0)
811.9;+198,;40~0
"DATA",811.8,153,100,720,0)
811.9;+198,;42~2
"DATA",811.8,153,100,721,0)
811.9;+198,;43~7;9
"DATA",811.8,153,100,722,0)
811.9;+198,;51~VA-HTN ELEVATED BP>140/90
"DATA",811.8,153,100,723,0)
811.9;+198,;62~0
"DATA",811.8,153,100,724,0)
811.9;+198,;63~0
"DATA",811.8,153,100,725,0)
811.9;+198,;67~0
"DATA",811.8,153,100,726,0)
811.9;+198,;68~0
"DATA",811.8,153,100,727,0)
811.9;+198,;72~0
"DATA",811.8,153,100,728,0)
811.9;+198,;73~0
"DATA",811.8,153,100,729,0)
811.9;+198,;77~0
"DATA",811.8,153,100,730,0)
811.9;+198,;78~0
"DATA",811.8,153,100,731,0)
811.9;+198,;100~NATIONAL
"DATA",811.8,153,100,732,0)
811.9;+198,;101~Office of Quality & Performance
"DATA",811.8,153,100,733,0)
811.9;+198,;103~C
"DATA",811.8,153,100,734,0)
811.9001;+199,+198,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,735,0)
811.9001;+199,+198,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,736,0)
811.9001;+199,+198,;2~WP-start~1
"DATA",811.8,153,100,737,0)
Exchange Stub
"DATA",811.8,153,100,738,0)
811.9002;+200,+198,;.01~http://www.oqp.med.va.gov/cpg/HTN/HTN_base.htm
"DATA",811.8,153,100,739,0)
811.9002;+200,+198,;.02~VA HTN Guideline Web Page
"DATA",811.8,153,100,740,0)
811.9002;+201,+198,;.01~http://www.oqp.med.va.gov/cpg/HTN/HTN_cpg/algo1frame.htm
"DATA",811.8,153,100,741,0)
811.9002;+201,+198,;.02~VA HTN Guideline Algorithm
"DATA",811.8,153,100,742,0)
811.9002;+202,+198,;.01~http://www.oqp.med.va.gov/cpg/HTN/G/HTN_pock.pdf
"DATA",811.8,153,100,743,0)
811.9002;+202,+198,;.02~VA HTN Guideline Pocket Card
"DATA",811.8,153,100,744,0)
811.9002;+203,+198,;.01~http://www.oqp.med.va.gov/cpg/HTN/HTN_cpg/AnnKframe.htm
"DATA",811.8,153,100,745,0)
811.9002;+203,+198,;.02~VA HTN Guideline Diet and Lifestyle Counseling
"DATA",811.8,153,100,746,0)
811.902;+204,+198,;.01~VM.BLOOD PRESSURE
"DATA",811.8,153,100,747,0)
811.902;+204,+198,;8~AND
"DATA",811.8,153,100,748,0)
811.902;+204,+198,;14~I $P(V,"/",1)>139!($P(V,"/",2)>89)
"DATA",811.8,153,100,749,0)
811.902;+204,+198,;22~I $P(V,"/",1)>139!($P(V,"/",2)>89)
"DATA",811.8,153,100,750,0)
811.902;+204,+198,;24~0
"DATA",811.8,153,100,751,0)
811.902;+204,+198,;25~0
"DATA",811.8,153,100,752,0)
811.902;+205,+198,;.01~VM.BLOOD PRESSURE
"DATA",811.8,153,100,753,0)
811.902;+205,+198,;8~AND NOT
"DATA",811.8,153,100,754,0)
811.902;+205,+198,;14~I $P(V,"/",1)>159!($P(V,"/",2)>99)
"DATA",811.8,153,100,755,0)
811.902;+205,+198,;22~I $P(V,"/",1)>159!($P(V,"/",2)>99)
"DATA",811.8,153,100,756,0)
811.902;+205,+198,;24~0
"DATA",811.8,153,100,757,0)
811.902;+205,+198,;25~0
"DATA",811.8,153,100,758,0)
811.902;+206,+198,;.01~TX.VA-HYPERTENSION CODES
"DATA",811.8,153,100,759,0)
811.902;+206,+198,;8~AND
"DATA",811.8,153,100,760,0)
811.902;+206,+198,;9~T-18M
"DATA",811.8,153,100,761,0)
811.902;+206,+198,;24~0
"DATA",811.8,153,100,762,0)
811.902;+206,+198,;25~0
"DATA",811.8,153,100,763,0)
811.902;+207,+198,;.01~RT.VA-HTN MED & OTHER INTERVENTIONS
"DATA",811.8,153,100,764,0)
811.902;+207,+198,;7~OR
"DATA",811.8,153,100,765,0)
811.902;+207,+198,;9~T-6M
"DATA",811.8,153,100,766,0)
811.902;+207,+198,;24~0
"DATA",811.8,153,100,767,0)
811.902;+207,+198,;25~0
"DATA",811.8,153,100,768,0)
811.902;+208,+198,;.01~RT.VA-HTN EDUCATIONAL INTERVENTIONS
"DATA",811.8,153,100,769,0)
811.902;+208,+198,;7~OR
"DATA",811.8,153,100,770,0)
811.902;+208,+198,;9~T-6M
"DATA",811.8,153,100,771,0)
811.902;+208,+198,;24~0
"DATA",811.8,153,100,772,0)
811.902;+208,+198,;25~0
"DATA",811.8,153,100,773,0)
811.902;+209,+198,;.01~CF.VA-BMI
"DATA",811.8,153,100,774,0)
811.902;+209,+198,;24~0
"DATA",811.8,153,100,775,0)
811.902;+209,+198,;25~0
"DATA",811.8,153,100,776,0)
811.902;+210,+198,;.01~RT.VA-HTN INCORRECT DIAGNOSIS
"DATA",811.8,153,100,777,0)
811.902;+210,+198,;24~0
"DATA",811.8,153,100,778,0)
811.902;+210,+198,;25~0
"DATA",811.8,153,100,779,0)
811.925;+211,+198,;.01~1
"DATA",811.8,153,100,780,0)
811.925;+211,+198,;3~MRD(2)>MRD(9)
"DATA",811.8,153,100,781,0)
811.925;+211,+198,;10~FN(1)>FN(2)
"DATA",811.8,153,100,782,0)
811.925;+211,+198,;41~0
"DATA",811.8,153,100,783,0)
811.925;+211,+198,;42~0
"DATA",811.8,153,100,784,0)
811.9255;+212,+211,+198,;.01~1
"DATA",811.8,153,100,785,0)
811.9255;+212,+211,+198,;.02~MRD
"DATA",811.8,153,100,786,0)
811.9255;+213,+211,+198,;.01~2
"DATA",811.8,153,100,787,0)
811.9255;+213,+211,+198,;.02~MRD
"DATA",811.8,153,100,788,0)
811.9256;+214,+212,+211,+198,;.01~2
"DATA",811.8,153,100,789,0)
811.9256;+215,+213,+211,+198,;.01~9
"DATA",811.8,153,100,790,0)
811.97;+216,+198,;.01~6M
"DATA",811.8,153,100,791,0)
811.97;+216,+198,;5~0
"DATA",811.8,153,100,792,0)
811.97;+216,+198,;6~0
"DATA",811.8,153,100,793,0)
]]>
"DATA",811.8,153,100,794,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,795,0)
<IEN_ROOT>
"DATA",811.8,153,100,796,0)
<![CDATA[
"DATA",811.8,153,100,797,0)
199^1
"DATA",811.8,153,100,798,0)
200^1
"DATA",811.8,153,100,799,0)
201^2
"DATA",811.8,153,100,800,0)
202^3
"DATA",811.8,153,100,801,0)
203^4
"DATA",811.8,153,100,802,0)
204^11
"DATA",811.8,153,100,803,0)
205^13
"DATA",811.8,153,100,804,0)
206^2
"DATA",811.8,153,100,805,0)
207^27
"DATA",811.8,153,100,806,0)
208^28
"DATA",811.8,153,100,807,0)
209^7
"DATA",811.8,153,100,808,0)
210^9
"DATA",811.8,153,100,809,0)
211^1
"DATA",811.8,153,100,810,0)
212^1
"DATA",811.8,153,100,811,0)
213^2
"DATA",811.8,153,100,812,0)
214^1
"DATA",811.8,153,100,813,0)
215^1
"DATA",811.8,153,100,814,0)
216^1
"DATA",811.8,153,100,815,0)
]]>
"DATA",811.8,153,100,816,0)
</IEN_ROOT>
"DATA",811.8,153,100,817,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,818,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,819,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,820,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,821,0)
<POINT_01>VA-TEXT HTN DIET/LIPIDS (1)</POINT_01>
"DATA",811.8,153,100,822,0)
<INTERNAL_ENTRY_NUMBER>612000455</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,823,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,824,0)
<![CDATA[
"DATA",811.8,153,100,825,0)
801.41;+612000455,;.01~VA-TEXT HTN DIET/LIPIDS (1)
"DATA",811.8,153,100,826,0)
801.41;+612000455,;4~dialog element
"DATA",811.8,153,100,827,0)
801.41;+612000455,;25~WP-start~2
"DATA",811.8,153,100,828,0)
Reduce intake of dietary fat, benefit of eating fresh fruits and 
"DATA",811.8,153,100,829,0)
vegetables, low fat diet 
"DATA",811.8,153,100,830,0)
801.41;+612000455,;35~WP-start~4
"DATA",811.8,153,100,831,0)
The patient was counseled to reduce intake of dietary saturated fats and
"DATA",811.8,153,100,832,0)
cholesterol, and that a diet rich in fresh fruits and vegetables and low
"DATA",811.8,153,100,833,0)
in dietary saturated fats and cholesterol is also beneficial in lowering
"DATA",811.8,153,100,834,0)
blood pressure.
"DATA",811.8,153,100,835,0)
801.41;+612000455,;100~NATIONAL
"DATA",811.8,153,100,836,0)
801.41;+612000455,;101~Office of Quality & Performance
"DATA",811.8,153,100,837,0)
801.44;+612000456,+612000455,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,838,0)
801.44;+612000456,+612000455,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,839,0)
801.44;+612000456,+612000455,;2~WP-start~1
"DATA",811.8,153,100,840,0)
Exchange Stub
"DATA",811.8,153,100,841,0)
]]>
"DATA",811.8,153,100,842,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,843,0)
<IEN_ROOT>
"DATA",811.8,153,100,844,0)
<![CDATA[
"DATA",811.8,153,100,845,0)
612000456^1
"DATA",811.8,153,100,846,0)
]]>
"DATA",811.8,153,100,847,0)
</IEN_ROOT>
"DATA",811.8,153,100,848,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,849,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,850,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,851,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,852,0)
<POINT_01>VA-TEXT HTN SALT (1)</POINT_01>
"DATA",811.8,153,100,853,0)
<INTERNAL_ENTRY_NUMBER>612000456</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,854,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,855,0)
<![CDATA[
"DATA",811.8,153,100,856,0)
801.41;+612000456,;.01~VA-TEXT HTN SALT (1)
"DATA",811.8,153,100,857,0)
801.41;+612000456,;4~dialog element
"DATA",811.8,153,100,858,0)
801.41;+612000456,;25~WP-start~2
"DATA",811.8,153,100,859,0)
Role of dietary sodium in elevated BP, limit Na to no more than 2.4g of 
"DATA",811.8,153,100,860,0)
sodium or 6g of sodium chloride
"DATA",811.8,153,100,861,0)
801.41;+612000456,;35~WP-start~3
"DATA",811.8,153,100,862,0)
The contribution of dietary sodium to elevated blood pressure was
"DATA",811.8,153,100,863,0)
reviewed.  The patient was counseled to limit sodium intake to no more
"DATA",811.8,153,100,864,0)
than 2.4g of sodium or 6g of sodium chloride.
"DATA",811.8,153,100,865,0)
801.41;+612000456,;100~NATIONAL
"DATA",811.8,153,100,866,0)
801.41;+612000456,;101~Office of Quality & Performance
"DATA",811.8,153,100,867,0)
801.44;+612000457,+612000456,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,868,0)
801.44;+612000457,+612000456,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,869,0)
801.44;+612000457,+612000456,;2~WP-start~1
"DATA",811.8,153,100,870,0)
Exchange Stub
"DATA",811.8,153,100,871,0)
]]>
"DATA",811.8,153,100,872,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,873,0)
<IEN_ROOT>
"DATA",811.8,153,100,874,0)
<![CDATA[
"DATA",811.8,153,100,875,0)
612000457^1
"DATA",811.8,153,100,876,0)
]]>
"DATA",811.8,153,100,877,0)
</IEN_ROOT>
"DATA",811.8,153,100,878,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,879,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,880,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,881,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,882,0)
<POINT_01>VA-TEXT HTN OBESITY (1)</POINT_01>
"DATA",811.8,153,100,883,0)
<INTERNAL_ENTRY_NUMBER>612000457</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,884,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,885,0)
<![CDATA[
"DATA",811.8,153,100,886,0)
801.41;+612000457,;.01~VA-TEXT HTN OBESITY (1)
"DATA",811.8,153,100,887,0)
801.41;+612000457,;4~dialog element
"DATA",811.8,153,100,888,0)
801.41;+612000457,;25~WP-start~1
"DATA",811.8,153,100,889,0)
Wt loss to within 10 percent of IBW, benefit of even 5-10 lb wt loss
"DATA",811.8,153,100,890,0)
801.41;+612000457,;35~WP-start~3
"DATA",811.8,153,100,891,0)
The patient was counseled to reduce their weight to within 10 percent of
"DATA",811.8,153,100,892,0)
their ideal body weight.   The possible improvement in BP control
"DATA",811.8,153,100,893,0)
with even 5 to 10 pounds of weight loss was reviewed.
"DATA",811.8,153,100,894,0)
801.41;+612000457,;100~NATIONAL
"DATA",811.8,153,100,895,0)
801.41;+612000457,;101~Office of Quality & Performance
"DATA",811.8,153,100,896,0)
801.44;+612000458,+612000457,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,897,0)
801.44;+612000458,+612000457,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,898,0)
801.44;+612000458,+612000457,;2~WP-start~1
"DATA",811.8,153,100,899,0)
Exchange Stub
"DATA",811.8,153,100,900,0)
]]>
"DATA",811.8,153,100,901,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,902,0)
<IEN_ROOT>
"DATA",811.8,153,100,903,0)
<![CDATA[
"DATA",811.8,153,100,904,0)
612000458^1
"DATA",811.8,153,100,905,0)
]]>
"DATA",811.8,153,100,906,0)
</IEN_ROOT>
"DATA",811.8,153,100,907,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,908,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,909,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,910,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,911,0)
<POINT_01>VA-GP HTN ED NUTRITION (2)</POINT_01>
"DATA",811.8,153,100,912,0)
<INTERNAL_ENTRY_NUMBER>612000459</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,913,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,914,0)
<![CDATA[
"DATA",811.8,153,100,915,0)
801.41;+612000459,;.01~VA-GP HTN ED NUTRITION (2)
"DATA",811.8,153,100,916,0)
801.41;+612000459,;4~dialog group
"DATA",811.8,153,100,917,0)
801.41;+612000459,;5~optional statements
"DATA",811.8,153,100,918,0)
801.41;+612000459,;6~YES
"DATA",811.8,153,100,919,0)
801.41;+612000459,;7~2
"DATA",811.8,153,100,920,0)
801.41;+612000459,;8~NO
"DATA",811.8,153,100,921,0)
801.41;+612000459,;9~NO SELECTION REQUIRED
"DATA",811.8,153,100,922,0)
801.41;+612000459,;15~ED.VA-HTN NUTRITION EDUCATION
"DATA",811.8,153,100,923,0)
801.41;+612000459,;25~WP-start~2
"DATA",811.8,153,100,924,0)
Nutrition:  Counseled on the importance of diet and wt. control in the
"DATA",811.8,153,100,925,0)
control of blood pressure
"DATA",811.8,153,100,926,0)
801.41;+612000459,;35~WP-start~2
"DATA",811.8,153,100,927,0)
The patient was counseled on the importance of diet and weight control
"DATA",811.8,153,100,928,0)
in the control of blood pressure.
"DATA",811.8,153,100,929,0)
801.41;+612000459,;52~INDENT
"DATA",811.8,153,100,930,0)
801.41;+612000459,;100~LOCAL
"DATA",811.8,153,100,931,0)
801.412;+612000460,+612000459,;.01~5
"DATA",811.8,153,100,932,0)
801.412;+612000460,+612000459,;2~VA-TEXT HTN OBESITY (1)
"DATA",811.8,153,100,933,0)
801.412;+612000461,+612000459,;.01~10
"DATA",811.8,153,100,934,0)
801.412;+612000461,+612000459,;2~VA-TEXT HTN SALT (1)
"DATA",811.8,153,100,935,0)
801.412;+612000462,+612000459,;.01~15
"DATA",811.8,153,100,936,0)
801.412;+612000462,+612000459,;2~VA-TEXT HTN DIET/LIPIDS (1)
"DATA",811.8,153,100,937,0)
801.412;+612000463,+612000459,;.01~20
"DATA",811.8,153,100,938,0)
801.412;+612000463,+612000459,;2~PXRM COMMENT
"DATA",811.8,153,100,939,0)
801.44;+612000464,+612000459,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,940,0)
801.44;+612000464,+612000459,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,941,0)
801.44;+612000464,+612000459,;2~WP-start~1
"DATA",811.8,153,100,942,0)
Exchange Stub
"DATA",811.8,153,100,943,0)
]]>
"DATA",811.8,153,100,944,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,945,0)
<IEN_ROOT>
"DATA",811.8,153,100,946,0)
<![CDATA[
"DATA",811.8,153,100,947,0)
612000460^1
"DATA",811.8,153,100,948,0)
612000461^2
"DATA",811.8,153,100,949,0)
612000462^3
"DATA",811.8,153,100,950,0)
612000463^4
"DATA",811.8,153,100,951,0)
612000464^1
"DATA",811.8,153,100,952,0)
]]>
"DATA",811.8,153,100,953,0)
</IEN_ROOT>
"DATA",811.8,153,100,954,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,955,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,956,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,957,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,958,0)
<POINT_01>VA-HF HTN NO EDUCATION WARRANTED</POINT_01>
"DATA",811.8,153,100,959,0)
<INTERNAL_ENTRY_NUMBER>598000147</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,960,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,961,0)
<![CDATA[
"DATA",811.8,153,100,962,0)
801.41;+598000147,;.01~VA-HF HTN NO EDUCATION WARRANTED
"DATA",811.8,153,100,963,0)
801.41;+598000147,;4~dialog element
"DATA",811.8,153,100,964,0)
801.41;+598000147,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,965,0)
801.41;+598000147,;15~HF.HTN NO EDUC INTERVENTION WARRANTED
"DATA",811.8,153,100,966,0)
801.41;+598000147,;25~WP-start~1
"DATA",811.8,153,100,967,0)
No Education Warranted (based on comorbidities/life expectancy/other)
"DATA",811.8,153,100,968,0)
801.41;+598000147,;35~WP-start~2
"DATA",811.8,153,100,969,0)
Based on the patient's comorbidities and condition, no education to
"DATA",811.8,153,100,970,0)
improve BP control is warranted at this time.
"DATA",811.8,153,100,971,0)
801.41;+598000147,;100~LOCAL
"DATA",811.8,153,100,972,0)
801.412;+598000148,+598000147,;.01~5
"DATA",811.8,153,100,973,0)
801.412;+598000148,+598000147,;2~PXRM COMMENT
"DATA",811.8,153,100,974,0)
801.412;+598000148,+598000147,;9~YES
"DATA",811.8,153,100,975,0)
801.44;+598000149,+598000147,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,976,0)
801.44;+598000149,+598000147,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,977,0)
801.44;+598000149,+598000147,;2~WP-start~1
"DATA",811.8,153,100,978,0)
Exchange Stub
"DATA",811.8,153,100,979,0)
]]>
"DATA",811.8,153,100,980,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,981,0)
<IEN_ROOT>
"DATA",811.8,153,100,982,0)
<![CDATA[
"DATA",811.8,153,100,983,0)
598000148^1
"DATA",811.8,153,100,984,0)
598000149^1
"DATA",811.8,153,100,985,0)
]]>
"DATA",811.8,153,100,986,0)
</IEN_ROOT>
"DATA",811.8,153,100,987,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,988,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,989,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,990,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,991,0)
<POINT_01>VA-HF HTN LIFESTYLE MODS SPECIFIC RECOMMENDED</POINT_01>
"DATA",811.8,153,100,992,0)
<INTERNAL_ENTRY_NUMBER>598000154</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,993,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,994,0)
<![CDATA[
"DATA",811.8,153,100,995,0)
801.41;+598000154,;.01~VA-HF HTN LIFESTYLE MODS SPECIFIC RECOMMENDED
"DATA",811.8,153,100,996,0)
801.41;+598000154,;4~dialog element
"DATA",811.8,153,100,997,0)
801.41;+598000154,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,998,0)
801.41;+598000154,;15~HF.HTN LIFESTYLE MODIFICATIONS RECOMMENDED
"DATA",811.8,153,100,999,0)
801.41;+598000154,;25~WP-start~1
"DATA",811.8,153,100,1000,0)
Other Lifestyle Modifications Recommended - specific interventions
"DATA",811.8,153,100,1001,0)
801.41;+598000154,;35~WP-start~2
"DATA",811.8,153,100,1002,0)
Specific recommendations for lifestyle modifications were
"DATA",811.8,153,100,1003,0)
made to the patient to improve BP control.
"DATA",811.8,153,100,1004,0)
801.41;+598000154,;100~LOCAL
"DATA",811.8,153,100,1005,0)
801.412;+598000155,+598000154,;.01~5
"DATA",811.8,153,100,1006,0)
801.412;+598000155,+598000154,;2~PXRM COMMENT
"DATA",811.8,153,100,1007,0)
801.44;+598000156,+598000154,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1008,0)
801.44;+598000156,+598000154,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1009,0)
801.44;+598000156,+598000154,;2~WP-start~1
"DATA",811.8,153,100,1010,0)
Exchange Stub
"DATA",811.8,153,100,1011,0)
]]>
"DATA",811.8,153,100,1012,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1013,0)
<IEN_ROOT>
"DATA",811.8,153,100,1014,0)
<![CDATA[
"DATA",811.8,153,100,1015,0)
598000155^1
"DATA",811.8,153,100,1016,0)
598000156^1
"DATA",811.8,153,100,1017,0)
]]>
"DATA",811.8,153,100,1018,0)
</IEN_ROOT>
"DATA",811.8,153,100,1019,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1020,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1021,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1022,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1023,0)
<POINT_01>ED HTN COMPLIANCE</POINT_01>
"DATA",811.8,153,100,1024,0)
<INTERNAL_ENTRY_NUMBER>598000153</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1025,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1026,0)
<![CDATA[
"DATA",811.8,153,100,1027,0)
801.41;+598000153,;.01~ED HTN COMPLIANCE
"DATA",811.8,153,100,1028,0)
801.41;+598000153,;4~dialog element
"DATA",811.8,153,100,1029,0)
801.41;+598000153,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1030,0)
801.41;+598000153,;15~ED.VA-HTN MEDICATION ADHERENCE
"DATA",811.8,153,100,1031,0)
801.41;+598000153,;25~WP-start~1
"DATA",811.8,153,100,1032,0)
Adherence to Therapy Education
"DATA",811.8,153,100,1033,0)
801.41;+598000153,;35~WP-start~2
"DATA",811.8,153,100,1034,0)
The patient was educated on the importance of taking prescribed therapy
"DATA",811.8,153,100,1035,0)
for hypertension.
"DATA",811.8,153,100,1036,0)
801.41;+598000153,;100~LOCAL
"DATA",811.8,153,100,1037,0)
801.412;+598000154,+598000153,;.01~5
"DATA",811.8,153,100,1038,0)
801.412;+598000154,+598000153,;2~PXRM COMMENT
"DATA",811.8,153,100,1039,0)
801.44;+598000155,+598000153,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1040,0)
801.44;+598000155,+598000153,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1041,0)
801.44;+598000155,+598000153,;2~WP-start~1
"DATA",811.8,153,100,1042,0)
Exchange Stub
"DATA",811.8,153,100,1043,0)
]]>
"DATA",811.8,153,100,1044,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1045,0)
<IEN_ROOT>
"DATA",811.8,153,100,1046,0)
<![CDATA[
"DATA",811.8,153,100,1047,0)
598000154^1
"DATA",811.8,153,100,1048,0)
598000155^1
"DATA",811.8,153,100,1049,0)
]]>
"DATA",811.8,153,100,1050,0)
</IEN_ROOT>
"DATA",811.8,153,100,1051,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1052,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1053,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1054,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1055,0)
<POINT_01>VA-TEXT HTN EXERCISE OTHER (1)</POINT_01>
"DATA",811.8,153,100,1056,0)
<INTERNAL_ENTRY_NUMBER>612000460</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1057,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1058,0)
<![CDATA[
"DATA",811.8,153,100,1059,0)
801.41;+612000460,;.01~VA-TEXT HTN EXERCISE OTHER (1)
"DATA",811.8,153,100,1060,0)
801.41;+612000460,;4~dialog element
"DATA",811.8,153,100,1061,0)
801.41;+612000460,;25~WP-start~2
"DATA",811.8,153,100,1062,0)
Limited ability to exercise, increase physical activity as much as 
"DATA",811.8,153,100,1063,0)
possible
"DATA",811.8,153,100,1064,0)
801.41;+612000460,;35~WP-start~3
"DATA",811.8,153,100,1065,0)
The patient has a limited ability to exercise but was encouraged to
"DATA",811.8,153,100,1066,0)
increase physical activity as much as possible since any increase in
"DATA",811.8,153,100,1067,0)
activity may be beneficial in improving BP control.
"DATA",811.8,153,100,1068,0)
801.41;+612000460,;100~NATIONAL
"DATA",811.8,153,100,1069,0)
801.41;+612000460,;101~Office of Quality & Performance
"DATA",811.8,153,100,1070,0)
801.44;+612000461,+612000460,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1071,0)
801.44;+612000461,+612000460,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1072,0)
801.44;+612000461,+612000460,;2~WP-start~1
"DATA",811.8,153,100,1073,0)
Exchange Stub
"DATA",811.8,153,100,1074,0)
]]>
"DATA",811.8,153,100,1075,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1076,0)
<IEN_ROOT>
"DATA",811.8,153,100,1077,0)
<![CDATA[
"DATA",811.8,153,100,1078,0)
612000461^1
"DATA",811.8,153,100,1079,0)
]]>
"DATA",811.8,153,100,1080,0)
</IEN_ROOT>
"DATA",811.8,153,100,1081,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1082,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1083,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1084,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1085,0)
<POINT_01>VA-TEXT HTN EXERCISE GOAL (1)</POINT_01>
"DATA",811.8,153,100,1086,0)
<INTERNAL_ENTRY_NUMBER>612000461</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1087,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1088,0)
<![CDATA[
"DATA",811.8,153,100,1089,0)
801.41;+612000461,;.01~VA-TEXT HTN EXERCISE GOAL (1)
"DATA",811.8,153,100,1090,0)
801.41;+612000461,;4~dialog element
"DATA",811.8,153,100,1091,0)
801.41;+612000461,;25~WP-start~2
"DATA",811.8,153,100,1092,0)
Goal to exercise at least 30 minutes 3 times per week, any increase may 
"DATA",811.8,153,100,1093,0)
be useful
"DATA",811.8,153,100,1094,0)
801.41;+612000461,;35~WP-start~3
"DATA",811.8,153,100,1095,0)
The patient was instructed to try to exercise at least 30 minutes 3 times
"DATA",811.8,153,100,1096,0)
per week if possible and that any increase in physical activity may be
"DATA",811.8,153,100,1097,0)
useful in controlling BP.
"DATA",811.8,153,100,1098,0)
801.41;+612000461,;100~NATIONAL
"DATA",811.8,153,100,1099,0)
801.41;+612000461,;101~Office of Quality & Performance
"DATA",811.8,153,100,1100,0)
801.44;+612000462,+612000461,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1101,0)
801.44;+612000462,+612000461,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1102,0)
801.44;+612000462,+612000461,;2~WP-start~1
"DATA",811.8,153,100,1103,0)
Exchange Stub
"DATA",811.8,153,100,1104,0)
]]>
"DATA",811.8,153,100,1105,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1106,0)
<IEN_ROOT>
"DATA",811.8,153,100,1107,0)
<![CDATA[
"DATA",811.8,153,100,1108,0)
612000462^1
"DATA",811.8,153,100,1109,0)
]]>
"DATA",811.8,153,100,1110,0)
</IEN_ROOT>
"DATA",811.8,153,100,1111,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1112,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1113,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1114,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1115,0)
<POINT_01>VA-GP HTN ED EXERCISE (2)</POINT_01>
"DATA",811.8,153,100,1116,0)
<INTERNAL_ENTRY_NUMBER>612000462</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1117,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1118,0)
<![CDATA[
"DATA",811.8,153,100,1119,0)
801.41;+612000462,;.01~VA-GP HTN ED EXERCISE (2)
"DATA",811.8,153,100,1120,0)
801.41;+612000462,;4~dialog group
"DATA",811.8,153,100,1121,0)
801.41;+612000462,;5~optional statements
"DATA",811.8,153,100,1122,0)
801.41;+612000462,;6~YES
"DATA",811.8,153,100,1123,0)
801.41;+612000462,;7~2
"DATA",811.8,153,100,1124,0)
801.41;+612000462,;8~NO
"DATA",811.8,153,100,1125,0)
801.41;+612000462,;9~NO SELECTION REQUIRED
"DATA",811.8,153,100,1126,0)
801.41;+612000462,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1127,0)
801.41;+612000462,;15~ED.VA-HTN EXERCISE
"DATA",811.8,153,100,1128,0)
801.41;+612000462,;25~WP-start~2
"DATA",811.8,153,100,1129,0)
Exercise:  Counseled on the importance of exercise in the control of blood
"DATA",811.8,153,100,1130,0)
pressure
"DATA",811.8,153,100,1131,0)
801.41;+612000462,;35~WP-start~2
"DATA",811.8,153,100,1132,0)
The patient was counseled on the importance of regular exercise and/or
"DATA",811.8,153,100,1133,0)
physical activity in the control of blood pressure.
"DATA",811.8,153,100,1134,0)
801.41;+612000462,;50~HIDE
"DATA",811.8,153,100,1135,0)
801.41;+612000462,;52~INDENT
"DATA",811.8,153,100,1136,0)
801.41;+612000462,;100~NATIONAL
"DATA",811.8,153,100,1137,0)
801.41;+612000462,;101~Office of Quality & Performance
"DATA",811.8,153,100,1138,0)
801.412;+612000463,+612000462,;.01~5
"DATA",811.8,153,100,1139,0)
801.412;+612000463,+612000462,;2~VA-TEXT HTN EXERCISE GOAL (1)
"DATA",811.8,153,100,1140,0)
801.412;+612000464,+612000462,;.01~10
"DATA",811.8,153,100,1141,0)
801.412;+612000464,+612000462,;2~VA-TEXT HTN EXERCISE OTHER (1)
"DATA",811.8,153,100,1142,0)
801.412;+612000465,+612000462,;.01~15
"DATA",811.8,153,100,1143,0)
801.412;+612000465,+612000462,;2~PXRM COMMENT
"DATA",811.8,153,100,1144,0)
801.44;+612000466,+612000462,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1145,0)
801.44;+612000466,+612000462,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1146,0)
801.44;+612000466,+612000462,;2~WP-start~1
"DATA",811.8,153,100,1147,0)
Exchange Stub
"DATA",811.8,153,100,1148,0)
]]>
"DATA",811.8,153,100,1149,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1150,0)
<IEN_ROOT>
"DATA",811.8,153,100,1151,0)
<![CDATA[
"DATA",811.8,153,100,1152,0)
612000463^1
"DATA",811.8,153,100,1153,0)
612000464^2
"DATA",811.8,153,100,1154,0)
612000465^3
"DATA",811.8,153,100,1155,0)
612000466^1
"DATA",811.8,153,100,1156,0)
]]>
"DATA",811.8,153,100,1157,0)
</IEN_ROOT>
"DATA",811.8,153,100,1158,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1159,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1160,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1161,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1162,0)
<POINT_01>VA-GP HTN EDUCATION NEW</POINT_01>
"DATA",811.8,153,100,1163,0)
<INTERNAL_ENTRY_NUMBER>612000463</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1164,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1165,0)
<![CDATA[
"DATA",811.8,153,100,1166,0)
801.41;+612000463,;.01~VA-GP HTN EDUCATION NEW
"DATA",811.8,153,100,1167,0)
801.41;+612000463,;4~dialog group
"DATA",811.8,153,100,1168,0)
801.41;+612000463,;6~YES
"DATA",811.8,153,100,1169,0)
801.41;+612000463,;7~1
"DATA",811.8,153,100,1170,0)
801.41;+612000463,;8~NO
"DATA",811.8,153,100,1171,0)
801.41;+612000463,;9~NO SELECTION REQUIRED
"DATA",811.8,153,100,1172,0)
801.41;+612000463,;23~YES
"DATA",811.8,153,100,1173,0)
801.41;+612000463,;25~WP-start~1
"DATA",811.8,153,100,1174,0)
EDUCATION
"DATA",811.8,153,100,1175,0)
801.41;+612000463,;50~SHOW
"DATA",811.8,153,100,1176,0)
801.41;+612000463,;51~SUPPRESS
"DATA",811.8,153,100,1177,0)
801.41;+612000463,;52~INDENT
"DATA",811.8,153,100,1178,0)
801.41;+612000463,;100~NATIONAL
"DATA",811.8,153,100,1179,0)
801.41;+612000463,;101~Office of Quality & Performance
"DATA",811.8,153,100,1180,0)
801.412;+612000464,+612000463,;.01~5
"DATA",811.8,153,100,1181,0)
801.412;+612000464,+612000463,;2~VA-GP HTN ED EXERCISE (2)
"DATA",811.8,153,100,1182,0)
801.412;+612000465,+612000463,;.01~10
"DATA",811.8,153,100,1183,0)
801.412;+612000465,+612000463,;2~ED HTN COMPLIANCE
"DATA",811.8,153,100,1184,0)
801.412;+612000466,+612000463,;.01~8
"DATA",811.8,153,100,1185,0)
801.412;+612000466,+612000463,;2~VA-HF HTN LIFESTYLE MODS SPECIFIC RECOMMENDED
"DATA",811.8,153,100,1186,0)
801.412;+612000467,+612000463,;.01~15
"DATA",811.8,153,100,1187,0)
801.412;+612000467,+612000463,;2~VA-HF HTN NO EDUCATION WARRANTED
"DATA",811.8,153,100,1188,0)
801.412;+612000468,+612000463,;.01~6
"DATA",811.8,153,100,1189,0)
801.412;+612000468,+612000463,;2~VA-GP HTN ED NUTRITION (2)
"DATA",811.8,153,100,1190,0)
801.44;+612000469,+612000463,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1191,0)
801.44;+612000469,+612000463,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1192,0)
801.44;+612000469,+612000463,;2~WP-start~1
"DATA",811.8,153,100,1193,0)
Exchange Stub
"DATA",811.8,153,100,1194,0)
]]>
"DATA",811.8,153,100,1195,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1196,0)
<IEN_ROOT>
"DATA",811.8,153,100,1197,0)
<![CDATA[
"DATA",811.8,153,100,1198,0)
612000464^1
"DATA",811.8,153,100,1199,0)
612000465^3
"DATA",811.8,153,100,1200,0)
612000466^4
"DATA",811.8,153,100,1201,0)
612000467^5
"DATA",811.8,153,100,1202,0)
612000468^6
"DATA",811.8,153,100,1203,0)
612000469^1
"DATA",811.8,153,100,1204,0)
]]>
"DATA",811.8,153,100,1205,0)
</IEN_ROOT>
"DATA",811.8,153,100,1206,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1207,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1208,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1209,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1210,0)
<POINT_01>VA-TEXT ELEVATED BP &gt; 140/90</POINT_01>
"DATA",811.8,153,100,1211,0)
<INTERNAL_ENTRY_NUMBER>598000157</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1212,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1213,0)
<![CDATA[
"DATA",811.8,153,100,1214,0)
801.41;+598000157,;.01~VA-TEXT ELEVATED BP > 140/90
"DATA",811.8,153,100,1215,0)
801.41;+598000157,;4~dialog element
"DATA",811.8,153,100,1216,0)
801.41;+598000157,;23~YES
"DATA",811.8,153,100,1217,0)
801.41;+598000157,;25~WP-start~3
"DATA",811.8,153,100,1218,0)
The most recent recorded BP was elevated.  Satisfying this reminder
"DATA",811.8,153,100,1219,0)
requires addressing medication issues and/or education issues.
"DATA",811.8,153,100,1220,0)
        (* Indicates a required field)
"DATA",811.8,153,100,1221,0)
801.41;+598000157,;51~SUPPRESS
"DATA",811.8,153,100,1222,0)
801.41;+598000157,;100~NATIONAL
"DATA",811.8,153,100,1223,0)
801.41;+598000157,;101~Office of Quality & Performance
"DATA",811.8,153,100,1224,0)
801.44;+598000158,+598000157,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1225,0)
801.44;+598000158,+598000157,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1226,0)
801.44;+598000158,+598000157,;2~WP-start~1
"DATA",811.8,153,100,1227,0)
Exchange Stub
"DATA",811.8,153,100,1228,0)
]]>
"DATA",811.8,153,100,1229,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1230,0)
<IEN_ROOT>
"DATA",811.8,153,100,1231,0)
<![CDATA[
"DATA",811.8,153,100,1232,0)
598000158^1
"DATA",811.8,153,100,1233,0)
]]>
"DATA",811.8,153,100,1234,0)
</IEN_ROOT>
"DATA",811.8,153,100,1235,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1236,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1237,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1238,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1239,0)
<POINT_01>VA-HF HTN INCORRECT DIAGNOSIS</POINT_01>
"DATA",811.8,153,100,1240,0)
<INTERNAL_ENTRY_NUMBER>612000458</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1241,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1242,0)
<![CDATA[
"DATA",811.8,153,100,1243,0)
801.41;+612000458,;.01~VA-HF HTN INCORRECT DIAGNOSIS
"DATA",811.8,153,100,1244,0)
801.41;+612000458,;4~dialog element
"DATA",811.8,153,100,1245,0)
801.41;+612000458,;13~OTHER
"DATA",811.8,153,100,1246,0)
801.41;+612000458,;15~HF.INCORRECT HTN DIAGNOSIS
"DATA",811.8,153,100,1247,0)
801.41;+612000458,;25~WP-start~1
"DATA",811.8,153,100,1248,0)
Incorrect diagnosis of hypertension
"DATA",811.8,153,100,1249,0)
801.41;+612000458,;35~WP-start~2
"DATA",811.8,153,100,1250,0)
The patient does not have a diagnosis of hypertension.  The previous entry
"DATA",811.8,153,100,1251,0)
of a diagnosis of HTN was incorrect.
"DATA",811.8,153,100,1252,0)
801.41;+612000458,;100~NATIONAL
"DATA",811.8,153,100,1253,0)
801.41;+612000458,;101~Office of Quality & Performance
"DATA",811.8,153,100,1254,0)
801.44;+612000459,+612000458,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1255,0)
801.44;+612000459,+612000458,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1256,0)
801.44;+612000459,+612000458,;2~WP-start~1
"DATA",811.8,153,100,1257,0)
Exchange Stub
"DATA",811.8,153,100,1258,0)
]]>
"DATA",811.8,153,100,1259,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1260,0)
<IEN_ROOT>
"DATA",811.8,153,100,1261,0)
<![CDATA[
"DATA",811.8,153,100,1262,0)
612000459^1
"DATA",811.8,153,100,1263,0)
]]>
"DATA",811.8,153,100,1264,0)
</IEN_ROOT>
"DATA",811.8,153,100,1265,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1266,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1267,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1268,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1269,0)
<POINT_01>VAA-TEXT BLANK LINE</POINT_01>
"DATA",811.8,153,100,1270,0)
<INTERNAL_ENTRY_NUMBER>568</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1271,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1272,0)
<![CDATA[
"DATA",811.8,153,100,1273,0)
801.41;+568,;.01~VAA-TEXT BLANK LINE
"DATA",811.8,153,100,1274,0)
801.41;+568,;4~dialog element
"DATA",811.8,153,100,1275,0)
801.41;+568,;23~YES
"DATA",811.8,153,100,1276,0)
801.41;+568,;25~WP-start~1
"DATA",811.8,153,100,1277,0)
________________________________________________
"DATA",811.8,153,100,1278,0)
801.41;+568,;51~SUPPRESS
"DATA",811.8,153,100,1279,0)
801.41;+568,;100~NATIONAL
"DATA",811.8,153,100,1280,0)
801.41;+568,;101~Office of Quality & Performance
"DATA",811.8,153,100,1281,0)
801.44;+569,+568,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1282,0)
801.44;+569,+568,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1283,0)
801.44;+569,+568,;2~WP-start~1
"DATA",811.8,153,100,1284,0)
Exchange Stub
"DATA",811.8,153,100,1285,0)
]]>
"DATA",811.8,153,100,1286,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1287,0)
<IEN_ROOT>
"DATA",811.8,153,100,1288,0)
<![CDATA[
"DATA",811.8,153,100,1289,0)
569^1
"DATA",811.8,153,100,1290,0)
]]>
"DATA",811.8,153,100,1291,0)
</IEN_ROOT>
"DATA",811.8,153,100,1292,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1293,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1294,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1295,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1296,0)
<POINT_01>VA-TEXT HTN ELEVATED BP&gt;140/90</POINT_01>
"DATA",811.8,153,100,1297,0)
<INTERNAL_ENTRY_NUMBER>598000156</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1298,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1299,0)
<![CDATA[
"DATA",811.8,153,100,1300,0)
801.41;+598000156,;.01~VA-TEXT HTN ELEVATED BP>140/90
"DATA",811.8,153,100,1301,0)
801.41;+598000156,;4~dialog element
"DATA",811.8,153,100,1302,0)
801.41;+598000156,;23~YES
"DATA",811.8,153,100,1303,0)
801.41;+598000156,;25~WP-start~5
"DATA",811.8,153,100,1304,0)
The patient's last recorded BP is:
"DATA",811.8,153,100,1305,0)
 
"DATA",811.8,153,100,1306,0)
|BLOOD PRESSURE|
"DATA",811.8,153,100,1307,0)
 
"DATA",811.8,153,100,1308,0)
{FLD:BLANK TEXT FIELD FOR DIALOGS}
"DATA",811.8,153,100,1309,0)
801.41;+598000156,;51~SUPPRESS
"DATA",811.8,153,100,1310,0)
801.41;+598000156,;100~NATIONAL
"DATA",811.8,153,100,1311,0)
801.41;+598000156,;101~Office of Quality & Performance
"DATA",811.8,153,100,1312,0)
801.44;+598000157,+598000156,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1313,0)
801.44;+598000157,+598000156,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1314,0)
801.44;+598000157,+598000156,;2~WP-start~1
"DATA",811.8,153,100,1315,0)
Exchange Stub
"DATA",811.8,153,100,1316,0)
]]>
"DATA",811.8,153,100,1317,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1318,0)
<IEN_ROOT>
"DATA",811.8,153,100,1319,0)
<![CDATA[
"DATA",811.8,153,100,1320,0)
598000157^1
"DATA",811.8,153,100,1321,0)
]]>
"DATA",811.8,153,100,1322,0)
</IEN_ROOT>
"DATA",811.8,153,100,1323,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1324,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1325,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1326,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1327,0)
<POINT_01>VA-HF HTN NO MED CHANGE - OTHER</POINT_01>
"DATA",811.8,153,100,1328,0)
<INTERNAL_ENTRY_NUMBER>612000466</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1329,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1330,0)
<![CDATA[
"DATA",811.8,153,100,1331,0)
801.41;+612000466,;.01~VA-HF HTN NO MED CHANGE - OTHER
"DATA",811.8,153,100,1332,0)
801.41;+612000466,;4~dialog element
"DATA",811.8,153,100,1333,0)
801.41;+612000466,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1334,0)
801.41;+612000466,;15~HF.HTN NO MED CHANGE - OTHER
"DATA",811.8,153,100,1335,0)
801.41;+612000466,;25~WP-start~1
"DATA",811.8,153,100,1336,0)
Other
"DATA",811.8,153,100,1337,0)
801.41;+612000466,;35~WP-start~1
"DATA",811.8,153,100,1338,0)
Other
"DATA",811.8,153,100,1339,0)
801.41;+612000466,;100~NATIONAL
"DATA",811.8,153,100,1340,0)
801.41;+612000466,;101~Office of Quality & Performance
"DATA",811.8,153,100,1341,0)
801.412;+612000467,+612000466,;.01~5
"DATA",811.8,153,100,1342,0)
801.412;+612000467,+612000466,;2~PXRM COMMENT
"DATA",811.8,153,100,1343,0)
801.412;+612000467,+612000466,;6~Reason:
"DATA",811.8,153,100,1344,0)
801.412;+612000467,+612000466,;9~YES
"DATA",811.8,153,100,1345,0)
801.44;+612000468,+612000466,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1346,0)
801.44;+612000468,+612000466,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1347,0)
801.44;+612000468,+612000466,;2~WP-start~1
"DATA",811.8,153,100,1348,0)
Exchange Stub
"DATA",811.8,153,100,1349,0)
]]>
"DATA",811.8,153,100,1350,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1351,0)
<IEN_ROOT>
"DATA",811.8,153,100,1352,0)
<![CDATA[
"DATA",811.8,153,100,1353,0)
612000467^1
"DATA",811.8,153,100,1354,0)
612000468^1
"DATA",811.8,153,100,1355,0)
]]>
"DATA",811.8,153,100,1356,0)
</IEN_ROOT>
"DATA",811.8,153,100,1357,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1358,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1359,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1360,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1361,0)
<POINT_01>VA-HF HTN NO MED CHANGE - LIMITED LIFE EXPECTANCY</POINT_01>
"DATA",811.8,153,100,1362,0)
<INTERNAL_ENTRY_NUMBER>612000467</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1363,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1364,0)
<![CDATA[
"DATA",811.8,153,100,1365,0)
801.41;+612000467,;.01~VA-HF HTN NO MED CHANGE - LIMITED LIFE EXPECTANCY
"DATA",811.8,153,100,1366,0)
801.41;+612000467,;4~dialog element
"DATA",811.8,153,100,1367,0)
801.41;+612000467,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1368,0)
801.41;+612000467,;15~HF.HTN NO MED CHANGE - LIMITED LIFE EXP
"DATA",811.8,153,100,1369,0)
801.41;+612000467,;25~WP-start~1
"DATA",811.8,153,100,1370,0)
Patient has limited life expectancy
"DATA",811.8,153,100,1371,0)
801.41;+612000467,;35~WP-start~1
"DATA",811.8,153,100,1372,0)
Patient has limited life expectancy.
"DATA",811.8,153,100,1373,0)
801.41;+612000467,;100~NATIONAL
"DATA",811.8,153,100,1374,0)
801.41;+612000467,;101~Office of Quality & Performance
"DATA",811.8,153,100,1375,0)
801.44;+612000468,+612000467,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1376,0)
801.44;+612000468,+612000467,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1377,0)
801.44;+612000468,+612000467,;2~WP-start~1
"DATA",811.8,153,100,1378,0)
Exchange Stub
"DATA",811.8,153,100,1379,0)
]]>
"DATA",811.8,153,100,1380,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1381,0)
<IEN_ROOT>
"DATA",811.8,153,100,1382,0)
<![CDATA[
"DATA",811.8,153,100,1383,0)
612000468^1
"DATA",811.8,153,100,1384,0)
]]>
"DATA",811.8,153,100,1385,0)
</IEN_ROOT>
"DATA",811.8,153,100,1386,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1387,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1388,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1389,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1390,0)
<POINT_01>VA-HF HTN NO MED CHANGE - SIDE EFFECTS FROM THERAPY</POINT_01>
"DATA",811.8,153,100,1391,0)
<INTERNAL_ENTRY_NUMBER>612000468</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1392,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1393,0)
<![CDATA[
"DATA",811.8,153,100,1394,0)
801.41;+612000468,;.01~VA-HF HTN NO MED CHANGE - SIDE EFFECTS FROM THERAPY
"DATA",811.8,153,100,1395,0)
801.41;+612000468,;4~dialog element
"DATA",811.8,153,100,1396,0)
801.41;+612000468,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1397,0)
801.41;+612000468,;15~HF.HTN NO MED CHANGE - SIDE EFFECTS FROM RX
"DATA",811.8,153,100,1398,0)
801.41;+612000468,;25~WP-start~2
"DATA",811.8,153,100,1399,0)
Patient has had unacceptable side effects from prior attempts at more 
"DATA",811.8,153,100,1400,0)
intensive therapy
"DATA",811.8,153,100,1401,0)
801.41;+612000468,;35~WP-start~2
"DATA",811.8,153,100,1402,0)
Patient has had unacceptable side effects from prior attempts at more 
"DATA",811.8,153,100,1403,0)
intensive therapy.
"DATA",811.8,153,100,1404,0)
801.41;+612000468,;100~NATIONAL
"DATA",811.8,153,100,1405,0)
801.41;+612000468,;101~Office of Quality & Performance
"DATA",811.8,153,100,1406,0)
801.44;+612000469,+612000468,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1407,0)
801.44;+612000469,+612000468,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1408,0)
801.44;+612000469,+612000468,;2~WP-start~1
"DATA",811.8,153,100,1409,0)
Exchange Stub
"DATA",811.8,153,100,1410,0)
]]>
"DATA",811.8,153,100,1411,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1412,0)
<IEN_ROOT>
"DATA",811.8,153,100,1413,0)
<![CDATA[
"DATA",811.8,153,100,1414,0)
612000469^1
"DATA",811.8,153,100,1415,0)
]]>
"DATA",811.8,153,100,1416,0)
</IEN_ROOT>
"DATA",811.8,153,100,1417,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1418,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1419,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1420,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1421,0)
<POINT_01>VA-HF HTN NO MED CHANGE - NONCOMPLIANCE</POINT_01>
"DATA",811.8,153,100,1422,0)
<INTERNAL_ENTRY_NUMBER>612000469</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1423,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1424,0)
<![CDATA[
"DATA",811.8,153,100,1425,0)
801.41;+612000469,;.01~VA-HF HTN NO MED CHANGE - NONCOMPLIANCE
"DATA",811.8,153,100,1426,0)
801.41;+612000469,;4~dialog element
"DATA",811.8,153,100,1427,0)
801.41;+612000469,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1428,0)
801.41;+612000469,;15~HF.HTN NO MED CHANGE - NONCOMPLIANCE
"DATA",811.8,153,100,1429,0)
801.41;+612000469,;25~WP-start~1
"DATA",811.8,153,100,1430,0)
Patient has been non-adherent to current Rx regimen
"DATA",811.8,153,100,1431,0)
801.41;+612000469,;35~WP-start~1
"DATA",811.8,153,100,1432,0)
The patient has been non-compliant with therapy for hypertension.
"DATA",811.8,153,100,1433,0)
801.41;+612000469,;100~NATIONAL
"DATA",811.8,153,100,1434,0)
801.41;+612000469,;101~Office of Quality & Performance
"DATA",811.8,153,100,1435,0)
801.44;+612000470,+612000469,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1436,0)
801.44;+612000470,+612000469,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1437,0)
801.44;+612000470,+612000469,;2~WP-start~1
"DATA",811.8,153,100,1438,0)
Exchange Stub
"DATA",811.8,153,100,1439,0)
]]>
"DATA",811.8,153,100,1440,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1441,0)
<IEN_ROOT>
"DATA",811.8,153,100,1442,0)
<![CDATA[
"DATA",811.8,153,100,1443,0)
612000470^1
"DATA",811.8,153,100,1444,0)
]]>
"DATA",811.8,153,100,1445,0)
</IEN_ROOT>
"DATA",811.8,153,100,1446,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1447,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1448,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1449,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1450,0)
<POINT_01>VA-HF HTN NO MED CHANGE - COMORBID ILLNESS</POINT_01>
"DATA",811.8,153,100,1451,0)
<INTERNAL_ENTRY_NUMBER>612000470</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1452,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1453,0)
<![CDATA[
"DATA",811.8,153,100,1454,0)
801.41;+612000470,;.01~VA-HF HTN NO MED CHANGE - COMORBID ILLNESS
"DATA",811.8,153,100,1455,0)
801.41;+612000470,;4~dialog element
"DATA",811.8,153,100,1456,0)
801.41;+612000470,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1457,0)
801.41;+612000470,;15~HF.HTN NO MED CHANGE - COMORBID ILLNESS
"DATA",811.8,153,100,1458,0)
801.41;+612000470,;25~WP-start~2
"DATA",811.8,153,100,1459,0)
Patient's current therapy is appropriate based on concomitant
"DATA",811.8,153,100,1460,0)
cardiovascular risk factors and/or other comorbidities
"DATA",811.8,153,100,1461,0)
801.41;+612000470,;35~WP-start~3
"DATA",811.8,153,100,1462,0)
The patient's current medication regimen is appropriate based on the 
"DATA",811.8,153,100,1463,0)
patient's concomitant cardiovascular risk factors and/or other 
"DATA",811.8,153,100,1464,0)
comorbidities.
"DATA",811.8,153,100,1465,0)
801.41;+612000470,;100~NATIONAL
"DATA",811.8,153,100,1466,0)
801.41;+612000470,;101~Office of Quality & Performance
"DATA",811.8,153,100,1467,0)
801.412;+612000471,+612000470,;.01~5
"DATA",811.8,153,100,1468,0)
801.412;+612000471,+612000470,;2~PXRM COMMENT
"DATA",811.8,153,100,1469,0)
801.412;+612000471,+612000470,;9~YES
"DATA",811.8,153,100,1470,0)
801.44;+612000472,+612000470,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1471,0)
801.44;+612000472,+612000470,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1472,0)
801.44;+612000472,+612000470,;2~WP-start~1
"DATA",811.8,153,100,1473,0)
Exchange Stub
"DATA",811.8,153,100,1474,0)
]]>
"DATA",811.8,153,100,1475,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1476,0)
<IEN_ROOT>
"DATA",811.8,153,100,1477,0)
<![CDATA[
"DATA",811.8,153,100,1478,0)
612000471^1
"DATA",811.8,153,100,1479,0)
612000472^1
"DATA",811.8,153,100,1480,0)
]]>
"DATA",811.8,153,100,1481,0)
</IEN_ROOT>
"DATA",811.8,153,100,1482,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1483,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1484,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1485,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1486,0)
<POINT_01>VA-HF HTN NO MED CHANGE - BP CONTROLLED</POINT_01>
"DATA",811.8,153,100,1487,0)
<INTERNAL_ENTRY_NUMBER>612000471</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1488,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1489,0)
<![CDATA[
"DATA",811.8,153,100,1490,0)
801.41;+612000471,;.01~VA-HF HTN NO MED CHANGE - BP CONTROLLED
"DATA",811.8,153,100,1491,0)
801.41;+612000471,;4~dialog element
"DATA",811.8,153,100,1492,0)
801.41;+612000471,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1493,0)
801.41;+612000471,;15~HF.HTN NO MED CHANGE - BP CONTROLLED
"DATA",811.8,153,100,1494,0)
801.41;+612000471,;25~WP-start~1
"DATA",811.8,153,100,1495,0)
Patient usually has well-controlled BP on current therapy
"DATA",811.8,153,100,1496,0)
801.41;+612000471,;35~WP-start~2
"DATA",811.8,153,100,1497,0)
The patient's blood pressure is usually adequately controlled.  No
"DATA",811.8,153,100,1498,0)
medication changes are indicated at this time.
"DATA",811.8,153,100,1499,0)
801.41;+612000471,;100~NATIONAL
"DATA",811.8,153,100,1500,0)
801.41;+612000471,;101~Office of Quality & Performance
"DATA",811.8,153,100,1501,0)
801.412;+612000472,+612000471,;.01~5
"DATA",811.8,153,100,1502,0)
801.412;+612000472,+612000471,;2~PXRM COMMENT
"DATA",811.8,153,100,1503,0)
801.44;+612000473,+612000471,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1504,0)
801.44;+612000473,+612000471,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1505,0)
801.44;+612000473,+612000471,;2~WP-start~1
"DATA",811.8,153,100,1506,0)
Exchange Stub
"DATA",811.8,153,100,1507,0)
]]>
"DATA",811.8,153,100,1508,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1509,0)
<IEN_ROOT>
"DATA",811.8,153,100,1510,0)
<![CDATA[
"DATA",811.8,153,100,1511,0)
612000472^1
"DATA",811.8,153,100,1512,0)
612000473^1
"DATA",811.8,153,100,1513,0)
]]>
"DATA",811.8,153,100,1514,0)
</IEN_ROOT>
"DATA",811.8,153,100,1515,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1516,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1517,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1518,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1519,0)
<POINT_01>VA-GP HTN NO MED CHANGE INTERVENTIONS</POINT_01>
"DATA",811.8,153,100,1520,0)
<INTERNAL_ENTRY_NUMBER>612000472</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1521,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1522,0)
<![CDATA[
"DATA",811.8,153,100,1523,0)
801.41;+612000472,;.01~VA-GP HTN NO MED CHANGE INTERVENTIONS
"DATA",811.8,153,100,1524,0)
801.41;+612000472,;4~dialog group
"DATA",811.8,153,100,1525,0)
801.41;+612000472,;6~YES
"DATA",811.8,153,100,1526,0)
801.41;+612000472,;7~1
"DATA",811.8,153,100,1527,0)
801.41;+612000472,;8~NO
"DATA",811.8,153,100,1528,0)
801.41;+612000472,;9~ONE OR MORE SELECTIONS
"DATA",811.8,153,100,1529,0)
801.41;+612000472,;23~YES
"DATA",811.8,153,100,1530,0)
801.41;+612000472,;25~WP-start~1
"DATA",811.8,153,100,1531,0)
Medication change not warranted due to:  (click for additional options)
"DATA",811.8,153,100,1532,0)
801.41;+612000472,;50~HIDE
"DATA",811.8,153,100,1533,0)
801.41;+612000472,;52~INDENT
"DATA",811.8,153,100,1534,0)
801.41;+612000472,;100~NATIONAL
"DATA",811.8,153,100,1535,0)
801.41;+612000472,;101~Office of Quality & Performance
"DATA",811.8,153,100,1536,0)
801.412;+612000473,+612000472,;.01~5
"DATA",811.8,153,100,1537,0)
801.412;+612000473,+612000472,;2~VA-HF HTN NO MED CHANGE - BP CONTROLLED
"DATA",811.8,153,100,1538,0)
801.412;+612000474,+612000472,;.01~10
"DATA",811.8,153,100,1539,0)
801.412;+612000474,+612000472,;2~VA-HF HTN NO MED CHANGE - COMORBID ILLNESS
"DATA",811.8,153,100,1540,0)
801.412;+612000475,+612000472,;.01~15
"DATA",811.8,153,100,1541,0)
801.412;+612000475,+612000472,;2~VA-HF HTN NO MED CHANGE - NONCOMPLIANCE
"DATA",811.8,153,100,1542,0)
801.412;+612000476,+612000472,;.01~20
"DATA",811.8,153,100,1543,0)
801.412;+612000476,+612000472,;2~VA-HF HTN NO MED CHANGE - SIDE EFFECTS FROM THERAPY
"DATA",811.8,153,100,1544,0)
801.412;+612000477,+612000472,;.01~25
"DATA",811.8,153,100,1545,0)
801.412;+612000477,+612000472,;2~VA-HF HTN NO MED CHANGE - LIMITED LIFE EXPECTANCY
"DATA",811.8,153,100,1546,0)
801.412;+612000478,+612000472,;.01~30
"DATA",811.8,153,100,1547,0)
801.412;+612000478,+612000472,;2~VA-HF HTN NO MED CHANGE - OTHER
"DATA",811.8,153,100,1548,0)
801.44;+612000479,+612000472,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1549,0)
801.44;+612000479,+612000472,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1550,0)
801.44;+612000479,+612000472,;2~WP-start~1
"DATA",811.8,153,100,1551,0)
Exchange Stub
"DATA",811.8,153,100,1552,0)
]]>
"DATA",811.8,153,100,1553,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1554,0)
<IEN_ROOT>
"DATA",811.8,153,100,1555,0)
<![CDATA[
"DATA",811.8,153,100,1556,0)
612000473^1
"DATA",811.8,153,100,1557,0)
612000474^2
"DATA",811.8,153,100,1558,0)
612000475^3
"DATA",811.8,153,100,1559,0)
612000476^4
"DATA",811.8,153,100,1560,0)
612000477^5
"DATA",811.8,153,100,1561,0)
612000478^6
"DATA",811.8,153,100,1562,0)
612000479^1
"DATA",811.8,153,100,1563,0)
]]>
"DATA",811.8,153,100,1564,0)
</IEN_ROOT>
"DATA",811.8,153,100,1565,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1566,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1567,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1568,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1569,0)
<POINT_01>VA-HF HTN EVALUATION OF RESISTANT SECONDARY</POINT_01>
"DATA",811.8,153,100,1570,0)
<INTERNAL_ENTRY_NUMBER>612000465</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1571,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1572,0)
<![CDATA[
"DATA",811.8,153,100,1573,0)
801.41;+612000465,;.01~VA-HF HTN EVALUATION OF RESISTANT SECONDARY
"DATA",811.8,153,100,1574,0)
801.41;+612000465,;4~dialog element
"DATA",811.8,153,100,1575,0)
801.41;+612000465,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1576,0)
801.41;+612000465,;15~HF.HTN EVALUATION OF RESISTANT/SECONDARY
"DATA",811.8,153,100,1577,0)
801.41;+612000465,;25~WP-start~1
"DATA",811.8,153,100,1578,0)
Pt. being evaluated/referred for resistant or secondary HTN
"DATA",811.8,153,100,1579,0)
801.41;+612000465,;35~WP-start~2
"DATA",811.8,153,100,1580,0)
The patient is being evaluated for resistant or secondary causes for 
"DATA",811.8,153,100,1581,0)
hypertension.
"DATA",811.8,153,100,1582,0)
801.41;+612000465,;100~NATIONAL
"DATA",811.8,153,100,1583,0)
801.41;+612000465,;101~Office of Quality & Performance
"DATA",811.8,153,100,1584,0)
801.412;+612000466,+612000465,;.01~5
"DATA",811.8,153,100,1585,0)
801.412;+612000466,+612000465,;2~PXRM COMMENT
"DATA",811.8,153,100,1586,0)
801.44;+612000467,+612000465,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1587,0)
801.44;+612000467,+612000465,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1588,0)
801.44;+612000467,+612000465,;2~WP-start~1
"DATA",811.8,153,100,1589,0)
Exchange Stub
"DATA",811.8,153,100,1590,0)
]]>
"DATA",811.8,153,100,1591,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1592,0)
<IEN_ROOT>
"DATA",811.8,153,100,1593,0)
<![CDATA[
"DATA",811.8,153,100,1594,0)
612000466^1
"DATA",811.8,153,100,1595,0)
612000467^1
"DATA",811.8,153,100,1596,0)
]]>
"DATA",811.8,153,100,1597,0)
</IEN_ROOT>
"DATA",811.8,153,100,1598,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1599,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1600,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1601,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1602,0)
<POINT_01>VA-HF HTN REFUSAL OF MED INTERVENTION</POINT_01>
"DATA",811.8,153,100,1603,0)
<INTERNAL_ENTRY_NUMBER>612000464</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1604,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1605,0)
<![CDATA[
"DATA",811.8,153,100,1606,0)
801.41;+612000464,;.01~VA-HF HTN REFUSAL OF MED INTERVENTION
"DATA",811.8,153,100,1607,0)
801.41;+612000464,;4~dialog element
"DATA",811.8,153,100,1608,0)
801.41;+612000464,;13~PATIENT REFUSED
"DATA",811.8,153,100,1609,0)
801.41;+612000464,;15~HF.HTN REFUSAL OF MED INTERVENTION
"DATA",811.8,153,100,1610,0)
801.41;+612000464,;25~WP-start~1
"DATA",811.8,153,100,1611,0)
Refuses Medication Adjustment
"DATA",811.8,153,100,1612,0)
801.41;+612000464,;35~WP-start~2
"DATA",811.8,153,100,1613,0)
The patient declines the recommended changes in medications to improve BP
"DATA",811.8,153,100,1614,0)
control.
"DATA",811.8,153,100,1615,0)
801.41;+612000464,;100~NATIONAL
"DATA",811.8,153,100,1616,0)
801.41;+612000464,;101~Office of Quality & Performance
"DATA",811.8,153,100,1617,0)
801.412;+612000465,+612000464,;.01~56
"DATA",811.8,153,100,1618,0)
801.412;+612000465,+612000464,;2~PXRM COMMENT
"DATA",811.8,153,100,1619,0)
801.44;+612000466,+612000464,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1620,0)
801.44;+612000466,+612000464,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1621,0)
801.44;+612000466,+612000464,;2~WP-start~1
"DATA",811.8,153,100,1622,0)
Exchange Stub
"DATA",811.8,153,100,1623,0)
]]>
"DATA",811.8,153,100,1624,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1625,0)
<IEN_ROOT>
"DATA",811.8,153,100,1626,0)
<![CDATA[
"DATA",811.8,153,100,1627,0)
612000465^1
"DATA",811.8,153,100,1628,0)
612000466^1
"DATA",811.8,153,100,1629,0)
]]>
"DATA",811.8,153,100,1630,0)
</IEN_ROOT>
"DATA",811.8,153,100,1631,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1632,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1633,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1634,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1635,0)
<POINT_01>VA-HF HTN MEDICATIONS ADJUSTED</POINT_01>
"DATA",811.8,153,100,1636,0)
<INTERNAL_ENTRY_NUMBER>612000473</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1637,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1638,0)
<![CDATA[
"DATA",811.8,153,100,1639,0)
801.41;+612000473,;.01~VA-HF HTN MEDICATIONS ADJUSTED
"DATA",811.8,153,100,1640,0)
801.41;+612000473,;4~dialog element
"DATA",811.8,153,100,1641,0)
801.41;+612000473,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1642,0)
801.41;+612000473,;15~HF.HTN MEDICATIONS ADJUSTED
"DATA",811.8,153,100,1643,0)
801.41;+612000473,;25~WP-start~1
"DATA",811.8,153,100,1644,0)
Medications Adjusted or Initiated
"DATA",811.8,153,100,1645,0)
801.41;+612000473,;35~WP-start~1
"DATA",811.8,153,100,1646,0)
The patient's medication regimen was adjusted to improve BP control.
"DATA",811.8,153,100,1647,0)
801.41;+612000473,;100~NATIONAL
"DATA",811.8,153,100,1648,0)
801.41;+612000473,;101~Office of Quality & Performance
"DATA",811.8,153,100,1649,0)
801.412;+612000474,+612000473,;.01~5
"DATA",811.8,153,100,1650,0)
801.412;+612000474,+612000473,;2~PXRM COMMENT
"DATA",811.8,153,100,1651,0)
801.44;+612000475,+612000473,;.01~07/11/2006@14:35:35
"DATA",811.8,153,100,1652,0)
801.44;+612000475,+612000473,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1653,0)
801.44;+612000475,+612000473,;2~WP-start~1
"DATA",811.8,153,100,1654,0)
Exchange Stub
"DATA",811.8,153,100,1655,0)
]]>
"DATA",811.8,153,100,1656,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1657,0)
<IEN_ROOT>
"DATA",811.8,153,100,1658,0)
<![CDATA[
"DATA",811.8,153,100,1659,0)
612000474^1
"DATA",811.8,153,100,1660,0)
612000475^1
"DATA",811.8,153,100,1661,0)
]]>
"DATA",811.8,153,100,1662,0)
</IEN_ROOT>
"DATA",811.8,153,100,1663,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1664,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1665,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1666,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1667,0)
<POINT_01>VA-GP HTN INTERVENTIONS</POINT_01>
"DATA",811.8,153,100,1668,0)
<INTERNAL_ENTRY_NUMBER>612000474</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1669,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1670,0)
<![CDATA[
"DATA",811.8,153,100,1671,0)
801.41;+612000474,;.01~VA-GP HTN INTERVENTIONS
"DATA",811.8,153,100,1672,0)
801.41;+612000474,;4~dialog group
"DATA",811.8,153,100,1673,0)
801.41;+612000474,;6~YES
"DATA",811.8,153,100,1674,0)
801.41;+612000474,;7~1
"DATA",811.8,153,100,1675,0)
801.41;+612000474,;8~NO
"DATA",811.8,153,100,1676,0)
801.41;+612000474,;9~NO SELECTION REQUIRED
"DATA",811.8,153,100,1677,0)
801.41;+612000474,;23~YES
"DATA",811.8,153,100,1678,0)
801.41;+612000474,;25~WP-start~1
"DATA",811.8,153,100,1679,0)
INTERVENTIONS
"DATA",811.8,153,100,1680,0)
801.41;+612000474,;50~SHOW
"DATA",811.8,153,100,1681,0)
801.41;+612000474,;51~SUPPRESS
"DATA",811.8,153,100,1682,0)
801.41;+612000474,;52~INDENT
"DATA",811.8,153,100,1683,0)
801.41;+612000474,;100~NATIONAL
"DATA",811.8,153,100,1684,0)
801.41;+612000474,;101~Office of Quality & Performance
"DATA",811.8,153,100,1685,0)
801.412;+612000475,+612000474,;.01~5
"DATA",811.8,153,100,1686,0)
801.412;+612000475,+612000474,;2~VA-HF HTN MEDICATIONS ADJUSTED
"DATA",811.8,153,100,1687,0)
801.412;+612000476,+612000474,;.01~20
"DATA",811.8,153,100,1688,0)
801.412;+612000476,+612000474,;2~VA-HF HTN REFUSAL OF MED INTERVENTION
"DATA",811.8,153,100,1689,0)
801.412;+612000477,+612000474,;.01~18
"DATA",811.8,153,100,1690,0)
801.412;+612000477,+612000474,;2~VA-HF HTN EVALUATION OF RESISTANT SECONDARY
"DATA",811.8,153,100,1691,0)
801.412;+612000478,+612000474,;.01~10
"DATA",811.8,153,100,1692,0)
801.412;+612000478,+612000474,;2~VA-GP HTN NO MED CHANGE INTERVENTIONS
"DATA",811.8,153,100,1693,0)
801.44;+612000479,+612000474,;.01~07/11/2006@14:35:36
"DATA",811.8,153,100,1694,0)
801.44;+612000479,+612000474,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1695,0)
801.44;+612000479,+612000474,;2~WP-start~1
"DATA",811.8,153,100,1696,0)
Exchange Stub
"DATA",811.8,153,100,1697,0)
]]>
"DATA",811.8,153,100,1698,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1699,0)
<IEN_ROOT>
"DATA",811.8,153,100,1700,0)
<![CDATA[
"DATA",811.8,153,100,1701,0)
612000475^1
"DATA",811.8,153,100,1702,0)
612000476^4
"DATA",811.8,153,100,1703,0)
612000477^7
"DATA",811.8,153,100,1704,0)
612000478^8
"DATA",811.8,153,100,1705,0)
612000479^1
"DATA",811.8,153,100,1706,0)
]]>
"DATA",811.8,153,100,1707,0)
</IEN_ROOT>
"DATA",811.8,153,100,1708,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1709,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1710,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1711,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1712,0)
<POINT_01>VA-VM HTN BLOOD PRESSURE</POINT_01>
"DATA",811.8,153,100,1713,0)
<INTERNAL_ENTRY_NUMBER>598000155</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1714,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1715,0)
<![CDATA[
"DATA",811.8,153,100,1716,0)
801.41;+598000155,;.01~VA-VM HTN BLOOD PRESSURE
"DATA",811.8,153,100,1717,0)
801.41;+598000155,;4~dialog element
"DATA",811.8,153,100,1718,0)
801.41;+598000155,;13~DONE AT ENCOUNTER
"DATA",811.8,153,100,1719,0)
801.41;+598000155,;15~VM.BLOOD PRESSURE
"DATA",811.8,153,100,1720,0)
801.41;+598000155,;25~WP-start~1
"DATA",811.8,153,100,1721,0)
Repeat BP and record below if appropriate
"DATA",811.8,153,100,1722,0)
801.41;+598000155,;35~WP-start~1
"DATA",811.8,153,100,1723,0)
Repeat BP:
"DATA",811.8,153,100,1724,0)
801.41;+598000155,;51~SUPPRESS
"DATA",811.8,153,100,1725,0)
801.41;+598000155,;100~NATIONAL
"DATA",811.8,153,100,1726,0)
801.41;+598000155,;101~Office of Quality & Performance
"DATA",811.8,153,100,1727,0)
801.44;+598000156,+598000155,;.01~07/11/2006@14:35:36
"DATA",811.8,153,100,1728,0)
801.44;+598000156,+598000155,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1729,0)
801.44;+598000156,+598000155,;2~WP-start~1
"DATA",811.8,153,100,1730,0)
Exchange Stub
"DATA",811.8,153,100,1731,0)
]]>
"DATA",811.8,153,100,1732,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1733,0)
<IEN_ROOT>
"DATA",811.8,153,100,1734,0)
<![CDATA[
"DATA",811.8,153,100,1735,0)
598000156^1
"DATA",811.8,153,100,1736,0)
]]>
"DATA",811.8,153,100,1737,0)
</IEN_ROOT>
"DATA",811.8,153,100,1738,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1739,0)
<FILEMAN_FILE>
"DATA",811.8,153,100,1740,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,153,100,1741,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,153,100,1742,0)
<POINT_01>VA-HTN ELEVATED BP&gt;140/90</POINT_01>
"DATA",811.8,153,100,1743,0)
<INTERNAL_ENTRY_NUMBER>598000158</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,153,100,1744,0)
<FILEMAN_FDA>
"DATA",811.8,153,100,1745,0)
<![CDATA[
"DATA",811.8,153,100,1746,0)
801.41;+598000158,;.01~VA-HTN ELEVATED BP>140/90
"DATA",811.8,153,100,1747,0)
801.41;+598000158,;2~VA-HTN ASSESSMENT BP >=140/90
"DATA",811.8,153,100,1748,0)
801.41;+598000158,;4~reminder dialog
"DATA",811.8,153,100,1749,0)
801.41;+598000158,;100~NATIONAL
"DATA",811.8,153,100,1750,0)
801.41;+598000158,;101~Office of Quality & Performance
"DATA",811.8,153,100,1751,0)
801.412;+598000159,+598000158,;.01~10
"DATA",811.8,153,100,1752,0)
801.412;+598000159,+598000158,;2~VA-VM HTN BLOOD PRESSURE
"DATA",811.8,153,100,1753,0)
801.412;+598000160,+598000158,;.01~15
"DATA",811.8,153,100,1754,0)
801.412;+598000160,+598000158,;2~VA-GP HTN INTERVENTIONS
"DATA",811.8,153,100,1755,0)
801.412;+598000161,+598000158,;.01~5
"DATA",811.8,153,100,1756,0)
801.412;+598000161,+598000158,;2~VA-TEXT HTN ELEVATED BP>140/90
"DATA",811.8,153,100,1757,0)
801.412;+598000162,+598000158,;.01~12
"DATA",811.8,153,100,1758,0)
801.412;+598000162,+598000158,;2~VAA-TEXT BLANK LINE
"DATA",811.8,153,100,1759,0)
801.412;+598000163,+598000158,;.01~30
"DATA",811.8,153,100,1760,0)
801.412;+598000163,+598000158,;2~VA-HF HTN INCORRECT DIAGNOSIS
"DATA",811.8,153,100,1761,0)
801.412;+598000164,+598000158,;.01~4
"DATA",811.8,153,100,1762,0)
801.412;+598000164,+598000158,;2~VA-TEXT ELEVATED BP > 140/90
"DATA",811.8,153,100,1763,0)
801.412;+598000165,+598000158,;.01~20
"DATA",811.8,153,100,1764,0)
801.412;+598000165,+598000158,;2~VA-GP HTN EDUCATION NEW
"DATA",811.8,153,100,1765,0)
801.44;+598000166,+598000158,;.01~07/11/2006@14:35:36
"DATA",811.8,153,100,1766,0)
801.44;+598000166,+598000158,;1~REDINGTON,PATRICK
"DATA",811.8,153,100,1767,0)
801.44;+598000166,+598000158,;2~WP-start~1
"DATA",811.8,153,100,1768,0)
Exchange Stub
"DATA",811.8,153,100,1769,0)
]]>
"DATA",811.8,153,100,1770,0)
</FILEMAN_FDA>
"DATA",811.8,153,100,1771,0)
<IEN_ROOT>
"DATA",811.8,153,100,1772,0)
<![CDATA[
"DATA",811.8,153,100,1773,0)
598000159^1
"DATA",811.8,153,100,1774,0)
598000160^2
"DATA",811.8,153,100,1775,0)
598000161^4
"DATA",811.8,153,100,1776,0)
598000162^5
"DATA",811.8,153,100,1777,0)
598000163^6
"DATA",811.8,153,100,1778,0)
598000164^7
"DATA",811.8,153,100,1779,0)
598000165^8
"DATA",811.8,153,100,1780,0)
598000166^1
"DATA",811.8,153,100,1781,0)
]]>
"DATA",811.8,153,100,1782,0)
</IEN_ROOT>
"DATA",811.8,153,100,1783,0)
</FILEMAN_FILE>
"DATA",811.8,153,100,1784,0)
<INDEX>
"DATA",811.8,153,100,1785,0)
<NUMBER_OF_COMPONENTS>55</NUMBER_OF_COMPONENTS>
"DATA",811.8,153,100,1786,0)
<COMPONENT>
"DATA",811.8,153,100,1787,0)
<M_ROUTINE_START>59</M_ROUTINE_START>
"DATA",811.8,153,100,1788,0)
<ROUTINE_CODE_END>90</ROUTINE_CODE_END>
"DATA",811.8,153,100,1789,0)
<ROUTINE_CODE_START>63</ROUTINE_CODE_START>
"DATA",811.8,153,100,1790,0)
</COMPONENT>
"DATA",811.8,153,100,1791,0)
<COMPONENT>
"DATA",811.8,153,100,1792,0)
<FDA_END>106</FDA_END>
"DATA",811.8,153,100,1793,0)
<FDA_START>101</FDA_START>
"DATA",811.8,153,100,1794,0)
<FILE_START>94</FILE_START>
"DATA",811.8,153,100,1795,0)
<IEN_ROOT_END>111</IEN_ROOT_END>
"DATA",811.8,153,100,1796,0)
<IEN_ROOT_START>111</IEN_ROOT_START>
"DATA",811.8,153,100,1797,0)
</COMPONENT>
"DATA",811.8,153,100,1798,0)
<COMPONENT>
"DATA",811.8,153,100,1799,0)
<FDA_END>130</FDA_END>
"DATA",811.8,153,100,1800,0)
<FDA_START>122</FDA_START>
"DATA",811.8,153,100,1801,0)
<FILE_START>115</FILE_START>
"DATA",811.8,153,100,1802,0)
</COMPONENT>
"DATA",811.8,153,100,1803,0)
<COMPONENT>
"DATA",811.8,153,100,1804,0)
<FDA_END>173</FDA_END>
"DATA",811.8,153,100,1805,0)
<FDA_START>141</FDA_START>
"DATA",811.8,153,100,1806,0)
<FILE_START>134</FILE_START>
"DATA",811.8,153,100,1807,0)
</COMPONENT>
"DATA",811.8,153,100,1808,0)
<COMPONENT>
"DATA",811.8,153,100,1809,0)
<FDA_END>189</FDA_END>
"DATA",811.8,153,100,1810,0)
<FDA_START>184</FDA_START>
"DATA",811.8,153,100,1811,0)
<FILE_START>177</FILE_START>
"DATA",811.8,153,100,1812,0)
</COMPONENT>
"DATA",811.8,153,100,1813,0)
<COMPONENT>
"DATA",811.8,153,100,1814,0)
<FDA_END>200</FDA_END>
"DATA",811.8,153,100,1815,0)
<FDA_START>200</FDA_START>
"DATA",811.8,153,100,1816,0)
<FILE_START>193</FILE_START>
"DATA",811.8,153,100,1817,0)
</COMPONENT>
"DATA",811.8,153,100,1818,0)
<COMPONENT>
"DATA",811.8,153,100,1819,0)
<FDA_END>212</FDA_END>
"DATA",811.8,153,100,1820,0)
<FDA_START>211</FDA_START>
"DATA",811.8,153,100,1821,0)
<FILE_START>204</FILE_START>
"DATA",811.8,153,100,1822,0)
</COMPONENT>
"DATA",811.8,153,100,1823,0)
<COMPONENT>
"DATA",811.8,153,100,1824,0)
<FDA_END>224</FDA_END>
"DATA",811.8,153,100,1825,0)
<FDA_START>223</FDA_START>
"DATA",811.8,153,100,1826,0)
<FILE_START>216</FILE_START>
"DATA",811.8,153,100,1827,0)
</COMPONENT>
"DATA",811.8,153,100,1828,0)
<COMPONENT>
"DATA",811.8,153,100,1829,0)
<FDA_END>237</FDA_END>
"DATA",811.8,153,100,1830,0)
<FDA_START>235</FDA_START>
"DATA",811.8,153,100,1831,0)
<FILE_START>228</FILE_START>
"DATA",811.8,153,100,1832,0)
</COMPONENT>
"DATA",811.8,153,100,1833,0)
<COMPONENT>
"DATA",811.8,153,100,1834,0)
<FDA_END>250</FDA_END>
"DATA",811.8,153,100,1835,0)
<FDA_START>248</FDA_START>
"DATA",811.8,153,100,1836,0)
<FILE_START>241</FILE_START>
"DATA",811.8,153,100,1837,0)
</COMPONENT>
"DATA",811.8,153,100,1838,0)
<COMPONENT>
"DATA",811.8,153,100,1839,0)
<FDA_END>263</FDA_END>
"DATA",811.8,153,100,1840,0)
<FDA_START>261</FDA_START>
"DATA",811.8,153,100,1841,0)
<FILE_START>254</FILE_START>
"DATA",811.8,153,100,1842,0)
</COMPONENT>
"DATA",811.8,153,100,1843,0)
<COMPONENT>
"DATA",811.8,153,100,1844,0)
<FDA_END>276</FDA_END>
"DATA",811.8,153,100,1845,0)
<FDA_START>274</FDA_START>
"DATA",811.8,153,100,1846,0)
<FILE_START>267</FILE_START>
"DATA",811.8,153,100,1847,0)
</COMPONENT>
"DATA",811.8,153,100,1848,0)
<COMPONENT>
"DATA",811.8,153,100,1849,0)
<FDA_END>289</FDA_END>
"DATA",811.8,153,100,1850,0)
<FDA_START>287</FDA_START>
"DATA",811.8,153,100,1851,0)
<FILE_START>280</FILE_START>
"DATA",811.8,153,100,1852,0)
</COMPONENT>
"DATA",811.8,153,100,1853,0)
<COMPONENT>
"DATA",811.8,153,100,1854,0)
<FDA_END>302</FDA_END>
"DATA",811.8,153,100,1855,0)
<FDA_START>300</FDA_START>
"DATA",811.8,153,100,1856,0)
<FILE_START>293</FILE_START>
"DATA",811.8,153,100,1857,0)
</COMPONENT>
"DATA",811.8,153,100,1858,0)
<COMPONENT>
"DATA",811.8,153,100,1859,0)
<FDA_END>315</FDA_END>
"DATA",811.8,153,100,1860,0)
<FDA_START>313</FDA_START>
"DATA",811.8,153,100,1861,0)
<FILE_START>306</FILE_START>
"DATA",811.8,153,100,1862,0)
</COMPONENT>
"DATA",811.8,153,100,1863,0)
<COMPONENT>
"DATA",811.8,153,100,1864,0)
<FDA_END>328</FDA_END>
"DATA",811.8,153,100,1865,0)
<FDA_START>326</FDA_START>
"DATA",811.8,153,100,1866,0)
<FILE_START>319</FILE_START>
"DATA",811.8,153,100,1867,0)
</COMPONENT>
"DATA",811.8,153,100,1868,0)
<COMPONENT>
"DATA",811.8,153,100,1869,0)
<FDA_END>341</FDA_END>
"DATA",811.8,153,100,1870,0)
<FDA_START>339</FDA_START>
"DATA",811.8,153,100,1871,0)
<FILE_START>332</FILE_START>
"DATA",811.8,153,100,1872,0)
</COMPONENT>
"DATA",811.8,153,100,1873,0)
<COMPONENT>
"DATA",811.8,153,100,1874,0)
<FDA_END>354</FDA_END>
"DATA",811.8,153,100,1875,0)
<FDA_START>352</FDA_START>
"DATA",811.8,153,100,1876,0)
<FILE_START>345</FILE_START>
"DATA",811.8,153,100,1877,0)
</COMPONENT>
"DATA",811.8,153,100,1878,0)
<COMPONENT>
"DATA",811.8,153,100,1879,0)
<FDA_END>367</FDA_END>
"DATA",811.8,153,100,1880,0)
<FDA_START>365</FDA_START>
"DATA",811.8,153,100,1881,0)
<FILE_START>358</FILE_START>
"DATA",811.8,153,100,1882,0)
</COMPONENT>
"DATA",811.8,153,100,1883,0)
<COMPONENT>
"DATA",811.8,153,100,1884,0)
<FDA_END>380</FDA_END>
"DATA",811.8,153,100,1885,0)
<FDA_START>378</FDA_START>
"DATA",811.8,153,100,1886,0)
<FILE_START>371</FILE_START>
"DATA",811.8,153,100,1887,0)
</COMPONENT>
"DATA",811.8,153,100,1888,0)
<COMPONENT>
"DATA",811.8,153,100,1889,0)
<FDA_END>410</FDA_END>
"DATA",811.8,153,100,1890,0)
<FDA_START>391</FDA_START>
"DATA",811.8,153,100,1891,0)
<FILE_START>384</FILE_START>
"DATA",811.8,153,100,1892,0)
<IEN_ROOT_END>415</IEN_ROOT_END>
"DATA",811.8,153,100,1893,0)
<IEN_ROOT_START>415</IEN_ROOT_START>
"DATA",811.8,153,100,1894,0)
</COMPONENT>
"DATA",811.8,153,100,1895,0)
<COMPONENT>
"DATA",811.8,153,100,1896,0)
<FDA_END>476</FDA_END>
"DATA",811.8,153,100,1897,0)
<FDA_START>426</FDA_START>
"DATA",811.8,153,100,1898,0)
<FILE_START>419</FILE_START>
"DATA",811.8,153,100,1899,0)
<IEN_ROOT_END>521</IEN_ROOT_END>
"DATA",811.8,153,100,1900,0)
<IEN_ROOT_START>481</IEN_ROOT_START>
"DATA",811.8,153,100,1901,0)
</COMPONENT>
"DATA",811.8,153,100,1902,0)
<COMPONENT>
"DATA",811.8,153,100,1903,0)
<FDA_END>540</FDA_END>
"DATA",811.8,153,100,1904,0)
<FDA_START>532</FDA_START>
"DATA",811.8,153,100,1905,0)
<FILE_START>525</FILE_START>
"DATA",811.8,153,100,1906,0)
<IEN_ROOT_END>546</IEN_ROOT_END>
"DATA",811.8,153,100,1907,0)
<IEN_ROOT_START>545</IEN_ROOT_START>
"DATA",811.8,153,100,1908,0)
</COMPONENT>
"DATA",811.8,153,100,1909,0)
<COMPONENT>
"DATA",811.8,153,100,1910,0)
<FDA_END>575</FDA_END>
"DATA",811.8,153,100,1911,0)
<FDA_START>557</FDA_START>
"DATA",811.8,153,100,1912,0)
<FILE_START>550</FILE_START>
"DATA",811.8,153,100,1913,0)
<IEN_ROOT_END>589</IEN_ROOT_END>
"DATA",811.8,153,100,1914,0)
<IEN_ROOT_START>580</IEN_ROOT_START>
"DATA",811.8,153,100,1915,0)
</COMPONENT>
"DATA",811.8,153,100,1916,0)
<COMPONENT>
"DATA",811.8,153,100,1917,0)
<FDA_END>615</FDA_END>
"DATA",811.8,153,100,1918,0)
<FDA_START>600</FDA_START>
"DATA",811.8,153,100,1919,0)
<FILE_START>593</FILE_START>
"DATA",811.8,153,100,1920,0)
<IEN_ROOT_END>625</IEN_ROOT_END>
"DATA",811.8,153,100,1921,0)
<IEN_ROOT_START>620</IEN_ROOT_START>
"DATA",811.8,153,100,1922,0)
</COMPONENT>
"DATA",811.8,153,100,1923,0)
<COMPONENT>
"DATA",811.8,153,100,1924,0)
<FDA_END>649</FDA_END>
"DATA",811.8,153,100,1925,0)
<FDA_START>636</FDA_START>
"DATA",811.8,153,100,1926,0)
<FILE_START>629</FILE_START>
"DATA",811.8,153,100,1927,0)
</COMPONENT>
"DATA",811.8,153,100,1928,0)
<COMPONENT>
"DATA",811.8,153,100,1929,0)
<FDA_END>792</FDA_END>
"DATA",811.8,153,100,1930,0)
<FDA_START>660</FDA_START>
"DATA",811.8,153,100,1931,0)
<FILE_START>653</FILE_START>
"DATA",811.8,153,100,1932,0)
<IEN_ROOT_END>814</IEN_ROOT_END>
"DATA",811.8,153,100,1933,0)
<IEN_ROOT_START>797</IEN_ROOT_START>
"DATA",811.8,153,100,1934,0)
</COMPONENT>
"DATA",811.8,153,100,1935,0)
<COMPONENT>
"DATA",811.8,153,100,1936,0)
<FDA_END>840</FDA_END>
"DATA",811.8,153,100,1937,0)
<FDA_START>825</FDA_START>
"DATA",811.8,153,100,1938,0)
<FILE_START>818</FILE_START>
"DATA",811.8,153,100,1939,0)
<IEN_ROOT_END>845</IEN_ROOT_END>
"DATA",811.8,153,100,1940,0)
<IEN_ROOT_START>845</IEN_ROOT_START>
"DATA",811.8,153,100,1941,0)
</COMPONENT>
"DATA",811.8,153,100,1942,0)
<COMPONENT>
"DATA",811.8,153,100,1943,0)
<FDA_END>870</FDA_END>
"DATA",811.8,153,100,1944,0)
<FDA_START>856</FDA_START>
"DATA",811.8,153,100,1945,0)
<FILE_START>849</FILE_START>
"DATA",811.8,153,100,1946,0)
<IEN_ROOT_END>875</IEN_ROOT_END>
"DATA",811.8,153,100,1947,0)
<IEN_ROOT_START>875</IEN_ROOT_START>
"DATA",811.8,153,100,1948,0)
</COMPONENT>
"DATA",811.8,153,100,1949,0)
<COMPONENT>
"DATA",811.8,153,100,1950,0)
<FDA_END>899</FDA_END>
"DATA",811.8,153,100,1951,0)
<FDA_START>886</FDA_START>
"DATA",811.8,153,100,1952,0)
<FILE_START>879</FILE_START>
"DATA",811.8,153,100,1953,0)
<IEN_ROOT_END>904</IEN_ROOT_END>
"DATA",811.8,153,100,1954,0)
<IEN_ROOT_START>904</IEN_ROOT_START>
"DATA",811.8,153,100,1955,0)
</COMPONENT>
"DATA",811.8,153,100,1956,0)
<COMPONENT>
"DATA",811.8,153,100,1957,0)
<FDA_END>942</FDA_END>
"DATA",811.8,153,100,1958,0)
<FDA_START>915</FDA_START>
"DATA",811.8,153,100,1959,0)
<FILE_START>908</FILE_START>
"DATA",811.8,153,100,1960,0)
<IEN_ROOT_END>951</IEN_ROOT_END>
"DATA",811.8,153,100,1961,0)
<IEN_ROOT_START>947</IEN_ROOT_START>
"DATA",811.8,153,100,1962,0)
</COMPONENT>
"DATA",811.8,153,100,1963,0)
<COMPONENT>
"DATA",811.8,153,100,1964,0)
<FDA_END>978</FDA_END>
"DATA",811.8,153,100,1965,0)
<FDA_START>962</FDA_START>
"DATA",811.8,153,100,1966,0)
<FILE_START>955</FILE_START>
"DATA",811.8,153,100,1967,0)
<IEN_ROOT_END>984</IEN_ROOT_END>
"DATA",811.8,153,100,1968,0)
<IEN_ROOT_START>983</IEN_ROOT_START>
"DATA",811.8,153,100,1969,0)
</COMPONENT>
"DATA",811.8,153,100,1970,0)
<COMPONENT>
"DATA",811.8,153,100,1971,0)
<FDA_END>1010</FDA_END>
"DATA",811.8,153,100,1972,0)
<FDA_START>995</FDA_START>
"DATA",811.8,153,100,1973,0)
<FILE_START>988</FILE_START>
"DATA",811.8,153,100,1974,0)
<IEN_ROOT_END>1016</IEN_ROOT_END>
"DATA",811.8,153,100,1975,0)
<IEN_ROOT_START>1015</IEN_ROOT_START>
"DATA",811.8,153,100,1976,0)
</COMPONENT>
"DATA",811.8,153,100,1977,0)
<COMPONENT>
"DATA",811.8,153,100,1978,0)
<FDA_END>1042</FDA_END>
"DATA",811.8,153,100,1979,0)
<FDA_START>1027</FDA_START>
"DATA",811.8,153,100,1980,0)
<FILE_START>1020</FILE_START>
"DATA",811.8,153,100,1981,0)
<IEN_ROOT_END>1048</IEN_ROOT_END>
"DATA",811.8,153,100,1982,0)
<IEN_ROOT_START>1047</IEN_ROOT_START>
"DATA",811.8,153,100,1983,0)
</COMPONENT>
"DATA",811.8,153,100,1984,0)
<COMPONENT>
"DATA",811.8,153,100,1985,0)
<FDA_END>1073</FDA_END>
"DATA",811.8,153,100,1986,0)
<FDA_START>1059</FDA_START>
"DATA",811.8,153,100,1987,0)
<FILE_START>1052</FILE_START>
"DATA",811.8,153,100,1988,0)
<IEN_ROOT_END>1078</IEN_ROOT_END>
"DATA",811.8,153,100,1989,0)
<IEN_ROOT_START>1078</IEN_ROOT_START>
"DATA",811.8,153,100,1990,0)
</COMPONENT>
"DATA",811.8,153,100,1991,0)
<COMPONENT>
"DATA",811.8,153,100,1992,0)
<FDA_END>1103</FDA_END>
"DATA",811.8,153,100,1993,0)
<FDA_START>1089</FDA_START>
"DATA",811.8,153,100,1994,0)
<FILE_START>1082</FILE_START>
"DATA",811.8,153,100,1995,0)
<IEN_ROOT_END>1108</IEN_ROOT_END>
"DATA",811.8,153,100,1996,0)
<IEN_ROOT_START>1108</IEN_ROOT_START>
"DATA",811.8,153,100,1997,0)
</COMPONENT>
"DATA",811.8,153,100,1998,0)
<COMPONENT>
"DATA",811.8,153,100,1999,0)
<FDA_END>1147</FDA_END>
"DATA",811.8,153,100,2000,0)
<FDA_START>1119</FDA_START>
"DATA",811.8,153,100,2001,0)
<FILE_START>1112</FILE_START>
"DATA",811.8,153,100,2002,0)
<IEN_ROOT_END>1155</IEN_ROOT_END>
"DATA",811.8,153,100,2003,0)
<IEN_ROOT_START>1152</IEN_ROOT_START>
"DATA",811.8,153,100,2004,0)
</COMPONENT>
"DATA",811.8,153,100,2005,0)
<COMPONENT>
"DATA",811.8,153,100,2006,0)
<FDA_END>1193</FDA_END>
"DATA",811.8,153,100,2007,0)
<FDA_START>1166</FDA_START>
"DATA",811.8,153,100,2008,0)
<FILE_START>1159</FILE_START>
"DATA",811.8,153,100,2009,0)
<IEN_ROOT_END>1203</IEN_ROOT_END>
"DATA",811.8,153,100,2010,0)
<IEN_ROOT_START>1198</IEN_ROOT_START>
"DATA",811.8,153,100,2011,0)
</COMPONENT>
"DATA",811.8,153,100,2012,0)
<COMPONENT>
"DATA",811.8,153,100,2013,0)
<FDA_END>1227</FDA_END>
"DATA",811.8,153,100,2014,0)
<FDA_START>1214</FDA_START>
"DATA",811.8,153,100,2015,0)
<FILE_START>1207</FILE_START>
"DATA",811.8,153,100,2016,0)
<IEN_ROOT_END>1232</IEN_ROOT_END>
"DATA",811.8,153,100,2017,0)
<IEN_ROOT_START>1232</IEN_ROOT_START>
"DATA",811.8,153,100,2018,0)
</COMPONENT>
"DATA",811.8,153,100,2019,0)
<COMPONENT>
"DATA",811.8,153,100,2020,0)
<FDA_END>1257</FDA_END>
"DATA",811.8,153,100,2021,0)
<FDA_START>1243</FDA_START>
"DATA",811.8,153,100,2022,0)
<FILE_START>1236</FILE_START>
"DATA",811.8,153,100,2023,0)
<IEN_ROOT_END>1262</IEN_ROOT_END>
"DATA",811.8,153,100,2024,0)
<IEN_ROOT_START>1262</IEN_ROOT_START>
"DATA",811.8,153,100,2025,0)
</COMPONENT>
"DATA",811.8,153,100,2026,0)
<COMPONENT>
"DATA",811.8,153,100,2027,0)
<FDA_END>1284</FDA_END>
"DATA",811.8,153,100,2028,0)
<FDA_START>1273</FDA_START>
"DATA",811.8,153,100,2029,0)
<FILE_START>1266</FILE_START>
"DATA",811.8,153,100,2030,0)
<IEN_ROOT_END>1289</IEN_ROOT_END>
"DATA",811.8,153,100,2031,0)
<IEN_ROOT_START>1289</IEN_ROOT_START>
"DATA",811.8,153,100,2032,0)
</COMPONENT>
"DATA",811.8,153,100,2033,0)
<COMPONENT>
"DATA",811.8,153,100,2034,0)
<FDA_END>1315</FDA_END>
"DATA",811.8,153,100,2035,0)
<FDA_START>1300</FDA_START>
"DATA",811.8,153,100,2036,0)
<FILE_START>1293</FILE_START>
"DATA",811.8,153,100,2037,0)
<IEN_ROOT_END>1320</IEN_ROOT_END>
"DATA",811.8,153,100,2038,0)
<IEN_ROOT_START>1320</IEN_ROOT_START>
"DATA",811.8,153,100,2039,0)
</COMPONENT>
"DATA",811.8,153,100,2040,0)
<COMPONENT>
"DATA",811.8,153,100,2041,0)
<FDA_END>1348</FDA_END>
"DATA",811.8,153,100,2042,0)
<FDA_START>1331</FDA_START>
"DATA",811.8,153,100,2043,0)
<FILE_START>1324</FILE_START>
"DATA",811.8,153,100,2044,0)
<IEN_ROOT_END>1354</IEN_ROOT_END>
"DATA",811.8,153,100,2045,0)
<IEN_ROOT_START>1353</IEN_ROOT_START>
"DATA",811.8,153,100,2046,0)
</COMPONENT>
"DATA",811.8,153,100,2047,0)
<COMPONENT>
"DATA",811.8,153,100,2048,0)
<FDA_END>1378</FDA_END>
"DATA",811.8,153,100,2049,0)
<FDA_START>1365</FDA_START>
"DATA",811.8,153,100,2050,0)
<FILE_START>1358</FILE_START>
"DATA",811.8,153,100,2051,0)
<IEN_ROOT_END>1383</IEN_ROOT_END>
"DATA",811.8,153,100,2052,0)
<IEN_ROOT_START>1383</IEN_ROOT_START>
"DATA",811.8,153,100,2053,0)
</COMPONENT>
"DATA",811.8,153,100,2054,0)
<COMPONENT>
"DATA",811.8,153,100,2055,0)
<FDA_END>1409</FDA_END>
"DATA",811.8,153,100,2056,0)
<FDA_START>1394</FDA_START>
"DATA",811.8,153,100,2057,0)
<FILE_START>1387</FILE_START>
"DATA",811.8,153,100,2058,0)
<IEN_ROOT_END>1414</IEN_ROOT_END>
"DATA",811.8,153,100,2059,0)
<IEN_ROOT_START>1414</IEN_ROOT_START>
"DATA",811.8,153,100,2060,0)
</COMPONENT>
"DATA",811.8,153,100,2061,0)
<COMPONENT>
"DATA",811.8,153,100,2062,0)
<FDA_END>1438</FDA_END>
"DATA",811.8,153,100,2063,0)
<FDA_START>1425</FDA_START>
"DATA",811.8,153,100,2064,0)
<FILE_START>1418</FILE_START>
"DATA",811.8,153,100,2065,0)
<IEN_ROOT_END>1443</IEN_ROOT_END>
"DATA",811.8,153,100,2066,0)
<IEN_ROOT_START>1443</IEN_ROOT_START>
"DATA",811.8,153,100,2067,0)
</COMPONENT>
"DATA",811.8,153,100,2068,0)
<COMPONENT>
"DATA",811.8,153,100,2069,0)
<FDA_END>1473</FDA_END>
"DATA",811.8,153,100,2070,0)
<FDA_START>1454</FDA_START>
"DATA",811.8,153,100,2071,0)
<FILE_START>1447</FILE_START>
"DATA",811.8,153,100,2072,0)
<IEN_ROOT_END>1479</IEN_ROOT_END>
"DATA",811.8,153,100,2073,0)
<IEN_ROOT_START>1478</IEN_ROOT_START>
"DATA",811.8,153,100,2074,0)
</COMPONENT>
"DATA",811.8,153,100,2075,0)
<COMPONENT>
"DATA",811.8,153,100,2076,0)
<FDA_END>1506</FDA_END>
"DATA",811.8,153,100,2077,0)
<FDA_START>1490</FDA_START>
"DATA",811.8,153,100,2078,0)
<FILE_START>1483</FILE_START>
"DATA",811.8,153,100,2079,0)
<IEN_ROOT_END>1512</IEN_ROOT_END>
"DATA",811.8,153,100,2080,0)
<IEN_ROOT_START>1511</IEN_ROOT_START>
"DATA",811.8,153,100,2081,0)
</COMPONENT>
"DATA",811.8,153,100,2082,0)
<COMPONENT>
"DATA",811.8,153,100,2083,0)
<FDA_END>1551</FDA_END>
"DATA",811.8,153,100,2084,0)
<FDA_START>1523</FDA_START>
"DATA",811.8,153,100,2085,0)
<FILE_START>1516</FILE_START>
"DATA",811.8,153,100,2086,0)
<IEN_ROOT_END>1562</IEN_ROOT_END>
"DATA",811.8,153,100,2087,0)
<IEN_ROOT_START>1556</IEN_ROOT_START>
"DATA",811.8,153,100,2088,0)
</COMPONENT>
"DATA",811.8,153,100,2089,0)
<COMPONENT>
"DATA",811.8,153,100,2090,0)
<FDA_END>1589</FDA_END>
"DATA",811.8,153,100,2091,0)
<FDA_START>1573</FDA_START>
"DATA",811.8,153,100,2092,0)
<FILE_START>1566</FILE_START>
"DATA",811.8,153,100,2093,0)
<IEN_ROOT_END>1595</IEN_ROOT_END>
"DATA",811.8,153,100,2094,0)
<IEN_ROOT_START>1594</IEN_ROOT_START>
"DATA",811.8,153,100,2095,0)
</COMPONENT>
"DATA",811.8,153,100,2096,0)
<COMPONENT>
"DATA",811.8,153,100,2097,0)
<FDA_END>1622</FDA_END>
"DATA",811.8,153,100,2098,0)
<FDA_START>1606</FDA_START>
"DATA",811.8,153,100,2099,0)
<FILE_START>1599</FILE_START>
"DATA",811.8,153,100,2100,0)
<IEN_ROOT_END>1628</IEN_ROOT_END>
"DATA",811.8,153,100,2101,0)
<IEN_ROOT_START>1627</IEN_ROOT_START>
"DATA",811.8,153,100,2102,0)
</COMPONENT>
"DATA",811.8,153,100,2103,0)
<COMPONENT>
"DATA",811.8,153,100,2104,0)
<FDA_END>1654</FDA_END>
"DATA",811.8,153,100,2105,0)
<FDA_START>1639</FDA_START>
"DATA",811.8,153,100,2106,0)
<FILE_START>1632</FILE_START>
"DATA",811.8,153,100,2107,0)
<IEN_ROOT_END>1660</IEN_ROOT_END>
"DATA",811.8,153,100,2108,0)
<IEN_ROOT_START>1659</IEN_ROOT_START>
"DATA",811.8,153,100,2109,0)
</COMPONENT>
"DATA",811.8,153,100,2110,0)
<COMPONENT>
"DATA",811.8,153,100,2111,0)
<FDA_END>1696</FDA_END>
"DATA",811.8,153,100,2112,0)
<FDA_START>1671</FDA_START>
"DATA",811.8,153,100,2113,0)
<FILE_START>1664</FILE_START>
"DATA",811.8,153,100,2114,0)
<IEN_ROOT_END>1705</IEN_ROOT_END>
"DATA",811.8,153,100,2115,0)
<IEN_ROOT_START>1701</IEN_ROOT_START>
"DATA",811.8,153,100,2116,0)
</COMPONENT>
"DATA",811.8,153,100,2117,0)
<COMPONENT>
"DATA",811.8,153,100,2118,0)
<FDA_END>1730</FDA_END>
"DATA",811.8,153,100,2119,0)
<FDA_START>1716</FDA_START>
"DATA",811.8,153,100,2120,0)
<FILE_START>1709</FILE_START>
"DATA",811.8,153,100,2121,0)
<IEN_ROOT_END>1735</IEN_ROOT_END>
"DATA",811.8,153,100,2122,0)
<IEN_ROOT_START>1735</IEN_ROOT_START>
"DATA",811.8,153,100,2123,0)
</COMPONENT>
"DATA",811.8,153,100,2124,0)
<COMPONENT>
"DATA",811.8,153,100,2125,0)
<FDA_END>1768</FDA_END>
"DATA",811.8,153,100,2126,0)
<FDA_START>1746</FDA_START>
"DATA",811.8,153,100,2127,0)
<FILE_START>1739</FILE_START>
"DATA",811.8,153,100,2128,0)
<IEN_ROOT_END>1780</IEN_ROOT_END>
"DATA",811.8,153,100,2129,0)
<IEN_ROOT_START>1773</IEN_ROOT_START>
"DATA",811.8,153,100,2130,0)
</COMPONENT>
"DATA",811.8,153,100,2131,0)
</INDEX>
"DATA",811.8,153,100,2132,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,153,110,0)
^811.804^53^53
"DATA",811.8,153,110,1,0)
Reminder:    VA-HTN ASSESSMENT BP >=140/90
"DATA",811.8,153,110,2,0)
Source:      REDINGTON,PATRICK at SALT LAKE CITY OIFO
"DATA",811.8,153,110,3,0)
Date Packed: 07/11/2006@14:35:17
"DATA",811.8,153,110,4,0)
Package Version: 2.0
"DATA",811.8,153,110,5,0)

"DATA",811.8,153,110,6,0)
Description:
"DATA",811.8,153,110,7,0)
This reminder is due every 6 months for patients who have their last 
"DATA",811.8,153,110,8,0)
recorded DBP >89 or the last SBP >139 and the patient has a diagnosis of 
"DATA",811.8,153,110,9,0)
HTN in PCE, problem list or PTF in the past 18 months.  
"DATA",811.8,153,110,10,0)
 
"DATA",811.8,153,110,11,0)
The reminder becomes not applicable if the last BP <140/90 is recorded.  
"DATA",811.8,153,110,12,0)
It is also not applicable if the last SBP is >159 or the last DBP is >99 
"DATA",811.8,153,110,13,0)
since the "HTN ASSESSMENT BP >160/100" reminder will be applicable for 
"DATA",811.8,153,110,14,0)
the patient with the higher measured BPs.
"DATA",811.8,153,110,15,0)
 
"DATA",811.8,153,110,16,0)
The reminder is resolved for 6 months by any of the interventions listed 
"DATA",811.8,153,110,17,0)
below:
"DATA",811.8,153,110,18,0)
 
"DATA",811.8,153,110,19,0)
  Education  (reminder term HTN EDUCATIONAL INTERVENTIONS) 
"DATA",811.8,153,110,20,0)
     VA-HTN EXERCISE EDUCATION                    (ED)
"DATA",811.8,153,110,21,0)
     VA-HTN NUTRITION EDUCATION                   (ED)
"DATA",811.8,153,110,22,0)
     HTN LIFESTYLE MODIFICATIONS RECOMMENDED      (HF) 
"DATA",811.8,153,110,23,0)
     VA-HTN MEDICATION ADHERENCE                  (ED) 
"DATA",811.8,153,110,24,0)
     HTN NO EDUC INTERVENTION WARRANTED           (HF) 
"DATA",811.8,153,110,25,0)
     
"DATA",811.8,153,110,26,0)
 
"DATA",811.8,153,110,27,0)
  Medication   (reminder term HTN MED & OTHER INTERVENTIONS) 
"DATA",811.8,153,110,28,0)
     HTN MEDICATIONS ADJUSTED                   (HF)
"DATA",811.8,153,110,29,0)
     HTN REFUSAL OF MED INTERVENTION            (HF)
"DATA",811.8,153,110,30,0)
     HTN EVALUATION OF RESISTANT/SECONDARY      (HF)
"DATA",811.8,153,110,31,0)
     HTN NO MED CHANGE - BP CONTROLLED          (HF)
"DATA",811.8,153,110,32,0)
     HTN NO MED CHANGE - COMORBID ILLNESS       (HF)
"DATA",811.8,153,110,33,0)
     HTN NO MED CHANGE - SIDE EFFECTS FROM RX   (HF)
"DATA",811.8,153,110,34,0)
     HTN NO MED CHANGE - LIMITED LIFE EXP       (HF)
"DATA",811.8,153,110,35,0)
     HTN NO MED CHANGE - NONCOMPLIANCE          (HF)
"DATA",811.8,153,110,36,0)
     HTN NO MED CHANGE - OTHER                  (HF)
"DATA",811.8,153,110,37,0)
 
"DATA",811.8,153,110,38,0)
The reminder becomes not applicable if the health factor of INCORRECT HTN 
"DATA",811.8,153,110,39,0)
DIAGNOSIS is entered.  The reminder is reactivated the next time that an 
"DATA",811.8,153,110,40,0)
ICD code for HTN is entered.  
"DATA",811.8,153,110,41,0)
 
"DATA",811.8,153,110,42,0)
The following findings are included in the reminder to provide additional 
"DATA",811.8,153,110,43,0)
information in the clinical maintenance display:
"DATA",811.8,153,110,44,0)
 
"DATA",811.8,153,110,45,0)
Any diabetes diagnoses, drug classes for HTN meds (CV100, CV150, 
"DATA",811.8,153,110,46,0)
CV400, CV490, CV700, CV709, CV800, CV805), patient's BMI.
"DATA",811.8,153,110,47,0)

"DATA",811.8,153,110,48,0)

"DATA",811.8,153,110,49,0)
Keywords:
"DATA",811.8,153,110,50,0)
HTN
"DATA",811.8,153,110,51,0)

"DATA",811.8,153,110,52,0)

"DATA",811.8,153,110,53,0)
Components:
"DATA",811.8,153,115)
REMINDER
"DATA",811.8,154,0)
VA-HTN ASSESSMENT BP >=160/100^REDINGTON,PATRICK at SALT LAKE CITY OIFO^3060711.143542
"DATA",811.8,154,100,0)
^811.801^923^923
"DATA",811.8,154,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,154,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,154,100,3,0)
<PACKAGE_VERSION>2.0</PACKAGE_VERSION>
"DATA",811.8,154,100,4,0)
<INDEX_AT>776</INDEX_AT>
"DATA",811.8,154,100,5,0)
<SOURCE>
"DATA",811.8,154,100,6,0)
<NAME>VA-HTN ASSESSMENT BP &gt;=160/100</NAME>
"DATA",811.8,154,100,7,0)
<USER>REDINGTON,PATRICK</USER>
"DATA",811.8,154,100,8,0)
<SITE>SALT LAKE CITY OIFO</SITE>
"DATA",811.8,154,100,9,0)
<DATE_PACKED>07/11/2006@14:35:42</DATE_PACKED>
"DATA",811.8,154,100,10,0)
</SOURCE>
"DATA",811.8,154,100,11,0)
<EXCHANGE_TYPE>REMINDER</EXCHANGE_TYPE>
"DATA",811.8,154,100,12,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,154,100,13,0)
This reminder is due every 1 month for patients whose last DBP was >99 
"DATA",811.8,154,100,14,0)
or the last SBP was > 159 and the patient has a diagnosis of HTN.  
"DATA",811.8,154,100,15,0)
 
"DATA",811.8,154,100,16,0)
The reminder becomes not applicable if a BP lower than 160/100 is entered.
"DATA",811.8,154,100,17,0)
 
"DATA",811.8,154,100,18,0)
The reminder is resolved for 1 month by recording at least one
"DATA",811.8,154,100,19,0)
intervention from the list below.
"DATA",811.8,154,100,20,0)
 
"DATA",811.8,154,100,21,0)
  Medication   (reminder term HTN MED & OTHER INTERVENTIONS) 
"DATA",811.8,154,100,22,0)
     HTN MEDICATIONS ADJUSTED                   (HF)
"DATA",811.8,154,100,23,0)
     HTN REFUSAL OF MED INTERVENTION            (HF)
"DATA",811.8,154,100,24,0)
     HTN EVALUATION OF RESISTANT/SECONDARY      (HF)
"DATA",811.8,154,100,25,0)
     HTN NO MED CHANGE - BP CONTROLLED          (HF)
"DATA",811.8,154,100,26,0)
     HTN NO MED CHANGE - COMORBID ILLNESS       (HF)
"DATA",811.8,154,100,27,0)
     HTN NO MED CHANGE - SIDE EFFECTS FROM RX   (HF)
"DATA",811.8,154,100,28,0)
     HTN NO MED CHANGE - LIMITED LIFE EXP       (HF)
"DATA",811.8,154,100,29,0)
     HTN NO MED CHANGE - NONCOMPLIANCE          (HF)
"DATA",811.8,154,100,30,0)
     HTN NO MED CHANGE - OTHER                  (HF)
"DATA",811.8,154,100,31,0)
 
"DATA",811.8,154,100,32,0)
Educational interventions are optional:
"DATA",811.8,154,100,33,0)
  Education  (reminder term HTN EDUCATIONAL INTERVENTIONS)
"DATA",811.8,154,100,34,0)
     VA-HTN EXERCISE EDUCATION                    (ED)
"DATA",811.8,154,100,35,0)
     VA-HTN NUTRITION EDUCATION                   (ED)
"DATA",811.8,154,100,36,0)
     HTN LIFESTYLE MODIFICATIONS RECOMMENDED      (HF)
"DATA",811.8,154,100,37,0)
     VA-HTN MEDICATION ADHERENCE                  (ED)
"DATA",811.8,154,100,38,0)
     HTN NO EDUC INTERVENTION WARRANTED           (HF)
"DATA",811.8,154,100,39,0)
 
"DATA",811.8,154,100,40,0)
The reminder becomes not applicable if the health factor of INCORRECT HTN 
"DATA",811.8,154,100,41,0)
DIAGNOSIS is entered.  The reminder is reactivated the next time that an 
"DATA",811.8,154,100,42,0)
ICD code for HTN is entered.  
"DATA",811.8,154,100,43,0)
 
"DATA",811.8,154,100,44,0)
The following findings are included in the reminder to provide additional 
"DATA",811.8,154,100,45,0)
information in the clinical maintenance display:
"DATA",811.8,154,100,46,0)
 
"DATA",811.8,154,100,47,0)
Any diabetes diagnoses, drug classes for HTN meds (CV100, CV150, 
"DATA",811.8,154,100,48,0)
CV400, CV490, CV700, CV709, CV800, CV805), patient's BMI.
"DATA",811.8,154,100,49,0)

"DATA",811.8,154,100,50,0)
]]></DESCRIPTION>
"DATA",811.8,154,100,51,0)
<KEYWORDS>
"DATA",811.8,154,100,52,0)
<KEYWORD>HTN</KEYWORD>
"DATA",811.8,154,100,53,0)
<KEYWORD></KEYWORD>
"DATA",811.8,154,100,54,0)
</KEYWORDS>
"DATA",811.8,154,100,55,0)
<M_ROUTINE>
"DATA",811.8,154,100,56,0)
<ROUTINE_NAME>PXRMBMI</ROUTINE_NAME>
"DATA",811.8,154,100,57,0)
<CODE>
"DATA",811.8,154,100,58,0)
<![CDATA[
"DATA",811.8,154,100,59,0)
PXRMBMI ; SLC/PKR - National BMI computed finding. ;08/31/2004
"DATA",811.8,154,100,60,0)
 ;;2.0;CLINICAL REMINDERS;;Feb 04, 2005
"DATA",811.8,154,100,61,0)
 ;
"DATA",811.8,154,100,62,0)
 ;=========================================================
"DATA",811.8,154,100,63,0)
BMI(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding to return the BMI.
"DATA",811.8,154,100,64,0)
 N HDAS,HDATE,HT,HTEMP,WDAS,WDATE,WT,WTEMP
"DATA",811.8,154,100,65,0)
 ;Get the most recent height measurement
"DATA",811.8,154,100,66,0)
 S HDATE="",HT=0
"DATA",811.8,154,100,67,0)
 F  Q:HT>0  S HDATE=$O(^PXRMINDX(120.5,"PI",DFN,8,HDATE),-1) Q:HDATE=""  D
"DATA",811.8,154,100,68,0)
 . S HDAS=$O(^PXRMINDX(120.5,"PI",DFN,8,HDATE,""))
"DATA",811.8,154,100,69,0)
 . K HTEMP
"DATA",811.8,154,100,70,0)
 . D GETDATA^PXRMVITL(HDAS,.HTEMP)
"DATA",811.8,154,100,71,0)
 . S HT=(HTEMP("RATE")*2.54)/100
"DATA",811.8,154,100,72,0)
 I HT=0 S TEST=0,(VALUE,TEXT)="" Q
"DATA",811.8,154,100,73,0)
 ;Get the most recent weight measurement.
"DATA",811.8,154,100,74,0)
 S WDATE="",WT=0
"DATA",811.8,154,100,75,0)
 F  Q:WT>0  S WDATE=$O(^PXRMINDX(120.5,"PI",DFN,9,WDATE),-1) Q:WDATE=""  D
"DATA",811.8,154,100,76,0)
 . S WDAS=$O(^PXRMINDX(120.5,"PI",DFN,9,WDATE,""))
"DATA",811.8,154,100,77,0)
 . K WTEMP
"DATA",811.8,154,100,78,0)
 . D GETDATA^PXRMVITL(WDAS,.WTEMP)
"DATA",811.8,154,100,79,0)
 . S WT=WTEMP("RATE")/2.203
"DATA",811.8,154,100,80,0)
 I WT=0 S TEST=0,(VALUE,TEXT)="" Q
"DATA",811.8,154,100,81,0)
 S VALUE=WT/(HT*HT)
"DATA",811.8,154,100,82,0)
 S VALUE=$FN(VALUE,"",1)
"DATA",811.8,154,100,83,0)
 ;Use date of the weight measurement.
"DATA",811.8,154,100,84,0)
 S DATE=WDATE,TEST=1,TEXT=""
"DATA",811.8,154,100,85,0)
 Q
"DATA",811.8,154,100,86,0)
 ;
"DATA",811.8,154,100,87,0)
]]>
"DATA",811.8,154,100,88,0)
</CODE>
"DATA",811.8,154,100,89,0)
</M_ROUTINE>
"DATA",811.8,154,100,90,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,91,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,154,100,92,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,154,100,93,0)
<POINT_01>Office of Quality &amp; Performance</POINT_01>
"DATA",811.8,154,100,94,0)
<INTERNAL_ENTRY_NUMBER>15</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,95,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,96,0)
<![CDATA[
"DATA",811.8,154,100,97,0)
811.6;+15,;.01~Office of Quality & Performance
"DATA",811.8,154,100,98,0)
811.6;+15,;100~NATIONAL
"DATA",811.8,154,100,99,0)
811.63;+16,+15,;.01~07/11/2006@14:35:55
"DATA",811.8,154,100,100,0)
811.63;+16,+15,;1~REDINGTON,PATRICK
"DATA",811.8,154,100,101,0)
811.63;+16,+15,;2~WP-start~1
"DATA",811.8,154,100,102,0)
Exchange Stub
"DATA",811.8,154,100,103,0)
]]>
"DATA",811.8,154,100,104,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,105,0)
<IEN_ROOT>
"DATA",811.8,154,100,106,0)
<![CDATA[
"DATA",811.8,154,100,107,0)
16^1
"DATA",811.8,154,100,108,0)
]]>
"DATA",811.8,154,100,109,0)
</IEN_ROOT>
"DATA",811.8,154,100,110,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,111,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,112,0)
<FILE_NAME>EDUCATION TOPICS</FILE_NAME>
"DATA",811.8,154,100,113,0)
<FILE_NUMBER>9999999.09</FILE_NUMBER>
"DATA",811.8,154,100,114,0)
<POINT_01>VA-HTN EXERCISE</POINT_01>
"DATA",811.8,154,100,115,0)
<INTERNAL_ENTRY_NUMBER>15</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,116,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,117,0)
<![CDATA[
"DATA",811.8,154,100,118,0)
9999999.09;+15,;.01~VA-HTN EXERCISE
"DATA",811.8,154,100,119,0)
9999999.09;+15,;.04~Exercise Education for HTN
"DATA",811.8,154,100,120,0)
9999999.09;+15,;11~WP-start~2
"DATA",811.8,154,100,121,0)
The patient will understand the importance and the role of exercise in
"DATA",811.8,154,100,122,0)
the control of hypertension.
"DATA",811.8,154,100,123,0)
9999999.09;+15,;12~WP-start~3
"DATA",811.8,154,100,124,0)
Exercise is an useful intervention for the improvement in BP control.  The
"DATA",811.8,154,100,125,0)
target for aerobic exercise should be 30 to 45 minutes per session, three
"DATA",811.8,154,100,126,0)
to five times per week if possible.
"DATA",811.8,154,100,127,0)
]]>
"DATA",811.8,154,100,128,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,129,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,130,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,131,0)
<FILE_NAME>EDUCATION TOPICS</FILE_NAME>
"DATA",811.8,154,100,132,0)
<FILE_NUMBER>9999999.09</FILE_NUMBER>
"DATA",811.8,154,100,133,0)
<POINT_01>VA-HTN NUTRITION EDUCATION</POINT_01>
"DATA",811.8,154,100,134,0)
<INTERNAL_ENTRY_NUMBER>16</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,135,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,136,0)
<![CDATA[
"DATA",811.8,154,100,137,0)
9999999.09;+16,;.01~VA-HTN NUTRITION EDUCATION
"DATA",811.8,154,100,138,0)
9999999.09;+16,;.04~Nutrition Education for HTN
"DATA",811.8,154,100,139,0)
9999999.09;+16,;11~WP-start~3
"DATA",811.8,154,100,140,0)
The patient will understand the lifestyle modifications that may help
"DATA",811.8,154,100,141,0)
improve blood pressure control including weight loss, decreased sodium
"DATA",811.8,154,100,142,0)
intake, and a heart healthy diet.
"DATA",811.8,154,100,143,0)
9999999.09;+16,;12~WP-start~26
"DATA",811.8,154,100,144,0)
Patients with HTN should receive counseling on the following nutritional
"DATA",811.8,154,100,145,0)
modifications:
"DATA",811.8,154,100,146,0)
 
"DATA",811.8,154,100,147,0)
1.      WEIGHT REDUCTION:  Overweight patients should reduce their weight
"DATA",811.8,154,100,148,0)
to within 10 percent of their ideal body weight. However, reduction even
"DATA",811.8,154,100,149,0)
of 5 to 10 pounds can be helpful in controlling HTN.
"DATA",811.8,154,100,150,0)
 
"DATA",811.8,154,100,151,0)
2.      ALCOHOL INTAKE:  Alcohol intake should be limited to no more than
"DATA",811.8,154,100,152,0)
one ounce (24 ounces of beer; or 10 ounces of wine; or 2 ounces of
"DATA",811.8,154,100,153,0)
100-proof whiskey) per day for men or 0.5 ounces of alcohol per day for
"DATA",811.8,154,100,154,0)
women and for lighter weight men.
"DATA",811.8,154,100,155,0)
 
"DATA",811.8,154,100,156,0)
3.      SODIUM INTAKE:  Sodium intake in the patient with HTN should be
"DATA",811.8,154,100,157,0)
limited to no more than 100 mmol/day (2.4 g of sodium or 6 g of sodium
"DATA",811.8,154,100,158,0)
chloride).
"DATA",811.8,154,100,159,0)
 
"DATA",811.8,154,100,160,0)
4.      DIET:  An adequate dietary intake of potassium, calcium, and
"DATA",811.8,154,100,161,0)
magnesium can be obtained from fresh fruits and vegetables. Other dietary
"DATA",811.8,154,100,162,0)
advice should include a heart-healthy diet such as the DASH Diet. This is
"DATA",811.8,154,100,163,0)
one means of satisfying the dietary steps above. See the DASH Diet table
"DATA",811.8,154,100,164,0)
below.
"DATA",811.8,154,100,165,0)
 
"DATA",811.8,154,100,166,0)
5.      HYPERLIPIDEMIA:  Counsel to reduce intake of dietary saturated
"DATA",811.8,154,100,167,0)
fats and cholesterol. A diet rich in fresh fruits and vegetables as well
"DATA",811.8,154,100,168,0)
as low in dietary saturated fats and cholesterol is also beneficial in
"DATA",811.8,154,100,169,0)
lowering blood pressure.
"DATA",811.8,154,100,170,0)
]]>
"DATA",811.8,154,100,171,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,172,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,173,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,174,0)
<FILE_NAME>EDUCATION TOPICS</FILE_NAME>
"DATA",811.8,154,100,175,0)
<FILE_NUMBER>9999999.09</FILE_NUMBER>
"DATA",811.8,154,100,176,0)
<POINT_01>VA-HTN MEDICATION ADHERENCE</POINT_01>
"DATA",811.8,154,100,177,0)
<INTERNAL_ENTRY_NUMBER>17</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,178,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,179,0)
<![CDATA[
"DATA",811.8,154,100,180,0)
9999999.09;+17,;.01~VA-HTN MEDICATION ADHERENCE
"DATA",811.8,154,100,181,0)
9999999.09;+17,;.04~HTN Medication Adherence
"DATA",811.8,154,100,182,0)
9999999.09;+17,;11~WP-start~3
"DATA",811.8,154,100,183,0)
The patient will understand the role and importance of medications in the
"DATA",811.8,154,100,184,0)
control of BP and will understand the importance of taking these
"DATA",811.8,154,100,185,0)
medications on a regular basis.
"DATA",811.8,154,100,186,0)
]]>
"DATA",811.8,154,100,187,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,188,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,189,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,190,0)
<FILE_NAME>GMRV VITAL TYPE</FILE_NAME>
"DATA",811.8,154,100,191,0)
<FILE_NUMBER>120.51</FILE_NUMBER>
"DATA",811.8,154,100,192,0)
<POINT_01>BLOOD PRESSURE</POINT_01>
"DATA",811.8,154,100,193,0)
<INTERNAL_ENTRY_NUMBER>1</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,194,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,195,0)
<![CDATA[
"DATA",811.8,154,100,196,0)
120.51;+1,;.01~BLOOD PRESSURE
"DATA",811.8,154,100,197,0)
]]>
"DATA",811.8,154,100,198,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,199,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,200,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,201,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,202,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,203,0)
<POINT_01>INCORRECT DIAGNOSES</POINT_01>
"DATA",811.8,154,100,204,0)
<INTERNAL_ENTRY_NUMBER>598002</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,205,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,206,0)
<![CDATA[
"DATA",811.8,154,100,207,0)
9999999.64;+598002,;.01~INCORRECT DIAGNOSES
"DATA",811.8,154,100,208,0)
9999999.64;+598002,;.1~CATEGORY
"DATA",811.8,154,100,209,0)
]]>
"DATA",811.8,154,100,210,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,211,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,212,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,213,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,214,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,215,0)
<POINT_01>HYPERTENSION</POINT_01>
"DATA",811.8,154,100,216,0)
<INTERNAL_ENTRY_NUMBER>598003</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,217,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,218,0)
<![CDATA[
"DATA",811.8,154,100,219,0)
9999999.64;+598003,;.01~HYPERTENSION
"DATA",811.8,154,100,220,0)
9999999.64;+598003,;.1~CATEGORY
"DATA",811.8,154,100,221,0)
]]>
"DATA",811.8,154,100,222,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,223,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,224,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,225,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,226,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,227,0)
<POINT_01>INCORRECT HTN DIAGNOSIS</POINT_01>
"DATA",811.8,154,100,228,0)
<INTERNAL_ENTRY_NUMBER>598004</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,229,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,230,0)
<![CDATA[
"DATA",811.8,154,100,231,0)
9999999.64;+598004,;.01~INCORRECT HTN DIAGNOSIS
"DATA",811.8,154,100,232,0)
9999999.64;+598004,;.03~INCORRECT DIAGNOSES
"DATA",811.8,154,100,233,0)
9999999.64;+598004,;.1~FACTOR
"DATA",811.8,154,100,234,0)
]]>
"DATA",811.8,154,100,235,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,236,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,237,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,238,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,239,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,240,0)
<POINT_01>HTN REFUSAL OF MED INTERVENTION</POINT_01>
"DATA",811.8,154,100,241,0)
<INTERNAL_ENTRY_NUMBER>598005</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,242,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,243,0)
<![CDATA[
"DATA",811.8,154,100,244,0)
9999999.64;+598005,;.01~HTN REFUSAL OF MED INTERVENTION
"DATA",811.8,154,100,245,0)
9999999.64;+598005,;.03~HYPERTENSION
"DATA",811.8,154,100,246,0)
9999999.64;+598005,;.1~FACTOR
"DATA",811.8,154,100,247,0)
]]>
"DATA",811.8,154,100,248,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,249,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,250,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,251,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,252,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,253,0)
<POINT_01>HTN NO MED CHANGE - NONCOMPLIANCE</POINT_01>
"DATA",811.8,154,100,254,0)
<INTERNAL_ENTRY_NUMBER>598006</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,255,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,256,0)
<![CDATA[
"DATA",811.8,154,100,257,0)
9999999.64;+598006,;.01~HTN NO MED CHANGE - NONCOMPLIANCE
"DATA",811.8,154,100,258,0)
9999999.64;+598006,;.03~HYPERTENSION
"DATA",811.8,154,100,259,0)
9999999.64;+598006,;.1~FACTOR
"DATA",811.8,154,100,260,0)
]]>
"DATA",811.8,154,100,261,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,262,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,263,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,264,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,265,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,266,0)
<POINT_01>HTN NO EDUC INTERVENTION WARRANTED</POINT_01>
"DATA",811.8,154,100,267,0)
<INTERNAL_ENTRY_NUMBER>598007</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,268,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,269,0)
<![CDATA[
"DATA",811.8,154,100,270,0)
9999999.64;+598007,;.01~HTN NO EDUC INTERVENTION WARRANTED
"DATA",811.8,154,100,271,0)
9999999.64;+598007,;.03~HYPERTENSION
"DATA",811.8,154,100,272,0)
9999999.64;+598007,;.1~FACTOR
"DATA",811.8,154,100,273,0)
]]>
"DATA",811.8,154,100,274,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,275,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,276,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,277,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,278,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,279,0)
<POINT_01>HTN LIFESTYLE MODIFICATIONS RECOMMENDED</POINT_01>
"DATA",811.8,154,100,280,0)
<INTERNAL_ENTRY_NUMBER>598008</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,281,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,282,0)
<![CDATA[
"DATA",811.8,154,100,283,0)
9999999.64;+598008,;.01~HTN LIFESTYLE MODIFICATIONS RECOMMENDED
"DATA",811.8,154,100,284,0)
9999999.64;+598008,;.03~HYPERTENSION
"DATA",811.8,154,100,285,0)
9999999.64;+598008,;.1~FACTOR
"DATA",811.8,154,100,286,0)
]]>
"DATA",811.8,154,100,287,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,288,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,289,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,290,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,291,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,292,0)
<POINT_01>HTN MEDICATIONS ADJUSTED</POINT_01>
"DATA",811.8,154,100,293,0)
<INTERNAL_ENTRY_NUMBER>598009</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,294,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,295,0)
<![CDATA[
"DATA",811.8,154,100,296,0)
9999999.64;+598009,;.01~HTN MEDICATIONS ADJUSTED
"DATA",811.8,154,100,297,0)
9999999.64;+598009,;.03~HYPERTENSION
"DATA",811.8,154,100,298,0)
9999999.64;+598009,;.1~FACTOR
"DATA",811.8,154,100,299,0)
]]>
"DATA",811.8,154,100,300,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,301,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,302,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,303,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,304,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,305,0)
<POINT_01>HTN NO MED CHANGE - OTHER</POINT_01>
"DATA",811.8,154,100,306,0)
<INTERNAL_ENTRY_NUMBER>598010</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,307,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,308,0)
<![CDATA[
"DATA",811.8,154,100,309,0)
9999999.64;+598010,;.01~HTN NO MED CHANGE - OTHER
"DATA",811.8,154,100,310,0)
9999999.64;+598010,;.03~HYPERTENSION
"DATA",811.8,154,100,311,0)
9999999.64;+598010,;.1~FACTOR
"DATA",811.8,154,100,312,0)
]]>
"DATA",811.8,154,100,313,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,314,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,315,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,316,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,317,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,318,0)
<POINT_01>HTN EVALUATION OF RESISTANT/SECONDARY</POINT_01>
"DATA",811.8,154,100,319,0)
<INTERNAL_ENTRY_NUMBER>598011</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,320,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,321,0)
<![CDATA[
"DATA",811.8,154,100,322,0)
9999999.64;+598011,;.01~HTN EVALUATION OF RESISTANT/SECONDARY
"DATA",811.8,154,100,323,0)
9999999.64;+598011,;.03~HYPERTENSION
"DATA",811.8,154,100,324,0)
9999999.64;+598011,;.1~FACTOR
"DATA",811.8,154,100,325,0)
]]>
"DATA",811.8,154,100,326,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,327,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,328,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,329,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,330,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,331,0)
<POINT_01>HTN NO MED CHANGE - BP CONTROLLED</POINT_01>
"DATA",811.8,154,100,332,0)
<INTERNAL_ENTRY_NUMBER>598012</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,333,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,334,0)
<![CDATA[
"DATA",811.8,154,100,335,0)
9999999.64;+598012,;.01~HTN NO MED CHANGE - BP CONTROLLED
"DATA",811.8,154,100,336,0)
9999999.64;+598012,;.03~HYPERTENSION
"DATA",811.8,154,100,337,0)
9999999.64;+598012,;.1~FACTOR
"DATA",811.8,154,100,338,0)
]]>
"DATA",811.8,154,100,339,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,340,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,341,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,342,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,343,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,344,0)
<POINT_01>HTN NO MED CHANGE - COMORBID ILLNESS</POINT_01>
"DATA",811.8,154,100,345,0)
<INTERNAL_ENTRY_NUMBER>598013</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,346,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,347,0)
<![CDATA[
"DATA",811.8,154,100,348,0)
9999999.64;+598013,;.01~HTN NO MED CHANGE - COMORBID ILLNESS
"DATA",811.8,154,100,349,0)
9999999.64;+598013,;.03~HYPERTENSION
"DATA",811.8,154,100,350,0)
9999999.64;+598013,;.1~FACTOR
"DATA",811.8,154,100,351,0)
]]>
"DATA",811.8,154,100,352,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,353,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,354,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,355,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,356,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,357,0)
<POINT_01>HTN NO MED CHANGE - SIDE EFFECTS FROM RX</POINT_01>
"DATA",811.8,154,100,358,0)
<INTERNAL_ENTRY_NUMBER>598014</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,359,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,360,0)
<![CDATA[
"DATA",811.8,154,100,361,0)
9999999.64;+598014,;.01~HTN NO MED CHANGE - SIDE EFFECTS FROM RX
"DATA",811.8,154,100,362,0)
9999999.64;+598014,;.03~HYPERTENSION
"DATA",811.8,154,100,363,0)
9999999.64;+598014,;.1~FACTOR
"DATA",811.8,154,100,364,0)
]]>
"DATA",811.8,154,100,365,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,366,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,367,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,368,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,154,100,369,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,154,100,370,0)
<POINT_01>HTN NO MED CHANGE - LIMITED LIFE EXP</POINT_01>
"DATA",811.8,154,100,371,0)
<INTERNAL_ENTRY_NUMBER>598015</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,372,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,373,0)
<![CDATA[
"DATA",811.8,154,100,374,0)
9999999.64;+598015,;.01~HTN NO MED CHANGE - LIMITED LIFE EXP
"DATA",811.8,154,100,375,0)
9999999.64;+598015,;.03~HYPERTENSION
"DATA",811.8,154,100,376,0)
9999999.64;+598015,;.1~FACTOR
"DATA",811.8,154,100,377,0)
]]>
"DATA",811.8,154,100,378,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,379,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,380,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,381,0)
<FILE_NAME>REMINDER COMPUTED FINDINGS</FILE_NAME>
"DATA",811.8,154,100,382,0)
<FILE_NUMBER>811.4</FILE_NUMBER>
"DATA",811.8,154,100,383,0)
<POINT_01>VA-BMI</POINT_01>
"DATA",811.8,154,100,384,0)
<INTERNAL_ENTRY_NUMBER>1</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,385,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,386,0)
<![CDATA[
"DATA",811.8,154,100,387,0)
811.4;+1,;.01~VA-BMI
"DATA",811.8,154,100,388,0)
811.4;+1,;.02~PXRMBMI
"DATA",811.8,154,100,389,0)
811.4;+1,;.03~BMI
"DATA",811.8,154,100,390,0)
811.4;+1,;.04~BMI
"DATA",811.8,154,100,391,0)
811.4;+1,;1~WP-start~10
"DATA",811.8,154,100,392,0)
The VA-BMI computed finding calculates the patient's body mass index.  The
"DATA",811.8,154,100,393,0)
value returned which can be used in the CONDITION field of the findings is
"DATA",811.8,154,100,394,0)
the body mass index value.
"DATA",811.8,154,100,395,0)
 
"DATA",811.8,154,100,396,0)
An example of using the VA-BMI computed finding is as follows:
"DATA",811.8,154,100,397,0)
1)  Create a finding in a reminder that is the VA-BMI computed finding.
"DATA",811.8,154,100,398,0)
2)  Add logic in the CONDITION field to check for a particular BMI value:
"DATA",811.8,154,100,399,0)
"I V>25"
"DATA",811.8,154,100,400,0)
3)  This finding will be evaluated to true for patients with a BMI that is
"DATA",811.8,154,100,401,0)
greater than 25.
"DATA",811.8,154,100,402,0)
811.4;+1,;100~NATIONAL
"DATA",811.8,154,100,403,0)
811.42;+2,+1,;.01~07/11/2006@14:35:55
"DATA",811.8,154,100,404,0)
811.42;+2,+1,;1~REDINGTON,PATRICK
"DATA",811.8,154,100,405,0)
811.42;+2,+1,;2~WP-start~1
"DATA",811.8,154,100,406,0)
Exchange Stub
"DATA",811.8,154,100,407,0)
]]>
"DATA",811.8,154,100,408,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,409,0)
<IEN_ROOT>
"DATA",811.8,154,100,410,0)
<![CDATA[
"DATA",811.8,154,100,411,0)
2^1
"DATA",811.8,154,100,412,0)
]]>
"DATA",811.8,154,100,413,0)
</IEN_ROOT>
"DATA",811.8,154,100,414,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,415,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,416,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,154,100,417,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,154,100,418,0)
<POINT_01>VA-HYPERTENSION CODES</POINT_01>
"DATA",811.8,154,100,419,0)
<INTERNAL_ENTRY_NUMBER>65</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,420,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,421,0)
<![CDATA[
"DATA",811.8,154,100,422,0)
811.2;+65,;.01~VA-HYPERTENSION CODES
"DATA",811.8,154,100,423,0)
811.2;+65,;.02~Hypertension codes
"DATA",811.8,154,100,424,0)
811.2;+65,;100~NATIONAL
"DATA",811.8,154,100,425,0)
811.2;+65,;101~Office of Quality & Performance
"DATA",811.8,154,100,426,0)
811.21;+66,+65,;.01~07/11/2006@14:35:55
"DATA",811.8,154,100,427,0)
811.21;+66,+65,;1~REDINGTON,PATRICK
"DATA",811.8,154,100,428,0)
811.21;+66,+65,;2~WP-start~1
"DATA",811.8,154,100,429,0)
Exchange Stub
"DATA",811.8,154,100,430,0)
811.22102;+67,+65,;.01~401.0
"DATA",811.8,154,100,431,0)
811.22102;+67,+65,;1~405.99
"DATA",811.8,154,100,432,0)
811.22102;+67,+65,;2~398.99
"DATA",811.8,154,100,433,0)
811.22102;+67,+65,;3~410.0
"DATA",811.8,154,100,434,0)
811.23102;+100,+65,;.01~405.99 
"DATA",811.8,154,100,435,0)
811.23102;+101,+65,;.01~402.00 
"DATA",811.8,154,100,436,0)
811.23102;+102,+65,;.01~402.01 
"DATA",811.8,154,100,437,0)
811.23102;+103,+65,;.01~402.10 
"DATA",811.8,154,100,438,0)
811.23102;+104,+65,;.01~402.11 
"DATA",811.8,154,100,439,0)
811.23102;+105,+65,;.01~402.90 
"DATA",811.8,154,100,440,0)
811.23102;+106,+65,;.01~402.91 
"DATA",811.8,154,100,441,0)
811.23102;+68,+65,;.01~401.0 
"DATA",811.8,154,100,442,0)
811.23102;+69,+65,;.01~403.0 
"DATA",811.8,154,100,443,0)
811.23102;+70,+65,;.01~403.00 
"DATA",811.8,154,100,444,0)
811.23102;+71,+65,;.01~403.01 
"DATA",811.8,154,100,445,0)
811.23102;+72,+65,;.01~403.1 
"DATA",811.8,154,100,446,0)
811.23102;+73,+65,;.01~403.10 
"DATA",811.8,154,100,447,0)
811.23102;+74,+65,;.01~403.11 
"DATA",811.8,154,100,448,0)
811.23102;+75,+65,;.01~403.9 
"DATA",811.8,154,100,449,0)
811.23102;+76,+65,;.01~403.90 
"DATA",811.8,154,100,450,0)
811.23102;+77,+65,;.01~403.91 
"DATA",811.8,154,100,451,0)
811.23102;+78,+65,;.01~404.0 
"DATA",811.8,154,100,452,0)
811.23102;+79,+65,;.01~401.1 
"DATA",811.8,154,100,453,0)
811.23102;+80,+65,;.01~404.00 
"DATA",811.8,154,100,454,0)
811.23102;+81,+65,;.01~404.01 
"DATA",811.8,154,100,455,0)
811.23102;+82,+65,;.01~404.02 
"DATA",811.8,154,100,456,0)
811.23102;+83,+65,;.01~404.03 
"DATA",811.8,154,100,457,0)
811.23102;+84,+65,;.01~404.1 
"DATA",811.8,154,100,458,0)
811.23102;+85,+65,;.01~404.10 
"DATA",811.8,154,100,459,0)
811.23102;+86,+65,;.01~404.11 
"DATA",811.8,154,100,460,0)
811.23102;+87,+65,;.01~404.12 
"DATA",811.8,154,100,461,0)
811.23102;+88,+65,;.01~404.13 
"DATA",811.8,154,100,462,0)
811.23102;+89,+65,;.01~404.9 
"DATA",811.8,154,100,463,0)
811.23102;+90,+65,;.01~401.9 
"DATA",811.8,154,100,464,0)
811.23102;+91,+65,;.01~404.90 
"DATA",811.8,154,100,465,0)
811.23102;+92,+65,;.01~404.91 
"DATA",811.8,154,100,466,0)
811.23102;+93,+65,;.01~404.92 
"DATA",811.8,154,100,467,0)
811.23102;+94,+65,;.01~404.93 
"DATA",811.8,154,100,468,0)
811.23102;+95,+65,;.01~405.01 
"DATA",811.8,154,100,469,0)
811.23102;+96,+65,;.01~405.09 
"DATA",811.8,154,100,470,0)
811.23102;+97,+65,;.01~405.11 
"DATA",811.8,154,100,471,0)
811.23102;+98,+65,;.01~405.19 
"DATA",811.8,154,100,472,0)
811.23102;+99,+65,;.01~405.91 
"DATA",811.8,154,100,473,0)
]]>
"DATA",811.8,154,100,474,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,475,0)
<IEN_ROOT>
"DATA",811.8,154,100,476,0)
<![CDATA[
"DATA",811.8,154,100,477,0)
66^1
"DATA",811.8,154,100,478,0)
67^1
"DATA",811.8,154,100,479,0)
68^1
"DATA",811.8,154,100,480,0)
69^10
"DATA",811.8,154,100,481,0)
70^11
"DATA",811.8,154,100,482,0)
71^12
"DATA",811.8,154,100,483,0)
72^13
"DATA",811.8,154,100,484,0)
73^14
"DATA",811.8,154,100,485,0)
74^15
"DATA",811.8,154,100,486,0)
75^16
"DATA",811.8,154,100,487,0)
76^17
"DATA",811.8,154,100,488,0)
77^18
"DATA",811.8,154,100,489,0)
78^19
"DATA",811.8,154,100,490,0)
79^2
"DATA",811.8,154,100,491,0)
80^20
"DATA",811.8,154,100,492,0)
81^21
"DATA",811.8,154,100,493,0)
82^22
"DATA",811.8,154,100,494,0)
83^23
"DATA",811.8,154,100,495,0)
84^24
"DATA",811.8,154,100,496,0)
85^25
"DATA",811.8,154,100,497,0)
86^26
"DATA",811.8,154,100,498,0)
87^27
"DATA",811.8,154,100,499,0)
88^28
"DATA",811.8,154,100,500,0)
89^29
"DATA",811.8,154,100,501,0)
90^3
"DATA",811.8,154,100,502,0)
91^30
"DATA",811.8,154,100,503,0)
92^31
"DATA",811.8,154,100,504,0)
93^32
"DATA",811.8,154,100,505,0)
94^33
"DATA",811.8,154,100,506,0)
95^34
"DATA",811.8,154,100,507,0)
96^35
"DATA",811.8,154,100,508,0)
97^36
"DATA",811.8,154,100,509,0)
98^37
"DATA",811.8,154,100,510,0)
99^38
"DATA",811.8,154,100,511,0)
100^39
"DATA",811.8,154,100,512,0)
101^4
"DATA",811.8,154,100,513,0)
102^5
"DATA",811.8,154,100,514,0)
103^6
"DATA",811.8,154,100,515,0)
104^7
"DATA",811.8,154,100,516,0)
105^8
"DATA",811.8,154,100,517,0)
106^9
"DATA",811.8,154,100,518,0)
]]>
"DATA",811.8,154,100,519,0)
</IEN_ROOT>
"DATA",811.8,154,100,520,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,521,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,522,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,154,100,523,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,154,100,524,0)
<POINT_01>VA-HTN INCORRECT DIAGNOSIS</POINT_01>
"DATA",811.8,154,100,525,0)
<INTERNAL_ENTRY_NUMBER>508</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,526,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,527,0)
<![CDATA[
"DATA",811.8,154,100,528,0)
811.5;+508,;.01~VA-HTN INCORRECT DIAGNOSIS
"DATA",811.8,154,100,529,0)
811.5;+508,;.04~OCT 16, 2002
"DATA",811.8,154,100,530,0)
811.5;+508,;100~NATIONAL
"DATA",811.8,154,100,531,0)
811.5;+508,;101~Office of Quality & Performance
"DATA",811.8,154,100,532,0)
811.52;+509,+508,;.01~HF.INCORRECT HTN DIAGNOSIS
"DATA",811.8,154,100,533,0)
811.53;+510,+508,;.01~07/11/2006@14:35:55
"DATA",811.8,154,100,534,0)
811.53;+510,+508,;1~REDINGTON,PATRICK
"DATA",811.8,154,100,535,0)
811.53;+510,+508,;2~WP-start~1
"DATA",811.8,154,100,536,0)
Exchange Stub
"DATA",811.8,154,100,537,0)
]]>
"DATA",811.8,154,100,538,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,539,0)
<IEN_ROOT>
"DATA",811.8,154,100,540,0)
<![CDATA[
"DATA",811.8,154,100,541,0)
509^1
"DATA",811.8,154,100,542,0)
510^1
"DATA",811.8,154,100,543,0)
]]>
"DATA",811.8,154,100,544,0)
</IEN_ROOT>
"DATA",811.8,154,100,545,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,546,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,547,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,154,100,548,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,154,100,549,0)
<POINT_01>VA-HTN MED &amp; OTHER INTERVENTIONS</POINT_01>
"DATA",811.8,154,100,550,0)
<INTERNAL_ENTRY_NUMBER>509</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,551,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,552,0)
<![CDATA[
"DATA",811.8,154,100,553,0)
811.5;+509,;.01~VA-HTN MED & OTHER INTERVENTIONS
"DATA",811.8,154,100,554,0)
811.5;+509,;.04~OCT 16, 2002
"DATA",811.8,154,100,555,0)
811.5;+509,;1~WP-start~1
"DATA",811.8,154,100,556,0)
Interventions to improve BP control related to medications or pt. refusal.
"DATA",811.8,154,100,557,0)
811.5;+509,;100~NATIONAL
"DATA",811.8,154,100,558,0)
811.5;+509,;101~Office of Quality & Performance
"DATA",811.8,154,100,559,0)
811.52;+510,+509,;.01~HF.HTN NO MED CHANGE - SIDE EFFECTS FROM RX
"DATA",811.8,154,100,560,0)
811.52;+511,+509,;.01~HF.HTN NO MED CHANGE - OTHER
"DATA",811.8,154,100,561,0)
811.52;+512,+509,;.01~HF.HTN MEDICATIONS ADJUSTED
"DATA",811.8,154,100,562,0)
811.52;+513,+509,;.01~HF.HTN REFUSAL OF MED INTERVENTION
"DATA",811.8,154,100,563,0)
811.52;+514,+509,;.01~HF.HTN EVALUATION OF RESISTANT/SECONDARY
"DATA",811.8,154,100,564,0)
811.52;+515,+509,;.01~HF.HTN NO MED CHANGE - BP CONTROLLED
"DATA",811.8,154,100,565,0)
811.52;+516,+509,;.01~HF.HTN NO MED CHANGE - COMORBID ILLNESS
"DATA",811.8,154,100,566,0)
811.52;+517,+509,;.01~HF.HTN NO MED CHANGE - LIMITED LIFE EXP
"DATA",811.8,154,100,567,0)
811.52;+518,+509,;.01~HF.HTN NO MED CHANGE - NONCOMPLIANCE
"DATA",811.8,154,100,568,0)
811.53;+519,+509,;.01~07/11/2006@14:35:55
"DATA",811.8,154,100,569,0)
811.53;+519,+509,;1~REDINGTON,PATRICK
"DATA",811.8,154,100,570,0)
811.53;+519,+509,;2~WP-start~1
"DATA",811.8,154,100,571,0)
Exchange Stub
"DATA",811.8,154,100,572,0)
]]>
"DATA",811.8,154,100,573,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,574,0)
<IEN_ROOT>
"DATA",811.8,154,100,575,0)
<![CDATA[
"DATA",811.8,154,100,576,0)
510^10
"DATA",811.8,154,100,577,0)
511^2
"DATA",811.8,154,100,578,0)
512^3
"DATA",811.8,154,100,579,0)
513^4
"DATA",811.8,154,100,580,0)
514^5
"DATA",811.8,154,100,581,0)
515^6
"DATA",811.8,154,100,582,0)
516^7
"DATA",811.8,154,100,583,0)
517^8
"DATA",811.8,154,100,584,0)
518^9
"DATA",811.8,154,100,585,0)
519^1
"DATA",811.8,154,100,586,0)
]]>
"DATA",811.8,154,100,587,0)
</IEN_ROOT>
"DATA",811.8,154,100,588,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,589,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,590,0)
<FILE_NAME>REMINDER TERM</FILE_NAME>
"DATA",811.8,154,100,591,0)
<FILE_NUMBER>811.5</FILE_NUMBER>
"DATA",811.8,154,100,592,0)
<POINT_01>VA-HTN EDUCATIONAL INTERVENTIONS</POINT_01>
"DATA",811.8,154,100,593,0)
<INTERNAL_ENTRY_NUMBER>510</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,594,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,595,0)
<![CDATA[
"DATA",811.8,154,100,596,0)
811.5;+510,;.01~VA-HTN EDUCATIONAL INTERVENTIONS
"DATA",811.8,154,100,597,0)
811.5;+510,;.04~OCT 16, 2002
"DATA",811.8,154,100,598,0)
811.5;+510,;1~WP-start~2
"DATA",811.8,154,100,599,0)
Educational interventions to improve BP control. Includes nutrition, 
"DATA",811.8,154,100,600,0)
exercise and specific interventions for patients.  
"DATA",811.8,154,100,601,0)
811.5;+510,;100~NATIONAL
"DATA",811.8,154,100,602,0)
811.5;+510,;101~Office of Quality & Performance
"DATA",811.8,154,100,603,0)
811.52;+511,+510,;.01~HF.HTN LIFESTYLE MODIFICATIONS RECOMMENDED
"DATA",811.8,154,100,604,0)
811.52;+512,+510,;.01~HF.HTN NO EDUC INTERVENTION WARRANTED
"DATA",811.8,154,100,605,0)
811.52;+513,+510,;.01~ED.VA-HTN MEDICATION ADHERENCE
"DATA",811.8,154,100,606,0)
811.52;+514,+510,;.01~ED.VA-HTN EXERCISE
"DATA",811.8,154,100,607,0)
811.52;+515,+510,;.01~ED.VA-HTN NUTRITION EDUCATION
"DATA",811.8,154,100,608,0)
811.53;+516,+510,;.01~07/11/2006@14:35:55
"DATA",811.8,154,100,609,0)
811.53;+516,+510,;1~REDINGTON,PATRICK
"DATA",811.8,154,100,610,0)
811.53;+516,+510,;2~WP-start~1
"DATA",811.8,154,100,611,0)
Exchange Stub
"DATA",811.8,154,100,612,0)
]]>
"DATA",811.8,154,100,613,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,614,0)
<IEN_ROOT>
"DATA",811.8,154,100,615,0)
<![CDATA[
"DATA",811.8,154,100,616,0)
511^1
"DATA",811.8,154,100,617,0)
512^2
"DATA",811.8,154,100,618,0)
513^4
"DATA",811.8,154,100,619,0)
514^5
"DATA",811.8,154,100,620,0)
515^6
"DATA",811.8,154,100,621,0)
516^1
"DATA",811.8,154,100,622,0)
]]>
"DATA",811.8,154,100,623,0)
</IEN_ROOT>
"DATA",811.8,154,100,624,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,625,0)
<FILEMAN_FILE>
"DATA",811.8,154,100,626,0)
<FILE_NAME>REMINDER DEFINITION</FILE_NAME>
"DATA",811.8,154,100,627,0)
<FILE_NUMBER>811.9</FILE_NUMBER>
"DATA",811.8,154,100,628,0)
<POINT_01>VA-HTN ASSESSMENT BP &gt;=160/100</POINT_01>
"DATA",811.8,154,100,629,0)
<INTERNAL_ENTRY_NUMBER>199</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,154,100,630,0)
<FILEMAN_FDA>
"DATA",811.8,154,100,631,0)
<![CDATA[
"DATA",811.8,154,100,632,0)
811.9;+199,;.01~VA-HTN ASSESSMENT BP >=160/100
"DATA",811.8,154,100,633,0)
811.9;+199,;1.2~HTN Assess for Elevated BP>=160/100
"DATA",811.8,154,100,634,0)
811.9;+199,;2~WP-start~36
"DATA",811.8,154,100,635,0)
This reminder is due every 1 month for patients whose last DBP was >99 
"DATA",811.8,154,100,636,0)
or the last SBP was > 159 and the patient has a diagnosis of HTN.  
"DATA",811.8,154,100,637,0)
 
"DATA",811.8,154,100,638,0)
The reminder becomes not applicable if a BP lower than 160/100 is entered.
"DATA",811.8,154,100,639,0)
 
"DATA",811.8,154,100,640,0)
The reminder is resolved for 1 month by recording at least one
"DATA",811.8,154,100,641,0)
intervention from the list below.
"DATA",811.8,154,100,642,0)
 
"DATA",811.8,154,100,643,0)
  Medication   (reminder term HTN MED & OTHER INTERVENTIONS) 
"DATA",811.8,154,100,644,0)
     HTN MEDICATIONS ADJUSTED                   (HF)
"DATA",811.8,154,100,645,0)
     HTN REFUSAL OF MED INTERVENTION            (HF)
"DATA",811.8,154,100,646,0)
     HTN EVALUATION OF RESISTANT/SECONDARY      (HF)
"DATA",811.8,154,100,647,0)
     HTN NO MED CHANGE - BP CONTROLLED          (HF)
"DATA",811.8,154,100,648,0)
     HTN NO MED CHANGE - COMORBID ILLNESS       (HF)
"DATA",811.8,154,100,649,0)
     HTN NO MED CHANGE - SIDE EFFECTS FROM RX   (HF)
"DATA",811.8,154,100,650,0)
     HTN NO MED CHANGE - LIMITED LIFE EXP       (HF)
"DATA",811.8,154,100,651,0)
     HTN NO MED CHANGE - NONCOMPLIANCE          (HF)
"DATA",811.8,154,100,652,0)
     HTN NO MED CHANGE - OTHER                  (HF)
"DATA",811.8,154,100,653,0)
 
"DATA",811.8,154,100,654,0)
Educational interventions are optional:
"DATA",811.8,154,100,655,0)
  Education  (reminder term HTN EDUCATIONAL INTERVENTIONS)
"DATA",811.8,154,100,656,0)
     VA-HTN EXERCISE EDUCATION                    (ED)
"DATA",811.8,154,100,657,0)
     VA-HTN NUTRITION EDUCATION                   (ED)
"DATA",811.8,154,100,658,0)
     HTN LIFESTYLE MODIFICATIONS RECOMMENDED      (HF)
"DATA",811.8,154,100,659,0)
     VA-HTN MEDICATION ADHERENCE                  (ED)
"DATA",811.8,154,100,660,0)
     HTN NO EDUC INTERVENTION WARRANTED           (HF)
"DATA",811.8,154,100,661,0)
 
"DATA",811.8,154,100,662,0)
The reminder becomes not applicable if the health factor of INCORRECT HTN 
"DATA",811.8,154,100,663,0)
DIAGNOSIS is entered.  The reminder is reactivated the next time that an 
"DATA",811.8,154,100,664,0)
ICD code for HTN is entered.  
"DATA",811.8,154,100,665,0)
 
"DATA",811.8,154,100,666,0)
The following findings are included in the reminder to provide additional 
"DATA",811.8,154,100,667,0)
information in the clinical maintenance display:
"DATA",811.8,154,100,668,0)
 
"DATA",811.8,154,100,669,0)
Any diabetes diagnoses, drug classes for HTN meds (CV100, CV150, 
"DATA",811.8,154,100,670,0)
CV400, CV490, CV700, CV709, CV800, CV805), patient's BMI.
"DATA",811.8,154,100,671,0)
811.9;+199,;3~WP-start~7
"DATA",811.8,154,100,672,0)
To modify this reminder from its distributed definition, copy the 
"DATA",811.8,154,100,673,0)
reminder to a new reminder and then make the modifications necessary to 
"DATA",811.8,154,100,674,0)
define your sites guideline.  
"DATA",811.8,154,100,675,0)
 
"DATA",811.8,154,100,676,0)
This reminder has customized cohort logic that uses the MRD function to 
"DATA",811.8,154,100,677,0)
use the INCORRECT DIAGNOSIS heath factor or the ICD code - whichever is 
"DATA",811.8,154,100,678,0)
entered most recently.
"DATA",811.8,154,100,679,0)
811.9;+199,;30~(SEX)&(AGE)&FI(2)&FI(13)&FF(1)
"DATA",811.8,154,100,680,0)
811.9;+199,;31~(SEX)&(AGE)&FI(2)&FI(13)&FF(1)
"DATA",811.8,154,100,681,0)
811.9;+199,;32~5
"DATA",811.8,154,100,682,0)
811.9;+199,;33~SEX;AGE;2;13;FF1
"DATA",811.8,154,100,683,0)
811.9;+199,;35~(0)!FI(27)
"DATA",811.8,154,100,684,0)
811.9;+199,;36~1
"DATA",811.8,154,100,685,0)
811.9;+199,;37~27
"DATA",811.8,154,100,686,0)
811.9;+199,;40~0
"DATA",811.8,154,100,687,0)
811.9;+199,;42~3
"DATA",811.8,154,100,688,0)
811.9;+199,;43~7;9;28
"DATA",811.8,154,100,689,0)
811.9;+199,;62~0
"DATA",811.8,154,100,690,0)
811.9;+199,;63~0
"DATA",811.8,154,100,691,0)
811.9;+199,;67~0
"DATA",811.8,154,100,692,0)
811.9;+199,;68~0
"DATA",811.8,154,100,693,0)
811.9;+199,;72~0
"DATA",811.8,154,100,694,0)
811.9;+199,;73~0
"DATA",811.8,154,100,695,0)
811.9;+199,;77~0
"DATA",811.8,154,100,696,0)
811.9;+199,;78~0
"DATA",811.8,154,100,697,0)
811.9;+199,;100~NATIONAL
"DATA",811.8,154,100,698,0)
811.9;+199,;101~Office of Quality & Performance
"DATA",811.8,154,100,699,0)
811.9;+199,;103~C
"DATA",811.8,154,100,700,0)
811.9001;+200,+199,;.01~07/11/2006@14:35:55
"DATA",811.8,154,100,701,0)
811.9001;+200,+199,;1~REDINGTON,PATRICK
"DATA",811.8,154,100,702,0)
811.9001;+200,+199,;2~WP-start~1
"DATA",811.8,154,100,703,0)
Exchange Stub
"DATA",811.8,154,100,704,0)
811.9002;+201,+199,;.01~http://www.oqp.med.va.gov/cpg/HTN/HTN_base.htm
"DATA",811.8,154,100,705,0)
811.9002;+201,+199,;.02~VA HTN Guideline Web Page
"DATA",811.8,154,100,706,0)
811.9002;+202,+199,;.01~http://www.oqp.med.va.gov/cpg/HTN/HTN_cpg/algo1frame.htm
"DATA",811.8,154,100,707,0)
811.9002;+202,+199,;.02~VA HTN Guideline Algorithm
"DATA",811.8,154,100,708,0)
811.9002;+203,+199,;.01~http://www.oqp.med.va.gov/cpg/HTN/G/HTN_pock.pdf
"DATA",811.8,154,100,709,0)
811.9002;+203,+199,;.02~VA HTN Guideline Pocket Card
"DATA",811.8,154,100,710,0)
811.9002;+204,+199,;.01~http://www.oqp.med.va.gov/cpg/HTN/HTN_cpg/AnnKframe.htm
"DATA",811.8,154,100,711,0)
811.9002;+204,+199,;.02~VA HTN Guideline Diet and Lifestyle Counseling
"DATA",811.8,154,100,712,0)
811.902;+205,+199,;.01~VM.BLOOD PRESSURE
"DATA",811.8,154,100,713,0)
811.902;+205,+199,;8~AND
"DATA",811.8,154,100,714,0)
811.902;+205,+199,;14~I $P(V,"/",1)>159!($P(V,"/",2)>99)
"DATA",811.8,154,100,715,0)
811.902;+205,+199,;22~I $P(V,"/",1)>159!($P(V,"/",2)>99)
"DATA",811.8,154,100,716,0)
811.902;+205,+199,;24~0
"DATA",811.8,154,100,717,0)
811.902;+205,+199,;25~0
"DATA",811.8,154,100,718,0)
811.902;+206,+199,;.01~TX.VA-HYPERTENSION CODES
"DATA",811.8,154,100,719,0)
811.902;+206,+199,;8~AND
"DATA",811.8,154,100,720,0)
811.902;+206,+199,;9~T-18M
"DATA",811.8,154,100,721,0)
811.902;+206,+199,;24~0
"DATA",811.8,154,100,722,0)
811.902;+206,+199,;25~0
"DATA",811.8,154,100,723,0)
811.902;+207,+199,;.01~RT.VA-HTN MED & OTHER INTERVENTIONS
"DATA",811.8,154,100,724,0)
811.902;+207,+199,;7~OR
"DATA",811.8,154,100,725,0)
811.902;+207,+199,;9~T-2Y
"DATA",811.8,154,100,726,0)
811.902;+207,+199,;24~0
"DATA",811.8,154,100,727,0)
811.902;+207,+199,;25~0
"DATA",811.8,154,100,728,0)
811.902;+208,+199,;.01~RT.VA-HTN EDUCATIONAL INTERVENTIONS
"DATA",811.8,154,100,729,0)
811.902;+208,+199,;9~T-2Y
"DATA",811.8,154,100,730,0)
811.902;+208,+199,;24~0
"DATA",811.8,154,100,731,0)
811.902;+208,+199,;25~0
"DATA",811.8,154,100,732,0)
811.902;+209,+199,;.01~CF.VA-BMI
"DATA",811.8,154,100,733,0)
811.902;+209,+199,;24~0
"DATA",811.8,154,100,734,0)
811.902;+209,+199,;25~0
"DATA",811.8,154,100,735,0)
811.902;+210,+199,;.01~RT.VA-HTN INCORRECT DIAGNOSIS
"DATA",811.8,154,100,736,0)
811.902;+210,+199,;24~0
"DATA",811.8,154,100,737,0)
811.902;+210,+199,;25~0
"DATA",811.8,154,100,738,0)
811.925;+211,+199,;.01~1
"DATA",811.8,154,100,739,0)
811.925;+211,+199,;3~MRD(2)>MRD(9)
"DATA",811.8,154,100,740,0)
811.925;+211,+199,;10~FN(1)>FN(2)
"DATA",811.8,154,100,741,0)
811.925;+211,+199,;41~0
"DATA",811.8,154,100,742,0)
811.925;+211,+199,;42~0
"DATA",811.8,154,100,743,0)
811.9255;+212,+211,+199,;.01~1
"DATA",811.8,154,100,744,0)
811.9255;+212,+211,+199,;.02~MRD
"DATA",811.8,154,100,745,0)
811.9255;+213,+211,+199,;.01~2
"DATA",811.8,154,100,746,0)
811.9255;+213,+211,+199,;.02~MRD
"DATA",811.8,154,100,747,0)
811.9256;+214,+212,+211,+199,;.01~2
"DATA",811.8,154,100,748,0)
811.9256;+215,+213,+211,+199,;.01~9
"DATA",811.8,154,100,749,0)
811.97;+216,+199,;.01~1M
"DATA",811.8,154,100,750,0)
811.97;+216,+199,;5~0
"DATA",811.8,154,100,751,0)
811.97;+216,+199,;6~0
"DATA",811.8,154,100,752,0)
]]>
"DATA",811.8,154,100,753,0)
</FILEMAN_FDA>
"DATA",811.8,154,100,754,0)
<IEN_ROOT>
"DATA",811.8,154,100,755,0)
<![CDATA[
"DATA",811.8,154,100,756,0)
200^1
"DATA",811.8,154,100,757,0)
201^1
"DATA",811.8,154,100,758,0)
202^2
"DATA",811.8,154,100,759,0)
203^3
"DATA",811.8,154,100,760,0)
204^4
"DATA",811.8,154,100,761,0)
205^13
"DATA",811.8,154,100,762,0)
206^2
"DATA",811.8,154,100,763,0)
207^27
"DATA",811.8,154,100,764,0)
208^28
"DATA",811.8,154,100,765,0)
209^7
"DATA",811.8,154,100,766,0)
210^9
"DATA",811.8,154,100,767,0)
211^1
"DATA",811.8,154,100,768,0)
212^1
"DATA",811.8,154,100,769,0)
213^2
"DATA",811.8,154,100,770,0)
214^1
"DATA",811.8,154,100,771,0)
215^1
"DATA",811.8,154,100,772,0)
216^1
"DATA",811.8,154,100,773,0)
]]>
"DATA",811.8,154,100,774,0)
</IEN_ROOT>
"DATA",811.8,154,100,775,0)
</FILEMAN_FILE>
"DATA",811.8,154,100,776,0)
<INDEX>
"DATA",811.8,154,100,777,0)
<NUMBER_OF_COMPONENTS>26</NUMBER_OF_COMPONENTS>
"DATA",811.8,154,100,778,0)
<COMPONENT>
"DATA",811.8,154,100,779,0)
<M_ROUTINE_START>55</M_ROUTINE_START>
"DATA",811.8,154,100,780,0)
<ROUTINE_CODE_END>86</ROUTINE_CODE_END>
"DATA",811.8,154,100,781,0)
<ROUTINE_CODE_START>59</ROUTINE_CODE_START>
"DATA",811.8,154,100,782,0)
</COMPONENT>
"DATA",811.8,154,100,783,0)
<COMPONENT>
"DATA",811.8,154,100,784,0)
<FDA_END>102</FDA_END>
"DATA",811.8,154,100,785,0)
<FDA_START>97</FDA_START>
"DATA",811.8,154,100,786,0)
<FILE_START>90</FILE_START>
"DATA",811.8,154,100,787,0)
<IEN_ROOT_END>107</IEN_ROOT_END>
"DATA",811.8,154,100,788,0)
<IEN_ROOT_START>107</IEN_ROOT_START>
"DATA",811.8,154,100,789,0)
</COMPONENT>
"DATA",811.8,154,100,790,0)
<COMPONENT>
"DATA",811.8,154,100,791,0)
<FDA_END>126</FDA_END>
"DATA",811.8,154,100,792,0)
<FDA_START>118</FDA_START>
"DATA",811.8,154,100,793,0)
<FILE_START>111</FILE_START>
"DATA",811.8,154,100,794,0)
</COMPONENT>
"DATA",811.8,154,100,795,0)
<COMPONENT>
"DATA",811.8,154,100,796,0)
<FDA_END>169</FDA_END>
"DATA",811.8,154,100,797,0)
<FDA_START>137</FDA_START>
"DATA",811.8,154,100,798,0)
<FILE_START>130</FILE_START>
"DATA",811.8,154,100,799,0)
</COMPONENT>
"DATA",811.8,154,100,800,0)
<COMPONENT>
"DATA",811.8,154,100,801,0)
<FDA_END>185</FDA_END>
"DATA",811.8,154,100,802,0)
<FDA_START>180</FDA_START>
"DATA",811.8,154,100,803,0)
<FILE_START>173</FILE_START>
"DATA",811.8,154,100,804,0)
</COMPONENT>
"DATA",811.8,154,100,805,0)
<COMPONENT>
"DATA",811.8,154,100,806,0)
<FDA_END>196</FDA_END>
"DATA",811.8,154,100,807,0)
<FDA_START>196</FDA_START>
"DATA",811.8,154,100,808,0)
<FILE_START>189</FILE_START>
"DATA",811.8,154,100,809,0)
</COMPONENT>
"DATA",811.8,154,100,810,0)
<COMPONENT>
"DATA",811.8,154,100,811,0)
<FDA_END>208</FDA_END>
"DATA",811.8,154,100,812,0)
<FDA_START>207</FDA_START>
"DATA",811.8,154,100,813,0)
<FILE_START>200</FILE_START>
"DATA",811.8,154,100,814,0)
</COMPONENT>
"DATA",811.8,154,100,815,0)
<COMPONENT>
"DATA",811.8,154,100,816,0)
<FDA_END>220</FDA_END>
"DATA",811.8,154,100,817,0)
<FDA_START>219</FDA_START>
"DATA",811.8,154,100,818,0)
<FILE_START>212</FILE_START>
"DATA",811.8,154,100,819,0)
</COMPONENT>
"DATA",811.8,154,100,820,0)
<COMPONENT>
"DATA",811.8,154,100,821,0)
<FDA_END>233</FDA_END>
"DATA",811.8,154,100,822,0)
<FDA_START>231</FDA_START>
"DATA",811.8,154,100,823,0)
<FILE_START>224</FILE_START>
"DATA",811.8,154,100,824,0)
</COMPONENT>
"DATA",811.8,154,100,825,0)
<COMPONENT>
"DATA",811.8,154,100,826,0)
<FDA_END>246</FDA_END>
"DATA",811.8,154,100,827,0)
<FDA_START>244</FDA_START>
"DATA",811.8,154,100,828,0)
<FILE_START>237</FILE_START>
"DATA",811.8,154,100,829,0)
</COMPONENT>
"DATA",811.8,154,100,830,0)
<COMPONENT>
"DATA",811.8,154,100,831,0)
<FDA_END>259</FDA_END>
"DATA",811.8,154,100,832,0)
<FDA_START>257</FDA_START>
"DATA",811.8,154,100,833,0)
<FILE_START>250</FILE_START>
"DATA",811.8,154,100,834,0)
</COMPONENT>
"DATA",811.8,154,100,835,0)
<COMPONENT>
"DATA",811.8,154,100,836,0)
<FDA_END>272</FDA_END>
"DATA",811.8,154,100,837,0)
<FDA_START>270</FDA_START>
"DATA",811.8,154,100,838,0)
<FILE_START>263</FILE_START>
"DATA",811.8,154,100,839,0)
</COMPONENT>
"DATA",811.8,154,100,840,0)
<COMPONENT>
"DATA",811.8,154,100,841,0)
<FDA_END>285</FDA_END>
"DATA",811.8,154,100,842,0)
<FDA_START>283</FDA_START>
"DATA",811.8,154,100,843,0)
<FILE_START>276</FILE_START>
"DATA",811.8,154,100,844,0)
</COMPONENT>
"DATA",811.8,154,100,845,0)
<COMPONENT>
"DATA",811.8,154,100,846,0)
<FDA_END>298</FDA_END>
"DATA",811.8,154,100,847,0)
<FDA_START>296</FDA_START>
"DATA",811.8,154,100,848,0)
<FILE_START>289</FILE_START>
"DATA",811.8,154,100,849,0)
</COMPONENT>
"DATA",811.8,154,100,850,0)
<COMPONENT>
"DATA",811.8,154,100,851,0)
<FDA_END>311</FDA_END>
"DATA",811.8,154,100,852,0)
<FDA_START>309</FDA_START>
"DATA",811.8,154,100,853,0)
<FILE_START>302</FILE_START>
"DATA",811.8,154,100,854,0)
</COMPONENT>
"DATA",811.8,154,100,855,0)
<COMPONENT>
"DATA",811.8,154,100,856,0)
<FDA_END>324</FDA_END>
"DATA",811.8,154,100,857,0)
<FDA_START>322</FDA_START>
"DATA",811.8,154,100,858,0)
<FILE_START>315</FILE_START>
"DATA",811.8,154,100,859,0)
</COMPONENT>
"DATA",811.8,154,100,860,0)
<COMPONENT>
"DATA",811.8,154,100,861,0)
<FDA_END>337</FDA_END>
"DATA",811.8,154,100,862,0)
<FDA_START>335</FDA_START>
"DATA",811.8,154,100,863,0)
<FILE_START>328</FILE_START>
"DATA",811.8,154,100,864,0)
</COMPONENT>
"DATA",811.8,154,100,865,0)
<COMPONENT>
"DATA",811.8,154,100,866,0)
<FDA_END>350</FDA_END>
"DATA",811.8,154,100,867,0)
<FDA_START>348</FDA_START>
"DATA",811.8,154,100,868,0)
<FILE_START>341</FILE_START>
"DATA",811.8,154,100,869,0)
</COMPONENT>
"DATA",811.8,154,100,870,0)
<COMPONENT>
"DATA",811.8,154,100,871,0)
<FDA_END>363</FDA_END>
"DATA",811.8,154,100,872,0)
<FDA_START>361</FDA_START>
"DATA",811.8,154,100,873,0)
<FILE_START>354</FILE_START>
"DATA",811.8,154,100,874,0)
</COMPONENT>
"DATA",811.8,154,100,875,0)
<COMPONENT>
"DATA",811.8,154,100,876,0)
<FDA_END>376</FDA_END>
"DATA",811.8,154,100,877,0)
<FDA_START>374</FDA_START>
"DATA",811.8,154,100,878,0)
<FILE_START>367</FILE_START>
"DATA",811.8,154,100,879,0)
</COMPONENT>
"DATA",811.8,154,100,880,0)
<COMPONENT>
"DATA",811.8,154,100,881,0)
<FDA_END>406</FDA_END>
"DATA",811.8,154,100,882,0)
<FDA_START>387</FDA_START>
"DATA",811.8,154,100,883,0)
<FILE_START>380</FILE_START>
"DATA",811.8,154,100,884,0)
<IEN_ROOT_END>411</IEN_ROOT_END>
"DATA",811.8,154,100,885,0)
<IEN_ROOT_START>411</IEN_ROOT_START>
"DATA",811.8,154,100,886,0)
</COMPONENT>
"DATA",811.8,154,100,887,0)
<COMPONENT>
"DATA",811.8,154,100,888,0)
<FDA_END>472</FDA_END>
"DATA",811.8,154,100,889,0)
<FDA_START>422</FDA_START>
"DATA",811.8,154,100,890,0)
<FILE_START>415</FILE_START>
"DATA",811.8,154,100,891,0)
<IEN_ROOT_END>517</IEN_ROOT_END>
"DATA",811.8,154,100,892,0)
<IEN_ROOT_START>477</IEN_ROOT_START>
"DATA",811.8,154,100,893,0)
</COMPONENT>
"DATA",811.8,154,100,894,0)
<COMPONENT>
"DATA",811.8,154,100,895,0)
<FDA_END>536</FDA_END>
"DATA",811.8,154,100,896,0)
<FDA_START>528</FDA_START>
"DATA",811.8,154,100,897,0)
<FILE_START>521</FILE_START>
"DATA",811.8,154,100,898,0)
<IEN_ROOT_END>542</IEN_ROOT_END>
"DATA",811.8,154,100,899,0)
<IEN_ROOT_START>541</IEN_ROOT_START>
"DATA",811.8,154,100,900,0)
</COMPONENT>
"DATA",811.8,154,100,901,0)
<COMPONENT>
"DATA",811.8,154,100,902,0)
<FDA_END>571</FDA_END>
"DATA",811.8,154,100,903,0)
<FDA_START>553</FDA_START>
"DATA",811.8,154,100,904,0)
<FILE_START>546</FILE_START>
"DATA",811.8,154,100,905,0)
<IEN_ROOT_END>585</IEN_ROOT_END>
"DATA",811.8,154,100,906,0)
<IEN_ROOT_START>576</IEN_ROOT_START>
"DATA",811.8,154,100,907,0)
</COMPONENT>
"DATA",811.8,154,100,908,0)
<COMPONENT>
"DATA",811.8,154,100,909,0)
<FDA_END>611</FDA_END>
"DATA",811.8,154,100,910,0)
<FDA_START>596</FDA_START>
"DATA",811.8,154,100,911,0)
<FILE_START>589</FILE_START>
"DATA",811.8,154,100,912,0)
<IEN_ROOT_END>621</IEN_ROOT_END>
"DATA",811.8,154,100,913,0)
<IEN_ROOT_START>616</IEN_ROOT_START>
"DATA",811.8,154,100,914,0)
</COMPONENT>
"DATA",811.8,154,100,915,0)
<COMPONENT>
"DATA",811.8,154,100,916,0)
<FDA_END>751</FDA_END>
"DATA",811.8,154,100,917,0)
<FDA_START>632</FDA_START>
"DATA",811.8,154,100,918,0)
<FILE_START>625</FILE_START>
"DATA",811.8,154,100,919,0)
<IEN_ROOT_END>772</IEN_ROOT_END>
"DATA",811.8,154,100,920,0)
<IEN_ROOT_START>756</IEN_ROOT_START>
"DATA",811.8,154,100,921,0)
</COMPONENT>
"DATA",811.8,154,100,922,0)
</INDEX>
"DATA",811.8,154,100,923,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,154,110,0)
^811.804^49^49
"DATA",811.8,154,110,1,0)
Reminder:    VA-HTN ASSESSMENT BP >=160/100
"DATA",811.8,154,110,2,0)
Source:      REDINGTON,PATRICK at SALT LAKE CITY OIFO
"DATA",811.8,154,110,3,0)
Date Packed: 07/11/2006@14:35:42
"DATA",811.8,154,110,4,0)
Package Version: 2.0
"DATA",811.8,154,110,5,0)

"DATA",811.8,154,110,6,0)
Description:
"DATA",811.8,154,110,7,0)
This reminder is due every 1 month for patients whose last DBP was >99 
"DATA",811.8,154,110,8,0)
or the last SBP was > 159 and the patient has a diagnosis of HTN.  
"DATA",811.8,154,110,9,0)
 
"DATA",811.8,154,110,10,0)
The reminder becomes not applicable if a BP lower than 160/100 is entered.
"DATA",811.8,154,110,11,0)
 
"DATA",811.8,154,110,12,0)
The reminder is resolved for 1 month by recording at least one
"DATA",811.8,154,110,13,0)
intervention from the list below.
"DATA",811.8,154,110,14,0)
 
"DATA",811.8,154,110,15,0)
  Medication   (reminder term HTN MED & OTHER INTERVENTIONS) 
"DATA",811.8,154,110,16,0)
     HTN MEDICATIONS ADJUSTED                   (HF)
"DATA",811.8,154,110,17,0)
     HTN REFUSAL OF MED INTERVENTION            (HF)
"DATA",811.8,154,110,18,0)
     HTN EVALUATION OF RESISTANT/SECONDARY      (HF)
"DATA",811.8,154,110,19,0)
     HTN NO MED CHANGE - BP CONTROLLED          (HF)
"DATA",811.8,154,110,20,0)
     HTN NO MED CHANGE - COMORBID ILLNESS       (HF)
"DATA",811.8,154,110,21,0)
     HTN NO MED CHANGE - SIDE EFFECTS FROM RX   (HF)
"DATA",811.8,154,110,22,0)
     HTN NO MED CHANGE - LIMITED LIFE EXP       (HF)
"DATA",811.8,154,110,23,0)
     HTN NO MED CHANGE - NONCOMPLIANCE          (HF)
"DATA",811.8,154,110,24,0)
     HTN NO MED CHANGE - OTHER                  (HF)
"DATA",811.8,154,110,25,0)
 
"DATA",811.8,154,110,26,0)
Educational interventions are optional:
"DATA",811.8,154,110,27,0)
  Education  (reminder term HTN EDUCATIONAL INTERVENTIONS)
"DATA",811.8,154,110,28,0)
     VA-HTN EXERCISE EDUCATION                    (ED)
"DATA",811.8,154,110,29,0)
     VA-HTN NUTRITION EDUCATION                   (ED)
"DATA",811.8,154,110,30,0)
     HTN LIFESTYLE MODIFICATIONS RECOMMENDED      (HF)
"DATA",811.8,154,110,31,0)
     VA-HTN MEDICATION ADHERENCE                  (ED)
"DATA",811.8,154,110,32,0)
     HTN NO EDUC INTERVENTION WARRANTED           (HF)
"DATA",811.8,154,110,33,0)
 
"DATA",811.8,154,110,34,0)
The reminder becomes not applicable if the health factor of INCORRECT HTN 
"DATA",811.8,154,110,35,0)
DIAGNOSIS is entered.  The reminder is reactivated the next time that an 
"DATA",811.8,154,110,36,0)
ICD code for HTN is entered.  
"DATA",811.8,154,110,37,0)
 
"DATA",811.8,154,110,38,0)
The following findings are included in the reminder to provide additional 
"DATA",811.8,154,110,39,0)
information in the clinical maintenance display:
"DATA",811.8,154,110,40,0)
 
"DATA",811.8,154,110,41,0)
Any diabetes diagnoses, drug classes for HTN meds (CV100, CV150, 
"DATA",811.8,154,110,42,0)
CV400, CV490, CV700, CV709, CV800, CV805), patient's BMI.
"DATA",811.8,154,110,43,0)

"DATA",811.8,154,110,44,0)

"DATA",811.8,154,110,45,0)
Keywords:
"DATA",811.8,154,110,46,0)
HTN
"DATA",811.8,154,110,47,0)

"DATA",811.8,154,110,48,0)

"DATA",811.8,154,110,49,0)
Components:
"DATA",811.8,154,115)
REMINDER
"FIA",800)
CLINICAL REMINDER PARAMETERS
"FIA",800,0)
^PXRM(800,
"FIA",800,0,0)
800O
"FIA",800,0,1)
y^y^f^^^^n
"FIA",800,0,10)

"FIA",800,0,11)

"FIA",800,0,"RLRO")

"FIA",800,0,"VR")
2.0^PXRM
"FIA",800,800)
0
"FIA",800,800.01)
0
"FIA",800,800.016)
0
"FIA",800,800.02)
0
"FIA",800,800.04)
0
"FIA",800,800.41)
0
"FIA",801.41)
REMINDER DIALOG
"FIA",801.41,0)
^PXRMD(801.41,
"FIA",801.41,0,0)
801.41IO
"FIA",801.41,0,1)
y^y^f^^^^n
"FIA",801.41,0,10)

"FIA",801.41,0,11)

"FIA",801.41,0,"RLRO")

"FIA",801.41,0,"VR")
2.0^PXRM
"FIA",801.41,801.41)
0
"FIA",801.41,801.4118)
0
"FIA",801.41,801.412)
0
"FIA",801.41,801.4125)
0
"FIA",801.41,801.4135)
0
"FIA",801.41,801.4145)
0
"FIA",801.41,801.44)
0
"FIA",801.41,801.442)
0
"FIA",801.5)
REMINDER DIALOG PATIENT ASSOCIATION
"FIA",801.5,0)
^PXRMD(801.5,
"FIA",801.5,0,0)
801.5
"FIA",801.5,0,1)
y^y^f^^^^n
"FIA",801.5,0,10)

"FIA",801.5,0,11)

"FIA",801.5,0,"RLRO")

"FIA",801.5,0,"VR")
2.0^PXRM
"FIA",801.5,801.5)
0
"FIA",801.55)
REMINDER GEC DIALOG ASSOCIATION HISTORY
"FIA",801.55,0)
^PXRMD(801.55,
"FIA",801.55,0,0)
801.55P
"FIA",801.55,0,1)
y^y^f^^^^n
"FIA",801.55,0,10)

"FIA",801.55,0,11)

"FIA",801.55,0,"RLRO")

"FIA",801.55,0,"VR")
2.0^PXRM
"FIA",801.55,801.55)
0
"FIA",802.4)
REMINDER FUNCTION FINDING FUNCTIONS
"FIA",802.4,0)
^PXRMD(802.4,
"FIA",802.4,0,0)
802.4O
"FIA",802.4,0,1)
y^y^f^^y^^y^o^n
"FIA",802.4,0,10)

"FIA",802.4,0,11)
I Y>0
"FIA",802.4,0,"RLRO")

"FIA",802.4,0,"VR")
2.0^PXRM
"FIA",802.4,802.4)
0
"FIA",802.4,802.41)
0
"FIA",802.4,802.42)
0
"FIA",802.4,802.422)
0
"FIA",810.1)
REMINDER REPORT TEMPLATE
"FIA",810.1,0)
^PXRMPT(810.1,
"FIA",810.1,0,0)
810.1IO
"FIA",810.1,0,1)
y^y^f^^^^n
"FIA",810.1,0,10)

"FIA",810.1,0,11)

"FIA",810.1,0,"RLRO")

"FIA",810.1,0,"VR")
2.0^PXRM
"FIA",810.1,810.1)
0
"FIA",810.1,810.11)
0
"FIA",810.1,810.111)
0
"FIA",810.1,810.112)
0
"FIA",810.1,810.113)
0
"FIA",810.1,810.114)
0
"FIA",810.1,810.12)
0
"FIA",810.1,810.13)
0
"FIA",810.1,810.14)
0
"FIA",810.1,810.16)
0
"FIA",810.1,810.17)
0
"FIA",810.1,810.18)
0
"FIA",810.2)
REMINDER EXTRACT DEFINITION
"FIA",810.2,0)
^PXRM(810.2,
"FIA",810.2,0,0)
810.2
"FIA",810.2,0,1)
y^y^f^^^^n
"FIA",810.2,0,10)

"FIA",810.2,0,11)

"FIA",810.2,0,"RLRO")

"FIA",810.2,0,"VR")
2.0^PXRM
"FIA",810.2,810.2)
0
"FIA",810.2,810.21)
0
"FIA",810.2,810.22)
0
"FIA",810.2,810.23)
0
"FIA",810.2,810.24)
0
"FIA",810.2,810.242)
0
"FIA",810.3)
REMINDER EXTRACT SUMMARY
"FIA",810.3,0)
^PXRMXT(810.3,
"FIA",810.3,0,0)
810.3I
"FIA",810.3,0,1)
y^y^f^^^^n
"FIA",810.3,0,10)

"FIA",810.3,0,11)

"FIA",810.3,0,"RLRO")

"FIA",810.3,0,"VR")
2.0^PXRM
"FIA",810.3,810.3)
0
"FIA",810.3,810.31)
0
"FIA",810.3,810.32)
0
"FIA",810.3,810.33)
0
"FIA",810.3,810.331)
0
"FIA",810.3,810.3316)
0
"FIA",810.3,810.36)
0
"FIA",810.4)
REMINDER LIST RULE
"FIA",810.4,0)
^PXRM(810.4,
"FIA",810.4,0,0)
810.4I
"FIA",810.4,0,1)
y^y^f^^^^n
"FIA",810.4,0,10)

"FIA",810.4,0,11)

"FIA",810.4,0,"RLRO")

"FIA",810.4,0,"VR")
2.0^PXRM
"FIA",810.4,810.4)
0
"FIA",810.4,810.41)
0
"FIA",810.4,810.42)
0
"FIA",810.4,810.422)
0
"FIA",810.5)
REMINDER PATIENT LIST
"FIA",810.5,0)
^PXRMXP(810.5,
"FIA",810.5,0,0)
810.5
"FIA",810.5,0,1)
y^y^f^^^^n
"FIA",810.5,0,10)

"FIA",810.5,0,11)

"FIA",810.5,0,"RLRO")

"FIA",810.5,0,"VR")
2.0^PXRM
"FIA",810.5,810.5)
0
"FIA",810.5,810.51)
0
"FIA",810.5,810.53)
0
"FIA",810.5,810.531)
0
"FIA",810.5,810.532)
0
"FIA",810.5,810.535)
0
"FIA",810.5,810.54)
0
"FIA",810.5,810.545)
0
"FIA",810.7)
REMINDER EXTRACT COUNTING RULE
"FIA",810.7,0)
^PXRM(810.7,
"FIA",810.7,0,0)
810.7
"FIA",810.7,0,1)
y^y^f^^^^n
"FIA",810.7,0,10)

"FIA",810.7,0,11)

"FIA",810.7,0,"RLRO")

"FIA",810.7,0,"VR")
2.0^PXRM
"FIA",810.7,810.7)
0
"FIA",810.7,810.701)
0
"FIA",810.7,810.71)
0
"FIA",810.7,810.72)
0
"FIA",810.7,810.722)
0
"FIA",810.8)
REMINDER COUNTING GROUP
"FIA",810.8,0)
^PXRM(810.8,
"FIA",810.8,0,0)
810.8
"FIA",810.8,0,1)
y^y^f^^^^n
"FIA",810.8,0,10)

"FIA",810.8,0,11)

"FIA",810.8,0,"RLRO")

"FIA",810.8,0,"VR")
2.0^PXRM
"FIA",810.8,810.8)
0
"FIA",810.8,810.801)
0
"FIA",810.8,810.82)
0
"FIA",810.8,810.822)
0
"FIA",810.9)
REMINDER LOCATION LIST
"FIA",810.9,0)
^PXRMD(810.9,
"FIA",810.9,0,0)
810.9I
"FIA",810.9,0,1)
y^y^f^^n^^y^o^n
"FIA",810.9,0,10)

"FIA",810.9,0,11)
I Y=20
"FIA",810.9,0,"RLRO")

"FIA",810.9,0,"VR")
2.0^PXRM
"FIA",810.9,810.9)
0
"FIA",810.9,810.9001)
0
"FIA",810.9,810.90011)
0
"FIA",810.9,810.9002)
0
"FIA",810.9,810.90022)
0
"FIA",810.9,810.91)
0
"FIA",810.9,810.944)
0
"FIA",811.4)
REMINDER COMPUTED FINDINGS
"FIA",811.4,0)
^PXRMD(811.4,
"FIA",811.4,0,0)
811.4OI
"FIA",811.4,0,1)
y^y^f^^n^^y^o^n
"FIA",811.4,0,10)

"FIA",811.4,0,11)
I $$CFTINC^PXRMP4I(Y)
"FIA",811.4,0,"RLRO")

"FIA",811.4,0,"VR")
2.0^PXRM
"FIA",811.4,811.4)
0
"FIA",811.4,811.41)
0
"FIA",811.4,811.42)
0
"FIA",811.4,811.422)
0
"FIA",811.5)
REMINDER TERM
"FIA",811.5,0)
^PXRMD(811.5,
"FIA",811.5,0,0)
811.5IO
"FIA",811.5,0,1)
y^y^f^^n^^y^o^n
"FIA",811.5,0,10)

"FIA",811.5,0,11)
I Y=610
"FIA",811.5,0,"RLRO")

"FIA",811.5,0,"VR")
2.0^PXRM
"FIA",811.5,811.5)
0
"FIA",811.5,811.51)
0
"FIA",811.5,811.52)
0
"FIA",811.5,811.53)
0
"FIA",811.5,811.532)
0
"FIA",811.5,811.54)
0
"FIA",811.8)
REMINDER EXCHANGE
"FIA",811.8,0)
^PXD(811.8,
"FIA",811.8,0,0)
811.8s
"FIA",811.8,0,1)
n^y^f^^n^^y^o^n
"FIA",811.8,0,10)

"FIA",811.8,0,11)
I $$EXFINC^PXRMP4I(Y)
"FIA",811.8,0,"RLRO")

"FIA",811.8,0,"VR")
2.0^PXRM
"FIA",811.8,811.8)
0
"FIA",811.8,811.801)
0
"FIA",811.8,811.802)
0
"FIA",811.8,811.8021)
0
"FIA",811.8,811.803)
0
"FIA",811.8,811.8031)
0
"FIA",811.8,811.80315)
0
"FIA",811.8,811.804)
0
"FIA",811.9)
REMINDER DEFINITION
"FIA",811.9,0)
^PXD(811.9,
"FIA",811.9,0,0)
811.9I
"FIA",811.9,0,1)
y^y^f^^^^n
"FIA",811.9,0,10)

"FIA",811.9,0,11)

"FIA",811.9,0,"RLRO")

"FIA",811.9,0,"VR")
2.0^PXRM
"FIA",811.9,811.9)
0
"FIA",811.9,811.9001)
0
"FIA",811.9,811.90012)
0
"FIA",811.9,811.9002)
0
"FIA",811.9,811.90021)
0
"FIA",811.9,811.9003)
0
"FIA",811.9,811.9004)
0
"FIA",811.9,811.902)
0
"FIA",811.9,811.90221)
0
"FIA",811.9,811.9024)
0
"FIA",811.9,811.9025)
0
"FIA",811.9,811.92)
0
"FIA",811.9,811.925)
0
"FIA",811.9,811.9251)
0
"FIA",811.9,811.9252)
0
"FIA",811.9,811.9255)
0
"FIA",811.9,811.9256)
0
"FIA",811.9,811.93)
0
"FIA",811.9,811.948)
0
"FIA",811.9,811.961)
0
"FIA",811.9,811.965)
0
"FIA",811.9,811.966)
0
"FIA",811.9,811.97)
0
"FIA",811.9,811.971)
0
"FIA",811.9,811.973)
0
"FIA",811.9,811.974)
0
"FIA",811.9,811.975)
0
"FIA",811.9,811.976)
0
"INI")
PRE^PXRMP4I
"INIT")
POST^PXRMP4I
"IX",801.41,801.41,"B",0)
801.41^B^B Cross-reference^R^^F^IR^I^801.41^^^^^LS
"IX",801.41,801.41,"B",.1,0)
^^1^1^3001103^^
"IX",801.41,801.41,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross reference.
"IX",801.41,801.41,"B",1)
S ^PXRMD(801.41,"B",$E(X,1,63),DA)=""
"IX",801.41,801.41,"B",2)
K ^PXRMD(801.41,"B",$E(X,1,63),DA)
"IX",801.41,801.41,"B",2.5)
K ^PXRMD(801.41,"B")
"IX",801.41,801.41,"B",11.1,0)
^.114IA^1^1
"IX",801.41,801.41,"B",11.1,1,0)
1^F^801.41^.01^63^1^F
"IX",801.41,801.41,"B",11.1,1,3)

"IX",801.41,801.41,"R",0)
801.41^R^This will be used for identifying replacement elements/groups^MU^^F^IR^I^801.41^^^^^LS
"IX",801.41,801.41,"R",1)
S ^PXRMD(801.41,"R",X,DA)=""
"IX",801.41,801.41,"R",2)
K ^PXRMD(801.41,"R",X,DA)
"IX",801.41,801.41,"R",2.5)
K ^PXRMD(801.41,"R")
"IX",801.41,801.41,"R",11.1,0)
^.114IA^1^1
"IX",801.41,801.41,"R",11.1,1,0)
1^F^801.41^118^^1^F
"IX",801.5,801.5,"AC",0)
801.5^AC^Reminder Dialog connection to module^R^^R^IR^I^801.5^^^^^S
"IX",801.5,801.5,"AC",1)
S ^PXRMD(801.5,"AC",$E(X(1),1,30),X(2),$E(X(3),1,30),DA)=""
"IX",801.5,801.5,"AC",2)
K ^PXRMD(801.5,"AC",$E(X(1),1,30),X(2),$E(X(3),1,30),DA)
"IX",801.5,801.5,"AC",2.5)
K ^PXRMD(801.5,"AC")
"IX",801.5,801.5,"AC",11.1,0)
^.114IA^3^3
"IX",801.5,801.5,"AC",11.1,1,0)
1^F^801.5^.01^30^1^F
"IX",801.5,801.5,"AC",11.1,2,0)
2^F^801.5^.02^^2^F
"IX",801.5,801.5,"AC",11.1,3,0)
3^F^801.5^.03^30^3^F
"IX",801.5,801.5,"AD",0)
801.5^AD^patient U identify^R^^R^IR^I^801.5^^^^^S
"IX",801.5,801.5,"AD",.1,0)
^^1^1^3030508^
"IX",801.5,801.5,"AD",.1,1,0)
Crossreference between the patient and identify fields
"IX",801.5,801.5,"AD",1)
S ^PXRMD(801.5,"AD",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",801.5,801.5,"AD",2)
K ^PXRMD(801.5,"AD",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",801.5,801.5,"AD",2.5)
K ^PXRMD(801.5,"AD")
"IX",801.5,801.5,"AD",11.1,0)
^.114IA^2^2
"IX",801.5,801.5,"AD",11.1,1,0)
1^F^801.5^.01^30^1^F
"IX",801.5,801.5,"AD",11.1,1,3)

"IX",801.5,801.5,"AD",11.1,2,0)
2^F^801.5^.03^30^2^F
"IX",801.5,801.5,"AD",11.1,2,3)

"IX",801.5,801.5,"ANOTE",0)
801.5^ANOTE^NOTEIEN,IDENTIFY,DA^R^^R^IR^I^801.5^^^^^S
"IX",801.5,801.5,"ANOTE",.1,0)
^^3^3^3050118^
"IX",801.5,801.5,"ANOTE",.1,1,0)
This cross reference will help in maintaining concurrence
"IX",801.5,801.5,"ANOTE",.1,2,0)
between TIU, PCE
"IX",801.5,801.5,"ANOTE",.1,3,0)
and Clinical Reminders. NOTEIEN ^ IDENTIFY
"IX",801.5,801.5,"ANOTE",1)
S ^PXRMD(801.5,"ANOTE",$E(X(1),1,20),$E(X(2),1,30),DA)=""
"IX",801.5,801.5,"ANOTE",2)
K ^PXRMD(801.5,"ANOTE",$E(X(1),1,20),$E(X(2),1,30),DA)
"IX",801.5,801.5,"ANOTE",2.5)
K ^PXRMD(801.5,"ANOTE")
"IX",801.5,801.5,"ANOTE",11.1,0)
^.114IA^2^2
"IX",801.5,801.5,"ANOTE",11.1,1,0)
1^F^801.5^.04^20^1^F
"IX",801.5,801.5,"ANOTE",11.1,2,0)
2^F^801.5^.03^30^2^F
"IX",801.55,801.55,"AC",0)
801.55^AC^Reminder Dialog History connection to GUI^R^^R^IR^I^801.55^^^^^S
"IX",801.55,801.55,"AC",1)
S ^PXRMD(801.55,"AC",$E(X(1),1,40),X(2),$E(X(3),1,30),DA)=""
"IX",801.55,801.55,"AC",2)
K ^PXRMD(801.55,"AC",$E(X(1),1,40),X(2),$E(X(3),1,30),DA)
"IX",801.55,801.55,"AC",2.5)
K ^PXRMD(801.55,"AC")
"IX",801.55,801.55,"AC",11.1,0)
^.114IA^3^3
"IX",801.55,801.55,"AC",11.1,1,0)
1^F^801.55^.01^40^1^F
"IX",801.55,801.55,"AC",11.1,1,3)

"IX",801.55,801.55,"AC",11.1,2,0)
2^F^801.55^.02^^2^F
"IX",801.55,801.55,"AC",11.1,2,3)

"IX",801.55,801.55,"AC",11.1,3,0)
3^F^801.55^.03^30^3^F
"IX",801.55,801.55,"AC",11.1,3,3)

"IX",801.55,801.55,"AD",0)
801.55^AD^Cross Reference between patient and identify fields^R^^R^IR^I^801.55^^^^^S
"IX",801.55,801.55,"AD",1)
S ^PXRMD(801.55,"AD",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",801.55,801.55,"AD",2)
K ^PXRMD(801.55,"AD",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",801.55,801.55,"AD",2.5)
K ^PXRMD(801.55,"AD")
"IX",801.55,801.55,"AD",11.1,0)
^.114IA^2^2
"IX",801.55,801.55,"AD",11.1,1,0)
1^F^801.55^.01^30^1^F
"IX",801.55,801.55,"AD",11.1,1,3)

"IX",801.55,801.55,"AD",11.1,2,0)
2^F^801.55^.03^30^2^F
"IX",801.55,801.55,"AD",11.1,2,3)

"IX",801.55,801.55,"AE",0)
801.55^AE^Patient, Date, Dialog, User^R^^R^IR^I^801.55^^^^^S
"IX",801.55,801.55,"AE",.1,0)
^^1^1^3050712^^
"IX",801.55,801.55,"AE",.1,1,0)
Patient, Date, Dialog, User
"IX",801.55,801.55,"AE",1)
S ^PXRMD(801.55,"AE",X(1),X(2),$E(X(3),1,30),X(4),DA)=""
"IX",801.55,801.55,"AE",2)
K ^PXRMD(801.55,"AE",X(1),X(2),$E(X(3),1,30),X(4),DA)
"IX",801.55,801.55,"AE",2.5)
K ^PXRMD(801.55,"AE")
"IX",801.55,801.55,"AE",11.1,0)
^.114IA^4^4
"IX",801.55,801.55,"AE",11.1,1,0)
1^F^801.55^.01^^1^F
"IX",801.55,801.55,"AE",11.1,2,0)
2^F^801.55^.02^^2^F
"IX",801.55,801.55,"AE",11.1,3,0)
3^F^801.55^.03^30^3^F
"IX",801.55,801.55,"AE",11.1,4,0)
4^F^801.55^.05^^4^F
"IX",801.55,801.55,"ANOTE",0)
801.55^ANOTE^Cross reference between the note and the dialog^R^^R^IR^I^801.55^^^^^S
"IX",801.55,801.55,"ANOTE",1)
S ^PXRMD(801.55,"ANOTE",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",801.55,801.55,"ANOTE",2)
K ^PXRMD(801.55,"ANOTE",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",801.55,801.55,"ANOTE",2.5)
K ^PXRMD(801.55,"ANOTE")
"IX",801.55,801.55,"ANOTE",11.1,0)
^.114IA^2^2
"IX",801.55,801.55,"ANOTE",11.1,1,0)
1^F^801.55^.04^30^1^F
"IX",801.55,801.55,"ANOTE",11.1,1,3)

"IX",801.55,801.55,"ANOTE",11.1,2,0)
2^F^801.55^.03^30^2^F
"IX",801.55,801.55,"ANOTE",11.1,2,3)

"IX",802.4,802.4,"B",0)
802.4^B^This is a new-style B cross-reference^R^^F^IR^I^802.4^^^^^LS
"IX",802.4,802.4,"B",1)
S ^PXRMD(802.4,"B",$E(X,1,30),DA)=""
"IX",802.4,802.4,"B",2)
K ^PXRMD(802.4,"B",$E(X,1,30),DA)
"IX",802.4,802.4,"B",2.5)
K ^PXRMD(802.4,"B")
"IX",802.4,802.4,"B",11.1,0)
^.114IA^1^1
"IX",802.4,802.4,"B",11.1,1,0)
1^F^802.4^.01^30^1^F
"IX",810.3,810.3,"AV",0)
810.3^AV^VISIT, TOP FILE NUMBER IEN, SUB FILE IEN^R^^F^IR^W^810.31^^^^^S
"IX",810.3,810.3,"AV",.1,0)
^^1^1^3040205^
"IX",810.3,810.3,"AV",.1,1,0)
Visit Pointer Indes
"IX",810.3,810.3,"AV",1)
S ^PXRMXT(810.3,"AV",X,DA(1),DA)=""
"IX",810.3,810.3,"AV",2)
K ^PXRMXT(810.3,"AV",X,DA(1),DA)
"IX",810.3,810.3,"AV",2.5)
K ^PXRMXT(810.3,"AV")
"IX",810.3,810.3,"AV",11.1,0)
^.114IA^1^1
"IX",810.3,810.3,"AV",11.1,1,0)
1^F^810.31^.07^^1^F
"IX",810.3,810.3,"B",0)
810.3^B^"B" cross-reference for .01^R^^F^IR^I^810.3^^^^^LS
"IX",810.3,810.3,"B",1)
S ^PXRMXT(810.3,"B",$E(X,1,64),DA)=""
"IX",810.3,810.3,"B",2)
K ^PXRMXT(810.3,"B",$E(X,1,64),DA)
"IX",810.3,810.3,"B",2.5)
K ^PXRMXT(810.3,"B")
"IX",810.3,810.3,"B",11.1,0)
^.114IA^1^1
"IX",810.3,810.3,"B",11.1,1,0)
1^F^810.3^.01^64^1^F
"IX",810.3,810.3,"B",11.1,1,3)

"IX",810.3,810.3,"C",0)
810.3^C^C INDEX^R^^R^IR^I^810.3^^^^^LS
"IX",810.3,810.3,"C",1)
S ^PXRMXT(810.3,"C",X(1),X(2),DA)=""
"IX",810.3,810.3,"C",2)
K ^PXRMXT(810.3,"C",X(1),X(2),DA)
"IX",810.3,810.3,"C",2.5)
K ^PXRMXT(810.3,"C")
"IX",810.3,810.3,"C",11.1,0)
^.114IA^2^2
"IX",810.3,810.3,"C",11.1,1,0)
1^F^810.3^1^^1^F
"IX",810.3,810.3,"C",11.1,1,3)

"IX",810.3,810.3,"C",11.1,2,0)
2^F^810.3^.06^^2^F
"IX",810.3,810.3,"C",11.1,2,3)

"IX",810.3,810.3,"D",0)
810.3^D^C INDEX^R^^R^IR^I^810.3^^^^^LS
"IX",810.3,810.3,"D",1)
S ^PXRMXT(810.3,"D",X(1),X(2),X(3),DA)=""
"IX",810.3,810.3,"D",2)
K ^PXRMXT(810.3,"D",X(1),X(2),X(3),DA)
"IX",810.3,810.3,"D",2.5)
K ^PXRMXT(810.3,"D")
"IX",810.3,810.3,"D",11.1,0)
^.114IA^3^3
"IX",810.3,810.3,"D",11.1,1,0)
1^F^810.3^1^^1^F
"IX",810.3,810.3,"D",11.1,2,0)
2^F^810.3^4^^2^F
"IX",810.3,810.3,"D",11.1,3,0)
3^F^810.3^3^^3^B
"IX",810.3,810.3,"D",11.1,3,3)

"IX",810.4,810.4,"B",0)
810.4^B^B Index^R^^F^IR^I^810.4^^^^^LS
"IX",810.4,810.4,"B",1)
S ^PXRM(810.4,"B",$E(X,1,96),DA)=""
"IX",810.4,810.4,"B",2)
K ^PXRM(810.4,"B",$E(X,1,96),DA)
"IX",810.4,810.4,"B",2.5)
K ^PXRM(810.4,"B")
"IX",810.4,810.4,"B",11.1,0)
^.114IA^1^1
"IX",810.4,810.4,"B",11.1,1,0)
1^F^810.4^.01^96^1^F
"IX",810.5,810.5,"B",0)
810.5^B^B Index^R^^F^IR^I^810.5^^^^^LS
"IX",810.5,810.5,"B",1)
S ^PXRMXP(810.5,"B",$E(X,1,96),DA)=""
"IX",810.5,810.5,"B",2)
K ^PXRMXP(810.5,"B",$E(X,1,96),DA)
"IX",810.5,810.5,"B",2.5)
K ^PXRMXP(810.5,"B")
"IX",810.5,810.5,"B",11.1,0)
^.114IA^1^1
"IX",810.5,810.5,"B",11.1,1,0)
1^F^810.5^.01^96^1^F
"IX",810.5,810.5,"D",0)
810.5^D^D INDEX^R^^F^IR^I^810.5^^^^^LS
"IX",810.5,810.5,"D",1)
S ^PXRMXP(810.5,"D",X,DA)=""
"IX",810.5,810.5,"D",2)
K ^PXRMXP(810.5,"D",X,DA)
"IX",810.5,810.5,"D",2.5)
K ^PXRMXP(810.5,"D")
"IX",810.5,810.5,"D",11.1,0)
^.114IA^1^1
"IX",810.5,810.5,"D",11.1,1,0)
1^F^810.5^.05^^1^F
"IX",810.5,810.5,"D",11.1,1,3)

"IX",810.5,810.531,"B",0)
810.531^B^New-style B cross-reference^R^^F^IR^I^810.531^^^^^LS
"IX",810.5,810.531,"B",1)
S ^PXRMXP(810.5,DA(2),30,DA(1),"DATA","B",$E(X,1,64),DA)=""
"IX",810.5,810.531,"B",2)
K ^PXRMXP(810.5,DA(2),30,DA(1),"DATA","B",$E(X,1,64),DA)
"IX",810.5,810.531,"B",2.5)
K ^PXRMXP(810.5,DA(2),30,DA(1),"DATA","B")
"IX",810.5,810.531,"B",11.1,0)
^.114IA^1^1
"IX",810.5,810.531,"B",11.1,1,0)
1^F^810.531^.01^64^1^F
"IX",810.5,810.535,"B",0)
810.535^B^New-style B cross-reference^R^^F^IR^I^810.535^^^^^LS
"IX",810.5,810.535,"B",1)
S ^PXRMXP(810.5,DA(1),35,"B",$E(X,1,64),DA)=""
"IX",810.5,810.535,"B",2)
K ^PXRMXP(810.5,DA(1),35,"B",$E(X,1,64),DA)
"IX",810.5,810.535,"B",2.5)
K ^PXRMXP(810.5,DA(1),35,"B")
"IX",810.5,810.535,"B",11.1,0)
^.114IA^1^1
"IX",810.5,810.535,"B",11.1,1,0)
1^F^810.535^.01^64^1^F
"IX",810.8,810.8,"B",0)
810.8^B^B Index^R^^F^IR^I^810.8^^^^^LS
"IX",810.8,810.8,"B",1)
S ^PXRM(810.8,"B",$E(X,1,64),DA)=""
"IX",810.8,810.8,"B",2)
K ^PXRM(810.8,"B",$E(X,1,64),DA)
"IX",810.8,810.8,"B",2.5)
K ^PXRM(810.8,"B")
"IX",810.8,810.8,"B",11.1,0)
^.114IA^1^1
"IX",810.8,810.8,"B",11.1,1,0)
1^F^810.8^.01^64^1^F
"IX",810.8,810.8,"B",11.1,1,3)

"IX",810.9,810.9,"B",0)
810.9^B^This is a new-style B cross-reference^R^^F^IR^I^810.9^^^^^LS
"IX",810.9,810.9,"B",1)
S ^PXRMD(810.9,"B",$E(X,1,64),DA)=""
"IX",810.9,810.9,"B",2)
K ^PXRMD(810.9,"B",$E(X,1,64),DA)
"IX",810.9,810.9,"B",2.5)
K ^PXRMD(810.9,"B")
"IX",810.9,810.9,"B",11.1,0)
^.114IA^1^1
"IX",810.9,810.9,"B",11.1,1,0)
1^F^810.9^.01^64^1^F
"IX",810.9,810.9,"B",11.1,1,3)

"IX",810.9,810.9001,"AC",0)
810.9001^AC^Set the AMIS Reporting Stop Code^MU^^F^IR^I^810.9001^^^^^A
"IX",810.9,810.9001,"AC",1)
D SAMIS^PXRMLLED(X,.DA)
"IX",810.9,810.9001,"AC",2)
D KAMIS^PXRMLLED(X,.DA)
"IX",810.9,810.9001,"AC",11.1,0)
^.114IA^1^1
"IX",810.9,810.9001,"AC",11.1,1,0)
1^F^810.9001^.01^^1^F
"IX",811.4,811.4,"B",0)
811.4^B^New style B cross-reference^R^^F^IR^I^811.4^^^^^LS
"IX",811.4,811.4,"B",1)
S ^PXRMD(811.4,"B",$E(X,1,64),DA)=""
"IX",811.4,811.4,"B",2)
K ^PXRMD(811.4,"B",$E(X,1,64),DA)
"IX",811.4,811.4,"B",2.5)
K ^PXRMD(811.4,"B")
"IX",811.4,811.4,"B",11.1,0)
^.114IA^1^1
"IX",811.4,811.4,"B",11.1,1,0)
1^F^811.4^.01^64^1^F
"IX",811.5,811.5,"ADEL",0)
811.5^ADEL^Set PXRMTMD=1 when the entire term is being deleted.^MU^^F^^I^811.5^^^^^A
"IX",811.5,811.5,"ADEL",.1,0)
^^3^3^3040308^
"IX",811.5,811.5,"ADEL",.1,1,0)
PXRMTMD is set to 1 when a term is being deleted. This provides a flag that
"IX",811.5,811.5,"ADEL",.1,2,0)
can be used to control various actions, such as execution of
"IX",811.5,811.5,"ADEL",.1,3,0)
cross-references, on fields in the term file.
"IX",811.5,811.5,"ADEL",1)
Q
"IX",811.5,811.5,"ADEL",2)
I X2="" S PXRMTMD=1
"IX",811.5,811.5,"ADEL",11.1,0)
^.114IA^1^1
"IX",811.5,811.5,"ADEL",11.1,1,0)
1^F^811.5^.01^^1^F
"IX",811.5,811.5,"AF",0)
811.5^AF^Whole File Reference on Finding Items^R^^F^IR^W^811.52^^^^^S
"IX",811.5,811.5,"AF",.1,0)
^^1^1^3030904^
"IX",811.5,811.5,"AF",.1,1,0)
Finding Item,Reminder Term,Multiple Ien
"IX",811.5,811.5,"AF",1)
S ^PXRMD(811.5,"AF",$E(X,1,30),DA(1),DA)=""
"IX",811.5,811.5,"AF",2)
K ^PXRMD(811.5,"AF",$E(X,1,30),DA(1),DA)
"IX",811.5,811.5,"AF",2.5)
K ^PXRMD(811.5,"AF")
"IX",811.5,811.5,"AF",11.1,0)
^.114IA^1^1
"IX",811.5,811.5,"AF",11.1,1,0)
1^F^811.52^.01^30^1^F
"IX",811.5,811.5,"B",0)
811.5^B^New style B cross-reference^R^^F^IR^I^811.5^^^^^LS
"IX",811.5,811.5,"B",1)
S ^PXRMD(811.5,"B",$E(X,1,64),DA)=""
"IX",811.5,811.5,"B",2)
K ^PXRMD(811.5,"B",$E(X,1,64),DA)
"IX",811.5,811.5,"B",2.5)
K ^PXRMD(811.5,"B")
"IX",811.5,811.5,"B",11.1,0)
^.114IA^1^1
"IX",811.5,811.5,"B",11.1,1,0)
1^F^811.5^.01^64^1^F
"IX",811.5,811.5,"B",11.1,1,3)

"IX",811.5,811.52,"ACASE",0)
811.52^ACASE^Reset internal condition whenever case sensitive field changes.^MU^^F^IR^I^811.52^^^^^A
"IX",811.5,811.52,"ACASE",1)
D CASESEN^PXRMCOND(X,.DA,811.5)
"IX",811.5,811.52,"ACASE",2)
D CASESEN^PXRMCOND(X,.DA,811.5)
"IX",811.5,811.52,"ACASE",11.1,0)
^.114IA^1^1
"IX",811.5,811.52,"ACASE",11.1,1,0)
1^F^811.52^15^^1^F
"IX",811.5,811.52,"ACASE",11.1,1,3)

"IX",811.5,811.52,"ACOND",0)
811.52^ACOND^Store the internal condition.^MU^^F^IR^I^811.52^^^^^A
"IX",811.5,811.52,"ACOND",1)
D SICOND^PXRMCOND(.X,.DA,811.5)
"IX",811.5,811.52,"ACOND",2)
D KICOND^PXRMCOND(.X,.DA,811.5)
"IX",811.5,811.52,"ACOND",11.1,0)
^.114IA^1^1
"IX",811.5,811.52,"ACOND",11.1,1,0)
1^F^811.52^14^^1^F
"IX",811.5,811.52,"ACOND",11.1,1,3)

"IX",811.5,811.52,"ADATE",0)
811.52^ADATE^Give a warning if the ending date is before the beginning date.^MU^^R^IR^I^811.52^^^^^A
"IX",811.5,811.52,"ADATE",1)
D COMPARE^PXRMDATE(.X)
"IX",811.5,811.52,"ADATE",2)
Q
"IX",811.5,811.52,"ADATE",11.1,0)
^.114IA^2^2
"IX",811.5,811.52,"ADATE",11.1,1,0)
1^F^811.52^9^^^F
"IX",811.5,811.52,"ADATE",11.1,2,0)
2^F^811.52^12^^^F
"IX",811.5,811.52,"AWARN",0)
811.52^AWARN^Warn the user to review the status list if Rx Type Field is changed.^MU^^F^^I^811.52^^^^^A
"IX",811.5,811.52,"AWARN",1)
D WARN^PXRMSTA1
"IX",811.5,811.52,"AWARN",1.4)
S X=$S(X2'="":1,1:0)
"IX",811.5,811.52,"AWARN",2)
D WARN^PXRMSTA1
"IX",811.5,811.52,"AWARN",2.4)
S X=$S(X2="":1,1:0)
"IX",811.5,811.52,"AWARN",11.1,0)
^.114IA^1^1
"IX",811.5,811.52,"AWARN",11.1,1,0)
1^F^811.52^16^^1^F
"IX",811.8,811.8,"B",0)
811.8^B^Uniqueness Index for Key 'A' of File #811.8^R^^R^IR^I^811.8^^^^^LS
"IX",811.8,811.8,"B",1)
S ^PXD(811.8,"B",X(1),X(2),DA)=""
"IX",811.8,811.8,"B",2)
K ^PXD(811.8,"B",X(1),X(2),DA)
"IX",811.8,811.8,"B",2.5)
K ^PXD(811.8,"B")
"IX",811.8,811.8,"B",11.1,0)
^.114IA^2^2
"IX",811.8,811.8,"B",11.1,1,0)
1^F^811.8^.01^^1
"IX",811.8,811.8,"B",11.1,2,0)
2^F^811.8^.03^^2
"IX",811.8,811.8,"D",0)
811.8^D^Cross-reference on date and time^R^^F^IR^I^811.8^^^^^LS
"IX",811.8,811.8,"D",1)
S ^PXD(811.8,"D",X,DA)=""
"IX",811.8,811.8,"D",2)
K ^PXD(811.8,"D",X,DA)
"IX",811.8,811.8,"D",2.5)
K ^PXD(811.8,"D")
"IX",811.8,811.8,"D",11.1,0)
^.114IA^1^1
"IX",811.8,811.8,"D",11.1,1,0)
1^F^811.8^.03^^1^F
"IX",811.8,811.8,"D",11.1,1,3)

"IX",811.8,811.803,"B",0)
811.803^B^New style B cross-reference^R^^F^IR^I^811.803^^^^^LS
"IX",811.8,811.803,"B",1)
S ^PXD(811.8,DA(1),130,"B",X,DA)=""
"IX",811.8,811.803,"B",2)
K ^PXD(811.8,DA(1),130,"B",X,DA)
"IX",811.8,811.803,"B",2.5)
K ^PXD(811.8,DA(1),130,"B")
"IX",811.8,811.803,"B",11.1,0)
^.114IA^1^1
"IX",811.8,811.803,"B",11.1,1,0)
1^F^811.803^.01^^1^F
"IX",811.9,811.9,"ACD",0)
811.9^ACD^Expand the Custom Date Due Field^MU^^F^IR^I^811.9^^^^^A
"IX",811.9,811.9,"ACD",1)
D CDBUILD^PXRMCDUE(X,.DA)
"IX",811.9,811.9,"ACD",2)
D CDKILL^PXRMCDUE(X,.DA)
"IX",811.9,811.9,"ACD",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"ACD",11.1,1,0)
1^F^811.9^45^^1^F
"IX",811.9,811.9,"ACD",11.1,1,3)

"IX",811.9,811.9,"ADEL",0)
811.9^ADEL^Set PXRMDEFD=1 when the entire definition is being deleted.^MU^^F^IR^I^811.9^^^^^A
"IX",811.9,811.9,"ADEL",.1,0)
^^3^3^3040308^
"IX",811.9,811.9,"ADEL",.1,1,0)
PXRMDEFD is set to 1 when the entire definition is being deleted. This
"IX",811.9,811.9,"ADEL",.1,2,0)
provides a flag that can be used to control various actions, such as
"IX",811.9,811.9,"ADEL",.1,3,0)
execution of cross-references, on fields in the definition file.
"IX",811.9,811.9,"ADEL",1)
Q
"IX",811.9,811.9,"ADEL",2)
I X2="" S PXRMDEFD=1
"IX",811.9,811.9,"ADEL",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"ADEL",11.1,1,0)
1^F^811.9^.01^^1^F
"IX",811.9,811.9,"ADEL",11.1,1,3)

"IX",811.9,811.9,"AE",0)
811.9^AE^Build the internal patient cohort logic^MU^^F^I^I^811.9^^^^^A
"IX",811.9,811.9,"AE",.1,0)
^^1^1^3000110^
"IX",811.9,811.9,"AE",.1,1,0)
This cross-reference builds the internal patient cohort logic.
"IX",811.9,811.9,"AE",1)
D CPPCLS^PXRMLOGX(DA,X),BLDINFL^PXRMLOGX(DA,"","")
"IX",811.9,811.9,"AE",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.9,"AE",2)
D BLDPCLS^PXRMLOGX(DA,"",""),BLDINFL^PXRMLOGX(DA,"","")
"IX",811.9,811.9,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.9,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AE",11.1,1,0)
1^F^811.9^30^^^F
"IX",811.9,811.9,"AF",0)
811.9^AF^Cross-reference for building internal resolution logic^MU^^F^I^I^811.9^^^^^A
"IX",811.9,811.9,"AF",.1,0)
^^1^1^3000110^
"IX",811.9,811.9,"AF",.1,1,0)
This cross-reference builds the internal resolution logic.
"IX",811.9,811.9,"AF",1)
D CPRESLS^PXRMLOGX(DA,X),BLDINFL^PXRMLOGX(DA,"","")
"IX",811.9,811.9,"AF",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.9,"AF",2)
D BLDRESLS^PXRMLOGX(DA),BLDINFL^PXRMLOGX(DA,"","")
"IX",811.9,811.9,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.9,"AF",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AF",11.1,1,0)
1^F^811.9^34^^^F
"IX",811.9,811.9,"AP",0)
811.9^AP^Will set a rem. to the "P" x-ref if the usage field contains a "P"^MU^^F^IR^I^811.9^^^^^S
"IX",811.9,811.9,"AP",.1,0)
^^2^2^3040303^
"IX",811.9,811.9,"AP",.1,1,0)
This cross-reference will set a reminder to the "P" cross-reference if the 
"IX",811.9,811.9,"AP",.1,2,0)
reminders contains a "P" in the usage field.
"IX",811.9,811.9,"AP",1)
S ^PXD(811.9,"P",DA)=""
"IX",811.9,811.9,"AP",1.4)
S X=$S(X["P":1,1:0)
"IX",811.9,811.9,"AP",2)
K ^PXD(811.9,"P",DA)
"IX",811.9,811.9,"AP",2.4)

"IX",811.9,811.9,"AP",2.5)
K ^PXD(811.9,"P")
"IX",811.9,811.9,"AP",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AP",11.1,1,0)
1^F^811.9^103^30^1^F
"IX",811.9,811.9,"B",0)
811.9^B^B cross-reference^R^^F^IR^I^811.9^^^^^LS
"IX",811.9,811.9,"B",.1,0)
^^1^1^3000222^
"IX",811.9,811.9,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross-reference.
"IX",811.9,811.9,"B",1)
S ^PXD(811.9,"B",$E(X,1,64),DA)=""
"IX",811.9,811.9,"B",2)
K ^PXD(811.9,"B",$E(X,1,64),DA)
"IX",811.9,811.9,"B",2.5)
K ^PXD(811.9,"B")
"IX",811.9,811.9,"B",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"B",11.1,1,0)
1^F^811.9^.01^64^1^F
"IX",811.9,811.9,"D",0)
811.9^D^Look up by Print Name^R^^F^IR^I^811.9^^^^^LS
"IX",811.9,811.9,"D",.1,0)
^^1^1^3000216^
"IX",811.9,811.9,"D",.1,1,0)
This cross-reference is used for look-up by the reminder's Print Name.
"IX",811.9,811.9,"D",1)
S ^PXD(811.9,"D",$E(X,1,35),DA)=""
"IX",811.9,811.9,"D",2)
K ^PXD(811.9,"D",$E(X,1,35),DA)
"IX",811.9,811.9,"D",2.5)
K ^PXD(811.9,"D")
"IX",811.9,811.9,"D",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"D",11.1,1,0)
1^F^811.9^1.2^35^1^F
"IX",811.9,811.9002,"B",0)
811.9002^B^New style B cross-reference^R^^F^IR^I^811.9002^^^^^LS
"IX",811.9,811.9002,"B",1)
S ^PXD(811.9,DA(1),50,"B",$E(X,1,128),DA)=""
"IX",811.9,811.9002,"B",2)
K ^PXD(811.9,DA(1),50,"B",$E(X,1,128),DA)
"IX",811.9,811.9002,"B",2.5)
K ^PXD(811.9,DA(1),50,"B")
"IX",811.9,811.9002,"B",11.1,0)
^.114IA^1^1
"IX",811.9,811.9002,"B",11.1,1,0)
1^F^811.9002^.01^128^1^F
"IX",811.9,811.9002,"B",11.1,1,3)

"IX",811.9,811.902,"ACASE",0)
811.902^ACASE^Reset internal condition whenever case sensitive field changes.^MU^^F^IR^I^811.902^^^^^A
"IX",811.9,811.902,"ACASE",1)
D CASESEN^PXRMCOND(X,.DA,811.9)
"IX",811.9,811.902,"ACASE",2)
D CASESEN^PXRMCOND(X,.DA,811.9)
"IX",811.9,811.902,"ACASE",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"ACASE",11.1,1,0)
1^F^811.902^15^^1^F
"IX",811.9,811.902,"ACOND",0)
811.902^ACOND^Build the internal condition structure^MU^^F^IR^I^811.902^^^^^A
"IX",811.9,811.902,"ACOND",1)
D SICOND^PXRMCOND(.X,.DA,811.9)
"IX",811.9,811.902,"ACOND",2)
D KICOND^PXRMCOND(.X,.DA,811.9)
"IX",811.9,811.902,"ACOND",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"ACOND",11.1,1,0)
1^F^811.902^14^30^1^F
"IX",811.9,811.902,"ADATE",0)
811.902^ADATE^Give a warning if the ending date is before the beginning date^MU^^R^IR^I^811.902^^^^^A
"IX",811.9,811.902,"ADATE",1)
D COMPARE^PXRMDATE(.X)
"IX",811.9,811.902,"ADATE",2)
Q
"IX",811.9,811.902,"ADATE",11.1,0)
^.114IA^2^2
"IX",811.9,811.902,"ADATE",11.1,1,0)
1^F^811.902^9^^^F
"IX",811.9,811.902,"ADATE",11.1,2,0)
2^F^811.902^12^^^F
"IX",811.9,811.902,"AE",0)
811.902^AE^Build all logic strings^MU^^R^IR^I^811.902^^^^^A
"IX",811.9,811.902,"AE",1)
D BLDALL^PXRMLOGX(DA(1),"",20)
"IX",811.9,811.902,"AE",2)
D BLDALL^PXRMLOGX(DA(1),DA,20)
"IX",811.9,811.902,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"AE",11.1,1,0)
1^F^811.902^.01^^1^F
"IX",811.9,811.902,"AENODE",0)
811.902^AENODE^Set the ENODE.^MU^^F^IR^I^811.902^^^^^A
"IX",811.9,811.902,"AENODE",.1,0)
^^16^16^3060615^
"IX",811.9,811.902,"AENODE",.1,1,0)
This cross-reference is used to group findings by type. The index it
"IX",811.9,811.902,"AENODE",.1,2,0)
creates has the form:
"IX",811.9,811.902,"AENODE",.1,3,0)
 ^PXD(811.9,DA(1),20,"E",GLOBAL,IEN,DA)
"IX",811.9,811.902,"AENODE",.1,4,0)
 where 
"IX",811.9,811.902,"AENODE",.1,5,0)
  DA(1) is the internal entry number in file # 811.9.
"IX",811.9,811.902,"AENODE",.1,6,0)
  GLOBAL is the global name of the global that defines the finding.
"IX",811.9,811.902,"AENODE",.1,7,0)
   For example, the global name for file #811.9 is ^PXD(811.9,.
"IX",811.9,811.902,"AENODE",.1,8,0)
  IEN is the internal entry number of the finding in GLOBAL.
"IX",811.9,811.902,"AENODE",.1,9,0)
  DA is the finding number.
"IX",811.9,811.902,"AENODE",.1,10,0)

"IX",811.9,811.902,"AENODE",.1,11,0)
Some examples:
"IX",811.9,811.902,"AENODE",.1,12,0)
 ^PXD(811.9,661,20,"E","PSDRUG(",6344,2)=
"IX",811.9,811.902,"AENODE",.1,13,0)
 ^PXD(811.9,662,20,"E","AUTTEDT(",363,3)=
"IX",811.9,811.902,"AENODE",.1,14,0)
 ^PXD(811.9,669,20,"E","PXRMD(811.5,",660014,5)=
"IX",811.9,811.902,"AENODE",.1,15,0)

"IX",811.9,811.902,"AENODE",.1,16,0)

"IX",811.9,811.902,"AENODE",1)
D SENODE^PXRMENOD(.X,.DA,811.9)
"IX",811.9,811.902,"AENODE",2)
D KENODE^PXRMENOD(.X,.DA,811.9)
"IX",811.9,811.902,"AENODE",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"AENODE",11.1,1,0)
1^F^811.902^.01^^1^F
"IX",811.9,811.902,"AENODE",11.1,1,3)

"IX",811.9,811.902,"AF",0)
811.902^AF^Check for rebuild of age findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AF",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AF",.1,1,0)
When MINIMUM AGE, MAXIMUM AGE, or REMINDER FREQUENCY are changed then
"IX",811.9,811.902,"AF",.1,2,0)
rebuild the age findings list.
"IX",811.9,811.902,"AF",1)
D BLDAFL^PXRMLOGX(DA(1),"",20)
"IX",811.9,811.902,"AF",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.902,"AF",2)
D BLDAFL^PXRMLOGX(DA(1),DA,20)
"IX",811.9,811.902,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AF",11.1,0)
^.114IA^4^3
"IX",811.9,811.902,"AF",11.1,2,0)
1^F^811.902^1^^^F
"IX",811.9,811.902,"AF",11.1,3,0)
2^F^811.902^2^^^F
"IX",811.9,811.902,"AF",11.1,4,0)
3^F^811.902^3^^^F
"IX",811.9,811.902,"AG",0)
811.902^AG^Check for rebuild of resolution findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AG",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AG",.1,1,0)
When USE IN RESOLUTION LOGIC is changed then rebuild the resolution
"IX",811.9,811.902,"AG",.1,2,0)
findings list.
"IX",811.9,811.902,"AG",1)
D BLDRESLS^PXRMLOGX(DA(1),"",20)
"IX",811.9,811.902,"AG",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.902,"AG",2)
D BLDRESLS^PXRMLOGX(DA(1),DA,20)
"IX",811.9,811.902,"AG",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AG",11.1,0)
^.114IA^3^1
"IX",811.9,811.902,"AG",11.1,3,0)
1^F^811.902^7^^^F
"IX",811.9,811.902,"AH",0)
811.902^AH^Check for rebuild of patient cohort findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AH",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AH",.1,1,0)
Whenever USE IN PATIENT COHORT LOGIC is changed rebuild the patient cohort
"IX",811.9,811.902,"AH",.1,2,0)
logic list.
"IX",811.9,811.902,"AH",1)
D BLDPCLS^PXRMLOGX(DA(1),"",20)
"IX",811.9,811.902,"AH",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.902,"AH",2)
D BLDPCLS^PXRMLOGX(DA(1),DA,20)
"IX",811.9,811.902,"AH",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AH",11.1,0)
^.114IA^2^1
"IX",811.9,811.902,"AH",11.1,2,0)
1^F^811.902^8^^^F
"IX",811.9,811.902,"AI",0)
811.902^AI^Check for rebuild of information findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AI",.1,0)
^^4^4^3021224^^
"IX",811.9,811.902,"AI",.1,1,0)
Whenever any of the following fields change rebuild the information
"IX",811.9,811.902,"AI",.1,2,0)
findings list: MINIMUM AGE, MAXIMUM AGE, REMINDER FREQUENCY, USE IN
"IX",811.9,811.902,"AI",.1,3,0)
RESOLUTION LOGIC, USE IN PATIENT COHORT LOGIC.
"IX",811.9,811.902,"AI",.1,4,0)

"IX",811.9,811.902,"AI",1)
D BLDINFL^PXRMLOGX(DA(1),"",20)
"IX",811.9,811.902,"AI",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.902,"AI",2)
D BLDINFL^PXRMLOGX(DA(1),DA,20)
"IX",811.9,811.902,"AI",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AI",11.1,0)
^.114IA^7^5
"IX",811.9,811.902,"AI",11.1,2,0)
1^F^811.902^1^^^F
"IX",811.9,811.902,"AI",11.1,4,0)
2^F^811.902^2^^^F
"IX",811.9,811.902,"AI",11.1,5,0)
3^F^811.902^3^^^F
"IX",811.9,811.902,"AI",11.1,6,0)
4^F^811.902^7^^^F
"IX",811.9,811.902,"AI",11.1,7,0)
5^F^811.902^8^^^F
"IX",811.9,811.902,"AWARNSL",0)
811.902^AWARNSL^Warn the user to review the status list if RXTYPE field is changed.^MU^^F^IR^I^811.902^^^^^A
"IX",811.9,811.902,"AWARNSL",1)
D WARN^PXRMSTA1
"IX",811.9,811.902,"AWARNSL",1.4)
S X=$S(X2'="":1,1:0)
"IX",811.9,811.902,"AWARNSL",2)
D WARN^PXRMSTA1
"IX",811.9,811.902,"AWARNSL",2.4)
S X=$S(X2="":1,1:0)
"IX",811.9,811.902,"AWARNSL",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"AWARNSL",11.1,1,0)
1^F^811.902^16^^1^F
"IX",811.9,811.925,"AB",0)
811.925^AB^Build the function finding data structure.^MU^^F^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AB",1)
D FFBUILD^PXRMFFDB(X,.DA)
"IX",811.9,811.925,"AB",2)
D FFKILL^PXRMFFDB(X,.DA)
"IX",811.9,811.925,"AB",11.1,0)
^.114IA^1^1
"IX",811.9,811.925,"AB",11.1,1,0)
1^F^811.925^3^^1^F
"IX",811.9,811.925,"AE",0)
811.925^AE^Build all logic strings.^MU^^F^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AE",1)
D BLDALL^PXRMLOGX(DA(1),"",25)
"IX",811.9,811.925,"AE",2)
D BLDALL^PXRMLOGX(DA(1),DA,25)
"IX",811.9,811.925,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.925,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.925,"AE",11.1,1,0)
1^F^811.925^.01^^1^F
"IX",811.9,811.925,"AF",0)
811.925^AF^Check for rebuild of age findings list^MU^^R^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AF",1)
D BLDAFL^PXRMLOGX(DA(1),"",25)
"IX",811.9,811.925,"AF",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.925,"AF",2)
D BLDAFL^PXRMLOGX(DA(1),DA,25)
"IX",811.9,811.925,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.925,"AF",11.1,0)
^.114IA^3^3
"IX",811.9,811.925,"AF",11.1,1,0)
1^F^811.925^13^^1^F
"IX",811.9,811.925,"AF",11.1,2,0)
2^F^811.925^14^^2^F
"IX",811.9,811.925,"AF",11.1,3,0)
3^F^811.925^15^^3^F
"IX",811.9,811.925,"AG",0)
811.925^AG^Check for rebuild of resolution findings list^MU^^F^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AG",1)
D BLDRESLS^PXRMLOGX(DA(1),"",25)
"IX",811.9,811.925,"AG",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.925,"AG",2)
D BLDRESLS^PXRMLOGX(DA(1),DA,25)
"IX",811.9,811.925,"AG",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.925,"AG",11.1,0)
^.114IA^1^1
"IX",811.9,811.925,"AG",11.1,1,0)
1^F^811.925^11^^1^F
"IX",811.9,811.925,"AH",0)
811.925^AH^Check for rebuilds of patient cohort findings list^MU^^F^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AH",.1,0)
^^2^2^3021223^
"IX",811.9,811.925,"AH",.1,1,0)
Whenever USE IN PATIENT COHORT LOGIC is changed rebuild the patient
"IX",811.9,811.925,"AH",.1,2,0)
cohort logic list.
"IX",811.9,811.925,"AH",1)
D BLDPCLS^PXRMLOGX(DA(1),"",25)
"IX",811.9,811.925,"AH",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.925,"AH",2)
D BLDPCLS^PXRMLOGX(DA(1),DA,25)
"IX",811.9,811.925,"AH",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.925,"AH",2.5)

"IX",811.9,811.925,"AH",11.1,0)
^.114IA^1^1
"IX",811.9,811.925,"AH",11.1,1,0)
1^F^811.925^12^^1^F
"IX",811.9,811.925,"AI",0)
811.925^AI^Check for rebuild of information findings list.^MU^^R^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AI",.1,0)
^^3^3^3021224^
"IX",811.9,811.925,"AI",.1,1,0)
Whenever any of the following fields change rebuild the information
"IX",811.9,811.925,"AI",.1,2,0)
findings list: MINIMUM AGE, MAXIMUM AGE, REMINDER FREQUENCY, USE IN
"IX",811.9,811.925,"AI",.1,3,0)
RESOLUTION LOGIC, USE IN PATIENT COHORT LOGIC.
"IX",811.9,811.925,"AI",1)
D BLDINFL^PXRMLOGX(DA(1),"",25)
"IX",811.9,811.925,"AI",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.925,"AI",2)
D BLDINFL^PXRMLOGX(DA(1),DA,25)
"IX",811.9,811.925,"AI",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.925,"AI",11.1,0)
^.114IA^5^5
"IX",811.9,811.925,"AI",11.1,1,0)
1^F^811.925^13^^^F
"IX",811.9,811.925,"AI",11.1,2,0)
2^F^811.925^14^^^F
"IX",811.9,811.925,"AI",11.1,3,0)
3^F^811.925^15^^^F
"IX",811.9,811.925,"AI",11.1,4,0)
4^F^811.925^11^^^F
"IX",811.9,811.925,"AI",11.1,5,0)
5^F^811.925^12^^^F
"KEY",801.41,801.41,"B",0)
801.41^B^P^114
"KEY",801.41,801.41,"B",2,0)
^.312IA^1^1
"KEY",801.41,801.41,"B",2,1,0)
.01^801.41^1
"KEY",802.4,802.4,"A",0)
802.4^A^P^220
"KEY",802.4,802.4,"A",2,0)
^.312IA^1^1
"KEY",802.4,802.4,"A",2,1,0)
.01^802.4^1
"KEY",810.9,810.9,"A",0)
810.9^A^P^219
"KEY",810.9,810.9,"A",2,0)
^.312IA^1^1
"KEY",810.9,810.9,"A",2,1,0)
.01^810.9^1
"KEY",811.4,811.4,"A",0)
811.4^A^P^119
"KEY",811.4,811.4,"A",2,0)
^.312IA^1^1
"KEY",811.4,811.4,"A",2,1,0)
.01^811.4^1
"KEY",811.5,811.5,"A",0)
811.5^A^P^120
"KEY",811.5,811.5,"A",2,0)
^.312IA^1^1
"KEY",811.5,811.5,"A",2,1,0)
.01^811.5^1
"KEY",811.8,811.8,"A",0)
811.8^A^P^41
"KEY",811.8,811.8,"A",2,0)
^.312IA^2^2
"KEY",811.8,811.8,"A",2,1,0)
.01^811.8^1
"KEY",811.8,811.8,"A",2,2,0)
.03^811.8^2
"KEY",811.9,811.9,"B",0)
811.9^B^P^47
"KEY",811.9,811.9,"B",2,0)
^.312IA^1^1
"KEY",811.9,811.9,"B",2,1,0)
.01^811.9^1
"KEYPTR",801.41,801.41,"B")
801.41^B
"KEYPTR",802.4,802.4,"A")
802.4^B
"KEYPTR",810.9,810.9,"A")
810.9^B
"KEYPTR",811.4,811.4,"A")
811.4^B
"KEYPTR",811.5,811.5,"A")
811.5^B
"KEYPTR",811.8,811.8,"A")
811.8^B
"KEYPTR",811.9,811.9,"B")
811.9^B
"KRN",.4,1232,-1)
0^2
"KRN",.4,1232,0)
PXRM SPONSOR INQUIRY^3050808.1344^@^811.6^^@^3050902
"KRN",.4,1232,"F",1)
"Name:";C1;S1~.01;C7;X~"Class:";C1;S1~100;C8;X~"Review Date:";C1;S1~102;C14;X~"Edit History:";C1;S1~110,"Edit Date:";C5;S1~110,.01;C16;X~
"KRN",.4,1232,"F",2)
110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~1,"";S1~1,"Contact:";C1~1,.01;C10;X~1,1,.01;C3~"Associated Sponsors:";C1;S1~
"KRN",.4,1232,"F",3)
2,.01;C2~
"KRN",.4,1232,"H")
REMINDER SPONSOR LIST
"KRN",.4,1242,-1)
0^6
"KRN",.4,1242,0)
PXRM EXTRACT DEFINITION^3060518.1219^@^810.2^^@^3060817
"KRN",.4,1242,"F",1)
"Extract Name:";C1;R30;S1~.01~"Number:";C60~0;X~"Class:";C1;R30~100~"Extract Type:";C1;R30;S1~.02~"Reporting Period";C1;R30~1~
"KRN",.4,1242,"F",2)
"Last Reporting Period:";C1;R30;S1~2~"Next Reporting Period:";C1;R30~4~"Last Run Date:";C1;R30;S1~3~"";C1;S2~10,"Extract Sequence:";C2~10,.01;C20;R3~
"KRN",.4,1242,"F",3)
10,"-----------------";C2~10,"Patient List:";C2~10,.03;C6~10,"Rule Set:";C2;S1~10,.02;C15;L64~10,D PPLR^PXRMEPM;X;Z;"D PPLR^PXRMEPM"~
"KRN",.4,1242,"F",4)
10,"Extract Reminders and Related Counting Total Rule:";C11;S1~10,10,.01;C11;S1~10,10,"Reminder:";C15~10,10,1;C25;X~10,10,"Counting Rule:";C15~
"KRN",.4,1242,"F",5)
10,10,2;C30;L45~10,10,D PPFR^PXRMEPM;X;Z;"D PPFR^PXRMEPM"~10,"";C1;S1~"Edit History";C1;R13;S2~"------------";C1;R13~110,"Edit Date:";C2;S1~
"KRN",.4,1242,"F",6)
110,.01;C13;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C2~110,2,.01;W~"";C1;S1~
"KRN",.4,1242,"H")
REMINDER EXTRACT CRITERIA/PARAMETERS  LIST
"KRN",.4,1250,-1)
0^3
"KRN",.4,1250,0)
PXRM RULE SET^3050914.0933^@^810.4^^@^3060817
"KRN",.4,1250,100,0)
^.42A^1^1
"KRN",.4,1250,100,1,0)
1
"KRN",.4,1250,100,"B",1,1)

"KRN",.4,1250,"F",1)
"";C1~"Name:";C1;R15~.01;L50~"Number:";C1;R15~0~"Class:";C1;R15~100~"Description:";C1;S1;R15~.02;L60~"Rule Type:";C1;S1;R15~.03~
"KRN",.4,1250,"F",2)
"Component Rules";C5;R15;S1~"---------------";C5;R15~D SEQPRT^PXRMLRED;Z;"D SEQPRT^PXRMLRED"~"Edit History";C5;R15;S2~"------------";C5;R15~
"KRN",.4,1250,"F",3)
110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5;S1~110,2,.01;W~"";C1;S1~
"KRN",.4,1250,"H")
REMINDER EXTRACT LIST RULE LIST
"KRN",.4,1251,-1)
0^8
"KRN",.4,1251,0)
PXRM EXTRACT COUNTING^3060809.1458^@^810.7^^@^3060809
"KRN",.4,1251,"F",1)
" Name:";C1;R10;S1~.01~"Number:";C60~0;X~"Class:";C1;R10~100~"Description:";C3;S1~1,.01~"Seq.";C3;S1~"Counting Group";C10~"Reminder Status";C60~
"KRN",.4,1251,"F",2)
"";C1;S1~10,.01;C3;L5~10,1;C10;L50~10,2;C60;L20~
"KRN",.4,1251,"H")
REMINDER EXTRACT FINDING RULE LIST
"KRN",.4,1252,-1)
0^10
"KRN",.4,1252,0)
PXRM EXTRACT COUNTING GROUP^3021008.1031^@^810.8^^@^3060809
"KRN",.4,1252,"F",1)
" Name:";C1;R10;S1~.01~"Number:";C60~0;X~"Class:";C1;R10~100~"Count Type:";C3~2~"Seq.   Reminder Term";C3;S1~"";C1;S1~10,.01;C3;L3~10,1;C10;L50~"";C1~
"KRN",.4,1252,"H")
FINDING GROUP LIST
"KRN",.4,1253,-1)
0^1
"KRN",.4,1253,0)
PXRM LOCATION LIST INQUIRY^3050616.1453^@^810.9^^@^3060808
"KRN",.4,1253,"F",1)
"Name:";C1;S1~.01;C8;X~"Description:";C1;S1~1,.01~"Class:";C1;S1~100;C31;X~"Sponsor:";C1;S1~101;C31;X~"Review Date:";C1;S1~"Edit History:";C1;S1~
"KRN",.4,1253,"F",2)
110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~"Clinic Stops:";C1;S1~
"KRN",.4,1253,"F",3)
D PCSTOPL^PXRMLOCL;Z;"D PCSTOPL^PXRMLOCL"~"Hospital Locations:";C1;S1~"";C1~44,.01~
"KRN",.4,1253,"H")
REMINDER LOCATION LIST LIST
"KRN",.4,1254,-1)
0^12
"KRN",.4,1254,0)
PXRM LOCATION LIST LIST^3060712.1226^@^810.9^^@^3060808
"KRN",.4,1254,"F",1)
"Name:";C1;S2~.01;C7;X~"Class:";C1~100;C8;X~"Clinic Stops:";C1;S1~"";C1~40.7,.01~40.7,.02~"Hospital Locations:";C1;S1~"";C1~44,.01~
"KRN",.4,1254,"H")
@
"KRN",.4,1254,"SUB")
1
"KRN",.4,1257,-1)
0^11
"KRN",.4,1257,0)
PXRM PATIENT LIST RULE^3060516.1146^@^810.4^^@^3060608
"KRN",.4,1257,"F",1)
"";C1~"Name:";C1;R21~.01;L50~"Number:";C1;R21~0~"Class:";C1;R21~100~"Description:";C1;S1;R21~.02;L55~"Rule Type:";C1;S1;R21~.03~
"KRN",.4,1257,"F",2)
"Existing Patient List:";C1;S1;R21~4;L55~"Extract Patient List:";C1;S1;R21~7;L55~D USET^PXRMLRED;X;Z;"D USET^PXRMLRED"~"Edit History";C1;R15;S2~
"KRN",.4,1257,"F",3)
"------------";C1;R15~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~
"KRN",.4,1257,"H")
REMINDER LIST RULE LIST
"KRN",.4,1323,-1)
0^4
"KRN",.4,1323,0)
PXRM REMINDER RULE^3041129.146^@^810.4^^@^3060712
"KRN",.4,1323,"F",1)
"";C1~"Name:";C1;R21~.01;L50~"Number:";C1;R21~0~"Class:";C1;R21~100~"Description:";C1;S1;R21~.02;L60~"Rule Type:";C1;S1;R21~.03~
"KRN",.4,1323,"F",2)
"Reminder Definition:";C1;S2;R21~9;L50~D LRSTRT^PXRMLRED($P(X,U,4),4);X;Z;"D LRSTRT^PXRMLRED($P(X,U,4),4)"~
"KRN",.4,1323,"F",3)
D LREND^PXRMLRED($P(X,U,5),6);X;Z;"D LREND^PXRMLRED($P(X,U,5),6)"~D USET^PXRMLRED;X;Z;"D USET^PXRMLRED"~"Edit History";C1;R21;S2~"------------";C1;R21~
"KRN",.4,1323,"F",4)
110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01;W~
"KRN",.4,1323,"H")
REMINDER LIST RULE LIST
"KRN",.4,1384,-1)
1^5
"KRN",.4,1384,0)
PXRM EXTRACT PARAMETER    FILE #810.2
"KRN",.4,1385,-1)
1^7
"KRN",.4,1385,0)
PXRM EXTRACT FINDING    FILE #810.7
"KRN",.4,1386,-1)
1^9
"KRN",.4,1386,0)
PXRM EXTRACT FINDING GROUP    FILE #810.8
"KRN",.402,1429,-1)
0^2
"KRN",.402,1429,0)
PXRM EDIT RULE SET^3060712.1016^@^810.4^^@^3060809
"KRN",.402,1429,"DR",1,810.4)
.01;.02;100;30;
"KRN",.402,1429,"DR",2,810.41)
.01;.02;S RR=$S($G(X)="":0,$P(^PXRM(810.4,X,0),U,10)'="":1,1:0);.03;I RR S Y="@1";2;@1;3;
"KRN",.402,1430,-1)
0^1
"KRN",.402,1430,0)
PXRM EDIT REMINDER RULE^3060407.1006^@^810.4^^@^3060712
"KRN",.402,1430,"%D",0)
^^1^1^3060407^
"KRN",.402,1430,"%D",1,0)

"KRN",.402,1430,"DR",1,810.4)
.01;.02;100;@1;9;S X=$$VDEF^PXRMVLST($G(X));S:X=0 Y=$$REMOVE^PXRMLCR(DA);3;
"KRN",.402,1432,-1)
0^5
"KRN",.402,1432,0)
PXRM EXTRACT DEFINITION^3020708.1609^@^810.2^^@^3060817
"KRN",.402,1432,"DIAB",1,1,810.21,0)
ALL
"KRN",.402,1432,"DR",1,810.2)
.01;100;.02;.03;1;10;
"KRN",.402,1432,"DR",2,810.21)
.01:10
"KRN",.402,1432,"DR",3,810.22)
.01:2
"KRN",.402,1434,-1)
0^7
"KRN",.402,1434,0)
PXRM EXTRACT COUNTING^3020906.1135^@^810.7^^@^3060809
"KRN",.402,1434,"DIAB",1,1,810.701,0)
ALL
"KRN",.402,1434,"DR",1,810.7)
.01;100;1;10;
"KRN",.402,1434,"DR",2,810.701)
.01:2
"KRN",.402,1435,-1)
0^9
"KRN",.402,1435,0)
PXRM EXTRACT COUNTING GROUP^3020906.1411^@^810.8^^@^3060809
"KRN",.402,1435,"DR",1,810.8)
.01;100;1;2;10;
"KRN",.402,1435,"DR",2,810.801)
.01;1;2;
"KRN",.402,1436,-1)
0^3
"KRN",.402,1436,0)
PXRM EDIT PATIENT LIST RULE^3060516.1142^@^810.4^^@^3060516
"KRN",.402,1436,"DR",1,810.4)
.01;.02;100;4;I X'="" S Y="@1";7;@1;
"KRN",.402,1511,-1)
1^4
"KRN",.402,1511,0)
PXRM EXTRACT PARAMETERS    FILE #810.2
"KRN",.402,1512,-1)
1^6
"KRN",.402,1512,0)
PXRM EXTRACT FINDINGS    FILE #810.7
"KRN",.402,1513,-1)
1^8
"KRN",.402,1513,0)
PXRM EXTRACT FINDING GROUP    FILE #810.8
"KRN",3.8,199,-1)
0^1
"KRN",3.8,199,0)
GEC2 NATIONAL ROLLUP^PU^y^^^^
"KRN",3.8,199,3)

"KRN",3.8,199,6,0)
^3.812^8^4
"KRN",3.8,199,6,1,0)
VAUGHN.SMITH@MED.VA.GOV
"KRN",3.8,199,6,6,0)
patrick.brady@VA.GOV
"KRN",3.8,199,6,7,0)
daniel.schoeps@VA.GOV
"KRN",3.8,199,6,8,0)
CHERYL.LEIFERMAN2@MED.VA.GOV
"KRN",3.8,199,6,"B","CHERYL.LEIFERMAN2@MED.VA.GOV",8)

"KRN",3.8,199,6,"B","VAUGHN.SMITH@MED.VA.GOV",1)

"KRN",3.8,199,6,"B","daniel.schoeps@VA.GOV",7)

"KRN",3.8,199,6,"B","patrick.brady@VA.GOV",6)

"KRN",19,5442,-1)
0^12
"KRN",19,5442,0)
PXRM TAXONOMY EDIT^Add/Edit Reminder Taxonomy^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,5442,1,0)
^19.06^8^8^3001003^^
"KRN",19,5442,1,1,0)
This option is used to edit the Clinical Reminder Taxonomy definitions.
"KRN",19,5442,1,2,0)
A number of taxonomies were distributed with the PCE package. These
"KRN",19,5442,1,3,0)
were based on the Ambulatory Care EP Preventative Health Maintenance
"KRN",19,5442,1,4,0)
Guidelines.
"KRN",19,5442,1,5,0)
 
"KRN",19,5442,1,6,0)
The distributed taxonomy items all have a "VA-" prefix. To alter a VA-
"KRN",19,5442,1,7,0)
prefixed taxonomy item, first copy it to a different name and then edit
"KRN",19,5442,1,8,0)
the taxonomy to reflect your site's definition for the taxonomy.
"KRN",19,5442,25)
PXRMTEDT
"KRN",19,5442,"U")
ADD/EDIT REMINDER TAXONOMY
"KRN",19,7709,-1)
0^6
"KRN",19,7709,0)
PXRM REMINDERS DUE^Reminders Due Report^^R^^^^^^^^CLINICAL REMINDERS^^
"KRN",19,7709,1,0)
^19.06^19^19^3051103^^^^
"KRN",19,7709,1,1,0)
For a selected reminder the report lists any reminders which are currently 
"KRN",19,7709,1,2,0)
due. Available report options are: 
"KRN",19,7709,1,3,0)
 
"KRN",19,7709,1,4,0)
- Individual Patient
"KRN",19,7709,1,5,0)
- Reminder Patient List
"KRN",19,7709,1,6,0)
- Hospital Location  (all patients with encounters)
"KRN",19,7709,1,7,0)
- OE/RR Team (all patients in team)
"KRN",19,7709,1,8,0)
- PCMM Provider (all practitioner patients)
"KRN",19,7709,1,9,0)
- PCMM Team (all patients in team)
"KRN",19,7709,1,10,0)
 
"KRN",19,7709,1,11,0)
A SUMMARY report  displays totals of how many patients of those selected 
"KRN",19,7709,1,12,0)
have reminders due. 
"KRN",19,7709,1,13,0)
 
"KRN",19,7709,1,14,0)
Alternatively, a DETAILED report displays patients with reminders due in 
"KRN",19,7709,1,15,0)
alphabetical order. The report displays for each patient the date the 
"KRN",19,7709,1,16,0)
reminder is due, the date the reminder was last done and next appointment 
"KRN",19,7709,1,17,0)
date. The detailed report also (optionally) lists all future appointments.
"KRN",19,7709,1,18,0)
 
"KRN",19,7709,1,19,0)
DETAILED reports may be saved as a local patient list.
"KRN",19,7709,20)

"KRN",19,7709,25)
PXRMXD
"KRN",19,7709,99)
60096,35982
"KRN",19,7709,"U")
REMINDERS DUE REPORT
"KRN",19,7710,-1)
2^5
"KRN",19,7710,0)
PXRM REMINDER REPORTS^Reminder Reports^^M^1342^^^^^^^364
"KRN",19,7710,10,0)
^19.01IP^8^8
"KRN",19,7710,10,1,0)
7709^D^1
"KRN",19,7710,10,1,"^")
PXRM REMINDERS DUE
"KRN",19,7710,10,4,0)
8609^V^20
"KRN",19,7710,10,4,"^")
PXRM REVIEW DATES
"KRN",19,7710,"U")
REMINDER REPORTS
"KRN",19,7939,-1)
0^14
"KRN",19,7939,0)
PXRM TERM EDIT^Add/Edit Reminder Term^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,7939,1,0)
^19.06^1^1^3040304^^^
"KRN",19,7939,1,1,0)
This option is used to edit reminder terms.
"KRN",19,7939,25)
PXRMTMED
"KRN",19,7939,"U")
ADD/EDIT REMINDER TERM
"KRN",19,7986,-1)
0^10
"KRN",19,7986,0)
PXRM COMPUTED FINDING EDIT^Add/Edit Reminder Computed Finding^^R^^^^^^^^CLINICAL REMINDERS^^
"KRN",19,7986,1,0)
^19.06^3^3^3010605^^^^
"KRN",19,7986,1,1,0)
This option provides for editing of computed finding entries in the
"KRN",19,7986,1,2,0)
REMINDER COMPUTED FINDINGS file. This option requires programmers
"KRN",19,7986,1,3,0)
access.
"KRN",19,7986,10.1)

"KRN",19,7986,20)

"KRN",19,7986,25)
PXRMCFED
"KRN",19,7986,99)
58101,51615
"KRN",19,7986,"U")
ADD/EDIT REMINDER COMPUTED FIN
"KRN",19,8601,-1)
0^11
"KRN",19,8601,0)
PXRM SPONSOR EDIT^Add/Edit Reminder Sponsor^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8601,1,0)
^19.06^1^1^3010605^^^^
"KRN",19,8601,1,1,0)
The option allows for editing of Reminder Sponsors.
"KRN",19,8601,25)
PXRMSPED
"KRN",19,8601,30)

"KRN",19,8601,50)

"KRN",19,8601,51)

"KRN",19,8601,63)

"KRN",19,8601,"U")
ADD/EDIT REMINDER SPONSOR
"KRN",19,8609,-1)
0^9
"KRN",19,8609,0)
PXRM REVIEW DATES^Review Date Report^^R^^^^^^^y^CLINICAL REMINDERS
"KRN",19,8609,1,0)
^19.06^11^11^3050804^^^^
"KRN",19,8609,1,1,0)
The Review Date Report is may be run for the following files:
"KRN",19,8609,1,2,0)
 
"KRN",19,8609,1,3,0)
        Reminder Computed Findings
"KRN",19,8609,1,4,0)
        Reminder Definition
"KRN",19,8609,1,5,0)
        Reminder Dialog
"KRN",19,8609,1,6,0)
       Reminder Location List
"KRN",19,8609,1,7,0)
        Reminder Sponsor
"KRN",19,8609,1,8,0)
        Reminder Taxonomy
"KRN",19,8609,1,9,0)
 
"KRN",19,8609,1,10,0)
A cutoff date may be entered and all review dates prior or equal to that
"KRN",19,8609,1,11,0)
date in the file selected are reported.
"KRN",19,8609,25)
START^PXRMREV
"KRN",19,8609,99)
58608,54651
"KRN",19,8609,"U")
REVIEW DATE REPORT
"KRN",19,8794,-1)
0^15
"KRN",19,8794,0)
PXRM EXTRACT MENU^Reminder Extract Menu^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,8794,1,0)
^19.06^2^2^3060522^^^
"KRN",19,8794,1,1,0)
This option allows management of extract definitions, extract runs, and 
"KRN",19,8794,1,2,0)
extract transmissions.
"KRN",19,8794,10,0)
^19.01IP^6^5
"KRN",19,8794,10,1,0)
8796^MA^10
"KRN",19,8794,10,1,"^")
PXRM EXTRACT MANAGEMENT
"KRN",19,8794,10,3,0)
8942^ED^30
"KRN",19,8794,10,3,"^")
PXRM EXTRACT DEFINITION
"KRN",19,8794,10,4,0)
8941^LR^40
"KRN",19,8794,10,4,"^")
PXRM LIST RULE MANAGEMENT
"KRN",19,8794,10,5,0)
8961^EC^35
"KRN",19,8794,10,5,"^")
PXRM EXTRACT COUNTING RULES
"KRN",19,8794,10,6,0)
9423^EG^36
"KRN",19,8794,10,6,"^")
PXRM EXTRACT COUNTING GROUPS
"KRN",19,8794,99)
60407,49577
"KRN",19,8794,"U")
REMINDER EXTRACT MENU
"KRN",19,8795,-1)
0^1
"KRN",19,8795,0)
PXRM EXTRACT PATIENT LIST^Patient List Management^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8795,1,0)
^19.06^7^7^3050426^^^^
"KRN",19,8795,1,1,0)
This option manages reminder patient lists. Local patient lists may be
"KRN",19,8795,1,2,0)
created from list rules, copied to OE/RR teams, copied to other patient
"KRN",19,8795,1,3,0)
lists or deleted.
"KRN",19,8795,1,4,0)
 
"KRN",19,8795,1,5,0)
Local patient lists and national patient lists (from the extract process) 
"KRN",19,8795,1,6,0)
are listed. Individual lists may be displayed or printed or used to run 
"KRN",19,8795,1,7,0)
health summaries.
"KRN",19,8795,25)
START^PXRMLPU(0)
"KRN",19,8795,"U")
PATIENT LIST MANAGEMENT
"KRN",19,8796,-1)
0^20
"KRN",19,8796,0)
PXRM EXTRACT MANAGEMENT^Reminder Extract Management^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8796,1,0)
^^40^40^3060508^
"KRN",19,8796,1,1,0)
This option uses list manager to view an extract definition, examine and 
"KRN",19,8796,1,2,0)
schedule an extract run or transmission run, view extract summary results 
"KRN",19,8796,1,3,0)
and view extract patient lists.
"KRN",19,8796,1,4,0)
 
"KRN",19,8796,1,5,0)
Each extract definition is identified by an Extract Name.  Extract names
"KRN",19,8796,1,6,0)
are displayed as selectable items. When an extract name is selected,
"KRN",19,8796,1,7,0)
the list manager actions allow the user to 
"KRN",19,8796,1,8,0)
- view and edit the extract definition
"KRN",19,8796,1,9,0)
- view the existing history of extract run information, with the most 
"KRN",19,8796,1,10,0)
recent extract runs displayed first.  
"KRN",19,8796,1,11,0)
 
"KRN",19,8796,1,12,0)
Viewing the existing history of extract runs, provides a list of extract 
"KRN",19,8796,1,13,0)
runs. When selecting a particular extract run, list manager actions allow 
"KRN",19,8796,1,14,0)
the user to:
"KRN",19,8796,1,15,0)
-- Change the view
"KRN",19,8796,1,16,0)
-- View the extract results stored in the Extract Summary file
"KRN",19,8796,1,17,0)
-- Schedule a Manual Extract run
"KRN",19,8796,1,18,0)
-- Schedule a Manual Transmission run for an existing national extract run
"KRN",19,8796,1,19,0)
-- View the Transmission History 
"KRN",19,8796,1,20,0)
 
"KRN",19,8796,1,21,0)
When the Extract Summary action is selected, the user can 
"KRN",19,8796,1,22,0)
--- view patient lists used for the run or 
"KRN",19,8796,1,23,0)
--- view the extract summary results. 
"KRN",19,8796,1,24,0)
 
"KRN",19,8796,1,25,0)
The extract summary results will contain compliance totals, similar to a 
"KRN",19,8796,1,26,0)
reminder due report.  The extract results may optionally contain finding 
"KRN",19,8796,1,27,0)
totals if the extract definition contains counting rules for a particular 
"KRN",19,8796,1,28,0)
reminder.   
"KRN",19,8796,1,29,0)
 
"KRN",19,8796,1,30,0)
Prior extract summaries for a given extract type can be displayed with 
"KRN",19,8796,1,31,0)
their HL7 transmission status and history. Reminder and finding totals of 
"KRN",19,8796,1,32,0)
individual extract summaries may be displayed or printed if required. The 
"KRN",19,8796,1,33,0)
patient lists generated by each extract may be displayed or used to print 
"KRN",19,8796,1,34,0)
health summaries if required.
"KRN",19,8796,1,35,0)
      
"KRN",19,8796,1,36,0)
National extract runs and transmissions to the Austin Automation Center 
"KRN",19,8796,1,37,0)
(AAC) can be monitored from the actions. National extracts are the only 
"KRN",19,8796,1,38,0)
extracts that can be transmitted to the AAC. Actions allow extracts and 
"KRN",19,8796,1,39,0)
transmissions runs to be initiated for a selected prior period manually. 
"KRN",19,8796,1,40,0)
Existing extracts may also be re-transmitted if required.         
"KRN",19,8796,25)
PXRMETM
"KRN",19,8796,"U")
REMINDER EXTRACT MANAGEMENT
"KRN",19,8941,-1)
0^19
"KRN",19,8941,0)
PXRM LIST RULE MANAGEMENT^List Rule Management^^A^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,8941,1,0)
^^20^20^3060508^
"KRN",19,8941,1,1,0)
This option allows creation/editing of list rules which are used to build 
"KRN",19,8941,1,2,0)
patient lists and test rule set criteria. 
"KRN",19,8941,1,3,0)
      
"KRN",19,8941,1,4,0)
There are four types of list rules criteria managed from this list manage 
"KRN",19,8941,1,5,0)
option:
"KRN",19,8941,1,6,0)
 
"KRN",19,8941,1,7,0)
       PATIENT LIST RULE   defines an existing patient list to identify 
"KRN",19,8941,1,8,0)
                           patients.
"KRN",19,8941,1,9,0)
       FINDING RULE        defines reminder term findings to identify 
"KRN",19,8941,1,10,0)
                           patients.
"KRN",19,8941,1,11,0)
       REMINDER RULE       defines a reminder, where the patient cohort 
"KRN",19,8941,1,12,0)
                           logic is used to identify applicable patients.
"KRN",19,8941,1,13,0)
       LIST RULE SET       combines multiple list rule criteria (Patient 
"KRN",19,8941,1,14,0)
                           List, Finding Rule, and Reminder Rule) in a
"KRN",19,8941,1,15,0)
                           specified sequence, where each sequence has
"KRN",19,8941,1,16,0)
                           an operation (Add, Remove, Select) to 
"KRN",19,8941,1,17,0)
                           create/modify a patient list.
"KRN",19,8941,1,18,0)
 
"KRN",19,8941,1,19,0)
Nationally released list rules are used by nationally released extract  
"KRN",19,8941,1,20,0)
definitions for national extract runs.
"KRN",19,8941,20)
D START^PXRMLRM
"KRN",19,8941,"U")
LIST RULE MANAGEMENT
"KRN",19,8942,-1)
0^16
"KRN",19,8942,0)
PXRM EXTRACT DEFINITION^Extract Definition Management^^A^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,8942,1,0)
^19.06^5^5^3060522^^
"KRN",19,8942,1,1,0)
This option allows creation/editing of extract definitions for use in 
"KRN",19,8942,1,2,0)
extract processing. Each extract definition identifies what list rules 
"KRN",19,8942,1,3,0)
should be used to create patient lists, what reminders should be run 
"KRN",19,8942,1,4,0)
against each patient list, and what counting rules should be used to 
"KRN",19,8942,1,5,0)
count findings found during reminder evaluation.
"KRN",19,8942,20)
D START^PXRMEPM
"KRN",19,8942,"U")
EXTRACT DEFINITION MANAGEMENT
"KRN",19,8961,-1)
0^18
"KRN",19,8961,0)
PXRM EXTRACT COUNTING RULES^Extract Counting Rule Management^^A^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,8961,1,0)
^^4^4^3060508^
"KRN",19,8961,1,1,0)
This option allows creation/editing of extract counting rules used in the 
"KRN",19,8961,1,2,0)
extract process. The counting rules define how to count the findings 
"KRN",19,8961,1,3,0)
defined in an extract counting group (most recent for each finding, most 
"KRN",19,8961,1,4,0)
recent finding in the group, utilization counts for the reporting period).
"KRN",19,8961,20)
D START^PXRMEFM(0)
"KRN",19,8961,"U")
EXTRACT COUNTING RULE MANAGEME
"KRN",19,8970,-1)
0^13
"KRN",19,8970,0)
PXRM LOCATION LIST EDIT^Add/Edit Reminder Location List^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8970,1,0)
^19.06^1^1^3021205^^^
"KRN",19,8970,1,1,0)
This option allows editing of Location Lists
"KRN",19,8970,25)
PXRMLLED
"KRN",19,8970,"U")
ADD/EDIT REMINDER LOCATION LIS
"KRN",19,8971,-1)
0^8
"KRN",19,8971,0)
PXRM LOCATION LIST INQUIRY^Location List Inquiry^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,8971,1,0)
^19.06^1^1^3021004^^^
"KRN",19,8971,1,1,0)
This option is used to do a location list inquiry
"KRN",19,8971,25)
LOCLIST^PXRMINQ
"KRN",19,8971,"U")
LOCATION LIST INQUIRY
"KRN",19,9423,-1)
0^17
"KRN",19,9423,0)
PXRM EXTRACT COUNTING GROUPS^Extract Counting Group Management^^A^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,9423,1,0)
^^7^7^3060508^
"KRN",19,9423,1,1,0)
This option allows creation/editing of extract counting groups.  Each 
"KRN",19,9423,1,2,0)
group defines reminder terms. Counting groups are used when an extract 
"KRN",19,9423,1,3,0)
definition is defined to accumulate COMPLIANCE and FINDING TOTALS (TYPE 
"KRN",19,9423,1,4,0)
OF TOTALS).  The counting groups are used in a counting rule during the 
"KRN",19,9423,1,5,0)
extract process to count findings within a group. The reminder term, 
"KRN",19,9423,1,6,0)
related counting group, and finding total counts are stored in the 
"KRN",19,9423,1,7,0)
Extract Reminder Summary file.
"KRN",19,9423,20)
D START^PXRMEGM(0)
"KRN",19,9423,"U")
EXTRACT COUNTING GROUP MANAGEM
"KRN",19,9654,-1)
0^4
"KRN",19,9654,0)
PXRM GEC2 QUARTERLY ROLLUP^GEC Fiscal Quarterly Rollup^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,9654,1,0)
^19.06^3^3^3050505^^
"KRN",19,9654,1,1,0)
This is a queuable option that will send quarterly information to
"KRN",19,9654,1,2,0)
Washington DC. It should be set for the 8th day of the first month
"KRN",19,9654,1,3,0)
of the next quarter and requeued "3M" every 3 months.
"KRN",19,9654,25)
START^PXRMG2M1
"KRN",19,9654,"U")
GEC FISCAL QUARTERLY ROLLUP
"KRN",19,9723,-1)
0^3
"KRN",19,9723,0)
PXRM GEC DEBUG REPORTS^GEC Debugging Reports^^A^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,9723,1,0)
^19.06^2^2^3050426^^^
"KRN",19,9723,1,1,0)
This option prints 2 reports from the local account that may be helpful in 
"KRN",19,9723,1,2,0)
finding problems with the GEC Dialogs and Health Factors.
"KRN",19,9723,20)
D PROMPT^PXRMGECX
"KRN",19,9723,"U")
GEC DEBUGGING REPORTS
"KRN",19,10065,-1)
1^2
"KRN",19,10065,0)
PXRM GEC DEGUG REPORTS
"KRN",19,10066,-1)
1^7
"KRN",19,10066,0)
PXRM REMINDERS DUE NEW
"KRN",19.1,405,-1)
0^1
"KRN",19.1,405,0)
PXRM MANAGER^Reminder Manager Key
"KRN",19.1,405,1,0)
^^2^2^3050621^
"KRN",19.1,405,1,1,0)
Assign this key to people who are responsible for managing Clinical
"KRN",19.1,405,1,2,0)
Reminders.
"KRN",101,5955,-1)
0^16
"KRN",101,5955,0)
PXRM PATIENT LIST EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5955,2,0)
^101.02A^^0
"KRN",101,5955,99)
58850,57664
"KRN",101,5956,-1)
0^15
"KRN",101,5956,0)
PXRM PATIENT LIST DISPLAY^Display Patient List^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5956,2,0)
^101.02A^^0
"KRN",101,5956,20)
D PLIST^PXRMLPU
"KRN",101,5956,99)
58856,51898
"KRN",101,5957,-1)
2^5
"KRN",101,5957,0)
PXRM PATIENT LIST MENU^^^M^1366^^^^^^^364
"KRN",101,5957,10,0)
^101.01PA^12^9
"KRN",101,5957,10,1,0)
5956^DSP^25^
"KRN",101,5957,10,1,"^")
PXRM PATIENT LIST DISPLAY
"KRN",101,5957,10,2,0)
5955^QU^99^
"KRN",101,5957,10,2,"^")
PXRM PATIENT LIST EXIT
"KRN",101,5957,10,3,0)
5959^LRM^40^
"KRN",101,5957,10,3,"^")
PXRM PATIENT LIST RULES
"KRN",101,5957,10,6,0)
5963^DE^20^
"KRN",101,5957,10,6,"^")
PXRM PATIENT LIST DELETE
"KRN",101,5957,10,8,0)
6216^COE^10^
"KRN",101,5957,10,8,"^")
PXRM PATIENT LIST OE/RR
"KRN",101,5957,10,9,0)
6340^CO^5^
"KRN",101,5957,10,9,"^")
PXRM PATIENT LIST USER COPY
"KRN",101,5957,10,10,0)
6341^CR^15^
"KRN",101,5957,10,10,"^")
PXRM PATIENT LIST USER CREATE
"KRN",101,5957,10,11,0)
6655^CV^27^
"KRN",101,5957,10,11,"^")
PXRM PATIENT LIST VIEW
"KRN",101,5957,10,12,0)
6676^DCD^22^
"KRN",101,5957,10,12,"^")
PXRM PATIENT LIST CREATION DOC
"KRN",101,5959,-1)
0^18
"KRN",101,5959,0)
PXRM PATIENT LIST RULES^List Rule Management^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5959,15)
S VALMBCK="R"
"KRN",101,5959,20)
D ^PXRMLRM
"KRN",101,5959,99)
58986,60196
"KRN",101,5960,-1)
0^11
"KRN",101,5960,0)
PXRM PATIENT LIST HEALTH SUMMARY (ALL)^Health Summary-All^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5960,20)
D HSA^PXRMLPP
"KRN",101,5960,99)
60031,42594
"KRN",101,5961,-1)
2^1
"KRN",101,5961,0)
PXRM PATIENT LIST PATIENTS MENU^^^M^1366^^^^^^^364
"KRN",101,5961,10,0)
^101.01PA^7^7
"KRN",101,5961,10,1,0)
5955^QU^99^
"KRN",101,5961,10,1,"^")
PXRM PATIENT LIST EXIT
"KRN",101,5961,10,2,0)
5960^HSA^10^
"KRN",101,5961,10,2,"^")
PXRM PATIENT LIST HEALTH SUMMARY (ALL)
"KRN",101,5961,10,3,0)
5975^CV^5^
"KRN",101,5961,10,3,"^")
PXRM PATIENT LIST CHANGE VIEW
"KRN",101,5961,10,4,0)
6225^HSI^20^
"KRN",101,5961,10,4,"^")
PXRM PATIENT LIST HEALTH SUMMARY (INDIVIDUAL)
"KRN",101,5961,10,5,0)
6342^DEM^25^
"KRN",101,5961,10,5,"^")
PXRM PATIENT LIST DEMOGRAPHIC
"KRN",101,5961,10,6,0)
6345^USR^30^
"KRN",101,5961,10,6,"^")
PXRM PATIENT LIST AUTH USER
"KRN",101,5961,10,7,0)
6677^ED^27^
"KRN",101,5961,10,7,"^")
PXRM PATIENT LIST EDIT
"KRN",101,5962,-1)
0^6
"KRN",101,5962,0)
PXRM PATIENT LIST CREATE^Create Patient List^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5962,15)
D BLDLIST^PXRMLPM S VALMBCK="R"
"KRN",101,5962,20)
D START^PXRMLCR
"KRN",101,5962,99)
58857,44044
"KRN",101,5963,-1)
0^14
"KRN",101,5963,0)
PXRM PATIENT LIST DELETE^Delete Patient List^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5963,15)
S VALMBCK="R"
"KRN",101,5963,20)
D PDELETE^PXRMLPU
"KRN",101,5963,99)
58857,44228
"KRN",101,5964,-1)
0^54
"KRN",101,5964,0)
PXRM EXTRACT DEFINITION MANAGEMENT^Extract Definition Management^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5964,20)
D PLIST^PXRMETM
"KRN",101,5964,99)
60394,50753
"KRN",101,5965,-1)
0^59
"KRN",101,5965,0)
PXRM EXTRACT MANAGEMENT EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5965,99)
58857,57974
"KRN",101,5966,-1)
0^58
"KRN",101,5966,0)
PXRM EXTRACT VIEW/SCHEDULE^View/Schedule Extract^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5966,20)
D HLIST^PXRMETM
"KRN",101,5966,99)
58994,38175
"KRN",101,5967,-1)
0^60
"KRN",101,5967,0)
PXRM EXTRACT MANAGEMENT MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5967,4)
30
"KRN",101,5967,10,0)
^101.01PA^3^3
"KRN",101,5967,10,1,0)
5966^VSE^40^
"KRN",101,5967,10,1,"^")
PXRM EXTRACT VIEW/SCHEDULE
"KRN",101,5967,10,2,0)
5964^EDM^5^
"KRN",101,5967,10,2,"^")
PXRM EXTRACT DEFINITION MANAGEMENT
"KRN",101,5967,10,3,0)
5965^QU^99^
"KRN",101,5967,10,3,"^")
PXRM EXTRACT MANAGEMENT EXIT
"KRN",101,5967,15)
D PEXIT^PXRMETM
"KRN",101,5967,26)
D SHOW^VALM
"KRN",101,5967,99)
60394,54494
"KRN",101,5975,-1)
0^13
"KRN",101,5975,0)
PXRM PATIENT LIST CHANGE VIEW^Change View^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5975,20)
D VIEW^PXRMLPP
"KRN",101,5975,99)
58861,58055
"KRN",101,5976,-1)
0^21
"KRN",101,5976,0)
PXRM EXTRACT SUMMARY MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5976,4)
30
"KRN",101,5976,10,0)
^101.01PA^5^4
"KRN",101,5976,10,2,0)
5978^DPL^20^
"KRN",101,5976,10,2,"^")
PXRM EXTRACT PATIENT LIST
"KRN",101,5976,10,3,0)
5977^QU^99^
"KRN",101,5976,10,3,"^")
PXRM EXTRACT SUMMARY EXIT
"KRN",101,5976,10,5,0)
6204^DSF^30^
"KRN",101,5976,10,5,"^")
PXRM EXTRACT SUMMARY FINDING TOTALS
"KRN",101,5976,15)
D PEXIT^PXRMETT
"KRN",101,5976,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),U),24)) ^(24)
"KRN",101,5976,26)
D SHOW^VALM
"KRN",101,5976,28)
Select Action: 
"KRN",101,5976,99)
60386,52914
"KRN",101,5977,-1)
0^30
"KRN",101,5977,0)
PXRM EXTRACT SUMMARY EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5977,99)
58861,58218
"KRN",101,5978,-1)
0^29
"KRN",101,5978,0)
PXRM EXTRACT PATIENT LIST^Display Patient List^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5978,20)
D PLIST^PXRMETT(IEN)
"KRN",101,5978,99)
58862,48210
"KRN",101,6139,-1)
0^33
"KRN",101,6139,0)
PXRM7 RECO SERVER^Reminder Compliance Server^^E^^^^^^^^
"KRN",101,6139,1,0)
^^14^14^3060119^^^^
"KRN",101,6139,1,1,0)
This is the Sever Protocol that will send the Reminder Compliance HL7 
"KRN",101,6139,1,2,0)
messages to Austin Automation Center as well as other locations.
"KRN",101,6139,1,3,0)

"KRN",101,6139,1,4,0)

"KRN",101,6139,1,5,0)

"KRN",101,6139,1,6,0)

"KRN",101,6139,1,7,0)

"KRN",101,6139,1,8,0)

"KRN",101,6139,1,9,0)

"KRN",101,6139,1,10,0)

"KRN",101,6139,1,11,0)

"KRN",101,6139,1,12,0)

"KRN",101,6139,1,13,0)

"KRN",101,6139,1,14,0)

"KRN",101,6139,4)
^^^RCS
"KRN",101,6139,15)

"KRN",101,6139,99)
58920,40106
"KRN",101,6139,770)
PXRM7-REM-COM^PXRM7-REM-COM^ORU^R01^53^^PXRM7-RECO^AL^AL^2.3.1^ORU
"KRN",101,6139,772)

"KRN",101,6139,775,0)
^101.0775PA^1^1
"KRN",101,6139,775,1,0)
6140
"KRN",101,6139,775,1,"^")
PXRM7 RECO SUBSCRIBER
"KRN",101,6140,-1)
0^32
"KRN",101,6140,0)
PXRM7 RECO SUBSCRIBER^Reminder Compliance Subscriber^^S^^^^^^^^
"KRN",101,6140,1,0)
^101.06^7^7^3051201^^^^
"KRN",101,6140,1,1,0)
This is the Clinical Reminder Compliance Subscribing Protocol
"KRN",101,6140,1,2,0)

"KRN",101,6140,1,3,0)

"KRN",101,6140,1,4,0)

"KRN",101,6140,1,5,0)

"KRN",101,6140,1,6,0)

"KRN",101,6140,1,7,0)

"KRN",101,6140,4)
^^^RCS
"KRN",101,6140,99)
58920,40398
"KRN",101,6140,770)
^PXRM7-REM-COM^^R01^^^PXRM7-RECO^^^^ACK
"KRN",101,6140,771)
D STORE^PXRM7API
"KRN",101,6140,773)
1^0^0
"KRN",101,6204,-1)
0^31
"KRN",101,6204,0)
PXRM EXTRACT SUMMARY FINDING TOTALS^Display/Suppress Finding Totals^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6204,2,0)
^101.02A^^0
"KRN",101,6204,20)
D FLIST^PXRMETT
"KRN",101,6204,99)
58976,59187
"KRN",101,6208,-1)
0^26
"KRN",101,6208,0)
PXRM LIST RULE CREATE^Create Rule^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6208,20)
D LRADD^PXRMLRM
"KRN",101,6208,99)
58987,32244
"KRN",101,6209,-1)
0^25
"KRN",101,6209,0)
PXRM LIST RULE CHANGE VIEW^Change View^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6209,20)
D VIEW^PXRMLRM
"KRN",101,6209,99)
58986,59425
"KRN",101,6210,-1)
0^24
"KRN",101,6210,0)
PXRM LIST RULE MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,6210,4)
30
"KRN",101,6210,10,0)
^101.01PA^6^5
"KRN",101,6210,10,1,0)
6209^CV^10^
"KRN",101,6210,10,1,"^")
PXRM LIST RULE CHANGE VIEW
"KRN",101,6210,10,2,0)
6208^CR^20^
"KRN",101,6210,10,2,"^")
PXRM LIST RULE CREATE
"KRN",101,6210,10,4,0)
6211^QU^90^
"KRN",101,6210,10,4,"^")
PXRM LIST RULE EXIT
"KRN",101,6210,10,5,0)
6213^DR^30^
"KRN",101,6210,10,5,"^")
PXRM LIST RULE DISPLAY/EDIT
"KRN",101,6210,10,6,0)
6748^TEST^40^
"KRN",101,6210,10,6,"^")
PXRM RULE SET TEST
"KRN",101,6210,15)
D PEXIT^PXRMLRM
"KRN",101,6210,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),U),24)) ^(24)
"KRN",101,6210,26)
D SHOW^VALM
"KRN",101,6210,99)
60185,31282
"KRN",101,6211,-1)
0^27
"KRN",101,6211,0)
PXRM LIST RULE EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6211,99)
58986,59590
"KRN",101,6213,-1)
0^28
"KRN",101,6213,0)
PXRM LIST RULE DISPLAY/EDIT^Display/Edit Rule^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6213,20)
D LRINQ^PXRMLRM
"KRN",101,6213,99)
58988,36206
"KRN",101,6216,-1)
0^17
"KRN",101,6216,0)
PXRM PATIENT LIST OE/RR^Copy to OE/RR Team^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6216,20)
D POERR^PXRMLPU
"KRN",101,6216,99)
58993,39048
"KRN",101,6217,-1)
0^49
"KRN",101,6217,0)
PXRM EXTRACT DEFINITION CREATE^Create Extract Definition^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6217,20)
D EPADD^PXRMEPM
"KRN",101,6217,99)
60394,50446
"KRN",101,6218,-1)
0^51
"KRN",101,6218,0)
PXRM EXTRACT DEFINITION DISPLAY/EDIT^Display/Edit Extract Definition^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6218,20)
D EPINQ^PXRMEPM
"KRN",101,6218,99)
60394,50550
"KRN",101,6219,-1)
0^53
"KRN",101,6219,0)
PXRM EXTRACT DEFINITION EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6219,99)
58993,53714
"KRN",101,6220,-1)
0^55
"KRN",101,6220,0)
PXRM EXTRACT DEFINITION MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,6220,4)
30
"KRN",101,6220,10,0)
^101.01PA^3^3
"KRN",101,6220,10,1,0)
6217^CR^10^
"KRN",101,6220,10,1,"^")
PXRM EXTRACT DEFINITION CREATE
"KRN",101,6220,10,2,0)
6218^DE^20^
"KRN",101,6220,10,2,"^")
PXRM EXTRACT DEFINITION DISPLAY/EDIT
"KRN",101,6220,10,3,0)
6219^QU^90^
"KRN",101,6220,10,3,"^")
PXRM EXTRACT DEFINITION EXIT
"KRN",101,6220,15)
D PEXIT^PXRMEPM
"KRN",101,6220,26)
D SHOW^VALM
"KRN",101,6220,99)
60401,37246
"KRN",101,6221,-1)
0^56
"KRN",101,6221,0)
PXRM EXTRACT DEFINITION SELECT ENTRY^Select an Item^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6221,20)
D XSEL^PXRMEPM
"KRN",101,6221,99)
58993,54606
"KRN",101,6222,-1)
0^52
"KRN",101,6222,0)
PXRM EXTRACT DEFINITION EDIT^Edit Extract Definition^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6222,20)
D EPEDIT^PXRMEPED
"KRN",101,6222,99)
60394,50611
"KRN",101,6223,-1)
0^50
"KRN",101,6223,0)
PXRM EXTRACT DEFINITION DISPLAY MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,6223,4)
30
"KRN",101,6223,10,0)
^101.01PA^2^2
"KRN",101,6223,10,1,0)
6222^ED^10^
"KRN",101,6223,10,1,"^")
PXRM EXTRACT DEFINITION EDIT
"KRN",101,6223,10,2,0)
6219^QU^90^
"KRN",101,6223,10,2,"^")
PXRM EXTRACT DEFINITION EXIT
"KRN",101,6223,15)
D PEXIT^PXRMEPED
"KRN",101,6223,26)
D SHOW^VALM
"KRN",101,6223,99)
60401,44051
"KRN",101,6225,-1)
0^9
"KRN",101,6225,0)
PXRM PATIENT LIST HEALTH SUMMARY (INDIVIDUAL)^Health Summary-Ind^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6225,20)
D HSI^PXRMLPP
"KRN",101,6225,99)
60088,29401
"KRN",101,6244,-1)
0^46
"KRN",101,6244,0)
PXRM EXTRACT COUNTING RULE EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6244,99)
59052,56191
"KRN",101,6245,-1)
0^42
"KRN",101,6245,0)
PXRM EXTRACT COUNTING RULE CREATE^Create Counting Rule^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6245,20)
D EFADD^PXRMEFM
"KRN",101,6245,99)
60394,49262
"KRN",101,6246,-1)
0^44
"KRN",101,6246,0)
PXRM EXTRACT COUNTING RULE DISPLAY/EDIT^Display/Edit Counting Rules^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6246,20)
D EFINQ^PXRMEFM
"KRN",101,6246,99)
60394,49525
"KRN",101,6247,-1)
0^47
"KRN",101,6247,0)
PXRM EXTRACT COUNTING RULE MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,6247,4)
30
"KRN",101,6247,10,0)
^101.01PA^3^3
"KRN",101,6247,10,1,0)
6245^CR^10^
"KRN",101,6247,10,1,"^")
PXRM EXTRACT COUNTING RULE CREATE
"KRN",101,6247,10,2,0)
6246^DE^20^
"KRN",101,6247,10,2,"^")
PXRM EXTRACT COUNTING RULE DISPLAY/EDIT
"KRN",101,6247,10,3,0)
6244^QU^90^
"KRN",101,6247,10,3,"^")
PXRM EXTRACT COUNTING RULE EXIT
"KRN",101,6247,15)
D PEXIT^PXRMEFM
"KRN",101,6247,26)
D SHOW^VALM
"KRN",101,6247,99)
60403,40407
"KRN",101,6248,-1)
0^48
"KRN",101,6248,0)
PXRM EXTRACT COUNTING RULE SELECT ENTRY^Select an Item^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6248,20)
D XSEL^PXRMEFM
"KRN",101,6248,99)
59053,38029
"KRN",101,6249,-1)
0^43
"KRN",101,6249,0)
PXRM EXTRACT COUNTING RULE DISPLAY MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,6249,4)
30
"KRN",101,6249,10,0)
^101.01PA^3^3
"KRN",101,6249,10,1,0)
6250^ED^10^
"KRN",101,6249,10,1,"^")
PXRM EXTRACT COUNTING RULE EDIT
"KRN",101,6249,10,2,0)
6244^QU^90^
"KRN",101,6249,10,2,"^")
PXRM EXTRACT COUNTING RULE EXIT
"KRN",101,6249,10,3,0)
6251^CG^20^
"KRN",101,6249,10,3,"^")
PXRM EXTRACT COUNTING GROUPS 
"KRN",101,6249,15)
D PEXIT^PXRMEFED
"KRN",101,6249,26)
D SHOW^VALM
"KRN",101,6249,99)
60403,41337
"KRN",101,6250,-1)
0^45
"KRN",101,6250,0)
PXRM EXTRACT COUNTING RULE EDIT^Edit Counting Rule^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6250,20)
D EFEDIT^PXRMEFED
"KRN",101,6250,99)
60394,49588
"KRN",101,6251,-1)
0^41
"KRN",101,6251,0)
PXRM EXTRACT COUNTING GROUPS ^Extract Counting Groups^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6251,20)
D EFGRP^PXRMEFED
"KRN",101,6251,99)
60395,47974
"KRN",101,6252,-1)
0^34
"KRN",101,6252,0)
PXRM EXTRACT COUNTING GROUP CREATE^Create Counting Group^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6252,20)
D EGADD^PXRMEGM
"KRN",101,6252,99)
60394,49687
"KRN",101,6253,-1)
0^38
"KRN",101,6253,0)
PXRM EXTRACT COUNTING GROUP EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6253,99)
59053,44664
"KRN",101,6254,-1)
0^36
"KRN",101,6254,0)
PXRM EXTRACT COUNTING GROUP DISPLAY/EDIT^Display/Edit Counting Group^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6254,20)
D EGINQ^PXRMEGM
"KRN",101,6254,99)
60394,49809
"KRN",101,6255,-1)
0^39
"KRN",101,6255,0)
PXRM EXTRACT COUNTING GROUP MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,6255,4)
30
"KRN",101,6255,10,0)
^101.01PA^3^3
"KRN",101,6255,10,1,0)
6252^CR^10^
"KRN",101,6255,10,1,"^")
PXRM EXTRACT COUNTING GROUP CREATE
"KRN",101,6255,10,2,0)
6254^DE^20^
"KRN",101,6255,10,2,"^")
PXRM EXTRACT COUNTING GROUP DISPLAY/EDIT
"KRN",101,6255,10,3,0)
6253^QU^90^
"KRN",101,6255,10,3,"^")
PXRM EXTRACT COUNTING GROUP EXIT
"KRN",101,6255,15)
D PEXIT^PXRMEGM
"KRN",101,6255,26)
D SHOW^VALM
"KRN",101,6255,99)
60401,42873
"KRN",101,6256,-1)
0^40
"KRN",101,6256,0)
PXRM EXTRACT COUNTING GROUP SELECT ENTRY^Select an Item^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6256,20)
D XSEL^PXRMEGM
"KRN",101,6256,99)
59053,47269
"KRN",101,6257,-1)
0^37
"KRN",101,6257,0)
PXRM EXTRACT COUNTING GROUP EDIT^Edit Counting Group^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6257,20)
D EGEDIT^PXRMEGED
"KRN",101,6257,99)
60394,49858
"KRN",101,6258,-1)
0^35
"KRN",101,6258,0)
PXRM EXTRACT COUNTING GROUP DISPLAY MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,6258,4)
30
"KRN",101,6258,10,0)
^101.01PA^2^2
"KRN",101,6258,10,1,0)
6257^ED^10^
"KRN",101,6258,10,1,"^")
PXRM EXTRACT COUNTING GROUP EDIT
"KRN",101,6258,10,2,0)
6253^QU^80^
"KRN",101,6258,10,2,"^")
PXRM EXTRACT COUNTING GROUP EXIT
"KRN",101,6258,15)
D PEXIT^PXRMEGED
"KRN",101,6258,26)
D SHOW^VALM
"KRN",101,6258,99)
60403,42606
"KRN",101,6327,-1)
0^7
"KRN",101,6327,0)
PXRM PATIENT LIST USER^View my List^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6327,15)
D BLDLIST^PXRMLPM S VALMBCK="R"
"KRN",101,6327,20)
D START^PXRMLPU(1)
"KRN",101,6327,99)
59357,62081
"KRN",101,6340,-1)
0^19
"KRN",101,6340,0)
PXRM PATIENT LIST USER COPY^Copy Patient List^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6340,15)
S VALMBCK="R"
"KRN",101,6340,20)
D PCOPY^PXRMLPU
"KRN",101,6340,99)
59358,56678
"KRN",101,6341,-1)
0^20
"KRN",101,6341,0)
PXRM PATIENT LIST USER CREATE^Create Patient List^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6341,15)
D BLDLIST^PXRMLPU S VALMBCK="R"
"KRN",101,6341,20)
D ^PXRMLCR
"KRN",101,6341,99)
59358,57367
"KRN",101,6342,-1)
0^12
"KRN",101,6342,0)
PXRM PATIENT LIST DEMOGRAPHIC^Demographic Report^^A^^^^^^^^
"KRN",101,6342,15)
S VALMBCK="R"
"KRN",101,6342,20)
D DEM^PXRMLPP
"KRN",101,6342,99)
59358,59722
"KRN",101,6345,-1)
0^2
"KRN",101,6345,0)
PXRM PATIENT LIST AUTH USER^View Users^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6345,1,0)
^101.06^2^2^3050707^^^^
"KRN",101,6345,1,1,0)
Called from Clinical Reminders Patient List interface when the USR
"KRN",101,6345,1,2,0)
action is selected.
"KRN",101,6345,15)
S VALMBCK="R"
"KRN",101,6345,20)
D USER^PXRMLPP
"KRN",101,6345,24)
I $$USR^PXRMLPP(IEN)="F"
"KRN",101,6345,99)
59358,62229
"KRN",101,6655,-1)
0^4
"KRN",101,6655,0)
PXRM PATIENT LIST VIEW^Change View^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6655,15)
S VALMBCK="R"
"KRN",101,6655,20)
D VIEW^PXRMLPU
"KRN",101,6655,99)
60012,50744
"KRN",101,6676,-1)
0^8
"KRN",101,6676,0)
PXRM PATIENT LIST CREATION DOC^Display Creation Doc^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6676,1,0)
^101.06^1^1^3050630^^
"KRN",101,6676,1,1,0)
Protocol for displaying patient list creation documentation.
"KRN",101,6676,20)
D DCDOC^PXRMLCD
"KRN",101,6676,99)
60081,43394
"KRN",101,6677,-1)
0^10
"KRN",101,6677,0)
PXRM PATIENT LIST EDIT^Edit Patient List^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6677,1,0)
^101.06^1^1^3050707^^^^
"KRN",101,6677,1,1,0)
Called by Clinical Reminders patient list interface edit action.
"KRN",101,6677,2,0)
^101.02A^1^1
"KRN",101,6677,2,1,0)
ED
"KRN",101,6677,2,"B","ED",1)

"KRN",101,6677,15)
S VALMBCK="R"
"KRN",101,6677,20)
D EDIT^PXRMLPP
"KRN",101,6677,24)
I $$EDITOK^PXRMLPP(IEN)
"KRN",101,6677,99)
60087,54520
"KRN",101,6748,-1)
0^23
"KRN",101,6748,0)
PXRM RULE SET TEST^Test Rule Set^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6748,1,0)
^101.06^2^2^3051012^^^
"KRN",101,6748,1,1,0)
Test the structure of a rule set.
"KRN",101,6748,1,2,0)

"KRN",101,6748,20)
D RSTESTS^PXRMRST
"KRN",101,6748,24)
I PXRMTYP=3
"KRN",101,6748,99)
60185,30866
"KRN",101,6934,-1)
1^22
"KRN",101,6934,0)
PXRM EXTRACT SUMMARY PAT TOTALS
"KRN",101,6935,-1)
1^57
"KRN",101,6935,0)
PXRM RECEIVE HL7
"KRN",409.61,822,-1)
0^3
"KRN",409.61,822,0)
PXRM PATIENT LIST PATIENTS^1^^100^7^19^^1^^PXRM PATIENT LIST PATIENTS MENU^Reminder Patient List^1^^1
"KRN",409.61,822,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,822,"ARRAY")
 ^TMP("PXRMLPP",$J)
"KRN",409.61,822,"COL",0)
^409.621^3^3
"KRN",409.61,822,"COL",1,0)
HEADER1^8^55^Patient Name
"KRN",409.61,822,"COL",2,0)
HEADER2^42^15^DFN
"KRN",409.61,822,"COL",3,0)
HEADER3^59^20^PCMM Institution^^0
"KRN",409.61,822,"COL","AIDENT",0,3)

"KRN",409.61,822,"COL","B","HEADER1",1)

"KRN",409.61,822,"COL","B","HEADER2",2)

"KRN",409.61,822,"COL","B","HEADER3",3)

"KRN",409.61,822,"FNL")
D EXIT^PXRMLPP
"KRN",409.61,822,"HDR")
D HDR^PXRMLPP
"KRN",409.61,822,"HLP")
D HLP^PXRMLPP
"KRN",409.61,822,"INIT")
D ENTRY^PXRMLPP
"KRN",409.61,824,-1)
0^5
"KRN",409.61,824,0)
PXRM EXTRACT MANAGEMENT^1^^80^5^19^^1^^PXRM EXTRACT MANAGEMENT MENU^Reminder Extract Management^1^^1
"KRN",409.61,824,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,824,"ARRAY")
 ^TMP("PXRMETM",$J)
"KRN",409.61,824,"COL",0)
^409.621^3^3
"KRN",409.61,824,"COL",1,0)
HEADER1^2^6^Item
"KRN",409.61,824,"COL",2,0)
HEADER2^8^30^Extract Type
"KRN",409.61,824,"COL",3,0)
HEADER3^70^10^Class
"KRN",409.61,824,"COL","B","HEADER1",1)

"KRN",409.61,824,"COL","B","HEADER2",2)

"KRN",409.61,824,"COL","B","HEADER3",3)

"KRN",409.61,824,"FNL")
D EXIT^PXRMETM
"KRN",409.61,824,"HDR")
D HDR^PXRMETM
"KRN",409.61,824,"HLP")
D HLP^PXRMETM
"KRN",409.61,824,"INIT")
D ENTRY^PXRMETM
"KRN",409.61,825,-1)
0^14
"KRN",409.61,825,0)
PXRM EXTRACT HISTORY^1^^80^8^18^^1^^PXRM EXTRACT HISTORY MENU^Examine/Schedule Extract^1^^1
"KRN",409.61,825,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,825,"ARRAY")
 ^TMP("PXRMETH",$J)
"KRN",409.61,825,"COL",0)
^409.621^3^3
"KRN",409.61,825,"COL",1,0)
HEADER1^2^8^Item
"KRN",409.61,825,"COL",2,0)
HEADER2^10^15^Extract Summary
"KRN",409.61,825,"COL",3,0)
HEADER3^35^45^Date Created         Transmission Date   Auto     
"KRN",409.61,825,"COL","B","HEADER1",1)

"KRN",409.61,825,"COL","B","HEADER2",2)

"KRN",409.61,825,"COL","B","HEADER3",3)

"KRN",409.61,825,"FNL")
D EXIT^PXRMETH
"KRN",409.61,825,"HDR")
D HDR^PXRMETH
"KRN",409.61,825,"HLP")
D HLP^PXRMETH
"KRN",409.61,825,"INIT")
D ENTRY^PXRMETH
"KRN",409.61,826,-1)
0^15
"KRN",409.61,826,0)
PXRM EXTRACT SUMMARY^1^^80^6^18^^1^^PXRM EXTRACT SUMMARY MENU^Extract Summary^1
"KRN",409.61,826,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,826,"ARRAY")
 ^TMP("PXRMETT",$J)
"KRN",409.61,826,"COL",0)
^409.621^3^3
"KRN",409.61,826,"COL",1,0)
HEADER1^2^6^Item
"KRN",409.61,826,"COL",2,0)
HEADER2^8^30^Patient List/Station/Reminder
"KRN",409.61,826,"COL",3,0)
HEADER3^45^40^Total   Appl.    N/A    Due  Not Due
"KRN",409.61,826,"COL","B","HEADER1",1)

"KRN",409.61,826,"COL","B","HEADER2",2)

"KRN",409.61,826,"COL","B","HEADER3",3)

"KRN",409.61,826,"FNL")
D EXIT^PXRMETT
"KRN",409.61,826,"HDR")
D HDR^PXRMETT
"KRN",409.61,826,"HLP")
D HLP^PXRMETT
"KRN",409.61,826,"INIT")
D ENTRY^PXRMETT
"KRN",409.61,829,-1)
0^13
"KRN",409.61,829,0)
PXRM EXTRACT HELP^2^^80^3^20^^1^^^Extract Help^^^1
"KRN",409.61,829,1)
^
"KRN",409.61,829,"ARRAY")
 ^TMP(SUB,$J)
"KRN",409.61,829,"INIT")
D LOAD^PXRMEHLP(SUB)
"KRN",409.61,836,-1)
0^10
"KRN",409.61,836,0)
PXRM EXTRACT DEF DISPLAY^2^^80^2^21^0^1^^^Extract Definition Display
"KRN",409.61,836,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,836,"ARRAY")
 ^TMP("PXRMETM1",$J)
"KRN",409.61,879,-1)
0^16
"KRN",409.61,879,0)
PXRM EXTRACT TRANSMISSIONS^2^^80^7^18^^1^^^Extract Transmission History
"KRN",409.61,879,"ARRAY")
 ^TMP("PXRMETHL",$J)
"KRN",409.61,879,"COL",0)
^409.621^3^3
"KRN",409.61,879,"COL",1,0)
HEADER1^2^15^HL7 Message ID
"KRN",409.61,879,"COL",2,0)
HEADER2^20^20^Date Transmitted
"KRN",409.61,879,"COL",3,0)
HEADER3^50^20^Transmission Status
"KRN",409.61,879,"COL","B","HEADER1",1)

"KRN",409.61,879,"COL","B","HEADER2",2)

"KRN",409.61,879,"COL","B","HEADER3",3)

"KRN",409.61,879,"HDR")
D HDR^PXRMETHL
"KRN",409.61,879,"INIT")
D ENTRY^PXRMETHL
"KRN",409.61,880,-1)
0^17
"KRN",409.61,880,0)
PXRM LIST RULE MANAGEMENT^1^^80^6^19^^1^^PXRM LIST RULE MENU^List Rule Management^^^1
"KRN",409.61,880,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,880,"ARRAY")
 ^TMP("PXRMLRM",$J)
"KRN",409.61,880,"COL",0)
^409.621^3^3
"KRN",409.61,880,"COL",1,0)
HEADER1^2^6^Item
"KRN",409.61,880,"COL",2,0)
HEADER2^8^60^
"KRN",409.61,880,"COL",3,0)
HEADER3^70^10^Class
"KRN",409.61,880,"COL","B","HEADER1",1)

"KRN",409.61,880,"COL","B","HEADER2",2)

"KRN",409.61,880,"COL","B","HEADER3",3)

"KRN",409.61,880,"FNL")
D EXIT^PXRMLRM
"KRN",409.61,880,"HDR")
D HDR^PXRMLRM
"KRN",409.61,880,"HLP")
D HLP^PXRMLRM
"KRN",409.61,880,"INIT")
D ENTRY^PXRMLRM
"KRN",409.61,884,-1)
0^12
"KRN",409.61,884,0)
PXRM EXTRACT DEFINITIONS^1^^80^6^19^^1^^PXRM EXTRACT DEFINITION MENU^Extract Definition Management^^^1
"KRN",409.61,884,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,884,"ARRAY")
 ^TMP("PXRMEPM",$J)
"KRN",409.61,884,"COL",0)
^409.621^3^3
"KRN",409.61,884,"COL",1,0)
HEADER1^2^6^Item
"KRN",409.61,884,"COL",2,0)
HEADER2^8^60^Extract Name
"KRN",409.61,884,"COL",3,0)
HEADER3^70^10^Class
"KRN",409.61,884,"COL","B","HEADER1",1)

"KRN",409.61,884,"COL","B","HEADER2",2)

"KRN",409.61,884,"COL","B","HEADER3",3)

"KRN",409.61,884,"FNL")
D EXIT^PXRMEPM
"KRN",409.61,884,"HDR")
D HDR^PXRMEPM
"KRN",409.61,884,"HLP")
D HLP^PXRMEPM
"KRN",409.61,884,"INIT")
D ENTRY^PXRMEPM
"KRN",409.61,885,-1)
0^11
"KRN",409.61,885,0)
PXRM EXTRACT DEFINITION EDIT^1^^120^3^19^^1^^PXRM EXTRACT DEFINITION DISPLAY MENU^Display/Edit Extract Def^^^1
"KRN",409.61,885,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,885,"ARRAY")
 ^TMP("PXRMEPED",$J)
"KRN",409.61,885,"FNL")
D EXIT^PXRMEPED
"KRN",409.61,885,"HDR")
D HDR^PXRMEPED
"KRN",409.61,885,"HLP")
D HLP^PXRMEPED
"KRN",409.61,885,"INIT")
D ENTRY^PXRMEPED
"KRN",409.61,891,-1)
0^6
"KRN",409.61,891,0)
PXRM EXTRACT COUNTING RULES^1^^80^6^19^1^1^^PXRM EXTRACT COUNTING RULE MENU^Extract Counting Rule Mgmt^^^1
"KRN",409.61,891,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,891,"ARRAY")
 ^TMP("PXRMEFM",$J)
"KRN",409.61,891,"COL",0)
^409.621^3^3
"KRN",409.61,891,"COL",1,0)
HEADER1^2^6^Item
"KRN",409.61,891,"COL",2,0)
HEADER2^8^60^Extract Counting Rule
"KRN",409.61,891,"COL",3,0)
HEADER3^70^10^Class
"KRN",409.61,891,"COL","B","HEADER1",1)

"KRN",409.61,891,"COL","B","HEADER2",2)

"KRN",409.61,891,"COL","B","HEADER3",3)

"KRN",409.61,891,"FNL")
D EXIT^PXRMEFM
"KRN",409.61,891,"HDR")
D HDR^PXRMEFM
"KRN",409.61,891,"HLP")
D HLP^PXRMEFM
"KRN",409.61,891,"INIT")
D ENTRY^PXRMEFM
"KRN",409.61,892,-1)
0^7
"KRN",409.61,892,0)
PXRM EXTRACT COUNT RULE EDIT^1^^80^3^19^^1^^PXRM EXTRACT COUNTING RULE DISPLAY MENU^Display/Edit Counting Rule^^^1
"KRN",409.61,892,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,892,"ARRAY")
 ^TMP("PXRMEFED",$J)
"KRN",409.61,892,"FNL")
D EXIT^PXRMEFED
"KRN",409.61,892,"HDR")
D HDR^PXRMEFED
"KRN",409.61,892,"HLP")
D HLP^PXRMEFED
"KRN",409.61,892,"INIT")
D ENTRY^PXRMEFED
"KRN",409.61,893,-1)
0^8
"KRN",409.61,893,0)
PXRM EXTRACT COUNTING GROUPS^1^^80^6^19^1^1^^PXRM EXTRACT COUNTING GROUP MENU^Extract Counting Group Mgmt^^^1
"KRN",409.61,893,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,893,"ARRAY")
 ^TMP("PXRMEGM",$J)
"KRN",409.61,893,"COL",0)
^409.621^3^3
"KRN",409.61,893,"COL",1,0)
HEADER1^2^6^Item
"KRN",409.61,893,"COL",2,0)
HEADER2^8^60^Extract Counting Group
"KRN",409.61,893,"COL",3,0)
HEADER3^70^10^Class
"KRN",409.61,893,"COL","B","HEADER1",1)

"KRN",409.61,893,"COL","B","HEADER2",2)

"KRN",409.61,893,"COL","B","HEADER3",3)

"KRN",409.61,893,"FNL")
D EXIT^PXRMEGM
"KRN",409.61,893,"HDR")
D HDR^PXRMEGM
"KRN",409.61,893,"HLP")
D HLP^PXRMEGM
"KRN",409.61,893,"INIT")
D ENTRY^PXRMEGM
"KRN",409.61,894,-1)
0^9
"KRN",409.61,894,0)
PXRM EXTRACT COUNTING GRP EDIT^1^^80^3^19^1^1^^PXRM EXTRACT COUNTING GROUP DISPLAY MENU^Edit Extract Counting Group^^^1
"KRN",409.61,894,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,894,"ARRAY")
 ^TMP("PXRMEGED",$J)
"KRN",409.61,894,"FNL")
D EXIT^PXRMEGED
"KRN",409.61,894,"HDR")
D HDR^PXRMEGED
"KRN",409.61,894,"HLP")
D HLP^PXRMEGED
"KRN",409.61,894,"INIT")
D ENTRY^PXRMEGED
"KRN",409.61,897,-1)
0^1
"KRN",409.61,897,0)
PXRM PATIENT LIST USER^1^^120^4^19^0^1^^PXRM PATIENT LIST MENU^Reminder User Patient List^1^^1
"KRN",409.61,897,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,897,"ARRAY")
 ^TMP("PXRMLPU",$J)
"KRN",409.61,897,"COL",0)
^409.621^6^6
"KRN",409.61,897,"COL",1,0)
HEADER1^2^10^Item^^0
"KRN",409.61,897,"COL",2,0)
HEADER2^8^45^Reminder Patient List Name^^1
"KRN",409.61,897,"COL",3,0)
HEADER3^55^10^Created^^0
"KRN",409.61,897,"COL",4,0)
HEADER4^72^8^Patients^^0
"KRN",409.61,897,"COL",5,0)
HEADER6^82^5^Type^^0
"KRN",409.61,897,"COL",6,0)
HEADER7^88^6^Access
"KRN",409.61,897,"COL","AIDENT",0,1)

"KRN",409.61,897,"COL","AIDENT",0,3)

"KRN",409.61,897,"COL","AIDENT",0,4)

"KRN",409.61,897,"COL","AIDENT",0,5)

"KRN",409.61,897,"COL","AIDENT",1,2)

"KRN",409.61,897,"COL","B","HEADER1",1)

"KRN",409.61,897,"COL","B","HEADER2",2)

"KRN",409.61,897,"COL","B","HEADER3",3)

"KRN",409.61,897,"COL","B","HEADER4",4)

"KRN",409.61,897,"COL","B","HEADER6",5)

"KRN",409.61,897,"COL","B","HEADER7",6)

"KRN",409.61,897,"FNL")
D EXIT^PXRMLPU
"KRN",409.61,897,"HDR")
D HDR^PXRMLPU
"KRN",409.61,897,"HLP")
D HLP^PXRMLPU
"KRN",409.61,897,"INIT")
D ENTRY^PXRMLPU
"KRN",409.61,950,-1)
0^2
"KRN",409.61,950,0)
PXRM PATIENT LIST CREATION DOC^2^^80^5^19^1^1^^^Creation Documentation^1^^1
"KRN",409.61,950,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,950,"ARRAY")
 ^TMP("PXRMLCD",$J)
"KRN",409.61,950,"FNL")
D EXIT^PXRMLCD
"KRN",409.61,950,"HDR")
D HDR^PXRMLCD
"KRN",409.61,950,"HLP")
D HELP^PXRMLCD
"KRN",409.61,950,"INIT")

"KRN",409.61,955,-1)
0^4
"KRN",409.61,955,0)
PXRM RULE SET TEST^2^^80^5^20^1^1^^^Rule Set Test^1^^1
"KRN",409.61,955,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,955,"ARRAY")
 ^TMP("PXRMRST",$J)
"KRN",409.61,955,"FNL")
D EXIT^PXRMRST
"KRN",409.61,955,"HDR")
D HDR^PXRMRST
"KRN",409.61,955,"HLP")
D HELP^PXRMRST
"KRN",409.61,955,"INIT")

"KRN",409.61,997,-1)
1^18
"KRN",409.61,997,0)
PXRM PATIENT LIST
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",802.4,100,2,101)
SPONSOR^P811.6'^PXRMD(811.6,^100;2^Q
"PGL",802.42,110,1,1)
EDIT BY^P200'^VA(200,^110;1^Q
"PKG",364,-1)
1^1
"PKG",364,0)
CLINICAL REMINDERS^PXRM^Clinical Reminders^^^3011030
"PKG",364,20,0)
^9.402P^^
"PKG",364,22,0)
^9.49I^1^1
"PKG",364,22,1,0)
2.0^3050204
"PKG",364,22,1,"PAH",1,0)
4^3060817
"PKG",364,22,1,"PAH",1,1,0)
^^3^3^3060817
"PKG",364,22,1,"PAH",1,1,1,0)
Removal of old-style MRD and bug fixes.
"PKG",364,22,1,"PAH",1,1,2,0)

"PKG",364,22,1,"PAH",1,1,3,0)

"PRE")
PXRMP4EC
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
173
"RTN","PXRM")
0^38^B33753989
"RTN","PXRM",1,0)
PXRM ; SLC/PKR - Clinical Reminders entry points. ; 06/09/2006
"RTN","PXRM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRM",3,0)
 ;Entry points in this routine are listed in DBIA #2182.
"RTN","PXRM",4,0)
 ;==========================================================
"RTN","PXRM",5,0)
MAIN(DFN,PXRMITEM,OUTTYPE,DISC) ;Main driver for clinical reminders.
"RTN","PXRM",6,0)
 ;INPUT  DFN - Pointer to Patient File (#2)
"RTN","PXRM",7,0)
 ;       PXRMITEM - IEN of reminder to evaluate.
"RTN","PXRM",8,0)
 ;       OUTTYPE - Flag to indicate type of output information.
"RTN","PXRM",9,0)
 ;         0 - Reminders DUE NOW only (CLINICAL REMINDERS DUE
"RTN","PXRM",10,0)
 ;             HS component)
"RTN","PXRM",11,0)
 ;         1 - All Reminders with Next and Last Information
"RTN","PXRM",12,0)
 ;             (CLINICAL REMINDERS SUMMARY HS component)
"RTN","PXRM",13,0)
 ;         5 - Health Maintenance (CLINICAL REMINDERS MAINTENANCE
"RTN","PXRM",14,0)
 ;              HS component)
"RTN","PXRM",15,0)
 ;        10 - MyHealtheVet summary
"RTN","PXRM",16,0)
 ;        11 - MyHealtheVet detailed
"RTN","PXRM",17,0)
 ;        12 - MyHealtheVet combined
"RTN","PXRM",18,0)
 ;        DISC - (optional) if this is true then the disclaimer will
"RTN","PXRM",19,0)
 ;             be loaded in ^TMP("PXRM",$J,"DISC").
"RTN","PXRM",20,0)
 ;
"RTN","PXRM",21,0)
 ;OUTPUT  ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=
"RTN","PXRM",22,0)
 ;              STATUS_U_DUE DATE_U_LAST DONE
"RTN","PXRM",23,0)
 ;        where PXRMRNAM is the PRINT NAME or if it is undefined then
"RTN","PXRM",24,0)
 ;        it is the NAME (.01).
"RTN","PXRM",25,0)
 ;        For the Clinical Maintenance component, OUTTYPE=5, there is 
"RTN","PXRM",26,0)
 ;        subsequent output of the form
"RTN","PXRM",27,0)
 ;        ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",N)=TEXT
"RTN","PXRM",28,0)
 ;        where N is a number and TEXT is a text string.
"RTN","PXRM",29,0)
 ;
"RTN","PXRM",30,0)
 ;        If DISC is true then the disclaimer will be loaded into
"RTN","PXRM",31,0)
 ;        ^TMP("PXRM",$J,"DISC"). The calling application should
"RTN","PXRM",32,0)
 ;        delete this when it is done.
"RTN","PXRM",33,0)
 ;
"RTN","PXRM",34,0)
 ;        The calling application can display the contents of these
"RTN","PXRM",35,0)
 ;        two ^TMP arrays as it chooses. The caller should also make
"RTN","PXRM",36,0)
 ;        sure the ^TMP globals are killed before it exits.
"RTN","PXRM",37,0)
 ;
"RTN","PXRM",38,0)
 N DEFARR,FIEVAL
"RTN","PXRM",39,0)
 ;Load the definition into DEFARR.
"RTN","PXRM",40,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRM",41,0)
 ;
"RTN","PXRM",42,0)
 I $G(NODISC)="" S NODISC=1
"RTN","PXRM",43,0)
 I $D(GMFLAG) S NODISC=0
"RTN","PXRM",44,0)
 D EVAL(DFN,.DEFARR,OUTTYPE,NODISC,.FIEVAL)
"RTN","PXRM",45,0)
 Q
"RTN","PXRM",46,0)
 ;
"RTN","PXRM",47,0)
 ;==========================================================
"RTN","PXRM",48,0)
EVAL(DFN,DEFARR,OUTTYPE,NODISC,FIEVAL,DATE) ;Reminder evaluation entry
"RTN","PXRM",49,0)
 ;point. This entry point uses the local array DEFARR for the reminder
"RTN","PXRM",50,0)
 ;definition and returns the Finding Evaluation Array, FIEVAL.
"RTN","PXRM",51,0)
 ;PXRM namespaced variables are the reminder evaluation "global"
"RTN","PXRM",52,0)
 ;variables. If date is specified then the reminder will be evaluated
"RTN","PXRM",53,0)
 ;as if the current date is DATE.
"RTN","PXRM",54,0)
 N PXRMAGE,PXRMDATE,PXRMDOB,PXRMDOD,PXRMLAD,PXRMPDEM,PXRMPID,PXRMITEM
"RTN","PXRM",55,0)
 N PXRMRM,PXRMRNAM,PXRMSEX,PXRMXTLK
"RTN","PXRM",56,0)
 ;Make sure the reminder exists.
"RTN","PXRM",57,0)
 I $D(DEFARR("DNE")) D NODEF^PXRMERRH(DEFARR("IEN")) Q
"RTN","PXRM",58,0)
 ;PXRMRM is the right margin for output.
"RTN","PXRM",59,0)
 S PXRMRM=70
"RTN","PXRM",60,0)
 S PXRMDATE=$G(DATE)
"RTN","PXRM",61,0)
 S PXRMITEM=DEFARR("IEN")
"RTN","PXRM",62,0)
 S PXRMPID="PXRM"_PXRMITEM_$H
"RTN","PXRM",63,0)
 N D00
"RTN","PXRM",64,0)
 S D00=DEFARR(0)
"RTN","PXRM",65,0)
 S PXRMRNAM=$P(D00,U,3)
"RTN","PXRM",66,0)
 ;If the print name is null use the .01.
"RTN","PXRM",67,0)
 I PXRMRNAM="" S PXRMRNAM=$P(D00,U,1)
"RTN","PXRM",68,0)
 ;
"RTN","PXRM",69,0)
 ;Set the error handler to the PXRMERRH routine. Use the new style of
"RTN","PXRM",70,0)
 ;error trapping.
"RTN","PXRM",71,0)
 N $ES,$ET
"RTN","PXRM",72,0)
 S $ET="D ERRHDLR^PXRMERRH"
"RTN","PXRM",73,0)
 ;
"RTN","PXRM",74,0)
 ;Initialize the working array.
"RTN","PXRM",75,0)
 K ^TMP(PXRMPID,$J)
"RTN","PXRM",76,0)
 ;
"RTN","PXRM",77,0)
 N DUE,DUEDATE,FREQ,PCLOGIC,RESDATE,RESLOGIC
"RTN","PXRM",78,0)
 ;Make sure the reminder is active.
"RTN","PXRM",79,0)
 I $P(D00,U,6) D  G OUTPUT
"RTN","PXRM",80,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")="The reminder "_PXRMRNAM_" was inactivated "_$$FMTE^XLFDT($P(D00,U,7),"5Z")
"RTN","PXRM",81,0)
 . S PXRMPDEM("DFN")=DFN,PCLOGIC=0,RESLOGIC="",DUE="",DUEDATE=0
"RTN","PXRM",82,0)
 . S RESDATE="",FREQ="0Y"
"RTN","PXRM",83,0)
 ;
"RTN","PXRM",84,0)
 ;Make sure the "E" node exists
"RTN","PXRM",85,0)
 I $D(DEFARR(20))&'$D(DEFARR("E")) D  G EXIT
"RTN","PXRM",86,0)
 . W !,"Reminder definition is corrupted, ENODE is missing cannot continue!"
"RTN","PXRM",87,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="ERROR"_U_"E NODE MISSING"
"RTN","PXRM",88,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO ENODE")=""
"RTN","PXRM",89,0)
 ;
"RTN","PXRM",90,0)
 ;Establish the main findings evaluation variables.
"RTN","PXRM",91,0)
 S (DUE,DUEDATE,FREQ,RESDATE)=0
"RTN","PXRM",92,0)
 S (PCLOGIC,RESLOGIC)=""
"RTN","PXRM",93,0)
 ;
"RTN","PXRM",94,0)
 ;Establish the patient demographic information.
"RTN","PXRM",95,0)
 N TODAY
"RTN","PXRM",96,0)
 S TODAY=$G(DATE,DT)
"RTN","PXRM",97,0)
 D DEM^PXRMPINF(DFN,TODAY,.PXRMPDEM)
"RTN","PXRM",98,0)
 I PXRMPDEM("PATIENT")="" D  G EXIT
"RTN","PXRM",99,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT","NO PAT")="DFN "_DFN_" IS NOT A VALID PATIENT"
"RTN","PXRM",100,0)
 . S PCLOGIC=0
"RTN","PXRM",101,0)
 ;
"RTN","PXRM",102,0)
 ;Load the local demographic variables for use in condition.
"RTN","PXRM",103,0)
 S PXRMAGE=PXRMPDEM("AGE"),PXRMDOB=PXRMPDEM("DOB"),PXRMDOD=PXRMPDEM("DOD")
"RTN","PXRM",104,0)
 S PXRMLAD=PXRMPDEM("LAD"),PXRMSEX=PXRMPDEM("SEX")
"RTN","PXRM",105,0)
 ;
"RTN","PXRM",106,0)
 ;Check for a date of death.
"RTN","PXRM",107,0)
 I PXRMPDEM("DOD")'="" D
"RTN","PXRM",108,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","DEAD")=""
"RTN","PXRM",109,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"DEAD")="Patient is deceased."
"RTN","PXRM",110,0)
 ;
"RTN","PXRM",111,0)
 ;If the component is CR and the patient is deceased we are done.
"RTN","PXRM",112,0)
 I OUTTYPE=0,PXRMPDEM("DOD")'="",'$G(PXRMIDOD) G OUTPUT
"RTN","PXRM",113,0)
 ;
"RTN","PXRM",114,0)
 ;Check for a sex specific reminder.
"RTN","PXRM",115,0)
 N SEXOK
"RTN","PXRM",116,0)
 S SEXOK=$$SEX^PXRMLOG(.DEFARR,PXRMPDEM("SEX"))
"RTN","PXRM",117,0)
 S FIEVAL("SEX")=SEXOK
"RTN","PXRM",118,0)
 ;If the patient is the wrong sex then don't do anything else.
"RTN","PXRM",119,0)
 I 'SEXOK D  G OUTPUT
"RTN","PXRM",120,0)
 . S PCLOGIC=0
"RTN","PXRM",121,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")=""
"RTN","PXRM",122,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","SEX")="Patient is the wrong sex!"
"RTN","PXRM",123,0)
 ;
"RTN","PXRM",124,0)
 ;Evaluate the findings.
"RTN","PXRM",125,0)
 S PXRMXTLK=""
"RTN","PXRM",126,0)
 D EVAL^PXRMEVFI(DFN,.DEFARR,.FIEVAL)
"RTN","PXRM",127,0)
 I +PXRMXTLK>0 D  G OUTPUT
"RTN","PXRM",128,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","EXPANDED TAXONOMY","NO LOCK")="NO LOCK for ien "_+PXRMXTLK
"RTN","PXRM",129,0)
 . S PCLOGIC=0
"RTN","PXRM",130,0)
 ;
"RTN","PXRM",131,0)
 ;Check for missing index.
"RTN","PXRM",132,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"WARNING","MISSING INDEX")) D  G OUTPUT
"RTN","PXRM",133,0)
 . S (DUE,DUEDATE)="CNBD",PCLOGIC=1
"RTN","PXRM",134,0)
 ;
"RTN","PXRM",135,0)
 ;Evaluate the Patient Cohort Logic.
"RTN","PXRM",136,0)
 D EVALPCL^PXRMLOG(.DEFARR,.PXRMPDEM,.FREQ,.PCLOGIC,.FIEVAL)
"RTN","PXRM",137,0)
 ;
"RTN","PXRM",138,0)
 ;Evaluate the resolution logic and get the last resolution date.
"RTN","PXRM",139,0)
 D EVALRESL^PXRMLOG(.DEFARR,.RESDATE,.RESLOGIC,.FIEVAL)
"RTN","PXRM",140,0)
 ;
"RTN","PXRM",141,0)
 ;If the reminder is applicable calculate the due date.
"RTN","PXRM",142,0)
 I PCLOGIC D DUE^PXRMDATE(.DEFARR,RESDATE,FREQ,.DUE,.DUEDATE,.FIEVAL)
"RTN","PXRM",143,0)
 ;
"RTN","PXRM",144,0)
OUTPUT ;Prepare the final output.
"RTN","PXRM",145,0)
 D OUTPUT^PXRMOUTD(OUTTYPE,.DEFARR,.PXRMPDEM,PCLOGIC,RESLOGIC,DUE,DUEDATE,RESDATE,FREQ,.FIEVAL)
"RTN","PXRM",146,0)
 ;
"RTN","PXRM",147,0)
EXIT ;Kill the working arrays unless this was a test run.
"RTN","PXRM",148,0)
 I $G(PXRMDEBG) D
"RTN","PXRM",149,0)
 . S PXRMID=PXRMPID
"RTN","PXRM",150,0)
 . S FIEVAL("PATIENT AGE")=$G(PXRMPDEM("AGE"))
"RTN","PXRM",151,0)
 . S FIEVAL("DFN")=DFN
"RTN","PXRM",152,0)
 . S FIEVAL("EVAL DATE/TIME")=$$NOW^PXRMDATE
"RTN","PXRM",153,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"REMINDER NAME")=$G(PXRMRNAM)
"RTN","PXRM",154,0)
 E  K ^TMP(PXRMPID,$J)
"RTN","PXRM",155,0)
 ;
"RTN","PXRM",156,0)
 ;I DISC is true load the disclaimer.
"RTN","PXRM",157,0)
 I $G(DISC) D LOAD^PXRMDISC
"RTN","PXRM",158,0)
 Q
"RTN","PXRM",159,0)
 ;
"RTN","PXRM",160,0)
 ;==========================================================
"RTN","PXRM",161,0)
FIDATA(DFN,PXRMITEM,FINDINGS) ;Return the finding evaluation array to the
"RTN","PXRM",162,0)
 ;caller in the array FINDINGS. The caller should use the form
"RTN","PXRM",163,0)
 ;D FIDATA^PXRM(DFN,PXRMITEM,.FINDINGS)
"RTN","PXRM",164,0)
 ;The elements of the FINDINGS array will correspond to the
"RTN","PXRM",165,0)
 ;findings in the reminder definition. For finding N FINDINGS(N)
"RTN","PXRM",166,0)
 ;will be 0 if the finding is false and 1 if it is true. For
"RTN","PXRM",167,0)
 ;true findings there will be additional elements. The exact set
"RTN","PXRM",168,0)
 ;of additional elements will depend of the type of finding.
"RTN","PXRM",169,0)
 ;Some typical examples are:
"RTN","PXRM",170,0)
 ;FINDINGS(N)=1
"RTN","PXRM",171,0)
 ;FINDINGS(N,"DATE")=FileMan date
"RTN","PXRM",172,0)
 ;FINDINGS(N,"FINDING")=variable pointer to the finding
"RTN","PXRM",173,0)
 ;FINDINGS(N,"FILE NUMBER")=file number of data source
"RTN","PXRM",174,0)
 ;FINDINGS(N,"VALUE")=value of the finding, for example the
"RTN","PXRM",175,0)
 ;                    value of a lab test
"RTN","PXRM",176,0)
 ;
"RTN","PXRM",177,0)
 N DEFARR,FI,FIEVAL
"RTN","PXRM",178,0)
 ;Load the definition into DEFARR.
"RTN","PXRM",179,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRM",180,0)
 D EVAL(DFN,.DEFARR,0,1,.FIEVAL)
"RTN","PXRM",181,0)
 K ^TMP("PXRM",$J),^TMP("PXRHM",$J)
"RTN","PXRM",182,0)
 ;Load the FINDINGS array.
"RTN","PXRM",183,0)
 S FI=0
"RTN","PXRM",184,0)
 F  S FI=+$O(FIEVAL(FI)) Q:FI=0  D
"RTN","PXRM",185,0)
 . S FINDINGS(FI)=FIEVAL(FI)
"RTN","PXRM",186,0)
 . I 'FIEVAL(FI) Q
"RTN","PXRM",187,0)
 . S FINDINGS(FI,"DATE")=FIEVAL(FI,"DATE")
"RTN","PXRM",188,0)
 . I FIEVAL(FI,"FINDING")["PSDRUG" S FINDINGS(FI,"DRUG")=1
"RTN","PXRM",189,0)
 . S FINDINGS(FI,"FILE NUMBER")=FIEVAL(FI,"FILE NUMBER")
"RTN","PXRM",190,0)
 . S FINDINGS(FI,"FINDING")=FIEVAL(FI,"FINDING")
"RTN","PXRM",191,0)
 . I $D(FIEVAL(FI,"TERM")) S FINDINGS(FI,"TERM")=FIEVAL(FI,"TERM")
"RTN","PXRM",192,0)
 . I $D(FIEVAL(FI,"VALUE")) S (FINDINGS(FI,"RESULT"),FINDINGS(FI,"VALUE"))=FIEVAL(FI,"VALUE")
"RTN","PXRM",193,0)
 . I $D(FIEVAL(FI,"VISIT")) S FINDINGS(FI,"VIEN")=FIEVAL(FI,"VISIT")
"RTN","PXRM",194,0)
 Q
"RTN","PXRM",195,0)
 ;
"RTN","PXRM",196,0)
 ;==========================================================
"RTN","PXRM",197,0)
INACTIVE(PXRMITEM) ;Return the INACTIVE FLAG, which has a value of 1
"RTN","PXRM",198,0)
 ;if the reminder is inactive.
"RTN","PXRM",199,0)
 I '$D(^PXD(811.9,PXRMITEM)) Q 1
"RTN","PXRM",200,0)
 Q $P(^PXD(811.9,PXRMITEM,0),U,6)
"RTN","PXRM",201,0)
 ;
"RTN","PXRM7API")
0^165^B3561001
"RTN","PXRM7API",1,0)
PXRM7API ;SLC/JVS Clinical Reminders HL7 API; 09/21/2006
"RTN","PXRM7API",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRM7API",3,0)
 ;This is the beginning of the HL7 API's
"RTN","PXRM7API",4,0)
 ;
"RTN","PXRM7API",5,0)
 ;VARIABLE LIST
"RTN","PXRM7API",6,0)
 ;IEN = IEN OF ENTRY IN EXTRACT FILE 810.3
"RTN","PXRM7API",7,0)
 Q
"RTN","PXRM7API",8,0)
 ;======================================================
"RTN","PXRM7API",9,0)
HL7(IEN,SEE,ID) ;AllRequiredParameters
"RTN","PXRM7API",10,0)
 ;IEN= The Ien of the entry in file 810.3 (Extract File)
"RTN","PXRM7API",11,0)
 ;SEE=If you want to view the HL7 message, set to 1
"RTN","PXRM7API",12,0)
 ;.ID= ID of the message.
"RTN","PXRM7API",13,0)
 ;MODE=A or I A=from archive I=initial Load
"RTN","PXRM7API",14,0)
 D EXTRACT^PXRM7XT(IEN,SEE,.ID)
"RTN","PXRM7API",15,0)
 Q
"RTN","PXRM7API",16,0)
 ;=======================================================
"RTN","PXRM7API",17,0)
STATUS(ID) ;
"RTN","PXRM7API",18,0)
 ;RETURNS THE STATUS OF THE MESSAGE
"RTN","PXRM7API",19,0)
 ;ID= MESSAGE ID WHICH IS THE IEN IN FILE #772
"RTN","PXRM7API",20,0)
 D STORE
"RTN","PXRM7API",21,0)
 N IEND0,IEND1,STATUS
"RTN","PXRM7API",22,0)
 S STATUS=""
"RTN","PXRM7API",23,0)
 Q:'$D(^PXRMXT(810.3,"AHLID"))
"RTN","PXRM7API",24,0)
 S IEND0=$O(^PXRMXT(810.3,"AHLID",ID,0))
"RTN","PXRM7API",25,0)
 S IEND1=$O(^PXRMXT(810.3,"AHLID",ID,IEND0,0))
"RTN","PXRM7API",26,0)
 S STATUS=$P($G(^PXRMXT(810.3,IEND0,5,IEND1,0)),"^",3)
"RTN","PXRM7API",27,0)
 Q STATUS
"RTN","PXRM7API",28,0)
 ;=======================================================
"RTN","PXRM7API",29,0)
STATUS2(ID) ;
"RTN","PXRM7API",30,0)
 ;RETURNS THE STATUS OF THE MESSAGE
"RTN","PXRM7API",31,0)
 ;ID= MESSAGE ID WHICH IS THE IEN IN FILE #772
"RTN","PXRM7API",32,0)
 N IDD,ID1,ID2,STATUS
"RTN","PXRM7API",33,0)
 S STATUS=""
"RTN","PXRM7API",34,0)
 S ID1=$O(^HL(772,"C",ID,0))
"RTN","PXRM7API",35,0)
 S ID2=$O(^HL(772,"C",ID,ID1))
"RTN","PXRM7API",36,0)
 D GETS^DIQ(772,ID2,20,"E","STATUS")
"RTN","PXRM7API",37,0)
 S IDD=ID2_","
"RTN","PXRM7API",38,0)
 S STATUS=$G(STATUS(772,IDD,20,"E"))
"RTN","PXRM7API",39,0)
 Q STATUS
"RTN","PXRM7API",40,0)
 ;======================================================
"RTN","PXRM7API",41,0)
STORE ;
"RTN","PXRM7API",42,0)
 N IEND0,IEND1,HL7ID,STATHL,STATX
"RTN","PXRM7API",43,0)
 S HL7ID=""
"RTN","PXRM7API",44,0)
 S IEND0=0 F  S IEND0=$O(^PXRMXT(810.3,IEND0)) Q:IEND0=""  D
"RTN","PXRM7API",45,0)
 .S IEND1=0 F  S IEND1=$O(^PXRMXT(810.3,IEND0,5,IEND1)) Q:IEND1=""  D
"RTN","PXRM7API",46,0)
 ..S HL7ID=$P($G(^PXRMXT(810.3,IEND0,5,IEND1,0)),"^",1)
"RTN","PXRM7API",47,0)
 ..Q:HL7ID=""
"RTN","PXRM7API",48,0)
 ..S STATHL=$$STATUS2^PXRM7API(HL7ID)
"RTN","PXRM7API",49,0)
 ..S STATX=$P(^PXRMXT(810.3,IEND0,5,IEND1,0),"^",3)
"RTN","PXRM7API",50,0)
 ..I STATHL'="" D
"RTN","PXRM7API",51,0)
 ...S $P(^PXRMXT(810.3,IEND0,5,IEND1,0),"^",3)=STATHL
"RTN","PXRM7API",52,0)
 ..I STATHL="",STATX="" D
"RTN","PXRM7API",53,0)
 ...S $P(^PXRMXT(810.3,IEND0,5,IEND1,0),"^",3)="Successfully Completed"
"RTN","PXRM7API",54,0)
 Q
"RTN","PXRM7API",55,0)
 ;
"RTN","PXRMAGE")
0^110^B13089093
"RTN","PXRMAGE",1,0)
PXRMAGE ; SLC/PKR - Utilities for age calculations. ;10/07/2005
"RTN","PXRMAGE",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMAGE",3,0)
 ;===========================================
"RTN","PXRMAGE",4,0)
AGE(DOB,DOD,DATE) ;Given a date of birth, date of death, and a date
"RTN","PXRMAGE",5,0)
 ;return the age on that date. If the date of death is not null the
"RTN","PXRMAGE",6,0)
 ;return the age on the date of death. All dates should be in VA
"RTN","PXRMAGE",7,0)
 ;Fileman format.
"RTN","PXRMAGE",8,0)
 N CDATE
"RTN","PXRMAGE",9,0)
 S CDATE=$S(DOD="":DATE,DOD'="":DOD)
"RTN","PXRMAGE",10,0)
 Q (CDATE-DOB)\10000
"RTN","PXRMAGE",11,0)
 ;
"RTN","PXRMAGE",12,0)
 ;===========================================
"RTN","PXRMAGE",13,0)
AGECHECK(AGE,MINAGE,MAXAGE) ;Given an AGE, MINimumAGE, and MAXimumAGE
"RTN","PXRMAGE",14,0)
 ;return true if age lies within the range.
"RTN","PXRMAGE",15,0)
 ;Special values of NULL or 0 mean there are no limits.
"RTN","PXRMAGE",16,0)
 ;
"RTN","PXRMAGE",17,0)
 S MAXAGE=+MAXAGE
"RTN","PXRMAGE",18,0)
 S MINAGE=+MINAGE
"RTN","PXRMAGE",19,0)
 ;See if too old.
"RTN","PXRMAGE",20,0)
 I (AGE>MAXAGE)&(MAXAGE>0) Q 0
"RTN","PXRMAGE",21,0)
 ;
"RTN","PXRMAGE",22,0)
 ;See if too young.
"RTN","PXRMAGE",23,0)
 I MINAGE=0 Q 1
"RTN","PXRMAGE",24,0)
 I AGE<MINAGE Q 0
"RTN","PXRMAGE",25,0)
 Q 1
"RTN","PXRMAGE",26,0)
 ;
"RTN","PXRMAGE",27,0)
 ;===========================================
"RTN","PXRMAGE",28,0)
FMTAGE(MINAGE,MAXAGE) ;Format the minimum age and maximum age for display.
"RTN","PXRMAGE",29,0)
 N STR
"RTN","PXRMAGE",30,0)
 I $L(MINAGE)!$L(MAXAGE) D
"RTN","PXRMAGE",31,0)
 . I $L(MINAGE)&$L(MAXAGE) S STR=" for ages "_MINAGE_" to "_MAXAGE Q
"RTN","PXRMAGE",32,0)
 . I $L(MINAGE) S STR=" for ages "_MINAGE_" and older" Q
"RTN","PXRMAGE",33,0)
 . I $L(MAXAGE) S STR=" for ages "_MAXAGE_" and younger" Q
"RTN","PXRMAGE",34,0)
 E  S STR=" for all ages"
"RTN","PXRMAGE",35,0)
 Q STR
"RTN","PXRMAGE",36,0)
 ;
"RTN","PXRMAGE",37,0)
 ;===========================================
"RTN","PXRMAGE",38,0)
FMTFREQ(FREQ) ;Format the frequency for display.
"RTN","PXRMAGE",39,0)
 N FREQT,STR
"RTN","PXRMAGE",40,0)
 S STR="Frequency: "
"RTN","PXRMAGE",41,0)
 S FREQT=$$FREQ^PXRMPTD2(FREQ)
"RTN","PXRMAGE",42,0)
 I FREQ=-1 Q STR_FREQT
"RTN","PXRMAGE",43,0)
 Q STR_"Due every "_FREQT
"RTN","PXRMAGE",44,0)
 ;
"RTN","PXRMAGE",45,0)
 ;===========================================
"RTN","PXRMAGE",46,0)
MMF(DEFARR,PXRMPDEM,MINAGE,MAXAGE,FREQ,FIEVAL) ;Set the baseline minimum age,
"RTN","PXRMAGE",47,0)
 ;maximum age, and frequency.  If there are multiple intervals they
"RTN","PXRMAGE",48,0)
 ;cannot overlap.
"RTN","PXRMAGE",49,0)
 N FR,IC,INDEX,MATCH,MAXA,MINA,NAR,TEMP
"RTN","PXRMAGE",50,0)
 ;Initialize MINAGE, MAXAGE, and FREQ.
"RTN","PXRMAGE",51,0)
 S (MINAGE,MAXAGE,FREQ)=""
"RTN","PXRMAGE",52,0)
 S (IC,NAR)=0
"RTN","PXRMAGE",53,0)
 F  S IC=$O(DEFARR(7,IC)) Q:+IC=0  D
"RTN","PXRMAGE",54,0)
 . S NAR=NAR+1
"RTN","PXRMAGE",55,0)
 . S TEMP=DEFARR(7,IC,0)
"RTN","PXRMAGE",56,0)
 . S FR(NAR)=$$UP^XLFSTR($P(TEMP,U,1))
"RTN","PXRMAGE",57,0)
 . S MINA(NAR)=$P(TEMP,U,2)
"RTN","PXRMAGE",58,0)
 . S MAXA(NAR)=$P(TEMP,U,3)
"RTN","PXRMAGE",59,0)
 . S INDEX(NAR)=IC
"RTN","PXRMAGE",60,0)
 . S FIEVAL("AGE",IC)=0
"RTN","PXRMAGE",61,0)
 I NAR=0 Q
"RTN","PXRMAGE",62,0)
 ;
"RTN","PXRMAGE",63,0)
 ;Make sure that none of the age ranges overlap.
"RTN","PXRMAGE",64,0)
 I $D(PXRMDEBG),$$OVERLAP(NAR,.MINA,.MAXA) Q
"RTN","PXRMAGE",65,0)
 ;
"RTN","PXRMAGE",66,0)
 ;Look for an age range match.
"RTN","PXRMAGE",67,0)
 S FREQ=-1
"RTN","PXRMAGE",68,0)
 S MATCH=0
"RTN","PXRMAGE",69,0)
 F IC=1:1:NAR Q:MATCH  D
"RTN","PXRMAGE",70,0)
 . I $$AGECHECK(PXRMPDEM("AGE"),MINA(IC),MAXA(IC)) D
"RTN","PXRMAGE",71,0)
 .. S MATCH=1
"RTN","PXRMAGE",72,0)
 .. S MINAGE=MINA(IC)
"RTN","PXRMAGE",73,0)
 .. S MAXAGE=MAXA(IC)
"RTN","PXRMAGE",74,0)
 .. S FREQ=FR(IC)
"RTN","PXRMAGE",75,0)
 .. S FIEVAL("AGE",INDEX(IC))=1
"RTN","PXRMAGE",76,0)
 Q
"RTN","PXRMAGE",77,0)
 ;
"RTN","PXRMAGE",78,0)
 ;===========================================
"RTN","PXRMAGE",79,0)
OVERLAP(NAR,MINA,MAXA) ;Check age ranges for overlap.  Return an error message
"RTN","PXRMAGE",80,0)
 ;if an overlap is found.
"RTN","PXRMAGE",81,0)
 I NAR'>1 Q 0
"RTN","PXRMAGE",82,0)
 N IC,IN,JC,MAXI,MAXJ,MINI,MINJ,OVRLAP,TEXT
"RTN","PXRMAGE",83,0)
 S OVRLAP=0
"RTN","PXRMAGE",84,0)
 F IC=1:1:NAR-1 D
"RTN","PXRMAGE",85,0)
 . S MAXI=MAXA(IC)
"RTN","PXRMAGE",86,0)
 . I MAXI="" S MAXI=1000
"RTN","PXRMAGE",87,0)
 . S MINI=MINA(IC)
"RTN","PXRMAGE",88,0)
 . I MINI="" S MINI=0
"RTN","PXRMAGE",89,0)
 . F JC=IC+1:1:NAR D
"RTN","PXRMAGE",90,0)
 .. S MAXJ=MAXA(JC)
"RTN","PXRMAGE",91,0)
 .. I MAXJ="" S MAXJ=1000
"RTN","PXRMAGE",92,0)
 .. S MINJ=MINA(JC)
"RTN","PXRMAGE",93,0)
 .. I MINJ="" S MINJ=0
"RTN","PXRMAGE",94,0)
 .. S IN=0
"RTN","PXRMAGE",95,0)
 .. I (MINJ'<MINI)&(MINJ'>MAXI) S IN=1
"RTN","PXRMAGE",96,0)
 .. I (MAXJ'<MINI)&(MAXJ'>MAXI) S IN=1
"RTN","PXRMAGE",97,0)
 .. I IN D
"RTN","PXRMAGE",98,0)
 ... S OVRLAP=OVRLAP+1
"RTN","PXRMAGE",99,0)
 ... S TEXT=MINA(IC)_" to "_MAXA(IC)_" and "_MINA(JC)_" to "_MAXA(JC)
"RTN","PXRMAGE",100,0)
 ... I $D(PXRMPID) S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","AGE OVERLAP",OVRLAP)=TEXT
"RTN","PXRMAGE",101,0)
 ... E  S ^TMP($J,"OVERLAP",OVRLAP)=TEXT
"RTN","PXRMAGE",102,0)
 I OVRLAP>1 S OVRLAP=1
"RTN","PXRMAGE",103,0)
 Q OVRLAP
"RTN","PXRMAGE",104,0)
 ;
"RTN","PXRMAGE",105,0)
 ;===========================================
"RTN","PXRMAGE",106,0)
OVLAP() ;Check age ranges for overlap. Called from definition editor after
"RTN","PXRMAGE",107,0)
 ;input of baseline frequency/age ranges.
"RTN","PXRMAGE",108,0)
 N IC,NAR,MAXA,MINA,OVERLAP,TEMP
"RTN","PXRMAGE",109,0)
 S (IC,NAR)=0
"RTN","PXRMAGE",110,0)
 F  S IC=$O(^PXD(811.9,DA,7,IC)) Q:+IC=0  D
"RTN","PXRMAGE",111,0)
 . S NAR=NAR+1
"RTN","PXRMAGE",112,0)
 . S TEMP=^PXD(811.9,DA,7,IC,0)
"RTN","PXRMAGE",113,0)
 . S MINA(NAR)=$P(TEMP,U,2)
"RTN","PXRMAGE",114,0)
 . S MAXA(NAR)=$P(TEMP,U,3)
"RTN","PXRMAGE",115,0)
 S OVERLAP=$$OVERLAP^PXRMAGE(NAR,.MINA,.MAXA)
"RTN","PXRMAGE",116,0)
 I OVERLAP D
"RTN","PXRMAGE",117,0)
 . W !,"Error - the following age ranges overlap:"
"RTN","PXRMAGE",118,0)
 . S IC=0
"RTN","PXRMAGE",119,0)
 . F  S IC=$O(^TMP($J,"OVERLAP",IC)) Q:IC=""  W !,?2,^TMP($J,"OVERLAP",IC)
"RTN","PXRMAGE",120,0)
 . K ^TMP($J,"OVERLAP")
"RTN","PXRMAGE",121,0)
 . W !,"Please correct this problem."
"RTN","PXRMAGE",122,0)
 Q OVERLAP
"RTN","PXRMAGE",123,0)
 ;
"RTN","PXRMCDEF")
0^27^B1896226
"RTN","PXRMCDEF",1,0)
PXRMCDEF ; SLC/AGP - Computed findings for Reminder Definition. ;06/09/2006
"RTN","PXRMCDEF",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMCDEF",3,0)
 ;
"RTN","PXRMCDEF",4,0)
 ;======================================================
"RTN","PXRMCDEF",5,0)
RDEF(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for returing a Reminder
"RTN","PXRMCDEF",6,0)
 ;definition evaluation status
"RTN","PXRMCDEF",7,0)
 I TEST="" S TEST=0 Q
"RTN","PXRMCDEF",8,0)
 N NAME,PNAME,RIEN,TEMP,PARAM
"RTN","PXRMCDEF",9,0)
 S NAME=$P(TEST,U)
"RTN","PXRMCDEF",10,0)
 S PARAM=$P(TEST,U,2),PARAM=$P($G(PARAM),"=",2),TEST=0,DATE=$$NOW^PXRMDATE
"RTN","PXRMCDEF",11,0)
 S RIEN=$O(^PXD(811.9,"B",NAME,"")) Q:RIEN'>0
"RTN","PXRMCDEF",12,0)
 I +$P(^PXD(811.9,RIEN,0),U,6)=1 Q
"RTN","PXRMCDEF",13,0)
 K ^TMP("PXRHM",$J,RIEN)
"RTN","PXRMCDEF",14,0)
 S PNAME=$S($P($G(^PXD(811.9,RIEN,0)),U,3)'="":$P(^PXD(811.9,RIEN,0),U,3),1:NAME)
"RTN","PXRMCDEF",15,0)
 D MAIN^PXRM(DFN,RIEN,1)
"RTN","PXRMCDEF",16,0)
 S TEMP=$G(^TMP("PXRHM",$J,RIEN,PNAME))
"RTN","PXRMCDEF",17,0)
 K ^TMP("PXRHM",$J,RIEN)
"RTN","PXRMCDEF",18,0)
 S TEST=$S(TEMP="":0,TEMP["ERROR":0,TEMP["CNBD":0,1:1)
"RTN","PXRMCDEF",19,0)
 Q:'TEST
"RTN","PXRMCDEF",20,0)
 S VALUE=$P(TEMP,U)
"RTN","PXRMCDEF",21,0)
 S VALUE("STATUS")=VALUE
"RTN","PXRMCDEF",22,0)
 S VALUE("DUEDATE")=$P(TEMP,U,2)
"RTN","PXRMCDEF",23,0)
 S VALUE("LASTDONE")=$P(TEMP,U,3)
"RTN","PXRMCDEF",24,0)
 Q:PARAM=""
"RTN","PXRMCDEF",25,0)
 I PARAM="DUE DATE",+VALUE("DUEDATE")>0 S DATE=VALUE("DUEDATE")
"RTN","PXRMCDEF",26,0)
 I PARAM="LAST DONE",+VALUE("LASTDONE")>0 S DATE=VALUE("LASTDONE")
"RTN","PXRMCDEF",27,0)
 Q
"RTN","PXRMCDEF",28,0)
 ;
"RTN","PXRMCDUE")
0^169^B28018765
"RTN","PXRMCDUE",1,0)
PXRMCDUE ;SLC/PKR - Custom date due calculation routines. ;06/30/2006
"RTN","PXRMCDUE",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMCDUE",3,0)
 ;
"RTN","PXRMCDUE",4,0)
 ;========================================================
"RTN","PXRMCDUE",5,0)
CDBUILD(STRING,DA) ;Given a custom date due string build the data
"RTN","PXRMCDUE",6,0)
 ;structure. This is called by a new-style cross-reference after
"RTN","PXRMCDUE",7,0)
 ;the date due string has passed the input transform so we don't need
"RTN","PXRMCDUE",8,0)
 ;to validate the elements.
"RTN","PXRMCDUE",9,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMCDUE",10,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMCDUE",11,0)
 ;Do not execute as part of exchange.
"RTN","PXRMCDUE",12,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMCDUE",13,0)
 N FDA,FILIST,FREQLIST,FUNCTION,IENB,IENS,IND,MSG,NARGS,PFSTACK
"RTN","PXRMCDUE",14,0)
 S STRING=$$UP^XLFSTR(STRING)
"RTN","PXRMCDUE",15,0)
 D PARSE(STRING,.FUNCTION,.NARGS,.FILIST,.FREQLIST)
"RTN","PXRMCDUE",16,0)
 S IENS=DA_","
"RTN","PXRMCDUE",17,0)
 S FDA(811.9,IENS,46)=FUNCTION,FDA(811.9,IENS,47)=NARGS
"RTN","PXRMCDUE",18,0)
 S IENB=DA
"RTN","PXRMCDUE",19,0)
 F IND=1:1:NARGS D
"RTN","PXRMCDUE",20,0)
 . S IENB=IENB+1
"RTN","PXRMCDUE",21,0)
 . S IENS="+"_IENB_","_DA_","
"RTN","PXRMCDUE",22,0)
 . S FDA(811.948,IENS,.01)=FILIST(IND)
"RTN","PXRMCDUE",23,0)
 . S FDA(811.948,IENS,.02)=FREQLIST(IND)
"RTN","PXRMCDUE",24,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMCDUE",25,0)
 I $D(MSG) D
"RTN","PXRMCDUE",26,0)
 . W !,"The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMCDUE",27,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMCDUE",28,0)
 Q
"RTN","PXRMCDUE",29,0)
 ;
"RTN","PXRMCDUE",30,0)
 ;========================================================
"RTN","PXRMCDUE",31,0)
CDUEDATE(DEFARR,FIEVAL) ;Do the custom date due calculation and return
"RTN","PXRMCDUE",32,0)
 ;the due date.
"RTN","PXRMCDUE",33,0)
 N DATE,DDUE,DLIST,FI,FREQ,FUNCTION,IND,NARGS,TEMP
"RTN","PXRMCDUE",34,0)
 S FUNCTION=$P(DEFARR(46),U,1)
"RTN","PXRMCDUE",35,0)
 S NARGS=$P(DEFARR(46),U,2)
"RTN","PXRMCDUE",36,0)
 F IND=1:1:NARGS D
"RTN","PXRMCDUE",37,0)
 . S TEMP=DEFARR(47,IND,0)
"RTN","PXRMCDUE",38,0)
 . S FI=$P(TEMP,U,1)
"RTN","PXRMCDUE",39,0)
 . S FREQ=$P(TEMP,U,2)
"RTN","PXRMCDUE",40,0)
 . S DATE=+$G(FIEVAL(FI,"DATE"))
"RTN","PXRMCDUE",41,0)
 . S DLIST(IND)=$$NEWDATE^PXRMDATE(DATE,FREQ)
"RTN","PXRMCDUE",42,0)
 S TEMP=$S(FUNCTION="MAX_DATE":$$MAXDATE(NARGS,.DLIST),FUNCTION="MIN_DATE":$$MINDATE(NARGS,.DLIST))
"RTN","PXRMCDUE",43,0)
 S DDUE=$P(TEMP,U,1)
"RTN","PXRMCDUE",44,0)
 I DDUE=0 Q -1
"RTN","PXRMCDUE",45,0)
 S IND=$P(TEMP,U,2)
"RTN","PXRMCDUE",46,0)
 S TEMP=DEFARR(47,IND,0)
"RTN","PXRMCDUE",47,0)
 S FI=$P(TEMP,U,1)
"RTN","PXRMCDUE",48,0)
 S FREQ=$P(TEMP,U,2)
"RTN","PXRMCDUE",49,0)
 S DATE=+$G(FIEVAL(FI,"DATE"))
"RTN","PXRMCDUE",50,0)
 S ^TMP(PXRMPID,$J,PXRMITEM,"zCDUE")=FI_U_FREQ_U_DATE
"RTN","PXRMCDUE",51,0)
 Q DDUE
"RTN","PXRMCDUE",52,0)
 ;
"RTN","PXRMCDUE",53,0)
 ;========================================================
"RTN","PXRMCDUE",54,0)
CDKILL(X,DA) ;
"RTN","PXRMCDUE",55,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMCDUE",56,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMCDUE",57,0)
 ;Do not execute as part of exchange.
"RTN","PXRMCDUE",58,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMCDUE",59,0)
 K ^PXD(811.9,DA,46),^PXD(811.9,DA,47)
"RTN","PXRMCDUE",60,0)
 Q
"RTN","PXRMCDUE",61,0)
 ;
"RTN","PXRMCDUE",62,0)
 ;========================================================
"RTN","PXRMCDUE",63,0)
MAXDATE(NARGS,DLIST) ;Return the maximum date from a list of dates in DLIST.
"RTN","PXRMCDUE",64,0)
 N IND,INDS,MAXDATE
"RTN","PXRMCDUE",65,0)
 S (INDS,MAXDATE)=0
"RTN","PXRMCDUE",66,0)
 F IND=1:1:NARGS I DLIST(IND)>MAXDATE S MAXDATE=DLIST(IND),INDS=IND
"RTN","PXRMCDUE",67,0)
 Q MAXDATE_U_INDS
"RTN","PXRMCDUE",68,0)
 ;
"RTN","PXRMCDUE",69,0)
 ;========================================================
"RTN","PXRMCDUE",70,0)
MINDATE(NARGS,DLIST) ;Return the minimum date from a list of dates in DLIST.
"RTN","PXRMCDUE",71,0)
 ;Only return 0 if there is no "real" date in the list.
"RTN","PXRMCDUE",72,0)
 N DATE,IND,INDS,MINDATE
"RTN","PXRMCDUE",73,0)
 S INDS=0
"RTN","PXRMCDUE",74,0)
 S MINDATE=9991231
"RTN","PXRMCDUE",75,0)
 F IND=1:1:NARGS S DATE=DLIST(IND) I DATE<MINDATE,DATE'=0 S MINDATE=DATE,INDS=IND
"RTN","PXRMCDUE",76,0)
 I MINDATE=9991231 S MINDATE=0
"RTN","PXRMCDUE",77,0)
 Q MINDATE_U_INDS
"RTN","PXRMCDUE",78,0)
 ;
"RTN","PXRMCDUE",79,0)
 ;========================================================
"RTN","PXRMCDUE",80,0)
OUTPUT(CDUEDATA,DEFARR) ;Build the custom date due output text.
"RTN","PXRMCDUE",81,0)
 N CDUEFI,ENTRY,FINAME,TEXT,VPTR
"RTN","PXRMCDUE",82,0)
 S CDUEFI=$P(CDUEDATA,U,1)
"RTN","PXRMCDUE",83,0)
 S VPTR=$P(^PXD(811.9,DEFARR("IEN"),20,CDUEFI,0),U,1)
"RTN","PXRMCDUE",84,0)
 S ENTRY="^"_$P(VPTR,";",2)_$P(VPTR,";",1)_",0)"
"RTN","PXRMCDUE",85,0)
 S FINAME=$P(@ENTRY,U,1)
"RTN","PXRMCDUE",86,0)
 S TEXT="Custom date due based on date of finding "_CDUEFI_" ("_FINAME_")"
"RTN","PXRMCDUE",87,0)
 S TEXT=TEXT_" plus frequency of "_$P(CDUEDATA,U,2)_"."
"RTN","PXRMCDUE",88,0)
 Q TEXT
"RTN","PXRMCDUE",89,0)
 ;
"RTN","PXRMCDUE",90,0)
 ;========================================================
"RTN","PXRMCDUE",91,0)
PARSE(STRING,FUNCTION,NARGS,FILIST,FREQLIST) ;Parse a custom date due
"RTN","PXRMCDUE",92,0)
 ;string and return the function, number of arguments, finding list,
"RTN","PXRMCDUE",93,0)
 ;and frequency list. An argument has the form M+NF where M is a
"RTN","PXRMCDUE",94,0)
 ;finding number, N is an integer, and F is D, M, or Y.
"RTN","PXRMCDUE",95,0)
 N IND,OPER,PFSTACK
"RTN","PXRMCDUE",96,0)
 S OPER=","
"RTN","PXRMCDUE",97,0)
 D POSTFIX^PXRMSTAC(STRING,OPER,.PFSTACK)
"RTN","PXRMCDUE",98,0)
 S FUNCTION=$$UP^XLFSTR(PFSTACK(1))
"RTN","PXRMCDUE",99,0)
 S NARGS=0
"RTN","PXRMCDUE",100,0)
 F IND=2:1:PFSTACK(0) D
"RTN","PXRMCDUE",101,0)
 . I PFSTACK(IND)=OPER Q
"RTN","PXRMCDUE",102,0)
 . S NARGS=NARGS+1
"RTN","PXRMCDUE",103,0)
 . S FILIST(NARGS)=$P(PFSTACK(IND),"+",1)
"RTN","PXRMCDUE",104,0)
 . S FREQLIST(NARGS)=$P(PFSTACK(IND),"+",2)
"RTN","PXRMCDUE",105,0)
 Q
"RTN","PXRMCDUE",106,0)
 ;
"RTN","PXRMCDUE",107,0)
 ;========================================================
"RTN","PXRMCDUE",108,0)
VFREQ(FREQ) ;Make sure FREQ is a valid frequency.
"RTN","PXRMCDUE",109,0)
 N VALID
"RTN","PXRMCDUE",110,0)
 S VALID=1
"RTN","PXRMCDUE",111,0)
 S FREQ=$$UP^XLFSTR(FREQ)
"RTN","PXRMCDUE",112,0)
 I (FREQ'?1N.N1"D"),(FREQ'?1N.N1"M"),(FREQ'?1N.N1"Y") S VALID=0
"RTN","PXRMCDUE",113,0)
 Q VALID
"RTN","PXRMCDUE",114,0)
 ;
"RTN","PXRMCDUE",115,0)
 ;========================================================
"RTN","PXRMCDUE",116,0)
VCDUE(STRING,DA) ;Make sure a custom date due string is valid.
"RTN","PXRMCDUE",117,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMCDUE",118,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMCDUE",119,0)
 ;Do not execute as part of exchange.
"RTN","PXRMCDUE",120,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMCDUE",121,0)
 I '$D(DA) Q 1
"RTN","PXRMCDUE",122,0)
 I $L(STRING)>245 Q 0
"RTN","PXRMCDUE",123,0)
 N FILIST,FREQLIST,FUNCTION,IND,NARGS,TEXT,VALID
"RTN","PXRMCDUE",124,0)
 D PARSE(STRING,.FUNCTION,.NARGS,.FILIST,.FREQLIST)
"RTN","PXRMCDUE",125,0)
 S VALID=1
"RTN","PXRMCDUE",126,0)
 I FUNCTION'="MIN_DATE",FUNCTION'="MAX_DATE" D
"RTN","PXRMCDUE",127,0)
 . S TEXT=FUNCTION_" is not a valid custom date due function"
"RTN","PXRMCDUE",128,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMCDUE",129,0)
 . S VALID=0
"RTN","PXRMCDUE",130,0)
 F IND=1:1:NARGS D
"RTN","PXRMCDUE",131,0)
 . I '$D(^PXD(811.9,DA,20,FILIST(IND),0)) D
"RTN","PXRMCDUE",132,0)
 .. S TEXT="Finding number "_FILIST(IND)_" is not a valid reminder finding"
"RTN","PXRMCDUE",133,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMCDUE",134,0)
 .. S VALID=0
"RTN","PXRMCDUE",135,0)
 . I '$$VFREQ(FREQLIST(IND)) D
"RTN","PXRMCDUE",136,0)
 .. S TEXT=FREQLIST(IND)_" is not a valid frequency"
"RTN","PXRMCDUE",137,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMCDUE",138,0)
 .. S VALID=0
"RTN","PXRMCDUE",139,0)
 Q VALID
"RTN","PXRMCDUE",140,0)
 ;
"RTN","PXRMCDUE",141,0)
 ;========================================================
"RTN","PXRMCDUE",142,0)
XHELP ;Executable help for custom date due.
"RTN","PXRMCDUE",143,0)
 N DONE,IND,TEXT
"RTN","PXRMCDUE",144,0)
 S DONE=0
"RTN","PXRMCDUE",145,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMCDUE",146,0)
 . S TEXT=$P($T(TEXT+IND),";",3)
"RTN","PXRMCDUE",147,0)
 . I TEXT="**End Text**" S DONE=1 Q
"RTN","PXRMCDUE",148,0)
 . W !,TEXT
"RTN","PXRMCDUE",149,0)
 Q
"RTN","PXRMCDUE",150,0)
 ;
"RTN","PXRMCDUE",151,0)
 ;========================================================
"RTN","PXRMCDUE",152,0)
TEXT ;Custom Date Due help text.
"RTN","PXRMCDUE",153,0)
 ;;The general form for a Custom Date Due string is:
"RTN","PXRMCDUE",154,0)
 ;; FUNCTION(ARG1,ARG2,...,ARGN)
"RTN","PXRMCDUE",155,0)
 ;;where FUNCTION is MAX_DATE or MIN_DATE and the arguments have the form
"RTN","PXRMCDUE",156,0)
 ;;M+FREQ where M is a finding number and FREQ is a number followed by
"RTN","PXRMCDUE",157,0)
 ;;D for days, M for months, or Y for years.
"RTN","PXRMCDUE",158,0)
 ;;Here is an example:
"RTN","PXRMCDUE",159,0)
 ;; MAX_DATE(1+6M,3+1Y)
"RTN","PXRMCDUE",160,0)
 ;;This will take the date of finding 1 and add 6 months, the date of finding 3
"RTN","PXRMCDUE",161,0)
 ;;and add 1 year and set the date due to the maximum of those two dates.
"RTN","PXRMCDUE",162,0)
 ;;
"RTN","PXRMCDUE",163,0)
 ;;**End Text**
"RTN","PXRMCDUE",164,0)
 Q
"RTN","PXRMCDUE",165,0)
 ;
"RTN","PXRMCWH")
0^25^B41378773
"RTN","PXRMCWH",1,0)
PXRMCWH ; SLC/AGP - Computed findings for WH project. ;06/09/2006
"RTN","PXRMCWH",2,0)
 ;;2.0;CLINICAL REMINDERS;**1,4**;Feb 4, 2005;Build 21
"RTN","PXRMCWH",3,0)
 ;
"RTN","PXRMCWH",4,0)
MAM(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;Computed finding for
"RTN","PXRMCWH",5,0)
 ;mammogram screening and review
"RTN","PXRMCWH",6,0)
 ;
"RTN","PXRMCWH",7,0)
 N CNT,CNT1,RESULT,WHDATE
"RTN","PXRMCWH",8,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMCWH",9,0)
 S (CNT1,CNT,NFOUND)=0,DATE=$$NOW^PXRMDATE,TEST(1)=0
"RTN","PXRMCWH",10,0)
 I $G(BDT)'="",$G(EDT)'="" S WHDATE=BDT_U_EDT
"RTN","PXRMCWH",11,0)
 D LATEST^WVRPCPR(.RESULT,DFN,"M",$G(WHDATE),$G(NGET),"*")
"RTN","PXRMCWH",12,0)
 I $D(RESULT)>0 D PROCESS(.RESULT,.CNT1,.TEST,.DATA,.TEXT,NGET,BDT,EDT,NFOUND)
"RTN","PXRMCWH",13,0)
 I $G(CNT1)>0 S NFOUND=CNT1
"RTN","PXRMCWH",14,0)
 Q
"RTN","PXRMCWH",15,0)
 ;
"RTN","PXRMCWH",16,0)
MAMA(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;Computed finding for
"RTN","PXRMCWH",17,0)
 ;mammogram abnormal result
"RTN","PXRMCWH",18,0)
 ;
"RTN","PXRMCWH",19,0)
 N CNT,CNT1,RESULT,WHDATE
"RTN","PXRMCWH",20,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMCWH",21,0)
 S (CNT1,CNT,NFOUND)=0,DATE=$$NOW^PXRMDATE,TEST(1)=0
"RTN","PXRMCWH",22,0)
 I $G(BDT)'="",$G(EDT)'="" S WHDATE=BDT_U_EDT
"RTN","PXRMCWH",23,0)
 D LATEST^WVRPCPR(.RESULT,DFN,"M",$G(WHDATE),$G(NGET),"A")
"RTN","PXRMCWH",24,0)
 I $D(RESULT)>0 D PROCESS(.RESULT,.CNT1,.TEST,.DATA,.TEXT,NGET,BDT,EDT,NFOUND)
"RTN","PXRMCWH",25,0)
 I $G(CNT1)>0 S NFOUND=CNT1
"RTN","PXRMCWH",26,0)
 Q
"RTN","PXRMCWH",27,0)
 ;
"RTN","PXRMCWH",28,0)
PAP(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;Computed
"RTN","PXRMCWH",29,0)
 ;finding for pap smear screening and review
"RTN","PXRMCWH",30,0)
 ;
"RTN","PXRMCWH",31,0)
 N CNT,CNT1,RESULT,WHDATE
"RTN","PXRMCWH",32,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMCWH",33,0)
 S (CNT1,CNT,NFOUND)=0,DATE=$$NOW^PXRMDATE,TEST(1)=0
"RTN","PXRMCWH",34,0)
 I $G(BDT)'="",$G(EDT)'="" S WHDATE=BDT_U_EDT
"RTN","PXRMCWH",35,0)
 D LATEST^WVRPCPR(.RESULT,DFN,"P",$G(WHDATE),$G(NGET),"*")
"RTN","PXRMCWH",36,0)
 I $D(RESULT)>0 D PROCESS(.RESULT,.CNT1,.TEST,.DATA,.TEXT,NGET,BDT,EDT,NFOUND)
"RTN","PXRMCWH",37,0)
 I $G(CNT1)>0 S NFOUND=CNT1
"RTN","PXRMCWH",38,0)
 Q
"RTN","PXRMCWH",39,0)
 ;
"RTN","PXRMCWH",40,0)
 ;
"RTN","PXRMCWH",41,0)
PAPA(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;Computed finding for
"RTN","PXRMCWH",42,0)
 ;pap smear abnormal result
"RTN","PXRMCWH",43,0)
 ;
"RTN","PXRMCWH",44,0)
 N CNT,CNT1,RESULT,WHDATE
"RTN","PXRMCWH",45,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMCWH",46,0)
 S (CNT1,CNT,NFOUND)=0,DATE=$$NOW^PXRMDATE,TEST(1)=0
"RTN","PXRMCWH",47,0)
 I $G(BDT)'="",$G(EDT)'="" S WHDATE=BDT_U_EDT
"RTN","PXRMCWH",48,0)
 D LATEST^WVRPCPR(.RESULT,DFN,"P",$G(WHDATE),$G(NGET),"A")
"RTN","PXRMCWH",49,0)
 I $D(RESULT)>0 D PROCESS(.RESULT,.CNT1,.TEST,.DATA,.TEXT,NGET,BDT,EDT,NFOUND)
"RTN","PXRMCWH",50,0)
 I $G(CNT1)>0 S NFOUND=CNT1
"RTN","PXRMCWH",51,0)
 Q
"RTN","PXRMCWH",52,0)
 ;
"RTN","PXRMCWH",53,0)
 ;
"RTN","PXRMCWH",54,0)
PROCESS(RESULT,CNT1,TEST,DATA,TEXT,NGET,BDT,EDT,NFOUND) ;
"RTN","PXRMCWH",55,0)
 ;Pieces out data in Result for Reminder evaluation
"RTN","PXRMCWH",56,0)
 N DATE1
"RTN","PXRMCWH",57,0)
 I $P($G(RESULT(0)),U)<0 Q
"RTN","PXRMCWH",58,0)
 F  S CNT=$O(RESULT(CNT)) Q:CNT=""!(CNT1>$G(NGET))  I CNT'=0 D
"RTN","PXRMCWH",59,0)
 . S DATE1=$P($G(RESULT(CNT)),U,3)
"RTN","PXRMCWH",60,0)
 . I $G(BDT)'="",$G(EDT)'="",EDT<BDT Q
"RTN","PXRMCWH",61,0)
 . S CNT1=CNT1+1
"RTN","PXRMCWH",62,0)
 . S TEST(CNT1)=0
"RTN","PXRMCWH",63,0)
 . S DATA(CNT1,"LINK")=$P($G(RESULT(CNT)),U,7)
"RTN","PXRMCWH",64,0)
 . S DATA(CNT1,"STATUS")=$P($G(RESULT(CNT)),U,8)
"RTN","PXRMCWH",65,0)
 . S DATA(CNT1,"VALUE")=$P($G(RESULT(CNT)),U,5)
"RTN","PXRMCWH",66,0)
 . S DATA(CNT1,"WVIEN")=$P($G(RESULT(CNT)),U)
"RTN","PXRMCWH",67,0)
 . S TEST(CNT1)=1,DATE(CNT1)=$G(DATE1)
"RTN","PXRMCWH",68,0)
 . S TEXT(CNT1)=$P($G(RESULT(CNT)),U,4)_" "_$P($G(RESULT(CNT)),U,6)
"RTN","PXRMCWH",69,0)
 . ;S VALUE(CNT1)=$P($G(RESULT(CNT)),U,5)
"RTN","PXRMCWH",70,0)
 Q
"RTN","PXRMCWH",71,0)
 ;
"RTN","PXRMCWH",72,0)
PAPSCR(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;Computed finding for
"RTN","PXRMCWH",73,0)
 ;pap smear screening and f/u
"RTN","PXRMCWH",74,0)
 ;
"RTN","PXRMCWH",75,0)
 N CNT,CNT1,CNT2,DATE1,DS,EDTT,IND,JND,MOR,MORIEN,NODE,OD
"RTN","PXRMCWH",76,0)
 N PXRMWVT,PXRMWVM
"RTN","PXRMCWH",77,0)
 N SDIR,SNOWCNT,TDATA,TDATE,TOP,TTEST,TTEXT,SNOWTOP,NODE,WVPAP
"RTN","PXRMCWH",78,0)
 N DAS,DAS0,DAS1,DAS2,DAS3,DAS4,DAS5
"RTN","PXRMCWH",79,0)
 S NFOUND=0
"RTN","PXRMCWH",80,0)
 S WVPAP=$O(^WV(790.2,"B","PAP SMEAR",""))
"RTN","PXRMCWH",81,0)
 S SNOWCNT=0,CNT=0
"RTN","PXRMCWH",82,0)
 ;Get SNOMED Morphology codes from file 790.2
"RTN","PXRMCWH",83,0)
 F  S SNOWCNT=$O(^WV(790.2,WVPAP,1,SNOWCNT)) Q:+SNOWCNT'>0  D
"RTN","PXRMCWH",84,0)
 .S PXRMWVM($P($G(^WV(790.2,WVPAP,1,SNOWCNT,0)),U))=$P($G(^WV(790.2,WVPAP,1,SNOWCNT,0)),U,2)
"RTN","PXRMCWH",85,0)
 ;
"RTN","PXRMCWH",86,0)
 ;Get SNOMED Topography codes from file 790.2
"RTN","PXRMCWH",87,0)
 S SNOWCNT=0 F  S SNOWCNT=$O(^WV(790.2,WVPAP,2,SNOWCNT)) Q:+SNOWCNT'>0  D
"RTN","PXRMCWH",88,0)
 .S PXRMWVT($P($G(^WV(790.2,WVPAP,2,SNOWCNT,0)),U))=""
"RTN","PXRMCWH",89,0)
 ;
"RTN","PXRMCWH",90,0)
 ;If no topography codes quit
"RTN","PXRMCWH",91,0)
 I $D(PXRMWVT)'>0 S DATA(1,"VALUE")="NO TOPOGRAPHY CODES FOUND",TEST(1)=0,TEXT(1)="     " Q
"RTN","PXRMCWH",92,0)
 ;
"RTN","PXRMCWH",93,0)
 ;Handle search direction and date ranges
"RTN","PXRMCWH",94,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMCWH",95,0)
 S SDIR=$S(NGET<0:+1,1:-1)
"RTN","PXRMCWH",96,0)
 S DS=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMCWH",97,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMCWH",98,0)
 ;
"RTN","PXRMCWH",99,0)
 ;Match Topography codes in PXRMINDX for Lab
"RTN","PXRMCWH",100,0)
 N DTARRAY,NODE1,TCNT,ODATE1
"RTN","PXRMCWH",101,0)
 S TOP=0,CNT1=0,TCNT=0,ODATE1=0 F  S TOP=$O(PXRMWVT(TOP)) Q:+TOP'>0!(CNT1=NGET)  D
"RTN","PXRMCWH",102,0)
 .S SNOWTOP="A;O;"_TOP,DATE1=DS
"RTN","PXRMCWH",103,0)
 .F  S DATE1=+$O(^PXRMINDX(63,"PI",DFN,SNOWTOP,DATE1),SDIR) Q:$S(DATE1'>0:1,DATE1<BDT:1,DATE1>EDTT:1,1:0)  D
"RTN","PXRMCWH",104,0)
 ..S DAS=$O(^PXRMINDX(63,"PI",DFN,SNOWTOP,DATE1,""))
"RTN","PXRMCWH",105,0)
 ..;
"RTN","PXRMCWH",106,0)
 ..;set date to dtarray to hanle multiple snomed done on the same date
"RTN","PXRMCWH",107,0)
 ..S DTARRAY(DATE1)=$S($D(DTARRAY(DATE1)):DTARRAY(DATE1)+1,1:1)
"RTN","PXRMCWH",108,0)
 ..S DTARRAY(DATE1,DTARRAY(DATE1))=TOP_U_DAS
"RTN","PXRMCWH",109,0)
 ;
"RTN","PXRMCWH",110,0)
 ;loop through date array
"RTN","PXRMCWH",111,0)
 N DAS
"RTN","PXRMCWH",112,0)
 S DATE1=DS F  S DATE1=$O(DTARRAY(DATE1),SDIR) Q:$S(DATE1'>0:1,CNT1=NGET:1,1:0)  D
"RTN","PXRMCWH",113,0)
 .S TCNT=0,CNT1=CNT1+1 F  S TCNT=$O(DTARRAY(DATE1,TCNT)) Q:TCNT'>0  D
"RTN","PXRMCWH",114,0)
 ..S NODE1=$G(DTARRAY(DATE1,TCNT))
"RTN","PXRMCWH",115,0)
 ..S TDATE(CNT1)=DATE1,NODE=$G(^LAB(61,$P(NODE1,U),0)),DAS=$P(NODE1,U,2)
"RTN","PXRMCWH",116,0)
 ..S TTEST(CNT1)=0
"RTN","PXRMCWH",117,0)
 ..;
"RTN","PXRMCWH",118,0)
 ..;set TDATA to value
"RTN","PXRMCWH",119,0)
 ..S TDATA(CNT1,"SNOMED",TCNT,"VALUE")="T-"_$P(NODE,U,2)_" "_$P(NODE,U)
"RTN","PXRMCWH",120,0)
 ..I '$D(TTEXT(CNT1)) S TTEXT(CNT1)=TDATA(CNT1,"SNOMED",TCNT,"VALUE")_" - "
"RTN","PXRMCWH",121,0)
 ..E  I $L(TTEXT(CNT1))+$L(TDATA(CNT1,"SNOMED",TCNT,"VALUE"))<255 D
"RTN","PXRMCWH",122,0)
 ...I $E(TTEXT(CNT1),$L(TTEXT(CNT1)))="\" S TTEXT(CNT1)=TTEXT(CNT1)_TDATA(CNT1,"SNOMED",TCNT,"VALUE")_" - "
"RTN","PXRMCWH",123,0)
 ..S TDATA(CNT1,"SNOMED",TCNT,"TOPH")="T-"_$P(NODE,U,2)
"RTN","PXRMCWH",124,0)
 ..;
"RTN","PXRMCWH",125,0)
 ..;Dig down into Lab file to find a match for morphology codes
"RTN","PXRMCWH",126,0)
 ..S SNOWCNT=0,DAS0=$P($G(DAS),";"),DAS1=$P($G(DAS),";",3)
"RTN","PXRMCWH",127,0)
 ..S DAS2=$P(DAS,";",4),DAS3=$P(DAS,";",5)
"RTN","PXRMCWH",128,0)
 ..S CNT2=0,NODE=""
"RTN","PXRMCWH",129,0)
 ..;
"RTN","PXRMCWH",130,0)
 ..;get Morphology results
"RTN","PXRMCWH",131,0)
 ..N MCNT S MCNT=0
"RTN","PXRMCWH",132,0)
 ..S TDATA(CNT1,"UNSATISFACTORY")="F"
"RTN","PXRMCWH",133,0)
 ..F  S SNOWCNT=$O(^LR(DAS0,"CY",DAS1,DAS2,DAS3,2,SNOWCNT)) Q:+SNOWCNT'>0  D
"RTN","PXRMCWH",134,0)
 ...S MORIEN=^LR(DAS0,"CY",DAS1,DAS2,DAS3,2,SNOWCNT,0)
"RTN","PXRMCWH",135,0)
 ...I $D(PXRMWVM(MORIEN))>0 D
"RTN","PXRMCWH",136,0)
 ....S TTEST(CNT1)=1,MCNT=MCNT+1
"RTN","PXRMCWH",137,0)
 ....;
"RTN","PXRMCWH",138,0)
 ....;handle multiple SNOMED entries for the same date
"RTN","PXRMCWH",139,0)
 ....S NODE=^LAB(61.1,MORIEN,0)
"RTN","PXRMCWH",140,0)
 ....N STR
"RTN","PXRMCWH",141,0)
 ....I '$D(TTEXT(CNT1))  S TTEXT(CNT1)="M-"_$P(NODE,U,2)_" "_$P(NODE,U)
"RTN","PXRMCWH",142,0)
 ....E  D
"RTN","PXRMCWH",143,0)
 .....S STR="M-"_$P(NODE,U,2)_" "_$P(NODE,U)
"RTN","PXRMCWH",144,0)
 .....I $L(TTEXT(CNT1))+STR'<255 Q
"RTN","PXRMCWH",145,0)
 .....S TTEXT(CNT1)=TTEXT(CNT1)_STR_";"
"RTN","PXRMCWH",146,0)
 ....;
"RTN","PXRMCWH",147,0)
 ....S TDATA(CNT1,"SNOMED",TCNT,MCNT,"MORP")="M-"_$P(NODE,U,2)
"RTN","PXRMCWH",148,0)
 ....S TDATA(CNT1,"SNOMED",TCNT,MCNT,"RESULT STATUS")=$S(PXRMWVM(MORIEN)="0":"NEM",PXRMWVM(MORIEN)="1":"Abnormal",PXRMWVM(MORIEN)="2":"Unsatisfactory",1:"Unknown")
"RTN","PXRMCWH",149,0)
 ....I TDATA(CNT1,"SNOMED",TCNT,MCNT,"RESULT STATUS")["Un" S TDATA(CNT1,"UNSATISFACTORY")="T"
"RTN","PXRMCWH",150,0)
 ....I $L(TTEXT(CNT1))+$L("\\")<255 S TTEXT(CNT1)=TTEXT(CNT1)_"\\"
"RTN","PXRMCWH",151,0)
 S NFOUND=CNT1
"RTN","PXRMCWH",152,0)
 N DATE1,CNT,TCNT
"RTN","PXRMCWH",153,0)
 F IND=1:1:NFOUND S OD(TDATE(IND),IND)=""
"RTN","PXRMCWH",154,0)
 S CNT1=0,IND=""
"RTN","PXRMCWH",155,0)
 F  S IND=$O(OD(IND),SDIR) Q:IND=""  D
"RTN","PXRMCWH",156,0)
 . S JND=0
"RTN","PXRMCWH",157,0)
 . F  S JND=$O(OD(IND,JND)) Q:JND=""  D
"RTN","PXRMCWH",158,0)
 .. S CNT1=CNT1+1
"RTN","PXRMCWH",159,0)
 .. S DATE(CNT1)=IND
"RTN","PXRMCWH",160,0)
 .. S TEST(CNT1)=TTEST(JND)
"RTN","PXRMCWH",161,0)
 .. M DATA(CNT1)=TDATA(JND)
"RTN","PXRMCWH",162,0)
 .. S TEXT(CNT1)=TTEXT(JND)
"RTN","PXRMCWH",163,0)
 Q
"RTN","PXRMCWH",164,0)
 ;
"RTN","PXRMDATA")
0^138^B5652428
"RTN","PXRMDATA",1,0)
PXRMDATA ; SLC/PKR - Routines for getting data. ;07/17/2006
"RTN","PXRMDATA",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDATA",3,0)
 ;
"RTN","PXRMDATA",4,0)
 ;===============================================
"RTN","PXRMDATA",5,0)
GETDATA(FILENUM,DAS,FIEVT) ;Return data for a finding.
"RTN","PXRMDATA",6,0)
 K FIEVT
"RTN","PXRMDATA",7,0)
 I FILENUM=45 D GETDATA^PXRMDGPT(DAS,.FIEVT) Q
"RTN","PXRMDATA",8,0)
 I FILENUM=52 D GETDATA^PXRMDOUT(DAS,.FIEVT) Q
"RTN","PXRMDATA",9,0)
 I FILENUM=55 D GETDATA^PXRMDIN(DAS,.FIEVT)  Q
"RTN","PXRMDATA",10,0)
 I FILENUM="55NVA" D GETDATA^PXRMDNVA(DAS,.FIEVT) Q
"RTN","PXRMDATA",11,0)
 I FILENUM=63 D GETDATA^PXRMLAB(DAS,.FIEVT) Q
"RTN","PXRMDATA",12,0)
 I FILENUM=70 D GETDATA^PXRMRAD(DAS,.FIEVT) Q
"RTN","PXRMDATA",13,0)
 I FILENUM=100 D GETDATA^PXRMORDR(DAS,.FIEVT) Q
"RTN","PXRMDATA",14,0)
 I FILENUM=120.5 D GETDATA^PXRMVITL(DAS,.FIEVT) Q
"RTN","PXRMDATA",15,0)
 I FILENUM=601.2 D GETDATA^PXRMMH(DAS,.FIEVT) Q
"RTN","PXRMDATA",16,0)
 I FILENUM=9000010 D GETDATA^PXRMVSIT(DAS,.FIEVT,1) Q
"RTN","PXRMDATA",17,0)
 I FILENUM=9000010.07 D GETDATA^PXRMVPOV(DAS,.FIEVT) Q
"RTN","PXRMDATA",18,0)
 I FILENUM=9000010.11 D GETDATA^PXRMIMM(DAS,.FIEVT) Q
"RTN","PXRMDATA",19,0)
 I FILENUM=9000010.12 D GETDATA^PXRMSKIN(DAS,.FIEVT) Q
"RTN","PXRMDATA",20,0)
 I FILENUM=9000010.13 D GETDATA^PXRMEXAM(DAS,.FIEVT) Q
"RTN","PXRMDATA",21,0)
 I FILENUM=9000010.16 D GETDATA^PXRMEDU(DAS,.FIEVT) Q
"RTN","PXRMDATA",22,0)
 I FILENUM=9000010.18 D GETDATA^PXRMVCPT(DAS,.FIEVT) Q
"RTN","PXRMDATA",23,0)
 I FILENUM=9000010.23 D GETDATA^PXRMHF(DAS,.FIEVT) Q
"RTN","PXRMDATA",24,0)
 I FILENUM=9000011 D GETDATA^PXRMPROB(DAS,.FIEVT) Q
"RTN","PXRMDATA",25,0)
 Q
"RTN","PXRMDATA",26,0)
 ;
"RTN","PXRMDATA",27,0)
 ;===============================================
"RTN","PXRMDATA",28,0)
GETFNAME(FINDING) ;Given a finding of the form IEN;GLOBAL return its name.
"RTN","PXRMDATA",29,0)
 N DIC,DO,IEN,FNUM,GLOBAL
"RTN","PXRMDATA",30,0)
 S IEN=$P(FINDING,";",1)
"RTN","PXRMDATA",31,0)
 S GLOBAL=$P(FINDING,";",2)
"RTN","PXRMDATA",32,0)
 S GLOBAL=$S(GLOBAL="PS(55NVA,":"PS(50.7,",GLOBAL="PS(55,":"PSDRUG(",1:GLOBAL)
"RTN","PXRMDATA",33,0)
 S DIC="^"_GLOBAL
"RTN","PXRMDATA",34,0)
 D DO^DIC1
"RTN","PXRMDATA",35,0)
 S FNUM=+$P(DO,U,2)
"RTN","PXRMDATA",36,0)
 Q $$GET1^DIQ(FNUM,IEN,.01)
"RTN","PXRMDATA",37,0)
 ;
"RTN","PXRMDATA",38,0)
 ;===============================================
"RTN","PXRMDATA",39,0)
GETFNUM(ENODE) ;Given an ENODE return the file number for the data source.
"RTN","PXRMDATA",40,0)
 I ENODE="AUTTEDT(" Q 9000010.16
"RTN","PXRMDATA",41,0)
 I ENODE="AUTTEXAM(" Q 9000010.13
"RTN","PXRMDATA",42,0)
 I ENODE="AUTTHF(" Q 9000010.23
"RTN","PXRMDATA",43,0)
 I ENODE="AUTTIMM(" Q 9000010.11
"RTN","PXRMDATA",44,0)
 I ENODE="AUTTSK(" Q 9000010.12
"RTN","PXRMDATA",45,0)
 I ENODE="GMRD(120.51," Q 120.5
"RTN","PXRMDATA",46,0)
 I ENODE="LAB(60," Q 63
"RTN","PXRMDATA",47,0)
 I ENODE="ORD(101.43," Q 100
"RTN","PXRMDATA",48,0)
 I ENODE="PXD(811.2," Q 811.2
"RTN","PXRMDATA",49,0)
 I ENODE="PXRMD(810.9," Q 9000010
"RTN","PXRMDATA",50,0)
 I ENODE="PXRMD(811.4," Q 811.4
"RTN","PXRMDATA",51,0)
 I ENODE="PXRMD(811.5," Q 811.5
"RTN","PXRMDATA",52,0)
 I ENODE="PS(50.605," Q 52_U_55_U_"55NVA"
"RTN","PXRMDATA",53,0)
 I ENODE="PS(55," Q 55
"RTN","PXRMDATA",54,0)
 I ENODE="PS(55NVA," Q "55NVA"
"RTN","PXRMDATA",55,0)
 I ENODE="PSDRUG(" Q 52_U_55_U_"55NVA"
"RTN","PXRMDATA",56,0)
 I ENODE="PSNDF(50.6," Q 52_U_55_U_"55NVA"
"RTN","PXRMDATA",57,0)
 I ENODE="PSRX(" Q 52
"RTN","PXRMDATA",58,0)
 I ENODE="RAMIS(71," Q 70
"RTN","PXRMDATA",59,0)
 I ENODE="YTT(601," Q 601.2
"RTN","PXRMDATA",60,0)
 Q 0
"RTN","PXRMDATA",61,0)
 ;
"RTN","PXRMDATE")
0^31^B43288012
"RTN","PXRMDATE",1,0)
PXRMDATE ; SLC/PKR - Clinical Reminders date utilities. ;06/20/2006
"RTN","PXRMDATE",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDATE",3,0)
 ;
"RTN","PXRMDATE",4,0)
 ;==================================================
"RTN","PXRMDATE",5,0)
CEFD(FDA) ;Called by the Exchange Utility only if the input packed
"RTN","PXRMDATE",6,0)
 ;reminder was packed under v1.5  Move Effective Date to Beginning Date.
"RTN","PXRMDATE",7,0)
 N IND
"RTN","PXRMDATE",8,0)
 S IND=""
"RTN","PXRMDATE",9,0)
 F  S IND=$O(FDA(811.902,IND)) Q:IND=""  D
"RTN","PXRMDATE",10,0)
 . I '$D(FDA(811.902,IND,12)) Q
"RTN","PXRMDATE",11,0)
 .;If the EFFECTIVE PERIOD exists don't do anything.
"RTN","PXRMDATE",12,0)
 . I $D(FDA(811.902,IND,9)) Q
"RTN","PXRMDATE",13,0)
 . S FDA(811.902,IND,9)=FDA(811.902,IND,12)
"RTN","PXRMDATE",14,0)
 . K FDA(811.902,IND,12)
"RTN","PXRMDATE",15,0)
 Q
"RTN","PXRMDATE",16,0)
 ;
"RTN","PXRMDATE",17,0)
 ;==================================================
"RTN","PXRMDATE",18,0)
COMPARE(X) ;Compare beginning and ending dates, give a warning if
"RTN","PXRMDATE",19,0)
 ;Ending Date comes before Beginning Date. Called by ADATE xref in
"RTN","PXRMDATE",20,0)
 ;definitions and terms.
"RTN","PXRMDATE",21,0)
 ;Do not execute as part of exchange.
"RTN","PXRMDATE",22,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMDATE",23,0)
 N BDT,EDT
"RTN","PXRMDATE",24,0)
 S BDT=$S(X(1)'="":$$CTFMD^PXRMDATE(X(1)),1:0)
"RTN","PXRMDATE",25,0)
 S EDT=X(2)
"RTN","PXRMDATE",26,0)
 I EDT="" S EDT="T"
"RTN","PXRMDATE",27,0)
 S EDT=$$CTFMD^PXRMDATE(EDT)
"RTN","PXRMDATE",28,0)
 ;If EDT does not contain a time set it to the end of the day.
"RTN","PXRMDATE",29,0)
 I EDT'["." S EDT=EDT_".235959"
"RTN","PXRMDATE",30,0)
 I EDT<BDT D
"RTN","PXRMDATE",31,0)
 . S BDT=$S(X(1)'="":X(1),1:"")
"RTN","PXRMDATE",32,0)
 . S EDT=$S(X(2)'="":X(2),1:"T@2400")
"RTN","PXRMDATE",33,0)
 . S TEXT="Warning the ending date ("_EDT_") is before the beginning date ("_BDT_")"
"RTN","PXRMDATE",34,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMDATE",35,0)
 Q
"RTN","PXRMDATE",36,0)
 ;
"RTN","PXRMDATE",37,0)
 ;==================================================
"RTN","PXRMDATE",38,0)
COTN(EFP) ;Convert an Effective Period to the new date/time format.
"RTN","PXRMDATE",39,0)
 ;Possible effective periods are ND, NM, or NY where N is an integer.
"RTN","PXRMDATE",40,0)
 S EFP=$$UP^XLFSTR(EFP)
"RTN","PXRMDATE",41,0)
 I (EFP?1N.N1"D")!(EFP?1N.N1"M")!(EFP?1N.N1"Y") D
"RTN","PXRMDATE",42,0)
 . S NUM=+EFP
"RTN","PXRMDATE",43,0)
 . S EFP=$S(NUM=0:"T",1:"T-"_EFP)
"RTN","PXRMDATE",44,0)
 Q EFP
"RTN","PXRMDATE",45,0)
 ;
"RTN","PXRMDATE",46,0)
 ;==================================================
"RTN","PXRMDATE",47,0)
CTFMD(DATE) ;Convert DATE which may be in any of the FileMan acceptable
"RTN","PXRMDATE",48,0)
 ;forms as well as T-NY to a FileMan date. Also understands LAD for
"RTN","PXRMDATE",49,0)
 ;Last Admission Date.
"RTN","PXRMDATE",50,0)
 N %DT,X,Y
"RTN","PXRMDATE",51,0)
 ;Check for a date FileMan understands.
"RTN","PXRMDATE",52,0)
 S X=DATE,%DT="ST"
"RTN","PXRMDATE",53,0)
 D ^%DT
"RTN","PXRMDATE",54,0)
 ;If it is not a FileMan date check for a symbolic date.
"RTN","PXRMDATE",55,0)
 I Y=-1 S Y=$$SYMDATE(DATE)
"RTN","PXRMDATE",56,0)
 ;If it is not a date that is understood by SYMDATE return -1
"RTN","PXRMDATE",57,0)
 I Y=-1 Q -1
"RTN","PXRMDATE",58,0)
 I $G(PXRMDATE)'="",$$ISVSYMD(DATE) D
"RTN","PXRMDATE",59,0)
 . N DIFFS
"RTN","PXRMDATE",60,0)
 . S DIFFS=-$$FMDIFF^XLFDT(DT,PXRMDATE,2)
"RTN","PXRMDATE",61,0)
 . S Y=$$FMADD^XLFDT(Y,0,0,0,DIFFS)
"RTN","PXRMDATE",62,0)
 I DATE["LAD" D
"RTN","PXRMDATE",63,0)
 . I $G(PXRMLAD)="" S Y=0
"RTN","PXRMDATE",64,0)
 . E  D
"RTN","PXRMDATE",65,0)
 .. N DIFFS
"RTN","PXRMDATE",66,0)
 .. S DIFFS=-$$FMDIFF^XLFDT(DT,$G(PXRMLAD),2)
"RTN","PXRMDATE",67,0)
 .. S Y=$$FMADD^XLFDT(Y,0,0,0,DIFFS)
"RTN","PXRMDATE",68,0)
 Q Y
"RTN","PXRMDATE",69,0)
 ;
"RTN","PXRMDATE",70,0)
 ;=================================================
"RTN","PXRMDATE",71,0)
DCHECK(DATE) ;Trap for special characters before calling CTFMD^PXRMDATE.
"RTN","PXRMDATE",72,0)
 ;Used in DIR("PRE") for date inputs.
"RTN","PXRMDATE",73,0)
 I $D(DTOUT) Q DATE
"RTN","PXRMDATE",74,0)
 I DATE="" Q DATE
"RTN","PXRMDATE",75,0)
 I DATE["^" Q DATE
"RTN","PXRMDATE",76,0)
 I DATE["?" Q DATE
"RTN","PXRMDATE",77,0)
 Q $$CTFMD^PXRMDATE(DATE)
"RTN","PXRMDATE",78,0)
 ;
"RTN","PXRMDATE",79,0)
 ;==================================================
"RTN","PXRMDATE",80,0)
DUE(DEFARR,RESDATE,FREQ,DUE,DUEDATE,FIEVAL) ;Compute the due date.
"RTN","PXRMDATE",81,0)
 ;This is the date of the resolution finding + the reminder frequency.
"RTN","PXRMDATE",82,0)
 ;Subtract the due in advance time to see if the reminder should be
"RTN","PXRMDATE",83,0)
 ;marked as due soon.
"RTN","PXRMDATE",84,0)
 ;
"RTN","PXRMDATE",85,0)
 N DATE,DIAT,DIATOK,LDATE,PXRMITEM,TDDUE,TODAY
"RTN","PXRMDATE",86,0)
 S PXRMITEM=DEFARR("IEN")
"RTN","PXRMDATE",87,0)
 ;If the final frequency is 0Y then the reminder is not due.
"RTN","PXRMDATE",88,0)
 I FREQ="0Y" S DUE=0,DUEDATE="" Q
"RTN","PXRMDATE",89,0)
 ;
"RTN","PXRMDATE",90,0)
 S DUEDATE=""
"RTN","PXRMDATE",91,0)
 ;Check for custom date due.
"RTN","PXRMDATE",92,0)
 I DEFARR(45)'="" S DUEDATE=$$CDUEDATE^PXRMCDUE(.DEFARR,.FIEVAL)
"RTN","PXRMDATE",93,0)
 I DUEDATE'="",DUEDATE'=-1 G SETDUE
"RTN","PXRMDATE",94,0)
 ;
"RTN","PXRMDATE",95,0)
 ;No custom date due, do regular date calculation.
"RTN","PXRMDATE",96,0)
 I (FREQ="")!(FREQ=-1) D  Q
"RTN","PXRMDATE",97,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","NOFREQ")="No reminder frequency - cannot compute due date!"
"RTN","PXRMDATE",98,0)
 . S (DUE,DUEDATE)="CNBD"
"RTN","PXRMDATE",99,0)
 ;
"RTN","PXRMDATE",100,0)
 S LDATE=$S(RESDATE["X":0,1:+RESDATE)
"RTN","PXRMDATE",101,0)
 I LDATE=0 S (DUE,DUEDATE)="DUE NOW" Q
"RTN","PXRMDATE",102,0)
 S DATE=$$FULLDATE(LDATE),DUEDATE=$$NEWDATE(DATE,FREQ)
"RTN","PXRMDATE",103,0)
 ;
"RTN","PXRMDATE",104,0)
SETDUE ;If the due date is less than or equal to today's date the reminder
"RTN","PXRMDATE",105,0)
 ;is due.
"RTN","PXRMDATE",106,0)
 S TODAY=$$NOW^PXRMDATE
"RTN","PXRMDATE",107,0)
 I +DUEDATE'>TODAY S DUE="DUE NOW"  Q
"RTN","PXRMDATE",108,0)
 ;
"RTN","PXRMDATE",109,0)
 S DIAT="-"_$P(DEFARR(0),U,4)
"RTN","PXRMDATE",110,0)
 I DIAT="-" D
"RTN","PXRMDATE",111,0)
 . S DIATOK=0
"RTN","PXRMDATE",112,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","DIAT")="Warning no do in advance time"
"RTN","PXRMDATE",113,0)
 E  S DIATOK=1
"RTN","PXRMDATE",114,0)
 ;
"RTN","PXRMDATE",115,0)
 S TDDUE=$S(DIATOK=1:$$NEWDATE(DUEDATE,DIAT),1:DUEDATE)
"RTN","PXRMDATE",116,0)
 S DUE=$S(TDDUE'>TODAY:"DUE SOON",1:"RESOLVED")
"RTN","PXRMDATE",117,0)
 Q
"RTN","PXRMDATE",118,0)
 ;
"RTN","PXRMDATE",119,0)
 ;==================================================
"RTN","PXRMDATE",120,0)
DURATION(START,STOP) ;Return the number days between the Start Date and
"RTN","PXRMDATE",121,0)
 ;Stop Date.
"RTN","PXRMDATE",122,0)
 I +START=0 Q 0
"RTN","PXRMDATE",123,0)
 N PXRMNOW
"RTN","PXRMDATE",124,0)
 S PXRMNOW=$$NOW^PXRMDATE
"RTN","PXRMDATE",125,0)
 I START>PXRMNOW Q 0
"RTN","PXRMDATE",126,0)
 I (STOP="")!(STOP>PXRMNOW) S STOP=PXRMNOW
"RTN","PXRMDATE",127,0)
 Q $$FMDIFF^XLFDT(STOP,START)
"RTN","PXRMDATE",128,0)
 ;
"RTN","PXRMDATE",129,0)
 ;==================================================
"RTN","PXRMDATE",130,0)
EDATE(DATE) ;Check for an historical (event) date, format as appropriate.
"RTN","PXRMDATE",131,0)
 Q $$FMTE^XLFDT(DATE,"5DZ")
"RTN","PXRMDATE",132,0)
 ;
"RTN","PXRMDATE",133,0)
 ;==================================================
"RTN","PXRMDATE",134,0)
FULLDATE(DATE) ;See if DATE is a full date, i.e., it has a month and
"RTN","PXRMDATE",135,0)
 ;a day along with a year. If the month is missing assume Jan. If the
"RTN","PXRMDATE",136,0)
 ;day is missing assume the first. Issue a warning so the user knows
"RTN","PXRMDATE",137,0)
 ;what happened. DATE should be in Fileman format.
"RTN","PXRMDATE",138,0)
 N DAY,MISSING,MONTH,TDATE,YEAR
"RTN","PXRMDATE",139,0)
 S TDATE=DATE
"RTN","PXRMDATE",140,0)
 S MISSING=0
"RTN","PXRMDATE",141,0)
 S DAY=$E(DATE,6,7)
"RTN","PXRMDATE",142,0)
 S MONTH=$E(DATE,4,5)
"RTN","PXRMDATE",143,0)
 S YEAR=$E(DATE,1,3)
"RTN","PXRMDATE",144,0)
 I +DAY=0 D
"RTN","PXRMDATE",145,0)
 . S DAY=1
"RTN","PXRMDATE",146,0)
 . S MISSING=1
"RTN","PXRMDATE",147,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","NO DAY")="Encounter date missing the day, using the first for the date due calculation."
"RTN","PXRMDATE",148,0)
 I +MONTH=0 D
"RTN","PXRMDATE",149,0)
 . S MONTH=1
"RTN","PXRMDATE",150,0)
 . S MISSING=1
"RTN","PXRMDATE",151,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","NO MONTH")="Encounter date missing the month, using January for the date due calculation."
"RTN","PXRMDATE",152,0)
 I MISSING D
"RTN","PXRMDATE",153,0)
 . S TDATE=(YEAR*1E4)+(MONTH*1E2)+DAY
"RTN","PXRMDATE",154,0)
 . I DATE["E" S TDATE=TDATE_"E"
"RTN","PXRMDATE",155,0)
 Q TDATE
"RTN","PXRMDATE",156,0)
 ;
"RTN","PXRMDATE",157,0)
 ;==================================================
"RTN","PXRMDATE",158,0)
FRQINDAY(FREQ) ;Given a frequency in the form ND, NM, or NY where N is a
"RTN","PXRMDATE",159,0)
 ;number and D stands for days, M for months, and Y for years return
"RTN","PXRMDATE",160,0)
 ;the value in days.
"RTN","PXRMDATE",161,0)
 I FREQ="" Q ""
"RTN","PXRMDATE",162,0)
 N CODE,LEN,MULT,NUM
"RTN","PXRMDATE",163,0)
 S LEN=$L(FREQ)
"RTN","PXRMDATE",164,0)
 S NUM=$E(FREQ,1,LEN-1)
"RTN","PXRMDATE",165,0)
 S CODE=$E(FREQ,LEN,LEN)
"RTN","PXRMDATE",166,0)
 S MULT=1.0
"RTN","PXRMDATE",167,0)
 I CODE="M" S MULT=30.42
"RTN","PXRMDATE",168,0)
 I CODE="Y" S MULT=365.25
"RTN","PXRMDATE",169,0)
 Q +(MULT*NUM)
"RTN","PXRMDATE",170,0)
 ;
"RTN","PXRMDATE",171,0)
 ;==================================================
"RTN","PXRMDATE",172,0)
ISVSYMD(DATE) ;Return true if DATE is a valid symbolic date.
"RTN","PXRMDATE",173,0)
 N P1,P1OK,P2,P2OK,OP,PAT
"RTN","PXRMDATE",174,0)
 S DATE=$P(DATE,"@",1)
"RTN","PXRMDATE",175,0)
 S OP=$S(DATE["+":"+",1:"-")
"RTN","PXRMDATE",176,0)
 S P1=$P(DATE,OP,1),P1OK=0
"RTN","PXRMDATE",177,0)
 F PAT="T","TODAY","N","NOW" I P1=PAT S P1OK=1 Q:P1OK
"RTN","PXRMDATE",178,0)
 I PAT=DATE Q 1
"RTN","PXRMDATE",179,0)
 S P2=$P(DATE,OP,2),P2OK=0
"RTN","PXRMDATE",180,0)
 F PAT="1N.N","1N.N1""D""","1N.N1""M""","1N.N1""Y""" I P2?@PAT S P2OK=1 Q:P2OK
"RTN","PXRMDATE",181,0)
 Q P1OK&P2OK
"RTN","PXRMDATE",182,0)
 ;
"RTN","PXRMDATE",183,0)
 ;==================================================
"RTN","PXRMDATE",184,0)
NEWDATE(FMDATE,OFFSET) ;Given a date in VA Fileman format (FMDATE) and an
"RTN","PXRMDATE",185,0)
 ;offset of the form NY, NM, ND where N is a number and Y stands for
"RTN","PXRMDATE",186,0)
 ;years, M for months, and D for days return the new date in VA Fileman
"RTN","PXRMDATE",187,0)
 ;format. 
"RTN","PXRMDATE",188,0)
 I FMDATE=0 Q 0
"RTN","PXRMDATE",189,0)
 N LEN,NEWDATE,NUM,UNIT
"RTN","PXRMDATE",190,0)
 S LEN=$L(OFFSET)
"RTN","PXRMDATE",191,0)
 S NUM=+$E(OFFSET,1,LEN-1)
"RTN","PXRMDATE",192,0)
 S UNIT=$E(OFFSET,LEN)
"RTN","PXRMDATE",193,0)
 I UNIT="D" G DAY
"RTN","PXRMDATE",194,0)
 I UNIT="M" G MONTH
"RTN","PXRMDATE",195,0)
 I UNIT="Y" G YEAR
"RTN","PXRMDATE",196,0)
 ;Unknown unit just return the original date
"RTN","PXRMDATE",197,0)
 Q FMDATE
"RTN","PXRMDATE",198,0)
DAY ;
"RTN","PXRMDATE",199,0)
 S NEWDATE=+$$FMADD^XLFDT(FMDATE,NUM)
"RTN","PXRMDATE",200,0)
 Q NEWDATE
"RTN","PXRMDATE",201,0)
MONTH ;
"RTN","PXRMDATE",202,0)
 ;Convert the months to days and then add the days using the DAY code.
"RTN","PXRMDATE",203,0)
 ;Multiply the number of months by the average number of days in a month.
"RTN","PXRMDATE",204,0)
 N INT,FRAC
"RTN","PXRMDATE",205,0)
 S NUM=30.42*NUM
"RTN","PXRMDATE",206,0)
 ;Round the number of days, FMADD^XLFDT has problems with non-integer
"RTN","PXRMDATE",207,0)
 ;days.
"RTN","PXRMDATE",208,0)
 S INT=+$P(NUM,".",1)
"RTN","PXRMDATE",209,0)
 S FRAC=NUM-INT
"RTN","PXRMDATE",210,0)
 I FRAC<0.5 S NUM=INT
"RTN","PXRMDATE",211,0)
 E  S NUM=INT+1
"RTN","PXRMDATE",212,0)
 G DAY
"RTN","PXRMDATE",213,0)
 Q
"RTN","PXRMDATE",214,0)
YEAR ;
"RTN","PXRMDATE",215,0)
 Q FMDATE+(10000*NUM)
"RTN","PXRMDATE",216,0)
 ;
"RTN","PXRMDATE",217,0)
 ;==================================================
"RTN","PXRMDATE",218,0)
NOW() ;If the reminder global PXRMDATE is defined return it, otherwise
"RTN","PXRMDATE",219,0)
 ;return the current date and time.
"RTN","PXRMDATE",220,0)
 Q $S(+$G(PXRMDATE)>0:PXRMDATE,1:$$NOW^XLFDT)
"RTN","PXRMDATE",221,0)
 ;
"RTN","PXRMDATE",222,0)
 ;==================================================
"RTN","PXRMDATE",223,0)
SYMDATE(DATE) ;Convert a symbolic date into a FileMan date.
"RTN","PXRMDATE",224,0)
 N %DT,OPER,PFSTACK,SYM,TIME,X,Y
"RTN","PXRMDATE",225,0)
 S TIME=$P(DATE,"@",2),DATE=$P(DATE,"@",1)
"RTN","PXRMDATE",226,0)
 S X=$S(DATE="LAD":$G(PXRMLAD),1:"")
"RTN","PXRMDATE",227,0)
 I X="" D
"RTN","PXRMDATE",228,0)
 . S OPER="+-"
"RTN","PXRMDATE",229,0)
 . D POSTFIX^PXRMSTAC(DATE,OPER,.PFSTACK)
"RTN","PXRMDATE",230,0)
 I PFSTACK(0)=3 D
"RTN","PXRMDATE",231,0)
 . S SYM=PFSTACK(1)
"RTN","PXRMDATE",232,0)
 . S SYM=$S(SYM="LAD":"T",SYM="N":"N",SYM="NOW":"N",SYM="T":"T",SYM="TODAY":"T",1:"")
"RTN","PXRMDATE",233,0)
 . I SYM="" S Y=-1 Q
"RTN","PXRMDATE",234,0)
 .;FileMan only handles D, W, or M so convert Y to months.
"RTN","PXRMDATE",235,0)
 . I PFSTACK(2)["Y" S PFSTACK(2)=+PFSTACK(2)*12_"M"
"RTN","PXRMDATE",236,0)
 . S X=SYM_PFSTACK(3)_PFSTACK(2)
"RTN","PXRMDATE",237,0)
 I PFSTACK(0)=1 S X=PFSTACK(1)
"RTN","PXRMDATE",238,0)
 I TIME'="" S X=X_"@"_TIME
"RTN","PXRMDATE",239,0)
 S %DT="ST"
"RTN","PXRMDATE",240,0)
 D ^%DT
"RTN","PXRMDATE",241,0)
 Q Y
"RTN","PXRMDATE",242,0)
 ;
"RTN","PXRMDATE",243,0)
 ;==================================================
"RTN","PXRMDATE",244,0)
VDATE(VIEN) ;Given a visit ien return the visit date.
"RTN","PXRMDATE",245,0)
 N DATE
"RTN","PXRMDATE",246,0)
 I +VIEN>0 S DATE=$P($G(^AUPNVSIT(VIEN,0)),U,1)
"RTN","PXRMDATE",247,0)
 E  S DATE=0
"RTN","PXRMDATE",248,0)
 I $L(DATE)=0 S DATE=0
"RTN","PXRMDATE",249,0)
 ;Check for historical encounter.
"RTN","PXRMDATE",250,0)
 I $$ISHIST^PXRMVSIT(VIEN) S DATE=DATE_"E"
"RTN","PXRMDATE",251,0)
 Q DATE
"RTN","PXRMDATE",252,0)
 ;
"RTN","PXRMDCPY")
0^9^B35646048
"RTN","PXRMDCPY",1,0)
PXRMDCPY ; SLC/PJH - Copy dialog files. ;07/09/2002
"RTN","PXRMDCPY",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDCPY",3,0)
 ;
"RTN","PXRMDCPY",4,0)
 ;Called by label from PXRMDEDT
"RTN","PXRMDCPY",5,0)
 ;
"RTN","PXRMDCPY",6,0)
 ;Yes/No prompts
"RTN","PXRMDCPY",7,0)
 ;--------------
"RTN","PXRMDCPY",8,0)
ASK(YESNO,TEXT,HLP,DEFAULT) ;
"RTN","PXRMDCPY",9,0)
 N X,Y,DIR
"RTN","PXRMDCPY",10,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDCPY",11,0)
 S DIR(0)="YA0"
"RTN","PXRMDCPY",12,0)
 S DIR("A")=TEXT
"RTN","PXRMDCPY",13,0)
 S DIR("B")=DEFAULT
"RTN","PXRMDCPY",14,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDCPY",15,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(HLP)"
"RTN","PXRMDCPY",16,0)
 D ^DIR K DIR
"RTN","PXRMDCPY",17,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDCPY",18,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDCPY",19,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDCPY",20,0)
 Q
"RTN","PXRMDCPY",21,0)
 ;
"RTN","PXRMDCPY",22,0)
 ;Copy any dialog
"RTN","PXRMDCPY",23,0)
 ;---------------
"RTN","PXRMDCPY",24,0)
ANY W IORESET
"RTN","PXRMDCPY",25,0)
 N DIC,DUOUT,DTOUT,DIROUT,DIRUT,DTYP,LFIND,LOCK,SIEN,IENN,IENO,X,Y
"RTN","PXRMDCPY",26,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMDCPY",27,0)
 S WHAT="dialog",ROOT="^PXRMD(801.41,",PROMPT="Select the dialog to copy: "
"RTN","PXRMDCPY",28,0)
 ;
"RTN","PXRMDCPY",29,0)
 S DIC=ROOT,DIC(0)="AEQ",DIC("A")=PROMPT
"RTN","PXRMDCPY",30,0)
 S DIC("S")="I $P(^(0),U,4)=PXRMDTYP"
"RTN","PXRMDCPY",31,0)
 W !
"RTN","PXRMDCPY",32,0)
 D ^DIC
"RTN","PXRMDCPY",33,0)
 I $D(DUOUT)!$D(DTOUT) S DIROUT="" Q
"RTN","PXRMDCPY",34,0)
 S IENO=$P(Y,U,1) I IENO=-1 S DIROUT="" Q
"RTN","PXRMDCPY",35,0)
 ;
"RTN","PXRMDCPY",36,0)
 ;Check for Uneditable flag
"RTN","PXRMDCPY",37,0)
 S LOCK=$P($G(^PXRMD(801.41,IENO,100)),U,4)
"RTN","PXRMDCPY",38,0)
 S LFIND=$P($G(^PXRMD(801.41,IENO,1)),U,5)
"RTN","PXRMDCPY",39,0)
 S DTYP=$P($G(^PXRMD(801.41,IENO,0)),U,4)
"RTN","PXRMDCPY",40,0)
 I LOCK=1,'$G(PXRMINST),DTYP="G" D  Q
"RTN","PXRMDCPY",41,0)
 .W !,"This item cannot be copied." H 2
"RTN","PXRMDCPY",42,0)
 I LOCK=1,$G(LFIND)'="",$G(LFIND)'["ORD",'$G(PXRMINST),DTYP'="G" D  Q
"RTN","PXRMDCPY",43,0)
 .W !,"This item cannot be copied." H 2
"RTN","PXRMDCPY",44,0)
 ;
"RTN","PXRMDCPY",45,0)
 ;Copy the dialog
"RTN","PXRMDCPY",46,0)
 D COPY(IENO,.IENN,0) Q:$D(DUOUT)
"RTN","PXRMDCPY",47,0)
 ;
"RTN","PXRMDCPY",48,0)
 ;Prompts may become forced values
"RTN","PXRMDCPY",49,0)
 I "PF"[$P(@(ROOT_IENN_",0)"),U,4) D
"RTN","PXRMDCPY",50,0)
 .;Get original process ID
"RTN","PXRMDCPY",51,0)
 .N SUB S SUB=$P($G(^PXRMD(801.41,IENO,46)),U)
"RTN","PXRMDCPY",52,0)
 .;Update GUI process in 801.41
"RTN","PXRMDCPY",53,0)
 .I SUB S DR="46///"_SUB,DIE=ROOT,DA=IENN D ^DIE
"RTN","PXRMDCPY",54,0)
 .;check if a prompt
"RTN","PXRMDCPY",55,0)
 .I $P(@(ROOT_IENN_",0)"),U,4)="P" D
"RTN","PXRMDCPY",56,0)
 ..;Allow PXRM prompts to be changed into forced values
"RTN","PXRMDCPY",57,0)
 ..N ANS,TEXT
"RTN","PXRMDCPY",58,0)
 ..S TEXT="Change the new prompt into a forced value :"
"RTN","PXRMDCPY",59,0)
 ..D ASK(.ANS,TEXT,4,"N") Q:$D(DUOUT)!$D(DTOUT)  Q:ANS'="Y"
"RTN","PXRMDCPY",60,0)
 ..;Store the dialog type
"RTN","PXRMDCPY",61,0)
 ..S DR="4///F",DIE=ROOT,DA=IENN
"RTN","PXRMDCPY",62,0)
 ..D ^DIE
"RTN","PXRMDCPY",63,0)
 .Q
"RTN","PXRMDCPY",64,0)
 ;
"RTN","PXRMDCPY",65,0)
 Q
"RTN","PXRMDCPY",66,0)
 ;
"RTN","PXRMDCPY",67,0)
 ;Copy original dialog
"RTN","PXRMDCPY",68,0)
 ;--------------------
"RTN","PXRMDCPY",69,0)
COPY(IENO,IENN,RDIEN) ;
"RTN","PXRMDCPY",70,0)
 D SETSTART^PXRMCOPY(ROOT)
"RTN","PXRMDCPY",71,0)
 S IENN=$$GETFOIEN(ROOT)
"RTN","PXRMDCPY",72,0)
 D MERGE(IENN,IENO,ROOT) Q:$D(DUOUT)
"RTN","PXRMDCPY",73,0)
 ;
"RTN","PXRMDCPY",74,0)
 S DPOS=$G(SEQ)
"RTN","PXRMDCPY",75,0)
 N DA,DIE,DIK,DIR,DR,NAME,ORGNAME,X
"RTN","PXRMDCPY",76,0)
 S ORGNAME=$P(@(ROOT_IENO_",0)"),U,1),NAME=""
"RTN","PXRMDCPY",77,0)
 ;Get the new name.
"RTN","PXRMDCPY",78,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)  Q:NAME]""
"RTN","PXRMDCPY",79,0)
 .S DIR(0)="F"_U_"3:63"_U_"K:(X?.N)!'(X'?1P.E) X"
"RTN","PXRMDCPY",80,0)
 .S DIR("A")="ENTER A UNIQUE NAME"
"RTN","PXRMDCPY",81,0)
 .;If  give a default name
"RTN","PXRMDCPY",82,0)
 .S:RDIEN DIR("B")=$$NAME(IENO,ORGNAME)
"RTN","PXRMDCPY",83,0)
 .D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDCPY",84,0)
 .I Y["""" D EN^DDIOL(" name cannot contain quotes!") Q
"RTN","PXRMDCPY",85,0)
 .I $E(Y,1,4)="PXRM" D EN^DDIOL(" name cannot begin with PXRM!") Q
"RTN","PXRMDCPY",86,0)
 .I '$$VNAME^PXRMINTR(Y,801.41) Q
"RTN","PXRMDCPY",87,0)
 .I $$UNIQNAME(Y,ROOT) S NAME=Y Q
"RTN","PXRMDCPY",88,0)
 .D EN^DDIOL(" is not a unique name!")
"RTN","PXRMDCPY",89,0)
 ;
"RTN","PXRMDCPY",90,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDCPY",91,0)
 ;
"RTN","PXRMDCPY",92,0)
 ;Store the unique name
"RTN","PXRMDCPY",93,0)
 S DR=".01///^S X=NAME",DIE=ROOT,DA=IENN
"RTN","PXRMDCPY",94,0)
 D ^DIE
"RTN","PXRMDCPY",95,0)
 ;
"RTN","PXRMDCPY",96,0)
 ;Change the class to local and delete the sponsor
"RTN","PXRMDCPY",97,0)
 D SCAS^PXRMCOPY(801.41,IENN,"L","")
"RTN","PXRMDCPY",98,0)
 ;Initialize the edit history
"RTN","PXRMDCPY",99,0)
 D INIEH^PXRMCOPY(801.41,ROOT,IENN,IENO)
"RTN","PXRMDCPY",100,0)
 ;Reindex the cross-references.
"RTN","PXRMDCPY",101,0)
 S DIK=ROOT,DA=IENN
"RTN","PXRMDCPY",102,0)
 D IX^DIK
"RTN","PXRMDCPY",103,0)
 ;
"RTN","PXRMDCPY",104,0)
 W !!,"Completed copy of '"_ORGNAME_"'"
"RTN","PXRMDCPY",105,0)
 W !,"into '"_NAME_"'",! H 2
"RTN","PXRMDCPY",106,0)
 ;
"RTN","PXRMDCPY",107,0)
 Q
"RTN","PXRMDCPY",108,0)
 ;
"RTN","PXRMDCPY",109,0)
 ;Delete the entry just added
"RTN","PXRMDCPY",110,0)
 ;--------------------------- 
"RTN","PXRMDCPY",111,0)
DELETE S DIK=ROOT,DA=IENN D ^DIK
"RTN","PXRMDCPY",112,0)
 W !!,"New entry not created due to invalid name!",!
"RTN","PXRMDCPY",113,0)
 Q
"RTN","PXRMDCPY",114,0)
 ;
"RTN","PXRMDCPY",115,0)
 ;Error Handler
"RTN","PXRMDCPY",116,0)
 ;-------------
"RTN","PXRMDCPY",117,0)
ERR(DESC) ;
"RTN","PXRMDCPY",118,0)
 N ERROR,IC,REF
"RTN","PXRMDCPY",119,0)
 S ERROR(1)="Unable to update GUI PROCESS file : "_DESC
"RTN","PXRMDCPY",120,0)
 S ERROR(2)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMDCPY",121,0)
 ;Move MSG into ERROR
"RTN","PXRMDCPY",122,0)
 S REF="MSG"
"RTN","PXRMDCPY",123,0)
 F IC=3:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMDCPY",124,0)
 ;Screen message
"RTN","PXRMDCPY",125,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMDCPY",126,0)
 Q
"RTN","PXRMDCPY",127,0)
 ;
"RTN","PXRMDCPY",128,0)
 ;Given ROOT return the first
"RTN","PXRMDCPY",129,0)
 ;---------------------------
"RTN","PXRMDCPY",130,0)
GETFOIEN(ROOT) ;Return the first open IEN in ROOT. This should be called
"RTN","PXRMDCPY",131,0)
 ;after a call to SETSTART.
"RTN","PXRMDCPY",132,0)
 N ENTRY,NIEN,OIEN
"RTN","PXRMDCPY",133,0)
 S ENTRY=ROOT_0_")"
"RTN","PXRMDCPY",134,0)
 S OIEN=$P(@ENTRY,U,3)
"RTN","PXRMDCPY",135,0)
 S ENTRY=ROOT_OIEN_")"
"RTN","PXRMDCPY",136,0)
 F  S NIEN=$O(@ENTRY) Q:+(NIEN-OIEN)>1  Q:+NIEN'>0  S OIEN=NIEN,ENTRY=ROOT_NIEN_")"
"RTN","PXRMDCPY",137,0)
 Q OIEN+1
"RTN","PXRMDCPY",138,0)
 ;
"RTN","PXRMDCPY",139,0)
 ;Use MERGE to copy ROOT(IENO into ROOT(IENN
"RTN","PXRMDCPY",140,0)
 ;------------------------------------------
"RTN","PXRMDCPY",141,0)
MERGE(IENN,IENO,ROOT) ;
"RTN","PXRMDCPY",142,0)
 N DEST,SOURCE
"RTN","PXRMDCPY",143,0)
 ;
"RTN","PXRMDCPY",144,0)
 S DEST=ROOT_IENN_")"
"RTN","PXRMDCPY",145,0)
 ;Lock the file before merging.
"RTN","PXRMDCPY",146,0)
 L +@DEST:10
"RTN","PXRMDCPY",147,0)
 E  W !,"Another user is editing this file, try later" H 2 S DUOUT=1 Q
"RTN","PXRMDCPY",148,0)
 S SOURCE=ROOT_IENO_")"
"RTN","PXRMDCPY",149,0)
 M @DEST=@SOURCE
"RTN","PXRMDCPY",150,0)
 ;Unlock the file
"RTN","PXRMDCPY",151,0)
 L -@DEST
"RTN","PXRMDCPY",152,0)
 Q
"RTN","PXRMDCPY",153,0)
 ;
"RTN","PXRMDCPY",154,0)
 ;Get default name
"RTN","PXRMDCPY",155,0)
 ;----------------
"RTN","PXRMDCPY",156,0)
NAME(IEN,ORG) ;
"RTN","PXRMDCPY",157,0)
 N CNT,NAME,PREV
"RTN","PXRMDCPY",158,0)
 ;
"RTN","PXRMDCPY",159,0)
 S PREV=0
"RTN","PXRMDCPY",160,0)
 I $E(ORG,$L(ORG))=")",ORG[" (" D
"RTN","PXRMDCPY",161,0)
 .S PREV=+$P(ORG," (",2) S:PREV>0 ORG=$P(ORG," (",1)
"RTN","PXRMDCPY",162,0)
 F CNT=PREV+1:1 S NAME=ORG_" ("_CNT_")" Q:'$D(^PXRMD(801.41,"B",NAME))
"RTN","PXRMDCPY",163,0)
 Q NAME
"RTN","PXRMDCPY",164,0)
 ;
"RTN","PXRMDCPY",165,0)
 ;Copy selected dialog element OR reminder dialog
"RTN","PXRMDCPY",166,0)
 ;-----------------------------------------------
"RTN","PXRMDCPY",167,0)
SEL(IENO,RDIEN) ;
"RTN","PXRMDCPY",168,0)
 W IORESET S VALMBCK="R"
"RTN","PXRMDCPY",169,0)
 N ANS,IENN,PROMPT,ROOT,TEXT,WHAT,DPOS
"RTN","PXRMDCPY",170,0)
 S WHAT="dialog element"
"RTN","PXRMDCPY",171,0)
 S ROOT="^PXRMD(801.41,"
"RTN","PXRMDCPY",172,0)
 S PROMPT="Select the dialog to copy: "
"RTN","PXRMDCPY",173,0)
 S TEXT=$P($G(^PXRMD(801.41,IENO,0)),U)
"RTN","PXRMDCPY",174,0)
 ;
"RTN","PXRMDCPY",175,0)
 I RDIEN S TEXT="Copy and replace '"_TEXT_"'  "
"RTN","PXRMDCPY",176,0)
 I 'RDIEN S TEXT="Copy reminder dialog '"_TEXT_"'  "
"RTN","PXRMDCPY",177,0)
 D ASK(.ANS,TEXT,2,"Y") Q:$D(DUOUT)!$D(DTOUT)  Q:ANS'="Y"
"RTN","PXRMDCPY",178,0)
 ;Copy
"RTN","PXRMDCPY",179,0)
 D COPY(IENO,.IENN,RDIEN) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDCPY",180,0)
 ;Replace dialog element in reminder dialog
"RTN","PXRMDCPY",181,0)
 I RDIEN D
"RTN","PXRMDCPY",182,0)
 .N DR,DA,DIE
"RTN","PXRMDCPY",183,0)
 .S DA=0
"RTN","PXRMDCPY",184,0)
 .F  S DA=$O(^PXRMD(801.41,RDIEN,10,"D",IENO,DA)) Q:DA=""  D
"RTN","PXRMDCPY",185,0)
 . . I $P($G(^PXRMD(801.41,RDIEN,10,DA,0)),U)=$G(DPOS) D
"RTN","PXRMDCPY",186,0)
 . . . S DA(1)=RDIEN
"RTN","PXRMDCPY",187,0)
 . . . S DR="2///"_IENN
"RTN","PXRMDCPY",188,0)
 . . . S DIE=ROOT_RDIEN_",10,"
"RTN","PXRMDCPY",189,0)
 . . . D ^DIE
"RTN","PXRMDCPY",190,0)
 .W !,"Replaced element'"_$P(@(ROOT_IENO_",0)"),U)_"'"
"RTN","PXRMDCPY",191,0)
 .W !,"with '"_$P(@(ROOT_IENN_",0)"),U)_"'"
"RTN","PXRMDCPY",192,0)
 .W !,"on this dialog.",!
"RTN","PXRMDCPY",193,0)
 ;
"RTN","PXRMDCPY",194,0)
 ;Quit screen for edit = yes
"RTN","PXRMDCPY",195,0)
 I 'RDIEN S VALMBCK="Q" Q
"RTN","PXRMDCPY",196,0)
 ;
"RTN","PXRMDCPY",197,0)
 N DIR
"RTN","PXRMDCPY",198,0)
 S DIR(0)="YAO"
"RTN","PXRMDCPY",199,0)
 S DIR("A")="Do you want to edit now  "
"RTN","PXRMDCPY",200,0)
 S DIR("B")="Y"
"RTN","PXRMDCPY",201,0)
 D ^DIR
"RTN","PXRMDCPY",202,0)
 I $D(DIRUT) S DUOUT=1 Q
"RTN","PXRMDCPY",203,0)
 I $E(Y(0))'="Y" S DUOUT=1 Q
"RTN","PXRMDCPY",204,0)
 W !
"RTN","PXRMDCPY",205,0)
 ;Reset dialog element ien
"RTN","PXRMDCPY",206,0)
 S IENO=IENN
"RTN","PXRMDCPY",207,0)
 Q
"RTN","PXRMDCPY",208,0)
 ;
"RTN","PXRMDCPY",209,0)
 ;Return TRUE (1) if NAME is unique 
"RTN","PXRMDCPY",210,0)
 ;---------------------------------
"RTN","PXRMDCPY",211,0)
UNIQNAME(NAME,ROOT) ;
"RTN","PXRMDCPY",212,0)
 N RETVAL,REF
"RTN","PXRMDCPY",213,0)
 S RETVAL=1,REF=ROOT_"""B"""_","_""""_NAME_""""_")"
"RTN","PXRMDCPY",214,0)
 I $D(@REF) S RETVAL=0
"RTN","PXRMDCPY",215,0)
 Q RETVAL
"RTN","PXRMDEDI")
0^8^B22823576
"RTN","PXRMDEDI",1,0)
PXRMDEDI ; SLC/PJH - Edit PXRM reminder dialog. ;05/31/2006
"RTN","PXRMDEDI",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDEDI",3,0)
 ;
"RTN","PXRMDEDI",4,0)
 ;Used by protocol PXRM DIALOG SELECTION ITEM
"RTN","PXRMDEDI",5,0)
 ;
"RTN","PXRMDEDI",6,0)
ASK(PIEN,SEQ) ;Ask if OK to delete
"RTN","PXRMDEDI",7,0)
 N DDATA,DIR,DTYP,NAME,TYP,X,Y
"RTN","PXRMDEDI",8,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDI",9,0)
 S DDATA=$G(^PXRMD(801.41,PIEN,0))
"RTN","PXRMDEDI",10,0)
 S NAME=$P(DDATA,U),TYP=$P(DDATA,U,4)
"RTN","PXRMDEDI",11,0)
 S DIR(0)="YA0"
"RTN","PXRMDEDI",12,0)
 S DIR("A")="Delete sequence "_SEQ_" from "
"RTN","PXRMDEDI",13,0)
 I TYP="G" S DIR("A")=DIR("A")_"group "_NAME_": "
"RTN","PXRMDEDI",14,0)
 E  S DIR("A")=DIR("A")_"reminder dialog "_NAME_": "
"RTN","PXRMDEDI",15,0)
 S DIR("B")="N"
"RTN","PXRMDEDI",16,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDEDI",17,0)
 S DIR("??")=U_"D XHLP^PXRMDLG(1)"
"RTN","PXRMDEDI",18,0)
 D ^DIR K DIR
"RTN","PXRMDEDI",19,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDI",20,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDI",21,0)
 I $E(Y(0))="N" S DUOUT=1
"RTN","PXRMDEDI",22,0)
 S VALMBCK="R"
"RTN","PXRMDEDI",23,0)
 Q
"RTN","PXRMDEDI",24,0)
 ;
"RTN","PXRMDEDI",25,0)
DEL(SEQ,PXRMDIEN) ;Delete individual element from dialog or group
"RTN","PXRMDEDI",26,0)
 N DA,DIK
"RTN","PXRMDEDI",27,0)
 S DIEN=0
"RTN","PXRMDEDI",28,0)
 F  S DIEN=$O(^PXRMD(801.41,PXRMDIEN,10,DIEN)) Q:'DIEN  D
"RTN","PXRMDEDI",29,0)
 .I $P($G(^PXRMD(801.41,PXRMDIEN,10,DIEN,0)),U)=SEQ D
"RTN","PXRMDEDI",30,0)
 ..S DA(1)=PXRMDIEN,DA=DIEN W !,"DA: "_DA Q:'DA
"RTN","PXRMDEDI",31,0)
 ..S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMDEDI",32,0)
 ..D ^DIK
"RTN","PXRMDEDI",33,0)
 S VALMBG=1
"RTN","PXRMDEDI",34,0)
 Q
"RTN","PXRMDEDI",35,0)
 ;
"RTN","PXRMDEDI",36,0)
IND(DIEN,SEL) ;Edit individual element
"RTN","PXRMDEDI",37,0)
 W IORESET
"RTN","PXRMDEDI",38,0)
 N DIC,DIDEL,DR,DTOUT,DTYP,DUOUT,DINUSE,HED,LFIND,LOCK,NATIONAL,OIEN,PLOCK,Y
"RTN","PXRMDEDI",39,0)
 ;
"RTN","PXRMDEDI",40,0)
 S OIEN=0
"RTN","PXRMDEDI",41,0)
 ;Check for Uneditable flag
"RTN","PXRMDEDI",42,0)
 S LOCK=$P($G(^PXRMD(801.41,DIEN,100)),U,4)
"RTN","PXRMDEDI",43,0)
 S LFIND=$P($G(^PXRMD(801.41,DIEN,1)),U,5)
"RTN","PXRMDEDI",44,0)
 I LOCK=1,$G(LFIND)'="",$G(LFIND)'["ORD",'$G(PXRMINST) D  Q
"RTN","PXRMDEDI",45,0)
 .W !,"This item can not be edited" H 2
"RTN","PXRMDEDI",46,0)
 ;
"RTN","PXRMDEDI",47,0)
 S NATIONAL=0
"RTN","PXRMDEDI",48,0)
 ;Limited edit of National dialogs
"RTN","PXRMDEDI",49,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,100)),U)="N" D
"RTN","PXRMDEDI",50,0)
 .I $G(PXRMINST)=1,DUZ(0)="@" Q
"RTN","PXRMDEDI",51,0)
 .S NATIONAL=1
"RTN","PXRMDEDI",52,0)
 .S PLOCK=$P($G(^PXRMD(801.41,PXRMDIEN,100)),U,4)
"RTN","PXRMDEDI",53,0)
 ;
"RTN","PXRMDEDI",54,0)
 N ANS,DATA,PIEN,SEQ
"RTN","PXRMDEDI",55,0)
 ;Get group or reminder dialog ien for this component
"RTN","PXRMDEDI",56,0)
 S DATA=$G(^TMP("PXRMDLG4",$J,"IEN",SEL))
"RTN","PXRMDEDI",57,0)
 S PIEN=$P(DATA,U),SEQ=$P(DATA,U,2)
"RTN","PXRMDEDI",58,0)
 ;National dialogs can only be edited
"RTN","PXRMDEDI",59,0)
 I NATIONAL S ANS="E"
"RTN","PXRMDEDI",60,0)
 ;In Group edit the group can only be edited
"RTN","PXRMDEDI",61,0)
 I DIEN=PXRMDIEN S ANS="E"
"RTN","PXRMDEDI",62,0)
 ;Ask what to do with local dialogs
"RTN","PXRMDEDI",63,0)
 S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4) Q:DTYP=""
"RTN","PXRMDEDI",64,0)
 I (('NATIONAL)&(DIEN'=PXRMDIEN))!((NATIONAL)&($G(PLOCK)=1)&(DIEN'=PXRMDIEN)&($G(LOCK)'=1)) D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDEDI",65,0)
 .D PROMPT(.ANS,DIEN) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDEDI",66,0)
 .;Display usage
"RTN","PXRMDEDI",67,0)
 .I "DC"[ANS D
"RTN","PXRMDEDI",68,0)
 ..W !,"Dialog Name: "_$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDEDI",69,0)
 .; Verify delete
"RTN","PXRMDEDI",70,0)
 .I ANS="D" D ASK(PIEN,SEQ)
"RTN","PXRMDEDI",71,0)
 ;Ask what to do with National Dialogs that have a lock on them
"RTN","PXRMDEDI",72,0)
 ;I NATIONAL,DIEN'=PXRMDIEN,$P($G(^PXRMD(801.41,DIEN,100)),U,4)=1 D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDEDI",73,0)
 I NATIONAL,DIEN'=PXRMDIEN,LOCK=1,DTYP="G" D  Q
"RTN","PXRMDEDI",74,0)
 .W !,"Cannot modify lock group from a higher level view. Please modify"
"RTN","PXRMDEDI",75,0)
 .W !,"this group from the group editor screen." H 2
"RTN","PXRMDEDI",76,0)
 ;
"RTN","PXRMDEDI",77,0)
 ;Delete line
"RTN","PXRMDEDI",78,0)
 I ANS="D" D DEL(SEQ,PIEN) Q
"RTN","PXRMDEDI",79,0)
 ;Copy and Replace option
"RTN","PXRMDEDI",80,0)
 I ANS="C" D SEL^PXRMDCPY(.DIEN,PIEN) Q:$D(DTOUT)!$D(DUOUT) 
"RTN","PXRMDEDI",81,0)
 ;Determine if a taxonomy dialog
"RTN","PXRMDEDI",82,0)
 N FIND
"RTN","PXRMDEDI",83,0)
 I ANS="R" S OIEN=DIEN,(IEN,DIEN)=$P($G(^PXRMD(801.41,DIEN,49)),U,3)
"RTN","PXRMDEDI",84,0)
 S FIND=$P($G(^PXRMD(801.41,IEN,1)),U,5),VALMBCK="R"
"RTN","PXRMDEDI",85,0)
 ;Edit taxomomy dialog
"RTN","PXRMDEDI",86,0)
 I $P(FIND,";",2)="PXD(811.2," D EDIT^PXRMGEDT("DTAX",$P(FIND,";"),0) Q
"RTN","PXRMDEDI",87,0)
 ;Option to change an element to a group
"RTN","PXRMDEDI",88,0)
 I DTYP="E",'NATIONAL D NTYP^PXRMDEDT(.DTYP) Q:$D(DUOUT)!$D(DTOUT)  D:DTYP="G"
"RTN","PXRMDEDI",89,0)
 .S $P(^PXRMD(801.41,DIEN,0),U,4)=DTYP
"RTN","PXRMDEDI",90,0)
 .W !,"Dialog element changed to a dialog group"
"RTN","PXRMDEDI",91,0)
 ;Edit Element
"RTN","PXRMDEDI",92,0)
 D EDIT^PXRMDEDT(DTYP,DIEN,OIEN)
"RTN","PXRMDEDI",93,0)
 Q
"RTN","PXRMDEDI",94,0)
 ;
"RTN","PXRMDEDI",95,0)
PROMPT(ANS,DIEN) ;Select Dialog Element Action
"RTN","PXRMDEDI",96,0)
 N NAME,X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDI",97,0)
 S DIR(0)="S"_U_"E:Edit;"
"RTN","PXRMDEDI",98,0)
 S DIR(0)=DIR(0)_"C:Copy and Replace current element;"
"RTN","PXRMDEDI",99,0)
 S DIR(0)=DIR(0)_"D:Delete element from this dialog;"
"RTN","PXRMDEDI",100,0)
 I $P($G(^PXRMD(801.41,DIEN,49)),U,3)>0 D
"RTN","PXRMDEDI",101,0)
 .S NAME=$P($G(^PXRMD(801.41,$P($G(^PXRMD(801.41,DIEN,49)),U,3),0)),U)
"RTN","PXRMDEDI",102,0)
 .S DIR(0)=DIR(0)_"R:Edit Replacement Element/Group "_NAME_";"
"RTN","PXRMDEDI",103,0)
 S DIR("A")="Select Dialog Element Action"
"RTN","PXRMDEDI",104,0)
 S DIR("B")="E"
"RTN","PXRMDEDI",105,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDI",106,0)
 S DIR("??")=U_"D HELP^PXRMDEDI(1)"
"RTN","PXRMDEDI",107,0)
 D ^DIR K DIR
"RTN","PXRMDEDI",108,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDI",109,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDI",110,0)
 S ANS=Y
"RTN","PXRMDEDI",111,0)
 Q
"RTN","PXRMDEDI",112,0)
 ;
"RTN","PXRMDEDI",113,0)
HELP(CALL) ;General help text routine
"RTN","PXRMDEDI",114,0)
 N HTEXT
"RTN","PXRMDEDI",115,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDEDI",116,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMDEDI",117,0)
 ;
"RTN","PXRMDEDI",118,0)
 I CALL=1 D
"RTN","PXRMDEDI",119,0)
 .S HTEXT(1)="Select E to edit dialog element. If you wish to create"
"RTN","PXRMDEDI",120,0)
 .S HTEXT(2)="a new dialog element just for this reminder dialog select"
"RTN","PXRMDEDI",121,0)
 .S HTEXT(3)="C to copy and replace the current element. Select D to"
"RTN","PXRMDEDI",122,0)
 .S HTEXT(4)="delete the sequence number/element from the dialog."
"RTN","PXRMDEDI",123,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDI",124,0)
 S IC=""
"RTN","PXRMDEDI",125,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDEDI",126,0)
 . S X=HTEXT(IC)
"RTN","PXRMDEDI",127,0)
 . D ^DIWP
"RTN","PXRMDEDI",128,0)
 W !
"RTN","PXRMDEDI",129,0)
 S IC=0
"RTN","PXRMDEDI",130,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDEDI",131,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDEDI",132,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDI",133,0)
 W !
"RTN","PXRMDEDI",134,0)
 Q
"RTN","PXRMDEDT")
0^162^B83786039
"RTN","PXRMDEDT",1,0)
PXRMDEDT ; SLC/PJH - Edit PXRM reminder dialog. ;07/28/2006
"RTN","PXRMDEDT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDEDT",3,0)
 ;
"RTN","PXRMDEDT",4,0)
 ;Used by protocol PXRM SELECTION ADD/PXRM GENERAL ADD
"RTN","PXRMDEDT",5,0)
 ;
"RTN","PXRMDEDT",6,0)
 ;Add Dialog
"RTN","PXRMDEDT",7,0)
 ;----------
"RTN","PXRMDEDT",8,0)
ADD N DA,DIC,Y,DTOUT,DUOUT,DTYP,DLAYGO,HED
"RTN","PXRMDEDT",9,0)
 S HED="ADD DIALOG"
"RTN","PXRMDEDT",10,0)
 W IORESET
"RTN","PXRMDEDT",11,0)
 F  D  Q:$D(DTOUT)
"RTN","PXRMDEDT",12,0)
 .S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",13,0)
 .;Set the starting place for additions.
"RTN","PXRMDEDT",14,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMDEDT",15,0)
 .S DIC(0)="AELMQ",DLAYGO=801.41
"RTN","PXRMDEDT",16,0)
 .S DIC("A")="Select DIALOG to add: "
"RTN","PXRMDEDT",17,0)
 .S DIC("DR")="4///"_$G(PXRMDTYP)
"RTN","PXRMDEDT",18,0)
 .D ^DIC
"RTN","PXRMDEDT",19,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",20,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",21,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",22,0)
 .I $P(Y,U,3)'=1 W !,"This dialog name already exists" Q
"RTN","PXRMDEDT",23,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMDEDT",24,0)
 .;Determine dialog type
"RTN","PXRMDEDT",25,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",26,0)
 .;Enter dialog type if a new entry
"RTN","PXRMDEDT",27,0)
 .I DTYP="" D  Q:$D(Y)
"RTN","PXRMDEDT",28,0)
 ..N DIE,DR
"RTN","PXRMDEDT",29,0)
 ..S DIE=801.41,DR=4
"RTN","PXRMDEDT",30,0)
 ..D ^DIE
"RTN","PXRMDEDT",31,0)
 .;
"RTN","PXRMDEDT",32,0)
 .;Edit Dialog
"RTN","PXRMDEDT",33,0)
 .D EDIT(DTYP,DA,0)
"RTN","PXRMDEDT",34,0)
 Q
"RTN","PXRMDEDT",35,0)
 ;
"RTN","PXRMDEDT",36,0)
 ;called by protocol PXRM DIALOG EDIT
"RTN","PXRMDEDT",37,0)
 ;-----------------------------------
"RTN","PXRMDEDT",38,0)
EDIT(TYP,DA,OIEN) ;
"RTN","PXRMDEDT",39,0)
 Q:'$$LOCK(DA)
"RTN","PXRMDEDT",40,0)
 W IORESET
"RTN","PXRMDEDT",41,0)
 N CS1,CS2,D1,DIC,DIDEL,DIE,DR,DTOUT,DUOUT,DINUSE,TYP,ODA,Y
"RTN","PXRMDEDT",42,0)
 ;Save checksum
"RTN","PXRMDEDT",43,0)
 S VALMBCK=""
"RTN","PXRMDEDT",44,0)
 S CS1=$$FILE^PXRMEXCS(801.41,DA)
"RTN","PXRMDEDT",45,0)
 ;
"RTN","PXRMDEDT",46,0)
 ;Check dialog type
"RTN","PXRMDEDT",47,0)
 S TYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",48,0)
 S DIE="^PXRMD(801.41,",DIDEL=801.41,DINUSE=0,ODA=DA
"RTN","PXRMDEDT",49,0)
 ;Reminder Dialog
"RTN","PXRMDEDT",50,0)
 I TYP="R" S DR="[PXRM EDIT REMINDER DIALOG]"
"RTN","PXRMDEDT",51,0)
 ;Dialog Element
"RTN","PXRMDEDT",52,0)
 I TYP="E" S DR="[PXRM EDIT ELEMENT]"
"RTN","PXRMDEDT",53,0)
 ;Additional Prompt
"RTN","PXRMDEDT",54,0)
 ;I TYP="P" S DR="[PXRM EDIT PROMPT]"
"RTN","PXRMDEDT",55,0)
 ;Forced Value
"RTN","PXRMDEDT",56,0)
 I TYP="F" S DR="[PXRM EDIT FORCED VALUE]"
"RTN","PXRMDEDT",57,0)
 ;Dialog Group (Finding item dialog)
"RTN","PXRMDEDT",58,0)
 I TYP="G" S DR="[PXRM EDIT GROUP]" ;S VALMBCK="R"
"RTN","PXRMDEDT",59,0)
 ;Result Group
"RTN","PXRMDEDT",60,0)
 I TYP="S" S DR="[PXRM RESULT GROUP]"
"RTN","PXRMDEDT",61,0)
 ;Result Element
"RTN","PXRMDEDT",62,0)
 I TYP="T" S DR="[PXRM RESULT ELEMENT]"
"RTN","PXRMDEDT",63,0)
 ;Allows limited edit of national dialogs
"RTN","PXRMDEDT",64,0)
 I $P($G(^PXRMD(801.41,DA,100)),U)="N" D
"RTN","PXRMDEDT",65,0)
 .I $G(PXRMINST)=1,DUZ(0)="@" Q
"RTN","PXRMDEDT",66,0)
 .S DR="[PXRM EDIT NATIONAL DIALOG]",DINUSE=1
"RTN","PXRMDEDT",67,0)
 ;
"RTN","PXRMDEDT",68,0)
 I "GEPF"[TYP D
"RTN","PXRMDEDT",69,0)
 .I '$D(^PXRMD(801.41,"AD",DA)) W !,"Not used by any other dialog",! Q
"RTN","PXRMDEDT",70,0)
 .I PXRMGTYP'="DLG" S DINUSE=1 Q
"RTN","PXRMDEDT",71,0)
 .I PXRMGTYP="DLG" D  Q
"RTN","PXRMDEDT",72,0)
 ..N SUB
"RTN","PXRMDEDT",73,0)
 ..S SUB=0
"RTN","PXRMDEDT",74,0)
 ..F  S SUB=$O(^PXRMD(801.41,"AD",DA,SUB)) Q:'SUB  Q:DINUSE  D
"RTN","PXRMDEDT",75,0)
 ...I SUB'=PXRMDIEN S DINUSE=1
"RTN","PXRMDEDT",76,0)
 I DINUSE D
"RTN","PXRMDEDT",77,0)
 .W !,"Current dialog element/group name: "_$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",78,0)
 .I TYP="S" Q
"RTN","PXRMDEDT",79,0)
 .I PXRMGTYP="DLGE" D
"RTN","PXRMDEDT",80,0)
 ..W !,"Used by:" D USE^PXRMDLST(DA,10,"")
"RTN","PXRMDEDT",81,0)
 ..I $D(^PXRMD(801.41,"R",DA))'>0 Q
"RTN","PXRMDEDT",82,0)
 ..W !,"Used as a Replacement Element/Group for: " D REPLACE^PXRMDLST(DA,10,"")
"RTN","PXRMDEDT",83,0)
 .I PXRMGTYP'="DLGE" D
"RTN","PXRMDEDT",84,0)
 ..W !,"Used by:" D USE^PXRMDLST(DA,10,PXRMDIEN)
"RTN","PXRMDEDT",85,0)
 ..I $D(^PXRMD(801.41,"R",DA))'>0 Q
"RTN","PXRMDEDT",86,0)
 ..W !,"Used as a Replacement Element/Group for: " D REPLACE^PXRMDLST(DA,10,PXRMDIEN)
"RTN","PXRMDEDT",87,0)
 ;
"RTN","PXRMDEDT",88,0)
 ;Save list of components
"RTN","PXRMDEDT",89,0)
 N COMP D COMP^PXRMDEDX(DA,.COMP)
"RTN","PXRMDEDT",90,0)
 ;Edit dialog then unlock
"RTN","PXRMDEDT",91,0)
 I TYP'="P" D ^DIE D UNLOCK(ODA) I $G(DA)="",$G(OIEN)>0 D
"RTN","PXRMDEDT",92,0)
 .S DA=OIEN,DR="118////@" D ^DIE K DA
"RTN","PXRMDEDT",93,0)
 I TYP="P" D PROMPT(DA) D UNLOCK(ODA)
"RTN","PXRMDEDT",94,0)
 I '$D(DUOUT)&($G(D1)'="") D  Q
"RTN","PXRMDEDT",95,0)
 . I $P($G(^PXRMD(801.41,DA,10,D1,0)),U,2)="" D  Q
"RTN","PXRMDEDT",96,0)
 . . S DA(1)=DA,DA=D1 Q:'DA
"RTN","PXRMDEDT",97,0)
 . . S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMDEDT",98,0)
 . . D ^DIK
"RTN","PXRMDEDT",99,0)
 . . S VALMBG=1
"RTN","PXRMDEDT",100,0)
 I '$D(DA) D  Q
"RTN","PXRMDEDT",101,0)
 .;Clear any pointers from #811.9
"RTN","PXRMDEDT",102,0)
 .I $D(PXRMDIEN) D PURGE(PXRMDIEN)
"RTN","PXRMDEDT",103,0)
 .;Option to delete components
"RTN","PXRMDEDT",104,0)
 .I $D(COMP) D DELETE^PXRMDEDX(.COMP)
"RTN","PXRMDEDT",105,0)
 .S VALMBCK="R"
"RTN","PXRMDEDT",106,0)
 ;
"RTN","PXRMDEDT",107,0)
 ;Update edit history
"RTN","PXRMDEDT",108,0)
 I (TYP'="R") D
"RTN","PXRMDEDT",109,0)
 .S CS2=$$FILE^PXRMEXCS(801.41,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMDEDT",110,0)
 .S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",111,0)
 .D SEHIST^PXRMUTIL(801.41,DIC,DA)
"RTN","PXRMDEDT",112,0)
 ;
"RTN","PXRMDEDT",113,0)
 ;Redisplay changes (reminder dialog option only)
"RTN","PXRMDEDT",114,0)
 I PXRMGTYP="DLG",TYP="R" D
"RTN","PXRMDEDT",115,0)
 .;Get name of reminder dialog again
"RTN","PXRMDEDT",116,0)
 .S Y=$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",117,0)
 .;Format headings to include dialog name
"RTN","PXRMDEDT",118,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_$P(Y,U)
"RTN","PXRMDEDT",119,0)
 .;Check if the set is disable and add to header if disabled
"RTN","PXRMDEDT",120,0)
 .I $P(^PXRMD(801.41,DA,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDEDT",121,0)
 .;Reset header in case name has changed
"RTN","PXRMDEDT",122,0)
 .S VALMHDR(1)=PXRMHD
"RTN","PXRMDEDT",123,0)
 Q
"RTN","PXRMDEDT",124,0)
 ;
"RTN","PXRMDEDT",125,0)
 ;Add SINGLE dialog element (protocol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",126,0)
 ;-------------------------
"RTN","PXRMDEDT",127,0)
ESEL(PXRMDIEN,SEL) ;
"RTN","PXRMDEDT",128,0)
 N DA,DIC,DLAYGO,DNEW,DTOUT,DUOUT,DTYP,Y
"RTN","PXRMDEDT",129,0)
 ;
"RTN","PXRMDEDT",130,0)
 S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",131,0)
 S DLAYGO="801.41"
"RTN","PXRMDEDT",132,0)
 ;Set the starting place for additions.
"RTN","PXRMDEDT",133,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMDEDT",134,0)
 S DIC(0)="AEMQL"
"RTN","PXRMDEDT",135,0)
 S DIC("A")="Select new DIALOG ELEMENT: "
"RTN","PXRMDEDT",136,0)
 S DIC("S")="I ""EG""[$P(^PXRMD(801.41,Y,0),U,4)"
"RTN","PXRMDEDT",137,0)
 S DIC("DR")="4///E"
"RTN","PXRMDEDT",138,0)
 W !
"RTN","PXRMDEDT",139,0)
 D ^DIC
"RTN","PXRMDEDT",140,0)
 I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",141,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",142,0)
 I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",143,0)
 S DA=$P(Y,U,1) Q:'DA
"RTN","PXRMDEDT",144,0)
 S DNEW=$P(Y,U,3)
"RTN","PXRMDEDT",145,0)
 ;Group points to itself
"RTN","PXRMDEDT",146,0)
 I 'DNEW,$$VGROUP(DA,PXRMDIEN) Q
"RTN","PXRMDEDT",147,0)
 ;Add to dialog
"RTN","PXRMDEDT",148,0)
 D EADD(SEL,DA,PXRMDIEN)
"RTN","PXRMDEDT",149,0)
 ;Determine dialog type
"RTN","PXRMDEDT",150,0)
 S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",151,0)
 ;
"RTN","PXRMDEDT",152,0)
 ;Edit Dialog
"RTN","PXRMDEDT",153,0)
 I DNEW D EDIT(DTYP,DA)
"RTN","PXRMDEDT",154,0)
 Q
"RTN","PXRMDEDT",155,0)
 ;
"RTN","PXRMDEDT",156,0)
 ;Update dialog component multiple
"RTN","PXRMDEDT",157,0)
 ;--------------------------------
"RTN","PXRMDEDT",158,0)
EADD(SEL,NSUB,PXRMDIEN) ;
"RTN","PXRMDEDT",159,0)
 N DA,DATA,NEXT
"RTN","PXRMDEDT",160,0)
 S DATA=$G(^PXRMD(801.41,PXRMDIEN,10,0)),NEXT=$P(DATA,U,3)+1
"RTN","PXRMDEDT",161,0)
 I DATA="" S DATA="^801.412IA"
"RTN","PXRMDEDT",162,0)
 S DA=NSUB,DA(1)=PXRMDIEN
"RTN","PXRMDEDT",163,0)
 S ^PXRMD(801.41,PXRMDIEN,10,NEXT,0)=SEL_U_DA_"^^^^^^^"
"RTN","PXRMDEDT",164,0)
 ;Update next slot
"RTN","PXRMDEDT",165,0)
 S $P(DATA,U,4)=$P(DATA,U,4)+1,$P(DATA,U,3)=NEXT
"RTN","PXRMDEDT",166,0)
 S ^PXRMD(801.41,PXRMDIEN,10,0)=DATA
"RTN","PXRMDEDT",167,0)
 ;Re-index
"RTN","PXRMDEDT",168,0)
 N DIK,DA S DIK="^PXRMD(801.41,",DA=PXRMDIEN
"RTN","PXRMDEDT",169,0)
 D IX^DIK
"RTN","PXRMDEDT",170,0)
 Q
"RTN","PXRMDEDT",171,0)
 ;
"RTN","PXRMDEDT",172,0)
 ;Change Dialog Element Type
"RTN","PXRMDEDT",173,0)
 ;--------------------------
"RTN","PXRMDEDT",174,0)
NTYP(TYP) ;
"RTN","PXRMDEDT",175,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",176,0)
 S DIR(0)="SA"_U_"E:Element;"
"RTN","PXRMDEDT",177,0)
 S DIR(0)=DIR(0)_"G:Group;"
"RTN","PXRMDEDT",178,0)
 S DIR("A")="Dialog Element Type: "
"RTN","PXRMDEDT",179,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",180,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",181,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(3)"
"RTN","PXRMDEDT",182,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",183,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",184,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",185,0)
 S TYP=Y
"RTN","PXRMDEDT",186,0)
 Q
"RTN","PXRMDEDT",187,0)
 ;
"RTN","PXRMDEDT",188,0)
 ;Clear pointers from the reminder file and process ID file
"RTN","PXRMDEDT",189,0)
 ;---------------------------------------------------------
"RTN","PXRMDEDT",190,0)
PURGE(DIEN) ;
"RTN","PXRMDEDT",191,0)
 ;Purge pointers to this dialog from reminder file
"RTN","PXRMDEDT",192,0)
 N RIEN
"RTN","PXRMDEDT",193,0)
 S RIEN=0
"RTN","PXRMDEDT",194,0)
 F  S RIEN=$O(^PXD(811.9,"AG",DIEN,RIEN)) Q:'RIEN  D
"RTN","PXRMDEDT",195,0)
 .K ^PXD(811.9,RIEN,51),^PXD(811.9,"AG",DIEN,RIEN)
"RTN","PXRMDEDT",196,0)
 ;
"RTN","PXRMDEDT",197,0)
 Q
"RTN","PXRMDEDT",198,0)
 ;
"RTN","PXRMDEDT",199,0)
VGROUP(DA,IEN) ;Check dialog index to see if group will point to itself 
"RTN","PXRMDEDT",200,0)
 N FOUND
"RTN","PXRMDEDT",201,0)
 S FOUND=0
"RTN","PXRMDEDT",202,0)
 ;
"RTN","PXRMDEDT",203,0)
 ;Only do check if dialog is a group
"RTN","PXRMDEDT",204,0)
 I $P($G(^PXRMD(801.41,DA,0)),U,4)'="G" Q FOUND
"RTN","PXRMDEDT",205,0)
 ;
"RTN","PXRMDEDT",206,0)
 ;Group cannot be added to itself
"RTN","PXRMDEDT",207,0)
 I DA=IEN D  Q FOUND
"RTN","PXRMDEDT",208,0)
 .S FOUND=1
"RTN","PXRMDEDT",209,0)
 .W !,"A group cannot be added to itself" H 2
"RTN","PXRMDEDT",210,0)
 ;
"RTN","PXRMDEDT",211,0)
 ;IEN is the dialog group being added to 
"RTN","PXRMDEDT",212,0)
 D VGROUP1(DA,IEN)
"RTN","PXRMDEDT",213,0)
 Q FOUND
"RTN","PXRMDEDT",214,0)
 ;
"RTN","PXRMDEDT",215,0)
VGROUP1(DA,DIEN) ;Examine all parent dialogs
"RTN","PXRMDEDT",216,0)
 ;
"RTN","PXRMDEDT",217,0)
 ;End search if already found
"RTN","PXRMDEDT",218,0)
 Q:FOUND
"RTN","PXRMDEDT",219,0)
 ;
"RTN","PXRMDEDT",220,0)
 ;Check if dialog being added is a parent at this level
"RTN","PXRMDEDT",221,0)
 I $D(^PXRMD(801.41,"AD",DIEN,DA)) D  Q
"RTN","PXRMDEDT",222,0)
 .S FOUND=1
"RTN","PXRMDEDT",223,0)
 .W !,"A group cannot be added as it's own descendant" H 2
"RTN","PXRMDEDT",224,0)
 ;
"RTN","PXRMDEDT",225,0)
 ;If not look at other parents
"RTN","PXRMDEDT",226,0)
 N SUB
"RTN","PXRMDEDT",227,0)
 S SUB=0
"RTN","PXRMDEDT",228,0)
 F  S SUB=$O(^PXRMD(801.41,"AD",DIEN,SUB)) Q:'SUB  D  Q:FOUND
"RTN","PXRMDEDT",229,0)
 .;Ignore reminder dialogs
"RTN","PXRMDEDT",230,0)
 .I $P($G(^PXRMD(801.41,SUB,0)),U,4)'="G" Q
"RTN","PXRMDEDT",231,0)
 .;Repeat check on other parents
"RTN","PXRMDEDT",232,0)
 .D VGROUP1(DA,SUB)
"RTN","PXRMDEDT",233,0)
 Q
"RTN","PXRMDEDT",234,0)
 ;
"RTN","PXRMDEDT",235,0)
HELP(CALL) ;General help text routine
"RTN","PXRMDEDT",236,0)
 N HTEXT
"RTN","PXRMDEDT",237,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDEDT",238,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMDEDT",239,0)
 ;
"RTN","PXRMDEDT",240,0)
 I CALL=1 D
"RTN","PXRMDEDT",241,0)
 .S HTEXT(1)="Select E to edit dialog element. If you wish to create"
"RTN","PXRMDEDT",242,0)
 .S HTEXT(2)="a new dialog element just for this reminder dialog select"
"RTN","PXRMDEDT",243,0)
 .S HTEXT(3)="C to copy and replace the current element. Select D to"
"RTN","PXRMDEDT",244,0)
 .S HTEXT(4)="delete the sequence number/element from the dialog."
"RTN","PXRMDEDT",245,0)
 I CALL=2 D
"RTN","PXRMDEDT",246,0)
 .S HTEXT(1)="Enter Y to copy the current dialog element to a new name"
"RTN","PXRMDEDT",247,0)
 .S HTEXT(2)="and then use this new element in the reminder dialog."
"RTN","PXRMDEDT",248,0)
 I CALL=3 D
"RTN","PXRMDEDT",249,0)
 .S HTEXT(1)="Enter G to change the current dialog element into a dialog"
"RTN","PXRMDEDT",250,0)
 .S HTEXT(2)="group so that additional elements can be added. Enter E to"
"RTN","PXRMDEDT",251,0)
 .S HTEXT(3)="leave the type of the dialog element unchanged."
"RTN","PXRMDEDT",252,0)
 I CALL=4 D
"RTN","PXRMDEDT",253,0)
 .S HTEXT(1)="Enter Y to change the dialog prompt created into a forced"
"RTN","PXRMDEDT",254,0)
 .S HTEXT(2)="value. To edit the new forced value switch to the forced"
"RTN","PXRMDEDT",255,0)
 .S HTEXT(3)="value screen using CV. This option only applies to prompts"
"RTN","PXRMDEDT",256,0)
 .S HTEXT(4)="which update PCE or vitals."
"RTN","PXRMDEDT",257,0)
 .S HTEXT(5)="Enter N to leave the dialog prompt unchanged."
"RTN","PXRMDEDT",258,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",259,0)
 S IC=""
"RTN","PXRMDEDT",260,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDEDT",261,0)
 . S X=HTEXT(IC)
"RTN","PXRMDEDT",262,0)
 . D ^DIWP
"RTN","PXRMDEDT",263,0)
 W !
"RTN","PXRMDEDT",264,0)
 S IC=0
"RTN","PXRMDEDT",265,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDEDT",266,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDEDT",267,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",268,0)
 W !
"RTN","PXRMDEDT",269,0)
 Q
"RTN","PXRMDEDT",270,0)
 ;
"RTN","PXRMDEDT",271,0)
LOCK(DA) ;Lock the record
"RTN","PXRMDEDT",272,0)
 N OK
"RTN","PXRMDEDT",273,0)
 S OK=1
"RTN","PXRMDEDT",274,0)
 I '$$VEDIT^PXRMUTIL("^PXRMD(801.41,",DA) D
"RTN","PXRMDEDT",275,0)
 .N DTYP
"RTN","PXRMDEDT",276,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",277,0)
 .;Allow edit of findings but not component multiple on groups 
"RTN","PXRMDEDT",278,0)
 .I DTYP="G",$G(PXRMDIEN),DA'=PXRMDIEN Q
"RTN","PXRMDEDT",279,0)
 .I DTYP="G",$G(PXRMGTYP)="DLGE" Q
"RTN","PXRMDEDT",280,0)
 .;Allow edit of element findings
"RTN","PXRMDEDT",281,0)
 .I DTYP="E" Q
"RTN","PXRMDEDT",282,0)
 .S OK=0
"RTN","PXRMDEDT",283,0)
 .W !!,?5,"VA- and national class reminder dialogs may not be edited" H 2
"RTN","PXRMDEDT",284,0)
 I 'OK Q 0
"RTN","PXRMDEDT",285,0)
 ;
"RTN","PXRMDEDT",286,0)
 L +^PXRMD(801.41,DA):0 I  Q 1
"RTN","PXRMDEDT",287,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMDEDT",288,0)
 ;
"RTN","PXRMDEDT",289,0)
PROMPT(IEN) ;
"RTN","PXRMDEDT",290,0)
 N DIE,DR
"RTN","PXRMDEDT",291,0)
 S DIE="^PXRMD(801.41,",DA=IEN
"RTN","PXRMDEDT",292,0)
 S DR=".01;3;100;101;102;24;23;21"
"RTN","PXRMDEDT",293,0)
 S IEN=$G(^PXRMD(801.41,IEN,46)) I $G(IEN)="" G EX
"RTN","PXRMDEDT",294,0)
 I $P($G(^PXRMD(801.42,IEN,0)),U)="COM" S DR=DR_";45"
"RTN","PXRMDEDT",295,0)
EX ;
"RTN","PXRMDEDT",296,0)
 D ^DIE
"RTN","PXRMDEDT",297,0)
 Q
"RTN","PXRMDEDT",298,0)
 ;
"RTN","PXRMDEDT",299,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMDEDT",300,0)
 L -^PXRMD(801.41,DA)
"RTN","PXRMDEDT",301,0)
 Q
"RTN","PXRMDEV")
0^30^B28754110
"RTN","PXRMDEV",1,0)
PXRMDEV ; SLC/PKR - This is a driver for testing Clinical Reminders.;05/04/2006
"RTN","PXRMDEV",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDEV",3,0)
 ;
"RTN","PXRMDEV",4,0)
 ;==================================================
"RTN","PXRMDEV",5,0)
CMOUT ;Do formatted Clinical Maintenance output.
"RTN","PXRMDEV",6,0)
 N DUE,DUECOL,HIST,LAST,LASTCOL,LNUM,RIEN,RNAME,STATUS,STATCOL,TEMP,TYPE
"RTN","PXRMDEV",7,0)
 W !!,"Formatted Output:"
"RTN","PXRMDEV",8,0)
 S RIEN=$O(^TMP("PXRHM",$J,""))
"RTN","PXRMDEV",9,0)
 S RNAME=$O(^TMP("PXRHM",$J,RIEN,""))
"RTN","PXRMDEV",10,0)
 S TEMP=$G(^TMP("PXRHM",$J,RIEN,RNAME))
"RTN","PXRMDEV",11,0)
 S STATUS=$P(TEMP,U,1)
"RTN","PXRMDEV",12,0)
 S DUE=$$EDATE^PXRMDATE($P(TEMP,U,2))
"RTN","PXRMDEV",13,0)
 S LAST=$$EDATE^PXRMDATE($P(TEMP,U,3))
"RTN","PXRMDEV",14,0)
 S STATCOL=41-($L(STATUS)/2)
"RTN","PXRMDEV",15,0)
 S DUECOL=53-($L(DUE)/2)
"RTN","PXRMDEV",16,0)
 S LASTCOL=67-($L(LAST)/2)
"RTN","PXRMDEV",17,0)
 W !!,?36,"--STATUS--",?47,"--DUE DATE--",?61,"--LAST DONE--",!
"RTN","PXRMDEV",18,0)
 W !,RNAME,?STATCOL,STATUS,?DUECOL,DUE,?LASTCOL,LAST,!
"RTN","PXRMDEV",19,0)
 S LNUM=0
"RTN","PXRMDEV",20,0)
 F  S LNUM=$O(^TMP("PXRHM",$J,RIEN,RNAME,"TXT",LNUM)) Q:LNUM=""  D
"RTN","PXRMDEV",21,0)
 . W !,^TMP("PXRHM",$J,RIEN,RNAME,"TXT",LNUM)
"RTN","PXRMDEV",22,0)
 Q
"RTN","PXRMDEV",23,0)
 ;
"RTN","PXRMDEV",24,0)
 ;==================================================
"RTN","PXRMDEV",25,0)
DEB ;Prompt for patient and reminder by name input component.
"RTN","PXRMDEV",26,0)
 N DATE,DFN,DIC,DIR,DIROUT,DTOUT,DUOUT,PXRMITEM,PXRHM,PXRMTDEB,X,Y
"RTN","PXRMDEV",27,0)
 S DIC=2,DIC("A")="Select Patient: "
"RTN","PXRMDEV",28,0)
 S DIC(0)="AEQMZ"
"RTN","PXRMDEV",29,0)
 D ^DIC
"RTN","PXRMDEV",30,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",31,0)
 S DFN=+$P(Y,U,1)
"RTN","PXRMDEV",32,0)
 I DFN=-1 W !,"No patient selected!" Q
"RTN","PXRMDEV",33,0)
 S DIC=811.9,DIC("A")="Select Reminder: "
"RTN","PXRMDEV",34,0)
 S DIC("S")="I $P(^PXD(811.9,Y,100),U,4)'[""L"""
"RTN","PXRMDEV",35,0)
 D ^DIC
"RTN","PXRMDEV",36,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",37,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",38,0)
 S PXRMITEM=+$P(Y,U,1)
"RTN","PXRMDEV",39,0)
 I PXRMITEM=-1 W !,"No reminder selected!" Q
"RTN","PXRMDEV",40,0)
 S DIR(0)="LA"_U_"0"
"RTN","PXRMDEV",41,0)
 S DIR("A")="Enter component number 0, 1, 5, 10, 11, 12: "
"RTN","PXRMDEV",42,0)
 D ^DIR
"RTN","PXRMDEV",43,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",44,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",45,0)
 I X="" S X=5
"RTN","PXRMDEV",46,0)
 S PXRHM=X
"RTN","PXRMDEV",47,0)
 S DIR(0)="DA^"_0_"::ETX"
"RTN","PXRMDEV",48,0)
 S DIR("A")="Enter date for reminder evaluation: "
"RTN","PXRMDEV",49,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMDEV",50,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMDEV",51,0)
 W !
"RTN","PXRMDEV",52,0)
 D ^DIR K DIR
"RTN","PXRMDEV",53,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",54,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",55,0)
 S DATE=Y
"RTN","PXRMDEV",56,0)
 I $D(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,")) S PXRMTDEB=$$ASKYN^PXRMEUT("N","Display all term findings","","")
"RTN","PXRMDEV",57,0)
 D DOREM(DFN,PXRMITEM,PXRHM,DATE)
"RTN","PXRMDEV",58,0)
 Q
"RTN","PXRMDEV",59,0)
 ;
"RTN","PXRMDEV",60,0)
 ;==================================================
"RTN","PXRMDEV",61,0)
DEV ;Prompt for patient and reminder by name and evaluation date.
"RTN","PXRMDEV",62,0)
 N DATE,DFN,DIC,DIROUT,DIRUT,DTOUT,DUOUT,PXRMITEM,PXRHM,PXRMTDEB,REF,X,Y
"RTN","PXRMDEV",63,0)
 S DIC=2,DIC("A")="Select Patient: "
"RTN","PXRMDEV",64,0)
 S DIC(0)="AEQMZ"
"RTN","PXRMDEV",65,0)
 D ^DIC
"RTN","PXRMDEV",66,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",67,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",68,0)
 S DFN=+$P(Y,U,1)
"RTN","PXRMDEV",69,0)
 S DIC=811.9,DIC("A")="Select Reminder: "
"RTN","PXRMDEV",70,0)
 S DIC("S")="I $P(^PXD(811.9,Y,100),U,4)'[""L"""
"RTN","PXRMDEV",71,0)
 D ^DIC
"RTN","PXRMDEV",72,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",73,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",74,0)
 S PXRMITEM=+$P(Y,U,1)
"RTN","PXRMDEV",75,0)
 S PXRHM=5
"RTN","PXRMDEV",76,0)
 S DIR(0)="DA^"_0_"::ETX"
"RTN","PXRMDEV",77,0)
 S DIR("A")="Enter date for reminder evaluation: "
"RTN","PXRMDEV",78,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMDEV",79,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMDEV",80,0)
 W !
"RTN","PXRMDEV",81,0)
 D ^DIR K DIR
"RTN","PXRMDEV",82,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",83,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",84,0)
 S DATE=Y
"RTN","PXRMDEV",85,0)
 I $D(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,")) S PXRMTDEB=$$ASKYN^PXRMEUT("N","Display all term findings","","")
"RTN","PXRMDEV",86,0)
 D DOREM(DFN,PXRMITEM,PXRHM,DATE)
"RTN","PXRMDEV",87,0)
 Q
"RTN","PXRMDEV",88,0)
 ;
"RTN","PXRMDEV",89,0)
 ;==================================================
"RTN","PXRMDEV",90,0)
DOREM(DFN,PXRMITEM,PXRMHM,DATE) ;Do the reminder
"RTN","PXRMDEV",91,0)
 N DEFARR,FIEVAL,FINDING,PXRMDEBG,PXRMID,REF,TFIEVAL
"RTN","PXRMDEV",92,0)
 ;This is a debugging run so set PXRMDEBG.
"RTN","PXRMDEV",93,0)
 S PXRMDEBG=1
"RTN","PXRMDEV",94,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRMDEV",95,0)
 I +$G(DATE)=0 D EVAL^PXRM(DFN,.DEFARR,PXRHM,1,.FIEVAL)
"RTN","PXRMDEV",96,0)
 I +$G(DATE)>0 D EVAL^PXRM(DFN,.DEFARR,PXRHM,1,.FIEVAL,DATE)
"RTN","PXRMDEV",97,0)
 ;
"RTN","PXRMDEV",98,0)
 W !!,"The elements of the FIEVAL array are:"
"RTN","PXRMDEV",99,0)
 S REF="FIEVAL"
"RTN","PXRMDEV",100,0)
 D AWRITE^PXRMUTIL(REF)
"RTN","PXRMDEV",101,0)
 ;
"RTN","PXRMDEV",102,0)
 I $G(PXRMTDEB) D
"RTN","PXRMDEV",103,0)
 . W !!,"Term findings:"
"RTN","PXRMDEV",104,0)
 . S REF="TFIEVAL"
"RTN","PXRMDEV",105,0)
 . S FINDING=0
"RTN","PXRMDEV",106,0)
 . F  S FINDING=$O(^TMP("PXRMTDEB",$J,FINDING)) Q:FINDING=""  D
"RTN","PXRMDEV",107,0)
 .. K TFIEVAL M TFIEVAL(FINDING)=^TMP("PXRMTDEB",$J,FINDING)
"RTN","PXRMDEV",108,0)
 .. W !,"Finding ",FINDING,":"
"RTN","PXRMDEV",109,0)
 .. D AWRITE^PXRMUTIL(REF)
"RTN","PXRMDEV",110,0)
 . K ^TMP("PXRMTDEB",$J)
"RTN","PXRMDEV",111,0)
 ;
"RTN","PXRMDEV",112,0)
 W !!,"The elements of the ^TMP(PXRMID,$J) array are:"
"RTN","PXRMDEV",113,0)
 I $D(PXRMID) S REF="^TMP(PXRMID,$J)" D AWRITE^PXRMUTIL(REF) K ^TMP(PXRMID,$J)
"RTN","PXRMDEV",114,0)
 ;
"RTN","PXRMDEV",115,0)
 W !!,"The elements of the ^TMP(""PXRHM"",$J) array are:"
"RTN","PXRMDEV",116,0)
 S REF="^TMP(""PXRHM"",$J)"
"RTN","PXRMDEV",117,0)
 D AWRITE^PXRMUTIL(REF)
"RTN","PXRMDEV",118,0)
 ;
"RTN","PXRMDEV",119,0)
 I $D(^TMP("PXRHM",$J)) D CMOUT
"RTN","PXRMDEV",120,0)
 I PXRHM=12 D MHVCOUT
"RTN","PXRMDEV",121,0)
 K ^TMP("PXRM",$J),^TMP("PXRHM",$J),^TMP("PXRMMHVC",$J)
"RTN","PXRMDEV",122,0)
 Q
"RTN","PXRMDEV",123,0)
 ;==================================================
"RTN","PXRMDEV",124,0)
MHVCOUT ;Do formatted MHV combined output.
"RTN","PXRMDEV",125,0)
 N DUE,DUECOL,HIST,LAST,LASTCOL,LNUM,RIEN,RNAME,STATUS,STATCOL,TEMP,TYPE
"RTN","PXRMDEV",126,0)
 W !!,"Formatted Output:"
"RTN","PXRMDEV",127,0)
 S RIEN=$O(^TMP("PXRMMHVC",$J,""))
"RTN","PXRMDEV",128,0)
 S TEMP=^TMP("PXRMMHVC",$J,RIEN,"STATUS")
"RTN","PXRMDEV",129,0)
 S STATUS=$P(TEMP,U,1)
"RTN","PXRMDEV",130,0)
 S DUE=$$EDATE^PXRMDATE($P(TEMP,U,2))
"RTN","PXRMDEV",131,0)
 S LAST=$$EDATE^PXRMDATE($P(TEMP,U,3))
"RTN","PXRMDEV",132,0)
 S DUE=$$EDATE^PXRMDATE($P(TEMP,U,2))
"RTN","PXRMDEV",133,0)
 S LAST=$$EDATE^PXRMDATE($P(TEMP,U,3))
"RTN","PXRMDEV",134,0)
 S STATCOL=41-($L(STATUS)/2)
"RTN","PXRMDEV",135,0)
 S DUECOL=53-($L(DUE)/2)
"RTN","PXRMDEV",136,0)
 S LASTCOL=67-($L(LAST)/2)
"RTN","PXRMDEV",137,0)
 S RNAME=$P(^PXD(811.9,RIEN,0),U,3)
"RTN","PXRMDEV",138,0)
 I RNAME="" S RNAME=$P(^PXD(811.9,RIEN,0),U,1)
"RTN","PXRMDEV",139,0)
 W !!,?36,"--STATUS--",?47,"--DUE DATE--",?61,"--LAST DONE--",!
"RTN","PXRMDEV",140,0)
 W !,RNAME,?STATCOL,STATUS,?DUECOL,DUE,?LASTCOL,LAST,!
"RTN","PXRMDEV",141,0)
 W !!,"---------- Detailed Output ----------"
"RTN","PXRMDEV",142,0)
 S LNUM=0
"RTN","PXRMDEV",143,0)
 F  S LNUM=$O(^TMP("PXRMMHVC",$J,RIEN,"DETAIL",LNUM)) Q:LNUM=""  D
"RTN","PXRMDEV",144,0)
 . W !,^TMP("PXRMMHVC",$J,RIEN,"DETAIL",LNUM)
"RTN","PXRMDEV",145,0)
 W !!,"---------- Summary Output ----------"
"RTN","PXRMDEV",146,0)
 S LNUM=0
"RTN","PXRMDEV",147,0)
 F  S LNUM=$O(^TMP("PXRMMHVC",$J,RIEN,"SUMMARY",LNUM)) Q:LNUM=""  D
"RTN","PXRMDEV",148,0)
 . W !,^TMP("PXRMMHVC",$J,RIEN,"SUMMARY",LNUM)
"RTN","PXRMDEV",149,0)
 Q
"RTN","PXRMDEV",150,0)
 ;
"RTN","PXRMDGEN")
0^164^B5814259
"RTN","PXRMDGEN",1,0)
PXRMDGEN ; SLC/PKR - Handle VA GENERIC drug findings. ;06/08/2006
"RTN","PXRMDGEN",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDGEN",3,0)
 ;
"RTN","PXRMDGEN",4,0)
 ;=====================================================
"RTN","PXRMDGEN",5,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate VA GENERIC (file #50.6)
"RTN","PXRMDGEN",6,0)
 ;findings.
"RTN","PXRMDGEN",7,0)
 D EVALFI^PXRMDRGR(DFN,.DEFARR,ENODE,"AND",.FIEVAL)
"RTN","PXRMDGEN",8,0)
 Q
"RTN","PXRMDGEN",9,0)
 ;
"RTN","PXRMDGEN",10,0)
 ;=====================================================
"RTN","PXRMDGEN",11,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate VA GENERIC
"RTN","PXRMDGEN",12,0)
 ;(file #50.6) terms.
"RTN","PXRMDGEN",13,0)
 D EVALTERM^PXRMDRGR(DFN,.FINDPA,ENODE,"AND",.TERMARR,.TFIEVAL)
"RTN","PXRMDGEN",14,0)
 Q
"RTN","PXRMDGEN",15,0)
 ;
"RTN","PXRMDGEN",16,0)
 ;=====================================================
"RTN","PXRMDGEN",17,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Evaluate VA GENERIC terms for
"RTN","PXRMDGEN",18,0)
 ;building patient lists.
"RTN","PXRMDGEN",19,0)
 D EVALPL^PXRMDRGR(.FINDPA,ENODE,"AND",.TERMARR,.PLIST)
"RTN","PXRMDGEN",20,0)
 Q
"RTN","PXRMDGEN",21,0)
 ;
"RTN","PXRMDGEN",22,0)
 ;=====================================================
"RTN","PXRMDGEN",23,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMDGEN",24,0)
 N FTYPE,IND,NAME,PFIEVAL,TEMP,VAGEN,VAGIEN
"RTN","PXRMDGEN",25,0)
 S VAGIEN=$P(IFIEVAL("FINDING"),";",1)
"RTN","PXRMDGEN",26,0)
 ;DBIA #2531
"RTN","PXRMDGEN",27,0)
 S VAGEN=$$VAGN^PSNAPIS(VAGIEN)
"RTN","PXRMDGEN",28,0)
 S NLINES=NLINES+1,TEXT(NLINES)="VA Generic: "_VAGEN
"RTN","PXRMDGEN",29,0)
 S IND=0
"RTN","PXRMDGEN",30,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMDGEN",31,0)
 . S TEMP=IFIEVAL(IND,"FINDING")
"RTN","PXRMDGEN",32,0)
 . S FTYPE=$P(TEMP,";",2)
"RTN","PXRMDGEN",33,0)
 . K PFIEVAL M PFIEVAL=IFIEVAL(IND)
"RTN","PXRMDGEN",34,0)
 . I FTYPE="PS(55," D MHVOUT^PXRMDIN(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDGEN",35,0)
 . I FTYPE="PS(55NVA," D MHVOUT^PXRMDNVA(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDGEN",36,0)
 . I FTYPE="PSRX(" D MHVOUT^PXRMDOUT(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDGEN",37,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDGEN",38,0)
 Q
"RTN","PXRMDGEN",39,0)
 ;
"RTN","PXRMDGEN",40,0)
 ;=====================================================
"RTN","PXRMDGEN",41,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMDGEN",42,0)
 ;maintenance output.
"RTN","PXRMDGEN",43,0)
 N IND,PFIEVAL,TEMP,VAGEN,VAGIEN
"RTN","PXRMDGEN",44,0)
 S VAGIEN=$P(IFIEVAL("FINDING"),";",1)
"RTN","PXRMDGEN",45,0)
 ;DBIA #2531
"RTN","PXRMDGEN",46,0)
 S VAGEN=$$VAGN^PSNAPIS(VAGIEN)
"RTN","PXRMDGEN",47,0)
 S NLINES=NLINES+1
"RTN","PXRMDGEN",48,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"VA Generic: "_VAGEN
"RTN","PXRMDGEN",49,0)
 S IND=0
"RTN","PXRMDGEN",50,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMDGEN",51,0)
 . S TEMP=IFIEVAL(IND,"FINDING")
"RTN","PXRMDGEN",52,0)
 . S FTYPE=$P(TEMP,";",2)
"RTN","PXRMDGEN",53,0)
 . K PFIEVAL M PFIEVAL=IFIEVAL(IND)
"RTN","PXRMDGEN",54,0)
 . I FTYPE="PS(55," D OUTPUT^PXRMDIN(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDGEN",55,0)
 . I FTYPE="PS(55NVA," D OUTPUT^PXRMDNVA(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDGEN",56,0)
 . I FTYPE="PSRX(" D OUTPUT^PXRMDOUT(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDGEN",57,0)
 Q
"RTN","PXRMDGEN",58,0)
 ;
"RTN","PXRMDGPT")
0^103^B43220720
"RTN","PXRMDGPT",1,0)
PXRMDGPT ; SLC/PKR - Code to handle DGPT (Patient Treatment File) data. ;08/03/2005
"RTN","PXRMDGPT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDGPT",3,0)
 ;
"RTN","PXRMDGPT",4,0)
 ;============================================
"RTN","PXRMDGPT",5,0)
FPDAT(DFN,TAXARR,NGET,SDIR,BDT,EDT,TYPE,FLIST) ;Find data for a patient.
"RTN","PXRMDGPT",6,0)
 ;TYPE is ICD0 or ICD9
"RTN","PXRMDGPT",7,0)
 N DA,DAS,DATE,DNODE,DS,EDTT,ICDP,IND,NFOUND,NODE,NODEAT,NNODE
"RTN","PXRMDGPT",8,0)
 N SUB,TE,TDATE,TIND,TLIST,TS
"RTN","PXRMDGPT",9,0)
 I $G(^PXRMINDX(45,"DATE BUILT"))="" D  Q
"RTN","PXRMDGPT",10,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),45)
"RTN","PXRMDGPT",11,0)
 I '$D(^PXRMINDX(45,TYPE,"PNI",DFN)) Q
"RTN","PXRMDGPT",12,0)
 S SUB=$S(TYPE="ICD0":80.1,TYPE="ICD9":80,1:0)
"RTN","PXRMDGPT",13,0)
 I SUB=0 Q
"RTN","PXRMDGPT",14,0)
 S NNODE=+$P($G(TAXARR("PDS",45,SUB)),U,2)
"RTN","PXRMDGPT",15,0)
 I NNODE=0 Q
"RTN","PXRMDGPT",16,0)
 ;Get the start and end of the taxonomy.
"RTN","PXRMDGPT",17,0)
 S TS=$O(TAXARR(SUB,""))-1
"RTN","PXRMDGPT",18,0)
 S TE=$O(TAXARR(SUB,""),-1)
"RTN","PXRMDGPT",19,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMDGPT",20,0)
 S DS=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMDGPT",21,0)
 S NFOUND=0
"RTN","PXRMDGPT",22,0)
 F IND=1:1:NNODE D
"RTN","PXRMDGPT",23,0)
 . S NODE=TAXARR("PDS",45,SUB,IND)
"RTN","PXRMDGPT",24,0)
 . S ICDP=TS
"RTN","PXRMDGPT",25,0)
 . F  S ICDP=$O(^PXRMINDX(45,TYPE,"PNI",DFN,NODE,ICDP)) Q:(ICDP>TE)!(ICDP="")  D
"RTN","PXRMDGPT",26,0)
 .. I '$D(TAXARR(SUB,ICDP)) Q
"RTN","PXRMDGPT",27,0)
 .. S DATE=DS
"RTN","PXRMDGPT",28,0)
 .. F  S DATE=+$O(^PXRMINDX(45,TYPE,"PNI",DFN,NODE,ICDP,DATE),SDIR) Q:$S(DATE=0:1,DATE<BDT:1,DATE>EDTT:1,1:0)  D
"RTN","PXRMDGPT",29,0)
 ... S DAS=""
"RTN","PXRMDGPT",30,0)
 ... F  S DAS=$O(^PXRMINDX(45,TYPE,"PNI",DFN,NODE,ICDP,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMDGPT",31,0)
 .... S NFOUND=NFOUND+1
"RTN","PXRMDGPT",32,0)
 .... S TLIST(DATE,NFOUND)=DAS_U_ICDP_U_NODE_U_TYPE
"RTN","PXRMDGPT",33,0)
 .... I NFOUND>NGET D
"RTN","PXRMDGPT",34,0)
 ..... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMDGPT",35,0)
 ..... K TLIST(TDATE,TIND)
"RTN","PXRMDGPT",36,0)
 ;Return up to NGET of the most recent entries.
"RTN","PXRMDGPT",37,0)
 S NFOUND=0
"RTN","PXRMDGPT",38,0)
 S DATE=""
"RTN","PXRMDGPT",39,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NGET)  D
"RTN","PXRMDGPT",40,0)
 . S IND=0
"RTN","PXRMDGPT",41,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NGET)  D
"RTN","PXRMDGPT",42,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMDGPT",43,0)
 .. S FLIST(DATE,NFOUND,45)=TLIST(DATE,IND)
"RTN","PXRMDGPT",44,0)
 Q
"RTN","PXRMDGPT",45,0)
 ;
"RTN","PXRMDGPT",46,0)
 ;============================================
"RTN","PXRMDGPT",47,0)
GETDATA(DAS,FIEVT) ;Return data for a specificed PTF entry.
"RTN","PXRMDGPT",48,0)
 D PTF^DGPTPXRM(DAS,.FIEVT)
"RTN","PXRMDGPT",49,0)
 Q
"RTN","PXRMDGPT",50,0)
 ;
"RTN","PXRMDGPT",51,0)
 ;============================================
"RTN","PXRMDGPT",52,0)
GPLIST(TAXARR,NOCC,BDT,EDT,TYPE,PLIST) ;Get data for a patient.
"RTN","PXRMDGPT",53,0)
 ;TYPE is ICD0 or ICD9
"RTN","PXRMDGPT",54,0)
 N DA,DA1,DAS,DATE,DFN,DNODE,DS,ICDP
"RTN","PXRMDGPT",55,0)
 N NFOUND,NODE,NNODE,SUB,TEMP,TLIST
"RTN","PXRMDGPT",56,0)
 I $G(^PXRMINDX(45,"DATE BUILT"))="" D  Q
"RTN","PXRMDGPT",57,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),45)
"RTN","PXRMDGPT",58,0)
 S SUB=$S(TYPE="ICD0":80.1,TYPE="ICD9":80,1:0)
"RTN","PXRMDGPT",59,0)
 I SUB=0 Q
"RTN","PXRMDGPT",60,0)
 S TLIST="GPLIST_PXRMDGPT"
"RTN","PXRMDGPT",61,0)
 K ^TMP($J,TLIST)
"RTN","PXRMDGPT",62,0)
 S NNODE=+$P($G(TAXARR("PDS",45,SUB)),U,2)
"RTN","PXRMDGPT",63,0)
 I NNODE=0 Q
"RTN","PXRMDGPT",64,0)
 S DS=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMDGPT",65,0)
 S ICDP=""
"RTN","PXRMDGPT",66,0)
 F  S ICDP=$O(TAXARR(SUB,ICDP)) Q:ICDP=""  D
"RTN","PXRMDGPT",67,0)
 . I '$D(^PXRMINDX(45,TYPE,"INP",ICDP)) Q
"RTN","PXRMDGPT",68,0)
 . F IND=1:1:NNODE D
"RTN","PXRMDGPT",69,0)
 .. S NODE=TAXARR("PDS",45,SUB,IND)
"RTN","PXRMDGPT",70,0)
 .. I '$D(^PXRMINDX(45,TYPE,"INP",ICDP,NODE)) Q
"RTN","PXRMDGPT",71,0)
 .. S DFN=0
"RTN","PXRMDGPT",72,0)
 .. F  S DFN=$O(^PXRMINDX(45,TYPE,"INP",ICDP,NODE,DFN)) Q:DFN=""  D
"RTN","PXRMDGPT",73,0)
 ... S DATE=DS
"RTN","PXRMDGPT",74,0)
 ... F  S DATE=+$O(^PXRMINDX(45,TYPE,"INP",ICDP,NODE,DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)  D
"RTN","PXRMDGPT",75,0)
 .... S DAS=$O(^PXRMINDX(45,TYPE,"INP",ICDP,NODE,DFN,DATE,""))
"RTN","PXRMDGPT",76,0)
 .... S ^TMP($J,TLIST,DFN,DATE,DAS)=ICDP_U_TYPE_U_NODE
"RTN","PXRMDGPT",77,0)
 ;Return up to NOCC of the most recent entries for each patient.
"RTN","PXRMDGPT",78,0)
 S DFN=0
"RTN","PXRMDGPT",79,0)
 F  S DFN=$O(^TMP($J,TLIST,DFN)) Q:DFN=""  D
"RTN","PXRMDGPT",80,0)
 . S NFOUND=0
"RTN","PXRMDGPT",81,0)
 . S DATE=""
"RTN","PXRMDGPT",82,0)
 . F  S DATE=$O(^TMP($J,TLIST,DFN,DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMDGPT",83,0)
 .. S DAS=""
"RTN","PXRMDGPT",84,0)
 .. F  S DAS=$O(^TMP($J,TLIST,DFN,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMDGPT",85,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMDGPT",86,0)
 ... S TEMP=^TMP($J,TLIST,DFN,DATE,DAS)
"RTN","PXRMDGPT",87,0)
 ... S ^TMP($J,PLIST,1,DFN,DATE,45)=DAS_U_DATE_U_TEMP
"RTN","PXRMDGPT",88,0)
 K ^TMP($J,TLIST)
"RTN","PXRMDGPT",89,0)
 Q
"RTN","PXRMDGPT",90,0)
 ;
"RTN","PXRMDGPT",91,0)
 ;============================================
"RTN","PXRMDGPT",92,0)
MHVOUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMDGPT",93,0)
 I IFIEVAL("FILE SPECIFIC")["ICD0" D MHVOUT0(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDGPT",94,0)
 I IFIEVAL("FILE SPECIFIC")["ICD9" D MHVOUT9(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT)
"RTN","PXRMDGPT",95,0)
 Q
"RTN","PXRMDGPT",96,0)
 ;
"RTN","PXRMDGPT",97,0)
 ;============================================
"RTN","PXRMDGPT",98,0)
MHVOUT0(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMDGPT",99,0)
 N CODE,D0,DATE,ICD0ZN,IND,JND,NAME,NODE,NOUT,PROC
"RTN","PXRMDGPT",100,0)
 N TEMP,TEXTOUT
"RTN","PXRMDGPT",101,0)
 S NAME="Hospitalization Procedure = "
"RTN","PXRMDGPT",102,0)
 S IND=0
"RTN","PXRMDGPT",103,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMDGPT",104,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMDGPT",105,0)
 . S D0=$P(IFIEVAL(IND,"CODEP"),";",1)
"RTN","PXRMDGPT",106,0)
 . S ICD0ZN=$$ICDOP^ICDCODE(D0,DATE)
"RTN","PXRMDGPT",107,0)
 . S CODE=$P(ICD0ZN,U,2)
"RTN","PXRMDGPT",108,0)
 . S PROC=$P(ICD0ZN,U,5)
"RTN","PXRMDGPT",109,0)
 . S TEMP=NAME_PROC_" ("_$$EDATE^PXRMDATE(DATE)_")"
"RTN","PXRMDGPT",110,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMDGPT",111,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDGPT",112,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDGPT",113,0)
 Q
"RTN","PXRMDGPT",114,0)
 ;
"RTN","PXRMDGPT",115,0)
 ;============================================
"RTN","PXRMDGPT",116,0)
MHVOUT9(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMDGPT",117,0)
 N CODE,DATE,DIAG,ICD9P,ICD9ZN,IND,JND,NAME,NODE,NOUT
"RTN","PXRMDGPT",118,0)
 N TEMP,TEXTOUT
"RTN","PXRMDGPT",119,0)
 S NAME="Hospitalization Diagnosis = "
"RTN","PXRMDGPT",120,0)
 S IND=0
"RTN","PXRMDGPT",121,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMDGPT",122,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMDGPT",123,0)
 . S ICD9P=IFIEVAL(IND,"CODEP")
"RTN","PXRMDGPT",124,0)
 . S ICD9ZN=$$ICDDX^ICDCODE(ICD9P,DATE)
"RTN","PXRMDGPT",125,0)
 . S CODE=$P(ICD9ZN,U,2)
"RTN","PXRMDGPT",126,0)
 . S DIAG=$P(ICD9ZN,U,4)
"RTN","PXRMDGPT",127,0)
 . S TEMP=NAME_DIAG_" ("_$$EDATE^PXRMDATE(DATE)_")"
"RTN","PXRMDGPT",128,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMDGPT",129,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDGPT",130,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDGPT",131,0)
 Q
"RTN","PXRMDGPT",132,0)
 ;
"RTN","PXRMDGPT",133,0)
 ;============================================
"RTN","PXRMDGPT",134,0)
OUTICD0(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMDGPT",135,0)
 ;maintenance output.
"RTN","PXRMDGPT",136,0)
 N CODE,D0,DATE,ICD0ZN,IND,JND,NODE,NOUT,PROC
"RTN","PXRMDGPT",137,0)
 N TEMP,TEXTOUT
"RTN","PXRMDGPT",138,0)
 S NLINES=NLINES+1
"RTN","PXRMDGPT",139,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Hospitalization Procedure: "
"RTN","PXRMDGPT",140,0)
 S IND=0
"RTN","PXRMDGPT",141,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMDGPT",142,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMDGPT",143,0)
 . S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDGPT",144,0)
 . S D0=$P(IFIEVAL(IND,"CODEP"),";",1)
"RTN","PXRMDGPT",145,0)
 . S ICD0ZN=$$ICDOP^ICDCODE(D0,DATE)
"RTN","PXRMDGPT",146,0)
 . S CODE=$P(ICD0ZN,U,2)
"RTN","PXRMDGPT",147,0)
 . S PROC=$P(ICD0ZN,U,5)
"RTN","PXRMDGPT",148,0)
 . S NODE=$P(IFIEVAL(IND,"FILE SPECIFIC"),U,1)
"RTN","PXRMDGPT",149,0)
 . S TEMP=TEMP_" "_CODE_" "_PROC_" data node: "_NODE
"RTN","PXRMDGPT",150,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMDGPT",151,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDGPT",152,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDGPT",153,0)
 Q
"RTN","PXRMDGPT",154,0)
 ;
"RTN","PXRMDGPT",155,0)
 ;============================================
"RTN","PXRMDGPT",156,0)
OUTICD9(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMDGPT",157,0)
 ;maintenance output.
"RTN","PXRMDGPT",158,0)
 N CODE,DATE,DIAG,ICD9P,ICD9ZN,IND,JND,NODE,NOUT
"RTN","PXRMDGPT",159,0)
 N TEMP,TEXTOUT
"RTN","PXRMDGPT",160,0)
 S NLINES=NLINES+1
"RTN","PXRMDGPT",161,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Hospitalization Diagnosis: "
"RTN","PXRMDGPT",162,0)
 S IND=0
"RTN","PXRMDGPT",163,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMDGPT",164,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMDGPT",165,0)
 . S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDGPT",166,0)
 . S ICD9P=IFIEVAL(IND,"CODEP")
"RTN","PXRMDGPT",167,0)
 . S ICD9ZN=$$ICDDX^ICDCODE(ICD9P,DATE)
"RTN","PXRMDGPT",168,0)
 . S CODE=$P(ICD9ZN,U,2)
"RTN","PXRMDGPT",169,0)
 . S DIAG=$P(ICD9ZN,U,4)
"RTN","PXRMDGPT",170,0)
 . S NODE=$P(IFIEVAL(IND,"FILE SPECIFIC"),U,1)
"RTN","PXRMDGPT",171,0)
 . S TEMP=TEMP_" "_CODE_" "_DIAG_" data node: "_NODE
"RTN","PXRMDGPT",172,0)
 . I $G(IFIEVAL(IND,"FEE BASIS")) S TEMP=TEMP_" (Fee)"
"RTN","PXRMDGPT",173,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMDGPT",174,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDGPT",175,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDGPT",176,0)
 Q
"RTN","PXRMDGPT",177,0)
 ;
"RTN","PXRMDGPT",178,0)
 ;============================================
"RTN","PXRMDGPT",179,0)
OUTPUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMDGPT",180,0)
 ;maintenance output.
"RTN","PXRMDGPT",181,0)
 I IFIEVAL("FILE SPECIFIC")["ICD0" D OUTICD0(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDGPT",182,0)
 I IFIEVAL("FILE SPECIFIC")["ICD9" D OUTICD9(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT)
"RTN","PXRMDGPT",183,0)
 Q
"RTN","PXRMDGPT",184,0)
 ;
"RTN","PXRMDIN")
0^111^B6339292
"RTN","PXRMDIN",1,0)
PXRMDIN ; SLC/PKR - Handle inpatient med findings. ;09/21/2005
"RTN","PXRMDIN",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDIN",3,0)
 ;
"RTN","PXRMDIN",4,0)
 ;===============================================
"RTN","PXRMDIN",5,0)
GETDATA(DAS,FIEVT) ;Return data for an inpatient drug finding.
"RTN","PXRMDIN",6,0)
 ;DBIA #3836
"RTN","PXRMDIN",7,0)
 D OEL^PSJPXRM1(DAS,.FIEVT)
"RTN","PXRMDIN",8,0)
 S (FIEVT("STATUS"),FIEVT("VALUE"))=FIEVT("STAT") K FIEVT("STAT")
"RTN","PXRMDIN",9,0)
 S FIEVT("START DATE")=FIEVT("START") K FIEVT("START")
"RTN","PXRMDIN",10,0)
 S FIEVT("STOP DATE")=FIEVT("STOP") K FIEVT("STOP")
"RTN","PXRMDIN",11,0)
 S FIEVT("DURATION")=$$DURATION^PXRMDATE(FIEVT("START DATE"),FIEVT("STOP DATE"))
"RTN","PXRMDIN",12,0)
 Q
"RTN","PXRMDIN",13,0)
 ;
"RTN","PXRMDIN",14,0)
 ;===============================================
"RTN","PXRMDIN",15,0)
GETFNAME(DRUG,FIEVT) ;Return the name of the drug.
"RTN","PXRMDIN",16,0)
 ;DBIA #10043
"RTN","PXRMDIN",17,0)
 Q $S(+DRUG=0:DRUG,1:$P(^PSDRUG(DRUG,0),U,1))
"RTN","PXRMDIN",18,0)
 ;
"RTN","PXRMDIN",19,0)
 ;===============================================
"RTN","PXRMDIN",20,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate terms.
"RTN","PXRMDIN",21,0)
 D EVALTERM^PXRMINDX(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL)
"RTN","PXRMDIN",22,0)
 Q
"RTN","PXRMDIN",23,0)
 ;
"RTN","PXRMDIN",24,0)
 ;===============================================
"RTN","PXRMDIN",25,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMDIN",26,0)
 N DRUG,JND,NOUT,TEMP,TEXTOUT
"RTN","PXRMDIN",27,0)
 S DRUG=IFIEVAL("DISPENSE DRUG")
"RTN","PXRMDIN",28,0)
 ;DBIA #10043
"RTN","PXRMDIN",29,0)
 S DRUG=$S(+DRUG=0:DRUG,1:$P(^PSDRUG(DRUG,0),U,1))
"RTN","PXRMDIN",30,0)
 S TEMP="Inpatient Drug: "_DRUG_" = "
"RTN","PXRMDIN",31,0)
 S TEMP=TEMP_"("_$$EDATE^PXRMDATE(IFIEVAL("START DATE"))
"RTN","PXRMDIN",32,0)
 S TEMP=TEMP_" - "_$$EDATE^PXRMDATE(IFIEVAL("STOP DATE"))_")"
"RTN","PXRMDIN",33,0)
 D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMDIN",34,0)
 F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDIN",35,0)
 Q
"RTN","PXRMDIN",36,0)
 ;
"RTN","PXRMDIN",37,0)
 ;===============================================
"RTN","PXRMDIN",38,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMDIN",39,0)
 ;maintenance output.
"RTN","PXRMDIN",40,0)
 N DRUG,JND,NOUT,TEMP,TEXTOUT
"RTN","PXRMDIN",41,0)
 S DRUG=IFIEVAL("DISPENSE DRUG")
"RTN","PXRMDIN",42,0)
 ;DBIA #10043
"RTN","PXRMDIN",43,0)
 S DRUG=$S(+DRUG=0:DRUG,1:$P(^PSDRUG(DRUG,0),U,1))
"RTN","PXRMDIN",44,0)
 S NLINES=NLINES+1
"RTN","PXRMDIN",45,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Inpatient Medication: "_DRUG
"RTN","PXRMDIN",46,0)
 S TEMP=$$EDATE^PXRMDATE(IFIEVAL("DATE"))
"RTN","PXRMDIN",47,0)
 S TEMP=TEMP_" Status: "_IFIEVAL("STATUS")
"RTN","PXRMDIN",48,0)
 S TEMP=TEMP_", Start date: "_$$EDATE^PXRMDATE(IFIEVAL("START DATE"))
"RTN","PXRMDIN",49,0)
 S TEMP=TEMP_", Stop date: "_$$EDATE^PXRMDATE(IFIEVAL("STOP DATE"))
"RTN","PXRMDIN",50,0)
 I $D(IFIEVAL("DURATION")) S TEMP=TEMP_"  Duration: "_IFIEVAL("DURATION")_" D"
"RTN","PXRMDIN",51,0)
 D FORMATS^PXRMTEXT(INDENT+1,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMDIN",52,0)
 F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDIN",53,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDIN",54,0)
 Q
"RTN","PXRMDIN",55,0)
 ;
"RTN","PXRMDISC")
0^37^B1065588
"RTN","PXRMDISC",1,0)
PXRMDISC ; SLC/PKR - Return the reminder disclaimer in ^TMP. ;06/14/2005
"RTN","PXRMDISC",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDISC",3,0)
 ;
"RTN","PXRMDISC",4,0)
FORMAT ;Format and store the formatted disclaimer.
"RTN","PXRMDISC",5,0)
 N IND,LC,NIN,NOUT,TEXTIN,TEXTOUT
"RTN","PXRMDISC",6,0)
 ;If the Site Reminder Disclaimer is empty then use the default
"RTN","PXRMDISC",7,0)
 ;disclaimer.
"RTN","PXRMDISC",8,0)
 S IND=$S($D(^PXRM(800,1,"DISC2")):"DISC2",1:"DISC1")
"RTN","PXRMDISC",9,0)
 S (LC,NIN)=0
"RTN","PXRMDISC",10,0)
 F  S LC=$O(^PXRM(800,1,IND,LC)) Q:LC=""  D
"RTN","PXRMDISC",11,0)
 . S NIN=NIN+1,TEXTIN(NIN)=$G(^PXRM(800,1,IND,LC,0))
"RTN","PXRMDISC",12,0)
 D FORMAT^PXRMTEXT(1,70,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMDISC",13,0)
 K ^PXRM(800,1,"DISCF")
"RTN","PXRMDISC",14,0)
 F LC=1:1:NOUT S ^PXRM(800,1,"DISCF",LC,0)=TEXTOUT(LC)
"RTN","PXRMDISC",15,0)
 Q
"RTN","PXRMDISC",16,0)
 ;
"RTN","PXRMDISC",17,0)
 ;========================================================
"RTN","PXRMDISC",18,0)
LOAD ;Load the formatted disclaimer.
"RTN","PXRMDISC",19,0)
 I $D(^TMP("PXRM",$J,"DISC")) Q
"RTN","PXRMDISC",20,0)
 N LC
"RTN","PXRMDISC",21,0)
 S LC=0
"RTN","PXRMDISC",22,0)
 F  S LC=$O(^PXRM(800,1,"DISCF",LC)) Q:LC=""  D
"RTN","PXRMDISC",23,0)
 . S ^TMP("PXRM",$J,"DISC",LC)=^PXRM(800,1,"DISCF",LC,0)
"RTN","PXRMDISC",24,0)
 Q
"RTN","PXRMDISC",25,0)
 ;
"RTN","PXRMDLG4")
0^125^B90053996
"RTN","PXRMDLG4",1,0)
PXRMDLG4 ; SLC/PJH - Reminder Dialog Edit/Inquiry ;10/31/2005
"RTN","PXRMDLG4",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDLG4",3,0)
 ;
"RTN","PXRMDLG4",4,0)
WP(SUB,SUB1,WIDTH,SEQ,VALMCNT) ;Format WP text
"RTN","PXRMDLG4",5,0)
 N DIWF,DIWL,DIWR,IC,TEXT,X,TXTCNT,DTXT,CNT,SUB2
"RTN","PXRMDLG4",6,0)
 S (CNT,SUB2,TXTCNT)=0
"RTN","PXRMDLG4",7,0)
 F  S SUB2=$O(^PXRMD(801.41,SUB,SUB1,SUB2)) Q:'SUB2  D
"RTN","PXRMDLG4",8,0)
 .S TXTCNT=TXTCNT+1,DTXT(TXTCNT)=$G(^PXRMD(801.41,SUB,SUB1,SUB2,0))
"RTN","PXRMDLG4",9,0)
 .S DTXT(TXTCNT)=$$STRREP^PXRMUTIL($G(DTXT(TXTCNT)),"<br>","\\")
"RTN","PXRMDLG4",10,0)
 I TXTCNT>0 D
"RTN","PXRMDLG4",11,0)
 .N OUTPUT,NLINES
"RTN","PXRMDLG4",12,0)
 .S NLINES=0 D FORMAT^PXRMTEXT(1,WIDTH,TXTCNT,.DTXT,.NLINES,.OUTPUT)
"RTN","PXRMDLG4",13,0)
 .I NLINES>0 K DTXT M DTXT=OUTPUT
"RTN","PXRMDLG4",14,0)
 S CNT=0
"RTN","PXRMDLG4",15,0)
 F  S CNT=$O(DTXT(CNT)) Q:CNT=""  D
"RTN","PXRMDLG4",16,0)
 .S TEXT=$G(DTXT(CNT)),VALMCNT=VALMCNT+1
"RTN","PXRMDLG4",17,0)
 .S ^TMP(NODE,$J,VALMCNT,0)=SEQ_TEXT,SEQ=$J("",$L(SEQ))
"RTN","PXRMDLG4",18,0)
 Q
"RTN","PXRMDLG4",19,0)
 ;
"RTN","PXRMDLG4",20,0)
ADD ;PXRM DIALOG ADD ELEMENT validation
"RTN","PXRMDLG4",21,0)
 N ANS,DTOUT,DUOUT,LIT,LOCK,Y,PIEN,ERR,IEN,NATIONAL,SEQ
"RTN","PXRMDLG4",22,0)
 W IORESET
"RTN","PXRMDLG4",23,0)
 S VALMBCK="R",NATIONAL=0
"RTN","PXRMDLG4",24,0)
 ;Check if national reminder dialog
"RTN","PXRMDLG4",25,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,100)),U)="N" S NATIONAL=1
"RTN","PXRMDLG4",26,0)
 S LOCK=$P($G(^PXRMD(801.41,PXRMDIEN,100)),U,4)
"RTN","PXRMDLG4",27,0)
 ;Dissallow editing of national dialogs
"RTN","PXRMDLG4",28,0)
 I NATIONAL,'($G(PXRMINST)=1)&(DUZ(0)="@"),$G(LOCK)'=1 D  Q
"RTN","PXRMDLG4",29,0)
 .W !,"Elements may not be added to national reminder dialogs" H 2
"RTN","PXRMDLG4",30,0)
 ;
"RTN","PXRMDLG4",31,0)
 F  D SEQ(.SEQ,.PIEN) Q:$D(DUOUT)!$D(DTOUT)  Q:SEQ
"RTN","PXRMDLG4",32,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDLG4",33,0)
 ;
"RTN","PXRMDLG4",34,0)
 ;Check if sequence number is OK
"RTN","PXRMDLG4",35,0)
 I $G(PIEN)="" Q
"RTN","PXRMDLG4",36,0)
 S ANS="N" D ASK^PXRMDLG5(.ANS,PIEN) Q:$D(DUOUT)!$D(DTOUT)!($G(ANS)="N")
"RTN","PXRMDLG4",37,0)
 ;
"RTN","PXRMDLG4",38,0)
 ;Select a dialog element to add to parent dialog (PIEN)
"RTN","PXRMDLG4",39,0)
 ;PIEN may be dialog or a group within the dialog
"RTN","PXRMDLG4",40,0)
 D ESEL^PXRMDEDT(PIEN,SEQ)
"RTN","PXRMDLG4",41,0)
 ;Rebuild workfile
"RTN","PXRMDLG4",42,0)
 D BUILD^PXRMDLG(VIEW)
"RTN","PXRMDLG4",43,0)
 Q
"RTN","PXRMDLG4",44,0)
 ;
"RTN","PXRMDLG4",45,0)
FADD(DIEN,FTAB) ;Additional Findings
"RTN","PXRMDLG4",46,0)
 N FIND,FSUB,FTYP,FNAME,FNUM
"RTN","PXRMDLG4",47,0)
 S FSUB=0
"RTN","PXRMDLG4",48,0)
 F  S FSUB=$O(^PXRMD(801.41,DIEN,3,FSUB)) Q:'FSUB  D
"RTN","PXRMDLG4",49,0)
 .S FIND=$P($G(^PXRMD(801.41,DIEN,3,FSUB,0)),U) Q:FIND=""
"RTN","PXRMDLG4",50,0)
 .S FNAME="" D FDESC(FIND) Q:FNAME=""
"RTN","PXRMDLG4",51,0)
 .;Save additional finding name
"RTN","PXRMDLG4",52,0)
 .S FOUND=1 D FSAVE(2,FNAME,FTYP,FTAB,FIND)
"RTN","PXRMDLG4",53,0)
 Q
"RTN","PXRMDLG4",54,0)
 ;
"RTN","PXRMDLG4",55,0)
DETAIL(DIEN,LEV,VIEW,NODE) ;;Build listman global for all components
"RTN","PXRMDLG4",56,0)
 N DDATA,DDLG,DEND,DCIEN,DNAM,DSEQ,DSTRT,IND,JND,DSUB
"RTN","PXRMDLG4",57,0)
 S DSEQ=0
"RTN","PXRMDLG4",58,0)
 ;
"RTN","PXRMDLG4",59,0)
 ;Get each sequence number
"RTN","PXRMDLG4",60,0)
 F  S DSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLG4",61,0)
 .;Determine subscript
"RTN","PXRMDLG4",62,0)
 .S DSUB=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLG4",63,0)
 .;Get ien of prompt/component
"RTN","PXRMDLG4",64,0)
 .S DCIEN=$P($G(^PXRMD(801.41,DIEN,10,DSUB,0)),U,2) Q:'DCIEN
"RTN","PXRMDLG4",65,0)
 .;Ignore prompts and forced values
"RTN","PXRMDLG4",66,0)
 .I "PF"[$P($G(^PXRMD(801.41,DCIEN,0)),U,4) Q
"RTN","PXRMDLG4",67,0)
 .;Save line in workfile
"RTN","PXRMDLG4",68,0)
 .D DLINE(DCIEN,LEV,DSEQ,NODE)
"RTN","PXRMDLG4",69,0)
 .;Build pointers back to parent
"RTN","PXRMDLG4",70,0)
 .I VIEW'=4 D
"RTN","PXRMDLG4",71,0)
 ..S ^TMP("PXRMDLG4",$J,"IEN",NSEL)=DIEN_U_DSEQ
"RTN","PXRMDLG4",72,0)
 ..S ^TMP("PXRMDLG4",$J,"SEQ",LEV_DSEQ)=DCIEN
"RTN","PXRMDLG4",73,0)
 .;Process any sub-components
"RTN","PXRMDLG4",74,0)
 .I VIEW<5 D DETAIL(DCIEN,LEV_DSEQ_".",VIEW,NODE)
"RTN","PXRMDLG4",75,0)
 Q
"RTN","PXRMDLG4",76,0)
 ;
"RTN","PXRMDLG4",77,0)
DLINE(DIEN,LEV,DSEQ,NODE) ;Save individual component details
"RTN","PXRMDLG4",78,0)
 N CNT,DBOX,DCAP,DDIS,DMULT,DSUPP,DSHOW,DTYP,DTXT
"RTN","PXRMDLG4",79,0)
 N IC,RESNM,RESULT,RIEN,RNAME
"RTN","PXRMDLG4",80,0)
 ;Dialog name
"RTN","PXRMDLG4",81,0)
 S DDATA=$G(^PXRMD(801.41,DIEN,0)),DNAM=$P(DDATA,U) Q:DNAM=""
"RTN","PXRMDLG4",82,0)
 ;Check if standard PXRM prompt
"RTN","PXRMDLG4",83,0)
 I $$PXRM^PXRMEXID(DNAM) Q
"RTN","PXRMDLG4",84,0)
 ;Dialog Type and Disabled
"RTN","PXRMDLG4",85,0)
 S DDIS=$P(DDATA,U,3),DTYP=$P(DDATA,U,4)
"RTN","PXRMDLG4",86,0)
 S DTYP=$S(DTYP="G":"Group",1:"Element"),DNAM=DTYP_": "_DNAM
"RTN","PXRMDLG4",87,0)
 I VIEW=5 S DNAM=DNAM
"RTN","PXRMDLG4",88,0)
 ;Resolution type and name
"RTN","PXRMDLG4",89,0)
 S RNAME="",RIEN=$P($G(^PXRMD(801.41,DIEN,1)),U,3)
"RTN","PXRMDLG4",90,0)
 I RIEN S RNAME=$P($G(^PXRMD(801.9,RIEN,0)),U)
"RTN","PXRMDLG4",91,0)
 ;Result Group
"RTN","PXRMDLG4",92,0)
 S RESULT=$P(DDATA,U,15)
"RTN","PXRMDLG4",93,0)
 I RESULT S RESNM=$P($G(^PXRMD(801.41,RESULT,0)),U)
"RTN","PXRMDLG4",94,0)
 ;
"RTN","PXRMDLG4",95,0)
 ;Group fields
"RTN","PXRMDLG4",96,0)
 I DTYP="Group" D
"RTN","PXRMDLG4",97,0)
 .S DGRP=1,DTXT=$P(DDATA,U,5),DCAP=" [group caption]"
"RTN","PXRMDLG4",98,0)
 .I DTXT="" S DCAP=""
"RTN","PXRMDLG4",99,0)
 .I DTXT]"" S DCAP=DTXT_" "_DCAP
"RTN","PXRMDLG4",100,0)
 .S DBOX=$S($P(DDATA,U,6)="Y":"BOX",1:"NO BOX")
"RTN","PXRMDLG4",101,0)
 .S DSUPP=$S($P(DDATA,U,11):"SUPPRESS",1:"NO SUPPRESS")
"RTN","PXRMDLG4",102,0)
 .S DSHOW=$S($P(DDATA,U,10):"HIDE",1:"SHOW")
"RTN","PXRMDLG4",103,0)
 .S DMULT=$P(DDATA,U,9)
"RTN","PXRMDLG4",104,0)
 .S DMULT=$S(DMULT=1:"ONE ONLY",DMULT=2:"ONE OR MORE",DMULT=3:"NONE OR ONE",1:"NO SELECTION")
"RTN","PXRMDLG4",105,0)
 ;
"RTN","PXRMDLG4",106,0)
 N DPTX,DTXT,EXIST,ITEM,TEMP,SEP,SEQ,TAB,ALTLEN
"RTN","PXRMDLG4",107,0)
 S NSEL=NSEL+1,NLINE=NLINE+1,ITEM=NSEL,SEP=$E(LEV,$L(LEV)),SEQ=LEV_DSEQ
"RTN","PXRMDLG4",108,0)
 ;Suppress Item numbers for INQ options
"RTN","PXRMDLG4",109,0)
 I VIEW=4 S ITEM=""
"RTN","PXRMDLG4",110,0)
 ;Otherwise display Item, Sequence and Dialog Name
"RTN","PXRMDLG4",111,0)
 S TEMP=$J(ITEM,4)_$J("",3)_SEQ,TAB=$L(TEMP)+2
"RTN","PXRMDLG4",112,0)
 S CNT=0 F IC=1:1 Q:'$P(SEQ,".",IC)  S:$P(SEQ,".",IC)<10 CNT=CNT+1
"RTN","PXRMDLG4",113,0)
 S TAB=TAB+CNT
"RTN","PXRMDLG4",114,0)
 ;
"RTN","PXRMDLG4",115,0)
 S ALTLEN=$L(TEMP)
"RTN","PXRMDLG4",116,0)
 ;Display dialog name
"RTN","PXRMDLG4",117,0)
 S TEMP=TEMP_$J("",2+CNT)_DNAM
"RTN","PXRMDLG4",118,0)
 ;Add disabled if present
"RTN","PXRMDLG4",119,0)
 I DDIS]"" S TEMP=TEMP_" (Disabled)"
"RTN","PXRMDLG4",120,0)
 ;
"RTN","PXRMDLG4",121,0)
 S ^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",122,0)
 ;check for alternate dialog element/group
"RTN","PXRMDLG4",123,0)
 I VIEW<2!(VIEW>4) D
"RTN","PXRMDLG4",124,0)
 .I $D(^PXRMD(801.41,DIEN,49))>0 D ALT^PXRMDLG5(DIEN,LEV,DSEQ,NODE,VIEW,.NLINE,CNT,ALTLEN)
"RTN","PXRMDLG4",125,0)
 ;
"RTN","PXRMDLG4",126,0)
 ;Dialog Text or P/N Text
"RTN","PXRMDLG4",127,0)
 I (VIEW=2)!(VIEW=3)!(VIEW=4) D
"RTN","PXRMDLG4",128,0)
 .N DGBEG,DGSUB,TSUB
"RTN","PXRMDLG4",129,0)
 .S DGSUB=0,TSUB=$$TSUB^PXRMDLG1(DIEN,VIEW)
"RTN","PXRMDLG4",130,0)
 .I VIEW=4 S DGBEG=$J("",TAB)_"Text: "
"RTN","PXRMDLG4",131,0)
 .I VIEW'=4 S DGBEG=$J("",5+$L(SEQ)+CNT+$L(DTYP))_"Text: "
"RTN","PXRMDLG4",132,0)
 .D WP(DIEN,TSUB,65,.DGBEG,.NLINE)
"RTN","PXRMDLG4",133,0)
 .I DTYP="Group" D
"RTN","PXRMDLG4",134,0)
 ..S TEMP=DGBEG_"["_DBOX_", "_DSUPP_", "_DSHOW_", "_DMULT_"]"
"RTN","PXRMDLG4",135,0)
 ..S NLINE=NLINE+1,^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",136,0)
 ;
"RTN","PXRMDLG4",137,0)
 ;Set up selection index
"RTN","PXRMDLG4",138,0)
 S ^TMP(NODE,$J,"IDX",NSEL,DIEN)=""
"RTN","PXRMDLG4",139,0)
 ;Insert finding items
"RTN","PXRMDLG4",140,0)
 I (VIEW=1)!(VIEW=4),("Element;Group"[DTYP) D
"RTN","PXRMDLG4",141,0)
 .N DSUB,FDATA,FILENUM,FLIT,FLONG,FNAME,FOUND,FREP,FTYP,TEMP
"RTN","PXRMDLG4",142,0)
 .;Findings
"RTN","PXRMDLG4",143,0)
 .S FNAME="",FOUND=0
"RTN","PXRMDLG4",144,0)
 .D FDESC($P($G(^PXRMD(801.41,DIEN,1)),U,5))
"RTN","PXRMDLG4",145,0)
 .I FNAME'="" S FOUND=1 D FSAVE(1,FNAME,FTYP,TAB)
"RTN","PXRMDLG4",146,0)
 .;Resolution
"RTN","PXRMDLG4",147,0)
 .I RNAME]"" D
"RTN","PXRMDLG4",148,0)
 ..S TEMP=$J("",TAB)_"Resolution: "_RNAME
"RTN","PXRMDLG4",149,0)
 ..S NLINE=NLINE+1,^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",150,0)
 .;Additional findings
"RTN","PXRMDLG4",151,0)
 .D FADD(DIEN,TAB)
"RTN","PXRMDLG4",152,0)
 ;Get additional prompts
"RTN","PXRMDLG4",153,0)
 I VIEW=2 D
"RTN","PXRMDLG4",154,0)
 .S FIEN=$P($G(^PXRMD(801.41,DIEN,1)),U,5)
"RTN","PXRMDLG4",155,0)
 .I $G(FIEN)["PXD(811.2," D TAX^PXRMDLG1(FIEN,DSEQ,DIEN,.NLINE,NODE)
"RTN","PXRMDLG4",156,0)
 .I $G(FIEN)["ICPT"!($G(FIEN)["ICD9") D FIND^PXRMDLG1(FIEN,DSEQ,DIEN,.NLINE,NODE)
"RTN","PXRMDLG4",157,0)
 .D FADD(DIEN,TAB)
"RTN","PXRMDLG4",158,0)
 I VIEW,VIEW<5,"Element;Group"[DTYP D PROMPT(DIEN,TAB,"Prompts: ",VIEW)
"RTN","PXRMDLG4",159,0)
 ;
"RTN","PXRMDLG4",160,0)
 I VIEW=4,$D(^PXRMD(801.41,DIEN,49))>0 D ALT^PXRMDLG5(DIEN,LEV,DSEQ,NODE,VIEW,.NLINE,CNT,ALTLEN)
"RTN","PXRMDLG4",161,0)
 S NLINE=NLINE+1
"RTN","PXRMDLG4",162,0)
 S ^TMP(NODE,$J,NLINE,0)=$J("",79)
"RTN","PXRMDLG4",163,0)
 Q
"RTN","PXRMDLG4",164,0)
 ;
"RTN","PXRMDLG4",165,0)
FDESC(FIEN) ;Finding description
"RTN","PXRMDLG4",166,0)
 N FGLOB,FITEM,FNUM
"RTN","PXRMDLG4",167,0)
 ;Determine finding type
"RTN","PXRMDLG4",168,0)
 S FGLOB=$P(FIEN,";",2) Q:FGLOB=""
"RTN","PXRMDLG4",169,0)
 S FITEM=$P(FIEN,";") Q:FITEM=""
"RTN","PXRMDLG4",170,0)
 S FNUM=" ["_FITEM_"]"
"RTN","PXRMDLG4",171,0)
 I FGLOB["ICD9" D  Q
"RTN","PXRMDLG4",172,0)
 .S FTYP="DIAGNOSIS",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",173,0)
 .S FNAME=$P($G(@FGLOB),U,3)_FNUM
"RTN","PXRMDLG4",174,0)
 I FGLOB["WV" D  Q
"RTN","PXRMDLG4",175,0)
 .S FTYP="WH NOTIFICATION PURPOSE",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",176,0)
 .S FNAME=$P($G(@FGLOB),U)_FNUM
"RTN","PXRMDLG4",177,0)
 I FGLOB["ICPT" D  Q
"RTN","PXRMDLG4",178,0)
 .S FTYP="PROCEDURE",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",179,0)
 .S FNAME=$P($G(@FGLOB),U,2)_FNUM
"RTN","PXRMDLG4",180,0)
 I FGLOB["ORD(101.41" D  Q
"RTN","PXRMDLG4",181,0)
 .S FTYP="QUICK ORDER",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",182,0)
 .S FNAME=$P($G(@FGLOB),U,2)_FNUM
"RTN","PXRMDLG4",183,0)
 ;Short name for finding type
"RTN","PXRMDLG4",184,0)
 S FTYP=$G(DEF1(FGLOB)) Q:FTYP=""
"RTN","PXRMDLG4",185,0)
 ;Long name
"RTN","PXRMDLG4",186,0)
 S FTYP=$G(DEF2(FTYP))
"RTN","PXRMDLG4",187,0)
 S FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",188,0)
 S FNAME=$P($G(@FGLOB),U,1)_FNUM
"RTN","PXRMDLG4",189,0)
 I FNAME="" S FNAME=$P($G(@FGLOB),U)_FNUM
"RTN","PXRMDLG4",190,0)
 I FNAME="" S FNAME=FITEM
"RTN","PXRMDLG4",191,0)
 Q
"RTN","PXRMDLG4",192,0)
 ;
"RTN","PXRMDLG4",193,0)
FSAVE(DSUB,FNAME,FTYP,FTAB,FIEN) ;Save finding details
"RTN","PXRMDLG4",194,0)
 N TEMP
"RTN","PXRMDLG4",195,0)
 I DSUB=1 S FLIT="Finding: "
"RTN","PXRMDLG4",196,0)
 I DSUB>1 S FLIT="Add. Finding: "
"RTN","PXRMDLG4",197,0)
 S FLONG=0
"RTN","PXRMDLG4",198,0)
 ;change code to use IOM instead of default length of 60
"RTN","PXRMDLG4",199,0)
 I $L(FLIT_FNAME_" ("_FTYP_")")>(IOM-20) S FLONG=1
"RTN","PXRMDLG4",200,0)
 I 'FLONG S FNAME=FLIT_FNAME_" ("_FTYP_")"
"RTN","PXRMDLG4",201,0)
 I FLONG S FNAME=FLIT_FNAME
"RTN","PXRMDLG4",202,0)
 S TEMP=$J("",FTAB)_$E(FNAME,1,(IOM-20))_$J("",60-$L(FNAME))
"RTN","PXRMDLG4",203,0)
 S NLINE=NLINE+1
"RTN","PXRMDLG4",204,0)
 S ^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",205,0)
 I FLONG S NLINE=NLINE+1,^TMP(NODE,$J,NLINE,0)=$J("",FTAB)_"("_FTYP_")"
"RTN","PXRMDLG4",206,0)
 I VIEW=2 D
"RTN","PXRMDLG4",207,0)
 .I $G(FIEN)["ICPT"!($G(FIEN)["ICD9") D FIND^PXRMDLG1(FIEN,DSEQ,DIEN,.NLINE,NODE)
"RTN","PXRMDLG4",208,0)
 Q
"RTN","PXRMDLG4",209,0)
 ;
"RTN","PXRMDLG4",210,0)
PROMPT(IEN,TAB,TEXT,VIEW) ;additional prompts in the dialog file
"RTN","PXRMDLG4",211,0)
 N DATA,DDIS,DGSEQ,DSUB,DTITLE,DTXT,DTYP,SEQ,SUB
"RTN","PXRMDLG4",212,0)
 S SEQ=0
"RTN","PXRMDLG4",213,0)
 F  S SEQ=$O(^PXRMD(801.41,IEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMDLG4",214,0)
 .S SUB=$O(^PXRMD(801.41,IEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMDLG4",215,0)
 .S DSUB=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,2) Q:'DSUB 
"RTN","PXRMDLG4",216,0)
 .S DATA=$G(^PXRMD(801.41,DSUB,0)) Q:DATA=""
"RTN","PXRMDLG4",217,0)
 .S DNAME=$P(DATA,U),DDIS=$P(DATA,U,3),DTYP=$P(DATA,U,4)
"RTN","PXRMDLG4",218,0)
 .I "PF"'[DTYP Q
"RTN","PXRMDLG4",219,0)
 .I DTYP="F" S DNAME=DNAME_" (forced value)"
"RTN","PXRMDLG4",220,0)
 .I DTYP="P",(VIEW=2)!(VIEW=3) D
"RTN","PXRMDLG4",221,0)
 ..;Override prompt caption
"RTN","PXRMDLG4",222,0)
 ..S DTITLE=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,6)
"RTN","PXRMDLG4",223,0)
 ..I DTITLE="" S DTITLE=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLG4",224,0)
 ..S DNAME=DTITLE
"RTN","PXRMDLG4",225,0)
 .S DNAME=$J("",TAB)_TEXT_DNAME
"RTN","PXRMDLG4",226,0)
 .S:DDIS]"" DNAME=DNAME_" (Disabled)"
"RTN","PXRMDLG4",227,0)
 .S NLINE=NLINE+1
"RTN","PXRMDLG4",228,0)
 .S ^TMP(NODE,$J,NLINE,0)=DNAME
"RTN","PXRMDLG4",229,0)
 .S TEXT=$J("",$L(TEXT))
"RTN","PXRMDLG4",230,0)
 Q
"RTN","PXRMDLG4",231,0)
 ;
"RTN","PXRMDLG4",232,0)
SEQ(SEQ,PIEN) ;Select sequence number to add
"RTN","PXRMDLG4",233,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDLG4",234,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLG4",235,0)
 S SEQ=0
"RTN","PXRMDLG4",236,0)
 S DIR(0)="FA0;1;30"
"RTN","PXRMDLG4",237,0)
 S DIR("A")="Enter a new SEQUENCE NUMBER: "
"RTN","PXRMDLG4",238,0)
 S DIR("?")="Enter new sequence number. For detailed help type ??"
"RTN","PXRMDLG4",239,0)
 S DIR("??")=U_"D HELP^PXRMDLG4(1)"
"RTN","PXRMDLG4",240,0)
 D ^DIR K DIR
"RTN","PXRMDLG4",241,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDLG4",242,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDLG4",243,0)
 ;
"RTN","PXRMDLG4",244,0)
 ;Check that sequence number is new 
"RTN","PXRMDLG4",245,0)
 I $D(^TMP("PXRMDLG4",$J,"SEQ",X)) D  Q
"RTN","PXRMDLG4",246,0)
 .W !,"Sequence number "_X_" already in use."
"RTN","PXRMDLG4",247,0)
 ;
"RTN","PXRMDLG4",248,0)
 ;Then check that the parent is a group or reminder dialog
"RTN","PXRMDLG4",249,0)
 I X["." D  Q:X=""
"RTN","PXRMDLG4",250,0)
 .N CLASS,SUB
"RTN","PXRMDLG4",251,0)
 .;Sequence number of parent
"RTN","PXRMDLG4",252,0)
 .S SUB=$P(X,".",1,$L(X,".")-1)
"RTN","PXRMDLG4",253,0)
 .I $G(SUB)=""!($G(SUB)=0) W !,"Invalid sequence number. A sequence number cannot be less then 1" H 2 Q
"RTN","PXRMDLG4",254,0)
 .;Get IEN of parent dialog or group
"RTN","PXRMDLG4",255,0)
 .S PIEN=$G(^TMP("PXRMDLG4",$J,"SEQ",SUB))
"RTN","PXRMDLG4",256,0)
 .;Validate sequence number
"RTN","PXRMDLG4",257,0)
 .I 'PIEN W !,"Sequence number is not part of an existing group." S X="" Q
"RTN","PXRMDLG4",258,0)
 .;Validate that the parent is a group or reminder dialog
"RTN","PXRMDLG4",259,0)
 .I "RG"'[$P($G(^PXRMD(801.41,PIEN,0)),U,4) D  S X="" Q
"RTN","PXRMDLG4",260,0)
 ..W !,"New sequences can only be added to groups or reminder dialogs"
"RTN","PXRMDLG4",261,0)
 .;Disallow adding elements to national dialogs or groups
"RTN","PXRMDLG4",262,0)
 .I $P($G(^PXMRD(801.41,PIEN,100)),U)="N" D  Q:X=""
"RTN","PXRMDLG4",263,0)
 ..Q:(DUZ(0)="@")&($G(PXRMINST)=1)
"RTN","PXRMDLG4",264,0)
 ..W !,"Elements cannot be added to a national group" S X=""
"RTN","PXRMDLG4",265,0)
 ;
"RTN","PXRMDLG4",266,0)
 ;If adding to top level parent ien is reminder dialog
"RTN","PXRMDLG4",267,0)
 I X?.N S PIEN=PXRMDIEN
"RTN","PXRMDLG4",268,0)
 ;
"RTN","PXRMDLG4",269,0)
 S SEQ=$P(X,".",$L(X,"."))
"RTN","PXRMDLG4",270,0)
 Q
"RTN","PXRMDLG4",271,0)
 ;
"RTN","PXRMDLG4",272,0)
 ;
"RTN","PXRMDLG4",273,0)
HELP(CALL) ;General help text routine.
"RTN","PXRMDLG4",274,0)
 N HTEXT
"RTN","PXRMDLG4",275,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDLG4",276,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDLG4",277,0)
 ;
"RTN","PXRMDLG4",278,0)
 I CALL=1 D
"RTN","PXRMDLG4",279,0)
 .S HTEXT(1)="Sequence numbers can be added at any level. Specify the full"
"RTN","PXRMDLG4",280,0)
 .S HTEXT(2)="number for the level required (e.g. 15.10.20)."
"RTN","PXRMDLG4",281,0)
 ;
"RTN","PXRMDLG4",282,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMDLG4",283,0)
 Q
"RTN","PXRMDLG4",284,0)
 ;
"RTN","PXRMDLG5")
0^29^B23189985
"RTN","PXRMDLG5",1,0)
PXRMDLG5 ; SLC/PJH - Reminder Dialog Edit/Inquiry ;05/17/2006
"RTN","PXRMDLG5",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDLG5",3,0)
 ;
"RTN","PXRMDLG5",4,0)
 ;
"RTN","PXRMDLG5",5,0)
ASK(YESNO,PIEN) ;Confirm
"RTN","PXRMDLG5",6,0)
 K DIR,DIROUT,DIRUT,DNAME,DTOUT,DTYP,DUOUT,TEXT,X,Y
"RTN","PXRMDLG5",7,0)
 N DDATA,DNAME,DTYP
"RTN","PXRMDLG5",8,0)
 S DDATA=$G(^PXRMD(801.41,PIEN,0))
"RTN","PXRMDLG5",9,0)
 ;Parent name and type
"RTN","PXRMDLG5",10,0)
 S DNAME=$P(DDATA,U),DTYP=$P(DDATA,U,4)
"RTN","PXRMDLG5",11,0)
 ;
"RTN","PXRMDLG5",12,0)
 S DIR(0)="YA0"
"RTN","PXRMDLG5",13,0)
 S DIR("A")="Add sequence "_SEQ_" to "
"RTN","PXRMDLG5",14,0)
 I DTYP="G" S DIR("A")=DIR("A")_"group "_DNAME_": "
"RTN","PXRMDLG5",15,0)
 E  S DIR("A")=DIR("A")_"reminder dialog ?: "
"RTN","PXRMDLG5",16,0)
 S DIR("B")="N",DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDLG5",17,0)
 S DIR("??")=U_"D XHLP^PXRMDLG(1)"
"RTN","PXRMDLG5",18,0)
 D ^DIR K DIR
"RTN","PXRMDLG5",19,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDLG5",20,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDLG5",21,0)
 S YESNO=$E(Y(0)) I YESNO'="Y" S DUOUT=1
"RTN","PXRMDLG5",22,0)
 S VALMBCK="R"
"RTN","PXRMDLG5",23,0)
 Q
"RTN","PXRMDLG5",24,0)
 ;
"RTN","PXRMDLG5",25,0)
MSEL(NUM) ;
"RTN","PXRMDLG5",26,0)
 I NUM=4,'$$PATCH^XPDUTL("OR*3.0*243") D EN^DDIOL("THIS SELECTION IS NOT VALID, UNTIL CPRS 27 IS INSTALLED") Q 0
"RTN","PXRMDLG5",27,0)
 Q 1
"RTN","PXRMDLG5",28,0)
 ;
"RTN","PXRMDLG5",29,0)
ALT(DIEN,LEV,DSEQ,NODE,VIEW,NLINE,CNT,ALTLEN) ;
"RTN","PXRMDLG5",30,0)
 ;Display branching logic text in dialog summary view
"RTN","PXRMDLG5",31,0)
 N DATA,DNAM,DTYP,IEN,TERM,TNAME,TSTAT,TEMP
"RTN","PXRMDLG5",32,0)
 S DATA=$G(^PXRMD(801.41,DIEN,49))
"RTN","PXRMDLG5",33,0)
 I '+$P(DATA,U)!($P($G(DATA),U,2)="") Q
"RTN","PXRMDLG5",34,0)
 S TNAME=$P($G(^PXRMD(811.5,$P(DATA,U),0)),U)
"RTN","PXRMDLG5",35,0)
 S TSTAT=$S($P(DATA,U,2)="1":"TRUE",1:"FALSE")
"RTN","PXRMDLG5",36,0)
 I +$P(DATA,U,3)>0 D
"RTN","PXRMDLG5",37,0)
 .S IEN=$P(DATA,U,3),DNAM=$P($G(^PXRMD(801.41,IEN,0)),U)
"RTN","PXRMDLG5",38,0)
 .S DTYP=$S($P($G(^PXRMD(801.41,IEN,0)),U,4)="E":"Element",$P($G(^PXRMD(801.41,IEN,0)),U,4)="G":"Group")
"RTN","PXRMDLG5",39,0)
 I $G(DNAM)="" S TEMP="Suppressed if Reminder Term "_TNAME_" evaluates as "_TSTAT
"RTN","PXRMDLG5",40,0)
 I $G(DNAM)'="" S TEMP="Replaced by "_DNAM_" if Reminder Term "_TNAME_" evaluates as "_TSTAT
"RTN","PXRMDLG5",41,0)
 D TEXT(.NLINES,CNT,ALTLEN,TEMP,NODE)
"RTN","PXRMDLG5",42,0)
 Q
"RTN","PXRMDLG5",43,0)
 ;
"RTN","PXRMDLG5",44,0)
OTERM(DA) ;
"RTN","PXRMDLG5",45,0)
 K OTERM
"RTN","PXRMDLG5",46,0)
 S OTERM=$P($G(^PXRMD(801.41,DA,49)),U) Q
"RTN","PXRMDLG5",47,0)
 ;
"RTN","PXRMDLG5",48,0)
NTERM(DA,OTERM,NTERM) ;
"RTN","PXRMDLG5",49,0)
 I +OTERM=0 S OTERM=$P($G(DA),U)
"RTN","PXRMDLG5",50,0)
 I +NTERM=0 K OTERM Q 2
"RTN","PXRMDLG5",51,0)
 I +OTERM=0,+NTERM>0 K OTERM Q 1
"RTN","PXRMDLG5",52,0)
 I +OTERM'=+NTERM K OTERM Q 0
"RTN","PXRMDLG5",53,0)
 K OTERM
"RTN","PXRMDLG5",54,0)
 Q 1
"RTN","PXRMDLG5",55,0)
 ;
"RTN","PXRMDLG5",56,0)
TERMS(DA,X) ;
"RTN","PXRMDLG5",57,0)
 N TERM
"RTN","PXRMDLG5",58,0)
 S TERM=$P($G(^PXRMD(801.41,DA,49)),U)
"RTN","PXRMDLG5",59,0)
 I +TERM=0 D  Q 0
"RTN","PXRMDLG5",60,0)
 .W !,"Cannot set Reminder Term Status if the Reminder Term field is blank"
"RTN","PXRMDLG5",61,0)
 .H 2
"RTN","PXRMDLG5",62,0)
 I +TERM>0,$G(X)="" Q 2
"RTN","PXRMDLG5",63,0)
 Q 1
"RTN","PXRMDLG5",64,0)
 ;
"RTN","PXRMDLG5",65,0)
BHELP(VALUE) ;
"RTN","PXRMDLG5",66,0)
 N HTEXT
"RTN","PXRMDLG5",67,0)
 D FULL^VALM1
"RTN","PXRMDLG5",68,0)
 ;Help text for Reminder Dialog Branching logic
"RTN","PXRMDLG5",69,0)
 I VALUE=1 D
"RTN","PXRMDLG5",70,0)
 .;Reminder Term field
"RTN","PXRMDLG5",71,0)
 .S HTEXT(1)="Enter a reminder term that will be used to determine if the reminder"
"RTN","PXRMDLG5",72,0)
 .S HTEXT(2)="element/group should be replaced or suppressed if the reminder term evaluation"
"RTN","PXRMDLG5",73,0)
 .S HTEXT(3)="matches the value in the Reminder Term Status field."
"RTN","PXRMDLG5",74,0)
 I VALUE=2 D
"RTN","PXRMDLG5",75,0)
 .;Reminder Term Status field
"RTN","PXRMDLG5",76,0)
 .S HTEXT(1)="Enter either 1 for true or 0 for false. This value will be used with the"
"RTN","PXRMDLG5",77,0)
 .S HTEXT(2)="reminder term field to determine if this item should be replaced with a"
"RTN","PXRMDLG5",78,0)
 .S HTEXT(3)="different element/group defined in the Replacement Element/Group field, or if"
"RTN","PXRMDLG5",79,0)
 .S HTEXT(4)="this item should be suppressed."
"RTN","PXRMDLG5",80,0)
 I VALUE=3 D
"RTN","PXRMDLG5",81,0)
 .;Replacement Element/Group field
"RTN","PXRMDLG5",82,0)
 .S HTEXT(1)="Enter an element/group that will be used as a replacement to thisitem, or"
"RTN","PXRMDLG5",83,0)
 .S HTEXT(2)="leave this field blank to suppress this item if the term evaluation"
"RTN","PXRMDLG5",84,0)
 .S HTEXT(3)="matches the value defined in the term status field. "
"RTN","PXRMDLG5",85,0)
 I VALUE=4 D
"RTN","PXRMDLG5",86,0)
 .;Patient Specific field
"RTN","PXRMDLG5",87,0)
 .S HTEXT(1)="Enter either 1 for true or 0 for false. This value must be set totrue"
"RTN","PXRMDLG5",88,0)
 .S HTEXT(2)="if item in this dialog will be using reminder term to either replace an item"
"RTN","PXRMDLG5",89,0)
 .S HTEXT(3)="or to suppress an item."
"RTN","PXRMDLG5",90,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMDLG5",91,0)
 Q
"RTN","PXRMDLG5",92,0)
 ;
"RTN","PXRMDLG5",93,0)
TEXT(NLINES,CNT,ATLEN,TEMP,NODE) ;
"RTN","PXRMDLG5",94,0)
 N CNT1,NOUT,OUTPUT,WIDHT
"RTN","PXRMDLG5",95,0)
 S WIDTH=IOM-(2+(CNT+ATLEN))
"RTN","PXRMDLG5",96,0)
 S CNT1=1 D FORMATS^PXRMTEXT(1,WIDTH,TEMP,.NOUT,.OUTPUT)
"RTN","PXRMDLG5",97,0)
 I NOUT>0 F CNT1=1:1:NOUT D
"RTN","PXRMDLG5",98,0)
 .S NLINE=NLINE+1,^TMP(NODE,$J,NLINE,0)=$J("",2+(CNT+ATLEN))_OUTPUT(CNT1)
"RTN","PXRMDLG5",99,0)
 Q
"RTN","PXRMDLG5",100,0)
 ;
"RTN","PXRMDLG5",101,0)
INQ(DIEN) ;INQ Inquiry/Print option
"RTN","PXRMDLG5",102,0)
 ;
"RTN","PXRMDLG5",103,0)
 ; Used by 801.41 print templates
"RTN","PXRMDLG5",104,0)
 ; [PXRM REMINDER DIALOG]
"RTN","PXRMDLG5",105,0)
 ; [PXRM DIALOG GROUP]
"RTN","PXRMDLG5",106,0)
 ;
"RTN","PXRMDLG5",107,0)
 N DEF,DEF1,DEF2 D DEF^PXRMRUTL("811.902",.DEF,.DEF1,.DEF2)
"RTN","PXRMDLG5",108,0)
 N NLINE,NODE,NSEL,SUB
"RTN","PXRMDLG5",109,0)
 S NLINE=0,NODE="PXRMDLG4",NSEL=0
"RTN","PXRMDLG5",110,0)
 K ^TMP(NODE,$J)
"RTN","PXRMDLG5",111,0)
 ;
"RTN","PXRMDLG5",112,0)
 ;Components
"RTN","PXRMDLG5",113,0)
 W !!,"      Seq.       Dialog",!
"RTN","PXRMDLG5",114,0)
 D DETAIL^PXRMDLG4(DIEN,"",4,NODE)
"RTN","PXRMDLG5",115,0)
 ;
"RTN","PXRMDLG5",116,0)
 ;Print lines from workfile
"RTN","PXRMDLG5",117,0)
 S SUB=""
"RTN","PXRMDLG5",118,0)
 F  S SUB=$O(^TMP(NODE,$J,SUB)) Q:'SUB  W !,^TMP(NODE,$J,SUB,0)
"RTN","PXRMDLG5",119,0)
 K ^TMP(NODE,$J)
"RTN","PXRMDLG5",120,0)
 Q
"RTN","PXRMDLGZ")
0^163^B41128562
"RTN","PXRMDLGZ",1,0)
PXRMDLGZ ; SLC/PJH - Link reminder to dialog. ;05/31/2006
"RTN","PXRMDLGZ",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDLGZ",3,0)
 ;
"RTN","PXRMDLGZ",4,0)
 ;Called by option PXRM DIALOG/COMPONENT EDIT
"RTN","PXRMDLGZ",5,0)
 ;
"RTN","PXRMDLGZ",6,0)
START N BY,DATA,DDES,DHD,DIC,DNAM,DTYP,FLDS,FR,L,LOGIC,NOW,PNAM,TO,Y
"RTN","PXRMDLGZ",7,0)
 N PXRMBG,PXRMHD,PXRMDIEN,PXRMGTYP,PXRMDTYP,PXRMITEM,PXRMMODE,PXRMNAME
"RTN","PXRMDLGZ",8,0)
 N PXRMTEMP,PXRMTITL,PXRMVIEW
"RTN","PXRMDLGZ",9,0)
 ;Refresh on return
"RTN","PXRMDLGZ",10,0)
 S VALMBCK="R"
"RTN","PXRMDLGZ",11,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMDLGZ",12,0)
 ;Default is display dialog elements
"RTN","PXRMDLGZ",13,0)
 S PXRMDTYP="R",PXRMGTYP="DLGR",PXRMVIEW="AN"
"RTN","PXRMDLGZ",14,0)
 ;Select dialog for display
"RTN","PXRMDLGZ",15,0)
 F  D  Q:'PXRMTEMP
"RTN","PXRMDLGZ",16,0)
 .S PXRMTEMP=""
"RTN","PXRMDLGZ",17,0)
 .D START^PXRMSEL(.PXRMHD,.PXRMGTYP,"PXRMTEMP") Q:'PXRMTEMP
"RTN","PXRMDLGZ",18,0)
 .N X S X="IORESET"
"RTN","PXRMDLGZ",19,0)
 .D ENDR^%ZISS,@(PXRMGTYP_"("_PXRMTEMP_")")
"RTN","PXRMDLGZ",20,0)
END Q
"RTN","PXRMDLGZ",21,0)
 ;
"RTN","PXRMDLGZ",22,0)
 ;Reminder View
"RTN","PXRMDLGZ",23,0)
 ;-------------
"RTN","PXRMDLGZ",24,0)
DLGR(PXRMITEM) ;
"RTN","PXRMDLGZ",25,0)
 N PXRMDIEN,PXRMCS1,PXRMCS2
"RTN","PXRMDLGZ",26,0)
 ;Format headings to include reminder and name
"RTN","PXRMDLGZ",27,0)
 S DATA=$G(^PXD(811.9,PXRMITEM,0)),RNAM=$P(DATA,U),PNAM=$P(DATA,U,3)
"RTN","PXRMDLGZ",28,0)
 S PXRMHD="REMINDER NAME: "_RNAM
"RTN","PXRMDLGZ",29,0)
 ;
"RTN","PXRMDLGZ",30,0)
 ;Dialog History
"RTN","PXRMDLGZ",31,0)
 F  D  Q:'PXRMDIEN
"RTN","PXRMDLGZ",32,0)
 .D START^PXRMDLGH(PXRMITEM,.PXRMDIEN,"PXRMDIEN") Q:'PXRMDIEN
"RTN","PXRMDLGZ",33,0)
 .N PXRMHD,VALMBCK,VALMBG,VALMSG,VIEW,X,XMZ
"RTN","PXRMDLGZ",34,0)
 .S DNAM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U)
"RTN","PXRMDLGZ",35,0)
 .I $P($G(^PXRMD(801.41,PXRMDIEN,0)),U,3)]"" S DNAM=DNAM_" (DISABLED)"
"RTN","PXRMDLGZ",36,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_DNAM
"RTN","PXRMDLGZ",37,0)
 .S PXRMCS1=$$FILE^PXRMEXCS(801.41,PXRMDIEN)
"RTN","PXRMDLGZ",38,0)
 .S X="IORESET"
"RTN","PXRMDLGZ",39,0)
 .D ENDR^%ZISS,EN^VALM("PXRM DIALOG LIST")
"RTN","PXRMDLGZ",40,0)
 .I PXRMDIEN,$D(^PXRMD(801.41,PXRMDIEN,0)) D
"RTN","PXRMDLGZ",41,0)
 ..S PXRMCS2=$$FILE^PXRMEXCS(801.41,PXRMDIEN) Q:+PXRMCS2=0
"RTN","PXRMDLGZ",42,0)
 ..Q:PXRMCS1=PXRMCS2
"RTN","PXRMDLGZ",43,0)
 ..D SEHIST^PXRMUTIL(801.41,"^PXRMD(801,41,",PXRMDIEN)
"RTN","PXRMDLGZ",44,0)
 .W IORESET
"RTN","PXRMDLGZ",45,0)
 .D KILL^%ZISS
"RTN","PXRMDLGZ",46,0)
 Q
"RTN","PXRMDLGZ",47,0)
 ;
"RTN","PXRMDLGZ",48,0)
 ;Edit element/prompt/group
"RTN","PXRMDLGZ",49,0)
 ;-------------------------
"RTN","PXRMDLGZ",50,0)
DLGE(PXRMDIEN) ;
"RTN","PXRMDLGZ",51,0)
 N LOCK,LFIND
"RTN","PXRMDLGZ",52,0)
 ;Check for Uneditable flag
"RTN","PXRMDLGZ",53,0)
 S LOCK=$P($G(^PXRMD(801.41,PXRMTEMP,100)),U,4)
"RTN","PXRMDLGZ",54,0)
 S LFIND=$P($G(^PXRMD(801.41,PXRMTEMP,1)),U,5)
"RTN","PXRMDLGZ",55,0)
 I LOCK=1,$G(LFIND)'="",$G(LFIND)'["ORD",'$G(PXRMINST) D  Q
"RTN","PXRMDLGZ",56,0)
 .W !,"This item can not be edited" H 2
"RTN","PXRMDLGZ",57,0)
 ;
"RTN","PXRMDLGZ",58,0)
 S PXRMHD="Dialog Name: ",PXRMDIEN=PXRMTEMP
"RTN","PXRMDLGZ",59,0)
 ;Format headings to include dialog name
"RTN","PXRMDLGZ",60,0)
 S DATA=$G(^PXRMD(801.41,PXRMDIEN,0)),DDES=$P(DATA,U),DTYP=$P(DATA,U,4)
"RTN","PXRMDLGZ",61,0)
 ;Test
"RTN","PXRMDLGZ",62,0)
 I DTYP="G" D DLG(PXRMDIEN) Q
"RTN","PXRMDLGZ",63,0)
 ;
"RTN","PXRMDLGZ",64,0)
 S PXRMHD=PXRMHD_" "_DDES W PXRMHD,!
"RTN","PXRMDLGZ",65,0)
 ;Edit selected dialog
"RTN","PXRMDLGZ",66,0)
 D EDIT^PXRMDEDT(DTYP,PXRMDIEN,0)
"RTN","PXRMDLGZ",67,0)
 Q
"RTN","PXRMDLGZ",68,0)
 ;
"RTN","PXRMDLGZ",69,0)
 ;Reminder dialog view
"RTN","PXRMDLGZ",70,0)
 ;--------------------
"RTN","PXRMDLGZ",71,0)
DLG(PXRMDIEN) ;
"RTN","PXRMDLGZ",72,0)
 S PXRMDIEN=PXRMTEMP
"RTN","PXRMDLGZ",73,0)
 S PXRMNAME=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U)
"RTN","PXRMDLGZ",74,0)
 S PXRMITEM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U,2)
"RTN","PXRMDLGZ",75,0)
 ;Format headings to include dialog name
"RTN","PXRMDLGZ",76,0)
 S PXRMHD=PXRMHD_PXRMNAME
"RTN","PXRMDLGZ",77,0)
 ;Check if the set is disable and add to header if disabled
"RTN","PXRMDLGZ",78,0)
 I $P(^PXRMD(801.41,PXRMDIEN,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDLGZ",79,0)
 ;Listman option
"RTN","PXRMDLGZ",80,0)
 D EN^VALM("PXRM DIALOG LIST")
"RTN","PXRMDLGZ",81,0)
 W IORESET
"RTN","PXRMDLGZ",82,0)
 D KILL^%ZISS
"RTN","PXRMDLGZ",83,0)
 Q
"RTN","PXRMDLGZ",84,0)
 ;
"RTN","PXRMDLGZ",85,0)
 ;Other subroutines
"RTN","PXRMDLGZ",86,0)
 ;
"RTN","PXRMDLGZ",87,0)
 ;Ask update or no
"RTN","PXRMDLGZ",88,0)
 ;----------------
"RTN","PXRMDLGZ",89,0)
ASK(YESNO) ;
"RTN","PXRMDLGZ",90,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDLGZ",91,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLGZ",92,0)
 S DIR(0)="YA0"
"RTN","PXRMDLGZ",93,0)
 S DIR("A")="LINK THIS REMINDER TO DIALOG - "_$P(PXRMHD,": ",2)_": "
"RTN","PXRMDLGZ",94,0)
 S DIR("B")="Y"
"RTN","PXRMDLGZ",95,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDLGZ",96,0)
 S DIR("??")=U_"D HLP^PXRMDLGY(1)"
"RTN","PXRMDLGZ",97,0)
 D ^DIR K DIR
"RTN","PXRMDLGZ",98,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDLGZ",99,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDLGZ",100,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDLGZ",101,0)
 Q
"RTN","PXRMDLGZ",102,0)
 ;
"RTN","PXRMDLGZ",103,0)
 ;Display dialogs autogenerated from this reminder
"RTN","PXRMDLGZ",104,0)
 ;------------------------------------------------
"RTN","PXRMDLGZ",105,0)
DISP(RIEN) ;
"RTN","PXRMDLGZ",106,0)
 N ARRAY,DSUB,FIRST
"RTN","PXRMDLGZ",107,0)
 ;Get OTHER dialogs
"RTN","PXRMDLGZ",108,0)
 S FIRST=1,DSUB=""
"RTN","PXRMDLGZ",109,0)
 F  S DSUB=$O(^PXRMD(801.41,"AG",RIEN,DSUB)) Q:'DSUB  D
"RTN","PXRMDLGZ",110,0)
 .W !
"RTN","PXRMDLGZ",111,0)
 .D:FIRST
"RTN","PXRMDLGZ",112,0)
 ..W "DIALOGS ALREADY GENERATED FROM THIS REMINDER:",!! S FIRST=0
"RTN","PXRMDLGZ",113,0)
 .W ?20,$P($G(^PXRMD(801.41,DSUB,0)),U)
"RTN","PXRMDLGZ",114,0)
 ;
"RTN","PXRMDLGZ",115,0)
 I 'FIRST W !
"RTN","PXRMDLGZ",116,0)
 ;
"RTN","PXRMDLGZ",117,0)
 Q
"RTN","PXRMDLGZ",118,0)
 ;
"RTN","PXRMDLGZ",119,0)
 ;Display linked reminders
"RTN","PXRMDLGZ",120,0)
 ;------------------------
"RTN","PXRMDLGZ",121,0)
DISPL(DIEN) ;
"RTN","PXRMDLGZ",122,0)
 N ARRAY,DLG,RSUB,FIRST,RNAM
"RTN","PXRMDLGZ",123,0)
 S RSUB=$P($G(^PXRMD(801.41,DIEN,0)),U,2)
"RTN","PXRMDLGZ",124,0)
 I RSUB W !!,"SOURCE REMINDER: "_$P($G(^PXD(811.9,RSUB,0)),U)
"RTN","PXRMDLGZ",125,0)
 ;Linked reminders
"RTN","PXRMDLGZ",126,0)
 S FIRST=1,RNAM=""
"RTN","PXRMDLGZ",127,0)
 F  S RNAM=$O(^PXD(811.9,"B",RNAM)) Q:RNAM=""  D
"RTN","PXRMDLGZ",128,0)
 .S RSUB=$O(^PXD(811.9,"B",RNAM,"")) Q:'RSUB
"RTN","PXRMDLGZ",129,0)
 .S DLG=$P($G(^PXD(811.9,RSUB,51)),U) Q:DLG'=DIEN
"RTN","PXRMDLGZ",130,0)
 .W ! I FIRST W !,"REMINDERS ALREADY LINKED TO THIS DIALOG:",!! S FIRST=0
"RTN","PXRMDLGZ",131,0)
 .W ?18,$P($G(^PXD(811.9,RSUB,0)),U)
"RTN","PXRMDLGZ",132,0)
 Q
"RTN","PXRMDLGZ",133,0)
 ;
"RTN","PXRMDLGZ",134,0)
 ;Link a dialog (called by protocol PXRM DIALOG/REMINDER LINK)
"RTN","PXRMDLGZ",135,0)
 ;-------------
"RTN","PXRMDLGZ",136,0)
LINK(DIEN) ;
"RTN","PXRMDLGZ",137,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDLGZ",138,0)
 .W IORESET
"RTN","PXRMDLGZ",139,0)
 .S VALMBCK="R"
"RTN","PXRMDLGZ",140,0)
 .;Display linked reminders
"RTN","PXRMDLGZ",141,0)
 .D DISPL(DIEN)
"RTN","PXRMDLGZ",142,0)
 .;
"RTN","PXRMDLGZ",143,0)
 .N ANS,DIC,DIR,DLG,LIT1,PNAME,PXRMREM,REM
"RTN","PXRMDLGZ",144,0)
 .S DIC("A")="SELECT A REMINDER TO LINK OR CHANGE: "
"RTN","PXRMDLGZ",145,0)
 .S LIT1="You must select a reminder!"
"RTN","PXRMDLGZ",146,0)
 .D SEL(811.9,"AEQMZ",.PXRMREM)
"RTN","PXRMDLGZ",147,0)
 .Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDLGZ",148,0)
 .S REM=$P(PXRMREM(1),U),PNAME=$P(PXRMREM(1),U,3)
"RTN","PXRMDLGZ",149,0)
 .I PNAME]"" W !!,"REMINDER PRINT NAME: "_PNAME,!
"RTN","PXRMDLGZ",150,0)
 .;Display related dialogs
"RTN","PXRMDLGZ",151,0)
 .D DISP(REM)
"RTN","PXRMDLGZ",152,0)
 .;Check if already linked
"RTN","PXRMDLGZ",153,0)
 .S DLG=$P($G(^PXD(811.9,REM,51)),U)
"RTN","PXRMDLGZ",154,0)
 .;Reconfirm to link reminder
"RTN","PXRMDLGZ",155,0)
 .I 'DLG S ANS="" D ASK(.ANS) Q:ANS'="Y"
"RTN","PXRMDLGZ",156,0)
 .;
"RTN","PXRMDLGZ",157,0)
 .N DA,DR,DIE
"RTN","PXRMDLGZ",158,0)
 .;Edit selected reminder
"RTN","PXRMDLGZ",159,0)
 .S DA=REM
"RTN","PXRMDLGZ",160,0)
 .;Settup local variables
"RTN","PXRMDLGZ",161,0)
 .S DIE="^PXD(811.9,",DR=51
"RTN","PXRMDLGZ",162,0)
 .;If no link force entry
"RTN","PXRMDLGZ",163,0)
 .I 'DLG S DR=DR_"///"_PXRMNAME
"RTN","PXRMDLGZ",164,0)
 .D ^DIE
"RTN","PXRMDLGZ",165,0)
 Q
"RTN","PXRMDLGZ",166,0)
 ;
"RTN","PXRMDLGZ",167,0)
 ;Link a Reminder (called by protocol PXRM DIALOG LINK)
"RTN","PXRMDLGZ",168,0)
 ;---------------
"RTN","PXRMDLGZ",169,0)
RLINK(REM) ;
"RTN","PXRMDLGZ",170,0)
 N DLG
"RTN","PXRMDLGZ",171,0)
 ;Re-display reminder name
"RTN","PXRMDLGZ",172,0)
 W IORESET
"RTN","PXRMDLGZ",173,0)
 W !,PXRMHD
"RTN","PXRMDLGZ",174,0)
 ;
"RTN","PXRMDLGZ",175,0)
 N DA,DR,DIE
"RTN","PXRMDLGZ",176,0)
 ;Edit selected reminder
"RTN","PXRMDLGZ",177,0)
 S DA=REM
"RTN","PXRMDLGZ",178,0)
 ;Settup local variables
"RTN","PXRMDLGZ",179,0)
 S DIE="^PXD(811.9,",DR=51
"RTN","PXRMDLGZ",180,0)
 ;If no link force entry
"RTN","PXRMDLGZ",181,0)
 D ^DIE
"RTN","PXRMDLGZ",182,0)
 Q
"RTN","PXRMDLGZ",183,0)
 ;
"RTN","PXRMDLGZ",184,0)
 ;General help text routine.
"RTN","PXRMDLGZ",185,0)
 ;--------------------------
"RTN","PXRMDLGZ",186,0)
HLP(CALL) ;
"RTN","PXRMDLGZ",187,0)
 N HTEXT
"RTN","PXRMDLGZ",188,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDLGZ",189,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDLGZ",190,0)
 ;
"RTN","PXRMDLGZ",191,0)
 I CALL=1 D
"RTN","PXRMDLGZ",192,0)
 .S HTEXT(1)="Enter Yes to link reminder to this dialog."
"RTN","PXRMDLGZ",193,0)
 I CALL=2 D
"RTN","PXRMDLGZ",194,0)
 .S HTEXT(1)="Enter Yes to link reminder to this dialog."
"RTN","PXRMDLGZ",195,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLGZ",196,0)
 S IC=""
"RTN","PXRMDLGZ",197,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDLGZ",198,0)
 . S X=HTEXT(IC)
"RTN","PXRMDLGZ",199,0)
 . D ^DIWP
"RTN","PXRMDLGZ",200,0)
 W !
"RTN","PXRMDLGZ",201,0)
 S IC=0
"RTN","PXRMDLGZ",202,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDLGZ",203,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDLGZ",204,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLGZ",205,0)
 W !
"RTN","PXRMDLGZ",206,0)
 Q
"RTN","PXRMDLGZ",207,0)
 ;
"RTN","PXRMDLGZ",208,0)
 ;Reminder selection
"RTN","PXRMDLGZ",209,0)
 ;------------------
"RTN","PXRMDLGZ",210,0)
SEL(FILE,MODE,ARRAY) ;
"RTN","PXRMDLGZ",211,0)
 N X,Y,CNT
"RTN","PXRMDLGZ",212,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLGZ",213,0)
 S CNT=0
"RTN","PXRMDLGZ",214,0)
 W !
"RTN","PXRMDLGZ",215,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:CNT>0  Q:(Y=-1)&(CNT>0)
"RTN","PXRMDLGZ",216,0)
 .S DIC=FILE,DIC(0)=MODE
"RTN","PXRMDLGZ",217,0)
 .D ^DIC
"RTN","PXRMDLGZ",218,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMDLGZ",219,0)
 .I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMDLGZ",220,0)
 ..I +Y'=-1 D  Q
"RTN","PXRMDLGZ",221,0)
 ...S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMDLGZ",222,0)
 ..W:CNT=0 !,LIT1
"RTN","PXRMDLGZ",223,0)
 .K DIC
"RTN","PXRMDLGZ",224,0)
 Q
"RTN","PXRMDLGZ",225,0)
 ;
"RTN","PXRMDLGZ",226,0)
 ;Input transform for FINDING ITEM in 801.41
"RTN","PXRMDLGZ",227,0)
XINP(X) ;Taxonomy findings are not allowed for dialog groups
"RTN","PXRMDLGZ",228,0)
 I $P(X,";",2)="PXD(811.2,",$P($G(^PXRMD(801.41,DA,0)),U,4)="G" D  Q 0
"RTN","PXRMDLGZ",229,0)
 .W $C(7),!,"A taxonomy cannot be entered as the finding item for a group"
"RTN","PXRMDLGZ",230,0)
 ;Only applies to MH
"RTN","PXRMDLGZ",231,0)
 I $P(X,";",2)'="YTT(601," Q 1
"RTN","PXRMDLGZ",232,0)
 ;GAF
"RTN","PXRMDLGZ",233,0)
 I $P($G(^YTT(601,$P(X,";"),0)),U)="GAF" Q 1
"RTN","PXRMDLGZ",234,0)
 ;Check if a VALID GUI test
"RTN","PXRMDLGZ",235,0)
 I $P($G(^YTT(601.6,$P(X,";"),0)),U,4)="Y" Q 1
"RTN","PXRMDLGZ",236,0)
 ;else
"RTN","PXRMDLGZ",237,0)
 W *7,!,"This test is not appropriate for the GUI",!
"RTN","PXRMDLGZ",238,0)
 Q 0
"RTN","PXRMDNVA")
0^159^B5718957
"RTN","PXRMDNVA",1,0)
PXRMDNVA ; SLC/PKR - Handle non-VA med findings. ;05/24/2006
"RTN","PXRMDNVA",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDNVA",3,0)
 ;
"RTN","PXRMDNVA",4,0)
 ;===============================================
"RTN","PXRMDNVA",5,0)
GETDATA(DAS,FIEVT) ;Return data for an non-VA med finding.
"RTN","PXRMDNVA",6,0)
 ;DBIA #3793
"RTN","PXRMDNVA",7,0)
 D NVA^PSOPXRM1(DAS,.FIEVT)
"RTN","PXRMDNVA",8,0)
 S FIEVT("VALUE")=FIEVT("STATUS")
"RTN","PXRMDNVA",9,0)
 I $G(FIEVT("START DATE"))="" S FIEVT("START DATE")=FIEVT("DOCUMENTED DATE")
"RTN","PXRMDNVA",10,0)
 S FIEVT("DURATION")=$$DURATION^PXRMDATE(FIEVT("START DATE"),FIEVT("DISCONTINUED DATE"))
"RTN","PXRMDNVA",11,0)
 Q
"RTN","PXRMDNVA",12,0)
 ;
"RTN","PXRMDNVA",13,0)
 ;===============================================
"RTN","PXRMDNVA",14,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate terms.
"RTN","PXRMDNVA",15,0)
 D EVALTERM^PXRMINDX(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL)
"RTN","PXRMDNVA",16,0)
 Q
"RTN","PXRMDNVA",17,0)
 ;
"RTN","PXRMDNVA",18,0)
 ;====================================================
"RTN","PXRMDNVA",19,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMDNVA",20,0)
 N JND,NOUT,TEMP,TEXTOUT
"RTN","PXRMDNVA",21,0)
 S TEMP="Non-VA med: "_IFIEVAL("ORDERABLE ITEM")_" = "
"RTN","PXRMDNVA",22,0)
 S TEMP=TEMP_"("_$$EDATE^PXRMDATE(IFIEVAL("START DATE"))
"RTN","PXRMDNVA",23,0)
 S TEMP=TEMP_" - "_$$EDATE^PXRMDATE(IFIEVAL("STOP DATE"))_")"
"RTN","PXRMDNVA",24,0)
 D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMDNVA",25,0)
 F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDNVA",26,0)
 Q
"RTN","PXRMDNVA",27,0)
 ;
"RTN","PXRMDNVA",28,0)
 ;===============================================
"RTN","PXRMDNVA",29,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMDNVA",30,0)
 ;maintenance output.
"RTN","PXRMDNVA",31,0)
 N DATE,JND,NOUT,TEMP,TEXTOUT
"RTN","PXRMDNVA",32,0)
 S NLINES=NLINES+1
"RTN","PXRMDNVA",33,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Non-VA med: "_IFIEVAL("ORDERABLE ITEM")
"RTN","PXRMDNVA",34,0)
 S DATE=IFIEVAL("START DATE")
"RTN","PXRMDNVA",35,0)
 S TEMP="Start Date: "_$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDNVA",36,0)
 S DATE=IFIEVAL("DISCONTINUED DATE")
"RTN","PXRMDNVA",37,0)
 S DATE=$S(DATE="":"NONE",1:$$EDATE^PXRMDATE(DATE))
"RTN","PXRMDNVA",38,0)
 S TEMP=TEMP_" Discontinued Date: "_DATE
"RTN","PXRMDNVA",39,0)
 I $D(IFIEVAL("DURATION")) S TEMP=TEMP_"  Duration: "_IFIEVAL("DURATION")_" D"
"RTN","PXRMDNVA",40,0)
 S TEMP=TEMP_" Status: "_IFIEVAL("STATUS")_"\\"
"RTN","PXRMDNVA",41,0)
 S TEMP=TEMP_"Dosage Form: "_IFIEVAL("DOSAGE FORM")
"RTN","PXRMDNVA",42,0)
 S TEMP=TEMP_" Dosage: "_IFIEVAL("DOSAGE")
"RTN","PXRMDNVA",43,0)
 S TEMP=TEMP_" Medication Route: "_IFIEVAL("MEDICATION ROUTE")
"RTN","PXRMDNVA",44,0)
 D FORMATS^PXRMTEXT(INDENT+1,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMDNVA",45,0)
 F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDNVA",46,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDNVA",47,0)
 Q
"RTN","PXRMDNVA",48,0)
 ;
"RTN","PXRMDOUT")
0^112^B6790272
"RTN","PXRMDOUT",1,0)
PXRMDOUT ; SLC/PKR - Handle outpatient med findings. ;05/25/2005
"RTN","PXRMDOUT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDOUT",3,0)
 ;
"RTN","PXRMDOUT",4,0)
 ;===============================================
"RTN","PXRMDOUT",5,0)
GETDATA(DAS,FIEVT) ;Return data for an outpatient drug finding.
"RTN","PXRMDOUT",6,0)
 ;DBIA #3793
"RTN","PXRMDOUT",7,0)
 D PSRX^PSOPXRM1(DAS,.FIEVT)
"RTN","PXRMDOUT",8,0)
 S (FIEVT("STATUS"),FIEVT("VALUE"))=$$EXTERNAL^DILFD(52,100,"",FIEVT("STATUS"))
"RTN","PXRMDOUT",9,0)
 S FIEVT("START DATE")=FIEVT("RELEASED DATE/TIME")
"RTN","PXRMDOUT",10,0)
 S FIEVT("STOP DATE")=$$FMADD^XLFDT(FIEVT("START DATE"),FIEVT("DAYS SUPPLY"))
"RTN","PXRMDOUT",11,0)
 S FIEVT("DURATION")=$$DURATION^PXRMDATE(FIEVT("START DATE"),FIEVT("STOP DATE"))
"RTN","PXRMDOUT",12,0)
 Q
"RTN","PXRMDOUT",13,0)
 ;
"RTN","PXRMDOUT",14,0)
 ;===============================================
"RTN","PXRMDOUT",15,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate terms.
"RTN","PXRMDOUT",16,0)
 D EVALTERM^PXRMINDX(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL)
"RTN","PXRMDOUT",17,0)
 Q
"RTN","PXRMDOUT",18,0)
 ;
"RTN","PXRMDOUT",19,0)
 ;===============================================
"RTN","PXRMDOUT",20,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMDOUT",21,0)
 N DRUG,JND,NOUT,TEMP,TEXTOUT
"RTN","PXRMDOUT",22,0)
 S DRUG=IFIEVAL("DISPENSE DRUG")
"RTN","PXRMDOUT",23,0)
 ;DBIA #10043
"RTN","PXRMDOUT",24,0)
 S DRUG=$S(+DRUG=0:DRUG,1:$P(^PSDRUG(DRUG,0),U,1))
"RTN","PXRMDOUT",25,0)
 S TEMP="Outpatient Drug: "_DRUG_" = "
"RTN","PXRMDOUT",26,0)
 S TEMP=TEMP_"("_$$EDATE^PXRMDATE(IFIEVAL("START DATE"))
"RTN","PXRMDOUT",27,0)
 S TEMP=TEMP_" - "_$$EDATE^PXRMDATE(IFIEVAL("STOP DATE"))_")"
"RTN","PXRMDOUT",28,0)
 D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMDOUT",29,0)
 F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDOUT",30,0)
 Q
"RTN","PXRMDOUT",31,0)
 ;
"RTN","PXRMDOUT",32,0)
 ;===============================================
"RTN","PXRMDOUT",33,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMDOUT",34,0)
 ;maintenance output.
"RTN","PXRMDOUT",35,0)
 N DRUG,JND,NOUT,TEMP,TEXTOUT
"RTN","PXRMDOUT",36,0)
 S DRUG=IFIEVAL("DISPENSE DRUG")
"RTN","PXRMDOUT",37,0)
 ;DBIA #10043
"RTN","PXRMDOUT",38,0)
 S DRUG=$S(+DRUG=0:DRUG,1:$P(^PSDRUG(DRUG,0),U,1))
"RTN","PXRMDOUT",39,0)
 S NLINES=NLINES+1
"RTN","PXRMDOUT",40,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Outpatient Medication: "_DRUG
"RTN","PXRMDOUT",41,0)
 S TEMP=$$EDATE^PXRMDATE(IFIEVAL("DATE"))
"RTN","PXRMDOUT",42,0)
 S TEMP=TEMP_" Status: "_IFIEVAL("STATUS")
"RTN","PXRMDOUT",43,0)
 S TEMP=TEMP_" Last release date: "_$$EDATE^PXRMDATE(IFIEVAL("RELEASED DATE/TIME"))
"RTN","PXRMDOUT",44,0)
 S TEMP=TEMP_" Days supply: "_IFIEVAL("DAYS SUPPLY")
"RTN","PXRMDOUT",45,0)
 S TEMP=TEMP_" Start date: "_$$EDATE^PXRMDATE(IFIEVAL("START DATE"))
"RTN","PXRMDOUT",46,0)
 S TEMP=TEMP_" Stop date: "_$$EDATE^PXRMDATE(IFIEVAL("STOP DATE"))
"RTN","PXRMDOUT",47,0)
 I $D(IFIEVAL("DURATION")) S TEMP=TEMP_"  Duration: "_IFIEVAL("DURATION")_" D"
"RTN","PXRMDOUT",48,0)
 D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMDOUT",49,0)
 F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDOUT",50,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDOUT",51,0)
 Q
"RTN","PXRMDOUT",52,0)
 ;
"RTN","PXRMDRCL")
0^172^B6327601
"RTN","PXRMDRCL",1,0)
PXRMDRCL ; SLC/PKR - Handle VA DRUG CLASS findings. ;08/04/2006
"RTN","PXRMDRCL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDRCL",3,0)
 ;
"RTN","PXRMDRCL",4,0)
 ;====================================================
"RTN","PXRMDRCL",5,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate drug class (file #50.605) findings.
"RTN","PXRMDRCL",6,0)
 D EVALFI^PXRMDRGR(DFN,.DEFARR,ENODE,"VAC",.FIEVAL)
"RTN","PXRMDRCL",7,0)
 Q
"RTN","PXRMDRCL",8,0)
 ;
"RTN","PXRMDRCL",9,0)
 ;====================================================
"RTN","PXRMDRCL",10,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate drug class
"RTN","PXRMDRCL",11,0)
 ;(file #50.605) terms.
"RTN","PXRMDRCL",12,0)
 D EVALTERM^PXRMDRGR(DFN,.FINDPA,ENODE,"VAC",.TERMARR,.TFIEVAL)
"RTN","PXRMDRCL",13,0)
 Q
"RTN","PXRMDRCL",14,0)
 ;
"RTN","PXRMDRCL",15,0)
 ;====================================================
"RTN","PXRMDRCL",16,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Evaluate VA Drug Class terms
"RTN","PXRMDRCL",17,0)
 ;for building patient lists.
"RTN","PXRMDRCL",18,0)
 D EVALPL^PXRMDRGR(.FINDPA,ENODE,"VAC",.TERMARR,.PLIST)
"RTN","PXRMDRCL",19,0)
 Q
"RTN","PXRMDRCL",20,0)
 ;
"RTN","PXRMDRCL",21,0)
 ;====================================================
"RTN","PXRMDRCL",22,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMDRCL",23,0)
 N CLASSIEN,DRUGCLAS,FTYPE,IND,PFIEVAL,PNAME
"RTN","PXRMDRCL",24,0)
 S CLASSIEN=$P(IFIEVAL("FINDING"),";",1)
"RTN","PXRMDRCL",25,0)
 ;DBIA #2531
"RTN","PXRMDRCL",26,0)
 S DRUGCLAS=$$CLASS2^PSNAPIS(CLASSIEN)
"RTN","PXRMDRCL",27,0)
 S PNAME=$P(DRUGCLAS,U,1)_"-"_$P(DRUGCLAS,U,2)
"RTN","PXRMDRCL",28,0)
 S NLINES=NLINES+1,TEXT(NLINES)="Drug Class: "_PNAME
"RTN","PXRMDRCL",29,0)
 S IND=0
"RTN","PXRMDRCL",30,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMDRCL",31,0)
 . S TEMP=IFIEVAL(IND,"FINDING")
"RTN","PXRMDRCL",32,0)
 . S FTYPE=$P(TEMP,";",2)
"RTN","PXRMDRCL",33,0)
 . K PFIEVAL M PFIEVAL=IFIEVAL(IND)
"RTN","PXRMDRCL",34,0)
 . I FTYPE="PS(55," D MHVOUT^PXRMDIN(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRCL",35,0)
 . I FTYPE="PS(55NVA," D MHVOUT^PXRMDNVA(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRCL",36,0)
 . I FTYPE="PSRX(" D MHVOUT^PXRMDOUT(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRCL",37,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDRCL",38,0)
 Q
"RTN","PXRMDRCL",39,0)
 ;
"RTN","PXRMDRCL",40,0)
 ;====================================================
"RTN","PXRMDRCL",41,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMDRCL",42,0)
 ;maintenance output.
"RTN","PXRMDRCL",43,0)
 N CLASSIEN,DRUGCLAS,FTYPE,IND,PFIEVAL,TEMP
"RTN","PXRMDRCL",44,0)
 S CLASSIEN=$P(IFIEVAL("FINDING"),";",1)
"RTN","PXRMDRCL",45,0)
 ;DBIA #2531
"RTN","PXRMDRCL",46,0)
 S DRUGCLAS=$$CLASS2^PSNAPIS(CLASSIEN)
"RTN","PXRMDRCL",47,0)
 S TEMP=$P(DRUGCLAS,U,1)_"-"_$P(DRUGCLAS,U,2)
"RTN","PXRMDRCL",48,0)
 S NLINES=NLINES+1
"RTN","PXRMDRCL",49,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Drug Class: "_TEMP
"RTN","PXRMDRCL",50,0)
 S IND=0
"RTN","PXRMDRCL",51,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMDRCL",52,0)
 . S TEMP=IFIEVAL(IND,"FINDING")
"RTN","PXRMDRCL",53,0)
 . S FTYPE=$P(TEMP,";",2)
"RTN","PXRMDRCL",54,0)
 . K PFIEVAL M PFIEVAL=IFIEVAL(IND)
"RTN","PXRMDRCL",55,0)
 . I FTYPE="PS(55," D OUTPUT^PXRMDIN(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRCL",56,0)
 . I FTYPE="PS(55NVA," D OUTPUT^PXRMDNVA(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRCL",57,0)
 . I FTYPE="PSRX(" D OUTPUT^PXRMDOUT(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRCL",58,0)
 Q
"RTN","PXRMDRCL",59,0)
 ;
"RTN","PXRMDRGR")
0^136^B43133634
"RTN","PXRMDRGR",1,0)
PXRMDRGR ; SLC/PKR - Handle groups of drug findings. ;06/12/2006
"RTN","PXRMDRGR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDRGR",3,0)
 ;Groups are drug classes or VA Generic.
"RTN","PXRMDRGR",4,0)
 ;==================================================
"RTN","PXRMDRGR",5,0)
EVALFI(DFN,DEFARR,ENODE,XREF,FIEVAL) ;Evaluate drug group findings.
"RTN","PXRMDRGR",6,0)
 N DRGRIEN,FIEVT,FINDPA,FINDING,NOINDEX
"RTN","PXRMDRGR",7,0)
 S NOINDEX=0
"RTN","PXRMDRGR",8,0)
 I $G(^PXRMINDX(52,"DATE BUILT"))="" D
"RTN","PXRMDRGR",9,0)
 . D NOINDEX^PXRMERRH("D",PXRMITEM,52)
"RTN","PXRMDRGR",10,0)
 . S NOINDEX=1
"RTN","PXRMDRGR",11,0)
 I $G(^PXRMINDX(55,"DATE BUILT"))="" D
"RTN","PXRMDRGR",12,0)
 . D NOINDEX^PXRMERRH("D",PXRMITEM,55)
"RTN","PXRMDRGR",13,0)
 . S NOINDEX=1
"RTN","PXRMDRGR",14,0)
 S DRGRIEN=""
"RTN","PXRMDRGR",15,0)
 F  S DRGRIEN=$O(DEFARR("E",ENODE,DRGRIEN)) Q:+DRGRIEN=0  D
"RTN","PXRMDRGR",16,0)
 . S FINDING=""
"RTN","PXRMDRGR",17,0)
 . F  S FINDING=$O(DEFARR("E",ENODE,DRGRIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDRGR",18,0)
 .. I NOINDEX S FIEVAL(FINDING)=0 Q
"RTN","PXRMDRGR",19,0)
 .. K FIEVT,FINDPA
"RTN","PXRMDRGR",20,0)
 .. M FINDPA=DEFARR(20,FINDING)
"RTN","PXRMDRGR",21,0)
 .. D FIEVAL(DFN,DRGRIEN,.FINDPA,.DEFARR,FINDING,XREF,.FIEVT)
"RTN","PXRMDRGR",22,0)
 .. M FIEVAL(FINDING)=FIEVT
"RTN","PXRMDRGR",23,0)
 .. S FIEVAL(FINDING,"FINDING")=$P(FINDPA(0),U,1)
"RTN","PXRMDRGR",24,0)
 Q
"RTN","PXRMDRGR",25,0)
 ;
"RTN","PXRMDRGR",26,0)
 ;==================================================
"RTN","PXRMDRGR",27,0)
EVALPL(FINDPA,ENODE,XREF,TERMARR,PLIST) ;Evaluate drug group
"RTN","PXRMDRGR",28,0)
 ;terms for building patient lists.
"RTN","PXRMDRGR",29,0)
 N DRGRIEN,NOINDEX,PFINDPA
"RTN","PXRMDRGR",30,0)
 N TEMP,TFINDPA,TFINDING
"RTN","PXRMDRGR",31,0)
 S NOINDEX=0
"RTN","PXRMDRGR",32,0)
 I $G(^PXRMINDX(52,"DATE BUILT"))="" D
"RTN","PXRMDRGR",33,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),52)
"RTN","PXRMDRGR",34,0)
 . S NOINDEX=1
"RTN","PXRMDRGR",35,0)
 I $G(^PXRMINDX(55,"DATE BUILT"))="" D
"RTN","PXRMDRGR",36,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),55)
"RTN","PXRMDRGR",37,0)
 . S NOINDEX=1
"RTN","PXRMDRGR",38,0)
 I NOINDEX Q
"RTN","PXRMDRGR",39,0)
 S DRGRIEN=""
"RTN","PXRMDRGR",40,0)
 F  S DRGRIEN=$O(TERMARR("E",ENODE,DRGRIEN)) Q:+DRGRIEN=0  D
"RTN","PXRMDRGR",41,0)
 . S TFINDING=""
"RTN","PXRMDRGR",42,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,DRGRIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDRGR",43,0)
 .. K PFINDPA,TFINDPA
"RTN","PXRMDRGR",44,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMDRGR",45,0)
 ..;Set the finding parameters.
"RTN","PXRMDRGR",46,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMDRGR",47,0)
 .. D GPLIST(DRGRIEN,.PFINDPA,XREF,.PLIST)
"RTN","PXRMDRGR",48,0)
 Q
"RTN","PXRMDRGR",49,0)
 ;
"RTN","PXRMDRGR",50,0)
 ;==================================================
"RTN","PXRMDRGR",51,0)
EVALTERM(DFN,FINDPA,ENODE,XREF,TERMARR,TFIEVAL) ;Evaluate drug
"RTN","PXRMDRGR",52,0)
 ;group terms.
"RTN","PXRMDRGR",53,0)
 N DRGRIEN,FIEVT,NOINDEX,PFINDPA
"RTN","PXRMDRGR",54,0)
 N TEMP,TFINDPA,TFINDING
"RTN","PXRMDRGR",55,0)
 S NOINDEX=0
"RTN","PXRMDRGR",56,0)
 I $G(^PXRMINDX(52,"DATE BUILT"))="" D
"RTN","PXRMDRGR",57,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),52)
"RTN","PXRMDRGR",58,0)
 . S NOINDEX=1
"RTN","PXRMDRGR",59,0)
 I $G(^PXRMINDX(55,"DATE BUILT"))="" D
"RTN","PXRMDRGR",60,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),55)
"RTN","PXRMDRGR",61,0)
 . S NOINDEX=1
"RTN","PXRMDRGR",62,0)
 S DRGRIEN=""
"RTN","PXRMDRGR",63,0)
 F  S DRGRIEN=$O(TERMARR("E",ENODE,DRGRIEN)) Q:+DRGRIEN=0  D
"RTN","PXRMDRGR",64,0)
 . S TFINDING=""
"RTN","PXRMDRGR",65,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,DRGRIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDRGR",66,0)
 .. I NOINDEX S TFIEVAL(TFINDING)=0 Q
"RTN","PXRMDRGR",67,0)
 .. K FIEVT,PFINDPA,TFINDPA
"RTN","PXRMDRGR",68,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMDRGR",69,0)
 ..;Set the finding parameters.
"RTN","PXRMDRGR",70,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMDRGR",71,0)
 .. D FIEVAL(DFN,DRGRIEN,.PFINDPA,.TERMARR,TFINDING,XREF,.FIEVT)
"RTN","PXRMDRGR",72,0)
 .. M TFIEVAL(TFINDING)=FIEVT
"RTN","PXRMDRGR",73,0)
 .. S TFIEVAL(TFINDING,"FINDING")=$P(TFINDPA(0),U,1)
"RTN","PXRMDRGR",74,0)
 Q
"RTN","PXRMDRGR",75,0)
 ;
"RTN","PXRMDRGR",76,0)
 ;==================================================
"RTN","PXRMDRGR",77,0)
FIEVAL(DFN,DRGRIEN,FINDPA,DEFARR,FINDING,XREF,FIEVAL) ;
"RTN","PXRMDRGR",78,0)
 N DATE,DATEORDR,DRBEG,DREND,DRUG,DRUGIEN,IND,FIEVT,FIEVTL
"RTN","PXRMDRGR",79,0)
 N NOCC,NFOUND,POI,POIBEG,POIEND,POIIEN,RXTYL
"RTN","PXRMDRGR",80,0)
 N SDIR,TDATE,TIND
"RTN","PXRMDRGR",81,0)
 S NOCC=$P(FINDPA(0),U,14)
"RTN","PXRMDRGR",82,0)
 I NOCC="" S NOCC=1
"RTN","PXRMDRGR",83,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMDRGR",84,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMDRGR",85,0)
 ;Determine where we search.
"RTN","PXRMDRGR",86,0)
 D SRXTYL^PXRMRXTY(FINDPA(0),.RXTYL)
"RTN","PXRMDRGR",87,0)
 D GETPDR(DFN,.RXTYL,.DRBEG,.DREND,.POIBEG,.POIEND)
"RTN","PXRMDRGR",88,0)
 I DREND=0,POIEND=0 S FIEVAL=0 Q
"RTN","PXRMDRGR",89,0)
 S (DRUGIEN,NFOUND)=0
"RTN","PXRMDRGR",90,0)
 F  S DRUGIEN=+$O(^PSDRUG(XREF,DRGRIEN,DRUGIEN)) Q:DRUGIEN=0  D
"RTN","PXRMDRGR",91,0)
 . I DRUGIEN'<DRBEG,DRUGIEN'>DREND S DRUG=DRUGIEN
"RTN","PXRMDRGR",92,0)
 . E  S DRUG=0
"RTN","PXRMDRGR",93,0)
 .;DBIA #221
"RTN","PXRMDRGR",94,0)
 . S POIIEN=$P($G(^PSDRUG(DRUGIEN,2)),U,1)
"RTN","PXRMDRGR",95,0)
 . I POIIEN'<POIBEG,POIIEN'>POIEND S POI=POIIEN
"RTN","PXRMDRGR",96,0)
 . E  S POI=0
"RTN","PXRMDRGR",97,0)
 . K FIEVT
"RTN","PXRMDRGR",98,0)
 . D DEVAL^PXRMDRUG(DFN,.FINDPA,.DEFARR,FINDING,.RXTYL,DRUG,POI,.FIEVT)
"RTN","PXRMDRGR",99,0)
 . I FIEVT D
"RTN","PXRMDRGR",100,0)
 .. S IND=0
"RTN","PXRMDRGR",101,0)
 .. F  S IND=+$O(FIEVT(IND)) Q:IND=0  D
"RTN","PXRMDRGR",102,0)
 ... S NFOUND=NFOUND+1,FIEVTL(NFOUND,"DISPENSE DRUG")=DRUGIEN
"RTN","PXRMDRGR",103,0)
 ... M FIEVTL(NFOUND)=FIEVT(IND)
"RTN","PXRMDRGR",104,0)
 ... S DATEORDR(FIEVT(IND,"DATE"),NFOUND)=FIEVT(IND,"FINDING")
"RTN","PXRMDRGR",105,0)
 ...;Don't keep more than NOCC occurrences on the list.
"RTN","PXRMDRGR",106,0)
 ... I NFOUND>NOCC D
"RTN","PXRMDRGR",107,0)
 .... S TDATE=$O(DATEORDR(""),-SDIR),TIND=$O(DATEORDR(TDATE,""))
"RTN","PXRMDRGR",108,0)
 .... K FIEVTL(TIND),DATEORDR(TDATE,TIND)
"RTN","PXRMDRGR",109,0)
 I NFOUND=0 S FIEVAL=0 Q
"RTN","PXRMDRGR",110,0)
 ;Order by date.
"RTN","PXRMDRGR",111,0)
 S DATE="",NFOUND=0
"RTN","PXRMDRGR",112,0)
 F  S DATE=$O(DATEORDR(DATE),SDIR)  Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMDRGR",113,0)
 . S IND=0
"RTN","PXRMDRGR",114,0)
 . F  S IND=$O(DATEORDR(DATE,IND)) Q:(IND="")!(NFOUND=NOCC)  D
"RTN","PXRMDRGR",115,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMDRGR",116,0)
 .. M FIEVAL(NFOUND)=FIEVTL(IND)
"RTN","PXRMDRGR",117,0)
 ;Save the finding result.
"RTN","PXRMDRGR",118,0)
 D SFRES^PXRMUTIL(SDIR,NFOUND,.FIEVAL)
"RTN","PXRMDRGR",119,0)
 Q
"RTN","PXRMDRGR",120,0)
 ;
"RTN","PXRMDRGR",121,0)
 ;==================================================
"RTN","PXRMDRGR",122,0)
GETPDR(DFN,RXTYL,DRBEG,DREND,POIBEG,POIEND) ;Return the beginning drug and 
"RTN","PXRMDRGR",123,0)
 ;ending drug for a patient.
"RTN","PXRMDRGR",124,0)
 N IBEG,IEND,OBEG,OEND
"RTN","PXRMDRGR",125,0)
 I $D(RXTYL("I")) D
"RTN","PXRMDRGR",126,0)
 . S IBEG=+$O(^PXRMINDX(55,"PI",DFN,0))
"RTN","PXRMDRGR",127,0)
 . S IEND=+$O(^PXRMINDX(55,"PI",DFN,""),-1)
"RTN","PXRMDRGR",128,0)
 E  S (IBEG,IEND)=0
"RTN","PXRMDRGR",129,0)
 I $D(RXTYL("O")) D
"RTN","PXRMDRGR",130,0)
 . S OBEG=+$O(^PXRMINDX(52,"PI",DFN,0))
"RTN","PXRMDRGR",131,0)
 . S OEND=+$O(^PXRMINDX(52,"PI",DFN,""),-1)
"RTN","PXRMDRGR",132,0)
 E  S (OBEG,OEND)=0
"RTN","PXRMDRGR",133,0)
 S DRBEG=$S(IBEG<OBEG:IBEG,1:OBEG)
"RTN","PXRMDRGR",134,0)
 S DREND=$S(IEND>OEND:IEND,1:OEND)
"RTN","PXRMDRGR",135,0)
 I $D(RXTYL("N")) D
"RTN","PXRMDRGR",136,0)
 . S POIBEG=+$O(^PXRMINDX("55NVA","PI",DFN,0))
"RTN","PXRMDRGR",137,0)
 . S POIEND=+$O(^PXRMINDX("55NVA","PI",DFN,""),-1)
"RTN","PXRMDRGR",138,0)
 E  S (POIBEG,POIEND)=0
"RTN","PXRMDRGR",139,0)
 Q
"RTN","PXRMDRGR",140,0)
 ;
"RTN","PXRMDRGR",141,0)
 ;==================================================
"RTN","PXRMDRGR",142,0)
GPLIST(DRGRIEN,PFINDPA,XREF,PLIST) ;
"RTN","PXRMDRGR",143,0)
 N DATE,DFN,DRUGIEN,FILENUM,IND,ITEM,NFOUND,NOCC,POI,RXTYL
"RTN","PXRMDRGR",144,0)
 N TF,TEMP,TGLIST,TLIST
"RTN","PXRMDRGR",145,0)
 S TGLIST="GPLIST_PXRMDRGR"
"RTN","PXRMDRGR",146,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMDRGR",147,0)
 ;Determine where we search.
"RTN","PXRMDRGR",148,0)
 D SRXTYL^PXRMRXTY(PFINDPA(0),.RXTYL)
"RTN","PXRMDRGR",149,0)
 S DRUGIEN=0
"RTN","PXRMDRGR",150,0)
 F  S DRUGIEN=$O(^PSDRUG(XREF,DRGRIEN,DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRGR",151,0)
 . ;DBIA #221
"RTN","PXRMDRGR",152,0)
 . S POI=$P($G(^PSDRUG(DRUGIEN,2)),U,1)
"RTN","PXRMDRGR",153,0)
 . I $D(RXTYL("I")) D GPLIST^PXRMINDL(55,"IP",DRUGIEN,.PFINDPA,TGLIST)
"RTN","PXRMDRGR",154,0)
 . I $D(RXTYL("N")),POI'="" D GPLIST^PXRMINDL("55NVA","IP",POI,.PFINDPA,TGLIST)
"RTN","PXRMDRGR",155,0)
 . I $D(RXTYL("O")) D GPLIST^PXRMINDL(52,"IP",DRUGIEN,.PFINDPA,TGLIST)
"RTN","PXRMDRGR",156,0)
 ;Return the NOCC most recent results for each DFN.
"RTN","PXRMDRGR",157,0)
 S NOCC=$P(FINDPA(0),U,14)
"RTN","PXRMDRGR",158,0)
 S NOCC=$S(NOCC<0:-NOCC,NOCC="":1,1:NOCC)
"RTN","PXRMDRGR",159,0)
 F TF=0,1 D
"RTN","PXRMDRGR",160,0)
 . S DFN=0
"RTN","PXRMDRGR",161,0)
 . F  S DFN=$O(^TMP($J,TGLIST,TF,DFN)) Q:DFN=""  D
"RTN","PXRMDRGR",162,0)
 .. K TLIST
"RTN","PXRMDRGR",163,0)
 .. S ITEM=""
"RTN","PXRMDRGR",164,0)
 .. F  S ITEM=$O(^TMP($J,TGLIST,TF,DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMDRGR",165,0)
 ... S NFOUND=""
"RTN","PXRMDRGR",166,0)
 ... F  S NFOUND=$O(^TMP($J,TGLIST,TF,DFN,ITEM,NFOUND)) Q:NFOUND=""  D
"RTN","PXRMDRGR",167,0)
 .... S FILENUM=""
"RTN","PXRMDRGR",168,0)
 .... F  S FILENUM=$O(^TMP($J,TGLIST,TF,DFN,ITEM,NFOUND,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMDRGR",169,0)
 ..... S TEMP=^TMP($J,TGLIST,TF,DFN,ITEM,NFOUND,FILENUM)
"RTN","PXRMDRGR",170,0)
 ..... S DATE=+$P(TEMP,U,3)
"RTN","PXRMDRGR",171,0)
 ..... S TLIST(TF,DATE,ITEM,NFOUND,FILENUM)=""
"RTN","PXRMDRGR",172,0)
 .. S DATE="",NFOUND=0
"RTN","PXRMDRGR",173,0)
 .. F  S DATE=$O(TLIST(TF,DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMDRGR",174,0)
 ... S ITEM=""
"RTN","PXRMDRGR",175,0)
 ... F  S ITEM=$O(TLIST(TF,DATE,ITEM)) Q:(ITEM="")!(NFOUND=NOCC)  D
"RTN","PXRMDRGR",176,0)
 .... S IND=""
"RTN","PXRMDRGR",177,0)
 .... F  S IND=$O(TLIST(TF,DATE,ITEM,IND)) Q:(IND="")!(NFOUND=NOCC)  D
"RTN","PXRMDRGR",178,0)
 ..... S FILENUM=""
"RTN","PXRMDRGR",179,0)
 ..... F  S FILENUM=$O(TLIST(TF,DATE,ITEM,IND,FILENUM)) Q:(FILENUM="")!(NFOUND=NOCC)  D
"RTN","PXRMDRGR",180,0)
 ...... S NFOUND=NFOUND+1
"RTN","PXRMDRGR",181,0)
 ...... S ^TMP($J,PLIST,TF,DFN,ITEM,NFOUND,FILENUM)=^TMP($J,TGLIST,TF,DFN,ITEM,IND,FILENUM)
"RTN","PXRMDRGR",182,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMDRGR",183,0)
 Q
"RTN","PXRMDRGR",184,0)
 ;
"RTN","PXRMDRUG")
0^137^B54195557
"RTN","PXRMDRUG",1,0)
PXRMDRUG ; SLC/PKR - Handle drug findings. ;06/08/2006
"RTN","PXRMDRUG",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMDRUG",3,0)
 ;
"RTN","PXRMDRUG",4,0)
 ;===============================================
"RTN","PXRMDRUG",5,0)
DEVAL(DFN,FINDPA,DEFARR,FINDING,RXTYL,DRUG,POI,FIEVAL) ;Evaluate a drug
"RTN","PXRMDRUG",6,0)
 ;finding.
"RTN","PXRMDRUG",7,0)
 I DRUG=0,POI=0 S FIEVAL=0 Q
"RTN","PXRMDRUG",8,0)
 N DTERM,FIEVT
"RTN","PXRMDRUG",9,0)
 ;Create the pseudo term.
"RTN","PXRMDRUG",10,0)
 S DTERM(0)="DTERM",DTERM("IEN")=0
"RTN","PXRMDRUG",11,0)
 I $D(RXTYL("I")),DRUG>0 D
"RTN","PXRMDRUG",12,0)
 . M DTERM(20,1)=DEFARR(20,FINDING)
"RTN","PXRMDRUG",13,0)
 . S $P(DTERM(20,1,0),U,1)=DRUG_";PS(55,"
"RTN","PXRMDRUG",14,0)
 . S DTERM("E","PS(55,",DRUG,1)=""
"RTN","PXRMDRUG",15,0)
 I $D(RXTYL("O")),DRUG>0 D
"RTN","PXRMDRUG",16,0)
 . M DTERM(20,3)=DEFARR(20,FINDING)
"RTN","PXRMDRUG",17,0)
 . S $P(DTERM(20,3,0),U,1)=DRUG_";PSRX("
"RTN","PXRMDRUG",18,0)
 . S DTERM("E","PSRX(",DRUG,3)=""
"RTN","PXRMDRUG",19,0)
 I $D(RXTYL("N")),POI>0 D
"RTN","PXRMDRUG",20,0)
 . M DTERM(20,2)=DEFARR(20,FINDING)
"RTN","PXRMDRUG",21,0)
 . S $P(DTERM(20,2,0),U,1)=POI_";PS(55NVA,"
"RTN","PXRMDRUG",22,0)
 . S DTERM("E","PS(55NVA,",POI,2)=""
"RTN","PXRMDRUG",23,0)
 K FIEVT
"RTN","PXRMDRUG",24,0)
 D IEVALTER^PXRMTERM(DFN,.FINDPA,.DTERM,1,.FIEVT)
"RTN","PXRMDRUG",25,0)
 M FIEVAL=FIEVT(1)
"RTN","PXRMDRUG",26,0)
 I FIEVAL S FIEVAL("FINDING")=DRUG_";PSDRUG(",FIEVAL("DISPENSE DRUG")=DRUG
"RTN","PXRMDRUG",27,0)
 Q
"RTN","PXRMDRUG",28,0)
 ;
"RTN","PXRMDRUG",29,0)
 ;===============================================
"RTN","PXRMDRUG",30,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate drug findings.
"RTN","PXRMDRUG",31,0)
 N DRUGIEN,DTERM,FIEVT,FINDPA,FINDING
"RTN","PXRMDRUG",32,0)
 N NOINDEX,POI,RXTYL
"RTN","PXRMDRUG",33,0)
 S NOINDEX=0
"RTN","PXRMDRUG",34,0)
 I $G(^PXRMINDX(52,"DATE BUILT"))="" D
"RTN","PXRMDRUG",35,0)
 . D NOINDEX^PXRMERRH("D",PXRMITEM,52)
"RTN","PXRMDRUG",36,0)
 . S NOINDEX=1
"RTN","PXRMDRUG",37,0)
 I $G(^PXRMINDX(55,"DATE BUILT"))="" D
"RTN","PXRMDRUG",38,0)
 . D NOINDEX^PXRMERRH("D",PXRMITEM,55)
"RTN","PXRMDRUG",39,0)
 . S NOINDEX=1
"RTN","PXRMDRUG",40,0)
 S DRUGIEN=""
"RTN","PXRMDRUG",41,0)
 F  S DRUGIEN=$O(DEFARR("E",ENODE,DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRUG",42,0)
 . ;DBIA #221
"RTN","PXRMDRUG",43,0)
 . S POI=$P($G(^PSDRUG(DRUGIEN,2)),U,1)
"RTN","PXRMDRUG",44,0)
 . S FINDING=""
"RTN","PXRMDRUG",45,0)
 . F  S FINDING=$O(DEFARR("E",ENODE,DRUGIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDRUG",46,0)
 .. I NOINDEX S FIEVAL(FINDING)=0 Q
"RTN","PXRMDRUG",47,0)
 .. M FINDPA=DEFARR(20,FINDING)
"RTN","PXRMDRUG",48,0)
 .. K FIEVT,RXTYL
"RTN","PXRMDRUG",49,0)
 ..;Determine where we search.
"RTN","PXRMDRUG",50,0)
 .. D SRXTYL^PXRMRXTY(FINDPA(0),.RXTYL)
"RTN","PXRMDRUG",51,0)
 .. D DEVAL(DFN,.FINDPA,.DEFARR,FINDING,.RXTYL,DRUGIEN,POI,.FIEVT)
"RTN","PXRMDRUG",52,0)
 .. M FIEVAL(FINDING)=FIEVT
"RTN","PXRMDRUG",53,0)
 Q
"RTN","PXRMDRUG",54,0)
 ;
"RTN","PXRMDRUG",55,0)
 ;===============================================
"RTN","PXRMDRUG",56,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Evaluate drug terms for
"RTN","PXRMDRUG",57,0)
 ;building patient lists.
"RTN","PXRMDRUG",58,0)
 N BDT,EDT,DATE,DFN,DRUGIEN,ITEM,FILENUM,IND,LIST,NFOUND,NOCC,NOINDEX
"RTN","PXRMDRUG",59,0)
 N PFINDPA,POI,RXTYL,TEMP,TF,TFINDPA,TFINDING,TGLIST,TLIST
"RTN","PXRMDRUG",60,0)
 S NOINDEX=0
"RTN","PXRMDRUG",61,0)
 I $G(^PXRMINDX(52,"DATE BUILT"))="" D
"RTN","PXRMDRUG",62,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),52)
"RTN","PXRMDRUG",63,0)
 . S NOINDEX=1
"RTN","PXRMDRUG",64,0)
 I $G(^PXRMINDX(55,"DATE BUILT"))="" D
"RTN","PXRMDRUG",65,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),55)
"RTN","PXRMDRUG",66,0)
 . S NOINDEX=1
"RTN","PXRMDRUG",67,0)
 I NOINDEX Q
"RTN","PXRMDRUG",68,0)
 S TGLIST="EVALPL_PXRMDRUG"
"RTN","PXRMDRUG",69,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMDRUG",70,0)
 S DRUGIEN=""
"RTN","PXRMDRUG",71,0)
 F  S DRUGIEN=$O(TERMARR("E",ENODE,DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRUG",72,0)
 . ;DBIA #221
"RTN","PXRMDRUG",73,0)
 . S POI=$P($G(^PSDRUG(DRUGIEN,2)),U,1)
"RTN","PXRMDRUG",74,0)
 . S TFINDING=""
"RTN","PXRMDRUG",75,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,DRUGIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDRUG",76,0)
 .. K PFINDPA,TFINDPA
"RTN","PXRMDRUG",77,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMDRUG",78,0)
 ..;Set the finding parameters.
"RTN","PXRMDRUG",79,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMDRUG",80,0)
 ..;Determine where we search.
"RTN","PXRMDRUG",81,0)
 .. D SRXTYL^PXRMRXTY(PFINDPA(0),.RXTYL)
"RTN","PXRMDRUG",82,0)
 .. I $D(RXTYL("I")) D GPLIST^PXRMINDL(55,"IP",DRUGIEN,.PFINDPA,TGLIST)
"RTN","PXRMDRUG",83,0)
 .. I $D(RXTYL("N")),POI'="" D GPLIST^PXRMINDL("55NVA","IP",POI,.PFINDPA,TGLIST)
"RTN","PXRMDRUG",84,0)
 .. I $D(RXTYL("O")) D GPLIST^PXRMINDL(52,"IP",DRUGIEN,.PFINDPA,TGLIST)
"RTN","PXRMDRUG",85,0)
 ;Return the NOCC most recent results for each DFN.
"RTN","PXRMDRUG",86,0)
 S NOCC=$P(FINDPA(0),U,14)
"RTN","PXRMDRUG",87,0)
 S NOCC=$S(NOCC<0:-NOCC,NOCC="":1,1:NOCC)
"RTN","PXRMDRUG",88,0)
 F TF=0,1 D
"RTN","PXRMDRUG",89,0)
 . S DFN=0
"RTN","PXRMDRUG",90,0)
 . F  S DFN=$O(^TMP($J,TGLIST,TF,DFN)) Q:DFN=""  D
"RTN","PXRMDRUG",91,0)
 .. K TLIST
"RTN","PXRMDRUG",92,0)
 .. S ITEM=""
"RTN","PXRMDRUG",93,0)
 .. F  S ITEM=$O(^TMP($J,TGLIST,TF,DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMDRUG",94,0)
 ... S NFOUND=""
"RTN","PXRMDRUG",95,0)
 ... F  S NFOUND=$O(^TMP($J,TGLIST,TF,DFN,ITEM,NFOUND)) Q:NFOUND=""  D
"RTN","PXRMDRUG",96,0)
 .... S FILENUM=""
"RTN","PXRMDRUG",97,0)
 .... F  S FILENUM=$O(^TMP($J,TGLIST,TF,DFN,ITEM,NFOUND,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMDRUG",98,0)
 ..... S TEMP=^TMP($J,TGLIST,TF,DFN,ITEM,NFOUND,FILENUM)
"RTN","PXRMDRUG",99,0)
 ..... S DATE=+$P(TEMP,U,3)
"RTN","PXRMDRUG",100,0)
 ..... S TLIST(TF,DATE,ITEM,NFOUND,FILENUM)=""
"RTN","PXRMDRUG",101,0)
 .. S DATE="",NFOUND=0
"RTN","PXRMDRUG",102,0)
 .. F  S DATE=$O(TLIST(TF,DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMDRUG",103,0)
 ... S ITEM=""
"RTN","PXRMDRUG",104,0)
 ... F  S ITEM=$O(TLIST(TF,DATE,ITEM)) Q:(ITEM="")!(NFOUND=NOCC)  D
"RTN","PXRMDRUG",105,0)
 .... S IND=""
"RTN","PXRMDRUG",106,0)
 .... F  S IND=$O(TLIST(TF,DATE,ITEM,IND)) Q:(IND="")!(NFOUND=NOCC)  D
"RTN","PXRMDRUG",107,0)
 ..... S FILENUM=""
"RTN","PXRMDRUG",108,0)
 ..... F  S FILENUM=$O(TLIST(TF,DATE,ITEM,IND,FILENUM)) Q:(FILENUM="")!(NFOUND=NOCC)  D
"RTN","PXRMDRUG",109,0)
 ...... S NFOUND=NFOUND+1
"RTN","PXRMDRUG",110,0)
 ...... S ^TMP($J,PLIST,TF,DFN,ITEM,NFOUND,FILENUM)=^TMP($J,TGLIST,TF,DFN,ITEM,IND,FILENUM)
"RTN","PXRMDRUG",111,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMDRUG",112,0)
 Q
"RTN","PXRMDRUG",113,0)
 ;
"RTN","PXRMDRUG",114,0)
 ;===============================================
"RTN","PXRMDRUG",115,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate drug terms.
"RTN","PXRMDRUG",116,0)
 N DATEORDR,DRUGIEN,DTERM,DTFIEVAL,IND,NOINDEX,PFINDPA,POI
"RTN","PXRMDRUG",117,0)
 N RXTYL,TEMP,TFINDING,TFINDPA
"RTN","PXRMDRUG",118,0)
 N DATEORDR,NOCC,SDIR
"RTN","PXRMDRUG",119,0)
 S NOINDEX=0
"RTN","PXRMDRUG",120,0)
 I $G(^PXRMINDX(52,"DATE BUILT"))="" D
"RTN","PXRMDRUG",121,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),52)
"RTN","PXRMDRUG",122,0)
 . S NOINDEX=1
"RTN","PXRMDRUG",123,0)
 I $G(^PXRMINDX(55,"DATE BUILT"))="" D
"RTN","PXRMDRUG",124,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),55)
"RTN","PXRMDRUG",125,0)
 . S NOINDEX=1
"RTN","PXRMDRUG",126,0)
 ;Set NOCC and SDIR.
"RTN","PXRMDRUG",127,0)
 S NOCC=$P(FINDPA(0),U,14)
"RTN","PXRMDRUG",128,0)
 I NOCC="" S NOCC=1
"RTN","PXRMDRUG",129,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMDRUG",130,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMDRUG",131,0)
 S DRUGIEN=""
"RTN","PXRMDRUG",132,0)
 F  S DRUGIEN=$O(TERMARR("E",ENODE,DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRUG",133,0)
 . ;DBIA #221
"RTN","PXRMDRUG",134,0)
 . S POI=$P($G(^PSDRUG(DRUGIEN,2)),U,1)
"RTN","PXRMDRUG",135,0)
 . S TFINDING=""
"RTN","PXRMDRUG",136,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,DRUGIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDRUG",137,0)
 .. S TFIEVAL(TFINDING)=0
"RTN","PXRMDRUG",138,0)
 .. I NOINDEX Q
"RTN","PXRMDRUG",139,0)
 .. K DTERM,DTFIEVAL,PFINDPA,TFINDPA
"RTN","PXRMDRUG",140,0)
 .. S DTERM(0)="DTERM",DTERM("IEN")=0
"RTN","PXRMDRUG",141,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMDRUG",142,0)
 ..;Set the finding parameters.
"RTN","PXRMDRUG",143,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMDRUG",144,0)
 ..;Determine where we search.
"RTN","PXRMDRUG",145,0)
 .. D SRXTYL^PXRMRXTY(PFINDPA(0),.RXTYL)
"RTN","PXRMDRUG",146,0)
 .. I $D(RXTYL("I")) D
"RTN","PXRMDRUG",147,0)
 ... M DTERM(20,1)=TERMARR(20,TFINDING)
"RTN","PXRMDRUG",148,0)
 ... S $P(DTERM(20,1,0),U,1)=DRUGIEN_";PS(55,"
"RTN","PXRMDRUG",149,0)
 ... S DTERM("E","PS(55,",DRUGIEN,1)=""
"RTN","PXRMDRUG",150,0)
 .. I $D(RXTYL("N")),POI'="" D
"RTN","PXRMDRUG",151,0)
 ... M DTERM(20,2)=TERMARR(20,TFINDING)
"RTN","PXRMDRUG",152,0)
 ... S $P(DTERM(20,2,0),U,1)=POI_";PS(55NVA,"
"RTN","PXRMDRUG",153,0)
 ... S DTERM("E","PS(55NVA,",POI,2)=""
"RTN","PXRMDRUG",154,0)
 .. I $D(RXTYL("O")) D
"RTN","PXRMDRUG",155,0)
 ... M DTERM(20,3)=TERMARR(20,TFINDING)
"RTN","PXRMDRUG",156,0)
 ... S $P(DTERM(20,3,0),U,1)=DRUGIEN_";PSRX("
"RTN","PXRMDRUG",157,0)
 ... S DTERM("E","PSRX(",DRUGIEN,3)=""
"RTN","PXRMDRUG",158,0)
 .. D IEVALTER^PXRMTERM(DFN,.PFINDPA,.DTERM,TFINDING,.DTFIEVAL)
"RTN","PXRMDRUG",159,0)
 .. D DORDER^PXRMTERM(.DTFIEVAL,.DATEORDR)
"RTN","PXRMDRUG",160,0)
 .. D COPY^PXRMTERM(NOCC,SDIR,.DTFIEVAL,.DATEORDR,TFINDING,.TFIEVAL)
"RTN","PXRMDRUG",161,0)
 .. I TFIEVAL(TFINDING) S TFIEVAL(TFINDING,"DISPENSE DRUG")=DRUGIEN
"RTN","PXRMDRUG",162,0)
 Q
"RTN","PXRMDRUG",163,0)
 ;
"RTN","PXRMDRUG",164,0)
 ;===============================================
"RTN","PXRMDRUG",165,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMDRUG",166,0)
 N DRUG,DRUGIEN,IND,FTYPE,NAME,PFIEVAL,TEMP
"RTN","PXRMDRUG",167,0)
 S DRUGIEN=IFIEVAL("DISPENSE DRUG")
"RTN","PXRMDRUG",168,0)
 ;DBIA #10043
"RTN","PXRMDRUG",169,0)
 S DRUG=$P(^PSDRUG(DRUGIEN,0),U,1)
"RTN","PXRMDRUG",170,0)
 S NAME="Drug: "_DRUG_" = "
"RTN","PXRMDRUG",171,0)
 S NLINES=NLINES+1
"RTN","PXRMDRUG",172,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Drug: "_DRUG
"RTN","PXRMDRUG",173,0)
 S IND=0
"RTN","PXRMDRUG",174,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMDRUG",175,0)
 . S TEMP=IFIEVAL(IND,"FINDING")
"RTN","PXRMDRUG",176,0)
 . S FTYPE=$P(TEMP,";",2)
"RTN","PXRMDRUG",177,0)
 . K PFIEVAL M PFIEVAL=IFIEVAL(IND)
"RTN","PXRMDRUG",178,0)
 . S PFIEVAL("DISPENSE DRUG")=DRUG
"RTN","PXRMDRUG",179,0)
 . I FTYPE="PS(55," D MHVOUT^PXRMDIN(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRUG",180,0)
 . I FTYPE="PS(55NVA," D MHVOUT^PXRMDNVA(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRUG",181,0)
 . I FTYPE="PSRX(" D MHVOUT^PXRMDOUT(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRUG",182,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDRUG",183,0)
 Q
"RTN","PXRMDRUG",184,0)
 ;
"RTN","PXRMDRUG",185,0)
 ;===============================================
"RTN","PXRMDRUG",186,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMDRUG",187,0)
 ;maintenance output.
"RTN","PXRMDRUG",188,0)
 N DRUG,FTYPE,IND,PFIEVAL,TEMP,TEXTOUT
"RTN","PXRMDRUG",189,0)
 ;DBIA #10043
"RTN","PXRMDRUG",190,0)
 S DRUG=$P(^PSDRUG(IFIEVAL("DISPENSE DRUG"),0),U,1)
"RTN","PXRMDRUG",191,0)
 S NLINES=NLINES+1
"RTN","PXRMDRUG",192,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Drug: "_DRUG
"RTN","PXRMDRUG",193,0)
 S IND=0
"RTN","PXRMDRUG",194,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMDRUG",195,0)
 . S TEMP=IFIEVAL(IND,"FINDING")
"RTN","PXRMDRUG",196,0)
 . S FTYPE=$P(TEMP,";",2)
"RTN","PXRMDRUG",197,0)
 . K PFIEVAL M PFIEVAL=IFIEVAL(IND)
"RTN","PXRMDRUG",198,0)
 . S PFIEVAL("DISPENSE DRUG")=DRUG
"RTN","PXRMDRUG",199,0)
 . I FTYPE="PS(55," D OUTPUT^PXRMDIN(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRUG",200,0)
 . I FTYPE="PS(55NVA," D OUTPUT^PXRMDNVA(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRUG",201,0)
 . I FTYPE="PSRX(" D OUTPUT^PXRMDOUT(INDENT+1,.PFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMDRUG",202,0)
 Q
"RTN","PXRMDRUG",203,0)
 ;
"RTN","PXRMEFED")
0^154^B10643956
"RTN","PXRMEFED",1,0)
PXRMEFED ; SLC/PJH - Extract Counting Editor ;05/10/2006
"RTN","PXRMEFED",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEFED",3,0)
 ;
"RTN","PXRMEFED",4,0)
 ;Main entry point for PXRM COUNTING RULE EDIT/DISPLAY
"RTN","PXRMEFED",5,0)
START(IEN) ;
"RTN","PXRMEFED",6,0)
 N PXRMDONE,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMEFED",7,0)
 S X="IORESET"
"RTN","PXRMEFED",8,0)
 D ENDR^%ZISS
"RTN","PXRMEFED",9,0)
 S VALMCNT=0
"RTN","PXRMEFED",10,0)
 D EN^VALM("PXRM EXTRACT COUNT RULE EDIT")
"RTN","PXRMEFED",11,0)
 Q
"RTN","PXRMEFED",12,0)
 ;
"RTN","PXRMEFED",13,0)
BLDLIST(IEN) ;Build workfile
"RTN","PXRMEFED",14,0)
 N FLDS,GBL,PXRMROOT
"RTN","PXRMEFED",15,0)
 S FLDS="[PXRM EXTRACT COUNTING]"
"RTN","PXRMEFED",16,0)
 S GBL="^TMP(""PXRMEFED"",$J)"
"RTN","PXRMEFED",17,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEFED",18,0)
 S PXRMROOT="^PXRM(810.7,"
"RTN","PXRMEFED",19,0)
 K ^TMP("PXRMEFED",$J)
"RTN","PXRMEFED",20,0)
 D DIP^PXRMUTIL(GBL,IEN,PXRMROOT,FLDS)
"RTN","PXRMEFED",21,0)
 S VALMCNT=$O(^TMP("PXRMEFED",$J,""),-1)
"RTN","PXRMEFED",22,0)
 Q
"RTN","PXRMEFED",23,0)
 ;
"RTN","PXRMEFED",24,0)
ENTRY ;Entry code
"RTN","PXRMEFED",25,0)
 D BLDLIST(IEN)
"RTN","PXRMEFED",26,0)
 Q
"RTN","PXRMEFED",27,0)
 ;
"RTN","PXRMEFED",28,0)
EXIT ;Exit code
"RTN","PXRMEFED",29,0)
 K ^TMP("PXRMEFED",$J)
"RTN","PXRMEFED",30,0)
 K ^TMP("PXRMEFEDH",$J)
"RTN","PXRMEFED",31,0)
 D CLEAN^VALM10
"RTN","PXRMEFED",32,0)
 D FULL^VALM1
"RTN","PXRMEFED",33,0)
 S VALMBCK="Q"
"RTN","PXRMEFED",34,0)
 Q
"RTN","PXRMEFED",35,0)
 ;
"RTN","PXRMEFED",36,0)
HDR ; Header code
"RTN","PXRMEFED",37,0)
 S VALMHDR(1)=""
"RTN","PXRMEFED",38,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEFED",39,0)
 Q
"RTN","PXRMEFED",40,0)
 ;
"RTN","PXRMEFED",41,0)
HLP ;Help code
"RTN","PXRMEFED",42,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMEFED",43,0)
 S SUB="PXRMEFEDH"
"RTN","PXRMEFED",44,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMEFED",45,0)
 Q
"RTN","PXRMEFED",46,0)
 ;
"RTN","PXRMEFED",47,0)
INIT ;Init
"RTN","PXRMEFED",48,0)
 S VALMCNT=0
"RTN","PXRMEFED",49,0)
 Q
"RTN","PXRMEFED",50,0)
 ;
"RTN","PXRMEFED",51,0)
PEXIT ;Protocol exit code
"RTN","PXRMEFED",52,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEFED",53,0)
 ;Reset after page up/down etc
"RTN","PXRMEFED",54,0)
 Q
"RTN","PXRMEFED",55,0)
 ;
"RTN","PXRMEFED",56,0)
ADD ;Add Rule
"RTN","PXRMEFED",57,0)
 N DA,DIC,DONE,DTOUT,DUOUT,DLAYGO,HED,Y
"RTN","PXRMEFED",58,0)
 S HED="ADD EXTRACT COUNTING RULE",DONE=0
"RTN","PXRMEFED",59,0)
 W IORESET,!
"RTN","PXRMEFED",60,0)
 F  D  Q:$D(DTOUT)  Q:DONE
"RTN","PXRMEFED",61,0)
 .S DIC="^PXRM(810.7,"
"RTN","PXRMEFED",62,0)
 .;Set the starting place for additions.
"RTN","PXRMEFED",63,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMEFED",64,0)
 .S DIC(0)="AELMQ",DLAYGO=810.7
"RTN","PXRMEFED",65,0)
 .S DIC("A")="Select EXTRACT COUNTING RULE to add: "
"RTN","PXRMEFED",66,0)
 .D ^DIC
"RTN","PXRMEFED",67,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMEFED",68,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMEFED",69,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMEFED",70,0)
 .I $P(Y,U,3)'=1 W !,"This extract counting rule already exists" Q
"RTN","PXRMEFED",71,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMEFED",72,0)
 .;Edit Extract Counting Rule
"RTN","PXRMEFED",73,0)
 .D EDIT(DA)
"RTN","PXRMEFED",74,0)
 .S:$D(DA) DONE=1
"RTN","PXRMEFED",75,0)
 Q
"RTN","PXRMEFED",76,0)
 ;
"RTN","PXRMEFED",77,0)
EDIT(DA) ;Edit Rule
"RTN","PXRMEFED",78,0)
 I '$$VEDIT^PXRMUTIL("^PXRM(810.7,",DA) D  Q
"RTN","PXRMEFED",79,0)
 .W !!,?5,"VA- and national class rules may not be edited" H 2
"RTN","PXRMEFED",80,0)
 .S VALMBCK="R"
"RTN","PXRMEFED",81,0)
 ;
"RTN","PXRMEFED",82,0)
 Q:'$$LOCK(DA)
"RTN","PXRMEFED",83,0)
 W IORESET
"RTN","PXRMEFED",84,0)
 N CS1,CS2,DIC,DIDEL,DIE,DR,DTOUT,DUOUT,ODA,Y
"RTN","PXRMEFED",85,0)
 ;Save checksum
"RTN","PXRMEFED",86,0)
 S CS1=$$FILE^PXRMEXCS(810.7,DA)
"RTN","PXRMEFED",87,0)
 ;
"RTN","PXRMEFED",88,0)
 S DIE="^PXRM(810.7,",DIDEL=810.7,ODA=DA,DR="[PXRM EXTRACT COUNTING]"
"RTN","PXRMEFED",89,0)
 ;
"RTN","PXRMEFED",90,0)
 ;Edit extract counting rule then unlock
"RTN","PXRMEFED",91,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMEFED",92,0)
 ;Deleted ???
"RTN","PXRMEFED",93,0)
 I '$D(DA) S VALMBCK="Q" Q
"RTN","PXRMEFED",94,0)
 ;
"RTN","PXRMEFED",95,0)
 ;Update edit history
"RTN","PXRMEFED",96,0)
 D
"RTN","PXRMEFED",97,0)
 .S CS2=$$FILE^PXRMEXCS(810.7,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMEFED",98,0)
 .D SEHIST^PXRMUTIL(810.7,DIC,DA)
"RTN","PXRMEFED",99,0)
 ;
"RTN","PXRMEFED",100,0)
 S VALMBCK="R"
"RTN","PXRMEFED",101,0)
 Q
"RTN","PXRMEFED",102,0)
 ;
"RTN","PXRMEFED",103,0)
EFEDIT ;Edit Rule
"RTN","PXRMEFED",104,0)
 D EDIT(IEN) Q:VALMBCK="Q"
"RTN","PXRMEFED",105,0)
 ;
"RTN","PXRMEFED",106,0)
 ;Rebuild Workfile
"RTN","PXRMEFED",107,0)
 D BLDLIST(IEN)
"RTN","PXRMEFED",108,0)
 Q
"RTN","PXRMEFED",109,0)
 ;
"RTN","PXRMEFED",110,0)
EFGRP ;Counting Groups
"RTN","PXRMEFED",111,0)
 D START^PXRMEGM(IEN)
"RTN","PXRMEFED",112,0)
 ;
"RTN","PXRMEFED",113,0)
 ;Rebiuld Workfile
"RTN","PXRMEFED",114,0)
 D BLDLIST(IEN)
"RTN","PXRMEFED",115,0)
 ;
"RTN","PXRMEFED",116,0)
 S VALMBCK="R"
"RTN","PXRMEFED",117,0)
 Q
"RTN","PXRMEFED",118,0)
 ;
"RTN","PXRMEFED",119,0)
LOCK(DA) ;Lock the record
"RTN","PXRMEFED",120,0)
 L +^PXRM(810.7,DA):2 I  Q 1
"RTN","PXRMEFED",121,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMEFED",122,0)
 ;
"RTN","PXRMEFED",123,0)
SCREEN ;validate rule type
"RTN","PXRMEFED",124,0)
 Q
"RTN","PXRMEFED",125,0)
 ;
"RTN","PXRMEFED",126,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMEFED",127,0)
 L -^PXRM(810.7,DA)
"RTN","PXRMEFED",128,0)
 Q
"RTN","PXRMEFM")
0^157^B14152898
"RTN","PXRMEFM",1,0)
PXRMEFM ; SLC/PKR/PJH - Extract Counting Rule Management ;08/03/2006
"RTN","PXRMEFM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEFM",3,0)
 ;
"RTN","PXRMEFM",4,0)
 ;Main entry point for PXRM EXTRACT COUNTING RULES
"RTN","PXRMEFM",5,0)
START(PIEN) ;
"RTN","PXRMEFM",6,0)
 N PXRMDONE,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMEFM",7,0)
 S X="IORESET"
"RTN","PXRMEFM",8,0)
 D ENDR^%ZISS
"RTN","PXRMEFM",9,0)
 S VALMCNT=0
"RTN","PXRMEFM",10,0)
 D EN^VALM("PXRM EXTRACT COUNTING RULES")
"RTN","PXRMEFM",11,0)
 Q
"RTN","PXRMEFM",12,0)
 ;
"RTN","PXRMEFM",13,0)
BLDLIST ;Build workfile
"RTN","PXRMEFM",14,0)
 K ^TMP("PXRMEFM",$J)
"RTN","PXRMEFM",15,0)
 N IEN,IND,PLIST
"RTN","PXRMEFM",16,0)
 D LIST(.PLIST,.IEN,PIEN)
"RTN","PXRMEFM",17,0)
 M ^TMP("PXRMEFM",$J)=PLIST
"RTN","PXRMEFM",18,0)
 S VALMCNT=PLIST("VALMCNT")
"RTN","PXRMEFM",19,0)
 F IND=1:1:VALMCNT S ^TMP("PXRMEFM",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMEFM",20,0)
 Q
"RTN","PXRMEFM",21,0)
 ;
"RTN","PXRMEFM",22,0)
ENTRY ;Entry code
"RTN","PXRMEFM",23,0)
 D BLDLIST,XQORM
"RTN","PXRMEFM",24,0)
 Q
"RTN","PXRMEFM",25,0)
 ;
"RTN","PXRMEFM",26,0)
EXIT ;Exit code
"RTN","PXRMEFM",27,0)
 K ^TMP("PXRMEFM",$J)
"RTN","PXRMEFM",28,0)
 K ^TMP("PXRMEFMH",$J)
"RTN","PXRMEFM",29,0)
 D CLEAN^VALM10
"RTN","PXRMEFM",30,0)
 D FULL^VALM1
"RTN","PXRMEFM",31,0)
 S VALMBCK="Q"
"RTN","PXRMEFM",32,0)
 Q
"RTN","PXRMEFM",33,0)
 ;
"RTN","PXRMEFM",34,0)
HDR ; Header code
"RTN","PXRMEFM",35,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEFM",36,0)
 Q
"RTN","PXRMEFM",37,0)
 ;
"RTN","PXRMEFM",38,0)
HLP ;Help code
"RTN","PXRMEFM",39,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMEFM",40,0)
 S SUB="PXRMEFMH"
"RTN","PXRMEFM",41,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMEFM",42,0)
 Q
"RTN","PXRMEFM",43,0)
 ;
"RTN","PXRMEFM",44,0)
INIT ;Init
"RTN","PXRMEFM",45,0)
 S VALMCNT=0
"RTN","PXRMEFM",46,0)
 Q
"RTN","PXRMEFM",47,0)
 ;
"RTN","PXRMEFM",48,0)
PEXIT ;PXRM EXCH MENU protocol exit code
"RTN","PXRMEFM",49,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEFM",50,0)
 ;Reset after page up/down etc
"RTN","PXRMEFM",51,0)
 D XQORM
"RTN","PXRMEFM",52,0)
 Q
"RTN","PXRMEFM",53,0)
 ;
"RTN","PXRMEFM",54,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXTRACT COUNTING RULE SELECT ENTRY",0))_U_"1:"_VALMCNT
"RTN","PXRMEFM",55,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMEFM",56,0)
 Q
"RTN","PXRMEFM",57,0)
 ;
"RTN","PXRMEFM",58,0)
XSEL ;PXRM EXTRACT COUNTING RULE SELECT ENTRY validation
"RTN","PXRMEFM",59,0)
 N SEL,IEN
"RTN","PXRMEFM",60,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMEFM",61,0)
 ;Remove trailing ,
"RTN","PXRMEFM",62,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMEFM",63,0)
 ;Invalid selection
"RTN","PXRMEFM",64,0)
 I SEL["," D  Q
"RTN","PXRMEFM",65,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMEFM",66,0)
 .S VALMBCK="R"
"RTN","PXRMEFM",67,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMEFM",68,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMEFM",69,0)
 .S VALMBCK="R"
"RTN","PXRMEFM",70,0)
 ;
"RTN","PXRMEFM",71,0)
 ;Get the list ien.
"RTN","PXRMEFM",72,0)
 S IEN=^TMP("PXRMEFM",$J,"IDX",SEL,SEL)
"RTN","PXRMEFM",73,0)
 ;Display/Edit Extract Finding
"RTN","PXRMEFM",74,0)
 D START^PXRMEFED(IEN)
"RTN","PXRMEFM",75,0)
 ;
"RTN","PXRMEFM",76,0)
 D BLDLIST
"RTN","PXRMEFM",77,0)
 ;
"RTN","PXRMEFM",78,0)
 S VALMBCK="R"
"RTN","PXRMEFM",79,0)
 Q
"RTN","PXRMEFM",80,0)
 ;
"RTN","PXRMEFM",81,0)
HELP(CALL) ;General help text routine
"RTN","PXRMEFM",82,0)
 N HTEXT
"RTN","PXRMEFM",83,0)
 I CALL=1 D
"RTN","PXRMEFM",84,0)
 .S HTEXT(1)="Select DR to display or edit a rule."
"RTN","PXRMEFM",85,0)
 .S HTEXT(2)="Select ED to edit a rule"
"RTN","PXRMEFM",86,0)
 ;
"RTN","PXRMEFM",87,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMEFM",88,0)
 Q
"RTN","PXRMEFM",89,0)
 ;
"RTN","PXRMEFM",90,0)
EFADD ;Add Rule Option
"RTN","PXRMEFM",91,0)
 ;
"RTN","PXRMEFM",92,0)
 ;Reset Screen Mode
"RTN","PXRMEFM",93,0)
 W IORESET
"RTN","PXRMEFM",94,0)
 ;
"RTN","PXRMEFM",95,0)
 ;Add Rule
"RTN","PXRMEFM",96,0)
 D ADD^PXRMEFED
"RTN","PXRMEFM",97,0)
 ;
"RTN","PXRMEFM",98,0)
 ;Rebuild Workfile
"RTN","PXRMEFM",99,0)
 D BLDLIST
"RTN","PXRMEFM",100,0)
 ;
"RTN","PXRMEFM",101,0)
 S VALMBCK="R"
"RTN","PXRMEFM",102,0)
 Q
"RTN","PXRMEFM",103,0)
 ;
"RTN","PXRMEFM",104,0)
EFINQ ;Extract Finding Inquiry - PXRM EXTRACT FINDINQ DISPLAY/EDIT entry 
"RTN","PXRMEFM",105,0)
 N IND,FRIEN,VALMY
"RTN","PXRMEFM",106,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEFM",107,0)
 ;
"RTN","PXRMEFM",108,0)
 ;If there is no list quit.
"RTN","PXRMEFM",109,0)
 I '$D(VALMY) Q
"RTN","PXRMEFM",110,0)
 S PXRMDONE=0
"RTN","PXRMEFM",111,0)
 S IND=""
"RTN","PXRMEFM",112,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEFM",113,0)
 .;Get the ien.
"RTN","PXRMEFM",114,0)
 .S FRIEN=^TMP("PXRMEFM",$J,"IDX",IND,IND)
"RTN","PXRMEFM",115,0)
 .D START^PXRMEFED(FRIEN)
"RTN","PXRMEFM",116,0)
 ;
"RTN","PXRMEFM",117,0)
 D BLDLIST
"RTN","PXRMEFM",118,0)
 ;
"RTN","PXRMEFM",119,0)
 S VALMBCK="R"
"RTN","PXRMEFM",120,0)
 Q
"RTN","PXRMEFM",121,0)
 ;
"RTN","PXRMEFM",122,0)
LIST(RLIST,IEN,PIEN) ;Build a list of extract findings for parameter.
"RTN","PXRMEFM",123,0)
 N EPCLASS,IND,FNAME,NAME,PLIST
"RTN","PXRMEFM",124,0)
 ;Build the list in alphabetical order.
"RTN","PXRMEFM",125,0)
 S VALMCNT=0
"RTN","PXRMEFM",126,0)
 S NAME=""
"RTN","PXRMEFM",127,0)
 F  S NAME=$O(^PXRM(810.7,"B",NAME)) Q:NAME=""  D
"RTN","PXRMEFM",128,0)
 .S IND=$O(^PXRM(810.7,"B",NAME,"")) Q:'IND
"RTN","PXRMEFM",129,0)
 .S FNAME=$P($G(^PXRM(810.7,IND,0)),U)
"RTN","PXRMEFM",130,0)
 .S EPCLASS=$P($G(^PXRM(810.7,IND,100)),U)
"RTN","PXRMEFM",131,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMEFM",132,0)
 .S RLIST(VALMCNT,0)=$$FRE(VALMCNT,FNAME,EPCLASS)
"RTN","PXRMEFM",133,0)
 .S IEN(VALMCNT)=IND
"RTN","PXRMEFM",134,0)
 S RLIST("VALMCNT")=VALMCNT
"RTN","PXRMEFM",135,0)
 Q
"RTN","PXRMEFM",136,0)
 ;
"RTN","PXRMEFM",137,0)
FRE(NUMBER,NAME,CLASS) ;Format  entry number, name
"RTN","PXRMEFM",138,0)
 ;and date packed.
"RTN","PXRMEFM",139,0)
 N TCLASS,TEMP,TNAME,TSOURCE
"RTN","PXRMEFM",140,0)
 S TEMP=$$RJ^XLFSTR(NUMBER,5," ")
"RTN","PXRMEFM",141,0)
 S TNAME=$E(NAME,1,46)
"RTN","PXRMEFM",142,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(TNAME,60," ")
"RTN","PXRMEFM",143,0)
 S TCLASS=$S(CLASS="N":"NATIONAL",CLASS="V":"VISN",1:"LOCAL")
"RTN","PXRMEFM",144,0)
 S TEMP=TEMP_"  "_TCLASS
"RTN","PXRMEFM",145,0)
 Q TEMP
"RTN","PXRMEFM",146,0)
 ;
"RTN","PXRMEGED")
0^153^B10382097
"RTN","PXRMEGED",1,0)
PXRMEGED ; SLC/PJH - Extract Counting Group Editor ;08/03/2006
"RTN","PXRMEGED",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEGED",3,0)
 ;
"RTN","PXRMEGED",4,0)
 ;Main entry point for PXRM EXTRACT COUNTING GRP EDIT
"RTN","PXRMEGED",5,0)
START(IEN) ;
"RTN","PXRMEGED",6,0)
 N PXRMDONE,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMEGED",7,0)
 S X="IORESET"
"RTN","PXRMEGED",8,0)
 D ENDR^%ZISS
"RTN","PXRMEGED",9,0)
 S VALMCNT=0
"RTN","PXRMEGED",10,0)
 D EN^VALM("PXRM EXTRACT COUNTING GRP EDIT")
"RTN","PXRMEGED",11,0)
 Q
"RTN","PXRMEGED",12,0)
 ;
"RTN","PXRMEGED",13,0)
BLDLIST(IEN) ;Build workfile
"RTN","PXRMEGED",14,0)
 N FLDS,GBL,PXRMROOT
"RTN","PXRMEGED",15,0)
 S FLDS="[PXRM EXTRACT COUNTING GROUP]"
"RTN","PXRMEGED",16,0)
 S GBL="^TMP(""PXRMEGED"",$J)"
"RTN","PXRMEGED",17,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEGED",18,0)
 S PXRMROOT="^PXRM(810.8,"
"RTN","PXRMEGED",19,0)
 K ^TMP("PXRMEGED",$J)
"RTN","PXRMEGED",20,0)
 D DIP^PXRMUTIL(GBL,IEN,PXRMROOT,FLDS)
"RTN","PXRMEGED",21,0)
 S VALMCNT=$O(^TMP("PXRMEGED",$J,""),-1)
"RTN","PXRMEGED",22,0)
 Q
"RTN","PXRMEGED",23,0)
 ;
"RTN","PXRMEGED",24,0)
ENTRY ;Entry code
"RTN","PXRMEGED",25,0)
 D BLDLIST(IEN)
"RTN","PXRMEGED",26,0)
 Q
"RTN","PXRMEGED",27,0)
 ;
"RTN","PXRMEGED",28,0)
EXIT ;Exit code
"RTN","PXRMEGED",29,0)
 K ^TMP("PXRMEGED",$J)
"RTN","PXRMEGED",30,0)
 K ^TMP("PXRMEGEDH",$J)
"RTN","PXRMEGED",31,0)
 D CLEAN^VALM10
"RTN","PXRMEGED",32,0)
 D FULL^VALM1
"RTN","PXRMEGED",33,0)
 S VALMBCK="Q"
"RTN","PXRMEGED",34,0)
 Q
"RTN","PXRMEGED",35,0)
 ;
"RTN","PXRMEGED",36,0)
HDR ; Header code
"RTN","PXRMEGED",37,0)
 S VALMHDR(1)=""
"RTN","PXRMEGED",38,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEGED",39,0)
 Q
"RTN","PXRMEGED",40,0)
 ;
"RTN","PXRMEGED",41,0)
HLP ;Help code
"RTN","PXRMEGED",42,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMEGED",43,0)
 S SUB="PXRMEGEDH"
"RTN","PXRMEGED",44,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMEGED",45,0)
 Q
"RTN","PXRMEGED",46,0)
 ;
"RTN","PXRMEGED",47,0)
INIT ;Init
"RTN","PXRMEGED",48,0)
 S VALMCNT=0
"RTN","PXRMEGED",49,0)
 Q
"RTN","PXRMEGED",50,0)
 ;
"RTN","PXRMEGED",51,0)
PEXIT ;PXRM EXCH MENU protocol exit code
"RTN","PXRMEGED",52,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEGED",53,0)
 ;Reset after page up/down etc
"RTN","PXRMEGED",54,0)
 Q
"RTN","PXRMEGED",55,0)
 ;
"RTN","PXRMEGED",56,0)
ADD ;Add Rule
"RTN","PXRMEGED",57,0)
 N DA,DIC,DONE,DTOUT,DUOUT,DLAYGO,HED,Y
"RTN","PXRMEGED",58,0)
 S HED="ADD EXTRACT COUNTING GROUP",DONE=0
"RTN","PXRMEGED",59,0)
 W IORESET,!
"RTN","PXRMEGED",60,0)
 F  D  Q:$D(DTOUT)  Q:DONE
"RTN","PXRMEGED",61,0)
 .S DIC="^PXRM(810.8,"
"RTN","PXRMEGED",62,0)
 .;Set the starting place for additions.
"RTN","PXRMEGED",63,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMEGED",64,0)
 .S DIC(0)="AELMQ",DLAYGO=810.8
"RTN","PXRMEGED",65,0)
 .S DIC("A")="Select EXTRACT COUNTING GROUP to add: "
"RTN","PXRMEGED",66,0)
 .D ^DIC
"RTN","PXRMEGED",67,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMEGED",68,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMEGED",69,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMEGED",70,0)
 .I $P(Y,U,3)'=1 W !,"This extract counting group name already exists" Q
"RTN","PXRMEGED",71,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMEGED",72,0)
 .;Edit Extract Counting Group
"RTN","PXRMEGED",73,0)
 .D EDIT(DA)
"RTN","PXRMEGED",74,0)
 .S:$D(DA) DONE=1,GROUP(DA)=""
"RTN","PXRMEGED",75,0)
 Q
"RTN","PXRMEGED",76,0)
 ;
"RTN","PXRMEGED",77,0)
EDIT(DA) ;Edit Rule
"RTN","PXRMEGED",78,0)
 I '$$VEDIT^PXRMUTIL("^PXRM(810.8,",DA) D  Q
"RTN","PXRMEGED",79,0)
 .W !!,?5,"VA- and national class rules may not be edited" H 2
"RTN","PXRMEGED",80,0)
 .S VALMBCK="R"
"RTN","PXRMEGED",81,0)
 ;
"RTN","PXRMEGED",82,0)
 Q:'$$LOCK(DA)
"RTN","PXRMEGED",83,0)
 W IORESET
"RTN","PXRMEGED",84,0)
 N CS1,CS2,DIC,DIDEL,DIE,DR,DTOUT,DUOUT,ODA,Y
"RTN","PXRMEGED",85,0)
 ;Save checksum
"RTN","PXRMEGED",86,0)
 S CS1=$$FILE^PXRMEXCS(810.8,DA)
"RTN","PXRMEGED",87,0)
 ;
"RTN","PXRMEGED",88,0)
 S DIE="^PXRM(810.8,",DIDEL=810.8,ODA=DA,DR="[PXRM EXTRACT COUNTING GROUP]"
"RTN","PXRMEGED",89,0)
 ;
"RTN","PXRMEGED",90,0)
 ;Edit extract counting group then unlock
"RTN","PXRMEGED",91,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMEGED",92,0)
 ;Deleted ???
"RTN","PXRMEGED",93,0)
 I '$D(DA) S VALMBCK="Q" Q
"RTN","PXRMEGED",94,0)
 ;
"RTN","PXRMEGED",95,0)
 ;Update edit history
"RTN","PXRMEGED",96,0)
 D
"RTN","PXRMEGED",97,0)
 .S CS2=$$FILE^PXRMEXCS(810.8,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMEGED",98,0)
 .D SEHIST^PXRMUTIL(810.8,DIC,DA)
"RTN","PXRMEGED",99,0)
 ;
"RTN","PXRMEGED",100,0)
 S VALMBCK="R"
"RTN","PXRMEGED",101,0)
 Q
"RTN","PXRMEGED",102,0)
 ;
"RTN","PXRMEGED",103,0)
EGEDIT ;Edit Rule
"RTN","PXRMEGED",104,0)
 D EDIT(IEN) Q:VALMBCK="Q"
"RTN","PXRMEGED",105,0)
 ;
"RTN","PXRMEGED",106,0)
 ;Rebuild Workfile
"RTN","PXRMEGED",107,0)
 D BLDLIST(IEN)
"RTN","PXRMEGED",108,0)
 Q
"RTN","PXRMEGED",109,0)
 ;
"RTN","PXRMEGED",110,0)
LOCK(DA) ;Lock the record
"RTN","PXRMEGED",111,0)
 L +^PXRM(810.7,DA):0 I  Q 1
"RTN","PXRMEGED",112,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMEGED",113,0)
 ;
"RTN","PXRMEGED",114,0)
SCREEN ;validate rule type
"RTN","PXRMEGED",115,0)
 Q
"RTN","PXRMEGED",116,0)
 ;
"RTN","PXRMEGED",117,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMEGED",118,0)
 L -^PXRM(810.7,DA)
"RTN","PXRMEGED",119,0)
 Q
"RTN","PXRMEGM")
0^155^B19306296
"RTN","PXRMEGM",1,0)
PXRMEGM ; SLC/PKR/PJH - Extract Counting Group Management ;08/03/2006
"RTN","PXRMEGM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEGM",3,0)
 ;
"RTN","PXRMEGM",4,0)
 ;Main entry point for PXRM EXTRACT COUNTING GROUPS
"RTN","PXRMEGM",5,0)
START(EFIEN) ;
"RTN","PXRMEGM",6,0)
 N EFCLASS,EFNAME,PXRMDONE,GROUP
"RTN","PXRMEGM",7,0)
 N VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMEGM",8,0)
 S X="IORESET"
"RTN","PXRMEGM",9,0)
 D ENDR^%ZISS
"RTN","PXRMEGM",10,0)
 S VALMCNT=0
"RTN","PXRMEGM",11,0)
 I EFIEN D
"RTN","PXRMEGM",12,0)
 .S EFNAME=$P($G(^PXRM(810.7,EFIEN,0)),U)
"RTN","PXRMEGM",13,0)
 .S EFCLASS=$P($G(^PXRM(810.7,EFIEN,100)),U)
"RTN","PXRMEGM",14,0)
 .S EFCLASS=$S(EFCLASS="N":"National",EFCLASS="V":"VISN",1:"Local")
"RTN","PXRMEGM",15,0)
 D EN^VALM("PXRM EXTRACT COUNTING GROUPS")
"RTN","PXRMEGM",16,0)
 Q
"RTN","PXRMEGM",17,0)
 ;
"RTN","PXRMEGM",18,0)
BLDLIST ;Build workfile
"RTN","PXRMEGM",19,0)
 K ^TMP("PXRMEGM",$J)
"RTN","PXRMEGM",20,0)
 N IEN,IND,PLIST
"RTN","PXRMEGM",21,0)
 D LIST(.PLIST,.IEN,EFIEN)
"RTN","PXRMEGM",22,0)
 M ^TMP("PXRMEGM",$J)=PLIST
"RTN","PXRMEGM",23,0)
 S VALMCNT=PLIST("VALMCNT")
"RTN","PXRMEGM",24,0)
 F IND=1:1:VALMCNT D
"RTN","PXRMEGM",25,0)
 .S ^TMP("PXRMEGM",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMEGM",26,0)
 Q
"RTN","PXRMEGM",27,0)
 ;
"RTN","PXRMEGM",28,0)
ENTRY ;Entry code
"RTN","PXRMEGM",29,0)
 D BLDLIST,XQORM
"RTN","PXRMEGM",30,0)
 Q
"RTN","PXRMEGM",31,0)
 ;
"RTN","PXRMEGM",32,0)
EXIT ;Exit code
"RTN","PXRMEGM",33,0)
 K ^TMP("PXRMEGM",$J)
"RTN","PXRMEGM",34,0)
 K ^TMP("PXRMEGMH",$J)
"RTN","PXRMEGM",35,0)
 D CLEAN^VALM10
"RTN","PXRMEGM",36,0)
 D FULL^VALM1
"RTN","PXRMEGM",37,0)
 S VALMBCK="Q"
"RTN","PXRMEGM",38,0)
 Q
"RTN","PXRMEGM",39,0)
 ;
"RTN","PXRMEGM",40,0)
HDR ; Header code
"RTN","PXRMEGM",41,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions" Q:'EFIEN
"RTN","PXRMEGM",42,0)
 S VALMHDR(1)="Extract Finding: "_EFNAME
"RTN","PXRMEGM",43,0)
 S VALMHDR(2)="          Class: "_EFCLASS
"RTN","PXRMEGM",44,0)
 Q
"RTN","PXRMEGM",45,0)
 ;
"RTN","PXRMEGM",46,0)
HLP ;Help code
"RTN","PXRMEGM",47,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMEGM",48,0)
 S SUB="PXRMEGMH"
"RTN","PXRMEGM",49,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMEGM",50,0)
 Q
"RTN","PXRMEGM",51,0)
 ;
"RTN","PXRMEGM",52,0)
INIT ;Init
"RTN","PXRMEGM",53,0)
 S VALMCNT=0
"RTN","PXRMEGM",54,0)
 Q
"RTN","PXRMEGM",55,0)
 ;
"RTN","PXRMEGM",56,0)
PEXIT ;Protocol exit code
"RTN","PXRMEGM",57,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEGM",58,0)
 ;Reset after page up/down etc
"RTN","PXRMEGM",59,0)
 D XQORM
"RTN","PXRMEGM",60,0)
 Q
"RTN","PXRMEGM",61,0)
 ;
"RTN","PXRMEGM",62,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXTRACT COUNTING GROUP SELECT ENTRY",0))_U_"1:"_VALMCNT
"RTN","PXRMEGM",63,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMEGM",64,0)
 Q
"RTN","PXRMEGM",65,0)
 ;
"RTN","PXRMEGM",66,0)
XSEL ;PXRM EXTRACT COUNTING GROUP SELECT ENTRY validation
"RTN","PXRMEGM",67,0)
 N SEL,IEN
"RTN","PXRMEGM",68,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMEGM",69,0)
 ;Remove trailing ,
"RTN","PXRMEGM",70,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMEGM",71,0)
 ;Invalid selection
"RTN","PXRMEGM",72,0)
 I SEL["," D  Q
"RTN","PXRMEGM",73,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMEGM",74,0)
 .S VALMBCK="R"
"RTN","PXRMEGM",75,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMEGM",76,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMEGM",77,0)
 .S VALMBCK="R"
"RTN","PXRMEGM",78,0)
 ;
"RTN","PXRMEGM",79,0)
 ;Get the list ien.
"RTN","PXRMEGM",80,0)
 S IEN=^TMP("PXRMEGM",$J,"IDX",SEL,SEL)
"RTN","PXRMEGM",81,0)
 ;Display/Edit Extract Counting Group
"RTN","PXRMEGM",82,0)
 D START^PXRMEGED(IEN)
"RTN","PXRMEGM",83,0)
 ;
"RTN","PXRMEGM",84,0)
 D BLDLIST
"RTN","PXRMEGM",85,0)
 ;
"RTN","PXRMEGM",86,0)
 S VALMBCK="R"
"RTN","PXRMEGM",87,0)
 Q
"RTN","PXRMEGM",88,0)
 ;
"RTN","PXRMEGM",89,0)
HELP(CALL) ;General help text routine
"RTN","PXRMEGM",90,0)
 N HTEXT
"RTN","PXRMEGM",91,0)
 I CALL=1 D
"RTN","PXRMEGM",92,0)
 .S HTEXT(1)="Select DE to display or edit a rule."
"RTN","PXRMEGM",93,0)
 .S HTEXT(2)="Select ED to edit a rule"
"RTN","PXRMEGM",94,0)
 ;
"RTN","PXRMEGM",95,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMEGM",96,0)
 Q
"RTN","PXRMEGM",97,0)
 ;
"RTN","PXRMEGM",98,0)
EGADD ;Add Rule Option
"RTN","PXRMEGM",99,0)
 ;
"RTN","PXRMEGM",100,0)
 ;Reset Screen Mode
"RTN","PXRMEGM",101,0)
 W IORESET
"RTN","PXRMEGM",102,0)
 ;
"RTN","PXRMEGM",103,0)
 ;Add Rule
"RTN","PXRMEGM",104,0)
 D ADD^PXRMEGED
"RTN","PXRMEGM",105,0)
 ;
"RTN","PXRMEGM",106,0)
 ;Rebuild Workfile
"RTN","PXRMEGM",107,0)
 D BLDLIST
"RTN","PXRMEGM",108,0)
 ;
"RTN","PXRMEGM",109,0)
 S VALMBCK="R"
"RTN","PXRMEGM",110,0)
 Q
"RTN","PXRMEGM",111,0)
 ;
"RTN","PXRMEGM",112,0)
EGINQ ;Counting Group Inquiry - PXRM EXTRACT COUNTING GROUP DISPLAY/EDIT entry 
"RTN","PXRMEGM",113,0)
 N IND,FGIEN,VALMY
"RTN","PXRMEGM",114,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEGM",115,0)
 ;
"RTN","PXRMEGM",116,0)
 ;If there is no list quit.
"RTN","PXRMEGM",117,0)
 I '$D(VALMY) Q
"RTN","PXRMEGM",118,0)
 S PXRMDONE=0
"RTN","PXRMEGM",119,0)
 S IND=""
"RTN","PXRMEGM",120,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEGM",121,0)
 .;Get the ien.
"RTN","PXRMEGM",122,0)
 .S FGIEN=^TMP("PXRMEGM",$J,"IDX",IND,IND)
"RTN","PXRMEGM",123,0)
 .D START^PXRMEGED(FGIEN)
"RTN","PXRMEGM",124,0)
 ;
"RTN","PXRMEGM",125,0)
 D BLDLIST
"RTN","PXRMEGM",126,0)
 ;
"RTN","PXRMEGM",127,0)
 S VALMBCK="R"
"RTN","PXRMEGM",128,0)
 Q
"RTN","PXRMEGM",129,0)
 ;
"RTN","PXRMEGM",130,0)
LIST(RLIST,IEN,EFIEN) ;Build a list of extract counting groups for 
"RTN","PXRMEGM",131,0)
 ;extract definition.
"RTN","PXRMEGM",132,0)
 N EPCLASS,IND,FNAME,NAME,PLIST
"RTN","PXRMEGM",133,0)
 ;If called for a selected extract finding build list of groups
"RTN","PXRMEGM",134,0)
 I EFIEN D
"RTN","PXRMEGM",135,0)
 .N SUB,FGIEN
"RTN","PXRMEGM",136,0)
 .S SUB=0
"RTN","PXRMEGM",137,0)
 .F  S SUB=$O(^PXRM(810.7,EFIEN,10,SUB)) Q:'SUB  D
"RTN","PXRMEGM",138,0)
 ..S FGIEN=$P($G(^PXRM(810.7,EFIEN,10,SUB,0)),U,2) Q:'FGIEN
"RTN","PXRMEGM",139,0)
 ..S GROUP(FGIEN)=""
"RTN","PXRMEGM",140,0)
 ;
"RTN","PXRMEGM",141,0)
 ;Build the list in alphabetical order.
"RTN","PXRMEGM",142,0)
 S VALMCNT=0
"RTN","PXRMEGM",143,0)
 S NAME=""
"RTN","PXRMEGM",144,0)
 F  S NAME=$O(^PXRM(810.8,"B",NAME)) Q:NAME=""  D
"RTN","PXRMEGM",145,0)
 .S IND=$O(^PXRM(810.8,"B",NAME,"")) Q:'IND
"RTN","PXRMEGM",146,0)
 .;For extract counting rule only include finding counting groups
"RTN","PXRMEGM",147,0)
 .I EFIEN,'$D(GROUP(IND)) Q
"RTN","PXRMEGM",148,0)
 .S FNAME=$P($G(^PXRM(810.8,IND,0)),U)
"RTN","PXRMEGM",149,0)
 .S EPCLASS=$P($G(^PXRM(810.8,IND,100)),U)
"RTN","PXRMEGM",150,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMEGM",151,0)
 .S RLIST(VALMCNT,0)=$$FRE(VALMCNT,FNAME,EPCLASS)
"RTN","PXRMEGM",152,0)
 .S IEN(VALMCNT)=IND
"RTN","PXRMEGM",153,0)
 S RLIST("VALMCNT")=VALMCNT
"RTN","PXRMEGM",154,0)
 Q
"RTN","PXRMEGM",155,0)
 ;
"RTN","PXRMEGM",156,0)
FRE(NUMBER,NAME,CLASS) ;Format  entry number, name
"RTN","PXRMEGM",157,0)
 ;and date packed.
"RTN","PXRMEGM",158,0)
 N TCLASS,TEMP,TNAME,TSOURCE
"RTN","PXRMEGM",159,0)
 S TEMP=$$RJ^XLFSTR(NUMBER,5," ")
"RTN","PXRMEGM",160,0)
 S TNAME=$E(NAME,1,46)
"RTN","PXRMEGM",161,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(TNAME,60," ")
"RTN","PXRMEGM",162,0)
 S TCLASS=$S(CLASS="N":"NATIONAL",CLASS="V":"VISN",1:"LOCAL")
"RTN","PXRMEGM",163,0)
 S TEMP=TEMP_"  "_TCLASS
"RTN","PXRMEGM",164,0)
 Q TEMP
"RTN","PXRMEGM",165,0)
 ;
"RTN","PXRMEHLP")
0^156^B21957169
"RTN","PXRMEHLP",1,0)
PXRMEHLP ; SLC/PJH - Reminder Extract help. ;05/31/2006
"RTN","PXRMEHLP",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEHLP",3,0)
 ;====================================================
"RTN","PXRMEHLP",4,0)
LOAD(SUB) ;
"RTN","PXRMEHLP",5,0)
 ;If necessary load the help text into the ^TMP array.
"RTN","PXRMEHLP",6,0)
 ;Check if the help text has already been loaded.
"RTN","PXRMEHLP",7,0)
 I $D(^TMP(SUB,$J,"VALMCNT")) D  Q
"RTN","PXRMEHLP",8,0)
 . S VALMCNT=^TMP(SUB,$J,"VALMCNT")
"RTN","PXRMEHLP",9,0)
 ;
"RTN","PXRMEHLP",10,0)
 N DONE,IND,LABEL,TEXT
"RTN","PXRMEHLP",11,0)
 S LABEL="NOHLP"
"RTN","PXRMEHLP",12,0)
 I SUB["ETM" S LABEL="TX1"
"RTN","PXRMEHLP",13,0)
 I SUB["ETH" S LABEL="TX2"
"RTN","PXRMEHLP",14,0)
 I SUB["ETT" S LABEL="TX3"
"RTN","PXRMEHLP",15,0)
 I SUB["EPM" S LABEL="TX4"
"RTN","PXRMEHLP",16,0)
 I SUB["EPED" S LABEL="TX5"
"RTN","PXRMEHLP",17,0)
 I SUB["EFM" S LABEL="TX6"
"RTN","PXRMEHLP",18,0)
 I SUB["EFED" S LABEL="TX7"
"RTN","PXRMEHLP",19,0)
 I SUB["EGM" S LABEL="TX8"
"RTN","PXRMEHLP",20,0)
 I SUB["EGED" S LABEL="TX9"
"RTN","PXRMEHLP",21,0)
 S DONE=0,VALMCNT=0
"RTN","PXRMEHLP",22,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMEHLP",23,0)
 . S TEXT=$P($T(@(LABEL_"+"_IND)),";;",2)
"RTN","PXRMEHLP",24,0)
 . I TEXT="**End Text**" S DONE=1 Q
"RTN","PXRMEHLP",25,0)
 . S VALMCNT=VALMCNT+1,^TMP(SUB,$J,VALMCNT,0)=TEXT
"RTN","PXRMEHLP",26,0)
 S ^TMP(SUB,$J,"VALMCNT")=VALMCNT
"RTN","PXRMEHLP",27,0)
 Q
"RTN","PXRMEHLP",28,0)
 ;
"RTN","PXRMEHLP",29,0)
 ;====================================================
"RTN","PXRMEHLP",30,0)
TX1 ;Help text
"RTN","PXRMEHLP",31,0)
 ;;The following actions are available:
"RTN","PXRMEHLP",32,0)
 ;;
"RTN","PXRMEHLP",33,0)
 ;;EDM Extract Definition Management
"RTN","PXRMEHLP",34,0)
 ;;    Display/edit extract definitions.
"RTN","PXRMEHLP",35,0)
 ;;
"RTN","PXRMEHLP",36,0)
 ;;VSE View/Schedule Extract
"RTN","PXRMEHLP",37,0)
 ;;    Display list of prior extract summaries or schedule manual
"RTN","PXRMEHLP",38,0)
 ;;    extracts and transmission runs.
"RTN","PXRMEHLP",39,0)
 ;;
"RTN","PXRMEHLP",40,0)
 ;;QU  Quit
"RTN","PXRMEHLP",41,0)
 ;;**End Text**
"RTN","PXRMEHLP",42,0)
 Q
"RTN","PXRMEHLP",43,0)
 ;
"RTN","PXRMEHLP",44,0)
 ;====================================================
"RTN","PXRMEHLP",45,0)
TX2 ;Help text
"RTN","PXRMEHLP",46,0)
 ;;The following actions are available:
"RTN","PXRMEHLP",47,0)
 ;;
"RTN","PXRMEHLP",48,0)
 ;;CV  Change View
"RTN","PXRMEHLP",49,0)
 ;;    Toggle view of extract summaries between creation date order and
"RTN","PXRMEHLP",50,0)
 ;;    extract period order.
"RTN","PXRMEHLP",51,0)
 ;;
"RTN","PXRMEHLP",52,0)
 ;;ES  Extract Summary
"RTN","PXRMEHLP",53,0)
 ;;    Display reminder compliance and finding totals for extract summary.
"RTN","PXRMEHLP",54,0)
 ;;    Also displays patient list with option to print Health Summary.
"RTN","PXRMEHLP",55,0)
 ;;
"RTN","PXRMEHLP",56,0)
 ;;ME  Manual Extract
"RTN","PXRMEHLP",57,0)
 ;;    Initiate a new extract for a selected period with option to 
"RTN","PXRMEHLP",58,0)
 ;;    transmit. 
"RTN","PXRMEHLP",59,0)
 ;;
"RTN","PXRMEHLP",60,0)
 ;;MT  Manual Transmission
"RTN","PXRMEHLP",61,0)
 ;;    Initiate a transmission or retransmission of an existing extract
"RTN","PXRMEHLP",62,0)
 ;;    summary. 
"RTN","PXRMEHLP",63,0)
 ;;
"RTN","PXRMEHLP",64,0)
 ;;TH  Transmission History
"RTN","PXRMEHLP",65,0)
 ;;    Display transmission history and HL7 message ID's for an
"RTN","PXRMEHLP",66,0)
 ;;    existing extract.
"RTN","PXRMEHLP",67,0)
 ;;
"RTN","PXRMEHLP",68,0)
 ;;QU  Quit
"RTN","PXRMEHLP",69,0)
 ;;**End Text**
"RTN","PXRMEHLP",70,0)
 Q
"RTN","PXRMEHLP",71,0)
 ;
"RTN","PXRMEHLP",72,0)
 ;====================================================
"RTN","PXRMEHLP",73,0)
TX3 ;Help text
"RTN","PXRMEHLP",74,0)
 ;;The following actions are available:
"RTN","PXRMEHLP",75,0)
 ;;
"RTN","PXRMEHLP",76,0)
 ;;DPL Display Patient List
"RTN","PXRMEHLP",77,0)
 ;;    Display a patient list used to create extract summary with
"RTN","PXRMEHLP",78,0)
 ;;    option to print Health Summary.
"RTN","PXRMEHLP",79,0)
 ;;
"RTN","PXRMEHLP",80,0)
 ;;DSF Display/Suppress Finding Totals
"RTN","PXRMEHLP",81,0)
 ;;    Toggle between display with reminder compliance totals only and
"RTN","PXRMEHLP",82,0)
 ;;    display with both reminder compliance and finding totals.
"RTN","PXRMEHLP",83,0)
 ;;
"RTN","PXRMEHLP",84,0)
 ;;PL  Print List
"RTN","PXRMEHLP",85,0)
 ;;    Print extract totals currently displayed.
"RTN","PXRMEHLP",86,0)
 ;;
"RTN","PXRMEHLP",87,0)
 ;;QU  Quit
"RTN","PXRMEHLP",88,0)
 ;;**End Text**
"RTN","PXRMEHLP",89,0)
 Q
"RTN","PXRMEHLP",90,0)
 ;
"RTN","PXRMEHLP",91,0)
 ;====================================================
"RTN","PXRMEHLP",92,0)
TX4 ;Help text
"RTN","PXRMEHLP",93,0)
 ;;The following actions are available:
"RTN","PXRMEHLP",94,0)
 ;;
"RTN","PXRMEHLP",95,0)
 ;;CR  Create Extract Definition
"RTN","PXRMEHLP",96,0)
 ;;
"RTN","PXRMEHLP",97,0)
 ;;DE  Display/Edit Extract Definition
"RTN","PXRMEHLP",98,0)
 ;;
"RTN","PXRMEHLP",99,0)
 ;;QU  Quit
"RTN","PXRMEHLP",100,0)
 ;;**End Text**
"RTN","PXRMEHLP",101,0)
 Q
"RTN","PXRMEHLP",102,0)
 ;
"RTN","PXRMEHLP",103,0)
 ;====================================================
"RTN","PXRMEHLP",104,0)
TX5 ;Help text
"RTN","PXRMEHLP",105,0)
 ;;The following actions are available:
"RTN","PXRMEHLP",106,0)
 ;;
"RTN","PXRMEHLP",107,0)
 ;;ED  Edit Extract Definition
"RTN","PXRMEHLP",108,0)
 ;;
"RTN","PXRMEHLP",109,0)
 ;;QU  Quit
"RTN","PXRMEHLP",110,0)
 ;;**End Text**
"RTN","PXRMEHLP",111,0)
 Q
"RTN","PXRMEHLP",112,0)
 ;
"RTN","PXRMEHLP",113,0)
 ;====================================================
"RTN","PXRMEHLP",114,0)
TX6 ;Help text
"RTN","PXRMEHLP",115,0)
 ;;The following actions are available:
"RTN","PXRMEHLP",116,0)
 ;;
"RTN","PXRMEHLP",117,0)
 ;;CR  Create Extract Counting Rule
"RTN","PXRMEHLP",118,0)
 ;;
"RTN","PXRMEHLP",119,0)
 ;;DE  Display/Edit Extract Counting Rule
"RTN","PXRMEHLP",120,0)
 ;;
"RTN","PXRMEHLP",121,0)
 ;;QU  Quit
"RTN","PXRMEHLP",122,0)
 ;;**End Text**
"RTN","PXRMEHLP",123,0)
 Q
"RTN","PXRMEHLP",124,0)
 ;
"RTN","PXRMEHLP",125,0)
 ;====================================================
"RTN","PXRMEHLP",126,0)
TX7 ;Help text
"RTN","PXRMEHLP",127,0)
 ;;The following actions are available:
"RTN","PXRMEHLP",128,0)
 ;;
"RTN","PXRMEHLP",129,0)
 ;;ED  Edit Extract Counting Rule
"RTN","PXRMEHLP",130,0)
 ;;
"RTN","PXRMEHLP",131,0)
 ;;CG  Counting Groups
"RTN","PXRMEHLP",132,0)
 ;;
"RTN","PXRMEHLP",133,0)
 ;;QU  Quit
"RTN","PXRMEHLP",134,0)
 ;;**End Text**
"RTN","PXRMEHLP",135,0)
 Q
"RTN","PXRMEHLP",136,0)
 ;
"RTN","PXRMEHLP",137,0)
 ;====================================================
"RTN","PXRMEHLP",138,0)
TX8 ;Help text
"RTN","PXRMEHLP",139,0)
 ;;The following actions are available:
"RTN","PXRMEHLP",140,0)
 ;;
"RTN","PXRMEHLP",141,0)
 ;;CR  Create Extract Counting Group
"RTN","PXRMEHLP",142,0)
 ;;
"RTN","PXRMEHLP",143,0)
 ;;DE  Display/Edit Extract Counting Group
"RTN","PXRMEHLP",144,0)
 ;;
"RTN","PXRMEHLP",145,0)
 ;;QU  Quit
"RTN","PXRMEHLP",146,0)
 ;;**End Text**
"RTN","PXRMEHLP",147,0)
 Q
"RTN","PXRMEHLP",148,0)
 ;
"RTN","PXRMEHLP",149,0)
 ;====================================================
"RTN","PXRMEHLP",150,0)
TX9 ;Help text
"RTN","PXRMEHLP",151,0)
 ;;The following actions are available:
"RTN","PXRMEHLP",152,0)
 ;;
"RTN","PXRMEHLP",153,0)
 ;;ED  Edit Extract Counting Group
"RTN","PXRMEHLP",154,0)
 ;;
"RTN","PXRMEHLP",155,0)
 ;;QU  Quit
"RTN","PXRMEHLP",156,0)
 ;;**End Text**
"RTN","PXRMEHLP",157,0)
 Q
"RTN","PXRMEHLP",158,0)
 ;
"RTN","PXRMEHLP",159,0)
 ;====================================================
"RTN","PXRMEHLP",160,0)
NOHLP ;Help text
"RTN","PXRMEHLP",161,0)
 ;;
"RTN","PXRMEHLP",162,0)
 ;;No Help Text Available
"RTN","PXRMEHLP",163,0)
 ;;
"RTN","PXRMEHLP",164,0)
 ;;**End Text**
"RTN","PXRMEHLP",165,0)
 Q
"RTN","PXRMEHLP",166,0)
 ;
"RTN","PXRMENOD")
0^146^B2553031
"RTN","PXRMENOD",1,0)
PXRMENOD ; SLC/PKR - Clinical Reminders "E" node routines. ;04/17/2006
"RTN","PXRMENOD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMENOD",3,0)
 ;
"RTN","PXRMENOD",4,0)
 ;========================================================
"RTN","PXRMENOD",5,0)
KENODE(X,DA,FILENUM) ;Kill the enode in the finding multiple for definitions
"RTN","PXRMENOD",6,0)
 ;and terms.
"RTN","PXRMENOD",7,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMENOD",8,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMENOD",9,0)
 N DAS,GLOBAL,IEN
"RTN","PXRMENOD",10,0)
 S IEN=$P(X,";",1)
"RTN","PXRMENOD",11,0)
 S GLOBAL=$P(X,";",2)
"RTN","PXRMENOD",12,0)
 I GLOBAL="LAB(60," D
"RTN","PXRMENOD",13,0)
 . N SUB
"RTN","PXRMENOD",14,0)
 .;DBIA #91-A
"RTN","PXRMENOD",15,0)
 . S SUB=$P(^LAB(60,IEN,0),U,4)
"RTN","PXRMENOD",16,0)
 . I SUB="CH" Q
"RTN","PXRMENOD",17,0)
 . I (SUB="BB")!(SUB="WK") S IEN="" Q
"RTN","PXRMENOD",18,0)
 . I SUB="MI" S IEN="M;T;"_IEN Q
"RTN","PXRMENOD",19,0)
 .;All other SUB values: AU, CY, EM, SP
"RTN","PXRMENOD",20,0)
 . S IEN="A;T;"_IEN
"RTN","PXRMENOD",21,0)
 S DAS=IEN
"RTN","PXRMENOD",22,0)
 I DAS="" Q
"RTN","PXRMENOD",23,0)
 I FILENUM=811.5 K ^PXRMD(811.5,DA(1),20,"E",GLOBAL,DAS,DA)
"RTN","PXRMENOD",24,0)
 I FILENUM=811.9 K ^PXD(811.9,DA(1),20,"E",GLOBAL,DAS,DA)
"RTN","PXRMENOD",25,0)
 Q
"RTN","PXRMENOD",26,0)
 ;
"RTN","PXRMENOD",27,0)
 ;========================================================
"RTN","PXRMENOD",28,0)
SENODE(X,DA,FILENUM) ;Set the enode in the finding multiple for definitions
"RTN","PXRMENOD",29,0)
 ;and terms.
"RTN","PXRMENOD",30,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMENOD",31,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMENOD",32,0)
 N DAS,GLOBAL,IEN
"RTN","PXRMENOD",33,0)
 S IEN=$P(X,";",1)
"RTN","PXRMENOD",34,0)
 S GLOBAL=$P(X,";",2)
"RTN","PXRMENOD",35,0)
 I GLOBAL="LAB(60," D
"RTN","PXRMENOD",36,0)
 . N SUB
"RTN","PXRMENOD",37,0)
 .;DBIA #91-A
"RTN","PXRMENOD",38,0)
 . S SUB=$P(^LAB(60,IEN,0),U,4)
"RTN","PXRMENOD",39,0)
 . I SUB="CH" Q
"RTN","PXRMENOD",40,0)
 . I (SUB="BB")!(SUB="WK") S IEN="" Q
"RTN","PXRMENOD",41,0)
 . I SUB="MI" S IEN="M;T;"_IEN Q
"RTN","PXRMENOD",42,0)
 .;All other SUB values: AU, CY, EM, SP
"RTN","PXRMENOD",43,0)
 . S IEN="A;T;"_IEN
"RTN","PXRMENOD",44,0)
 S DAS=IEN
"RTN","PXRMENOD",45,0)
 I DAS="" Q
"RTN","PXRMENOD",46,0)
 I FILENUM=811.5 S ^PXRMD(811.5,DA(1),20,"E",GLOBAL,DAS,DA)=""
"RTN","PXRMENOD",47,0)
 I FILENUM=811.9 S ^PXD(811.9,DA(1),20,"E",GLOBAL,DAS,DA)=""
"RTN","PXRMENOD",48,0)
 Q
"RTN","PXRMENOD",49,0)
 ;
"RTN","PXRMEPED")
0^152^B10077314
"RTN","PXRMEPED",1,0)
PXRMEPED ; SLC/PJH - Extract Definition Editor ;05/15/2006
"RTN","PXRMEPED",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEPED",3,0)
 ;
"RTN","PXRMEPED",4,0)
 ;Main entry point for PXRM EXTRACT DEFINITION EDIT/DISPLAY
"RTN","PXRMEPED",5,0)
START(IEN) ;
"RTN","PXRMEPED",6,0)
 N PXRMDONE,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMEPED",7,0)
 S X="IORESET"
"RTN","PXRMEPED",8,0)
 D ENDR^%ZISS
"RTN","PXRMEPED",9,0)
 S VALMCNT=0
"RTN","PXRMEPED",10,0)
 D EN^VALM("PXRM EXTRACT DEFINITION EDIT")
"RTN","PXRMEPED",11,0)
 Q
"RTN","PXRMEPED",12,0)
 ;
"RTN","PXRMEPED",13,0)
BLDLIST(IEN) ;Build workfile
"RTN","PXRMEPED",14,0)
 N FLDS,GBL,PXRMROOT
"RTN","PXRMEPED",15,0)
 S FLDS="[PXRM EXTRACT DEFINITION]"
"RTN","PXRMEPED",16,0)
 S GBL="^TMP(""PXRMEPED"",$J)"
"RTN","PXRMEPED",17,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEPED",18,0)
 S PXRMROOT="^PXRM(810.2,"
"RTN","PXRMEPED",19,0)
 K ^TMP("PXRMLRED",$J)
"RTN","PXRMEPED",20,0)
 D DIP^PXRMUTIL(GBL,IEN,PXRMROOT,FLDS)
"RTN","PXRMEPED",21,0)
 S VALMCNT=$O(^TMP("PXRMEPED",$J,""),-1)
"RTN","PXRMEPED",22,0)
 Q
"RTN","PXRMEPED",23,0)
 ;
"RTN","PXRMEPED",24,0)
ENTRY ;Entry code
"RTN","PXRMEPED",25,0)
 D BLDLIST(IEN)
"RTN","PXRMEPED",26,0)
 Q
"RTN","PXRMEPED",27,0)
 ;
"RTN","PXRMEPED",28,0)
EXIT ;Exit code
"RTN","PXRMEPED",29,0)
 K ^TMP("PXRMEPED",$J)
"RTN","PXRMEPED",30,0)
 K ^TMP("PXRMEPEDH",$J)
"RTN","PXRMEPED",31,0)
 D CLEAN^VALM10
"RTN","PXRMEPED",32,0)
 D FULL^VALM1
"RTN","PXRMEPED",33,0)
 S VALMBCK="Q"
"RTN","PXRMEPED",34,0)
 Q
"RTN","PXRMEPED",35,0)
 ;
"RTN","PXRMEPED",36,0)
HDR ; Header code
"RTN","PXRMEPED",37,0)
 S VALMHDR(1)=""
"RTN","PXRMEPED",38,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEPED",39,0)
 Q
"RTN","PXRMEPED",40,0)
 ;
"RTN","PXRMEPED",41,0)
HLP ;Help code
"RTN","PXRMEPED",42,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMEPED",43,0)
 S SUB="PXRMEPEDH"
"RTN","PXRMEPED",44,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMEPED",45,0)
 Q
"RTN","PXRMEPED",46,0)
 ;
"RTN","PXRMEPED",47,0)
INIT ;Init
"RTN","PXRMEPED",48,0)
 S VALMCNT=0
"RTN","PXRMEPED",49,0)
 Q
"RTN","PXRMEPED",50,0)
 ;
"RTN","PXRMEPED",51,0)
PEXIT ;Protocol exit code
"RTN","PXRMEPED",52,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEPED",53,0)
 ;Reset after page up/down etc
"RTN","PXRMEPED",54,0)
 Q
"RTN","PXRMEPED",55,0)
 ;
"RTN","PXRMEPED",56,0)
ADD ;Add Rule
"RTN","PXRMEPED",57,0)
 N DA,DIC,DONE,DTOUT,DUOUT,DLAYGO,HED,Y
"RTN","PXRMEPED",58,0)
 S HED="ADD EXTRACT DEFINITION",DONE=0
"RTN","PXRMEPED",59,0)
 W IORESET,!
"RTN","PXRMEPED",60,0)
 F  D  Q:$D(DTOUT)  Q:DONE
"RTN","PXRMEPED",61,0)
 .S DIC="^PXRM(810.2,"
"RTN","PXRMEPED",62,0)
 .;Set the starting place for additions.
"RTN","PXRMEPED",63,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMEPED",64,0)
 .S DIC(0)="AELMQ",DLAYGO=810.2
"RTN","PXRMEPED",65,0)
 .S DIC("A")="Select EXTRACT DEFINITION to add: "
"RTN","PXRMEPED",66,0)
 .D ^DIC
"RTN","PXRMEPED",67,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMEPED",68,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMEPED",69,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMEPED",70,0)
 .I $P(Y,U,3)'=1 W !,"This extract definition name already exists" Q
"RTN","PXRMEPED",71,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMEPED",72,0)
 .;Edit Extract Definition
"RTN","PXRMEPED",73,0)
 .D EDIT(DA)
"RTN","PXRMEPED",74,0)
 .S:$D(DA) DONE=1
"RTN","PXRMEPED",75,0)
 Q
"RTN","PXRMEPED",76,0)
 ;
"RTN","PXRMEPED",77,0)
EDIT(DA) ;Edit Rule
"RTN","PXRMEPED",78,0)
 I '$$VEDIT^PXRMUTIL("^PXRM(810.2,",DA) D  Q
"RTN","PXRMEPED",79,0)
 .W !!,?5,"VA- and national class rules may not be edited" H 2
"RTN","PXRMEPED",80,0)
 .S VALMBCK="R"
"RTN","PXRMEPED",81,0)
 ;
"RTN","PXRMEPED",82,0)
 Q:'$$LOCK(DA)
"RTN","PXRMEPED",83,0)
 W IORESET
"RTN","PXRMEPED",84,0)
 N CS1,CS2,DIC,DIDEL,DIE,DR,DTOUT,DUOUT,ODA,Y
"RTN","PXRMEPED",85,0)
 ;Save checksum
"RTN","PXRMEPED",86,0)
 S CS1=$$FILE^PXRMEXCS(810.2,DA)
"RTN","PXRMEPED",87,0)
 ;
"RTN","PXRMEPED",88,0)
 S DIE="^PXRM(810.2,",DIDEL=810.2,ODA=DA,DR="[PXRM EXTRACT DEFINITION]"
"RTN","PXRMEPED",89,0)
 ;
"RTN","PXRMEPED",90,0)
 ;Edit extract definition then unlock
"RTN","PXRMEPED",91,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMEPED",92,0)
 ;Deleted ???
"RTN","PXRMEPED",93,0)
 I '$D(DA) S VALMBCK="Q" Q
"RTN","PXRMEPED",94,0)
 ;
"RTN","PXRMEPED",95,0)
 ;Update edit history
"RTN","PXRMEPED",96,0)
 D
"RTN","PXRMEPED",97,0)
 .S CS2=$$FILE^PXRMEXCS(810.2,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMEPED",98,0)
 .D SEHIST^PXRMUTIL(810.2,DIC,DA)
"RTN","PXRMEPED",99,0)
 ;
"RTN","PXRMEPED",100,0)
 S VALMBCK="R"
"RTN","PXRMEPED",101,0)
 Q
"RTN","PXRMEPED",102,0)
 ;
"RTN","PXRMEPED",103,0)
EPEDIT ;Edit Rule
"RTN","PXRMEPED",104,0)
 D EDIT(IEN) Q:VALMBCK="Q"
"RTN","PXRMEPED",105,0)
 ;
"RTN","PXRMEPED",106,0)
 ;Rebuild Workfile
"RTN","PXRMEPED",107,0)
 D BLDLIST(IEN)
"RTN","PXRMEPED",108,0)
 Q
"RTN","PXRMEPED",109,0)
 ;
"RTN","PXRMEPED",110,0)
LOCK(DA) ;Lock the record
"RTN","PXRMEPED",111,0)
 L +^PXRM(810.2,DA):0 I  Q 1
"RTN","PXRMEPED",112,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMEPED",113,0)
 ;
"RTN","PXRMEPED",114,0)
SCREEN ;validate rule type
"RTN","PXRMEPED",115,0)
 Q
"RTN","PXRMEPED",116,0)
 ;
"RTN","PXRMEPED",117,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMEPED",118,0)
 L -^PXRM(810.2,DA)
"RTN","PXRMEPED",119,0)
 Q
"RTN","PXRMEPM")
0^158^B29139356
"RTN","PXRMEPM",1,0)
PXRMEPM ; SLC/PKR/PJH - Extract Definition Management ;06/21/2006
"RTN","PXRMEPM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEPM",3,0)
 ;
"RTN","PXRMEPM",4,0)
 ;Main entry point for PXRM EXTRACT DEFINITIONS
"RTN","PXRMEPM",5,0)
START N PXRMDONE,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMEPM",6,0)
 S X="IORESET"
"RTN","PXRMEPM",7,0)
 D ENDR^%ZISS
"RTN","PXRMEPM",8,0)
 S VALMCNT=0
"RTN","PXRMEPM",9,0)
 D EN^VALM("PXRM EXTRACT DEFINITIONS")
"RTN","PXRMEPM",10,0)
 Q
"RTN","PXRMEPM",11,0)
 ;
"RTN","PXRMEPM",12,0)
BLDLIST ;Build workfile
"RTN","PXRMEPM",13,0)
 K ^TMP("PXRMEPM",$J)
"RTN","PXRMEPM",14,0)
 N IEN,IND,PLIST
"RTN","PXRMEPM",15,0)
 D LIST^PXRMETM(.PLIST,.IEN)
"RTN","PXRMEPM",16,0)
 M ^TMP("PXRMEPM",$J)=PLIST
"RTN","PXRMEPM",17,0)
 S VALMCNT=PLIST("VALMCNT")
"RTN","PXRMEPM",18,0)
 F IND=1:1:VALMCNT D
"RTN","PXRMEPM",19,0)
 .S ^TMP("PXRMEPM",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMEPM",20,0)
 Q
"RTN","PXRMEPM",21,0)
 ;
"RTN","PXRMEPM",22,0)
ENTRY ;Entry code
"RTN","PXRMEPM",23,0)
 D BLDLIST,XQORM
"RTN","PXRMEPM",24,0)
 Q
"RTN","PXRMEPM",25,0)
 ;
"RTN","PXRMEPM",26,0)
EXIT ;Exit code
"RTN","PXRMEPM",27,0)
 K ^TMP("PXRMEPM",$J)
"RTN","PXRMEPM",28,0)
 K ^TMP("PXRMEPMH",$J)
"RTN","PXRMEPM",29,0)
 D CLEAN^VALM10
"RTN","PXRMEPM",30,0)
 D FULL^VALM1
"RTN","PXRMEPM",31,0)
 S VALMBCK="Q"
"RTN","PXRMEPM",32,0)
 Q
"RTN","PXRMEPM",33,0)
 ;
"RTN","PXRMEPM",34,0)
HDR ; Header code
"RTN","PXRMEPM",35,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEPM",36,0)
 Q
"RTN","PXRMEPM",37,0)
 ;
"RTN","PXRMEPM",38,0)
HLP ;Help code
"RTN","PXRMEPM",39,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMEPM",40,0)
 S SUB="PXRMEPMH"
"RTN","PXRMEPM",41,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMEPM",42,0)
 Q
"RTN","PXRMEPM",43,0)
 ;
"RTN","PXRMEPM",44,0)
INIT ;Init
"RTN","PXRMEPM",45,0)
 S VALMCNT=0
"RTN","PXRMEPM",46,0)
 Q
"RTN","PXRMEPM",47,0)
 ;
"RTN","PXRMEPM",48,0)
PEXIT ;PXRM EXCH MENU protocol exit code
"RTN","PXRMEPM",49,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEPM",50,0)
 ;Reset after page up/down etc
"RTN","PXRMEPM",51,0)
 D XQORM
"RTN","PXRMEPM",52,0)
 Q
"RTN","PXRMEPM",53,0)
 ;
"RTN","PXRMEPM",54,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXTRACT DEFINITION SELECT ENTRY",0))_U_"1:"_VALMCNT
"RTN","PXRMEPM",55,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMEPM",56,0)
 Q
"RTN","PXRMEPM",57,0)
 ;
"RTN","PXRMEPM",58,0)
XSEL ;PXRM EXTRACT DEFINITION SELECT ENTRY validation
"RTN","PXRMEPM",59,0)
 N SEL,IEN
"RTN","PXRMEPM",60,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMEPM",61,0)
 ;Remove trailing ,
"RTN","PXRMEPM",62,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMEPM",63,0)
 ;Invalid selection
"RTN","PXRMEPM",64,0)
 I SEL["," D  Q
"RTN","PXRMEPM",65,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMEPM",66,0)
 .S VALMBCK="R"
"RTN","PXRMEPM",67,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMEPM",68,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMEPM",69,0)
 .S VALMBCK="R"
"RTN","PXRMEPM",70,0)
 ;
"RTN","PXRMEPM",71,0)
 ;Get the list ien.
"RTN","PXRMEPM",72,0)
 S IEN=^TMP("PXRMEPM",$J,"IDX",SEL,SEL)
"RTN","PXRMEPM",73,0)
 ;Display/Edit Extract Definition
"RTN","PXRMEPM",74,0)
 D START^PXRMEPED(IEN)
"RTN","PXRMEPM",75,0)
 D BLDLIST
"RTN","PXRMEPM",76,0)
 S VALMBCK="R"
"RTN","PXRMEPM",77,0)
 Q
"RTN","PXRMEPM",78,0)
 ;
"RTN","PXRMEPM",79,0)
HELP(CALL) ;General help text routine
"RTN","PXRMEPM",80,0)
 N HTEXT
"RTN","PXRMEPM",81,0)
 I CALL=1 D
"RTN","PXRMEPM",82,0)
 .S HTEXT(1)="Select DE to display or edit a definition."
"RTN","PXRMEPM",83,0)
 .S HTEXT(2)="Select ED to edit a definition"
"RTN","PXRMEPM",84,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMEPM",85,0)
 Q
"RTN","PXRMEPM",86,0)
 ;
"RTN","PXRMEPM",87,0)
EPADD ;Add Rule Option
"RTN","PXRMEPM",88,0)
 ;
"RTN","PXRMEPM",89,0)
 ;Reset Screen Mode
"RTN","PXRMEPM",90,0)
 W IORESET
"RTN","PXRMEPM",91,0)
 ;
"RTN","PXRMEPM",92,0)
 ;Add Rule
"RTN","PXRMEPM",93,0)
 D ADD^PXRMEPED
"RTN","PXRMEPM",94,0)
 ;
"RTN","PXRMEPM",95,0)
 ;Rebuild Workfile
"RTN","PXRMEPM",96,0)
 D BLDLIST
"RTN","PXRMEPM",97,0)
 ;
"RTN","PXRMEPM",98,0)
 S VALMBCK="R"
"RTN","PXRMEPM",99,0)
 Q
"RTN","PXRMEPM",100,0)
 ;
"RTN","PXRMEPM",101,0)
EPINQ ;Definition Inquiry - PXRM EXTRACT DEFINITION DISPLAY/EDIT entry 
"RTN","PXRMEPM",102,0)
 N IND,LRIEN,VALMY
"RTN","PXRMEPM",103,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEPM",104,0)
 ;
"RTN","PXRMEPM",105,0)
 ;If there is no list quit.
"RTN","PXRMEPM",106,0)
 I '$D(VALMY) Q
"RTN","PXRMEPM",107,0)
 S PXRMDONE=0
"RTN","PXRMEPM",108,0)
 S IND=""
"RTN","PXRMEPM",109,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMEPM",110,0)
 .;Get the ien.
"RTN","PXRMEPM",111,0)
 .S LRIEN=^TMP("PXRMEPM",$J,"IDX",IND,IND)
"RTN","PXRMEPM",112,0)
 .D START^PXRMEPED(LRIEN)
"RTN","PXRMEPM",113,0)
 D BLDLIST
"RTN","PXRMEPM",114,0)
 S VALMBCK="R"
"RTN","PXRMEPM",115,0)
 Q
"RTN","PXRMEPM",116,0)
 ;
"RTN","PXRMEPM",117,0)
PPLR ;Display rule set components 
"RTN","PXRMEPM",118,0)
 ;used by [PXRM EXTRACT DEFINITION] template)
"RTN","PXRMEPM",119,0)
 N ACT,DATA,FIRST,IEN,LRDATA,LRIEN,SEQ,SUB
"RTN","PXRMEPM",120,0)
 S IEN=$P(X,U,2) Q:'IEN
"RTN","PXRMEPM",121,0)
 W !," Description: ",$P($G(^PXRM(810.4,IEN,0)),U,2)
"RTN","PXRMEPM",122,0)
 S SEQ="",FIRST=1
"RTN","PXRMEPM",123,0)
 F  S SEQ=$O(^PXRM(810.4,IEN,30,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMEPM",124,0)
 .S SUB=$O(^PXRM(810.4,IEN,30,"B",SEQ,"")) Q:'SUB
"RTN","PXRMEPM",125,0)
 .S DATA=$G(^PXRM(810.4,IEN,30,SUB,0)) Q:DATA=""
"RTN","PXRMEPM",126,0)
 .S LRIEN=$P(DATA,U,2) Q:LRIEN=""
"RTN","PXRMEPM",127,0)
 .S ACT=$P(DATA,U,3),LRDATA=$G(^PXRM(810.4,LRIEN,0))
"RTN","PXRMEPM",128,0)
 .I FIRST W !!,?2,"List Rules:" S FIRST=0
"RTN","PXRMEPM",129,0)
 .W !,?2,SEQ,?7,$P(LRDATA,U),?66
"RTN","PXRMEPM",130,0)
 .W $S(ACT="A":"ADD PATIENT",ACT="R":"REMOVE PATIENT",ACT="F":"INSERT FINDING",1:"SELECT PATIENT")
"RTN","PXRMEPM",131,0)
 .;Display List Rule fields
"RTN","PXRMEPM",132,0)
 .D LROUT^PXRMLRED(LRIEN,23)
"RTN","PXRMEPM",133,0)
 .W !
"RTN","PXRMEPM",134,0)
 Q
"RTN","PXRMEPM",135,0)
 ;
"RTN","PXRMEPM",136,0)
PPFR ;Display counting rules and count type 
"RTN","PXRMEPM",137,0)
 ;used by [PXRM EXTRACT DEFINITION] template)
"RTN","PXRMEPM",138,0)
 W !
"RTN","PXRMEPM",139,0)
 N DATA,GIEN,GSTATUS,IEN,SEQ,SUB
"RTN","PXRMEPM",140,0)
 S IEN=$P(X,U,3) Q:'IEN
"RTN","PXRMEPM",141,0)
 S SEQ=""
"RTN","PXRMEPM",142,0)
 F  S SEQ=$O(^PXRM(810.7,IEN,10,"B",SEQ)) Q:SEQ=""  D
"RTN","PXRMEPM",143,0)
 .S SUB=$O(^PXRM(810.7,IEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMEPM",144,0)
 .S DATA=$G(^PXRM(810.7,IEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMEPM",145,0)
 .S GIEN=$P(DATA,U,2) Q:GIEN=""
"RTN","PXRMEPM",146,0)
 .S GSTATUS=$P(DATA,U,3)
"RTN","PXRMEPM",147,0)
 .;Get counting groups
"RTN","PXRMEPM",148,0)
 .N CTYP,CTXT,DATA,EXCL,FIRST,GNAME,PNAME,TIEN,TNAME,GSEQ,GSUB
"RTN","PXRMEPM",149,0)
 .S DATA=$G(^PXRM(810.8,GIEN,0)),GNAME=$P(DATA,U)
"RTN","PXRMEPM",150,0)
 .S CTYP=$P(DATA,U,3),PNAME=$P(DATA,U,2),GSEQ="",FIRST=1
"RTN","PXRMEPM",151,0)
 .S CTXT=$$TXT(CTYP,GSTATUS)
"RTN","PXRMEPM",152,0)
 .F  S GSEQ=$O(^PXRM(810.8,GIEN,10,"B",GSEQ)) Q:GSEQ=""  D
"RTN","PXRMEPM",153,0)
 ..S GSUB=$O(^PXRM(810.8,GIEN,10,"B",GSEQ,"")) Q:'GSUB
"RTN","PXRMEPM",154,0)
 ..S DATA=$G(^PXRM(810.8,GIEN,10,GSUB,0)) Q:DATA=""
"RTN","PXRMEPM",155,0)
 ..S TIEN=$P(DATA,U,2) Q:TIEN=""
"RTN","PXRMEPM",156,0)
 ..S EXCL=$P(DATA,U,3) Q:EXCL="E"
"RTN","PXRMEPM",157,0)
 ..S TNAME=$P($G(^PXRMD(811.5,TIEN,0)),U)
"RTN","PXRMEPM",158,0)
 ..I FIRST D
"RTN","PXRMEPM",159,0)
 ...W !,?14,SEQ
"RTN","PXRMEPM",160,0)
 ...W ?18,"Counting Group: ",GNAME
"RTN","PXRMEPM",161,0)
 ...W !,?18,$$TXT(CTYP,GSTATUS)
"RTN","PXRMEPM",162,0)
 ...W !,?23,"Terms:" S FIRST=0
"RTN","PXRMEPM",163,0)
 ..W ?30,TNAME,!
"RTN","PXRMEPM",164,0)
 Q
"RTN","PXRMEPM",165,0)
 ;
"RTN","PXRMEPM",166,0)
SCREEN ;Screen for 810.210 field .02
"RTN","PXRMEPM",167,0)
 S DIC("S")="I $P(^(0),U,3)=3"
"RTN","PXRMEPM",168,0)
 Q
"RTN","PXRMEPM",169,0)
 ;
"RTN","PXRMEPM",170,0)
TXT(COUNT,COHORT) ;Text to describe group
"RTN","PXRMEPM",171,0)
 N TXT
"RTN","PXRMEPM",172,0)
 ;Determine count type
"RTN","PXRMEPM",173,0)
 I COUNT="MRFP" S TXT="Most recent finding patient counts for "
"RTN","PXRMEPM",174,0)
 I COUNT="MRF" S TXT="Most recent finding counts for "
"RTN","PXRMEPM",175,0)
 I COUNT="UR" S TXT="Utilization in period finding counts for "
"RTN","PXRMEPM",176,0)
 ;Error
"RTN","PXRMEPM",177,0)
 I $G(TXT)="" Q "Unknown count type - error"
"RTN","PXRMEPM",178,0)
 ;Determine cohort
"RTN","PXRMEPM",179,0)
 S TXT=TXT_$S(COHORT="A":"APPLICABLE",1:"TOTAL")_" patients"
"RTN","PXRMEPM",180,0)
 Q TXT
"RTN","PXRMERRH")
0^96^B23062075
"RTN","PXRMERRH",1,0)
PXRMERRH ; SLC/PKR - Error handling routines. ;03/27/2006
"RTN","PXRMERRH",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMERRH",3,0)
 ;
"RTN","PXRMERRH",4,0)
 ;=================================================================
"RTN","PXRMERRH",5,0)
ERRHDLR ;PXRM error handler. Send a MailMan message to the mail group defined
"RTN","PXRMERRH",6,0)
 ;by the site and put the error in the error trap.
"RTN","PXRMERRH",7,0)
 ;References to %ZTER covered by DBIA #1621.
"RTN","PXRMERRH",8,0)
 N ERROR,MGIEN,MGROUP,NL,REMINDER,XMDUZ,XMSUB,XMY,XMZ
"RTN","PXRMERRH",9,0)
 S ERROR=$$EC^%ZOSV
"RTN","PXRMERRH",10,0)
 ;Ignore the "errors" the unwinder creates.
"RTN","PXRMERRH",11,0)
 I ERROR["ZTER" D UNWIND^%ZTER
"RTN","PXRMERRH",12,0)
 ;Make sure we don't loop if there is an error during procesing of
"RTN","PXRMERRH",13,0)
 ;the error handler.
"RTN","PXRMERRH",14,0)
 N $ET S $ET="D ^%ZTER,CLEAN^PXRMERRH,UNWIND^%ZTER"
"RTN","PXRMERRH",15,0)
 ;
"RTN","PXRMERRH",16,0)
 ;Save the error then put it in the error trap, this saves the correct
"RTN","PXRMERRH",17,0)
 ;last global reference.
"RTN","PXRMERRH",18,0)
 D ^%ZTER
"RTN","PXRMERRH",19,0)
 ;
"RTN","PXRMERRH",20,0)
 ;If this is a test run write out the error.
"RTN","PXRMERRH",21,0)
 I $G(PXRMDEBG) W !,ERROR
"RTN","PXRMERRH",22,0)
 ;
"RTN","PXRMERRH",23,0)
 ;Make the sender the Postmaster.
"RTN","PXRMERRH",24,0)
 S XMDUZ=0.5
"RTN","PXRMERRH",25,0)
 S XMSUB="ERROR EVALUATING CLINICAL REMINDER"
"RTN","PXRMERRH",26,0)
 ;
"RTN","PXRMERRH",27,0)
RETRY ;Get the message number.
"RTN","PXRMERRH",28,0)
 D XMZ^XMA2
"RTN","PXRMERRH",29,0)
 I XMZ<1 G RETRY
"RTN","PXRMERRH",30,0)
 ;
"RTN","PXRMERRH",31,0)
 ;Load the message
"RTN","PXRMERRH",32,0)
 S ^XMB(3.9,XMZ,2,1,0)="The following error occurred:"
"RTN","PXRMERRH",33,0)
 S ^XMB(3.9,XMZ,2,2,0)=ERROR
"RTN","PXRMERRH",34,0)
 I +$G(PXRMITEM)>0 S REMINDER=$P(^PXD(811.9,PXRMITEM,0),U,1)
"RTN","PXRMERRH",35,0)
 E  S PXRMITEM=999999,REMINDER="?"
"RTN","PXRMERRH",36,0)
 S ^XMB(3.9,XMZ,2,3,0)="While evaluating reminder "_REMINDER
"RTN","PXRMERRH",37,0)
 S ^XMB(3.9,XMZ,2,4,0)="For patient DFN="_$G(PXRMPDEM("DFN"))
"RTN","PXRMERRH",38,0)
 S ^XMB(3.9,XMZ,2,5,0)="The time of the error was "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMERRH",39,0)
 S ^XMB(3.9,XMZ,2,6,0)="See the error trap for complete details."
"RTN","PXRMERRH",40,0)
 S NL=6
"RTN","PXRMERRH",41,0)
 ;Look for specific error text to append to the message.
"RTN","PXRMERRH",42,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")) D
"RTN","PXRMERRH",43,0)
 . N ESOURCE,IND
"RTN","PXRMERRH",44,0)
 . S ESOURCE=""
"RTN","PXRMERRH",45,0)
 . F  S ESOURCE=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE)) Q:ESOURCE=""  D
"RTN","PXRMERRH",46,0)
 .. S IND=0
"RTN","PXRMERRH",47,0)
 .. F  S IND=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE,IND)) Q:IND=""  D
"RTN","PXRMERRH",48,0)
 ... S NL=NL+1
"RTN","PXRMERRH",49,0)
 ... S ^XMB(3.9,XMZ,2,NL,0)=^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE,IND)
"RTN","PXRMERRH",50,0)
 ;
"RTN","PXRMERRH",51,0)
 ;Send the message to the site defined mailgroup.
"RTN","PXRMERRH",52,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMERRH",53,0)
 ;If the mailgroup has not been defined send the message to the user.
"RTN","PXRMERRH",54,0)
 I MGIEN="" D
"RTN","PXRMERRH",55,0)
 . S MGROUP=DUZ
"RTN","PXRMERRH",56,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)=" "
"RTN","PXRMERRH",57,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)="You received this message because your IRM has not set up a mailgroup"
"RTN","PXRMERRH",58,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)="to receive Clinical Reminder errors; please notify them."
"RTN","PXRMERRH",59,0)
 E  S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMERRH",60,0)
 ;
"RTN","PXRMERRH",61,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_+NL_U_+NL_U_DT
"RTN","PXRMERRH",62,0)
 S XMY(MGROUP)=""
"RTN","PXRMERRH",63,0)
 D ENT1^XMD
"RTN","PXRMERRH",64,0)
 ;
"RTN","PXRMERRH",65,0)
 ;If the reminder exists mark that an error occured.
"RTN","PXRMERRH",66,0)
 I PXRMITEM=999999 Q
"RTN","PXRMERRH",67,0)
 S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")=""
"RTN","PXRMERRH",68,0)
 N DEFARR,DUE,DUEDATE,FREQ,FIEVAL,PCLOGIC,RESDATE
"RTN","PXRMERRH",69,0)
 S (DUE,DUEDATE,FREQ,FIEVAL,PCLOGIC,RESDATE)=""
"RTN","PXRMERRH",70,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRMERRH",71,0)
 D OUTPUT^PXRMOUTD(5,.DEFARR,PCLOGIC,DUE,DUEDATE,RESDATE,FREQ,.FIEVAL)
"RTN","PXRMERRH",72,0)
 ;
"RTN","PXRMERRH",73,0)
 ;Set the first line of ^TMP("PXRHM") to ERROR.
"RTN","PXRMERRH",74,0)
 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="ERROR"
"RTN","PXRMERRH",75,0)
 ;
"RTN","PXRMERRH",76,0)
 I '$G(PXRMDEBG) D CLEAN
"RTN","PXRMERRH",77,0)
 D UNWIND^%ZTER
"RTN","PXRMERRH",78,0)
 Q
"RTN","PXRMERRH",79,0)
 ;
"RTN","PXRMERRH",80,0)
 ;=================================================================
"RTN","PXRMERRH",81,0)
CLEAN ;Clean-up scratch arrays
"RTN","PXRMERRH",82,0)
 K ^TMP("PXRM",$J)
"RTN","PXRMERRH",83,0)
 I $D(PXRMPID) K ^TMP(PXRMPID,$J)
"RTN","PXRMERRH",84,0)
 Q
"RTN","PXRMERRH",85,0)
 ;
"RTN","PXRMERRH",86,0)
 ;=================================================================
"RTN","PXRMERRH",87,0)
NODEF(IEN) ;Non-existent reminder definition.
"RTN","PXRMERRH",88,0)
 N SUBJ
"RTN","PXRMERRH",89,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMERRH",90,0)
 S ^TMP("PXRMXMZ",$J,1,0)="A request was made to evaluate a non-existent reminder; the ien is "_IEN_"."
"RTN","PXRMERRH",91,0)
 S ^TMP("PXRMXMZ",$J,2,0)="An entry was made in the error trap that does not have a description."
"RTN","PXRMERRH",92,0)
 S ^TMP("PXRMXMZ",$J,3,0)="Match the time of this message with the time in the error trap."
"RTN","PXRMERRH",93,0)
 S SUBJ="Request to evaluate a non-existent reminder"
"RTN","PXRMERRH",94,0)
 D SEND^PXRMMSG(SUBJ)
"RTN","PXRMERRH",95,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMERRH",96,0)
 D ^%ZTER
"RTN","PXRMERRH",97,0)
 Q
"RTN","PXRMERRH",98,0)
 ;
"RTN","PXRMERRH",99,0)
 ;=================================================================
"RTN","PXRMERRH",100,0)
NOINDEX(FTYPE,IEN,FILENUM) ;Error handling for missing index.
"RTN","PXRMERRH",101,0)
 N ETEXT,SUBJ
"RTN","PXRMERRH",102,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMERRH",103,0)
 S ETEXT(1)=""
"RTN","PXRMERRH",104,0)
 S ETEXT(2)="Index for file number "_FILENUM_" does not exist or is not complete."
"RTN","PXRMERRH",105,0)
 I FTYPE="D" S ETEXT(3)="Reminder "_IEN_" will not be properly evaluated!"
"RTN","PXRMERRH",106,0)
 I FTYPE="TR" S ETEXT(3)="Term "_IEN_" will not be properly evaluated!"
"RTN","PXRMERRH",107,0)
 I FTYPE="TX" S ETEXT(3)="Taxonomy "_IEN_" will not be properly evaluated!"
"RTN","PXRMERRH",108,0)
 I $D(PXRMPID) D
"RTN","PXRMERRH",109,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","MISSING INDEX")=ETEXT(2)
"RTN","PXRMERRH",110,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","MISSING INDEX")=ETEXT(2)
"RTN","PXRMERRH",111,0)
 ;Mail out the error message.
"RTN","PXRMERRH",112,0)
 S ^TMP("PXRMXMZ",$J,1,0)=ETEXT(2)
"RTN","PXRMERRH",113,0)
 S ^TMP("PXRMXMZ",$J,2,0)=ETEXT(3)
"RTN","PXRMERRH",114,0)
 S ^TMP("PXRMXMZ",$J,3,0)="Patient DFN="_$G(PXRMPDEM("DFN"))_", User DUZ="_DUZ_", Reminder="_$G(PXRMITEM)
"RTN","PXRMERRH",115,0)
 S SUBJ="Problem with index for file number "_FILENUM
"RTN","PXRMERRH",116,0)
 D SEND^PXRMMSG(SUBJ)
"RTN","PXRMERRH",117,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMERRH",118,0)
 Q
"RTN","PXRMERRH",119,0)
 ;
"RTN","PXRMETH")
0^48^B89915697
"RTN","PXRMETH",1,0)
PXRMETH ; SLC/PJH - Reminder Extract History ;08/15/2006
"RTN","PXRMETH",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMETH",3,0)
 ;
"RTN","PXRMETH",4,0)
 ;Main entry point for PXRM EXTRACT HISTORY
"RTN","PXRMETH",5,0)
START(IEN) ;
"RTN","PXRMETH",6,0)
 N VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMETH",7,0)
 ;Details of last run
"RTN","PXRMETH",8,0)
 N DATA,NPERIOD,NSDATE,NTAS,PXRMVIEW
"RTN","PXRMETH",9,0)
 S DATA=$G(^PXRM(810.2,IEN,0))
"RTN","PXRMETH",10,0)
 S NPERIOD=$P(DATA,U,6),NSDATE=$P(DATA,U,7)
"RTN","PXRMETH",11,0)
 ;Default view is in date created order
"RTN","PXRMETH",12,0)
 S PXRMVIEW="D"
"RTN","PXRMETH",13,0)
 S X="IORESET"
"RTN","PXRMETH",14,0)
 D ENDR^%ZISS
"RTN","PXRMETH",15,0)
 S VALMCNT=0
"RTN","PXRMETH",16,0)
 D EN^VALM("PXRM EXTRACT HISTORY")
"RTN","PXRMETH",17,0)
 Q
"RTN","PXRMETH",18,0)
 ;
"RTN","PXRMETH",19,0)
ENTRY ;Entry code
"RTN","PXRMETH",20,0)
 D BLDLIST^PXRMETH1(IEN),XQORM
"RTN","PXRMETH",21,0)
 Q
"RTN","PXRMETH",22,0)
 ;
"RTN","PXRMETH",23,0)
EXIT ;Exit code
"RTN","PXRMETH",24,0)
 K ^TMP("PXRMETH",$J)
"RTN","PXRMETH",25,0)
 K ^TMP("PXRMETHH",$J)
"RTN","PXRMETH",26,0)
 D CLEAN^VALM10
"RTN","PXRMETH",27,0)
 D FULL^VALM1
"RTN","PXRMETH",28,0)
 S VALMBCK="Q"
"RTN","PXRMETH",29,0)
 Q
"RTN","PXRMETH",30,0)
 ;
"RTN","PXRMETH",31,0)
HDR ; Header code
"RTN","PXRMETH",32,0)
 N VIEW
"RTN","PXRMETH",33,0)
 S VIEW=$S(PXRMVIEW="D":"Creation Date Order",1:"Extract Period Order")
"RTN","PXRMETH",34,0)
 S VALMHDR(2)="          Extract Name: "_$P($G(^PXRM(810.2,IEN,0)),U)
"RTN","PXRMETH",35,0)
 S VALMHDR(3)="   Next Extract Period: "_NPERIOD
"RTN","PXRMETH",36,0)
 S VALMHDR(4)="      Scheduled to Run: "_NSDATE
"RTN","PXRMETH",37,0)
 S VALMHDR(4)=$$LJ^XLFSTR(VALMHDR(4),45)_"    View: "_VIEW
"RTN","PXRMETH",38,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMETH",39,0)
 Q
"RTN","PXRMETH",40,0)
 ;
"RTN","PXRMETH",41,0)
HLP ;Help code
"RTN","PXRMETH",42,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMETH",43,0)
 S SUB="PXRMETHH"
"RTN","PXRMETH",44,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMETH",45,0)
 Q
"RTN","PXRMETH",46,0)
 ;
"RTN","PXRMETH",47,0)
INIT ;Init
"RTN","PXRMETH",48,0)
 S VALMCNT=0
"RTN","PXRMETH",49,0)
 Q
"RTN","PXRMETH",50,0)
 ;
"RTN","PXRMETH",51,0)
PEXIT ;PXRM EXCH MENU protocol exit code
"RTN","PXRMETH",52,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMETH",53,0)
 D XQORM
"RTN","PXRMETH",54,0)
 Q
"RTN","PXRMETH",55,0)
 ;
"RTN","PXRMETH",56,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXTRACT HISTORY SELECT ENTRY",0))_U_"1:"_VALMCNT
"RTN","PXRMETH",57,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMETH",58,0)
 Q
"RTN","PXRMETH",59,0)
 ;
"RTN","PXRMETH",60,0)
XSEL ;PXRM EXTRACT HISTORY SELECT ENTRY validation
"RTN","PXRMETH",61,0)
 N SEL,PXRMSIEN
"RTN","PXRMETH",62,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMETH",63,0)
 ;Remove trailing ,
"RTN","PXRMETH",64,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMETH",65,0)
 ;Invalid selection
"RTN","PXRMETH",66,0)
 I SEL["," D  Q
"RTN","PXRMETH",67,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMETH",68,0)
 .S VALMBCK="R"
"RTN","PXRMETH",69,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMETH",70,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMETH",71,0)
 .S VALMBCK="R"
"RTN","PXRMETH",72,0)
 ;
"RTN","PXRMETH",73,0)
 ;Get the list ien.
"RTN","PXRMETH",74,0)
 S PXRMSIEN=^TMP("PXRMETH",$J,"IDX",SEL,SEL)
"RTN","PXRMETH",75,0)
 ;
"RTN","PXRMETH",76,0)
 ;Full screen mode
"RTN","PXRMETH",77,0)
 D FULL^VALM1
"RTN","PXRMETH",78,0)
 ;
"RTN","PXRMETH",79,0)
 ;Options
"RTN","PXRMETH",80,0)
 N X,Y,DIR,OPTION K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMETH",81,0)
 S DIR(0)="SBM"_U_"ES:Extract Summary;"
"RTN","PXRMETH",82,0)
 S DIR(0)=DIR(0)_"MT:Manual Transmission;"
"RTN","PXRMETH",83,0)
 S DIR(0)=DIR(0)_"TH:Transmission History;"
"RTN","PXRMETH",84,0)
 S DIR("A")="Select Action"
"RTN","PXRMETH",85,0)
 S DIR("B")="ES"
"RTN","PXRMETH",86,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMETH",87,0)
 S DIR("??")=U_"D HELP^PXRMETH1(1)"
"RTN","PXRMETH",88,0)
 D ^DIR K DIR
"RTN","PXRMETH",89,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMETH",90,0)
 I $D(DTOUT)!($D(DUOUT)) S VALMBCK="R" Q
"RTN","PXRMETH",91,0)
 S OPTION=Y
"RTN","PXRMETH",92,0)
 ;
"RTN","PXRMETH",93,0)
 ;Display Extract Summary
"RTN","PXRMETH",94,0)
 I OPTION="ES" D
"RTN","PXRMETH",95,0)
 .D START^PXRMETT(PXRMSIEN)
"RTN","PXRMETH",96,0)
 ;
"RTN","PXRMETH",97,0)
 ;Transmission option
"RTN","PXRMETH",98,0)
 I OPTION="MT" D
"RTN","PXRMETH",99,0)
 .N ANS,DUOUT,DTOUT,RTN,TEXT
"RTN","PXRMETH",100,0)
 .I $P($G(^PXRMXT(810.3,PXRMSIEN,100)),U)'="N" D  Q
"RTN","PXRMETH",101,0)
 ..W !,"Local extracts cannot be transmitted to AAC" H 2 Q
"RTN","PXRMETH",102,0)
 .S TEXT="Transmit this extract to AAC",ANS="",RTN="PXRMETH"
"RTN","PXRMETH",103,0)
 .S ANS=$$ASKYN^PXRMEUT("N",TEXT,RTN,3) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",104,0)
 .I ANS D TRANS^PXRMETX(PXRMSIEN)
"RTN","PXRMETH",105,0)
 ;
"RTN","PXRMETH",106,0)
 ;Transmission History
"RTN","PXRMETH",107,0)
 I OPTION="TH" D
"RTN","PXRMETH",108,0)
 .D START^PXRMETHL(PXRMSIEN)
"RTN","PXRMETH",109,0)
 ;
"RTN","PXRMETH",110,0)
 S VALMBCK="R"
"RTN","PXRMETH",111,0)
 Q
"RTN","PXRMETH",112,0)
 ;
"RTN","PXRMETH",113,0)
EXTRACT(IEN) ;Run Extract/Transmission
"RTN","PXRMETH",114,0)
 ;
"RTN","PXRMETH",115,0)
 ;Reset screen mode
"RTN","PXRMETH",116,0)
 W IORESET
"RTN","PXRMETH",117,0)
 ;Refresh on exit
"RTN","PXRMETH",118,0)
 S VALMBCK="R"
"RTN","PXRMETH",119,0)
 ;
"RTN","PXRMETH",120,0)
 ;Get details from parameter file
"RTN","PXRMETH",121,0)
 N ANS,DATA,DUOUT,DTOUT,EDATE,EXSUMPUG,FREQ,MODE
"RTN","PXRMETH",122,0)
 N NAME,NAT,NEXT,PLISTPUG,RTN,REPL,STATUS,SNEXT,TEXT,XMIT
"RTN","PXRMETH",123,0)
 S DATA=$G(^PXRM(810.2,IEN,0))
"RTN","PXRMETH",124,0)
 S NAT=$P($G(^PXRM(810.2,IEN,100)),U)
"RTN","PXRMETH",125,0)
 ;Determine Extract Name and Frequency
"RTN","PXRMETH",126,0)
 S NAME=$P(DATA,U),FREQ=$P(DATA,U,3),NEXT=$P(DATA,U,6),RTN="PXRMETX"
"RTN","PXRMETH",127,0)
 ;Save next scheduled extract
"RTN","PXRMETH",128,0)
 S SNEXT=NEXT
"RTN","PXRMETH",129,0)
 ;Select extract period
"RTN","PXRMETH",130,0)
EXSEL D SELECT(FREQ,.NEXT) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",131,0)
 ;Warn if period is still open
"RTN","PXRMETH",132,0)
 D WARN(NEXT,.STATUS)
"RTN","PXRMETH",133,0)
 ;Option to continue
"RTN","PXRMETH",134,0)
 S TEXT="Are you sure you want to run a "_NAME_" extract for "_$TR(NEXT,"/"," ")
"RTN","PXRMETH",135,0)
SURE ;
"RTN","PXRMETH",136,0)
 S ANS=$$ASKYN^PXRMEUT("N",TEXT,RTN,1) Q:$D(DUOUT)!$D(DTOUT)  Q:'ANS
"RTN","PXRMETH",137,0)
 ;Purge options
"RTN","PXRMETH",138,0)
PLIST ;
"RTN","PXRMETH",139,0)
 S PLISTPUG="N" D ASK^PXRMXD(.PLISTPUG,"Purge Patient List after 5 years?: ",5)
"RTN","PXRMETH",140,0)
 G:$D(DUOUT) SURE Q:$D(DTOUT)
"RTN","PXRMETH",141,0)
 S EXSUMPUG="N" D ASK^PXRMXD(.EXSUMPUG,"Purge Extract Summary after 5 years?: ",5)
"RTN","PXRMETH",142,0)
 G:$D(DUOUT) PLIST Q:$D(DTOUT)
"RTN","PXRMETH",143,0)
 ;Option to transmit
"RTN","PXRMETH",144,0)
 S TEXT="Transmit extract results to AAC"
"RTN","PXRMETH",145,0)
 I NAT="N" S XMIT=$$ASKYN^PXRMEUT("N",TEXT,RTN,3) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",146,0)
 E  S XMIT=0
"RTN","PXRMETH",147,0)
 ;Option to replace scheduled run
"RTN","PXRMETH",148,0)
 S REPL=0
"RTN","PXRMETH",149,0)
 I XMIT,SNEXT=NEXT,STATUS="COMPLETE" D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",150,0)
 .S TEXT="Does this extract replace the scheduled extract"
"RTN","PXRMETH",151,0)
 .S REPL=$$ASKYN^PXRMEUT("N",TEXT,RTN,4) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",152,0)
 ;
"RTN","PXRMETH",153,0)
 ;Note that the manual extract does not update 810.2
"RTN","PXRMETH",154,0)
 ;exept if the selected period is the same as the scheduled
"RTN","PXRMETH",155,0)
 ;period AND this period is complete
"RTN","PXRMETH",156,0)
 ;
"RTN","PXRMETH",157,0)
 ;Default is to extract and transmit and not update 810.2
"RTN","PXRMETH",158,0)
 S MODE=2 I 'XMIT S MODE=3
"RTN","PXRMETH",159,0)
 ;Update 810.2 if this extract is for current completed period
"RTN","PXRMETH",160,0)
 I REPL S MODE=0 I 'XMIT S MODE=1
"RTN","PXRMETH",161,0)
 ;
"RTN","PXRMETH",162,0)
 ;Extract/transmission run
"RTN","PXRMETH",163,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PXRMETH",164,0)
 S ZTDESC="Reminder Extract "_NAME
"RTN","PXRMETH",165,0)
 S ZTRTN="RUN^PXRMETX(IEN,NEXT,MODE,EXSUMPUG)"
"RTN","PXRMETH",166,0)
 S ZTSAVE("IEN")=""
"RTN","PXRMETH",167,0)
 S ZTSAVE("MODE")=""
"RTN","PXRMETH",168,0)
 S ZTSAVE("NEXT")=""
"RTN","PXRMETH",169,0)
 S ZTSAVE("PLISTPUG")=""
"RTN","PXRMETH",170,0)
 S ZTSAVE("EXSUMPUG")=""
"RTN","PXRMETH",171,0)
 S ZTIO=""
"RTN","PXRMETH",172,0)
 ;
"RTN","PXRMETH",173,0)
 ;Select and verify start date/time for task
"RTN","PXRMETH",174,0)
 N DIR,DTOUT,DUOUT,MINDT,SDTIME,STIME,X,Y
"RTN","PXRMETH",175,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMETH",176,0)
 W !,"Queue a "_ZTDESC_" for "_NEXT
"RTN","PXRMETH",177,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMETH",178,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMETH",179,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMETH",180,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMETH",181,0)
 D ^DIR
"RTN","PXRMETH",182,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMETH",183,0)
 S SDTIME=Y
"RTN","PXRMETH",184,0)
 ;
"RTN","PXRMETH",185,0)
 ;Put the task into the queue.
"RTN","PXRMETH",186,0)
 S ZTDTH=SDTIME
"RTN","PXRMETH",187,0)
 D ^%ZTLOAD
"RTN","PXRMETH",188,0)
 W !,"Task number ",ZTSK," queued." H 2
"RTN","PXRMETH",189,0)
 ;
"RTN","PXRMETH",190,0)
 S VALMBCK="Q"
"RTN","PXRMETH",191,0)
 Q
"RTN","PXRMETH",192,0)
 ;
"RTN","PXRMETH",193,0)
SELECT(FREQ,SEL) ;Select extract period
"RTN","PXRMETH",194,0)
 ;
"RTN","PXRMETH",195,0)
 N BDATE,EDATE,DA,DIE,DIK,DIR,DR,FDATE,VALID,X
"RTN","PXRMETH",196,0)
 ;Get the new name.
"RTN","PXRMETH",197,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)  Q:SEL]""
"RTN","PXRMETH",198,0)
 .S DIR("A")="Select EXTRACT PERIOD "
"RTN","PXRMETH",199,0)
 .I FREQ="M" D
"RTN","PXRMETH",200,0)
 ..S DIR("A")=DIR("A")_"(Mnn/yyyy)"
"RTN","PXRMETH",201,0)
 ..S DIR(0)="F"_U_"7:8"_U_"K:'$$VALID^PXRMETH(FREQ,X) X"
"RTN","PXRMETH",202,0)
 .I FREQ="Q" D
"RTN","PXRMETH",203,0)
 ..S DIR("A")=DIR("A")_"(Qnn/yyyy)"
"RTN","PXRMETH",204,0)
 ..S DIR(0)="F"_U_"7:7"_U_"K:'$$VALID^PXRMETH(FREQ,X) X"
"RTN","PXRMETH",205,0)
 .I FREQ="Y" D
"RTN","PXRMETH",206,0)
 ..S DIR("A")=DIR("A")_"(yyyy)"
"RTN","PXRMETH",207,0)
 ..S DIR(0)="N"_U_"2000:2050"_U_"K:(X'?4N) X"
"RTN","PXRMETH",208,0)
 .;Default is next period
"RTN","PXRMETH",209,0)
 .S DIR("B")=NEXT
"RTN","PXRMETH",210,0)
 .W ! D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMETH",211,0)
 .;Calculate beginning and end dates for period
"RTN","PXRMETH",212,0)
 .S Y=$$UP^XLFSTR(Y) D CALC^PXRMEUT(Y,.BDATE,.EDATE)
"RTN","PXRMETH",213,0)
 .;Abort if period has not started
"RTN","PXRMETH",214,0)
 .I $$FMDIFF^XLFDT(BDATE,$$NOW^XLFDT)>0 D   Q
"RTN","PXRMETH",215,0)
 ..S FDATE=$$FMTE^XLFDT(BDATE,5)
"RTN","PXRMETH",216,0)
 ..W !,"ERROR -This period does not start until "_FDATE,*7
"RTN","PXRMETH",217,0)
 .S SEL=Y
"RTN","PXRMETH",218,0)
 Q
"RTN","PXRMETH",219,0)
 ;
"RTN","PXRMETH",220,0)
TLIST ;Extract Totals
"RTN","PXRMETH",221,0)
 N IND,PXRMSIEN,VALMY
"RTN","PXRMETH",222,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMETH",223,0)
 ;If there is no list quit.
"RTN","PXRMETH",224,0)
 I '$D(VALMY) Q
"RTN","PXRMETH",225,0)
 ;PXRMDONE is newed in PXRMLPM
"RTN","PXRMETH",226,0)
 S PXRMDONE=0
"RTN","PXRMETH",227,0)
 S IND=""
"RTN","PXRMETH",228,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMETH",229,0)
 .;Get the ien.
"RTN","PXRMETH",230,0)
 .S PXRMSIEN=^TMP("PXRMETH",$J,"IDX",IND,IND)
"RTN","PXRMETH",231,0)
 .D START^PXRMETT(PXRMSIEN)
"RTN","PXRMETH",232,0)
 ;
"RTN","PXRMETH",233,0)
 S VALMBCK="R"
"RTN","PXRMETH",234,0)
 Q
"RTN","PXRMETH",235,0)
 ;
"RTN","PXRMETH",236,0)
TRANS ;Run Transmission
"RTN","PXRMETH",237,0)
 N IND,PXRMXIEN,VALMY
"RTN","PXRMETH",238,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMETH",239,0)
 ;If there is no list quit.
"RTN","PXRMETH",240,0)
 I '$D(VALMY) Q
"RTN","PXRMETH",241,0)
 S PXRMDONE=0
"RTN","PXRMETH",242,0)
 S IND=""
"RTN","PXRMETH",243,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMETH",244,0)
 .;Get the ien.
"RTN","PXRMETH",245,0)
 .S PXRMXIEN=^TMP("PXRMETH",$J,"IDX",IND,IND)
"RTN","PXRMETH",246,0)
 .I $P($G(^PXRMXT(810.3,PXRMXIEN,100)),U)'="N" D  Q
"RTN","PXRMETH",247,0)
 ..W !,"Local extracts cannot be transmitted to AAC." H 1
"RTN","PXRMETH",248,0)
 .;Transmit extract summary
"RTN","PXRMETH",249,0)
 .N ANS,DUOUT,DTOUT,RTN,TEXT
"RTN","PXRMETH",250,0)
 .S TEXT="Transmit this extract to AAC",ANS="",RTN="PXRMETH"
"RTN","PXRMETH",251,0)
 .S ANS=$$ASKYN^PXRMEUT("N",TEXT,RTN,3) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",252,0)
 .I ANS D TRANS^PXRMETX(PXRMXIEN)
"RTN","PXRMETH",253,0)
 ;
"RTN","PXRMETH",254,0)
 ;Rebuild workfile
"RTN","PXRMETH",255,0)
 D BLDLIST^PXRMETH1(IEN)
"RTN","PXRMETH",256,0)
 ;Refresh
"RTN","PXRMETH",257,0)
 S VALMBCK="R"
"RTN","PXRMETH",258,0)
 Q
"RTN","PXRMETH",259,0)
 ;
"RTN","PXRMETH",260,0)
TRHIST ;Transmission History
"RTN","PXRMETH",261,0)
 N IND,PXRMSIEN,VALMY
"RTN","PXRMETH",262,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMETH",263,0)
 ;If there is no list quit.
"RTN","PXRMETH",264,0)
 I '$D(VALMY) Q
"RTN","PXRMETH",265,0)
 ;PXRMDONE is newed in PXRMLPM
"RTN","PXRMETH",266,0)
 S PXRMDONE=0
"RTN","PXRMETH",267,0)
 S IND=""
"RTN","PXRMETH",268,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMETH",269,0)
 .;Get the ien.
"RTN","PXRMETH",270,0)
 .S PXRMSIEN=^TMP("PXRMETH",$J,"IDX",IND,IND)
"RTN","PXRMETH",271,0)
 .D START^PXRMETHL(PXRMSIEN)
"RTN","PXRMETH",272,0)
 ;
"RTN","PXRMETH",273,0)
 S VALMBCK="R"
"RTN","PXRMETH",274,0)
 Q
"RTN","PXRMETH",275,0)
 ;
"RTN","PXRMETH",276,0)
VALID(FREQ,INP) ;Validate Period input
"RTN","PXRMETH",277,0)
 W !
"RTN","PXRMETH",278,0)
 N PERIOD,YEAR
"RTN","PXRMETH",279,0)
 ;Convert to upper case
"RTN","PXRMETH",280,0)
 S INP=$$UP^XLFSTR(INP)
"RTN","PXRMETH",281,0)
 ;General format
"RTN","PXRMETH",282,0)
 I $E(INP)'=FREQ D EN^DDIOL("Format should be "_FREQ_"nn/yyyy") Q 0
"RTN","PXRMETH",283,0)
 S PERIOD=$P(INP,"/"),YEAR=$P(INP,"/",2)
"RTN","PXRMETH",284,0)
 S PERIOD=$P(PERIOD,FREQ,2)
"RTN","PXRMETH",285,0)
 ;All runs
"RTN","PXRMETH",286,0)
 I (YEAR<2000)!(YEAR>2050) D EN^DDIOL("Year should be in range 2000-2050") Q 0
"RTN","PXRMETH",287,0)
 ;Quarterly run
"RTN","PXRMETH",288,0)
 I FREQ="Q",(PERIOD>4)!(PERIOD<1) D EN^DDIOL("Quarter should be in range 1-4") Q 0
"RTN","PXRMETH",289,0)
 ;Monthly run
"RTN","PXRMETH",290,0)
 I FREQ="M",(PERIOD>12)!(PERIOD<1) D EN^DDIOL("Month should be in range 1-12") Q 0
"RTN","PXRMETH",291,0)
 ;Otherwise
"RTN","PXRMETH",292,0)
 Q 1
"RTN","PXRMETH",293,0)
 ;
"RTN","PXRMETH",294,0)
VIEW ;Select view
"RTN","PXRMETH",295,0)
 ;
"RTN","PXRMETH",296,0)
 W IORESET
"RTN","PXRMETH",297,0)
 ;
"RTN","PXRMETH",298,0)
 S VALMBCK="R"
"RTN","PXRMETH",299,0)
 ;
"RTN","PXRMETH",300,0)
 N X,Y,CODE,DIR
"RTN","PXRMETH",301,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMETH",302,0)
 S DIR(0)="S"_U_"D:Sort by Creation Date;"
"RTN","PXRMETH",303,0)
 S DIR(0)=DIR(0)_"P:Sort by Extract Period;"
"RTN","PXRMETH",304,0)
 S DIR("A")="TYPE OF VIEW"
"RTN","PXRMETH",305,0)
 S DIR("B")=$S(PXRMVIEW="P":"D",1:"P")
"RTN","PXRMETH",306,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMETH",307,0)
 ;BOOKMARK - HELP NEEDS MOVING
"RTN","PXRMETH",308,0)
 S DIR("??")=U_"D HELP^PXRMSEL2(3)"
"RTN","PXRMETH",309,0)
 D ^DIR K DIR
"RTN","PXRMETH",310,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMETH",311,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMETH",312,0)
 ;Change display type
"RTN","PXRMETH",313,0)
 S PXRMVIEW=Y
"RTN","PXRMETH",314,0)
 ;
"RTN","PXRMETH",315,0)
 ;Rebuild Workfile
"RTN","PXRMETH",316,0)
 D BLDLIST^PXRMETH1(IEN),HDR
"RTN","PXRMETH",317,0)
 Q
"RTN","PXRMETH",318,0)
 ;
"RTN","PXRMETH",319,0)
WARN(NEXT,STATUS) ;Warn if period is not completed
"RTN","PXRMETH",320,0)
 N BDATE,EDATE,FDATE
"RTN","PXRMETH",321,0)
 ;Calculate beginning and end dates for period
"RTN","PXRMETH",322,0)
 D CALC^PXRMEUT(NEXT,.BDATE,.EDATE)
"RTN","PXRMETH",323,0)
 ;No warning if period end date is a prior date
"RTN","PXRMETH",324,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,EDATE)>0 S STATUS="COMPLETE" Q
"RTN","PXRMETH",325,0)
 ;Else Format date
"RTN","PXRMETH",326,0)
 S FDATE=$$FMTE^XLFDT(EDATE,5),STATUS="INCOMPLETE"
"RTN","PXRMETH",327,0)
 ;And Warn that period end date is a future date
"RTN","PXRMETH",328,0)
 W !!,"WARNING -This period is not complete until "_FDATE
"RTN","PXRMETH",329,0)
 Q
"RTN","PXRMETH1")
0^171^B13018351
"RTN","PXRMETH1",1,0)
PXRMETH1 ; SLC/PJH - Reminder Extract History ;07/24/2006
"RTN","PXRMETH1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMETH1",3,0)
 ;
"RTN","PXRMETH1",4,0)
BLDLIST(IEN) ;Build workfile
"RTN","PXRMETH1",5,0)
 N IND,PLIST
"RTN","PXRMETH1",6,0)
 K ^TMP("PXRMETH",$J)
"RTN","PXRMETH1",7,0)
 ;Build list of extract summaries in period order
"RTN","PXRMETH1",8,0)
 I PXRMVIEW="P" D LIST1(.PLIST,.IEN)
"RTN","PXRMETH1",9,0)
 ;Build list of extract summaries in date order
"RTN","PXRMETH1",10,0)
 I PXRMVIEW="D" D LIST2(.PLIST,.IEN)
"RTN","PXRMETH1",11,0)
 ;Move into list array
"RTN","PXRMETH1",12,0)
 M ^TMP("PXRMETH",$J)=PLIST
"RTN","PXRMETH1",13,0)
 S VALMCNT=PLIST("VALMCNT")
"RTN","PXRMETH1",14,0)
 ;Allow selection by item
"RTN","PXRMETH1",15,0)
 F IND=1:1:VALMCNT D
"RTN","PXRMETH1",16,0)
 .S ^TMP("PXRMETH",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMETH1",17,0)
 Q
"RTN","PXRMETH1",18,0)
 ;
"RTN","PXRMETH1",19,0)
HELP(CALL) ;General help text routine.
"RTN","PXRMETH1",20,0)
 N HTEXT
"RTN","PXRMETH1",21,0)
 I CALL=1 D
"RTN","PXRMETH1",22,0)
 .S HTEXT(1)="Select ES to view the details of an extract or run a compliance"
"RTN","PXRMETH1",23,0)
 .S HTEXT(2)="report for the extract. Select MT to transmit extract details to the AAC."
"RTN","PXRMETH1",24,0)
 .S HTEXT(3)="Select TH to view the transmission history for an extract."
"RTN","PXRMETH1",25,0)
 ;
"RTN","PXRMETH1",26,0)
 I CALL=3 D
"RTN","PXRMETH1",27,0)
 .S HTEXT(1)="Select Y to send the results of the Extract to the National Austin database."
"RTN","PXRMETH1",28,0)
 ;
"RTN","PXRMETH1",29,0)
 I CALL=4 D
"RTN","PXRMETH1",30,0)
 .S HTEXT(4)="Select Y to overwrite the previous Extract stored in the National Austin Database."
"RTN","PXRMETH1",31,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMETH1",32,0)
 Q
"RTN","PXRMETH1",33,0)
 ;
"RTN","PXRMETH1",34,0)
LIST1(LIST,IEN) ;Build a list of extract summaries for a parameter.
"RTN","PXRMETH1",35,0)
 N AUTO,EDATE,HL7ID,HL7SUB,IND,NAME,PERIOD,XDATE,YEAR
"RTN","PXRMETH1",36,0)
 ;Build list of extract summaries in reverse date order.
"RTN","PXRMETH1",37,0)
 S YEAR="9999",VALMCNT=0
"RTN","PXRMETH1",38,0)
 F  S YEAR=$O(^PXRMXT(810.3,"D",IEN,YEAR),-1) Q:YEAR=""  D
"RTN","PXRMETH1",39,0)
 .S PERIOD="99"
"RTN","PXRMETH1",40,0)
 .F  S PERIOD=$O(^PXRMXT(810.3,"D",IEN,YEAR,PERIOD),-1) Q:PERIOD=""  D
"RTN","PXRMETH1",41,0)
 ..S IND=""
"RTN","PXRMETH1",42,0)
 ..F  S IND=$O(^PXRMXT(810.3,"D",IEN,YEAR,PERIOD,IND),-1) Q:IND=""  D
"RTN","PXRMETH1",43,0)
 ...S NAME=$P($G(^PXRMXT(810.3,IND,0)),U)
"RTN","PXRMETH1",44,0)
 ...S EDATE=$P($G(^PXRMXT(810.3,IND,0)),U,6)
"RTN","PXRMETH1",45,0)
 ...S AUTO=$P($G(^PXRMXT(810.3,IND,4)),U,5)
"RTN","PXRMETH1",46,0)
 ...S AUTO=$S(AUTO="A":"Y",1:"N")
"RTN","PXRMETH1",47,0)
 ...S HL7ID=$O(^PXRMXT(810.3,IND,5,"B",""),-1),XDATE="",HL7SUB=""
"RTN","PXRMETH1",48,0)
 ...I HL7ID S HL7SUB=$O(^PXRMXT(810.3,IND,5,"B",HL7ID,""))
"RTN","PXRMETH1",49,0)
 ...I HL7SUB S XDATE=$P($G(^PXRMXT(810.3,IND,5,HL7SUB,0)),U,2)
"RTN","PXRMETH1",50,0)
 ...I 'XDATE S XDATE="Not Transmitted"
"RTN","PXRMETH1",51,0)
 ...S VALMCNT=VALMCNT+1
"RTN","PXRMETH1",52,0)
 ...S LIST(VALMCNT,0)=$$FRE(VALMCNT,NAME,EDATE,XDATE,AUTO)
"RTN","PXRMETH1",53,0)
 ...S IEN(VALMCNT)=IND
"RTN","PXRMETH1",54,0)
 S LIST("VALMCNT")=VALMCNT
"RTN","PXRMETH1",55,0)
 Q
"RTN","PXRMETH1",56,0)
 ;
"RTN","PXRMETH1",57,0)
LIST2(LIST,IEN) ;Build a list of extract summaries for a parameter.
"RTN","PXRMETH1",58,0)
 N AUTO,EDATE,HL7ID,HL7SUB,IND,NAME,PERIOD,XDATE,YEAR
"RTN","PXRMETH1",59,0)
 ;Build list of extract summaries in reverse date order.
"RTN","PXRMETH1",60,0)
 S EDATE="",VALMCNT=0
"RTN","PXRMETH1",61,0)
 F  S EDATE=$O(^PXRMXT(810.3,"C",IEN,EDATE),-1) Q:'EDATE  D
"RTN","PXRMETH1",62,0)
 .S IND=""
"RTN","PXRMETH1",63,0)
 .F  S IND=$O(^PXRMXT(810.3,"C",IEN,EDATE,IND)) Q:'IND  D
"RTN","PXRMETH1",64,0)
 ..S NAME=$P($G(^PXRMXT(810.3,IND,0)),U)
"RTN","PXRMETH1",65,0)
 ..S AUTO=$P($G(^PXRMXT(810.3,IND,4)),U,5)
"RTN","PXRMETH1",66,0)
 ..S AUTO=$S(AUTO="A":"Y",1:"N")
"RTN","PXRMETH1",67,0)
 ..S HL7ID=$O(^PXRMXT(810.3,IND,5,"B",""),-1),XDATE="",HL7SUB=""
"RTN","PXRMETH1",68,0)
 ..I HL7ID S HL7SUB=$O(^PXRMXT(810.3,IND,5,"B",HL7ID,""))
"RTN","PXRMETH1",69,0)
 ..I HL7SUB S XDATE=$P($G(^PXRMXT(810.3,IND,5,HL7SUB,0)),U,2)
"RTN","PXRMETH1",70,0)
 ..I 'XDATE S XDATE="Not Transmitted"
"RTN","PXRMETH1",71,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMETH1",72,0)
 ..S LIST(VALMCNT,0)=$$FRE(VALMCNT,NAME,EDATE,XDATE,AUTO)
"RTN","PXRMETH1",73,0)
 ..S IEN(VALMCNT)=IND
"RTN","PXRMETH1",74,0)
 S LIST("VALMCNT")=VALMCNT
"RTN","PXRMETH1",75,0)
 Q
"RTN","PXRMETH1",76,0)
 ;
"RTN","PXRMETH1",77,0)
FRE(NUMBER,NAME,EDATE,XDATE,AUTO) ;Format
"RTN","PXRMETH1",78,0)
 N TAUTO,TDATE,TEMP,TNAME,TSOURCE
"RTN","PXRMETH1",79,0)
 S TEMP=$$RJ^XLFSTR(NUMBER,5," ")
"RTN","PXRMETH1",80,0)
 S TNAME=$E(NAME,1,27)
"RTN","PXRMETH1",81,0)
 S TEMP=TEMP_" "_$$LJ^XLFSTR(TNAME,27," ")
"RTN","PXRMETH1",82,0)
 S TDATE=$$FMTE^XLFDT(EDATE,"5Z")
"RTN","PXRMETH1",83,0)
 S TEMP=TEMP_" "_$$LJ^XLFSTR(TDATE,20," ")
"RTN","PXRMETH1",84,0)
 S TDATE=XDATE I TDATE S TDATE=$$FMTE^XLFDT(TDATE,"5Z")
"RTN","PXRMETH1",85,0)
 S TEMP=TEMP_" "_$$LJ^XLFSTR(TDATE,22," ")
"RTN","PXRMETH1",86,0)
 S TAUTO=AUTO
"RTN","PXRMETH1",87,0)
 S TEMP=TEMP_TAUTO
"RTN","PXRMETH1",88,0)
 Q TEMP
"RTN","PXRMETHL")
0^134^B3978454
"RTN","PXRMETHL",1,0)
PXRMETHL ; SLC/PKR/PJH - Reminder Extract Transmissions; 12/09/2003
"RTN","PXRMETHL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMETHL",3,0)
 ;
"RTN","PXRMETHL",4,0)
 ;Main entry point for PXRM EXTRACT TRANSMISSIONS
"RTN","PXRMETHL",5,0)
START(IEN) N VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMETHL",6,0)
 ;Details of last run
"RTN","PXRMETHL",7,0)
 N DATA,NPERIOD,NSDATE,NTASK
"RTN","PXRMETHL",8,0)
 S DATA=$G(^PXRM(810.2,IEN,0))
"RTN","PXRMETHL",9,0)
 ;S NPERIOD=$P(DATA,U,6),NSDATE=$P(DATA,U,7),NTASK=$P(DATA,U,8)
"RTN","PXRMETHL",10,0)
 S NPERIOD=$P(DATA,U,6),NSDATE=$P(DATA,U,7)
"RTN","PXRMETHL",11,0)
 S VALMCNT=0
"RTN","PXRMETHL",12,0)
 D EN^VALM("PXRM EXTRACT TRANSMISSIONS")
"RTN","PXRMETHL",13,0)
 Q
"RTN","PXRMETHL",14,0)
 ;
"RTN","PXRMETHL",15,0)
BLDLIST ;Build workfile
"RTN","PXRMETHL",16,0)
 K ^TMP("PXRMETHL",$J)
"RTN","PXRMETHL",17,0)
 ;List of HL7 transmissions in reverse date order
"RTN","PXRMETHL",18,0)
 N ID,SUB,XDATE,XSTATUS
"RTN","PXRMETHL",19,0)
 S ID=""
"RTN","PXRMETHL",20,0)
 F  S ID=$O(^PXRMXT(810.3,IEN,5,"B",ID),-1) Q:ID=""  D
"RTN","PXRMETHL",21,0)
 .S SUB=$O(^PXRMXT(810.3,IEN,5,"B",ID,"")) Q:'SUB
"RTN","PXRMETHL",22,0)
 .S XDATE=$P($G(^PXRMXT(810.3,IEN,5,SUB,0)),U,2)
"RTN","PXRMETHL",23,0)
 .S XSTATUS=$$STATUS^PXRM7API(ID)
"RTN","PXRMETHL",24,0)
 .I 'XDATE S XDATE="Not Transmitted",XSTATUS=""
"RTN","PXRMETHL",25,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMETHL",26,0)
 .S ^TMP("PXRMETHL",$J,VALMCNT,0)=$$FRE(ID,XDATE,XSTATUS)
"RTN","PXRMETHL",27,0)
 Q
"RTN","PXRMETHL",28,0)
 ;
"RTN","PXRMETHL",29,0)
FRE(ID,DATE,STATUS) ;Format  entry number, name, date created
"RTN","PXRMETHL",30,0)
 N TDATE,TEMP,TID,TSTATUS
"RTN","PXRMETHL",31,0)
 S TID=$E(ID,1,13)
"RTN","PXRMETHL",32,0)
 S TEMP=" "_$$LJ^XLFSTR(TID,16," ")
"RTN","PXRMETHL",33,0)
 S TDATE=$$FMTE^XLFDT(DATE,"5Z")
"RTN","PXRMETHL",34,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(TDATE,20," ")
"RTN","PXRMETHL",35,0)
 S TSTATUS=$E(STATUS,1,38)
"RTN","PXRMETHL",36,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(TSTATUS,38," ")
"RTN","PXRMETHL",37,0)
 Q TEMP
"RTN","PXRMETHL",38,0)
 ;
"RTN","PXRMETHL",39,0)
ENTRY ;Entry code
"RTN","PXRMETHL",40,0)
 D BLDLIST
"RTN","PXRMETHL",41,0)
 Q
"RTN","PXRMETHL",42,0)
 ;
"RTN","PXRMETHL",43,0)
EXIT ;Exit code
"RTN","PXRMETHL",44,0)
 K ^TMP("PXRMETHL",$J)
"RTN","PXRMETHL",45,0)
 D CLEAN^VALM10
"RTN","PXRMETHL",46,0)
 D FULL^VALM1
"RTN","PXRMETHL",47,0)
 S VALMBCK="Q"
"RTN","PXRMETHL",48,0)
 Q
"RTN","PXRMETHL",49,0)
 ;
"RTN","PXRMETHL",50,0)
HDR ; Header code
"RTN","PXRMETHL",51,0)
 S VALMHDR(2)="  Extract Summary Name: "_$P($G(^PXRMXT(810.3,IEN,0)),U)
"RTN","PXRMETHL",52,0)
 S VALMHDR(3)="          Date Created: "_$$FMTE^XLFDT($P($G(^PXRMXT(810.3,IEN,0)),U,6),"5Z")
"RTN","PXRMETHL",53,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMETHL",54,0)
 Q
"RTN","PXRMETHL",55,0)
 ;
"RTN","PXRMETHL",56,0)
INIT ;Initialization code
"RTN","PXRMETHL",57,0)
 S VALMCNT=0
"RTN","PXRMETHL",58,0)
 Q
"RTN","PXRMETM")
0^49^B28395504
"RTN","PXRMETM",1,0)
PXRMETM ; SLC/PKR/PJH - Extract/Transmission Management ;05/15/2006
"RTN","PXRMETM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMETM",3,0)
 ;
"RTN","PXRMETM",4,0)
 ;Main entry point for PXRM EXTRACT MANAGEMENT
"RTN","PXRMETM",5,0)
START N PXRMDONE,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMETM",6,0)
 S X="IORESET"
"RTN","PXRMETM",7,0)
 D ENDR^%ZISS
"RTN","PXRMETM",8,0)
 S VALMCNT=0
"RTN","PXRMETM",9,0)
 D EN^VALM("PXRM EXTRACT MANAGEMENT")
"RTN","PXRMETM",10,0)
 W IORESET
"RTN","PXRMETM",11,0)
 D KILL^%ZISS
"RTN","PXRMETM",12,0)
 Q
"RTN","PXRMETM",13,0)
 ;
"RTN","PXRMETM",14,0)
BLDLIST ;Build workfile
"RTN","PXRMETM",15,0)
 K ^TMP("PXRMETM",$J)
"RTN","PXRMETM",16,0)
 N IEN,IND,PLIST
"RTN","PXRMETM",17,0)
 D LIST(.PLIST,.IEN)
"RTN","PXRMETM",18,0)
 M ^TMP("PXRMETM",$J)=PLIST
"RTN","PXRMETM",19,0)
 S VALMCNT=PLIST("VALMCNT")
"RTN","PXRMETM",20,0)
 F IND=1:1:VALMCNT D
"RTN","PXRMETM",21,0)
 .S ^TMP("PXRMETM",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMETM",22,0)
 Q
"RTN","PXRMETM",23,0)
 ;
"RTN","PXRMETM",24,0)
LIST(RLIST,IEN) ;Build a list of extract definition entries.
"RTN","PXRMETM",25,0)
 N EPCLASS,IND,FNAME,NAME
"RTN","PXRMETM",26,0)
 ;Build the list in alphabetical order.
"RTN","PXRMETM",27,0)
 S VALMCNT=0
"RTN","PXRMETM",28,0)
 S NAME=""
"RTN","PXRMETM",29,0)
 F  S NAME=$O(^PXRM(810.2,"B",NAME)) Q:NAME=""  D
"RTN","PXRMETM",30,0)
 .S IND=$O(^PXRM(810.2,"B",NAME,"")) Q:'IND
"RTN","PXRMETM",31,0)
 .S FNAME=$P($G(^PXRM(810.2,IND,0)),U)
"RTN","PXRMETM",32,0)
 .S EPCLASS=$P($G(^PXRM(810.2,IND,100)),U)
"RTN","PXRMETM",33,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMETM",34,0)
 .S RLIST(VALMCNT,0)=$$FRE(VALMCNT,FNAME,EPCLASS)
"RTN","PXRMETM",35,0)
 .S IEN(VALMCNT)=IND
"RTN","PXRMETM",36,0)
 S RLIST("VALMCNT")=VALMCNT
"RTN","PXRMETM",37,0)
 Q
"RTN","PXRMETM",38,0)
 ;
"RTN","PXRMETM",39,0)
FRE(NUMBER,NAME,CLASS) ;Format  entry number, name
"RTN","PXRMETM",40,0)
 ;and date packed.
"RTN","PXRMETM",41,0)
 N TCLASS,TEMP,TNAME,TSOURCE
"RTN","PXRMETM",42,0)
 S TEMP=$$RJ^XLFSTR(NUMBER,5," ")
"RTN","PXRMETM",43,0)
 S TNAME=$E(NAME,1,46)
"RTN","PXRMETM",44,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(TNAME,60," ")
"RTN","PXRMETM",45,0)
 S TCLASS=$S(CLASS="N":"NATIONAL",CLASS="V":"VISN",1:"LOCAL")
"RTN","PXRMETM",46,0)
 S TEMP=TEMP_"  "_TCLASS
"RTN","PXRMETM",47,0)
 Q TEMP
"RTN","PXRMETM",48,0)
 ;
"RTN","PXRMETM",49,0)
ENTRY ;Entry code
"RTN","PXRMETM",50,0)
 D BLDLIST,XQORM
"RTN","PXRMETM",51,0)
 Q
"RTN","PXRMETM",52,0)
 ;
"RTN","PXRMETM",53,0)
EXIT ;Exit code
"RTN","PXRMETM",54,0)
 K ^TMP("PXRMETM",$J)
"RTN","PXRMETM",55,0)
 K ^TMP("PXRMETMH",$J)
"RTN","PXRMETM",56,0)
 D CLEAN^VALM10
"RTN","PXRMETM",57,0)
 D FULL^VALM1
"RTN","PXRMETM",58,0)
 S VALMBCK="Q"
"RTN","PXRMETM",59,0)
 Q
"RTN","PXRMETM",60,0)
 ;
"RTN","PXRMETM",61,0)
HDR ; Header code
"RTN","PXRMETM",62,0)
 S VALMHDR(1)="Available Extract Definitions:"
"RTN","PXRMETM",63,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMETM",64,0)
 Q
"RTN","PXRMETM",65,0)
 ;
"RTN","PXRMETM",66,0)
HLP ;Help code
"RTN","PXRMETM",67,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMETM",68,0)
 S SUB="PXRMETMH"
"RTN","PXRMETM",69,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMETM",70,0)
 Q
"RTN","PXRMETM",71,0)
 ;
"RTN","PXRMETM",72,0)
INIT ;Init
"RTN","PXRMETM",73,0)
 S VALMCNT=0
"RTN","PXRMETM",74,0)
 Q
"RTN","PXRMETM",75,0)
 ;
"RTN","PXRMETM",76,0)
PEXIT ;Protocol exit code
"RTN","PXRMETM",77,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMETM",78,0)
 ;Reset after page up/down etc
"RTN","PXRMETM",79,0)
 D XQORM
"RTN","PXRMETM",80,0)
 Q
"RTN","PXRMETM",81,0)
 ;
"RTN","PXRMETM",82,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXTRACT MANAGEMENT SELECT ENTRY",0))_U_"1:"_VALMCNT
"RTN","PXRMETM",83,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMETM",84,0)
 Q
"RTN","PXRMETM",85,0)
 ;
"RTN","PXRMETM",86,0)
XSEL ;PXRM EXTRACT MANAGEMENT SELECT ENTRY validation
"RTN","PXRMETM",87,0)
 N SEL,IEN
"RTN","PXRMETM",88,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMETM",89,0)
 ;Remove trailing ,
"RTN","PXRMETM",90,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMETM",91,0)
 ;Invalid selection
"RTN","PXRMETM",92,0)
 I SEL["," D  Q
"RTN","PXRMETM",93,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMETM",94,0)
 .S VALMBCK="R"
"RTN","PXRMETM",95,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMETM",96,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMETM",97,0)
 .S VALMBCK="R"
"RTN","PXRMETM",98,0)
 ;
"RTN","PXRMETM",99,0)
 ;Get the list ien.
"RTN","PXRMETM",100,0)
 S IEN=^TMP("PXRMETM",$J,"IDX",SEL,SEL)
"RTN","PXRMETM",101,0)
 ;
"RTN","PXRMETM",102,0)
 ;Full screen mode
"RTN","PXRMETM",103,0)
 D FULL^VALM1
"RTN","PXRMETM",104,0)
 ;
"RTN","PXRMETM",105,0)
 ;Options
"RTN","PXRMETM",106,0)
 N X,Y,DIR,OPTION K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMETM",107,0)
 S DIR(0)="SBM"_U_"EDM:Extract Definition Management;"
"RTN","PXRMETM",108,0)
 S DIR(0)=DIR(0)_"VSE:Examine/Schedule Extract;"
"RTN","PXRMETM",109,0)
 S DIR("A")="Select Action"
"RTN","PXRMETM",110,0)
 S DIR("B")="VSE"
"RTN","PXRMETM",111,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMETM",112,0)
 S DIR("??")=U_"D HELP^PXRMETM(1)"
"RTN","PXRMETM",113,0)
 D ^DIR K DIR
"RTN","PXRMETM",114,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMETM",115,0)
 I $D(DTOUT)!($D(DUOUT)) S VALMBCK="R" Q
"RTN","PXRMETM",116,0)
 S OPTION=Y
"RTN","PXRMETM",117,0)
 ;
"RTN","PXRMETM",118,0)
 ;Display Extract Definitions
"RTN","PXRMETM",119,0)
 I OPTION="EDM" D
"RTN","PXRMETM",120,0)
 .D START^PXRMEPED(IEN)
"RTN","PXRMETM",121,0)
 ;
"RTN","PXRMETM",122,0)
 ;Examine/Run Extract
"RTN","PXRMETM",123,0)
 I OPTION="VSE" D
"RTN","PXRMETM",124,0)
 .D START^PXRMETH(IEN)
"RTN","PXRMETM",125,0)
 ;
"RTN","PXRMETM",126,0)
 ;Examine/Run Extract
"RTN","PXRMETM",127,0)
 I OPTION="ERE" D
"RTN","PXRMETM",128,0)
 .D GENSEL(IEN)
"RTN","PXRMETM",129,0)
 ;
"RTN","PXRMETM",130,0)
 S VALMBCK="R"
"RTN","PXRMETM",131,0)
 Q
"RTN","PXRMETM",132,0)
 ;
"RTN","PXRMETM",133,0)
HELP(CALL) ;General help text routine
"RTN","PXRMETM",134,0)
 N HTEXT
"RTN","PXRMETM",135,0)
 I CALL=1 D
"RTN","PXRMETM",136,0)
 .S HTEXT(1)="Select EDM to edit/display extract definitions."
"RTN","PXRMETM",137,0)
 .S HTEXT(2)="extract. Select VSE to view previous extracts or "
"RTN","PXRMETM",138,0)
 .S HTEXT(3)="initiate a manual extract or transmission."
"RTN","PXRMETM",139,0)
 ;
"RTN","PXRMETM",140,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMETM",141,0)
 Q
"RTN","PXRMETM",142,0)
 ;
"RTN","PXRMETM",143,0)
GEN ;Ad hoc report option
"RTN","PXRMETM",144,0)
 ;
"RTN","PXRMETM",145,0)
 ;Reset Screen Mode
"RTN","PXRMETM",146,0)
 W IORESET
"RTN","PXRMETM",147,0)
 ;
"RTN","PXRMETM",148,0)
 N IND,LISTIEN,VALMY
"RTN","PXRMETM",149,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMETM",150,0)
 ;If there is no list quit.
"RTN","PXRMETM",151,0)
 I '$D(VALMY) Q
"RTN","PXRMETM",152,0)
 S PXRMDONE=0
"RTN","PXRMETM",153,0)
 S IND=""
"RTN","PXRMETM",154,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMETM",155,0)
 .;Get the ien.
"RTN","PXRMETM",156,0)
 .S LISTIEN=^TMP("PXRMETM",$J,"IDX",IND,IND)
"RTN","PXRMETM",157,0)
 .D GENSEL(LISTIEN)
"RTN","PXRMETM",158,0)
 ;
"RTN","PXRMETM",159,0)
 S VALMBCK="R"
"RTN","PXRMETM",160,0)
 Q
"RTN","PXRMETM",161,0)
 ;
"RTN","PXRMETM",162,0)
GENSEL(IEN) ;Report for selected extract definition
"RTN","PXRMETM",163,0)
 N ANS,BEGIN,END,RTN,TEXT
"RTN","PXRMETM",164,0)
 D DATES^PXRMEUT(.BEGIN,.END,"Report")
"RTN","PXRMETM",165,0)
 ;Options
"RTN","PXRMETM",166,0)
 S RTN="PXRMETM",TEXT="Run compliance report for this period"
"RTN","PXRMETM",167,0)
 S ANS=$$ASKYN^PXRMEUT("N",TEXT,RTN,1) Q:'ANS  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETM",168,0)
 ;Print Report
"RTN","PXRMETM",169,0)
 D ADHOC^PXRMETCO(IEN,BEGIN,END)
"RTN","PXRMETM",170,0)
 Q
"RTN","PXRMETM",171,0)
 ;
"RTN","PXRMETM",172,0)
HLIST ;Extract History
"RTN","PXRMETM",173,0)
 N IND,LISTIEN,VALMY
"RTN","PXRMETM",174,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMETM",175,0)
 ;If there is no list quit.
"RTN","PXRMETM",176,0)
 I '$D(VALMY) Q
"RTN","PXRMETM",177,0)
 S PXRMDONE=0
"RTN","PXRMETM",178,0)
 S IND=""
"RTN","PXRMETM",179,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMETM",180,0)
 .;Get the ien.
"RTN","PXRMETM",181,0)
 .S LISTIEN=^TMP("PXRMETM",$J,"IDX",IND,IND)
"RTN","PXRMETM",182,0)
 .D START^PXRMETH(LISTIEN)
"RTN","PXRMETM",183,0)
 S VALMBCK="R"
"RTN","PXRMETM",184,0)
 Q
"RTN","PXRMETM",185,0)
 ;
"RTN","PXRMETM",186,0)
PLIST ;Extract Definition Inquiry
"RTN","PXRMETM",187,0)
 N IND,EPIEN,VALMY
"RTN","PXRMETM",188,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMETM",189,0)
 ;If there is no list quit.
"RTN","PXRMETM",190,0)
 I '$D(VALMY) Q
"RTN","PXRMETM",191,0)
 S PXRMDONE=0
"RTN","PXRMETM",192,0)
 S IND=""
"RTN","PXRMETM",193,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMETM",194,0)
 .;Get the ien.
"RTN","PXRMETM",195,0)
 .S EPIEN=^TMP("PXRMETM",$J,"IDX",IND,IND)
"RTN","PXRMETM",196,0)
 .D START^PXRMEPED(EPIEN)
"RTN","PXRMETM",197,0)
 ;
"RTN","PXRMETM",198,0)
 S VALMBCK="R"
"RTN","PXRMETM",199,0)
 Q
"RTN","PXRMETT")
0^115^B44639799
"RTN","PXRMETT",1,0)
PXRMETT ; SLC/PKR/PJH - Reminder Patient List Patients ;08/08/2006
"RTN","PXRMETT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMETT",3,0)
 ;
"RTN","PXRMETT",4,0)
 ;Main entry point for PXRM PATIENT LIST
"RTN","PXRMETT",5,0)
START(IEN) N TOGGLE,TOGGLE1,VALMBCK,VALMBG,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMETT",6,0)
 S X="IORESET"
"RTN","PXRMETT",7,0)
 D ENDR^%ZISS
"RTN","PXRMETT",8,0)
 S VALMCNT=0,TOGGLE=0,TOGGLE1=0
"RTN","PXRMETT",9,0)
 D EN^VALM("PXRM EXTRACT SUMMARY")
"RTN","PXRMETT",10,0)
 Q
"RTN","PXRMETT",11,0)
 ;
"RTN","PXRMETT",12,0)
BLDLIST(IEN,FINDINGS,PATIENT) ;Build workfile.
"RTN","PXRMETT",13,0)
 K ^TMP("PXRMETT",$J)
"RTN","PXRMETT",14,0)
 ;Build a list of extract summary totals.
"RTN","PXRMETT",15,0)
 N APPL,DATA,DUE,IND,LIST,NDUE,NAPPL,OLIST
"RTN","PXRMETT",16,0)
 N PLCNT,PLIST,RIEN,RNAME,SARRAY,SNAME,STATION,TOT
"RTN","PXRMETT",17,0)
 ;Build the list in alphabetical order.
"RTN","PXRMETT",18,0)
 S IND=0,VALMCNT=0,OLIST="",PLCNT=0
"RTN","PXRMETT",19,0)
 F  S IND=$O(^PXRMXT(810.3,IEN,3,IND)) Q:'IND  D
"RTN","PXRMETT",20,0)
 .S DATA=$G(^PXRMXT(810.3,IEN,3,IND,0)) Q:DATA=""
"RTN","PXRMETT",21,0)
 .S RIEN=$P(DATA,U,2) Q:'RIEN
"RTN","PXRMETT",22,0)
 .S RNAME=$P($G(^PXD(811.9,RIEN,0)),U)
"RTN","PXRMETT",23,0)
 .S STATION=$P(DATA,U,3),SARRAY=""
"RTN","PXRMETT",24,0)
 .D GETS^DIQ(4,STATION,99,"E","SARRAY")
"RTN","PXRMETT",25,0)
 .S SNAME=$G(SARRAY(4,STATION_",",99,"E"))
"RTN","PXRMETT",26,0)
 .I SNAME="" S SNAME=STATION
"RTN","PXRMETT",27,0)
 .S TOT=+$P(DATA,U,5),APPL=+$P(DATA,U,6),NAPPL=+$P(DATA,U,7)
"RTN","PXRMETT",28,0)
 .S DUE=+$P(DATA,U,8),NDUE=+$P(DATA,U,9)
"RTN","PXRMETT",29,0)
 .S PLIST=$P(DATA,U,4)
"RTN","PXRMETT",30,0)
 .I PLIST,PLIST'=OLIST D
"RTN","PXRMETT",31,0)
 ..S PLNAME=$P($G(^PXRMXP(810.5,PLIST,0)),U),OLIST=PLIST Q:PLNAME=""
"RTN","PXRMETT",32,0)
 ..S VALMCNT=VALMCNT+1,PLCNT=PLCNT+1
"RTN","PXRMETT",33,0)
 ..S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",34,0)
 ..S ^TMP("PXRMETT",$J,"SEL",PLCNT)=PLIST
"RTN","PXRMETT",35,0)
 ..S ^TMP("PXRMETT",$J,VALMCNT,0)=$$RJ^XLFSTR(PLCNT,4," ")_" "_PLNAME
"RTN","PXRMETT",36,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMETT",37,0)
 ..S ^TMP("PXRMETT",$J,VALMCNT,0)=""
"RTN","PXRMETT",38,0)
 ..S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",39,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMETT",40,0)
 .S ^TMP("PXRMETT",$J,VALMCNT,0)=$$FRE(VALMCNT,RNAME,SNAME,TOT,APPL,NAPPL,DUE,NDUE)
"RTN","PXRMETT",41,0)
 .S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",42,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMETT",43,0)
 .S ^TMP("PXRMETT",$J,VALMCNT,0)=""
"RTN","PXRMETT",44,0)
 .S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",45,0)
 .;Finding totals
"RTN","PXRMETT",46,0)
 .I +FINDINGS>0 D FBLD(PATIENT)
"RTN","PXRMETT",47,0)
 ;
"RTN","PXRMETT",48,0)
 S ^TMP("PXRMETT",$J,"VALMCNT")=VALMCNT
"RTN","PXRMETT",49,0)
 ;M ^TMP("PXRMETT",$J)=LIST
"RTN","PXRMETT",50,0)
 Q
"RTN","PXRMETT",51,0)
 ;
"RTN","PXRMETT",52,0)
FBLD(PATIENT) ;Build finding list
"RTN","PXRMETT",53,0)
 N APPL,DATA,DUE,ETYP,EVAL,GNAM,GTYP
"RTN","PXRMETT",54,0)
 N NAPPL,NDUE,OGNAM,SEQ,SUB,TIEN,TNAME,TOTAL
"RTN","PXRMETT",55,0)
 S SUB=0,OGNAM=""
"RTN","PXRMETT",56,0)
 F  S SUB=$O(^PXRMXT(810.3,IEN,3,IND,1,SUB)) Q:'SUB  D
"RTN","PXRMETT",57,0)
 .S DATA=$G(^PXRMXT(810.3,IEN,3,IND,1,SUB,0)) Q:DATA=""
"RTN","PXRMETT",58,0)
 .S TIEN=$P(DATA,U,2) Q:'TIEN
"RTN","PXRMETT",59,0)
 .S TNAME=$P($G(^PXRMD(811.5,TIEN,0)),U)
"RTN","PXRMETT",60,0)
 .S SEQ=$P(DATA,U),ETYP=$P(DATA,U,3),GNAM=$P(DATA,U,9),GTYP=$P(DATA,U,10)
"RTN","PXRMETT",61,0)
 .S TOT=+$P(DATA,U,4),APPL=+$P(DATA,U,5),NAPPL=+$P(DATA,U,6)
"RTN","PXRMETT",62,0)
 .S DUE=+$P(DATA,U,7),NDUE=+$P(DATA,U,8)
"RTN","PXRMETT",63,0)
 .I OGNAM'=GNAM D
"RTN","PXRMETT",64,0)
 ..I OGNAM'="" D
"RTN","PXRMETT",65,0)
 ...S VALMCNT=VALMCNT+1
"RTN","PXRMETT",66,0)
 ...S ^TMP("PXRMETT",$J,VALMCNT,0)=""
"RTN","PXRMETT",67,0)
 ...S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",68,0)
 ..S OGNAM=GNAM,VALMCNT=VALMCNT+1
"RTN","PXRMETT",69,0)
 ..S ^TMP("PXRMETT",$J,VALMCNT,0)=$$RJ^XLFSTR("Counting Group: ",21)_GNAM
"RTN","PXRMETT",70,0)
 ..S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)="",VALMCNT=VALMCNT+1
"RTN","PXRMETT",71,0)
 ..S ^TMP("PXRMETT",$J,VALMCNT,0)=$J("",6)_$$LJ^XLFSTR($$TXT^PXRMEPM(ETYP,GTYP),49)
"RTN","PXRMETT",72,0)
 ..S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",73,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMETT",74,0)
 .S ^TMP("PXRMETT",$J,VALMCNT,0)=$$FREF(VALMCNT,TNAME,SEQ,TOT,APPL,NAPPL,DUE,NDUE,ETYP)
"RTN","PXRMETT",75,0)
 .S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",76,0)
 .I +PATIENT>0 D PBLD(IEN,IND,SUB)
"RTN","PXRMETT",77,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMETT",78,0)
 S ^TMP("PXRMETT",$J,VALMCNT,0)=""
"RTN","PXRMETT",79,0)
 S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",80,0)
 Q
"RTN","PXRMETT",81,0)
 ;
"RTN","PXRMETT",82,0)
PBLD(IEN,IND,SUB) ;
"RTN","PXRMETT",83,0)
 N ARRAY,NAME,LEN,PCNT,DFN,CNT,USTR
"RTN","PXRMETT",84,0)
 S VALMCNT=VALMCNT+1,CNT=0
"RTN","PXRMETT",85,0)
 S PCNT=0 F  S PCNT=$O(^PXRMXT(810.3,IEN,3,IND,1,SUB,1,PCNT)) Q:PCNT'>0  D
"RTN","PXRMETT",86,0)
 .S DFN=$P($G(^PXRMXT(810.3,IEN,3,IND,1,SUB,1,PCNT,0)),U) Q:DFN'>0
"RTN","PXRMETT",87,0)
 .S NAME=$P($G(^DPT(DFN,0)),U)
"RTN","PXRMETT",88,0)
 .S CNT=CNT+1,ARRAY(NAME)=""
"RTN","PXRMETT",89,0)
 S ^TMP("PXRMETT",$J,VALMCNT,0)="     "_$$RJ^XLFSTR("Unique Applicable Patients ("_CNT_")",36," ")
"RTN","PXRMETT",90,0)
 S USTR=$P($G(^TMP("PXRMETT",$J,VALMCNT,0)),"U"),LEN=$L(USTR)
"RTN","PXRMETT",91,0)
 S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",92,0)
 S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  D
"RTN","PXRMETT",93,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMETT",94,0)
 .S ^TMP("PXRMETT",$J,VALMCNT,0)=USTR_$$LJ^XLFSTR(NAME,36," ")
"RTN","PXRMETT",95,0)
 .S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",96,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMETT",97,0)
 S ^TMP("PXRMETT",$J,VALMCNT,0)="  "
"RTN","PXRMETT",98,0)
 S ^TMP("PXRMETT",$J,"IDX",VALMCNT,PLCNT)=""
"RTN","PXRMETT",99,0)
 Q
"RTN","PXRMETT",100,0)
 ;
"RTN","PXRMETT",101,0)
FLIST ;Toggle list with/without finding totals
"RTN","PXRMETT",102,0)
 S TOGGLE=(TOGGLE+1)#2
"RTN","PXRMETT",103,0)
 I TOGGLE=0 S TOGGLE1=0
"RTN","PXRMETT",104,0)
 ;Rebuild Workfile
"RTN","PXRMETT",105,0)
 D BLDLIST(IEN,TOGGLE,TOGGLE1)
"RTN","PXRMETT",106,0)
 ;Refresh
"RTN","PXRMETT",107,0)
 S VALMBCK="R",VALMBG=1
"RTN","PXRMETT",108,0)
 Q
"RTN","PXRMETT",109,0)
 ;
"RTN","PXRMETT",110,0)
PLIST1 ;Toggle list with/without finding totals
"RTN","PXRMETT",111,0)
 S TOGGLE1=(TOGGLE1+1)#2
"RTN","PXRMETT",112,0)
 ;Rebuild Workfile
"RTN","PXRMETT",113,0)
 D BLDLIST(IEN,TOGGLE,TOGGLE1)
"RTN","PXRMETT",114,0)
 ;Refresh
"RTN","PXRMETT",115,0)
 S VALMBCK="R",VALMBG=1
"RTN","PXRMETT",116,0)
 Q
"RTN","PXRMETT",117,0)
 ;
"RTN","PXRMETT",118,0)
FRE(NUMBER,NAME,SNAME,TOT,APPL,NAPPL,DUE,NDUE) ;Format reminder entry
"RTN","PXRMETT",119,0)
 N TEMP,TNAME,TSOURCE
"RTN","PXRMETT",120,0)
 S TEMP="     "
"RTN","PXRMETT",121,0)
 S TNAME=SNAME_"/"_$E(NAME,1,35-$L(SNAME))
"RTN","PXRMETT",122,0)
 S TEMP=TEMP_$$LJ^XLFSTR(TNAME,36," ")
"RTN","PXRMETT",123,0)
 S TEMP=TEMP_$$RJ^XLFSTR(TOT,8," ")
"RTN","PXRMETT",124,0)
 S TEMP=TEMP_$$RJ^XLFSTR(APPL,8," ")
"RTN","PXRMETT",125,0)
 S TEMP=TEMP_$$RJ^XLFSTR(NAPPL,7," ")
"RTN","PXRMETT",126,0)
 S TEMP=TEMP_$$RJ^XLFSTR(DUE,7," ")
"RTN","PXRMETT",127,0)
 S TEMP=TEMP_$$RJ^XLFSTR(NDUE,7," ")
"RTN","PXRMETT",128,0)
 Q TEMP
"RTN","PXRMETT",129,0)
 ;
"RTN","PXRMETT",130,0)
FREF(NUMBER,NAME,SNAME,TOT,APPL,NAPPL,DUE,NDUE,ETYP) ;Format finding entry
"RTN","PXRMETT",131,0)
 N TEMP,TNAME,TSOURCE
"RTN","PXRMETT",132,0)
 S TEMP="      "
"RTN","PXRMETT",133,0)
 S TNAME=$E(NAME,1,31)
"RTN","PXRMETT",134,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(TNAME,31," ")
"RTN","PXRMETT",135,0)
 S TEMP=TEMP_"  "_$$RJ^XLFSTR(TOT,8," ")
"RTN","PXRMETT",136,0)
 I ETYP'="FC" D
"RTN","PXRMETT",137,0)
 .S TEMP=TEMP_$$RJ^XLFSTR(APPL,8," ")
"RTN","PXRMETT",138,0)
 .S TEMP=TEMP_$$RJ^XLFSTR(NAPPL,7," ")
"RTN","PXRMETT",139,0)
 .S TEMP=TEMP_$$RJ^XLFSTR(DUE,7," ")
"RTN","PXRMETT",140,0)
 .S TEMP=TEMP_$$RJ^XLFSTR(NDUE,7," ")
"RTN","PXRMETT",141,0)
 Q TEMP
"RTN","PXRMETT",142,0)
 ;
"RTN","PXRMETT",143,0)
ENTRY ;Entry code
"RTN","PXRMETT",144,0)
 D BLDLIST(IEN,TOGGLE,TOGGLE1),XQORM
"RTN","PXRMETT",145,0)
 Q
"RTN","PXRMETT",146,0)
 ;
"RTN","PXRMETT",147,0)
EXIT ;Exit code
"RTN","PXRMETT",148,0)
 K ^TMP("PXRMETT",$J)
"RTN","PXRMETT",149,0)
 K ^TMP("PXRMETTH",$J)
"RTN","PXRMETT",150,0)
 D CLEAN^VALM10
"RTN","PXRMETT",151,0)
 D FULL^VALM1
"RTN","PXRMETT",152,0)
 S VALMBCK="Q"
"RTN","PXRMETT",153,0)
 Q
"RTN","PXRMETT",154,0)
 ;
"RTN","PXRMETT",155,0)
HDR ; Header code
"RTN","PXRMETT",156,0)
 S VALMHDR(1)="Extract Summary Name: "_$P($G(^PXRMXT(810.3,IEN,0)),U)
"RTN","PXRMETT",157,0)
 S VALMHDR(2)="      Extract Period: "_$$FMTE^XLFDT($P($G(^PXRMXT(810.3,IEN,0)),U,2),"5Z")_" - "_$$FMTE^XLFDT($P($G(^PXRMXT(810.3,IEN,0)),U,3),"5Z")
"RTN","PXRMETT",158,0)
 S VALMHDR(2)=VALMHDR(2)_"   Created: "_$$FMTE^XLFDT($P($G(^PXRMXT(810.3,IEN,0)),U,6),"5Z")
"RTN","PXRMETT",159,0)
 ;S VALMHDR(3)=VALMHDR(3)_"        Transmitted: "_$$FMTE^XLFDT($P($G(^PXRMXT(810.3,IEN,0)),U,4),"5Z")
"RTN","PXRMETT",160,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMETT",161,0)
 Q
"RTN","PXRMETT",162,0)
 ;
"RTN","PXRMETT",163,0)
HLP ;Help code
"RTN","PXRMETT",164,0)
 N ORU,ORUPRMT,XQORM
"RTN","PXRMETT",165,0)
 S SUB="PXRMETTH"
"RTN","PXRMETT",166,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMETT",167,0)
 Q
"RTN","PXRMETT",168,0)
 ;
"RTN","PXRMETT",169,0)
INIT ;Init
"RTN","PXRMETT",170,0)
 S VALMCNT=0
"RTN","PXRMETT",171,0)
 Q
"RTN","PXRMETT",172,0)
 ;
"RTN","PXRMETT",173,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXTRACT SUMMARY SELECT ENTRY",0))_U_"1:"_VALMCNT
"RTN","PXRMETT",174,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMETT",175,0)
 Q
"RTN","PXRMETT",176,0)
 ;
"RTN","PXRMETT",177,0)
XSEL ;PXRM EXTRACT TOTALS SELECT ENTRY validation
"RTN","PXRMETT",178,0)
 N SEL,PLIEN
"RTN","PXRMETT",179,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMETT",180,0)
 ;Remove trailing ,
"RTN","PXRMETT",181,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMETT",182,0)
 ;Invalid selection
"RTN","PXRMETT",183,0)
 I SEL["," D  Q
"RTN","PXRMETT",184,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMETT",185,0)
 .S VALMBCK="R"
"RTN","PXRMETT",186,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXRMETT",187,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMETT",188,0)
 .S VALMBCK="R"
"RTN","PXRMETT",189,0)
 ;
"RTN","PXRMETT",190,0)
 ;Get the list ien.
"RTN","PXRMETT",191,0)
 S PLIEN=^TMP("PXRMETT",$J,"SEL",SEL)
"RTN","PXRMETT",192,0)
 ;
"RTN","PXRMETT",193,0)
 D START^PXRMLPP(PLIEN)
"RTN","PXRMETT",194,0)
 ;
"RTN","PXRMETT",195,0)
 S VALMBCK="R"
"RTN","PXRMETT",196,0)
 Q
"RTN","PXRMETT",197,0)
 ;
"RTN","PXRMETT",198,0)
PEXIT ;Protocol exit code
"RTN","PXRMETT",199,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMETT",200,0)
 D XQORM
"RTN","PXRMETT",201,0)
 Q
"RTN","PXRMETT",202,0)
 ;
"RTN","PXRMETT",203,0)
PLIST(IEN) ;Patient list display
"RTN","PXRMETT",204,0)
 N IND,PLIEN,VALMY
"RTN","PXRMETT",205,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMETT",206,0)
 ;If there is no list quit.
"RTN","PXRMETT",207,0)
 I '$D(VALMY) Q
"RTN","PXRMETT",208,0)
 ;PXRMDONE is newed in PXRMLPM
"RTN","PXRMETT",209,0)
 S PXRMDONE=0
"RTN","PXRMETT",210,0)
 S IND=""
"RTN","PXRMETT",211,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMETT",212,0)
 .;Get the ien.
"RTN","PXRMETT",213,0)
 .S PLIEN=^TMP("PXRMETT",$J,"SEL",IND)
"RTN","PXRMETT",214,0)
 .D START^PXRMLPP(PLIEN)
"RTN","PXRMETT",215,0)
 ;
"RTN","PXRMETT",216,0)
 S VALMBCK="R"
"RTN","PXRMETT",217,0)
 Q
"RTN","PXRMETX")
0^85^B58362915
"RTN","PXRMETX",1,0)
PXRMETX ; SLC/PJH - Run Extract for QUERI ;08/17/2006
"RTN","PXRMETX",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMETX",3,0)
 ;
"RTN","PXRMETX",4,0)
AUTO(ID,PURGE) ;Called from option scheduling (#19.2)
"RTN","PXRMETX",5,0)
 N IEN,LIST,LUVALUE,MODE,NEXT
"RTN","PXRMETX",6,0)
 S LUVALUE(1)=ID
"RTN","PXRMETX",7,0)
 D FIND^DIC(810.2,"","","U",.LUVALUE,"","","","","LIST")
"RTN","PXRMETX",8,0)
 ;Get ien of extract parameter
"RTN","PXRMETX",9,0)
 S IEN=$P(LIST("DILIST",2,1),U,1) Q:'IEN
"RTN","PXRMETX",10,0)
 ;Get next extract period
"RTN","PXRMETX",11,0)
 S NEXT=$P($G(^PXRM(810.2,IEN,0)),U,6) Q:NEXT=""
"RTN","PXRMETX",12,0)
 ;Node is Extract and Transmit
"RTN","PXRMETX",13,0)
 S MODE=$S($P($G(^PXRM(810.2,IEN,100)),U)="N":0,1:1)
"RTN","PXRMETX",14,0)
 ;Run extract
"RTN","PXRMETX",15,0)
 D RUN^PXRMETX(IEN,NEXT,MODE,PURGE)
"RTN","PXRMETX",16,0)
 ;Purge Extract Summary
"RTN","PXRMETX",17,0)
 D PRGES^PXRMETXU
"RTN","PXRMETX",18,0)
 ;Purge Patient Lists
"RTN","PXRMETX",19,0)
 D PRGPL^PXRMETXU
"RTN","PXRMETX",20,0)
 Q
"RTN","PXRMETX",21,0)
 ;
"RTN","PXRMETX",22,0)
GETNAME(NAME,CLASS) ;Get the extract name.
"RTN","PXRMETX",23,0)
 I '$D(^PXRMXT(810.3,"B",NAME)) Q NAME
"RTN","PXRMETX",24,0)
 N CNT,NEW
"RTN","PXRMETX",25,0)
 S (CNT,NEW)=0
"RTN","PXRMETX",26,0)
 ;If name exists concatenate count
"RTN","PXRMETX",27,0)
 F  D  Q:NEW
"RTN","PXRMETX",28,0)
 .I '$D(^PXRMXT(810.3,"B",NAME)) S NEW=1 Q
"RTN","PXRMETX",29,0)
 .S CNT=CNT+1,NAME=$P(NAME,"/")_"/"_$$RJ^XLFSTR(CNT,2,0)
"RTN","PXRMETX",30,0)
 Q NAME
"RTN","PXRMETX",31,0)
 ;
"RTN","PXRMETX",32,0)
IHD ;Monthly IHD Extract, called from option PXRM EXTRACT VA-IHD QUERI.
"RTN","PXRMETX",33,0)
 D AUTO("VA-IHD QUERI","Y")
"RTN","PXRMETX",34,0)
 Q
"RTN","PXRMETX",35,0)
 ;
"RTN","PXRMETX",36,0)
MAIL(NAME,NEXT,MODE) ;Completion mail message
"RTN","PXRMETX",37,0)
 N FREQ,TEXT
"RTN","PXRMETX",38,0)
 S FREQ="year"
"RTN","PXRMETX",39,0)
 I $E(NEXT)="M" S FREQ="month"
"RTN","PXRMETX",40,0)
 I $E(NEXT)="Q" S FREQ="quarter"
"RTN","PXRMETX",41,0)
 ;
"RTN","PXRMETX",42,0)
 I MODE=0 S TEXT="Extract and Transmission"
"RTN","PXRMETX",43,0)
 I MODE=1 S TEXT="Extract (No Transmission)"
"RTN","PXRMETX",44,0)
 I MODE=2 S TEXT="Manual Extract and Transmission"
"RTN","PXRMETX",45,0)
 I MODE=3 S TEXT="Manual Extract (No Transmission)"
"RTN","PXRMETX",46,0)
 ;
"RTN","PXRMETX",47,0)
 S TEXT=NAME_" "_TEXT_" completed for "_FREQ_" "_NEXT
"RTN","PXRMETX",48,0)
 D MES^PXRMEUT(TEXT)
"RTN","PXRMETX",49,0)
 Q
"RTN","PXRMETX",50,0)
 ;
"RTN","PXRMETX",51,0)
MH ;Monthly MH Extract, called from option PXRM EXTRACT VA-MH QUERI.
"RTN","PXRMETX",52,0)
 D AUTO("VA-MH QUERI","Y")
"RTN","PXRMETX",53,0)
 Q
"RTN","PXRMETX",54,0)
 ;
"RTN","PXRMETX",55,0)
RUN(IEN,NEXT,MODE,PURGE) ;Process extract parameter
"RTN","PXRMETX",56,0)
 ; IEN is ien of Extract Parameter
"RTN","PXRMETX",57,0)
 ; NEXT is period to extract
"RTN","PXRMETX",58,0)
 ; MODE = 0 is extract and transmission
"RTN","PXRMETX",59,0)
 ; MODE = 1 is extract only
"RTN","PXRMETX",60,0)
 ; MODE = 2 is manual extract and transmission (doesn't update 810.2)
"RTN","PXRMETX",61,0)
 ; MODE = 3 is manual extract only (doesn't update 810.2)
"RTN","PXRMETX",62,0)
 ;
"RTN","PXRMETX",63,0)
 N CLASS,FDA,FDAIEN,MSG
"RTN","PXRMETX",64,0)
 N PXRMLIST,PXRMNODE,PXRMRULE,PXRMSTRT,PXRMXIEN,PATCREAT,XNAME
"RTN","PXRMETX",65,0)
 ;Initialise
"RTN","PXRMETX",66,0)
 K ^TMP("PXRMETX",$J),^TMP("PXRMETX1",$J)
"RTN","PXRMETX",67,0)
 ;Workfile node for ^TMP
"RTN","PXRMETX",68,0)
 S PXRMNODE="PXRMRULE"
"RTN","PXRMETX",69,0)
 ;Get details from parameter file
"RTN","PXRMETX",70,0)
 N DATA,INDP,INTP,LIST,NAME,PARTYPE,PERIOD,SNAME,TEXT,YEAR
"RTN","PXRMETX",71,0)
 ;Get class from extract parameter
"RTN","PXRMETX",72,0)
 S CLASS=$P($G(^PXRM(810.2,IEN,100)),U)
"RTN","PXRMETX",73,0)
 ;Otherwise default to local
"RTN","PXRMETX",74,0)
 I $G(CLASS)="" S CLASS="L"
"RTN","PXRMETX",75,0)
 ;
"RTN","PXRMETX",76,0)
 S DATA=$G(^PXRM(810.2,IEN,0))
"RTN","PXRMETX",77,0)
 ;Determine Extract Name and period
"RTN","PXRMETX",78,0)
 S NAME=$P(DATA,U),PARTYPE=$P(DATA,U,2)
"RTN","PXRMETX",79,0)
 S YEAR=$P(NEXT,"/",2),PERIOD=$P(NEXT,"/")
"RTN","PXRMETX",80,0)
 ;Calculate report period start and end dates
"RTN","PXRMETX",81,0)
 D CALC^PXRMEUT(NEXT,.PXRMSTRT,.PXRMSTOP)
"RTN","PXRMETX",82,0)
 ;Determine output name for patient list and extract summary
"RTN","PXRMETX",83,0)
 S XNAME=NAME_" "_YEAR_" "_PERIOD
"RTN","PXRMETX",84,0)
 ;Process (single) Denominator rule into patient list
"RTN","PXRMETX",85,0)
 N SEQ,SUB
"RTN","PXRMETX",86,0)
 S SEQ=""
"RTN","PXRMETX",87,0)
 F  S SEQ=$O(^PXRM(810.2,IEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMETX",88,0)
 .S SUB=$O(^PXRM(810.2,IEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMETX",89,0)
 .S DATA=$G(^PXRM(810.2,IEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMETX",90,0)
 .S PXRMRULE=$P(DATA,U,2) Q:'PXRMRULE
"RTN","PXRMETX",91,0)
 .S LIST=$P(DATA,U,3) Q:LIST=""
"RTN","PXRMETX",92,0)
 .I LIST["yyyy" S LIST=$P(LIST,"yyyy")_YEAR_$P(LIST,"yyyy",2)
"RTN","PXRMETX",93,0)
 .I LIST["nn" S LIST=$P(LIST,"nn")_$E(PERIOD,2,10)_$P(LIST,"nn",2)
"RTN","PXRMETX",94,0)
 .S INDP=+$P(DATA,U,4)
"RTN","PXRMETX",95,0)
 .S INTP=+$P(DATA,U,5)
"RTN","PXRMETX",96,0)
 .;Create new patient list
"RTN","PXRMETX",97,0)
 .S PATCREAT="Y",PXRMLIST=$$CRLST^PXRMRULE(LIST,CLASS) Q:'PXRMLIST
"RTN","PXRMETX",98,0)
 .;
"RTN","PXRMETX",99,0)
 .D START^PXRMRULE(PXRMRULE,PXRMLIST,PXRMNODE,PXRMSTRT,PXRMSTOP,IEN,YEAR,PERIOD,INDP,INTP)
"RTN","PXRMETX",100,0)
 .;Clear ^TMP lists created for rule
"RTN","PXRMETX",101,0)
 .D CLEAR^PXRMRULE(PXRMRULE,PXRMNODE)
"RTN","PXRMETX",102,0)
 .;Process reminders and finding rules
"RTN","PXRMETX",103,0)
 .D REM^PXRMETXR(SUB,PXRMLIST,PXRMSTRT,PXRMSTOP,PARTYPE)
"RTN","PXRMETX",104,0)
 ;
"RTN","PXRMETX",105,0)
 ;Get the name
"RTN","PXRMETX",106,0)
 S NAME=$$GETNAME(XNAME)
"RTN","PXRMETX",107,0)
 ;Create extract summary entry
"RTN","PXRMETX",108,0)
 S FDA(810.3,"+1,",.01)=NAME
"RTN","PXRMETX",109,0)
 S FDA(810.3,"+1,",.02)=PXRMSTRT
"RTN","PXRMETX",110,0)
 S FDA(810.3,"+1,",.03)=PXRMSTOP
"RTN","PXRMETX",111,0)
 S FDA(810.3,"+1,",.06)=$$NOW^XLFDT
"RTN","PXRMETX",112,0)
 S FDA(810.3,"+1,",1)=IEN
"RTN","PXRMETX",113,0)
 S FDA(810.3,"+1,",2)=PARTYPE
"RTN","PXRMETX",114,0)
 S FDA(810.3,"+1,",3)=$E(PERIOD,2,99)
"RTN","PXRMETX",115,0)
 S FDA(810.3,"+1,",4)=YEAR
"RTN","PXRMETX",116,0)
 S FDA(810.3,"+1,",5)=$S(MODE<2:"A",1:"M")
"RTN","PXRMETX",117,0)
 S FDA(810.3,"+1,",7)=$E(PERIOD)
"RTN","PXRMETX",118,0)
 I PURGE="Y" S FDA(810.3,"+1,",50)=1
"RTN","PXRMETX",119,0)
 S FDA(810.3,"+1,",100)=CLASS
"RTN","PXRMETX",120,0)
 D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMETX",121,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG") G EXIT
"RTN","PXRMETX",122,0)
 ;
"RTN","PXRMETX",123,0)
 ;Update extract summary from ^TMP
"RTN","PXRMETX",124,0)
 D UPDEX(FDAIEN(1))
"RTN","PXRMETX",125,0)
 ;
"RTN","PXRMETX",126,0)
 ;Transmit results
"RTN","PXRMETX",127,0)
 I (MODE=0)!(MODE=2) D TRANS(FDAIEN(1))
"RTN","PXRMETX",128,0)
 ;
"RTN","PXRMETX",129,0)
 ;Update extract parameters
"RTN","PXRMETX",130,0)
 I MODE<2 D UPDPAR
"RTN","PXRMETX",131,0)
 ;
"RTN","PXRMETX",132,0)
 ;Mail message that extract completed
"RTN","PXRMETX",133,0)
 D MAIL(NAME,NEXT,MODE)
"RTN","PXRMETX",134,0)
 ;
"RTN","PXRMETX",135,0)
EXIT ;Clear workfile
"RTN","PXRMETX",136,0)
 K ^TMP("PXRMETX",$J),^TMP("PXRMETX1",$J)
"RTN","PXRMETX",137,0)
 Q
"RTN","PXRMETX",138,0)
 ;
"RTN","PXRMETX",139,0)
TRANS(PXRMXIEN) ;Transmit HL7 messages
"RTN","PXRMETX",140,0)
 N HL7ID,NAME,NEXT
"RTN","PXRMETX",141,0)
 S HL7ID=""
"RTN","PXRMETX",142,0)
 D HL7^PXRM7API(PXRMXIEN,1,.HL7ID)
"RTN","PXRMETX",143,0)
 H 2
"RTN","PXRMETX",144,0)
 ;Lock extract summary
"RTN","PXRMETX",145,0)
 D LOCK(PXRMXIEN) Q:$D(DUOUT)
"RTN","PXRMETX",146,0)
 ;Update run information
"RTN","PXRMETX",147,0)
 S NAME=$P($G(^PXRMXT(810.3,PXRMXIEN,0)),U)
"RTN","PXRMETX",148,0)
 S NEXT=$P($G(^PXRMXT(810.3,PXRMXIEN,4)),U,3)
"RTN","PXRMETX",149,0)
 S FDA(810.3,"?1,",.01)=NAME
"RTN","PXRMETX",150,0)
 S FDA(810.36,"?+2,?1,",.01)=HL7ID
"RTN","PXRMETX",151,0)
 S FDA(810.36,"?+2,?1,",.02)=$$NOW^XLFDT
"RTN","PXRMETX",152,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMETX",153,0)
 ;Unlock extract summary
"RTN","PXRMETX",154,0)
 D UNLOCK(PXRMXIEN)
"RTN","PXRMETX",155,0)
 Q
"RTN","PXRMETX",156,0)
 ;
"RTN","PXRMETX",157,0)
UPDEX(IEN) ;Update extract summary
"RTN","PXRMETX",158,0)
 N DUOUT
"RTN","PXRMETX",159,0)
 ;Lock extract summary
"RTN","PXRMETX",160,0)
 D LOCK(IEN) Q:$D(DUOUT)
"RTN","PXRMETX",161,0)
 ;
"RTN","PXRMETX",162,0)
 ;Update totals section
"RTN","PXRMETX",163,0)
 N APPL,CNT,DFN,DUE,DATA,ETYP,EVAL
"RTN","PXRMETX",164,0)
 N FAPPL,FCNT,FDATA,FDUE,FEVAL,FGNAM,FGSTA,FIND,FNAPPL,FNDUE,FSEQ
"RTN","PXRMETX",165,0)
 N GDATA,GSEQ,INST,NAPPL,NDUE,PCNT,PXRMLIST,RCNT,RIEN,RSEQ,SEQ,TEMP
"RTN","PXRMETX",166,0)
 S SEQ="",CNT=1,RSEQ=0
"RTN","PXRMETX",167,0)
 F  S SEQ=$O(^TMP("PXRMETX",$J,SEQ)) Q:SEQ=""  D
"RTN","PXRMETX",168,0)
 .S INST=0
"RTN","PXRMETX",169,0)
 .F  S INST=$O(^TMP("PXRMETX",$J,SEQ,INST)) Q:'INST  D
"RTN","PXRMETX",170,0)
 ..S RCNT=""
"RTN","PXRMETX",171,0)
 ..F  S RCNT=$O(^TMP("PXRMETX",$J,SEQ,INST,RCNT)) Q:RCNT=""  D
"RTN","PXRMETX",172,0)
 ...S DATA=$G(^TMP("PXRMETX",$J,SEQ,INST,RCNT)) Q:'DATA
"RTN","PXRMETX",173,0)
 ...S RIEN=$P(DATA,U,1),EVAL=$P(DATA,U,2),APPL=$P(DATA,U,3)
"RTN","PXRMETX",174,0)
 ...S NAPPL=$P(DATA,U,4),DUE=$P(DATA,U,5),NDUE=$P(DATA,U,6)
"RTN","PXRMETX",175,0)
 ...S PXRMLIST=$P(DATA,U,7)
"RTN","PXRMETX",176,0)
 ...S CNT=CNT+1,RSEQ=RSEQ+1
"RTN","PXRMETX",177,0)
 ...S TEMP=$$RJ^XLFSTR(RSEQ,3,0)_U_RIEN_U_INST_U_PXRMLIST_U_EVAL_U_APPL_U_NAPPL_U_DUE_U_NDUE
"RTN","PXRMETX",178,0)
 ...S ^PXRMXT(810.3,IEN,3,RSEQ,0)=TEMP
"RTN","PXRMETX",179,0)
 ...S ^PXRMXT(810.3,IEN,3,"B",$P(TEMP,U,1),RSEQ)=""
"RTN","PXRMETX",180,0)
 ...;For each count type
"RTN","PXRMETX",181,0)
 ...S GSEQ="",FCNT=0
"RTN","PXRMETX",182,0)
 ...F  S GSEQ=$O(^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ)) Q:GSEQ=""  D
"RTN","PXRMETX",183,0)
 ....S GDATA=$G(^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ))
"RTN","PXRMETX",184,0)
 ....S FGNAM=$P(GDATA,U),ETYP=$P(GDATA,U,2),FGSTA=$P(GDATA,U,3)
"RTN","PXRMETX",185,0)
 ....;For each term
"RTN","PXRMETX",186,0)
 ....S FSEQ=0
"RTN","PXRMETX",187,0)
 ....F  S FSEQ=$O(^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ,FSEQ)) Q:FSEQ=""  D
"RTN","PXRMETX",188,0)
 .....;Get the term ien
"RTN","PXRMETX",189,0)
 .....S FIND=$P($G(^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ,FSEQ)),U),FCNT=FCNT+1
"RTN","PXRMETX",190,0)
 .....;Update finding totals
"RTN","PXRMETX",191,0)
 .....S FDATA=$G(^TMP("PXRMETX",$J,SEQ,INST,RCNT,GSEQ,FSEQ))
"RTN","PXRMETX",192,0)
 .....S FEVAL=$P(FDATA,U,2),FAPPL=$P(FDATA,U,3),FNAPPL=$P(FDATA,U,4)
"RTN","PXRMETX",193,0)
 .....S FDUE=$P(FDATA,U,5),FNDUE=$P(FDATA,U,6)
"RTN","PXRMETX",194,0)
 .....S TEMP=FSEQ_U_$P(FIND,";")_U_ETYP_U_FEVAL_U_FAPPL_U_FNAPPL_U_FDUE_U_FNDUE_U_FGNAM_U_FGSTA
"RTN","PXRMETX",195,0)
 .....S ^PXRMXT(810.3,IEN,3,RSEQ,1,FCNT,0)=TEMP
"RTN","PXRMETX",196,0)
 .....;
"RTN","PXRMETX",197,0)
 .....;AGP REMOVE UNTIL A DECISION CAN BE MADE
"RTN","PXRMETX",198,0)
 .....;S DFN=0,PCNT=0
"RTN","PXRMETX",199,0)
 .....;F  S DFN=$O(^TMP("PXRMETX",$J,SEQ,INST,RCNT,GSEQ,FSEQ,DFN)) Q:DFN'>0  D
"RTN","PXRMETX",200,0)
 .....;.S PCNT=PCNT+1,^PXRMXT(810.3,IEN,3,RSEQ,1,FCNT,1,PCNT,0)=DFN
"RTN","PXRMETX",201,0)
 .....;I PCNT>0 S ^PXRMXT(810.3,IEN,3,RSEQ,1,FCNT,1,0)="^810.3316PA"_U_PCNT_U_PCNT
"RTN","PXRMETX",202,0)
 ....I FCNT>0 S ^PXRMXT(810.3,IEN,3,RSEQ,1,0)="^810.331I"_U_FCNT_U_FCNT
"RTN","PXRMETX",203,0)
 .I RSEQ>0 S ^PXRMXT(810.3,IEN,3,0)="^810.33I"_U_RSEQ_U_RSEQ
"RTN","PXRMETX",204,0)
 ;Unlock extract summary
"RTN","PXRMETX",205,0)
 D UNLOCK(IEN)
"RTN","PXRMETX",206,0)
 Q
"RTN","PXRMETX",207,0)
 ;
"RTN","PXRMETX",208,0)
 ;File locking
"RTN","PXRMETX",209,0)
LOCK(PXRMXIEN) L +^PXRMXT(810.3,PXRMXIEN):0
"RTN","PXRMETX",210,0)
 I '$T W !!?5,"Another user is using this extract summary" S DUOUT=1
"RTN","PXRMETX",211,0)
 Q
"RTN","PXRMETX",212,0)
 ;
"RTN","PXRMETX",213,0)
UNLOCK(PXRMXIEN) L -^PXRMXT(810.3,PXRMXIEN) Q
"RTN","PXRMETX",214,0)
 ;
"RTN","PXRMETX",215,0)
UPDPAR ;Update parameters when run complete
"RTN","PXRMETX",216,0)
 N DATA,LAST,NEXT,PERIOD,TYPE,YEAR
"RTN","PXRMETX",217,0)
 S DATA=$G(^PXRM(810.2,IEN,0)),NEXT=$P(DATA,U,6),TYPE=$P(DATA,U,3)
"RTN","PXRMETX",218,0)
 ;Last run updated
"RTN","PXRMETX",219,0)
 S LAST=NEXT
"RTN","PXRMETX",220,0)
 ;Calculate next run
"RTN","PXRMETX",221,0)
 I TYPE="Y" S NEXT=NEXT+1
"RTN","PXRMETX",222,0)
 I "QM"[TYPE D
"RTN","PXRMETX",223,0)
 .N NUM
"RTN","PXRMETX",224,0)
 .S PERIOD=$P(NEXT,"/",1),YEAR=$P(NEXT,"/",2)
"RTN","PXRMETX",225,0)
 .S NUM=$P(PERIOD,TYPE,2)+1
"RTN","PXRMETX",226,0)
 .I TYPE="Q",NUM>4 S NUM=1,YEAR=YEAR+1
"RTN","PXRMETX",227,0)
 .I TYPE="M",NUM>12 S NUM=1,YEAR=YEAR+1
"RTN","PXRMETX",228,0)
 .S NEXT=TYPE_NUM_"/"_YEAR
"RTN","PXRMETX",229,0)
 ;Update last and next run fields
"RTN","PXRMETX",230,0)
 S $P(^PXRM(810.2,IEN,0),U,4,6)=LAST_U_$$NOW^XLFDT_U_NEXT
"RTN","PXRMETX",231,0)
 Q
"RTN","PXRMETX",232,0)
 ;
"RTN","PXRMETXR")
0^114^B73752465
"RTN","PXRMETXR",1,0)
PXRMETXR ; SLC/PJH,PKR - Reminder section of extract ;05/01/2006
"RTN","PXRMETXR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMETXR",3,0)
 ; 
"RTN","PXRMETXR",4,0)
 ; Called from PXRMETX
"RTN","PXRMETXR",5,0)
 ;
"RTN","PXRMETXR",6,0)
DATE ;Check if finding is most recent in evaluation group
"RTN","PXRMETXR",7,0)
 N FDATE,GDATE
"RTN","PXRMETXR",8,0)
 ;Determine finding date and existing group date
"RTN","PXRMETXR",9,0)
 S FDATE=$G(FIEV(FNUM,"DATE")),GDATE=$G(GROUP(GSEQ,"DATE")) Q:FDATE=""
"RTN","PXRMETXR",10,0)
 ;Ignore findings outside to the extract period
"RTN","PXRMETXR",11,0)
 ;I $$FMDIFF^XLFDT(PXRMSTRT,FDATE,2)>0 Q
"RTN","PXRMETXR",12,0)
 ;If this is first or only entry in group then save finding date
"RTN","PXRMETXR",13,0)
 I 'GDATE S GROUP(GSEQ,"DATE")=FDATE,GROUP(GSEQ)=FSEQ Q
"RTN","PXRMETXR",14,0)
 ;Save finding if most recent date for the group
"RTN","PXRMETXR",15,0)
 I $$FMDIFF^XLFDT(FDATE,GDATE,2)>0 S GROUP(GSEQ,"DATE")=FDATE,GROUP(GSEQ)=FSEQ Q
"RTN","PXRMETXR",16,0)
 Q
"RTN","PXRMETXR",17,0)
 ;
"RTN","PXRMETXR",18,0)
FIND(SEQ,RCNT,PXRMSTRT,PXRMSTOP) ;Process findings for reminder
"RTN","PXRMETXR",19,0)
 ;Default is extract no findings
"RTN","PXRMETXR",20,0)
 N DATA,FCNT,FIEN,FIND,FNUM,FSEQ,GDATA,GROUP,GSEQ,GTYP
"RTN","PXRMETXR",21,0)
 S FNUM=0,FCNT=0
"RTN","PXRMETXR",22,0)
 F  S FNUM=$O(FIEV(FNUM)) Q:'FNUM  D
"RTN","PXRMETXR",23,0)
 .;Ignore if not found for patient
"RTN","PXRMETXR",24,0)
 .I +FIEV(FNUM)=0 Q
"RTN","PXRMETXR",25,0)
 .;Only terms are counted
"RTN","PXRMETXR",26,0)
 .S FIND=$G(FIEV(FNUM,"TERM IEN")) Q:FIND=""
"RTN","PXRMETXR",27,0)
 .;Check if in list to be accumulated
"RTN","PXRMETXR",28,0)
 .I '$D(REM(RCNT,FIND)) Q
"RTN","PXRMETXR",29,0)
 .;Find groups to which finding belongs
"RTN","PXRMETXR",30,0)
 .S GSEQ=""
"RTN","PXRMETXR",31,0)
 .F  S GSEQ=$O(REM(RCNT,FIND,GSEQ)) Q:GSEQ=""  D
"RTN","PXRMETXR",32,0)
 ..;Determine Evaluation type
"RTN","PXRMETXR",33,0)
 ..S GTYP=REM(RCNT,FIND,GSEQ)
"RTN","PXRMETXR",34,0)
 ..;Ignore utilization groups
"RTN","PXRMETXR",35,0)
 ..I GTYP="UR" Q
"RTN","PXRMETXR",36,0)
 ..;Sequence determines where the finding will be stored
"RTN","PXRMETXR",37,0)
 ..S FSEQ=""
"RTN","PXRMETXR",38,0)
 ..F  S FSEQ=$O(REM(RCNT,FIND,GSEQ,FSEQ)) Q:FSEQ=""  D
"RTN","PXRMETXR",39,0)
 ...;Evaluation Group logic to save latest entry only
"RTN","PXRMETXR",40,0)
 ...I GTYP="MRFP" D DATE Q
"RTN","PXRMETXR",41,0)
 ...;Save finding totals
"RTN","PXRMETXR",42,0)
 ...D UPD(1)
"RTN","PXRMETXR",43,0)
 ;
"RTN","PXRMETXR",44,0)
 ;Check for group totals
"RTN","PXRMETXR",45,0)
 S GSEQ=""
"RTN","PXRMETXR",46,0)
 F  S GSEQ=$O(GROUP(GSEQ)) Q:GSEQ=""  D
"RTN","PXRMETXR",47,0)
 .S GDATA=$G(GROUP(GSEQ)) Q:GDATA=""
"RTN","PXRMETXR",48,0)
 .;Update if found
"RTN","PXRMETXR",49,0)
 .S FSEQ=$P(GDATA,U) D UPD(1)
"RTN","PXRMETXR",50,0)
 ;
"RTN","PXRMETXR",51,0)
 ;Utilization counts are done separately
"RTN","PXRMETXR",52,0)
 N CNT,FDATA,FIND,FINDPA,FTIEN,GTYP,TERMARR,TFIEVAL
"RTN","PXRMETXR",53,0)
 ;modify start date to include incomplete dates
"RTN","PXRMETXR",54,0)
 I $E(PXRMSTRT,6,7)="01" S PXRMSTRT=$E(PXRMSTRT,1,5)_"00"
"RTN","PXRMETXR",55,0)
 ;Include incomplete dates in January
"RTN","PXRMETXR",56,0)
 I $E(PXRMSTRT,4,5)="01" S PXRMSTRT=$E(PXRMSTRT,1,3)_"0000"
"RTN","PXRMETXR",57,0)
 ;Set start and stop dates for term
"RTN","PXRMETXR",58,0)
 ;S $P(FINDPA(0),U,8)=PXRMSTRT,$P(FINDPA(0),U,11)=PXRMSTOP
"RTN","PXRMETXR",59,0)
 S $P(FINDPA(0),U,11)=PXRMSTOP
"RTN","PXRMETXR",60,0)
 ;Count all entries
"RTN","PXRMETXR",61,0)
 S $P(FINDPA(0),U,14)="*"
"RTN","PXRMETXR",62,0)
 ;
"RTN","PXRMETXR",63,0)
 S FTIEN="",GTYP="UR"
"RTN","PXRMETXR",64,0)
 F  S FTIEN=$O(FUTIL(RCNT,FTIEN)) Q:FTIEN=""  D
"RTN","PXRMETXR",65,0)
 .S GSEQ=""
"RTN","PXRMETXR",66,0)
 .F  S GSEQ=$O(FUTIL(RCNT,FTIEN,GSEQ)) Q:GSEQ=""  D
"RTN","PXRMETXR",67,0)
 ..S FSEQ=""
"RTN","PXRMETXR",68,0)
 ..F  S FSEQ=$O(FUTIL(RCNT,FTIEN,GSEQ,FSEQ)) Q:FSEQ=""  D
"RTN","PXRMETXR",69,0)
 ...;Recover list of term findings
"RTN","PXRMETXR",70,0)
 ...K TERMARR M TERMARR=FUTIL(RCNT,FTIEN,GSEQ,FSEQ)
"RTN","PXRMETXR",71,0)
 ...;Process term 
"RTN","PXRMETXR",72,0)
 ...K TFIEVAL D EVALTERM^PXRMTERM(DFN,.FINDPA,.TERMARR,.TFIEVAL)
"RTN","PXRMETXR",73,0)
 ...D URCNT(PXRMSTRT,PXRMSTOP,.TFIEVAL)
"RTN","PXRMETXR",74,0)
 ;Determine count from PLIST then add to ETX
"RTN","PXRMETXR",75,0)
 ;S CNT=+$O(PLIST(1,999999),-1) Q:'CNT
"RTN","PXRMETXR",76,0)
 ;D UPD(CNT)
"RTN","PXRMETXR",77,0)
 Q
"RTN","PXRMETXR",78,0)
 ;
"RTN","PXRMETXR",79,0)
FRULE(FRIEN,RCNT,SEQ,REM,FUTIL) ;Build array of findings in the finding rule
"RTN","PXRMETXR",80,0)
 N DATA,FIND,FSEQ,GIEN,GNAM,GSEQ,GTYP,GSTA,SUB,TLIST
"RTN","PXRMETXR",81,0)
 S GSEQ=0
"RTN","PXRMETXR",82,0)
 F  S GSEQ=$O(^PXRM(810.7,FRIEN,10,"B",GSEQ)) Q:GSEQ=""  D
"RTN","PXRMETXR",83,0)
 .S SUB=$O(^PXRM(810.7,FRIEN,10,"B",GSEQ,"")) Q:'SUB
"RTN","PXRMETXR",84,0)
 .S DATA=$G(^PXRM(810.7,FRIEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMETXR",85,0)
 .;Get the finding group ien and reminder status
"RTN","PXRMETXR",86,0)
 .S GIEN=$P(DATA,U,2),GSTA=$P(DATA,U,3) Q:'GIEN
"RTN","PXRMETXR",87,0)
 .;If no status then report finding totals for all patients 
"RTN","PXRMETXR",88,0)
 .I GSTA="" S GSTA="T"
"RTN","PXRMETXR",89,0)
 .;Get finding group info
"RTN","PXRMETXR",90,0)
 .S DATA=$G(^PXRM(810.8,GIEN,0)) Q:DATA=""
"RTN","PXRMETXR",91,0)
 .;Get group name and count type
"RTN","PXRMETXR",92,0)
 .S GTYP=$P(DATA,U,3),GNAM=$P(DATA,U) Q:GTYP=""
"RTN","PXRMETXR",93,0)
 .;Save group in workfile
"RTN","PXRMETXR",94,0)
 .S ^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ)=GNAM_U_GTYP_U_GSTA
"RTN","PXRMETXR",95,0)
 .;Get all findings in group
"RTN","PXRMETXR",96,0)
 .S FSEQ=0
"RTN","PXRMETXR",97,0)
 .F  S FSEQ=$O(^PXRM(810.8,GIEN,10,"B",FSEQ)) Q:FSEQ=""  D
"RTN","PXRMETXR",98,0)
 ..S SUB=$O(^PXRM(810.8,GIEN,10,"B",FSEQ,"")) Q:'SUB
"RTN","PXRMETXR",99,0)
 ..S DATA=$G(^PXRM(810.8,GIEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMETXR",100,0)
 ..;Get the finding ien and exclusion status
"RTN","PXRMETXR",101,0)
 ..S FIND=$P(DATA,U,2) Q:'FIND
"RTN","PXRMETXR",102,0)
 ..;Initialize count for finding
"RTN","PXRMETXR",103,0)
 ..S ^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ,FSEQ)=FIND
"RTN","PXRMETXR",104,0)
 ..;Reminder evaluation counts work from REM
"RTN","PXRMETXR",105,0)
 ..I GTYP'="UR" D  Q
"RTN","PXRMETXR",106,0)
 ...S REM(RCNT,FIND,GSEQ,FSEQ)=""
"RTN","PXRMETXR",107,0)
 ...S REM(RCNT,FIND,GSEQ)=GTYP
"RTN","PXRMETXR",108,0)
 ..;Utilization counts work from FUTIL
"RTN","PXRMETXR",109,0)
 ..D TERM^PXRMLDR(FIND,.TLIST)
"RTN","PXRMETXR",110,0)
 ..;Save TLIST
"RTN","PXRMETXR",111,0)
 ..M FUTIL(RCNT,FIND,GSEQ,FSEQ)=TLIST
"RTN","PXRMETXR",112,0)
 Q
"RTN","PXRMETXR",113,0)
 ;
"RTN","PXRMETXR",114,0)
REM(SUB,PXRMLIST,PXRMSTRT,PXRMSTOP,PARTYPE) ;Run reminders against patient
"RTN","PXRMETXR",115,0)
 ;lists.
"RTN","PXRMETXR",116,0)
 N APPL,DATA,DEFARR,DEFSITE,DFN,DUE,FIEV,FRIEN,FUTIL,IND,INST
"RTN","PXRMETXR",117,0)
 N PXRMDATE,RCNT,REM,RIEN,RNAM,STATUS,SUB1,TODAY
"RTN","PXRMETXR",118,0)
 N END,START
"RTN","PXRMETXR",119,0)
 ;S START=$H
"RTN","PXRMETXR",120,0)
 S TODAY=$$DT^XLFDT
"RTN","PXRMETXR",121,0)
 ;Evaluation date is period end except if the period is incomplete
"RTN","PXRMETXR",122,0)
 S PXRMDATE=$S($$FMDIFF^XLFDT(PXRMSTOP,TODAY,2)>0:TODAY,1:PXRMSTOP)
"RTN","PXRMETXR",123,0)
 ;Scan reminders for this parameter set
"RTN","PXRMETXR",124,0)
 S (RCNT,SUB1)=0
"RTN","PXRMETXR",125,0)
 F  S SUB1=$O(^PXRM(810.2,IEN,10,SUB,10,SUB1)) Q:'SUB1  D
"RTN","PXRMETXR",126,0)
 .S DATA=$G(^PXRM(810.2,IEN,10,SUB,10,SUB1,0)) Q:DATA=""
"RTN","PXRMETXR",127,0)
 .;Reminder ien
"RTN","PXRMETXR",128,0)
 .S RIEN=$P(DATA,U,2) Q:'RIEN
"RTN","PXRMETXR",129,0)
 .;Evaluation date is period end except if the period is incomplete.
"RTN","PXRMETXR",130,0)
 .S PXRMDATE=$S($$FMDIFF^XLFDT(PXRMSTOP,TODAY,2)>0:TODAY,1:PXRMSTOP)
"RTN","PXRMETXR",131,0)
 .;Finding Rule
"RTN","PXRMETXR",132,0)
 .S FRIEN=$P(DATA,U,3)
"RTN","PXRMETXR",133,0)
 .;Reminder print name
"RTN","PXRMETXR",134,0)
 .S RNAM=$P($G(^PXD(811.9,RIEN,0)),U,3)
"RTN","PXRMETXR",135,0)
 .;Save details to REM array
"RTN","PXRMETXR",136,0)
 .S RCNT=RCNT+1,REM(RCNT)=RIEN_U_RNAM_U_FRIEN
"RTN","PXRMETXR",137,0)
 .;Build list of terms from extract finding rule #810.7
"RTN","PXRMETXR",138,0)
 .I FRIEN D FRULE(FRIEN,RCNT,SEQ,.REM,.FUTIL) Q
"RTN","PXRMETXR",139,0)
 .;If no extract finding rule defined collect all findings in reminder
"RTN","PXRMETXR",140,0)
 .I 'FRIEN D REMF(RIEN,RCNT,SEQ,.REM)
"RTN","PXRMETXR",141,0)
 ;
"RTN","PXRMETXR",142,0)
 ;Process patient list
"RTN","PXRMETXR",143,0)
 S IND=0,DEFSITE=+$P($$SITE^VASITE,U,3)
"RTN","PXRMETXR",144,0)
 F  S IND=$O(^PXRMXP(810.5,PXRMLIST,30,IND)) Q:'IND  D
"RTN","PXRMETXR",145,0)
 .S DFN=$P($G(^PXRMXP(810.5,PXRMLIST,30,IND,0)),U) Q:'DFN
"RTN","PXRMETXR",146,0)
 .S INST=$P($G(^PXRMXP(810.5,PXRMLIST,30,IND,0)),U,2)
"RTN","PXRMETXR",147,0)
 .I INST="" S INST=DEFSITE
"RTN","PXRMETXR",148,0)
 .S RCNT=0
"RTN","PXRMETXR",149,0)
 .F  S RCNT=$O(REM(RCNT)) Q:'RCNT  D
"RTN","PXRMETXR",150,0)
 ..S RIEN=$P(REM(RCNT),U),RNAM=$P(REM(RCNT),U,2),FRIEN=$P(REM(RCNT),U,3)
"RTN","PXRMETXR",151,0)
 ..;Clear evaluation arrays.
"RTN","PXRMETXR",152,0)
 ..K ^TMP("PXRHM",$J),^TMP("PXRMID",$J),FIEV
"RTN","PXRMETXR",153,0)
 ..;Evaluate reminders and store results
"RTN","PXRMETXR",154,0)
 ..D DEF^PXRMLDR(RIEN,.DEFARR)
"RTN","PXRMETXR",155,0)
 ..D EVAL^PXRM(DFN,.DEFARR,1,1,.FIEV,PXRMDATE)
"RTN","PXRMETXR",156,0)
 ..;Determine update from reminder status
"RTN","PXRMETXR",157,0)
 ..S STATUS=$P($G(^TMP("PXRHM",$J,RIEN,RNAM)),U) I STATUS="" Q
"RTN","PXRMETXR",158,0)
 ..;Ignore not applicables
"RTN","PXRMETXR",159,0)
 ..S APPL=$S(STATUS["DUE":1,STATUS="RESOLVED":1,STATUS="DONE":1,1:0)
"RTN","PXRMETXR",160,0)
 ..;Check if due
"RTN","PXRMETXR",161,0)
 ..S DUE=$S(STATUS="DUE NOW":1,1:0)
"RTN","PXRMETXR",162,0)
 ..;Compliance totals
"RTN","PXRMETXR",163,0)
 ..S DATA=$G(^TMP("PXRMETX",$J,SEQ,INST,RCNT))
"RTN","PXRMETXR",164,0)
 ..;Reminder ien
"RTN","PXRMETXR",165,0)
 ..I $P(DATA,U)="" S $P(DATA,U)=RIEN
"RTN","PXRMETXR",166,0)
 ..;Evaluated total
"RTN","PXRMETXR",167,0)
 ..S $P(DATA,U,2)=$P(DATA,U,2)+1
"RTN","PXRMETXR",168,0)
 ..;Applicable total
"RTN","PXRMETXR",169,0)
 ..S $P(DATA,U,3)=$P(DATA,U,3)+APPL
"RTN","PXRMETXR",170,0)
 ..;Not applicable total
"RTN","PXRMETXR",171,0)
 ..I 'APPL,'DUE S $P(DATA,U,4)=$P(DATA,U,4)+1
"RTN","PXRMETXR",172,0)
 ..;Due total
"RTN","PXRMETXR",173,0)
 ..S $P(DATA,U,5)=$P(DATA,U,5)+DUE
"RTN","PXRMETXR",174,0)
 ..;Not due count
"RTN","PXRMETXR",175,0)
 ..I APPL,'DUE S $P(DATA,U,6)=$P(DATA,U,6)+1
"RTN","PXRMETXR",176,0)
 ..;Add patient list
"RTN","PXRMETXR",177,0)
 ..I $P(DATA,U,7)="" S $P(DATA,U,7)=PXRMLIST
"RTN","PXRMETXR",178,0)
 ..;Update workfile
"RTN","PXRMETXR",179,0)
 ..S ^TMP("PXRMETX",$J,SEQ,INST,RCNT)=DATA
"RTN","PXRMETXR",180,0)
 ..;Save finding totals
"RTN","PXRMETXR",181,0)
 ..I PARTYPE="CF" D FIND(SEQ,RCNT,PXRMSTRT,PXRMSTOP)
"RTN","PXRMETXR",182,0)
 ;Clear evaluation fields
"RTN","PXRMETXR",183,0)
 K ^TMP("PXRHM",$J),^TMP("PXRMID",$J)
"RTN","PXRMETXR",184,0)
 ;S END=$H
"RTN","PXRMETXR",185,0)
 ;W !,"REMINDER EVALUATION TIME"
"RTN","PXRMETXR",186,0)
 ;D DETIME^PXRMXSEL(START,END)
"RTN","PXRMETXR",187,0)
 Q
"RTN","PXRMETXR",188,0)
 ;
"RTN","PXRMETXR",189,0)
REMF(RIEN,RCNT,SEQ,REM) ;Build array of all findings in the reminder
"RTN","PXRMETXR",190,0)
 N GNAM,GSEQ,FIND,FSEQ,GTYP,SUB
"RTN","PXRMETXR",191,0)
 S GNAM="Finding totals",GSEQ="001",FSEQ=0,GTYP="MRF"
"RTN","PXRMETXR",192,0)
 ;Save group name
"RTN","PXRMETXR",193,0)
 S ^TMP("PXRMETX",$J,SEQ,RCNT,GSEQ)=GNAM_U_GTYP
"RTN","PXRMETXR",194,0)
 ;Select all findings in the reminder
"RTN","PXRMETXR",195,0)
 S SUB=0
"RTN","PXRMETXR",196,0)
 F  S SUB=$O(^PXD(811.9,RIEN,20,SUB)) Q:'SUB  D
"RTN","PXRMETXR",197,0)
 .;Ignore if finding is not a term
"RTN","PXRMETXR",198,0)
 .S FIND=$P($G(^PXD(811.9,RIEN,20,SUB,0)),U) Q:FIND'["PXRMD(811.5"
"RTN","PXRMETXR",199,0)
 .;Convert to term ien
"RTN","PXRMETXR",200,0)
 .S FIND=$P(FIND,";")
"RTN","PXRMETXR",201,0)
 .;Build sequence number
"RTN","PXRMETXR",202,0)
 .S FSEQ=FSEQ+1,FSEQ=$$RJ^XLFSTR(FSEQ,3,0)
"RTN","PXRMETXR",203,0)
 .;Evaluation counts
"RTN","PXRMETXR",204,0)
 .S REM(RCNT,FIND,GSEQ,FSEQ)=""
"RTN","PXRMETXR",205,0)
 .S REM(RCNT,FIND,GSEQ)=GTYP
"RTN","PXRMETXR",206,0)
 .;Update Workfile
"RTN","PXRMETXR",207,0)
 .S ^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ,FSEQ)=FIND
"RTN","PXRMETXR",208,0)
 Q
"RTN","PXRMETXR",209,0)
 ;
"RTN","PXRMETXR",210,0)
URCNT(PXRMSTRT,PXRMSTOP,TFIEVAL) ;
"RTN","PXRMETXR",211,0)
 ;Handle counting all valid occurrences for the finding items.
"RTN","PXRMETXR",212,0)
 ;Includes historical entries that were entered within the reporting
"RTN","PXRMETXR",213,0)
 ;period, cut the encounter date if it is outside the reporting period.
"RTN","PXRMETXR",214,0)
 N CNT,DATEENT,FDATE,FILE,FNUM,FOCCNUM,HIST,NODE,SCAT,VIEN
"RTN","PXRMETXR",215,0)
 S CNT=0,FNUM=0
"RTN","PXRMETXR",216,0)
 F  S FNUM=$O(TFIEVAL(FNUM)) Q:FNUM'>0  D
"RTN","PXRMETXR",217,0)
 .S FILE=$G(TFIEVAL(FNUM,"FILE NUMBER"))
"RTN","PXRMETXR",218,0)
 .S HIST=$S(FILE=9000010.18:1,FILE=9000010.13:1,FILE=9000010.23:1,FILE=9000010.16:1,FILE=9000010.07:1,FILE=9000010.12:1,FILE=9000010.15:1,1:0)
"RTN","PXRMETXR",219,0)
 .S FOCCNUM=0 F  S FOCCNUM=$O(TFIEVAL(FNUM,FOCCNUM)) Q:FOCCNUM'>0  D
"RTN","PXRMETXR",220,0)
 ..S FDATE=$P(TFIEVAL(FNUM,FOCCNUM,"DATE"),".") Q:FDATE'>0
"RTN","PXRMETXR",221,0)
 ..I HIST=0,FDATE=PXRMSTRT!(FDATE>PXRMSTRT) S CNT=CNT+1
"RTN","PXRMETXR",222,0)
 ..I HIST=1 D
"RTN","PXRMETXR",223,0)
 ...S VIEN=TFIEVAL(FNUM,FOCCNUM,"VISIT") Q:VIEN'>0
"RTN","PXRMETXR",224,0)
 ...S NODE=$G(^AUPNVSIT(VIEN,0))
"RTN","PXRMETXR",225,0)
 ...S SCAT=$P(NODE,U,7),DATEENT=$P($P(NODE,U,2),".")
"RTN","PXRMETXR",226,0)
 ...I FDATE=PXRMSTRT!(FDATE>PXRMSTRT),SCAT'="E" S CNT=CNT+1 Q
"RTN","PXRMETXR",227,0)
 ...I SCAT="E",(DATEENT=PXRMSTRT!(DATEENT>PXRMSTRT))&(DATEENT=PXRMSTOP!(DATEENT<PXRMSTOP)) S CNT=CNT+1
"RTN","PXRMETXR",228,0)
 D UPD(CNT)
"RTN","PXRMETXR",229,0)
 Q
"RTN","PXRMETXR",230,0)
 ;
"RTN","PXRMETXR",231,0)
UPD(CNT) ;Update totals
"RTN","PXRMETXR",232,0)
 S DATA=$G(^TMP("PXRMETX",$J,SEQ,INST,RCNT,GSEQ,FSEQ))
"RTN","PXRMETXR",233,0)
 ;Total count
"RTN","PXRMETXR",234,0)
 S $P(DATA,U,2)=$P(DATA,U,2)+CNT
"RTN","PXRMETXR",235,0)
 ;Applicable count
"RTN","PXRMETXR",236,0)
 S $P(DATA,U,3)=$P(DATA,U,3)+(APPL*CNT)
"RTN","PXRMETXR",237,0)
 ;Not applicable count
"RTN","PXRMETXR",238,0)
 I 'APPL,'DUE S $P(DATA,U,4)=$P(DATA,U,4)+CNT
"RTN","PXRMETXR",239,0)
 ;Due count
"RTN","PXRMETXR",240,0)
 S $P(DATA,U,5)=$P(DATA,U,5)+(DUE*CNT)
"RTN","PXRMETXR",241,0)
 ;Not due count
"RTN","PXRMETXR",242,0)
 I APPL,'DUE S $P(DATA,U,6)=$P(DATA,U,6)+CNT
"RTN","PXRMETXR",243,0)
 ;Update current count
"RTN","PXRMETXR",244,0)
 S ^TMP("PXRMETX",$J,SEQ,INST,RCNT,GSEQ,FSEQ)=DATA
"RTN","PXRMETXR",245,0)
 ;AGP REMOVE UNTIL A DECISION CAN BE MADE
"RTN","PXRMETXR",246,0)
 ;I CNT=1,APPL=1 S ^TMP("PXRMETX",$J,SEQ,INST,RCNT,GSEQ,FSEQ,DFN)=DFN
"RTN","PXRMETXR",247,0)
 Q
"RTN","PXRMETXR",248,0)
 ;
"RTN","PXRMETXU")
0^94^B4055861
"RTN","PXRMETXU",1,0)
PXRMETXU ; SLC/PJH - Extract utilities ;08/03/2005
"RTN","PXRMETXU",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMETXU",3,0)
 ;
"RTN","PXRMETXU",4,0)
HELP(CALL) ;General help text routine
"RTN","PXRMETXU",5,0)
 N HTEXT
"RTN","PXRMETXU",6,0)
 I CALL=1 D
"RTN","PXRMETXU",7,0)
 .S HTEXT(1)="Enter 'Y' to overwrite this existing list. Enter 'N' to"
"RTN","PXRMETXU",8,0)
 .S HTEXT(2)="use a different patient list name."
"RTN","PXRMETXU",9,0)
 ;
"RTN","PXRMETXU",10,0)
 I CALL=3 D
"RTN","PXRMETXU",11,0)
 .S HTEXT(1)="Enter 'Y' to transmit extract. Otherwise enter 'N'."
"RTN","PXRMETXU",12,0)
 ;
"RTN","PXRMETXU",13,0)
 I CALL=4 D
"RTN","PXRMETXU",14,0)
 .S HTEXT(1)="The selected period is the same as next scheduled extract."
"RTN","PXRMETXU",15,0)
 .S HTEXT(2)="Enter 'Y' to if this extract will replace the scheduled"
"RTN","PXRMETXU",16,0)
 .S HTEXT(3)="extract. Enter 'N' if you still want the scheduled extract"
"RTN","PXRMETXU",17,0)
 .S HTEXT(3)="to run."
"RTN","PXRMETXU",18,0)
 ;
"RTN","PXRMETXU",19,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMETXU",20,0)
 Q
"RTN","PXRMETXU",21,0)
 ;
"RTN","PXRMETXU",22,0)
PRGES ;Delete any Extract Summaries over 5 years old
"RTN","PXRMETXU",23,0)
 N DIFF,EDATE,OLD
"RTN","PXRMETXU",24,0)
 S OLD=0
"RTN","PXRMETXU",25,0)
 F  S OLD=$O(^PXRMXT(810.3,OLD)) Q:'OLD  D
"RTN","PXRMETXU",26,0)
 .I +$G(^PXRMXT(810.3,OLD,50))'=1 Q
"RTN","PXRMETXU",27,0)
 .;Extract Date
"RTN","PXRMETXU",28,0)
 .S EDATE=$P($G(^PXRMXT(810.3,OLD,0)),U,6)
"RTN","PXRMETXU",29,0)
 .;Ignore if < 5 years (1826 days) since creation
"RTN","PXRMETXU",30,0)
 .I $$FMDIFF^XLFDT(DT,EDATE,1)<1826 Q
"RTN","PXRMETXU",31,0)
 .;Otherwise delete
"RTN","PXRMETXU",32,0)
 .N DIK,DA
"RTN","PXRMETXU",33,0)
 .S DIK="^PXRMXT(810.3,",DA=OLD D ^DIK
"RTN","PXRMETXU",34,0)
 Q
"RTN","PXRMETXU",35,0)
 ;
"RTN","PXRMETXU",36,0)
PRGPL ;Delete any Patient Lists over 5 years old
"RTN","PXRMETXU",37,0)
 N LDATE,OLD
"RTN","PXRMETXU",38,0)
 S OLD=0
"RTN","PXRMETXU",39,0)
 F  S OLD=$O(^PXRMXP(810.5,OLD)) Q:'OLD  D
"RTN","PXRMETXU",40,0)
 .I +$G(^PXRMXP(810.5,OLD,50))'=1 Q
"RTN","PXRMETXU",41,0)
 .;Patient List Date
"RTN","PXRMETXU",42,0)
 .S LDATE=$P($G(^PXRMXP(810.5,OLD,0)),U,4)
"RTN","PXRMETXU",43,0)
 .;Ignore if < 5 years (1826 days) since creation
"RTN","PXRMETXU",44,0)
 .I $$FMDIFF^XLFDT(DT,LDATE,1)<1826 Q
"RTN","PXRMETXU",45,0)
 .;Otherwise delete
"RTN","PXRMETXU",46,0)
 .N DIK,DA
"RTN","PXRMETXU",47,0)
 .S DIK="^PXRMXP(810.5,",DA=OLD D ^DIK
"RTN","PXRMETXU",48,0)
 Q
"RTN","PXRMETXU",49,0)
 ;
"RTN","PXRMEUT")
0^50^B48878170
"RTN","PXRMEUT",1,0)
PXRMEUT ; SLC/PJH - General extract utilities ;06/27/2006
"RTN","PXRMEUT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEUT",3,0)
 ;
"RTN","PXRMEUT",4,0)
 ;=================================================
"RTN","PXRMEUT",5,0)
ASKNUM(TEXT,MIN,MAX) ;
"RTN","PXRMEUT",6,0)
 N DIR,X,Y
"RTN","PXRMEUT",7,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEUT",8,0)
 S DIR(0)="N"_U_MIN_":"_MAX
"RTN","PXRMEUT",9,0)
 S DIR("A")=TEXT
"RTN","PXRMEUT",10,0)
 S DIR("B")=MIN
"RTN","PXRMEUT",11,0)
 S DIR("?")="Enter a number between "_MIN_" and "_MAX_"."
"RTN","PXRMEUT",12,0)
 W !
"RTN","PXRMEUT",13,0)
 D ^DIR
"RTN","PXRMEUT",14,0)
 I $D(DTOUT)!$D(DUOUT) S Y=MIN
"RTN","PXRMEUT",15,0)
 Q Y
"RTN","PXRMEUT",16,0)
 ;
"RTN","PXRMEUT",17,0)
 ;=================================================
"RTN","PXRMEUT",18,0)
ASKYN(DEF,TEXT,RTN,HLP) ;
"RTN","PXRMEUT",19,0)
 N DIR,X,Y
"RTN","PXRMEUT",20,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEUT",21,0)
 S DIR(0)="Y0"
"RTN","PXRMEUT",22,0)
 S DIR("A")=TEXT
"RTN","PXRMEUT",23,0)
 S DIR("B")=DEF
"RTN","PXRMEUT",24,0)
 S DIR("?")="Enter Y or N."
"RTN","PXRMEUT",25,0)
 I $G(RTN)'="",$G(HLP)'="" D
"RTN","PXRMEUT",26,0)
 . S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMEUT",27,0)
 . S DIR("??")=U_"D HELP^"_RTN_"(HLP)"
"RTN","PXRMEUT",28,0)
 W !
"RTN","PXRMEUT",29,0)
 D ^DIR
"RTN","PXRMEUT",30,0)
 I $D(DTOUT)!$D(DUOUT) S Y=DEF
"RTN","PXRMEUT",31,0)
 Q Y
"RTN","PXRMEUT",32,0)
 ;
"RTN","PXRMEUT",33,0)
 ;=================================================
"RTN","PXRMEUT",34,0)
BHELP ;Write the beginning date help.
"RTN","PXRMEUT",35,0)
 N BDHTEXT,%DT
"RTN","PXRMEUT",36,0)
 S BDHTEXT(1)="This is the beginning date for the "_LIT_"."
"RTN","PXRMEUT",37,0)
 D HELP^PXRMEUT(.BDHTEXT)
"RTN","PXRMEUT",38,0)
 S %DT="P",%DT(0)=-DT
"RTN","PXRMEUT",39,0)
 D HELP^%DTC
"RTN","PXRMEUT",40,0)
 Q
"RTN","PXRMEUT",41,0)
 ;
"RTN","PXRMEUT",42,0)
 ;=================================================
"RTN","PXRMEUT",43,0)
CALC(NEXT,START,END) ;Calculate period start and end dates
"RTN","PXRMEUT",44,0)
 ;Next is current run period
"RTN","PXRMEUT",45,0)
 N CMON,CYR,ETYPE,NMON,NYR,PERIOD,YEAR
"RTN","PXRMEUT",46,0)
 ;extract year and period (M1,M2,Q1,Q2,Y etc)
"RTN","PXRMEUT",47,0)
 I NEXT["/" S YEAR=$P(NEXT,"/",2),PERIOD=$P(NEXT,"/"),ETYPE=$E(PERIOD)
"RTN","PXRMEUT",48,0)
 I NEXT?4N S YEAR=NEXT,PERIOD="",ETYPE="Y"
"RTN","PXRMEUT",49,0)
 ;Two digit year
"RTN","PXRMEUT",50,0)
 S CYR=$E(YEAR,3,4),NYR=CYR
"RTN","PXRMEUT",51,0)
 ;If yearly use Jan 1st of current year and next
"RTN","PXRMEUT",52,0)
 I ETYPE="Y" D
"RTN","PXRMEUT",53,0)
 .S CMON="1",NMON="1",NYR=NYR+1
"RTN","PXRMEUT",54,0)
 ;If quarterly use start of first month of next quarter
"RTN","PXRMEUT",55,0)
 I ETYPE="Q" D
"RTN","PXRMEUT",56,0)
 .S CMON=$E(PERIOD,2,99),NMON=CMON*3+1 I NMON>12 S NYR=NYR+1,NMON=1
"RTN","PXRMEUT",57,0)
 .S CMON=CMON*3-2
"RTN","PXRMEUT",58,0)
 ;If monthly use start of next month
"RTN","PXRMEUT",59,0)
 I ETYPE="M" D
"RTN","PXRMEUT",60,0)
 .S CMON=$E(PERIOD,2,99),NMON=CMON+1 I NMON>12 S NYR=NYR+1,NMON=1
"RTN","PXRMEUT",61,0)
 ;Zero fill the month fields
"RTN","PXRMEUT",62,0)
 S CMON=$$RJ^XLFSTR(CMON,2,0),NMON=$$RJ^XLFSTR(NMON,2,0)
"RTN","PXRMEUT",63,0)
 ;Zero fill the year fields
"RTN","PXRMEUT",64,0)
 S CYR=$$RJ^XLFSTR(CYR,2,0),NYR=$$RJ^XLFSTR(NYR,2,0)
"RTN","PXRMEUT",65,0)
 ;Report start date is start of current period 
"RTN","PXRMEUT",66,0)
 S START=3_CYR_CMON_"01"
"RTN","PXRMEUT",67,0)
 ;Report end date is start of next period less one day
"RTN","PXRMEUT",68,0)
 S END=$$FMADD^XLFDT(3_NYR_NMON_"01",-1)
"RTN","PXRMEUT",69,0)
 Q
"RTN","PXRMEUT",70,0)
 ;
"RTN","PXRMEUT",71,0)
 ;=================================================
"RTN","PXRMEUT",72,0)
DATES(BDATE,EDATE,LIT) ;Get a past date range.
"RTN","PXRMEUT",73,0)
BEGIN ;Select the beginning date.
"RTN","PXRMEUT",74,0)
 N DIR,%DT,X,Y
"RTN","PXRMEUT",75,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEUT",76,0)
 S DIR(0)="DA^::ETX"
"RTN","PXRMEUT",77,0)
 S DIR("A")="Enter "_LIT_" BEGINNING DATE: "
"RTN","PXRMEUT",78,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMEUT",79,0)
 S DIR("?")="For detailed help type ??"
"RTN","PXRMEUT",80,0)
 S DIR("??")=U_"D BHELP^PXRMEUT"
"RTN","PXRMEUT",81,0)
 W !
"RTN","PXRMEUT",82,0)
 D ^DIR K DIR
"RTN","PXRMEUT",83,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEUT",84,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMEUT",85,0)
 S BDATE=Y
"RTN","PXRMEUT",86,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G BEGIN
"RTN","PXRMEUT",87,0)
 S BDATE=Y
"RTN","PXRMEUT",88,0)
 ;
"RTN","PXRMEUT",89,0)
END ;Select the ending date.
"RTN","PXRMEUT",90,0)
 S DIR(0)="DA^"_BDATE_"::ETX"
"RTN","PXRMEUT",91,0)
 S DIR("A")="Enter "_LIT_" ENDING DATE: "
"RTN","PXRMEUT",92,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMEUT",93,0)
 S DIR("?")="This date cannot be before "_$$FMTE^XLFDT(BDATE,"D")_". For detailed help type ??"
"RTN","PXRMEUT",94,0)
 S DIR("??")=U_"D EHELP^PXRMEUT"
"RTN","PXRMEUT",95,0)
 D ^DIR
"RTN","PXRMEUT",96,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEUT",97,0)
 I $D(DTOUT) Q
"RTN","PXRMEUT",98,0)
 I $D(DUOUT) G BEGIN
"RTN","PXRMEUT",99,0)
 S EDATE=Y
"RTN","PXRMEUT",100,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G END
"RTN","PXRMEUT",101,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEUT",102,0)
 Q
"RTN","PXRMEUT",103,0)
 ;
"RTN","PXRMEUT",104,0)
 ;=================================================
"RTN","PXRMEUT",105,0)
DOCUMENT(PXRMLIST,PXRMRULE,INDP,INTP,BEG,END) ;Document how the
"RTN","PXRMEUT",106,0)
 ;list was built.
"RTN","PXRMEUT",107,0)
 N CDATE,CLASS,CREATOR,IND,LDATA,LNAME
"RTN","PXRMEUT",108,0)
 N NDL,NL,NPAT,OUTPUT,SNAME,SOURCE,TEXT,TYPE,VALMCNT
"RTN","PXRMEUT",109,0)
 K ^TMP("PXRMLRED",$J)
"RTN","PXRMEUT",110,0)
 S LDATA=$G(^PXRMXP(810.5,PXRMLIST,0))
"RTN","PXRMEUT",111,0)
 S LNAME=$P(LDATA,U,1)
"RTN","PXRMEUT",112,0)
 S CDATE=$P(LDATA,U,4)
"RTN","PXRMEUT",113,0)
 S SOURCE=$P(LDATA,U,5),SNAME="NONE"
"RTN","PXRMEUT",114,0)
 ;Check if generated from #810.2
"RTN","PXRMEUT",115,0)
 I SOURCE S SNAME="Extract Parameter - "_$P($G(^PXRM(810.2,SOURCE,0)),U)
"RTN","PXRMEUT",116,0)
 ;If not check if generated from #810.4
"RTN","PXRMEUT",117,0)
 I 'SOURCE S SOURCE=$P(LDATA,U,6) S:SOURCE SNAME="List Rule - "_$P($G(^PXRM(810.4,SOURCE,0)),U)
"RTN","PXRMEUT",118,0)
 ;Creator
"RTN","PXRMEUT",119,0)
 S CREATOR=+$P(LDATA,U,7)
"RTN","PXRMEUT",120,0)
 S CREATOR=$S(CREATOR>0:$$GET1^DIQ(200,CREATOR,.01),1:"None")
"RTN","PXRMEUT",121,0)
 ;Type
"RTN","PXRMEUT",122,0)
 S TYPE=$P(LDATA,U,8)
"RTN","PXRMEUT",123,0)
 S TYPE=$$EXTERNAL^DILFD(810.5,.08,"",TYPE,.EM)
"RTN","PXRMEUT",124,0)
 ;Class
"RTN","PXRMEUT",125,0)
 S CLASS=$P($G(^PXRMXP(810.5,PXRMLIST,100)),U,1)
"RTN","PXRMEUT",126,0)
 S CLASS=$S(CLASS="N":"National",CLASS="V":"VISN",1:"Local")
"RTN","PXRMEUT",127,0)
 S NPAT=$P(^PXRMXP(810.5,PXRMLIST,30,0),U,4)
"RTN","PXRMEUT",128,0)
 S TEXT(1)="List Name: "_LNAME_" ("_NPAT_" patients)"
"RTN","PXRMEUT",129,0)
 S TEXT(2)=" Created: "_$$FMTE^XLFDT(CDATE,"5Z")
"RTN","PXRMEUT",130,0)
 S TEXT(2)=$$LJ^XLFSTR(TEXT(2),40)_"Creator: "_CREATOR
"RTN","PXRMEUT",131,0)
 S TEXT(3)=" Class: "_CLASS
"RTN","PXRMEUT",132,0)
 S TEXT(3)=$$LJ^XLFSTR(TEXT(3),40)_"Type: "_TYPE
"RTN","PXRMEUT",133,0)
 S TEXT(4)=" Source: "_SNAME
"RTN","PXRMEUT",134,0)
 S TEXT(5)=" Patient List Beginning Date: "_$$FMTE^XLFDT(BEG,"5Z")
"RTN","PXRMEUT",135,0)
 S TEXT(6)=" Patient List Ending Date: "_$$FMTE^XLFDT(END,"5Z")
"RTN","PXRMEUT",136,0)
 S TEXT(7)=" "
"RTN","PXRMEUT",137,0)
 S NL=7
"RTN","PXRMEUT",138,0)
 F IND=1:1:NL S ^PXRMXP(810.5,PXRMLIST,200,IND,0)=TEXT(IND)
"RTN","PXRMEUT",139,0)
 D BLDLIST^PXRMLRED(PXRMRULE,3)
"RTN","PXRMEUT",140,0)
 F IND=1:1:VALMCNT S NL=NL+1,^PXRMXP(810.5,PXRMLIST,200,NL,0)=^TMP("PXRMLRED",$J,IND,0)
"RTN","PXRMEUT",141,0)
 S NL=NL+1,^PXRMXP(810.5,PXRMLIST,200,NL,0)=" --- List Build Information ---"
"RTN","PXRMEUT",142,0)
 S NL=NL+1,^PXRMXP(810.5,PXRMLIST,200,NL,0)="List Build Beginning Date: "_$$FMTE^XLFDT(BEG,"5Z")
"RTN","PXRMEUT",143,0)
 S NL=NL+1,^PXRMXP(810.5,PXRMLIST,200,NL,0)="List Build Ending Date: "_$$FMTE^XLFDT(END,"5Z")
"RTN","PXRMEUT",144,0)
 S NL=NL+1,^PXRMXP(810.5,PXRMLIST,200,NL,0)=" "
"RTN","PXRMEUT",145,0)
 S NL=NL+1,^PXRMXP(810.5,PXRMLIST,200,NL,0)="Include deceased patients: "_$S(INDP:"Yes",1:"No")
"RTN","PXRMEUT",146,0)
 S NL=NL+1,^PXRMXP(810.5,PXRMLIST,200,NL,0)="Include test patients: "_$S(INTP:"Yes",1:"No")
"RTN","PXRMEUT",147,0)
 ;Get the beginning and ending date information
"RTN","PXRMEUT",148,0)
 D DOCDATES^PXRMEUT1(PXRMRULE,BEG,END,.NDL,.OUTPUT)
"RTN","PXRMEUT",149,0)
 F IND=1:1:NDL S NL=NL+1,^PXRMXP(810.5,PXRMLIST,200,NL,0)=OUTPUT(IND)
"RTN","PXRMEUT",150,0)
 S ^PXRMXP(810.5,PXRMLIST,200,0)=U_U_NL_U_NL_U_DT_U
"RTN","PXRMEUT",151,0)
 K ^TMP("PXRMLRED",$J)
"RTN","PXRMEUT",152,0)
 Q
"RTN","PXRMEUT",153,0)
 ;
"RTN","PXRMEUT",154,0)
 ;=================================================
"RTN","PXRMEUT",155,0)
EHELP ;Write the ending date help.
"RTN","PXRMEUT",156,0)
 N EDHTEXT,%DT
"RTN","PXRMEUT",157,0)
 S EDHTEXT(1)="This is the ending date for the "_LIT_"."
"RTN","PXRMEUT",158,0)
 D HELP^PXRMEUT(.EDHTEXT)
"RTN","PXRMEUT",159,0)
 S %DT="P",%DT(0)=-DT
"RTN","PXRMEUT",160,0)
 D HELP^%DTC
"RTN","PXRMEUT",161,0)
 Q
"RTN","PXRMEUT",162,0)
 ;
"RTN","PXRMEUT",163,0)
 ;=================================================
"RTN","PXRMEUT",164,0)
HELP(HTEXT) ;General help text routine. Write out the text in the HTEXT
"RTN","PXRMEUT",165,0)
 ;array.
"RTN","PXRMEUT",166,0)
 N DIWF,DIWL,DIWR,IC,X
"RTN","PXRMEUT",167,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMEUT",168,0)
 K ^UTILITY($J,"W")
"RTN","PXRMEUT",169,0)
 S IC=""
"RTN","PXRMEUT",170,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMEUT",171,0)
 . S X=HTEXT(IC)
"RTN","PXRMEUT",172,0)
 . D ^DIWP
"RTN","PXRMEUT",173,0)
 W !
"RTN","PXRMEUT",174,0)
 S IC=0
"RTN","PXRMEUT",175,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMEUT",176,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMEUT",177,0)
 K ^UTILITY($J,"W")
"RTN","PXRMEUT",178,0)
 W !
"RTN","PXRMEUT",179,0)
 Q
"RTN","PXRMEUT",180,0)
 ;
"RTN","PXRMEUT",181,0)
 ;=================================================
"RTN","PXRMEUT",182,0)
LDELOK(LISTIEN) ;Return a 1 if it is ok for this user to delete the list.
"RTN","PXRMEUT",183,0)
 N CREATOR,DELOK
"RTN","PXRMEUT",184,0)
 S CREATOR=$P(^PXRMXP(810.5,LISTIEN,0),U,7)
"RTN","PXRMEUT",185,0)
 S DELOK=$S(CREATOR=DUZ:1,$D(^XUSEC("PXRM MANAGER",DUZ)):1,1:0)
"RTN","PXRMEUT",186,0)
 Q DELOK
"RTN","PXRMEUT",187,0)
 ;
"RTN","PXRMEUT",188,0)
 ;=================================================
"RTN","PXRMEUT",189,0)
MES(TEXT) ;General mail message
"RTN","PXRMEUT",190,0)
 N XMSUB
"RTN","PXRMEUT",191,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMEUT",192,0)
 S XMSUB="CLINICAL REMINDER EXTRACT"
"RTN","PXRMEUT",193,0)
 S ^TMP("PXRMXMZ",$J,1,0)=TEXT
"RTN","PXRMEUT",194,0)
 D SEND^PXRMMSG(XMSUB)
"RTN","PXRMEUT",195,0)
 Q
"RTN","PXRMEUT",196,0)
 ;
"RTN","PXRMEUT",197,0)
 ;=================================================
"RTN","PXRMEUT",198,0)
PERIOD(FREQ) ;Calculate next period
"RTN","PXRMEUT",199,0)
 N CMON,CUR,CYR,ETYPE,NEXT,PERIOD,YEAR
"RTN","PXRMEUT",200,0)
 ;Format current date YY/MM/DD
"RTN","PXRMEUT",201,0)
 S CUR=$$FMTE^XLFDT($$NOW^XLFDT,7)
"RTN","PXRMEUT",202,0)
 ;extract year and period
"RTN","PXRMEUT",203,0)
 S YEAR=$P(CUR,"/"),PERIOD=$P(CUR,"/",2)
"RTN","PXRMEUT",204,0)
 ;If yearly current year
"RTN","PXRMEUT",205,0)
 I FREQ="Y" D
"RTN","PXRMEUT",206,0)
 .S NEXT=YEAR
"RTN","PXRMEUT",207,0)
 ;If quarterly use current quarter
"RTN","PXRMEUT",208,0)
 I FREQ="Q" D
"RTN","PXRMEUT",209,0)
 .S NEXT="Q"_((PERIOD-1\3)+1)_"/"_YEAR
"RTN","PXRMEUT",210,0)
 ;If monthly use current month
"RTN","PXRMEUT",211,0)
 I FREQ="M" D
"RTN","PXRMEUT",212,0)
 .S NEXT="M"_PERIOD_"/"_YEAR
"RTN","PXRMEUT",213,0)
 Q NEXT
"RTN","PXRMEUT",214,0)
 ;
"RTN","PXRMEUT",215,0)
 ;=================================================
"RTN","PXRMEUT",216,0)
RMPAT(NODE,INDP,INTP) ;Remove dead and test patients from
"RTN","PXRMEUT",217,0)
 ;the list.
"RTN","PXRMEUT",218,0)
 I INDP,INTP Q
"RTN","PXRMEUT",219,0)
 N DFN,DOD,REMOVE
"RTN","PXRMEUT",220,0)
 S DFN=0
"RTN","PXRMEUT",221,0)
 F  S DFN=$O(^TMP($J,NODE,DFN)) Q:DFN=""  D
"RTN","PXRMEUT",222,0)
 .;DBIA 3744
"RTN","PXRMEUT",223,0)
 . S REMOVE=$S('INTP:$$TESTPAT^VADPT(DFN),1:0)
"RTN","PXRMEUT",224,0)
 . I REMOVE K ^TMP($J,NODE,DFN) Q
"RTN","PXRMEUT",225,0)
 . I INDP Q
"RTN","PXRMEUT",226,0)
 .;DBIA #10035
"RTN","PXRMEUT",227,0)
 . S DOD=+$P($G(^DPT(DFN,.35)),U,1)
"RTN","PXRMEUT",228,0)
 . I DOD=0 Q
"RTN","PXRMEUT",229,0)
 . K ^TMP($J,NODE,DFN)
"RTN","PXRMEUT",230,0)
 Q
"RTN","PXRMEUT",231,0)
 ;
"RTN","PXRMEUT1")
0^118^B17787361
"RTN","PXRMEUT1",1,0)
PXRMEUT1 ; SLC/PKR - General extract utilities ;08/09/2006
"RTN","PXRMEUT1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEUT1",3,0)
 ;=================================================
"RTN","PXRMEUT1",4,0)
DCONV(DATE,LBBDT,LBEDT) ;Convert dates to actual values.
"RTN","PXRMEUT1",5,0)
 I DATE=0 Q DATE
"RTN","PXRMEUT1",6,0)
 N PXRMDATE
"RTN","PXRMEUT1",7,0)
 S PXRMDATE=$S(DATE["BDT":LBBDT,1:LBEDT)
"RTN","PXRMEUT1",8,0)
 S DATE=$$STRREP^PXRMUTIL(DATE,"BDT","T")
"RTN","PXRMEUT1",9,0)
 Q $$CTFMD^PXRMDATE(DATE)
"RTN","PXRMEUT1",10,0)
 ;
"RTN","PXRMEUT1",11,0)
 ;=================================================
"RTN","PXRMEUT1",12,0)
DAYSIM(FMDATE) ;Given a FileMan date return the number of days in the month.
"RTN","PXRMEUT1",13,0)
 N MONTH
"RTN","PXRMEUT1",14,0)
 S MONTH=$E(FMDATE,4,5)
"RTN","PXRMEUT1",15,0)
 S DAYS=$S(MONTH="01":31,MONTH="02":28,MONTH="03":31,MONTH="04":30,MONTH="05":31,MONTH="06":30,MONTH="07":31,MONTH="08":31,MONTH="09":30,MONTH="10":31,MONTH="11":30,MONTH="12":31,1:"")
"RTN","PXRMEUT1",16,0)
 I MONTH="02" D
"RTN","PXRMEUT1",17,0)
 . N LYEAR,YEAR
"RTN","PXRMEUT1",18,0)
 . S YEAR=$E(FMDATE,1,3)+1700
"RTN","PXRMEUT1",19,0)
 . S LYEAR=$S((YEAR#4=0)&(YEAR#100'=0):1,YEAR#400=0:1,1:0)
"RTN","PXRMEUT1",20,0)
 . I LYEAR S DAYS=29
"RTN","PXRMEUT1",21,0)
 Q DAYS
"RTN","PXRMEUT1",22,0)
 ;
"RTN","PXRMEUT1",23,0)
 ;=================================================
"RTN","PXRMEUT1",24,0)
DOCDATES(RULESET,LBBDT,LBEDT,NL,OUTPUT) ;
"RTN","PXRMEUT1",25,0)
 N FINDPA,FRACT,FRDATA,FRDATES,FRIEN,FRLST,FRLIEN,FROLST,FROUT,FRPAT
"RTN","PXRMEUT1",26,0)
 N FRPERM,FRSTRT,FRTIEN,FRTYP,FSEQ,PXRMDATE,PXRMFVPL
"RTN","PXRMEUT1",27,0)
 N RRIEN,RSDATA,RSDATES,RBDT,REDT,SEQ,SUB
"RTN","PXRMEUT1",28,0)
 ;Build the variable pointer list.
"RTN","PXRMEUT1",29,0)
 D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMEUT1",30,0)
 S SEQ="",NL=0
"RTN","PXRMEUT1",31,0)
 F  S SEQ=$O(^PXRM(810.4,RULESET,30,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMEUT1",32,0)
 . S SUB=$O(^PXRM(810.4,RULESET,30,"B",SEQ,"")) Q:'SUB
"RTN","PXRMEUT1",33,0)
 . S RSDATA=$G(^PXRM(810.4,RULESET,30,SUB,0)) Q:RSDATA=""
"RTN","PXRMEUT1",34,0)
 . S RSDATES=$G(^PXRM(810.4,RULESET,30,SUB,1))
"RTN","PXRMEUT1",35,0)
 .;Finding rule ien.
"RTN","PXRMEUT1",36,0)
 . S FRIEN=$P(RSDATA,U,2) Q:'FRIEN
"RTN","PXRMEUT1",37,0)
 .;Check if entry is a finding rule (not a set or reminder rule)
"RTN","PXRMEUT1",38,0)
 . S FRDATA=$G(^PXRM(810.4,FRIEN,0)),FRTYP=$P(FRDATA,U,3) Q:FRTYP=3
"RTN","PXRMEUT1",39,0)
 . S FRDATES=$P(FRDATA,U,4,5)
"RTN","PXRMEUT1",40,0)
 .;Get term IEN for finding rule
"RTN","PXRMEUT1",41,0)
 . I FRTYP=1 S FRTIEN=$P(FRDATA,U,7) Q:'FRTIEN
"RTN","PXRMEUT1",42,0)
 .;Get Reminder definition IEN for Reminder rule
"RTN","PXRMEUT1",43,0)
 . I FRTYP=2 S RRIEN=$P(FRDATA,U,10) Q:'RRIEN
"RTN","PXRMEUT1",44,0)
 .;Determine RBDT and REDT
"RTN","PXRMEUT1",45,0)
 . D RDATES(RSDATES,FRDATES,LBBDT,LBEDT,.RBDT,.REDT)
"RTN","PXRMEUT1",46,0)
 . S PXRMDATE=LBEDT
"RTN","PXRMEUT1",47,0)
 . S $P(FINDPA(0),U,8)=RBDT,$P(FINDPA(0),U,11)=REDT
"RTN","PXRMEUT1",48,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMEUT1",49,0)
 . S NL=NL+1,OUTPUT(NL)="SEQUENCE "_SEQ_" "_$P(FRDATA,U,1)
"RTN","PXRMEUT1",50,0)
 .;Term finding rules
"RTN","PXRMEUT1",51,0)
 . I FRTYP=1 D TERM(FRTIEN,.FINDPA,.PXRMFVPL,.NL,.OUTPUT)
"RTN","PXRMEUT1",52,0)
 .;Reminder Definition List Rule
"RTN","PXRMEUT1",53,0)
 . I FRTYP=2 D REM(RRIEN,.FINDPA,.PXRMFVPL,.NL,.OUTPUT)
"RTN","PXRMEUT1",54,0)
 Q
"RTN","PXRMEUT1",55,0)
 ;
"RTN","PXRMEUT1",56,0)
 ;=================================================
"RTN","PXRMEUT1",57,0)
FMULPRT(DEFARR,FINDPA,PXRMFVPL,NL,OUTPUT) ;Print the finding multiple
"RTN","PXRMEUT1",58,0)
 ;information.
"RTN","PXRMEUT1",59,0)
 N BDT,EDT,FNAME,FTYPE,IND,NOCC,PFINDPA,TFINDPA,VPTR
"RTN","PXRMEUT1",60,0)
 S IND=0
"RTN","PXRMEUT1",61,0)
 F  S IND=+$O(DEFARR(20,IND)) Q:IND=0  D
"RTN","PXRMEUT1",62,0)
 . S VPTR=$P(DEFARR(20,IND,0),U,1)
"RTN","PXRMEUT1",63,0)
 . S FNAME=$$ENTRYNAM^PXRMPTD2(VPTR)
"RTN","PXRMEUT1",64,0)
 . S FTYPE=$$FTYPE^PXRMPTD2(VPTR,1)
"RTN","PXRMEUT1",65,0)
 . S NL=NL+1,OUTPUT(NL)="  FINDING "_IND_"-"_FTYPE_"."_FNAME
"RTN","PXRMEUT1",66,0)
 . K PFINDPA,TFINDPA
"RTN","PXRMEUT1",67,0)
 . M TFINDPA=DEFARR(20,IND)
"RTN","PXRMEUT1",68,0)
 .;Set the finding parameters.
"RTN","PXRMEUT1",69,0)
 . D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMEUT1",70,0)
 . D SSPAR^PXRMUTIL(PFINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMEUT1",71,0)
 . S NL=NL+1,OUTPUT(NL)="   Beginning Date/Time: "_$$FMTE^XLFDT(BDT,"5Z")
"RTN","PXRMEUT1",72,0)
 . S NL=NL+1,OUTPUT(NL)="   Ending Date/Time:    "_$$FMTE^XLFDT(EDT,"5Z")
"RTN","PXRMEUT1",73,0)
 Q
"RTN","PXRMEUT1",74,0)
 ;
"RTN","PXRMEUT1",75,0)
 ;=================================================
"RTN","PXRMEUT1",76,0)
RDATES(RSDATES,FRDATES,LBBDT,LBEDT,RBDT,REDT) ;Determine the beginning and
"RTN","PXRMEUT1",77,0)
 ;ending dates.
"RTN","PXRMEUT1",78,0)
 ;Date precedence: LIST BUILD < RULE SET < FINDING RULE < TERM/REMINDER
"RTN","PXRMEUT1",79,0)
 S RBDT=$P(FRDATES,U,1),REDT=$P(FRDATES,U,2)
"RTN","PXRMEUT1",80,0)
 I RBDT="",REDT="" S RBDT=$P(RSDATES,U,1),REDT=$P(RSDATES,U,2)
"RTN","PXRMEUT1",81,0)
 I RBDT="",REDT="" S RBDT=LBBDT,REDT=LBEDT
"RTN","PXRMEUT1",82,0)
 I RBDT="" S RBDT=0
"RTN","PXRMEUT1",83,0)
 I REDT="" S REDT=LBEDT
"RTN","PXRMEUT1",84,0)
 I REDT=0 S REDT=$$DT^XLFDT
"RTN","PXRMEUT1",85,0)
 ;Convert RBDT and REDT to FileMan dates.
"RTN","PXRMEUT1",86,0)
 S RBDT=$$DCONV(RBDT,LBBDT,LBEDT)
"RTN","PXRMEUT1",87,0)
 S REDT=$$DCONV(REDT,LBBDT,LBEDT)
"RTN","PXRMEUT1",88,0)
 ;If the month is missing use January for the beginning date and
"RTN","PXRMEUT1",89,0)
 ;December for the ending date.
"RTN","PXRMEUT1",90,0)
 I $E(RBDT,4,5)="00" S RBDT=$E(RBDT,1,3)_"01"_$E(RBDT,6,7)
"RTN","PXRMEUT1",91,0)
 I $E(REDT,4,5)="00" S REDT=$E(REDT,1,3)_"12"_$E(REDT,6,7)
"RTN","PXRMEUT1",92,0)
 ;If the day is missing use the first for beginning date and the end
"RTN","PXRMEUT1",93,0)
 ;of the month for ending date.
"RTN","PXRMEUT1",94,0)
 I $E(RBDT,6,7)="00" S RBDT=$E(RBDT,1,5)_"01"
"RTN","PXRMEUT1",95,0)
 I $E(REDT,6,7)="00" S REDT=$E(REDT,1,5)_$$DAYSIM(REDT)
"RTN","PXRMEUT1",96,0)
 Q
"RTN","PXRMEUT1",97,0)
 ;
"RTN","PXRMEUT1",98,0)
 ;=================================================
"RTN","PXRMEUT1",99,0)
REM(IEN,FINDPA,PXRMFVPL,NL,OUTPUT) ;
"RTN","PXRMEUT1",100,0)
 N DEFARR
"RTN","PXRMEUT1",101,0)
 D DEF^PXRMLDR(IEN,.DEFARR)
"RTN","PXRMEUT1",102,0)
 S NL=NL+1,OUTPUT(NL)=" REMINDER DEFINITION "_$P(DEFARR(0),U,1)
"RTN","PXRMEUT1",103,0)
 D FMULPRT(.DEFARR,.FINDPA,.PXRMFVPL,.NL,.OUTPUT)
"RTN","PXRMEUT1",104,0)
 Q
"RTN","PXRMEUT1",105,0)
 ;
"RTN","PXRMEUT1",106,0)
 ;=================================================
"RTN","PXRMEUT1",107,0)
TERM(IEN,FINDPA,PXRMFVPL,NL,OUTPUT) ;
"RTN","PXRMEUT1",108,0)
 N TERMARR
"RTN","PXRMEUT1",109,0)
 D TERM^PXRMLDR(IEN,.TERMARR)
"RTN","PXRMEUT1",110,0)
 S NL=NL+1,OUTPUT(NL)=" TERM "_$P(TERMARR(0),U,1)
"RTN","PXRMEUT1",111,0)
 D FMULPRT(.TERMARR,.FINDPA,.PXRMFVPL,.NL,.OUTPUT)
"RTN","PXRMEUT1",112,0)
 Q
"RTN","PXRMEUT1",113,0)
 ;
"RTN","PXRMEXIU")
0^45^B67491313
"RTN","PXRMEXIU",1,0)
PXRMEXIU ; SLC/PKR/PJH - Utilities for installing repository entries. ;06/23/2005
"RTN","PXRMEXIU",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEXIU",3,0)
 ;===============================================
"RTN","PXRMEXIU",4,0)
DEF(FDA,NAMECHG) ;Check the reminder definition to make sure the related
"RTN","PXRMEXIU",5,0)
 ;reminder exists and all the findings exist.
"RTN","PXRMEXIU",6,0)
 N ABBR,ALIST,IEN,IENS,FILENUM,FINDING,LRD,OFINDING,PT01
"RTN","PXRMEXIU",7,0)
 N RRG,SPONSOR,TEXT,VERSN
"RTN","PXRMEXIU",8,0)
 S IENS=$O(FDA(811.9,""))
"RTN","PXRMEXIU",9,0)
 ;
"RTN","PXRMEXIU",10,0)
 ;Related reminder guideline field 1.4.
"RTN","PXRMEXIU",11,0)
 I $D(FDA(811.9,IENS,1.4)) D
"RTN","PXRMEXIU",12,0)
 . S RRG=FDA(811.9,IENS,1.4)
"RTN","PXRMEXIU",13,0)
 . S IEN=$$EXISTS^PXRMEXIU(811.9,RRG)
"RTN","PXRMEXIU",14,0)
 . I IEN=0 D
"RTN","PXRMEXIU",15,0)
 ..;Get replacement.
"RTN","PXRMEXIU",16,0)
 .. N DIC,X,Y
"RTN","PXRMEXIU",17,0)
 .. S TEXT(1)=" "
"RTN","PXRMEXIU",18,0)
 .. S TEXT(2)="The Related Reminder Guideline does not exist on your system!"
"RTN","PXRMEXIU",19,0)
 .. S TEXT(3)="It is "_RRG_" input a replacement or ^ to leave it empty."
"RTN","PXRMEXIU",20,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIU",21,0)
 ..;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",22,0)
 .. I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",23,0)
 .. S DIC=811.9,DIC(0)="AEMQ"
"RTN","PXRMEXIU",24,0)
 .. D ^DIC
"RTN","PXRMEXIU",25,0)
 .. I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",26,0)
 .. I Y=-1 K FDA(811.9,IENS,1.4)
"RTN","PXRMEXIU",27,0)
 .. E  S FDA(811.9,IENS,1.4)=$P(Y,U,2)
"RTN","PXRMEXIU",28,0)
 ;
"RTN","PXRMEXIU",29,0)
 ;Sponsor field 101.
"RTN","PXRMEXIU",30,0)
 I $D(FDA(811.9,IENS,101)) D
"RTN","PXRMEXIU",31,0)
 . S SPONSOR=FDA(811.9,IENS,101)
"RTN","PXRMEXIU",32,0)
 . S IEN=$$FIND1^DIC(811.6,"","",SPONSOR)
"RTN","PXRMEXIU",33,0)
 . I IEN=0 D
"RTN","PXRMEXIU",34,0)
 ..;Get replacement.
"RTN","PXRMEXIU",35,0)
 .. N DIC,X,Y
"RTN","PXRMEXIU",36,0)
 .. S TEXT(1)=" "
"RTN","PXRMEXIU",37,0)
 .. S TEXT(2)="The Sponsor does not exist on your system!"
"RTN","PXRMEXIU",38,0)
 .. S TEXT(3)="It is "_SPONSOR_" input a replacement or ^ to leave it empty."
"RTN","PXRMEXIU",39,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIU",40,0)
 ..;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",41,0)
 .. I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",42,0)
 .. S DIC=811.6,DIC(0)="AEMQ"
"RTN","PXRMEXIU",43,0)
 .. D ^DIC
"RTN","PXRMEXIU",44,0)
 .. I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",45,0)
 .. I Y=-1 K FDA(811.9,IENS,101)
"RTN","PXRMEXIU",46,0)
 .. E  S FDA(811.9,IENS,101)=$P(Y,U,2)
"RTN","PXRMEXIU",47,0)
 ;
"RTN","PXRMEXIU",48,0)
 ;Linked reminder dialog field 51.
"RTN","PXRMEXIU",49,0)
 S LRD=+$G(FDA(811.9,IENS,51))
"RTN","PXRMEXIU",50,0)
 S IEN=$$EXISTS^PXRMEXIU(801.41,LRD)
"RTN","PXRMEXIU",51,0)
 I IEN=0 K FDA(811.9,IENS,51)
"RTN","PXRMEXIU",52,0)
 ;
"RTN","PXRMEXIU",53,0)
 ;Search the finding multiple for replacements and missing findings.
"RTN","PXRMEXIU",54,0)
 D BLDALIST^PXRMVPTR(811.902,.01,.ALIST)
"RTN","PXRMEXIU",55,0)
 S IENS=""
"RTN","PXRMEXIU",56,0)
 F  S IENS=$O(FDA(811.902,IENS)) Q:IENS=""  D
"RTN","PXRMEXIU",57,0)
 . S (FINDING,OFINDING)=FDA(811.902,IENS,.01)
"RTN","PXRMEXIU",58,0)
 . S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXIU",59,0)
 . S PT01=$P(FINDING,".",2)
"RTN","PXRMEXIU",60,0)
 . S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",61,0)
 . I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIU",62,0)
 .. S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIU",63,0)
 .. S FDA(811.902,IENS,.01)=FINDING
"RTN","PXRMEXIU",64,0)
 . S IEN=+$$VFIND1(FINDING,.ALIST)
"RTN","PXRMEXIU",65,0)
 . I IEN>0 S FDA(811.902,IENS,.01)=ABBR_".`"_IEN
"RTN","PXRMEXIU",66,0)
 . I IEN=0 D
"RTN","PXRMEXIU",67,0)
 ..;Get replacement
"RTN","PXRMEXIU",68,0)
 .. N DIC,DUOUT,TEXT,X,Y
"RTN","PXRMEXIU",69,0)
 .. S TEXT="Finding "_FINDING_" does not exist; input a replacement or ^ to quit the install."
"RTN","PXRMEXIU",70,0)
 .. W !,TEXT
"RTN","PXRMEXIU",71,0)
 .. S DIC=FILENUM
"RTN","PXRMEXIU",72,0)
 .. I DIC="60" S DIC("S")="I $$LABPANEL^PXRMEXIU(Y)"
"RTN","PXRMEXIU",73,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXIU",74,0)
 .. S Y=-1
"RTN","PXRMEXIU",75,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXIU",76,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",77,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",78,0)
 ... D ^DIC
"RTN","PXRMEXIU",79,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",80,0)
 ... I $D(DUOUT) S Y="" K FDA
"RTN","PXRMEXIU",81,0)
 .. I Y="" Q
"RTN","PXRMEXIU",82,0)
 .. S FINDING=ABBR_"."_$P(Y,U,2),FDA(811.902,IENS,.01)=FINDING
"RTN","PXRMEXIU",83,0)
 .;Save the finding information for the history.
"RTN","PXRMEXIU",84,0)
 . S ^TMP("PXRMEXIA",$J,"DEFF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXIU",85,0)
 .;Save changes to Orderable items for dialog
"RTN","PXRMEXIU",86,0)
 . I FILENUM=101.43,OFINDING'=FINDING
"RTN","PXRMEXIU",87,0)
 . S NAMECHG(FILENUM,$P(OFINDING,".",2))=$P(FINDING,".",2)
"RTN","PXRMEXIU",88,0)
 S VERSN=$$GETTAGV^PXRMEXU3(^PXD(811.8,PXRMRIEN,100,3,0),"<PACKAGE_VERSION>")
"RTN","PXRMEXIU",89,0)
 I VERSN=1.5 D CEFD^PXRMDATE(.FDA)
"RTN","PXRMEXIU",90,0)
 Q
"RTN","PXRMEXIU",91,0)
 ;
"RTN","PXRMEXIU",92,0)
 ;===============================================
"RTN","PXRMEXIU",93,0)
EXISTS(FILENUM,NAME,FLAG) ;Check for existence of an entry with the
"RTN","PXRMEXIU",94,0)
 ;same name. Return 0 for null name
"RTN","PXRMEXIU",95,0)
 I NAME="" Q 0
"RTN","PXRMEXIU",96,0)
 ;Return the ien if it does, 0 otherwise.
"RTN","PXRMEXIU",97,0)
 N IEN
"RTN","PXRMEXIU",98,0)
 I FILENUM=0 S IEN=$$EXISTS^PXRMEXCF(NAME) Q
"RTN","PXRMEXIU",99,0)
 N FLAGS,RESULT
"RTN","PXRMEXIU",100,0)
 S RESULT=NAME
"RTN","PXRMEXIU",101,0)
 ;Special lookup for files 80 and 80.1, they do not have a standard "B"
"RTN","PXRMEXIU",102,0)
 ;cross-reference.
"RTN","PXRMEXIU",103,0)
 I (FILENUM=80)!(FILENUM=80.1) D
"RTN","PXRMEXIU",104,0)
 .;Name may or may not have the necessary space appended, make sure
"RTN","PXRMEXIU",105,0)
 .;it does.
"RTN","PXRMEXIU",106,0)
 . S RESULT=$S($E(NAME,$L(NAME))'=" ":NAME_" ",1:NAME)
"RTN","PXRMEXIU",107,0)
 . S FLAGS="MX"
"RTN","PXRMEXIU",108,0)
 E  S FLAGS="BX"
"RTN","PXRMEXIU",109,0)
 I FILENUM=811.6 S FLAGS=FLAGS_"U"
"RTN","PXRMEXIU",110,0)
 ;File 8927.1 only allows upper case .01s.
"RTN","PXRMEXIU",111,0)
 I FILENUM=8927.1 S RESULT=$$UP^XLFSTR(NAME)
"RTN","PXRMEXIU",112,0)
 S IEN=$$FIND1^DIC(FILENUM,"",FLAGS,RESULT)
"RTN","PXRMEXIU",113,0)
 I +IEN>0 Q IEN
"RTN","PXRMEXIU",114,0)
 ;If IEN is null then there was an error try FIND^DIC.
"RTN","PXRMEXIU",115,0)
 N FILENAME,LIST,MSG,NFOUND,TEXT
"RTN","PXRMEXIU",116,0)
 D FIND^DIC(FILENUM,"","",FLAGS,NAME,"","","","","LIST","MSG")
"RTN","PXRMEXIU",117,0)
 S NFOUND=+$P(LIST("DILIST",0),U,1)
"RTN","PXRMEXIU",118,0)
 I NFOUND=0 Q 0
"RTN","PXRMEXIU",119,0)
 I NFOUND=1 Q LIST("DILIST",2,1)
"RTN","PXRMEXIU",120,0)
 ;Multiple entries with the same name found.
"RTN","PXRMEXIU",121,0)
 S FILENAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMEXIU",122,0)
 S TEXT(1)="Warning there are "_NFOUND_" "_FILENAME_" entries with the name "_NAME_"!"
"RTN","PXRMEXIU",123,0)
 S TEXT(2)="If this is used as a finding, and it is not resolved by FileMan during"
"RTN","PXRMEXIU",124,0)
 S TEXT(3)="installation, any component using this finding will not install."
"RTN","PXRMEXIU",125,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMEXIU",126,0)
 I $G(FLAG)="W" H 3 Q LIST("DILIST",2,1)
"RTN","PXRMEXIU",127,0)
 I NFOUND>1 S IEN=$$GETIEN^PXRMEXU0(NFOUND,.LIST)
"RTN","PXRMEXIU",128,0)
 Q IEN
"RTN","PXRMEXIU",129,0)
 ;
"RTN","PXRMEXIU",130,0)
 ;===============================================
"RTN","PXRMEXIU",131,0)
GETACT(CHOICES,DIR) ;Get the action
"RTN","PXRMEXIU",132,0)
 ;If CHOICES is empty the only action is skip.
"RTN","PXRMEXIU",133,0)
 I CHOICES="" Q "S"
"RTN","PXRMEXIU",134,0)
 N DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMEXIU",135,0)
 S DIR(0)="S"_U
"RTN","PXRMEXIU",136,0)
 I CHOICES["C" S DIR(0)=DIR(0)_"C:Create a new entry by copying to a new name"
"RTN","PXRMEXIU",137,0)
 I CHOICES["D" S DIR(0)=DIR(0)_";D:Delete (from the reminder/dialog)"
"RTN","PXRMEXIU",138,0)
 I CHOICES["I" S DIR(0)=DIR(0)_";I:Install"
"RTN","PXRMEXIU",139,0)
 I CHOICES["M" S DIR(0)=DIR(0)_";M:Merge findings"
"RTN","PXRMEXIU",140,0)
 I CHOICES["O" S DIR(0)=DIR(0)_";O:Overwrite the current entry"
"RTN","PXRMEXIU",141,0)
 I CHOICES["P" S DIR(0)=DIR(0)_";P:Replace (in the reminder/dialog) with an existing entry"
"RTN","PXRMEXIU",142,0)
 I CHOICES["Q" S DIR(0)=DIR(0)_";Q:Quit the install"
"RTN","PXRMEXIU",143,0)
 I CHOICES["R" S DIR(0)=DIR(0)_";R:Restart"
"RTN","PXRMEXIU",144,0)
 I CHOICES["S" S DIR(0)=DIR(0)_";S:Skip, do not install this entry"
"RTN","PXRMEXIU",145,0)
 ;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",146,0)
 I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",147,0)
 D ^DIR
"RTN","PXRMEXIU",148,0)
 I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",149,0)
 I $D(DIROUT)!$D(DIRUT) S Y="S"
"RTN","PXRMEXIU",150,0)
 I $D(DTOUT)!($D(DUOUT)) S Y="S"
"RTN","PXRMEXIU",151,0)
 Q Y
"RTN","PXRMEXIU",152,0)
 ;
"RTN","PXRMEXIU",153,0)
 ;===============================================
"RTN","PXRMEXIU",154,0)
GETNAME(MIN,MAX) ;Get a name to use.
"RTN","PXRMEXIU",155,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMEXIU",156,0)
 S DIR(0)="FAOU"_U_MIN_":"_MAX
"RTN","PXRMEXIU",157,0)
 S DIR("A")="Input the new name: "
"RTN","PXRMEXIU",158,0)
 D ^DIR
"RTN","PXRMEXIU",159,0)
 I $D(DIROUT)!$D(DIRUT) Q ""
"RTN","PXRMEXIU",160,0)
 I $D(DTOUT)!$D(DUOUT) Q ""
"RTN","PXRMEXIU",161,0)
 Q Y
"RTN","PXRMEXIU",162,0)
 ;
"RTN","PXRMEXIU",163,0)
 ;===============================================
"RTN","PXRMEXIU",164,0)
GETUNAME(ATTR) ;Get a unique name to use, ATTR holds the attributes.
"RTN","PXRMEXIU",165,0)
 N IEN,NEWPT01,TEXT
"RTN","PXRMEXIU",166,0)
GNEW S NEWPT01=$$GETNAME(ATTR("MIN FIELD LENGTH"),ATTR("FIELD LENGTH"))
"RTN","PXRMEXIU",167,0)
 S IEN=+$$EXISTS(ATTR("FILE NUMBER"),NEWPT01)
"RTN","PXRMEXIU",168,0)
 I IEN>0 D  G GNEW
"RTN","PXRMEXIU",169,0)
 . S TEXT=ATTR("FILE NAME")_" entry "_NEWPT01_" already exists, what do you want to do?"
"RTN","PXRMEXIU",170,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMEXIU",171,0)
 E  S ATTR("NAME")=NEWPT01
"RTN","PXRMEXIU",172,0)
 Q NEWPT01
"RTN","PXRMEXIU",173,0)
 ;
"RTN","PXRMEXIU",174,0)
 ;===============================================
"RTN","PXRMEXIU",175,0)
HF(FDA,NAMECHG) ;Check the health factor to make sure a category does not
"RTN","PXRMEXIU",176,0)
 ;have a category.
"RTN","PXRMEXIU",177,0)
 N IENS
"RTN","PXRMEXIU",178,0)
 S IENS=$O(FDA(9999999.64,""))
"RTN","PXRMEXIU",179,0)
 I IENS="" Q
"RTN","PXRMEXIU",180,0)
 I FDA(9999999.64,IENS,.1)="CATEGORY" K FDA(9999999.64,IENS,.03)
"RTN","PXRMEXIU",181,0)
 Q
"RTN","PXRMEXIU",182,0)
 ;
"RTN","PXRMEXIU",183,0)
 ;===============================================
"RTN","PXRMEXIU",184,0)
LABPANEL(IEN) ;
"RTN","PXRMEXIU",185,0)
 N NODE
"RTN","PXRMEXIU",186,0)
 S NODE=^LAB(60,IEN,0)
"RTN","PXRMEXIU",187,0)
 I $P(NODE,U,4)'["CH" Q 1
"RTN","PXRMEXIU",188,0)
 I $P(NODE,U,5)="" Q 0
"RTN","PXRMEXIU",189,0)
 Q 1
"RTN","PXRMEXIU",190,0)
 ;
"RTN","PXRMEXIU",191,0)
 ;===============================================
"RTN","PXRMEXIU",192,0)
REXISTS(NAME,DATEP) ;See if this Exchange File entry already exists.
"RTN","PXRMEXIU",193,0)
 N IEN,LUVALUE
"RTN","PXRMEXIU",194,0)
 S LUVALUE(1)=NAME
"RTN","PXRMEXIU",195,0)
 S LUVALUE(2)=DATEP
"RTN","PXRMEXIU",196,0)
 S IEN=+$$FIND1^DIC(811.8,"","KU",.LUVALUE)
"RTN","PXRMEXIU",197,0)
 Q IEN
"RTN","PXRMEXIU",198,0)
 ;
"RTN","PXRMEXIU",199,0)
 ;===============================================
"RTN","PXRMEXIU",200,0)
SAME(ATTR,TA,NAME) ;Check existing entry and entry in packed reminder
"RTN","PXRMEXIU",201,0)
 ;definition to see if they are identical.
"RTN","PXRMEXIU",202,0)
 ;Present version only works for computed finding routines, other
"RTN","PXRMEXIU",203,0)
 ;types of entries can be added later.
"RTN","PXRMEXIU",204,0)
 N SAME
"RTN","PXRMEXIU",205,0)
 I ATTR("FILE NAME")="COMPUTED FINDING ROUTINE" S SAME=$$SAME^PXRMEXCF(.ATTR,.TA,NAME)
"RTN","PXRMEXIU",206,0)
 E  S SAME=1
"RTN","PXRMEXIU",207,0)
 Q SAME
"RTN","PXRMEXIU",208,0)
 ;
"RTN","PXRMEXIU",209,0)
 ;===============================================
"RTN","PXRMEXIU",210,0)
TERM(FDA,NAMECHG) ;Check the reminder term to make sure all the
"RTN","PXRMEXIU",211,0)
 ;findings exist.
"RTN","PXRMEXIU",212,0)
 N ABBR,ALIST,IEN,IENS,FILENUM,FINDING,OFINDING,PT01
"RTN","PXRMEXIU",213,0)
 ;Search the finding multiple for replacements and missing findings.
"RTN","PXRMEXIU",214,0)
 D BLDALIST^PXRMVPTR(811.52,.01,.ALIST)
"RTN","PXRMEXIU",215,0)
 S IENS=""
"RTN","PXRMEXIU",216,0)
 F  S IENS=$O(FDA(811.52,IENS)) Q:IENS=""  D
"RTN","PXRMEXIU",217,0)
 . S (FINDING,OFINDING)=FDA(811.52,IENS,.01)
"RTN","PXRMEXIU",218,0)
 . S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXIU",219,0)
 . S PT01=$P(FINDING,".",2)
"RTN","PXRMEXIU",220,0)
 . S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",221,0)
 . I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIU",222,0)
 .. S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIU",223,0)
 .. S FDA(811.52,IENS,.01)=FINDING
"RTN","PXRMEXIU",224,0)
 . S IEN=+$$VFIND1(FINDING,.ALIST)
"RTN","PXRMEXIU",225,0)
 . I IEN>0 S FDA(811.52,IENS,.01)=ABBR_".`"_IEN
"RTN","PXRMEXIU",226,0)
 . I IEN=0 D
"RTN","PXRMEXIU",227,0)
 ..;Get replacement
"RTN","PXRMEXIU",228,0)
 .. N DIC,DUOUT,TEXT,X,Y
"RTN","PXRMEXIU",229,0)
 .. S TEXT="Finding "_FINDING_" does not exist; input a replacement or ^ to quit the install."
"RTN","PXRMEXIU",230,0)
 .. D BMES^XPDUTL(TEXT)
"RTN","PXRMEXIU",231,0)
 .. S DIC=FILENUM
"RTN","PXRMEXIU",232,0)
 .. I DIC="60" S DIC("S")="I $$LABPANEL^PXRMEXIU(Y)"
"RTN","PXRMEXIU",233,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXIU",234,0)
 .. S Y=-1
"RTN","PXRMEXIU",235,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXIU",236,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",237,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",238,0)
 ... D ^DIC
"RTN","PXRMEXIU",239,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",240,0)
 ... I $D(DUOUT) D
"RTN","PXRMEXIU",241,0)
 .... S Y=""
"RTN","PXRMEXIU",242,0)
 .... K FDA
"RTN","PXRMEXIU",243,0)
 .. I Y="" K FDA(811.52,IENS)
"RTN","PXRMEXIU",244,0)
 .. E  D
"RTN","PXRMEXIU",245,0)
 ... S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXIU",246,0)
 ... S FDA(811.52,IENS,.01)=FINDING
"RTN","PXRMEXIU",247,0)
 .;Save the finding information for the history.
"RTN","PXRMEXIU",248,0)
 . S ^TMP("PXRMEXIA",$J,"TRMF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXIU",249,0)
 Q
"RTN","PXRMEXIU",250,0)
 ;
"RTN","PXRMEXIU",251,0)
 ;===============================================
"RTN","PXRMEXIU",252,0)
VFIND1(VPTR,ALIST) ;Given a variable pointer of the form ABBR.NAME
"RTN","PXRMEXIU",253,0)
 ;and ALIST which contains the link between abbreviations and files
"RTN","PXRMEXIU",254,0)
 ;return the IEN if it exists and 0 if no match if found.
"RTN","PXRMEXIU",255,0)
 N ABBR,IEN,FILENUM,PT01,RESULT
"RTN","PXRMEXIU",256,0)
 S IEN=0
"RTN","PXRMEXIU",257,0)
 S ABBR=$P(VPTR,".",1)
"RTN","PXRMEXIU",258,0)
 S PT01=$P(VPTR,".",2,99)
"RTN","PXRMEXIU",259,0)
 S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",260,0)
 S IEN=$$EXISTS(FILENUM,PT01)
"RTN","PXRMEXIU",261,0)
 Q IEN
"RTN","PXRMEXIU",262,0)
 ;
"RTN","PXRMEXLC")
0^6^B45607046
"RTN","PXRMEXLC",1,0)
PXRMEXLC ; SLC/PKR/PJH - Routines to display repository entry components. ;06/22/2004
"RTN","PXRMEXLC",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEXLC",3,0)
 ;======================================================
"RTN","PXRMEXLC",4,0)
BLDLIST(FORCE) ;Build a list of all repository entries.
"RTN","PXRMEXLC",5,0)
 ;If FORCE is true then force rebuilding of the list.
"RTN","PXRMEXLC",6,0)
 I FORCE K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLC",7,0)
 I $D(^TMP("PXRMEXLR",$J,"VALMCNT")) S VALMCNT=^TMP("PXRMEXLR",$J,"VALMCNT")
"RTN","PXRMEXLC",8,0)
 E  D
"RTN","PXRMEXLC",9,0)
 . N IEN,RELIST
"RTN","PXRMEXLC",10,0)
 . D RE^PXRMLIST(.RELIST,.IEN)
"RTN","PXRMEXLC",11,0)
 . M ^TMP("PXRMEXLR",$J)=RELIST
"RTN","PXRMEXLC",12,0)
 . S VALMCNT=RELIST("VALMCNT")
"RTN","PXRMEXLC",13,0)
 . F IND=1:1:VALMCNT S ^TMP("PXRMEXLR",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMEXLC",14,0)
 Q
"RTN","PXRMEXLC",15,0)
 ;
"RTN","PXRMEXLC",16,0)
 ;======================================================
"RTN","PXRMEXLC",17,0)
CDISP(IEN) ;Format component list for display.
"RTN","PXRMEXLC",18,0)
 N CAT,CMPNT,END,EOKTI,EXISTS,FILENUM,FOKTI,IND,INDEX,JND,JNDS,KND
"RTN","PXRMEXLC",19,0)
 N MSG,NCMPNT,NDLINE,NDSEL,NITEMS,NLINE,NSEL,PT01,START,TEMP,TEMP0,TYPE
"RTN","PXRMEXLC",20,0)
 K ^TMP("PXRMEXLC",$J),^TMP("PXRMEXLD",$J)
"RTN","PXRMEXLC",21,0)
 S (NDLINE,NLINE)=0
"RTN","PXRMEXLC",22,0)
 S (NDSEL,NSEL)=1
"RTN","PXRMEXLC",23,0)
 ;Load the description.
"RTN","PXRMEXLC",24,0)
 F IND=1:1:$P(^PXD(811.8,IEN,110,0),U,4) D
"RTN","PXRMEXLC",25,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",26,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=^PXD(811.8,IEN,110,IND,0)
"RTN","PXRMEXLC",27,0)
 . S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",28,0)
 S NLINE=NLINE+1
"RTN","PXRMEXLC",29,0)
 S ^TMP("PXRMEXLC",$J,NLINE,0)=" "
"RTN","PXRMEXLC",30,0)
 S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",31,0)
 S NCMPNT=^PXD(811.8,IEN,119)
"RTN","PXRMEXLC",32,0)
 ;Load the text for display.
"RTN","PXRMEXLC",33,0)
 F IND=1:1:NCMPNT D
"RTN","PXRMEXLC",34,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",35,0)
 . S TEMP=^PXD(811.8,IEN,120,IND,0)
"RTN","PXRMEXLC",36,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=$P(TEMP,U,1)
"RTN","PXRMEXLC",37,0)
 . S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",38,0)
 . S FILENUM=$P(TEMP,U,2)
"RTN","PXRMEXLC",39,0)
 . S FOKTI=$$FOKTI^PXRMEXFI(FILENUM)
"RTN","PXRMEXLC",40,0)
 . S NITEMS=$P(TEMP,U,3)
"RTN","PXRMEXLC",41,0)
 . I $P(TEMP,U,1)="REMINDER DIALOG" D
"RTN","PXRMEXLC",42,0)
 ..;Save details of the dialog in ^TMP("PXRMEXTMP")
"RTN","PXRMEXLC",43,0)
 .. S JNDS=NITEMS D DBUILD^PXRMEXLB(IND,NITEMS,FILENUM)
"RTN","PXRMEXLC",44,0)
 . E  S JNDS=1
"RTN","PXRMEXLC",45,0)
 . F JND=JNDS:1:NITEMS D
"RTN","PXRMEXLC",46,0)
 .. S TEMP=^PXD(811.8,IEN,120,IND,1,JND,0)
"RTN","PXRMEXLC",47,0)
 .. S EOKTI=FOKTI
"RTN","PXRMEXLC",48,0)
 .. S PT01=$P(TEMP,U,1)
"RTN","PXRMEXLC",49,0)
 .. S EXISTS=$S(FILENUM=0:$$EXISTS^PXRMEXCF(PT01),1:$$EXISTS^PXRMEXIU(FILENUM,PT01,"W"))
"RTN","PXRMEXLC",50,0)
 ..;If this is an education topic and it starts with VA- it
"RTN","PXRMEXLC",51,0)
 ..;cannot be transported because of PCE's screen.
"RTN","PXRMEXLC",52,0)
 .. ;I (FILENUM=9999999.09)&(PT01["VA-") S EOKTI=0
"RTN","PXRMEXLC",53,0)
 ..;If this is a health factor see if it is a category.
"RTN","PXRMEXLC",54,0)
 .. S CAT=""
"RTN","PXRMEXLC",55,0)
 .. I (FILENUM=9999999.64) D
"RTN","PXRMEXLC",56,0)
 ... S TYPE=""
"RTN","PXRMEXLC",57,0)
 ... S START=$P(TEMP,U,2)
"RTN","PXRMEXLC",58,0)
 ... S END=$P(TEMP,U,3)
"RTN","PXRMEXLC",59,0)
 ... F KND=START:1:END D
"RTN","PXRMEXLC",60,0)
 .... S TEMP0=$P(^PXD(811.8,IEN,100,KND,0),";",3)
"RTN","PXRMEXLC",61,0)
 .... I $P(TEMP0,"~",1)=.1 S TYPE=$P(TEMP0,"~",2)
"RTN","PXRMEXLC",62,0)
 ... I TYPE="CATEGORY" S CAT="X"
"RTN","PXRMEXLC",63,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",64,0)
 .. I IND=1,JND=1 S NSEL=1,INDEX=$S(EOKTI:NSEL,1:"")
"RTN","PXRMEXLC",65,0)
 .. E  D
"RTN","PXRMEXLC",66,0)
 ...;If entries in this file are ok to install add them to the
"RTN","PXRMEXLC",67,0)
 ...;selectable list. Make sure the first selectable entry exists
"RTN","PXRMEXLC",68,0)
 ...;before incrementing NSEL.
"RTN","PXRMEXLC",69,0)
 ... I EOKTI S NSEL=$S($D(^TMP("PXRMEXLC",$J,"SEL",1)):NSEL+1,1:NSEL),INDEX=NSEL
"RTN","PXRMEXLC",70,0)
 ... E  S INDEX=""
"RTN","PXRMEXLC",71,0)
 .. S ^TMP("PXRMEXLC",$J,NLINE,0)=$$FMTDATA(INDEX,PT01,CAT,EXISTS)
"RTN","PXRMEXLC",72,0)
 .. S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",73,0)
 ..;Store the file number, node 120 indexes and the ien if it exists.
"RTN","PXRMEXLC",74,0)
 .. I INDEX=NSEL S ^TMP("PXRMEXLC",$J,"SEL",NSEL)=FILENUM_U_IND_U_JND_U_EXISTS
"RTN","PXRMEXLC",75,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",76,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=""
"RTN","PXRMEXLC",77,0)
 . S ^TMP("PXRMEXLC",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",78,0)
 Q
"RTN","PXRMEXLC",79,0)
 ;
"RTN","PXRMEXLC",80,0)
 ;======================================================
"RTN","PXRMEXLC",81,0)
DDISP(IND,NITEMS,FILENUM) ;Setup dialog display list.
"RTN","PXRMEXLC",82,0)
 N JND,NLINE,NSEL,TEMP
"RTN","PXRMEXLC",83,0)
 S (NLINE,NSEL)=0
"RTN","PXRMEXLC",84,0)
 F JND=1:1:NITEMS D
"RTN","PXRMEXLC",85,0)
 . S TEMP=^PXD(811.8,IEN,120,IND,1,JND,0)
"RTN","PXRMEXLC",86,0)
 . S PT01=$P(TEMP,U,1)
"RTN","PXRMEXLC",87,0)
 . S EXISTS=$$EXISTS^PXRMEXIU(FILENUM,PT01,"W")
"RTN","PXRMEXLC",88,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",89,0)
 . S NSEL=NSEL+1
"RTN","PXRMEXLC",90,0)
 . S ^TMP("PXRMEXLD",$J,NLINE,0)=$$FMTDATA(NSEL,PT01,CAT,EXISTS)
"RTN","PXRMEXLC",91,0)
 . S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",92,0)
 .;Store the file number, start and stop line in the repository.
"RTN","PXRMEXLC",93,0)
 . S ^TMP("PXRMEXLD",$J,"SEL",NSEL)=FILENUM_U_$P(TEMP,U,2,3)
"RTN","PXRMEXLC",94,0)
 Q
"RTN","PXRMEXLC",95,0)
 ;
"RTN","PXRMEXLC",96,0)
 ;======================================================
"RTN","PXRMEXLC",97,0)
FMTDATA(NSEL,PT01,CAT,EXISTS) ;Format items for display.
"RTN","PXRMEXLC",98,0)
 N NSTI,TEMP
"RTN","PXRMEXLC",99,0)
 S TEMP=$$RJ^XLFSTR(NSEL,4," ")_"  "_$E(PT01,1,54)
"RTN","PXRMEXLC",100,0)
 I CAT="X" D
"RTN","PXRMEXLC",101,0)
 . S NSTI=63-$L(TEMP)
"RTN","PXRMEXLC",102,0)
 . S TEMP=TEMP_$$INSCHR(NSTI," ")_"X"
"RTN","PXRMEXLC",103,0)
 I EXISTS D
"RTN","PXRMEXLC",104,0)
 . S NSTI=75-$L(TEMP)
"RTN","PXRMEXLC",105,0)
 . S TEMP=TEMP_$$INSCHR(NSTI," ")_"X"
"RTN","PXRMEXLC",106,0)
 Q TEMP
"RTN","PXRMEXLC",107,0)
 ;
"RTN","PXRMEXLC",108,0)
 ;======================================================
"RTN","PXRMEXLC",109,0)
HISTLIST(LIST,VALMCNT) ;Build a list of install histories in
"RTN","PXRMEXLC",110,0)
 ;^TMP("PXRMEXIH",$J).
"RTN","PXRMEXLC",111,0)
 N DATE,DC,ENTRY,IHIND,IND,INDONE,NLINE,NSEL,RIEN,SOURCE,TEMP,USER
"RTN","PXRMEXLC",112,0)
 K ^TMP("PXRMEXIH",$J)
"RTN","PXRMEXLC",113,0)
 S (NLINE,NSEL)=0
"RTN","PXRMEXLC",114,0)
 S IND=""
"RTN","PXRMEXLC",115,0)
 F  S IND=$O(LIST(IND)) Q:IND=""  D
"RTN","PXRMEXLC",116,0)
 . S RIEN=^TMP("PXRMEXLR",$J,"IDX",IND,IND)
"RTN","PXRMEXLC",117,0)
 . I $D(^PXD(811.8,RIEN,130)) S INDONE=1
"RTN","PXRMEXLC",118,0)
 . E  S INDONE=0
"RTN","PXRMEXLC",119,0)
 . S TEMP=^PXD(811.8,RIEN,0)
"RTN","PXRMEXLC",120,0)
 . S ENTRY=$P(TEMP,U,1)
"RTN","PXRMEXLC",121,0)
 . S SOURCE=$P(TEMP,U,2)
"RTN","PXRMEXLC",122,0)
 . S DATE=$P(TEMP,U,3)
"RTN","PXRMEXLC",123,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",124,0)
 . I INDONE S NSEL=NSEL+1
"RTN","PXRMEXLC",125,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)=$$FRE^PXRMLIST(" ",ENTRY,SOURCE,DATE)
"RTN","PXRMEXLC",126,0)
 . I INDONE S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",127,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",128,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)="     Installation Date       Installed By"
"RTN","PXRMEXLC",129,0)
 . I INDONE S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",130,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",131,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)="     -----------------       ------------"
"RTN","PXRMEXLC",132,0)
 . I INDONE S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",133,0)
 . I 'INDONE D  Q
"RTN","PXRMEXLC",134,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",135,0)
 .. S ^TMP("PXRMEXIH",$J,NLINE,0)="      none"
"RTN","PXRMEXLC",136,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",137,0)
 .. S ^TMP("PXRMEXIH",$J,NLINE,0)=" "
"RTN","PXRMEXLC",138,0)
 . S DATE="",DC=0
"RTN","PXRMEXLC",139,0)
 . F  S DATE=$O(^PXD(811.8,RIEN,130,"B",DATE)) Q:DATE=""  D
"RTN","PXRMEXLC",140,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXLC",141,0)
 .. S DC=DC+1
"RTN","PXRMEXLC",142,0)
 .. I DC>1 S NSEL=NSEL+1
"RTN","PXRMEXLC",143,0)
 .. S IHIND=$O(^PXD(811.8,RIEN,130,"B",DATE,""))
"RTN","PXRMEXLC",144,0)
 .. S TEMP=^PXD(811.8,RIEN,130,IHIND,0)
"RTN","PXRMEXLC",145,0)
 .. S ^TMP("PXRMEXIH",$J,NLINE,0)=$$RJ^XLFSTR(NSEL,4," ")_" "_$$FMTE^XLFDT($P(TEMP,U,1),"5Z")_"   "_$P(TEMP,U,2)
"RTN","PXRMEXLC",146,0)
 .. S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",147,0)
 .. S ^TMP("PXRMEXIH",$J,"SEL",NSEL)=RIEN_U_IHIND
"RTN","PXRMEXLC",148,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",149,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)=" "
"RTN","PXRMEXLC",150,0)
 . S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",151,0)
 S VALMCNT=NLINE
"RTN","PXRMEXLC",152,0)
 Q
"RTN","PXRMEXLC",153,0)
 ;
"RTN","PXRMEXLC",154,0)
 ;======================================================
"RTN","PXRMEXLC",155,0)
INSCHR(NUM,CHR) ;Return a string of NUM characters (CHR).
"RTN","PXRMEXLC",156,0)
 N IND,TEMP
"RTN","PXRMEXLC",157,0)
 S TEMP=""
"RTN","PXRMEXLC",158,0)
 I NUM<1 Q TEMP
"RTN","PXRMEXLC",159,0)
 F IND=1:1:NUM S TEMP=TEMP_CHR
"RTN","PXRMEXLC",160,0)
 Q TEMP
"RTN","PXRMEXLC",161,0)
 ;
"RTN","PXRMEXLC",162,0)
 ;======================================================
"RTN","PXRMEXLC",163,0)
DREPL ;
"RTN","PXRMEXLC",164,0)
 N STR,I
"RTN","PXRMEXLC",165,0)
 K PXRMEXOR
"RTN","PXRMEXLC",166,0)
 S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLC",167,0)
 S STR="" F I=1:1:30 S STR=STR_"-"
"RTN","PXRMEXLC",168,0)
 S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J(STR_" REPLACEMENT ITEMS "_STR,79)
"RTN","PXRMEXLC",169,0)
DREPL1 ;
"RTN","PXRMEXLC",170,0)
 M ^TMP($J,"PXRMEXREP")=PXRMEXRP
"RTN","PXRMEXLC",171,0)
 K PXRMEXRP
"RTN","PXRMEXLC",172,0)
 ;S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)="
"RTN","PXRMEXLC",173,0)
 N CNT,DLG,DDATA,DDLG,DEND,DNAM,DREP,DSTRT,IND,JND,LEV,TEMP
"RTN","PXRMEXLC",174,0)
 ;S LEV="" F  S LEV=$O(^TMP($J,"PXRMEXREP",LEV)) Q:LEV=""  D
"RTN","PXRMEXLC",175,0)
 S LEV=0
"RTN","PXRMEXLC",176,0)
 S DLG="" F  S DLG=$O(^TMP($J,"PXRMEXREP",DLG)) Q:DLG=""  D
"RTN","PXRMEXLC",177,0)
 .S DDATA=$G(^TMP("PXRMEXTMP",$J,"DREPL",DLG)) Q:DDATA=""
"RTN","PXRMEXLC",178,0)
 .S DNAM=$P(DDATA,U),DSTRT=$P(DDATA,U,2),DEND=$P(DDATA,U,3) Q:DNAM=""
"RTN","PXRMEXLC",179,0)
 .I $D(PXRMEXOR(DNAM))>0 Q
"RTN","PXRMEXLC",180,0)
 .S PXRMEXOR(DNAM)=""
"RTN","PXRMEXLC",181,0)
 .S IND=$P(DDATA,U,4),JND=$P(DDATA,U,5)
"RTN","PXRMEXLC",182,0)
 .;Check if this component has been replaced
"RTN","PXRMEXLC",183,0)
 .S LEV=LEV+1
"RTN","PXRMEXLC",184,0)
 .S DREP=$G(PXRMNMCH(FILENUM,DNAM)) I DREP=DNAM S DREP=""
"RTN","PXRMEXLC",185,0)
 .;Save line in workfile
"RTN","PXRMEXLC",186,0)
 .S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLC",187,0)
 .S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLC",188,0)
 .D DLINE^PXRMEXLD(DNAM,LEV,"")
"RTN","PXRMEXLC",189,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAM)) D DCMP^PXRMEXLD(DNAM,LEV)
"RTN","PXRMEXLC",190,0)
 K ^TMP($J,"PXRMEXREP")
"RTN","PXRMEXLC",191,0)
 I $D(PXRMEXRP)>0 D DREPL1
"RTN","PXRMEXLC",192,0)
 Q
"RTN","PXRMEXLD")
0^7^B89789485
"RTN","PXRMEXLD",1,0)
PXRMEXLD ;SLC/PJH - Reminder Dialog Exchange Main Routine. ;7/01/2004
"RTN","PXRMEXLD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEXLD",3,0)
 ;
"RTN","PXRMEXLD",4,0)
 ;=====================================================================
"RTN","PXRMEXLD",5,0)
START N PXRMBG,PXRMMODE,VALMBCK,VALMBG,VALMCNT,VALMSG,X,XMZ
"RTN","PXRMEXLD",6,0)
 S X="IORESET"
"RTN","PXRMEXLD",7,0)
 D EN^VALM("PXRM EX LIST DIALOG")
"RTN","PXRMEXLD",8,0)
 ;
"RTN","PXRMEXLD",9,0)
 ;Rebuild Display
"RTN","PXRMEXLD",10,0)
 D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXLD",11,0)
 Q
"RTN","PXRMEXLD",12,0)
 ;
"RTN","PXRMEXLD",13,0)
ENTRY D FIND Q
"RTN","PXRMEXLD",14,0)
 ;
"RTN","PXRMEXLD",15,0)
DETAIL S PXRMMODE=0 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",16,0)
 ;
"RTN","PXRMEXLD",17,0)
 ;Display Findings
"RTN","PXRMEXLD",18,0)
 ;--------------------------
"RTN","PXRMEXLD",19,0)
FIND S PXRMMODE=2 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",20,0)
 ;
"RTN","PXRMEXLD",21,0)
 ;Display Dialog Summary
"RTN","PXRMEXLD",22,0)
 ;----------------------
"RTN","PXRMEXLD",23,0)
SUM S PXRMMODE=3 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",24,0)
 ;
"RTN","PXRMEXLD",25,0)
 ;Display Dialog Usage
"RTN","PXRMEXLD",26,0)
 ;--------------------
"RTN","PXRMEXLD",27,0)
USE S PXRMMODE=4 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",28,0)
 ;
"RTN","PXRMEXLD",29,0)
 ;Display Dialog Text
"RTN","PXRMEXLD",30,0)
 ;-------------------
"RTN","PXRMEXLD",31,0)
TEXT S PXRMMODE=1 D DISP(PXRMMODE) Q
"RTN","PXRMEXLD",32,0)
 ;
"RTN","PXRMEXLD",33,0)
EXIT K ^TMP("PXRMEXLD",$J) Q
"RTN","PXRMEXLD",34,0)
 ;
"RTN","PXRMEXLD",35,0)
PEXIT ;PXRM EXCH DIALOG MENU protocol exit code
"RTN","PXRMEXLD",36,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLD",37,0)
 ;Reset after page up/down etc
"RTN","PXRMEXLD",38,0)
 D XQORM
"RTN","PXRMEXLD",39,0)
 Q
"RTN","PXRMEXLD",40,0)
 ;
"RTN","PXRMEXLD",41,0)
HELP N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG="DLG"
"RTN","PXRMEXLD",42,0)
 D EN^VALM("PXRM EX DIALOG HELP")
"RTN","PXRMEXLD",43,0)
 Q
"RTN","PXRMEXLD",44,0)
 ;
"RTN","PXRMEXLD",45,0)
HDR S VALMHDR(1)="Packed reminder dialog: "
"RTN","PXRMEXLD",46,0)
 S VALMHDR(1)=VALMHDR(1)_$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM"))
"RTN","PXRMEXLD",47,0)
 I $D(^TMP("PXRMEXTMP",$J,"PXRMDNAT")) D
"RTN","PXRMEXLD",48,0)
 .S VALMHDR(1)=VALMHDR(1)_" [NATIONAL DIALOG]"
"RTN","PXRMEXLD",49,0)
 S VALMHDR("TITLE")=VALMHDR(1)
"RTN","PXRMEXLD",50,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLD",51,0)
 Q
"RTN","PXRMEXLD",52,0)
 ;
"RTN","PXRMEXLD",53,0)
 ;Build list manager workfile from ^TMP("PXRMEXTMP" (see ^PXRMEXLB)
"RTN","PXRMEXLD",54,0)
DISP(VIEW) ;
"RTN","PXRMEXLD",55,0)
 N OLEV,ODSEQ
"RTN","PXRMEXLD",56,0)
 K ^TMP("PXRMEXLD",$J)
"RTN","PXRMEXLD",57,0)
 K PXRMEXRP
"RTN","PXRMEXLD",58,0)
 K ^TMP($J,"PXRMEXREP")
"RTN","PXRMEXLD",59,0)
 N DDATA,DDLG,DEND,DREP,DSTRT,IND,JND,NLINE,NSEL
"RTN","PXRMEXLD",60,0)
 S NLINE=0,NSEL=0,VALMBCK="R",VALMCNT=NLINE
"RTN","PXRMEXLD",61,0)
 S DDLG=$G(^TMP("PXRMEXTMP",$J,"PXRMDNAM")) Q:DDLG=""
"RTN","PXRMEXLD",62,0)
 ;
"RTN","PXRMEXLD",63,0)
 ;Save reminder dialog
"RTN","PXRMEXLD",64,0)
 S DDATA=^TMP("PXRMEXTMP",$J,"DLOC",DDLG)
"RTN","PXRMEXLD",65,0)
 S DSTRT=$P(DDATA,U,1),DEND=$P(DDATA,U,2)
"RTN","PXRMEXLD",66,0)
 S IND=$P(DDATA,U,3),JND=$P(DDATA,U,4),DREP=""
"RTN","PXRMEXLD",67,0)
 D DLINE(DDLG,"","")
"RTN","PXRMEXLD",68,0)
 S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",69,0)
 S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",70,0)
 ;Process componentS
"RTN","PXRMEXLD",71,0)
 D DCMP(DDLG,"")
"RTN","PXRMEXLD",72,0)
 ;Process replacement elements
"RTN","PXRMEXLD",73,0)
 ;I $D(^TMP("PXRMEXTMP",$J,"DREPL"))>0 D DREPL^PXRMEXLC
"RTN","PXRMEXLD",74,0)
 I $D(PXRMEXRP)>0 D DREPL^PXRMEXLC
"RTN","PXRMEXLD",75,0)
 ;Change header
"RTN","PXRMEXLD",76,0)
 I VIEW=0 D CHGCAP^VALM("HEADER2","Dialog Details")
"RTN","PXRMEXLD",77,0)
 I VIEW=1 D CHGCAP^VALM("HEADER2","Dialog Text")
"RTN","PXRMEXLD",78,0)
 I VIEW=2 D CHGCAP^VALM("HEADER2","Dialog Findings")
"RTN","PXRMEXLD",79,0)
 I VIEW=3 D CHGCAP^VALM("HEADER2","Dialog Summary")
"RTN","PXRMEXLD",80,0)
 I VIEW=4 D CHGCAP^VALM("HEADER2","Dialog Usage")
"RTN","PXRMEXLD",81,0)
 ;
"RTN","PXRMEXLD",82,0)
 S VALMCNT=NLINE,^TMP("PXRMEXLD",$J,"VALMCNT")=VALMCNT,VALMBG=1
"RTN","PXRMEXLD",83,0)
 ;
"RTN","PXRMEXLD",84,0)
 K ^TMP($J,"PXRMEXREP"),PXRMEXRP
"RTN","PXRMEXLD",85,0)
 ;Reset protocol
"RTN","PXRMEXLD",86,0)
 D XQORM
"RTN","PXRMEXLD",87,0)
 Q
"RTN","PXRMEXLD",88,0)
 ;
"RTN","PXRMEXLD",89,0)
 ;Update workfile
"RTN","PXRMEXLD",90,0)
DLINE(DNAM,LEV,DSEQ) ;
"RTN","PXRMEXLD",91,0)
 ;Check if standard PXRM prompt
"RTN","PXRMEXLD",92,0)
 N LEVSEQ,TLEV
"RTN","PXRMEXLD",93,0)
 N DPXRM S DPXRM=$$PXRM^PXRMEXID(DNAM)
"RTN","PXRMEXLD",94,0)
 ;
"RTN","PXRMEXLD",95,0)
 ;Ignore PXRM prompts if doing a finding view (DF)
"RTN","PXRMEXLD",96,0)
 I VIEW>1,DPXRM Q
"RTN","PXRMEXLD",97,0)
 ;
"RTN","PXRMEXLD",98,0)
 N DEXIST,DPTX,DTXT,DTYP,EXIST,ITEM,TEMP,SEP
"RTN","PXRMEXLD",99,0)
 S ITEM=""
"RTN","PXRMEXLD",100,0)
 I DPXRM=0 S NSEL=NSEL+1,ITEM=NSEL
"RTN","PXRMEXLD",101,0)
 S NLINE=NLINE+1,SEP=$E(LEV,$L(LEV)),DEXIST=0
"RTN","PXRMEXLD",102,0)
 S LEVSEQ=LEV_DSEQ
"RTN","PXRMEXLD",103,0)
 S TEMP=$J(ITEM,3)_$J("",4)_LEV_DSEQ
"RTN","PXRMEXLD",104,0)
 ;Determine type
"RTN","PXRMEXLD",105,0)
 S DTYP=$G(^TMP("PXRMEXTMP",$J,"DTYP",DNAM))
"RTN","PXRMEXLD",106,0)
 ;Dialog component display
"RTN","PXRMEXLD",107,0)
 I (VIEW'=1) D
"RTN","PXRMEXLD",108,0)
 .I $L(TEMP)<13 S TEMP=TEMP_$J("",12+$L(SEP)-$L(TEMP))_$E(DNAM,1,50)
"RTN","PXRMEXLD",109,0)
 .E  S TEMP=TEMP_" "_$E(DNAM,1,50)
"RTN","PXRMEXLD",110,0)
 I VIEW=1 D
"RTN","PXRMEXLD",111,0)
 .I DTYP]"" S DTXT=$G(^TMP("PXRMEXTMP",$J,"DTXT",DNAM))
"RTN","PXRMEXLD",112,0)
 .I DTYP="" S DTXT=DNAM
"RTN","PXRMEXLD",113,0)
 .I DREP'="" S DTXT=DNAM
"RTN","PXRMEXLD",114,0)
 .I $L(TEMP)<13 S TEMP=TEMP_$J("",12+$L(SEP)-$L(TEMP))_$E(DTXT,1,50)
"RTN","PXRMEXLD",115,0)
 .E  S TEMP=TEMP_" "_$E(DTXT,1,50)
"RTN","PXRMEXLD",116,0)
 ;Check for replacements
"RTN","PXRMEXLD",117,0)
 I $D(^TMP("PXRMEXTMP",$J,"DREPL",DNAM))>0 D
"RTN","PXRMEXLD",118,0)
 .S TEMP=TEMP_"*"
"RTN","PXRMEXLD",119,0)
 .S TLEV=$S($E(LEVSEQ,$L(LEVSEQ))=".":$E(LEVSEQ,1,$L(LEVSEQ)-1),1:LEVSEQ)
"RTN","PXRMEXLD",120,0)
 .S PXRMEXRP(DNAM)=""
"RTN","PXRMEXLD",121,0)
 .;S ^TMP($J,"PXRMEXREP",TLEV,DNAM)=""
"RTN","PXRMEXLD",122,0)
 ;Add Type
"RTN","PXRMEXLD",123,0)
 S TEMP=TEMP_$J("",65-$L(TEMP))_DTYP
"RTN","PXRMEXLD",124,0)
 ;Exists flag
"RTN","PXRMEXLD",125,0)
 I DPXRM=0,$$EXISTS^PXRMEXIU(801.41,DNAM) D
"RTN","PXRMEXLD",126,0)
 .S TEMP=TEMP_$J("",75-$L(TEMP))_"X",DEXIST=1
"RTN","PXRMEXLD",127,0)
 S ^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",128,0)
 ;
"RTN","PXRMEXLD",129,0)
 ;Set up selection index
"RTN","PXRMEXLD",130,0)
 S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)="" Q:DPXRM=1
"RTN","PXRMEXLD",131,0)
 ;Store the file number, start and stop line in the exchange file.
"RTN","PXRMEXLD",132,0)
 S ^TMP("PXRMEXLD",$J,"SEL",NSEL)=FILENUM_U_DSTRT_U_DEND_U_DEXIST_U_IND_U_JND
"RTN","PXRMEXLD",133,0)
 ;Insert additional text lines
"RTN","PXRMEXLD",134,0)
 I VIEW=1,DREP="" D
"RTN","PXRMEXLD",135,0)
 .N DSUB,DTXT,FILENUM
"RTN","PXRMEXLD",136,0)
 .S DSUB=0,FILENUM=8927.1
"RTN","PXRMEXLD",137,0)
 .F  S DSUB=$O(^TMP("PXRMEXTMP",$J,"DTXT",DNAM,DSUB)) Q:'DSUB  D
"RTN","PXRMEXLD",138,0)
 ..S DTXT=$G(^TMP("PXRMEXTMP",$J,"DTXT",DNAM,DSUB)),NLINE=NLINE+1
"RTN","PXRMEXLD",139,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",12+$L(SEP))_$E(DTXT,1,50)
"RTN","PXRMEXLD",140,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",141,0)
 .;TIU template changes
"RTN","PXRMEXLD",142,0)
 .I $D(PXRMNMCH(FILENUM)),$D(^TMP("PXRMEXTMP",$J,"DTIU",DNAM)) D
"RTN","PXRMEXLD",143,0)
 ..N TEMP,TNAM,TNNAM
"RTN","PXRMEXLD",144,0)
 ..S TNAM=""
"RTN","PXRMEXLD",145,0)
 ..F  S TNAM=$O(^TMP("PXRMEXTMP",$J,"DTIU",DNAM,TNAM)) Q:TNAM=""  D
"RTN","PXRMEXLD",146,0)
 ...S TNNAM=$G(PXRMNMCH(FILENUM,TNAM)) Q:TNNAM=""
"RTN","PXRMEXLD",147,0)
 ...S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",148,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",149,0)
 ...S TEMP=$J("",12+$L(SEP))_"(TIU template "_TNAM_" copied to "_TNNAM_")"
"RTN","PXRMEXLD",150,0)
 ...S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",151,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",152,0)
 ...S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",153,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",154,0)
 ;Insert finding items
"RTN","PXRMEXLD",155,0)
 I VIEW=2,("element;group"[DTYP),DREP="" D
"RTN","PXRMEXLD",156,0)
 .N DSUB,FDATA,FILENUM,FLIT,FLONG,FNAME,FOUND,FREP,FTAB,FTYP,TEMP
"RTN","PXRMEXLD",157,0)
 .;Findings and additional findings
"RTN","PXRMEXLD",158,0)
 .S DSUB=0,FOUND=0
"RTN","PXRMEXLD",159,0)
 .F  S DSUB=$O(^TMP("PXRMEXTMP",$J,"DFND",DNAM,DSUB)) Q:'DSUB  D
"RTN","PXRMEXLD",160,0)
 ..S FNAME=$G(^TMP("PXRMEXTMP",$J,"DFND",DNAM,DSUB)) Q:FNAME=""
"RTN","PXRMEXLD",161,0)
 ..S FDATA=$G(^TMP("PXRMEXFND",$J,FNAME))
"RTN","PXRMEXLD",162,0)
 ..S FILENUM=$P(FDATA,U),FTYP=$P(FDATA,U,2) Q:'FILENUM
"RTN","PXRMEXLD",163,0)
 ..S FREP=$G(PXRMNMCH(FILENUM,FNAME)) I FREP=FNAME S FREP=""
"RTN","PXRMEXLD",164,0)
 ..S NLINE=NLINE+1,EXIST=$$EXISTS^PXRMEXIU(FILENUM,FNAME),FOUND=1
"RTN","PXRMEXLD",165,0)
 ..I DSUB=1 S FLIT="Finding: "
"RTN","PXRMEXLD",166,0)
 ..I DSUB>1 S FLIT="Add. Finding: "
"RTN","PXRMEXLD",167,0)
 ..S FLONG=0 I $L(FLIT_FNAME_" ("_FTYP_")")>60 S FLONG=1
"RTN","PXRMEXLD",168,0)
 ..I 'FLONG S FNAME=FLIT_FNAME_" ("_FTYP_")"
"RTN","PXRMEXLD",169,0)
 ..I FLONG S FNAME=FLIT_FNAME
"RTN","PXRMEXLD",170,0)
 ..S TEMP=$J("",12+$L(SEP))_$E(FNAME,1,60)_$J("",60-$L(FNAME))
"RTN","PXRMEXLD",171,0)
 ..I EXIST S TEMP=TEMP_$J("",75-$L(TEMP))_"X"
"RTN","PXRMEXLD",172,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=TEMP
"RTN","PXRMEXLD",173,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",174,0)
 ..I FLONG D
"RTN","PXRMEXLD",175,0)
 ...S NLINE=NLINE+1
"RTN","PXRMEXLD",176,0)
 ...S FTAB=$S(DSUB=1:21,1:26)
"RTN","PXRMEXLD",177,0)
 ...S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",FTAB)_"("_FTYP_")"
"RTN","PXRMEXLD",178,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",179,0)
 ..I FREP'="" D
"RTN","PXRMEXLD",180,0)
 ...S NLINE=NLINE+1
"RTN","PXRMEXLD",181,0)
 ...S FTAB=$S(DSUB=1:21,1:26)
"RTN","PXRMEXLD",182,0)
 ...S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",FTAB)_"(Replaced by "_FREP_")"
"RTN","PXRMEXLD",183,0)
 ...S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",184,0)
 .;If no findings
"RTN","PXRMEXLD",185,0)
 .I 'FOUND D
"RTN","PXRMEXLD",186,0)
 ..S NLINE=NLINE+1
"RTN","PXRMEXLD",187,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",12+$L(SEP))_"Finding: *NONE*"
"RTN","PXRMEXLD",188,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",189,0)
 ;
"RTN","PXRMEXLD",190,0)
 ;Usage screen
"RTN","PXRMEXLD",191,0)
 I VIEW=4,DREP="" D
"RTN","PXRMEXLD",192,0)
 .N DOTHER,DTXT,DTYPE,OTHER,TYPE
"RTN","PXRMEXLD",193,0)
 .D OTHER(DNAM,.DOTHER) Q:'$D(DOTHER)
"RTN","PXRMEXLD",194,0)
 .S OTHER=""
"RTN","PXRMEXLD",195,0)
 .F  S OTHER=$O(DOTHER(OTHER)) Q:OTHER=""  D
"RTN","PXRMEXLD",196,0)
 ..S TYPE=DOTHER(OTHER),NLINE=NLINE+1,DTYPE="REMINDER DIALOG"
"RTN","PXRMEXLD",197,0)
 ..I TYPE="G" S DTYPE="DIALOG GROUP"
"RTN","PXRMEXLD",198,0)
 ..I TYPE="E" S DTYPE="DIALOG ELEMENT"
"RTN","PXRMEXLD",199,0)
 ..S DTXT="USED BY: "_OTHER_" ("_DTYPE_")"
"RTN","PXRMEXLD",200,0)
 ..S ^TMP("PXRMEXLD",$J,NLINE,0)=$J("",12+$L(SEP))_DTXT
"RTN","PXRMEXLD",201,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",202,0)
 Q
"RTN","PXRMEXLD",203,0)
 ;
"RTN","PXRMEXLD",204,0)
 ;Save details of dialog components for display
"RTN","PXRMEXLD",205,0)
DCMP(DLG,LEV) ;
"RTN","PXRMEXLD",206,0)
 N DDATA,DDLG,DEND,DNAM,DSEQ,DSTRT,IND,JND,LAST,LEVSEQ,NUM
"RTN","PXRMEXLD",207,0)
 S DSEQ=0,LAST=0
"RTN","PXRMEXLD",208,0)
 F  S DSEQ=$O(^TMP("PXRMEXTMP",$J,"DMAP",DLG,DSEQ)) Q:'DSEQ  D
"RTN","PXRMEXLD",209,0)
 .S DDATA=^TMP("PXRMEXTMP",$J,"DMAP",DLG,DSEQ)
"RTN","PXRMEXLD",210,0)
 .S DNAM=$P(DDATA,U),DSTRT=$P(DDATA,U,2),DEND=$P(DDATA,U,3) Q:DNAM=""
"RTN","PXRMEXLD",211,0)
 .S IND=$P(DDATA,U,4),JND=$P(DDATA,U,5)
"RTN","PXRMEXLD",212,0)
 .;Check if this component has been replaced
"RTN","PXRMEXLD",213,0)
 .S DREP=$G(PXRMNMCH(FILENUM,DNAM)) I DREP=DNAM S DREP=""
"RTN","PXRMEXLD",214,0)
 .;Save line in workfile
"RTN","PXRMEXLD",215,0)
 .S NUM=DSEQ
"RTN","PXRMEXLD",216,0)
 .;S NUM=$S($G(REPL)["R":"."_DSEQ,1:DSEQ)
"RTN","PXRMEXLD",217,0)
 .I +LEV>0,NUM>0,$E(LEV,$L(LEV))'="." S LEV=LEV_"."
"RTN","PXRMEXLD",218,0)
 .D DLINE(DNAM,LEV,NUM) Q:DREP'=""
"RTN","PXRMEXLD",219,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAM)) D DCMP(DNAM,LEV_DSEQ_".")
"RTN","PXRMEXLD",220,0)
 .;Extra line feed
"RTN","PXRMEXLD",221,0)
 .I LEV="" D
"RTN","PXRMEXLD",222,0)
 ..S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",223,0)
 ..S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",224,0)
 I $G(REPL)["R" D
"RTN","PXRMEXLD",225,0)
 .S NLINE=NLINE+1,^TMP("PXRMEXLD",$J,NLINE,0)=$J("",79)
"RTN","PXRMEXLD",226,0)
 .S ^TMP("PXRMEXLD",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXLD",227,0)
 Q
"RTN","PXRMEXLD",228,0)
 ;
"RTN","PXRMEXLD",229,0)
 ;Rebuild string in ascending or descending order
"RTN","PXRMEXLD",230,0)
ORDER(STRING,ORDER) ;
"RTN","PXRMEXLD",231,0)
 N ARRAY,ITEM,CNT
"RTN","PXRMEXLD",232,0)
 F CNT=1:1 S ITEM=$P(STRING,",",CNT) Q:'ITEM  S ARRAY(ITEM)=""
"RTN","PXRMEXLD",233,0)
 K STRING
"RTN","PXRMEXLD",234,0)
 F CNT=1:1 S ITEM=$O(ARRAY(ITEM),ORDER) Q:'ITEM  D
"RTN","PXRMEXLD",235,0)
 .S $P(STRING,",",CNT)=ITEM
"RTN","PXRMEXLD",236,0)
 Q
"RTN","PXRMEXLD",237,0)
 ;
"RTN","PXRMEXLD",238,0)
 ;Check if used by other dialogs
"RTN","PXRMEXLD",239,0)
OTHER(NAME,LIST) ;
"RTN","PXRMEXLD",240,0)
 N DDATA,DIEN,DNAME,DTYP,IEN
"RTN","PXRMEXLD",241,0)
 S IEN=$O(^PXRMD(801.41,"B",NAME,0)) Q:'IEN
"RTN","PXRMEXLD",242,0)
 ;Check if used by other dialogs
"RTN","PXRMEXLD",243,0)
 I '$D(^PXRMD(801.41,"AD",IEN)) Q
"RTN","PXRMEXLD",244,0)
 ;Build list of dialogs using this component
"RTN","PXRMEXLD",245,0)
 S DIEN=0
"RTN","PXRMEXLD",246,0)
 F  S DIEN=$O(^PXRMD(801.41,"AD",IEN,DIEN)) Q:'DIEN  D
"RTN","PXRMEXLD",247,0)
 .S DDATA=$G(^PXRMD(801.41,DIEN,0)) Q:DDATA=""
"RTN","PXRMEXLD",248,0)
 .S DNAME=$P(DDATA,U),DTYP=$P(DDATA,U,4) Q:DNAME=""
"RTN","PXRMEXLD",249,0)
 .;Include only dialogs that are not part of this reminder dialog
"RTN","PXRMEXLD",250,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAME)) Q
"RTN","PXRMEXLD",251,0)
 .S LIST(DNAME)=DTYP
"RTN","PXRMEXLD",252,0)
 Q
"RTN","PXRMEXLD",253,0)
 ;
"RTN","PXRMEXLD",254,0)
 ;Validate sequence numbers
"RTN","PXRMEXLD",255,0)
VALID(STRING) ;
"RTN","PXRMEXLD",256,0)
 N CNT,FOUND,OK
"RTN","PXRMEXLD",257,0)
 S FOUND=0,OK=1
"RTN","PXRMEXLD",258,0)
 F CNT=1:1 S SEL=$P(STRING,",",CNT) Q:'SEL  D
"RTN","PXRMEXLD",259,0)
 .;Invalid selection
"RTN","PXRMEXLD",260,0)
 .I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXRMEXLD",261,0)
 ..S OK=0 W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMEXLD",262,0)
 .S FOUND=1
"RTN","PXRMEXLD",263,0)
 Q:OK&FOUND 1
"RTN","PXRMEXLD",264,0)
 Q 0
"RTN","PXRMEXLD",265,0)
 ;
"RTN","PXRMEXLD",266,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXCH SELECT DIALOG",0))_U_"1:"_VALMCNT
"RTN","PXRMEXLD",267,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMEXLD",268,0)
 Q
"RTN","PXRMEXLD",269,0)
 ;
"RTN","PXRMEXLD",270,0)
XSEL ;PXRM EXCH SELECT DIALOG validation
"RTN","PXRMEXLD",271,0)
 N ALL,CNT,ERR,IEN,IND,PXRMDONE,SELECT,SEL
"RTN","PXRMEXLD",272,0)
 S ALL="",PXRMDONE=0,PXRMBG=$G(VALMBG)
"RTN","PXRMEXLD",273,0)
 ;Invalid selection
"RTN","PXRMEXLD",274,0)
 S SELECT=$P(XQORNOD(0),"=",2) I '$$VALID(SELECT) S VALMBCK="R" Q
"RTN","PXRMEXLD",275,0)
 ;
"RTN","PXRMEXLD",276,0)
 ;Sort the SELECTION into reverse order
"RTN","PXRMEXLD",277,0)
 D ORDER(.SELECT,-1)
"RTN","PXRMEXLD",278,0)
 ;
"RTN","PXRMEXLD",279,0)
 ;Lock the file
"RTN","PXRMEXLD",280,0)
 I '$$LOCK^PXRMEXID S VALMBCK="R" Q
"RTN","PXRMEXLD",281,0)
 ;
"RTN","PXRMEXLD",282,0)
 ;Install dialog component(s)
"RTN","PXRMEXLD",283,0)
 S CNT=0
"RTN","PXRMEXLD",284,0)
 F CNT=1:1 S SEL=$P(SELECT,",",CNT) Q:'SEL  D  Q:PXRMDONE
"RTN","PXRMEXLD",285,0)
 .D INSCOM^PXRMEXID(SEL,0)
"RTN","PXRMEXLD",286,0)
 ;
"RTN","PXRMEXLD",287,0)
 ;Unlock file
"RTN","PXRMEXLD",288,0)
 D UNLOCK^PXRMEXID
"RTN","PXRMEXLD",289,0)
 ;
"RTN","PXRMEXLD",290,0)
 ;
"RTN","PXRMEXLD",291,0)
 ;Rebuild Workfile
"RTN","PXRMEXLD",292,0)
 D DISP^PXRMEXLD(PXRMMODE)
"RTN","PXRMEXLD",293,0)
 ;
"RTN","PXRMEXLD",294,0)
 ;Refresh
"RTN","PXRMEXLD",295,0)
 S VALMBCK="R" I $D(PXRMBG) S VALMBG=PXRMBG
"RTN","PXRMEXLD",296,0)
 Q
"RTN","PXRMEXU0")
0^46^B5214971
"RTN","PXRMEXU0",1,0)
PXRMEXU0 ; SLC/PKR - Reminder exchange general utilities, #0.;06/23/2005
"RTN","PXRMEXU0",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMEXU0",3,0)
 ;=========================================================
"RTN","PXRMEXU0",4,0)
LOC(FDA) ;Process the FDA for location lists.
"RTN","PXRMEXU0",5,0)
 ;Direct reads of ^DIC(40.7) covered by DBIA #537.
"RTN","PXRMEXU0",6,0)
 N AMIS,IEN,IENS,STOP,TEMP,TEXT
"RTN","PXRMEXU0",7,0)
 ;Stop Codes may not have a unique name, use the AMIS Reporting Stop
"RTN","PXRMEXU0",8,0)
 ;code to determine which one to use.
"RTN","PXRMEXU0",9,0)
 S IENS=""
"RTN","PXRMEXU0",10,0)
 F  S IENS=$O(FDA(810.9001,IENS)) Q:IENS=""  D
"RTN","PXRMEXU0",11,0)
 . S STOP=FDA(810.9001,IENS,.01)
"RTN","PXRMEXU0",12,0)
 . S AMIS=FDA(810.9001,IENS,.02)
"RTN","PXRMEXU0",13,0)
 . S IEN=$O(^DIC(40.7,"C",AMIS,""))
"RTN","PXRMEXU0",14,0)
 . S TEMP=$P(^DIC(40.7,IEN,0),U,1)
"RTN","PXRMEXU0",15,0)
 . I TEMP'=STOP D  Q
"RTN","PXRMEXU0",16,0)
 .. S TEXT(1)="Name associated with AMIS stop code does not match the one in the"
"RTN","PXRMEXU0",17,0)
 .. S TEXT(2)="packed reminder:"
"RTN","PXRMEXU0",18,0)
 .. S TEXT(3)=" AMIS="_AMIS
"RTN","PXRMEXU0",19,0)
 .. S TEXT(4)=" Site Name="_TEMP
"RTN","PXRMEXU0",20,0)
 .. S TEXT(5)=" Name in packed reminder="_STOP
"RTN","PXRMEXU0",21,0)
 .. D EN^DDIOL(.TEXT)
"RTN","PXRMEXU0",22,0)
 . S FDA(810.9001,IENS,.01)="`"_IEN
"RTN","PXRMEXU0",23,0)
 Q
"RTN","PXRMEXU0",24,0)
 ;
"RTN","PXRMEXU0",25,0)
 ;=========================================================
"RTN","PXRMEXU0",26,0)
GETIEN(NFOUND,LIST) ;FIND^DIC has found multiple entries with the same name.
"RTN","PXRMEXU0",27,0)
 ;NFOUND is the number found, LIST is the array returned by FIND^DIC.
"RTN","PXRMEXU0",28,0)
 ;Ask the user which one they want to use.
"RTN","PXRMEXU0",29,0)
 N DIR,FN,IND,NC,X,Y
"RTN","PXRMEXU0",30,0)
 S DIR(0)="S^"
"RTN","PXRMEXU0",31,0)
 F IND=1:1:NFOUND D
"RTN","PXRMEXU0",32,0)
 . S DIR(0)=DIR(0)_IND_":"_LIST("DILIST",2,IND)_";"
"RTN","PXRMEXU0",33,0)
 S DIR("L",1)="Select one of the following to use:"
"RTN","PXRMEXU0",34,0)
 S NC=1
"RTN","PXRMEXU0",35,0)
 F IND=1:1:NFOUND D
"RTN","PXRMEXU0",36,0)
 . S NC=NC+1
"RTN","PXRMEXU0",37,0)
 . S DIR("L",NC)=IND_"- "_LIST("DILIST",1,IND)_" IEN="_LIST("DILIST",2,IND)
"RTN","PXRMEXU0",38,0)
 . S FN=$O(LIST("DILIST","ID",IND,""))
"RTN","PXRMEXU0",39,0)
 . I FN="" Q
"RTN","PXRMEXU0",40,0)
 . S NC=NC+1
"RTN","PXRMEXU0",41,0)
 . S DIR("L",NC)="    "_LIST("DILIST","ID",IND,FN)
"RTN","PXRMEXU0",42,0)
 . F  S FN=$O(LIST("DILIST","ID",IND,FN)) Q:FN=""  D
"RTN","PXRMEXU0",43,0)
 .. I $L(LIST("DILIST","ID",IND,FN))=0 Q
"RTN","PXRMEXU0",44,0)
 .. S NC=NC+1
"RTN","PXRMEXU0",45,0)
 .. S DIR("L",NC)="    "_LIST("DILIST","ID",IND,FN)
"RTN","PXRMEXU0",46,0)
 ;Truncate DIR("L") as required.
"RTN","PXRMEXU0",47,0)
 S DIR("L")=DIR("L",NC) K DIR("L",NC)
"RTN","PXRMEXU0",48,0)
 D ^DIR
"RTN","PXRMEXU0",49,0)
 I Y="^" D
"RTN","PXRMEXU0",50,0)
 . N TEXT
"RTN","PXRMEXU0",51,0)
 . S TEXT(1)="Entering ""^"" tells Reminder Exchange the entry does not exist. You will be"
"RTN","PXRMEXU0",52,0)
 . S TEXT(2)="ask for a replacement."
"RTN","PXRMEXU0",53,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMEXU0",54,0)
 Q $S($D(Y(0)):Y(0),1:0)
"RTN","PXRMEXU0",55,0)
 ;
"RTN","PXRMEXU0",56,0)
 ;=========================================================
"RTN","PXRMEXU0",57,0)
SFNFTC(IEN) ;Set the found/not found text line counts in the reminder
"RTN","PXRMEXU0",58,0)
 ;definition.
"RTN","PXRMEXU0",59,0)
 D SNMLA^PXRMFNFT(IEN)
"RTN","PXRMEXU0",60,0)
 D SNMLF^PXRMFNFT(IEN,20)
"RTN","PXRMEXU0",61,0)
 D SNMLF^PXRMFNFT(IEN,25)
"RTN","PXRMEXU0",62,0)
 D SNMLL^PXRMFNFT(IEN)
"RTN","PXRMEXU0",63,0)
 Q
"RTN","PXRMEXU0",64,0)
 ;
"RTN","PXRMFF")
0^166^B17969546
"RTN","PXRMFF",1,0)
PXRMFF ;SLC/PKR - Clinical Reminders function finding evaluation. ;07/17/2006
"RTN","PXRMFF",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMFF",3,0)
 ;===========================================
"RTN","PXRMFF",4,0)
EVAL(DFN,DEFARR,FIEVAL) ;Evaluate function findings.
"RTN","PXRMFF",5,0)
 N FFIND,FFN,FILIST,FN,FUN,FUNIND,FUNN,FVALUE,JND
"RTN","PXRMFF",6,0)
 N LOGIC,NL,ROUTINE,TEMP
"RTN","PXRMFF",7,0)
 I '$D(DEFARR(25)) Q
"RTN","PXRMFF",8,0)
 S FFN="FF"
"RTN","PXRMFF",9,0)
 F  S FFN=$O(DEFARR(25,FFN)) Q:FFN'["FF"  D
"RTN","PXRMFF",10,0)
 . K FN
"RTN","PXRMFF",11,0)
 . S FUNIND=0
"RTN","PXRMFF",12,0)
 . F  S FUNIND=+$O(DEFARR(25,FFN,5,FUNIND)) Q:FUNIND=0  D
"RTN","PXRMFF",13,0)
 .. S FUNN=$P(DEFARR(25,FFN,5,FUNIND,0),U,1)
"RTN","PXRMFF",14,0)
 .. S FUN=$P(DEFARR(25,FFN,5,FUNIND,0),U,2)
"RTN","PXRMFF",15,0)
 .. S TEMP=^PXRMD(802.4,FUN,0)
"RTN","PXRMFF",16,0)
 .. S ROUTINE=$P(TEMP,U,2,3)_"(.FILIST,.FIEVAL,.FVALUE)"
"RTN","PXRMFF",17,0)
 .. K FILIST
"RTN","PXRMFF",18,0)
 .. S (JND,NL)=0
"RTN","PXRMFF",19,0)
 .. F  S JND=+$O(DEFARR(25,FFN,5,FUNIND,20,JND)) Q:JND=0  D
"RTN","PXRMFF",20,0)
 ... S NL=NL+1
"RTN","PXRMFF",21,0)
 ... S FILIST(NL)=DEFARR(25,FFN,5,FUNIND,20,JND,0)
"RTN","PXRMFF",22,0)
 .. S FILIST(0)=NL
"RTN","PXRMFF",23,0)
 .. D @ROUTINE
"RTN","PXRMFF",24,0)
 .. S FN(FUNIND)=FVALUE
"RTN","PXRMFF",25,0)
 . S LOGIC=$G(DEFARR(25,FFN,10))
"RTN","PXRMFF",26,0)
 . S LOGIC=$S(LOGIC'="":LOGIC,1:0)
"RTN","PXRMFF",27,0)
 . I @LOGIC
"RTN","PXRMFF",28,0)
 . S FIEVAL(FFN)=$T
"RTN","PXRMFF",29,0)
 . S FIEVAL(FFN,"NUMBER")=$P(FFN,"FF",2)
"RTN","PXRMFF",30,0)
 . S FIEVAL(FFN,"FINDING")=$G(FUN)_";PXRMD(802.4,"
"RTN","PXRMFF",31,0)
 Q
"RTN","PXRMFF",32,0)
 ;
"RTN","PXRMFF",33,0)
 ;===========================================
"RTN","PXRMFF",34,0)
EVALPL(DEFARR,FFIND,PLIST) ;Build a list of patients based on a function
"RTN","PXRMFF",35,0)
 ;finding.
"RTN","PXRMFF",36,0)
 N COUNT,DAS,DATE,DFN
"RTN","PXRMFF",37,0)
 N FI,FIEVAL,FIEVT,FIL,FILIST,FILENUM,FINDPA,FN
"RTN","PXRMFF",38,0)
 N FUN,FUNNM,FUNN,FUNNUM,FVALUE
"RTN","PXRMFF",39,0)
 N IND,ITEM,JND,LOGIC,LNAME,NFI,NFUN,ROUTINE,TEMP,TERMARR,UNIQFIL
"RTN","PXRMFF",40,0)
 S LOGIC=DEFARR(25,FFIND,10)
"RTN","PXRMFF",41,0)
 I LOGIC="" Q
"RTN","PXRMFF",42,0)
 ;Build the list of functions and findings used by the function finding.
"RTN","PXRMFF",43,0)
 S (FUNNUM,NFUN)=0
"RTN","PXRMFF",44,0)
 F  S FUNNUM=+$O(DEFARR(25,FFIND,5,FUNNUM)) Q:FUNNUM=0  D
"RTN","PXRMFF",45,0)
 . S NFUN=NFUN+1
"RTN","PXRMFF",46,0)
 . S FUNN=$P(DEFARR(25,FFIND,5,FUNNUM,0),U,1)
"RTN","PXRMFF",47,0)
 . S FUN=$P(DEFARR(25,FFIND,5,FUNNUM,0),U,2)
"RTN","PXRMFF",48,0)
 . S TEMP=^PXRMD(802.4,FUN,0)
"RTN","PXRMFF",49,0)
 . S ROUTINE(NFUN)=$P(TEMP,U,2,3)_"(.FIL,.FIEVAL,.FVALUE)"
"RTN","PXRMFF",50,0)
 . S (FI,NFI)=0
"RTN","PXRMFF",51,0)
 . F  S FI=+$O(DEFARR(25,FFIND,5,FUNNUM,20,FI)) Q:FI=0  D
"RTN","PXRMFF",52,0)
 .. S NFI=NFI+1,FILIST(NFUN,NFI)=DEFARR(25,FFIND,5,FUNNUM,20,FI,0)
"RTN","PXRMFF",53,0)
 . S FILIST(NFUN,0)=NFI
"RTN","PXRMFF",54,0)
 ;A finding may be used in more than one function in the function
"RTN","PXRMFF",55,0)
 ;finding so build a list of the unique findings.
"RTN","PXRMFF",56,0)
 F IND=1:1:NFUN D
"RTN","PXRMFF",57,0)
 . F JND=1:1:FILIST(IND,0) D
"RTN","PXRMFF",58,0)
 .. S TEMP=$P(DEFARR(20,FILIST(IND,JND),0),U,1)
"RTN","PXRMFF",59,0)
 .. S ITEM=$P(TEMP,";",1)
"RTN","PXRMFF",60,0)
 .. S FILENUM=$$GETFNUM^PXRMDATA($P(TEMP,";",2))
"RTN","PXRMFF",61,0)
 .. S UNIQFIL(FILIST(IND,JND))=""
"RTN","PXRMFF",62,0)
 K ^TMP($J,"PXRMFFDFN")
"RTN","PXRMFF",63,0)
 S IND=0
"RTN","PXRMFF",64,0)
 F  S IND=$O(UNIQFIL(IND)) Q:IND=""  D
"RTN","PXRMFF",65,0)
 . S FINDPA(0)=DEFARR(20,IND,0)
"RTN","PXRMFF",66,0)
 . S FINDPA(3)=DEFARR(20,IND,3)
"RTN","PXRMFF",67,0)
 . S FINDPA(10)=DEFARR(20,IND,10)
"RTN","PXRMFF",68,0)
 . S FINDPA(11)=DEFARR(20,IND,11)
"RTN","PXRMFF",69,0)
 . D GENTERM^PXRMPLST(FINDPA(0),IND,.TERMARR)
"RTN","PXRMFF",70,0)
 . S LNAME(IND)="PXRMFF"_IND
"RTN","PXRMFF",71,0)
 . K ^TMP($J,LNAME(IND))
"RTN","PXRMFF",72,0)
 . D EVALPL^PXRMTERM(.FINDPA,.TERMARR,LNAME(IND))
"RTN","PXRMFF",73,0)
 .;Get rid of the false part of the list.
"RTN","PXRMFF",74,0)
 . K ^TMP($J,LNAME(IND),0)
"RTN","PXRMFF",75,0)
 .;Build a complete list of patients.
"RTN","PXRMFF",76,0)
 . S DFN=0
"RTN","PXRMFF",77,0)
 . F  S DFN=$O(^TMP($J,LNAME(IND),1,DFN)) Q:DFN=""  S ^TMP($J,"PXRMFFDFN",DFN)=""
"RTN","PXRMFF",78,0)
 ;Evaluate the function finding for each patient. If the function
"RTN","PXRMFF",79,0)
 ;finding is true then add the patient to PLIST.
"RTN","PXRMFF",80,0)
 S DFN=0
"RTN","PXRMFF",81,0)
 F  S DFN=$O(^TMP($J,"PXRMFFDFN",DFN)) Q:DFN=""  D
"RTN","PXRMFF",82,0)
 . K FIEVAL
"RTN","PXRMFF",83,0)
 . S IND=""
"RTN","PXRMFF",84,0)
 . F  S IND=$O(UNIQFIL(IND)) Q:IND=""  D
"RTN","PXRMFF",85,0)
 .. S FIEVAL(IND)=0
"RTN","PXRMFF",86,0)
 .. S ITEM=""
"RTN","PXRMFF",87,0)
 .. F  S ITEM=$O(^TMP($J,LNAME(IND),1,DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMFF",88,0)
 ... S COUNT=0
"RTN","PXRMFF",89,0)
 ... F  S COUNT=$O(^TMP($J,LNAME(IND),1,DFN,ITEM,COUNT)) Q:COUNT=""  D
"RTN","PXRMFF",90,0)
 .... S FILENUM=$O(^TMP($J,LNAME(IND),1,DFN,ITEM,COUNT,""))
"RTN","PXRMFF",91,0)
 .... S TEMP=^TMP($J,LNAME(IND),1,DFN,ITEM,COUNT,FILENUM)
"RTN","PXRMFF",92,0)
 .... S DAS=$P(TEMP,U,1)
"RTN","PXRMFF",93,0)
 .... S DATE=$P(TEMP,U,2)
"RTN","PXRMFF",94,0)
 .... K FIEVT
"RTN","PXRMFF",95,0)
 .... D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVT)
"RTN","PXRMFF",96,0)
 .... M FIEVAL(IND,COUNT)=FIEVT
"RTN","PXRMFF",97,0)
 .... S FIEVAL(IND,COUNT,"DATE")=DATE,FIEVAL(IND,COUNT)=1
"RTN","PXRMFF",98,0)
 .;Save the top level results for each finding.
"RTN","PXRMFF",99,0)
 . S IND=0
"RTN","PXRMFF",100,0)
 . F  S IND=$O(FIEVAL(IND)) Q:IND=""  D
"RTN","PXRMFF",101,0)
 .. K FIEVT M FIEVT=FIEVAL(IND)
"RTN","PXRMFF",102,0)
 .. S NFI=+$O(FIEVT(""),-1)
"RTN","PXRMFF",103,0)
 .. D SFRES^PXRMUTIL(-1,NFI,.FIEVT)
"RTN","PXRMFF",104,0)
 .. K FIEVAL(IND) M FIEVAL(IND)=FIEVT
"RTN","PXRMFF",105,0)
 .;Evaluate the function finding for this patient.
"RTN","PXRMFF",106,0)
 . K FN
"RTN","PXRMFF",107,0)
 . F IND=1:1:NFUN D
"RTN","PXRMFF",108,0)
 .. K FIL M FIL=FILIST(IND)
"RTN","PXRMFF",109,0)
 .. D @ROUTINE(IND)
"RTN","PXRMFF",110,0)
 .. S FN(IND)=FVALUE
"RTN","PXRMFF",111,0)
 . I @LOGIC S ^TMP($J,PLIST,1,DFN,1,FFIND)=""
"RTN","PXRMFF",112,0)
 ;Clean up.
"RTN","PXRMFF",113,0)
 K ^TMP($J,"PXRMFFDFN")
"RTN","PXRMFF",114,0)
 S IND=""
"RTN","PXRMFF",115,0)
 F  S IND=$O(UNIQFIL(IND)) Q:IND=""  K ^TMP($J,LNAME(IND))
"RTN","PXRMFF",116,0)
 Q
"RTN","PXRMFF",117,0)
 ;
"RTN","PXRMFF",118,0)
 ;===========================================
"RTN","PXRMFF",119,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMFF",120,0)
 ;None currently defined.
"RTN","PXRMFF",121,0)
 Q
"RTN","PXRMFF",122,0)
 ;
"RTN","PXRMFF",123,0)
 ;===========================================
"RTN","PXRMFF",124,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMFF",125,0)
 ;maintenance output. None currently defined.
"RTN","PXRMFF",126,0)
 Q
"RTN","PXRMFF",127,0)
 ;
"RTN","PXRMFF0")
0^88^B5682907
"RTN","PXRMFF0",1,0)
PXRMFF0 ;SLC/PKR - Clinical Reminders function finding routines. ;06/23/2006
"RTN","PXRMFF0",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMFF0",3,0)
 ;
"RTN","PXRMFF0",4,0)
 ;============================================
"RTN","PXRMFF0",5,0)
COUNT(LIST,FIEVAL,COUNT) ;
"RTN","PXRMFF0",6,0)
 N IND,JND,KND
"RTN","PXRMFF0",7,0)
 S COUNT=0
"RTN","PXRMFF0",8,0)
 F IND=1:1:LIST(0) D
"RTN","PXRMFF0",9,0)
 . S JND=LIST(IND),KND=0
"RTN","PXRMFF0",10,0)
 . F  S KND=+$O(FIEVAL(JND,KND)) Q:KND=0  D
"RTN","PXRMFF0",11,0)
 .. I FIEVAL(JND,KND) S COUNT=COUNT+1
"RTN","PXRMFF0",12,0)
 Q
"RTN","PXRMFF0",13,0)
 ;
"RTN","PXRMFF0",14,0)
 ;===========================================
"RTN","PXRMFF0",15,0)
DIFFDATE(LIST,FIEVAL,DIFF) ;Return the difference in days between the
"RTN","PXRMFF0",16,0)
 ;first two findings in the list.
"RTN","PXRMFF0",17,0)
 I LIST(0)<2 S DIFF=2 Q
"RTN","PXRMFF0",18,0)
 N DATE1,DATE2,DAYS,IND,JND
"RTN","PXRMFF0",19,0)
 S DATE1=+$G(FIEVAL(LIST(1),"DATE"))
"RTN","PXRMFF0",20,0)
 S DATE2=+$G(FIEVAL(LIST(2),"DATE"))
"RTN","PXRMFF0",21,0)
 S DAYS=$$FMDIFF^XLFDT(DATE1,DATE2)
"RTN","PXRMFF0",22,0)
 S DIFF=$S(DAYS<0:-DAYS,1:DAYS)
"RTN","PXRMFF0",23,0)
 Q
"RTN","PXRMFF0",24,0)
 ;
"RTN","PXRMFF0",25,0)
 ;===========================================
"RTN","PXRMFF0",26,0)
DUR(LIST,FIEVAL,DUR) ;
"RTN","PXRMFF0",27,0)
 N EDT,IND,JND,KND,SDT
"RTN","PXRMFF0",28,0)
 F IND=1:1:LIST(0) D
"RTN","PXRMFF0",29,0)
 . S JND=LIST(IND)
"RTN","PXRMFF0",30,0)
 . I FIEVAL(JND)=0 S (EDT,SDT)=0 Q
"RTN","PXRMFF0",31,0)
 .;Check for finding with start and stop date.
"RTN","PXRMFF0",32,0)
 . I $D(FIEVAL(JND,"START DATE")) D
"RTN","PXRMFF0",33,0)
 .. S SDT=+$G(FIEVAL(JND,"START DATE"))
"RTN","PXRMFF0",34,0)
 .. S EDT=+$G(FIEVAL(JND,"STOP DATE"))
"RTN","PXRMFF0",35,0)
 .. I EDT=0 S EDT=+$G(FIEVAL(JND,"DATE"))
"RTN","PXRMFF0",36,0)
 . E  D
"RTN","PXRMFF0",37,0)
 ..;Get start and stop for multiple occurrences.
"RTN","PXRMFF0",38,0)
 .. S KND=$O(FIEVAL(JND,"A"),-1)
"RTN","PXRMFF0",39,0)
 .. S EDT=$S(KND="":0,1:$G(FIEVAL(JND,KND,"DATE")))
"RTN","PXRMFF0",40,0)
 .. S KND=+$O(FIEVAL(JND,""))
"RTN","PXRMFF0",41,0)
 .. S SDT=$S(KND=0:0,1:$G(FIEVAL(JND,KND,"DATE")))
"RTN","PXRMFF0",42,0)
 ;Return the duration in days.
"RTN","PXRMFF0",43,0)
 S DUR=$$FMDIFF^XLFDT(EDT,SDT)
"RTN","PXRMFF0",44,0)
 I DUR<0 S DUR=-DUR
"RTN","PXRMFF0",45,0)
 Q
"RTN","PXRMFF0",46,0)
 ;
"RTN","PXRMFF0",47,0)
 ;============================================
"RTN","PXRMFF0",48,0)
FI(LIST,FIEVAL,LV) ;Given a regular finding return its true/false value.
"RTN","PXRMFF0",49,0)
 S LV=FIEVAL(LIST(1))
"RTN","PXRMFF0",50,0)
 Q
"RTN","PXRMFF0",51,0)
 ;
"RTN","PXRMFF0",52,0)
 ;============================================
"RTN","PXRMFF0",53,0)
MAXDATE(LIST,FIEVAL,MAXDATE) ;Given a list of findings return the maximum
"RTN","PXRMFF0",54,0)
 ;date. This will be the newest date.
"RTN","PXRMFF0",55,0)
 N DATE,IND
"RTN","PXRMFF0",56,0)
 S MAXDATE=0
"RTN","PXRMFF0",57,0)
 F IND=1:1:LIST(0) D
"RTN","PXRMFF0",58,0)
 . S DATE=$G(FIEVAL(LIST(IND),"DATE"))
"RTN","PXRMFF0",59,0)
 . I DATE>MAXDATE S MAXDATE=DATE
"RTN","PXRMFF0",60,0)
 Q
"RTN","PXRMFF0",61,0)
 ;
"RTN","PXRMFF0",62,0)
 ;============================================
"RTN","PXRMFF0",63,0)
MINDATE(LIST,FIEVAL,MINDATE) ;Given a list of findings return the minimum
"RTN","PXRMFF0",64,0)
 ;date. This will be the oldest non-null or zero date.
"RTN","PXRMFF0",65,0)
 N DATE,IND
"RTN","PXRMFF0",66,0)
 S MINDATE=9991231
"RTN","PXRMFF0",67,0)
 F IND=1:1:LIST(0) D
"RTN","PXRMFF0",68,0)
 . S DATE=$G(FIEVAL(LIST(IND),"DATE"))
"RTN","PXRMFF0",69,0)
 . I DATE<MINDATE S MINDATE=DATE
"RTN","PXRMFF0",70,0)
 I MINDATE=9991231 S MINDATE=0
"RTN","PXRMFF0",71,0)
 Q
"RTN","PXRMFF0",72,0)
 ;
"RTN","PXRMFF0",73,0)
 ;============================================
"RTN","PXRMFF0",74,0)
MRD(LIST,FIEVAL,MRD) ;Given a list of findings return the most recent
"RTN","PXRMFF0",75,0)
 ;finding date from the list.
"RTN","PXRMFF0",76,0)
 N DATE,IND
"RTN","PXRMFF0",77,0)
 S MRD=0
"RTN","PXRMFF0",78,0)
 F IND=1:1:LIST(0) D
"RTN","PXRMFF0",79,0)
 . S DATE=$G(FIEVAL(LIST(IND),"DATE"))
"RTN","PXRMFF0",80,0)
 . I DATE>MRD S MRD=DATE
"RTN","PXRMFF0",81,0)
 Q
"RTN","PXRMFF0",82,0)
 ;
"RTN","PXRMFF0",83,0)
 ;============================================
"RTN","PXRMFF0",84,0)
VALUE(LIST,FIEVAL,VALUE) ;Given a finding return one of its "CSUB"
"RTN","PXRMFF0",85,0)
 ;values.
"RTN","PXRMFF0",86,0)
 S VALUE=$G(FIEVAL(LIST(1),LIST(2),LIST(3)))
"RTN","PXRMFF0",87,0)
 Q
"RTN","PXRMFF0",88,0)
 ;
"RTN","PXRMFFAT")
0^167^B889862
"RTN","PXRMFFAT",1,0)
PXRMFFAT ;SLC/PKR - Function Finding argument type routines. ;08/03/2006
"RTN","PXRMFFAT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMFFAT",3,0)
 ;
"RTN","PXRMFFAT",4,0)
 ;============================================
"RTN","PXRMFFAT",5,0)
ARGTYPE(FUNCTION,AN) ;Given a FUNCTION and argument number return the
"RTN","PXRMFFAT",6,0)
 ;corresponding argument type. Possible argument types are:
"RTN","PXRMFFAT",7,0)
 ; F - finding
"RTN","PXRMFFAT",8,0)
 ; N - number
"RTN","PXRMFFAT",9,0)
 ; S - string
"RTN","PXRMFFAT",10,0)
 ; U - undefined
"RTN","PXRMFFAT",11,0)
 N ROUTINE
"RTN","PXRMFFAT",12,0)
 ;The routine for any function is the same as the name of the
"RTN","PXRMFFAT",13,0)
 ;function except for functions with "_" in the name. In that
"RTN","PXRMFFAT",14,0)
 ;case the "_" is removed.
"RTN","PXRMFFAT",15,0)
 S ROUTINE="$$"_$TR(FUNCTION,"_","")_"(AN)"
"RTN","PXRMFFAT",16,0)
 Q @ROUTINE
"RTN","PXRMFFAT",17,0)
 ;
"RTN","PXRMFFAT",18,0)
 ;============================================
"RTN","PXRMFFAT",19,0)
COUNT(AN) ;
"RTN","PXRMFFAT",20,0)
 Q $S(AN=1:"F",1:"U")
"RTN","PXRMFFAT",21,0)
 ;
"RTN","PXRMFFAT",22,0)
 ;===========================================
"RTN","PXRMFFAT",23,0)
DIFFDATE(AN) ;
"RTN","PXRMFFAT",24,0)
 Q $S(AN=1:"F",AN=2:"F",1:"U")
"RTN","PXRMFFAT",25,0)
 ;
"RTN","PXRMFFAT",26,0)
 ;===========================================
"RTN","PXRMFFAT",27,0)
DUR(AN) ;
"RTN","PXRMFFAT",28,0)
 Q $S(AN=1:"F",1:"U")
"RTN","PXRMFFAT",29,0)
 ;
"RTN","PXRMFFAT",30,0)
 ;============================================
"RTN","PXRMFFAT",31,0)
FI(AN) ;
"RTN","PXRMFFAT",32,0)
 Q $S(AN=1:"F",1:"U")
"RTN","PXRMFFAT",33,0)
 ;
"RTN","PXRMFFAT",34,0)
 ;============================================
"RTN","PXRMFFAT",35,0)
MAXDATE(AN) ;
"RTN","PXRMFFAT",36,0)
 I AN>0,AN<100 Q "F"
"RTN","PXRMFFAT",37,0)
 E  Q "U"
"RTN","PXRMFFAT",38,0)
 ;
"RTN","PXRMFFAT",39,0)
 ;============================================
"RTN","PXRMFFAT",40,0)
MINDATE(AN) ;
"RTN","PXRMFFAT",41,0)
 I AN>0,AN<100 Q "F"
"RTN","PXRMFFAT",42,0)
 E  Q "U"
"RTN","PXRMFFAT",43,0)
 ;
"RTN","PXRMFFAT",44,0)
 ;============================================
"RTN","PXRMFFAT",45,0)
MRD(AN) ;
"RTN","PXRMFFAT",46,0)
 I AN>0,AN<100 Q "F"
"RTN","PXRMFFAT",47,0)
 E  Q "U"
"RTN","PXRMFFAT",48,0)
 ;
"RTN","PXRMFFAT",49,0)
 ;============================================
"RTN","PXRMFFAT",50,0)
VALUE(AN) ;
"RTN","PXRMFFAT",51,0)
 Q $S(AN=1:"F",AN=2:"N",AN=3:"S",1:"U")
"RTN","PXRMFFAT",52,0)
 ;
"RTN","PXRMFFDB")
0^135^B50297267
"RTN","PXRMFFDB",1,0)
PXRMFFDB ;SLC/PKR - Function finding data structure builder. ;06/22/2006
"RTN","PXRMFFDB",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMFFDB",3,0)
 ;
"RTN","PXRMFFDB",4,0)
 ;===========================================
"RTN","PXRMFFDB",5,0)
BASE2(NUM) ;Convert a base 10 integer to base 2.
"RTN","PXRMFFDB",6,0)
 N BD,BIN
"RTN","PXRMFFDB",7,0)
 S BIN=""
"RTN","PXRMFFDB",8,0)
 F  Q:NUM=0  D
"RTN","PXRMFFDB",9,0)
 . S BD=$S((NUM\2)=(NUM/2):0,1:1)
"RTN","PXRMFFDB",10,0)
 . S BIN=BD_BIN,NUM=NUM\2
"RTN","PXRMFFDB",11,0)
 Q BIN
"RTN","PXRMFFDB",12,0)
 ;
"RTN","PXRMFFDB",13,0)
 ;===========================================
"RTN","PXRMFFDB",14,0)
CRESLOG(NUM,FLIST,RESLOG) ;Check the resolution logic to see if
"RTN","PXRMFFDB",15,0)
 ;it can be made true solely by function findings. If that is the case
"RTN","PXRMFFDB",16,0)
 ;warn the user. Called by BLDRESLS^PXRMLOGX
"RTN","PXRMFFDB",17,0)
 N AGEFI,BP,FI,FF,FFL,IND,JND,KND,LE,LEN,LND,NFF,NTC,SEXFI,TEMP,VALUE
"RTN","PXRMFFDB",18,0)
 S (AGEFI,SEXFI)=0
"RTN","PXRMFFDB",19,0)
 S NFF=0
"RTN","PXRMFFDB",20,0)
 F IND=1:1:NUM D
"RTN","PXRMFFDB",21,0)
 . S JND=$P(FLIST,";",IND)
"RTN","PXRMFFDB",22,0)
 . I +JND=JND S FI(JND)=0 Q
"RTN","PXRMFFDB",23,0)
 . I JND["FF" S NFF=NFF+1,FF=$P(JND,"FF",2),FFL(NFF)=FF
"RTN","PXRMFFDB",24,0)
 I NFF=0 Q
"RTN","PXRMFFDB",25,0)
 ;Generate and test all combinations of true and false FFs.
"RTN","PXRMFFDB",26,0)
 S VALUE=0
"RTN","PXRMFFDB",27,0)
 S NTC=$$PWR^XLFMTH(2,NFF)-1
"RTN","PXRMFFDB",28,0)
 F IND=1:1:NTC Q:VALUE  D
"RTN","PXRMFFDB",29,0)
 . S BIN=$$BASE2(IND)
"RTN","PXRMFFDB",30,0)
 . S LEN=$L(BIN)
"RTN","PXRMFFDB",31,0)
 . S LE=NFF-LEN
"RTN","PXRMFFDB",32,0)
 .;Fill in the values for the implied preceeding 0s.
"RTN","PXRMFFDB",33,0)
 . F JND=1:1:LE S KND=FFL(JND),FF(KND)=0
"RTN","PXRMFFDB",34,0)
 . S LND=0
"RTN","PXRMFFDB",35,0)
 . F JND=LE+1:1:NFF D
"RTN","PXRMFFDB",36,0)
 .. S KND=FFL(JND),LND=LND+1
"RTN","PXRMFFDB",37,0)
 .. S FF(KND)=$E(BIN,LND)
"RTN","PXRMFFDB",38,0)
 . I @RESLOG
"RTN","PXRMFFDB",39,0)
 . S VALUE=$T
"RTN","PXRMFFDB",40,0)
 I VALUE D
"RTN","PXRMFFDB",41,0)
 . N RESLSTR
"RTN","PXRMFFDB",42,0)
 . S RESLSTR=RESLOG
"RTN","PXRMFFDB",43,0)
 . F IND=1:1:NUM D
"RTN","PXRMFFDB",44,0)
 .. S JND=$P(FLIST,";",IND)
"RTN","PXRMFFDB",45,0)
 .. S TEMP=$S(JND["FF":"FF("_$P(JND,"FF",2)_")",1:"FI("_JND_")")
"RTN","PXRMFFDB",46,0)
 .. S RESLOG=$$STRREP^PXRMUTIL(RESLOG,TEMP,@TEMP)
"RTN","PXRMFFDB",47,0)
 . S RESLOG=$$STRREP^PXRMUTIL(RESLOG,"AGE",AGEFI)
"RTN","PXRMFFDB",48,0)
 . S RESLOG=$$STRREP^PXRMUTIL(RESLOG,"SEX",SEXFI)
"RTN","PXRMFFDB",49,0)
 . W !!,"Warning - your resolution logic can be satisfied by function findings only."
"RTN","PXRMFFDB",50,0)
 . W !,"If this happens it will not be possible to calculate a resolution date and"
"RTN","PXRMFFDB",51,0)
 . W !,"the reminder will not be resolved. Here is a case where the logic evaluates"
"RTN","PXRMFFDB",52,0)
 . W !,"to true:"
"RTN","PXRMFFDB",53,0)
 . W !,RESLSTR
"RTN","PXRMFFDB",54,0)
 . W !,RESLOG
"RTN","PXRMFFDB",55,0)
 . W !
"RTN","PXRMFFDB",56,0)
 Q
"RTN","PXRMFFDB",57,0)
 ;
"RTN","PXRMFFDB",58,0)
 ;=============================================================
"RTN","PXRMFFDB",59,0)
FFBUILD(X,DA) ;Given a function finding logical string build the data
"RTN","PXRMFFDB",60,0)
 ;structure. This is called by a new-style cross-reference after
"RTN","PXRMFFDB",61,0)
 ;the function string has passed the input transform so we don't need
"RTN","PXRMFFDB",62,0)
 ;to validate the elements.
"RTN","PXRMFFDB",63,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMFFDB",64,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMFFDB",65,0)
 ;Do not execute as part of exchange.
"RTN","PXRMFFDB",66,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMFFDB",67,0)
 N FDA,FUNNUM,FUNP,IENB,IENS,IND,JND,L2,L3,LEN,LIST,LOGIC,OPER,MSG
"RTN","PXRMFFDB",68,0)
 N PFSTACK,REPL,RS,TEMP,TS,XS
"RTN","PXRMFFDB",69,0)
 S IENB=DA_","_DA(1)_","
"RTN","PXRMFFDB",70,0)
 S OPER="!&<>='"
"RTN","PXRMFFDB",71,0)
 S XS=$$PSPACE(X)
"RTN","PXRMFFDB",72,0)
 D POSTFIX^PXRMSTAC(XS,OPER,.PFSTACK)
"RTN","PXRMFFDB",73,0)
 S (FUNNUM,L2)=0
"RTN","PXRMFFDB",74,0)
 F IND=1:1:PFSTACK(0) D
"RTN","PXRMFFDB",75,0)
 . S TEMP=PFSTACK(IND)
"RTN","PXRMFFDB",76,0)
 . I $D(^PXRMD(802.4,"B",TEMP)) D
"RTN","PXRMFFDB",77,0)
 .. S FUNP=$O(^PXRMD(802.4,"B",TEMP,""))
"RTN","PXRMFFDB",78,0)
 .. S FUNNUM=FUNNUM+1,L2=L2+1
"RTN","PXRMFFDB",79,0)
 .. S IENS="+"_L2_","_IENB
"RTN","PXRMFFDB",80,0)
 .. S FDA(811.9255,IENS,.01)=FUNNUM
"RTN","PXRMFFDB",81,0)
 .. S FDA(811.9255,IENS,.02)=FUNP
"RTN","PXRMFFDB",82,0)
 .. S IND=IND+1
"RTN","PXRMFFDB",83,0)
 .. S LIST=$TR(PFSTACK(IND),"~"," ")
"RTN","PXRMFFDB",84,0)
 .. S REPL(FUNNUM)=TEMP_"("_LIST_")"_U_"FN("_FUNNUM_")"
"RTN","PXRMFFDB",85,0)
 .. S L3=L2
"RTN","PXRMFFDB",86,0)
 .. S LEN=$L(LIST,",")
"RTN","PXRMFFDB",87,0)
 .. F JND=1:1:LEN D
"RTN","PXRMFFDB",88,0)
 ... S L3=L3+1
"RTN","PXRMFFDB",89,0)
 ... S IENS="+"_L3_",+"_L2_","_IENB
"RTN","PXRMFFDB",90,0)
 ... S TS=$P(LIST,",",JND)
"RTN","PXRMFFDB",91,0)
 ... S TS=$TR(TS,"""","")
"RTN","PXRMFFDB",92,0)
 ... S FDA(811.9256,IENS,.01)=TS
"RTN","PXRMFFDB",93,0)
 .. S L2=L3
"RTN","PXRMFFDB",94,0)
 ;Build the logic string
"RTN","PXRMFFDB",95,0)
 S LOGIC=X
"RTN","PXRMFFDB",96,0)
 F IND=1:1:FUNNUM D
"RTN","PXRMFFDB",97,0)
 . S TS=$P(REPL(IND),U,1)
"RTN","PXRMFFDB",98,0)
 . S RS=$P(REPL(IND),U,2)
"RTN","PXRMFFDB",99,0)
 . S LOGIC=$$STRREP^PXRMUTIL(LOGIC,TS,RS)
"RTN","PXRMFFDB",100,0)
 S FDA(811.925,IENB,10)=LOGIC
"RTN","PXRMFFDB",101,0)
 D UPDATE^DIE("","FDA","IENB","MSG")
"RTN","PXRMFFDB",102,0)
 I $D(MSG) D
"RTN","PXRMFFDB",103,0)
 . W !,"The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMFFDB",104,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMFFDB",105,0)
 Q
"RTN","PXRMFFDB",106,0)
 ;
"RTN","PXRMFFDB",107,0)
 ;=============================================================
"RTN","PXRMFFDB",108,0)
FFKILL(X,DA) ;This is the kill logic for the function string.
"RTN","PXRMFFDB",109,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMFFDB",110,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMFFDB",111,0)
 ;Do not execute as part of exchange.
"RTN","PXRMFFDB",112,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMFFDB",113,0)
 K ^PXD(811.9,DA(1),25,DA,5),^PXD(811.9,DA(1),25,DA,10)
"RTN","PXRMFFDB",114,0)
 Q
"RTN","PXRMFFDB",115,0)
 ;
"RTN","PXRMFFDB",116,0)
 ;=============================================================
"RTN","PXRMFFDB",117,0)
ISGRV(VAR) ;Return true if VAR is a global reminder variable.
"RTN","PXRMFFDB",118,0)
 I VAR="PXRMAGE" Q 1
"RTN","PXRMFFDB",119,0)
 I VAR="PXRMDOB" Q 1
"RTN","PXRMFFDB",120,0)
 I VAR="PXRMLAD" Q 1
"RTN","PXRMFFDB",121,0)
 I VAR="PXRMSEX" Q 1
"RTN","PXRMFFDB",122,0)
 Q 0
"RTN","PXRMFFDB",123,0)
 ;
"RTN","PXRMFFDB",124,0)
 ;=============================================================
"RTN","PXRMFFDB",125,0)
ISSTR(STRING) ;Return true if STRING really is a string and it is not
"RTN","PXRMFFDB",126,0)
 ;executable Mumps code.
"RTN","PXRMFFDB",127,0)
 N VALID,X
"RTN","PXRMFFDB",128,0)
 S VALID=0
"RTN","PXRMFFDB",129,0)
 ;Valid strings are "text" or because of $P ,"text" or ",U".
"RTN","PXRMFFDB",130,0)
 I $E(STRING,1)="""",$E(STRING,$L(STRING))="""" S VALID=1
"RTN","PXRMFFDB",131,0)
 I 'VALID,$E(STRING,1)=",",$E(STRING,2)="""",$E(STRING,$L(STRING))="""" S VALID=1
"RTN","PXRMFFDB",132,0)
 I 'VALID,STRING=",U" S VALID=1
"RTN","PXRMFFDB",133,0)
 I 'VALID Q VALID
"RTN","PXRMFFDB",134,0)
 S X=STRING
"RTN","PXRMFFDB",135,0)
 D ^DIM
"RTN","PXRMFFDB",136,0)
 S VALID=$S($D(X)=0:1,1:0)
"RTN","PXRMFFDB",137,0)
 Q VALID
"RTN","PXRMFFDB",138,0)
 ;
"RTN","PXRMFFDB",139,0)
 ;=============================================================
"RTN","PXRMFFDB",140,0)
PSPACE(OPR) ;OPR is an operand in a function finding, if some portion
"RTN","PXRMFFDB",141,0)
 ;of OPR is a string translate a space into "~" so it is preserved.
"RTN","PXRMFFDB",142,0)
 N END,START,TNS,TS
"RTN","PXRMFFDB",143,0)
 S START=$F(OPR,"""")
"RTN","PXRMFFDB",144,0)
 I START=0 Q OPR
"RTN","PXRMFFDB",145,0)
 S END=$F(OPR,"""",START)-2
"RTN","PXRMFFDB",146,0)
 S TS=$E(OPR,START,END)
"RTN","PXRMFFDB",147,0)
 S TNS=$TR(TS," ","~")
"RTN","PXRMFFDB",148,0)
 S OPR=$$STRREP^PXRMUTIL(OPR,TS,TNS)
"RTN","PXRMFFDB",149,0)
 Q OPR
"RTN","PXRMFFDB",150,0)
 ;
"RTN","PXRMFFDB",151,0)
 ;=============================================================
"RTN","PXRMFFDB",152,0)
VFFORM(TEMP,X) ;Make sure the function has a valid form, i.e., function
"RTN","PXRMFFDB",153,0)
 ;followed by an argument list.
"RTN","PXRMFFDB",154,0)
 N DONE,LP,RP,START,VALID
"RTN","PXRMFFDB",155,0)
 S DONE=0,VALID=1,START=0
"RTN","PXRMFFDB",156,0)
 F  Q:DONE  D
"RTN","PXRMFFDB",157,0)
 . S START=$F(X,TEMP,START)
"RTN","PXRMFFDB",158,0)
 . I START=0 S DONE=1 Q
"RTN","PXRMFFDB",159,0)
 . S LP=$E(X,START)
"RTN","PXRMFFDB",160,0)
 . I LP'="(" S VALID=0,DONE=1 Q
"RTN","PXRMFFDB",161,0)
 . S START=$F(X,")",START)
"RTN","PXRMFFDB",162,0)
 . S RP=$E(X,START-1)
"RTN","PXRMFFDB",163,0)
 . I RP'=")" S VALID=0
"RTN","PXRMFFDB",164,0)
 I 'VALID D
"RTN","PXRMFFDB",165,0)
 . N TEXT
"RTN","PXRMFFDB",166,0)
 . S TEXT="Function "_TEMP_" must be followed by an argument list!"
"RTN","PXRMFFDB",167,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMFFDB",168,0)
 Q VALID
"RTN","PXRMFFDB",169,0)
 ;
"RTN","PXRMFFDB",170,0)
 ;=============================================================
"RTN","PXRMFFDB",171,0)
VFINDING(X,DAI) ;Make sure a finding number is a valid member of the
"RTN","PXRMFFDB",172,0)
 ;definition finding multiple. Input transform for function
"RTN","PXRMFFDB",173,0)
 ;finding finding number.
"RTN","PXRMFFDB",174,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMFFDB",175,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMFFDB",176,0)
 ;Do not execute as part of exchange.
"RTN","PXRMFFDB",177,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMFFDB",178,0)
 I '$D(DAI) Q 1
"RTN","PXRMFFDB",179,0)
 ;If X is not numeric it is not a finding number.
"RTN","PXRMFFDB",180,0)
 I +X'=X Q 1
"RTN","PXRMFFDB",181,0)
 I $D(^PXD(811.9,DAI,20,X,0)) Q 1
"RTN","PXRMFFDB",182,0)
 E  D  Q 0
"RTN","PXRMFFDB",183,0)
 . N TEXT
"RTN","PXRMFFDB",184,0)
 . S TEXT="Finding number "_X_" does not exist!"
"RTN","PXRMFFDB",185,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMFFDB",186,0)
 ;
"RTN","PXRMFFDB",187,0)
 ;=============================================================
"RTN","PXRMFFDB",188,0)
VFSTRING(FFSTRING,DA) ;Make sure a function finding string is valid.
"RTN","PXRMFFDB",189,0)
 ;The elements can be functions, operators, and numbers.
"RTN","PXRMFFDB",190,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMFFDB",191,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMFFDB",192,0)
 ;Do not execute as part of exchange.
"RTN","PXRMFFDB",193,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMFFDB",194,0)
 I '$D(DA) Q 1
"RTN","PXRMFFDB",195,0)
 N DAI,DATE,FUNIEN,IND,LIST,MFUN,OPER,PFSTACK,TEMP,TEXT,VALID
"RTN","PXRMFFDB",196,0)
 S DAI=DA(1)
"RTN","PXRMFFDB",197,0)
 S OPER="!&<>='"
"RTN","PXRMFFDB",198,0)
 ;Define the allowed M functions.
"RTN","PXRMFFDB",199,0)
 S MFUN("$P")=""
"RTN","PXRMFFDB",200,0)
 D POSTFIX^PXRMSTAC(FFSTRING,OPER,.PFSTACK)
"RTN","PXRMFFDB",201,0)
 S VALID=1
"RTN","PXRMFFDB",202,0)
 F IND=1:1:PFSTACK(0) Q:'VALID  D
"RTN","PXRMFFDB",203,0)
 . S TEMP=PFSTACK(IND)
"RTN","PXRMFFDB",204,0)
 . I $D(^PXRMD(802.4,"B",TEMP)) D  Q
"RTN","PXRMFFDB",205,0)
 .. S VALID=$$VFFORM(TEMP,X)
"RTN","PXRMFFDB",206,0)
 .. I 'VALID Q
"RTN","PXRMFFDB",207,0)
 .. S FUNIEN=$O(^PXRMD(802.4,"B",TEMP,""))
"RTN","PXRMFFDB",208,0)
 .. S IND=IND+1
"RTN","PXRMFFDB",209,0)
 .. S LIST=$G(PFSTACK(IND))
"RTN","PXRMFFDB",210,0)
 .. S VALID=$$VLIST(LIST,DAI,TEMP,FUNIEN)
"RTN","PXRMFFDB",211,0)
 .;Check for operator
"RTN","PXRMFFDB",212,0)
 . I OPER[TEMP Q
"RTN","PXRMFFDB",213,0)
 .;Check for number
"RTN","PXRMFFDB",214,0)
 . I TEMP=+TEMP Q
"RTN","PXRMFFDB",215,0)
 .;Check for allowed M function.
"RTN","PXRMFFDB",216,0)
 . I $D(MFUN(TEMP)) Q
"RTN","PXRMFFDB",217,0)
 .;Check for a global reminder variable
"RTN","PXRMFFDB",218,0)
 . I $$ISGRV(TEMP) Q
"RTN","PXRMFFDB",219,0)
 .;Check for a non-executable string.
"RTN","PXRMFFDB",220,0)
 . I $$ISSTR(TEMP) Q
"RTN","PXRMFFDB",221,0)
 . S VALID=0
"RTN","PXRMFFDB",222,0)
 . S TEXT=TEMP_" is not a valid Function Finding element!"
"RTN","PXRMFFDB",223,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMFFDB",224,0)
 I VALID D
"RTN","PXRMFFDB",225,0)
 . N X
"RTN","PXRMFFDB",226,0)
 . S X="I "_FFSTRING
"RTN","PXRMFFDB",227,0)
 . D ^DIM
"RTN","PXRMFFDB",228,0)
 . I $D(X)=0 S VALID=0
"RTN","PXRMFFDB",229,0)
 I 'VALID D
"RTN","PXRMFFDB",230,0)
 . S TEMP=FFSTRING_" is not a valid function string"
"RTN","PXRMFFDB",231,0)
 . D EN^DDIOL(TEMP)
"RTN","PXRMFFDB",232,0)
 Q VALID
"RTN","PXRMFFDB",233,0)
 ;
"RTN","PXRMFFDB",234,0)
 ;=============================================================
"RTN","PXRMFFDB",235,0)
VLIST(LIST,DAI,FUNCTION,FUNIEN) ;Make sure the function argument list
"RTN","PXRMFFDB",236,0)
 ;is valid.
"RTN","PXRMFFDB",237,0)
 N AT,IND,LEN,PATTERN,VALID,X
"RTN","PXRMFFDB",238,0)
 S LEN=$L(LIST,",")
"RTN","PXRMFFDB",239,0)
 I LEN=0 D  Q 0
"RTN","PXRMFFDB",240,0)
 . N TEXT
"RTN","PXRMFFDB",241,0)
 . S TEXT="The argument list is not defined!"
"RTN","PXRMFFDB",242,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMFFDB",243,0)
 S PATTERN=$P(^PXRMD(802.4,FUNIEN,0),U,5)
"RTN","PXRMFFDB",244,0)
 S VALID=$S(LIST?@PATTERN:1,1:0)
"RTN","PXRMFFDB",245,0)
 I 'VALID D  Q 0
"RTN","PXRMFFDB",246,0)
 . N TEXT
"RTN","PXRMFFDB",247,0)
 . S TEXT="Argument list "_LIST_" is not correct for function "_$P(^PXRMD(802.4,FUNIEN,0),U,1)
"RTN","PXRMFFDB",248,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMFFDB",249,0)
 F IND=1:1:LEN D
"RTN","PXRMFFDB",250,0)
 . S X=$P(LIST,",",IND)
"RTN","PXRMFFDB",251,0)
 . S AT=$$ARGTYPE^PXRMFFAT(FUNCTION,IND)
"RTN","PXRMFFDB",252,0)
 . I AT="U" S VALID=0 Q
"RTN","PXRMFFDB",253,0)
 . I AT="F",'$$VFINDING(X,DAI) S VALID=0
"RTN","PXRMFFDB",254,0)
 Q VALID
"RTN","PXRMFFDB",255,0)
 ;
"RTN","PXRMFNFT")
0^117^B38705516
"RTN","PXRMFNFT",1,0)
PXRMFNFT ; SLC/PKR - Process found/not found text. ;10/05/2005
"RTN","PXRMFNFT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMFNFT",3,0)
 ;
"RTN","PXRMFNFT",4,0)
 ;===================================================
"RTN","PXRMFNFT",5,0)
AGE(DFN,DEFARR,FIEVAL,NTXT) ;Output the age match/no match
"RTN","PXRMFNFT",6,0)
 ;text.
"RTN","PXRMFNFT",7,0)
 N CTIUO,FI,IC,LC,NIN,NLINES,TEXT,TEXTIN
"RTN","PXRMFNFT",8,0)
 I '$D(FIEVAL("AGE")) Q
"RTN","PXRMFNFT",9,0)
 S NLINES=0
"RTN","PXRMFNFT",10,0)
 S IC=""
"RTN","PXRMFNFT",11,0)
 F  S IC=$O(FIEVAL("AGE",IC)) Q:IC=""  D
"RTN","PXRMFNFT",12,0)
 . S FI=$S(FIEVAL("AGE",IC):1,1:2)
"RTN","PXRMFNFT",13,0)
 . S NIN=$P(DEFARR(7,IC,3),U,FI)
"RTN","PXRMFNFT",14,0)
 . I +NIN=0 Q
"RTN","PXRMFNFT",15,0)
 . K TEXTIN
"RTN","PXRMFNFT",16,0)
 .;If CTIUO is true the text contains a TIU object.
"RTN","PXRMFNFT",17,0)
 . S CTIUO=$S(NIN["T":1,1:0)
"RTN","PXRMFNFT",18,0)
 . I CTIUO D
"RTN","PXRMFNFT",19,0)
 .. N VSTR S VSTR=""
"RTN","PXRMFNFT",20,0)
 ..;TIU expansion expects the trailing 0, i.e. TEXTIN(N,0).
"RTN","PXRMFNFT",21,0)
 .. F LC=1:1:+NIN S TEXTIN(LC,0)=^PXD(811.9,PXRMITEM,7,IC,FI,LC,0)
"RTN","PXRMFNFT",22,0)
 .. S NIN=NIN+1,TEXTIN(NIN,0)="\\"
"RTN","PXRMFNFT",23,0)
 .. D FNFTXTO(1,DFN,"TEXTIN",VSTR,.NLINES,.TEXT)
"RTN","PXRMFNFT",24,0)
 . I 'CTIUO D
"RTN","PXRMFNFT",25,0)
 .. F LC=1:1:NIN S TEXTIN(LC)=^PXD(811.9,PXRMITEM,7,IC,FI,LC,0)
"RTN","PXRMFNFT",26,0)
 .. S NIN=NIN+1,TEXTIN(NIN)="\\"
"RTN","PXRMFNFT",27,0)
 .. D FNFTXTR(1,NIN,.TEXTIN,.NLINES,.TEXT)
"RTN","PXRMFNFT",28,0)
 D COPYTXT^PXRMOUTU(.NTXT,NLINES,.TEXT)
"RTN","PXRMFNFT",29,0)
 Q
"RTN","PXRMFNFT",30,0)
 ;
"RTN","PXRMFNFT",31,0)
 ;===================================================
"RTN","PXRMFNFT",32,0)
FINDING(INDENT,DFN,FINDING,IFIEVAL,NLINES,TEXT) ;Output the finding found/not
"RTN","PXRMFNFT",33,0)
 ;found text.
"RTN","PXRMFNFT",34,0)
 N CTIUO,FI,LC,NIN,NODE,TEMP,TEXTIN
"RTN","PXRMFNFT",35,0)
 S FI=$S(IFIEVAL:1,1:2)
"RTN","PXRMFNFT",36,0)
 S NODE=$S(FINDING["FF":25,1:20)
"RTN","PXRMFNFT",37,0)
 S TEMP=$G(DEFARR(NODE,FINDING,6))
"RTN","PXRMFNFT",38,0)
 S NIN=$P(TEMP,U,FI)
"RTN","PXRMFNFT",39,0)
 I +NIN=0 Q
"RTN","PXRMFNFT",40,0)
 I FINDING["FF" S FINDING=$P(FINDING,"FF",2)
"RTN","PXRMFNFT",41,0)
 S CTIUO=$S(NIN["T":1,1:0)
"RTN","PXRMFNFT",42,0)
 I CTIUO D
"RTN","PXRMFNFT",43,0)
 . S NIN=+NIN
"RTN","PXRMFNFT",44,0)
 . N VSTR
"RTN","PXRMFNFT",45,0)
 .;TIU expansion expects the trailing 0, i.e. TEXTIN(N,0).
"RTN","PXRMFNFT",46,0)
 . F LC=1:1:+NIN S TEXTIN(LC,0)=^PXD(811.9,PXRMITEM,NODE,FINDING,FI,LC,0)
"RTN","PXRMFNFT",47,0)
 . I $D(IFIEVAL("VISIT")) D
"RTN","PXRMFNFT",48,0)
 .. N TEMP,VDATE,VLOC,VSC
"RTN","PXRMFNFT",49,0)
 .. S TEMP=^AUPNVSIT(IFIEVAL("VISIT"),0)
"RTN","PXRMFNFT",50,0)
 .. S VDATE=$P(TEMP,U,1)
"RTN","PXRMFNFT",51,0)
 .. S VLOC=$P(TEMP,U,22)
"RTN","PXRMFNFT",52,0)
 .. S VSC=$P(TEMP,U,7)
"RTN","PXRMFNFT",53,0)
 .. S VSTR=VLOC_";"_VDATE_";"_VSC
"RTN","PXRMFNFT",54,0)
 . E  S VSTR=""
"RTN","PXRMFNFT",55,0)
 . S NIN=NIN+1,TEXTIN(NIN,0)="\\"
"RTN","PXRMFNFT",56,0)
 . D FNFTXTO(INDENT,DFN,"TEXTIN",VSTR,.NLINES,.TEXT)
"RTN","PXRMFNFT",57,0)
 I 'CTIUO D
"RTN","PXRMFNFT",58,0)
 . F LC=1:1:NIN S TEXTIN(LC)=^PXD(811.9,PXRMITEM,NODE,FINDING,FI,LC,0)
"RTN","PXRMFNFT",59,0)
 . S NIN=NIN+1,TEXTIN(NIN)="\\"
"RTN","PXRMFNFT",60,0)
 . D FNFTXTR(INDENT,NIN,.TEXTIN,.NLINES,.TEXT)
"RTN","PXRMFNFT",61,0)
 Q
"RTN","PXRMFNFT",62,0)
 ;
"RTN","PXRMFNFT",63,0)
 ;===================================================
"RTN","PXRMFNFT",64,0)
FNFTXTO(INDENT,DFN,FNFGBL,VSTR,NLINES,TEXT) ;Load found/not found text
"RTN","PXRMFNFT",65,0)
 ;that contains TIU objects.
"RTN","PXRMFNFT",66,0)
 N OBJECT,LC,NUML,TA
"RTN","PXRMFNFT",67,0)
 ;Make sure this works if it is being called a part of an object.
"RTN","PXRMFNFT",68,0)
 I $D(^TMP("TIUBOIL",$J)) D
"RTN","PXRMFNFT",69,0)
 . K ^TMP("PXRMTIUBOIL",$J)
"RTN","PXRMFNFT",70,0)
 . M ^TMP("PXRMTIUBOIL",$J)=^TMP("TIUBOIL",$J)
"RTN","PXRMFNFT",71,0)
 . S OBJECT=1
"RTN","PXRMFNFT",72,0)
 E  S OBJECT=0
"RTN","PXRMFNFT",73,0)
 K ^TMP("TIUBOIL",$J)
"RTN","PXRMFNFT",74,0)
 D BLRPLT^TIUSRVD(.TA,"",DFN,VSTR,FNFGBL)
"RTN","PXRMFNFT",75,0)
 S NUML=$P(^TMP("TIUBOIL",$J,0),U,3)
"RTN","PXRMFNFT",76,0)
 I NUML=0 D  Q
"RTN","PXRMFNFT",77,0)
 . K ^TMP("TIUBOIL",$J)
"RTN","PXRMFNFT",78,0)
 . I OBJECT M ^TMP("TIUBOIL",$J)=^TMP("PXRMTIUBOIL",$J)
"RTN","PXRMFNFT",79,0)
 . K ^TMP("PXRMTIUBOIL",$J)
"RTN","PXRMFNFT",80,0)
 N NOUT,TEXTIN,TEXTOUT
"RTN","PXRMFNFT",81,0)
 F LC=1:1:NUML S TEXTIN(LC)=^TMP("TIUBOIL",$J,LC,0)
"RTN","PXRMFNFT",82,0)
 D FORMAT^PXRMTEXT(INDENT,PXRMRM,NUML,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMFNFT",83,0)
 F LC=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(LC)
"RTN","PXRMFNFT",84,0)
 K ^TMP("TIUBOIL",$J)
"RTN","PXRMFNFT",85,0)
 I OBJECT M ^TMP("TIUBOIL",$J)=^TMP("PXRMTIUBOIL",$J) K ^TMP("PXRMTIUBOIL",$J)
"RTN","PXRMFNFT",86,0)
 Q
"RTN","PXRMFNFT",87,0)
 ;
"RTN","PXRMFNFT",88,0)
 ;===================================================
"RTN","PXRMFNFT",89,0)
FNFTXTR(INDENT,NIN,TEXTIN,NLINES,TEXT) ;Load regular found/not found text
"RTN","PXRMFNFT",90,0)
 ;that does not contain TIU objects.
"RTN","PXRMFNFT",91,0)
 N JND,NOUT,TEXTOUT
"RTN","PXRMFNFT",92,0)
 D FORMAT^PXRMTEXT(INDENT,PXRMRM,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMFNFT",93,0)
 F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMFNFT",94,0)
 Q
"RTN","PXRMFNFT",95,0)
 ;
"RTN","PXRMFNFT",96,0)
 ;===================================================
"RTN","PXRMFNFT",97,0)
LOGIC(DFN,LOGSTR,LOGTYPE,TTYPE,DEFARR,NTXT) ;Output the detailed
"RTN","PXRMFNFT",98,0)
 ;logic found/not found text.
"RTN","PXRMFNFT",99,0)
 I LOGSTR="" Q
"RTN","PXRMFNFT",100,0)
 N CTIUO,FI,LC,NIN,NLINES,SUB,TEXT,TEXTIN
"RTN","PXRMFNFT",101,0)
 I TTYPE="S" S NIN=$S(LOGTYPE="PCL":DEFARR(72),LOGTYPE="RES":DEFARR(77),1:0)
"RTN","PXRMFNFT",102,0)
 E  S NIN=$S(LOGTYPE="PCL":DEFARR(62),LOGTYPE="RES":DEFARR(67),1:0)
"RTN","PXRMFNFT",103,0)
 I NIN="" Q
"RTN","PXRMFNFT",104,0)
 S FI=$P(LOGSTR,U,1)
"RTN","PXRMFNFT",105,0)
 S NIN=$S(FI=1:$P(NIN,U,1),FI=0:$P(NIN,U,2),1:0)
"RTN","PXRMFNFT",106,0)
 I +NIN=0 Q
"RTN","PXRMFNFT",107,0)
 I TTYPE="S" D
"RTN","PXRMFNFT",108,0)
 . I LOGTYPE="PCL",FI=1 S SUB=70
"RTN","PXRMFNFT",109,0)
 . I LOGTYPE="PCL",FI=0 S SUB=71
"RTN","PXRMFNFT",110,0)
 . I LOGTYPE="RES",FI=1 S SUB=75
"RTN","PXRMFNFT",111,0)
 . I LOGTYPE="RES",FI=0 S SUB=76
"RTN","PXRMFNFT",112,0)
 E  D
"RTN","PXRMFNFT",113,0)
 . I LOGTYPE="PCL",FI=1 S SUB=60
"RTN","PXRMFNFT",114,0)
 . I LOGTYPE="PCL",FI=0 S SUB=61
"RTN","PXRMFNFT",115,0)
 . I LOGTYPE="RES",FI=1 S SUB=65
"RTN","PXRMFNFT",116,0)
 . I LOGTYPE="RES",FI=0 S SUB=66
"RTN","PXRMFNFT",117,0)
 S NLINES=0
"RTN","PXRMFNFT",118,0)
 S CTIUO=$S(NIN["T":1,1:0)
"RTN","PXRMFNFT",119,0)
 I CTIUO D
"RTN","PXRMFNFT",120,0)
 . N VSTR S VSTR=""
"RTN","PXRMFNFT",121,0)
 .;TIU expansion expects the trailing 0, i.e. TEXTIN(N,0).
"RTN","PXRMFNFT",122,0)
 . F LC=1:1:+NIN S TEXTIN(LC,0)=^PXD(811.9,PXRMITEM,SUB,LC,0)
"RTN","PXRMFNFT",123,0)
 . S NIN=NIN+1,TEXTIN(NIN,0)="\\"
"RTN","PXRMFNFT",124,0)
 . D FNFTXTO(1,DFN,"TEXTIN",VSTR,.NLINES,.TEXT)
"RTN","PXRMFNFT",125,0)
 I 'CTIUO D
"RTN","PXRMFNFT",126,0)
 . F LC=1:1:NIN S TEXTIN(LC)=^PXD(811.9,PXRMITEM,SUB,LC,0)
"RTN","PXRMFNFT",127,0)
 . S NIN=NIN+1,TEXTIN(NIN)="\\"
"RTN","PXRMFNFT",128,0)
 . D FNFTXTR(1,NIN,.TEXTIN,.NLINES,.TEXT)
"RTN","PXRMFNFT",129,0)
 D COPYTXT^PXRMOUTU(.NTXT,NLINES,.TEXT)
"RTN","PXRMFNFT",130,0)
 Q
"RTN","PXRMFNFT",131,0)
 ;
"RTN","PXRMFNFT",132,0)
 ;===================================================
"RTN","PXRMFNFT",133,0)
SNMLA(RIEN) ;Set the number of match lines for the age match text.
"RTN","PXRMFNFT",134,0)
 N IND,JND,LC,MATCHLC,NBAR,RES
"RTN","PXRMFNFT",135,0)
 S IND=0
"RTN","PXRMFNFT",136,0)
 F  S IND=+$O(^PXD(811.9,RIEN,7,IND)) Q:IND=0  D
"RTN","PXRMFNFT",137,0)
 .;Age match text
"RTN","PXRMFNFT",138,0)
 . S (JND,LC,NBAR)=0
"RTN","PXRMFNFT",139,0)
 . F  S JND=$O(^PXD(811.9,RIEN,7,IND,1,JND)) Q:JND=""  D
"RTN","PXRMFNFT",140,0)
 .. S NBAR=NBAR+$L(^PXD(811.9,RIEN,7,IND,1,JND,0),"|")-1
"RTN","PXRMFNFT",141,0)
 .. S LC=LC+1
"RTN","PXRMFNFT",142,0)
 .. I NBAR>1 S LC=LC_"T"
"RTN","PXRMFNFT",143,0)
 . S MATCHLC=LC
"RTN","PXRMFNFT",144,0)
 .;Age no match text
"RTN","PXRMFNFT",145,0)
 . S (JND,LC,NBAR)=0
"RTN","PXRMFNFT",146,0)
 . F  S JND=$O(^PXD(811.9,RIEN,7,IND,2,JND)) Q:JND=""  D
"RTN","PXRMFNFT",147,0)
 .. S NBAR=NBAR+$L(^PXD(811.9,RIEN,7,IND,2,JND,0),"|")-1
"RTN","PXRMFNFT",148,0)
 .. S LC=LC+1
"RTN","PXRMFNFT",149,0)
 .. I NBAR>1 S LC=LC_"T"
"RTN","PXRMFNFT",150,0)
 . S ^PXD(811.9,RIEN,7,IND,3)=MATCHLC_U_LC
"RTN","PXRMFNFT",151,0)
 Q
"RTN","PXRMFNFT",152,0)
 ;
"RTN","PXRMFNFT",153,0)
 ;===================================================
"RTN","PXRMFNFT",154,0)
SNMLF(RIEN,NODE) ;Set the number of found lines for the found text.
"RTN","PXRMFNFT",155,0)
 ;For regular and functional findings.
"RTN","PXRMFNFT",156,0)
 N FI,IND,JND,LC,NBAR,RES
"RTN","PXRMFNFT",157,0)
 S IND=0
"RTN","PXRMFNFT",158,0)
 F  S IND=+$O(^PXD(811.9,RIEN,NODE,IND)) Q:IND=0  D
"RTN","PXRMFNFT",159,0)
 .;Found text
"RTN","PXRMFNFT",160,0)
 . S (JND,LC,NBAR)=0
"RTN","PXRMFNFT",161,0)
 . F  S JND=$O(^PXD(811.9,RIEN,NODE,IND,1,JND)) Q:JND=""  D
"RTN","PXRMFNFT",162,0)
 .. S NBAR=NBAR+$L(^PXD(811.9,RIEN,NODE,IND,1,JND,0),"|")-1
"RTN","PXRMFNFT",163,0)
 .. S LC=LC+1
"RTN","PXRMFNFT",164,0)
 .. I NBAR>1 S LC=LC_"T"
"RTN","PXRMFNFT",165,0)
 . S FI=LC
"RTN","PXRMFNFT",166,0)
 .;Not found text
"RTN","PXRMFNFT",167,0)
 . S (JND,LC,NBAR)=0
"RTN","PXRMFNFT",168,0)
 . F  S JND=$O(^PXD(811.9,RIEN,NODE,IND,2,JND)) Q:JND=""  D
"RTN","PXRMFNFT",169,0)
 .. S NBAR=NBAR+$L(^PXD(811.9,RIEN,NODE,IND,2,JND,0),"|")-1
"RTN","PXRMFNFT",170,0)
 .. S LC=LC+1
"RTN","PXRMFNFT",171,0)
 .. I NBAR>1 S LC=LC_"T"
"RTN","PXRMFNFT",172,0)
 . S ^PXD(811.9,RIEN,NODE,IND,6)=FI_U_LC
"RTN","PXRMFNFT",173,0)
 Q
"RTN","PXRMFNFT",174,0)
 ;
"RTN","PXRMFNFT",175,0)
 ;===================================================
"RTN","PXRMFNFT",176,0)
SNMLL(RIEN) ;Set the number of lines for the logic found/not found
"RTN","PXRMFNFT",177,0)
 ;text. Append a "T" to the number of lines if the text contains
"RTN","PXRMFNFT",178,0)
 ;a TIU object.
"RTN","PXRMFNFT",179,0)
 N CSTR,IND,LC,NBAR,RES,SUB
"RTN","PXRMFNFT",180,0)
 ;SUB=60 General cohort found text
"RTN","PXRMFNFT",181,0)
 ;SUB=61 General cohort not found text
"RTN","PXRMFNFT",182,0)
 ;SUB=65 General resolution found text
"RTN","PXRMFNFT",183,0)
 ;SUB=66 General resolution not found text
"RTN","PXRMFNFT",184,0)
 ;SUB=70 Summary cohort found text
"RTN","PXRMFNFT",185,0)
 ;SUB=71 Summary cohort not found text
"RTN","PXRMFNFT",186,0)
 ;SUB=75 Summary resolution found text
"RTN","PXRMFNFT",187,0)
 ;SUB=76 Summary resolution not found text
"RTN","PXRMFNFT",188,0)
 F SUB=60,61,65,66,70,71,75,76 D
"RTN","PXRMFNFT",189,0)
 . S (IND,LC,NBAR)=0
"RTN","PXRMFNFT",190,0)
 . F  S IND=$O(^PXD(811.9,RIEN,SUB,IND)) Q:IND=""  D
"RTN","PXRMFNFT",191,0)
 .. S NBAR=NBAR+$L(^PXD(811.9,RIEN,SUB,IND,0),"|")-1
"RTN","PXRMFNFT",192,0)
 .. S LC=LC+1
"RTN","PXRMFNFT",193,0)
 . I NBAR>1 S LC=LC_"T"
"RTN","PXRMFNFT",194,0)
 . I SUB=60 S CSTR=LC
"RTN","PXRMFNFT",195,0)
 . I SUB=61 S ^PXD(811.9,RIEN,62)=CSTR_U_LC
"RTN","PXRMFNFT",196,0)
 . I SUB=65 S CSTR=LC
"RTN","PXRMFNFT",197,0)
 . I SUB=66 S ^PXD(811.9,RIEN,67)=CSTR_U_LC
"RTN","PXRMFNFT",198,0)
 . I SUB=70 S CSTR=LC
"RTN","PXRMFNFT",199,0)
 . I SUB=71 S ^PXD(811.9,RIEN,72)=CSTR_U_LC
"RTN","PXRMFNFT",200,0)
 . I SUB=75 S CSTR=LC
"RTN","PXRMFNFT",201,0)
 . I SUB=76 S ^PXD(811.9,RIEN,77)=CSTR_U_LC
"RTN","PXRMFNFT",202,0)
 Q
"RTN","PXRMFNFT",203,0)
 ;
"RTN","PXRMG2E1")
0^59^B23065425
"RTN","PXRMG2E1",1,0)
PXRMG2E1 ;SLC/JVS -GEC #2 Extract initial arrays  ;7/14/05  08:10
"RTN","PXRMG2E1",2,0)
 ;;2.0;CLINICAL REMINDERS;**2,4**;Feb 04, 2005;Build 21
"RTN","PXRMG2E1",3,0)
 Q
"RTN","PXRMG2E1",4,0)
 ;
"RTN","PXRMG2E1",5,0)
 ;Arrays
"RTN","PXRMG2E1",6,0)
 ;^TMP("PXRMGEC",$J,    = Root Reference
"RTN","PXRMG2E1",7,0)
 ;"REF",DATE,DFN)       = Number of HF in Referral
"RTN","PXRMG2E1",8,0)
 ;"REFDFN",DFN)         = Number of Referrals per Patient
"RTN","PXRMG2E1",9,0)
 ;"HS"                  = Heath Summary Array
"RTN","PXRMG2E1",10,0)
 Q
"RTN","PXRMG2E1",11,0)
GEC ;Get ien for GEC Date Sources
"RTN","PXRMG2E1",12,0)
 S (GEC1DA,GEC2DA,GEC3DA,GECFDA)=0
"RTN","PXRMG2E1",13,0)
 S GECFDA=$O(^PX(839.7,"B","GECF",0))
"RTN","PXRMG2E1",14,0)
 S GEC1DA=$O(^PX(839.7,"B","GEC1",0))
"RTN","PXRMG2E1",15,0)
 S GEC2DA=$O(^PX(839.7,"B","GEC2",0))
"RTN","PXRMG2E1",16,0)
 S GEC3DA=$O(^PX(839.7,"B","GEC3",0))
"RTN","PXRMG2E1",17,0)
 Q
"RTN","PXRMG2E1",18,0)
 ;
"RTN","PXRMG2E1",19,0)
RANG(BDT,EDT,VDT,SDT,CHK) ;Dates are in date range
"RTN","PXRMG2E1",20,0)
 ;S=start date F=finished date
"RTN","PXRMG2E1",21,0)
 N OK,SOK,FOK
"RTN","PXRMG2E1",22,0)
 S (SOK,FOK,OK)=0
"RTN","PXRMG2E1",23,0)
 I CHK["S" D
"RTN","PXRMG2E1",24,0)
 .S:($P(SDT,".",1)'<(BDT))&($P(SDT,".",1)'>(EDT)) SOK=1
"RTN","PXRMG2E1",25,0)
 I CHK["F" D
"RTN","PXRMG2E1",26,0)
 .S:($P(VDT,".",1)'<(BDT))&($P(VDT,".",1)'>(EDT)) FOK=1
"RTN","PXRMG2E1",27,0)
 S OK=$S(SOK=1:1,FOK=1:1,1:0)
"RTN","PXRMG2E1",28,0)
 I CHK["SF"&(SOK+FOK'=2) S OK=0
"RTN","PXRMG2E1",29,0)
 Q OK
"RTN","PXRMG2E1",30,0)
 ;
"RTN","PXRMG2E1",31,0)
FIN(DATE,DFN) ;Check to see if finished
"RTN","PXRMG2E1",32,0)
 N GEC,DA,VST,VDT,DONE
"RTN","PXRMG2E1",33,0)
 S DONE=0,VDT="0000000"
"RTN","PXRMG2E1",34,0)
 S GEC=0 F  S GEC=$O(^AUPNVHF("AED",DATE,DFN,GEC)) Q:GEC=""  D
"RTN","PXRMG2E1",35,0)
 .I GEC=GECFDA S DONE=1 D
"RTN","PXRMG2E1",36,0)
 ..;S DA=$O(^AUPNVHF("AED",DATE,DFN,GEC,0))
"RTN","PXRMG2E1",37,0)
 ..;S VST=$P($G(^AUPNVHF(DA,0)),"^",3)
"RTN","PXRMG2E1",38,0)
 ..;S VDT=$P($G(^AUPNVSIT(VST,0)),"^",1)
"RTN","PXRMG2E1",39,0)
 ..S VDT=DATE
"RTN","PXRMG2E1",40,0)
 Q DONE_"^"_VDT
"RTN","PXRMG2E1",41,0)
 ;
"RTN","PXRMG2E1",42,0)
E(ARY,FIN,BDT,EDT,CHK,DFNONLY,TPAT) ;EXTRACT GEC REFERRALS
"RTN","PXRMG2E1",43,0)
 N DATE,GEC,DFN,DA,DFNX,DATEX,ZALL,CNTREF,COMPLETE
"RTN","PXRMG2E1",44,0)
 N REFERAL,REFERA,LOCA,LOCN,LOC,DOC,DOCT,DOCTN,DOCTNA
"RTN","PXRMG2E1",45,0)
 N DOCTOR,DR,DONE,VDT,FLAG,DTCHK,DATE1,DFN1,DATEY,DFNXX
"RTN","PXRMG2E1",46,0)
 N GEC1DA,GEC2DA,GEC3DA,GECFDA,DFNFLAG
"RTN","PXRMG2E1",47,0)
 N TMPDFN,TMPDOC,TMPDT,TMPLOC
"RTN","PXRMG2E1",48,0)
 ;====================================================
"RTN","PXRMG2E1",49,0)
 K ^TMP("PXRMGEC",$J,"REF"),^TMP("PXRMGEC",$J,"REFDFN")
"RTN","PXRMG2E1",50,0)
 ;====================================================
"RTN","PXRMG2E1",51,0)
 ;Callers Responsibility to Kill the Array
"RTN","PXRMG2E1",52,0)
 ;(ARY,FIN,BDT,EDT,CHK,DFNONLY)
"RTN","PXRMG2E1",53,0)
 ;EXAMPLE FOR HEALTH SUMMARY
"RTN","PXRMG2E1",54,0)
 ;D E^PXRMGECV("HS",2,3020509,3030609,"S",0)
"RTN","PXRMG2E1",55,0)
 ;Parameters
"RTN","PXRMG2E1",56,0)
 ;S ARY="HS"
"RTN","PXRMG2E1",57,0)
 ;Array to Create HS,DT,DFN,DOC,LOC,HFCD
"RTN","PXRMG2E1",58,0)
 ;S FIN=0
"RTN","PXRMG2E1",59,0)
 ;finished referrals 1=finished 0=unfinished 2=Both ""=finished
"RTN","PXRMG2E1",60,0)
 ;S BDT=3020509 Begin Date
"RTN","PXRMG2E1",61,0)
 ;S EDT=3030609 End Date
"RTN","PXRMG2E1",62,0)
 ;S CHK="S"
"RTN","PXRMG2E1",63,0)
 ;Check dates S=Start date Default F=Final date for date range
"RTN","PXRMG2E1",64,0)
 ;S DFNONLY=0
"RTN","PXRMG2E1",65,0)
 ; DFN of patient 0 or all
"RTN","PXRMG2E1",66,0)
 ;=====================================================
"RTN","PXRMG2E1",67,0)
 ;Count of Referrals
"RTN","PXRMG2E1",68,0)
 S CNTREF=0
"RTN","PXRMG2E1",69,0)
 D GEC ;get iens for the GECF VARIABLES
"RTN","PXRMG2E1",70,0)
 ;==============
"RTN","PXRMG2E1",71,0)
 D WORK
"RTN","PXRMG2E1",72,0)
 Q
"RTN","PXRMG2E1",73,0)
WORK ;
"RTN","PXRMG2E1",74,0)
 S DATE1=0,DFN1=0
"RTN","PXRMG2E1",75,0)
 S DATE=BDT F  S DATE=$O(^AUPNVHF("AED",DATE)) Q:DATE=""  Q:DATE>(EDT+1)  D
"RTN","PXRMG2E1",76,0)
 .S DFN="" F  S DFN=$O(^AUPNVHF("AED",DATE,DFN)) Q:DFN=""  D
"RTN","PXRMG2E1",77,0)
 ..I $D(TPAT) I TPAT=0 Q:$$TESTPAT^VADPT(DFN)
"RTN","PXRMG2E1",78,0)
 ..S COMPLETE=$$FIN(DATE,DFN),DONE=+COMPLETE,VDT=$P(COMPLETE,"^",2)
"RTN","PXRMG2E1",79,0)
 ..Q:FIN=1&(DONE=0)
"RTN","PXRMG2E1",80,0)
 ..Q:FIN=0&(DONE=1)
"RTN","PXRMG2E1",81,0)
 ..Q:'$$RANG(BDT,EDT,VDT,DATE,CHK)
"RTN","PXRMG2E1",82,0)
 ..;
"RTN","PXRMG2E1",83,0)
PAT ..;===Check Patient DFN to see if continue or quit
"RTN","PXRMG2E1",84,0)
 ..S DFNFLAG=1 I DFNONLY>0 D  Q:DFNFLAG=0
"RTN","PXRMG2E1",85,0)
 ...I $D(DFNARY)&('$D(DFNARY(DFN))) S DFNFLAG=0
"RTN","PXRMG2E1",86,0)
 ...I '$D(DFNARY)&(DFN'=DFNONLY) S DFNFLAG=0
"RTN","PXRMG2E1",87,0)
 ...;======
"RTN","PXRMG2E1",88,0)
 ...;
"RTN","PXRMG2E1",89,0)
 ..S GEC="" F  S GEC=$O(^AUPNVHF("AED",DATE,DFN,GEC)) Q:GEC=""  D
"RTN","PXRMG2E1",90,0)
 ...Q:GEC'=GECFDA&(GEC'=GEC1DA)&(GEC'=GEC2DA)&(GEC'=GEC3DA)
"RTN","PXRMG2E1",91,0)
 ...S DFNXX=$P($G(^DPT(DFN,0)),"^",1)_" "_$P($G(^DPT(DFN,0)),"^",9)
"RTN","PXRMG2E1",92,0)
 ...S DATEY=$$FMTE^XLFDT(DATE,"1P")
"RTN","PXRMG2E1",93,0)
 ...I $D(^TMP("PXRMGEC",$J,"REF",DATE,DFN)) S ^TMP("PXRMGEC",$J,"REF",DATE,DFN)=$G(^TMP("PXRMGEC",$J,"REF",DATE,DFN))+1
"RTN","PXRMG2E1",94,0)
 ...E  S ^TMP("PXRMGEC",$J,"REF",DATE,DFN)=1
"RTN","PXRMG2E1",95,0)
 ...;TO HERE BY REFERRAL
"RTN","PXRMG2E1",96,0)
 ...S DA="" F  S DA=$O(^AUPNVHF("AED",DATE,DFN,GEC,DA)) Q:DA=""  D
"RTN","PXRMG2E1",97,0)
 ....;TO HERE BY HEALTH FACTOR
"RTN","PXRMG2E1",98,0)
 ....D ARAYS
"RTN","PXRMG2E1",99,0)
 Q
"RTN","PXRMG2E1",100,0)
KILL ;Kill out unwanted Arrays
"RTN","PXRMG2E1",101,0)
 K ^TMP("PXRMGEC",$J,"REF"),^TMP("PXRMGEC",$J,"REFDFN")
"RTN","PXRMG2E1",102,0)
 Q
"RTN","PXRMG2E1",103,0)
ARAYS ;Set the Arrays for different reports
"RTN","PXRMG2E1",104,0)
 ;===============================================================
"RTN","PXRMG2E1",105,0)
 ;CHeck for new Referral
"RTN","PXRMG2E1",106,0)
 I DATE1'=DATE!(DFN1'=DFN) S CNTREF=CNTREF+1,DATE1=DATE,DFN1=DFN
"RTN","PXRMG2E1",107,0)
 ;===============================================================
"RTN","PXRMG2E1",108,0)
 I ARY="HS" D
"RTN","PXRMG2E1",109,0)
 .;CNTREF=Count or numbered Referral
"RTN","PXRMG2E1",110,0)
 .;DFN   =Patient IEN
"RTN","PXRMG2E1",111,0)
 .;DATE  =Starting Date of Referral
"RTN","PXRMG2E1",112,0)
 .;VDT   =Finished Date of Referral-Visit of GECF
"RTN","PXRMG2E1",113,0)
 .;CAT   =Health Factor Category
"RTN","PXRMG2E1",114,0)
 .;DATEV =Date that each Dialog was done
"RTN","PXRMG2E1",115,0)
 .;DA    =Ien of each Health Factor
"RTN","PXRMG2E1",116,0)
 .;
"RTN","PXRMG2E1",117,0)
 .N NAMEDA,NAME,CATDA,CAT,DATEV,DATEDA,AGE,PXRMAPT,AGEF,SSN
"RTN","PXRMG2E1",118,0)
 .;
"RTN","PXRMG2E1",119,0)
 .;---AGE---
"RTN","PXRMG2E1",120,0)
 .D GETS^DIQ(2,DFN,.033,"ER","AGE")
"RTN","PXRMG2E1",121,0)
 .S AGE=AGE(2,DFN_",","AGE","E")
"RTN","PXRMG2E1",122,0)
 .S AGEF=0 I AGE>74 S AGEF=1
"RTN","PXRMG2E1",123,0)
 .;---SSN---"M3456"
"RTN","PXRMG2E1",124,0)
 .D GETS^DIQ(2,DFN,.0905,"ER","SSN")
"RTN","PXRMG2E1",125,0)
 .S SSN=SSN(2,DFN_",","1U4N","E")
"RTN","PXRMG2E1",126,0)
 .;---APPOINTMENTS---
"RTN","PXRMG2E1",127,0)
 .;DBIA #3859
"RTN","PXRMG2E1",128,0)
 .S PXRMAPT=0
"RTN","PXRMG2E1",129,0)
 .D GETAPPT^SDAMA201(DFN,"1","R",$$FMADD^XLFDT(VDT,-365,0,0,0),VDT,.PXRMAPT,"")
"RTN","PXRMG2E1",130,0)
 .I $D(^TMP($J,"SDAMA201","GETAPPT","ERROR")) S PXRMAPT=0
"RTN","PXRMG2E1",131,0)
 .K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","PXRMG2E1",132,0)
 .;---APPOINTMENTS---
"RTN","PXRMG2E1",133,0)
 .S NAMEDA=$P($G(^AUPNVHF(DA,0)),"^",1)
"RTN","PXRMG2E1",134,0)
 .;GET COMMENTS
"RTN","PXRMG2E1",135,0)
 .S NAME=$P($G(^AUTTHF(NAMEDA,0)),"^",1)
"RTN","PXRMG2E1",136,0)
 .S DATEDA=$P($G(^AUPNVHF(DA,0)),"^",3)
"RTN","PXRMG2E1",137,0)
 .S DATEV=$P($G(^AUPNVSIT(DATEDA,0)),"^",1)
"RTN","PXRMG2E1",138,0)
 .S CATDA=$P($G(^AUTTHF(NAMEDA,0)),"^",3)
"RTN","PXRMG2E1",139,0)
 .S CAT=$P($G(^AUTTHF(CATDA,0)),"^",1)
"RTN","PXRMG2E1",140,0)
 .S ^TMP("PXRMGEC",$J,"GEC2",CNTREF,NAMEDA,AGEF,PXRMAPT,DFN,+$E($P(VDT,"."),4,5),SSN,VDT)=""
"RTN","PXRMG2E1",141,0)
 .K AGE
"RTN","PXRMG2E1",142,0)
 Q
"RTN","PXRMG2E1",143,0)
 ;
"RTN","PXRMG2E2")
0^63^B38360258
"RTN","PXRMG2E2",1,0)
PXRMG2E2 ;SLC/JVS -GEC #2 EXTRACT #2  ;7/14/05  08:32
"RTN","PXRMG2E2",2,0)
 ;;2.0;CLINICAL REMINDERS;**2,4**;Feb 04, 2005;Build 21
"RTN","PXRMG2E2",3,0)
 Q
"RTN","PXRMG2E2",4,0)
 ;
"RTN","PXRMG2E2",5,0)
 ;Variables
"RTN","PXRMG2E2",6,0)
 ;CNTREF=The unique counted Referral number
"RTN","PXRMG2E2",7,0)
 ;DA    =DA or Ien of the Health Factor
"RTN","PXRMG2E2",8,0)
 ;REF   =REFERRAL NUMBER
"RTN","PXRMG2E2",9,0)
 ;ARY   =Array that is ordering through
"RTN","PXRMG2E2",10,0)
 Q
"RTN","PXRMG2E2",11,0)
EN ;Entry Point
"RTN","PXRMG2E2",12,0)
 ;SEND IN
"RTN","PXRMG2E2",13,0)
 ;BDT,EDT,QUARTER
"RTN","PXRMG2E2",14,0)
 ;-----TEMPORARY-----
"RTN","PXRMG2E2",15,0)
 ;K ^TMP("PXRMGEC",$J)
"RTN","PXRMG2E2",16,0)
 ;-----TEMPORARY-----
"RTN","PXRMG2E2",17,0)
 N CR1,CR2,CR3,CR4,CRITER,FOUND,CNT,ARY
"RTN","PXRMG2E2",18,0)
 N M1,M2,M3,BDTEDT
"RTN","PXRMG2E2",19,0)
 ;---TEMPORARY
"RTN","PXRMG2E2",20,0)
 ;S QUARTER=1
"RTN","PXRMG2E2",21,0)
 ;---TEMORARY
"RTN","PXRMG2E2",22,0)
 S CRITER=0,FOUND=0,CNT=0
"RTN","PXRMG2E2",23,0)
 D PROGRAM^PXRMG2E4,CRITER4^PXRMG2E3
"RTN","PXRMG2E2",24,0)
 I $D(YEAR),$D(QUARTER) D
"RTN","PXRMG2E2",25,0)
 .S BDTEDT=$$FMDATE(YEAR,QUARTER)
"RTN","PXRMG2E2",26,0)
 .S BDT=$P(BDTEDT,"^",1)
"RTN","PXRMG2E2",27,0)
 .S EDT=$P(BDTEDT,"^",2)
"RTN","PXRMG2E2",28,0)
 ;
"RTN","PXRMG2E2",29,0)
 D E^PXRMG2E1("HS",1,BDT,EDT,"F",DFNONLY,TPAT)
"RTN","PXRMG2E2",30,0)
 K VDOC
"RTN","PXRMG2E2",31,0)
 ;This creates the following array besides the HS array
"RTN","PXRMG2E2",32,0)
 ;TMP("PXRMGEC",$J,"GEC2",CNTREF,DA,AGE FLAG,APPOINTMENTS,MONTH)=""
"RTN","PXRMG2E2",33,0)
 ;
"RTN","PXRMG2E2",34,0)
 S ARY="^TMP(""PXRMGEC"",$J,""GEC2"")"
"RTN","PXRMG2E2",35,0)
 S REF=0 F  S REF=$O(@ARY@(REF)) Q:REF<1  D
"RTN","PXRMG2E2",36,0)
 .I QUARTER=1 S M1=1,M2=2,M3=3
"RTN","PXRMG2E2",37,0)
 .I QUARTER=2 S M1=4,M2=5,M3=6
"RTN","PXRMG2E2",38,0)
 .I QUARTER=3 S M1=7,M2=8,M3=9
"RTN","PXRMG2E2",39,0)
 .I QUARTER=4 S M1=10,M2=11,M3=12
"RTN","PXRMG2E2",40,0)
 .D PRE(REF)
"RTN","PXRMG2E2",41,0)
 D POST
"RTN","PXRMG2E2",42,0)
 Q
"RTN","PXRMG2E2",43,0)
 ;======================================
"RTN","PXRMG2E2",44,0)
FMDATE(YEAR,QUARTER) ;Get BDT and EDT from year and quarter
"RTN","PXRMG2E2",45,0)
 Q:YEAR=""
"RTN","PXRMG2E2",46,0)
 Q:QUARTER=""
"RTN","PXRMG2E2",47,0)
 Q:QUARTER>4
"RTN","PXRMG2E2",48,0)
 Q:QUARTER=0
"RTN","PXRMG2E2",49,0)
 N YER,QAR,BDT,EDT
"RTN","PXRMG2E2",50,0)
 S YER=YEAR-1700
"RTN","PXRMG2E2",51,0)
 I QUARTER=1 S BDT=YER_"0101",EDT=YER_"0331"
"RTN","PXRMG2E2",52,0)
 I QUARTER=2 S BDT=YER_"0401",EDT=YER_"0630"
"RTN","PXRMG2E2",53,0)
 I QUARTER=3 S BDT=YER_"0701",EDT=YER_"0930"
"RTN","PXRMG2E2",54,0)
 I QUARTER=4 S BDT=YER_"1001",EDT=YER_"1231"
"RTN","PXRMG2E2",55,0)
 Q BDT_"^"_EDT
"RTN","PXRMG2E2",56,0)
 ;======================================
"RTN","PXRMG2E2",57,0)
GET(REF) ;Get Criteria
"RTN","PXRMG2E2",58,0)
 N DFN,MONTH,NAME,SSN,PROG
"RTN","PXRMG2E2",59,0)
 S (CR1,CR2,CR3,CR4,CRITER)=0
"RTN","PXRMG2E2",60,0)
 S CR1=$$C1^PXRMG2S1(REF)
"RTN","PXRMG2E2",61,0)
 S CR2=$$C2^PXRMG2S1(REF)
"RTN","PXRMG2E2",62,0)
 S CR3=$$C3^PXRMG2S1(REF)
"RTN","PXRMG2E2",63,0)
 S CR4=$$C4^PXRMG2S1(REF)
"RTN","PXRMG2E2",64,0)
 S DFN=$P(CR4,"^",2)
"RTN","PXRMG2E2",65,0)
 S MONTH=$P(CR4,"^",3)
"RTN","PXRMG2E2",66,0)
 S NAME=$P(^DPT(DFN,0),"^",1)
"RTN","PXRMG2E2",67,0)
 S SSN=$P(CR4,"^",4)
"RTN","PXRMG2E2",68,0)
 S DATE=$P(CR4,"^",5)
"RTN","PXRMG2E2",69,0)
 S PROG=$P(CR4,"^",6)
"RTN","PXRMG2E2",70,0)
 S CR4=+CR4
"RTN","PXRMG2E2",71,0)
 I CR1=1 S CRITER="1"
"RTN","PXRMG2E2",72,0)
 I CR2=1 S CRITER=$S(CRITER=0:2,1:CRITER_",2")
"RTN","PXRMG2E2",73,0)
 I CR3=1 S CRITER=$S(CRITER=0:3,1:CRITER_",3")
"RTN","PXRMG2E2",74,0)
 I CR4=1 S CRITER=$S(CRITER=0:4,1:CRITER_",4")
"RTN","PXRMG2E2",75,0)
 S ^TMP("PXRMGEC",$J,"GEC2","RPT",NAME,SSN,DATE,CRITER,PROG)=""
"RTN","PXRMG2E2",76,0)
 Q CRITER
"RTN","PXRMG2E2",77,0)
 ;
"RTN","PXRMG2E2",78,0)
PRE(REF) ;Pre Process array by Program and Month
"RTN","PXRMG2E2",79,0)
 N ARY
"RTN","PXRMG2E2",80,0)
 S ARY="^TMP(""PXRMGEC"",$J,""GEC2"")"
"RTN","PXRMG2E2",81,0)
 I $D(@ARY@(REF,$O(P441(0)))),$D(@ARY@(REF,$O(P449(0)))) D
"RTN","PXRMG2E2",82,0)
 .S @ARY@("ADHC",$$MONTH(REF,ARY),REF,$$PIECE($$GET(REF)))=$$GET(REF)
"RTN","PXRMG2E2",83,0)
 I $D(@ARY@(REF,$O(P4410(0)))),$D(@ARY@(REF,$O(P449(0)))) D
"RTN","PXRMG2E2",84,0)
 .S @ARY@("HHHA",$$MONTH(REF,ARY),REF,$$PIECE($$GET(REF)))=$$GET(REF)
"RTN","PXRMG2E2",85,0)
 I $D(@ARY@(REF,$O(P4412(0)))),$D(@ARY@(REF,$O(P449(0)))) D
"RTN","PXRMG2E2",86,0)
 .S @ARY@("VAIHR",$$MONTH(REF,ARY),REF,$$PIECE($$GET(REF)))=$$GET(REF)
"RTN","PXRMG2E2",87,0)
 I $D(@ARY@(REF,$O(P451(0)))),$D(@ARY@(REF,$O(P452(0)))) D
"RTN","PXRMG2E2",88,0)
 .S @ARY@("CC",$$MONTH(REF,ARY),REF,$$PIECE($$GET(REF)))=$$GET(REF)
"RTN","PXRMG2E2",89,0)
 Q
"RTN","PXRMG2E2",90,0)
 ;
"RTN","PXRMG2E2",91,0)
MONTH(REF,ARY) ;Get month out of array
"RTN","PXRMG2E2",92,0)
 Q:REF=""
"RTN","PXRMG2E2",93,0)
 Q:ARY=""
"RTN","PXRMG2E2",94,0)
 N IEN,AGE,APP,DFN,MON
"RTN","PXRMG2E2",95,0)
 S IEN=$O(@ARY@(REF,0))
"RTN","PXRMG2E2",96,0)
 S AGE=$O(@ARY@(REF,IEN,-1))
"RTN","PXRMG2E2",97,0)
 S APP=$O(@ARY@(REF,IEN,AGE,-1))
"RTN","PXRMG2E2",98,0)
 S DFN=$O(@ARY@(REF,IEN,AGE,APP,0))
"RTN","PXRMG2E2",99,0)
 S MON=$O(@ARY@(REF,IEN,AGE,APP,DFN,0))
"RTN","PXRMG2E2",100,0)
 Q MON
"RTN","PXRMG2E2",101,0)
 ;
"RTN","PXRMG2E2",102,0)
PIECE(CRITER) ;Get the piece in the array the criter goes into
"RTN","PXRMG2E2",103,0)
 N PIECE
"RTN","PXRMG2E2",104,0)
 I CRITER=0 S PIECE=5
"RTN","PXRMG2E2",105,0)
 I CRITER=1 S PIECE=6
"RTN","PXRMG2E2",106,0)
 I CRITER=2 S PIECE=7
"RTN","PXRMG2E2",107,0)
 I CRITER=3 S PIECE=8
"RTN","PXRMG2E2",108,0)
 I CRITER=4 S PIECE=9
"RTN","PXRMG2E2",109,0)
 I CRITER="1,2" S PIECE=10
"RTN","PXRMG2E2",110,0)
 I CRITER="1,3" S PIECE=11
"RTN","PXRMG2E2",111,0)
 I CRITER="1,4" S PIECE=12
"RTN","PXRMG2E2",112,0)
 I CRITER="2,3" S PIECE=13
"RTN","PXRMG2E2",113,0)
 I CRITER="2,4" S PIECE=14
"RTN","PXRMG2E2",114,0)
 I CRITER="3,4" S PIECE=15
"RTN","PXRMG2E2",115,0)
 I CRITER="1,2,3" S PIECE=16
"RTN","PXRMG2E2",116,0)
 I CRITER="1,2,4" S PIECE=17
"RTN","PXRMG2E2",117,0)
 I CRITER="1,3,4" S PIECE=18
"RTN","PXRMG2E2",118,0)
 I CRITER="2,3,4" S PIECE=19
"RTN","PXRMG2E2",119,0)
 I CRITER="1,2,3,4" S PIECE=20
"RTN","PXRMG2E2",120,0)
 Q PIECE
"RTN","PXRMG2E2",121,0)
 ;
"RTN","PXRMG2E2",122,0)
POST ;Set the Statistical Arrays
"RTN","PXRMG2E2",123,0)
 D START
"RTN","PXRMG2E2",124,0)
 N PROG,MON,REF,PIE,MONX,SITE,STOP,ARY,X,Y
"RTN","PXRMG2E2",125,0)
 S ARY="^TMP(""PXRMGEC"",$J,""GEC2"")"
"RTN","PXRMG2E2",126,0)
 S PROG="ADH" F  S PROG=$O(@ARY@(PROG)) Q:PROG=""  D
"RTN","PXRMG2E2",127,0)
 .S MON=0 F  S MON=$O(@ARY@(PROG,MON)) Q:MON=""  D
"RTN","PXRMG2E2",128,0)
 ..Q:MON'=M1&(MON'=M2)&(MON'=M3)
"RTN","PXRMG2E2",129,0)
 ..S CNT=0
"RTN","PXRMG2E2",130,0)
 ..S REF=0 F  S REF=$O(@ARY@(PROG,MON,REF)) Q:REF=""  D
"RTN","PXRMG2E2",131,0)
 ...S CNT=CNT+1
"RTN","PXRMG2E2",132,0)
 ...S PIE=0 F  S PIE=$O(@ARY@(PROG,MON,REF,PIE)) Q:PIE=""  D
"RTN","PXRMG2E2",133,0)
 ....I MON=1!(MON=4)!(MON=7)!(MON=10) S MONX=1
"RTN","PXRMG2E2",134,0)
 ....I MON=2!(MON=5)!(MON=8)!(MON=11) S MONX=2
"RTN","PXRMG2E2",135,0)
 ....I MON=3!(MON=6)!(MON=9)!(MON=12) S MONX=3
"RTN","PXRMG2E2",136,0)
 ....S Y=$P($G(STAT(PROG,MONX)),",",PIE)
"RTN","PXRMG2E2",137,0)
 ....S Y=Y+1,$P(STAT(PROG,MONX),",",PIE)=Y
"RTN","PXRMG2E2",138,0)
 ....S $P(STAT(PROG,MONX),",",2)=MON
"RTN","PXRMG2E2",139,0)
 ....S $P(STAT(PROG,MONX),",",4)=CNT
"RTN","PXRMG2E2",140,0)
 Q
"RTN","PXRMG2E2",141,0)
 ;
"RTN","PXRMG2E2",142,0)
START ; Start the STAT(PROG,MON) ARRAYS
"RTN","PXRMG2E2",143,0)
 N I,SITE,F,S,T
"RTN","PXRMG2E2",144,0)
 I QUARTER=1 S F=1,S=2,T=3
"RTN","PXRMG2E2",145,0)
 I QUARTER=2 S F=4,S=5,T=6
"RTN","PXRMG2E2",146,0)
 I QUARTER=3 S F=7,S=8,T=9
"RTN","PXRMG2E2",147,0)
 I QUARTER=4 S F=10,S=11,T=12
"RTN","PXRMG2E2",148,0)
 S SITE=$P($$SITE^VASITE,"^",3)
"RTN","PXRMG2E2",149,0)
 F I=1:1:3 S STAT("ADHC",I)=SITE_",,"_"ADHC"_",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" D
"RTN","PXRMG2E2",150,0)
 .I I=1 S $P(STAT("ADHC",I),",",2)=F
"RTN","PXRMG2E2",151,0)
 .I I=2 S $P(STAT("ADHC",I),",",2)=S
"RTN","PXRMG2E2",152,0)
 .I I=3 S $P(STAT("ADHC",I),",",2)=T
"RTN","PXRMG2E2",153,0)
 F I=1:1:3 S STAT("HHHA",I)=SITE_",,"_"HHHA"_",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" D
"RTN","PXRMG2E2",154,0)
 .I I=1 S $P(STAT("HHHA",I),",",2)=F
"RTN","PXRMG2E2",155,0)
 .I I=2 S $P(STAT("HHHA",I),",",2)=S
"RTN","PXRMG2E2",156,0)
 .I I=3 S $P(STAT("HHHA",I),",",2)=T
"RTN","PXRMG2E2",157,0)
 F I=1:1:3 S STAT("CC",I)=SITE_",,"_"CC"_",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" D
"RTN","PXRMG2E2",158,0)
 .I I=1 S $P(STAT("CC",I),",",2)=F
"RTN","PXRMG2E2",159,0)
 .I I=2 S $P(STAT("CC",I),",",2)=S
"RTN","PXRMG2E2",160,0)
 .I I=3 S $P(STAT("CC",I),",",2)=T
"RTN","PXRMG2E2",161,0)
 F I=1:1:3 S STAT("VAIHR",I)=SITE_",,"_"VAIHR"_",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" D
"RTN","PXRMG2E2",162,0)
 .I I=1 S $P(STAT("VAIHR",I),",",2)=F
"RTN","PXRMG2E2",163,0)
 .I I=2 S $P(STAT("VAIHR",I),",",2)=S
"RTN","PXRMG2E2",164,0)
 .I I=3 S $P(STAT("VAIHR",I),",",2)=T
"RTN","PXRMG2E2",165,0)
 Q
"RTN","PXRMG2E2",166,0)
WRITE ;Write to screen the STAT array
"RTN","PXRMG2E2",167,0)
 N PROG,MON
"RTN","PXRMG2E2",168,0)
 W !,"An Email containing this information will be sent to all those who are listed"
"RTN","PXRMG2E2",169,0)
 W !,"in the ""G.GEC2 NATIONAL ROLLUP"" mail group",!
"RTN","PXRMG2E2",170,0)
 S PROG="AD" F  S PROG=$O(STAT(PROG)) Q:PROG=""  D
"RTN","PXRMG2E2",171,0)
 .S MON=0 F  S MON=$O(STAT(PROG,MON)) Q:MON=""  D
"RTN","PXRMG2E2",172,0)
 ..W !,$G(STAT(PROG,MON))
"RTN","PXRMG2E2",173,0)
 W !!,"The above information is a statistical compilation of the"
"RTN","PXRMG2E2",174,0)
 W !,"information seen in the local view of this option."
"RTN","PXRMG2E2",175,0)
 W !!,"Thanks in advance",!!
"RTN","PXRMG2E2",176,0)
 D MAIL^PXRMG2M1
"RTN","PXRMG2E2",177,0)
 D EXIT
"RTN","PXRMG2E2",178,0)
 Q
"RTN","PXRMG2E2",179,0)
 ;=================================================
"RTN","PXRMG2E2",180,0)
EXIT ;Exit and Clean up Variables
"RTN","PXRMG2E2",181,0)
 K C1101,C1107,C1108
"RTN","PXRMG2E2",182,0)
 K C1410,C1412,C1414,C142,C144,C146,C148,C166,C171
"RTN","PXRMG2E2",183,0)
 K C2110,C2114,C2118,C212,C2120,C214,C216,C218,C221,C224,C226
"RTN","PXRMG2E2",184,0)
 K C2710,C272,C274,C276,C278,C286
"RTN","PXRMG2E2",185,0)
 K P441,P4410,P4412,P449,P451,P452
"RTN","PXRMG2E2",186,0)
 K STAT
"RTN","PXRMG2E2",187,0)
 Q
"RTN","PXRMG2E4")
0^60^B11886015
"RTN","PXRMG2E4",1,0)
PXRMG2E4 ;SLC/JVS -GEC #2 EXTRACT #4  ;7/14/05  08:11
"RTN","PXRMG2E4",2,0)
 ;;2.0;CLINICAL REMINDERS;**2,4**;Feb 04, 2005;Build 21
"RTN","PXRMG2E4",3,0)
 Q
"RTN","PXRMG2E4",4,0)
 ;
"RTN","PXRMG2E4",5,0)
 Q
"RTN","PXRMG2E4",6,0)
PROGRAM ; Extracts the IEN for the health factors that represents
"RTN","PXRMG2E4",7,0)
 ; each of the home health programs.
"RTN","PXRMG2E4",8,0)
 I $D(^AUTTHF("B","GEC ADULT DAY HEALTH CARE (REFERRED TO)")) D
"RTN","PXRMG2E4",9,0)
 .S P441($O(^AUTTHF("B","GEC ADULT DAY HEALTH CARE (REFERRED TO)",0)))=""
"RTN","PXRMG2E4",10,0)
 I $D(^AUTTHF("B","GEC HOMECARE FUNDING-VA")) D
"RTN","PXRMG2E4",11,0)
 .S P449($O(^AUTTHF("B","GEC HOMECARE FUNDING-VA",0)))=""
"RTN","PXRMG2E4",12,0)
 I $D(^AUTTHF("B","GEC HOMEMAKER/HOME HEALTH AIDE")) D
"RTN","PXRMG2E4",13,0)
 .S P4410($O(^AUTTHF("B","GEC HOMEMAKER/HOME HEALTH AIDE",0)))=""
"RTN","PXRMG2E4",14,0)
 I $D(^AUTTHF("B","GEC VA IN-HOME RESPITE")) D
"RTN","PXRMG2E4",15,0)
 .S P4412($O(^AUTTHF("B","GEC VA IN-HOME RESPITE",0)))=""
"RTN","PXRMG2E4",16,0)
 I $D(^AUTTHF("B","GEC HOME TELEHEALTH (REFERRED TO)")) D
"RTN","PXRMG2E4",17,0)
 .S P451($O(^AUTTHF("B","GEC HOME TELEHEALTH (REFERRED TO)",0)))=""
"RTN","PXRMG2E4",18,0)
 I $D(^AUTTHF("B","GEC TELEHEALTH FUNDING-VA")) D
"RTN","PXRMG2E4",19,0)
 .S P452($O(^AUTTHF("B","GEC TELEHEALTH FUNDING-VA",0)))=""
"RTN","PXRMG2E4",20,0)
 ;
"RTN","PXRMG2E4",21,0)
CRITER1 ; Extracts the IEN for the health factors that represents
"RTN","PXRMG2E4",22,0)
 ; the 8 ADL's
"RTN","PXRMG2E4",23,0)
 I $D(^AUTTHF("B","GEC BATHING HELP/SUPERVISION LAST 7D-YES")) D
"RTN","PXRMG2E4",24,0)
 .S C212($O(^AUTTHF("B","GEC BATHING HELP/SUPERVISION LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",25,0)
 I $D(^AUTTHF("B","GEC BATHING PHYS ASST NEEDED LAST 7D-YES")) D
"RTN","PXRMG2E4",26,0)
 .S C214($O(^AUTTHF("B","GEC BATHING PHYS ASST NEEDED LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",27,0)
 I $D(^AUTTHF("B","GEC BED POSITIONING HELP LAST 7D-YES")) D
"RTN","PXRMG2E4",28,0)
 .S C216($O(^AUTTHF("B","GEC BED POSITIONING HELP LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",29,0)
 I $D(^AUTTHF("B","GEC DRESS HELP/SUPERVISION LAST 7D-YES")) D
"RTN","PXRMG2E4",30,0)
 .S C218($O(^AUTTHF("B","GEC DRESS HELP/SUPERVISION LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",31,0)
 I $D(^AUTTHF("B","GEC EATING HELP/SUPERVISION LAST 7D-YES")) D
"RTN","PXRMG2E4",32,0)
 .S C2110($O(^AUTTHF("B","GEC EATING HELP/SUPERVISION LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",33,0)
 I $D(^AUTTHF("B","GEC MOVING AROUND INDOORS LAST 7D-YES")) D
"RTN","PXRMG2E4",34,0)
 .S C2114($O(^AUTTHF("B","GEC MOVING AROUND INDOORS LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",35,0)
 I $D(^AUTTHF("B","GEC TOILET HELP/SUPERVISION LAST 7D-YES")) D
"RTN","PXRMG2E4",36,0)
 .S C2118($O(^AUTTHF("B","GEC TOILET HELP/SUPERVISION LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",37,0)
 I $D(^AUTTHF("B","GEC TRANSFERS HELP/SPRVISION LAST 7D-YES")) D
"RTN","PXRMG2E4",38,0)
 .S C2120($O(^AUTTHF("B","GEC TRANSFERS HELP/SPRVISION LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",39,0)
 ;
"RTN","PXRMG2E4",40,0)
CRITER2 ; Extracts the IEN for the health factors that represents
"RTN","PXRMG2E4",41,0)
 ; the 8 "SIGNIFICANT COGNITIVE IMPARIMENT"
"RTN","PXRMG2E4",42,0)
 I $D(^AUTTHF("B","GEC CAN BE UNDERSTOOD LAST 7D-NO")) D
"RTN","PXRMG2E4",43,0)
 .S C221($O(^AUTTHF("B","GEC CAN BE UNDERSTOOD LAST 7D-NO",0)))=""
"RTN","PXRMG2E4",44,0)
 I $D(^AUTTHF("B","GEC ENDANGERED SAFETY LAST 90D-YES")) D
"RTN","PXRMG2E4",45,0)
 .S C224($O(^AUTTHF("B","GEC ENDANGERED SAFETY LAST 90D-YES",0)))=""
"RTN","PXRMG2E4",46,0)
 I $D(^AUTTHF("B","GEC MADE REASONABLE DECISIONS LAST 7D-NO")) D
"RTN","PXRMG2E4",47,0)
 .S C226($O(^AUTTHF("B","GEC MADE REASONABLE DECISIONS LAST 7D-NO",0)))=""
"RTN","PXRMG2E4",48,0)
 I $D(^AUTTHF("B","GEC HALLUCINATIONS/DELUSIONS LAST 7D-YES")) D
"RTN","PXRMG2E4",49,0)
 .S C272($O(^AUTTHF("B","GEC HALLUCINATIONS/DELUSIONS LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",50,0)
 I $D(^AUTTHF("B","GEC PHYSICALLY ABUSIVE LAST 7D-YES")) D
"RTN","PXRMG2E4",51,0)
 .S C274($O(^AUTTHF("B","GEC PHYSICALLY ABUSIVE LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",52,0)
 I $D(^AUTTHF("B","GEC RESISTS CARE LAST 7D-YES")) D
"RTN","PXRMG2E4",53,0)
 .S C276($O(^AUTTHF("B","GEC RESISTS CARE LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",54,0)
 I $D(^AUTTHF("B","GEC VERBALLY ABUSIVE LAST 7D-YES")) D
"RTN","PXRMG2E4",55,0)
 .S C278($O(^AUTTHF("B","GEC VERBALLY ABUSIVE LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",56,0)
 I $D(^AUTTHF("B","GEC WANDERING LAST 7D-YES")) D
"RTN","PXRMG2E4",57,0)
 .S C2710($O(^AUTTHF("B","GEC WANDERING LAST 7D-YES",0)))=""
"RTN","PXRMG2E4",58,0)
 ;
"RTN","PXRMG2E4",59,0)
CRITER3 ; Extracts the IEN for the health factors that represents
"RTN","PXRMG2E4",60,0)
 ; the 1 "Life expectancy < 6 months"
"RTN","PXRMG2E4",61,0)
 I $D(^AUTTHF("B","GEC LIFE EXPECTANCY < 6MO-YES")) D
"RTN","PXRMG2E4",62,0)
 .S C286($O(^AUTTHF("B","GEC LIFE EXPECTANCY < 6MO-YES",0)))=""
"RTN","PXRMG2E4",63,0)
 ;
"RTN","PXRMG2E4",64,0)
 ;Continued in PXRMG2E3
"RTN","PXRMG2M1")
0^61^B19673315
"RTN","PXRMG2M1",1,0)
PXRMG2M1 ;SLC/JVS -GEC #2 MAIL MESSAGES ;7/14/05  08:12
"RTN","PXRMG2M1",2,0)
 ;;2.0;CLINICAL REMINDERS;**2,4**;Feb 04, 2005;Build 21
"RTN","PXRMG2M1",3,0)
 Q
"RTN","PXRMG2M1",4,0)
 ;=================================================
"RTN","PXRMG2M1",5,0)
TASK ;Start queued option PXRM GEC QUARTERLY ROLLUP
"RTN","PXRMG2M1",6,0)
 Q:'$D(DT)
"RTN","PXRMG2M1",7,0)
 D CALCMON
"RTN","PXRMG2M1",8,0)
 D EN^PXRMG2E2
"RTN","PXRMG2M1",9,0)
 D MAIL
"RTN","PXRMG2M1",10,0)
 Q
"RTN","PXRMG2M1",11,0)
START ;Start queued option PXRM GEC QUARTERLY ROLLUP
"RTN","PXRMG2M1",12,0)
 Q:'$D(DT)
"RTN","PXRMG2M1",13,0)
 D CALC
"RTN","PXRMG2M1",14,0)
 D EN^PXRMG2E2
"RTN","PXRMG2M1",15,0)
 D MAIL
"RTN","PXRMG2M1",16,0)
 Q
"RTN","PXRMG2M1",17,0)
MAIL ;MAIL OUT the STAT array
"RTN","PXRMG2M1",18,0)
 N SITE,XMZ,XMY,XMSUB,XMDUZ,SITE2
"RTN","PXRMG2M1",19,0)
 S XMSUB="GEC FISCAL QUARTER "_FQUARTER_" "_YEAR_" Rollup Data"
"RTN","PXRMG2M1",20,0)
 I DT<3050401 S XMSUB="TEST DATA-- "_XMSUB
"RTN","PXRMG2M1",21,0)
 S SITE=$P($$SITE^VASITE,"^",2)_" #"_$P($$SITE^VASITE,"^",3)
"RTN","PXRMG2M1",22,0)
 S SITE2=$P($$SITE^VASITE,"^",3)_" "_$P($$SITE^VASITE,"^",2)
"RTN","PXRMG2M1",23,0)
 S XMDUZ=SITE2_" GEC Rollup Data"
"RTN","PXRMG2M1",24,0)
RETRY D XMZ^XMA2
"RTN","PXRMG2M1",25,0)
 I XMZ<1 G RETRY
"RTN","PXRMG2M1",26,0)
 ;
"RTN","PXRMG2M1",27,0)
 N PROG,MON,L,LINE,MGIEN,MGROUP
"RTN","PXRMG2M1",28,0)
 S L=0
"RTN","PXRMG2M1",29,0)
 S PROG="AD" F  S PROG=$O(STAT(PROG)) Q:PROG=""  D
"RTN","PXRMG2M1",30,0)
 .S MON=0 F  S MON=$O(STAT(PROG,MON)) Q:MON=""  D
"RTN","PXRMG2M1",31,0)
 ..S L=L+1
"RTN","PXRMG2M1",32,0)
 ..S ^XMB(3.9,XMZ,2,L,0)=$G(STAT(PROG,MON))
"RTN","PXRMG2M1",33,0)
 ;
"RTN","PXRMG2M1",34,0)
 I L>10 D
"RTN","PXRMG2M1",35,0)
 .F I=(L+1):1:14 S ^XMB(3.9,XMZ,2,I,0)=$P($T(TEXT+(I-12)),";",3)
"RTN","PXRMG2M1",36,0)
 .S ^XMB(3.9,XMZ,2,15,0)="data from "_SITE_" for Fiscal Quarter # "_FQUARTER_" of "_YEAR_". (Calendar Quarter "_QUARTER_")"
"RTN","PXRMG2M1",37,0)
 .S L=15 F I=(L+1):1:55 S ^XMB(3.9,XMZ,2,I,0)=$P($T(TEXT+(I-12)),";",3)
"RTN","PXRMG2M1",38,0)
 .;
"RTN","PXRMG2M1",39,0)
 .S ^XMB(3.9,XMZ,2,0)="^3.92^"_I_"^"_I_"^"_DT
"RTN","PXRMG2M1",40,0)
 .S XMDUZ="GEC Project"
"RTN","PXRMG2M1",41,0)
 .I $$PROD^XUPROD(1) S XMY("G.GEC2 NATIONAL ROLLUP")=""
"RTN","PXRMG2M1",42,0)
 .S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMG2M1",43,0)
 .I MGIEN'="" D
"RTN","PXRMG2M1",44,0)
 ..S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMG2M1",45,0)
 ..S XMY(MGROUP)=""
"RTN","PXRMG2M1",46,0)
 .D ENT1^XMD
"RTN","PXRMG2M1",47,0)
 .D EXIT
"RTN","PXRMG2M1",48,0)
 Q
"RTN","PXRMG2M1",49,0)
TEXT ;Text added to the bottom of the mail message
"RTN","PXRMG2M1",50,0)
 ;13;
"RTN","PXRMG2M1",51,0)
 ;14;   The above information is Geriatric Extended Care "Home" Referral
"RTN","PXRMG2M1",52,0)
 ;15;
"RTN","PXRMG2M1",53,0)
 ;16;-------------------------------------------------
"RTN","PXRMG2M1",54,0)
 ;17;   Each section of data is separated by a comma. The table below
"RTN","PXRMG2M1",55,0)
 ;18;defines the sections. Numbers represent Patients. Patient only counted once.
"RTN","PXRMG2M1",56,0)
 ;19;
"RTN","PXRMG2M1",57,0)
 ;20;  1 Number for the site.
"RTN","PXRMG2M1",58,0)
 ;21;  2 Number that stands for the Month (1=January)...
"RTN","PXRMG2M1",59,0)
 ;22;  3 Acronym for the Program (ADHC,HHHA,VAIHR,CC)
"RTN","PXRMG2M1",60,0)
 ;23;  4 Total number of patients referred to the program that month
"RTN","PXRMG2M1",61,0)
 ;24;  5 Number that DID NOT MEET ANY of the criteria
"RTN","PXRMG2M1",62,0)
 ;25;  6 Number that only met criteria 1
"RTN","PXRMG2M1",63,0)
 ;26;  7 Number that only met criteria 2
"RTN","PXRMG2M1",64,0)
 ;27;  8 Number that only met criteria 3
"RTN","PXRMG2M1",65,0)
 ;28;  9 Number that only met criteria 4
"RTN","PXRMG2M1",66,0)
 ;29; 10 Number that only met both criteria's 1 and 2
"RTN","PXRMG2M1",67,0)
 ;30; 11 Number that only met both criteria's 1 and 3
"RTN","PXRMG2M1",68,0)
 ;31; 12 Number that only met both criteria's 1 and 4
"RTN","PXRMG2M1",69,0)
 ;32; 13 Number that only met both criteria's 2 and 3
"RTN","PXRMG2M1",70,0)
 ;34; 14 Number that only met both criteria's 2 and 4
"RTN","PXRMG2M1",71,0)
 ;35; 15 Number that only met both criteria's 3 and 4
"RTN","PXRMG2M1",72,0)
 ;36; 16 Number that only met the criteria's 1 and 2 and 3
"RTN","PXRMG2M1",73,0)
 ;37; 17 Number that only met the criteria's 1 and 2 and 4
"RTN","PXRMG2M1",74,0)
 ;38; 18 Number that only met the criteria's 1 and 3 and 4
"RTN","PXRMG2M1",75,0)
 ;39; 19 Number that only met the criteria's 2 and 3 and 4
"RTN","PXRMG2M1",76,0)
 ;40; 20 Number that met all criteria's 1 and 2 and 3 and 4
"RTN","PXRMG2M1",77,0)
 ;41;
"RTN","PXRMG2M1",78,0)
 ;42;--------------------------------------------------
"RTN","PXRMG2M1",79,0)
 ;43;The Basic Criteria for Eligibility is shown below.
"RTN","PXRMG2M1",80,0)
 ;44;
"RTN","PXRMG2M1",81,0)
 ;45; 1: Problems with 3 or more ADL's.
"RTN","PXRMG2M1",82,0)
 ;46; 2: 1 or more patient behavior or cognitive problem.
"RTN","PXRMG2M1",83,0)
 ;47; 3: Expected life limit of less than 6 months.
"RTN","PXRMG2M1",84,0)
 ;48; 4: Combination of the following:
"RTN","PXRMG2M1",85,0)
 ;49;      2 or more ADL dependencies.
"RTN","PXRMG2M1",86,0)
 ;50;      <AND> 2 or more of the following:
"RTN","PXRMG2M1",87,0)
 ;51;            problems with 3 or more IADL's.
"RTN","PXRMG2M1",88,0)
 ;52;      <OR> age of patients is 75 or more.
"RTN","PXRMG2M1",89,0)
 ;53;      <OR> living alone in the community.
"RTN","PXRMG2M1",90,0)
 ;54;      <OR> utilizes the clinics 12 or more times in the
"RTN","PXRMG2M1",91,0)
 ;55;           preceding 12 months.
"RTN","PXRMG2M1",92,0)
 ;============================================
"RTN","PXRMG2M1",93,0)
EXIT ;Exit and Clean up Variables
"RTN","PXRMG2M1",94,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMG2M1",95,0)
 Q
"RTN","PXRMG2M1",96,0)
CALC ;Calculate the quarter number
"RTN","PXRMG2M1",97,0)
 N MON,YER,CQTR,BCQTR,BQTR,BYER,FQTR
"RTN","PXRMG2M1",98,0)
 S MON=+$E(DT,4,5),YER=1700+$E(DT,1,3)
"RTN","PXRMG2M1",99,0)
 ;
"RTN","PXRMG2M1",100,0)
 I MON=1!(MON=2)!(MON=3) S CQTR=1
"RTN","PXRMG2M1",101,0)
 I MON=4!(MON=5)!(MON=6) S CQTR=2
"RTN","PXRMG2M1",102,0)
 I MON=7!(MON=8)!(MON=9) S CQTR=3
"RTN","PXRMG2M1",103,0)
 I MON=10!(MON=11)!(MON=12) S CQTR=4
"RTN","PXRMG2M1",104,0)
 ;
"RTN","PXRMG2M1",105,0)
 I CQTR=1 S BYER=YER-1
"RTN","PXRMG2M1",106,0)
 E  S BYER=YER
"RTN","PXRMG2M1",107,0)
 I CQTR=1 S BQTR=4
"RTN","PXRMG2M1",108,0)
 E  S BQTR=CQTR-1
"RTN","PXRMG2M1",109,0)
 ;
"RTN","PXRMG2M1",110,0)
 I BQTR=1 S FQTR=2
"RTN","PXRMG2M1",111,0)
 I BQTR=2 S FQTR=3
"RTN","PXRMG2M1",112,0)
 I BQTR=3 S FQTR=4
"RTN","PXRMG2M1",113,0)
 I BQTR=4 S FQTR=1
"RTN","PXRMG2M1",114,0)
 S QUARTER=BQTR,FQUARTER=FQTR,YEAR=BYER,DFNONLY=0
"RTN","PXRMG2M1",115,0)
 ;After april 1 2005 no test patients
"RTN","PXRMG2M1",116,0)
 S TPAT=0
"RTN","PXRMG2M1",117,0)
 Q
"RTN","PXRMG2M1",118,0)
 ;
"RTN","PXRMG2M1",119,0)
CALCMON ;Calculate the quarter number for current quarter
"RTN","PXRMG2M1",120,0)
 N MON,YER,CQTR,BQTR,BCQTR,BYER,FQTR
"RTN","PXRMG2M1",121,0)
 S MON=+$E(DT,4,5),YER=1700+$E(DT,1,3)
"RTN","PXRMG2M1",122,0)
 ;
"RTN","PXRMG2M1",123,0)
 I MON=1!(MON=2)!(MON=3) S CQTR=1
"RTN","PXRMG2M1",124,0)
 I MON=4!(MON=5)!(MON=6) S CQTR=2
"RTN","PXRMG2M1",125,0)
 I MON=7!(MON=8)!(MON=9) S CQTR=3
"RTN","PXRMG2M1",126,0)
 I MON=10!(MON=11)!(MON=12) S CQTR=4
"RTN","PXRMG2M1",127,0)
 ;
"RTN","PXRMG2M1",128,0)
 S BYER=YER
"RTN","PXRMG2M1",129,0)
 S BQTR=CQTR
"RTN","PXRMG2M1",130,0)
 ;
"RTN","PXRMG2M1",131,0)
 I BQTR=1 S FQTR=2
"RTN","PXRMG2M1",132,0)
 I BQTR=2 S FQTR=3
"RTN","PXRMG2M1",133,0)
 I BQTR=3 S FQTR=4
"RTN","PXRMG2M1",134,0)
 I BQTR=4 S FQTR=1
"RTN","PXRMG2M1",135,0)
 ;
"RTN","PXRMG2M1",136,0)
 S QUARTER=BQTR,FQUARTER=FQTR,YEAR=BYER,DFNONLY=0
"RTN","PXRMG2M1",137,0)
 ;After april 1 2005 no test patients
"RTN","PXRMG2M1",138,0)
 S TPAT=0
"RTN","PXRMG2M1",139,0)
 S ZTREQ="@"
"RTN","PXRMG2M1",140,0)
 ;
"RTN","PXRMG2M1",141,0)
 Q
"RTN","PXRMG2M1",142,0)
 ;
"RTN","PXRMG2M1",143,0)
POST ;Post installation routine
"RTN","PXRMG2M1",144,0)
 ;add remote members to mail group
"RTN","PXRMG2M1",145,0)
 D ADDMBRS^XMXAPIG(DUZ,"GEC2 NATIONAL ROLLUP","VAUGHN.SMITH@MED.VA.GOV")
"RTN","PXRMG2M1",146,0)
 D ADDMBRS^XMXAPIG(DUZ,"GEC2 NATIONAL ROLLUP","patrick.brady@e2k.hq.med.va.gov")
"RTN","PXRMG2M1",147,0)
 D ADDMBRS^XMXAPIG(DUZ,"GEC2 NATIONAL ROLLUP","daniel.schoeps@e2k.hq.med.va.gov")
"RTN","PXRMG2M1",148,0)
 ;
"RTN","PXRMG2M1",149,0)
TASKRPT ;This will task a monthy report for 4 month.
"RTN","PXRMG2M1",150,0)
 ;May 8th 2005,June 8th 2005,AUG 8th 2005,Sept 8th 2005
"RTN","PXRMG2M1",151,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,MON,ZTREQ,ZTSK
"RTN","PXRMG2M1",152,0)
 S MON=0
"RTN","PXRMG2M1",153,0)
 Q:$D(^TMP("PXRMG2TSK"))
"RTN","PXRMG2M1",154,0)
 F ZTDTH="3050508.0200","3050608.0200","3050808.0200","3050908.0200" D
"RTN","PXRMG2M1",155,0)
 .S MON=MON+1
"RTN","PXRMG2M1",156,0)
 .I MON=1 S MONTH="MAY"
"RTN","PXRMG2M1",157,0)
 .I MON=2 S MONTH="JUNE"
"RTN","PXRMG2M1",158,0)
 .I MON=3 S MONTH="AUGUST"
"RTN","PXRMG2M1",159,0)
 .I MON=4 S MONTH="SEPT"
"RTN","PXRMG2M1",160,0)
 .S ZTRTN="TASK^PXRMG2M1"
"RTN","PXRMG2M1",161,0)
 .S ZTDESC=MONTH_" 2005 GEC National Report"
"RTN","PXRMG2M1",162,0)
 .S ZTIO=""
"RTN","PXRMG2M1",163,0)
 .D ^%ZTLOAD
"RTN","PXRMG2M1",164,0)
 .D BMES^XPDUTL(MONTH_" 8th's GEC Tasked Job number "_ZTSK)
"RTN","PXRMG2M1",165,0)
 S ^TMP("PXRMG2TSK",$J)="DT"
"RTN","PXRMG2M1",166,0)
CLEAN ;Clean up after previous builds
"RTN","PXRMG2M1",167,0)
 K ^PXRMD(801.5,"ATASK")
"RTN","PXRMG2M1",168,0)
 Q
"RTN","PXRMG2R1")
0^62^B25500840
"RTN","PXRMG2R1",1,0)
PXRMG2R1 ;SLC/JVS -GEC #2 REPORT #1  ;7/14/05  08:12
"RTN","PXRMG2R1",2,0)
 ;;2.0;CLINICAL REMINDERS;**2,4**;Feb 04, 2005;Build 21
"RTN","PXRMG2R1",3,0)
 Q
"RTN","PXRMG2R1",4,0)
EN ;Entry Point for Local Report
"RTN","PXRMG2R1",5,0)
 N NAME,ARY,SSN,CRITER,DATE,DATEF,NAME2,PAGE
"RTN","PXRMG2R1",6,0)
 N CRP1,CRP2,CRP3,CRP4,CRP5,CNT,PROG
"RTN","PXRMG2R1",7,0)
 S (CRP1,CRP2,CRP3,CRP4,CRP5)=""
"RTN","PXRMG2R1",8,0)
 D EN^PXRMG2E2
"RTN","PXRMG2R1",9,0)
 W @IOF
"RTN","PXRMG2R1",10,0)
 W "============================================================================="
"RTN","PXRMG2R1",11,0)
 W !,"Referred to Homemaker/Home Health Aide(HHHA) or Adult Day Health Care(ADHC)"
"RTN","PXRMG2R1",12,0)
 W !,"or VA In-Home Respite(VAIHR) or Care Coordination programs(CC)"
"RTN","PXRMG2R1",13,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMG2R1",14,0)
 W !,"Fiscal Quarter: "_FQUARTER_" (Calendar Quarter "_QUARTER_")"
"RTN","PXRMG2R1",15,0)
 W !,?39,"    Criteria ",?65,"Measured"
"RTN","PXRMG2R1",16,0)
 W !,"Name",?25,"SSN",?32,"Prog.",?39,"0",?42,"#1",?45,"#2",?48,"#3",?51,"#4",?54,"Date",?65,"Criteria"
"RTN","PXRMG2R1",17,0)
 W !,"============================================================================="
"RTN","PXRMG2R1",18,0)
 W ! D PB Q:Y=0
"RTN","PXRMG2R1",19,0)
 S CNT=0
"RTN","PXRMG2R1",20,0)
 S ARY="^TMP(""PXRMGEC"",$J,""GEC2"",""RPT"")"
"RTN","PXRMG2R1",21,0)
 S NAME="" F  S NAME=$O(@ARY@(NAME)) Q:NAME=""  D
"RTN","PXRMG2R1",22,0)
 .S CNT=1
"RTN","PXRMG2R1",23,0)
 .S SSN="" F  S SSN=$O(@ARY@(NAME,SSN)) Q:SSN=""  D
"RTN","PXRMG2R1",24,0)
 ..S DATE=""  F  S DATE=$O(@ARY@(NAME,SSN,DATE)) Q:DATE=""  D
"RTN","PXRMG2R1",25,0)
 ...S DATEF=$$FMTE^XLFDT(DATE,"5ZM")
"RTN","PXRMG2R1",26,0)
 ...S CRITER="" F  S CRITER=$O(@ARY@(NAME,SSN,DATE,CRITER)) Q:CRITER=""  D
"RTN","PXRMG2R1",27,0)
 ....I CRITER=0 S CRP1="X"
"RTN","PXRMG2R1",28,0)
 ....I CRITER[1 S CRP2="X"
"RTN","PXRMG2R1",29,0)
 ....I CRITER[2 S CRP3="X"
"RTN","PXRMG2R1",30,0)
 ....I CRITER[3 S CRP4="X"
"RTN","PXRMG2R1",31,0)
 ....I CRITER[4 S CRP5="X"
"RTN","PXRMG2R1",32,0)
 ....S PROG=$O(@ARY@(NAME,SSN,DATE,CRITER,""))
"RTN","PXRMG2R1",33,0)
 ....I $D(XYZ) S NAME2="CPRS PATIENT "_$E(SSN,4,5)
"RTN","PXRMG2R1",34,0)
 ....W !,$S($D(XYZ):NAME2,1:NAME),?25,SSN,?32,PROG,?39,CRP1,?42,CRP2,?45,CRP3,?48,CRP4,?51,CRP5,?54,$P(DATEF,"@",1),?65,$S(CRP1="X":"Not Met",1:"")
"RTN","PXRMG2R1",35,0)
 ....S (CRP1,CRP2,CRP3,CRP4,CRP5)=""
"RTN","PXRMG2R1",36,0)
 ....D PB Q:Y=0
"RTN","PXRMG2R1",37,0)
 I CNT=0 W !,"     < NO PATIENT DATA FOUND >",!
"RTN","PXRMG2R1",38,0)
 W ! D PB Q:Y=0
"RTN","PXRMG2R1",39,0)
 W !,"Criteria" D PB Q:Y=0
"RTN","PXRMG2R1",40,0)
 W !,"0: Not eligible under any criteria." D PB Q:Y=0
"RTN","PXRMG2R1",41,0)
 W !,"1: Problems with 3 or more ADL's." D PB Q:Y=0
"RTN","PXRMG2R1",42,0)
 W !,"2: 1 or more patient behavior or cognitive problem." D PB Q:Y=0
"RTN","PXRMG2R1",43,0)
 W !,"3: Expected life limit of less than 6 months." D PB Q:Y=0
"RTN","PXRMG2R1",44,0)
 W !,"4: Combination of the following:" D PB Q:Y=0
"RTN","PXRMG2R1",45,0)
 W !,"   2 or more ADL dependencies" D PB Q:Y=0
"RTN","PXRMG2R1",46,0)
 W !,"   <AND> 2 or more of the following:" D PB Q:Y=0
"RTN","PXRMG2R1",47,0)
 W !,"          Problems with 3 or more IADL's" D PB Q:Y=0
"RTN","PXRMG2R1",48,0)
 W !,"     <OR> age of patients is 75 or more." D PB Q:Y=0
"RTN","PXRMG2R1",49,0)
 W !,"     <OR> living alone in the community." D PB Q:Y=0
"RTN","PXRMG2R1",50,0)
 W !,"     <OR> utilizes the clinics 12 or more time in the" D PB Q:Y=0
"RTN","PXRMG2R1",51,0)
 W !,"          preceding 12 months." D PB Q:Y=0
"RTN","PXRMG2R1",52,0)
 D EXIT
"RTN","PXRMG2R1",53,0)
 Q
"RTN","PXRMG2R1",54,0)
 ;========================================================
"RTN","PXRMG2R1",55,0)
ENP ;Entry Point for Local Report
"RTN","PXRMG2R1",56,0)
 N NAME,ARY,SSN,CRITER,DATE,DATEF,PAGE
"RTN","PXRMG2R1",57,0)
 N CRP1,CRP2,CRP3,CRP4,CRP5,CNT,PROG
"RTN","PXRMG2R1",58,0)
 S (CRP1,CRP2,CRP3,CRP4,CRP5)=""
"RTN","PXRMG2R1",59,0)
 D EN^PXRMG2E2
"RTN","PXRMG2R1",60,0)
 W @IOF
"RTN","PXRMG2R1",61,0)
 W "============================================================================="
"RTN","PXRMG2R1",62,0)
 W !,"Referred to Homemaker/Home Health Aide(HHHA) or Adult Day Health Care(ADHC)"
"RTN","PXRMG2R1",63,0)
 W !,"or VA In-Home Respite(VAIHR) or Care Coordination programs(CC)"
"RTN","PXRMG2R1",64,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMG2R1",65,0)
 W !,"Fiscal Quarter: "_FQUARTER_" (Calendar Quarter "_QUARTER_")"
"RTN","PXRMG2R1",66,0)
 W !,?39,"    Criteria ",?65,"Measured"
"RTN","PXRMG2R1",67,0)
 W !,"Name",?25,"SSN",?32,"Prog.",?39,"0",?42,"#1",?45,"#2",?48,"#3",?51,"#4",?54,"Date",?65,"Criteria"
"RTN","PXRMG2R1",68,0)
 W !,"==========================================================================="
"RTN","PXRMG2R1",69,0)
 S ARY="^TMP(""PXRMGEC"",$J,""GEC2"",""RPT"")"
"RTN","PXRMG2R1",70,0)
 S CNT=0
"RTN","PXRMG2R1",71,0)
 S NAME="" F  S NAME=$O(@ARY@(NAME)) Q:NAME=""  D
"RTN","PXRMG2R1",72,0)
 .S CNT=1
"RTN","PXRMG2R1",73,0)
 .S SSN="" F  S SSN=$O(@ARY@(NAME,SSN)) Q:SSN=""  D
"RTN","PXRMG2R1",74,0)
 ..S DATE=""  F  S DATE=$O(@ARY@(NAME,SSN,DATE)) Q:DATE=""  D
"RTN","PXRMG2R1",75,0)
 ...S DATEF=$$FMTE^XLFDT(DATE,"5ZM")
"RTN","PXRMG2R1",76,0)
 ...S CRITER="" F  S CRITER=$O(@ARY@(NAME,SSN,DATE,CRITER)) Q:CRITER=""  D
"RTN","PXRMG2R1",77,0)
 ....I CRITER=0 S CRP1="X"
"RTN","PXRMG2R1",78,0)
 ....I CRITER[1 S CRP2="X"
"RTN","PXRMG2R1",79,0)
 ....I CRITER[2 S CRP3="X"
"RTN","PXRMG2R1",80,0)
 ....I CRITER[3 S CRP4="X"
"RTN","PXRMG2R1",81,0)
 ....I CRITER[4 S CRP5="X"
"RTN","PXRMG2R1",82,0)
 ....S PROG=$O(@ARY@(NAME,SSN,DATE,CRITER,""))
"RTN","PXRMG2R1",83,0)
 ....W !,$S($D(XYZ):NAME2,1:NAME),?25,SSN,?32,PROG,?39,CRP1,?42,CRP2,?45,CRP3,?48,CRP4,?51,CRP5,?54,$P(DATEF,"@",1),?65,$S(CRP1="X":"Not Met",1:"") D PAGE^PXRMGECZ
"RTN","PXRMG2R1",84,0)
 ....S (CRP1,CRP2,CRP3,CRP4,CRP5)=""
"RTN","PXRMG2R1",85,0)
 I CNT=0 W !,"     < NO PATIENT DATA FOUND >",! D PAGE^PXRMGECZ
"RTN","PXRMG2R1",86,0)
 W !
"RTN","PXRMG2R1",87,0)
 W !,"Criteria"
"RTN","PXRMG2R1",88,0)
 W !,"0: Not eligible under any criteria."
"RTN","PXRMG2R1",89,0)
 W !,"1: Problems with 3 or more ADL's."
"RTN","PXRMG2R1",90,0)
 W !,"2: 1 or more patient behavior or cognitive problem."
"RTN","PXRMG2R1",91,0)
 W !,"3: Expected life limit of less than 6 months."
"RTN","PXRMG2R1",92,0)
 W !,"4: Combination of the following:"
"RTN","PXRMG2R1",93,0)
 W !,"   2 or more ADL dependencies"
"RTN","PXRMG2R1",94,0)
 W !,"   <AND> 2 or more of the following:"
"RTN","PXRMG2R1",95,0)
 W !,"          Problems with 3 or more IADL's"
"RTN","PXRMG2R1",96,0)
 W !,"     <OR> age of patients is 75 or more."
"RTN","PXRMG2R1",97,0)
 W !,"     <OR> living alone in the community."
"RTN","PXRMG2R1",98,0)
 W !,"     <OR> utilizes the clinics 12 or more time in the"
"RTN","PXRMG2R1",99,0)
 W !,"          preceding 12 months."
"RTN","PXRMG2R1",100,0)
 D EXIT
"RTN","PXRMG2R1",101,0)
 Q
"RTN","PXRMG2R1",102,0)
PB ;Page Break
"RTN","PXRMG2R1",103,0)
 S Y=""
"RTN","PXRMG2R1",104,0)
 I $Y=(IOSL-2) D
"RTN","PXRMG2R1",105,0)
 .K DIR
"RTN","PXRMG2R1",106,0)
 .S DIR(0)="E"
"RTN","PXRMG2R1",107,0)
 .D ^DIR
"RTN","PXRMG2R1",108,0)
 .I Y=1 W @IOF S $Y=0
"RTN","PXRMG2R1",109,0)
 K DIR
"RTN","PXRMG2R1",110,0)
 Q
"RTN","PXRMG2R1",111,0)
EXIT ;Exit and Clean up Variables
"RTN","PXRMG2R1",112,0)
 K XYZ,FQUARTER
"RTN","PXRMG2R1",113,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMG2R1",114,0)
 Q
"RTN","PXRMGECJ")
0^64^B75725828
"RTN","PXRMGECJ",1,0)
PXRMGECJ ;SLC/AGP,JVS - Restore Func ;7/14/05  10:42
"RTN","PXRMGECJ",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECJ",3,0)
 ;Restore GEC Referral to open status
"RTN","PXRMGECJ",4,0)
 Q
"RTN","PXRMGECJ",5,0)
 ;
"RTN","PXRMGECJ",6,0)
EN ;Starting point
"RTN","PXRMGECJ",7,0)
 N DIR,DA,DFN,STATUS,NAME,STAMP,CNT,FIRST,SECOND,DIRUT
"RTN","PXRMGECJ",8,0)
 K ^TMP("PXRMGEC_CK1",$J),DIR(0),^TMP("PXRMGEC_CK2",$J)
"RTN","PXRMGECJ",9,0)
 D PAT
"RTN","PXRMGECJ",10,0)
 I $D(DIRUT) Q
"RTN","PXRMGECJ",11,0)
 ;
"RTN","PXRMGECJ",12,0)
DISP ;Display referrals and data
"RTN","PXRMGECJ",13,0)
 N LOC,DIV,SSN,AGE
"RTN","PXRMGECJ",14,0)
 S NAME=$P(^DPT(DFN,0),"^",1)
"RTN","PXRMGECJ",15,0)
 S LOC=$S($D(^DPT(DFN,.1)):"INPATIENT",1:"OUTPATIENT")
"RTN","PXRMGECJ",16,0)
 S DIV=$$GET1^DIQ(2,DFN,.19) I DIV="" S DIV="Unknown"
"RTN","PXRMGECJ",17,0)
 S SSN=$$GET1^DIQ(2,DFN,.09)
"RTN","PXRMGECJ",18,0)
 S AGE=$$GET1^DIQ(2,DFN,.033)
"RTN","PXRMGECJ",19,0)
 S STATUS=$$CK1(DFN)_"^"_$$CK2(DFN)
"RTN","PXRMGECJ",20,0)
 ;
"RTN","PXRMGECJ",21,0)
 ;
"RTN","PXRMGECJ",22,0)
 W !,"================================================================================"
"RTN","PXRMGECJ",23,0)
 W !,NAME," (",SSN,") "," AGE:",AGE,"  ",LOC,"  ",DIV," Division",!
"RTN","PXRMGECJ",24,0)
 W !,?5,"Current Open Referral::"
"RTN","PXRMGECJ",25,0)
 I +STATUS=0 W !,?10,"< N O N E >"
"RTN","PXRMGECJ",26,0)
 I +STATUS=1 D
"RTN","PXRMGECJ",27,0)
 .N I,DATE,DIALOG,USER,STAMP
"RTN","PXRMGECJ",28,0)
 .S I=0 F  S I=$O(^TMP("PXRMGEC_CK1",$J,I)) Q:I=""  D
"RTN","PXRMGECJ",29,0)
 ..S J=0 F  S J=$O(^TMP("PXRMGEC_CK1",$J,I,J)) Q:J=""  D
"RTN","PXRMGECJ",30,0)
 ...S STAMP=$P(^TMP("PXRMGEC_CK1",$J,I,J),"^",2) I STAMP'="" S STAMP=$$FMTE^XLFDT(STAMP,"1P")
"RTN","PXRMGECJ",31,0)
 ...S DIALOG=$$DIALOG($P(^TMP("PXRMGEC_CK1",$J,I,J),"^",3))
"RTN","PXRMGECJ",32,0)
 ...S USER=$P(^TMP("PXRMGEC_CK1",$J,I,J),"^",5) I USER'="" S USER=$P(^VA(200,USER,0),"^",1)
"RTN","PXRMGECJ",33,0)
 ...S DATE=$P(^TMP("PXRMGEC_CK1",$J,I,J),"^",6) I DATE'="" S DATE=$$FMTE^XLFDT(DATE,"1P")
"RTN","PXRMGECJ",34,0)
 ...I J=1 W !,$O(^TMP("PXRMGEC_CK1",$J,0)),?10,STAMP_" (start date)"
"RTN","PXRMGECJ",35,0)
 ...W !,?15,DIALOG,?35,"  by: ",USER," ",?62," On: ",DATE
"RTN","PXRMGECJ",36,0)
 ;
"RTN","PXRMGECJ",37,0)
 W !!,?5,"Historical Referral(s)::"
"RTN","PXRMGECJ",38,0)
 I $P(STATUS,"^",2)=0 D
"RTN","PXRMGECJ",39,0)
 .W !,?10,"< N O N E >"
"RTN","PXRMGECJ",40,0)
 I $P(STATUS,"^",2)=1 D
"RTN","PXRMGECJ",41,0)
 .N J,K,STAMP,STAMPB,DIALOG,USER,DATE,I,DAX,COUNT
"RTN","PXRMGECJ",42,0)
 .S STAMPB=1,J=1,K=0,COUNT=$S($D(LOOP):5,1:0)
"RTN","PXRMGECJ",43,0)
 .S I=1 F  S I=$O(^TMP("PXRMGEC_CK2",$J,I)),COUNT=COUNT+1 Q:I=""  Q:COUNT=3  D
"RTN","PXRMGECJ",44,0)
 ..W !
"RTN","PXRMGECJ",45,0)
 ..S K=0 F  S K=$O(^TMP("PXRMGEC_CK2",$J,I,K)) Q:K=""  D
"RTN","PXRMGECJ",46,0)
 ...S DAX=0 F  S DAX=$O(^TMP("PXRMGEC_CK2",$J,I,K,DAX)) Q:DAX=""  D
"RTN","PXRMGECJ",47,0)
 ....S STAMP=$P(^TMP("PXRMGEC_CK2",$J,I,K,DAX),"^",2)
"RTN","PXRMGECJ",48,0)
 ....I STAMP'=STAMPB S J=J+1,CNT=I
"RTN","PXRMGECJ",49,0)
 ....S CNTA=$O(^TMP("PXRMGEC_CK2",$J,0)),CNTB=CNTA+2
"RTN","PXRMGECJ",50,0)
 ....S STAMP=$$FMTE^XLFDT(STAMP,"1P")
"RTN","PXRMGECJ",51,0)
 ....S DIALOG=$$DIALOG($P(^TMP("PXRMGEC_CK2",$J,I,K,DAX),"^",3))
"RTN","PXRMGECJ",52,0)
 ....S USER=$P(^TMP("PXRMGEC_CK2",$J,I,K,DAX),"^",5) I USER'="" S USER=$P(^VA(200,USER,0),"^",1)
"RTN","PXRMGECJ",53,0)
 ....S DATE=$P(^TMP("PXRMGEC_CK2",$J,I,K,DAX),"^",6) I DATE'="" S DATE=$$FMTE^XLFDT(DATE,"1P")
"RTN","PXRMGECJ",54,0)
 ....I STAMP'=STAMPB W !,I,?10,STAMP_" (start date)"
"RTN","PXRMGECJ",55,0)
 ....W !,?15,DIALOG," ",?35,"  by: ",USER," ",?62," On: ",DATE
"RTN","PXRMGECJ",56,0)
 ....S STAMPB=STAMP
"RTN","PXRMGECJ",57,0)
 ;
"RTN","PXRMGECJ",58,0)
ASK ;Ask the User what they want to do.
"RTN","PXRMGECJ",59,0)
 N DIR,Y,X,MODE,ROPNNUM
"RTN","PXRMGECJ",60,0)
 K DIR(0),DIR("A")
"RTN","PXRMGECJ",61,0)
 I STATUS="0^1",CNT=2,'$D(LOOP) S DIR(0)="S^R:Re-open 1 Referral;V:View All Historical Referrals;P:New Patient;Q:Quit"
"RTN","PXRMGECJ",62,0)
 I STATUS="0^1",CNT=2,$D(LOOP) S DIR(0)="S^R:Re-open 1 Referral;D:Display Last 2 Referrals Only;P:New Patient;Q:Quit"
"RTN","PXRMGECJ",63,0)
 I STATUS="0^1",CNT>2,'$D(LOOP) S DIR(0)="S^R:Re-open 1 Referral;M:Merge 2 Referrals;V:View All Historical Referrals;P:New Patient;Q:Quit"
"RTN","PXRMGECJ",64,0)
 I STATUS="0^1",CNT>2,$D(LOOP) S DIR(0)="S^R:Re-open 1 Referral;M:Merge 2 Referrals;D:Display Last 2 Referrals Only;P:New Patient;Q:Quit"
"RTN","PXRMGECJ",65,0)
 I STATUS="1^1",'$D(LOOP) S DIR(0)="S^C:CLOSE Open Referral;M:Merge 2 Referrals;V:View ALL Historical Referrals;P:New Patient;Q:Quit"
"RTN","PXRMGECJ",66,0)
 I STATUS="1^1",$D(LOOP) S DIR(0)="S^C:CLOSE Open Referral;M:Merge 2 Referrals;D:Display Last 2 Referrals Only;P:New Patient;Q:Quit"
"RTN","PXRMGECJ",67,0)
 I STATUS="1^0"!(STATUS="0^0") S DIR(0)="S^C:CLOSE Open Referral;P:New Patient;Q:Quit"
"RTN","PXRMGECJ",68,0)
 D ^DIR S MODE=Y W !
"RTN","PXRMGECJ",69,0)
 I MODE="R" D
"RTN","PXRMGECJ",70,0)
 .S DIR(0)="NO^"_$O(^TMP("PXRMGEC_CK2",$J,0))_":"_CNT_":0"
"RTN","PXRMGECJ",71,0)
 .S DIR("A")="Enter the number on the Left side of the screen next to the Historical Referral that you want to re-open."
"RTN","PXRMGECJ",72,0)
 .D ^DIR
"RTN","PXRMGECJ",73,0)
 .S ROPNNUM=Y
"RTN","PXRMGECJ",74,0)
 I MODE="M" D  I $D(DIRUT) G ASK
"RTN","PXRMGECJ",75,0)
MRG .I STATUS="0^1" S DIR(0)="NO^"_CNTA_":"_$S($D(LOOP):CNT,1:CNTB)_":0"
"RTN","PXRMGECJ",76,0)
 .I STATUS="1^1" S DIR(0)="NO^"_$O(^TMP("PXRMGEC_CK1",$J,0))_":"_CNT_":0"
"RTN","PXRMGECJ",77,0)
 .S DIR("A")="First Referral Record"
"RTN","PXRMGECJ",78,0)
 .D ^DIR Q:$D(DIRUT)  S FIRST=Y D  Q:$D(DIRUT)
"RTN","PXRMGECJ",79,0)
 ..I STATUS="0^1" S DIR(0)="NO^"_CNTA_":"_$S($D(LOOP):CNT,1:CNTB)_":0"
"RTN","PXRMGECJ",80,0)
 ..I STATUS="1^1" S DIR(0)="NO^"_$O(^TMP("PXRMGEC_CK1",$J,0))_":"_CNT_":0"
"RTN","PXRMGECJ",81,0)
 ..S DIR("A")="Second Referral Record"
"RTN","PXRMGECJ",82,0)
 ..D ^DIR Q:$D(DIRUT)  S SECOND=Y
"RTN","PXRMGECJ",83,0)
 .I +FIRST>0,+SECOND>0,FIRST=SECOND W !,"Try again.." G MRG
"RTN","PXRMGECJ",84,0)
 I MODE="Q" D EXIT
"RTN","PXRMGECJ",85,0)
 I MODE="R" D REOPEN^PXRMGECL(ROPNNUM) G DISP
"RTN","PXRMGECJ",86,0)
 I MODE="M" D MERGE(FIRST,SECOND,DFN) G DISP
"RTN","PXRMGECJ",87,0)
 I MODE="V" S LOOP=1 G DISP
"RTN","PXRMGECJ",88,0)
 I MODE="D" K LOOP G DISP
"RTN","PXRMGECJ",89,0)
 I MODE="P" G EN
"RTN","PXRMGECJ",90,0)
 I MODE="C" D FINISHED^PXRMGECU(DFN,1) G DISP
"RTN","PXRMGECJ",91,0)
 Q
"RTN","PXRMGECJ",92,0)
 ;
"RTN","PXRMGECJ",93,0)
MERGE(FIR,SEC,DFN) ;Merge 2 Referrals
"RTN","PXRMGECJ",94,0)
 Q:FIR=""
"RTN","PXRMGECJ",95,0)
 Q:SEC=""
"RTN","PXRMGECJ",96,0)
 Q:DFN=""
"RTN","PXRMGECJ",97,0)
 N DATE1,DATE2,OLDDT,OLD,SRCHDT
"RTN","PXRMGECJ",98,0)
 W !,"DO MERGE",!
"RTN","PXRMGECJ",99,0)
 ;Get Date to use for setting and to be changed.
"RTN","PXRMGECJ",100,0)
 I $D(^TMP("PXRMGEC_CK1",$J,FIR,1)) S DATE(FIR)=$P($G(^TMP("PXRMGEC_CK1",$J,FIR,1)),"^",2)
"RTN","PXRMGECJ",101,0)
 I $D(^TMP("PXRMGEC_CK1",$J,SEC,1)) S DATE(SEC)=$P($G(^TMP("PXRMGEC_CK1",$J,SEC,1)),"^",2)
"RTN","PXRMGECJ",102,0)
 I $D(^TMP("PXRMGEC_CK2",$J,FIR)) D
"RTN","PXRMGECJ",103,0)
 .N SUB3,SUBDA
"RTN","PXRMGECJ",104,0)
 .S SUB3=$O(^TMP("PXRMGEC_CK2",$J,FIR,0))
"RTN","PXRMGECJ",105,0)
 .S SUBDA=$O(^TMP("PXRMGEC_CK2",$J,FIR,SUB3,0))
"RTN","PXRMGECJ",106,0)
 .S DATE(FIR)=$P($G(^TMP("PXRMGEC_CK2",$J,FIR,SUB3,SUBDA)),"^",2)
"RTN","PXRMGECJ",107,0)
 I $D(^TMP("PXRMGEC_CK2",$J,SEC)) D
"RTN","PXRMGECJ",108,0)
 .N SUB3,SUBDA
"RTN","PXRMGECJ",109,0)
 .S SUB3=$O(^TMP("PXRMGEC_CK2",$J,SEC,0))
"RTN","PXRMGECJ",110,0)
 .S SUBDA=$O(^TMP("PXRMGEC_CK2",$J,SEC,SUB3,0))
"RTN","PXRMGECJ",111,0)
 .S DATE(SEC)=$P($G(^TMP("PXRMGEC_CK2",$J,SEC,SUB3,SUBDA)),"^",2)
"RTN","PXRMGECJ",112,0)
 S OLD(DATE(FIR))=FIR
"RTN","PXRMGECJ",113,0)
 S OLD(DATE(SEC))=SEC
"RTN","PXRMGECJ",114,0)
 S OLDDT=$O(OLD(0))
"RTN","PXRMGECJ",115,0)
 S SRCHDT=$O(OLD(OLDDT))
"RTN","PXRMGECJ",116,0)
 ;
"RTN","PXRMGECJ",117,0)
 ;List of Health Factors DA's to change
"RTN","PXRMGECJ",118,0)
 N DATE,ARY,GEC,DA,VISIT,ROOT,PKG,SOURCE
"RTN","PXRMGECJ",119,0)
 N HF0,HF12,HF801,HF812,ARY1
"RTN","PXRMGECJ",120,0)
 S ARY="^AUPNVHF(""AED"","_SRCHDT_","_DFN_")"
"RTN","PXRMGECJ",121,0)
 S GEC="" F  S GEC=$O(@ARY@(GEC)) Q:GEC=""  D
"RTN","PXRMGECJ",122,0)
 .S DA=0 F  S DA=$O(@ARY@(GEC,DA)) Q:DA=""  D
"RTN","PXRMGECJ",123,0)
 ..S VISIT=$P($G(^AUPNVHF(DA,0)),"^",3)
"RTN","PXRMGECJ",124,0)
 ..S ^TMP("PXRMGECMRG",$J,VISIT,DA,SRCHDT)=""
"RTN","PXRMGECJ",125,0)
 ;
"RTN","PXRMGECJ",126,0)
 ;Change HF with DATA2PCE
"RTN","PXRMGECJ",127,0)
 S I=0
"RTN","PXRMGECJ",128,0)
 S ROOT="^TMP(""PXRMGECMRGPCE"",$J)"
"RTN","PXRMGECJ",129,0)
 S SOURCE="Geriatric Extended Care Merge"
"RTN","PXRMGECJ",130,0)
 ;
"RTN","PXRMGECJ",131,0)
 S ARY1="^TMP(""PXRMGECMRG"",$J)"
"RTN","PXRMGECJ",132,0)
 S VISIT=0 F  S VISIT=$O(@ARY1@(VISIT)) Q:VISIT=""  D
"RTN","PXRMGECJ",133,0)
 .S DA=0 F  S DA=$O(@ARY1@(VISIT,DA)) Q:DA=""  D
"RTN","PXRMGECJ",134,0)
 ..I $D(^AUPNVHF(DA)) D
"RTN","PXRMGECJ",135,0)
 ...S HF0=$G(^AUPNVHF(DA,0))
"RTN","PXRMGECJ",136,0)
 ...S HF12=$G(^AUPNVHF(DA,12))
"RTN","PXRMGECJ",137,0)
 ...S HF812=$G(^AUPNVHF(DA,812))
"RTN","PXRMGECJ",138,0)
 ...;
"RTN","PXRMGECJ",139,0)
 ...S PKG=$P(HF812,"^",2)
"RTN","PXRMGECJ",140,0)
 ...S SOURCE=$P(HF812,"^",3)
"RTN","PXRMGECJ",141,0)
 ...S USER=DUZ
"RTN","PXRMGECJ",142,0)
 ...S @ROOT@("HEALTH FACTOR",DA,"HEALTH FACTOR")=$P(HF0,"^",1)
"RTN","PXRMGECJ",143,0)
 ...S @ROOT@("HEALTH FACTOR",DA,"LEVEL/SEVERITY")=$P(HF0,"^",4)
"RTN","PXRMGECJ",144,0)
 ...S @ROOT@("HEALTH FACTOR",DA,"ENC PROVIDER")=$P(HF12,"^",4)
"RTN","PXRMGECJ",145,0)
 ...S @ROOT@("HEALTH FACTOR",DA,"EVENT D/T")=OLDDT
"RTN","PXRMGECJ",146,0)
 .I $D(^TMP("PXRMGECMRGPCE",$J)) D
"RTN","PXRMGECJ",147,0)
 ..N NOEVT
"RTN","PXRMGECJ",148,0)
 ..S NOEVT="PXKNOEVT"
"RTN","PXRMGECJ",149,0)
 ..S @NOEVT=1
"RTN","PXRMGECJ",150,0)
 ..S OK=$$DATA2PCE^PXAPI(ROOT,PKG,SOURCE,.VISIT,USER,"","","")
"RTN","PXRMGECJ",151,0)
 ;
"RTN","PXRMGECJ",152,0)
 ;Change 801.55
"RTN","PXRMGECJ",153,0)
 N GEC,DA,GECX,GECM
"RTN","PXRMGECJ",154,0)
 ;
"RTN","PXRMGECJ",155,0)
 S GEC="" F  S GEC=$O(^PXRMD(801.55,"AC",DFN,SRCHDT,GEC)) Q:GEC=""  D
"RTN","PXRMGECJ",156,0)
 .S DA=0 F  S DA=$O(^PXRMD(801.55,"AC",DFN,SRCHDT,GEC,DA)) Q:DA=""  D
"RTN","PXRMGECJ",157,0)
 ..S GECX(1,801.55,DA_",",.02)=OLDDT
"RTN","PXRMGECJ",158,0)
 ..D FILE^DIE("","GECX(1)") K GECX
"RTN","PXRMGECJ",159,0)
 ..;
"RTN","PXRMGECJ",160,0)
 ..I FIR=$O(^TMP("PXRMGEC_CK1",$J,0)) D
"RTN","PXRMGECJ",161,0)
 ...;I FIR=1!(SEC=1) D
"RTN","PXRMGECJ",162,0)
 ...I '$D(^PXRMD(801.5,"AC",DFN,SRCHDT,GEC)) D
"RTN","PXRMGECJ",163,0)
 ....S GECM(1,801.5,"+1,",.01)=$P($G(^PXRMD(801.55,DA,0)),"^",1)
"RTN","PXRMGECJ",164,0)
 ....S GECM(1,801.5,"+1,",.02)=$P($G(^PXRMD(801.55,DA,0)),"^",2)
"RTN","PXRMGECJ",165,0)
 ....S GECM(1,801.5,"+1,",.03)=$P($G(^PXRMD(801.55,DA,0)),"^",3)
"RTN","PXRMGECJ",166,0)
 ....S GECM(1,801.5,"+1,",.04)=$P($G(^PXRMD(801.55,DA,0)),"^",4)
"RTN","PXRMGECJ",167,0)
 ....S GECM(1,801.5,"+1,",.05)=$P($G(^PXRMD(801.55,DA,0)),"^",5)
"RTN","PXRMGECJ",168,0)
 ....S GECM(1,801.5,"+1,",.06)=$P($G(^PXRMD(801.55,DA,0)),"^",6)
"RTN","PXRMGECJ",169,0)
 ....D UPDATE^DIE("","GECM(1)")
"RTN","PXRMGECJ",170,0)
 ;
"RTN","PXRMGECJ",171,0)
 ;
"RTN","PXRMGECJ",172,0)
 ;Change 801.5
"RTN","PXRMGECJ",173,0)
 N GEC,DA,GECX
"RTN","PXRMGECJ",174,0)
 ;
"RTN","PXRMGECJ",175,0)
 S GEC="" F  S GEC=$O(^PXRMD(801.5,"AC",DFN,SRCHDT,GEC)) Q:GEC=""  D
"RTN","PXRMGECJ",176,0)
 .S DA=0 F  S DA=$O(^PXRMD(801.5,"AC",DFN,SRCHDT,GEC,DA)) Q:DA=""  D
"RTN","PXRMGECJ",177,0)
 ..S GECX(1,801.5,DA_",",.02)=OLDDT
"RTN","PXRMGECJ",178,0)
 ..D FILE^DIE("","GECX(1)") K GECX
"RTN","PXRMGECJ",179,0)
 ;EXIT
"RTN","PXRMGECJ",180,0)
 K ^TMP("PXRMGECMRG",$J)
"RTN","PXRMGECJ",181,0)
 K ^TMP("PXRMGECMRGPCE",$J)
"RTN","PXRMGECJ",182,0)
 Q
"RTN","PXRMGECJ",183,0)
 ;
"RTN","PXRMGECJ",184,0)
 ;
"RTN","PXRMGECJ",185,0)
PAT ;LOOK UP ALL PATIENTS
"RTN","PXRMGECJ",186,0)
 W @IOF,!
"RTN","PXRMGECJ",187,0)
 S DIR(0)="801.55,.01"
"RTN","PXRMGECJ",188,0)
 D ^DIR
"RTN","PXRMGECJ",189,0)
 S DFN=+Y
"RTN","PXRMGECJ",190,0)
 K Y,Y(0),Y(0,0)
"RTN","PXRMGECJ",191,0)
 Q
"RTN","PXRMGECJ",192,0)
 ;
"RTN","PXRMGECJ",193,0)
CK1(DFN) ;Check for current open referral
"RTN","PXRMGECJ",194,0)
 Q:DFN'>0
"RTN","PXRMGECJ",195,0)
 N STATUS,I,Z
"RTN","PXRMGECJ",196,0)
 K ^TMP("PXRMGEC_CK1",$J)
"RTN","PXRMGECJ",197,0)
 S STATUS=0,I=1,J=0
"RTN","PXRMGECJ",198,0)
 ;S Z=$$CK2(DFN) S I=$O(^TMP("PXRMGEC_CK2",$J,0))-1
"RTN","PXRMGECJ",199,0)
 I $D(^PXRMD(801.5,"B",DFN)) D
"RTN","PXRMGECJ",200,0)
 .S DA=0 F  S DA=$O(^PXRMD(801.5,"B",DFN,DA)) Q:DA=""  S J=J+1 D
"RTN","PXRMGECJ",201,0)
 ..S ^TMP("PXRMGEC_CK1",$J,I,J)=$G(^PXRMD(801.5,DA,0))
"RTN","PXRMGECJ",202,0)
 .S STATUS=1
"RTN","PXRMGECJ",203,0)
 Q STATUS
"RTN","PXRMGECJ",204,0)
 ;
"RTN","PXRMGECJ",205,0)
CK2(DFN) ;Check for entries in History file 801.55
"RTN","PXRMGECJ",206,0)
 Q:DFN'>0
"RTN","PXRMGECJ",207,0)
 N STATUS,I,CURRENT,DATE,DIA,DA,J
"RTN","PXRMGECJ",208,0)
 K ^TMP("PXRMGEC_CK2",$J)
"RTN","PXRMGECJ",209,0)
 S STATUS=0,I=1000,J=0
"RTN","PXRMGECJ",210,0)
 I $D(^TMP("PXRMGEC_CK1",$J)) S CURRENT=$P($G(^TMP("PXRMGEC_CK1",$J,$O(^TMP("PXRMGEC_CK1",$J,0)),1)),"^",2)
"RTN","PXRMGECJ",211,0)
 I $D(^PXRMD(801.55,"B",DFN)) D
"RTN","PXRMGECJ",212,0)
 .S DATE="" F  S DATE=$O(^PXRMD(801.55,"AC",DFN,DATE)) Q:DATE=""  D
"RTN","PXRMGECJ",213,0)
 ..Q:$G(CURRENT)=DATE
"RTN","PXRMGECJ",214,0)
 ..S I=I-1
"RTN","PXRMGECJ",215,0)
 ..S DIA="" F  S DIA=$O(^PXRMD(801.55,"AC",DFN,DATE,DIA)) Q:DIA=""  D
"RTN","PXRMGECJ",216,0)
 ...S J=J+1
"RTN","PXRMGECJ",217,0)
 ...S DA=0 F  S DA=$O(^PXRMD(801.55,"AC",DFN,DATE,DIA,DA)) Q:DA=""  D
"RTN","PXRMGECJ",218,0)
 ....S ^TMP("PXRMGEC_CK2",$J,I,J,DA)=$G(^PXRMD(801.55,DA,0))
"RTN","PXRMGECJ",219,0)
 ....S STATUS=1
"RTN","PXRMGECJ",220,0)
 ;RENUMBER ARRAY
"RTN","PXRMGECJ",221,0)
 I $D(^TMP("PXRMGEC_CK2",$J)) D
"RTN","PXRMGECJ",222,0)
 .N OLD,NEW,J,DA,DATA
"RTN","PXRMGECJ",223,0)
 .S NEW=1
"RTN","PXRMGECJ",224,0)
 .S OLD=0 F  S OLD=$O(^TMP("PXRMGEC_CK2",$J,OLD)) Q:OLD=""  D
"RTN","PXRMGECJ",225,0)
 ..S NEW=NEW+1
"RTN","PXRMGECJ",226,0)
 ..S J=0 F  S J=$O(^TMP("PXRMGEC_CK2",$J,OLD,J)) Q:J=""  D
"RTN","PXRMGECJ",227,0)
 ...S DA=0 F  S DA=$O(^TMP("PXRMGEC_CK2",$J,OLD,J,DA)) Q:DA=""  D
"RTN","PXRMGECJ",228,0)
 ....S DATA=$G(^TMP("PXRMGEC_CK2",$J,OLD,J,DA))
"RTN","PXRMGECJ",229,0)
 ....S ^TMP("PXRMGEC_CK2",$J,NEW,J,DA)=DATA
"RTN","PXRMGECJ",230,0)
 ....K ^TMP("PXRMGEC_CK2",$J,OLD,J,DA)
"RTN","PXRMGECJ",231,0)
 Q STATUS
"RTN","PXRMGECJ",232,0)
 ;
"RTN","PXRMGECJ",233,0)
DIALOG(DIA) ;Returns expanded name of dialog
"RTN","PXRMGECJ",234,0)
 N NAME
"RTN","PXRMGECJ",235,0)
 S NAME=""
"RTN","PXRMGECJ",236,0)
 I DIA="GEC1" S NAME="Social Services"
"RTN","PXRMGECJ",237,0)
 I DIA="GEC2" S NAME="Nursing Assessment"
"RTN","PXRMGECJ",238,0)
 I DIA="GEC3" S NAME="Care Recommendation"
"RTN","PXRMGECJ",239,0)
 I DIA="GECF" S NAME="Care Coordination"
"RTN","PXRMGECJ",240,0)
 Q NAME
"RTN","PXRMGECJ",241,0)
 ;
"RTN","PXRMGECJ",242,0)
EXIT ;CLEAN UP
"RTN","PXRMGECJ",243,0)
 K CK2,LOOP,X,CNTA,CNTB,ROPNNUM
"RTN","PXRMGECJ",244,0)
 K ^TMP("PXRMGEC_CK1",$J),^TMP("PXRMGEC_CK2",$J)
"RTN","PXRMGECJ",245,0)
 Q
"RTN","PXRMGECJ",246,0)
 ;
"RTN","PXRMGECK")
0^65^B15693311
"RTN","PXRMGECK",1,0)
PXRMGECK ;SLC/AGP,JVS-GEC Utilities Cont. ;7/14/05  10:42
"RTN","PXRMGECK",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECK",3,0)
 ;
"RTN","PXRMGECK",4,0)
 Q
"RTN","PXRMGECK",5,0)
TIUSTAT(DFN,GEC) ;Status of TIU Notes
"RTN","PXRMGECK",6,0)
 N TIUDA,IEN,TITLE,NTTYP,STATUS,STATDA,STATUS,AUTDA,AUTHOR,DATE,DATEFM
"RTN","PXRMGECK",7,0)
 Q:'$D(^PXRMD(801.5,"B",DFN)) 0
"RTN","PXRMGECK",8,0)
 Q:'$D(^PXRMD(801.5,"AD",DFN,GEC)) 0
"RTN","PXRMGECK",9,0)
 S IEN=$O(^PXRMD(801.5,"AD",DFN,GEC,0))
"RTN","PXRMGECK",10,0)
 S TIUDA=$P($G(^PXRMD(801.5,IEN,0)),"^",4)
"RTN","PXRMGECK",11,0)
 Q:TIUDA="" 0
"RTN","PXRMGECK",12,0)
 Q:'$D(^TIU(8925,TIUDA,0)) 0
"RTN","PXRMGECK",13,0)
 S NTTYP=$P($G(^TIU(8925,TIUDA,0)),"^",1)
"RTN","PXRMGECK",14,0)
 S TITLE=$P($G(^TIU(8925.1,NTTYP,0)),"^",1)
"RTN","PXRMGECK",15,0)
 S STATDA=$P($G(^TIU(8925,TIUDA,0)),"^",5)
"RTN","PXRMGECK",16,0)
 S STATUS=$P($G(^TIU(8925.6,STATDA,0)),"^",1)
"RTN","PXRMGECK",17,0)
 S AUTDA=$P($G(^TIU(8925,TIUDA,12)),"^",2) D
"RTN","PXRMGECK",18,0)
 .I AUTDA="" S AUTHOR="unknown" Q
"RTN","PXRMGECK",19,0)
 .S AUTHOR=$$GET1^DIQ(200,AUTDA,.01)
"RTN","PXRMGECK",20,0)
 S DATEFM=$P($G(^TIU(8925,TIUDA,12)),"^",1) D
"RTN","PXRMGECK",21,0)
 .I DATEFM="" S DATE="unknown" Q
"RTN","PXRMGECK",22,0)
 .S DATE=$$FMTE^XLFDT(DATEFM,"D2")
"RTN","PXRMGECK",23,0)
 Q 1_"^"_TITLE_":"_STATUS_":"_AUTHOR_":"_DATE
"RTN","PXRMGECK",24,0)
 ;
"RTN","PXRMGECK",25,0)
ACOPYDEL ;clean out ACOPY nodes
"RTN","PXRMGECK",26,0)
 N NIEN,STATUS,STIEN,NOTEDFN,CDFN,EDT,GEC,DATE
"RTN","PXRMGECK",27,0)
 Q:'$D(^PXRMD(801.5,"ACOPY"))
"RTN","PXRMGECK",28,0)
 S NIEN=0 F  S NIEN=$O(^PXRMD(801.5,"ACOPY",NIEN)) Q:NIEN=""  D
"RTN","PXRMGECK",29,0)
 .Q:'$D(^TIU(8925,NIEN))
"RTN","PXRMGECK",30,0)
 .S STIEN=$P($G(^TIU(8925,NIEN,0)),"^",5)
"RTN","PXRMGECK",31,0)
 .S STATUS=$P($G(^TIU(8925.6,STIEN,0)),"^",1)
"RTN","PXRMGECK",32,0)
 .I STATUS="COMPLETED" K ^PXRMD(801.5,"ACOPY",NIEN)
"RTN","PXRMGECK",33,0)
 .S NOTEDFN=$P($G(^TIU(8925,NIEN,0)),"^",2)
"RTN","PXRMGECK",34,0)
 .S CDFN=0 F  S CDFN=$O(^PXRMD(801.5,"ACOPY",NIEN,CDFN)) Q:CDFN=""  D
"RTN","PXRMGECK",35,0)
 ..I NOTEDFN'=CDFN K ^PXRMD(801.5,"ACOPY",NIEN,CDFN)
"RTN","PXRMGECK",36,0)
 S NIEN=0 F  S NIEN=$O(^PXRMD(801.5,"ACOPY",NIEN)) Q:NIEN=""  D
"RTN","PXRMGECK",37,0)
 .S CDFN=0 F  S CDFN=$O(^PXRMD(801.5,"ACOPY",NIEN,CDFN)) Q:CDFN=""  D
"RTN","PXRMGECK",38,0)
 ..S EDT=0 F  S EDT=$O(^PXRMD(801.5,"ACOPY",NIEN,CDFN,EDT)) Q:EDT=""  D
"RTN","PXRMGECK",39,0)
 ...S GEC="" F  S GEC=$O(^PXRMD(801.5,"ACOPY",NIEN,CDFN,EDT,GEC)) Q:GEC=""  D
"RTN","PXRMGECK",40,0)
 ....S DATE=$O(^PXRMD(801.5,"ACOPY",NIEN,CDFN,EDT,GEC,0))
"RTN","PXRMGECK",41,0)
 ....I '$D(^TIU(8925,NIEN)),$$FMDIFF^XLFDT(DT,DATE,1)>1 D
"RTN","PXRMGECK",42,0)
 .....K ^PXRMD(801.5,"ACOPY",NIEN,CDFN,EDT,GEC)
"RTN","PXRMGECK",43,0)
 Q
"RTN","PXRMGECK",44,0)
 ;
"RTN","PXRMGECK",45,0)
 ;
"RTN","PXRMGECK",46,0)
REMOVE ;DELETE HEALTH FACTORS
"RTN","PXRMGECK",47,0)
 N NODE0,NODE12,NODE812,VISIT,PKG,VAL,PCEARY
"RTN","PXRMGECK",48,0)
 Q:'$D(HFARY)
"RTN","PXRMGECK",49,0)
 S PCEARY="^TMP(""PXRMGECZ"",$J)"
"RTN","PXRMGECK",50,0)
 S HFDA=0 F  S HFDA=$O(HFARY(HFDA)) Q:HFDA=""  D
"RTN","PXRMGECK",51,0)
 .N NODE0,NODE12,NODE812
"RTN","PXRMGECK",52,0)
 .S NODE0=$G(^AUPNVHF(HFDA,0))
"RTN","PXRMGECK",53,0)
 .S NODE12=$G(^AUPNVHF(HFDA,12))
"RTN","PXRMGECK",54,0)
 .S NODE812=$G(^AUPNVHF(HFDA,812))
"RTN","PXRMGECK",55,0)
 .S VISIT=$P(NODE0,"^",3)
"RTN","PXRMGECK",56,0)
 .S PKG=$P(NODE812,"^",2)
"RTN","PXRMGECK",57,0)
 .S ^TMP("PXRMGECZ",$J,"HEALTH FACTOR",HFDA,"HEALTH FACTOR")=$P(NODE0,"^",1)
"RTN","PXRMGECK",58,0)
 .S ^TMP("PXRMGECZ",$J,"HEALTH FACTOR",HFDA,"ENC PROVIDER")=$P(NODE12,"^",4)
"RTN","PXRMGECK",59,0)
 .S ^TMP("PXRMGECZ",$J,"HEALTH FACTOR",HFDA,"EVENT D/T")=$P(NODE12,"^",1)
"RTN","PXRMGECK",60,0)
 .S ^TMP("PXRMGECZ",$J,"HEALTH FACTOR",HFDA,"DELETE")=1
"RTN","PXRMGECK",61,0)
 S VAL=$$DATA2PCE^PXAPI(PCEARY,PKG,GECT,VISIT)
"RTN","PXRMGECK",62,0)
 K ^TMP("PXRMGECZ",$J)
"RTN","PXRMGECK",63,0)
 ;
"RTN","PXRMGECK",64,0)
 Q
"RTN","PXRMGECK",65,0)
UPDATE(DFN,VISIT) ;Remove entry from 801.5 if deleted by dialog/tiu
"RTN","PXRMGECK",66,0)
 ;
"RTN","PXRMGECK",67,0)
 N HFDA,COUNT,SOURCE,GEC1,GEC2,GEC3,GECF,ENCDT,WHICH
"RTN","PXRMGECK",68,0)
 N HERE,NOT,DA,DIA
"RTN","PXRMGECK",69,0)
 Q:DFN=""
"RTN","PXRMGECK",70,0)
 ;
"RTN","PXRMGECK",71,0)
 ;Delete Health Factors if not TIU document
"RTN","PXRMGECK",72,0)
 ;
"RTN","PXRMGECK",73,0)
 S ENCDT=$O(^PXRMD(801.5,"AC",DFN,""))
"RTN","PXRMGECK",74,0)
 Q:ENCDT=""
"RTN","PXRMGECK",75,0)
 ;
"RTN","PXRMGECK",76,0)
 S (GEC1,GEC2,GEC3,GECF)=0
"RTN","PXRMGECK",77,0)
 ;GET IEN FOR DATA SOURCES FOR GEC
"RTN","PXRMGECK",78,0)
 I $D(^PX(839.7,"B","GEC1")) D
"RTN","PXRMGECK",79,0)
 .S GEC1=$O(^PX(839.7,"B","GEC1","")),WHICH(GEC1)="GEC1",NOT("GEC1")=""
"RTN","PXRMGECK",80,0)
 I $D(^PX(839.7,"B","GEC2")) D
"RTN","PXRMGECK",81,0)
 .S GEC2=$O(^PX(839.7,"B","GEC2","")),WHICH(GEC2)="GEC2",NOT("GEC2")=""
"RTN","PXRMGECK",82,0)
 I $D(^PX(839.7,"B","GEC3")) D
"RTN","PXRMGECK",83,0)
 .S GEC3=$O(^PX(839.7,"B","GEC3","")),WHICH(GEC3)="GEC3",NOT("GEC3")=""
"RTN","PXRMGECK",84,0)
 I $D(^PX(839.7,"B","GECF")) D
"RTN","PXRMGECK",85,0)
 .S GECF=$O(^PX(839.7,"B","GECF","")),WHICH(GECF)="GECF",NOT("GECF")=""
"RTN","PXRMGECK",86,0)
 ;
"RTN","PXRMGECK",87,0)
 ;
"RTN","PXRMGECK",88,0)
 S COUNT=0
"RTN","PXRMGECK",89,0)
 S HFDA="" F  S HFDA=$O(^AUPNVHF("C",DFN,HFDA)) Q:HFDA=""  D
"RTN","PXRMGECK",90,0)
 .I $D(^AUPNVHF(HFDA,12)) D
"RTN","PXRMGECK",91,0)
 ..I $P($G(^AUPNVHF(HFDA,12)),"^",1)=ENCDT D
"RTN","PXRMGECK",92,0)
 ...S SOURCE=$P($G(^AUPNVHF(HFDA,812)),"^",3)
"RTN","PXRMGECK",93,0)
 ...Q:SOURCE=""
"RTN","PXRMGECK",94,0)
 ...I (SOURCE=$G(GEC1))!(SOURCE=$G(GEC2))!(SOURCE=$G(GEC3))!(SOURCE=$G(GECF)) D
"RTN","PXRMGECK",95,0)
 ....S HERE($G(WHICH(SOURCE)))=""
"RTN","PXRMGECK",96,0)
 ....K NOT($G(WHICH(SOURCE)))
"RTN","PXRMGECK",97,0)
 ....S COUNT=COUNT+1
"RTN","PXRMGECK",98,0)
 S DIA="" F  S DIA=$O(NOT(DIA)) Q:DIA=""  D
"RTN","PXRMGECK",99,0)
 .S DA=$O(^PXRMD(801.5,"AD",DFN,DIA,0))
"RTN","PXRMGECK",100,0)
 .Q:DA=""
"RTN","PXRMGECK",101,0)
 .S ^PXRMD(801.5,"ACOPY",DFN,ENCDT,DIA)=$P($G(^PXRMD(801.5,DA,0)),"^",4)
"RTN","PXRMGECK",102,0)
 .S DIK="^PXRMD(801.5," D ^DIK
"RTN","PXRMGECK",103,0)
 Q
"RTN","PXRMGECK",104,0)
 ;
"RTN","PXRMGECK",105,0)
 ;
"RTN","PXRMGECL")
0^66^B5710145
"RTN","PXRMGECL",1,0)
PXRMGECL ;SLC/AGP,JVS - Restore Func & Utilities ;7/14/05  10:43
"RTN","PXRMGECL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECL",3,0)
 Q
"RTN","PXRMGECL",4,0)
 ;
"RTN","PXRMGECL",5,0)
CNT(DOC,DFN) ;Count number of referals per Provider and patient
"RTN","PXRMGECL",6,0)
 N DATE
"RTN","PXRMGECL",7,0)
 S CNT=0
"RTN","PXRMGECL",8,0)
 S DATE=0 F  S DATE=$O(^TMP("PXRMGEC",$J,"DFNCNT",DOC,DFN,DATE)) Q:DATE=""  D
"RTN","PXRMGECL",9,0)
 .S CNT=CNT+1
"RTN","PXRMGECL",10,0)
 Q CNT
"RTN","PXRMGECL",11,0)
POST ;Post Routine to gather old date from health factors
"RTN","PXRMGECL",12,0)
 ;
"RTN","PXRMGECL",13,0)
 D BMES^XPDUTL("Adding data to new file 801.55")
"RTN","PXRMGECL",14,0)
 D BMES^XPDUTL("Please Wait.....Thank you")
"RTN","PXRMGECL",15,0)
 N TIME,DFN,GEC,DA,GECX,GECNA,HF0,HF12,CNT
"RTN","PXRMGECL",16,0)
 S CNT=0
"RTN","PXRMGECL",17,0)
 S TIME=0 F  S TIME=$O(^AUPNVHF("AED",TIME)) Q:TIME=""  D
"RTN","PXRMGECL",18,0)
 .Q:TIME'>3000000
"RTN","PXRMGECL",19,0)
 .S DFN=0 F  S DFN=$O(^AUPNVHF("AED",TIME,DFN)) Q:DFN=""  D
"RTN","PXRMGECL",20,0)
 ..S GEC=0 F  S GEC=$O(^AUPNVHF("AED",TIME,DFN,GEC)) Q:GEC=""  D
"RTN","PXRMGECL",21,0)
 ...S GECNA=$P($G(^PX(839.7,GEC,0)),"^",1) Q:GECNA'["GEC"
"RTN","PXRMGECL",22,0)
 ...S DA=0 F  S DA=$O(^AUPNVHF("AED",TIME,DFN,GEC,DA)) Q:DA=""  D
"RTN","PXRMGECL",23,0)
 ....S HF0=$G(^AUPNVHF(DA,0))
"RTN","PXRMGECL",24,0)
 ....S HF12=$G(^AUPNVHF(DA,12))
"RTN","PXRMGECL",25,0)
 ....S HF801=$G(^AUPNVHF(DA,801))
"RTN","PXRMGECL",26,0)
 ....S GECX(1,801.55,"+1,",.01)=DFN
"RTN","PXRMGECL",27,0)
 ....S GECX(1,801.55,"+1,",.02)=$P(HF12,"^",1)
"RTN","PXRMGECL",28,0)
 ....S GECX(1,801.55,"+1,",.03)=GECNA
"RTN","PXRMGECL",29,0)
 ....S GECX(1,801.55,"+1,",.05)=+$P($P(HF801,"^",2)," ",2)
"RTN","PXRMGECL",30,0)
 ....S GECX(1,801.55,"+1,",.06)=$P($P(HF12,"^",1),".",1)
"RTN","PXRMGECL",31,0)
 ....I '$D(^PXRMD(801.55,"AE",DFN,$P(HF12,"^",1),GECNA,+$P($P(HF801,"^",2)," ",2))) D
"RTN","PXRMGECL",32,0)
 .....D UPDATE^DIE("","GECX(1)")
"RTN","PXRMGECL",33,0)
 .....S CNT=CNT+1
"RTN","PXRMGECL",34,0)
 .....K GECX,HF0,HF12
"RTN","PXRMGECL",35,0)
 S DIK="^PXRMXT(810.3,",DIK(1)="6^AHLID"
"RTN","PXRMGECL",36,0)
 D IXALL^DIK
"RTN","PXRMGECL",37,0)
 Q
"RTN","PXRMGECL",38,0)
 ;
"RTN","PXRMGECL",39,0)
REOPEN(NUM) ;Move a referral from the Historial 801.55 to 801.5
"RTN","PXRMGECL",40,0)
 Q:NUM=""
"RTN","PXRMGECL",41,0)
 N I,GEX
"RTN","PXRMGECL",42,0)
 S I=0 F  S I=$O(^TMP("PXRMGEC_CK2",$J,NUM,I)) Q:I=""  D
"RTN","PXRMGECL",43,0)
 .S DA=0 F  S DA=$O(^TMP("PXRMGEC_CK2",$J,NUM,I,DA)) Q:DA=""  D
"RTN","PXRMGECL",44,0)
 ..S GEX(1,801.5,"+1,",.01)=$P(^TMP("PXRMGEC_CK2",$J,NUM,I,DA),"^",1)
"RTN","PXRMGECL",45,0)
 ..S GEX(1,801.5,"+1,",.02)=$P(^TMP("PXRMGEC_CK2",$J,NUM,I,DA),"^",2)
"RTN","PXRMGECL",46,0)
 ..S GEX(1,801.5,"+1,",.03)=$P(^TMP("PXRMGEC_CK2",$J,NUM,I,DA),"^",3)
"RTN","PXRMGECL",47,0)
 ..S GEX(1,801.5,"+1,",.04)=$P(^TMP("PXRMGEC_CK2",$J,NUM,I,DA),"^",4)
"RTN","PXRMGECL",48,0)
 ..S GEX(1,801.5,"+1,",.05)=$P(^TMP("PXRMGEC_CK2",$J,NUM,I,DA),"^",5)
"RTN","PXRMGECL",49,0)
 ..S GEX(1,801.5,"+1,",.06)=$P(^TMP("PXRMGEC_CK2",$J,NUM,I,DA),"^",6)
"RTN","PXRMGECL",50,0)
 ..D UPDATE^DIE("","GEX(1)")
"RTN","PXRMGECL",51,0)
 Q
"RTN","PXRMGECL",52,0)
 ;
"RTN","PXRMGECM")
0^67^B33651688
"RTN","PXRMGECM",1,0)
PXRMGECM ;SLC/JVS GEC-Score Reports-cont'd ;7/14/05  10:43
"RTN","PXRMGECM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECM",3,0)
 Q
"RTN","PXRMGECM",4,0)
SUM ;By Summary by Patient
"RTN","PXRMGECM",5,0)
 N CAT,HF,DATE,DFN,Y,HFN,CNTREF,X,REFNUM,SUM,GSUM,CATDANA,PAGE
"RTN","PXRMGECM",6,0)
 N DATER,SDATE,SCNT
"RTN","PXRMGECM",7,0)
 D E^PXRMGECV("HS1",1,BDT,EDT,"F",DFNONLY)
"RTN","PXRMGECM",8,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECM",9,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECM",10,0)
 W @IOF
"RTN","PXRMGECM",11,0)
 S CATDANA("GEC REFERRAL BASIC ADL")=""
"RTN","PXRMGECM",12,0)
 S CATDANA("GEC REFERRAL IADL")=""
"RTN","PXRMGECM",13,0)
 S CATDANA("GEC REFERRAL SKILLED CARE")=""
"RTN","PXRMGECM",14,0)
 S CATDANA("GEC REFERRAL PATIENT BEHAVIORS/SYMPTOM")=""
"RTN","PXRMGECM",15,0)
 ;
"RTN","PXRMGECM",16,0)
 S Y=1,SUM=0,DATER=0,GSUM=0
"RTN","PXRMGECM",17,0)
 S DFN="" F  S DFN=$O(^TMP("PXRMGEC",$J,"HS1",DFN)) Q:DFN=""!(Y=0)  D
"RTN","PXRMGECM",18,0)
 .S CNTREF="",REFNUM=0 F  S CNTREF=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF)) Q:CNTREF=""!(Y=0)  D
"RTN","PXRMGECM",19,0)
 ..S REFNUM=REFNUM+1
"RTN","PXRMGECM",20,0)
 ..S SDATE=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,0)) D
"RTN","PXRMGECM",21,0)
 ...S DATER=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,SDATE,0))
"RTN","PXRMGECM",22,0)
 ..S DATE=0 F  S DATE=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE)) Q:DATE=""!(Y=0)  D
"RTN","PXRMGECM",23,0)
 ...S VDT=0 F  S VDT=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT)) Q:VDT=""!(Y=0)  D
"RTN","PXRMGECM",24,0)
 ....S CAT=0 F  S CAT=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT,CAT)) Q:CAT=""!(Y=0)  D
"RTN","PXRMGECM",25,0)
 .....Q:'$D(CATDANA(CAT))
"RTN","PXRMGECM",26,0)
 .....S SUM=0
"RTN","PXRMGECM",27,0)
 .....S DATEV=0 F  S DATEV=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT,CAT,DATEV)) Q:DATEV=""!(Y=0)  D
"RTN","PXRMGECM",28,0)
 ......S DA=0 F  S DA=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT,CAT,DATEV,DA)) Q:DA=""!(Y=0)  D
"RTN","PXRMGECM",29,0)
 .......S HFN=$$HFNAME^PXRMGECR(DA)
"RTN","PXRMGECM",30,0)
 .......S SUM=SUM+$$VALUE($P($G(^AUPNVHF(DA,0)),"^",1))
"RTN","PXRMGECM",31,0)
 .......S CATSUM(CAT)=SUM
"RTN","PXRMGECM",32,0)
 ..S GSUM=+$G(CATSUM("GEC REFERRAL IADL"))+(+$G(CATSUM("GEC REFERRAL BASIC ADL")))+(+$G(CATSUM("GEC REFERRAL SKILLED CARE")))+(+$G(CATSUM("GEC REFERRAL PATIENT BEHAVIORS/SYMPTOM")))
"RTN","PXRMGECM",33,0)
 ..S ^TMP("PXRMGEC",$J,"S",DFN,SDATE,DATER,+$G(CATSUM("GEC REFERRAL IADL")),+$G(CATSUM("GEC REFERRAL BASIC ADL")),+$G(CATSUM("GEC REFERRAL SKILLED CARE")),+$G(CATSUM("GEC REFERRAL PATIENT BEHAVIORS/SYMPTOM")),GSUM)=""
"RTN","PXRMGECM",34,0)
 ..K CATSUM
"RTN","PXRMGECM",35,0)
 ;
"RTN","PXRMGECM",36,0)
DIS ;Start of Display
"RTN","PXRMGECM",37,0)
 S REF="^TMP(""PXRMGEC"",$J,""S"")"
"RTN","PXRMGECM",38,0)
 W !,"=============================================================================="
"RTN","PXRMGECM",39,0)
 W !,"GEC Patient-Summary (Score)"
"RTN","PXRMGECM",40,0)
 W !,"Data on Complete Referrals Only"
"RTN","PXRMGECM",41,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECM",42,0)
 W !
"RTN","PXRMGECM",43,0)
 I FOR W !,?33,"Finished",?49,"Basic",?55,"Skilled",?63,"Patient",?73,"TOTAL"
"RTN","PXRMGECM",44,0)
 I FOR W !,"Name",?22,"SSN",?33,"Date",?44,"IADL",?49,"ADL",?55,"Care",?63,"Behaviors",?73,"ACROSS"
"RTN","PXRMGECM",45,0)
 I 'FOR W !,"Name^SSN^Referral Date^IADL^Basic ADL^Skilled Care^Behaviors^Totals"
"RTN","PXRMGECM",46,0)
 W !,"=============================================================================="
"RTN","PXRMGECM",47,0)
 S PAGE=1
"RTN","PXRMGECM",48,0)
 N S1,S2,S3,S4,S5,S1T,S2T,S3T,S4T,S5T
"RTN","PXRMGECM",49,0)
 S (S1T,S2T,S3T,S4T,S5T,CNT)=0
"RTN","PXRMGECM",50,0)
 S DFN="" F  S DFN=$O(@REF@(DFN)) Q:DFN=""  D
"RTN","PXRMGECM",51,0)
 .S SDATE="" F  S SDATE=$O(@REF@(DFN,SDATE)) Q:SDATE=""  D
"RTN","PXRMGECM",52,0)
 ..S DATER="" F  S DATER=$O(@REF@(DFN,SDATE,DATER)) Q:DATER=""  D
"RTN","PXRMGECM",53,0)
 ...S CNT=CNT+1
"RTN","PXRMGECM",54,0)
 ...S S1="" F  S S1=$O(@REF@(DFN,SDATE,DATER,S1)) Q:S1=""  D
"RTN","PXRMGECM",55,0)
 ....S S1T=S1T+S1
"RTN","PXRMGECM",56,0)
 ....S S2="" F  S S2=$O(@REF@(DFN,SDATE,DATER,S1,S2)) Q:S2=""  D
"RTN","PXRMGECM",57,0)
 .....S S2T=S2T+S2
"RTN","PXRMGECM",58,0)
 .....S S3="" F  S S3=$O(@REF@(DFN,SDATE,DATER,S1,S2,S3)) Q:S3=""  D
"RTN","PXRMGECM",59,0)
 ......S S3T=S3T+S3
"RTN","PXRMGECM",60,0)
 ......S S4="" F  S S4=$O(@REF@(DFN,SDATE,DATER,S1,S2,S3,S4)) Q:S4=""  D
"RTN","PXRMGECM",61,0)
 .......S S4T=S4T+S4
"RTN","PXRMGECM",62,0)
 .......S S5="" F  S S5=$O(@REF@(DFN,SDATE,DATER,S1,S2,S3,S4,S5)) Q:S5=""  D
"RTN","PXRMGECM",63,0)
 ........S S5T=S5T+S5
"RTN","PXRMGECM",64,0)
 ........I FOR W !,$E($P(DFN," ",1,$L(DFN," ")-1),1,19),?20," ("_$P(DFN," ",$L(DFN," "))_")",?33,$P($$FMTE^XLFDT(DATER,"5ZM"),"@",1),?44,$J(S1,3),?49,$J(S2,3),?55,$J(S3,3),?63,$J(S4,3),?73,$J(S5,3) D PAGE^PXRMGECZ
"RTN","PXRMGECM",65,0)
 ........I 'FOR W !,$P(DFN," ",1,$L(DFN," ")-1),"^",$P(DFN," ",$L(DFN," ")),"^",$P($$FMTE^XLFDT(DATER,"5ZM"),"@",1),"^",S1,"^",S2,"^",S3,"^",S4,"^",S5 D PAGE^PXRMGECZ
"RTN","PXRMGECM",66,0)
 Q:CNT=0
"RTN","PXRMGECM",67,0)
 I FOR W !,?44,"_________________________________" D PAGE^PXRMGECZ
"RTN","PXRMGECM",68,0)
 I FOR W !,?33,"Totals > >",?44,$J(S1T,3),?49,$J(S2T,3),?55,$J(S3T,3),?63,$J(S4T,3),?72,$J(S5T,4) D PAGE^PXRMGECZ
"RTN","PXRMGECM",69,0)
 I FOR W !,?34,"Means > >",?44,$J($FN(S1T/CNT,"",1),3),?49,$J($FN(S2T/CNT,"",1),3),?55,$J($FN(S3T/CNT,"",1),3),?63,$J($FN(S4T/CNT,"",1),3),?72,$J($FN(S5T/CNT,"",1),4) D PAGE^PXRMGECZ
"RTN","PXRMGECM",70,0)
 S (S1T,S2T,S3T,S4T,S5T,SCNT)=0
"RTN","PXRMGECM",71,0)
 N S1TDEV,S1TDEVT,S2TDEV,S2TDEVT,S3TDEV,S3TDEVT,S4TDEV,S4TDEVT,S5TDEV,S5TDEVT
"RTN","PXRMGECM",72,0)
 S (S1TDEVT,S2TDEVT,S3TDEVT,S4TDEVT,S5TDEVT)=0
"RTN","PXRMGECM",73,0)
 S DFN="" F  S DFN=$O(@REF@(DFN)) Q:DFN=""  D
"RTN","PXRMGECM",74,0)
 .S SDATE="" F  S SDATE=$O(@REF@(DFN,SDATE)) Q:SDATE=""  D
"RTN","PXRMGECM",75,0)
 ..S DATER="" F  S DATER=$O(@REF@(DFN,SDATE,DATER)) Q:DATER=""  D
"RTN","PXRMGECM",76,0)
 ...S S1="" F  S S1=$O(@REF@(DFN,SDATE,DATER,S1)) Q:S1=""  D
"RTN","PXRMGECM",77,0)
 ....S S1TDEV=(S1-(S1T/CNT))*(S1-(S1T/CNT)) S S1TDEVT=S1TDEVT+S1TDEV
"RTN","PXRMGECM",78,0)
 ....S S2="" F  S S2=$O(@REF@(DFN,SDATE,DATER,S1,S2)) Q:S2=""  D
"RTN","PXRMGECM",79,0)
 .....S S2TDEV=(S2-(S2T/CNT))*(S2-(S2T/CNT)) S S2TDEVT=S2TDEVT+S2TDEV
"RTN","PXRMGECM",80,0)
 .....S S3="" F  S S3=$O(@REF@(DFN,SDATE,DATER,S1,S2,S3)) Q:S3=""  D
"RTN","PXRMGECM",81,0)
 ......S S3TDEV=(S3-(S3T/CNT))*(S3-(S3T/CNT)) S S3TDEVT=S3TDEVT+S3TDEV
"RTN","PXRMGECM",82,0)
 ......S S4="" F  S S4=$O(@REF@(DFN,SDATE,DATER,S1,S2,S3,S4)) Q:S4=""  D
"RTN","PXRMGECM",83,0)
 .......S S4TDEV=(S4-(S4T/CNT))*(S4-(S4T/CNT)) S S4TDEVT=S4TDEVT+S4TDEV
"RTN","PXRMGECM",84,0)
 .......S S5="" F  S S5=$O(@REF@(DFN,SDATE,DATER,S1,S2,S3,S4,S5)) Q:S5=""  D
"RTN","PXRMGECM",85,0)
 ........S S5TDEV=(S5-(S5T/CNT))*(S5-(S5T/CNT)) S S5TDEVT=S5TDEVT+S5TDEV
"RTN","PXRMGECM",86,0)
 I FOR W !,?20,"Standard Deviations > >"
"RTN","PXRMGECM",87,0)
 I CNT<2 S CNT=CNT+1
"RTN","PXRMGECM",88,0)
 I FOR W ?44,$J($FN($$SQROOT(S1TDEVT/(CNT-1)),"",1),3),?49,$J($FN($$SQROOT(S2TDEVT/(CNT-1)),"",1),3),?55,$J($FN($$SQROOT(S3TDEVT/(CNT-1)),"",1),3),?63,$J($FN($$SQROOT(S4TDEVT/(CNT-1)),"",1),3)
"RTN","PXRMGECM",89,0)
 I FOR W ?72,$J($FN($$SQROOT(S5TDEVT/(CNT-1)),"",1),4) D PAGE^PXRMGECZ
"RTN","PXRMGECM",90,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECM",91,0)
 D KILL^%ZISS
"RTN","PXRMGECM",92,0)
 Q
"RTN","PXRMGECM",93,0)
 ;
"RTN","PXRMGECM",94,0)
SQROOT(NUM) ;Calculat Square Root
"RTN","PXRMGECM",95,0)
 N PREC,ROOT S ROOT=0 GOTO SQROOTX:NUM=0
"RTN","PXRMGECM",96,0)
 S:NUM<0 NUM=-NUM S ROOT=$S(NUM>1:NUM\1,1:1/NUM)
"RTN","PXRMGECM",97,0)
 S ROOT=$E(ROOT,1,$L(ROOT)+1\2) S:NUM'>1 ROOT=1/ROOT
"RTN","PXRMGECM",98,0)
 F PREC=1:1:6 S ROOT=NUM/ROOT+ROOT*.5
"RTN","PXRMGECM",99,0)
SQROOTX Q ROOT
"RTN","PXRMGECM",100,0)
 ;
"RTN","PXRMGECM",101,0)
VALUE(DA) ;Return value for score
"RTN","PXRMGECM",102,0)
 N CAT,SYN,VALUE,PICE
"RTN","PXRMGECM",103,0)
 S SYN=$P($G(^AUTTHF(DA,0)),"^",9)
"RTN","PXRMGECM",104,0)
 Q:$E(SYN,5,5)'="F" VALUE
"RTN","PXRMGECM",105,0)
 Q:SYN="" VALUE
"RTN","PXRMGECM",106,0)
 Q:$E(SYN,5,5)="C" VALUE
"RTN","PXRMGECM",107,0)
 S VALUE=$P(SYN," ",$L(SYN," "))
"RTN","PXRMGECM",108,0)
 Q VALUE
"RTN","PXRMGECM",109,0)
 ;
"RTN","PXRMGECM",110,0)
 ;
"RTN","PXRMGECP")
0^68^B63775895
"RTN","PXRMGECP",1,0)
PXRMGECP ;SLC/JVS -GEC-Prompts ;7/14/05  10:43
"RTN","PXRMGECP",2,0)
 ;;2.0;CLINICAL REMINDERS;**2,4**;Feb 04, 2005;Build 21
"RTN","PXRMGECP",3,0)
 Q
"RTN","PXRMGECP",4,0)
EN ;Entry Point
"RTN","PXRMGECP",5,0)
 ;^DISV(  = DBIA #510
"RTN","PXRMGECP",6,0)
 N POP,DIROUT,DIRUT,DUOUT,LOCNP,MENU,PROV,Y
"RTN","PXRMGECP",7,0)
 N DETAIL,FORMAT,INC
"RTN","PXRMGECP",8,0)
 ;D INIT^PXRMGECW
"RTN","PXRMGECP",9,0)
 S X="IOUON;IOUOFF;IORVOFF;IORVON" D ENDR^%ZISS
"RTN","PXRMGECP",10,0)
 W IOUOFF,IORVOFF
"RTN","PXRMGECP",11,0)
 W @IOF
"RTN","PXRMGECP",12,0)
 W !,"All Reports will print on 80 Columns"
"RTN","PXRMGECP",13,0)
 K DIR
"RTN","PXRMGECP",14,0)
 S DIR("A")="Select Option or ^ to Exit"
"RTN","PXRMGECP",15,0)
 I $D(^DISV(DUZ,"PXRMGEC","EN")) S DIR("B")=$G(^DISV(DUZ,"PXRMGEC","EN"))
"RTN","PXRMGECP",16,0)
 S DIR(0)="S^1:Category;2:Patient;3:Provider by Patient;4:Referral Date;5:Location;6:Referral Count Totals;7:Category-Referred Service;8:Summary (Score);9:'Home Help' Eligibility;10:Restore or Merge Referrals"
"RTN","PXRMGECP",17,0)
 D ^DIR
"RTN","PXRMGECP",18,0)
 K DIR("A"),DIR("B"),DIR(0)
"RTN","PXRMGECP",19,0)
 Q:$D(DIRUT)!($D(DIROUT))
"RTN","PXRMGECP",20,0)
 ;DBIA #510
"RTN","PXRMGECP",21,0)
 S MENU=Y,^DISV(DUZ,"PXRMGEC","EN")=MENU
"RTN","PXRMGECP",22,0)
 I MENU=1 D CAT
"RTN","PXRMGECP",23,0)
 I MENU=2 D PATIENT
"RTN","PXRMGECP",24,0)
 I MENU=3 D PRO
"RTN","PXRMGECP",25,0)
 I MENU=4 D DR
"RTN","PXRMGECP",26,0)
 I MENU=5 D LOCDIR^PXRMGECO
"RTN","PXRMGECP",27,0)
 I MENU=6 D CT^PXRMGECO
"RTN","PXRMGECP",28,0)
 I MENU=7 D RS^PXRMGECO
"RTN","PXRMGECP",29,0)
 I MENU=8 D SUM^PXRMGECO
"RTN","PXRMGECP",30,0)
 I MENU=9 D HOME^PXRMG2R2
"RTN","PXRMGECP",31,0)
 I MENU=10 D EN^PXRMGECJ
"RTN","PXRMGECP",32,0)
 D KILL^%ZISS
"RTN","PXRMGECP",33,0)
 Q
"RTN","PXRMGECP",34,0)
 ;==========================================================
"RTN","PXRMGECP",35,0)
 ;
"RTN","PXRMGECP",36,0)
CAT ;#1 Start List and array of GEC Categories
"RTN","PXRMGECP",37,0)
 ;
"RTN","PXRMGECP",38,0)
 N CAT,CATNA,CNT,STAY,NUM,CATIEN,CATARY,BDT,EDT,CATDA,SYN
"RTN","PXRMGECP",39,0)
 W @IOF
"RTN","PXRMGECP",40,0)
 W "GEC Referral Categories"
"RTN","PXRMGECP",41,0)
 S CNT=0
"RTN","PXRMGECP",42,0)
 S SYN="" F  S SYN=$O(^AUTTHF("D",SYN)) Q:SYN=""  D
"RTN","PXRMGECP",43,0)
 .I $E(SYN,1,3)="GEC",$E(SYN,5)="C" D
"RTN","PXRMGECP",44,0)
 ..S CAT=0 F  S CAT=$O(^AUTTHF("D",SYN,CAT)) Q:CAT=""  D
"RTN","PXRMGECP",45,0)
 ...Q:$P($G(^AUTTHF(CAT,0)),"^",11)=1
"RTN","PXRMGECP",46,0)
 ...S CATNA=$P($G(^AUTTHF(CAT,0)),"^",1)
"RTN","PXRMGECP",47,0)
 ...S CATNA=$P(CATNA," ",3,7)
"RTN","PXRMGECP",48,0)
 ...S CATARY(CATNA,CAT)=""
"RTN","PXRMGECP",49,0)
 S CATNA="" F  S CATNA=$O(CATARY(CATNA)) Q:CATNA=""  D
"RTN","PXRMGECP",50,0)
 .S CAT=$O(CATARY(CATNA,0))
"RTN","PXRMGECP",51,0)
 .S CNT=CNT+1
"RTN","PXRMGECP",52,0)
 .S CATDA(CNT,CAT)=""
"RTN","PXRMGECP",53,0)
 .W:CNT#2=1 !,CNT,?4,CATNA
"RTN","PXRMGECP",54,0)
 .W:CNT#2=0 ?35,CNT,?39,CATNA
"RTN","PXRMGECP",55,0)
SC ;=====Select Categories
"RTN","PXRMGECP",56,0)
 W !
"RTN","PXRMGECP",57,0)
 S DIR("A",1)="Select Categories from the list above using"
"RTN","PXRMGECP",58,0)
 S DIR("A",2)="Commas and/or Dashes for ranges of numbers."
"RTN","PXRMGECP",59,0)
 S DIR("A")="Select Categories or ^ to exit"
"RTN","PXRMGECP",60,0)
 I $D(^DISV(DUZ,"PXRMGEC","SC")) S DIR("B")=$G(^DISV(DUZ,"PXRMGEC","SC"))
"RTN","PXRMGECP",61,0)
 S DIR(0)="L^1:"_CNT
"RTN","PXRMGECP",62,0)
 D ^DIR
"RTN","PXRMGECP",63,0)
 K DIR("A"),DIR("B"),DIR(0)
"RTN","PXRMGECP",64,0)
 Q:$D(DIROUT)
"RTN","PXRMGECP",65,0)
 Q:$D(DIRUT)
"RTN","PXRMGECP",66,0)
 S ^DISV(DUZ,"PXRMGEC","SC")=X
"RTN","PXRMGECP",67,0)
 N LEN,IME,MEY
"RTN","PXRMGECP",68,0)
 S LEN=$L(Y,",")
"RTN","PXRMGECP",69,0)
 S MEY=0 F IME=1:1:LEN-1 S MEY=$P(Y,",",IME) D
"RTN","PXRMGECP",70,0)
 .S CATMEY(MEY)=""
"RTN","PXRMGECP",71,0)
 S STAY=0 F  S STAY=$O(CATDA(STAY)) Q:STAY=""  D
"RTN","PXRMGECP",72,0)
 .I '$D(CATMEY(STAY)) K CATDA(STAY)
"RTN","PXRMGECP",73,0)
 S NUM=0 F  S NUM=$O(CATDA(NUM)) Q:NUM=""  D
"RTN","PXRMGECP",74,0)
 .S CATIEN($O(CATDA(NUM,0)))=""
"RTN","PXRMGECP",75,0)
 K CATDA,CATMEY
"RTN","PXRMGECP",76,0)
CATBDT D BDT Q:$D(DIROUT)!$D(DIRUT)
"RTN","PXRMGECP",77,0)
CATEDT D EDT Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G CATBDT
"RTN","PXRMGECP",78,0)
CATPAT D PAT Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G CATEDT
"RTN","PXRMGECP",79,0)
CATFOR D FOR Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G CATPAT
"RTN","PXRMGECP",80,0)
CATIOO D CATIO Q:$D(DIROUT)
"RTN","PXRMGECP",81,0)
 Q
"RTN","PXRMGECP",82,0)
BDT ;=====Select Beginning Date
"RTN","PXRMGECP",83,0)
 ;--Return BDT as DATE
"RTN","PXRMGECP",84,0)
 W !
"RTN","PXRMGECP",85,0)
 S DIR("A",1)="Select a Beginning Historical Date."
"RTN","PXRMGECP",86,0)
 S DIR("A")="BEGINNING date or ^ to exit"
"RTN","PXRMGECP",87,0)
 I $D(^DISV(DUZ,"PXRMGEC","BDT")) S DIR("B")=$G(^DISV(DUZ,"PXRMGEC","BDT"))
"RTN","PXRMGECP",88,0)
 S DIR(0)="D^2880101:"_DT_":EX"
"RTN","PXRMGECP",89,0)
 D ^DIR
"RTN","PXRMGECP",90,0)
 K DIR("A"),DIR("B"),DIR(0)
"RTN","PXRMGECP",91,0)
 Q:$D(DIROUT)!($D(DIRUT))
"RTN","PXRMGECP",92,0)
 S ^DISV(DUZ,"PXRMGEC","BDT")=X
"RTN","PXRMGECP",93,0)
 S BDT=Y
"RTN","PXRMGECP",94,0)
 Q
"RTN","PXRMGECP",95,0)
 ;
"RTN","PXRMGECP",96,0)
EDT ;=====Select Ending Date
"RTN","PXRMGECP",97,0)
 ;--Return EDT as DATE
"RTN","PXRMGECP",98,0)
 W !
"RTN","PXRMGECP",99,0)
 S DIR("A",1)="Select Ending Date."
"RTN","PXRMGECP",100,0)
 S DIR("A")="ENDING date or ^ to exit"
"RTN","PXRMGECP",101,0)
 I $D(^DISV(DUZ,"PXRMGEC","EDT")) S DIR("B")=$G(^DISV(DUZ,"PXRMGEC","EDT"))
"RTN","PXRMGECP",102,0)
 S DIR(0)="D^"_BDT_":"_DT_":EX"
"RTN","PXRMGECP",103,0)
 D ^DIR
"RTN","PXRMGECP",104,0)
 K DIR("A"),DIR("B"),DIR(0)
"RTN","PXRMGECP",105,0)
 Q:$D(DIROUT)!($D(DIRUT))
"RTN","PXRMGECP",106,0)
 S ^DISV(DUZ,"PXRMGEC","EDT")=X
"RTN","PXRMGECP",107,0)
 S EDT=Y
"RTN","PXRMGECP",108,0)
 Q
"RTN","PXRMGECP",109,0)
 ;=====Select Patients
"RTN","PXRMGECP",110,0)
PAT ;--Return DFNONLY as Patient DFN
"RTN","PXRMGECP",111,0)
 W @IOF
"RTN","PXRMGECP",112,0)
 K DIR,DIR("A")
"RTN","PXRMGECP",113,0)
 K DFNONLY
"RTN","PXRMGECP",114,0)
 S DIR("A")="Select Patients or ^ to exit"
"RTN","PXRMGECP",115,0)
 I $D(^DISV(DUZ,"PXRMGEC","PAT")) S DIR("B")=$G(^DISV(DUZ,"PXRMGEC","PAT"))
"RTN","PXRMGECP",116,0)
 S DIR(0)="S^A:All Patients;M:Multiple Patients"
"RTN","PXRMGECP",117,0)
 D ^DIR
"RTN","PXRMGECP",118,0)
 K DIR("A"),DIR("B"),DIR(0)
"RTN","PXRMGECP",119,0)
 Q:$D(DIROUT)!($D(DIRUT))
"RTN","PXRMGECP",120,0)
 S ^DISV(DUZ,"PXRMGEC","PAT")=X
"RTN","PXRMGECP",121,0)
 I Y="A" S DFNONLY=0
"RTN","PXRMGECP",122,0)
 I Y="M" D PATLU
"RTN","PXRMGECP",123,0)
 Q
"RTN","PXRMGECP",124,0)
 ;
"RTN","PXRMGECP",125,0)
FOR ;=====Formatted or Delimited Report
"RTN","PXRMGECP",126,0)
 ;--Return FORMAT equal to Y
"RTN","PXRMGECP",127,0)
 S DIR("A")="Select Report Format or ^ to exit"
"RTN","PXRMGECP",128,0)
 I $D(^DISV(DUZ,"PXRMGEC","FOR")) S DIR("B")=$G(^DISV(DUZ,"PXRMGEC","FOR"))
"RTN","PXRMGECP",129,0)
 S DIR(0)="S^F:Formatted;D:Delimited"
"RTN","PXRMGECP",130,0)
 D ^DIR
"RTN","PXRMGECP",131,0)
 K DIR("A"),DIR("B"),DIR(0)
"RTN","PXRMGECP",132,0)
 Q:$D(DIRUT)!($D(DIROUT))
"RTN","PXRMGECP",133,0)
 S ^DISV(DUZ,"PXRMGEC","FOR")=X
"RTN","PXRMGECP",134,0)
 S FORMAT=Y
"RTN","PXRMGECP",135,0)
 Q
"RTN","PXRMGECP",136,0)
 ;
"RTN","PXRMGECP",137,0)
CATIO ;=====Select IO device
"RTN","PXRMGECP",138,0)
 Q:'$D(BDT)!('$D(EDT))!('$D(DFNONLY))!'$D(FORMAT)
"RTN","PXRMGECP",139,0)
 N %ZIS
"RTN","PXRMGECP",140,0)
 S %ZIS="QM" D ^%ZIS
"RTN","PXRMGECP",141,0)
 I POP Q
"RTN","PXRMGECP",142,0)
 I $D(IO("Q")) D
"RTN","PXRMGECP",143,0)
 .S ZTRTN="HFCD^PXRMGECQ"
"RTN","PXRMGECP",144,0)
 .S ZTDESC="Gec Report Printing"
"RTN","PXRMGECP",145,0)
 .S ZTSAVE("*")=""
"RTN","PXRMGECP",146,0)
 .D ^%ZTLOAD K IO("Q") Q
"RTN","PXRMGECP",147,0)
 ;=====Call Report
"RTN","PXRMGECP",148,0)
 E  D HFCD^PXRMGECR
"RTN","PXRMGECP",149,0)
 D HOME^%ZIS
"RTN","PXRMGECP",150,0)
 D ^%ZISC
"RTN","PXRMGECP",151,0)
 S:'$D(DIRUT)&('$D(DUOUT))&('$D(DIROUT)) DIR(0)="E" D ^DIR K DIR(0),Y
"RTN","PXRMGECP",152,0)
 Q
"RTN","PXRMGECP",153,0)
 ;
"RTN","PXRMGECP",154,0)
 ;================SUB ROUTINES==============================
"RTN","PXRMGECP",155,0)
PROV ;Select Provider
"RTN","PXRMGECP",156,0)
 W @IOF
"RTN","PXRMGECP",157,0)
 N DIC,Y
"RTN","PXRMGECP",158,0)
 S PROV=0
"RTN","PXRMGECP",159,0)
 K PROVARY
"RTN","PXRMGECP",160,0)
 S DIC="^VA(200,"
"RTN","PXRMGECP",161,0)
 S DIC(0)="QAMEZ"
"RTN","PXRMGECP",162,0)
PROVR D ^DIC
"RTN","PXRMGECP",163,0)
 I Y=-1 K DIC,DIC(0),Y Q
"RTN","PXRMGECP",164,0)
 I +Y>0 S PROVARY(+Y)=""
"RTN","PXRMGECP",165,0)
 S PROV=+Y
"RTN","PXRMGECP",166,0)
 G PROVR
"RTN","PXRMGECP",167,0)
 Q
"RTN","PXRMGECP",168,0)
 ;
"RTN","PXRMGECP",169,0)
PATLU ;Patient Look up
"RTN","PXRMGECP",170,0)
 N Y,DIC
"RTN","PXRMGECP",171,0)
 S DFNONLY=0
"RTN","PXRMGECP",172,0)
 K DFNARY
"RTN","PXRMGECP",173,0)
 S DIC="^DPT("
"RTN","PXRMGECP",174,0)
 S DIC(0)="QAMEZ"
"RTN","PXRMGECP",175,0)
PATLUR D ^DIC
"RTN","PXRMGECP",176,0)
 I Y=-1 K DIC,DIC(0),Y Q
"RTN","PXRMGECP",177,0)
 I +Y>0 S DFNONLY=+Y,DFNARY(+Y)=""
"RTN","PXRMGECP",178,0)
 G PATLUR
"RTN","PXRMGECP",179,0)
 Q
"RTN","PXRMGECP",180,0)
 ;
"RTN","PXRMGECP",181,0)
 ;================================================================
"RTN","PXRMGECP",182,0)
PRO ; #3 Start of Provider by Patient Report
"RTN","PXRMGECP",183,0)
 N BDT,EDT,DFNONLY
"RTN","PXRMGECP",184,0)
 W @IOF
"RTN","PXRMGECP",185,0)
 K DIR
"RTN","PXRMGECP",186,0)
 I $D(^DISV(DUZ,"PXRMGEC","PRO")) S DIR("B")=$G(^DISV(DUZ,"PXRMGEC","PRO"))
"RTN","PXRMGECP",187,0)
 S DIR(0)="S^A:All Providers;M:Multiple Providers"
"RTN","PXRMGECP",188,0)
 D ^DIR
"RTN","PXRMGECP",189,0)
 K DIR("A"),DIR("B"),DIR(0)
"RTN","PXRMGECP",190,0)
 Q:$D(DIRUT)!($D(DUOUT))
"RTN","PXRMGECP",191,0)
 Q:$D(DIROUT)
"RTN","PXRMGECP",192,0)
 S ^DISV(DUZ,"PXRMGEC","PRO")=X
"RTN","PXRMGECP",193,0)
 I Y="A" S PROV=0
"RTN","PXRMGECP",194,0)
 I Y="M" D PROV Q:'$D(PROVARY)
"RTN","PXRMGECP",195,0)
 Q:$D(DIRUT)!($D(DIROUT))
"RTN","PXRMGECP",196,0)
PROBDT D BDT Q:$D(DIRUT)!($D(DIRUT))
"RTN","PXRMGECP",197,0)
PROEDT D EDT Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G PROBDT
"RTN","PXRMGECP",198,0)
PROFOR D FOR Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G PROEDT
"RTN","PXRMGECP",199,0)
PROIOO D PROIO Q:$D(DIROUT)
"RTN","PXRMGECP",200,0)
 Q
"RTN","PXRMGECP",201,0)
 ;
"RTN","PXRMGECP",202,0)
PROIO ;=====Select IO device
"RTN","PXRMGECP",203,0)
 N %ZIS
"RTN","PXRMGECP",204,0)
 S %ZIS="QM" D ^%ZIS
"RTN","PXRMGECP",205,0)
 I POP Q
"RTN","PXRMGECP",206,0)
 I $D(IO("Q")) D
"RTN","PXRMGECP",207,0)
 .S ZTRTN="DFN2^PXRMGECQ"
"RTN","PXRMGECP",208,0)
 .S ZTDESC="GEC PROVIDER REPORT"
"RTN","PXRMGECP",209,0)
 .S ZTSAVE("*")=""
"RTN","PXRMGECP",210,0)
 .D ^%ZTLOAD K IO("Q") Q
"RTN","PXRMGECP",211,0)
 ;=====Call Report
"RTN","PXRMGECP",212,0)
 E  D DFN2^PXRMGECS
"RTN","PXRMGECP",213,0)
 D HOME^%ZIS
"RTN","PXRMGECP",214,0)
 D ^%ZISC
"RTN","PXRMGECP",215,0)
 S:'$D(DIRUT)&('$D(DUOUT))&('$D(DIROUT)) DIR(0)="E" D ^DIR K DIR(0),Y
"RTN","PXRMGECP",216,0)
 Q
"RTN","PXRMGECP",217,0)
 ;=================================================================
"RTN","PXRMGECP",218,0)
DR ; #4 Referral Date
"RTN","PXRMGECP",219,0)
 ;
"RTN","PXRMGECP",220,0)
DRPAT D PAT Q:$D(DIROUT)!($D(DIRUT))
"RTN","PXRMGECP",221,0)
DRBDT D BDT Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G DRPAT
"RTN","PXRMGECP",222,0)
DREDT D EDT Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G DRBDT
"RTN","PXRMGECP",223,0)
DRALL D ALL Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G DREDT
"RTN","PXRMGECP",224,0)
DRFOR D FOR Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G DRALL
"RTN","PXRMGECP",225,0)
DRIOO D DRIO Q:$D(DIROUT)
"RTN","PXRMGECP",226,0)
 Q
"RTN","PXRMGECP",227,0)
 ;
"RTN","PXRMGECP",228,0)
ALL ;=====Select All Referrals or
"RTN","PXRMGECP",229,0)
 ;--Return INC equal to Y
"RTN","PXRMGECP",230,0)
 I $D(^DISV(DUZ,"PXRMGEC","ALL")) S DIR("B")=$G(^DISV(DUZ,"PXRMGEC","ALL"))
"RTN","PXRMGECP",231,0)
 S DIR(0)="S^I:Incomplete Referrals Only;C:Complete Referrals Only;B:Both Complete and Incomplete"
"RTN","PXRMGECP",232,0)
 D ^DIR
"RTN","PXRMGECP",233,0)
 K DIR("A"),DIR("B"),DIR(0)
"RTN","PXRMGECP",234,0)
 Q:$D(DIRUT)!($D(DUOUT))
"RTN","PXRMGECP",235,0)
 S ^DISV(DUZ,"PXRMGEC","ALL")=X
"RTN","PXRMGECP",236,0)
 I Y="I" S INC=0
"RTN","PXRMGECP",237,0)
 I Y="C" S INC=1
"RTN","PXRMGECP",238,0)
 I Y="B" S INC=2
"RTN","PXRMGECP",239,0)
 Q
"RTN","PXRMGECP",240,0)
 ;
"RTN","PXRMGECP",241,0)
DRIO ;=====Select IO device
"RTN","PXRMGECP",242,0)
 N %ZIS
"RTN","PXRMGECP",243,0)
 S %ZIS="QM" D ^%ZIS
"RTN","PXRMGECP",244,0)
 I POP Q
"RTN","PXRMGECP",245,0)
 I $D(IO("Q")) D
"RTN","PXRMGECP",246,0)
 .S ZTRTN="DR^PXRMGECQ"
"RTN","PXRMGECP",247,0)
 .S ZTDESC="GEC REPORT"
"RTN","PXRMGECP",248,0)
 .S ZTSAVE("*")=""
"RTN","PXRMGECP",249,0)
 .D ^%ZTLOAD K IO("Q") Q
"RTN","PXRMGECP",250,0)
 ;=====Call Report
"RTN","PXRMGECP",251,0)
 E  D DR^PXRMGECR
"RTN","PXRMGECP",252,0)
 D HOME^%ZIS
"RTN","PXRMGECP",253,0)
 D ^%ZISC
"RTN","PXRMGECP",254,0)
 S:'$D(DIRUT)&('$D(DUOUT))&('$D(DIROUT)) DIR(0)="E" D ^DIR K DIR(0),Y
"RTN","PXRMGECP",255,0)
 Q
"RTN","PXRMGECP",256,0)
 ;
"RTN","PXRMGECP",257,0)
 ;==================================================================
"RTN","PXRMGECP",258,0)
PATIENT ; #2 Start of Patient Report
"RTN","PXRMGECP",259,0)
 ;
"RTN","PXRMGECP",260,0)
PATPAT D PAT Q:$D(DIROUT)!($D(DIRUT))
"RTN","PXRMGECP",261,0)
PATBDT D BDT Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G PATPAT
"RTN","PXRMGECP",262,0)
PATEDT D EDT Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G PATBDT
"RTN","PXRMGECP",263,0)
PATFOR D FOR Q:$D(DIROUT)  I $D(DIRUT) K DIRUT G PATEDT
"RTN","PXRMGECP",264,0)
PATIOO D PATIO Q:$D(DIROUT)
"RTN","PXRMGECP",265,0)
 Q
"RTN","PXRMGECP",266,0)
 ;
"RTN","PXRMGECP",267,0)
PATIO ;=====Select IO device for Patient Report
"RTN","PXRMGECP",268,0)
 N %ZIS
"RTN","PXRMGECP",269,0)
 S %ZIS="QM" D ^%ZIS
"RTN","PXRMGECP",270,0)
 I POP Q
"RTN","PXRMGECP",271,0)
 I $D(IO("Q")) D
"RTN","PXRMGECP",272,0)
 .S ZTRTN="HS1^PXRMGECQ"
"RTN","PXRMGECP",273,0)
 .S ZTDESC="GEC PATIENT REPORT"
"RTN","PXRMGECP",274,0)
 .S ZTSAVE("*")=""
"RTN","PXRMGECP",275,0)
 .S ZTSAVE("FORMAT")=""
"RTN","PXRMGECP",276,0)
 .S ZTSAVE("EDT")=""
"RTN","PXRMGECP",277,0)
 .S ZTSAVE("BDT")=""
"RTN","PXRMGECP",278,0)
 .S ZTSAVE("DFNONLY")=""
"RTN","PXRMGECP",279,0)
 .I $D(DFNARY) S ZTSAVE("DFNARY(")=""
"RTN","PXRMGECP",280,0)
 .D ^%ZTLOAD K IO("Q") Q
"RTN","PXRMGECP",281,0)
 ;=====Call Report
"RTN","PXRMGECP",282,0)
 E  D HS1^PXRMGECR
"RTN","PXRMGECP",283,0)
 D HOME^%ZIS
"RTN","PXRMGECP",284,0)
 D ^%ZISC
"RTN","PXRMGECP",285,0)
 S:'$D(DIRUT)&('$D(DUOUT))&('$D(DIROUT)) DIR(0)="E" D ^DIR K DIR(0),Y
"RTN","PXRMGECP",286,0)
 Q
"RTN","PXRMGECP",287,0)
 ;=========================================================
"RTN","PXRMGECQ")
0^69^B80289381
"RTN","PXRMGECQ",1,0)
PXRMGECQ ;SLC/JVS GEC-QUEUE'D Reports ;7/14/05  10:44
"RTN","PXRMGECQ",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECQ",3,0)
 Q
"RTN","PXRMGECQ",4,0)
LOC ;by Location
"RTN","PXRMGECQ",5,0)
 N CAT,HF,DATE,DFN,Y,HFN,DFNXX,PAGE,I
"RTN","PXRMGECQ",6,0)
 D E^PXRMGECV("LOC",1,BDT,EDT,"F",0)
"RTN","PXRMGECQ",7,0)
 D LOCCNT
"RTN","PXRMGECQ",8,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECQ",9,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECQ",10,0)
 W @IOF
"RTN","PXRMGECQ",11,0)
 F I=1:1:78 W "="
"RTN","PXRMGECQ",12,0)
 ;==
"RTN","PXRMGECQ",13,0)
 W !,"Complete GEC Referrals by Location"
"RTN","PXRMGECQ",14,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECQ",15,0)
 I FOR W !,"Location"
"RTN","PXRMGECQ",16,0)
 I FOR W !,?5,"Patient",?50,"Finish Date",!
"RTN","PXRMGECQ",17,0)
 I 'FOR W !,"Location^Location Count^Patient^SSN^Finish Date",!
"RTN","PXRMGECQ",18,0)
 F I=1:1:78 W "="
"RTN","PXRMGECQ",19,0)
 ;==
"RTN","PXRMGECQ",20,0)
 S PAGE=1
"RTN","PXRMGECQ",21,0)
 S LOCN="" F  S LOCN=$O(^TMP("PXRMGEC",$J,"TMPLOC",LOCN)) Q:LOCN=""  D
"RTN","PXRMGECQ",22,0)
 .Q:LOCNP'=1&(LOCN'=LOCNP)
"RTN","PXRMGECQ",23,0)
 .I FOR W !,LOCN,?30,"Total # Patients Evaluated= ",$G(^TMP("PXRMGEC",$J,"LOCBB",LOCN)) D PAGE^PXRMGECZ
"RTN","PXRMGECQ",24,0)
 .I FOR W ! D PAGE^PXRMGECZ
"RTN","PXRMGECQ",25,0)
 .S DFNXX="" F  S DFNXX=$O(^TMP("PXRMGEC",$J,"TMPLOC",LOCN,DFNXX)) Q:DFNXX=""  D
"RTN","PXRMGECQ",26,0)
 ..S VDT=0 F  S VDT=$O(^TMP("PXRMGEC",$J,"TMPLOC",LOCN,DFNXX,VDT)) Q:VDT=""  D
"RTN","PXRMGECQ",27,0)
 ...I VDT["0000" I FOR W !,?5,DFNXX,?50,"Incomplete" D PAGE^PXRMGECZ
"RTN","PXRMGECQ",28,0)
 ...E  I FOR W !,?5,$P(DFNXX," ",1,$L(DFNXX," ")-1),"  ("_$P(DFNXX," ",$L(DFNXX," "))_")",?50,$P($$FMTE^XLFDT(VDT,"5ZM"),"@",1) D PAGE^PXRMGECZ
"RTN","PXRMGECQ",29,0)
 ...I 'FOR W !,LOCN,"^",$G(^TMP("PXRMGEC",$J,"LOCBB",LOCN)),"^",$P(DFNXX," ",1,$L(DFNXX," ")-1),"^",$P(DFNXX," ",$L(DFNXX," ")),"^",$P($$FMTE^XLFDT(VDT,"5ZM"),"@",1)
"RTN","PXRMGECQ",30,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECQ",31,0)
 S ZTREQ="@"
"RTN","PXRMGECQ",32,0)
 Q
"RTN","PXRMGECQ",33,0)
DR ;by Date Range
"RTN","PXRMGECQ",34,0)
 N CAT,HF,DATE,DFN,Y,HFN,CNTREF,DIF,DIFF,PAGE,I
"RTN","PXRMGECQ",35,0)
 D E^PXRMGECV("HS1",INC,BDT,EDT,$S(INC=1:"F",1:"S"),DFNONLY)
"RTN","PXRMGECQ",36,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECQ",37,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECQ",38,0)
 W @IOF
"RTN","PXRMGECQ",39,0)
 F I=1:1:78 W "="
"RTN","PXRMGECQ",40,0)
 ;==
"RTN","PXRMGECQ",41,0)
 W !,"Complete GEC Referrals by Date Range"
"RTN","PXRMGECQ",42,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECQ",43,0)
 W !,$S(INC=0:"Incomplete",INC=1:"Complete",INC=2:"Complete and Incomplete",1:"")_" Referrals"
"RTN","PXRMGECQ",44,0)
 I FOR W !,"Patient"
"RTN","PXRMGECQ",45,0)
 I INC=1 I FOR W !,?5,"Start Date",?20,"",?35,"Elapsed Time"
"RTN","PXRMGECQ",46,0)
 E  I FOR W !,?5,"Start Date",?20,"Finished",?35,"Elapsed Time",?50,"Incomplete Status",!
"RTN","PXRMGECQ",47,0)
 I 'FOR W !,"Patient^SSN^Count^Start Date^Finished Date^Status",!
"RTN","PXRMGECQ",48,0)
 F I=1:1:78 W "="
"RTN","PXRMGECQ",49,0)
 ;==
"RTN","PXRMGECQ",50,0)
 S PAGE=1
"RTN","PXRMGECQ",51,0)
 S DFN="" F  S DFN=$O(^TMP("PXRMGEC",$J,"HS1",DFN)) Q:DFN=""  D
"RTN","PXRMGECQ",52,0)
 .I FOR W ! D PAGE^PXRMGECZ
"RTN","PXRMGECQ",53,0)
 .I FOR W !,$P(DFN," ",1,$L(DFN," ")-1)," ("_$P(DFN," ",$L(DFN," "))_")",?31,"Total= ",$G(^TMP("PXRMGEC",$J,"REFDFNN",$P(DFN," "))) D PAGE^PXRMGECZ
"RTN","PXRMGECQ",54,0)
 .I FOR W ! D PAGE^PXRMGECZ
"RTN","PXRMGECQ",55,0)
 .S CNTREF="" F  S CNTREF=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF)) Q:CNTREF=""  D
"RTN","PXRMGECQ",56,0)
 ..S DATE=0 F  S DATE=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE)) Q:DATE=""  D
"RTN","PXRMGECQ",57,0)
 ...S VDT=0 F  S VDT=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT)) Q:VDT=""  D
"RTN","PXRMGECQ",58,0)
 ....S DIFF="" I VDT>0 S DIFF=$$FMDIFF^XLFDT(VDT,DATE,1)+1
"RTN","PXRMGECQ",59,0)
 ....S DIF="" S DIF=$$FMDIFF^XLFDT(DT,DATE,1)+1
"RTN","PXRMGECQ",60,0)
 ....I VDT["0000" I FOR W !,?5,$P($$FMTE^XLFDT(DATE,"5ZM"),"@",1),?20,"",?35,$S(DIFF="":DIF_" Days",DIFF>0:DIFF_" Days",1:""),?50,$S(DIFF="":"Incomplete",1:"") D PAGE^PXRMGECZ
"RTN","PXRMGECQ",61,0)
 ....E  I FOR W !,?5,$P($$FMTE^XLFDT(DATE,"5ZM"),"@",1),?20,$P($$FMTE^XLFDT(VDT,"5ZM"),"@",1),?35,$S(DIFF="":DIF_" Days",DIFF>0:DIFF_" Days",1:""),?50,$S(DIFF="":"Incomplete",1:"") D PAGE^PXRMGECZ
"RTN","PXRMGECQ",62,0)
 ....I 'FOR W !,$P(DFN," ",1,$L(DFN," ")-1),"^",$P(DFN," ",$L(DFN," "))
"RTN","PXRMGECQ",63,0)
 ....I 'FOR W "^",$G(^TMP("PXRMGEC",$J,"REFDFNN",$P(DFN," "))),"^",$P($$FMTE^XLFDT(DATE,"5ZM"),"@",1),"^",$P($$FMTE^XLFDT(VDT,"5ZM"),"@",1),"^",$S(DIFF="":DIF,DIFF>0:DIFF,1:"") D PAGE^PXRMGECZ
"RTN","PXRMGECQ",64,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECQ",65,0)
 S ZTREQ="@"
"RTN","PXRMGECQ",66,0)
 Q
"RTN","PXRMGECQ",67,0)
HS1 ;By Patient
"RTN","PXRMGECQ",68,0)
 N CAT,HF,DATE,DFN,Y,HFN,CNTREF,X,COMMENT,PAGE,DIV,NAME,DFNN,I
"RTN","PXRMGECQ",69,0)
 D E^PXRMGECV("HS1",1,BDT,EDT,"F",DFNONLY)
"RTN","PXRMGECQ",70,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECQ",71,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECQ",72,0)
 W !
"RTN","PXRMGECQ",73,0)
 F I=1:1:78 W "="
"RTN","PXRMGECQ",74,0)
 ;==
"RTN","PXRMGECQ",75,0)
 W !,"GEC Patient"
"RTN","PXRMGECQ",76,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECQ",77,0)
 I FOR W !,"Patient"
"RTN","PXRMGECQ",78,0)
 I FOR W !," Category"
"RTN","PXRMGECQ",79,0)
 I FOR W !,"    Health Factor",?44,"Value",?55,"Date of Evaluation",!
"RTN","PXRMGECQ",80,0)
 I 'FOR W !,"Patient^SSN^Eval Count^Category^Health Factor^Value^Date of Evaluation",!
"RTN","PXRMGECQ",81,0)
 F I=1:1:78 W "="
"RTN","PXRMGECQ",82,0)
 ;==
"RTN","PXRMGECQ",83,0)
 S PAGE=1,CNT=0
"RTN","PXRMGECQ",84,0)
 S DFN="" F  S DFN=$O(^TMP("PXRMGEC",$J,"HS1",DFN)) Q:DFN=""  D
"RTN","PXRMGECQ",85,0)
 .I FOR W ! D PAGE^PXRMGECZ
"RTN","PXRMGECQ",86,0)
 .S NAME=$P(DFN," ",1,$L(DFN," ")-1)
"RTN","PXRMGECQ",87,0)
 .S DFNN=$O(^DPT("B",NAME,0)) D
"RTN","PXRMGECQ",88,0)
 ..Q:DFNN=""
"RTN","PXRMGECQ",89,0)
 ..S STATUS=$S($D(^DPT(DFNN,.1)):"INPATIENT",1:"OUTPATIENT")
"RTN","PXRMGECQ",90,0)
 ..S DIV=$$GET1^DIQ(2,DFNN,.19) I DIV="" S DIV="Unknown"
"RTN","PXRMGECQ",91,0)
 .S CNT=CNT+1
"RTN","PXRMGECQ",92,0)
 .I STATUS["IN" I FOR W !,CNT,") ",STATUS,", DIVISION:",DIV D PAGE^PXRMGECZ
"RTN","PXRMGECQ",93,0)
 .I STATUS["OU" I FOR W !,CNT,") ",STATUS D PAGE^PXRMGECZ
"RTN","PXRMGECQ",94,0)
 .I FOR W !,CNT,") ",$P(DFN," ",1,$L(DFN," ")-1),"  (",$P(DFN," ",$L(DFN," "))_")",?50,"Total Number of referrals: ",$G(^TMP("PXRMGEC",$J,"REFDFNN",$P(DFN," "))) D PAGE^PXRMGECZ
"RTN","PXRMGECQ",95,0)
 .S CNTREF="" F  S CNTREF=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF)) Q:CNTREF=""  D
"RTN","PXRMGECQ",96,0)
 ..I FOR W ! D PAGE^PXRMGECZ
"RTN","PXRMGECQ",97,0)
 ..I FOR W !,"Next Referral" D PAGE^PXRMGECZ
"RTN","PXRMGECQ",98,0)
 ..S DATE=0 F  S DATE=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE)) Q:DATE=""  D
"RTN","PXRMGECQ",99,0)
 ...S VDT=0 F  S VDT=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT)) Q:VDT=""  D
"RTN","PXRMGECQ",100,0)
 ....S CAT=0 F  S CAT=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT,CAT)) Q:CAT=""  D
"RTN","PXRMGECQ",101,0)
 .....I FOR W !,?1,$P(CAT," ",3,6) D PAGE^PXRMGECZ
"RTN","PXRMGECQ",102,0)
 .....S DATEV=0 F  S DATEV=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT,CAT,DATEV)) Q:DATEV=""  D
"RTN","PXRMGECQ",103,0)
 ......S DA=0 F  S DA=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT,CAT,DATEV,DA)) Q:DA=""  D
"RTN","PXRMGECQ",104,0)
 .......S HFN=$$HFNAME(DA)
"RTN","PXRMGECQ",105,0)
 .......I FOR W !,?4,$P(HFN,"^",1),?44,$P(HFN,"^",2),?55,$P($$FMTE^XLFDT(DATEV,"5ZM"),"@",1) D PAGE^PXRMGECZ
"RTN","PXRMGECQ",106,0)
 .......S COMMENT=$G(^AUPNVHF(DA,811))
"RTN","PXRMGECQ",107,0)
 .......I FOR I COMMENT'="" D COMQ^PXRMGECZ
"RTN","PXRMGECQ",108,0)
 .......I 'FOR W !,$P(DFN," ",1,$L(DFN," ")-1),"^",$P(DFN," ",$L(DFN," "))
"RTN","PXRMGECQ",109,0)
 .......I 'FOR W "^",$G(^TMP("PXRMGEC",$J,"REFDFNN",$P(DFN," "))),"^",$P(CAT," ",3,6),"^",$P(HFN,"^",1),"^",$P(HFN,"^",2),"^",$P($$FMTE^XLFDT(DATEV,"5ZM"),"@",1)
"RTN","PXRMGECQ",110,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECQ",111,0)
 S ZTREQ="@"
"RTN","PXRMGECQ",112,0)
 D ^%ZISC
"RTN","PXRMGECQ",113,0)
 Q
"RTN","PXRMGECQ",114,0)
HFCD ;Health Factor Category Detailed
"RTN","PXRMGECQ",115,0)
 N CAT,HF,DATE,DFN,DFN1,FOR,HFDA,COMMENT,PAGE,I
"RTN","PXRMGECQ",116,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECQ",117,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECQ",118,0)
 D E^PXRMGECV("HFCD",1,BDT,EDT,"F",DFNONLY)
"RTN","PXRMGECQ",119,0)
 W !
"RTN","PXRMGECQ",120,0)
 F I=1:1:78 W "="
"RTN","PXRMGECQ",121,0)
 ;==
"RTN","PXRMGECQ",122,0)
 W !,"GEC Health Factor Category Detailed Report"
"RTN","PXRMGECQ",123,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECQ",124,0)
 I FOR W !,"Category"
"RTN","PXRMGECQ",125,0)
 I FOR W !,?2,"Patient Name"
"RTN","PXRMGECQ",126,0)
 I FOR W !,?4,"Health Factors",?41,"Value",?47,"Date",!
"RTN","PXRMGECQ",127,0)
 I 'FOR W !,"Category^Patient^SSN^Health Factor^Value^Date",!
"RTN","PXRMGECQ",128,0)
 F I=1:1:78 W "="
"RTN","PXRMGECQ",129,0)
 ;==
"RTN","PXRMGECQ",130,0)
 S PAGE=1
"RTN","PXRMGECQ",131,0)
 S CAT="" F  S CAT=$O(^TMP("PXRMGEC",$J,"HFCD",CAT)) Q:CAT=""  D
"RTN","PXRMGECQ",132,0)
 .S DFN1=0
"RTN","PXRMGECQ",133,0)
 .I FOR W !,$P(CAT," ",3,6) D PAGE^PXRMGECZ
"RTN","PXRMGECQ",134,0)
 .S DFN=0 F  S DFN=$O(^TMP("PXRMGEC",$J,"HFCD",CAT,DFN)) Q:DFN=""  D
"RTN","PXRMGECQ",135,0)
 ..S HF="" F  S HF=$O(^TMP("PXRMGEC",$J,"HFCD",CAT,DFN,HF)) Q:HF=""  D
"RTN","PXRMGECQ",136,0)
 ...S DATE=0 F  S DATE=$O(^TMP("PXRMGEC",$J,"HFCD",CAT,DFN,HF,DATE)) Q:DATE=""  D
"RTN","PXRMGECQ",137,0)
 ....I FOR I DFN'=DFN1 W ! D PAGE^PXRMGECZ
"RTN","PXRMGECQ",138,0)
 ....I FOR I DFN'=DFN1 W !,?2,$P($G(^DPT(DFN,0)),"^",1)_" ("_$P($G(^DPT(DFN,0)),"^",9)_")"  W ! S DFN1=DFN D PAGE^PXRMGECZ
"RTN","PXRMGECQ",139,0)
 ....S HFN=$$HFNAME(0,HF)
"RTN","PXRMGECQ",140,0)
 ....S HFDA=$O(^TMP("PXRMGEC",$J,"HFCD",CAT,DFN,HF,DATE,0))
"RTN","PXRMGECQ",141,0)
 ....I FOR W !,?4,$P(HFN,"^",1),?41,$P(HFN,"^",2),?47,$P($$FMTE^XLFDT(DATE,"5ZM"),"@",1) D PAGE^PXRMGECZ
"RTN","PXRMGECQ",142,0)
 ....S COMMENT=$G(^AUPNVHF(HFDA,811))
"RTN","PXRMGECQ",143,0)
 ....I FOR I COMMENT'="" D COMQ^PXRMGECZ
"RTN","PXRMGECQ",144,0)
 ....I 'FOR W !,$P(CAT," ",3,5),"^",$P($G(^DPT(DFN,0)),"^",1)_"^"_$P($G(^DPT(DFN,0)),"^",9),"^",$P(HFN,"^",1),"^",$P(HFN,"^",2),"^",$P($$FMTE^XLFDT(DATE,"5ZM"),"@",1) D PAGE^PXRMGECZ
"RTN","PXRMGECQ",145,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECQ",146,0)
 S ZTREQ="@"
"RTN","PXRMGECQ",147,0)
 D ^%ZISC
"RTN","PXRMGECQ",148,0)
 Q
"RTN","PXRMGECQ",149,0)
DFN2 ;By Provider Report
"RTN","PXRMGECQ",150,0)
 N DFN,DOCT,DIADA,DATEV,FLAG,REF,DFN1,PAGE,I
"RTN","PXRMGECQ",151,0)
 S REF="^TMP(""PXRMGEC"",$J)",DFN1=0
"RTN","PXRMGECQ",152,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECQ",153,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECQ",154,0)
 W @IOF
"RTN","PXRMGECQ",155,0)
 F I=1:1:78 W "="
"RTN","PXRMGECQ",156,0)
 ;==
"RTN","PXRMGECQ",157,0)
 W !,"GEC Provider"
"RTN","PXRMGECQ",158,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECQ",159,0)
 W !,"Report Displays Counts of Complete Referrals Only"
"RTN","PXRMGECQ",160,0)
 I FOR W !,"Provider"
"RTN","PXRMGECQ",161,0)
 I FOR W !,"  Patient",?17,"Completion Date",?41,"Dialog",!
"RTN","PXRMGECQ",162,0)
 I 'FOR W !,"Provider^IEN^Patient^SSN^Dialog^Completion Date",!
"RTN","PXRMGECQ",163,0)
 F I=1:1:78 W "="
"RTN","PXRMGECQ",164,0)
 ;==
"RTN","PXRMGECQ",165,0)
 S PAGE=1
"RTN","PXRMGECQ",166,0)
 D E^PXRMGECV("DFN",1,BDT,EDT,"F",0)
"RTN","PXRMGECQ",167,0)
 S DOCT=0 F  S DOCT=$O(@REF@("DFN",DOCT)),FLAG=1 Q:DOCT=""  D
"RTN","PXRMGECQ",168,0)
 .I PROV>0&('$D(PROVARY(DOCT))) Q
"RTN","PXRMGECQ",169,0)
 .I FOR W:FLAG=1 !!,$$GET1^DIQ(200,DOCT,.01)_" ("_DOCT_")" D PAGE^PXRMGECZ
"RTN","PXRMGECQ",170,0)
 .S DFN=0 F  S DFN=$O(@REF@("DFN",DOCT,DFN)) Q:DFN=""  D
"RTN","PXRMGECQ",171,0)
 ..S DATEV=0 F  S DATEV=$O(@REF@("DFN",DOCT,DFN,DATEV)) Q:DATEV=""  D
"RTN","PXRMGECQ",172,0)
 ...S DIADA=0 F  S DIADA=$O(@REF@("DFN",DOCT,DFN,DATEV,DIADA)) Q:DIADA=""  D
"RTN","PXRMGECQ",173,0)
 ....I FOR W !,?2,$S(DFN'=DFN1!(FLAG=1):$P($G(^DPT(DFN,0)),"^",1)_" ("_$P($G(^DPT(DFN,0)),"^",9)_")"_" ("_$$CNT^PXRMGECL(DOCT,DFN)_" Evaluation(s) )",1:"") D PAGE^PXRMGECZ
"RTN","PXRMGECQ",174,0)
 ....I FOR I DFN'=DFN1!(FLAG=1) W ! D PAGE^PXRMGECZ
"RTN","PXRMGECQ",175,0)
 ....S FLAG=0
"RTN","PXRMGECQ",176,0)
 ....W ?17,$P($$FMTE^XLFDT(DATEV,"5ZM"),"@",1,2),?41,$P($P($G(^PXRMD(801.41,DIADA,0)),"^",1)," ",3,6)
"RTN","PXRMGECQ",177,0)
 ....S DFN1=DFN
"RTN","PXRMGECQ",178,0)
 ....I 'FOR W !,$$GET1^DIQ(200,DOCT,.01),"^",DOCT,"^",$P($G(^DPT(DFN,0)),"^",1),"^",$P($G(^DPT(DFN,0)),"^",9)
"RTN","PXRMGECQ",179,0)
 ....I 'FOR W "^",$P($P($G(^PXRMD(801.41,DIADA,0)),"^",1)," ",3,6),"^",$P($$FMTE^XLFDT(DATEV,"5ZM"),"@",1) D PAGE^PXRMGECZ
"RTN","PXRMGECQ",180,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECQ",181,0)
 S ZTREQ="@"
"RTN","PXRMGECQ",182,0)
 Q
"RTN","PXRMGECQ",183,0)
 ;
"RTN","PXRMGECQ",184,0)
LOCCNT ;Count Locations of Referrals
"RTN","PXRMGECQ",185,0)
 N LOC,VDT
"RTN","PXRMGECQ",186,0)
 S LOC="" F  S LOC=$O(^TMP("PXRMGEC",$J,"LOCB",LOC)) Q:LOC=""  D
"RTN","PXRMGECQ",187,0)
 .S VDT="" F  S VDT=$O(^TMP("PXRMGEC",$J,"LOCB",LOC,VDT)) Q:VDT=""  D
"RTN","PXRMGECQ",188,0)
 ..I $D(^TMP("PXRMGEC",$J,"LOCBB",LOC)) S ^TMP("PXRMGEC",$J,"LOCBB",LOC)=$G(^TMP("PXRMGEC",$J,"LOCBB",LOC))+1
"RTN","PXRMGECQ",189,0)
 ..E  S ^TMP("PXRMGEC",$J,"LOCBB",LOC)=1
"RTN","PXRMGECQ",190,0)
 Q
"RTN","PXRMGECQ",191,0)
 ;
"RTN","PXRMGECQ",192,0)
HFNAME(DA,NAME) ;Decide to split name into columns
"RTN","PXRMGECQ",193,0)
 N WHOLE,FIRST,SECOND,REF,REF2,RESULT
"RTN","PXRMGECQ",194,0)
 I DA>0 D
"RTN","PXRMGECQ",195,0)
 .S WHOLE=$P($G(^AUTTHF($P($G(^AUPNVHF(DA,0)),"^",1),0)),"^",1)
"RTN","PXRMGECQ",196,0)
 E  S WHOLE=NAME
"RTN","PXRMGECQ",197,0)
 S RESULT="^"
"RTN","PXRMGECQ",198,0)
 S REF="YESNOSTAGE 1STAGE 2STAGE 3STAGE4"
"RTN","PXRMGECQ",199,0)
 S REF2="12"
"RTN","PXRMGECQ",200,0)
 S FIRST=$P(WHOLE,"-",1,$L(WHOLE,"-")-1)
"RTN","PXRMGECQ",201,0)
 S SECOND=$P(WHOLE,"-",$L(WHOLE,"-"))
"RTN","PXRMGECQ",202,0)
 I REF[SECOND S RESULT=FIRST_"^"_SECOND
"RTN","PXRMGECQ",203,0)
 E  S RESULT=WHOLE_"^"
"RTN","PXRMGECQ",204,0)
 I REF2[SECOND S RESULT=WHOLE_"^"
"RTN","PXRMGECQ",205,0)
 Q RESULT
"RTN","PXRMGECQ",206,0)
 ;
"RTN","PXRMGECR")
0^70^B66172935
"RTN","PXRMGECR",1,0)
PXRMGECR ;SLC/JVS GEC-Reports ;7/14/05  10:44
"RTN","PXRMGECR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECR",3,0)
 Q
"RTN","PXRMGECR",4,0)
LOC ;Referrals by Location
"RTN","PXRMGECR",5,0)
 N CAT,HF,DATE,DFN,Y,HFN,DFNXX
"RTN","PXRMGECR",6,0)
 D E^PXRMGECV("LOC",1,BDT,EDT,"F",0)
"RTN","PXRMGECR",7,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECR",8,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECR",9,0)
 W @IOF
"RTN","PXRMGECR",10,0)
 W "=============================================================================="
"RTN","PXRMGECR",11,0)
 W !,"Complete GEC Referrals by Location"
"RTN","PXRMGECR",12,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECR",13,0)
 I FOR W !,"Location"
"RTN","PXRMGECR",14,0)
 I FOR W !,?5,"Patient",?50,"Finish Date"
"RTN","PXRMGECR",15,0)
 I 'FOR W !,"Location^Location Count^Patient^SSN^Finish Date"
"RTN","PXRMGECR",16,0)
 W !,"=============================================================================="
"RTN","PXRMGECR",17,0)
 W ! D PB Q:Y=0
"RTN","PXRMGECR",18,0)
 S LOCN="" F  S LOCN=$O(^TMP("PXRMGEC",$J,"TMPLOC",LOCN)) Q:LOCN=""!(Y=0)  D
"RTN","PXRMGECR",19,0)
 .Q:LOCNP'=1&(LOCN'=LOCNP)
"RTN","PXRMGECR",20,0)
 .I FOR W ! D PB Q:Y=0
"RTN","PXRMGECR",21,0)
 .I FOR W !,IOUON,LOCN,IOUOFF,?30,"Total # Patients Evaluated= ",$G(^TMP("PXRMGEC",$J,"REFLOCC",LOCN)) D PB Q:Y=0
"RTN","PXRMGECR",22,0)
 .I FOR W ! D PB Q:Y=0
"RTN","PXRMGECR",23,0)
 .S DFNXX="" F  S DFNXX=$O(^TMP("PXRMGEC",$J,"TMPLOC",LOCN,DFNXX)) Q:DFNXX=""!(Y=0)  D
"RTN","PXRMGECR",24,0)
 ..S VDT=0 F  S VDT=$O(^TMP("PXRMGEC",$J,"TMPLOC",LOCN,DFNXX,VDT)) Q:VDT=""!(Y=0)  D
"RTN","PXRMGECR",25,0)
 ...I VDT["0000" I FOR W !,?5,DFNXX,?50,"Incomplete"
"RTN","PXRMGECR",26,0)
 ...E  I FOR W !,?5,$P(DFNXX," ",1,$L(DFNXX," ")-1),"  ("_$P(DFNXX," ",$L(DFNXX," "))_")",?50,$P($$FMTE^XLFDT(VDT,"5ZM"),"@",1)
"RTN","PXRMGECR",27,0)
 ...I FOR D PB Q:Y=0
"RTN","PXRMGECR",28,0)
 ...I 'FOR W !,LOCN,"^",$G(^TMP("PXRMGEC",$J,"REFLOCC",LOCN)),"^",$P(DFNXX," ",1,$L(DFNXX," ")-1),"^",$P(DFNXX," ",$L(DFNXX," ")),"^",$P($$FMTE^XLFDT(VDT,"5ZM"),"@",1)
"RTN","PXRMGECR",29,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECR",30,0)
 Q
"RTN","PXRMGECR",31,0)
 ;_______
"RTN","PXRMGECR",32,0)
DR ;Referrals by Date Range
"RTN","PXRMGECR",33,0)
 N CAT,HF,DATE,DFN,Y,HFN,CNTREF,DIF,DIFF
"RTN","PXRMGECR",34,0)
 D E^PXRMGECV("HS1",INC,BDT,EDT,$S(INC=1:"F",1:"S"),DFNONLY)
"RTN","PXRMGECR",35,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECR",36,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECR",37,0)
 W @IOF
"RTN","PXRMGECR",38,0)
 W "=============================================================================="
"RTN","PXRMGECR",39,0)
 W !,"Complete and/or Incomplete GEC Referrals by Date Range"
"RTN","PXRMGECR",40,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECR",41,0)
 W !,$S(INC=0:"Incomplete",INC=1:"Complete",INC=2:"Complete and Incomplete",1:"")_" Referrals"
"RTN","PXRMGECR",42,0)
 I FOR W !,"Patient"
"RTN","PXRMGECR",43,0)
 I INC=1 I FOR W !,?5,"Start Date",?20,"Finished",?35,"Elapsed Time"
"RTN","PXRMGECR",44,0)
 E  I FOR W !,?5,"Start Date",?20,"Finished",?35,"Elapsed Time",?50,"Incomplete Status"
"RTN","PXRMGECR",45,0)
 I 'FOR W !,"Patient^SS#^Count^Start Date^Finished Date^Elapsed Time"
"RTN","PXRMGECR",46,0)
 W !,"=============================================================================="
"RTN","PXRMGECR",47,0)
 W ! D PB Q:Y=0
"RTN","PXRMGECR",48,0)
 S DFN="" F  S DFN=$O(^TMP("PXRMGEC",$J,"HS1",DFN)) Q:DFN=""!(Y=0)  D
"RTN","PXRMGECR",49,0)
 .I FOR W ! D PB Q:Y=0
"RTN","PXRMGECR",50,0)
 .I FOR W !,IOUON,$P(DFN," ",1,$L(DFN," ")-1)," ("_$P(DFN," ",$L(DFN," "))_")"," ",IOUOFF
"RTN","PXRMGECR",51,0)
 .I FOR W ?44,$G(^TMP("PXRMGEC",$J,"REFDFNN",$P(DFN," ",1,($L(DFN," ")-1))))," Referral(s)" D PB Q:Y=0
"RTN","PXRMGECR",52,0)
 .I FOR W ! D PB Q:Y=0
"RTN","PXRMGECR",53,0)
 .S CNTREF="" F  S CNTREF=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF)) Q:CNTREF=""!(Y=0)  D
"RTN","PXRMGECR",54,0)
 ..S DATE=0 F  S DATE=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE)) Q:DATE=""!(Y=0)  D
"RTN","PXRMGECR",55,0)
 ...S VDT=0 F  S VDT=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT)) Q:VDT=""!(Y=0)  D
"RTN","PXRMGECR",56,0)
 ....S DIFF="" I VDT>0 S DIFF=$$FMDIFF^XLFDT(VDT,DATE,1)+1
"RTN","PXRMGECR",57,0)
 ....S DIF="" S DIF=$$FMDIFF^XLFDT(DT,DATE,1)+1
"RTN","PXRMGECR",58,0)
 ....I VDT["0000" I FOR W !,?5,$P($$FMTE^XLFDT(DATE,"5ZM"),"@",1),?20,"",?35,$S(DIFF="":DIF_" Days",DIFF>0:DIFF_" Days",1:""),?50,$S(DIFF="":"Incomplete",1:"")
"RTN","PXRMGECR",59,0)
 ....E  I FOR W !,?5,$P($$FMTE^XLFDT(DATE,"5ZM"),"@",1),?20,$P($$FMTE^XLFDT(VDT,"5ZM"),"@",1),?35,$S(DIFF="":DIF_" Days",DIFF>0:DIFF_" Days",1:""),?50,$S(DIFF="":"Incomplete",1:"")
"RTN","PXRMGECR",60,0)
 ....I FOR D PB Q:Y=0
"RTN","PXRMGECR",61,0)
 ....I 'FOR W !,$P(DFN," ",1,$L(DFN," ")-1),"^",$P(DFN," ",$L(DFN," ")),"^"
"RTN","PXRMGECR",62,0)
 ....I 'FOR W $G(^TMP("PXRMGEC",$J,"REFDFNN",$P(DFN," ",1,$L(DFN," ")-1))),"^",$P($$FMTE^XLFDT(DATE,"5ZM"),"@",1),"^",$P($$FMTE^XLFDT(VDT,"5ZM"),"@",1),"^",$S(DIFF="":DIF,DIFF>0:DIFF,1:"")
"RTN","PXRMGECR",63,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECR",64,0)
 Q
"RTN","PXRMGECR",65,0)
 ;_____
"RTN","PXRMGECR",66,0)
HS1 ;By Patient
"RTN","PXRMGECR",67,0)
 N CAT,HF,DATE,DFN,Y,HFN,CNTREF,X,REFNUM,CNT,STATUS,NAME,DIV
"RTN","PXRMGECR",68,0)
 D E^PXRMGECV("HS1",1,BDT,EDT,"F",DFNONLY)
"RTN","PXRMGECR",69,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECR",70,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECR",71,0)
 W @IOF
"RTN","PXRMGECR",72,0)
 W "=============================================================================="
"RTN","PXRMGECR",73,0)
 W !,"GEC Patient"
"RTN","PXRMGECR",74,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECR",75,0)
 I FOR W !,"Patient"
"RTN","PXRMGECR",76,0)
 I FOR W !," Category"
"RTN","PXRMGECR",77,0)
 I FOR W !,"    Health Factor",?44,"Value",?55,"Date of Evaluation"
"RTN","PXRMGECR",78,0)
 I 'FOR W !,"Patient^Category^Health Factor^Value^Date of Evaluation"
"RTN","PXRMGECR",79,0)
 W !,"=============================================================================="
"RTN","PXRMGECR",80,0)
 S CNT=0
"RTN","PXRMGECR",81,0)
 S Y=1
"RTN","PXRMGECR",82,0)
 S DFN="" F  S DFN=$O(^TMP("PXRMGEC",$J,"HS1",DFN)) Q:DFN=""!(Y=0)  D
"RTN","PXRMGECR",83,0)
 .N NAME,DFNN,STATUS,DIV
"RTN","PXRMGECR",84,0)
 .I FOR W ! D PB Q:Y=0
"RTN","PXRMGECR",85,0)
 .S NAME=$P(DFN," ",1,$L(DFN," ")-1)
"RTN","PXRMGECR",86,0)
 .S DFNN=$O(^DPT("B",NAME,0)) D
"RTN","PXRMGECR",87,0)
 ..Q:DFNN=""
"RTN","PXRMGECR",88,0)
 ..S STATUS=$S($D(^DPT(DFNN,.1)):"INPATIENT",1:"OUTPATIENT")
"RTN","PXRMGECR",89,0)
 ..S DIV=$$GET1^DIQ(2,DFNN,.19) I DIV="" S DIV="Unknown"
"RTN","PXRMGECR",90,0)
 .S CNT=CNT+1
"RTN","PXRMGECR",91,0)
 .I STATUS["IN" I FOR W !,CNT,") ",STATUS,", DIVISION:",DIV D PB Q:Y=0
"RTN","PXRMGECR",92,0)
 .I STATUS["OU" I FOR W !,CNT,") ",STATUS D PB Q:Y=0
"RTN","PXRMGECR",93,0)
 .I FOR W !,CNT,") ",IOUON,$P(DFN," ",1,$L(DFN," ")-1)," (",$P(DFN," ",$L(DFN," "))_")",IOUOFF,?48,"Total # Complete referrals: ",$G(^TMP("PXRMGEC",$J,"REFDFNN",$P(DFN," ",1,$L(DFN," ")-1))) D PB Q:Y=0
"RTN","PXRMGECR",94,0)
 .S CNTREF="",REFNUM=0 F  S CNTREF=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF)) Q:CNTREF=""!(Y=0)  D
"RTN","PXRMGECR",95,0)
 ..I FOR W ! D PB Q:Y=0
"RTN","PXRMGECR",96,0)
 ..S REFNUM=REFNUM+1
"RTN","PXRMGECR",97,0)
 ..I FOR W !,IOUON,"Referral #"_REFNUM,IOUOFF D PB Q:Y=0
"RTN","PXRMGECR",98,0)
 ..S DATE=0 F  S DATE=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE)) Q:DATE=""!(Y=0)  D
"RTN","PXRMGECR",99,0)
 ...S VDT=0 F  S VDT=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT)) Q:VDT=""!(Y=0)  D
"RTN","PXRMGECR",100,0)
 ....S CAT=0 F  S CAT=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT,CAT)) Q:CAT=""!(Y=0)  D
"RTN","PXRMGECR",101,0)
 .....I FOR W !,?1,$P(CAT," ",3,6) D PB Q:Y=0
"RTN","PXRMGECR",102,0)
 .....S DATEV=0 F  S DATEV=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT,CAT,DATEV)) Q:DATEV=""!(Y=0)  D
"RTN","PXRMGECR",103,0)
 ......S DA=0 F  S DA=$O(^TMP("PXRMGEC",$J,"HS1",DFN,CNTREF,DATE,VDT,CAT,DATEV,DA)) Q:DA=""!(Y=0)  D
"RTN","PXRMGECR",104,0)
 .......S HFN=$$HFNAME(DA)
"RTN","PXRMGECR",105,0)
 .......I FOR W !,?4,$P(HFN,"^",1),?44,$P(HFN,"^",2),?55,$P($$FMTE^XLFDT(DATEV,"5ZM"),"@",1)
"RTN","PXRMGECR",106,0)
 .......I FOR D PB Q:Y=0
"RTN","PXRMGECR",107,0)
 .......S COMMENT=$G(^AUPNVHF(DA,811))
"RTN","PXRMGECR",108,0)
 .......I FOR I COMMENT'="" D COM^PXRMGECZ
"RTN","PXRMGECR",109,0)
 .......I 'FOR W !,$P(DFN," ",1,$L(DFN," ")-1)_"^"_$P(DFN," ",$L(DFN," ")),"^",$P(CAT," ",3,6),"^",$P(HFN,"^",1),"^",$P(HFN,"^",2),"^",$P($$FMTE^XLFDT(DATEV,"5ZM"),"@",1),"^",REFNUM
"RTN","PXRMGECR",110,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECR",111,0)
 Q
"RTN","PXRMGECR",112,0)
 ;______
"RTN","PXRMGECR",113,0)
HFCD ;Health Factor Category Detailed
"RTN","PXRMGECR",114,0)
 N CAT,HF,DATE,DFN,DFN1,FOR,HFDA,COMMENT
"RTN","PXRMGECR",115,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECR",116,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECR",117,0)
 K ^TMP("PXRMGEC",$J,"HFCD")
"RTN","PXRMGECR",118,0)
 D E^PXRMGECV("HFCD",1,BDT,EDT,"F",DFNONLY)
"RTN","PXRMGECR",119,0)
 W @IOF
"RTN","PXRMGECR",120,0)
 W "=============================================================================="
"RTN","PXRMGECR",121,0)
 W !,"GEC Health Factor Category Detailed Report"
"RTN","PXRMGECR",122,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECR",123,0)
 W !,"Complete and Incomplete Referrals"
"RTN","PXRMGECR",124,0)
 I FOR W !,"Category"
"RTN","PXRMGECR",125,0)
 I FOR W !,?2,"Patient Name"
"RTN","PXRMGECR",126,0)
 I FOR W !,?4,"Health Factors",?45,$S($D(RPT7):"",1:"Value"),?52,"Date"
"RTN","PXRMGECR",127,0)
 I 'FOR W !,"Category^Patient^SSN^Health Factor^"_$S($D(RPT7):"Date",1:"Value^Date")
"RTN","PXRMGECR",128,0)
 W !,"=============================================================================="
"RTN","PXRMGECR",129,0)
 D PB Q:Y=0
"RTN","PXRMGECR",130,0)
 S CAT="" F  S CAT=$O(^TMP("PXRMGEC",$J,"HFCD",CAT)) Q:CAT=""!(Y=0)  D
"RTN","PXRMGECR",131,0)
 .S DFN1=0
"RTN","PXRMGECR",132,0)
 .I FOR W ! D PB Q:Y=0
"RTN","PXRMGECR",133,0)
 .I FOR W !,IOUON,$P(CAT," ",3,6),IOUOFF D PB Q:Y=0
"RTN","PXRMGECR",134,0)
 .S DFN=0 F  S DFN=$O(^TMP("PXRMGEC",$J,"HFCD",CAT,DFN)) Q:DFN=""!(Y=0)  D
"RTN","PXRMGECR",135,0)
 ..S HF="" F  S HF=$O(^TMP("PXRMGEC",$J,"HFCD",CAT,DFN,HF)) Q:HF=""!(Y=0)  D
"RTN","PXRMGECR",136,0)
 ...S DATE=0 F  S DATE=$O(^TMP("PXRMGEC",$J,"HFCD",CAT,DFN,HF,DATE)) Q:DATE=""!(Y=0)  D
"RTN","PXRMGECR",137,0)
 ....I FOR I DFN'=DFN1 W ! D PB Q:Y=0
"RTN","PXRMGECR",138,0)
 ....I FOR I DFN'=DFN1 W !,?2,$P($G(^DPT(DFN,0)),"^",1)_" ("_$P($G(^DPT(DFN,0)),"^",9)_")" D PB Q:Y=0  W ! D PB Q:Y=0  S DFN1=DFN
"RTN","PXRMGECR",139,0)
 ....S HFN=$$HFNAME(0,HF)
"RTN","PXRMGECR",140,0)
 ....S HFDA=$O(^TMP("PXRMGEC",$J,"HFCD",CAT,DFN,HF,DATE,0))
"RTN","PXRMGECR",141,0)
 ....I FOR W !,?4,$P(HFN,"^",1),?45,$S($D(RPT7):"",1:$P(HFN,"^",2)),?52,$P($$FMTE^XLFDT(DATE,"5ZM"),"@",1)
"RTN","PXRMGECR",142,0)
 ....I FOR D PB Q:Y=0
"RTN","PXRMGECR",143,0)
 ....S COMMENT=$G(^AUPNVHF(HFDA,811))
"RTN","PXRMGECR",144,0)
 ....I FOR I COMMENT'="" D COM^PXRMGECZ
"RTN","PXRMGECR",145,0)
 ....I 'FOR W !,$P(CAT," ",3,5),"^",$P($G(^DPT(DFN,0)),"^",1)_"^"_$P($G(^DPT(DFN,0)),"^",9),"^",$P(HFN,"^",1),$S($D(RPT7):"",1:"^"_$P(HFN,"^",2)),"^",$P($$FMTE^XLFDT(DATE,"5ZM"),"@",1)
"RTN","PXRMGECR",146,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECR",147,0)
 D ^%ZISC
"RTN","PXRMGECR",148,0)
 Q
"RTN","PXRMGECR",149,0)
 ;____
"RTN","PXRMGECR",150,0)
LOCCNT ;Count Locations of Referrals
"RTN","PXRMGECR",151,0)
 N LOC,VDT
"RTN","PXRMGECR",152,0)
 S LOC="" F  S LOC=$O(^TMP("PXRMGEC",$J,"LOCB",LOC)) Q:LOC=""  D
"RTN","PXRMGECR",153,0)
 .S VDT="" F  S VDT=$O(^TMP("PXRMGEC",$J,"LOCB",LOC,VDT)) Q:VDT=""  D
"RTN","PXRMGECR",154,0)
 ..I $D(^TMP("PXRMGEC",$J,"LOCBB",LOC)) S ^TMP("PXRMGEC",$J,"LOCBB",LOC)=$G(^TMP("PXRMGEC",$J,"LOCBB",LOC))+1
"RTN","PXRMGECR",155,0)
 ..E  S ^TMP("PXRMGEC",$J,"LOCBB",LOC)=1
"RTN","PXRMGECR",156,0)
 Q
"RTN","PXRMGECR",157,0)
 ;
"RTN","PXRMGECR",158,0)
HFNAME(DA,NAME) ;Decide to split name into columns
"RTN","PXRMGECR",159,0)
 N WHOLE,FIRST,SECOND,REF,REF2,RESULT
"RTN","PXRMGECR",160,0)
 I DA>0 D
"RTN","PXRMGECR",161,0)
 .S WHOLE=$P($G(^AUTTHF($P($G(^AUPNVHF(DA,0)),"^",1),0)),"^",1)
"RTN","PXRMGECR",162,0)
 E  S WHOLE=NAME
"RTN","PXRMGECR",163,0)
 I $D(RPT7) D
"RTN","PXRMGECR",164,0)
 .I WHOLE["(REFERRED TO)" D
"RTN","PXRMGECR",165,0)
 ..S WHOLE=$P(WHOLE," (",1)
"RTN","PXRMGECR",166,0)
 S RESULT="^"
"RTN","PXRMGECR",167,0)
 S REF="YESNOSTAGE 1STAGE 2STAGE 3STAGE 4"
"RTN","PXRMGECR",168,0)
 S REF2="12"
"RTN","PXRMGECR",169,0)
 S FIRST=$P(WHOLE,"-",1,$L(WHOLE,"-")-1)
"RTN","PXRMGECR",170,0)
 S SECOND=$P(WHOLE,"-",$L(WHOLE,"-"))
"RTN","PXRMGECR",171,0)
 I REF[SECOND S RESULT=FIRST_"^"_SECOND
"RTN","PXRMGECR",172,0)
 E  S RESULT=WHOLE_"^"
"RTN","PXRMGECR",173,0)
 I REF2[SECOND S RESULT=WHOLE_"^"
"RTN","PXRMGECR",174,0)
 Q RESULT
"RTN","PXRMGECR",175,0)
 ;=====
"RTN","PXRMGECR",176,0)
PB ;PAGE BREAK
"RTN","PXRMGECR",177,0)
 S Y=""
"RTN","PXRMGECR",178,0)
 I $Y=(IOSL-2)!($Y=(IOSL-3)) D
"RTN","PXRMGECR",179,0)
 .K DIR
"RTN","PXRMGECR",180,0)
 .S DIR(0)="E"
"RTN","PXRMGECR",181,0)
 .D ^DIR
"RTN","PXRMGECR",182,0)
 .I Y=1 W @IOF S $Y=0
"RTN","PXRMGECR",183,0)
 K DIR
"RTN","PXRMGECR",184,0)
 Q
"RTN","PXRMGECR",185,0)
 ;
"RTN","PXRMGECS")
0^71^B39772388
"RTN","PXRMGECS",1,0)
PXRMGECS ;SLC/JVS GEC-Reports-cont'd ;7/14/05  10:45
"RTN","PXRMGECS",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECS",3,0)
 Q
"RTN","PXRMGECS",4,0)
 ;____
"RTN","PXRMGECS",5,0)
DFN2 ;DFN array for By Provider Report
"RTN","PXRMGECS",6,0)
 N DFN,DOCT,DIADA,DATEV,FLAG,REF,DFN1
"RTN","PXRMGECS",7,0)
 S REF="^TMP(""PXRMGEC"",$J)",DFN1=0
"RTN","PXRMGECS",8,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECS",9,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECS",10,0)
 W @IOF
"RTN","PXRMGECS",11,0)
 W "=============================================================================="
"RTN","PXRMGECS",12,0)
 W !,"GEC Provider"
"RTN","PXRMGECS",13,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECS",14,0)
 W !,"Report Displays Counts of Complete Referrals Only"
"RTN","PXRMGECS",15,0)
 I FOR W !,"Provider"
"RTN","PXRMGECS",16,0)
 I FOR W !,"  Patient",?17,"Completion Date",?41,"Dialog"
"RTN","PXRMGECS",17,0)
 I 'FOR W !,"Provider^IEN^Patient^SS#^Dialog^Completion Date"
"RTN","PXRMGECS",18,0)
 W !,"=============================================================================="
"RTN","PXRMGECS",19,0)
 W ! D PB Q:Y=0
"RTN","PXRMGECS",20,0)
 D E^PXRMGECV("DFN",1,BDT,EDT,"F",0)
"RTN","PXRMGECS",21,0)
 S DOCT=0 F  S DOCT=$O(@REF@("DFN",DOCT)),FLAG=1 Q:DOCT=""!(Y=0)  D
"RTN","PXRMGECS",22,0)
 .I PROV>0&('$D(PROVARY(DOCT))) Q
"RTN","PXRMGECS",23,0)
 .I FOR W:FLAG=1 !!,IOUON,$$GET1^DIQ(200,DOCT,.01)_" ("_DOCT_")",IOUOFF,! D PB Q:Y=0
"RTN","PXRMGECS",24,0)
 .I FOR D PB Q:Y=0
"RTN","PXRMGECS",25,0)
 .S DFN=0 F  S DFN=$O(@REF@("DFN",DOCT,DFN)) Q:DFN=""!(Y=0)  D
"RTN","PXRMGECS",26,0)
 ..S DATEV=0 F  S DATEV=$O(@REF@("DFN",DOCT,DFN,DATEV)) Q:DATEV=""  D
"RTN","PXRMGECS",27,0)
 ...S DIADA=0 F  S DIADA=$O(@REF@("DFN",DOCT,DFN,DATEV,DIADA)) Q:DIADA=""!(Y=0)  D
"RTN","PXRMGECS",28,0)
 ....I FOR W !,?2,$S(DFN'=DFN1!(FLAG=1):$P($G(^DPT(DFN,0)),"^",1)_" ("_$P($G(^DPT(DFN,0)),"^",9)_")"_" ("_$$CNT^PXRMGECL(DOCT,DFN)_" Evaluation(s) )",1:"") D PB Q:Y=0
"RTN","PXRMGECS",29,0)
 ....I FOR I DFN'=DFN1!(FLAG=1) W !
"RTN","PXRMGECS",30,0)
 ....S FLAG=0
"RTN","PXRMGECS",31,0)
 ....W ?17,$P($$FMTE^XLFDT(DATEV,"5ZM"),"@",1,2),?41,$P($P($G(^PXRMD(801.41,DIADA,0)),"^",1)," ",3,6)
"RTN","PXRMGECS",32,0)
 ....S DFN1=DFN
"RTN","PXRMGECS",33,0)
 ....I FOR D PB Q:Y=0
"RTN","PXRMGECS",34,0)
 ....I 'FOR W !,$$GET1^DIQ(200,DOCT,.01)_"^"_DOCT,"^",$P($G(^DPT(DFN,0)),"^",1)_"^"_$P($G(^DPT(DFN,0)),"^",9),"^",$P($P($G(^PXRMD(801.41,DIADA,0)),"^",1)," ",3,6),"^",$P($$FMTE^XLFDT(DATEV,"5ZM"),"@",1,2)
"RTN","PXRMGECS",35,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECS",36,0)
 Q
"RTN","PXRMGECS",37,0)
 ;
"RTN","PXRMGECS",38,0)
CTL ;Referrals Counts by Location
"RTN","PXRMGECS",39,0)
 N LOC,TOTAL,ACCTOT
"RTN","PXRMGECS",40,0)
 S ACCTOT=0
"RTN","PXRMGECS",41,0)
 S REF="^TMP(""PXRMGEC"",$J)"
"RTN","PXRMGECS",42,0)
 D E^PXRMGECV("CTL",1,BDT,EDT,"F",0)
"RTN","PXRMGECS",43,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECS",44,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECS",45,0)
 W @IOF
"RTN","PXRMGECS",46,0)
 W "=============================================================================="
"RTN","PXRMGECS",47,0)
 W !,"Referral Count by Location"
"RTN","PXRMGECS",48,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECS",49,0)
 W !,"Report Displays Counts of Complete Referrals Only"
"RTN","PXRMGECS",50,0)
 I FOR W !,"Location",?25,"Total Count"
"RTN","PXRMGECS",51,0)
 I 'FOR W !,"Location^Total Count"
"RTN","PXRMGECS",52,0)
 W !,"=============================================================================="
"RTN","PXRMGECS",53,0)
 ;TMP("PXRMGEC",$J,"REFLOCC",LOC)="3"
"RTN","PXRMGECS",54,0)
 W ! D PB Q:Y=0
"RTN","PXRMGECS",55,0)
 S LOC=0 F  S LOC=$O(@REF@("REFLOCC",LOC)) Q:LOC=""  D
"RTN","PXRMGECS",56,0)
 .S TOTAL=$G(@REF@("REFLOCC",LOC)) S ACCTOT=ACCTOT+TOTAL
"RTN","PXRMGECS",57,0)
 .I FOR W !,LOC,?25,$J(TOTAL,3)
"RTN","PXRMGECS",58,0)
 .I 'FOR W !,LOC,"^",TOTAL
"RTN","PXRMGECS",59,0)
 I FOR W !,"_____________________________" D PB Q:Y=0
"RTN","PXRMGECS",60,0)
 I FOR W !,"Total Referrals",?25,$J(ACCTOT,3) D PB Q:Y=0
"RTN","PXRMGECS",61,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECS",62,0)
 Q
"RTN","PXRMGECS",63,0)
 ;______________________________________________________________
"RTN","PXRMGECS",64,0)
CTDR ;Referrals Counts by Provider
"RTN","PXRMGECS",65,0)
 N DOC,TOTAL,ACCTOT,DIEN
"RTN","PXRMGECS",66,0)
 S ACCTOT=0
"RTN","PXRMGECS",67,0)
 D E^PXRMGECV("CTDR",1,BDT,EDT,"F",0)
"RTN","PXRMGECS",68,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECS",69,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECS",70,0)
 W @IOF
"RTN","PXRMGECS",71,0)
 W "=============================================================================="
"RTN","PXRMGECS",72,0)
 W !,"Referral Count by Provider"
"RTN","PXRMGECS",73,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECS",74,0)
 W !,"Report Displays Counts of Complete Referrals Only"
"RTN","PXRMGECS",75,0)
 I FOR W !,"Provider",?37,"Total Count"
"RTN","PXRMGECS",76,0)
 I 'FOR W !,"Provider^IEN^Total Count"
"RTN","PXRMGECS",77,0)
 W !,"=============================================================================="
"RTN","PXRMGECS",78,0)
 ;TMP("PXRMGEC",$J,"REFDOCC",DOC,DIEN)="3"
"RTN","PXRMGECS",79,0)
 W ! D PB Q:Y=0
"RTN","PXRMGECS",80,0)
 S DOC=0 F  S DOC=$O(^TMP("PXRMGEC",$J,"REFDOCC",DOC)) Q:DOC=""  D
"RTN","PXRMGECS",81,0)
 .S DIEN=0 F  S DIEN=$O(^TMP("PXRMGEC",$J,"REFDOCC",DOC,DIEN)) Q:DIEN=""  D
"RTN","PXRMGECS",82,0)
 ..S TOTAL=$G(^TMP("PXRMGEC",$J,"REFDOCC",DOC,DIEN)) S ACCTOT=ACCTOT+TOTAL
"RTN","PXRMGECS",83,0)
 ..I FOR W !,DOC," ("_DIEN_")",?37,$J(TOTAL,3)
"RTN","PXRMGECS",84,0)
 ..I 'FOR W !,DOC,"^",DIEN,"^",TOTAL
"RTN","PXRMGECS",85,0)
 I FOR W !,"_____________________________" D PB Q:Y=0
"RTN","PXRMGECS",86,0)
 I FOR W !,"Total Referrals",?37,$J(ACCTOT,3) D PB Q:Y=0
"RTN","PXRMGECS",87,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECS",88,0)
 Q
"RTN","PXRMGECS",89,0)
 ;______________________________________________________________
"RTN","PXRMGECS",90,0)
CTP ;Referrals Counts by Patient
"RTN","PXRMGECS",91,0)
 N PATIENT,TOTAL,ACCTOT,CNT,DFNN,STATUS,DIV
"RTN","PXRMGECS",92,0)
 S ACCTOT=0
"RTN","PXRMGECS",93,0)
 D E^PXRMGECV("CTP",1,BDT,EDT,"F",0)
"RTN","PXRMGECS",94,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECS",95,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECS",96,0)
 W @IOF
"RTN","PXRMGECS",97,0)
 W "=============================================================================="
"RTN","PXRMGECS",98,0)
 W !,"Referral Count by Patient"
"RTN","PXRMGECS",99,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECS",100,0)
 W !,"Report Displays Counts of Complete Referrals Only"
"RTN","PXRMGECS",101,0)
 I FOR W !,"Patient",?25,"SSN",?37,"Total Count",?56,"Division"
"RTN","PXRMGECS",102,0)
 I 'FOR W !,"Patient^SSN^Total Count"
"RTN","PXRMGECS",103,0)
 W !,"=============================================================================="
"RTN","PXRMGECS",104,0)
 S CNT=0
"RTN","PXRMGECS",105,0)
 ;TMP("PXRMGEC",$J,"REFDFNN,PATIENT)="3"
"RTN","PXRMGECS",106,0)
 W ! D PB Q:Y=0
"RTN","PXRMGECS",107,0)
 S PATIENT=0 F  S PATIENT=$O(^TMP("PXRMGEC",$J,"REFDFNN",PATIENT)) Q:PATIENT=""  D
"RTN","PXRMGECS",108,0)
 .S DFNN=$O(^DPT("B",PATIENT,0))
"RTN","PXRMGECS",109,0)
 .S STATUS=$S($D(^DPT(DFNN,.1)):"INPATIENT",1:"OUTPATIENT")
"RTN","PXRMGECS",110,0)
 .S DIV=$$GET1^DIQ(2,DFNN,.19)
"RTN","PXRMGECS",111,0)
 .I STATUS["IN" I DIV="" S DIV="Unknown"
"RTN","PXRMGECS",112,0)
 .S CNT=CNT+1
"RTN","PXRMGECS",113,0)
 .S SSN=0 F  S SSN=$O(^TMP("PXRMGEC",$J,"REFDFNN",PATIENT,SSN)) Q:SSN=""  D
"RTN","PXRMGECS",114,0)
 ..S TOTAL=$G(^TMP("PXRMGEC",$J,"REFDFNN",PATIENT,SSN)) S ACCTOT=ACCTOT+TOTAL
"RTN","PXRMGECS",115,0)
 ..I FOR W !,CNT," ",PATIENT,?25,SSN,?37,$J(TOTAL,3),?44,STATUS,?56,DIV D PB Q:Y=0
"RTN","PXRMGECS",116,0)
 ..I 'FOR W !,PATIENT,"^",SSN,"^",TOTAL
"RTN","PXRMGECS",117,0)
 I FOR W !,"__________________________________" D PB Q:Y=0
"RTN","PXRMGECS",118,0)
 I FOR W !,"Total Referrals",?25,$G(SSN),?37,$J(ACCTOT,3)
"RTN","PXRMGECS",119,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECS",120,0)
 Q
"RTN","PXRMGECS",121,0)
 ;______________________________________________________________
"RTN","PXRMGECS",122,0)
CTD ;Referrals Counts by Date
"RTN","PXRMGECS",123,0)
 N DATE,TOTAL,ACCTOT
"RTN","PXRMGECS",124,0)
 S ACCTOT=0
"RTN","PXRMGECS",125,0)
 D E^PXRMGECV("CTD",1,BDT,EDT,"F",0)
"RTN","PXRMGECS",126,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECS",127,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECS",128,0)
 W @IOF
"RTN","PXRMGECS",129,0)
 W "=============================================================================="
"RTN","PXRMGECS",130,0)
 W !,"Referral Count by Date"
"RTN","PXRMGECS",131,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECS",132,0)
 W !,"Report Displays Counts of Complete Referrals Only"
"RTN","PXRMGECS",133,0)
 I FOR W !,"Date",?25,"Total Count"
"RTN","PXRMGECS",134,0)
 I 'FOR W !,"Date^Total Count"
"RTN","PXRMGECS",135,0)
 W !,"=============================================================================="
"RTN","PXRMGECS",136,0)
 ;TMP("PXRMGEC",$J,"REFDATE",DATE)="3"
"RTN","PXRMGECS",137,0)
 W ! D PB Q:Y=0
"RTN","PXRMGECS",138,0)
 S DATE=0 F  S DATE=$O(^TMP("PXRMGEC",$J,"REFDATE",DATE)) Q:DATE=""  D
"RTN","PXRMGECS",139,0)
 .S TOTAL=$G(^TMP("PXRMGEC",$J,"REFDATE",DATE)) S ACCTOT=ACCTOT+TOTAL
"RTN","PXRMGECS",140,0)
 .I FOR W !,$$FMTE^XLFDT(DATE,"5ZM"),?25,$J(TOTAL,3) D PB Q:Y=0
"RTN","PXRMGECS",141,0)
 .I 'FOR W !,$$FMTE^XLFDT(DATE,"5ZM"),"^",TOTAL
"RTN","PXRMGECS",142,0)
 I FOR W !,"_____________________________" D PB Q:Y=0
"RTN","PXRMGECS",143,0)
 I FOR W !,"Total Referrals",?25,$J(ACCTOT,3) D PB Q:Y=0
"RTN","PXRMGECS",144,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECS",145,0)
 Q
"RTN","PXRMGECS",146,0)
 ;
"RTN","PXRMGECS",147,0)
PB ;PAGE BREAK
"RTN","PXRMGECS",148,0)
 S Y=""
"RTN","PXRMGECS",149,0)
 I $Y=(IOSL-2)!($Y=(IOSL-3)) D
"RTN","PXRMGECS",150,0)
 .K DIR
"RTN","PXRMGECS",151,0)
 .S DIR(0)="E"
"RTN","PXRMGECS",152,0)
 .D ^DIR
"RTN","PXRMGECS",153,0)
 .I Y=1 W @IOF S $Y=0
"RTN","PXRMGECS",154,0)
 .W !
"RTN","PXRMGECS",155,0)
 K DIR
"RTN","PXRMGECS",156,0)
 Q
"RTN","PXRMGECS",157,0)
 ;
"RTN","PXRMGECT")
0^72^B25262357
"RTN","PXRMGECT",1,0)
PXRMGECT ;SLC/JVS GEC-Queued Reports-cont'd ;7/14/05  10:45
"RTN","PXRMGECT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECT",3,0)
 Q
"RTN","PXRMGECT",4,0)
CTL ;Referrals Counts by Location
"RTN","PXRMGECT",5,0)
 N LOC,TOTAL,ACCTOT,PAGE
"RTN","PXRMGECT",6,0)
 S ACCTOT=0
"RTN","PXRMGECT",7,0)
 S REF="^TMP(""PXRMGEC"",$J)"
"RTN","PXRMGECT",8,0)
 D E^PXRMGECV("CTL",1,BDT,EDT,"F",0)
"RTN","PXRMGECT",9,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECT",10,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECT",11,0)
 W @IOF
"RTN","PXRMGECT",12,0)
 W "=============================================================================="
"RTN","PXRMGECT",13,0)
 W !,"Referral Count by Location"
"RTN","PXRMGECT",14,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECT",15,0)
 W !,"Report Displays Counts of Complete Referrals Only"
"RTN","PXRMGECT",16,0)
 I FOR W !,"Location",?25,"Total Count"
"RTN","PXRMGECT",17,0)
 I 'FOR W !,"Location^Total Count"
"RTN","PXRMGECT",18,0)
 W !,"=============================================================================="
"RTN","PXRMGECT",19,0)
 S PAGE=1
"RTN","PXRMGECT",20,0)
 ;TMP("PXRMGEC",$J,"REFLOCC",LOC)="3"
"RTN","PXRMGECT",21,0)
 W ! D PAGE^PXRMGECZ
"RTN","PXRMGECT",22,0)
 S LOC=0 F  S LOC=$O(@REF@("REFLOCC",LOC)) Q:LOC=""  D
"RTN","PXRMGECT",23,0)
 .S TOTAL=$G(@REF@("REFLOCC",LOC)) S ACCTOT=ACCTOT+TOTAL
"RTN","PXRMGECT",24,0)
 .I FOR W !,LOC,?25,$J(TOTAL,3) D PAGE^PXRMGECZ
"RTN","PXRMGECT",25,0)
 .I 'FOR W !,LOC,"^",TOTAL D PAGE^PXRMGECZ
"RTN","PXRMGECT",26,0)
 I FOR W !,"_____________________________" D PAGE^PXRMGECZ
"RTN","PXRMGECT",27,0)
 I FOR W !,"Total Referrals",?25,$J(ACCTOT,3) D PAGE^PXRMGECZ
"RTN","PXRMGECT",28,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECT",29,0)
 Q
"RTN","PXRMGECT",30,0)
 ;______________________________________________________________
"RTN","PXRMGECT",31,0)
CTDR ;Referrals Counts by Provider
"RTN","PXRMGECT",32,0)
 N DOC,TOTAL,ACCTOT,DIEN,PAGE
"RTN","PXRMGECT",33,0)
 S ACCTOT=0
"RTN","PXRMGECT",34,0)
 D E^PXRMGECV("CTDR",1,BDT,EDT,"F",0)
"RTN","PXRMGECT",35,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECT",36,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECT",37,0)
 W @IOF
"RTN","PXRMGECT",38,0)
 W "=============================================================================="
"RTN","PXRMGECT",39,0)
 W !,"Referral Count by Provider"
"RTN","PXRMGECT",40,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECT",41,0)
 W !,"Report Displays Counts of Complete Referrals Only"
"RTN","PXRMGECT",42,0)
 I FOR W !,"Provider",?37,"Total Count"
"RTN","PXRMGECT",43,0)
 I 'FOR W !,"Provider^IEN^Total Count"
"RTN","PXRMGECT",44,0)
 W !,"=============================================================================="
"RTN","PXRMGECT",45,0)
 S PAGE=1
"RTN","PXRMGECT",46,0)
 ;TMP("PXRMGEC",$J,"REFDOCC",DOC)="3"
"RTN","PXRMGECT",47,0)
 W ! D PAGE^PXRMGECZ
"RTN","PXRMGECT",48,0)
 S DOC=0 F  S DOC=$O(^TMP("PXRMGEC",$J,"REFDOCC",DOC)) Q:DOC=""  D
"RTN","PXRMGECT",49,0)
 .S DIEN=0 F  S DIEN=$O(^TMP("PXRMGEC",$J,"REFDOCC",DOC,DIEN)) Q:DIEN=""  D
"RTN","PXRMGECT",50,0)
 ..S TOTAL=$G(^TMP("PXRMGEC",$J,"REFDOCC",DOC,DIEN)) S ACCTOT=ACCTOT+TOTAL
"RTN","PXRMGECT",51,0)
 ..I FOR W !,DOC," ("_DIEN_")",?37,$J(TOTAL,3) D PAGE^PXRMGECZ
"RTN","PXRMGECT",52,0)
 ..I 'FOR W !,DOC,"^",DIEN,"^",TOTAL D PAGE^PXRMGECZ
"RTN","PXRMGECT",53,0)
 I FOR W !,"_____________________________" D PAGE^PXRMGECZ
"RTN","PXRMGECT",54,0)
 I FOR W !,"Total Referrals",?37,$J(ACCTOT,3) D PAGE^PXRMGECZ
"RTN","PXRMGECT",55,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECT",56,0)
 Q
"RTN","PXRMGECT",57,0)
 ;______________________________________________________________
"RTN","PXRMGECT",58,0)
CTP ;Referrals Counts by Patient
"RTN","PXRMGECT",59,0)
 N PATIENT,TOTAL,ACCTOT,SSN,CNT,PAGE,DFNN,STATUS,DIV
"RTN","PXRMGECT",60,0)
 S ACCTOT=0
"RTN","PXRMGECT",61,0)
 D E^PXRMGECV("CTP",1,BDT,EDT,"F",0)
"RTN","PXRMGECT",62,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECT",63,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECT",64,0)
 W @IOF
"RTN","PXRMGECT",65,0)
 W "=============================================================================="
"RTN","PXRMGECT",66,0)
 W !,"Referral Count by Date"
"RTN","PXRMGECT",67,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECT",68,0)
 W !,"Report Displays Counts of Complete Referrals Only"
"RTN","PXRMGECT",69,0)
 I FOR W !,"Patient",?37,"Total Count",?56,"Division"
"RTN","PXRMGECT",70,0)
 I 'FOR W !,"Patient^SSN^Total Count"
"RTN","PXRMGECT",71,0)
 W !,"=============================================================================="
"RTN","PXRMGECT",72,0)
 S PAGE=1
"RTN","PXRMGECT",73,0)
 S CNT=0
"RTN","PXRMGECT",74,0)
 ;TMP("PXRMGEC",$J,"REFDFNN,PATIENT)="3"
"RTN","PXRMGECT",75,0)
 W ! D PAGE^PXRMGECZ
"RTN","PXRMGECT",76,0)
 S PATIENT=0 F  S PATIENT=$O(^TMP("PXRMGEC",$J,"REFDFNN",PATIENT)) Q:PATIENT=""  D
"RTN","PXRMGECT",77,0)
 .S DFNN=$O(^DPT("B",PATIENT,0))
"RTN","PXRMGECT",78,0)
 .S STATUS=$S($D(^DPT(DFNN,.1)):"INPATIENT",1:"OUTPATIENT")
"RTN","PXRMGECT",79,0)
 .S DIV=$$GET1^DIQ(2,DFNN,.19)
"RTN","PXRMGECT",80,0)
 .I STATUS["IN" I DIV="" S DIV="Unknown"
"RTN","PXRMGECT",81,0)
 .S CNT=CNT+1
"RTN","PXRMGECT",82,0)
 .S SSN=0 F  S SSN=$O(^TMP("PXRMGEC",$J,"REFDFNN",PATIENT,SSN)) Q:SSN=""   D
"RTN","PXRMGECT",83,0)
 ..S TOTAL=$G(^TMP("PXRMGEC",$J,"REFDFNN",PATIENT)) S ACCTOT=ACCTOT+TOTAL
"RTN","PXRMGECT",84,0)
 ..I FOR W !,CNT," ",PATIENT,?25,SSN,?37,$J(TOTAL,3),?44,STATUS,?56,DIV D PAGE^PXRMGECZ
"RTN","PXRMGECT",85,0)
 ..I 'FOR W !,PATIENT,"^",SSN,"^",TOTAL D PAGE^PXRMGECZ
"RTN","PXRMGECT",86,0)
 I FOR W !,"_____________________________" D PAGE^PXRMGECZ
"RTN","PXRMGECT",87,0)
 I FOR W !,"Total Referrals",?25,SSN,?37,$J(ACCTOT,3) D PAGE^PXRMGECZ
"RTN","PXRMGECT",88,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECT",89,0)
 Q
"RTN","PXRMGECT",90,0)
 ;______________________________________________________________
"RTN","PXRMGECT",91,0)
CTD ;Referrals Counts by Date
"RTN","PXRMGECT",92,0)
 N DATE,TOTAL,ACCTOT,PAGE
"RTN","PXRMGECT",93,0)
 S ACCTOT=0
"RTN","PXRMGECT",94,0)
 D E^PXRMGECV("CTD",1,BDT,EDT,"F",0)
"RTN","PXRMGECT",95,0)
 I FORMAT="F" S FOR=1
"RTN","PXRMGECT",96,0)
 I FORMAT="D" S FOR=0
"RTN","PXRMGECT",97,0)
 W @IOF
"RTN","PXRMGECT",98,0)
 W "=============================================================================="
"RTN","PXRMGECT",99,0)
 S PAGE=1
"RTN","PXRMGECT",100,0)
 W !,"Referral Count by Date"
"RTN","PXRMGECT",101,0)
 W !,"From: "_$$FMTE^XLFDT(BDT,"5ZM")_" To: "_$$FMTE^XLFDT(EDT,"5ZM")
"RTN","PXRMGECT",102,0)
 W !,"Report Displays Counts of Complete Referrals Only"
"RTN","PXRMGECT",103,0)
 I FOR W !,"Date",?25,"Total Count"
"RTN","PXRMGECT",104,0)
 I 'FOR W !,"Date^Total Count"
"RTN","PXRMGECT",105,0)
 W !,"=============================================================================="
"RTN","PXRMGECT",106,0)
 ;TMP("PXRMGEC",$J,"REFDATE",DATE)="3"
"RTN","PXRMGECT",107,0)
 W !
"RTN","PXRMGECT",108,0)
 S DATE=0 F  S DATE=$O(^TMP("PXRMGEC",$J,"REFDATE",DATE)) Q:DATE=""  D
"RTN","PXRMGECT",109,0)
 .S TOTAL=$G(^TMP("PXRMGEC",$J,"REFDATE",DATE)) S ACCTOT=ACCTOT+TOTAL
"RTN","PXRMGECT",110,0)
 .I FOR W !,$$FMTE^XLFDT(DATE,"5ZM"),?25,$J(TOTAL,3) D PAGE^PXRMGECZ
"RTN","PXRMGECT",111,0)
 .I 'FOR W !,$$FMTE^XLFDT(DATE,"5ZM"),"^",TOTAL D PAGE^PXRMGECZ
"RTN","PXRMGECT",112,0)
 I FOR W !,"_____________________________" D PAGE^PXRMGECZ
"RTN","PXRMGECT",113,0)
 I FOR W !,"Total Referrals",?25,$J(ACCTOT,3) D PAGE^PXRMGECZ
"RTN","PXRMGECT",114,0)
 K ^TMP("PXRMGEC",$J)
"RTN","PXRMGECT",115,0)
 Q
"RTN","PXRMGECT",116,0)
 ;______________________________________________________________
"RTN","PXRMGECU")
0^73^B91128162
"RTN","PXRMGECU",1,0)
PXRMGECU ;SLC/AGP,JVS - CLINICAL REMINDERS ;7/14/05  10:45
"RTN","PXRMGECU",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECU",3,0)
 Q
"RTN","PXRMGECU",4,0)
FINISHED(DFN,ANS) ;Delete 801.5 entries if finished
"RTN","PXRMGECU",5,0)
 ;ANS=Answer to YES/NO button should be 1 or will quit
"RTN","PXRMGECU",6,0)
 Q:DFN=""
"RTN","PXRMGECU",7,0)
 Q:ANS=0
"RTN","PXRMGECU",8,0)
 S PATDA="" F  S PATDA=$O(^PXRMD(801.5,"B",DFN,PATDA)) Q:PATDA=""  D
"RTN","PXRMGECU",9,0)
 .S DA=PATDA,DIK="^PXRMD(801.5," D ^DIK
"RTN","PXRMGECU",10,0)
 K DA,DIK,PATDA
"RTN","PXRMGECU",11,0)
 Q
"RTN","PXRMGECU",12,0)
 ;
"RTN","PXRMGECU",13,0)
CON(IEN,DFN) ;CHECK TO see if 2 DIA ARE DONE to display consult
"RTN","PXRMGECU",14,0)
 N OK
"RTN","PXRMGECU",15,0)
 ;
"RTN","PXRMGECU",16,0)
 S OK=0
"RTN","PXRMGECU",17,0)
 S GEC1DA=$O(^PXRMD(801.41,"AC","GEC1",0))
"RTN","PXRMGECU",18,0)
 S GEC2DA=$O(^PXRMD(801.41,"AC","GEC2",0))
"RTN","PXRMGECU",19,0)
 S GEC3DA=$O(^PXRMD(801.41,"AC","GEC3",0))
"RTN","PXRMGECU",20,0)
 S GECFDA=$O(^PXRMD(801.41,"AC","GECF",0))
"RTN","PXRMGECU",21,0)
 Q:IEN'=GEC1DA!(IEN'=GEC2DA)!(IEN'=GEC3DA) OK
"RTN","PXRMGECU",22,0)
 ;
"RTN","PXRMGECU",23,0)
 S CNT=0
"RTN","PXRMGECU",24,0)
 I $D(^PXRMD(801.5,"AD",DFN,"GEC1")) S CNT=CNT+1
"RTN","PXRMGECU",25,0)
 I $D(^PXRMD(801.5,"AD",DFN,"GEC2")) S CNT=CNT+1
"RTN","PXRMGECU",26,0)
 I $D(^PXRMD(801.5,"AD",DFN,"GEC3")) S CNT=CNT+1
"RTN","PXRMGECU",27,0)
 ;
"RTN","PXRMGECU",28,0)
 I CNT>1 S OK=1
"RTN","PXRMGECU",29,0)
 Q OK
"RTN","PXRMGECU",30,0)
 ;
"RTN","PXRMGECU",31,0)
DEL(NOTEIEN) ;Delete HF and 801.5 Called from DELETE^TIUEDI1
"RTN","PXRMGECU",32,0)
 N DFN,TIUNODE,FILEIEN,GEC,ENCDT,GECNODE,GECT,GECDA,HFDA
"RTN","PXRMGECU",33,0)
 N HFARY
"RTN","PXRMGECU",34,0)
 Q:'$D(^PXRMD(801.5,"ACOPY",NOTEIEN))
"RTN","PXRMGECU",35,0)
 S DFN=$O(^PXRMD(801.5,"ACOPY",NOTEIEN,0))
"RTN","PXRMGECU",36,0)
 S ENCDT=$O(^PXRMD(801.5,"ACOPY",NOTEIEN,DFN,0))
"RTN","PXRMGECU",37,0)
 I $D(^PXRMD(801.5,"ANOTE",NOTEIEN)) D
"RTN","PXRMGECU",38,0)
 .S GEC="" F  S GEC=$O(^PXRMD(801.5,"ANOTE",NOTEIEN,GEC)) Q:GEC=""  D
"RTN","PXRMGECU",39,0)
 ..S FILEIEN=0 F  S FILEIEN=$O(^PXRMD(801.5,"ANOTE",NOTEIEN,GEC,FILEIEN)) Q:FILEIEN=""  D
"RTN","PXRMGECU",40,0)
 ...S GECNODE=$G(^PXRMD(801.5,FILEIEN,0))
"RTN","PXRMGECU",41,0)
 ...S GECT=$P(GECNODE,"^",3),GECDA=$O(^PX(839.7,"B",GECT,0))
"RTN","PXRMGECU",42,0)
 ...S HFDA=0 F  S HFDA=$O(^AUPNVHF("AED",ENCDT,DFN,GECDA,HFDA)) Q:HFDA=""  D
"RTN","PXRMGECU",43,0)
 ....S HFARY(HFDA)=""
"RTN","PXRMGECU",44,0)
 ...S DA=FILEIEN S DIK="^PXRMD(801.5," D ^DIK
"RTN","PXRMGECU",45,0)
 E  I $D(^PXRMD(801.5,"ACOPY",NOTEIEN)) D
"RTN","PXRMGECU",46,0)
 .S GECT="" F  S GECT=$O(^PXRMD(801.5,"ACOPY",NOTEIEN,DFN,ENCDT,GECT)) Q:GECT=""  D
"RTN","PXRMGECU",47,0)
 ..S GECDA=$O(^PX(839.7,"B",GECT,0))
"RTN","PXRMGECU",48,0)
 ..S HFDA=0 F  S HFDA=$O(^AUPNVHF("AED",ENCDT,DFN,GECDA,HFDA)) Q:HFDA=""  D
"RTN","PXRMGECU",49,0)
 ...S HFARY(HFDA)=""
"RTN","PXRMGECU",50,0)
 I $D(HFARY) D
"RTN","PXRMGECU",51,0)
 .;
"RTN","PXRMGECU",52,0)
 .N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSK,GECIEN,GET
"RTN","PXRMGECU",53,0)
 .;
"RTN","PXRMGECU",54,0)
 .S ZTIO="ORW/PXAPI RESOURCE"
"RTN","PXRMGECU",55,0)
 .S ZTRTN="REMOVE^PXRMGECK"
"RTN","PXRMGECU",56,0)
 .S ZTDTH=$H
"RTN","PXRMGECU",57,0)
 .S ZTSAVE("GECT")=""
"RTN","PXRMGECU",58,0)
 .S ZTSAVE("HFARY(")=""
"RTN","PXRMGECU",59,0)
 .S ZTDESC="PXRM remove Health Factors for GEC"
"RTN","PXRMGECU",60,0)
 .D ^%ZTLOAD
"RTN","PXRMGECU",61,0)
 ;Clean up ACOPY nodes
"RTN","PXRMGECU",62,0)
 D ACOPYDEL^PXRMGECK
"RTN","PXRMGECU",63,0)
 Q
"RTN","PXRMGECU",64,0)
 ;
"RTN","PXRMGECU",65,0)
API(RESULT,IEN,DFN,VISIT,WHERE,NOTEIEN) ;
"RTN","PXRMGECU",66,0)
 I '$D(NOTEIEN) S NOTEIEN=1
"RTN","PXRMGECU",67,0)
 N GEC,DFNDT
"RTN","PXRMGECU",68,0)
 S GEC=$$CHECKGEC(IEN)
"RTN","PXRMGECU",69,0)
 I $G(GEC)="" S RESULT=0_U_"" Q
"RTN","PXRMGECU",70,0)
 S RESULT=1_U_$$GECDT(DFN,GEC,VISIT,NOTEIEN)_";"_GEC_U_$$EVAL(DFN,GEC,WHERE)
"RTN","PXRMGECU",71,0)
 ;
"RTN","PXRMGECU",72,0)
 Q
"RTN","PXRMGECU",73,0)
 ;
"RTN","PXRMGECU",74,0)
CHECKGEC(IEN) ;
"RTN","PXRMGECU",75,0)
 N RIEN,DIEN
"RTN","PXRMGECU",76,0)
 I IEN["R" D
"RTN","PXRMGECU",77,0)
 . S RIEN=$E(IEN,2,$L(IEN)) S DIEN=$G(^PXD(811.9,RIEN,51))
"RTN","PXRMGECU",78,0)
 . I $G(DIEN)'="" S GEC=$P($G(^PXRMD(801.41,DIEN,0)),U,16)
"RTN","PXRMGECU",79,0)
 E  S GEC=$P($G(^PXRMD(801.41,IEN,0)),U,16)
"RTN","PXRMGECU",80,0)
 Q $G(GEC)
"RTN","PXRMGECU",81,0)
 ;
"RTN","PXRMGECU",82,0)
GECDT(DFN,GEC,VISIT,NOTEIEN) ;Get Date/Time from file
"RTN","PXRMGECU",83,0)
 N STOP
"RTN","PXRMGECU",84,0)
 S STOP=0
"RTN","PXRMGECU",85,0)
 I $D(^PXRMD(801.5,"B",DFN)) D CURADD
"RTN","PXRMGECU",86,0)
 I '$D(^PXRMD(801.5,"B",DFN)) D NEWADD
"RTN","PXRMGECU",87,0)
 S DFNDT=$O(^PXRMD(801.5,"AC",DFN,0))
"RTN","PXRMGECU",88,0)
 Q DFNDT
"RTN","PXRMGECU",89,0)
 ;
"RTN","PXRMGECU",90,0)
NEWADD ;-Set Data into File 801.5 and 801.55 (history)
"RTN","PXRMGECU",91,0)
 Q:STOP=1
"RTN","PXRMGECU",92,0)
 D
"RTN","PXRMGECU",93,0)
 .Q:$D(^PXRMD(801.5,"AD",DFN,GEC))
"RTN","PXRMGECU",94,0)
 .S GEX(1,801.5,"+1,",.01)=DFN
"RTN","PXRMGECU",95,0)
 .S GEX(1,801.5,"+1,",.02)=$$NOW^XLFDT
"RTN","PXRMGECU",96,0)
 .S GEX(1,801.5,"+1,",.03)=GEC
"RTN","PXRMGECU",97,0)
 .S GEX(1,801.5,"+1,",.04)=+$G(NOTEIEN)
"RTN","PXRMGECU",98,0)
 .S GEX(1,801.5,"+1,",.05)=DUZ
"RTN","PXRMGECU",99,0)
 .S GEX(1,801.5,"+1,",.06)=DT
"RTN","PXRMGECU",100,0)
 .S ^PXRMD(801.5,"ACOPY",+$G(NOTEIEN),DFN,$G(GEX(1,801.5,"+1,",.02)),GEC,DT)=""
"RTN","PXRMGECU",101,0)
 .D UPDATE^DIE("","GEX(1)")
"RTN","PXRMGECU",102,0)
 ;--HISTORY FILE
"RTN","PXRMGECU",103,0)
 S GEX(2,801.55,"+1,",.01)=DFN
"RTN","PXRMGECU",104,0)
 S GEX(2,801.55,"+1,",.02)=$$NOW^XLFDT
"RTN","PXRMGECU",105,0)
 S GEX(2,801.55,"+1,",.03)=GEC
"RTN","PXRMGECU",106,0)
 S GEX(2,801.55,"+1,",.04)=+$G(NOTEIEN)
"RTN","PXRMGECU",107,0)
 S GEX(2,801.55,"+1,",.05)=DUZ
"RTN","PXRMGECU",108,0)
 S GEX(2,801.55,"+1,",.06)=DT
"RTN","PXRMGECU",109,0)
 D UPDATE^DIE("","GEX(2)")
"RTN","PXRMGECU",110,0)
 K GEX
"RTN","PXRMGECU",111,0)
 S STOP=1
"RTN","PXRMGECU",112,0)
 Q
"RTN","PXRMGECU",113,0)
CURADD ;-Set Data into File 801.5 and 801.55 (history)
"RTN","PXRMGECU",114,0)
 Q:STOP=1
"RTN","PXRMGECU",115,0)
 D
"RTN","PXRMGECU",116,0)
 .Q:$D(^PXRMD(801.5,"AD",DFN,GEC))
"RTN","PXRMGECU",117,0)
 .S GEX(1,801.5,"+1,",.01)=DFN
"RTN","PXRMGECU",118,0)
 .S GEX(1,801.5,"+1,",.02)=$O(^PXRMD(801.5,"AC",DFN,0))
"RTN","PXRMGECU",119,0)
 .S GEX(1,801.5,"+1,",.03)=GEC
"RTN","PXRMGECU",120,0)
 .S GEX(1,801.5,"+1,",.04)=+$G(NOTEIEN)
"RTN","PXRMGECU",121,0)
 .S GEX(1,801.5,"+1,",.05)=DUZ
"RTN","PXRMGECU",122,0)
 .S GEX(1,801.5,"+1,",.06)=DT
"RTN","PXRMGECU",123,0)
 .S ^PXRMD(801.5,"ACOPY",+$G(NOTEIEN),DFN,$G(GEX(1,801.5,"+1,",.02)),GEC,DT)=""
"RTN","PXRMGECU",124,0)
 .D UPDATE^DIE("","GEX(1)")
"RTN","PXRMGECU",125,0)
 ;--HISTORY FILE
"RTN","PXRMGECU",126,0)
 S GEX(2,801.55,"+1,",.01)=DFN
"RTN","PXRMGECU",127,0)
 S GEX(2,801.55,"+1,",.02)=$O(^PXRMD(801.5,"AC",DFN,0))
"RTN","PXRMGECU",128,0)
 S GEX(2,801.55,"+1,",.03)=GEC
"RTN","PXRMGECU",129,0)
 S GEX(2,801.55,"+1,",.04)=+$G(NOTEIEN)
"RTN","PXRMGECU",130,0)
 S GEX(2,801.55,"+1,",.05)=DUZ
"RTN","PXRMGECU",131,0)
 S GEX(2,801.55,"+1,",.06)=DT
"RTN","PXRMGECU",132,0)
 D UPDATE^DIE("","GEX(2)")
"RTN","PXRMGECU",133,0)
 K GEX
"RTN","PXRMGECU",134,0)
 S STOP=1
"RTN","PXRMGECU",135,0)
 Q
"RTN","PXRMGECU",136,0)
 ;
"RTN","PXRMGECU",137,0)
STATUS(DFN) ;Evaluate The status of the Referral
"RTN","PXRMGECU",138,0)
 ;
"RTN","PXRMGECU",139,0)
 N STOP,ZTSK
"RTN","PXRMGECU",140,0)
 S STOP=0
"RTN","PXRMGECU",141,0)
 I $D(^PXRMD(801.5,"ATASK",DFN)) S ZTSK=$O(^PXRMD(801.5,"ATASK",DFN,0)) D
"RTN","PXRMGECU",142,0)
 .D STAT^%ZTLOAD
"RTN","PXRMGECU",143,0)
 .I ZTSK(0)=1 D
"RTN","PXRMGECU",144,0)
 ..I 12[ZTSK(1) D
"RTN","PXRMGECU",145,0)
 ...S MESSAGE="Data is Changing!! Please Check Status Again^GEC Referral NO Status Available^0"
"RTN","PXRMGECU",146,0)
 ...S STOP=1
"RTN","PXRMGECU",147,0)
 Q:STOP=1 MESSAGE
"RTN","PXRMGECU",148,0)
 ;
"RTN","PXRMGECU",149,0)
 ;Returned
"RTN","PXRMGECU",150,0)
 ;sentence ~ sentence ~ sentence ^ OK or YES/NO BOX
"RTN","PXRMGECU",151,0)
 ;
"RTN","PXRMGECU",152,0)
 N MISSING,MESSAGE,HFDA,STOP,BOX
"RTN","PXRMGECU",153,0)
 S BOX=1
"RTN","PXRMGECU",154,0)
 D ACOPYDEL^PXRMGECK
"RTN","PXRMGECU",155,0)
 ;
"RTN","PXRMGECU",156,0)
 ;GET IEN FOR DATA SOURCES FOR GEC
"RTN","PXRMGECU",157,0)
 I $D(^PX(839.7,"B","GEC1")) S GEC1=$O(^PX(839.7,"B","GEC1",""))
"RTN","PXRMGECU",158,0)
 I $D(^PX(839.7,"B","GEC2")) S GEC2=$O(^PX(839.7,"B","GEC2",""))
"RTN","PXRMGECU",159,0)
 I $D(^PX(839.7,"B","GEC3")) S GEC3=$O(^PX(839.7,"B","GEC3",""))
"RTN","PXRMGECU",160,0)
 I $D(^PX(839.7,"B","GECF")) S GECF=$O(^PX(839.7,"B","GECF",""))
"RTN","PXRMGECU",161,0)
 ;
"RTN","PXRMGECU",162,0)
 S STOP=0
"RTN","PXRMGECU",163,0)
 S MESSAGE=" No GEC Referral in progress.^GEC Referral Status"
"RTN","PXRMGECU",164,0)
 S HFDA="" F  S HFDA=$O(^AUPNVHF("C",DFN,HFDA)) Q:HFDA=""  Q:STOP=1  D
"RTN","PXRMGECU",165,0)
 .I $D(^AUPNVHF(HFDA,12)) D
"RTN","PXRMGECU",166,0)
 ..I $P($G(^AUPNVHF(HFDA,12)),"^",1)>0 D
"RTN","PXRMGECU",167,0)
 ...S SOURCE=$P($G(^AUPNVHF(HFDA,812)),"^",3)
"RTN","PXRMGECU",168,0)
 ...Q:SOURCE=""
"RTN","PXRMGECU",169,0)
 ...I (SOURCE=$G(GEC1))!(SOURCE=$G(GEC2))!(SOURCE=$G(GEC3))!(SOURCE=$G(GECF)) D
"RTN","PXRMGECU",170,0)
 ....S STOP=1
"RTN","PXRMGECU",171,0)
 ;
"RTN","PXRMGECU",172,0)
 S (MISSING)=""
"RTN","PXRMGECU",173,0)
 I '$D(^PXRMD(801.5,"B",DFN))&(STOP=0) D
"RTN","PXRMGECU",174,0)
 .S MESSAGE=" No GEC Referral on record.^Current GEC Referral Status"
"RTN","PXRMGECU",175,0)
 Q:'$D(^PXRMD(801.5,"B",DFN)) MESSAGE
"RTN","PXRMGECU",176,0)
 S MESSAGE=""
"RTN","PXRMGECU",177,0)
 ;
"RTN","PXRMGECU",178,0)
 ;
"RTN","PXRMGECU",179,0)
 ; A. look for missing dialog
"RTN","PXRMGECU",180,0)
 S:'$D(^PXRMD(801.5,"AD",DFN,"GEC1")) MISSING=MISSING_1_"^"
"RTN","PXRMGECU",181,0)
 S:'$D(^PXRMD(801.5,"AD",DFN,"GEC2")) MISSING=MISSING_2_"^"
"RTN","PXRMGECU",182,0)
 S:'$D(^PXRMD(801.5,"AD",DFN,"GEC3")) MISSING=MISSING_3_"^"
"RTN","PXRMGECU",183,0)
 S:'$D(^PXRMD(801.5,"AD",DFN,"GECF")) MISSING=MISSING_4
"RTN","PXRMGECU",184,0)
 ;    a. if none missing then set message
"RTN","PXRMGECU",185,0)
 ;I MISSING="" D
"RTN","PXRMGECU",186,0)
 ;    b. if missing then create message
"RTN","PXRMGECU",187,0)
 I MISSING'=""!(MISSING="") D
"RTN","PXRMGECU",188,0)
 .S MESSAGE="The following Dialogs are Complete:~"
"RTN","PXRMGECU",189,0)
 .S:MISSING'[1 MESSAGE=MESSAGE_$P($T(T+7),";",3) D
"RTN","PXRMGECU",190,0)
 ..I +$$TIUSTAT^PXRMGECK(DFN,"GEC1") D
"RTN","PXRMGECU",191,0)
 ...S MESSAGE=MESSAGE_"~"_"       Note is "_$P($$TIUSTAT^PXRMGECK(DFN,"GEC1"),":",2)_"    "_$P($$TIUSTAT^PXRMGECK(DFN,"GEC1"),":",4)_"~"
"RTN","PXRMGECU",192,0)
 .S:MISSING'[2 MESSAGE=MESSAGE_$P($T(T+8),";",3) D
"RTN","PXRMGECU",193,0)
 ..I +$$TIUSTAT^PXRMGECK(DFN,"GEC2") D
"RTN","PXRMGECU",194,0)
 ...S MESSAGE=MESSAGE_"~"_"       Note is "_$P($$TIUSTAT^PXRMGECK(DFN,"GEC2"),":",2)_"    "_$P($$TIUSTAT^PXRMGECK(DFN,"GEC2"),":",4)_"~"
"RTN","PXRMGECU",195,0)
 .S:MISSING'[3 MESSAGE=MESSAGE_$P($T(T+9),";",3) D
"RTN","PXRMGECU",196,0)
 ..I +$$TIUSTAT^PXRMGECK(DFN,"GEC3") D
"RTN","PXRMGECU",197,0)
 ...S MESSAGE=MESSAGE_"~"_"       Note is "_$P($$TIUSTAT^PXRMGECK(DFN,"GEC3"),":",2)_"    "_$P($$TIUSTAT^PXRMGECK(DFN,"GEC3"),":",4)_"~"
"RTN","PXRMGECU",198,0)
 .S:MISSING'[4 MESSAGE=MESSAGE_$P($T(T+10),";",3) D
"RTN","PXRMGECU",199,0)
 ..I +$$TIUSTAT^PXRMGECK(DFN,"GECF") D
"RTN","PXRMGECU",200,0)
 ...S MESSAGE=MESSAGE_"~"_"       Note is "_$P($$TIUSTAT^PXRMGECK(DFN,"GECF"),":",2)_"    "_$P($$TIUSTAT^PXRMGECK(DFN,"GECF"),":",4)_"~"
"RTN","PXRMGECU",201,0)
 .I $E(MESSAGE,$L(MESSAGE))'="~" S MESSAGE=MESSAGE_"~"
"RTN","PXRMGECU",202,0)
 .I MISSING'="" S MESSAGE=MESSAGE_$P($T(T+11),";",3)
"RTN","PXRMGECU",203,0)
 .S:MISSING[1 MESSAGE=MESSAGE_$P($T(T+7),";",3)
"RTN","PXRMGECU",204,0)
 .S:MISSING[2 MESSAGE=MESSAGE_$P($T(T+8),";",3)
"RTN","PXRMGECU",205,0)
 .S:MISSING[3 MESSAGE=MESSAGE_$P($T(T+9),";",3)
"RTN","PXRMGECU",206,0)
 .S:MISSING[4 MESSAGE=MESSAGE_$P($T(T+10),";",3)
"RTN","PXRMGECU",207,0)
 ;
"RTN","PXRMGECU",208,0)
 I MISSING="" S MESSAGE=MESSAGE_"~"_$P($T(T+5),";",3)
"RTN","PXRMGECU",209,0)
 S MESSAGE=MESSAGE_$P($T(T+6),";",3)
"RTN","PXRMGECU",210,0)
 S MESSAGE=MESSAGE_"^Current GEC Referral Status"_"^"_BOX
"RTN","PXRMGECU",211,0)
 ;
"RTN","PXRMGECU",212,0)
 Q MESSAGE
"RTN","PXRMGECU",213,0)
 ;
"RTN","PXRMGECU",214,0)
EVAL(DFN,GEC,WHERE) ;Evaluate for missing dialogs
"RTN","PXRMGECU",215,0)
 ;DFN=PATIENT DFN
"RTN","PXRMGECU",216,0)
 ;GEC=Identify for Dialog
"RTN","PXRMGECU",217,0)
 ;WHERE=What part of the dialog this call is comming from
"RTN","PXRMGECU",218,0)
 ; 0=Object at the start
"RTN","PXRMGECU",219,0)
 ; 1=Finished button
"RTN","PXRMGECU",220,0)
 ;
"RTN","PXRMGECU",221,0)
 ;Returned
"RTN","PXRMGECU",222,0)
 ;Box Header ^  Message ^ Box display Flag
"RTN","PXRMGECU",223,0)
 ;
"RTN","PXRMGECU",224,0)
 ;Clean up ACOPY node
"RTN","PXRMGECU",225,0)
 D ACOPYDEL^PXRMGECK
"RTN","PXRMGECU",226,0)
 ;
"RTN","PXRMGECU",227,0)
 N MISSING,MESSAGE,DIANAME,FORTH,BOX
"RTN","PXRMGECU",228,0)
 ;
"RTN","PXRMGECU",229,0)
 ;Getting the Names fo the dialogs
"RTN","PXRMGECU",230,0)
 I GEC="GEC1" S DIANAME=$P($T(T+1),";",3)
"RTN","PXRMGECU",231,0)
 I GEC="GEC2" S DIANAME=$P($T(T+2),";",3)
"RTN","PXRMGECU",232,0)
 I GEC="GEC3" S DIANAME=$P($T(T+3),";",3)
"RTN","PXRMGECU",233,0)
 I GEC="GECF" S DIANAME=$P($T(T+4),";",3)
"RTN","PXRMGECU",234,0)
 ;
"RTN","PXRMGECU",235,0)
 ;Check to see if 4th is done;add 1 or 0 to end of message
"RTN","PXRMGECU",236,0)
 ;if 1 the GUI should bring up a modal box asking if finished
"RTN","PXRMGECU",237,0)
 S FORTH=0
"RTN","PXRMGECU",238,0)
 S:$D(^PXRMD(801.5,"AD",DFN,"GECF"))!(GEC["GECF") FORTH=1
"RTN","PXRMGECU",239,0)
 I 'WHERE S FORTH=0
"RTN","PXRMGECU",240,0)
 ;
"RTN","PXRMGECU",241,0)
 ;
"RTN","PXRMGECU",242,0)
 S (MISSING,MESSAGE)=""
"RTN","PXRMGECU",243,0)
 Q:'$D(^PXRMD(801.5,"B",DFN)) MESSAGE
"RTN","PXRMGECU",244,0)
 I WHERE Q:FORTH=0 MESSAGE
"RTN","PXRMGECU",245,0)
 ;
"RTN","PXRMGECU",246,0)
 ;
"RTN","PXRMGECU",247,0)
 ; A. look for missing dialog
"RTN","PXRMGECU",248,0)
 S:'$D(^PXRMD(801.5,"AD",DFN,"GEC1"))&(GEC'["GEC1") MISSING=MISSING_1_"^"
"RTN","PXRMGECU",249,0)
 S:'$D(^PXRMD(801.5,"AD",DFN,"GEC2"))&(GEC'["GEC2") MISSING=MISSING_2_"^"
"RTN","PXRMGECU",250,0)
 S:'$D(^PXRMD(801.5,"AD",DFN,"GEC3"))&(GEC'["GEC3") MISSING=MISSING_3_"^"
"RTN","PXRMGECU",251,0)
 S:'$D(^PXRMD(801.5,"AD",DFN,"GECF"))&(GEC'["GECF") MISSING=MISSING_4
"RTN","PXRMGECU",252,0)
 ;    a. if none missing then set message
"RTN","PXRMGECU",253,0)
 I MISSING="" D
"RTN","PXRMGECU",254,0)
 .I WHERE S MESSAGE=$P($T(T+5),";",3)_$P($T(T+6),";",3)
"RTN","PXRMGECU",255,0)
 .I 'WHERE S MESSAGE=$P($T(T+5),";",3)
"RTN","PXRMGECU",256,0)
 ;    b. if missing then create message
"RTN","PXRMGECU",257,0)
 I MISSING'="" D
"RTN","PXRMGECU",258,0)
 .S MESSAGE="The Following Dialogs are Missing:~"
"RTN","PXRMGECU",259,0)
 .S:MISSING[1 MESSAGE=MESSAGE_$P($T(T+7),";",3)
"RTN","PXRMGECU",260,0)
 .S:MISSING[2 MESSAGE=MESSAGE_$P($T(T+8),";",3)
"RTN","PXRMGECU",261,0)
 .S:MISSING[3 MESSAGE=MESSAGE_$P($T(T+9),";",3)
"RTN","PXRMGECU",262,0)
 .S:MISSING[4 MESSAGE=MESSAGE_$P($T(T+10),";",3)
"RTN","PXRMGECU",263,0)
 .Q:'WHERE
"RTN","PXRMGECU",264,0)
 .S MESSAGE=MESSAGE_$P($T(T+6),";",3)_$P($T(T+12),";",3)_$P($T(T+13),";",3)
"RTN","PXRMGECU",265,0)
 ;
"RTN","PXRMGECU",266,0)
 S BOX="GEC Referral Completion Status"
"RTN","PXRMGECU",267,0)
 S MESSAGE=BOX_"^"_MESSAGE_"^"_FORTH
"RTN","PXRMGECU",268,0)
 Q MESSAGE
"RTN","PXRMGECU",269,0)
 ;
"RTN","PXRMGECU",270,0)
T ;TEXT
"RTN","PXRMGECU",271,0)
 ;; Social Services,
"RTN","PXRMGECU",272,0)
 ;; Nursing Assessment,
"RTN","PXRMGECU",273,0)
 ;; Care Recommendations,
"RTN","PXRMGECU",274,0)
 ;; Care Coordination
"RTN","PXRMGECU",275,0)
 ;; All Dialogs are Finished.
"RTN","PXRMGECU",276,0)
 ;; ~~Is this Referral Complete?
"RTN","PXRMGECU",277,0)
 ;; ~    Social Services
"RTN","PXRMGECU",278,0)
 ;; ~    Nursing Assessment
"RTN","PXRMGECU",279,0)
 ;; ~    Care Recommendations
"RTN","PXRMGECU",280,0)
 ;; ~    Care Coordination
"RTN","PXRMGECU",281,0)
 ;; ~The Following Dialogs are Missing:~
"RTN","PXRMGECU",282,0)
 ;; ~~(If you select Yes, the current REFERRAL ~will be completed and the information ~from the missing dialogs cannot be added.
"RTN","PXRMGECU",283,0)
 ;; ~~If you select No, the current REFERRAL ~remains open.)
"RTN","PXRMGECU",284,0)
 Q
"RTN","PXRMGECV")
0^74^B44364226
"RTN","PXRMGECV",1,0)
PXRMGECV ;SLC/JVS -Extract data for GEC Reports ;7/14/05  10:46
"RTN","PXRMGECV",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECV",3,0)
 Q
"RTN","PXRMGECV",4,0)
 ;
"RTN","PXRMGECV",5,0)
 ;Arrays
"RTN","PXRMGECV",6,0)
 ;^TMP("PXRMGEC",$J,    = Root Reference
"RTN","PXRMGECV",7,0)
 ;"REF",DATE,DFN)       = Number of HF in Referral
"RTN","PXRMGECV",8,0)
 ;"REFDFN",DFN)         = Number of Referrals per Patient
"RTN","PXRMGECV",9,0)
 ;"HS"                  = Heath Summary Array
"RTN","PXRMGECV",10,0)
 Q
"RTN","PXRMGECV",11,0)
GEC ;Get ien for GEC Date Sources
"RTN","PXRMGECV",12,0)
 S (GEC1DA,GEC2DA,GEC3DA,GECFDA)=0
"RTN","PXRMGECV",13,0)
 S GECFDA=$O(^PX(839.7,"B","GECF",0))
"RTN","PXRMGECV",14,0)
 S GEC1DA=$O(^PX(839.7,"B","GEC1",0))
"RTN","PXRMGECV",15,0)
 S GEC2DA=$O(^PX(839.7,"B","GEC2",0))
"RTN","PXRMGECV",16,0)
 S GEC3DA=$O(^PX(839.7,"B","GEC3",0))
"RTN","PXRMGECV",17,0)
 Q
"RTN","PXRMGECV",18,0)
 ;
"RTN","PXRMGECV",19,0)
RANG(BDT,EDT,VDT,SDT,CHK) ;Dates are in date range
"RTN","PXRMGECV",20,0)
 ;S=start date F=finished date
"RTN","PXRMGECV",21,0)
 N OK,SOK,FOK
"RTN","PXRMGECV",22,0)
 S (SOK,FOK,OK)=0
"RTN","PXRMGECV",23,0)
 I CHK["S" D
"RTN","PXRMGECV",24,0)
 .S:($P(SDT,".",1)'<(BDT))&($P(SDT,".",1)'>(EDT)) SOK=1
"RTN","PXRMGECV",25,0)
 I CHK["F" D
"RTN","PXRMGECV",26,0)
 .S:($P(VDT,".",1)'<(BDT))&($P(VDT,".",1)'>(EDT)) FOK=1
"RTN","PXRMGECV",27,0)
 S OK=$S(SOK=1:1,FOK=1:1,1:0)
"RTN","PXRMGECV",28,0)
 I CHK["SF"&(SOK+FOK'=2) S OK=0
"RTN","PXRMGECV",29,0)
 Q OK
"RTN","PXRMGECV",30,0)
 ;
"RTN","PXRMGECV",31,0)
FIN(DATE,DFN) ;Check to see if finished
"RTN","PXRMGECV",32,0)
 N GEC,DA,VST,VDT,DONE
"RTN","PXRMGECV",33,0)
 S DONE=0,VDT="0000000",DA=0
"RTN","PXRMGECV",34,0)
 S GEC=0 F  S GEC=$O(^AUPNVHF("AED",DATE,DFN,GEC)) Q:GEC=""  D
"RTN","PXRMGECV",35,0)
 .I GEC=GECFDA S DONE=1 D
"RTN","PXRMGECV",36,0)
 ..S DA=$O(^PXRMD(801.55,"AC",DFN,DATE,"GECF",0))
"RTN","PXRMGECV",37,0)
 ..I DA>0 S VDT=$P($G(^PXRMD(801.55,DA,0)),"^",6)
"RTN","PXRMGECV",38,0)
 ..;S DA=$O(^AUPNVHF("AED",DATE,DFN,GEC,0))
"RTN","PXRMGECV",39,0)
 ..;S VST=$P($G(^AUPNVHF(DA,0)),"^",3)
"RTN","PXRMGECV",40,0)
 ..;S VDT=$P($G(^AUPNVSIT(VST,0)),"^",1)
"RTN","PXRMGECV",41,0)
 ..;S VDT=DATE
"RTN","PXRMGECV",42,0)
 Q DONE_"^"_VDT
"RTN","PXRMGECV",43,0)
 ;
"RTN","PXRMGECV",44,0)
E(ARY,FIN,BDT,EDT,CHK,DFNONLY) ;EXTRACT GEC REFERRALS
"RTN","PXRMGECV",45,0)
 N DATE,GEC,DFN,DA,DFNX,DATEX,ZALL,CNTREF,COMPLETE
"RTN","PXRMGECV",46,0)
 N REFERAL,REFERA,LOCA,LOCN,LOC,DOC,DOCT,DOCTN,DOCTNA
"RTN","PXRMGECV",47,0)
 N DOCTOR,DR,DONE,VDT,FLAG,DTCHK,DATE1,DFN1,DATEY,DFNXX
"RTN","PXRMGECV",48,0)
 N GEC1DA,GEC2DA,GEC3DA,GECFDA,DFNFLAG
"RTN","PXRMGECV",49,0)
 ;N TMPLOC
"RTN","PXRMGECV",50,0)
 ;====================================================
"RTN","PXRMGECV",51,0)
 K ^TMP("PXRMGEC",$J,"REF"),^TMP("PXRMGEC",$J,"REFDFN")
"RTN","PXRMGECV",52,0)
 ;====================================================
"RTN","PXRMGECV",53,0)
 ;Callers Responsibility to Kill the Array
"RTN","PXRMGECV",54,0)
 ;(ARY,FIN,BDT,EDT,CHK,DFNONLY)
"RTN","PXRMGECV",55,0)
 ;EXAMPLE FOR HEALTH SUMMARY
"RTN","PXRMGECV",56,0)
 ;D E^PXRMGECV("HS",2,3020509,3030609,"S",0)
"RTN","PXRMGECV",57,0)
 ;Parameters
"RTN","PXRMGECV",58,0)
 ;S ARY="HS"
"RTN","PXRMGECV",59,0)
 ;Array to Create HS,DT,DFN,DOC,LOC,HFCD
"RTN","PXRMGECV",60,0)
 ;S FIN=0
"RTN","PXRMGECV",61,0)
 ;finished referrals 1=finished 0=unfinished 2=Both ""=finished
"RTN","PXRMGECV",62,0)
 ;S BDT=3020509 Begin Date
"RTN","PXRMGECV",63,0)
 ;S EDT=3030609 End Date
"RTN","PXRMGECV",64,0)
 ;S CHK="S"
"RTN","PXRMGECV",65,0)
 ;Check dates S=Start date Default F=Final date for date range
"RTN","PXRMGECV",66,0)
 ;S DFNONLY=0
"RTN","PXRMGECV",67,0)
 ; DFN of patient 0 or all
"RTN","PXRMGECV",68,0)
 ;=====================================================
"RTN","PXRMGECV",69,0)
 ;Count of Referrals
"RTN","PXRMGECV",70,0)
 S CNTREF=0
"RTN","PXRMGECV",71,0)
 D GEC ;get iens for the GECF VARIABLES
"RTN","PXRMGECV",72,0)
 ;==============
"RTN","PXRMGECV",73,0)
 D WORK
"RTN","PXRMGECV",74,0)
 Q
"RTN","PXRMGECV",75,0)
WORK ;
"RTN","PXRMGECV",76,0)
 S DATE1=0,DFN1=0
"RTN","PXRMGECV",77,0)
 S DATE="" F  S DATE=$O(^AUPNVHF("AED",DATE)) Q:DATE=""  D
"RTN","PXRMGECV",78,0)
 .S DFN="" F  S DFN=$O(^AUPNVHF("AED",DATE,DFN)) Q:DFN=""  D
"RTN","PXRMGECV",79,0)
 ..S COMPLETE=$$FIN(DATE,DFN),DONE=+COMPLETE,VDT=$P(COMPLETE,"^",2)
"RTN","PXRMGECV",80,0)
 ..Q:FIN=1&(DONE=0)
"RTN","PXRMGECV",81,0)
 ..Q:FIN=0&(DONE=1)
"RTN","PXRMGECV",82,0)
 ..Q:'$$RANG(BDT,EDT,VDT,DATE,CHK)
"RTN","PXRMGECV",83,0)
 ..;
"RTN","PXRMGECV",84,0)
PAT ..;===Check Patient DFN to see if continue or quit
"RTN","PXRMGECV",85,0)
 ..S DFNFLAG=1 I DFNONLY>0 D  Q:DFNFLAG=0
"RTN","PXRMGECV",86,0)
 ...I $D(DFNARY)&('$D(DFNARY(DFN))) S DFNFLAG=0
"RTN","PXRMGECV",87,0)
 ...I '$D(DFNARY)&(DFN'=DFNONLY) S DFNFLAG=0
"RTN","PXRMGECV",88,0)
 ...;======
"RTN","PXRMGECV",89,0)
 ...;
"RTN","PXRMGECV",90,0)
 ..S GEC="" F  S GEC=$O(^AUPNVHF("AED",DATE,DFN,GEC)) Q:GEC=""  D
"RTN","PXRMGECV",91,0)
 ...Q:GEC'=GECFDA&(GEC'=GEC1DA)&(GEC'=GEC2DA)&(GEC'=GEC3DA)
"RTN","PXRMGECV",92,0)
 ...S DFNXX=$P($G(^DPT(DFN,0)),"^",1)_" "_$P($G(^DPT(DFN,0)),"^",9)
"RTN","PXRMGECV",93,0)
 ...S DATEY=$$FMTE^XLFDT(DATE,"1P")
"RTN","PXRMGECV",94,0)
 ...I $D(^TMP("PXRMGEC",$J,"REF",DATE,DFN)) S ^TMP("PXRMGEC",$J,"REF",DATE,DFN)=$G(^TMP("PXRMGEC",$J,"REF",DATE,DFN))+1
"RTN","PXRMGECV",95,0)
 ...E  S ^TMP("PXRMGEC",$J,"REF",DATE,DFN)=1
"RTN","PXRMGECV",96,0)
 ...;TO HERE BY REFERRAL
"RTN","PXRMGECV",97,0)
 ...S DA="" F  S DA=$O(^AUPNVHF("AED",DATE,DFN,GEC,DA)) Q:DA=""  D
"RTN","PXRMGECV",98,0)
 ....;TO HERE BY HEALTH FACTOR
"RTN","PXRMGECV",99,0)
 ....D VDOC(DA)
"RTN","PXRMGECV",100,0)
 ....D ARAYS
"RTN","PXRMGECV",101,0)
 D PATIENT^PXRMGECW
"RTN","PXRMGECV",102,0)
 I ARY="CTD" D DATECNT^PXRMGECW
"RTN","PXRMGECV",103,0)
 I ARY="CTP" D PATIENT^PXRMGECW
"RTN","PXRMGECV",104,0)
 I ARY="CTDR" D DOCCNT^PXRMGECW
"RTN","PXRMGECV",105,0)
 I ARY="CTL" D LOCCNT^PXRMGECW
"RTN","PXRMGECV",106,0)
 I ARY="LOC" D LOCCNT^PXRMGECW
"RTN","PXRMGECV",107,0)
 I ARY="DFN" D DOCCNT^PXRMGECW
"RTN","PXRMGECV",108,0)
 Q
"RTN","PXRMGECV",109,0)
KILL ;Kill out unwanted Arrays
"RTN","PXRMGECV",110,0)
 K ^TMP("PXRMGEC",$J,"REF"),^TMP("PXRMGEC",$J,"REFDFN")
"RTN","PXRMGECV",111,0)
 Q
"RTN","PXRMGECV",112,0)
VDOC(DA) ;Get Dr's and locationS
"RTN","PXRMGECV",113,0)
 Q:ARY="CTD"
"RTN","PXRMGECV",114,0)
 Q:ARY="CTP"
"RTN","PXRMGECV",115,0)
 ;
"RTN","PXRMGECV",116,0)
 Q:DA=""
"RTN","PXRMGECV",117,0)
 Q:'$D(^AUPNVHF(DA))
"RTN","PXRMGECV",118,0)
 S DOCT=+$P($P($G(^AUPNVHF(DA,801)),"^",2)," ",2)
"RTN","PXRMGECV",119,0)
 S DOCTN=$$GET1^DIQ(200,DOCT,.01)
"RTN","PXRMGECV",120,0)
 Q:DOCTN=""
"RTN","PXRMGECV",121,0)
 S ^TMP("PXRMGEC",$J,"REFDOC",DOCTN,VDT,DOCT)=""
"RTN","PXRMGECV",122,0)
 ;DBIA #10040 However the ability for the Visit to store a pointer
"RTN","PXRMGECV",123,0)
 ;to the location file might be removed in the future.
"RTN","PXRMGECV",124,0)
 S VST=$P($G(^AUPNVHF(DA,0)),"^",3)
"RTN","PXRMGECV",125,0)
 Q:'$D(^AUPNVSIT(VST))
"RTN","PXRMGECV",126,0)
 S LOC=$P($G(^AUPNVSIT(VST,0)),"^",22)
"RTN","PXRMGECV",127,0)
 S LOCN=$P($G(^SC(LOC,0)),"^",1)
"RTN","PXRMGECV",128,0)
 S ^TMP("PXRMGEC",$J,"REFLOC",LOCN,VDT)=""
"RTN","PXRMGECV",129,0)
 I ARY="DFN" D
"RTN","PXRMGECV",130,0)
 .N DSRC,IDENT,DIADA,DIANAME,DATEDA,DATEV
"RTN","PXRMGECV",131,0)
 .S DSRC=$P($G(^AUPNVHF(DA,812)),"^",3) ;Pointer to data source file
"RTN","PXRMGECV",132,0)
 .S IDENT=$P($G(^PX(839.7,DSRC,0)),"^",1) ;IDENTIFY Name (GEC1)
"RTN","PXRMGECV",133,0)
 .Q:'$D(DOCT)
"RTN","PXRMGECV",134,0)
 .S DIADA=$O(^PXRMD(801.41,"AC",IDENT,0)) ;Dialog ien
"RTN","PXRMGECV",135,0)
 .S ^TMP("PXRMGEC",$J,"DFN",DOCT,DFN,VDT,DIADA)=""
"RTN","PXRMGECV",136,0)
 .S ^TMP("PXRMGEC",$J,"DFNCNT",DOCT,DFN,VDT)=""
"RTN","PXRMGECV",137,0)
 I ARY="LOC" D
"RTN","PXRMGECV",138,0)
 .;#5 Location Report
"RTN","PXRMGECV",139,0)
 .S ^TMP("PXRMGEC",$J,"TMPLOC",LOCN,DFNXX,VDT)=""
"RTN","PXRMGECV",140,0)
 .S ^TMP("PXRMGEC",$J,"LOCB",LOCN,VDT)=""
"RTN","PXRMGECV",141,0)
 ;
"RTN","PXRMGECV",142,0)
 Q
"RTN","PXRMGECV",143,0)
ARAYS ;Set the Arrays for different reports
"RTN","PXRMGECV",144,0)
 ;===============================================================
"RTN","PXRMGECV",145,0)
 ;CHeck for new Referral
"RTN","PXRMGECV",146,0)
 I DATE1'=DATE!(DFN1'=DFN) S CNTREF=CNTREF+1,DATE1=DATE,DFN1=DFN
"RTN","PXRMGECV",147,0)
 ;===============================================================
"RTN","PXRMGECV",148,0)
 I ARY="HS" D
"RTN","PXRMGECV",149,0)
 .;CNTREF=Count or numbered Referral
"RTN","PXRMGECV",150,0)
 .;DFN   =Patient IEN
"RTN","PXRMGECV",151,0)
 .;DATE  =Starting Date of Referral
"RTN","PXRMGECV",152,0)
 .;VDT   =Finished Date of Referral-Visit of GECF
"RTN","PXRMGECV",153,0)
 .;CAT   =Health Factor Category
"RTN","PXRMGECV",154,0)
 .;DATEV =Date that each Dialog was done
"RTN","PXRMGECV",155,0)
 .;DA    =Ien of each Health Factor
"RTN","PXRMGECV",156,0)
 .;
"RTN","PXRMGECV",157,0)
 .N NAMEDA,NAME,CATDA,CAT,DATEV,DATEDA
"RTN","PXRMGECV",158,0)
 .S NAMEDA=$P($G(^AUPNVHF(DA,0)),"^",1)
"RTN","PXRMGECV",159,0)
 .;GET COMMENTS
"RTN","PXRMGECV",160,0)
 .S NAME=$P($G(^AUTTHF(NAMEDA,0)),"^",1)
"RTN","PXRMGECV",161,0)
 .S DATEDA=$P($G(^AUPNVHF(DA,0)),"^",3)
"RTN","PXRMGECV",162,0)
 .S DATEV=$P($G(^AUPNVSIT(DATEDA,0)),"^",1)
"RTN","PXRMGECV",163,0)
 .Q:DATEV=""
"RTN","PXRMGECV",164,0)
 .S CATDA=$P($G(^AUTTHF(NAMEDA,0)),"^",3)
"RTN","PXRMGECV",165,0)
 .S CAT=$P($G(^AUTTHF(CATDA,0)),"^",1)
"RTN","PXRMGECV",166,0)
 .S ^TMP("PXRMGEC",$J,"HS",CNTREF,DFN,DATE,VDT,CAT,DATEV,DA)=""
"RTN","PXRMGECV",167,0)
 ;===============================================================
"RTN","PXRMGECV",168,0)
 I ARY="HS1" D
"RTN","PXRMGECV",169,0)
 .;CNTREF=Count or numbered Referral
"RTN","PXRMGECV",170,0)
 .;DFN   =Patient IEN
"RTN","PXRMGECV",171,0)
 .;DATE  =Starting Date of Referral
"RTN","PXRMGECV",172,0)
 .;VDT   =Finished Date of Referral-Visit of GECF
"RTN","PXRMGECV",173,0)
 .;CAT   =Health Factor Category
"RTN","PXRMGECV",174,0)
 .;DATEV =Date that each Dialog was done
"RTN","PXRMGECV",175,0)
 .;DA    =Ien of each Health Factor
"RTN","PXRMGECV",176,0)
 .;DFNXX =Patient's Name
"RTN","PXRMGECV",177,0)
 .;
"RTN","PXRMGECV",178,0)
 .N NAMEDA,NAME,CATDA,CAT,DATEV,DATEDA
"RTN","PXRMGECV",179,0)
 .S NAMEDA=$P($G(^AUPNVHF(DA,0)),"^",1)
"RTN","PXRMGECV",180,0)
 .S NAME=$P($G(^AUTTHF(NAMEDA,0)),"^",1)
"RTN","PXRMGECV",181,0)
 .S DATEDA=$P($G(^AUPNVHF(DA,0)),"^",3)
"RTN","PXRMGECV",182,0)
 .S DATEV=$P($G(^AUPNVSIT(DATEDA,0)),"^",1)
"RTN","PXRMGECV",183,0)
 .Q:DATEV=""
"RTN","PXRMGECV",184,0)
 .S CATDA=$P($G(^AUTTHF(NAMEDA,0)),"^",3)
"RTN","PXRMGECV",185,0)
 .S CAT=$P($G(^AUTTHF(CATDA,0)),"^",1)
"RTN","PXRMGECV",186,0)
 .S ^TMP("PXRMGEC",$J,"HS1",DFNXX,CNTREF,DATE,VDT,CAT,DATEV,DA)=""
"RTN","PXRMGECV",187,0)
 .;=============================================================
"RTN","PXRMGECV",188,0)
 I ARY="HFCD" D
"RTN","PXRMGECV",189,0)
 .S NAMEDA=$P($G(^AUPNVHF(DA,0)),"^",1)
"RTN","PXRMGECV",190,0)
 .;GET COMMENTS
"RTN","PXRMGECV",191,0)
 .S NAME=$P($G(^AUTTHF(NAMEDA,0)),"^",1)
"RTN","PXRMGECV",192,0)
 .S DATEDA=$P($G(^AUPNVHF(DA,0)),"^",3)
"RTN","PXRMGECV",193,0)
 .S DATEV=$P($G(^AUPNVSIT(DATEDA,0)),"^",1)
"RTN","PXRMGECV",194,0)
 .Q:DATEV=""
"RTN","PXRMGECV",195,0)
 .S CATDA=$P($G(^AUTTHF(NAMEDA,0)),"^",3)
"RTN","PXRMGECV",196,0)
 .Q:'$D(CATIEN(CATDA))
"RTN","PXRMGECV",197,0)
 .S CAT=$P($G(^AUTTHF(CATDA,0)),"^",1)
"RTN","PXRMGECV",198,0)
 .S ^TMP("PXRMGEC",$J,"HFCD",CAT,DFN,NAME,DATEV,DA)=""
"RTN","PXRMGECV",199,0)
 Q
"RTN","PXRMGECZ")
0^75^B46355261
"RTN","PXRMGECZ",1,0)
PXRMGECZ ;SLC/JVS - GEC Debug Utilities#3 ;7/14/05  10:46
"RTN","PXRMGECZ",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMGECZ",3,0)
 ;
"RTN","PXRMGECZ",4,0)
 Q
"RTN","PXRMGECZ",5,0)
PAGE ;On printed reports, form feed and add page numbers
"RTN","PXRMGECZ",6,0)
 I $Y=(IOSL-2)!($Y>IOSL) W @IOF D
"RTN","PXRMGECZ",7,0)
 .S PAGE=PAGE+1
"RTN","PXRMGECZ",8,0)
 .W !,?(IOM-10),"Page "_PAGE,!
"RTN","PXRMGECZ",9,0)
 Q
"RTN","PXRMGECZ",10,0)
 ;
"RTN","PXRMGECZ",11,0)
MATCHB ;Build tmp global with origingal health factor names from PXRMGECY
"RTN","PXRMGECZ",12,0)
 ;
"RTN","PXRMGECZ",13,0)
 N GECNA,I,GECDA
"RTN","PXRMGECZ",14,0)
 S CNT=0
"RTN","PXRMGECZ",15,0)
 S GECNA=""
"RTN","PXRMGECZ",16,0)
 F I=1:1:301 S GECNA=$P($T(MATCH+I),";",4) S CNT=CNT+1 Q:GECNA=""  D
"RTN","PXRMGECZ",17,0)
 .S GECDA=$P($T(MATCH+I),";",3)
"RTN","PXRMGECZ",18,0)
 .S ^TMP("PXRMGEC",$J,"MATCH",GECNA,$S(GECDA="":0,1:$P($T(MATCH+I),";",3)))=""
"RTN","PXRMGECZ",19,0)
 ;
"RTN","PXRMGECZ",20,0)
 Q
"RTN","PXRMGECZ",21,0)
 ;
"RTN","PXRMGECZ",22,0)
MATCH ;MATCH AGINST
"RTN","PXRMGECZ",23,0)
 ;;100;GEC ALL INCLUSIVE CARE/PACE PROGRAM
"RTN","PXRMGECZ",24,0)
 ;;117;GEC ASSISTED LIVING (REFERRING TO)
"RTN","PXRMGECZ",25,0)
 ;;147;GEC CHORE SERVICES IN HOME
"RTN","PXRMGECZ",26,0)
 ;;185;GEC DOMICILIARY CARE
"RTN","PXRMGECZ",27,0)
 ;;218;GEC RESPITE CARE OUTPATIENT
"RTN","PXRMGECZ",28,0)
 ;;226;GEC HOME BASED PR. CARE (REFERRING TO)
"RTN","PXRMGECZ",29,0)
 ;;263;GEC LONG TERM NURSING HOME CARE
"RTN","PXRMGECZ",30,0)
 ;;300;GEC OTHER REFERRAL PROGRAM(REFERRING TO)
"RTN","PXRMGECZ",31,0)
 ;;313;GEC INPATIENT PALLIATIVE/HOSPICE (NHCU)
"RTN","PXRMGECZ",32,0)
 ;;367;GEC RESIDENTIAL CARE (SUPERVISED LIVING)
"RTN","PXRMGECZ",33,0)
 ;;370;GEC RESPITE CARE INPATIENT
"RTN","PXRMGECZ",34,0)
 ;;374;GEC SHORT TERM NURSING HOME CARE
"RTN","PXRMGECZ",35,0)
 ;;375;GEC SKILLED CARE IN HOME
"RTN","PXRMGECZ",36,0)
 ;;384;GEC SPECIALIZED DEMENTIA/GEROPSYCH CARE
"RTN","PXRMGECZ",37,0)
 ;;340;GEC REFERRAL DOMICILIARY
"RTN","PXRMGECZ",38,0)
 ;;186;GEC DOMICILIARY FUNDING-MEDICAID
"RTN","PXRMGECZ",39,0)
 ;;187;GEC DOMICILIARY FUNDING-MEDICARE
"RTN","PXRMGECZ",40,0)
 ;;188;GEC DOMICILIARY FUNDING-OTHER
"RTN","PXRMGECZ",41,0)
 ;;189;GEC DOMICILIARY FUNDING-OTHER INSURANCE
"RTN","PXRMGECZ",42,0)
 ;;190;GEC DOMICILIARY FUNDING-PRIVATE PAY
"RTN","PXRMGECZ",43,0)
 ;;191;GEC DOMICILIARY FUNDING-VA
"RTN","PXRMGECZ",44,0)
 ;;387;GEC STATE HOME DOMICILIARY
"RTN","PXRMGECZ",45,0)
 ;;417;GEC VA DOMICILIARY (REFERRED TO)
"RTN","PXRMGECZ",46,0)
 ;;343;GEC REFERRAL GERIATRIC SERVICES
"RTN","PXRMGECZ",47,0)
 ;;210;GEC GERI SERVICES FUNDING-MEDICAID
"RTN","PXRMGECZ",48,0)
 ;;211;GEC GERI SERVICES FUNDING-MEDICARE
"RTN","PXRMGECZ",49,0)
 ;;212;GEC GERI SERVICES FUNDING-OTHER
"RTN","PXRMGECZ",50,0)
 ;;213;GEC GERI SERVICES FUNDING-OTHER INSURER
"RTN","PXRMGECZ",51,0)
 ;;214;GEC GERI SERVICES FUNDING-PRIVATE PAY
"RTN","PXRMGECZ",52,0)
 ;;215;GEC GERI SERVICES FUNDING-VA
"RTN","PXRMGECZ",53,0)
 ;;216;GEC GERIATRIC EVAL/MGMT CLINIC
"RTN","PXRMGECZ",54,0)
 ;;217;GEC GERIATRIC EVAL/MGMT INPT UNIT
"RTN","PXRMGECZ",55,0)
 ;;219;GEC GERIATRIC PRIMARY CARE
"RTN","PXRMGECZ",56,0)
 ;;345;GEC REFERRAL HOME CARE
"RTN","PXRMGECZ",57,0)
 ;;95;GEC ADULT DAY HEALTH CARE (REFERRED TO)
"RTN","PXRMGECZ",58,0)
 ;;153;GEC COMMUNITY SKILLED HOME HEALTH CARE
"RTN","PXRMGECZ",59,0)
 ;;225;GEC HOME BASED PR. CARE (REFERRED TO)
"RTN","PXRMGECZ",60,0)
 ;;231;GEC HOMECARE FUNDING-MEDICAID
"RTN","PXRMGECZ",61,0)
 ;;232;GEC HOMECARE FUNDING-MEDICARE
"RTN","PXRMGECZ",62,0)
 ;;233;GEC HOMECARE FUNDING-OTHER
"RTN","PXRMGECZ",63,0)
 ;;234;GEC HOMECARE FUNDING-OTHER INSURANCE
"RTN","PXRMGECZ",64,0)
 ;;235;GEC HOMECARE FUNDING-PRIVATE PAY
"RTN","PXRMGECZ",65,0)
 ;;236;GEC HOMECARE FUNDING-VA
"RTN","PXRMGECZ",66,0)
 ;;239;GEC HOMEMAKER/HOME HEALTH AIDE
"RTN","PXRMGECZ",67,0)
 ;;415;GEC VA BOWEL AND BLADDER
"RTN","PXRMGECZ",68,0)
 ;;418;GEC VA IN-HOME RESPITE
"RTN","PXRMGECZ",69,0)
 ;;347;GEC REFERRAL HOSPICE CARE
"RTN","PXRMGECZ",70,0)
 ;;149;GEC COMMUNITY HOSPICE
"RTN","PXRMGECZ",71,0)
 ;;240;GEC HOSPICE FUNDING-MEDICAID
"RTN","PXRMGECZ",72,0)
 ;;241;GEC HOSPICE FUNDING-MEDICARE
"RTN","PXRMGECZ",73,0)
 ;;242;GEC HOSPICE FUNDING-OTHER
"RTN","PXRMGECZ",74,0)
 ;;243;GEC HOSPICE FUNDING-OTHER INSURANCE
"RTN","PXRMGECZ",75,0)
 ;;244;GEC HOSPICE FUNDING-PRIVATE PAY
"RTN","PXRMGECZ",76,0)
 ;;245;GEC HOSPICE FUNDING-VA
"RTN","PXRMGECZ",77,0)
 ;;421;GEC VA NHCU (RESPITE HOSPICE)
"RTN","PXRMGECZ",78,0)
 ;;425;GEC VA OUTPATIENT HOSPICE
"RTN","PXRMGECZ",79,0)
 ;;276;GEC REFERRAL NOT REFERRED TO CARE
"RTN","PXRMGECZ",80,0)
 ;;183;GEC DOES NOT MEET CRITERIA
"RTN","PXRMGECZ",81,0)
 ;;254;GEC INSUFFICIENT FINANCIAL RESOURCES
"RTN","PXRMGECZ",82,0)
 ;;317;GEC PATIENT BECAME TOO ILL
"RTN","PXRMGECZ",83,0)
 ;;318;GEC PATIENT EXPIRED
"RTN","PXRMGECZ",84,0)
 ;;326;GEC PROGRAM UNABLE TO ACCOMMODATE
"RTN","PXRMGECZ",85,0)
 ;;352;GEC REFERRAL NURSING HOME CARE
"RTN","PXRMGECZ",86,0)
 ;;151;GEC COMMUNITY NURSING HOME
"RTN","PXRMGECZ",87,0)
 ;;279;GEC NURSING HOME FUNDING-MEDICAID
"RTN","PXRMGECZ",88,0)
 ;;280;GEC NURSING HOME FUNDING-MEDICARE
"RTN","PXRMGECZ",89,0)
 ;;281;GEC NURSING HOME FUNDING-OTHER
"RTN","PXRMGECZ",90,0)
 ;;282;GEC NURSING HOME FUNDING-OTHER INSURANCE
"RTN","PXRMGECZ",91,0)
 ;;283;GEC NURSING HOME FUNDING-PRIVATE PAY
"RTN","PXRMGECZ",92,0)
 ;;284;GEC NURSING HOME FUNDING-VA
"RTN","PXRMGECZ",93,0)
 ;;388;GEC STATE VETERANS NURSING HOME
"RTN","PXRMGECZ",94,0)
 ;;419;GEC VA NHCU (LONG-TERM CARE)
"RTN","PXRMGECZ",95,0)
 ;;420;GEC VA NHCU (REHAB)
"RTN","PXRMGECZ",96,0)
 ;;422;GEC VA NHCU (RESPITE)
"RTN","PXRMGECZ",97,0)
 ;;423;GEC VA NHCU (SUBACUTE CARE)
"RTN","PXRMGECZ",98,0)
 ;;353;GEC REFERRAL OTHER REFERRAL PROGRAM
"RTN","PXRMGECZ",99,0)
 ;;293;GEC OTHER REF PROGRAM FUNDING-MEDICAID
"RTN","PXRMGECZ",100,0)
 ;;294;GEC OTHER REF PROGRAM FUNDING-MEDICARE
"RTN","PXRMGECZ",101,0)
 ;;295;GEC OTHER REF PROGRAM FUNDING-OTHER
"RTN","PXRMGECZ",102,0)
 ;;296;GEC OTHER REF PROGRAM FUNDING-OTHER INS.
"RTN","PXRMGECZ",103,0)
 ;;297;GEC OTHER REF PROGRAM FUNDING-PRIV PAY
"RTN","PXRMGECZ",104,0)
 ;;298;GEC OTHER REF PROGRAM FUNDING-VA
"RTN","PXRMGECZ",105,0)
 ;;299;GEC OTHER REFERRAL PROGRAM (REFERRED TO)
"RTN","PXRMGECZ",106,0)
 ;;363;GEC REFERRAL STRUCTURED LIVING SITUATION
"RTN","PXRMGECZ",107,0)
 ;;116;GEC ASSISTED LIVING (REFERRED TO)
"RTN","PXRMGECZ",108,0)
 ;;152;GEC COMMUNITY RESIDENTIAL CARE PROGRAM
"RTN","PXRMGECZ",109,0)
 ;;320;GEC PERSONAL CARE HOME
"RTN","PXRMGECZ",110,0)
 ;;391;GEC STRUCTURED LIVING FUNDING-MEDICAID
"RTN","PXRMGECZ",111,0)
 ;;392;GEC STRUCTURED LIVING FUNDING-MEDICARE
"RTN","PXRMGECZ",112,0)
 ;;393;GEC STRUCTURED LIVING FUNDING-OTHER
"RTN","PXRMGECZ",113,0)
 ;;394;GEC STRUCTURED LIVING FUNDING-OTHER INS.
"RTN","PXRMGECZ",114,0)
 ;;395;GEC STRUCTURED LIVING FUNDING-PRIV PAY
"RTN","PXRMGECZ",115,0)
 ;;396;GEC STRUCTURED LIVING FUNDING-VA
"RTN","PXRMGECZ",116,0)
 ;;134;GEC CARE COORDINATION COMMENTS
"RTN","PXRMGECZ",117,0)
 ;;135;GEC CARE RECOMMENDATIONS COMMENTS
"RTN","PXRMGECZ",118,0)
 ;;277;GEC NURSING ASSESSMENT COMMENTS
"RTN","PXRMGECZ",119,0)
 ;;379;GEC SOCIAL SERVICES COMMENTS
"RTN","PXRMGECZ",120,0)
 ;;337;GEC REFERRAL COMMENTS
"RTN","PXRMGECZ",121,0)
 ;;660149;GEC OUTPATIENT PALLIATIVE/HOSPICE (HOME)
"RTN","PXRMGECZ",122,0)
 ;;660148;GEC VA NHCU (HOSPICE)
"RTN","PXRMGECZ",123,0)
 ;;660158;GEC HOME TELEHEALTH (REFERRING TO)
"RTN","PXRMGECZ",124,0)
 ;;660157;GEC HOME TELEHEALTH (REFERRED TO)
"RTN","PXRMGECZ",125,0)
 ;;660151;GEC TELEHEALTH FUNDING-VA
"RTN","PXRMGECZ",126,0)
 ;
"RTN","PXRMGECZ",127,0)
COM ;FORMAT COMMENT
"RTN","PXRMGECZ",128,0)
 Q:'$D(COMMENT)
"RTN","PXRMGECZ",129,0)
 N WORD,SENT,I
"RTN","PXRMGECZ",130,0)
 S SENT=""
"RTN","PXRMGECZ",131,0)
 I $L(COMMENT)<52 W !,?6,"Comment: ",COMMENT D PB^PXRMGECR Q:Y=0  Q
"RTN","PXRMGECZ",132,0)
 I $L(COMMENT)>51 D
"RTN","PXRMGECZ",133,0)
 .W !,?6,"Comment:"
"RTN","PXRMGECZ",134,0)
 .S WORD="" F I=1:1:$L(COMMENT," ") S WORD=$P(COMMENT," ",I) D
"RTN","PXRMGECZ",135,0)
 ..S SENT=SENT_" "_WORD
"RTN","PXRMGECZ",136,0)
 ..I $L(SENT)>51 W !,?6,SENT D PB^PXRMGECR Q:Y=0  S SENT=""
"RTN","PXRMGECZ",137,0)
 I SENT'="" W !,?6,SENT D PB^PXRMGECR Q:Y=0
"RTN","PXRMGECZ",138,0)
 Q
"RTN","PXRMGECZ",139,0)
 ;
"RTN","PXRMGECZ",140,0)
COMQ ;FORMAT PRINTED COMMENT
"RTN","PXRMGECZ",141,0)
 Q:'$D(COMMENT)
"RTN","PXRMGECZ",142,0)
 N WORD,SENT,I
"RTN","PXRMGECZ",143,0)
 S SENT=""
"RTN","PXRMGECZ",144,0)
 I $L(COMMENT)<52 W !,?6,"Comment: ",COMMENT Q
"RTN","PXRMGECZ",145,0)
 I $L(COMMENT)>51 D
"RTN","PXRMGECZ",146,0)
 .W !,?6,"Comment:"
"RTN","PXRMGECZ",147,0)
 .S WORD="" F I=1:1:$L(COMMENT," ") S WORD=$P(COMMENT," ",I) D
"RTN","PXRMGECZ",148,0)
 ..S SENT=SENT_" "_WORD
"RTN","PXRMGECZ",149,0)
 ..I $L(SENT)>51 W !,?6,SENT S SENT="" D PAGE
"RTN","PXRMGECZ",150,0)
 I SENT'="" W !,?6,SENT D PAGE
"RTN","PXRMGECZ",151,0)
 Q
"RTN","PXRMGECZ",152,0)
 ;
"RTN","PXRMGECZ",153,0)
OBJECT(DFN) ;
"RTN","PXRMGECZ",154,0)
 N CNT,CNT1,RESULT,STR,STR1,X
"RTN","PXRMGECZ",155,0)
 S CNT=0
"RTN","PXRMGECZ",156,0)
 K ^TMP("PXRMGECZ",$J,"REFERRAL")
"RTN","PXRMGECZ",157,0)
 S STR=$NA(^TMP("PXRMGECZ",$J,"REFERRAL"))
"RTN","PXRMGECZ",158,0)
 S RESULT=$P($$STATUS^PXRMGECU(DFN),U)
"RTN","PXRMGECZ",159,0)
 I $G(RESULT)["No GEC Referral on record." D NONE Q "~@"_$NA(@STR)
"RTN","PXRMGECZ",160,0)
 F X=1:1:$L(RESULT) I $E(RESULT,X,X+2)="~ ~" S CNT=CNT+1
"RTN","PXRMGECZ",161,0)
 S STR1=$P(RESULT,"~ ~",CNT+1),CNT1=0
"RTN","PXRMGECZ",162,0)
 S @STR@(CNT1+1,0)="=================================================="
"RTN","PXRMGECZ",163,0)
 S @STR@(CNT1+1,0)="REFERRAL STATUS:"
"RTN","PXRMGECZ",164,0)
 F X=1:1:CNT  D
"RTN","PXRMGECZ",165,0)
 .S CNT1=CNT1+1
"RTN","PXRMGECZ",166,0)
 .I $L($P(RESULT,"~ ~",X))'>0 Q
"RTN","PXRMGECZ",167,0)
 .S @STR@(CNT1,0)=$P(RESULT,"~ ~",X)
"RTN","PXRMGECZ",168,0)
 .S:@STR@(CNT1,0)["~" @STR@(CNT1,0)=$TR(@STR@(CNT1,0),"~","")
"RTN","PXRMGECZ",169,0)
 S CNT=0 F X=1:1:$L(STR1) I $E(STR1,X,X+1)="~ "!($E(STR1,X,X+1)="~~") S CNT=CNT+1
"RTN","PXRMGECZ",170,0)
 F X=1:1:CNT  D
"RTN","PXRMGECZ",171,0)
 .S CNT1=CNT1+1
"RTN","PXRMGECZ",172,0)
 .I $L($P(STR1,"~",X))'>0 Q
"RTN","PXRMGECZ",173,0)
 .I $P(STR1,"~",X)["Care Coo" Q
"RTN","PXRMGECZ",174,0)
 .S @STR@(CNT1,0)=$P(STR1,"~",X)
"RTN","PXRMGECZ",175,0)
 .S:@STR@(CNT1,0)["~" @STR@(CNT1,0)=$TR(@STR@(CNT1,0),"~","")
"RTN","PXRMGECZ",176,0)
 G EXIT
"RTN","PXRMGECZ",177,0)
NONE ;If no activity happening
"RTN","PXRMGECZ",178,0)
 S @STR@(1,0)="=================================================="
"RTN","PXRMGECZ",179,0)
 S @STR@(2,0)="REFERRAL STATUS:"
"RTN","PXRMGECZ",180,0)
 S @STR@(3,0)="This is the first dialog activity on this Referral."
"RTN","PXRMGECZ",181,0)
 S @STR@(4,0)="=================================================="
"RTN","PXRMGECZ",182,0)
 Q
"RTN","PXRMGECZ",183,0)
EXIT ;Exit
"RTN","PXRMGECZ",184,0)
 S @STR@(CNT1+1,0)="=================================================="
"RTN","PXRMGECZ",185,0)
 Q "~@"_$NA(@STR)
"RTN","PXRMINDC")
0^148^B63259177
"RTN","PXRMINDC",1,0)
PXRMINDC ; SLC/PKR - Index counting routines. ;04/20/2006
"RTN","PXRMINDC",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMINDC",3,0)
 ;
"RTN","PXRMINDC",4,0)
 ;========================================================
"RTN","PXRMINDC",5,0)
CNT5(FILENUM,COUNT) ;Get date counts for indexes where the date
"RTN","PXRMINDC",6,0)
 ;is at subscript 5. Works for file numbers:
"RTN","PXRMINDC",7,0)
 ;63, 70, 120.5, 601.2,
"RTN","PXRMINDC",8,0)
 ;9000010.11, 9000010.12, 9000010.13, 9000010.16, 9000010.23
"RTN","PXRMINDC",9,0)
 N DAS,DATE,DFN,IND,ITEM,YEAR
"RTN","PXRMINDC",10,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",11,0)
 S IND=0
"RTN","PXRMINDC",12,0)
 S DFN=""
"RTN","PXRMINDC",13,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",14,0)
 . S IND=IND+1
"RTN","PXRMINDC",15,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",16,0)
 . S ITEM=""
"RTN","PXRMINDC",17,0)
 . F  S ITEM=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",18,0)
 .. S DATE=""
"RTN","PXRMINDC",19,0)
 .. F  S DATE=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",20,0)
 ... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",21,0)
 ... S DAS=""
"RTN","PXRMINDC",22,0)
 ... F  S DAS=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",23,0)
 .... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",24,0)
 Q
"RTN","PXRMINDC",25,0)
 ;
"RTN","PXRMINDC",26,0)
 ;========================================================
"RTN","PXRMINDC",27,0)
CNT6(FILENUM,COUNT) ;Get date counts for indexes where the date
"RTN","PXRMINDC",28,0)
 ;is at subscript 6. Works for file numbers:
"RTN","PXRMINDC",29,0)
 ;9000010.07, 9000010.18
"RTN","PXRMINDC",30,0)
 N DAS,DATE,DFN,IND,ITEM,TYPE,YEAR
"RTN","PXRMINDC",31,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",32,0)
 S IND=0
"RTN","PXRMINDC",33,0)
 S DFN=""
"RTN","PXRMINDC",34,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",35,0)
 . S IND=IND+1
"RTN","PXRMINDC",36,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",37,0)
 . S TYPE=""
"RTN","PXRMINDC",38,0)
 . F  S TYPE=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE)) Q:TYPE=""  D
"RTN","PXRMINDC",39,0)
 .. S ITEM=""
"RTN","PXRMINDC",40,0)
 .. F  S ITEM=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",41,0)
 ... S DATE=""
"RTN","PXRMINDC",42,0)
 ... F  S DATE=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",43,0)
 .... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",44,0)
 .... S DAS=""
"RTN","PXRMINDC",45,0)
 .... F  S DAS=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",46,0)
 ..... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",47,0)
 Q
"RTN","PXRMINDC",48,0)
 ;
"RTN","PXRMINDC",49,0)
 ;========================================================
"RTN","PXRMINDC",50,0)
CNTPL(FILENUM,COUNT) ;Get date counts for Problem List indexes where the
"RTN","PXRMINDC",51,0)
 ;date is at subscript 7. Works for file numbers:
"RTN","PXRMINDC",52,0)
 ;9000011
"RTN","PXRMINDC",53,0)
 N DAS,DATE,DFN,IND,ITEM,PRIORITY,STATUS,TYPE,YEAR
"RTN","PXRMINDC",54,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",55,0)
 S IND=0
"RTN","PXRMINDC",56,0)
 S DFN=""
"RTN","PXRMINDC",57,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PSPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",58,0)
 . S IND=IND+1
"RTN","PXRMINDC",59,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",60,0)
 . S STATUS=""
"RTN","PXRMINDC",61,0)
 . F  S STATUS=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS)) Q:STATUS=""  D
"RTN","PXRMINDC",62,0)
 .. S PRIORITY=""
"RTN","PXRMINDC",63,0)
 .. F  S PRIORITY=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY)) Q:PRIORITY=""  D
"RTN","PXRMINDC",64,0)
 ... S ITEM=""
"RTN","PXRMINDC",65,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",66,0)
 .... S DATE=""
"RTN","PXRMINDC",67,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",68,0)
 ..... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",69,0)
 ..... S DAS=""
"RTN","PXRMINDC",70,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",71,0)
 ...... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",72,0)
 Q
"RTN","PXRMINDC",73,0)
 ;
"RTN","PXRMINDC",74,0)
 ;========================================================
"RTN","PXRMINDC",75,0)
CNTPTF(FILENUM,COUNT) ;Get date counts for PTF indexes where the
"RTN","PXRMINDC",76,0)
 ;date is at subscript 7. Works for file numbers:
"RTN","PXRMINDC",77,0)
 ;45
"RTN","PXRMINDC",78,0)
 N DAS,DATE,DFN,IND,ITEM,NODE,TYPE,YEAR
"RTN","PXRMINDC",79,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",80,0)
 S IND=0
"RTN","PXRMINDC",81,0)
 F TYPE="ICD0","ICD9" D
"RTN","PXRMINDC",82,0)
 . S DFN=""
"RTN","PXRMINDC",83,0)
 . F  S DFN=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",84,0)
 .. S IND=IND+1
"RTN","PXRMINDC",85,0)
 .. I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",86,0)
 .. S NODE=""
"RTN","PXRMINDC",87,0)
 .. F  S NODE=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE)) Q:NODE=""  D
"RTN","PXRMINDC",88,0)
 ... S ITEM=""
"RTN","PXRMINDC",89,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",90,0)
 .... S DATE=""
"RTN","PXRMINDC",91,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",92,0)
 ..... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",93,0)
 ..... S DAS=""
"RTN","PXRMINDC",94,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",95,0)
 ...... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",96,0)
 Q
"RTN","PXRMINDC",97,0)
 ;
"RTN","PXRMINDC",98,0)
 ;========================================================
"RTN","PXRMINDC",99,0)
CNTSS(FILENUM,COUNT) ;Get date counts for indexes where the start date
"RTN","PXRMINDC",100,0)
 ;is at subscript 5 and the stop date is at subscript 6.
"RTN","PXRMINDC",101,0)
 ;Works for file numbers: 52, 55, 100
"RTN","PXRMINDC",102,0)
 N DAS,DFN,IND,ITEM,START,STOP,YEAR
"RTN","PXRMINDC",103,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",104,0)
 S IND=0
"RTN","PXRMINDC",105,0)
 S DFN=""
"RTN","PXRMINDC",106,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",107,0)
 . S IND=IND+1
"RTN","PXRMINDC",108,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",109,0)
 . S ITEM=""
"RTN","PXRMINDC",110,0)
 . F  S ITEM=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",111,0)
 .. S START=""
"RTN","PXRMINDC",112,0)
 .. F  S START=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START)) Q:START=""  D
"RTN","PXRMINDC",113,0)
 ... S YEAR=$E(START,1,3)
"RTN","PXRMINDC",114,0)
 ... S STOP=""
"RTN","PXRMINDC",115,0)
 ... F  S STOP=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START,STOP)) Q:STOP=""  D
"RTN","PXRMINDC",116,0)
 .... S DAS=""
"RTN","PXRMINDC",117,0)
 .... F  S DAS=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START,STOP,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",118,0)
 ..... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",119,0)
 Q
"RTN","PXRMINDC",120,0)
 ;
"RTN","PXRMINDC",121,0)
 ;========================================================
"RTN","PXRMINDC",122,0)
COUNT ;Driver for making index counts.
"RTN","PXRMINDC",123,0)
 N GBL,LIST,TASKIT
"RTN","PXRMINDC",124,0)
 W !,"Which indexes do you want to count?"
"RTN","PXRMINDC",125,0)
 D SEL^PXRMSXRM(.LIST,.GBL)
"RTN","PXRMINDC",126,0)
 I LIST="" Q
"RTN","PXRMINDC",127,0)
 ;See if this should be tasked.
"RTN","PXRMINDC",128,0)
 S TASKIT=$$ASKTASK^PXRMSXRM
"RTN","PXRMINDC",129,0)
 I TASKIT D
"RTN","PXRMINDC",130,0)
 . W !,"Queue the Clinical Reminders Index count."
"RTN","PXRMINDC",131,0)
 . D TASKIT(LIST,.GBL,.ROUTINE)
"RTN","PXRMINDC",132,0)
 E  D RUNNOW(LIST,.GBL)
"RTN","PXRMINDC",133,0)
 Q
"RTN","PXRMINDC",134,0)
 ;
"RTN","PXRMINDC",135,0)
 ;========================================================
"RTN","PXRMINDC",136,0)
MESSAGE(FILENUM,COUNT,TOTAL,START,END) ;Build the MailMan message giving the
"RTN","PXRMINDC",137,0)
 ;count breakdown.
"RTN","PXRMINDC",138,0)
 N COFF,ML,NAME,NL,PERC,TEXT,YEAR,XMSUB
"RTN","PXRMINDC",139,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMINDC",140,0)
 S ML=$$MAX^XLFMTH($L(TOTAL)+2,8)
"RTN","PXRMINDC",141,0)
 S COFF=ML-5
"RTN","PXRMINDC",142,0)
 S NAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMINDC",143,0)
 S XMSUB="Yearly data distribution for global "_NAME
"RTN","PXRMINDC",144,0)
 S ^TMP("PXRMXMZ",$J,1,0)="File name: "_NAME
"RTN","PXRMINDC",145,0)
 S ^TMP("PXRMXMZ",$J,2,0)="Count finished at "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMINDC",146,0)
 S ^TMP("PXRMXMZ",$J,3,0)=$$ETIME^PXRMSXRM(START,END)
"RTN","PXRMINDC",147,0)
 S ^TMP("PXRMXMZ",$J,4,0)=" "
"RTN","PXRMINDC",148,0)
 S ^TMP("PXRMXMZ",$J,5,0)="Year"_$$INSCHR^PXRMEXLC(COFF," ")_"Count"_$J("%",8)
"RTN","PXRMINDC",149,0)
 S ^TMP("PXRMXMZ",$J,6,0)="----"_$$INSCHR^PXRMEXLC(COFF," ")_"-----"_$J("-----",10)
"RTN","PXRMINDC",150,0)
 S NL=6,YEAR=0
"RTN","PXRMINDC",151,0)
 F  S YEAR=$O(COUNT(YEAR)) Q:YEAR=""  D
"RTN","PXRMINDC",152,0)
 . S PERC=100*COUNT(YEAR)/TOTAL
"RTN","PXRMINDC",153,0)
 . S TEXT=YEAR_$J(COUNT(YEAR),ML,0)_$J(PERC,10,2)
"RTN","PXRMINDC",154,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMINDC",155,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "
"RTN","PXRMINDC",156,0)
 S TEXT="Total entries: "_TOTAL
"RTN","PXRMINDC",157,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMINDC",158,0)
 I TOTAL=0 D
"RTN","PXRMINDC",159,0)
 . I '$D(^PXRMINDX(FILENUM)) S TEXT="The index for file "_NAME_" does not exist!"
"RTN","PXRMINDC",160,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMINDC",161,0)
 I TOTAL>0,'$D(^PXRMINDX(FILENUM,"DATE BUILT")) D
"RTN","PXRMINDC",162,0)
 . S TEXT="Warning, the index for file "_NAME_" may be incomplete or corrupted!"
"RTN","PXRMINDC",163,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMINDC",164,0)
 D SEND^PXRMMSG(XMSUB)
"RTN","PXRMINDC",165,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMINDC",166,0)
 Q
"RTN","PXRMINDC",167,0)
 ;
"RTN","PXRMINDC",168,0)
 ;===============================================================
"RTN","PXRMINDC",169,0)
RUNNOW(LIST,GBL) ;Run the routines now.
"RTN","PXRMINDC",170,0)
 N COUNT,END,FN,IND,LI,NUM,ROUTINE,RTN,START,TOTAL
"RTN","PXRMINDC",171,0)
 S ROUTINE(45)="CNTPTF^PXRMINDC"
"RTN","PXRMINDC",172,0)
 S ROUTINE(52)="CNTSS^PXRMINDC"
"RTN","PXRMINDC",173,0)
 S ROUTINE(55)="CNTSS^PXRMINDC"
"RTN","PXRMINDC",174,0)
 S ROUTINE(63)="CNT5^PXRMINDC"
"RTN","PXRMINDC",175,0)
 S ROUTINE(70)="CNT5^PXRMINDC"
"RTN","PXRMINDC",176,0)
 S ROUTINE(100)="CNTSS^PXRMINDC"
"RTN","PXRMINDC",177,0)
 S ROUTINE(120.5)="CNT5^PXRMINDC"
"RTN","PXRMINDC",178,0)
 S ROUTINE(601.2)="CNT5^PXRMINDC"
"RTN","PXRMINDC",179,0)
 S ROUTINE(9000011)="CNTPL^PXRMINDC"
"RTN","PXRMINDC",180,0)
 S ROUTINE(9000010.07)="CNT6^PXRMINDC"
"RTN","PXRMINDC",181,0)
 S ROUTINE(9000010.11)="CNT5^PXRMINDC"
"RTN","PXRMINDC",182,0)
 S ROUTINE(9000010.12)="CNT5^PXRMINDC"
"RTN","PXRMINDC",183,0)
 S ROUTINE(9000010.13)="CNT5^PXRMINDC"
"RTN","PXRMINDC",184,0)
 S ROUTINE(9000010.16)="CNT5^PXRMINDC"
"RTN","PXRMINDC",185,0)
 S ROUTINE(9000010.18)="CNT6^PXRMINDC"
"RTN","PXRMINDC",186,0)
 S ROUTINE(9000010.23)="CNT5^PXRMINDC"
"RTN","PXRMINDC",187,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMINDC",188,0)
 F IND=1:1:NUM D
"RTN","PXRMINDC",189,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMINDC",190,0)
 . S FN=GBL(LI)
"RTN","PXRMINDC",191,0)
 . S RTN=ROUTINE(FN)
"RTN","PXRMINDC",192,0)
 . S RTN=RTN_"("_FN_",.COUNT)"
"RTN","PXRMINDC",193,0)
 . S START=$H
"RTN","PXRMINDC",194,0)
 . K COUNT
"RTN","PXRMINDC",195,0)
 . I $D(^PXRMINDX(FN)) D @RTN
"RTN","PXRMINDC",196,0)
 . S END=$H
"RTN","PXRMINDC",197,0)
 . D TOTAL(.COUNT,.TOTAL)
"RTN","PXRMINDC",198,0)
 . D MESSAGE(FN,.COUNT,TOTAL,START,END)
"RTN","PXRMINDC",199,0)
 Q
"RTN","PXRMINDC",200,0)
 ;
"RTN","PXRMINDC",201,0)
 ;===============================================================
"RTN","PXRMINDC",202,0)
TASKIT(LIST,GBL,ROUTINE) ;Count the indexes as a tasked job.
"RTN","PXRMINDC",203,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,MINDT,SDTIME,X,Y
"RTN","PXRMINDC",204,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMINDC",205,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMINDC",206,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMINDC",207,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMINDC",208,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMINDC",209,0)
 D ^DIR
"RTN","PXRMINDC",210,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMINDC",211,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMINDC",212,0)
 S SDTIME=Y
"RTN","PXRMINDC",213,0)
 K DIR
"RTN","PXRMINDC",214,0)
 ;Put the task into the queue.
"RTN","PXRMINDC",215,0)
 K ZTSAVE
"RTN","PXRMINDC",216,0)
 S ZTSAVE("LIST")=""
"RTN","PXRMINDC",217,0)
 S ZTSAVE("GBL(")=""
"RTN","PXRMINDC",218,0)
 S ZTRTN="TASKJOB^PXRMINDC"
"RTN","PXRMINDC",219,0)
 S ZTDESC="Clinical Reminders Index count"
"RTN","PXRMINDC",220,0)
 S ZTDTH=SDTIME
"RTN","PXRMINDC",221,0)
 S ZTIO=""
"RTN","PXRMINDC",222,0)
 D ^%ZTLOAD
"RTN","PXRMINDC",223,0)
 W !,"Task number ",ZTSK," queued."
"RTN","PXRMINDC",224,0)
 Q
"RTN","PXRMINDC",225,0)
 ;
"RTN","PXRMINDC",226,0)
 ;===============================================================
"RTN","PXRMINDC",227,0)
TASKJOB ;Execute as tasked job. LIST and GBL come through ZTSAVE.
"RTN","PXRMINDC",228,0)
 N IND,LI,NUM
"RTN","PXRMINDC",229,0)
 S ZTREQ="@"
"RTN","PXRMINDC",230,0)
 S ZTSTOP=0
"RTN","PXRMINDC",231,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMINDC",232,0)
 F IND=1:1:NUM D
"RTN","PXRMINDC",233,0)
 .;Check to see if the task has had a stop request
"RTN","PXRMINDC",234,0)
 . I $$S^%ZTLOAD S ZTSTOP=1,IND=NUM Q
"RTN","PXRMINDC",235,0)
 . S LI=$P(LIST,",",IND)_","
"RTN","PXRMINDC",236,0)
 . D RUNNOW^PXRMINDC(LI,.GBL)
"RTN","PXRMINDC",237,0)
 Q
"RTN","PXRMINDC",238,0)
 ;
"RTN","PXRMINDC",239,0)
 ;========================================================
"RTN","PXRMINDC",240,0)
TOTAL(COUNT,TOTAL) ;Convert the FileMan years in COUNT to regular
"RTN","PXRMINDC",241,0)
 ;years get the total number of entries in count.
"RTN","PXRMINDC",242,0)
 N TC,YEAR
"RTN","PXRMINDC",243,0)
 S (TOTAL,YEAR)=0
"RTN","PXRMINDC",244,0)
 F  S YEAR=$O(COUNT(YEAR)) Q:YEAR=""  D
"RTN","PXRMINDC",245,0)
 . S TOTAL=TOTAL+COUNT(YEAR)
"RTN","PXRMINDC",246,0)
 . S TC(YEAR+1700)=COUNT(YEAR)
"RTN","PXRMINDC",247,0)
 K COUNT
"RTN","PXRMINDC",248,0)
 M COUNT=TC
"RTN","PXRMINDC",249,0)
 Q
"RTN","PXRMINDC",250,0)
 ;
"RTN","PXRMINDD")
0^149^B61787180
"RTN","PXRMINDD",1,0)
PXRMINDD ; SLC/PKR - Index string date checking routines. ;05/02/2006
"RTN","PXRMINDD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMINDD",3,0)
 ;
"RTN","PXRMINDD",4,0)
 ;========================================================
"RTN","PXRMINDD",5,0)
CNT5(FILENUM,NSD) ;Check for string dates for indexes where the date
"RTN","PXRMINDD",6,0)
 ;is at subscript 5. Works for file numbers:
"RTN","PXRMINDD",7,0)
 ;63, 70, 120.5, 601.2,
"RTN","PXRMINDD",8,0)
 ;9000010.11, 9000010.12, 9000010.13, 9000010.16, 9000010.23
"RTN","PXRMINDD",9,0)
 N DAS,DATE,DFN,IND,ITEM
"RTN","PXRMINDD",10,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","PXRMINDD",11,0)
 S IND=0
"RTN","PXRMINDD",12,0)
 S DFN=""
"RTN","PXRMINDD",13,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",14,0)
 . S IND=IND+1
"RTN","PXRMINDD",15,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",16,0)
 . S ITEM=""
"RTN","PXRMINDD",17,0)
 . F  S ITEM=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",18,0)
 .. S DATE=""
"RTN","PXRMINDD",19,0)
 .. F  S DATE=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDD",20,0)
 ... I +DATE=DATE Q
"RTN","PXRMINDD",21,0)
 ... S DAS=""
"RTN","PXRMINDD",22,0)
 ... F  S DAS=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",23,0)
 .... S NSD=NSD+1
"RTN","PXRMINDD",24,0)
 .... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_",""PI"","_DFN_","_ITEM_","""_DATE_""","_DAS_")"
"RTN","PXRMINDD",25,0)
 Q
"RTN","PXRMINDD",26,0)
 ;
"RTN","PXRMINDD",27,0)
 ;========================================================
"RTN","PXRMINDD",28,0)
CNT6(FILENUM,NSD) ;Check for string dates for indexes where the date
"RTN","PXRMINDD",29,0)
 ;is at subscript 6. Works for file numbers:
"RTN","PXRMINDD",30,0)
 ;9000010.07, 9000010.18
"RTN","PXRMINDD",31,0)
 N DAS,DATE,DFN,IND,ITEM,TYPE
"RTN","PXRMINDD",32,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","PXRMINDD",33,0)
 S IND=0
"RTN","PXRMINDD",34,0)
 S DFN=""
"RTN","PXRMINDD",35,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",36,0)
 . S IND=IND+1
"RTN","PXRMINDD",37,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",38,0)
 . S TYPE=""
"RTN","PXRMINDD",39,0)
 . F  S TYPE=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE)) Q:TYPE=""  D
"RTN","PXRMINDD",40,0)
 .. S ITEM=""
"RTN","PXRMINDD",41,0)
 .. F  S ITEM=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",42,0)
 ... S DATE=""
"RTN","PXRMINDD",43,0)
 ... F  S DATE=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDD",44,0)
 .... I +DATE=DATE Q
"RTN","PXRMINDD",45,0)
 .... S DAS=""
"RTN","PXRMINDD",46,0)
 .... F  S DAS=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",47,0)
 ..... S NSD=NSD+1
"RTN","PXRMINDD",48,0)
 ..... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_",""PPI"","_DFN_","_TYPE_","_ITEM_","""_DATE_""","_DAS_")"
"RTN","PXRMINDD",49,0)
 Q
"RTN","PXRMINDD",50,0)
 ;
"RTN","PXRMINDD",51,0)
 ;========================================================
"RTN","PXRMINDD",52,0)
CNTPL(FILENUM,NSD) ;Check for string date for Problem List indexes where the
"RTN","PXRMINDD",53,0)
 ;date is at subscript 7. Works for file numbers:
"RTN","PXRMINDD",54,0)
 ;9000011
"RTN","PXRMINDD",55,0)
 N DAS,DATE,DFN,IND,ITEM,PRIORITY,STATUS,TYPE
"RTN","PXRMINDD",56,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","PXRMINDD",57,0)
 S IND=0
"RTN","PXRMINDD",58,0)
 S DFN=""
"RTN","PXRMINDD",59,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PSPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",60,0)
 . S IND=IND+1
"RTN","PXRMINDD",61,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",62,0)
 . S STATUS=""
"RTN","PXRMINDD",63,0)
 . F  S STATUS=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS)) Q:STATUS=""  D
"RTN","PXRMINDD",64,0)
 .. S PRIORITY=""
"RTN","PXRMINDD",65,0)
 .. F  S PRIORITY=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY)) Q:PRIORITY=""  D
"RTN","PXRMINDD",66,0)
 ... S ITEM=""
"RTN","PXRMINDD",67,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",68,0)
 .... S DATE=""
"RTN","PXRMINDD",69,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDD",70,0)
 ..... I +DATE=DATE Q
"RTN","PXRMINDD",71,0)
 ..... S DAS=""
"RTN","PXRMINDD",72,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",73,0)
 ...... S NSD=NSD+1
"RTN","PXRMINDD",74,0)
 ...... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_",""PSPI"","_DFN_","_STATUS_","_PRIORITY_","_ITEM_","""_DATE_""","_DAS_")"
"RTN","PXRMINDD",75,0)
 Q
"RTN","PXRMINDD",76,0)
 ;
"RTN","PXRMINDD",77,0)
 ;========================================================
"RTN","PXRMINDD",78,0)
CNTPTF(FILENUM,NSD) ;Check for string dates for PTF indexes where the
"RTN","PXRMINDD",79,0)
 ;date is at subscript 7. Works for file numbers:
"RTN","PXRMINDD",80,0)
 ;45
"RTN","PXRMINDD",81,0)
 N DAS,DATE,DFN,IND,ITEM,NODE,TYPE
"RTN","PXRMINDD",82,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","PXRMINDD",83,0)
 S IND=0
"RTN","PXRMINDD",84,0)
 F TYPE="ICD0","ICD9" D
"RTN","PXRMINDD",85,0)
 . S DFN=""
"RTN","PXRMINDD",86,0)
 . F  S DFN=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",87,0)
 .. S IND=IND+1
"RTN","PXRMINDD",88,0)
 .. I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",89,0)
 .. S NODE=""
"RTN","PXRMINDD",90,0)
 .. F  S NODE=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE)) Q:NODE=""  D
"RTN","PXRMINDD",91,0)
 ... S ITEM=""
"RTN","PXRMINDD",92,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",93,0)
 .... S DATE=""
"RTN","PXRMINDD",94,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDD",95,0)
 ..... I +DATE=DATE Q
"RTN","PXRMINDD",96,0)
 ..... S DAS=""
"RTN","PXRMINDD",97,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",98,0)
 ...... S NSD=NSD+1
"RTN","PXRMINDD",99,0)
 ...... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_","_TYPE_",""PNI"","_DFN_","_NODE_","_ITEM_","""_DATE_""","_DAS_")"
"RTN","PXRMINDD",100,0)
 Q
"RTN","PXRMINDD",101,0)
 ;
"RTN","PXRMINDD",102,0)
 ;========================================================
"RTN","PXRMINDD",103,0)
CNTSS(FILENUM,NSD) ;Check for string dates for indexes where the start date
"RTN","PXRMINDD",104,0)
 ;is at subscript 5 and the stop date is at subscript 6.
"RTN","PXRMINDD",105,0)
 ;Works for file numbers: 52, 55, 100
"RTN","PXRMINDD",106,0)
 N DAS,DFN,IND,ITEM,START,STOP
"RTN","PXRMINDD",107,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","PXRMINDD",108,0)
 S IND=0
"RTN","PXRMINDD",109,0)
 S DFN=""
"RTN","PXRMINDD",110,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",111,0)
 . S IND=IND+1
"RTN","PXRMINDD",112,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",113,0)
 . S ITEM=""
"RTN","PXRMINDD",114,0)
 . F  S ITEM=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",115,0)
 .. S START=""
"RTN","PXRMINDD",116,0)
 .. F  S START=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START)) Q:START=""  D
"RTN","PXRMINDD",117,0)
 ... I +START=START Q
"RTN","PXRMINDD",118,0)
 ... S STOP=""
"RTN","PXRMINDD",119,0)
 ... F  S STOP=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START,STOP)) Q:STOP=""  D
"RTN","PXRMINDD",120,0)
 .... S DAS=""
"RTN","PXRMINDD",121,0)
 .... F  S DAS=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START,STOP,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",122,0)
 ..... S NSD=NSD+1
"RTN","PXRMINDD",123,0)
 ..... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_",""PI"","_DFN_","_ITEM_","""_START_""","_STOP_","_DAS_")"
"RTN","PXRMINDD",124,0)
 Q
"RTN","PXRMINDD",125,0)
 ;
"RTN","PXRMINDD",126,0)
 ;========================================================
"RTN","PXRMINDD",127,0)
CHECK ;Driver for making index date checks.
"RTN","PXRMINDD",128,0)
 N GBL,LIST,TASKIT
"RTN","PXRMINDD",129,0)
 W !,"Which indexes do you want to check?"
"RTN","PXRMINDD",130,0)
 D SEL^PXRMSXRM(.LIST,.GBL)
"RTN","PXRMINDD",131,0)
 I LIST="" Q
"RTN","PXRMINDD",132,0)
 ;See if this should be tasked.
"RTN","PXRMINDD",133,0)
 S TASKIT=$$ASKTASK^PXRMSXRM
"RTN","PXRMINDD",134,0)
 I TASKIT D
"RTN","PXRMINDD",135,0)
 . W !,"Queue the Clinical Reminders Index date check."
"RTN","PXRMINDD",136,0)
 . D TASKIT(LIST,.GBL,.ROUTINE)
"RTN","PXRMINDD",137,0)
 E  D RUNNOW(LIST,.GBL)
"RTN","PXRMINDD",138,0)
 Q
"RTN","PXRMINDD",139,0)
 ;
"RTN","PXRMINDD",140,0)
 ;========================================================
"RTN","PXRMINDD",141,0)
MESSAGE(FILENUM,NSD,START,END) ;Build the MailMan message giving the
"RTN","PXRMINDD",142,0)
 ;list of entries with string dates.
"RTN","PXRMINDD",143,0)
 N IND,NAME,NL,TEXT,XMSUB
"RTN","PXRMINDD",144,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMINDD",145,0)
 S XMSUB="CR Index string date check for file #"_FILENUM
"RTN","PXRMINDD",146,0)
 S NAME=$$GET1^DID(FILENUM,"","","NAME")_", file #"_FILENUM
"RTN","PXRMINDD",147,0)
 I NSD=0 S TEXT="No string dates were found for "_NAME_"."
"RTN","PXRMINDD",148,0)
 I NSD>0 S TEXT="A total of "_NSD_" string dates were found for "_NAME_"."
"RTN","PXRMINDD",149,0)
 S ^TMP("PXRMXMZ",$J,1,0)=TEXT
"RTN","PXRMINDD",150,0)
 S ^TMP("PXRMXMZ",$J,2,0)="Check finished at "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMINDD",151,0)
 S ^TMP("PXRMXMZ",$J,3,0)=$$ETIME^PXRMSXRM(START,END)
"RTN","PXRMINDD",152,0)
 S ^TMP("PXRMXMZ",$J,4,0)=" "
"RTN","PXRMINDD",153,0)
 I NSD=0,'$D(^PXRMINDX(FILENUM)) D
"RTN","PXRMINDD",154,0)
 . S ^TMP("PXRMXMZ",$J,5,0)="The index for file number "_FILENUM_" does not exist."
"RTN","PXRMINDD",155,0)
 . S ^TMP("PXRMXMZ",$J,6,0)=" "
"RTN","PXRMINDD",156,0)
 I NSD>0 D
"RTN","PXRMINDD",157,0)
 . S ^TMP("PXRMXMZ",$J,5,0)="The following entries with string dates were found:"
"RTN","PXRMINDD",158,0)
 . S NL=5
"RTN","PXRMINDD",159,0)
 . F IND=1:1:NSD D
"RTN","PXRMINDD",160,0)
 .. S NL=NL+1
"RTN","PXRMINDD",161,0)
 .. S ^TMP("PXRMXMZ",$J,NL,0)=" "_^TMP($J,"SDATE",IND)
"RTN","PXRMINDD",162,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "
"RTN","PXRMINDD",163,0)
 D SEND^PXRMMSG(XMSUB)
"RTN","PXRMINDD",164,0)
 K ^TMP($J,"SDATE"),^TMP("PXRMXMZ",$J)
"RTN","PXRMINDD",165,0)
 Q
"RTN","PXRMINDD",166,0)
 ;
"RTN","PXRMINDD",167,0)
 ;===============================================================
"RTN","PXRMINDD",168,0)
RUNNOW(LIST,GBL) ;Run the routines now.
"RTN","PXRMINDD",169,0)
 N END,FN,IND,LI,NSD,NUM,ROUTINE,RTN,START,TOTAL
"RTN","PXRMINDD",170,0)
 K ^TMP($J,"SDATE")
"RTN","PXRMINDD",171,0)
 S ROUTINE(45)="CNTPTF^PXRMINDD"
"RTN","PXRMINDD",172,0)
 S ROUTINE(52)="CNTSS^PXRMINDD"
"RTN","PXRMINDD",173,0)
 S ROUTINE(55)="CNTSS^PXRMINDD"
"RTN","PXRMINDD",174,0)
 S ROUTINE(63)="CNT5^PXRMINDD"
"RTN","PXRMINDD",175,0)
 S ROUTINE(70)="CNT5^PXRMINDD"
"RTN","PXRMINDD",176,0)
 S ROUTINE(100)="CNTSS^PXRMINDD"
"RTN","PXRMINDD",177,0)
 S ROUTINE(120.5)="CNT5^PXRMINDD"
"RTN","PXRMINDD",178,0)
 S ROUTINE(601.2)="CNT5^PXRMINDD"
"RTN","PXRMINDD",179,0)
 S ROUTINE(9000011)="CNTPL^PXRMINDD"
"RTN","PXRMINDD",180,0)
 S ROUTINE(9000010.07)="CNT6^PXRMINDD"
"RTN","PXRMINDD",181,0)
 S ROUTINE(9000010.11)="CNT5^PXRMINDD"
"RTN","PXRMINDD",182,0)
 S ROUTINE(9000010.12)="CNT5^PXRMINDD"
"RTN","PXRMINDD",183,0)
 S ROUTINE(9000010.13)="CNT5^PXRMINDD"
"RTN","PXRMINDD",184,0)
 S ROUTINE(9000010.16)="CNT5^PXRMINDD"
"RTN","PXRMINDD",185,0)
 S ROUTINE(9000010.18)="CNT6^PXRMINDD"
"RTN","PXRMINDD",186,0)
 S ROUTINE(9000010.23)="CNT5^PXRMINDD"
"RTN","PXRMINDD",187,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMINDD",188,0)
 F IND=1:1:NUM D
"RTN","PXRMINDD",189,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMINDD",190,0)
 . S NSD=0
"RTN","PXRMINDD",191,0)
 . S FN=GBL(LI)
"RTN","PXRMINDD",192,0)
 . S RTN=ROUTINE(FN)
"RTN","PXRMINDD",193,0)
 . S RTN=RTN_"("_FN_",.NSD)"
"RTN","PXRMINDD",194,0)
 . S START=$H
"RTN","PXRMINDD",195,0)
 . I $D(^PXRMINDX(FN)) D @RTN
"RTN","PXRMINDD",196,0)
 . S END=$H
"RTN","PXRMINDD",197,0)
 . D MESSAGE(FN,NSD,START,END)
"RTN","PXRMINDD",198,0)
 Q
"RTN","PXRMINDD",199,0)
 ;
"RTN","PXRMINDD",200,0)
 ;===============================================================
"RTN","PXRMINDD",201,0)
TASKIT(LIST,GBL,ROUTINE) ;Check the indexes as a tasked job.
"RTN","PXRMINDD",202,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,MINDT,SDTIME,X,Y
"RTN","PXRMINDD",203,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMINDD",204,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMINDD",205,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMINDD",206,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMINDD",207,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMINDD",208,0)
 D ^DIR
"RTN","PXRMINDD",209,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMINDD",210,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMINDD",211,0)
 S SDTIME=Y
"RTN","PXRMINDD",212,0)
 K DIR
"RTN","PXRMINDD",213,0)
 ;Put the task into the queue.
"RTN","PXRMINDD",214,0)
 K ZTSAVE
"RTN","PXRMINDD",215,0)
 S ZTSAVE("LIST")=""
"RTN","PXRMINDD",216,0)
 S ZTSAVE("GBL(")=""
"RTN","PXRMINDD",217,0)
 S ZTRTN="TASKJOB^PXRMINDD"
"RTN","PXRMINDD",218,0)
 S ZTDESC="Clinical Reminders Index string date check"
"RTN","PXRMINDD",219,0)
 S ZTDTH=SDTIME
"RTN","PXRMINDD",220,0)
 S ZTIO=""
"RTN","PXRMINDD",221,0)
 D ^%ZTLOAD
"RTN","PXRMINDD",222,0)
 W !,"Task number ",ZTSK," queued."
"RTN","PXRMINDD",223,0)
 Q
"RTN","PXRMINDD",224,0)
 ;
"RTN","PXRMINDD",225,0)
 ;===============================================================
"RTN","PXRMINDD",226,0)
TASKJOB ;Execute as tasked job. LIST and GBL come through ZTSAVE.
"RTN","PXRMINDD",227,0)
 N IND,LI,NUM
"RTN","PXRMINDD",228,0)
 S ZTREQ="@"
"RTN","PXRMINDD",229,0)
 S ZTSTOP=0
"RTN","PXRMINDD",230,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMINDD",231,0)
 F IND=1:1:NUM D
"RTN","PXRMINDD",232,0)
 .;Check to see if the task has had a stop request
"RTN","PXRMINDD",233,0)
 . I $$S^%ZTLOAD S ZTSTOP=1,IND=NUM Q
"RTN","PXRMINDD",234,0)
 . S LI=$P(LIST,",",IND)_","
"RTN","PXRMINDD",235,0)
 . D RUNNOW^PXRMINDD(LI,.GBL)
"RTN","PXRMINDD",236,0)
 Q
"RTN","PXRMINDD",237,0)
 ;
"RTN","PXRMINDL")
0^36^B23505754
"RTN","PXRMINDL",1,0)
PXRMINDL ; SLC/PKR - List building routines. ;07/17/2006
"RTN","PXRMINDL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMINDL",3,0)
 ;================================================
"RTN","PXRMINDL",4,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;General patient list term evaluator.
"RTN","PXRMINDL",5,0)
 ;Return the list in ^TMP($J,PLIST)
"RTN","PXRMINDL",6,0)
 N ITEM,FILENUM,PFINDPA
"RTN","PXRMINDL",7,0)
 N SSFIND,TEMP,TFINDING,TFINDPA
"RTN","PXRMINDL",8,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMINDL",9,0)
 I $G(^PXRMINDX(FILENUM,"DATE BUILT"))="" D  Q
"RTN","PXRMINDL",10,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),FILENUM)
"RTN","PXRMINDL",11,0)
 S ITEM=""
"RTN","PXRMINDL",12,0)
 F  S ITEM=$O(TERMARR("E",ENODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDL",13,0)
 . S TFINDING=""
"RTN","PXRMINDL",14,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,ITEM,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMINDL",15,0)
 .. K PFINDPA,TFINDPA
"RTN","PXRMINDL",16,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMINDL",17,0)
 ..;Set the finding parameters.
"RTN","PXRMINDL",18,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMINDL",19,0)
 .. D GPLIST(FILENUM,"IP",ITEM,.PFINDPA,PLIST)
"RTN","PXRMINDL",20,0)
 Q
"RTN","PXRMINDL",21,0)
 ;
"RTN","PXRMINDL",22,0)
 ;================================================
"RTN","PXRMINDL",23,0)
FPLIST(FILENUM,SNODE,ITEM,NOCC,BDT,EDT,PLIST) ;Find patient list data for
"RTN","PXRMINDL",24,0)
 ;regular files. Return the list in ^TMP($J,PLIST).
"RTN","PXRMINDL",25,0)
 N DAS,DATE,DFN,DS,NFOUND
"RTN","PXRMINDL",26,0)
 K ^TMP($J,PLIST)
"RTN","PXRMINDL",27,0)
 I FILENUM=601.2 D SEVALPL^PXRMMH(ITEM,NOCC,BDT,EDT,PLIST) Q
"RTN","PXRMINDL",28,0)
 S DS=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMINDL",29,0)
 S DFN=0
"RTN","PXRMINDL",30,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN)) Q:DFN=""  D
"RTN","PXRMINDL",31,0)
 . S NFOUND=0
"RTN","PXRMINDL",32,0)
 . S DATE=DS
"RTN","PXRMINDL",33,0)
 . F  S DATE=+$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)!(NFOUND=NOCC)  D
"RTN","PXRMINDL",34,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMINDL",35,0)
 .. S DAS=$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN,DATE,""))
"RTN","PXRMINDL",36,0)
 .. S ^TMP($J,PLIST,DFN,NFOUND)=DAS_U_DATE
"RTN","PXRMINDL",37,0)
 Q
"RTN","PXRMINDL",38,0)
 ;
"RTN","PXRMINDL",39,0)
 ;================================================
"RTN","PXRMINDL",40,0)
FPLISTSS(FILENUM,SNODE,ITEM,NGET,BDT,EDT,USESTRT,PLIST) ;Find patient list
"RTN","PXRMINDL",41,0)
 ;data for a finding with a start and stop date.
"RTN","PXRMINDL",42,0)
 ;Return the list in ^TMP($J,PLIST).
"RTN","PXRMINDL",43,0)
 N DAS,DFN,DONE,EDTT,NFOUND,OVERLAP,SDATE,START,STOP,TDATE,TIND,TLIST
"RTN","PXRMINDL",44,0)
 K ^TMP($J,PLIST)
"RTN","PXRMINDL",45,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMINDL",46,0)
 S DFN=0
"RTN","PXRMINDL",47,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN)) Q:DFN=""  D
"RTN","PXRMINDL",48,0)
 . S (DONE,NFOUND)=0
"RTN","PXRMINDL",49,0)
 . S START=EDTT
"RTN","PXRMINDL",50,0)
 . K TLIST
"RTN","PXRMINDL",51,0)
 . F  S START=+$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN,START),-1) Q:(START=0)!(DONE)  D
"RTN","PXRMINDL",52,0)
 .. S STOP=""
"RTN","PXRMINDL",53,0)
 .. F  S STOP=$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN,START,STOP),-1) Q:(STOP="")!(DONE)  D
"RTN","PXRMINDL",54,0)
 ... S SDATE=$S(USESTRT:START,STOP["U":$$NOW^PXRMDATE_"U",1:STOP)
"RTN","PXRMINDL",55,0)
 ... S OVERLAP=$$OVERLAP^PXRMINDX(START,SDATE,BDT,EDTT)
"RTN","PXRMINDL",56,0)
 ... I OVERLAP="O" D
"RTN","PXRMINDL",57,0)
 .... S DAS=$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN,START,STOP,""))
"RTN","PXRMINDL",58,0)
 .... S NFOUND=NFOUND+1,TLIST(SDATE,NFOUND)=DAS_U_START_U_SDATE
"RTN","PXRMINDL",59,0)
 ... I FILENUM="55NVA" Q
"RTN","PXRMINDL",60,0)
 ... I FILENUM=100 Q
"RTN","PXRMINDL",61,0)
 ... I OVERLAP="L" S DONE=1 Q
"RTN","PXRMINDL",62,0)
 .;Return up to NGET of the most recent entries.
"RTN","PXRMINDL",63,0)
 . S NFOUND=0,TDATE=""
"RTN","PXRMINDL",64,0)
 . F  S TDATE=$O(TLIST(TDATE)) Q:(TDATE="")!(NFOUND=NGET)  D
"RTN","PXRMINDL",65,0)
 .. S TIND=0
"RTN","PXRMINDL",66,0)
 .. F  S TIND=$O(TLIST(TDATE,TIND)) Q:(TIND="")!(NFOUND=NGET)  D
"RTN","PXRMINDL",67,0)
 ... S NFOUND=NFOUND+1,^TMP($J,PLIST,DFN,NFOUND)=TLIST(TDATE,TIND)
"RTN","PXRMINDL",68,0)
 Q
"RTN","PXRMINDL",69,0)
 ;
"RTN","PXRMINDL",70,0)
 ;================================================
"RTN","PXRMINDL",71,0)
GPLIST(FILENUM,SNODE,ITEM,PFINDPA,PLIST) ;Add to the patient list
"RTN","PXRMINDL",72,0)
 ;for a regular file. Return the list in ^TMP($J,PLIST):
"RTN","PXRMINDL",73,0)
 ;^TMP($J,PLIST,T/F,DFN,ITEM,COUNT,FILENUM)=DAS^DATE^VALUE
"RTN","PXRMINDL",74,0)
 N BDT,CASESEN,COND,CONVAL,DAS,DATE,EDT,DFN,FIEVD,FLIST,GPLIST
"RTN","PXRMINDL",75,0)
 N ICOND,IND,INVFD,IPLIST,NOCC,NFOUND,NGET
"RTN","PXRMINDL",76,0)
 N SAVE,SSFIND,STATOK,STATUSA,TEMP,TGLIST,TPLIST
"RTN","PXRMINDL",77,0)
 N UCIFS,USESTRT,VALUE,VSLIST
"RTN","PXRMINDL",78,0)
 S TGLIST="GPLIST_PXRMINDL"
"RTN","PXRMINDL",79,0)
 ;Determine if this is a finding with a start and stop date.
"RTN","PXRMINDL",80,0)
 S SSFIND=$S(FILENUM=52:1,FILENUM[55:1,FILENUM=100:1,1:0)
"RTN","PXRMINDL",81,0)
 S USESTRT=$S(SSFIND:$P(PFINDPA(0),U,15),1:0)
"RTN","PXRMINDL",82,0)
 I FILENUM=100,USESTRT="" S USESTRT=1
"RTN","PXRMINDL",83,0)
 ;Set the finding search parameters.
"RTN","PXRMINDL",84,0)
 D SSPAR^PXRMUTIL(PFINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMINDL",85,0)
 S INVFD=$P(PFINDPA(0),U,16)
"RTN","PXRMINDL",86,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMINDL",87,0)
 D GETSTATI^PXRMSTAT(FILENUM,.PFINDPA,.STATUSA)
"RTN","PXRMINDL",88,0)
 D SCPAR^PXRMCOND(.PFINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMINDL",89,0)
 S NGET=$S(UCIFS:"*",$D(STATUSA):"*",1:NOCC)
"RTN","PXRMINDL",90,0)
 I SSFIND D FPLISTSS(FILENUM,SNODE,ITEM,NGET,BDT,EDT,USESTRT,TGLIST)
"RTN","PXRMINDL",91,0)
 I 'SSFIND D FPLIST(FILENUM,SNODE,ITEM,NGET,BDT,EDT,TGLIST)
"RTN","PXRMINDL",92,0)
 S DFN=""
"RTN","PXRMINDL",93,0)
 F  S DFN=$O(^TMP($J,TGLIST,DFN)) Q:DFN=""  D
"RTN","PXRMINDL",94,0)
 . K GPLIST
"RTN","PXRMINDL",95,0)
 . M GPLIST=^TMP($J,TGLIST,DFN)
"RTN","PXRMINDL",96,0)
 . S (IND,NFOUND)=0
"RTN","PXRMINDL",97,0)
 . K IPLIST
"RTN","PXRMINDL",98,0)
 . F  S IND=$O(GPLIST(IND)) Q:(IND="")!(NFOUND=NOCC)  D
"RTN","PXRMINDL",99,0)
 .. S TEMP=GPLIST(IND)
"RTN","PXRMINDL",100,0)
 .. S DAS=$P(TEMP,U,1)
"RTN","PXRMINDL",101,0)
 ..;If this a Lab finding attach the item to the DAS.
"RTN","PXRMINDL",102,0)
 .. I PFINDPA(0)["LAB(60" S DAS=ITEM_"~"_DAS
"RTN","PXRMINDL",103,0)
 ..;If this is a Mental Health finding attach the scale to DAS.
"RTN","PXRMINDL",104,0)
 .. I PFINDPA(0)["YTT(601" S DAS=DAS_"S"_$P(PFINDPA(0),U,12)
"RTN","PXRMINDL",105,0)
 .. D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVD)
"RTN","PXRMINDL",106,0)
 .. S VALUE=$G(FIEVD("VALUE"))
"RTN","PXRMINDL",107,0)
 .. I INVFD D GETDATA^PXRMVSIT(FIEVD("VISIT"),.FIEVD,0)
"RTN","PXRMINDL",108,0)
 ..;If there is a status list make sure the finding has a status on
"RTN","PXRMINDL",109,0)
 ..;the list.
"RTN","PXRMINDL",110,0)
 .. S STATOK=$S($D(STATUSA):$$STATUSOK^PXRMINDX(.STATUSA,.FIEVD),1:1)
"RTN","PXRMINDL",111,0)
 .. I 'STATOK Q
"RTN","PXRMINDL",112,0)
 .. S CONVAL=$S(COND'="":$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.FIEVD),1:1)
"RTN","PXRMINDL",113,0)
 .. S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMINDL",114,0)
 .. I SAVE D
"RTN","PXRMINDL",115,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMINDL",116,0)
 ... S IPLIST(CONVAL,DFN,ITEM,NFOUND,FILENUM)=TEMP_U_VALUE
"RTN","PXRMINDL",117,0)
 . M ^TMP($J,PLIST)=IPLIST
"RTN","PXRMINDL",118,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMINDL",119,0)
 Q
"RTN","PXRMINDL",120,0)
 ;
"RTN","PXRMINDX")
0^32^B34936278
"RTN","PXRMINDX",1,0)
PXRMINDX ; SLC/PKR - Routines for utilizing the index. ;07/17/2006
"RTN","PXRMINDX",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMINDX",3,0)
 ;Code for patient findings.
"RTN","PXRMINDX",4,0)
 ;================================================================
"RTN","PXRMINDX",5,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;General finding evaluator.
"RTN","PXRMINDX",6,0)
 N BDT,EDT,FIEVT,FILENUM,FINDING,FINDPA,ITEM,NOINDEX
"RTN","PXRMINDX",7,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMINDX",8,0)
 I $G(^PXRMINDX(FILENUM,"DATE BUILT"))="" D
"RTN","PXRMINDX",9,0)
 . D NOINDEX^PXRMERRH("D",PXRMITEM,FILENUM)
"RTN","PXRMINDX",10,0)
 . S NOINDEX=1
"RTN","PXRMINDX",11,0)
 E  S NOINDEX=0
"RTN","PXRMINDX",12,0)
 S ITEM=""
"RTN","PXRMINDX",13,0)
 F  S ITEM=$O(DEFARR("E",ENODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDX",14,0)
 . S FINDING=""
"RTN","PXRMINDX",15,0)
 . F  S FINDING=$O(DEFARR("E",ENODE,ITEM,FINDING)) Q:+FINDING=0  D
"RTN","PXRMINDX",16,0)
 .. I NOINDEX S FIEVAL(FINDING)=0 Q
"RTN","PXRMINDX",17,0)
 .. K FINDPA
"RTN","PXRMINDX",18,0)
 .. M FINDPA=DEFARR(20,FINDING)
"RTN","PXRMINDX",19,0)
 .. K FIEVT
"RTN","PXRMINDX",20,0)
 .. D FIEVAL(FILENUM,"PI",DFN,ITEM,.FINDPA,.FIEVT)
"RTN","PXRMINDX",21,0)
 .. M FIEVAL(FINDING)=FIEVT
"RTN","PXRMINDX",22,0)
 .. S FIEVAL(FINDING,"FINDING")=$P(FINDPA(0),U,1)
"RTN","PXRMINDX",23,0)
 Q
"RTN","PXRMINDX",24,0)
 ;
"RTN","PXRMINDX",25,0)
 ;================================================================
"RTN","PXRMINDX",26,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;General term
"RTN","PXRMINDX",27,0)
 ;evaluator.
"RTN","PXRMINDX",28,0)
 N FIEVT,FILENUM,ITEM,NOINDEX,PFINDPA
"RTN","PXRMINDX",29,0)
 N TFINDING,TFINDPA
"RTN","PXRMINDX",30,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMINDX",31,0)
 I $G(^PXRMINDX(FILENUM,"DATE BUILT"))="" D
"RTN","PXRMINDX",32,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),FILENUM)
"RTN","PXRMINDX",33,0)
 . S NOINDEX=1
"RTN","PXRMINDX",34,0)
 E  S NOINDEX=0
"RTN","PXRMINDX",35,0)
 S ITEM=""
"RTN","PXRMINDX",36,0)
 F  S ITEM=$O(TERMARR("E",ENODE,ITEM)) Q:+ITEM=0  D
"RTN","PXRMINDX",37,0)
 . S TFINDING=""
"RTN","PXRMINDX",38,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,ITEM,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMINDX",39,0)
 .. I NOINDEX S TFIEVAL(TFINDING)=0 Q
"RTN","PXRMINDX",40,0)
 .. K FIEVT,PFINDPA,TFINDPA
"RTN","PXRMINDX",41,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMINDX",42,0)
 ..;Set the finding parameters.
"RTN","PXRMINDX",43,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMINDX",44,0)
 .. D FIEVAL(FILENUM,"PI",DFN,ITEM,.PFINDPA,.FIEVT)
"RTN","PXRMINDX",45,0)
 .. M TFIEVAL(TFINDING)=FIEVT
"RTN","PXRMINDX",46,0)
 .. S TFIEVAL(TFINDING,"FINDING")=$P(TFINDPA(0),U,1)
"RTN","PXRMINDX",47,0)
 Q
"RTN","PXRMINDX",48,0)
 ;
"RTN","PXRMINDX",49,0)
 ;================================================================
"RTN","PXRMINDX",50,0)
FIEVAL(FILENUM,SNODE,DFN,ITEM,PFINDPA,FIEVAL) ;
"RTN","PXRMINDX",51,0)
 ;Evaluate regular patient findings.
"RTN","PXRMINDX",52,0)
 N BDT,CASESEN,COND,CONVAL,DAS,DATE,EDT,FIEVD,FLIST,ICOND,IEN,IND,INVFD
"RTN","PXRMINDX",53,0)
 N NFOUND,NGET,NOCC,NP
"RTN","PXRMINDX",54,0)
 N SAVE,SDIR,SSFIND,STATOK,STATUSA,UCIFS,USESTRT,VSLIST
"RTN","PXRMINDX",55,0)
 ;Set the finding search parameters.
"RTN","PXRMINDX",56,0)
 D SSPAR^PXRMUTIL(PFINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMINDX",57,0)
 D SCPAR^PXRMCOND(.PFINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMINDX",58,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMINDX",59,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMINDX",60,0)
 S NGET=$S(UCIFS:"*",1:NOCC)
"RTN","PXRMINDX",61,0)
 ;Determine if this is a finding with a start and stop date.
"RTN","PXRMINDX",62,0)
 S SSFIND=$S(FILENUM=52:1,FILENUM["55":1,FILENUM=100:1,1:0)
"RTN","PXRMINDX",63,0)
 S USESTRT=$S(SSFIND:$P(PFINDPA(0),U,15),1:0)
"RTN","PXRMINDX",64,0)
 I FILENUM=100,USESTRT="" S USESTRT=1
"RTN","PXRMINDX",65,0)
 ;Get the status list.
"RTN","PXRMINDX",66,0)
 D GETSTATI^PXRMSTAT(FILENUM,.PFINDPA,.STATUSA)
"RTN","PXRMINDX",67,0)
 I SSFIND D FPDATSS(FILENUM,SNODE,DFN,ITEM,NGET,SDIR,BDT,EDT,USESTRT,.NFOUND,.FLIST)
"RTN","PXRMINDX",68,0)
 I 'SSFIND D FPDAT(FILENUM,SNODE,DFN,ITEM,NGET,SDIR,BDT,EDT,.NFOUND,.FLIST)
"RTN","PXRMINDX",69,0)
 I NFOUND=0 S FIEVAL=0 Q
"RTN","PXRMINDX",70,0)
 S INVFD=$P(PFINDPA(0),U,16)
"RTN","PXRMINDX",71,0)
 S NP=0
"RTN","PXRMINDX",72,0)
 F IND=1:1:NFOUND Q:NP=NOCC  D
"RTN","PXRMINDX",73,0)
 . S DAS=$P(FLIST(IND),U,1)
"RTN","PXRMINDX",74,0)
 .;If this a Lab finding attach the item to the DAS.
"RTN","PXRMINDX",75,0)
 . I PFINDPA(0)["LAB(60" S DAS=ITEM_"~"_DAS
"RTN","PXRMINDX",76,0)
 .;If this is a Mental Health finding attach the scale to DAS.
"RTN","PXRMINDX",77,0)
 . I PFINDPA(0)["YTT(601" S DAS=DAS_"S"_$P(PFINDPA(0),U,12)
"RTN","PXRMINDX",78,0)
 . D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVD)
"RTN","PXRMINDX",79,0)
 . I INVFD D GETDATA^PXRMVSIT(FIEVD("VISIT"),.FIEVD,0)
"RTN","PXRMINDX",80,0)
 .;If there is a status list make sure the finding has one on the list.
"RTN","PXRMINDX",81,0)
 . S STATOK=$S($D(STATUSA):$$STATUSOK(.STATUSA,.FIEVD),1:1)
"RTN","PXRMINDX",82,0)
 . I 'STATOK Q
"RTN","PXRMINDX",83,0)
 . S CONVAL=$S(COND'="":$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.FIEVD),1:1)
"RTN","PXRMINDX",84,0)
 . S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMINDX",85,0)
 . I SAVE D
"RTN","PXRMINDX",86,0)
 .. S NP=NP+1
"RTN","PXRMINDX",87,0)
 .. S FIEVAL(NP)=CONVAL
"RTN","PXRMINDX",88,0)
 .. I COND'="" S FIEVAL(NP,"CONDITION")=CONVAL
"RTN","PXRMINDX",89,0)
 .. S FIEVAL(NP,"DAS")=$P(FLIST(IND),U,1)
"RTN","PXRMINDX",90,0)
 .. S FIEVAL(NP,"DATE")=$P(FLIST(IND),U,2)
"RTN","PXRMINDX",91,0)
 .. M FIEVAL(NP)=FIEVD
"RTN","PXRMINDX",92,0)
 .. I $G(PXRMDEBG) M FIEVAL(NP,"CSUB")=FIEVD
"RTN","PXRMINDX",93,0)
 ;
"RTN","PXRMINDX",94,0)
 ;Save the finding result.
"RTN","PXRMINDX",95,0)
 D SFRES^PXRMUTIL(SDIR,NP,.FIEVAL)
"RTN","PXRMINDX",96,0)
 S FIEVAL("FILE NUMBER")=FILENUM
"RTN","PXRMINDX",97,0)
 Q
"RTN","PXRMINDX",98,0)
 ;
"RTN","PXRMINDX",99,0)
 ;================================================================
"RTN","PXRMINDX",100,0)
FPDAT(FILENUM,SNODE,DFN,ITEM,NGET,SDIR,BDT,EDT,NFOUND,FLIST) ;Find patient
"RTN","PXRMINDX",101,0)
 ;data for regular files. FLIST is returned in date order, i.e.,
"RTN","PXRMINDX",102,0)
 ;FLIST(1) is the most recent SDIR=-1, oldest SDIR=+1.
"RTN","PXRMINDX",103,0)
 I FILENUM=601.2 D SEVALFI^PXRMMH(DFN,ITEM,NGET,SDIR,BDT,EDT,.NFOUND,.FLIST) Q
"RTN","PXRMINDX",104,0)
 N DAS,DATE,DONE,EDTT
"RTN","PXRMINDX",105,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMINDX",106,0)
 S (DONE,NFOUND)=0
"RTN","PXRMINDX",107,0)
 S DATE=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMINDX",108,0)
 F  S DATE=+$O(^PXRMINDX(FILENUM,SNODE,DFN,ITEM,DATE),SDIR) Q:(DATE=0)!(DONE)  D
"RTN","PXRMINDX",109,0)
 . I DATE<BDT,SDIR=-1 S DONE=1 Q
"RTN","PXRMINDX",110,0)
 . I DATE>EDTT,SDIR=1 S DONE=1 Q
"RTN","PXRMINDX",111,0)
 . S DAS=$O(^PXRMINDX(FILENUM,SNODE,DFN,ITEM,DATE,""))
"RTN","PXRMINDX",112,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMINDX",113,0)
 . S FLIST(NFOUND)=DAS_U_DATE
"RTN","PXRMINDX",114,0)
 . I NFOUND=NGET S DONE=1 Q
"RTN","PXRMINDX",115,0)
 Q
"RTN","PXRMINDX",116,0)
 ;
"RTN","PXRMINDX",117,0)
 ;================================================================
"RTN","PXRMINDX",118,0)
FPDATSS(FILENUM,SNODE,DFN,ITEM,NGET,SDIR,BDT,EDT,USESTRT,NFOUND,FLIST) ;Find
"RTN","PXRMINDX",119,0)
 ;patient data for findings that have a start and stop date. FLIST
"RTN","PXRMINDX",120,0)
 ;is returned in date order, i.e., FLIST(1) is the most recent.
"RTN","PXRMINDX",121,0)
 N DAS,DONE,EDTT,OVERLAP,SDATE,START,STOP,TDATE,TIND,TLIST
"RTN","PXRMINDX",122,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMINDX",123,0)
 S (DONE,NFOUND)=0
"RTN","PXRMINDX",124,0)
 S START=$S(SDIR=+1:0,1:EDTT)
"RTN","PXRMINDX",125,0)
 F  S START=+$O(^PXRMINDX(FILENUM,SNODE,DFN,ITEM,START),SDIR) Q:(START=0)!(DONE)!(START>EDTT)  D
"RTN","PXRMINDX",126,0)
 . S STOP=""
"RTN","PXRMINDX",127,0)
 . F  S STOP=$O(^PXRMINDX(FILENUM,SNODE,DFN,ITEM,START,STOP),SDIR) Q:(STOP="")!(DONE)  D
"RTN","PXRMINDX",128,0)
 ..;Items that do not have a stop date are flagged by "U".
"RTN","PXRMINDX",129,0)
 .. S SDATE=$S(USESTRT:START,STOP["U":$$NOW^PXRMDATE_"U",1:STOP)
"RTN","PXRMINDX",130,0)
 .. S OVERLAP=$$OVERLAP(START,SDATE,BDT,EDT)
"RTN","PXRMINDX",131,0)
 .. I OVERLAP="O" D
"RTN","PXRMINDX",132,0)
 ... S DAS=$O(^PXRMINDX(FILENUM,SNODE,DFN,ITEM,START,STOP,""))
"RTN","PXRMINDX",133,0)
 ... S NFOUND=NFOUND+1,TLIST(SDATE,NFOUND)=DAS_U_SDATE
"RTN","PXRMINDX",134,0)
 ..;Some orders and non-VA meds may not have a Stop Date so we have
"RTN","PXRMINDX",135,0)
 ..;to check all entries.
"RTN","PXRMINDX",136,0)
 .. I FILENUM="55NVA" Q
"RTN","PXRMINDX",137,0)
 .. I FILENUM=100 Q
"RTN","PXRMINDX",138,0)
 .. I OVERLAP="L",SDIR=-1 S DONE=1 Q
"RTN","PXRMINDX",139,0)
 .. I OVERLAP="R",SDIR=1 S DONE=1 Q
"RTN","PXRMINDX",140,0)
 ;Return up to NGET of the most recent/oldest entries.
"RTN","PXRMINDX",141,0)
 S NFOUND=0,TDATE=""
"RTN","PXRMINDX",142,0)
 F  S TDATE=$O(TLIST(TDATE),SDIR) Q:(TDATE="")!(NFOUND=NGET)  D
"RTN","PXRMINDX",143,0)
 . S TIND=0
"RTN","PXRMINDX",144,0)
 . F  S TIND=$O(TLIST(TDATE,TIND)) Q:(TIND="")!(NFOUND=NGET)  D
"RTN","PXRMINDX",145,0)
 .. S NFOUND=NFOUND+1,FLIST(NFOUND)=TLIST(TDATE,TIND)
"RTN","PXRMINDX",146,0)
 Q
"RTN","PXRMINDX",147,0)
 ;
"RTN","PXRMINDX",148,0)
 ;================================================================
"RTN","PXRMINDX",149,0)
OVERLAP(START,STOP,BDT,EDT) ;Determine if the date range defined by START and
"RTN","PXRMINDX",150,0)
 ;STOP overlaps with the date range defined by BDT and EDT. The return
"RTN","PXRMINDX",151,0)
 ;value "O" means they overlap, "L" means START, STOP is to the
"RTN","PXRMINDX",152,0)
 ;left of BDT, EDT and "R" means it is to the right.
"RTN","PXRMINDX",153,0)
 I EDT<START Q "R"
"RTN","PXRMINDX",154,0)
 I STOP<BDT Q "L"
"RTN","PXRMINDX",155,0)
 Q "O"
"RTN","PXRMINDX",156,0)
 ;
"RTN","PXRMINDX",157,0)
 ;================================================================
"RTN","PXRMINDX",158,0)
STATUSOK(STATUSA,FIEVD) ;Return true if the status in FIEVD matches one in
"RTN","PXRMINDX",159,0)
 ;the list in STATUSA.
"RTN","PXRMINDX",160,0)
 I '$D(FIEVD("STATUS")) Q 1
"RTN","PXRMINDX",161,0)
 N JND,OK
"RTN","PXRMINDX",162,0)
 S OK=0
"RTN","PXRMINDX",163,0)
 F JND=1:1:STATUSA(0) Q:OK  D
"RTN","PXRMINDX",164,0)
 . I STATUSA(JND)="*" S OK=1 Q
"RTN","PXRMINDX",165,0)
 . I STATUSA(JND)=FIEVD("STATUS") S OK=1 Q
"RTN","PXRMINDX",166,0)
 Q OK
"RTN","PXRMINDX",167,0)
 ;
"RTN","PXRMINQ")
0^16^B22208346
"RTN","PXRMINQ",1,0)
PXRMINQ ; SLC/PKR/PJH - Clinical Reminder inquiry routines. ;03/17/2005
"RTN","PXRMINQ",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMINQ",3,0)
 ;
"RTN","PXRMINQ",4,0)
 ;====================================================
"RTN","PXRMINQ",5,0)
DISP(DIC,FLDS) ;Display detail.
"RTN","PXRMINQ",6,0)
 N L
"RTN","PXRMINQ",7,0)
 S L=0
"RTN","PXRMINQ",8,0)
 D EN1^DIP
"RTN","PXRMINQ",9,0)
 Q
"RTN","PXRMINQ",10,0)
 ;
"RTN","PXRMINQ",11,0)
 ;====================================================
"RTN","PXRMINQ",12,0)
HEADER(TEXT) ;Display Header (see DHD variable).
"RTN","PXRMINQ",13,0)
 N TEMP,TEXTLEN,TEXTUND
"RTN","PXRMINQ",14,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMINQ",15,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMINQ",16,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMINQ",17,0)
 W TEXT
"RTN","PXRMINQ",18,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMINQ",19,0)
 W !,TEXTUND,!!
"RTN","PXRMINQ",20,0)
 Q
"RTN","PXRMINQ",21,0)
 ;
"RTN","PXRMINQ",22,0)
 ;====================================================
"RTN","PXRMINQ",23,0)
LOCLIST ;Do location list inquiry.
"RTN","PXRMINQ",24,0)
 N BY,DC,DHD,FLDS,FR,IENN,NOW,PXRMEDOK,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",25,0)
 S PXRMEDOK=1
"RTN","PXRMINQ",26,0)
 S FLDS="[PXRM LOCATION LIST INQUIRY]"
"RTN","PXRMINQ",27,0)
 S IENN=0
"RTN","PXRMINQ",28,0)
 S PXRMROOT="^PXRMD(810.9,"
"RTN","PXRMINQ",29,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",30,0)
 . S IENN=$$SELECT(PXRMROOT,"Select LOCATION LIST: ","")
"RTN","PXRMINQ",31,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",32,0)
 . D SET(IENN,"REMINDER LOCATION LIST INQUIRY")
"RTN","PXRMINQ",33,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",34,0)
 Q
"RTN","PXRMINQ",35,0)
 ;
"RTN","PXRMINQ",36,0)
 ;====================================================
"RTN","PXRMINQ",37,0)
REM ;Do reminder inquiry.
"RTN","PXRMINQ",38,0)
 N BY,DC,DHD,FLDS,FR,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",39,0)
 ;Build the finding variable pointer information.
"RTN","PXRMINQ",40,0)
 D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMINQ",41,0)
 S FLDS="[PXRM DEFINITION INQUIRY]"
"RTN","PXRMINQ",42,0)
 S IENN=0
"RTN","PXRMINQ",43,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMINQ",44,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",45,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Definition: ","")
"RTN","PXRMINQ",46,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",47,0)
 . D SET(IENN,"REMINDER DEFINITION INQUIRY")
"RTN","PXRMINQ",48,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",49,0)
 Q
"RTN","PXRMINQ",50,0)
 ;
"RTN","PXRMINQ",51,0)
 ;====================================================
"RTN","PXRMINQ",52,0)
REMVAR(VAR,IEN) ;Do reminder inquiry for reminder IEN, return formatted
"RTN","PXRMINQ",53,0)
 ;output in VAR. VAR can be either a local variable or a global.
"RTN","PXRMINQ",54,0)
 ;If it is a local it is indexed for the broker. If it is a global
"RTN","PXRMINQ",55,0)
 ;it should be passed in closed form i.e., ^TMP("PXRMTEST",$J).
"RTN","PXRMINQ",56,0)
 ;It will be returned formatted for ListMan i.e.,
"RTN","PXRMINQ",57,0)
 ;^TMP("PXRMTEST",$J,N,0).
"RTN","PXRMINQ",58,0)
 N %ZIS,BY,DC,DHD,DONE,FF,FILENAME,FILESPEC,FLDS,FR,GBL,HFNAME
"RTN","PXRMINQ",59,0)
 N IND,IOP,NOW,PATH,PXRMFVPL,PXRMROOT,SUCCESS,TO,UNIQN
"RTN","PXRMINQ",60,0)
 ;Build the finding variable pointer information.
"RTN","PXRMINQ",61,0)
 D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMINQ",62,0)
 S FLDS="[PXRM DEFINITION INQUIRY]"
"RTN","PXRMINQ",63,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMINQ",64,0)
 D SET(IEN,"")
"RTN","PXRMINQ",65,0)
 ;Make sure the PXRM WORKSTATION device exists.
"RTN","PXRMINQ",66,0)
 D MKWSDEV^PXRMHOST
"RTN","PXRMINQ",67,0)
 ;Set up the output file before DIP is called.
"RTN","PXRMINQ",68,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMINQ",69,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMINQ",70,0)
 S NOW=$TR(NOW,".","")
"RTN","PXRMINQ",71,0)
 S UNIQN=$J_NOW
"RTN","PXRMINQ",72,0)
 S FILENAME="PXRMWSD"_UNIQN_".DAT"
"RTN","PXRMINQ",73,0)
 S HFNAME=PATH_FILENAME
"RTN","PXRMINQ",74,0)
 S IOP="PXRM WORKSTATION;80"
"RTN","PXRMINQ",75,0)
 S %ZIS("HFSMODE")="W"
"RTN","PXRMINQ",76,0)
 S %ZIS("HFSNAME")=HFNAME
"RTN","PXRMINQ",77,0)
 D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",78,0)
 ;Move the host file into a global.
"RTN","PXRMINQ",79,0)
 S GBL="^TMP(""PXRMINQ"",$J,1,0)"
"RTN","PXRMINQ",80,0)
 S GBL=$NA(@GBL)
"RTN","PXRMINQ",81,0)
 K ^TMP("PXRMINQ",$J)
"RTN","PXRMINQ",82,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILENAME,GBL,3)
"RTN","PXRMINQ",83,0)
 ;Look for a form feed, remove it and all subsequent lines.
"RTN","PXRMINQ",84,0)
 S FF=$C(12)
"RTN","PXRMINQ",85,0)
 I $G(VAR)["^" D
"RTN","PXRMINQ",86,0)
 . S VAR=$NA(@VAR)
"RTN","PXRMINQ",87,0)
 . S VAR=$P(VAR,")",1)
"RTN","PXRMINQ",88,0)
 . S VAR=VAR_",IND,0)"
"RTN","PXRMINQ",89,0)
 . S (DONE,IND)=0
"RTN","PXRMINQ",90,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMINQ",$J,IND)) Q:+IND=0  D
"RTN","PXRMINQ",91,0)
 .. I ^TMP("PXRMINQ",$J,IND,0)=FF S DONE=1 Q
"RTN","PXRMINQ",92,0)
 .. S @VAR=^TMP("PXRMINQ",$J,IND,0)
"RTN","PXRMINQ",93,0)
 E  D
"RTN","PXRMINQ",94,0)
 . S (DONE,IND)=0
"RTN","PXRMINQ",95,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMINQ",$J,IND)) Q:+IND=0  D
"RTN","PXRMINQ",96,0)
 .. S VAR(IND)=^TMP("PXRMINQ",$J,IND,0)
"RTN","PXRMINQ",97,0)
 .. I VAR(IND)=FF S DONE=1
"RTN","PXRMINQ",98,0)
 K ^TMP("PXRMINQ",$J)
"RTN","PXRMINQ",99,0)
 ;Delete the host file.
"RTN","PXRMINQ",100,0)
 S FILESPEC(FILENAME)=""
"RTN","PXRMINQ",101,0)
 S SUCCESS=$$DEL^%ZISH(PATH,$NA(FILESPEC))
"RTN","PXRMINQ",102,0)
 Q
"RTN","PXRMINQ",103,0)
 ;
"RTN","PXRMINQ",104,0)
 ;====================================================
"RTN","PXRMINQ",105,0)
SELECT(ROOT,PROMPT,DEFAULT) ;Select the entry.
"RTN","PXRMINQ",106,0)
 N DIC,DTOUT,DUOUT,Y
"RTN","PXRMINQ",107,0)
 S DIC=ROOT
"RTN","PXRMINQ",108,0)
 S DIC(0)="AEMQ"
"RTN","PXRMINQ",109,0)
 S DIC("A")=PROMPT
"RTN","PXRMINQ",110,0)
 I $G(DEFAULT)'="" S DIC("B")=DEFAULT
"RTN","PXRMINQ",111,0)
 D ^DIC
"RTN","PXRMINQ",112,0)
 Q Y
"RTN","PXRMINQ",113,0)
 ;
"RTN","PXRMINQ",114,0)
 ;====================================================
"RTN","PXRMINQ",115,0)
SET(Y,TEXT) ;Set data for entry selection and the header.
"RTN","PXRMINQ",116,0)
 ;
"RTN","PXRMINQ",117,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMINQ",118,0)
 ;They are newed in the calling routine.
"RTN","PXRMINQ",119,0)
 S BY="NUMBER"
"RTN","PXRMINQ",120,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMINQ",121,0)
 ;If TEXT is null then no header.
"RTN","PXRMINQ",122,0)
 I $L(TEXT)>0 D
"RTN","PXRMINQ",123,0)
 . S NOW=$$NOW^XLFDT
"RTN","PXRMINQ",124,0)
 . S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMINQ",125,0)
 . S DHD="W ?0 D HEADER^PXRMINQ("""_TEXT_""")"
"RTN","PXRMINQ",126,0)
 E  S DHD="@@"
"RTN","PXRMINQ",127,0)
 Q
"RTN","PXRMINQ",128,0)
 ;
"RTN","PXRMINQ",129,0)
 ;====================================================
"RTN","PXRMINQ",130,0)
SPONSOR ;Do sponsor inquiry.
"RTN","PXRMINQ",131,0)
 N BY,DC,DHD,FLDS,FR,IENN,NOW,PXRMEDOK,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",132,0)
 S PXRMEDOK=1
"RTN","PXRMINQ",133,0)
 S FLDS="[PXRM SPONSOR INQUIRY]"
"RTN","PXRMINQ",134,0)
 S IENN=0
"RTN","PXRMINQ",135,0)
 S PXRMROOT="^PXRMD(811.6,"
"RTN","PXRMINQ",136,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",137,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Sponsor: ","")
"RTN","PXRMINQ",138,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",139,0)
 . D SET(IENN,"REMINDER SPONSOR INQUIRY")
"RTN","PXRMINQ",140,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",141,0)
 Q
"RTN","PXRMINQ",142,0)
 ;
"RTN","PXRMINQ",143,0)
 ;====================================================
"RTN","PXRMINQ",144,0)
TAX ;Do taxonomy inquiry.
"RTN","PXRMINQ",145,0)
 N BY,DC,DHD,FLDS,FR,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",146,0)
 S FLDS="[PXRM TAXONOMY INQUIRY]"
"RTN","PXRMINQ",147,0)
 S IENN=0
"RTN","PXRMINQ",148,0)
 S PXRMROOT="^PXD(811.2,"
"RTN","PXRMINQ",149,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",150,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Taxonomy: ","")
"RTN","PXRMINQ",151,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",152,0)
 . D SET(IENN,"REMINDER TAXONOMY INQUIRY")
"RTN","PXRMINQ",153,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",154,0)
 Q
"RTN","PXRMINQ",155,0)
 ;
"RTN","PXRMINQ",156,0)
 ;====================================================
"RTN","PXRMINQ",157,0)
TERM ;Do term inquiry.
"RTN","PXRMINQ",158,0)
 N BY,DC,DHD,FLDS,FR,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",159,0)
 ;Build the finding variable pointer information
"RTN","PXRMINQ",160,0)
 D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMINQ",161,0)
 S FLDS="[PXRM TERM INQUIRY]"
"RTN","PXRMINQ",162,0)
 S IENN=0
"RTN","PXRMINQ",163,0)
 S PXRMROOT="^PXRMD(811.5,"
"RTN","PXRMINQ",164,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",165,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Term: ","")
"RTN","PXRMINQ",166,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",167,0)
 . D SET(IENN,"REMINDER TERM INQUIRY")
"RTN","PXRMINQ",168,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",169,0)
 Q
"RTN","PXRMINQ",170,0)
 ;
"RTN","PXRMINTR")
0^130^B41426356
"RTN","PXRMINTR",1,0)
PXRMINTR ; SLC/PKR/PJH - Input transforms for Clinical Reminders.;04/17/2006
"RTN","PXRMINTR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMINTR",3,0)
 ;=======================================================
"RTN","PXRMINTR",4,0)
VASP(DA,X) ;Check for valid associate sponsor in file 811.6.
"RTN","PXRMINTR",5,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",6,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",7,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",8,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",9,0)
 ;Make sure that an associated sponsor does not point to itself.
"RTN","PXRMINTR",10,0)
 I X=DA D  Q 0
"RTN","PXRMINTR",11,0)
 . D EN^DDIOL("An associated sponsor cannot point to itself.")
"RTN","PXRMINTR",12,0)
 ;A sponsor cannot be an associated sponsor if it contains associated
"RTN","PXRMINTR",13,0)
 ;sponsors.
"RTN","PXRMINTR",14,0)
 I $D(^PXRMD(811.6,X,2,"B")) D  Q 0
"RTN","PXRMINTR",15,0)
 . D EN^DDIOL("A sponsor cannot be selected as an associated sponsor if it contains associated sponsors.")
"RTN","PXRMINTR",16,0)
 ;The class of an associated sponsor must match that of the sponsor.
"RTN","PXRMINTR",17,0)
 N ASCLASS,SCLASS
"RTN","PXRMINTR",18,0)
 S SCLASS=$P(^PXRMD(811.6,DA,0),U,2)
"RTN","PXRMINTR",19,0)
 S ASCLASS=$P(^PXRMD(811.6,X,0),U,2)
"RTN","PXRMINTR",20,0)
 I ASCLASS'=SCLASS D  Q 0
"RTN","PXRMINTR",21,0)
 . N TEXT
"RTN","PXRMINTR",22,0)
 . S TEXT="The associated sponsor's class is "_ASCLASS_", it does not match the sponsor's class which is "_SCLASS_". They must match."
"RTN","PXRMINTR",23,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",24,0)
 Q 1
"RTN","PXRMINTR",25,0)
 ;
"RTN","PXRMINTR",26,0)
 ;=======================================================
"RTN","PXRMINTR",27,0)
VCLASS(X) ;Check for valid CLASS field, ordinary users cannot create
"RTN","PXRMINTR",28,0)
 ;National classes.
"RTN","PXRMINTR",29,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",30,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",31,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",32,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",33,0)
 I (X["N"),(($G(PXRMINST)'=1)!(DUZ(0)'="@")) D  Q 0
"RTN","PXRMINTR",34,0)
 . D EN^DDIOL("You are not allowed to create a NATIONAL class")
"RTN","PXRMINTR",35,0)
 E  Q 1
"RTN","PXRMINTR",36,0)
 ;
"RTN","PXRMINTR",37,0)
 ;=======================================================
"RTN","PXRMINTR",38,0)
VDT(X) ;Check for a valid date/time. Input transform on 
"RTN","PXRMINTR",39,0)
 ;beginning date/time and ending date/time fields.
"RTN","PXRMINTR",40,0)
 N FMDATE,VALID
"RTN","PXRMINTR",41,0)
 S FMDATE=$$CTFMD^PXRMDATE(X)
"RTN","PXRMINTR",42,0)
 S VALID=$S(FMDATE=-1:0,1:1)
"RTN","PXRMINTR",43,0)
 I 'VALID D 
"RTN","PXRMINTR",44,0)
 . N TEXT
"RTN","PXRMINTR",45,0)
 . S TEXT=X_" is not a valid date/time"
"RTN","PXRMINTR",46,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",47,0)
 Q VALID
"RTN","PXRMINTR",48,0)
 ;
"RTN","PXRMINTR",49,0)
 ;=======================================================
"RTN","PXRMINTR",50,0)
VFINDING(X) ;Check X to see if it is a valid finding. This is the input
"RTN","PXRMINTR",51,0)
 ;transform on the .01 field of the reminder findings multiple. Data
"RTN","PXRMINTR",52,0)
 ;element 811.902,.01.
"RTN","PXRMINTR",53,0)
 ;Include stubs for all possible finding types in case we need input
"RTN","PXRMINTR",54,0)
 ;transforms on them.
"RTN","PXRMINTR",55,0)
 ;I X["AUTTEDT(" Q 1
"RTN","PXRMINTR",56,0)
 ;I X["AUTTEXAM(" Q 1
"RTN","PXRMINTR",57,0)
 I X["AUTTHF(" Q $$VHF(X)
"RTN","PXRMINTR",58,0)
 ;I X["AUTTIMM(" Q 1
"RTN","PXRMINTR",59,0)
 ;I X["AUTTSK(" Q 1
"RTN","PXRMINTR",60,0)
 ;I X["GMRD(120.51," Q 1
"RTN","PXRMINTR",61,0)
 I X["LAB(60," Q $$VLAB(X)
"RTN","PXRMINTR",62,0)
 ;I X["ORD(101.43," Q 1
"RTN","PXRMINTR",63,0)
 I X["PXD(811.2," Q $$VTAX(X)
"RTN","PXRMINTR",64,0)
 ;I X["PXRMD(811.4," Q 1
"RTN","PXRMINTR",65,0)
 ;I X["PXRMD(811.5," Q 1
"RTN","PXRMINTR",66,0)
 ;I X["PS(50.605," Q 1
"RTN","PXRMINTR",67,0)
 ;I X["PSDRUG(" Q 1
"RTN","PXRMINTR",68,0)
 ;I X["PSNDF(50.6," Q 1
"RTN","PXRMINTR",69,0)
 ;I X["RAMIS(71," Q 1
"RTN","PXRMINTR",70,0)
 I X["YTT(601," Q $$VMH(X)
"RTN","PXRMINTR",71,0)
 Q 1
"RTN","PXRMINTR",72,0)
 ;
"RTN","PXRMINTR",73,0)
 ;=======================================================
"RTN","PXRMINTR",74,0)
VHF(X) ;Check for valid health factor findings. It must be a factor, not
"RTN","PXRMINTR",75,0)
 ;a category.
"RTN","PXRMINTR",76,0)
 N CAT,IEN,TEMP,TYPE
"RTN","PXRMINTR",77,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",78,0)
 S TEMP=$G(^AUTTHF(IEN,0))
"RTN","PXRMINTR",79,0)
 S TYPE=$P(TEMP,U,10)
"RTN","PXRMINTR",80,0)
 I TYPE="C" D  Q 0
"RTN","PXRMINTR",81,0)
 . D EN^DDIOL("Category health factors cannot be used in reminder definitions!")
"RTN","PXRMINTR",82,0)
 I TYPE'="F" D  Q 0
"RTN","PXRMINTR",83,0)
 . D EN^DDIOL("Only factor health factors can be used in reminder definitions!")
"RTN","PXRMINTR",84,0)
 ;Make sure that the health factor has a category.
"RTN","PXRMINTR",85,0)
 S CAT=$P(TEMP,U,3)
"RTN","PXRMINTR",86,0)
 I CAT="" D  Q 0
"RTN","PXRMINTR",87,0)
 . D EN^DDIOL("Factor health factors must have a category!")
"RTN","PXRMINTR",88,0)
 Q 1
"RTN","PXRMINTR",89,0)
 ;
"RTN","PXRMINTR",90,0)
 ;=======================================================
"RTN","PXRMINTR",91,0)
VIGNAC(X) ;Check X to see if it contains valid IGNORE ON N/A codes.
"RTN","PXRMINTR",92,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",93,0)
 ;IGNORE ON N/A field is 8 characters. The valid codes are:
"RTN","PXRMINTR",94,0)
 ;   A - age
"RTN","PXRMINTR",95,0)
 ;   I - inactive
"RTN","PXRMINTR",96,0)
 ;   R - race
"RTN","PXRMINTR",97,0)
 ;   S - sex
"RTN","PXRMINTR",98,0)
 ;   * - wildcard matches anything.
"RTN","PXRMINTR",99,0)
 N LEN
"RTN","PXRMINTR",100,0)
 S LEN=$L(X)
"RTN","PXRMINTR",101,0)
 I (LEN>8)!(LEN<1) Q 0
"RTN","PXRMINTR",102,0)
 ;
"RTN","PXRMINTR",103,0)
 N TEMP,TEXT
"RTN","PXRMINTR",104,0)
 S TEMP=X
"RTN","PXRMINTR",105,0)
 S TEMP=$TR(TEMP,"A","")
"RTN","PXRMINTR",106,0)
 S TEMP=$TR(TEMP,"I","")
"RTN","PXRMINTR",107,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",108,0)
 S TEMP=$TR(TEMP,"S","")
"RTN","PXRMINTR",109,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",110,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",111,0)
 ;bad codes.
"RTN","PXRMINTR",112,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",113,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",114,0)
 . S TEXT=TEMP_" is not a valid IGNORE ON N/A code!"
"RTN","PXRMINTR",115,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",116,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",117,0)
 . S TEXT=TEMP_" are not valid IGNORE ON N/A codes!"
"RTN","PXRMINTR",118,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",119,0)
 Q 1
"RTN","PXRMINTR",120,0)
 ;
"RTN","PXRMINTR",121,0)
 ;=======================================================
"RTN","PXRMINTR",122,0)
VLAB(X) ;Check for valid lab findings. Everything but a panel is ok.
"RTN","PXRMINTR",123,0)
 I X'["LAB(60" Q 1
"RTN","PXRMINTR",124,0)
 N DATANAME,LAB0,LABTEST,SUB,TEST,TEXT
"RTN","PXRMINTR",125,0)
 S LABTEST=$P(X,";",1)
"RTN","PXRMINTR",126,0)
 ;DBIA #91-A
"RTN","PXRMINTR",127,0)
 S LAB0=^LAB(60,LABTEST,0)
"RTN","PXRMINTR",128,0)
 S SUB=$P(LAB0,U,4)
"RTN","PXRMINTR",129,0)
 ;BB and WK not allowed
"RTN","PXRMINTR",130,0)
 I (SUB="BB")!(SUB="WK") D  Q 0
"RTN","PXRMINTR",131,0)
 . S TEXT=SUB_" tests cannot be used as reminder findings."
"RTN","PXRMINTR",132,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",133,0)
 ;The concept of lab panel only applies to CH tests.
"RTN","PXRMINTR",134,0)
 I SUB'["CH" Q 1
"RTN","PXRMINTR",135,0)
 S DATANAME=$P(LAB0,U,5)
"RTN","PXRMINTR",136,0)
 ;If DATA NAME is null then it is a panel.
"RTN","PXRMINTR",137,0)
 I DATANAME="" D  Q 0
"RTN","PXRMINTR",138,0)
 . S TEXT(1)=$P(LAB0,U,1)_" is a lab panel, cannot be used for a reminder!"
"RTN","PXRMINTR",139,0)
 . S TEXT(2)="Contact your Lab ADPAC for help"
"RTN","PXRMINTR",140,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",141,0)
 Q 1
"RTN","PXRMINTR",142,0)
 ;
"RTN","PXRMINTR",143,0)
 ;=======================================================
"RTN","PXRMINTR",144,0)
VMH(X) ;The site must have the routine YTAPI installed in order to use
"RTN","PXRMINTR",145,0)
 ;mental health instrument findings.
"RTN","PXRMINTR",146,0)
 N EXISTS
"RTN","PXRMINTR",147,0)
 S EXISTS=$$EXISTS^PXRMEXCF("YTAPI")
"RTN","PXRMINTR",148,0)
 I EXISTS Q 1
"RTN","PXRMINTR",149,0)
 N TEXT
"RTN","PXRMINTR",150,0)
 S TEXT(1)="Your site does not have the routine YTAPI installed."
"RTN","PXRMINTR",151,0)
 S TEXT(2)="It is required in order to use Mental Instrument findings."
"RTN","PXRMINTR",152,0)
 S TEXT(3)="The routine was originally released in patch YS*5.01*53."
"RTN","PXRMINTR",153,0)
 S TEXT(4)=" "
"RTN","PXRMINTR",154,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",155,0)
 Q 0
"RTN","PXRMINTR",156,0)
 ;
"RTN","PXRMINTR",157,0)
 ;=======================================================
"RTN","PXRMINTR",158,0)
VNAME(NAME,FILE) ;Check for valid .01 value.
"RTN","PXRMINTR",159,0)
 ;For files 801.41, 811.2, 811.4 and 811.9 the name cannot start with VA-
"RTN","PXRMINTR",160,0)
 ;unless this is a national reminder.
"RTN","PXRMINTR",161,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",162,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",163,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",164,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",165,0)
 N STEXT,TEXT,VALID
"RTN","PXRMINTR",166,0)
 S VALID=1
"RTN","PXRMINTR",167,0)
 I (FILE=811.2)!(FILE=811.4)!(FILE=811.9)!(FILE=801.41) D
"RTN","PXRMINTR",168,0)
 . S STEXT=$E(NAME,1,3)
"RTN","PXRMINTR",169,0)
 . I (STEXT="VA-"),(($G(PXRMINST)'=1)!(DUZ(0)'="@")) D
"RTN","PXRMINTR",170,0)
 .. S TEXT=NAME_" cannot start with ""VA-"", reserved for national distribution!"
"RTN","PXRMINTR",171,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMINTR",172,0)
 .. H 2
"RTN","PXRMINTR",173,0)
 .. S VALID=0
"RTN","PXRMINTR",174,0)
 Q VALID
"RTN","PXRMINTR",175,0)
 ;
"RTN","PXRMINTR",176,0)
 ;=======================================================
"RTN","PXRMINTR",177,0)
VSPONSOR(X) ;Make sure file Class and Sponsor Class match.
"RTN","PXRMINTR",178,0)
 ;If there is no sponsor don't do the check.
"RTN","PXRMINTR",179,0)
 I X="" Q 1
"RTN","PXRMINTR",180,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",181,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",182,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",183,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",184,0)
 N FCLASS,FILENUM,SCLASS,TEXT,VALID
"RTN","PXRMINTR",185,0)
 S VALID=1
"RTN","PXRMINTR",186,0)
 I $G(X)="" Q VALID
"RTN","PXRMINTR",187,0)
 I $G(DIC)="" Q 0
"RTN","PXRMINTR",188,0)
 S FILENUM=+$P(@(DIC_"0)"),U,2)
"RTN","PXRMINTR",189,0)
 S FCLASS=$P(@(DIC_DA_",100)"),U,1)
"RTN","PXRMINTR",190,0)
 S SCLASS=$P(^PXRMD(811.6,X,100),U,1)
"RTN","PXRMINTR",191,0)
 I SCLASS'=FCLASS D
"RTN","PXRMINTR",192,0)
 . S FCLASS=$$EXTERNAL^DILFD(FILENUM,100,"",FCLASS)
"RTN","PXRMINTR",193,0)
 . S SCLASS=$$EXTERNAL^DILFD(811.6,100,"",SCLASS)
"RTN","PXRMINTR",194,0)
 . S TEXT="Sponsor Class is "_SCLASS_", File Class is "_FCLASS_" they must match!"
"RTN","PXRMINTR",195,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",196,0)
 . S VALID=0
"RTN","PXRMINTR",197,0)
 Q VALID
"RTN","PXRMINTR",198,0)
 ;
"RTN","PXRMINTR",199,0)
 ;=======================================================
"RTN","PXRMINTR",200,0)
VTAX(X) ;Make sure the taxonomy is active.
"RTN","PXRMINTR",201,0)
 N IEN,INACTIVE
"RTN","PXRMINTR",202,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",203,0)
 S INACTIVE=$P(^PXD(811.2,IEN,0),U,6)
"RTN","PXRMINTR",204,0)
 I INACTIVE D  Q 0
"RTN","PXRMINTR",205,0)
 . D EN^DDIOL("This taxonomy is inactive and cannot be selected.")
"RTN","PXRMINTR",206,0)
 E  Q 1
"RTN","PXRMINTR",207,0)
 ;
"RTN","PXRMINTR",208,0)
 ;=======================================================
"RTN","PXRMINTR",209,0)
VTPER(X) ;Check for valid time period. They must be of the form NS,
"RTN","PXRMINTR",210,0)
 ; where N is a number and S is D for days, M for months, or Y for years.
"RTN","PXRMINTR",211,0)
 N LEN
"RTN","PXRMINTR",212,0)
 S X=$$UP^XLFSTR(X)
"RTN","PXRMINTR",213,0)
 S LEN=$L(X)
"RTN","PXRMINTR",214,0)
 I (LEN>5)!(LEN<2) Q 0
"RTN","PXRMINTR",215,0)
 I ((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) Q 0
"RTN","PXRMINTR",216,0)
 Q 1
"RTN","PXRMINTR",217,0)
 ;
"RTN","PXRMINTR",218,0)
 ;=======================================================
"RTN","PXRMINTR",219,0)
VUSAGE(X) ;Check X to see if it contains valid USAGE codes.
"RTN","PXRMINTR",220,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",221,0)
 ;USAGE field is 10 characters. The valid codes are:
"RTN","PXRMINTR",222,0)
 ;   C - CPRS
"RTN","PXRMINTR",223,0)
 ;   L - Reminder Patient List
"RTN","PXRMINTR",224,0)
 ;   P - Patient
"RTN","PXRMINTR",225,0)
 ;   R - Reports
"RTN","PXRMINTR",226,0)
 ;   X - Extracts
"RTN","PXRMINTR",227,0)
 ;   * - Wildcard matches anything, except P.
"RTN","PXRMINTR",228,0)
 N LEN
"RTN","PXRMINTR",229,0)
 S LEN=$L(X)
"RTN","PXRMINTR",230,0)
 I (LEN>10)!(LEN<1) Q 0
"RTN","PXRMINTR",231,0)
 ;
"RTN","PXRMINTR",232,0)
 N TEMP,TEXT
"RTN","PXRMINTR",233,0)
 S TEMP=$$UP^XLFSTR(X)
"RTN","PXRMINTR",234,0)
 S TEMP=$TR(TEMP,"C","")
"RTN","PXRMINTR",235,0)
 S TEMP=$TR(TEMP,"L","")
"RTN","PXRMINTR",236,0)
 S TEMP=$TR(TEMP,"P","")
"RTN","PXRMINTR",237,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",238,0)
 S TEMP=$TR(TEMP,"X","")
"RTN","PXRMINTR",239,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",240,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",241,0)
 ;bad codes.
"RTN","PXRMINTR",242,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",243,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",244,0)
 . S TEXT=TEMP_" is not a valid USAGE code!"
"RTN","PXRMINTR",245,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",246,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",247,0)
 . S TEXT=TEMP_" are not valid USAGE codes!"
"RTN","PXRMINTR",248,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",249,0)
 Q 1
"RTN","PXRMLAB")
0^143^B7845306
"RTN","PXRMLAB",1,0)
PXRMLAB ; SLC/PKR - Handle laboratory test findings. ;03/02/2006
"RTN","PXRMLAB",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLAB",3,0)
 ;
"RTN","PXRMLAB",4,0)
 ;=============================================
"RTN","PXRMLAB",5,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate lab findings.
"RTN","PXRMLAB",6,0)
 D EVALFI^PXRMINDX(DFN,.DEFARR,ENODE,.FIEVAL)
"RTN","PXRMLAB",7,0)
 Q
"RTN","PXRMLAB",8,0)
 ;
"RTN","PXRMLAB",9,0)
 ;=============================================
"RTN","PXRMLAB",10,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Evaluate lab term findings
"RTN","PXRMLAB",11,0)
 ;for patient lists.
"RTN","PXRMLAB",12,0)
 D EVALPL^PXRMINDL(.FINDPA,ENODE,.TERMARR,PLIST)
"RTN","PXRMLAB",13,0)
 Q
"RTN","PXRMLAB",14,0)
 ;
"RTN","PXRMLAB",15,0)
 ;=============================================
"RTN","PXRMLAB",16,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate lab terms.
"RTN","PXRMLAB",17,0)
 D EVALTERM^PXRMINDX(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL)
"RTN","PXRMLAB",18,0)
 Q
"RTN","PXRMLAB",19,0)
 ;
"RTN","PXRMLAB",20,0)
 ;=============================================
"RTN","PXRMLAB",21,0)
GETDATA(DASP,FIEVT) ;Return Lab data. The first piece of DASP is the item.
"RTN","PXRMLAB",22,0)
 N DAS,DATA,ITEM
"RTN","PXRMLAB",23,0)
 ;DBIA #4245
"RTN","PXRMLAB",24,0)
 S ITEM=$P(DASP,"~",1)
"RTN","PXRMLAB",25,0)
 S DAS=$P(DASP,"~",2)
"RTN","PXRMLAB",26,0)
 D LRPXRM^LRPXAPI(.DATA,DAS,ITEM)
"RTN","PXRMLAB",27,0)
 S FIEVT("DATA")=DATA
"RTN","PXRMLAB",28,0)
 S FIEVT("TEST NAME")=$P(DATA,U,2)
"RTN","PXRMLAB",29,0)
 I DAS["CH" S FIEVT("VALUE")=$P(DATA,U,3),FIEVT("FLAG")=$P(DATA,U,4)
"RTN","PXRMLAB",30,0)
 E  S (FIEVT("VALUE"),FIEVT("FLAG"))=""
"RTN","PXRMLAB",31,0)
 I $D(DATA("SPECIMEN")) S FIEVT("SPECIMEN")=$P(DATA("SPECIMEN"),U,2)
"RTN","PXRMLAB",32,0)
 Q
"RTN","PXRMLAB",33,0)
 ;
"RTN","PXRMLAB",34,0)
 ;=============================================
"RTN","PXRMLAB",35,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMLAB",36,0)
 N DATE,FLAG,IND,JND,NAME,NOUT,TEXTOUT,TEST,VALUE
"RTN","PXRMLAB",37,0)
 S TEST=IFIEVAL("TEST NAME")
"RTN","PXRMLAB",38,0)
 S NAME="Laboratory test: "_TEST_" = "
"RTN","PXRMLAB",39,0)
 S IND=0
"RTN","PXRMLAB",40,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMLAB",41,0)
 . S VALUE=$G(IFIEVAL(IND,"VALUE"))
"RTN","PXRMLAB",42,0)
 . S FLAG=$G(IFIEVAL(IND,"FLAG"))
"RTN","PXRMLAB",43,0)
 . I FLAG'="" S VALUE=VALUE_FLAG
"RTN","PXRMLAB",44,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMLAB",45,0)
 . S TEMP=NAME_VALUE_" ("_$$EDATE^PXRMDATE(DATE)_")"
"RTN","PXRMLAB",46,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMLAB",47,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMLAB",48,0)
 . S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMLAB",49,0)
 Q
"RTN","PXRMLAB",50,0)
 ;
"RTN","PXRMLAB",51,0)
 ;=============================================
"RTN","PXRMLAB",52,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMLAB",53,0)
 ;maintenance output.
"RTN","PXRMLAB",54,0)
 N DATE,FLAG,IND,JND,NOUT,TEMP,TEXTOUT,TEST,VALUE
"RTN","PXRMLAB",55,0)
 S TEST=IFIEVAL("TEST NAME")
"RTN","PXRMLAB",56,0)
 S TEMP="Laboratory test: "_TEST
"RTN","PXRMLAB",57,0)
 I $D(IFIEVAL("SPECIMEN")) S TEMP=TEMP_"; specimen: "_IFIEVAL("SPECIMEN")
"RTN","PXRMLAB",58,0)
 S NLINES=NLINES+1
"RTN","PXRMLAB",59,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_TEMP
"RTN","PXRMLAB",60,0)
 S IND=0
"RTN","PXRMLAB",61,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMLAB",62,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMLAB",63,0)
 . S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMLAB",64,0)
 . S VALUE=$G(IFIEVAL(IND,"VALUE"))
"RTN","PXRMLAB",65,0)
 . S FLAG=$G(IFIEVAL(IND,"FLAG"))
"RTN","PXRMLAB",66,0)
 . I VALUE'="" S TEMP=TEMP_" value - "_VALUE
"RTN","PXRMLAB",67,0)
 . I FLAG'="" S TEMP=TEMP_" "_FLAG
"RTN","PXRMLAB",68,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMLAB",69,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMLAB",70,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMLAB",71,0)
 Q
"RTN","PXRMLAB",72,0)
 ;
"RTN","PXRMLCD")
0^52^B2868685
"RTN","PXRMLCD",1,0)
PXRMLCD ; SLC/PKR - Reminder Patient List Patients ;06/30/2005
"RTN","PXRMLCD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLCD",3,0)
 ;
"RTN","PXRMLCD",4,0)
 ;Display list creation documentation.
"RTN","PXRMLCD",5,0)
 ;===========================================================
"RTN","PXRMLCD",6,0)
DCDOC ;Display creation documentation.
"RTN","PXRMLCD",7,0)
 N IND,LISTIEN,VALMY
"RTN","PXRMLCD",8,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMLCD",9,0)
 ;If there is no list quit.
"RTN","PXRMLCD",10,0)
 I '$D(VALMY) Q
"RTN","PXRMLCD",11,0)
 ;PXRMDONE is newed in PXRMLPU
"RTN","PXRMLCD",12,0)
 S IND="",PXRMDONE=0
"RTN","PXRMLCD",13,0)
 F  S IND=$O(VALMY(IND)) Q:(IND="")!(PXRMDONE)  D
"RTN","PXRMLCD",14,0)
 . S LISTIEN=^TMP("PXRMLPU",$J,"IDX",IND,IND)
"RTN","PXRMLCD",15,0)
 . D EN^PXRMLCD(LISTIEN)
"RTN","PXRMLCD",16,0)
 S VALMBCK="R"
"RTN","PXRMLCD",17,0)
 Q
"RTN","PXRMLCD",18,0)
 ;
"RTN","PXRMLCD",19,0)
 ;===========================================================
"RTN","PXRMLCD",20,0)
EN(LISTIEN) ;
"RTN","PXRMLCD",21,0)
 N VALMBCK,VALMBG,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMLCD",22,0)
 K ^TMP("PXRMLCD",$J)
"RTN","PXRMLCD",23,0)
 I $D(^PXRMXP(810.5,LISTIEN,200)) D
"RTN","PXRMLCD",24,0)
 . M ^TMP("PXRMLCD",$J)=^PXRMXP(810.5,LISTIEN,200)
"RTN","PXRMLCD",25,0)
 . S VALMCNT=$P(^PXRMXP(810.5,LISTIEN,200,0),U,4)
"RTN","PXRMLCD",26,0)
 I '$D(^PXRMXP(810.5,LISTIEN,200)) D
"RTN","PXRMLCD",27,0)
 . S ^TMP("PXRMLCD",$J,1,0)="No documentation is available."
"RTN","PXRMLCD",28,0)
 . S VALMCNT=1
"RTN","PXRMLCD",29,0)
 D EN^VALM("PXRM PATIENT LIST CREATION DOC")
"RTN","PXRMLCD",30,0)
 Q
"RTN","PXRMLCD",31,0)
 ;
"RTN","PXRMLCD",32,0)
 ;===========================================================
"RTN","PXRMLCD",33,0)
EXIT ;Exit code
"RTN","PXRMLCD",34,0)
 K ^TMP("PXRMLCD",$J)
"RTN","PXRMLCD",35,0)
 D CLEAN^VALM10
"RTN","PXRMLCD",36,0)
 D FULL^VALM1
"RTN","PXRMLCD",37,0)
 S VALMBCK="R"
"RTN","PXRMLCD",38,0)
 Q
"RTN","PXRMLCD",39,0)
 ;
"RTN","PXRMLCD",40,0)
 ;===========================================================
"RTN","PXRMLCD",41,0)
HDR ; Header code
"RTN","PXRMLCD",42,0)
 S VALMHDR(1)="Documentation for creation of patient list "_$P(^PXRMXP(810.5,LISTIEN,0),U,1)
"RTN","PXRMLCD",43,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMLCD",44,0)
 Q
"RTN","PXRMLCD",45,0)
 ;
"RTN","PXRMLCD",46,0)
 ;===========================================================
"RTN","PXRMLCD",47,0)
HELP ;Help code
"RTN","PXRMLCD",48,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","PXRMLCD",49,0)
 Q
"RTN","PXRMLCD",50,0)
 ;
"RTN","PXRMLCR")
0^42^B36285554
"RTN","PXRMLCR",1,0)
PXRMLCR ; SLC/PJH - Create Patient List from individual finding rule; 08/03/2006
"RTN","PXRMLCR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLCR",3,0)
 ; 
"RTN","PXRMLCR",4,0)
 ; Called from PXRM PATIENT LIST CREATE protocol
"RTN","PXRMLCR",5,0)
 ;
"RTN","PXRMLCR",6,0)
START N BEG,DUOUT,DTOUT,END,LIT,PXRMDPAT,PXRMLIST,PXRMNODE,PXRMRULE,PXRMTPAT
"RTN","PXRMLCR",7,0)
 N TEXT
"RTN","PXRMLCR",8,0)
 ;Initialise
"RTN","PXRMLCR",9,0)
 K ^TMP("PXRMLCR",$J)
"RTN","PXRMLCR",10,0)
 ;Node for ^TMP lists created in PXRMRULE
"RTN","PXRMLCR",11,0)
 S PXRMNODE="PXRMRULE",LIT="Patient List"
"RTN","PXRMLCR",12,0)
 ;Reset screen mode
"RTN","PXRMLCR",13,0)
 W IORESET
"RTN","PXRMLCR",14,0)
 ;Set prompt text
"RTN","PXRMLCR",15,0)
 S TEXT="Select PATIENT LIST name: "
"RTN","PXRMLCR",16,0)
 ;Select Patient List
"RTN","PXRMLCR",17,0)
LIST D PLIST(.PXRMLIST,TEXT,"") I $D(DUOUT)!$D(DTOUT) D  Q
"RTN","PXRMLCR",18,0)
 . I $G(PXRMLIST)="" Q
"RTN","PXRMLCR",19,0)
 . I $P($G(^PXRMXP(810.5,PXRMLIST,0)),U,4)'="" Q
"RTN","PXRMLCR",20,0)
 . S DA=PXRMLIST,DIK="^PXRMXP(810.5," D ^DIK
"RTN","PXRMLCR",21,0)
 ;
"RTN","PXRMLCR",22,0)
SECURE ;option to secure the list
"RTN","PXRMLCR",23,0)
 K PATCREAT
"RTN","PXRMLCR",24,0)
 I $D(PATCREAT)=0 S PATCREAT="N" D ASK^PXRMXD(.PATCREAT,"Secure list?: ",2) Q:$D(DTOUT)  G:$D(DUOUT) START
"RTN","PXRMLCR",25,0)
 ;
"RTN","PXRMLCR",26,0)
PURGE ;Option to purge the list
"RTN","PXRMLCR",27,0)
 K PLISTPUG
"RTN","PXRMLCR",28,0)
 S PLISTPUG="N" D ASK^PXRMXD(.PLISTPUG,"Purge Patient List after 5 years?: ",5) Q:$D(DTOUT)  G:$D(DUOUT) SECURE
"RTN","PXRMLCR",29,0)
 ;Select rule set.
"RTN","PXRMLCR",30,0)
RULE D LRULE(.PXRMRULE) Q:$D(DTOUT)  G:$D(DUOUT) LIST
"RTN","PXRMLCR",31,0)
 ;Select Date Range
"RTN","PXRMLCR",32,0)
DATE D DATES^PXRMEUT(.BEG,.END,LIT) Q:$D(DTOUT)  G:$D(DUOUT) RULE
"RTN","PXRMLCR",33,0)
 ;
"RTN","PXRMLCR",34,0)
 ;Ask whether to include deceased and test patients.
"RTN","PXRMLCR",35,0)
DPAT S PXRMDPAT=$$ASKYN^PXRMEUT("N","Include deceased patients on the list")
"RTN","PXRMLCR",36,0)
 Q:$D(DTOUT)  G:$D(DUOUT) DATE
"RTN","PXRMLCR",37,0)
TPAT S PXRMTPAT=$$ASKYN^PXRMEUT("N","Include test patients on the list")
"RTN","PXRMLCR",38,0)
 Q:$D(DTOUT)  G:$D(DUOUT) DPAT
"RTN","PXRMLCR",39,0)
 ;Build patient list in background
"RTN","PXRMLCR",40,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PXRMLCR",41,0)
 S ZTDESC="CREATE PATIENT LIST"
"RTN","PXRMLCR",42,0)
 S ZTRTN="RUN^PXRMLCR(PXRMRULE,PXRMLIST,PXRMNODE,BEG,END,PXRMDPAT,PXRMTPAT)"
"RTN","PXRMLCR",43,0)
 S ZTSAVE("BEG")=""
"RTN","PXRMLCR",44,0)
 S ZTSAVE("END")=""
"RTN","PXRMLCR",45,0)
 S ZTSAVE("PATCREAT")=""
"RTN","PXRMLCR",46,0)
 S ZTSAVE("PXRMDPAT")=""
"RTN","PXRMLCR",47,0)
 S ZTSAVE("PXRMLIST")=""
"RTN","PXRMLCR",48,0)
 S ZTSAVE("PXRMNODE")=""
"RTN","PXRMLCR",49,0)
 S ZTSAVE("PXRMRULE")=""
"RTN","PXRMLCR",50,0)
 S ZTSAVE("PXRMTPAT")=""
"RTN","PXRMLCR",51,0)
 S ZTSAVE("PLISTPUG")=""
"RTN","PXRMLCR",52,0)
 S ZTIO=""
"RTN","PXRMLCR",53,0)
 ;
"RTN","PXRMLCR",54,0)
 ;Select and verify start date/time for task
"RTN","PXRMLCR",55,0)
 N DIR,DTOUT,DUOUT,MINDT,SDTIME,STIME,X,Y
"RTN","PXRMLCR",56,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMLCR",57,0)
 W !,"Queue the "_ZTDESC_" for "_$P($G(^PXRMXP(810.5,PXRMLIST,0)),U)_": "
"RTN","PXRMLCR",58,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMLCR",59,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMLCR",60,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMLCR",61,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMLCR",62,0)
 D ^DIR
"RTN","PXRMLCR",63,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMLCR",64,0)
 S SDTIME=Y
"RTN","PXRMLCR",65,0)
 ;
"RTN","PXRMLCR",66,0)
 ;Put the task into the queue.
"RTN","PXRMLCR",67,0)
 S ZTDTH=SDTIME
"RTN","PXRMLCR",68,0)
 D ^%ZTLOAD
"RTN","PXRMLCR",69,0)
 W !,"Task number ",ZTSK," queued." H 2
"RTN","PXRMLCR",70,0)
EXIT Q
"RTN","PXRMLCR",71,0)
 ;
"RTN","PXRMLCR",72,0)
HELP(CALL) ;General help text routine
"RTN","PXRMLCR",73,0)
 N HTEXT
"RTN","PXRMLCR",74,0)
 I CALL=1 D
"RTN","PXRMLCR",75,0)
 .S HTEXT(1)="Enter 'Y' to overwrite this existing list. Enter 'N' to"
"RTN","PXRMLCR",76,0)
 .S HTEXT(2)="use a different patient list name."
"RTN","PXRMLCR",77,0)
 ;
"RTN","PXRMLCR",78,0)
 I CALL=2 D
"RTN","PXRMLCR",79,0)
 .S HTEXT(1)="Enter 'Y' to make the list private or 'N' to make it public."
"RTN","PXRMLCR",80,0)
 .S HTEXT(2)="You can give other users access to your private lists in the Patient List Menu screens."
"RTN","PXRMLCR",81,0)
 ;
"RTN","PXRMLCR",82,0)
 I CALL=3 D
"RTN","PXRMLCR",83,0)
 .S HTEXT(1)="Enter Y to save the patient to a Reminder Patient List. Enter N to not save the output."
"RTN","PXRMLCR",84,0)
 ;
"RTN","PXRMLCR",85,0)
 I CALL=4 D
"RTN","PXRMLCR",86,0)
 .S HTEXT(1)="Enter Y to turn on Debug output."
"RTN","PXRMLCR",87,0)
 .S HTEXT(2)="The debug output will send a series of mailman message to the requestor of the report"
"RTN","PXRMLCR",88,0)
 .S HTEXT(3)="**WARNING** the reminder report will take longer to run if you turn on this option!"
"RTN","PXRMLCR",89,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMLCR",90,0)
 Q
"RTN","PXRMLCR",91,0)
 ;
"RTN","PXRMLCR",92,0)
PLIST(LIST,TEXT,IENO) ;Select Patient List
"RTN","PXRMLCR",93,0)
 N X,Y,DIC,DLAYGO
"RTN","PXRMLCR",94,0)
PL1 S DIC=810.5,DLAYGO=DIC,DIC(0)="QAEMZL"
"RTN","PXRMLCR",95,0)
 S DIC("A")=TEXT
"RTN","PXRMLCR",96,0)
 S DIC("S")="I $P($G(^(100)),U)'=""N"""
"RTN","PXRMLCR",97,0)
 S DIC("DR")="100///L"
"RTN","PXRMLCR",98,0)
 W !
"RTN","PXRMLCR",99,0)
 D ^DIC
"RTN","PXRMLCR",100,0)
 I X="" W !,"A patient list name must be entered" G PL1
"RTN","PXRMLCR",101,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMLCR",102,0)
 I Y=-1 S DUOUT=1
"RTN","PXRMLCR",103,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMLCR",104,0)
 ;
"RTN","PXRMLCR",105,0)
 ;I copy mode dissallow copy to same list
"RTN","PXRMLCR",106,0)
 I IENO=$P(Y,U) W !,"A patient list cannot be copied to itself." G PL1
"RTN","PXRMLCR",107,0)
 ;
"RTN","PXRMLCR",108,0)
 I ($P(Y,U,3)=1) S LIST=$P(Y,U) Q
"RTN","PXRMLCR",109,0)
 ;Check if OK to overwrite
"RTN","PXRMLCR",110,0)
 N OWRITE
"RTN","PXRMLCR",111,0)
 S OWRITE=$$ASKYN^PXRMEUT("N","Okay to overwite "_$P(Y,U,2),"PXRMLCR",1)
"RTN","PXRMLCR",112,0)
 Q:$D(DTOUT)  G:$D(DUOUT)!('OWRITE) PL1
"RTN","PXRMLCR",113,0)
 S OWRITE=$$LDELOK^PXRMEUT($P(Y,U,1))
"RTN","PXRMLCR",114,0)
 I 'OWRITE D  G PL1
"RTN","PXRMLCR",115,0)
 . W !,"In order to overwrite a list you must be the creator or a Reminder Manager!"
"RTN","PXRMLCR",116,0)
 ;Return list ien
"RTN","PXRMLCR",117,0)
 S LIST=$P(Y,U)
"RTN","PXRMLCR",118,0)
 Q
"RTN","PXRMLCR",119,0)
 ;
"RTN","PXRMLCR",120,0)
LRULE(RULE) ;Select List Rule
"RTN","PXRMLCR",121,0)
 N X,Y,DIC
"RTN","PXRMLCR",122,0)
LR1 S DIC=810.4,DIC(0)="QAEMZ"
"RTN","PXRMLCR",123,0)
 S DIC("A")="Select LIST RULE SET: "
"RTN","PXRMLCR",124,0)
 ;Only allow rule sets with components
"RTN","PXRMLCR",125,0)
 S DIC("S")="I $P(^(0),U,3)=3"
"RTN","PXRMLCR",126,0)
 W !
"RTN","PXRMLCR",127,0)
 D ^DIC
"RTN","PXRMLCR",128,0)
 I X="" W !,"A list rule set name must be entered" G LR1
"RTN","PXRMLCR",129,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMLCR",130,0)
 I Y=-1 S DUOUT=1
"RTN","PXRMLCR",131,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMLCR",132,0)
 ;Return rule ien
"RTN","PXRMLCR",133,0)
 S RULE=$P(Y,U)
"RTN","PXRMLCR",134,0)
 ;Check that rule set is valid
"RTN","PXRMLCR",135,0)
 N ERROR,LR,LRTYPE,NL,OP,SEQ,SUB,TEMP,TEXT
"RTN","PXRMLCR",136,0)
 S SUB=$O(^PXRM(810.4,RULE,30,0))
"RTN","PXRMLCR",137,0)
 I SUB="" W !,"Rule set has no component rules" G LR1
"RTN","PXRMLCR",138,0)
 S (ERROR,SUB)=0,NL=1
"RTN","PXRMLCR",139,0)
 F  S SUB=$O(^PXRM(810.4,RULE,30,SUB)) Q:'SUB  D  Q:ERROR
"RTN","PXRMLCR",140,0)
 .S TEMP=$G(^PXRM(810.4,RULE,30,SUB,0))
"RTN","PXRMLCR",141,0)
 .S SEQ=$P(TEMP,U,1),LR=$P(TEMP,U,2),OP=$P(TEMP,U,3)
"RTN","PXRMLCR",142,0)
 .I SEQ="" S NL=NL+1,TEXT(NL)=" Sequence is missing.",ERROR=1
"RTN","PXRMLCR",143,0)
 .I LR="" S NL=NL+1,TEXT(NL)=" List rule is missing.",ERROR=1
"RTN","PXRMLCR",144,0)
 .I OP="" S NL=NL+1,TEXT(NL)=" Operation is missing.",ERROR=1
"RTN","PXRMLCR",145,0)
 .;The Insert operation can only be used with finding rules.
"RTN","PXRMLCR",146,0)
 .I OP="F",LR'="" D
"RTN","PXRMLCR",147,0)
 ..S LRTYPE=$P(^PXRM(810.4,LR,0),U,3)
"RTN","PXRMLCR",148,0)
 ..I LRTYPE'=1 S NL=NL+1,TEXT(NL)=" Insert operation can only be used with finding rules.",ERROR=1
"RTN","PXRMLCR",149,0)
 I ERROR D  G LR1
"RTN","PXRMLCR",150,0)
 .S TEXT(1)="The rule set is incomplete or incorrect:"
"RTN","PXRMLCR",151,0)
 .D EN^DDIOL(.TEXT)
"RTN","PXRMLCR",152,0)
 Q
"RTN","PXRMLCR",153,0)
 ;
"RTN","PXRMLCR",154,0)
 ;Build list and clear ^TMP files
"RTN","PXRMLCR",155,0)
RUN(PXRMRULE,PXRMLIST,PXRMNODE,BEG,END,PXRMDPAT,PXRMTPAT) ;
"RTN","PXRMLCR",156,0)
 ;Process rule set and update final patient list
"RTN","PXRMLCR",157,0)
 D START^PXRMRULE(PXRMRULE,PXRMLIST,PXRMNODE,BEG,END,"","","",PXRMDPAT,PXRMTPAT)
"RTN","PXRMLCR",158,0)
 ;Clear ^TMP lists created for rule
"RTN","PXRMLCR",159,0)
 D CLEAR^PXRMRULE(PXRMRULE,PXRMNODE)
"RTN","PXRMLCR",160,0)
 Q
"RTN","PXRMLCR",161,0)
 ;
"RTN","PXRMLCR",162,0)
REMOVE(IEN) ;
"RTN","PXRMLCR",163,0)
 S $P(^PXRM(810.4,IEN,0),U,10)=""
"RTN","PXRMLCR",164,0)
 Q "@1"
"RTN","PXRMLCR",165,0)
 ;
"RTN","PXRMLHLP")
0^160^B22028636
"RTN","PXRMLHLP",1,0)
PXRMLHLP ; SLC/PJH,AGP - Reminder Patient List help. ;05/31/2006
"RTN","PXRMLHLP",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLHLP",3,0)
 ;======================================================================
"RTN","PXRMLHLP",4,0)
LOAD(SUB) ;
"RTN","PXRMLHLP",5,0)
 ;If necessary load the help text into the ^TMP array.
"RTN","PXRMLHLP",6,0)
 ;Check if the help text has already been loaded.
"RTN","PXRMLHLP",7,0)
 I $D(^TMP(SUB,$J,"VALMCNT")) D  Q
"RTN","PXRMLHLP",8,0)
 . S VALMCNT=^TMP(SUB,$J,"VALMCNT")
"RTN","PXRMLHLP",9,0)
 ;
"RTN","PXRMLHLP",10,0)
 N DONE,IND,LABEL,TEXT
"RTN","PXRMLHLP",11,0)
 S LABEL=$S(SUB["LPP":"TX1",SUB["LPUH":"TX2",SUB["LPAH":"TX3",1:"NOHLP")
"RTN","PXRMLHLP",12,0)
 S DONE=0
"RTN","PXRMLHLP",13,0)
 S VALMCNT=0
"RTN","PXRMLHLP",14,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMLHLP",15,0)
 . S TEXT=$P($T(@(LABEL_"+"_IND)),";;",2)
"RTN","PXRMLHLP",16,0)
 . I TEXT="**End Text**" S DONE=1 Q
"RTN","PXRMLHLP",17,0)
 . S VALMCNT=VALMCNT+1,^TMP(SUB,$J,VALMCNT,0)=TEXT
"RTN","PXRMLHLP",18,0)
 S ^TMP(SUB,$J,"VALMCNT")=VALMCNT
"RTN","PXRMLHLP",19,0)
 Q
"RTN","PXRMLHLP",20,0)
 ;
"RTN","PXRMLHLP",21,0)
 ;======================================================================
"RTN","PXRMLHLP",22,0)
TX1 ;Help text for a selected patient list
"RTN","PXRMLHLP",23,0)
 ;;The following actions are available:
"RTN","PXRMLHLP",24,0)
 ;;
"RTN","PXRMLHLP",25,0)
 ;;CV   Change View
"RTN","PXRMLHLP",26,0)
 ;;     Toggle between display by patient name and display by patient
"RTN","PXRMLHLP",27,0)
 ;;     name within facility. Sorting by facility is possible only if
"RTN","PXRMLHLP",28,0)
 ;;     the patient's facility has been stored with the list.
"RTN","PXRMLHLP",29,0)
 ;;
"RTN","PXRMLHLP",30,0)
 ;;HSA  Print Health Summary (All Patients)
"RTN","PXRMLHLP",31,0)
 ;;     Print a Health Summary for all patients on the patient list.
"RTN","PXRMLHLP",32,0)
 ;;
"RTN","PXRMLHLP",33,0)
 ;;HSI  Print Health Summary (Individual Patients)
"RTN","PXRMLHLP",34,0)
 ;;     Print a Health Summary for selected patients.
"RTN","PXRMLHLP",35,0)
 ;;
"RTN","PXRMLHLP",36,0)
 ;;DEM  Demographic Report
"RTN","PXRMLHLP",37,0)
 ;;     Display specific demographic data for the patients on the 
"RTN","PXRMLHLP",38,0)
 ;;     list in delimited or formatted output.
"RTN","PXRMLHLP",39,0)
 ;;
"RTN","PXRMLHLP",40,0)
 ;;ED   Edit List (Available only to creator of list)
"RTN","PXRMLHLP",41,0)
 ;;     Edit the name and type of list.
"RTN","PXRMLHLP",42,0)
 ;;     
"RTN","PXRMLHLP",43,0)
 ;;USR  View User (Available only to creator of list)
"RTN","PXRMLHLP",44,0)
 ;;     Add, delete, and view users who have access to the list.
"RTN","PXRMLHLP",45,0)
 ;;
"RTN","PXRMLHLP",46,0)
 ;;QU  Quit
"RTN","PXRMLHLP",47,0)
 ;;**End Text**
"RTN","PXRMLHLP",48,0)
 Q
"RTN","PXRMLHLP",49,0)
 ;
"RTN","PXRMLHLP",50,0)
TX2 ;Main help text for patient lists
"RTN","PXRMLHLP",51,0)
 ;;
"RTN","PXRMLHLP",52,0)
 ;;Patient Lists have two levels of control: Authorized User and Creator.
"RTN","PXRMLHLP",53,0)
 ;;
"RTN","PXRMLHLP",54,0)
 ;;Authorized User:
"RTN","PXRMLHLP",55,0)
 ;;  Authorized Users can have one of two levels of control assigned to 
"RTN","PXRMLHLP",56,0)
 ;;  them: View only access and Full control. Full Control allows an
"RTN","PXRMLHLP",57,0)
 ;;  authorized user full access to a Patient List; the only thing an 
"RTN","PXRMLHLP",58,0)
 ;;  authorized user cannot do is delete the list. 
"RTN","PXRMLHLP",59,0)
 ;;
"RTN","PXRMLHLP",60,0)
 ;;Creator:
"RTN","PXRMLHLP",61,0)
 ;;  Can view a list, copy a list into a new list, delete a list, and 
"RTN","PXRMLHLP",62,0)
 ;;  can copy a list into a OR/RR team list. A Creator is the only
"RTN","PXRMLHLP",63,0)
 ;;  person who can delete a private patient list.
"RTN","PXRMLHLP",64,0)
 ;;
"RTN","PXRMLHLP",65,0)
 ;;The following actions are available:
"RTN","PXRMLHLP",66,0)
 ;;
"RTN","PXRMLHLP",67,0)
 ;;CO  Copy Patient List
"RTN","PXRMLHLP",68,0)
 ;;    Copy all patients in the patient list into a new local patient
"RTN","PXRMLHLP",69,0)
 ;;    list.
"RTN","PXRMLHLP",70,0)
 ;;
"RTN","PXRMLHLP",71,0)
 ;;COE Copy Patient List to OE/RR Team
"RTN","PXRMLHLP",72,0)
 ;;    Copy all patients in the patient list into a new OE/RR Team 
"RTN","PXRMLHLP",73,0)
 ;;    list.
"RTN","PXRMLHLP",74,0)
 ;;
"RTN","PXRMLHLP",75,0)
 ;;CR  Create Patient List
"RTN","PXRMLHLP",76,0)
 ;;    Use a list rule set to create a new local patient list.
"RTN","PXRMLHLP",77,0)
 ;;
"RTN","PXRMLHLP",78,0)
 ;;DE  Delete Patient List (Creator Only)
"RTN","PXRMLHLP",79,0)
 ;;    Delete selected local patient lists.
"RTN","PXRMLHLP",80,0)
 ;;    
"RTN","PXRMLHLP",81,0)
 ;;DCD Display Creation Documentation
"RTN","PXRMLHLP",82,0)
 ;;    Display documentation that shows how the patient list was
"RTN","PXRMLHLP",83,0)
 ;;    created.
"RTN","PXRMLHLP",84,0)
 ;;    
"RTN","PXRMLHLP",85,0)
 ;;DSP Display Patient List
"RTN","PXRMLHLP",86,0)
 ;;    Display a selected patient list with the option to print. Also 
"RTN","PXRMLHLP",87,0)
 ;;    view and modify the list of users assigned access to the list.
"RTN","PXRMLHLP",88,0)
 ;;
"RTN","PXRMLHLP",89,0)
 ;;CV  Change View
"RTN","PXRMLHLP",90,0)
 ;;    Change the view between the list of Patient Lists sorted by patient 
"RTN","PXRMLHLP",91,0)
 ;;    list name or sorted by type (public or private).
"RTN","PXRMLHLP",92,0)
 ;;    
"RTN","PXRMLHLP",93,0)
 ;;LRM List Rule Management
"RTN","PXRMLHLP",94,0)
 ;;    Create or edit list rules.
"RTN","PXRMLHLP",95,0)
 ;;
"RTN","PXRMLHLP",96,0)
 ;;QU  Quit
"RTN","PXRMLHLP",97,0)
 ;;**End Text**
"RTN","PXRMLHLP",98,0)
 Q
"RTN","PXRMLHLP",99,0)
 ;
"RTN","PXRMLHLP",100,0)
TX3 ;Help Text for USR option
"RTN","PXRMLHLP",101,0)
 ;;The following options require the user to have Creator access:
"RTN","PXRMLHLP",102,0)
 ;;
"RTN","PXRMLHLP",103,0)
 ;;ADD Add user
"RTN","PXRMLHLP",104,0)
 ;;    Add a user as an authorized user to the list.
"RTN","PXRMLHLP",105,0)
 ;;
"RTN","PXRMLHLP",106,0)
 ;;DEL Delete User
"RTN","PXRMLHLP",107,0)
 ;;    Delete one or more authorized users from the List.
"RTN","PXRMLHLP",108,0)
 ;;
"RTN","PXRMLHLP",109,0)
 ;;QU  Quit
"RTN","PXRMLHLP",110,0)
 ;;**End Text**
"RTN","PXRMLHLP",111,0)
 Q
"RTN","PXRMLHLP",112,0)
 ;
"RTN","PXRMLHLP",113,0)
 ;======================================================================
"RTN","PXRMLHLP",114,0)
NOHLP ;Help text
"RTN","PXRMLHLP",115,0)
 ;;
"RTN","PXRMLHLP",116,0)
 ;;No Help Text Available
"RTN","PXRMLHLP",117,0)
 ;;
"RTN","PXRMLHLP",118,0)
 ;;**End Text**
"RTN","PXRMLHLP",119,0)
 Q
"RTN","PXRMLLED")
0^41^B3989594
"RTN","PXRMLLED",1,0)
PXRMLLED ; SLC/PJH - Edit a location list. ;12/23/2005
"RTN","PXRMLLED",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLLED",3,0)
 ;
"RTN","PXRMLLED",4,0)
 ;================================================================
"RTN","PXRMLLED",5,0)
 N CS1,CS2,DA,DIC,DLAYGO,DTOUT,DUOUT,FILEA,IENA,NUM,Y
"RTN","PXRMLLED",6,0)
GETNAME ;Get the name of the location list to edit.
"RTN","PXRMLLED",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMLLED",8,0)
 S DIC="^PXRMD(810.9,"
"RTN","PXRMLLED",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMLLED",10,0)
 S DIC("A")="Select Location List: "
"RTN","PXRMLLED",11,0)
 S DIC("S")="I $$VEDIT^PXRMUTIL(DIC,Y)"
"RTN","PXRMLLED",12,0)
 S DLAYGO=810.9
"RTN","PXRMLLED",13,0)
 ;Set the starting place for additions.
"RTN","PXRMLLED",14,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMLLED",15,0)
 W !
"RTN","PXRMLLED",16,0)
 D ^DIC
"RTN","PXRMLLED",17,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMLLED",18,0)
 I Y=-1 G END
"RTN","PXRMLLED",19,0)
 S DA=$P(Y,U,1)
"RTN","PXRMLLED",20,0)
 S CS1=$$FILE^PXRMEXCS(810.9,DA)
"RTN","PXRMLLED",21,0)
 D EDIT(DIC,DA)
"RTN","PXRMLLED",22,0)
 ;See if any changes have been made, if so do the edit history.
"RTN","PXRMLLED",23,0)
 S CS2=$$FILE^PXRMEXCS(810.9,DA)
"RTN","PXRMLLED",24,0)
 I CS2'=0,CS2'=CS1 D SEHIST^PXRMUTIL(810.9,DIC,DA)
"RTN","PXRMLLED",25,0)
 G GETNAME
"RTN","PXRMLLED",26,0)
END ;
"RTN","PXRMLLED",27,0)
 Q
"RTN","PXRMLLED",28,0)
 ;
"RTN","PXRMLLED",29,0)
 ;================================================================
"RTN","PXRMLLED",30,0)
EDIT(ROOT,DA) ;
"RTN","PXRMLLED",31,0)
 N DIE,DR,DIDEL,X,Y
"RTN","PXRMLLED",32,0)
 S DIE=ROOT,DIDEL=810.9
"RTN","PXRMLLED",33,0)
NAME S DR=".01"
"RTN","PXRMLLED",34,0)
 D ^DIE
"RTN","PXRMLLED",35,0)
 I '$D(DA) Q
"RTN","PXRMLLED",36,0)
 I $D(Y) Q
"RTN","PXRMLLED",37,0)
CLASS ;
"RTN","PXRMLLED",38,0)
 ;Class
"RTN","PXRMLLED",39,0)
RETRY W !!
"RTN","PXRMLLED",40,0)
 S DR="100"
"RTN","PXRMLLED",41,0)
 D ^DIE
"RTN","PXRMLLED",42,0)
 I $D(Y) G NAME
"RTN","PXRMLLED",43,0)
 ;Sponsor
"RTN","PXRMLLED",44,0)
 S DR="101"
"RTN","PXRMLLED",45,0)
 D ^DIE
"RTN","PXRMLLED",46,0)
 I $D(Y) G RETRY
"RTN","PXRMLLED",47,0)
 ;Make sure Class and Sponsor Class are in synch.
"RTN","PXRMLLED",48,0)
 S RESULT=$$VSPONSOR^PXRMINTR(X)
"RTN","PXRMLLED",49,0)
 I RESULT=0 S DIE("NO^")="Other value" G RETRY
"RTN","PXRMLLED",50,0)
 I RESULT=1 K DIE("NO^")
"RTN","PXRMLLED",51,0)
 ;Review date
"RTN","PXRMLLED",52,0)
RD W !!
"RTN","PXRMLLED",53,0)
 S DR="102"
"RTN","PXRMLLED",54,0)
 D ^DIE
"RTN","PXRMLLED",55,0)
 I $D(Y) G RETRY
"RTN","PXRMLLED",56,0)
 ;
"RTN","PXRMLLED",57,0)
 ;Description
"RTN","PXRMLLED",58,0)
DES S DR="1"
"RTN","PXRMLLED",59,0)
 D ^DIE
"RTN","PXRMLLED",60,0)
 I $D(Y) G RD
"RTN","PXRMLLED",61,0)
 ;
"RTN","PXRMLLED",62,0)
 ;Clinic Stops
"RTN","PXRMLLED",63,0)
CS S DR="40.7"
"RTN","PXRMLLED",64,0)
 S DR(2,810.9001)=".01;1"
"RTN","PXRMLLED",65,0)
 D ^DIE
"RTN","PXRMLLED",66,0)
 I $D(Y) G DES
"RTN","PXRMLLED",67,0)
 ;
"RTN","PXRMLLED",68,0)
 ;Hospital Locations
"RTN","PXRMLLED",69,0)
HL S DR="44"
"RTN","PXRMLLED",70,0)
 D ^DIE
"RTN","PXRMLLED",71,0)
 I $D(Y) G CS
"RTN","PXRMLLED",72,0)
 Q
"RTN","PXRMLLED",73,0)
 ;
"RTN","PXRMLLED",74,0)
 ;================================================================
"RTN","PXRMLLED",75,0)
KAMIS(X,DA) ;Kill the AMIS Reporting Stop Code.
"RTN","PXRMLLED",76,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMLLED",77,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMLLED",78,0)
 ;Do not execute as part of exchange.
"RTN","PXRMLLED",79,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMLLED",80,0)
 S $P(^PXRMD(810.9,DA(1),40.7,DA,0),U,2)=""
"RTN","PXRMLLED",81,0)
 Q
"RTN","PXRMLLED",82,0)
 ;
"RTN","PXRMLLED",83,0)
 ;================================================================
"RTN","PXRMLLED",84,0)
SAMIS(X,DA) ;Set the AMIS Reporting Stop Code.
"RTN","PXRMLLED",85,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMLLED",86,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMLLED",87,0)
 ;Do not execute as part of exchange.
"RTN","PXRMLLED",88,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMLLED",89,0)
 N AMIS
"RTN","PXRMLLED",90,0)
 S AMIS=$P(^DIC(40.7,X,0),U,2)
"RTN","PXRMLLED",91,0)
 S $P(^PXRMD(810.9,DA(1),40.7,DA,0),U,2)=AMIS
"RTN","PXRMLLED",92,0)
 Q
"RTN","PXRMLLED",93,0)
 ;
"RTN","PXRMLOCF")
0^150^B66370340
"RTN","PXRMLOCF",1,0)
PXRMLOCF ; SLC/PKR - Handle location findings. ;07/17/2006
"RTN","PXRMLOCF",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLOCF",3,0)
 ;This routine is for location list patient findings.
"RTN","PXRMLOCF",4,0)
 ;=================================================
"RTN","PXRMLOCF",5,0)
ALL(FILENUM,DFN,PFINDPA,FIEVAL) ;Get all Visits with a location
"RTN","PXRMLOCF",6,0)
 ;for a patient.
"RTN","PXRMLOCF",7,0)
 N BDT,CASESEN,COND,CONVAL,DAS,DATE,DONE,EDT,ENTYPE,FIEVD,HLOC
"RTN","PXRMLOCF",8,0)
 N ICOND,IND,NFOUND,NOCC
"RTN","PXRMLOCF",9,0)
 N SAVE,SDIR,TEMP,UCIFS,VDATE
"RTN","PXRMLOCF",10,0)
 ;Set the finding search parameters.
"RTN","PXRMLOCF",11,0)
 D SSPAR^PXRMUTIL(PFINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMLOCF",12,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMLOCF",13,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMLOCF",14,0)
 D SCPAR^PXRMCOND(.PFINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMLOCF",15,0)
 S (DONE,NFOUND)=0
"RTN","PXRMLOCF",16,0)
 I SDIR=1 S VDATE=BDT-.0000001
"RTN","PXRMLOCF",17,0)
 I SDIR=-1 S VDATE=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMLOCF",18,0)
 ;DBIA 2028
"RTN","PXRMLOCF",19,0)
 F  S VDATE=+$O(^AUPNVSIT("AET",DFN,VDATE),SDIR) Q:(VDATE=0)!(DONE)  D
"RTN","PXRMLOCF",20,0)
 . I SDIR=1,VDATE>EDT S DONE=1 Q
"RTN","PXRMLOCF",21,0)
 . I SDIR=-1,VDATE<BDT S DONE=1 Q
"RTN","PXRMLOCF",22,0)
 . S HLOC=""
"RTN","PXRMLOCF",23,0)
 . F  S HLOC=$O(^AUPNVSIT("AET",DFN,VDATE,HLOC)) Q:(HLOC="")!(DONE)  D
"RTN","PXRMLOCF",24,0)
 .. S ENTYPE=""
"RTN","PXRMLOCF",25,0)
 .. F  S ENTYPE=$O(^AUPNVSIT("AET",DFN,VDATE,HLOC,ENTYPE)) Q:(ENTYPE="")!(DONE)  D
"RTN","PXRMLOCF",26,0)
 ... S DAS=0
"RTN","PXRMLOCF",27,0)
 ... F  S DAS=$O(^AUPNVSIT("AET",DFN,VDATE,HLOC,ENTYPE,DAS)) Q:(DAS="")!(DONE)  D
"RTN","PXRMLOCF",28,0)
 .... D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVD)
"RTN","PXRMLOCF",29,0)
 .... S CONVAL=$S(COND'="":$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.FIEVD),1:1)
"RTN","PXRMLOCF",30,0)
 .... S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMLOCF",31,0)
 .... I SAVE D
"RTN","PXRMLOCF",32,0)
 ..... S NFOUND=NFOUND+1
"RTN","PXRMLOCF",33,0)
 ..... S FIEVAL(NFOUND)=CONVAL
"RTN","PXRMLOCF",34,0)
 ..... I COND'="" S FIEVAL(NFOUND,"CONDITION")=CONVAL
"RTN","PXRMLOCF",35,0)
 ..... S FIEVAL(NFOUND,"DAS")=DAS
"RTN","PXRMLOCF",36,0)
 ..... S FIEVAL(NFOUND,"DATE")=VDATE
"RTN","PXRMLOCF",37,0)
 ..... M FIEVAL(NFOUND)=FIEVD
"RTN","PXRMLOCF",38,0)
 ..... I $G(PXRMDEBG) M FIEVAL(NFOUND,"CSUB")=FIEVD
"RTN","PXRMLOCF",39,0)
 ..... I NFOUND=NOCC S DONE=1
"RTN","PXRMLOCF",40,0)
 ;Save the finding result.
"RTN","PXRMLOCF",41,0)
 D SFRES^PXRMUTIL(SDIR,NFOUND,.FIEVAL)
"RTN","PXRMLOCF",42,0)
 S FIEVAL("FILE NUMBER")=FILENUM
"RTN","PXRMLOCF",43,0)
 Q
"RTN","PXRMLOCF",44,0)
 ;
"RTN","PXRMLOCF",45,0)
 ;=================================================
"RTN","PXRMLOCF",46,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate location findings.
"RTN","PXRMLOCF",47,0)
 N BDT,EDT,FIEVT,FILENUM,FINDING,FINDPA,ITEM
"RTN","PXRMLOCF",48,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMLOCF",49,0)
 S ITEM=""
"RTN","PXRMLOCF",50,0)
 F  S ITEM=$O(DEFARR("E",ENODE,ITEM)) Q:+ITEM=0  D
"RTN","PXRMLOCF",51,0)
 . S FINDING=""
"RTN","PXRMLOCF",52,0)
 . F  S FINDING=$O(DEFARR("E",ENODE,ITEM,FINDING)) Q:+FINDING=0  D
"RTN","PXRMLOCF",53,0)
 .. K FINDPA
"RTN","PXRMLOCF",54,0)
 .. M FINDPA=DEFARR(20,FINDING)
"RTN","PXRMLOCF",55,0)
 .. K FIEVT
"RTN","PXRMLOCF",56,0)
 .. D FIEVAL(FILENUM,"PI",DFN,ITEM,.FINDPA,.FIEVT)
"RTN","PXRMLOCF",57,0)
 .. M FIEVAL(FINDING)=FIEVT
"RTN","PXRMLOCF",58,0)
 .. S FIEVAL(FINDING,"FINDING")=$P(FINDPA(0),U,1)
"RTN","PXRMLOCF",59,0)
 Q
"RTN","PXRMLOCF",60,0)
 ;
"RTN","PXRMLOCF",61,0)
 ;=================================================
"RTN","PXRMLOCF",62,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate location terms.
"RTN","PXRMLOCF",63,0)
 N FIEVT,FILENUM,ITEM,PFINDPA
"RTN","PXRMLOCF",64,0)
 N TEMP,TFINDING,TFINDPA
"RTN","PXRMLOCF",65,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMLOCF",66,0)
 S ITEM=""
"RTN","PXRMLOCF",67,0)
 F  S ITEM=$O(TERMARR("E",ENODE,ITEM)) Q:+ITEM=0  D
"RTN","PXRMLOCF",68,0)
 . S TFINDING=""
"RTN","PXRMLOCF",69,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,ITEM,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMLOCF",70,0)
 .. K FIEVT,PFINDPA,TFINDPA
"RTN","PXRMLOCF",71,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMLOCF",72,0)
 ..;Set the finding parameters.
"RTN","PXRMLOCF",73,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMLOCF",74,0)
 .. D FIEVAL(FILENUM,"PI",DFN,ITEM,.PFINDPA,.FIEVT)
"RTN","PXRMLOCF",75,0)
 .. M TFIEVAL(TFINDING)=FIEVT
"RTN","PXRMLOCF",76,0)
 .. S TFIEVAL(TFINDING,"FINDING")=$P(TFINDPA(0),U,1)
"RTN","PXRMLOCF",77,0)
 Q
"RTN","PXRMLOCF",78,0)
 ;
"RTN","PXRMLOCF",79,0)
 ;=================================================
"RTN","PXRMLOCF",80,0)
FIEVAL(FILENUM,SNODE,DFN,ITEM,PFINDPA,FIEVAL) ;
"RTN","PXRMLOCF",81,0)
 ;Evaluate regular patient findings.
"RTN","PXRMLOCF",82,0)
 N BDT,CASESEN,COND,CONVAL,DAS,DATE,EDT,FIEVD,FLIST,HLOC
"RTN","PXRMLOCF",83,0)
 N ICOND,IND,LNAME,NFOUND,NGET,NOCC,NP
"RTN","PXRMLOCF",84,0)
 N SAVE,SDIR,STATUSA,TEMP,UCIFS,VSLIST
"RTN","PXRMLOCF",85,0)
 S LNAME=$P(^PXRMD(810.9,ITEM,0),U,1)
"RTN","PXRMLOCF",86,0)
 I LNAME="VA-ALL LOCATIONS" D ALL(FILENUM,DFN,.PFINDPA,.FIEVAL) Q
"RTN","PXRMLOCF",87,0)
 ;Set the finding search parameters.
"RTN","PXRMLOCF",88,0)
 D SSPAR^PXRMUTIL(PFINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMLOCF",89,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMLOCF",90,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMLOCF",91,0)
 D SCPAR^PXRMCOND(.PFINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMLOCF",92,0)
 S NGET=$S(UCIFS:"*",$D(STATUSA):"*",1:NOCC)
"RTN","PXRMLOCF",93,0)
 ;Get a list of unique locations.
"RTN","PXRMLOCF",94,0)
 D LOCLIST(ITEM,"HLOCL")
"RTN","PXRMLOCF",95,0)
 D FPDAT(DFN,"HLOCL",NGET,BDT,EDT,.NFOUND,.FLIST)
"RTN","PXRMLOCF",96,0)
 I NFOUND=0 S FIEVAL=0 Q
"RTN","PXRMLOCF",97,0)
 S NP=0
"RTN","PXRMLOCF",98,0)
 F IND=1:1:NFOUND Q:NP=NOCC  D
"RTN","PXRMLOCF",99,0)
 . S DAS=$P(FLIST(IND),U,1)
"RTN","PXRMLOCF",100,0)
 . D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVD)
"RTN","PXRMLOCF",101,0)
 . S CONVAL=$S(COND'="":$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.FIEVD),1:1)
"RTN","PXRMLOCF",102,0)
 . S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMLOCF",103,0)
 . I SAVE D
"RTN","PXRMLOCF",104,0)
 .. S NP=NP+1
"RTN","PXRMLOCF",105,0)
 .. S FIEVAL(NP)=CONVAL
"RTN","PXRMLOCF",106,0)
 .. I COND'="" S FIEVAL(NP,"CONDITION")=CONVAL
"RTN","PXRMLOCF",107,0)
 .. S FIEVAL(NP,"DAS")=$P(FLIST(IND),U,1)
"RTN","PXRMLOCF",108,0)
 .. S FIEVAL(NP,"DATE")=$P(FLIST(IND),U,2)
"RTN","PXRMLOCF",109,0)
 .. M FIEVAL(NP)=FIEVD
"RTN","PXRMLOCF",110,0)
 .. I $G(PXRMDEBG) M FIEVAL(NP,"CSUB")=FIEVD
"RTN","PXRMLOCF",111,0)
 ;
"RTN","PXRMLOCF",112,0)
 ;Save the finding result.
"RTN","PXRMLOCF",113,0)
 D SFRES^PXRMUTIL(NOCC,NP,.FIEVAL)
"RTN","PXRMLOCF",114,0)
 S FIEVAL("FILE NUMBER")=FILENUM
"RTN","PXRMLOCF",115,0)
 Q
"RTN","PXRMLOCF",116,0)
 ;
"RTN","PXRMLOCF",117,0)
 ;=================================================
"RTN","PXRMLOCF",118,0)
FPDAT(DFN,HLOCL,NOCC,BDT,EDT,NFOUND,FLIST) ;Find patient data for
"RTN","PXRMLOCF",119,0)
 ;visits at a specified hospital location. Return up to NOCC most
"RTN","PXRMLOCF",120,0)
 ;recent entries in FLIST where FLIST(1) is the most recent.
"RTN","PXRMLOCF",121,0)
 N DAS,DATE,DLIST,ENTYPE,HLOC,NF
"RTN","PXRMLOCF",122,0)
 S NFOUND=0
"RTN","PXRMLOCF",123,0)
 S DATE=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMLOCF",124,0)
 ;DBIA 2028
"RTN","PXRMLOCF",125,0)
 F  S DATE=+$O(^AUPNVSIT("AET",DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)!(NFOUND=NOCC)  D
"RTN","PXRMLOCF",126,0)
 . S HLOC=""
"RTN","PXRMLOCF",127,0)
 . F  S HLOC=$O(^TMP($J,HLOCL,HLOC)) Q:(HLOC="")!(NFOUND=NOCC)  D
"RTN","PXRMLOCF",128,0)
 .. I '$D(^AUPNVSIT("AET",DFN,DATE,HLOC)) Q
"RTN","PXRMLOCF",129,0)
 .. S NF=0
"RTN","PXRMLOCF",130,0)
 .. S ENTYPE=""
"RTN","PXRMLOCF",131,0)
 .. F  S ENTYPE=$O(^AUPNVSIT("AET",DFN,DATE,HLOC,ENTYPE)) Q:(ENTYPE="")!(NFOUND=NOCC)  D
"RTN","PXRMLOCF",132,0)
 ... S DAS=0
"RTN","PXRMLOCF",133,0)
 ... F  S DAS=$O(^AUPNVSIT("AET",DFN,DATE,HLOC,ENTYPE,DAS)) Q:(DAS="")!(NFOUND=NOCC)  D
"RTN","PXRMLOCF",134,0)
 ....;Check the associated appointment for a valid status.
"RTN","PXRMLOCF",135,0)
 .... I '$$VAPSTAT^PXRMVSIT(DAS) Q
"RTN","PXRMLOCF",136,0)
 .... S NF=NF+1,NFOUND=NFOUND+1
"RTN","PXRMLOCF",137,0)
 .... S DLIST(DATE,NF)=DAS
"RTN","PXRMLOCF",138,0)
 S NFOUND=0
"RTN","PXRMLOCF",139,0)
 S DATE=""
"RTN","PXRMLOCF",140,0)
 F  S DATE=$O(DLIST(DATE),-1) Q:DATE=""  D
"RTN","PXRMLOCF",141,0)
 . S NF=0
"RTN","PXRMLOCF",142,0)
 . F  S NF=$O(DLIST(DATE,NF)) Q:NF=""  D
"RTN","PXRMLOCF",143,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMLOCF",144,0)
 .. S FLIST(NFOUND)=DLIST(DATE,NF)_U_DATE
"RTN","PXRMLOCF",145,0)
 K ^TMP($J,"HLOCL")
"RTN","PXRMLOCF",146,0)
 Q
"RTN","PXRMLOCF",147,0)
 ;
"RTN","PXRMLOCF",148,0)
 ;=================================================
"RTN","PXRMLOCF",149,0)
LOCLIST(ITEM,SUB) ;Build a list of unique locations based on stop code
"RTN","PXRMLOCF",150,0)
 ;and/or hospital location. Reads of ^SC covered by DBIA #4482.
"RTN","PXRMLOCF",151,0)
 N CS,EXCL,IND,JND,HLOC,SC
"RTN","PXRMLOCF",152,0)
 K ^TMP($J,SUB)
"RTN","PXRMLOCF",153,0)
 ;Process stop codes. EXCL is the list of credit stops to exclude.
"RTN","PXRMLOCF",154,0)
 S IND=0
"RTN","PXRMLOCF",155,0)
 F  S IND=+$O(^PXRMD(810.9,ITEM,40.7,IND)) Q:IND=0  D
"RTN","PXRMLOCF",156,0)
 . S SC=$P(^PXRMD(810.9,ITEM,40.7,IND,0),U,1)
"RTN","PXRMLOCF",157,0)
 . K EXCL
"RTN","PXRMLOCF",158,0)
 . S JND=0
"RTN","PXRMLOCF",159,0)
 . F  S JND=+$O(^PXRMD(810.9,ITEM,40.7,IND,1,JND)) Q:JND=0  D
"RTN","PXRMLOCF",160,0)
 .. S EXCL=^PXRMD(810.9,ITEM,40.7,IND,1,JND,0)
"RTN","PXRMLOCF",161,0)
 .. S EXCL(EXCL)=""
"RTN","PXRMLOCF",162,0)
 . S HLOC=""
"RTN","PXRMLOCF",163,0)
 . F  S HLOC=$O(^SC("AST",SC,HLOC)) Q:HLOC=""  D
"RTN","PXRMLOCF",164,0)
 .. ;See if there are any to exclude.
"RTN","PXRMLOCF",165,0)
 .. S CS=$P(^SC(HLOC,0),U,18)
"RTN","PXRMLOCF",166,0)
 .. I CS'="",$D(EXCL(CS)) Q
"RTN","PXRMLOCF",167,0)
 .. S ^TMP($J,SUB,HLOC)=""
"RTN","PXRMLOCF",168,0)
 ;Process locations.
"RTN","PXRMLOCF",169,0)
 S IND=0
"RTN","PXRMLOCF",170,0)
 F  S IND=+$O(^PXRMD(810.9,ITEM,44,IND)) Q:IND=0  D
"RTN","PXRMLOCF",171,0)
 . S HLOC=^PXRMD(810.9,ITEM,44,IND,0)
"RTN","PXRMLOCF",172,0)
 . S ^TMP($J,SUB,HLOC)=""
"RTN","PXRMLOCF",173,0)
 Q
"RTN","PXRMLOCF",174,0)
 ;
"RTN","PXRMLOCF",175,0)
 ;=================================================
"RTN","PXRMLOCF",176,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMLOCF",177,0)
 ;DBIAs (^DIC(4: #10090), (^DIC(40.7: #557), (^SC: #10040)
"RTN","PXRMLOCF",178,0)
 N HLOC,IND,JND,LOC,NAME,NIN,NOUT,SC,TEMP,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMLOCF",179,0)
 S NAME="Outpatient Encounter = "
"RTN","PXRMLOCF",180,0)
 S IND=0
"RTN","PXRMLOCF",181,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMLOCF",182,0)
 . S NIN=0
"RTN","PXRMLOCF",183,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMLOCF",184,0)
 . S LOC=$G(IFIEVAL(IND,"LOC. OF ENCOUNTER"))
"RTN","PXRMLOCF",185,0)
 . S LOC=$S(LOC="":"?",1:$P($G(^DIC(4,LOC,0)),U,1))
"RTN","PXRMLOCF",186,0)
 . S SC=$G(IFIEVAL(IND,"DSS ID"))
"RTN","PXRMLOCF",187,0)
 . S SC=$S(SC="":"?",1:" "_$P($G(^DIC(40.7,SC,0)),U,1))
"RTN","PXRMLOCF",188,0)
 . S HLOC=$G(IFIEVAL(IND,"HOSPITAL LOCATION"))
"RTN","PXRMLOCF",189,0)
 . S HLOC=$S(HLOC="":"?",1:" "_$P($G(^SC(HLOC,0)),U,1))
"RTN","PXRMLOCF",190,0)
 . S TEMP=NAME_LOC_HLOC_SC_" ("_$$EDATE^PXRMDATE(VDATE)_")"
"RTN","PXRMLOCF",191,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMLOCF",192,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMLOCF",193,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMLOCF",194,0)
 Q
"RTN","PXRMLOCF",195,0)
 ;
"RTN","PXRMLOCF",196,0)
 ;=================================================
"RTN","PXRMLOCF",197,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMLOCF",198,0)
 ;maintenance output.
"RTN","PXRMLOCF",199,0)
 ;DBIAs (^DIC(4: #10090), (^DIC(40.7: #557), (^SC: #10040)
"RTN","PXRMLOCF",200,0)
 N EM,HLOC,IND,JND,LOC,NIN,NOUT,SC,STATUS,TEMP,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMLOCF",201,0)
 S NLINES=NLINES+1
"RTN","PXRMLOCF",202,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"PCE Encounter:"
"RTN","PXRMLOCF",203,0)
 S IND=0
"RTN","PXRMLOCF",204,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMLOCF",205,0)
 . S NIN=0
"RTN","PXRMLOCF",206,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMLOCF",207,0)
 . S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMLOCF",208,0)
 . S LOC=$G(IFIEVAL(IND,"LOC. OF ENCOUNTER"))
"RTN","PXRMLOCF",209,0)
 . S LOC=$S(LOC="":"?",1:$P($G(^DIC(4,LOC,0)),U,1))
"RTN","PXRMLOCF",210,0)
 . S TEMP=TEMP_" Facility - "_LOC
"RTN","PXRMLOCF",211,0)
 . D FORMATS^PXRMTEXT(INDENT+1,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMLOCF",212,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMLOCF",213,0)
 . S HLOC=$G(IFIEVAL(IND,"HLOC"))
"RTN","PXRMLOCF",214,0)
 . I HLOC="" S HLOC="?"
"RTN","PXRMLOCF",215,0)
 . S TEMP="Hospital Location: "_HLOC
"RTN","PXRMLOCF",216,0)
 . S SC=$G(IFIEVAL(IND,"STOP CODE"))
"RTN","PXRMLOCF",217,0)
 . I SC="" S SC="?"
"RTN","PXRMLOCF",218,0)
 . S TEMP=TEMP_"; Clinic Stop: "_SC
"RTN","PXRMLOCF",219,0)
 . S NIN=NIN+1,TEXTIN(NIN)=TEMP_"\\"
"RTN","PXRMLOCF",220,0)
 . S SC=$G(IFIEVAL(IND,"SERVICE CATEGORY"))
"RTN","PXRMLOCF",221,0)
 . S TEMP="Service Category: "_SC_"="_$$EXTERNAL^DILFD(9000010,.07,"",SC,.EM)
"RTN","PXRMLOCF",222,0)
 . S NIN=NIN+1,TEXTIN(NIN)=TEMP_"\\"
"RTN","PXRMLOCF",223,0)
 . S STATUS=$P($G(IFIEVAL(IND,"STATUS")),U,2)
"RTN","PXRMLOCF",224,0)
 . I STATUS="" S STATUS="?"
"RTN","PXRMLOCF",225,0)
 . S TEMP="Appointment Status: "_STATUS
"RTN","PXRMLOCF",226,0)
 . S NIN=NIN+1,TEXTIN(NIN)=TEMP_"\\"
"RTN","PXRMLOCF",227,0)
 . D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMLOCF",228,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMLOCF",229,0)
 . I IFIEVAL(IND,"COMMENTS")'="" D
"RTN","PXRMLOCF",230,0)
 .. S TEMP="Comments: "_IFIEVAL(IND,"COMMENTS")
"RTN","PXRMLOCF",231,0)
 .. D FORMATS^PXRMTEXT(INDENT+3,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMLOCF",232,0)
 .. F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMLOCF",233,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMLOCF",234,0)
 Q
"RTN","PXRMLOCF",235,0)
 ;
"RTN","PXRMLOCL")
0^17^B21905784
"RTN","PXRMLOCL",1,0)
PXRMLOCL ; SLC/PKR - Handle location findings. ;07/17/2006
"RTN","PXRMLOCL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLOCL",3,0)
 ;This routine is for location list patient lists.
"RTN","PXRMLOCL",4,0)
 ;=============================================
"RTN","PXRMLOCL",5,0)
ALLLOCS(SUB) ;Build a list of all hospital locations associated
"RTN","PXRMLOCL",6,0)
 ;with Visit file entries.
"RTN","PXRMLOCL",7,0)
 N HLOC
"RTN","PXRMLOCL",8,0)
 K ^TMP($J,SUB)
"RTN","PXRMLOCL",9,0)
 S HLOC=""
"RTN","PXRMLOCL",10,0)
 ;DBIA #2028
"RTN","PXRMLOCL",11,0)
 F  S HLOC=$O(^AUPNVSIT("AHL",HLOC)) Q:HLOC=""  S ^TMP($J,SUB,HLOC)=""
"RTN","PXRMLOCL",12,0)
 Q
"RTN","PXRMLOCL",13,0)
 ;
"RTN","PXRMLOCL",14,0)
 ;=============================================
"RTN","PXRMLOCL",15,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Evaluate location term findings
"RTN","PXRMLOCL",16,0)
 ;for patient lists. Return the list in ^TMP($J,PLIST)
"RTN","PXRMLOCL",17,0)
 N BDT,EDT,ITEM,FILENUM,PFINDPA
"RTN","PXRMLOCL",18,0)
 N STATUSA,TEMP,TFINDING,TFINDPA
"RTN","PXRMLOCL",19,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMLOCL",20,0)
 S ITEM=""
"RTN","PXRMLOCL",21,0)
 F  S ITEM=$O(TERMARR("E",ENODE,ITEM)) Q:+ITEM=0  D
"RTN","PXRMLOCL",22,0)
 . S TFINDING=""
"RTN","PXRMLOCL",23,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,ITEM,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMLOCL",24,0)
 .. K PFINDPA,TFINDPA
"RTN","PXRMLOCL",25,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMLOCL",26,0)
 ..;Set the finding parameters.
"RTN","PXRMLOCL",27,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMLOCL",28,0)
 .. D GPLIST(FILENUM,"IP",ITEM,.PFINDPA,PLIST)
"RTN","PXRMLOCL",29,0)
 Q
"RTN","PXRMLOCL",30,0)
 ;
"RTN","PXRMLOCL",31,0)
 ;=============================================
"RTN","PXRMLOCL",32,0)
FPLIST(FILENUM,HLOCL,NOCC,BDT,EDT,PLIST) ;Find patient list data for
"RTN","PXRMLOCL",33,0)
 ;a visit to a hospital location. Return the list in ^TMP($J,PLIST).
"RTN","PXRMLOCL",34,0)
 N BTIME,DAS,DATE,DEND,DFN,DONE,DS,ETIME,HLOC,INVBD,INVDATE,INVDT,INVED
"RTN","PXRMLOCL",35,0)
 N NFOUND,TEMP,TGLIST,TIME
"RTN","PXRMLOCL",36,0)
 S TGLIST="FPLIST_PXRMLOCL"
"RTN","PXRMLOCL",37,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMLOCL",38,0)
 S DEND=$S(EDT[".":EDT,1:EDT+.240001)
"RTN","PXRMLOCL",39,0)
 ;"AHL" in Visit file is inverse date_.time instead of a full inverse
"RTN","PXRMLOCL",40,0)
 ;date and time. For example if the date/time is 3030704.104449 then
"RTN","PXRMLOCL",41,0)
 ;"AHL" has 6969295.104449 instead of 6969295.89555
"RTN","PXRMLOCL",42,0)
 S INVBD=9999999-$P(BDT,".",1),BTIME=+("."_$P(BDT,".",2))
"RTN","PXRMLOCL",43,0)
 S INVED=9999999-$P(DEND,".",1),ETIME=+("."_$P(DEND,".",2))
"RTN","PXRMLOCL",44,0)
 S DS=INVED-1
"RTN","PXRMLOCL",45,0)
 S HLOC=""
"RTN","PXRMLOCL",46,0)
 F  S HLOC=$O(^TMP($J,HLOCL,HLOC)) Q:HLOC=""  D
"RTN","PXRMLOCL",47,0)
 . S INVDT=DS,DONE=0
"RTN","PXRMLOCL",48,0)
 .;DBIA #2028
"RTN","PXRMLOCL",49,0)
 . F  S INVDT=$O(^AUPNVSIT("AHL",HLOC,INVDT)) Q:(DONE)!(INVDT="")  D
"RTN","PXRMLOCL",50,0)
 .. S INVDATE=$P(INVDT,".",1)
"RTN","PXRMLOCL",51,0)
 .. I INVDATE>INVBD S DONE=1 Q
"RTN","PXRMLOCL",52,0)
 .. S TIME=+("."_$P(INVDT,".",2))
"RTN","PXRMLOCL",53,0)
 .. I INVDATE=INVED,TIME>ETIME Q
"RTN","PXRMLOCL",54,0)
 .. I INVDATE=INVBD,BTIME>TIME S DONE=1 Q
"RTN","PXRMLOCL",55,0)
 .. S DAS=0
"RTN","PXRMLOCL",56,0)
 .. F  S DAS=$O(^AUPNVSIT("AHL",HLOC,INVDT,DAS)) Q:DAS=""  D
"RTN","PXRMLOCL",57,0)
 ...;Check the associated appointment for a valid status.
"RTN","PXRMLOCL",58,0)
 ... I '$$VAPSTAT^PXRMVSIT(DAS) Q
"RTN","PXRMLOCL",59,0)
 ... S TEMP=^AUPNVSIT(DAS,0)
"RTN","PXRMLOCL",60,0)
 ... S DFN=$P(TEMP,U,5)
"RTN","PXRMLOCL",61,0)
 ... S DATE=$P(TEMP,U,1)
"RTN","PXRMLOCL",62,0)
 ... S ^TMP($J,TGLIST,DFN,INVDT,DAS)=DATE_U_HLOC
"RTN","PXRMLOCL",63,0)
 ;Return the NOCC most recent for each patient.
"RTN","PXRMLOCL",64,0)
 S DFN=0
"RTN","PXRMLOCL",65,0)
 F  S DFN=$O(^TMP($J,TGLIST,DFN)) Q:DFN=""  D
"RTN","PXRMLOCL",66,0)
 . S (INVDT,NFOUND)=0
"RTN","PXRMLOCL",67,0)
 . F  S INVDT=$O(^TMP($J,TGLIST,DFN,INVDT)) Q:(NFOUND=NOCC)!(INVDT="")  D
"RTN","PXRMLOCL",68,0)
 .. S DAS=""
"RTN","PXRMLOCL",69,0)
 .. F  S DAS=$O(^TMP($J,TGLIST,DFN,INVDT,DAS)) Q:(NFOUND=NOCC)!(DAS="")  D
"RTN","PXRMLOCL",70,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMLOCL",71,0)
 ... S ^TMP($J,PLIST,DFN,NFOUND)=DAS_U_^TMP($J,TGLIST,DFN,INVDT,DAS)
"RTN","PXRMLOCL",72,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMLOCL",73,0)
 Q
"RTN","PXRMLOCL",74,0)
 ;
"RTN","PXRMLOCL",75,0)
 ;=============================================
"RTN","PXRMLOCL",76,0)
GPLIST(FILENUM,SNODE,ITEM,PFINDPA,PLIST) ;Add to the patient list.
"RTN","PXRMLOCL",77,0)
 ; Return the list in ^TMP($J,PLIST).
"RTN","PXRMLOCL",78,0)
 ;^TMP($J,PLIST,T/F,DFN,IND,FILENUM)=DAS^DATE^HLOC^VALUE
"RTN","PXRMLOCL",79,0)
 N BDT,CASESEN,COND,CONVAL,DAS,DATE,EDT,DFN,FIEVD,FLIST
"RTN","PXRMLOCL",80,0)
 N ICOND,IEN,IND,IPLIST,LNAME,NOCC,NFOUND,NGET,NP,SAVE,STATUSA
"RTN","PXRMLOCL",81,0)
 N TEMP,TGLIST,TPLIST,UCIFS,VALUE,VSLIST
"RTN","PXRMLOCL",82,0)
 S TGLIST="GPLIST_PXRMLOCL"
"RTN","PXRMLOCL",83,0)
 ;Set the finding search parameters.
"RTN","PXRMLOCL",84,0)
 D SSPAR^PXRMUTIL(PFINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMLOCL",85,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMLOCL",86,0)
 D SCPAR^PXRMCOND(.PFINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMLOCL",87,0)
 S NGET=$S(UCIFS:"*",$D(STATUSA):"*",1:NOCC)
"RTN","PXRMLOCL",88,0)
 ;Get a list of unique locations.
"RTN","PXRMLOCL",89,0)
 S LNAME=$P(^PXRMD(810.9,ITEM,0),U,1)
"RTN","PXRMLOCL",90,0)
 I LNAME="VA-ALL LOCATIONS" D ALLLOCS("HLOCL")
"RTN","PXRMLOCL",91,0)
 I LNAME'="VA-ALL LOCATIONS" D LOCLIST^PXRMLOCF(ITEM,"HLOCL")
"RTN","PXRMLOCL",92,0)
 D FPLIST(FILENUM,"HLOCL",NGET,BDT,EDT,TGLIST)
"RTN","PXRMLOCL",93,0)
 S DFN=""
"RTN","PXRMLOCL",94,0)
 F  S DFN=$O(^TMP($J,TGLIST,DFN)) Q:DFN=""  D
"RTN","PXRMLOCL",95,0)
 . K TPLIST
"RTN","PXRMLOCL",96,0)
 . M TPLIST=^TMP($J,TGLIST,DFN)
"RTN","PXRMLOCL",97,0)
 . S (IND,NFOUND)=0
"RTN","PXRMLOCL",98,0)
 . K IPLIST
"RTN","PXRMLOCL",99,0)
 . F  S IND=$O(TPLIST(IND)) Q:(IND="")!(NFOUND=NOCC)  D
"RTN","PXRMLOCL",100,0)
 .. S TEMP=TPLIST(IND)
"RTN","PXRMLOCL",101,0)
 .. S DAS=$P(TEMP,U,1)
"RTN","PXRMLOCL",102,0)
 .. D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVD)
"RTN","PXRMLOCL",103,0)
 .. S VALUE=$G(FIEVD("VALUE"))
"RTN","PXRMLOCL",104,0)
 .. S CONVAL=$S(COND'="":$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.FIEVD),1:1)
"RTN","PXRMLOCL",105,0)
 .. S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMLOCL",106,0)
 .. I SAVE D
"RTN","PXRMLOCL",107,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMLOCL",108,0)
 ... S IPLIST(CONVAL,DFN,NFOUND,FILENUM)=TEMP_U_VALUE
"RTN","PXRMLOCL",109,0)
 . M ^TMP($J,PLIST)=IPLIST
"RTN","PXRMLOCL",110,0)
 K ^TMP($J,"HLOCL"),^TMP($J,TGLIST)
"RTN","PXRMLOCL",111,0)
 Q
"RTN","PXRMLOCL",112,0)
 ;
"RTN","PXRMLOCL",113,0)
 ;=============================================
"RTN","PXRMLOCL",114,0)
PCSTOPL ;Print the Clinic Stop list. Called by the print template PXRM
"RTN","PXRMLOCL",115,0)
 ;LOCATION LIST INQUIRY.
"RTN","PXRMLOCL",116,0)
 N AMIS,CSTOP,IND,JND,SKIP,TEMP
"RTN","PXRMLOCL",117,0)
 S (IND,SKIP)=0
"RTN","PXRMLOCL",118,0)
 F  S IND=+$O(^PXRMD(810.9,D0,40.7,IND)) Q:IND=0  D
"RTN","PXRMLOCL",119,0)
 . S TEMP=^PXRMD(810.9,D0,40.7,IND,0)
"RTN","PXRMLOCL",120,0)
 . S CSTOP=$P(TEMP,U,1)
"RTN","PXRMLOCL",121,0)
 .; DBIA #557
"RTN","PXRMLOCL",122,0)
 . S CSTOP=$P(^DIC(40.7,CSTOP,0),U,1)
"RTN","PXRMLOCL",123,0)
 . S AMIS=$P(TEMP,U,2)
"RTN","PXRMLOCL",124,0)
 . I SKIP W ! S SKIP=0
"RTN","PXRMLOCL",125,0)
 . W !,?2,CSTOP,?34,AMIS
"RTN","PXRMLOCL",126,0)
 . I '$D(^PXRMD(810.9,D0,40.7,IND,1)) Q
"RTN","PXRMLOCL",127,0)
 . S SKIP=1
"RTN","PXRMLOCL",128,0)
 . W !,?4,"Credit Stops to Exclude:"
"RTN","PXRMLOCL",129,0)
 . S JND=0
"RTN","PXRMLOCL",130,0)
 . F  S JND=+$O(^PXRMD(810.9,D0,40.7,IND,1,JND)) Q:JND=0  D
"RTN","PXRMLOCL",131,0)
 .. S TEMP=^PXRMD(810.9,D0,40.7,IND,1,JND,0)
"RTN","PXRMLOCL",132,0)
 .. S TEMP=$P(^DIC(40.7,TEMP,0),U,1,2)
"RTN","PXRMLOCL",133,0)
 .. S CSTOP=$P(TEMP,U,1)
"RTN","PXRMLOCL",134,0)
 .. S AMIS=$P(TEMP,U,2)
"RTN","PXRMLOCL",135,0)
 .. W !,?6,CSTOP,?38,AMIS
"RTN","PXRMLOCL",136,0)
 Q
"RTN","PXRMLOCL",137,0)
 ;
"RTN","PXRMLOG")
0^11^B57930315
"RTN","PXRMLOG",1,0)
PXRMLOG ; SLC/PKR - Clinical Reminders logic routines. ;06/12/2006
"RTN","PXRMLOG",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLOG",3,0)
 ;==========================================================
"RTN","PXRMLOG",4,0)
EVALPCL(DEFARR,PXRMPDEM,FREQ,PCLOGIC,FIEVAL) ;Evaluate the Patient Cohort
"RTN","PXRMLOG",5,0)
 ;Logic.
"RTN","PXRMLOG",6,0)
 ;Determine the applicable frequency age range set; get the baseline.
"RTN","PXRMLOG",7,0)
 N AGEFI,IND,FINDING,FLIST,FREQDAY,MAXAGE,MINAGE,NODE,NUMAFI
"RTN","PXRMLOG",8,0)
 N PCLOG,PCLSTR,RANKAR,RANK,RANKFI,TEMP,TEST
"RTN","PXRMLOG",9,0)
 D MMF^PXRMAGE(.DEFARR,.PXRMPDEM,.MINAGE,.MAXAGE,.FREQ,.FIEVAL)
"RTN","PXRMLOG",10,0)
 ;If there is no match with any of the baseline values FREQ=-1.
"RTN","PXRMLOG",11,0)
 ;If there was no frequency in the definition then FREQ="".
"RTN","PXRMLOG",12,0)
 ;See if any findings override the baseline.
"RTN","PXRMLOG",13,0)
 S TEMP=DEFARR(40)
"RTN","PXRMLOG",14,0)
 S NUMAFI=+$P(TEMP,U,1)
"RTN","PXRMLOG",15,0)
 ;If there are no age findings use the baseline.
"RTN","PXRMLOG",16,0)
 I NUMAFI=0 G ACHK
"RTN","PXRMLOG",17,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",18,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMLOG",19,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",20,0)
 . I FIEVAL(FINDING) D
"RTN","PXRMLOG",21,0)
 .. S NODE=$S(FINDING["FF":25,1:20)
"RTN","PXRMLOG",22,0)
 .. S TEMP=DEFARR(NODE,FINDING,0)
"RTN","PXRMLOG",23,0)
 .. S RANK=+$P(TEMP,U,5)
"RTN","PXRMLOG",24,0)
 .. I RANK=0 S RANK=9999
"RTN","PXRMLOG",25,0)
 .. S FREQDAY=$$FRQINDAY^PXRMDATE($P(TEMP,U,4))
"RTN","PXRMLOG",26,0)
 ..;If there is no frequency with this rank ignore it.
"RTN","PXRMLOG",27,0)
 .. I FREQDAY]"" S RANKAR(RANK,FREQDAY,FINDING)=""
"RTN","PXRMLOG",28,0)
 ;If there was a ranking use it otherwise use the greatest frequency.
"RTN","PXRMLOG",29,0)
 I '$D(RANKAR) G ACHK
"RTN","PXRMLOG",30,0)
 S RANK=0
"RTN","PXRMLOG",31,0)
 S RANK=+$O(RANKAR(RANK))
"RTN","PXRMLOG",32,0)
 S FREQDAY=+$O(RANKAR(RANK,""))
"RTN","PXRMLOG",33,0)
 S FINDING=$O(RANKAR(RANK,FREQDAY,""))
"RTN","PXRMLOG",34,0)
 I FINDING'="" D
"RTN","PXRMLOG",35,0)
 . S NODE=$S(FINDING["FF":25,1:20)
"RTN","PXRMLOG",36,0)
 . S TEMP=DEFARR(NODE,FINDING,0)
"RTN","PXRMLOG",37,0)
 . S FREQ=$P(TEMP,U,4)
"RTN","PXRMLOG",38,0)
 . S MINAGE=$P(TEMP,U,2)
"RTN","PXRMLOG",39,0)
 . S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMLOG",40,0)
 .;Remove the baseline age findings since they have been overridden.
"RTN","PXRMLOG",41,0)
 . K FIEVAL("AGE")
"RTN","PXRMLOG",42,0)
ACHK ;
"RTN","PXRMLOG",43,0)
 I FREQ="" D
"RTN","PXRMLOG",44,0)
 . S AGEFI=0
"RTN","PXRMLOG",45,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","NOFREQ")="There is no reminder frequency!"
"RTN","PXRMLOG",46,0)
 E  D
"RTN","PXRMLOG",47,0)
 .;Save the final frequency and age range for display.
"RTN","PXRMLOG",48,0)
 .;Use the z so this will be the last of the info text.
"RTN","PXRMLOG",49,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG")=FREQ_U_MINAGE_U_MAXAGE
"RTN","PXRMLOG",50,0)
 . S AGEFI=$S(FREQ=-1:0,1:$$AGECHECK^PXRMAGE(PXRMPDEM("AGE"),MINAGE,MAXAGE))
"RTN","PXRMLOG",51,0)
 S FIEVAL("AGE")=AGEFI
"RTN","PXRMLOG",52,0)
 ;
"RTN","PXRMLOG",53,0)
 ;Evaluate the patient cohort logic
"RTN","PXRMLOG",54,0)
EVAL ;
"RTN","PXRMLOG",55,0)
 N AGE,DPCLOG,FI,FF,FUN,FUNCTION,FUNLIST,NUM,SEX,VAR
"RTN","PXRMLOG",56,0)
 S TEMP=DEFARR(32)
"RTN","PXRMLOG",57,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOG",58,0)
 S (PCLOG,PCLSTR)=DEFARR(31)
"RTN","PXRMLOG",59,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",60,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",61,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",62,0)
 . I FINDING="AGE" S AGE=+$G(FIEVAL("AGE"))
"RTN","PXRMLOG",63,0)
 . I FINDING="SEX" S SEX=+$G(FIEVAL("SEX"))
"RTN","PXRMLOG",64,0)
 . I FINDING["FF" S TEMP=$P(FINDING,"FF",2),FF(TEMP)=FIEVAL(FINDING)
"RTN","PXRMLOG",65,0)
 . E  S FI(FINDING)=FIEVAL(FINDING)
"RTN","PXRMLOG",66,0)
 I @PCLOG
"RTN","PXRMLOG",67,0)
 S TEST=$T
"RTN","PXRMLOG",68,0)
 I 'AGEFI,PCLSTR["AGE" D
"RTN","PXRMLOG",69,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","AGE")=""
"RTN","PXRMLOG",70,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","AGE")="Patient does not meet any age criteria!"
"RTN","PXRMLOG",71,0)
 ;Reminders are always N/A for dead patients unless PXRMIDOD is true in which case
"RTN","PXRMLOG",72,0)
 ;the regular cohort logic applies.
"RTN","PXRMLOG",73,0)
 I '$G(PXRMIDOD),PXRMPDEM("DOD")'="" S TEST=0
"RTN","PXRMLOG",74,0)
 S PCLOGIC=TEST_U_PCLSTR
"RTN","PXRMLOG",75,0)
 I 'TEST S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","COHORT")=""
"RTN","PXRMLOG",76,0)
 I $G(PXRMDEBG) D
"RTN","PXRMLOG",77,0)
 . S DPCLOG=PCLOG
"RTN","PXRMLOG",78,0)
 . F IND=1:1:NUM D
"RTN","PXRMLOG",79,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",80,0)
 .. I FINDING="AGE" S DPCLOG=$$STRREP^PXRMUTIL(DPCLOG,"AGE",+$G(FIEVAL(FINDING))) Q
"RTN","PXRMLOG",81,0)
 .. I FINDING="SEX" S DPCLOG=$$STRREP^PXRMUTIL(DPCLOG,"SEX",+$G(FIEVAL(FINDING))) Q
"RTN","PXRMLOG",82,0)
 .. S TEMP=$S(FINDING["FF":"FF("_$P(FINDING,"FF",2)_")",1:"FI("_FINDING_")")
"RTN","PXRMLOG",83,0)
 .. S DPCLOG=$$STRREP^PXRMUTIL(DPCLOG,TEMP,FIEVAL(FINDING))
"RTN","PXRMLOG",84,0)
 S PCLOGIC=PCLOGIC_U_$G(DPCLOG)
"RTN","PXRMLOG",85,0)
 I $G(PXRMDEBG) S ^TMP(PXRMPID,$J,PXRMITEM,"PATIENT COHORT LOGIC")=PCLOGIC
"RTN","PXRMLOG",86,0)
 Q
"RTN","PXRMLOG",87,0)
 ;
"RTN","PXRMLOG",88,0)
 ;==========================================================
"RTN","PXRMLOG",89,0)
EVALRESL(DEFARR,RESDATE,RESLOGIC,FIEVAL) ;Evaluate the
"RTN","PXRMLOG",90,0)
 ;Resolution Logic.
"RTN","PXRMLOG",91,0)
 N DRESLOG,IND,FF,FI,FINDING,FLIST,NUM,RESLOG,RESLSTR,TEMP,TEST
"RTN","PXRMLOG",92,0)
 S TEMP=DEFARR(36)
"RTN","PXRMLOG",93,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOG",94,0)
 I NUM=0 Q
"RTN","PXRMLOG",95,0)
 S (RESLOG,RESLSTR)=DEFARR(35)
"RTN","PXRMLOG",96,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",97,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",98,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",99,0)
 .;Check for contraindicated in a resolution finding
"RTN","PXRMLOG",100,0)
 . I $G(FIEVAL(FINDING,"CONTRAINDICATED")) S FIEVAL("CONTRAINDICATED")=1
"RTN","PXRMLOG",101,0)
 . I FINDING["FF" S TEMP=$P(FINDING,"FF",2),FF(TEMP)=FIEVAL(FINDING)
"RTN","PXRMLOG",102,0)
 . E  S FI(FINDING)=FIEVAL(FINDING)
"RTN","PXRMLOG",103,0)
 I @RESLOG
"RTN","PXRMLOG",104,0)
 S TEST=$T
"RTN","PXRMLOG",105,0)
 I $G(PXRMDEBG) D
"RTN","PXRMLOG",106,0)
 . S DRESLOG=RESLOG
"RTN","PXRMLOG",107,0)
 . F IND=1:1:NUM D
"RTN","PXRMLOG",108,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",109,0)
 .. S TEMP=$S(FINDING["FF":"FF("_$P(FINDING,"FF",2)_")",1:"FI("_FINDING_")")
"RTN","PXRMLOG",110,0)
 .. S DRESLOG=$$STRREP^PXRMUTIL(DRESLOG,TEMP,FIEVAL(FINDING))
"RTN","PXRMLOG",111,0)
 S RESLOGIC=TEST_U_RESLSTR_U_$G(DRESLOG)
"RTN","PXRMLOG",112,0)
 I $G(PXRMDEBG) S ^TMP(PXRMPID,$J,PXRMITEM,"RESOLUTION LOGIC")=RESLOGIC
"RTN","PXRMLOG",113,0)
 S RESDATE=$S(TEST=1:$$RESDATE(RESLSTR,.FIEVAL),1:0)
"RTN","PXRMLOG",114,0)
 Q
"RTN","PXRMLOG",115,0)
 ;
"RTN","PXRMLOG",116,0)
 ;==========================================================
"RTN","PXRMLOG",117,0)
LOGOP(DT1,DT2,LOP) ;Given two dates return the most recent if the logical
"RTN","PXRMLOG",118,0)
 ;operator is ! and the oldest if it is &. True FFs which don't have
"RTN","PXRMLOG",119,0)
 ;a date are flagged with date of -1.
"RTN","PXRMLOG",120,0)
 I DT1=0,DT2=0 Q 0
"RTN","PXRMLOG",121,0)
 I DT1=-1,DT2=-1 Q -1
"RTN","PXRMLOG",122,0)
 N VALUE
"RTN","PXRMLOG",123,0)
 I LOP="&" D  Q VALUE
"RTN","PXRMLOG",124,0)
 . I DT1=-1 S VALUE=DT2 Q
"RTN","PXRMLOG",125,0)
 . I DT2=-1 S VALUE=DT1 Q
"RTN","PXRMLOG",126,0)
 . I DT1=0 S VALUE=DT2 Q
"RTN","PXRMLOG",127,0)
 . I DT2=0 S VALUE=DT1 Q
"RTN","PXRMLOG",128,0)
 . S VALUE=$S(DT1>DT2:DT2,1:DT1)
"RTN","PXRMLOG",129,0)
 I LOP'="!" Q 0
"RTN","PXRMLOG",130,0)
 I DT1=-1 Q $S(DT2>0:DT2,1:-1)
"RTN","PXRMLOG",131,0)
 I DT2=-1 Q $S(DT1>0:DT1,1:-1)
"RTN","PXRMLOG",132,0)
 Q $S(DT1>DT2:DT1,1:DT2)
"RTN","PXRMLOG",133,0)
 ;
"RTN","PXRMLOG",134,0)
 ;==========================================================
"RTN","PXRMLOG",135,0)
RESDATE(RESLSTR,FIEVAL) ;Return the resolution date based on the following
"RTN","PXRMLOG",136,0)
 ;rules:
"RTN","PXRMLOG",137,0)
 ; Dates that are ORed use the most recent.
"RTN","PXRMLOG",138,0)
 ; Dates that are ANDed use the oldest.
"RTN","PXRMLOG",139,0)
 ;This is only evaluated if the resolution logic is true.
"RTN","PXRMLOG",140,0)
 N DATE,DSTRING,DT1,DT2,DT3,FFI,IND,INDEX,JND
"RTN","PXRMLOG",141,0)
 N OPER,PFSTACK,STACK,TEMP
"RTN","PXRMLOG",142,0)
 ;Remove leading (n) entries.
"RTN","PXRMLOG",143,0)
 I ($E(RESLSTR,1,4)="(0)!")!($E(RESLSTR,1,4)="(1)&") S $E(RESLSTR,1,4)=""
"RTN","PXRMLOG",144,0)
 ;The NOT operator is not relevant for the date calculation so remove
"RTN","PXRMLOG",145,0)
 ;any NOTs.
"RTN","PXRMLOG",146,0)
 S DSTRING=$TR(RESLSTR,"'","")
"RTN","PXRMLOG",147,0)
 ;Replace true findings with their dates. This includes false findings
"RTN","PXRMLOG",148,0)
 ;that are notted in the logic.
"RTN","PXRMLOG",149,0)
 S OPER="!&"
"RTN","PXRMLOG",150,0)
 D POSTFIX^PXRMSTAC(DSTRING,OPER,.PFSTACK)
"RTN","PXRMLOG",151,0)
 S JND=0
"RTN","PXRMLOG",152,0)
 F IND=1:1:PFSTACK(0) D
"RTN","PXRMLOG",153,0)
 . S TEMP=PFSTACK(IND)
"RTN","PXRMLOG",154,0)
 . I TEMP="FI" D  Q
"RTN","PXRMLOG",155,0)
 .. S IND=IND+1,INDEX=PFSTACK(IND)
"RTN","PXRMLOG",156,0)
 .. S DATE=$S(FIEVAL(INDEX)=1:FIEVAL(INDEX,"DATE"),1:0)
"RTN","PXRMLOG",157,0)
 .. S JND=JND+1,STACK(JND)=DATE
"RTN","PXRMLOG",158,0)
 . I TEMP="FF" D  Q
"RTN","PXRMLOG",159,0)
 .. S IND=IND+1,INDEX=PFSTACK(IND)
"RTN","PXRMLOG",160,0)
 .. S FFI="FF"_INDEX
"RTN","PXRMLOG",161,0)
 ..;FFs do not have dates, flag with -1.
"RTN","PXRMLOG",162,0)
 .. S DATE=-1
"RTN","PXRMLOG",163,0)
 .. S JND=JND+1,STACK(JND)=DATE
"RTN","PXRMLOG",164,0)
 . I OPER[TEMP S JND=JND+1,STACK(JND)=TEMP
"RTN","PXRMLOG",165,0)
 S STACK(0)=JND
"RTN","PXRMLOG",166,0)
 K PFSTACK
"RTN","PXRMLOG",167,0)
 S PFSTACK(0)=0
"RTN","PXRMLOG",168,0)
 F IND=1:1:STACK(0) D
"RTN","PXRMLOG",169,0)
 . S TEMP=STACK(IND)
"RTN","PXRMLOG",170,0)
 . I OPER[TEMP D
"RTN","PXRMLOG",171,0)
 ..;Pop the top two elements on the stack and do the operation.
"RTN","PXRMLOG",172,0)
 .. S DT1=$$POP^PXRMSTAC(.PFSTACK)
"RTN","PXRMLOG",173,0)
 .. S DT2=$$POP^PXRMSTAC(.PFSTACK)
"RTN","PXRMLOG",174,0)
 .. S DT3=$$LOGOP(DT1,DT2,TEMP)
"RTN","PXRMLOG",175,0)
 ..;Save the result back on the stack
"RTN","PXRMLOG",176,0)
 .. D PUSH^PXRMSTAC(.PFSTACK,DT3)
"RTN","PXRMLOG",177,0)
 . E  D PUSH^PXRMSTAC(.PFSTACK,TEMP)
"RTN","PXRMLOG",178,0)
 ;The result is the only thing left on the stack.
"RTN","PXRMLOG",179,0)
 Q $$POP^PXRMSTAC(.PFSTACK)
"RTN","PXRMLOG",180,0)
 ;
"RTN","PXRMLOG",181,0)
 ;==========================================================
"RTN","PXRMLOG",182,0)
SEX(DEFARR,SEX) ;Return FALSE (0) if the patient is the wrong sex for
"RTN","PXRMLOG",183,0)
 ; the reminder, TRUE (1) is the patient is the right sex.
"RTN","PXRMLOG",184,0)
 N REMSEX
"RTN","PXRMLOG",185,0)
 S REMSEX=$P(DEFARR(0),U,9)
"RTN","PXRMLOG",186,0)
 I REMSEX="" Q 1
"RTN","PXRMLOG",187,0)
 I SEX=REMSEX Q 1
"RTN","PXRMLOG",188,0)
 S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")=""
"RTN","PXRMLOG",189,0)
 S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","SEX")="Patient is the wrong sex!"
"RTN","PXRMLOG",190,0)
 Q 0
"RTN","PXRMLOG",191,0)
 ;
"RTN","PXRMLOG",192,0)
 ;==========================================================
"RTN","PXRMLOG",193,0)
VALID(LOGSTR,DA,MINLEN,MAXLEN) ;Make sure that LOGSTR is a valid logic string.
"RTN","PXRMLOG",194,0)
 ;This is called by the input transform for PATIENT COHORT LOGIC and
"RTN","PXRMLOG",195,0)
 ;RESOLUTION LOGIC. Return 1 if LOGSTR is ok.
"RTN","PXRMLOG",196,0)
 ;Don't do this if this is being called as a result of an install
"RTN","PXRMLOG",197,0)
 ;through the Exchange Utility.
"RTN","PXRMLOG",198,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMLOG",199,0)
 I LOGSTR="" Q 0
"RTN","PXRMLOG",200,0)
 ;
"RTN","PXRMLOG",201,0)
 ;Check the length.
"RTN","PXRMLOG",202,0)
 N LEN
"RTN","PXRMLOG",203,0)
 S LEN=$L(LOGSTR)
"RTN","PXRMLOG",204,0)
 I (LEN<MINLEN)!(LEN>MAXLEN) Q 0
"RTN","PXRMLOG",205,0)
 ;
"RTN","PXRMLOG",206,0)
 ;Use the FileMan code validator to check the code.
"RTN","PXRMLOG",207,0)
 N TEST,X
"RTN","PXRMLOG",208,0)
 S X="S Y="_$TR(LOGSTR,";","")
"RTN","PXRMLOG",209,0)
 D ^DIM
"RTN","PXRMLOG",210,0)
 I $D(X)=0 D  Q 0
"RTN","PXRMLOG",211,0)
 . S TEXT(1)="LOGIC string: "_LOGSTR
"RTN","PXRMLOG",212,0)
 . S TEXT(2)="contains invalid MUMPS code!"
"RTN","PXRMLOG",213,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMLOG",214,0)
 ;
"RTN","PXRMLOG",215,0)
 N ELE1,ELE2,MNUM,SEP,STACK,TEXT,TSTSTR,VALID
"RTN","PXRMLOG",216,0)
 ;Make sure the entries in LOGSTR are valid elements or functions.
"RTN","PXRMLOG",217,0)
 S TSTSTR=LOGSTR
"RTN","PXRMLOG",218,0)
 S TSTSTR=$TR(TSTSTR,"'","")
"RTN","PXRMLOG",219,0)
 S TSTSTR=$TR(TSTSTR,"&",U)
"RTN","PXRMLOG",220,0)
 S TSTSTR=$TR(TSTSTR,"!",U)
"RTN","PXRMLOG",221,0)
 ;Set the allowable logic separators.
"RTN","PXRMLOG",222,0)
 S SEP="^,<>="
"RTN","PXRMLOG",223,0)
 ;Convert the string to postfix form for evaluation.
"RTN","PXRMLOG",224,0)
 D POSTFIX^PXRMSTAC(TSTSTR,SEP,.STACK)
"RTN","PXRMLOG",225,0)
 S (ELE1,VALID)=1
"RTN","PXRMLOG",226,0)
 F  Q:(ELE1="")!(VALID=0)  D
"RTN","PXRMLOG",227,0)
 . S ELE1=$$POP^PXRMSTAC(.STACK)
"RTN","PXRMLOG",228,0)
 . I SEP[ELE1 Q
"RTN","PXRMLOG",229,0)
 .;If the element is FI or FF then the next element should be a number.
"RTN","PXRMLOG",230,0)
 . S MNUM=$S(ELE1="FI":20,ELE1="FF":25,1:"")
"RTN","PXRMLOG",231,0)
 . I MNUM'="" D
"RTN","PXRMLOG",232,0)
 .. S ELE2=$$POP^PXRMSTAC(.STACK)
"RTN","PXRMLOG",233,0)
 .. I ELE2'=+ELE2 S VALID=0
"RTN","PXRMLOG",234,0)
 .. I VALID S VALID=$D(^PXD(811.9,DA,MNUM,ELE2))
"RTN","PXRMLOG",235,0)
 .. I 'VALID D
"RTN","PXRMLOG",236,0)
 ... S TEXT=ELE1_"("_ELE2_") is not in this definition!"
"RTN","PXRMLOG",237,0)
 ... D EN^DDIOL(TEXT)
"RTN","PXRMLOG",238,0)
 Q VALID
"RTN","PXRMLOG",239,0)
 ;
"RTN","PXRMLOG",240,0)
 ;==========================================================
"RTN","PXRMLOG",241,0)
VALIDR(LOGSTR,DA,MINLEN,MAXLEN) ;Make sure that LOGSTR is a valid resolution 
"RTN","PXRMLOG",242,0)
 ;logic string. This is called by the input transform for RESOLUTION
"RTN","PXRMLOG",243,0)
 ;LOGIC. Return 1 if LOGSTR is ok.
"RTN","PXRMLOG",244,0)
 ;Don't do this if this is being called as a result of an install
"RTN","PXRMLOG",245,0)
 ;through the Exchange Utility.
"RTN","PXRMLOG",246,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMLOG",247,0)
 I LOGSTR="" Q 0
"RTN","PXRMLOG",248,0)
 N TEXT
"RTN","PXRMLOG",249,0)
 ;The resolution logic cannot contain SEX or AGE.
"RTN","PXRMLOG",250,0)
 I LOGSTR["AGE" D  Q 0
"RTN","PXRMLOG",251,0)
 . S TEXT="The resolution logic cannot contain AGE!"
"RTN","PXRMLOG",252,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMLOG",253,0)
 I LOGSTR["SEX" D  Q 0
"RTN","PXRMLOG",254,0)
 . S TEXT="The resolution logic cannot contain SEX!"
"RTN","PXRMLOG",255,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMLOG",256,0)
 ;Now call the regular logic string validator.
"RTN","PXRMLOG",257,0)
 Q $$VALID(LOGSTR,DA,MINLEN,MAXLEN)
"RTN","PXRMLOG",258,0)
 ;
"RTN","PXRMLOGF")
1^12
"RTN","PXRMLOGX")
0^109^B66287455
"RTN","PXRMLOGX",1,0)
PXRMLOGX ; SLC/PKR - Clinical Reminders logic cross-reference routines. ;08/29/2005
"RTN","PXRMLOGX",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLOGX",3,0)
 ;
"RTN","PXRMLOGX",4,0)
 ;==================
"RTN","PXRMLOGX",5,0)
BLDAFL(IEN,KI,NODEP) ;Build a list of findings that can change the
"RTN","PXRMLOGX",6,0)
 ;frequency age range set. This is called by FileMan whenever the
"RTN","PXRMLOGX",7,0)
 ;minimum age, maximum age, or frequency fields of the findings
"RTN","PXRMLOGX",8,0)
 ;multiple are edited.
"RTN","PXRMLOGX",9,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMLOGX",10,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMLOGX",11,0)
 ;Do not execute as part of exchange.
"RTN","PXRMLOGX",12,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMLOGX",13,0)
 N FREQ,FLIST,FTYPE,IND,OK,NODE,NUM,STARTCHK
"RTN","PXRMLOGX",14,0)
 S STARTCHK=$S($D(^PXD(811.9,IEN,25)):100,1:150)
"RTN","PXRMLOGX",15,0)
 S FLIST="",OK=1,NUM=0
"RTN","PXRMLOGX",16,0)
 F NODE=20,25 D
"RTN","PXRMLOGX",17,0)
 . S FTYPE=$S(NODE=25:"FF",1:"")
"RTN","PXRMLOGX",18,0)
 . S IND=0
"RTN","PXRMLOGX",19,0)
 . F  S IND=$O(^PXD(811.9,IEN,NODE,IND)) Q:+IND=0  D
"RTN","PXRMLOGX",20,0)
 ..;If an entry is being deleted skip it.
"RTN","PXRMLOGX",21,0)
 .. I IND=$G(KI),NODE=NODEP Q
"RTN","PXRMLOGX",22,0)
 .. S FREQ=$P(^PXD(811.9,IEN,NODE,IND,0),U,4)
"RTN","PXRMLOGX",23,0)
 .. I FREQ'="" D
"RTN","PXRMLOGX",24,0)
 ... S NUM=NUM+1
"RTN","PXRMLOGX",25,0)
 ... I NUM>STARTCHK S OK=$$CHKSLEN(FLIST,";"_IND)
"RTN","PXRMLOGX",26,0)
 ... I NUM>1 S FLIST=FLIST_";"
"RTN","PXRMLOGX",27,0)
 ... I OK S FLIST=FLIST_FTYPE_IND
"RTN","PXRMLOGX",28,0)
 S OK=$$CHKSLEN(FLIST,NUM_U)
"RTN","PXRMLOGX",29,0)
 I OK S ^PXD(811.9,IEN,40)=NUM_U_FLIST
"RTN","PXRMLOGX",30,0)
 E  D
"RTN","PXRMLOGX",31,0)
 . S ^PXD(811.9,IEN,40)=-1
"RTN","PXRMLOGX",32,0)
 . D ERRMSG("age")
"RTN","PXRMLOGX",33,0)
 Q
"RTN","PXRMLOGX",34,0)
 ;
"RTN","PXRMLOGX",35,0)
 ;==================
"RTN","PXRMLOGX",36,0)
BLDALL(IEN,KI,NODEP) ;Build all the findings lists.
"RTN","PXRMLOGX",37,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMLOGX",38,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMLOGX",39,0)
 ;Do not execute as part of exchange.
"RTN","PXRMLOGX",40,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMLOGX",41,0)
 I '$D(^PXD(811.9,IEN)) Q
"RTN","PXRMLOGX",42,0)
 D BLDPCLS^PXRMLOGX(IEN,KI,NODEP)
"RTN","PXRMLOGX",43,0)
 D BLDRESLS^PXRMLOGX(IEN,KI,NODEP)
"RTN","PXRMLOGX",44,0)
 D BLDAFL^PXRMLOGX(IEN,KI,NODEP)
"RTN","PXRMLOGX",45,0)
 D BLDINFL^PXRMLOGX(IEN,KI,NODEP)
"RTN","PXRMLOGX",46,0)
 Q
"RTN","PXRMLOGX",47,0)
 ;
"RTN","PXRMLOGX",48,0)
 ;==================
"RTN","PXRMLOGX",49,0)
BLDINFL(IEN,KI,NODEP) ;Build the list of findings that are information only.
"RTN","PXRMLOGX",50,0)
 ;This is called by the routines that build the resolution findings
"RTN","PXRMLOGX",51,0)
 ;list, the patient cohort findings list, and the age finding list.
"RTN","PXRMLOGX",52,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMLOGX",53,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMLOGX",54,0)
 ;Do not execute as part of exchange.
"RTN","PXRMLOGX",55,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMLOGX",56,0)
 N FIA,FLIST,FTYPE,IND,NODE,NUM,OK,SUB,STARTCHK,TEMP
"RTN","PXRMLOGX",57,0)
 S STARTCHK=$S($D(^PXD(811.9,IEN,25)):100,1:150)
"RTN","PXRMLOGX",58,0)
 F NODE=20,25 D
"RTN","PXRMLOGX",59,0)
 . S FTYPE=$S(NODE=25:"FF",1:"")
"RTN","PXRMLOGX",60,0)
 . S IND=0
"RTN","PXRMLOGX",61,0)
 . F  S IND=$O(^PXD(811.9,IEN,NODE,IND)) Q:+IND=0  D
"RTN","PXRMLOGX",62,0)
 ..;If an entry is being deleted skip it.
"RTN","PXRMLOGX",63,0)
 .. I IND=$G(KI),NODE=NODEP Q
"RTN","PXRMLOGX",64,0)
 .. S SUB=FTYPE_IND
"RTN","PXRMLOGX",65,0)
 .. S FIA(SUB)=""
"RTN","PXRMLOGX",66,0)
 ;Remove the patient cohort findings.
"RTN","PXRMLOGX",67,0)
 S TEMP=$G(^PXD(811.9,IEN,32))
"RTN","PXRMLOGX",68,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOGX",69,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOGX",70,0)
 F IND=1:1:NUM D
"RTN","PXRMLOGX",71,0)
 . S TEMP=$P(FLIST,";",IND)
"RTN","PXRMLOGX",72,0)
 . I $D(FIA(TEMP)) K FIA(TEMP)
"RTN","PXRMLOGX",73,0)
 ;Remove the resolution findings.
"RTN","PXRMLOGX",74,0)
 S TEMP=$G(^PXD(811.9,IEN,36))
"RTN","PXRMLOGX",75,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOGX",76,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOGX",77,0)
 F IND=1:1:NUM D
"RTN","PXRMLOGX",78,0)
 . S TEMP=$P(FLIST,";",IND)
"RTN","PXRMLOGX",79,0)
 . I $D(FIA(TEMP)) K FIA(TEMP)
"RTN","PXRMLOGX",80,0)
 ;Remove the age findings.
"RTN","PXRMLOGX",81,0)
 S TEMP=$G(^PXD(811.9,IEN,40))
"RTN","PXRMLOGX",82,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOGX",83,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOGX",84,0)
 F IND=1:1:NUM D
"RTN","PXRMLOGX",85,0)
 . S TEMP=$P(FLIST,";",IND)
"RTN","PXRMLOGX",86,0)
 . I $D(FIA(TEMP)) K FIA(TEMP)
"RTN","PXRMLOGX",87,0)
 ;What is left is the information findings.
"RTN","PXRMLOGX",88,0)
 S FLIST="",OK=1
"RTN","PXRMLOGX",89,0)
 S (IND,NUM)=0
"RTN","PXRMLOGX",90,0)
 F  S IND=$O(FIA(IND)) Q:IND=""  D
"RTN","PXRMLOGX",91,0)
 . S NUM=NUM+1
"RTN","PXRMLOGX",92,0)
 . I NUM>STARTCHK S OK=$$CHKSLEN(FLIST,";"_IND)
"RTN","PXRMLOGX",93,0)
 . I NUM>1 S FLIST=FLIST_";"
"RTN","PXRMLOGX",94,0)
 . I OK S FLIST=FLIST_IND
"RTN","PXRMLOGX",95,0)
 S OK=$$CHKSLEN(FLIST,NUM_U)
"RTN","PXRMLOGX",96,0)
 I OK S ^PXD(811.9,IEN,42)=NUM_U_FLIST
"RTN","PXRMLOGX",97,0)
 E  D
"RTN","PXRMLOGX",98,0)
 . S ^PXD(811.9,IEN,42)=-1
"RTN","PXRMLOGX",99,0)
 . D ERRMSG("information")
"RTN","PXRMLOGX",100,0)
 Q
"RTN","PXRMLOGX",101,0)
 ;
"RTN","PXRMLOGX",102,0)
 ;==================
"RTN","PXRMLOGX",103,0)
BLDPCLS(IEN,KI,NODEP) ;Build the Internal Patient Cohort Logic string for a
"RTN","PXRMLOGX",104,0)
 ;reminder. This is called by FileMan whenever the USE IN PATIENT COHORT
"RTN","PXRMLOGX",105,0)
 ;LOGIC field is edited or the user defined Patient Cohort Logic is
"RTN","PXRMLOGX",106,0)
 ;killed. Also builds the patient cohort logic list.
"RTN","PXRMLOGX",107,0)
 ;If there is a user defined PATIENT COHORT LOGIC then don't do anything.
"RTN","PXRMLOGX",108,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMLOGX",109,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMLOGX",110,0)
 ;Do not execute as part of exchange.
"RTN","PXRMLOGX",111,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMLOGX",112,0)
 I $L($G(^PXD(811.9,IEN,30)))>0 Q
"RTN","PXRMLOGX",113,0)
 N FLIST,FTYPE,IND,NODE,NUM,OK,PCLOG,STARTCHK,TEMP,UPCLOG
"RTN","PXRMLOGX",114,0)
 S STARTCHK=$S($D(^PXD(811.9,IEN,25)):100,1:150)
"RTN","PXRMLOGX",115,0)
 S OK=1
"RTN","PXRMLOGX",116,0)
 S PCLOG="(SEX)&(AGE)"
"RTN","PXRMLOGX",117,0)
 S FLIST="SEX;AGE",NUM=2
"RTN","PXRMLOGX",118,0)
 F NODE=20,25 D
"RTN","PXRMLOGX",119,0)
 . S FTYPE=$S(NODE=20:"FI",NODE=25:"FF")
"RTN","PXRMLOGX",120,0)
 . S IND=0
"RTN","PXRMLOGX",121,0)
 . F  S IND=$O(^PXD(811.9,IEN,NODE,IND)) Q:+IND=0  D
"RTN","PXRMLOGX",122,0)
 ..;If an entry is being deleted skip it.
"RTN","PXRMLOGX",123,0)
 .. I IND=$G(KI),NODE=NODEP Q
"RTN","PXRMLOGX",124,0)
 .. S TEMP=^PXD(811.9,IEN,NODE,IND,0)
"RTN","PXRMLOGX",125,0)
 .. S UPCLOG=$P(TEMP,U,7)
"RTN","PXRMLOGX",126,0)
 .. I UPCLOG'="" D
"RTN","PXRMLOGX",127,0)
 ... S PCLOG=PCLOG_UPCLOG_FTYPE_"("_IND_")"
"RTN","PXRMLOGX",128,0)
 ... S NUM=NUM+1
"RTN","PXRMLOGX",129,0)
 ... I NUM>STARTCHK S OK=$$CHKSLEN(FLIST,";"_IND)
"RTN","PXRMLOGX",130,0)
 ... I OK S FLIST=FLIST_";"_$S(NODE=25:"FF"_IND,1:IND)
"RTN","PXRMLOGX",131,0)
 ;Save the internal string and the findings list.
"RTN","PXRMLOGX",132,0)
 S OK=$$CHKSLEN(FLIST,NUM_U)
"RTN","PXRMLOGX",133,0)
 I OK D
"RTN","PXRMLOGX",134,0)
 . S ^PXD(811.9,IEN,31)=PCLOG
"RTN","PXRMLOGX",135,0)
 . S ^PXD(811.9,IEN,32)=NUM_U_FLIST
"RTN","PXRMLOGX",136,0)
 E  D
"RTN","PXRMLOGX",137,0)
 . S ^PXD(811.9,IEN,32)=-1
"RTN","PXRMLOGX",138,0)
 . D ERRMSG("cohort")
"RTN","PXRMLOGX",139,0)
 Q
"RTN","PXRMLOGX",140,0)
 ;
"RTN","PXRMLOGX",141,0)
 ;==================
"RTN","PXRMLOGX",142,0)
BLDRESLS(IEN,KI,NODEP) ;Build the Internal Resolution Logic string for a
"RTN","PXRMLOGX",143,0)
 ;reminder. This is called by FileMan whenever the USE IN RESOLUTION
"RTN","PXRMLOGX",144,0)
 ;LOGIC field is edited or the user defined Resolution Logic is killed.
"RTN","PXRMLOGX",145,0)
 ;If there is a user defined RESOLUTION LOGIC then don't do
"RTN","PXRMLOGX",146,0)
 ;anything.
"RTN","PXRMLOGX",147,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMLOGX",148,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMLOGX",149,0)
 ;Do not execute as part of exchange.
"RTN","PXRMLOGX",150,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMLOGX",151,0)
 I $L($G(^PXD(811.9,IEN,34)))>0 Q
"RTN","PXRMLOGX",152,0)
 N FLIST,FTYPE,IND,NODE,NUM,OK,RESLOG,STARTCHK,TEMP,URESLOG
"RTN","PXRMLOGX",153,0)
 S STARTCHK=$S($D(^PXD(811.9,IEN,25)):100,1:150)
"RTN","PXRMLOGX",154,0)
 S OK=1
"RTN","PXRMLOGX",155,0)
 S (FLIST,RESLOG)="",NUM=0
"RTN","PXRMLOGX",156,0)
 F NODE=20,25 D
"RTN","PXRMLOGX",157,0)
 . S FTYPE=$S(NODE=20:"FI",NODE=25:"FF")
"RTN","PXRMLOGX",158,0)
 . S IND=0
"RTN","PXRMLOGX",159,0)
 . F  S IND=$O(^PXD(811.9,IEN,NODE,IND)) Q:+IND=0  D
"RTN","PXRMLOGX",160,0)
 ..;If an entry is being deleted skip it.
"RTN","PXRMLOGX",161,0)
 .. I IND=$G(KI),NODE=NODEP Q
"RTN","PXRMLOGX",162,0)
 .. S TEMP=^PXD(811.9,IEN,NODE,IND,0)
"RTN","PXRMLOGX",163,0)
 .. S URESLOG=$P(TEMP,U,6)
"RTN","PXRMLOGX",164,0)
 .. I URESLOG'="" D
"RTN","PXRMLOGX",165,0)
 ... S RESLOG=RESLOG_URESLOG_FTYPE_"("_IND_")"
"RTN","PXRMLOGX",166,0)
 ... S NUM=NUM+1
"RTN","PXRMLOGX",167,0)
 ... I NUM>STARTCHK S OK=$$CHKSLEN(FLIST,";"_IND)
"RTN","PXRMLOGX",168,0)
 ... I NUM>1 S FLIST=FLIST_";"
"RTN","PXRMLOGX",169,0)
 ... I OK S FLIST=FLIST_$S(NODE=25:"FF"_IND,1:IND)
"RTN","PXRMLOGX",170,0)
 ;Save as the internal string and the findings list.
"RTN","PXRMLOGX",171,0)
 I RESLOG="" S ^PXD(811.9,IEN,35)=""
"RTN","PXRMLOGX",172,0)
 E  D
"RTN","PXRMLOGX",173,0)
 . S TEMP=$E(RESLOG,1,1)
"RTN","PXRMLOGX",174,0)
 . S RESLOG=$S(TEMP="&":"(1)",TEMP="!":"(0)",1:"")_RESLOG
"RTN","PXRMLOGX",175,0)
 . S ^PXD(811.9,IEN,35)=RESLOG
"RTN","PXRMLOGX",176,0)
 S OK=$$CHKSLEN(FLIST,NUM_U)
"RTN","PXRMLOGX",177,0)
 I OK S ^PXD(811.9,IEN,36)=NUM_U_FLIST
"RTN","PXRMLOGX",178,0)
 I 'OK  D
"RTN","PXRMLOGX",179,0)
 . S ^PXD(811.9,IEN,36)=-1
"RTN","PXRMLOGX",180,0)
 . D ERRMSG("resolution")
"RTN","PXRMLOGX",181,0)
 ;Check the resolution logic to see if it can be satisfied solely
"RTN","PXRMLOGX",182,0)
 ;by function findings.
"RTN","PXRMLOGX",183,0)
 I NUM>0,FLIST["FF",RESLOG'="" D CRESLOG^PXRMFFDB(NUM,FLIST,RESLOG)
"RTN","PXRMLOGX",184,0)
 Q
"RTN","PXRMLOGX",185,0)
 ;
"RTN","PXRMLOGX",186,0)
 ;==================
"RTN","PXRMLOGX",187,0)
CHKSLEN(STRING,WORD) ;Determine if appending WORD to STRING will cause
"RTN","PXRMLOGX",188,0)
 ;string to exceed the maximum string length.
"RTN","PXRMLOGX",189,0)
 N MAXSLEN S MAXSLEN=512
"RTN","PXRMLOGX",190,0)
 I ($L(STRING)+$L(WORD))>MAXSLEN Q 0
"RTN","PXRMLOGX",191,0)
 Q 1
"RTN","PXRMLOGX",192,0)
 ;
"RTN","PXRMLOGX",193,0)
 ;==================
"RTN","PXRMLOGX",194,0)
CPPCLS(IEN,X) ;Copy the user input Patient Cohort Logic string to the
"RTN","PXRMLOGX",195,0)
 ;Internal Patient Cohort Logic string.
"RTN","PXRMLOGX",196,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMLOGX",197,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMLOGX",198,0)
 ;Do not execute as part of exchange.
"RTN","PXRMLOGX",199,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMLOGX",200,0)
 S ^PXD(811.9,IEN,31)=X
"RTN","PXRMLOGX",201,0)
 ;Get the list of findings.
"RTN","PXRMLOGX",202,0)
 N FLIST,IND,NUM,OK,OPER,STACK,STARTCHK,T1,T2
"RTN","PXRMLOGX",203,0)
 S STARTCHK=$S($D(^PXD(811.9,IEN,25)):100,1:150)
"RTN","PXRMLOGX",204,0)
 S OPER="'!&<>,",NUM=0,OK=1,FLIST=""
"RTN","PXRMLOGX",205,0)
 D POSTFIX^PXRMSTAC(X,OPER,.STACK)
"RTN","PXRMLOGX",206,0)
 F IND=1:1:STACK(0) D
"RTN","PXRMLOGX",207,0)
 . S T1=STACK(IND)
"RTN","PXRMLOGX",208,0)
 . I OPER[T1 Q
"RTN","PXRMLOGX",209,0)
 . I (T1="AGE")!(T1="SEX") D  Q
"RTN","PXRMLOGX",210,0)
 .. I NUM>0 S FLIST=FLIST_";"
"RTN","PXRMLOGX",211,0)
 .. S NUM=NUM+1,FLIST=FLIST_T1
"RTN","PXRMLOGX",212,0)
 . I (T1="FF")!(T1="FI") D
"RTN","PXRMLOGX",213,0)
 .. S IND=IND+1
"RTN","PXRMLOGX",214,0)
 .. S T2=STACK(IND)
"RTN","PXRMLOGX",215,0)
 .. I NUM>0 S FLIST=FLIST_";"
"RTN","PXRMLOGX",216,0)
 .. S NUM=NUM+1
"RTN","PXRMLOGX",217,0)
 .. I NUM>STARTCHK S OK=$$CHKSLEN(FLIST,";"_IND)
"RTN","PXRMLOGX",218,0)
 .. I OK S FLIST=FLIST_$S(T1="FF":"FF"_T2,1:T2)
"RTN","PXRMLOGX",219,0)
 S OK=$$CHKSLEN(FLIST,NUM_U)
"RTN","PXRMLOGX",220,0)
 I OK S ^PXD(811.9,IEN,32)=NUM_U_FLIST
"RTN","PXRMLOGX",221,0)
 E  D
"RTN","PXRMLOGX",222,0)
 . S ^PXD(811.9,IEN,32)=-1
"RTN","PXRMLOGX",223,0)
 . D ERRMSG("cohort")
"RTN","PXRMLOGX",224,0)
 Q
"RTN","PXRMLOGX",225,0)
 ;
"RTN","PXRMLOGX",226,0)
 ;==================
"RTN","PXRMLOGX",227,0)
CPRESLS(IEN,X) ;Copy the user input Resolution Logic string to the
"RTN","PXRMLOGX",228,0)
 ;Internal Resolution Logic string.
"RTN","PXRMLOGX",229,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMLOGX",230,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMLOGX",231,0)
 ;Do not execute as part of exchange.
"RTN","PXRMLOGX",232,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMLOGX",233,0)
 S ^PXD(811.9,IEN,35)=X
"RTN","PXRMLOGX",234,0)
 ;Build the list of findings
"RTN","PXRMLOGX",235,0)
 ;Get the list of findings.
"RTN","PXRMLOGX",236,0)
 N FLIST,IND,NUM,OK,OPER,STACK,STARTCHK,T1,T2
"RTN","PXRMLOGX",237,0)
 S STARTCHK=$S($D(^PXD(811.9,IEN,25)):100,1:150)
"RTN","PXRMLOGX",238,0)
 S OPER="'!&<>",OK=1,NUM=0,FLIST=""
"RTN","PXRMLOGX",239,0)
 D POSTFIX^PXRMSTAC(X,OPER,.STACK)
"RTN","PXRMLOGX",240,0)
 F IND=1:1:STACK(0) D
"RTN","PXRMLOGX",241,0)
 . S T1=STACK(IND)
"RTN","PXRMLOGX",242,0)
 . I OPER[T1 Q
"RTN","PXRMLOGX",243,0)
 . S IND=IND+1
"RTN","PXRMLOGX",244,0)
 . S T2=STACK(IND)
"RTN","PXRMLOGX",245,0)
 . S NUM=NUM+1
"RTN","PXRMLOGX",246,0)
 . I NUM>STARTCHK S OK=$$CHKSLEN(FLIST,";"_IND)
"RTN","PXRMLOGX",247,0)
 . I NUM>1 S FLIST=FLIST_";"
"RTN","PXRMLOGX",248,0)
 . I OK S FLIST=FLIST_$S(T1="FF":"FF"_T2,1:T2)
"RTN","PXRMLOGX",249,0)
 S OK=$$CHKSLEN(FLIST,NUM_U)
"RTN","PXRMLOGX",250,0)
 I OK D
"RTN","PXRMLOGX",251,0)
 . S ^PXD(811.9,IEN,36)=NUM_U_FLIST
"RTN","PXRMLOGX",252,0)
 .;Check the resolution logic to see if it can be satisfied solely
"RTN","PXRMLOGX",253,0)
 .;by function findings.
"RTN","PXRMLOGX",254,0)
 . I NUM>0,FLIST["FF",X'="" D CRESLOG^PXRMFFDB(NUM,FLIST,X)
"RTN","PXRMLOGX",255,0)
 I 'OK D
"RTN","PXRMLOGX",256,0)
 . S ^PXD(811.9,IEN,40)=-1
"RTN","PXRMLOGX",257,0)
 . D ERRMSG("resolution")
"RTN","PXRMLOGX",258,0)
 Q
"RTN","PXRMLOGX",259,0)
 ;
"RTN","PXRMLOGX",260,0)
 ;==================
"RTN","PXRMLOGX",261,0)
DELNXR(X2) ;For a new style cross-reference check X2 to determine
"RTN","PXRMLOGX",262,0)
 ;if a delete is being done. If it is a delete all the X2 elements will
"RTN","PXRMLOGX",263,0)
 ;be null.
"RTN","PXRMLOGX",264,0)
 N IND,X2NULL
"RTN","PXRMLOGX",265,0)
 S X2NULL=1
"RTN","PXRMLOGX",266,0)
 S IND=0
"RTN","PXRMLOGX",267,0)
 F  S IND=$O(X2(IND)) Q:(+IND=0)!('X2NULL)  D
"RTN","PXRMLOGX",268,0)
 . I X2(IND)'="" S X2NULL=0
"RTN","PXRMLOGX",269,0)
 Q X2NULL
"RTN","PXRMLOGX",270,0)
 ;
"RTN","PXRMLOGX",271,0)
 ;==================
"RTN","PXRMLOGX",272,0)
EDITNXR(X1,X2) ;For a new style cross-reference check X1 and X2 to determine
"RTN","PXRMLOGX",273,0)
 ;if an edit is being done.
"RTN","PXRMLOGX",274,0)
 N ADD,AREDIFF,EDIT,IND,X1NULL,X2NULL
"RTN","PXRMLOGX",275,0)
 S AREDIFF=0
"RTN","PXRMLOGX",276,0)
 S (X1NULL,X2NULL)=1
"RTN","PXRMLOGX",277,0)
 S IND=0
"RTN","PXRMLOGX",278,0)
 F  S IND=$O(X1(IND)) Q:+IND=0  D
"RTN","PXRMLOGX",279,0)
 . I X1(IND)'="" S X1NULL=0
"RTN","PXRMLOGX",280,0)
 . I X2(IND)'="" S X2NULL=0
"RTN","PXRMLOGX",281,0)
 . I X1(IND)'=X2(IND) S AREDIFF=1
"RTN","PXRMLOGX",282,0)
 I X1NULL&'X2NULL S ADD=1
"RTN","PXRMLOGX",283,0)
 E  S ADD=0
"RTN","PXRMLOGX",284,0)
 I 'X1NULL&'X2NULL&AREDIFF S EDIT=1
"RTN","PXRMLOGX",285,0)
 E  S EDIT=0
"RTN","PXRMLOGX",286,0)
 Q (ADD!EDIT)
"RTN","PXRMLOGX",287,0)
 ;
"RTN","PXRMLOGX",288,0)
 ;==================
"RTN","PXRMLOGX",289,0)
ERRMSG(FTYPE) ;Display too many findings error message.
"RTN","PXRMLOGX",290,0)
 N TEXT
"RTN","PXRMLOGX",291,0)
 S TEXT(1)=" "
"RTN","PXRMLOGX",292,0)
 S TEXT(2)="Error - The number of "_FTYPE_" findings exceeds the maximum allowed!"
"RTN","PXRMLOGX",293,0)
 S TEXT(3)="The reminder will not function properly until some are removed."
"RTN","PXRMLOGX",294,0)
 S TEXT(4)=" "
"RTN","PXRMLOGX",295,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMLOGX",296,0)
 Q
"RTN","PXRMLOGX",297,0)
 ;
"RTN","PXRMLPHS")
0^95^B5917705
"RTN","PXRMLPHS",1,0)
PXRMLPHS ; SLC/PJH,PKR - Run Health Summaries from Patient List ;08/08/2005
"RTN","PXRMLPHS",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLPHS",3,0)
 ; 
"RTN","PXRMLPHS",4,0)
 ;External Ref DBIA #398
"RTN","PXRMLPHS",5,0)
 ;
"RTN","PXRMLPHS",6,0)
HSA(LISTIEN) ;Run health summary for all patients on this patient list.
"RTN","PXRMLPHS",7,0)
 N HSIEN,PLNODE
"RTN","PXRMLPHS",8,0)
 ;Initialise
"RTN","PXRMLPHS",9,0)
 D FULL^VALM1
"RTN","PXRMLPHS",10,0)
 ;Reset screen mode
"RTN","PXRMLPHS",11,0)
 W IORESET
"RTN","PXRMLPHS",12,0)
 ;
"RTN","PXRMLPHS",13,0)
 ;Select Health Summary
"RTN","PXRMLPHS",14,0)
 D HSEL(.HSIEN) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMLPHS",15,0)
 ;
"RTN","PXRMLPHS",16,0)
 S PLNODE="PXRMLPHS"_$J_$$NOW^XLFDT
"RTN","PXRMLPHS",17,0)
 K ^XTMP(PLNODE)
"RTN","PXRMLPHS",18,0)
 S ^XTMP(PLNODE,0)=$$FMADD^XLFDT(DT,2)_U_DT_"HSI LIST"
"RTN","PXRMLPHS",19,0)
 D SORT(LISTIEN,PLNODE)
"RTN","PXRMLPHS",20,0)
 D QUE(HSIEN,PLNODE)
"RTN","PXRMLPHS",21,0)
 Q
"RTN","PXRMLPHS",22,0)
 ;
"RTN","PXRMLPHS",23,0)
HSEL(IEN) ;Select Health Summary Type
"RTN","PXRMLPHS",24,0)
 N X,Y,DIC
"RTN","PXRMLPHS",25,0)
HS1 S DIC=142,DIC(0)="QAEMZ"
"RTN","PXRMLPHS",26,0)
 S DIC("A")="Select HEALTH SUMMARY TYPE: "
"RTN","PXRMLPHS",27,0)
 W !
"RTN","PXRMLPHS",28,0)
 D ^DIC
"RTN","PXRMLPHS",29,0)
 I X="" W !,"A health summary type name must be entered" G HS1
"RTN","PXRMLPHS",30,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMLPHS",31,0)
 I Y=-1 S DUOUT=1
"RTN","PXRMLPHS",32,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMLPHS",33,0)
 ;Return HS ien
"RTN","PXRMLPHS",34,0)
 S IEN=$P(Y,U)
"RTN","PXRMLPHS",35,0)
 Q
"RTN","PXRMLPHS",36,0)
 ;
"RTN","PXRMLPHS",37,0)
HSI(PLNODE) ;Print health summary for selected patients.
"RTN","PXRMLPHS",38,0)
 N HSIEN
"RTN","PXRMLPHS",39,0)
 ;Initialise
"RTN","PXRMLPHS",40,0)
 D FULL^VALM1
"RTN","PXRMLPHS",41,0)
 ;Reset screen mode
"RTN","PXRMLPHS",42,0)
 W IORESET
"RTN","PXRMLPHS",43,0)
 ;
"RTN","PXRMLPHS",44,0)
 ;Select Health Summary
"RTN","PXRMLPHS",45,0)
 D HSEL(.HSIEN) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMLPHS",46,0)
 D QUE(HSIEN,PLNODE)
"RTN","PXRMLPHS",47,0)
 Q
"RTN","PXRMLPHS",48,0)
 ;
"RTN","PXRMLPHS",49,0)
PRINT(HSIEN,PLNODE) ;Print HS for Patient List IEN
"RTN","PXRMLPHS",50,0)
 N DFN,DIROUT,SUB
"RTN","PXRMLPHS",51,0)
 ;Print HS for each patient
"RTN","PXRMLPHS",52,0)
 S SUB=0
"RTN","PXRMLPHS",53,0)
 F  S SUB=$O(^XTMP(PLNODE,SUB)) Q:(SUB="")!$D(DIROUT)  D
"RTN","PXRMLPHS",54,0)
 .S DFN=^XTMP(PLNODE,SUB)
"RTN","PXRMLPHS",55,0)
 .D ENX^GMTSDVR(DFN,HSIEN,"","") ; DBIA #398
"RTN","PXRMLPHS",56,0)
 ;
"RTN","PXRMLPHS",57,0)
 ;Clear workfile
"RTN","PXRMLPHS",58,0)
 K ^XTMP(PLNODE)
"RTN","PXRMLPHS",59,0)
 Q
"RTN","PXRMLPHS",60,0)
 ;
"RTN","PXRMLPHS",61,0)
QUE(HSIEN,PLNODE) ;Determine whether the report should be queued.
"RTN","PXRMLPHS",62,0)
 N PXRMQUE,RETZTSK,%ZIS,ZTDESC,ZTRTN,ZTSK,ZTSAVE
"RTN","PXRMLPHS",63,0)
 S %ZIS="M"
"RTN","PXRMLPHS",64,0)
 S ZTDESC="Patient List Health Summaries - print"
"RTN","PXRMLPHS",65,0)
 S ZTRTN="PRINT^PXRMLPHS(HSIEN,PLNODE)"
"RTN","PXRMLPHS",66,0)
 S ZTSAVE("HSIEN")=""
"RTN","PXRMLPHS",67,0)
 S ZTSAVE("PLNODE")=""
"RTN","PXRMLPHS",68,0)
 S RETZTSK=1
"RTN","PXRMLPHS",69,0)
 S PXRMQUE=$$DEVICE^PXRMXQUE(ZTRTN,ZTDESC,.ZTSAVE,.%ZIS,.RETZTSK)
"RTN","PXRMLPHS",70,0)
 S VALMBCK="R"
"RTN","PXRMLPHS",71,0)
 Q
"RTN","PXRMLPHS",72,0)
 ;
"RTN","PXRMLPHS",73,0)
SORT(LISTIEN,PLNODE) ;Sort workfile as required
"RTN","PXRMLPHS",74,0)
 N DATA,DFN,IND,PNAME
"RTN","PXRMLPHS",75,0)
 ;Build the list in alphabetical order.
"RTN","PXRMLPHS",76,0)
 S IND=0
"RTN","PXRMLPHS",77,0)
 F  S IND=$O(^PXRMXP(810.5,LISTIEN,30,IND)) Q:'IND  D
"RTN","PXRMLPHS",78,0)
 .S DATA=$G(^PXRMXP(810.5,LISTIEN,30,IND,0)) Q:DATA=""
"RTN","PXRMLPHS",79,0)
 .S DFN=$P(DATA,U) Q:'DFN
"RTN","PXRMLPHS",80,0)
 .;DBIA #10035
"RTN","PXRMLPHS",81,0)
 .S PNAME=$P(^DPT(DFN,0),U,1) Q:PNAME=""
"RTN","PXRMLPHS",82,0)
 .S ^XTMP(PLNODE,PNAME)=DFN
"RTN","PXRMLPHS",83,0)
 Q
"RTN","PXRMLPHS",84,0)
 ;
"RTN","PXRMLPM")
1^47
"RTN","PXRMLPOE")
0^10^B17281673
"RTN","PXRMLPOE",1,0)
PXRMLPOE ; SLC/PJH - Build OE/RR Team from Patient List;07/08/2002
"RTN","PXRMLPOE",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLPOE",3,0)
 ; 
"RTN","PXRMLPOE",4,0)
 ; Called from PXRM PATIENT LIST OE/RR protocol
"RTN","PXRMLPOE",5,0)
 ;
"RTN","PXRMLPOE",6,0)
OERR(IENO) ;Copy patient list to OE/RR Team
"RTN","PXRMLPOE",7,0)
 ;
"RTN","PXRMLPOE",8,0)
 ;Check if OK to copy
"RTN","PXRMLPOE",9,0)
 D ASK(IENO,"Copy") Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMLPOE",10,0)
 ;
"RTN","PXRMLPOE",11,0)
 N IENN,NNAME,ONAME,TEXT,X,Y
"RTN","PXRMLPOE",12,0)
 ;
"RTN","PXRMLPOE",13,0)
 ;Select OE/RR Team to copy to
"RTN","PXRMLPOE",14,0)
 S TEXT="Select OE/RR TEAM name to copy to: "
"RTN","PXRMLPOE",15,0)
 D OTEAM(.IENN,.NNAME,TEXT) Q:$D(DUOUT)!$D(DTOUT)  Q:'IENN
"RTN","PXRMLPOE",16,0)
 ;
"RTN","PXRMLPOE",17,0)
 S ONAME=$P($G(^PXRMXP(810.5,IENO,0)),U)
"RTN","PXRMLPOE",18,0)
 ;
"RTN","PXRMLPOE",19,0)
 ;Load list into ^TMP
"RTN","PXRMLPOE",20,0)
 D LOAD("PXRMRULE",IENO)
"RTN","PXRMLPOE",21,0)
 ;Update OE/RR Team list
"RTN","PXRMLPOE",22,0)
 D UPDLST("PXRMRULE",IENN,NNAME)
"RTN","PXRMLPOE",23,0)
 ;
"RTN","PXRMLPOE",24,0)
 W !!,"Completed copy of patient list '"_ONAME_"'"
"RTN","PXRMLPOE",25,0)
 W !,"into OE/RR Team '"_NNAME_"'",! H 4
"RTN","PXRMLPOE",26,0)
 Q
"RTN","PXRMLPOE",27,0)
 ;
"RTN","PXRMLPOE",28,0)
OK ;Option to overwrite existing list
"RTN","PXRMLPOE",29,0)
 N X,Y,TEXT
"RTN","PXRMLPOE",30,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMLPOE",31,0)
 S DIR(0)="YA0"
"RTN","PXRMLPOE",32,0)
 S DIR("A")="Overwrite existing OE/RR Team list: "
"RTN","PXRMLPOE",33,0)
 S DIR("B")="N"
"RTN","PXRMLPOE",34,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMLPOE",35,0)
 S DIR("??")=U_"D HELP^PXRMLCR(1)"
"RTN","PXRMLPOE",36,0)
 W !
"RTN","PXRMLPOE",37,0)
 D ^DIR K DIR
"RTN","PXRMLPOE",38,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMLPOE",39,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMLPOE",40,0)
 I $E(Y(0))="N" S DUOUT=1 Q
"RTN","PXRMLPOE",41,0)
 Q
"RTN","PXRMLPOE",42,0)
 ;
"RTN","PXRMLPOE",43,0)
ASK(PLIEN,OPT) ;Verify patient list name
"RTN","PXRMLPOE",44,0)
 N X,Y,TEXT
"RTN","PXRMLPOE",45,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMLPOE",46,0)
 S DIR(0)="YA0"
"RTN","PXRMLPOE",47,0)
 S DIR("A")=OPT_" patient list "_$P($G(^PXRMXP(810.5,PLIEN,0)),U)_"?: "
"RTN","PXRMLPOE",48,0)
 S DIR("B")="N"
"RTN","PXRMLPOE",49,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMLPOE",50,0)
 W !
"RTN","PXRMLPOE",51,0)
 D ^DIR K DIR
"RTN","PXRMLPOE",52,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMLPOE",53,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMLPOE",54,0)
 I $E(Y(0))="N" S DUOUT=1 Q
"RTN","PXRMLPOE",55,0)
 Q
"RTN","PXRMLPOE",56,0)
 ;
"RTN","PXRMLPOE",57,0)
 ;
"RTN","PXRMLPOE",58,0)
LOAD(NODE,LIST) ;Load Patient List
"RTN","PXRMLPOE",59,0)
 N DFN,INC,SUB
"RTN","PXRMLPOE",60,0)
 S SUB=0,INC=0
"RTN","PXRMLPOE",61,0)
 K ^TMP(NODE,$J)
"RTN","PXRMLPOE",62,0)
 F  S SUB=$O(^PXRMXP(810.5,LIST,30,SUB)) Q:'SUB  D
"RTN","PXRMLPOE",63,0)
 .S DFN=$P($G(^PXRMXP(810.5,LIST,30,SUB,0)),U) Q:'DFN
"RTN","PXRMLPOE",64,0)
 .S INC=INC+1,^TMP(NODE,$J,INC)=DFN
"RTN","PXRMLPOE",65,0)
 Q
"RTN","PXRMLPOE",66,0)
 ;
"RTN","PXRMLPOE",67,0)
OTEAM(LIST,NAME,TEXT) ;Select OERR/Team
"RTN","PXRMLPOE",68,0)
 N X,Y,DIC,DIE,DR,DLAYGO
"RTN","PXRMLPOE",69,0)
 W !
"RTN","PXRMLPOE",70,0)
 W !,"To overwrite an existing list you must be the creator of the list and"
"RTN","PXRMLPOE",71,0)
 W !,"the OE/RR team list must be defined as a Team List."
"RTN","PXRMLPOE",72,0)
OT1 S DIC=100.21,DLAYGO=DIC,DIC(0)="QAEMZL"
"RTN","PXRMLPOE",73,0)
 S DIC("S")="I $P($G(^(0)),U,2)=""TM"",$P($G(^(0)),U,5)=DUZ"
"RTN","PXRMLPOE",74,0)
 S DIC("A")=TEXT
"RTN","PXRMLPOE",75,0)
 W !
"RTN","PXRMLPOE",76,0)
 D ^DIC
"RTN","PXRMLPOE",77,0)
 I X="" W !,"An OE/RR Team name must be entered" G OT1
"RTN","PXRMLPOE",78,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMLPOE",79,0)
 I Y=-1 S DUOUT=1
"RTN","PXRMLPOE",80,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMLPOE",81,0)
 ;
"RTN","PXRMLPOE",82,0)
 ;Check if OK to overwrite
"RTN","PXRMLPOE",83,0)
 I $P(Y,U,3)'=1  D  Q:$D(DTOUT)  G:$D(DUOUT) OT1
"RTN","PXRMLPOE",84,0)
 .D OK
"RTN","PXRMLPOE",85,0)
 ;Return list ien
"RTN","PXRMLPOE",86,0)
 S LIST=$P(Y,U),NAME=$P(Y,U,2)
"RTN","PXRMLPOE",87,0)
 Q
"RTN","PXRMLPOE",88,0)
 ;
"RTN","PXRMLPOE",89,0)
UPDLST(NODE,LIST,NAME) ;Update patient list
"RTN","PXRMLPOE",90,0)
 N CNT,DA,DFN,DIK,DUOUT,FDA,MSG,SUB,TEMP
"RTN","PXRMLPOE",91,0)
 ;Lock patient list
"RTN","PXRMLPOE",92,0)
 D LOCK Q:$D(DUOUT)
"RTN","PXRMLPOE",93,0)
 ;
"RTN","PXRMLPOE",94,0)
 ;Clear existing list
"RTN","PXRMLPOE",95,0)
 S SUB=0
"RTN","PXRMLPOE",96,0)
 F  S SUB=$O(^OR(100.21,LIST,10,SUB)) Q:'SUB  D
"RTN","PXRMLPOE",97,0)
 .S DA=SUB,DA(1)=LIST,DIK="^OR(100.21,"_DA(1)_",10,"
"RTN","PXRMLPOE",98,0)
 .D ^DIK
"RTN","PXRMLPOE",99,0)
 ;
"RTN","PXRMLPOE",100,0)
 ;DBIA #4561 putting data into OE/RR list
"RTN","PXRMLPOE",101,0)
 ;Merge ^TMP into Patient List
"RTN","PXRMLPOE",102,0)
 W !,"Updating "_NAME
"RTN","PXRMLPOE",103,0)
 S DFN=0,CNT=1
"RTN","PXRMLPOE",104,0)
 F  S DFN=$O(^TMP(NODE,$J,DFN)) Q:'DFN  D
"RTN","PXRMLPOE",105,0)
 .S CNT=CNT+1
"RTN","PXRMLPOE",106,0)
 .S ^TMP("PXRMFDA",$J,100.2101,"?+"_CNT_",?1,",.01)=$G(^TMP(NODE,$J,DFN))_";DPT("
"RTN","PXRMLPOE",107,0)
 ;Update
"RTN","PXRMLPOE",108,0)
 S ^TMP("PXRMFDA",$J,100.21,"?1,",.01)=NAME
"RTN","PXRMLPOE",109,0)
 S ^TMP("PXRMFDA",$J,100.21,"?1,",.1)=$$UP^XLFSTR(NAME)
"RTN","PXRMLPOE",110,0)
 S ^TMP("PXRMFDA",$J,100.21,"?1,",1)="TM"
"RTN","PXRMLPOE",111,0)
 S ^TMP("PXRMFDA",$J,100.21,"?1,",1.6)=DUZ
"RTN","PXRMLPOE",112,0)
 S ^TMP("PXRMFDA",$J,100.21,"?1,",1.65)=$$NOW^XLFDT
"RTN","PXRMLPOE",113,0)
 S TEMP="^TMP(""PXRMFDA"","_$J_")"
"RTN","PXRMLPOE",114,0)
 D UPDATE^DIE("",TEMP,"","MSG")
"RTN","PXRMLPOE",115,0)
 ;Error
"RTN","PXRMLPOE",116,0)
 I $D(MSG) D ERR
"RTN","PXRMLPOE",117,0)
 ;Unlock patient list
"RTN","PXRMLPOE",118,0)
 D UNLOCK
"RTN","PXRMLPOE",119,0)
 K ^TMP(NODE,$J)
"RTN","PXRMLPOE",120,0)
 Q
"RTN","PXRMLPOE",121,0)
 ;
"RTN","PXRMLPOE",122,0)
 ;File locking
"RTN","PXRMLPOE",123,0)
UNLOCK L -^PXRMXP(100.21,LIST) Q
"RTN","PXRMLPOE",124,0)
LOCK L +^PXRMXP(100.21,LIST):0
"RTN","PXRMLPOE",125,0)
 E  W !!?5,"Another user is using this OE/RR team list" S DUOUT=1
"RTN","PXRMLPOE",126,0)
 Q
"RTN","PXRMLPOE",127,0)
 ;
"RTN","PXRMLPOE",128,0)
ERR ;Error Handler
"RTN","PXRMLPOE",129,0)
 N ERROR,IC,REF
"RTN","PXRMLPOE",130,0)
 S ERROR(1)="Unable to build patient list : "
"RTN","PXRMLPOE",131,0)
 S ERROR(2)=NAME
"RTN","PXRMLPOE",132,0)
 S ERROR(3)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMLPOE",133,0)
 ;Move MSG into ERROR
"RTN","PXRMLPOE",134,0)
 S REF="MSG"
"RTN","PXRMLPOE",135,0)
 F IC=4:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMLPOE",136,0)
 ;Screen message
"RTN","PXRMLPOE",137,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMLPOE",138,0)
 Q
"RTN","PXRMLPP")
0^43^B46321797
"RTN","PXRMLPP",1,0)
PXRMLPP ; SLC/PKR/PJH - Reminder Patient List Patients ;01/06/2006
"RTN","PXRMLPP",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLPP",3,0)
 ;
"RTN","PXRMLPP",4,0)
 ;Main entry point for PXRM PATIENT LIST
"RTN","PXRMLPP",5,0)
START(IEN) ;
"RTN","PXRMLPP",6,0)
 N CDATE,CLASS,CREATOR,LDATA,LNAME,PXRMVIEW,SNAME,SOURCE,TYPE
"RTN","PXRMLPP",7,0)
 N VALMBCK,VALMBG,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMLPP",8,0)
 ;Get Patient List record and associated data.
"RTN","PXRMLPP",9,0)
 S LDATA=$G(^PXRMXP(810.5,IEN,0))
"RTN","PXRMLPP",10,0)
 S LNAME=$P(LDATA,U,1)
"RTN","PXRMLPP",11,0)
 S CDATE=$P(LDATA,U,4)
"RTN","PXRMLPP",12,0)
 S SOURCE=$P(LDATA,U,5),SNAME=""
"RTN","PXRMLPP",13,0)
 ;Check if generated from #810.2
"RTN","PXRMLPP",14,0)
 I SOURCE S SNAME="Extract Parameter - "_$P($G(^PXRM(810.2,SOURCE,0)),U)
"RTN","PXRMLPP",15,0)
 ;If not check if generated from #810.4
"RTN","PXRMLPP",16,0)
 I SNAME="" D
"RTN","PXRMLPP",17,0)
 . S SOURCE=$P(LDATA,U,6)
"RTN","PXRMLPP",18,0)
 . I SOURCE'="" S SNAME="List Rule - "_$P($G(^PXRM(810.4,SOURCE,0)),U)
"RTN","PXRMLPP",19,0)
 ;If still no source check for created from Reminder Due Report.
"RTN","PXRMLPP",20,0)
 I SNAME="" D
"RTN","PXRMLPP",21,0)
 . S SOURCE=$P(LDATA,U,9)
"RTN","PXRMLPP",22,0)
 . I SOURCE'="" S SNAME="Reminder Due Report"
"RTN","PXRMLPP",23,0)
 ;If there still is no source then assume it was generated in the
"RTN","PXRMLPP",24,0)
 ;past by a Reminder Due Report.
"RTN","PXRMLPP",25,0)
 I SNAME="" S SNAME="Reminder Due Report"
"RTN","PXRMLPP",26,0)
 ;Creator
"RTN","PXRMLPP",27,0)
 S CREATOR=+$P(LDATA,U,7)
"RTN","PXRMLPP",28,0)
 S CREATOR=$S(CREATOR>0:$$GET1^DIQ(200,CREATOR,.01),1:"None")
"RTN","PXRMLPP",29,0)
 ;Type
"RTN","PXRMLPP",30,0)
 S TYPE=$P(LDATA,U,8)
"RTN","PXRMLPP",31,0)
 S TYPE=$$EXTERNAL^DILFD(810.5,.08,"",TYPE,.EM)
"RTN","PXRMLPP",32,0)
 ;Class
"RTN","PXRMLPP",33,0)
 S CLASS=$P($G(^PXRMXP(810.5,IEN,100)),U)
"RTN","PXRMLPP",34,0)
 S CLASS=$S(CLASS="N":"National",CLASS="V":"VISN",1:"Local")
"RTN","PXRMLPP",35,0)
 ;Default view by name.
"RTN","PXRMLPP",36,0)
 S PXRMVIEW="N"
"RTN","PXRMLPP",37,0)
 S VALMCNT=0
"RTN","PXRMLPP",38,0)
 D EN^VALM("PXRM PATIENT LIST PATIENTS")
"RTN","PXRMLPP",39,0)
 Q
"RTN","PXRMLPP",40,0)
 ;
"RTN","PXRMLPP",41,0)
BLDLIST(IEN) ;Build a list of all patients
"RTN","PXRMLPP",42,0)
 N IND,INCINST
"RTN","PXRMLPP",43,0)
 S INCINST=+$P(^PXRMXP(810.5,IEN,0),U,10)
"RTN","PXRMLPP",44,0)
 I 'INCINST D CHGCAP^VALM("HEADER3","")
"RTN","PXRMLPP",45,0)
 K ^TMP("PXRMLPP",$J),^TMP("PXRMLPPA",$J),^TMP("PXRMLPPI",$J)
"RTN","PXRMLPP",46,0)
 D LIST(.VALMCNT,.IEN,INCINST)
"RTN","PXRMLPP",47,0)
 F IND=1:1:VALMCNT D
"RTN","PXRMLPP",48,0)
 .S ^TMP("PXRMLPP",$J,"IDX",IND,IND)=^TMP("PXRMLPPI",$J,IND)
"RTN","PXRMLPP",49,0)
 K ^TMP("PXRMLPPI",$J)
"RTN","PXRMLPP",50,0)
 Q
"RTN","PXRMLPP",51,0)
DEM ;
"RTN","PXRMLPP",52,0)
 D FULL^VALM1
"RTN","PXRMLPP",53,0)
 D EN^PXRMPDR(IEN)
"RTN","PXRMLPP",54,0)
 S VALMBCK="R"
"RTN","PXRMLPP",55,0)
 Q
"RTN","PXRMLPP",56,0)
 ;
"RTN","PXRMLPP",57,0)
EDIT ;Edit selected patient list fields.
"RTN","PXRMLPP",58,0)
 N DA,DIE,DR,TEMP
"RTN","PXRMLPP",59,0)
 S DA=IEN,DIE="^PXRMXP(810.5,"
"RTN","PXRMLPP",60,0)
 S DR=".01;.08"
"RTN","PXRMLPP",61,0)
 I $D(^XUSEC("PXRM MANAGER",DUZ)) S DR=DR_";.07"
"RTN","PXRMLPP",62,0)
 D ^DIE
"RTN","PXRMLPP",63,0)
 S TEMP=^PXRMXP(810.5,IEN,0)
"RTN","PXRMLPP",64,0)
 S LNAME=$P(TEMP,U,1),CREATOR=$P(TEMP,U,7),TYPE=$P(TEMP,U,8)
"RTN","PXRMLPP",65,0)
 S CREATOR=$P(^VA(200,CREATOR,0),U,1)
"RTN","PXRMLPP",66,0)
 D HDR^PXRMLPP
"RTN","PXRMLPP",67,0)
 S VALMBCK="R"
"RTN","PXRMLPP",68,0)
 Q
"RTN","PXRMLPP",69,0)
 ;
"RTN","PXRMLPP",70,0)
EDITOK(IEN) ;Screen for protocol PXRM PATIENT LIST EDIT, return true if
"RTN","PXRMLPP",71,0)
 ;the user is permitted to edit the selected patient list.
"RTN","PXRMLPP",72,0)
 I $D(^XUSEC("PXRM MANAGER",DUZ)) Q 1
"RTN","PXRMLPP",73,0)
 N CREATOR
"RTN","PXRMLPP",74,0)
 S CREATOR=$P(^PXRMXP(810.5,IEN,0),U,7)
"RTN","PXRMLPP",75,0)
 Q $S(CREATOR=DUZ:1,1:0)
"RTN","PXRMLPP",76,0)
 ;
"RTN","PXRMLPP",77,0)
ENTRY ;Entry code
"RTN","PXRMLPP",78,0)
 D BLDLIST(IEN)
"RTN","PXRMLPP",79,0)
 D XQORM
"RTN","PXRMLPP",80,0)
 Q
"RTN","PXRMLPP",81,0)
 ;
"RTN","PXRMLPP",82,0)
EXIT ;Exit code
"RTN","PXRMLPP",83,0)
 K ^TMP("PXRMLPP",$J)
"RTN","PXRMLPP",84,0)
 K ^TMP("PXRMLPPH",$J)
"RTN","PXRMLPP",85,0)
 D CLEAN^VALM10
"RTN","PXRMLPP",86,0)
 D FULL^VALM1
"RTN","PXRMLPP",87,0)
 S VALMBCK="R"
"RTN","PXRMLPP",88,0)
 Q
"RTN","PXRMLPP",89,0)
 ;
"RTN","PXRMLPP",90,0)
FRE(NUMBER,NAME,INST,DFN) ;Format  entry number, name and primary station
"RTN","PXRMLPP",91,0)
 N TEMP,TNAME,TSOURCE
"RTN","PXRMLPP",92,0)
 S TEMP=$$RJ^XLFSTR(NUMBER,5," ")
"RTN","PXRMLPP",93,0)
 S TNAME=$E(NAME,1,30)
"RTN","PXRMLPP",94,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(TNAME,32," ")
"RTN","PXRMLPP",95,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(DFN,15," ")
"RTN","PXRMLPP",96,0)
 I INST'="" S TEMP=TEMP_"  "_INST
"RTN","PXRMLPP",97,0)
 Q TEMP
"RTN","PXRMLPP",98,0)
 ;
"RTN","PXRMLPP",99,0)
HDR ; Header code
"RTN","PXRMLPP",100,0)
 S VALMHDR(1)="List Name: "_LNAME_" ("_VALMCNT_" patients)"
"RTN","PXRMLPP",101,0)
 S VALMHDR(2)=" Created: "_$$FMTE^XLFDT(CDATE,"5Z")
"RTN","PXRMLPP",102,0)
 S VALMHDR(2)=$$LJ^XLFSTR(VALMHDR(2),40)_"Creator: "_CREATOR
"RTN","PXRMLPP",103,0)
 S VALMHDR(3)=" Class: "_CLASS
"RTN","PXRMLPP",104,0)
 S VALMHDR(3)=$$LJ^XLFSTR(VALMHDR(3),40)_"Type: "_TYPE
"RTN","PXRMLPP",105,0)
 S VALMHDR(4)=" Source: "_SNAME
"RTN","PXRMLPP",106,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMLPP",107,0)
 Q
"RTN","PXRMLPP",108,0)
 ;
"RTN","PXRMLPP",109,0)
HLP ;Help code
"RTN","PXRMLPP",110,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMLPP",111,0)
 S SUB="PXRMLPPH"
"RTN","PXRMLPP",112,0)
 D EN^VALM("PXRM PATIENT LIST HELP")
"RTN","PXRMLPP",113,0)
 Q
"RTN","PXRMLPP",114,0)
HSA ;Print Health Summary for all patients on list
"RTN","PXRMLPP",115,0)
 D HSA^PXRMLPHS(IEN)
"RTN","PXRMLPP",116,0)
 S VALMBCK="R"
"RTN","PXRMLPP",117,0)
 Q
"RTN","PXRMLPP",118,0)
 ;
"RTN","PXRMLPP",119,0)
HSI ;Print Health Summary for selected patients.
"RTN","PXRMLPP",120,0)
 ;Full Screen
"RTN","PXRMLPP",121,0)
 W IORESET
"RTN","PXRMLPP",122,0)
 N IND,DFN,PLNODE,PNAME,VALMY
"RTN","PXRMLPP",123,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMLPP",124,0)
 ;If there is no list quit.
"RTN","PXRMLPP",125,0)
 I '$D(VALMY) Q
"RTN","PXRMLPP",126,0)
 S PLNODE="PXRMLPHS"_$J_$$NOW^XLFDT
"RTN","PXRMLPP",127,0)
 K ^XTMP(PLNODE)
"RTN","PXRMLPP",128,0)
 S ^XTMP(PLNODE,0)=$$FMADD^XLFDT(DT,2)_U_DT_"HSI LIST"
"RTN","PXRMLPP",129,0)
 S IND="",PXRMDONE=0
"RTN","PXRMLPP",130,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMLPP",131,0)
 .;Get the patient list ien.
"RTN","PXRMLPP",132,0)
 .S DFN=^TMP("PXRMLPP",$J,"IDX",IND,IND)
"RTN","PXRMLPP",133,0)
 .;DBIA #10035
"RTN","PXRMLPP",134,0)
 .S PNAME=$P(^DPT(DFN,0),U,1)
"RTN","PXRMLPP",135,0)
 .S ^XTMP(PLNODE,PNAME)=DFN
"RTN","PXRMLPP",136,0)
 D HSI^PXRMLPHS(PLNODE)
"RTN","PXRMLPP",137,0)
 S VALMBCK="R"
"RTN","PXRMLPP",138,0)
 Q
"RTN","PXRMLPP",139,0)
 ;
"RTN","PXRMLPP",140,0)
INIT ;Init
"RTN","PXRMLPP",141,0)
 S VALMCNT=0
"RTN","PXRMLPP",142,0)
 Q
"RTN","PXRMLPP",143,0)
 ;
"RTN","PXRMLPP",144,0)
LIST(VALMCNT,IEN,INCINST) ;Build a list of patients.
"RTN","PXRMLPP",145,0)
 N DATA,DFN,IND,INST,NEXT,PNAME,SUB
"RTN","PXRMLPP",146,0)
 ;Build the ordered list.
"RTN","PXRMLPP",147,0)
 S IND=0,SUB="NAME"
"RTN","PXRMLPP",148,0)
 F  S IND=$O(^PXRMXP(810.5,IEN,30,IND)) Q:'IND  D
"RTN","PXRMLPP",149,0)
 .S DATA=$G(^PXRMXP(810.5,IEN,30,IND,0)) Q:DATA=""
"RTN","PXRMLPP",150,0)
 .S DFN=$P(DATA,U) Q:'DFN
"RTN","PXRMLPP",151,0)
 .;#DBIA 10035
"RTN","PXRMLPP",152,0)
 .S PNAME=$P($G(^DPT(DFN,0)),U,1)
"RTN","PXRMLPP",153,0)
 .S INSTNUM=$P(DATA,U,2) S:INSTNUM="" INSTNUM="NONE"
"RTN","PXRMLPP",154,0)
 .S INST=$P(DATA,U,3)
"RTN","PXRMLPP",155,0)
 .;Lists built before PXRM*2*4 will only have the Institution ien.
"RTN","PXRMLPP",156,0)
 .I INST="" S INST=$P(DATA,U,2)
"RTN","PXRMLPP",157,0)
 .I INST="" S INST="NONE"
"RTN","PXRMLPP",158,0)
 .I PXRMVIEW="I" S SUB=INST
"RTN","PXRMLPP",159,0)
 .S ^TMP("PXRMLPPA",$J,SUB,PNAME,DFN)=INST
"RTN","PXRMLPP",160,0)
 ;Transfer to list manager array 
"RTN","PXRMLPP",161,0)
 S SUB="",VALMCNT=0
"RTN","PXRMLPP",162,0)
 F  S SUB=$O(^TMP("PXRMLPPA",$J,SUB)) Q:SUB=""  D
"RTN","PXRMLPP",163,0)
 .S (INST,PNAME)=""
"RTN","PXRMLPP",164,0)
 .F  S PNAME=$O(^TMP("PXRMLPPA",$J,SUB,PNAME)) Q:PNAME=""  D
"RTN","PXRMLPP",165,0)
 ..S DFN=""
"RTN","PXRMLPP",166,0)
 ..F  S DFN=$O(^TMP("PXRMLPPA",$J,SUB,PNAME,DFN)) Q:DFN=""  D
"RTN","PXRMLPP",167,0)
 ...I INCINST S INST=^TMP("PXRMLPPA",$J,SUB,PNAME,DFN)
"RTN","PXRMLPP",168,0)
 ...S VALMCNT=VALMCNT+1
"RTN","PXRMLPP",169,0)
 ...S ^TMP("PXRMLPP",$J,VALMCNT,0)=$$FRE(VALMCNT,PNAME,INST,DFN)
"RTN","PXRMLPP",170,0)
 ...S ^TMP("PXRMLPPI",$J,VALMCNT)=DFN
"RTN","PXRMLPP",171,0)
 K ^TMP("PXRMLPPA",$J)
"RTN","PXRMLPP",172,0)
 Q
"RTN","PXRMLPP",173,0)
 ;
"RTN","PXRMLPP",174,0)
PEXIT ;PXRM PATIENT LIST PATIENTS MENU protocol exit code
"RTN","PXRMLPP",175,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMLPP",176,0)
 D XQORM
"RTN","PXRMLPP",177,0)
 Q
"RTN","PXRMLPP",178,0)
 ;
"RTN","PXRMLPP",179,0)
USER ;
"RTN","PXRMLPP",180,0)
 I $P($G(^PXRMXP(810.5,IEN,0)),U,8)="PUB" D FULL^VALM1 W !,"This option is locked for Public Lists." H 2 Q
"RTN","PXRMLPP",181,0)
 D FULL^VALM1
"RTN","PXRMLPP",182,0)
 D START^PXRMLPAU(IEN)
"RTN","PXRMLPP",183,0)
 S VALMBCK="R"
"RTN","PXRMLPP",184,0)
 Q
"RTN","PXRMLPP",185,0)
 ;
"RTN","PXRMLPP",186,0)
USR(IEN) ;Screen for protocol PXRM PATIENT LIST AUTH USER
"RTN","PXRMLPP",187,0)
 N TYPE
"RTN","PXRMLPP",188,0)
 S TYPE=$P(^PXRMXP(810.5,IEN,0),U,8)
"RTN","PXRMLPP",189,0)
 ;Public lists cannot have individual user access.
"RTN","PXRMLPP",190,0)
 I TYPE="PUB" Q "N"
"RTN","PXRMLPP",191,0)
 Q $$ACCESS^PXRMLPU(IEN)
"RTN","PXRMLPP",192,0)
 ;
"RTN","PXRMLPP",193,0)
VIEW ;Select view
"RTN","PXRMLPP",194,0)
 W IORESET
"RTN","PXRMLPP",195,0)
 S VALMBCK="R",VALMBG=1
"RTN","PXRMLPP",196,0)
 N X,Y,CODE,DIR
"RTN","PXRMLPP",197,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMLPP",198,0)
 S DIR(0)="S"_U_"I:Sort by Institution and Name;"
"RTN","PXRMLPP",199,0)
 S DIR(0)=DIR(0)_"N:Sort by Name;"
"RTN","PXRMLPP",200,0)
 S DIR("A")="TYPE OF VIEW"
"RTN","PXRMLPP",201,0)
 S DIR("B")=$S(PXRMVIEW="N":"I",1:"N")
"RTN","PXRMLPP",202,0)
 S DIR("?")="Select from the codes displayed."
"RTN","PXRMLPP",203,0)
 D ^DIR K DIR
"RTN","PXRMLPP",204,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMLPP",205,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMLPP",206,0)
 ;Change display type
"RTN","PXRMLPP",207,0)
 S PXRMVIEW=Y
"RTN","PXRMLPP",208,0)
 ;Rebuild Workfile
"RTN","PXRMLPP",209,0)
 D BLDLIST^PXRMLPP(IEN),HDR
"RTN","PXRMLPP",210,0)
 Q
"RTN","PXRMLPP",211,0)
 ;
"RTN","PXRMLPP",212,0)
XSEL ;PXRM PATIENT LIST PATIENT SELECT validation
"RTN","PXRMLPP",213,0)
 N EPIEN,DFN,SEL
"RTN","PXRMLPP",214,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMLPP",215,0)
 ;Remove trailing ,
"RTN","PXRMLPP",216,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMLPP",217,0)
 ;Invalid selection
"RTN","PXRMLPP",218,0)
 I SEL["," D  Q
"RTN","PXRMLPP",219,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMLPP",220,0)
 .S VALMBCK="R"
"RTN","PXRMLPP",221,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMLPP",222,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMLPP",223,0)
 .S VALMBCK="R"
"RTN","PXRMLPP",224,0)
 ;
"RTN","PXRMLPP",225,0)
 ;Get the patient list ien
"RTN","PXRMLPP",226,0)
 S DFN=^TMP("PXRMLPP",$J,"IDX",SEL,SEL)
"RTN","PXRMLPP",227,0)
 ;Full screen mode
"RTN","PXRMLPP",228,0)
 D FULL^VALM1
"RTN","PXRMLPP",229,0)
 ;Print individual Health Summary
"RTN","PXRMLPP",230,0)
 D HSI^PXRMLPHS(DFN)
"RTN","PXRMLPP",231,0)
 S VALMBCK="R"
"RTN","PXRMLPP",232,0)
 Q
"RTN","PXRMLPP",233,0)
 ;
"RTN","PXRMLPP",234,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM PATIENT LIST PATIENT SELECT",0))_U_"1:"_VALMCNT
"RTN","PXRMLPP",235,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMLPP",236,0)
 Q
"RTN","PXRMLPP",237,0)
 ;
"RTN","PXRMLPU")
0^28^B69127085
"RTN","PXRMLPU",1,0)
PXRMLPU ; SLC/PKR/PJH - Reminder Patient List ;08/07/2006
"RTN","PXRMLPU",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLPU",3,0)
 ;
"RTN","PXRMLPU",4,0)
 ;Main entry point for PXRM PATIENT LIST
"RTN","PXRMLPU",5,0)
START(MODE) ;
"RTN","PXRMLPU",6,0)
 N PXRMDONE,VALMBCK,VALMSG,X,XMZ,MODE1
"RTN","PXRMLPU",7,0)
 S X="IORESET"
"RTN","PXRMLPU",8,0)
 D ENDR^%ZISS
"RTN","PXRMLPU",9,0)
 S VALMCNT=0
"RTN","PXRMLPU",10,0)
 D EN^VALM("PXRM PATIENT LIST USER")
"RTN","PXRMLPU",11,0)
 W IORESET
"RTN","PXRMLPU",12,0)
 D KILL^%ZISS
"RTN","PXRMLPU",13,0)
 Q
"RTN","PXRMLPU",14,0)
 ;
"RTN","PXRMLPU",15,0)
ACCESS(IEN,NODE) ;
"RTN","PXRMLPU",16,0)
 ;Holders of the PXRM MANAGER key have full access to all lists.
"RTN","PXRMLPU",17,0)
 ;DBIA #10076
"RTN","PXRMLPU",18,0)
 I $D(^XUSEC("PXRM MANAGER",DUZ)) Q "F"
"RTN","PXRMLPU",19,0)
 N ACCESS,TYPE
"RTN","PXRMLPU",20,0)
 I $G(NODE)="" S NODE=$G(^PXRMXP(810.5,IEN,0))
"RTN","PXRMLPU",21,0)
 S TYPE=$P(NODE,U,8)
"RTN","PXRMLPU",22,0)
 I TYPE="" Q "F"
"RTN","PXRMLPU",23,0)
 I TYPE="PUB" Q "F"
"RTN","PXRMLPU",24,0)
 I $P(NODE,U,7)=DUZ Q "F"
"RTN","PXRMLPU",25,0)
 S ACCESS="N"
"RTN","PXRMLPU",26,0)
 I TYPE="PVT",$D(^PXRMXP(810.5,IEN,40,"B",DUZ)) D
"RTN","PXRMLPU",27,0)
 . N USIEN,STATUS
"RTN","PXRMLPU",28,0)
 . S USIEN=$O(^PXRMXP(810.5,IEN,40,"B",DUZ,""))
"RTN","PXRMLPU",29,0)
 . S ACCESS=$S(USIEN="":"N",1:$P(^PXRMXP(810.5,IEN,40,USIEN,0),U,2))
"RTN","PXRMLPU",30,0)
 Q ACCESS
"RTN","PXRMLPU",31,0)
 ;
"RTN","PXRMLPU",32,0)
BLDLIST ;
"RTN","PXRMLPU",33,0)
 N IEN,PLIST
"RTN","PXRMLPU",34,0)
 K ^TMP("PXRMLPU",$J)
"RTN","PXRMLPU",35,0)
 K ^TMP("PXRMLPUH",$J)
"RTN","PXRMLPU",36,0)
 S PLIST="PXRMLPU"
"RTN","PXRMLPU",37,0)
 D LIST(MODE,PLIST,.IEN)
"RTN","PXRMLPU",38,0)
 S VALMCNT=+$G(^TMP("PXRMLPU",$J,"VALMCNT"))
"RTN","PXRMLPU",39,0)
 F IND=1:1:VALMCNT D
"RTN","PXRMLPU",40,0)
 .S ^TMP("PXRMLPU",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMLPU",41,0)
 Q
"RTN","PXRMLPU",42,0)
 ;
"RTN","PXRMLPU",43,0)
ENTRY ;Entry code
"RTN","PXRMLPU",44,0)
 ;MODE=0 ORDER BY NAME
"RTN","PXRMLPU",45,0)
 ;MODE=1 ORDER BY TYPE
"RTN","PXRMLPU",46,0)
 I $G(MODE)'>0 S MODE=0
"RTN","PXRMLPU",47,0)
 D BLDLIST,XQORM
"RTN","PXRMLPU",48,0)
 Q
"RTN","PXRMLPU",49,0)
 ;
"RTN","PXRMLPU",50,0)
EXIT ;Exit code
"RTN","PXRMLPU",51,0)
 K ^TMP("PXRMLPU",$J)
"RTN","PXRMLPU",52,0)
 K ^TMP("PXRMLPUH",$J)
"RTN","PXRMLPU",53,0)
 D CLEAN^VALM10
"RTN","PXRMLPU",54,0)
 D FULL^VALM1
"RTN","PXRMLPU",55,0)
 S VALMBCK="R"
"RTN","PXRMLPU",56,0)
 Q
"RTN","PXRMLPU",57,0)
 ;
"RTN","PXRMLPU",58,0)
FORMAT(NUMBER,NAME,NODE) ;Format  entry number, name, source,
"RTN","PXRMLPU",59,0)
 ;and date packed.
"RTN","PXRMLPU",60,0)
 N ACCESS,DATE,COUNT,TEMP,TYPE
"RTN","PXRMLPU",61,0)
 S DATE=$P(NODE,U,2),COUNT=$P(NODE,U,3)
"RTN","PXRMLPU",62,0)
 S TYPE=$P(NODE,U,4),ACCESS=$P(NODE,U,5)
"RTN","PXRMLPU",63,0)
 S TEMP=$$RJ^XLFSTR(NUMBER,5," ")
"RTN","PXRMLPU",64,0)
 S NAME=$E(NAME,1,45)
"RTN","PXRMLPU",65,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(NAME,45," ")
"RTN","PXRMLPU",66,0)
 S DATE=$$FMTE^XLFDT(DATE,2)
"RTN","PXRMLPU",67,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(DATE,17," ")
"RTN","PXRMLPU",68,0)
 S TEMP=TEMP_"  "_$$RJ^XLFSTR(COUNT,6," ")
"RTN","PXRMLPU",69,0)
 S TEMP=TEMP_"  "_$$RJ^XLFSTR(TYPE,4," ")
"RTN","PXRMLPU",70,0)
 S TEMP=TEMP_"  "_$$RJ^XLFSTR(ACCESS,3," ")
"RTN","PXRMLPU",71,0)
 Q TEMP
"RTN","PXRMLPU",72,0)
 ;
"RTN","PXRMLPU",73,0)
HDR ; Header code
"RTN","PXRMLPU",74,0)
 N NAME
"RTN","PXRMLPU",75,0)
 S VALMHDR(1)="Available Patient Lists."
"RTN","PXRMLPU",76,0)
 Q
"RTN","PXRMLPU",77,0)
 ;
"RTN","PXRMLPU",78,0)
HELP(CALL) ;General help text routine
"RTN","PXRMLPU",79,0)
 N HTEXT
"RTN","PXRMLPU",80,0)
 I CALL=1 D
"RTN","PXRMLPU",81,0)
 .S HTEXT(1)="Select CO to copy patient list."
"RTN","PXRMLPU",82,0)
 .S HTEXT(2)="Select COE to copy patient list to OE/RR Team."
"RTN","PXRMLPU",83,0)
 .S HTEXT(3)="Select CR to delete patient list."
"RTN","PXRMLPU",84,0)
 .S HTEXT(4)="Select DCD to display creation documentation."
"RTN","PXRMLPU",85,0)
 .S HTEXT(5)="Select DSP to display patient list."
"RTN","PXRMLPU",86,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMLPU",87,0)
 Q
"RTN","PXRMLPU",88,0)
 ;
"RTN","PXRMLPU",89,0)
HLP ;Help code
"RTN","PXRMLPU",90,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMLPU",91,0)
 S SUB="PXRMLPUH"
"RTN","PXRMLPU",92,0)
 D EN^VALM("PXRM PATIENT LIST HELP")
"RTN","PXRMLPU",93,0)
 Q
"RTN","PXRMLPU",94,0)
 ;
"RTN","PXRMLPU",95,0)
INIT ;Init
"RTN","PXRMLPU",96,0)
 S VALMCNT=0
"RTN","PXRMLPU",97,0)
 Q
"RTN","PXRMLPU",98,0)
 ;
"RTN","PXRMLPU",99,0)
LIST(MODE,PLIST,IEN) ;Build a list of patient list entries.
"RTN","PXRMLPU",100,0)
 N ACCESS,COUNT,DATE,IND,FNAME,NAME,NODE,SUB,TYPE
"RTN","PXRMLPU",101,0)
 ;MODE=0 build list in alphabetical order
"RTN","PXRMLPU",102,0)
 ;MODE=1 build list by type of list.
"RTN","PXRMLPU",103,0)
 K ^TMP($J,PLIST),^TMP(PLIST,$J)
"RTN","PXRMLPU",104,0)
 S VALMCNT=0,NAME="",TYPE=""
"RTN","PXRMLPU",105,0)
 F  S NAME=$O(^PXRMXP(810.5,"B",NAME)) Q:NAME=""  D
"RTN","PXRMLPU",106,0)
 .S IND="" F  S IND=$O(^PXRMXP(810.5,"B",NAME,IND)) Q:'IND  D
"RTN","PXRMLPU",107,0)
 ..S NODE=$G(^PXRMXP(810.5,IND,0))
"RTN","PXRMLPU",108,0)
 ..S ACCESS=$$ACCESS(IND,NODE)
"RTN","PXRMLPU",109,0)
 ..I ACCESS="N" Q
"RTN","PXRMLPU",110,0)
 ..S FNAME=$P($G(NODE),U),DATE=$P($G(NODE),U,4)
"RTN","PXRMLPU",111,0)
 ..S COUNT=+$P($G(^PXRMXP(810.5,IND,30,0)),U,4)
"RTN","PXRMLPU",112,0)
 ..S TYPE=$P(NODE,U,8)
"RTN","PXRMLPU",113,0)
 ..S SUB=$S(MODE=0:"NAME",1:TYPE)
"RTN","PXRMLPU",114,0)
 ..S ^TMP($J,PLIST,SUB,FNAME)=IND_U_DATE_U_COUNT_U_TYPE_U_ACCESS
"RTN","PXRMLPU",115,0)
 I '$D(^TMP($J,PLIST)) Q
"RTN","PXRMLPU",116,0)
 ;Loop through ARRAY to populate the output list
"RTN","PXRMLPU",117,0)
 ;sub is either the type of list or 'NAME'. If sort is
"RTN","PXRMLPU",118,0)
 ;by TYPE show PVT lists first.
"RTN","PXRMLPU",119,0)
 S SUB=""
"RTN","PXRMLPU",120,0)
 F  S SUB=$O(^TMP($J,PLIST,SUB),-1) Q:SUB=""  D
"RTN","PXRMLPU",121,0)
 .S FNAME=""
"RTN","PXRMLPU",122,0)
 .F  S FNAME=$O(^TMP($J,PLIST,SUB,FNAME)) Q:FNAME=""  D
"RTN","PXRMLPU",123,0)
 ..S NODE=^TMP($J,PLIST,SUB,FNAME),VALMCNT=VALMCNT+1
"RTN","PXRMLPU",124,0)
 ..S ^TMP(PLIST,$J,VALMCNT,0)=$$FORMAT(VALMCNT,FNAME,NODE)
"RTN","PXRMLPU",125,0)
 ..S IEN(VALMCNT)=$P(NODE,U,1)
"RTN","PXRMLPU",126,0)
 S ^TMP(PLIST,$J,"VALMCNT")=VALMCNT
"RTN","PXRMLPU",127,0)
 K ^TMP($J,PLIST)
"RTN","PXRMLPU",128,0)
 Q
"RTN","PXRMLPU",129,0)
 ;
"RTN","PXRMLPU",130,0)
PCOPY ;Patient list copy
"RTN","PXRMLPU",131,0)
 S SUB="PXRMLPU"
"RTN","PXRMLPU",132,0)
 D PCOPY1(SUB)
"RTN","PXRMLPU",133,0)
 D BLDLIST
"RTN","PXRMLPU",134,0)
 S VALMBCK="R"
"RTN","PXRMLPU",135,0)
 Q
"RTN","PXRMLPU",136,0)
 ;
"RTN","PXRMLPU",137,0)
PCOPY1(SUB) ;
"RTN","PXRMLPU",138,0)
 ;Full Screen
"RTN","PXRMLPU",139,0)
 W IORESET
"RTN","PXRMLPU",140,0)
 N IND,LISTIEN,VALMY
"RTN","PXRMLPU",141,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMLPU",142,0)
 ;If there is no list quit.
"RTN","PXRMLPU",143,0)
 I '$D(VALMY) Q
"RTN","PXRMLPU",144,0)
 S IND="",PXRMDONE=0
"RTN","PXRMLPU",145,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMLPU",146,0)
 .;Get the patient list ien.
"RTN","PXRMLPU",147,0)
 .S LISTIEN=^TMP(SUB,$J,"IDX",IND,IND)
"RTN","PXRMLPU",148,0)
 .D COPY^PXRMRULE(LISTIEN)
"RTN","PXRMLPU",149,0)
 Q
"RTN","PXRMLPU",150,0)
 ;
"RTN","PXRMLPU",151,0)
PDELETE ;Patient list delete
"RTN","PXRMLPU",152,0)
 ;Full Screen
"RTN","PXRMLPU",153,0)
 W IORESET
"RTN","PXRMLPU",154,0)
 N DELOK,IND,LISTIEN,NODE,VALMY
"RTN","PXRMLPU",155,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMLPU",156,0)
 ;If there is no list quit.
"RTN","PXRMLPU",157,0)
 I '$D(VALMY) Q
"RTN","PXRMLPU",158,0)
 S IND="",PXRMDONE=0
"RTN","PXRMLPU",159,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMLPU",160,0)
 .;Get the patient list ien.
"RTN","PXRMLPU",161,0)
 .S LISTIEN=^TMP("PXRMLPU",$J,"IDX",IND,IND)
"RTN","PXRMLPU",162,0)
 .S NODE=$G(^PXRMXP(810.5,LISTIEN,0))
"RTN","PXRMLPU",163,0)
 .S DELOK=$$LDELOK^PXRMEUT(LISTIEN)
"RTN","PXRMLPU",164,0)
 .I DELOK D DELETE^PXRMRULE(LISTIEN) Q
"RTN","PXRMLPU",165,0)
 .E  D  Q
"RTN","PXRMLPU",166,0)
 ..W !,"In order to delete a list you must be the creator or a Reminder Manager!"
"RTN","PXRMLPU",167,0)
 ..S PXRMDONE=1 H 2
"RTN","PXRMLPU",168,0)
 D BLDLIST
"RTN","PXRMLPU",169,0)
 S VALMBCK="R"
"RTN","PXRMLPU",170,0)
 Q
"RTN","PXRMLPU",171,0)
 ;
"RTN","PXRMLPU",172,0)
PEXIT ;Protocol exit code
"RTN","PXRMLPU",173,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMLPU",174,0)
 ;Reset after page up/down etc
"RTN","PXRMLPU",175,0)
 D XQORM
"RTN","PXRMLPU",176,0)
 Q
"RTN","PXRMLPU",177,0)
 ;
"RTN","PXRMLPU",178,0)
POERR ;Patient list copy to OERR Team (#101.21)
"RTN","PXRMLPU",179,0)
 ;Full Screen
"RTN","PXRMLPU",180,0)
 W IORESET
"RTN","PXRMLPU",181,0)
 N ACCESS,IND,LISTIEN,NODE,USIEN,VALMY
"RTN","PXRMLPU",182,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMLPU",183,0)
 ;If there is no list quit.
"RTN","PXRMLPU",184,0)
 I '$D(VALMY) Q
"RTN","PXRMLPU",185,0)
 S IND="",PXRMDONE=0
"RTN","PXRMLPU",186,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMLPU",187,0)
 .;Get the patient list ien.
"RTN","PXRMLPU",188,0)
 .S LISTIEN=^TMP("PXRMLPU",$J,"IDX",IND,IND)
"RTN","PXRMLPU",189,0)
 .S NODE=$G(^PXRMXP(810.5,LISTIEN,0))
"RTN","PXRMLPU",190,0)
 .S ACCESS=$$ACCESS^PXRMLPU(LISTIEN,NODE)
"RTN","PXRMLPU",191,0)
 .I ACCESS="F" D OERR^PXRMLPOE(LISTIEN)
"RTN","PXRMLPU",192,0)
 .I ACCESS="N" D
"RTN","PXRMLPU",193,0)
 ..W !,"The list cannot be copied; you must have full access to copy the list to an OE/RR team!"
"RTN","PXRMLPU",194,0)
 ..S PXRMDONE=1 H 2
"RTN","PXRMLPU",195,0)
 S VALMBCK="R"
"RTN","PXRMLPU",196,0)
 Q
"RTN","PXRMLPU",197,0)
 ;
"RTN","PXRMLPU",198,0)
PLIST ;Patient list inquiry.
"RTN","PXRMLPU",199,0)
 N CREAT,NAME,IND,LISTIEN,USIEN,VALMY,CREAT,NODE,TRUE
"RTN","PXRMLPU",200,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMLPU",201,0)
 ;If there is no list quit.
"RTN","PXRMLPU",202,0)
 I '$D(VALMY) Q
"RTN","PXRMLPU",203,0)
 ;PXRMDONE is newed in PXRMLPU
"RTN","PXRMLPU",204,0)
 S PXRMDONE=0
"RTN","PXRMLPU",205,0)
 S IND=""
"RTN","PXRMLPU",206,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMLPU",207,0)
 .S LISTIEN=^TMP("PXRMLPU",$J,"IDX",IND,IND)
"RTN","PXRMLPU",208,0)
 .D START^PXRMLPP(LISTIEN)
"RTN","PXRMLPU",209,0)
 D BLDLIST
"RTN","PXRMLPU",210,0)
 S VALMBCK="R"
"RTN","PXRMLPU",211,0)
 Q
"RTN","PXRMLPU",212,0)
 ;
"RTN","PXRMLPU",213,0)
VIEW ;
"RTN","PXRMLPU",214,0)
 D FULL^VALM1
"RTN","PXRMLPU",215,0)
 N DIR,DTOUT,DUOUT,DIROUT,DIROUT,Y
"RTN","PXRMLPU",216,0)
 S DIR(0)="SO^N:NAME;T:TYPE"
"RTN","PXRMLPU",217,0)
 S DIR("A")="Select View Type"
"RTN","PXRMLPU",218,0)
 D ^DIR
"RTN","PXRMLPU",219,0)
 I $D(DTOUT),$D(DUOUT),$D(DIROUT) Q
"RTN","PXRMLPU",220,0)
 I Y="N" S MODE=0 D ENTRY
"RTN","PXRMLPU",221,0)
 I Y="T" S MODE=1 D ENTRY
"RTN","PXRMLPU",222,0)
 Q
"RTN","PXRMLPU",223,0)
 ;
"RTN","PXRMLPU",224,0)
XQORM ;
"RTN","PXRMLPU",225,0)
 S XQORM("#")=$O(^ORD(101,"B","PXRM PATIENT LIST USER SELECT ENTRY",0))_U_"1:"_VALMCNT
"RTN","PXRMLPU",226,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMLPU",227,0)
 Q
"RTN","PXRMLPU",228,0)
 ;
"RTN","PXRMLPU",229,0)
XSEL ;SELECT validation
"RTN","PXRMLPU",230,0)
 N EPIEN,LEVEL,LISTIEN,LRIEN,NODE,SEL
"RTN","PXRMLPU",231,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMLPU",232,0)
 ;Remove trailing ,
"RTN","PXRMLPU",233,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMLPU",234,0)
 ;Invalid selection
"RTN","PXRMLPU",235,0)
 I SEL["," D  Q
"RTN","PXRMLPU",236,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMLPU",237,0)
 .S VALMBCK="R"
"RTN","PXRMLPU",238,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMLPU",239,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMLPU",240,0)
 .S VALMBCK="R"
"RTN","PXRMLPU",241,0)
 ;
"RTN","PXRMLPU",242,0)
 ;Get the patient list ien
"RTN","PXRMLPU",243,0)
 S LISTIEN=^TMP("PXRMLPU",$J,"IDX",SEL,SEL)
"RTN","PXRMLPU",244,0)
 ;Get extract definition ien (if present)
"RTN","PXRMLPU",245,0)
 S EPIEN=$P($G(^PXRMXP(810.5,LISTIEN,0)),U,5)
"RTN","PXRMLPU",246,0)
 ;Get list rule ien
"RTN","PXRMLPU",247,0)
 S LRIEN=$P($G(^PXRMXP(810.5,LISTIEN,0)),U,6)
"RTN","PXRMLPU",248,0)
 S NODE=$G(^PXRMXP(810.5,LISTIEN,0))
"RTN","PXRMLPU",249,0)
 ;
"RTN","PXRMLPU",250,0)
 ;Full screen mode
"RTN","PXRMLPU",251,0)
 D FULL^VALM1
"RTN","PXRMLPU",252,0)
 ;
"RTN","PXRMLPU",253,0)
 ;Option to Install, Delete or Install History
"RTN","PXRMLPU",254,0)
 N ACCESS,DELOK,DIR,OPTION,RIEN,X,Y
"RTN","PXRMLPU",255,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMLPU",256,0)
 S ACCESS=$$ACCESS(LISTIEN,NODE)
"RTN","PXRMLPU",257,0)
 S DELOK=$$LDELOK^PXRMEUT(LISTIEN)
"RTN","PXRMLPU",258,0)
 S DIR(0)="SBM"_U_"CO:Copy Patient List;"
"RTN","PXRMLPU",259,0)
 S DIR(0)=DIR(0)_"COE:Copy to OE/RR Team;"
"RTN","PXRMLPU",260,0)
 I DELOK S DIR(0)=DIR(0)_"DE:Delete Patient List;"
"RTN","PXRMLPU",261,0)
 S DIR(0)=DIR(0)_"DCD:Display Creation Documentation;"
"RTN","PXRMLPU",262,0)
 S DIR(0)=DIR(0)_"DSP:Display Patient List;"
"RTN","PXRMLPU",263,0)
 S DIR("A")="Select Action: "
"RTN","PXRMLPU",264,0)
 S DIR("B")="DSP"
"RTN","PXRMLPU",265,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMLPU",266,0)
 S DIR("??")=U_"D HELP^PXRMLPM(1)"
"RTN","PXRMLPU",267,0)
 D ^DIR K DIR
"RTN","PXRMLPU",268,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMLPU",269,0)
 I $D(DTOUT)!($D(DUOUT)) S VALMBCK="R" Q
"RTN","PXRMLPU",270,0)
 S OPTION=Y
"RTN","PXRMLPU",271,0)
 ;
"RTN","PXRMLPU",272,0)
 I $G(OPTION)="" G XSELE
"RTN","PXRMLPU",273,0)
 ;
"RTN","PXRMLPU",274,0)
 ;Copy patient list
"RTN","PXRMLPU",275,0)
 I OPTION="CO" D COPY^PXRMRULE(LISTIEN)
"RTN","PXRMLPU",276,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMLPU",277,0)
 ;
"RTN","PXRMLPU",278,0)
 ;Copy to OE/RR Team
"RTN","PXRMLPU",279,0)
 I OPTION="COE" D OERR^PXRMLPOE(LISTIEN)
"RTN","PXRMLPU",280,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMLPU",281,0)
 ;
"RTN","PXRMLPU",282,0)
 ;Delete patient list
"RTN","PXRMLPU",283,0)
 I OPTION="DE" D PDELETE
"RTN","PXRMLPU",284,0)
 ;
"RTN","PXRMLPU",285,0)
 ;Display creation documentation
"RTN","PXRMLPU",286,0)
 I OPTION="DCD" D EN^PXRMLCD(LISTIEN)
"RTN","PXRMLPU",287,0)
 ;
"RTN","PXRMLPU",288,0)
 ;Display patient list
"RTN","PXRMLPU",289,0)
 I OPTION="DSP" D START^PXRMLPP(LISTIEN)
"RTN","PXRMLPU",290,0)
 ;
"RTN","PXRMLPU",291,0)
XSELE ;
"RTN","PXRMLPU",292,0)
 D CLEAN^VALM10
"RTN","PXRMLPU",293,0)
 D BLDLIST,XQORM
"RTN","PXRMLPU",294,0)
 S VALMBCK="R"
"RTN","PXRMLPU",295,0)
 Q
"RTN","PXRMLRED")
0^51^B50465867
"RTN","PXRMLRED",1,0)
PXRMLRED ; SLC/PJH - List Rule Editor ;05/30/2006
"RTN","PXRMLRED",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLRED",3,0)
 ;
"RTN","PXRMLRED",4,0)
 ;Main entry point for PXRM LIST RULE EDIT/DISPLAY
"RTN","PXRMLRED",5,0)
START(IEN,PXRMTYP) ;
"RTN","PXRMLRED",6,0)
 N PXRMDONE,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMLRED",7,0)
 S X="IORESET"
"RTN","PXRMLRED",8,0)
 D ENDR^%ZISS
"RTN","PXRMLRED",9,0)
 S VALMCNT=0
"RTN","PXRMLRED",10,0)
 D EN^VALM("PXRM LIST RULE DISPLAY/EDIT")
"RTN","PXRMLRED",11,0)
 Q
"RTN","PXRMLRED",12,0)
 ;
"RTN","PXRMLRED",13,0)
ADD ;Add Rule
"RTN","PXRMLRED",14,0)
 N DA,DIC,DONE,DTOUT,DUOUT,DLAYGO,HED,TYP,Y
"RTN","PXRMLRED",15,0)
 S HED="ADD "_$$TXT,TYP=PXRMTYP,DONE=0
"RTN","PXRMLRED",16,0)
 W IORESET,!
"RTN","PXRMLRED",17,0)
 F  D  Q:$D(DTOUT)  Q:DONE
"RTN","PXRMLRED",18,0)
 .S DIC="^PXRM(810.4,"
"RTN","PXRMLRED",19,0)
 .;Set the starting place for additions.
"RTN","PXRMLRED",20,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMLRED",21,0)
 .S DIC(0)="AELMQ",DLAYGO=810.4
"RTN","PXRMLRED",22,0)
 .S DIC("A")="Select "_$$TXT_" to add: "
"RTN","PXRMLRED",23,0)
 .S DIC("DR")=".03///"_TYP
"RTN","PXRMLRED",24,0)
 .D ^DIC
"RTN","PXRMLRED",25,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMLRED",26,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMLRED",27,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMLRED",28,0)
 .I $P(Y,U,3)'=1 W !,"This rule name already exists" Q
"RTN","PXRMLRED",29,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMLRED",30,0)
 .;Edit Rule
"RTN","PXRMLRED",31,0)
 .D EDIT(DA,TYP)
"RTN","PXRMLRED",32,0)
 .S:$D(DA) DONE=1
"RTN","PXRMLRED",33,0)
 Q
"RTN","PXRMLRED",34,0)
 ;
"RTN","PXRMLRED",35,0)
BLDLIST(IEN,TYP) ;Build workfile
"RTN","PXRMLRED",36,0)
 N FLDS,GBL,PXRMROOT
"RTN","PXRMLRED",37,0)
 I TYP=1 S FLDS="[PXRM FINDING RULE]"
"RTN","PXRMLRED",38,0)
 I TYP=2 S FLDS="[PXRM REMINDER RULE]"
"RTN","PXRMLRED",39,0)
 I TYP=3 S FLDS="[PXRM RULE SET]"
"RTN","PXRMLRED",40,0)
 I TYP=5 S FLDS="[PXRM PATIENT LIST RULE]"
"RTN","PXRMLRED",41,0)
 S GBL="^TMP(""PXRMLRED"",$J)"
"RTN","PXRMLRED",42,0)
 S GBL=$NA(@GBL)
"RTN","PXRMLRED",43,0)
 S PXRMROOT="^PXRM(810.4,"
"RTN","PXRMLRED",44,0)
 K ^TMP("PXRMLRED",$J)
"RTN","PXRMLRED",45,0)
 D DIP^PXRMUTIL(GBL,IEN,PXRMROOT,FLDS)
"RTN","PXRMLRED",46,0)
 S VALMCNT=$O(^TMP("PXRMLRED",$J,""),-1)
"RTN","PXRMLRED",47,0)
 Q
"RTN","PXRMLRED",48,0)
 ;
"RTN","PXRMLRED",49,0)
EDIT(DA,TYP) ;Edit Rule
"RTN","PXRMLRED",50,0)
 I '$$VEDIT^PXRMUTIL("^PXRM(810.4,",DA) D  Q
"RTN","PXRMLRED",51,0)
 .W !!,?5,"VA- and national class rules may not be edited" H 2
"RTN","PXRMLRED",52,0)
 .S VALMBCK="R"
"RTN","PXRMLRED",53,0)
 ;
"RTN","PXRMLRED",54,0)
 Q:'$$LOCK(DA)
"RTN","PXRMLRED",55,0)
 W IORESET
"RTN","PXRMLRED",56,0)
 N CS1,CS2,DIC,DIDEL,DIE,DR,DTOUT,DUOUT,ODA,Y
"RTN","PXRMLRED",57,0)
 ;Save checksum
"RTN","PXRMLRED",58,0)
 S CS1=$$FILE^PXRMEXCS(810.4,DA)
"RTN","PXRMLRED",59,0)
 ;Check rule type
"RTN","PXRMLRED",60,0)
 S DIE="^PXRM(810.4,",DIDEL=810.4,ODA=DA
"RTN","PXRMLRED",61,0)
 ;List Rule
"RTN","PXRMLRED",62,0)
 I TYP=1 S DR="[PXRM EDIT FINDING RULE]"
"RTN","PXRMLRED",63,0)
 ;Reminder Rule
"RTN","PXRMLRED",64,0)
 I TYP=2 S DR="[PXRM EDIT REMINDER RULE]"
"RTN","PXRMLRED",65,0)
 ;Rule Set
"RTN","PXRMLRED",66,0)
 I TYP=3 S DR="[PXRM EDIT RULE SET]"
"RTN","PXRMLRED",67,0)
 ;Report Output Rule
"RTN","PXRMLRED",68,0)
 I TYP=4 S DR="[PXRM EDIT REPORT OUTPUT RULE]"
"RTN","PXRMLRED",69,0)
 ;Patient List Rule
"RTN","PXRMLRED",70,0)
 I TYP=5 S DR="[PXRM EDIT PATIENT LIST RULE]"
"RTN","PXRMLRED",71,0)
 ;Display any sets using the rule
"RTN","PXRMLRED",72,0)
 I (TYP'=3) D USE(DA,1)
"RTN","PXRMLRED",73,0)
 ;
"RTN","PXRMLRED",74,0)
 ;Save list of components for rule set
"RTN","PXRMLRED",75,0)
 I TYP=3 N COMP D COMP^PXRMLREX(DA,.COMP)
"RTN","PXRMLRED",76,0)
 ;
"RTN","PXRMLRED",77,0)
 ;Edit rule then unlock
"RTN","PXRMLRED",78,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMLRED",79,0)
 ;Deleted ???
"RTN","PXRMLRED",80,0)
 I '$D(DA) D  Q
"RTN","PXRMLRED",81,0)
 .;Option to delete components
"RTN","PXRMLRED",82,0)
 .I TYP=3,$D(COMP) D DELETE^PXRMLREX(.COMP)
"RTN","PXRMLRED",83,0)
 .S VALMBCK="Q"
"RTN","PXRMLRED",84,0)
 ;
"RTN","PXRMLRED",85,0)
 ;Update edit history
"RTN","PXRMLRED",86,0)
 D
"RTN","PXRMLRED",87,0)
 .S CS2=$$FILE^PXRMEXCS(810.4,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMLRED",88,0)
 .D SEHIST^PXRMUTIL(810.4,DIC,DA)
"RTN","PXRMLRED",89,0)
 S VALMBCK="R"
"RTN","PXRMLRED",90,0)
 Q
"RTN","PXRMLRED",91,0)
 ;
"RTN","PXRMLRED",92,0)
ENTRY ;Entry code
"RTN","PXRMLRED",93,0)
 D BLDLIST(IEN,PXRMTYP)
"RTN","PXRMLRED",94,0)
 Q
"RTN","PXRMLRED",95,0)
 ;
"RTN","PXRMLRED",96,0)
EXIT ;Exit code
"RTN","PXRMLRED",97,0)
 K ^TMP("PXRMLRED",$J)
"RTN","PXRMLRED",98,0)
 K ^TMP("PXRMLREDH",$J)
"RTN","PXRMLRED",99,0)
 D CLEAN^VALM10
"RTN","PXRMLRED",100,0)
 D FULL^VALM1
"RTN","PXRMLRED",101,0)
 S VALMBCK="Q"
"RTN","PXRMLRED",102,0)
 Q
"RTN","PXRMLRED",103,0)
 ;
"RTN","PXRMLRED",104,0)
HDR ; Header code
"RTN","PXRMLRED",105,0)
 S VALMHDR(1)="Available "_$$LIT(PXRMTYP)_":"
"RTN","PXRMLRED",106,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMLRED",107,0)
 Q
"RTN","PXRMLRED",108,0)
 ;
"RTN","PXRMLRED",109,0)
HLP ;Help code
"RTN","PXRMLRED",110,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMLRED",111,0)
 S SUB="PXRMLREDH"
"RTN","PXRMLRED",112,0)
 D EN^VALM("PXRM LIST RULE HELP")
"RTN","PXRMLRED",113,0)
 Q
"RTN","PXRMLRED",114,0)
 ;
"RTN","PXRMLRED",115,0)
INIT ;Init
"RTN","PXRMLRED",116,0)
 S VALMCNT=0
"RTN","PXRMLRED",117,0)
 Q
"RTN","PXRMLRED",118,0)
 ;
"RTN","PXRMLRED",119,0)
LIT(VIEW) ;Header text depnds on view
"RTN","PXRMLRED",120,0)
 Q $S(PXRMTYP=3:"Rule Sets",PXRMTYP=1:"List Rules",PXRMTYP=2:"Reminder List Rules",1:"Unknown")
"RTN","PXRMLRED",121,0)
 ;
"RTN","PXRMLRED",122,0)
LOCK(DA) ;Lock the record
"RTN","PXRMLRED",123,0)
 L +^PXRM(810.4,DA):0 I  Q 1
"RTN","PXRMLRED",124,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMLRED",125,0)
 ;
"RTN","PXRMLRED",126,0)
LRDESC ;Display list rule fields - called by [PXRM RULE SET]
"RTN","PXRMLRED",127,0)
 N IEN
"RTN","PXRMLRED",128,0)
 S IEN=$P(X,U,2) Q:'IEN
"RTN","PXRMLRED",129,0)
 D LROUT(IEN,23)
"RTN","PXRMLRED",130,0)
 Q
"RTN","PXRMLRED",131,0)
 ;
"RTN","PXRMLRED",132,0)
LREDIT ;Edit Rule
"RTN","PXRMLRED",133,0)
 D EDIT^PXRMLRED(IEN,PXRMTYP)
"RTN","PXRMLRED",134,0)
 ;Rebuild Workfile
"RTN","PXRMLRED",135,0)
 D BLDLIST(IEN,PXRMTYP)
"RTN","PXRMLRED",136,0)
 Q
"RTN","PXRMLRED",137,0)
 ;
"RTN","PXRMLRED",138,0)
LREND(END,RJC) ;Display end date
"RTN","PXRMLRED",139,0)
 I END]"" W !,$$RJ^XLFSTR("LR Ending Date: ",RJC)_END
"RTN","PXRMLRED",140,0)
 Q
"RTN","PXRMLRED",141,0)
 ;
"RTN","PXRMLRED",142,0)
LROUT(IEN,RJC) ;Output list rule display
"RTN","PXRMLRED",143,0)
 ;also called for parameter display from PXRMEPM
"RTN","PXRMLRED",144,0)
 N BEG,DATA,END,LRN,PLIST,PLIEN,TERM,TIEN,TYPE
"RTN","PXRMLRED",145,0)
 S DATA=$G(^PXRM(810.4,IEN,0))
"RTN","PXRMLRED",146,0)
 S LRN=$P(DATA,U,1)
"RTN","PXRMLRED",147,0)
 ;Type of list rule, start and end dates
"RTN","PXRMLRED",148,0)
 S TYPE=$P(DATA,U,3),BEG=$P(DATA,U,4),END=$P(DATA,U,5)
"RTN","PXRMLRED",149,0)
 W !,$$RJ^XLFSTR("List Rule: ",RJC),LRN
"RTN","PXRMLRED",150,0)
 ;Display description
"RTN","PXRMLRED",151,0)
 W !,$$RJ^XLFSTR("Description: ",RJC),$P(DATA,U,2)
"RTN","PXRMLRED",152,0)
 ;Display Rule Type
"RTN","PXRMLRED",153,0)
 W !,$$RJ^XLFSTR("Rule Type: ",RJC)
"RTN","PXRMLRED",154,0)
 ;Finding Rule
"RTN","PXRMLRED",155,0)
 I TYPE=1 D
"RTN","PXRMLRED",156,0)
 .W "FINDING RULE"
"RTN","PXRMLRED",157,0)
 .W !,$$RJ^XLFSTR("Reminder Term: ",RJC+2)
"RTN","PXRMLRED",158,0)
 .S TIEN=$P(DATA,U,7) Q:'TIEN
"RTN","PXRMLRED",159,0)
 .;Display Term name
"RTN","PXRMLRED",160,0)
 .W $P($G(^PXRMD(811.5,TIEN,0)),U)
"RTN","PXRMLRED",161,0)
 I TYPE=2 D
"RTN","PXRMLRED",162,0)
 .W "REMINDER RULE"
"RTN","PXRMLRED",163,0)
 .W !,$$RJ^XLFSTR("Reminder Definition: ",RJC+2)
"RTN","PXRMLRED",164,0)
 .S RIEN=$P(DATA,U,10) Q:'RIEN
"RTN","PXRMLRED",165,0)
 .;Display Reminder Defintion name
"RTN","PXRMLRED",166,0)
 .W $P($G(^PXD(811.9,RIEN,0)),U,1)
"RTN","PXRMLRED",167,0)
 ;Patient List Rule
"RTN","PXRMLRED",168,0)
 I TYPE=5 D
"RTN","PXRMLRED",169,0)
 .W "PATIENT LIST RULE"
"RTN","PXRMLRED",170,0)
 .N EXISTPL,EXTRPL
"RTN","PXRMLRED",171,0)
 .S EXISTPL=$P(DATA,U,8)
"RTN","PXRMLRED",172,0)
 .I EXISTPL]"" D
"RTN","PXRMLRED",173,0)
 .. S EXISTPL=$P(^PXRMXP(810.5,EXISTPL,0),U,1)
"RTN","PXRMLRED",174,0)
 .. W !,$$RJ^XLFSTR("Use Existing PT List: ",RJC+2),EXISTPL
"RTN","PXRMLRED",175,0)
 .S EXTRPL=$G(^PXRM(810.4,IEN,1))
"RTN","PXRMLRED",176,0)
 .I EXTRPL]"" W !,$$RJ^XLFSTR("Use Extract PT List Named: ",RJC+5)
"RTN","PXRMLRED",177,0)
 .I (RJC+5+$L(EXTRPL))>80 W !,"  "
"RTN","PXRMLRED",178,0)
 .W EXTRPL
"RTN","PXRMLRED",179,0)
 ;Format Start and Stop Dates
"RTN","PXRMLRED",180,0)
 D LRSTRT(BEG,RJC+2),LREND(END,RJC+2)
"RTN","PXRMLRED",181,0)
 Q
"RTN","PXRMLRED",182,0)
 ;
"RTN","PXRMLRED",183,0)
LRSTRT(BEG,RJC) ;Display start date
"RTN","PXRMLRED",184,0)
 I BEG]"" W !,$$RJ^XLFSTR("LR Beginning Date: ",RJC)_BEG
"RTN","PXRMLRED",185,0)
 Q
"RTN","PXRMLRED",186,0)
 ;
"RTN","PXRMLRED",187,0)
PEXIT ;PXRM EXCH MENU protocol exit code
"RTN","PXRMLRED",188,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMLRED",189,0)
 ;Reset after page up/down etc
"RTN","PXRMLRED",190,0)
 Q
"RTN","PXRMLRED",191,0)
 ;
"RTN","PXRMLRED",192,0)
SCREEN ;validate rule type
"RTN","PXRMLRED",193,0)
 Q:'$G(DA(1))
"RTN","PXRMLRED",194,0)
 ;rule sets may not be a component of a rule set
"RTN","PXRMLRED",195,0)
 I $P($G(^PXRM(810.4,DA(1),0)),U,3) S DIC("S")="I $P(^(0),U,3)'=3"
"RTN","PXRMLRED",196,0)
 Q
"RTN","PXRMLRED",197,0)
 ;
"RTN","PXRMLRED",198,0)
SEQPRT ;Display list rule sequence fields - called by [PXRM RULE SET]
"RTN","PXRMLRED",199,0)
 N EXTRPL,IND,LR,LRN,OPER,RJC,RR
"RTN","PXRMLRED",200,0)
 N SEQ,SEQBDT,SEQEDT,TEMP,TEXT
"RTN","PXRMLRED",201,0)
 S RJC=22
"RTN","PXRMLRED",202,0)
 S SEQ=""
"RTN","PXRMLRED",203,0)
 F  S SEQ=$O(^PXRM(810.4,D0,30,"B",SEQ)) Q:SEQ=""  D
"RTN","PXRMLRED",204,0)
 . S IND=$O(^PXRM(810.4,D0,30,"B",SEQ,""))
"RTN","PXRMLRED",205,0)
 . S TEMP=^PXRM(810.4,D0,30,IND,0)
"RTN","PXRMLRED",206,0)
 . S LR=+$P(TEMP,U,2),OPER=$P(TEMP,U,3)
"RTN","PXRMLRED",207,0)
 . S OPER=$$EXTERNAL^DILFD(810.41,.03,"",OPER)
"RTN","PXRMLRED",208,0)
 . S TEMP=$G(^PXRM(810.4,D0,30,IND,1))
"RTN","PXRMLRED",209,0)
 . S SEQBDT=$P(TEMP,U,1),SEQEDT=$P(TEMP,U,2)
"RTN","PXRMLRED",210,0)
 . S EXTRPL=$G(^PXRM(810.4,D0,1))
"RTN","PXRMLRED",211,0)
 . ;Output the sequence fields
"RTN","PXRMLRED",212,0)
 . W !!,$$RJ^XLFSTR("Sequence: ",RJC),SEQ
"RTN","PXRMLRED",213,0)
 . I SEQBDT]"" W !,$$RJ^XLFSTR("Seq Beginning Date: ",RJC),SEQBDT
"RTN","PXRMLRED",214,0)
 . I SEQEDT]"" W !,$$RJ^XLFSTR("Seq Ending Date: ",RJC),SEQEDT
"RTN","PXRMLRED",215,0)
 . W !,$$RJ^XLFSTR("Operation: ",RJC),OPER
"RTN","PXRMLRED",216,0)
 .;Output the List Rule information
"RTN","PXRMLRED",217,0)
 . D LROUT^PXRMLRED(LR,RJC)
"RTN","PXRMLRED",218,0)
 Q
"RTN","PXRMLRED",219,0)
 ;
"RTN","PXRMLRED",220,0)
TXT() ;Return Rule Type text
"RTN","PXRMLRED",221,0)
 N TEXT
"RTN","PXRMLRED",222,0)
 S TEXT="OTHER"
"RTN","PXRMLRED",223,0)
 I PXRMTYP=1 S TEXT="FINDING RULE"
"RTN","PXRMLRED",224,0)
 I PXRMTYP=2 S TEXT="REMINDER DEFINITION RULE"
"RTN","PXRMLRED",225,0)
 I PXRMTYP=3 S TEXT="RULE SET"
"RTN","PXRMLRED",226,0)
 I PXRMTYP=5 S TEXT="PATIENT LIST RULE"
"RTN","PXRMLRED",227,0)
 Q TEXT
"RTN","PXRMLRED",228,0)
 ;
"RTN","PXRMLRED",229,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMLRED",230,0)
 L -^PXRM(810.4,DA)
"RTN","PXRMLRED",231,0)
 Q
"RTN","PXRMLRED",232,0)
 ;
"RTN","PXRMLRED",233,0)
USE(DA,EDIT) ;Display usage of list rule
"RTN","PXRMLRED",234,0)
 N TTAB
"RTN","PXRMLRED",235,0)
 S TAB=$S(EDIT:0,1:7)
"RTN","PXRMLRED",236,0)
 W !!,?TAB,"Used by:"
"RTN","PXRMLRED",237,0)
 ;If the AD cross ref is missing this is not used
"RTN","PXRMLRED",238,0)
 I '$D(^PXRM(810.4,"AD",DA)) W " Not used by any rule set",! Q
"RTN","PXRMLRED",239,0)
 ;
"RTN","PXRMLRED",240,0)
 N LRNAM,LRTYP,PXRMTYP
"RTN","PXRMLRED",241,0)
 S TAB=TAB+10
"RTN","PXRMLRED",242,0)
 ;Check if used by any rule sets
"RTN","PXRMLRED",243,0)
 S SUB=0
"RTN","PXRMLRED",244,0)
 F  S SUB=$O(^PXRM(810.4,"AD",DA,SUB)) Q:'SUB  D
"RTN","PXRMLRED",245,0)
 .S DATA=$G(^PXRM(810.4,SUB,0)) Q:DATA=""
"RTN","PXRMLRED",246,0)
 .S LRNAM=$P(DATA,U) Q:LRNAM=""
"RTN","PXRMLRED",247,0)
 .S PXRMTYP=$P(DATA,U,3),LRTYP=$$TXT^PXRMLRED
"RTN","PXRMLRED",248,0)
 .W ?TAB,LRNAM_" ("_LRTYP_")",!
"RTN","PXRMLRED",249,0)
 Q
"RTN","PXRMLRED",250,0)
 ;
"RTN","PXRMLRED",251,0)
USET ;Usage display called from PXRM LIST RULE print template
"RTN","PXRMLRED",252,0)
 D USE(IEN,0)
"RTN","PXRMLRED",253,0)
 Q
"RTN","PXRMLRED",254,0)
 ;
"RTN","PXRMLRHL")
0^161^B5896989
"RTN","PXRMLRHL",1,0)
PXRMLRHL ; SLC/PJH - List Rule help. ;05/31/2006
"RTN","PXRMLRHL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLRHL",3,0)
 ;======================================================================
"RTN","PXRMLRHL",4,0)
LOAD(SUB) ;
"RTN","PXRMLRHL",5,0)
 ;If necessary load the help text into the ^TMP array.
"RTN","PXRMLRHL",6,0)
 ;Check if the help text has already been loaded.
"RTN","PXRMLRHL",7,0)
 I $D(^TMP(SUB,$J,"VALMCNT")) D  Q
"RTN","PXRMLRHL",8,0)
 . S VALMCNT=^TMP(SUB,$J,"VALMCNT")
"RTN","PXRMLRHL",9,0)
 ;
"RTN","PXRMLRHL",10,0)
 N DONE,IND,LABEL,TEXT
"RTN","PXRMLRHL",11,0)
 S LABEL=$S(SUB["LRM":"TX1",SUB["LRED":"TX2",1:"NOHLP")
"RTN","PXRMLRHL",12,0)
 S DONE=0
"RTN","PXRMLRHL",13,0)
 S VALMCNT=0
"RTN","PXRMLRHL",14,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMLRHL",15,0)
 . S TEXT=$P($T(@(LABEL_"+"_IND)),";;",2)
"RTN","PXRMLRHL",16,0)
 . I TEXT="**End Text**" S DONE=1 Q
"RTN","PXRMLRHL",17,0)
 . S VALMCNT=VALMCNT+1,^TMP(SUB,$J,VALMCNT,0)=TEXT
"RTN","PXRMLRHL",18,0)
 S ^TMP(SUB,$J,"VALMCNT")=VALMCNT
"RTN","PXRMLRHL",19,0)
 Q
"RTN","PXRMLRHL",20,0)
 ;
"RTN","PXRMLRHL",21,0)
TX1 ;Help Text
"RTN","PXRMLRHL",22,0)
 ;;The following actions are available:
"RTN","PXRMLRHL",23,0)
 ;;
"RTN","PXRMLRHL",24,0)
 ;;CV  Change View
"RTN","PXRMLRHL",25,0)
 ;;    Toggle view between different rule types
"RTN","PXRMLRHL",26,0)
 ;;    - Finding Rules (based on Reminder Terms)
"RTN","PXRMLRHL",27,0)
 ;;    - Patient List Rules (based on existing Patient Lists)
"RTN","PXRMLRHL",28,0)
 ;;    - Reminder Rules (based on reminder definitions)
"RTN","PXRMLRHL",29,0)
 ;;    - Rule Sets (containing Finding Rules and Patient List Rules)
"RTN","PXRMLRHL",30,0)
 ;;
"RTN","PXRMLRHL",31,0)
 ;;CR  Create Rule
"RTN","PXRMLRHL",32,0)
 ;;    Create a list rule of the type currently displayed. Finding Rules
"RTN","PXRMLRHL",33,0)
 ;;    and Patient List Rules must be created before a Rule Set may be
"RTN","PXRMLRHL",34,0)
 ;;    created. 
"RTN","PXRMLRHL",35,0)
 ;;
"RTN","PXRMLRHL",36,0)
 ;;DR  Display/Edit Rule
"RTN","PXRMLRHL",37,0)
 ;;    Display or edit an existing list rule. Only local list rules may
"RTN","PXRMLRHL",38,0)
 ;;    be edited.
"RTN","PXRMLRHL",39,0)
 ;;
"RTN","PXRMLRHL",40,0)
 ;;TEST (Available only for rule sets)
"RTN","PXRMLRHL",41,0)
 ;;    Shows how the rule set will be evaluated based on the user's
"RTN","PXRMLRHL",42,0)
 ;;    input of list build beginning and ending dates.
"RTN","PXRMLRHL",43,0)
 ;;
"RTN","PXRMLRHL",44,0)
 ;;QU  Quit
"RTN","PXRMLRHL",45,0)
 ;;**End Text**
"RTN","PXRMLRHL",46,0)
 ;
"RTN","PXRMLRHL",47,0)
 ;
"RTN","PXRMLRHL",48,0)
TX2 ;Help Text
"RTN","PXRMLRHL",49,0)
 ;;The following actions are available:
"RTN","PXRMLRHL",50,0)
 ;;
"RTN","PXRMLRHL",51,0)
 ;;ED  Edit Rule
"RTN","PXRMLRHL",52,0)
 ;;    Edit a list rule.
"RTN","PXRMLRHL",53,0)
 ;;
"RTN","PXRMLRHL",54,0)
 ;;QU  Quit
"RTN","PXRMLRHL",55,0)
 ;;**End Text**
"RTN","PXRMLRHL",56,0)
 Q
"RTN","PXRMLRHL",57,0)
 ;
"RTN","PXRMLRHL",58,0)
 ;======================================================================
"RTN","PXRMLRHL",59,0)
NOHLP ;Help text
"RTN","PXRMLRHL",60,0)
 ;;
"RTN","PXRMLRHL",61,0)
 ;;No Help Text Available
"RTN","PXRMLRHL",62,0)
 ;;
"RTN","PXRMLRHL",63,0)
 ;;**End Text**
"RTN","PXRMLRHL",64,0)
 Q
"RTN","PXRMLRHL",65,0)
 ;
"RTN","PXRMLRM")
0^121^B33634264
"RTN","PXRMLRM",1,0)
PXRMLRM ; SLC/PJH/PKR - List Rule Management ; 05/15/2006
"RTN","PXRMLRM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMLRM",3,0)
 ;
"RTN","PXRMLRM",4,0)
 ;Main entry point for PXRM LIST RULE MANAGEMENT
"RTN","PXRMLRM",5,0)
START N PXRMDONE,PXRMTYP,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMLRM",6,0)
 S X="IORESET"
"RTN","PXRMLRM",7,0)
 D ENDR^%ZISS
"RTN","PXRMLRM",8,0)
 S VALMCNT=0
"RTN","PXRMLRM",9,0)
 ;Default view is Rule Sets
"RTN","PXRMLRM",10,0)
 S PXRMTYP=3
"RTN","PXRMLRM",11,0)
 D EN^VALM("PXRM LIST RULE MANAGEMENT")
"RTN","PXRMLRM",12,0)
 Q
"RTN","PXRMLRM",13,0)
 ;
"RTN","PXRMLRM",14,0)
BLDLIST ;Build workfile
"RTN","PXRMLRM",15,0)
 K ^TMP("PXRMLRM",$J)
"RTN","PXRMLRM",16,0)
 N IEN,IND,PLIST
"RTN","PXRMLRM",17,0)
 D LIST(.PLIST,.IEN,PXRMTYP)
"RTN","PXRMLRM",18,0)
 M ^TMP("PXRMLRM",$J)=PLIST
"RTN","PXRMLRM",19,0)
 S VALMCNT=PLIST("VALMCNT")
"RTN","PXRMLRM",20,0)
 F IND=1:1:VALMCNT D
"RTN","PXRMLRM",21,0)
 .S ^TMP("PXRMLRM",$J,"IDX",IND,IND)=IEN(IND)
"RTN","PXRMLRM",22,0)
 I PXRMTYP=1 D CHGCAP^VALM("HEADER2","Finding Rule Name")
"RTN","PXRMLRM",23,0)
 I PXRMTYP=2 D CHGCAP^VALM("HEADER2","Reminder Rule Name")
"RTN","PXRMLRM",24,0)
 I PXRMTYP=3 D CHGCAP^VALM("HEADER2","Rule Set Name")
"RTN","PXRMLRM",25,0)
 I PXRMTYP=4 D CHGCAP^VALM("HEADER2","Report Output Rule Name")
"RTN","PXRMLRM",26,0)
 I PXRMTYP=5 D CHGCAP^VALM("HEADER2","Patient List Rule Name")
"RTN","PXRMLRM",27,0)
 Q
"RTN","PXRMLRM",28,0)
 ;
"RTN","PXRMLRM",29,0)
ENTRY ;Entry code
"RTN","PXRMLRM",30,0)
 D BLDLIST,XQORM
"RTN","PXRMLRM",31,0)
 Q
"RTN","PXRMLRM",32,0)
 ;
"RTN","PXRMLRM",33,0)
EXIT ;Exit code
"RTN","PXRMLRM",34,0)
 K ^TMP("PXRMLRM",$J)
"RTN","PXRMLRM",35,0)
 K ^TMP("PXRMLRMH",$J)
"RTN","PXRMLRM",36,0)
 D CLEAN^VALM10
"RTN","PXRMLRM",37,0)
 D FULL^VALM1
"RTN","PXRMLRM",38,0)
 S VALMBCK="Q"
"RTN","PXRMLRM",39,0)
 Q
"RTN","PXRMLRM",40,0)
 ;
"RTN","PXRMLRM",41,0)
FRE(NUMBER,NAME,CLASS) ;Format  entry number, name
"RTN","PXRMLRM",42,0)
 ;and date packed.
"RTN","PXRMLRM",43,0)
 N TCLASS,TEMP,TNAME,TSOURCE
"RTN","PXRMLRM",44,0)
 S TEMP=$$RJ^XLFSTR(NUMBER,5," ")
"RTN","PXRMLRM",45,0)
 S TNAME=$E(NAME,1,60)
"RTN","PXRMLRM",46,0)
 S TEMP=TEMP_"  "_$$LJ^XLFSTR(TNAME,60," ")
"RTN","PXRMLRM",47,0)
 S TCLASS=$S(CLASS="N":"NATIONAL",CLASS="V":"VISN",1:"LOCAL")
"RTN","PXRMLRM",48,0)
 S TEMP=TEMP_"  "_TCLASS
"RTN","PXRMLRM",49,0)
 Q TEMP
"RTN","PXRMLRM",50,0)
 ;
"RTN","PXRMLRM",51,0)
HDR ; Header code
"RTN","PXRMLRM",52,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMLRM",53,0)
 Q
"RTN","PXRMLRM",54,0)
 ;
"RTN","PXRMLRM",55,0)
HELP(CALL) ;General help text routine
"RTN","PXRMLRM",56,0)
 N HTEXT
"RTN","PXRMLRM",57,0)
 I CALL=1 D
"RTN","PXRMLRM",58,0)
 .S HTEXT(1)="Select DE to display or edit a rule."
"RTN","PXRMLRM",59,0)
 .S HTEXT(2)="Select ED to edit a rule"
"RTN","PXRMLRM",60,0)
 ;
"RTN","PXRMLRM",61,0)
 I CALL=2 D
"RTN","PXRMLRM",62,0)
 .S HTEXT(1)=" Select F to edit term based finding rules."
"RTN","PXRMLRM",63,0)
 .S HTEXT(2)=" Select P to edit patient list based finding rules."
"RTN","PXRMLRM",64,0)
 .S HTEXT(3)=" Select R to edit reminder rules."
"RTN","PXRMLRM",65,0)
 .S HTEXT(4)=" Select S to edit rule sets. A rule set may contain either "
"RTN","PXRMLRM",66,0)
 .S HTEXT(5)="finding list rules or patient list rules or both. These "
"RTN","PXRMLRM",67,0)
 .S HTEXT(6)="component list rules must be created before the rule set "
"RTN","PXRMLRM",68,0)
 .S HTEXT(7)="can be constructed."
"RTN","PXRMLRM",69,0)
 ;
"RTN","PXRMLRM",70,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMLRM",71,0)
 Q
"RTN","PXRMLRM",72,0)
 ;
"RTN","PXRMLRM",73,0)
HLP ;Help code
"RTN","PXRMLRM",74,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMLRM",75,0)
 S SUB="PXRMLRMH"
"RTN","PXRMLRM",76,0)
 D EN^VALM("PXRM LIST RULE HELP")
"RTN","PXRMLRM",77,0)
 Q
"RTN","PXRMLRM",78,0)
 ;
"RTN","PXRMLRM",79,0)
INIT ;Init
"RTN","PXRMLRM",80,0)
 S VALMCNT=0
"RTN","PXRMLRM",81,0)
 Q
"RTN","PXRMLRM",82,0)
 ;
"RTN","PXRMLRM",83,0)
LIST(RLIST,IEN,LRTYP) ;Build a list of list rule entries.
"RTN","PXRMLRM",84,0)
 N DATA,IND,LRCLASS,LRNAME,NAME
"RTN","PXRMLRM",85,0)
 ;Build the list in alphabetical order.
"RTN","PXRMLRM",86,0)
 S VALMCNT=0
"RTN","PXRMLRM",87,0)
 S NAME=""
"RTN","PXRMLRM",88,0)
 F  S NAME=$O(^PXRM(810.4,"B",NAME)) Q:NAME=""  D
"RTN","PXRMLRM",89,0)
 .S IND=$O(^PXRM(810.4,"B",NAME,"")) Q:'IND
"RTN","PXRMLRM",90,0)
 .S DATA=$G(^PXRM(810.4,IND,0))
"RTN","PXRMLRM",91,0)
 .I $P(DATA,U,3)'=LRTYP Q
"RTN","PXRMLRM",92,0)
 .S LRNAME=$P(DATA,U)
"RTN","PXRMLRM",93,0)
 .S LRCLASS=$P($G(^PXRM(810.4,IND,100)),U)
"RTN","PXRMLRM",94,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMLRM",95,0)
 .S RLIST(VALMCNT,0)=$$FRE(VALMCNT,LRNAME,LRCLASS)
"RTN","PXRMLRM",96,0)
 .S IEN(VALMCNT)=IND
"RTN","PXRMLRM",97,0)
 S RLIST("VALMCNT")=VALMCNT
"RTN","PXRMLRM",98,0)
 Q
"RTN","PXRMLRM",99,0)
 ;
"RTN","PXRMLRM",100,0)
LRADD ;Add Rule Option
"RTN","PXRMLRM",101,0)
 ;
"RTN","PXRMLRM",102,0)
 ;Reset Screen Mode
"RTN","PXRMLRM",103,0)
 W IORESET
"RTN","PXRMLRM",104,0)
 ;
"RTN","PXRMLRM",105,0)
 ;Add Rule
"RTN","PXRMLRM",106,0)
 D ADD^PXRMLRED
"RTN","PXRMLRM",107,0)
 ;
"RTN","PXRMLRM",108,0)
 ;Rebuild Workfile
"RTN","PXRMLRM",109,0)
 D BLDLIST
"RTN","PXRMLRM",110,0)
 S VALMBCK="R"
"RTN","PXRMLRM",111,0)
 Q
"RTN","PXRMLRM",112,0)
 ;
"RTN","PXRMLRM",113,0)
LRINQ ;Rule Inquiry - PXRM LIST RULE DISPLAY/EDIT entry 
"RTN","PXRMLRM",114,0)
 N IND,LRIEN,VALMY
"RTN","PXRMLRM",115,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMLRM",116,0)
 ;If there is no list quit.
"RTN","PXRMLRM",117,0)
 I '$D(VALMY) Q
"RTN","PXRMLRM",118,0)
 S PXRMDONE=0
"RTN","PXRMLRM",119,0)
 S IND=""
"RTN","PXRMLRM",120,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMLRM",121,0)
 .;Get the ien.
"RTN","PXRMLRM",122,0)
 .S LRIEN=^TMP("PXRMLRM",$J,"IDX",IND,IND)
"RTN","PXRMLRM",123,0)
 .D START^PXRMLRED(LRIEN,PXRMTYP)
"RTN","PXRMLRM",124,0)
 D BLDLIST
"RTN","PXRMLRM",125,0)
 S VALMBCK="R"
"RTN","PXRMLRM",126,0)
 Q
"RTN","PXRMLRM",127,0)
 ;
"RTN","PXRMLRM",128,0)
PEXIT ;Protocol exit code
"RTN","PXRMLRM",129,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMLRM",130,0)
 ;Reset after page up/down etc
"RTN","PXRMLRM",131,0)
 D XQORM
"RTN","PXRMLRM",132,0)
 Q
"RTN","PXRMLRM",133,0)
 ;
"RTN","PXRMLRM",134,0)
VIEW ;Select view
"RTN","PXRMLRM",135,0)
 W IORESET
"RTN","PXRMLRM",136,0)
 S VALMBCK="R"
"RTN","PXRMLRM",137,0)
 N X,Y,CODE,DIR
"RTN","PXRMLRM",138,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMLRM",139,0)
 S DIR(0)="S"_U_"F:Finding Rule;"
"RTN","PXRMLRM",140,0)
 S DIR(0)=DIR(0)_"P:Patient List Rule;"
"RTN","PXRMLRM",141,0)
 S DIR(0)=DIR(0)_"R:Reminder Rule;"
"RTN","PXRMLRM",142,0)
 S DIR(0)=DIR(0)_"S:Rule Set;"
"RTN","PXRMLRM",143,0)
 S DIR("A")="TYPE OF VIEW"
"RTN","PXRMLRM",144,0)
 S DIR("B")="F"
"RTN","PXRMLRM",145,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMLRM",146,0)
 S DIR("??")=U_"D HELP^PXRMLRM(2)"
"RTN","PXRMLRM",147,0)
 D ^DIR K DIR
"RTN","PXRMLRM",148,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMLRM",149,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMLRM",150,0)
 ;Change display type
"RTN","PXRMLRM",151,0)
 S PXRMTYP=$S(Y="F":1,Y="P":5,Y="S":3,1:4)
"RTN","PXRMLRM",152,0)
 S PXRMTYP=$S(Y="F":1,Y="P":5,Y="S":3,Y="R":2,1:4)
"RTN","PXRMLRM",153,0)
 ;Rebuild Workfile
"RTN","PXRMLRM",154,0)
 D BLDLIST,HDR
"RTN","PXRMLRM",155,0)
 Q
"RTN","PXRMLRM",156,0)
 ;
"RTN","PXRMLRM",157,0)
XSEL ;PXRM LIST RULE MANAGEMENT SELECT ENTRY validation
"RTN","PXRMLRM",158,0)
 N SEL,IEN
"RTN","PXRMLRM",159,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMLRM",160,0)
 ;Remove trailing ,
"RTN","PXRMLRM",161,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMLRM",162,0)
 ;Invalid selection
"RTN","PXRMLRM",163,0)
 I SEL["," D  Q
"RTN","PXRMLRM",164,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMLRM",165,0)
 .S VALMBCK="R"
"RTN","PXRMLRM",166,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMLRM",167,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMLRM",168,0)
 .S VALMBCK="R"
"RTN","PXRMLRM",169,0)
 ;
"RTN","PXRMLRM",170,0)
 ;Get the list ien.
"RTN","PXRMLRM",171,0)
 S IEN=^TMP("PXRMLRM",$J,"IDX",SEL,SEL)
"RTN","PXRMLRM",172,0)
 ;
"RTN","PXRMLRM",173,0)
 ;Option to Display/Edit or Test Rule Set.
"RTN","PXRMLRM",174,0)
 N DIR,OPTION,RIEN,X,Y
"RTN","PXRMLRM",175,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMLRM",176,0)
 S DIR(0)="SBM"_U_"DR:Display/Edit Rule;"
"RTN","PXRMLRM",177,0)
 I $G(PXRMTYP)=3 S DIR(0)=DIR(0)_"TEST:Test Rule Set"
"RTN","PXRMLRM",178,0)
 S DIR("A")="Select Action: "
"RTN","PXRMLRM",179,0)
 S DIR("B")="DR"
"RTN","PXRMLRM",180,0)
 S DIR("?")="Select from the codes displayed."
"RTN","PXRMLRM",181,0)
 D ^DIR K DIR
"RTN","PXRMLRM",182,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMLRM",183,0)
 I $D(DTOUT)!($D(DUOUT)) S VALMBCK="R" Q
"RTN","PXRMLRM",184,0)
 S OPTION=Y
"RTN","PXRMLRM",185,0)
 I $G(OPTION)="" G XSELE
"RTN","PXRMLRM",186,0)
 ;
"RTN","PXRMLRM",187,0)
 ;Display/Edit
"RTN","PXRMLRM",188,0)
 I OPTION="DR"   D START^PXRMLRED(IEN,PXRMTYP)
"RTN","PXRMLRM",189,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMLRM",190,0)
 ;
"RTN","PXRMLRM",191,0)
 ;Rule set test
"RTN","PXRMLRM",192,0)
 I OPTION="TEST" D RSTEST^PXRMRST(IEN)
"RTN","PXRMLRM",193,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMLRM",194,0)
 ;
"RTN","PXRMLRM",195,0)
XSELE ;
"RTN","PXRMLRM",196,0)
 D CLEAN^VALM10
"RTN","PXRMLRM",197,0)
 D BLDLIST,XQORM
"RTN","PXRMLRM",198,0)
 S VALMBCK="R"
"RTN","PXRMLRM",199,0)
 Q
"RTN","PXRMLRM",200,0)
 ;
"RTN","PXRMLRM",201,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM LIST RULE MANAGEMENT SELECT ENTRY",0))_U_"1:"_VALMCNT
"RTN","PXRMLRM",202,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMLRM",203,0)
 Q
"RTN","PXRMLRM",204,0)
 ;
"RTN","PXRMMH")
0^23^B26669447
"RTN","PXRMMH",1,0)
PXRMMH ; SLC/PKR - Handle mental health findings. ;04/05/2005
"RTN","PXRMMH",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMMH",3,0)
 ;
"RTN","PXRMMH",4,0)
 ;=======================================================
"RTN","PXRMMH",5,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate mental health findings.
"RTN","PXRMMH",6,0)
 D EVALFI^PXRMINDX(DFN,.DEFARR,ENODE,.FIEVAL)
"RTN","PXRMMH",7,0)
 Q
"RTN","PXRMMH",8,0)
 ;
"RTN","PXRMMH",9,0)
 ;=======================================================
"RTN","PXRMMH",10,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Evaluate mental health term findings
"RTN","PXRMMH",11,0)
 ;for patient lists.
"RTN","PXRMMH",12,0)
 D EVALPL^PXRMINDL(.FINDPA,ENODE,.TERMARR,PLIST)
"RTN","PXRMMH",13,0)
 Q
"RTN","PXRMMH",14,0)
 ;=======================================================
"RTN","PXRMMH",15,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate mental
"RTN","PXRMMH",16,0)
 ;health instrument terms.
"RTN","PXRMMH",17,0)
 D EVALTERM^PXRMINDX(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL)
"RTN","PXRMMH",18,0)
 Q
"RTN","PXRMMH",19,0)
 ;
"RTN","PXRMMH",20,0)
 ;=======================================================
"RTN","PXRMMH",21,0)
GETDATA(DAS,FIEVT) ;Return the data for a Psych Instrument Patient entry.
"RTN","PXRMMH",22,0)
 ;Some tests require the YSP key in order to get a score.
"RTN","PXRMMH",23,0)
 N DASP,IND,SCALE,YSDATA
"RTN","PXRMMH",24,0)
 ;DBIA #4442
"RTN","PXRMMH",25,0)
 S DASP=$P(DAS,"S",1)
"RTN","PXRMMH",26,0)
 S SCALE=$P(DAS,"S",2)
"RTN","PXRMMH",27,0)
 D ENDAS^YTAPI10(.YSDATA,DASP)
"RTN","PXRMMH",28,0)
 I $G(YSDATA(0))="[ERROR]" Q
"RTN","PXRMMH",29,0)
 S FIEVT("MH TEST")=$P(YSDATA(2),U,3)
"RTN","PXRMMH",30,0)
 I FIEVT("MH TEST")["GAF" S FIEVT("RATING")=$P(YSDATA(3),U,2) Q
"RTN","PXRMMH",31,0)
 ;If no scale is specified use the first set of results.
"RTN","PXRMMH",32,0)
 S IND=$S(SCALE="":6,1:SCALE+5)
"RTN","PXRMMH",33,0)
 S FIEVT("YSDATA")=$G(YSDATA(IND))
"RTN","PXRMMH",34,0)
 S FIEVT("SCALE NAME")=$P(FIEVT("YSDATA"),U,2)
"RTN","PXRMMH",35,0)
 S (FIEVT("RAW SCORE"),FIEVT("VALUE"))=$P(FIEVT("YSDATA"),U,3)
"RTN","PXRMMH",36,0)
 S FIEVT("TRANSFORMED SCORE")=$P(FIEVT("YSDATA"),U,4)
"RTN","PXRMMH",37,0)
 Q
"RTN","PXRMMH",38,0)
 ;
"RTN","PXRMMH",39,0)
 ;=======================================================
"RTN","PXRMMH",40,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMMH",41,0)
 N DATE,IND,JND,MHTEST,NAME,NOUT,RATING,RSCORE,SCORE,TEXTOUT,TSCORE
"RTN","PXRMMH",42,0)
 S MHTEST=IFIEVAL("MH TEST")
"RTN","PXRMMH",43,0)
 ;Remove the dashes surrounding the name.
"RTN","PXRMMH",44,0)
 S MHTEST=$TR(MHTEST,"-","")
"RTN","PXRMMH",45,0)
 S NAME="Mental Health Test: "_MHTEST_" = "
"RTN","PXRMMH",46,0)
 S IND=0
"RTN","PXRMMH",47,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMMH",48,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMMH",49,0)
 . S RSCORE=$G(IFIEVAL(IND,"RAW SCORE"))
"RTN","PXRMMH",50,0)
 . S TSCORE=$G(IFIEVAL(IND,"TRANSFORMED SCORE"))
"RTN","PXRMMH",51,0)
 . S RATING=$G(IFIEVAL(IND,"RATING"))
"RTN","PXRMMH",52,0)
 . S SCORE=$S(RATING'="":RATING,TSCORE'="":TSCORE,RSCORE'="":RSCORE,1:"")
"RTN","PXRMMH",53,0)
 . S TEMP=NAME_SCORE_" ("_$$EDATE^PXRMDATE(IFIEVAL(IND,"DATE"))_")"
"RTN","PXRMMH",54,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMMH",55,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMMH",56,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMMH",57,0)
 Q
"RTN","PXRMMH",58,0)
 ;
"RTN","PXRMMH",59,0)
 ;=======================================================
"RTN","PXRMMH",60,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMMH",61,0)
 ;maintenance output.
"RTN","PXRMMH",62,0)
 N DATE,IND,JND,MHTEST,NOUT,RATING,RSCORE,TEXTOUT,TSCORE
"RTN","PXRMMH",63,0)
 S MHTEST=IFIEVAL("MH TEST")
"RTN","PXRMMH",64,0)
 ;Remove the dashes surrounding the name.
"RTN","PXRMMH",65,0)
 S MHTEST=$TR(MHTEST,"-","")
"RTN","PXRMMH",66,0)
 S NLINES=NLINES+1
"RTN","PXRMMH",67,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Mental Health Test: "_MHTEST
"RTN","PXRMMH",68,0)
 S IND=0
"RTN","PXRMMH",69,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMMH",70,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMMH",71,0)
 . S TEMP=$$EDATE^PXRMDATE(IFIEVAL(IND,"DATE"))
"RTN","PXRMMH",72,0)
 . S RSCORE=$G(IFIEVAL(IND,"RAW SCORE"))
"RTN","PXRMMH",73,0)
 . I RSCORE'="" S TEMP=TEMP_" raw score - "_RSCORE
"RTN","PXRMMH",74,0)
 . S TSCORE=$G(IFIEVAL(IND,"TRANSFORMED SCORE"))
"RTN","PXRMMH",75,0)
 . I TSCORE'="" S TEMP=TEMP_"; transformed score - "_TSCORE
"RTN","PXRMMH",76,0)
 . S RATING=$G(IFIEVAL(IND,"RATING"))
"RTN","PXRMMH",77,0)
 . I RATING'="" S TEMP=TEMP_" Rating: "_RATING
"RTN","PXRMMH",78,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMMH",79,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMMH",80,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMMH",81,0)
 Q
"RTN","PXRMMH",82,0)
 ;
"RTN","PXRMMH",83,0)
 ;=======================================================
"RTN","PXRMMH",84,0)
SCHELP(MHIEN) ;Xecutable help for MH SCALE
"RTN","PXRMMH",85,0)
 N IND,JND,NUM,SCALE,TEMP,TEMP1
"RTN","PXRMMH",86,0)
 I MHIEN=0 D  Q
"RTN","PXRMMH",87,0)
 . S SCALE(1)="This is not a valid Mental Health finding, selecting an MH scale does"
"RTN","PXRMMH",88,0)
 . S SCALE(2)="not make sense"
"RTN","PXRMMH",89,0)
 . D EN^DDIOL(.SCALE)
"RTN","PXRMMH",90,0)
 S SCALE(1)="SCALE NUMBER  SCALE NAME"
"RTN","PXRMMH",91,0)
 S SCALE(2)="------------------------"
"RTN","PXRMMH",92,0)
 S IND=0
"RTN","PXRMMH",93,0)
 S JND=2
"RTN","PXRMMH",94,0)
 F  S IND=$O(^YTT(601,MHIEN,"S",IND)) Q:+IND=0  D
"RTN","PXRMMH",95,0)
 . S TEMP=^YTT(601,MHIEN,"S",IND,0)
"RTN","PXRMMH",96,0)
 . S JND=JND+1
"RTN","PXRMMH",97,0)
 . S TEMP1=$P(TEMP,U,1)
"RTN","PXRMMH",98,0)
 . S NUM=6-$L(TEMP1)
"RTN","PXRMMH",99,0)
 . S SCALE(JND)=$$INSCHR^PXRMEXLC(NUM," ")_TEMP1_"        "_$P(TEMP,U,2)
"RTN","PXRMMH",100,0)
 D EN^DDIOL(.SCALE)
"RTN","PXRMMH",101,0)
 Q
"RTN","PXRMMH",102,0)
 ;
"RTN","PXRMMH",103,0)
 ;=======================================================
"RTN","PXRMMH",104,0)
SCHELPF ;Xecutable help for MH SCALE in 811.9 findings.
"RTN","PXRMMH",105,0)
 N FIND0,MHIEN
"RTN","PXRMMH",106,0)
 S FIND0=^PXD(811.9,DA(1),20,DA,0)
"RTN","PXRMMH",107,0)
 I FIND0["YTT(601" S MHIEN=$P(FIND0,";",1)
"RTN","PXRMMH",108,0)
 E  S MHIEN=0
"RTN","PXRMMH",109,0)
 D SCHELP(MHIEN)
"RTN","PXRMMH",110,0)
 Q
"RTN","PXRMMH",111,0)
 ;
"RTN","PXRMMH",112,0)
 ;=======================================================
"RTN","PXRMMH",113,0)
SCHELPT ;Xecutable help for MH SCALE in 811.5 findings.
"RTN","PXRMMH",114,0)
 N MHIEN,TFIND0
"RTN","PXRMMH",115,0)
 S TFIND0=^PXRMD(811.5,DA(1),20,DA,0)
"RTN","PXRMMH",116,0)
 I TFIND0["YTT(601" S MHIEN=$P(TFIND0,";",1)
"RTN","PXRMMH",117,0)
 E  S MHIEN=0
"RTN","PXRMMH",118,0)
 D SCHELP(MHIEN)
"RTN","PXRMMH",119,0)
 Q
"RTN","PXRMMH",120,0)
 ;
"RTN","PXRMMH",121,0)
 ;=======================================================
"RTN","PXRMMH",122,0)
SEVALFI(DFN,ITEM,NGET,SDIR,BDT,EDT,NFOUND,FLIST) ;
"RTN","PXRMMH",123,0)
 N FIEV,FINDING,IND,YS,YSDATA
"RTN","PXRMMH",124,0)
 S YS("CODE")=ITEM,YS("DFN")=DFN
"RTN","PXRMMH",125,0)
 S YS("BEGIN")=BDT,YS("END")=EDT
"RTN","PXRMMH",126,0)
 ;YTAPI10A does not understand "*" for a limit so use 99.
"RTN","PXRMMH",127,0)
 I NGET="*" S NGET=99
"RTN","PXRMMH",128,0)
 S YS("LIMIT")=$S(SDIR=-1:NGET,1:-NGET)
"RTN","PXRMMH",129,0)
 ;DBIA #4458
"RTN","PXRMMH",130,0)
 D PTTEST^YTAPI10A(.YSDATA,.YS)
"RTN","PXRMMH",131,0)
 S NFOUND=$P(YSDATA(1),U,2)
"RTN","PXRMMH",132,0)
 I NFOUND=0 Q
"RTN","PXRMMH",133,0)
 F IND=1:1:NFOUND S FLIST(IND)=YSDATA(IND+1)
"RTN","PXRMMH",134,0)
 Q
"RTN","PXRMMH",135,0)
 ;
"RTN","PXRMMH",136,0)
 ;=======================================================
"RTN","PXRMMH",137,0)
SEVALPL(ITEM,NOCC,BDT,EDT,PLIST) ;Use MH API to get patient list. Called
"RTN","PXRMMH",138,0)
 ;from PXRMINDL.
"RTN","PXRMMH",139,0)
 N YS
"RTN","PXRMMH",140,0)
 ;YTAPI10A does not understand "*" for a limit so use 99.
"RTN","PXRMMH",141,0)
 I NOCC="*" S NOCC=99
"RTN","PXRMMH",142,0)
 S YS("CODE")=ITEM,YS("BEGIN")=BDT,YS("END")=EDT,YS("LIMIT")=NOCC
"RTN","PXRMMH",143,0)
 ;DBIA #4458
"RTN","PXRMMH",144,0)
 D OCCUR^YTAPI10A(PLIST,.YS)
"RTN","PXRMMH",145,0)
 Q
"RTN","PXRMMH",146,0)
 ;
"RTN","PXRMMH",147,0)
 ;=======================================================
"RTN","PXRMMH",148,0)
VSCALE(X,FIND0) ;Make sure that the mental health scale is valid.
"RTN","PXRMMH",149,0)
 ;Either the scale number or the scale name can be used.
"RTN","PXRMMH",150,0)
 N MHIEN,MHTEST,SCALE,VALID
"RTN","PXRMMH",151,0)
 S MHTEST=$P(FIND0,U,1)
"RTN","PXRMMH",152,0)
 S MHIEN=$P(MHTEST,";",1)
"RTN","PXRMMH",153,0)
 I +X>0 D  Q VALID
"RTN","PXRMMH",154,0)
 . S VALID=$S($D(^YTT(601,MHIEN,"S",X)):1,1:0)
"RTN","PXRMMH",155,0)
 E  D
"RTN","PXRMMH",156,0)
 . S SCALE=$O(^YTT(601,MHIEN,"S","C",X,""))
"RTN","PXRMMH",157,0)
 . S VALID=$S(SCALE="":0,1:1)
"RTN","PXRMMH",158,0)
 Q VALID
"RTN","PXRMMH",159,0)
 ;
"RTN","PXRMMH",160,0)
 ;=======================================================
"RTN","PXRMMH",161,0)
VSCALEF(X) ;Make sure that the mental health scale is valid for a finding.
"RTN","PXRMMH",162,0)
 I X="" Q 1
"RTN","PXRMMH",163,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMMH",164,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMMH",165,0)
 ;Do not execute as part of exchange.
"RTN","PXRMMH",166,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMMH",167,0)
 N FIND0
"RTN","PXRMMH",168,0)
 S FIND0=^PXD(811.9,DA(1),20,DA,0)
"RTN","PXRMMH",169,0)
 Q $$VSCALE(X,FIND0)
"RTN","PXRMMH",170,0)
 ;
"RTN","PXRMMH",171,0)
 ;=======================================================
"RTN","PXRMMH",172,0)
VSCALET(X) ;Make sure that the mental health scale is valid for a 
"RTN","PXRMMH",173,0)
 ;term finding.
"RTN","PXRMMH",174,0)
 I X="" Q 1
"RTN","PXRMMH",175,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMMH",176,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMMH",177,0)
 ;Do not execute as part of exchange.
"RTN","PXRMMH",178,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMMH",179,0)
 N TFIND0
"RTN","PXRMMH",180,0)
 S TFIND0=^PXRMD(811.5,DA(1),20,DA,0)
"RTN","PXRMMH",181,0)
 Q $$VSCALE(X,TFIND0)
"RTN","PXRMMH",182,0)
 ;
"RTN","PXRMMHV")
0^89^B3798193
"RTN","PXRMMHV",1,0)
PXRMMHV ; SLC/PKR - Clinical Reminders entry points. ; 10/19/2005
"RTN","PXRMMHV",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMMHV",3,0)
 ;Supports DBIA #4811.
"RTN","PXRMMHV",4,0)
 ;==========================================================
"RTN","PXRMMHV",5,0)
MHVC(DFN) ;Return the MHV combined output for all the active patient
"RTN","PXRMMHV",6,0)
 ;reminders.
"RTN","PXRMMHV",7,0)
 N RIEN
"RTN","PXRMMHV",8,0)
 K ^TMP("PXRMMHVC",$J)
"RTN","PXRMMHV",9,0)
 S RIEN=0
"RTN","PXRMMHV",10,0)
 F  S RIEN=$O(^PXD(811.9,"P",RIEN)) Q:+RIEN'>0  D
"RTN","PXRMMHV",11,0)
 . I $P(^PXD(811.9,RIEN,0),U,6)=1 Q
"RTN","PXRMMHV",12,0)
 . D MAIN^PXRM(DFN,RIEN,12,0)
"RTN","PXRMMHV",13,0)
 Q
"RTN","PXRMMHV",14,0)
 ;
"RTN","PXRMMHV",15,0)
 ;==========================================================
"RTN","PXRMMHV",16,0)
PREMLIST ;Return a list of the active patient reminders.
"RTN","PXRMMHV",17,0)
 N NAME,RIEN,TEMP
"RTN","PXRMMHV",18,0)
 K ^TMP("PXRMMHVL",$J)
"RTN","PXRMMHV",19,0)
 S RIEN=0
"RTN","PXRMMHV",20,0)
 F  S RIEN=$O(^PXD(811.9,"P",RIEN)) Q:+RIEN'>0  D
"RTN","PXRMMHV",21,0)
 . S TEMP=^PXD(811.9,RIEN,0)
"RTN","PXRMMHV",22,0)
 . I $P(TEMP,U,6)=1 Q
"RTN","PXRMMHV",23,0)
 . S ^TMP("PXRMMHVL",$J,RIEN)=$P(TEMP,U,1)_U_$P(TEMP,U,3)_U_$P(^PXD(811.9,RIEN,100),U,1)
"RTN","PXRMMHV",24,0)
 Q
"RTN","PXRMMHV",25,0)
 ;
"RTN","PXRMMHV",26,0)
 ;==========================================================
"RTN","PXRMMHV",27,0)
WEBALL ;Return the web site information for all the active patient reminders.
"RTN","PXRMMHV",28,0)
 N NAME,RIEN,TEMP
"RTN","PXRMMHV",29,0)
 K ^TMP("PXRMMHVW",$J)
"RTN","PXRMMHV",30,0)
 S RIEN=0
"RTN","PXRMMHV",31,0)
 F  S RIEN=$O(^PXD(811.9,"P",RIEN)) Q:+RIEN'>0  D
"RTN","PXRMMHV",32,0)
 . S TEMP=^PXD(811.9,RIEN,0)
"RTN","PXRMMHV",33,0)
 . I $P(TEMP,U,6)=1 Q
"RTN","PXRMMHV",34,0)
 . D WEBI(RIEN,"PXRMMHVW")
"RTN","PXRMMHV",35,0)
 Q
"RTN","PXRMMHV",36,0)
 ;
"RTN","PXRMMHV",37,0)
 ;==========================================================
"RTN","PXRMMHV",38,0)
WEBI(RIEN,NODE) ;Return the web site information for an individual reminder.
"RTN","PXRMMHV",39,0)
 N IEN,IND,NL,TEMP,URL
"RTN","PXRMMHV",40,0)
 I '$D(^PXD(811.9,RIEN,50)) Q
"RTN","PXRMMHV",41,0)
 S IEN=0
"RTN","PXRMMHV",42,0)
 F  S IEN=+$O(^PXD(811.9,RIEN,50,IEN)) Q:IEN=0  D
"RTN","PXRMMHV",43,0)
 . S TEMP=$G(^PXD(811.9,RIEN,50,IEN,0))
"RTN","PXRMMHV",44,0)
 . S URL=$P(TEMP,U,1)
"RTN","PXRMMHV",45,0)
 . I URL="" Q
"RTN","PXRMMHV",46,0)
 . S ^TMP(NODE,$J,RIEN,"WEB",IEN,"URL")=URL
"RTN","PXRMMHV",47,0)
 . S ^TMP(NODE,$J,RIEN,"WEB",IEN,"TITLE")=$P(TEMP,U,2)
"RTN","PXRMMHV",48,0)
 .;If there is a description output it.
"RTN","PXRMMHV",49,0)
 . I '$D(^PXD(811.9,RIEN,50,IEN,1)) Q
"RTN","PXRMMHV",50,0)
 . S (IND,NL)=0
"RTN","PXRMMHV",51,0)
 . F  S IND=+$O(^PXD(811.9,RIEN,50,IEN,1,IND)) Q:IND=0  D
"RTN","PXRMMHV",52,0)
 .. S NL=NL+1
"RTN","PXRMMHV",53,0)
 .. S ^TMP(NODE,$J,RIEN,"WEB",IEN,"DESCRIPTION",NL)=^PXD(811.9,RIEN,50,IEN,1,IND,0)
"RTN","PXRMMHV",54,0)
 Q
"RTN","PXRMMHV",55,0)
 ;
"RTN","PXRMMST")
0^33^B74220364
"RTN","PXRMMST",1,0)
PXRMMST ; SLC/PKR - Routines for dealing with MST. ;07/17/2006
"RTN","PXRMMST",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMMST",3,0)
 ;Use of DGMSTAPI supported by DBIA #2716.
"RTN","PXRMMST",4,0)
 ;====================================================
"RTN","PXRMMST",5,0)
GSYINFO(TYPE) ;Return the Clinical Reminders MST synchronization date
"RTN","PXRMMST",6,0)
 ;and the number of updates made. The format is an up-arrow delimited
"RTN","PXRMMST",7,0)
 ;string. The first piece is the date and the second is the number
"RTN","PXRMMST",8,0)
 ;of updates. If TYPE is "I" then the data for the initial
"RTN","PXRMMST",9,0)
 ;synchronization is returned. For any other value the data for the
"RTN","PXRMMST",10,0)
 ;last daily synchronization is returned.
"RTN","PXRMMST",11,0)
 I $G(TYPE)="I" Q $P($G(^PXRM(800,1,"MST")),U,1,2) Q
"RTN","PXRMMST",12,0)
 Q $P($G(^PXRM(800,1,"MST")),U,3,4)
"RTN","PXRMMST",13,0)
 ;
"RTN","PXRMMST",14,0)
 ;====================================================
"RTN","PXRMMST",15,0)
QUE ;Queue the MST synchronization job.
"RTN","PXRMMST",16,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,MINDT,SDTIME,STIME,X,Y
"RTN","PXRMMST",17,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMMST",18,0)
 W !,"Queue the Clinical Reminders MST synchronization."
"RTN","PXRMMST",19,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMMST",20,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMMST",21,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMMST",22,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMMST",23,0)
 D ^DIR
"RTN","PXRMMST",24,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMMST",25,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMMST",26,0)
 S SDTIME=Y
"RTN","PXRMMST",27,0)
 K DIR
"RTN","PXRMMST",28,0)
 S DIR(0)="YA"
"RTN","PXRMMST",29,0)
 S DIR("A")="Do you want to run the MST synchronization at the same time every day? "
"RTN","PXRMMST",30,0)
 S DIR("B")="Y"
"RTN","PXRMMST",31,0)
 D ^DIR
"RTN","PXRMMST",32,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMMST",33,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMMST",34,0)
 S STIME=$S(Y:"1."_$P(SDTIME,".",2),1:-1)
"RTN","PXRMMST",35,0)
 ;
"RTN","PXRMMST",36,0)
 ;Put the task into the queue.
"RTN","PXRMMST",37,0)
 K ZTSAVE
"RTN","PXRMMST",38,0)
 S ZTSAVE("STIME")=STIME
"RTN","PXRMMST",39,0)
 S ZTRTN="SYNCH^PXRMMST"
"RTN","PXRMMST",40,0)
 S ZTDESC="Clinical Reminders MST synchronization job"
"RTN","PXRMMST",41,0)
 S ZTDTH=SDTIME
"RTN","PXRMMST",42,0)
 S ZTIO=""
"RTN","PXRMMST",43,0)
 D ^%ZTLOAD
"RTN","PXRMMST",44,0)
 W !,"Task number ",ZTSK," queued."
"RTN","PXRMMST",45,0)
 Q
"RTN","PXRMMST",46,0)
 ;
"RTN","PXRMMST",47,0)
 ;====================================================
"RTN","PXRMMST",48,0)
STATUS(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a
"RTN","PXRMMST",49,0)
 ;patient's MST status.
"RTN","PXRMMST",50,0)
 N IEN,TEMP
"RTN","PXRMMST",51,0)
 S TEMP=$$GETSTAT^DGMSTAPI(DFN)
"RTN","PXRMMST",52,0)
 S IEN=$P(TEMP,U,1)
"RTN","PXRMMST",53,0)
 I IEN=-1 D  Q
"RTN","PXRMMST",54,0)
 . S TEST=0,VALUE="",DATE=$$NOW^PXRMDATE
"RTN","PXRMMST",55,0)
 I IEN=0 D  Q
"RTN","PXRMMST",56,0)
 . S TEST=0
"RTN","PXRMMST",57,0)
 . S VALUE=$P(TEMP,U,2)
"RTN","PXRMMST",58,0)
 . S DATE=$P(TEMP,U,3)
"RTN","PXRMMST",59,0)
 . S TEXT="No MST status found"
"RTN","PXRMMST",60,0)
 ;If we get to here then a valid entry was found.
"RTN","PXRMMST",61,0)
 S TEST=1
"RTN","PXRMMST",62,0)
 S VALUE=$P(TEMP,U,2)
"RTN","PXRMMST",63,0)
 S DATE=$P(TEMP,U,3)
"RTN","PXRMMST",64,0)
 Q
"RTN","PXRMMST",65,0)
 ;
"RTN","PXRMMST",66,0)
 ;====================================================
"RTN","PXRMMST",67,0)
STCODE(TERM) ;Return the MST status code based on the term name.
"RTN","PXRMMST",68,0)
 N STCODE
"RTN","PXRMMST",69,0)
 S STCODE=$S(TERM="VA-MST DECLINES REPORT":"D",TERM="VA-MST NEGATIVE REPORT":"N",TERM="VA-MST POSITIVE REPORT":"Y",1:"U")
"RTN","PXRMMST",70,0)
 Q STCODE
"RTN","PXRMMST",71,0)
 ;
"RTN","PXRMMST",72,0)
 ;====================================================
"RTN","PXRMMST",73,0)
SYNCH ;Synchronize the MST history file.
"RTN","PXRMMST",74,0)
 N INID,LTIME,NUMUPD,START,TEMP
"RTN","PXRMMST",75,0)
 ;STIME is passed from QUE via ZTSAVE.
"RTN","PXRMMST",76,0)
 D UPDSTAT(.NUMUPD,.START)
"RTN","PXRMMST",77,0)
 ;If the initial sync data has been stored then update the daily
"RTN","PXRMMST",78,0)
 ;data.
"RTN","PXRMMST",79,0)
 S INID=+$P($G(^PXRM(800,1,"MST")),U,1)
"RTN","PXRMMST",80,0)
 I INID>0 D
"RTN","PXRMMST",81,0)
 . S $P(^PXRM(800,1,"MST"),U,3)=$$NOW^XLFDT
"RTN","PXRMMST",82,0)
 . S $P(^PXRM(800,1,"MST"),U,4)=NUMUPD
"RTN","PXRMMST",83,0)
 . S $P(^PXRM(800,1,"MST"),U,6)=START
"RTN","PXRMMST",84,0)
 E  D
"RTN","PXRMMST",85,0)
 . S $P(^PXRM(800,1,"MST"),U,1)=$$NOW^XLFDT
"RTN","PXRMMST",86,0)
 . S $P(^PXRM(800,1,"MST"),U,2)=NUMUPD
"RTN","PXRMMST",87,0)
 . S $P(^PXRM(800,1,"MST"),U,5)=START
"RTN","PXRMMST",88,0)
 ;
"RTN","PXRMMST",89,0)
 ;Cleanup the task stuff.
"RTN","PXRMMST",90,0)
 I STIME=-1 S ZTREQ="@" Q
"RTN","PXRMMST",91,0)
 E  D
"RTN","PXRMMST",92,0)
 . S TEMP=$G(^PXRM(800,1,"MST"))
"RTN","PXRMMST",93,0)
 . S LTIME=+$P(TEMP,U,3)
"RTN","PXRMMST",94,0)
 . I LTIME=0 S LTIME=+$P(TEMP,U,1)
"RTN","PXRMMST",95,0)
 .;Adding STIME sets the new starting time at exactly one day following
"RTN","PXRMMST",96,0)
 .;the previous starting time.
"RTN","PXRMMST",97,0)
 . S $P(ZTREQ,U,1)=$P(LTIME,".",1)+STIME
"RTN","PXRMMST",98,0)
 Q
"RTN","PXRMMST",99,0)
 ;
"RTN","PXRMMST",100,0)
 ;====================================================
"RTN","PXRMMST",101,0)
SYNREP ;Provide a report of the synchronization data.
"RTN","PXRMMST",102,0)
 N EDTIME,EITIME,IDATE,LDATE,NIUPD,NLUPD,TEMP
"RTN","PXRMMST",103,0)
 S TEMP=$G(^PXRM(800,1,"MST"))
"RTN","PXRMMST",104,0)
 S IDATE=$$FMTE^XLFDT($P(TEMP,U,1))
"RTN","PXRMMST",105,0)
 I IDATE=0 S IDATE="none"
"RTN","PXRMMST",106,0)
 S NIUPD=$P(TEMP,U,2)
"RTN","PXRMMST",107,0)
 S EITIME=$$FMDIFF^XLFDT($P(TEMP,U,1),$P(TEMP,U,5),2)
"RTN","PXRMMST",108,0)
 S LDATE=$$FMTE^XLFDT($P(TEMP,U,3))
"RTN","PXRMMST",109,0)
 I LDATE=0 S LDATE="none"
"RTN","PXRMMST",110,0)
 S NLUPD=$P(TEMP,U,4)
"RTN","PXRMMST",111,0)
 S EDTIME=$$FMDIFF^XLFDT($P(TEMP,U,3),$P(TEMP,U,6),2)
"RTN","PXRMMST",112,0)
 W !!,"Clinical Reminders MST Synchronization Report"
"RTN","PXRMMST",113,0)
 W !,"---------------------------------------------"
"RTN","PXRMMST",114,0)
 W !,"Initial synchronization date: ",IDATE
"RTN","PXRMMST",115,0)
 W !,"Number of updates made: ",NIUPD
"RTN","PXRMMST",116,0)
 I EITIME>60 D
"RTN","PXRMMST",117,0)
 . S EITIME=$$FMDIFF^XLFDT($P(TEMP,U,1),$P(TEMP,U,5),3)
"RTN","PXRMMST",118,0)
 . W !,"Elapsed time: ",EITIME
"RTN","PXRMMST",119,0)
 E  W !,"Elapsed time: ",EITIME," secs"
"RTN","PXRMMST",120,0)
 W !!,"Last daily synchronization date: ",LDATE
"RTN","PXRMMST",121,0)
 W !,"Number of updates made: ",NLUPD
"RTN","PXRMMST",122,0)
 I EDTIME>60 D
"RTN","PXRMMST",123,0)
 . S EDTIME=$$FMDIFF^XLFDT($P(TEMP,U,3),$P(TEMP,U,6),3)
"RTN","PXRMMST",124,0)
 . W !,"Elapsed time: ",EDTIME
"RTN","PXRMMST",125,0)
 E  W !,"Elapsed time: ",EDTIME," secs"
"RTN","PXRMMST",126,0)
 Q
"RTN","PXRMMST",127,0)
 ;
"RTN","PXRMMST",128,0)
 ;====================================================
"RTN","PXRMMST",129,0)
UPDATE(DFN,VISIT,SOURCE,STCODE,TYPE) ;Make an update to the MST History file.
"RTN","PXRMMST",130,0)
 N DATE,MSTDATE,PROV,STAT,TEMP,UPDSTAT,VPRVIEN
"RTN","PXRMMST",131,0)
 S UPDSTAT=-1
"RTN","PXRMMST",132,0)
 ;If the update is because of a protocol event use NOW for the
"RTN","PXRMMST",133,0)
 ;date/time. If it is being done as part of a synchronization use
"RTN","PXRMMST",134,0)
 ;the date the visit was created.
"RTN","PXRMMST",135,0)
 S DATE=$S(TYPE="PROTOCOL":$$NOW^XLFDT,1:$P($G(^AUPNVSIT(VISIT,0)),U,2))
"RTN","PXRMMST",136,0)
 ;If the date does not contain the time use noon.
"RTN","PXRMMST",137,0)
 I DATE'["." S DATE=DATE_".12"
"RTN","PXRMMST",138,0)
 S STAT=$$GETSTAT^DGMSTAPI(DFN)
"RTN","PXRMMST",139,0)
 S MSTDATE=$S($P(STAT,U,1)>0:$P(STAT,U,3),1:0)
"RTN","PXRMMST",140,0)
 I DATE>MSTDATE D
"RTN","PXRMMST",141,0)
 .;Determine the provider.
"RTN","PXRMMST",142,0)
 . S TEMP=$P(SOURCE,";",2)_$P(SOURCE,";",1)_",12)"
"RTN","PXRMMST",143,0)
 . S PROV=$P($G(@TEMP),U,4)
"RTN","PXRMMST",144,0)
 . I PROV="" D
"RTN","PXRMMST",145,0)
 ..;DBIA #2316
"RTN","PXRMMST",146,0)
 .. S VPRVIEN=+$O(^AUPNVPRV("AD",VISIT,""))
"RTN","PXRMMST",147,0)
 .. I VPRVIEN>0 S PROV=$P(^AUPNVPRV(VPRVIEN,0),U,1)
"RTN","PXRMMST",148,0)
 . S UPDSTAT=$$NEWSTAT^DGMSTAPI(DFN,STCODE,DATE,PROV)
"RTN","PXRMMST",149,0)
 . I +UPDSTAT=-1 D
"RTN","PXRMMST",150,0)
 .. N FN,GBL,IEN,NAME,TARGET,XMSUB,VADM
"RTN","PXRMMST",151,0)
 .. K ^TMP("PXRMXMZ",$J)
"RTN","PXRMMST",152,0)
 .. S XMSUB="CLINICAL REMINDER MST UPDATE PROBLEM"
"RTN","PXRMMST",153,0)
 .. S ^TMP("PXRMXMZ",$J,1,0)="NEWSTAT^DGMSTAPI returned the following error:"
"RTN","PXRMMST",154,0)
 .. S ^TMP("PXRMXMZ",$J,2,0)=$P(UPDSTAT,U,2)
"RTN","PXRMMST",155,0)
 .. S ^TMP("PXRMXMZ",$J,3,0)="The following data was passed to NEWSTAT^DGMSTAPI"
"RTN","PXRMMST",156,0)
 .. S ^TMP("PXRMXMZ",$J,4,0)="DFN = "_DFN
"RTN","PXRMMST",157,0)
 .. S ^TMP("PXRMXMZ",$J,5,0)="Status code = "_STCODE
"RTN","PXRMMST",158,0)
 .. S ^TMP("PXRMXMZ",$J,6,0)="Date = "_DATE
"RTN","PXRMMST",159,0)
 .. S ^TMP("PXRMXMZ",$J,7,0)="Provider = "_PROV
"RTN","PXRMMST",160,0)
 .. S ^TMP("PXRMXMZ",$J,8,0)="Data source = "_SOURCE
"RTN","PXRMMST",161,0)
 .. S ^TMP("PXRMXMZ",$J,9,0)="This corresponds to the following:"
"RTN","PXRMMST",162,0)
 .. D DEM^VADPT
"RTN","PXRMMST",163,0)
 .. S ^TMP("PXRMXMZ",$J,10,0)="Patient = "_VADM(1)
"RTN","PXRMMST",164,0)
 .. S ^TMP("PXRMXMZ",$J,11,0)="SSN = "_$P(VADM(2),U,2)
"RTN","PXRMMST",165,0)
 .. S ^TMP("PXRMXMZ",$J,12,0)="MST Status = "_$$EXTERNAL^DILFD(29.11,3,"",STCODE)
"RTN","PXRMMST",166,0)
 .. S ^TMP("PXRMXMZ",$J,13,0)="Date = "_$$FMTE^XLFDT(DATE,"5Z")
"RTN","PXRMMST",167,0)
 .. S TEMP=$S(PROV="":"Unknown",1:TEMP=$$GET1^DIQ(200,PROV,.01,"","",""))
"RTN","PXRMMST",168,0)
 .. I TEMP="" S TEMP="Unknown"
"RTN","PXRMMST",169,0)
 .. S ^TMP("PXRMXMZ",$J,14,0)="Provider = "_TEMP
"RTN","PXRMMST",170,0)
 .. S GBL=$P($P(SOURCE,";",2),"(",1)
"RTN","PXRMMST",171,0)
 .. S TEMP=GBL_"(0)"
"RTN","PXRMMST",172,0)
 .. S FN=+$P(@TEMP,U,2)
"RTN","PXRMMST",173,0)
 .. S TEMP=GBL_"("_$P(SOURCE,";",1)_",0)"
"RTN","PXRMMST",174,0)
 .. S TEMP=$G(@TEMP)
"RTN","PXRMMST",175,0)
 .. S IEN=$P(TEMP,U,1)
"RTN","PXRMMST",176,0)
 .. D FIELD^DID(FN,.01,"N","POINTER","TARGET")
"RTN","PXRMMST",177,0)
 .. S GBL="^"_$P(TARGET("POINTER"),"(",1)
"RTN","PXRMMST",178,0)
 .. S TEMP=GBL_"(0)"
"RTN","PXRMMST",179,0)
 .. S FN=$P(@TEMP,U,1)
"RTN","PXRMMST",180,0)
 .. S TEMP=GBL_"("_IEN_",0)"
"RTN","PXRMMST",181,0)
 .. S NAME=$P(@TEMP,U,1)
"RTN","PXRMMST",182,0)
 .. S ^TMP("PXRMXMZ",$J,14,0)="Data type = "_FN
"RTN","PXRMMST",183,0)
 .. S ^TMP("PXRMXMZ",$J,15,0)="Name = "_NAME
"RTN","PXRMMST",184,0)
 .. D SEND^PXRMMSG(XMSUB)
"RTN","PXRMMST",185,0)
 Q UPDSTAT
"RTN","PXRMMST",186,0)
 ;
"RTN","PXRMMST",187,0)
 ;====================================================
"RTN","PXRMMST",188,0)
UPDPAT(DFN,VISIT,VFL) ;Update the MST history file for a single patient
"RTN","PXRMMST",189,0)
 ;using term mappings. Called from DATACHG^PXRMPINF which is invoked
"RTN","PXRMMST",190,0)
 ;by the protocol PXK VISIT DATA EVENT.
"RTN","PXRMMST",191,0)
 N AFTER,BEFORE,DGBL,SP,STCODE,SIEN,SOURCE
"RTN","PXRMMST",192,0)
 N TEMP,TERM,TERMIEN,VF
"RTN","PXRMMST",193,0)
 ;Search all the MST terms to build patient lists.
"RTN","PXRMMST",194,0)
 F TERM="VA-MST DECLINES REPORT","VA-MST NEGATIVE REPORT","VA-MST POSITIVE REPORT" D
"RTN","PXRMMST",195,0)
 . S TERMIEN=$O(^PXRMD(811.5,"B",TERM,""))
"RTN","PXRMMST",196,0)
 . S VF=""
"RTN","PXRMMST",197,0)
 . F  S VF=$O(VFL(VF)) Q:VF=""  D
"RTN","PXRMMST",198,0)
 .. I VFL(VF)=U Q
"RTN","PXRMMST",199,0)
 .. S DGBL=$P(VFL(VF),U,1)
"RTN","PXRMMST",200,0)
 .. I '$D(^PXRMD(811.5,TERMIEN,20,"E",DGBL)) Q
"RTN","PXRMMST",201,0)
 .. S SIEN=""
"RTN","PXRMMST",202,0)
 .. F  S SIEN=$O(^TMP("PXKCO",$J,VISIT,VF,SIEN)) Q:SIEN=""  D
"RTN","PXRMMST",203,0)
 ... S AFTER=$G(^TMP("PXKCO",$J,VISIT,VF,SIEN,0,"AFTER"))
"RTN","PXRMMST",204,0)
 ... S BEFORE=$G(^TMP("PXKCO",$J,VISIT,VF,SIEN,0,"BEFORE"))
"RTN","PXRMMST",205,0)
 ... I AFTER=BEFORE Q
"RTN","PXRMMST",206,0)
 ... S SP=$P(AFTER,U,1)
"RTN","PXRMMST",207,0)
 ... I SP="" Q
"RTN","PXRMMST",208,0)
 ... I '$D(^PXRMD(811.5,TERMIEN,20,"E",DGBL,SP)) Q
"RTN","PXRMMST",209,0)
 ... S SOURCE=SIEN_";^"_$P(VFL(VF),U,2)
"RTN","PXRMMST",210,0)
 ...;The status code depends on the term name.
"RTN","PXRMMST",211,0)
 ... S STCODE=$$STCODE(TERM)
"RTN","PXRMMST",212,0)
 ... S TEMP=$$UPDATE(DFN,VISIT,SOURCE,STCODE,"PROTOCOL")
"RTN","PXRMMST",213,0)
 Q
"RTN","PXRMMST",214,0)
 ;
"RTN","PXRMMST",215,0)
 ;====================================================
"RTN","PXRMMST",216,0)
UPDSTAT(NUMUPD,START) ;Update the MST history file using term mappings.
"RTN","PXRMMST",217,0)
 N DAS,DATA,DFN,FILENUM,FINDPA,INDEX,ITEM,NOCC,STCODE,SOURCE
"RTN","PXRMMST",218,0)
 N TEMP,TERM,TERMARR,TERMIEN,UPDSTAT,VDATE,VISIT
"RTN","PXRMMST",219,0)
 S FINDPA=""
"RTN","PXRMMST",220,0)
 ;Set the start time for the synchronization.
"RTN","PXRMMST",221,0)
 S START=$$NOW^XLFDT
"RTN","PXRMMST",222,0)
 S INDEX="PXRM_MST_LIST"
"RTN","PXRMMST",223,0)
 S NUMUPD=0
"RTN","PXRMMST",224,0)
 ;Search all the MST terms to build patient lists. Only V file data
"RTN","PXRMMST",225,0)
 ;is used for the update.
"RTN","PXRMMST",226,0)
 F TERM="VA-MST DECLINES REPORT","VA-MST NEGATIVE REPORT","VA-MST POSITIVE REPORT" D
"RTN","PXRMMST",227,0)
 . K TERMARR,^TMP($J,INDEX)
"RTN","PXRMMST",228,0)
 .;The status code depends on the term name.
"RTN","PXRMMST",229,0)
 . S STCODE=$$STCODE(TERM)
"RTN","PXRMMST",230,0)
 . S TERMIEN=$O(^PXRMD(811.5,"B",TERM,""))
"RTN","PXRMMST",231,0)
 . I TERMIEN="" Q
"RTN","PXRMMST",232,0)
 . D TERM^PXRMLDR(TERMIEN,.TERMARR)
"RTN","PXRMMST",233,0)
 . D EVALPL^PXRMTERM(.FINDPA,.TERMARR,INDEX)
"RTN","PXRMMST",234,0)
 . S DFN=0
"RTN","PXRMMST",235,0)
 . F  S DFN=+$O(^TMP($J,INDEX,1,DFN)) Q:DFN=0  D
"RTN","PXRMMST",236,0)
 .. S ITEM=""
"RTN","PXRMMST",237,0)
 .. F  S ITEM=$O(^TMP($J,INDEX,1,DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMMST",238,0)
 ... S NOCC=0
"RTN","PXRMMST",239,0)
 ... F  S NOCC=$O(^TMP($J,INDEX,1,DFN,ITEM,NOCC)) Q:NOCC=""  D
"RTN","PXRMMST",240,0)
 .... S FILENUM=""
"RTN","PXRMMST",241,0)
 .... F  S FILENUM=$O(^TMP($J,INDEX,1,DFN,ITEM,NOCC,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMMST",242,0)
 ..... S TEMP=^TMP($J,INDEX,1,DFN,ITEM,NOCC,FILENUM)
"RTN","PXRMMST",243,0)
 ..... S DAS=$P(TEMP,U,1)
"RTN","PXRMMST",244,0)
 ..... K DATA
"RTN","PXRMMST",245,0)
 ..... D GETDATA^PXRMDATA(FILENUM,DAS,.DATA)
"RTN","PXRMMST",246,0)
 ..... S VISIT=$G(DATA("VISIT"))
"RTN","PXRMMST",247,0)
 ..... I VISIT="" Q
"RTN","PXRMMST",248,0)
 ..... S SOURCE=DAS_";"_^PXRMINDX(FILENUM,"GLOBAL NAME")
"RTN","PXRMMST",249,0)
 ..... S UPDSTAT=$$UPDATE(DFN,VISIT,SOURCE,STCODE,"SYNCH")
"RTN","PXRMMST",250,0)
 ..... I UPDSTAT'=-1 S NUMUPD=NUMUPD+1
"RTN","PXRMMST",251,0)
 K ^TMP($J,INDEX)
"RTN","PXRMMST",252,0)
 Q
"RTN","PXRMMST",253,0)
 ;
"RTN","PXRMOBJ")
0^58^B23584122
"RTN","PXRMOBJ",1,0)
PXRMOBJ ;SLC/JVS - PXRM OBJECT AND GUI EVAL FOR GEC ;7/14/05  07:34
"RTN","PXRMOBJ",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMOBJ",3,0)
 ;
"RTN","PXRMOBJ",4,0)
 Q
"RTN","PXRMOBJ",5,0)
 ;
"RTN","PXRMOBJ",6,0)
STAT(DFN) ;Status Object
"RTN","PXRMOBJ",7,0)
 N STATUS,CNT,I,MISSING,CMARRAY,K
"RTN","PXRMOBJ",8,0)
 S CNT=0
"RTN","PXRMOBJ",9,0)
 D STATUS^PXRMOBJX(DFN,.STATUS,.MISSING)
"RTN","PXRMOBJ",10,0)
 K ^TMP("PXRMOBJSTATUS",$J)
"RTN","PXRMOBJ",11,0)
 S CMARRAY="^TMP(""PXRMOBJSTATUS"",$J)"
"RTN","PXRMOBJ",12,0)
 S I=0 F  S I=$O(STATUS(I)) Q:I=""  D
"RTN","PXRMOBJ",13,0)
 .S K=0 F  S K=$O(STATUS(I,K)) Q:K=""  D
"RTN","PXRMOBJ",14,0)
 ..S ^TMP("PXRMOBJSTATUS",$J,$$UP,0)=STATUS(I,K)
"RTN","PXRMOBJ",15,0)
 S ^TMP("PXRMOBJSTATUS",$J,$$UP,0)=""
"RTN","PXRMOBJ",16,0)
 Q "~@"_$NA(@CMARRAY)
"RTN","PXRMOBJ",17,0)
 ;
"RTN","PXRMOBJ",18,0)
UP() ;
"RTN","PXRMOBJ",19,0)
 S CNT=CNT+1
"RTN","PXRMOBJ",20,0)
 Q CNT
"RTN","PXRMOBJ",21,0)
 ;
"RTN","PXRMOBJ",22,0)
DEM(DFN) ;
"RTN","PXRMOBJ",23,0)
 Q:DFN=""
"RTN","PXRMOBJ",24,0)
 N X,ARY
"RTN","PXRMOBJ",25,0)
 N ZIP,DATA
"RTN","PXRMOBJ",26,0)
 D GET
"RTN","PXRMOBJ",27,0)
 K ^TMP("PXRMOBJ",$J)
"RTN","PXRMOBJ",28,0)
 S CMARRAY="^TMP(""PXRMOBJ"",$J)"
"RTN","PXRMOBJ",29,0)
 S ^TMP("PXRMOBJ",$J,1,0)=""
"RTN","PXRMOBJ",30,0)
 S ^TMP("PXRMOBJ",$J,2,0)="                 Name: "_DATA("NAME")_"  "_"Gender: "_DATA("SEX")
"RTN","PXRMOBJ",31,0)
 S ^TMP("PXRMOBJ",$J,3,0)="                  DOB: "_DATA("DOB")_"  "_"Age:"_DATA("AGE")
"RTN","PXRMOBJ",32,0)
 S ^TMP("PXRMOBJ",$J,4,0)="       Marital Status: "_DATA("MARSTAT")
"RTN","PXRMOBJ",33,0)
 S ^TMP("PXRMOBJ",$J,5,0)="              Address: "_DATA("STRAD1")
"RTN","PXRMOBJ",34,0)
 I DATA("STRAD2")'="" S ^TMP("PXRMOBJ",$J,6,0)="                       "_DATA("STRAD2")
"RTN","PXRMOBJ",35,0)
 I DATA("STRAD3")'="" S ^TMP("PXRMOBJ",$J,7,0)="                       "_DATA("STRAD3")
"RTN","PXRMOBJ",36,0)
 S ^TMP("PXRMOBJ",$J,8,0)="                       "_DATA("CITY")_" "_DATA("STATE")_" "_ZIP
"RTN","PXRMOBJ",37,0)
 S ^TMP("PXRMOBJ",$J,9,0)="              H Phone: "_DATA("PHONER")
"RTN","PXRMOBJ",38,0)
 S ^TMP("PXRMOBJ",$J,10,0)="              W Phone: "_DATA("PHONEW")
"RTN","PXRMOBJ",39,0)
 S ^TMP("PXRMOBJ",$J,11,0)="  Service Connected %: "_DATA("SERCON")
"RTN","PXRMOBJ",40,0)
 S ^TMP("PXRMOBJ",$J,12,0)="    LTC Co-Pay Status: "_DATA("STATUS")
"RTN","PXRMOBJ",41,0)
 I DATA("STATUS DATE")'["<No Test>" D
"RTN","PXRMOBJ",42,0)
 .S ^TMP("PXRMOBJ",$J,13,0)="      LTC Date Tested: "_DATA("STATUS DATE")
"RTN","PXRMOBJ",43,0)
 I $D(DATA("WHY")) D
"RTN","PXRMOBJ",44,0)
 .S ^TMP("PXRMOBJ",$J,13,0)="               Reason: "_DATA("WHY")
"RTN","PXRMOBJ",45,0)
 S ^TMP("PXRMOBJ",$J,14,0)=""
"RTN","PXRMOBJ",46,0)
 ; NODE MUST END WITH ZERO SUBSCRIPT
"RTN","PXRMOBJ",47,0)
 ; @CMARRAY@(CNT,0)=TEXT
"RTN","PXRMOBJ",48,0)
 D EXIT
"RTN","PXRMOBJ",49,0)
 Q "~@"_$NA(@CMARRAY)
"RTN","PXRMOBJ",50,0)
 ;
"RTN","PXRMOBJ",51,0)
GET ; Get data from file
"RTN","PXRMOBJ",52,0)
 N FIELDS,STATUS,DFN2,STAT
"RTN","PXRMOBJ",53,0)
 ;DBIA #11
"RTN","PXRMOBJ",54,0)
 ;S DFN=75
"RTN","PXRMOBJ",55,0)
 S FIELDS=".01;.02;.03;.033;.05;.111;.1112;.112;.113;.114;.115;.116;.131;.132;.302;.3621;.3622;.3624;.3626;.3627;.3628;.3629;.36295"
"RTN","PXRMOBJ",56,0)
 D GETS^DIQ(2,DFN,FIELDS,"ER","^TMP(""PXRMGECOBJ"",$J)")
"RTN","PXRMOBJ",57,0)
 ;
"RTN","PXRMOBJ",58,0)
 S ARY="^TMP(""PXRMGECOBJ"",$J,2)",DFN2=DFN_","
"RTN","PXRMOBJ",59,0)
 ;
"RTN","PXRMOBJ",60,0)
 S DATA("AGE")=@ARY@(DFN2,"AGE","E")
"RTN","PXRMOBJ",61,0)
 S DATA("AMOUNTAA")=@ARY@(DFN2,"AMOUNT OF AID & ATTENDANCE","E")
"RTN","PXRMOBJ",62,0)
 S DATA("AMOUNTGI")=@ARY@(DFN2,"AMOUNT OF GI INSURANCE","E")
"RTN","PXRMOBJ",63,0)
 S DATA("AMOUNTHO")=@ARY@(DFN2,"AMOUNT OF HOUSEBOUND","E")
"RTN","PXRMOBJ",64,0)
 S DATA("AMOUNTOT")=@ARY@(DFN2,"AMOUNT OF OTHER INCOME","E")
"RTN","PXRMOBJ",65,0)
 S DATA("AMOUNTOR")=@ARY@(DFN2,"AMOUNT OF OTHER RETIREMENT","E")
"RTN","PXRMOBJ",66,0)
 S DATA("AMOUNTSS")=@ARY@(DFN2,"AMOUNT OF SSI","E")
"RTN","PXRMOBJ",67,0)
 S DATA("AMOUNTVA")=@ARY@(DFN2,"AMOUNT OF VA PENSION","E")
"RTN","PXRMOBJ",68,0)
 S DATA("CITY")=@ARY@(DFN2,"CITY","E")
"RTN","PXRMOBJ",69,0)
 S DATA("DOB")=@ARY@(DFN2,"DATE OF BIRTH","E")
"RTN","PXRMOBJ",70,0)
 S DATA("MARSTAT")=@ARY@(DFN2,"MARITAL STATUS","E")
"RTN","PXRMOBJ",71,0)
 S DATA("NAME")=@ARY@(DFN2,"NAME","E")
"RTN","PXRMOBJ",72,0)
 S DATA("PHONER")=@ARY@(DFN2,"PHONE NUMBER [RESIDENCE]","E")
"RTN","PXRMOBJ",73,0)
 S DATA("PHONEW")=@ARY@(DFN2,"PHONE NUMBER [WORK]","E")
"RTN","PXRMOBJ",74,0)
 S DATA("SERCON")=@ARY@(DFN2,"SERVICE CONNECTED PERCENTAGE","E")
"RTN","PXRMOBJ",75,0)
 S DATA("SEX")=@ARY@(DFN2,"SEX","E")
"RTN","PXRMOBJ",76,0)
 S DATA("STATE")=@ARY@(DFN2,"STATE","E")
"RTN","PXRMOBJ",77,0)
 S DATA("STRAD1")=@ARY@(DFN2,"STREET ADDRESS [LINE 1]","E")
"RTN","PXRMOBJ",78,0)
 S DATA("STRAD2")=@ARY@(DFN2,"STREET ADDRESS [LINE 2]","E")
"RTN","PXRMOBJ",79,0)
 S DATA("STRAD3")=@ARY@(DFN2,"STREET ADDRESS [LINE 3]","E")
"RTN","PXRMOBJ",80,0)
 S DATA("TOTAL")=@ARY@(DFN2,"TOTAL ANNUAL VA CHECK AMOUNT","E")
"RTN","PXRMOBJ",81,0)
 S DATA("ZIP")=@ARY@(DFN2,"ZIP CODE","E")
"RTN","PXRMOBJ",82,0)
 S DATA("ZIP4")=@ARY@(DFN2,"ZIP+4","E")
"RTN","PXRMOBJ",83,0)
 S ZIP="" D
"RTN","PXRMOBJ",84,0)
 .I DATA("ZIP4")'="" S ZIP=DATA("ZIP4") Q
"RTN","PXRMOBJ",85,0)
 .I DATA("ZIP")'="" S ZIP=DATA("ZIP")
"RTN","PXRMOBJ",86,0)
 S DATA("SUM")=DATA("AMOUNTAA")+DATA("AMOUNTGI")+DATA("AMOUNTHO")+DATA("AMOUNTOT")+DATA("AMOUNTSS")+DATA("AMOUNTVA")
"RTN","PXRMOBJ",87,0)
 I DATA("SUM")=0 S DATA("SUM")=""
"RTN","PXRMOBJ",88,0)
 ;get LTC CO-PAY TEST status
"RTN","PXRMOBJ",89,0)
 S (DATA("STATUS"),DATA("STATUS DATE"))="<No Test>"
"RTN","PXRMOBJ",90,0)
 S STAT=$$EXMPT(DFN)
"RTN","PXRMOBJ",91,0)
 I STAT=0 S DATA("STATUS")="NON EXEMPT"
"RTN","PXRMOBJ",92,0)
 I STAT>0 S DATA("STATUS")="EXEMPT"
"RTN","PXRMOBJ",93,0)
 I STAT=1 S DATA("WHY")="Veteran has compensable SC disability."
"RTN","PXRMOBJ",94,0)
 I STAT=2 S DATA("WHY")="Veteran is single NSC pensioner."
"RTN","PXRMOBJ",95,0)
 ;DBIA #701
"RTN","PXRMOBJ",96,0)
 S STATUS=$$LST^EASECU(DFN,"",3) D
"RTN","PXRMOBJ",97,0)
 .I STATUS'="" D
"RTN","PXRMOBJ",98,0)
 ..S DATA("STATUS")=$P(STATUS,"^",3)
"RTN","PXRMOBJ",99,0)
 ..S DATA("STATUS DATE")=$$FMTE^XLFDT($P(STATUS,"^",2))
"RTN","PXRMOBJ",100,0)
 Q
"RTN","PXRMOBJ",101,0)
 ;
"RTN","PXRMOBJ",102,0)
EXMPT(DFN) ;Check if veteran is exempt from LTC co-payments:
"RTN","PXRMOBJ",103,0)
 ; If the veteran has a compensable SC disability, OR
"RTN","PXRMOBJ",104,0)
 ; If the veteran is a single, NSC pensioner not in receipt of A&A
"RTN","PXRMOBJ",105,0)
 ; and HB benefits
"RTN","PXRMOBJ",106,0)
 ;   Input   -- DFN  Patient IEN
"RTN","PXRMOBJ",107,0)
 ;   Output  -- 0 = veteran not exempt
"RTN","PXRMOBJ",108,0)
 ;              1 = veteran has compensable SC disability
"RTN","PXRMOBJ",109,0)
 ;              2 = veteran is single NSC pensioner (no A&A, HB)
"RTN","PXRMOBJ",110,0)
 N X,Y,ELG
"RTN","PXRMOBJ",111,0)
 S Y=0
"RTN","PXRMOBJ",112,0)
 ; if service connected percentage is greater than 10% OR service
"RTN","PXRMOBJ",113,0)
 ; connected percentage is less than 10% and annual VA
"RTN","PXRMOBJ",114,0)
 ; check amount is greater than 0, then exempt type 1
"RTN","PXRMOBJ",115,0)
 S X=$G(^DPT(DFN,.36)),ELG=$P($G(^DIC(8,+X,0)),U,9)
"RTN","PXRMOBJ",116,0)
 I ELG=1!($P($G(^DPT(DFN,.3)),U,2)'<10) S Y=1 G EXMPTQ
"RTN","PXRMOBJ",117,0)
 I ELG=3,$P($G(^DPT(DFN,.3)),U,2)<10,$P($G(^DPT(DFN,.362)),U,20)>0 S Y=1
"RTN","PXRMOBJ",118,0)
 G EXMPTQ
"RTN","PXRMOBJ",119,0)
 ; if Service Connected quit
"RTN","PXRMOBJ",120,0)
 I $P($G(^DPT(DFN,.3)),U)="Y" G EXMPTQ
"RTN","PXRMOBJ",121,0)
 ; if Marital Status = 'Married' or 'Separated' quit
"RTN","PXRMOBJ",122,0)
 S X=$P($G(^DIC(11,+$P($G(^DPT(DFN,0)),U,5),0)),U,3)
"RTN","PXRMOBJ",123,0)
 I "^M^S^"[("^"_X_"^") G EXMPTQ
"RTN","PXRMOBJ",124,0)
 ; if not receiving VA pension quit
"RTN","PXRMOBJ",125,0)
 S X=$G(^DPT(DFN,.362)) I $P(X,U,14)'="Y" G EXMPTQ
"RTN","PXRMOBJ",126,0)
 ; if receiving A&A or HP benefits quit
"RTN","PXRMOBJ",127,0)
 I $P(X,U,12)="Y"!($P(X,U,13)="Y") G EXMPTQ
"RTN","PXRMOBJ",128,0)
 S Y=2
"RTN","PXRMOBJ",129,0)
EXMPTQ Q Y
"RTN","PXRMOBJ",130,0)
        ;
"RTN","PXRMOBJ",131,0)
EXIT ;
"RTN","PXRMOBJ",132,0)
 K ^TMP("PXRMGECOBJ",$J)
"RTN","PXRMORDR")
0^170^B9484065
"RTN","PXRMORDR",1,0)
PXRMORDR ; SLC/PKR - Handle orderable item findings. ;07/14/2006
"RTN","PXRMORDR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMORDR",3,0)
 ;
"RTN","PXRMORDR",4,0)
 ;=========================================================
"RTN","PXRMORDR",5,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate orderable item findings.
"RTN","PXRMORDR",6,0)
 D EVALFI^PXRMINDX(DFN,.DEFARR,ENODE,.FIEVAL)
"RTN","PXRMORDR",7,0)
 Q
"RTN","PXRMORDR",8,0)
 ;
"RTN","PXRMORDR",9,0)
 ;=========================================================
"RTN","PXRMORDR",10,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Evaluate orderable item term findings
"RTN","PXRMORDR",11,0)
 ;for patient lists.
"RTN","PXRMORDR",12,0)
 D EVALPL^PXRMINDL(.FINDPA,ENODE,.TERMARR,PLIST)
"RTN","PXRMORDR",13,0)
 Q
"RTN","PXRMORDR",14,0)
 ;
"RTN","PXRMORDR",15,0)
 ;=========================================================
"RTN","PXRMORDR",16,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate orderable item terms.
"RTN","PXRMORDR",17,0)
 D EVALTERM^PXRMINDX(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL)
"RTN","PXRMORDR",18,0)
 Q
"RTN","PXRMORDR",19,0)
 ;
"RTN","PXRMORDR",20,0)
 ;=========================================================
"RTN","PXRMORDR",21,0)
GETDATA(DAS,FIEVT) ;Return data, for a specified order file entry.
"RTN","PXRMORDR",22,0)
 N DA,DATA
"RTN","PXRMORDR",23,0)
 S DA=$P(DAS,";",1)
"RTN","PXRMORDR",24,0)
 ;DBIA #4498
"RTN","PXRMORDR",25,0)
 D GETDATA^ORPXRM(DA,.DATA)
"RTN","PXRMORDR",26,0)
 S (FIEVT("STATUS"),FIEVT("VALUE"))=$P(DATA("ORSTS"),U,2)
"RTN","PXRMORDR",27,0)
 S FIEVT("ORDER")=DATA("ORORDER")
"RTN","PXRMORDR",28,0)
 S FIEVT("RELEASE DATE")=DATA("ORREL")
"RTN","PXRMORDR",29,0)
 S FIEVT("START DATE")=DATA("ORSTRT")
"RTN","PXRMORDR",30,0)
 S FIEVT("STOP DATE")=DATA("ORSTOP")
"RTN","PXRMORDR",31,0)
 S FIEVT("DURATION")=$$DURATION^PXRMDATE(FIEVT("START DATE"),FIEVT("STOP DATE"))
"RTN","PXRMORDR",32,0)
 Q
"RTN","PXRMORDR",33,0)
 ;
"RTN","PXRMORDR",34,0)
 ;=========================================================
"RTN","PXRMORDR",35,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMORDR",36,0)
 N DATE,IND,JND,NAME,NOUT,PNAME,TEMP,TEXTOUT
"RTN","PXRMORDR",37,0)
 S PNAME=$P(IFIEVAL("ORDER"),U,2)
"RTN","PXRMORDR",38,0)
 S NAME="Orderable Item: "_PNAME_" = "
"RTN","PXRMORDR",39,0)
 S IND=0
"RTN","PXRMORDR",40,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMORDR",41,0)
 . S TEMP=NAME_$$LOW^XLFSTR(IFIEVAL(IND,"STATUS"))
"RTN","PXRMORDR",42,0)
 . S DATE=$G(IFIEVAL(IND,"START DATE"))
"RTN","PXRMORDR",43,0)
 . S TEMP=TEMP_" ("_$$EDATE^PXRMDATE(DATE)
"RTN","PXRMORDR",44,0)
 . S DATE=$G(IFIEVAL(IND,"STOP DATE"))
"RTN","PXRMORDR",45,0)
 . I DATE'="" S TEMP=TEMP_" - "_$$EDATE^PXRMDATE(DATE)
"RTN","PXRMORDR",46,0)
 . S TEMP=TEMP_")"
"RTN","PXRMORDR",47,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMORDR",48,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMORDR",49,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMORDR",50,0)
 Q
"RTN","PXRMORDR",51,0)
 ;
"RTN","PXRMORDR",52,0)
 ;=========================================================
"RTN","PXRMORDR",53,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMORDR",54,0)
 ;maintenance output.
"RTN","PXRMORDR",55,0)
 N DATE,IND,JND,NOUT,PNAME,TEMP,TEXTOUT
"RTN","PXRMORDR",56,0)
 S PNAME=$P(IFIEVAL("ORDER"),U,2)
"RTN","PXRMORDR",57,0)
 S NLINES=NLINES+1
"RTN","PXRMORDR",58,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Orderable Item: "_PNAME
"RTN","PXRMORDR",59,0)
 S IND=0
"RTN","PXRMORDR",60,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMORDR",61,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMORDR",62,0)
 . S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMORDR",63,0)
 . S TEMP=TEMP_" Status: "_$$LOW^XLFSTR(IFIEVAL(IND,"STATUS"))
"RTN","PXRMORDR",64,0)
 . S DATE=$G(IFIEVAL(IND,"START DATE"))
"RTN","PXRMORDR",65,0)
 . I DATE="" S DATE="missing"
"RTN","PXRMORDR",66,0)
 . S TEMP=TEMP_", Start date: "_$$EDATE^PXRMDATE(DATE)
"RTN","PXRMORDR",67,0)
 . S DATE=$G(IFIEVAL(IND,"STOP DATE"))
"RTN","PXRMORDR",68,0)
 . I DATE="" S DATE="missing"
"RTN","PXRMORDR",69,0)
 . S TEMP=TEMP_", Stop date: "_$$EDATE^PXRMDATE(DATE)
"RTN","PXRMORDR",70,0)
 . I $D(IFIEVAL(IND,"DURATION")) S TEMP=TEMP_"  Duration: "_IFIEVAL(IND,"DURATION")_" D"
"RTN","PXRMORDR",71,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMORDR",72,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMORDR",73,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMORDR",74,0)
 Q
"RTN","PXRMORDR",75,0)
 ;
"RTN","PXRMOUTC")
0^107^B29005432
"RTN","PXRMOUTC",1,0)
PXRMOUTC ; SLC/PKR - Clinical Maintenance output. ;10/07/2005
"RTN","PXRMOUTC",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMOUTC",3,0)
 ;================================================
"RTN","PXRMOUTC",4,0)
CM(DEFARR,PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,FIEVAL) ;Prepare the 
"RTN","PXRMOUTC",5,0)
 ;clinical maintenance output.
"RTN","PXRMOUTC",6,0)
 N IND,FIDATA,FINDING,FLIST,FTYPE
"RTN","PXRMOUTC",7,0)
 N HDR,NHDR,IFIEVAL,LIST,NFLINES,NTXT,NUM
"RTN","PXRMOUTC",8,0)
 N TEMP,TEXT
"RTN","PXRMOUTC",9,0)
 S NTXT=0
"RTN","PXRMOUTC",10,0)
 ;Check for a dead patient
"RTN","PXRMOUTC",11,0)
 I +$G(PXRMPDEM("DOD"))>0 D
"RTN","PXRMOUTC",12,0)
 . S TEMP=$$FMTE^XLFDT(PXRMPDEM("DOD"),"5DZ")
"RTN","PXRMOUTC",13,0)
 . S TEXT="Patient is deceased, date of death: "_TEMP
"RTN","PXRMOUTC",14,0)
 . D ADDTXT^PXRMOUTU(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTC",15,0)
 ;Display the frequency information only if there is resolution logic.
"RTN","PXRMOUTC",16,0)
 I RESLOGIC'="" D FREQ(.DEFARR,.NTXT,.TEXT)
"RTN","PXRMOUTC",17,0)
 ;Output the AGE match/no match text.
"RTN","PXRMOUTC",18,0)
 D AGE^PXRMFNFT(PXRMPDEM("DFN"),.DEFARR,.FIEVAL,.NTXT)
"RTN","PXRMOUTC",19,0)
 ;Process the findings in the order: patient cohort, resolution,
"RTN","PXRMOUTC",20,0)
 ;age, and informational.
"RTN","PXRMOUTC",21,0)
 M FIDATA=FIEVAL
"RTN","PXRMOUTC",22,0)
 F FTYPE="PCL","RES","AGE","INFO" D
"RTN","PXRMOUTC",23,0)
 . S LIST=$S(FTYPE="PCL":DEFARR(32),FTYPE="RES":DEFARR(36),FTYPE="AGE":DEFARR(40),FTYPE="INFO":DEFARR(42))
"RTN","PXRMOUTC",24,0)
 .;Output the general logic text.
"RTN","PXRMOUTC",25,0)
 . I FTYPE="PCL" D LOGIC^PXRMFNFT(PXRMPDEM("DFN"),PCLOGIC,FTYPE,"D",.DEFARR,.NTXT)
"RTN","PXRMOUTC",26,0)
 . I FTYPE="RES",$P(PCLOGIC,U,1) D LOGIC^PXRMFNFT(PXRMPDEM("DFN"),RESLOGIC,FTYPE,"D",.DEFARR,.NTXT)
"RTN","PXRMOUTC",27,0)
 .;Process the findings for each type.
"RTN","PXRMOUTC",28,0)
 . K TEXT
"RTN","PXRMOUTC",29,0)
 . S (NHDR,NFLINES)=0
"RTN","PXRMOUTC",30,0)
 . S NUM=+$P(LIST,U,1)
"RTN","PXRMOUTC",31,0)
 . S FLIST=$P(LIST,U,2)
"RTN","PXRMOUTC",32,0)
 . F IND=1:1:NUM D
"RTN","PXRMOUTC",33,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMOUTC",34,0)
 ..;No output for age or sex findings.
"RTN","PXRMOUTC",35,0)
 .. I (FINDING="AGE")!(FINDING="SEX") Q
"RTN","PXRMOUTC",36,0)
 ..;Make sure each finding is processed only once.
"RTN","PXRMOUTC",37,0)
 .. I '$D(FIDATA(FINDING)) Q
"RTN","PXRMOUTC",38,0)
 .. K IFIEVAL
"RTN","PXRMOUTC",39,0)
 .. I FIEVAL(FINDING) M IFIEVAL=FIEVAL(FINDING)
"RTN","PXRMOUTC",40,0)
 .. E  S IFIEVAL=0
"RTN","PXRMOUTC",41,0)
 ..;If the finding is false all we need to do is process the not found
"RTN","PXRMOUTC",42,0)
 ..;text. If it is true we also need to output the finding information.
"RTN","PXRMOUTC",43,0)
 .. I IFIEVAL D FOUT(1,.IFIEVAL,.NFLINES,.TEXT)
"RTN","PXRMOUTC",44,0)
 ..;Output the found/not found text for the finding.
"RTN","PXRMOUTC",45,0)
FNF .. D FINDING^PXRMFNFT(3,PXRMPDEM("DFN"),FINDING,.IFIEVAL,.NFLINES,.TEXT)
"RTN","PXRMOUTC",46,0)
 ..;Make sure each finding is processed only once.
"RTN","PXRMOUTC",47,0)
 .. K FIDATA(FINDING)
"RTN","PXRMOUTC",48,0)
 .;
"RTN","PXRMOUTC",49,0)
 .;If there was any text for this finding type create a header.
"RTN","PXRMOUTC",50,0)
 . D HEADER(FTYPE,NFLINES,RESDATE,.NHDR,.HDR)
"RTN","PXRMOUTC",51,0)
 .;Output the header and the finding text.
"RTN","PXRMOUTC",52,0)
 . D ADDTXTA^PXRMOUTU(1,PXRMRM,.NTXT,NHDR,.HDR)
"RTN","PXRMOUTC",53,0)
 . D COPYTXT^PXRMOUTU(.NTXT,NFLINES,.TEXT)
"RTN","PXRMOUTC",54,0)
 ;Output INFO nodes
"RTN","PXRMOUTC",55,0)
 D INFO^PXRMOUTU(PXRMITEM,.NTXT)
"RTN","PXRMOUTC",56,0)
 Q
"RTN","PXRMOUTC",57,0)
 ;
"RTN","PXRMOUTC",58,0)
 ;================================================
"RTN","PXRMOUTC",59,0)
FOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Do output for individual findings 
"RTN","PXRMOUTC",60,0)
 ;in the FINDING array.
"RTN","PXRMOUTC",61,0)
 I $D(IFIEVAL("TERM")) D OUTPUT^PXRMTERM(1,.IFIEVAL,.NFLINES,.TEXT) Q
"RTN","PXRMOUTC",62,0)
 N FTYPE
"RTN","PXRMOUTC",63,0)
 S FTYPE=$P(IFIEVAL("FINDING"),U,1)
"RTN","PXRMOUTC",64,0)
 S FTYPE=$P(FTYPE,";",2)
"RTN","PXRMOUTC",65,0)
 I FTYPE="AUTTEDT(" D OUTPUT^PXRMEDU(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",66,0)
 I FTYPE="AUTTEXAM(" D OUTPUT^PXRMEXAM(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",67,0)
 I FTYPE="AUTTHF(" D OUTPUT^PXRMHF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",68,0)
 I FTYPE="AUTTIMM(" D OUTPUT^PXRMIMM(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",69,0)
 I FTYPE="AUTTSK(" D OUTPUT^PXRMSKIN(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",70,0)
 I FTYPE="GMRD(120.51," D OUTPUT^PXRMVITL(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",71,0)
 I FTYPE="LAB(60," D OUTPUT^PXRMLAB(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",72,0)
 I FTYPE="ORD(101.43," D OUTPUT^PXRMORDR(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",73,0)
 I FTYPE="PS(50.605," D OUTPUT^PXRMDRCL(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",74,0)
 I FTYPE="PSDRUG(" D OUTPUT^PXRMDRUG(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",75,0)
 I FTYPE="PSNDF(50.6," D OUTPUT^PXRMDGEN(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",76,0)
 I FTYPE="PS(55," D OUTPUT^PXRMDIN(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",77,0)
 I FTYPE="PS(55NVA," D OUTPUT^PXRMDNVA(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",78,0)
 I FTYPE="PSRX(" D OUTPUT^PXRMDOUT(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",79,0)
 I FTYPE="PXD(811.2," D OUTPUT^PXRMTAX(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",80,0)
 I FTYPE="PXRMD(802.4," D OUTPUT^PXRMFF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",81,0)
 I FTYPE="PXRMD(810.9," D OUTPUT^PXRMLOCF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",82,0)
 I FTYPE="PXRMD(811.4," D OUTPUT^PXRMCF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",83,0)
 I FTYPE="RAMIS(71," D OUTPUT^PXRMRAD(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",84,0)
 I FTYPE="YTT(601," D OUTPUT^PXRMMH(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",85,0)
 Q
"RTN","PXRMOUTC",86,0)
 ;
"RTN","PXRMOUTC",87,0)
 ;================================================
"RTN","PXRMOUTC",88,0)
FREQ(DEFARR,NTXT,TEXT) ;Display the frequency information.
"RTN","PXRMOUTC",89,0)
 N FREQ,TEMP
"RTN","PXRMOUTC",90,0)
 ;If there was a custom date due print out that information.
"RTN","PXRMOUTC",91,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"zCDUE")) D
"RTN","PXRMOUTC",92,0)
 . S TEMP=^TMP(PXRMPID,$J,PXRMITEM,"zCDUE")
"RTN","PXRMOUTC",93,0)
 . S TEXT=$$OUTPUT^PXRMCDUE(TEMP,.DEFARR)
"RTN","PXRMOUTC",94,0)
 . I DEFARR(31)["AGE" D
"RTN","PXRMOUTC",95,0)
 .. S TEMP=$G(^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG"))
"RTN","PXRMOUTC",96,0)
 .. I TEMP'="" S TEXT=TEXT_" Applicable"_$$FMTAGE^PXRMAGE($P(TEMP,U,2),$P(TEMP,U,3))_"."
"RTN","PXRMOUTC",97,0)
 . D ADDTXT^PXRMOUTU(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTC",98,0)
 E  D
"RTN","PXRMOUTC",99,0)
 . S TEMP=$G(^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG"))
"RTN","PXRMOUTC",100,0)
 . I TEMP'="" D
"RTN","PXRMOUTC",101,0)
 .. S FREQ=$P(TEMP,U,1)
"RTN","PXRMOUTC",102,0)
 .. S TEXT=$$FMTFREQ^PXRMAGE(FREQ)
"RTN","PXRMOUTC",103,0)
 .. I FREQ=-1 S TEXT=TEXT_" for this patient."
"RTN","PXRMOUTC",104,0)
 .. I DEFARR(31)["AGE",FREQ'=-1 S TEXT=TEXT_$$FMTAGE^PXRMAGE($P(TEMP,U,2),$P(TEMP,U,3))_"."
"RTN","PXRMOUTC",105,0)
 .. D ADDTXT^PXRMOUTU(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTC",106,0)
 Q
"RTN","PXRMOUTC",107,0)
 ;
"RTN","PXRMOUTC",108,0)
 ;================================================
"RTN","PXRMOUTC",109,0)
HEADER(FTYPE,NLINES,RESDATE,NHDR,HDR) ;Create a finding header.
"RTN","PXRMOUTC",110,0)
 I FTYPE="RES" D  Q
"RTN","PXRMOUTC",111,0)
 . I +RESDATE'=0 D  Q
"RTN","PXRMOUTC",112,0)
 .. S HDR(2)="Resolution: Last done "_$$EDATE^PXRMDATE(RESDATE)
"RTN","PXRMOUTC",113,0)
 .. S NHDR=2
"RTN","PXRMOUTC",114,0)
 .. S HDR(1)="\\"
"RTN","PXRMOUTC",115,0)
 . I '$D(HDR(2)),NLINES>0 D
"RTN","PXRMOUTC",116,0)
 .. S HDR(2)="Resolution:"
"RTN","PXRMOUTC",117,0)
 .. S NHDR=2
"RTN","PXRMOUTC",118,0)
 .. S HDR(1)="\\"
"RTN","PXRMOUTC",119,0)
 ;
"RTN","PXRMOUTC",120,0)
 I NLINES=0 Q
"RTN","PXRMOUTC",121,0)
 I FTYPE="PCL" D  Q
"RTN","PXRMOUTC",122,0)
 . S NHDR=2
"RTN","PXRMOUTC",123,0)
 . S HDR(1)="\\"
"RTN","PXRMOUTC",124,0)
 . S HDR(2)="Cohort:"
"RTN","PXRMOUTC",125,0)
 ;
"RTN","PXRMOUTC",126,0)
 I FTYPE="AGE" D  Q
"RTN","PXRMOUTC",127,0)
 . S NHDR=2
"RTN","PXRMOUTC",128,0)
 . S HDR(1)="\\"
"RTN","PXRMOUTC",129,0)
 . S HDR(2)="Age/Frequency:"
"RTN","PXRMOUTC",130,0)
 ;
"RTN","PXRMOUTC",131,0)
 I FTYPE="INFO" D  Q
"RTN","PXRMOUTC",132,0)
 . S NHDR=2
"RTN","PXRMOUTC",133,0)
 . S HDR(1)="\\"
"RTN","PXRMOUTC",134,0)
 . S HDR(2)="Information:"
"RTN","PXRMOUTC",135,0)
 Q
"RTN","PXRMOUTC",136,0)
 ;
"RTN","PXRMOUTD")
0^90^B14357446
"RTN","PXRMOUTD",1,0)
PXRMOUTD ; SLC/PKR - Reminder output driver. ;08/02/2005
"RTN","PXRMOUTD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMOUTD",3,0)
 ;
"RTN","PXRMOUTD",4,0)
 ;===================================================
"RTN","PXRMOUTD",5,0)
DUE(PXRMITEM,DUE,DUEDATE,RESDATE,FREQ,FIEVAL) ;Create the due information.
"RTN","PXRMOUTD",6,0)
 N LDATE,LDATEF,TEMP,TXT
"RTN","PXRMOUTD",7,0)
 ;
"RTN","PXRMOUTD",8,0)
 I RESDATE["E" S LDATEF=+RESDATE_U_"E"
"RTN","PXRMOUTD",9,0)
 I RESDATE["X" D
"RTN","PXRMOUTD",10,0)
 . S LDATEF=+RESDATE_U_"X"
"RTN","PXRMOUTD",11,0)
 . S LDATE=0
"RTN","PXRMOUTD",12,0)
 E  S LDATE=+RESDATE
"RTN","PXRMOUTD",13,0)
 I (+RESDATE)'>0 S LDATEF="unknown"
"RTN","PXRMOUTD",14,0)
 I '$D(LDATEF) S LDATEF=LDATE
"RTN","PXRMOUTD",15,0)
 ;
"RTN","PXRMOUTD",16,0)
 ;Immunizations may be marked as contraindicated. If that is the case
"RTN","PXRMOUTD",17,0)
 ;they are never due.
"RTN","PXRMOUTD",18,0)
 I $G(FIEVAL("CONTRAINDICATED"))=1 D  Q
"RTN","PXRMOUTD",19,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="NEVER"_U_DUEDATE_U_LDATEF
"RTN","PXRMOUTD",20,0)
 ;
"RTN","PXRMOUTD",21,0)
 ;A reminder frequency of 0Y is a special case that means never show as
"RTN","PXRMOUTD",22,0)
 ;applicable.
"RTN","PXRMOUTD",23,0)
 I (FREQ="0Y") D  Q
"RTN","PXRMOUTD",24,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="N/A"_U_U_LDATEF
"RTN","PXRMOUTD",25,0)
 ;
"RTN","PXRMOUTD",26,0)
 ;A reminder frequency of 99Y means do once in a lifetime. In this
"RTN","PXRMOUTD",27,0)
 ;case display null for the due date.
"RTN","PXRMOUTD",28,0)
 I (LDATE>0)&(FREQ="99Y") D  Q
"RTN","PXRMOUTD",29,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="DONE"_U_""_U_LDATEF
"RTN","PXRMOUTD",30,0)
 ;
"RTN","PXRMOUTD",31,0)
 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=DUE_U_DUEDATE_U_LDATEF
"RTN","PXRMOUTD",32,0)
 Q
"RTN","PXRMOUTD",33,0)
 ;
"RTN","PXRMOUTD",34,0)
 ;===================================================
"RTN","PXRMOUTD",35,0)
IGNNA(PXRMITEM,NOOUTPUT) ;The reminder is N/A, determine if there is
"RTN","PXRMOUTD",36,0)
 ;no Clinical Maintenance output.
"RTN","PXRMOUTD",37,0)
 S NOOUTPUT=1
"RTN","PXRMOUTD",38,0)
 ;Get the IGNORE ON N/A information.
"RTN","PXRMOUTD",39,0)
 N IGNORE
"RTN","PXRMOUTD",40,0)
 S IGNORE=$P(DEFARR(0),U,8)
"RTN","PXRMOUTD",41,0)
 ;
"RTN","PXRMOUTD",42,0)
 ;If the reminder is N/A and the ignore wildcard is set we are done.
"RTN","PXRMOUTD",43,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A")))&(IGNORE["*") Q
"RTN","PXRMOUTD",44,0)
 ;
"RTN","PXRMOUTD",45,0)
 ;Look for specific ignore codes.
"RTN","PXRMOUTD",46,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","AGE")))&(IGNORE["A") Q
"RTN","PXRMOUTD",47,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")))&(IGNORE["I") Q
"RTN","PXRMOUTD",48,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")) D  Q
"RTN","PXRMOUTD",49,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=""
"RTN","PXRMOUTD",50,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",1)=^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")
"RTN","PXRMOUTD",51,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","RACE")))&(IGNORE["R") Q
"RTN","PXRMOUTD",52,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")))&(IGNORE["S") Q
"RTN","PXRMOUTD",53,0)
 ;If we got to here there are no ignore codes so return the N/A
"RTN","PXRMOUTD",54,0)
 ;information and turn the output on.
"RTN","PXRMOUTD",55,0)
 S NOOUTPUT=0
"RTN","PXRMOUTD",56,0)
 Q
"RTN","PXRMOUTD",57,0)
 ;
"RTN","PXRMOUTD",58,0)
 ;===================================================
"RTN","PXRMOUTD",59,0)
OUTPUT(OUTTYPE,DEFARR,PXRMPDEM,PCLOGIC,RESLOGIC,DUE,DUEDATE,RESDATE,FREQ,FIEVAL) ;
"RTN","PXRMOUTD",60,0)
 ;Produce the final output.
"RTN","PXRMOUTD",61,0)
 N NTXT S NTXT=0
"RTN","PXRMOUTD",62,0)
 ;Check for a fatal error.
"RTN","PXRMOUTD",63,0)
 I $$FERROR^PXRMOUTU(.NTXT) S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="ERROR" Q
"RTN","PXRMOUTD",64,0)
 ;See if any warnings need to be issued.
"RTN","PXRMOUTD",65,0)
 D WARN^PXRMOUTU(PXRMITEM,.PXRMPDEM)
"RTN","PXRMOUTD",66,0)
 ;
"RTN","PXRMOUTD",67,0)
 ;Temporarily set CMB=CM
"RTN","PXRMOUTD",68,0)
 I OUTTYPE=4 S OUTTYPE=5
"RTN","PXRMOUTD",69,0)
 ;
"RTN","PXRMOUTD",70,0)
 ;If the component is CR (Reminders Due) and the reminder is not due
"RTN","PXRMOUTD",71,0)
 ;we are done.
"RTN","PXRMOUTD",72,0)
 I (OUTTYPE=0)&(DUE'["DUE") Q
"RTN","PXRMOUTD",73,0)
 ;
"RTN","PXRMOUTD",74,0)
 ;If the reminder is N/A do the N/A part for the summary and maintenance
"RTN","PXRMOUTD",75,0)
 ;components.
"RTN","PXRMOUTD",76,0)
 N NOOUTPUT
"RTN","PXRMOUTD",77,0)
 S NOOUTPUT=0
"RTN","PXRMOUTD",78,0)
 I 'PCLOGIC D
"RTN","PXRMOUTD",79,0)
 .;IGNORE ON N/A applies only to the Clinical Maintenance component.
"RTN","PXRMOUTD",80,0)
 .;This is the line causing the difference.
"RTN","PXRMOUTD",81,0)
 . I OUTTYPE=5 D IGNNA(PXRMITEM,.NOOUTPUT)
"RTN","PXRMOUTD",82,0)
 . I 'NOOUTPUT D NAOUTPUT(PXRMITEM,RESDATE)
"RTN","PXRMOUTD",83,0)
 I NOOUTPUT Q
"RTN","PXRMOUTD",84,0)
 ;
"RTN","PXRMOUTD",85,0)
 ;If the reminder is applicable produce the due information.
"RTN","PXRMOUTD",86,0)
 I PCLOGIC D DUE(PXRMITEM,DUE,DUEDATE,RESDATE,FREQ,.FIEVAL)
"RTN","PXRMOUTD",87,0)
 ;
"RTN","PXRMOUTD",88,0)
 ;Proudce the various output types
"RTN","PXRMOUTD",89,0)
 ;Clinical maintenance output.
"RTN","PXRMOUTD",90,0)
 I OUTTYPE=5 D CM^PXRMOUTC(.DEFARR,.PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,.FIEVAL)
"RTN","PXRMOUTD",91,0)
 ;MyHealtheVet summary.
"RTN","PXRMOUTD",92,0)
 I OUTTYPE=10 D MHVS^PXRMOUTM(.DEFARR,.PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,.FIEVAL,1)
"RTN","PXRMOUTD",93,0)
 ;MyHealtheVet detailed.
"RTN","PXRMOUTD",94,0)
 I OUTTYPE=11 D MHVD^PXRMOUTM(.DEFARR,.PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,.FIEVAL,1)
"RTN","PXRMOUTD",95,0)
 ;MyHealtheVet detailed.
"RTN","PXRMOUTD",96,0)
 I OUTTYPE=12 D MHVC^PXRMOUTM(.DEFARR,.PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,.FIEVAL)
"RTN","PXRMOUTD",97,0)
 ;
"RTN","PXRMOUTD",98,0)
 ;If there is any information stored in ^TMP("PXRHM") Health Summary
"RTN","PXRMOUTD",99,0)
 ;will not display it unless ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM) has
"RTN","PXRMOUTD",100,0)
 ;data in it.
"RTN","PXRMOUTD",101,0)
 I '$D(PXRMITEM)!'$D(PXRMRNAM) Q
"RTN","PXRMOUTD",102,0)
 I $D(^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM))=10 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=" "
"RTN","PXRMOUTD",103,0)
 Q
"RTN","PXRMOUTD",104,0)
 ;
"RTN","PXRMOUTD",105,0)
 ;===================================================
"RTN","PXRMOUTD",106,0)
NAOUTPUT(PXRMITEM,RESDATE) ;Prepare the N/A output.
"RTN","PXRMOUTD",107,0)
 N DDATE
"RTN","PXRMOUTD",108,0)
 I RESDATE["E" S DDATE=+RESDATE_U_"E"
"RTN","PXRMOUTD",109,0)
 I RESDATE["X" S DDATE=+RESDATE_U_"X"
"RTN","PXRMOUTD",110,0)
 I '$D(DDATE) S DDATE=+RESDATE
"RTN","PXRMOUTD",111,0)
 I DDATE=0 S DDATE=""
"RTN","PXRMOUTD",112,0)
 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="N/A"_U_U_DDATE
"RTN","PXRMOUTD",113,0)
 Q
"RTN","PXRMOUTD",114,0)
 ;
"RTN","PXRMOUTM")
0^91^B27278123
"RTN","PXRMOUTM",1,0)
PXRMOUTM ; SLC/PKR - MyHealtheVet output. ;10/12/2005
"RTN","PXRMOUTM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMOUTM",3,0)
 ;
"RTN","PXRMOUTM",4,0)
 ;================================================
"RTN","PXRMOUTM",5,0)
FOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Do output for individual findings 
"RTN","PXRMOUTM",6,0)
 ;in the FINDING array.
"RTN","PXRMOUTM",7,0)
 I $D(IFIEVAL("TERM")) D MHVOUT^PXRMTERM(1,.IFIEVAL,.NFLINES,.TEXT) Q
"RTN","PXRMOUTM",8,0)
 N FTYPE
"RTN","PXRMOUTM",9,0)
 S FTYPE=$P(IFIEVAL("FINDING"),U,1)
"RTN","PXRMOUTM",10,0)
 S FTYPE=$P(FTYPE,";",2)
"RTN","PXRMOUTM",11,0)
 I FTYPE="AUTTEDT(" D MHVOUT^PXRMEDU(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",12,0)
 I FTYPE="AUTTEXAM(" D MHVOUT^PXRMEXAM(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",13,0)
 I FTYPE="AUTTHF(" D MHVOUT^PXRMHF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",14,0)
 I FTYPE="AUTTIMM(" D MHVOUT^PXRMIMM(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",15,0)
 I FTYPE="AUTTSK(" D MHVOUT^PXRMSKIN(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",16,0)
 I FTYPE="GMRD(120.51," D MHVOUT^PXRMVITL(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",17,0)
 I FTYPE="LAB(60," D MHVOUT^PXRMLAB(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",18,0)
 I FTYPE="ORD(101.43," D MHVOUT^PXRMORDR(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",19,0)
 I FTYPE="PS(50.605," D MHVOUT^PXRMDRCL(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",20,0)
 I FTYPE="PSDRUG(" D MHVOUT^PXRMDRUG(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",21,0)
 I FTYPE="PS(55," D MHVOUT^PXRMDIN(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",22,0)
 I FTYPE="PS(55NVA," D MHVOUT^PXRMDNVA(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",23,0)
 I FTYPE="PSRX(" D MHVOUT^PXRMDOUT(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",24,0)
 I FTYPE="PSNDF(50.6," D MHVOUT^PXRMDGEN(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",25,0)
 I FTYPE="PXD(811.2," D MHVOUT^PXRMTAX(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",26,0)
 I FTYPE="PXRMD(802.4," D MHVOUT^PXRMFF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",27,0)
 I FTYPE="PXRMD(810.9," D MHVOUT^PXRMLOCF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",28,0)
 I FTYPE="PXRMD(811.4," D MHVOUT^PXRMCF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",29,0)
 I FTYPE="RAMIS(71," D MHVOUT^PXRMRAD(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",30,0)
 I FTYPE="YTT(601," D MHVOUT^PXRMMH(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTM",31,0)
 Q
"RTN","PXRMOUTM",32,0)
 ;
"RTN","PXRMOUTM",33,0)
 ;================================================
"RTN","PXRMOUTM",34,0)
MHVC(DEFARR,PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,FIEVAL) ;Prepare the 
"RTN","PXRMOUTM",35,0)
 ;MyHealtheVet combined output.
"RTN","PXRMOUTM",36,0)
 N PNAME,RIEN
"RTN","PXRMOUTM",37,0)
 S RIEN=DEFARR("IEN")
"RTN","PXRMOUTM",38,0)
 S PNAME=$O(^TMP("PXRHM",$J,RIEN,""))
"RTN","PXRMOUTM",39,0)
 S ^TMP("PXRMMHVC",$J,RIEN,"STATUS")=^TMP("PXRHM",$J,RIEN,PNAME)
"RTN","PXRMOUTM",40,0)
 D MHVD(.DEFARR,.PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,.FIEVAL,0)
"RTN","PXRMOUTM",41,0)
 M ^TMP("PXRMMHVC",$J,RIEN,"DETAIL")=^TMP("PXRHM",$J,RIEN,PNAME,"TXT")
"RTN","PXRMOUTM",42,0)
 K ^TMP("PXRHM",$J,RIEN,PNAME,"TXT")
"RTN","PXRMOUTM",43,0)
 D MHVS(.DEFARR,.PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,.FIEVAL,0)
"RTN","PXRMOUTM",44,0)
 M ^TMP("PXRMMHVC",$J,RIEN,"SUMMARY")=^TMP("PXRHM",$J,RIEN,PNAME,"TXT")
"RTN","PXRMOUTM",45,0)
 K ^TMP("PXRHM",$J,RIEN,PNAME)
"RTN","PXRMOUTM",46,0)
 Q
"RTN","PXRMOUTM",47,0)
 ;
"RTN","PXRMOUTM",48,0)
 ;================================================
"RTN","PXRMOUTM",49,0)
MHVD(DEFARR,PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,FIEVAL,WEB) ;Prepare the 
"RTN","PXRMOUTM",50,0)
 ;MyHealtheVet detailed output.
"RTN","PXRMOUTM",51,0)
 N IND,FIDATA,FINDING,FLIST,FTYPE
"RTN","PXRMOUTM",52,0)
 N HDR,NHDR,IFIEVAL,LIST,NFLINES,NTXT,NUM
"RTN","PXRMOUTM",53,0)
 N TEXT
"RTN","PXRMOUTM",54,0)
 S NTXT=0
"RTN","PXRMOUTM",55,0)
 ;Output the AGE match/no match text.
"RTN","PXRMOUTM",56,0)
 D AGE^PXRMFNFT(PXRMPDEM("DFN"),.DEFARR,.FIEVAL,.NTXT)
"RTN","PXRMOUTM",57,0)
 ;Process the findings in the order: patient cohort, resolution,
"RTN","PXRMOUTM",58,0)
 ;age, and informational.
"RTN","PXRMOUTM",59,0)
 M FIDATA=FIEVAL
"RTN","PXRMOUTM",60,0)
 F FTYPE="PCL","RES","AGE","INFO" D
"RTN","PXRMOUTM",61,0)
 . S LIST=$S(FTYPE="PCL":DEFARR(32),FTYPE="RES":DEFARR(36),FTYPE="AGE":DEFARR(40),FTYPE="INFO":DEFARR(42))
"RTN","PXRMOUTM",62,0)
 .;Output the general logic text.
"RTN","PXRMOUTM",63,0)
 . I FTYPE="PCL" D LOGIC^PXRMFNFT(PXRMPDEM("DFN"),PCLOGIC,FTYPE,"D",.DEFARR,.NTXT)
"RTN","PXRMOUTM",64,0)
 . I FTYPE="RES",$P(PCLOGIC,U,1) D LOGIC^PXRMFNFT(PXRMPDEM("DFN"),RESLOGIC,FTYPE,"D",.DEFARR,.NTXT)
"RTN","PXRMOUTM",65,0)
 .;Process the findings for each type.
"RTN","PXRMOUTM",66,0)
 . K TEXT
"RTN","PXRMOUTM",67,0)
 . S (NHDR,NFLINES)=0
"RTN","PXRMOUTM",68,0)
 . S NUM=+$P(LIST,U,1)
"RTN","PXRMOUTM",69,0)
 . S FLIST=$P(LIST,U,2)
"RTN","PXRMOUTM",70,0)
 . F IND=1:1:NUM D
"RTN","PXRMOUTM",71,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMOUTM",72,0)
 ..;No output for age or sex findings.
"RTN","PXRMOUTM",73,0)
 .. I (FINDING="AGE")!(FINDING="SEX") Q
"RTN","PXRMOUTM",74,0)
 ..;Make sure each finding is processed only once.
"RTN","PXRMOUTM",75,0)
 .. I '$D(FIDATA(FINDING)) Q
"RTN","PXRMOUTM",76,0)
 .. K IFIEVAL
"RTN","PXRMOUTM",77,0)
 .. I FIEVAL(FINDING) M IFIEVAL=FIEVAL(FINDING)
"RTN","PXRMOUTM",78,0)
 .. E  S IFIEVAL=0
"RTN","PXRMOUTM",79,0)
 ..;Output the found/not found text for the finding.
"RTN","PXRMOUTM",80,0)
 .. D FINDING^PXRMFNFT(3,PXRMPDEM("DFN"),FINDING,.IFIEVAL,.NFLINES,.TEXT)
"RTN","PXRMOUTM",81,0)
 ..;If the finding is true output the finding information.
"RTN","PXRMOUTM",82,0)
 .. I IFIEVAL D FOUT(1,.IFIEVAL,.NFLINES,.TEXT)
"RTN","PXRMOUTM",83,0)
 ..;Make sure each finding is processed only once.
"RTN","PXRMOUTM",84,0)
 .. K FIDATA(FINDING)
"RTN","PXRMOUTM",85,0)
 .;
"RTN","PXRMOUTM",86,0)
 .;If there was any text for this finding type create a header.
"RTN","PXRMOUTM",87,0)
 .;Output the header and the finding text.
"RTN","PXRMOUTM",88,0)
 . D COPYTXT^PXRMOUTU(.NTXT,NFLINES,.TEXT)
"RTN","PXRMOUTM",89,0)
 I WEB D WEB(DEFARR("IEN"),.NTXT)
"RTN","PXRMOUTM",90,0)
 Q
"RTN","PXRMOUTM",91,0)
 ;
"RTN","PXRMOUTM",92,0)
 ;================================================
"RTN","PXRMOUTM",93,0)
MHVS(DEFARR,PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,FIEVAL,WEB) ;Prepare the 
"RTN","PXRMOUTM",94,0)
 ;MyHealtheVet summary output.
"RTN","PXRMOUTM",95,0)
 N NTXT
"RTN","PXRMOUTM",96,0)
 S NTXT=0
"RTN","PXRMOUTM",97,0)
 D LOGIC^PXRMFNFT(PXRMPDEM("DFN"),PCLOGIC,"PCL","S",.DEFARR,.NTXT)
"RTN","PXRMOUTM",98,0)
 I $P(PCLOGIC,U,1) D LOGIC^PXRMFNFT(PXRMPDEM("DFN"),RESLOGIC,"RES","S",.DEFARR,.NTXT)
"RTN","PXRMOUTM",99,0)
 I WEB D WEB(DEFARR("IEN"),.NTXT)
"RTN","PXRMOUTM",100,0)
 Q
"RTN","PXRMOUTM",101,0)
 ;
"RTN","PXRMOUTM",102,0)
 ;================================================
"RTN","PXRMOUTM",103,0)
WEB(RIEN,NTXT) ;Output the web site information.
"RTN","PXRMOUTM",104,0)
 N DES,IEN,IND,NL,TEXT,TITLE,URL
"RTN","PXRMOUTM",105,0)
 I '$D(^PXD(811.9,RIEN,50)) Q
"RTN","PXRMOUTM",106,0)
 S TEXT="\\ Please check these web sites for more information:\\"
"RTN","PXRMOUTM",107,0)
 D ADDTXT^PXRMOUTU(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTM",108,0)
 S IEN=0
"RTN","PXRMOUTM",109,0)
 F  S IEN=+$O(^PXD(811.9,RIEN,50,IEN)) Q:IEN=0  D
"RTN","PXRMOUTM",110,0)
 . S TEXT=$G(^PXD(811.9,RIEN,50,IEN,0))
"RTN","PXRMOUTM",111,0)
 . S URL=$P(TEXT,U,1)
"RTN","PXRMOUTM",112,0)
 . I URL="" Q
"RTN","PXRMOUTM",113,0)
 . S TITLE=$P(TEXT,U,2)
"RTN","PXRMOUTM",114,0)
 . S DES=$D(^PXD(811.9,RIEN,50,IEN,1))
"RTN","PXRMOUTM",115,0)
 . S TEXT(1)="Web Site: "_TITLE_"\\"
"RTN","PXRMOUTM",116,0)
 . S TEXT(2)="URL: "_URL_$S('DES:"\\",1:"")
"RTN","PXRMOUTM",117,0)
 . D ADDTXTA^PXRMOUTU(2,PXRMRM,.NTXT,2,.TEXT)
"RTN","PXRMOUTM",118,0)
 .;If there is a description output it.
"RTN","PXRMOUTM",119,0)
 . I 'DES Q
"RTN","PXRMOUTM",120,0)
 . K TEXT
"RTN","PXRMOUTM",121,0)
 . S (IND,NL)=0
"RTN","PXRMOUTM",122,0)
 .  F  S IND=+$O(^PXD(811.9,RIEN,50,IEN,1,IND)) Q:IND=0  D
"RTN","PXRMOUTM",123,0)
 .. S NL=NL+1
"RTN","PXRMOUTM",124,0)
 .. S TEXT(NL)=^PXD(811.9,RIEN,50,IEN,1,IND,0)
"RTN","PXRMOUTM",125,0)
 . S TEXT(NL)=TEXT(NL)_"\\"
"RTN","PXRMOUTM",126,0)
 . D ADDTXTA^PXRMOUTU(3,PXRMRM,.NTXT,NL,.TEXT)
"RTN","PXRMOUTM",127,0)
 Q
"RTN","PXRMOUTM",128,0)
 ;
"RTN","PXRMP18E")
1^13
"RTN","PXRMP18I")
1^14
"RTN","PXRMP4EC")
0^^B4573891
"RTN","PXRMP4EC",1,0)
PXRMP4EC ; SLC/PKR - PXRM*2.0*4 environment check. ;03/15/2005
"RTN","PXRMP4EC",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMP4EC",3,0)
 ;
"RTN","PXRMP4EC",4,0)
 ;===============================================================
"RTN","PXRMP4EC",5,0)
ENVCHK ;Perform an environment check. Look for any reminders still using
"RTN","PXRMP4EC",6,0)
 ;old-style MRD. Do not install if any are found.
"RTN","PXRMP4EC",7,0)
 N NL,TEXT
"RTN","PXRMP4EC",8,0)
 D FOMRD(.NL)
"RTN","PXRMP4EC",9,0)
 I NL>2 S XPDABORT=1
"RTN","PXRMP4EC",10,0)
 I $G(XPDABORT) D
"RTN","PXRMP4EC",11,0)
 . S TEXT(1)="Patch PXRM*2*4 cannot be installed because some reminders are still using"
"RTN","PXRMP4EC",12,0)
 . S TEXT(2)="the old-style MRD. A message is being sent to the  reminders mailgroup that"
"RTN","PXRMP4EC",13,0)
 . S TEXT(3)="lists the reminders still using the old-style MRD. Please replace the old-style"
"RTN","PXRMP4EC",14,0)
 . S TEXT(4)="MRD with a function finding."
"RTN","PXRMP4EC",15,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMP4EC",16,0)
 E  D
"RTN","PXRMP4EC",17,0)
 . S TEXTI(1)="Environment check passed, ok to install patch PXRM*2*4"
"RTN","PXRMP4EC",18,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMP4EC",19,0)
 Q
"RTN","PXRMP4EC",20,0)
 ;
"RTN","PXRMP4EC",21,0)
 ;===============================================================
"RTN","PXRMP4EC",22,0)
FOMRD(NL) ;Flag all definitions using the old-style MRD.
"RTN","PXRMP4EC",23,0)
 N CPCL,IEN,NAME,XMSUB
"RTN","PXRMP4EC",24,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMP4EC",25,0)
 S XMSUB="Old-style MRD obsolete"
"RTN","PXRMP4EC",26,0)
 S ^TMP("PXRMXMZ",$J,1,0)="The following reminder definitions use the old-style MRD function;"
"RTN","PXRMP4EC",27,0)
 S ^TMP("PXRMXMZ",$J,2,0)="please change them to use a function finding."
"RTN","PXRMP4EC",28,0)
 S NL=2
"RTN","PXRMP4EC",29,0)
 S IEN=0
"RTN","PXRMP4EC",30,0)
 F  S IEN=+$O(^PXD(811.9,IEN)) Q:IEN=0  D
"RTN","PXRMP4EC",31,0)
 . S CPCL=$G(^PXD(811.9,IEN,30))
"RTN","PXRMP4EC",32,0)
 . I CPCL'["MRD" Q
"RTN","PXRMP4EC",33,0)
 . S NAME=$P(^PXD(811.9,IEN,0),U,1)
"RTN","PXRMP4EC",34,0)
 . S NL=NL+1
"RTN","PXRMP4EC",35,0)
 . S ^TMP("PXRMXMZ",$J,NL,0)=" "
"RTN","PXRMP4EC",36,0)
 . S NL=NL+1
"RTN","PXRMP4EC",37,0)
 . S ^TMP("PXRMXMZ",$J,NL,0)="Reminder: "_NAME_", ien - "_IEN
"RTN","PXRMP4EC",38,0)
 . S NL=NL+1
"RTN","PXRMP4EC",39,0)
 . S ^TMP("PXRMXMZ",$J,NL,0)="Custom cohort logic: "_CPCL
"RTN","PXRMP4EC",40,0)
 I NL=2 K ^TMP("PXRMXMZ",$J) Q
"RTN","PXRMP4EC",41,0)
 D SEND^PXRMMSG(XMSUB)
"RTN","PXRMP4EC",42,0)
 Q
"RTN","PXRMP4EC",43,0)
 ;
"RTN","PXRMP4I")
0^^B70066076
"RTN","PXRMP4I",1,0)
PXRMP4I ; SLC/PKR - PXRM*2.0*4 init routine. ;07/24/2006
"RTN","PXRMP4I",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMP4I",3,0)
 Q
"RTN","PXRMP4I",4,0)
 ;
"RTN","PXRMP4I",5,0)
 ;==========================================
"RTN","PXRMP4I",6,0)
CFTINC(IEN) ;Return true if the computed finding should be included
"RTN","PXRMP4I",7,0)
 ;in the build.
"RTN","PXRMP4I",8,0)
 N NAME
"RTN","PXRMP4I",9,0)
 S NAME=$P(^PXRMD(811.4,IEN,0),U,1)
"RTN","PXRMP4I",10,0)
 I NAME="VA-APPOINTMENTS FOR A PATIENT" Q 1
"RTN","PXRMP4I",11,0)
 I NAME="VA-DATE OF BIRTH" Q 1
"RTN","PXRMP4I",12,0)
 I NAME="VA-DATE OF DEATH" Q 1
"RTN","PXRMP4I",13,0)
 I NAME="VA-HOSPITAL DISCHARGE DATE" Q 1
"RTN","PXRMP4I",14,0)
 I NAME="VA-PATIENT TYPE" Q 1
"RTN","PXRMP4I",15,0)
 I NAME="VA-PATIENTS WITH APPOINTMENTS" Q 1
"RTN","PXRMP4I",16,0)
 I NAME="VA-PROGRESS NOTE" Q 1
"RTN","PXRMP4I",17,0)
 I NAME="VA-PTF HOSPITAL DISCHARGE DATE" Q 1
"RTN","PXRMP4I",18,0)
 I NAME="VA-REMINDER DEFINITION" Q 1
"RTN","PXRMP4I",19,0)
 I NAME="VA-TREATING FACILITY LIST" Q 1
"RTN","PXRMP4I",20,0)
 Q 0
"RTN","PXRMP4I",21,0)
 ;
"RTN","PXRMP4I",22,0)
 ;==========================================
"RTN","PXRMP4I",23,0)
DELDD ;Delete the old data dictionaries.
"RTN","PXRMP4I",24,0)
 N DIU,TEXT
"RTN","PXRMP4I",25,0)
 D EN^DDIOL("Removing old data dictionaries.")
"RTN","PXRMP4I",26,0)
 S DIU(0)=""
"RTN","PXRMP4I",27,0)
 F DIU=800,801.41,801.5,801.55,802.4,810.1,810.2,810.3,810.4,810.5,810.7,810.8,810.9,811.5,811.9 D
"RTN","PXRMP4I",28,0)
 . S TEXT=" Deleting data dictionary for file # "_DIU
"RTN","PXRMP4I",29,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMP4I",30,0)
 . D EN^DIU2
"RTN","PXRMP4I",31,0)
 Q
"RTN","PXRMP4I",32,0)
 ;
"RTN","PXRMP4I",33,0)
 ;==========================================
"RTN","PXRMP4I",34,0)
DELEI ;If the Exchange File entry already exists delete it.
"RTN","PXRMP4I",35,0)
 N ARRAY,IC,IND,LIST,LUVALUE,NUM
"RTN","PXRMP4I",36,0)
 D EXARRAY^PXRMP4IW(1,.ARRAY)
"RTN","PXRMP4I",37,0)
 S IC=0
"RTN","PXRMP4I",38,0)
 F  S IC=$O(ARRAY(IC)) Q:'IC  D
"RTN","PXRMP4I",39,0)
 . S LUVALUE(1)=ARRAY(IC,1)
"RTN","PXRMP4I",40,0)
 . D FIND^DIC(811.8,"","","U",.LUVALUE,"","","","","LIST")
"RTN","PXRMP4I",41,0)
 . I '$D(LIST) Q
"RTN","PXRMP4I",42,0)
 . S NUM=$P(LIST("DILIST",0),U,1)
"RTN","PXRMP4I",43,0)
 . I NUM'=0 D
"RTN","PXRMP4I",44,0)
 .. F IND=1:1:NUM D
"RTN","PXRMP4I",45,0)
 ... N DA,DIK
"RTN","PXRMP4I",46,0)
 ... S DIK="^PXD(811.8,"
"RTN","PXRMP4I",47,0)
 ... S DA=LIST("DILIST",2,IND)
"RTN","PXRMP4I",48,0)
 ... D ^DIK
"RTN","PXRMP4I",49,0)
 Q
"RTN","PXRMP4I",50,0)
 ;
"RTN","PXRMP4I",51,0)
 ;==========================================
"RTN","PXRMP4I",52,0)
DELLT ;Delete list templates
"RTN","PXRMP4I",53,0)
 N IEN,IND,LIST,TEMP0
"RTN","PXRMP4I",54,0)
 D LTL^PXRMP4IW(.LIST)
"RTN","PXRMP4I",55,0)
 S IND=0
"RTN","PXRMP4I",56,0)
 F  S IND=$O(LIST(IND)) Q:IND=""  D
"RTN","PXRMP4I",57,0)
 . S IEN=$O(^SD(409.61,"B",LIST(IND),"")) Q:IEN=""
"RTN","PXRMP4I",58,0)
 . S TEMP0=$G(^SD(409.61,IEN,0))
"RTN","PXRMP4I",59,0)
 . K ^SD(409.61,IEN)
"RTN","PXRMP4I",60,0)
 . S ^SD(409.61,IEN,0)=TEMP0
"RTN","PXRMP4I",61,0)
 Q
"RTN","PXRMP4I",62,0)
 ;
"RTN","PXRMP4I",63,0)
 ;==========================================
"RTN","PXRMP4I",64,0)
EXFINC(Y) ;Return a 1 if the Exchange file entry is in the list to
"RTN","PXRMP4I",65,0)
 ;include in the build. This is used in the build to determine which
"RTN","PXRMP4I",66,0)
 ;entries to include.
"RTN","PXRMP4I",67,0)
 N EXARRAY,FOUND,IEN,IC,LUVALUE
"RTN","PXRMP4I",68,0)
 D EXARRAY^PXRMP4IW(1,.EXARRAY)
"RTN","PXRMP4I",69,0)
 S FOUND=0
"RTN","PXRMP4I",70,0)
 S IC=0
"RTN","PXRMP4I",71,0)
 F  S IC=+$O(EXARRAY(IC)) Q:(IC=0)!(FOUND)  D
"RTN","PXRMP4I",72,0)
 . M LUVALUE=EXARRAY(IC)
"RTN","PXRMP4I",73,0)
 . S IEN=+$$FIND1^DIC(811.8,"","KU",.LUVALUE)
"RTN","PXRMP4I",74,0)
 . I IEN=Y S FOUND=1 Q
"RTN","PXRMP4I",75,0)
 Q FOUND
"RTN","PXRMP4I",76,0)
 ;
"RTN","PXRMP4I",77,0)
 ;==========================================
"RTN","PXRMP4I",78,0)
OVLCHECK ;Check existing reminder definitions for baseline age range
"RTN","PXRMP4I",79,0)
 ;overlaps.
"RTN","PXRMP4I",80,0)
 D BMES^XPDUTL("Checking reminder definitions for baseline age range overlap")
"RTN","PXRMP4I",81,0)
 N DA,TEST
"RTN","PXRMP4I",82,0)
 S DA=0
"RTN","PXRMP4I",83,0)
 F  S DA=+$O(^PXD(811.9,DA)) Q:DA=0  D
"RTN","PXRMP4I",84,0)
 . S TEST=$$OVLAP^PXRMAGE
"RTN","PXRMP4I",85,0)
 . I TEST W !,"Reminder ",$P(^PXD(811.9,DA,0),U,1),"; IEN= ",DA,!
"RTN","PXRMP4I",86,0)
 Q
"RTN","PXRMP4I",87,0)
 ;
"RTN","PXRMP4I",88,0)
 ;==========================================
"RTN","PXRMP4I",89,0)
PRE ;
"RTN","PXRMP4I",90,0)
 D SLLC
"RTN","PXRMP4I",91,0)
 D DELDD
"RTN","PXRMP4I",92,0)
 D DELEI
"RTN","PXRMP4I",93,0)
 D DELLT
"RTN","PXRMP4I",94,0)
 D RELTEMP^PXRMP4I1
"RTN","PXRMP4I",95,0)
 D REOPTS^PXRMP4I1
"RTN","PXRMP4I",96,0)
 D REPROTS^PXRMP4I1
"RTN","PXRMP4I",97,0)
 N PXRMINST S PXRMINST=1
"RTN","PXRMP4I",98,0)
 D RENAME^PXRMP4I1(811.4,"VA-DISCHARGE DATE","VA-LAST SERVICE SEPARATION DATE")
"RTN","PXRMP4I",99,0)
 Q
"RTN","PXRMP4I",100,0)
 ;
"RTN","PXRMP4I",101,0)
 ;==========================================
"RTN","PXRMP4I",102,0)
POST ;
"RTN","PXRMP4I",103,0)
 D FORMAT^PXRMDISC
"RTN","PXRMP4I",104,0)
 D OVLCHECK
"RTN","PXRMP4I",105,0)
 D RLLC
"RTN","PXRMP4I",106,0)
 D RTAXEXP
"RTN","PXRMP4I",107,0)
 D RRSVC
"RTN","PXRMP4I",108,0)
 D SPLT
"RTN","PXRMP4I",109,0)
 D SAUTOP
"RTN","PXRMP4I",110,0)
 D SLABENOD^PXRMP4I1
"RTN","PXRMP4I",111,0)
 D SMEXINS
"RTN","PXRMP4I",112,0)
 D POST^PXRMGECL
"RTN","PXRMP4I",113,0)
 D MHVWEB^PXRMP4IW
"RTN","PXRMP4I",114,0)
 D GECDIA^PXRMP4I1
"RTN","PXRMP4I",115,0)
 D SNEXTIP^PXRMP4I1
"RTN","PXRMP4I",116,0)
 Q
"RTN","PXRMP4I",117,0)
 ;
"RTN","PXRMP4I",118,0)
 ;==========================================
"RTN","PXRMP4I",119,0)
RLLC ;Restore the Location List classes to the new location and delete
"RTN","PXRMP4I",120,0)
 ;the old location.
"RTN","PXRMP4I",121,0)
 N CLASS,IEN,TEMP
"RTN","PXRMP4I",122,0)
 D BMES^XPDUTL("Restoring Location List Classes")
"RTN","PXRMP4I",123,0)
 S IEN=0
"RTN","PXRMP4I",124,0)
 F  S IEN=+$O(^XTMP("PXRMLLCS",IEN)) Q:IEN=0  D
"RTN","PXRMP4I",125,0)
 . S CLASS=^XTMP("PXRMLLCS",IEN)
"RTN","PXRMP4I",126,0)
 . S $P(^PXRMD(810.9,IEN,100),U,1)=CLASS
"RTN","PXRMP4I",127,0)
 S IEN=0
"RTN","PXRMP4I",128,0)
 F  S IEN=+$O(^PXRMD(810.9,IEN)) Q:IEN=0  D
"RTN","PXRMP4I",129,0)
 . S CLASS=$P(^PXRMD(810.9,IEN,100),U,1)
"RTN","PXRMP4I",130,0)
 . I CLASS="" D
"RTN","PXRMP4I",131,0)
 .. S TEMP=$P(^PXRMD(810.9,IEN,0),U,2)
"RTN","PXRMP4I",132,0)
 .. I TEMP'="" S $P(^PXRMD(810.9,IEN,100),U,1)=TEMP
"RTN","PXRMP4I",133,0)
 .. S CLASS=TEMP
"RTN","PXRMP4I",134,0)
 . I CLASS'="" D
"RTN","PXRMP4I",135,0)
 .. S TEMP=^PXRMD(810.9,IEN,0)
"RTN","PXRMP4I",136,0)
 .. S ^PXRMD(810.9,IEN,0)=$P(TEMP,U,1)
"RTN","PXRMP4I",137,0)
 Q
"RTN","PXRMP4I",138,0)
 ;
"RTN","PXRMP4I",139,0)
 ;==========================================
"RTN","PXRMP4I",140,0)
RRSVC ;Reformat reminder report template service categories.
"RTN","PXRMP4I",141,0)
 N IEN,IND,SVCL
"RTN","PXRMP4I",142,0)
 D BMES^XPDUTL("Reformatting reminder report service categories")
"RTN","PXRMP4I",143,0)
 S IEN=0
"RTN","PXRMP4I",144,0)
 F  S IEN=+$O(^PXRMPT(810.1,IEN)) Q:IEN=0  D
"RTN","PXRMP4I",145,0)
 . S SVCL="",IND=0
"RTN","PXRMP4I",146,0)
 . F  S IND=+$O(^PXRMPT(810.1,IEN,8,IND)) Q:IND=0  D
"RTN","PXRMP4I",147,0)
 .. I SVCL="" S SVCL=^PXRMPT(810.1,IEN,8,IND,0)
"RTN","PXRMP4I",148,0)
 .. E  S SVCL=SVCL_","_^PXRMPT(810.1,IEN,8,IND,0)
"RTN","PXRMP4I",149,0)
 . I SVCL="" Q
"RTN","PXRMP4I",150,0)
 . K ^PXRMPT(810.1,IEN,8)
"RTN","PXRMP4I",151,0)
 . S ^PXRMPT(810.1,IEN,8)=SVCL
"RTN","PXRMP4I",152,0)
 Q
"RTN","PXRMP4I",153,0)
 ;
"RTN","PXRMP4I",154,0)
 ;==========================================
"RTN","PXRMP4I",155,0)
RSPC ;Restore the Sponsor classes to the new location.
"RTN","PXRMP4I",156,0)
 N CLASS,IEN
"RTN","PXRMP4I",157,0)
 D BMES^XPDUTL("Restoring Sponsor Classes")
"RTN","PXRMP4I",158,0)
 S IEN=0
"RTN","PXRMP4I",159,0)
 F  S IEN=+$O(^XTMP("PXRMSPCS",IEN)) Q:IEN=0  D
"RTN","PXRMP4I",160,0)
 . S CLASS=^XTMP("PXRMSPCS",IEN)
"RTN","PXRMP4I",161,0)
 . S $P(^PXRMD(811.6,IEN,100),U,1)=CLASS
"RTN","PXRMP4I",162,0)
 Q
"RTN","PXRMP4I",163,0)
 ;
"RTN","PXRMP4I",164,0)
 ;==========================================
"RTN","PXRMP4I",165,0)
RTAXEXP ;Rebuild all taxonomy expansions.
"RTN","PXRMP4I",166,0)
 N ALOW,AHIGH,FILENUM,HIGH,LOW,IEN,IND,TEMP,TEXT,X,X1,X2
"RTN","PXRMP4I",167,0)
 S (X1,X2)="TAX"
"RTN","PXRMP4I",168,0)
 D BMES^XPDUTL("Rebuilding taxonomy expansions and setting adjacent values.")
"RTN","PXRMP4I",169,0)
 S IEN=$O(^PXD(811.2,"B","VA-WH BILATERAL MASTECTOMY",""))
"RTN","PXRMP4I",170,0)
 S TEXT=" Working on taxonomy "_IEN
"RTN","PXRMP4I",171,0)
 D BMES^XPDUTL(TEXT)
"RTN","PXRMP4I",172,0)
 D DELEXTL^PXRMBXTL(IEN)
"RTN","PXRMP4I",173,0)
 D EXPAND^PXRMBXTL(IEN,"")
"RTN","PXRMP4I",174,0)
 F FILENUM=80,80.1,81 D
"RTN","PXRMP4I",175,0)
 . S IND=0
"RTN","PXRMP4I",176,0)
 . F  S IND=+$O(^PXD(811.2,IEN,FILENUM,IND)) Q:IND=0  D
"RTN","PXRMP4I",177,0)
 .. S TEMP=^PXD(811.2,IEN,FILENUM,IND,0)
"RTN","PXRMP4I",178,0)
 .. S LOW=$P(TEMP,U,1),HIGH=$P(TEMP,U,2)
"RTN","PXRMP4I",179,0)
 .. S ALOW=$S(FILENUM=80:$$PREV^ICDAPIU(LOW),FILENUM=80.1:$$PREV^ICDAPIU(LOW),FILENUM=81:$$PREV^ICPTAPIU(LOW))
"RTN","PXRMP4I",180,0)
 .. S AHIGH=$S(FILENUM=80:$$NEXT^ICDAPIU(HIGH),FILENUM=80.1:$$NEXT^ICDAPIU(HIGH),FILENUM=81:$$NEXT^ICPTAPIU(HIGH))
"RTN","PXRMP4I",181,0)
 .. S $P(^PXD(811.2,IEN,FILENUM,IND,0),U,3,4)=ALOW_U_AHIGH
"RTN","PXRMP4I",182,0)
 D BMES^XPDUTL(" DONE")
"RTN","PXRMP4I",183,0)
 Q
"RTN","PXRMP4I",184,0)
 ;
"RTN","PXRMP4I",185,0)
 ;==========================================
"RTN","PXRMP4I",186,0)
SAUTOP ;Make sure the class field is "N" for national Extract Summary and
"RTN","PXRMP4I",187,0)
 ;Reminder Patient List entries. For these entries set the field
"RTN","PXRMP4I",188,0)
 ;AUTOMATICALLY PURGE to true. Set INCLUDE PCMM INSTITUTION to true
"RTN","PXRMP4I",189,0)
 ;for all VA-*IHD QUERI and VA-*MH QUERI lists.
"RTN","PXRMP4I",190,0)
 D BMES^XPDUTL("Setting AUTOMATICALLY PURGE for national Extract Summaries and Patient Lists")
"RTN","PXRMP4I",191,0)
 N IEN,NAME
"RTN","PXRMP4I",192,0)
 S IEN=0 F  S IEN=$O(^PXRMXT(810.3,IEN)) Q:IEN'>0  D
"RTN","PXRMP4I",193,0)
 . S NAME=$P($G(^PXRMXT(810.3,IEN,0)),U)
"RTN","PXRMP4I",194,0)
 . I NAME'["VA-",NAME'["LREPI" Q
"RTN","PXRMP4I",195,0)
 . S $P(^PXRMXT(810.3,IEN,100),U)="N"
"RTN","PXRMP4I",196,0)
 . S ^PXRMXT(810.3,IEN,50)=1
"RTN","PXRMP4I",197,0)
 ;
"RTN","PXRMP4I",198,0)
 S IEN=0 F  S IEN=$O(^PXRMXP(810.5,IEN)) Q:IEN'>0  D
"RTN","PXRMP4I",199,0)
 . S NAME=$P($G(^PXRMXP(810.5,IEN,0)),U)
"RTN","PXRMP4I",200,0)
 . I NAME["QUERI" S $P(^PXRMXP(810.5,IEN,0),U,10)=1
"RTN","PXRMP4I",201,0)
 . I NAME'["VA-",NAME'["LREPI" Q
"RTN","PXRMP4I",202,0)
 . S $P(^PXRMXP(810.5,IEN,100),U)="N"
"RTN","PXRMP4I",203,0)
 . S ^PXRMXP(810.5,IEN,50)=1
"RTN","PXRMP4I",204,0)
 Q
"RTN","PXRMP4I",205,0)
 ;
"RTN","PXRMP4I",206,0)
 ;==========================================
"RTN","PXRMP4I",207,0)
SLLC ;Save the Location List classes.
"RTN","PXRMP4I",208,0)
 N CDATE,CLASS,IEN,PDATE
"RTN","PXRMP4I",209,0)
 D BMES^XPDUTL("Saving Location List Classes")
"RTN","PXRMP4I",210,0)
 S CDATE=$$NOW^XLFDT
"RTN","PXRMP4I",211,0)
 S PDATE=$$FMADD^XLFDT(CDATE,30)
"RTN","PXRMP4I",212,0)
 S ^XTMP("PXRMLLCS",0)=PDATE_U_CDATE_U_"LOCATION LIST CLASSES"
"RTN","PXRMP4I",213,0)
 S IEN=0
"RTN","PXRMP4I",214,0)
 F  S IEN=+$O(^PXRMD(810.9,IEN)) Q:IEN=0  D
"RTN","PXRMP4I",215,0)
 . S CLASS=$P(^PXRMD(810.9,IEN,0),U,2)
"RTN","PXRMP4I",216,0)
 . I CLASS'="" S ^XTMP("PXRMLLCS",IEN)=CLASS
"RTN","PXRMP4I",217,0)
 Q
"RTN","PXRMP4I",218,0)
 ;
"RTN","PXRMP4I",219,0)
 ;==========================================
"RTN","PXRMP4I",220,0)
SMEXINS ;Silent mode install.
"RTN","PXRMP4I",221,0)
 N EXARRAY,IC,IEN,LUVALUE,PXRMINST,TEXT
"RTN","PXRMP4I",222,0)
 S PXRMINST=1
"RTN","PXRMP4I",223,0)
 D EXARRAY^PXRMP4IW(1,.EXARRAY)
"RTN","PXRMP4I",224,0)
 S IC=0
"RTN","PXRMP4I",225,0)
 F  S IC=$O(EXARRAY(IC)) Q:'IC  D
"RTN","PXRMP4I",226,0)
 .M LUVALUE=EXARRAY(IC)
"RTN","PXRMP4I",227,0)
 .S IEN=+$$FIND1^DIC(811.8,"","KU",.LUVALUE)
"RTN","PXRMP4I",228,0)
 .I IEN'=0 D
"RTN","PXRMP4I",229,0)
 .. N TEXT
"RTN","PXRMP4I",230,0)
 .. I LUVALUE(1)["PARAMETER" S TEXT="Installing entry "_LUVALUE(1)
"RTN","PXRMP4I",231,0)
 .. E  S TEXT="Installing reminder "_LUVALUE(1)
"RTN","PXRMP4I",232,0)
 .. D BMES^XPDUTL(TEXT)
"RTN","PXRMP4I",233,0)
 .. D INSTALL^PXRMEXSI(IEN,1)
"RTN","PXRMP4I",234,0)
 Q
"RTN","PXRMP4I",235,0)
 ;
"RTN","PXRMP4I",236,0)
 ;==========================================
"RTN","PXRMP4I",237,0)
SPLT ;Set the Patient List Type field. In the original version the list
"RTN","PXRMP4I",238,0)
 ;was private only if the creator was stored. In the new version the
"RTN","PXRMP4I",239,0)
 ;TYPE field will be used to mark a list as public or private and
"RTN","PXRMP4I",240,0)
 ;the creator will be stored for all lists.
"RTN","PXRMP4I",241,0)
 N CREATOR,IEN,TYPE
"RTN","PXRMP4I",242,0)
 D BMES^XPDUTL("Setting Patient List TYPE field")
"RTN","PXRMP4I",243,0)
 S IEN=0
"RTN","PXRMP4I",244,0)
 F  S IEN=+$O(^PXRMXP(810.5,IEN)) Q:IEN=0  D
"RTN","PXRMP4I",245,0)
 . S CREATOR=$P(^PXRMXP(810.5,IEN,0),U,7)
"RTN","PXRMP4I",246,0)
 . S TYPE=$S(CREATOR="":"PUB",1:"PVT")
"RTN","PXRMP4I",247,0)
 . S $P(^PXRMXP(810.5,IEN,0),U,8)=TYPE
"RTN","PXRMP4I",248,0)
 Q
"RTN","PXRMP4I",249,0)
 ;
"RTN","PXRMP4I",250,0)
 ;==========================================
"RTN","PXRMP4I",251,0)
SRSVC ;Save reminder report template service categories.
"RTN","PXRMP4I",252,0)
 N CDATE,IEN,IND,PDATE,SVCL
"RTN","PXRMP4I",253,0)
 D BMES^XPDUTL("Saving reminder report service categories")
"RTN","PXRMP4I",254,0)
 S CDATE=$$NOW^XLFDT
"RTN","PXRMP4I",255,0)
 S PDATE=$$FMADD^XLFDT(CDATE,30)
"RTN","PXRMP4I",256,0)
 S ^XTMP("PXRMRSVC",0)=PDATE_U_CDATE_U_"SERVICE CATEGORIES"
"RTN","PXRMP4I",257,0)
 S IEN=0
"RTN","PXRMP4I",258,0)
 F  S IEN=+$O(^PXRMPT(810.1,IEN)) Q:IEN=0  D
"RTN","PXRMP4I",259,0)
 . S SVCL="",IND=0
"RTN","PXRMP4I",260,0)
 . F  S IND=+$O(^PXRMPT(810.1,IEN,8,IND)) Q:IND=0  D
"RTN","PXRMP4I",261,0)
 .. I SVCL="" S SVCL=^PXRMPT(810.1,IEN,8,IND,0)
"RTN","PXRMP4I",262,0)
 .. E  S SVCL=SVCL_","_^PXRMPT(810.1,IEN,8,IND,0)
"RTN","PXRMP4I",263,0)
 . I SVCL'="" S ^XTMP("PXRMRSVC",IEN)=SVCL
"RTN","PXRMP4I",264,0)
 Q
"RTN","PXRMP4I",265,0)
 ;
"RTN","PXRMP4I",266,0)
 ;==========================================
"RTN","PXRMP4I",267,0)
SSPC ;Save the Sponsor classes.
"RTN","PXRMP4I",268,0)
 N CDATE,CLASS,IEN,PDATE
"RTN","PXRMP4I",269,0)
 D BMES^XPDUTL("Saving Sponsor Classes")
"RTN","PXRMP4I",270,0)
 S CDATE=$$NOW^XLFDT
"RTN","PXRMP4I",271,0)
 S PDATE=$$FMADD^XLFDT(CDATE,30)
"RTN","PXRMP4I",272,0)
 S ^XTMP("PXRMSPCS",0)=PDATE_U_CDATE_U_"SPONSOR CLASSES"
"RTN","PXRMP4I",273,0)
 S IEN=0
"RTN","PXRMP4I",274,0)
 F  S IEN=+$O(^PXRMD(811.6,IEN)) Q:IEN=0  D
"RTN","PXRMP4I",275,0)
 . S CLASS=$P(^PXRMD(811.6,IEN,0),U,2)
"RTN","PXRMP4I",276,0)
 . S ^XTMP("PXRMSPCS",IEN)=CLASS
"RTN","PXRMP4I",277,0)
 Q
"RTN","PXRMP4I",278,0)
 ;
"RTN","PXRMP4I1")
0^147^B81567254
"RTN","PXRMP4I1",1,0)
PXRMP4I1 ; SLC/PKR - PXRM*2.0*4 init routine. ;06/28/2006
"RTN","PXRMP4I1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMP4I1",3,0)
 ;
"RTN","PXRMP4I1",4,0)
 ;==========================================
"RTN","PXRMP4I1",5,0)
CLEAN(FILENUM,NAME) ;Clean entry NAME in file number FILENUM.
"RTN","PXRMP4I1",6,0)
 N DFDA,ENTRY,FDAIEN,FIELD,GBL,IEN,IENS,IND,LOCK,MSG,REQLIST,SFDA
"RTN","PXRMP4I1",7,0)
 S IEN=$$FIND1^DIC(FILENUM,"","BX",NAME)
"RTN","PXRMP4I1",8,0)
 I IEN=0 Q
"RTN","PXRMP4I1",9,0)
 S GBL=$$GET1^DID(FILENUM,"","","GLOBAL NAME")
"RTN","PXRMP4I1",10,0)
 I GBL="" Q
"RTN","PXRMP4I1",11,0)
 S ENTRY=GBL_IEN_")"
"RTN","PXRMP4I1",12,0)
 S IENS=IEN_","
"RTN","PXRMP4I1",13,0)
 S DFDA(FILENUM,IENS,.01)="@"
"RTN","PXRMP4I1",14,0)
 D FILE^DID(FILENUM,"N","REQUIRED IDENTIFIERS","REQLIST","MSG")
"RTN","PXRMP4I1",15,0)
 S IND=0
"RTN","PXRMP4I1",16,0)
 F  S IND=$O(REQLIST("REQUIRED IDENTIFIERS",IND)) Q:IND=""  D
"RTN","PXRMP4I1",17,0)
 . S FIELD=REQLIST("REQUIRED IDENTIFIERS",IND,"FIELD")
"RTN","PXRMP4I1",18,0)
 . S SFDA(FILENUM,"+1,",FIELD)=$$GET1^DIQ(FILENUM,IENS,FIELD,"","","MSG")
"RTN","PXRMP4I1",19,0)
 S FDAIEN(1)=IEN
"RTN","PXRMP4I1",20,0)
 S LOCK=0
"RTN","PXRMP4I1",21,0)
 F IND=1:1:3 Q:LOCK  D
"RTN","PXRMP4I1",22,0)
 . L +@ENTRY:2
"RTN","PXRMP4I1",23,0)
 . S LOCK=$T
"RTN","PXRMP4I1",24,0)
 I LOCK=0 D  Q
"RTN","PXRMP4I1",25,0)
 . N TEXT
"RTN","PXRMP4I1",26,0)
 . S TEXT="No lock for file "_FILENUM_" entry "_IEN
"RTN","PXRMP4I1",27,0)
 . D BMES^XPDUTL(.TEXT)
"RTN","PXRMP4I1",28,0)
 D FILE^DIE("","DFDA","MSG")
"RTN","PXRMP4I1",29,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4I1",30,0)
 K MSG
"RTN","PXRMP4I1",31,0)
 D UPDATE^DIE("E","SFDA","FDAIEN","MSG")
"RTN","PXRMP4I1",32,0)
 L -@ENTRY
"RTN","PXRMP4I1",33,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4I1",34,0)
 Q
"RTN","PXRMP4I1",35,0)
 ;
"RTN","PXRMP4I1",36,0)
 ;==========================================
"RTN","PXRMP4I1",37,0)
GECDIA ;
"RTN","PXRMP4I1",38,0)
 ;
"RTN","PXRMP4I1",39,0)
 D BMES^XPDUTL("Re-Setting Heath FactorS Syn. Entries.")
"RTN","PXRMP4I1",40,0)
 N HFIEN,SYN1,SYN0
"RTN","PXRMP4I1",41,0)
 S FHIEN=0
"RTN","PXRMP4I1",42,0)
 S SYN1="GEC3F CARE RECOMMENDATIONS 1"
"RTN","PXRMP4I1",43,0)
 S SYN0="GEC3F CARE RECOMMENDATIONS 0"
"RTN","PXRMP4I1",44,0)
 ;
"RTN","PXRMP4I1",45,0)
 ;**VA-DG GEC PROGNOSIS
"RTN","PXRMP4I1",46,0)
 S FHIEN=$O(^AUTTHF("B","GEC EXACERBATION CHR ILLNESS LAST 7D-YES",0))
"RTN","PXRMP4I1",47,0)
 S $P(^AUTTHF(FHIEN,0),"^",9)=SYN1
"RTN","PXRMP4I1",48,0)
 ;
"RTN","PXRMP4I1",49,0)
 S FHIEN=$O(^AUTTHF("B","GEC EXACERBATION CHR ILLNESS LAST 7D-NO",0)) D SYN0
"RTN","PXRMP4I1",50,0)
 ;
"RTN","PXRMP4I1",51,0)
 S FHIEN=$O(^AUTTHF("B","GEC CAPABLE INCREASED INDEPENDENCE-YES",0))
"RTN","PXRMP4I1",52,0)
 S $P(^AUTTHF(FHIEN,0),"^",9)=SYN1
"RTN","PXRMP4I1",53,0)
 ;
"RTN","PXRMP4I1",54,0)
 S FHIEN=$O(^AUTTHF("B","GEC CAPABLE INCREASED INDEPENDENCE-NO",0)) D SYN0
"RTN","PXRMP4I1",55,0)
 ;
"RTN","PXRMP4I1",56,0)
 S FHIEN=$O(^AUTTHF("B","GEC LIFE EXPECTANCY < 6MO-YES",0))
"RTN","PXRMP4I1",57,0)
 S $P(^AUTTHF(FHIEN,0),"^",9)=SYN1
"RTN","PXRMP4I1",58,0)
 ;
"RTN","PXRMP4I1",59,0)
 S FHIEN=$O(^AUTTHF("B","GEC LIFE EXPECTANCY < 6MO-NO",0)) D SYN0
"RTN","PXRMP4I1",60,0)
 ;
"RTN","PXRMP4I1",61,0)
 ;**VA-DG GEC WEIGHT BEARING
"RTN","PXRMP4I1",62,0)
 S FHIEN=$O(^AUTTHF("B","GEC FULL WEIGHT BEARING",0)) D SYN0
"RTN","PXRMP4I1",63,0)
 ;
"RTN","PXRMP4I1",64,0)
 S FHIEN=$O(^AUTTHF("B","GEC PARTIAL WEIGHT BEARING",0)) D SYN0
"RTN","PXRMP4I1",65,0)
 ;
"RTN","PXRMP4I1",66,0)
 S FHIEN=$O(^AUTTHF("B","GEC NON WEIGHTBEARING",0)) D SYN0
"RTN","PXRMP4I1",67,0)
 ;
"RTN","PXRMP4I1",68,0)
 ;**VA-DG GEC DIET
"RTN","PXRMP4I1",69,0)
 ;
"RTN","PXRMP4I1",70,0)
 S FHIEN=$O(^AUTTHF("B","GEC REGULAR DIET",0)) D SYN0
"RTN","PXRMP4I1",71,0)
 ;
"RTN","PXRMP4I1",72,0)
 S FHIEN=$O(^AUTTHF("B","GEC MODIFIED DIET",0)) D SYN0
"RTN","PXRMP4I1",73,0)
 ;
"RTN","PXRMP4I1",74,0)
 ;**VA-DG GEC PROSTHETIC REQUESTS
"RTN","PXRMP4I1",75,0)
 ;
"RTN","PXRMP4I1",76,0)
 S FHIEN=$O(^AUTTHF("B","GEC HOSPITAL BED",0)) D SYN0
"RTN","PXRMP4I1",77,0)
 ;
"RTN","PXRMP4I1",78,0)
 S FHIEN=$O(^AUTTHF("B","GEC SPECIAL MATTRESS",0)) D SYN0
"RTN","PXRMP4I1",79,0)
 ;
"RTN","PXRMP4I1",80,0)
 S FHIEN=$O(^AUTTHF("B","GEC TRAPEZE",0)) D SYN0
"RTN","PXRMP4I1",81,0)
 ;
"RTN","PXRMP4I1",82,0)
 S FHIEN=$O(^AUTTHF("B","GEC WALKER/ASSISTIVE DEVICE",0)) D SYN0
"RTN","PXRMP4I1",83,0)
 ;
"RTN","PXRMP4I1",84,0)
 S FHIEN=$O(^AUTTHF("B","GEC CANE",0)) D SYN0
"RTN","PXRMP4I1",85,0)
 ;
"RTN","PXRMP4I1",86,0)
 S FHIEN=$O(^AUTTHF("B","GEC WHEELCHAIR",0)) D SYN0
"RTN","PXRMP4I1",87,0)
 ;
"RTN","PXRMP4I1",88,0)
 S FHIEN=$O(^AUTTHF("B","GEC ADL EQUIPMENT",0)) D SYN0
"RTN","PXRMP4I1",89,0)
 ;
"RTN","PXRMP4I1",90,0)
 S FHIEN=$O(^AUTTHF("B","GEC ORTHOTIC/SPLINT",0)) D SYN0
"RTN","PXRMP4I1",91,0)
 ;
"RTN","PXRMP4I1",92,0)
 S FHIEN=$O(^AUTTHF("B","GEC OTHER EQUIPMENT",0)) D SYN0
"RTN","PXRMP4I1",93,0)
 Q
"RTN","PXRMP4I1",94,0)
 ;
"RTN","PXRMP4I1",95,0)
 ;==========================================
"RTN","PXRMP4I1",96,0)
RENAME(FILENUM,OLDNAME,NEWNAME) ;Rename entry OLDNAME to NEWNAME in
"RTN","PXRMP4I1",97,0)
 ;file number FILENUM.
"RTN","PXRMP4I1",98,0)
 N DA,DIE,DR
"RTN","PXRMP4I1",99,0)
 S DA=$$FIND1^DIC(FILENUM,"","BX",OLDNAME)
"RTN","PXRMP4I1",100,0)
 I DA=0 Q
"RTN","PXRMP4I1",101,0)
 S DIE=FILENUM
"RTN","PXRMP4I1",102,0)
 S DR=".01///^S X=NEWNAME"
"RTN","PXRMP4I1",103,0)
 D ^DIE
"RTN","PXRMP4I1",104,0)
 Q
"RTN","PXRMP4I1",105,0)
 ;
"RTN","PXRMP4I1",106,0)
 ;==========================================
"RTN","PXRMP4I1",107,0)
RELTEMP ;Rename the Extract list templates.
"RTN","PXRMP4I1",108,0)
 N IND,NEWNAME,NUM,OLDNAME
"RTN","PXRMP4I1",109,0)
 D BMES^XPDUTL("Renaming extract List Templates")
"RTN","PXRMP4I1",110,0)
 S NUM=0
"RTN","PXRMP4I1",111,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING EDIT",NEWNAME(NUM)="PXRM COUNT RULE EDIT"
"RTN","PXRMP4I1",112,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING GROUPS",NEWNAME(NUM)="PXRM EXTRACT COUNTING GROUPS"
"RTN","PXRMP4I1",113,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING GRP EDIT",NEWNAME(NUM)="PXRM EXTRACT COUNTING GRP EDIT"
"RTN","PXRMP4I1",114,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDINGS",NEWNAME(NUM)="PXRM EXTRACT COUNTING RULES"
"RTN","PXRMP4I1",115,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETERS",NEWNAME(NUM)="PXRM EXTRACT DEFINITIONS"
"RTN","PXRMP4I1",116,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETER EDIT",NEWNAME(NUM)="PXRM EXTRACT DEFINITION EDIT"
"RTN","PXRMP4I1",117,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETER DISPLAY",NEWNAME(NUM)="PXRM EXTRACT DEF DISPLAY"
"RTN","PXRMP4I1",118,0)
 F IND=1:1:NUM D
"RTN","PXRMP4I1",119,0)
 . D RENAME(409.61,OLDNAME(IND),NEWNAME(IND))
"RTN","PXRMP4I1",120,0)
 . D CLEAN(409.61,NEWNAME(IND))
"RTN","PXRMP4I1",121,0)
 D CLEAN(409.61,"PXRM EXTRACT HELP")
"RTN","PXRMP4I1",122,0)
 D CLEAN(409.61,"PXRM EXTRACT HISTORY")
"RTN","PXRMP4I1",123,0)
 D CLEAN(409.61,"PXRM EXTRACT MANAGEMENT")
"RTN","PXRMP4I1",124,0)
 D CLEAN(409.61,"PXRM EXTRACT SUMMARY")
"RTN","PXRMP4I1",125,0)
 D CLEAN(409.61,"PXRM EXTRACT TRANSMISSIONS")
"RTN","PXRMP4I1",126,0)
 D CLEAN(409.61,"PXRM LIST RULE MANAGEMENT")
"RTN","PXRMP4I1",127,0)
 Q
"RTN","PXRMP4I1",128,0)
 ;
"RTN","PXRMP4I1",129,0)
 ;==========================================
"RTN","PXRMP4I1",130,0)
REOPTS ;Rename the Extract options.
"RTN","PXRMP4I1",131,0)
 N IND,NEWNAME,NUM,OLDNAME
"RTN","PXRMP4I1",132,0)
 D BMES^XPDUTL("Renaming extract options")
"RTN","PXRMP4I1",133,0)
 S NUM=0
"RTN","PXRMP4I1",134,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDINGS",NEWNAME(NUM)="PXRM EXTRACT COUNTING RULES"
"RTN","PXRMP4I1",135,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT GROUPS",NEWNAME(NUM)="PXRM EXTRACT COUNTING GROUPS"
"RTN","PXRMP4I1",136,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETERS",NEWNAME(NUM)="PXRM EXTRACT DEFINITION"
"RTN","PXRMP4I1",137,0)
 F IND=1:1:NUM D
"RTN","PXRMP4I1",138,0)
 . D RENAME(19,OLDNAME(IND),NEWNAME(IND))
"RTN","PXRMP4I1",139,0)
 . D CLEAN(19,NEWNAME(IND))
"RTN","PXRMP4I1",140,0)
 D CLEAN(19,"PXRM EXTRACT MENU")
"RTN","PXRMP4I1",141,0)
 D CLEAN(19,"PXRM EXTRACT MANAGEMENT")
"RTN","PXRMP4I1",142,0)
 D CLEAN(19,"PXRM EXTRACT PATIENT LIST")
"RTN","PXRMP4I1",143,0)
 D CLEAN(19,"PXRM LIST RULE MANAGEMENT")
"RTN","PXRMP4I1",144,0)
 Q
"RTN","PXRMP4I1",145,0)
 ;
"RTN","PXRMP4I1",146,0)
 ;==========================================
"RTN","PXRMP4I1",147,0)
REPROTS ;Rename the Extract protocols.
"RTN","PXRMP4I1",148,0)
 N IND,NEWNAME,NUM,OLDNAME
"RTN","PXRMP4I1",149,0)
 D BMES^XPDUTL("Renaming extract protocols")
"RTN","PXRMP4I1",150,0)
 S NUM=0
"RTN","PXRMP4I1",151,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING CREATE",NEWNAME(NUM)="PXRM EXTRACT COUNTING RULE CREATE"
"RTN","PXRMP4I1",152,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING DISPLAY MENU",NEWNAME(NUM)="PXRM EXTRACT COUNTING RULE DISPLAY MENU"
"RTN","PXRMP4I1",153,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING DISPLAY/EDIT",NEWNAME(NUM)="PXRM EXTRACT COUNTING RULE DISPLAY/EDIT"
"RTN","PXRMP4I1",154,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING EDIT",NEWNAME(NUM)="PXRM EXTRACT COUNTING RULE EDIT"
"RTN","PXRMP4I1",155,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING EXIT",NEWNAME(NUM)="PXRM EXTRACT COUNTING RULE EXIT"
"RTN","PXRMP4I1",156,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING GROUP CREATE",NEWNAME(NUM)="PXRM EXTRACT COUNTING GROUP CREATE"
"RTN","PXRMP4I1",157,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING GROUP DISPLAY MENU",NEWNAME(NUM)="PXRM EXTRACT COUNTING GROUP DISPLAY MENU"
"RTN","PXRMP4I1",158,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING GROUP DISPLAY/EDIT",NEWNAME(NUM)="PXRM EXTRACT COUNTING GROUP DISPLAY/EDIT"
"RTN","PXRMP4I1",159,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING GROUP EDIT",NEWNAME(NUM)="PXRM EXTRACT COUNTING GROUP EDIT"
"RTN","PXRMP4I1",160,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING GROUP EXIT",NEWNAME(NUM)="PXRM EXTRACT COUNTING GROUP EXIT"
"RTN","PXRMP4I1",161,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING GROUP MENU",NEWNAME(NUM)="PXRM EXTRACT COUNTING GROUP MENU"
"RTN","PXRMP4I1",162,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING GROUP SELECT ENTRY",NEWNAME(NUM)="PXRM EXTRACT COUNTING GROUP SELECT ENTRY"
"RTN","PXRMP4I1",163,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING GROUPS",NEWNAME(NUM)="PXRM EXTRACT COUNTING GROUPS"
"RTN","PXRMP4I1",164,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING MENU",NEWNAME(NUM)="PXRM EXTRACT COUNTING RULE MENU"
"RTN","PXRMP4I1",165,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT FINDING SELECT ENTRY",NEWNAME(NUM)="PXRM EXTRACT COUNTING RULE SELECT ENTRY"
"RTN","PXRMP4I1",166,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETER CREATE",NEWNAME(NUM)="PXRM EXTRACT DEFINITION CREATE"
"RTN","PXRMP4I1",167,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETER DISPLAY MENU",NEWNAME(NUM)="PXRM EXTRACT DEFINITION DISPLAY MENU"
"RTN","PXRMP4I1",168,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETER DISPLAY/EDIT",NEWNAME(NUM)="PXRM EXTRACT DEFINITION DISPLAY/EDIT"
"RTN","PXRMP4I1",169,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETER EDIT",NEWNAME(NUM)="PXRM EXTRACT DEFINITION EDIT"
"RTN","PXRMP4I1",170,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETER EXIT",NEWNAME(NUM)="PXRM EXTRACT DEFINITION EXIT"
"RTN","PXRMP4I1",171,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETER MANAGEMENT",NEWNAME(NUM)="PXRM EXTRACT DEFINITION MANAGEMENT"
"RTN","PXRMP4I1",172,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETER MENU",NEWNAME(NUM)="PXRM EXTRACT DEFINITION MENU"
"RTN","PXRMP4I1",173,0)
 S NUM=NUM+1,OLDNAME(NUM)="PXRM EXTRACT PARAMETER SELECT ENTRY",NEWNAME(NUM)="PXRM EXTRACT DEFINITION SELECT ENTRY"
"RTN","PXRMP4I1",174,0)
 F IND=1:1:NUM D
"RTN","PXRMP4I1",175,0)
 . D RENAME(101,OLDNAME(IND),NEWNAME(IND))
"RTN","PXRMP4I1",176,0)
 . D CLEAN(101,NEWNAME(IND))
"RTN","PXRMP4I1",177,0)
 Q
"RTN","PXRMP4I1",178,0)
 ;
"RTN","PXRMP4I1",179,0)
 ;==========================================
"RTN","PXRMP4I1",180,0)
SYN0 ;
"RTN","PXRMP4I1",181,0)
 S $P(^AUTTHF(FHIEN,0),"^",9)=SYN0
"RTN","PXRMP4I1",182,0)
 Q
"RTN","PXRMP4I1",183,0)
 ;
"RTN","PXRMP4I1",184,0)
 ;==========================================
"RTN","PXRMP4I1",185,0)
SLABENOD ;Make sure the enodes are set correctly for lab findings.
"RTN","PXRMP4I1",186,0)
 N DA,FI,IEN,X
"RTN","PXRMP4I1",187,0)
 D BMES^XPDUTL("Setting ENODEs for lab findings.")
"RTN","PXRMP4I1",188,0)
 S IEN=0
"RTN","PXRMP4I1",189,0)
 F  S IEN=+$O(^PXD(811.9,IEN)) Q:IEN=0  D
"RTN","PXRMP4I1",190,0)
 . I '$D(^PXD(811.9,IEN,20,"E","LAB(60,")) Q
"RTN","PXRMP4I1",191,0)
 . K ^PXD(811.9,IEN,20,"E","LAB(60,")
"RTN","PXRMP4I1",192,0)
 . S FI=0
"RTN","PXRMP4I1",193,0)
 . F  S FI=+$O(^PXD(811.9,IEN,20,FI)) Q:FI=0  D
"RTN","PXRMP4I1",194,0)
 .. S X=$P(^PXD(811.9,IEN,20,FI,0),U,1)
"RTN","PXRMP4I1",195,0)
 .. I $P(X,";",2)'["LAB(60," Q
"RTN","PXRMP4I1",196,0)
 .. S DA=FI,DA(1)=IEN
"RTN","PXRMP4I1",197,0)
 .. D SENODE^PXRMENOD(.X,.DA,811.9)
"RTN","PXRMP4I1",198,0)
 ;
"RTN","PXRMP4I1",199,0)
 S IEN=0
"RTN","PXRMP4I1",200,0)
 F  S IEN=+$O(^PXRMD(811.5,IEN)) Q:IEN=0  D
"RTN","PXRMP4I1",201,0)
 . I '$D(^PXRMD(811.5,IEN,20,"E","LAB(60,")) Q
"RTN","PXRMP4I1",202,0)
 . K ^PXRMD(811.5,IEN,20,"E","LAB(60,")
"RTN","PXRMP4I1",203,0)
 . S FI=0
"RTN","PXRMP4I1",204,0)
 . F  S FI=+$O(^PXRMD(811.5,IEN,20,FI)) Q:FI=0  D
"RTN","PXRMP4I1",205,0)
 .. S X=$P(^PXRMD(811.5,IEN,20,FI,0),U,1)
"RTN","PXRMP4I1",206,0)
 .. I $P(X,";",2)'["LAB(60," Q
"RTN","PXRMP4I1",207,0)
 .. S DA=FI,DA(1)=IEN
"RTN","PXRMP4I1",208,0)
 .. D SENODE^PXRMENOD(.X,.DA,811.5)
"RTN","PXRMP4I1",209,0)
 Q
"RTN","PXRMP4I1",210,0)
 ;
"RTN","PXRMP4I1",211,0)
 ;==========================================
"RTN","PXRMP4I1",212,0)
SNEXTIP ;Set the INCLUDE DECEASED PATIENTS and INCLUDE TEST PATIENTS
"RTN","PXRMP4I1",213,0)
 ;parameters in the the national extracts.
"RTN","PXRMP4I1",214,0)
 N IEN,NAME,SEQ
"RTN","PXRMP4I1",215,0)
 F NAME="VA-IHD QUERI","VA-MH QUERI" D
"RTN","PXRMP4I1",216,0)
 . S IEN=$O(^PXRM(810.2,"B",NAME,""))
"RTN","PXRMP4I1",217,0)
 . S SEQ=0
"RTN","PXRMP4I1",218,0)
 . F  S SEQ=+$O(^PXRM(810.2,IEN,10,SEQ)) Q:SEQ=0  D
"RTN","PXRMP4I1",219,0)
 .. S $P(^PXRM(810.2,IEN,10,SEQ,0),U,4,5)=1_U_0
"RTN","PXRMP4I1",220,0)
 Q
"RTN","PXRMP4I1",221,0)
 ;
"RTN","PXRMP4IW")
0^120^B41425248
"RTN","PXRMP4IW",1,0)
PXRMP4IW ; SLC/PKR - PXRM*2.0*4 init routine. ;08/14/2006
"RTN","PXRMP4IW",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMP4IW",3,0)
 Q
"RTN","PXRMP4IW",4,0)
 ;
"RTN","PXRMP4IW",5,0)
 ;==========================================
"RTN","PXRMP4IW",6,0)
EXARRAY(MODE,ARRAY) ;List of exchange entries used by delete and install
"RTN","PXRMP4IW",7,0)
 S ARRAY(1,1)="VA-WH BILATERAL MASTECTOMY"
"RTN","PXRMP4IW",8,0)
 I MODE S ARRAY(1,2)="07/06/2005@14:12:52"
"RTN","PXRMP4IW",9,0)
 S ARRAY(2,1)="VA-MST SCREENING"
"RTN","PXRMP4IW",10,0)
 I MODE S ARRAY(2,2)="07/11/2005@14:08:48"
"RTN","PXRMP4IW",11,0)
 S ARRAY(3,1)="VA-GEC REFERRAL CARE RECOMMENDATION"
"RTN","PXRMP4IW",12,0)
 I MODE S ARRAY(3,2)="07/11/2005@14:13:35"
"RTN","PXRMP4IW",13,0)
 S ARRAY(4,1)="VA-MHV INFLUENZA VACCINE"
"RTN","PXRMP4IW",14,0)
 I MODE S ARRAY(4,2)="11/22/2005@14:34:28"
"RTN","PXRMP4IW",15,0)
 ;S ARRAY(5,1)="VA-HTN ASSESSMENT BP >=160/100 REMINDER ONLY"
"RTN","PXRMP4IW",16,0)
 ;I MODE S ARRAY(5,2)="12/05/2005@13:50:07"
"RTN","PXRMP4IW",17,0)
 S ARRAY(6,1)="VA-QUERI LIST RULE UPDATE"
"RTN","PXRMP4IW",18,0)
 I MODE S ARRAY(6,2)="04/11/2006@14:31:20"
"RTN","PXRMP4IW",19,0)
 S ARRAY(6,1)="VA-GEC REFERRAL CARE RECOMMENDATION"
"RTN","PXRMP4IW",20,0)
 I MODE S ARRAY(6,2)="04/27/2006@15:16:55"
"RTN","PXRMP4IW",21,0)
 S ARRAY(6,1)="VA-GEC REFERRAL NURSING ASSESSMENT"
"RTN","PXRMP4IW",22,0)
 I MODE S ARRAY(6,2)="04/27/2006@15:16:08"
"RTN","PXRMP4IW",23,0)
 S ARRAY(7,1)="VA-*QUERI LIST RULE UPDATES"
"RTN","PXRMP4IW",24,0)
 I MODE S ARRAY(6,2)="07/03/2006@11:00:54"
"RTN","PXRMP4IW",25,0)
 S ARRAY(8,1)="VA-HTN ASSESSMENT BP >=140/90"
"RTN","PXRMP4IW",26,0)
 I MODE S ARRAY(8,2)="07/11/2006@14:35:17"
"RTN","PXRMP4IW",27,0)
 S ARRAY(9,1)="VA-HTN ASSESSMENT BP >=160/100"
"RTN","PXRMP4IW",28,0)
 I MODE S ARRAY(9,2)="07/11/2006@14:35:42"
"RTN","PXRMP4IW",29,0)
 Q
"RTN","PXRMP4IW",30,0)
 ;
"RTN","PXRMP4IW",31,0)
 ;===============================================================
"RTN","PXRMP4IW",32,0)
MHVWEB ;Change the URL for the MHV reminders.
"RTN","PXRMP4IW",33,0)
 N DA,FDA,MSG,NAME,TITLE,URL
"RTN","PXRMP4IW",34,0)
 F NAME="VA-MHV CERVICAL CANCER SCREEN","VA-MHV DIABETES FOOT EXAM","VA-MHV DIABETES RETINAL EXAM","VA-MHV HYPERTENSION","VA-MHV INFLUENZA VACCINE","VA-MHV MAMMOGRAM SCREENING" D
"RTN","PXRMP4IW",35,0)
 .S DA=$O(^PXD(811.9,"B",NAME,"")) Q:DA'>0
"RTN","PXRMP4IW",36,0)
 .K ^PXD(811.9,DA,50)
"RTN","PXRMP4IW",37,0)
 .S DA(1)=DA,DA=0
"RTN","PXRMP4IW",38,0)
 .I NAME="VA-MHV CERVICAL CANCER SCREEN" D
"RTN","PXRMP4IW",39,0)
 ..S TITLE="PAP TEST",URL="https://www2.healthwise.net/myhealthevet/Content/StdDocument.aspx?DOCHWID=hw5266&SECHWID=hw5269"
"RTN","PXRMP4IW",40,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",41,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",42,0)
 ..;
"RTN","PXRMP4IW",43,0)
 ..S TITLE="Cervical Cancer",URL="https://www2.healthwise.net/myhealthevet/Content/StdDocument.aspx?DOCHWID=tw9600&SECHWID=tw9601"
"RTN","PXRMP4IW",44,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",45,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",46,0)
 .;
"RTN","PXRMP4IW",47,0)
 .I NAME="VA-MHV DIABETES FOOT EXAM" D
"RTN","PXRMP4IW",48,0)
 ..S TITLE="American Diabetes Association Foot Complications",URL="http://www.diabetes.org/type-2-diabetes/foot-complications.jsp"
"RTN","PXRMP4IW",49,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",50,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",51,0)
 ..;
"RTN","PXRMP4IW",52,0)
 ..S TITLE="Diabetic Neuropathy",URL="https://www2.healthwise.net/myhealthevet/Content/StdDocument.aspx?DOCHWID=tf4413&SECHWID=tf4416"
"RTN","PXRMP4IW",53,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",54,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",55,0)
 ..;
"RTN","PXRMP4IW",56,0)
 ..S TITLE="Diabetes and Foot Problems",URL="https://www2.healthwise.net/myhealthevet/Content/StdDocument.aspx?DOCHWID=uq2525abc&SECHWID=uq2525abc-sec"
"RTN","PXRMP4IW",57,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",58,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",59,0)
 .;
"RTN","PXRMP4IW",60,0)
 .I NAME="VA-MHV DIABETES RETINAL EXAM" D
"RTN","PXRMP4IW",61,0)
 ..S TITLE="Diabetic Eye Disease",URL="https://www2.healthwise.net/myhealthevet/Content/StdDocument.aspx?DOCHWID=tf1308&SECHWID=tf1311"
"RTN","PXRMP4IW",62,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",63,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",64,0)
 ..;
"RTN","PXRMP4IW",65,0)
 ..S TITLE="American Diabetes Association- Eye Complications",URL="http://www.diabetes.org/type-2-diabetes/eye-complications.jsp"
"RTN","PXRMP4IW",66,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",67,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",68,0)
 .;
"RTN","PXRMP4IW",69,0)
 .I NAME="VA-MHV HYPERTENSION" D
"RTN","PXRMP4IW",70,0)
 ..S TITLE="NHLBI: Your Guide to Lowering High Blood Pressure",URL="http://www.nhlbi.nih.gov/hbp/index.html"
"RTN","PXRMP4IW",71,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",72,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",73,0)
 ..;
"RTN","PXRMP4IW",74,0)
 ..S TITLE="Hypertension",URL="https://www2.healthwise.net/myhealthevet/Content/StdDocument.aspx?DOCHWID=hw62787&SECHWID=hw62789"
"RTN","PXRMP4IW",75,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",76,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",77,0)
 .;
"RTN","PXRMP4IW",78,0)
 .I NAME="VA-MHV INFLUENZA VACCINE" D
"RTN","PXRMP4IW",79,0)
 ..S TITLE="CDC Website on Influenza",URL="http://www.cdc.gov/flu/"
"RTN","PXRMP4IW",80,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",81,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",82,0)
 ..;
"RTN","PXRMP4IW",83,0)
 ..S TITLE="Influenza",URL="https://www2.healthwise.net/myhealthevet/Content/StdDocument.aspx?DOCHWID=hw122012&SECHWID=hw122014"
"RTN","PXRMP4IW",84,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",85,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",86,0)
 .;
"RTN","PXRMP4IW",87,0)
 .I NAME="VA-MHV MAMMOGRAM SCREENING" D
"RTN","PXRMP4IW",88,0)
 ..S TITLE="Breast Cancer",URL="https://www2.healthwise.net/myhealthevet/Content/StdDocument.aspx?DOCHWID=tv3614&SECHWID=tv3617"
"RTN","PXRMP4IW",89,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",90,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",91,0)
 ..;
"RTN","PXRMP4IW",92,0)
 ..S TITLE="Mammogram",URL="https://www2.healthwise.net/myhealthevet/Content/StdDocument.aspx?DOCHWID=hw214210&SECHWID=hw214213"
"RTN","PXRMP4IW",93,0)
 ..S FDA(811.9002,"?+1,"_DA(1)_",",.01)=URL,FDA(811.9002,"?+1,"_DA(1)_",",.02)=TITLE
"RTN","PXRMP4IW",94,0)
 ..D UPDATE^DIE("","FDA","","MSG") I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMP4IW",95,0)
 Q
"RTN","PXRMP4IW",96,0)
 ;
"RTN","PXRMP4IW",97,0)
 ;===============================================================
"RTN","PXRMP4IW",98,0)
LTL(LIST) ;This is the list of list templates that being distributed
"RTN","PXRMP4IW",99,0)
 ;in the patch.
"RTN","PXRMP4IW",100,0)
 S LIST(1)="PXRM EXTRACT COUNT RULE EDIT"
"RTN","PXRMP4IW",101,0)
 S LIST(2)="PXRM EXTRACT COUNTING GROUPS"
"RTN","PXRMP4IW",102,0)
 S LIST(3)="PXRM EXTRACT COUNTING GRP EDIT"
"RTN","PXRMP4IW",103,0)
 S LIST(4)="PXRM EXTRACT COUNTING RULES"
"RTN","PXRMP4IW",104,0)
 S LIST(5)="PXRM EXTRACT DEF DISPLAY"
"RTN","PXRMP4IW",105,0)
 S LIST(6)="PXRM EXTRACT DEFINITION EDIT"
"RTN","PXRMP4IW",106,0)
 S LIST(7)="PXRM EXTRACT DEFINITIONS"
"RTN","PXRMP4IW",107,0)
 S LIST(8)="PXRM EXTRACT HELP"
"RTN","PXRMP4IW",108,0)
 S LIST(9)="PXRM EXTRACT HISTORY"
"RTN","PXRMP4IW",109,0)
 S LIST(10)="PXRM EXTRACT MANAGEMENT"
"RTN","PXRMP4IW",110,0)
 S LIST(11)="PXRM EXTRACT SUMMARY"
"RTN","PXRMP4IW",111,0)
 S LIST(12)="PXRM EXTRACT TRANSMISSIONS"
"RTN","PXRMP4IW",112,0)
 S LIST(13)="PXRM LIST RULE MANAGEMENT"
"RTN","PXRMP4IW",113,0)
 S LIST(14)="PXRM PATIENT LIST CREATION DOC"
"RTN","PXRMP4IW",114,0)
 S LIST(15)="PXRM PATIENT LIST PATIENTS"
"RTN","PXRMP4IW",115,0)
 S LIST(16)="PXRM PATIENT LIST USER"
"RTN","PXRMP4IW",116,0)
 S LIST(17)="PXRM RULE SET TEST"
"RTN","PXRMP4IW",117,0)
 Q
"RTN","PXRMP4IW",118,0)
 ;
"RTN","PXRMPARS")
0^15^B2984777
"RTN","PXRMPARS",1,0)
PXRMPARS ; SLC/PJH - Edit PXRM(800 reminder parameters. ;06/14/2005
"RTN","PXRMPARS",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPARS",3,0)
 ;
"RTN","PXRMPARS",4,0)
 ;called by protocol PXRM EDIT SITE DISCLAIMER
"RTN","PXRMPARS",5,0)
 ;
"RTN","PXRMPARS",6,0)
DISC(DA) ;Edit default disclaimer
"RTN","PXRMPARS",7,0)
 Q:'$$LOCK(DA)
"RTN","PXRMPARS",8,0)
 N DIC,DIE,DR,Y
"RTN","PXRMPARS",9,0)
 ;Edit
"RTN","PXRMPARS",10,0)
 S DIC="^PXRM(800,",DIE=800,DR=2
"RTN","PXRMPARS",11,0)
 D ^DIE
"RTN","PXRMPARS",12,0)
 D FORMAT^PXRMDISC
"RTN","PXRMPARS",13,0)
 Q
"RTN","PXRMPARS",14,0)
 ;
"RTN","PXRMPARS",15,0)
 ;called by protocol PXRM EDIT WEB SITE
"RTN","PXRMPARS",16,0)
 ;
"RTN","PXRMPARS",17,0)
WEB(DA) ;Edit default web site
"RTN","PXRMPARS",18,0)
 Q:'$$LOCK(DA)
"RTN","PXRMPARS",19,0)
 ;Edit
"RTN","PXRMPARS",20,0)
 N DTOUT,DUOUT
"RTN","PXRMPARS",21,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMPARS",22,0)
 .D WLIST,WSET,WURL(DA)
"RTN","PXRMPARS",23,0)
 Q
"RTN","PXRMPARS",24,0)
 ;
"RTN","PXRMPARS",25,0)
WLIST ;Display web sites
"RTN","PXRMPARS",26,0)
 N FIRST,SUB,SUB1
"RTN","PXRMPARS",27,0)
 S FIRST=1,SUB=""
"RTN","PXRMPARS",28,0)
 F  S SUB=$O(^PXRM(800,DA,1,"B",SUB)) Q:SUB=""  D
"RTN","PXRMPARS",29,0)
 .S SUB1=0
"RTN","PXRMPARS",30,0)
 .F  S SUB1=$O(^PXRM(800,DA,1,"B",SUB,SUB1)) Q:'SUB1  D
"RTN","PXRMPARS",31,0)
 ..I FIRST S FIRST=0 W !!,"Choose from:",!
"RTN","PXRMPARS",32,0)
 ..W ?8,$P($G(^PXRM(800,DA,1,SUB1,0)),U),!
"RTN","PXRMPARS",33,0)
 I FIRST W !!,"No default web sites defined",!
"RTN","PXRMPARS",34,0)
 Q
"RTN","PXRMPARS",35,0)
 ;
"RTN","PXRMPARS",36,0)
WSET ;Set node if not defined
"RTN","PXRMPARS",37,0)
 S:'$D(^PXRM(800,DA,1,0)) ^PXRM(800,DA,1,0)="^800.04"
"RTN","PXRMPARS",38,0)
 Q
"RTN","PXRMPARS",39,0)
 ;
"RTN","PXRMPARS",40,0)
WURL(IEN) ;Edit individual URL
"RTN","PXRMPARS",41,0)
 N DA,DIC,DIE,DR,Y
"RTN","PXRMPARS",42,0)
 S DA(1)=IEN
"RTN","PXRMPARS",43,0)
 S DIC="^PXRM(800,"_IEN_",1,"
"RTN","PXRMPARS",44,0)
 S DIC(0)="QEAL"
"RTN","PXRMPARS",45,0)
 S DIC("A")="Select URL: "
"RTN","PXRMPARS",46,0)
 S DIC("P")="800.04"
"RTN","PXRMPARS",47,0)
 D ^DIC I Y=-1 S DTOUT=1 Q
"RTN","PXRMPARS",48,0)
 S DIE=DIC K DIC
"RTN","PXRMPARS",49,0)
 S DA=+Y
"RTN","PXRMPARS",50,0)
 ;Finding record fields
"RTN","PXRMPARS",51,0)
 S DR=".01;.02;1"
"RTN","PXRMPARS",52,0)
 ;Edit finding record
"RTN","PXRMPARS",53,0)
 D ^DIE
"RTN","PXRMPARS",54,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMPARS",55,0)
 ;Check if deleted
"RTN","PXRMPARS",56,0)
 I '$D(DA) Q
"RTN","PXRMPARS",57,0)
 Q
"RTN","PXRMPARS",58,0)
 ;
"RTN","PXRMPARS",59,0)
LOCK(DA) ;Lock the record
"RTN","PXRMPARS",60,0)
 L +^PXRM(800,DA):0 I  Q 1
"RTN","PXRMPARS",61,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMPARS",62,0)
 ;
"RTN","PXRMPARS",63,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMPARS",64,0)
 L -^PXRM(800,DA)
"RTN","PXRMPARS",65,0)
 Q
"RTN","PXRMPCIN")
0^34^B551449
"RTN","PXRMPCIN",1,0)
PXRMPCIN ; SLC/PKR - Computed findings for primary care info. ;06/09/2006
"RTN","PXRMPCIN",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPCIN",3,0)
 ;
"RTN","PXRMPCIN",4,0)
 ;=======================================================
"RTN","PXRMPCIN",5,0)
PROVIDER(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for a patient's
"RTN","PXRMPCIN",6,0)
 ;primary care provider. Value is the name which is the .01 node
"RTN","PXRMPCIN",7,0)
 ;of file #200 the NEW PERSON file.
"RTN","PXRMPCIN",8,0)
 N PP
"RTN","PXRMPCIN",9,0)
 S DATE=$$NOW^PXRMDATE
"RTN","PXRMPCIN",10,0)
 ;DBIA #1252
"RTN","PXRMPCIN",11,0)
 S PP=$P($$OUTPTPR^SDUTL3(DFN,DATE),U,2)
"RTN","PXRMPCIN",12,0)
 I PP="" S TEST=0 Q
"RTN","PXRMPCIN",13,0)
 S TEST=1,VALUE=PP
"RTN","PXRMPCIN",14,0)
 Q
"RTN","PXRMPCIN",15,0)
 ;
"RTN","PXRMPCIN",16,0)
 ;=======================================================
"RTN","PXRMPCIN",17,0)
TEAM(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for a patient's primary
"RTN","PXRMPCIN",18,0)
 ;care team. Value is the name which is the .01 node
"RTN","PXRMPCIN",19,0)
 ;of file 404.51 the TEAM file.
"RTN","PXRMPCIN",20,0)
 N PT
"RTN","PXRMPCIN",21,0)
 S DATE=$$NOW^PXRMDATE
"RTN","PXRMPCIN",22,0)
 ;DBIA #1252
"RTN","PXRMPCIN",23,0)
 S PT=$P($$OUTPTTM^SDUTL3(DFN,DATE),U,2)
"RTN","PXRMPCIN",24,0)
 I PT="" S TEST=0 Q
"RTN","PXRMPCIN",25,0)
 S TEST=1,VALUE=PT
"RTN","PXRMPCIN",26,0)
 Q
"RTN","PXRMPCIN",27,0)
 ;
"RTN","PXRMPD")
1^18
"RTN","PXRMPD1")
1^3
"RTN","PXRMPDEM")
0^26^B22239744
"RTN","PXRMPDEM",1,0)
PXRMPDEM ; SLC/PKR - Computed findings for patient demographics. ;07/21/2006
"RTN","PXRMPDEM",2,0)
 ;;2.0;CLINICAL REMINDERS;**5,4**;Feb 04, 2005;Build 21
"RTN","PXRMPDEM",3,0)
 ;
"RTN","PXRMPDEM",4,0)
 ;======================================================
"RTN","PXRMPDEM",5,0)
AGE(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for returning a patient's
"RTN","PXRMPDEM",6,0)
 ;age
"RTN","PXRMPDEM",7,0)
 S DATE=$$NOW^PXRMDATE,TEST=1
"RTN","PXRMPDEM",8,0)
 I $D(PXRMPDEM) D  Q
"RTN","PXRMPDEM",9,0)
 . S VALUE=PXRMPDEM("AGE")
"RTN","PXRMPDEM",10,0)
 . I +PXRMPDEM("DOD")=0 S VALUE("DECEASED")=0 Q
"RTN","PXRMPDEM",11,0)
 . I +PXRMPDEM("DOD")>0 S VALUE("DECEASED")=1,TEXT="Patient is deceased"
"RTN","PXRMPDEM",12,0)
 I '$D(PXRMPDEM) D
"RTN","PXRMPDEM",13,0)
 . N DOB,DOD
"RTN","PXRMPDEM",14,0)
 .;DBIA #10035
"RTN","PXRMPDEM",15,0)
 . S DOB=$P(^DPT(DFN,0),U,3)
"RTN","PXRMPDEM",16,0)
 . S DOD=$P($G(^DPT(DFN,.35)),U,1)
"RTN","PXRMPDEM",17,0)
 . S VALUE=$$AGE^PXRMAGE(DOB,DOD,$$NOW^PXRMDATE)
"RTN","PXRMPDEM",18,0)
 . I +DOD=0 S VALUE("DECEASED")=0 Q
"RTN","PXRMPDEM",19,0)
 . I +DOD>0 S VALUE("DECEASED")=1,TEXT="Patient is deceased"
"RTN","PXRMPDEM",20,0)
 Q
"RTN","PXRMPDEM",21,0)
 ;
"RTN","PXRMPDEM",22,0)
 ;======================================================
"RTN","PXRMPDEM",23,0)
DISCHDT(DFN,TEST,DATE,VALUE,TEXT) ;This computed finding will return
"RTN","PXRMPDEM",24,0)
 ;the most recent service separation date.
"RTN","PXRMPDEM",25,0)
 N CNT,IRW,VAROOT
"RTN","PXRMPDEM",26,0)
 S VAROOT="IRW"
"RTN","PXRMPDEM",27,0)
 D SVC^VADPT
"RTN","PXRMPDEM",28,0)
 S VALUE=$P($G(IRW(6,5)),U)
"RTN","PXRMPDEM",29,0)
 I VALUE="" S TEST=0 D KVA^VADPT Q
"RTN","PXRMPDEM",30,0)
 S DATE=VALUE,TEST=1
"RTN","PXRMPDEM",31,0)
 S TEXT="Last Service Separation date: "_$$EDATE^PXRMDATE(VALUE)_" Branch of Service: "_$P($G(IRW(6,1)),U,2)
"RTN","PXRMPDEM",32,0)
 D KVA^VADPT
"RTN","PXRMPDEM",33,0)
 Q
"RTN","PXRMPDEM",34,0)
 ;
"RTN","PXRMPDEM",35,0)
 ;======================================================
"RTN","PXRMPDEM",36,0)
DOB(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for a patient's
"RTN","PXRMPDEM",37,0)
 ;date of birth.
"RTN","PXRMPDEM",38,0)
 I $D(PXRMPDEM) S VALUE=PXRMPDEM("DOB")
"RTN","PXRMPDEM",39,0)
 ;DBIA #10035 DATE OF BIRTH is a required field.
"RTN","PXRMPDEM",40,0)
 I '$D(PXRMPDEM) S VALUE=$P(^DPT(DFN,0),U,3)
"RTN","PXRMPDEM",41,0)
 S TEST=$S(VALUE<$$NOW^PXRMDATE:1,1:0)
"RTN","PXRMPDEM",42,0)
 I TEST S DATE=VALUE,TEXT=$$EDATE^PXRMDATE(VALUE)
"RTN","PXRMPDEM",43,0)
 Q
"RTN","PXRMPDEM",44,0)
 ;
"RTN","PXRMPDEM",45,0)
 ;======================================================
"RTN","PXRMPDEM",46,0)
DOD(DFN,TEST,DATE,VALUE,TEXT)   ;Computed finding for a patient's
"RTN","PXRMPDEM",47,0)
 ;date of death.
"RTN","PXRMPDEM",48,0)
 I $D(PXRMPDEM) S VALUE=+PXRMPDEM("DOD")
"RTN","PXRMPDEM",49,0)
 ;DBIA #10035
"RTN","PXRMPDEM",50,0)
 I '$D(PXRMPDEM) S VALUE=+$P($G(^DPT(DFN,.35)),U,1)
"RTN","PXRMPDEM",51,0)
 S TEST=$S(VALUE=0:0,VALUE>$$NOW^PXRMDATE:0,1:1)
"RTN","PXRMPDEM",52,0)
 I TEST S DATE=VALUE,TEXT=$$EDATE^PXRMDATE(VALUE)
"RTN","PXRMPDEM",53,0)
 Q
"RTN","PXRMPDEM",54,0)
 ;
"RTN","PXRMPDEM",55,0)
 ;======================================================
"RTN","PXRMPDEM",56,0)
ETHNY(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,VALUE,TEXT) ;Computed finding for
"RTN","PXRMPDEM",57,0)
 ;a patient's ethnicity.
"RTN","PXRMPDEM",58,0)
 N CNT,CNT1,VADM
"RTN","PXRMPDEM",59,0)
 D DEM^VADPT
"RTN","PXRMPDEM",60,0)
 I $D(VADM(11))'=11 S NFOUND=0 D KVA^VADPT Q
"RTN","PXRMPDEM",61,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMPDEM",62,0)
 S (CNT,CNT1)=0
"RTN","PXRMPDEM",63,0)
 F  S CNT=$O(VADM(11,CNT)) Q:(CNT="")!(CNT1=NGET)  D
"RTN","PXRMPDEM",64,0)
 . S CNT1=CNT1+1,TEST(CNT1)=1,DATE(CNT1)=$$NOW^PXRMDATE
"RTN","PXRMPDEM",65,0)
 . S TEXT(CNT1)="",VALUE(CNT1,"VALUE")=$P($G(VADM(11,CNT)),U,2)
"RTN","PXRMPDEM",66,0)
 S NFOUND=CNT1
"RTN","PXRMPDEM",67,0)
 D KVA^VADPT
"RTN","PXRMPDEM",68,0)
 Q
"RTN","PXRMPDEM",69,0)
 ;
"RTN","PXRMPDEM",70,0)
 ;======================================================
"RTN","PXRMPDEM",71,0)
HDISCH(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;Computed finding for
"RTN","PXRMPDEM",72,0)
 ;a list of a patient's discharge dates from PTF.
"RTN","PXRMPDEM",73,0)
 ;References to ^DGPT covered by DBIA #1372.
"RTN","PXRMPDEM",74,0)
 N DAS,DDATE,DDATEL,DONE,FEEBASIS,IEN,IND,INCEN,INFEE,NF,SDIR,TEMP,TYPE
"RTN","PXRMPDEM",75,0)
 S TEMP=$$UP^XLFSTR(TEST)
"RTN","PXRMPDEM",76,0)
 S TEMP=$P(TEMP,"IN:",2)
"RTN","PXRMPDEM",77,0)
 S INFEE=$S(TEMP["FEE":1,1:0)
"RTN","PXRMPDEM",78,0)
 S INCEN=$S(TEMP["CEN":1,1:0)
"RTN","PXRMPDEM",79,0)
 S IEN="",NFOUND=0
"RTN","PXRMPDEM",80,0)
 F  S IEN=$O(^DGPT("B",DFN,IEN)) Q:IEN=""  D
"RTN","PXRMPDEM",81,0)
 . S DDATE=+$P($G(^DGPT(IEN,70)),U,1)
"RTN","PXRMPDEM",82,0)
 . I DDATE>0,DDATE'<BDT,DDATE'>EDT S NFOUND=NFOUND+1,DDATEL(DDATE,NFOUND)=^DGPT(IEN,0)
"RTN","PXRMPDEM",83,0)
 I NFOUND=0 Q
"RTN","PXRMPDEM",84,0)
 S SDIR=$S(NGET<0:1,1:-1)
"RTN","PXRMPDEM",85,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMPDEM",86,0)
 S (DONE,NF)=0
"RTN","PXRMPDEM",87,0)
 S DDATE=""
"RTN","PXRMPDEM",88,0)
 F IND=1:1:NFOUND Q:DONE  D
"RTN","PXRMPDEM",89,0)
 . S DDATE=$O(DDATEL(DDATE),SDIR)
"RTN","PXRMPDEM",90,0)
 . I DDATE="" S DONE=1 Q
"RTN","PXRMPDEM",91,0)
 . S IEN=0
"RTN","PXRMPDEM",92,0)
 . F  S IEN=$O(DDATEL(DDATE,IEN)) Q:(IEN="")!(DONE)  D
"RTN","PXRMPDEM",93,0)
 .. S FEEBASIS=$P(DDATEL(DDATE,IEN),U,4)
"RTN","PXRMPDEM",94,0)
 .. I FEEBASIS=1,'INFEE Q
"RTN","PXRMPDEM",95,0)
 ..;Type 1 is PTF, Type 2 is Census
"RTN","PXRMPDEM",96,0)
 .. S TYPE=$P(DDATEL(DDATE,IEN),U,11)
"RTN","PXRMPDEM",97,0)
 .. I TYPE=2,'INCEN Q
"RTN","PXRMPDEM",98,0)
 .. S NF=NF+1
"RTN","PXRMPDEM",99,0)
 .. S TEST(NF)=1,(DATE(NF),VALUE(NF))=DDATE
"RTN","PXRMPDEM",100,0)
 .. I FEEBASIS=1 S TEXT(NF)="Fee basis"
"RTN","PXRMPDEM",101,0)
 .. I TYPE=2 S TEXT(NF)="Census"
"RTN","PXRMPDEM",102,0)
 .. I NF=NGET S DONE=1
"RTN","PXRMPDEM",103,0)
 S NFOUND=NF
"RTN","PXRMPDEM",104,0)
 Q
"RTN","PXRMPDEM",105,0)
 ;
"RTN","PXRMPDEM",106,0)
 ;======================================================
"RTN","PXRMPDEM",107,0)
NEWRACE(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,VALUE,TEXT) ;Computed finding
"RTN","PXRMPDEM",108,0)
 ;for returning a patient's multi-valued race.
"RTN","PXRMPDEM",109,0)
 N CNT,CNT1,IND,VADM
"RTN","PXRMPDEM",110,0)
 D DEM^VADPT
"RTN","PXRMPDEM",111,0)
 I $D(VADM(12))'=11 S NFOUND=0 D KVA^VADPT Q
"RTN","PXRMPDEM",112,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMPDEM",113,0)
 S (CNT,CNT1)=0
"RTN","PXRMPDEM",114,0)
 F  S CNT=$O(VADM(12,CNT)) Q:(CNT="")!(CNT1=NGET)  D
"RTN","PXRMPDEM",115,0)
 . S CNT1=CNT1+1,TEST(CNT1)=1,DATE(CNT1)=$$NOW^PXRMDATE
"RTN","PXRMPDEM",116,0)
 . S TEXT(CNT1)="",VALUE(CNT1,"VALUE")=$P($G(VADM(12,CNT)),U,2)
"RTN","PXRMPDEM",117,0)
 F CNT=1:1:CNT1 F IND=1:1:CNT1 S VALUE(CNT,"RACE",IND)=VALUE(IND,"VALUE")
"RTN","PXRMPDEM",118,0)
 S NFOUND=CNT1
"RTN","PXRMPDEM",119,0)
 D KVA^VADPT
"RTN","PXRMPDEM",120,0)
 Q
"RTN","PXRMPDEM",121,0)
 ;
"RTN","PXRMPDEM",122,0)
 ;======================================================
"RTN","PXRMPDEM",123,0)
PATTYPE(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding to return the patient
"RTN","PXRMPDEM",124,0)
 ;type
"RTN","PXRMPDEM",125,0)
 N VAEL
"RTN","PXRMPDEM",126,0)
 S VALUE=""
"RTN","PXRMPDEM",127,0)
 S DATE=$$NOW^PXRMDATE
"RTN","PXRMPDEM",128,0)
 D ELIG^VADPT
"RTN","PXRMPDEM",129,0)
 S TEST=$S($G(VAEL(6))'="":1,1:0)
"RTN","PXRMPDEM",130,0)
 S VALUE=$P(VAEL(6),U,2)
"RTN","PXRMPDEM",131,0)
 D KVA^VADPT
"RTN","PXRMPDEM",132,0)
 Q
"RTN","PXRMPDEM",133,0)
 ;======================================================
"RTN","PXRMPDEM",134,0)
RACE(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's race.
"RTN","PXRMPDEM",135,0)
 N RACE
"RTN","PXRMPDEM",136,0)
 S DATE=$$NOW^PXRMDATE
"RTN","PXRMPDEM",137,0)
 ;DBIA #10035
"RTN","PXRMPDEM",138,0)
 S RACE=$P($G(^DPT(DFN,0)),U,6)
"RTN","PXRMPDEM",139,0)
 I RACE="" S TEST=0,VALUE="" Q
"RTN","PXRMPDEM",140,0)
 Q
"RTN","PXRMPDEM",141,0)
 ;
"RTN","PXRMPDEM",142,0)
 ;======================================================
"RTN","PXRMPDEM",143,0)
SEX(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for returning a patient's
"RTN","PXRMPDEM",144,0)
 ;sex.
"RTN","PXRMPDEM",145,0)
 S DATE=$$NOW^PXRMDATE,TEST=1
"RTN","PXRMPDEM",146,0)
 I $D(PXRMPDEM) S VALUE=PXRMPDEM("SEX") Q
"RTN","PXRMPDEM",147,0)
 ;DBIA #10035 SEX is a required field.
"RTN","PXRMPDEM",148,0)
 I '$D(PXRMPDEM) S VALUE=$P(^DPT(DFN,0),U,2)
"RTN","PXRMPDEM",149,0)
 Q
"RTN","PXRMPDEM",150,0)
 ;
"RTN","PXRMPDEM",151,0)
 ;======================================================
"RTN","PXRMPDEM",152,0)
VETERAN(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking if a
"RTN","PXRMPDEM",153,0)
 ;patient is a veteran.
"RTN","PXRMPDEM",154,0)
 N VAEL
"RTN","PXRMPDEM",155,0)
 S DATE=$$NOW^PXRMDATE
"RTN","PXRMPDEM",156,0)
 D ELIG^VADPT
"RTN","PXRMPDEM",157,0)
 S TEST=VAEL(4)
"RTN","PXRMPDEM",158,0)
 S VALUE=""
"RTN","PXRMPDEM",159,0)
 D KVA^VADPT
"RTN","PXRMPDEM",160,0)
 Q
"RTN","PXRMPDEM",161,0)
 ;
"RTN","PXRMPDR")
0^76^B46925206
"RTN","PXRMPDR",1,0)
PXRMPDR ;SLC/AGP,PKR - Patient List Demographic report main routine ;07/17/2006
"RTN","PXRMPDR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPDR",3,0)
 ;
"RTN","PXRMPDR",4,0)
EN(PLIEN) ; -- main entry point for PXRM PATIENT LIST DEMOGRAPHIC
"RTN","PXRMPDR",5,0)
 N ADDDATA,APPDATA,ARRAY,BACK,CNT,DC,DEMDATA,DELIM,DIC,DIR,DTOUT,DUOUT
"RTN","PXRMPDR",6,0)
 N ELIGDATA,IEN,INPDATA
"RTN","PXRMPDR",7,0)
 N FINDDATA,NAME,NODE,PFACDATA,PTIEN
"RTN","PXRMPDR",8,0)
 N QUIT,REMDATA
"RTN","PXRMPDR",9,0)
 N X,Y,YESNO
"RTN","PXRMPDR",10,0)
 W @IOF
"RTN","PXRMPDR",11,0)
 K ^TMP("PXRMPLD",$J),^TMP("PXRMPLN",$J)
"RTN","PXRMPDR",12,0)
 S BACK=0,DELIM=0,QUIT=0
"RTN","PXRMPDR",13,0)
OPTION ;
"RTN","PXRMPDR",14,0)
 W !,"Select the items to include on the report."
"RTN","PXRMPDR",15,0)
ADDSEL D ADDSEL^PXRMPDRS(.ADDDATA)
"RTN","PXRMPDR",16,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMPDR",17,0)
APPSEL D APPSEL^PXRMPDRS(.APPDATA)
"RTN","PXRMPDR",18,0)
 I $D(DTOUT)!$D(DUOUT) G ADDSEL
"RTN","PXRMPDR",19,0)
DEMSEL D DEMSEL^PXRMPDRS(.DEMDATA)
"RTN","PXRMPDR",20,0)
 I $D(DTOUT)!$D(DUOUT) G APPSEL
"RTN","PXRMPDR",21,0)
PFACSEL S PFACDATA(0)=$$ASKYN^PXRMEUT("N","Include the patient's preferred facility")
"RTN","PXRMPDR",22,0)
 I $D(DTOUT)!$D(DUOUT) G DEMSEL
"RTN","PXRMPDR",23,0)
 S PFACDATA("LEN")=$S(PFACDATA(0)=1:1,1:0)
"RTN","PXRMPDR",24,0)
ELIGSEL D ELIGSEL^PXRMPDRS(.ELIGDATA)
"RTN","PXRMPDR",25,0)
 I $D(DTOUT)!$D(DUOUT) G PFACSEL
"RTN","PXRMPDR",26,0)
DATASEL D DATASEL^PXRMPDRS(PLIEN,.FINDDATA)
"RTN","PXRMPDR",27,0)
 I $D(DTOUT)!$D(DUOUT) G ELIGSEL
"RTN","PXRMPDR",28,0)
INPSEL D INPSEL^PXRMPDRS(.INPDATA)
"RTN","PXRMPDR",29,0)
 I $D(DTOUT)!$D(DUOUT) G DATASEL
"RTN","PXRMPDR",30,0)
REMDATA D REMSEL^PXRMPDRS(PLIEN,.REMDATA)
"RTN","PXRMPDR",31,0)
 I $D(DTOUT)!$D(DUOUT) G INPSEL
"RTN","PXRMPDR",32,0)
 S DELIM=$$ASKYN^PXRMEUT("Y","Delimited Report:")
"RTN","PXRMPDR",33,0)
 I $D(DTOUT)!$D(DUOUT) G REMDATA
"RTN","PXRMPDR",34,0)
 I DELIM S DC=$$DELIMSEL^PXRMXSD
"RTN","PXRMPDR",35,0)
 I $D(DTOUT)!$D(DUOUT) G OPTION
"RTN","PXRMPDR",36,0)
DEVICE ;
"RTN","PXRMPDR",37,0)
 N DIR,PXRMQUE,%ZIS,ZTDESC,ZTRTN,ZTSAVE
"RTN","PXRMPDR",38,0)
 S %ZIS="M"
"RTN","PXRMPDR",39,0)
 S ZTDESC="Patient List Demographic"
"RTN","PXRMPDR",40,0)
 S ZTRTN="GETDATA^PXRMPDR(DELIM,PLIEN,.DEMDATA,.PFACDATA,.ADDDATA,.INPDATA,.APPDATA,.FINDDATA,.REMDATA)"
"RTN","PXRMPDR",41,0)
 S ZTSAVE("*")=""
"RTN","PXRMPDR",42,0)
 S PXRMQUE=0
"RTN","PXRMPDR",43,0)
 S PXRMQUE=$$DEVICE^PXRMXQUE(ZTRTN,ZTDESC,.ZTSAVE,.%ZIS,.ZTSK)
"RTN","PXRMPDR",44,0)
 I PXRMQUE=1 G EXIT
"RTN","PXRMPDR",45,0)
 I $D(DTOUT)!$D(DUOUT) G EXIT
"RTN","PXRMPDR",46,0)
 ;
"RTN","PXRMPDR",47,0)
 S DIR(0)="E" D ^DIR
"RTN","PXRMPDR",48,0)
EXIT D KVA^VADPT
"RTN","PXRMPDR",49,0)
 K ^TMP("PXRMPLD",$J),^TMP("PXRMPLN",$J)
"RTN","PXRMPDR",50,0)
 Q
"RTN","PXRMPDR",51,0)
 ;
"RTN","PXRMPDR",52,0)
GETDATA(DELIM,PLIEN,DEMDATA,PFACDATA,ADDDATA,INPDATA,APPDATA,FINDDATA,REMDATA) ;
"RTN","PXRMPDR",53,0)
 N DATA,DATE,DCREAT,DFN,DTYPE,ERRMSG
"RTN","PXRMPDR",54,0)
 N GETADD,GETAPP,GETDEM,GETELIG,GETFIND,GETINP,GETREM
"RTN","PXRMPDR",55,0)
 N IEN,IND,JND,KND,LND
"RTN","PXRMPDR",56,0)
 N LISTNAME,PIECE
"RTN","PXRMPDR",57,0)
 N PDATA,PNAME,RIEN,TDATA
"RTN","PXRMPDR",58,0)
 K ^TMP("PXRMPD",$J)
"RTN","PXRMPDR",59,0)
 S LISTNAME=$P(^PXRMXP(810.5,PLIEN,0),U,1)
"RTN","PXRMPDR",60,0)
 S DCREAT=$P(^PXRMXP(810.5,PLIEN,0),U,4)
"RTN","PXRMPDR",61,0)
 S GETDEM=$S(DEMDATA("LEN")>0:1,1:0)
"RTN","PXRMPDR",62,0)
 S GETADD=$S(ADDDATA("LEN")>0:1,1:0)
"RTN","PXRMPDR",63,0)
 S GETINP=$S(INPDATA("LEN")>0:1,1:0)
"RTN","PXRMPDR",64,0)
 S GETELIG=$S(ELIGDATA("LEN")>0:1,1:0)
"RTN","PXRMPDR",65,0)
 S GETAPP=$S(APPDATA("LEN")>0:1,1:0)
"RTN","PXRMPDR",66,0)
 S GETFIND=$S(FINDDATA("LEN")>0:1,1:0)
"RTN","PXRMPDR",67,0)
 S GETREM=$S(REMDATA("LEN")>0:1,1:0)
"RTN","PXRMPDR",68,0)
 S IEN=0
"RTN","PXRMPDR",69,0)
 F  S IEN=+$O(^PXRMXP(810.5,PLIEN,30,IEN)) Q:IEN=0  D
"RTN","PXRMPDR",70,0)
 . S DFN=$P(^PXRMXP(810.5,PLIEN,30,IEN,0),U,1) I DFN="" Q
"RTN","PXRMPDR",71,0)
 .;#DBIA 10035
"RTN","PXRMPDR",72,0)
 . S PNAME=$P($G(^DPT(DFN,0)),U,1)
"RTN","PXRMPDR",73,0)
 . I PNAME="" S PNAME="UNDEFINED"_DFN
"RTN","PXRMPDR",74,0)
 . S ^TMP("PXRMPLN",$J,PNAME,DFN)=""
"RTN","PXRMPDR",75,0)
 . S PDATA=""
"RTN","PXRMPDR",76,0)
 . I GETDEM D
"RTN","PXRMPDR",77,0)
 .. N VADM
"RTN","PXRMPDR",78,0)
 .. D DEM^VADPT
"RTN","PXRMPDR",79,0)
 .. F IND=1:1:DEMDATA("LEN") D
"RTN","PXRMPDR",80,0)
 ... S JND=$P(DEMDATA,",",IND)
"RTN","PXRMPDR",81,0)
 ... S KND=0
"RTN","PXRMPDR",82,0)
 ... F  S KND=$O(DEMDATA(JND,KND)) Q:KND=""  D
"RTN","PXRMPDR",83,0)
 .... S PIECE=$P(DEMDATA(JND,KND),U,2)
"RTN","PXRMPDR",84,0)
 .... S TDATA=$P(VADM(KND),U,PIECE)
"RTN","PXRMPDR",85,0)
 .... S LND=""
"RTN","PXRMPDR",86,0)
 .... F  S LND=$O(VADM(KND,LND)) Q:LND=""  D
"RTN","PXRMPDR",87,0)
 ..... I TDATA'="" S TDATA=TDATA_"~"
"RTN","PXRMPDR",88,0)
 ..... S TDATA=TDATA_$P(VADM(KND,LND),U,PIECE)
"RTN","PXRMPDR",89,0)
 .... I KND=2,'DEMDATA("FULLSSN") S TDATA=$E(TDATA,8,11)
"RTN","PXRMPDR",90,0)
 .... S $P(PDATA,U,KND)=TDATA
"RTN","PXRMPDR",91,0)
 .. I PDATA'="" S ^TMP("PXRMPLD",$J,DFN,"DEMDATA")=PDATA,PDATA=""
"RTN","PXRMPDR",92,0)
 . I PFACDATA(0)=1 D
"RTN","PXRMPDR",93,0)
 ..;DBIA #1850
"RTN","PXRMPDR",94,0)
 .. S TDATA=$$GET1^DIQ(2,DFN,27.02,"E","","ERRMSG")
"RTN","PXRMPDR",95,0)
 .. I TDATA="" S TDATA="NONE"
"RTN","PXRMPDR",96,0)
 .. S ^TMP("PXRMPLD",$J,DFN,"PFACDATA")=TDATA
"RTN","PXRMPDR",97,0)
 . I GETADD D
"RTN","PXRMPDR",98,0)
 .. N VAPA
"RTN","PXRMPDR",99,0)
 .. D ADD^VADPT
"RTN","PXRMPDR",100,0)
 .. F IND=1:1:ADDDATA("LEN") D
"RTN","PXRMPDR",101,0)
 ... S JND=$P(ADDDATA,",",IND)
"RTN","PXRMPDR",102,0)
 ... S KND=0
"RTN","PXRMPDR",103,0)
 ... F  S KND=$O(ADDDATA(JND,KND)) Q:KND=""  D
"RTN","PXRMPDR",104,0)
 .... S PIECE=$P(ADDDATA(JND,KND),U,2)
"RTN","PXRMPDR",105,0)
 .... S TDATA=$P(VAPA(KND),U,PIECE)
"RTN","PXRMPDR",106,0)
 .... S $P(PDATA,U,KND)=TDATA
"RTN","PXRMPDR",107,0)
 .. I PDATA'="" S ^TMP("PXRMPLD",$J,DFN,"ADDDATA")=PDATA,PDATA=""
"RTN","PXRMPDR",108,0)
 . I GETINP D
"RTN","PXRMPDR",109,0)
 .. N VAIP
"RTN","PXRMPDR",110,0)
 .. D INP^VADPT
"RTN","PXRMPDR",111,0)
 .. F IND=1:1:INPDATA("LEN") D
"RTN","PXRMPDR",112,0)
 ... S JND=$P(INPDATA,",",IND)
"RTN","PXRMPDR",113,0)
 ... S KND=0
"RTN","PXRMPDR",114,0)
 ... F  S KND=$O(INPDATA(JND,KND)) Q:KND=""  D
"RTN","PXRMPDR",115,0)
 .... S PIECE=$P(INPDATA(JND,KND),U,2)
"RTN","PXRMPDR",116,0)
 .... S TDATA=$P(VAIN(KND),U,PIECE)
"RTN","PXRMPDR",117,0)
 .... S $P(PDATA,U,KND)=TDATA
"RTN","PXRMPDR",118,0)
 .. I PDATA'="" S ^TMP("PXRMPLD",$J,DFN,"INPDATA")=PDATA,PDATA=""
"RTN","PXRMPDR",119,0)
 . I GETELIG D
"RTN","PXRMPDR",120,0)
 .. N VAEL
"RTN","PXRMPDR",121,0)
 .. D ELIG^VADPT
"RTN","PXRMPDR",122,0)
 .. F IND=1:1:ELIGDATA("LEN") D
"RTN","PXRMPDR",123,0)
 ... S JND=$P(ELIGDATA,",",IND)
"RTN","PXRMPDR",124,0)
 ... S KND=0
"RTN","PXRMPDR",125,0)
 ... F  S KND=$O(ELIGDATA(JND,KND)) Q:KND=""  D
"RTN","PXRMPDR",126,0)
 .... S PIECE=$P(ELIGDATA(JND,KND),U,2)
"RTN","PXRMPDR",127,0)
 .... S TDATA=$P(VAEL(KND),U,PIECE)
"RTN","PXRMPDR",128,0)
 .... I KND=4 S TDATA=$S(TDATA=1:"YES",1:"NO")
"RTN","PXRMPDR",129,0)
 .... S $P(PDATA,U,KND)=TDATA
"RTN","PXRMPDR",130,0)
 .. I PDATA'="" S ^TMP("PXRMPLD",$J,DFN,"ELIGDATA")=PDATA,PDATA=""
"RTN","PXRMPDR",131,0)
 . D KVA^VADPT
"RTN","PXRMPDR",132,0)
 . I GETREM D
"RTN","PXRMPDR",133,0)
 .. S IND=0
"RTN","PXRMPDR",134,0)
 .. F  S IND=$O(REMDATA("IEN",IND)) Q:IND=""  D
"RTN","PXRMPDR",135,0)
 ... S PDATA=$G(^PXRMXP(810.5,PLIEN,30,IEN,"REM",IND,0))
"RTN","PXRMPDR",136,0)
 ... I PDATA="" Q
"RTN","PXRMPDR",137,0)
 ... S RIEN=$P(PDATA,U,1)
"RTN","PXRMPDR",138,0)
 ... S ^TMP("PXRMPLD",$J,DFN,"REMDATA",RIEN)=PDATA,PDATA=""
"RTN","PXRMPDR",139,0)
 . I GETFIND D
"RTN","PXRMPDR",140,0)
 .. N DL
"RTN","PXRMPDR",141,0)
 .. F IND=1:1:FINDDATA("LEN") D
"RTN","PXRMPDR",142,0)
 ... S JND=$P(FINDDATA,",",IND)
"RTN","PXRMPDR",143,0)
 ... S DTYPE=FINDDATA(JND,JND)
"RTN","PXRMPDR",144,0)
 ... S KND=$O(^PXRMXP(810.5,PLIEN,30,IEN,"DATA","B",DTYPE,""))
"RTN","PXRMPDR",145,0)
 ... S DL=$S(KND="":0,1:$L(^PXRMXP(810.5,PLIEN,30,IEN,"DATA",KND,0),U))
"RTN","PXRMPDR",146,0)
 ... S DATA=$S(KND="":"",1:$P(^PXRMXP(810.5,PLIEN,30,IEN,"DATA",KND,0),U,2,DL))
"RTN","PXRMPDR",147,0)
 ... S ^TMP("PXRMPLD",$J,DFN,"FINDDATA",JND)=DATA
"RTN","PXRMPDR",148,0)
 ;Get appointment data for all patients on the list.
"RTN","PXRMPDR",149,0)
 I GETAPP D
"RTN","PXRMPDR",150,0)
 . N ARRAY,COUNT
"RTN","PXRMPDR",151,0)
 . S ARRAY(1)=DT,ARRAY(3)="I;R"
"RTN","PXRMPDR",152,0)
 . S ARRAY(4)="^TMP($J,""PXRMPL""",ARRAY("FLDS")=""
"RTN","PXRMPDR",153,0)
 . F IND=1:1:APPDATA("LEN") D
"RTN","PXRMPDR",154,0)
 .. S JND=$P(APPDATA,",",IND)
"RTN","PXRMPDR",155,0)
 .. S KND=0
"RTN","PXRMPDR",156,0)
 .. F  S KND=$O(APPDATA(JND,KND)) Q:KND=""  S ARRAY("FLDS")=ARRAY("FLDS")_KND_";"
"RTN","PXRMPDR",157,0)
 . K ^TMP($J,"PXRMPL"),^TMP($J,"SDAMA301")
"RTN","PXRMPDR",158,0)
 . S IND=0
"RTN","PXRMPDR",159,0)
 . F  S IND=+$O(^PXRMXP(810.5,PLIEN,30,IND)) Q:IND=0  D
"RTN","PXRMPDR",160,0)
 .. S DFN=$P(^PXRMXP(810.5,PLIEN,30,IND,0),U,1)
"RTN","PXRMPDR",161,0)
 .. I DFN'="" S ^TMP($J,"PXRMPL",DFN)=""
"RTN","PXRMPDR",162,0)
 . S COUNT=$$SDAPI^SDAMA301(.ARRAY)
"RTN","PXRMPDR",163,0)
 . I COUNT=-1 D  Q
"RTN","PXRMPDR",164,0)
 .. D APPERR^PXRMPDRS
"RTN","PXRMPDR",165,0)
 .. S APPDATA("ERROR")=""
"RTN","PXRMPDR",166,0)
 .. K ^TMP($J,"PXRMPL"),^TMP($J,"SDAMA301")
"RTN","PXRMPDR",167,0)
 . F IND=1:1:COUNT D
"RTN","PXRMPDR",168,0)
 .. S DFN=""
"RTN","PXRMPDR",169,0)
 .. F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN=""  D
"RTN","PXRMPDR",170,0)
 ... S (JND,KND)=0
"RTN","PXRMPDR",171,0)
 ... F  S JND=$O(^TMP($J,"SDAMA301",DFN,JND)) Q:JND=""  D
"RTN","PXRMPDR",172,0)
 .... S DATE=0
"RTN","PXRMPDR",173,0)
 .... F  S DATE=$O(^TMP($J,"SDAMA301",DFN,JND,DATE)) Q:DATE=""  D
"RTN","PXRMPDR",174,0)
 ..... S KND=KND+1
"RTN","PXRMPDR",175,0)
 ..... S TDATA=^TMP($J,"SDAMA301",DFN,JND,DATE)
"RTN","PXRMPDR",176,0)
 ..... S PDATA=$$FMTE^XLFDT($P(TDATA,U,1))
"RTN","PXRMPDR",177,0)
 ..... S TDATA=$P(TDATA,U,2),TDATA=$P(TDATA,";",2)
"RTN","PXRMPDR",178,0)
 ..... S PDATA=PDATA_U_TDATA
"RTN","PXRMPDR",179,0)
 ..... S ^TMP("PXRMPLD",$J,DFN,"APPDATA",KND)=PDATA
"RTN","PXRMPDR",180,0)
 . K ^TMP($J,"PXRMPL"),^TMP($J,"SDAMA301")
"RTN","PXRMPDR",181,0)
 I DELIM=1 D DELIMPR^PXRMPDRP(DC,PLIEN,.ADDDATA,.APPDATA,.DEMDATA,.FINDDATA,.INPDATA,.PFACDATA,.REMDATA)
"RTN","PXRMPDR",182,0)
 I DELIM=0 D REGPR^PXRMPDRP(PLIEN,.ADDDATA,.APPDATA,.DEMDATA,.FINDDATA,.INPDATA,.PFACDATA,.REMDATA)
"RTN","PXRMPDR",183,0)
 Q
"RTN","PXRMPDR",184,0)
 ;
"RTN","PXRMPDR",185,0)
LENGTH(STR,STR1) ;
"RTN","PXRMPDR",186,0)
 I ($L(STR)+$L(STR1))>245 W !,STR S STR=STR1
"RTN","PXRMPDR",187,0)
 E  S STR=STR_U_STR1,STR1=""
"RTN","PXRMPDR",188,0)
 Q
"RTN","PXRMPDR",189,0)
 ;
"RTN","PXRMPDR",190,0)
PAGE ;
"RTN","PXRMPDR",191,0)
 I ($E(IOST)="C")&(IO=IO(0)) D
"RTN","PXRMPDR",192,0)
 .S DIR(0)="E"
"RTN","PXRMPDR",193,0)
 .W !
"RTN","PXRMPDR",194,0)
 .D ^DIR K DIR
"RTN","PXRMPDR",195,0)
 I $D(DUOUT)!($D(DTOUT))!($D(DIROUT)) S DONE=1 Q
"RTN","PXRMPDR",196,0)
 W:$D(IOF) @IOF
"RTN","PXRMPDR",197,0)
 S PAGE=PAGE+1
"RTN","PXRMPDR",198,0)
 I $E(IOST)="C",IO=IO(0) W @IOF
"RTN","PXRMPDR",199,0)
 Q
"RTN","PXRMPDR",200,0)
 ;
"RTN","PXRMPDRP")
0^101^B93112998
"RTN","PXRMPDRP",1,0)
PXRMPDRP ;SLC/AGP,PKR - Patient List Demographic report print routine ;06/20/2006
"RTN","PXRMPDRP",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPDRP",3,0)
 ;
"RTN","PXRMPDRP",4,0)
ADDTXT(TEXT) ;Accumulate text in ^TMP.
"RTN","PXRMPDRP",5,0)
 S LINCNT=LINCNT+1
"RTN","PXRMPDRP",6,0)
 S ^TMP("PXRMPDEM",$J,LINCNT)=TEXT
"RTN","PXRMPDRP",7,0)
 Q
"RTN","PXRMPDRP",8,0)
 ;
"RTN","PXRMPDRP",9,0)
APPHDR(DC,APPDATA) ;Build the appointment header.
"RTN","PXRMPDRP",10,0)
 I APPDATA("LEN")'>0 Q
"RTN","PXRMPDRP",11,0)
 N HDR,IND,JND,KND,LND,TEMP
"RTN","PXRMPDRP",12,0)
 S IND=0,HDR=""
"RTN","PXRMPDRP",13,0)
 F IND=1:1:APPDATA("MAX") D
"RTN","PXRMPDRP",14,0)
 . F JND=1:1:APPDATA("LEN") D
"RTN","PXRMPDRP",15,0)
 .. S KND=$P(APPDATA,",",JND)
"RTN","PXRMPDRP",16,0)
 .. S LND=""
"RTN","PXRMPDRP",17,0)
 .. F  S LND=$O(APPDATA(KND,LND)) Q:LND=""  D
"RTN","PXRMPDRP",18,0)
 ... S TEMP=$P(APPDATA(KND,LND),U,1)
"RTN","PXRMPDRP",19,0)
 ... S HDR=HDR_TEMP_IND_DC
"RTN","PXRMPDRP",20,0)
 S APPDATA("HDR")=HDR
"RTN","PXRMPDRP",21,0)
 Q
"RTN","PXRMPDRP",22,0)
 ;
"RTN","PXRMPDRP",23,0)
APPPRINT(DFN,APPDATA) ;Print appointment data.
"RTN","PXRMPDRP",24,0)
 N CLINIC,COUNT,DATE,HDR,IND,JND,KND,LINE,PCLINIC,PDATE,TEMP
"RTN","PXRMPDRP",25,0)
 S (PCLINIC,PDATE)=0
"RTN","PXRMPDRP",26,0)
 F IND=1:1:APPDATA("LEN") D
"RTN","PXRMPDRP",27,0)
 . S JND=$P(APPDATA,",",IND)
"RTN","PXRMPDRP",28,0)
 . I JND=1 S PDATE=1
"RTN","PXRMPDRP",29,0)
 . I JND=2 S PCLINIC=1
"RTN","PXRMPDRP",30,0)
 S HDR=""
"RTN","PXRMPDRP",31,0)
 I PDATE S HDR=" "_$P(APPDATA(1,1),U,1)
"RTN","PXRMPDRP",32,0)
 I PCLINIC S HDR=HDR_"   "_$P(APPDATA(2,2),U,1)
"RTN","PXRMPDRP",33,0)
 D ADDTXT(" ")
"RTN","PXRMPDRP",34,0)
 D ADDTXT("Appointment Data")
"RTN","PXRMPDRP",35,0)
 D ADDTXT(HDR)
"RTN","PXRMPDRP",36,0)
 S COUNT=0
"RTN","PXRMPDRP",37,0)
 F  S COUNT=$O(^TMP("PXRMPLD",$J,DFN,"APPDATA",COUNT)) Q:COUNT=""  D
"RTN","PXRMPDRP",38,0)
 . S TEMP=$G(^TMP("PXRMPLD",$J,DFN,"APPDATA",COUNT))
"RTN","PXRMPDRP",39,0)
 . S LINE=""
"RTN","PXRMPDRP",40,0)
 . I PDATE S LINE=LINE_$P(TEMP,U,1)
"RTN","PXRMPDRP",41,0)
 . I PCLINIC S LINE=LINE_"  "_$P(TEMP,U,2)
"RTN","PXRMPDRP",42,0)
 . D ADDTXT(LINE)
"RTN","PXRMPDRP",43,0)
 Q
"RTN","PXRMPDRP",44,0)
 ;
"RTN","PXRMPDRP",45,0)
DELIMHDR(DC,DATA) ;Build the delimited header for a data type.
"RTN","PXRMPDRP",46,0)
 I DATA("LEN")'>0 Q
"RTN","PXRMPDRP",47,0)
 N HDR,IND,JND,KND,LND,MAX,TEMP
"RTN","PXRMPDRP",48,0)
 S IND=0,HDR=""
"RTN","PXRMPDRP",49,0)
 F IND=1:1:DATA("LEN") D
"RTN","PXRMPDRP",50,0)
 . S JND=$P(DATA,",",IND)
"RTN","PXRMPDRP",51,0)
 . S KND=""
"RTN","PXRMPDRP",52,0)
 . F  S KND=$O(DATA(JND,KND)) Q:KND=""  D
"RTN","PXRMPDRP",53,0)
 .. S TEMP=$P(DATA(JND,KND),U,1)
"RTN","PXRMPDRP",54,0)
 .. S MAX=$P(DATA(JND,KND),U,3)
"RTN","PXRMPDRP",55,0)
 .. I MAX="" S HDR=HDR_TEMP_DC
"RTN","PXRMPDRP",56,0)
 .. I +MAX>0 F LND=1:1:MAX S HDR=HDR_TEMP_LND_DC
"RTN","PXRMPDRP",57,0)
 S DATA("HDR")=HDR
"RTN","PXRMPDRP",58,0)
 Q
"RTN","PXRMPDRP",59,0)
 ;
"RTN","PXRMPDRP",60,0)
DELIMPR(DC,PLIEN,ADDDATA,APPDATA,DEMDATA,FINDDATA,INPDATA,PFACDATA,REMDATA) ;
"RTN","PXRMPDRP",61,0)
 ;Print the delimited report.
"RTN","PXRMPDRP",62,0)
 N DATALIST,DFN,IND,NDT,PNAME
"RTN","PXRMPDRP",63,0)
 S NDT=0
"RTN","PXRMPDRP",64,0)
 I ADDDATA("LEN")>0 S NDT=NDT+1,DATALIST(NDT)="ADDDATA"
"RTN","PXRMPDRP",65,0)
 I APPDATA("LEN")>0 S NDT=NDT+1,DATALIST(NDT)="APPDATA"
"RTN","PXRMPDRP",66,0)
 I DEMDATA("LEN")>0 S NDT=NDT+1,DATALIST(NDT)="DEMDATA"
"RTN","PXRMPDRP",67,0)
 I ELIGDATA("LEN")>0 S NDT=NDT+1,DATALIST(NDT)="ELIGDATA"
"RTN","PXRMPDRP",68,0)
 I FINDDATA("LEN")>0 S NDT=NDT+1,DATALIST(NDT)="FINDDATA"
"RTN","PXRMPDRP",69,0)
 I INPDATA("LEN")>0 S NDT=NDT+1,DATALIST(NDT)="INPDATA"
"RTN","PXRMPDRP",70,0)
 I PFACDATA("LEN")>0 S NDT=NDT+1,DATALIST(NDT)="PFACDATA"
"RTN","PXRMPDRP",71,0)
 I REMDATA("LEN")>0 S NDT=NDT+1,DATALIST(NDT)="REMDATA"
"RTN","PXRMPDRP",72,0)
 D TITLE(PLIEN,1)
"RTN","PXRMPDRP",73,0)
 ;Output the delimited header.
"RTN","PXRMPDRP",74,0)
 F IND=1:1:NDT D
"RTN","PXRMPDRP",75,0)
 . I DATALIST(IND)="ADDDATA" D DELIMHDR(DC,.ADDDATA) Q
"RTN","PXRMPDRP",76,0)
 . I DATALIST(IND)="APPDATA" D APPHDR(DC,.APPDATA) Q
"RTN","PXRMPDRP",77,0)
 . I DATALIST(IND)="DEMDATA" D DELIMHDR(DC,.DEMDATA) Q
"RTN","PXRMPDRP",78,0)
 . I DATALIST(IND)="ELIGDATA" D DELIMHDR(DC,.ELIGDATA) Q
"RTN","PXRMPDRP",79,0)
 . I DATALIST(IND)="FINDDATA" D DELIMHDR(DC,.FINDDATA) Q
"RTN","PXRMPDRP",80,0)
 . I DATALIST(IND)="INPDATA" D DELIMHDR(DC,.INPDATA) Q
"RTN","PXRMPDRP",81,0)
 . I DATALIST(IND)="PFACDATA" D PFACHDR(.PFACDATA)
"RTN","PXRMPDRP",82,0)
 . I DATALIST(IND)="REMDATA" D REMHDR(DC,.REMDATA) Q
"RTN","PXRMPDRP",83,0)
 D DELTITLE(DC,.ADDDATA,.APPDATA,.DEMDATA,.FINDDATA,.INPDATA,.PFACDATA,.REMDATA)
"RTN","PXRMPDRP",84,0)
 S PNAME=":"
"RTN","PXRMPDRP",85,0)
 F  S PNAME=$O(^TMP("PXRMPLN",$J,PNAME)) Q:PNAME=""  D
"RTN","PXRMPDRP",86,0)
 . S DFN=""
"RTN","PXRMPDRP",87,0)
 . F  S DFN=$O(^TMP("PXRMPLN",$J,PNAME,DFN)) Q:DFN=""  D
"RTN","PXRMPDRP",88,0)
 .. W !,PNAME_DC
"RTN","PXRMPDRP",89,0)
 .. F IND=1:1:NDT D
"RTN","PXRMPDRP",90,0)
 ... I DATALIST(IND)="ADDDATA" D PDELDATA(DFN,DC,DATALIST(IND),.ADDDATA) Q
"RTN","PXRMPDRP",91,0)
 ... I DATALIST(IND)="APPDATA" D PAPPDATA(DFN,DC,.APPDATA) Q
"RTN","PXRMPDRP",92,0)
 ... I DATALIST(IND)="DEMDATA" D PDELDATA(DFN,DC,DATALIST(IND),.DEMDATA) Q
"RTN","PXRMPDRP",93,0)
 ... I DATALIST(IND)="ELIGDATA" D PDELDATA(DFN,DC,DATALIST(IND),.ELIGDATA) Q
"RTN","PXRMPDRP",94,0)
 ... I DATALIST(IND)="FINDDATA" D PFINDATA(DFN,DC,.FINDDATA) Q
"RTN","PXRMPDRP",95,0)
 ... I DATALIST(IND)="INPDATA" D PDELDATA(DFN,DC,DATALIST(IND),.INPDATA) Q
"RTN","PXRMPDRP",96,0)
 ... I DATALIST(IND)="PFACDATA" D PFACDATA(DFN,.PFACDATA) Q
"RTN","PXRMPDRP",97,0)
 ... I DATALIST(IND)="REMDATA" D PREMDATA(DFN,DC,.REMDATA) Q
"RTN","PXRMPDRP",98,0)
 .. W "\\"
"RTN","PXRMPDRP",99,0)
 Q
"RTN","PXRMPDRP",100,0)
 ;
"RTN","PXRMPDRP",101,0)
DELTITLE(DC,ADDDATA,APPDATA,DEMDATA,FINDDATA,INPDATA,PFACDATA,REMDATA) ;Combine
"RTN","PXRMPDRP",102,0)
 ;all the headers to create the delimited title.
"RTN","PXRMPDRP",103,0)
 W !,"PATIENT"_DC
"RTN","PXRMPDRP",104,0)
 W $G(ADDDATA("HDR"))
"RTN","PXRMPDRP",105,0)
 W $G(APPDATA("HDR"))
"RTN","PXRMPDRP",106,0)
 W $G(DEMDATA("HDR"))
"RTN","PXRMPDRP",107,0)
 W $G(ELIGDATA("HDR"))
"RTN","PXRMPDRP",108,0)
 W $G(FINDDATA("HDR"))
"RTN","PXRMPDRP",109,0)
 W $G(INPDATA("HDR"))
"RTN","PXRMPDRP",110,0)
 W $G(PFACDATA("HDR"))
"RTN","PXRMPDRP",111,0)
 W $G(REMDATA("HDR"))
"RTN","PXRMPDRP",112,0)
 W "\\"
"RTN","PXRMPDRP",113,0)
 Q
"RTN","PXRMPDRP",114,0)
 ;
"RTN","PXRMPDRP",115,0)
FINDPR(DFN,FINDDATA) ;Print finding information.
"RTN","PXRMPDRP",116,0)
 N IND,JND,LINE,TEMP
"RTN","PXRMPDRP",117,0)
 D ADDTXT(" ")
"RTN","PXRMPDRP",118,0)
 S LINE="Finding Data"
"RTN","PXRMPDRP",119,0)
 D ADDTXT(LINE)
"RTN","PXRMPDRP",120,0)
 F IND=1:1:FINDDATA("LEN") D
"RTN","PXRMPDRP",121,0)
 . S JND=$P(FINDDATA,",",IND)
"RTN","PXRMPDRP",122,0)
 . S TEMP=$G(^TMP("PXRMPLD",$J,DFN,"FINDDATA",JND))
"RTN","PXRMPDRP",123,0)
 . I TEMP="" Q
"RTN","PXRMPDRP",124,0)
 . S LINE=" "_$P(FINDDATA(JND,JND),U,1)_": "_TEMP
"RTN","PXRMPDRP",125,0)
 . D ADDTXT(LINE)
"RTN","PXRMPDRP",126,0)
 Q
"RTN","PXRMPDRP",127,0)
 ;
"RTN","PXRMPDRP",128,0)
OUTPUT ;Output the text.
"RTN","PXRMPDRP",129,0)
 N IND,LC,LO,VSIZE
"RTN","PXRMPDRP",130,0)
 S VSIZE=IOSL-2
"RTN","PXRMPDRP",131,0)
 S (LC,LO)=0
"RTN","PXRMPDRP",132,0)
 F IND=1:1:LINCNT D
"RTN","PXRMPDRP",133,0)
 . S LC=LC+1,LO=LO+1
"RTN","PXRMPDRP",134,0)
 . W !,^TMP("PXRMPDEM",$J,LC)
"RTN","PXRMPDRP",135,0)
 . I LO=VSIZE D
"RTN","PXRMPDRP",136,0)
 .. D PAGE
"RTN","PXRMPDRP",137,0)
 .. I $D(DTOUT)!$D(DUOUT) S IND=LINCNT Q
"RTN","PXRMPDRP",138,0)
 .. S LO=0
"RTN","PXRMPDRP",139,0)
 Q
"RTN","PXRMPDRP",140,0)
 ;
"RTN","PXRMPDRP",141,0)
PAGE ;
"RTN","PXRMPDRP",142,0)
 I ($E(IOST)="C")&(IO=IO(0)) D
"RTN","PXRMPDRP",143,0)
 . N DIR
"RTN","PXRMPDRP",144,0)
 . S DIR(0)="E"
"RTN","PXRMPDRP",145,0)
 . W !
"RTN","PXRMPDRP",146,0)
 . D ^DIR K DIR
"RTN","PXRMPDRP",147,0)
 I $D(DUOUT)!$D(DTOUT) Q
"RTN","PXRMPDRP",148,0)
 W:$D(IOF) @IOF
"RTN","PXRMPDRP",149,0)
 I $E(IOST)="C",IO=IO(0) W @IOF
"RTN","PXRMPDRP",150,0)
 Q
"RTN","PXRMPDRP",151,0)
 ;
"RTN","PXRMPDRP",152,0)
PAPPDATA(DFN,DC,APPDATA) ;Print the delimited appointment data.
"RTN","PXRMPDRP",153,0)
 N IND,JND,KND,LINE,LND,PIECE,TEMP
"RTN","PXRMPDRP",154,0)
 I APPDATA("LEN")'>0 Q
"RTN","PXRMPDRP",155,0)
 S LINE=""
"RTN","PXRMPDRP",156,0)
 F IND=1:1:APPDATA("MAX") D
"RTN","PXRMPDRP",157,0)
 . S TEMP=$G(^TMP("PXRMPLD",$J,DFN,"APPDATA",IND))
"RTN","PXRMPDRP",158,0)
 . F JND=1:1:APPDATA("LEN") D
"RTN","PXRMPDRP",159,0)
 .. S KND=$P(APPDATA,",",JND)
"RTN","PXRMPDRP",160,0)
 .. S LND=""
"RTN","PXRMPDRP",161,0)
 .. F  S LND=$O(APPDATA(KND,LND)) Q:LND=""  D
"RTN","PXRMPDRP",162,0)
 ... S PIECE=$P(APPDATA(KND,KND),U,2)
"RTN","PXRMPDRP",163,0)
 ... S LINE=LINE_$P(TEMP,U,PIECE)_DC
"RTN","PXRMPDRP",164,0)
 W LINE
"RTN","PXRMPDRP",165,0)
 Q
"RTN","PXRMPDRP",166,0)
 ;
"RTN","PXRMPDRP",167,0)
PDELDATA(DFN,DC,DTYPE,DATA) ;Print the delimited data.
"RTN","PXRMPDRP",168,0)
 N IND,JND,KND,LINE,LND,TEMP,TTEMP
"RTN","PXRMPDRP",169,0)
 I DATA("LEN")'>0 Q
"RTN","PXRMPDRP",170,0)
 S TEMP=$G(^TMP("PXRMPLD",$J,DFN,DTYPE))
"RTN","PXRMPDRP",171,0)
 S LINE=""
"RTN","PXRMPDRP",172,0)
 F IND=1:1:DATA("LEN") D
"RTN","PXRMPDRP",173,0)
 . S JND=$P(DATA,",",IND)
"RTN","PXRMPDRP",174,0)
 . S KND=""
"RTN","PXRMPDRP",175,0)
 . F  S KND=$O(DATA(JND,KND)) Q:KND=""  D
"RTN","PXRMPDRP",176,0)
 .. S MAX=$P(DATA(JND,KND),U,3)
"RTN","PXRMPDRP",177,0)
 .. I MAX="" S LINE=LINE_$P(TEMP,U,KND)_DC Q
"RTN","PXRMPDRP",178,0)
 .. I +MAX>1 S TTEMP=$P(TEMP,U,KND) F LND=1:1:MAX S LINE=LINE_$P(TTEMP,"~",LND)_DC
"RTN","PXRMPDRP",179,0)
 W LINE
"RTN","PXRMPDRP",180,0)
 Q
"RTN","PXRMPDRP",181,0)
 ;
"RTN","PXRMPDRP",182,0)
PFACHDR(PFACDATA) ;Build the preferred facility header.
"RTN","PXRMPDRP",183,0)
 I PFACDATA(0)=1 S PFACDATA("HDR")="PATIENT'S PREFERRED FACILITY"
"RTN","PXRMPDRP",184,0)
 Q
"RTN","PXRMPDRP",185,0)
 ;
"RTN","PXRMPDRP",186,0)
PFACDATA(DFN,PFACDATA) ;Print the patient's preferred facility data, delimited.
"RTN","PXRMPDRP",187,0)
 I PFACDATA(0)=0 Q
"RTN","PXRMPDRP",188,0)
 W ^TMP("PXRMPLD",$J,DFN,"PFACDATA")
"RTN","PXRMPDRP",189,0)
 Q
"RTN","PXRMPDRP",190,0)
 ;
"RTN","PXRMPDRP",191,0)
PFACPR(DFN,PFACDATA) ;Print the patient's preferred facility.
"RTN","PXRMPDRP",192,0)
 I PFACDATA(0)=0 Q
"RTN","PXRMPDRP",193,0)
 D ADDTXT("Patient's Preferred Facility")
"RTN","PXRMPDRP",194,0)
 D ADDTXT(" "_$G(^TMP("PXRMPLD",$J,DFN,"PFACDATA")))
"RTN","PXRMPDRP",195,0)
 Q
"RTN","PXRMPDRP",196,0)
 ;
"RTN","PXRMPDRP",197,0)
PFINDATA(DFN,DC,FINDDATA) ;Print the finding data.
"RTN","PXRMPDRP",198,0)
 N IND,JND,LINE,TEMP
"RTN","PXRMPDRP",199,0)
 I FINDDATA("LEN")'>0 Q
"RTN","PXRMPDRP",200,0)
 S LINE=""
"RTN","PXRMPDRP",201,0)
 F IND=1:1:FINDDATA("LEN") D
"RTN","PXRMPDRP",202,0)
 . S JND=$P(FINDDATA,",",IND)
"RTN","PXRMPDRP",203,0)
 . S TEMP=$G(^TMP("PXRMPLD",$J,DFN,"FINDDATA",JND))
"RTN","PXRMPDRP",204,0)
 . S LINE=LINE_TEMP_DC
"RTN","PXRMPDRP",205,0)
 W LINE
"RTN","PXRMPDRP",206,0)
 Q
"RTN","PXRMPDRP",207,0)
 ;
"RTN","PXRMPDRP",208,0)
PREMDATA(DFN,DC,REMDATA) ;Print the reminder data.
"RTN","PXRMPDRP",209,0)
 N IND,JND,LINE,TEMP
"RTN","PXRMPDRP",210,0)
 I REMDATA("LEN")'>0 Q
"RTN","PXRMPDRP",211,0)
 S LINE=""
"RTN","PXRMPDRP",212,0)
 F IND=1:1:REMDATA("LEN") D
"RTN","PXRMPDRP",213,0)
 . S JND=$P(REMDATA,",",IND)
"RTN","PXRMPDRP",214,0)
 . S LINE=LINE_REMDATA("RNAME",JND)_DC
"RTN","PXRMPDRP",215,0)
 . S TEMP=$G(^TMP("PXRMPLD",$J,DFN,"REMDATA",REMDATA("IEN",JND)))
"RTN","PXRMPDRP",216,0)
 . S LINE=LINE_$P(TEMP,U,2)_DC_$P(TEMP,U,3)_"^"_$P(TEMP,U,4)_DC
"RTN","PXRMPDRP",217,0)
 W LINE
"RTN","PXRMPDRP",218,0)
 Q
"RTN","PXRMPDRP",219,0)
 ;
"RTN","PXRMPDRP",220,0)
REGPR(PLIEN,ADDDATA,APPDATA,DEMDATA,FINDDATA,INPDATA,PFACDATA,REMDATA) ;
"RTN","PXRMPDRP",221,0)
 ;Print the regular report..
"RTN","PXRMPDRP",222,0)
 N DATATYPE,DFN,PNAME,LINCNT
"RTN","PXRMPDRP",223,0)
 K ^TMP("PXRMPDEM",$J)
"RTN","PXRMPDRP",224,0)
 S LINCNT=0
"RTN","PXRMPDRP",225,0)
 D TITLE(PLIEN,0)
"RTN","PXRMPDRP",226,0)
 S PNAME=":"
"RTN","PXRMPDRP",227,0)
 F  S PNAME=$O(^TMP("PXRMPLN",$J,PNAME)) Q:PNAME=""  D
"RTN","PXRMPDRP",228,0)
 . S DFN=0
"RTN","PXRMPDRP",229,0)
 . F  S DFN=$O(^TMP("PXRMPLN",$J,PNAME,DFN)) Q:DFN=""  D
"RTN","PXRMPDRP",230,0)
 .. D ADDTXT(" ")
"RTN","PXRMPDRP",231,0)
 .. D ADDTXT("---------- "_PNAME_" DFN="_DFN_" ----------")
"RTN","PXRMPDRP",232,0)
 .. S DATATYPE=""
"RTN","PXRMPDRP",233,0)
 .. F  S DATATYPE=$O(^TMP("PXRMPLD",$J,DFN,DATATYPE)) Q:DATATYPE=""  D
"RTN","PXRMPDRP",234,0)
 ... I DATATYPE="ADDDATA" D VADPTPR(DFN,"Address Data",DATATYPE,.ADDDATA) Q
"RTN","PXRMPDRP",235,0)
 ... I DATATYPE="APPDATA" D APPPRINT(DFN,.APPDATA) Q
"RTN","PXRMPDRP",236,0)
 ... I DATATYPE="DEMDATA" D VADPTPR(DFN,"Demographic Data",DATATYPE,.DEMDATA) Q
"RTN","PXRMPDRP",237,0)
 ... I DATATYPE="ELIGDATA" D VADPTPR(DFN,"Eligibility Data",DATATYPE,.ELIGDATA) Q
"RTN","PXRMPDRP",238,0)
 ... I DATATYPE="FINDDATA" D FINDPR(DFN,.FINDDATA) Q
"RTN","PXRMPDRP",239,0)
 ... I DATATYPE="INPDATA" D VADPTPR(DFN,"Inpatient Data",DATATYPE,.INPDATA) Q
"RTN","PXRMPDRP",240,0)
 ... I DATATYPE="PFACDATA" D PFACPR(DFN,.PFACDATA) Q
"RTN","PXRMPDRP",241,0)
 ... I DATATYPE="REMDATA" D REMPR(DFN,.REMDATA) Q
"RTN","PXRMPDRP",242,0)
 D OUTPUT
"RTN","PXRMPDRP",243,0)
 K ^TMP("PXRMPDEM",$J)
"RTN","PXRMPDRP",244,0)
 Q
"RTN","PXRMPDRP",245,0)
 ;
"RTN","PXRMPDRP",246,0)
REMHDR(DC,REMDATA) ;Build the reminder data delimited header.
"RTN","PXRMPDRP",247,0)
 N HDR,IND,JND
"RTN","PXRMPDRP",248,0)
 S HDR=""
"RTN","PXRMPDRP",249,0)
 F IND=1:1:REMDATA("LEN") D
"RTN","PXRMPDRP",250,0)
 . S JND=$P(REMDATA,",",IND)
"RTN","PXRMPDRP",251,0)
 . S HDR=HDR_"REMINDER"_JND_DC_"STATUS"_JND_DC_"DUE DATE"_JND_DC_"LAST DONE"_JND_DC
"RTN","PXRMPDRP",252,0)
 S REMDATA("HDR")=HDR
"RTN","PXRMPDRP",253,0)
 Q
"RTN","PXRMPDRP",254,0)
 ;
"RTN","PXRMPDRP",255,0)
REMPR(DFN,REMDATA) ;Print reminder status information.
"RTN","PXRMPDRP",256,0)
 N DUE,IND,JND,LAST,LINE,NSP,STATUS,TEMP
"RTN","PXRMPDRP",257,0)
 D ADDTXT(" ")
"RTN","PXRMPDRP",258,0)
 S LINE="Reminder:"_$$INSCHR^PXRMEXLC(27," ")_"--STATUS--  --DUE DATE--  --LAST DONE--"
"RTN","PXRMPDRP",259,0)
 D ADDTXT(LINE)
"RTN","PXRMPDRP",260,0)
 F IND=1:1:REMDATA("LEN") D
"RTN","PXRMPDRP",261,0)
 . S JND=$P(REMDATA,",",IND)
"RTN","PXRMPDRP",262,0)
 . S RIEN=REMDATA("IEN",JND)
"RTN","PXRMPDRP",263,0)
 . S TEMP=$G(^TMP("PXRMPLD",$J,DFN,"REMDATA",RIEN))
"RTN","PXRMPDRP",264,0)
 . I TEMP="" Q
"RTN","PXRMPDRP",265,0)
 . S STATUS=$P(TEMP,U,2)
"RTN","PXRMPDRP",266,0)
 . S DUE=$P(TEMP,U,3),DUE=$$EDATE^PXRMDATE(DUE)
"RTN","PXRMPDRP",267,0)
 . S LAST=$P(TEMP,U,4),LAST=$$EDATE^PXRMDATE(LAST)
"RTN","PXRMPDRP",268,0)
 . S NSP=38-$L(REMDATA("RNAME",JND))
"RTN","PXRMPDRP",269,0)
 . S LINE=REMDATA("RNAME",JND)_$$INSCHR^PXRMEXLC(NSP," ")_STATUS
"RTN","PXRMPDRP",270,0)
 . S NSP=54-$L(LINE)-($L(DUE)/2)
"RTN","PXRMPDRP",271,0)
 . S LINE=LINE_$$INSCHR^PXRMEXLC(NSP," ")_DUE
"RTN","PXRMPDRP",272,0)
 . S NSP=69-$L(LINE)-($L(LAST)/2)
"RTN","PXRMPDRP",273,0)
 . S LINE=LINE_$$INSCHR^PXRMEXLC(NSP," ")_LAST
"RTN","PXRMPDRP",274,0)
 . D ADDTXT(LINE)
"RTN","PXRMPDRP",275,0)
 Q
"RTN","PXRMPDRP",276,0)
 ;
"RTN","PXRMPDRP",277,0)
TITLE(PLIEN,DELIM) ;Print the report title.
"RTN","PXRMPDRP",278,0)
 N LISTNAME
"RTN","PXRMPDRP",279,0)
 S LISTNAME=$P(^PXRMXP(810.5,PLIEN,0),U,1)
"RTN","PXRMPDRP",280,0)
 I DELIM D
"RTN","PXRMPDRP",281,0)
 . W @IOF
"RTN","PXRMPDRP",282,0)
 . W !,"Patient Demographic Report"
"RTN","PXRMPDRP",283,0)
 . W !,"   Patient List: "_LISTNAME
"RTN","PXRMPDRP",284,0)
 . W !,"   Created on "_$$FMTE^XLFDT(DCREAT)
"RTN","PXRMPDRP",285,0)
 I 'DELIM D
"RTN","PXRMPDRP",286,0)
 . D ADDTXT("Patient Demographic Report")
"RTN","PXRMPDRP",287,0)
 . D ADDTXT("   Patient List: "_LISTNAME)
"RTN","PXRMPDRP",288,0)
 . D ADDTXT("   Created on "_$$FMTE^XLFDT(DCREAT))
"RTN","PXRMPDRP",289,0)
 Q
"RTN","PXRMPDRP",290,0)
 ;
"RTN","PXRMPDRP",291,0)
VADPTPR(DFN,DNAME,DTYPE,DATA) ;Print data returned by a VADPT call.
"RTN","PXRMPDRP",292,0)
 N IND,JND,KND,LINE,LND,MAX,TEMP,TTEMP
"RTN","PXRMPDRP",293,0)
 D ADDTXT(" ")
"RTN","PXRMPDRP",294,0)
 D ADDTXT(DNAME)
"RTN","PXRMPDRP",295,0)
 S TEMP=$G(^TMP("PXRMPLD",$J,DFN,DTYPE))
"RTN","PXRMPDRP",296,0)
 F IND=1:1:DATA("LEN") D
"RTN","PXRMPDRP",297,0)
 . S JND=$P(DATA,",",IND)
"RTN","PXRMPDRP",298,0)
 . S KND=""
"RTN","PXRMPDRP",299,0)
 . F  S KND=$O(DATA(JND,KND)) Q:KND=""  D
"RTN","PXRMPDRP",300,0)
 .. S TTEMP=$P(TEMP,U,KND)
"RTN","PXRMPDRP",301,0)
 .. S MAX=+$P(DATA(JND,KND),U,3)
"RTN","PXRMPDRP",302,0)
 .. I MAX=0 S MAX=1
"RTN","PXRMPDRP",303,0)
 .. F LND=1:1:MAX D
"RTN","PXRMPDRP",304,0)
 ... S LINE=" "_$P(DATA(JND,KND),U,1)_": "_$P(TTEMP,"~",LND)
"RTN","PXRMPDRP",305,0)
 ... D ADDTXT(LINE)
"RTN","PXRMPDRP",306,0)
 Q
"RTN","PXRMPDRP",307,0)
 ;
"RTN","PXRMPDRS")
0^78^B52646601
"RTN","PXRMPDRS",1,0)
PXRMPDRS ;SLC/PKR - Patient List Demographic Report data selection. ;07/18/2006
"RTN","PXRMPDRS",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPDRS",3,0)
 ;
"RTN","PXRMPDRS",4,0)
ADDSEL(ADDDATA) ;Let the user select the address information they want.
"RTN","PXRMPDRS",5,0)
 N ADDLIST,LIST
"RTN","PXRMPDRS",6,0)
 S ADDLIST("A",1)=" 1 - CURRENT ADDRESS",ADDDATA(1,1)="STREET ADDRESS #1"_U_1
"RTN","PXRMPDRS",7,0)
 S ADDDATA(1,2)="STREET ADDRESS #2"_U_1,ADDDATA(1,3)="STREET ADDRESS #3"_U_1
"RTN","PXRMPDRS",8,0)
 S ADDDATA(1,4)="CITY"_U_1,ADDDATA(1,5)="STATE"_U_2,ADDDATA(1,6)="ZIP"_U_1
"RTN","PXRMPDRS",9,0)
 S ADDDATA(1,7)="COUNTY"_U_2
"RTN","PXRMPDRS",10,0)
 S ADDLIST("A",2)=" 2 - PHONE NUMBER",ADDDATA(2,8)="PHONE NUMBER"_U_1
"RTN","PXRMPDRS",11,0)
 S ADDLIST("A")="Enter your selection(s)"
"RTN","PXRMPDRS",12,0)
 S ADDLIST("?")="^D HELP^PXRMPDRS"
"RTN","PXRMPDRS",13,0)
 W !!,"Select from the following address items:"
"RTN","PXRMPDRS",14,0)
 S LIST=$$SEL^PXRMPDRS(.ADDLIST,2)
"RTN","PXRMPDRS",15,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMPDRS",16,0)
 S ADDDATA=LIST
"RTN","PXRMPDRS",17,0)
 S ADDDATA("LEN")=$L(LIST,",")-1
"RTN","PXRMPDRS",18,0)
 Q
"RTN","PXRMPDRS",19,0)
 ;
"RTN","PXRMPDRS",20,0)
APPERR ;
"RTN","PXRMPDRS",21,0)
 N ECODE
"RTN","PXRMPDRS",22,0)
 I $D(ZTQUEUED) D  Q
"RTN","PXRMPDRS",23,0)
 . N NL,TIME
"RTN","PXRMPDRS",24,0)
 . S TIME=$$NOW^XLFDT
"RTN","PXRMPDRS",25,0)
 . S TIME=$$FMTE^XLFDT(TIME)
"RTN","PXRMPDRS",26,0)
 . K ^TMP("PXRMXMZ",$J)
"RTN","PXRMPDRS",27,0)
 . S ^TMP("PXRMXMZ",$J,1,0)="The Patient Demographic Report requested by "_$$GET1^DIQ(200,DBDUZ,.01)_" on "
"RTN","PXRMPDRS",28,0)
 . S ^TMP("PXRMXMZ",$J,2,0)=TIME_" was supposed to include appointment data."
"RTN","PXRMPDRS",29,0)
 . S ^TMP("PXRMXMZ",$J,3,0)="Appointment data could not be obtained from the Scheduling database due to the"
"RTN","PXRMPDRS",30,0)
 . S ^TMP("PXRMXMZ",$J,4,0)="following error(s):"
"RTN","PXRMPDRS",31,0)
 . S ECODE=0,NL=4
"RTN","PXRMPDRS",32,0)
 . F  S ECODE=$O(^TMP($J,"SDAMA301",ECODE)) Q:ECODE=""  D
"RTN","PXRMPDRS",33,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "_^TMP($J,"SDAMA301",ECODE)
"RTN","PXRMPDRS",34,0)
 . D SEND^PXRMMSG("Scheduling database error(s)",1)
"RTN","PXRMPDRS",35,0)
 . S ZTSTOP=1
"RTN","PXRMPDRS",36,0)
 ;
"RTN","PXRMPDRS",37,0)
 I '$D(ZTQUEUED) D  Q
"RTN","PXRMPDRS",38,0)
 . W @IOF
"RTN","PXRMPDRS",39,0)
 . W !,"Appointment data could not be obtained from the Scheduling database due to the"
"RTN","PXRMPDRS",40,0)
 . W !,"following error(s):"
"RTN","PXRMPDRS",41,0)
 . S ECODE=0
"RTN","PXRMPDRS",42,0)
 . F  S ECODE=$O(^TMP($J,"SDAMA301",ECODE)) Q:ECODE=""  D
"RTN","PXRMPDRS",43,0)
 .. W !," ",^TMP($J,"SDAMA301",ECODE)
"RTN","PXRMPDRS",44,0)
 Q
"RTN","PXRMPDRS",45,0)
 ;
"RTN","PXRMPDRS",46,0)
APPSEL(APPDATA) ;Let the user select the appointment information they want.
"RTN","PXRMPDRS",47,0)
 ;The first subscript of APPDATA is the selection number and the
"RTN","PXRMPDRS",48,0)
 ;the second subscript is the subscript where the data is returned
"RTN","PXRMPDRS",49,0)
 ;in VAPA. The first piece of APPDATA is the name of the data and the
"RTN","PXRMPDRS",50,0)
 ;second piece is the piece of VAPA this is displayed.
"RTN","PXRMPDRS",51,0)
 N APPLIST,LIST,MAX
"RTN","PXRMPDRS",52,0)
 S APPLIST("A",1)=" 1 - APPOINTMENT DATE",APPDATA(1,1)="APPOINTMENT DATE"_U_1
"RTN","PXRMPDRS",53,0)
 S APPLIST("A",2)=" 2 - CLINIC",APPDATA(2,2)="CLINIC"_U_2
"RTN","PXRMPDRS",54,0)
 S APPLIST("A")="Enter your selection(s)"
"RTN","PXRMPDRS",55,0)
 S APPLIST("?")="^D HELP^PXRMPDRS"
"RTN","PXRMPDRS",56,0)
 W !!,"Select from the following future appointment items:"
"RTN","PXRMPDRS",57,0)
 S LIST=$$SEL^PXRMPDRS(.APPLIST,2)
"RTN","PXRMPDRS",58,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMPDRS",59,0)
 S APPDATA=LIST
"RTN","PXRMPDRS",60,0)
 S APPDATA("LEN")=$L(LIST,",")-1
"RTN","PXRMPDRS",61,0)
 I APPDATA("LEN")=0 Q
"RTN","PXRMPDRS",62,0)
 S APPDATA("MAX")=$$ASKNUM^PXRMEUT("Maximum number of appointments to display",1,25)
"RTN","PXRMPDRS",63,0)
 Q
"RTN","PXRMPDRS",64,0)
 ;
"RTN","PXRMPDRS",65,0)
DATASEL(LISTIEN,FINDDATA) ; Build a list of data that is availble for
"RTN","PXRMPDRS",66,0)
 ;this patient list and let the user select what they want.
"RTN","PXRMPDRS",67,0)
 N IND,DATALIST,DTYPE
"RTN","PXRMPDRS",68,0)
 S DTYPE="",IND=0
"RTN","PXRMPDRS",69,0)
 F  S DTYPE=$O(^PXRMXP(810.5,LISTIEN,35,"B",DTYPE)) Q:DTYPE=""  D
"RTN","PXRMPDRS",70,0)
 . S IND=IND+1,DATALIST("A",IND)=" "_IND_" - "_DTYPE
"RTN","PXRMPDRS",71,0)
 . S FINDDATA(IND,IND)=DTYPE
"RTN","PXRMPDRS",72,0)
 ;If there is no data quit.
"RTN","PXRMPDRS",73,0)
 I IND=0 S FINDDATA("LEN")=0 Q
"RTN","PXRMPDRS",74,0)
 S DATALIST("A")="Enter your selections(s)"
"RTN","PXRMPDRS",75,0)
 S DATALIST("?")="^D HELP^PXRMPDRS"
"RTN","PXRMPDRS",76,0)
 W !!,"Select from the following patient data:"
"RTN","PXRMPDRS",77,0)
 S LIST=$$SEL^PXRMPDRS(.DATALIST,IND)
"RTN","PXRMPDRS",78,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMPDRS",79,0)
 S FINDDATA=LIST
"RTN","PXRMPDRS",80,0)
 S FINDDATA("LEN")=$L(LIST,",")-1
"RTN","PXRMPDRS",81,0)
 Q
"RTN","PXRMPDRS",82,0)
 ;
"RTN","PXRMPDRS",83,0)
DEMSEL(DEMDATA) ;Let the user select the demographic information they want.
"RTN","PXRMPDRS",84,0)
 ;The first subscript of DEMDATA is the selection number and the
"RTN","PXRMPDRS",85,0)
 ;the second subscript is the subscript where the data is returned
"RTN","PXRMPDRS",86,0)
 ;in VADM. The first piece of DEMDATA is the name of the data and the
"RTN","PXRMPDRS",87,0)
 ;second piece is the piece of VADM this is displayed.
"RTN","PXRMPDRS",88,0)
 N DEMLIST,DTOUT,DUOUT,IND,ITEM,JND,KND,LIST,TEMP
"RTN","PXRMPDRS",89,0)
 S DEMLIST("A",1)=" 1 - SSN",DEMDATA(1,2)="SSN"_U_2
"RTN","PXRMPDRS",90,0)
 S DEMLIST("A",2)=" 2 - DATE OF BIRTH",DEMDATA(2,3)="DOB"_U_2
"RTN","PXRMPDRS",91,0)
 S DEMLIST("A",3)=" 3 - AGE",DEMDATA(3,4)="AGE"_U_1
"RTN","PXRMPDRS",92,0)
 S DEMLIST("A",4)=" 4 - SEX",DEMDATA(4,5)="SEX"_U_2
"RTN","PXRMPDRS",93,0)
 S DEMLIST("A",5)=" 5 - DATE OF DEATH",DEMDATA(5,6)="DOD"_U_2
"RTN","PXRMPDRS",94,0)
 S DEMLIST("A",6)=" 6 - REMARKS",DEMDATA(6,7)="REMARKS"_U_1
"RTN","PXRMPDRS",95,0)
 S DEMLIST("A",7)=" 7 - HISTORIC RACE",DEMDATA(7,8)="HISTORIC RACE"_U_2
"RTN","PXRMPDRS",96,0)
 S DEMLIST("A",8)=" 8 - RELIGION",DEMDATA(8,9)="RELIGION"_U_2
"RTN","PXRMPDRS",97,0)
 S DEMLIST("A",9)=" 9 - MARITAL STATUS",DEMDATA(9,10)="MARTIAL STATUS"_U_2
"RTN","PXRMPDRS",98,0)
 S DEMLIST("A",10)="10 - ETHNICITY",DEMDATA(10,11)="ETHNICITY"_U_2
"RTN","PXRMPDRS",99,0)
 S DEMLIST("A",11)="11 - RACE",DEMDATA(11,12)="RACE"_U_2
"RTN","PXRMPDRS",100,0)
 S DEMLIST("A")="Enter your selection(s)"
"RTN","PXRMPDRS",101,0)
 S DEMLIST("?")="^D HELP^PXRMPDRS"
"RTN","PXRMPDRS",102,0)
DSEL W !!,"Select from the following demographic items:"
"RTN","PXRMPDRS",103,0)
 S LIST=$$SEL^PXRMPDRS(.DEMLIST,11)
"RTN","PXRMPDRS",104,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMPDRS",105,0)
 S DEMDATA=LIST
"RTN","PXRMPDRS",106,0)
 S DEMDATA("LEN")=$L(LIST,",")-1
"RTN","PXRMPDRS",107,0)
 F IND=1:1:DEMDATA("LEN") D
"RTN","PXRMPDRS",108,0)
 . S JND=$P(LIST,",",IND)
"RTN","PXRMPDRS",109,0)
 . S KND=$O(DEMDATA(JND,""))
"RTN","PXRMPDRS",110,0)
 . S TEMP=$P(DEMDATA(JND,KND),U,1)
"RTN","PXRMPDRS",111,0)
 . I TEMP="SSN" D
"RTN","PXRMPDRS",112,0)
 .. N FULLSSN
"RTN","PXRMPDRS",113,0)
 .. D SSN^PXRMXSD(.FULLSSN)
"RTN","PXRMPDRS",114,0)
 .. S DEMDATA("FULLSSN")=$S($G(FULLSSN)="Y":1,1:0)
"RTN","PXRMPDRS",115,0)
 . I $D(DTOUT)!$D(DUOUT) S IND=DEMDATA("LEN")+1 Q
"RTN","PXRMPDRS",116,0)
 . I TEMP="ETHNICITY" S $P(DEMDATA(10,11),U,3)=$$ASKNUM^PXRMEUT("Maximum number of ethnicity entries to display",1,10)
"RTN","PXRMPDRS",117,0)
 . I TEMP="RACE" S $P(DEMDATA(11,12),U,3)=$$ASKNUM^PXRMEUT("Maximum number of race entries to display",1,10)
"RTN","PXRMPDRS",118,0)
 I $D(DTOUT)!$D(DUOUT) K DTOUT,DUOUT G DSEL
"RTN","PXRMPDRS",119,0)
 Q
"RTN","PXRMPDRS",120,0)
 ;
"RTN","PXRMPDRS",121,0)
ELIGSEL(ELIGDATA) ;Let the user select the eligibility data they want.
"RTN","PXRMPDRS",122,0)
 ;The first subscript of ELIGDATA is the selection number and the
"RTN","PXRMPDRS",123,0)
 ;the second subscript is the subscript where the data is returned
"RTN","PXRMPDRS",124,0)
 ;in VAEL. The first piece of ELIGDATA is the name of the data and the
"RTN","PXRMPDRS",125,0)
 ;second piece is the piece of VAEL this is displayed.
"RTN","PXRMPDRS",126,0)
 N ELIGLIST,ITEM,LIST
"RTN","PXRMPDRS",127,0)
 S ELIGLIST("A",1)=" 1 - PRIMARY ELGIBILITY CODE",ELIGDATA(1,1)="PRIMARY ELGIBILITY CODE"_U_2
"RTN","PXRMPDRS",128,0)
 S ELIGLIST("A",2)=" 2 - PERIOD OF SERVICE",ELIGDATA(2,2)="PERIOD OF SERVICE"_U_2
"RTN","PXRMPDRS",129,0)
 S ELIGLIST("A",3)=" 3 - % SERVICE CONNECTED",ELIGDATA(3,3)="% SERVICE CONNECTED"_U_2
"RTN","PXRMPDRS",130,0)
 S ELIGLIST("A",4)=" 4 - VETERAN",ELIGDATA(4,4)="VETERAN"_U_1
"RTN","PXRMPDRS",131,0)
 S ELIGLIST("A",5)=" 5 - TYPE",ELIGDATA(5,6)="TYPE"_U_2
"RTN","PXRMPDRS",132,0)
 S ELIGLIST("A",6)=" 6 - ELIGIBILITY STATUS",ELIGDATA(6,8)="ELIGIBILITY STATUS"_U_2
"RTN","PXRMPDRS",133,0)
 S ELIGLIST("A",7)=" 7 - CURRENT MEANS TEST",ELIGDATA(7,9)="CURRENT MEANS TEST"_U_2
"RTN","PXRMPDRS",134,0)
 S ELIGLIST("A")="Enter your selection(s)"
"RTN","PXRMPDRS",135,0)
 S ELIGLIST("?")="^D HELP^PXRMPDRS"
"RTN","PXRMPDRS",136,0)
 W !!,"Select from the following eligibility items:"
"RTN","PXRMPDRS",137,0)
 S LIST=$$SEL^PXRMPDRS(.ELIGLIST,7)
"RTN","PXRMPDRS",138,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMPDRS",139,0)
 S ELIGDATA=LIST
"RTN","PXRMPDRS",140,0)
 S ELIGDATA("LEN")=$L(LIST,",")-1
"RTN","PXRMPDRS",141,0)
 Q
"RTN","PXRMPDRS",142,0)
 ;
"RTN","PXRMPDRS",143,0)
HELP ; -- help code.
"RTN","PXRMPDRS",144,0)
 W !!,"You can choose any combination of numbers i.e., 1-4 or 1,3-5"
"RTN","PXRMPDRS",145,0)
 W !!,"See the Clinical Reminders Managers manual for detailed explanations of each"
"RTN","PXRMPDRS",146,0)
 W !,"of the selection items."
"RTN","PXRMPDRS",147,0)
 Q
"RTN","PXRMPDRS",148,0)
 ;
"RTN","PXRMPDRS",149,0)
INPSEL(INPDATA) ;Let the user select the inpatient information they want.
"RTN","PXRMPDRS",150,0)
 ;The first subscript of INPDATA is the selection number and the
"RTN","PXRMPDRS",151,0)
 ;the second subscript is the subscript where the data is returned
"RTN","PXRMPDRS",152,0)
 ;in VAIN. The first piece of INPDATA is the name of the data and the
"RTN","PXRMPDRS",153,0)
 ;second piece is the piece of VAIN this is displayed.
"RTN","PXRMPDRS",154,0)
 N INPLIST,ITEM,LIST
"RTN","PXRMPDRS",155,0)
 S INPLIST("A",1)=" 1 - WARD LOCATION",INPDATA(1,4)="WARD"_U_2
"RTN","PXRMPDRS",156,0)
 S INPLIST("A",2)=" 2 - ROOM-BED",INPDATA(2,5)="ROOM-BED"_U_1
"RTN","PXRMPDRS",157,0)
 S INPLIST("A",3)=" 3 - ADMISSION DATE/TIME",INPDATA(3,7)="ADMISSION DATE/TIME"_U_2
"RTN","PXRMPDRS",158,0)
 S INPLIST("A",4)=" 4 - ATTENDING PHYSICIAN",INPDATA(4,11)="ATTENDING"_U_2
"RTN","PXRMPDRS",159,0)
 S INPLIST("A")="Enter your selection(s)"
"RTN","PXRMPDRS",160,0)
 S INPLIST("?")="^D HELP^PXRMPDRS"
"RTN","PXRMPDRS",161,0)
 W !!,"Select from the following inpatient items:"
"RTN","PXRMPDRS",162,0)
 S LIST=$$SEL^PXRMPDRS(.INPLIST,5)
"RTN","PXRMPDRS",163,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMPDRS",164,0)
 S INPDATA=LIST
"RTN","PXRMPDRS",165,0)
 S INPDATA("LEN")=$L(LIST,",")-1
"RTN","PXRMPDRS",166,0)
 Q
"RTN","PXRMPDRS",167,0)
 ;
"RTN","PXRMPDRS",168,0)
REMSEL(PLIEN,REMDATA) ;If the list was generated from a reminder report
"RTN","PXRMPDRS",169,0)
 ;let the user select the reminder data they want.
"RTN","PXRMPDRS",170,0)
 I '$P(^PXRMXP(810.5,PLIEN,0),U,9) S REMDATA("LEN")=0 Q
"RTN","PXRMPDRS",171,0)
 N IEN,IND,REMLIST,RNAME
"RTN","PXRMPDRS",172,0)
 S (IEN,IND)=0
"RTN","PXRMPDRS",173,0)
 F  S IEN=$O(^PXRMXP(810.5,PLIEN,45,"B",IEN)) Q:IEN=""  D
"RTN","PXRMPDRS",174,0)
 . S RNAME=$P(^PXD(811.9,IEN,0),U,3)
"RTN","PXRMPDRS",175,0)
 . I RNAME="" S RNAME=$P(^PXD(811.9,IEN,0),U,1)
"RTN","PXRMPDRS",176,0)
 . S IND=IND+1
"RTN","PXRMPDRS",177,0)
 . S REMDATA("RNAME",IND)=RNAME
"RTN","PXRMPDRS",178,0)
 . S REMDATA("IEN",IND)=IEN
"RTN","PXRMPDRS",179,0)
 . S REMLIST("A",IND)=" "_IND_" - "_RNAME
"RTN","PXRMPDRS",180,0)
 S REMLIST("A")="Enter your selection(s)"
"RTN","PXRMPDRS",181,0)
 S REMLIST("?")="^D HELP^PXRMPDRS"
"RTN","PXRMPDRS",182,0)
 W !!,"Include due status information for the following reminder(s):"
"RTN","PXRMPDRS",183,0)
 S LIST=$$SEL^PXRMPDRS(.REMLIST,IND)
"RTN","PXRMPDRS",184,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMPDRS",185,0)
 S REMDATA=LIST
"RTN","PXRMPDRS",186,0)
 S REMDATA("LEN")=$L(LIST,",")-1
"RTN","PXRMPDRS",187,0)
 Q
"RTN","PXRMPDRS",188,0)
 ;
"RTN","PXRMPDRS",189,0)
SEL(SELLIST,LEN) ;Select global list
"RTN","PXRMPDRS",190,0)
 N DIR,X,Y
"RTN","PXRMPDRS",191,0)
 M DIR=SELLIST
"RTN","PXRMPDRS",192,0)
 S DIR(0)="LO^1:"_LEN
"RTN","PXRMPDRS",193,0)
 D ^DIR
"RTN","PXRMPDRS",194,0)
 Q Y
"RTN","PXRMPDRS",195,0)
 ;
"RTN","PXRMPLST")
0^35^B54076318
"RTN","PXRMPLST",1,0)
PXRMPLST ; SLC/PKR - Build a patient list from a reminder definition. ;06/09/2006
"RTN","PXRMPLST",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPLST",3,0)
 ;
"RTN","PXRMPLST",4,0)
 ;Input  :  RIEN     - Reminder IEN
"RTN","PXRMPLST",5,0)
 ;          PLIST    - List returned in ^TMP($J,PLIST,DFN)
"RTN","PXRMPLST",6,0)
 ;          DFNONLY  - If true list contains only DFN information
"RTN","PXRMPLST",7,0)
 ;          PXRMDATE - Evaluation date
"RTN","PXRMPLST",8,0)
 ;===================================================
"RTN","PXRMPLST",9,0)
BLDPLST(RIEN,PLIST,DFNONLY,PXRMDATE) ;
"RTN","PXRMPLST",10,0)
 N DEFARR,DFN,DOBE,DOBS,ELE,ERROR,ERRSTR,IND,FNUM
"RTN","PXRMPLST",11,0)
 N LIST1,LIST2,LNAME,LSP,LSTACK
"RTN","PXRMPLST",12,0)
 N NDR,NOT,OPER,PCLOG,PFSTACK,SEX,TYPE
"RTN","PXRMPLST",13,0)
 ;
"RTN","PXRMPLST",14,0)
 D DEF^PXRMLDR(RIEN,.DEFARR)
"RTN","PXRMPLST",15,0)
 ;Get the cohort logic string. This has passed a validation before
"RTN","PXRMPLST",16,0)
 ;it can be selected for building patient lists so we don't need to
"RTN","PXRMPLST",17,0)
 ;check it here.
"RTN","PXRMPLST",18,0)
 S PCLOG=DEFARR(31)
"RTN","PXRMPLST",19,0)
 I PCLOG="" Q
"RTN","PXRMPLST",20,0)
 S OPER="!&~"
"RTN","PXRMPLST",21,0)
 ;Get the sex field, if PCLOG does not contain SEX set it to null.
"RTN","PXRMPLST",22,0)
 S SEX=$S(PCLOG["SEX":$P(DEFARR(0),U,9),1:"")
"RTN","PXRMPLST",23,0)
 ;If PCLOG contains age build the corresponding date of birth range(s).
"RTN","PXRMPLST",24,0)
 I PCLOG["AGE" D DOBR(.DEFARR,.NDR,.DOBS,.DOBE)
"RTN","PXRMPLST",25,0)
 ;Replace &' with ~ so the stack will be built properly.
"RTN","PXRMPLST",26,0)
 S PCLOG=$$STRREP^PXRMUTIL(PCLOG,"&'","~")
"RTN","PXRMPLST",27,0)
 D POSTFIX^PXRMSTAC(PCLOG,OPER,.PFSTACK)
"RTN","PXRMPLST",28,0)
 ;Process the logic.
"RTN","PXRMPLST",29,0)
 D CFSAA(.PFSTACK)
"RTN","PXRMPLST",30,0)
 S (IND,ERROR,LSP,LSTACK(0),NOT)=0
"RTN","PXRMPLST",31,0)
 F  Q:(IND'<PFSTACK(0))!(ERROR)  D
"RTN","PXRMPLST",32,0)
 . S IND=IND+1,ELE=PFSTACK(IND)
"RTN","PXRMPLST",33,0)
 . I ELE["'" S NOT=1
"RTN","PXRMPLST",34,0)
 . S TYPE=$S(ELE="'":"NOT",ELE["AGE":"A",ELE["FI":"FI",ELE["FF":"FF",ELE="SAA":"SAA",ELE["SEX":"S",OPER[ELE:"OP",1:"")
"RTN","PXRMPLST",35,0)
 .;
"RTN","PXRMPLST",36,0)
 . I TYPE="A" D  Q
"RTN","PXRMPLST",37,0)
 .. S LNAME="LIST"_IND
"RTN","PXRMPLST",38,0)
 .. D LSA("",NDR,.DOBS,.DOBE,LNAME)
"RTN","PXRMPLST",39,0)
 .. D PUSH^PXRMSTAC(.LSTACK,LNAME)
"RTN","PXRMPLST",40,0)
 .. D AGEFI(.DEFARR,LNAME,SEX,"")
"RTN","PXRMPLST",41,0)
 .;
"RTN","PXRMPLST",42,0)
 . I TYPE="FI" D  Q
"RTN","PXRMPLST",43,0)
 .. S IND=IND+1,FNUM=PFSTACK(IND)
"RTN","PXRMPLST",44,0)
 .. I +FNUM'=FNUM S ERROR=1,ERRSTR="Error - having a finding not followed by a number" Q
"RTN","PXRMPLST",45,0)
 .. S LNAME="LIST"_IND
"RTN","PXRMPLST",46,0)
 .. D EVALPL^PXRMEVFI(.DEFARR,FNUM,LNAME)
"RTN","PXRMPLST",47,0)
 .. D PUSH^PXRMSTAC(.LSTACK,LNAME)
"RTN","PXRMPLST",48,0)
 .;
"RTN","PXRMPLST",49,0)
 . I TYPE="FF" D  Q
"RTN","PXRMPLST",50,0)
 .. S IND=IND+1,FNUM=PFSTACK(IND)
"RTN","PXRMPLST",51,0)
 .. I +FNUM'=FNUM S ERROR=1,ERRSTR="Error - having a function finding not followed by a number"
"RTN","PXRMPLST",52,0)
 .. S LNAME="LIST"_IND
"RTN","PXRMPLST",53,0)
 .. D EVALPL^PXRMFF(.DEFARR,"FF"_FNUM,LNAME)
"RTN","PXRMPLST",54,0)
 .. D PUSH^PXRMSTAC(.LSTACK,LNAME)
"RTN","PXRMPLST",55,0)
 .;
"RTN","PXRMPLST",56,0)
 . I TYPE="NOT" S NOT=1 Q 
"RTN","PXRMPLST",57,0)
 .;
"RTN","PXRMPLST",58,0)
 . I TYPE="OP" D  Q
"RTN","PXRMPLST",59,0)
 .. S LIST2=$$POP^PXRMSTAC(.LSTACK)
"RTN","PXRMPLST",60,0)
 .. S LIST1=$$POP^PXRMSTAC(.LSTACK)
"RTN","PXRMPLST",61,0)
 .. I NOT S ELE=ELE_"'",NOT=0
"RTN","PXRMPLST",62,0)
 .. D LOGOP(LIST1,LIST2,ELE)
"RTN","PXRMPLST",63,0)
 .. D PUSH^PXRMSTAC(.LSTACK,LIST1)
"RTN","PXRMPLST",64,0)
 .. K ^TMP($J,LIST2)
"RTN","PXRMPLST",65,0)
 .;
"RTN","PXRMPLST",66,0)
 . I TYPE="S" D  Q
"RTN","PXRMPLST",67,0)
 .. S LNAME="LIST"_IND
"RTN","PXRMPLST",68,0)
 .. D LSEX(SEX,LNAME,.LSTACK)
"RTN","PXRMPLST",69,0)
 .. D PUSH^PXRMSTAC(.LSTACK,LNAME)
"RTN","PXRMPLST",70,0)
 .;
"RTN","PXRMPLST",71,0)
 . I TYPE="SAA" D  Q
"RTN","PXRMPLST",72,0)
 .. S LNAME="LIST"_IND
"RTN","PXRMPLST",73,0)
 .. D LSA(SEX,NDR,.DOBS,.DOBE,LNAME)
"RTN","PXRMPLST",74,0)
 .. D PUSH^PXRMSTAC(.LSTACK,LNAME)
"RTN","PXRMPLST",75,0)
 .. D AGEFI(.DEFARR,LNAME,SEX,"")
"RTN","PXRMPLST",76,0)
 .;
"RTN","PXRMPLST",77,0)
 S LIST1=$$POP^PXRMSTAC(.LSTACK)
"RTN","PXRMPLST",78,0)
 ;If AGE is not in the cohort logic look for any findings that set the
"RTN","PXRMPLST",79,0)
 ;frequency to 0Y and therefore remove the patient from the cohort.
"RTN","PXRMPLST",80,0)
 I PCLOG'["AGE" D AGEFI(.DEFARR,LIST1,"","0Y")
"RTN","PXRMPLST",81,0)
 ;
"RTN","PXRMPLST",82,0)
 I $G(DFNONLY) D
"RTN","PXRMPLST",83,0)
 . S DFN=0
"RTN","PXRMPLST",84,0)
 . F  S DFN=$O(^TMP($J,LIST1,1,DFN)) Q:DFN=""  D
"RTN","PXRMPLST",85,0)
 .. S ^TMP($J,PLIST,DFN)=""
"RTN","PXRMPLST",86,0)
 E  M ^TMP($J,PLIST)=^TMP($J,LIST1)
"RTN","PXRMPLST",87,0)
 K ^TMP($J,LIST1)
"RTN","PXRMPLST",88,0)
 Q
"RTN","PXRMPLST",89,0)
 ;
"RTN","PXRMPLST",90,0)
 ;==================================================
"RTN","PXRMPLST",91,0)
AGEFI(DEFARR,LNAME,SEX,ONLYFREQ) ;Check for patients that need to be
"RTN","PXRMPLST",92,0)
 ;added or removed because of a finding that changes the age range.
"RTN","PXRMPLST",93,0)
 N DEL,DFN,DOB,DOBE,DOBS,FILIST,FINUM,FREQ,IND,JND,LOGOP
"RTN","PXRMPLST",94,0)
 N MINAGE,MAXAGE,NUMAFI,PSEX,RANK,RANKARR,RF,TEMP,TGLIST
"RTN","PXRMPLST",95,0)
 S NUMAFI=$P(DEFARR(40),U,1)
"RTN","PXRMPLST",96,0)
 I NUMAFI=0 Q
"RTN","PXRMPLST",97,0)
 S FILIST=$P(DEFARR(40),U,2)
"RTN","PXRMPLST",98,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMPLST",99,0)
 . S FINUM=$P(FILIST,";",IND)
"RTN","PXRMPLST",100,0)
 . S TEMP=$S(FINUM["FF":DEFARR(25,FINUM,0),1:DEFARR(20,FINUM,0))
"RTN","PXRMPLST",101,0)
 . S RANK=+$P(TEMP,U,5)
"RTN","PXRMPLST",102,0)
 . I RANK=0 S RANK=9999
"RTN","PXRMPLST",103,0)
 . S FREQ=$$FRQINDAY^PXRMDATE($P(TEMP,U,4))
"RTN","PXRMPLST",104,0)
 .;If there is no frequency with this rank ignore it.
"RTN","PXRMPLST",105,0)
 . I FREQ]"" S RANKARR(RANK,FREQ,FINUM)=""
"RTN","PXRMPLST",106,0)
 S IND=0,RANK=""
"RTN","PXRMPLST",107,0)
 F  S RANK=$O(RANKARR(RANK)) Q:RANK=""  D
"RTN","PXRMPLST",108,0)
 . S FREQ=""
"RTN","PXRMPLST",109,0)
 . F  S FREQ=$O(RANKARR(RANK,FREQ)) Q:FREQ=""  D
"RTN","PXRMPLST",110,0)
 .. S FINUM=0
"RTN","PXRMPLST",111,0)
 .. F  S FINUM=$O(RANKARR(RANK,FREQ,FINUM)) Q:FINUM=""  D
"RTN","PXRMPLST",112,0)
 ... S IND=IND+1,RF(IND)=FINUM
"RTN","PXRMPLST",113,0)
 I IND'=NUMAFI W !,"Error in AGEFI^PXRMPLST - Ranking failed!"
"RTN","PXRMPLST",114,0)
 ;Build a list for each age finding.
"RTN","PXRMPLST",115,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMPLST",116,0)
 . S FINUM=RF(IND)
"RTN","PXRMPLST",117,0)
 . S TGLIST="AGEFI"_FINUM
"RTN","PXRMPLST",118,0)
 . S TEMP=$S(FINUM["FF":DEFARR(25,FINUM,0),1:DEFARR(20,FINUM,0))
"RTN","PXRMPLST",119,0)
 . S FREQ=$P(TEMP,U,4)
"RTN","PXRMPLST",120,0)
 . I ONLYFREQ="0Y",FREQ'="0Y" S LOGOP(IND)="~" Q
"RTN","PXRMPLST",121,0)
 . S LOGOP(IND)=$S(FREQ="0Y":"~",FREQ="":"~",1:"!")
"RTN","PXRMPLST",122,0)
 . S MINAGE=$P(TEMP,U,2)
"RTN","PXRMPLST",123,0)
 . S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMPLST",124,0)
 . S DOBE=$S(MINAGE="":$$NOW^PXRMDATE,1:$$GETDOB(MINAGE,"MIN"))
"RTN","PXRMPLST",125,0)
 . S DOBS=$S(MAXAGE="":0,1:$$GETDOB(MAXAGE,"MAX"))
"RTN","PXRMPLST",126,0)
 . K ^TMP($J,TGLIST)
"RTN","PXRMPLST",127,0)
 . I FINUM=+FINUM D EVALPL^PXRMEVFI(.DEFARR,FINUM,TGLIST)
"RTN","PXRMPLST",128,0)
 . I FINUM["FF" D EVALPL^PXRMFF(.DEFARR,FINUM,TGLIST)
"RTN","PXRMPLST",129,0)
 .;Filter TGLIST based on the age range.
"RTN","PXRMPLST",130,0)
 . S DFN=$S(FREQ="0Y":$O(^TMP($J,TGLIST,1,""),-1),1:0)
"RTN","PXRMPLST",131,0)
 . F  S DFN=$O(^TMP($J,TGLIST,1,DFN)) Q:DFN=""  D
"RTN","PXRMPLST",132,0)
 .. S DEL=0
"RTN","PXRMPLST",133,0)
 ..;Reference to ^DPT DBIA #10035
"RTN","PXRMPLST",134,0)
 .. S PSEX=$P(^DPT(DFN,0),U,2),DOB=$P(^DPT(DFN,0),U,3)
"RTN","PXRMPLST",135,0)
 .. I SEX'="",PSEX'=SEX S DEL=1
"RTN","PXRMPLST",136,0)
 .. I (DOB<DOBS)!(DOB>DOBE) S DEL=1
"RTN","PXRMPLST",137,0)
 .. I DEL K ^TMP($J,TGLIST,0,DFN),^TMP($J,TGLIST,1,DFN)
"RTN","PXRMPLST",138,0)
 ;Remove patients on a list with a higher rank from all lists with
"RTN","PXRMPLST",139,0)
 ;a lower rank.
"RTN","PXRMPLST",140,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMPLST",141,0)
 . F JND=IND+1:1:NUMAFI D LOGOP("AGEFI"_RF(JND),"AGEFI"_RF(IND),"~")
"RTN","PXRMPLST",142,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMPLST",143,0)
 . D LOGOP(LNAME,"AGEFI"_RF(IND),LOGOP(IND))
"RTN","PXRMPLST",144,0)
 . K ^TMP($J,"AGEFI"_RF(IND))
"RTN","PXRMPLST",145,0)
 Q
"RTN","PXRMPLST",146,0)
 ;
"RTN","PXRMPLST",147,0)
 ;==================================================
"RTN","PXRMPLST",148,0)
CFSAA(STACK) ;Check for the first three elements on the stack being
"RTN","PXRMPLST",149,0)
 ;SEX, AGE, and &. If that is the case replace the with the "special"
"RTN","PXRMPLST",150,0)
 ;finding SAA.
"RTN","PXRMPLST",151,0)
 N EL1,EL2,EL3,SAA
"RTN","PXRMPLST",152,0)
 S SAA=0
"RTN","PXRMPLST",153,0)
 S EL1=$G(STACK(1)),EL2=$G(STACK(2)),EL3=$G(STACK(3))
"RTN","PXRMPLST",154,0)
 I EL1="SEX",EL2="AGE",EL3="&" S SAA=1
"RTN","PXRMPLST",155,0)
 I EL1="AGE",EL2="SEX",EL3="&" S SAA=1
"RTN","PXRMPLST",156,0)
 I 'SAA Q
"RTN","PXRMPLST",157,0)
 ;Create a new pseudo-element for SEX&AGE.
"RTN","PXRMPLST",158,0)
 S EL1=$$POP^PXRMSTAC(.STACK)
"RTN","PXRMPLST",159,0)
 S EL1=$$POP^PXRMSTAC(.STACK)
"RTN","PXRMPLST",160,0)
 S EL1=$$POP^PXRMSTAC(.STACK)
"RTN","PXRMPLST",161,0)
 D PUSH^PXRMSTAC(.STACK,"SAA")
"RTN","PXRMPLST",162,0)
 Q
"RTN","PXRMPLST",163,0)
 ;
"RTN","PXRMPLST",164,0)
 ;==================================================
"RTN","PXRMPLST",165,0)
DOBR(DEFARR,NDR,DOBS,DOBE) ;Build the date of birth range.
"RTN","PXRMPLST",166,0)
 N IND,FREQ,MINAGE,MAXAGE,TEMP
"RTN","PXRMPLST",167,0)
 S (IND,NDR)=0
"RTN","PXRMPLST",168,0)
 F  S IND=+$O(DEFARR(7,IND)) Q:IND=0  D
"RTN","PXRMPLST",169,0)
 . S TEMP=DEFARR(7,IND,0)
"RTN","PXRMPLST",170,0)
 . S FREQ=$P(TEMP,U,1)
"RTN","PXRMPLST",171,0)
 . I (FREQ="0Y")!(FREQ="") Q
"RTN","PXRMPLST",172,0)
 . S MINAGE=$P(TEMP,U,2)
"RTN","PXRMPLST",173,0)
 . S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMPLST",174,0)
 . S NDR=NDR+1
"RTN","PXRMPLST",175,0)
 . S DOBE(NDR)=$S(MINAGE="":$$NOW^PXRMDATE,1:$$GETDOB(MINAGE,"MIN"))
"RTN","PXRMPLST",176,0)
 . S DOBS(NDR)=$S(MAXAGE="":0,1:$$GETDOB(MAXAGE,"MAX"))
"RTN","PXRMPLST",177,0)
 Q
"RTN","PXRMPLST",178,0)
 ;
"RTN","PXRMPLST",179,0)
 ;==================================================
"RTN","PXRMPLST",180,0)
GENTERM(FINDING,FINUM,TERMARR) ;Given a reminder finding generate a term
"RTN","PXRMPLST",181,0)
 ;for patient list evaluation.
"RTN","PXRMPLST",182,0)
 N IEN,IND,TEMP,TYPE
"RTN","PXRMPLST",183,0)
 S TEMP=$P(FINDING,U,1)
"RTN","PXRMPLST",184,0)
 S IEN=$P(TEMP,";",1)
"RTN","PXRMPLST",185,0)
 S TYPE=$P(TEMP,";",2)
"RTN","PXRMPLST",186,0)
 ;If the finding is a term just load the term.
"RTN","PXRMPLST",187,0)
 I TYPE="PXRMD(811.5," D TERM^PXRMLDR(IEN,.TERMARR) Q
"RTN","PXRMPLST",188,0)
 S TERMARR(0)="GENERATED"
"RTN","PXRMPLST",189,0)
 S TERMARR("IEN")=0
"RTN","PXRMPLST",190,0)
 M TERMARR(20,1)=DEFARR(20,FINUM)
"RTN","PXRMPLST",191,0)
 S TERMARR("E",TYPE,IEN,1)=""
"RTN","PXRMPLST",192,0)
 Q
"RTN","PXRMPLST",193,0)
 ;
"RTN","PXRMPLST",194,0)
 ;==================================================
"RTN","PXRMPLST",195,0)
GETDOB(AGE,TYPE) ;Given an age in years return the corresponding date of
"RTN","PXRMPLST",196,0)
 ;birth. If TYPE is MIN then find the date of birth that will make them
"RTN","PXRMPLST",197,0)
 ;that age. If TYPE is MAX find the last day that will make them
"RTN","PXRMPLST",198,0)
 ;that age, i.e., the next day is their birthday.
"RTN","PXRMPLST",199,0)
 N DATE,DOB
"RTN","PXRMPLST",200,0)
 S DATE=$$NOW^PXRMDATE
"RTN","PXRMPLST",201,0)
 I TYPE="MIN" S DOB=DATE-(10000*AGE)
"RTN","PXRMPLST",202,0)
 I TYPE="MAX" S DOB=DATE-(10000*(AGE+1)),DOB=$$FMADD^XLFDT(DOB,1)
"RTN","PXRMPLST",203,0)
 Q DOB
"RTN","PXRMPLST",204,0)
 ;
"RTN","PXRMPLST",205,0)
 ;==================================================
"RTN","PXRMPLST",206,0)
LOGOP(LIST1,LIST2,LOGOP) ;Given LIST1 and LIST2 apply the logical
"RTN","PXRMPLST",207,0)
 ;operator LOGOP to generate a new list and return it in LIST1
"RTN","PXRMPLST",208,0)
 N DFN1,DFN2
"RTN","PXRMPLST",209,0)
 I LOGOP="&" D  Q
"RTN","PXRMPLST",210,0)
 . S DFN1=""
"RTN","PXRMPLST",211,0)
 . F  S DFN1=$O(^TMP($J,LIST1,1,DFN1)) Q:DFN1=""  D
"RTN","PXRMPLST",212,0)
 .. I $D(^TMP($J,LIST2,1,DFN1)) M ^TMP($J,LIST1,1,DFN1)=^TMP($J,LIST2,1,DFN1) Q
"RTN","PXRMPLST",213,0)
 .. K ^TMP($J,LIST1,1,DFN1)
"RTN","PXRMPLST",214,0)
 ;
"RTN","PXRMPLST",215,0)
 ;"~" represents "&'".
"RTN","PXRMPLST",216,0)
 I LOGOP="~" D  Q
"RTN","PXRMPLST",217,0)
 . S DFN1=""
"RTN","PXRMPLST",218,0)
 . F  S DFN1=$O(^TMP($J,LIST1,1,DFN1)) Q:DFN1=""  D
"RTN","PXRMPLST",219,0)
 .. I $D(^TMP($J,LIST2,1,DFN1)) K ^TMP($J,LIST1,1,DFN1)
"RTN","PXRMPLST",220,0)
 ;
"RTN","PXRMPLST",221,0)
 I LOGOP="!" D
"RTN","PXRMPLST",222,0)
 . S DFN2=""
"RTN","PXRMPLST",223,0)
 . F  S DFN2=$O(^TMP($J,LIST2,1,DFN2)) Q:DFN2=""  D
"RTN","PXRMPLST",224,0)
 .. M ^TMP($J,LIST1,1,DFN2)=^TMP($J,LIST2,1,DFN2)
"RTN","PXRMPLST",225,0)
 Q
"RTN","PXRMPLST",226,0)
 ;
"RTN","PXRMPLST",227,0)
 ;==================================================
"RTN","PXRMPLST",228,0)
LSA(SEX,NDR,DOBS,DOBE,LNAME) ;Build a list from a SEX & AGE finding.
"RTN","PXRMPLST",229,0)
 ;Reference to ^DPT DBIA #10035
"RTN","PXRMPLST",230,0)
 N DFN,DS,IND,SEXOK
"RTN","PXRMPLST",231,0)
 F IND=1:1:NDR D
"RTN","PXRMPLST",232,0)
 . S DS=DOBS(IND)-.1
"RTN","PXRMPLST",233,0)
 . F  S DS=$O(^DPT("ADOB",DS)) Q:(DS>DOBE(IND))!(DS="")  D
"RTN","PXRMPLST",234,0)
 .. S DFN=""
"RTN","PXRMPLST",235,0)
 .. F  S DFN=$O(^DPT("ADOB",DS,DFN)) Q:DFN=""  D
"RTN","PXRMPLST",236,0)
 ... S SEXOK=$S(SEX="":1,$D(^DPT("ASX",SEX,DFN)):1,1:0)
"RTN","PXRMPLST",237,0)
 ... I SEXOK S ^TMP($J,LNAME,1,DFN,1,"SAA")=""
"RTN","PXRMPLST",238,0)
 Q
"RTN","PXRMPLST",239,0)
 ;
"RTN","PXRMPLST",240,0)
 ;==================================================
"RTN","PXRMPLST",241,0)
LSEX(SEX,LNAME,LSTACK) ;Build a list from a SEX finding.
"RTN","PXRMPLST",242,0)
 ;Reference to ^DPT DBIA #10035
"RTN","PXRMPLST",243,0)
 N ELIST
"RTN","PXRMPLST",244,0)
 ;Start with the existing list to build a list based on sex.
"RTN","PXRMPLST",245,0)
 S ELIST=$$POP^PXRMSTAC(.LSTACK)
"RTN","PXRMPLST",246,0)
 D PUSH^PXRMSTAC(.LSTACK,ELIST)
"RTN","PXRMPLST",247,0)
 S DFN=0
"RTN","PXRMPLST",248,0)
 F  S DFN=$O(^TMP($J,ELIST,1,DFN)) Q:DFN=""  D
"RTN","PXRMPLST",249,0)
 . I $D(^DPT("ASX",SEX,DFN)) S ^TMP($J,LNAME,1,DFN,SEX,1)=""
"RTN","PXRMPLST",250,0)
 Q
"RTN","PXRMPLST",251,0)
 ;
"RTN","PXRMPROB")
0^97^B44715259
"RTN","PXRMPROB",1,0)
PXRMPROB ; SLC/PKR - Code for Problem List. ;06/09/2006
"RTN","PXRMPROB",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPROB",3,0)
 ;
"RTN","PXRMPROB",4,0)
 ;===================================================
"RTN","PXRMPROB",5,0)
FPDAT(DFN,TAXARR,NGET,SDIR,BDT,EDT,STATUSA,FLIST) ;Find data for a
"RTN","PXRMPROB",6,0)
 ;patient. STATUSA is an array containing a list of status to search
"RTN","PXRMPROB",7,0)
 ;for. A status can be "A" for active or "I" for inactive. If STATUSA=""
"RTN","PXRMPROB",8,0)
 ;it will search for all with data.
"RTN","PXRMPROB",9,0)
 N BDTT,DAS,DATE,DEND,DS,DSAVE,DTT,EDATE,EDTT,ICDP,IND,JND,LGT,LLT
"RTN","PXRMPROB",10,0)
 N NFOUND,NPRIO,NSTAT,PRIO,PRIOA,STAT,STATUSAT,TDATE,TE,TIND,TLIST,TS
"RTN","PXRMPROB",11,0)
 I $G(^PXRMINDX(9000011,"DATE BUILT"))="" D  Q
"RTN","PXRMPROB",12,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000011)
"RTN","PXRMPROB",13,0)
 I '$D(^PXRMINDX(9000011,"PSPI",DFN)) Q
"RTN","PXRMPROB",14,0)
 S NSTAT=STATUSA(0)
"RTN","PXRMPROB",15,0)
 I NSTAT=0 Q
"RTN","PXRMPROB",16,0)
 ;EDATE is the evaluation date.
"RTN","PXRMPROB",17,0)
 S EDATE=$$NOW^PXRMDATE
"RTN","PXRMPROB",18,0)
 S BDTT=BDT-.0000001
"RTN","PXRMPROB",19,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMPROB",20,0)
 S DEND=$S(EDT[".":EDT,1:EDT+.240001)
"RTN","PXRMPROB",21,0)
 S DTT=EDATE+.240001
"RTN","PXRMPROB",22,0)
 ;Get the start and end of the taxonomy.
"RTN","PXRMPROB",23,0)
 S TS=$O(TAXARR(80,""))-1
"RTN","PXRMPROB",24,0)
 S TE=$O(TAXARR(80,""),-1)
"RTN","PXRMPROB",25,0)
 ;For chronic problems we use today's date so only search for chronic
"RTN","PXRMPROB",26,0)
 ;problems if today's datelies in the date range.
"RTN","PXRMPROB",27,0)
 I EDATE'<BDT,EDATE'>DEND S NPRIO=3,PRIOA(1)="C",PRIOA(2)="A",PRIOA(3)="U"
"RTN","PXRMPROB",28,0)
 E  S NPRIO=2,PRIOA(1)="A",PRIOA(2)="U"
"RTN","PXRMPROB",29,0)
 S NFOUND=0
"RTN","PXRMPROB",30,0)
 F IND=1:1:NSTAT D
"RTN","PXRMPROB",31,0)
 . S STAT=STATUSA(IND)
"RTN","PXRMPROB",32,0)
 . F JND=1:1:NPRIO D
"RTN","PXRMPROB",33,0)
 .. S PRIO=PRIOA(JND)
"RTN","PXRMPROB",34,0)
 .. I '$D(^PXRMINDX(9000011,"PSPI",DFN,STAT,PRIO)) Q
"RTN","PXRMPROB",35,0)
 .. I SDIR=-1,PRIO'="C" S DS=EDTT,LLT=BDT,LGT=EDT
"RTN","PXRMPROB",36,0)
 .. I SDIR=-1,PRIO="C" S DS=DTT,LLT=0,LGT=EDATE
"RTN","PXRMPROB",37,0)
 .. I SDIR=1,PRIO'="C" S DS=BDTT,LLT=0,LGT=EDT
"RTN","PXRMPROB",38,0)
 .. I SDIR=1,PRIO="C" S DS=0,LLT=0,LGT=EDATE
"RTN","PXRMPROB",39,0)
 .. S ICDP=TS
"RTN","PXRMPROB",40,0)
 .. F  S ICDP=$O(^PXRMINDX(9000011,"PSPI",DFN,STAT,PRIO,ICDP)) Q:(ICDP>TE)!(ICDP="")  D
"RTN","PXRMPROB",41,0)
 ... I '$D(TAXARR(80,ICDP)) Q
"RTN","PXRMPROB",42,0)
 ... S DATE=DS
"RTN","PXRMPROB",43,0)
 ... F  S DATE=+$O(^PXRMINDX(9000011,"PSPI",DFN,STAT,PRIO,ICDP,DATE),SDIR) Q:$S(DATE=0:1,DATE<LLT:1,DATE>LGT:1,1:0)  D
"RTN","PXRMPROB",44,0)
 .... S DAS=$O(^PXRMINDX(9000011,"PSPI",DFN,STAT,PRIO,ICDP,DATE,""))
"RTN","PXRMPROB",45,0)
 .... S DSAVE=$S(PRIO="C":EDATE,1:DATE)
"RTN","PXRMPROB",46,0)
 .... I DSAVE'<BDT,DSAVE'>DEND D
"RTN","PXRMPROB",47,0)
 ..... S NFOUND=NFOUND+1
"RTN","PXRMPROB",48,0)
 ..... S TLIST(DSAVE,NFOUND)=DAS_U_ICDP_U_STAT_U_PRIO
"RTN","PXRMPROB",49,0)
 ..... I NFOUND>NGET D
"RTN","PXRMPROB",50,0)
 ...... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMPROB",51,0)
 ...... K TLIST(TDATE,TIND)
"RTN","PXRMPROB",52,0)
 ;Return up to NGET of the most recent entries.
"RTN","PXRMPROB",53,0)
 S NFOUND=0
"RTN","PXRMPROB",54,0)
 S DATE=""
"RTN","PXRMPROB",55,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NGET)  D
"RTN","PXRMPROB",56,0)
 . S IND=0
"RTN","PXRMPROB",57,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NGET)  D
"RTN","PXRMPROB",58,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMPROB",59,0)
 .. S FLIST(DATE,NFOUND,9000011)=TLIST(DATE,IND)_U_"ICD9"
"RTN","PXRMPROB",60,0)
 Q
"RTN","PXRMPROB",61,0)
 ;
"RTN","PXRMPROB",62,0)
 ;===================================================
"RTN","PXRMPROB",63,0)
GETDATA(DA,FIEVT) ;Return data for a specified Problem List entry.
"RTN","PXRMPROB",64,0)
 N GMPLCOND,GMPLDLM,GMPLICD,GMPLLEX,GMPLODAT,GMPLPNAM,GMPLPRIO,GMPLPRV
"RTN","PXRMPROB",65,0)
 N GMPLSTAT,GMPLTXT,GMPLXDAT
"RTN","PXRMPROB",66,0)
 ;DBIA #2644
"RTN","PXRMPROB",67,0)
 D CALL2^GMPLUTL3(DA)
"RTN","PXRMPROB",68,0)
 S FIEVT("PROVIDER NARRATIVE")=GMPLTXT
"RTN","PXRMPROB",69,0)
 S FIEVT("DATE ENTERED")=GMPLODAT
"RTN","PXRMPROB",70,0)
 S FIEVT("DATE LAST MODIFIED")=GMPLDLM
"RTN","PXRMPROB",71,0)
 S FIEVT("STATUS")=GMPLSTAT
"RTN","PXRMPROB",72,0)
 S FIEVT("PRIORITY")=GMPLPRIO
"RTN","PXRMPROB",73,0)
 Q
"RTN","PXRMPROB",74,0)
 ;
"RTN","PXRMPROB",75,0)
 ;===================================================
"RTN","PXRMPROB",76,0)
GPLIST(TAXARR,NOCC,BDT,EDT,STATUSA,PLIST) ;Build patient list for
"RTN","PXRMPROB",77,0)
 ;Problem List entries.
"RTN","PXRMPROB",78,0)
 ;STATUSA is an array containing a list of status to search for. A
"RTN","PXRMPROB",79,0)
 ;status can be "A" for active or "I" for inactive. If STATUSA=""
"RTN","PXRMPROB",80,0)
 ;it will search for all with data.
"RTN","PXRMPROB",81,0)
 N DAS,DATE,DEND,DFN,DSAVE,ICDP,IND,JND,NFOUND,NPRIO,NSTAT,PRIO,PRIOA
"RTN","PXRMPROB",82,0)
 N STAT,TEMP,TLIST
"RTN","PXRMPROB",83,0)
 I $G(^PXRMINDX(9000011,"DATE BUILT"))="" D  Q
"RTN","PXRMPROB",84,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000011)
"RTN","PXRMPROB",85,0)
 S TLIST="GPLIST_PXRMPROB"
"RTN","PXRMPROB",86,0)
 S DEND=$S(EDT[".":EDT,1:EDT+.240001)
"RTN","PXRMPROB",87,0)
 K ^TMP($J,TLIST)
"RTN","PXRMPROB",88,0)
 S NSTAT=STATUSA(0)
"RTN","PXRMPROB",89,0)
 I NSTAT=0 Q
"RTN","PXRMPROB",90,0)
 ;EDATE is the evaluation date.
"RTN","PXRMPROB",91,0)
 S EDATE=$$NOW^PXRMDATE
"RTN","PXRMPROB",92,0)
 ;For chronic problems we use today's date so only search for chronic
"RTN","PXRMPROB",93,0)
 ;problems if EDATE lies in the date range.
"RTN","PXRMPROB",94,0)
 I EDATE'<BDT,EDATE'>DEND D
"RTN","PXRMPROB",95,0)
 . S NPRIO=3
"RTN","PXRMPROB",96,0)
 . S PRIOA(1)="C",PRIOA(2)="A",PRIOA(3)="U"
"RTN","PXRMPROB",97,0)
 E  D
"RTN","PXRMPROB",98,0)
 . S NPRIO=2
"RTN","PXRMPROB",99,0)
 . S PRIOA(1)="A",PRIOA(2)="U"
"RTN","PXRMPROB",100,0)
 S NFOUND=0
"RTN","PXRMPROB",101,0)
 S ICDP=""
"RTN","PXRMPROB",102,0)
 F  S ICDP=$O(TAXARR(80,ICDP)) Q:(ICDP="")  D
"RTN","PXRMPROB",103,0)
 .;Since chronic problems will have today's date find those first.
"RTN","PXRMPROB",104,0)
 . I '$D(^PXRMINDX(9000011,"ISPP",ICDP)) Q
"RTN","PXRMPROB",105,0)
 . F IND=1:1:NSTAT D
"RTN","PXRMPROB",106,0)
 .. S STAT=STATUSA(IND)
"RTN","PXRMPROB",107,0)
 .. I '$D(^PXRMINDX(9000011,"ISPP",ICDP,STAT)) Q
"RTN","PXRMPROB",108,0)
 .. F JND=1:1:NPRIO D
"RTN","PXRMPROB",109,0)
 ... S PRIO=PRIOA(JND)
"RTN","PXRMPROB",110,0)
 ... I '$D(^PXRMINDX(9000011,"ISPP",ICDP,STAT,PRIO)) Q
"RTN","PXRMPROB",111,0)
 ... S DFN=""
"RTN","PXRMPROB",112,0)
 ... F  S DFN=$O(^PXRMINDX(9000011,"ISPP",ICDP,STAT,PRIO,DFN)) Q:DFN=""  D
"RTN","PXRMPROB",113,0)
 .... S DATE=""
"RTN","PXRMPROB",114,0)
 .... F  S DATE=$O(^PXRMINDX(9000011,"ISPP",ICDP,STAT,PRIO,DFN,DATE)) Q:DATE=""  D
"RTN","PXRMPROB",115,0)
 ..... S DAS=$O(^PXRMINDX(9000011,"ISPP",ICDP,STAT,PRIO,DFN,DATE,""))
"RTN","PXRMPROB",116,0)
 ..... S NFOUND=NFOUND+1
"RTN","PXRMPROB",117,0)
 ..... S DSAVE=$S(PRIO="C":EDATE,1:DATE)
"RTN","PXRMPROB",118,0)
 ..... I DSAVE'<BDT,DSAVE'>DEND S ^TMP($J,TLIST,DFN,DSAVE,DAS)=ICDP_U_"ICD9"_U_STAT_U_PRIO
"RTN","PXRMPROB",119,0)
 ;Return up to NOCC of the most recent entries.
"RTN","PXRMPROB",120,0)
 S DFN=0
"RTN","PXRMPROB",121,0)
 F  S DFN=$O(^TMP($J,TLIST,DFN)) Q:DFN=""  D
"RTN","PXRMPROB",122,0)
 . S NFOUND=0
"RTN","PXRMPROB",123,0)
 . S DATE=""
"RTN","PXRMPROB",124,0)
 . F  S DATE=$O(^TMP($J,TLIST,DFN,DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMPROB",125,0)
 .. S DAS=""
"RTN","PXRMPROB",126,0)
 .. F  S DAS=$O(^TMP($J,TLIST,DFN,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMPROB",127,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMPROB",128,0)
 ... S TEMP=^TMP($J,TLIST,DFN,DATE,DAS)
"RTN","PXRMPROB",129,0)
 ... S ^TMP($J,PLIST,1,DFN,NFOUND,9000011)=DAS_U_DATE_U_TEMP
"RTN","PXRMPROB",130,0)
 K ^TMP($J,TLIST)
"RTN","PXRMPROB",131,0)
 Q
"RTN","PXRMPROB",132,0)
 ;
"RTN","PXRMPROB",133,0)
 ;===================================================
"RTN","PXRMPROB",134,0)
MHVOUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMPROB",135,0)
 N CODE,EM,D0,DIAG,EM,ICD9P,ICD9ZN,IND,JND,NAME,NIN,NOUT,PN,PRIORITY
"RTN","PXRMPROB",136,0)
 N STATUS,TEMP,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMPROB",137,0)
 S NAME="Problem Diagnosis = "
"RTN","PXRMPROB",138,0)
 S IND=0
"RTN","PXRMPROB",139,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMPROB",140,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMPROB",141,0)
 . S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMPROB",142,0)
 . S ICD9P=IFIEVAL(IND,"CODEP")
"RTN","PXRMPROB",143,0)
 . S ICD9ZN=$$ICDDX^ICDCODE(ICD9P,VDATE)
"RTN","PXRMPROB",144,0)
 . S CODE=$P(ICD9ZN,U,2)
"RTN","PXRMPROB",145,0)
 . S DIAG=$P(ICD9ZN,U,4)
"RTN","PXRMPROB",146,0)
 . S TEMP=NAME_DIAG
"RTN","PXRMPROB",147,0)
 . S TEMP=TEMP_" ("_$$EDATE^PXRMDATE(VDATE)_")"
"RTN","PXRMPROB",148,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMPROB",149,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMPROB",150,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMPROB",151,0)
 Q
"RTN","PXRMPROB",152,0)
 ;
"RTN","PXRMPROB",153,0)
 ;===================================================
"RTN","PXRMPROB",154,0)
OUTPUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMPROB",155,0)
 ;maintenance output. The Problem List information is:  DATE, ICD9 IEN, 
"RTN","PXRMPROB",156,0)
 ;ICD9 CODE, PROVIDER NARRATIVE.
"RTN","PXRMPROB",157,0)
 N CODE,EM,D0,DIAG,EM,ICD9P,ICD9ZN,IND,JND,NIN,NOUT,PN,PRIORITY
"RTN","PXRMPROB",158,0)
 N STATUS,TEMP,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMPROB",159,0)
 S NLINES=NLINES+1
"RTN","PXRMPROB",160,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Problem Diagnosis:"
"RTN","PXRMPROB",161,0)
 S IND=0
"RTN","PXRMPROB",162,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMPROB",163,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMPROB",164,0)
 . S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMPROB",165,0)
 . S ICD9P=IFIEVAL(IND,"CODEP")
"RTN","PXRMPROB",166,0)
 . S ICD9ZN=$$ICDDX^ICDCODE(ICD9P,VDATE)
"RTN","PXRMPROB",167,0)
 . S CODE=$P(ICD9ZN,U,2)
"RTN","PXRMPROB",168,0)
 . S DIAG=$P(ICD9ZN,U,4)
"RTN","PXRMPROB",169,0)
 . S TEMP=TEMP_" "_CODE_" "_DIAG
"RTN","PXRMPROB",170,0)
 . S PRIORITY=$G(IFIEVAL(IND,"PRIORITY"))
"RTN","PXRMPROB",171,0)
 . S PRIORITY=$S(PRIORITY'="":$$EXTERNAL^DILFD(9000011,1.14,"",PRIORITY,.EM),1:"UNDEFINED")
"RTN","PXRMPROB",172,0)
 . S TEMP=TEMP_" Priority: "_PRIORITY
"RTN","PXRMPROB",173,0)
 .;If the Problem is inactive mark it as such.
"RTN","PXRMPROB",174,0)
 . S STATUS=$G(IFIEVAL(IND,"STATUS"))
"RTN","PXRMPROB",175,0)
 . S STATUS=$S(STATUS'="":$$EXTERNAL^DILFD(9000011,.12,"",STATUS,.EM),1:"UNDEFINED")
"RTN","PXRMPROB",176,0)
 . S TEMP=TEMP_" Status: "_STATUS
"RTN","PXRMPROB",177,0)
 . S TEXTIN(1)=TEMP_"\\",NIN=1
"RTN","PXRMPROB",178,0)
 . S D0=^AUPNPROB(IFIEVAL(IND,"DAS"),0)
"RTN","PXRMPROB",179,0)
 . S PN=$P(D0,U,5)
"RTN","PXRMPROB",180,0)
 . I PN'="" S PN=$P($G(^AUTNPOV(PN,0)),U,1)
"RTN","PXRMPROB",181,0)
 . I PN="" S PN="MISSING"
"RTN","PXRMPROB",182,0)
 . I PN'=DIAG S TEXTIN(2)="Prov. Narr. - "_PN,NIN=2
"RTN","PXRMPROB",183,0)
 . D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMPROB",184,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMPROB",185,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMPROB",186,0)
 Q
"RTN","PXRMPROB",187,0)
 ;
"RTN","PXRMPTD1")
0^151^B6511730
"RTN","PXRMPTD1",1,0)
PXRMPTD1 ; SLC/PKR/PJH/AGP - Reminder Inquiry print template routines. ;05/04/2006
"RTN","PXRMPTD1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPTD1",3,0)
 ;
"RTN","PXRMPTD1",4,0)
 ;=======================================
"RTN","PXRMPTD1",5,0)
AFREQ ; Print baseline FREQUENCY/AGE RANGE.
"RTN","PXRMPTD1",6,0)
 N PXAMAX,PXAMIN,PXF,PXF0,PXW
"RTN","PXRMPTD1",7,0)
 S PXF0=$G(^PXD(811.9,D0,7,D1,0))
"RTN","PXRMPTD1",8,0)
 S PXF=$P(PXF0,U,1)
"RTN","PXRMPTD1",9,0)
 S PXAMIN=$P(PXF0,U,2)
"RTN","PXRMPTD1",10,0)
 S PXAMAX=$P(PXF0,U,3)
"RTN","PXRMPTD1",11,0)
 I PXF="" S PXW="MISSING FREQUENCY"
"RTN","PXRMPTD1",12,0)
 S PXW=$$FREQ^PXRMPTD2(PXF)
"RTN","PXRMPTD1",13,0)
 S PXW=PXW_$$FMTAGE^PXRMAGE(PXAMIN,PXAMAX)
"RTN","PXRMPTD1",14,0)
 W "  ",PXW
"RTN","PXRMPTD1",15,0)
 Q
"RTN","PXRMPTD1",16,0)
 ;
"RTN","PXRMPTD1",17,0)
 ;=======================================
"RTN","PXRMPTD1",18,0)
DUEWI ;Print DO WITHIN time frame
"RTN","PXRMPTD1",19,0)
 N PXF,PXW
"RTN","PXRMPTD1",20,0)
 S PXF=$P($G(^PXD(811.9,D0,0)),U,4)
"RTN","PXRMPTD1",21,0)
 I (PXF="")!(+PXF=0) W "  Wait until actually DUE" Q
"RTN","PXRMPTD1",22,0)
 S PXW=$$FREQ^PXRMPTD2(PXF)
"RTN","PXRMPTD1",23,0)
 W "  Do if DUE within "_PXW
"RTN","PXRMPTD1",24,0)
 Q
"RTN","PXRMPTD1",25,0)
 ;
"RTN","PXRMPTD1",26,0)
 ;=======================================
"RTN","PXRMPTD1",27,0)
EDIT ;Print latest entry in edit history
"RTN","PXRMPTD1",28,0)
 N CNT,DIWF,DIWL,DIWR,EDATA,EIEN,ETIME,FIRST,IC,MAX,UIEN,USER,X
"RTN","PXRMPTD1",29,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTD1",30,0)
 ;Get edit history count
"RTN","PXRMPTD1",31,0)
 S MAX=$G(^PXRM(800,1,"EDIT HISTORY COUNT")) I MAX="" S MAX=2
"RTN","PXRMPTD1",32,0)
 ;Last N lines
"RTN","PXRMPTD1",33,0)
 S CNT=0,EIEN="A",FIRST=1
"RTN","PXRMPTD1",34,0)
 F  S EIEN=$O(^PXD(811.9,D0,110,EIEN),-1) Q:'EIEN  Q:CNT=MAX  D
"RTN","PXRMPTD1",35,0)
 .;Edit date and edit by fields
"RTN","PXRMPTD1",36,0)
 .S EDATA=$G(^PXD(811.9,D0,110,EIEN,0)) Q:EDATA=""
"RTN","PXRMPTD1",37,0)
 .S ETIME=$P(EDATA,U),UIEN=$P(EDATA,U,2) Q:'UIEN
"RTN","PXRMPTD1",38,0)
 .S USER=$$GET1^DIQ(200,UIEN,.01),CNT=CNT+1
"RTN","PXRMPTD1",39,0)
 .;Comments
"RTN","PXRMPTD1",40,0)
 .S DIWF="C50",DIWL=20,DIWR=78
"RTN","PXRMPTD1",41,0)
 .S IC=0
"RTN","PXRMPTD1",42,0)
 .F  S IC=$O(^PXD(811.9,D0,110,EIEN,1,IC)) Q:'IC  D
"RTN","PXRMPTD1",43,0)
 ..S X=$G(^PXD(811.9,D0,110,EIEN,1,IC,0))
"RTN","PXRMPTD1",44,0)
 ..D ^DIWP
"RTN","PXRMPTD1",45,0)
 .;Output
"RTN","PXRMPTD1",46,0)
 .;Header
"RTN","PXRMPTD1",47,0)
 .I FIRST S FIRST=0 W "Edit History:",!!
"RTN","PXRMPTD1",48,0)
 .W ?4,"Edit date:",?16,$$FMTE^XLFDT(ETIME,"1")
"RTN","PXRMPTD1",49,0)
 .W ?40,"Edit by:",?52,USER
"RTN","PXRMPTD1",50,0)
 .W !,?4,"Edit Comments:"
"RTN","PXRMPTD1",51,0)
 .S IC=0
"RTN","PXRMPTD1",52,0)
 .F  S IC=$O(^UTILITY($J,"W",DIWL,IC)) Q:IC=""  D
"RTN","PXRMPTD1",53,0)
 ..W ?20,^UTILITY($J,"W",DIWL,IC,0),!
"RTN","PXRMPTD1",54,0)
 .K ^UTILITY($J,"W")
"RTN","PXRMPTD1",55,0)
 .W !!
"RTN","PXRMPTD1",56,0)
 Q
"RTN","PXRMPTD1",57,0)
 ;
"RTN","PXRMPTD1",58,0)
 ;=======================================
"RTN","PXRMPTD1",59,0)
USAGE ;Format usage string
"RTN","PXRMPTD1",60,0)
 W ?7,$$XFORM($P($G(^PXD(811.9,D0,100)),U,4))
"RTN","PXRMPTD1",61,0)
 Q
"RTN","PXRMPTD1",62,0)
 ;
"RTN","PXRMPTD1",63,0)
 ;=======================================
"RTN","PXRMPTD1",64,0)
XFORM(Y) ;Print transform for field 103 in file #811.9
"RTN","PXRMPTD1",65,0)
 ;If ALL
"RTN","PXRMPTD1",66,0)
 I Y["*" Q "CPRS, DATA EXTRACT, REPORTS"
"RTN","PXRMPTD1",67,0)
 ;Otherwise
"RTN","PXRMPTD1",68,0)
 N ARRAY,IC,LIT,OUTPUT,X
"RTN","PXRMPTD1",69,0)
 F IC=1:1:$L(Y) D
"RTN","PXRMPTD1",70,0)
 .S X=$E(Y,IC)
"RTN","PXRMPTD1",71,0)
 .S LIT=$S(X="C":"CPRS",X="X":"DATA EXTRACT",X="R":"REPORTS",X="P":"PATIENT",X="L":"REMINDER PATIENT LIST",1:"")
"RTN","PXRMPTD1",72,0)
 .I LIT'="" S ARRAY(LIT)=""
"RTN","PXRMPTD1",73,0)
 ;
"RTN","PXRMPTD1",74,0)
 S LIT="",OUTPUT=""
"RTN","PXRMPTD1",75,0)
 F  S LIT=$O(ARRAY(LIT)) Q:LIT=""  D
"RTN","PXRMPTD1",76,0)
 .S OUTPUT=OUTPUT_", "_LIT
"RTN","PXRMPTD1",77,0)
 Q $E(OUTPUT,3,$L(OUTPUT))
"RTN","PXRMPTD1",78,0)
 ;
"RTN","PXRMPTD2")
0^116^B4770975
"RTN","PXRMPTD2",1,0)
PXRMPTD2 ; SLC/PKR/PJH - Reminder Inquiry print template routines.;10/07/2005
"RTN","PXRMPTD2",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPTD2",3,0)
 ;================================================
"RTN","PXRMPTD2",4,0)
DATE(FIND0,PIECE,FLDNUM,TITLE,RJC,PAD,FILENUM,FLG) ;Standard DATE
"RTN","PXRMPTD2",5,0)
 N DATE,X
"RTN","PXRMPTD2",6,0)
 S DATE=$P($G(FIND0),U,PIECE)
"RTN","PXRMPTD2",7,0)
 I DATE'="" D
"RTN","PXRMPTD2",8,0)
 .S DATE=$$FMTE^XLFDT(DATE,"D"),X=$$RJ^XLFSTR(TITLE,RJC,PAD),X=X_" "_DATE
"RTN","PXRMPTD2",9,0)
 .D ^DIWP
"RTN","PXRMPTD2",10,0)
 Q
"RTN","PXRMPTD2",11,0)
 ;
"RTN","PXRMPTD2",12,0)
 ;================================================
"RTN","PXRMPTD2",13,0)
ENTRYNAM(VPTR) ;Given the variable pointer return the entry name. The
"RTN","PXRMPTD2",14,0)
 ;variable pointer list contains the information necessary to do the
"RTN","PXRMPTD2",15,0)
 ;look up.
"RTN","PXRMPTD2",16,0)
 N IEN,FILENUM,NAME,ROOT
"RTN","PXRMPTD2",17,0)
 I VPTR="" Q ""
"RTN","PXRMPTD2",18,0)
 S IEN=$P(VPTR,";",1),ROOT=$P(VPTR,";",2),FILENUM=$P(PXRMFVPL(ROOT),U,1)
"RTN","PXRMPTD2",19,0)
 S NAME=$$GET1^DIQ(FILENUM,IEN,.01,"","","")
"RTN","PXRMPTD2",20,0)
 Q NAME
"RTN","PXRMPTD2",21,0)
 ;
"RTN","PXRMPTD2",22,0)
 ;================================================
"RTN","PXRMPTD2",23,0)
FREQ(FREQ) ;Format frequency.
"RTN","PXRMPTD2",24,0)
 I FREQ=-1 Q "Cannot be determined"
"RTN","PXRMPTD2",25,0)
 I +FREQ=0 Q FREQ_" - Not indicated"
"RTN","PXRMPTD2",26,0)
 I FREQ="99Y" Q "99Y - Once"
"RTN","PXRMPTD2",27,0)
 Q +FREQ_($S(FREQ?1N.N1"D":" day",FREQ?1N.N1"M":" month",FREQ?1N.N1"Y":" year",1:""))_$S(+FREQ>1:"s",1:"")
"RTN","PXRMPTD2",28,0)
 ;
"RTN","PXRMPTD2",29,0)
 ;================================================
"RTN","PXRMPTD2",30,0)
FTYPE(VPTR,CNT) ;Return finding type.
"RTN","PXRMPTD2",31,0)
 N FTYPE,ROOT
"RTN","PXRMPTD2",32,0)
 I VPTR="" Q "UNDEFINED?"
"RTN","PXRMPTD2",33,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTD2",34,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPTD2",35,0)
 S FTYPE=$S(CNT=1:$P(PXRMFVPL(ROOT),U,4),1:$P(PXRMFVPL(ROOT),U,2))
"RTN","PXRMPTD2",36,0)
 Q FTYPE
"RTN","PXRMPTD2",37,0)
 ;
"RTN","PXRMPTD2",38,0)
 ;================================================
"RTN","PXRMPTD2",39,0)
GENFREQ(PXF0) ;Print age range frequency set for findings.
"RTN","PXRMPTD2",40,0)
 N PXF,PXW,PXAMIN,PXAMAX
"RTN","PXRMPTD2",41,0)
 S PXF=$P(PXF0,U,4)
"RTN","PXRMPTD2",42,0)
 I PXF="" Q ""
"RTN","PXRMPTD2",43,0)
 S PXAMIN=$P(PXF0,U,2),PXAMAX=$P(PXF0,U,3)
"RTN","PXRMPTD2",44,0)
 S PXW=$$FREQ(PXF)
"RTN","PXRMPTD2",45,0)
 S PXW=PXW_$$FMTAGE^PXRMAGE(PXAMIN,PXAMAX)
"RTN","PXRMPTD2",46,0)
 Q PXW
"RTN","PXRMPTD2",47,0)
 ;
"RTN","PXRMPTD2",48,0)
 ;================================================
"RTN","PXRMPTD2",49,0)
GENIEN(FINDING) ;Return internal entry number for findings.
"RTN","PXRMPTD2",50,0)
 N F0,IEN,PREFIX,ROOT,VPTR
"RTN","PXRMPTD2",51,0)
 S ROOT="^PXD(811.9,D0,20,FINDING,0)"
"RTN","PXRMPTD2",52,0)
 S F0=@ROOT
"RTN","PXRMPTD2",53,0)
 S VPTR=$P(F0,U,1)
"RTN","PXRMPTD2",54,0)
 I VPTR="" Q "UNDEFINED"
"RTN","PXRMPTD2",55,0)
 S IEN=$P(VPTR,";",1),ROOT=$P(VPTR,";",2)
"RTN","PXRMPTD2",56,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPTD2",57,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPTD2",58,0)
 S PREFIX=$P(VPTR,U,4)
"RTN","PXRMPTD2",59,0)
 Q " (FI("_+FINDING_")="_PREFIX_"("_IEN_"))"
"RTN","PXRMPTD2",60,0)
 ;
"RTN","PXRMPTDF")
0^54^B74692080
"RTN","PXRMPTDF",1,0)
PXRMPTDF ; SLC/PKR/PJH - Reminder Inquiry print template routines. ;01/30/2006
"RTN","PXRMPTDF",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPTDF",3,0)
 ;
"RTN","PXRMPTDF",4,0)
 ;================================================
"RTN","PXRMPTDF",5,0)
PFIND ;Print the reminder definition finding multiple.
"RTN","PXRMPTDF",6,0)
 N DIWF,FIELD,FILENUM,FINDING,FIND0,FIND3,FINDNAM,FL,HFCAT,HFIEN
"RTN","PXRMPTDF",7,0)
 N IEN1,IND,INT,LEN,PAD,PADS,PARRAY,RJC,RFIND,RTERM,SCNT,SIEN,STAT0
"RTN","PXRMPTDF",8,0)
 ;If called by a FileMan print build the variable pointer list.
"RTN","PXRMPTDF",9,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPTDF",10,0)
 ;No printing is done by PFIND it accumulates all output using ^DIWP.
"RTN","PXRMPTDF",11,0)
 ;The print template outputs the text with ^DIWW.
"RTN","PXRMPTDF",12,0)
 ;Because of the way DIWP works we need to format all the found and
"RTN","PXRMPTDF",13,0)
 ;not found text first and store it in ^TMP.
"RTN","PXRMPTDF",14,0)
 K ^TMP($J,"W")
"RTN","PXRMPTDF",15,0)
 S FILENUM="811.902"
"RTN","PXRMPTDF",16,0)
 S RJC=30,PAD=" ",PADS=""
"RTN","PXRMPTDF",17,0)
 F IND=1:1:(RJC+2) S PADS=PADS_PAD
"RTN","PXRMPTDF",18,0)
 S FINDING=0
"RTN","PXRMPTDF",19,0)
 F  S FINDING=$O(^PXD(811.9,D0,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTDF",20,0)
 .D WPFORMAT(FINDING,20,RJC,1)
"RTN","PXRMPTDF",21,0)
 .D WPFORMAT(FINDING,20,RJC,2)
"RTN","PXRMPTDF",22,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTDF",23,0)
 S FINDING=0
"RTN","PXRMPTDF",24,0)
 F  S FINDING=$O(^PXD(811.9,D0,25,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTDF",25,0)
 .D WPFORMAT(FINDING,25,RJC,1)
"RTN","PXRMPTDF",26,0)
 .D WPFORMAT(FINDING,25,RJC,2)
"RTN","PXRMPTDF",27,0)
 S DIWF="C80",DIWL=2
"RTN","PXRMPTDF",28,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTDF",29,0)
 S FINDING=0
"RTN","PXRMPTDF",30,0)
 F  S FINDING=$O(^PXD(811.9,D0,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTDF",31,0)
 .S FIND0=^PXD(811.9,D0,20,FINDING,0)
"RTN","PXRMPTDF",32,0)
 .S FIELD=$P(FIND0,U,1)
"RTN","PXRMPTDF",33,0)
 .S RTERM=FIELD
"RTN","PXRMPTDF",34,0)
 .S X=" "
"RTN","PXRMPTDF",35,0)
 .D ^DIWP
"RTN","PXRMPTDF",36,0)
 .S FINDNAM=$$ENTRYNAM^PXRMPTD2(FIELD)
"RTN","PXRMPTDF",37,0)
 .I FINDNAM="" S FINDNAM="?"
"RTN","PXRMPTDF",38,0)
 .S X=$$RJ^XLFSTR("---- Begin:",12,PAD)
"RTN","PXRMPTDF",39,0)
 .S X=X_" "_FINDNAM
"RTN","PXRMPTDF",40,0)
 .S RFIND=$$GENIEN^PXRMPTD2(FINDING)
"RTN","PXRMPTDF",41,0)
 .S X=X_" "_RFIND_" "
"RTN","PXRMPTDF",42,0)
 .S LEN=(75-$L(X))
"RTN","PXRMPTDF",43,0)
 .F INT=1:1:LEN S X=X_"-"
"RTN","PXRMPTDF",44,0)
 .D ^DIWP
"RTN","PXRMPTDF",45,0)
 .;
"RTN","PXRMPTDF",46,0)
 .S X=$$RJ^XLFSTR("Finding Type:",RJC,PAD)
"RTN","PXRMPTDF",47,0)
 .S X=X_" "_$$FTYPE^PXRMPTD2(FIELD,0)
"RTN","PXRMPTDF",48,0)
 .D ^DIWP
"RTN","PXRMPTDF",49,0)
 .I RFIND["HF" D
"RTN","PXRMPTDF",50,0)
 ..S HFIEN=$P($P($P(RFIND,"HF",2),"(",2),")")
"RTN","PXRMPTDF",51,0)
 ..S HFCAT=$P($G(^AUTTHF(HFIEN,0)),U,3)
"RTN","PXRMPTDF",52,0)
 ..S HFCAT=$S(HFCAT="":"UNDEFINED",1:$P($G(^AUTTHF(HFCAT,0)),U,1))
"RTN","PXRMPTDF",53,0)
 ..S X=$$RJ^XLFSTR("Health Factor Category:",RJC,PAD)
"RTN","PXRMPTDF",54,0)
 ..S X=X_" "_HFCAT
"RTN","PXRMPTDF",55,0)
 ..D ^DIWP
"RTN","PXRMPTDF",56,0)
 .;
"RTN","PXRMPTDF",57,0)
 .S FIELD=$P(FIND0,U,4)
"RTN","PXRMPTDF",58,0)
 .I $L(FIELD)>0 D
"RTN","PXRMPTDF",59,0)
 ..S X=$$RJ^XLFSTR("Match Frequency/Age:",RJC,PAD)
"RTN","PXRMPTDF",60,0)
 ..S X=X_" "_$$GENFREQ^PXRMPTD2(FIND0)
"RTN","PXRMPTDF",61,0)
 ..D ^DIWP
"RTN","PXRMPTDF",62,0)
 .;
"RTN","PXRMPTDF",63,0)
 .D SFDISP(FIND0,5,6,"Rank Frequency:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",64,0)
 .D SFDISP(FIND0,6,7,"Use in Resolution Logic:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",65,0)
 .D SFDISP(FIND0,7,8,"Use in Patient Cohort Logic:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",66,0)
 .D DATE^PXRMPTD2(FIND0,8,9,"Beginning Date/Time:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",67,0)
 .D DATE^PXRMPTD2(FIND0,11,12,"Ending Date/Time:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",68,0)
 .D SFDISP(FIND0,14,17,"Occurrence Count:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",69,0)
 .D SFDISP(FIND0,9,10,"Use Inactive Problems:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",70,0)
 .D SFDISP(FIND0,10,11,"Within Category Rank:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",71,0)
 .D SFDISP(FIND0,16,28,"Include Visit Data:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",72,0)
 .D SFDISP(FIND0,12,13,"MH Scale:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",73,0)
 .D SFDISP(FIND0,13,16,"Rx Type:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",74,0)
 .D SFDISP(FIND0,15,27,"Use Start Date:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",75,0)
 .I $D(^PXD(811.9,D0,20,FINDING,5,0))=1 D
"RTN","PXRMPTDF",76,0)
 ..S (SCNT,SIEN)=0
"RTN","PXRMPTDF",77,0)
 ..F  S SIEN=$O(^PXD(811.9,D0,20,FINDING,5,SIEN)) Q:SIEN=""  D
"RTN","PXRMPTDF",78,0)
 ...S STAT0=$G(^PXD(811.9,D0,20,FINDING,5,SIEN,0))
"RTN","PXRMPTDF",79,0)
 ...D STATUS(STAT0,"Status List:",RJC) S SCNT=SCNT+1
"RTN","PXRMPTDF",80,0)
 .S FIND0=$G(^PXD(811.9,D0,20,FINDING,3))
"RTN","PXRMPTDF",81,0)
 .D SFDISP(FIND0,1,14,"Condition:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",82,0)
 .D SFDISP(FIND0,2,15,"Condition Case Sensitive:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",83,0)
 .D SFDISP(FIND0,3,18,"Use Cond in Finding Search:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",84,0)
 .I $G(^PXD(811.9,D0,20,FINDING,15))'="" D 
"RTN","PXRMPTDF",85,0)
 ..S X=$$RJ^XLFSTR("Computed Finding Parameter:",RJC,PAD)
"RTN","PXRMPTDF",86,0)
 ..S X=X_" "_$G(^PXD(811.9,D0,20,FINDING,15))
"RTN","PXRMPTDF",87,0)
 ..D ^DIWP
"RTN","PXRMPTDF",88,0)
 .D WPOUT(FINDING,20,"Found Text:",RJC,PAD,PADS,1)
"RTN","PXRMPTDF",89,0)
 .D WPOUT(FINDING,20,"Not Found Text:",RJC,PAD,PADS,2)
"RTN","PXRMPTDF",90,0)
 .I RTERM["PXRMD(811.5" S IEN1=$P(RTERM,";") D RTERM
"RTN","PXRMPTDF",91,0)
 .S X=$$RJ^XLFSTR("---- End:",10,PADS)
"RTN","PXRMPTDF",92,0)
 .S X=X_" "_FINDNAM_" "
"RTN","PXRMPTDF",93,0)
 .S LEN=(75-$L(X))
"RTN","PXRMPTDF",94,0)
 .F INT=1:1:(LEN) S X=X_"-"
"RTN","PXRMPTDF",95,0)
 .D ^DIWP
"RTN","PXRMPTDF",96,0)
 .S X=" "
"RTN","PXRMPTDF",97,0)
 .D ^DIWP
"RTN","PXRMPTDF",98,0)
 ;
"RTN","PXRMPTDF",99,0)
 ;Function Findings
"RTN","PXRMPTDF",100,0)
 I +$P($G(^PXD(811.9,D0,25,0)),U,4)>0 D
"RTN","PXRMPTDF",101,0)
 .S X=" "
"RTN","PXRMPTDF",102,0)
 .D ^DIWP
"RTN","PXRMPTDF",103,0)
 .S X="Function Findings:"
"RTN","PXRMPTDF",104,0)
 .D ^DIWP
"RTN","PXRMPTDF",105,0)
 .;Build the list of findings for this reminder.
"RTN","PXRMPTDF",106,0)
 .D BLDFLST^PXRMPTL(D0,.FL)
"RTN","PXRMPTDF",107,0)
 .S FILENUM="811.925",FINDING=0
"RTN","PXRMPTDF",108,0)
 .F  S FINDING=$O(^PXD(811.9,D0,25,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTDF",109,0)
 ..S FIND0=$G(^PXD(811.9,D0,25,FINDING,0))
"RTN","PXRMPTDF",110,0)
 ..S FIND3=$G(^PXD(811.9,D0,25,FINDING,3))
"RTN","PXRMPTDF",111,0)
 ..I FIND3="" Q
"RTN","PXRMPTDF",112,0)
 ..S FIELD=$P(FIND0,U,1)
"RTN","PXRMPTDF",113,0)
 ..S FINDNAM="FF("_FIELD_")"
"RTN","PXRMPTDF",114,0)
 ..S X=" "
"RTN","PXRMPTDF",115,0)
 ..D ^DIWP
"RTN","PXRMPTDF",116,0)
 ..S X=$$RJ^XLFSTR("---- Begin:",12,PAD)
"RTN","PXRMPTDF",117,0)
 ..S X=X_" "_FINDNAM
"RTN","PXRMPTDF",118,0)
 ..S LEN=(75-$L(X))
"RTN","PXRMPTDF",119,0)
 ..F INT=1:1:LEN S X=X_"-"
"RTN","PXRMPTDF",120,0)
 ..D ^DIWP
"RTN","PXRMPTDF",121,0)
 ..;
"RTN","PXRMPTDF",122,0)
 ..D SFDISP(FIND3,1,3,"Function String:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",123,0)
 ..S X="     Expanded Function String:" D ^DIWP
"RTN","PXRMPTDF",124,0)
 ..D DISLOGF^PXRMPTL(D0,FINDING,.FL,.PARRAY)
"RTN","PXRMPTDF",125,0)
 ..S INT=0
"RTN","PXRMPTDF",126,0)
 ..F  S INT=$O(PARRAY(INT)) Q:'INT  D
"RTN","PXRMPTDF",127,0)
 ...S X=$J("",6)_PARRAY(INT) D ^DIWP
"RTN","PXRMPTDF",128,0)
 ..;
"RTN","PXRMPTDF",129,0)
 ..S FIELD=$P(FIND0,U,4)
"RTN","PXRMPTDF",130,0)
 ..I $L(FIELD)>0 D
"RTN","PXRMPTDF",131,0)
 ...S X=$$RJ^XLFSTR("Match Frequency/Age:",RJC,PAD)
"RTN","PXRMPTDF",132,0)
 ...S X=X_" "_$$GENFREQ^PXRMPTD2(FIND0)
"RTN","PXRMPTDF",133,0)
 ...D ^DIWP
"RTN","PXRMPTDF",134,0)
 ..;
"RTN","PXRMPTDF",135,0)
 ..D SFDISP(FIND0,5,10,"Rank Frequency:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",136,0)
 ..D SFDISP(FIND0,6,11,"Use in Resolution Logic:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",137,0)
 ..D SFDISP(FIND0,7,12,"Use in Patient Cohort Logic:",RJC,PAD,FILENUM)
"RTN","PXRMPTDF",138,0)
 ..;
"RTN","PXRMPTDF",139,0)
 ..D WPOUT(FINDING,25,"Found Text:",RJC,PAD,PADS,1)
"RTN","PXRMPTDF",140,0)
 ..D WPOUT(FINDING,25,"Not Found Text:",RJC,PAD,PADS,2)
"RTN","PXRMPTDF",141,0)
 ..S X=$$RJ^XLFSTR("---- End:",10,PADS)
"RTN","PXRMPTDF",142,0)
 ..S X=X_" "_FINDNAM_" "
"RTN","PXRMPTDF",143,0)
 ..S LEN=(75-$L(X))
"RTN","PXRMPTDF",144,0)
 ..F INT=1:1:(LEN) S X=X_"-"
"RTN","PXRMPTDF",145,0)
 ..D ^DIWP
"RTN","PXRMPTDF",146,0)
 ..S X=" "
"RTN","PXRMPTDF",147,0)
 ..D ^DIWP
"RTN","PXRMPTDF",148,0)
 ;
"RTN","PXRMPTDF",149,0)
 K ^TMP($J,"W")
"RTN","PXRMPTDF",150,0)
 ;^UTILITY($J,"W") will be killed by ^DIWW in the print template.
"RTN","PXRMPTDF",151,0)
 Q
"RTN","PXRMPTDF",152,0)
 ;
"RTN","PXRMPTDF",153,0)
 ;================================================
"RTN","PXRMPTDF",154,0)
RTERM ;Reminder Term
"RTN","PXRMPTDF",155,0)
 N CNT,RJT,SCNT,SIEN,STAT0,TERM,TERM3,TERMNUM,TERMS
"RTN","PXRMPTDF",156,0)
 S CNT=0,RJT=RJC+10,TERMNUM="811.52"
"RTN","PXRMPTDF",157,0)
 S TERMS=0 F  S TERMS=$O(^PXRMD(811.5,IEN1,20,TERMS)) Q:+TERMS=0  D
"RTN","PXRMPTDF",158,0)
 .S TERM=$G(^PXRMD(811.5,IEN1,20,TERMS,0))
"RTN","PXRMPTDF",159,0)
 .S TERM3=$G(^PXRMD(811.5,IEN1,20,TERMS,3))
"RTN","PXRMPTDF",160,0)
 .D SFDISP(TERM,1,.01,"Mapped Finding Item:",RJT,PAD,TERMNUM,CNT)
"RTN","PXRMPTDF",161,0)
 .D SFDISP(TERM,8,9,"Beginning Date/Time:",RJT,PAD,TERMNUM)
"RTN","PXRMPTDF",162,0)
 .D SFDISP(TERM,9,10,"Use Inactive Problems:",RJT,PAD,TERMNUM)
"RTN","PXRMPTDF",163,0)
 .D SFDISP(TERM,11,12,"Ending Date/Time:",RJT,PAD,TERMNUM)
"RTN","PXRMPTDF",164,0)
 .D SFDISP(TERM,10,11,"Within Category Rank:",RJT,PAD,TERMNUM)
"RTN","PXRMPTDF",165,0)
 .D SFDISP(TERM,12,13,"MH Scale:",RJT,PAD,TERMNUM)
"RTN","PXRMPTDF",166,0)
 .D SFDISP(TERM,13,16,"RX Type:",RJT,PAD,TERMNUM)
"RTN","PXRMPTDF",167,0)
 .D SFDISP(TERM,14,17,"Occurrence Count:",RJT,PAD,TERMNUM)
"RTN","PXRMPTDF",168,0)
 .I $D(^PXRMD(811.5,IEN1,20,TERMS,5,0))=1 D
"RTN","PXRMPTDF",169,0)
 ..S (SCNT,SIEN)=0
"RTN","PXRMPTDF",170,0)
 ..F  S SIEN=$O(^PXRMD(811.5,IEN1,20,TERMS,5,SIEN)) Q:SIEN=""  D
"RTN","PXRMPTDF",171,0)
 ...S STAT0=$G(^PXRMD(811.5,IEN1,20,TERMS,5,SIEN,0))
"RTN","PXRMPTDF",172,0)
 ...D STATUS(STAT0,"Status List:",RJT) S SCNT=SCNT+1
"RTN","PXRMPTDF",173,0)
 .D SFDISP(TERM3,1,14,"Condition:",RJT,PAD,TERMNUM,1)
"RTN","PXRMPTDF",174,0)
 .D SFDISP(TERM3,2,15,"Condition Case Sensitive:",RJT,PAD,TERMNUM)
"RTN","PXRMPTDF",175,0)
 .D SFDISP(TERM3,3,18,"Use Cond in Finding Search:",RJT,PAD,TERMNUM)
"RTN","PXRMPTDF",176,0)
 .I $G(^PXRMD(811.5,IEN1,20,TERMS,15))'="" D 
"RTN","PXRMPTDF",177,0)
 ..S X=$$RJ^XLFSTR("Computed Finding Parameter:",RJT,PAD)
"RTN","PXRMPTDF",178,0)
 ..S X=X_" "_$G(^PXRMD(811.5,IEN1,20,TERMS,15))
"RTN","PXRMPTDF",179,0)
 ..D ^DIWP
"RTN","PXRMPTDF",180,0)
 .S X=""
"RTN","PXRMPTDF",181,0)
 .D ^DIWP
"RTN","PXRMPTDF",182,0)
 .S CNT=CNT+1
"RTN","PXRMPTDF",183,0)
 I CNT=0 D  Q
"RTN","PXRMPTDF",184,0)
 .S X=$$RJ^XLFSTR("RT Mapped Finding:",RJC,PAD)
"RTN","PXRMPTDF",185,0)
 .S X=X_" No Reminder Finding Found"
"RTN","PXRMPTDF",186,0)
 .D ^DIWP
"RTN","PXRMPTDF",187,0)
 Q
"RTN","PXRMPTDF",188,0)
 ;
"RTN","PXRMPTDF",189,0)
 ;================================================
"RTN","PXRMPTDF",190,0)
SFDISP(FIND0,PIECE,FLDNUM,TITLE,RJC,PAD,FILENUM,FLG) ;Standard finding
"RTN","PXRMPTDF",191,0)
 ;multiple field display.
"RTN","PXRMPTDF",192,0)
 N FIELD,HFCAT,HFIEN,NAME,TYPE,X
"RTN","PXRMPTDF",193,0)
 S NAME=""
"RTN","PXRMPTDF",194,0)
 S FIELD=$P(FIND0,U,PIECE)
"RTN","PXRMPTDF",195,0)
 I (PIECE=1)&(FLDNUM=".01")&(FILENUM="811.52") D
"RTN","PXRMPTDF",196,0)
 .I FLG=0 D
"RTN","PXRMPTDF",197,0)
 ..S X=""
"RTN","PXRMPTDF",198,0)
 ..D ^DIWP
"RTN","PXRMPTDF",199,0)
 ..S RTERM=$P($P(RFIND,"=",2),")")_")"
"RTN","PXRMPTDF",200,0)
 ..S X=$$RJ^XLFSTR("Mapped Findings:",40)
"RTN","PXRMPTDF",201,0)
 ..D ^DIWP
"RTN","PXRMPTDF",202,0)
 .S TYPE=$$FTYPE^PXRMPTD2(FIELD,1),NAME=$$ENTRYNAM^PXRMPTD2(FIELD)
"RTN","PXRMPTDF",203,0)
 .S X=$$RJ^XLFSTR(TITLE,RJC,PAD)
"RTN","PXRMPTDF",204,0)
 .S X=X_" "_TYPE_"."_NAME
"RTN","PXRMPTDF",205,0)
 .D ^DIWP
"RTN","PXRMPTDF",206,0)
 .I TYPE="HF" D
"RTN","PXRMPTDF",207,0)
 ..S HFIEN=$P(TERM,";")
"RTN","PXRMPTDF",208,0)
 ..S HFCAT=$P($G(^AUTTHF(HFIEN,0)),U,3)
"RTN","PXRMPTDF",209,0)
 ..S HFCAT=$P($G(^AUTTHF(HFCAT,0)),U)
"RTN","PXRMPTDF",210,0)
 ..S X=$$RJ^XLFSTR("Health Factor Category:",RJC,PAD)
"RTN","PXRMPTDF",211,0)
 ..S X=X_" "_HFCAT
"RTN","PXRMPTDF",212,0)
 ..D ^DIWP
"RTN","PXRMPTDF",213,0)
 I NAME'="" Q
"RTN","PXRMPTDF",214,0)
 I $L(FIELD)>0 D
"RTN","PXRMPTDF",215,0)
 .S X=$$RJ^XLFSTR(TITLE,RJC,PAD)
"RTN","PXRMPTDF",216,0)
 .S X=X_" "_$$EXTERNAL^DILFD(FILENUM,FLDNUM,"",FIELD,"")
"RTN","PXRMPTDF",217,0)
 .D ^DIWP
"RTN","PXRMPTDF",218,0)
 Q
"RTN","PXRMPTDF",219,0)
 ;
"RTN","PXRMPTDF",220,0)
 ;================================================
"RTN","PXRMPTDF",221,0)
STATUS(STAT0,TITLE,SPACE) ;
"RTN","PXRMPTDF",222,0)
 I $L(STAT0)>0 D
"RTN","PXRMPTDF",223,0)
 .I SCNT=0 S X=$$RJ^XLFSTR(TITLE,SPACE,PAD)
"RTN","PXRMPTDF",224,0)
 .I SCNT>0 S X=$$RJ^XLFSTR("",SPACE,PAD)
"RTN","PXRMPTDF",225,0)
 .S X=X_" "_STAT0
"RTN","PXRMPTDF",226,0)
 .D ^DIWP
"RTN","PXRMPTDF",227,0)
 Q
"RTN","PXRMPTDF",228,0)
 ;
"RTN","PXRMPTDF",229,0)
 ;================================================
"RTN","PXRMPTDF",230,0)
WPFORMAT(FINDING,NODE,RJC,INDEX) ;Format found/not found word processing text.
"RTN","PXRMPTDF",231,0)
 I '$D(^PXD(811.9,D0,NODE,FINDING,INDEX,1,0)) Q
"RTN","PXRMPTDF",232,0)
 ;Save the title using the current format for DIWP.
"RTN","PXRMPTDF",233,0)
 N DIWF,DIWL,DIWR,IND,NLINES,SC,X
"RTN","PXRMPTDF",234,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTDF",235,0)
 S DIWF="|",DIWL=RJC+2,DIWR=78
"RTN","PXRMPTDF",236,0)
 S IND=0
"RTN","PXRMPTDF",237,0)
 F  S IND=$O(^PXD(811.9,D0,NODE,FINDING,INDEX,IND)) Q:+IND=0  D
"RTN","PXRMPTDF",238,0)
 .S X=$G(^PXD(811.9,D0,NODE,FINDING,INDEX,IND,0))
"RTN","PXRMPTDF",239,0)
 .D ^DIWP
"RTN","PXRMPTDF",240,0)
 ;Find where this stuff went.
"RTN","PXRMPTDF",241,0)
 S SC=$O(^UTILITY($J,"W",""))
"RTN","PXRMPTDF",242,0)
 ;Save into ^TMP.
"RTN","PXRMPTDF",243,0)
 S NLINES=^UTILITY($J,"W",SC)
"RTN","PXRMPTDF",244,0)
 S ^TMP($J,"W",FINDING,NODE,INDEX)=NLINES
"RTN","PXRMPTDF",245,0)
 F IND=1:1:NLINES D
"RTN","PXRMPTDF",246,0)
 .S ^TMP($J,"W",FINDING,NODE,INDEX,IND)=^UTILITY($J,"W",SC,IND,0)
"RTN","PXRMPTDF",247,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTDF",248,0)
 Q
"RTN","PXRMPTDF",249,0)
 ;
"RTN","PXRMPTDF",250,0)
 ;================================================
"RTN","PXRMPTDF",251,0)
WPOUT(FINDING,NODE,TITLE,RJC,PAD,PADS,INDEX) ;Output found/not found word processing
"RTN","PXRMPTDF",252,0)
 ;text.
"RTN","PXRMPTDF",253,0)
 I $D(^TMP($J,"W",FINDING,NODE,INDEX)) D
"RTN","PXRMPTDF",254,0)
 .N IND,X
"RTN","PXRMPTDF",255,0)
 .S X=$$RJ^XLFSTR(TITLE,RJC,PAD)_" "_^TMP($J,"W",FINDING,NODE,INDEX,1)
"RTN","PXRMPTDF",256,0)
 .D ^DIWP
"RTN","PXRMPTDF",257,0)
 .F IND=2:1:^TMP($J,"W",FINDING,NODE,INDEX) D
"RTN","PXRMPTDF",258,0)
 ..S X=PADS_^TMP($J,"W",FINDING,NODE,INDEX,IND)
"RTN","PXRMPTDF",259,0)
 ..D ^DIWP
"RTN","PXRMPTDF",260,0)
 Q
"RTN","PXRMPTDF",261,0)
 ;
"RTN","PXRMPTL")
0^168^B39396517
"RTN","PXRMPTL",1,0)
PXRMPTL ; SLC/DLT,PKR,PJH - Print Clinical Reminders logic; 06/23/2006
"RTN","PXRMPTL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPTL",3,0)
 ;
"RTN","PXRMPTL",4,0)
 ;====================================================
"RTN","PXRMPTL",5,0)
BLDFLST(RITEM,FL) ;Build the list of findings defined for this reminder.
"RTN","PXRMPTL",6,0)
 N IC,TEMP,GLOB,SUB,NAME
"RTN","PXRMPTL",7,0)
 ;Build a list of findings.
"RTN","PXRMPTL",8,0)
 S IC=0
"RTN","PXRMPTL",9,0)
 F  S IC=$O(^PXD(811.9,RITEM,20,IC)) Q:+IC=0  D
"RTN","PXRMPTL",10,0)
 . S TEMP=$P(^PXD(811.9,RITEM,20,IC,0),U)
"RTN","PXRMPTL",11,0)
 . S GLOB=$P(TEMP,";",2),SUB=$P(TEMP,";")
"RTN","PXRMPTL",12,0)
 . S NAME=$S(GLOB="":"???",1:$P($G(@(U_GLOB_SUB_",0)")),U))
"RTN","PXRMPTL",13,0)
 . S FL(IC)=NAME
"RTN","PXRMPTL",14,0)
 Q
"RTN","PXRMPTL",15,0)
 ;
"RTN","PXRMPTL",16,0)
 ;====================================================
"RTN","PXRMPTL",17,0)
CDUE(CDUE,FL,NL,ARRAY) ;Expand the custom date due string into ARRAY.
"RTN","PXRMPTL",18,0)
 N ARGL,FI,FREQ,IND,OPER,NARGS,PFSTACK,TEMP
"RTN","PXRMPTL",19,0)
 K ARRAY
"RTN","PXRMPTL",20,0)
 S OPER=","
"RTN","PXRMPTL",21,0)
 D POSTFIX^PXRMSTAC(CDUE,OPER,.PFSTACK)
"RTN","PXRMPTL",22,0)
 S ARRAY(1)=PFSTACK(1)_"(",NL=1
"RTN","PXRMPTL",23,0)
 S NARGS=0
"RTN","PXRMPTL",24,0)
 F IND=2:1:PFSTACK(0) D
"RTN","PXRMPTL",25,0)
 . I PFSTACK(IND)=OPER Q
"RTN","PXRMPTL",26,0)
 . S NARGS=NARGS+1,ARGL(NARGS)=PFSTACK(IND)
"RTN","PXRMPTL",27,0)
 F IND=1:1:NARGS D
"RTN","PXRMPTL",28,0)
 . S TEMP=ARGL(IND)
"RTN","PXRMPTL",29,0)
 . S FI=$P(TEMP,"+",1)
"RTN","PXRMPTL",30,0)
 . S FREQ=$P(TEMP,"+",2)
"RTN","PXRMPTL",31,0)
 . S TEMP=FL(FI)_" + "_FREQ
"RTN","PXRMPTL",32,0)
 . S NL=NL+1
"RTN","PXRMPTL",33,0)
 . S ARRAY(NL)=$S(IND<NARGS:TEMP_", ",1:TEMP)
"RTN","PXRMPTL",34,0)
 S NL=NL+1,ARRAY(NL)=")"
"RTN","PXRMPTL",35,0)
 Q
"RTN","PXRMPTL",36,0)
 ;
"RTN","PXRMPTL",37,0)
 ;====================================================
"RTN","PXRMPTL",38,0)
COHORT(DA) ;
"RTN","PXRMPTL",39,0)
 N ARRAY,CNT,LINE,NODE,NLINES,OUTPUT
"RTN","PXRMPTL",40,0)
 F NODE=60,61,65,66,70,71,75,76  I $D(^PXD(811.9,DA,NODE))>0 D
"RTN","PXRMPTL",41,0)
 . I NODE=60 W !,"General Patient Cohort Found Text:"
"RTN","PXRMPTL",42,0)
 . I NODE=61 W !,"General Patient Cohort Not Found Text:"
"RTN","PXRMPTL",43,0)
 . I NODE=65 W !,"General Resolution Found Text:"
"RTN","PXRMPTL",44,0)
 . I NODE=66 W !,"General Resolution Not Found Text:"
"RTN","PXRMPTL",45,0)
 . I NODE=70 W !,"Summary Patient Cohort Found Text:"
"RTN","PXRMPTL",46,0)
 . I NODE=71 W !,"Summary Patient Cohort Not Found Text:"
"RTN","PXRMPTL",47,0)
 . I NODE=75 W !,"Summary Resolution Found Text:"
"RTN","PXRMPTL",48,0)
 . I NODE=76 W !,"Summary Resolution Not Found Text:"
"RTN","PXRMPTL",49,0)
 . S (CNT,LINE)=0 F  S LINE=$O(^PXD(811.9,DA,NODE,LINE)) Q:LINE=""  D
"RTN","PXRMPTL",50,0)
 .. S CNT=CNT+1 S ARRAY(CNT)=$G(^PXD(811.9,DA,NODE,LINE,0))
"RTN","PXRMPTL",51,0)
 . I $D(ARRAY)>0 D FORMAT^PXRMTEXT(5,78,CNT,.ARRAY,.NLINES,.OUTPUT)
"RTN","PXRMPTL",52,0)
 . I NLINES>0 F CNT=1:1:NLINES  W !,OUTPUT(CNT)
"RTN","PXRMPTL",53,0)
 . W !
"RTN","PXRMPTL",54,0)
 Q
"RTN","PXRMPTL",55,0)
 ;
"RTN","PXRMPTL",56,0)
 ;====================================================
"RTN","PXRMPTL",57,0)
DISLOG ;Display the patient cohort, resolution logic, and custom date due.
"RTN","PXRMPTL",58,0)
 ;Determine if this is a default adhoc logic or user modified logic
"RTN","PXRMPTL",59,0)
 N CDUE,CUSTOM,FL,IND,LARRAY,LOGSTR,MAXLEN,NLOGLIN,NPL
"RTN","PXRMPTL",60,0)
 N PARRAY,RITEM,SEP
"RTN","PXRMPTL",61,0)
 S MAXLEN=72
"RTN","PXRMPTL",62,0)
 ;Build the list of findings for this reminder.
"RTN","PXRMPTL",63,0)
 S RITEM=D0
"RTN","PXRMPTL",64,0)
 D BLDFLST(RITEM,.FL)
"RTN","PXRMPTL",65,0)
 ;
"RTN","PXRMPTL",66,0)
 ;Get the cohort logic string.
"RTN","PXRMPTL",67,0)
 S LOGSTR=$G(^PXD(811.9,RITEM,30))
"RTN","PXRMPTL",68,0)
 ;Otherwise use internal cohort logic
"RTN","PXRMPTL",69,0)
 I LOGSTR="" S LOGSTR=$G(^PXD(811.9,RITEM,31)),CUSTOM=0
"RTN","PXRMPTL",70,0)
 E  S CUSTOM=1
"RTN","PXRMPTL",71,0)
 ;
"RTN","PXRMPTL",72,0)
 ;Remove any (0)! and (1)& entries
"RTN","PXRMPTL",73,0)
 S LOGSTR=$$REMOVE(LOGSTR)
"RTN","PXRMPTL",74,0)
 ;
"RTN","PXRMPTL",75,0)
 ;Break the logic string into an array using the Boolean operators
"RTN","PXRMPTL",76,0)
 ;and the comma as separators.
"RTN","PXRMPTL",77,0)
 S SEP="'!&<>=,"
"RTN","PXRMPTL",78,0)
 S NLOGLIN=$$STRARR(LOGSTR,SEP,.LARRAY)
"RTN","PXRMPTL",79,0)
 ;
"RTN","PXRMPTL",80,0)
 ;Print the cohort logic.
"RTN","PXRMPTL",81,0)
 I CUSTOM  W "Customized PATIENT COHORT LOGIC to see if the Reminder applies to a patient:"
"RTN","PXRMPTL",82,0)
 E  W "Default PATIENT COHORT LOGIC to see if the Reminder applies to a patient:"
"RTN","PXRMPTL",83,0)
 S NPL=$$FMTARR(MAXLEN,NLOGLIN,.LARRAY,.PARRAY)
"RTN","PXRMPTL",84,0)
 F IND=1:1:NPL W !,?1,PARRAY(IND)
"RTN","PXRMPTL",85,0)
 ;
"RTN","PXRMPTL",86,0)
 ;Expand the logic and print it.
"RTN","PXRMPTL",87,0)
 D EXPAND(NLOGLIN,.LARRAY,.FL,"FI(",")")
"RTN","PXRMPTL",88,0)
 S NPL=$$FMTARR(MAXLEN,NLOGLIN,.LARRAY,.PARRAY)
"RTN","PXRMPTL",89,0)
 W !!,"Expanded Patient Cohort Logic:"
"RTN","PXRMPTL",90,0)
 F IND=1:1:NPL W !,?1,PARRAY(IND)
"RTN","PXRMPTL",91,0)
 ;
"RTN","PXRMPTL",92,0)
 ;Get the resolution logic string.
"RTN","PXRMPTL",93,0)
 S LOGSTR=$G(^PXD(811.9,RITEM,34))
"RTN","PXRMPTL",94,0)
 ;Otherwise use internal cohort logic
"RTN","PXRMPTL",95,0)
 I LOGSTR="" S LOGSTR=$G(^PXD(811.9,RITEM,35)),CUSTOM=0
"RTN","PXRMPTL",96,0)
 E  S CUSTOM=1
"RTN","PXRMPTL",97,0)
 ;
"RTN","PXRMPTL",98,0)
 ;Remove any (0)! and (1)& entries
"RTN","PXRMPTL",99,0)
 S LOGSTR=$$REMOVE(LOGSTR)
"RTN","PXRMPTL",100,0)
 ;
"RTN","PXRMPTL",101,0)
 ;Break the logic string into an array using the Boolean operators
"RTN","PXRMPTL",102,0)
 ;and the comma as separators.
"RTN","PXRMPTL",103,0)
 S NLOGLIN=$$STRARR(LOGSTR,SEP,.LARRAY)
"RTN","PXRMPTL",104,0)
 ;
"RTN","PXRMPTL",105,0)
 ;Print the resolution logic.
"RTN","PXRMPTL",106,0)
 W !!
"RTN","PXRMPTL",107,0)
 I CUSTOM  W "Customized RESOLUTION LOGIC defines findings that resolve the Reminder:"
"RTN","PXRMPTL",108,0)
 E  W "Default RESOLUTION LOGIC defines findings that resolve the Reminder:"
"RTN","PXRMPTL",109,0)
 S NPL=$$FMTARR(MAXLEN,NLOGLIN,.LARRAY,.PARRAY)
"RTN","PXRMPTL",110,0)
 F IND=1:1:NPL W !,?1,PARRAY(IND)
"RTN","PXRMPTL",111,0)
 ;
"RTN","PXRMPTL",112,0)
 ;Expand the logic and print it.
"RTN","PXRMPTL",113,0)
 D EXPAND(NLOGLIN,.LARRAY,.FL,"FI(",")")
"RTN","PXRMPTL",114,0)
 S NPL=$$FMTARR(MAXLEN,NLOGLIN,.LARRAY,.PARRAY)
"RTN","PXRMPTL",115,0)
 W !!,"Expanded Resolution Logic:"
"RTN","PXRMPTL",116,0)
 F IND=1:1:NPL W !,?1,PARRAY(IND)
"RTN","PXRMPTL",117,0)
 ;
"RTN","PXRMPTL",118,0)
 ;Display the custom date due string.
"RTN","PXRMPTL",119,0)
 S CDUE=$G(^PXD(811.9,D0,45))
"RTN","PXRMPTL",120,0)
 I CDUE="" Q
"RTN","PXRMPTL",121,0)
 W !!,"Custom Date Due:"
"RTN","PXRMPTL",122,0)
 W !," ",CDUE
"RTN","PXRMPTL",123,0)
 D CDUE(CDUE,.FL,.NLOGLIN,.LARRAY)
"RTN","PXRMPTL",124,0)
 S NPL=$$FMTARR(MAXLEN,NLOGLIN,.LARRAY,.PARRAY)
"RTN","PXRMPTL",125,0)
 W !!,"Expanded Custom Date Due:"
"RTN","PXRMPTL",126,0)
 F IND=1:1:NPL W !,?1,PARRAY(IND)
"RTN","PXRMPTL",127,0)
 Q
"RTN","PXRMPTL",128,0)
 ;
"RTN","PXRMPTL",129,0)
 ;====================================================
"RTN","PXRMPTL",130,0)
DISLOGF(RITEM,FINDING,FL,PARRAY) ;Expand FUNCTION FINDING logic and
"RTN","PXRMPTL",131,0)
 ;return the result in PARRAY.
"RTN","PXRMPTL",132,0)
 N ARGNUM,AT,FARG,FUN,FUNCTION,FUNSTR,IND,ISFUN,MAXLEN,LARRAY
"RTN","PXRMPTL",133,0)
 N NAME,NLOGLIN,NPL,NUM,SEP,TEMP
"RTN","PXRMPTL",134,0)
 S MAXLEN=72
"RTN","PXRMPTL",135,0)
 K PARRAY
"RTN","PXRMPTL",136,0)
 ;Get the function string.
"RTN","PXRMPTL",137,0)
 S FUNSTR=$G(^PXD(811.9,RITEM,25,FINDING,3))
"RTN","PXRMPTL",138,0)
 I FUNSTR="" Q
"RTN","PXRMPTL",139,0)
 ;
"RTN","PXRMPTL",140,0)
 ;Establish the list of separators that can be used in the logic
"RTN","PXRMPTL",141,0)
 ;string and take it apart.
"RTN","PXRMPTL",142,0)
 S SEP="'!&=><,()"
"RTN","PXRMPTL",143,0)
 S NLOGLIN=$$STRARR(FUNSTR,SEP,.LARRAY)
"RTN","PXRMPTL",144,0)
 ;Replace argument numbers with the finding.
"RTN","PXRMPTL",145,0)
 S FARG=0
"RTN","PXRMPTL",146,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMPTL",147,0)
 . S TEMP=LARRAY(IND)
"RTN","PXRMPTL",148,0)
 . I TEMP="" Q
"RTN","PXRMPTL",149,0)
 . S FUN=$P(TEMP,"(",1)
"RTN","PXRMPTL",150,0)
 . S ISFUN=$S(FUN="":0,$D(^PXRMD(802.4,"B",FUN)):1,1:0)
"RTN","PXRMPTL",151,0)
 . I ISFUN S FARG=1,FUNCTION=$TR(FUN,"_",""),ARGNUM=0 Q
"RTN","PXRMPTL",152,0)
 . I FARG D
"RTN","PXRMPTL",153,0)
 .. S NUM=+TEMP
"RTN","PXRMPTL",154,0)
 .. S ARGNUM=ARGNUM+1
"RTN","PXRMPTL",155,0)
 .. S AT=$$ARGTYPE^PXRMFFAT(FUNCTION,ARGNUM)
"RTN","PXRMPTL",156,0)
 .. I AT="F" D
"RTN","PXRMPTL",157,0)
 ... S NAME=$S($D(FL(NUM)):FL(NUM),1:"???")
"RTN","PXRMPTL",158,0)
 ... S LARRAY(IND)=$$STRREP^PXRMUTIL(LARRAY(IND),NUM,NAME)
"RTN","PXRMPTL",159,0)
 ..E  S LARRAY(IND)=TEMP
"RTN","PXRMPTL",160,0)
 . I TEMP[")" S FARG=0
"RTN","PXRMPTL",161,0)
 ;Format the array for printing.
"RTN","PXRMPTL",162,0)
 S NPL=$$FMTARR(MAXLEN,NLOGLIN,.LARRAY,.PARRAY)
"RTN","PXRMPTL",163,0)
 Q
"RTN","PXRMPTL",164,0)
 ;
"RTN","PXRMPTL",165,0)
 ;====================================================
"RTN","PXRMPTL",166,0)
EXPAND(NL,ARRAY,FL,LT,RT) ;Insert findings in FI(n) format. Each element
"RTN","PXRMPTL",167,0)
 ;of ARRAY will contain no more than one FI.
"RTN","PXRMPTL",168,0)
 N FIE,FIS,FNUM,LEN,NAME,STRING
"RTN","PXRMPTL",169,0)
 F IND=1:1:NL D
"RTN","PXRMPTL",170,0)
 . S STRING=ARRAY(IND)
"RTN","PXRMPTL",171,0)
 . S FIS=$F(STRING,LT)
"RTN","PXRMPTL",172,0)
 . I FIS=0 Q
"RTN","PXRMPTL",173,0)
 . S LEN=$L(STRING)
"RTN","PXRMPTL",174,0)
 . S FIE=$F(STRING,RT,FIS)-2
"RTN","PXRMPTL",175,0)
 . S FNUM=$E(STRING,FIS,FIE)
"RTN","PXRMPTL",176,0)
 . S NAME=$S($D(FL(FNUM)):FL(FNUM),1:"???")
"RTN","PXRMPTL",177,0)
 . S ARRAY(IND)=$E(STRING,1,FIS-1)_NAME_$E(STRING,FIE+1,LEN)
"RTN","PXRMPTL",178,0)
 Q
"RTN","PXRMPTL",179,0)
 ;
"RTN","PXRMPTL",180,0)
 ;====================================================
"RTN","PXRMPTL",181,0)
FMTARR(MAXLEN,NE,INARRAY,OUTARRAY) ;Load the output array.
"RTN","PXRMPTL",182,0)
 N IC,LINNUM,SLEN
"RTN","PXRMPTL",183,0)
 K OUTARRY
"RTN","PXRMPTL",184,0)
 S OUTARRAY(1)=""
"RTN","PXRMPTL",185,0)
 S LINNUM=1
"RTN","PXRMPTL",186,0)
 F IC=1:1:NE D
"RTN","PXRMPTL",187,0)
 . S SLEN=$L(OUTARRAY(LINNUM))+$L(INARRAY(IC))
"RTN","PXRMPTL",188,0)
 . I SLEN>MAXLEN D
"RTN","PXRMPTL",189,0)
 .. S LINNUM=LINNUM+1
"RTN","PXRMPTL",190,0)
 .. S OUTARRAY(LINNUM)=INARRAY(IC)
"RTN","PXRMPTL",191,0)
 . E  S OUTARRAY(LINNUM)=OUTARRAY(LINNUM)_INARRAY(IC)
"RTN","PXRMPTL",192,0)
 Q LINNUM
"RTN","PXRMPTL",193,0)
 ;
"RTN","PXRMPTL",194,0)
 ;====================================================
"RTN","PXRMPTL",195,0)
STRARR(STRING,SEP,ARRAY) ;Break STRING into an array using SEP.
"RTN","PXRMPTL",196,0)
 N CHAR,IC,LINNUM,NE,SLEN,TEMP
"RTN","PXRMPTL",197,0)
 K OUTARRAY
"RTN","PXRMPTL",198,0)
 ;Break string into pieces using SEP.
"RTN","PXRMPTL",199,0)
 S SLEN=$L(STRING)
"RTN","PXRMPTL",200,0)
 S LINNUM=0,TEMP=""
"RTN","PXRMPTL",201,0)
 F IC=1:1:SLEN D
"RTN","PXRMPTL",202,0)
 . S CHAR=$E(STRING,IC,IC)
"RTN","PXRMPTL",203,0)
 . S TEMP=TEMP_CHAR
"RTN","PXRMPTL",204,0)
 . I SEP[CHAR D
"RTN","PXRMPTL",205,0)
 .. S LINNUM=LINNUM+1
"RTN","PXRMPTL",206,0)
 .. S ARRAY(LINNUM)=TEMP
"RTN","PXRMPTL",207,0)
 .. S TEMP=""
"RTN","PXRMPTL",208,0)
 S LINNUM=LINNUM+1
"RTN","PXRMPTL",209,0)
 S ARRAY(LINNUM)=TEMP
"RTN","PXRMPTL",210,0)
 Q LINNUM
"RTN","PXRMPTL",211,0)
 ;
"RTN","PXRMPTL",212,0)
 ;====================================================
"RTN","PXRMPTL",213,0)
REMOVE(STRING) ;Remove leading (n) entries
"RTN","PXRMPTL",214,0)
 I ($E(STRING,1,4)="(0)!")!($E(STRING,1,4)="(1)&") S $E(STRING,1,4)=""
"RTN","PXRMPTL",215,0)
 Q STRING
"RTN","PXRMPTL",216,0)
 ;
"RTN","PXRMPTTR")
0^55^B21604330
"RTN","PXRMPTTR",1,0)
PXRMPTTR ;SLC/PKR - Routines for term print templates ;01/30/2006
"RTN","PXRMPTTR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMPTTR",3,0)
 ;
"RTN","PXRMPTTR",4,0)
 ;====================================================
"RTN","PXRMPTTR",5,0)
DATE(FIND0,PIECE,FLDNUM,TITLE,RJC,PAD,FILENUM,FLG) ;Standard DATE
"RTN","PXRMPTTR",6,0)
 N DATE,TEXT
"RTN","PXRMPTTR",7,0)
 S DATE=$P($G(FIND0),U,PIECE)
"RTN","PXRMPTTR",8,0)
 I DATE'="" D
"RTN","PXRMPTTR",9,0)
 . S DATE=$$FMTE^XLFDT(DATE,"D")
"RTN","PXRMPTTR",10,0)
 . S TEXT=$$RJ^XLFSTR(TITLE,RJC,PAD)
"RTN","PXRMPTTR",11,0)
 . S TEXT=TEXT_" "_DATE
"RTN","PXRMPTTR",12,0)
 . W !,TEXT
"RTN","PXRMPTTR",13,0)
 Q
"RTN","PXRMPTTR",14,0)
 ;
"RTN","PXRMPTTR",15,0)
 ;====================================================
"RTN","PXRMPTTR",16,0)
GENIEN(FINDING) ;Return internal entry number for findings.
"RTN","PXRMPTTR",17,0)
 N F0,IEN,PREFIX,ROOT,VPTR
"RTN","PXRMPTTR",18,0)
 S ROOT="^PXRMD(811.5,D0,20,FINDING,0)"
"RTN","PXRMPTTR",19,0)
 S F0=@ROOT
"RTN","PXRMPTTR",20,0)
 S VPTR=$P(F0,U,1)
"RTN","PXRMPTTR",21,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTTR",22,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",23,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",24,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPTTR",25,0)
 S PREFIX=$P(VPTR,U,4)
"RTN","PXRMPTTR",26,0)
 Q " (FI("_+FINDING_")="_PREFIX_"("_IEN_"))"
"RTN","PXRMPTTR",27,0)
 ;
"RTN","PXRMPTTR",28,0)
 ;====================================================
"RTN","PXRMPTTR",29,0)
ENTRYNAM(VPTR) ;Given the variable pointer return the entry name. The
"RTN","PXRMPTTR",30,0)
 ;variable pointer list contains the information necessary to do the
"RTN","PXRMPTTR",31,0)
 ;look up.
"RTN","PXRMPTTR",32,0)
 N IEN,FILENUM,NAME,ROOT
"RTN","PXRMPTTR",33,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTTR",34,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",35,0)
 S FILENUM=$P(PXRMFVPL(ROOT),U,1)
"RTN","PXRMPTTR",36,0)
 S NAME=$$GET1^DIQ(FILENUM,IEN,.01,"","","")
"RTN","PXRMPTTR",37,0)
 Q NAME
"RTN","PXRMPTTR",38,0)
 ;
"RTN","PXRMPTTR",39,0)
 ;====================================================
"RTN","PXRMPTTR",40,0)
PFIND ;Print the reminder term finding multiple.
"RTN","PXRMPTTR",41,0)
 N CFP,FIELD,FINDING,FIND0,HFCAT,HFIEN,PAD,PXRMFVPL
"RTN","PXRMPTTR",42,0)
 N RJC,SCNT,SIEN,STAT0,TEXT
"RTN","PXRMPTTR",43,0)
 ;If called by a FileMan print build the variable pointer list.
"RTN","PXRMPTTR",44,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",45,0)
 S PAD=" ",RJC=31
"RTN","PXRMPTTR",46,0)
 S FINDING=0
"RTN","PXRMPTTR",47,0)
 F  S FINDING=$O(^PXRMD(811.5,D0,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTTR",48,0)
 . S FIND0=^PXRMD(811.5,D0,20,FINDING,0)
"RTN","PXRMPTTR",49,0)
 . S FIELD=$P(FIND0,U,1)
"RTN","PXRMPTTR",50,0)
 . S TEXT=$$RJ^XLFSTR("Finding Item:",RJC,PAD)
"RTN","PXRMPTTR",51,0)
 . S TEXT=TEXT_"  "_$$ENTRYNAM(FIELD)
"RTN","PXRMPTTR",52,0)
 . S TEXT=TEXT_" "_$$TRMIEN(FINDING)
"RTN","PXRMPTTR",53,0)
 . W !!,TEXT
"RTN","PXRMPTTR",54,0)
 .;
"RTN","PXRMPTTR",55,0)
 . S TEXT=$$RJ^XLFSTR("Finding Type:",RJC,PAD)
"RTN","PXRMPTTR",56,0)
 . S TEXT=TEXT_"  "_$$TFTYPE(FIELD)
"RTN","PXRMPTTR",57,0)
 . W !,TEXT
"RTN","PXRMPTTR",58,0)
 . I FIND0["AUTTHF" D 
"RTN","PXRMPTTR",59,0)
 .. S HFIEN=$P($P(FIND0,U),";")
"RTN","PXRMPTTR",60,0)
 .. S HFCAT=$P($G(^AUTTHF(HFIEN,0)),U,3)
"RTN","PXRMPTTR",61,0)
 .. S HFCAT=$P($G(^AUTTHF(HFCAT,0)),U)
"RTN","PXRMPTTR",62,0)
 .. S TEXT=$$RJ^XLFSTR("Health Factor Category:",RJC,PAD)
"RTN","PXRMPTTR",63,0)
 .. S TEXT=TEXT_"  "_HFCAT
"RTN","PXRMPTTR",64,0)
 .. W !,TEXT
"RTN","PXRMPTTR",65,0)
 .;
"RTN","PXRMPTTR",66,0)
 . S FIELD=$P(FIND0,U,4)
"RTN","PXRMPTTR",67,0)
 . I $L(FIELD)>0 D
"RTN","PXRMPTTR",68,0)
 .. S TEXT=$$RJ^XLFSTR("Match Frequency/Age:",RJC,PAD)
"RTN","PXRMPTTR",69,0)
 .. S TEXT=TEXT_"  "_$$GENFREQ^PXRMPTD2(FIND0)
"RTN","PXRMPTTR",70,0)
 .. W !,TEXT
"RTN","PXRMPTTR",71,0)
 .;
"RTN","PXRMPTTR",72,0)
 . D DATE(FIND0,8,9,"Beginning Date/Time:",RJC,PAD)
"RTN","PXRMPTTR",73,0)
 . D DATE(FIND0,11,12,"Ending Date/Time Date:",RJC,PAD)
"RTN","PXRMPTTR",74,0)
 . D SFDISP(FIND0,14,17,"Occurrence Count:",RJC,PAD)
"RTN","PXRMPTTR",75,0)
 . D SFDISP(FIND0,9,10,"Use Inactive Problems:",RJC,PAD)
"RTN","PXRMPTTR",76,0)
 . D SFDISP(FIND0,10,11,"Within Category Rank:",RJC,PAD)
"RTN","PXRMPTTR",77,0)
 . D SFDISP(FIND0,12,13,"MH Scale:",RJC,PAD)
"RTN","PXRMPTTR",78,0)
 . D SFDISP(FIND0,16,28,"Include Visit Data:",RJC,PAD)
"RTN","PXRMPTTR",79,0)
 . D SFDISP(FIND0,13,16,"Rx Type:",RJC,PAD)
"RTN","PXRMPTTR",80,0)
 . D SFDISP(FIND0,15,27,"Use Start Date:",RJC,PAD)
"RTN","PXRMPTTR",81,0)
 . I $D(^PXRMD(811.5,D0,20,FINDING,5,0))=1 D
"RTN","PXRMPTTR",82,0)
 .. S (SCNT,SIEN)=0
"RTN","PXRMPTTR",83,0)
 .. F  S SIEN=$O(^PXRMD(811.5,D0,20,FINDING,5,SIEN)) Q:SIEN=""  D
"RTN","PXRMPTTR",84,0)
 ... S STAT0=$G(^PXRMD(811.5,D0,20,FINDING,5,SIEN,0))
"RTN","PXRMPTTR",85,0)
 ... D STATUS(STAT0,"Status List:") S SCNT=SCNT+1
"RTN","PXRMPTTR",86,0)
 .;
"RTN","PXRMPTTR",87,0)
 . S FIND0=$G(^PXRMD(811.5,D0,20,FINDING,3))
"RTN","PXRMPTTR",88,0)
 . D SFDISP(FIND0,1,14,"Condition:",RJC,PAD)
"RTN","PXRMPTTR",89,0)
 . D SFDISP(FIND0,2,15,"Condition Case Sensitive:",RJC,PAD)
"RTN","PXRMPTTR",90,0)
 . D SFDISP(FIND0,3,18,"Use Cond in Finding Search:",RJC,PAD)
"RTN","PXRMPTTR",91,0)
 . I $G(^PXRMD(811.5,D0,20,FINDING,15))'="" D
"RTN","PXRMPTTR",92,0)
 .. S CFP=$$RJ^XLFSTR("Computed Finding Parameter:",RJC,PAD)
"RTN","PXRMPTTR",93,0)
 .. S CFP=CFP_"  "_$G(^PXRMD(811.5,D0,20,FINDING,15))
"RTN","PXRMPTTR",94,0)
 .. W !,CFP
"RTN","PXRMPTTR",95,0)
 Q
"RTN","PXRMPTTR",96,0)
 ;
"RTN","PXRMPTTR",97,0)
 ;====================================================
"RTN","PXRMPTTR",98,0)
SFDISP(FIND0,PIECE,FLDNUM,TITLE,RJC,PAD) ;Standard finding multiple
"RTN","PXRMPTTR",99,0)
 ;field display.
"RTN","PXRMPTTR",100,0)
 N FIELD,TEXT
"RTN","PXRMPTTR",101,0)
 S FIELD=$P(FIND0,U,PIECE)
"RTN","PXRMPTTR",102,0)
 I $L(FIELD)>0 D
"RTN","PXRMPTTR",103,0)
 . S TEXT=$$RJ^XLFSTR(TITLE,RJC,PAD)
"RTN","PXRMPTTR",104,0)
 . S TEXT=TEXT_"  "_$$EXTERNAL^DILFD(811.52,FLDNUM,"",FIELD,"")
"RTN","PXRMPTTR",105,0)
 . W !,TEXT
"RTN","PXRMPTTR",106,0)
 Q
"RTN","PXRMPTTR",107,0)
 ;
"RTN","PXRMPTTR",108,0)
 ;====================================================
"RTN","PXRMPTTR",109,0)
STATUS(STAT0,TITLE) ; Status display
"RTN","PXRMPTTR",110,0)
 I $L(STAT0)>0 D
"RTN","PXRMPTTR",111,0)
 . N STATUS
"RTN","PXRMPTTR",112,0)
 . I SCNT=0 S STATUS=$$RJ^XLFSTR(TITLE,RJC,PAD)
"RTN","PXRMPTTR",113,0)
 . I SCNT>0 S STATUS=$$RJ^XLFSTR("",RJC,PAD)
"RTN","PXRMPTTR",114,0)
 . S STATUS=STATUS_"  "_STAT0
"RTN","PXRMPTTR",115,0)
 . W !,STATUS
"RTN","PXRMPTTR",116,0)
 Q
"RTN","PXRMPTTR",117,0)
 ;
"RTN","PXRMPTTR",118,0)
 ;====================================================
"RTN","PXRMPTTR",119,0)
TFTYPE(VPTR) ;Return Term finding type
"RTN","PXRMPTTR",120,0)
 N ROOT,TFTYPE
"RTN","PXRMPTTR",121,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",122,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",123,0)
 S TFTYPE=$P(PXRMFVPL(ROOT),U,2)
"RTN","PXRMPTTR",124,0)
 Q TFTYPE
"RTN","PXRMPTTR",125,0)
 ;
"RTN","PXRMPTTR",126,0)
 ;====================================================
"RTN","PXRMPTTR",127,0)
TRMIEN(FINDING) ;Return internal entry number for TERM findings.
"RTN","PXRMPTTR",128,0)
 N F0,IEN,PREFIX,ROOT,VPTR
"RTN","PXRMPTTR",129,0)
 S ROOT="^PXRMD(811.5,D0,20,FINDING,0)"
"RTN","PXRMPTTR",130,0)
 S F0=@ROOT
"RTN","PXRMPTTR",131,0)
 S VPTR=$P(F0,U,1)
"RTN","PXRMPTTR",132,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTTR",133,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",134,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",135,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPTTR",136,0)
 S PREFIX=$P(VPTR,U,4)
"RTN","PXRMPTTR",137,0)
 Q " (FI("_+FINDING_")="_PREFIX_"("_IEN_"))"
"RTN","PXRMPTTR",138,0)
 ;
"RTN","PXRMRAD")
0^124^B7364662
"RTN","PXRMRAD",1,0)
PXRMRAD ; SLC/PKR - Handle radiology findings. ;10/21/2005
"RTN","PXRMRAD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMRAD",3,0)
 ;
"RTN","PXRMRAD",4,0)
 ;=================================================
"RTN","PXRMRAD",5,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate radiology findings.
"RTN","PXRMRAD",6,0)
 D EVALFI^PXRMINDX(DFN,.DEFARR,ENODE,.FIEVAL)
"RTN","PXRMRAD",7,0)
 Q
"RTN","PXRMRAD",8,0)
 ;
"RTN","PXRMRAD",9,0)
 ;=================================================
"RTN","PXRMRAD",10,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Evaluate radiology term findings
"RTN","PXRMRAD",11,0)
 ;for patient lists.
"RTN","PXRMRAD",12,0)
 D EVALPL^PXRMINDL(.FINDPA,ENODE,.TERMARR,PLIST)
"RTN","PXRMRAD",13,0)
 Q
"RTN","PXRMRAD",14,0)
 ;
"RTN","PXRMRAD",15,0)
 ;=================================================
"RTN","PXRMRAD",16,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate radiology terms.
"RTN","PXRMRAD",17,0)
 D EVALTERM^PXRMINDX(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL)
"RTN","PXRMRAD",18,0)
 Q
"RTN","PXRMRAD",19,0)
 ;
"RTN","PXRMRAD",20,0)
 ;=================================================
"RTN","PXRMRAD",21,0)
GETDATA(DAS,FIEVT) ;Return data for a RAD/NUC MED PATIENT entry.
"RTN","PXRMRAD",22,0)
 ;DBIA #3731
"RTN","PXRMRAD",23,0)
 D EN1^RAPXRM(DAS,.FIEVT)
"RTN","PXRMRAD",24,0)
 S (FIEVT("STATUS"),FIEVT("VALUE"))=FIEVT("EXAM STATUS")
"RTN","PXRMRAD",25,0)
 Q
"RTN","PXRMRAD",26,0)
 ;
"RTN","PXRMRAD",27,0)
 ;=================================================
"RTN","PXRMRAD",28,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMRAD",29,0)
 N CPT,CPTDATA,CODE,D0,IND,JND,NAME,NOUT,RADPROC,SNAME,TEMP,TEXTOUT
"RTN","PXRMRAD",30,0)
 S RADPROC=$P(IFIEVAL("FINDING"),";",1)
"RTN","PXRMRAD",31,0)
 ;DBIA #118-B
"RTN","PXRMRAD",32,0)
 S D0=^RAMIS(71,RADPROC,0)
"RTN","PXRMRAD",33,0)
 S NAME=$P(D0,U,1)
"RTN","PXRMRAD",34,0)
 S CPT=$P(D0,U,9)
"RTN","PXRMRAD",35,0)
 S CPTDATA=$$CPT^ICPTCOD(CPT)
"RTN","PXRMRAD",36,0)
 S CODE=$P(CPTDATA,U,2)
"RTN","PXRMRAD",37,0)
 S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMRAD",38,0)
 S NAME="Radiology Procedure = "_SNAME
"RTN","PXRMRAD",39,0)
 S IND=0
"RTN","PXRMRAD",40,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMRAD",41,0)
 . S TEMP=NAME_" ("_$$EDATE^PXRMDATE(IFIEVAL(IND,"DATE"))_")"
"RTN","PXRMRAD",42,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMRAD",43,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMRAD",44,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMRAD",45,0)
 Q
"RTN","PXRMRAD",46,0)
 ;
"RTN","PXRMRAD",47,0)
 ;=================================================
"RTN","PXRMRAD",48,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMRAD",49,0)
 ;maintenance output.
"RTN","PXRMRAD",50,0)
 N CPT,CPTDATA,CODE,D0,IND,JND,NAME,NOUT,RADPROC,SNAME,TEMP,TEXTOUT
"RTN","PXRMRAD",51,0)
 S RADPROC=$P(IFIEVAL("FINDING"),";",1)
"RTN","PXRMRAD",52,0)
 ;DBIA #118-B
"RTN","PXRMRAD",53,0)
 S D0=^RAMIS(71,RADPROC,0)
"RTN","PXRMRAD",54,0)
 S NAME=$P(D0,U,1)
"RTN","PXRMRAD",55,0)
 S CPT=$P(D0,U,9)
"RTN","PXRMRAD",56,0)
 S CPTDATA=$$CPT^ICPTCOD(CPT)
"RTN","PXRMRAD",57,0)
 S CODE=$P(CPTDATA,U,2)
"RTN","PXRMRAD",58,0)
 S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMRAD",59,0)
 S TEMP="Radiology Procedure: "_CODE_" ("_NAME_") - "_SNAME
"RTN","PXRMRAD",60,0)
 D FORMATS^PXRMTEXT(INDENT+1,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMRAD",61,0)
 F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMRAD",62,0)
 S IND=0
"RTN","PXRMRAD",63,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMRAD",64,0)
 . S TEMP=$$EDATE^PXRMDATE(IFIEVAL(IND,"DATE"))
"RTN","PXRMRAD",65,0)
 . S TEMP=TEMP_" Status: "_IFIEVAL(IND,"STATUS")
"RTN","PXRMRAD",66,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMRAD",67,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMRAD",68,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMRAD",69,0)
 Q
"RTN","PXRMRAD",70,0)
 ;
"RTN","PXRMRCPT")
0^104^B20161375
"RTN","PXRMRCPT",1,0)
PXRMRCPT ; SLC/PKR - Code to handle radiology CPT data. ;08/23/2005
"RTN","PXRMRCPT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMRCPT",3,0)
 ;
"RTN","PXRMRCPT",4,0)
 ;==============================================
"RTN","PXRMRCPT",5,0)
FPDAT(DFN,TAXARR,NOCC,BDT,EDT,STATUSA,FLIST) ;Find data for a
"RTN","PXRMRCPT",6,0)
 ;patient. The expanded taxonomy stores radiology data by procedure
"RTN","PXRMRCPT",7,0)
 ;ien i.e.,
"RTN","PXRMRCPT",8,0)
 ;^PXD(811.3,N,71,"RCPTP",RADPROC,DA)
"RTN","PXRMRCPT",9,0)
 ;^PXD(811.3,81,DA,0)=ICPTP
"RTN","PXRMRCPT",10,0)
 N DA,DATE,FIEVT,ICPTP,IND,NOCCABS,NFOUND,PFINDPA
"RTN","PXRMRCPT",11,0)
 N RADPROC,SDIR,TE,TDATE,TIND,TF,TLIST,TS
"RTN","PXRMRCPT",12,0)
 I $G(^PXRMINDX(70,"DATE BUILT"))="" D  Q
"RTN","PXRMRCPT",13,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),70)
"RTN","PXRMRCPT",14,0)
 I '$D(^PXRMINDX(70,"PI",DFN)) Q
"RTN","PXRMRCPT",15,0)
 I '$D(TAXARR(71)) Q
"RTN","PXRMRCPT",16,0)
 S $P(PFINDPA(0),U,8)=BDT
"RTN","PXRMRCPT",17,0)
 S $P(PFINDPA(0),U,11)=EDT
"RTN","PXRMRCPT",18,0)
 S $P(PFINDPA(0),U,14)=NOCC
"RTN","PXRMRCPT",19,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMRCPT",20,0)
 F IND=1:1:STATUSA(0) S PFINDPA(5,IND)=STATUSA(IND)
"RTN","PXRMRCPT",21,0)
 ;Get the start and end of the taxonomy, for radiology these are
"RTN","PXRMRCPT",22,0)
 ;actually radiology procedures, which we use to get to the CPT codes.
"RTN","PXRMRCPT",23,0)
 S TS=$O(TAXARR(71,""))-1
"RTN","PXRMRCPT",24,0)
 S TE=$O(TAXARR(71,""),-1)
"RTN","PXRMRCPT",25,0)
 S NFOUND=0
"RTN","PXRMRCPT",26,0)
 S RADPROC=TS
"RTN","PXRMRCPT",27,0)
 F  S RADPROC=$O(^PXRMINDX(70,"PI",DFN,RADPROC)) Q:(RADPROC>TE)!(RADPROC="")  D
"RTN","PXRMRCPT",28,0)
 . I '$D(TAXARR(71,RADPROC)) Q
"RTN","PXRMRCPT",29,0)
 . K FIEVT
"RTN","PXRMRCPT",30,0)
 . D FIEVAL^PXRMINDX(70,"PI",DFN,RADPROC,.PFINDPA,.FIEVT)
"RTN","PXRMRCPT",31,0)
 . I FIEVT D
"RTN","PXRMRCPT",32,0)
 .. S DA=$O(TAXARR(71,RADPROC,""))
"RTN","PXRMRCPT",33,0)
 .. S ICPTP=TAXARR(71,RADPROC,DA,0)
"RTN","PXRMRCPT",34,0)
 .. S IND=0
"RTN","PXRMRCPT",35,0)
 .. F  S IND=+$O(FIEVT(IND)) Q:IND=0  D
"RTN","PXRMRCPT",36,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMRCPT",37,0)
 ... S TLIST(FIEVT(IND,"DATE"),NFOUND)=FIEVT(IND,"DAS")_U_ICPTP_U_RADPROC_U_"CPT"
"RTN","PXRMRCPT",38,0)
 ... I NFOUND>NGET D
"RTN","PXRMRCPT",39,0)
 .... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMRCPT",40,0)
 .... K TLIST(TDATE,TIND)
"RTN","PXRMRCPT",41,0)
 ;Return up to NOCC of the most recent entries.
"RTN","PXRMRCPT",42,0)
 S NOCCABS=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMRCPT",43,0)
 S NFOUND=0
"RTN","PXRMRCPT",44,0)
 S DATE=""
"RTN","PXRMRCPT",45,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NOCCABS)  D
"RTN","PXRMRCPT",46,0)
 . S IND=0
"RTN","PXRMRCPT",47,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NOCCABS)  D
"RTN","PXRMRCPT",48,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMRCPT",49,0)
 .. S FLIST(DATE,NFOUND,70)=TLIST(DATE,IND)
"RTN","PXRMRCPT",50,0)
 Q
"RTN","PXRMRCPT",51,0)
 ;
"RTN","PXRMRCPT",52,0)
 ;==============================================
"RTN","PXRMRCPT",53,0)
GPLIST(TAXARR,PFINDPA,PLIST) ;Build a patient list for radiology CPT entries.
"RTN","PXRMRCPT",54,0)
 N DA,DAS,DATE,DFN,ICPTP,NFOUND
"RTN","PXRMRCPT",55,0)
 N RADPROC,TEMP,TF,TLIST,VALUE
"RTN","PXRMRCPT",56,0)
 I $G(^PXRMINDX(70,"DATE BUILT"))="" D  Q
"RTN","PXRMRCPT",57,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),70)
"RTN","PXRMRCPT",58,0)
 S TLIST="GPLIST_PXRMRCPT"
"RTN","PXRMRCPT",59,0)
 S RADPROC=""
"RTN","PXRMRCPT",60,0)
 F  S RADPROC=$O(TAXARR(71,RADPROC)) Q:RADPROC=""  D
"RTN","PXRMRCPT",61,0)
 . I '$D(^PXRMINDX(70,"IP",RADPROC)) Q
"RTN","PXRMRCPT",62,0)
 . S DA=$O(TAXARR(71,RADPROC,""))
"RTN","PXRMRCPT",63,0)
 . S ICPTP=$P(TAXARR(71,RADPROC,DA,0),U,1)
"RTN","PXRMRCPT",64,0)
 . K ^TMP($J,TLIST)
"RTN","PXRMRCPT",65,0)
 . D GPLIST^PXRMINDL(70,"IP",RADPROC,.PFINDPA,TLIST)
"RTN","PXRMRCPT",66,0)
 . F TF=0,1 D
"RTN","PXRMRCPT",67,0)
 .. S DFN=0
"RTN","PXRMRCPT",68,0)
 .. F  S DFN=$O(^TMP($J,TLIST,TF,DFN)) Q:DFN=""  D
"RTN","PXRMRCPT",69,0)
 ... S NFOUND=0
"RTN","PXRMRCPT",70,0)
 ... F  S NFOUND=$O(^TMP($J,TLIST,TF,DFN,RADPROC,NFOUND)) Q:NFOUND=""  D
"RTN","PXRMRCPT",71,0)
 .... S TEMP=^TMP($J,TLIST,TF,DFN,RADPROC,NFOUND,70)
"RTN","PXRMRCPT",72,0)
 .... S DAS=$P(TEMP,U,1)
"RTN","PXRMRCPT",73,0)
 .... S DATE=$P(TEMP,U,2)
"RTN","PXRMRCPT",74,0)
 .... S VALUE=$P(TEMP,U,4)
"RTN","PXRMRCPT",75,0)
 .... S ^TMP($J,PLIST,TF,DFN,DATE,70)=DAS_U_DATE_U_ICPTP_U_"CPT"_U_VALUE
"RTN","PXRMRCPT",76,0)
 K ^TMP($J,TLIST)
"RTN","PXRMRCPT",77,0)
 Q
"RTN","PXRMRCPT",78,0)
 ;
"RTN","PXRMRCPT",79,0)
 ;==============================================
"RTN","PXRMRCPT",80,0)
MHVOUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMRCPT",81,0)
 N CODE,CPT,CPTDATA,DATE,ICPTP,IND,JND,NAME,NOUT,SNAME,TEMP,TEXTOUT
"RTN","PXRMRCPT",82,0)
 S NAME="Radiology Procedure = "
"RTN","PXRMRCPT",83,0)
 S IND=0
"RTN","PXRMRCPT",84,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMRCPT",85,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMRCPT",86,0)
 . S ICPTP=IFIEVAL(IND,"CODEP")
"RTN","PXRMRCPT",87,0)
 . S CPTDATA=$$CPT^ICPTCOD(ICPTP)
"RTN","PXRMRCPT",88,0)
 . S CODE=$P(CPTDATA,U,2)
"RTN","PXRMRCPT",89,0)
 . S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMRCPT",90,0)
 . S TEMP=" "_IFIEVAL(IND,"PROCEDURE")
"RTN","PXRMRCPT",91,0)
 . S TEMP=NAME_SNAME_" ("_$$EDATE^PXRMDATE(DATE)_")"
"RTN","PXRMRCPT",92,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMRCPT",93,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMRCPT",94,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMRCPT",95,0)
 Q
"RTN","PXRMRCPT",96,0)
 ;
"RTN","PXRMRCPT",97,0)
 ;==============================================
"RTN","PXRMRCPT",98,0)
OUTPUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMRCPT",99,0)
 ;maintenance output. The CPT information is:  DATE, ICPT CODE,
"RTN","PXRMRCPT",100,0)
 ;SHORT NAME, PROVIDER NARRATIVE.
"RTN","PXRMRCPT",101,0)
 N CODE,CPT,CPTDATA,DATE,ICPTP,IND,JND,NOUT,SNAME,TAXIEN,TEMP,TEXTOUT
"RTN","PXRMRCPT",102,0)
 S TEMP=IFIEVAL("FINDING")
"RTN","PXRMRCPT",103,0)
 S TAXIEN=$P(TEMP,";",1)
"RTN","PXRMRCPT",104,0)
 S TEMP="Radiology Procedure(s) from taxonomy "_$P(^PXD(811.2,TAXIEN,0),U,1)
"RTN","PXRMRCPT",105,0)
 S NLINES=NLINES+1
"RTN","PXRMRCPT",106,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_TEMP
"RTN","PXRMRCPT",107,0)
 S IND=0
"RTN","PXRMRCPT",108,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMRCPT",109,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMRCPT",110,0)
 . S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMRCPT",111,0)
 . S ICPTP=IFIEVAL(IND,"CODEP")
"RTN","PXRMRCPT",112,0)
 . S CPTDATA=$$CPT^ICPTCOD(ICPTP)
"RTN","PXRMRCPT",113,0)
 . S CODE=$P(CPTDATA,U,2)
"RTN","PXRMRCPT",114,0)
 . S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMRCPT",115,0)
 . S TEMP=TEMP_" "_IFIEVAL(IND,"PROCEDURE")
"RTN","PXRMRCPT",116,0)
 . S TEMP=TEMP_"-CPT: "_CODE_" "_SNAME
"RTN","PXRMRCPT",117,0)
 . S TEMP=TEMP_" Status: "_IFIEVAL(IND,"STATUS")
"RTN","PXRMRCPT",118,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMRCPT",119,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMRCPT",120,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMRCPT",121,0)
 Q
"RTN","PXRMRCPT",122,0)
 ;
"RTN","PXRMRDI")
0^144^B13129062
"RTN","PXRMRDI",1,0)
PXRMRDI ; SLC/PKR - Routines to support RDI list building. ;07/27/2006
"RTN","PXRMRDI",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMRDI",3,0)
 ;=========================================================
"RTN","PXRMRDI",4,0)
APPERR(TYPE) ;Handle errors getting appointment data.
"RTN","PXRMRDI",5,0)
 N ECODE,NL,TIME,USER
"RTN","PXRMRDI",6,0)
 S USER=$S($D(ZTQUEUED):DBDUZ,1:DUZ)
"RTN","PXRMRDI",7,0)
 S TIME=$$NOW^XLFDT
"RTN","PXRMRDI",8,0)
 S TIME=$$FMTE^XLFDT(TIME)
"RTN","PXRMRDI",9,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMRDI",10,0)
 S ^TMP("PXRMXMZ",$J,1,0)="The "_TYPE_" requested by "_$$GET1^DIQ(200,USER,.01)_" on "
"RTN","PXRMRDI",11,0)
 S ^TMP("PXRMXMZ",$J,2,0)=TIME_" requires appointment data which could not be obtained"
"RTN","PXRMRDI",12,0)
 S ^TMP("PXRMXMZ",$J,3,0)="from the Scheduling database due to the following error(s):"
"RTN","PXRMRDI",13,0)
 S ECODE=0,NL=3
"RTN","PXRMRDI",14,0)
 F  S ECODE=$O(^TMP($J,"SDAMA301",ECODE)) Q:ECODE=""  D
"RTN","PXRMRDI",15,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "_^TMP($J,"SDAMA301",ECODE)
"RTN","PXRMRDI",16,0)
 D SEND^PXRMMSG("Scheduling database error(s)",1)
"RTN","PXRMRDI",17,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXRMRDI",18,0)
 Q
"RTN","PXRMRDI",19,0)
 ;
"RTN","PXRMRDI",20,0)
 ;=========================================================
"RTN","PXRMRDI",21,0)
APPL(NGET,BDT,EDT,PLIST,PARAM) ;List type computed finding that returns
"RTN","PXRMRDI",22,0)
 ;a list of patients with appointments in the date range BDT to EDT.
"RTN","PXRMRDI",23,0)
 N FILTER,FLDS,RESULT
"RTN","PXRMRDI",24,0)
 K ^TMP($J,PLIST),^TMP($J,"SDAMA301")
"RTN","PXRMRDI",25,0)
 I BDT<2000000 S BDT=2000101
"RTN","PXRMRDI",26,0)
 S FILTER(1)=BDT_";"_EDT
"RTN","PXRMRDI",27,0)
 S FILTER("SORT")="P"
"RTN","PXRMRDI",28,0)
 ;Set the rest of the filter nodes.
"RTN","PXRMRDI",29,0)
 D SFILTER(PARAM,.FILTER,.FLDS)
"RTN","PXRMRDI",30,0)
 ;DBIA #4433
"RTN","PXRMRDI",31,0)
 S RESULT=$$SDAPI^SDAMA301(.FILTER)
"RTN","PXRMRDI",32,0)
 I RESULT=-1 D APPERR("Patient List build") Q
"RTN","PXRMRDI",33,0)
 N COUNT,DATE,DFN,DONE,ITEM
"RTN","PXRMRDI",34,0)
 S DFN=""
"RTN","PXRMRDI",35,0)
 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN=""  D
"RTN","PXRMRDI",36,0)
 . S (COUNT,DONE)=0,DATE=""
"RTN","PXRMRDI",37,0)
 . F  S DATE=$O(^TMP($J,"SDAMA301",DFN,DATE),-1) Q:(DONE)!(DATE="")  D
"RTN","PXRMRDI",38,0)
 .. S COUNT=COUNT+1
"RTN","PXRMRDI",39,0)
 .. S ITEM=$P(^TMP($J,"SDAMA301",DFN,DATE),U,2)
"RTN","PXRMRDI",40,0)
 .. S ^TMP($J,PLIST,DFN,COUNT)=U_DATE_U_44_U_$P(ITEM,";",1)_U_$P(ITEM,";",2)
"RTN","PXRMRDI",41,0)
 .. I COUNT=NGET S DONE=1
"RTN","PXRMRDI",42,0)
 K ^TMP($J,"SDAMA301"),^TMP($J,"HLOCL")
"RTN","PXRMRDI",43,0)
 Q
"RTN","PXRMRDI",44,0)
 ;
"RTN","PXRMRDI",45,0)
 ;=========================================================
"RTN","PXRMRDI",46,0)
PAPPL(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,VALUE,TEXT) ;Multiple type computed
"RTN","PXRMRDI",47,0)
 ;finding that returns a list appointments for a patient.
"RTN","PXRMRDI",48,0)
 N FILTER,FLDS,PARAM,RESULT
"RTN","PXRMRDI",49,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXRMRDI",50,0)
 S PARAM=TEST K TEST
"RTN","PXRMRDI",51,0)
 S NFOUND=0
"RTN","PXRMRDI",52,0)
 I BDT<2000000 S BDT=2000101
"RTN","PXRMRDI",53,0)
 S FILTER(1)=BDT_";"_EDT
"RTN","PXRMRDI",54,0)
 S FILTER(4)=DFN
"RTN","PXRMRDI",55,0)
 S FILTER("SORT")="P"
"RTN","PXRMRDI",56,0)
 ;Set the rest of the filter nodes.
"RTN","PXRMRDI",57,0)
 D SFILTER(PARAM,.FILTER,.FLDS)
"RTN","PXRMRDI",58,0)
 ;DBIA #4433
"RTN","PXRMRDI",59,0)
 S RESULT=$$SDAPI^SDAMA301(.FILTER)
"RTN","PXRMRDI",60,0)
 I RESULT=-1 D APPERR("Computed finding evaluation") Q
"RTN","PXRMRDI",61,0)
 N APPDATE,IND,DONE,IND,ITEM
"RTN","PXRMRDI",62,0)
 S APPDATE="",DONE=0
"RTN","PXRMRDI",63,0)
 F  S APPDATE=$O(^TMP($J,"SDAMA301",DFN,APPDATE),-1) Q:(DONE)!(APPDATE="")  D
"RTN","PXRMRDI",64,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMRDI",65,0)
 . S TEST(NFOUND)=1,DATE(NFOUND)=APPDATE
"RTN","PXRMRDI",66,0)
 . S VALUE(NFOUND,"VALUE")=^TMP($J,"SDAMA301",DFN,APPDATE)
"RTN","PXRMRDI",67,0)
 . I NFOUND=NGET S DONE=1
"RTN","PXRMRDI",68,0)
 K ^TMP($J,"SDAMA301"),^TMP($J,"HLOCL")
"RTN","PXRMRDI",69,0)
 Q
"RTN","PXRMRDI",70,0)
 ;
"RTN","PXRMRDI",71,0)
 ;=========================================================
"RTN","PXRMRDI",72,0)
SFILTER(PARAM,FILTER,FLDS) ;Parse the PARMETER and set the appropriate
"RTN","PXRMRDI",73,0)
 ;fields.
"RTN","PXRMRDI",74,0)
 N IND,LL,P1,P2,STATUS,TEMP
"RTN","PXRMRDI",75,0)
 S (FLDS,LL,STATUS)=""
"RTN","PXRMRDI",76,0)
 F IND=1:1:$L(PARAM,U) D
"RTN","PXRMRDI",77,0)
 . S TEMP=$P(PARAM,U,IND)
"RTN","PXRMRDI",78,0)
 . S P1=$P(TEMP,":",1),P2=$P(TEMP,":",2)
"RTN","PXRMRDI",79,0)
 . I P1="FLDS" S FLDS=$TR(P2,",",";") Q
"RTN","PXRMRDI",80,0)
 . I P1="LL" S LL=P2 Q
"RTN","PXRMRDI",81,0)
 . I P1="STATUS" S STATUS=$TR(P2,",",";") Q
"RTN","PXRMRDI",82,0)
 S FILTER("FLDS")=$S(FLDS="":"1;2",1:FLDS)
"RTN","PXRMRDI",83,0)
 S FILTER(3)=$S(STATUS="":"I;R",1:STATUS)
"RTN","PXRMRDI",84,0)
 I LL="" Q
"RTN","PXRMRDI",85,0)
 S LL=$O(^PXRMD(810.9,"B",LL,""))
"RTN","PXRMRDI",86,0)
 D LOCLIST^PXRMLOCF(LL,"HLOCL")
"RTN","PXRMRDI",87,0)
 S FILTER(2)="^TMP($J,""HLOCL"","
"RTN","PXRMRDI",88,0)
 Q
"RTN","PXRMRDI",89,0)
 ;
"RTN","PXRMRDI",90,0)
 ;=========================================================
"RTN","PXRMRDI",91,0)
TFL(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,VALUE,TEXT) ;Multiple type computed
"RTN","PXRMRDI",92,0)
 ;finding for a patient's treating facility list.
"RTN","PXRMRDI",93,0)
 N DONE,IND,NOW,SDIR,TDATE,TFL,TFLD
"RTN","PXRMRDI",94,0)
 S NFOUND=0
"RTN","PXRMRDI",95,0)
 ;DBIA #2990
"RTN","PXRMRDI",96,0)
 D TFL^VAFCTFU1(.TFL,DFN)
"RTN","PXRMRDI",97,0)
 I +TFL(1)=-1 Q
"RTN","PXRMRDI",98,0)
 S NOW=$$NOW^PXRMDATE
"RTN","PXRMRDI",99,0)
 S (DONE,IND)=0
"RTN","PXRMRDI",100,0)
 F  S IND=$O(TFL(IND)) Q:(DONE)!(IND="")  D
"RTN","PXRMRDI",101,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMRDI",102,0)
 . S TEST(NFOUND)=1,DATE(NFOUND)=NOW
"RTN","PXRMRDI",103,0)
 . S VALUE(NFOUND,"VALUE")=TFL(IND)
"RTN","PXRMRDI",104,0)
 . I NFOUND=NGET S DONE=1 Q
"RTN","PXRMRDI",105,0)
 F IND=1:1:NFOUND S VALUE(IND,"NUM FACILITIES")=NFOUND
"RTN","PXRMRDI",106,0)
 Q
"RTN","PXRMRDI",107,0)
 ;
"RTN","PXRMREDF")
0^53^B83881893
"RTN","PXRMREDF",1,0)
PXRMREDF ; SLC/PJH - Edit PXRM reminder findings. ;02/09/2006
"RTN","PXRMREDF",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMREDF",3,0)
 ;
"RTN","PXRMREDF",4,0)
 ; Called by PXRMREDT which newes and initialized DEF, DEF1, DEF2.
"RTN","PXRMREDF",5,0)
 ;
"RTN","PXRMREDF",6,0)
SET S:'$D(^PXD(811.9,DA,20,0)) ^PXD(811.9,DA,20,0)="^811.902V" Q
"RTN","PXRMREDF",7,0)
 ;Display ALL findings
"RTN","PXRMREDF",8,0)
 ;
"RTN","PXRMREDF",9,0)
 ;--------------------
"RTN","PXRMREDF",10,0)
DSPALL(TYPE,NODE,DA,LIST) ;
"RTN","PXRMREDF",11,0)
 N FIRST,SUB,SUB1,SUB2
"RTN","PXRMREDF",12,0)
 S FIRST=1,SUB="",SUB1="",SUB2=""
"RTN","PXRMREDF",13,0)
 F  S SUB=$O(LIST(SUB)) Q:SUB=""  D
"RTN","PXRMREDF",14,0)
 .S SUB1=0
"RTN","PXRMREDF",15,0)
 .F  S SUB1=$O(LIST(SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMREDF",16,0)
 ..S SUB2=0 F  S SUB2=$O(LIST(SUB,SUB1,SUB2)) Q:SUB2=""  D
"RTN","PXRMREDF",17,0)
 ...I FIRST S FIRST=0 W !!,"Choose from:",!
"RTN","PXRMREDF",18,0)
 ...W SUB
"RTN","PXRMREDF",19,0)
 ...W ?5,SUB1,?65,"Finding #: "_SUB2,!
"RTN","PXRMREDF",20,0)
 I FIRST,TYPE="D" W !!,"Reminder has no findings",!
"RTN","PXRMREDF",21,0)
 I FIRST,TYPE="T" W !!,"Reminder Term has no findings",!
"RTN","PXRMREDF",22,0)
 ;Update
"RTN","PXRMREDF",23,0)
 D LIST^PXRMREDT(NODE,DA,.LIST)
"RTN","PXRMREDF",24,0)
 Q
"RTN","PXRMREDF",25,0)
 ;
"RTN","PXRMREDF",26,0)
 ;Edit individual FINDING entry
"RTN","PXRMREDF",27,0)
 ;-----------------------------
"RTN","PXRMREDF",28,0)
FEDIT(IEN) ;
"RTN","PXRMREDF",29,0)
 N CFIEN,DA,DIC,DIE,DR,ETYPE,GLOB
"RTN","PXRMREDF",30,0)
 N STATUS,TERMSTAT,TIEN,TERMTYPE,VF,WPIEN,Y
"RTN","PXRMREDF",31,0)
 S DA(1)=IEN
"RTN","PXRMREDF",32,0)
 S DIC="^PXD(811.9,"_IEN_",20,"
"RTN","PXRMREDF",33,0)
 I $P(^PXD(811.9,IEN,100),U)="N",$G(PXRMINST)'=1 S DIC(0)="QEA"
"RTN","PXRMREDF",34,0)
 E  S DIC(0)="QEAL"
"RTN","PXRMREDF",35,0)
 S DIC("A")="Select FINDING: "
"RTN","PXRMREDF",36,0)
 S DIC("P")="811.902V"
"RTN","PXRMREDF",37,0)
 D ^DIC I Y=-1 S DTOUT=1 Q
"RTN","PXRMREDF",38,0)
 S DIE=DIC K DIC
"RTN","PXRMREDF",39,0)
 S DA=+Y,GLOB=$P($P(Y,U,2),";",2) Q:GLOB=""
"RTN","PXRMREDF",40,0)
 S TYPE=$G(DEF1(GLOB))
"RTN","PXRMREDF",41,0)
 S SDA(2)=DA(1),SDA(1)=DA
"RTN","PXRMREDF",42,0)
 ;Save term IEN
"RTN","PXRMREDF",43,0)
 S STATUS=0
"RTN","PXRMREDF",44,0)
 I TYPE="RT" S TIEN=$P($P(Y,U,2),";",1)
"RTN","PXRMREDF",45,0)
 I TYPE="CF" S CFIEN=$P($P(Y,U,2),";",1) D
"RTN","PXRMREDF",46,0)
 .I $D(^PXRMD(811.4,CFIEN,1))>0 D
"RTN","PXRMREDF",47,0)
 ..W !!,"Computed Finding Description:" S WPIEN=0
"RTN","PXRMREDF",48,0)
 ..F  S WPIEN=$O(^PXRMD(811.4,CFIEN,1,WPIEN)) Q:+WPIEN'>0  D
"RTN","PXRMREDF",49,0)
 ...W !,$G(^PXRMD(811.4,CFIEN,1,WPIEN,0))
"RTN","PXRMREDF",50,0)
 .E  W !!,"No description defined for this computed finding"
"RTN","PXRMREDF",51,0)
 ;Finding record fields
"RTN","PXRMREDF",52,0)
 W !!,"Editing Finding Number: "_$G(DA)
"RTN","PXRMREDF",53,0)
 S DR=".01;3;I X=""0Y"" S Y=6;1;2;6;7;8;9;12;17"
"RTN","PXRMREDF",54,0)
 ;Taxonomy - use inactive problems
"RTN","PXRMREDF",55,0)
 I TYPE="TX" D
"RTN","PXRMREDF",56,0)
 .S TERMSTAT=$$TAXNODE^PXRMSTA1($P($P(Y,U,2),";"),"H")
"RTN","PXRMREDF",57,0)
 .I TERMSTAT="P" S DR=DR_";10" Q
"RTN","PXRMREDF",58,0)
 .I TERMSTAT'=0 S DR=DR_";10",STATUS=1
"RTN","PXRMREDF",59,0)
 I TYPE="RT" D
"RTN","PXRMREDF",60,0)
 .S TERMTYPE=$$TERMTYPE(TIEN)
"RTN","PXRMREDF",61,0)
 .I TERMTYPE["H" S DR=DR_";11"
"RTN","PXRMREDF",62,0)
 ;Health Factor - within category rank
"RTN","PXRMREDF",63,0)
 I TYPE="HF" S DR=DR_";11"
"RTN","PXRMREDF",64,0)
 ;If V file INCLUDE VISIT DATA
"RTN","PXRMREDF",65,0)
 S VF=$S(TYPE="ED":1,TYPE="EX":1,TYPE="HF":1,TYPE="IM":1,TYPE="ST":1,TYPE="TX":1,1:0)
"RTN","PXRMREDF",66,0)
 I TYPE="RT",$P(TERMTYPE,U,2)="VF" S VF=1
"RTN","PXRMREDF",67,0)
 I VF S DR=DR_";28"
"RTN","PXRMREDF",68,0)
 ;
"RTN","PXRMREDF",69,0)
 ;Mental Health - scale
"RTN","PXRMREDF",70,0)
 I TYPE="MH" S DR=DR_";13"
"RTN","PXRMREDF",71,0)
 ;Radiology procedure.
"RTN","PXRMREDF",72,0)
 I TYPE="RP" S STATUS=1
"RTN","PXRMREDF",73,0)
 ;Orderable Item
"RTN","PXRMREDF",74,0)
 I TYPE="OI" S DR=DR_";27",STATUS=1
"RTN","PXRMREDF",75,0)
 ;Rx Type
"RTN","PXRMREDF",76,0)
 I (TYPE="DC")!(TYPE="DG")!(TYPE="DR") S DR=DR_";16;27",STATUS=1
"RTN","PXRMREDF",77,0)
 ;Condition
"RTN","PXRMREDF",78,0)
 S DR=DR_";14;15;18"
"RTN","PXRMREDF",79,0)
 I TYPE="CF" S DR=DR_";26"
"RTN","PXRMREDF",80,0)
 ;Found/not found text
"RTN","PXRMREDF",81,0)
 S DR=DR_";4;5"
"RTN","PXRMREDF",82,0)
 ;
"RTN","PXRMREDF",83,0)
 I TYPE="RT" D
"RTN","PXRMREDF",84,0)
 . I TERMTYPE["D" S DR=DR_";16;27",STATUS=1
"RTN","PXRMREDF",85,0)
 . I TERMTYPE["O" S DR=DR_";27",STATUS=1
"RTN","PXRMREDF",86,0)
 . I TERMTYPE["R" S STATUS=1
"RTN","PXRMREDF",87,0)
 . I TERMTYPE["T" S STATUS=1
"RTN","PXRMREDF",88,0)
 .I TERMTYPE[2 D
"RTN","PXRMREDF",89,0)
 .. N MSG
"RTN","PXRMREDF",90,0)
 .. S MSG(1)="Cannot set a status since the term contains multiple types of findings"
"RTN","PXRMREDF",91,0)
 .. S MSG(2)="Edit the status field at the term level for each finding" H 2
"RTN","PXRMREDF",92,0)
 .. D EN^DDIOL(.MSG)
"RTN","PXRMREDF",93,0)
 ;Edit finding record
"RTN","PXRMREDF",94,0)
 D ^DIE
"RTN","PXRMREDF",95,0)
 S $P(^PXD(811.9,IEN,20,0),U,3)=0
"RTN","PXRMREDF",96,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMREDF",97,0)
 ;Check if deleted
"RTN","PXRMREDF",98,0)
 I '$D(DA) Q
"RTN","PXRMREDF",99,0)
 I STATUS=1 D STATUS^PXRMSTA1(.DA,"D")
"RTN","PXRMREDF",100,0)
 ;
"RTN","PXRMREDF",101,0)
 S ETYPE=$P(^PXD(811.9,IEN,20,SDA(1),0),U,1)
"RTN","PXRMREDF",102,0)
 ;Option to edit term findings
"RTN","PXRMREDF",103,0)
 I $P(ETYPE,";",2)="PXRMD(811.5," D
"RTN","PXRMREDF",104,0)
 . S TIEN=$P(ETYPE,";",1)
"RTN","PXRMREDF",105,0)
 . D TMAP(IEN,TIEN)
"RTN","PXRMREDF",106,0)
 Q
"RTN","PXRMREDF",107,0)
 ;
"RTN","PXRMREDF",108,0)
 ;Edit individual function finding entry
"RTN","PXRMREDF",109,0)
 ;-----------------------------
"RTN","PXRMREDF",110,0)
FFEDIT(IEN) ;
"RTN","PXRMREDF",111,0)
 N DA,DIC,DIE,DR,Y
"RTN","PXRMREDF",112,0)
 S DA(1)=IEN
"RTN","PXRMREDF",113,0)
 S DIC="^PXD(811.9,"_IEN_",25,"
"RTN","PXRMREDF",114,0)
 S DIC(0)="QEAL"
"RTN","PXRMREDF",115,0)
 S DIC("A")="Select FUNCTION FINDING: "
"RTN","PXRMREDF",116,0)
 D ^DIC
"RTN","PXRMREDF",117,0)
 I Y=-1 S DTOUT=1 Q
"RTN","PXRMREDF",118,0)
 S DIE=DIC K DIC
"RTN","PXRMREDF",119,0)
 S DA=+Y
"RTN","PXRMREDF",120,0)
 ;Finding record fields
"RTN","PXRMREDF",121,0)
 S DR=".01;3"
"RTN","PXRMREDF",122,0)
 ;Edit finding record
"RTN","PXRMREDF",123,0)
 D ^DIE
"RTN","PXRMREDF",124,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMREDF",125,0)
 I '$D(DA) Q
"RTN","PXRMREDF",126,0)
 ;If the function string is null don't do the rest of the fields.
"RTN","PXRMREDF",127,0)
 I $G(^PXD(811.9,IEN,25,DA,3))="" Q
"RTN","PXRMREDF",128,0)
 S DR="1;2;11;12;15;I X=""0Y"" S Y=16;13;14;16"
"RTN","PXRMREDF",129,0)
 D ^DIE
"RTN","PXRMREDF",130,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMREDF",131,0)
 I '$D(DA) Q
"RTN","PXRMREDF",132,0)
 ;Check if deleted
"RTN","PXRMREDF",133,0)
 Q
"RTN","PXRMREDF",134,0)
 ;
"RTN","PXRMREDF",135,0)
 ;Edit Reminder Function Findings
"RTN","PXRMREDF",136,0)
 ;----------------------
"RTN","PXRMREDF",137,0)
FFIND ;
"RTN","PXRMREDF",138,0)
 N DTOUT,DUOUT
"RTN","PXRMREDF",139,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDF",140,0)
 .D FFEDIT(DA) I $D(DUOUT)!$D(DTOUT) Q
"RTN","PXRMREDF",141,0)
 K DUOUT,DTOUT
"RTN","PXRMREDF",142,0)
 Q
"RTN","PXRMREDF",143,0)
 ;
"RTN","PXRMREDF",144,0)
 ;Edit Reminder Findings
"RTN","PXRMREDF",145,0)
 ;----------------------
"RTN","PXRMREDF",146,0)
FIND(LIST) ;
"RTN","PXRMREDF",147,0)
 N DTOUT,DUOUT,NODE,SDA
"RTN","PXRMREDF",148,0)
 D SET ; Check if node defined
"RTN","PXRMREDF",149,0)
 S NODE="^PXD(811.9)"
"RTN","PXRMREDF",150,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDF",151,0)
 .;Display list of existing reminder findings
"RTN","PXRMREDF",152,0)
 .W !!,"Reminder Definition Findings"
"RTN","PXRMREDF",153,0)
 .D DSPALL("D",NODE,DA,.LIST)
"RTN","PXRMREDF",154,0)
 .;Edit findings
"RTN","PXRMREDF",155,0)
 .D FEDIT(DA) I $D(DUOUT)!$D(DTOUT) D LIST^PXRMREDT(NODE,DA,.LIST) Q
"RTN","PXRMREDF",156,0)
 .;Update list with finding changes
"RTN","PXRMREDF",157,0)
 .D LIST^PXRMREDT(NODE,DA,.LIST)
"RTN","PXRMREDF",158,0)
 Q
"RTN","PXRMREDF",159,0)
 ;
"RTN","PXRMREDF",160,0)
 ;General help text routine
"RTN","PXRMREDF",161,0)
 ;-------------------------
"RTN","PXRMREDF",162,0)
HELP(CALL) ;
"RTN","PXRMREDF",163,0)
 N HTEXT
"RTN","PXRMREDF",164,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMREDF",165,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMREDF",166,0)
 ;
"RTN","PXRMREDF",167,0)
 I CALL=1 D
"RTN","PXRMREDF",168,0)
 .S HTEXT(1)="Select the type of finding you wish to change or add."
"RTN","PXRMREDF",169,0)
 .S HTEXT(2)="Type '?' for a list of the available finding types."
"RTN","PXRMREDF",170,0)
 I CALL=2 D
"RTN","PXRMREDF",171,0)
 .S HTEXT(1)="Select section of the reminder you wish to edit or 'All'"
"RTN","PXRMREDF",172,0)
 .S HTEXT(2)="to step through all sections of the reminder definition."
"RTN","PXRMREDF",173,0)
 I CALL=3 D
"RTN","PXRMREDF",174,0)
 .S HTEXT(1)="Select 'Y' to edit the findings mapped to this term"
"RTN","PXRMREDF",175,0)
 .S HTEXT(2)="or 'N' to return to select another reminder finding."
"RTN","PXRMREDF",176,0)
 ;
"RTN","PXRMREDF",177,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREDF",178,0)
 S IC=""
"RTN","PXRMREDF",179,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMREDF",180,0)
 . S X=HTEXT(IC)
"RTN","PXRMREDF",181,0)
 . D ^DIWP
"RTN","PXRMREDF",182,0)
 W !
"RTN","PXRMREDF",183,0)
 S IC=0
"RTN","PXRMREDF",184,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMREDF",185,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMREDF",186,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREDF",187,0)
 W !
"RTN","PXRMREDF",188,0)
 Q
"RTN","PXRMREDF",189,0)
 ;
"RTN","PXRMREDF",190,0)
 ;Display TERM findings
"RTN","PXRMREDF",191,0)
 ;--------------------
"RTN","PXRMREDF",192,0)
TDSP(DA) ;
"RTN","PXRMREDF",193,0)
 N FIRST,SUB,TLST S FIRST=1,SUB="",SUB1=""
"RTN","PXRMREDF",194,0)
 ;Build list of term findings
"RTN","PXRMREDF",195,0)
 D TLST(.TLST,DA)
"RTN","PXRMREDF",196,0)
 ;Display list
"RTN","PXRMREDF",197,0)
 F  S SUB=$O(TLST(SUB)) Q:SUB=""  D
"RTN","PXRMREDF",198,0)
 .S SUB1=0
"RTN","PXRMREDF",199,0)
 .F  S SUB1=$O(TLST(SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMREDF",200,0)
 ..I FIRST S FIRST=0 W !!,"Reminder Term Findings:",!!
"RTN","PXRMREDF",201,0)
 ..W SUB
"RTN","PXRMREDF",202,0)
 ..W ?8,SUB1,!
"RTN","PXRMREDF",203,0)
 I FIRST W !!,"Term has no mapped findings",!!
"RTN","PXRMREDF",204,0)
 Q
"RTN","PXRMREDF",205,0)
 ;
"RTN","PXRMREDF",206,0)
 ;List Reminders using this term
"RTN","PXRMREDF",207,0)
 ;------------------------------
"RTN","PXRMREDF",208,0)
TERMS(TIEN,RIEN) ;
"RTN","PXRMREDF",209,0)
 ;RIEN will be the reminder ien if called from reminder edit
"RTN","PXRMREDF",210,0)
 ;or zero if called from term edit
"RTN","PXRMREDF",211,0)
 N ARRAY,FIND,IEN,SUB,TCNT,RNAME
"RTN","PXRMREDF",212,0)
 ;Scan all reminders in file #811.9
"RTN","PXRMREDF",213,0)
 S IEN=0,FIND="PXRMD(811.5,",TCNT=0
"RTN","PXRMREDF",214,0)
 F  S IEN=$O(^PXD(811.9,IEN)) Q:'IEN  D
"RTN","PXRMREDF",215,0)
 .;Exclude current reminder called in reminder edit
"RTN","PXRMREDF",216,0)
 .I RIEN,IEN=RIEN Q
"RTN","PXRMREDF",217,0)
 .;Check the term findings
"RTN","PXRMREDF",218,0)
 .I '$D(^PXD(811.9,IEN,20,"E",FIND,TIEN)) Q
"RTN","PXRMREDF",219,0)
 .;Add to reminder array
"RTN","PXRMREDF",220,0)
 .S RNAME=$P($G(^PXD(811.9,IEN,0)),U)
"RTN","PXRMREDF",221,0)
 .I RNAME="" S RNAME=IEN
"RTN","PXRMREDF",222,0)
 .I '$D(ARRAY(RNAME)) S TCNT=TCNT+1
"RTN","PXRMREDF",223,0)
 .S ARRAY(RNAME)=""
"RTN","PXRMREDF",224,0)
 ;
"RTN","PXRMREDF",225,0)
 ;Display list of reminders using the term
"RTN","PXRMREDF",226,0)
 I TCNT D
"RTN","PXRMREDF",227,0)
 .N TXT
"RTN","PXRMREDF",228,0)
 .S TXT="This Reminder Term is" S:RIEN TXT=TXT_" also"
"RTN","PXRMREDF",229,0)
 .S TXT=TXT_" used by the following Reminder Definition"
"RTN","PXRMREDF",230,0)
 .I TCNT>1 S TXT=TXT_"s"
"RTN","PXRMREDF",231,0)
 .W !!,TXT_":"
"RTN","PXRMREDF",232,0)
 .S RNAME="" F  S RNAME=$O(ARRAY(RNAME)) Q:RNAME=""  W !," ",RNAME
"RTN","PXRMREDF",233,0)
 Q
"RTN","PXRMREDF",234,0)
 ;
"RTN","PXRMREDF",235,0)
 ;------------------------------
"RTN","PXRMREDF",236,0)
 ;Check term for finding item to edit status item
"RTN","PXRMREDF",237,0)
TERMTYPE(TIEN) ;
"RTN","PXRMREDF",238,0)
 N DRUG,FOUND,HF,ORD,OTHER,RAD,RESULT,TAX,TYPE,VF
"RTN","PXRMREDF",239,0)
 S (DRUG,FOUND,HF,ORD,OTHER,RAD,RESULT,TAX,VF)=0
"RTN","PXRMREDF",240,0)
 S TYPE="" F  S TYPE=$O(^PXRMD(811.5,TIEN,20,"B",TYPE)) Q:TYPE=""  D
"RTN","PXRMREDF",241,0)
 . I TYPE["AUTTEDT(" S (OTHER,VF)=1 Q
"RTN","PXRMREDF",242,0)
 . I TYPE["AUTTHF(" S (HF,OTHER,VF)=1 Q
"RTN","PXRMREDF",243,0)
 . I TYPE["AUTTIMM(" S (OTHER,VF)=1 Q
"RTN","PXRMREDF",244,0)
 . I TYPE["AUTTSK(" S (OTHER,VF)=1 Q
"RTN","PXRMREDF",245,0)
 . I TYPE["ORD" S (ORD,FOUND)=1 Q
"RTN","PXRMREDF",246,0)
 . I TYPE["PS" S (DRUG,FOUND)=1 Q
"RTN","PXRMREDF",247,0)
 . I TYPE["PXD(811.2" S (FOUND,TAX,VF)=1 Q
"RTN","PXRMREDF",248,0)
 . I TYPE["RAMIS" S (FOUND,RAD)=1 Q
"RTN","PXRMREDF",249,0)
 . S OTHER=1
"RTN","PXRMREDF",250,0)
 I RAD=1,ORD=0,TAX=0,DRUG=0,OTHER=0 S RESULT="R"
"RTN","PXRMREDF",251,0)
 I RAD=0,ORD=1,TAX=0,DRUG=0,OTHER=0 S RESULT="O"
"RTN","PXRMREDF",252,0)
 I RAD=0,ORD=0,TAX=1,DRUG=0,OTHER=0 S RESULT="T"
"RTN","PXRMREDF",253,0)
 I RAD=0,ORD=0,TAX=0,DRUG=1,OTHER=0 S RESULT="D"
"RTN","PXRMREDF",254,0)
 I OTHER=1 S RESULT=1 I FOUND=1 S RESULT=2
"RTN","PXRMREDF",255,0)
 I RESULT="T" S RESULT=$$TAXTYPE^PXRMSTA1(TIEN,"")
"RTN","PXRMREDF",256,0)
 I HF=1 S RESULT="H"_RESULT
"RTN","PXRMREDF",257,0)
 I VF=1 S RESULT=RESULT_U_"VF"
"RTN","PXRMREDF",258,0)
 Q RESULT
"RTN","PXRMREDF",259,0)
 ;
"RTN","PXRMREDF",260,0)
 ;Build list of mapped findings for term
"RTN","PXRMREDF",261,0)
 ;--------------------------------------
"RTN","PXRMREDF",262,0)
TLST(ARRAY,DA) ;
"RTN","PXRMREDF",263,0)
 N TYPE,DATA,GLOB,IEN,NAME,NODE,SUB
"RTN","PXRMREDF",264,0)
 ;Clear passed arrays
"RTN","PXRMREDF",265,0)
 K ARRAY
"RTN","PXRMREDF",266,0)
 ;Build cross reference global to file number
"RTN","PXRMREDF",267,0)
 ;Get each finding
"RTN","PXRMREDF",268,0)
 S SUB=0 F  S SUB=$O(^PXRMD(811.5,DA,20,SUB)) Q:'SUB  D
"RTN","PXRMREDF",269,0)
 .S DATA=$G(^PXRMD(811.5,DA,20,SUB,0)) I DATA="" Q
"RTN","PXRMREDF",270,0)
 .;Determine global and global ien
"RTN","PXRMREDF",271,0)
 .S NODE=$P(DATA,U),GLOB=$P(NODE,";",2),IEN=$P(NODE,";")
"RTN","PXRMREDF",272,0)
 .;Ignore null entries
"RTN","PXRMREDF",273,0)
 .I (GLOB="")!(IEN="") Q
"RTN","PXRMREDF",274,0)
 .;Work out the file type
"RTN","PXRMREDF",275,0)
 .S TYPE=$G(DEF1(GLOB)) Q:TYPE=""
"RTN","PXRMREDF",276,0)
 .S NAME=$P($G(@(U_GLOB_IEN_",0)")),U)
"RTN","PXRMREDF",277,0)
 .S ARRAY(TYPE,NAME)=""
"RTN","PXRMREDF",278,0)
 Q
"RTN","PXRMREDF",279,0)
 ;
"RTN","PXRMREDF",280,0)
 ;Map Term findings
"RTN","PXRMREDF",281,0)
 ;-----------------
"RTN","PXRMREDF",282,0)
TMAP(RIEN,TIEN) ;
"RTN","PXRMREDF",283,0)
 N TOPT,TNAM
"RTN","PXRMREDF",284,0)
 ;Display any other reminders using this term
"RTN","PXRMREDF",285,0)
 D TERMS(TIEN,RIEN)
"RTN","PXRMREDF",286,0)
 ;Term name
"RTN","PXRMREDF",287,0)
 S TNAM=$P($G(^PXRMD(811.5,TIEN,0)),U)
"RTN","PXRMREDF",288,0)
 ;Give option to edit mapped findings (Y/N)
"RTN","PXRMREDF",289,0)
 D TMASK(.TOPT,TNAM) Q:$D(DUOUT)!($D(DTOUT))
"RTN","PXRMREDF",290,0)
 ;Edit term findings
"RTN","PXRMREDF",291,0)
 I TOPT="Y" D TRMED(TIEN)
"RTN","PXRMREDF",292,0)
 Q
"RTN","PXRMREDF",293,0)
 ;
"RTN","PXRMREDF",294,0)
 ;Option to edit term findings
"RTN","PXRMREDF",295,0)
 ;----------------------------
"RTN","PXRMREDF",296,0)
TMASK(YESNO,TNAM) ;
"RTN","PXRMREDF",297,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMREDF",298,0)
 S DIR(0)="YA0"
"RTN","PXRMREDF",299,0)
 S DIR("A")="Do you want to edit mapped findings for "_TNAM_": "
"RTN","PXRMREDF",300,0)
 S (DIR("B"),YESNO)="N"
"RTN","PXRMREDF",301,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMREDF",302,0)
 S DIR("??")=U_"D HELP^PXRMREDF(3)"
"RTN","PXRMREDF",303,0)
 W !
"RTN","PXRMREDF",304,0)
 D ^DIR K DIR
"RTN","PXRMREDF",305,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMREDF",306,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMREDF",307,0)
 S YESNO=$E(Y(0))
"RTN","PXRMREDF",308,0)
 Q
"RTN","PXRMREDF",309,0)
 ;
"RTN","PXRMREDF",310,0)
 ;Term edit
"RTN","PXRMREDF",311,0)
 ;---------
"RTN","PXRMREDF",312,0)
TRMED(DA) ;
"RTN","PXRMREDF",313,0)
 N CS1,CS2,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMREDF",314,0)
 K DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMREDF",315,0)
 ;Display term findings
"RTN","PXRMREDF",316,0)
 D TDSP(DA)
"RTN","PXRMREDF",317,0)
 ;Initialize change history
"RTN","PXRMREDF",318,0)
 S CS1=$$FILE^PXRMEXCS(811.5,DA)
"RTN","PXRMREDF",319,0)
 ;Edit term findings
"RTN","PXRMREDF",320,0)
 S DIC="^PXRMD(811.5,"
"RTN","PXRMREDF",321,0)
 D EDIT^PXRMTMED(DIC,DA)
"RTN","PXRMREDF",322,0)
 ;Update change history
"RTN","PXRMREDF",323,0)
 S CS2=$$FILE^PXRMEXCS(811.5,DA)
"RTN","PXRMREDF",324,0)
 I CS2=0 Q
"RTN","PXRMREDF",325,0)
 I CS2'=CS1 D SEHIST^PXRMUTIL(811.5,DIC,DA)
"RTN","PXRMREDF",326,0)
 Q
"RTN","PXRMREDF",327,0)
 ;
"RTN","PXRMREDT")
0^108^B59440295
"RTN","PXRMREDT",1,0)
PXRMREDT ; SLC/PKR,PJH - Edit PXRM reminder definition. ;02/09/2006
"RTN","PXRMREDT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMREDT",3,0)
 ;
"RTN","PXRMREDT",4,0)
 ;=======================================================
"RTN","PXRMREDT",5,0)
EEDIT ;Entry point for PXRM DEFINITION EDIT option.
"RTN","PXRMREDT",6,0)
 ;Build list of finding file definitions.
"RTN","PXRMREDT",7,0)
 N DEF,DEF1,DEF2
"RTN","PXRMREDT",8,0)
 D DEF^PXRMRUTL("811.902",.DEF,.DEF1,.DEF2)
"RTN","PXRMREDT",9,0)
 ;
"RTN","PXRMREDT",10,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMREDT",11,0)
 S DIC="^PXD(811.9,"
"RTN","PXRMREDT",12,0)
 S DIC(0)="AEMQL"
"RTN","PXRMREDT",13,0)
 S DIC("A")="Select Reminder Definition: "
"RTN","PXRMREDT",14,0)
 S DLAYGO=811.9
"RTN","PXRMREDT",15,0)
GETNAME ;Get the name of the reminder definition to edit.
"RTN","PXRMREDT",16,0)
 ;Set the starting place for additions.
"RTN","PXRMREDT",17,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMREDT",18,0)
 W !
"RTN","PXRMREDT",19,0)
 D ^DIC
"RTN","PXRMREDT",20,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMREDT",21,0)
 I Y=-1 G END
"RTN","PXRMREDT",22,0)
 S DA=$P(Y,U,1)
"RTN","PXRMREDT",23,0)
 D ALL(DIC,DA)
"RTN","PXRMREDT",24,0)
 G GETNAME
"RTN","PXRMREDT",25,0)
END ;
"RTN","PXRMREDT",26,0)
 Q
"RTN","PXRMREDT",27,0)
 ;
"RTN","PXRMREDT",28,0)
 ;=======================================================
"RTN","PXRMREDT",29,0)
 ;Select section of reminder to edit, also called at ALL by PXRMEDIT.
"RTN","PXRMREDT",30,0)
 ;----------------------------------
"RTN","PXRMREDT",31,0)
ALL(DIC,DA) ;
"RTN","PXRMREDT",32,0)
 ;Get list of findings/terms for reminder
"RTN","PXRMREDT",33,0)
 N BLDLOGIC,CS1,CS2,LIST,NODE,OPTION,TYPE
"RTN","PXRMREDT",34,0)
 S BLDLOGIC=0
"RTN","PXRMREDT",35,0)
 ;Save the original checksum.
"RTN","PXRMREDT",36,0)
 S CS1=$$FILE^PXRMEXCS(811.9,DA)
"RTN","PXRMREDT",37,0)
 ;Build finding list
"RTN","PXRMREDT",38,0)
 S NODE="^PXD(811.9)"
"RTN","PXRMREDT",39,0)
 D LIST(NODE,DA,.LIST)
"RTN","PXRMREDT",40,0)
 ;If this is a new reminder enter all fields
"RTN","PXRMREDT",41,0)
 I $P(Y,U,3)=1 D EDIT(DIC,DA) Q 
"RTN","PXRMREDT",42,0)
 ;National reminder allows editing of term findings only 
"RTN","PXRMREDT",43,0)
 I '$$VEDIT^PXRMUTIL(DIC,DA) D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDT",44,0)
 .S TYPE=""
"RTN","PXRMREDT",45,0)
 .F  S TYPE=$O(LIST(TYPE)) Q:TYPE=""  D
"RTN","PXRMREDT",46,0)
 .. I TYPE="RT" Q
"RTN","PXRMREDT",47,0)
 .. K LIST(TYPE)
"RTN","PXRMREDT",48,0)
 .I '$D(LIST) S DUOUT=1 Q
"RTN","PXRMREDT",49,0)
 .S BLDLOGIC=1
"RTN","PXRMREDT",50,0)
 .D TFIND(DA,.LIST)
"RTN","PXRMREDT",51,0)
 .I $D(Y) S DUOUT=1
"RTN","PXRMREDT",52,0)
 ;Otherwise choose fields to edit
"RTN","PXRMREDT",53,0)
 I $$VEDIT^PXRMUTIL(DIC,DA) F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDT",54,0)
 .D OPTION Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDT",55,0)
 .;All details
"RTN","PXRMREDT",56,0)
 .I OPTION="A" D
"RTN","PXRMREDT",57,0)
 .. S BLDLOGIC=1
"RTN","PXRMREDT",58,0)
 .. D EDIT(DIC,DA)
"RTN","PXRMREDT",59,0)
 .;Set up local variables
"RTN","PXRMREDT",60,0)
 .N DIE,DR S DIE=DIC N DIC
"RTN","PXRMREDT",61,0)
 .;Descriptions
"RTN","PXRMREDT",62,0)
 .I OPTION="G" D
"RTN","PXRMREDT",63,0)
 ..D GEN
"RTN","PXRMREDT",64,0)
 .;Baseline Frequency
"RTN","PXRMREDT",65,0)
 .I OPTION="B" D
"RTN","PXRMREDT",66,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",67,0)
 ..D BASE
"RTN","PXRMREDT",68,0)
 .;Findings
"RTN","PXRMREDT",69,0)
 .I OPTION="F"  D
"RTN","PXRMREDT",70,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",71,0)
 ..D FIND(.LIST)
"RTN","PXRMREDT",72,0)
 .;Function findings
"RTN","PXRMREDT",73,0)
 .I OPTION="FF"  D
"RTN","PXRMREDT",74,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",75,0)
 ..D FFIND
"RTN","PXRMREDT",76,0)
 .;Logic
"RTN","PXRMREDT",77,0)
 .I OPTION="L" D
"RTN","PXRMREDT",78,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",79,0)
 ..D LOGIC
"RTN","PXRMREDT",80,0)
 .;Custom date due
"RTN","PXRMREDT",81,0)
 . I OPTION="C" D
"RTN","PXRMREDT",82,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",83,0)
 ..D CDUE
"RTN","PXRMREDT",84,0)
 .;Dialog
"RTN","PXRMREDT",85,0)
 .I OPTION="D" D
"RTN","PXRMREDT",86,0)
 ..D DIALOG
"RTN","PXRMREDT",87,0)
 .;Web addresses
"RTN","PXRMREDT",88,0)
 .I OPTION="W" D
"RTN","PXRMREDT",89,0)
 ..D WEB
"RTN","PXRMREDT",90,0)
 .;If necessary build the internal logic strings.
"RTN","PXRMREDT",91,0)
 .I BLDLOGIC D BLDALL^PXRMLOGX(DA,"","")
"RTN","PXRMREDT",92,0)
 ;See if any changes have been made.
"RTN","PXRMREDT",93,0)
 S CS2=$$FILE^PXRMEXCS(811.9,DA)
"RTN","PXRMREDT",94,0)
 I CS2=0 Q
"RTN","PXRMREDT",95,0)
 ;If the file has been edited, do the edit history.
"RTN","PXRMREDT",96,0)
 I CS2'=CS1 D SEHIST^PXRMUTIL(811.9,DIC,DA)
"RTN","PXRMREDT",97,0)
 Q
"RTN","PXRMREDT",98,0)
 ;
"RTN","PXRMREDT",99,0)
 ;Reminder Edit
"RTN","PXRMREDT",100,0)
 ;-------------
"RTN","PXRMREDT",101,0)
EDIT(ROOT,DA) ;
"RTN","PXRMREDT",102,0)
 N DIC,DIDEL,DIE,DR,RESULT
"RTN","PXRMREDT",103,0)
 S DIE=ROOT,DIDEL=811.9
"RTN","PXRMREDT",104,0)
 ;Edit the fields in the same order they are printed by a reminder
"RTN","PXRMREDT",105,0)
 ;inquiry.
"RTN","PXRMREDT",106,0)
 ;Reminder name
"RTN","PXRMREDT",107,0)
 W !!
"RTN","PXRMREDT",108,0)
 S DR=".01"
"RTN","PXRMREDT",109,0)
 D ^DIE
"RTN","PXRMREDT",110,0)
 ;If DA is undefined then the entry was deleted and we are done.
"RTN","PXRMREDT",111,0)
 I '$D(DA) S DTOUT=1 Q
"RTN","PXRMREDT",112,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMREDT",113,0)
 ;
"RTN","PXRMREDT",114,0)
 ;Other fields
"RTN","PXRMREDT",115,0)
 D GEN Q:$D(Y)
"RTN","PXRMREDT",116,0)
 D BASE Q:$D(Y)
"RTN","PXRMREDT",117,0)
 D FIND(.LIST) Q:$D(Y)
"RTN","PXRMREDT",118,0)
 D FFIND Q:$D(Y)
"RTN","PXRMREDT",119,0)
 D LOGIC Q:$D(Y)
"RTN","PXRMREDT",120,0)
 D DIALOG Q:$D(Y)
"RTN","PXRMREDT",121,0)
 D WEB Q:$D(Y)
"RTN","PXRMREDT",122,0)
 Q
"RTN","PXRMREDT",123,0)
 ;
"RTN","PXRMREDT",124,0)
GEN ;Print name
"RTN","PXRMREDT",125,0)
 W !!
"RTN","PXRMREDT",126,0)
 S DR="1.2"
"RTN","PXRMREDT",127,0)
 D ^DIE
"RTN","PXRMREDT",128,0)
 I $D(Y) Q
"RTN","PXRMREDT",129,0)
 ;
"RTN","PXRMREDT",130,0)
CLASS ;
"RTN","PXRMREDT",131,0)
 ;Class
"RTN","PXRMREDT",132,0)
 W !!
"RTN","PXRMREDT",133,0)
 S DR="100"
"RTN","PXRMREDT",134,0)
 D ^DIE
"RTN","PXRMREDT",135,0)
 I $D(Y) Q
"RTN","PXRMREDT",136,0)
 ;Sponsor
"RTN","PXRMREDT",137,0)
 S DR="101"
"RTN","PXRMREDT",138,0)
 D ^DIE
"RTN","PXRMREDT",139,0)
 I $D(Y) Q
"RTN","PXRMREDT",140,0)
 ;Make sure Class and Sponsor Class are in synch.
"RTN","PXRMREDT",141,0)
 S RESULT=$$VSPONSOR^PXRMINTR(X)
"RTN","PXRMREDT",142,0)
 I RESULT=0 G CLASS
"RTN","PXRMREDT",143,0)
 ;Review date, Usage
"RTN","PXRMREDT",144,0)
 S DR="102;103"
"RTN","PXRMREDT",145,0)
 D ^DIE
"RTN","PXRMREDT",146,0)
 I $D(Y) Q
"RTN","PXRMREDT",147,0)
 ;
"RTN","PXRMREDT",148,0)
 ;Related VA-* reminder
"RTN","PXRMREDT",149,0)
 W !!
"RTN","PXRMREDT",150,0)
 S DR="1.4"
"RTN","PXRMREDT",151,0)
 D ^DIE
"RTN","PXRMREDT",152,0)
 I $D(Y) Q
"RTN","PXRMREDT",153,0)
 ;
"RTN","PXRMREDT",154,0)
 ;Inactive flag
"RTN","PXRMREDT",155,0)
 W !!
"RTN","PXRMREDT",156,0)
 S DR="1.6"
"RTN","PXRMREDT",157,0)
 D ^DIE
"RTN","PXRMREDT",158,0)
 I $D(Y) Q
"RTN","PXRMREDT",159,0)
 ;Ignore on N/A
"RTN","PXRMREDT",160,0)
 S DR=1.8
"RTN","PXRMREDT",161,0)
 D ^DIE
"RTN","PXRMREDT",162,0)
 I $D(Y) Q
"RTN","PXRMREDT",163,0)
 ;
"RTN","PXRMREDT",164,0)
 ;Recision Date
"RTN","PXRMREDT",165,0)
 S DR="69"
"RTN","PXRMREDT",166,0)
 D ^DIE
"RTN","PXRMREDT",167,0)
 I $D(Y) Q
"RTN","PXRMREDT",168,0)
 ;
"RTN","PXRMREDT",169,0)
 ;Reminder description
"RTN","PXRMREDT",170,0)
 W !!
"RTN","PXRMREDT",171,0)
 S DR="2"
"RTN","PXRMREDT",172,0)
 D ^DIE
"RTN","PXRMREDT",173,0)
 I $D(Y) Q
"RTN","PXRMREDT",174,0)
 ;
"RTN","PXRMREDT",175,0)
 ;Technical description
"RTN","PXRMREDT",176,0)
 W !!
"RTN","PXRMREDT",177,0)
 S DR="3"
"RTN","PXRMREDT",178,0)
 D ^DIE
"RTN","PXRMREDT",179,0)
 ;
"RTN","PXRMREDT",180,0)
 ;Priority
"RTN","PXRMREDT",181,0)
 W !!
"RTN","PXRMREDT",182,0)
 S DR="1.91"
"RTN","PXRMREDT",183,0)
 D ^DIE
"RTN","PXRMREDT",184,0)
 Q
"RTN","PXRMREDT",185,0)
 ;
"RTN","PXRMREDT",186,0)
BASE W !!,"Baseline Frequency"
"RTN","PXRMREDT",187,0)
 ;Do in advance time frame
"RTN","PXRMREDT",188,0)
 S DR=1.3
"RTN","PXRMREDT",189,0)
 D ^DIE
"RTN","PXRMREDT",190,0)
 I $D(Y) Q
"RTN","PXRMREDT",191,0)
 ;
"RTN","PXRMREDT",192,0)
 ;Sex specific
"RTN","PXRMREDT",193,0)
 S DR=1.9
"RTN","PXRMREDT",194,0)
 D ^DIE
"RTN","PXRMREDT",195,0)
 I $D(Y) Q
"RTN","PXRMREDT",196,0)
FARS ;
"RTN","PXRMREDT",197,0)
 W !!,"Baseline frequency age range set"
"RTN","PXRMREDT",198,0)
 S DR="7"
"RTN","PXRMREDT",199,0)
 S DR(2,811.97)=".01;1;2;3;4"
"RTN","PXRMREDT",200,0)
 D ^DIE
"RTN","PXRMREDT",201,0)
 I $$OVLAP^PXRMAGE G FARS
"RTN","PXRMREDT",202,0)
 D SNMLA^PXRMFNFT(DA)
"RTN","PXRMREDT",203,0)
 Q
"RTN","PXRMREDT",204,0)
 ;
"RTN","PXRMREDT",205,0)
FIND(LIST) ;Edit findings (multiple)
"RTN","PXRMREDT",206,0)
 D FIND^PXRMREDF(.LIST)
"RTN","PXRMREDT",207,0)
 D SNMLF^PXRMFNFT(DA,20)
"RTN","PXRMREDT",208,0)
 Q
"RTN","PXRMREDT",209,0)
 ;
"RTN","PXRMREDT",210,0)
FFIND W !!,"Function Findings"
"RTN","PXRMREDT",211,0)
 D FFIND^PXRMREDF
"RTN","PXRMREDT",212,0)
 D SNMLF^PXRMFNFT(DA,25)
"RTN","PXRMREDT",213,0)
 Q
"RTN","PXRMREDT",214,0)
 ;
"RTN","PXRMREDT",215,0)
LOGIC W !!,"Patient Cohort and Resolution Logic"
"RTN","PXRMREDT",216,0)
 S DR="30T;60T;61T;70T;71T;34T;65T;66T;75T;76T"
"RTN","PXRMREDT",217,0)
 D ^DIE
"RTN","PXRMREDT",218,0)
 ;Make sure the Patient Cohort Logic at least contains the default.
"RTN","PXRMREDT",219,0)
 I $G(^PXD(811.9,DA,31))="" D
"RTN","PXRMREDT",220,0)
 . S ^PXD(811.9,DA,31)="(SEX)&(AGE)"
"RTN","PXRMREDT",221,0)
 . S ^PXD(811.9,DA,32)="2"_U_"SEX;AGE"
"RTN","PXRMREDT",222,0)
 D SNMLL^PXRMFNFT(DA)
"RTN","PXRMREDT",223,0)
 Q
"RTN","PXRMREDT",224,0)
CDUE W !!,"Custom Date Due"
"RTN","PXRMREDT",225,0)
 S DR=45
"RTN","PXRMREDT",226,0)
 D ^DIE
"RTN","PXRMREDT",227,0)
 Q
"RTN","PXRMREDT",228,0)
 ;
"RTN","PXRMREDT",229,0)
DIALOG W !!,"Reminder Dialog"
"RTN","PXRMREDT",230,0)
 S DR="51"
"RTN","PXRMREDT",231,0)
 D ^DIE
"RTN","PXRMREDT",232,0)
 Q
"RTN","PXRMREDT",233,0)
 ;
"RTN","PXRMREDT",234,0)
WEB W !!,"Web Addresses for Reminder Information"
"RTN","PXRMREDT",235,0)
 S DR="50"
"RTN","PXRMREDT",236,0)
 D ^DIE
"RTN","PXRMREDT",237,0)
 Q
"RTN","PXRMREDT",238,0)
 ;
"RTN","PXRMREDT",239,0)
 ;Get full list of findings
"RTN","PXRMREDT",240,0)
 ;-------------------------
"RTN","PXRMREDT",241,0)
LIST(GBL,DA,ARRAY) ;
"RTN","PXRMREDT",242,0)
 N CNT,DATA,GLOB,IEN,NAME,NODE,SUB,TYPE
"RTN","PXRMREDT",243,0)
 ;Clear passed arrays
"RTN","PXRMREDT",244,0)
 K ARRAY
"RTN","PXRMREDT",245,0)
 S CNT=0
"RTN","PXRMREDT",246,0)
 ;Build cross reference global to file number
"RTN","PXRMREDT",247,0)
 ;Get each finding
"RTN","PXRMREDT",248,0)
 S SUB=0 F  S SUB=$O(@GBL@(DA,20,SUB)) Q:'SUB  D
"RTN","PXRMREDT",249,0)
 .S DATA=$G(@GBL@(DA,20,SUB,0)) I DATA="" Q
"RTN","PXRMREDT",250,0)
 .;Determine global and global ien
"RTN","PXRMREDT",251,0)
 .S NODE=$P(DATA,U),GLOB=$P(NODE,";",2),IEN=$P(NODE,";")
"RTN","PXRMREDT",252,0)
 .;Ignore null entries
"RTN","PXRMREDT",253,0)
 .I (GLOB="")!(IEN="") Q
"RTN","PXRMREDT",254,0)
 .;Work out the file type
"RTN","PXRMREDT",255,0)
 .S TYPE=$G(DEF1(GLOB)) Q:TYPE=""
"RTN","PXRMREDT",256,0)
 .S CNT=CNT+1
"RTN","PXRMREDT",257,0)
 .I $P($G(@(U_GLOB_IEN_",0)")),U)="" D
"RTN","PXRMREDT",258,0)
 ..W !,"**WARNING** Finding #"_SUB_" does not exist, select finding `"_SUB_" to edit it." Q
"RTN","PXRMREDT",259,0)
 .E  S NAME=$P($G(@(U_GLOB_IEN_",0)")),U) S ARRAY(TYPE,NAME,SUB)=IEN
"RTN","PXRMREDT",260,0)
 .;E  S NAME=$P($G(@(U_GLOB_IEN_",0)")),U) S ARRAY(TYPE,NAME,SUB)=$G(SUB)
"RTN","PXRMREDT",261,0)
 Q
"RTN","PXRMREDT",262,0)
 ;
"RTN","PXRMREDT",263,0)
 ;Choose which part of Reminder to edit
"RTN","PXRMREDT",264,0)
 ;-------------------------------------
"RTN","PXRMREDT",265,0)
OPTION N DIR,X,Y
"RTN","PXRMREDT",266,0)
 ;Display warning message if un-mapped terms exist
"RTN","PXRMREDT",267,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMREDT",268,0)
 S DIR(0)="SO"_U
"RTN","PXRMREDT",269,0)
 S DIR(0)=DIR(0)_"A:All reminder details;"
"RTN","PXRMREDT",270,0)
 S DIR(0)=DIR(0)_"G:General;"
"RTN","PXRMREDT",271,0)
 S DIR(0)=DIR(0)_"B:Baseline Frequency;"
"RTN","PXRMREDT",272,0)
 S DIR(0)=DIR(0)_"F:Findings;"
"RTN","PXRMREDT",273,0)
 S DIR(0)=DIR(0)_"FF:Function Findings;"
"RTN","PXRMREDT",274,0)
 S DIR(0)=DIR(0)_"L:Logic;"
"RTN","PXRMREDT",275,0)
 S DIR(0)=DIR(0)_"C:Custom date due;"
"RTN","PXRMREDT",276,0)
 S DIR(0)=DIR(0)_"D:Reminder Dialog;"
"RTN","PXRMREDT",277,0)
 S DIR(0)=DIR(0)_"W:Web Addresses;"
"RTN","PXRMREDT",278,0)
 S DIR("A")="Select section to edit"
"RTN","PXRMREDT",279,0)
 S DIR("?")="Select which section of the reminder you wish to edit."
"RTN","PXRMREDT",280,0)
 S DIR("??")="^D HELP^PXRMREDF(2)"
"RTN","PXRMREDT",281,0)
 D ^DIR K DIR
"RTN","PXRMREDT",282,0)
 I Y="" S DUOUT=1 Q
"RTN","PXRMREDT",283,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMREDT",284,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMREDT",285,0)
 S OPTION=Y
"RTN","PXRMREDT",286,0)
 Q
"RTN","PXRMREDT",287,0)
 ;
"RTN","PXRMREDT",288,0)
 ;-------------------------------------
"RTN","PXRMREDT",289,0)
TFIND(DA,LIST) ;Allow edit of term findings for national reminders.
"RTN","PXRMREDT",290,0)
 N DIR,IENLIST,IND,NAME,NAMELIST,SUB,X,Y
"RTN","PXRMREDT",291,0)
 S IND=0,NAME=""
"RTN","PXRMREDT",292,0)
 F  S NAME=$O(LIST("RT",NAME)) Q:NAME=""  D
"RTN","PXRMREDT",293,0)
 . S IND=IND+1
"RTN","PXRMREDT",294,0)
 . S NAMELIST(IND)=$$RJ^XLFSTR(IND,3)_" "_NAME
"RTN","PXRMREDT",295,0)
 . S SUB=$O(LIST("RT",NAME,""))
"RTN","PXRMREDT",296,0)
 . S IENLIST(IND)=LIST("RT",NAME,SUB)
"RTN","PXRMREDT",297,0)
 M DIR("A")=NAMELIST
"RTN","PXRMREDT",298,0)
 S DIR("A")="Enter your list"
"RTN","PXRMREDT",299,0)
 S DIR(0)="LO^1:"_IND
"RTN","PXRMREDT",300,0)
 W !!,"Select term(s) for finding edit:"
"RTN","PXRMREDT",301,0)
 D ^DIR
"RTN","PXRMREDT",302,0)
 I $D(DIROUT)!$D(DIRUT) S LIST="" Q
"RTN","PXRMREDT",303,0)
 I $D(DUOUT)!$D(DTOUT) S LIST="" Q
"RTN","PXRMREDT",304,0)
 S LIST=Y
"RTN","PXRMREDT",305,0)
 F IND=1:1:$L(Y,",")-1 D
"RTN","PXRMREDT",306,0)
 . S NAME=$P(NAMELIST(IND),IND,2)
"RTN","PXRMREDT",307,0)
 . W !!,"Reminder Term:",NAME
"RTN","PXRMREDT",308,0)
 . D TMAP^PXRMREDF(DA,IENLIST(IND))
"RTN","PXRMREDT",309,0)
 Q
"RTN","PXRMREDT",310,0)
 ;
"RTN","PXRMREV")
0^98^B10699713
"RTN","PXRMREV",1,0)
PXRMREV ; SLC/PJH,PKR - Review Date routines. ;06/17/2005
"RTN","PXRMREV",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMREV",3,0)
 ;
"RTN","PXRMREV",4,0)
 ;Select the review date
"RTN","PXRMREV",5,0)
 ;----------------------
"RTN","PXRMREV",6,0)
DATE() ;
"RTN","PXRMREV",7,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMREV",8,0)
 S DIR(0)="DA^"_DT_"::EFTX"
"RTN","PXRMREV",9,0)
 S DIR("A")="Enter Review Cutoff Date: "
"RTN","PXRMREV",10,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMREV",11,0)
 S DIR("?")="This must be today or a future date. For detailed help type ??"
"RTN","PXRMREV",12,0)
 S DIR("??")=U_"D HELP^PXRMREV(2)"
"RTN","PXRMREV",13,0)
 W !
"RTN","PXRMREV",14,0)
 D ^DIR
"RTN","PXRMREV",15,0)
 I $D(DIROUT)!$D(DIRUT) Q ""
"RTN","PXRMREV",16,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMREV",17,0)
 Q Y
"RTN","PXRMREV",18,0)
 ;
"RTN","PXRMREV",19,0)
 ;Select file for review
"RTN","PXRMREV",20,0)
 ;----------------------
"RTN","PXRMREV",21,0)
FILE() N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMREV",22,0)
 S DIR(0)="SO"_U_"C:Computed Finding;"
"RTN","PXRMREV",23,0)
 S DIR(0)=DIR(0)_"D:Reminder Dialog;"
"RTN","PXRMREV",24,0)
 S DIR(0)=DIR(0)_"L:Reminder Location List;"
"RTN","PXRMREV",25,0)
 S DIR(0)=DIR(0)_"R:Reminder Definition;"
"RTN","PXRMREV",26,0)
 S DIR(0)=DIR(0)_"S:Reminder Sponsor;"
"RTN","PXRMREV",27,0)
 S DIR(0)=DIR(0)_"T:Reminder Taxonomy;"
"RTN","PXRMREV",28,0)
 S DIR("A")="Select File to Review"
"RTN","PXRMREV",29,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMREV",30,0)
 S DIR("??")=U_"D HELP^PXRMREV(1)"
"RTN","PXRMREV",31,0)
 D ^DIR
"RTN","PXRMREV",32,0)
 I $D(DIROUT)!$D(DIROUT) Q ""
"RTN","PXRMREV",33,0)
 I $D(DTOUT)!$D(DUOUT) Q ""
"RTN","PXRMREV",34,0)
 Q Y
"RTN","PXRMREV",35,0)
 ;
"RTN","PXRMREV",36,0)
 ;General help text routine
"RTN","PXRMREV",37,0)
 ;-------------------------
"RTN","PXRMREV",38,0)
HELP(CALL) ;
"RTN","PXRMREV",39,0)
 N DIWF,DIWL,DIWR,HTEXT,IC
"RTN","PXRMREV",40,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMREV",41,0)
 I CALL=1 D
"RTN","PXRMREV",42,0)
 .S HTEXT(1)="Select the file for which a Review Date report is required."
"RTN","PXRMREV",43,0)
 .S HTEXT(2)=" "
"RTN","PXRMREV",44,0)
 .S HTEXT(3)="The report lists in review date order all file entries which"
"RTN","PXRMREV",45,0)
 .S HTEXT(4)="have a review date prior to the cuttoff date."
"RTN","PXRMREV",46,0)
 I CALL=2 D
"RTN","PXRMREV",47,0)
 .S HTEXT(1)="Enter a future date or today. All review dates in the file"
"RTN","PXRMREV",48,0)
 .S HTEXT(2)="selected which are prior or equal to this date will be reported."
"RTN","PXRMREV",49,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREV",50,0)
 S IC=""
"RTN","PXRMREV",51,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMREV",52,0)
 . S X=HTEXT(IC)
"RTN","PXRMREV",53,0)
 . D ^DIWP
"RTN","PXRMREV",54,0)
 W !
"RTN","PXRMREV",55,0)
 S IC=0
"RTN","PXRMREV",56,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMREV",57,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMREV",58,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREV",59,0)
 W !
"RTN","PXRMREV",60,0)
 Q
"RTN","PXRMREV",61,0)
 ;
"RTN","PXRMREV",62,0)
 ;Print review date reports
"RTN","PXRMREV",63,0)
 ;-------------------------
"RTN","PXRMREV",64,0)
START N DATE,DIROUT,DONE,DTOUT,DUOUT,FTYPE
"RTN","PXRMREV",65,0)
 S DONE=0
"RTN","PXRMREV",66,0)
 F  Q:DONE  D
"RTN","PXRMREV",67,0)
 . S FTYPE=$$FILE
"RTN","PXRMREV",68,0)
 . I FTYPE="" S DONE=1 Q
"RTN","PXRMREV",69,0)
 . S DATE=$$DATE
"RTN","PXRMREV",70,0)
 . I DATE="" S DONE=1 Q
"RTN","PXRMREV",71,0)
 .;
"RTN","PXRMREV",72,0)
 . N BY,DHD,DIC,FLDS,FR,L,NOW,TO
"RTN","PXRMREV",73,0)
 . S FR="01/01/2000"
"RTN","PXRMREV",74,0)
 . S TO=DATE
"RTN","PXRMREV",75,0)
 . S BY="REVIEW DATE"
"RTN","PXRMREV",76,0)
 . S FLDS=".01,REVIEW DATE;C60"
"RTN","PXRMREV",77,0)
 . S L=0
"RTN","PXRMREV",78,0)
 .;
"RTN","PXRMREV",79,0)
 . I FTYPE="C" S DIC="^PXRMD(811.4,",DHD="CF'S TO REVIEW"
"RTN","PXRMREV",80,0)
 . I FTYPE="D" S DIC="^PXRMD(801.41,",DHD="DIALOGS TO REVIEW"
"RTN","PXRMREV",81,0)
 . I FTYPE="L" S DIC="^PXRMD(810.9,",DHD="LOCATION LISTS TO REVIEW"
"RTN","PXRMREV",82,0)
 . I FTYPE="R" S DIC="^PXD(811.9,",DHD="REMINDERS TO REVIEW"
"RTN","PXRMREV",83,0)
 . I FTYPE="S" S DIC="^PXRMD(811.6,",DHD="SPONSORS TO REVIEW"
"RTN","PXRMREV",84,0)
 . I FTYPE="T" S DIC="^PXD(811.2,",DHD="TAXONOMIES TO REVIEW"
"RTN","PXRMREV",85,0)
 .;
"RTN","PXRMREV",86,0)
 . S DHD=DHD_" (up to "_$$FMTE^XLFDT(DATE)_")"
"RTN","PXRMREV",87,0)
 .;Print
"RTN","PXRMREV",88,0)
 . D EN1^DIP
"RTN","PXRMREV",89,0)
 Q
"RTN","PXRMREV",90,0)
 ;
"RTN","PXRMRST")
0^119^B3083518
"RTN","PXRMRST",1,0)
PXRMRST ; SLC/PKR - Rule Set test routines. ;02/16/2006
"RTN","PXRMRST",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMRST",3,0)
 ;
"RTN","PXRMRST",4,0)
 ;===========================================================
"RTN","PXRMRST",5,0)
EXIT ; -- exit code
"RTN","PXRMRST",6,0)
 K ^TMP("PXRMRST",$J)
"RTN","PXRMRST",7,0)
 D CLEAN^VALM10
"RTN","PXRMRST",8,0)
 D FULL^VALM1
"RTN","PXRMRST",9,0)
 S VALMBCK="R"
"RTN","PXRMRST",10,0)
 Q
"RTN","PXRMRST",11,0)
 ;
"RTN","PXRMRST",12,0)
 ;===========================================================
"RTN","PXRMRST",13,0)
HDR ; -- header code
"RTN","PXRMRST",14,0)
 S VALMHDR(1)="Rule Set Test"
"RTN","PXRMRST",15,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMRST",16,0)
 Q
"RTN","PXRMRST",17,0)
 ;
"RTN","PXRMRST",18,0)
 ;===========================================================
"RTN","PXRMRST",19,0)
HELP ; -- help code
"RTN","PXRMRST",20,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","PXRMRST",21,0)
 Q
"RTN","PXRMRST",22,0)
 ;
"RTN","PXRMRST",23,0)
 ;===========================================================
"RTN","PXRMRST",24,0)
RSTEST(RULESET) ;Test a rule set and show the user the results.
"RTN","PXRMRST",25,0)
 N BEG,END,IND,NL,OUTPUT,VALMCNT
"RTN","PXRMRST",26,0)
 D DATES^PXRMEUT(.BEG,.END,"Patient List") Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMRST",27,0)
 D DOCDATES^PXRMEUT1(RULESET,BEG,END,.NL,.OUTPUT)
"RTN","PXRMRST",28,0)
 K ^TMP("PXRMRST",$J)
"RTN","PXRMRST",29,0)
 S ^TMP("PXRMRST",$J,1,0)="List Build Beginning Date: "_$$FMTE^XLFDT(BEG,"5Z")
"RTN","PXRMRST",30,0)
 S ^TMP("PXRMRST",$J,2,0)="List Build Ending Date: "_$$FMTE^XLFDT(END,"5Z")
"RTN","PXRMRST",31,0)
 F IND=1:1:NL S ^TMP("PXRMRST",$J,IND+2,0)=OUTPUT(IND)
"RTN","PXRMRST",32,0)
 S VALMCNT=NL+2
"RTN","PXRMRST",33,0)
 D EN^VALM("PXRM RULE SET TEST")
"RTN","PXRMRST",34,0)
 Q
"RTN","PXRMRST",35,0)
 ;
"RTN","PXRMRST",36,0)
 ;===========================================================
"RTN","PXRMRST",37,0)
RSTESTS ;Select a rule set for testing.
"RTN","PXRMRST",38,0)
 N IND,RULESET,VALMY
"RTN","PXRMRST",39,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMRST",40,0)
 ;If there is no list quit.
"RTN","PXRMRST",41,0)
 I '$D(VALMY) Q
"RTN","PXRMRST",42,0)
 S IND="",PXRMDONE=0
"RTN","PXRMRST",43,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMRST",44,0)
 .;Get the rule set ien.
"RTN","PXRMRST",45,0)
 . S RULESET=^TMP("PXRMLRM",$J,"IDX",IND,IND)
"RTN","PXRMRST",46,0)
 . D RSTEST^PXRMRST(RULESET)
"RTN","PXRMRST",47,0)
 S VALMBCK="R"
"RTN","PXRMRST",48,0)
 Q
"RTN","PXRMRST",49,0)
 ;
"RTN","PXRMRUL1")
0^99^B12674426
"RTN","PXRMRUL1",1,0)
PXRMRUL1 ; SLC/AGP,PKR - Patient list routines. ; 08/11/2006
"RTN","PXRMRUL1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMRUL1",3,0)
 ; 
"RTN","PXRMRUL1",4,0)
DATECHK(DATE) ;
"RTN","PXRMRUL1",5,0)
 I DATE=0 Q 1
"RTN","PXRMRUL1",6,0)
 S DATE=$$STRREP^PXRMUTIL(DATE,"BDT","T")
"RTN","PXRMRUL1",7,0)
 Q $$VDT^PXRMINTR(DATE)
"RTN","PXRMRUL1",8,0)
 ;
"RTN","PXRMRUL1",9,0)
INSERT(FROUT,DFN,TNAME,TFIEV,RSTOP) ;Save patient data.
"RTN","PXRMRUL1",10,0)
 I TFIEV(1)=0 Q
"RTN","PXRMRUL1",11,0)
 N DATA,DONE,IND,LEN,REF,ROOT,START,SUB,TEMP
"RTN","PXRMRUL1",12,0)
 S REF="TFIEV(1,""CSUB"")"
"RTN","PXRMRUL1",13,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMRUL1",14,0)
 ;Build the root so we can tell when we are done.
"RTN","PXRMRUL1",15,0)
 S TEMP=$NA(@REF)
"RTN","PXRMRUL1",16,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMRUL1",17,0)
 S REF=$Q(@REF)
"RTN","PXRMRUL1",18,0)
 I REF'[ROOT Q
"RTN","PXRMRUL1",19,0)
 S DONE=0
"RTN","PXRMRUL1",20,0)
 F  Q:(REF="")!(DONE)  D
"RTN","PXRMRUL1",21,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMRUL1",22,0)
 . S LEN=$L(REF)-1
"RTN","PXRMRUL1",23,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMRUL1",24,0)
 . S DATA(TNAME_IND)=@REF
"RTN","PXRMRUL1",25,0)
 . S REF=$Q(@REF)
"RTN","PXRMRUL1",26,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMRUL1",27,0)
 I $D(DATA) M ^TMP($J,FROUT,DFN,"DATA")=DATA
"RTN","PXRMRUL1",28,0)
 Q
"RTN","PXRMRUL1",29,0)
 ;
"RTN","PXRMRUL1",30,0)
INST(DFN) ;Get the PCMM Institution.
"RTN","PXRMRUL1",31,0)
 N DATE,INST
"RTN","PXRMRUL1",32,0)
 ;Check PCMM
"RTN","PXRMRUL1",33,0)
 S DATE=$S($G(PXRMDATE)'="":$P(PXRMDATE,"."),1:DT)
"RTN","PXRMRUL1",34,0)
 ;DBIA #1916
"RTN","PXRMRUL1",35,0)
 S INST=$P($$INSTPCTM^SCAPMC(DFN,DATE),U,3,4)
"RTN","PXRMRUL1",36,0)
 Q INST
"RTN","PXRMRUL1",37,0)
 ;
"RTN","PXRMRUL1",38,0)
LOGOP(LIST1,LIST2,LOGOP) ;Given LIST1 and LIST2 apply the logical
"RTN","PXRMRUL1",39,0)
 ;operator LOGOP to generate a new list and return it in LIST1
"RTN","PXRMRUL1",40,0)
 N DFN1,DFN2
"RTN","PXRMRUL1",41,0)
 I LOGOP="&" D  Q
"RTN","PXRMRUL1",42,0)
 . S DFN1=""
"RTN","PXRMRUL1",43,0)
 . F  S DFN1=$O(^TMP($J,LIST1,DFN1)) Q:DFN1=""  D
"RTN","PXRMRUL1",44,0)
 .. I $D(^TMP($J,LIST2,DFN1)) M ^TMP($J,LIST1,DFN1)=^TMP($J,LIST2,DFN1) Q
"RTN","PXRMRUL1",45,0)
 .. K ^TMP($J,LIST1,DFN1)
"RTN","PXRMRUL1",46,0)
 ;
"RTN","PXRMRUL1",47,0)
 ;"~" represents "&'".
"RTN","PXRMRUL1",48,0)
 I LOGOP="~" D  Q
"RTN","PXRMRUL1",49,0)
 . S DFN1=""
"RTN","PXRMRUL1",50,0)
 . F  S DFN1=$O(^TMP($J,LIST1,DFN1)) Q:DFN1=""  D
"RTN","PXRMRUL1",51,0)
 .. I $D(^TMP($J,LIST2,DFN1)) K ^TMP($J,LIST1,DFN1)
"RTN","PXRMRUL1",52,0)
 ;
"RTN","PXRMRUL1",53,0)
 I LOGOP="!" D
"RTN","PXRMRUL1",54,0)
 . S DFN2=""
"RTN","PXRMRUL1",55,0)
 . F  S DFN2=$O(^TMP($J,LIST2,DFN2)) Q:DFN2=""  D
"RTN","PXRMRUL1",56,0)
 .. M ^TMP($J,LIST1,DFN2)=^TMP($J,LIST2,DFN2)
"RTN","PXRMRUL1",57,0)
 Q
"RTN","PXRMRUL1",58,0)
 ;
"RTN","PXRMRUL1",59,0)
REM(FRACT,RIEN,RSTART,RSTOP,PNODE) ;Process reminder finding rule
"RTN","PXRMRUL1",60,0)
 D BLDPLST^PXRMPLST(RIEN,PNODE,1,RSTOP)
"RTN","PXRMRUL1",61,0)
 ;Remove, Select or Add Findings operations
"RTN","PXRMRUL1",62,0)
 I FRACT="A" D LOGOP(FROUT,PNODE,"!") Q
"RTN","PXRMRUL1",63,0)
 I FRACT="D" D LOGOP(FROUT,PNODE,"~") Q
"RTN","PXRMRUL1",64,0)
 I FRACT="S" D LOGOP(FROUT,PNODE,"&") Q
"RTN","PXRMRUL1",65,0)
 Q
"RTN","PXRMRUL1",66,0)
 ;
"RTN","PXRMRUL1",67,0)
TERM(FRACT,FRTIEN,RSTART,RSTOP,PNODE,INST) ;Process TERM finding rule
"RTN","PXRMRUL1",68,0)
 N FINDPA,FINDING,FNAME,PLIST,PXRMDATE,PXRMDEBG,TERMARR,TFIEV,TNAME
"RTN","PXRMRUL1",69,0)
 ;Get term definition array
"RTN","PXRMRUL1",70,0)
 D TERM^PXRMLDR(FRTIEN,.TERMARR)
"RTN","PXRMRUL1",71,0)
 S TNAME=$P(TERMARR(0),U,1)
"RTN","PXRMRUL1",72,0)
 S INST=$S(FRACT'="F":0,TNAME="VA-PCMM INSTITUTION":1,TNAME="VA-IHD STATION CODE":1,1:0)
"RTN","PXRMRUL1",73,0)
 ;Set start and end dates
"RTN","PXRMRUL1",74,0)
 S $P(FINDPA(0),U,8)=RSTART,$P(FINDPA(0),U,11)=RSTOP,PXRMDATE=RSTOP
"RTN","PXRMRUL1",75,0)
 ;
"RTN","PXRMRUL1",76,0)
 ;Add operation
"RTN","PXRMRUL1",77,0)
 I FRACT="A" D  Q
"RTN","PXRMRUL1",78,0)
 .;Process term for date range
"RTN","PXRMRUL1",79,0)
 .D EVALPL^PXRMTERM(.FINDPA,.TERMARR,PNODE)
"RTN","PXRMRUL1",80,0)
 .;Merge lists if operation is add
"RTN","PXRMRUL1",81,0)
 .M ^TMP($J,FROUT)=^TMP($J,PNODE,1)
"RTN","PXRMRUL1",82,0)
 ;Remove, Select or Insert Findings operations
"RTN","PXRMRUL1",83,0)
 I FRACT="F" S PXRMDEBG=1
"RTN","PXRMRUL1",84,0)
 S DFN=0
"RTN","PXRMRUL1",85,0)
 F  S DFN=$O(^TMP($J,FROUT,DFN)) Q:'DFN  D
"RTN","PXRMRUL1",86,0)
 .I INST S ^TMP($J,FROUT,DFN,"INST")=$$INST(DFN) Q
"RTN","PXRMRUL1",87,0)
 .;Evaluate term
"RTN","PXRMRUL1",88,0)
 .K TFIEV D IEVALTER^PXRMTERM(DFN,.FINDPA,.TERMARR,1,.TFIEV)
"RTN","PXRMRUL1",89,0)
 .;Delete any ^TMP patient in PLIST if action is remove
"RTN","PXRMRUL1",90,0)
 .I FRACT="R",TFIEV(1) K ^TMP($J,FROUT,DFN) Q
"RTN","PXRMRUL1",91,0)
 .;Delete any ^TMP patient not in PLIST if action is select
"RTN","PXRMRUL1",92,0)
 .I FRACT="S",'TFIEV(1) K ^TMP($J,FROUT,DFN) Q
"RTN","PXRMRUL1",93,0)
 .I FRACT="F",TFIEV(1) D
"RTN","PXRMRUL1",94,0)
 .. S FINDING=TFIEV(1,"FINDING")
"RTN","PXRMRUL1",95,0)
 .. I '$D(FNAME(FINDING)) S FNAME(FINDING)=$$GETFNAME^PXRMDATA(FINDING)
"RTN","PXRMRUL1",96,0)
 .. S TFIEV(1,"CSUB","FINDING NAME")=FNAME(FINDING)
"RTN","PXRMRUL1",97,0)
 .. D INSERT(FROUT,DFN,TNAME,.TFIEV,RSTOP)
"RTN","PXRMRUL1",98,0)
 Q
"RTN","PXRMRUL1",99,0)
 ;
"RTN","PXRMRULE")
0^44^B97735576
"RTN","PXRMRULE",1,0)
PXRMRULE ; SLC/PJH - Build Patient list from Rule Set ;08/11/2006
"RTN","PXRMRULE",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMRULE",3,0)
 ; 
"RTN","PXRMRULE",4,0)
 ; Called from PXRM PATIENT LIST CREATE protocol
"RTN","PXRMRULE",5,0)
 ;
"RTN","PXRMRULE",6,0)
ASK(PLIEN,OPT) ;Verify patient list name
"RTN","PXRMRULE",7,0)
 N X,Y,TEXT
"RTN","PXRMRULE",8,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMRULE",9,0)
 S DIR(0)="YA0"
"RTN","PXRMRULE",10,0)
 S DIR("A")=OPT_" patient list "_$P($G(^PXRMXP(810.5,PLIEN,0)),U)_"?: "
"RTN","PXRMRULE",11,0)
 S DIR("B")="N"
"RTN","PXRMRULE",12,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMRULE",13,0)
 W !
"RTN","PXRMRULE",14,0)
 D ^DIR K DIR
"RTN","PXRMRULE",15,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMRULE",16,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMRULE",17,0)
 I $E(Y(0))="N" S DUOUT=1 Q
"RTN","PXRMRULE",18,0)
 Q
"RTN","PXRMRULE",19,0)
 ;
"RTN","PXRMRULE",20,0)
CLEAR(RULE,NODE) ;Clear workfile entries
"RTN","PXRMRULE",21,0)
 N SEQ
"RTN","PXRMRULE",22,0)
 S SEQ=""
"RTN","PXRMRULE",23,0)
 F  S SEQ=$O(^PXRM(810.4,RULE,30,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMRULE",24,0)
 .K ^TMP($J,NODE_SEQ)
"RTN","PXRMRULE",25,0)
 ;clear FDA array
"RTN","PXRMRULE",26,0)
 K ^TMP($J,"PXRMFDA")
"RTN","PXRMRULE",27,0)
 Q
"RTN","PXRMRULE",28,0)
 ;
"RTN","PXRMRULE",29,0)
COPY(IENO) ;Copy patient list
"RTN","PXRMRULE",30,0)
 ;Check if OK to copy
"RTN","PXRMRULE",31,0)
 D ASK(IENO,"Copy") Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMRULE",32,0)
 N FDA,IENN,IND,MSG,NNAME,ODATA,OEPIEN,ONAME,ORULE,PATCREAT,TEXT,X,Y
"RTN","PXRMRULE",33,0)
 ;Select list to copy to
"RTN","PXRMRULE",34,0)
 S TEXT="Select PATIENT LIST name to copy to: "
"RTN","PXRMRULE",35,0)
 D PLIST^PXRMLCR(.IENN,TEXT,IENO) Q:$D(DUOUT)!$D(DTOUT)  Q:'IENN
"RTN","PXRMRULE",36,0)
 S NNAME=$P($G(^PXRMXP(810.5,IENN,0)),U)
"RTN","PXRMRULE",37,0)
 ;
"RTN","PXRMRULE",38,0)
 ;Get original Patient List record 
"RTN","PXRMRULE",39,0)
 S ODATA=$G(^PXRMXP(810.5,IENO,0))
"RTN","PXRMRULE",40,0)
 S ONAME=$P(ODATA,U),OEPIEN=$P(ODATA,U,5),ORULE=$P(ODATA,U,6)
"RTN","PXRMRULE",41,0)
 ;
"RTN","PXRMRULE",42,0)
 M ^PXRMXP(810.5,IENN)=^PXRMXP(810.5,IENO)
"RTN","PXRMRULE",43,0)
 D ASK^PXRMXD(.PATCREAT,"Secure list?: ",2)
"RTN","PXRMRULE",44,0)
 ;Update header info
"RTN","PXRMRULE",45,0)
 S TYPE=$S($G(PATCREAT)="Y":"PVT",1:"PUB")
"RTN","PXRMRULE",46,0)
 S IND=IENN_","
"RTN","PXRMRULE",47,0)
 S FDA(810.5,IND,.01)=NNAME
"RTN","PXRMRULE",48,0)
 S FDA(810.5,IND,.04)=$$NOW^XLFDT
"RTN","PXRMRULE",49,0)
 S FDA(810.5,IND,.05)=OEPIEN
"RTN","PXRMRULE",50,0)
 S FDA(810.5,IND,.06)=ORULE
"RTN","PXRMRULE",51,0)
 S FDA(810.5,IND,.07)=$G(DUZ)
"RTN","PXRMRULE",52,0)
 S FDA(810.5,IND,.08)=TYPE
"RTN","PXRMRULE",53,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMRULE",54,0)
 ;Error
"RTN","PXRMRULE",55,0)
 I $D(MSG) D ERR
"RTN","PXRMRULE",56,0)
 ;
"RTN","PXRMRULE",57,0)
 W !!,"Completed copy of '"_ONAME_"'"
"RTN","PXRMRULE",58,0)
 W !,"into '"_NNAME_"'",! H 2
"RTN","PXRMRULE",59,0)
 K ^TMP($J,"PXRMRULE")
"RTN","PXRMRULE",60,0)
 Q
"RTN","PXRMRULE",61,0)
 ;
"RTN","PXRMRULE",62,0)
CRLST(NAME,CLASS) ;Create new patient list
"RTN","PXRMRULE",63,0)
 N IEN
"RTN","PXRMRULE",64,0)
 ;Check if name exists
"RTN","PXRMRULE",65,0)
 S IEN=$O(^PXRMXP(810.5,"B",NAME,"")) I IEN Q IEN
"RTN","PXRMRULE",66,0)
 ;Otherwise create national entry
"RTN","PXRMRULE",67,0)
 N FDA,FDAIEN,MSG
"RTN","PXRMRULE",68,0)
 S FDA(810.5,"+1,",.01)=NAME
"RTN","PXRMRULE",69,0)
 S FDA(810.5,"+1,",100)=CLASS
"RTN","PXRMRULE",70,0)
 D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMRULE",71,0)
 ;Error
"RTN","PXRMRULE",72,0)
 I $D(MSG) Q 0
"RTN","PXRMRULE",73,0)
 ;Otherwise list ien
"RTN","PXRMRULE",74,0)
 Q FDAIEN(1)
"RTN","PXRMRULE",75,0)
 ;
"RTN","PXRMRULE",76,0)
DELETE(LIST) ;Delete Patient list
"RTN","PXRMRULE",77,0)
 I '$$VEDIT^PXRMUTIL("^PXRMXP(810.5,",LIST) D  Q
"RTN","PXRMRULE",78,0)
 .W !!,?5,"VA- and national class patient lists may not be deleted" H 2
"RTN","PXRMRULE",79,0)
 .S DUOUT=1
"RTN","PXRMRULE",80,0)
 ;Check if this is the right list
"RTN","PXRMRULE",81,0)
 D ASK(LIST,"Delete") Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMRULE",82,0)
 ;
"RTN","PXRMRULE",83,0)
 N DA,DIK,DUOUT
"RTN","PXRMRULE",84,0)
 ;Lock patient list
"RTN","PXRMRULE",85,0)
 D LOCK Q:$D(DUOUT)
"RTN","PXRMRULE",86,0)
 ;Kill List
"RTN","PXRMRULE",87,0)
 S DA=LIST,DIK="^PXRMXP(810.5,"
"RTN","PXRMRULE",88,0)
 D ^DIK
"RTN","PXRMRULE",89,0)
 ;Unlock patient list
"RTN","PXRMRULE",90,0)
 D UNLOCK
"RTN","PXRMRULE",91,0)
 Q
"RTN","PXRMRULE",92,0)
 ;
"RTN","PXRMRULE",93,0)
ERR ;Error Handler
"RTN","PXRMRULE",94,0)
 N ERROR,IC,REF
"RTN","PXRMRULE",95,0)
 S ERROR(1)="Unable to build patient list : "
"RTN","PXRMRULE",96,0)
 S ERROR(2)=NAME
"RTN","PXRMRULE",97,0)
 S ERROR(3)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMRULE",98,0)
 ; Move MSG into Error
"RTN","PXRMRULE",99,0)
 S REF="MSG"
"RTN","PXRMRULE",100,0)
 F IC=4:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMRULE",101,0)
 ;Screen message
"RTN","PXRMRULE",102,0)
 D EN^DDIOL(.ERROR)
"RTN","PXRMRULE",103,0)
 Q
"RTN","PXRMRULE",104,0)
 ;
"RTN","PXRMRULE",105,0)
INTR ;Input transform for #810.4 fields
"RTN","PXRMRULE",106,0)
 Q
"RTN","PXRMRULE",107,0)
 ;
"RTN","PXRMRULE",108,0)
LOAD(NODE,LIEN) ;Load Patient List
"RTN","PXRMRULE",109,0)
 N DATA,DFN,SUB
"RTN","PXRMRULE",110,0)
 S SUB=0
"RTN","PXRMRULE",111,0)
 F  S SUB=$O(^PXRMXP(810.5,LIEN,30,SUB)) Q:'SUB  D
"RTN","PXRMRULE",112,0)
 .S DATA=$G(^PXRMXP(810.5,LIEN,30,SUB,0)),DFN=$P(DATA,U) Q:'DFN
"RTN","PXRMRULE",113,0)
 .;Store the patient IEN and institution in ^TMP
"RTN","PXRMRULE",114,0)
 .S ^TMP($J,NODE,DFN)=$P(DATA,U,2)_U_$P($G(DATA),U,3)_U_$P($G(DATA),U,4)
"RTN","PXRMRULE",115,0)
 Q
"RTN","PXRMRULE",116,0)
 ;
"RTN","PXRMRULE",117,0)
LOCK L +^PXRMXP(810.5,LIST):0
"RTN","PXRMRULE",118,0)
 E  W !!?5,"Another user is using this patient list" S DUOUT=1
"RTN","PXRMRULE",119,0)
 Q
"RTN","PXRMRULE",120,0)
 ;
"RTN","PXRMRULE",121,0)
PATS(LIST) ;Process Patient List finding rule
"RTN","PXRMRULE",122,0)
 ;
"RTN","PXRMRULE",123,0)
 N LIEN,LUVALUE
"RTN","PXRMRULE",124,0)
 ;Insert year and period into extract list name
"RTN","PXRMRULE",125,0)
 I YEAR]"",LIST["yyyy" S LIST=$P(LIST,"yyyy")_YEAR_$P(LIST,"yyyy",2)
"RTN","PXRMRULE",126,0)
 I PERIOD]"",LIST["nn" S LIST=$P(LIST,"nn")_$E(PERIOD,2,10)_$P(LIST,"nn",2)
"RTN","PXRMRULE",127,0)
 ;
"RTN","PXRMRULE",128,0)
 S LUVALUE(1)=LIST
"RTN","PXRMRULE",129,0)
 S LIEN=+$$FIND1^DIC(810.5,"","KUX",.LUVALUE) Q:'LIEN
"RTN","PXRMRULE",130,0)
 ;
"RTN","PXRMRULE",131,0)
 ;Add operation Load list
"RTN","PXRMRULE",132,0)
 I FRACT="A" D LOAD(FROUT,LIEN) Q
"RTN","PXRMRULE",133,0)
 ;
"RTN","PXRMRULE",134,0)
 ;Remove, Select or Add Findings operations
"RTN","PXRMRULE",135,0)
 I FRACT'="A" D  Q
"RTN","PXRMRULE",136,0)
 .;Load List
"RTN","PXRMRULE",137,0)
 .D LOAD(PNODE,LIEN)
"RTN","PXRMRULE",138,0)
 .;Check each patient
"RTN","PXRMRULE",139,0)
 .S DFN=0
"RTN","PXRMRULE",140,0)
 .F  S DFN=$O(^TMP($J,FROUT,DFN)) Q:'DFN  D
"RTN","PXRMRULE",141,0)
 ..;Delete any ^TMP patient in PLIST if action is remove
"RTN","PXRMRULE",142,0)
 ..I FRACT="R",$D(^TMP($J,PNODE,DFN)) K ^TMP($J,FROUT,DFN) Q
"RTN","PXRMRULE",143,0)
 ..;Delete any ^TMP patient not in PLIST if action is select
"RTN","PXRMRULE",144,0)
 ..I FRACT="S",'$D(^TMP($J,PNODE,DFN)) K ^TMP($J,FROUT,DFN)
"RTN","PXRMRULE",145,0)
 Q
"RTN","PXRMRULE",146,0)
 ;
"RTN","PXRMRULE",147,0)
START(RULESET,LIST,NODE,LBBDT,LBEDT,PAR,YEAR,PERIOD,INDP,INTP) ;
"RTN","PXRMRULE",148,0)
 ;Process rule set
"RTN","PXRMRULE",149,0)
 ;Clear ^TMP
"RTN","PXRMRULE",150,0)
 D CLEAR(RULESET,NODE)
"RTN","PXRMRULE",151,0)
 ;
"RTN","PXRMRULE",152,0)
 N CLASS,FRACT,FRDATA,FRDATES,FRIEN,FRLST,FRLIEN,FROLST,FROUT,FRPAT
"RTN","PXRMRULE",153,0)
 N FRPERM,FRSTRT,FRTIEN,FRTYP,FSEQ,INC,INST,PXRMDATE
"RTN","PXRMRULE",154,0)
 N RBDT,REDT,RRIEN,RSDATA,RSDATES,SEQ,SUB
"RTN","PXRMRULE",155,0)
 ;Get class from extract parameter
"RTN","PXRMRULE",156,0)
 I PAR S CLASS=$P($G(^PXRM(810.2,PAR,100)),U)
"RTN","PXRMRULE",157,0)
 ;Otherwise default to local
"RTN","PXRMRULE",158,0)
 I $G(CLASS)="" S CLASS="L"
"RTN","PXRMRULE",159,0)
 ;Get each finding rule in sequence
"RTN","PXRMRULE",160,0)
 S SEQ="",INC=0
"RTN","PXRMRULE",161,0)
 F  S SEQ=$O(^PXRM(810.4,RULESET,30,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMRULE",162,0)
 .;Save first sequence as default
"RTN","PXRMRULE",163,0)
 .I INC=0 S INC=1,FSEQ=SEQ
"RTN","PXRMRULE",164,0)
 .S SUB=$O(^PXRM(810.4,RULESET,30,"B",SEQ,"")) Q:'SUB
"RTN","PXRMRULE",165,0)
 .S RSDATA=$G(^PXRM(810.4,RULESET,30,SUB,0)) Q:RSDATA=""
"RTN","PXRMRULE",166,0)
 .S RSDATES=$G(^PXRM(810.4,RULESET,30,SUB,1))
"RTN","PXRMRULE",167,0)
 .;Finding rule ien and action
"RTN","PXRMRULE",168,0)
 .S FRIEN=$P(RSDATA,U,2),FRACT=$P(RSDATA,U,3) Q:'FRIEN  Q:FRACT=""
"RTN","PXRMRULE",169,0)
 .;Check if entry is a finding rule (not a set or reminder rule)
"RTN","PXRMRULE",170,0)
 .S FRDATA=$G(^PXRM(810.4,FRIEN,0)),FRTYP=$P(FRDATA,U,3) Q:FRTYP=3
"RTN","PXRMRULE",171,0)
 .S FRDATES=$P(FRDATA,U,4,5)
"RTN","PXRMRULE",172,0)
 .;Get term IEN for finding rule
"RTN","PXRMRULE",173,0)
 .I FRTYP=1 S FRTIEN=$P(FRDATA,U,7) Q:'FRTIEN
"RTN","PXRMRULE",174,0)
 .;Get Reminder definition IEN for Reminder rule
"RTN","PXRMRULE",175,0)
 .I FRTYP=2 S RRIEN=$P(FRDATA,U,10) Q:'RRIEN
"RTN","PXRMRULE",176,0)
 .;Get Extract Patient List name for patient list rule
"RTN","PXRMRULE",177,0)
 .I FRTYP=5 S FRLST=$P($G(^PXRM(810.4,FRIEN,1)),U) D  Q:FRLST=""
"RTN","PXRMRULE",178,0)
 ..S FROLST=$P(FRDATA,U,8)
"RTN","PXRMRULE",179,0)
 ..I +FROLST>0 S FRLST=$P($G(^PXRMXP(810.5,FROLST,0)),U)
"RTN","PXRMRULE",180,0)
 .;Determine RBDT and REDT
"RTN","PXRMRULE",181,0)
 .D RDATES^PXRMEUT1(RSDATES,FRDATES,LBBDT,LBEDT,.RBDT,.REDT)
"RTN","PXRMRULE",182,0)
 .S PXRMDATE=LBEDT
"RTN","PXRMRULE",183,0)
 .;Get start sequence or start patient list
"RTN","PXRMRULE",184,0)
 .S FRSTRT=$P(RSDATA,U,4),FRPAT=$P(RSDATA,U,5)
"RTN","PXRMRULE",185,0)
 .;If sequence is defined use it
"RTN","PXRMRULE",186,0)
 .I FRSTRT S FROUT=NODE_FRSTRT
"RTN","PXRMRULE",187,0)
 .;If neither exist use first as default
"RTN","PXRMRULE",188,0)
 .I FRSTRT="",FRPAT="" S FROUT=NODE_FSEQ
"RTN","PXRMRULE",189,0)
 .;If start is patient list load patient list into workfile
"RTN","PXRMRULE",190,0)
 .I FRSTRT="",FRPAT]"" S FROUT=NODE_SEQ D LOAD(FROUT,FRPAT)
"RTN","PXRMRULE",191,0)
 .;Name of permanent list
"RTN","PXRMRULE",192,0)
 .S FRPERM=$P(RSDATA,U,6)
"RTN","PXRMRULE",193,0)
 .;
"RTN","PXRMRULE",194,0)
 .;Build patient list in TMP
"RTN","PXRMRULE",195,0)
 .N DFN,PNODE,TLIST
"RTN","PXRMRULE",196,0)
 .S PNODE="PXRMEVAL"
"RTN","PXRMRULE",197,0)
 .K ^TMP($J,PNODE)
"RTN","PXRMRULE",198,0)
 .;Term finding rules
"RTN","PXRMRULE",199,0)
 .I FRTYP=1 D TERM^PXRMRUL1(FRACT,FRTIEN,RBDT,REDT,PNODE,.INST)
"RTN","PXRMRULE",200,0)
 .;Reminder Definition List Rule
"RTN","PXRMRULE",201,0)
 .I FRTYP=2 D REM^PXRMRUL1(FRACT,RRIEN,RBDT,REDT,PNODE)
"RTN","PXRMRULE",202,0)
 .;Patient list finding rules
"RTN","PXRMRULE",203,0)
 .I FRTYP=5 D PATS(FRLST)
"RTN","PXRMRULE",204,0)
 .;Clear results file
"RTN","PXRMRULE",205,0)
 .K ^TMP($J,PNODE)
"RTN","PXRMRULE",206,0)
 .;
"RTN","PXRMRULE",207,0)
 .;Build permanent list if required
"RTN","PXRMRULE",208,0)
 .I FRPERM]"" D
"RTN","PXRMRULE",209,0)
 ..N FRPIEN
"RTN","PXRMRULE",210,0)
 ..;Get patient list IEN or create new patient list
"RTN","PXRMRULE",211,0)
 ..S FRPIEN=$$CRLST(FRPERM,CLASS) Q:'FRPIEN
"RTN","PXRMRULE",212,0)
 ..;Update patient list
"RTN","PXRMRULE",213,0)
 ..D UPDLST(FROUT,FRPIEN,PAR,RULESET,INST)
"RTN","PXRMRULE",214,0)
 ;
"RTN","PXRMRULE",215,0)
 ;Save final results to patient list
"RTN","PXRMRULE",216,0)
 I LIST'="",FROUT'="" D
"RTN","PXRMRULE",217,0)
 . D RMPAT^PXRMEUT(FROUT,INDP,INTP)
"RTN","PXRMRULE",218,0)
 . D UPDLST(FROUT,LIST,PAR,RULESET,INST)
"RTN","PXRMRULE",219,0)
 . D DOCUMENT^PXRMEUT(LIST,RULESET,INDP,INTP,LBBDT,LBEDT)
"RTN","PXRMRULE",220,0)
 Q
"RTN","PXRMRULE",221,0)
 ;
"RTN","PXRMRULE",222,0)
UPDLST(NODE,LIST,EPIEN,RULE,INST) ;Update patient list
"RTN","PXRMRULE",223,0)
 N CNT,DA,DATA,DCNT,DFN,DNAME,DNAMEL,DUE,DUOUT,FDA,INST,INSTNAM,INSTNUM
"RTN","PXRMRULE",224,0)
 N LAST,MSG,NAME,ONODE,RCNT,RIEN,RNAMEL,RNCNT,SUB,TEMP,TYPE,VALUE
"RTN","PXRMRULE",225,0)
 ;Lock patient list
"RTN","PXRMRULE",226,0)
 D LOCK Q:$D(DUOUT)
"RTN","PXRMRULE",227,0)
 ;
"RTN","PXRMRULE",228,0)
 ;Clear existing list.
"RTN","PXRMRULE",229,0)
 K ^PXRMXP(810.5,LIST,30),^PXRMXP(810.5,LIST,35),^PXRMXP(810.5,LIST,45),^PXRMXP(810.5,LIST,200)
"RTN","PXRMRULE",230,0)
 S NAME=$P($G(^PXRMXP(810.5,LIST,0)),U)
"RTN","PXRMRULE",231,0)
 ;
"RTN","PXRMRULE",232,0)
 ;Merge ^TMP into Patient List
"RTN","PXRMRULE",233,0)
 S (CNT,DFN,INST)=0
"RTN","PXRMRULE",234,0)
 F  S DFN=$O(^TMP($J,NODE,DFN)) Q:'DFN  D
"RTN","PXRMRULE",235,0)
 .S ONODE=$G(^TMP($J,NODE,DFN,"INST"))
"RTN","PXRMRULE",236,0)
 .S INSTNUM=$P(ONODE,U,1),INSTNAM=$P(ONODE,U,2)
"RTN","PXRMRULE",237,0)
 .S CNT=CNT+1,^PXRMXP(810.5,LIST,30,CNT,0)=DFN_U_INSTNUM_U_INSTNAM
"RTN","PXRMRULE",238,0)
 .S ^PXRMXP(810.5,LIST,30,"B",DFN,CNT)=""
"RTN","PXRMRULE",239,0)
 .;
"RTN","PXRMRULE",240,0)
 .;Save the reminder evaluation information only from Reports
"RTN","PXRMRULE",241,0)
 .I $D(^TMP($J,NODE,DFN,"REM"))>0 D
"RTN","PXRMRULE",242,0)
 ..S (RIEN,RCNT,RNCNT)=0
"RTN","PXRMRULE",243,0)
 ..F  S RIEN=$O(^TMP($J,NODE,DFN,"REM",RIEN)) Q:RIEN'>0  D
"RTN","PXRMRULE",244,0)
 ...S RNAMEL(RIEN)=""
"RTN","PXRMRULE",245,0)
 ...S VALUE=^TMP($J,NODE,DFN,"REM",RIEN)
"RTN","PXRMRULE",246,0)
 ...S RCNT=RCNT+1
"RTN","PXRMRULE",247,0)
 ...S ^PXRMXP(810.5,LIST,30,CNT,"REM",RCNT,0)=VALUE
"RTN","PXRMRULE",248,0)
 ...S ^PXRMXP(810.5,LIST,30,CNT,"REM","B",RIEN,RCNT)=""
"RTN","PXRMRULE",249,0)
 ..S ^PXRMXP(810.5,LIST,30,CNT,1,0)=U_"810.532A"_U_RCNT_U_RCNT
"RTN","PXRMRULE",250,0)
 .;
"RTN","PXRMRULE",251,0)
 .I '$D(^TMP($J,NODE,DFN,"DATA")) Q
"RTN","PXRMRULE",252,0)
 .S DCNT=0,DNAME=""
"RTN","PXRMRULE",253,0)
 .F  S DNAME=$O(^TMP($J,NODE,DFN,"DATA",DNAME)) Q:DNAME=""  D
"RTN","PXRMRULE",254,0)
 ..S DNAMEL(DNAME)=""
"RTN","PXRMRULE",255,0)
 ..S VALUE=^TMP($J,NODE,DFN,"DATA",DNAME)
"RTN","PXRMRULE",256,0)
 ..S DCNT=DCNT+1
"RTN","PXRMRULE",257,0)
 ..S ^PXRMXP(810.5,LIST,30,CNT,"DATA",DCNT,0)=DNAME_U_VALUE
"RTN","PXRMRULE",258,0)
 ..S ^PXRMXP(810.5,LIST,30,CNT,"DATA","B",DNAME,DCNT)=""
"RTN","PXRMRULE",259,0)
 .S ^PXRMXP(810.5,LIST,30,CNT,1,0)=U_"810.531A"_U_DCNT_U_DCNT
"RTN","PXRMRULE",260,0)
 S ^PXRMXP(810.5,LIST,30,0)=U_"810.53P"_U_CNT_U_CNT
"RTN","PXRMRULE",261,0)
 ;
"RTN","PXRMRULE",262,0)
 ;Save the reminder information
"RTN","PXRMRULE",263,0)
 S RNCNT=0,RIEN=0
"RTN","PXRMRULE",264,0)
 F  S RIEN=$O(RNAMEL(RIEN)) Q:RIEN'>0  D
"RTN","PXRMRULE",265,0)
 .S RNCNT=RNCNT+1
"RTN","PXRMRULE",266,0)
 .S ^PXRMXP(810.5,LIST,45,RCNT,0)=RIEN
"RTN","PXRMRULE",267,0)
 .S ^PXRMXP(810.5,LIST,45,"B",RIEN,RNCNT)=""
"RTN","PXRMRULE",268,0)
 I RNCNT>0 S ^PXRMXP(810.5,LIST,45,0)=U_"810.545P"_U_RNCNT_U_RNCNT
"RTN","PXRMRULE",269,0)
 ;
"RTN","PXRMRULE",270,0)
 ;Save the data types.
"RTN","PXRMRULE",271,0)
 S DCNT=0,DNAME=""
"RTN","PXRMRULE",272,0)
 F  S DNAME=$O(DNAMEL(DNAME)) Q:DNAME=""  D
"RTN","PXRMRULE",273,0)
 .S DCNT=DCNT+1
"RTN","PXRMRULE",274,0)
 .S ^PXRMXP(810.5,LIST,35,DCNT,0)=DNAME
"RTN","PXRMRULE",275,0)
 .S ^PXRMXP(810.5,LIST,35,"B",DNAME,DCNT)=""
"RTN","PXRMRULE",276,0)
 I DCNT>0 S ^PXRMXP(810.5,LIST,35,0)=U_"810.535A"_U_DCNT_U_DCNT
"RTN","PXRMRULE",277,0)
 S ^PXRMXP(810.5,LIST,30,0)=U_"810.53P"_U_CNT_U_CNT
"RTN","PXRMRULE",278,0)
 ;
"RTN","PXRMRULE",279,0)
 ;Update header info
"RTN","PXRMRULE",280,0)
 S TYPE=$S($G(PATCREAT)="Y":"PVT",1:"PUB")
"RTN","PXRMRULE",281,0)
 K PATCREAT
"RTN","PXRMRULE",282,0)
 S FDA(810.5,"?+1,",.01)=NAME
"RTN","PXRMRULE",283,0)
 S FDA(810.5,"?+1,",.04)=$$NOW^XLFDT
"RTN","PXRMRULE",284,0)
 S FDA(810.5,"?+1,",.05)=EPIEN
"RTN","PXRMRULE",285,0)
 S FDA(810.5,"?+1,",.06)=RULE
"RTN","PXRMRULE",286,0)
 S FDA(810.5,"?+1,",.07)=$G(DUZ)
"RTN","PXRMRULE",287,0)
 S FDA(810.5,"?+1,",.08)=TYPE
"RTN","PXRMRULE",288,0)
 I $G(INST)=1 S FDA(810.5,"?+1,",.1)=1
"RTN","PXRMRULE",289,0)
 S FDA(810.5,"?+1,",50)=$S($G(PLISTPUG)="Y":1,1:0)
"RTN","PXRMRULE",290,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMRULE",291,0)
 ;Error
"RTN","PXRMRULE",292,0)
 I $D(MSG) D ERR
"RTN","PXRMRULE",293,0)
 ;Unlock patient list
"RTN","PXRMRULE",294,0)
 D UNLOCK
"RTN","PXRMRULE",295,0)
 Q
"RTN","PXRMRULE",296,0)
 ;
"RTN","PXRMRULE",297,0)
UNLOCK L -^PXRMXP(810.5,LIST) Q
"RTN","PXRMRULE",298,0)
 ;
"RTN","PXRMSPED")
0^40^B6621847
"RTN","PXRMSPED",1,0)
PXRMSPED ; SLC/PKR - Edit a reminder sponsor. ;09/02/2005
"RTN","PXRMSPED",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMSPED",3,0)
 ;
"RTN","PXRMSPED",4,0)
 ;==============================================
"RTN","PXRMSPED",5,0)
 N CS1,CS2,DA,DIC,DLAYGO,DTOUT,DUOUT,NUM,Y
"RTN","PXRMSPED",6,0)
GETNAME ;Get the name of the sponsor to edit.
"RTN","PXRMSPED",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMSPED",8,0)
 S DIC="^PXRMD(811.6,"
"RTN","PXRMSPED",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMSPED",10,0)
 S DIC("A")="Select Reminder Sponsor: "
"RTN","PXRMSPED",11,0)
 S DIC("S")="I $$VEDIT^PXRMUTIL(DIC,Y)"
"RTN","PXRMSPED",12,0)
 S DLAYGO=811.6
"RTN","PXRMSPED",13,0)
 ;Set the starting place for additions.
"RTN","PXRMSPED",14,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMSPED",15,0)
 W !
"RTN","PXRMSPED",16,0)
 D ^DIC
"RTN","PXRMSPED",17,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMSPED",18,0)
 I Y=-1 G END
"RTN","PXRMSPED",19,0)
 S DA=$P(Y,U,1)
"RTN","PXRMSPED",20,0)
 S CS1=$$FILE^PXRMEXCS(811.6,DA)
"RTN","PXRMSPED",21,0)
 D EDIT(DIC,DA)
"RTN","PXRMSPED",22,0)
 ;See if any changes have been made, if so do the edit history.
"RTN","PXRMSPED",23,0)
 S CS2=$$FILE^PXRMEXCS(811.6,DA)
"RTN","PXRMSPED",24,0)
 I CS2'=0,CS2'=CS1 D SEHIST^PXRMUTIL(811.6,DIC,DA)
"RTN","PXRMSPED",25,0)
 G GETNAME
"RTN","PXRMSPED",26,0)
END ;
"RTN","PXRMSPED",27,0)
 Q
"RTN","PXRMSPED",28,0)
 ;
"RTN","PXRMSPED",29,0)
 ;==============================================
"RTN","PXRMSPED",30,0)
EDIT(ROOT,DA) ;
"RTN","PXRMSPED",31,0)
 N DIE,DR,DIDEL
"RTN","PXRMSPED",32,0)
 S DIE=ROOT,DIDEL=811.6
"RTN","PXRMSPED",33,0)
 S DR=".01"
"RTN","PXRMSPED",34,0)
 D ^DIE
"RTN","PXRMSPED",35,0)
 I $G(DA)="" Q
"RTN","PXRMSPED",36,0)
 ;
"RTN","PXRMSPED",37,0)
 ;Class
"RTN","PXRMSPED",38,0)
 W !!
"RTN","PXRMSPED",39,0)
 S DR="100"
"RTN","PXRMSPED",40,0)
 D ^DIE
"RTN","PXRMSPED",41,0)
 I $D(Y) Q
"RTN","PXRMSPED",42,0)
 ;Review date
"RTN","PXRMSPED",43,0)
 W !!
"RTN","PXRMSPED",44,0)
 S DR="102"
"RTN","PXRMSPED",45,0)
 D ^DIE
"RTN","PXRMSPED",46,0)
 I $D(Y) Q
"RTN","PXRMSPED",47,0)
 ;
"RTN","PXRMSPED",48,0)
 S DR="1"
"RTN","PXRMSPED",49,0)
 D ^DIE
"RTN","PXRMSPED",50,0)
 ;
"RTN","PXRMSPED",51,0)
 S DR="2"
"RTN","PXRMSPED",52,0)
 D ^DIE
"RTN","PXRMSPED",53,0)
 Q
"RTN","PXRMSPED",54,0)
 ;
"RTN","PXRMSPED",55,0)
 ;==============================================
"RTN","PXRMSPED",56,0)
INUSE(SIEN) ;This is used by ^DD(811.6,.01,"DEL",1,0) to determine if it
"RTN","PXRMSPED",57,0)
 ;is ok to delete a sponsor.
"RTN","PXRMSPED",58,0)
 N FILE,FILEA,IEN,IENA,IENT,IND,LIST,NUM,SP
"RTN","PXRMSPED",59,0)
 D EN^DDIOL("Checking usage ...")
"RTN","PXRMSPED",60,0)
 S NUM=0
"RTN","PXRMSPED",61,0)
 ;First check for use as an associated sponsor.
"RTN","PXRMSPED",62,0)
 S SP=""
"RTN","PXRMSPED",63,0)
 F  S SP=$O(^PXRMD(811.6,"C",SIEN,SP)) Q:SP=""  D
"RTN","PXRMSPED",64,0)
 . S NUM=NUM+1
"RTN","PXRMSPED",65,0)
 . S FILEA(NUM)=811.6
"RTN","PXRMSPED",66,0)
 . S IENA(NUM)=SP
"RTN","PXRMSPED",67,0)
 F FILE=801.41,810.9,811.2,811.4,811.5,811.9 D
"RTN","PXRMSPED",68,0)
 . K LIST
"RTN","PXRMSPED",69,0)
 . D LIST^DIC(FILE,"","@","","","","","","","","LIST")
"RTN","PXRMSPED",70,0)
 . S IENT=$P(LIST("DILIST",0),U,1)
"RTN","PXRMSPED",71,0)
 . F IND=1:1:IENT D
"RTN","PXRMSPED",72,0)
 .. S IEN=LIST("DILIST",2,IND)
"RTN","PXRMSPED",73,0)
 .. S SP=+$$GET1^DIQ(FILE,IEN,101,"I")
"RTN","PXRMSPED",74,0)
 .. I SP=SIEN D
"RTN","PXRMSPED",75,0)
 ... S NUM=NUM+1
"RTN","PXRMSPED",76,0)
 ... S FILEA(NUM)=FILE
"RTN","PXRMSPED",77,0)
 ... S IENA(NUM)=IEN
"RTN","PXRMSPED",78,0)
 I NUM>0 D
"RTN","PXRMSPED",79,0)
 . D EN^DDIOL("This Sponsor cannot be deleted, it is in use by the following:")
"RTN","PXRMSPED",80,0)
 . D EN^DDIOL("FILE","","!!")
"RTN","PXRMSPED",81,0)
 . D EN^DDIOL("ENTRY","","?35")
"RTN","PXRMSPED",82,0)
 . D EN^DDIOL("----")
"RTN","PXRMSPED",83,0)
 . D EN^DDIOL("-----","","?35")
"RTN","PXRMSPED",84,0)
 . F IND=1:1:NUM D
"RTN","PXRMSPED",85,0)
 .. S IENA(IND)=$$GET1^DIQ(FILEA(IND),IENA(IND),.01)
"RTN","PXRMSPED",86,0)
 .. S FILEA(IND)=$$GET1^DID(FILEA(IND),"","","NAME")
"RTN","PXRMSPED",87,0)
 .. D EN^DDIOL(FILEA(IND))
"RTN","PXRMSPED",88,0)
 .. D EN^DDIOL(IENA(IND),"","?35")
"RTN","PXRMSPED",89,0)
 . D EN^DDIOL("","","!!")
"RTN","PXRMSPED",90,0)
 Q NUM
"RTN","PXRMSPED",91,0)
 ;
"RTN","PXRMSTA1")
0^86^B72646186
"RTN","PXRMSTA1",1,0)
PXRMSTA1 ; SLC/AGP - Routines for building status list. ;06/20/2006
"RTN","PXRMSTA1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMSTA1",3,0)
 ;
"RTN","PXRMSTA1",4,0)
 ;This routine and PXRMSTA2 will allow users to select the
"RTN","PXRMSTA1",5,0)
 ;approriate status for Orders, Medication, Taxonomy, Problem List,
"RTN","PXRMSTA1",6,0)
 ;and Radiology Procedure findings items.
"RTN","PXRMSTA1",7,0)
 ;
"RTN","PXRMSTA1",8,0)
CLEAR(GBL,FILE,DA) ;
"RTN","PXRMSTA1",9,0)
 N IEN,NODE,DIK,TEMP
"RTN","PXRMSTA1",10,0)
 I FILE="D" S DIK="^PXD(811.9,"_DA(2)_",20,"_DA(1)_",5,"
"RTN","PXRMSTA1",11,0)
 I FILE="T" S DIK="^PXRMD(811.5,"_DA(2)_",20,"_DA(1)_",5,"
"RTN","PXRMSTA1",12,0)
 S DA=0 F  S DA=$O(@GBL@(DA(2),20,DA(1),5,DA)) Q:DA'>0  S TEMP(DA)=""
"RTN","PXRMSTA1",13,0)
 S DA=0 F  S DA=$O(TEMP(DA)) Q:DA'>0  D ^DIK
"RTN","PXRMSTA1",14,0)
 Q
"RTN","PXRMSTA1",15,0)
 ;
"RTN","PXRMSTA1",16,0)
STATUS(DA,FILE) ;
"RTN","PXRMSTA1",17,0)
 N ANS,DELSTS,DELALL,GBL,NODE,PXRMRX,STATUS,STS,TAXIEN,TERMIEN,TAXTYPE,TTYPE,TYPE
"RTN","PXRMSTA1",18,0)
 N RXTYPE,TAXNODE,TERMTYPE,Y
"RTN","PXRMSTA1",19,0)
 N CSTATUS,UPDATE,HTEXT,OSTAUS,WILD
"RTN","PXRMSTA1",20,0)
 S DA(2)=DA(1),DA(1)=DA,DA="",UPDATE=0,DELALL=0
"RTN","PXRMSTA1",21,0)
 I FILE="D" S GBL="^PXD(811.9)"
"RTN","PXRMSTA1",22,0)
 I FILE="T" S GBL="^PXRMD(811.5)"
"RTN","PXRMSTA1",23,0)
 S NODE=$G(@GBL@(DA(2),20,DA(1),0))
"RTN","PXRMSTA1",24,0)
 S TYPE=$P($G(@GBL@(DA(2),20,DA(1),0)),U)
"RTN","PXRMSTA1",25,0)
 S WILD=0
"RTN","PXRMSTA1",26,0)
 ;check for current defined statuses if none set the default values
"RTN","PXRMSTA1",27,0)
 I FILE="D",$P($G(@GBL@(DA(2),20,DA(1),5,0)),U,4)'>0 D DEFAULT(GBL,TYPE,NODE,FILE,0,.DA)
"RTN","PXRMSTA1",28,0)
 ;I FILE="T",$P($G(@GBL@(DA(2),20,DA(1),5,0)),U,4)>0 D
"RTN","PXRMSTA1",29,0)
 ;.S STS="" F  S STS=$O(@GBL@(DA(2),20,DA(1),5,"B",STS)) Q:STS=""  S DELSTS(STS)=""
"RTN","PXRMSTA1",30,0)
 ;display the current status 
"RTN","PXRMSTA1",31,0)
 D DISPLAY(GBL,UPDATE,.WILD,DELALL)
"RTN","PXRMSTA1",32,0)
 ;do inital prompt
"RTN","PXRMSTA1",33,0)
 D ADDDEL($G(ANS),GBL,FILE,TYPE,NODE,WILD,.DA,.UPDATE,.DELALL)
"RTN","PXRMSTA1",34,0)
 Q
"RTN","PXRMSTA1",35,0)
 ;
"RTN","PXRMSTA1",36,0)
ADDDEL(ANS,GBL,FILE,TYPE,NODE,WILD,DA,UPDATE,DELALL) ;
"RTN","PXRMSTA1",37,0)
 I $G(ANS)="" S ANS=$$PROMPT("S^A:ADD STATUS;D:DELETE A STATUS;S:SAVE AND QUIT;Q:QUIT WITHOUT SAVING CHANGES","S")
"RTN","PXRMSTA1",38,0)
 I "ADDASQ"'[ANS Q
"RTN","PXRMSTA1",39,0)
 I ANS="A",WILD=1 D
"RTN","PXRMSTA1",40,0)
 .W !,"Wildcard is already on the status list all possible statuses will be evaluated."
"RTN","PXRMSTA1",41,0)
 .W !,"To add a specific status please remove the wildcard first."
"RTN","PXRMSTA1",42,0)
 .S UPDATE=0 H 1
"RTN","PXRMSTA1",43,0)
 I ANS="A",WILD=0 D ADD(GBL,FILE,.CSTATUS,TYPE,.WILD,.DA,.UPDATE)
"RTN","PXRMSTA1",44,0)
 I ANS="D" D DELETE(GBL,FILE,.CSTATUS,NODE,.WILD,.DA,.UPDATE,.DELALL)
"RTN","PXRMSTA1",45,0)
 I ANS="S" S UPDATE="S"
"RTN","PXRMSTA1",46,0)
 I ANS="Q" S UPDATE="Q"
"RTN","PXRMSTA1",47,0)
 I UPDATE'="S",UPDATE'="Q" S DELALL=0 D ADDDEL("",GBL,FILE,TYPE,NODE,.WILD,.DA,.UPDATE,.DELALL)
"RTN","PXRMSTA1",48,0)
 ; only update the new record if the action is Save
"RTN","PXRMSTA1",49,0)
 I UPDATE="S" D UPDATE(FILE,.UPDATE,.CSTATUS,.DA,.DELALL)
"RTN","PXRMSTA1",50,0)
 Q
"RTN","PXRMSTA1",51,0)
 ;
"RTN","PXRMSTA1",52,0)
ADD(GBL,FILE,CSTATUS,TYPE,WILD,DA,UPDATE) ;
"RTN","PXRMSTA1",53,0)
 N ANS,STATUS,TERMIEN
"RTN","PXRMSTA1",54,0)
 ;Find what types of finding is in the term
"RTN","PXRMSTA1",55,0)
 I TYPE["PXRMD(811.5," D
"RTN","PXRMSTA1",56,0)
 .S TERMIEN=$P($G(TYPE),";")
"RTN","PXRMSTA1",57,0)
 .S TYPE=$$TERMSTAT(TERMIEN) I TYPE=0 Q
"RTN","PXRMSTA1",58,0)
 .I TYPE["PXD" S TAXTYPE=$$TAXTYPE(TERMIEN,"")
"RTN","PXRMSTA1",59,0)
 I TYPE=0 Q
"RTN","PXRMSTA1",60,0)
 ;find out what is in the taxonomy
"RTN","PXRMSTA1",61,0)
 I TYPE["PXD(811.2,",$G(TAXTYPE)="" S TAXTYPE=$$TAXNODE($P(TYPE,";"),"")
"RTN","PXRMSTA1",62,0)
 I TYPE[";" S TYPE=$P($G(TYPE),";",2)
"RTN","PXRMSTA1",63,0)
 I TYPE="PXD(811.2," D  G ADDEX
"RTN","PXRMSTA1",64,0)
 .I $G(TAXTYPE)="R" D DATA^PXRMSTA2(FILE,.DA,"RAMIS(71,","",.STATUS)
"RTN","PXRMSTA1",65,0)
 .;I $G(TAXTYPE)="P" D DATA^PXRMSTA2(FILE,.DA,"PROB","",.STATUS)
"RTN","PXRMSTA1",66,0)
 .I $G(TAXTYPE)="B" D DATA^PXRMSTA2(FILE,.DA,"TAX","",.STATUS)
"RTN","PXRMSTA1",67,0)
 ; handle drug finding items
"RTN","PXRMSTA1",68,0)
 I TYPE["PSDRUG("!(TYPE["PS(50.605")!(TYPE["PSNDF") D  G ADDEX
"RTN","PXRMSTA1",69,0)
 .D SRXTYL^PXRMRXTY(NODE,.RXTYPE)
"RTN","PXRMSTA1",70,0)
 .D DATA^PXRMSTA2(FILE,.DA,"DRUG",.RXTYPE,.STATUS)
"RTN","PXRMSTA1",71,0)
 ;radiology and orderable item finding item
"RTN","PXRMSTA1",72,0)
 D DATA^PXRMSTA2(FILE,.DA,TYPE,"",.STATUS)
"RTN","PXRMSTA1",73,0)
ADDEX ;
"RTN","PXRMSTA1",74,0)
 I '$D(STATUS) S UPDATE=0 Q
"RTN","PXRMSTA1",75,0)
 S STAT="" F  S STAT=$O(STATUS(STAT)) Q:STAT=""!(WILD)=1  D
"RTN","PXRMSTA1",76,0)
 .I STAT["*" S WILD=1 Q
"RTN","PXRMSTA1",77,0)
 .S CSTATUS(STAT)=""
"RTN","PXRMSTA1",78,0)
 I WILD=1 K CSTATUS S CSTATUS("*")=""
"RTN","PXRMSTA1",79,0)
 S UPDATE=1 D DISPLAY(GBL,UPDATE,.WILD,0)
"RTN","PXRMSTA1",80,0)
 Q
"RTN","PXRMSTA1",81,0)
 ;
"RTN","PXRMSTA1",82,0)
DEFAULT(GBL,TYPE,NODE,RFILE,DELETE,DA) ;
"RTN","PXRMSTA1",83,0)
 N ANS,FDA,FILE,IND,MSG,STATUS,TERMIEN
"RTN","PXRMSTA1",84,0)
 S FILE=""
"RTN","PXRMSTA1",85,0)
 I TYPE["PXRMD(811.5," D
"RTN","PXRMSTA1",86,0)
 .S TERMIEN=$P($G(TYPE),";")
"RTN","PXRMSTA1",87,0)
 .S TYPE=$$TERMSTAT(TERMIEN) I TYPE=0 S STATUS="" Q
"RTN","PXRMSTA1",88,0)
 .I TYPE["PXD" S TAXTYPE=$$TAXTYPE(TERMIEN,"")
"RTN","PXRMSTA1",89,0)
 I TYPE=0 Q
"RTN","PXRMSTA1",90,0)
 I TYPE["PXD(811.2,",$G(TAXTYPE)="" S TAXTYPE=$$TAXNODE($P(TYPE,";"),"")
"RTN","PXRMSTA1",91,0)
 I TYPE[";" S TYPE=$P($G(TYPE),";",2)
"RTN","PXRMSTA1",92,0)
 I TYPE="PXD(811.2," D
"RTN","PXRMSTA1",93,0)
 .I $G(TAXTYPE)="R" S FILE=70
"RTN","PXRMSTA1",94,0)
 .I $G(TAXTYPE)="P" S FILE=9000011
"RTN","PXRMSTA1",95,0)
 I FILE="",TYPE="ORD(101.43," S FILE=100
"RTN","PXRMSTA1",96,0)
 I FILE="",TYPE="RAMIS(71," S FILE=70
"RTN","PXRMSTA1",97,0)
 I FILE="",TYPE["PSDRUG("!(TYPE["PS(50.605")!(TYPE["PSNDF") D
"RTN","PXRMSTA1",98,0)
 .N DSTATUS,NAME,STATUSI,STATUSN,STATUSO,RXTYPE
"RTN","PXRMSTA1",99,0)
 .D SRXTYL^PXRMRXTY(NODE,.RXTYPE)
"RTN","PXRMSTA1",100,0)
 .I $D(RXTYPE("O")) D DEFAULT^PXRMSTAT(52,.STATUSO) D
"RTN","PXRMSTA1",101,0)
 ..F IND=1:1:STATUSO(0) S DSTATUS(STATUSO(IND))=""
"RTN","PXRMSTA1",102,0)
 .I $D(RXTYPE("I")) D DEFAULT^PXRMSTAT(55,.STATUSI) D
"RTN","PXRMSTA1",103,0)
 ..F IND=1:1:STATUSI(0) S DSTATUS(STATUSI(IND))=""
"RTN","PXRMSTA1",104,0)
 .I $D(RXTYPE("N")) D DEFAULT^PXRMSTAT("55NVA",.STATUSN) D
"RTN","PXRMSTA1",105,0)
 ..F IND=1:1:STATUSN(0) S DSTATUS(STATUSN(IND))=""
"RTN","PXRMSTA1",106,0)
 .S NAME="",IND=0 F  S NAME=$O(DSTATUS(NAME)) Q:NAME=""  D
"RTN","PXRMSTA1",107,0)
 ..S IND=IND+1 S STATUS(IND)=NAME
"RTN","PXRMSTA1",108,0)
 .S STATUS(0)=IND
"RTN","PXRMSTA1",109,0)
 I '$D(STATUS) D DEFAULT^PXRMSTAT(FILE,.STATUS)
"RTN","PXRMSTA1",110,0)
 F IND=1:1:STATUS(0) Q:$D(MSG)>0  D
"RTN","PXRMSTA1",111,0)
 .I DELETE=1 S CSTATUS(STATUS(IND))="" Q
"RTN","PXRMSTA1",112,0)
 .I $D(@GBL@(DA(2),20,DA(1),5,"B",STATUS(IND))) Q
"RTN","PXRMSTA1",113,0)
 .I RFILE="D" S FDA(811.90221,"+3,"_DA(1)_","_DA(2)_",",.01)=STATUS(IND)
"RTN","PXRMSTA1",114,0)
 .I RFILE="T" S FDA(811.54,"+3,"_DA(1)_","_DA(2)_",",.01)=STATUS(IND)
"RTN","PXRMSTA1",115,0)
 .D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMSTA1",116,0)
 I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMSTA1",117,0)
 Q
"RTN","PXRMSTA1",118,0)
 ;
"RTN","PXRMSTA1",119,0)
DELETE(GBL,FILE,CSTATUS,NODE,WILD,DA,UPDATE,DELALL) ;
"RTN","PXRMSTA1",120,0)
 N ANS,CNT,DIK,NUM,NAME,DIR,TMP,TMPARR,Y
"RTN","PXRMSTA1",121,0)
 S CNT=0,NAME="" F  S NAME=$O(CSTATUS(NAME)) Q:NAME=""  D
"RTN","PXRMSTA1",122,0)
 .S CNT=CNT+1 S TMPARR(CNT)=CNT_" - "_NAME,TMP(CNT)=NAME
"RTN","PXRMSTA1",123,0)
 S DIR(0)="LO^1:"_CNT_""
"RTN","PXRMSTA1",124,0)
 M DIR("A")=TMPARR
"RTN","PXRMSTA1",125,0)
 S DIR("A")="Select which status to be deleted"
"RTN","PXRMSTA1",126,0)
 ;S DIR("?")=HELP
"RTN","PXRMSTA1",127,0)
 D ^DIR
"RTN","PXRMSTA1",128,0)
 I $D(DTOUT)!($D(DUOUT))!($G(Y)="") Q
"RTN","PXRMSTA1",129,0)
 S CNT=0 F X=1:1:$L(Y(0)) D
"RTN","PXRMSTA1",130,0)
 .I $E(Y(0),X)="," S CNT=CNT+1,NUM=$P(Y(0),",",CNT) S NAME=TMP(NUM) K CSTATUS(NAME) I NAME["*" S WILD=0
"RTN","PXRMSTA1",131,0)
 S UPDATE=1
"RTN","PXRMSTA1",132,0)
 I FILE="T",$D(CSTATUS)'>0 S DELALL=1
"RTN","PXRMSTA1",133,0)
 ;.S DIK="^PXRMD(811.5,"_DA(2)_",20,"_DA(1)_",5," 
"RTN","PXRMSTA1",134,0)
 ;D CLEAR(GBL,FILE,.DA)
"RTN","PXRMSTA1",135,0)
 ;I $D(CSTATUS)'>0 S DA=0 F  S DA=$O(^PXRMD(811.5,DA(2),20,DA(1),5,DA)) Q:DA'>0  D ^DIK
"RTN","PXRMSTA1",136,0)
 ;I '$D(CSTATUS) D CLEAR(GBL,FILE,.DA) D DEFAULT(GBL,TYPE,NODE,FILE,1,.DA)
"RTN","PXRMSTA1",137,0)
 ;I '$D(CSTATUS),FILE="D" D DEFAULT(GBL,TYPE,NODE,FILE,1,.DA)
"RTN","PXRMSTA1",138,0)
 D DISPLAY(GBL,UPDATE,.WILD,DELALL)
"RTN","PXRMSTA1",139,0)
 Q
"RTN","PXRMSTA1",140,0)
 ;
"RTN","PXRMSTA1",141,0)
DISPLAY(GBL,UPDATE,WILD,DELALL) ;
"RTN","PXRMSTA1",142,0)
 ;display statuses defined in the 5 node or display statuses if CStatus
"RTN","PXRMSTA1",143,0)
 ;array has been loaded
"RTN","PXRMSTA1",144,0)
 N NAME
"RTN","PXRMSTA1",145,0)
 S NAME=""
"RTN","PXRMSTA1",146,0)
 I ((UPDATE=1)&(DELALL=1))!(($D(CSTATUS)'>0)&(UPDATE=0)&(GBL["811.5")&('$D(@GBL@(DA(2),20,DA(1),5)))) W !!,"No statuses defined for this finding item" W ! Q 
"RTN","PXRMSTA1",147,0)
 W !!,"Statuses already defined for this finding item:"
"RTN","PXRMSTA1",148,0)
 ;I $D(CSTATUS)'>0,UPDATE=1 D 
"RTN","PXRMSTA1",149,0)
 ;.F  S NAME=$O(@GBL@(DA(2),20,DA(1),5,"B",NAME)) Q:NAME=""  D
"RTN","PXRMSTA1",150,0)
 ;..S CSTATUS(NAME)=$O(^PXD(811.9,DA(2),20,DA(1),5,"B","NAME",""))
"RTN","PXRMSTA1",151,0)
 I $D(CSTATUS)'>0,UPDATE=0 D 
"RTN","PXRMSTA1",152,0)
 .F  S NAME=$O(@GBL@(DA(2),20,DA(1),5,"B",NAME)) Q:NAME=""  D
"RTN","PXRMSTA1",153,0)
 ..I NAME["*" S WILD=1
"RTN","PXRMSTA1",154,0)
 ..W !,NAME S CSTATUS(NAME)=$O(^PXD(811.9,DA(2),20,DA(1),5,"B","NAME",""))
"RTN","PXRMSTA1",155,0)
 I UPDATE=1 F  S NAME=$O(CSTATUS(NAME)) Q:NAME=""  W !,NAME I NAME["*" S WILD=1
"RTN","PXRMSTA1",156,0)
 W !
"RTN","PXRMSTA1",157,0)
 Q
"RTN","PXRMSTA1",158,0)
 ;
"RTN","PXRMSTA1",159,0)
 ;
"RTN","PXRMSTA1",160,0)
UPDATE(FILE,UPDATE,CSTATUS,DA,DELALL) ;
"RTN","PXRMSTA1",161,0)
 N FDA,MSG,NAME
"RTN","PXRMSTA1",162,0)
 I UPDATE="S" S UPDATE=1
"RTN","PXRMSTA1",163,0)
 I UPDATE=0,$D(CSTATUS) G EXIT
"RTN","PXRMSTA1",164,0)
 D CLEAR(GBL,FILE,.DA)
"RTN","PXRMSTA1",165,0)
 I $D(CSTATUS)'>0 S UPDATE=0,DELALL=0 G EXIT
"RTN","PXRMSTA1",166,0)
 I $D(CSTATUS)'>0 S UPDATE=1,DELALL=1 G EXIT
"RTN","PXRMSTA1",167,0)
 S NAME="" F  S NAME=$O(CSTATUS(NAME)) Q:NAME=""!($D(MSG)>0)  D
"RTN","PXRMSTA1",168,0)
 .I FILE="D" S FDA(811.90221,"+3,"_DA(1)_","_DA(2)_",",.01)=NAME
"RTN","PXRMSTA1",169,0)
 .I FILE="T" S FDA(811.54,"+3,"_DA(1)_","_DA(2)_",",.01)=NAME
"RTN","PXRMSTA1",170,0)
 .D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMSTA1",171,0)
 I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMSTA1",172,0)
EXIT ;
"RTN","PXRMSTA1",173,0)
 Q
"RTN","PXRMSTA1",174,0)
 ;
"RTN","PXRMSTA1",175,0)
PROMPT(STR,DEFAULT) ;
"RTN","PXRMSTA1",176,0)
 N DIR,HTEXT
"RTN","PXRMSTA1",177,0)
 S HTEXT(1)="Select 'A' to add a status to the current status list. Select 'D' to "
"RTN","PXRMSTA1",178,0)
 S HTEXT(2)="delete a status from the list. Select 'S' to save your changes and quit. "
"RTN","PXRMSTA1",179,0)
 S HTEXT(3)="Select 'Q' to quit without saving your changes."
"RTN","PXRMSTA1",180,0)
 S DIR(0)=STR
"RTN","PXRMSTA1",181,0)
 S DIR("B")="S"
"RTN","PXRMSTA1",182,0)
 S DIR("?")="Select one of the above option or '^' to quit. Enter ?? for detail help."
"RTN","PXRMSTA1",183,0)
 S DIR("??")=U_"D HELP^PXRMEUT(.HTEXT)"
"RTN","PXRMSTA1",184,0)
 D ^DIR
"RTN","PXRMSTA1",185,0)
 I $G(Y)="" S Y=U
"RTN","PXRMSTA1",186,0)
 Q Y
"RTN","PXRMSTA1",187,0)
 ;
"RTN","PXRMSTA1",188,0)
ASK(STR,HTEXT) ;
"RTN","PXRMSTA1",189,0)
 N DIR,HTEXT
"RTN","PXRMSTA1",190,0)
 I '$D(HTEXT) D
"RTN","PXRMSTA1",191,0)
 .S HTEXT(1)="Enter 'Y' to continue editing the Status List or '^' to Quit"
"RTN","PXRMSTA1",192,0)
 S DIR(0)="YA0"
"RTN","PXRMSTA1",193,0)
 S DIR("A")=STR
"RTN","PXRMSTA1",194,0)
 S DIR("B")="N"
"RTN","PXRMSTA1",195,0)
 S DIR("?")="Select either 'Y' or 'N' or '^' to quit. Enter ?? for detail help."
"RTN","PXRMSTA1",196,0)
 S DIR("??")=U_"D HELP^PXRMEUT(.HTEXT)"
"RTN","PXRMSTA1",197,0)
 D ^DIR
"RTN","PXRMSTA1",198,0)
 Q Y
"RTN","PXRMSTA1",199,0)
 ;
"RTN","PXRMSTA1",200,0)
TAXTYPE(TERMIEN,HELP) ;
"RTN","PXRMSTA1",201,0)
 ;use to determine the Rx type of the term and the type of taxonomy
"RTN","PXRMSTA1",202,0)
 N ARRAY,BOTH,CNT,IEN,TAXNODE,RAD,PL,RESULT,TYPE
"RTN","PXRMSTA1",203,0)
 S (BOTH,PL,RAD,RESULT)=0
"RTN","PXRMSTA1",204,0)
 S IEN=0 F  S IEN=$O(^PXRMD(811.5,TERMIEN,20,IEN)) Q:+IEN'>0  D
"RTN","PXRMSTA1",205,0)
 .S TAXNODE=$G(^PXRMD(811.5,TERMIEN,20,IEN,0))
"RTN","PXRMSTA1",206,0)
 .S ARRAY($P($P($G(TAXNODE),U),";"))=""
"RTN","PXRMSTA1",207,0)
 I $D(ARRAY)>0 S IEN=0 F  S IEN=$O(ARRAY(IEN)) Q:IEN'>0  D
"RTN","PXRMSTA1",208,0)
 .S TYPE=$$TAXNODE(IEN,$G(HELP))
"RTN","PXRMSTA1",209,0)
 .I TYPE="R" S RAD=1
"RTN","PXRMSTA1",210,0)
 .I TYPE="P" S PL=1
"RTN","PXRMSTA1",211,0)
 .I TYPE="B" S BOTH=1
"RTN","PXRMSTA1",212,0)
 I RAD=1,PL=1 S RESULT="B" Q
"RTN","PXRMSTA1",213,0)
 I RAD=1,PL=0,BOTH=0 S RESULT="R"
"RTN","PXRMSTA1",214,0)
 I RAD=0,PL=1,BOTH=0 S RESULT="P"
"RTN","PXRMSTA1",215,0)
 Q RESULT
"RTN","PXRMSTA1",216,0)
 ;
"RTN","PXRMSTA1",217,0)
TAXNODE(TAXIEN,HELP) ;
"RTN","PXRMSTA1",218,0)
 ;use to determine the type of taxonomy
"RTN","PXRMSTA1",219,0)
 N TAXNODE,ICD,CPT,ARRAY,RAD,PL,BOTH,RADM,PLM,RESULT
"RTN","PXRMSTA1",220,0)
 S (BOTH,PL,PLM,RAD,RADM,RESULT)=0
"RTN","PXRMSTA1",221,0)
 D CHECK^PXRMBXTL(TAXIEN,"")
"RTN","PXRMSTA1",222,0)
 I $D(^PXD(811.3,TAXIEN,71,"RCPTP"))>0 S RAD=1
"RTN","PXRMSTA1",223,0)
 I $D(^PXD(811.3,TAXIEN,"PDS",9000011))>0 S PL=1
"RTN","PXRMSTA1",224,0)
 I RAD=1,PL=1 S RESULT="B"
"RTN","PXRMSTA1",225,0)
 I RAD=1,PL=0 S RESULT="R"
"RTN","PXRMSTA1",226,0)
 I RAD=0,PL=1 S RESULT="P"
"RTN","PXRMSTA1",227,0)
 Q RESULT
"RTN","PXRMSTA1",228,0)
 ;
"RTN","PXRMSTA1",229,0)
 ;
"RTN","PXRMSTA1",230,0)
TERMSTAT(TIEN) ;
"RTN","PXRMSTA1",231,0)
 N CNT,FIEN,NODE
"RTN","PXRMSTA1",232,0)
 S (CNT,FIEN)=0
"RTN","PXRMSTA1",233,0)
 S TYPE=0 F  S FIEN=$O(^PXRMD(811.5,TIEN,20,FIEN)) Q:+FIEN=0!(CNT=1)  D
"RTN","PXRMSTA1",234,0)
 . S NODE=$G(^PXRMD(811.5,TIEN,20,FIEN,0)),TYPE=$P(NODE,U),CNT=CNT+1
"RTN","PXRMSTA1",235,0)
 Q TYPE
"RTN","PXRMSTA1",236,0)
 ;
"RTN","PXRMSTA1",237,0)
WARN ;
"RTN","PXRMSTA1",238,0)
 ;If the whole entry is being deleted don't give the warning.
"RTN","PXRMSTA1",239,0)
 I $G(PXRMDEFD) Q
"RTN","PXRMSTA1",240,0)
 I $G(PXRMTMD) Q
"RTN","PXRMSTA1",241,0)
 ;Do not execute as part of exchange.
"RTN","PXRMSTA1",242,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMSTA1",243,0)
 N TEXT
"RTN","PXRMSTA1",244,0)
 S TEXT(1)=""
"RTN","PXRMSTA1",245,0)
 S TEXT(2)="Since you changed the value of Rx Type, you should review the status list"
"RTN","PXRMSTA1",246,0)
 S TEXT(3)="for the finding to make sure it is still appropriate."
"RTN","PXRMSTA1",247,0)
 S TEXT(4)=""
"RTN","PXRMSTA1",248,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMSTA1",249,0)
 Q
"RTN","PXRMSTA1",250,0)
 ;
"RTN","PXRMSTA1",251,0)
 ;
"RTN","PXRMSTA2")
0^87^B23595910
"RTN","PXRMSTA2",1,0)
PXRMSTA2 ; SLC/AGP - Routines for building status list. ;9/26/2005
"RTN","PXRMSTA2",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMSTA2",3,0)
 ;
"RTN","PXRMSTA2",4,0)
DATA(FILE,DA,TYPE,RXTYPE,STATUS) ;
"RTN","PXRMSTA2",5,0)
 ; this sub routine get the list of statuses from the apporiate global
"RTN","PXRMSTA2",6,0)
 ;
"RTN","PXRMSTA2",7,0)
 N ARRAY,ARRAY1,CNT,CODE,DEF,OUTPUT,SARRAY,STAT
"RTN","PXRMSTA2",8,0)
LOOP ;
"RTN","PXRMSTA2",9,0)
 ;get build status list into a local array from each pharmacy type of
"RTN","PXRMSTA2",10,0)
 ;finding item
"RTN","PXRMSTA2",11,0)
 I TYPE="DRUG" D
"RTN","PXRMSTA2",12,0)
 .I $D(RXTYPE("I"))>0 D
"RTN","PXRMSTA2",13,0)
 . . D FIELD^DID(55.06,28,"","POINTER","SARRAY")
"RTN","PXRMSTA2",14,0)
 . . D ARRAYFOR(.SARRAY,.ARRAY,"I") K CODE
"RTN","PXRMSTA2",15,0)
 . . D FIELD^DID(55.01,100,"","POINTER","SARRAY")
"RTN","PXRMSTA2",16,0)
 . . D ARRAYFOR(.SARRAY,.ARRAY1,"I") K CODE
"RTN","PXRMSTA2",17,0)
 . . D COMPARE(.ARRAY,.ARRAY1,"I",.OUTPUT)
"RTN","PXRMSTA2",18,0)
 . I $D(RXTYPE("O"))>0 D
"RTN","PXRMSTA2",19,0)
 . . K ARRAY,ARRAY1,CODE
"RTN","PXRMSTA2",20,0)
 . . D FIELD^DID(52,100,"","POINTER","SARRAY")
"RTN","PXRMSTA2",21,0)
 . . D ARRAYFOR(.SARRAY,.ARRAY,"O") K CODE
"RTN","PXRMSTA2",22,0)
 . . I $D(OUTPUT)>0 K ARRAY1 M ARRAY1=OUTPUT K OUTPUT D COMPARE(.ARRAY,.ARRAY1,"",.OUTPUT)
"RTN","PXRMSTA2",23,0)
 . . E  M OUTPUT=ARRAY
"RTN","PXRMSTA2",24,0)
 . I $D(RXTYPE("N"))>0 D
"RTN","PXRMSTA2",25,0)
 . . K ARRAY,ARRAY1,CODE
"RTN","PXRMSTA2",26,0)
 . . D FIELD^DID(55.05,5,"","POINTER","SARRAY")
"RTN","PXRMSTA2",27,0)
 . . S SARRAY("POINTER")=SARRAY("POINTER")_"0:ACTIVE;"
"RTN","PXRMSTA2",28,0)
 . . D ARRAYFOR(.SARRAY,.ARRAY,"N") K CODE
"RTN","PXRMSTA2",29,0)
 . . I $D(OUTPUT)>0 K ARRAY1 M ARRAY1=OUTPUT K OUTPUT D COMPARE(.ARRAY,.ARRAY1,"",.OUTPUT)
"RTN","PXRMSTA2",30,0)
 . . E  M OUTPUT=ARRAY
"RTN","PXRMSTA2",31,0)
 ;
"RTN","PXRMSTA2",32,0)
 I TYPE="PROB" S OUTPUT("ACTIVE")="ACTIVE",OUTPUT("INACTIVE")="INACTIVE"
"RTN","PXRMSTA2",33,0)
 I TYPE="ORD(101.43," D
"RTN","PXRMSTA2",34,0)
 . S CNT=0,STAT="" F  S STAT=$O(^ORD(100.01,"B",STAT)) Q:STAT=""  D
"RTN","PXRMSTA2",35,0)
 . . S CNT=CNT+1 S OUTPUT(STAT)=STAT
"RTN","PXRMSTA2",36,0)
 I TYPE="RAMIS(71,"!(TYPE="TAX") D
"RTN","PXRMSTA2",37,0)
 . S TYPE="RAMIS(71,"
"RTN","PXRMSTA2",38,0)
 . S CNT=0,STAT="" F  S STAT=$O(^RA(72,"B",STAT)) Q:STAT=""  D
"RTN","PXRMSTA2",39,0)
 . . S CNT=CNT+1 S OUTPUT(STAT)=STAT
"RTN","PXRMSTA2",40,0)
 .;I TYPE'="TAX" Q
"RTN","PXRMSTA2",41,0)
 .;I '$D(OUTPUT("ACTIVE")) S OUTPUT("ACTIVE")="ACTIVE"
"RTN","PXRMSTA2",42,0)
 .;I '$D(OUTPUT("INACTIVE")) S OUTPUT("INACTIVE")="INACTIVE"
"RTN","PXRMSTA2",43,0)
 D SELECT(.OUTPUT,FILE,TYPE,.STATUS,.DA)
"RTN","PXRMSTA2",44,0)
 ;
"RTN","PXRMSTA2",45,0)
 Q
"RTN","PXRMSTA2",46,0)
 ;
"RTN","PXRMSTA2",47,0)
COMPARE(ARRAY,ARRAY1,TYPE,OUTPUT) ;
"RTN","PXRMSTA2",48,0)
 ; this sub routine is use to combine the InPatient and 
"RTN","PXRMSTA2",49,0)
 ; Both Pharmacy type into one array
"RTN","PXRMSTA2",50,0)
 N ARY,CNT,COMP,NODE
"RTN","PXRMSTA2",51,0)
 K OUTPUT
"RTN","PXRMSTA2",52,0)
 S COMP=""
"RTN","PXRMSTA2",53,0)
 ;
"RTN","PXRMSTA2",54,0)
 ;inpatient pharmacy list is built from two seperated fields in file #55
"RTN","PXRMSTA2",55,0)
 ;this is used to combined the two fields into one array
"RTN","PXRMSTA2",56,0)
 I $G(TYPE)="I" D
"RTN","PXRMSTA2",57,0)
 . F  S COMP=$O(ARRAY(COMP)) Q:COMP=""  D
"RTN","PXRMSTA2",58,0)
 . . S OUTPUT(COMP)=ARRAY(COMP)
"RTN","PXRMSTA2",59,0)
 . S (COMP)="" F  S COMP=$O(ARRAY1(COMP)) Q:COMP=""  D
"RTN","PXRMSTA2",60,0)
 . . I '$D(OUTPUT(COMP)) S OUTPUT(COMP)=ARRAY1(COMP)
"RTN","PXRMSTA2",61,0)
 ;
"RTN","PXRMSTA2",62,0)
 ;this section is uses to combine the different RX Types into one array
"RTN","PXRMSTA2",63,0)
 I $G(TYPE)'="I" D
"RTN","PXRMSTA2",64,0)
 . F  S COMP=$O(ARRAY(COMP)) Q:COMP=""  D
"RTN","PXRMSTA2",65,0)
 . . S NODE=$G(ARRAY(COMP))
"RTN","PXRMSTA2",66,0)
 . . S OUTPUT(COMP)=NODE
"RTN","PXRMSTA2",67,0)
 . S COMP="" F  S COMP=$O(ARRAY1(COMP)) Q:COMP=""  D
"RTN","PXRMSTA2",68,0)
 . . S NODE=$G(ARRAY1(COMP))
"RTN","PXRMSTA2",69,0)
 . . I '$D(OUTPUT(COMP)) S OUTPUT(COMP)=NODE Q
"RTN","PXRMSTA2",70,0)
 . . I $D(OUTPUT(COMP)) S $P(OUTPUT(COMP),U,2)=$P(OUTPUT(COMP),U,2)_$P(NODE,U,2)
"RTN","PXRMSTA2",71,0)
 Q
"RTN","PXRMSTA2",72,0)
 ;
"RTN","PXRMSTA2",73,0)
ARRAYFOR(ARRAY,OUTPUT,DEF) ;
"RTN","PXRMSTA2",74,0)
 ;this sub routine is use to format that array data into a standard 
"RTN","PXRMSTA2",75,0)
 ;format
"RTN","PXRMSTA2",76,0)
 ;
"RTN","PXRMSTA2",77,0)
 N CNT,COMP,PIECE,STR,TYPE
"RTN","PXRMSTA2",78,0)
 S PIECE=0
"RTN","PXRMSTA2",79,0)
 ;
"RTN","PXRMSTA2",80,0)
 ;determine the number of pieces minus one in the string
"RTN","PXRMSTA2",81,0)
 F CNT=1:1:$L(ARRAY("POINTER")) I $E(ARRAY("POINTER"),CNT)=";" S PIECE=PIECE+1 I PIECE>0 D
"RTN","PXRMSTA2",82,0)
 . S STR=$P($P($G(ARRAY("POINTER")),";",PIECE),":",2)
"RTN","PXRMSTA2",83,0)
 . S OUTPUT($P($P($G(ARRAY("POINTER")),";",PIECE),":",2))=STR_U_$G(DEF)
"RTN","PXRMSTA2",84,0)
 ;
"RTN","PXRMSTA2",85,0)
 ;add last piece in the string to the array
"RTN","PXRMSTA2",86,0)
 I PIECE>0 S PIECE=PIECE+1 D
"RTN","PXRMSTA2",87,0)
 . I $P($G(ARRAY("POINTER")),";",PIECE)'="" D
"RTN","PXRMSTA2",88,0)
 . . S OUTPUT($P($P($G(ARRAY("POINTER")),";",PIECE),":",2))=$P($P($G(ARRAY("POINTER")),";",PIECE),":",2)_U_$G(DEF)
"RTN","PXRMSTA2",89,0)
 Q
"RTN","PXRMSTA2",90,0)
 ;
"RTN","PXRMSTA2",91,0)
SELECT(ARRAY,FILE,TYPE,STATUS,DA) ;
"RTN","PXRMSTA2",92,0)
 ; this sub routine is use to sort through the formated array and 
"RTN","PXRMSTA2",93,0)
 ; set up the DIR call
"RTN","PXRMSTA2",94,0)
 ;
"RTN","PXRMSTA2",95,0)
 N CHECK,CNT,CNT1,DIR,DUOUT,DTOUT,EMPTY,EXTR
"RTN","PXRMSTA2",96,0)
 N HELP,LENGTH,NODE,STAT,STR,TEXT,TMP,X,Y
"RTN","PXRMSTA2",97,0)
 N TMPARR,NUM
"RTN","PXRMSTA2",98,0)
DISPLAY ;
"RTN","PXRMSTA2",99,0)
 I TYPE="DRUG" S TEXT="Select a Medication Status or enter '^' to Quit",HELP="Select a status from the Medication Status list or '^' to Quit"
"RTN","PXRMSTA2",100,0)
 I TYPE="ORD(101.43," S TEXT="Select a Order Status from or enter '^' to Quit",HELP="Select a Order Status from the status list or '^' to Quit"
"RTN","PXRMSTA2",101,0)
 I TYPE="RAMIS(71," S TEXT="Select a Radiology Procedure Status or enter '^' to Quit",HELP="Select a Radiology Procedure Status from the status list or '^' to Quit"
"RTN","PXRMSTA2",102,0)
 ;I TYPE="TAX" S TEXT="Select a Taxonomy Status or enter '^' to Quit",HELP="Select a Taxonomy Status from the status list or '^' to Quit"
"RTN","PXRMSTA2",103,0)
 ;I TYPE="PROB" S TEXT="Select a Problem Status or enter '^' to Quit",HELP="Select a Taxonomy Status from the status list or '^' to Quit"
"RTN","PXRMSTA2",104,0)
 ;
"RTN","PXRMSTA2",105,0)
 S CNT=0,CNT1=0,STAT=""
"RTN","PXRMSTA2",106,0)
 ;if text is not entered into the prompt or no match is found display
"RTN","PXRMSTA2",107,0)
 ;entire list of statuses for this finding item
"RTN","PXRMSTA2",108,0)
 ;
"RTN","PXRMSTA2",109,0)
 ;Add wildcard character
"RTN","PXRMSTA2",110,0)
 S CNT=CNT+1,CNT1=CNT1+1,TMP(CNT)=CNT_" - * (WildCard)",TMPARR(CNT)="*"
"RTN","PXRMSTA2",111,0)
 ;Add status from file to the selectable list
"RTN","PXRMSTA2",112,0)
 F  S STAT=$O(ARRAY(STAT)) Q:STAT=""  D
"RTN","PXRMSTA2",113,0)
 . S NODE=$G(ARRAY(STAT))
"RTN","PXRMSTA2",114,0)
 . S STR=$P(NODE,U)
"RTN","PXRMSTA2",115,0)
 . S CNT=CNT+1,CNT1=CNT1+1
"RTN","PXRMSTA2",116,0)
 . I TYPE="DRUG" S TMP(CNT)=CNT_" - "_STR_"("_$P(NODE,U,2)_")",TMPARR(CNT)=STR
"RTN","PXRMSTA2",117,0)
 . E  S TMP(CNT)=CNT_" - "_STR,TMPARR(CNT)=STR
"RTN","PXRMSTA2",118,0)
 ;
"RTN","PXRMSTA2",119,0)
 S DIR(0)="LO^1:"_CNT_""
"RTN","PXRMSTA2",120,0)
 M DIR("A")=TMP
"RTN","PXRMSTA2",121,0)
 S DIR("A")=TEXT
"RTN","PXRMSTA2",122,0)
 S DIR("?")=HELP
"RTN","PXRMSTA2",123,0)
 D ^DIR
"RTN","PXRMSTA2",124,0)
 I $D(DTOUT)!($D(DUOUT))!($G(Y)="") K STATUS Q
"RTN","PXRMSTA2",125,0)
 S CNT=0 F X=1:1:$L(Y(0)) D
"RTN","PXRMSTA2",126,0)
 .I $E(Y(0),X)="," S CNT=CNT+1,NUM=$P(Y(0),",",CNT),STATUS(TMPARR(NUM))=""
"RTN","PXRMSTA2",127,0)
 ;S STATUS=Y(0)
"RTN","PXRMSTA2",128,0)
 ;I STATUS="WildCard" S STATUS="*"
"RTN","PXRMSTA2",129,0)
 Q
"RTN","PXRMSTA2",130,0)
 ;
"RTN","PXRMSTAT")
0^57^B4309689
"RTN","PXRMSTAT",1,0)
PXRMSTAT ; SLC/PKR - Routines for dealing with status. ;07/11/2005
"RTN","PXRMSTAT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMSTAT",3,0)
 ;
"RTN","PXRMSTAT",4,0)
 ;===============================================
"RTN","PXRMSTAT",5,0)
DEFAULT(FILENUM,STATUSA) ;Given the file number return the default
"RTN","PXRMSTAT",6,0)
 ;statuses.
"RTN","PXRMSTAT",7,0)
 ;Outpatient medications
"RTN","PXRMSTAT",8,0)
 I FILENUM=52 D  Q
"RTN","PXRMSTAT",9,0)
 . S STATUSA(0)=5,STATUSA(1)="ACTIVE",STATUSA(2)="DISCONTINUED"
"RTN","PXRMSTAT",10,0)
 . S STATUSA(3)="DISCONTINUED (EDIT)",STATUSA(4)="EXPIRED"
"RTN","PXRMSTAT",11,0)
 . S STATUSA(5)="SUSPENDED"
"RTN","PXRMSTAT",12,0)
 ;
"RTN","PXRMSTAT",13,0)
 ;Inpatient medications
"RTN","PXRMSTAT",14,0)
 I FILENUM=55 D  Q
"RTN","PXRMSTAT",15,0)
 . S STATUSA(0)=4,STATUSA(1)="ACTIVE",STATUSA(2)="DISCONTINUED (EDIT)"
"RTN","PXRMSTAT",16,0)
 . S STATUSA(3)="DISCONTINUED (RENEWAL)",STATUSA(4)="EXPIRED"
"RTN","PXRMSTAT",17,0)
 ;
"RTN","PXRMSTAT",18,0)
 ;Non-VA meds
"RTN","PXRMSTAT",19,0)
 I FILENUM="55NVA" D  Q
"RTN","PXRMSTAT",20,0)
 . S STATUSA(0)=1,STATUSA(1)="ACTIVE"
"RTN","PXRMSTAT",21,0)
 ;
"RTN","PXRMSTAT",22,0)
 ;Radiology procedures
"RTN","PXRMSTAT",23,0)
 I FILENUM=70 D  Q
"RTN","PXRMSTAT",24,0)
 .  S STATUSA(0)=1,STATUSA(1)="COMPLETE"
"RTN","PXRMSTAT",25,0)
 ;
"RTN","PXRMSTAT",26,0)
 ;Orders
"RTN","PXRMSTAT",27,0)
 I FILENUM=100 D  Q
"RTN","PXRMSTAT",28,0)
 .  S STATUSA(0)=2,STATUSA(1)="ACTIVE",STATUSA(2)="PENDING"
"RTN","PXRMSTAT",29,0)
 ;
"RTN","PXRMSTAT",30,0)
 ;Problem List
"RTN","PXRMSTAT",31,0)
 I FILENUM=9000011 D  Q
"RTN","PXRMSTAT",32,0)
 . S STATUSA(0)=1,STATUSA(1)="A"
"RTN","PXRMSTAT",33,0)
 Q
"RTN","PXRMSTAT",34,0)
 ;
"RTN","PXRMSTAT",35,0)
 ;===============================================
"RTN","PXRMSTAT",36,0)
GETSTATI(FILENUM,FINDPA,STATUSA) ;Return the list of statuses to search
"RTN","PXRMSTAT",37,0)
 ;for in the array STATUSA. STATUSA(0) will contain the number found.
"RTN","PXRMSTAT",38,0)
 N IND,NUM
"RTN","PXRMSTAT",39,0)
 K STATUSA
"RTN","PXRMSTAT",40,0)
 S (IND,NUM)=0
"RTN","PXRMSTAT",41,0)
 ;Do Problem List first because it is a special case.
"RTN","PXRMSTAT",42,0)
 I FILENUM=9000011 D  Q
"RTN","PXRMSTAT",43,0)
 . N STAT
"RTN","PXRMSTAT",44,0)
 . F  S IND=+$O(FINDPA(5,IND)) Q:IND=0  D
"RTN","PXRMSTAT",45,0)
 .. S STAT=$S(FINDPA(5,IND)="ACTIVE":"A",FINDPA(5,IND)="INACTIVE":"I",1:"")
"RTN","PXRMSTAT",46,0)
 .. I STAT'="" S NUM=NUM+1,STATUSA(NUM)=STAT
"RTN","PXRMSTAT",47,0)
 . I NUM>0 S STATUSA(0)=NUM
"RTN","PXRMSTAT",48,0)
 . I NUM=0 S STATUSA(0)=1,STATUSA(1)="A"
"RTN","PXRMSTAT",49,0)
 .;If the status multiple is not defined check USE INACTIVE PROBLEMS
"RTN","PXRMSTAT",50,0)
 . I '$D(FINDPA(5)),$P($G(FINDPA(0)),U,9) S STATUSA(0)=2,STATUSA(2)="I"
"RTN","PXRMSTAT",51,0)
 ;
"RTN","PXRMSTAT",52,0)
 ;See if a status list is defined, if it is use it.
"RTN","PXRMSTAT",53,0)
 F  S IND=+$O(FINDPA(5,IND)) Q:IND=0  D
"RTN","PXRMSTAT",54,0)
 . S NUM=NUM+1,STATUSA(NUM)=FINDPA(5,IND)
"RTN","PXRMSTAT",55,0)
 I NUM>0 S STATUSA(0)=NUM Q
"RTN","PXRMSTAT",56,0)
 ;
"RTN","PXRMSTAT",57,0)
 ;If no list is defined set the default statuses.
"RTN","PXRMSTAT",58,0)
 D DEFAULT(FILENUM,.STATUSA)
"RTN","PXRMSTAT",59,0)
 Q
"RTN","PXRMSTAT",60,0)
 ;
"RTN","PXRMTAX")
0^140^B60240316
"RTN","PXRMTAX",1,0)
PXRMTAX ; SLC/PKR - Handle taxonomy finding. ;07/17/2006
"RTN","PXRMTAX",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMTAX",3,0)
 ;
"RTN","PXRMTAX",4,0)
 ;==================================================
"RTN","PXRMTAX",5,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate taxonomy findings.
"RTN","PXRMTAX",6,0)
 N FIEVT,FINDPA,FINDING
"RTN","PXRMTAX",7,0)
 N TAXIEN
"RTN","PXRMTAX",8,0)
 S TAXIEN=""
"RTN","PXRMTAX",9,0)
 F  S TAXIEN=$O(DEFARR("E",ENODE,TAXIEN)) Q:+TAXIEN=0  D
"RTN","PXRMTAX",10,0)
 . S FINDING=""
"RTN","PXRMTAX",11,0)
 . F  S FINDING=$O(DEFARR("E",ENODE,TAXIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMTAX",12,0)
 .. K FINDPA
"RTN","PXRMTAX",13,0)
 .. M FINDPA=DEFARR(20,FINDING)
"RTN","PXRMTAX",14,0)
 .. K FIEVT
"RTN","PXRMTAX",15,0)
 .. D FIEVAL(DFN,TAXIEN,.FINDPA,.FIEVT)
"RTN","PXRMTAX",16,0)
 .. M FIEVAL(FINDING)=FIEVT
"RTN","PXRMTAX",17,0)
 Q
"RTN","PXRMTAX",18,0)
 ;
"RTN","PXRMTAX",19,0)
 ;==================================================
"RTN","PXRMTAX",20,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Evaluate taxonomy terms for
"RTN","PXRMTAX",21,0)
 ;building patient lists.
"RTN","PXRMTAX",22,0)
 N PFIND3,PFIND4,PFINDPA,TAXIEN
"RTN","PXRMTAX",23,0)
 N TFINDPA,TFINDING
"RTN","PXRMTAX",24,0)
 S TAXIEN=""
"RTN","PXRMTAX",25,0)
 F  S TAXIEN=$O(TERMARR("E",ENODE,TAXIEN)) Q:+TAXIEN=0  D
"RTN","PXRMTAX",26,0)
 . S TFINDING=""
"RTN","PXRMTAX",27,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,TAXIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMTAX",28,0)
 .. K PFINDPA,TFINDPA
"RTN","PXRMTAX",29,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMTAX",30,0)
 ..;Set the finding parameters.
"RTN","PXRMTAX",31,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMTAX",32,0)
 .. D GPLIST(TAXIEN,.PFINDPA,PLIST)
"RTN","PXRMTAX",33,0)
 Q
"RTN","PXRMTAX",34,0)
 ;
"RTN","PXRMTAX",35,0)
 ;==================================================
"RTN","PXRMTAX",36,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate taxonomy
"RTN","PXRMTAX",37,0)
 ;terms.
"RTN","PXRMTAX",38,0)
 N FIEVT,PFINDPA
"RTN","PXRMTAX",39,0)
 N TAXIEN,TFINDPA,TFINDING
"RTN","PXRMTAX",40,0)
 S TAXIEN=""
"RTN","PXRMTAX",41,0)
 F  S TAXIEN=$O(TERMARR("E",ENODE,TAXIEN)) Q:+TAXIEN=0  D
"RTN","PXRMTAX",42,0)
 . S TFINDING=""
"RTN","PXRMTAX",43,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,TAXIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMTAX",44,0)
 .. K FIEVT,PFINDPA,TFINDPA
"RTN","PXRMTAX",45,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMTAX",46,0)
 ..;Set the finding parameters.
"RTN","PXRMTAX",47,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMTAX",48,0)
 .. D FIEVAL(DFN,TAXIEN,.PFINDPA,.FIEVT)
"RTN","PXRMTAX",49,0)
 .. M TFIEVAL(TFINDING)=FIEVT
"RTN","PXRMTAX",50,0)
 Q
"RTN","PXRMTAX",51,0)
 ;
"RTN","PXRMTAX",52,0)
 ;==================================================
"RTN","PXRMTAX",53,0)
FIEVAL(DFN,TAXIEN,FINDPA,FIEVAL) ;
"RTN","PXRMTAX",54,0)
 N BDT,CASESEN,COND,CONVAL,DAS,DATE,EDT,ENS,FIEVT,FILENUM,FLIST
"RTN","PXRMTAX",55,0)
 N ICOND,IND,INS,INVFD
"RTN","PXRMTAX",56,0)
 N NFOUND,NGET,NICD0,NICD9,NCPT,NOCC,NP,NRCPT,PLS
"RTN","PXRMTAX",57,0)
 N RAS,SAVE,SDIR,STATUSA,TAXARR,TLIST,UCIFS,USEINP,VSLIST
"RTN","PXRMTAX",58,0)
 ;Set the finding search parameters.
"RTN","PXRMTAX",59,0)
 D SSPAR^PXRMUTIL(FINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMTAX",60,0)
 S INVFD=$P(FINDPA(0),U,16)
"RTN","PXRMTAX",61,0)
 D TAX^PXRMLDR(TAXIEN,.TAXARR)
"RTN","PXRMTAX",62,0)
 I TAXARR(0)["NO LOCK" S FIEVAL(1)=0 Q
"RTN","PXRMTAX",63,0)
 D SETVAR^PXRMTAXS(.TAXARR,.ENS,.INS,.NICD0,.NICD9,.NCPT,.NRCPT,.PLS,.RAS)
"RTN","PXRMTAX",64,0)
 D SCPAR^PXRMCOND(.FINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMTAX",65,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMTAX",66,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMTAX",67,0)
 S NGET=$S(UCIFS:"*",1:NOCC)
"RTN","PXRMTAX",68,0)
 ;
"RTN","PXRMTAX",69,0)
 I (NICD0>0),INS D FPDAT^PXRMDGPT(DFN,.TAXARR,NGET,SDIR,BDT,EDT,"ICD0",.TLIST)
"RTN","PXRMTAX",70,0)
 ;
"RTN","PXRMTAX",71,0)
 I (NICD9>0),INS D FPDAT^PXRMDGPT(DFN,.TAXARR,NGET,SDIR,BDT,EDT,"ICD9",.TLIST)
"RTN","PXRMTAX",72,0)
 I (NICD9>0),ENS D FPDAT^PXRMVPOV(DFN,.TAXARR,NGET,SDIR,BDT,EDT,.TLIST)
"RTN","PXRMTAX",73,0)
 I (NICD9>0),PLS D
"RTN","PXRMTAX",74,0)
 . K STATUSA
"RTN","PXRMTAX",75,0)
 . D GETSTATI^PXRMSTAT(9000011,.FINDPA,.STATUSA)
"RTN","PXRMTAX",76,0)
 . D FPDAT^PXRMPROB(DFN,.TAXARR,NGET,SDIR,BDT,EDT,.STATUSA,.TLIST)
"RTN","PXRMTAX",77,0)
 ;
"RTN","PXRMTAX",78,0)
 I (NCPT>0),(ENS) D FPDAT^PXRMVCPT(DFN,.TAXARR,NGET,SDIR,BDT,EDT,.TLIST)
"RTN","PXRMTAX",79,0)
 ;
"RTN","PXRMTAX",80,0)
 I (NRCPT>0),(RAS) D
"RTN","PXRMTAX",81,0)
 . K STATUSA
"RTN","PXRMTAX",82,0)
 . D GETSTATI^PXRMSTAT(70,.FINDPA,.STATUSA)
"RTN","PXRMTAX",83,0)
 . D FPDAT^PXRMRCPT(DFN,.TAXARR,NOCC,BDT,EDT,.STATUSA,.TLIST)
"RTN","PXRMTAX",84,0)
 ;
"RTN","PXRMTAX",85,0)
 ;Process the found list, returning the NOCC most recent results.
"RTN","PXRMTAX",86,0)
 S NFOUND=0
"RTN","PXRMTAX",87,0)
 S DATE=""
"RTN","PXRMTAX",88,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMTAX",89,0)
 . S IND=0
"RTN","PXRMTAX",90,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NOCC)  D
"RTN","PXRMTAX",91,0)
 .. S FILENUM=0
"RTN","PXRMTAX",92,0)
 .. F  S FILENUM=$O(TLIST(DATE,IND,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMTAX",93,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMTAX",94,0)
 ... S DAS=$P(TLIST(DATE,IND,FILENUM),U,1)
"RTN","PXRMTAX",95,0)
 ... S FLIST(NFOUND)=TLIST(DATE,IND,FILENUM)
"RTN","PXRMTAX",96,0)
 ... S FLIST(NFOUND)=DAS_U_DATE_U_FILENUM_U_$P(TLIST(DATE,IND,FILENUM),U,2,10)
"RTN","PXRMTAX",97,0)
 I NFOUND=0 S FIEVAL=0 Q
"RTN","PXRMTAX",98,0)
 S NP=0
"RTN","PXRMTAX",99,0)
 F IND=1:1:NFOUND Q:NP=NOCC  D
"RTN","PXRMTAX",100,0)
 . S DAS=$P(FLIST(IND),U,1)
"RTN","PXRMTAX",101,0)
 . S FILENUM=$P(FLIST(IND),U,3)
"RTN","PXRMTAX",102,0)
 . D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVT)
"RTN","PXRMTAX",103,0)
 . I $D(FIEVT("VISIT")) D GETDATA^PXRMVSIT(FIEVT("VISIT"),.FIEVT,0)
"RTN","PXRMTAX",104,0)
 . S CONVAL=$S(COND'="":$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.FIEVT),1:1)
"RTN","PXRMTAX",105,0)
 . S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMTAX",106,0)
 . I SAVE D
"RTN","PXRMTAX",107,0)
 .. S NP=NP+1
"RTN","PXRMTAX",108,0)
 .. S FIEVAL(NP)=CONVAL
"RTN","PXRMTAX",109,0)
 .. S FIEVAL(NP,"CONDITION")=CONVAL
"RTN","PXRMTAX",110,0)
 .. S FIEVAL(NP,"CODEP")=$P(FLIST(IND),U,4)
"RTN","PXRMTAX",111,0)
 .. S FIEVAL(NP,"DAS")=DAS
"RTN","PXRMTAX",112,0)
 .. S FIEVAL(NP,"DATE")=$P(FLIST(IND),U,2)
"RTN","PXRMTAX",113,0)
 .. S FIEVAL(NP,"FILE NUMBER")=FILENUM
"RTN","PXRMTAX",114,0)
 .. S FIEVAL(NP,"FILE SPECIFIC")=$P(FLIST(IND),U,5,10)
"RTN","PXRMTAX",115,0)
 .. S FIEVAL(NP,"FINDING")=TAXIEN_";PXD(811.2,"
"RTN","PXRMTAX",116,0)
 .. M FIEVAL(NP)=FIEVT
"RTN","PXRMTAX",117,0)
 .. I $G(PXRMDEBG) M FIEVAL(NP,"CSUB")=FIEVT
"RTN","PXRMTAX",118,0)
 ;Save the finding result.
"RTN","PXRMTAX",119,0)
 D SFRES^PXRMUTIL(SDIR,NP,.FIEVAL)
"RTN","PXRMTAX",120,0)
 Q
"RTN","PXRMTAX",121,0)
 ;
"RTN","PXRMTAX",122,0)
 ;==================================================
"RTN","PXRMTAX",123,0)
GPLIST(TAXIEN,FINDPA,PLIST) ;Get the list of patients with
"RTN","PXRMTAX",124,0)
 ;taxonomy TAXIEN. Return the list as:
"RTN","PXRMTAX",125,0)
 ; ^TMP($J,PLIST,T/F,DFN,TAXIEN,COUNT,FILE NUMBER)
"RTN","PXRMTAX",126,0)
 ; =DAS^DATE^CODE^TYPE^file specific. TAXIEN is like the item for
"RTN","PXRMTAX",127,0)
 ;non-taxonomy findings.
"RTN","PXRMTAX",128,0)
 N BDT,COND,DATE,DFN,DLIST,EDT,ENS,FILENUM
"RTN","PXRMTAX",129,0)
 N ICOND,IND,INS,IPLIST
"RTN","PXRMTAX",130,0)
 N NF,NFOUND,NICD0,NICD9,NCPT,NF,NGET,NOCC,NRCPT
"RTN","PXRMTAX",131,0)
 N PLS,RAS,STATUSA,UCIFS,USEINP,TAXARR,TF,TLIST,VSLIST
"RTN","PXRMTAX",132,0)
 ;Set the finding search parameters.
"RTN","PXRMTAX",133,0)
 S TLIST="GPLIST_PXRMTAX"
"RTN","PXRMTAX",134,0)
 K ^TMP($J,TLIST)
"RTN","PXRMTAX",135,0)
 D SSPAR^PXRMUTIL(FINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMTAX",136,0)
 D TAX^PXRMLDR(TAXIEN,.TAXARR)
"RTN","PXRMTAX",137,0)
 D SETVAR^PXRMTAXS(.TAXARR,.ENS,.INS,.NICD0,.NICD9,.NCPT,.NRCPT,.PLS,.RAS)
"RTN","PXRMTAX",138,0)
 D SCPAR^PXRMCOND(.FINDPA,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMTAX",139,0)
 ;
"RTN","PXRMTAX",140,0)
 I (NICD0>0),INS D GPLIST^PXRMDGPT(.TAXARR,NOCC,BDT,EDT,"ICD0",TLIST)
"RTN","PXRMTAX",141,0)
 ;
"RTN","PXRMTAX",142,0)
 I (NICD9>0),INS D GPLIST^PXRMDGPT(.TAXARR,NOCC,BDT,EDT,"ICD9",TLIST)
"RTN","PXRMTAX",143,0)
 I (NICD9>0),PLS D 
"RTN","PXRMTAX",144,0)
 . K STATUSA
"RTN","PXRMTAX",145,0)
 . D GETSTATI^PXRMSTAT(9000011,.FINDPA,.STATUSA)
"RTN","PXRMTAX",146,0)
 . D GPLIST^PXRMPROB(.TAXARR,NOCC,BDT,EDT,.STATUSA,TLIST)
"RTN","PXRMTAX",147,0)
 I (NICD9>0),ENS D GPLIST^PXRMVPOV(.TAXARR,NOCC,BDT,EDT,TLIST)
"RTN","PXRMTAX",148,0)
 ;
"RTN","PXRMTAX",149,0)
 I (NCPT>0),ENS D GPLIST^PXRMVCPT(.TAXARR,NOCC,BDT,EDT,TLIST)
"RTN","PXRMTAX",150,0)
 ;
"RTN","PXRMTAX",151,0)
 I (NRCPT>0),RAS D GPLIST^PXRMRCPT(.TAXARR,.FINDPA,TLIST)
"RTN","PXRMTAX",152,0)
 ;Conditions for taxonomies only apply to radiology findings, this
"RTN","PXRMTAX",153,0)
 ;is taken care of in PXRMRCPT.
"RTN","PXRMTAX",154,0)
 ;Process the found list, return up to NOCC of the most recent entries.
"RTN","PXRMTAX",155,0)
 F TF=0,1 D
"RTN","PXRMTAX",156,0)
 . I '$D(^TMP($J,TLIST,TF)) Q
"RTN","PXRMTAX",157,0)
 . S DFN=""
"RTN","PXRMTAX",158,0)
 . F  S DFN=$O(^TMP($J,TLIST,TF,DFN)) Q:DFN=""  D
"RTN","PXRMTAX",159,0)
 .. K DLIST,IPLIST
"RTN","PXRMTAX",160,0)
 .. S NFOUND=0
"RTN","PXRMTAX",161,0)
 .. S NF=""
"RTN","PXRMTAX",162,0)
 .. F  S NF=$O(^TMP($J,TLIST,TF,DFN,NF),-1) Q:NF=""  D
"RTN","PXRMTAX",163,0)
 ... S FILENUM=0
"RTN","PXRMTAX",164,0)
 ... F  S FILENUM=$O(^TMP($J,TLIST,TF,DFN,NF,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMTAX",165,0)
 .... S NFOUND=NFOUND+1
"RTN","PXRMTAX",166,0)
 .... S DATE=$P(^TMP($J,TLIST,TF,DFN,NF,FILENUM),U,2)
"RTN","PXRMTAX",167,0)
 .... S DLIST(DATE,NFOUND)=NF_U_FILENUM
"RTN","PXRMTAX",168,0)
 ..;
"RTN","PXRMTAX",169,0)
 .. S DATE="",NFOUND=0
"RTN","PXRMTAX",170,0)
 .. F  S DATE=$O(DLIST(DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMTAX",171,0)
 ... S NF=0
"RTN","PXRMTAX",172,0)
 ... F  S NF=$O(DLIST(DATE,NF)) Q:(NF="")!(NFOUND=NOCC)  D
"RTN","PXRMTAX",173,0)
 .... S NFOUND=NFOUND+1
"RTN","PXRMTAX",174,0)
 .... S IND=$P(DLIST(DATE,NF),U,1)
"RTN","PXRMTAX",175,0)
 .... S FILENUM=$P(DLIST(DATE,NF),U,2)
"RTN","PXRMTAX",176,0)
 .... S IPLIST(TF,DFN,TAXIEN,NFOUND,FILENUM)=^TMP($J,TLIST,TF,DFN,IND,FILENUM)
"RTN","PXRMTAX",177,0)
 .. M ^TMP($J,PLIST)=IPLIST
"RTN","PXRMTAX",178,0)
 K ^TMP($J,TLIST)
"RTN","PXRMTAX",179,0)
 Q
"RTN","PXRMTAX",180,0)
 ;
"RTN","PXRMTAX",181,0)
 ;==================================================
"RTN","PXRMTAX",182,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMTAX",183,0)
 N IND,FILENUM,FNA,OCCLIST,TIFIEVAL
"RTN","PXRMTAX",184,0)
 S IND=0
"RTN","PXRMTAX",185,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  S FILENUM=IFIEVAL(IND,"FILE NUMBER"),FNA(FILENUM,IND)=""
"RTN","PXRMTAX",186,0)
 S FILENUM=""
"RTN","PXRMTAX",187,0)
 F  S FILENUM=$O(FNA(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMTAX",188,0)
 . K OCCLIST
"RTN","PXRMTAX",189,0)
 . M OCCLIST=FNA(FILENUM)
"RTN","PXRMTAX",190,0)
 . I FILENUM=45 D MHVOUT^PXRMDGPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",191,0)
 . I FILENUM=70 D MHVOUT^PXRMRCPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",192,0)
 . I FILENUM=9000010.07 D MHVOUT^PXRMVPOV(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",193,0)
 . I FILENUM=9000010.18 D MHVOUT^PXRMVCPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",194,0)
 . I FILENUM=9000011 D MHVOUT^PXRMPROB(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT)
"RTN","PXRMTAX",195,0)
 Q
"RTN","PXRMTAX",196,0)
 ;
"RTN","PXRMTAX",197,0)
 ;==================================================
"RTN","PXRMTAX",198,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMTAX",199,0)
 ;maintenance output.
"RTN","PXRMTAX",200,0)
 N IND,FILENUM,FNA,OCCLIST,TIFIEVAL
"RTN","PXRMTAX",201,0)
 S IND=0
"RTN","PXRMTAX",202,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  S FILENUM=IFIEVAL(IND,"FILE NUMBER"),FNA(FILENUM,IND)=""
"RTN","PXRMTAX",203,0)
 S FILENUM=""
"RTN","PXRMTAX",204,0)
 F  S FILENUM=$O(FNA(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMTAX",205,0)
 . K OCCLIST
"RTN","PXRMTAX",206,0)
 . M OCCLIST=FNA(FILENUM)
"RTN","PXRMTAX",207,0)
 . I FILENUM=45 D OUTPUT^PXRMDGPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",208,0)
 . I FILENUM=70 D OUTPUT^PXRMRCPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",209,0)
 . I FILENUM=9000010.07 D OUTPUT^PXRMVPOV(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",210,0)
 . I FILENUM=9000010.18 D OUTPUT^PXRMVCPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",211,0)
 . I FILENUM=9000011 D OUTPUT^PXRMPROB(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT)
"RTN","PXRMTAX",212,0)
 Q
"RTN","PXRMTAX",213,0)
 ;
"RTN","PXRMTAXS")
0^24^B665414
"RTN","PXRMTAXS",1,0)
PXRMTAXS ; SLC/PKR - Set taxonomy search variables. ;04/07/2005
"RTN","PXRMTAXS",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMTAXS",3,0)
 ;
"RTN","PXRMTAXS",4,0)
 ;=====================================================
"RTN","PXRMTAXS",5,0)
SETVAR(TAXARR,ENS,INS,NICD0,NICD9,NCPT,NRCPT,PLS,RAS) ;
"RTN","PXRMTAXS",6,0)
 N ALL,TEMP
"RTN","PXRMTAXS",7,0)
 ;Initialize the taxonomy search variables.
"RTN","PXRMTAXS",8,0)
 S TEMP=$G(TAXARR(0))
"RTN","PXRMTAXS",9,0)
 S NICD0=+$P(TEMP,U,3)
"RTN","PXRMTAXS",10,0)
 S NICD9=+$P(TEMP,U,5)
"RTN","PXRMTAXS",11,0)
 S NCPT=+$P(TEMP,U,7)
"RTN","PXRMTAXS",12,0)
 S NRCPT=+$P(TEMP,U,9)
"RTN","PXRMTAXS",13,0)
 ;Setup the Patient Data Source control variables.
"RTN","PXRMTAXS",14,0)
 S TEMP=$P(TAXARR(811.2,0),U,4)
"RTN","PXRMTAXS",15,0)
 ;The default is to search all locations.
"RTN","PXRMTAXS",16,0)
 S ALL=$S(TEMP="":1,TEMP="ALL":1,1:0)
"RTN","PXRMTAXS",17,0)
 I ALL S (ENS,INS,PLS,RAS)=1 Q
"RTN","PXRMTAXS",18,0)
 S ENS=$S(TEMP["EN":1,1:0)
"RTN","PXRMTAXS",19,0)
 S INS=$S(TEMP["IN":1,1:0)
"RTN","PXRMTAXS",20,0)
 S PLS=$S(TEMP["PL":1,1:0)
"RTN","PXRMTAXS",21,0)
 S RAS=$S(TEMP["RA":1,1:0)
"RTN","PXRMTAXS",22,0)
 Q
"RTN","PXRMTAXS",23,0)
 ;
"RTN","PXRMTEDT")
0^131^B4554623
"RTN","PXRMTEDT",1,0)
PXRMTEDT ; SLC/PKR - Edit a taxonomy item. ;12/23/2005
"RTN","PXRMTEDT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMTEDT",3,0)
 ;
"RTN","PXRMTEDT",4,0)
 ;===============================================
"RTN","PXRMTEDT",5,0)
 N CS1,CS2,DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTEDT",6,0)
GETNAME ;Get the name of the reminder taxonomy to edit.
"RTN","PXRMTEDT",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTEDT",8,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTEDT",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMTEDT",10,0)
 S DIC("A")="Select Reminder Taxonomy: "
"RTN","PXRMTEDT",11,0)
 S DIC("S")="I $$VEDIT^PXRMUTIL(DIC,Y)"
"RTN","PXRMTEDT",12,0)
 S DLAYGO=811.2
"RTN","PXRMTEDT",13,0)
 ;Set the starting place for additions.
"RTN","PXRMTEDT",14,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMTEDT",15,0)
 W !
"RTN","PXRMTEDT",16,0)
 D ^DIC
"RTN","PXRMTEDT",17,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMTEDT",18,0)
 I Y=-1 G END
"RTN","PXRMTEDT",19,0)
 S DA=$P(Y,U,1)
"RTN","PXRMTEDT",20,0)
 S CS1=$$FILE^PXRMEXCS(811.2,DA)
"RTN","PXRMTEDT",21,0)
 D EDIT(DIC,DA)
"RTN","PXRMTEDT",22,0)
 ;See if any changes have been made, if so do the edit history.
"RTN","PXRMTEDT",23,0)
 S CS2=$$FILE^PXRMEXCS(811.2,DA)
"RTN","PXRMTEDT",24,0)
 I CS2'=0,CS2'=CS1 D SEHIST^PXRMUTIL(811.2,DIC,DA)
"RTN","PXRMTEDT",25,0)
 G GETNAME
"RTN","PXRMTEDT",26,0)
END ;
"RTN","PXRMTEDT",27,0)
 Q
"RTN","PXRMTEDT",28,0)
 ;
"RTN","PXRMTEDT",29,0)
 ;===============================================
"RTN","PXRMTEDT",30,0)
EDIT(ROOT,DA) ;
"RTN","PXRMTEDT",31,0)
 N DIE,DR,DIDEL,RESULT,X
"RTN","PXRMTEDT",32,0)
 S DIE=ROOT,DIDEL=811.2
"RTN","PXRMTEDT",33,0)
 S DIE("NO^")="OUTOK"
"RTN","PXRMTEDT",34,0)
 W !!,"General Taxonomy Data"
"RTN","PXRMTEDT",35,0)
NAME S DR=".01"
"RTN","PXRMTEDT",36,0)
 D ^DIE
"RTN","PXRMTEDT",37,0)
 ;If DA is undefined then the entry was deleted.
"RTN","PXRMTEDT",38,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",39,0)
 I $D(Y) Q
"RTN","PXRMTEDT",40,0)
 ;
"RTN","PXRMTEDT",41,0)
BD S DR=".02"
"RTN","PXRMTEDT",42,0)
 D ^DIE
"RTN","PXRMTEDT",43,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",44,0)
 I $D(Y) G NAME
"RTN","PXRMTEDT",45,0)
 ;
"RTN","PXRMTEDT",46,0)
CLASS ;
"RTN","PXRMTEDT",47,0)
 ;Class
"RTN","PXRMTEDT",48,0)
 W !!
"RTN","PXRMTEDT",49,0)
 S DR="100"
"RTN","PXRMTEDT",50,0)
 D ^DIE
"RTN","PXRMTEDT",51,0)
 I $D(Y) G BD
"RTN","PXRMTEDT",52,0)
 ;Sponsor
"RTN","PXRMTEDT",53,0)
 S DR="101"
"RTN","PXRMTEDT",54,0)
 D ^DIE
"RTN","PXRMTEDT",55,0)
 I $D(Y) G CLASS
"RTN","PXRMTEDT",56,0)
 ;Make sure Class and Sponsor Class are in synch.
"RTN","PXRMTEDT",57,0)
 S RESULT=$$VSPONSOR^PXRMINTR(X)
"RTN","PXRMTEDT",58,0)
 I RESULT=0 G CLASS
"RTN","PXRMTEDT",59,0)
 ;Review date
"RTN","PXRMTEDT",60,0)
RD W !!
"RTN","PXRMTEDT",61,0)
 S DR="102"
"RTN","PXRMTEDT",62,0)
 D ^DIE
"RTN","PXRMTEDT",63,0)
 I $D(Y) G CLASS
"RTN","PXRMTEDT",64,0)
 ;
"RTN","PXRMTEDT",65,0)
PDS W !!
"RTN","PXRMTEDT",66,0)
 S DR="4"
"RTN","PXRMTEDT",67,0)
 D ^DIE
"RTN","PXRMTEDT",68,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",69,0)
 I $D(Y) G RD
"RTN","PXRMTEDT",70,0)
 ;
"RTN","PXRMTEDT",71,0)
UINP S DR="10"
"RTN","PXRMTEDT",72,0)
 D ^DIE
"RTN","PXRMTEDT",73,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",74,0)
 I $D(Y) G PDS
"RTN","PXRMTEDT",75,0)
 ;
"RTN","PXRMTEDT",76,0)
IFL S DR="1.6"
"RTN","PXRMTEDT",77,0)
 D ^DIE
"RTN","PXRMTEDT",78,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",79,0)
 I $D(Y) G UINP
"RTN","PXRMTEDT",80,0)
 ;
"RTN","PXRMTEDT",81,0)
ICD0 W !!,"ICD0 Range of Coded Values"
"RTN","PXRMTEDT",82,0)
 S DR="2103"
"RTN","PXRMTEDT",83,0)
 S DR(2,811.22103)=".01;1"
"RTN","PXRMTEDT",84,0)
 D ^DIE
"RTN","PXRMTEDT",85,0)
 I $D(Y) Q
"RTN","PXRMTEDT",86,0)
 ;
"RTN","PXRMTEDT",87,0)
ICD9 W !!,"ICD9 Range of Coded Values"
"RTN","PXRMTEDT",88,0)
 S DR="2102"
"RTN","PXRMTEDT",89,0)
 S DR(2,811.22102)=".01;1"
"RTN","PXRMTEDT",90,0)
 D ^DIE
"RTN","PXRMTEDT",91,0)
 I $D(Y) G ICD0
"RTN","PXRMTEDT",92,0)
 ;
"RTN","PXRMTEDT",93,0)
CPT W !!,"CPT Range of Coded Values"
"RTN","PXRMTEDT",94,0)
 S DR="2104"
"RTN","PXRMTEDT",95,0)
 S DR(2,811.22104)=".01;1"
"RTN","PXRMTEDT",96,0)
 D ^DIE
"RTN","PXRMTEDT",97,0)
 I $D(Y) G ICD9
"RTN","PXRMTEDT",98,0)
 Q
"RTN","PXRMTEDT",99,0)
 ;
"RTN","PXRMTERM")
0^113^B73050345
"RTN","PXRMTERM",1,0)
PXRMTERM ; SLC/PKR - Handle reminder terms. ;06/29/2006
"RTN","PXRMTERM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMTERM",3,0)
 ;
"RTN","PXRMTERM",4,0)
 ;=============================================
"RTN","PXRMTERM",5,0)
COPY(NOCC,SDIR,TFIEVAL,DATEORDR,FINDING,FIEVAL) ;Copy the NOCC date ordered
"RTN","PXRMTERM",6,0)
 ;findings from TFIEVAL to FIEVAL(FINDING).
"RTN","PXRMTERM",7,0)
 N DATE,IND,JND,MRS,NFOUND,TFI
"RTN","PXRMTERM",8,0)
 ;Start with most recent and go to oldest finding.
"RTN","PXRMTERM",9,0)
 S MRS=1
"RTN","PXRMTERM",10,0)
 S NFOUND=0
"RTN","PXRMTERM",11,0)
 S DATE=""
"RTN","PXRMTERM",12,0)
 F  S DATE=$O(DATEORDR(DATE),SDIR) Q:(NFOUND=NOCC)!(DATE="")  D
"RTN","PXRMTERM",13,0)
 . S TFI=0
"RTN","PXRMTERM",14,0)
 . F  S TFI=$O(DATEORDR(DATE,TFI)) Q:(NFOUND=NOCC)!(TFI="")  D
"RTN","PXRMTERM",15,0)
 .. I MRS D
"RTN","PXRMTERM",16,0)
 ...;Save the main result node.
"RTN","PXRMTERM",17,0)
 ... S FIEVAL(FINDING)=TFIEVAL(TFI)
"RTN","PXRMTERM",18,0)
 ... S MRS=0
"RTN","PXRMTERM",19,0)
 ... I 'FIEVAL(FINDING) Q
"RTN","PXRMTERM",20,0)
 ... S JND="@"
"RTN","PXRMTERM",21,0)
 ... F  S JND=$O(TFIEVAL(TFI,JND)) Q:JND=""  D
"RTN","PXRMTERM",22,0)
 .... M FIEVAL(FINDING,JND)=TFIEVAL(TFI,JND)
"RTN","PXRMTERM",23,0)
 .. I 'FIEVAL(FINDING) Q
"RTN","PXRMTERM",24,0)
 .. S IND=0
"RTN","PXRMTERM",25,0)
 .. F  S IND=$O(DATEORDR(DATE,TFI,IND)) Q:(NFOUND=NOCC)!(IND="")  D
"RTN","PXRMTERM",26,0)
 ...;Only save true sub-results.
"RTN","PXRMTERM",27,0)
 ... I 'TFIEVAL(TFI,IND) Q
"RTN","PXRMTERM",28,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMTERM",29,0)
 ... M FIEVAL(FINDING,NFOUND)=TFIEVAL(TFI,IND)
"RTN","PXRMTERM",30,0)
 ... S FIEVAL(FINDING,NFOUND,"FILE NUMBER")=TFIEVAL(TFI,"FILE NUMBER")
"RTN","PXRMTERM",31,0)
 ... S FIEVAL(FINDING,NFOUND,"FINDING")=TFIEVAL(TFI,"FINDING")
"RTN","PXRMTERM",32,0)
 ... S JND=0
"RTN","PXRMTERM",33,0)
 ... F  S JND=$O(TFIEVAL(TFI,IND,JND)) Q:JND=""  M FIEVAL(FINDING,NFOUND,JND)=TFIEVAL(TFI,IND,JND)
"RTN","PXRMTERM",34,0)
 Q
"RTN","PXRMTERM",35,0)
 ;
"RTN","PXRMTERM",36,0)
 ;=============================================
"RTN","PXRMTERM",37,0)
DORDER(TFIEVAL,DATEORDR) ;Order term findings by date, term finding,
"RTN","PXRMTERM",38,0)
 ;and term finding occurrence.
"RTN","PXRMTERM",39,0)
 N DATE,FI,IND
"RTN","PXRMTERM",40,0)
 K DATEORDR
"RTN","PXRMTERM",41,0)
 S FI=0
"RTN","PXRMTERM",42,0)
 F  S FI=+$O(TFIEVAL(FI)) Q:FI=0  D
"RTN","PXRMTERM",43,0)
 . S IND=0
"RTN","PXRMTERM",44,0)
 . F  S IND=+$O(TFIEVAL(FI,IND)) Q:IND=0  D
"RTN","PXRMTERM",45,0)
 .. S DATE=$G(TFIEVAL(FI,IND,"DATE"))
"RTN","PXRMTERM",46,0)
 .. I DATE'="" S DATEORDR(DATE,FI,IND)=""
"RTN","PXRMTERM",47,0)
 Q
"RTN","PXRMTERM",48,0)
 ;
"RTN","PXRMTERM",49,0)
 ;=============================================
"RTN","PXRMTERM",50,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate all reminder terms in a
"RTN","PXRMTERM",51,0)
 ;definition.
"RTN","PXRMTERM",52,0)
 N CASESEN,CONVAL,DATE,DATEORDR
"RTN","PXRMTERM",53,0)
 N FIEVT,FINDING,FINDPA,IND,NOCC
"RTN","PXRMTERM",54,0)
 N SDIR,TFIND3,TFIND4,TERMARR,TERMIEN,TFI,TFIEVAL,UCIFS
"RTN","PXRMTERM",55,0)
 S TERMIEN=""
"RTN","PXRMTERM",56,0)
 F  S TERMIEN=$O(DEFARR("E",ENODE,TERMIEN)) Q:+TERMIEN=0  D
"RTN","PXRMTERM",57,0)
 . I '$D(^PXRMD(811.5,TERMIEN,20,"E")) D  Q
"RTN","PXRMTERM",58,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","NOFI",TERMIEN)="Warning no findings items in reminder term "_$P(^PXRMD(811.5,TERMIEN,0),U,1)
"RTN","PXRMTERM",59,0)
 .. S FINDING=""
"RTN","PXRMTERM",60,0)
 .. F  S FINDING=$O(DEFARR("E",ENODE,TERMIEN,FINDING)) Q:FINDING=""  S FIEVAL(FINDING)=0
"RTN","PXRMTERM",61,0)
 . D TERM^PXRMLDR(TERMIEN,.TERMARR)
"RTN","PXRMTERM",62,0)
 . S FINDING=""
"RTN","PXRMTERM",63,0)
 . F  S FINDING=$O(DEFARR("E",ENODE,TERMIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMTERM",64,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMTERM",65,0)
 .. S FIEVAL(FINDING,"TERM")=TERMARR(0)
"RTN","PXRMTERM",66,0)
 .. S FIEVAL(FINDING,"TERM IEN")=TERMIEN
"RTN","PXRMTERM",67,0)
 .. K FINDPA,TFIEVAL
"RTN","PXRMTERM",68,0)
 .. M FINDPA=DEFARR(20,FINDING)
"RTN","PXRMTERM",69,0)
 .. D EVALTERM(DFN,.FINDPA,.TERMARR,.TFIEVAL)
"RTN","PXRMTERM",70,0)
 .. I $G(PXRMTDEB) M ^TMP("PXRMTDEB",$J,FINDING)=TFIEVAL
"RTN","PXRMTERM",71,0)
 ..;Set NOCC and SDIR.
"RTN","PXRMTERM",72,0)
 .. S NOCC=$P(FINDPA(0),U,14)
"RTN","PXRMTERM",73,0)
 .. I NOCC="" S NOCC=1
"RTN","PXRMTERM",74,0)
 .. S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMTERM",75,0)
 .. S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMTERM",76,0)
 ..;Order the term findings by date.
"RTN","PXRMTERM",77,0)
 .. D DORDER(.TFIEVAL,.DATEORDR)
"RTN","PXRMTERM",78,0)
 .. D COPY(NOCC,SDIR,.TFIEVAL,.DATEORDR,FINDING,.FIEVAL)
"RTN","PXRMTERM",79,0)
 Q
"RTN","PXRMTERM",80,0)
 ;
"RTN","PXRMTERM",81,0)
 ;=============================================
"RTN","PXRMTERM",82,0)
EVALPL(FINDPA,TERMARR,PLIST) ;Build a list of patients based on a
"RTN","PXRMTERM",83,0)
 ;term. The list is returned in:
"RTN","PXRMTERM",84,0)
 ;^TMP($J,PLIST,T/F,DFN,ITEM,NFOUND,FILENUM)=DAS_U_DATE_U_VALUE
"RTN","PXRMTERM",85,0)
 ;for findings with a start and stop date the list is
"RTN","PXRMTERM",86,0)
 ;^TMP($J,PLIST,T/F,DFN,ITEM,NFOUND,FILENUM)=DAS_U_START_U_STOP_U_VALUE
"RTN","PXRMTERM",87,0)
 N ENODE
"RTN","PXRMTERM",88,0)
 K ^TMP($J,PLIST)
"RTN","PXRMTERM",89,0)
 S ENODE=""
"RTN","PXRMTERM",90,0)
 F  S ENODE=$O(TERMARR("E",ENODE)) Q:ENODE=""  D
"RTN","PXRMTERM",91,0)
 . I ENODE="AUTTEDT(" D EVALPL^PXRMEDU(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",92,0)
 . I ENODE="AUTTEXAM(" D EVALPL^PXRMEXAM(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",93,0)
 . I ENODE="AUTTHF(" D EVALPL^PXRMHF(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",94,0)
 . I ENODE="AUTTIMM(" D EVALPL^PXRMIMM(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",95,0)
 . I ENODE="AUTTSK(" D EVALPL^PXRMSKIN(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",96,0)
 . I ENODE="GMRD(120.51," D EVALPL^PXRMVITL(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",97,0)
 . I ENODE="LAB(60," D EVALPL^PXRMLAB(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",98,0)
 . I ENODE="ORD(101.43," D EVALPL^PXRMORDR(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",99,0)
 . I ENODE="PXRMD(810.9," D EVALPL^PXRMLOCL(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",100,0)
 . I ENODE="PXD(811.2," D EVALPL^PXRMTAX(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",101,0)
 . I ENODE="PXRMD(811.4," D EVALPL^PXRMCF(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",102,0)
 . I ENODE="PS(50.605," D EVALPL^PXRMDRCL(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",103,0)
 . I ENODE="PSDRUG(" D EVALPL^PXRMDRUG(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",104,0)
 . I ENODE="PSNDF(50.6," D EVALPL^PXRMDGEN(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",105,0)
 . I ENODE="RAMIS(71," D EVALPL^PXRMRAD(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",106,0)
 . I ENODE="YTT(601," D EVALPL^PXRMMH(.FINDPA,ENODE,.TERMARR,PLIST) Q
"RTN","PXRMTERM",107,0)
 Q
"RTN","PXRMTERM",108,0)
 ;
"RTN","PXRMTERM",109,0)
 ;=============================================
"RTN","PXRMTERM",110,0)
EVALTERM(DFN,FINDPA,TERMARR,TFIEVAL) ;Evaluate all the findings in
"RTN","PXRMTERM",111,0)
 ;a term. Use the "E" cross-reference just like the finding evaluation.
"RTN","PXRMTERM",112,0)
 N ENODE
"RTN","PXRMTERM",113,0)
 S ENODE=""
"RTN","PXRMTERM",114,0)
 F  S ENODE=$O(TERMARR("E",ENODE)) Q:ENODE=""  D
"RTN","PXRMTERM",115,0)
 . I ENODE="AUTTEDT(" D EVALTERM^PXRMEDU(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",116,0)
 . I ENODE="AUTTEXAM(" D EVALTERM^PXRMEXAM(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",117,0)
 . I ENODE="AUTTHF(" D EVALTERM^PXRMHF(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",118,0)
 . I ENODE="AUTTIMM(" D EVALTERM^PXRMIMM(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",119,0)
 . I ENODE="AUTTSK(" D EVALTERM^PXRMSKIN(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",120,0)
 . I ENODE="GMRD(120.51," D EVALTERM^PXRMVITL(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",121,0)
 . I ENODE="LAB(60," D EVALTERM^PXRMLAB(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",122,0)
 . I ENODE="ORD(101.43," D EVALTERM^PXRMORDR(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",123,0)
 . I ENODE="PXD(811.2," D EVALTERM^PXRMTAX(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",124,0)
 . I ENODE="PXRMD(810.9," D EVALTERM^PXRMLOCF(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",125,0)
 . I ENODE="PXRMD(811.4," D EVALTERM^PXRMCF(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",126,0)
 . I ENODE="PS(50.605," D EVALTERM^PXRMDRCL(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",127,0)
 . I ENODE="PS(55," D EVALTERM^PXRMDIN(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",128,0)
 . I ENODE="PS(55NVA," D EVALTERM^PXRMDNVA(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",129,0)
 . I ENODE="PSDRUG(" D EVALTERM^PXRMDRUG(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",130,0)
 . I ENODE="PSRX(" D EVALTERM^PXRMDOUT(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",131,0)
 . I ENODE="PSNDF(50.6," D EVALTERM^PXRMDGEN(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",132,0)
 . I ENODE="RAMIS(71," D EVALTERM^PXRMRAD(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",133,0)
 . I ENODE="YTT(601," D EVALTERM^PXRMMH(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",134,0)
 Q
"RTN","PXRMTERM",135,0)
 ;
"RTN","PXRMTERM",136,0)
 ;=============================================
"RTN","PXRMTERM",137,0)
IEVALTER(DFN,FINDPA,TERMARR,FINDING,FIEVAL) ;Evaluate an individual term
"RTN","PXRMTERM",138,0)
 ;put the result in FIEVAL(FINDING).
"RTN","PXRMTERM",139,0)
 N DATEORDR,NOCC,SDIR,TFIEVAL
"RTN","PXRMTERM",140,0)
 I $D(PXRMPDEM) G DEMOK
"RTN","PXRMTERM",141,0)
 N PXRMPDEM D DEM^PXRMPINF(DFN,DT,.PXRMPDEM)
"RTN","PXRMTERM",142,0)
 ;Create the local demographic variables for use in Condition.
"RTN","PXRMTERM",143,0)
 N PXRMAGE,PXRMDOB,PXRMDOD,PXRMLAD,PXRMSEX
"RTN","PXRMTERM",144,0)
 S PXRMAGE=PXRMPDEM("AGE"),PXRMDOB=PXRMPDEM("DOB"),PXRMDOD=PXRMPDEM("DOD")
"RTN","PXRMTERM",145,0)
 S PXRMLAD=PXRMPDEM("LAD"),PXRMSEX=PXRMPDEM("SEX")
"RTN","PXRMTERM",146,0)
DEMOK S FIEVAL(FINDING)=0
"RTN","PXRMTERM",147,0)
 D EVALTERM(DFN,.FINDPA,.TERMARR,.TFIEVAL)
"RTN","PXRMTERM",148,0)
 ;Set NOCC and SDIR.
"RTN","PXRMTERM",149,0)
 S NOCC=$P(FINDPA(0),U,14)
"RTN","PXRMTERM",150,0)
 I NOCC="" S NOCC=1
"RTN","PXRMTERM",151,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMTERM",152,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMTERM",153,0)
 ;Order the term findings by date.
"RTN","PXRMTERM",154,0)
 D DORDER(.TFIEVAL,.DATEORDR)
"RTN","PXRMTERM",155,0)
 D COPY(NOCC,SDIR,.TFIEVAL,.DATEORDR,FINDING,.FIEVAL)
"RTN","PXRMTERM",156,0)
 Q
"RTN","PXRMTERM",157,0)
 ;
"RTN","PXRMTERM",158,0)
 ;=============================================
"RTN","PXRMTERM",159,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMTERM",160,0)
 D OPT(INDENT,.IFIEVAL,.NLINES,.TEXT,"MHV")
"RTN","PXRMTERM",161,0)
 Q
"RTN","PXRMTERM",162,0)
 ;
"RTN","PXRMTERM",163,0)
 ;=============================================
"RTN","PXRMTERM",164,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMTERM",165,0)
 ;maintenance output.
"RTN","PXRMTERM",166,0)
 D OPT(INDENT,.IFIEVAL,.NLINES,.TEXT,"CM")
"RTN","PXRMTERM",167,0)
 Q
"RTN","PXRMTERM",168,0)
 ;
"RTN","PXRMTERM",169,0)
 ;=============================================
"RTN","PXRMTERM",170,0)
OPT(INDENT,IFIEVAL,NLINES,TEXT,TYPE) ;General output.
"RTN","PXRMTERM",171,0)
 N DG,DGL,DGN,DRUG,IEN,IND,JND,KND,INDENTT,FILENUM,TEMP,TIFIEVAL
"RTN","PXRMTERM",172,0)
 ;If there is a drug make it available for display.
"RTN","PXRMTERM",173,0)
 S DRUG=$S($D(IFIEVAL("DISPENSE DRUG")):IFIEVAL("DISPENSE DRUG"),1:"")
"RTN","PXRMTERM",174,0)
 ;DBIA #10043
"RTN","PXRMTERM",175,0)
 I DRUG'="" S DRUG=$P(^PSDRUG(DRUG,0),U,1)
"RTN","PXRMTERM",176,0)
 ;Build the display grouping.
"RTN","PXRMTERM",177,0)
 S FILENUM=IFIEVAL(1,"FILE NUMBER")
"RTN","PXRMTERM",178,0)
 S IEN=$P(IFIEVAL(1,"FINDING"),";",1)
"RTN","PXRMTERM",179,0)
 S DG(FILENUM,IEN)=1,DGL(1)=FILENUM_U_IEN,DGL(1,1)=""
"RTN","PXRMTERM",180,0)
 S (DGN,IND)=1
"RTN","PXRMTERM",181,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMTERM",182,0)
 . S FILENUM=IFIEVAL(IND,"FILE NUMBER")
"RTN","PXRMTERM",183,0)
 . S IEN=$P(IFIEVAL(IND,"FINDING"),";",1)
"RTN","PXRMTERM",184,0)
 . I '$D(DG(FILENUM,IEN)) D
"RTN","PXRMTERM",185,0)
 .. S DGN=DGN+1,DG(FILENUM,IEN)=DGN
"RTN","PXRMTERM",186,0)
 .. S DGL(DGN)=FILENUM_U_IEN,DGL(DGN,IND)=""
"RTN","PXRMTERM",187,0)
 . I $D(DG(FILENUM,IEN)) D
"RTN","PXRMTERM",188,0)
 .. S TEMP=DG(FILENUM,IEN),DGL(TEMP,IND)=""
"RTN","PXRMTERM",189,0)
 S INDENTT=INDENT+1
"RTN","PXRMTERM",190,0)
 S TEMP=$$INSCHR^PXRMEXLC(INDENT," ")_"Reminder Term: "_$P(FIEVAL(FINDING,"TERM"),U,1)
"RTN","PXRMTERM",191,0)
 S NLINES=NLINES+1,TEXT(NLINES)=TEMP
"RTN","PXRMTERM",192,0)
 F IND=1:1:DGN D
"RTN","PXRMTERM",193,0)
 . K TIFIEVAL
"RTN","PXRMTERM",194,0)
 . S (JND,KND)=0
"RTN","PXRMTERM",195,0)
 . F  S JND=$O(DGL(IND,JND)) Q:JND=""  D
"RTN","PXRMTERM",196,0)
 .. S KND=KND+1
"RTN","PXRMTERM",197,0)
 .. I KND=1 M TIFIEVAL=IFIEVAL(JND)
"RTN","PXRMTERM",198,0)
 .. M TIFIEVAL(KND)=IFIEVAL(JND)
"RTN","PXRMTERM",199,0)
 .. I DRUG'="" S TIFIEVAL("DISPENSE DRUG")=DRUG
"RTN","PXRMTERM",200,0)
 . I TYPE="CM" D FOUT^PXRMOUTC(INDENTT,.TIFIEVAL,.NLINES,.TEXT)
"RTN","PXRMTERM",201,0)
 . I TYPE="MHV" D FOUT^PXRMOUTM(INDENTT,.TIFIEVAL,.NLINES,.TEXT)
"RTN","PXRMTERM",202,0)
 Q
"RTN","PXRMTERM",203,0)
 ;
"RTN","PXRMTERM",204,0)
 ;=============================================
"RTN","PXRMTERM",205,0)
SPFINDPA(FINDPA,TFINDPA,PFINDPA) ;Set the finding parameter array
"RTN","PXRMTERM",206,0)
 ;for terms.
"RTN","PXRMTERM",207,0)
 N FIND0,PIECE,PFIND0,TFIND0,VAL
"RTN","PXRMTERM",208,0)
 S FIND0=$G(FINDPA(0))
"RTN","PXRMTERM",209,0)
 S (PFIND0,TFIND0)=TFINDPA(0)
"RTN","PXRMTERM",210,0)
 ;Set the 0 node.
"RTN","PXRMTERM",211,0)
 F PIECE=9,10,12,13,14,15,16 D
"RTN","PXRMTERM",212,0)
 . S VAL=$P(TFIND0,U,PIECE)
"RTN","PXRMTERM",213,0)
 . I VAL="" S VAL=$P(FIND0,U,PIECE)
"RTN","PXRMTERM",214,0)
 . S $P(PFIND0,U,PIECE)=VAL
"RTN","PXRMTERM",215,0)
 ;BDT and EDT are treated as a pair.
"RTN","PXRMTERM",216,0)
 I $P(TFIND0,U,8)="",$P(TFIND0,U,11)="" F PIECE=8,11 S $P(PFIND0,U,PIECE)=$P(FIND0,U,PIECE)
"RTN","PXRMTERM",217,0)
 E  F PIECE=8,11 S $P(PFIND0,U,PIECE)=$P(TFIND0,U,PIECE)
"RTN","PXRMTERM",218,0)
 S PFINDPA(0)=PFIND0
"RTN","PXRMTERM",219,0)
 I $P($G(TFINDPA(3)),U,1)'="" S PFINDPA(3)=TFINDPA(3),PFINDPA(10)=TFINDPA(10),PFINDPA(11)=TFINDPA(11)
"RTN","PXRMTERM",220,0)
 E  S PFINDPA(3)=$G(FINDPA(3)),PFINDPA(10)=$G(FINDPA(10)),PFINDPA(11)=$G(FINDPA(11))
"RTN","PXRMTERM",221,0)
 ;Get the status list.
"RTN","PXRMTERM",222,0)
 I $D(TFINDPA(5)) M PFINDPA(5)=TFINDPA(5)
"RTN","PXRMTERM",223,0)
 E  M PFINDPA(5)=FINDPA(5)
"RTN","PXRMTERM",224,0)
 I $D(TFINDPA(15)) S PFINDPA(15)=TFINDPA(15)
"RTN","PXRMTERM",225,0)
 E  S PFINDPA(15)=$G(FINDPA(15))
"RTN","PXRMTERM",226,0)
 Q
"RTN","PXRMTERM",227,0)
 ;
"RTN","PXRMTIU")
0^100^B5275428
"RTN","PXRMTIU",1,0)
PXRMTIU ;SLC/RMS,PKR - Clinical Reminder TIU routines. ; 05/16/2006
"RTN","PXRMTIU",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMTIU",3,0)
 ;==========================================================
"RTN","PXRMTIU",4,0)
NOTE(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;Computed finding
"RTN","PXRMTIU",5,0)
 ;for note title.
"RTN","PXRMTIU",6,0)
 S NFOUND=0
"RTN","PXRMTIU",7,0)
 Q:(TEST="")!(NGET=0)
"RTN","PXRMTIU",8,0)
 N ADDDATA,AUTH,DONE,EDTT,INVDATE,NGETABS,PIEN
"RTN","PXRMTIU",9,0)
 N SDIR,STATUS,TEMP,TIEN,TITLE,TYPE
"RTN","PXRMTIU",10,0)
 S TITLE=$P(TEST,U),STATUS=$P(TEST,U,2),ADDDATA=+$P(TEST,U,3)
"RTN","PXRMTIU",11,0)
 I STATUS="" S STATUS=7  ;COMPLETED IS THE DEFAULT
"RTN","PXRMTIU",12,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMTIU",13,0)
 ;Invert and switch beginning and ending dates because the TIU index
"RTN","PXRMTIU",14,0)
 ;uses inverse dates.
"RTN","PXRMTIU",15,0)
 S INVDATE=BDT,BDT=9999999-EDTT,EDTT=9999999-INVDATE
"RTN","PXRMTIU",16,0)
 S SDIR=$S(NGET>0:1,1:-1)
"RTN","PXRMTIU",17,0)
 S INVDATE=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMTIU",18,0)
 S NGETABS=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMTIU",19,0)
 ;Find the ien for the title.
"RTN","PXRMTIU",20,0)
 S (DONE,TIEN)=0
"RTN","PXRMTIU",21,0)
 ;DBIA #2321
"RTN","PXRMTIU",22,0)
 F  Q:DONE  S TIEN=$O(^TIU(8925.1,"B",TITLE,TIEN)) Q:TIEN=""  D
"RTN","PXRMTIU",23,0)
 . S TYPE=$P(^TIU(8925.1,TIEN,0),U,4)
"RTN","PXRMTIU",24,0)
 . I TYPE="DOC" S DONE=1
"RTN","PXRMTIU",25,0)
 I 'DONE Q
"RTN","PXRMTIU",26,0)
 ;DBIA #2937
"RTN","PXRMTIU",27,0)
 F  S INVDATE=$O(^TIU(8925,"APT",DFN,TIEN,STATUS,INVDATE),SDIR)  Q:$S(INVDATE=0:1,NFOUND=NGETABS:1,INVDATE<BDT:1,INVDATE>EDTT:1,1:0)  D
"RTN","PXRMTIU",28,0)
 . S PIEN=$O(^TIU(8925,"APT",DFN,TIEN,STATUS,INVDATE,0)) Q:'+PIEN
"RTN","PXRMTIU",29,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMTIU",30,0)
 . S TEST(NFOUND)=1
"RTN","PXRMTIU",31,0)
 . S DATE(NFOUND)=$P(^TIU(8925,PIEN,13),U)
"RTN","PXRMTIU",32,0)
 . S DATA(NFOUND,"VALUE")=TITLE
"RTN","PXRMTIU",33,0)
 . S DATA(NFOUND,"TITLE")=TITLE
"RTN","PXRMTIU",34,0)
 . S AUTH=+$P($G(^TIU(8925,PIEN,12)),U,2)
"RTN","PXRMTIU",35,0)
 . S AUTH=$S(AUTH>0:$$GET1^DIQ(200,AUTH,.01),1:"MISSING")
"RTN","PXRMTIU",36,0)
 . S DATA(NFOUND,"AUTH")=AUTH
"RTN","PXRMTIU",37,0)
 . S TEXT(NFOUND)="Author: "_AUTH
"RTN","PXRMTIU",38,0)
 . I ADDDATA D
"RTN","PXRMTIU",39,0)
 ..;DBIA #2834
"RTN","PXRMTIU",40,0)
 .. S TEMP=$$RESOLVE^TIUSRVLO(PIEN)
"RTN","PXRMTIU",41,0)
 .. S DATA(NFOUND,"DISPLAY NAME")=$P(TEMP,U,1)
"RTN","PXRMTIU",42,0)
 .. S DATA(NFOUND,"HOSPITAL LOCATION")=$P(TEMP,U,5)
"RTN","PXRMTIU",43,0)
 .. S DATA(NFOUND,"EPISODE BEGIN DATE/TIME")=$P(TEMP,U,7)
"RTN","PXRMTIU",44,0)
 .. S DATA(NFOUND,"EPISODE END DATE/TIME")=$P(TEMP,U,8)
"RTN","PXRMTIU",45,0)
 .. S DATA(NFOUND,"REQUESTING PACKAGE")=$P(TEMP,U,9)
"RTN","PXRMTIU",46,0)
 .. S DATA(NFOUND,"NUMBER OF IMAGES")=$P(TEMP,U,10)
"RTN","PXRMTIU",47,0)
 .. S DATA(NFOUND,"SUBJECT")=$P(TEMP,U,11)
"RTN","PXRMTIU",48,0)
 Q
"RTN","PXRMTIU",49,0)
 ;
"RTN","PXRMTMED")
0^56^B12460684
"RTN","PXRMTMED",1,0)
PXRMTMED ; SLC/PKR/PJH - Edit a reminder term. ;01/30/2006
"RTN","PXRMTMED",2,0)
 ;;2.0;CLINICAL REMINDERS;**1,4**;Feb 04, 2005;Build 21
"RTN","PXRMTMED",3,0)
 ;
"RTN","PXRMTMED",4,0)
 ;=======================================================
"RTN","PXRMTMED",5,0)
 N CS1,CS2,DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTMED",6,0)
GETNAME ;Get the name of the term to edit.
"RTN","PXRMTMED",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTMED",8,0)
 S DIC="^PXRMD(811.5,"
"RTN","PXRMTMED",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMTMED",10,0)
 S DIC("A")="Select Reminder Term: "
"RTN","PXRMTMED",11,0)
 S DLAYGO=811.5
"RTN","PXRMTMED",12,0)
 ;Set the starting place for additions.
"RTN","PXRMTMED",13,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMTMED",14,0)
 W !
"RTN","PXRMTMED",15,0)
 D ^DIC
"RTN","PXRMTMED",16,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMTMED",17,0)
 I Y=-1 G END
"RTN","PXRMTMED",18,0)
 S DA=$P(Y,U,1)
"RTN","PXRMTMED",19,0)
 S CS1=$$FILE^PXRMEXCS(811.5,DA)
"RTN","PXRMTMED",20,0)
 D EDIT(DIC,DA)
"RTN","PXRMTMED",21,0)
 I $G(DA)="" G GETNAME
"RTN","PXRMTMED",22,0)
 S CS2=$$FILE^PXRMEXCS(811.5,DA)
"RTN","PXRMTMED",23,0)
 I CS2=0 G GETNAME
"RTN","PXRMTMED",24,0)
 I CS2'=CS1 D SEHIST^PXRMUTIL(811.5,DIC,DA)
"RTN","PXRMTMED",25,0)
 G GETNAME
"RTN","PXRMTMED",26,0)
END ;
"RTN","PXRMTMED",27,0)
 Q
"RTN","PXRMTMED",28,0)
 ;
"RTN","PXRMTMED",29,0)
 ;=======================================================
"RTN","PXRMTMED",30,0)
CLASS(DA,DIE) ;
"RTN","PXRMTMED",31,0)
 N DR,RESULT,X,Y
"RTN","PXRMTMED",32,0)
RETRY W !
"RTN","PXRMTMED",33,0)
 S DR="100" D ^DIE I $D(Y) Q
"RTN","PXRMTMED",34,0)
 ;Sponsor
"RTN","PXRMTMED",35,0)
 S DR="101" D ^DIE I $D(Y) Q
"RTN","PXRMTMED",36,0)
 ;Make sure Class and Sponsor Class are in synch.
"RTN","PXRMTMED",37,0)
 S RESULT=$$VSPONSOR^PXRMINTR(X)
"RTN","PXRMTMED",38,0)
 I RESULT=0 S DIE("NO^")="Other value" G RETRY
"RTN","PXRMTMED",39,0)
 I RESULT=1 K DIE("NO^")
"RTN","PXRMTMED",40,0)
 ;Review date, Usage
"RTN","PXRMTMED",41,0)
 S DR="102;1" D ^DIE I $D(Y) Q
"RTN","PXRMTMED",42,0)
 Q
"RTN","PXRMTMED",43,0)
 ;
"RTN","PXRMTMED",44,0)
 ;=======================================================
"RTN","PXRMTMED",45,0)
EDIT(ROOT,DA) ;
"RTN","PXRMTMED",46,0)
 N CLASS,DIC,DIE,DR,DIDEL,PXRMTMD,RESULT,TCONT,Y
"RTN","PXRMTMED",47,0)
 ;PXRMTMD is set by a xref on the .01 as a flag that the entire
"RTN","PXRMTMED",48,0)
 ;entry is being deleted.
"RTN","PXRMTMED",49,0)
 S CLASS=$P($G(^PXRMD(811.5,DA,100)),U,1)
"RTN","PXRMTMED",50,0)
 S DIE=ROOT
"RTN","PXRMTMED",51,0)
 I CLASS'="N"!(($G(PXRMINST)=1)&($G(DUZ(0))="@")) D
"RTN","PXRMTMED",52,0)
 . S DR=".01"
"RTN","PXRMTMED",53,0)
 . D ^DIE
"RTN","PXRMTMED",54,0)
 . I $G(DA)'="" D CLASS(DA,DIE)
"RTN","PXRMTMED",55,0)
 I $G(DA)="" Q
"RTN","PXRMTMED",56,0)
 S TCONT=1
"RTN","PXRMTMED",57,0)
 F  D FINDING(DIE,DA)  Q:TCONT=0
"RTN","PXRMTMED",58,0)
 Q
"RTN","PXRMTMED",59,0)
 ;
"RTN","PXRMTMED",60,0)
 ;=======================================================
"RTN","PXRMTMED",61,0)
FINDING(DIE,DA,LIST) ;
"RTN","PXRMTMED",62,0)
 N CFIEN,GLOB,IEN,LIST,NODE,TERMSTAT,VF,WPIEN
"RTN","PXRMTMED",63,0)
 N DEF,DEF1,DEF2,STATUS
"RTN","PXRMTMED",64,0)
 S STATUS=0
"RTN","PXRMTMED",65,0)
 D DEF^PXRMRUTL("811.52",.DEF,.DEF1,.DEF2)
"RTN","PXRMTMED",66,0)
 S NODE="^PXRMD(811.5)"
"RTN","PXRMTMED",67,0)
 D LIST^PXRMREDT(NODE,DA,.LIST)
"RTN","PXRMTMED",68,0)
 D DSPALL^PXRMREDF("T",NODE,DA,.LIST)
"RTN","PXRMTMED",69,0)
 S DA(1)=DA
"RTN","PXRMTMED",70,0)
 S IEN=DA
"RTN","PXRMTMED",71,0)
 S DIC=DIE_DA(1)_",20,"
"RTN","PXRMTMED",72,0)
 S DIC(0)="QEAL"
"RTN","PXRMTMED",73,0)
 S DIC("A")="Select Finding: "
"RTN","PXRMTMED",74,0)
 D ^DIC I Y=-1 S DTOUT=1,TCONT=0 Q
"RTN","PXRMTMED",75,0)
 S DIE=DIC
"RTN","PXRMTMED",76,0)
 S DA=+Y,GLOB=$P($P(Y,U,2),";",2) Q:GLOB=""
"RTN","PXRMTMED",77,0)
 I GLOB="PXRMD(811.4," S CFIEN=$P($P(Y,U,2),";",1) D
"RTN","PXRMTMED",78,0)
 .I $D(^PXRMD(811.4,CFIEN,1))>0 D
"RTN","PXRMTMED",79,0)
 ..W !!,"Computed Finding Description:" S WPIEN=0
"RTN","PXRMTMED",80,0)
 ..F  S WPIEN=$O(^PXRMD(811.4,CFIEN,1,WPIEN)) Q:+WPIEN'>0  D
"RTN","PXRMTMED",81,0)
 ...W !,$G(^PXRMD(811.4,CFIEN,1,WPIEN,0))
"RTN","PXRMTMED",82,0)
 .E  W !!,"No description defined for this computed finding"
"RTN","PXRMTMED",83,0)
 .W !
"RTN","PXRMTMED",84,0)
 W !,"Editing Finding Number: "_$G(DA)
"RTN","PXRMTMED",85,0)
 ;Finding record fields
"RTN","PXRMTMED",86,0)
 S DR=".01;9;12;17"
"RTN","PXRMTMED",87,0)
 I GLOB="PXRMD(811.4," S DR=DR_";26"
"RTN","PXRMTMED",88,0)
 ;Taxonomy - use inactive problems
"RTN","PXRMTMED",89,0)
 I GLOB="PXD(811.2," D
"RTN","PXRMTMED",90,0)
 .S TERMSTAT=$$TAXNODE^PXRMSTA1($P($P(Y,U,2),";"),"H")
"RTN","PXRMTMED",91,0)
 .I TERMSTAT="P" S DR=DR_";10" Q
"RTN","PXRMTMED",92,0)
 .I TERMSTAT'=0 S DR=DR_";10",STATUS=1
"RTN","PXRMTMED",93,0)
 ;Health Factor - within category rank
"RTN","PXRMTMED",94,0)
 I GLOB="AUTTHF(" S DR=DR_";11"
"RTN","PXRMTMED",95,0)
 ;If V file INCLUDE VISIT DATA
"RTN","PXRMTMED",96,0)
 S VF=$S(GLOB["AUTTEDT":1,GLOB["AUTTEXAM":1,GLOB["AUTTHF":1,GLOB["AUTTIMM":1,GLOB="AUTTSK":1,GLOB["PXD(811.2":1,1:0)
"RTN","PXRMTMED",97,0)
 I VF S DR=DR_";28"
"RTN","PXRMTMED",98,0)
 ;Mental Health - scale
"RTN","PXRMTMED",99,0)
 I GLOB="YTT(601," S DR=DR_";13"
"RTN","PXRMTMED",100,0)
 ;Radiology procedure
"RTN","PXRMTMED",101,0)
 I GLOB="RAMIS(71," S STATUS=1
"RTN","PXRMTMED",102,0)
 ;Orderable item
"RTN","PXRMTMED",103,0)
 I GLOB="ORD(101.43," S DR=DR_";27",STATUS=1
"RTN","PXRMTMED",104,0)
 ;Rx Type
"RTN","PXRMTMED",105,0)
 I GLOB="PSDRUG("!(GLOB="PS(50.605,")!(GLOB="PSNDF(50.6,") S DR=DR_";16;27",STATUS=1
"RTN","PXRMTMED",106,0)
 ;Condition
"RTN","PXRMTMED",107,0)
 S DR=DR_";14;15;18"
"RTN","PXRMTMED",108,0)
 ;
"RTN","PXRMTMED",109,0)
 ;Edit finding record
"RTN","PXRMTMED",110,0)
 D ^DIE
"RTN","PXRMTMED",111,0)
 I STATUS=1,$D(DA)>0 D STATUS^PXRMSTA1(.DA,"T")
"RTN","PXRMTMED",112,0)
 S $P(^PXRMD(811.5,IEN,20,0),U,3)=0
"RTN","PXRMTMED",113,0)
 Q
"RTN","PXRMTMED",114,0)
 ;
"RTN","PXRMUTIL")
0^142^B28919429
"RTN","PXRMUTIL",1,0)
PXRMUTIL ; SLC/PKR/PJH - Utility routines for use by PXRM. ;05/25/2006
"RTN","PXRMUTIL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMUTIL",3,0)
 ;
"RTN","PXRMUTIL",4,0)
 ;===========================================================
"RTN","PXRMUTIL",5,0)
ATTVALUE(STRING,ATTR,SEP,AVSEP) ;STRING contains a list of attribute value
"RTN","PXRMUTIL",6,0)
 ;pairs. Each pair is separated by SEP and the attribute value pair
"RTN","PXRMUTIL",7,0)
 ;is separated by AVSEP. Return the value for the attribute ATTR.
"RTN","PXRMUTIL",8,0)
 N AVPAIR,IND,NUMAVP,VALUE
"RTN","PXRMUTIL",9,0)
 S NUMAVP=$L(STRING,SEP)
"RTN","PXRMUTIL",10,0)
 S VALUE=""
"RTN","PXRMUTIL",11,0)
 F IND=1:1:NUMAVP Q:VALUE'=""  D
"RTN","PXRMUTIL",12,0)
 . S AVPAIR=$P(STRING,SEP,IND)
"RTN","PXRMUTIL",13,0)
 . I AVPAIR[ATTR S VALUE=$P(AVPAIR,AVSEP,2)
"RTN","PXRMUTIL",14,0)
 Q VALUE
"RTN","PXRMUTIL",15,0)
 ;
"RTN","PXRMUTIL",16,0)
 ;===========================================================
"RTN","PXRMUTIL",17,0)
AWRITE(REF) ;Write all the descendants of the array reference.
"RTN","PXRMUTIL",18,0)
 ;REF is the starting array reference, for example A or ^TMP("PXRM",$J).
"RTN","PXRMUTIL",19,0)
 N DONE,IND,LEN,PROOT,ROOT,START,TEMP
"RTN","PXRMUTIL",20,0)
 I REF="" Q
"RTN","PXRMUTIL",21,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMUTIL",22,0)
 ;Build the root so we can tell when we are done.
"RTN","PXRMUTIL",23,0)
 S TEMP=$NA(@REF)
"RTN","PXRMUTIL",24,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMUTIL",25,0)
 S REF=$Q(@REF)
"RTN","PXRMUTIL",26,0)
 I REF'[ROOT Q
"RTN","PXRMUTIL",27,0)
 S DONE=0
"RTN","PXRMUTIL",28,0)
 F  Q:(REF="")!(DONE)  D
"RTN","PXRMUTIL",29,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMUTIL",30,0)
 . S LEN=$L(REF)
"RTN","PXRMUTIL",31,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMUTIL",32,0)
 . W !,PROOT_IND,"=",@REF
"RTN","PXRMUTIL",33,0)
 . S REF=$Q(@REF)
"RTN","PXRMUTIL",34,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMUTIL",35,0)
 Q
"RTN","PXRMUTIL",36,0)
 ;
"RTN","PXRMUTIL",37,0)
 ;===========================================================
"RTN","PXRMUTIL",38,0)
DIP(VAR,IEN,PXRMROOT,FLDS) ;Do general inquiry for IEN return formatted
"RTN","PXRMUTIL",39,0)
 ;output in VAR. VAR can be either a local variable or a global.
"RTN","PXRMUTIL",40,0)
 ;If it is a local it is indexed for the broker. If it is a global
"RTN","PXRMUTIL",41,0)
 ;it should be passed in closed form i.e., ^TMP("PXRMTEST",$J).
"RTN","PXRMUTIL",42,0)
 ;It will be returned formatted for ListMan i.e.,
"RTN","PXRMUTIL",43,0)
 ;^TMP("PXRMTEST",$J,N,0).
"RTN","PXRMUTIL",44,0)
 N %ZIS,ARRAY,BY,DC,DHD,DIC,DONE,FF,FILENAME,FILESPEC,FR,GBL,HFNAME
"RTN","PXRMUTIL",45,0)
 N IND,IOP,L,NOW,PATH,SUCCESS,TO,UNIQN
"RTN","PXRMUTIL",46,0)
 S BY="NUMBER",(FR,TO)=+$P(IEN,U,1),DHD="@@"
"RTN","PXRMUTIL",47,0)
 ;Make sure the PXRM WORKSTATION device exists.
"RTN","PXRMUTIL",48,0)
 D MKWSDEV^PXRMHOST
"RTN","PXRMUTIL",49,0)
 ;Set up the output file before DIP is called.
"RTN","PXRMUTIL",50,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMUTIL",51,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMUTIL",52,0)
 S NOW=$TR(NOW,".","")
"RTN","PXRMUTIL",53,0)
 S UNIQN=$J_NOW
"RTN","PXRMUTIL",54,0)
 S FILENAME="PXRMWSD"_UNIQN_".DAT"
"RTN","PXRMUTIL",55,0)
 S HFNAME=PATH_FILENAME
"RTN","PXRMUTIL",56,0)
 S IOP="PXRM WORKSTATION;80"
"RTN","PXRMUTIL",57,0)
 S %ZIS("HFSMODE")="W"
"RTN","PXRMUTIL",58,0)
 S %ZIS("HFSNAME")=HFNAME
"RTN","PXRMUTIL",59,0)
 S L=0,DIC=PXRMROOT
"RTN","PXRMUTIL",60,0)
 D EN1^DIP
"RTN","PXRMUTIL",61,0)
 ;Move the host file into a global.
"RTN","PXRMUTIL",62,0)
 S GBL="^TMP(""PXRMUTIL"",$J,1,0)"
"RTN","PXRMUTIL",63,0)
 S GBL=$NA(@GBL)
"RTN","PXRMUTIL",64,0)
 K ^TMP("PXRMUTIL",$J)
"RTN","PXRMUTIL",65,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILENAME,GBL,3)
"RTN","PXRMUTIL",66,0)
 ;Look for a form feed, remove it and all subsequent lines.
"RTN","PXRMUTIL",67,0)
 S FF=$C(12)
"RTN","PXRMUTIL",68,0)
 I $G(VAR)["^" D
"RTN","PXRMUTIL",69,0)
 . S VAR=$NA(@VAR)
"RTN","PXRMUTIL",70,0)
 . S VAR=$P(VAR,")",1)
"RTN","PXRMUTIL",71,0)
 . S VAR=VAR_",IND,0)"
"RTN","PXRMUTIL",72,0)
 . S (DONE,IND)=0
"RTN","PXRMUTIL",73,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMUTIL",$J,IND)) Q:+IND=0  D
"RTN","PXRMUTIL",74,0)
 .. I ^TMP("PXRMUTIL",$J,IND,0)=FF S DONE=1 Q
"RTN","PXRMUTIL",75,0)
 .. S @VAR=^TMP("PXRMUTIL",$J,IND,0)
"RTN","PXRMUTIL",76,0)
 E  D
"RTN","PXRMUTIL",77,0)
 . S (DONE,IND)=0
"RTN","PXRMUTIL",78,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMUTIL",$J,IND)) Q:+IND=0  D
"RTN","PXRMUTIL",79,0)
 .. S VAR(IND)=^TMP("PXRMUTIL",$J,IND,0)
"RTN","PXRMUTIL",80,0)
 .. I VAR(IND)=FF K ARRAY(IND) S DONE=1
"RTN","PXRMUTIL",81,0)
 K ^TMP("PXRMUTIL",$J)
"RTN","PXRMUTIL",82,0)
 ;Delete the host file.
"RTN","PXRMUTIL",83,0)
 S FILESPEC(FILENAME)=""
"RTN","PXRMUTIL",84,0)
 S SUCCESS=$$DEL^%ZISH(PATH,$NA(FILESPEC))
"RTN","PXRMUTIL",85,0)
 Q
"RTN","PXRMUTIL",86,0)
 ;
"RTN","PXRMUTIL",87,0)
 ;===========================================================
"RTN","PXRMUTIL",88,0)
FNFR(ROOT) ;Given the root of a file return the file number.
"RTN","PXRMUTIL",89,0)
 Q +$P(@(ROOT_"0)"),U,2)
"RTN","PXRMUTIL",90,0)
 ;
"RTN","PXRMUTIL",91,0)
 ;===========================================================
"RTN","PXRMUTIL",92,0)
NTOAN(NUMBER) ;Given an integer N return an alphabetic string that can be
"RTN","PXRMUTIL",93,0)
 ;used for sorting. This will be modulus 26. For example N=0 returns
"RTN","PXRMUTIL",94,0)
 ;A, N=26 returns BA etc.
"RTN","PXRMUTIL",95,0)
 N ALPH
"RTN","PXRMUTIL",96,0)
 S ALPH(0)="A",ALPH(1)="B",ALPH(2)="C",ALPH(3)="D",ALPH(4)="E"
"RTN","PXRMUTIL",97,0)
 S ALPH(5)="F",ALPH(6)="G",ALPH(7)="H",ALPH(8)="I",ALPH(9)="J"
"RTN","PXRMUTIL",98,0)
 S ALPH(10)="K",ALPH(11)="L",ALPH(12)="M",ALPH(13)="N",ALPH(14)="O"
"RTN","PXRMUTIL",99,0)
 S ALPH(15)="P",ALPH(16)="Q",ALPH(17)="R",ALPH(18)="S",ALPH(19)="T"
"RTN","PXRMUTIL",100,0)
 S ALPH(20)="U",ALPH(21)="V",ALPH(22)="W",ALPH(23)="X",ALPH(24)="Y"
"RTN","PXRMUTIL",101,0)
 S ALPH(25)="Z"
"RTN","PXRMUTIL",102,0)
 ;
"RTN","PXRMUTIL",103,0)
 N ANUM,DIGIT,NUM,P26,PC,PWR
"RTN","PXRMUTIL",104,0)
 S ANUM="",NUM=NUMBER,PWR=0
"RTN","PXRMUTIL",105,0)
 S P26(PWR)=1
"RTN","PXRMUTIL",106,0)
 F PWR=1:1 S P26(PWR)=26*P26(PWR-1) I P26(PWR)>NUMBER Q
"RTN","PXRMUTIL",107,0)
 S PWR=PWR-1
"RTN","PXRMUTIL",108,0)
 F PC=PWR:-1:0 D
"RTN","PXRMUTIL",109,0)
 . S DIGIT=NUM\P26(PC)
"RTN","PXRMUTIL",110,0)
 . S ANUM=ANUM_ALPH(DIGIT)
"RTN","PXRMUTIL",111,0)
 . S NUM=NUM-(DIGIT*P26(PC))
"RTN","PXRMUTIL",112,0)
 Q ANUM
"RTN","PXRMUTIL",113,0)
 ;
"RTN","PXRMUTIL",114,0)
 ;===========================================================
"RTN","PXRMUTIL",115,0)
SEHIST(FILENUM,ROOT,IEN) ;Set the edit date and edit by and prompt the
"RTN","PXRMUTIL",116,0)
 ;user for the edit comment.
"RTN","PXRMUTIL",117,0)
 N DIC,DIR,DWLW,DWPK,ENTRY,FDA,FDAIEN,IENS,IND,MSG,SFN,TARGET,X,Y
"RTN","PXRMUTIL",118,0)
 K ^TMP("PXRMWP",$J)
"RTN","PXRMUTIL",119,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMUTIL",120,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMUTIL",121,0)
 I SFN=0 Q
"RTN","PXRMUTIL",122,0)
 S ENTRY=ROOT_IEN_",110)"
"RTN","PXRMUTIL",123,0)
 S IND=$O(@ENTRY@("B"),-1)
"RTN","PXRMUTIL",124,0)
 S IND=IND+1
"RTN","PXRMUTIL",125,0)
 S IENS="+"_IND_","_IEN_","
"RTN","PXRMUTIL",126,0)
 S FDAIEN(IEN)=IEN
"RTN","PXRMUTIL",127,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMUTIL",128,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMUTIL",129,0)
 ;Prompt the user for edit comments.
"RTN","PXRMUTIL",130,0)
 S DIC="^TMP(""PXRMWP"",$J,"
"RTN","PXRMUTIL",131,0)
 S DWLW=72
"RTN","PXRMUTIL",132,0)
 S DWPK=1
"RTN","PXRMUTIL",133,0)
 W !,"Input your edit comments."
"RTN","PXRMUTIL",134,0)
 S DIR(0)="Y"_U_"AO"
"RTN","PXRMUTIL",135,0)
 S DIR("A")="Edit"
"RTN","PXRMUTIL",136,0)
 S DIR("B")="NO"
"RTN","PXRMUTIL",137,0)
 D ^DIR
"RTN","PXRMUTIL",138,0)
 I Y D
"RTN","PXRMUTIL",139,0)
 . D EN^DIWE
"RTN","PXRMUTIL",140,0)
 . K ^TMP("PXRMWP",$J,0)
"RTN","PXRMUTIL",141,0)
 . I $D(^TMP("PXRMWP",$J)) S FDA(SFN,IENS,2)="^TMP(""PXRMWP"",$J)"
"RTN","PXRMUTIL",142,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMUTIL",143,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMUTIL",144,0)
 K ^TMP("PXRMWP",$J)
"RTN","PXRMUTIL",145,0)
 Q
"RTN","PXRMUTIL",146,0)
 ;
"RTN","PXRMUTIL",147,0)
 ;===========================================================
"RTN","PXRMUTIL",148,0)
SFRES(SDIR,NRES,FIEVAL) ;Save the finding result.
"RTN","PXRMUTIL",149,0)
 I NRES=0 S FIEVAL=0 Q
"RTN","PXRMUTIL",150,0)
 N DATE,IND,OA,SUB,TF
"RTN","PXRMUTIL",151,0)
 F IND=1:1:NRES S OA(FIEVAL(IND,"DATE"),FIEVAL(IND),IND)=""
"RTN","PXRMUTIL",152,0)
 ;If SDIR is positive get the oldest date otherwise get the most
"RTN","PXRMUTIL",153,0)
 ;recent date.
"RTN","PXRMUTIL",154,0)
 S DATE=$S(SDIR>0:$O(OA("")),1:$O(OA(""),-1))
"RTN","PXRMUTIL",155,0)
 ;If there is a true finding on DATE get it.
"RTN","PXRMUTIL",156,0)
 S TF=$O(OA(DATE,""),-1)
"RTN","PXRMUTIL",157,0)
 S IND=$O(OA(DATE,TF,""))
"RTN","PXRMUTIL",158,0)
 S FIEVAL=TF
"RTN","PXRMUTIL",159,0)
 S SUB=""
"RTN","PXRMUTIL",160,0)
 F  S SUB=$O(FIEVAL(IND,SUB)) Q:SUB=""  M FIEVAL(SUB)=FIEVAL(IND,SUB)
"RTN","PXRMUTIL",161,0)
 Q
"RTN","PXRMUTIL",162,0)
 ;
"RTN","PXRMUTIL",163,0)
 ;===========================================================
"RTN","PXRMUTIL",164,0)
SSPAR(FIND0,NOCC,BDT,EDT) ;Set the finding search parameters.
"RTN","PXRMUTIL",165,0)
 S BDT=$P(FIND0,U,8),EDT=$P(FIND0,U,11),NOCC=$P(FIND0,U,14)
"RTN","PXRMUTIL",166,0)
 I NOCC="" S NOCC=1
"RTN","PXRMUTIL",167,0)
 ;Convert the dates to FileMan dates.
"RTN","PXRMUTIL",168,0)
 S BDT=$S(BDT="":0,BDT=0:0,1:$$CTFMD^PXRMDATE(BDT))
"RTN","PXRMUTIL",169,0)
 I EDT="" S EDT="T"
"RTN","PXRMUTIL",170,0)
 S EDT=$$CTFMD^PXRMDATE(EDT)
"RTN","PXRMUTIL",171,0)
 ;If EDT does not contain a time set it to the end of the day.
"RTN","PXRMUTIL",172,0)
 I EDT'["." S EDT=EDT_".235959"
"RTN","PXRMUTIL",173,0)
 Q
"RTN","PXRMUTIL",174,0)
 ;
"RTN","PXRMUTIL",175,0)
 ;===========================================================
"RTN","PXRMUTIL",176,0)
STRREP(STRING,TS,RS) ;Replace every occurrence of the target string (TS)
"RTN","PXRMUTIL",177,0)
 ;in STRING with the replacement string (RS).
"RTN","PXRMUTIL",178,0)
 ;Example 9.19 (page 220) in "The Complete Mumps" by John Lewkowicz:
"RTN","PXRMUTIL",179,0)
 ;  F  Q:STRING'[TS  S STRING=$P(STRING,TS)_RS_$P(STRING,TS,2,999)
"RTN","PXRMUTIL",180,0)
 ;fails if any portion of the target string is contained in the with
"RTN","PXRMUTIL",181,0)
 ;string. Therefore a more elaborate version is required.
"RTN","PXRMUTIL",182,0)
 ;
"RTN","PXRMUTIL",183,0)
 N IND,NPCS,STR
"RTN","PXRMUTIL",184,0)
 I STRING'[TS Q STRING
"RTN","PXRMUTIL",185,0)
 ;Count the number of pieces using the target string as the delimiter.
"RTN","PXRMUTIL",186,0)
 S NPCS=$L(STRING,TS)
"RTN","PXRMUTIL",187,0)
 ;Extract the pieces and concatenate RS
"RTN","PXRMUTIL",188,0)
 S STR=""
"RTN","PXRMUTIL",189,0)
 F IND=1:1:NPCS-1 S STR=STR_$P(STRING,TS,IND)_RS
"RTN","PXRMUTIL",190,0)
 S STR=STR_$P(STRING,TS,NPCS)
"RTN","PXRMUTIL",191,0)
 Q STR
"RTN","PXRMUTIL",192,0)
 ;
"RTN","PXRMUTIL",193,0)
 ;===========================================================
"RTN","PXRMUTIL",194,0)
VEDIT(ROOT,IEN) ;This is used as a DIC("S") screen to select which entries
"RTN","PXRMUTIL",195,0)
 ;a user can edit.
"RTN","PXRMUTIL",196,0)
 N CLASS,ENTRY,VALID
"RTN","PXRMUTIL",197,0)
 S ENTRY=ROOT_IEN_")"
"RTN","PXRMUTIL",198,0)
 S CLASS=$P($G(@ENTRY@(100)),U,1)
"RTN","PXRMUTIL",199,0)
 I CLASS="N" D
"RTN","PXRMUTIL",200,0)
 . I ($G(PXRMINST)=1),(DUZ(0)="@") S VALID=1
"RTN","PXRMUTIL",201,0)
 . E  S VALID=0
"RTN","PXRMUTIL",202,0)
 E  S VALID=1
"RTN","PXRMUTIL",203,0)
 Q VALID
"RTN","PXRMUTIL",204,0)
 ;
"RTN","PXRMVALC")
0^173^B64415082
"RTN","PXRMVALC",1,0)
PXRMVALC ; SLC/KR - VAL Validate Codes (format/value)    ;08/15/2006
"RTN","PXRMVALC",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMVALC",3,0)
 Q
"RTN","PXRMVALC",4,0)
 ;   
"RTN","PXRMVALC",5,0)
 ; Entry points (extrinsic functions)
"RTN","PXRMVALC",6,0)
 ;   
"RTN","PXRMVALC",7,0)
 ;     ICD^PXRMVALC(<code>)   Validate ICD-9-CM Diagnosis Code
"RTN","PXRMVALC",8,0)
 ;     ICP^PXRMVALC(<code>)   Validate ICD-9-CM Procedure Code
"RTN","PXRMVALC",9,0)
 ;     CPT^PXRMVALC(<code>)   Validate CPT-4 Procedure Code
"RTN","PXRMVALC",10,0)
 ;   
"RTN","PXRMVALC",11,0)
 ;  All entry points return:
"RTN","PXRMVALC",12,0)
 ;  
"RTN","PXRMVALC",13,0)
 ;    <validity>^<input>^<output>^<error>^<file #>^<global root>^
"RTN","PXRMVALC",14,0)
 ;    <type of code>^<input IEN>^<input flag>^<output IEN>^
"RTN","PXRMVALC",15,0)
 ;    <output flag>^<description>
"RTN","PXRMVALC",16,0)
 ;   
"RTN","PXRMVALC",17,0)
ICD(X) ; Validate ICD-9-CM Diagnosis Code from file 80
"RTN","PXRMVALC",18,0)
 S X=$G(X),U="^" N CHR,CHKD,CIN,CODE,COUT,DIC,ERR,ES,FNUM,FORM,IENI,IENO,IFIN,IFOUT,NAME,NUMERIC,PAT,TY,VAL,Y
"RTN","PXRMVALC",19,0)
 S VAL=1,FNUM=80,DIC="ICD9(",(IFIN,IFOUT,NAME)="",CIN=$TR(X,"""",""),U="^"
"RTN","PXRMVALC",20,0)
 S FORM=$S($E(X,1)="E":2,$E(X,1)="V":3,$E(X,1)?1N:1,1:1),TY=$S(FORM=2:"ICD ""E"" code",FORM=3:"ICD ""V"" code",FORM=1:"ICD code",1:"ICD code")
"RTN","PXRMVALC",21,0)
 S ERR="Valid "_TY,CHKD=$S(FORM=2:"ICD-9-CM ""E"" external cause code",FORM=3:"ICD-9-CM ""V"" health factor code",FORM=1:"ICD-9-CM diagnosis code",1:"ICD-9-CM code")
"RTN","PXRMVALC",22,0)
 S PAT=$S(FORM=2:"ENNN.nn",FORM=3:"VNN.nn",FORM=1:"NNN.nn",1:"ENNN.nn, VNN.nn or NNN.nn")
"RTN","PXRMVALC",23,0)
 ; Code transformation
"RTN","PXRMVALC",24,0)
 S CODE=X S:CODE'["." CODE=CODE_"."
"RTN","PXRMVALC",25,0)
 S:FORM=1&($L($P(CODE,".",1))=1)&(+($P(CODE,".",1))>0) $P(CODE,".",1)="00"_$P(CODE,".",1) S:FORM=1&($L($P(CODE,".",1))=2)&(+($P(CODE,".",1))>0) $P(CODE,".",1)="0"_$P(CODE,".",1) S X=CODE
"RTN","PXRMVALC",26,0)
 S CODE=$P(CODE,".",1,2),CODE=$$NEXT^ICDAPIU(CODE),COUT=CODE,(IENI,IENO)=""
"RTN","PXRMVALC",27,0)
 I +$$CODEN^ICDCODE(COUT,80)>0 D
"RTN","PXRMVALC",28,0)
 .N ICD9,IFOUTX
"RTN","PXRMVALC",29,0)
 .S IENO=+$$CODEN^ICDCODE(COUT,80)
"RTN","PXRMVALC",30,0)
 .S ICD9=$$ICDDX^ICDCODE(+IENO)
"RTN","PXRMVALC",31,0)
 .S NAME=$P(ICD9,U,4)
"RTN","PXRMVALC",32,0)
 .S IFOUTX=$P(ICD9,U,10),IFOUT=$S(IFOUTX=0:1,IFOUTX=1:0,1:"")
"RTN","PXRMVALC",33,0)
 S ES="Invalid "_TY_" format "
"RTN","PXRMVALC",34,0)
 ; Format
"RTN","PXRMVALC",35,0)
 ;    not enough digits
"RTN","PXRMVALC",36,0)
 I $E(CIN,1)="E",$L($P($E(CIN,2,$L(CIN)),".",1))<3 D ERR((ES_"(not enough digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",37,0)
 I $E(CIN,1)?1N,$L($P(CIN,".",1))<3 D ERR((ES_"(not enough digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",38,0)
 I $E(CIN,1)="V",$L($P($E(CIN,2,$L(CIN)),".",1))<2 D ERR((ES_"(not enough digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",39,0)
 ;    too many digits
"RTN","PXRMVALC",40,0)
 I $E(CIN,1)="E",$L($P($E(CIN,2,$L(CIN)),".",1))>3 D ERR((ES_"(too many digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",41,0)
 I $E(CIN,1)?1N,$L($P(CIN,".",1))>3 D ERR((ES_"(too many digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",42,0)
 I $E(CIN,1)="V",$L($P($E(CIN,2,$L(CIN)),".",1))>2 D ERR((ES_"(too many digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",43,0)
 ;    missing decimal point
"RTN","PXRMVALC",44,0)
 I CIN'["." D ERR((ES_"(missing decimal point "_PAT_")")) G AQ
"RTN","PXRMVALC",45,0)
 ;    to many decimal points
"RTN","PXRMVALC",46,0)
 I $L(CIN,".")>2 D ERR((ES_"(too many decimal points "_PAT_")")) G AQ
"RTN","PXRMVALC",47,0)
 ;    to many decimal places
"RTN","PXRMVALC",48,0)
 I $L($P(CIN,".",2))>2 D ERR((ES_"(too many decimals places, "_PAT_")")) G AQ
"RTN","PXRMVALC",49,0)
 ;    non-numeric decimal
"RTN","PXRMVALC",50,0)
 I $P(CIN,".",2)'?2N&($P(CIN,".",2)'?1N)&($P(CIN,".",2)'="") D ERR((ES_"(non-numeric decimal, "_PAT_")")) G AQ
"RTN","PXRMVALC",51,0)
 ;    invalid pattern
"RTN","PXRMVALC",52,0)
 I $E(CIN,1)="E",$P(CIN,".",1)'?1U3N D ERR((ES_"("_PAT_")")) G AQ
"RTN","PXRMVALC",53,0)
 I $E(CIN,1)="V",$P(CIN,".",1)'?1U2N D ERR((ES_"("_PAT_")")) G AQ
"RTN","PXRMVALC",54,0)
 I $E(CIN,1)?1N,$P(CIN,".",1)'?3N D ERR((ES_"("_PAT_")")) G AQ
"RTN","PXRMVALC",55,0)
 ; Value
"RTN","PXRMVALC",56,0)
 ;    not found
"RTN","PXRMVALC",57,0)
 I +$$CODEN^ICDCODE(CIN,80)<0 D  G AQ
"RTN","PXRMVALC",58,0)
 . N TC D ERR((TY_" not found in the ICD-9 file (#80)"))
"RTN","PXRMVALC",59,0)
 . S TC=COUT S:'$L(TC) TC=CIN I $E(TC,$L(TC))="0" D
"RTN","PXRMVALC",60,0)
 . . N SC,COUT S (SC,COUT)=TC F  S TC=$E(TC,1,($L(TC)-1)) S:+$$CODEN^ICDCODE(TC,80)>0 SC=TC Q:$E(TC,$L(TC))'="0"!(SC'=COUT)  Q:TC=""
"RTN","PXRMVALC",61,0)
 . . S TC="" S:SC'=COUT TC=SC
"RTN","PXRMVALC",62,0)
 . S:$L(TC) COUT=TC
"RTN","PXRMVALC",63,0)
 . S:+$$CODEN^ICDCODE(CIN_"0")>0 COUT=CIN_"0"
"RTN","PXRMVALC",64,0)
 . I +$$CODEN^ICDCODE(COUT,80)>0 D
"RTN","PXRMVALC",65,0)
 . . N ICD9,IFOUTX
"RTN","PXRMVALC",66,0)
 . . S IENO=+$$CODEN^ICDCODE(COUT,80)
"RTN","PXRMVALC",67,0)
 . . S ICD9=$$ICDDX^ICDCODE(+IENO)
"RTN","PXRMVALC",68,0)
 . . S NAME=$P(ICD9,U,4)
"RTN","PXRMVALC",69,0)
 . . S IFOUTX=$P(ICD9,U,10),IFOUT=$S(IFOUTX=0:1,IFOUTX=1:0,1:"")
"RTN","PXRMVALC",70,0)
 ;    found
"RTN","PXRMVALC",71,0)
 I $$CODEN^ICDCODE(CIN,80)>0 D  G AQ
"RTN","PXRMVALC",72,0)
 . D ERR(("Valid "_TY)) S VAL=1
"RTN","PXRMVALC",73,0)
 . S IENI=+$$CODEN^ICDCODE(CIN,80)
"RTN","PXRMVALC",74,0)
 . N ICD9,IFINX
"RTN","PXRMVALC",75,0)
 . S ICD9=$$ICDDX^ICDCODE(IENI)
"RTN","PXRMVALC",76,0)
 . S NAME=$P(ICD9,U,4)
"RTN","PXRMVALC",77,0)
 . S IFINX=$P(ICD9,U,10),IFIN=$S(IFINX=0:1,IFINX=1:0,1:"")
"RTN","PXRMVALC",78,0)
 . S:(+(IFOUT)+(IFIN))>0 ERR="Inactive "_TY
"RTN","PXRMVALC",79,0)
 G AQ
"RTN","PXRMVALC",80,0)
 ;   
"RTN","PXRMVALC",81,0)
ICP(X) ; Validate ICD-9-CM Procedure Code from file 80.1
"RTN","PXRMVALC",82,0)
 S X=$G(X),U="^" N CHR,CHKD,CIN,CODE,COUT,DIC,ERR,ES,FNUM,FORM,IENI,IENO,IFIN,IFOUT,NAME,NUMERIC,PAT,TY,VAL,Y
"RTN","PXRMVALC",83,0)
 S FNUM=80.1,DIC="ICD0(",VAL=1,(NAME,IFIN,IFOUT)="",CIN=$TR(X,"""","")
"RTN","PXRMVALC",84,0)
 ; Code transformation
"RTN","PXRMVALC",85,0)
 S CODE=X,TY="ICD Procedure code",PAT="NN.nn",CHKD=TY S:CODE'["." CODE=CODE_"." S:$L($P(CODE,".",1))=1 CODE="0"_CODE S CODE=$$NEXT^ICDAPIU(CODE),COUT=CODE
"RTN","PXRMVALC",86,0)
 S VAL=1,ERR="Valid "_TY
"RTN","PXRMVALC",87,0)
 I +$$CODEN^ICDCODE(CODE,80.1)>0 D
"RTN","PXRMVALC",88,0)
 .S IENO=+$$CODEN^ICDCODE(CODE,80.1)
"RTN","PXRMVALC",89,0)
 .N ICDO,IFOUTX
"RTN","PXRMVALC",90,0)
 .S ICDO=$$ICDOP^ICDCODE(+IENO)
"RTN","PXRMVALC",91,0)
 .S NAME=$P(ICDO,"^",5)
"RTN","PXRMVALC",92,0)
 .S IFOUTX=$P(ICDO,U,10),IFOUT=$S(IFOUTX=0:1,IFOUTX=1:"",1:"")
"RTN","PXRMVALC",93,0)
 S ES="Invalid "_TY_" format "
"RTN","PXRMVALC",94,0)
 ; Format
"RTN","PXRMVALC",95,0)
 ;    not enough digits
"RTN","PXRMVALC",96,0)
 I $L($P(CIN,".",1))<2 D ERR((ES_"(not enough digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",97,0)
 ;    too many digits
"RTN","PXRMVALC",98,0)
 I $L($P(CIN,".",1))>2 D ERR((ES_"(too many digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",99,0)
 ;    missing decimal point
"RTN","PXRMVALC",100,0)
 I CIN'["." D ERR((ES_"(missing decimal point "_PAT_")")) G AQ
"RTN","PXRMVALC",101,0)
 ;    too many decimal points
"RTN","PXRMVALC",102,0)
 I $L(CIN,".")>2 D ERR((ES_"(too many decimal points "_PAT_")")) G AQ
"RTN","PXRMVALC",103,0)
 ;    too many decimal places
"RTN","PXRMVALC",104,0)
 I $L($P(CIN,".",2))>2 D ERR((ES_"(too many decimals places, "_PAT_")")) G AQ
"RTN","PXRMVALC",105,0)
 ;    non-numeric decimal
"RTN","PXRMVALC",106,0)
 I $P(CIN,".",2)'?2N&($P(CIN,".",2)'?1N)&($P(CIN,".",2)'="") D ERR((ES_"(non-numeric decimal, "_PAT_")")) G AQ
"RTN","PXRMVALC",107,0)
 ;    invalid pattern
"RTN","PXRMVALC",108,0)
 I $P(CIN,".",1)'?2N D ERR((ES_"("_PAT_")")) G AQ
"RTN","PXRMVALC",109,0)
 ; Value
"RTN","PXRMVALC",110,0)
 ;    not found
"RTN","PXRMVALC",111,0)
 I +$$CODEN^ICDCODE(CIN,80.1)<0 D  G AQ
"RTN","PXRMVALC",112,0)
 . N TC D ERR((TY_" not found in the ICD-0 file (#80.1)")) S COUT=""
"RTN","PXRMVALC",113,0)
 . S TC=COUT S:'$L(TC) TC=CIN I $E(TC,$L(TC))="0" D
"RTN","PXRMVALC",114,0)
 . . N SC,COUT S (SC,COUT)=TC F  S TC=$E(TC,1,($L(TC)-1)) S:+$$CODEN^ICDCODE(TC,80.1)>0 SC=TC Q:$E(TC,$L(TC))'="0"!(SC'=COUT)  Q:TC=""
"RTN","PXRMVALC",115,0)
 . . S TC="" S:SC'=COUT TC=SC
"RTN","PXRMVALC",116,0)
 . S:$L(TC) COUT=TC
"RTN","PXRMVALC",117,0)
 . S:+$$CODEN^ICDCODE(CIN_"0",80.1)>0 COUT=CIN_"0"
"RTN","PXRMVALC",118,0)
 . I +$$CODEN^ICDCODE(COUT,80.1)>0 D
"RTN","PXRMVALC",119,0)
 . . S IENO=+$$CODEN^ICDCODE(COUT,80.1)
"RTN","PXRMVALC",120,0)
 . . N ICDO,IFOUTX
"RTN","PXRMVALC",121,0)
 . . S ICDO=$$ICDOP^ICDCODE(+IENO)
"RTN","PXRMVALC",122,0)
 . . S NAME=$P(ICDO,"^",5)
"RTN","PXRMVALC",123,0)
 . . S IFOUTX=$P(ICDO,U,10),IFOUT=$S(IFOUTX=0:1,IFOUTX=1:"",1:"")
"RTN","PXRMVALC",124,0)
 ;    found
"RTN","PXRMVALC",125,0)
 I $$CODEN^ICDCODE(CIN,80.1)>0 D  G AQ
"RTN","PXRMVALC",126,0)
 . S VAL=1,ERR="Valid "_TY
"RTN","PXRMVALC",127,0)
 . S IENI=+$$CODEN^ICDCODE(CIN,80.1)
"RTN","PXRMVALC",128,0)
 . N ICDO,IFINX
"RTN","PXRMVALC",129,0)
 . S ICDO=$$ICDOP^ICDCODE(+IENI)
"RTN","PXRMVALC",130,0)
 . S NAME=$P(ICDO,"^",5)
"RTN","PXRMVALC",131,0)
 . S IFINX=$P(ICDO,"^",10),IFIN=$S(IFINX=0:1,IFINX=1:"",1:"")
"RTN","PXRMVALC",132,0)
 . S:(+(IFOUT)+(IFIN))>0 ERR="Inactive "_TY
"RTN","PXRMVALC",133,0)
 G AQ
"RTN","PXRMVALC",134,0)
 ;            
"RTN","PXRMVALC",135,0)
CPT(X) ; Validate Procedure Code from file 81
"RTN","PXRMVALC",136,0)
 S X=$G(X),U="^"
"RTN","PXRMVALC",137,0)
 N CHR,CHKD,CIN,CODE,COUT,DIC,ERR,ES,FNUM,FORM,IENI,IENO,IFIN,IFOUT
"RTN","PXRMVALC",138,0)
 N NAME,NUMERIC,PAT,STATUS,TEMP,TY,VAL,Y
"RTN","PXRMVALC",139,0)
 S VAL=1,FNUM=81,DIC="ICPT(",(IFIN,IFOUT,NAME)="",CIN=$TR(X,"""","")
"RTN","PXRMVALC",140,0)
 S FORM=$S(CIN?5N:1,CIN?1A4N:2,CIN?4N1A:2,1:0)
"RTN","PXRMVALC",141,0)
 S TY=$S(FORM=1:"CPT-4 code",FORM=2:"HCPCS code",1:"unknown")
"RTN","PXRMVALC",142,0)
 S CHKD=$S(FORM=1:"CPT-4 procedure code",FORM=2:"HCPCS procedure code",1:"Unknown format")
"RTN","PXRMVALC",143,0)
 S PAT=$S(FORM=1:"NNNNN",FORM=2:"ANNNN or NNNNA",1:"")
"RTN","PXRMVALC",144,0)
 S ES="Invalid "_TY_" format "
"RTN","PXRMVALC",145,0)
 ; Code transformation
"RTN","PXRMVALC",146,0)
 ;    HCPCS
"RTN","PXRMVALC",147,0)
 S CODE=X I FORM=2 D
"RTN","PXRMVALC",148,0)
 . N CHR,NUMERIC S CHR=$E(CODE,1),NUMERIC=$E(CODE,2,$L(CODE))
"RTN","PXRMVALC",149,0)
 . S NUMERIC=$TR(NUMERIC,"~!@#$%^&*()_-+=[{]};:\|,./?<>QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm","0000000000000000000000000000000000000000000000000000000000000000000000000000000000")
"RTN","PXRMVALC",150,0)
 . F  Q:$E(NUMERIC,1)'="0"  S NUMERIC=$E(NUMERIC,2,$L(NUMERIC))
"RTN","PXRMVALC",151,0)
 . S NUMERIC=+NUMERIC F  Q:$L(NUMERIC)>3  S NUMERIC="0"_NUMERIC
"RTN","PXRMVALC",152,0)
 . S CODE=CHR_NUMERIC
"RTN","PXRMVALC",153,0)
 ;    CPT-4
"RTN","PXRMVALC",154,0)
 I FORM=1 D
"RTN","PXRMVALC",155,0)
 . N NUMERIC S NUMERIC=CODE,NUMERIC=$TR(NUMERIC,"~!@#$%^&*()_-+=[{]};:\|,./?<>QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm","0000000000000000000000000000000000000000000000000000000000000000000000000000000000")
"RTN","PXRMVALC",156,0)
 . I +NUMERIC>0,$E(NUMERIC,1)'="0",$L(NUMERIC)<5 F  Q:$L(NUMERIC)=5  S NUMERIC="0"_NUMERIC
"RTN","PXRMVALC",157,0)
 . I +NUMERIC>0,$E(NUMERIC,1)="0",$L(NUMERIC)<5 F  Q:$L(NUMERIC)=5  S NUMERIC=NUMERIC_"0"
"RTN","PXRMVALC",158,0)
 . F  Q:$E(NUMERIC,1)'="0"  S NUMERIC=$E(NUMERIC,2,$L(NUMERIC))
"RTN","PXRMVALC",159,0)
 . S NUMERIC=+NUMERIC F  Q:$L(NUMERIC)>4  S NUMERIC="0"_NUMERIC
"RTN","PXRMVALC",160,0)
 . S CODE=NUMERIC
"RTN","PXRMVALC",161,0)
 S CODE=$$NEXT^ICPTAPIU(CODE),COUT=CODE S (IENI,IENO)=""
"RTN","PXRMVALC",162,0)
 I $L(COUT),+$$CODEN^ICPTCOD(COUT)>0 D
"RTN","PXRMVALC",163,0)
 . S IENO=+$$CODEN^ICPTCOD(COUT)
"RTN","PXRMVALC",164,0)
 . S TEMP=$$CPT^ICPTCOD(IENO)
"RTN","PXRMVALC",165,0)
 . S NAME=$P(TEMP,U,3)
"RTN","PXRMVALC",166,0)
 . S STATUS=$P(TEMP,U,7)
"RTN","PXRMVALC",167,0)
 . S IFOUT=$S(STATUS:"",1:1)
"RTN","PXRMVALC",168,0)
 ; Format
"RTN","PXRMVALC",169,0)
 ;    not enough characters
"RTN","PXRMVALC",170,0)
 I $L(CIN)<5 D ERR((ES_"(not enough characters)")) G AQ
"RTN","PXRMVALC",171,0)
 ;    too many characters
"RTN","PXRMVALC",172,0)
 I $L(CIN)>5 D ERR((ES_"(too many characters)")) G AQ
"RTN","PXRMVALC",173,0)
 ; Invalid pattern
"RTN","PXRMVALC",174,0)
 I FORM=0 D ERR(ES_PAT) G AQ
"RTN","PXRMVALC",175,0)
 ; Value not found
"RTN","PXRMVALC",176,0)
 I +$$CODEN^ICPTCOD(CIN)<1 D ERR((TY_" not found in the CPT file (#81)")) S COUT="" G AQ
"RTN","PXRMVALC",177,0)
 ;    found
"RTN","PXRMVALC",178,0)
 I +$$CODEN^ICPTCOD(CIN)>0 D  G AQ
"RTN","PXRMVALC",179,0)
 . S VAL=1,ERR="Valid "_TY
"RTN","PXRMVALC",180,0)
 . S IENI=+$$CODEN^ICPTCOD(CIN)
"RTN","PXRMVALC",181,0)
 . S TEMP=$$CPT^ICPTCOD(IENI)
"RTN","PXRMVALC",182,0)
 . S NAME=$P(TEMP,U,3)
"RTN","PXRMVALC",183,0)
 . S STATUS=$P(TEMP,U,7)
"RTN","PXRMVALC",184,0)
 . S IFIN=$S(STATUS:"",1:1)
"RTN","PXRMVALC",185,0)
 . S:(+(IFOUT)+(IFIN))>0 ERR="Inactive "_TY
"RTN","PXRMVALC",186,0)
 G AQ
"RTN","PXRMVALC",187,0)
AQ ; Assemble output string and quit
"RTN","PXRMVALC",188,0)
 S X=$G(VAL)_U_$G(CIN)_U_$G(COUT)_U_$G(ERR)_U_FNUM
"RTN","PXRMVALC",189,0)
 S X=X_U_DIC_U_$G(CHKD)_U_$G(IENI)_U_$G(IFIN)_U_$G(IENO)_U_$G(IFOUT)_U_$G(NAME)
"RTN","PXRMVALC",190,0)
 F  Q:$E(X,$L(X))'="^"  S X=$E(X,1,($L(X)-1))
"RTN","PXRMVALC",191,0)
 Q X
"RTN","PXRMVALC",192,0)
ERR(X) S VAL=0,ERR=$G(X) Q
"RTN","PXRMVCPT")
0^19^B26000582
"RTN","PXRMVCPT",1,0)
PXRMVCPT ; SLC/PKR - Code to handle VCPT data. ;10/21/2005
"RTN","PXRMVCPT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMVCPT",3,0)
 ;
"RTN","PXRMVCPT",4,0)
 ;===============================================
"RTN","PXRMVCPT",5,0)
FPDAT(DFN,TAXARR,NGET,SDIR,BDT,EDT,FLIST) ;Find data for a patient.
"RTN","PXRMVCPT",6,0)
 N DAS,DATE,DS,EDTT,ICPTP,NFOUND,NODE,NNODE,TDATE,TIND,TE,TLIST,TS
"RTN","PXRMVCPT",7,0)
 I $G(^PXRMINDX(9000010.18,"DATE BUILT"))="" D  Q
"RTN","PXRMVCPT",8,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000010.18)
"RTN","PXRMVCPT",9,0)
 I '$D(^PXRMINDX(9000010.18,"PPI",DFN)) Q
"RTN","PXRMVCPT",10,0)
 S NNODE=+$P($G(TAXARR("PDS",9000010.18,81)),U,2)
"RTN","PXRMVCPT",11,0)
 I NNODE=0 Q
"RTN","PXRMVCPT",12,0)
 ;Get the start and end of the taxonomy.
"RTN","PXRMVCPT",13,0)
 S TS=$O(TAXARR(81,""))-1
"RTN","PXRMVCPT",14,0)
 S TE=$O(TAXARR(81,""),-1)
"RTN","PXRMVCPT",15,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMVCPT",16,0)
 S DS=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMVCPT",17,0)
 S NFOUND=0
"RTN","PXRMVCPT",18,0)
 F IND=1:1:NNODE D
"RTN","PXRMVCPT",19,0)
 . S NODE=TAXARR("PDS",9000010.18,81,IND)
"RTN","PXRMVCPT",20,0)
 . S ICPTP=TS
"RTN","PXRMVCPT",21,0)
 . F  S ICPTP=$O(^PXRMINDX(9000010.18,"PPI",DFN,NODE,ICPTP)) Q:(ICPTP>TE)!(ICPTP="")  D
"RTN","PXRMVCPT",22,0)
 .. I '$D(TAXARR(81,ICPTP)) Q
"RTN","PXRMVCPT",23,0)
 .. S DATE=DS
"RTN","PXRMVCPT",24,0)
 .. F  S DATE=+$O(^PXRMINDX(9000010.18,"PPI",DFN,NODE,ICPTP,DATE),SDIR) Q:$S(DATE=0:1,DATE<BDT:1,DATE>EDTT:1,1:0)  D
"RTN","PXRMVCPT",25,0)
 ... S DAS=$O(^PXRMINDX(9000010.18,"PPI",DFN,NODE,ICPTP,DATE,""))
"RTN","PXRMVCPT",26,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMVCPT",27,0)
 ... S TLIST(DATE,NFOUND)=DAS_U_ICPTP_U_NODE_U_"CPT"
"RTN","PXRMVCPT",28,0)
 ... I NFOUND>NGET D
"RTN","PXRMVCPT",29,0)
 .... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMVCPT",30,0)
 .... K TLIST(TDATE,TIND)
"RTN","PXRMVCPT",31,0)
 ;Return up to NGET of the most recent entries.
"RTN","PXRMVCPT",32,0)
 S NFOUND=0
"RTN","PXRMVCPT",33,0)
 S DATE=""
"RTN","PXRMVCPT",34,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NGET)  D
"RTN","PXRMVCPT",35,0)
 . S IND=0
"RTN","PXRMVCPT",36,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NGET)  D
"RTN","PXRMVCPT",37,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMVCPT",38,0)
 .. S FLIST(DATE,NFOUND,9000010.18)=TLIST(DATE,IND)
"RTN","PXRMVCPT",39,0)
 Q
"RTN","PXRMVCPT",40,0)
 ;
"RTN","PXRMVCPT",41,0)
 ;===============================================
"RTN","PXRMVCPT",42,0)
GETDATA(DAS,FIEVT) ;Return data for a specified V CPT entry.
"RTN","PXRMVCPT",43,0)
 ;DBIA #4250.
"RTN","PXRMVCPT",44,0)
 D VCPT^PXPXRM(DAS,.FIEVT)
"RTN","PXRMVCPT",45,0)
 Q
"RTN","PXRMVCPT",46,0)
 ;
"RTN","PXRMVCPT",47,0)
 ;===============================================
"RTN","PXRMVCPT",48,0)
GPLIST(TAXARR,NOCC,BDT,EDT,PLIST) ;Build patient list for V CPT entries.
"RTN","PXRMVCPT",49,0)
 N DAS,DATE,DFN,DS,ICPTP,NFOUND,NODE,NNODE,TEMP,TLIST
"RTN","PXRMVCPT",50,0)
 I $G(^PXRMINDX(9000010.18,"DATE BUILT"))="" D  Q
"RTN","PXRMVCPT",51,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000010.18)
"RTN","PXRMVCPT",52,0)
 S TLIST="GPLIST_PXRMVPOV"
"RTN","PXRMVCPT",53,0)
 K ^TMP($J,TLIST)
"RTN","PXRMVCPT",54,0)
 S DS=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMVCPT",55,0)
 S NNODE=+$P($G(TAXARR("PDS",9000010.18,81)),U,2)
"RTN","PXRMVCPT",56,0)
 I NNODE=0 Q
"RTN","PXRMVCPT",57,0)
 S ICPTP=""
"RTN","PXRMVCPT",58,0)
 F  S ICPTP=$O(TAXARR(81,ICPTP)) Q:(ICPTP="")  D
"RTN","PXRMVCPT",59,0)
 . I '$D(^PXRMINDX(9000010.18,"IPP",ICPTP)) Q
"RTN","PXRMVCPT",60,0)
 . F IND=1:1:NNODE D
"RTN","PXRMVCPT",61,0)
 .. S NODE=TAXARR("PDS",9000010.18,81,IND)
"RTN","PXRMVCPT",62,0)
 .. I '$D(^PXRMINDX(9000010.18,"IPP",ICPTP,NODE)) Q
"RTN","PXRMVCPT",63,0)
 .. S DFN=0
"RTN","PXRMVCPT",64,0)
 .. F  S DFN=$O(^PXRMINDX(9000010.18,"IPP",ICPTP,NODE,DFN)) Q:DFN=""  D
"RTN","PXRMVCPT",65,0)
 ... S DATE=DS
"RTN","PXRMVCPT",66,0)
 ... F  S DATE=+$O(^PXRMINDX(9000010.18,"IPP",ICPTP,NODE,DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)  D
"RTN","PXRMVCPT",67,0)
 .... S DAS=$O(^PXRMINDX(9000010.18,"IPP",ICPTP,NODE,DFN,DATE,""))
"RTN","PXRMVCPT",68,0)
 .... S ^TMP($J,TLIST,DFN,DATE,DAS)=ICPTP_U_"CPT"
"RTN","PXRMVCPT",69,0)
 ;Return up to NOCC of the most recent entries for each patient.
"RTN","PXRMVCPT",70,0)
 S DFN=0
"RTN","PXRMVCPT",71,0)
 F  S DFN=$O(^TMP($J,TLIST,DFN)) Q:DFN=""  D
"RTN","PXRMVCPT",72,0)
 . S NFOUND=0
"RTN","PXRMVCPT",73,0)
 . S DATE=""
"RTN","PXRMVCPT",74,0)
 . F  S DATE=$O(^TMP($J,TLIST,DFN,DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMVCPT",75,0)
 .. S DAS=""
"RTN","PXRMVCPT",76,0)
 .. F  S DAS=$O(^TMP($J,TLIST,DFN,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMVCPT",77,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMVCPT",78,0)
 ... S TEMP=^TMP($J,TLIST,DFN,DATE,DAS)
"RTN","PXRMVCPT",79,0)
 ... S ^TMP($J,PLIST,1,DFN,DATE,9000010.18)=DAS_U_DATE_U_TEMP
"RTN","PXRMVCPT",80,0)
 K ^TMP($J,TLIST)
"RTN","PXRMVCPT",81,0)
 Q
"RTN","PXRMVCPT",82,0)
 ;
"RTN","PXRMVCPT",83,0)
 ;===============================================
"RTN","PXRMVCPT",84,0)
MHVOUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMVCPT",85,0)
 N CODE,CPTDATA,D0,ICPTP,IND,JND,NAME,NIN,NOUT
"RTN","PXRMVCPT",86,0)
 N PN,PP,SNAME,TEMP,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMVCPT",87,0)
 S NAME="Encounter Procedure = "
"RTN","PXRMVCPT",88,0)
 S IND=0
"RTN","PXRMVCPT",89,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMVCPT",90,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMVCPT",91,0)
 . S D0=$G(^AUPNVCPT(IFIEVAL(IND,"DAS"),0))
"RTN","PXRMVCPT",92,0)
 . S ICPTP=IFIEVAL(IND,"CODEP")
"RTN","PXRMVCPT",93,0)
 . S CPTDATA=$$CPT^ICPTCOD(ICPTP,VDATE)
"RTN","PXRMVCPT",94,0)
 . S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMVCPT",95,0)
 . S TEMP=NAME_SNAME_" ("_$$EDATE^PXRMDATE(VDATE)_")"
"RTN","PXRMVCPT",96,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMVCPT",97,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVCPT",98,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMVCPT",99,0)
 Q
"RTN","PXRMVCPT",100,0)
 ;
"RTN","PXRMVCPT",101,0)
 ;===============================================
"RTN","PXRMVCPT",102,0)
OUTPUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMVCPT",103,0)
 ;maintenance output. The VCPT information is:  DATE, ICPT CODE,
"RTN","PXRMVCPT",104,0)
 ;SHORT NAME, PROVIDER NARRATIVE.
"RTN","PXRMVCPT",105,0)
 N CODE,CPT,CPTDATA,D0,ICPTP,IND,JND,NIN,NOUT
"RTN","PXRMVCPT",106,0)
 N PN,PP,SNAME,TEMP,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMVCPT",107,0)
 S NLINES=NLINES+1
"RTN","PXRMVCPT",108,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Encounter Procedure:"
"RTN","PXRMVCPT",109,0)
 S IND=0
"RTN","PXRMVCPT",110,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMVCPT",111,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMVCPT",112,0)
 . S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMVCPT",113,0)
 . S D0=$G(^AUPNVCPT(IFIEVAL(IND,"DAS"),0))
"RTN","PXRMVCPT",114,0)
 . S ICPTP=IFIEVAL(IND,"CODEP")
"RTN","PXRMVCPT",115,0)
 . S CPTDATA=$$CPT^ICPTCOD(ICPTP,VDATE)
"RTN","PXRMVCPT",116,0)
 . S CODE=$P(CPTDATA,U,2)
"RTN","PXRMVCPT",117,0)
 . S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMVCPT",118,0)
 . S TEMP=TEMP_" "_CODE
"RTN","PXRMVCPT",119,0)
 . S TEMP=TEMP_"-"_SNAME
"RTN","PXRMVCPT",120,0)
 . S PP=$P(IFIEVAL(IND,"FILE SPECIFIC"),U,1)
"RTN","PXRMVCPT",121,0)
 . S PP=$S(PP="Y":"YES",1:"NO")
"RTN","PXRMVCPT",122,0)
 . S TEMP=TEMP_" Principle Procedure: "_PP
"RTN","PXRMVCPT",123,0)
 . S TEXTIN(1)=TEMP,NIN=1
"RTN","PXRMVCPT",124,0)
 . S PN=$P(D0,U,4)
"RTN","PXRMVCPT",125,0)
 . I PN'="" S PN=$P($G(^AUTNPOV(PN,0)),U,1)
"RTN","PXRMVCPT",126,0)
 . I PN="" S PN="MISSING"
"RTN","PXRMVCPT",127,0)
 . I PN'=SNAME S TEXTIN(2)=" Prov. Narr. - "_PN,NIN=2
"RTN","PXRMVCPT",128,0)
 . D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMVCPT",129,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVCPT",130,0)
 . I IFIEVAL(IND,"COMMENTS")'="" D
"RTN","PXRMVCPT",131,0)
 .. S TEMP="Comments: "_IFIEVAL(IND,"COMMENTS")
"RTN","PXRMVCPT",132,0)
 .. D FORMATS^PXRMTEXT(INDENT+3,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMVCPT",133,0)
 .. F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVCPT",134,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMVCPT",135,0)
 Q
"RTN","PXRMVCPT",136,0)
 ;
"RTN","PXRMVLST")
0^39^B42728225
"RTN","PXRMVLST",1,0)
PXRMVLST ; SLC/PKR - Validate a reminder definition for building a patient list. ;06/16/2005
"RTN","PXRMVLST",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMVLST",3,0)
 ;==================================================
"RTN","PXRMVLST",4,0)
CCF(FINDING) ;Check a computed finding to see if it can be used for building
"RTN","PXRMVLST",5,0)
 ;a list.
"RTN","PXRMVLST",6,0)
 N IEN,TEMP,TEXT,TYPE,VALID
"RTN","PXRMVLST",7,0)
 S VALID=1
"RTN","PXRMVLST",8,0)
 S IEN=$P(FINDING,";",1)
"RTN","PXRMVLST",9,0)
 S TEMP=$G(^PXRMD(811.4,IEN,0))
"RTN","PXRMVLST",10,0)
 I TEMP="" D  Q 0
"RTN","PXRMVLST",11,0)
 . S TEXT="Trying to use computed finding number "_IEN_" it does not exist!"
"RTN","PXRMVLST",12,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMVLST",13,0)
 S TYPE=$P(TEMP,U,5)
"RTN","PXRMVLST",14,0)
 I TYPE="" S TYPE="S"
"RTN","PXRMVLST",15,0)
 I TYPE'="L" D
"RTN","PXRMVLST",16,0)
 . S VALID=0
"RTN","PXRMVLST",17,0)
 . S TEXT(1)="Computed finding "_$P(TEMP,U,1)_" is type "_TYPE_"."
"RTN","PXRMVLST",18,0)
 . S TEXT(2)="It cannot be used for building patient lists!"
"RTN","PXRMVLST",19,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMVLST",20,0)
 Q VALID
"RTN","PXRMVLST",21,0)
 ;
"RTN","PXRMVLST",22,0)
 ;==================================================
"RTN","PXRMVLST",23,0)
CTERM(DEFARR,FINUM,FINDING) ;Check terms for computed findings and
"RTN","PXRMVLST",24,0)
 ;health factors to see if they are valid for building a list.
"RTN","PXRMVLST",25,0)
 N IEN,IND,TEXT,VALID,WCR
"RTN","PXRMVLST",26,0)
 S IEN=$P(FINDING,";",1)
"RTN","PXRMVLST",27,0)
 I '$D(^PXRMD(811.5,IEN,0)) D  Q 0
"RTN","PXRMVLST",28,0)
 . S TEXT="Trying to use term number "_IEN_" it does not exist!"
"RTN","PXRMVLST",29,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMVLST",30,0)
 S VALID=1
"RTN","PXRMVLST",31,0)
 I $D(^PXRMD(811.5,IEN,20,"E","PXRMD(811.4,")) D
"RTN","PXRMVLST",32,0)
 . S IND=0
"RTN","PXRMVLST",33,0)
 . F  S IND=$O(^PXRMD(811.5,IEN,20,"E","PXRMD(811.4,",IND)) Q:IND=""  D
"RTN","PXRMVLST",34,0)
 .. S VALID=$$CCF(IND)
"RTN","PXRMVLST",35,0)
 .. I 'VALID D
"RTN","PXRMVLST",36,0)
 ... S TEXT="The computed finding is used in term "_$P(^PXRMD(811.5,IEN,0),U,1)_"."
"RTN","PXRMVLST",37,0)
 ... D EN^DDIOL(TEXT)
"RTN","PXRMVLST",38,0)
 Q VALID
"RTN","PXRMVLST",39,0)
 ;
"RTN","PXRMVLST",40,0)
 ;==================================================
"RTN","PXRMVLST",41,0)
HF(DEFARR,FINUM) ;
"RTN","PXRMVLST",42,0)
 ;If a health factor is used its Within Category Rank must be 0.
"RTN","PXRMVLST",43,0)
 N WCR,TEXT
"RTN","PXRMVLST",44,0)
 S WCR=$P(DEFARR(20,FINUM,0),U,10)
"RTN","PXRMVLST",45,0)
 I WCR=0 Q 1
"RTN","PXRMVLST",46,0)
 S TEXT="Finding "_FINUM_" is a health factor and its Within Category Rank is not 0!"
"RTN","PXRMVLST",47,0)
 D EN^DDIOL(TEXT)
"RTN","PXRMVLST",48,0)
 Q 0
"RTN","PXRMVLST",49,0)
 ;
"RTN","PXRMVLST",50,0)
 ;==================================================
"RTN","PXRMVLST",51,0)
VDEF(RIEN) ;Check a reminder definition and see if it is valid for
"RTN","PXRMVLST",52,0)
 ;use in creating a patient list.
"RTN","PXRMVLST",53,0)
 N AGEFI,AGR,DEFARR,FFL,FI,FIL,FILIST,FINDING,FINUM,FREQ,FUNN,IND,OPER
"RTN","PXRMVLST",54,0)
 N MAXAGE,MINAGE,NUMAFI,PCLOG,PFSTACK
"RTN","PXRMVLST",55,0)
 N SAAFI,SEXFI,SSTACK,TEMP,TEXT,TYPE,VALID,VF
"RTN","PXRMVLST",56,0)
 I RIEN="" Q 0
"RTN","PXRMVLST",57,0)
 I '$D(^PXD(811.9,RIEN)) D  Q 0
"RTN","PXRMVLST",58,0)
 . S TEXT="The reminder does not exist!"
"RTN","PXRMVLST",59,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMVLST",60,0)
 ;
"RTN","PXRMVLST",61,0)
 ;See if the reminder is inactive.
"RTN","PXRMVLST",62,0)
 I $P($G(^PXD(811.9,RIEN,0)),U,6) D  Q 0
"RTN","PXRMVLST",63,0)
 . S TEXT="This reminder is inactive!"
"RTN","PXRMVLST",64,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMVLST",65,0)
 ;
"RTN","PXRMVLST",66,0)
 D DEF^PXRMLDR(RIEN,.DEFARR)
"RTN","PXRMVLST",67,0)
 S PCLOG=DEFARR(31)
"RTN","PXRMVLST",68,0)
 I PCLOG="" D  Q 0
"RTN","PXRMVLST",69,0)
 . S TEXT="This reminder does not contain any patient cohort logic!"
"RTN","PXRMVLST",70,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMVLST",71,0)
 ;
"RTN","PXRMVLST",72,0)
 ;The cohort logic cannot contain the old-style MRD.
"RTN","PXRMVLST",73,0)
 I $G(^PXD(811.9,RIEN,30))["MRD" D  Q 0
"RTN","PXRMVLST",74,0)
 . S TEXT="The patient cohort logic cannot contain the old-style MRD!"
"RTN","PXRMVLST",75,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMVLST",76,0)
 ;
"RTN","PXRMVLST",77,0)
 ;The cohort logic cannot start with a not.
"RTN","PXRMVLST",78,0)
 I $E(PCLOG,1)="'" D  Q 0
"RTN","PXRMVLST",79,0)
 . S TEXT="The patient cohort logic cannot start with a not!"
"RTN","PXRMVLST",80,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMVLST",81,0)
 ;
"RTN","PXRMVLST",82,0)
 ;The cohort logic cannot contain or not.
"RTN","PXRMVLST",83,0)
 ;Change any !(' to !' before checking.
"RTN","PXRMVLST",84,0)
 S TEMP=$TR(PCLOG,"(","")
"RTN","PXRMVLST",85,0)
 S TEMP=$TR(TEMP,")","")
"RTN","PXRMVLST",86,0)
 I TEMP["!'" D  Q 0
"RTN","PXRMVLST",87,0)
 . S TEXT="The patient cohort logic cannot contain or not!"
"RTN","PXRMVLST",88,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMVLST",89,0)
 ;
"RTN","PXRMVLST",90,0)
 S OPER="!&~"
"RTN","PXRMVLST",91,0)
 S PCLOG=$$STRREP^PXRMUTIL(PCLOG,"&'","~")
"RTN","PXRMVLST",92,0)
 D POSTFIX^PXRMSTAC(PCLOG,OPER,.PFSTACK)
"RTN","PXRMVLST",93,0)
 D CFSAA^PXRMPLST(.PFSTACK)
"RTN","PXRMVLST",94,0)
 M SSTACK=PFSTACK
"RTN","PXRMVLST",95,0)
 S (AGEFI,SAAFI,SEXFI)=0
"RTN","PXRMVLST",96,0)
 F IND=1:1:PFSTACK(0) D
"RTN","PXRMVLST",97,0)
 . S TEMP=$$POP^PXRMSTAC(.PFSTACK)
"RTN","PXRMVLST",98,0)
 . I TEMP="AGE" S AGEFI=IND
"RTN","PXRMVLST",99,0)
 . I TEMP="SAA" S SAAFI=IND
"RTN","PXRMVLST",100,0)
 . I TEMP="SEX" S SEXFI=IND
"RTN","PXRMVLST",101,0)
 . I TEMP="'SEX" S SEXFI=IND
"RTN","PXRMVLST",102,0)
 ;
"RTN","PXRMVLST",103,0)
 ;If AGE is defined then make sure a baseline age range is defined.
"RTN","PXRMVLST",104,0)
 I (AGEFI)!(SAAFI) D
"RTN","PXRMVLST",105,0)
 . S (AGR,IND)=0
"RTN","PXRMVLST",106,0)
 . F  S IND=+$O(DEFARR(7,IND)) Q:IND=0  D
"RTN","PXRMVLST",107,0)
 .. S TEMP=DEFARR(7,IND,0)
"RTN","PXRMVLST",108,0)
 .. I $P(TEMP,U,2)'="" S AGR=1
"RTN","PXRMVLST",109,0)
 .. I $P(TEMP,U,3)'="" S AGR=1
"RTN","PXRMVLST",110,0)
 ;
"RTN","PXRMVLST",111,0)
 S TEMP=DEFARR(40)
"RTN","PXRMVLST",112,0)
 S NUMAFI=+$P(TEMP,U,1)
"RTN","PXRMVLST",113,0)
 S FILIST=$P(TEMP,U,2)
"RTN","PXRMVLST",114,0)
 I (AGEFI!SAAFI),('AGR&(NUMAFI=0)) D  Q 0
"RTN","PXRMVLST",115,0)
 . S TEXT(1)="Age is used in the cohort logic and neither a baseline age range or any age"
"RTN","PXRMVLST",116,0)
 . S TEXT(2)="findings have been defined!"
"RTN","PXRMVLST",117,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMVLST",118,0)
 ;
"RTN","PXRMVLST",119,0)
 ;SEX cannot be the first element unless it is followed by & AGE.
"RTN","PXRMVLST",120,0)
 I (SEXFI=1),('SAAFI) D  Q 0
"RTN","PXRMVLST",121,0)
 . S TEXT="SEX must be followed by & AGE when it starts the patient cohort logic!"
"RTN","PXRMVLST",122,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMVLST",123,0)
 ;If SEX is defined and there is not a combined sex & age finding then
"RTN","PXRMVLST",124,0)
 ;a sex must be defined and the logical operator cannot be an or.
"RTN","PXRMVLST",125,0)
 S VALID=1
"RTN","PXRMVLST",126,0)
 I (SEXFI),('SAAFI) D
"RTN","PXRMVLST",127,0)
 . I $P(^PXD(811.9,RIEN,0),U,9)="" D
"RTN","PXRMVLST",128,0)
 .. S VALID=0
"RTN","PXRMVLST",129,0)
 .. S TEXT(1)="Sex is used in the patient cohort logic and no sex is defined in the reminder"
"RTN","PXRMVLST",130,0)
 .. S TEXT(2)="definition!"
"RTN","PXRMVLST",131,0)
 .. D EN^DDIOL(.TEXT)
"RTN","PXRMVLST",132,0)
 . I VALID D
"RTN","PXRMVLST",133,0)
 .. S TEMP=SSTACK(SEXFI+1)
"RTN","PXRMVLST",134,0)
 .. I TEMP="!" D
"RTN","PXRMVLST",135,0)
 ... S VALID=0
"RTN","PXRMVLST",136,0)
 ... S TEXT="SEX cannot be used in conjunction with the or operator!"
"RTN","PXRMVLST",137,0)
 ... D EN^DDIOL(TEXT)
"RTN","PXRMVLST",138,0)
 I 'VALID Q VALID
"RTN","PXRMVLST",139,0)
 ;
"RTN","PXRMVLST",140,0)
 ;Check the age findings and see if any of them set the frequency to
"RTN","PXRMVLST",141,0)
 ;0Y. If they do they cannot have an associated age range.
"RTN","PXRMVLST",142,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMVLST",143,0)
 . S FINUM=$P(FILIST,";",IND)
"RTN","PXRMVLST",144,0)
 . S TEMP=$S(FINUM["FF":DEFARR(25,FINUM,0),1:DEFARR(20,FINUM,0))
"RTN","PXRMVLST",145,0)
 . S MINAGE=$P(TEMP,U,2)
"RTN","PXRMVLST",146,0)
 . S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMVLST",147,0)
 . S FREQ=$P(TEMP,U,4)
"RTN","PXRMVLST",148,0)
 . I FREQ="0Y",((MINAGE'="")!(MAXAGE'="")) D
"RTN","PXRMVLST",149,0)
 .. S VALID=0
"RTN","PXRMVLST",150,0)
 .. S TEXT(1)="Finding "_FINUM_" sets the frequency to 0Y and also sets an age range."
"RTN","PXRMVLST",151,0)
 .. S TEXT(2)="An age range is not allowed with a frequency of 0Y!"
"RTN","PXRMVLST",152,0)
 .. D EN^DDIOL(.TEXT)
"RTN","PXRMVLST",153,0)
 ;
"RTN","PXRMVLST",154,0)
 ;Build a list of all the findings that affect whether or not the
"RTN","PXRMVLST",155,0)
 ;patient is in the cohort and check to see if any of them use a
"RTN","PXRMVLST",156,0)
 ;computed finding. If they use a computed finding then it must be
"RTN","PXRMVLST",157,0)
 ;a list type. Health factors must have within category rank of 0.
"RTN","PXRMVLST",158,0)
 F IND=1:1:SSTACK(0) D
"RTN","PXRMVLST",159,0)
 . I (SSTACK(IND)["FI") D
"RTN","PXRMVLST",160,0)
 .. S FINUM=$G(SSTACK(IND+1))
"RTN","PXRMVLST",161,0)
 .. S FIL(FINUM)=""
"RTN","PXRMVLST",162,0)
 . I (SSTACK(IND)["FF") D
"RTN","PXRMVLST",163,0)
 .. S FINUM=$G(SSTACK(IND+1))
"RTN","PXRMVLST",164,0)
 .. S FFL(FINUM)="FF"_FINUM
"RTN","PXRMVLST",165,0)
 ;Add any age findings to the list.
"RTN","PXRMVLST",166,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMVLST",167,0)
 . S TEMP=$P(FILIST,";",IND)
"RTN","PXRMVLST",168,0)
 . I TEMP=+TEMP S FIL(TEMP)=""
"RTN","PXRMVLST",169,0)
 . I TEMP["FF" S FFL($P(TEMP,"FF",2))=TEMP
"RTN","PXRMVLST",170,0)
 ;Add findings used by function findings to the list.
"RTN","PXRMVLST",171,0)
 S IND=0
"RTN","PXRMVLST",172,0)
 F  S IND=$O(FFL(IND)) Q:IND=""  D
"RTN","PXRMVLST",173,0)
 . S FUNN=0
"RTN","PXRMVLST",174,0)
 . S FUNN=$O(DEFARR(25,FFL(IND),5,FUNN)) Q:FUNN=""  D
"RTN","PXRMVLST",175,0)
 .. S FI=0
"RTN","PXRMVLST",176,0)
 .. F  S FI=$O(DEFARR(25,FFL(IND),5,FUNN,20,FI)) Q:FI=""  D
"RTN","PXRMVLST",177,0)
 ... S FINUM=DEFARR(25,FFL(IND),5,FUNN,20,FI,0)
"RTN","PXRMVLST",178,0)
 ... I '$D(DEFARR(20,FINUM)) D  Q
"RTN","PXRMVLST",179,0)
 .... S VALID=0
"RTN","PXRMVLST",180,0)
 .... S TEXT="Finding "_FINUM_" is used in FF("_IND_") and it does not exist!"
"RTN","PXRMVLST",181,0)
 .... D EN^DDIOL(TEXT)
"RTN","PXRMVLST",182,0)
 ... S FIL(FINUM)=""
"RTN","PXRMVLST",183,0)
 I 'VALID Q VALID
"RTN","PXRMVLST",184,0)
 S IND=0
"RTN","PXRMVLST",185,0)
 F  S IND=$O(FIL(IND)) Q:IND=""  D
"RTN","PXRMVLST",186,0)
 . S FINDING=$P($G(DEFARR(20,IND,0)),U,1)
"RTN","PXRMVLST",187,0)
 . I FINDING="" D  Q
"RTN","PXRMVLST",188,0)
 .. S VALID=0
"RTN","PXRMVLST",189,0)
 .. S TEXT="Finding number "_IND_" does not exist!"
"RTN","PXRMVLST",190,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMVLST",191,0)
 . S TEMP=$P(FINDING,";",2)
"RTN","PXRMVLST",192,0)
 . S TYPE=$S(TEMP="AUTTHF(":"HF",TEMP="PXRMD(811.4,":"CF",TEMP="PXRMD(811.5,":"TERM",1:"REG")
"RTN","PXRMVLST",193,0)
 . I TYPE="REG" Q
"RTN","PXRMVLST",194,0)
 . I TYPE="CF" S VF=$$CCF(FINDING)
"RTN","PXRMVLST",195,0)
 . I TYPE="HF" S VF=$$HF(.DEFARR,IND)
"RTN","PXRMVLST",196,0)
 . I TYPE="TERM" S VF=$$CTERM(.DEFARR,IND,FINDING)
"RTN","PXRMVLST",197,0)
 . I VF=0 D
"RTN","PXRMVLST",198,0)
 .. S VALID=0
"RTN","PXRMVLST",199,0)
 .. S TEXT="Finding number "_IND_" is the problem finding."
"RTN","PXRMVLST",200,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMVLST",201,0)
 Q VALID
"RTN","PXRMVLST",202,0)
 ;
"RTN","PXRMVPOV")
0^123^B26252424
"RTN","PXRMVPOV",1,0)
PXRMVPOV ; SLC/PKR - Code to handle VPOV ;10/21/2005
"RTN","PXRMVPOV",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMVPOV",3,0)
 ;
"RTN","PXRMVPOV",4,0)
 ;====================================================
"RTN","PXRMVPOV",5,0)
FPDAT(DFN,TAXARR,NGET,SDIR,BDT,EDT,FLIST) ;Find data for a patient.
"RTN","PXRMVPOV",6,0)
 N DAS,DATE,DS,EDTT,ICDP,IND,NFOUND,NODE,NNODE,TE,TLIST,TS
"RTN","PXRMVPOV",7,0)
 N TDATE,TIND
"RTN","PXRMVPOV",8,0)
 I $G(^PXRMINDX(9000010.07,"DATE BUILT"))="" D  Q
"RTN","PXRMVPOV",9,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000010.07)
"RTN","PXRMVPOV",10,0)
 I '$D(^PXRMINDX(9000010.07,"PPI",DFN)) Q
"RTN","PXRMVPOV",11,0)
 S NNODE=+$P($G(TAXARR("PDS",9000010.07,80)),U,2)
"RTN","PXRMVPOV",12,0)
 I NNODE=0 Q
"RTN","PXRMVPOV",13,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMVPOV",14,0)
 S DS=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMVPOV",15,0)
 S TS=$O(TAXARR(80,""))-1
"RTN","PXRMVPOV",16,0)
 S TE=$O(TAXARR(80,""),-1)
"RTN","PXRMVPOV",17,0)
 S NFOUND=0
"RTN","PXRMVPOV",18,0)
 F IND=1:1:NNODE D
"RTN","PXRMVPOV",19,0)
 . S NODE=TAXARR("PDS",9000010.07,80,IND)
"RTN","PXRMVPOV",20,0)
 . S ICDP=TS
"RTN","PXRMVPOV",21,0)
 . F  S ICDP=$O(^PXRMINDX(9000010.07,"PPI",DFN,NODE,ICDP)) Q:(ICDP>TE)!(ICDP="")  D
"RTN","PXRMVPOV",22,0)
 .. I '$D(TAXARR(80,ICDP)) Q
"RTN","PXRMVPOV",23,0)
 .. S DATE=DS
"RTN","PXRMVPOV",24,0)
 .. F  S DATE=+$O(^PXRMINDX(9000010.07,"PPI",DFN,NODE,ICDP,DATE),SDIR) Q:$S(DATE=0:1,DATE<BDT:1,DATE>EDTT:1,1:0)  D
"RTN","PXRMVPOV",25,0)
 ... S DAS=$O(^PXRMINDX(9000010.07,"PPI",DFN,NODE,ICDP,DATE,""))
"RTN","PXRMVPOV",26,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMVPOV",27,0)
 ... S TLIST(DATE,NFOUND)=DAS_U_ICDP_U_NODE
"RTN","PXRMVPOV",28,0)
 ... I NFOUND>NGET D
"RTN","PXRMVPOV",29,0)
 .... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMVPOV",30,0)
 .... K TLIST(TDATE,TIND)
"RTN","PXRMVPOV",31,0)
 ;Return up to NGET of the most recent entries.
"RTN","PXRMVPOV",32,0)
 S NFOUND=0
"RTN","PXRMVPOV",33,0)
 S DATE=""
"RTN","PXRMVPOV",34,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NGET)  D
"RTN","PXRMVPOV",35,0)
 . S IND=0
"RTN","PXRMVPOV",36,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NGET)  D
"RTN","PXRMVPOV",37,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMVPOV",38,0)
 .. S FLIST(DATE,NFOUND,9000010.07)=TLIST(DATE,IND)
"RTN","PXRMVPOV",39,0)
 Q
"RTN","PXRMVPOV",40,0)
 ;
"RTN","PXRMVPOV",41,0)
 ;====================================================
"RTN","PXRMVPOV",42,0)
GETDATA(DAS,FIEVT) ;Return data for a specified V POV entry.
"RTN","PXRMVPOV",43,0)
 ;DBIA #4250
"RTN","PXRMVPOV",44,0)
 D VPOV^PXPXRM(DAS,.FIEVT)
"RTN","PXRMVPOV",45,0)
 Q
"RTN","PXRMVPOV",46,0)
 ;
"RTN","PXRMVPOV",47,0)
 ;====================================================
"RTN","PXRMVPOV",48,0)
GPLIST(TAXARR,NOCC,BDT,EDT,PLIST) ;Build patient list for V POV entries.
"RTN","PXRMVPOV",49,0)
 N DAS,DATE,DFN,DS,ICDP,IND,NFOUND,NODE,NNODE,TEMP,TLIST
"RTN","PXRMVPOV",50,0)
 I $G(^PXRMINDX(9000010.07,"DATE BUILT"))="" D  Q
"RTN","PXRMVPOV",51,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000010.07)
"RTN","PXRMVPOV",52,0)
 S TLIST="GPLIST_PXRMVPOV"
"RTN","PXRMVPOV",53,0)
 S DS=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMVPOV",54,0)
 S NNODE=+$P($G(TAXARR("PDS",9000010.07,80)),U,2)
"RTN","PXRMVPOV",55,0)
 I NNODE=0 Q
"RTN","PXRMVPOV",56,0)
 S ICDP=""
"RTN","PXRMVPOV",57,0)
 F  S ICDP=$O(TAXARR(80,ICDP)) Q:(ICDP="")  D
"RTN","PXRMVPOV",58,0)
 . I '$D(^PXRMINDX(9000010.07,"IPP",ICDP)) Q
"RTN","PXRMVPOV",59,0)
 . F IND=1:1:NNODE D
"RTN","PXRMVPOV",60,0)
 .. S NODE=TAXARR("PDS",9000010.07,80,IND)
"RTN","PXRMVPOV",61,0)
 .. I '$D(^PXRMINDX(9000010.07,"IPP",ICDP,NODE)) Q
"RTN","PXRMVPOV",62,0)
 .. S DFN=0
"RTN","PXRMVPOV",63,0)
 .. F  S DFN=$O(^PXRMINDX(9000010.07,"IPP",ICDP,NODE,DFN)) Q:DFN=""  D
"RTN","PXRMVPOV",64,0)
 ... S DATE=DS
"RTN","PXRMVPOV",65,0)
 ... F  S DATE=+$O(^PXRMINDX(9000010.07,"IPP",ICDP,NODE,DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)  D
"RTN","PXRMVPOV",66,0)
 .... S DAS=$O(^PXRMINDX(9000010.07,"IPP",ICDP,NODE,DFN,DATE,""))
"RTN","PXRMVPOV",67,0)
 .... S ^TMP($J,TLIST,DFN,DATE,DAS)=ICDP_U_"ICD9"_U_NODE
"RTN","PXRMVPOV",68,0)
 ;Return up to NOCC of the most recent entries for each patient.
"RTN","PXRMVPOV",69,0)
 S DFN=0
"RTN","PXRMVPOV",70,0)
 F  S DFN=$O(^TMP($J,TLIST,DFN)) Q:DFN=""  D
"RTN","PXRMVPOV",71,0)
 . S NFOUND=0
"RTN","PXRMVPOV",72,0)
 . S DATE=""
"RTN","PXRMVPOV",73,0)
 . F  S DATE=$O(^TMP($J,TLIST,DFN,DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMVPOV",74,0)
 .. S DAS=""
"RTN","PXRMVPOV",75,0)
 .. F  S DAS=$O(^TMP($J,TLIST,DFN,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMVPOV",76,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMVPOV",77,0)
 ... S TEMP=^TMP($J,TLIST,DFN,DATE,DAS)
"RTN","PXRMVPOV",78,0)
 ... S ICDP=$P(TEMP,U,1)
"RTN","PXRMVPOV",79,0)
 ... S ^TMP($J,PLIST,1,DFN,NFOUND,9000010.07)=DAS_U_DATE_U_TEMP
"RTN","PXRMVPOV",80,0)
 K ^TMP($J,TLIST)
"RTN","PXRMVPOV",81,0)
 Q
"RTN","PXRMVPOV",82,0)
 ;
"RTN","PXRMVPOV",83,0)
 ;====================================================
"RTN","PXRMVPOV",84,0)
MHVOUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMVPOV",85,0)
 N CODE,D0,DIAG,EM,ICD9P,ICD9ZN,IND,JND,NAME,NIN,NOUT,PN,RANK
"RTN","PXRMVPOV",86,0)
 N TEMP,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMVPOV",87,0)
 S NAME="Encounter Diagnosis = "
"RTN","PXRMVPOV",88,0)
 S IND=0
"RTN","PXRMVPOV",89,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMVPOV",90,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMVPOV",91,0)
 . S ICD9P=IFIEVAL(IND,"CODEP")
"RTN","PXRMVPOV",92,0)
 . S D0=$G(^AUPNVPOV(IFIEVAL(IND,"DAS"),0))
"RTN","PXRMVPOV",93,0)
 . S ICD9ZN=$$ICDDX^ICDCODE(ICD9P,VDATE)
"RTN","PXRMVPOV",94,0)
 . S CODE=$P(ICD9ZN,U,2)
"RTN","PXRMVPOV",95,0)
 . S DIAG=$P(ICD9ZN,U,4)
"RTN","PXRMVPOV",96,0)
 . S RANK=IFIEVAL(IND,"PRIMARY/SECONDARY")
"RTN","PXRMVPOV",97,0)
 . S TEMP=NAME_DIAG_" ("_$$EDATE^PXRMDATE(VDATE)_")"
"RTN","PXRMVPOV",98,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMVPOV",99,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVPOV",100,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMVPOV",101,0)
 Q
"RTN","PXRMVPOV",102,0)
 ;
"RTN","PXRMVPOV",103,0)
 ;====================================================
"RTN","PXRMVPOV",104,0)
OUTPUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMVPOV",105,0)
 ;maintenance output. The VPOV information is:  DATE, ICD9 IEN, 
"RTN","PXRMVPOV",106,0)
 ;ICD9 CODE, MODIFIER, PROVIDER NARRATIVE.
"RTN","PXRMVPOV",107,0)
 N CODE,D0,DIAG,EM,ICD9P,ICD9ZN,IND,JND,NIN,NOUT,PN,RANK
"RTN","PXRMVPOV",108,0)
 N TEMP,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMVPOV",109,0)
 S NLINES=NLINES+1
"RTN","PXRMVPOV",110,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Encounter Diagnosis:"
"RTN","PXRMVPOV",111,0)
 S IND=0
"RTN","PXRMVPOV",112,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMVPOV",113,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMVPOV",114,0)
 . S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMVPOV",115,0)
 . S ICD9P=IFIEVAL(IND,"CODEP")
"RTN","PXRMVPOV",116,0)
 . S D0=$G(^AUPNVPOV(IFIEVAL(IND,"DAS"),0))
"RTN","PXRMVPOV",117,0)
 . S ICD9ZN=$$ICDDX^ICDCODE(ICD9P,VDATE)
"RTN","PXRMVPOV",118,0)
 . S CODE=$P(ICD9ZN,U,2)
"RTN","PXRMVPOV",119,0)
 . S DIAG=$P(ICD9ZN,U,4)
"RTN","PXRMVPOV",120,0)
 . S RANK=IFIEVAL(IND,"PRIMARY/SECONDARY")
"RTN","PXRMVPOV",121,0)
 . S TEMP=TEMP_" "_CODE_" "_DIAG_" rank: "
"RTN","PXRMVPOV",122,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.07,.12,"",RANK,.EM)
"RTN","PXRMVPOV",123,0)
 . S TEXTIN(1)=TEMP_"\\",NIN=1
"RTN","PXRMVPOV",124,0)
 . S PN=$P(D0,U,4)
"RTN","PXRMVPOV",125,0)
 . I PN'="" S PN=$P($G(^AUTNPOV(PN,0)),U,1)
"RTN","PXRMVPOV",126,0)
 . I PN="" S PN="MISSING"
"RTN","PXRMVPOV",127,0)
 . I PN'=DIAG S TEXTIN(2)="Prov. Narr. - "_PN,NIN=2
"RTN","PXRMVPOV",128,0)
 . D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMVPOV",129,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVPOV",130,0)
 . I IFIEVAL(IND,"COMMENTS")'="" D
"RTN","PXRMVPOV",131,0)
 .. S TEMP="Comments: "_IFIEVAL(IND,"COMMENTS")
"RTN","PXRMVPOV",132,0)
 .. D FORMATS^PXRMTEXT(INDENT+3,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMVPOV",133,0)
 .. F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVPOV",134,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMVPOV",135,0)
 Q
"RTN","PXRMVPOV",136,0)
 ;
"RTN","PXRMVSIT")
0^139^B8397874
"RTN","PXRMVSIT",1,0)
PXRMVSIT ; SLC/PKR - Visit related info for reminders. ;07/06/2006
"RTN","PXRMVSIT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMVSIT",3,0)
 ;
"RTN","PXRMVSIT",4,0)
 ;======================================================
"RTN","PXRMVSIT",5,0)
GETDATA(DA,FIEVT,SVALUE) ;Return data for a specific Visit file entry.
"RTN","PXRMVSIT",6,0)
 ;DBIA #2028 for Visit file.
"RTN","PXRMVSIT",7,0)
 N HTEMP,TEMP
"RTN","PXRMVSIT",8,0)
 S TEMP=^AUPNVSIT(DA,0)
"RTN","PXRMVSIT",9,0)
 S FIEVT("VISIT")=DA
"RTN","PXRMVSIT",10,0)
 S FIEVT("DATE VISIT CREATED")=$P(TEMP,U,2)
"RTN","PXRMVSIT",11,0)
 S FIEVT("DFN")=$P(TEMP,U,5)
"RTN","PXRMVSIT",12,0)
 S FIEVT("LOC. OF ENCOUNTER")=$P(TEMP,U,6)
"RTN","PXRMVSIT",13,0)
 S FIEVT("SERVICE CATEGORY")=$P(TEMP,U,7)
"RTN","PXRMVSIT",14,0)
 I $G(SVALUE) S FIEVT("VALUE")=$P(TEMP,U,7)
"RTN","PXRMVSIT",15,0)
 S FIEVT("HOSPITAL LOCATION")=$P(TEMP,U,22)
"RTN","PXRMVSIT",16,0)
 ;DBIA #10040, #2804
"RTN","PXRMVSIT",17,0)
 I $G(FIEVT("HOSPITAL LOCATION"))="" S HTEMP=""
"RTN","PXRMVSIT",18,0)
 E  S HTEMP=^SC(FIEVT("HOSPITAL LOCATION"),0)
"RTN","PXRMVSIT",19,0)
 S FIEVT("HLOC")=$P(HTEMP,U,1)
"RTN","PXRMVSIT",20,0)
 S FIEVT("DSS ID")=$P(TEMP,U,8)
"RTN","PXRMVSIT",21,0)
 I FIEVT("DSS ID")="" S FIEVT("DSS ID")=$P(HTEMP,U,7)
"RTN","PXRMVSIT",22,0)
 ;DBIA #557
"RTN","PXRMVSIT",23,0)
 I FIEVT("DSS ID")'="" S FIEVT("STOP CODE")=$P(^DIC(40.7,FIEVT("DSS ID"),0),U,2)
"RTN","PXRMVSIT",24,0)
 S FIEVT("OUTSIDE LOCATION")=$G(^AUPNVSIT(DA,21))
"RTN","PXRMVSIT",25,0)
 S FIEVT("COMMENTS")=$G(^AUPNVSIT(DA,811))
"RTN","PXRMVSIT",26,0)
 ;DBIA #4850
"RTN","PXRMVSIT",27,0)
 S FIEVT("STATUS")=$$STATUS^SDPCE(DA)
"RTN","PXRMVSIT",28,0)
 Q
"RTN","PXRMVSIT",29,0)
 ;
"RTN","PXRMVSIT",30,0)
 ;======================================================
"RTN","PXRMVSIT",31,0)
GAPSTAT(VIEN) ;Return the status of the appointment associated with the
"RTN","PXRMVSIT",32,0)
 ;visit.
"RTN","PXRMVSIT",33,0)
 ;DBIA #4850
"RTN","PXRMVSIT",34,0)
 Q $$STATUS^SDPCE(VIEN)
"RTN","PXRMVSIT",35,0)
 ;
"RTN","PXRMVSIT",36,0)
 ;======================================================
"RTN","PXRMVSIT",37,0)
HENC(VIEN,INDENT,NLINES,TEXT) ;Display location and comment for historical
"RTN","PXRMVSIT",38,0)
 ;encounters associated with the V files.
"RTN","PXRMVSIT",39,0)
 N COMMENT,HLOC,LOCATION,OLOC,NIN,TEXTIN,VDATA
"RTN","PXRMVSIT",40,0)
 D GETDATA(VIEN,.VDATA) I VDATA("SERVICE CATEGORY")'="E" Q
"RTN","PXRMVSIT",41,0)
 S NIN=0
"RTN","PXRMVSIT",42,0)
 S LOCATION=VDATA("LOC. OF ENCOUNTER")
"RTN","PXRMVSIT",43,0)
 I LOCATION'="" D
"RTN","PXRMVSIT",44,0)
 . S LOCATION=$$GET1^DIQ(4,LOCATION,.01)_" "_$$GET1^DIQ(4,LOCATION,99)
"RTN","PXRMVSIT",45,0)
 . S NIN=NIN+1,TEXTIN(NIN)="Location of Encounter: "_LOCATION_"\\"
"RTN","PXRMVSIT",46,0)
 S HLOC=VDATA("HOSPITAL LOCATION")
"RTN","PXRMVSIT",47,0)
 I HLOC'="" D
"RTN","PXRMVSIT",48,0)
 . S HLOC=$$GET1^DIQ(44,HLOC,.01)
"RTN","PXRMVSIT",49,0)
 . S NIN=NIN+1,TEXTIN(NIN)="Hospital Location: "_HLOC_"\\"
"RTN","PXRMVSIT",50,0)
 S OLOC=VDATA("OUTSIDE LOCATION")
"RTN","PXRMVSIT",51,0)
 I OLOC'="" D
"RTN","PXRMVSIT",52,0)
 . S NIN=NIN+1,TEXTIN(NIN)="Outside Location: "_OLOC_"\\"
"RTN","PXRMVSIT",53,0)
 S COMMENT=VDATA("COMMENT")
"RTN","PXRMVSIT",54,0)
 I COMMENT'="" D
"RTN","PXRMVSIT",55,0)
 . S NIN=NIN+1,TEXTIN(NIN)="Comment: "_COMMENT
"RTN","PXRMVSIT",56,0)
 I NIN>0 D
"RTN","PXRMVSIT",57,0)
 . N JND,NOUT,TEXTOUT
"RTN","PXRMVSIT",58,0)
 . S NLINES=NLINES+1
"RTN","PXRMVSIT",59,0)
 . S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Historical Encounter Information:"
"RTN","PXRMVSIT",60,0)
 . D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMVSIT",61,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVSIT",62,0)
 Q
"RTN","PXRMVSIT",63,0)
 ;
"RTN","PXRMVSIT",64,0)
 ;======================================================
"RTN","PXRMVSIT",65,0)
ISHIST(VIEN) ;Return true if the encounter was historical.
"RTN","PXRMVSIT",66,0)
 ;DBIA #2028
"RTN","PXRMVSIT",67,0)
 I $P($G(^AUPNVSIT(VIEN,0)),U,7)="E" Q 1
"RTN","PXRMVSIT",68,0)
 Q 0
"RTN","PXRMVSIT",69,0)
 ;
"RTN","PXRMVSIT",70,0)
 ;======================================================
"RTN","PXRMVSIT",71,0)
VAPSTAT(VIEN) ;Return true if the appointment associated with
"RTN","PXRMVSIT",72,0)
 ;the visit has a valid appointment status.
"RTN","PXRMVSIT",73,0)
 ;Return false if the status is one of the following:
"RTN","PXRMVSIT",74,0)
 ;CANCELLED BY CLINIC
"RTN","PXRMVSIT",75,0)
 ;CANCELLED BY CLINIC & AUTO RE-BOOK
"RTN","PXRMVSIT",76,0)
 ;CANCELLED BY PATIENT
"RTN","PXRMVSIT",77,0)
 ;CANCELLED BY PATIENT & AUTO-REBOOK
"RTN","PXRMVSIT",78,0)
 ;DELETED
"RTN","PXRMVSIT",79,0)
 ;NO ACTION TAKEN
"RTN","PXRMVSIT",80,0)
 ;NO-SHOW
"RTN","PXRMVSIT",81,0)
 ;NO-SHOW & AUTO RE-BOOK
"RTN","PXRMVSIT",82,0)
 N STATUS,VALID
"RTN","PXRMVSIT",83,0)
 ;DBIA #4850
"RTN","PXRMVSIT",84,0)
 S STATUS=$P($$STATUS^SDPCE(VIEN),U,2)
"RTN","PXRMVSIT",85,0)
 S VALID=$S(STATUS["CANCELLED":0,STATUS["DELETED":0,STATUS["NO ACTION":0,STATUS["NO-SHOW":0,1:1)
"RTN","PXRMVSIT",86,0)
 Q VALID
"RTN","PXRMVSIT",87,0)
 ;
"RTN","PXRMXBSY")
0^122^B3137765
"RTN","PXRMXBSY",1,0)
PXRMXBSY ; SLC/PJH - Let the user know the computer is busy. ;10/14/2005
"RTN","PXRMXBSY",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXBSY",3,0)
 ;
"RTN","PXRMXBSY",4,0)
 ;=======================================================================
"RTN","PXRMXBSY",5,0)
INIT(SPINCNT) ;Initialize the busy display components.
"RTN","PXRMXBSY",6,0)
 S SPINCNT=0
"RTN","PXRMXBSY",7,0)
 Q
"RTN","PXRMXBSY",8,0)
 ;
"RTN","PXRMXBSY",9,0)
 ;=======================================================================
"RTN","PXRMXBSY",10,0)
DONE(DTEXT) ;Write out the done message.
"RTN","PXRMXBSY",11,0)
 W @IOBS,DTEXT,!
"RTN","PXRMXBSY",12,0)
 Q
"RTN","PXRMXBSY",13,0)
 ;
"RTN","PXRMXBSY",14,0)
 ;======================================================================
"RTN","PXRMXBSY",15,0)
ERROR ;
"RTN","PXRMXBSY",16,0)
 ;Print Error message
"RTN","PXRMXBSY",17,0)
 I $D(^XTMP(PXRMXTMP,"ERROR"))>0 D
"RTN","PXRMXBSY",18,0)
 .W !!,"WARNING - REMINDER EVALUATION ERRORS; RESULTS MAY BE INCORRECT!"
"RTN","PXRMXBSY",19,0)
 .N ERRNAME S ERRNAME=""
"RTN","PXRMXBSY",20,0)
 .F  S ERRNAME=$O(^XTMP(PXRMXTMP,"ERROR",ERRNAME)) Q:ERRNAME=""  D
"RTN","PXRMXBSY",21,0)
 ..W !,"Reminder: "_ERRNAME_" had a total of "_$G(^XTMP(PXRMXTMP,"ERROR",ERRNAME))_" evaluation errors."
"RTN","PXRMXBSY",22,0)
 ;
"RTN","PXRMXBSY",23,0)
 ;Print Could not be determine message
"RTN","PXRMXBSY",24,0)
 I $D(^XTMP(PXRMXTMP,"CNBD"))>0 D
"RTN","PXRMXBSY",25,0)
 .W !!,"WARNING - REMINDER STATUS COULD NOT BE DETERMINED; RESULTS MAY BE INCORRECT!"
"RTN","PXRMXBSY",26,0)
 .N ERRNAME S ERRNAME=""
"RTN","PXRMXBSY",27,0)
 .F  S ERRNAME=$O(^XTMP(PXRMXTMP,"CNBD",ERRNAME)) Q:ERRNAME=""  D
"RTN","PXRMXBSY",28,0)
 ..W !,"Reminder: "_ERRNAME_" had a total of "_$G(^XTMP(PXRMXTMP,"CNBD",ERRNAME))_" CNBD errors."
"RTN","PXRMXBSY",29,0)
 Q
"RTN","PXRMXBSY",30,0)
 ;=======================================================================
"RTN","PXRMXBSY",31,0)
SPIN(SPINTEXT,SPINCNT) ;Move the spinner.
"RTN","PXRMXBSY",32,0)
 N QUAD
"RTN","PXRMXBSY",33,0)
 I SPINCNT=0 W !!,SPINTEXT,"  "
"RTN","PXRMXBSY",34,0)
 S SPINCNT=SPINCNT+1
"RTN","PXRMXBSY",35,0)
 S QUAD=SPINCNT#8
"RTN","PXRMXBSY",36,0)
 I QUAD=1 W @IOBS,"|"
"RTN","PXRMXBSY",37,0)
 I QUAD=3 W @IOBS,"/"
"RTN","PXRMXBSY",38,0)
 I QUAD=5 W @IOBS,"-"
"RTN","PXRMXBSY",39,0)
 I QUAD=7 W @IOBS,"\"
"RTN","PXRMXBSY",40,0)
 Q
"RTN","PXRMXD")
0^1^B78697890
"RTN","PXRMXD",1,0)
PXRMXD ; SLC/PJH - Reminder Due reports DRIVER ;06/20/2006
"RTN","PXRMXD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXD",3,0)
 ;
"RTN","PXRMXD",4,0)
START ; Arrays and strings
"RTN","PXRMXD",5,0)
 N PXRMIOD,PXRMXST,PXRMOPT,PXRMQUE,PXRMXTMP,PXRMSEL
"RTN","PXRMXD",6,0)
 N PXRMFAC,PXRMFACN,PXRMSCAT,PXRMSRT,PXRMTYP
"RTN","PXRMXD",7,0)
 N REMINDER,PXRMINP,PXRMFCMB,PXRMLCMB,PXRMTCMB,PXRMTOT
"RTN","PXRMXD",8,0)
 ; Addenda
"RTN","PXRMXD",9,0)
 N PXRMOTM,PXRMPAT,PXRMPCM,PXRMPRV,PXRMTMP,PXRMRCAT,PXRMREM
"RTN","PXRMXD",10,0)
 N PXRMCS,PXRMCSN,PXRMLOCN,PXRMLCHL,PXRMLCSC,PXRMCGRP,PXRMCGRN
"RTN","PXRMXD",11,0)
 N PXRMLIS
"RTN","PXRMXD",12,0)
 ; Counters
"RTN","PXRMXD",13,0)
 N NCAT,NFAC,NLOC,NPAT,NPCM,NOTM,NPRV,NREM,NCS,NHL,NCGRP
"RTN","PXRMXD",14,0)
 ; Flags and Dates
"RTN","PXRMXD",15,0)
 N PXRMFD,PXRMSDT,PXRMBDT,PXRMEDT,PXRMREP,PXRMPRIM,PXRMFUT,PXRMDLOC
"RTN","PXRMXD",16,0)
 N PXRMRT,PXRMSSN,PXRMTABC,PXRMTABS,PXRMTMP,TITLE,VALUE
"RTN","PXRMXD",17,0)
 N DBDOWN,DBDUZ,DBERR,PXRMLIST,PXRMLIS1,Y
"RTN","PXRMXD",18,0)
 N PLISTPUG
"RTN","PXRMXD",19,0)
 N PXRMTPAT,PXRMDPAT
"RTN","PXRMXD",20,0)
 ;
"RTN","PXRMXD",21,0)
 S PXRMRT="PXRMX",PXRMTYP="X",PXRMFCMB="N",PXRMLCMB="N",PXRMTCMB="N"
"RTN","PXRMXD",22,0)
 ;
"RTN","PXRMXD",23,0)
 I '$D(PXRMUSER) N PXRMUSER S PXRMUSER=0
"RTN","PXRMXD",24,0)
 ;
"RTN","PXRMXD",25,0)
 ;Guarantee the timestamp is unique.
"RTN","PXRMXD",26,0)
 H 1
"RTN","PXRMXD",27,0)
 S PXRMXST=$$NOW^XLFDT
"RTN","PXRMXD",28,0)
 S PXRMXTMP=PXRMRT_PXRMXST
"RTN","PXRMXD",29,0)
 S ^XTMP(PXRMXTMP,0)=$$FMADD^XLFDT(DT,7)_U_DT_U_"PXRM Reminder Due Report"
"RTN","PXRMXD",30,0)
 ;
"RTN","PXRMXD",31,0)
 ;Check for existing report templates
"RTN","PXRMXD",32,0)
REP ;
"RTN","PXRMXD",33,0)
 S PXRMINP=0
"RTN","PXRMXD",34,0)
 D:PXRMUSER ^PXRMXTB D:'PXRMUSER ^PXRMXT I $D(DTOUT)!$D(DUOUT) G EXIT
"RTN","PXRMXD",35,0)
 ;Run report from template details
"RTN","PXRMXD",36,0)
 I PXRMTMP'="" D  G:$D(DUOUT)&'$D(DTOUT) REP Q
"RTN","PXRMXD",37,0)
 .D START^PXRMXTA("JOB^PXRMXQUE") K DUOUT,DIRUT,DTOUT
"RTN","PXRMXD",38,0)
 ;
"RTN","PXRMXD",39,0)
 ;Select sample criteria
"RTN","PXRMXD",40,0)
SEL ;
"RTN","PXRMXD",41,0)
 D SELECT^PXRMXSD(.PXRMSEL) I $D(DTOUT) G EXIT
"RTN","PXRMXD",42,0)
 I $D(DUOUT) G:PXRMTMP="" EXIT G REP
"RTN","PXRMXD",43,0)
 ;
"RTN","PXRMXD",44,0)
FAC ;Get the facility list.
"RTN","PXRMXD",45,0)
 I "IRPO"'[PXRMSEL D  G:$D(DTOUT) EXIT G:$D(DUOUT) SEL
"RTN","PXRMXD",46,0)
 .D FACILITY^PXRMXSU(.PXRMFAC) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMXD",47,0)
 ;
"RTN","PXRMXD",48,0)
 ;Check if combined facility report is required
"RTN","PXRMXD",49,0)
COMB I "IRPO"'[PXRMSEL,NFAC>1 D  G:$D(DTOUT) EXIT G:$D(DUOUT) FAC
"RTN","PXRMXD",50,0)
 .D COMB^PXRMXSD(.PXRMFCMB,"Facilities","N")
"RTN","PXRMXD",51,0)
 ;
"RTN","PXRMXD",52,0)
OPT ;Variable prompts
"RTN","PXRMXD",53,0)
 ;
"RTN","PXRMXD",54,0)
 ;Get Individual Patient list
"RTN","PXRMXD",55,0)
 I PXRMSEL="I" K PXRMPAT D PAT^PXRMXSU(.PXRMPAT)
"RTN","PXRMXD",56,0)
 ;Get Patient list #810.5
"RTN","PXRMXD",57,0)
 I PXRMSEL="R" K PXRMLIST D LIST^PXRMXSU(.PXRMLIST)
"RTN","PXRMXD",58,0)
 ;Get OE/RRteam list
"RTN","PXRMXD",59,0)
 I PXRMSEL="O" K PXRMOTM D OERR^PXRMXSU(.PXRMOTM)
"RTN","PXRMXD",60,0)
 ;Get PCMM team
"RTN","PXRMXD",61,0)
 I PXRMSEL="T" K PXRMPCM D PCMM^PXRMXSU(.PXRMPCM)
"RTN","PXRMXD",62,0)
 ;Get provider list
"RTN","PXRMXD",63,0)
 I PXRMSEL="P" K PXRMPRV D PROV^PXRMXSU(.PXRMPRV)
"RTN","PXRMXD",64,0)
 ;Get the location list.
"RTN","PXRMXD",65,0)
 I PXRMSEL="L" K PXRMCS,PXRMCSN,PXRMLOCN,PXRMLCHL,PXRMCGRP,PXRMCGRN D
"RTN","PXRMXD",66,0)
 .D LOC^PXRMXSU("Determine encounter counts for","HS")
"RTN","PXRMXD",67,0)
 I $D(DTOUT) G EXIT
"RTN","PXRMXD",68,0)
 I $D(DUOUT) G:"IRPO"[PXRMSEL SEL G:NFAC>1 COMB G FAC
"RTN","PXRMXD",69,0)
 ;
"RTN","PXRMXD",70,0)
 ;Check if inpatient location report
"RTN","PXRMXD",71,0)
 S PXRMINP=$$INP
"RTN","PXRMXD",72,0)
 ;
"RTN","PXRMXD",73,0)
 ; Primary Provider or All (PCMM Provider only)
"RTN","PXRMXD",74,0)
PRIME I PXRMSEL="P" D  G:$D(DTOUT) EXIT G:$D(DUOUT) OPT
"RTN","PXRMXD",75,0)
 .D PRIME^PXRMXSD(.PXRMPRIM)
"RTN","PXRMXD",76,0)
 ;
"RTN","PXRMXD",77,0)
DR ; Get the date range.
"RTN","PXRMXD",78,0)
 S PXRMFD="P"
"RTN","PXRMXD",79,0)
 ; No prompt if individual patients selected
"RTN","PXRMXD",80,0)
 ; Single dates only if PCMM teams/providers and OE/RR teams selected
"RTN","PXRMXD",81,0)
 ; Choice of previous/future date range if location selected
"RTN","PXRMXD",82,0)
 ;
"RTN","PXRMXD",83,0)
 ; Prior encounters/future appointments (location only)
"RTN","PXRMXD",84,0)
PREV I PXRMSEL="L" D PREV^PXRMXSD(.PXRMFD) G:$D(DTOUT) EXIT G:$D(DUOUT) OPT
"RTN","PXRMXD",85,0)
 ; Date range input (location only)
"RTN","PXRMXD",86,0)
 I PXRMSEL="L" D  G:$D(DTOUT) EXIT G:$D(DUOUT) PREV
"RTN","PXRMXD",87,0)
 .I PXRMFD="P" D PDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"ENCOUNTER")
"RTN","PXRMXD",88,0)
 .I PXRMFD="F" D FDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"APPOINTMENT")
"RTN","PXRMXD",89,0)
 .I PXRMFD="A" D PDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"ADMISSION")
"RTN","PXRMXD",90,0)
 .I PXRMFD="C" S PXRMBDT=DT,PXRMEDT=DT
"RTN","PXRMXD",91,0)
 ; Due Effective Date
"RTN","PXRMXD",92,0)
DUE D SDR^PXRMXDUT(.PXRMSDT) G:$D(DTOUT) EXIT
"RTN","PXRMXD",93,0)
 I $D(DUOUT) G:PXRMSEL="L" PREV G OPT
"RTN","PXRMXD",94,0)
 ;
"RTN","PXRMXD",95,0)
SCAT ;Get the service categories.
"RTN","PXRMXD",96,0)
 I PXRMSEL="L",PXRMFD="P" D
"RTN","PXRMXD",97,0)
 .D SCAT^PXRMXSC
"RTN","PXRMXD",98,0)
 .I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMXD",99,0)
 I $D(DTOUT) G EXIT
"RTN","PXRMXD",100,0)
 I $D(DUOUT) G DUE
"RTN","PXRMXD",101,0)
 ;
"RTN","PXRMXD",102,0)
TYP ;Determine type of report (detail/summary)
"RTN","PXRMXD",103,0)
 S PXRMREP="S"
"RTN","PXRMXD",104,0)
 D REP^PXRMXSD(.PXRMREP) I $D(DTOUT) G EXIT
"RTN","PXRMXD",105,0)
 I $D(DUOUT) G SCAT
"RTN","PXRMXD",106,0)
 ;
"RTN","PXRMXD",107,0)
 ;Check if combined location report is required
"RTN","PXRMXD",108,0)
LCOMB S NLOC=0
"RTN","PXRMXD",109,0)
 I PXRMREP="D",PXRMSEL="L" D  G:$D(DTOUT) EXIT G:$D(DUOUT) TYP
"RTN","PXRMXD",110,0)
 .N DEFAULT,TEXT
"RTN","PXRMXD",111,0)
 .D NLOC
"RTN","PXRMXD",112,0)
 .I NLOC>1 D COMB^PXRMXSD(.PXRMLCMB,TEXT,DEFAULT)
"RTN","PXRMXD",113,0)
 ;
"RTN","PXRMXD",114,0)
 ;Check if combined OE/RR team report is required
"RTN","PXRMXD",115,0)
TCOMB I PXRMREP="D",PXRMSEL="O",$G(NOTM)>1 D  G:$D(DTOUT) EXIT G:$D(DUOUT) TYP
"RTN","PXRMXD",116,0)
 .N DEFAULT,TEXT
"RTN","PXRMXD",117,0)
 .S DEFAULT="N",TEXT="OE/RR teams"
"RTN","PXRMXD",118,0)
 .D COMB^PXRMXSD(.PXRMTCMB,TEXT,DEFAULT)
"RTN","PXRMXD",119,0)
 ;
"RTN","PXRMXD",120,0)
FUT ;For detailed report give option to display future appointments
"RTN","PXRMXD",121,0)
 S PXRMFUT="N"
"RTN","PXRMXD",122,0)
 I PXRMREP="D",'PXRMINP D  G:$D(DTOUT) EXIT I $D(DUOUT) G:(PXRMSEL="L")&(NLOC>1) LCOMB G:(PXRMSEL="O")&($G(NOTM)>1) TCOMB G TYP
"RTN","PXRMXD",123,0)
 .D FUTURE^PXRMXSD(.PXRMFUT,"Display All Future Appointments: ",5)
"RTN","PXRMXD",124,0)
 .I PXRMFUT="Y" D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMXD",125,0)
 ..D FUTURE^PXRMXSD(.PXRMDLOC,"Display Appointment Location: ",15)
"RTN","PXRMXD",126,0)
 ;
"RTN","PXRMXD",127,0)
SRT ;For detailed report give option to sort by appointment date
"RTN","PXRMXD",128,0)
 S PXRMSRT="N"
"RTN","PXRMXD",129,0)
 I PXRMREP="D",("RI"'[PXRMSEL) D  G:$D(DTOUT) EXIT I $D(DUOUT) G:(PXRMSEL="L")&(PXRMINP)&(NLOC>1) LCOMB G:PXRMINP TYP G:(PXRMSEL="O")&($G(NOTM)>1) TCOMB G FUT
"RTN","PXRMXD",130,0)
 .;Option to sort by Bed for inpatients
"RTN","PXRMXD",131,0)
 .I PXRMSEL="L",PXRMINP D BED^PXRMXSD(.PXRMSRT) Q
"RTN","PXRMXD",132,0)
 .;Otherwise option to sort by appt. date
"RTN","PXRMXD",133,0)
 .D SRT^PXRMXSD(.PXRMSRT)
"RTN","PXRMXD",134,0)
 ;
"RTN","PXRMXD",135,0)
 ;Option to print full SSN
"RTN","PXRMXD",136,0)
SSN I PXRMREP="D" D  G:$D(DTOUT) EXIT I $D(DUOUT) G:"IR"[PXRMSEL FUT G SRT
"RTN","PXRMXD",137,0)
 .D SSN^PXRMXSD(.PXRMSSN)
"RTN","PXRMXD",138,0)
 ;
"RTN","PXRMXD",139,0)
 ;Option to print without totals, with totals or totals only
"RTN","PXRMXD",140,0)
TOT I PXRMREP="S" D  G:$D(DTOUT) EXIT I $D(DUOUT) G TYP
"RTN","PXRMXD",141,0)
 .;Default is normal report
"RTN","PXRMXD",142,0)
 .S PXRMTOT="I"
"RTN","PXRMXD",143,0)
 .;Ignore patient and patient list reports
"RTN","PXRMXD",144,0)
 .I "RI"[PXRMSEL Q
"RTN","PXRMXD",145,0)
 .;Only prompt if more than one location, team or provider is selected
"RTN","PXRMXD",146,0)
 .I PXRMSEL="P",NPRV<2 Q
"RTN","PXRMXD",147,0)
 .I "OT"[PXRMSEL,NOTM<2 Q
"RTN","PXRMXD",148,0)
 .;Ignore reports for all locations
"RTN","PXRMXD",149,0)
 .I PXRMSEL="L",PXRMLCMB="Y" Q
"RTN","PXRMXD",150,0)
 .I PXRMSEL="L" N DEFAULT,TEXT D NLOC Q:NLOC<2
"RTN","PXRMXD",151,0)
 .;Prompt for options
"RTN","PXRMXD",152,0)
 .N LIT1,LIT2,LIT3
"RTN","PXRMXD",153,0)
 .D LIT,TOTALS^PXRMXSD(.PXRMTOT,LIT1,LIT2,LIT3)
"RTN","PXRMXD",154,0)
 ;
"RTN","PXRMXD",155,0)
 ;Reminder Category/Individual Reminder Selection
"RTN","PXRMXD",156,0)
RCAT ;
"RTN","PXRMXD",157,0)
 D RCAT^PXRMXSU(.PXRMRCAT,.PXRMREM) I $D(DTOUT) G EXIT
"RTN","PXRMXD",158,0)
 I $D(DUOUT) G:PXRMREP="D" SSN G TOT
"RTN","PXRMXD",159,0)
 ;
"RTN","PXRMXD",160,0)
 ;Create combined reminder list
"RTN","PXRMXD",161,0)
 D MERGE^PXRMXS1
"RTN","PXRMXD",162,0)
 ;
"RTN","PXRMXD",163,0)
SAV ;Option to create a new report template
"RTN","PXRMXD",164,0)
 I PXRMTMP="" D ^PXRMXTU G:$D(DTOUT) EXIT I $D(DUOUT) G RCAT
"RTN","PXRMXD",165,0)
 ;
"RTN","PXRMXD",166,0)
 ;Option to print delimiter separated output
"RTN","PXRMXD",167,0)
TABS D  G:$D(DTOUT) EXIT I $D(DUOUT) G SAV
"RTN","PXRMXD",168,0)
 .D TABS^PXRMXSD(.PXRMTABS)
"RTN","PXRMXD",169,0)
 ;Select chracter
"RTN","PXRMXD",170,0)
TCHAR I PXRMTABS="Y" D  G:$D(DTOUT) EXIT G:$D(DUOUT) TABS
"RTN","PXRMXD",171,0)
 .S PXRMTABC=$$DELIMSEL^PXRMXSD
"RTN","PXRMXD",172,0)
 ;
"RTN","PXRMXD",173,0)
DPAT ;Ask whether to include deceased and test patients.
"RTN","PXRMXD",174,0)
 S PXRMDPAT=$$ASKYN^PXRMEUT("N","Include deceased patients on the list")
"RTN","PXRMXD",175,0)
 N PXRMIDOD I PXRMDPAT>0 S PXRMIDOD=1
"RTN","PXRMXD",176,0)
 Q:$D(DTOUT)  G:$D(DUOUT) TABS
"RTN","PXRMXD",177,0)
TPAT ;
"RTN","PXRMXD",178,0)
 S PXRMTPAT=$$ASKYN^PXRMEUT("N","Include test patients on the list")
"RTN","PXRMXD",179,0)
 Q:$D(DTOUT)  G:$D(DUOUT) DPAT
"RTN","PXRMXD",180,0)
PATLIST ;
"RTN","PXRMXD",181,0)
 K PATCREAT
"RTN","PXRMXD",182,0)
 N PATLST
"RTN","PXRMXD",183,0)
 I PXRMSEL'="I"&(PXRMUSER'="Y") D
"RTN","PXRMXD",184,0)
 . D ASK(.PATLST,"Save due patients to a patient list: ",3)
"RTN","PXRMXD",185,0)
 . I $G(PATLST)="" Q
"RTN","PXRMXD",186,0)
 . I $G(PATLST)="N" S PXRMLIS1="" Q
"RTN","PXRMXD",187,0)
 . I $G(PATLST)="Y" D
"RTN","PXRMXD",188,0)
 ..S PATCREAT="N"
"RTN","PXRMXD",189,0)
 ..D ASK(.PATCREAT,"Secure list?: ",3) I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXD",190,0)
 ..K PLISTPUG
"RTN","PXRMXD",191,0)
 ..S PLISTPUG="N" D ASK^PXRMXD(.PLISTPUG,"Purge Patient List after 5 years?: ",5)
"RTN","PXRMXD",192,0)
 I $G(PATLST)="" G:$D(DTOUT) EXIT I $D(DUOUT) G TPAT
"RTN","PXRMXD",193,0)
 G:$D(DTOUT) EXIT I $D(DUOUT) G PATLIST
"RTN","PXRMXD",194,0)
 I $G(PATLST)="Y" S TEXT="Select PATIENT LIST name: " D PLIST^PXRMLCR(.PXRMLIS1,TEXT,"") Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMXD",195,0)
 ;Determine whether the report should be queued.
"RTN","PXRMXD",196,0)
JOB ;
"RTN","PXRMXD",197,0)
 D JOB^PXRMXQUE
"RTN","PXRMXD",198,0)
 Q
"RTN","PXRMXD",199,0)
 ;
"RTN","PXRMXD",200,0)
 ;Option PXRM REMINDERS DUE (USER)
"RTN","PXRMXD",201,0)
USER N PXRMUSER
"RTN","PXRMXD",202,0)
 S PXRMUSER=+$G(DUZ)
"RTN","PXRMXD",203,0)
 G START
"RTN","PXRMXD",204,0)
 ;
"RTN","PXRMXD",205,0)
 ;
"RTN","PXRMXD",206,0)
EXIT ;Clean things up.
"RTN","PXRMXD",207,0)
 D EXIT^PXRMXGUT
"RTN","PXRMXD",208,0)
 Q
"RTN","PXRMXD",209,0)
 ;
"RTN","PXRMXD",210,0)
 ;Check if inpatient report
"RTN","PXRMXD",211,0)
INP() ;Applies to location reports only
"RTN","PXRMXD",212,0)
 I PXRMSEL'="L" Q 0
"RTN","PXRMXD",213,0)
 ;For all inpatient locations default is automatic
"RTN","PXRMXD",214,0)
 I $P(PXRMLCSC,U)="HAI" Q 1
"RTN","PXRMXD",215,0)
 ;For selected locations check if all locations are wards
"RTN","PXRMXD",216,0)
 I $P(PXRMLCSC,U)="HS" Q $$INP^PXRMXAP(PXRMLCSC,.PXRMLOCN)
"RTN","PXRMXD",217,0)
 ;Otherwise
"RTN","PXRMXD",218,0)
 Q 0
"RTN","PXRMXD",219,0)
 ;
"RTN","PXRMXD",220,0)
 ;Prompt text
"RTN","PXRMXD",221,0)
LIT N LIT
"RTN","PXRMXD",222,0)
 S LIT=$S(PXRMSEL="P":"Provider","OT"[PXRMSEL:"Team",1:"Location")
"RTN","PXRMXD",223,0)
 I PXRMFCMB="N" D
"RTN","PXRMXD",224,0)
 .S LIT1="Individual "_LIT_"s only"
"RTN","PXRMXD",225,0)
 .S LIT2="Individual "_LIT_"s plus Totals by Facility"
"RTN","PXRMXD",226,0)
 .S LIT3="Totals by Facility only"
"RTN","PXRMXD",227,0)
 I PXRMFCMB="Y" D
"RTN","PXRMXD",228,0)
 .S LIT1="Individual "_LIT_"s only"
"RTN","PXRMXD",229,0)
 .S LIT2="Individual "_LIT_"s plus Overall Total"
"RTN","PXRMXD",230,0)
 .S LIT3="Overall Total only"
"RTN","PXRMXD",231,0)
 Q
"RTN","PXRMXD",232,0)
 ;
"RTN","PXRMXD",233,0)
 ;Check if multiple locations
"RTN","PXRMXD",234,0)
NLOC S DEFAULT="N",NLOC=1,TEXT="Locations"
"RTN","PXRMXD",235,0)
 I $P(PXRMLCSC,U)["HA" S DEFAULT="Y",NLOC=999
"RTN","PXRMXD",236,0)
 I $P(PXRMLCSC,U)="CA" S DEFAULT="Y",NCS=999
"RTN","PXRMXD",237,0)
 I $E(PXRMLCSC)="C" S TEXT="Clinic Stops",NLOC=NCS
"RTN","PXRMXD",238,0)
 I $E(PXRMLCSC)="G" S TEXT="Clinic Groups",NLOC=NCGRP
"RTN","PXRMXD",239,0)
 I $P(PXRMLCSC,U)="HS" S NLOC=NHL S:$$INP TEXT="Inpatient Locations"
"RTN","PXRMXD",240,0)
 ;Special coding if more than one facility and location
"RTN","PXRMXD",241,0)
 I $P(PXRMLCSC,U)="HS",NFAC>1,NLOC>1 D
"RTN","PXRMXD",242,0)
 .N FAC,HLOCIEN,HLNAME,IC,MULT
"RTN","PXRMXD",243,0)
 .S IC=0 S:PXRMFCMB="Y" FAC="COMBINED"
"RTN","PXRMXD",244,0)
 .;Build list of locations by facility
"RTN","PXRMXD",245,0)
 .F  S IC=$O(PXRMLCHL(IC)) Q:'IC  D
"RTN","PXRMXD",246,0)
 ..S HLOCIEN=$P(PXRMLCHL(IC),U,2),FAC=$$FACL^PXRMXAP(HLOCIEN) Q:'FAC
"RTN","PXRMXD",247,0)
 ..S HLNAME=$P(PXRMLCHL(IC),U) Q:HLNAME=""
"RTN","PXRMXD",248,0)
 ..S MULT(FAC,HLNAME)=""
"RTN","PXRMXD",249,0)
 .S MULT=0,FAC=0
"RTN","PXRMXD",250,0)
 .;Count locations in each facility
"RTN","PXRMXD",251,0)
 .F  S FAC=$O(MULT(FAC)) Q:'FAC  D  Q:MULT
"RTN","PXRMXD",252,0)
 ..S IC=0,HLNAME=""
"RTN","PXRMXD",253,0)
 ..F  S HLNAME=$O(MULT(FAC,HLNAME)) Q:HLNAME=""  S IC=IC+1
"RTN","PXRMXD",254,0)
 ..I IC>1 S MULT=1
"RTN","PXRMXD",255,0)
 .;If only one location per facility suppress combined location option
"RTN","PXRMXD",256,0)
 .I 'MULT S NLOC=1
"RTN","PXRMXD",257,0)
 Q
"RTN","PXRMXD",258,0)
 ;
"RTN","PXRMXD",259,0)
ASK(YESNO,PROMPT,NUM)      ;
"RTN","PXRMXD",260,0)
 N X,Y,TEXT
"RTN","PXRMXD",261,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXD",262,0)
 S DIR(0)="YA0"
"RTN","PXRMXD",263,0)
 S DIR("A")=PROMPT
"RTN","PXRMXD",264,0)
 S DIR("B")="N"
"RTN","PXRMXD",265,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXD",266,0)
 S DIR("??")=U_"D HELP^PXRMLCR("_NUM_")"
"RTN","PXRMXD",267,0)
 W !
"RTN","PXRMXD",268,0)
 D ^DIR K DIR
"RTN","PXRMXD",269,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXD",270,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXD",271,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXD",272,0)
 Q
"RTN","PXRMXD",273,0)
 ;
"RTN","PXRMXDET")
1^2
"RTN","PXRMXDT1")
0^83^B54036830
"RTN","PXRMXDT1",1,0)
PXRMXDT1 ; SLC/PJH - Build Patient list SUBROUTINES;07/10/2006
"RTN","PXRMXDT1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXDT1",3,0)
 ;
"RTN","PXRMXDT1",4,0)
 ; Called by label from PXRMXSEO,PXRMXSE
"RTN","PXRMXDT1",5,0)
 ;
"RTN","PXRMXDT1",6,0)
 ;Combined report duplicate check (Summary report)
"RTN","PXRMXDT1",7,0)
NEW(SUB,SUB1,SUB2) ;
"RTN","PXRMXDT1",8,0)
 ;Existing entry
"RTN","PXRMXDT1",9,0)
 I $D(^TMP("PXRMCMB",$J,SUB,SUB1,SUB2)) Q 0
"RTN","PXRMXDT1",10,0)
 ;New entry
"RTN","PXRMXDT1",11,0)
 S ^TMP("PXRMCMB",$J,SUB,SUB1,SUB2)=""
"RTN","PXRMXDT1",12,0)
 Q 1
"RTN","PXRMXDT1",13,0)
 ;
"RTN","PXRMXDT1",14,0)
 ;Individual patient report duplicate patient check
"RTN","PXRMXDT1",15,0)
NEWIP(DFN) ;
"RTN","PXRMXDT1",16,0)
 ;Existing entry
"RTN","PXRMXDT1",17,0)
 I $D(^TMP("PXRMCMB3",$J,DFN)) Q 0
"RTN","PXRMXDT1",18,0)
 ;New entry
"RTN","PXRMXDT1",19,0)
 S ^TMP("PXRMCMB3",$J,DFN)=""
"RTN","PXRMXDT1",20,0)
 Q 1
"RTN","PXRMXDT1",21,0)
 ;Combined report duplicate check (Detail report)
"RTN","PXRMXDT1",22,0)
NEWP(SUB,DFN) ;
"RTN","PXRMXDT1",23,0)
 ;Existing entry
"RTN","PXRMXDT1",24,0)
 I $D(^TMP("PXRMCMB1",$J,SUB,DFN)) Q 0
"RTN","PXRMXDT1",25,0)
 ;New entry
"RTN","PXRMXDT1",26,0)
 S ^TMP("PXRMCMB1",$J,SUB,DFN)=""
"RTN","PXRMXDT1",27,0)
 Q 1
"RTN","PXRMXDT1",28,0)
 ;
"RTN","PXRMXDT1",29,0)
 ;Combined report duplicate check (Patient totals)
"RTN","PXRMXDT1",30,0)
NEWT(FACILITY,DFN) ;
"RTN","PXRMXDT1",31,0)
 ;Existing entry
"RTN","PXRMXDT1",32,0)
 I $D(^TMP("PXRMCMB2",$J,FACILITY,DFN)) Q 0
"RTN","PXRMXDT1",33,0)
 ;New entry
"RTN","PXRMXDT1",34,0)
 S ^TMP("PXRMCMB2",$J,FACILITY,DFN)=""
"RTN","PXRMXDT1",35,0)
 Q 1
"RTN","PXRMXDT1",36,0)
 ;
"RTN","PXRMXDT1",37,0)
 ;Detailed report
"RTN","PXRMXDT1",38,0)
SDET(DFN,STATUS,NAM,FACILITY,INP) ;
"RTN","PXRMXDT1",39,0)
 I $G(^XTMP(PXRMXTMP,PX,FACILITY,NAM))="" D
"RTN","PXRMXDT1",40,0)
 .S ^XTMP(PXRMXTMP,PX,FACILITY,NAM)=NAM
"RTN","PXRMXDT1",41,0)
 ;Applicable
"RTN","PXRMXDT1",42,0)
 S DDAT="N/A"
"RTN","PXRMXDT1",43,0)
 N APPL,FAPPTDT,DEFARR,DNEXT,DNEXT1,FIEV,PXRMDATE,BID,TMPSUB
"RTN","PXRMXDT1",44,0)
 S APPL=0,FAPPTDT=0
"RTN","PXRMXDT1",45,0)
 ;Add any that aren't N/A, Ignore on N/A or NEVER to applicable total
"RTN","PXRMXDT1",46,0)
 I ($P(STATUS,U)'="")&(STATUS'["NEVER")&(STATUS'["N/A")&(STATUS'["ERROR")&(STATUS'["CNBD") S APPL=1
"RTN","PXRMXDT1",47,0)
 ;If DUE NOW save details
"RTN","PXRMXDT1",48,0)
 I $G(STATUS)'["DUE NOW" S PNAM=" "
"RTN","PXRMXDT1",49,0)
 I $G(STATUS)["DUE NOW" D
"RTN","PXRMXDT1",50,0)
 .N BED
"RTN","PXRMXDT1",51,0)
 .S DDUE=$P($G(STATUS),U,2)
"RTN","PXRMXDT1",52,0)
 .S DLAST=$P($G(STATUS),U,3)
"RTN","PXRMXDT1",53,0)
 .;Demographics
"RTN","PXRMXDT1",54,0)
 .S PNAM=$P($G(^DPT(DFN,0)),U),BID=$P($G(^DPT(DFN,0)),U,9)
"RTN","PXRMXDT1",55,0)
 .I PNAM="" S PNAM=" "
"RTN","PXRMXDT1",56,0)
 .E  S PNAM=PNAM_U_BID
"RTN","PXRMXDT1",57,0)
 .;Next appointment for location or clinic
"RTN","PXRMXDT1",58,0)
 .;For detailed provider report get next appoint. for assoc. clinic
"RTN","PXRMXDT1",59,0)
 .S DNEXT=""
"RTN","PXRMXDT1",60,0)
 .I PXRMSEL="L"!(PXRMSEL="P") S TMPSUB="PXRM FUTURE APPT"
"RTN","PXRMXDT1",61,0)
 .E  S TMPSUB="SDAMA301"
"RTN","PXRMXDT1",62,0)
 .I PXRMFCMB="Y",PXRMLCMB="Y",$D(^TMP($J,TMPSUB,DFN))>0 D
"RTN","PXRMXDT1",63,0)
 ..N APPTCNT,LOC
"RTN","PXRMXDT1",64,0)
 ..S LOC=0,APPTCNT=0
"RTN","PXRMXDT1",65,0)
 ..F  S LOC=$O(^TMP($J,TMPSUB,DFN,LOC)) Q:(LOC'>0)!(APPTCNT=1)  D
"RTN","PXRMXDT1",66,0)
 ...S DNEXT=$O(^TMP($J,TMPSUB,DFN,LOC,"")) I +DNEXT>0 S APPTCNT=1 Q
"RTN","PXRMXDT1",67,0)
 .S DNEXT=$O(^TMP($J,TMPSUB,DFN,$G(INP),""))
"RTN","PXRMXDT1",68,0)
 .I PXRMFCMB="N",PXRMLCMB="Y" D
"RTN","PXRMXDT1",69,0)
 ..S DNEXT1=$O(^TMP($J,"PXRM FACILITY FUTURE APPT",DFN,FACILITY,"")) Q:DNEXT1'>0
"RTN","PXRMXDT1",70,0)
 ..I +DNEXT=0!(DNEXT>DNEXT1) S DNEXT=DNEXT1
"RTN","PXRMXDT1",71,0)
 .S BED=$G(^DPT(DFN,.101)) S:BED="" BED="NONE"
"RTN","PXRMXDT1",72,0)
 .;Sort by next appointment date
"RTN","PXRMXDT1",73,0)
 .I PXRMSRT="Y" S DDAT=$P(DNEXT,".") S:DDAT="" DDAT="NONE"
"RTN","PXRMXDT1",74,0)
 .;Patient ward/bed used only for inpatient reports
"RTN","PXRMXDT1",75,0)
 .I PXRMFUT="Y" S DNEXT=""
"RTN","PXRMXDT1",76,0)
 .N TXT
"RTN","PXRMXDT1",77,0)
 .S TXT=DFN_U_DDUE_U_DLAST_U_$G(DNEXT)_$S($G(BED)'="":U_BED,1:"")
"RTN","PXRMXDT1",78,0)
 .I $G(BED)'="",BED'="NONE" S DDAT=BED
"RTN","PXRMXDT1",79,0)
 .N BED
"RTN","PXRMXDT1",80,0)
 .S BED=""
"RTN","PXRMXDT1",81,0)
 .I $G(PXRMINP) D
"RTN","PXRMXDT1",82,0)
 ..S BED=$G(^DPT(DFN,.101)) S:BED="" BED="NONE"
"RTN","PXRMXDT1",83,0)
 ..S TXT=TXT_U_BED
"RTN","PXRMXDT1",84,0)
 ..;Sort by bed
"RTN","PXRMXDT1",85,0)
 ..I PXRMSRT="B" S DDAT=BED
"RTN","PXRMXDT1",86,0)
 .;Duplicate check for combined report
"RTN","PXRMXDT1",87,0)
 .I PXRMFCMB="Y",'$$NEW(NAM,DDAT,PNAM) Q
"RTN","PXRMXDT1",88,0)
 .;I PXRMFCMB'="Y",PXRMLCMB="Y",'$$NEW^PXRMXSEO(NAM,DDAT,PNAM) Q
"RTN","PXRMXDT1",89,0)
 .;Save entry in ^XTMP
"RTN","PXRMXDT1",90,0)
 .S ^XTMP(PXRMXTMP,PX,FACILITY,NAM,DDAT,PNAM)=TXT
"RTN","PXRMXDT1",91,0)
 .;Total of reminders overdue
"RTN","PXRMXDT1",92,0)
 .N CNT
"RTN","PXRMXDT1",93,0)
 .S CNT=$P(^XTMP(PXRMXTMP,PX,FACILITY,NAM),U,2)
"RTN","PXRMXDT1",94,0)
 .S $P(^XTMP(PXRMXTMP,PX,FACILITY,NAM),U,2)=CNT+1
"RTN","PXRMXDT1",95,0)
 ;Total of patients checked/applicable
"RTN","PXRMXDT1",96,0)
 N CNT,NEW
"RTN","PXRMXDT1",97,0)
 S NEW=1 I PXRMFCMB="Y" S NEW=$$NEWP(NAM,DFN)
"RTN","PXRMXDT1",98,0)
 I NEW=1 D
"RTN","PXRMXDT1",99,0)
 .S CNT=$P(^XTMP(PXRMXTMP,PX,FACILITY,NAM),U,3)
"RTN","PXRMXDT1",100,0)
 .S $P(^XTMP(PXRMXTMP,PX,FACILITY,NAM),U,3)=CNT+1
"RTN","PXRMXDT1",101,0)
 .S CNT=$P(^XTMP(PXRMXTMP,PX,FACILITY,NAM),U,4)
"RTN","PXRMXDT1",102,0)
 .S $P(^XTMP(PXRMXTMP,PX,FACILITY,NAM),U,4)=CNT+APPL
"RTN","PXRMXDT1",103,0)
 I PXRMFUT="Y"&($G(STATUS)["DUE NOW") D
"RTN","PXRMXDT1",104,0)
 .N APPTARY,APPTDT,CIEN,CNT,NODE,SUB
"RTN","PXRMXDT1",105,0)
 .S SUB="" I $D(^TMP($J,"PXRM FUTURE APPT",DFN))>0 S SUB="PXRM FUTURE APPT"
"RTN","PXRMXDT1",106,0)
 .I SUB="",$D(^TMP($J,"SDAMA301",DFN))>0 S SUB="SDAMA301"
"RTN","PXRMXDT1",107,0)
 .I SUB="" Q
"RTN","PXRMXDT1",108,0)
 .S CNT=0
"RTN","PXRMXDT1",109,0)
 .S CIEN=0 F  S CIEN=$O(^TMP($J,SUB,DFN,CIEN)) Q:CIEN'>0  D
"RTN","PXRMXDT1",110,0)
 ..S APPTDT=0
"RTN","PXRMXDT1",111,0)
 ..F  S APPTDT=$O(^TMP($J,SUB,DFN,CIEN,APPTDT)) Q:APPTDT'>0  D
"RTN","PXRMXDT1",112,0)
 ...S NODE=$G(^TMP($J,SUB,DFN,CIEN,APPTDT))
"RTN","PXRMXDT1",113,0)
 ...S APPTARY(APPTDT)=APPTDT_U_$P($P(NODE,U,2),";",2)_U_$P($P(NODE,U,22),";",2)
"RTN","PXRMXDT1",114,0)
 .S APPTDT=0 F  S APPTDT=$O(APPTARY(APPTDT)) Q:APPTDT'>0  S CNT=CNT+1,^XTMP(PXRMXTMP,PX,FACILITY,NAM,DDAT,PNAM,CNT,0)=APPTARY(APPTDT)
"RTN","PXRMXDT1",115,0)
 Q
"RTN","PXRMXDT1",116,0)
 ;
"RTN","PXRMXDT1",117,0)
SUM(DFN,STATUS,FACILITY,NAM) ;
"RTN","PXRMXDT1",118,0)
 N DUE,EVAL
"RTN","PXRMXDT1",119,0)
 S (DUE,EVAL)=0
"RTN","PXRMXDT1",120,0)
 ;Add dues to totals of reminders due and reminders applicable
"RTN","PXRMXDT1",121,0)
 I STATUS["DUE NOW" D
"RTN","PXRMXDT1",122,0)
 .S DUE=1,EVAL=1
"RTN","PXRMXDT1",123,0)
 ;Add any that aren't N/A, Ignore on N/A,ERROR or NEVER to applicable total
"RTN","PXRMXDT1",124,0)
 S STATUS=$P(STATUS,U)
"RTN","PXRMXDT1",125,0)
 I (STATUS'=" ")&(STATUS'["NEVER")&(STATUS'="N/A")&(STATUS'["ERROR")&(STATUS'["CNBD") S EVAL=1
"RTN","PXRMXDT1",126,0)
 ;Update XTMP - Total of reminders due
"RTN","PXRMXDT1",127,0)
 I "IR"[PXRMTOT D
"RTN","PXRMXDT1",128,0)
 .;Combined facility duplicate check
"RTN","PXRMXDT1",129,0)
 .I PXRMFCMB="Y",'$$NEW(NAM,DFN,ITEM) Q
"RTN","PXRMXDT1",130,0)
 .N CNT
"RTN","PXRMXDT1",131,0)
 .S CNT=$P($G(^XTMP(PXRMXTMP,PX,FACILITY,NAM,ITEM)),U,1)
"RTN","PXRMXDT1",132,0)
 .S $P(^XTMP(PXRMXTMP,PX,FACILITY,NAM,ITEM),U,1)=CNT+EVAL
"RTN","PXRMXDT1",133,0)
 .;Total of reminders evaluated
"RTN","PXRMXDT1",134,0)
 .S CNT=$P($G(^XTMP(PXRMXTMP,PX,FACILITY,NAM,ITEM)),U,2)
"RTN","PXRMXDT1",135,0)
 .S $P(^XTMP(PXRMXTMP,PX,FACILITY,NAM,ITEM),U,2)=CNT+DUE
"RTN","PXRMXDT1",136,0)
 ;
"RTN","PXRMXDT1",137,0)
 ;Totals
"RTN","PXRMXDT1",138,0)
 I "RT"[PXRMTOT D
"RTN","PXRMXDT1",139,0)
 .;Check for duplicate patient at FACILITY level
"RTN","PXRMXDT1",140,0)
 .I $D(^TMP("PXRMDUP",$J,FACILITY,DFN,ITEM)) Q
"RTN","PXRMXDT1",141,0)
 .;Set duplicate check
"RTN","PXRMXDT1",142,0)
 .S ^TMP("PXRMDUP",$J,FACILITY,DFN,ITEM)=""
"RTN","PXRMXDT1",143,0)
 .I $G(^XTMP(PXRMXTMP,PX,FACILITY,"TOTAL"))="" D
"RTN","PXRMXDT1",144,0)
 ..S ^XTMP(PXRMXTMP,PX,FACILITY,"TOTAL")="TOTAL"
"RTN","PXRMXDT1",145,0)
 .N CNT
"RTN","PXRMXDT1",146,0)
 .S CNT=$P($G(^XTMP(PXRMXTMP,PX,FACILITY,"TOTAL",ITEM)),U,1)
"RTN","PXRMXDT1",147,0)
 .S $P(^XTMP(PXRMXTMP,PX,FACILITY,"TOTAL",ITEM),U,1)=CNT+EVAL
"RTN","PXRMXDT1",148,0)
 .S CNT=$P($G(^XTMP(PXRMXTMP,PX,FACILITY,"TOTAL",ITEM)),U,2)
"RTN","PXRMXDT1",149,0)
 .S $P(^XTMP(PXRMXTMP,PX,FACILITY,"TOTAL",ITEM),U,2)=CNT+DUE
"RTN","PXRMXDT1",150,0)
 ;
"RTN","PXRMXDT1",151,0)
 ;Total of patients
"RTN","PXRMXDT1",152,0)
 I "IR"[PXRMTOT D
"RTN","PXRMXDT1",153,0)
 .I PXRMSEL="I",$$NEWIP(DFN)<1 Q
"RTN","PXRMXDT1",154,0)
 .I $$NEWP(@SUB,DFN)=0 Q
"RTN","PXRMXDT1",155,0)
 .I $G(^XTMP(PXRMXTMP,PX,FACILITY,@SUB))="" S ^XTMP(PXRMXTMP,PX,FACILITY,@SUB)=NAM
"RTN","PXRMXDT1",156,0)
 .N CNT S CNT=$P($G(^XTMP(PXRMXTMP,PX,FACILITY,@SUB)),U,3)
"RTN","PXRMXDT1",157,0)
 .S $P(^XTMP(PXRMXTMP,PX,FACILITY,@SUB),U,3)=CNT+1
"RTN","PXRMXDT1",158,0)
 ;
"RTN","PXRMXDT1",159,0)
 ;Total reports
"RTN","PXRMXDT1",160,0)
 I "TR"[PXRMTOT D
"RTN","PXRMXDT1",161,0)
 .I '$$NEWT(FACILITY,DFN) Q
"RTN","PXRMXDT1",162,0)
 .I $G(^XTMP(PXRMXTMP,PX,FACILITY,"TOTAL"))="" D
"RTN","PXRMXDT1",163,0)
 ..S ^XTMP(PXRMXTMP,PX,FACILITY,"TOTAL")=NAM
"RTN","PXRMXDT1",164,0)
 .N CNT
"RTN","PXRMXDT1",165,0)
 .S CNT=$P($G(^XTMP(PXRMXTMP,PX,FACILITY,"TOTAL")),U,3)
"RTN","PXRMXDT1",166,0)
 .S $P(^XTMP(PXRMXTMP,PX,FACILITY,"TOTAL"),U,3)=CNT+1
"RTN","PXRMXDT1",167,0)
 Q
"RTN","PXRMXDT1",168,0)
 ;
"RTN","PXRMXDT1",169,0)
DBDOWN(TYPE) ;
"RTN","PXRMXDT1",170,0)
 N CNT,CNT1,CNT2,STR,NLINES,OUTPUT,TIME
"RTN","PXRMXDT1",171,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMXDT1",172,0)
 S NLINES=0,CNT=0,CNT1=2
"RTN","PXRMXDT1",173,0)
 I TYPE="C" D  Q
"RTN","PXRMXDT1",174,0)
 .M ^TMP("PXRMXMZ",$J)=^TMP($J,"PXRM CNBD")
"RTN","PXRMXDT1",175,0)
 .D SEND^PXRMMSG("COULD NOT BE DETERMINED PATIENTS("_$$FMTE^XLFDT($$NOW^XLFDT)_")",1)
"RTN","PXRMXDT1",176,0)
 I 'PXRMQUE D
"RTN","PXRMXDT1",177,0)
 .S STR(1)="The Reminders Due Report "_$G(TITLE)_" requested by "_$$GET1^DIQ(200,DUZ,.01)_" on "_$$FMTE^XLFDT($G(PXRMXST))_" for the following reason(s):"
"RTN","PXRMXDT1",178,0)
 .F  S CNT=$O(DBERR(CNT)) Q:CNT'>0  S STR(CNT1)="\\"_DBERR(CNT),CNT1=CNT1+1
"RTN","PXRMXDT1",179,0)
 .D FORMAT^PXRMTEXT(1,80,2,.STR,.NLINES,.OUTPUT)
"RTN","PXRMXDT1",180,0)
 .F CNT=1:1:NLINES W !,OUTPUT(CNT)
"RTN","PXRMXDT1",181,0)
 I PXRMQUE D
"RTN","PXRMXDT1",182,0)
 .S ^TMP("PXRMXMZ",$J,1,0)="The Reminders Due Report "_$G(TITLE)_" requested by "_$$GET1^DIQ(200,DUZ,.01)_" on "_$$FMTE^XLFDT($G(PXRMXST))_" for the following reason(s):"
"RTN","PXRMXDT1",183,0)
 .F  S CNT=$O(DBERR(CNT)) Q:CNT'>0  S ^TMP("PXRMXMZ",$J,CNT1,0)=DBERR(CNT),CNT1=CNT1+1
"RTN","PXRMXDT1",184,0)
 .D SEND^PXRMMSG("Cancelled Reminders Due Report("_$$FMTE^XLFDT($$NOW^XLFDT)_")",1)
"RTN","PXRMXDT1",185,0)
 .S ZTSTOP=1
"RTN","PXRMXDT1",186,0)
 Q
"RTN","PXRMXDUT")
0^102^B36214366
"RTN","PXRMXDUT",1,0)
PXRMXDUT ; SLC/PJH - Date utilities for reminder reports. ;05/05/2006
"RTN","PXRMXDUT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXDUT",3,0)
 ;
"RTN","PXRMXDUT",4,0)
BDHELP(HTEXT,TYPE) ;Write the beginning date help.
"RTN","PXRMXDUT",5,0)
 I $D(HTEXT) D HELP(.HTEXT)
"RTN","PXRMXDUT",6,0)
 I '$D(HTEXT) D
"RTN","PXRMXDUT",7,0)
 . N BDHTEXT
"RTN","PXRMXDUT",8,0)
 . S BDHTEXT(1)="This is the beginning date for "_TYPE_" to be included in the creation of"
"RTN","PXRMXDUT",9,0)
 . S BDHTEXT(2)="this report."
"RTN","PXRMXDUT",10,0)
 . D HELP^PXRMXDUT(.BDHTEXT)
"RTN","PXRMXDUT",11,0)
 Q
"RTN","PXRMXDUT",12,0)
 ;
"RTN","PXRMXDUT",13,0)
EDHELP(HTEXT,TYPE) ;Write the ending date help.
"RTN","PXRMXDUT",14,0)
 I $D(HTEXT) D HELP(.HTEXT)
"RTN","PXRMXDUT",15,0)
 I '$D(HTEXT) D
"RTN","PXRMXDUT",16,0)
 . N EDHTEXT
"RTN","PXRMXDUT",17,0)
 . S EDHTEXT(1)="This is the ending date for "_TYPE_" to be included in the creation"
"RTN","PXRMXDUT",18,0)
 . S EDHTEXT(2)="of this report."
"RTN","PXRMXDUT",19,0)
 . D HELP^PXRMXDUT(.EDHTEXT)
"RTN","PXRMXDUT",20,0)
 Q
"RTN","PXRMXDUT",21,0)
 ;
"RTN","PXRMXDUT",22,0)
SDHELP(HTEXT) ;Write the single date help.
"RTN","PXRMXDUT",23,0)
 I $D(HTEXT) D HELP(.HTEXT)
"RTN","PXRMXDUT",24,0)
 I '$D(HTEXT) D
"RTN","PXRMXDUT",25,0)
 . N SDHTEXT
"RTN","PXRMXDUT",26,0)
 . S SDHTEXT(1)="This is the date of reminder evaluation for the report"
"RTN","PXRMXDUT",27,0)
 . D HELP^PXRMXDUT(.SDHTEXT)
"RTN","PXRMXDUT",28,0)
 Q
"RTN","PXRMXDUT",29,0)
 ;
"RTN","PXRMXDUT",30,0)
FDR(BDATE,EDATE,TYPE,BHTEXT,EHTEXT) ;Get a future date range.
"RTN","PXRMXDUT",31,0)
FBDATE ;Select the beginning date.
"RTN","PXRMXDUT",32,0)
 N X,Y,DIR
"RTN","PXRMXDUT",33,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",34,0)
 S DIR(0)="DA^"_DT_"::EFTX"
"RTN","PXRMXDUT",35,0)
 S DIR("A")="Enter "_TYPE_" BEGINNING DATE AND TIME: "
"RTN","PXRMXDUT",36,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMXDUT",37,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMXDUT",38,0)
 S DIR("?")="This must be a future date. For detailed help type ??"
"RTN","PXRMXDUT",39,0)
 S DIR("??")=U_"D BDHELP^PXRMXDUT(.BHTEXT,TYPE)"
"RTN","PXRMXDUT",40,0)
 W !
"RTN","PXRMXDUT",41,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",42,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",43,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXDUT",44,0)
 S BDATE=Y
"RTN","PXRMXDUT",45,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G FBDATE
"RTN","PXRMXDUT",46,0)
 ;
"RTN","PXRMXDUT",47,0)
FEDATE ;Select the ending date.
"RTN","PXRMXDUT",48,0)
 S DIR(0)="DA^"_BDATE_"::ETFX"
"RTN","PXRMXDUT",49,0)
 S DIR("A")="Enter "_TYPE_" ENDING DATE AND TIME: "
"RTN","PXRMXDUT",50,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMXDUT",51,0)
 S DIR("?")="This must be a future date and not before "_$$FMTE^XLFDT(BDATE,"P")_". For detailed help type ??"
"RTN","PXRMXDUT",52,0)
 S DIR("??")=U_"D EDHELP^PXRMXDUT(.EHTEXT,TYPE)"
"RTN","PXRMXDUT",53,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",54,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",55,0)
 I $D(DTOUT) Q
"RTN","PXRMXDUT",56,0)
 I $D(DUOUT) G FBDATE
"RTN","PXRMXDUT",57,0)
 S EDATE=Y
"RTN","PXRMXDUT",58,0)
 I EDATE<DT W !,"This must be a past date. For detailed help type ??" G FEDATE
"RTN","PXRMXDUT",59,0)
 I EDATE<BDATE W !,"The ending date cannot be before the beginning date" G FEDATE
"RTN","PXRMXDUT",60,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G FEDATE
"RTN","PXRMXDUT",61,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",62,0)
 Q
"RTN","PXRMXDUT",63,0)
 ;
"RTN","PXRMXDUT",64,0)
GDR(BDATE,EDATE,TYPE,BHTEXT,EHTEXT) ;Get a general date range.
"RTN","PXRMXDUT",65,0)
GBDATE ;Select the beginning date.
"RTN","PXRMXDUT",66,0)
 N X,Y,DIR
"RTN","PXRMXDUT",67,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",68,0)
 S DIR(0)="DA^::ETX"
"RTN","PXRMXDUT",69,0)
 S DIR("A")="Enter "_TYPE_" BEGINNING DATE: "
"RTN","PXRMXDUT",70,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMXDUT",71,0)
 S DIR("?")="This must be a date. For detailed help type ??"
"RTN","PXRMXDUT",72,0)
 S DIR("??")=U_"D BDHELP^PXRMXDUT(.BHTEXT,TYPE)"
"RTN","PXRMXDUT",73,0)
 W !
"RTN","PXRMXDUT",74,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",75,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",76,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXDUT",77,0)
 S BDATE=Y
"RTN","PXRMXDUT",78,0)
 I BDATE<DT W !,"This must be a past date. For detailed help type ??" G FBDATE
"RTN","PXRMXDUT",79,0)
 ;
"RTN","PXRMXDUT",80,0)
GEDATE ;Select the ending date.
"RTN","PXRMXDUT",81,0)
 S DIR(0)="DA^"_BDATE_"::ETX"
"RTN","PXRMXDUT",82,0)
 S DIR("A")="Enter "_TYPE_" ENDING DATE: "
"RTN","PXRMXDUT",83,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMXDUT",84,0)
 S DIR("?")="This must be a date and not before "_$$FMTE^XLFDT(BDATE,"D")_". For detailed help type ??"
"RTN","PXRMXDUT",85,0)
 S DIR("??")=U_"D EDHELP^PXRMXDUT(.EHTEXT,TYPE)"
"RTN","PXRMXDUT",86,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",87,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",88,0)
 I $D(DTOUT) Q
"RTN","PXRMXDUT",89,0)
 I $D(DUOUT) G GBDATE
"RTN","PXRMXDUT",90,0)
 S EDATE=Y
"RTN","PXRMXDUT",91,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G GEDATE
"RTN","PXRMXDUT",92,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",93,0)
 Q
"RTN","PXRMXDUT",94,0)
 ;
"RTN","PXRMXDUT",95,0)
HELP(HTEXT) ;General help text routine. Write out the text in the HTEXT
"RTN","PXRMXDUT",96,0)
 ;array.
"RTN","PXRMXDUT",97,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMXDUT",98,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMXDUT",99,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXDUT",100,0)
 S IC=""
"RTN","PXRMXDUT",101,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMXDUT",102,0)
 . S X=HTEXT(IC)
"RTN","PXRMXDUT",103,0)
 . D ^DIWP
"RTN","PXRMXDUT",104,0)
 W !
"RTN","PXRMXDUT",105,0)
 S IC=0
"RTN","PXRMXDUT",106,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMXDUT",107,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMXDUT",108,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXDUT",109,0)
 W !
"RTN","PXRMXDUT",110,0)
 N %DT,MODE
"RTN","PXRMXDUT",111,0)
 S MODE=$G(TYPE),%DT="F",%DT(0)=DT
"RTN","PXRMXDUT",112,0)
 I (MODE="ADMISSION")!(MODE="ENCOUNTER") S %DT="P",%DT(0)=-DT
"RTN","PXRMXDUT",113,0)
 D HELP^%DTC
"RTN","PXRMXDUT",114,0)
 Q
"RTN","PXRMXDUT",115,0)
 ;
"RTN","PXRMXDUT",116,0)
PDR(BDATE,EDATE,TYPE,BHTEXT,EXTEXT) ;Get a past date range.
"RTN","PXRMXDUT",117,0)
PBDATE ;Select the beginning date.
"RTN","PXRMXDUT",118,0)
 N X,Y,DIR
"RTN","PXRMXDUT",119,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",120,0)
 S DIR(0)="D^:"_DT_":EPTX"
"RTN","PXRMXDUT",121,0)
 S DIR("A")="Enter "_TYPE_" BEGINNING DATE"
"RTN","PXRMXDUT",122,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMXDUT",123,0)
 S DIR("?")="This must be a past date. For detailed help type ??"
"RTN","PXRMXDUT",124,0)
 S DIR("??")=U_"D BDHELP^PXRMXDUT(.BHTEXT,TYPE)"
"RTN","PXRMXDUT",125,0)
 W !
"RTN","PXRMXDUT",126,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",127,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",128,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXDUT",129,0)
 S BDATE=Y
"RTN","PXRMXDUT",130,0)
 I $P(BDATE,".")>DT W !,"This must be a past date. For detailed help type ??" G PBDATE
"RTN","PXRMXDUT",131,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G PBDATE
"RTN","PXRMXDUT",132,0)
 ;
"RTN","PXRMXDUT",133,0)
PEDATE ;Select the ending date.
"RTN","PXRMXDUT",134,0)
 S DIR(0)="DA^"_BDATE_":"_DT_":EPTX"
"RTN","PXRMXDUT",135,0)
 S DIR("A")="Enter "_TYPE_" ENDING DATE: "
"RTN","PXRMXDUT",136,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMXDUT",137,0)
 S DIR("?")="This must be a past date, but not before "_$$FMTE^XLFDT(BDATE,"D")_". For detailed help type ??"
"RTN","PXRMXDUT",138,0)
 S DIR("??")=U_"D EDHELP^PXRMXDUT(.EHTEXT,TYPE)"
"RTN","PXRMXDUT",139,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",140,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",141,0)
 I $D(DTOUT) Q
"RTN","PXRMXDUT",142,0)
 I $D(DUOUT) G PBDATE
"RTN","PXRMXDUT",143,0)
 S EDATE=Y
"RTN","PXRMXDUT",144,0)
 I $P(EDATE,".")>DT W !,"This must be a past date. For detailed help type ??" G PEDATE
"RTN","PXRMXDUT",145,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G PEDATE
"RTN","PXRMXDUT",146,0)
 I EDATE<BDATE W !,"The ending date cannot be less then the beginning date." G PEDATE
"RTN","PXRMXDUT",147,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",148,0)
 Q
"RTN","PXRMXDUT",149,0)
 ;
"RTN","PXRMXDUT",150,0)
SDR(SDATE,BHTEXT,EHTEXT) ;Get a date.
"RTN","PXRMXDUT",151,0)
SBDATE ;Select the date.
"RTN","PXRMXDUT",152,0)
 N X,Y,DIR
"RTN","PXRMXDUT",153,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",154,0)
 S DIR(0)="DA^::ETX"
"RTN","PXRMXDUT",155,0)
 S DIR("A")="Enter EFFECTIVE DUE DATE: "
"RTN","PXRMXDUT",156,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMXDUT",157,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMXDUT",158,0)
 S DIR("?")="Enter date for reminder evaluation. For detailed help type ??"
"RTN","PXRMXDUT",159,0)
 S DIR("??")=U_"D SDHELP^PXRMXDUT(.BHTEXT)"
"RTN","PXRMXDUT",160,0)
 W !
"RTN","PXRMXDUT",161,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",162,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",163,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXDUT",164,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G SBDATE
"RTN","PXRMXDUT",165,0)
 S SDATE=Y
"RTN","PXRMXDUT",166,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",167,0)
 Q
"RTN","PXRMXDUT",168,0)
 ;
"RTN","PXRMXEVL")
0^82^B2049131
"RTN","PXRMXEVL",1,0)
PXRMXEVL ; SLC/AGP - Reports Reminder Evaluation routine;12/9/2005
"RTN","PXRMXEVL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXEVL",3,0)
 ;
"RTN","PXRMXEVL",4,0)
 ; Called by label from PXRMXSE1
"RTN","PXRMXEVL",5,0)
 ;
"RTN","PXRMXEVL",6,0)
 ; 
"RTN","PXRMXEVL",7,0)
 ;
"RTN","PXRMXEVL",8,0)
 ;Detailed report
"RTN","PXRMXEVL",9,0)
EVAL(SUB,REMINDER) ;
"RTN","PXRMXEVL",10,0)
 N CNT,DFN,DEFARR,FIEV,ITEM,LIT,PXRMDATE
"RTN","PXRMXEVL",11,0)
 S CNT=0 F  S CNT=$O(REMINDER(CNT)) Q:CNT'>0  D
"RTN","PXRMXEVL",12,0)
 .S ITEM=$P(REMINDER(CNT),U,1),LIT=$P(REMINDER(CNT),U,4)
"RTN","PXRMXEVL",13,0)
 .I LIT="" S LIT=$P(REMINDER(CNT),U,2)
"RTN","PXRMXEVL",14,0)
 .I $P($G(^PXD(811.9,ITEM,0)),U,6)=1 Q
"RTN","PXRMXEVL",15,0)
 .D DEF^PXRMLDR(ITEM,.DEFARR)
"RTN","PXRMXEVL",16,0)
 .S DFN=0 F  S DFN=$O(^TMP($J,SUB,DFN)) Q:DFN'>0!(ZTSTOP=1)  D
"RTN","PXRMXEVL",17,0)
 ..I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D SPIN^PXRMXBSY("Evaluating Reminders",.BUSY)
"RTN","PXRMXEVL",18,0)
 ..;Check if due and/or applicable (active reminder for live patient)
"RTN","PXRMXEVL",19,0)
 ..K FIEV
"RTN","PXRMXEVL",20,0)
 ..S PXRMDATE=PXRMSDT D EVAL^PXRM(DFN,.DEFARR,1,1,.FIEV,PXRMDATE)
"RTN","PXRMXEVL",21,0)
 ..;Quit if nothing returned
"RTN","PXRMXEVL",22,0)
 ..S ^TMP($J,SUB,DFN,ITEM)=$G(^TMP("PXRHM",$J,ITEM,LIT))
"RTN","PXRMXEVL",23,0)
 ..K ^TMP("PXRHM",$J)
"RTN","PXRMXEVL",24,0)
 Q
"RTN","PXRMXEVL",25,0)
 ;
"RTN","PXRMXGPR")
0^105^B76948185
"RTN","PXRMXGPR",1,0)
PXRMXGPR ; SLC/PJH - Reminder Due print calls ;01/09/2006
"RTN","PXRMXGPR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXGPR",3,0)
 ;
"RTN","PXRMXGPR",4,0)
 ;Called from PXRMXPR
"RTN","PXRMXGPR",5,0)
 ;
"RTN","PXRMXGPR",6,0)
 ;Print Selection criteria
"RTN","PXRMXGPR",7,0)
HEAD(PSTART) ;
"RTN","PXRMXGPR",8,0)
 I SUB="TOTAL" N NAM S NAM="TOTAL REPORT"
"RTN","PXRMXGPR",9,0)
 I PXRMTABS="Y" D  Q
"RTN","PXRMXGPR",10,0)
 .N FFAC,FNAM
"RTN","PXRMXGPR",11,0)
 .S FNAM=NAM
"RTN","PXRMXGPR",12,0)
 .I "CES"[PXRMTABC S FNAM=$TR(FNAM,SEP,"_")
"RTN","PXRMXGPR",13,0)
 .I PXRMFCMB="N","LT"[PXRMSEL D  Q
"RTN","PXRMXGPR",14,0)
 ..S FFAC=$TR(FACPNAME,SEP,"_")
"RTN","PXRMXGPR",15,0)
 ..W !,"0"_SEP_FFAC_"_"_FNAM_SEP_SEP
"RTN","PXRMXGPR",16,0)
 .I PXRMFCMB="N","LT"'[PXRMSEL W !,"0"_SEP_FNAM_SEP_SEP Q
"RTN","PXRMXGPR",17,0)
 .I PXRMFCMB="Y" W !,"0"_SEP_"COMBINED_REPORT_"_FNAM_SEP_SEP Q
"RTN","PXRMXGPR",18,0)
 I "LT"[PXRMSEL D
"RTN","PXRMXGPR",19,0)
 .I PXRMFCMB="N" W !,?PSTART,"Facility: ",FACPNAME Q
"RTN","PXRMXGPR",20,0)
 .W !,?PSTART,"Combined Report: "
"RTN","PXRMXGPR",21,0)
 .N FACN,LENGTH,TEXT
"RTN","PXRMXGPR",22,0)
 .S FACN=0,LENGTH=17+PSTART
"RTN","PXRMXGPR",23,0)
 .F  S FACN=$O(PXRMFACN(FACN)) Q:'FACN  D
"RTN","PXRMXGPR",24,0)
 ..S TEXT=$P(PXRMFACN(FACN),U)_" ("_FACN_")"
"RTN","PXRMXGPR",25,0)
 ..I $O(PXRMFACN(FACN)) S TEXT=TEXT_", "
"RTN","PXRMXGPR",26,0)
 ..I (LENGTH+$L(TEXT))>80 S LENGTH=17+PSTART W !,?(17+PSTART)
"RTN","PXRMXGPR",27,0)
 ..W TEXT S LENGTH=LENGTH+$L(TEXT)
"RTN","PXRMXGPR",28,0)
 I "PTO"[PXRMSEL D
"RTN","PXRMXGPR",29,0)
 .I SUB="TOTAL" W !,?PSTART,NAM Q
"RTN","PXRMXGPR",30,0)
 .W !,?PSTART,"Reminders "_PXRMTX_" for ",NAM
"RTN","PXRMXGPR",31,0)
 I PXRMSEL="L" W !,?PSTART,"Reminders "_PXRMTX_" "_SD_" - ",NAM
"RTN","PXRMXGPR",32,0)
 I PXRMSEL="L" D
"RTN","PXRMXGPR",33,0)
 .I "PF"[PXRMFD W " for ",BD," to ",ED
"RTN","PXRMXGPR",34,0)
 .I PXRMFD="A" W " admissions from ",BD," to ",ED
"RTN","PXRMXGPR",35,0)
 .I PXRMFD="C" W " for current inpatients"
"RTN","PXRMXGPR",36,0)
 I PXRMSEL'="L" W " for ",SD
"RTN","PXRMXGPR",37,0)
 W:PXRMSEL="I" !
"RTN","PXRMXGPR",38,0)
 ;
"RTN","PXRMXGPR",39,0)
 Q
"RTN","PXRMXGPR",40,0)
 ;
"RTN","PXRMXGPR",41,0)
 ;Output the provider report criteria
"RTN","PXRMXGPR",42,0)
CRIT(PSTART,PLSTCRIT) ;
"RTN","PXRMXGPR",43,0)
 N CNT,RCCNT,RCDES,RICNT,RIDES,UNDL
"RTN","PXRMXGPR",44,0)
 S CNT=0
"RTN","PXRMXGPR",45,0)
 S UNDL=$TR($J("",79)," ","_") D LITS^PXRMXPR1
"RTN","PXRMXGPR",46,0)
 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART-8)_"Report Criteria:",CNT=CNT+1
"RTN","PXRMXGPR",47,0)
 I PXRMTMP'="" S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Report Title:",22)_$P(PXRMTMP,U,3),CNT=CNT+1
"RTN","PXRMXGPR",48,0)
 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Patient Sample:",22)_PXRMFLD,CNT=CNT+1
"RTN","PXRMXGPR",49,0)
 I PXRMSEL'="L" S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR(PXRMFLD_":",22) D DISP(.CNT,.PLSTCRIT)
"RTN","PXRMXGPR",50,0)
 I PXRMSEL="L" D
"RTN","PXRMXGPR",51,0)
 .S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR(PXRMFLD_":",22)_DES,CNT=CNT+1
"RTN","PXRMXGPR",52,0)
 .I $E(PXRMLCSC,2)'="A" S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",10) D DISP(.CNT,.PLSTCRIT)
"RTN","PXRMXGPR",53,0)
 I $D(PXRMRCAT) D
"RTN","PXRMXGPR",54,0)
 .S RCCNT=0
"RTN","PXRMXGPR",55,0)
 .F  S RCCNT=$O(PXRMRCAT(RCCNT)) Q:'RCCNT  D
"RTN","PXRMXGPR",56,0)
 ..S RCDES=$P(PXRMRCAT(RCCNT),U,2)
"RTN","PXRMXGPR",57,0)
 ..I RCCNT=1 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Reminder Category:",22)_RCDES_U_6,CNT=CNT+1
"RTN","PXRMXGPR",58,0)
 ..I RCCNT>1 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",22)_RCDES
"RTN","PXRMXGPR",59,0)
 .S RICNT=0
"RTN","PXRMXGPR",60,0)
 .F  S RICNT=$O(PXRMREM(RICNT)) Q:'RICNT  D
"RTN","PXRMXGPR",61,0)
 ..S RIDES=$P(PXRMREM(RICNT),U,2)
"RTN","PXRMXGPR",62,0)
 ..I RICNT=1 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Individual Reminder:",22)_RIDES_U_6,CNT=CNT+1
"RTN","PXRMXGPR",63,0)
 ..I RICNT>1 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",22)_RIDES,CNT=CNT+1
"RTN","PXRMXGPR",64,0)
 S PLSTCRIT(CNT)=U_6,CNT=CNT+1
"RTN","PXRMXGPR",65,0)
 I PXRMREP="D" D
"RTN","PXRMXGPR",66,0)
 .S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Reminder:",22)_RDES,CNT=CNT+1
"RTN","PXRMXGPR",67,0)
 .;Display future appointments for Reminder Due report only
"RTN","PXRMXGPR",68,0)
 .I PXRMRT="PXRMX" S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_"Appointments:" D
"RTN","PXRMXGPR",69,0)
 ..I PXRMFUT="Y" S PLSTCRIT(CNT)=PLSTCRIT(CNT)_$$LJ^XLFSTR(" ",32-$L(PLSTCRIT(CNT)))_"All Future Appointments",CNT=CNT+1
"RTN","PXRMXGPR",70,0)
 ..I PXRMFUT="N" S PLSTCRIT(CNT)=PLSTCRIT(CNT)_$$LJ^XLFSTR(" ",32-$L(PLSTCRIT(CNT)))_"Next Appointment only",CNT=CNT+1
"RTN","PXRMXGPR",71,0)
 I PXRMSEL="P" S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("All/Primary:",22)_CDES,CNT=CNT+1
"RTN","PXRMXGPR",72,0)
 I PXRMSEL="L" D  S CNT=CNT+1
"RTN","PXRMXGPR",73,0)
 .S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Date Range:",22)
"RTN","PXRMXGPR",74,0)
 .I "PAF"[PXRMFD S PLSTCRIT(CNT)=PLSTCRIT(CNT)_BD_" to "_ED Q
"RTN","PXRMXGPR",75,0)
 .I PXRMFD="C" S PLSTCRIT(CNT)=PLSTCRIT(CNT)_"not applicable" Q
"RTN","PXRMXGPR",76,0)
 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Effective Due Date:",22)_SD,CNT=CNT+1
"RTN","PXRMXGPR",77,0)
 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Date run:",22)_RD,CNT=CNT+1
"RTN","PXRMXGPR",78,0)
 I PXRMTMP'="" D 
"RTN","PXRMXGPR",79,0)
 .S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Template Name:",22)_$P(PXRMTMP,U,2),CNT=CNT+1
"RTN","PXRMXGPR",80,0)
 .I PXRMUSER S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Requested by:",22)_$$GET1^DIQ(200,DUZ,.01)_U_3,CNT=CNT+1
"RTN","PXRMXGPR",81,0)
 I (PXRMFCMB="Y")!(PXRMLCMB="Y")!(PXRMTCMB="Y") D
"RTN","PXRMXGPR",82,0)
 .N LIT,TEXT
"RTN","PXRMXGPR",83,0)
 .S LIT=$S(PXRMSEL="P":"Providers","OT"[PXRMSEL:"Teams",1:"Locations")
"RTN","PXRMXGPR",84,0)
 .S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Combined report:",22)
"RTN","PXRMXGPR",85,0)
 .I PXRMFCMB="Y",PXRMLCMB="Y" S TEXT="Combined Facility and Combined "_LIT
"RTN","PXRMXGPR",86,0)
 .I PXRMFCMB="Y",PXRMLCMB="N" S TEXT="Combined Facility by Individual "_LIT
"RTN","PXRMXGPR",87,0)
 .I PXRMLCMB="Y",PXRMFCMB="N" S TEXT="Combined "_LIT
"RTN","PXRMXGPR",88,0)
 .I PXRMTCMB="Y" S TEXT="Combined "_LIT
"RTN","PXRMXGPR",89,0)
 .S PLSTCRIT(CNT)=PLSTCRIT(CNT)_TEXT,CNT=CNT+1
"RTN","PXRMXGPR",90,0)
 .S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",91,0)
 I PXRMREP="S","IRT"[PXRMTOT,"IR"'[PXRMSEL D
"RTN","PXRMXGPR",92,0)
 .N LIT1,LIT2,LIT3,TEXT
"RTN","PXRMXGPR",93,0)
 .D LIT^PXRMXD
"RTN","PXRMXGPR",94,0)
 .S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Summary report:",22)
"RTN","PXRMXGPR",95,0)
 .I PXRMTOT="I" S TEXT=LIT1
"RTN","PXRMXGPR",96,0)
 .I PXRMTOT="R" S TEXT=LIT2
"RTN","PXRMXGPR",97,0)
 .I PXRMTOT="T" S TEXT=LIT3
"RTN","PXRMXGPR",98,0)
 .S PLSTCRIT(CNT)=PLSTCRIT(CNT)_TEXT,CNT=CNT+1
"RTN","PXRMXGPR",99,0)
 .S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",100,0)
 I $D(PXRMSCAT),PXRMSCAT]"",PXRMFD="P" D OSCAT(PXRMSCAT,PSTART,.CNT,.PLSTCRIT)
"RTN","PXRMXGPR",101,0)
 N CHECK,CNT,NODE,STR
"RTN","PXRMXGPR",102,0)
 S CNT=0 F  S CNT=$O(PLSTCRIT(CNT)) Q:CNT'>0  D
"RTN","PXRMXGPR",103,0)
 .S NODE=$G(PLSTCRIT(CNT)),CHECK=$P(NODE,U,2),STR=$P(NODE,U)
"RTN","PXRMXGPR",104,0)
 .I CHECK>0 D CHECK(CHECK) I STR="" Q
"RTN","PXRMXGPR",105,0)
 .W !,STR
"RTN","PXRMXGPR",106,0)
 W !,UNDL,!
"RTN","PXRMXGPR",107,0)
 Q
"RTN","PXRMXGPR",108,0)
 ;
"RTN","PXRMXGPR",109,0)
 ;Display selected teams/providers
"RTN","PXRMXGPR",110,0)
DISP(CNT,PLSTCRIT) ;
"RTN","PXRMXGPR",111,0)
 N IC
"RTN","PXRMXGPR",112,0)
 S IC=""
"RTN","PXRMXGPR",113,0)
 I PXRMSEL="P" F  S IC=$O(PXRMPRV(IC)) Q:IC=""  D
"RTN","PXRMXGPR",114,0)
 .I IC=1 S PLSTCRIT(CNT)=PLSTCRIT(CNT)_$P(PXRMPRV(IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",115,0)
 .I IC>1 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",32)_$P(PXRMPRV(IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",116,0)
 .S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",117,0)
 I PXRMSEL="T" F  S IC=$O(PXRMPCM(IC)) Q:IC=""  D
"RTN","PXRMXGPR",118,0)
 .I IC=1 S PLSTCRIT(CNT)=PLSTCRIT(CNT)_$P(PXRMPCM(IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",119,0)
 .I IC>1 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",32)_$P(PXRMPCM(IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",120,0)
 .S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",121,0)
 I PXRMSEL="O" F  S IC=$O(PXRMOTM(IC)) Q:IC=""  D
"RTN","PXRMXGPR",122,0)
 .I IC=1 S PLSTCRIT(CNT)=PLSTCRIT(CNT)_$P(PXRMOTM(IC),U,3),CNT=CNT+1
"RTN","PXRMXGPR",123,0)
 .I IC>1 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",32)_$P(PXRMOTM(IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",124,0)
 .S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",125,0)
 I PXRMSEL="I" F  S IC=$O(PXRMPAT(IC)) Q:IC=""  D
"RTN","PXRMXGPR",126,0)
 .I IC=1 S PLSTCRIT(CNT)=PLSTCRIT(CNT)_$P(PXRMPAT(IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",127,0)
 .I IC>1 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",32)_$P(PXRMPAT(IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",128,0)
 .S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",129,0)
 I PXRMSEL="R" F  S IC=$O(PXRMLIST(IC)) Q:IC=""  D
"RTN","PXRMXGPR",130,0)
 .I IC=1 S PLSTCRIT(CNT)=PLSTCRIT(CNT)_$P(PXRMLIST(IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",131,0)
 .I IC>1 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",32)_$P(PXRMLIST(IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",132,0)
 .S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",133,0)
 I PXRMSEL="L" D
"RTN","PXRMXGPR",134,0)
 .I $E(PXRMLCSC)="H" F  S IC=$O(^XTMP(PXRMXTMP,"HLOC",IC)) Q:IC=""  D
"RTN","PXRMXGPR",135,0)
 ..S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",32)_$P(^XTMP(PXRMXTMP,"HLOC",IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",136,0)
 ..S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",137,0)
 .I $E(PXRMLCSC)="C" F  S IC=$O(PXRMCS(IC)) Q:IC=""  D
"RTN","PXRMXGPR",138,0)
 ..S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",32)_$P(PXRMCS(IC),U,1)_" "_$P(PXRMCS(IC),U,3),CNT=CNT+1
"RTN","PXRMXGPR",139,0)
 ..S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",140,0)
 .I $E(PXRMLCSC)="G" F  S IC=$O(PXRMCGRP(IC)) Q:IC=""  D
"RTN","PXRMXGPR",141,0)
 ..S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",32)_$P(PXRMCGRP(IC),U,2),CNT=CNT+1
"RTN","PXRMXGPR",142,0)
 ..S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",143,0)
 Q
"RTN","PXRMXGPR",144,0)
 ;
"RTN","PXRMXGPR",145,0)
 ;Output the service categories
"RTN","PXRMXGPR",146,0)
OSCAT(SCL,PSTART,CNT,PLSTCRIT) ;
"RTN","PXRMXGPR",147,0)
 N IC,CSTART,EM,SC,SCTEXT
"RTN","PXRMXGPR",148,0)
 S CSTART=PSTART+3
"RTN","PXRMXGPR",149,0)
 S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",PSTART)_$$LJ^XLFSTR("Service categories:",22)_SCL,CNT=CNT+1
"RTN","PXRMXGPR",150,0)
 F IC=1:1:$L(SCL,",") D
"RTN","PXRMXGPR",151,0)
 .S SC=$P(SCL,",",IC)
"RTN","PXRMXGPR",152,0)
 .S SCTEXT=$$EXTERNAL^DILFD(9000010,.07,"",SC,.EM)
"RTN","PXRMXGPR",153,0)
 .S PLSTCRIT(CNT)=U_3,CNT=CNT+1
"RTN","PXRMXGPR",154,0)
 .S PLSTCRIT(CNT)=$$RJ^XLFSTR(" ",CSTART)_SC_" - "_SCTEXT,CNT=CNT+1
"RTN","PXRMXGPR",155,0)
 Q
"RTN","PXRMXGPR",156,0)
 ;
"RTN","PXRMXGPR",157,0)
 ;If necessary, write the header
"RTN","PXRMXGPR",158,0)
COL(NEWPAGE) ;
"RTN","PXRMXGPR",159,0)
 I NEWPAGE D  Q:DONE
"RTN","PXRMXGPR",160,0)
 .I PXRMTABS="N" D PAGE
"RTN","PXRMXGPR",161,0)
 .I PXRMTABS="Y" W !!
"RTN","PXRMXGPR",162,0)
 D CHECK(0) Q:DONE
"RTN","PXRMXGPR",163,0)
 D HEAD(0)
"RTN","PXRMXGPR",164,0)
 S HEAD=0
"RTN","PXRMXGPR",165,0)
 I PXRMTABS="Y" Q
"RTN","PXRMXGPR",166,0)
 I PXRMREP="D" D
"RTN","PXRMXGPR",167,0)
 .N PNAM
"RTN","PXRMXGPR",168,0)
 .S PNAM=$P(PXRMREM(1),U,4) I PNAM="" S PNAM=$P(PXRMREM(1),U,2)
"RTN","PXRMXGPR",169,0)
 .W !!,PNAM,":  ",COUNT
"RTN","PXRMXGPR",170,0)
 .W:COUNT>1 " patients have the reminder "_PXRMTX
"RTN","PXRMXGPR",171,0)
 .W:COUNT=1 " patient has the reminder "_PXRMTX
"RTN","PXRMXGPR",172,0)
 N IC F IC=0:1:2 W !,?PXRMT(IC),PXRMH(IC)
"RTN","PXRMXGPR",173,0)
 Q
"RTN","PXRMXGPR",174,0)
 ;
"RTN","PXRMXGPR",175,0)
 ;form feed to new page
"RTN","PXRMXGPR",176,0)
PAGE I ($E(IOST)="C")&(IO=IO(0))&(PAGE>0) D
"RTN","PXRMXGPR",177,0)
 .S DIR(0)="E"
"RTN","PXRMXGPR",178,0)
 .W !
"RTN","PXRMXGPR",179,0)
 .D ^DIR K DIR
"RTN","PXRMXGPR",180,0)
 I $D(DUOUT)!($D(DTOUT))!($D(DIROUT)) S DONE=1 Q
"RTN","PXRMXGPR",181,0)
 W:$D(IOF)&(PAGE>0) @IOF
"RTN","PXRMXGPR",182,0)
 S PAGE=PAGE+1,FIRST=0
"RTN","PXRMXGPR",183,0)
 I $E(IOST)="C",IO=IO(0) W @IOF
"RTN","PXRMXGPR",184,0)
 E  W !
"RTN","PXRMXGPR",185,0)
 N TEMP,TEXTLEN
"RTN","PXRMXGPR",186,0)
 S TEMP=$$NOW^XLFDT,TEMP=$$FMTE^XLFDT(TEMP,"P")
"RTN","PXRMXGPR",187,0)
 S TEMP=TEMP_"  Page "_PAGE
"RTN","PXRMXGPR",188,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMXGPR",189,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMXGPR",190,0)
 S TEXTLEN=$L(PXRMOPT)
"RTN","PXRMXGPR",191,0)
 I TEXTLEN>0 D
"RTN","PXRMXGPR",192,0)
 .W !!
"RTN","PXRMXGPR",193,0)
 .W ?((IOM-TEXTLEN)/2),PXRMOPT
"RTN","PXRMXGPR",194,0)
 Q
"RTN","PXRMXGPR",195,0)
 ;
"RTN","PXRMXGPR",196,0)
 ;count of patients in sample
"RTN","PXRMXGPR",197,0)
TOTAL N LIT
"RTN","PXRMXGPR",198,0)
 I PXRMTABS="Y" D  Q
"RTN","PXRMXGPR",199,0)
 .I PXRMREP="D" W !,"0"_SEP_"PATIENTS"_SEP_TOTAL_SEP_"APPLICABLE"_SEP_APPL Q
"RTN","PXRMXGPR",200,0)
 .I PXRMREP="S" W !,"0"_SEP_"PATIENTS"_SEP_TOTAL_SEP_SEP_$TR(SUB,SEP,"_") Q
"RTN","PXRMXGPR",201,0)
 I (PXRMRT="PXRMX")!(PXRMREP="S") W !
"RTN","PXRMXGPR",202,0)
 ;S LIT=" patient."
"RTN","PXRMXGPR",203,0)
 ;I TOTAL>1 S LIT=" patients."
"RTN","PXRMXGPR",204,0)
 S LIT=$S(TOTAL=0:" patients.",TOTAL=1:" patient.",1:" patients.")
"RTN","PXRMXGPR",205,0)
 W !,"Report run on "_TOTAL_LIT
"RTN","PXRMXGPR",206,0)
 I PXRMREP="D" D
"RTN","PXRMXGPR",207,0)
 .S LIT=$S(APPL=0:" patients.",APPL=1:" patient.",1:" patients.")
"RTN","PXRMXGPR",208,0)
 .W !,"Applicable to "_APPL_LIT
"RTN","PXRMXGPR",209,0)
 Q
"RTN","PXRMXGPR",210,0)
 ;
"RTN","PXRMXGPR",211,0)
 ;Null report prints if no patients found
"RTN","PXRMXGPR",212,0)
NULL I PXRMSEL="L" D
"RTN","PXRMXGPR",213,0)
 .I PXRMFD="P" W !!,"No patient visits found"
"RTN","PXRMXGPR",214,0)
 .I PXRMFD="A" W !!,"No patient admissions found"
"RTN","PXRMXGPR",215,0)
 .I PXRMFD="C" W !!,"No current inpatient found"
"RTN","PXRMXGPR",216,0)
 .I PXRMFD="F" W !!,"No patient appointments found"
"RTN","PXRMXGPR",217,0)
 I PXRMSEL="P" W !!,"No patients found for provider(s) selected"
"RTN","PXRMXGPR",218,0)
 I "OT"[PXRMSEL W !!,"No patients found for team(s) selected"
"RTN","PXRMXGPR",219,0)
 Q
"RTN","PXRMXGPR",220,0)
 ;
"RTN","PXRMXGPR",221,0)
 ;Null report if no patients due/satisfied - detailed report only
"RTN","PXRMXGPR",222,0)
NONE D PAGE
"RTN","PXRMXGPR",223,0)
 D HEAD(0)
"RTN","PXRMXGPR",224,0)
 W !!,"No patients with reminders "_PXRMTX
"RTN","PXRMXGPR",225,0)
 Q
"RTN","PXRMXGPR",226,0)
 ;
"RTN","PXRMXGPR",227,0)
SPACER(TEXT,LENGTH) ;
"RTN","PXRMXGPR",228,0)
 Q
"RTN","PXRMXGPR",229,0)
 ;
"RTN","PXRMXGPR",230,0)
 ;Check for page throw
"RTN","PXRMXGPR",231,0)
CHECK(CNT) ;
"RTN","PXRMXGPR",232,0)
 I PXRMTABS="N",$Y>(IOSL-BMARG-CNT) D PAGE
"RTN","PXRMXGPR",233,0)
 Q
"RTN","PXRMXGUT")
0^129^B4442825
"RTN","PXRMXGUT",1,0)
PXRMXGUT ; SLC/PJH - General utilities for reminder reports; 05/31/2006
"RTN","PXRMXGUT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXGUT",3,0)
 ;
"RTN","PXRMXGUT",4,0)
 ;=======================================
"RTN","PXRMXGUT",5,0)
EOR ;End of report display.
"RTN","PXRMXGUT",6,0)
 I $E(IOST)="C",IO=IO(0) D
"RTN","PXRMXGUT",7,0)
 . S DIR(0)="EA"
"RTN","PXRMXGUT",8,0)
 . S DIR("A")="End of the report. Press ENTER/RETURN to continue..."
"RTN","PXRMXGUT",9,0)
 . W !
"RTN","PXRMXGUT",10,0)
 . D ^DIR K DIR
"RTN","PXRMXGUT",11,0)
 Q
"RTN","PXRMXGUT",12,0)
 ;
"RTN","PXRMXGUT",13,0)
 ;=======================================
"RTN","PXRMXGUT",14,0)
EXIT ;Clean things up.
"RTN","PXRMXGUT",15,0)
 D ^%ZISC
"RTN","PXRMXGUT",16,0)
 D HOME^%ZIS
"RTN","PXRMXGUT",17,0)
 K IO("Q")
"RTN","PXRMXGUT",18,0)
 K DIRUT,DTOUT,DUOUT,POP
"RTN","PXRMXGUT",19,0)
 K ^TMP(PXRMXTMP)
"RTN","PXRMXGUT",20,0)
 K ^XTMP(PXRMXTMP)
"RTN","PXRMXGUT",21,0)
 K ^TMP("PXRMX",$J)
"RTN","PXRMXGUT",22,0)
 K ^TMP($J,"PXRM PATIENT LIST")
"RTN","PXRMXGUT",23,0)
 K ^TMP($J,"PXRM PATIENT EVAL")
"RTN","PXRMXGUT",24,0)
 K ^TMP($J,"PXRM FUTURE APPT")
"RTN","PXRMXGUT",25,0)
 K ^TMP($J,"PXRM FACILITY FUTURE APPT")
"RTN","PXRMXGUT",26,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXRMXGUT",27,0)
 K ^TMP($J,"SORT")
"RTN","PXRMXGUT",28,0)
 Q
"RTN","PXRMXGUT",29,0)
 ;
"RTN","PXRMXGUT",30,0)
 ;=======================================
"RTN","PXRMXGUT",31,0)
VLIST(SLIST,LIST,MESSAGE) ;Make sure all the elements of LIST are in
"RTN","PXRMXGUT",32,0)
 ;SLIST.  If they are, then LIST is valid.  The elements of LIST can be
"RTN","PXRMXGUT",33,0)
 ;separated by commas and spaces.
"RTN","PXRMXGUT",34,0)
 N IC,LE,LEN,VALID
"RTN","PXRMXGUT",35,0)
 S LIST=$TR(LIST,",","")
"RTN","PXRMXGUT",36,0)
 S LIST=$TR(LIST," ","")
"RTN","PXRMXGUT",37,0)
 ;Make the test case insensitive.
"RTN","PXRMXGUT",38,0)
 S SLIST=$$UP^XLFSTR(SLIST)
"RTN","PXRMXGUT",39,0)
 S LIST=$$UP^XLFSTR(LIST)
"RTN","PXRMXGUT",40,0)
 S VALID=1
"RTN","PXRMXGUT",41,0)
 S LEN=$L(LIST)
"RTN","PXRMXGUT",42,0)
 I LEN=0 D
"RTN","PXRMXGUT",43,0)
 . W !,"The list is empty!"
"RTN","PXRMXGUT",44,0)
 . S VALID=0
"RTN","PXRMXGUT",45,0)
 F IC=1:1:LEN D
"RTN","PXRMXGUT",46,0)
 . S LE=$E(LIST,IC,IC)
"RTN","PXRMXGUT",47,0)
 . I SLIST'[LE D
"RTN","PXRMXGUT",48,0)
 .. W !,LE,MESSAGE
"RTN","PXRMXGUT",49,0)
 .. S VALID=0
"RTN","PXRMXGUT",50,0)
 Q VALID
"RTN","PXRMXGUT",51,0)
 ;
"RTN","PXRMXGUT",52,0)
 ;=======================================
"RTN","PXRMXGUT",53,0)
USTRINS(STRING,CHAR) ;Given a string, which is assumed to be in alphabetical
"RTN","PXRMXGUT",54,0)
 ;order and a character which is not already in the string insert the
"RTN","PXRMXGUT",55,0)
 ;character into the string in alphabetical order. For example:
"RTN","PXRMXGUT",56,0)
 ;STRING CHAR RETURNS
"RTN","PXRMXGUT",57,0)
 ;CEQ     A    ACEQ
"RTN","PXRMXGUT",58,0)
 ;CEQ     E    CEQ
"RTN","PXRMXGUT",59,0)
 ;CEQ     F    CEFQ
"RTN","PXRMXGUT",60,0)
 ;CEQ     T    CEQT
"RTN","PXRMXGUT",61,0)
 ;
"RTN","PXRMXGUT",62,0)
 N CH1,CH2,DONE,IC,LEN,STR
"RTN","PXRMXGUT",63,0)
 S LEN=$L(STRING)
"RTN","PXRMXGUT",64,0)
 ;Special case of empty STRING.
"RTN","PXRMXGUT",65,0)
 I LEN=0 Q CHAR
"RTN","PXRMXGUT",66,0)
 ;
"RTN","PXRMXGUT",67,0)
 S DONE=0
"RTN","PXRMXGUT",68,0)
 S STR=""
"RTN","PXRMXGUT",69,0)
 S CH1=$E(STRING,1,1)
"RTN","PXRMXGUT",70,0)
 I (CH1]CHAR) S STR=STR_CHAR_CH1,DONE=1
"RTN","PXRMXGUT",71,0)
 E  S STR=STR_CH1
"RTN","PXRMXGUT",72,0)
 I CH1=CHAR S DONE=1
"RTN","PXRMXGUT",73,0)
 ;
"RTN","PXRMXGUT",74,0)
 ;Special case of STRING of length 1.
"RTN","PXRMXGUT",75,0)
 I (LEN=1)&('DONE) S STR=STR_CHAR,DONE=1
"RTN","PXRMXGUT",76,0)
 ;
"RTN","PXRMXGUT",77,0)
 F IC=2:1:LEN D
"RTN","PXRMXGUT",78,0)
 . S CH2=$E(STRING,IC,IC)
"RTN","PXRMXGUT",79,0)
 . I DONE S STR=STR_CH2
"RTN","PXRMXGUT",80,0)
 . E  D
"RTN","PXRMXGUT",81,0)
 .. I (CHAR]CH1)&(CH2]CHAR) S STR=STR_CHAR_CH2,DONE=1
"RTN","PXRMXGUT",82,0)
 .. E  S STR=STR_CH2
"RTN","PXRMXGUT",83,0)
 .. I CH2=CHAR S DONE=1
"RTN","PXRMXGUT",84,0)
 .. S CH1=CH2
"RTN","PXRMXGUT",85,0)
 ;
"RTN","PXRMXGUT",86,0)
 ;If we made it all the way through the loop and we are still not
"RTN","PXRMXGUT",87,0)
 ;done then append CHAR.
"RTN","PXRMXGUT",88,0)
 I ('DONE) S STR=STR_CHAR
"RTN","PXRMXGUT",89,0)
 Q STR
"RTN","PXRMXGUT",90,0)
 ;
"RTN","PXRMXPR")
0^22^B83078518
"RTN","PXRMXPR",1,0)
PXRMXPR ; SLC/PJH - Print Reminder Due report. ;01/14/2006
"RTN","PXRMXPR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXPR",3,0)
 ;
"RTN","PXRMXPR",4,0)
 ; Called/Jobbed after PXRMXSE1
"RTN","PXRMXPR",5,0)
 ;
"RTN","PXRMXPR",6,0)
START N BMARG,CRITERIA,C1S,C2S,C3S,C1HS,C2HS,C3HS,DONE,FIRST,HEAD
"RTN","PXRMXPR",7,0)
 N INDENT,PAGE,MOD,DES,ADES,CDES,RDES,SDES,MISSED,SEP
"RTN","PXRMXPR",8,0)
 N PLSTCRIT,PXRMOPT,PXRMFLD,PXRMHDR,PXRMHDRS,PXRMT,PXRMH
"RTN","PXRMXPR",9,0)
 N BD,ED,EMPCHK,SD,RD
"RTN","PXRMXPR",10,0)
 N PXRMTX
"RTN","PXRMXPR",11,0)
 S PXRMTX="due"
"RTN","PXRMXPR",12,0)
 ;
"RTN","PXRMXPR",13,0)
 I PXRMREP="D" D
"RTN","PXRMXPR",14,0)
 .S EMPCHK=$P($G(^PXRM(800,1,"TRUNCATE EMPLOYEE SSN")),U)
"RTN","PXRMXPR",15,0)
 .I EMPCHK="" S EMPCHK="Y"
"RTN","PXRMXPR",16,0)
 ;
"RTN","PXRMXPR",17,0)
 ; Format Date Range
"RTN","PXRMXPR",18,0)
 I PXRMSEL="L" D
"RTN","PXRMXPR",19,0)
 .S BD=$$FMTE^XLFDT(PXRMBDT,"5D")
"RTN","PXRMXPR",20,0)
 .S ED=$$FMTE^XLFDT(PXRMEDT,"5D")
"RTN","PXRMXPR",21,0)
 ; Format due effective date
"RTN","PXRMXPR",22,0)
 S SD=$$FMTE^XLFDT(PXRMSDT,"5P")
"RTN","PXRMXPR",23,0)
 ; Format run date
"RTN","PXRMXPR",24,0)
 S RD=$$FMTE^XLFDT(PXRMXST,"5P")
"RTN","PXRMXPR",25,0)
 ;
"RTN","PXRMXPR",26,0)
 U IO
"RTN","PXRMXPR",27,0)
 S DONE=0
"RTN","PXRMXPR",28,0)
 ;
"RTN","PXRMXPR",29,0)
 ;Delimited report.
"RTN","PXRMXPR",30,0)
 S SEP=$S(PXRMTABS="Y":PXRMTABC,1:"")
"RTN","PXRMXPR",31,0)
 ;
"RTN","PXRMXPR",32,0)
 ;Setup initial formatting parameters.
"RTN","PXRMXPR",33,0)
 S INDENT=3
"RTN","PXRMXPR",34,0)
 S BMARG=2,PAGE=0,HEAD=1
"RTN","PXRMXPR",35,0)
 ;
"RTN","PXRMXPR",36,0)
 I +$G(XQY)>0 N XQOPT D OP^XQCHK
"RTN","PXRMXPR",37,0)
 S PXRMOPT=$P($G(XQOPT),U,2)
"RTN","PXRMXPR",38,0)
 I ($L(PXRMOPT)>0)&(PXRMOPT'["Clinical") S PXRMOPT="Clinical "_PXRMOPT
"RTN","PXRMXPR",39,0)
 I PXRMREP="D" D
"RTN","PXRMXPR",40,0)
 .S RDES=$P(REMINDER(1),U,2)
"RTN","PXRMXPR",41,0)
 .S PXRMOPT=PXRMOPT_" - Detailed Report"
"RTN","PXRMXPR",42,0)
 .N IC F IC=0,3,4 S PXRMH(IC)="",PXRMT(IC)=0
"RTN","PXRMXPR",43,0)
 .S PXRMH(1)="Date Due    Last Done   Next Appt"
"RTN","PXRMXPR",44,0)
 .S PXRMH(2)="--------    ---------   ---------"
"RTN","PXRMXPR",45,0)
 .I $G(PXRMINP) D
"RTN","PXRMXPR",46,0)
 ..S PXRMH(1)="Date Due    Last Done   Ward/Bed"
"RTN","PXRMXPR",47,0)
 ..S PXRMH(2)="--------    ---------   --------"
"RTN","PXRMXPR",48,0)
 .F IC=1,2 S PXRMT(IC)=40
"RTN","PXRMXPR",49,0)
 .S ADES="Next Appointment only"
"RTN","PXRMXPR",50,0)
 .I PXRMFUT="Y" S ADES="All Future Appointments"
"RTN","PXRMXPR",51,0)
 .S SDES="Sorted by Patient Name"
"RTN","PXRMXPR",52,0)
 .I PXRMSRT="Y" S SDES="Sorted by Appointment Date"
"RTN","PXRMXPR",53,0)
 I PXRMREP="S" D
"RTN","PXRMXPR",54,0)
 .S PXRMOPT=PXRMOPT_" - Summary Report"
"RTN","PXRMXPR",55,0)
 .S PXRMH(0)="# Patients with Reminders",PXRMT(0)=50
"RTN","PXRMXPR",56,0)
 .S PXRMH(1)="Applicable           Due"
"RTN","PXRMXPR",57,0)
 .S PXRMH(2)="----------           ---"
"RTN","PXRMXPR",58,0)
 .N IC F IC=1,2 S PXRMT(IC)=50
"RTN","PXRMXPR",59,0)
 .S PXRMH(3)="Denominator"
"RTN","PXRMXPR",60,0)
 .S PXRMH(4)="-----------"
"RTN","PXRMXPR",61,0)
 .F IC=3,4 S PXRMT(IC)=0
"RTN","PXRMXPR",62,0)
 ;
"RTN","PXRMXPR",63,0)
 ;Print Criteria Page if normal report
"RTN","PXRMXPR",64,0)
 S CRITERIA=0 I PXRMTABS="N" S CRITERIA=1
"RTN","PXRMXPR",65,0)
 ;or delimited report with notemplate
"RTN","PXRMXPR",66,0)
 I PXRMTABS="Y",PXRMTMP="" S CRITERIA=1
"RTN","PXRMXPR",67,0)
 ;
"RTN","PXRMXPR",68,0)
 ;Build array of locations/providers with no patients selected in
"RTN","PXRMXPR",69,0)
 ;MISSED.
"RTN","PXRMXPR",70,0)
 D NOPATS^PXRMXPR1(.MISSED)
"RTN","PXRMXPR",71,0)
 ;
"RTN","PXRMXPR",72,0)
 ;Print either criteria page or summary header
"RTN","PXRMXPR",73,0)
 I CRITERIA D  G:DONE EXIT
"RTN","PXRMXPR",74,0)
 .D PAGE^PXRMXGPR Q:DONE
"RTN","PXRMXPR",75,0)
 .D CRIT^PXRMXGPR(10,.PLSTCRIT) Q:DONE
"RTN","PXRMXPR",76,0)
 ;Header if delimited output from a template
"RTN","PXRMXPR",77,0)
 I 'CRITERIA D
"RTN","PXRMXPR",78,0)
 .N HDR1,HDR2,HDR3
"RTN","PXRMXPR",79,0)
 .S HDR1="",HDR2="",HDR3=""
"RTN","PXRMXPR",80,0)
 .I PXRMTMP]"" S HDR1="TITLE:"_$P(PXRMTMP,U,2)_U_"TEMPLATE:"_$P(PXRMTMP,U,3)
"RTN","PXRMXPR",81,0)
 .I PXRMTMP="" D
"RTN","PXRMXPR",82,0)
 ..N PXRMFLD,DES,CDES D LITS^PXRMXPR1 S HDR1=PXRMFLD_U_$G(DES)_U_$G(CDES)
"RTN","PXRMXPR",83,0)
 .I PXRMSEL="L" S HDR2="START:"_BD_U_"END:"_ED
"RTN","PXRMXPR",84,0)
 .S HDR2=HDR2_U_"RUN:"_RD_"Effective Date:"_SD
"RTN","PXRMXPR",85,0)
 .I PXRMFCMB="Y" S HDR3="COMBINED FACILITY"
"RTN","PXRMXPR",86,0)
 .I PXRMLCMB="Y" S $P(HDR3,SEP,2)="COMBINED LOCATION"
"RTN","PXRMXPR",87,0)
 .I PXRMTCMB="Y" S $P(HDR3,SEP,2)="COMBINED OE/RR TEAMS"
"RTN","PXRMXPR",88,0)
 .I PXRMREP="S" D
"RTN","PXRMXPR",89,0)
 ..N LIT1,LIT2,LIT3
"RTN","PXRMXPR",90,0)
 ..D LIT^PXRMXD
"RTN","PXRMXPR",91,0)
 ..I PXRMTOT="I" S $P(HDR3,SEP,3)=$$UP^XLFSTR(LIT1)
"RTN","PXRMXPR",92,0)
 ..I PXRMTOT="R" S $P(HDR3,SEP,3)=$$UP^XLFSTR(LIT2)
"RTN","PXRMXPR",93,0)
 ..I PXRMTOT="T" S $P(HDR3,SEP,3)=$$UP^XLFSTR(LIT3)
"RTN","PXRMXPR",94,0)
 .S PLSTCRIT(1)=HDR1,PLSTCRIT(2)=HDR2,PLSTCRIT(3)=HDR3
"RTN","PXRMXPR",95,0)
 .W !,HDR1,!,HDR2,!,HDR3,!
"RTN","PXRMXPR",96,0)
 ;
"RTN","PXRMXPR",97,0)
 ;Kill items marked as found
"RTN","PXRMXPR",98,0)
 K ^XTMP(PXRMXTMP,"MARKED AS FOUND")
"RTN","PXRMXPR",99,0)
 ;
"RTN","PXRMXPR",100,0)
 ;Setup the final formatting parameters.
"RTN","PXRMXPR",101,0)
 S C1HS=INDENT+3
"RTN","PXRMXPR",102,0)
 S C1S=0
"RTN","PXRMXPR",103,0)
 S C2HS=C1S+2
"RTN","PXRMXPR",104,0)
 S C2S=C2HS
"RTN","PXRMXPR",105,0)
 S C3HS=C2HS+5
"RTN","PXRMXPR",106,0)
 S C3S=C3HS
"RTN","PXRMXPR",107,0)
 S HEAD=1
"RTN","PXRMXPR",108,0)
 S INDENT=10
"RTN","PXRMXPR",109,0)
 ;
"RTN","PXRMXPR",110,0)
 ; Update last run date 
"RTN","PXRMXPR",111,0)
 I $G(PXRMTMP)'="" D UPD^PXRMXTU
"RTN","PXRMXPR",112,0)
 ;
"RTN","PXRMXPR",113,0)
 ; Get report detail from ^XTMP
"RTN","PXRMXPR",114,0)
 N PNAM,SUB,DFN,BID,NAM,FAC,MOD,SRT,TOTAL,APPL,FACPNAME,PX,TTOTAL
"RTN","PXRMXPR",115,0)
 S TTOTAL=0
"RTN","PXRMXPR",116,0)
 ; Set subroutine label from report format
"RTN","PXRMXPR",117,0)
 S MOD="SUMARY" I PXRMREP="D" S MOD="DETAIL"
"RTN","PXRMXPR",118,0)
 ;
"RTN","PXRMXPR",119,0)
 S FAC=0,PX="PXRM"
"RTN","PXRMXPR",120,0)
 F  S FAC=$O(^XTMP(PXRMXTMP,PX,FAC)) Q:FAC=""  Q:DONE  D
"RTN","PXRMXPR",121,0)
 .;Get facility name for Location and PCMM team report
"RTN","PXRMXPR",122,0)
 .I "TL"[PXRMSEL,PXRMFCMB="N" D
"RTN","PXRMXPR",123,0)
 ..S FACPNAME=$P(PXRMFACN(FAC),U,1)_"  "_$P(PXRMFACN(FAC),U,2)
"RTN","PXRMXPR",124,0)
 .;Report from ^XTMP - label MOD is DETAIL/SUMARY
"RTN","PXRMXPR",125,0)
 .S (PNAM,SUB,NAM,SRT)=""
"RTN","PXRMXPR",126,0)
 .I PXRMSEL="I" S SUB="INDIVIDUAL PATIENTS" D @MOD Q:DONE
"RTN","PXRMXPR",127,0)
 .I PXRMSEL'="I" D
"RTN","PXRMXPR",128,0)
 ..;Sort internal IENs into alpha order
"RTN","PXRMXPR",129,0)
 ..D XSORT
"RTN","PXRMXPR",130,0)
 ..F  S SRT=$O(^TMP($J,"SORT",SRT)) Q:SRT=""  Q:DONE  D
"RTN","PXRMXPR",131,0)
 ...S SUB=$G(^TMP($J,"SORT",SRT)) D @MOD
"RTN","PXRMXPR",132,0)
 ..I MOD="SUMARY","RT"[PXRMTOT S SUB="TOTAL" D @MOD
"RTN","PXRMXPR",133,0)
 ;
"RTN","PXRMXPR",134,0)
 ; Null report if no patients selected
"RTN","PXRMXPR",135,0)
 I ('DONE),$O(^XTMP(PXRMXTMP,PX,""))="" D NULL^PXRMXGPR G EXIT
"RTN","PXRMXPR",136,0)
 ; Report selected patient sample with no patients
"RTN","PXRMXPR",137,0)
 I $D(MISSED) D MISSED^PXRMXPR1(0,.MISSED)
"RTN","PXRMXPR",138,0)
 ;
"RTN","PXRMXPR",139,0)
 ;Print Patient List
"RTN","PXRMXPR",140,0)
 I $G(PATLST)="Y" D FOOTER^PXRMXPR1(.PLSTCRIT)
"RTN","PXRMXPR",141,0)
 ;
"RTN","PXRMXPR",142,0)
 ;Print Error message
"RTN","PXRMXPR",143,0)
 I $D(^XTMP(PXRMXTMP,"ERROR"))>0!($D(^XTMP(PXRMXTMP,"CNBD"))>0) D ERROR^PXRMXBSY
"RTN","PXRMXPR",144,0)
EXIT ;
"RTN","PXRMXPR",145,0)
 D EXIT^PXRMXGUT
"RTN","PXRMXPR",146,0)
 ;
"RTN","PXRMXPR",147,0)
 ;Allow the task to be cleaned up upon successful completion.
"RTN","PXRMXPR",148,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","PXRMXPR",149,0)
 ;
"RTN","PXRMXPR",150,0)
 D EOR^PXRMXGUT
"RTN","PXRMXPR",151,0)
 Q
"RTN","PXRMXPR",152,0)
 ;
"RTN","PXRMXPR",153,0)
 ;Report by Patient
"RTN","PXRMXPR",154,0)
DETAIL N JJ,VA,DATE,COUNT,DDAT,EMP
"RTN","PXRMXPR",155,0)
 N BED,DDUE,DDONE,DNEXT,FDAT1,FDAT2,FDAT3,FNAM,FTXT
"RTN","PXRMXPR",156,0)
 S NAM=$G(^XTMP(PXRMXTMP,PX,FAC,SUB)),HEAD=1
"RTN","PXRMXPR",157,0)
 S COUNT=$P(NAM,U,2),TOTAL=$P(NAM,U,3),APPL=$P(NAM,U,4),NAM=$P(NAM,U,1)
"RTN","PXRMXPR",158,0)
 S DDAT="",JJ=0
"RTN","PXRMXPR",159,0)
 ; Get list of patients for each appointment date
"RTN","PXRMXPR",160,0)
 F  S DDAT=$O(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT)) Q:DDAT=""  Q:DONE  D PAT
"RTN","PXRMXPR",161,0)
 ; No patients due
"RTN","PXRMXPR",162,0)
 I JJ=0 D:'DONE NONE^PXRMXGPR
"RTN","PXRMXPR",163,0)
 ; Total patients
"RTN","PXRMXPR",164,0)
 D:'DONE TOTAL^PXRMXGPR
"RTN","PXRMXPR",165,0)
 S TTOTAL=TTOTAL+TOTAL
"RTN","PXRMXPR",166,0)
 Q
"RTN","PXRMXPR",167,0)
 ;
"RTN","PXRMXPR",168,0)
PAT ;Extract and print patient detail
"RTN","PXRMXPR",169,0)
 N DNEXT1,NODE,PNUM
"RTN","PXRMXPR",170,0)
 F  S PNAM=$O(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM)) Q:PNAM=""  Q:DONE  D
"RTN","PXRMXPR",171,0)
 .S JJ=JJ+1
"RTN","PXRMXPR",172,0)
 .;Format print line
"RTN","PXRMXPR",173,0)
 .S (BID,DNEXT1,FDAT1,FDAT2,FDAT3,DNEXT1)="" I PNAM'["No patients found" D 
"RTN","PXRMXPR",174,0)
 ..S FDAT2="N/A",FDAT3="None"
"RTN","PXRMXPR",175,0)
 ..S NODE=$G(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM))
"RTN","PXRMXPR",176,0)
 ..S DDUE=$P(NODE,U,2),DDONE=$P(NODE,U,3),DNEXT=$P(NODE,U,4)
"RTN","PXRMXPR",177,0)
 ..S BED=$P(NODE,U,5)
"RTN","PXRMXPR",178,0)
 ..S DFN=$P(NODE,U) S BID=$P($G(PNAM),U,2)
"RTN","PXRMXPR",179,0)
 ..I PXRMSSN="N" S BID=$E(BID,6,9)
"RTN","PXRMXPR",180,0)
 ..I PXRMSSN="Y",EMPCHK="Y" D EMP S:EMP BID=$E(BID,6,9)
"RTN","PXRMXPR",181,0)
 ..S BID="("_BID_")"
"RTN","PXRMXPR",182,0)
 ..S FDAT1=$$FMTE^XLFDT(DDUE,"5D")
"RTN","PXRMXPR",183,0)
 ..I DDONE S FDAT2=$$FMTE^XLFDT(DDONE,"5D")
"RTN","PXRMXPR",184,0)
 ..I BED'="NONE" S FDAT3=$P(NODE,U,5),DNEXT1=$$FMTE^XLFDT(DNEXT,"5D")
"RTN","PXRMXPR",185,0)
 ..I DNEXT,FDAT3="None" S FDAT3=$$FMTE^XLFDT(DNEXT,"5D")
"RTN","PXRMXPR",186,0)
 .;Print
"RTN","PXRMXPR",187,0)
 .D CHECK Q:DONE
"RTN","PXRMXPR",188,0)
 .;Normal output
"RTN","PXRMXPR",189,0)
 .I PXRMTABS="N" D
"RTN","PXRMXPR",190,0)
 ..S PNUM=JJ#10000
"RTN","PXRMXPR",191,0)
 ..S PNUM=$$RJ^XLFSTR(PNUM,4)
"RTN","PXRMXPR",192,0)
 ..W !,PNUM,?5,$E($P($G(PNAM),U),1,33-$L(BID))," ",BID,?40,FDAT1,?52,FDAT2
"RTN","PXRMXPR",193,0)
 ..I ('$G(PXRMINP)),PXRMFUT'="Y" W ?64,$S(BED'="NONE":BED_" (Inp.)",1:FDAT3)
"RTN","PXRMXPR",194,0)
 ..I $G(PXRMINP) W ?64,BED
"RTN","PXRMXPR",195,0)
 ..I DNEXT1'="",PXRMFUT'="Y" W !,?64,DNEXT1
"RTN","PXRMXPR",196,0)
 .;Delimited report
"RTN","PXRMXPR",197,0)
 .I PXRMTABS="Y" D
"RTN","PXRMXPR",198,0)
 ..N FNAM
"RTN","PXRMXPR",199,0)
 ..S FNAM=$P($G(PNAM),U)
"RTN","PXRMXPR",200,0)
 ..I FNAM'["No patients found" S FNAM=$E(FNAM,1,33-$L(BID))_" "_BID
"RTN","PXRMXPR",201,0)
 ..I "CES"[PXRMTABC S FNAM=$TR(FNAM,SEP,"_"),FDAT1=$TR(FDAT1,SEP,"_")
"RTN","PXRMXPR",202,0)
 ..I BED="NONE" S BED=" "
"RTN","PXRMXPR",203,0)
 ..W !,JJ_SEP_FNAM_SEP_FDAT1_SEP_FDAT2 I $G(PXRMINP) W SEP_BED
"RTN","PXRMXPR",204,0)
 ..I ('$G(PXRMINP)),PXRMFUT'="Y" W SEP_FDAT3_SEP_BED
"RTN","PXRMXPR",205,0)
 .;---
"RTN","PXRMXPR",206,0)
 .; Future Appointments
"RTN","PXRMXPR",207,0)
 .I PXRMFUT="Y" D
"RTN","PXRMXPR",208,0)
 ..N CNT,ADAT,ALOC,ATYP,FIRST,NONE
"RTN","PXRMXPR",209,0)
 ..S CNT=0,NONE=1,FIRST=1
"RTN","PXRMXPR",210,0)
 ..I '$D(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM)) Q
"RTN","PXRMXPR",211,0)
 ..F  S CNT=$O(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM,CNT)) Q:CNT'>0  D
"RTN","PXRMXPR",212,0)
 ...S ADAT=$P(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM,CNT,0),U)
"RTN","PXRMXPR",213,0)
 ...I PXRMDLOC="Y" D
"RTN","PXRMXPR",214,0)
 ....S ALOC=$P(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM,CNT,0),U,2)
"RTN","PXRMXPR",215,0)
 ....S ATYP=$P(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM,CNT,0),U,3)
"RTN","PXRMXPR",216,0)
 ...S ADAT=$$FMTE^XLFDT(ADAT,"2P")
"RTN","PXRMXPR",217,0)
 ...I FIRST D  S FIRST=0,NONE=0
"RTN","PXRMXPR",218,0)
 ....I PXRMTABS="N" W ?64,$S(BED'="NONE":BED_" (Inp.)",1:"")
"RTN","PXRMXPR",219,0)
 ...D CHECK
"RTN","PXRMXPR",220,0)
 ...I PXRMDLOC="Y" D
"RTN","PXRMXPR",221,0)
 ....I PXRMTABS="N" W !,?8,ADAT,?30,$E(ALOC,1,25),?60,$E(ATYP,1,20)
"RTN","PXRMXPR",222,0)
 ....I PXRMTABS="Y" W SEP_ADAT_SEP_$E(ALOC,1,25)_SEP_$E(ATYP,1,20)
"RTN","PXRMXPR",223,0)
 ...I PXRMDLOC="N" D
"RTN","PXRMXPR",224,0)
 ....I PXRMTABS="N" W !,?10,ADAT
"RTN","PXRMXPR",225,0)
 ....I PXRMTABS="Y" W SEP_ADAT
"RTN","PXRMXPR",226,0)
 ..I NONE,PXRMTABS="N" W ?64,FDAT3
"RTN","PXRMXPR",227,0)
 ..I NONE,PXRMTABS="Y" W SEP_FDAT3
"RTN","PXRMXPR",228,0)
 ..I PXRMTABS="Y" W $S(BED'="NONE":SEP_BED_" (Inp.)",1:"")
"RTN","PXRMXPR",229,0)
 ..K ^UTILITY("VASD",$J)
"RTN","PXRMXPR",230,0)
 Q
"RTN","PXRMXPR",231,0)
 ;
"RTN","PXRMXPR",232,0)
 ;Summary by Reminder
"RTN","PXRMXPR",233,0)
SUMARY N JJ,EVAL,DUE,RNAM,RNUM,ITEM,COUNT,FTXT
"RTN","PXRMXPR",234,0)
 S NAM=$G(^XTMP(PXRMXTMP,PX,FAC,SUB)),HEAD=1
"RTN","PXRMXPR",235,0)
 S TOTAL=$P(NAM,U,3),COUNT=$P(NAM,U,2),NAM=$P(NAM,U,1)
"RTN","PXRMXPR",236,0)
 S RNUM=$O(REMINDER(""),-1)
"RTN","PXRMXPR",237,0)
 ;Get reminders in alpha order
"RTN","PXRMXPR",238,0)
 F JJ=1:1:RNUM D  Q:DONE
"RTN","PXRMXPR",239,0)
 .S ITEM=$P(REMINDER(JJ),U,1),RNAM=$P(REMINDER(JJ),U,4)
"RTN","PXRMXPR",240,0)
 .S:RNAM="" RNAM=$P(REMINDER(JJ),U,2)
"RTN","PXRMXPR",241,0)
 .; zero lines will be printed 
"RTN","PXRMXPR",242,0)
 .S DUE=$G(^XTMP(PXRMXTMP,PX,FAC,SUB,ITEM))
"RTN","PXRMXPR",243,0)
 .S EVAL=+$P(DUE,U,1),DUE=+$P(DUE,U,2)
"RTN","PXRMXPR",244,0)
 .;Print
"RTN","PXRMXPR",245,0)
 .D CHECK Q:DONE
"RTN","PXRMXPR",246,0)
 .;Normal Report
"RTN","PXRMXPR",247,0)
 .I PXRMTABS="N" W !,JJ,?5,RNAM,?48,$J(EVAL,10),?63,$J(DUE,10)
"RTN","PXRMXPR",248,0)
 .;Condensed Report
"RTN","PXRMXPR",249,0)
 .I PXRMTABS="Y" D
"RTN","PXRMXPR",250,0)
 ..I "CES"[PXRMTABC S RNAM=$TR(RNAM,SEP,"_")
"RTN","PXRMXPR",251,0)
 ..W !,JJ_SEP_RNAM_SEP_EVAL_SEP_DUE_SEP_$TR(NAM,SEP,"_")
"RTN","PXRMXPR",252,0)
 D:'DONE TOTAL^PXRMXGPR
"RTN","PXRMXPR",253,0)
 I $G(SUB)'="TOTAL",PXRMTOT'="T" S TTOTAL=TTOTAL+TOTAL
"RTN","PXRMXPR",254,0)
 I $G(SUB)="TOTAL",PXRMTOT="T" S TTOTAL=TTOTAL+TOTAL
"RTN","PXRMXPR",255,0)
 Q
"RTN","PXRMXPR",256,0)
 ;
"RTN","PXRMXPR",257,0)
 ;Check line count before writing line
"RTN","PXRMXPR",258,0)
CHECK I ((PXRMTABS="N")&($Y>(IOSL-BMARG-3)))!(HEAD=1) D COL^PXRMXGPR(1)
"RTN","PXRMXPR",259,0)
 Q
"RTN","PXRMXPR",260,0)
 ;
"RTN","PXRMXPR",261,0)
 ;Check if employee
"RTN","PXRMXPR",262,0)
EMP N VAEL
"RTN","PXRMXPR",263,0)
 D ELIG^VADPT
"RTN","PXRMXPR",264,0)
 ;Check TYPE (#391) field
"RTN","PXRMXPR",265,0)
 I $P($G(VAEL(6)),U,2)="EMPLOYEE" S EMP=1 Q
"RTN","PXRMXPR",266,0)
 ;Check PATIENT ELIGABILITY (#361) field
"RTN","PXRMXPR",267,0)
 N ELIG
"RTN","PXRMXPR",268,0)
 S ELIG=0,EMP=0
"RTN","PXRMXPR",269,0)
 F  S ELIG=$O(VAEL(1,ELIG)) Q:'ELIG  D  Q:EMP
"RTN","PXRMXPR",270,0)
 .I $P($G(VAEL(1,ELIG)),U,2)="EMPLOYEE" S EMP=1
"RTN","PXRMXPR",271,0)
 Q
"RTN","PXRMXPR",272,0)
 ;
"RTN","PXRMXPR",273,0)
 ;Sort internal numbers into Alpha order
"RTN","PXRMXPR",274,0)
XSORT N SUB,NAM
"RTN","PXRMXPR",275,0)
 K ^TMP($J,"SORT")
"RTN","PXRMXPR",276,0)
 S SUB=""
"RTN","PXRMXPR",277,0)
 F  S SUB=$O(^XTMP(PXRMXTMP,PX,FAC,SUB)) Q:SUB=""  D
"RTN","PXRMXPR",278,0)
 .Q:SUB="TOTAL"
"RTN","PXRMXPR",279,0)
 .S NAM=$P(^XTMP(PXRMXTMP,PX,FAC,SUB),U)
"RTN","PXRMXPR",280,0)
 .I NAM="" S NAM=SUB
"RTN","PXRMXPR",281,0)
 .S ^TMP($J,"SORT",NAM)=SUB
"RTN","PXRMXPR",282,0)
 Q
"RTN","PXRMXPR",283,0)
 ;
"RTN","PXRMXPR1")
0^92^B16927076
"RTN","PXRMXPR1",1,0)
PXRMXPR1 ; SLC/AGP - Print Reminder Due report carryover code. ;01/05/2006
"RTN","PXRMXPR1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXPR1",3,0)
 ;
"RTN","PXRMXPR1",4,0)
 ;Patient list display
"RTN","PXRMXPR1",5,0)
FOOTER(PLSTCRIT) ;
"RTN","PXRMXPR1",6,0)
 N CNT,CNT1,COUNT,TEXT
"RTN","PXRMXPR1",7,0)
 ;Count patients in list
"RTN","PXRMXPR1",8,0)
 S COUNT=+$O(^PXRMXP(810.5,PXRMLIS1,30,"A"),-1)
"RTN","PXRMXPR1",9,0)
 ;
"RTN","PXRMXPR1",10,0)
 I COUNT=0 W !!!,"No patients due. Patient List not created" Q
"RTN","PXRMXPR1",11,0)
 W !!!,"Patient List "_$P($G(^PXRMXP(810.5,PXRMLIS1,0)),U)_" created by "_$$GET1^DIQ(200,DUZ,.01)_" on "_$$FMTE^XLFDT($P($G(^PXRMXP(810.5,PXRMLIS1,0)),U,4),1)
"RTN","PXRMXPR1",12,0)
 W !!,"List contains "_COUNT_" patients, report run on "_TTOTAL_" patients."
"RTN","PXRMXPR1",13,0)
 ;
"RTN","PXRMXPR1",14,0)
 ;Screen out formatting lines and second piece of criteria array
"RTN","PXRMXPR1",15,0)
 S (CNT,CNT1)=0 F  S CNT=$O(PLSTCRIT(CNT)) Q:CNT'>0  D
"RTN","PXRMXPR1",16,0)
 .I $P($G(PLSTCRIT(CNT)),U)="",$P($G(PLSTCRIT(CNT)),U,2)>0 Q
"RTN","PXRMXPR1",17,0)
 .S CNT1=CNT1+1 S TEXT(CNT1)=$P($G(PLSTCRIT(CNT)),U)
"RTN","PXRMXPR1",18,0)
 ;Store Report Criteria in the document multiple of the patient list
"RTN","PXRMXPR1",19,0)
 F CNT1=1:1:CNT1 S ^PXRMXP(810.5,PXRMLIS1,200,CNT1,0)=TEXT(CNT1)
"RTN","PXRMXPR1",20,0)
 S ^PXRMXP(810.5,PXRMLIS1,200,0)=U_"810.51"_U_CNT1_U_CNT1
"RTN","PXRMXPR1",21,0)
 Q
"RTN","PXRMXPR1",22,0)
 ;
"RTN","PXRMXPR1",23,0)
 ;Set up literals for display
"RTN","PXRMXPR1",24,0)
LITS ;
"RTN","PXRMXPR1",25,0)
 I PXRMSEL="I" S PXRMFLD="Individual Patients"
"RTN","PXRMXPR1",26,0)
 I PXRMSEL="R" S PXRMFLD="Patient List"
"RTN","PXRMXPR1",27,0)
 I PXRMSEL="P" S PXRMFLD="PCMM Provider"
"RTN","PXRMXPR1",28,0)
 I PXRMSEL="O" S PXRMFLD="OE/RR Team"
"RTN","PXRMXPR1",29,0)
 I PXRMSEL="T" S PXRMFLD="PCMM Team"
"RTN","PXRMXPR1",30,0)
 I PXRMSEL="L" D
"RTN","PXRMXPR1",31,0)
 .S PXRMFLD="Location"
"RTN","PXRMXPR1",32,0)
 .I $P(PXRMLCSC,U)="HS" S DES="Selected Hospital Locations"
"RTN","PXRMXPR1",33,0)
 .I $P(PXRMLCSC,U)="HA" S DES="All Outpatient Locations"
"RTN","PXRMXPR1",34,0)
 .I $P(PXRMLCSC,U)="HAI" S DES="All Inpatient Locations"
"RTN","PXRMXPR1",35,0)
 .I $P(PXRMLCSC,U)="CS" S DES="Selected Clinic Stops"
"RTN","PXRMXPR1",36,0)
 .I $P(PXRMLCSC,U)="CA" S DES="All Clinic Stops"
"RTN","PXRMXPR1",37,0)
 .I $P(PXRMLCSC,U)="GS" S DES="Selected Clinic Groups"
"RTN","PXRMXPR1",38,0)
 .I PXRMFD="P" S DES=DES_" (Prior Encounters)"
"RTN","PXRMXPR1",39,0)
 .I PXRMFD="F" S DES=DES_" (Future Appoints.)"
"RTN","PXRMXPR1",40,0)
 .I PXRMFD="A" S DES=DES_" (Admissions)"
"RTN","PXRMXPR1",41,0)
 .I PXRMFD="C" S DES=DES_" (Current Inpatients)"
"RTN","PXRMXPR1",42,0)
 I PXRMSEL="P" D
"RTN","PXRMXPR1",43,0)
 .I PXRMPRIM="A" S CDES="All patients on list"
"RTN","PXRMXPR1",44,0)
 .I PXRMPRIM="P" S CDES="Primary care assigned patients only"
"RTN","PXRMXPR1",45,0)
 Q
"RTN","PXRMXPR1",46,0)
 ;
"RTN","PXRMXPR1",47,0)
 ;Report missed locations if report is partially successful
"RTN","PXRMXPR1",48,0)
MISSED(PSTART,MISSED) ;
"RTN","PXRMXPR1",49,0)
 ;Delimited report from template
"RTN","PXRMXPR1",50,0)
 I PXRMTABS="Y",PXRMTMP'="" D  Q
"RTN","PXRMXPR1",51,0)
 .W !!?PSTART,"The following had no patients selected",!
"RTN","PXRMXPR1",52,0)
 .N SUB
"RTN","PXRMXPR1",53,0)
 .S SUB=""
"RTN","PXRMXPR1",54,0)
 .F  S SUB=$O(MISSED(SUB)) Q:SUB=""  D
"RTN","PXRMXPR1",55,0)
 ..W !?PSTART+10,SUB
"RTN","PXRMXPR1",56,0)
 ;Other reports
"RTN","PXRMXPR1",57,0)
 N LIT,SUB
"RTN","PXRMXPR1",58,0)
 D CHECK^PXRMXGPR(5) Q:DONE
"RTN","PXRMXPR1",59,0)
 S LIT=PXRMFLD
"RTN","PXRMXPR1",60,0)
 I PXRMSEL="L",$E(PXRMLCSC)="G" S LIT="Clinic Group"
"RTN","PXRMXPR1",61,0)
 W !!?PSTART,"The following ",LIT,"(s) had no patients selected",!
"RTN","PXRMXPR1",62,0)
 S SUB=""
"RTN","PXRMXPR1",63,0)
 F  S SUB=$O(MISSED(SUB)) Q:SUB=""  D
"RTN","PXRMXPR1",64,0)
 .D CHECK^PXRMXGPR(3) Q:DONE
"RTN","PXRMXPR1",65,0)
 .W !?PSTART+10,SUB
"RTN","PXRMXPR1",66,0)
 Q
"RTN","PXRMXPR1",67,0)
 ;
"RTN","PXRMXPR1",68,0)
 ;Build array of locations/providers/teams with no patients
"RTN","PXRMXPR1",69,0)
NOPATS(MISSED) ;
"RTN","PXRMXPR1",70,0)
 N DATA,IC,LTYPE,MARK
"RTN","PXRMXPR1",71,0)
 S IC=""
"RTN","PXRMXPR1",72,0)
 I PXRMSEL="P" D
"RTN","PXRMXPR1",73,0)
 . F  S IC=$O(PXRMPRV(IC)) Q:IC=""  D
"RTN","PXRMXPR1",74,0)
 .. S DATA=PXRMPRV(IC)
"RTN","PXRMXPR1",75,0)
 .. D TEST(DATA,$P(DATA,U,1),.MISSED)
"RTN","PXRMXPR1",76,0)
 I PXRMSEL="T" D
"RTN","PXRMXPR1",77,0)
 . F  S IC=$O(PXRMPCM(IC)) Q:IC=""  D
"RTN","PXRMXPR1",78,0)
 .. S DATA=PXRMPCM(IC)
"RTN","PXRMXPR1",79,0)
 .. D TEST(DATA,$P(DATA,U,1),.MISSED)
"RTN","PXRMXPR1",80,0)
 I PXRMSEL="O" D
"RTN","PXRMXPR1",81,0)
 . F  S IC=$O(PXRMOTM(IC)) Q:IC=""  D
"RTN","PXRMXPR1",82,0)
 .. S DATA=PXRMOTM(IC)
"RTN","PXRMXPR1",83,0)
 .. D TEST(DATA,$P(DATA,U,1),.MISSED)
"RTN","PXRMXPR1",84,0)
 S LTYPE=$E($G(PXRMLCSC))
"RTN","PXRMXPR1",85,0)
 I LTYPE="H" D
"RTN","PXRMXPR1",86,0)
 . F  S IC=$O(^XTMP(PXRMXTMP,"HLOC",IC)) Q:IC=""  D
"RTN","PXRMXPR1",87,0)
 .. S DATA=^XTMP(PXRMXTMP,"HLOC",IC)
"RTN","PXRMXPR1",88,0)
 .. D TEST(DATA,IC,.MISSED)
"RTN","PXRMXPR1",89,0)
 I LTYPE="C" D
"RTN","PXRMXPR1",90,0)
 . F  S IC=$O(PXRMCS(IC)) Q:IC=""  D
"RTN","PXRMXPR1",91,0)
 .. S DATA=PXRMCS(IC)
"RTN","PXRMXPR1",92,0)
 .. D TEST(DATA,$P(DATA,U,3),.MISSED)
"RTN","PXRMXPR1",93,0)
 I LTYPE="G" D
"RTN","PXRMXPR1",94,0)
 . F  S IC=$O(PXRMCGRP(IC)) Q:IC=""  D
"RTN","PXRMXPR1",95,0)
 .. S DATA=PXRMCGRP(IC)
"RTN","PXRMXPR1",96,0)
 .. D TEST(DATA,$P(DATA,U,1),.MISSED)
"RTN","PXRMXPR1",97,0)
 Q
"RTN","PXRMXPR1",98,0)
 ;
"RTN","PXRMXPR1",99,0)
 ;Check for match on location
"RTN","PXRMXPR1",100,0)
TEST(DATA,IEN,MISSED) ;
"RTN","PXRMXPR1",101,0)
 N SUB
"RTN","PXRMXPR1",102,0)
 I $D(^XTMP(PXRMXTMP,"MARKED AS FOUND",IEN)) Q
"RTN","PXRMXPR1",103,0)
 I PXRMSEL'="L" S MISSED($P(DATA,U,2))="" Q
"RTN","PXRMXPR1",104,0)
 N LTYPE
"RTN","PXRMXPR1",105,0)
 S LTYPE=$E(PXRMLCSC)
"RTN","PXRMXPR1",106,0)
 I LTYPE="H" S SUB=IEN D
"RTN","PXRMXPR1",107,0)
 . N FACNAM,FACNUM,HLOC
"RTN","PXRMXPR1",108,0)
 . S HLOC=$P(DATA,U,2) Q:HLOC=""
"RTN","PXRMXPR1",109,0)
 . S FACNUM=$$HFAC^PXRMXSL1(IEN)
"RTN","PXRMXPR1",110,0)
 . S FACNAM=$S(FACNUM="":"?",1:$P($G(PXRMFACN(FACNUM)),U,1))
"RTN","PXRMXPR1",111,0)
 . I FACNAM'="" S SUB=HLOC_" ("_FACNAM_")"
"RTN","PXRMXPR1",112,0)
 I LTYPE="C" S SUB=$P(DATA,U,1)_" "_$P(DATA,U,3)
"RTN","PXRMXPR1",113,0)
 I LTYPE="G" S SUB=$P(DATA,U,2)
"RTN","PXRMXPR1",114,0)
 S MISSED(SUB)=""
"RTN","PXRMXPR1",115,0)
 Q
"RTN","PXRMXPR1",116,0)
 ;
"RTN","PXRMXQUE")
0^93^B19825120
"RTN","PXRMXQUE",1,0)
PXRMXQUE ; SLC/PJH - Reminder reports general queuing routine.;02/24/2006
"RTN","PXRMXQUE",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXQUE",3,0)
 ;
"RTN","PXRMXQUE",4,0)
        ;Determine whether the report should be queued.
"RTN","PXRMXQUE",5,0)
JOB ;
"RTN","PXRMXQUE",6,0)
 N %ZIS S %ZIS="Q"
"RTN","PXRMXQUE",7,0)
 W !
"RTN","PXRMXQUE",8,0)
 D ^%ZIS
"RTN","PXRMXQUE",9,0)
 I POP G EXIT^PXRMXD
"RTN","PXRMXQUE",10,0)
 S PXRMIOD=ION_";"_IOST_";"_IOM_";"_IOSL
"RTN","PXRMXQUE",11,0)
 S PXRMQUE=$G(IO("Q"))
"RTN","PXRMXQUE",12,0)
 ;
"RTN","PXRMXQUE",13,0)
 I PXRMQUE D  Q
"RTN","PXRMXQUE",14,0)
 . ;Queue the report.
"RTN","PXRMXQUE",15,0)
 . N DESC,PXRMIOV,ROUTINE,TASK,ZTDTH
"RTN","PXRMXQUE",16,0)
 . S DESC="Reminder Due Report - sort"
"RTN","PXRMXQUE",17,0)
 . S PXRMIOV=""
"RTN","PXRMXQUE",18,0)
 . S ROUTINE="^PXRMXSE1"
"RTN","PXRMXQUE",19,0)
 . M ^TMP("PXRM-MESS",$J)=^TMP("XM-MESS",$J)
"RTN","PXRMXQUE",20,0)
 . S TASK=$$QUE^PXRMXQUE(DESC,PXRMIOV,ROUTINE,"SAVE^PXRMXQUE") Q:TASK=""
"RTN","PXRMXQUE",21,0)
 . S ^XTMP(PXRMXTMP,"SORTZTSK")=TASK
"RTN","PXRMXQUE",22,0)
 . M ^TMP("XM-MESS",$J)=^TMP("PXRM-MESS",$J)
"RTN","PXRMXQUE",23,0)
 . K ^TMP("PXRM-MESS",$J)
"RTN","PXRMXQUE",24,0)
 .;
"RTN","PXRMXQUE",25,0)
 . S DESC="Reminder Due Report - print"
"RTN","PXRMXQUE",26,0)
 . S PXRMIOV=PXRMIOD
"RTN","PXRMXQUE",27,0)
 . S ROUTINE="^PXRMXPR"
"RTN","PXRMXQUE",28,0)
 . S ZTDTH="@"
"RTN","PXRMXQUE",29,0)
 . S ^XTMP(PXRMXTMP,"PRZTSK")=$$QUE^PXRMXQUE(DESC,PXRMIOV,ROUTINE,"SAVE^PXRMXQUE")
"RTN","PXRMXQUE",30,0)
 I 'PXRMQUE D ^PXRMXSE1
"RTN","PXRMXQUE",31,0)
 Q
"RTN","PXRMXQUE",32,0)
 ;
"RTN","PXRMXQUE",33,0)
QUE(DESC,PXRMIOV,ROUTINE,SAVE) ;Queue a task.
"RTN","PXRMXQUE",34,0)
 N ZTDESC,ZTIO,ZTRTN,ZTSAVE
"RTN","PXRMXQUE",35,0)
 D @SAVE
"RTN","PXRMXQUE",36,0)
 S ZTDESC=DESC
"RTN","PXRMXQUE",37,0)
 S ZTIO=PXRMIOV
"RTN","PXRMXQUE",38,0)
 S ZTRTN=ROUTINE
"RTN","PXRMXQUE",39,0)
 D ^%ZTLOAD
"RTN","PXRMXQUE",40,0)
 I $D(ZTSK)=0 W !!,DESC," cancelled"
"RTN","PXRMXQUE",41,0)
 E  W !!,DESC," has been queued, task number ",ZTSK
"RTN","PXRMXQUE",42,0)
 Q $G(ZTSK)
"RTN","PXRMXQUE",43,0)
 ;
"RTN","PXRMXQUE",44,0)
DEVICE(ZTRTN,ZTDESC,ZTSAVE,%ZIS,ZTSK) ;
"RTN","PXRMXQUE",45,0)
 W !
"RTN","PXRMXQUE",46,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,.%ZIS,.ZTSK)
"RTN","PXRMXQUE",47,0)
 I $D(ZTSK)>1 W !!,ZTDESC," has been queued, task number "_$G(ZTSK) H 2
"RTN","PXRMXQUE",48,0)
 I $G(ZTSK)="" S ZTSK=0
"RTN","PXRMXQUE",49,0)
 Q ZTSK
"RTN","PXRMXQUE",50,0)
 ;
"RTN","PXRMXQUE",51,0)
 ;=======================================================================
"RTN","PXRMXQUE",52,0)
REQUE(DESC,ROUTINE,TASK) ;Reque a task.
"RTN","PXRMXQUE",53,0)
 N ZTDTH,ZTRTN,ZTIO,ZTDESC,ZTSK
"RTN","PXRMXQUE",54,0)
 S ZTDESC=DESC
"RTN","PXRMXQUE",55,0)
 S ZTRTN=ROUTINE
"RTN","PXRMXQUE",56,0)
 S ZTSK=TASK
"RTN","PXRMXQUE",57,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","PXRMXQUE",58,0)
 D REQ^%ZTLOAD
"RTN","PXRMXQUE",59,0)
 I ZTSK(0)=1 Q
"RTN","PXRMXQUE",60,0)
 ;There was a problem, send an error message.
"RTN","PXRMXQUE",61,0)
 K ZTSK S ZTSK=TASK
"RTN","PXRMXQUE",62,0)
 D ISQED^%ZTLOAD
"RTN","PXRMXQUE",63,0)
 N LC,SUB
"RTN","PXRMXQUE",64,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMXQUE",65,0)
 S ^TMP("PXRMXMZ",$J,1,0)="Could not start the print task, task information:"
"RTN","PXRMXQUE",66,0)
 S ^TMP("PXRMXMZ",$J,2,0)=" Task number "_TASK
"RTN","PXRMXQUE",67,0)
 S LC=2,SUB=""
"RTN","PXRMXQUE",68,0)
 F  S SUB=$O(ZTSK(SUB)) Q:SUB=""  D
"RTN","PXRMXQUE",69,0)
 . S LC=LC+1
"RTN","PXRMXQUE",70,0)
 . S ^TMP("PXRMXMZ",$J,LC,0)=" ZTSK("_SUB_")="_ZTSK(SUB)
"RTN","PXRMXQUE",71,0)
 S LC=LC+1,^TMP("PXRMXMZ",$J,LC,0)=" Print start time="_ZTDTH
"RTN","PXRMXQUE",72,0)
 S LC=LC+1,^TMP("PXRMXMZ",$J,LC,0)=" Submit time="_$P(PXRMXTMP,"PXRMX",2)
"RTN","PXRMXQUE",73,0)
 S LC=LC+1,^TMP("PXRMXMZ",$J,LC,0)="PXRMXTMP="_$G(PXRMXTMP)
"RTN","PXRMXQUE",74,0)
 D SEND^PXRMMSG("REMINDER REPORT ERROR",DUZ)
"RTN","PXRMXQUE",75,0)
 Q
"RTN","PXRMXQUE",76,0)
 ;
"RTN","PXRMXQUE",77,0)
 ;=======================================================================
"RTN","PXRMXQUE",78,0)
SAVE ;Save the variables for queing.
"RTN","PXRMXQUE",79,0)
 S ZTSAVE("PXRMBDT")="",ZTSAVE("PXRMEDT")="",ZTSAVE("PXRMSDT")=""
"RTN","PXRMXQUE",80,0)
 S ZTSAVE("PXRMCS(")="",ZTSAVE("NCS")=""
"RTN","PXRMXQUE",81,0)
 S ZTSAVE("PXRMCGRP(")="",ZTSAVE("NCGRP")=""
"RTN","PXRMXQUE",82,0)
 S ZTSAVE("PXRMFAC(")="",ZTSAVE("NFAC")=""
"RTN","PXRMXQUE",83,0)
 S ZTSAVE("PXRMFACN(")=""
"RTN","PXRMXQUE",84,0)
 S ZTSAVE("PXRMFCMB")=""
"RTN","PXRMXQUE",85,0)
 S ZTSAVE("PXRMFUT")="",ZTSAVE("PXRMDLOC")=""
"RTN","PXRMXQUE",86,0)
 S ZTSAVE("PXRMFD")=""
"RTN","PXRMXQUE",87,0)
 S ZTSAVE("PXRMINP")=""
"RTN","PXRMXQUE",88,0)
 S ZTSAVE("PXRMIOD")=""
"RTN","PXRMXQUE",89,0)
 S ZTSAVE("PXRMLCHL(")="",ZTSAVE("NHL")=""
"RTN","PXRMXQUE",90,0)
 S ZTSAVE("PXRMLCMB")=""
"RTN","PXRMXQUE",91,0)
 S ZTSAVE("PXRMLCSC")=""
"RTN","PXRMXQUE",92,0)
 S ZTSAVE("PXRMPRIM")=""
"RTN","PXRMXQUE",93,0)
 S ZTSAVE("PXRMQUE")=""
"RTN","PXRMXQUE",94,0)
 S ZTSAVE("PXRMREP")=""
"RTN","PXRMXQUE",95,0)
 S ZTSAVE("PXRMRT")=""
"RTN","PXRMXQUE",96,0)
 S ZTSAVE("PXRMSCAT")="",ZTSAVE("PXRMSCAT(")=""
"RTN","PXRMXQUE",97,0)
 S ZTSAVE("PXRMSEL")=""
"RTN","PXRMXQUE",98,0)
 S ZTSAVE("PXRMSRT")=""
"RTN","PXRMXQUE",99,0)
 S ZTSAVE("PXRMSSN")=""
"RTN","PXRMXQUE",100,0)
 S ZTSAVE("PXRMTABC")=""
"RTN","PXRMXQUE",101,0)
 S ZTSAVE("PXRMTABS")=""
"RTN","PXRMXQUE",102,0)
 S ZTSAVE("PXRMTCMB")=""
"RTN","PXRMXQUE",103,0)
 S ZTSAVE("PXRMTMP")=""
"RTN","PXRMXQUE",104,0)
 S ZTSAVE("PXRMTOT")=""
"RTN","PXRMXQUE",105,0)
 S ZTSAVE("PXRMXTMP")=""
"RTN","PXRMXQUE",106,0)
 ; Time initiated
"RTN","PXRMXQUE",107,0)
 S ZTSAVE("PXRMXST")=""
"RTN","PXRMXQUE",108,0)
 ; New selection criteria
"RTN","PXRMXQUE",109,0)
 S ZTSAVE("PXRMOTM(")="",ZTSAVE("NOTM")=""
"RTN","PXRMXQUE",110,0)
 S ZTSAVE("PXRMPRV(")="",ZTSAVE("NPRV")=""
"RTN","PXRMXQUE",111,0)
 S ZTSAVE("PXRMPAT(")="",ZTSAVE("NPAT")=""
"RTN","PXRMXQUE",112,0)
 S ZTSAVE("PXRMPCM(")="",ZTSAVE("NPCM")=""
"RTN","PXRMXQUE",113,0)
 S ZTSAVE("PXRMREM(")="",ZTSAVE("NREM")=""
"RTN","PXRMXQUE",114,0)
 S ZTSAVE("PXRMRCAT(")="",ZTSAVE("NCAT")=""
"RTN","PXRMXQUE",115,0)
 S ZTSAVE("PXRMUSER")=""
"RTN","PXRMXQUE",116,0)
 ;Reminder list
"RTN","PXRMXQUE",117,0)
 S ZTSAVE("REMINDER(")=""
"RTN","PXRMXQUE",118,0)
 ; Arrays by IEN
"RTN","PXRMXQUE",119,0)
 S ZTSAVE("PXRMLOCN(")=""
"RTN","PXRMXQUE",120,0)
 S ZTSAVE("PXRMCSN(")=""
"RTN","PXRMXQUE",121,0)
 S ZTSAVE("PXRMCGRN(")=""
"RTN","PXRMXQUE",122,0)
 ;Patient List
"RTN","PXRMXQUE",123,0)
 S ZTSAVE("PATCREAT")=""
"RTN","PXRMXQUE",124,0)
 S ZTSAVE("PATLST")=""
"RTN","PXRMXQUE",125,0)
 S ZTSAVE("PXRMLIST(")=""
"RTN","PXRMXQUE",126,0)
 S ZTSAVE("PXRMLIS1")=""
"RTN","PXRMXQUE",127,0)
 S ZTSAVE("PLISTPUG")=""
"RTN","PXRMXQUE",128,0)
 ;User DUZ
"RTN","PXRMXQUE",129,0)
 S ZTSAVE("DBDUZ")=""
"RTN","PXRMXQUE",130,0)
 S ZTSAVE("DBERR")=""
"RTN","PXRMXQUE",131,0)
 S ZTSAVE("PXRMRERR(")=""
"RTN","PXRMXQUE",132,0)
 ;Dubug information
"RTN","PXRMXQUE",133,0)
 S ZTSAVE("PXRMDBUG")=""
"RTN","PXRMXQUE",134,0)
 S ZTSAVE("PXRMDBUS")=""
"RTN","PXRMXQUE",135,0)
 ;Patient Information
"RTN","PXRMXQUE",136,0)
 S ZTSAVE("PXRMTPAT")=""
"RTN","PXRMXQUE",137,0)
 S ZTSAVE("PXRMDPAT")=""
"RTN","PXRMXQUE",138,0)
 I +$G(PXRMIDOD)>0 S ZTSAVE("PXRMIDOD")=""
"RTN","PXRMXQUE",139,0)
 Q
"RTN","PXRMXSC")
0^126^B6596635
"RTN","PXRMXSC",1,0)
PXRMXSC ; SLC/PJH - Reminder reports service category selection ;11/03/2005
"RTN","PXRMXSC",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXSC",3,0)
 ;
"RTN","PXRMXSC",4,0)
SCAT ;Get the list of service categories.
"RTN","PXRMXSC",5,0)
 N DIR,DIEA,IC,JC,NSC,PCESVC,SCA,VALID,X,Y
"RTN","PXRMXSC",6,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMXSC",7,0)
 ;Build a list of allowed service categories. PCE uses a subset of the
"RTN","PXRMXSC",8,0)
 ;categories in the file.  These are stored in PCESVC.
"RTN","PXRMXSC",9,0)
 S PCESVC=""
"RTN","PXRMXSC",10,0)
 D HELP^DIE(9000010,"",.07,"S","SCA")
"RTN","PXRMXSC",11,0)
 S NSC=SCA("DIHELP")
"RTN","PXRMXSC",12,0)
 S DIR("?")=" "
"RTN","PXRMXSC",13,0)
 S DIR("?",1)="The possible service categories for the report are:"
"RTN","PXRMXSC",14,0)
 S JC=0
"RTN","PXRMXSC",15,0)
 F IC=2:1:NSC D
"RTN","PXRMXSC",16,0)
 . S X=$P(SCA("DIHELP",IC)," ",1)
"RTN","PXRMXSC",17,0)
 . I PCESVC="" S PCESVC=X
"RTN","PXRMXSC",18,0)
 . E  S PCESVC=PCESVC_","_X
"RTN","PXRMXSC",19,0)
 . S JC=JC+1
"RTN","PXRMXSC",20,0)
 . S DIR("?",JC)=SCA("DIHELP",IC)
"RTN","PXRMXSC",21,0)
 S NSC=JC
"RTN","PXRMXSC",22,0)
 S DIR("??")=U_"D SCATHELP^PXRMXSC"
"RTN","PXRMXSC",23,0)
SCATP ;
"RTN","PXRMXSC",24,0)
 S DIR(0)="FU"_U_"1:"_NSC
"RTN","PXRMXSC",25,0)
 S DIR("A")="Select SERVICE CATEGORIES"
"RTN","PXRMXSC",26,0)
 S DIR("B")="A,I"
"RTN","PXRMXSC",27,0)
 W !
"RTN","PXRMXSC",28,0)
 D ^DIR K DIR
"RTN","PXRMXSC",29,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSC",30,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSC",31,0)
 ;Make sure we have a valid list.
"RTN","PXRMXSC",32,0)
 S VALID=$$VSCLIST(Y,PCESVC)
"RTN","PXRMXSC",33,0)
 I 'VALID G SCATP
"RTN","PXRMXSC",34,0)
 S PXRMSCAT=$$UP^XLFSTR(Y)
"RTN","PXRMXSC",35,0)
 F IC=1:1:$L(PXRMSCAT,",") S X=$P(PXRMSCAT,",",IC),PXRMSCAT(X)=""
"RTN","PXRMXSC",36,0)
 Q
"RTN","PXRMXSC",37,0)
 ;
"RTN","PXRMXSC",38,0)
 ;======================================================
"RTN","PXRMXSC",39,0)
SCATHELP ;?? help for service categories.
"RTN","PXRMXSC",40,0)
 W !!,"Enter the letter(s), separated by commas, corresponding to the desired service"
"RTN","PXRMXSC",41,0)
 W !,"category or categories. For example A,H,T,E would allow only encounters with"
"RTN","PXRMXSC",42,0)
 W !,"service categories of ambulatory, hospitalization, telecommunications, and"
"RTN","PXRMXSC",43,0)
 W !,"event (historical) to be included."
"RTN","PXRMXSC",44,0)
 Q
"RTN","PXRMXSC",45,0)
 ;
"RTN","PXRMXSC",46,0)
 ;======================================================
"RTN","PXRMXSC",47,0)
VSCLIST(LIST,SLIST) ;LIST is a comma separated list of service categories. SLIST
"RTN","PXRMXSC",48,0)
 ;is the standard list of service categories. Make sure all the
"RTN","PXRMXSC",49,0)
 ;elements of LIST are in the standard list SLIST. If they are, then
"RTN","PXRMXSC",50,0)
 ;LIST is valid. Used for selection in reminder reports and as input
"RTN","PXRMXSC",51,0)
 ;transform SERVICE CATEGORY LIST in the REMINDER REPORT TEMPLATE
"RTN","PXRMXSC",52,0)
 ;file #810.1.
"RTN","PXRMXSC",53,0)
 I LIST="" Q 1
"RTN","PXRMXSC",54,0)
 I $G(SLIST)="" D
"RTN","PXRMXSC",55,0)
 . N IC,SCA,TEMP
"RTN","PXRMXSC",56,0)
 . D HELP^DIE(9000010,"",.07,"S","SCA")
"RTN","PXRMXSC",57,0)
 . S SLIST=""
"RTN","PXRMXSC",58,0)
 . F IC=2:1:SCA("DIHELP") D
"RTN","PXRMXSC",59,0)
 .. S TEMP=$P(SCA("DIHELP",IC)," ",1)
"RTN","PXRMXSC",60,0)
 .. I SLIST="" S SLIST=TEMP
"RTN","PXRMXSC",61,0)
 .. E  S SLIST=SLIST_","_TEMP
"RTN","PXRMXSC",62,0)
 N IC,LE,LEN,VALID
"RTN","PXRMXSC",63,0)
 S LIST=$$UP^XLFSTR(LIST)
"RTN","PXRMXSC",64,0)
 S VALID=1
"RTN","PXRMXSC",65,0)
 S LEN=$L(LIST,",")
"RTN","PXRMXSC",66,0)
 F IC=1:1:LEN D
"RTN","PXRMXSC",67,0)
 . S LE=$P(LIST,",",IC)
"RTN","PXRMXSC",68,0)
 . I LE="" D  Q
"RTN","PXRMXSC",69,0)
 .. D EN^DDIOL("Null is not a valid service category!")
"RTN","PXRMXSC",70,0)
 .. S VALID=0
"RTN","PXRMXSC",71,0)
 . I SLIST'[LE D
"RTN","PXRMXSC",72,0)
 .. D EN^DDIOL(LE_" is an invalid service category!")
"RTN","PXRMXSC",73,0)
 .. S VALID=0
"RTN","PXRMXSC",74,0)
 Q VALID
"RTN","PXRMXSC",75,0)
 ;
"RTN","PXRMXSD")
0^145^B37722805
"RTN","PXRMXSD",1,0)
PXRMXSD ; SLC/PJH - Reminder Reports DIR Prompts; 08/14/2006
"RTN","PXRMXSD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXSD",3,0)
 ;
"RTN","PXRMXSD",4,0)
BED(YESNO) ;Option to sort by inpatient location and bed
"RTN","PXRMXSD",5,0)
 N DIR,X,Y
"RTN","PXRMXSD",6,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",7,0)
 S DIR(0)="YA"
"RTN","PXRMXSD",8,0)
 S DIR("A")="Sort by Inpatient Location/Bed: "
"RTN","PXRMXSD",9,0)
 S DIR("B")="N"
"RTN","PXRMXSD",10,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXSD",11,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(11)"
"RTN","PXRMXSD",12,0)
 W !
"RTN","PXRMXSD",13,0)
 D ^DIR
"RTN","PXRMXSD",14,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",15,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",16,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXSD",17,0)
 I YESNO="Y" S YESNO="B"
"RTN","PXRMXSD",18,0)
 Q
"RTN","PXRMXSD",19,0)
 ;
"RTN","PXRMXSD",20,0)
COMB(YESNO,LIT,DEF) ;Option to combine report
"RTN","PXRMXSD",21,0)
 N DIR,X,Y
"RTN","PXRMXSD",22,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",23,0)
 S DIR(0)="YA"
"RTN","PXRMXSD",24,0)
 S DIR("A")="Combined report for all "_LIT_" : "
"RTN","PXRMXSD",25,0)
 S DIR("B")=DEF
"RTN","PXRMXSD",26,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXSD",27,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(9)"
"RTN","PXRMXSD",28,0)
 W !
"RTN","PXRMXSD",29,0)
 D ^DIR
"RTN","PXRMXSD",30,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",31,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",32,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXSD",33,0)
 Q
"RTN","PXRMXSD",34,0)
 ;
"RTN","PXRMXSD",35,0)
DELIMSEL() ;Select DELIMITER CHARACTER
"RTN","PXRMXSD",36,0)
 N X,Y,DC,DIR
"RTN","PXRMXSD",37,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",38,0)
 S DIR(0)="S"_U_"C:Comma;"
"RTN","PXRMXSD",39,0)
 S DIR(0)=DIR(0)_"M:Semicolon;"
"RTN","PXRMXSD",40,0)
 S DIR(0)=DIR(0)_"L:Tilde;"
"RTN","PXRMXSD",41,0)
 S DIR(0)=DIR(0)_"S:Space;"
"RTN","PXRMXSD",42,0)
 S DIR(0)=DIR(0)_"T:Tab;"
"RTN","PXRMXSD",43,0)
 S DIR(0)=DIR(0)_"U:Up arrow;"
"RTN","PXRMXSD",44,0)
 S DIR("A")="Specify REPORT DELIMITER CHARACTER"
"RTN","PXRMXSD",45,0)
 S DIR("B")="U"
"RTN","PXRMXSD",46,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSD",47,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(14)"
"RTN","PXRMXSD",48,0)
 D ^DIR
"RTN","PXRMXSD",49,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",50,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMXSD",51,0)
 S DC=$S(Y="C":",",Y="M":";",Y="L":"~",Y="S":" ",Y="T":$C(9),Y="U":"^",1:"^")
"RTN","PXRMXSD",52,0)
 Q DC
"RTN","PXRMXSD",53,0)
 ;
"RTN","PXRMXSD",54,0)
FUTURE(YESNO,PROMPT,NUM) ;Option to display all future appointments on detail report
"RTN","PXRMXSD",55,0)
 N DIR,X,Y
"RTN","PXRMXSD",56,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",57,0)
 S DIR(0)="YA"
"RTN","PXRMXSD",58,0)
 S DIR("A")=PROMPT
"RTN","PXRMXSD",59,0)
 S DIR("B")="N"
"RTN","PXRMXSD",60,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXSD",61,0)
 S DIR("??")=U_"D HELP^PXRMXHLP("_NUM_")"
"RTN","PXRMXSD",62,0)
 W !
"RTN","PXRMXSD",63,0)
 D ^DIR
"RTN","PXRMXSD",64,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",65,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",66,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXSD",67,0)
 Q
"RTN","PXRMXSD",68,0)
 ;
"RTN","PXRMXSD",69,0)
PREV(TYPE) ;Future Appts/Prior Encounters selection
"RTN","PXRMXSD",70,0)
 N X,Y,DIR
"RTN","PXRMXSD",71,0)
 S NREM=0
"RTN","PXRMXSD",72,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",73,0)
 I 'PXRMINP D
"RTN","PXRMXSD",74,0)
 .S DIR(0)="S"_U_"P:Previous Encounters;"
"RTN","PXRMXSD",75,0)
 .S DIR(0)=DIR(0)_"F:Future Appointments;"
"RTN","PXRMXSD",76,0)
 .S DIR("A")="PREVIOUS ENCOUNTERS OR FUTURE APPOINTMENTS"
"RTN","PXRMXSD",77,0)
 .S DIR("B")="P"
"RTN","PXRMXSD",78,0)
 .S DIR("??")=U_"D HELP^PXRMXHLP(3)"
"RTN","PXRMXSD",79,0)
 I PXRMINP D
"RTN","PXRMXSD",80,0)
 .S DIR(0)="S"_U_"A:Admissions to Location in date range;"
"RTN","PXRMXSD",81,0)
 .S DIR(0)=DIR(0)_"C:Current Inpatients;"
"RTN","PXRMXSD",82,0)
 .S DIR("A")="CURRENT INPATIENTS OR ADMISSIONS"
"RTN","PXRMXSD",83,0)
 .S DIR("B")="C"
"RTN","PXRMXSD",84,0)
 .S DIR("??")=U_"D HELP^PXRMXHLP(7)"
"RTN","PXRMXSD",85,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSD",86,0)
 D ^DIR
"RTN","PXRMXSD",87,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",88,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",89,0)
 S TYPE=Y
"RTN","PXRMXSD",90,0)
 Q
"RTN","PXRMXSD",91,0)
 ;
"RTN","PXRMXSD",92,0)
PRIME(TYPE) ;Primary Provider patients only or All
"RTN","PXRMXSD",93,0)
 N X,Y,DIR
"RTN","PXRMXSD",94,0)
 S NREM=0
"RTN","PXRMXSD",95,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",96,0)
 S DIR(0)="S"_U_"P:Primary care assigned patients only;"
"RTN","PXRMXSD",97,0)
 S DIR(0)=DIR(0)_"A:All patients on list;"
"RTN","PXRMXSD",98,0)
 S DIR("A")="PRIMARY CARE ONLY OR ALL"
"RTN","PXRMXSD",99,0)
 S DIR("B")="P"
"RTN","PXRMXSD",100,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSD",101,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(4)"
"RTN","PXRMXSD",102,0)
 D ^DIR
"RTN","PXRMXSD",103,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",104,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",105,0)
 S TYPE=Y
"RTN","PXRMXSD",106,0)
 Q
"RTN","PXRMXSD",107,0)
 ;
"RTN","PXRMXSD",108,0)
REP(TYPE) ;Report type selection
"RTN","PXRMXSD",109,0)
 N X,Y,DIR
"RTN","PXRMXSD",110,0)
 S NREM=0
"RTN","PXRMXSD",111,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",112,0)
 S DIR(0)="S"_U_"D:Detailed;"
"RTN","PXRMXSD",113,0)
 S DIR(0)=DIR(0)_"S:Summary;"
"RTN","PXRMXSD",114,0)
 S DIR("A")="TYPE OF REPORT"
"RTN","PXRMXSD",115,0)
 S DIR("B")="S"
"RTN","PXRMXSD",116,0)
 I PXRMSEL="I" S DIR("B")="D"
"RTN","PXRMXSD",117,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSD",118,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(2)"
"RTN","PXRMXSD",119,0)
 D ^DIR
"RTN","PXRMXSD",120,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",121,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",122,0)
 S TYPE=Y
"RTN","PXRMXSD",123,0)
 Q
"RTN","PXRMXSD",124,0)
 ;
"RTN","PXRMXSD",125,0)
SELECT(TYPE) ;Patient Sample Selection
"RTN","PXRMXSD",126,0)
 N X,Y,DIR
"RTN","PXRMXSD",127,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",128,0)
 S DIR(0)="S"_U_"I:Individual Patient;"
"RTN","PXRMXSD",129,0)
 S DIR(0)=DIR(0)_"R:Reminder Patient List;"
"RTN","PXRMXSD",130,0)
 S DIR(0)=DIR(0)_"L:Location;"
"RTN","PXRMXSD",131,0)
 S DIR(0)=DIR(0)_"O:OE/RR Team;"
"RTN","PXRMXSD",132,0)
 S DIR(0)=DIR(0)_"P:PCMM Provider;"
"RTN","PXRMXSD",133,0)
 S DIR(0)=DIR(0)_"T:PCMM Team;"
"RTN","PXRMXSD",134,0)
 S DIR("A")="PATIENT SAMPLE"
"RTN","PXRMXSD",135,0)
 S DIR("B")="L"
"RTN","PXRMXSD",136,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSD",137,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(0)"
"RTN","PXRMXSD",138,0)
 D ^DIR
"RTN","PXRMXSD",139,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",140,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",141,0)
 S TYPE=Y
"RTN","PXRMXSD",142,0)
 Q
"RTN","PXRMXSD",143,0)
 ;
"RTN","PXRMXSD",144,0)
SRT(YESNO) ;Option to sort by next appointment date on detail report
"RTN","PXRMXSD",145,0)
 N DIR,X,Y
"RTN","PXRMXSD",146,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",147,0)
 S DIR(0)="YA"
"RTN","PXRMXSD",148,0)
 S DIR("A")="Sort by Next Appointment date: "
"RTN","PXRMXSD",149,0)
 S DIR("B")="N"
"RTN","PXRMXSD",150,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXSD",151,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(6)"
"RTN","PXRMXSD",152,0)
 W !
"RTN","PXRMXSD",153,0)
 D ^DIR
"RTN","PXRMXSD",154,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",155,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",156,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXSD",157,0)
 Q
"RTN","PXRMXSD",158,0)
 ;
"RTN","PXRMXSD",159,0)
SSN(YESNO) ;Option to print full SSN.
"RTN","PXRMXSD",160,0)
 N DIR,X,Y
"RTN","PXRMXSD",161,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",162,0)
 S DIR(0)="YA"
"RTN","PXRMXSD",163,0)
 S DIR("A")="Print full SSN: "
"RTN","PXRMXSD",164,0)
 I $P($G(^PXRM(800,1,"FULL SSN")),U)="Y" S DIR("B")="Y"
"RTN","PXRMXSD",165,0)
 E  S DIR("B")="N"
"RTN","PXRMXSD",166,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXSD",167,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(12)"
"RTN","PXRMXSD",168,0)
 W !
"RTN","PXRMXSD",169,0)
 D ^DIR
"RTN","PXRMXSD",170,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",171,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",172,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXSD",173,0)
 Q
"RTN","PXRMXSD",174,0)
 ;
"RTN","PXRMXSD",175,0)
TABS(YESNO) ;Option print compressed report
"RTN","PXRMXSD",176,0)
 N DIR,X,Y
"RTN","PXRMXSD",177,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",178,0)
 S DIR(0)="YA"
"RTN","PXRMXSD",179,0)
 S DIR("A")="Print delimited output only: "
"RTN","PXRMXSD",180,0)
 S DIR("B")="N"
"RTN","PXRMXSD",181,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXSD",182,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(13)"
"RTN","PXRMXSD",183,0)
 W !
"RTN","PXRMXSD",184,0)
 D ^DIR
"RTN","PXRMXSD",185,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",186,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",187,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXSD",188,0)
 Q
"RTN","PXRMXSD",189,0)
 ;
"RTN","PXRMXSD",190,0)
TOTALS(TYPE,LIT1,LIT2,LIT3) ;Totals Selection
"RTN","PXRMXSD",191,0)
 N X,Y,DIR
"RTN","PXRMXSD",192,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",193,0)
 S DIR(0)="S"_U_"I:"_LIT1_";"
"RTN","PXRMXSD",194,0)
 S DIR(0)=DIR(0)_"R:"_LIT2_";"
"RTN","PXRMXSD",195,0)
 S DIR(0)=DIR(0)_"T:"_LIT3_";"
"RTN","PXRMXSD",196,0)
 S DIR("A")="REPORT TOTALS"
"RTN","PXRMXSD",197,0)
 S DIR("B")="I"
"RTN","PXRMXSD",198,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSD",199,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(10)"
"RTN","PXRMXSD",200,0)
 D ^DIR
"RTN","PXRMXSD",201,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",202,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",203,0)
 S TYPE=Y
"RTN","PXRMXSD",204,0)
 Q
"RTN","PXRMXSE")
1^21
"RTN","PXRMXSE1")
0^79^B52743138
"RTN","PXRMXSE1",1,0)
PXRMXSE1 ; SLC/PJH - Build Patient lists for Reminder Due report; 01/25/2006
"RTN","PXRMXSE1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXSE1",3,0)
 ;
"RTN","PXRMXSE1",4,0)
 ; Called/jobbed from PXRMXD
"RTN","PXRMXSE1",5,0)
 ;
"RTN","PXRMXSE1",6,0)
 ; Input - PXRMSEL,PXRMXTMP
"RTN","PXRMXSE1",7,0)
 ;         PXRM*
"RTN","PXRMXSE1",8,0)
 ; Output- ^XTMP(PXRMXTMP
"RTN","PXRMXSE1",9,0)
 ;
"RTN","PXRMXSE1",10,0)
 ;
"RTN","PXRMXSE1",11,0)
START ;  
"RTN","PXRMXSE1",12,0)
 N LIT,TOTAL,TODAY,ZTSTOP,BUSY
"RTN","PXRMXSE1",13,0)
 S DBDOWN=0
"RTN","PXRMXSE1",14,0)
 S TOTAL=0,ZTSTOP="",TODAY=$$DT^XLFDT-.0001
"RTN","PXRMXSE1",15,0)
 ;
"RTN","PXRMXSE1",16,0)
 K ^TMP($J,"PXRM PATIENT LIST"),^TMP($J,"PXRM PATIENT EVAL")
"RTN","PXRMXSE1",17,0)
 K ^TMP($J,"PXRM FUTURE APPT"),^TMP($J,"SDAMA301")
"RTN","PXRMXSE1",18,0)
 K ^TMP($J),^TMP(PXRMRT,$J),^TMP("PXRMDUP",$J)
"RTN","PXRMXSE1",19,0)
 K ^TMP("PXRMCMB",$J),^TMP("PXRMCMB1",$J),^TMP("PXRMCMB2",$J)
"RTN","PXRMXSE1",20,0)
 N PXRMRERR
"RTN","PXRMXSE1",21,0)
 ;
"RTN","PXRMXSE1",22,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSE1",23,0)
 ;
"RTN","PXRMXSE1",24,0)
 ;OE/RR team selected (PXRMOTM)
"RTN","PXRMXSE1",25,0)
 I PXRMSEL="O" D OERR^PXRMXSL1
"RTN","PXRMXSE1",26,0)
 ; 
"RTN","PXRMXSE1",27,0)
 ;PCMM team selected (PXRMPCM)
"RTN","PXRMXSE1",28,0)
 I PXRMSEL="T" D PCMMT^PXRMXSL1
"RTN","PXRMXSE1",29,0)
 ;
"RTN","PXRMXSE1",30,0)
 N HLIEN,FACILITY
"RTN","PXRMXSE1",31,0)
 ;Location selected (PXRMLCHL,PXRMCGRP)
"RTN","PXRMXSE1",32,0)
 I PXRMSEL="L" D  G:ZTSTOP=1 EXIT
"RTN","PXRMXSE1",33,0)
 .;Build Clinic List
"RTN","PXRMXSE1",34,0)
 .D BHLOC^PXRMXSL1
"RTN","PXRMXSE1",35,0)
 .;Prior Visits - build patient list in ^TMP
"RTN","PXRMXSE1",36,0)
 .I PXRMFD="P" D VISITS^PXRMXSL2 I DBDOWN=1 Q
"RTN","PXRMXSE1",37,0)
 .;Inpatient Admissions and current inpatient locations
"RTN","PXRMXSE1",38,0)
 .I PXRMFD="A"!(PXRMFD="C") D INPADM^PXRMXSL1
"RTN","PXRMXSE1",39,0)
 .;Future Appointments - build patient list in ^TMP
"RTN","PXRMXSE1",40,0)
 .I PXRMFD="F" D APPTS^PXRMXSL2 I DBDOWN=1 Q
"RTN","PXRMXSE1",41,0)
 .;End task requested
"RTN","PXRMXSE1",42,0)
 .Q:ZTSTOP=1
"RTN","PXRMXSE1",43,0)
 ;Update ^XTMP from ^TMP
"RTN","PXRMXSE1",44,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSE1",45,0)
 ;
"RTN","PXRMXSE1",46,0)
 ;PCMM provider selected (PXRMPRV)
"RTN","PXRMXSE1",47,0)
 I PXRMSEL="P" D PCMMP^PXRMXSL1
"RTN","PXRMXSE1",48,0)
 ;
"RTN","PXRMXSE1",49,0)
 ;Individual Patients selected (PXRMPAT)
"RTN","PXRMXSE1",50,0)
 I PXRMSEL="I" D IND^PXRMXSL1
"RTN","PXRMXSE1",51,0)
 ;
"RTN","PXRMXSE1",52,0)
 ;Patient List selected (PXRMLIST)
"RTN","PXRMXSE1",53,0)
 I PXRMSEL="R" D LIST^PXRMXSL1
"RTN","PXRMXSE1",54,0)
 ;
"RTN","PXRMXSE1",55,0)
 I DBDOWN=1 G EXIT
"RTN","PXRMXSE1",56,0)
 S START=$H
"RTN","PXRMXSE1",57,0)
 D EVAL^PXRMXEVL("PXRM PATIENT EVAL",.REMINDER)
"RTN","PXRMXSE1",58,0)
 D XTMP(START)
"RTN","PXRMXSE1",59,0)
 ;
"RTN","PXRMXSE1",60,0)
 ;Update patient list
"RTN","PXRMXSE1",61,0)
 I PXRMSEL'="I"&(PXRMUSER'="Y")&($G(PXRMLIS1)'="") D
"RTN","PXRMXSE1",62,0)
 .;If no patients due delete patient list
"RTN","PXRMXSE1",63,0)
 .I +$O(^TMP($J,"PXRMXPAT",""))=0 D  Q
"RTN","PXRMXSE1",64,0)
 ..N DA,DIK S DA=PXRMLIS1,DIK="^PXRMXP(810.5," D ^DIK
"RTN","PXRMXSE1",65,0)
 .;Otherwise create patient list
"RTN","PXRMXSE1",66,0)
 .D UPDLST^PXRMRULE("PXRMXPAT",PXRMLIS1,"","")
"RTN","PXRMXSE1",67,0)
 .S $P(^PXRMXP(810.5,PXRMLIS1,0),U,9)=1
"RTN","PXRMXSE1",68,0)
 K ^TMP($J,"PXRMXPAT")
"RTN","PXRMXSE1",69,0)
 K ^TMP($J),^TMP(PXRMRT,$J),^TMP("PXRMDUP",$J)
"RTN","PXRMXSE1",70,0)
 K ^TMP("PXRMCMB",$J),^TMP("PXRMCMB1",$J),^TMP("PXRMCMB2",$J),^TMP("PXRMCMB3",$J)
"RTN","PXRMXSE1",71,0)
 K DBDOWN
"RTN","PXRMXSE1",72,0)
 ;
"RTN","PXRMXSE1",73,0)
DONE ;
"RTN","PXRMXSE1",74,0)
 ;Sorting is done.
"RTN","PXRMXSE1",75,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) W ! D DONE^PXRMXBSY("done")
"RTN","PXRMXSE1",76,0)
 ;
"RTN","PXRMXSE1",77,0)
 ;I PXRMDBUG="Y" D DEBUG("End of evaluation:",PXRMREP,"^XTMP(PXRMXTMP,PX)")
"RTN","PXRMXSE1",78,0)
 ;Print the report information.
"RTN","PXRMXSE1",79,0)
 I PXRMQUE D  Q
"RTN","PXRMXSE1",80,0)
 .;Start the printing that was queued but not scheduled.
"RTN","PXRMXSE1",81,0)
 .N DESC,ROUTINE,TASK
"RTN","PXRMXSE1",82,0)
 .S ROUTINE="^PXRMXPR"
"RTN","PXRMXSE1",83,0)
 .S DESC="Reminder Due Report - print"
"RTN","PXRMXSE1",84,0)
 .S TASK=$G(^XTMP(PXRMXTMP,"PRZTSK"))
"RTN","PXRMXSE1",85,0)
 .I TASK="" D NOPRZTSK(PXRMXTMP) Q
"RTN","PXRMXSE1",86,0)
 .D REQUE^PXRMXQUE(DESC,ROUTINE,TASK)
"RTN","PXRMXSE1",87,0)
 .S ZTREQ="@"
"RTN","PXRMXSE1",88,0)
 I 'PXRMQUE D ^PXRMXPR
"RTN","PXRMXSE1",89,0)
 Q
"RTN","PXRMXSE1",90,0)
 ;
"RTN","PXRMXSE1",91,0)
AWRITE(REF,LS)     ;This line tag is a copy of AWRITE^PXRMUTIL
"RTN","PXRMXSE1",92,0)
 N CNT,DONE,IC,IND,LEN,PROOT,ROOT,START,TEMP
"RTN","PXRMXSE1",93,0)
 I REF="" Q
"RTN","PXRMXSE1",94,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMXSE1",95,0)
 S TEMP=$NA(@REF)
"RTN","PXRMXSE1",96,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMXSE1",97,0)
 S REF=$Q(@REF)
"RTN","PXRMXSE1",98,0)
 I REF'[ROOT Q
"RTN","PXRMXSE1",99,0)
 S DONE=0,CNT=LS
"RTN","PXRMXSE1",100,0)
 F IC=0:0 Q:(REF="")!(DONE)  D
"RTN","PXRMXSE1",101,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMXSE1",102,0)
 . S LEN=$L(REF)
"RTN","PXRMXSE1",103,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMXSE1",104,0)
 . S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=PROOT_IND_"="_@REF
"RTN","PXRMXSE1",105,0)
 . S REF=$Q(@REF)
"RTN","PXRMXSE1",106,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMXSE1",107,0)
 Q
"RTN","PXRMXSE1",108,0)
 ;
"RTN","PXRMXSE1",109,0)
DEBUG(LOC,TYPE,REF) ;
"RTN","PXRMXSE1",110,0)
 N CNT,DDAT,FACILITY,HEADER,PNAM,PX,SUB
"RTN","PXRMXSE1",111,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMXSE1",112,0)
 S PX="PXRM"
"RTN","PXRMXSE1",113,0)
 I TYPE'="P"&(TYPE'="DEBUG") D  Q
"RTN","PXRMXSE1",114,0)
 .D AWRITE(REF,0)
"RTN","PXRMXSE1",115,0)
 .D SEND^PXRMMSG("Debug output: "_LOC_" Reminder Report type "_TYPE_" ("_$$NOW^XLFDT_")",DUZ)
"RTN","PXRMXSE1",116,0)
 D AWRITE(REF,0)
"RTN","PXRMXSE1",117,0)
 S HEADER=LOC_" ("_$$NOW^XLFDT_")"
"RTN","PXRMXSE1",118,0)
 D SEND^PXRMMSG("Debug output: "_HEADER,DUZ)
"RTN","PXRMXSE1",119,0)
 Q
"RTN","PXRMXSE1",120,0)
 ;
"RTN","PXRMXSE1",121,0)
ERROR(STATUS,ITEM) ;
"RTN","PXRMXSE1",122,0)
 ;Create XTMP entry for Reminders that error out or could not be
"RTN","PXRMXSE1",123,0)
 ;determing on evaluation
"RTN","PXRMXSE1",124,0)
 N ERRNAME
"RTN","PXRMXSE1",125,0)
 S STATUS=$P(STATUS,U)
"RTN","PXRMXSE1",126,0)
 S ERRNAME=$P(^PXD(811.9,ITEM,0),U)
"RTN","PXRMXSE1",127,0)
 I $D(^XTMP(PXRMXTMP,STATUS,ERRNAME))>0,^XTMP(PXRMXTMP,STATUS,ERRNAME)>0 D
"RTN","PXRMXSE1",128,0)
 .S ^XTMP(PXRMXTMP,STATUS,ERRNAME)=^XTMP(PXRMXTMP,STATUS,ERRNAME)+1
"RTN","PXRMXSE1",129,0)
 E  S ^XTMP(PXRMXTMP,STATUS,ERRNAME)=1
"RTN","PXRMXSE1",130,0)
 Q
"RTN","PXRMXSE1",131,0)
 ;
"RTN","PXRMXSE1",132,0)
 ;End Task requested
"RTN","PXRMXSE1",133,0)
EXIT ;
"RTN","PXRMXSE1",134,0)
 S ZTSK=$G(^XTMP(PXRMXTMP,"PRZTSK"))
"RTN","PXRMXSE1",135,0)
 I ZTSK>0 D KILL^%ZTLOAD
"RTN","PXRMXSE1",136,0)
 D EXIT^PXRMXGUT
"RTN","PXRMXSE1",137,0)
 K DBDOWN
"RTN","PXRMXSE1",138,0)
 Q
"RTN","PXRMXSE1",139,0)
 ;
"RTN","PXRMXSE1",140,0)
NOPRZTSK(PXRMXTMP)       ;Could not get PRZTSK send an error message
"RTN","PXRMXSE1",141,0)
 N TEXT
"RTN","PXRMXSE1",142,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMXSE1",143,0)
 S TEXT(1,0)="The task number for the print job cannot be determined."
"RTN","PXRMXSE1",144,0)
 S TEXT(2,0)="The reason is:"
"RTN","PXRMXSE1",145,0)
 I '$D(^XTMP(PXRMXTMP)) S TEXT(3,0)=" The ^XTMP(PXRMXTMP) global is not defined."
"RTN","PXRMXSE1",146,0)
 I $D(^XTMP(PXRMXTMP)),'$D(^XTMP(PXRMXTMP,"PRZTSK")) S TEXT(3,0)=" ^XTMP(PXRMXTMP,""PRZTSK"") does not exist."
"RTN","PXRMXSE1",147,0)
 I $D(^XTMP(PXRMXTMP,"PRZTSK")) S TEXT(3,0)=" ^XMTP(PXRMXTMP,""PRZTSK"") is null."
"RTN","PXRMXSE1",148,0)
 S TEXT(4,0)="PXRMXTMP="_PXRMXTMP
"RTN","PXRMXSE1",149,0)
 M ^TMP("PXRMXMZ",$J)=TEXT
"RTN","PXRMXSE1",150,0)
 D SEND^PXRMMSG("REMINDER REPORT ERROR",DUZ)
"RTN","PXRMXSE1",151,0)
 Q
"RTN","PXRMXSE1",152,0)
 ;
"RTN","PXRMXSE1",153,0)
XTMP(START) ;
"RTN","PXRMXSE1",154,0)
 N CNT,CCNT,DDAT,INP,ITEM,LIT,LSSN,MCNBD,MCNBDR,NAME,SUB,STATUS,TEMP,TEMP1
"RTN","PXRMXSE1",155,0)
 K ^TMP($J,"PXRM CNBD")
"RTN","PXRMXSE1",156,0)
 S CCNT=0,MCNBD=$G(^PXRM(800,1,"MIERR")),MCNBDR=0
"RTN","PXRMXSE1",157,0)
 ;I PXRMDBUG="Y" D DEBUG("PATIENT DATA","P","^TMP($J,""PXRM PATIENT EVAL"")")
"RTN","PXRMXSE1",158,0)
 S BUSY=0,SUB="NAM",TEMP=0,PX="PXRM"
"RTN","PXRMXSE1",159,0)
 N DDAT,DDUE,DEMARR,DFN,DLAST,DNEXT,FACILITY,NAM,PNAM
"RTN","PXRMXSE1",160,0)
 S FACILITY="",DDAT="N/A"
"RTN","PXRMXSE1",161,0)
 F  S FACILITY=$O(^TMP(PXRMRT,$J,FACILITY)) Q:FACILITY=""  D
"RTN","PXRMXSE1",162,0)
 .S NAM=""
"RTN","PXRMXSE1",163,0)
 .F  S NAM=$O(^TMP(PXRMRT,$J,FACILITY,NAM)) Q:NAM=""  D
"RTN","PXRMXSE1",164,0)
 ..S DFN="" F  S DFN=$O(^TMP(PXRMRT,$J,FACILITY,NAM,DFN)) Q:DFN=""  D
"RTN","PXRMXSE1",165,0)
 ...I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D SPIN^PXRMXBSY("Evaluating Reminders",.BUSY)
"RTN","PXRMXSE1",166,0)
 ...S INP=$G(^TMP(PXRMRT,$J,FACILITY,NAM,DFN))
"RTN","PXRMXSE1",167,0)
 ...S CNT=0 F  S CNT=$O(REMINDER(CNT)) Q:CNT'>0  D
"RTN","PXRMXSE1",168,0)
 ....S ITEM=$P(REMINDER(CNT),U,1),LIT=$P(REMINDER(CNT),U,4)
"RTN","PXRMXSE1",169,0)
 ....I LIT="" S LIT=$P(REMINDER(CNT),U,2)
"RTN","PXRMXSE1",170,0)
 ....S STATUS=$G(^TMP($J,"PXRM PATIENT EVAL",DFN,ITEM))
"RTN","PXRMXSE1",171,0)
 ....I STATUS="" Q
"RTN","PXRMXSE1",172,0)
 ....I STATUS["ERROR"!(STATUS["CNBD") D
"RTN","PXRMXSE1",173,0)
 .....D ERROR(STATUS,ITEM) I STATUS["ERROR"!(MCNBDR=1) Q
"RTN","PXRMXSE1",174,0)
 .....I CCNT=0 D  Q
"RTN","PXRMXSE1",175,0)
 ......S ^TMP($J,"PXRM CNBD",1,0)=$$RJ^XLFSTR(" ",5)_$$LJ^XLFSTR("PATIENT NAME",30)_$$RJ^XLFSTR("LAST 4",10)
"RTN","PXRMXSE1",176,0)
 ......S (TEMP,TEMP1)=""
"RTN","PXRMXSE1",177,0)
 ......F X=1:1:30 S TEMP=TEMP_"_"
"RTN","PXRMXSE1",178,0)
 ......F X=1:1:6 S TEMP1=TEMP1_"_"
"RTN","PXRMXSE1",179,0)
 ......S ^TMP($J,"PXRM CNBD",2,0)=$$RJ^XLFSTR(" ",5)_$$LJ^XLFSTR(TEMP,30)_$$RJ^XLFSTR(TEMP1,10)
"RTN","PXRMXSE1",180,0)
 ......S CCNT=2
"RTN","PXRMXSE1",181,0)
 .....S CCNT=CCNT+1
"RTN","PXRMXSE1",182,0)
 .....I CCNT>MCNBD S MCNBDR=1 Q
"RTN","PXRMXSE1",183,0)
 .....S NAME=$P(^DPT(DFN,0),U)
"RTN","PXRMXSE1",184,0)
 .....S LSSN=$E($P(^DPT(DFN,0),U,9),6,9)
"RTN","PXRMXSE1",185,0)
 .....S ^TMP($J,"PXRM CNBD",CCNT,0)=$$RJ^XLFSTR(" ",5)_$$LJ^XLFSTR(NAME,30)_$$RJ^XLFSTR(LSSN,10)
"RTN","PXRMXSE1",186,0)
 ....;Add reminder status to patient list TMP Global
"RTN","PXRMXSE1",187,0)
 ....I STATUS["DUE NOW" S ^TMP($J,"PXRMXPAT",DFN,"REM",ITEM)=ITEM_U_STATUS
"RTN","PXRMXSE1",188,0)
 ....I PXRMREP="D" D SDET^PXRMXDT1(DFN,STATUS,NAM,FACILITY,INP)
"RTN","PXRMXSE1",189,0)
 ....I PXRMREP="S" D SUM^PXRMXDT1(DFN,STATUS,FACILITY,NAM)
"RTN","PXRMXSE1",190,0)
 I $D(^TMP($J,"PXRM CNBD"))>0 D DBDOWN^PXRMXDT1("C")
"RTN","PXRMXSE1",191,0)
 K ^TMP($J,"PXRM CNBD")
"RTN","PXRMXSE1",192,0)
 S END=$H
"RTN","PXRMXSE1",193,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DETIME^PXRMXSL1(START,END,"Evaluating Reminders")
"RTN","PXRMXSE1",194,0)
 ;I PXRMDBUG="Y" D DEBUG("DEBUG PATIENT DATA EVALUATION","DEBUG","^TMP($J,""PXRMDEBUG"")")
"RTN","PXRMXSE1",195,0)
 K ^TMP($J,"PXRM PATIENT EVAL")
"RTN","PXRMXSE1",196,0)
 Q
"RTN","PXRMXSE1",197,0)
 ;
"RTN","PXRMXSEL")
1^4
"RTN","PXRMXSEO")
1^20
"RTN","PXRMXSL1")
0^80^B71901899
"RTN","PXRMXSL1",1,0)
PXRMXSL1 ; SLC/PJH - Process Visits/Appts Reminder Due report;12/09/2005
"RTN","PXRMXSL1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXSL1",3,0)
 ;
"RTN","PXRMXSL1",4,0)
 ; Called from PXRMXSE
"RTN","PXRMXSL1",5,0)
 ;
"RTN","PXRMXSL1",6,0)
TMP(DFN,NAM,FACILITY,INP) ;Update ^TMP("PXRMX"
"RTN","PXRMXSL1",7,0)
 I PXRMFCMB="Y" S FACILITY="COMBINED FACILITIES"
"RTN","PXRMXSL1",8,0)
 I PXRMLCMB="Y" S NAM="COMBINED LOCATIONS"
"RTN","PXRMXSL1",9,0)
 S ^TMP("PXRMX",$J,FACILITY,NAM,DFN)=INP
"RTN","PXRMXSL1",10,0)
 Q
"RTN","PXRMXSL1",11,0)
 ;
"RTN","PXRMXSL1",12,0)
 ;Mark location as found
"RTN","PXRMXSL1",13,0)
MARK(IC) ;
"RTN","PXRMXSL1",14,0)
 S ^XTMP(PXRMXTMP,"MARKED AS FOUND",IC)=""
"RTN","PXRMXSL1",15,0)
 Q
"RTN","PXRMXSL1",16,0)
 ;
"RTN","PXRMXSL1",17,0)
 ;Check if facility is on list, PXMRFACN.
"RTN","PXRMXSL1",18,0)
HFAC(HLOCIEN) ;
"RTN","PXRMXSL1",19,0)
 N DIV,HFAC
"RTN","PXRMXSL1",20,0)
 ;DBIA #2804
"RTN","PXRMXSL1",21,0)
 S HFAC=$P(^SC(HLOCIEN,0),U,4)
"RTN","PXRMXSL1",22,0)
 I HFAC="" S DIV=$P($G(^SC(HLOCIEN,0)),U,15) S:DIV'="" HFAC=$P($G(^DG(40.8,DIV,0)),U,7)
"RTN","PXRMXSL1",23,0)
 I HFAC="" S HFAC=+$P($$SITE^VASITE,U,3)
"RTN","PXRMXSL1",24,0)
 I HFAC="" Q ""
"RTN","PXRMXSL1",25,0)
 I '$D(PXRMFACN(HFAC)) Q ""
"RTN","PXRMXSL1",26,0)
 Q HFAC
"RTN","PXRMXSL1",27,0)
 ;
"RTN","PXRMXSL1",28,0)
INPADM ;
"RTN","PXRMXSL1",29,0)
 ;Build list of inpatients admissions and current patients on a ward
"RTN","PXRMXSL1",30,0)
 N BD,DFN,ED,FACILITY,HIEN,NAM
"RTN","PXRMXSL1",31,0)
 S NAM="All Locations"
"RTN","PXRMXSL1",32,0)
 S HIEN=0
"RTN","PXRMXSL1",33,0)
 F  S HIEN=$O(^XTMP(PXRMXTMP,"HLOC",HIEN)) Q:HIEN'>0  D
"RTN","PXRMXSL1",34,0)
 .S FACILITY=$P(^XTMP(PXRMXTMP,"HLOC",HIEN),U,1)
"RTN","PXRMXSL1",35,0)
 .;Get WARDIEN,WARDNAM and return DFN's in PATS
"RTN","PXRMXSL1",36,0)
 .N PATS
"RTN","PXRMXSL1",37,0)
 .I PXRMFD="C" D WARD^PXRMXAP(HIEN,.PATS)
"RTN","PXRMXSL1",38,0)
 .I PXRMFD="A" D
"RTN","PXRMXSL1",39,0)
 ..; Get admissions from patient movements and return DFN's in PATS
"RTN","PXRMXSL1",40,0)
 ..S BD=PXRMBDT-.0001
"RTN","PXRMXSL1",41,0)
 ..S ED=PXRMEDT+.2359
"RTN","PXRMXSL1",42,0)
 ..D ADM^PXRMXAP(HIEN,.PATS,BD,ED)
"RTN","PXRMXSL1",43,0)
 .;Split report by location
"RTN","PXRMXSL1",44,0)
 .I PXRMLCMB="N" S NAM=$P(^XTMP(PXRMXTMP,"HLOC",HIEN),U,2)
"RTN","PXRMXSL1",45,0)
 .;Build ^TMP for selected patients 
"RTN","PXRMXSL1",46,0)
 .S DFN="",FOUND=0
"RTN","PXRMXSL1",47,0)
 .F  S DFN=$O(PATS(DFN)) Q:DFN=""  D
"RTN","PXRMXSL1",48,0)
 ..S ^TMP($J,"PXRM PATIENT EVAL",DFN)=""
"RTN","PXRMXSL1",49,0)
 ..D TMP(DFN,NAM,FACILITY,HIEN) D MARK(HIEN)
"RTN","PXRMXSL1",50,0)
 Q
"RTN","PXRMXSL1",51,0)
 ;
"RTN","PXRMXSL1",52,0)
BHLOC ;
"RTN","PXRMXSL1",53,0)
 N CLINIEN,END,FACILITY,NAM,HLIEN,I,START
"RTN","PXRMXSL1",54,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSL1",55,0)
 ;All inpatient, outpatient all location credit stop and encounter
"RTN","PXRMXSL1",56,0)
 S START=$H
"RTN","PXRMXSL1",57,0)
 I $P(PXRMLCSC,U)["HA"!($P(PXRMLCSC,U)="CA") D
"RTN","PXRMXSL1",58,0)
 .S HLIEN=0 F  S HLIEN=$O(^SC(HLIEN)) Q:HLIEN'>0  D
"RTN","PXRMXSL1",59,0)
 ..S FACILITY=$$HFAC(HLIEN) I FACILITY'>0 Q
"RTN","PXRMXSL1",60,0)
 ..S NAM=$P(^SC(HLIEN,0),U)
"RTN","PXRMXSL1",61,0)
 ..I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")))&(DBDOWN=0) D SPIN^PXRMXBSY("Building Hospital Locations List",.BUSY)
"RTN","PXRMXSL1",62,0)
 ..;All inpatient location
"RTN","PXRMXSL1",63,0)
 ..I $P(PXRMLCSC,U)="HAI",$D(^SC(HLIEN,42)) S ^XTMP(PXRMXTMP,"HLOC",HLIEN)=FACILITY_U_NAM Q
"RTN","PXRMXSL1",64,0)
 ..;All outpatient locations
"RTN","PXRMXSL1",65,0)
 ..I $P(PXRMLCSC,U)="HA",'$D(^SC(HLIEN,42)) S ^XTMP(PXRMXTMP,"HLOC",HLIEN)=FACILITY_U_NAM Q
"RTN","PXRMXSL1",66,0)
 ..;All encounters with a credit stop
"RTN","PXRMXSL1",67,0)
 ..I $P(PXRMLCSC,U)="CA",$P($G(^SC(HLIEN,0)),U,7)>0 S ^XTMP(PXRMXTMP,"HLOC",HLIEN)=FACILITY_U_NAM Q
"RTN","PXRMXSL1",68,0)
 ;Select hosiptal locations
"RTN","PXRMXSL1",69,0)
 I $P(PXRMLCSC,U,1)="HS" D
"RTN","PXRMXSL1",70,0)
 .S HLIEN=0 F  S HLIEN=$O(PXRMLOCN(HLIEN)) Q:HLIEN'>0  D
"RTN","PXRMXSL1",71,0)
 ..S FACILITY=$$HFAC(HLIEN) I FACILITY'>0 Q
"RTN","PXRMXSL1",72,0)
 ..S NAM=$P(^SC(HLIEN,0),U)
"RTN","PXRMXSL1",73,0)
 ..I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")))&(DBDOWN=0) D SPIN^PXRMXBSY("Building Hospital Locations List",.BUSY)
"RTN","PXRMXSL1",74,0)
 ..S ^XTMP(PXRMXTMP,"HLOC",HLIEN)=FACILITY_U_NAM
"RTN","PXRMXSL1",75,0)
 ;Select Credit Stops
"RTN","PXRMXSL1",76,0)
 I PXRMSEL="L",$P(PXRMLCSC,U)="CS" D
"RTN","PXRMXSL1",77,0)
 .S CLINIEN=0 F  S CLINIEN=$O(PXRMCSN(CLINIEN)) Q:CLINIEN'>0  D
"RTN","PXRMXSL1",78,0)
 ..S HLIEN=0 F  S HLIEN=$O(^SC("AST",CLINIEN,HLIEN)) Q:HLIEN'>0  D
"RTN","PXRMXSL1",79,0)
 ...S FACILITY=$$HFAC(HLIEN) I FACILITY'>0 Q
"RTN","PXRMXSL1",80,0)
 ...S NAM=$P(^DIC(40.7,CLINIEN,0),U)_" "_$P(PXRMCS($G(PXRMCSN(CLINIEN))),U,3)
"RTN","PXRMXSL1",81,0)
 ...I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")))&(DBDOWN=0) D SPIN^PXRMXBSY("Building Hospital Locations List",.BUSY)
"RTN","PXRMXSL1",82,0)
 ...S ^XTMP(PXRMXTMP,"HLOC",HLIEN)=FACILITY_U_NAM_U_$P(PXRMCS($G(PXRMCSN(CLINIEN))),U,3)
"RTN","PXRMXSL1",83,0)
 ;Selected Clinic Groups
"RTN","PXRMXSL1",84,0)
 I PXRMSEL="L",$E(PXRMLCSC)="G" D
"RTN","PXRMXSL1",85,0)
 .S CGRPIEN=0 F  S CGRPIEN=$O(PXRMCGRN(CGRPIEN)) Q:CGRPIEN'>0  D
"RTN","PXRMXSL1",86,0)
 ..S HLIEN=0 F  S HLIEN=$O(^SC("ASCRPW",CGRPIEN,HLIEN)) Q:HLIEN'>0  D
"RTN","PXRMXSL1",87,0)
 ...S FACILITY=$$HFAC(HLIEN) I FACILITY'>0 Q
"RTN","PXRMXSL1",88,0)
 ...I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")))&(DBDOWN=0) D SPIN^PXRMXBSY("Building Hospital Locations List",.BUSY)
"RTN","PXRMXSL1",89,0)
 ...S ^XTMP(PXRMXTMP,"HLOC",HLIEN)=FACILITY_U_$P(^SC(HLIEN,0),U)_U_CGRPIEN
"RTN","PXRMXSL1",90,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DONE^PXRMXBSY("Done")
"RTN","PXRMXSL1",91,0)
 S END=$H
"RTN","PXRMXSL1",92,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DETIME(START,END,"Building Hospital Locations")
"RTN","PXRMXSL1",93,0)
 Q
"RTN","PXRMXSL1",94,0)
 ;
"RTN","PXRMXSL1",95,0)
DETIME(START,END,SECTION) ;
"RTN","PXRMXSL1",96,0)
 N ETIME,TEXT
"RTN","PXRMXSL1",97,0)
 S ETIME=$$HDIFF^XLFDT(END,START,2)
"RTN","PXRMXSL1",98,0)
 I ETIME>90 D
"RTN","PXRMXSL1",99,0)
 . S ETIME=$$HDIFF^XLFDT(END,START,3)
"RTN","PXRMXSL1",100,0)
 . S TEXT="Elapsed time for "_SECTION_": "_ETIME
"RTN","PXRMXSL1",101,0)
 E  S TEXT="Elapsed time for "_SECTION_": "_ETIME_" secs"
"RTN","PXRMXSL1",102,0)
 D MES^XPDUTL(TEXT)
"RTN","PXRMXSL1",103,0)
 Q
"RTN","PXRMXSL1",104,0)
 ;
"RTN","PXRMXSL1",105,0)
OERR ;
"RTN","PXRMXSL1",106,0)
 N CNT,II,NAM,OTM
"RTN","PXRMXSL1",107,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSL1",108,0)
 S II=""
"RTN","PXRMXSL1",109,0)
 ;Get patient list for each team
"RTN","PXRMXSL1",110,0)
 F  S II=$O(PXRMOTM(II)) Q:II=""  D
"RTN","PXRMXSL1",111,0)
 .S OTM=$P(PXRMOTM(II),U),NAM=$P(PXRMOTM(II),U,2)
"RTN","PXRMXSL1",112,0)
 .;Build list of patients for OE/RR team ; DBIA #2692
"RTN","PXRMXSL1",113,0)
 .K ^TMP($J,"OTM")
"RTN","PXRMXSL1",114,0)
 .D TEAMPTS^ORQPTQ1("^TMP($J,""OTM"",",OTM,1)
"RTN","PXRMXSL1",115,0)
 .I $G(^TMP($J,"OTM",1))["No patients found" Q
"RTN","PXRMXSL1",116,0)
 .I PXRMTCMB="Y" N OTM,NAM S OTM="COMBINED",NAM="COMBINED TEAMS"
"RTN","PXRMXSL1",117,0)
 .S CNT=0 F  S CNT=$O(^TMP($J,"OTM",CNT)) Q:CNT'>0  D
"RTN","PXRMXSL1",118,0)
 ..I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")))&(DBDOWN=0) D SPIN^PXRMXBSY("Collecting patients from OE/RR List",.BUSY)
"RTN","PXRMXSL1",119,0)
 ..S DFN=$P(^TMP($J,"OTM",CNT),U)
"RTN","PXRMXSL1",120,0)
 ..D UPD1(DFN,NAM,"FACILITY",II)
"RTN","PXRMXSL1",121,0)
 .D MARK(OTM)
"RTN","PXRMXSL1",122,0)
 K ^TMP($J,"OTM")
"RTN","PXRMXSL1",123,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DONE^PXRMXBSY("Done")
"RTN","PXRMXSL1",124,0)
 I PXRMREP="D",$D(^TMP($J,"PXRM PATIENT EVAL"))>0 D SDAM301^PXRMXSL2(DT,"",PXRMSEL,PXRMFD,PXRMREP)
"RTN","PXRMXSL1",125,0)
 Q
"RTN","PXRMXSL1",126,0)
 ;
"RTN","PXRMXSL1",127,0)
 ;PCMM provider selected
"RTN","PXRMXSL1",128,0)
PCMMP ;
"RTN","PXRMXSL1",129,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSL1",130,0)
 N CNT,SCDT,LIST,SCERR,SCLIST,II,PCM,NAM,PNAM,PXRM,OK
"RTN","PXRMXSL1",131,0)
 S SCDT("BEGIN")=PXRMSDT,SCDT("END")=PXRMSDT
"RTN","PXRMXSL1",132,0)
 ;Include patient if in team on any day in range
"RTN","PXRMXSL1",133,0)
 S SCDT("INCL")=0
"RTN","PXRMXSL1",134,0)
 S II=""
"RTN","PXRMXSL1",135,0)
 ;Get patient list for each PROVIDER
"RTN","PXRMXSL1",136,0)
 F  S II=$O(PXRMPRV(II)) Q:II=""  D
"RTN","PXRMXSL1",137,0)
 .S PCM=$P(PXRMPRV(II),U),NAM=$P(PXRMPRV(II),U,2)
"RTN","PXRMXSL1",138,0)
 .;Get patients for practs. roles - excluding assoc clinics
"RTN","PXRMXSL1",139,0)
 .K ^TMP($J,"PCM")
"RTN","PXRMXSL1",140,0)
 .N SCTEAM D PTPR^PXRMXAP(PCM,PXRMREP)
"RTN","PXRMXSL1",141,0)
 .I $O(^TMP($J,"PCM",0))="" Q
"RTN","PXRMXSL1",142,0)
 .;Save in ^TMP in alpha order within team number (internal)
"RTN","PXRMXSL1",143,0)
 .S CNT=0 F  S CNT=$O(^TMP($J,"PCM",CNT)) Q:CNT'>0  D
"RTN","PXRMXSL1",144,0)
 ..S DFN=$P(^TMP($J,"PCM",CNT),U)
"RTN","PXRMXSL1",145,0)
 ..I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")))&(DBDOWN=0) D SPIN^PXRMXBSY("Collecting patients from Primary Provider List",.BUSY)
"RTN","PXRMXSL1",146,0)
 ..I PXRMPRIM="P",($$PCASSIGN^PXRMXAP(DFN)'=1) Q
"RTN","PXRMXSL1",147,0)
 ..;For detailed provider report get assoc clinic
"RTN","PXRMXSL1",148,0)
 ..I PXRMREP="D" S DCLN=$P(^TMP($J,"PCM",CNT),U,7) I $G(DCLN)'="" S ^XTMP(PXRMXTMP,"HLOC",DCLN)=""
"RTN","PXRMXSL1",149,0)
 ..I $G(DCLN)'="" S PXRMDCLN(DCLN)=""
"RTN","PXRMXSL1",150,0)
 ..D UPD1(DFN,NAM,"FACILITY",+$G(DCLN))
"RTN","PXRMXSL1",151,0)
 .D MARK(PCM)
"RTN","PXRMXSL1",152,0)
 K ^TMP($J,"PCM")
"RTN","PXRMXSL1",153,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DONE^PXRMXBSY("Done")
"RTN","PXRMXSL1",154,0)
 I PXRMREP="D",$D(^TMP($J,"PXRM PATIENT EVAL"))>0 D SDAM301^PXRMXSL2(DT,"",PXRMSEL,PXRMFD,PXRMREP)
"RTN","PXRMXSL1",155,0)
 Q
"RTN","PXRMXSL1",156,0)
 ;
"RTN","PXRMXSL1",157,0)
 ;PCMM team selected
"RTN","PXRMXSL1",158,0)
PCMMT ;
"RTN","PXRMXSL1",159,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSL1",160,0)
 N CNT,SCDT,LIST,SCERR,SCLIST,II,PCM,NAM,PNAM,OK
"RTN","PXRMXSL1",161,0)
 S SCDT("BEGIN")=PXRMSDT,SCDT("END")=PXRMSDT
"RTN","PXRMXSL1",162,0)
 ;Include patient if in team on any day in range
"RTN","PXRMXSL1",163,0)
 S SCDT("INCL")=0
"RTN","PXRMXSL1",164,0)
 S II=""
"RTN","PXRMXSL1",165,0)
 ;Get patient list for each team
"RTN","PXRMXSL1",166,0)
 F  S II=$O(PXRMPCM(II)) Q:II=""  D
"RTN","PXRMXSL1",167,0)
 .S PCM=$P(PXRMPCM(II),U),NAM=$P(PXRMPCM(II),U,2)
"RTN","PXRMXSL1",168,0)
 .K ^TMP($J,"PCM")
"RTN","PXRMXSL1",169,0)
 .S OK=$$PTTM^PXRMXAP(PCM,.SCERR) Q:'OK
"RTN","PXRMXSL1",170,0)
 .I $O(^TMP($J,"PCM",0))="" Q
"RTN","PXRMXSL1",171,0)
 .S FACILITY=$$FAC^PXRMXAP(PCM)
"RTN","PXRMXSL1",172,0)
 .S CNT=0 F  S CNT=$O(^TMP($J,"PCM",CNT)) Q:CNT'>0  D
"RTN","PXRMXSL1",173,0)
 ..S DFN=$P(^TMP($J,"PCM",CNT),U)
"RTN","PXRMXSL1",174,0)
 ..I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")))&(DBDOWN=0) D SPIN^PXRMXBSY("Collecting patients from PCMM Team List",.BUSY)
"RTN","PXRMXSL1",175,0)
 ..D UPD1(DFN,NAM,FACILITY,II)
"RTN","PXRMXSL1",176,0)
 .D MARK(PCM)
"RTN","PXRMXSL1",177,0)
 K ^TMP($J,"PCM")
"RTN","PXRMXSL1",178,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DONE^PXRMXBSY("Done")
"RTN","PXRMXSL1",179,0)
 I PXRMREP="D",$D(^TMP($J,"PXRM PATIENT EVAL"))>0 D SDAM301^PXRMXSL2(DT,"",PXRMSEL,PXRMFD,PXRMREP)
"RTN","PXRMXSL1",180,0)
 Q
"RTN","PXRMXSL1",181,0)
 ;
"RTN","PXRMXSL1",182,0)
 ;Individual Patients selected
"RTN","PXRMXSL1",183,0)
IND ;
"RTN","PXRMXSL1",184,0)
 N CNT,DFN,DUMMY,LIST,NAM
"RTN","PXRMXSL1",185,0)
 S (DUMMY,NAM)="PATIENT"
"RTN","PXRMXSL1",186,0)
 S CNT=0 F  S CNT=$O(PXRMPAT(CNT)) Q:CNT'>0  D
"RTN","PXRMXSL1",187,0)
 .S DFN=$P(PXRMPAT(CNT),U)
"RTN","PXRMXSL1",188,0)
 .D UPD1(DFN,"INDIVIDUAL PATIENTS","FACILITY",DFN)
"RTN","PXRMXSL1",189,0)
 I PXRMREP="D",$D(^TMP($J,"PXRM PATIENT EVAL"))>0 D SDAM301^PXRMXSL2(DT,"",PXRMSEL,PXRMFD,PXRMREP)
"RTN","PXRMXSL1",190,0)
 Q
"RTN","PXRMXSL1",191,0)
 ;
"RTN","PXRMXSL1",192,0)
 ;Patient lists selected
"RTN","PXRMXSL1",193,0)
LIST ;
"RTN","PXRMXSL1",194,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSL1",195,0)
 N DFN,DSUB,DUMMY,LCNT,LIEN,LIST,NAM
"RTN","PXRMXSL1",196,0)
 S (DUMMY,NAM)="PATIENT",LCNT=0
"RTN","PXRMXSL1",197,0)
 F  S LCNT=$O(PXRMLIST(LCNT)) Q:'LCNT  D
"RTN","PXRMXSL1",198,0)
 .S LIEN=$P(PXRMLIST(LCNT),U) Q:'LIEN
"RTN","PXRMXSL1",199,0)
 .S NAM=$P(^PXRMXP(810.5,LIEN,0),U)
"RTN","PXRMXSL1",200,0)
 .S DSUB=0
"RTN","PXRMXSL1",201,0)
 .F  S DSUB=$O(^PXRMXP(810.5,LIEN,30,DSUB)) Q:'DSUB  D
"RTN","PXRMXSL1",202,0)
 ..S DFN=$P($G(^PXRMXP(810.5,LIEN,30,DSUB,0)),U) Q:'DFN
"RTN","PXRMXSL1",203,0)
 ..I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")))&(DBDOWN=0) D SPIN^PXRMXBSY("Collecting patients from Reminder Patient List",.BUSY)
"RTN","PXRMXSL1",204,0)
 ..D UPD1(DFN,NAM,"FACILITY",LIEN)
"RTN","PXRMXSL1",205,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DONE^PXRMXBSY("Done")
"RTN","PXRMXSL1",206,0)
 I PXRMREP="D",$D(^TMP($J,"PXRM PATIENT EVAL"))>0 D SDAM301^PXRMXSL2(DT,"",PXRMSEL,PXRMFD,PXRMREP)
"RTN","PXRMXSL1",207,0)
 Q
"RTN","PXRMXSL1",208,0)
 ;
"RTN","PXRMXSL1",209,0)
UPD1(DFN,NAM,FACILITY,INP) ;
"RTN","PXRMXSL1",210,0)
 ;Remove test patients.
"RTN","PXRMXSL1",211,0)
 I 'PXRMTPAT,$$TESTPAT^VADPT(DFN)=1 Q
"RTN","PXRMXSL1",212,0)
 ;Remove patients that are deceased.
"RTN","PXRMXSL1",213,0)
 I 'PXRMDPAT,$P($G(^DPT(DFN,.35)),U,1)>0 Q
"RTN","PXRMXSL1",214,0)
 S ^TMP($J,"PXRM PATIENT LIST",DFN)=""
"RTN","PXRMXSL1",215,0)
 S ^TMP($J,"PXRM PATIENT EVAL",DFN)=""
"RTN","PXRMXSL1",216,0)
 D TMP(DFN,NAM,FACILITY,INP)
"RTN","PXRMXSL1",217,0)
 Q
"RTN","PXRMXSL1",218,0)
 ;
"RTN","PXRMXSL2")
0^81^B44572298
"RTN","PXRMXSL2",1,0)
PXRMXSL2 ; SLC/AGP - Process Visits/Appts Reminder Due report; 06/07/2006
"RTN","PXRMXSL2",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXSL2",3,0)
 ;
"RTN","PXRMXSL2",4,0)
APPTS ;
"RTN","PXRMXSL2",5,0)
 ;Call to SDAMA301 for future appointments
"RTN","PXRMXSL2",6,0)
 N APPTDT,BDT,EDT,NODE,DFN,FACILITY,HLIEN,NAM
"RTN","PXRMXSL2",7,0)
 S NAM="All Locations"
"RTN","PXRMXSL2",8,0)
 I PXRMBDT["." S BDT=PXRMBDT
"RTN","PXRMXSL2",9,0)
 E  S BDT=PXRMBDT-.0001
"RTN","PXRMXSL2",10,0)
 I PXRMEDT["." S EDT=PXRMEDT
"RTN","PXRMXSL2",11,0)
 E  S EDT=PXRMEDT+.2359
"RTN","PXRMXSL2",12,0)
 D SDAM301(BDT,EDT,PXRMSEL,PXRMFD,PXRMREP)
"RTN","PXRMXSL2",13,0)
 I DBDOWN=1 Q
"RTN","PXRMXSL2",14,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN'>0!(ZTSTOP=1)  D
"RTN","PXRMXSL2",15,0)
 .;Remove test patients.
"RTN","PXRMXSL2",16,0)
 .I 'PXRMTPAT,$$TESTPAT^VADPT(DFN)=1 Q
"RTN","PXRMXSL2",17,0)
 .;Remove patients that are deceased.
"RTN","PXRMXSL2",18,0)
 .I 'PXRMDPAT,$P($G(^DPT(DFN,.35)),U,1)>0 Q
"RTN","PXRMXSL2",19,0)
 .S APPTDT=0 F  S APPTDT=$O(^TMP($J,"SDAMA301",DFN,APPTDT)) Q:APPTDT'>0!(ZTSTOP=1)  D
"RTN","PXRMXSL2",20,0)
 ..S NODE=$G(^TMP($J,"SDAMA301",DFN,APPTDT))
"RTN","PXRMXSL2",21,0)
 ..S HLIEN=$P($P(NODE,U,2),";")
"RTN","PXRMXSL2",22,0)
 ..S FACILITY=$P(^XTMP(PXRMXTMP,"HLOC",HLIEN),U,1)
"RTN","PXRMXSL2",23,0)
 ..S NAM=$P(^XTMP(PXRMXTMP,"HLOC",HLIEN),U,2)
"RTN","PXRMXSL2",24,0)
 ..I PXRMREP="D" D
"RTN","PXRMXSL2",25,0)
 ...S ^TMP($J,"PXRM FUTURE APPT",DFN,HLIEN,APPTDT)=NODE
"RTN","PXRMXSL2",26,0)
 ...S ^TMP($J,"PXRM FACILITY FUTURE APPT",DFN,FACILITY,APPTDT)=NODE
"RTN","PXRMXSL2",27,0)
 ..I $$S^%ZTLOAD S ZTSTOP=1 Q
"RTN","PXRMXSL2",28,0)
 ..D TMP^PXRMXSL1(DFN,NAM,FACILITY,HLIEN),MARK^PXRMXSL1(HLIEN)
"RTN","PXRMXSL2",29,0)
 ..S ^TMP($J,"PXRM PATIENT EVAL",DFN)=""
"RTN","PXRMXSL2",30,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXRMXSL2",31,0)
 Q
"RTN","PXRMXSL2",32,0)
 ;
"RTN","PXRMXSL2",33,0)
GETHFAC(HLOCIEN) ;
"RTN","PXRMXSL2",34,0)
 N DIV,HFAC
"RTN","PXRMXSL2",35,0)
 ;DBIA #2804
"RTN","PXRMXSL2",36,0)
 S HFAC=$P(^SC(HLOCIEN,0),U,4)
"RTN","PXRMXSL2",37,0)
 I HFAC="" S DIV=$P($G(^SC(HLOCIEN,0)),U,15) S:DIV'="" HFAC=$P($G(^DG(40.8,DIV,0)),U,7)
"RTN","PXRMXSL2",38,0)
 I HFAC="" S HFAC=+$P($$SITE^VASITE,U,3)
"RTN","PXRMXSL2",39,0)
 Q +HFAC
"RTN","PXRMXSL2",40,0)
 ;
"RTN","PXRMXSL2",41,0)
SDAM301(BD,ED,PXRMSEL,PXRMFD,PXRMREP) ;
"RTN","PXRMXSL2",42,0)
 N ARRAY,BUSY,FACILITY,NAM,OPIEN,STATUS
"RTN","PXRMXSL2",43,0)
 K ^TMP($J,"PXRM FUTURE APPT")
"RTN","PXRMXSL2",44,0)
 K ^TMP($J,"PXRM FACILITY FUTURE APPT")
"RTN","PXRMXSL2",45,0)
 ;
"RTN","PXRMXSL2",46,0)
 I ED'>0 S ARRAY(1)=BD
"RTN","PXRMXSL2",47,0)
 I ED>0 S ARRAY(1)=BD_";"_ED
"RTN","PXRMXSL2",48,0)
 I PXRMREP="D",PXRMSEL="L",PXRMFD="P" S ARRAY(1)=BD
"RTN","PXRMXSL2",49,0)
 ;
"RTN","PXRMXSL2",50,0)
 I $D(^XTMP(PXRMXTMP,"HLOC"))>0 S ARRAY(2)="^XTMP(PXRMXTMP,""HLOC"","
"RTN","PXRMXSL2",51,0)
 ;S ARRAY(3)=$S(PXRMFD="P":"R;I;NS;NSR;CP;CPR;CC;CCR;NT",1:"R;I")
"RTN","PXRMXSL2",52,0)
 S ARRAY(3)=$S(PXRMFD="P":"R;I",1:"R;I;NT")
"RTN","PXRMXSL2",53,0)
 I $D(^TMP($J,"PXRM PATIENT LIST"))>0 S ARRAY(4)="^TMP($J,""PXRM PATIENT LIST"""
"RTN","PXRMXSL2",54,0)
 S ARRAY("FLDS")="1;2;3;10;12;13;14;22"
"RTN","PXRMXSL2",55,0)
 I $D(^TMP($J,"PXRM PATIENT LIST"))=0 S ARRAY("SORT")="P"
"RTN","PXRMXSL2",56,0)
 ;
"RTN","PXRMXSL2",57,0)
 N END,START,BUSY
"RTN","PXRMXSL2",58,0)
 S START=$H
"RTN","PXRMXSL2",59,0)
 S BUSY=0
"RTN","PXRMXSL2",60,0)
 ;DBIA #4433
"RTN","PXRMXSL2",61,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSL2",62,0)
 I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y"))) D SPIN^PXRMXBSY("Calling the scheduling package to gather appointment data",.BUSY)
"RTN","PXRMXSL2",63,0)
 S COUNT=$$SDAPI^SDAMA301(.ARRAY)
"RTN","PXRMXSL2",64,0)
 S END=$H
"RTN","PXRMXSL2",65,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DETIME^PXRMXSL1(START,END,"Total amount of time to call the Scheduling Package")
"RTN","PXRMXSL2",66,0)
 I COUNT<0 D  Q
"RTN","PXRMXSL2",67,0)
 .N CNT
"RTN","PXRMXSL2",68,0)
 .S DBDOWN=1,CNT=0
"RTN","PXRMXSL2",69,0)
 .F  S CNT=$O(^TMP($J,"SDAMA301",CNT)) Q:CNT'>0  D
"RTN","PXRMXSL2",70,0)
 ..S DBERR(CNT)=$G(^TMP($J,"SDAMA301",CNT))
"RTN","PXRMXSL2",71,0)
 .D DBDOWN^PXRMXDT1("E")
"RTN","PXRMXSL2",72,0)
 ;
"RTN","PXRMXSL2",73,0)
LOOP ;
"RTN","PXRMXSL2",74,0)
 I PXRMFD'="P"!(PXRMSEL'="L") Q
"RTN","PXRMXSL2",75,0)
 N APPTDT,CIEN,DFN,FUTDT,NODE,VIEN
"RTN","PXRMXSL2",76,0)
 ;LOOP THROUGH PATIENT
"RTN","PXRMXSL2",77,0)
 S START=$H
"RTN","PXRMXSL2",78,0)
 S BUSY=0
"RTN","PXRMXSL2",79,0)
 S FUTDT=$S(DT>$P(ED,"."):DT,1:$P(ED,"."))
"RTN","PXRMXSL2",80,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D SPIN^PXRMXBSY("Sorting SDAMA301 Output",.BUSY)
"RTN","PXRMXSL2",81,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN'>0  D
"RTN","PXRMXSL2",82,0)
 .;
"RTN","PXRMXSL2",83,0)
 .;LOOP THROUGH CLINICS
"RTN","PXRMXSL2",84,0)
 .S CIEN=0
"RTN","PXRMXSL2",85,0)
 .F  S CIEN=$O(^TMP($J,"SDAMA301",DFN,CIEN)) Q:CIEN'>0  D
"RTN","PXRMXSL2",86,0)
 ..S APPTDT=0
"RTN","PXRMXSL2",87,0)
 ..F  S APPTDT=$O(^TMP($J,"SDAMA301",DFN,CIEN,APPTDT)) Q:APPTDT'>0  D
"RTN","PXRMXSL2",88,0)
 ...I PXRMREP="S",$P(APPTDT,".")>$P(ED,".") Q
"RTN","PXRMXSL2",89,0)
 ...S NODE=$G(^TMP($J,"SDAMA301",DFN,CIEN,APPTDT))
"RTN","PXRMXSL2",90,0)
 ...;S STATUS=$P($P(NODE,U,3),";")
"RTN","PXRMXSL2",91,0)
 ...;I ($P(ED,".")+1)>($P(APPTDT,".")),STATUS'="I",STATUS'="R",STATUS'="NT" D
"RTN","PXRMXSL2",92,0)
 ...;.K ^TMP($J,"PXRM PATIENT LIST",DFN,CIEN,APPTDT)
"RTN","PXRMXSL2",93,0)
 ...;
"RTN","PXRMXSL2",94,0)
 ...;if report is detailed report store future appointment
"RTN","PXRMXSL2",95,0)
 ...I $P(APPTDT,".")>FUTDT D
"RTN","PXRMXSL2",96,0)
 ....S ^TMP($J,"PXRM FUTURE APPT",DFN,CIEN,APPTDT)=NODE
"RTN","PXRMXSL2",97,0)
 ....S ^TMP($J,"PXRM FACILITY FUTURE APPT",DFN,$$GETHFAC(CIEN),APPTDT)=NODE
"RTN","PXRMXSL2",98,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXRMXSL2",99,0)
 S END=$H
"RTN","PXRMXSL2",100,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DONE^PXRMXBSY("Done")
"RTN","PXRMXSL2",101,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DETIME^PXRMXSL1(START,END,"Sorting SDAMA301 Output")
"RTN","PXRMXSL2",102,0)
 Q
"RTN","PXRMXSL2",103,0)
 ;
"RTN","PXRMXSL2",104,0)
 ;Scan visit file to build list of patients
"RTN","PXRMXSL2",105,0)
VISITS ;
"RTN","PXRMXSL2",106,0)
 N BTIME,DAS,DATE,DEND,DFN,DONE,DS,ETIME,HLOC,INVBD,INVDATE,INVDT,INVED
"RTN","PXRMXSL2",107,0)
 N NFOUND,SC,TEMP,TGLIST,TIME
"RTN","PXRMXSL2",108,0)
 N DOD,START,END
"RTN","PXRMXSL2",109,0)
 S START=$H
"RTN","PXRMXSL2",110,0)
 K ^TMP($J,"PXRM PATIENT LIST")
"RTN","PXRMXSL2",111,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSL2",112,0)
 S DEND=$S(PXRMEDT[".":PXRMEDT,1:PXRMEDT+.240001)
"RTN","PXRMXSL2",113,0)
 ;"AHL" in Visit file is inverse date_.time instead of a full inverse
"RTN","PXRMXSL2",114,0)
 ;date and time. For example if the date/time is 3030704.104449 then
"RTN","PXRMXSL2",115,0)
 ;"AHL" has 6969295.104449 instead of 6969295.89555
"RTN","PXRMXSL2",116,0)
 S INVBD=9999999-$P(PXRMBDT,".",1),BTIME=+("."_$P(PXRMBDT,".",2))
"RTN","PXRMXSL2",117,0)
 S INVED=9999999-$P(DEND,".",1),ETIME=+("."_$P(DEND,".",2))
"RTN","PXRMXSL2",118,0)
 S DS=INVED-1
"RTN","PXRMXSL2",119,0)
 S HLOC=""
"RTN","PXRMXSL2",120,0)
 F  S HLOC=$O(^XTMP(PXRMXTMP,"HLOC",HLOC)) Q:HLOC=""  D
"RTN","PXRMXSL2",121,0)
 . S INVDT=DS,DONE=0
"RTN","PXRMXSL2",122,0)
 . F  S INVDT=$O(^AUPNVSIT("AHL",HLOC,INVDT)) Q:(DONE)!(INVDT="")  D
"RTN","PXRMXSL2",123,0)
 ..I $$S^%ZTLOAD S ZTSTOP=1 Q
"RTN","PXRMXSL2",124,0)
 ..I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")))&(DBDOWN=0) D SPIN^PXRMXBSY("Building Patient List",.BUSY)
"RTN","PXRMXSL2",125,0)
 .. S INVDATE=$P(INVDT,".",1)
"RTN","PXRMXSL2",126,0)
 .. I INVDATE>INVBD S DONE=1 Q
"RTN","PXRMXSL2",127,0)
 .. S TIME=+("."_$P(INVDT,".",2))
"RTN","PXRMXSL2",128,0)
 .. I INVDATE=INVED,TIME>ETIME Q
"RTN","PXRMXSL2",129,0)
 .. I INVDATE=INVBD,BTIME>TIME S DONE=1 Q
"RTN","PXRMXSL2",130,0)
 .. S DAS=0
"RTN","PXRMXSL2",131,0)
 .. F  S DAS=$O(^AUPNVSIT("AHL",HLOC,INVDT,DAS)) Q:DAS=""  D
"RTN","PXRMXSL2",132,0)
 ... S TEMP=^AUPNVSIT(DAS,0)
"RTN","PXRMXSL2",133,0)
 ... I $$VAPSTAT^PXRMVSIT(DAS)=0 Q
"RTN","PXRMXSL2",134,0)
 ... S SC=$P(TEMP,U,7)
"RTN","PXRMXSL2",135,0)
 ... I SC="" Q
"RTN","PXRMXSL2",136,0)
 ... I '$D(PXRMSCAT(SC)) Q
"RTN","PXRMXSL2",137,0)
 ... S DFN=$P(TEMP,U,5)
"RTN","PXRMXSL2",138,0)
 ... ;Remove Test Patients
"RTN","PXRMXSL2",139,0)
 ... I 'PXRMTPAT,$$TESTPAT^VADPT(DFN)=1 Q
"RTN","PXRMXSL2",140,0)
 ... ;Remove Patient that are deceased
"RTN","PXRMXSL2",141,0)
 ... I 'PXRMDPAT,$P($G(^DPT(DFN,.35)),U,1)>0 Q
"RTN","PXRMXSL2",142,0)
 ... S DATE=$P(TEMP,U,1)
"RTN","PXRMXSL2",143,0)
 ... S ^TMP($J,"PXRM PATIENT LIST",DFN,HLOC,DATE,DAS)=""
"RTN","PXRMXSL2",144,0)
 S END=$H
"RTN","PXRMXSL2",145,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DONE^PXRMXBSY("Done")
"RTN","PXRMXSL2",146,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DETIME^PXRMXSL1(START,END,"Building Patient List")
"RTN","PXRMXSL2",147,0)
 D SDAM301(PXRMBDT-.0001,PXRMEDT,PXRMSEL,PXRMFD,PXRMREP)
"RTN","PXRMXSL2",148,0)
 ;
"RTN","PXRMXSL2",149,0)
 I DBDOWN=1 Q
"RTN","PXRMXSL2",150,0)
 S START=$H
"RTN","PXRMXSL2",151,0)
 S BUSY=0
"RTN","PXRMXSL2",152,0)
 I DBDOWN=1 Q
"RTN","PXRMXSL2",153,0)
 N NODE
"RTN","PXRMXSL2",154,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSL2",155,0)
 N DFN,HLIEN,NAM,FACILITY,LSEL,TEMP
"RTN","PXRMXSL2",156,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"PXRM PATIENT LIST",DFN)) Q:DFN'>0  D
"RTN","PXRMXSL2",157,0)
 .S HLIEN=0
"RTN","PXRMXSL2",158,0)
 .F  S HLIEN=$O(^TMP($J,"PXRM PATIENT LIST",DFN,HLIEN)) Q:HLIEN'>0  D
"RTN","PXRMXSL2",159,0)
 ..I ('(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")))&(DBDOWN=0) D SPIN^PXRMXBSY("Removing Invalid Encounter(s)",.BUSY)
"RTN","PXRMXSL2",160,0)
 ..S NODE=$G(^XTMP(PXRMXTMP,"HLOC",HLIEN))
"RTN","PXRMXSL2",161,0)
 ..S FACILITY=$P(NODE,U),NAM=$P(NODE,U,2)
"RTN","PXRMXSL2",162,0)
 ..D TMP^PXRMXSL1(DFN,NAM,FACILITY,HLIEN)
"RTN","PXRMXSL2",163,0)
 ..S TEMP=$P(PXRMLCSC,U,1)
"RTN","PXRMXSL2",164,0)
 ..S LSEL=$S(TEMP="CS":$P(NODE,U,3),TEMP="GS":$P(NODE,U,3),1:HLIEN)
"RTN","PXRMXSL2",165,0)
 ..D MARK^PXRMXSL1(LSEL)
"RTN","PXRMXSL2",166,0)
 ..S ^TMP($J,"PXRM PATIENT EVAL",DFN)=""
"RTN","PXRMXSL2",167,0)
 S END=$H
"RTN","PXRMXSL2",168,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DONE^PXRMXBSY("Done")
"RTN","PXRMXSL2",169,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) D DETIME^PXRMXSL1(START,END,"Removing Invalid Encounter(s)")
"RTN","PXRMXSL2",170,0)
 Q
"RTN","PXRMXSU")
0^132^B67359624
"RTN","PXRMXSU",1,0)
PXRMXSU ; SLC/PJH - Reminder Reports DIC Prompts;01/06/2006
"RTN","PXRMXSU",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXSU",3,0)
 ;
"RTN","PXRMXSU",4,0)
 ;Called by PXRMXD
"RTN","PXRMXSU",5,0)
 ;
"RTN","PXRMXSU",6,0)
 ;Exits from SEL subroutine
"RTN","PXRMXSU",7,0)
QUIT() I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","PXRMXSU",8,0)
 ;Only one entry allowed
"RTN","PXRMXSU",9,0)
 I ONE="D",(CNT>0) Q 1
"RTN","PXRMXSU",10,0)
 ;Mandatory entry
"RTN","PXRMXSU",11,0)
 I Y=-1,(CHECK=3)!(CNT>0) Q 1
"RTN","PXRMXSU",12,0)
 ;Categories may already contain reminders
"RTN","PXRMXSU",13,0)
 I Y=-1,CHECK=2,$D(REMCAT) Q 1
"RTN","PXRMXSU",14,0)
 ;Otherwise
"RTN","PXRMXSU",15,0)
 Q 0
"RTN","PXRMXSU",16,0)
 ;
"RTN","PXRMXSU",17,0)
 ;Repeated Prompt using DIC
"RTN","PXRMXSU",18,0)
 ;-------------------------
"RTN","PXRMXSU",19,0)
SEL(FILE,MODE,CNT,ARRAY,ONE,CHECK) ;
"RTN","PXRMXSU",20,0)
 ;
"RTN","PXRMXSU",21,0)
 ; ONE   = only allows one entry
"RTN","PXRMXSU",22,0)
 ; CHECK = number or null - validation of facility
"RTN","PXRMXSU",23,0)
 ;
"RTN","PXRMXSU",24,0)
 N X,Y,ARRAYN
"RTN","PXRMXSU",25,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSU",26,0)
 W !
"RTN","PXRMXSU",27,0)
 F  D  Q:$$QUIT
"RTN","PXRMXSU",28,0)
 .S DIC=FILE,DIC(0)=MODE
"RTN","PXRMXSU",29,0)
 .; Set up ^DIC("S") for duplicate check
"RTN","PXRMXSU",30,0)
 .S DIC("S")="I '$D(ARRAYN(+Y))"
"RTN","PXRMXSU",31,0)
 .I CHECK=1 D FACT^PXRMXAP
"RTN","PXRMXSU",32,0)
 .I CHECK=2 S DIC("S")=DIC("S")_",'(+$P(^(0),U,6))"
"RTN","PXRMXSU",33,0)
 .I CHECK=3 S DIC("S")=DIC("S")_",$$OK^PXRMXS1(+Y)"
"RTN","PXRMXSU",34,0)
 .I CHECK=4 S DIC("S")=DIC("S")_",$P($G(^PXRMXP(810.5,+Y,30,0)),U,3)>0"
"RTN","PXRMXSU",35,0)
 .I CHECK=5 S DIC("S")=DIC("S")_",$P($G(^OR(100.21,+Y,10,0)),U,3)>0"
"RTN","PXRMXSU",36,0)
 .I CNT>0 S DIC("A")=LIT
"RTN","PXRMXSU",37,0)
 .D ^DIC
"RTN","PXRMXSU",38,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMXSU",39,0)
 .I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMXSU",40,0)
 .I +Y'=-1 D  Q
"RTN","PXRMXSU",41,0)
 ..I $D(ARRAYN(+Y)) W !,"Error - Duplicate entry" Q
"RTN","PXRMXSU",42,0)
 ..S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMXSU",43,0)
 ..S ARRAYN(+Y)=""
"RTN","PXRMXSU",44,0)
 .I CNT=0,'$$QUIT W !,LIT1
"RTN","PXRMXSU",45,0)
 .K DIC
"RTN","PXRMXSU",46,0)
 Q
"RTN","PXRMXSU",47,0)
 ;
"RTN","PXRMXSU",48,0)
 ;Establish the LOCATION criteria
"RTN","PXRMXSU",49,0)
LOC(ADEF,BDEF) ;
"RTN","PXRMXSU",50,0)
 N X,Y,DIR
"RTN","PXRMXSU",51,0)
LOC0 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSU",52,0)
 S DIR(0)="S"_U_"HA:All Outpatient Locations;"
"RTN","PXRMXSU",53,0)
 S DIR(0)=DIR(0)_"HAI:All Inpatient Locations;"
"RTN","PXRMXSU",54,0)
 S DIR(0)=DIR(0)_"HS:Selected Hospital Locations;"
"RTN","PXRMXSU",55,0)
 S DIR(0)=DIR(0)_"CA:All Clinic Stops(with encounters);"
"RTN","PXRMXSU",56,0)
 S DIR(0)=DIR(0)_"CS:Selected Clinic Stops;"
"RTN","PXRMXSU",57,0)
 S DIR(0)=DIR(0)_"GS:Selected Clinic Groups;"
"RTN","PXRMXSU",58,0)
 S DIR("A")=ADEF
"RTN","PXRMXSU",59,0)
 S DIR("B")=BDEF
"RTN","PXRMXSU",60,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSU",61,0)
 S DIR("??")=U_"D HELP^PXRMXHLP(8)"
"RTN","PXRMXSU",62,0)
 D ^DIR K DIR
"RTN","PXRMXSU",63,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSU",64,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSU",65,0)
 S PXRMLCSC=Y_U_Y(0)
"RTN","PXRMXSU",66,0)
 ;If locations are to be selected individually get the list.
"RTN","PXRMXSU",67,0)
 I Y="HS" D HLOC Q:$D(DTOUT)  G:$D(DUOUT) LOC0
"RTN","PXRMXSU",68,0)
 I Y="CS" D CSTOP Q:$D(DTOUT)  G:$D(DUOUT) LOC0
"RTN","PXRMXSU",69,0)
 I Y="GS" D CGRP(.PXRMCGRP) Q:$D(DTOUT)  G:$D(DUOUT) LOC0
"RTN","PXRMXSU",70,0)
 Q
"RTN","PXRMXSU",71,0)
 ;
"RTN","PXRMXSU",72,0)
 ;Build a list of hospital locations
"RTN","PXRMXSU",73,0)
HLOC N IEN,SC,X,Y,CHECK
"RTN","PXRMXSU",74,0)
 K DTOUT,DUOUT
"RTN","PXRMXSU",75,0)
 S NHL=0
"RTN","PXRMXSU",76,0)
 S DIC("A")="LOCATION: "
"RTN","PXRMXSU",77,0)
 W !
"RTN","PXRMXSU",78,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:(Y=-1)&(NHL>0)
"RTN","PXRMXSU",79,0)
 .S DIC="^SC("
"RTN","PXRMXSU",80,0)
 .S DIC(0)="AEQMZ"
"RTN","PXRMXSU",81,0)
 .I NHL>0 S DIC("A")="Select another LOCATION: "
"RTN","PXRMXSU",82,0)
 .D ^DIC
"RTN","PXRMXSU",83,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMXSU",84,0)
 .I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSU",85,0)
 .I +Y'=-1 D
"RTN","PXRMXSU",86,0)
 ..S IEN=$P(Y,U,1)
"RTN","PXRMXSU",87,0)
 ..;Check Facility code
"RTN","PXRMXSU",88,0)
 ..N FACILITY S FACILITY=$$FACL^PXRMXAP(IEN)
"RTN","PXRMXSU",89,0)
 ..I FACILITY="" W !,"Location has no facility code" Q
"RTN","PXRMXSU",90,0)
 ..I '$D(PXRMFACN(FACILITY)) D  Q
"RTN","PXRMXSU",91,0)
 ...W !,"Location has a different facility code" Q
"RTN","PXRMXSU",92,0)
 ..;Check for duplicates
"RTN","PXRMXSU",93,0)
 ..I (NHL>0),$$DUP(IEN,.PXRMLCHL,2) W !,"Error - Duplicate entry" Q
"RTN","PXRMXSU",94,0)
 ..S NHL=NHL+1
"RTN","PXRMXSU",95,0)
 ..;Get the stop code.
"RTN","PXRMXSU",96,0)
 ..S X=$P(^SC(IEN,0),U,7)
"RTN","PXRMXSU",97,0)
 ..S SC="Unknown" I +X>0 S SC=$P(^DIC(40.7,X,0),U,2) ; DBIA #557
"RTN","PXRMXSU",98,0)
 ..I $L(SC)=0 S SC="Unknown"
"RTN","PXRMXSU",99,0)
 ..;Save the external form of the name, then IEN, and the stop code.
"RTN","PXRMXSU",100,0)
 ..S PXRMLCHL(NHL)=$P(Y(0,0),U,1)_U_IEN_U_SC
"RTN","PXRMXSU",101,0)
 ..;Check for mixed inpatient and outpatient locations
"RTN","PXRMXSU",102,0)
 ..I (NHL>1),$D(CHECK)=0 D
"RTN","PXRMXSU",103,0)
 ...Q:'$$LOCN^PXRMXAP(.PXRMLCHL)
"RTN","PXRMXSU",104,0)
 ...W !,"Inpatient and Outpatient locations have been selected"
"RTN","PXRMXSU",105,0)
 ...S CHECK="DONE"
"RTN","PXRMXSU",106,0)
 .K DIC
"RTN","PXRMXSU",107,0)
 .I (NHL=0)&(+Y=-1) W !,"You must select a hospital location!"
"RTN","PXRMXSU",108,0)
 ;
"RTN","PXRMXSU",109,0)
 I $D(DUOUT)!($D(DTOUT)) Q
"RTN","PXRMXSU",110,0)
 ;Sort the hospital location list into alphabetical order.
"RTN","PXRMXSU",111,0)
 S NHL=$$SORT(NHL,"PXRMLCHL",2)
"RTN","PXRMXSU",112,0)
 ;Build array by IEN
"RTN","PXRMXSU",113,0)
 S IC=""
"RTN","PXRMXSU",114,0)
 F  S IC=$O(PXRMLCHL(IC)) Q:IC'>0  D
"RTN","PXRMXSU",115,0)
 .S PXRMLOCN($P(PXRMLCHL(IC),U,2))=IC
"RTN","PXRMXSU",116,0)
 Q
"RTN","PXRMXSU",117,0)
 ;---
"RTN","PXRMXSU",118,0)
FACILITY(SEL) ;Select facility (COPIED EX- PXRR)
"RTN","PXRMXSU",119,0)
 N IC,STATION,X,Y,DIC
"RTN","PXRMXSU",120,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMXSU",121,0)
 S NFAC=0
"RTN","PXRMXSU",122,0)
 S DIC("B")=+$P($$SITE^VASITE,U,3)
"RTN","PXRMXSU",123,0)
 S DIC("A")="Select FACILITY: "
"RTN","PXRMXSU",124,0)
 W !
"RTN","PXRMXSU",125,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:(Y=-1)&(NFAC>0)
"RTN","PXRMXSU",126,0)
 .S DIC=4
"RTN","PXRMXSU",127,0)
 .S DIC(0)="AEMQZ"
"RTN","PXRMXSU",128,0)
 .I NFAC>0 S DIC("A")="Select another FACILITY: "
"RTN","PXRMXSU",129,0)
 .D ^DIC
"RTN","PXRMXSU",130,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMXSU",131,0)
 .I '$D(DTOUT),('$D(DUOUT)),+Y'=-1 D
"RTN","PXRMXSU",132,0)
 ..;Check for duplicates
"RTN","PXRMXSU",133,0)
 ..I (NFAC>0),$$DUP($P(Y,U,1),.PXRMFAC,1) W !,"Error - Duplicate entry" Q
"RTN","PXRMXSU",134,0)
 ..S NFAC=NFAC+1,PXRMFAC(NFAC)=Y_U_Y(0,0)
"RTN","PXRMXSU",135,0)
 .K DIC
"RTN","PXRMXSU",136,0)
 ;
"RTN","PXRMXSU",137,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMXSU",138,0)
 ;;Save the facility names and station.
"RTN","PXRMXSU",139,0)
 F IC=1:1:NFAC D
"RTN","PXRMXSU",140,0)
 .S X=$P(PXRMFAC(IC),U,1)
"RTN","PXRMXSU",141,0)
 .S STATION=$P($G(^DIC(4,X,99)),U,1)
"RTN","PXRMXSU",142,0)
 .S PXRMFACN(X)=$P(PXRMFAC(IC),U,2)_U_STATION
"RTN","PXRMXSU",143,0)
 ;Sort the facility list into alphabetical order.
"RTN","PXRMXSU",144,0)
 S NFAC=$$SORT(NFAC,"PXRMFAC",2)
"RTN","PXRMXSU",145,0)
 Q
"RTN","PXRMXSU",146,0)
 ; ---
"RTN","PXRMXSU",147,0)
CGRP(TEMP) ; Clinic Group Selection
"RTN","PXRMXSU",148,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",149,0)
 S DIC("A")="Select CLINIC GROUP: ",NOTM=0
"RTN","PXRMXSU",150,0)
 S LIT="Select another CLINIC GROUP: "
"RTN","PXRMXSU",151,0)
 S LIT1="You must select a clinic group!"
"RTN","PXRMXSU",152,0)
 D SEL(409.67,"AEQMZ",.NOTM,.TEMP,"","")
"RTN","PXRMXSU",153,0)
 ;Build array by IEN
"RTN","PXRMXSU",154,0)
 S NCGRP=0 N IC S IC=""
"RTN","PXRMXSU",155,0)
 F  S IC=$O(PXRMCGRP(IC)) Q:IC=""  D
"RTN","PXRMXSU",156,0)
 .S PXRMCGRN($P(PXRMCGRP(IC),U,1))=IC,NCGRP=IC
"RTN","PXRMXSU",157,0)
 Q
"RTN","PXRMXSU",158,0)
 ; ---
"RTN","PXRMXSU",159,0)
LIST(TEMP) ; Patient List
"RTN","PXRMXSU",160,0)
 N LIT,LIT1,DIC,NLIST
"RTN","PXRMXSU",161,0)
 S DIC("A")="Select REMINDER PATIENT LIST: ",NLIST=0
"RTN","PXRMXSU",162,0)
 S DIC("?")="Select a patient list to run the reminder report against."
"RTN","PXRMXSU",163,0)
 S LIT="Select another PATIENT LIST: ",LIT1="You must select a list!"
"RTN","PXRMXSU",164,0)
 D SEL(810.5,"AEQMZ",.NLIST,.TEMP,"",4)
"RTN","PXRMXSU",165,0)
 Q
"RTN","PXRMXSU",166,0)
 ;
"RTN","PXRMXSU",167,0)
 ; ---
"RTN","PXRMXSU",168,0)
PCMM(TEMP) ; PCMM teams
"RTN","PXRMXSU",169,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",170,0)
 S DIC("A")="Select PCMM TEAM: ",NOTM=0
"RTN","PXRMXSU",171,0)
 S LIT="Select another PCMM TEAM: ",LIT1="You must select a team!"
"RTN","PXRMXSU",172,0)
 D SEL(404.51,"AEQMZ",.NOTM,.TEMP,"",1)
"RTN","PXRMXSU",173,0)
 Q
"RTN","PXRMXSU",174,0)
 ; ---
"RTN","PXRMXSU",175,0)
OERR(TEAM) ; OE/RR teams
"RTN","PXRMXSU",176,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",177,0)
 S DIC("A")="Select TEAM: ",NOTM=0
"RTN","PXRMXSU",178,0)
 S LIT="Select another TEAM: ",LIT1="You must select a team!"
"RTN","PXRMXSU",179,0)
 D SEL(100.21,"AEQMZ",.NOTM,.TEAM,"",5)
"RTN","PXRMXSU",180,0)
 Q
"RTN","PXRMXSU",181,0)
 ; ---
"RTN","PXRMXSU",182,0)
RCAT(REMCAT,REM) ;Reminder Category/Reminder selection
"RTN","PXRMXSU",183,0)
 N CAT,DIC,LIT,LIT1,SEQ
"RTN","PXRMXSU",184,0)
 S NCAT=0 K REMCAT,REM
"RTN","PXRMXSU",185,0)
 ;Reminder Category
"RTN","PXRMXSU",186,0)
RCATS I PXRMREP="S" D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMXSU",187,0)
 .K REMCAT S NCAT=0
"RTN","PXRMXSU",188,0)
 .S DIC("A")="Select a REMINDER CATEGORY: "
"RTN","PXRMXSU",189,0)
 .S LIT="Select another REMINDER CATEGORY: ",LIT1=""
"RTN","PXRMXSU",190,0)
 .D SEL(811.7,"AEQMZ",.NCAT,.REMCAT,PXRMREP,3)
"RTN","PXRMXSU",191,0)
 ;Individual Reminders
"RTN","PXRMXSU",192,0)
 D REM(.REM) Q:$D(DTOUT)
"RTN","PXRMXSU",193,0)
 I $D(DUOUT),PXRMREP="S" G RCATS
"RTN","PXRMXSU",194,0)
 Q
"RTN","PXRMXSU",195,0)
 ; ---
"RTN","PXRMXSU",196,0)
REM(REM) ;Reminders selection
"RTN","PXRMXSU",197,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",198,0)
 K REM S NREM=0
"RTN","PXRMXSU",199,0)
 S DIC("A")="Select individual REMINDER: "
"RTN","PXRMXSU",200,0)
 S LIT="Select another REMINDER: ",LIT1="You must select a reminder!"
"RTN","PXRMXSU",201,0)
 D SEL(811.9,"AEQMZ",.NREM,.REM,PXRMREP,2)
"RTN","PXRMXSU",202,0)
 Q
"RTN","PXRMXSU",203,0)
 ; ---
"RTN","PXRMXSU",204,0)
PAT(VAR) ; Patient select
"RTN","PXRMXSU",205,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",206,0)
 S DIC("A")="Select PATIENT: ",NPAT=0
"RTN","PXRMXSU",207,0)
 S LIT="Select another PATIENT: ",LIT1="You must select a patient!"
"RTN","PXRMXSU",208,0)
 D SEL(2,"AEQMZ",.NPAT,.VAR,"","")
"RTN","PXRMXSU",209,0)
 ;Sort the patient list into ascending order.
"RTN","PXRMXSU",210,0)
 S NPAT=$$SORT(NPAT,"VAR")
"RTN","PXRMXSU",211,0)
 Q
"RTN","PXRMXSU",212,0)
 ; ---
"RTN","PXRMXSU",213,0)
PROV(PRV) ;Build a list of selected providers.
"RTN","PXRMXSU",214,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",215,0)
 S DIC("A")="Select PROVIDER: ",NPRV=0
"RTN","PXRMXSU",216,0)
 S LIT="Select another PROVIDER: ",LIT1="You must select a provider!"
"RTN","PXRMXSU",217,0)
 D SEL(200,"AEQMZ",.NPRV,.PRV,"","")
"RTN","PXRMXSU",218,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSU",219,0)
 ;Sort the provider list into ascending order.
"RTN","PXRMXSU",220,0)
 S NPRV=$$SORT(NPRV,"PRV")
"RTN","PXRMXSU",221,0)
 Q
"RTN","PXRMXSU",222,0)
 ; ---
"RTN","PXRMXSU",223,0)
CSTOP ;Get a list of clinic stop codes.
"RTN","PXRMXSU",224,0)
 N LIT,LIT1,DIC,X,Y
"RTN","PXRMXSU",225,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSU",226,0)
 S DIC("A")="Select CLINIC STOP: "
"RTN","PXRMXSU",227,0)
 S LIT="Select another CLINIC STOP: "
"RTN","PXRMXSU",228,0)
 S LIT1="You must select a clinic stop!"
"RTN","PXRMXSU",229,0)
 S NCS=0
"RTN","PXRMXSU",230,0)
 W !
"RTN","PXRMXSU",231,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:(Y=-1)&(NCS>0)
"RTN","PXRMXSU",232,0)
 .S DIC=40.7,DIC(0)="AEMQZ"
"RTN","PXRMXSU",233,0)
 .I NCS>0 S DIC("A")=LIT
"RTN","PXRMXSU",234,0)
 .D ^DIC
"RTN","PXRMXSU",235,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMXSU",236,0)
 .I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMXSU",237,0)
 ..I +Y'=-1 D  Q
"RTN","PXRMXSU",238,0)
 ...S NCS=NCS+1
"RTN","PXRMXSU",239,0)
 ...;Save the external form of the name, the IEN, and the stop code.
"RTN","PXRMXSU",240,0)
 ...S PXRMCS(NCS)=$P(Y(0,0),U,1)_U_$P(Y,U,1)_U_$P(Y(0),U,2)
"RTN","PXRMXSU",241,0)
 ..W:NCS=0 !,LIT1
"RTN","PXRMXSU",242,0)
 ;Sort the clinic stop list into alphabetical order.
"RTN","PXRMXSU",243,0)
 S NCS=$$SORT(NCS,"PXRMCS",2)
"RTN","PXRMXSU",244,0)
 ;Build array by IEN
"RTN","PXRMXSU",245,0)
 S IC=""
"RTN","PXRMXSU",246,0)
 F  S IC=$O(PXRMCS(IC)) Q:IC=""  D
"RTN","PXRMXSU",247,0)
 .S PXRMCSN($P(PXRMCS(IC),U,2))=IC
"RTN","PXRMXSU",248,0)
 Q
"RTN","PXRMXSU",249,0)
 ; ---
"RTN","PXRMXSU",250,0)
SORT(N,ARRAY,KEY)       ;Sort an ARRAY with N elements 
"RTN","PXRMXSU",251,0)
 ;return the number of unique elements.  KEY is the piece of ARRAY on
"RTN","PXRMXSU",252,0)
 ;which to base the sort.  The default is the first piece.
"RTN","PXRMXSU",253,0)
 ;
"RTN","PXRMXSU",254,0)
 K ^TMP($J,"SORT")
"RTN","PXRMXSU",255,0)
 I (N'>0)!(N=1) Q N
"RTN","PXRMXSU",256,0)
 N IC,IND
"RTN","PXRMXSU",257,0)
 I '$D(KEY) S KEY=1
"RTN","PXRMXSU",258,0)
 F IC=1:1:N S ^TMP($J,"SORT",$P(@ARRAY@(IC),U,KEY))=@ARRAY@(IC)
"RTN","PXRMXSU",259,0)
 S IND=""
"RTN","PXRMXSU",260,0)
 F IC=1:1 S IND=$O(^TMP($J,"SORT",IND)) Q:IND=""  D
"RTN","PXRMXSU",261,0)
 .S @ARRAY@(IC)=^TMP($J,"SORT",IND)
"RTN","PXRMXSU",262,0)
 K ^TMP($J,"SORT")
"RTN","PXRMXSU",263,0)
 Q IC-1
"RTN","PXRMXSU",264,0)
 ;
"RTN","PXRMXSU",265,0)
 ;Check for duplicate entries
"RTN","PXRMXSU",266,0)
DUP(VALUE,ARRAY,PIECE) ;
"RTN","PXRMXSU",267,0)
 N IC,DUP
"RTN","PXRMXSU",268,0)
 S IC=0,DUP=0
"RTN","PXRMXSU",269,0)
 F  S IC=$O(ARRAY(IC)) Q:IC=""  D  Q:DUP
"RTN","PXRMXSU",270,0)
 .I $P(ARRAY(IC),U,PIECE)=VALUE S DUP=1
"RTN","PXRMXSU",271,0)
 Q DUP
"RTN","PXRMXT")
0^127^B32803390
"RTN","PXRMXT",1,0)
PXRMXT ; SLC/PJH - Reminder Reports Template Load ;11/21/2005
"RTN","PXRMXT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXT",3,0)
 ; 
"RTN","PXRMXT",4,0)
 ; Called from PXRMYD,PXRMXD
"RTN","PXRMXT",5,0)
 ;
"RTN","PXRMXT",6,0)
 ;Select Template
"RTN","PXRMXT",7,0)
 ;---------------
"RTN","PXRMXT",8,0)
START N X,Y,CNT,FOUND,PXRMFLD,DIC,MSG
"RTN","PXRMXT",9,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXT",10,0)
 S PXRMTMP="",FOUND=0
"RTN","PXRMXT",11,0)
 ;
"RTN","PXRMXT",12,0)
 ;Check if any templates exist for this report type
"RTN","PXRMXT",13,0)
 Q:'$$FIND(PXRMTYP)
"RTN","PXRMXT",14,0)
 ;
"RTN","PXRMXT",15,0)
 ;Select template required
"RTN","PXRMXT",16,0)
 W !
"RTN","PXRMXT",17,0)
 S CNT=0,DIC=810.1,DIC(0)="AEQMZ"
"RTN","PXRMXT",18,0)
 S DIC("A")="Select an existing REPORT TEMPLATE or return to continue: "
"RTN","PXRMXT",19,0)
 S DIC("S")="I $P(^PXRMPT(810.1,+Y,0),U,3)=PXRMTYP"
"RTN","PXRMXT",20,0)
 D ^DIC
"RTN","PXRMXT",21,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMXT",22,0)
 I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMXT",23,0)
 .I +Y'=-1 D  Q
"RTN","PXRMXT",24,0)
 ..S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMXT",25,0)
 K DIC
"RTN","PXRMXT",26,0)
 ;
"RTN","PXRMXT",27,0)
 ;Load template into local array
"RTN","PXRMXT",28,0)
 I (+Y'=-1)&('$D(DTOUT))&('$D(DUOUT)) D
"RTN","PXRMXT",29,0)
 .L +^PXRMPT(810.1,$P(Y,U)):0
"RTN","PXRMXT",30,0)
 .E  W !!?5,"Another user is editing this entry." S DUOUT=1 Q
"RTN","PXRMXT",31,0)
 .;Load template into an array
"RTN","PXRMXT",32,0)
 .S PXRMTMP=Y_U_$P(Y(0),U,2) D LOAD
"RTN","PXRMXT",33,0)
 .L -^PXRMPT(810.1,$P(PXRMTMP,U))
"RTN","PXRMXT",34,0)
 .;Exit if problem loading template
"RTN","PXRMXT",35,0)
 .I $D(MSG) S DTOUT=1 Q
"RTN","PXRMXT",36,0)
 .;Display Template information
"RTN","PXRMXT",37,0)
 .D:'$D(MSG) ^PXRMXTD
"RTN","PXRMXT",38,0)
 ;
"RTN","PXRMXT",39,0)
EXIT Q
"RTN","PXRMXT",40,0)
 ;
"RTN","PXRMXT",41,0)
 ;Check if any templates exist for this report type
"RTN","PXRMXT",42,0)
 ;-------------------------------------------------
"RTN","PXRMXT",43,0)
FIND(TYP) ;
"RTN","PXRMXT",44,0)
 N SUB,FOUND
"RTN","PXRMXT",45,0)
 S SUB=0,FOUND=0
"RTN","PXRMXT",46,0)
 F  S SUB=$O(^PXRMPT(810.1,SUB)) Q:'SUB  D  Q:FOUND
"RTN","PXRMXT",47,0)
 .I $P($G(^PXRMPT(810.1,SUB,0)),U,3)=TYP S FOUND=1
"RTN","PXRMXT",48,0)
 Q FOUND
"RTN","PXRMXT",49,0)
 ;
"RTN","PXRMXT",50,0)
 ;
"RTN","PXRMXT",51,0)
 ;Load variables from report template (both INT and EXT)
"RTN","PXRMXT",52,0)
 ;------------------------------------------------------
"RTN","PXRMXT",53,0)
LOAD N ARRAY
"RTN","PXRMXT",54,0)
 D GETS^DIQ(810.1,$P(PXRMTMP,U),"**","IE","ARRAY","MSG")
"RTN","PXRMXT",55,0)
 I $D(MSG) D  Q
"RTN","PXRMXT",56,0)
 .W !!,"File read failed, GETS^DIQ returned the following error message:"
"RTN","PXRMXT",57,0)
 .N IC S IC="MSG"
"RTN","PXRMXT",58,0)
 .F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","PXRMXT",59,0)
 .W !,"Examine the above error message for the reason.",!
"RTN","PXRMXT",60,0)
 .H 2
"RTN","PXRMXT",61,0)
 ;
"RTN","PXRMXT",62,0)
 N MREF,ORDER,ORDERC,SUB,SUB1,XREF
"RTN","PXRMXT",63,0)
 ;
"RTN","PXRMXT",64,0)
 S SUB1=$O(ARRAY(810.1,""))
"RTN","PXRMXT",65,0)
 D XREF^PXRMXTB
"RTN","PXRMXT",66,0)
 S SUB="" F  S SUB=$O(XREF(SUB)) Q:SUB=""  D 
"RTN","PXRMXT",67,0)
 .S @SUB=$G(ARRAY(810.1,SUB1,XREF(SUB),"I"))
"RTN","PXRMXT",68,0)
 ;
"RTN","PXRMXT",69,0)
 S PXRMFLD=$G(ARRAY(810.1,SUB1,XREF("PXRMSEL"),"E"))
"RTN","PXRMXT",70,0)
 S RUN=$G(ARRAY(810.1,SUB1,XREF("RUN"),"E"))
"RTN","PXRMXT",71,0)
 ;Update name if template has been renamed
"RTN","PXRMXT",72,0)
 S $P(PXRMTMP,U,2)=$G(ARRAY(810.1,SUB1,XREF("NAME"),"E"))
"RTN","PXRMXT",73,0)
 S TITLE=$G(ARRAY(810.1,SUB1,XREF("TITLE"),"E")),$P(PXRMTMP,U,3)=TITLE
"RTN","PXRMXT",74,0)
 ;
"RTN","PXRMXT",75,0)
MULT ;Clear multiple field arrays
"RTN","PXRMXT",76,0)
 K PXRMREM,PXRMPAT,PXRMPRV,PXRMOTM,PXRMFAC,PXRMLCHL,PXRMCS,PXRMCGRP
"RTN","PXRMXT",77,0)
 K PXRMFACN,PXRMCSN,PXRMCGRN,PXRMRCAT,REMINDER
"RTN","PXRMXT",78,0)
 ;
"RTN","PXRMXT",79,0)
 ;Load Multiple fields
"RTN","PXRMXT",80,0)
 D SUB(.PXRMREM,810.12,"REMINDER",1)
"RTN","PXRMXT",81,0)
 ;Load Patients
"RTN","PXRMXT",82,0)
 D SUB(.PXRMPAT,810.16,"PATIENT",1)
"RTN","PXRMXT",83,0)
 ;Load Providers
"RTN","PXRMXT",84,0)
 D SUB(.PXRMPRV,810.14,"PROVIDER",1)
"RTN","PXRMXT",85,0)
 ;Load OE/RR Teams
"RTN","PXRMXT",86,0)
 D SUB(.PXRMOTM,810.17,"OERR TEAM",1)
"RTN","PXRMXT",87,0)
 ;Load PCMM Teams
"RTN","PXRMXT",88,0)
 D SUB(.PXRMPCM,810.18,"PCMM TEAM",1)
"RTN","PXRMXT",89,0)
 ;Load Facility codes
"RTN","PXRMXT",90,0)
 D SUB(.PXRMFAC,810.13,"FACILITY",1)
"RTN","PXRMXT",91,0)
 ;Load Hospital Location codes
"RTN","PXRMXT",92,0)
 D SUB(.PXRMLCHL,810.11,"LOCATION",2)
"RTN","PXRMXT",93,0)
 ;Load Clinic Stop codes
"RTN","PXRMXT",94,0)
 D SUB(.PXRMCS,810.111,"STOP CODE",2)
"RTN","PXRMXT",95,0)
 ;Load Clinic Groups
"RTN","PXRMXT",96,0)
 D SUB(.PXRMCGRP,810.112,"CLINIC GROUP",1)
"RTN","PXRMXT",97,0)
 ;Load Reminder Categories
"RTN","PXRMXT",98,0)
 D SUB(.PXRMRCAT,810.113,"REMINDER CATEGORY",1)
"RTN","PXRMXT",99,0)
 ;Load Patient lists
"RTN","PXRMXT",100,0)
 D SUB(.PXRMLIST,810.114,"PXRMLIST",1)
"RTN","PXRMXT",101,0)
 ;
"RTN","PXRMXT",102,0)
 ;Build PXRMFACN/PXRMLOCN array IEN's and counters NHL/NFAC
"RTN","PXRMXT",103,0)
 D NUM
"RTN","PXRMXT",104,0)
 ;
"RTN","PXRMXT",105,0)
 ;Build Service Category array
"RTN","PXRMXT",106,0)
 I $L(PXRMSCAT)>0 F IC=1:1:$L(PXRMSCAT,",") S PXRMSCAT($P(PXRMSCAT,",",IC))=""
"RTN","PXRMXT",107,0)
 ;
"RTN","PXRMXT",108,0)
 ;Add Descriptions for Reminders
"RTN","PXRMXT",109,0)
 D DES(.PXRMREM,"^PXD(811.9",4)
"RTN","PXRMXT",110,0)
 ;Add Descriptions for Reminder Categories
"RTN","PXRMXT",111,0)
 D DES(.PXRMRCAT,"^PXRMD(811.7",4)
"RTN","PXRMXT",112,0)
 ;Add Descriptions for Teams
"RTN","PXRMXT",113,0)
 D DES(.PXRMOTM,"^OR(100.21",3)
"RTN","PXRMXT",114,0)
 ;Add Display Codes for Stops
"RTN","PXRMXT",115,0)
 D CODE(.PXRMCS,"^DIC(40.7",3)
"RTN","PXRMXT",116,0)
 ;
"RTN","PXRMXT",117,0)
 ;Sort Reminders into display order
"RTN","PXRMXT",118,0)
 D SORT(.PXRMREM,.ORDER)
"RTN","PXRMXT",119,0)
 ;Sort Reminders categories into display order
"RTN","PXRMXT",120,0)
 D SORT(.PXRMRCAT,.ORDERC)
"RTN","PXRMXT",121,0)
 ;
"RTN","PXRMXT",122,0)
 ;Combine individual reminders and category reminders
"RTN","PXRMXT",123,0)
 D MERGE^PXRMXS1
"RTN","PXRMXT",124,0)
 Q
"RTN","PXRMXT",125,0)
 ;
"RTN","PXRMXT",126,0)
 ;
"RTN","PXRMXT",127,0)
 ;Extract INTernal and EXTernal format from ARRAY
"RTN","PXRMXT",128,0)
 ;-----------------------------------------------
"RTN","PXRMXT",129,0)
SUB(OUTPUT,SUB,VAR,ORD) ; 
"RTN","PXRMXT",130,0)
 K OUTPUT
"RTN","PXRMXT",131,0)
 N IC,INT,EXT,SUB1,DISP
"RTN","PXRMXT",132,0)
 S SUB1="",IC=0
"RTN","PXRMXT",133,0)
 F  S SUB1=$O(ARRAY(SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMXT",134,0)
 .S INT=$P($G(ARRAY(SUB,SUB1,MREF(VAR),"I")),";")
"RTN","PXRMXT",135,0)
 .S EXT=$G(ARRAY(SUB,SUB1,MREF(VAR),"E"))
"RTN","PXRMXT",136,0)
 .S IC=IC+1
"RTN","PXRMXT",137,0)
 .I ORD=1 S OUTPUT(IC)=INT_U_EXT
"RTN","PXRMXT",138,0)
 .I ORD'=1 S OUTPUT(IC)=EXT_U_INT
"RTN","PXRMXT",139,0)
 .I (VAR'="REMINDER")&(VAR'="REMINDER CATEGORY") Q
"RTN","PXRMXT",140,0)
 .;Get display order
"RTN","PXRMXT",141,0)
 .S DISP=$G(ARRAY(SUB,SUB1,MREF("DISPLAY ORDER"),"I"))
"RTN","PXRMXT",142,0)
 .;Store in PXRMREM for display
"RTN","PXRMXT",143,0)
 .S OUTPUT(IC)=OUTPUT(IC)_U_DISP
"RTN","PXRMXT",144,0)
 .;Put reminders with no sequence number last
"RTN","PXRMXT",145,0)
 .I DISP="" S DISP=99
"RTN","PXRMXT",146,0)
 .;Create order array for sorting entries later
"RTN","PXRMXT",147,0)
 .I VAR="REMINDER" S ORDER(DISP,IC)=""
"RTN","PXRMXT",148,0)
 .I VAR="REMINDER CATEGORY" S ORDERC(DISP,IC)=""
"RTN","PXRMXT",149,0)
 Q
"RTN","PXRMXT",150,0)
 ;
"RTN","PXRMXT",151,0)
 ;Build array PXRMFACN and NFAC
"RTN","PXRMXT",152,0)
 ;-----------------------------
"RTN","PXRMXT",153,0)
NUM N IC,FACN,FACNAM
"RTN","PXRMXT",154,0)
 K PXRMLOCN,PXRMCSN,PXRMCGRN,PXRMFACN
"RTN","PXRMXT",155,0)
 S IC=""
"RTN","PXRMXT",156,0)
 F  S IC=$O(PXRMFAC(IC)) Q:IC=""  D
"RTN","PXRMXT",157,0)
 .S FACN=$P(PXRMFAC(IC),U),FACNAM=$P(PXRMFAC(IC),U,2)
"RTN","PXRMXT",158,0)
 .S PXRMFACN(FACN)=FACNAM_U_FACN,NFAC=IC
"RTN","PXRMXT",159,0)
 ; Build Array PXRMLOCN and NHL
"RTN","PXRMXT",160,0)
 N LOCN
"RTN","PXRMXT",161,0)
 F  S IC=$O(PXRMLCHL(IC)) Q:IC=""  D
"RTN","PXRMXT",162,0)
 .S LOCN=$P(PXRMLCHL(IC),U,2)
"RTN","PXRMXT",163,0)
 .S PXRMLOCN(LOCN)=IC,NHL=IC
"RTN","PXRMXT",164,0)
 ; Build Array PXRMCSN and NCS
"RTN","PXRMXT",165,0)
 N CSN
"RTN","PXRMXT",166,0)
 F  S IC=$O(PXRMCS(IC)) Q:IC=""  D
"RTN","PXRMXT",167,0)
 .S CSN=$P(PXRMCS(IC),U,2)
"RTN","PXRMXT",168,0)
 .S PXRMCSN(CSN)=IC,NCS=IC
"RTN","PXRMXT",169,0)
 ; Build Array PXRMCGRN and NCGRP
"RTN","PXRMXT",170,0)
 N GRPN
"RTN","PXRMXT",171,0)
 F  S IC=$O(PXRMCGRP(IC)) Q:IC=""  D
"RTN","PXRMXT",172,0)
 .S GRPN=$P(PXRMCGRP(IC),U,1)
"RTN","PXRMXT",173,0)
 .S PXRMCGRN(GRPN)=IC,NCGRP=IC
"RTN","PXRMXT",174,0)
 Q
"RTN","PXRMXT",175,0)
 ;
"RTN","PXRMXT",176,0)
 ;Add print name to OUTPUT array
"RTN","PXRMXT",177,0)
 ;-------------------------------
"RTN","PXRMXT",178,0)
DES(OUTPUT,GLOB,POSN) ;
"RTN","PXRMXT",179,0)
 N IC,IEN,DES
"RTN","PXRMXT",180,0)
 S IC=""
"RTN","PXRMXT",181,0)
 F  S IC=$O(OUTPUT(IC)) Q:IC=""  D
"RTN","PXRMXT",182,0)
 .S IEN=$P(OUTPUT(IC),U,1)
"RTN","PXRMXT",183,0)
 .X "S DES=$P($G("_GLOB_",IEN,0)),U,3)"
"RTN","PXRMXT",184,0)
 .S $P(OUTPUT(IC),U,POSN)=DES
"RTN","PXRMXT",185,0)
 Q
"RTN","PXRMXT",186,0)
 ;
"RTN","PXRMXT",187,0)
 ;Add stop code to OUTPUT array
"RTN","PXRMXT",188,0)
 ;-------------------------------
"RTN","PXRMXT",189,0)
CODE(OUTPUT,GLOB,POSN) ;
"RTN","PXRMXT",190,0)
 N IC,IEN,CODE
"RTN","PXRMXT",191,0)
 S IC=""
"RTN","PXRMXT",192,0)
 F  S IC=$O(OUTPUT(IC)) Q:IC=""  D
"RTN","PXRMXT",193,0)
 .S IEN=$P(OUTPUT(IC),U,2)
"RTN","PXRMXT",194,0)
 .X "S CODE=$P($G("_GLOB_",IEN,0)),U,2)"
"RTN","PXRMXT",195,0)
 .S $P(OUTPUT(IC),U,POSN)=CODE
"RTN","PXRMXT",196,0)
 Q
"RTN","PXRMXT",197,0)
 ;
"RTN","PXRMXT",198,0)
 ;Sort reminders into display order (allow for duplicates)
"RTN","PXRMXT",199,0)
 ;--------------------------------------------------------
"RTN","PXRMXT",200,0)
SORT(INPUT,ORDER) ;
"RTN","PXRMXT",201,0)
 N IC,DISP,OUTPUT,IC1
"RTN","PXRMXT",202,0)
 S DISP="",IC1=0
"RTN","PXRMXT",203,0)
 F  S DISP=$O(ORDER(DISP)) Q:DISP=""  D
"RTN","PXRMXT",204,0)
 .S IC=""
"RTN","PXRMXT",205,0)
 .F  S IC=$O(ORDER(DISP,IC)) Q:IC=""  D
"RTN","PXRMXT",206,0)
 ..S IC1=IC1+1,OUTPUT(IC1)=INPUT(IC)
"RTN","PXRMXT",207,0)
 ; Move results back
"RTN","PXRMXT",208,0)
 K INPUT M INPUT=OUTPUT
"RTN","PXRMXT",209,0)
 Q
"RTN","PXRMXTA")
0^5^B50397705
"RTN","PXRMXTA",1,0)
PXRMXTA ; SLC/PJH - Reminder Reports Template Edit ;06/20/2006
"RTN","PXRMXTA",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXTA",3,0)
 ; 
"RTN","PXRMXTA",4,0)
 ; Called from PXRMYD,PXRMXD
"RTN","PXRMXTA",5,0)
 ;
"RTN","PXRMXTA",6,0)
 ;Edit selected template or run report
"RTN","PXRMXTA",7,0)
 ;-------------------------------------
"RTN","PXRMXTA",8,0)
START(ROUTINE) ;
"RTN","PXRMXTA",9,0)
 N PXRMASK,PXRMEDIT,PXRMCOPY,MSG,DIC,NLOC
"RTN","PXRMXTA",10,0)
 N PXRMTREM,PXRMTCAT
"RTN","PXRMXTA",11,0)
 S PXRMASK="N",PXRMCOPY="N",PXRMEDIT="N"
"RTN","PXRMXTA",12,0)
 ;Option to edit/copy template
"RTN","PXRMXTA",13,0)
USE I 'PXRMUSER D ASK(.PXRMASK) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMXTA",14,0)
 ;Option to edit template
"RTN","PXRMXTA",15,0)
 I PXRMASK="Y" D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMXTA",16,0)
 .;Template edit and redisplay
"RTN","PXRMXTA",17,0)
 .D LOCK Q:$D(DUOUT)
"RTN","PXRMXTA",18,0)
 .D EDIT^PXRMXTE,UNLOCK
"RTN","PXRMXTA",19,0)
 .;Rollback changes on exit
"RTN","PXRMXTA",20,0)
 .I $D(DUOUT)!$D(DTOUT) D  Q
"RTN","PXRMXTA",21,0)
 ..D ROLL^PXRMXTF
"RTN","PXRMXTA",22,0)
 .;If all the templates have been deleted exit report
"RTN","PXRMXTA",23,0)
 .I '$$FIND^PXRMXT(PXRMTYP) S DTOUT=1 Q
"RTN","PXRMXTA",24,0)
 .;Check if template has been deleted 
"RTN","PXRMXTA",25,0)
 .I '$D(DA) S DUOUT=1 Q
"RTN","PXRMXTA",26,0)
 .;Sort out the filing
"RTN","PXRMXTA",27,0)
 .D ^PXRMXTF I $D(MSG) S DUOUT=1 Q
"RTN","PXRMXTA",28,0)
 ;
"RTN","PXRMXTA",29,0)
CHECK ;Check for missing fields
"RTN","PXRMXTA",30,0)
 N CNT,CRCNT,NODE,QUIT,RIEN
"RTN","PXRMXTA",31,0)
 S CNT=0,QUIT=0
"RTN","PXRMXTA",32,0)
 I PXRMSEL="R" F  S CNT=$O(PXRMLIST(CNT)) Q:CNT'>0  D
"RTN","PXRMXTA",33,0)
 .S NODE=$G(PXRMLIST(CNT))
"RTN","PXRMXTA",34,0)
 .I $P(^PXRMXP(810.5,$P(NODE,U),30,0),U,3)'>0 S QUIT=1 W !!,"PATIENT LIST: "_$P(NODE,U,2)_"DOES NOT CONTAIN PATIENTS!" Q
"RTN","PXRMXTA",35,0)
 ;I PXRMSEL="O" F  S CNT=$O(PXRMOTM(CNT)) Q:CNT'>0  D
"RTN","PXRMXTA",36,0)
 ;.S NODE=$G(PXRMOTM(CNT)) 
"RTN","PXRMXTA",37,0)
 ;.I $P(^OR(100.21,$P(NODE,U),10,0),U,3)'>0 S QUIT=1 W !!,"OE/RR TEAM: "_$P(NODE,U,2)_"DOES NOT CONTAIN PATIENTS!" Q
"RTN","PXRMXTA",38,0)
 S CNT=0
"RTN","PXRMXTA",39,0)
 I $D(PXRMRCAT)>0 F  S CNT=$O(PXRMRCAT(CNT)) Q:CNT'>0  D
"RTN","PXRMXTA",40,0)
 .S NODE=$G(PXRMRCAT(CNT))
"RTN","PXRMXTA",41,0)
 .S CRCNT=0 F  S CRCNT=$O(^PXRMD(811.7,$P(NODE,U),2,CRCNT)) Q:CRCNT'>0  D
"RTN","PXRMXTA",42,0)
 ..S RIEN=$P($G(^PXRMD(811.7,$P(NODE,U),2,CRCNT,0)),U)
"RTN","PXRMXTA",43,0)
 ..I $D(^PXD(811.9,RIEN))'>0 S QUIT=1 D
"RTN","PXRMXTA",44,0)
 ...W !!,"REMINDER CATEGORY: "_$P(NODE,U,2)_" CONTAINS A POINTER TO ONE OR MORE REMINDERS THAT DO"
"RTN","PXRMXTA",45,0)
 ...W !,"NOT EXIST ON THE SYSTEM!" Q
"RTN","PXRMXTA",46,0)
 I QUIT=1,'PXRMUSER W !!,"THE TEMPLATE NEEDS TO BE EDITED." H 2 G USE
"RTN","PXRMXTA",47,0)
 I QUIT=1,PXRMUSER W !!,"HAVE THE REMINDERS CLINICAL APPLICATION COORDINATOR CORRECT THE TEMPLATE." H 2 Q
"RTN","PXRMXTA",48,0)
 ;
"RTN","PXRMXTA",49,0)
FAC ;Option to combine multifacility report
"RTN","PXRMXTA",50,0)
 I "IRPO"'[PXRMSEL,NFAC>1 D  Q:$D(DTOUT)  I $D(DUOUT) Q:PXRMUSER  G USE
"RTN","PXRMXTA",51,0)
 .D COMB^PXRMXSD(.PXRMFCMB,"Facilities","N")
"RTN","PXRMXTA",52,0)
 ;
"RTN","PXRMXTA",53,0)
 ;Date range input (location only)
"RTN","PXRMXTA",54,0)
DAT I PXRMSEL="L" D  Q:$D(DTOUT)  I $D(DUOUT) Q:PXRMUSER  G USE
"RTN","PXRMXTA",55,0)
 .I PXRMFD="P" D PDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"ENCOUNTER")
"RTN","PXRMXTA",56,0)
 .I PXRMFD="F" D FDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"APPOINTMENT")
"RTN","PXRMXTA",57,0)
 .I PXRMFD="A" D PDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"ADMISSION")
"RTN","PXRMXTA",58,0)
 .I PXRMFD="C" S PXRMBDT=DT,PXRMEDT=DT
"RTN","PXRMXTA",59,0)
 ;Due Effective Date
"RTN","PXRMXTA",60,0)
EFF D SDR^PXRMXDUT(.PXRMSDT) Q:$D(DTOUT)
"RTN","PXRMXTA",61,0)
 I $D(DUOUT) G:PXRMSEL="L" DAT Q:PXRMUSER  G USE
"RTN","PXRMXTA",62,0)
 ;
"RTN","PXRMXTA",63,0)
 ;Check if combined location report is required
"RTN","PXRMXTA",64,0)
LCOMB S NLOC=0
"RTN","PXRMXTA",65,0)
 I PXRMREP="D",PXRMSEL="L" D  G:$D(DTOUT) EXIT G:$D(DUOUT) EFF
"RTN","PXRMXTA",66,0)
 .N DEFAULT,TEXT
"RTN","PXRMXTA",67,0)
 .D NLOC^PXRMXD
"RTN","PXRMXTA",68,0)
 .I NLOC>1 D COMB^PXRMXSD(.PXRMLCMB,TEXT,DEFAULT)
"RTN","PXRMXTA",69,0)
 ;
"RTN","PXRMXTA",70,0)
 ;Check if combined OE/RR team report is required
"RTN","PXRMXTA",71,0)
TCOMB S NOTM=0
"RTN","PXRMXTA",72,0)
 I PXRMREP="D",PXRMSEL="O" D  G:$D(DTOUT) EXIT G:$D(DUOUT) EFF
"RTN","PXRMXTA",73,0)
 .N DEFAULT,TEXT
"RTN","PXRMXTA",74,0)
 .S NOTM=$O(PXRMOTM(""),-1) I NOTM<2 Q
"RTN","PXRMXTA",75,0)
 .S DEFAULT="N",TEXT="OE/RR teams"
"RTN","PXRMXTA",76,0)
 .D COMB^PXRMXSD(.PXRMTCMB,TEXT,DEFAULT)
"RTN","PXRMXTA",77,0)
 ;
"RTN","PXRMXTA",78,0)
 ;Reminders Due sort and appointment date options
"RTN","PXRMXTA",79,0)
APPT I PXRMREP="D" D FUT Q:$D(DTOUT)  I $D(DUOUT) G:(PXRMSEL="L")&(NLOC>1) LCOMB G:(PXRMSEL="O")&(NOTM>1) TCOMB G EFF
"RTN","PXRMXTA",80,0)
 ;
"RTN","PXRMXTA",81,0)
 ;
"RTN","PXRMXTA",82,0)
 ;Option to print full SSN
"RTN","PXRMXTA",83,0)
SSN I PXRMREP="D" D  G:$D(DTOUT) EXIT G:$D(DUOUT) APPT
"RTN","PXRMXTA",84,0)
 .D SSN^PXRMXSD(.PXRMSSN)
"RTN","PXRMXTA",85,0)
 ;
"RTN","PXRMXTA",86,0)
 ;Option to print without totals, with totals or totals only
"RTN","PXRMXTA",87,0)
TOT I PXRMREP="S" D  Q:$D(DTOUT)  I $D(DUOUT) G EFF
"RTN","PXRMXTA",88,0)
 .;Default is normal report
"RTN","PXRMXTA",89,0)
 .S PXRMTOT="I"
"RTN","PXRMXTA",90,0)
 .;Ignore patient list and individual patient options
"RTN","PXRMXTA",91,0)
 .I "RI"[PXRMSEL Q
"RTN","PXRMXTA",92,0)
 .;Only prompt if more than one location, team or provider is selected
"RTN","PXRMXTA",93,0)
 .I PXRMSEL="P",'$O(PXRMPRV(1)) Q
"RTN","PXRMXTA",94,0)
 .I PXRMSEL="O",'$O(PXRMOTM(1)) Q
"RTN","PXRMXTA",95,0)
 .I PXRMSEL="T",'$O(PXRMPCM(1)) Q
"RTN","PXRMXTA",96,0)
 .;Ignore reports for all locations
"RTN","PXRMXTA",97,0)
 .I PXRMSEL="L",PXRMLCMB="Y" Q
"RTN","PXRMXTA",98,0)
 .I PXRMSEL="L" N DEFAULT,TEXT D NLOC^PXRMXD Q:NLOC<2
"RTN","PXRMXTA",99,0)
 .;Prompt for options
"RTN","PXRMXTA",100,0)
 .N LIT1,LIT2,LIT3
"RTN","PXRMXTA",101,0)
 .D LIT^PXRMXD,TOTALS^PXRMXSD(.PXRMTOT,LIT1,LIT2,LIT3)
"RTN","PXRMXTA",102,0)
 ;
"RTN","PXRMXTA",103,0)
 ;Option to print delimiter separated output
"RTN","PXRMXTA",104,0)
TABS D  G:$D(DTOUT) EXIT I $D(DUOUT) G:PXRMREP="D" SSN G TOT
"RTN","PXRMXTA",105,0)
 .D TABS^PXRMXSD(.PXRMTABS)
"RTN","PXRMXTA",106,0)
 ;
"RTN","PXRMXTA",107,0)
 ;Select chracter
"RTN","PXRMXTA",108,0)
TCHAR I PXRMTABS="Y" D  G:$D(DTOUT) EXIT G:$D(DUOUT) TABS
"RTN","PXRMXTA",109,0)
 .S PXRMTABC=$$DELIMSEL^PXRMXSD
"RTN","PXRMXTA",110,0)
 ;
"RTN","PXRMXTA",111,0)
DPAT ;Ask whether to include deceased and test patients.
"RTN","PXRMXTA",112,0)
 S PXRMDPAT=$$ASKYN^PXRMEUT("N","Include deceased patients on the list")
"RTN","PXRMXTA",113,0)
 N PXRMIDOD I PXRMDPAT>0 S PXRMIDOD=1
"RTN","PXRMXTA",114,0)
 Q:$D(DTOUT)  G:$D(DUOUT) TABS
"RTN","PXRMXTA",115,0)
TPAT ;
"RTN","PXRMXTA",116,0)
 S PXRMTPAT=$$ASKYN^PXRMEUT("N","Include test patients on the list")
"RTN","PXRMXTA",117,0)
 Q:$D(DTOUT)  G:$D(DUOUT) DPAT
"RTN","PXRMXTA",118,0)
PATLIST ;
"RTN","PXRMXTA",119,0)
 N PATLST,PATCREAT
"RTN","PXRMXTA",120,0)
 I PXRMSEL'="I"&(PXRMUSER=0) D
"RTN","PXRMXTA",121,0)
 . D ASK^PXRMXD(.PATLST,"Save due patients to a patient list: ",3)
"RTN","PXRMXTA",122,0)
 . I $G(PATLST)="" Q
"RTN","PXRMXTA",123,0)
 . I $G(PATLST)="N" S PXRMLIS1=""
"RTN","PXRMXTA",124,0)
 . I $G(PATLST)="Y" D
"RTN","PXRMXTA",125,0)
 . . S PATCREAT="N" D ASK^PXRMXD(.PATCREAT,"Secure list?: ",2)
"RTN","PXRMXTA",126,0)
 . . Q:$D(DTOUT)!($D(DUOUT))
"RTN","PXRMXTA",127,0)
 . . K PLISTPUG
"RTN","PXRMXTA",128,0)
 . . S PLISTPUG="N" D ASK^PXRMXD(.PLISTPUG,"Purge Patient List after 5 years?: ",5)
"RTN","PXRMXTA",129,0)
 I $G(PATLST)="" G:$D(DTOUT) EXIT I $D(DUOUT) G TPAT
"RTN","PXRMXTA",130,0)
 G:$D(DTOUT) EXIT I $D(DUOUT) G PATLIST
"RTN","PXRMXTA",131,0)
 I $G(PATLST)="Y" S TEXT="Select PATIENT LIST name: " D PLIST^PXRMLCR(.PXRMLIS1,TEXT,"") Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMXTA",132,0)
 ;Initiate report
"RTN","PXRMXTA",133,0)
 D @ROUTINE
"RTN","PXRMXTA",134,0)
EXIT Q
"RTN","PXRMXTA",135,0)
 ;
"RTN","PXRMXTA",136,0)
 ;File locking
"RTN","PXRMXTA",137,0)
 ;------------
"RTN","PXRMXTA",138,0)
UNLOCK L -^PXRMPT(810.1,$P(PXRMTMP,U)) Q
"RTN","PXRMXTA",139,0)
LOCK L +^PXRMPT(810.1,$P(PXRMTMP,U)):0
"RTN","PXRMXTA",140,0)
 E  W !!?5,"Another user is editing this entry" S DUOUT=1
"RTN","PXRMXTA",141,0)
 Q
"RTN","PXRMXTA",142,0)
 ;
"RTN","PXRMXTA",143,0)
 ;Option to use report template
"RTN","PXRMXTA",144,0)
 ;-----------------------------
"RTN","PXRMXTA",145,0)
ASK(YESNO) ;
"RTN","PXRMXTA",146,0)
 N X,Y,TEXT
"RTN","PXRMXTA",147,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXTA",148,0)
 S DIR(0)="YA0"
"RTN","PXRMXTA",149,0)
 S DIR("A")="WANT TO EDIT '"_$P(PXRMTMP,U,2)_"' TEMPLATE: "
"RTN","PXRMXTA",150,0)
 S DIR("B")="N"
"RTN","PXRMXTA",151,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXTA",152,0)
 S DIR("??")=U_"D HELP^PXRMXTA(1)"
"RTN","PXRMXTA",153,0)
 W !
"RTN","PXRMXTA",154,0)
 D ^DIR K DIR
"RTN","PXRMXTA",155,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXTA",156,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXTA",157,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXTA",158,0)
 Q
"RTN","PXRMXTA",159,0)
 ;
"RTN","PXRMXTA",160,0)
 ;General help text routine. Write out the text in the HTEXT array
"RTN","PXRMXTA",161,0)
 ;----------------------------------------------------------------
"RTN","PXRMXTA",162,0)
HELP(CALL) ;
"RTN","PXRMXTA",163,0)
 N HTEXT
"RTN","PXRMXTA",164,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMXTA",165,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMXTA",166,0)
 ;
"RTN","PXRMXTA",167,0)
 I CALL=1 D
"RTN","PXRMXTA",168,0)
 .S HTEXT(1)="Enter 'N' to run the report using the parameters from "
"RTN","PXRMXTA",169,0)
 .S HTEXT(2)="the existing template. Enter 'Y' to copy/edit the "
"RTN","PXRMXTA",170,0)
 .S HTEXT(3)="template."
"RTN","PXRMXTA",171,0)
 ;
"RTN","PXRMXTA",172,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTA",173,0)
 S IC=""
"RTN","PXRMXTA",174,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMXTA",175,0)
 . S X=HTEXT(IC)
"RTN","PXRMXTA",176,0)
 . D ^DIWP
"RTN","PXRMXTA",177,0)
 W !
"RTN","PXRMXTA",178,0)
 S IC=0
"RTN","PXRMXTA",179,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMXTA",180,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMXTA",181,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTA",182,0)
 W !
"RTN","PXRMXTA",183,0)
 Q
"RTN","PXRMXTA",184,0)
 ;
"RTN","PXRMXTA",185,0)
 ;Reminders Due specific prompts
"RTN","PXRMXTA",186,0)
 ;------------------------------
"RTN","PXRMXTA",187,0)
FUT ;For detailed report give option to display future appointments
"RTN","PXRMXTA",188,0)
 S PXRMFUT="N",PXRMDLOC="N"
"RTN","PXRMXTA",189,0)
 I PXRMREP="D" D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMXTA",190,0)
 .D FUTURE^PXRMXSD(.PXRMFUT,"Display All Future Appointments: ",5)
"RTN","PXRMXTA",191,0)
 .I PXRMFUT="Y" D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMXTA",192,0)
 ..D FUTURE^PXRMXSD(.PXRMDLOC,"Display Appointment Location: ",15)
"RTN","PXRMXTA",193,0)
 ;
"RTN","PXRMXTA",194,0)
SRT ;For detailed report give option to sort by appointment date
"RTN","PXRMXTA",195,0)
 S PXRMSRT="N"
"RTN","PXRMXTA",196,0)
 I PXRMREP="D",(PXRMSEL'="I") D  G:$D(DUOUT) FUT
"RTN","PXRMXTA",197,0)
 .;Inpatient report
"RTN","PXRMXTA",198,0)
 .S PXRMINP=$$INP^PXRMXD
"RTN","PXRMXTA",199,0)
 .;Option to sort by bed
"RTN","PXRMXTA",200,0)
 .I PXRMINP D BED^PXRMXSD(.PXRMSRT) Q
"RTN","PXRMXTA",201,0)
 .;Option to sort by appt date
"RTN","PXRMXTA",202,0)
 .D SRT^PXRMXSD(.PXRMSRT)
"RTN","PXRMXTA",203,0)
 ;
"RTN","PXRMXTA",204,0)
 Q
"RTN","PXRMXTA",205,0)
 ;
"RTN","PXRMXTA",206,0)
 ;Input validation for file #810.1
"RTN","PXRMXTA",207,0)
 ;
"RTN","PXRMXTA",208,0)
 ;If detail report allow only one reminder
"RTN","PXRMXTA",209,0)
PXRMREM I $P(^PXRMPT(810.1,DA(1),0),U,6)'="D" Q
"RTN","PXRMXTA",210,0)
 ;If template has no reminders ignore
"RTN","PXRMXTA",211,0)
 I +$P($G(^PXRMPT(810.1,DA(1),1,0)),U,4)=0 Q
"RTN","PXRMXTA",212,0)
 ;If this a new entry
"RTN","PXRMXTA",213,0)
 I $G(Y)=-1 K X W !,"Only one reminder allowed for detailed report."
"RTN","PXRMXTA",214,0)
 Q
"RTN","PXRMXTA",215,0)
 ;
"RTN","PXRMXTA",216,0)
 ;If changing from Summary to Detail report
"RTN","PXRMXTA",217,0)
PXRMREP Q:$G(X)'="D"
"RTN","PXRMXTA",218,0)
 Q:$P($G(^PXRMPT(810.1,DA,0)),U,6)'="S"
"RTN","PXRMXTA",219,0)
 Q:+$G(NREM)<2
"RTN","PXRMXTA",220,0)
 W !,"Only the first reminder on this template will be evaluated"
"RTN","PXRMXTA",221,0)
 Q
"RTN","PXRMXTD")
0^106^B10909295
"RTN","PXRMXTD",1,0)
PXRMXTD ; SLC/PJH - Reminder Reports Template Display ;11/03/2005
"RTN","PXRMXTD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXTD",3,0)
 ; 
"RTN","PXRMXTD",4,0)
 ; Called from PXRMXT/PXRMXTF
"RTN","PXRMXTD",5,0)
 ;
"RTN","PXRMXTD",6,0)
 ;
"RTN","PXRMXTD",7,0)
 ;Display Template information
"RTN","PXRMXTD",8,0)
START ;----------------------------
"RTN","PXRMXTD",9,0)
 N PAGE,BMARG,DONE,SD,ED,DES,RDES,CDES,PSTART,PXRMOPT,IC,CNT
"RTN","PXRMXTD",10,0)
 S PAGE=1,BMARG=0,DONE=0,SD="",ED="",PSTART=10,CNT=0
"RTN","PXRMXTD",11,0)
 ;
"RTN","PXRMXTD",12,0)
 D LITS^PXRMXPR1
"RTN","PXRMXTD",13,0)
 ;
"RTN","PXRMXTD",14,0)
 I PXRMREP="D" S PXRMOPT="Detailed Report"
"RTN","PXRMXTD",15,0)
 I PXRMREP="S" S PXRMOPT="Summary Report"
"RTN","PXRMXTD",16,0)
 W !!?(PSTART),"Report Title:",?32,$P(PXRMTMP,U,3)
"RTN","PXRMXTD",17,0)
 W !?PSTART,"Report Type:",?32,$G(PXRMOPT)
"RTN","PXRMXTD",18,0)
 W !?PSTART,"Patient Sample:",?32,PXRMFLD
"RTN","PXRMXTD",19,0)
 I "LT"[PXRMSEL D
"RTN","PXRMXTD",20,0)
 .W !,?PSTART,"Facility:" D FAC
"RTN","PXRMXTD",21,0)
 I PXRMSEL'="L" W !,?PSTART,PXRMFLD,":" D ARRS
"RTN","PXRMXTD",22,0)
 I PXRMSEL="L" D
"RTN","PXRMXTD",23,0)
 .W !?PSTART,PXRMFLD,":",?32,DES
"RTN","PXRMXTD",24,0)
 .I $E(PXRMLCSC,2)'="A" W ! D ARRS
"RTN","PXRMXTD",25,0)
 I DONE Q
"RTN","PXRMXTD",26,0)
 S IC="" F  S IC=$O(PXRMRCAT(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",27,0)
 .W !,?PSTART W:IC=1 "Category:"
"RTN","PXRMXTD",28,0)
 .W ?32,$P(PXRMRCAT(IC),U,3),?35,$P(PXRMRCAT(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",29,0)
 I DONE Q
"RTN","PXRMXTD",30,0)
 S IC="" F  S IC=$O(PXRMREM(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",31,0)
 .W !,?PSTART W:IC=1 "Reminder:"
"RTN","PXRMXTD",32,0)
 .W ?32,$P(PXRMREM(IC),U,3),?35,$P(PXRMREM(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",33,0)
 I DONE Q
"RTN","PXRMXTD",34,0)
 I PXRMSEL="P" W !,?PSTART,"All/Primary:",?32,CDES
"RTN","PXRMXTD",35,0)
 W !?(PSTART),"Template Name:",?32,$P(PXRMTMP,U,2)
"RTN","PXRMXTD",36,0)
 W !?PSTART,"Date last run:",?32,$S(RUN]"":RUN,1:"n/a")
"RTN","PXRMXTD",37,0)
 I $D(PXRMSCAT),PXRMSCAT]"",PXRMFD="P" D OSCAT(PXRMSCAT,PSTART)
"RTN","PXRMXTD",38,0)
EXIT Q
"RTN","PXRMXTD",39,0)
 ;
"RTN","PXRMXTD",40,0)
 ;Display selected teams/providers
"RTN","PXRMXTD",41,0)
 ;--------------------------------
"RTN","PXRMXTD",42,0)
ARRS N IC
"RTN","PXRMXTD",43,0)
 S IC=""
"RTN","PXRMXTD",44,0)
 I PXRMSEL="P" F  S IC=$O(PXRMPRV(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",45,0)
 .W:IC>1 ! W ?32,$P(PXRMPRV(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",46,0)
 I PXRMSEL="T" F  S IC=$O(PXRMPCM(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",47,0)
 .W:IC>1 ! W ?32,$P(PXRMPCM(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",48,0)
 I PXRMSEL="O" F  S IC=$O(PXRMOTM(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",49,0)
 .W:IC>1 ! W ?32,$P(PXRMOTM(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",50,0)
 I PXRMSEL="I" F  S IC=$O(PXRMPAT(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",51,0)
 .W:IC>1 ! W ?32,$P(PXRMPAT(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",52,0)
 I PXRMSEL="R" F  S IC=$O(PXRMLIST(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",53,0)
 .W:IC>1 ! W ?32,$P(PXRMLIST(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",54,0)
 I PXRMSEL="L" D
"RTN","PXRMXTD",55,0)
 .I $E(PXRMLCSC)="H" F  S IC=$O(PXRMLCHL(IC)) Q:IC=""  D
"RTN","PXRMXTD",56,0)
 ..W:IC>1 ! W ?32,$P(PXRMLCHL(IC),U) D CHECK(1)
"RTN","PXRMXTD",57,0)
 .I $E(PXRMLCSC)="C" F  S IC=$O(PXRMCS(IC)) Q:IC=""  D
"RTN","PXRMXTD",58,0)
 ..W:IC>1 ! W ?32,$P(PXRMCS(IC),U)," ",$P(PXRMCS(IC),U,3)
"RTN","PXRMXTD",59,0)
 ..D CHECK(1)
"RTN","PXRMXTD",60,0)
 .I $E(PXRMLCSC)="G" F  S IC=$O(PXRMCGRP(IC)) Q:IC=""  D
"RTN","PXRMXTD",61,0)
 ..W:IC>1 ! W ?32,$P(PXRMCGRP(IC),U)," ",$P(PXRMCGRP(IC),U,2)
"RTN","PXRMXTD",62,0)
 ..D CHECK(1)
"RTN","PXRMXTD",63,0)
 Q
"RTN","PXRMXTD",64,0)
 ;
"RTN","PXRMXTD",65,0)
 ;Display selected Facilities
"RTN","PXRMXTD",66,0)
 ;---------------------------
"RTN","PXRMXTD",67,0)
FAC N IC
"RTN","PXRMXTD",68,0)
 S IC=""
"RTN","PXRMXTD",69,0)
 F  S IC=$O(PXRMFAC(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",70,0)
 .W:IC>1 ! W ?32,$P(PXRMFAC(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",71,0)
 Q
"RTN","PXRMXTD",72,0)
 ;
"RTN","PXRMXTD",73,0)
 ;
"RTN","PXRMXTD",74,0)
 ;Output the service categeories
"RTN","PXRMXTD",75,0)
 ;------------------------------
"RTN","PXRMXTD",76,0)
OSCAT(SCL,PSTART) ;
"RTN","PXRMXTD",77,0)
 N IC,CSTART,EM,SC,SCTEXT
"RTN","PXRMXTD",78,0)
 S CSTART=PSTART+3
"RTN","PXRMXTD",79,0)
 W !,?PSTART,"Service categories:",?32,SCL
"RTN","PXRMXTD",80,0)
 F IC=1:1:$L(SCL,",") D
"RTN","PXRMXTD",81,0)
 .S SC=$P(SCL,",",IC)
"RTN","PXRMXTD",82,0)
 .S SCTEXT=$$EXTERNAL^DILFD(9000010,.07,"",SC,.EM)
"RTN","PXRMXTD",83,0)
 .W !,?CSTART,SC," - ",SCTEXT
"RTN","PXRMXTD",84,0)
 .D CHECK(1)
"RTN","PXRMXTD",85,0)
 Q
"RTN","PXRMXTD",86,0)
 ;
"RTN","PXRMXTD",87,0)
 ;Check for page throw
"RTN","PXRMXTD",88,0)
 ;--------------------
"RTN","PXRMXTD",89,0)
CHECK(LEAVE) ;
"RTN","PXRMXTD",90,0)
 S CNT=CNT+1
"RTN","PXRMXTD",91,0)
 I CNT>(IOSL-BMARG-LEAVE) D PAGE S CNT=0
"RTN","PXRMXTD",92,0)
 Q
"RTN","PXRMXTD",93,0)
 ;
"RTN","PXRMXTD",94,0)
 ;form feed to new page
"RTN","PXRMXTD",95,0)
 ;---------------------
"RTN","PXRMXTD",96,0)
PAGE I ($E(IOST)="C")&(IO=IO(0))&(PAGE>0) D
"RTN","PXRMXTD",97,0)
 .S DIR(0)="E"
"RTN","PXRMXTD",98,0)
 .W !
"RTN","PXRMXTD",99,0)
 .D ^DIR K DIR
"RTN","PXRMXTD",100,0)
 I $D(DUOUT)!($D(DTOUT))!($D(DIROUT)) S DONE=1 Q
"RTN","PXRMXTD",101,0)
 W !
"RTN","PXRMXTD",102,0)
 Q
"RTN","PXRMXTE")
0^141^B13504501
"RTN","PXRMXTE",1,0)
PXRMXTE ; SLC/PJH - Reminder Reports Template Edit ;08/03/2006
"RTN","PXRMXTE",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXTE",3,0)
 ; 
"RTN","PXRMXTE",4,0)
 ; Called from PXRMYD,PXRMXD
"RTN","PXRMXTE",5,0)
 ;
"RTN","PXRMXTE",6,0)
 ;Option to Edit
"RTN","PXRMXTE",7,0)
 ;--------------
"RTN","PXRMXTE",8,0)
EDIT ;
"RTN","PXRMXTE",9,0)
 N DIDEL,DIE,DR K DTOUT,DUOUT
"RTN","PXRMXTE",10,0)
 ;Edit report name, title and PXRMSEL (patient sample)
"RTN","PXRMXTE",11,0)
 S DIE=810.1,DA=$P(PXRMTMP,U),DR=".01T;1.9;1.2",DIDEL=810.1
"RTN","PXRMXTE",12,0)
 D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTE",13,0)
 ;Check if template has been deleted
"RTN","PXRMXTE",14,0)
 I '$D(DA) Q
"RTN","PXRMXTE",15,0)
 ;Get updated value of PXRMXSEL
"RTN","PXRMXTE",16,0)
 N PXRMSEL,PXRMFUT S PXRMSEL=X
"RTN","PXRMXTE",17,0)
 ;Needed for 1.6 validation - Prior/Future or Current/Admissions
"RTN","PXRMXTE",18,0)
 ;N PXRMINP
"RTN","PXRMXTE",19,0)
 ;Further fields depend on value in PXRMXSEL
"RTN","PXRMXTE",20,0)
 I PXRMSEL="I" S DR="6T~R",PXRMINP=0
"RTN","PXRMXTE",21,0)
 I PXRMSEL="R" S DR="14T",PXRMINP=0
"RTN","PXRMXTE",22,0)
 I PXRMSEL="L" D  Q:$D(DUOUT)
"RTN","PXRMXTE",23,0)
 .;Get location report type 
"RTN","PXRMXTE",24,0)
 .S DR="3T;1.5R" D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTE",25,0)
 .N PXRMLCSC S PXRMLCSC=X,DR="",PXRMINP=0
"RTN","PXRMXTE",26,0)
 .;All location reports - prompt for prior/future/current/admissions
"RTN","PXRMXTE",27,0)
 .I PXRMLCSC="HAI" S PXRMINP=1,DR="1.6" Q
"RTN","PXRMXTE",28,0)
 .I PXRMLCSC="HA" S PXRMINP=0,DR="1.6"
"RTN","PXRMXTE",29,0)
 .I PXRMLCSC="CA" S PXRMINP=0,DR="1.6"
"RTN","PXRMXTE",30,0)
 .D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTE",31,0)
 .S PXRMFUT=X,DR=""
"RTN","PXRMXTE",32,0)
 .;Selected Location/Stop Code/Clinic Group fields 
"RTN","PXRMXTE",33,0)
 .I PXRMLCSC="HS" D  Q:$D(DUOUT)
"RTN","PXRMXTE",34,0)
 ..S DR="10T~R"
"RTN","PXRMXTE",35,0)
 ..D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTE",36,0)
 ..;Determine if locations input are all wards
"RTN","PXRMXTE",37,0)
 ..S PXRMINP=$$INP^PXRMXAP(PXRMLCSC,.PXRMLOCN)
"RTN","PXRMXTE",38,0)
 ..;Select Prior/Future or Current Inpatient/Admissions
"RTN","PXRMXTE",39,0)
 ..S DR="1.6"
"RTN","PXRMXTE",40,0)
 ..D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTE",41,0)
 ..S PXRMFUT=X,DR=""
"RTN","PXRMXTE",42,0)
 .;Clinic Stop input and prior/future
"RTN","PXRMXTE",43,0)
 .I PXRMLCSC="CS" S PXRMINP=0,DR="11T~R;1.6" D  I $G(DUOUT)=1 Q
"RTN","PXRMXTE",44,0)
 ..D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTE",45,0)
 ..S PXRMFUT=X,DR=""
"RTN","PXRMXTE",46,0)
 .;Clinic Group input and prior/future
"RTN","PXRMXTE",47,0)
 .I PXRMLCSC="GS" S PXRMINP=0,DR="12T~R;1.6" D  I $G(DUOUT)=1 Q
"RTN","PXRMXTE",48,0)
 ..D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTE",49,0)
 ..S PXRMFUT=X,DR=""
"RTN","PXRMXTE",50,0)
 .;Service categories (except for inpatient reports)
"RTN","PXRMXTE",51,0)
 .I PXRMINP=0,PXRMFUT'="F",PXRMFUT'="C" S DR=DR_";9T~R"
"RTN","PXRMXTE",52,0)
 ;OE/RR teams
"RTN","PXRMXTE",53,0)
 I PXRMSEL="O" S DR="7T~R"
"RTN","PXRMXTE",54,0)
 ;PCMM Provider and Primary care/All
"RTN","PXRMXTE",55,0)
 I PXRMSEL="P" S DR="4T~R;1.3"
"RTN","PXRMXTE",56,0)
 ;PCMM teams
"RTN","PXRMXTE",57,0)
 I PXRMSEL="T" S DR="3T~R;8T~R"
"RTN","PXRMXTE",58,0)
 ;Report type (detail or summary)
"RTN","PXRMXTE",59,0)
 S DR=DR_";1.4"
"RTN","PXRMXTE",60,0)
 ;Reminder Categories
"RTN","PXRMXTE",61,0)
 I $D(^PXRMPT(810.1,DA,12,0))>0 D
"RTN","PXRMXTE",62,0)
 .N IEN,CNT,NODE
"RTN","PXRMXTE",63,0)
 .S CNT=0,IEN=0 F  S IEN=$O(^PXRMPT(810.1,DA,12,IEN)) Q:IEN'>0  D
"RTN","PXRMXTE",64,0)
 ..S CNT=CNT+1,NODE=$G(^PXRMPT(810.1,DA,12,IEN,0))
"RTN","PXRMXTE",65,0)
 ..S PXRMTCAT(DA,CNT)=$P(NODE,U)_U_$P($G(^PXRMD(811.7,$P(NODE,U),0)),U)_U_$P(NODE,U,2)
"RTN","PXRMXTE",66,0)
 S DR=DR_";13T"
"RTN","PXRMXTE",67,0)
 ;Reminders
"RTN","PXRMXTE",68,0)
 I $D(^PXRMPT(810.1,DA,1,0))>0 D
"RTN","PXRMXTE",69,0)
 .N IEN,CNT,NODE,REMNODE
"RTN","PXRMXTE",70,0)
 .S CNT=0,IEN=0 F  S IEN=$O(^PXRMPT(810.1,DA,1,IEN)) Q:IEN'>0  D
"RTN","PXRMXTE",71,0)
 ..S CNT=CNT+1,NODE=$G(^PXRMPT(810.1,DA,1,IEN,0))
"RTN","PXRMXTE",72,0)
 ..S REMNODE=$G(^PXD(811.9,$P(NODE,U),0))
"RTN","PXRMXTE",73,0)
 ..S PXRMTREM(DA,CNT)=$P(NODE,U)_U_$P(REMNODE,U)_U_$P(NODE,U,2)_U_$P($G(REMNODE),U,3)
"RTN","PXRMXTE",74,0)
 S DR=DR_";2T"
"RTN","PXRMXTE",75,0)
 ;
"RTN","PXRMXTE",76,0)
 ;Strip of any leading semi-colons
"RTN","PXRMXTE",77,0)
 I $E(DR)=";" S DR=$P(DR,";",2,99)
"RTN","PXRMXTE",78,0)
 ;
"RTN","PXRMXTE",79,0)
 D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTE",80,0)
 ;
"RTN","PXRMXTE",81,0)
 ;If all reminders have been deleted from the template disallow save
"RTN","PXRMXTE",82,0)
 I +$P($G(^PXRMPT(810.1,DA,1,0)),U,4)=0 D
"RTN","PXRMXTE",83,0)
 .;Check categories also
"RTN","PXRMXTE",84,0)
 .I +$P($G(^PXRMPT(810.1,DA,12,0)),U,4)>0 D  Q
"RTN","PXRMXTE",85,0)
 .. N CAT,CATIEN
"RTN","PXRMXTE",86,0)
 .. S CAT=0 F  S CAT=$O(^PXRMPT(810.1,DA,12,CAT)) Q:+CAT'>0  D
"RTN","PXRMXTE",87,0)
 ... S CATIEN=$P($G(^PXRMPT(810.1,DA,12,CAT,0)),U)
"RTN","PXRMXTE",88,0)
 ... I +$P($G(^PXRMD(811.7,CATIEN,2,0)),U,4)<1 W !!,"** WARNING **",!,"Reminder Category "_$P($G(^PXRMD(811.7,CATIEN,0)),U)_" does not have any reminders assigned to it"
"RTN","PXRMXTE",89,0)
 .S DUOUT=1
"RTN","PXRMXTE",90,0)
 .W !!,"No reminders defined"
"RTN","PXRMXTE",91,0)
 Q
"RTN","PXRMXTE",92,0)
 ;
"RTN","PXRMXTU")
0^128^B33168453
"RTN","PXRMXTU",1,0)
PXRMXTU ; SLC/PJH - Reminder Reports Template Update ;11/03/2005
"RTN","PXRMXTU",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXTU",3,0)
 ; 
"RTN","PXRMXTU",4,0)
 ; Called from PXRMYD,PXRMXD (also at UPD from PXRMXPR/PXRMYPR)
"RTN","PXRMXTU",5,0)
 ;
"RTN","PXRMXTU",6,0)
 ;Option to create a new template
"RTN","PXRMXTU",7,0)
 ;-------------------------------
"RTN","PXRMXTU",8,0)
START N PXRMASK,MSG D ASK(.PXRMASK)
"RTN","PXRMXTU",9,0)
 I $G(PXRMASK)="Y" D SAVE
"RTN","PXRMXTU",10,0)
EXIT Q
"RTN","PXRMXTU",11,0)
 ;
"RTN","PXRMXTU",12,0)
 ;Ask name for new template
"RTN","PXRMXTU",13,0)
 ;-------------------------
"RTN","PXRMXTU",14,0)
SAVE N X,Y,DIC,DLAYGO
"RTN","PXRMXTU",15,0)
SAV1 S DIC=810.1,DLAYGO=DIC,DIC(0)="QAELX"
"RTN","PXRMXTU",16,0)
 S DIC("A")="STORE REPORT LOGIC IN TEMPLATE NAME: "
"RTN","PXRMXTU",17,0)
 W !
"RTN","PXRMXTU",18,0)
 D ^DIC
"RTN","PXRMXTU",19,0)
 I X="" W !,"A template name must be entered" G SAV1
"RTN","PXRMXTU",20,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMXTU",21,0)
 I Y=-1 S DUOUT=1 W !,"Details not saved" Q
"RTN","PXRMXTU",22,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMXTU",23,0)
 ;Check
"RTN","PXRMXTU",24,0)
 I ($P(Y,U,3)'=1) W !,"This template name already exists" G SAV1
"RTN","PXRMXTU",25,0)
 ;Get template name and title
"RTN","PXRMXTU",26,0)
 S PXRMTMP=Y,TITLE=$P($G(^PXRMPT(810.1,$P(Y,U),0)),U,2)
"RTN","PXRMXTU",27,0)
 S $P(PXRMTMP,U,3)=TITLE
"RTN","PXRMXTU",28,0)
 ;File details
"RTN","PXRMXTU",29,0)
 D FILE(Y,1,0)
"RTN","PXRMXTU",30,0)
 ;File not saved message
"RTN","PXRMXTU",31,0)
 I $D(MSG) D  Q
"RTN","PXRMXTU",32,0)
 .N DA,DIK
"RTN","PXRMXTU",33,0)
 .S DA=$P(Y,U),DIK="^PXRMPT(810.1," D ^DIK
"RTN","PXRMXTU",34,0)
 .D MESS^PXRMXTF(4,$P(PXRMTMP,U,2))
"RTN","PXRMXTU",35,0)
 ;File saved message
"RTN","PXRMXTU",36,0)
 D MESS^PXRMXTF(1,$P(PXRMTMP,U,2))
"RTN","PXRMXTU",37,0)
 Q
"RTN","PXRMXTU",38,0)
 ;
"RTN","PXRMXTU",39,0)
 ;File template detail
"RTN","PXRMXTU",40,0)
 ;--------------------
"RTN","PXRMXTU",41,0)
FILE(INP,UPD,CLR) ;
"RTN","PXRMXTU",42,0)
 N CNT,FDA,FDAIEN,FNO,IC,INT,MODE,NAME,X
"RTN","PXRMXTU",43,0)
 S FDAIEN(1)=$P(INP,U),NAME=$P(INP,U,2)
"RTN","PXRMXTU",44,0)
 ;Save exit flags - needed for rollback
"RTN","PXRMXTU",45,0)
 N DUOUT,DTOUT
"RTN","PXRMXTU",46,0)
 ;
"RTN","PXRMXTU",47,0)
 ;Update or Add
"RTN","PXRMXTU",48,0)
 S MODE=$S(UPD:(FDAIEN(1)_","),1:"+1,")
"RTN","PXRMXTU",49,0)
 ;Delete entries from existing template
"RTN","PXRMXTU",50,0)
 I CLR D
"RTN","PXRMXTU",51,0)
 .N DA S DA=0
"RTN","PXRMXTU",52,0)
 .F  S DA=$O(^PXRMPT(810.1,FDAIEN(1),DA)) Q:'DA  D
"RTN","PXRMXTU",53,0)
 ..K ^PXRMPT(810.1,FDAIEN(1),DA)
"RTN","PXRMXTU",54,0)
 ;
"RTN","PXRMXTU",55,0)
 I PXRMSEL="L" S X=PXRMLCSC,PXRMLCSC=$P(PXRMLCSC,U)
"RTN","PXRMXTU",56,0)
 ;
"RTN","PXRMXTU",57,0)
 N MREF,XREF
"RTN","PXRMXTU",58,0)
 D XREF^PXRMXTB
"RTN","PXRMXTU",59,0)
 ;
"RTN","PXRMXTU",60,0)
 ;Save single fields into FDA
"RTN","PXRMXTU",61,0)
 F IC="NAME","PXRMLCSC","PXRMPRIM","PXRMREP","PXRMSEL","PXRMTYP" D
"RTN","PXRMXTU",62,0)
 .S FDA(810.1,MODE,XREF(IC))=$G(@IC)
"RTN","PXRMXTU",63,0)
 F IC="PXRMFD","PXRMSCAT","RUN","TITLE" D
"RTN","PXRMXTU",64,0)
 .S FDA(810.1,MODE,XREF(IC))=$G(@IC)
"RTN","PXRMXTU",65,0)
 ;
"RTN","PXRMXTU",66,0)
 I PXRMSEL="L" S PXRMLCSC=X
"RTN","PXRMXTU",67,0)
 ;
"RTN","PXRMXTU",68,0)
 ;Save Arrays into FDA
"RTN","PXRMXTU",69,0)
 ;
"RTN","PXRMXTU",70,0)
 ;Reminder Items
"RTN","PXRMXTU",71,0)
 S CNT=1
"RTN","PXRMXTU",72,0)
 D SUB1(.PXRMREM,"810.12",1)
"RTN","PXRMXTU",73,0)
 ;Save Facility codes
"RTN","PXRMXTU",74,0)
 D SUB1(.PXRMFAC,"810.13",1)
"RTN","PXRMXTU",75,0)
 ;Save Provider codes
"RTN","PXRMXTU",76,0)
 D SUB1(.PXRMPRV,"810.14",1)
"RTN","PXRMXTU",77,0)
 ;Save Patient codes
"RTN","PXRMXTU",78,0)
 D SUB1(.PXRMPAT,"810.16",1)
"RTN","PXRMXTU",79,0)
 ;Save OE/RR Team codes
"RTN","PXRMXTU",80,0)
 D SUB1(.PXRMOTM,"810.17",1)
"RTN","PXRMXTU",81,0)
 ;Save PCMM Team codes
"RTN","PXRMXTU",82,0)
 D SUB1(.PXRMPCM,"810.18",1)
"RTN","PXRMXTU",83,0)
 ;Save Hospital Location codes
"RTN","PXRMXTU",84,0)
 D SUB1(.PXRMLCHL,"810.11",2)
"RTN","PXRMXTU",85,0)
 ;Save Clinic Stop codes
"RTN","PXRMXTU",86,0)
 D SUB1(.PXRMCS,"810.111",2)
"RTN","PXRMXTU",87,0)
 ;Save Clinic groups
"RTN","PXRMXTU",88,0)
 D SUB1(.PXRMCGRP,"810.112",1)
"RTN","PXRMXTU",89,0)
 ;Save Reminder Categories
"RTN","PXRMXTU",90,0)
 D SUB1(.PXRMRCAT,"810.113",1)
"RTN","PXRMXTU",91,0)
 ;Save Patient lists
"RTN","PXRMXTU",92,0)
 D SUB1(.PXRMLIST,"810.114",1)
"RTN","PXRMXTU",93,0)
 ;
"RTN","PXRMXTU",94,0)
 ;Update template file
"RTN","PXRMXTU",95,0)
 D UPDATE^DIE("S","FDA","FDAIEN","MSG")
"RTN","PXRMXTU",96,0)
 ;
"RTN","PXRMXTU",97,0)
 I $D(MSG) D
"RTN","PXRMXTU",98,0)
 .W !!,"Update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMXTU",99,0)
 .S IC="MSG"
"RTN","PXRMXTU",100,0)
 .F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","PXRMXTU",101,0)
 .W !,"Examine the above error message for the reason.",!
"RTN","PXRMXTU",102,0)
 .H 2
"RTN","PXRMXTU",103,0)
 Q
"RTN","PXRMXTU",104,0)
 ;
"RTN","PXRMXTU",105,0)
 ;Save arrays into FDA
"RTN","PXRMXTU",106,0)
 ;--------------------
"RTN","PXRMXTU",107,0)
SUB1(OUTPUT,VAR,PIECE) ;
"RTN","PXRMXTU",108,0)
 S IC=""
"RTN","PXRMXTU",109,0)
 ;This is use for saving individual reminders back to the original
"RTN","PXRMXTU",110,0)
 ;template
"RTN","PXRMXTU",111,0)
 I VAR=810.12,$D(PXRMTREM($P(INP,U)))>0 D  Q
"RTN","PXRMXTU",112,0)
 .F  S IC=$O(PXRMTREM($P(INP,U),IC)) Q:IC=""  D
"RTN","PXRMXTU",113,0)
 ..S INT=$P(PXRMTREM($P(INP,U),IC),U,PIECE),CNT=CNT+1
"RTN","PXRMXTU",114,0)
 ..S FDA(VAR,"+"_CNT_","_MODE,.01)=INT
"RTN","PXRMXTU",115,0)
 ..S FDA(VAR,"+"_CNT_","_MODE,.02)=IC
"RTN","PXRMXTU",116,0)
 ;
"RTN","PXRMXTU",117,0)
 ;This is use for saving individual reminders category back to the 
"RTN","PXRMXTU",118,0)
 ;original template
"RTN","PXRMXTU",119,0)
 I VAR=810.113,$D(PXRMTCAT($P(INP,U)))>0 D  Q
"RTN","PXRMXTU",120,0)
 .F  S IC=$O(PXRMTCAT($P(INP,U),IC)) Q:IC=""  D
"RTN","PXRMXTU",121,0)
 ..S INT=$P(PXRMTCAT($P(INP,U),IC),U,PIECE),CNT=CNT+1
"RTN","PXRMXTU",122,0)
 ..S FDA(VAR,"+"_CNT_","_MODE,.01)=INT
"RTN","PXRMXTU",123,0)
 ..S FDA(VAR,"+"_CNT_","_MODE,.02)=IC
"RTN","PXRMXTU",124,0)
 ;
"RTN","PXRMXTU",125,0)
 ;this is use for saving everything else to the template
"RTN","PXRMXTU",126,0)
 F  S IC=$O(OUTPUT(IC)) Q:IC=""  D
"RTN","PXRMXTU",127,0)
 .S INT=$P(OUTPUT(IC),U,PIECE),CNT=CNT+1
"RTN","PXRMXTU",128,0)
 .S FDA(VAR,"+"_CNT_","_MODE,.01)=INT
"RTN","PXRMXTU",129,0)
 .;Save Display order for reminders and categories
"RTN","PXRMXTU",130,0)
 .I (VAR=810.12)!(VAR=810.113) S FDA(VAR,"+"_CNT_","_MODE,.02)=IC
"RTN","PXRMXTU",131,0)
 Q
"RTN","PXRMXTU",132,0)
 ;
"RTN","PXRMXTU",133,0)
 ;Save Service Categories into FDA
"RTN","PXRMXTU",134,0)
 ;--------------------------------
"RTN","PXRMXTU",135,0)
SUB2(FLD,VAR) ;
"RTN","PXRMXTU",136,0)
 F IC=1:1 S INT=$E(@FLD,IC) Q:INT=""  D
"RTN","PXRMXTU",137,0)
 .S CNT=CNT+1,FDA(VAR,"+"_CNT_","_MODE,.01)=INT
"RTN","PXRMXTU",138,0)
 Q
"RTN","PXRMXTU",139,0)
 ;
"RTN","PXRMXTU",140,0)
 ;
"RTN","PXRMXTU",141,0)
 ;Option to save a new template
"RTN","PXRMXTU",142,0)
 ;-----------------------------
"RTN","PXRMXTU",143,0)
ASK(YESNO) ;
"RTN","PXRMXTU",144,0)
 N X,Y,TEXT
"RTN","PXRMXTU",145,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXTU",146,0)
 S DIR(0)="YA0"
"RTN","PXRMXTU",147,0)
 S DIR("A")="Create a new report template: "
"RTN","PXRMXTU",148,0)
 S DIR("B")="N"
"RTN","PXRMXTU",149,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXTU",150,0)
 S DIR("??")=U_"D HELP^PXRMXTU(1)"
"RTN","PXRMXTU",151,0)
 W !
"RTN","PXRMXTU",152,0)
 D ^DIR K DIR
"RTN","PXRMXTU",153,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXTU",154,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXTU",155,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXTU",156,0)
 Q
"RTN","PXRMXTU",157,0)
 ;
"RTN","PXRMXTU",158,0)
 ;General help text routine. Write out the text in the HTEXT array
"RTN","PXRMXTU",159,0)
 ;----------------------------------------------------------------
"RTN","PXRMXTU",160,0)
HELP(CALL) ;
"RTN","PXRMXTU",161,0)
 N HTEXT
"RTN","PXRMXTU",162,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMXTU",163,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMXTU",164,0)
 ;
"RTN","PXRMXTU",165,0)
 I CALL=1 D
"RTN","PXRMXTU",166,0)
 .S HTEXT(1)="Enter 'Y' to save the reporting parameters as a report"
"RTN","PXRMXTU",167,0)
 .S HTEXT(2)="template from which the report may be re-run in future."
"RTN","PXRMXTU",168,0)
 ;
"RTN","PXRMXTU",169,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTU",170,0)
 S IC=""
"RTN","PXRMXTU",171,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMXTU",172,0)
 . S X=HTEXT(IC)
"RTN","PXRMXTU",173,0)
 . D ^DIWP
"RTN","PXRMXTU",174,0)
 W !
"RTN","PXRMXTU",175,0)
 S IC=0
"RTN","PXRMXTU",176,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMXTU",177,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMXTU",178,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTU",179,0)
 W !
"RTN","PXRMXTU",180,0)
 Q
"RTN","PXRMXTU",181,0)
 ;
"RTN","PXRMXTU",182,0)
 ;Save template info to new name
"RTN","PXRMXTU",183,0)
 ;------------------------------
"RTN","PXRMXTU",184,0)
COPY N PXRMLCSC,PXRMPRIM,PRRMREP,PXRMSEL,PXRMTYP,PXRMFD,RUN,PXRMCS
"RTN","PXRMXTU",185,0)
 N PXRMREM,PXRMFAC,PXRMPRV,PXRMPAT,PXRMOTM,PXRMSCAT,PXRMLCHL,PXRMCS
"RTN","PXRMXTU",186,0)
 ;Load arrays from original template PXRMTMP
"RTN","PXRMXTU",187,0)
 D LOAD^PXRMXT I $D(MSG) Q
"RTN","PXRMXTU",188,0)
 ;Clear last run date
"RTN","PXRMXTU",189,0)
 S RUN=""
"RTN","PXRMXTU",190,0)
 ;Save arrays to new ID
"RTN","PXRMXTU",191,0)
 D FILE(NEWTEMP,0)
"RTN","PXRMXTU",192,0)
 Q
"RTN","PXRMXTU",193,0)
 ;
"RTN","PXRMXTU",194,0)
 ;Update print template last run date (called from PXRMYPR/PXRMXPR)
"RTN","PXRMXTU",195,0)
 ;-----------------------------------------------------------------
"RTN","PXRMXTU",196,0)
UPD S ^PXRMPT(810.1,$P(PXRMTMP,U),7)=PXRMXST
"RTN","PXRMXTU",197,0)
 Q
"RTN","PXRMXTU",198,0)
 ;
"RTN","PXRMXTU",199,0)
 ;Called as an input transform for 810.1/NAME
"RTN","PXRMXTU",200,0)
 ;-------------------------------------------
"RTN","PXRMXTU",201,0)
NAME Q:'$D(X)  Q:X=""  Q:$G(PXRMTYP)=""
"RTN","PXRMXTU",202,0)
 ;Disallow duplicate template names
"RTN","PXRMXTU",203,0)
 Q:'$D(^PXRMPT(810.1,"B",X))
"RTN","PXRMXTU",204,0)
 W !,"This template name already exists" K X
"RTN","PXRMXTU",205,0)
 Q
"RTN","PXRMXTU",206,0)
 ;
"RTN","PXRMXTU",207,0)
 ;Called as an input transform for 810.1/PXRMFD
"RTN","PXRMXTU",208,0)
 ;---------------------------------------------
"RTN","PXRMXTU",209,0)
INP Q:'$D(X)  Q:X=""
"RTN","PXRMXTU",210,0)
 ;If inpatient wards prompt only for Admissions/Current Patients
"RTN","PXRMXTU",211,0)
 I $G(PXRMINP),"FP"[X D
"RTN","PXRMXTU",212,0)
 .W !,"Select either Inpatient Admissions or Current Inpatients" K X
"RTN","PXRMXTU",213,0)
 ;If other locations prompt only for Prior visits/Future Appts
"RTN","PXRMXTU",214,0)
 I '$G(PXRMINP),"AC"[X D
"RTN","PXRMXTU",215,0)
 .W !,"Select either Future Appointments or Prior Visits" K X
"RTN","PXRMXTU",216,0)
 Q
"RTN","PXRMXX1")
0^84^B34315133
"RTN","PXRMXX1",1,0)
PXRMXX1 ; SLC/PJH - Build list of reminder findings;08/03/2005
"RTN","PXRMXX1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4**;Feb 04, 2005;Build 21
"RTN","PXRMXX1",3,0)
 ;
"RTN","PXRMXX1",4,0)
 ;Called at REM, REPORT and PSMERG from PXRMXX
"RTN","PXRMXX1",5,0)
 ;
"RTN","PXRMXX1",6,0)
 ;Merge the patients found by the pharmacy API
"RTN","PXRMXX1",7,0)
 ;--------------------------------------------
"RTN","PXRMXX1",8,0)
PSMERG(TYP,NODE,SEARCH) ;
"RTN","PXRMXX1",9,0)
 N DATA,DATE,DCNT,DFN,DRUG,DSUP,FCNT,FINDING,FIEN,FLD,FTYP,FREC,FUNIQ
"RTN","PXRMXX1",10,0)
 N LAST,LDATE,NEXT,RDATE,SDATE,STOPDATE,TERM,TIEN,VTYP
"RTN","PXRMXX1",11,0)
 ;
"RTN","PXRMXX1",12,0)
 S DFN="",VTYP=$S(TYP="PXRMPSI":"I",1:"O")
"RTN","PXRMXX1",13,0)
 F  S DFN=$O(^TMP(TYP_NODE,$J,DFN)) Q:'DFN  D
"RTN","PXRMXX1",14,0)
 .;Get last entry for this patient created by reminder evaluation
"RTN","PXRMXX1",15,0)
 .S LAST=$O(^TMP(NODE,$J,DFN,"FIND",""),-1),NEXT=LAST+1,DCNT=0
"RTN","PXRMXX1",16,0)
 .;If this is a new patient update patient and finding count
"RTN","PXRMXX1",17,0)
 .I NEXT=1 S PXRMFCNT=PXRMFCNT+1,PXRMCNT=PXRMCNT+1
"RTN","PXRMXX1",18,0)
 .;Scan through medications found for this patient 
"RTN","PXRMXX1",19,0)
 .F  S DCNT=$O(^TMP(TYP_NODE,$J,DFN,DCNT)) Q:'DCNT  D
"RTN","PXRMXX1",20,0)
 ..;Move data fields into FIEVAL format
"RTN","PXRMXX1",21,0)
 ..S FINDING=$P($G(^TMP(TYP_NODE,$J,DFN,DCNT,0)),U) Q:FINDING=""
"RTN","PXRMXX1",22,0)
 ..S DATA=$G(^TMP(TYP_NODE,$J,DFN,DCNT,1)),DATE=$P(DATA,U)
"RTN","PXRMXX1",23,0)
 ..S RDATE=$P(DATA,U,2),DRUG=$P(DATA,U,3),DSUP=$P(DATA,U,4)
"RTN","PXRMXX1",24,0)
 ..;Stop date
"RTN","PXRMXX1",25,0)
 ..S STOPDATE=$P(DATA,U,5)
"RTN","PXRMXX1",26,0)
 ..I +STOPDATE S DSUP=$$FMDIFF^XLFDT(STOPDATE,DATE,"")
"RTN","PXRMXX1",27,0)
 ..;Determine finding item/type
"RTN","PXRMXX1",28,0)
 ..S FTYPE=$P(FINDING,";",2),FIEN=$P(FINDING,";") Q:FIEN=""  Q:FTYPE=""
"RTN","PXRMXX1",29,0)
 ..;Create file entry for each term
"RTN","PXRMXX1",30,0)
 ..S TIEN=""
"RTN","PXRMXX1",31,0)
 ..F  S TIEN=$O(SEARCH(FTYPE,FIEN,TIEN)) Q:TIEN=""  D
"RTN","PXRMXX1",32,0)
 ...F FLD="FINDING","DATE","RDATE","DRUG","DSUP","STOPDATE" D
"RTN","PXRMXX1",33,0)
 ....S ^TMP(NODE,$J,DFN,"FIND",NEXT,FLD)=@FLD
"RTN","PXRMXX1",34,0)
 ...;Get term name (no transforms)
"RTN","PXRMXX1",35,0)
 ...S ^TMP(NODE,$J,DFN,"FIND",NEXT,"TERM")=$P($G(^PXRMD(811.5,TIEN,0)),U)
"RTN","PXRMXX1",36,0)
 ...;Update header
"RTN","PXRMXX1",37,0)
 ...S ^TMP(NODE,$J,DFN,"FIND",NEXT)=DATE_U_VTYP
"RTN","PXRMXX1",38,0)
 ...;Update finding header
"RTN","PXRMXX1",39,0)
 ...S LDATE=$P($G(^TMP(NODE,$J,DFN)),U)
"RTN","PXRMXX1",40,0)
 ...I DATE>LDATE S ^TMP(NODE,$J,DFN)=DATE_U_VTYP
"RTN","PXRMXX1",41,0)
 ...;Save count by finding for report
"RTN","PXRMXX1",42,0)
 ...S FREC=$G(PXRMFIEN(FINDING)),FCNT=$P(FREC,U),FUNIQ=$P(FREC,U,2)
"RTN","PXRMXX1",43,0)
 ...S FCNT=FCNT+1 I '$G(FUNIQ(FIEN)) S FUNIQ=FUNIQ+1
"RTN","PXRMXX1",44,0)
 ...S PXRMFIEN(FINDING)=FCNT_U_FUNIQ,FUNIQ(FINDING)=1
"RTN","PXRMXX1",45,0)
 ...;Update count
"RTN","PXRMXX1",46,0)
 ...S NEXT=NEXT+1
"RTN","PXRMXX1",47,0)
 Q
"RTN","PXRMXX1",48,0)
 ;
"RTN","PXRMXX1",49,0)
 ;Build list of related findings
"RTN","PXRMXX1",50,0)
 ;------------------------------
"RTN","PXRMXX1",51,0)
REM(PXRMITEM,OUTPUT,LAB) ;
"RTN","PXRMXX1",52,0)
 N COHORT,FTYPE,FIEN,FNODE,TNAM,TIEN
"RTN","PXRMXX1",53,0)
 S FTYPE=""
"RTN","PXRMXX1",54,0)
 ;Check if terms findings exist on the reminder
"RTN","PXRMXX1",55,0)
 F  S FTYPE=$O(^PXD(811.9,PXRMITEM,20,"E",FTYPE)) Q:FTYPE=""  D
"RTN","PXRMXX1",56,0)
 .;Check terms ONLY
"RTN","PXRMXX1",57,0)
 .I FTYPE="PXRMD(811.5," D  Q
"RTN","PXRMXX1",58,0)
 ..N FTYPE S TIEN=""
"RTN","PXRMXX1",59,0)
 ..;Scan through terms in this reminder
"RTN","PXRMXX1",60,0)
 ..F  S TIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,",TIEN)) Q:'TIEN  D
"RTN","PXRMXX1",61,0)
 ...;Get the cohort flag
"RTN","PXRMXX1",62,0)
 ...S FNODE=$O(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,",TIEN,""))
"RTN","PXRMXX1",63,0)
 ...S COHORT="",FTYPE=""
"RTN","PXRMXX1",64,0)
 ...I FNODE S COHORT=$P($G(^PXD(811.9,PXRMITEM,20,FNODE,0)),U,7)
"RTN","PXRMXX1",65,0)
 ...;Scan through term looking for findings
"RTN","PXRMXX1",66,0)
 ...F  S FTYPE=$O(^PXRMD(811.5,TIEN,20,"E",FTYPE)) Q:FTYPE=""  D
"RTN","PXRMXX1",67,0)
 ....;Taxonomy findings
"RTN","PXRMXX1",68,0)
 ....I FTYPE="PXD(811.2," D RTAX Q
"RTN","PXRMXX1",69,0)
 ....;If Lab test and not in cohort ignore
"RTN","PXRMXX1",70,0)
 ....I FTYPE="LAB(60,",COHORT="" D  Q
"RTN","PXRMXX1",71,0)
 .....;Only applies to lab extract reminder 
"RTN","PXRMXX1",72,0)
 .....I $G(REM(PXRMITEM))'="VA-NATIONAL EPI LAB EXTRACT" Q
"RTN","PXRMXX1",73,0)
 .....;Get the term name for this lab test
"RTN","PXRMXX1",74,0)
 .....S TNAM=$P($G(^PXRMD(811.5,TIEN,0)),U) Q:TNAM=""
"RTN","PXRMXX1",75,0)
 .....S LAB(TNAM)=TIEN Q
"RTN","PXRMXX1",76,0)
 ....;Other findings
"RTN","PXRMXX1",77,0)
 ....D RSET
"RTN","PXRMXX1",78,0)
 Q
"RTN","PXRMXX1",79,0)
 ;
"RTN","PXRMXX1",80,0)
 ;Save report details
"RTN","PXRMXX1",81,0)
 ;-------------------
"RTN","PXRMXX1",82,0)
REPORT(NODE) ;
"RTN","PXRMXX1",83,0)
 N RDATE,CNT,CN1,COUNT,DATA,LAST,OLD,DESC
"RTN","PXRMXX1",84,0)
 ;format rundate as MMDDYY
"RTN","PXRMXX1",85,0)
 S RDATE=$$DT^XLFDT,RDATE=$E(RDATE,4,5)_$E(RDATE,6,7)_$E(RDATE,2,3)
"RTN","PXRMXX1",86,0)
 ;Task Name
"RTN","PXRMXX1",87,0)
 S DESC="LREPI "_$E(PXRMEDT,2,3)_"/"_$E(PXRMEDT,4,5)_" "_RDATE
"RTN","PXRMXX1",88,0)
 S DATA=$G(^PXRMXT(810.3,0))
"RTN","PXRMXX1",89,0)
 ;Find next entry in report file
"RTN","PXRMXX1",90,0)
 S LAST=$P(DATA,U,3),COUNT=$P(DATA,U,4)+1,CNT=LAST+1
"RTN","PXRMXX1",91,0)
 S $P(^PXRMXT(810.3,0),U,3)=CNT,$P(^PXRMXT(810.3,0),U,4)=COUNT
"RTN","PXRMXX1",92,0)
 ;Save Task and extract parameters
"RTN","PXRMXX1",93,0)
 S ^PXRMXT(810.3,CNT,0)=DESC_U_PXRMBDT_U_PXRMEDT_U_$G(ZTSK)_U_DUZ_U_$$NOW^XLFDT_U_PXRMCNT_U_PXRMFCNT
"RTN","PXRMXX1",94,0)
 S $P(^PXRMXT(810.3,CNT,50),U)=1
"RTN","PXRMXX1",95,0)
 S $P(^PXRMXT(810.3,CNT,100),U)="N"
"RTN","PXRMXX1",96,0)
 ;Transfer findings into report file
"RTN","PXRMXX1",97,0)
 N DATE,DFN,DRUG,DSUP,ENC,EREC,ETYP,IC,FINDING,RESULT
"RTN","PXRMXX1",98,0)
 N TERM,ALTTRM,TIEN,TNDBID,VALUE,VIEN
"RTN","PXRMXX1",99,0)
 S DFN=0,CN1=0
"RTN","PXRMXX1",100,0)
 F  S DFN=$O(^TMP(NODE,$J,DFN)) Q:'DFN  Q:TSTOP=1  D
"RTN","PXRMXX1",101,0)
 .;Check if stop task requested
"RTN","PXRMXX1",102,0)
 .I $$S^%ZTLOAD S TSTOP=1 Q
"RTN","PXRMXX1",103,0)
 .S ENC=0
"RTN","PXRMXX1",104,0)
 .F  S ENC=$O(^TMP(NODE,$J,DFN,"FIND",ENC)) Q:'ENC  D
"RTN","PXRMXX1",105,0)
 ..;DINUM
"RTN","PXRMXX1",106,0)
 ..S CN1=CN1+1
"RTN","PXRMXX1",107,0)
 ..;Encounter type
"RTN","PXRMXX1",108,0)
 ..S ETYP=$P($G(^TMP(NODE,$J,DFN,"FIND",ENC)),U,2)
"RTN","PXRMXX1",109,0)
 ..;Finding details
"RTN","PXRMXX1",110,0)
 ..F IC="DATE","FINDING","RESULT","TERM","ALTTRM","VALUE","VIEN" D
"RTN","PXRMXX1",111,0)
 ...S @IC=$P($G(^TMP(NODE,$J,DFN,"FIND",ENC,IC)),U)
"RTN","PXRMXX1",112,0)
 ..;Drug details
"RTN","PXRMXX1",113,0)
 ..F IC="DRUG","DSUP" D
"RTN","PXRMXX1",114,0)
 ...S @IC=$P($G(^TMP(NODE,$J,DFN,"FIND",ENC,IC)),U)
"RTN","PXRMXX1",115,0)
 ..;Get the term ien for the original term if a mapping occurred
"RTN","PXRMXX1",116,0)
 ..S TIEN="",TNDBID=""
"RTN","PXRMXX1",117,0)
 ..I TERM]"" S TIEN=$O(^PXRMD(811.5,"B",TERM,"")),TNDBID=ALTTRM
"RTN","PXRMXX1",118,0)
 ..;Save value if the result is null
"RTN","PXRMXX1",119,0)
 ..I RESULT="" S RESULT=VALUE
"RTN","PXRMXX1",120,0)
 ..;Save data to file
"RTN","PXRMXX1",121,0)
 ..S EREC=DFN_U_U_TIEN_U_FINDING_U_TNDBID_U_DATE_U_VIEN_U_ETYP
"RTN","PXRMXX1",122,0)
 ..S ^PXRMXT(810.3,CNT,1,CN1,0)=EREC
"RTN","PXRMXX1",123,0)
 ..S EREC=RESULT_U_VALUE_U_DRUG_U_DSUP
"RTN","PXRMXX1",124,0)
 ..S ^PXRMXT(810.3,CNT,1,CN1,1)=EREC
"RTN","PXRMXX1",125,0)
 ;
"RTN","PXRMXX1",126,0)
 ;Set top node for ^DIK re-index
"RTN","PXRMXX1",127,0)
 S ^PXRMXT(810.3,CNT,1,0)="^810.31A^"_CN1_U_CN1
"RTN","PXRMXX1",128,0)
 ;
"RTN","PXRMXX1",129,0)
 ;Write finding totals to report file
"RTN","PXRMXX1",130,0)
 N FCNT,FUNIQ,FIEN,FFIEN
"RTN","PXRMXX1",131,0)
 S FIEN="",CN1=0
"RTN","PXRMXX1",132,0)
 F  S FIEN=$O(PXRMFIEN(FIEN)) Q:FIEN=""  D
"RTN","PXRMXX1",133,0)
 .S FCNT=+$P(PXRMFIEN(FIEN),U),FUNIQ=+$P(PXRMFIEN(FIEN),U,2)
"RTN","PXRMXX1",134,0)
 .S FFIEN=FIEN I FFIEN="NO FINDING" S FFIEN=""
"RTN","PXRMXX1",135,0)
 .S CN1=CN1+1,^PXRMXT(810.3,CNT,2,CN1,0)=FFIEN_U_FCNT_U_FUNIQ
"RTN","PXRMXX1",136,0)
 ;
"RTN","PXRMXX1",137,0)
 ;Set top node for ^DIK re-index
"RTN","PXRMXX1",138,0)
 S ^PXRMXT(810.3,CNT,2,0)="^810.32A^"_CN1_U_CN1
"RTN","PXRMXX1",139,0)
 ;
"RTN","PXRMXX1",140,0)
 ;Re-index the file for this batch
"RTN","PXRMXX1",141,0)
 N DIK,DA
"RTN","PXRMXX1",142,0)
 S DIK="^PXRMXT(810.3,",DA=CNT
"RTN","PXRMXX1",143,0)
 D IX1^DIK
"RTN","PXRMXX1",144,0)
 ;
"RTN","PXRMXX1",145,0)
 Q
"RTN","PXRMXX1",146,0)
 ;
"RTN","PXRMXX1",147,0)
 ;Store finding for term
"RTN","PXRMXX1",148,0)
 ;----------------------
"RTN","PXRMXX1",149,0)
RSET N FIEN
"RTN","PXRMXX1",150,0)
 S FIEN=""
"RTN","PXRMXX1",151,0)
 F  S FIEN=$O(^PXRMD(811.5,TIEN,20,"E",FTYPE,FIEN)) Q:'FIEN  D
"RTN","PXRMXX1",152,0)
 .S OUTPUT(FTYPE,FIEN,TIEN)=""
"RTN","PXRMXX1",153,0)
 Q
"RTN","PXRMXX1",154,0)
 ;
"RTN","PXRMXX1",155,0)
 ;Store the taxonomy ICD9 codes
"RTN","PXRMXX1",156,0)
 ;-----------------------------
"RTN","PXRMXX1",157,0)
RTAX N FIEN,ISUB,TXIEN
"RTN","PXRMXX1",158,0)
 S TXIEN=""
"RTN","PXRMXX1",159,0)
 ;Scan taxonomy section of the term
"RTN","PXRMXX1",160,0)
 F  S TXIEN=$O(^PXRMD(811.5,TIEN,20,"E",FTYPE,TXIEN)) Q:'TXIEN  D
"RTN","PXRMXX1",161,0)
 .S ISUB=""
"RTN","PXRMXX1",162,0)
 .;Extract ICD9 codes from expanded taxonomy file
"RTN","PXRMXX1",163,0)
 .F  S ISUB=$O(^PXD(811.3,TXIEN,80,ISUB)) Q:'ISUB  D
"RTN","PXRMXX1",164,0)
 ..S FIEN=$P($G(^PXD(811.3,TXIEN,80,ISUB,0)),U) Q:'FIEN
"RTN","PXRMXX1",165,0)
 ..S OUTPUT("ICD9(",FIEN,TIEN)=""
"RTN","PXRMXX1",166,0)
 Q
"SEC","^DD",801.41,801.41,111,8.5)

"SEC","^DD",801.41,801.41,111,9)
"@"
"SEC","^DD",801.41,801.41,114,9)
"@"
"SEC","^DD",811.9,811.902,26,9)

"SEC","^DIC",800,800,0,"AUDIT")
@
"SEC","^DIC",800,800,0,"DD")
@
"SEC","^DIC",800,800,0,"DEL")
@
"SEC","^DIC",800,800,0,"LAYGO")
@
"SEC","^DIC",800,800,0,"RD")

"SEC","^DIC",800,800,0,"WR")
@
"SEC","^DIC",801.41,801.41,0,"AUDIT")
@
"SEC","^DIC",801.41,801.41,0,"DD")
@
"SEC","^DIC",801.41,801.41,0,"DEL")
@
"SEC","^DIC",801.41,801.41,0,"LAYGO")
@
"SEC","^DIC",801.41,801.41,0,"RD")

"SEC","^DIC",801.41,801.41,0,"WR")
@
"SEC","^DIC",801.5,801.5,0,"AUDIT")
@
"SEC","^DIC",801.5,801.5,0,"DD")
@
"SEC","^DIC",801.5,801.5,0,"DEL")
@
"SEC","^DIC",801.5,801.5,0,"LAYGO")
@
"SEC","^DIC",801.5,801.5,0,"RD")
@
"SEC","^DIC",801.5,801.5,0,"WR")
@
"SEC","^DIC",801.55,801.55,0,"AUDIT")
@
"SEC","^DIC",801.55,801.55,0,"DD")
@
"SEC","^DIC",801.55,801.55,0,"DEL")
@
"SEC","^DIC",801.55,801.55,0,"LAYGO")
@
"SEC","^DIC",801.55,801.55,0,"RD")
@
"SEC","^DIC",801.55,801.55,0,"WR")
@
"SEC","^DIC",802.4,802.4,0,"AUDIT")
@
"SEC","^DIC",802.4,802.4,0,"DD")
@
"SEC","^DIC",802.4,802.4,0,"DEL")
@
"SEC","^DIC",802.4,802.4,0,"LAYGO")
@
"SEC","^DIC",802.4,802.4,0,"RD")
@
"SEC","^DIC",802.4,802.4,0,"WR")
@
"SEC","^DIC",810.1,810.1,0,"AUDIT")
@
"SEC","^DIC",810.1,810.1,0,"DD")
@
"SEC","^DIC",810.1,810.1,0,"DEL")
@
"SEC","^DIC",810.1,810.1,0,"LAYGO")
@
"SEC","^DIC",810.1,810.1,0,"RD")

"SEC","^DIC",810.1,810.1,0,"WR")
@
"SEC","^DIC",810.2,810.2,0,"AUDIT")
@
"SEC","^DIC",810.2,810.2,0,"DD")
@
"SEC","^DIC",810.2,810.2,0,"DEL")
@
"SEC","^DIC",810.2,810.2,0,"LAYGO")
@
"SEC","^DIC",810.2,810.2,0,"RD")
 
"SEC","^DIC",810.2,810.2,0,"WR")
@
"SEC","^DIC",810.3,810.3,0,"AUDIT")
@
"SEC","^DIC",810.3,810.3,0,"DD")
@
"SEC","^DIC",810.3,810.3,0,"DEL")
@
"SEC","^DIC",810.3,810.3,0,"LAYGO")
@
"SEC","^DIC",810.3,810.3,0,"RD")

"SEC","^DIC",810.3,810.3,0,"WR")
@
"SEC","^DIC",810.4,810.4,0,"AUDIT")
@
"SEC","^DIC",810.4,810.4,0,"DD")
@
"SEC","^DIC",810.4,810.4,0,"DEL")
@
"SEC","^DIC",810.4,810.4,0,"LAYGO")
@
"SEC","^DIC",810.4,810.4,0,"RD")
 
"SEC","^DIC",810.4,810.4,0,"WR")
@
"SEC","^DIC",810.5,810.5,0,"AUDIT")
@
"SEC","^DIC",810.5,810.5,0,"DD")
@
"SEC","^DIC",810.5,810.5,0,"DEL")
@
"SEC","^DIC",810.5,810.5,0,"LAYGO")
@
"SEC","^DIC",810.5,810.5,0,"RD")
 
"SEC","^DIC",810.5,810.5,0,"WR")
@
"SEC","^DIC",810.7,810.7,0,"AUDIT")
@
"SEC","^DIC",810.7,810.7,0,"DD")
@
"SEC","^DIC",810.7,810.7,0,"DEL")
@
"SEC","^DIC",810.7,810.7,0,"LAYGO")
@
"SEC","^DIC",810.7,810.7,0,"RD")
 
"SEC","^DIC",810.7,810.7,0,"WR")
@
"SEC","^DIC",810.8,810.8,0,"AUDIT")
@
"SEC","^DIC",810.8,810.8,0,"DD")
@
"SEC","^DIC",810.8,810.8,0,"DEL")
@
"SEC","^DIC",810.8,810.8,0,"LAYGO")
@
"SEC","^DIC",810.8,810.8,0,"RD")
 
"SEC","^DIC",810.8,810.8,0,"WR")
@
"SEC","^DIC",810.9,810.9,0,"AUDIT")
@
"SEC","^DIC",810.9,810.9,0,"DD")
@
"SEC","^DIC",810.9,810.9,0,"DEL")
@
"SEC","^DIC",810.9,810.9,0,"LAYGO")
@
"SEC","^DIC",810.9,810.9,0,"RD")
 
"SEC","^DIC",810.9,810.9,0,"WR")
@
"SEC","^DIC",811.4,811.4,0,"AUDIT")
@
"SEC","^DIC",811.4,811.4,0,"DD")
@
"SEC","^DIC",811.4,811.4,0,"DEL")
@
"SEC","^DIC",811.4,811.4,0,"LAYGO")
@
"SEC","^DIC",811.4,811.4,0,"RD")

"SEC","^DIC",811.4,811.4,0,"WR")
@
"SEC","^DIC",811.5,811.5,0,"AUDIT")
@
"SEC","^DIC",811.5,811.5,0,"DD")
@
"SEC","^DIC",811.5,811.5,0,"DEL")
@
"SEC","^DIC",811.5,811.5,0,"LAYGO")
@
"SEC","^DIC",811.5,811.5,0,"RD")

"SEC","^DIC",811.5,811.5,0,"WR")
@
"SEC","^DIC",811.8,811.8,0,"AUDIT")
@
"SEC","^DIC",811.8,811.8,0,"DD")
@
"SEC","^DIC",811.8,811.8,0,"DEL")
@
"SEC","^DIC",811.8,811.8,0,"LAYGO")
@
"SEC","^DIC",811.8,811.8,0,"RD")

"SEC","^DIC",811.8,811.8,0,"WR")
@
"VER")
8.0^22.0
"^DD",800,800,0)
FIELD^^16^17
"^DD",800,800,0,"DDA")
N
"^DD",800,800,0,"DT")
3050614
"^DD",800,800,0,"IX","B",800,.01)

"^DD",800,800,0,"NM","CLINICAL REMINDER PARAMETERS")

"^DD",800,800,0,"VRPK")
PXRM
"^DD",800,800,.01,0)
SITE PARAMETERS^RNJ1,0^^0;1^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",800,800,.01,1,0)
^.1
"^DD",800,800,.01,1,1,0)
800^B
"^DD",800,800,.01,1,1,1)
S ^PXRM(800,"B",$E(X,1,30),DA)=""
"^DD",800,800,.01,1,1,2)
K ^PXRM(800,"B",$E(X,1,30),DA)
"^DD",800,800,.01,3)
Type a Number between 1 and 1, 0 Decimal Digits
"^DD",800,800,.01,21,0)
^.001^2^2^3050113^^^^
"^DD",800,800,.01,21,1,0)
This file contains parameters used by the Clinical Reminders package. 
"^DD",800,800,.01,21,2,0)
There is one top-level entry per site.
"^DD",800,800,.01,23,0)
^.001^1^1^3050113^^^^
"^DD",800,800,.01,23,1,0)
There is one entry in this file.
"^DD",800,800,.01,"DT")
3050113
"^DD",800,800,1,0)
DEFAULT REMINDER DISCLAIMER^800.01^^DISC1;0
"^DD",800,800,1,21,0)
^.001^2^2^3050120^^^^
"^DD",800,800,1,21,1,0)
This is the DEFAULT REMINDER DISCLAIMER that is distributed with the
"^DD",800,800,1,21,2,0)
package.
"^DD",800,800,2,0)
SITE REMINDER DISCLAIMER^800.02^^DISC2;0
"^DD",800,800,2,21,0)
^.001^3^3^3050120^^^
"^DD",800,800,2,21,1,0)
This is the site-defined reminder disclaimer. If there is an entry in
"^DD",800,800,2,21,2,0)
this field, then the site-defined disclaimer will override the default
"^DD",800,800,2,21,3,0)
disclaimer.
"^DD",800,800,3,0)
REMINDER MANAGEMENT MAILGROUP^P3.8^XMB(3.8,^MGFE;1^Q
"^DD",800,800,3,3)
Enter the name of the MailMan group that will receive reminder management messages.
"^DD",800,800,3,21,0)
^.001^12^12^3050120^^^^
"^DD",800,800,3,21,1,0)
Members of the MailMan mail group pointed to by this field will receive
"^DD",800,800,3,21,2,0)
various types of MailMan messages concerned with managing reminders.
"^DD",800,800,3,21,3,0)

"^DD",800,800,3,21,4,0)
Some examples: if there is an error during reminder evaluation, this
"^DD",800,800,3,21,5,0)
mail group will be sent a message notifying them of the error. When the
"^DD",800,800,3,21,6,0)
reminder indexes are built, the mail group will receive the messages
"^DD",800,800,3,21,7,0)
this process generates.
"^DD",800,800,3,21,8,0)

"^DD",800,800,3,21,9,0)
When a message is generated, if the user is not a member of the mail
"^DD",800,800,3,21,10,0)
group and the mail group is private, then no members of the mail group
"^DD",800,800,3,21,11,0)
will receive the message. Therefore, it is recommended that the mail
"^DD",800,800,3,21,12,0)
group be public.
"^DD",800,800,3,"DT")
3030303
"^DD",800,800,4,0)
WEB SITES^800.04^^1;0
"^DD",800,800,4,21,0)
^.001^4^4^3050120^^^^
"^DD",800,800,4,21,1,0)
In the CPRS GUI, if you right-click on a reminder, one of the choices is
"^DD",800,800,4,21,2,0)
Reference Information, which will give a list of web sites that have
"^DD",800,800,4,21,3,0)
information related to the reminder. The web sites listed in this
"^DD",800,800,4,21,4,0)
multiple are the default set that apply to all reminders.
"^DD",800,800,4,"DT")
2991129
"^DD",800,800,5,0)
VERSION^F^^VERSION;1^K:$L(X)>20!($L(X)<3) X
"^DD",800,800,5,3)
Answer must be 3-20 characters in length.
"^DD",800,800,5,21,0)
^.001^1^1^3050113^^
"^DD",800,800,5,21,1,0)
This is the current version number of the Clinical Reminders package.
"^DD",800,800,5,"DT")
3000706
"^DD",800,800,6,0)
FULL SSN^S^Y:YES;N:NO;^FULL SSN;1^Q
"^DD",800,800,6,21,0)
^.001^6^6^3050120^^^^
"^DD",800,800,6,21,1,0)
This field is the default for the Clinical Reminders display of Social
"^DD",800,800,6,21,2,0)
Security numbers. It is a set of codes with the possible values of "N"
"^DD",800,800,6,21,3,0)
or "Y". If the value is "Y" then the full SSN is printed; otherwise
"^DD",800,800,6,21,4,0)
only the last four digits of the SSN are printed.
"^DD",800,800,6,21,5,0)
 
"^DD",800,800,6,21,6,0)
The standard setting for this field is N.
"^DD",800,800,6,"DT")
3010802
"^DD",800,800,7,0)
INITIAL MST SYNCH COMP DATE^D^^MST;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,7,21,0)
^.001^1^1^3050113^^^
"^DD",800,800,7,21,1,0)
This is the date and time the initial MST synchronization was completed.
"^DD",800,800,7,"DT")
3010904
"^DD",800,800,8,0)
INITIAL MST SYNCH UPDATE COUNT^NJ7,0^^MST;2^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",800,800,8,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",800,800,8,21,0)
^.001^2^2^3050113^^
"^DD",800,800,8,21,1,0)
This is the number of updates that were made during the initial
"^DD",800,800,8,21,2,0)
synchronization.
"^DD",800,800,8,"DT")
3010904
"^DD",800,800,9,0)
DAILY MST SYNC COMP DATE^D^^MST;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,9,21,0)
^.001^1^1^3050113^^
"^DD",800,800,9,21,1,0)
This is the date and time the last daily MST synchronization was completed.
"^DD",800,800,9,"DT")
3010904
"^DD",800,800,10,0)
DAILY MST SYNCH UPDATE COUNT^NJ7,0^^MST;4^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",800,800,10,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",800,800,10,21,0)
^.001^1^1^3050113^^^
"^DD",800,800,10,21,1,0)
This is the number of updates made during the last daily MST synchronization.
"^DD",800,800,10,"DT")
3010904
"^DD",800,800,11,0)
INITIAL MST SYNCH START DATE^D^^MST;5^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,11,21,0)
^.001^2^2^3050113^^^
"^DD",800,800,11,21,1,0)
This is the date and time the initial Clinical Reminders MST
"^DD",800,800,11,21,2,0)
synchronization was set to run.
"^DD",800,800,11,"DT")
3010904
"^DD",800,800,12,0)
DAILY MST SYNCH START DATE^D^^MST;6^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,12,21,0)
^.001^2^2^3050113^^
"^DD",800,800,12,21,1,0)
This is the date and time the last daily Clinical Reminders MST
"^DD",800,800,12,21,2,0)
synchronization was set to start.
"^DD",800,800,12,"DT")
3010904
"^DD",800,800,13,0)
TRUNCATE EMPLOYEE SSN^S^Y:YES;N:NO;^TRUNCATE EMPLOYEE SSN;1^Q
"^DD",800,800,13,3)
Enter 'N' only if full employee SSN is required on reports.
"^DD",800,800,13,21,0)
^.001^10^10^3050114^^^
"^DD",800,800,13,21,1,0)
The detailed reminders due report has the option to print the full SSN for
"^DD",800,800,13,21,2,0)
the patients selected (see FULL SSN field). However, if a patient is an
"^DD",800,800,13,21,3,0)
employee (fields 361 and 391 in PATIENT file) the SSN will be truncated.
"^DD",800,800,13,21,4,0)
 
"^DD",800,800,13,21,5,0)
If a site, for their own reasons, requires the full SSN for employees to
"^DD",800,800,13,21,6,0)
be printed on their reports then this may be done by setting the TRUNCATE
"^DD",800,800,13,21,7,0)
EMPLOYEE SSN field to 'No'.
"^DD",800,800,13,21,8,0)
 
"^DD",800,800,13,21,9,0)
The default value installed for this field is 'Yes'. This ensures that 
"^DD",800,800,13,21,10,0)
full employee SSNs are not printed on the report. 
"^DD",800,800,13,"DT")
3011205
"^DD",800,800,14,0)
EDIT HISTORY COUNT^NJ3,0^^EDIT HISTORY COUNT;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",800,800,14,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",800,800,14,21,0)
^.001^5^5^3050113^^
"^DD",800,800,14,21,1,0)
The option PXRM REMINDER EDIT HISTORY is used to display the edit
"^DD",800,800,14,21,2,0)
history of a reminder definition from newest to oldest. One of the
"^DD",800,800,14,21,3,0)
questions it asks the user is how many entries to display. This
"^DD",800,800,14,21,4,0)
parameter sets the default number to display. The user can override
"^DD",800,800,14,21,5,0)
this and select any number they want.
"^DD",800,800,14,"DT")
3011218
"^DD",800,800,15,0)
MAXIMUM NUMBER OF INDEX ERRORS^NJ8,0^^MIERR;1^K:+X'=X!(X>10000000)!(X<1)!(X?.E1"."1N.N) X
"^DD",800,800,15,3)
Type a Number between 1 and 10000000, 0 Decimal Digits
"^DD",800,800,15,21,0)
^.001^5^5^3050113^^^
"^DD",800,800,15,21,1,0)
When indexing a global, details about entries that cannot be indexed
"^DD",800,800,15,21,2,0)
are reported in a MailMan message that uses a line for each error. If
"^DD",800,800,15,21,3,0)
there are large numbers of errors the message can become very large.
"^DD",800,800,15,21,4,0)
This parameter establishes the maximum number of entries to list in the
"^DD",800,800,15,21,5,0)
MailMan message so its size does not become unwieldy.
"^DD",800,800,15,"DT")
3031217
"^DD",800,800,16,0)
FORMATTED DISCLAIMER^800.016^^DISCF;0
"^DD",800,800,16,21,0)
^.001^13^13^3051018^^
"^DD",800,800,16,21,1,0)
This file contains two fields to store a disclaimer: DEFAULT
"^DD",800,800,16,21,2,0)
REMINDER DISCLAIMER and SITE REMINDER DISCLAIMER. The DEFAULT
"^DD",800,800,16,21,3,0)
REMINDER DISCLAIMER is distributed with the package. A site
"^DD",800,800,16,21,4,0)
can create and store their own disclaimer in the SITE REMINDER
"^DD",800,800,16,21,5,0)
DISCLAIMER field. If the SITE REMINDER DISCLAIMER is defined it is
"^DD",800,800,16,21,6,0)
used otherwise the DEFAULT REMINDER DISCLAIMER is used.
"^DD",800,800,16,21,7,0)

"^DD",800,800,16,21,8,0)
The disclaimer needs to be formatted before it can be displayed so
"^DD",800,800,16,21,9,0)
for efficiency purposes the disclaimer is formatted once and stored
"^DD",800,800,16,21,10,0)
in this field. The formatting takes place whenever the SITE REMINDER
"^DD",800,800,16,21,11,0)
DISCLAIMER is edited or deleted.
"^DD",800,800,16,21,12,0)

"^DD",800,800,16,21,13,0)

"^DD",800,800.01,0)
DEFAULT REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.01,0,"DT")
2990209
"^DD",800,800.01,0,"NM","DEFAULT REMINDER DISCLAIMER")

"^DD",800,800.01,0,"UP")
800
"^DD",800,800.01,.01,0)
DEFAULT REMINDER DISCLAIMER^W^^0;1^Q
"^DD",800,800.01,.01,3)
Do not edit the default disclaimer.
"^DD",800,800.01,.01,"DT")
2990209
"^DD",800,800.016,0)
FORMATTED DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.016,0,"DT")
3050614
"^DD",800,800.016,0,"NM","FORMATTED DISCLAIMER")

"^DD",800,800.016,0,"UP")
800
"^DD",800,800.016,.01,0)
FORMATTED DISCLAIMER^WL^^0;1^Q
"^DD",800,800.016,.01,21,0)
^.001^5^5^3051018^^
"^DD",800,800.016,.01,21,1,0)
This word processing field contains the formatted reminder
"^DD",800,800.016,.01,21,2,0)
disclaimer. If the site disclaimer exists the formatted version of
"^DD",800,800.016,.01,21,3,0)
it is stored here and if it does not exist then the formatted
"^DD",800,800.016,.01,21,4,0)
version of the default disclaimer is stored here.
"^DD",800,800.016,.01,21,5,0)

"^DD",800,800.016,.01,"DT")
3050614
"^DD",800,800.02,0)
SITE REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.02,0,"DT")
2990209
"^DD",800,800.02,0,"NM","SITE REMINDER DISCLAIMER")

"^DD",800,800.02,0,"UP")
800
"^DD",800,800.02,.01,0)
SITE REMINDER DISCLAIMER^W^^0;1^Q
"^DD",800,800.02,.01,3)
Enter the site-defined reminder disclaimer.
"^DD",800,800.02,.01,21,0)
^.001^1^1^3050120^^^^
"^DD",800,800.02,.01,21,1,0)
This is the site-defined reminder disclaimer.
"^DD",800,800.02,.01,"DT")
2990209
"^DD",800,800.04,0)
WEB SITES SUB-FIELD^^1^3
"^DD",800,800.04,0,"DT")
2991130
"^DD",800,800.04,0,"IX","B",800.04,.01)

"^DD",800,800.04,0,"NM","WEB SITES")

"^DD",800,800.04,0,"UP")
800
"^DD",800,800.04,.01,0)
URL^MF^^0;1^K:$L(X)>128!($L(X)<1) X
"^DD",800,800.04,.01,1,0)
^.1
"^DD",800,800.04,.01,1,1,0)
800.04^B
"^DD",800,800.04,.01,1,1,1)
S ^PXRM(800,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",800,800.04,.01,1,1,2)
K ^PXRM(800,DA(1),1,"B",$E(X,1,30),DA)
"^DD",800,800.04,.01,3)
Enter the URL for the web site.
"^DD",800,800.04,.01,21,0)
^.001^1^1^3050113^^^^
"^DD",800,800.04,.01,21,1,0)
This is the URL for the web site.
"^DD",800,800.04,.01,"DT")
2991129
"^DD",800,800.04,.02,0)
WEB SITE TITLE^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",800,800.04,.02,3)
Enter the web site title, up to 60 characters.
"^DD",800,800.04,.02,21,0)
^.001^3^3^3050120^^^
"^DD",800,800.04,.02,21,1,0)
This is the WEB SITE TITLE. This field is optional. If entered, this will 
"^DD",800,800.04,.02,21,2,0)
display in the 'Reference Information' window of CPRS GUI instead of the 
"^DD",800,800.04,.02,21,3,0)
full URL.
"^DD",800,800.04,.02,"DT")
3020719
"^DD",800,800.04,1,0)
WEB SITE DESCRIPTION^800.41^^1;0
"^DD",800,800.04,1,21,0)
^.001^3^3^3050113^^
"^DD",800,800.04,1,21,1,0)
This is a description of the web site. It can be used to explain why
"^DD",800,800.04,1,21,2,0)
the particular site is included. It is for reference information only
"^DD",800,800.04,1,21,3,0)
and not displayed to the user.
"^DD",800,800.41,0)
WEB SITE DESCRIPTION SUB-FIELD^^.01^1
"^DD",800,800.41,0,"DT")
2991130
"^DD",800,800.41,0,"NM","WEB SITE DESCRIPTION")

"^DD",800,800.41,0,"UP")
800.04
"^DD",800,800.41,.01,0)
WEB SITE DESCRIPTION^W^^0;1^Q
"^DD",800,800.41,.01,3)
Enter the web site description.
"^DD",800,800.41,.01,21,0)
^.001^2^2^3050113^^^
"^DD",800,800.41,.01,21,1,0)
This is the web site description. It is used to give more information
"^DD",800,800.41,.01,21,2,0)
about why this web site is relevant for clinical reminders.
"^DD",800,800.41,.01,"DT")
2991130
"^DD",801.41,801.41,0)
FIELD^^118^40
"^DD",801.41,801.41,0,"DDA")
N
"^DD",801.41,801.41,0,"DT")
3060505
"^DD",801.41,801.41,0,"ID",4)
W "   ",@("$P($P($C(59)_$S($D(^DD(801.41,4,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
"^DD",801.41,801.41,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(801.41,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",801.41,801.41,0,"IX","AC",801.41,111)

"^DD",801.41,801.41,0,"IX","AD",801.412,2)

"^DD",801.41,801.41,0,"IX","AG",801.41,2)

"^DD",801.41,801.41,0,"NM","REMINDER DIALOG")

"^DD",801.41,801.41,0,"PT",801.41,55)

"^DD",801.41,801.41,0,"PT",801.41,118)

"^DD",801.41,801.41,0,"PT",801.412,2)

"^DD",801.41,801.41,0,"PT",801.422,.01)

"^DD",801.41,801.41,0,"PT",801.43,.04)

"^DD",801.41,801.41,0,"PT",801.4515,.01)

"^DD",801.41,801.41,0,"PT",811.9,51)

"^DD",801.41,801.41,0,"PT",8927,.15)

"^DD",801.41,801.41,0,"VRPK")
PXRM
"^DD",801.41,801.41,.01,0)
NAME^RFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'$$VNAME^PXRMINTR(X,801.41)!'(X'?1P.E) X
"^DD",801.41,801.41,.01,.1)

"^DD",801.41,801.41,.01,1,0)
^.1^^0
"^DD",801.41,801.41,.01,3)
Enter up to a 63 character name to represent this dialog entry.
"^DD",801.41,801.41,.01,21,0)
^.001^23^23^3050114^^^^
"^DD",801.41,801.41,.01,21,1,0)
This is the name of the dialog entry. 
"^DD",801.41,801.41,.01,21,2,0)

"^DD",801.41,801.41,.01,21,3,0)
Dialogs that are auto-generated from a reminder will default to the name of 
"^DD",801.41,801.41,.01,21,4,0)
the reminder for ease in identifying the reminder dialog entry. Dialog 
"^DD",801.41,801.41,.01,21,5,0)
elements that are auto-generated use the following naming convention:  
"^DD",801.41,801.41,.01,21,6,0)
Finding type prefix_ _Name from finding file_ _Resolution Status. Examples 
"^DD",801.41,801.41,.01,21,7,0)
of two dialog element entry names generated from an Exam file entry for 
"^DD",801.41,801.41,.01,21,8,0)
DIABETIC EYE EXAM follow.  
"^DD",801.41,801.41,.01,21,9,0)

"^DD",801.41,801.41,.01,21,10,0)
EX DIABETIC EYE EXAM DONE 
"^DD",801.41,801.41,.01,21,11,0)
EX DIABETIC EYE EXAM DONE ELSEWHERE 
"^DD",801.41,801.41,.01,21,12,0)
                                 
"^DD",801.41,801.41,.01,21,13,0)
Any item created locally can use any type of naming convention. Your site 
"^DD",801.41,801.41,.01,21,14,0)
may want to create special namespacing for dialog entries that you create 
"^DD",801.41,801.41,.01,21,15,0)
locally. 
"^DD",801.41,801.41,.01,21,16,0)

"^DD",801.41,801.41,.01,21,17,0)
Entries prefixed with PXRM are prompts, result groups, and result elements 
"^DD",801.41,801.41,.01,21,18,0)
that were distributed with the Clinical Reminders package. The PXRM-prefixed 
"^DD",801.41,801.41,.01,21,19,0)
prompts are the additional prompts that can be asked for particular types of 
"^DD",801.41,801.41,.01,21,20,0)
PCE findings and WH Notification Purpose. For example: PXRM COMMENT can be 
"^DD",801.41,801.41,.01,21,21,0)
added to any PCE file to allow the user to enter an additional COMMENT 
"^DD",801.41,801.41,.01,21,22,0)
beyond the dialog element's progress note text, and the PXRM LEVEL OF 
"^DD",801.41,801.41,.01,21,23,0)
UNDERSTANDING can only be used with PCE Education Topic findings.  
"^DD",801.41,801.41,.01,"DEL",1,0)
I +$G(PXRMEXCH)=0,$D(^PXRMD(801.41,"AD",DA)) D EN^DDIOL($C(7)_"IN USE - CANNOT BE DELETED")
"^DD",801.41,801.41,.01,"DT")
3040824
"^DD",801.41,801.41,2,0)
SOURCE REMINDER^P811.9'^PXD(811.9,^0;2^Q
"^DD",801.41,801.41,2,1,0)
^.1
"^DD",801.41,801.41,2,1,1,0)
801.41^AG
"^DD",801.41,801.41,2,1,1,1)
S ^PXRMD(801.41,"AG",$E(X,1,30),DA)=""
"^DD",801.41,801.41,2,1,1,2)
K ^PXRMD(801.41,"AG",$E(X,1,30),DA)
"^DD",801.41,801.41,2,1,1,"%D",0)
^^1^1^2991217^
"^DD",801.41,801.41,2,1,1,"%D",1,0)
Index of dialogs by source reminder.
"^DD",801.41,801.41,2,1,1,"DT")
2991217
"^DD",801.41,801.41,2,3)
Enter the associated reminder for this reminder dialog.
"^DD",801.41,801.41,2,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,2,21,1,0)
This identifies which reminder definition is associated with this
"^DD",801.41,801.41,2,21,2,0)
"Reminder Dialog" entry.  "Reminder Dialog" type entries are the only
"^DD",801.41,801.41,2,21,3,0)
entries that require this field.
"^DD",801.41,801.41,2,"DT")
2991217
"^DD",801.41,801.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",801.41,801.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",801.41,801.41,3,21,0)
^.001^3^3^3010302^^^^
"^DD",801.41,801.41,3,21,1,0)
This field disables use of this dialog when it contains text. The text
"^DD",801.41,801.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",801.41,801.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",801.41,801.41,3,"DT")
2950112
"^DD",801.41,801.41,4,0)
TYPE^RS^P:prompt;E:dialog element;R:reminder dialog;F:forced value;G:dialog group;S:result group;T:result element;^0;4^Q
"^DD",801.41,801.41,4,3)
Specify a type for this entry.
"^DD",801.41,801.41,4,21,0)
80
"^DD",801.41,801.41,4,21,1,0)
This field defines what type of dialog component this entry is. The
"^DD",801.41,801.41,4,21,2,0)
type determines the processing that can occur with this entry. 
"^DD",801.41,801.41,4,21,3,0)
 
"^DD",801.41,801.41,4,21,4,0)
Reminder dialogs are the dialog entries that can be mapped to a
"^DD",801.41,801.41,4,21,5,0)
reminder definition. Reminder dialogs will typically contain several
"^DD",801.41,801.41,4,21,6,0)
dialog elements and/or dialog groups. 
"^DD",801.41,801.41,4,21,7,0)
 
"^DD",801.41,801.41,4,21,8,0)
Dialog elements that are auto-generated represent a finding item and
"^DD",801.41,801.41,4,21,9,0)
resolution status combination, based on the Finding Type Parameters for
"^DD",801.41,801.41,4,21,10,0)
auto-generation. The dialog elements can be defined manually if
"^DD",801.41,801.41,4,21,11,0)
needed. Dialog elements must have the FINDING ITEM field defined in
"^DD",801.41,801.41,4,21,12,0)
order to cause the finding to be updated automatically. When no
"^DD",801.41,801.41,4,21,13,0)
finding item is defined, the dialog element is treated as a header or
"^DD",801.41,801.41,4,21,14,0)
instruction text in the CPRS GUI. Sites can also add Additional Finding
"^DD",801.41,801.41,4,21,15,0)
items to automatically update when a dialog element is checked off. An
"^DD",801.41,801.41,4,21,16,0)
example of using the additional finding would be for a dialog element
"^DD",801.41,801.41,4,21,17,0)
for a diagnosis, that must always be recorded with a second diagnosis.
"^DD",801.41,801.41,4,21,18,0)
Another example is when an Exam or Education Topic dialog element
"^DD",801.41,801.41,4,21,19,0)
checked off should automatically add an additional ICD9 and/or CPT
"^DD",801.41,801.41,4,21,20,0)
finding to PCE.
"^DD",801.41,801.41,4,21,21,0)
 
"^DD",801.41,801.41,4,21,22,0)
Dialog elements will use the DIALOG/PROGRESS NOTE TEXT to display in
"^DD",801.41,801.41,4,21,23,0)
the CPRS GUI window. This text will also be added to the progress note,
"^DD",801.41,801.41,4,21,24,0)
unless the optional ALTERNATE PROGRESS NOTE TEXT field is defined. If
"^DD",801.41,801.41,4,21,25,0)
the dialog text to display to the user needs to be different from the
"^DD",801.41,801.41,4,21,26,0)
text to add to the progress note, use the ALTERNATE PROGRESS NOTE TEXT
"^DD",801.41,801.41,4,21,27,0)
field to define the progress note text.
"^DD",801.41,801.41,4,21,28,0)
 
"^DD",801.41,801.41,4,21,29,0)
Dialog Groups can be used to group dialog elements together. Groups
"^DD",801.41,801.41,4,21,30,0)
can be displayed with a box around them and have selection rules
"^DD",801.41,801.41,4,21,31,0)
applied to them (e.g., select one, one or more)  A dialog element can
"^DD",801.41,801.41,4,21,32,0)
be changed to a dialog group by changing its TYPE.
"^DD",801.41,801.41,4,21,33,0)
Prompts are distributed in the PXRM namespace to represent additional
"^DD",801.41,801.41,4,21,34,0)
fields that the user can enter when an element is checked off. Prompts
"^DD",801.41,801.41,4,21,35,0)
are added to dialog elements during auto-generation based on the
"^DD",801.41,801.41,4,21,36,0)
finding type parameters. The PXRM COMMENT field is a generic comment
"^DD",801.41,801.41,4,21,37,0)
field that can be used on all PCE related finding items. Dialog
"^DD",801.41,801.41,4,21,38,0)
elements for "DONE ELSEWHERE" need to require the historical visit date
"^DD",801.41,801.41,4,21,39,0)
prompt. The forced value is similar to a prompt, except it represents
"^DD",801.41,801.41,4,21,40,0)
a stuffed prompt which doesn't need to be presented to answer. The PXRM
"^DD",801.41,801.41,4,21,41,0)
prompts can be copied for local modification to create additional
"^DD",801.41,801.41,4,21,42,0)
forced value entries if necessary.
"^DD",801.41,801.41,4,21,43,0)
 
"^DD",801.41,801.41,4,21,44,0)
Prompts created locally (not copies of PXRM prompts) are treated as
"^DD",801.41,801.41,4,21,45,0)
display text with checkboxes, which, when checked off, add text to a
"^DD",801.41,801.41,4,21,46,0)
comment field which is added to the progress note text. Refer to these
"^DD",801.41,801.41,4,21,47,0)
as Local Comment Prompts.
"^DD",801.41,801.41,4,21,48,0)
 
"^DD",801.41,801.41,4,21,49,0)
Result Groups and Result Elements are distributed in the PXRM namespace
"^DD",801.41,801.41,4,21,50,0)
and are associated with Mental Health Instrument finding items during
"^DD",801.41,801.41,4,21,51,0)
auto-generation of a reminder dialog. When the mental health instrument
"^DD",801.41,801.41,4,21,52,0)
finding item dialog element is selected by the CPRS GUI user, a window
"^DD",801.41,801.41,4,21,53,0)
will be opened which contains the test's questions and probable answers.
"^DD",801.41,801.41,4,21,54,0)
The selected answers are sent to the mental health package when the
"^DD",801.41,801.41,4,21,55,0)
user selects OK. The mental health package returns the score and
"^DD",801.41,801.41,4,21,56,0)
results which can be used within sentences. These sentences are defined
"^DD",801.41,801.41,4,21,57,0)
as Result Elements, and can vary depending on the test score. If
"^DD",801.41,801.41,4,21,58,0)
multiple sentences are possible depending on the score, the result
"^DD",801.41,801.41,4,21,59,0)
elements should be defined in a result group. The result group should
"^DD",801.41,801.41,4,21,60,0)
be added to the mental health test's dialog elements RESULT
"^DD",801.41,801.41,4,21,61,0)
GROUP/ELEMENT field. Mental Health tests for use by Mental Health
"^DD",801.41,801.41,4,21,62,0)
clinicians only are not available for CPRS reminder resolution.
"^DD",801.41,801.41,4,21,63,0)
 
"^DD",801.41,801.41,4,21,64,0)
A reminder dialog can be made into a dialog group and added to another
"^DD",801.41,801.41,4,21,65,0)
reminder's dialog. This allows multiple reminders to be addressed by
"^DD",801.41,801.41,4,21,66,0)
one reminder dialog.
"^DD",801.41,801.41,4,21,67,0)
 
"^DD",801.41,801.41,4,21,68,0)
Reminder Dialogs can include dialog elements that don't have anything
"^DD",801.41,801.41,4,21,69,0)
to do with the findings defined in the reminder.
"^DD",801.41,801.41,4,21,70,0)
 
"^DD",801.41,801.41,4,21,71,0)
Taxonomy dialogs are auto-generated based on the Taxonomy Dialog
"^DD",801.41,801.41,4,21,72,0)
Parameters. The taxonomy dialog can be used as a black box that allows
"^DD",801.41,801.41,4,21,73,0)
the users to enter current or historical encounter diagnoses or
"^DD",801.41,801.41,4,21,74,0)
procedures, based on the selectable list of diagnosis parameters. 
"^DD",801.41,801.41,4,21,75,0)
Alternatively, a taxonomy can have individual dialog elements created
"^DD",801.41,801.41,4,21,76,0)
for each coded value in the selectable list of diagnoses and
"^DD",801.41,801.41,4,21,77,0)
procedures. It may be more useful for sites to create dialog elements
"^DD",801.41,801.41,4,21,78,0)
for the common diagnoses and procedures they actively use and add them
"^DD",801.41,801.41,4,21,79,0)
to groups, similar to the encounter form section and coded value
"^DD",801.41,801.41,4,21,80,0)
groupings.
"^DD",801.41,801.41,4,"DT")
3040823
"^DD",801.41,801.41,5,0)
CAPTION^F^^0;5^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,5,3)
Enter a caption to use for this component.
"^DD",801.41,801.41,5,21,0)
^.001^7^7^3010302^^
"^DD",801.41,801.41,5,21,1,0)
The caption is used for prompt, dialog group, and reminder components.
"^DD",801.41,801.41,5,21,2,0)
When a prompt has a caption defined, this is the text that should be
"^DD",801.41,801.41,5,21,3,0)
used whenever the prompt is asked (e.g., Comment:). A dialog group can
"^DD",801.41,801.41,5,21,4,0)
use the caption field to specify a header to use on a box around the
"^DD",801.41,801.41,5,21,5,0)
group of dialog elements. The reminder dialog component can use the
"^DD",801.41,801.41,5,21,6,0)
caption to specify a header to use on a box around the the dialog
"^DD",801.41,801.41,5,21,7,0)
elements for a reminder.
"^DD",801.41,801.41,5,"DT")
2990923
"^DD",801.41,801.41,6,0)
BOX^S^Y:YES;N:NO;^0;6^Q
"^DD",801.41,801.41,6,3)
Enter Y to add a box around the components.
"^DD",801.41,801.41,6,21,0)
^.001^3^3^3040823^^^
"^DD",801.41,801.41,6,21,1,0)
This flag will be used to determine whether the components will be
"^DD",801.41,801.41,6,21,2,0)
presented to the user in a box. If the caption field is defined, it
"^DD",801.41,801.41,6,21,3,0)
will appear as header text in the top line of the box.
"^DD",801.41,801.41,6,"DT")
3040823
"^DD",801.41,801.41,7,0)
NUMBER OF INDENTS^NJ1,0^^0;7^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",801.41,801.41,7,3)
Enter the number of indents required (between 0 and 4).
"^DD",801.41,801.41,7,21,0)
^.001^2^2^3010302^^^
"^DD",801.41,801.41,7,21,1,0)
This is the number of indents that should be made before presenting the
"^DD",801.41,801.41,7,21,2,0)
group's components/elements. Indent is used only for dialog groups.
"^DD",801.41,801.41,7,"DT")
2990923
"^DD",801.41,801.41,8,0)
SHARE COMMON PROMPTS^S^1:YES;0:NO;^0;8^Q
"^DD",801.41,801.41,8,3)
Enter No if the common prompts must be prompted for each dialog element separately.
"^DD",801.41,801.41,8,21,0)
^.001^3^3^3010302^^^
"^DD",801.41,801.41,8,21,1,0)
This field is used only for a dialog group where different dialog
"^DD",801.41,801.41,8,21,2,0)
elements have common prompts. Prompts will be shared for all dialog
"^DD",801.41,801.41,8,21,3,0)
elements unless otherwise selected.
"^DD",801.41,801.41,8,"DT")
2991124
"^DD",801.41,801.41,9,0)
GROUP ENTRY^SX^1:ONE SELECTION ONLY;2:ONE OR MORE SELECTIONS;3:NONE OR ONE SELECTION;4:ALL SELECTIONS ARE REQUIRED;0:NO SELECTION REQUIRED;^0;9^I '$$MSEL^PXRMDLG5(X) K X Q
"^DD",801.41,801.41,9,3)
Enter 1 for one selection only. Enter 2 for one or more. Enter 3 for none or one selection. Enter 4 to require all selections. Enter 0 for no selection required.
"^DD",801.41,801.41,9,21,0)
^.001^8^8^3060517^^^
"^DD",801.41,801.41,9,21,1,0)
Used for dialog groups only.
"^DD",801.41,801.41,9,21,2,0)
 
"^DD",801.41,801.41,9,21,3,0)
1 indicates that only one element in the dialog group may be selected.
"^DD",801.41,801.41,9,21,4,0)
2 indicates that one or more elements must be selected.
"^DD",801.41,801.41,9,21,5,0)
3 indicates that either none or one selection is required.
"^DD",801.41,801.41,9,21,6,0)
4 indicates all selections are required.
"^DD",801.41,801.41,9,21,7,0)
0 or null indicates no selection required.
"^DD",801.41,801.41,9,21,8,0)

"^DD",801.41,801.41,9,"DT")
3060517
"^DD",801.41,801.41,10,0)
COMPONENTS^801.412IA^^10;0
"^DD",801.41,801.41,10,21,0)
^.001^7^7^3050114^^^^
"^DD",801.41,801.41,10,21,1,0)
This field contains the components that are used to process a
"^DD",801.41,801.41,10,21,2,0)
reminder.  Generally the components relate to the TYPE of entry in the
"^DD",801.41,801.41,10,21,3,0)
Reminder Dialog File:
"^DD",801.41,801.41,10,21,4,0)
 
"^DD",801.41,801.41,10,21,5,0)
     Reminder dialogs have dialog group or dialog element components.
"^DD",801.41,801.41,10,21,6,0)
     Dialog groups have a combination of dialog element components.
"^DD",801.41,801.41,10,21,7,0)
     Dialog elements have prompt and forced value components.
"^DD",801.41,801.41,10,"DT")
2990923
"^DD",801.41,801.41,13,0)
RESOLUTION TYPE^P801.9'^PXRMD(801.9,^1;3^Q
"^DD",801.41,801.41,13,3)
Enter the resolution status to use when this item is selected.
"^DD",801.41,801.41,13,21,0)
^^2^2^2990628^
"^DD",801.41,801.41,13,21,1,0)
This field contains what type of resolution is represented by this
"^DD",801.41,801.41,13,21,2,0)
dialog entry.
"^DD",801.41,801.41,13,"DT")
2990628
"^DD",801.41,801.41,14,0)
FINDING TYPE^P801.45'^PXRMD(801.45,^1;4^Q
"^DD",801.41,801.41,14,3)
Enter finding type if the additional prompt is intended for use with only one type of finding item.
"^DD",801.41,801.41,14,21,0)
^^17^17^3050114^
"^DD",801.41,801.41,14,21,1,0)
1f an additional prompt is restricted to use with only one type of
"^DD",801.41,801.41,14,21,2,0)
finding item this field contains the mnemonic of the finding type. The
"^DD",801.41,801.41,14,21,3,0)
mnemonics allowed are:
"^DD",801.41,801.41,14,21,4,0)
 
"^DD",801.41,801.41,14,21,5,0)
   CPT  Procedure      
"^DD",801.41,801.41,14,21,6,0)
   ED   Education Topic
"^DD",801.41,801.41,14,21,7,0)
   EX   Exam
"^DD",801.41,801.41,14,21,8,0)
   HF   Health Factor
"^DD",801.41,801.41,14,21,9,0)
   IM   Immunization
"^DD",801.41,801.41,14,21,10,0)
   OI   Orderable Item
"^DD",801.41,801.41,14,21,11,0)
   POV  Diagnosis (ICD9) 
"^DD",801.41,801.41,14,21,12,0)
   ST   Skin Test
"^DD",801.41,801.41,14,21,13,0)
   VM   Vital Measurement
"^DD",801.41,801.41,14,21,14,0)
   WH   WH Notification Purpose
"^DD",801.41,801.41,14,21,15,0)
 
"^DD",801.41,801.41,14,21,16,0)
(e.g. PXRM Contraindicated is restricted to IMMUNIZATION, 
"^DD",801.41,801.41,14,21,17,0)
finding type IM)
"^DD",801.41,801.41,14,"DT")
3040823
"^DD",801.41,801.41,15,0)
FINDING ITEM^V^^1;5^Q
"^DD",801.41,801.41,15,3)
Enter the finding item for this dialog element.
"^DD",801.41,801.41,15,21,0)
^.001^3^3^3021205^^^^
"^DD",801.41,801.41,15,21,1,0)
This is the finding item that should be created if the dialog
"^DD",801.41,801.41,15,21,2,0)
element/group is checked in CPRS. Additional findings may be entered
"^DD",801.41,801.41,15,21,3,0)
into the additional findings field.
"^DD",801.41,801.41,15,"DT")
3000503
"^DD",801.41,801.41,15,"V",0)
^.12P^12^12
"^DD",801.41,801.41,15,"V",1,0)
9999999.09^EDUCATION TOPICS^5^ED^n^n
"^DD",801.41,801.41,15,"V",2,0)
9999999.14^IMMUNIZATION^10^IM^n^n
"^DD",801.41,801.41,15,"V",3,0)
9999999.28^SKIN TEST^15^ST^n^n
"^DD",801.41,801.41,15,"V",4,0)
9999999.15^EXAM^20^EX^n^n
"^DD",801.41,801.41,15,"V",5,0)
9999999.64^HEALTH FACTOR^25^HF^y^n
"^DD",801.41,801.41,15,"V",5,1)
S DIC("S")="I $P(^(0),U,10)'=""C"""
"^DD",801.41,801.41,15,"V",5,2)
IGNORE CATEGORIES
"^DD",801.41,801.41,15,"V",6,0)
81^PROCEDURE^30^CPT^n^n
"^DD",801.41,801.41,15,"V",7,0)
80^ICD9 DIAGNOSIS^35^ICD9^n^n
"^DD",801.41,801.41,15,"V",8,0)
120.51^VITAL TYPE^40^VM^^n
"^DD",801.41,801.41,15,"V",9,0)
811.2^TAXONOMY^45^TX^^n
"^DD",801.41,801.41,15,"V",10,0)
101.41^ORDER DIALOG^50^Q^^n
"^DD",801.41,801.41,15,"V",11,0)
601^MENTAL HEALTH^55^MH^n^n
"^DD",801.41,801.41,15,"V",12,0)
790.404^WH NOTIFICATION PURPOSE^60^WH^n^n
"^DD",801.41,801.41,17,0)
ORDERABLE ITEM^P101.43'^ORD(101.43,^1;7^Q
"^DD",801.41,801.41,17,3)

"^DD",801.41,801.41,17,21,0)
^^1^1^2991029^^
"^DD",801.41,801.41,17,21,1,0)
Orderable item from the reminder definition.
"^DD",801.41,801.41,17,23,0)
^^1^1^2991029^^
"^DD",801.41,801.41,17,23,1,0)
This field is used only in the dialog display.
"^DD",801.41,801.41,17,"DT")
2991029
"^DD",801.41,801.41,18,0)
ADDITIONAL FINDINGS^801.4118AV^^3;0
"^DD",801.41,801.41,21,0)
DEFAULT VALUE^F^^2;1^K:$L(X)>60!($L(X)<1) X
"^DD",801.41,801.41,21,3)
Answer must be 1-60 characters in length.
"^DD",801.41,801.41,21,21,0)
^^8^8^3021213^
"^DD",801.41,801.41,21,21,1,0)
This is the default value for an additional prompt.
"^DD",801.41,801.41,21,21,2,0)
 
"^DD",801.41,801.41,21,21,3,0)
If entering defaults for the PXRM VISIT DATE prompt (or copies) then the
"^DD",801.41,801.41,21,21,4,0)
following codes are available:
"^DD",801.41,801.41,21,21,5,0)
 
"^DD",801.41,801.41,21,21,6,0)
  0  - no year is initially set (forces required dates to be entered).
"^DD",801.41,801.41,21,21,7,0)
  M  - Month is required.
"^DD",801.41,801.41,21,21,8,0)
  M0 - Month is required, no year initially set.
"^DD",801.41,801.41,21,"DT")
3021213
"^DD",801.41,801.41,22,0)
FORCED VALUE^F^^2;2^K:$L(X)>60!($L(X)<1) X
"^DD",801.41,801.41,22,3)
Answer must be 1-60 characters in length.
"^DD",801.41,801.41,22,21,0)
^^1^1^3000511^
"^DD",801.41,801.41,22,21,1,0)
This is the value that will be used for a forced value type dialog.
"^DD",801.41,801.41,22,"DT")
2990714
"^DD",801.41,801.41,23,0)
EXCLUDE FROM PROGRESS NOTE^S^1:YES;0:NO;^2;3^Q
"^DD",801.41,801.41,23,3)
Enter Y to stop the question text being added to the progress note.
"^DD",801.41,801.41,23,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.41,23,21,1,0)
This field indicates that the question text of the dialog element will
"^DD",801.41,801.41,23,21,2,0)
be excluded from the progress note.
"^DD",801.41,801.41,23,"DT")
2991102
"^DD",801.41,801.41,24,0)
PROMPT CAPTION^F^^2;4^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,24,3)
Enter a 3-30 character prompt caption.
"^DD",801.41,801.41,24,21,0)
^.001^3^3^3040823^^^
"^DD",801.41,801.41,24,21,1,0)
This is the caption that will be used for this prompt.  This caption
"^DD",801.41,801.41,24,21,2,0)
can be overridden by the OVERRIDE PROMPT CAPTION field in the ITEMS
"^DD",801.41,801.41,24,21,3,0)
multiple, which can be more specific for the instance of the prompt.
"^DD",801.41,801.41,24,"DT")
3040823
"^DD",801.41,801.41,25,0)
DIALOG/PROGRESS NOTE TEXT^801.4125^^25;0
"^DD",801.41,801.41,25,21,0)
^.001^2^2^3000511^^
"^DD",801.41,801.41,25,21,1,0)
This is the sentence text that will appear in the reminder dialog and
"^DD",801.41,801.41,25,21,2,0)
progress note.
"^DD",801.41,801.41,25,"DT")
3000420
"^DD",801.41,801.41,35,0)
ALTERNATE PROGRESS NOTE TEXT^801.4135^^35;0
"^DD",801.41,801.41,35,21,0)
^.001^2^2^3000503^^^^
"^DD",801.41,801.41,35,21,1,0)
This field is only required if the text on the progress note differs
"^DD",801.41,801.41,35,21,2,0)
from the dialog text.
"^DD",801.41,801.41,35,"DT")
3000503
"^DD",801.41,801.41,45,0)
CHECKBOX SEQUENCE^801.4145I^^45;0
"^DD",801.41,801.41,45,21,0)
^.001^2^2^3020617^^^^
"^DD",801.41,801.41,45,21,1,0)
Comment prompts (with a GUI Process ID of COM) may have a number
"^DD",801.41,801.41,45,21,2,0)
of checkboxes associated with the comment prompt.
"^DD",801.41,801.41,45,"DT")
3010424
"^DD",801.41,801.41,46,0)
GUI PROCESS ID^P801.42'^PXRMD(801.42,^46;1^Q
"^DD",801.41,801.41,46,3)
Enter GUI Process ID for additional prompts and forced values.
"^DD",801.41,801.41,46,21,0)
^^4^4^3040823^^
"^DD",801.41,801.41,46,21,1,0)
Additional prompts and forced values which update PCE should have a
"^DD",801.41,801.41,46,21,2,0)
GUI Process ID. If an additional prompt or forced value is created by
"^DD",801.41,801.41,46,21,3,0)
copying one of the PXRM prompts, the GUI Process ID field will automatically
"^DD",801.41,801.41,46,21,4,0)
be populated by the copy process.
"^DD",801.41,801.41,46,"DT")
3040823
"^DD",801.41,801.41,50,0)
HIDE/SHOW GROUP^S^1:HIDE;0:SHOW;^0;10^Q
"^DD",801.41,801.41,50,3)
Enter HIDE or SHOW
"^DD",801.41,801.41,50,21,0)
^^4^4^2991124^
"^DD",801.41,801.41,50,21,1,0)
Used for dialog groups.
"^DD",801.41,801.41,50,21,2,0)
 
"^DD",801.41,801.41,50,21,3,0)
1 indicates that the group will be hidden until checked
"^DD",801.41,801.41,50,21,4,0)
0 indicates that the group will be displayed 
"^DD",801.41,801.41,50,"DT")
2991124
"^DD",801.41,801.41,51,0)
SUPPRESS CHECKBOX^S^1:SUPPRESS;^0;11^Q
"^DD",801.41,801.41,51,3)
Enter 1 if the WP text is for display only.
"^DD",801.41,801.41,51,21,0)
^^10^10^3050114^
"^DD",801.41,801.41,51,21,1,0)
If the field is set to SUPPRESS, the dialog element or group header will
"^DD",801.41,801.41,51,21,2,0)
be displayed without a checkbox. Otherwise the WP text will be
"^DD",801.41,801.41,51,21,3,0)
presented with a checkbox.
"^DD",801.41,801.41,51,21,4,0)
 
"^DD",801.41,801.41,51,21,5,0)
If the dialog element or group header has a finding item associated
"^DD",801.41,801.41,51,21,6,0)
with it the SUPPRESS CHECKBOX flag will be ignored.
"^DD",801.41,801.41,51,21,7,0)
 
"^DD",801.41,801.41,51,21,8,0)
Also if the HIDE/SHOW GROUP field is set to hide, then the SUPPRESS
"^DD",801.41,801.41,51,21,9,0)
CHECKBOX field will be ignored (the group header question must be a
"^DD",801.41,801.41,51,21,10,0)
checkbox).
"^DD",801.41,801.41,51,"DT")
3040823
"^DD",801.41,801.41,52,0)
INDENT PROGRESS NOTE TEXT^S^1:INDENT;0:NO INDENT;^0;12^Q
"^DD",801.41,801.41,52,3)
Enter 1 if the progress note text should be indented. Enter 0 if no indent is required.
"^DD",801.41,801.41,52,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.41,52,21,1,0)
In a dialog group the dialog questions may be indented. This field
"^DD",801.41,801.41,52,21,2,0)
allows the progress note text to be indented also.
"^DD",801.41,801.41,52,"DT")
3000110
"^DD",801.41,801.41,53,0)
RESULT CONDITION^FXO^^0;13^K:($L(X)<3)!($L(X)>40)!('$$VCOND^PXRMCOND(X)) X
"^DD",801.41,801.41,53,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",801.41,801.41,53,2.1)
S Y=$TR(Y,"~"," ")
"^DD",801.41,801.41,53,3)
Answer must be 3-40 characters in length.
"^DD",801.41,801.41,53,21,0)
^.001^5^5^3010302^^^^
"^DD",801.41,801.41,53,21,1,0)
This field is used for dialog result elements only. The result
"^DD",801.41,801.41,53,21,2,0)
condition determines if the progress note text of the result element
"^DD",801.41,801.41,53,21,3,0)
will be included in the progress note e.g., I SCORE<2 will insert the
"^DD",801.41,801.41,53,21,4,0)
text in the progress note if the SCORE from the mental health test is
"^DD",801.41,801.41,53,21,5,0)
below 2.
"^DD",801.41,801.41,53,"DT")
3050110
"^DD",801.41,801.41,54,0)
EXCLUDE MH TEST FROM PN TEXT^S^1:YES;0:NO;^0;14^Q
"^DD",801.41,801.41,54,3)
Enter Y to stop the test questions from being added to the note text.
"^DD",801.41,801.41,54,21,0)
^.001^3^3^3040823^^^
"^DD",801.41,801.41,54,21,1,0)
This flag is used to control whether or not a mental health instrument
"^DD",801.41,801.41,54,21,2,0)
question will be excluded from the progress note text when the
"^DD",801.41,801.41,54,21,3,0)
component is acted upon.
"^DD",801.41,801.41,54,"DT")
3040823
"^DD",801.41,801.41,55,0)
RESULT GROUP/ELEMENT^*P801.41'^PXRMD(801.41,^0;15^S DIC("S")="I ""ST""[$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.41,55,3)
Enter the result group or element for additional findings.
"^DD",801.41,801.41,55,12)
Only result elements and result groups allowed
"^DD",801.41,801.41,55,12.1)
S DIC("S")="I ""ST""[$P(^(0),U,4)"
"^DD",801.41,801.41,55,21,0)
^.001^4^4^3010302^^^^
"^DD",801.41,801.41,55,21,1,0)
The result group or element is called on completion of a dialog and
"^DD",801.41,801.41,55,21,2,0)
allows additional findings or progress note text to be added
"^DD",801.41,801.41,55,21,3,0)
conditionally. Standard result groups for mental health tests are
"^DD",801.41,801.41,55,21,4,0)
released with the package.
"^DD",801.41,801.41,55,"DT")
3000225
"^DD",801.41,801.41,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",801.41,801.41,100,3)
Enter the class.
"^DD",801.41,801.41,100,21,0)
^.001^1^1^3010518^^
"^DD",801.41,801.41,100,21,1,0)
This is the class of dialog. National dialogs cannot be edited.
"^DD",801.41,801.41,100,"DT")
3010518
"^DD",801.41,801.41,101,0)
SPONSOR^P811.6^PXRMD(811.6,^100;2^Q
"^DD",801.41,801.41,101,3)
Enter the sponsor.
"^DD",801.41,801.41,101,21,0)
^^1^1^3010501^
"^DD",801.41,801.41,101,21,1,0)
This is the organization or group that sponsors this dialog.
"^DD",801.41,801.41,101,"DT")
3010424
"^DD",801.41,801.41,102,0)
REVIEW DATE^D^^100;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.41,102,3)
Enter the review date.
"^DD",801.41,801.41,102,21,0)
^^2^2^3050114^
"^DD",801.41,801.41,102,21,1,0)
The REVIEW DATE is used to determine when the dialog should be reviewed,
"^DD",801.41,801.41,102,21,2,0)
to verify that it is current with the latest standards and guidelines.
"^DD",801.41,801.41,102,"DT")
3010424
"^DD",801.41,801.41,110,0)
EDIT HISTORY^801.44D^^110;0
"^DD",801.41,801.41,110,21,0)
^.001^1^1^3010502^^
"^DD",801.41,801.41,110,21,1,0)
This multiple is used to record a history of changes to the dialog.
"^DD",801.41,801.41,111,0)
IDENTIFY^FX^^0;16^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,111,1,0)
^.1
"^DD",801.41,801.41,111,1,1,0)
801.41^AC
"^DD",801.41,801.41,111,1,1,1)
S ^PXRMD(801.41,"AC",$E(X,1,30),DA)=""
"^DD",801.41,801.41,111,1,1,2)
K ^PXRMD(801.41,"AC",$E(X,1,30),DA)
"^DD",801.41,801.41,111,1,1,"%D",0)
^^1^1^3030430^
"^DD",801.41,801.41,111,1,1,"%D",1,0)
"AC",IDENTIFY,DA
"^DD",801.41,801.41,111,1,1,"DT")
3030430
"^DD",801.41,801.41,111,3)
Short text to Identify dialog with module. Can only be modified by a Programmer.
"^DD",801.41,801.41,111,21,0)
^^5^5^3050114^
"^DD",801.41,801.41,111,21,1,0)
This field will associate a dialog with a package or module. Example: 
"^DD",801.41,801.41,111,21,2,0)
if the field contained the letters IHD, then this dialog would be part of the 
"^DD",801.41,801.41,111,21,3,0)
Ischemic Heart Disease project. If one dialog had IHD1 in this field and 
"^DD",801.41,801.41,111,21,4,0)
another had IHD2 located in this field, we would know that they were associated 
"^DD",801.41,801.41,111,21,5,0)
with each other and were both part of the same project.
"^DD",801.41,801.41,111,"DT")
3040823
"^DD",801.41,801.41,112,0)
PATIENT SPECIFIC^S^1:TRUE;0:FALSE;^0;17^Q
"^DD",801.41,801.41,112,3)

"^DD",801.41,801.41,112,4)
D BHELP^PXRMDLG5(4)
"^DD",801.41,801.41,112,21,0)
^^12^12^3050114^
"^DD",801.41,801.41,112,21,1,0)
This field is used to identify a Reminder Dialog that has branching logic 
"^DD",801.41,801.41,112,21,2,0)
defined in the dialog. It is used
"^DD",801.41,801.41,112,21,3,0)
in conjunction with three additional fields
"^DD",801.41,801.41,112,21,4,0)
(Reminder Term, Reminder Term Status, and Replacement Element/group) defined 
"^DD",801.41,801.41,112,21,5,0)
at the item level of the Reminder Dialog.
"^DD",801.41,801.41,112,21,6,0)
 
"^DD",801.41,801.41,112,21,7,0)
This field is used by CPRS to identify if the dialog set-up should be cached 
"^DD",801.41,801.41,112,21,8,0)
or re-built between every use. If the field is set to Yes,
"^DD",801.41,801.41,112,21,9,0)
then the dialog will
"^DD",801.41,801.41,112,21,10,0)
be re-loaded every time it is opened in CPRS. If the field is set to No or 
"^DD",801.41,801.41,112,21,11,0)
Null, the dialog set-up will be stored in CPRS the first time the dialog is 
"^DD",801.41,801.41,112,21,12,0)
loaded for the user.
"^DD",801.41,801.41,112,"DT")
3040823
"^DD",801.41,801.41,113,0)
MH TEST REQUIRE^S^0:NO;1:YES;^0;18^Q
"^DD",801.41,801.41,113,3)
If Y is entered, CPRS will require the completion of the MH test. N or a null response indicates that the MH test is optional in CPRS.
"^DD",801.41,801.41,113,21,0)
^^8^8^3050114^
"^DD",801.41,801.41,113,21,1,0)
 
"^DD",801.41,801.41,113,21,2,0)
 
"^DD",801.41,801.41,113,21,3,0)
 
"^DD",801.41,801.41,113,21,4,0)
The value defined in this field is used to
"^DD",801.41,801.41,113,21,5,0)
control whether or not a mental health instrument question will be required 
"^DD",801.41,801.41,113,21,6,0)
to be answered before the Reminder dialog can be finished
"^DD",801.41,801.41,113,21,7,0)
in CPRS. If yes, the
"^DD",801.41,801.41,113,21,8,0)
dialog cannot be finished in CPRS until it is answered.
"^DD",801.41,801.41,113,"DT")
3040823
"^DD",801.41,801.41,114,0)
LOCK^SX^0:NO;1:YES;^100;4^Q
"^DD",801.41,801.41,114,21,0)
^^4^4^3040823^^^
"^DD",801.41,801.41,114,21,1,0)
This field is used to "Lock" a reminder dialog, dialog element, and/or a 
"^DD",801.41,801.41,114,21,2,0)
dialog group from being copied and/or edited. It will prevent any copying 
"^DD",801.41,801.41,114,21,3,0)
and/or editing of a dialog element if a finding item is defined or if the 
"^DD",801.41,801.41,114,21,4,0)
only finding item defined for the element/group is an order. 
"^DD",801.41,801.41,114,"DT")
3040823
"^DD",801.41,801.41,116,0)
REMINDER TERM^P811.5'^PXRMD(811.5,^49;1^Q
"^DD",801.41,801.41,116,3)

"^DD",801.41,801.41,116,4)
D BHELP^PXRMDLG5(1)
"^DD",801.41,801.41,116,21,0)
^^5^5^3040823^^^
"^DD",801.41,801.41,116,21,1,0)
This field is a pointer to file 811.5. If a reminder term is defined in this 
"^DD",801.41,801.41,116,21,2,0)
field when the dialog is loaded by CPRS, the reminder term will be 
"^DD",801.41,801.41,116,21,3,0)
evaluated. The Reminder Term evaluation will return either a True of False 
"^DD",801.41,801.41,116,21,4,0)
value. The value returned by the Reminder Term evaluation is used in 
"^DD",801.41,801.41,116,21,5,0)
conjunction with the Reminder Term Status field.
"^DD",801.41,801.41,116,"DT")
3040823
"^DD",801.41,801.41,117,0)
REMINDER TERM STATUS^S^1:TRUE;0:FALSE;^49;2^Q
"^DD",801.41,801.41,117,3)

"^DD",801.41,801.41,117,4)
D BHELP^PXRMDLG5(2)
"^DD",801.41,801.41,117,21,0)
^^8^8^3040823^^^^
"^DD",801.41,801.41,117,21,1,0)
This field is used in conjunction with the Reminder Term field. It will be 
"^DD",801.41,801.41,117,21,2,0)
used to determine if a Reminder Dialog Element/Group should do a special 
"^DD",801.41,801.41,117,21,3,0)
action. When the Reminder Term is defined in field #116, the True/False 
"^DD",801.41,801.41,117,21,4,0)
result of the term evaluation will be compared to the value defined in this 
"^DD",801.41,801.41,117,21,5,0)
field. If the value matches the dialog, it will complete the action defined 
"^DD",801.41,801.41,117,21,6,0)
in field #118. If the reminder term evaluation value does not match the 
"^DD",801.41,801.41,117,21,7,0)
value defined in this field, the default action of the element/group is 
"^DD",801.41,801.41,117,21,8,0)
loaded into CPRS.
"^DD",801.41,801.41,117,"DT")
3040823
"^DD",801.41,801.41,118,0)
REPLACEMENT ELEMENT/GROUP^*P801.41'^PXRMD(801.41,^49;3^S DIC("S")="I ""EG""[$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.41,118,3)

"^DD",801.41,801.41,118,4)
D BHELP^PXRMDLG5(3)
"^DD",801.41,801.41,118,12)
Only active dialog elements or groups can be selected.
"^DD",801.41,801.41,118,12.1)
S DIC("S")="I ""EG""[$P(^(0),U,4)"
"^DD",801.41,801.41,118,21,0)
^.001^11^11^3050114^^^^
"^DD",801.41,801.41,118,21,1,0)
This field is used to determine if a dialog element/group should be replaced 
"^DD",801.41,801.41,118,21,2,0)
with another element/group or if the original element/group should be 
"^DD",801.41,801.41,118,21,3,0)
suppressed in the Dialog.  
"^DD",801.41,801.41,118,21,4,0)

"^DD",801.41,801.41,118,21,5,0)
If the Reminder Term defined in field #116 is evaluated and matches the 
"^DD",801.41,801.41,118,21,6,0)
value defined in field #117, then the dialog element/group will either be 
"^DD",801.41,801.41,118,21,7,0)
replaced or suppressed depending on the value defined in this field. This 
"^DD",801.41,801.41,118,21,8,0)
field points to file 801.41.  If there is an active element/group defined 
"^DD",801.41,801.41,118,21,9,0)
in this field, then the original dialog element/group will be replaced with 
"^DD",801.41,801.41,118,21,10,0)
the new dialog element/group. If this field is null, then the original 
"^DD",801.41,801.41,118,21,11,0)
dialog element/group will be suppressed in CPRS.
"^DD",801.41,801.41,118,"DT")
3050114
"^DD",801.41,801.4118,0)
ADDITIONAL FINDINGS SUB-FIELD^^.01^1
"^DD",801.41,801.4118,0,"DT")
3000303
"^DD",801.41,801.4118,0,"IX","B",801.4118,.01)

"^DD",801.41,801.4118,0,"NM","ADDITIONAL FINDINGS")

"^DD",801.41,801.4118,0,"UP")
801.41
"^DD",801.41,801.4118,.01,0)
ADDITIONAL FINDINGS^MV^^0;1^Q
"^DD",801.41,801.4118,.01,1,0)
^.1
"^DD",801.41,801.4118,.01,1,1,0)
801.4118^B
"^DD",801.41,801.4118,.01,1,1,1)
S ^PXRMD(801.41,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.4118,.01,1,1,2)
K ^PXRMD(801.41,DA(1),3,"B",$E(X,1,30),DA)
"^DD",801.41,801.4118,.01,1,1,3)
Required Index for Variable Pointer
"^DD",801.41,801.4118,.01,3)
Enter additional finding items for this dialog element.
"^DD",801.41,801.4118,.01,21,0)
^.001^3^3^3030807^^^^
"^DD",801.41,801.4118,.01,21,1,0)
If additional finding items should be posted if the dialog is checked
"^DD",801.41,801.4118,.01,21,2,0)
then they should be entered in this field. The field is relevant to
"^DD",801.41,801.4118,.01,21,3,0)
both dialog element and dialog group type records.
"^DD",801.41,801.4118,.01,"DT")
3000303
"^DD",801.41,801.4118,.01,"V",0)
^.12P^10^10
"^DD",801.41,801.4118,.01,"V",1,0)
9999999.09^EDUCATION TOPICS^5^ED^n^n
"^DD",801.41,801.4118,.01,"V",2,0)
9999999.14^IMMUNIZATIONS^10^IM^n^n
"^DD",801.41,801.4118,.01,"V",3,0)
9999999.28^SKIN TEST^15^ST^n^n
"^DD",801.41,801.4118,.01,"V",4,0)
9999999.15^EXAM^20^EX^n^n
"^DD",801.41,801.4118,.01,"V",5,0)
9999999.64^HEALTH FACTORS^25^HF^y^n
"^DD",801.41,801.4118,.01,"V",5,1)
S DIC("S")="I $P(^(0),U,10)'=""C"""
"^DD",801.41,801.4118,.01,"V",5,2)
Health Factor categories are not allowed.
"^DD",801.41,801.4118,.01,"V",6,0)
81^PROCEDURE^30^CPT^n^n
"^DD",801.41,801.4118,.01,"V",7,0)
80^ICD9 DIAGNOSIS^35^ICD9^n^n
"^DD",801.41,801.4118,.01,"V",8,0)
120.51^VITAL TYPE^40^VM^n^n
"^DD",801.41,801.4118,.01,"V",9,0)
101.41^ORDER DIALOG^45^Q^n^n
"^DD",801.41,801.4118,.01,"V",10,0)
790.404^WH NOTIFICATION PURPOSE^50^WH^n^n
"^DD",801.41,801.412,0)
COMPONENTS SUB-FIELD^^9^6
"^DD",801.41,801.412,0,"DT")
3000822
"^DD",801.41,801.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^PXRMD(801.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",801.41,801.412,0,"IX","B",801.412,.01)

"^DD",801.41,801.412,0,"IX","D",801.412,2)

"^DD",801.41,801.412,0,"IX","DAD1",801.412,.01)

"^DD",801.41,801.412,0,"NM","COMPONENTS")

"^DD",801.41,801.412,0,"UP")
801.41
"^DD",801.41,801.412,.01,0)
SEQUENCE^MNJ5,1X^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X I $G(X)]"" K:$D(^PXRMD(801.41,DA(1),10,"B",X)) X
"^DD",801.41,801.412,.01,1,0)
^.1^^-1
"^DD",801.41,801.412,.01,1,1,0)
801.412^B
"^DD",801.41,801.412,.01,1,1,1)
S ^PXRMD(801.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.412,.01,1,1,2)
K ^PXRMD(801.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",801.41,801.412,.01,1,2,0)
801.412^DAD1^MUMPS
"^DD",801.41,801.412,.01,1,2,1)
N PXRMP S PXRMP=$P(^PXRMD(801.41,DA(1),10,DA,0),U,11) S:PXRMP ^PXRMD(801.41,DA(1),10,"DAD",PXRMP,X,DA)=""
"^DD",801.41,801.412,.01,1,2,2)
N PXRMP S PXRMP=$P(^PXRMD(801.41,DA(1),10,DA,0),U,11) K:PXRMP ^PXRMD(801.41,DA(1),10,"DAD",PXRMP,X,DA)
"^DD",801.41,801.412,.01,1,2,"%D",0)
^^1^1^2990624^^
"^DD",801.41,801.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",801.41,801.412,.01,1,2,"DT")
2990624
"^DD",801.41,801.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",801.41,801.412,.01,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",801.41,801.412,.01,21,2,0)
processed.
"^DD",801.41,801.412,.01,"DT")
3010502
"^DD",801.41,801.412,2,0)
ITEM^R*P801.41'X^PXRMD(801.41,^0;2^D SCREEN^PXRMDD41 D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.412,2,1,0)
^.1^^-1
"^DD",801.41,801.412,2,1,1,0)
801.41^AD
"^DD",801.41,801.412,2,1,1,1)
S ^PXRMD(801.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",801.41,801.412,2,1,1,2)
K ^PXRMD(801.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",801.41,801.412,2,1,1,"DT")
2950123
"^DD",801.41,801.412,2,1,2,0)
801.412^D
"^DD",801.41,801.412,2,1,2,1)
S ^PXRMD(801.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",801.41,801.412,2,1,2,2)
K ^PXRMD(801.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",801.41,801.412,2,1,2,"DT")
2950411
"^DD",801.41,801.412,2,3)
Enter a dialog; a dialog that is an ancestor may not also be a sub-item. The dialog type of the sub-item must be valid for the ancestor.
"^DD",801.41,801.412,2,12)
The item must be valid for this dialog type.
"^DD",801.41,801.412,2,12.1)
D SCREEN^PXRMDD41
"^DD",801.41,801.412,2,21,0)
^.001^3^3^3050114^^^^
"^DD",801.41,801.412,2,21,1,0)
This field points to a dialog which is subordinate to this dialog.
"^DD",801.41,801.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",801.41,801.412,2,21,3,0)
as an item.
"^DD",801.41,801.412,2,"DT")
3040823
"^DD",801.41,801.412,6,0)
OVERRIDE PROMPT CAPTION^F^^0;6^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.412,6,3)
This is the caption that should override the prompt's default caption.
"^DD",801.41,801.412,6,21,0)
^^3^3^2990923^
"^DD",801.41,801.412,6,21,1,0)
This text will override the caption for this component in the reminder
"^DD",801.41,801.412,6,21,2,0)
dialog, when the component is a prompt.  When the text is blank, the
"^DD",801.41,801.412,6,21,3,0)
caption from the prompt entry will be used.
"^DD",801.41,801.412,6,"DT")
2990923
"^DD",801.41,801.412,7,0)
START NEW LINE^S^1:YES;0:NO;^0;7^Q
"^DD",801.41,801.412,7,3)
Answer Y/N to control whether to prompt on a new line.
"^DD",801.41,801.412,7,21,0)
^.001^2^2^3010302^^
"^DD",801.41,801.412,7,21,1,0)
This flag is used to allow the user to have some control of the display
"^DD",801.41,801.412,7,21,2,0)
of prompts related to a dialog element.
"^DD",801.41,801.412,7,"DT")
2990923
"^DD",801.41,801.412,8,0)
EXCLUDE FROM PN TEXT^S^1:YES;0:NO;^0;8^Q
"^DD",801.41,801.412,8,3)
Enter Y to stop the component activity from being added to the note text.
"^DD",801.41,801.412,8,21,0)
^.001^2^2^3010302^^^
"^DD",801.41,801.412,8,21,1,0)
This flag is used to control whether or not a component will be
"^DD",801.41,801.412,8,21,2,0)
excluded from the progress note text when the component is acted upon.
"^DD",801.41,801.412,8,"DT")
2991102
"^DD",801.41,801.412,9,0)
REQUIRED^S^1:YES;0:NO;^0;9^Q
"^DD",801.41,801.412,9,"DT")
2991102
"^DD",801.41,801.4125,0)
DIALOG/PROGRESS NOTE TEXT SUB-FIELD^^.01^1
"^DD",801.41,801.4125,0,"DT")
2990628
"^DD",801.41,801.4125,0,"NM","DIALOG/PROGRESS NOTE TEXT")

"^DD",801.41,801.4125,0,"UP")
801.41
"^DD",801.41,801.4125,.01,0)
DIALOG/PROGRESS NOTE TEXT^W^^0;1^Q
"^DD",801.41,801.4125,.01,3)
Enter the lines that should be used in the Progress Note when this item is checked off.
"^DD",801.41,801.4125,.01,"DT")
3000503
"^DD",801.41,801.4135,0)
ALTERNATE PROGRESS NOTE TEXT SUB-FIELD^^.01^1
"^DD",801.41,801.4135,0,"DT")
3000209
"^DD",801.41,801.4135,0,"NM","ALTERNATE PROGRESS NOTE TEXT")

"^DD",801.41,801.4135,0,"UP")
801.41
"^DD",801.41,801.4135,.01,0)
ALTERNATE PROGRESS NOTE TEXT^W^^0;1^Q
"^DD",801.41,801.4135,.01,.1)

"^DD",801.41,801.4135,.01,3)
Enter text to appear on the progress note. Only required if the text on the progress note differs from the dialog text.
"^DD",801.41,801.4135,.01,21,0)
^^8^8^3000503^
"^DD",801.41,801.4135,.01,21,1,0)
This field is used to define an alternate text to add to the progress note
"^DD",801.41,801.4135,.01,21,2,0)
when the progress note text needs to be different from the dialog text.
"^DD",801.41,801.4135,.01,21,3,0)
(e.g., Dialog/Progress Note Text displayed is "Place Influenza Order", but
"^DD",801.41,801.4135,.01,21,4,0)
the Alternate Progress Note Text is "Ordered Influenza Vaccine at this
"^DD",801.41,801.4135,.01,21,5,0)
encounter.")
"^DD",801.41,801.4135,.01,21,6,0)
 
"^DD",801.41,801.4135,.01,21,7,0)
If there is no text in this alternate text field the dialog/progress note
"^DD",801.41,801.4135,.01,21,8,0)
text will be added to the progress note.
"^DD",801.41,801.4135,.01,"DT")
3000503
"^DD",801.41,801.4145,0)
CHECKBOX SUB-FIELD^^2^2
"^DD",801.41,801.4145,0,"DT")
3020617
"^DD",801.41,801.4145,0,"ID",2)
W "   ",$P(^(0),U,2)
"^DD",801.41,801.4145,0,"IX","B",801.4145,.01)

"^DD",801.41,801.4145,0,"NM","CHECKBOX SEQUENCE")

"^DD",801.41,801.4145,0,"UP")
801.41
"^DD",801.41,801.4145,.01,0)
CHECKBOX SEQUENCE^MNJ3,0X^^0;1^K:+X'=X!(X>500)!(X<1)!(X?.E1"."1N.N) X
"^DD",801.41,801.4145,.01,.1)

"^DD",801.41,801.4145,.01,1,0)
^.1
"^DD",801.41,801.4145,.01,1,1,0)
801.4145^B
"^DD",801.41,801.4145,.01,1,1,1)
S ^PXRMD(801.41,DA(1),45,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.4145,.01,1,1,2)
K ^PXRMD(801.41,DA(1),45,"B",$E(X,1,30),DA)
"^DD",801.41,801.4145,.01,3)
Type a Number between 1 and 500, 0 Decimal Digits
"^DD",801.41,801.4145,.01,"DT")
3020617
"^DD",801.41,801.4145,2,0)
TEXT^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.4145,2,.1)

"^DD",801.41,801.4145,2,3)
Answer must be 3-30 characters in length.
"^DD",801.41,801.4145,2,"DT")
3010503
"^DD",801.41,801.44,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",801.41,801.44,0,"DT")
3010424
"^DD",801.41,801.44,0,"IX","B",801.44,.01)

"^DD",801.41,801.44,0,"NM","EDIT HISTORY")

"^DD",801.41,801.44,0,"UP")
801.41
"^DD",801.41,801.44,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.44,.01,1,0)
^.1
"^DD",801.41,801.44,.01,1,1,0)
801.44^B
"^DD",801.41,801.44,.01,1,1,1)
S ^PXRMD(801.41,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.44,.01,1,1,2)
K ^PXRMD(801.41,DA(1),110,"B",$E(X,1,30),DA)
"^DD",801.41,801.44,.01,21,0)
^^2^2^3010501^
"^DD",801.41,801.44,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",801.41,801.44,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",801.41,801.44,.01,"DT")
3010424
"^DD",801.41,801.44,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",801.41,801.44,1,21,0)
^^2^2^3010501^
"^DD",801.41,801.44,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",801.41,801.44,1,21,2,0)
and should not be changed by the user.
"^DD",801.41,801.44,1,"DT")
3010424
"^DD",801.41,801.44,2,0)
EDIT COMMENTS^801.442^^1;0
"^DD",801.41,801.44,2,21,0)
^.001^2^2^3010502^^
"^DD",801.41,801.44,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",801.41,801.44,2,21,2,0)
during the editing session.
"^DD",801.41,801.44,2,"DT")
3010425
"^DD",801.41,801.442,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",801.41,801.442,0,"DT")
3010424
"^DD",801.41,801.442,0,"NM","EDIT COMMENTS")

"^DD",801.41,801.442,0,"UP")
801.44
"^DD",801.41,801.442,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",801.41,801.442,.01,3)
Enter your edit comments.
"^DD",801.41,801.442,.01,"DT")
3010425
"^DD",801.5,801.5,0)
FIELD^^.06^6
"^DD",801.5,801.5,0,"DDA")
N
"^DD",801.5,801.5,0,"DT")
3050617
"^DD",801.5,801.5,0,"IX","B",801.5,.01)

"^DD",801.5,801.5,0,"NM","REMINDER DIALOG PATIENT ASSOCIATION")

"^DD",801.5,801.5,.01,0)
PATIENT^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",801.5,801.5,.01,1,0)
^.1
"^DD",801.5,801.5,.01,1,1,0)
801.5^B
"^DD",801.5,801.5,.01,1,1,1)
S ^PXRMD(801.5,"B",$E(X,1,30),DA)=""
"^DD",801.5,801.5,.01,1,1,2)
K ^PXRMD(801.5,"B",$E(X,1,30),DA)
"^DD",801.5,801.5,.01,3)
Answer must be 3-30 characters in length
"^DD",801.5,801.5,.01,21,0)
^^3^3^3050203^
"^DD",801.5,801.5,.01,21,1,0)
This is a free text form of a patient's DFN used as a momentary identifier of 
"^DD",801.5,801.5,.01,21,2,0)
a patient who has been selected while using the Geriatric Extended Care 
"^DD",801.5,801.5,.01,21,3,0)
Dialogs.
"^DD",801.5,801.5,.01,"DT")
3050203
"^DD",801.5,801.5,.02,0)
DATE/TIME^D^^0;2^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",801.5,801.5,.02,3)
(No range limit on date)
"^DD",801.5,801.5,.02,21,0)
^^4^4^3050203^
"^DD",801.5,801.5,.02,21,1,0)
This field contains the date and time that the Geriatric Extended 
"^DD",801.5,801.5,.02,21,2,0)
Care dialogs were first initiated for a particular patient and a 
"^DD",801.5,801.5,.02,21,3,0)
particular referral. It is the current date and time that the first entry
"^DD",801.5,801.5,.02,21,4,0)
for this patient was entered into this file.
"^DD",801.5,801.5,.02,"DT")
3050203
"^DD",801.5,801.5,.03,0)
IDENTIFY^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",801.5,801.5,.03,3)
Answer must be 1-30 characters in length
"^DD",801.5,801.5,.03,21,0)
^^3^3^3050203^
"^DD",801.5,801.5,.03,21,1,0)
There are 4 reminder dialogs used in the Geriatric Extended Care program.
"^DD",801.5,801.5,.03,21,2,0)
This field holds one of 4 possible entries representing the dialog that
"^DD",801.5,801.5,.03,21,3,0)
is being used. The possibilities are GEC1,GEC2,GEC3 and GECF.
"^DD",801.5,801.5,.03,"DT")
3050203
"^DD",801.5,801.5,.04,0)
NOTEIEN^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",801.5,801.5,.04,3)
Answer must be 1-20 characters in length
"^DD",801.5,801.5,.04,21,0)
^.001^3^3^3050203^^^
"^DD",801.5,801.5,.04,21,1,0)
This field temporarily saves the internal entry number of the Text 
"^DD",801.5,801.5,.04,21,2,0)
Integration Utilities (TIU) note that is being written on when selections  
"^DD",801.5,801.5,.04,21,3,0)
are being made in the Geriatric Extended Care dialogs.
"^DD",801.5,801.5,.04,"DT")
3050203
"^DD",801.5,801.5,.05,0)
GEC USER^P200^VA(200,^0;5^Q
"^DD",801.5,801.5,.05,3)
This field is the user who is entering the GEC data into the GEC dialogs.
"^DD",801.5,801.5,.05,21,0)
^^3^3^3050617^^
"^DD",801.5,801.5,.05,21,1,0)
This field contains a pointer to the NEW PERSON file or file 200. It 
"^DD",801.5,801.5,.05,21,2,0)
represents the user who enter the data into the GEC dialog referenced in the 
"^DD",801.5,801.5,.05,21,3,0)
IDENTIFY field.
"^DD",801.5,801.5,.05,23,0)
^^1^1^3050617^
"^DD",801.5,801.5,.05,23,1,0)

"^DD",801.5,801.5,.05,"DT")
3050617
"^DD",801.5,801.5,.06,0)
ENTRY DATE^D^^0;6^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",801.5,801.5,.06,3)
The date the entries were made into the GEC Dialogs.
"^DD",801.5,801.5,.06,21,0)
^^2^2^3050617^^
"^DD",801.5,801.5,.06,21,1,0)
This is a date stamp of the date in which data was entered into the 
"^DD",801.5,801.5,.06,21,2,0)
GEC Dialog referenced in the IDENTIFY field.
"^DD",801.5,801.5,.06,"DT")
3050617
"^DD",801.55,801.55,0)
FIELD^^.06^6
"^DD",801.55,801.55,0,"DDA")
N
"^DD",801.55,801.55,0,"DT")
3050617
"^DD",801.55,801.55,0,"IX","B",801.55,.01)

"^DD",801.55,801.55,0,"NM","REMINDER GEC DIALOG ASSOCIATION HISTORY")

"^DD",801.55,801.55,.01,0)
PATIENT^RP2'^DPT(^0;1^Q
"^DD",801.55,801.55,.01,.1)
PATIENT NAME
"^DD",801.55,801.55,.01,1,0)
^.1
"^DD",801.55,801.55,.01,1,1,0)
801.55^B
"^DD",801.55,801.55,.01,1,1,1)
S ^PXRMD(801.55,"B",$E(X,1,30),DA)=""
"^DD",801.55,801.55,.01,1,1,2)
K ^PXRMD(801.55,"B",$E(X,1,30),DA)
"^DD",801.55,801.55,.01,3)
Answer must be 3-30 characters in length.
"^DD",801.55,801.55,.01,21,0)
^.001^5^5^3060816^^^^
"^DD",801.55,801.55,.01,21,1,0)
This field serves as a permanent identifier of the patient who has
"^DD",801.55,801.55,.01,21,2,0)
been selected while using the Geriatric Extended Care Dialogs
"^DD",801.55,801.55,.01,21,3,0)
(GEC).
"^DD",801.55,801.55,.01,21,4,0)

"^DD",801.55,801.55,.01,21,5,0)

"^DD",801.55,801.55,.01,"DT")
3050712
"^DD",801.55,801.55,.02,0)
DATE/TIME^D^^0;2^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",801.55,801.55,.02,3)
(No range limit on date)
"^DD",801.55,801.55,.02,21,0)
^^4^4^3050712^^
"^DD",801.55,801.55,.02,21,1,0)
This field contains the date and time that the GEC dialogs were first 
"^DD",801.55,801.55,.02,21,2,0)
initiated for a particular patient and a particular referral. It is the 
"^DD",801.55,801.55,.02,21,3,0)
current date and item that the first entry for this patient was enter into 
"^DD",801.55,801.55,.02,21,4,0)
file 801.5.
"^DD",801.55,801.55,.02,"DT")
3050712
"^DD",801.55,801.55,.03,0)
IDENTIFY^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",801.55,801.55,.03,3)
Answer must be 1-30 characters in length
"^DD",801.55,801.55,.03,21,0)
^^3^3^3050712^^
"^DD",801.55,801.55,.03,21,1,0)
There are 4 reminder dialogs use in the GEC program.  This field hold on of 
"^DD",801.55,801.55,.03,21,2,0)
the 4 possible entries representing the dialog that is being used. the 
"^DD",801.55,801.55,.03,21,3,0)
possibilities are GEC1,GEC2,GEC3, and GECF.
"^DD",801.55,801.55,.03,"DT")
3050712
"^DD",801.55,801.55,.04,0)
NOTIEN^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",801.55,801.55,.04,3)
Answer must be 1-20 characters in length
"^DD",801.55,801.55,.04,21,0)
^^3^3^3050617^
"^DD",801.55,801.55,.04,21,1,0)
This field permanently saved the internal entry number of the Text 
"^DD",801.55,801.55,.04,21,2,0)
Integration Utilities (TIU) note that is being written on when selections 
"^DD",801.55,801.55,.04,21,3,0)
are being made in the GEC dialogs.
"^DD",801.55,801.55,.04,"DT")
3050628
"^DD",801.55,801.55,.05,0)
USER^P200'^VA(200,^0;5^Q
"^DD",801.55,801.55,.05,3)
This field is the user who is entering the GEC data into the GEC dialogs.
"^DD",801.55,801.55,.05,21,0)
^^2^2^3050617^
"^DD",801.55,801.55,.05,21,1,0)
This field contains a pointer to the NEW PERSON file #200. It represents the 
"^DD",801.55,801.55,.05,21,2,0)
user who entered the data into the GEC dialogs.
"^DD",801.55,801.55,.05,"DT")
3050712
"^DD",801.55,801.55,.06,0)
ENTRY DATE^D^^0;6^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",801.55,801.55,.06,3)
(No range limit on date)
"^DD",801.55,801.55,.06,21,0)
^^2^2^3050617^
"^DD",801.55,801.55,.06,21,1,0)
This is the date that the data was placed into the GEC dialog represented by 
"^DD",801.55,801.55,.06,21,2,0)
the IDENTIFY filed.
"^DD",801.55,801.55,.06,"DT")
3050617
"^DD",802.4,802.4,0)
FIELD^^.05^10
"^DD",802.4,802.4,0,"DDA")
N
"^DD",802.4,802.4,0,"DT")
3060222
"^DD",802.4,802.4,0,"NM","REMINDER FUNCTION FINDING FUNCTIONS")

"^DD",802.4,802.4,0,"PT",811.9255,.02)

"^DD",802.4,802.4,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",802.4,802.4,.01,1,0)
^.1^^0
"^DD",802.4,802.4,.01,3)
Answer must be 2-30 characters in length.
"^DD",802.4,802.4,.01,21,0)
^.001^1^1^3040712^^
"^DD",802.4,802.4,.01,21,1,0)
This is the name of the function finding.
"^DD",802.4,802.4,.01,"DT")
3040712
"^DD",802.4,802.4,.02,0)
ENTRY^RF^^0;2^K:$L(X)>8!($L(X)<2) X
"^DD",802.4,802.4,.02,3)
Answer must be 2-8 characters in length.
"^DD",802.4,802.4,.02,21,0)
^^1^1^3030131^
"^DD",802.4,802.4,.02,21,1,0)
This is the entry point in the routine specified in the ROUTINE field. 
"^DD",802.4,802.4,.02,"DT")
3030131
"^DD",802.4,802.4,.03,0)
ROUTINE^RF^^0;3^K:$L(X)>8!($L(X)<3) X
"^DD",802.4,802.4,.03,3)
Enter the M routine name
"^DD",802.4,802.4,.03,21,0)
^^3^3^3030131^
"^DD",802.4,802.4,.03,21,1,0)
This is the name of an M routine that contains the code for the
"^DD",802.4,802.4,.03,21,2,0)
function finding. The entry point to use is specified in the ENTRY
"^DD",802.4,802.4,.03,21,3,0)
POINT field.
"^DD",802.4,802.4,.03,"DT")
3030131
"^DD",802.4,802.4,.04,0)
PRINT NAME^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",802.4,802.4,.04,3)
Answer must be 1-40 characters in length.
"^DD",802.4,802.4,.04,"DT")
3030131
"^DD",802.4,802.4,.05,0)
ARGUMENT PATTERN^RF^^0;5^K:$L(X)>64!($L(X)<2) X
"^DD",802.4,802.4,.05,3)
Answer must be 2-64 characters in length.
"^DD",802.4,802.4,.05,21,0)
^.001^4^4^3060222^^
"^DD",802.4,802.4,.05,21,1,0)
This is a standard MUMPS pattern that is used to verify that
"^DD",802.4,802.4,.05,21,2,0)
the argument list for the function has the correct format.
"^DD",802.4,802.4,.05,21,3,0)

"^DD",802.4,802.4,.05,21,4,0)

"^DD",802.4,802.4,.05,"DT")
3060222
"^DD",802.4,802.4,1,0)
DESCRIPTION^802.41^^1;0
"^DD",802.4,802.4,1,21,0)
^.001^1^1^3030723^^
"^DD",802.4,802.4,1,21,1,0)
This is the description of the function finding.
"^DD",802.4,802.4,100,0)
CLASS^RS^N:NATIONAL;V:VISN;L:LOCAL;^100;1^Q
"^DD",802.4,802.4,100,3)
Enter the class
"^DD",802.4,802.4,100,21,0)
^^1^1^3030131^
"^DD",802.4,802.4,100,21,1,0)
This is the class of the function finding.
"^DD",802.4,802.4,100,"DT")
3030131
"^DD",802.4,802.4,101,0)
SPONSOR^P811.6'^PXRMD(811.6,^100;2^Q
"^DD",802.4,802.4,101,3)
Enter the sponsor
"^DD",802.4,802.4,101,21,0)
^^1^1^3030131^
"^DD",802.4,802.4,101,21,1,0)
This is the organization or group that sponsors this function finding.
"^DD",802.4,802.4,101,"DT")
3030131
"^DD",802.4,802.4,102,0)
REVIEW DATE^D^^100;3^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",802.4,802.4,102,3)
Enter the review date
"^DD",802.4,802.4,102,21,0)
^^3^3^3030131^
"^DD",802.4,802.4,102,21,1,0)
The REVIEW DATE is used to determine when the function finding should be
"^DD",802.4,802.4,102,21,2,0)
reviewed to verify that it is current with the latest standards and
"^DD",802.4,802.4,102,21,3,0)
guidelines.  
"^DD",802.4,802.4,102,"DT")
3030131
"^DD",802.4,802.4,110,0)
EDIT HISTORY^802.42DA^^110;0
"^DD",802.4,802.4,110,21,0)
^^2^2^3030131^
"^DD",802.4,802.4,110,21,1,0)
This multiple is used to record a history of changes made to the
"^DD",802.4,802.4,110,21,2,0)
function finding.
"^DD",802.4,802.41,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",802.4,802.41,0,"DT")
3021120
"^DD",802.4,802.41,0,"NM","DESCRIPTION")

"^DD",802.4,802.41,0,"UP")
802.4
"^DD",802.4,802.41,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",802.4,802.41,.01,3)
Enter the description of the functional finding
"^DD",802.4,802.41,.01,"DT")
3021120
"^DD",802.4,802.42,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",802.4,802.42,0,"DT")
3021120
"^DD",802.4,802.42,0,"IX","B",802.42,.01)

"^DD",802.4,802.42,0,"NM","EDIT HISTORY")

"^DD",802.4,802.42,0,"UP")
802.4
"^DD",802.4,802.42,.01,0)
EDIT DATE^D^^0;1^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",802.4,802.42,.01,1,0)
^.1
"^DD",802.4,802.42,.01,1,1,0)
802.42^B
"^DD",802.4,802.42,.01,1,1,1)
S ^PXRMD(802.4,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",802.4,802.42,.01,1,1,2)
K ^PXRMD(802.4,DA(1),110,"B",$E(X,1,30),DA)
"^DD",802.4,802.42,.01,21,0)
^^2^2^3021120^
"^DD",802.4,802.42,.01,21,1,0)
This is the date and time when editing was done. This field is set
"^DD",802.4,802.42,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",802.4,802.42,.01,"DT")
3021120
"^DD",802.4,802.42,1,0)
EDIT BY^P200'^VA(200,^110;1^Q
"^DD",802.4,802.42,1,21,0)
^^3^3^3021120^
"^DD",802.4,802.42,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",802.4,802.42,1,21,2,0)
and should not be changed by the user.  
"^DD",802.4,802.42,1,21,3,0)

"^DD",802.4,802.42,1,"DT")
3021120
"^DD",802.4,802.42,2,0)
EDIT COMMENTS^802.422^^1;0
"^DD",802.4,802.42,2,21,0)
^^3^3^3021120^
"^DD",802.4,802.42,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",802.4,802.42,2,21,2,0)
during the editing session.  
"^DD",802.4,802.42,2,21,3,0)

"^DD",802.4,802.422,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",802.4,802.422,0,"DT")
3021120
"^DD",802.4,802.422,0,"NM","EDIT COMMENTS")

"^DD",802.4,802.422,0,"UP")
802.42
"^DD",802.4,802.422,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",802.4,802.422,.01,"DT")
3021120
"^DD",810.1,810.1,0)
FIELD^^9^21
"^DD",810.1,810.1,0,"DDA")
N
"^DD",810.1,810.1,0,"DT")
3051102
"^DD",810.1,810.1,0,"ID",1.9)
W "   ",$P(^(0),U,2)
"^DD",810.1,810.1,0,"IX","B",810.1,.01)

"^DD",810.1,810.1,0,"NM","REMINDER REPORT TEMPLATE")

"^DD",810.1,810.1,0,"VRPK")
PXRM
"^DD",810.1,810.1,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X D NAME^PXRMXTU
"^DD",810.1,810.1,.01,.1)
TEMPLATE NAME
"^DD",810.1,810.1,.01,1,0)
^.1
"^DD",810.1,810.1,.01,1,1,0)
810.1^B
"^DD",810.1,810.1,.01,1,1,1)
S ^PXRMPT(810.1,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.1,.01,1,1,2)
K ^PXRMPT(810.1,"B",$E(X,1,30),DA)
"^DD",810.1,810.1,.01,3)
Answer must be 3-30 characters in length.
"^DD",810.1,810.1,.01,21,0)
^.001^8^8^3000505^^^^
"^DD",810.1,810.1,.01,21,1,0)
The template name is displayed on the report criteria page of the
"^DD",810.1,810.1,.01,21,2,0)
reminder report and is used when selecting templates.
"^DD",810.1,810.1,.01,21,3,0)

"^DD",810.1,810.1,.01,21,4,0)
When editing an existing template, this field should ONLY be amended if you
"^DD",810.1,810.1,.01,21,5,0)
wish to RENAME the template. To make a COPY of a template under a new name
"^DD",810.1,810.1,.01,21,6,0)
(leaving the original intact), leave this field unchanged and enter a
"^DD",810.1,810.1,.01,21,7,0)
new name at the prompt 'STORE REPORT LOGIC IN TEMPLATE NAME:'. To DELETE a
"^DD",810.1,810.1,.01,21,8,0)
template, enter @ at template name.
"^DD",810.1,810.1,.01,23,0)
^.001^1^1^3000505^^^^
"^DD",810.1,810.1,.01,23,1,0)
Used as an identifier to select templates.
"^DD",810.1,810.1,.01,"DT")
2990420
"^DD",810.1,810.1,1.1,0)
TEMPLATE TYPE^RS^Y:Reminders Satisfied PXRMY;X:Reminders Due PXRMX;^0;3^Q
"^DD",810.1,810.1,1.1,.1)

"^DD",810.1,810.1,1.1,21,0)
^^3^3^2990609^
"^DD",810.1,810.1,1.1,21,1,0)
Templates are specific to the type of reminder report being run and are
"^DD",810.1,810.1,1.1,21,2,0)
not interchangeable since the parameter set required for different reports
"^DD",810.1,810.1,1.1,21,3,0)
varies. 
"^DD",810.1,810.1,1.1,23,0)
^^6^6^2990609^^
"^DD",810.1,810.1,1.1,23,1,0)
Report types are :
"^DD",810.1,810.1,1.1,23,2,0)
 
"^DD",810.1,810.1,1.1,23,3,0)
       X - used by PXRMX* routines for Reminders Due
"^DD",810.1,810.1,1.1,23,4,0)
       Y - used by PXRMY* routines for Reminders Satisfied
"^DD",810.1,810.1,1.1,23,5,0)
 
"^DD",810.1,810.1,1.1,23,6,0)
This field is maintained by the report program and may not be edited.
"^DD",810.1,810.1,1.1,"DT")
3020716
"^DD",810.1,810.1,1.2,0)
PATIENT SAMPLE^RS^L:Location;O:OE/RR team;P:Provider;T:PCMM team;I:Individual Patient;R:Reminder Patient List;^0;4^Q
"^DD",810.1,810.1,1.2,.1)

"^DD",810.1,810.1,1.2,21,0)
^.001^14^14^3050117^^^^
"^DD",810.1,810.1,1.2,21,1,0)
The patient sample defines the patient cohort. Listed below are the
"^DD",810.1,810.1,1.2,21,2,0)
parameters relevant to each sample type.
"^DD",810.1,810.1,1.2,21,3,0)
 
"^DD",810.1,810.1,1.2,21,4,0)
(I)ndividual Patients - A list of patients may be entered.
"^DD",810.1,810.1,1.2,21,5,0)
(L)ocations - Hospital Locations, Clinic Stops or Clinic Groups may be
"^DD",810.1,810.1,1.2,21,6,0)
              entered. Patients with encounters or appointments at these
"^DD",810.1,810.1,1.2,21,7,0)
              locations are selected for reporting.
"^DD",810.1,810.1,1.2,21,8,0)
(P)roviders - PCMM providers may be entered. Patients for these providers
"^DD",810.1,810.1,1.2,21,9,0)
              are selected for reporting. Either Primary/Care or All
"^DD",810.1,810.1,1.2,21,10,0)
              patients for the providers may be reported.
"^DD",810.1,810.1,1.2,21,11,0)
(T)eams     - PCMM teams may be entered. Patients allocated to these teams
"^DD",810.1,810.1,1.2,21,12,0)
              are selected for reporting
"^DD",810.1,810.1,1.2,21,13,0)
(O)E/RR     - OE/RR teams may be entered. Patients allocated to these
"^DD",810.1,810.1,1.2,21,14,0)
              teams are selected for reporting.
"^DD",810.1,810.1,1.2,23,0)
^.001^14^14^3050117^^^
"^DD",810.1,810.1,1.2,23,1,0)
Routine PXRMXT loads templates into a local array for use by the report
"^DD",810.1,810.1,1.2,23,2,0)
routines. Each patient sample has only one associated array. The field
"^DD",810.1,810.1,1.2,23,3,0)
PXRMSEL decides which array is loaded. The local arrays correspond to the
"^DD",810.1,810.1,1.2,23,4,0)
field names in the template file.
"^DD",810.1,810.1,1.2,23,5,0)
 
"^DD",810.1,810.1,1.2,23,6,0)
e.g. 
"^DD",810.1,810.1,1.2,23,7,0)
PXRMSEL="I" patient entries in field PXRMPAT are loaded into array PXRMPAT
"^DD",810.1,810.1,1.2,23,8,0)
PXRMSEL="T" team entries in field PXRMPCM are loaded into array PXRMPCM
"^DD",810.1,810.1,1.2,23,9,0)
PXRMSEL="P" providers in field PXRMPRV are loaded into array PXRMPRV
"^DD",810.1,810.1,1.2,23,10,0)
PXRMSEL="O" team entries in PXRMOTM are loaded into array PXRMOTM
"^DD",810.1,810.1,1.2,23,11,0)
 
"^DD",810.1,810.1,1.2,23,12,0)
Note that except for the individual patient sample (PXRMSEL="I") the
"^DD",810.1,810.1,1.2,23,13,0)
template file does not hold patient identifiers. Lists of patients are
"^DD",810.1,810.1,1.2,23,14,0)
assembled by the report routines.
"^DD",810.1,810.1,1.2,"DT")
3020716
"^DD",810.1,810.1,1.3,0)
PRIMARY CARE ONLY OR ALL^S^P:Primary care patients only;A:All patients;^0;5^Q
"^DD",810.1,810.1,1.3,.1)

"^DD",810.1,810.1,1.3,"DT")
3020716
"^DD",810.1,810.1,1.4,0)
REPORT TYPE^RSX^D:Detailed Report;S:Summary Report;^0;6^D PXRMREP^PXRMXTA
"^DD",810.1,810.1,1.4,.1)

"^DD",810.1,810.1,1.4,21,0)
^^4^4^2990414^
"^DD",810.1,810.1,1.4,21,1,0)
The summary report displays the TOTAL number of patients with reminders
"^DD",810.1,810.1,1.4,21,2,0)
APPLICABLE or DUE from the patient sample selected.
"^DD",810.1,810.1,1.4,21,3,0)
 
"^DD",810.1,810.1,1.4,21,4,0)
The detailed report lists DUE patients by name and SSN.
"^DD",810.1,810.1,1.4,"DT")
3020716
"^DD",810.1,810.1,1.5,0)
LOCATION TYPE^S^HA:All Outpatient Locations;HAI:All Inpatient Locations;HS:Selected Hospital Locations;CA:All Clinic Stops;CS:Selected Clinic Stops;GS:Selected Clinic Groups;^0;7^Q
"^DD",810.1,810.1,1.5,.1)

"^DD",810.1,810.1,1.5,"DT")
3020716
"^DD",810.1,810.1,1.6,0)
TYPE OF ENCOUNTER^SX^F:Future Appointments;P:Prior Visits;A:Admissions;C:Current Inpatients;^0;8^D INP^PXRMXTU
"^DD",810.1,810.1,1.6,.1)

"^DD",810.1,810.1,1.6,"DT")
3020716
"^DD",810.1,810.1,1.9,0)
REPORT TITLE^RF^^0;2^K:$L(X)>40!($L(X)<5) X
"^DD",810.1,810.1,1.9,.1)

"^DD",810.1,810.1,1.9,3)
Answer must be 5-40 characters in length.
"^DD",810.1,810.1,1.9,21,0)
^.001^3^3^3000505^^
"^DD",810.1,810.1,1.9,21,1,0)
A detailed report title may be defined when a template is created. This
"^DD",810.1,810.1,1.9,21,2,0)
should be a detailed description of the report and is displayed both on
"^DD",810.1,810.1,1.9,21,3,0)
the report criteria page and at template selection.
"^DD",810.1,810.1,1.9,23,0)
^.001^2^2^3000505^^
"^DD",810.1,810.1,1.9,23,1,0)
Detailed description of template. Used as an identifier when selecting
"^DD",810.1,810.1,1.9,23,2,0)
templates.
"^DD",810.1,810.1,1.9,"DT")
3020716
"^DD",810.1,810.1,2,0)
REMINDER^810.12PA^^1;0
"^DD",810.1,810.1,2,"DT")
3020701
"^DD",810.1,810.1,3,0)
FACILITY^810.13PA^^6;0
"^DD",810.1,810.1,3,21,0)
^^1^1^3040913^
"^DD",810.1,810.1,3,21,1,0)
This multiple stores a list of facilities to run the report against.
"^DD",810.1,810.1,3,"DT")
3020701
"^DD",810.1,810.1,4,0)
PROVIDER^810.14PA^^3;0
"^DD",810.1,810.1,4,21,0)
^^1^1^3040913^
"^DD",810.1,810.1,4,21,1,0)
This multiple stores a list of users to run the report against.
"^DD",810.1,810.1,4,"DT")
3020716
"^DD",810.1,810.1,5,0)
RUN^D^^7;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",810.1,810.1,5,21,0)
^^1^1^3040913^
"^DD",810.1,810.1,5,21,1,0)
This field stores the date the report was last run on.
"^DD",810.1,810.1,5,"DT")
3040913
"^DD",810.1,810.1,6,0)
PATIENT^810.16PA^^2;0
"^DD",810.1,810.1,6,21,0)
^^1^1^3040913^
"^DD",810.1,810.1,6,21,1,0)
This multiple stores a list of patients to run the report against.
"^DD",810.1,810.1,6,"DT")
3020701
"^DD",810.1,810.1,7,0)
OERR TEAM^810.17PA^^4;0
"^DD",810.1,810.1,7,21,0)
^^1^1^3040913^
"^DD",810.1,810.1,7,21,1,0)
This multiple stores a list of OERR teams to run the report against.
"^DD",810.1,810.1,7,"DT")
3020701
"^DD",810.1,810.1,8,0)
PCMM TEAM^810.18PA^^5;0
"^DD",810.1,810.1,8,21,0)
^.001^1^1^3050117^^
"^DD",810.1,810.1,8,21,1,0)
This multiple stores a list of PCMM teams to run the report against.
"^DD",810.1,810.1,8,"DT")
3020701
"^DD",810.1,810.1,9,0)
SERVICE CATEGORY LIST^FX^^8;1^K:$L(X)>245!($L(X)<1)!('$$VSCLIST^PXRMXSC(X)) X
"^DD",810.1,810.1,9,.1)
Service Category List
"^DD",810.1,810.1,9,3)
Answer must be 1-245 characters in length.
"^DD",810.1,810.1,9,21,0)
^.001^5^5^3051103^^^
"^DD",810.1,810.1,9,21,1,0)
This is a comma separated list of service categories. It is used to
"^DD",810.1,810.1,9,21,2,0)
screen visits while building a list of patients based on visits. If
"^DD",810.1,810.1,9,21,3,0)
the service category of the visit is not on the list the visit will
"^DD",810.1,810.1,9,21,4,0)
be excluded.
"^DD",810.1,810.1,9,21,5,0)

"^DD",810.1,810.1,9,"DT")
3051103
"^DD",810.1,810.1,10,0)
LOCATION^810.11PA^^9;0
"^DD",810.1,810.1,10,21,0)
^.001^2^2^3050117^^
"^DD",810.1,810.1,10,21,1,0)
This multiple stores a list of Hospital locations to run the report 
"^DD",810.1,810.1,10,21,2,0)
against.
"^DD",810.1,810.1,10,"DT")
3020701
"^DD",810.1,810.1,11,0)
STOP CODE^810.111PA^^10;0
"^DD",810.1,810.1,11,21,0)
^.001^2^2^3050117^^
"^DD",810.1,810.1,11,21,1,0)
This multiple stores a list of Clinic Stop Codes to run the report
"^DD",810.1,810.1,11,21,2,0)
against.
"^DD",810.1,810.1,11,"DT")
3020701
"^DD",810.1,810.1,12,0)
CLINIC GROUP^810.112PA^^11;0
"^DD",810.1,810.1,12,21,0)
^.001^1^1^3050117^^
"^DD",810.1,810.1,12,21,1,0)
This multiple stores a list of Clinic Groups to run the report against.
"^DD",810.1,810.1,12,"DT")
3020701
"^DD",810.1,810.1,13,0)
REMINDER CATEGORY^810.113P^^12;0
"^DD",810.1,810.1,13,21,0)
^.001^2^2^3050117^^^
"^DD",810.1,810.1,13,21,1,0)
This multiple stores a list of Reminder Categories to use for Reminder 
"^DD",810.1,810.1,13,21,2,0)
Evaluation done within the report and the display order.
"^DD",810.1,810.1,13,"DT")
3020701
"^DD",810.1,810.1,14,0)
PATIENT LIST^810.114P^^13;0
"^DD",810.1,810.1,14,21,0)
^.001^2^2^3050117^^
"^DD",810.1,810.1,14,21,1,0)
This multiple stores a list of Reminder Patient Lists used by the report 
"^DD",810.1,810.1,14,21,2,0)
to save the due patients to.
"^DD",810.1,810.1,14,"DT")
3020716
"^DD",810.1,810.11,0)
LOCATION SUB-FIELD^^.01^1
"^DD",810.1,810.11,0,"DT")
3020729
"^DD",810.1,810.11,0,"IX","B",810.11,.01)

"^DD",810.1,810.11,0,"NM","LOCATION")

"^DD",810.1,810.11,0,"UP")
810.1
"^DD",810.1,810.11,.01,0)
LOCATION^MMP44'^SC(^0;1^Q
"^DD",810.1,810.11,.01,.1)
Hospital Location
"^DD",810.1,810.11,.01,1,0)
^.1
"^DD",810.1,810.11,.01,1,1,0)
810.11^B
"^DD",810.1,810.11,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.11,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),9,"B",$E(X,1,30),DA)
"^DD",810.1,810.11,.01,21,0)
^.001^2^2^3050117^^
"^DD",810.1,810.11,.01,21,1,0)
Reminder report will only evaluate reminders against patients who have had a 
"^DD",810.1,810.11,.01,21,2,0)
visit or are scheduled for a future appointment at the defined hospital location. 
"^DD",810.1,810.11,.01,"DT")
3040915
"^DD",810.1,810.111,0)
STOP CODE SUB-FIELD^^.01^1
"^DD",810.1,810.111,0,"DT")
3020729
"^DD",810.1,810.111,0,"IX","B",810.111,.01)

"^DD",810.1,810.111,0,"NM","STOP CODE")

"^DD",810.1,810.111,0,"UP")
810.1
"^DD",810.1,810.111,.01,0)
STOP CODE^MMP40.7'^DIC(40.7,^0;1^Q
"^DD",810.1,810.111,.01,.1)
Clinic Stop Code
"^DD",810.1,810.111,.01,1,0)
^.1
"^DD",810.1,810.111,.01,1,1,0)
810.111^B
"^DD",810.1,810.111,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.111,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),10,"B",$E(X,1,30),DA)
"^DD",810.1,810.111,.01,21,0)
^.001^3^3^3050117^^
"^DD",810.1,810.111,.01,21,1,0)
Reminder reports will only evaluate reminders against patients who have had a 
"^DD",810.1,810.111,.01,21,2,0)
visit or have a scheduled appointment at a hospital location with a matching 
"^DD",810.1,810.111,.01,21,3,0)
stop code.
"^DD",810.1,810.111,.01,"DT")
3040915
"^DD",810.1,810.112,0)
CLINIC GROUP SUB-FIELD^^.01^1
"^DD",810.1,810.112,0,"DT")
3020729
"^DD",810.1,810.112,0,"IX","B",810.112,.01)

"^DD",810.1,810.112,0,"NM","CLINIC GROUP")

"^DD",810.1,810.112,0,"UP")
810.1
"^DD",810.1,810.112,.01,0)
CLINIC GROUP^MMP409.67'^SD(409.67,^0;1^Q
"^DD",810.1,810.112,.01,.1)
Clinic Group Code
"^DD",810.1,810.112,.01,1,0)
^.1
"^DD",810.1,810.112,.01,1,1,0)
810.112^B
"^DD",810.1,810.112,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.112,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),11,"B",$E(X,1,30),DA)
"^DD",810.1,810.112,.01,21,0)
^.001^3^3^3050117^^
"^DD",810.1,810.112,.01,21,1,0)
Reminder reports will only evaluate reminders against patients who have had a 
"^DD",810.1,810.112,.01,21,2,0)
visit or have a scheduled appointment at a hospital location that belongs to  
"^DD",810.1,810.112,.01,21,3,0)
the defined clinic group. 
"^DD",810.1,810.112,.01,"DT")
3040915
"^DD",810.1,810.113,0)
REMINDER CATEGORY SUB-FIELD^^.02^2
"^DD",810.1,810.113,0,"DT")
3020729
"^DD",810.1,810.113,0,"IX","B",810.113,.01)

"^DD",810.1,810.113,0,"NM","REMINDER CATEGORY")

"^DD",810.1,810.113,0,"UP")
810.1
"^DD",810.1,810.113,.01,0)
REMINDER CATEGORY^MP811.7'^PXRMD(811.7,^0;1^Q
"^DD",810.1,810.113,.01,.1)
Reminder Category
"^DD",810.1,810.113,.01,1,0)
^.1
"^DD",810.1,810.113,.01,1,1,0)
810.113^B
"^DD",810.1,810.113,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),12,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.113,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),12,"B",$E(X,1,30),DA)
"^DD",810.1,810.113,.01,21,0)
^.001^2^2^3050117^^
"^DD",810.1,810.113,.01,21,1,0)
Reminder reports will evaluate the patients sample against each reminder found 
"^DD",810.1,810.113,.01,21,2,0)
within the category, to determine if the patient is due for the reminder.
"^DD",810.1,810.113,.01,"DT")
3040915
"^DD",810.1,810.113,.02,0)
DISPLAY ORDER^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",810.1,810.113,.02,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",810.1,810.113,.02,21,0)
^.001^3^3^3050117^^^
"^DD",810.1,810.113,.02,21,1,0)
Enter the order in which reminder categories should appear on the report. 
"^DD",810.1,810.113,.02,21,2,0)
The reminder in the category will display in the report output in the 
"^DD",810.1,810.113,.02,21,3,0)
numerical sequence defined in this field.
"^DD",810.1,810.113,.02,"DT")
3040915
"^DD",810.1,810.114,0)
PATIENT LIST SUB-FIELD^^.01^1
"^DD",810.1,810.114,0,"DT")
3020213
"^DD",810.1,810.114,0,"IX","B",810.114,.01)

"^DD",810.1,810.114,0,"NM","PATIENT LIST")

"^DD",810.1,810.114,0,"UP")
810.1
"^DD",810.1,810.114,.01,0)
PATIENT LIST^MP810.5'^PXRMXP(810.5,^0;1^Q
"^DD",810.1,810.114,.01,1,0)
^.1
"^DD",810.1,810.114,.01,1,1,0)
810.114^B
"^DD",810.1,810.114,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),13,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.114,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),13,"B",$E(X,1,30),DA)
"^DD",810.1,810.114,.01,21,0)
^.001^3^3^3050117^^
"^DD",810.1,810.114,.01,21,1,0)
Reminder Reports, when completed with the evaluation, will save every patient 
"^DD",810.1,810.114,.01,21,2,0)
that is found to have a reminder due to a patient list stored in file 
"^DD",810.1,810.114,.01,21,3,0)
#810.144.
"^DD",810.1,810.114,.01,"DT")
3040915
"^DD",810.1,810.12,0)
REMINDER SUB-FIELD^^.02^2
"^DD",810.1,810.12,0,"DT")
3020729
"^DD",810.1,810.12,0,"IX","B",810.12,.01)

"^DD",810.1,810.12,0,"NM","REMINDER")

"^DD",810.1,810.12,0,"UP")
810.1
"^DD",810.1,810.12,.01,0)
REMINDER^MP811.9'X^PXD(811.9,^0;1^D PXRMREM^PXRMXTA
"^DD",810.1,810.12,.01,.1)
Reminder
"^DD",810.1,810.12,.01,1,0)
^.1
"^DD",810.1,810.12,.01,1,1,0)
810.12^B
"^DD",810.1,810.12,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.12,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",810.1,810.12,.01,21,0)
^.001^2^2^3010727^^^
"^DD",810.1,810.12,.01,21,1,0)
Enter the reminders to be evaluated in the order to be printed. If the
"^DD",810.1,810.12,.01,21,2,0)
report type is 'Detailed' only the first reminder will be used.
"^DD",810.1,810.12,.01,23,0)
^.001^1^1^3010727^^^^
"^DD",810.1,810.12,.01,23,1,0)
Reminder Definition file #811.9
"^DD",810.1,810.12,.01,"DT")
3010727
"^DD",810.1,810.12,.02,0)
DISPLAY ORDER^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",810.1,810.12,.02,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",810.1,810.12,.02,21,0)
^^1^1^2990415^
"^DD",810.1,810.12,.02,21,1,0)
Enter the order in which the reminders should appear on the report.
"^DD",810.1,810.12,.02,"DT")
3020729
"^DD",810.1,810.13,0)
FACILITY SUB-FIELD^^.01^1
"^DD",810.1,810.13,0,"IX","B",810.13,.01)

"^DD",810.1,810.13,0,"NM","FACILITY")

"^DD",810.1,810.13,0,"UP")
810.1
"^DD",810.1,810.13,.01,0)
FACILITY^MP4'^DIC(4,^0;1^Q
"^DD",810.1,810.13,.01,.1)
Facility Code
"^DD",810.1,810.13,.01,1,0)
^.1
"^DD",810.1,810.13,.01,1,1,0)
810.13^B
"^DD",810.1,810.13,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.13,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),6,"B",$E(X,1,30),DA)
"^DD",810.1,810.13,.01,"DT")
2990316
"^DD",810.1,810.14,0)
PROVIDER SUB-FIELD^^.01^1
"^DD",810.1,810.14,0,"DT")
3020729
"^DD",810.1,810.14,0,"IX","B",810.14,.01)

"^DD",810.1,810.14,0,"NM","PROVIDER")

"^DD",810.1,810.14,0,"UP")
810.1
"^DD",810.1,810.14,.01,0)
PROVIDER^MMP200'^VA(200,^0;1^Q
"^DD",810.1,810.14,.01,1,0)
^.1
"^DD",810.1,810.14,.01,1,1,0)
810.14^B
"^DD",810.1,810.14,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.14,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),3,"B",$E(X,1,30),DA)
"^DD",810.1,810.14,.01,1,1,3)
Required Index for Variable Pointer
"^DD",810.1,810.14,.01,3)

"^DD",810.1,810.14,.01,"DT")
3020729
"^DD",810.1,810.16,0)
PATIENT SUB-FIELD^^.01^1
"^DD",810.1,810.16,0,"DT")
3020729
"^DD",810.1,810.16,0,"IX","B",810.16,.01)

"^DD",810.1,810.16,0,"NM","PATIENT")

"^DD",810.1,810.16,0,"UP")
810.1
"^DD",810.1,810.16,.01,0)
PATIENT^MRMMP2'^DPT(^0;1^Q
"^DD",810.1,810.16,.01,.1)
Patient
"^DD",810.1,810.16,.01,1,0)
^.1
"^DD",810.1,810.16,.01,1,1,0)
810.16^B
"^DD",810.1,810.16,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.16,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),2,"B",$E(X,1,30),DA)
"^DD",810.1,810.16,.01,"DT")
3020729
"^DD",810.1,810.17,0)
OERR TEAM SUB-FIELD^^.01^1
"^DD",810.1,810.17,0,"DT")
3020729
"^DD",810.1,810.17,0,"IX","B",810.17,.01)

"^DD",810.1,810.17,0,"NM","OERR TEAM")

"^DD",810.1,810.17,0,"UP")
810.1
"^DD",810.1,810.17,.01,0)
OERR TEAM^MMP100.21'^OR(100.21,^0;1^Q
"^DD",810.1,810.17,.01,.1)
OE/RR Team
"^DD",810.1,810.17,.01,1,0)
^.1
"^DD",810.1,810.17,.01,1,1,0)
810.17^B
"^DD",810.1,810.17,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.17,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),4,"B",$E(X,1,30),DA)
"^DD",810.1,810.17,.01,"DT")
3020729
"^DD",810.1,810.18,0)
PCMM TEAM SUB-FIELD^^.01^1
"^DD",810.1,810.18,0,"DT")
3050117
"^DD",810.1,810.18,0,"IX","B",810.18,.01)

"^DD",810.1,810.18,0,"NM","PCMM TEAM")

"^DD",810.1,810.18,0,"UP")
810.1
"^DD",810.1,810.18,.01,0)
PCMM TEAM^MP404.51'^SCTM(404.51,^0;1^Q
"^DD",810.1,810.18,.01,.1)
PCMM Team
"^DD",810.1,810.18,.01,1,0)
^.1
"^DD",810.1,810.18,.01,1,1,0)
810.18^B
"^DD",810.1,810.18,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.18,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),5,"B",$E(X,1,30),DA)
"^DD",810.1,810.18,.01,"DT")
3050117
"^DD",810.2,810.2,0)
FIELD^^110^11
"^DD",810.2,810.2,0,"DDA")
N
"^DD",810.2,810.2,0,"DT")
3060626
"^DD",810.2,810.2,0,"IX","B",810.2,.01)

"^DD",810.2,810.2,0,"NM","REMINDER EXTRACT DEFINITION")

"^DD",810.2,810.2,0,"PT",810.3,1)

"^DD",810.2,810.2,0,"PT",810.5,.05)

"^DD",810.2,810.2,0,"PT",810.6,7)

"^DD",810.2,810.2,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.9)) X
"^DD",810.2,810.2,.01,.1)

"^DD",810.2,810.2,.01,1,0)
^.1
"^DD",810.2,810.2,.01,1,1,0)
810.2^B
"^DD",810.2,810.2,.01,1,1,1)
S ^PXRM(810.2,"B",$E(X,1,30),DA)=""
"^DD",810.2,810.2,.01,1,1,2)
K ^PXRM(810.2,"B",$E(X,1,30),DA)
"^DD",810.2,810.2,.01,3)
Answer must be 3-30 characters in length.
"^DD",810.2,810.2,.01,21,0)
^.001^3^3^3060504^^^^
"^DD",810.2,810.2,.01,21,1,0)
The NAME of the extract (VA-IHD QUERI, VA-MH QUERI etc.). Extracts for 
"^DD",810.2,810.2,.01,21,2,0)
national rollup are prefixed with 'VA-'.
"^DD",810.2,810.2,.01,21,3,0)

"^DD",810.2,810.2,.01,23,0)
^.001^7^7^3060504^^^^
"^DD",810.2,810.2,.01,23,1,0)
The national extract definitions (VA-IHD QUERI, VA-Mh QUERI) in this file are 
"^DD",810.2,810.2,.01,23,2,0)
used in the rollup of compliance data to the Austin Automation Center (AAC).  
"^DD",810.2,810.2,.01,23,3,0)
                                 
"^DD",810.2,810.2,.01,23,4,0)
Extract runs transmit compliance totals as HL7 format messages but also store 
"^DD",810.2,810.2,.01,23,5,0)
run totals in the REMINDER EXTRACT SUMMARY file #810.3 and extract patient 
"^DD",810.2,810.2,.01,23,6,0)
lists in the REMINDER PATIENT 
"^DD",810.2,810.2,.01,23,7,0)

"^DD",810.2,810.2,.01,"DT")
3060504
"^DD",810.2,810.2,.02,0)
TYPE OF TOTALS^RS^CT:COMPLIANCE TOTALS ONLY;CF:COMPLIANCE AND FINDING TOTALS;^0;2^Q
"^DD",810.2,810.2,.02,21,0)
^^4^4^3060504^^
"^DD",810.2,810.2,.02,21,1,0)
This is the type of extract counting that will be accumulated by this extract.
"^DD",810.2,810.2,.02,21,2,0)
Either compliance totals only or compliance totals plus finding totals.Patient
"^DD",810.2,810.2,.02,21,3,0)
level information is not stored or transmitted.  
"^DD",810.2,810.2,.02,21,4,0)

"^DD",810.2,810.2,.02,23,0)
^^1^1^3060504^
"^DD",810.2,810.2,.02,23,1,0)

"^DD",810.2,810.2,.02,"DT")
3060504
"^DD",810.2,810.2,.03,0)
DESCRIPTION^810.23^^1;0
"^DD",810.2,810.2,.03,21,0)
^^1^1^3060504^
"^DD",810.2,810.2,.03,21,1,0)

"^DD",810.2,810.2,1,0)
REPORT FREQUENCY^RS^Q:QUARTERLY;M:MONTHLY;Y:YEARLY;^0;3^Q
"^DD",810.2,810.2,1,3)
Enter the report frequency.
"^DD",810.2,810.2,1,21,0)
^^3^3^3060504^^
"^DD",810.2,810.2,1,21,1,0)
This is the frequency of the extract run. The frequency may be monthly, 
"^DD",810.2,810.2,1,21,2,0)
quarterly, yearly or by financial year.
"^DD",810.2,810.2,1,21,3,0)

"^DD",810.2,810.2,1,"DT")
3060504
"^DD",810.2,810.2,2,0)
LAST REPORTING PERIOD/YEAR^F^^0;4^K:$L(X)>8!($L(X)<4) X
"^DD",810.2,810.2,2,3)
Enter the period/year of the last extract run.
"^DD",810.2,810.2,2,21,0)
^^3^3^3060504^^
"^DD",810.2,810.2,2,21,1,0)
This is the date range of the last extract run. The format is period/year,
"^DD",810.2,810.2,2,21,2,0)
e.g. Q1/2002 denotes first quarter of 2002.
"^DD",810.2,810.2,2,21,3,0)

"^DD",810.2,810.2,2,"DT")
3060504
"^DD",810.2,810.2,3,0)
LAST RUN DATE^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",810.2,810.2,3,3)
Enter a valid date and time.
"^DD",810.2,810.2,3,21,0)
^^1^1^3020422^
"^DD",810.2,810.2,3,21,1,0)
This is the date and time the latest extract was run.
"^DD",810.2,810.2,3,"DT")
3020422
"^DD",810.2,810.2,4,0)
NEXT REPORTING PERIOD/YEAR^F^^0;6^K:$L(X)>8!($L(X)<4) X
"^DD",810.2,810.2,4,3)
Enter period/year of next extract run.
"^DD",810.2,810.2,4,21,0)
^^6^6^3060504^^
"^DD",810.2,810.2,4,21,1,0)
This is the date range of the next extract to be run. The format is
"^DD",810.2,810.2,4,21,2,0)
period/year, e.g. Q1/2002 denotes first quarter of 2002..
"^DD",810.2,810.2,4,21,3,0)
 
"^DD",810.2,810.2,4,21,4,0)
This field is updated automatically on the successful completion of each
"^DD",810.2,810.2,4,21,5,0)
extract run.
"^DD",810.2,810.2,4,21,6,0)

"^DD",810.2,810.2,4,"DT")
3060504
"^DD",810.2,810.2,5,0)
NEXT RUN DATE^D^^0;7^S %DT="ESTXR" D ^%DT S X=Y K:DT>X X
"^DD",810.2,810.2,5,3)
TYPE A DATE NOT EARLIER THAN CURRENT DATE.
"^DD",810.2,810.2,5,21,0)
^.001^10^10^3060504^^^^
"^DD",810.2,810.2,5,21,1,0)
Date of the next scheduled extract run. This field is only set for extracts
"^DD",810.2,810.2,5,21,2,0)
that are scheduled to run as an option.
"^DD",810.2,810.2,5,21,3,0)
 
"^DD",810.2,810.2,5,21,4,0)
Example: the two national extracts that are being released with 2.0, VA-IHD
"^DD",810.2,810.2,5,21,5,0)
QUERI and VA-MH QUERI, are being released as options (PXRM EXTRACT 
"^DD",810.2,810.2,5,21,6,0)
VA-IHD QUERI and PXRM EXTRACT VA-MH QUERI) that sites will need to
"^DD",810.2,810.2,5,21,7,0)
schedule using TaskMan. When the extract is done with processing, the
"^DD",810.2,810.2,5,21,8,0)
extract code will determine the next run date and add that value to this
"^DD",810.2,810.2,5,21,9,0)
field.
"^DD",810.2,810.2,5,21,10,0)

"^DD",810.2,810.2,5,"DT")
3060504
"^DD",810.2,810.2,10,0)
EXTRACT RULES^810.21I^^10;0
"^DD",810.2,810.2,10,21,0)
^.001^8^8^3060627^^^^
"^DD",810.2,810.2,10,21,1,0)
This multiple contains the sequential list of extract criteria: 
"^DD",810.2,810.2,10,21,2,0)
- list rule sets used by this extract to build 
"^DD",810.2,810.2,10,21,3,0)
  patient lists
"^DD",810.2,810.2,10,21,4,0)
- reminders that should be run against a   
"^DD",810.2,810.2,10,21,5,0)
  patient list
"^DD",810.2,810.2,10,21,6,0)
- counting rules for how findings should be 
"^DD",810.2,810.2,10,21,7,0)
  counted.
"^DD",810.2,810.2,10,21,8,0)

"^DD",810.2,810.2,10,"DT")
3020516
"^DD",810.2,810.2,100,0)
CLASS^RS^N:NATIONAL;V:VISN;L:LOCAL;^100;1^Q
"^DD",810.2,810.2,100,3)
Enter the class.
"^DD",810.2,810.2,100,21,0)
^.001^3^3^3060504^^^
"^DD",810.2,810.2,100,21,1,0)
This is the CLASS of the extract definition. National extract definitions 
"^DD",810.2,810.2,100,21,2,0)
cannot be edited.
"^DD",810.2,810.2,100,21,3,0)

"^DD",810.2,810.2,100,"DT")
3060504
"^DD",810.2,810.2,110,0)
EDIT HISTORY^810.24D^^110;0
"^DD",810.2,810.21,0)
EXTRACT RULES SUB-FIELD^^.05^6
"^DD",810.2,810.21,0,"DT")
3060626
"^DD",810.2,810.21,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^PXRM(810.4,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(810.4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",810.2,810.21,0,"IX","B",810.21,.01)

"^DD",810.2,810.21,0,"NM","EXTRACT RULES")

"^DD",810.2,810.21,0,"UP")
810.2
"^DD",810.2,810.21,.01,0)
EXTRACT SEQUENCE^MRFX^^0;1^K:$L(X)'=3!(+X=0) X I $G(X)]"" K:$D(^PXRM(810.2,DA(1),10,"B",X)) X
"^DD",810.2,810.21,.01,1,0)
^.1
"^DD",810.2,810.21,.01,1,1,0)
810.21^B
"^DD",810.2,810.21,.01,1,1,1)
S ^PXRM(810.2,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",810.2,810.21,.01,1,1,2)
K ^PXRM(810.2,DA(1),10,"B",$E(X,1,30),DA)
"^DD",810.2,810.21,.01,3)
Enter unique sequence 001 - 999 (length 3 preceded by zeroes)
"^DD",810.2,810.21,.01,21,0)
14^.001^14^14^3060518^
"^DD",810.2,810.21,.01,21,1,0)
Each extract definition has multiple extract sequences.  Each extract 
"^DD",810.2,810.21,.01,21,2,0)
sequence is associated with a list rule set.  Each list rule set is used 
"^DD",810.2,810.21,.01,21,3,0)
to create an extract patient list.  Each patient list created can be run 
"^DD",810.2,810.21,.01,21,4,0)
against a sequential set of reminders. Each reminder can have a counting 
"^DD",810.2,810.21,.01,21,5,0)
rule that determines how findings should be counted.
"^DD",810.2,810.21,.01,21,6,0)
 
"^DD",810.2,810.21,.01,21,7,0)
The extract sequence numbers determine the order in which list rule sets
"^DD",810.2,810.21,.01,21,8,0)
should be evaluated to create patient lists and the sequence the patient
"^DD",810.2,810.21,.01,21,9,0)
lists will be saved to a Reminder Patient List and referenced from the
"^DD",810.2,810.21,.01,21,10,0)
extract summary (#810.3).
"^DD",810.2,810.21,.01,21,11,0)
                                 
"^DD",810.2,810.21,.01,21,12,0)
A list rule set (#810.4) and extract patient list name are defined for each 
"^DD",810.2,810.21,.01,21,13,0)
extract sequence number. The list rule set defines the reminder terms (#810.5)
"^DD",810.2,810.21,.01,21,14,0)
which are used to identify patients to be included in the extract patient list.  
"^DD",810.2,810.21,.01,"DT")
3060517
"^DD",810.2,810.21,.02,0)
LIST RULE SET^R*P810.4'^PXRM(810.4,^0;2^S DIC("S")="I $P(^(0),U,3)=3" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",810.2,810.21,.02,3)
Select the list rule set to be used to build the patient list
"^DD",810.2,810.21,.02,12)
Only list rule sets may be selected 
"^DD",810.2,810.21,.02,12.1)
S DIC("S")="I $P(^(0),U,3)=3"
"^DD",810.2,810.21,.02,21,0)
^^2^2^3060504^^
"^DD",810.2,810.21,.02,21,1,0)
This is the list rule set (#810.4) used to build the patient list.
"^DD",810.2,810.21,.02,21,2,0)

"^DD",810.2,810.21,.02,"DT")
3060504
"^DD",810.2,810.21,.03,0)
EXTRACT PT LIST NAME^RF^^0;3^K:$L(X)>96!($L(X)<3) X
"^DD",810.2,810.21,.03,3)
Answer must be 3-96 characters in length
"^DD",810.2,810.21,.03,21,0)
^.001^14^14^3060518^^^
"^DD",810.2,810.21,.03,21,1,0)
This mandatory field describes the name of the extract patient list to be 
"^DD",810.2,810.21,.03,21,2,0)
created from the rule set.
"^DD",810.2,810.21,.03,21,3,0)

"^DD",810.2,810.21,.03,21,4,0)
The name will contain the string Q,M, or Y for period, 'nn' for quarter or 
"^DD",810.2,810.21,.03,21,5,0)
month, and 'yyyy' for year. When the extract patient list is created for an 
"^DD",810.2,810.21,.03,21,6,0)
extract reporting period, the name of the patient will contain the resolved 
"^DD",810.2,810.21,.03,21,7,0)
period, nn, and yyyy. 
"^DD",810.2,810.21,.03,21,8,0)
                                 
"^DD",810.2,810.21,.03,21,9,0)
e.g. 
"^DD",810.2,810.21,.03,21,10,0)
                                 
"^DD",810.2,810.21,.03,21,11,0)
Field entry 'VA-*IHD QUERI yyyy Mnn PTS WITH QUALIFY VISIT' for the January 
"^DD",810.2,810.21,.03,21,12,0)
2005 reporting period will result in a patient list name of 
"^DD",810.2,810.21,.03,21,13,0)
'VA-*IHD QUERI 2005 M1 PTS WITH QUALIFY VISIT' 
"^DD",810.2,810.21,.03,21,14,0)

"^DD",810.2,810.21,.03,"DT")
3060518
"^DD",810.2,810.21,.04,0)
INCLUDE DECEASED PATIENTS^S^0:NO;1:YES;^0;4^Q
"^DD",810.2,810.21,.04,3)
Enter "YES" to include deceased patients on the extract patient list.
"^DD",810.2,810.21,.04,21,0)
^.001^6^6^3060627^^^^
"^DD",810.2,810.21,.04,21,1,0)
If this field is set to "NO" then patients who have a date of death
"^DD",810.2,810.21,.04,21,2,0)
will be excluded from the extract patient list. If this field is set
"^DD",810.2,810.21,.04,21,3,0)
to "YES" then patients who have a date of death will be included on
"^DD",810.2,810.21,.04,21,4,0)
the extract patient list. The default is "NO".
"^DD",810.2,810.21,.04,21,5,0)

"^DD",810.2,810.21,.04,21,6,0)

"^DD",810.2,810.21,.04,"DT")
3060626
"^DD",810.2,810.21,.05,0)
INCLUDE TEST PATIENTS^S^0:NO;1:YES;^0;5^Q
"^DD",810.2,810.21,.05,3)
Enter "YES" to include test patients on the extract patient list.
"^DD",810.2,810.21,.05,21,0)
^.001^6^6^3060627^^
"^DD",810.2,810.21,.05,21,1,0)
If this field is set to "YES" then test patients will be included on
"^DD",810.2,810.21,.05,21,2,0)
the extract patient list. If this field is set to "NO" then test
"^DD",810.2,810.21,.05,21,3,0)
patients will be excluded from the extract patient list. The default
"^DD",810.2,810.21,.05,21,4,0)
is "NO".
"^DD",810.2,810.21,.05,21,5,0)

"^DD",810.2,810.21,.05,21,6,0)

"^DD",810.2,810.21,.05,"DT")
3060626
"^DD",810.2,810.21,10,0)
REMINDERS/COUNTING RULES^810.22I^^10;0
"^DD",810.2,810.21,10,"DT")
3060517
"^DD",810.2,810.22,0)
REMINDERS/COUNTING RULES SUB-FIELD^^2^3
"^DD",810.2,810.22,0,"DT")
3021009
"^DD",810.2,810.22,0,"ID",1)
S %I=Y,Y=$S('$D(^(0)):"",$D(^PXD(811.9,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(811.9,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",810.2,810.22,0,"IX","B",810.22,.01)

"^DD",810.2,810.22,0,"NM","REMINDERS/COUNTING RULES")

"^DD",810.2,810.22,0,"UP")
810.21
"^DD",810.2,810.22,.01,0)
REMINDER SEQUENCE^MFX^^0;1^K:$L(X)'=3!(+X=0) X I $G(X)]"" K:$D(^PXRM(810.2,DA(2),10,DA(1),10,"B",X)) X
"^DD",810.2,810.22,.01,1,0)
^.1
"^DD",810.2,810.22,.01,1,1,0)
810.22^B
"^DD",810.2,810.22,.01,1,1,1)
S ^PXRM(810.2,DA(2),10,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",810.2,810.22,.01,1,1,2)
K ^PXRM(810.2,DA(2),10,DA(1),10,"B",$E(X,1,30),DA)
"^DD",810.2,810.22,.01,3)
Enter unique sequence 001 - 999 (length 3 preceded by zeroes)
"^DD",810.2,810.22,.01,21,0)
^^4^4^3060504^^
"^DD",810.2,810.22,.01,21,1,0)
This is the sequence number which determines the order in which the reminders 
"^DD",810.2,810.22,.01,21,2,0)
will be evaluated and the sequence that reminder compliance totals and finding
"^DD",810.2,810.22,.01,21,3,0)
totals from extract runs are stored in the extract summary file. 
"^DD",810.2,810.22,.01,21,4,0)

"^DD",810.2,810.22,.01,"DT")
3060504
"^DD",810.2,810.22,1,0)
REMINDER^P811.9'^PXD(811.9,^0;2^Q
"^DD",810.2,810.22,1,21,0)
^.001^4^4^3060504^^^
"^DD",810.2,810.22,1,21,1,0)
This is the reminder to be evaluated by the extract process. The status of
"^DD",810.2,810.22,1,21,2,0)
the reminder (applicable, not applicable, due, not due) is used to accumulate
"^DD",810.2,810.22,1,21,3,0)
compliance totals which are stored in the extract summary file.
"^DD",810.2,810.22,1,21,4,0)

"^DD",810.2,810.22,1,"DT")
3060504
"^DD",810.2,810.22,2,0)
COUNTING RULE^P810.7'^PXRM(810.7,^0;3^Q
"^DD",810.2,810.22,2,21,0)
^.001^5^5^3060517^^
"^DD",810.2,810.22,2,21,1,0)
The COUNTING RULE (#810.7) defines which EXTRACT COUNTING GROUPS (#810.8) 
"^DD",810.2,810.22,2,21,2,0)
that should be used to collect finding counts for this reminder. If no
"^DD",810.2,810.22,2,21,3,0)
extract counting rules are defined for the reminder in an extract
"^DD",810.2,810.22,2,21,4,0)
definition defined for both compliance totals and finding totals, then no
"^DD",810.2,810.22,2,21,5,0)
finding compliance totals will be accumulated for the reminder.
"^DD",810.2,810.22,2,"DT")
3060504
"^DD",810.2,810.23,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",810.2,810.23,0,"DT")
3020423
"^DD",810.2,810.23,0,"NM","DESCRIPTION")

"^DD",810.2,810.23,0,"UP")
810.2
"^DD",810.2,810.23,.01,0)
DESCRIPTION^W^^0;1
"^DD",810.2,810.23,.01,21,0)
^^2^2^3060504^^
"^DD",810.2,810.23,.01,21,1,0)
Enter a description summarizing the extract criteria and what will be counted.
"^DD",810.2,810.23,.01,21,2,0)

"^DD",810.2,810.23,.01,"DT")
3060504
"^DD",810.2,810.24,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",810.2,810.24,0,"DT")
3021122
"^DD",810.2,810.24,0,"IX","B",810.24,.01)

"^DD",810.2,810.24,0,"NM","EDIT HISTORY")

"^DD",810.2,810.24,0,"UP")
810.2
"^DD",810.2,810.24,.01,0)
EDIT DATE^D^^0;1^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",810.2,810.24,.01,1,0)
^.1
"^DD",810.2,810.24,.01,1,1,0)
810.24^B
"^DD",810.2,810.24,.01,1,1,1)
S ^PXRM(810.2,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",810.2,810.24,.01,1,1,2)
K ^PXRM(810.2,DA(1),110,"B",$E(X,1,30),DA)
"^DD",810.2,810.24,.01,3)
(No range limit on date)
"^DD",810.2,810.24,.01,21,0)
^^2^2^3021122^
"^DD",810.2,810.24,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",810.2,810.24,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",810.2,810.24,.01,"DT")
3021122
"^DD",810.2,810.24,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",810.2,810.24,1,21,0)
^^2^2^3021122^
"^DD",810.2,810.24,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",810.2,810.24,1,21,2,0)
and should not be changed by the user.
"^DD",810.2,810.24,1,"DT")
3021122
"^DD",810.2,810.24,2,0)
EDIT COMMENTS^810.242^^1;0
"^DD",810.2,810.242,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",810.2,810.242,0,"DT")
3021122
"^DD",810.2,810.242,0,"NM","EDIT COMMENTS")

"^DD",810.2,810.242,0,"UP")
810.24
"^DD",810.2,810.242,.01,0)
EDIT COMMENTS^W^^0;1
"^DD",810.2,810.242,.01,"DT")
3021122
"^DD",810.3,810.3,0)
FIELD^^100^21
"^DD",810.3,810.3,0,"DDA")
N
"^DD",810.3,810.3,0,"DT")
3051121
"^DD",810.3,810.3,0,"ID",.06)
W "   ",$$FMTE^DILIBF($P(^(0),U,6),5)
"^DD",810.3,810.3,0,"IX","AHLID",5,.01)

"^DD",810.3,810.3,0,"IX","AHLID",810.36,.01)

"^DD",810.3,810.3,0,"NM","REMINDER EXTRACT SUMMARY")

"^DD",810.3,810.3,.001,0)
NUMBER^NJ7,0^^ ^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.3,.001,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",810.3,810.3,.001,21,0)
^^1^1^3040819^
"^DD",810.3,810.3,.001,21,1,0)
This is the extract summary number.
"^DD",810.3,810.3,.001,"DT")
3040819
"^DD",810.3,810.3,.01,0)
NAME^RF^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",810.3,810.3,.01,1,0)
^.1^^0
"^DD",810.3,810.3,.01,3)
Answer must be 3-64 characters in length.
"^DD",810.3,810.3,.01,21,0)
^.001^29^29^3060504^^^^
"^DD",810.3,810.3,.01,21,1,0)
The NAME is the combination of a unique abbreviations for the type of extract.
"^DD",810.3,810.3,.01,21,2,0)
The file contains different extract types: 
"^DD",810.3,810.3,.01,21,3,0)
                                 
"^DD",810.3,810.3,.01,21,4,0)
1) EPI - Hep C Extract 
"^DD",810.3,810.3,.01,21,5,0)
                                 
"^DD",810.3,810.3,.01,21,6,0)
Extracts of this type are prefixed LREPI. The following is an example of EPI
"^DD",810.3,810.3,.01,21,7,0)
lookup information: 
"^DD",810.3,810.3,.01,21,8,0)
                                 
"^DD",810.3,810.3,.01,21,9,0)
LREPI 00/05 061500
"^DD",810.3,810.3,.01,21,10,0)
LREPI 00/06 073100
"^DD",810.3,810.3,.01,21,11,0)
LREPI 00/07 081500                                      
"^DD",810.3,810.3,.01,21,12,0)
The YY/MM represents the ending year and month of the extract date range, and
"^DD",810.3,810.3,.01,21,13,0)
the run date in the format YYMMDD. The date and time of the run is an
"^DD",810.3,810.3,.01,21,14,0)
identifier.  
"^DD",810.3,810.3,.01,21,15,0)
                                 
"^DD",810.3,810.3,.01,21,16,0)
2) VA- generic entries (IHD and MH QUERI) 
"^DD",810.3,810.3,.01,21,17,0)
                                 
"^DD",810.3,810.3,.01,21,18,0)
Extracts of this type are prefixed VA-IHD or VA-MH. The following is an example
"^DD",810.3,810.3,.01,21,19,0)
of IHD Look-up information: 
"^DD",810.3,810.3,.01,21,20,0)
                                 
"^DD",810.3,810.3,.01,21,21,0)
VA-IHD QUERI 2003 M2/01
"^DD",810.3,810.3,.01,21,22,0)
VA-IHD QUERI 2003 M3/01
"^DD",810.3,810.3,.01,21,23,0)
VA-IHD QUERI 2003 M4/01  
"^DD",810.3,810.3,.01,21,24,0)
                                 
"^DD",810.3,810.3,.01,21,25,0)
The reporting period of the extract run is included in the extract name. Since
"^DD",810.3,810.3,.01,21,26,0)
a particular reporting period can be rerun, each entry for the same reporting
"^DD",810.3,810.3,.01,21,27,0)
period is assigned a sequential entry number: /01 represents the first entry
"^DD",810.3,810.3,.01,21,28,0)
for the reporting period.
"^DD",810.3,810.3,.01,21,29,0)

"^DD",810.3,810.3,.01,"DT")
3060504
"^DD",810.3,810.3,.02,0)
BEGINNING DATE^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",810.3,810.3,.02,3)
Enter the extract beginning date range.
"^DD",810.3,810.3,.02,21,0)
^.001^1^1^3000829^^
"^DD",810.3,810.3,.02,21,1,0)
This is the starting date that was used for the extract.
"^DD",810.3,810.3,.02,"DT")
3000708
"^DD",810.3,810.3,.03,0)
ENDING DATE^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",810.3,810.3,.03,3)
Enter the extract ending date range.
"^DD",810.3,810.3,.03,21,0)
^^1^1^3000829^
"^DD",810.3,810.3,.03,21,1,0)
This is the ending date that was used for the extract.
"^DD",810.3,810.3,.03,"DT")
3000708
"^DD",810.3,810.3,.04,0)
TASK #^F^^0;4^K:$L(X)>10!($L(X)<3) X
"^DD",810.3,810.3,.04,3)
Enter the task number of the job creating the extract.
"^DD",810.3,810.3,.04,21,0)
^^1^1^3000829^
"^DD",810.3,810.3,.04,21,1,0)
This field identifies the task that was run to create the extract.
"^DD",810.3,810.3,.04,"DT")
3000708
"^DD",810.3,810.3,.05,0)
EXTRACT OWNER^P200'^VA(200,^0;5^Q
"^DD",810.3,810.3,.05,3)
Enter the person who ran the extract.
"^DD",810.3,810.3,.05,21,0)
^.001^1^1^3000829^^
"^DD",810.3,810.3,.05,21,1,0)
This is the person who ran the extract job. 
"^DD",810.3,810.3,.05,"DT")
3000708
"^DD",810.3,810.3,.06,0)
EXTRACT DATE^D^^0;6^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",810.3,810.3,.06,1,0)
^.1^^0
"^DD",810.3,810.3,.06,3)
Enter the date/time the extract entry was created.
"^DD",810.3,810.3,.06,21,0)
^^1^1^3000829^
"^DD",810.3,810.3,.06,21,1,0)
This is the date/time that the extract entry was added to this file.
"^DD",810.3,810.3,.06,"DT")
3020709
"^DD",810.3,810.3,.07,0)
PATIENTS EVALUATED^NJ7,0^^0;7^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.3,.07,3)
Enter the total count of patients with findings.
"^DD",810.3,810.3,.07,21,0)
^^2^2^3000829^
"^DD",810.3,810.3,.07,21,1,0)
This is the total number of patients who had findings for the reminder and
"^DD",810.3,810.3,.07,21,2,0)
date range criteria selected.
"^DD",810.3,810.3,.07,"DT")
3000709
"^DD",810.3,810.3,.08,0)
PATIENTS WITH FINDINGS^NJ7,0^^0;8^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.3,.08,3)
Enter the number of findings extracted.
"^DD",810.3,810.3,.08,21,0)
^.001^2^2^3000829^^^
"^DD",810.3,810.3,.08,21,1,0)
This is the total count of findings that met the extract criteria in the
"^DD",810.3,810.3,.08,21,2,0)
reminders and date range.
"^DD",810.3,810.3,.08,"DT")
3000709
"^DD",810.3,810.3,1,0)
EXTRACT DEFINITION^P810.2'^PXRM(810.2,^4;1^Q
"^DD",810.3,810.3,1,21,0)
^.001^3^3^3060504^^^
"^DD",810.3,810.3,1,21,1,0)
This is a pointer to the EXTRACT DEFINITION file. This shows what extract
"^DD",810.3,810.3,1,21,2,0)
was run to create this extract summary.
"^DD",810.3,810.3,1,21,3,0)

"^DD",810.3,810.3,1,"DT")
3060504
"^DD",810.3,810.3,2,0)
TYPE OF TOTALS^S^CT:COMPLIANCE TOTALS ONLY;CF:COMPLIANCE AND FINDING TOTALS;^4;2^Q
"^DD",810.3,810.3,2,21,0)
^^4^4^3060504^^
"^DD",810.3,810.3,2,21,1,0)
This is the type of totals requested for the extract parameter that was
"^DD",810.3,810.3,2,21,2,0)
run to create this extract summary. An extract definition must contain Counting
"^DD",810.3,810.3,2,21,3,0)
Rules in order for Finding Totals to be accumulated.
"^DD",810.3,810.3,2,21,4,0)

"^DD",810.3,810.3,2,"DT")
3060504
"^DD",810.3,810.3,3,0)
REPORTING PERIOD^NJ2,0^^4;3^K:+X'=X!(X>12)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.3,3,3)
Type a Number between 0 and 12, 0 Decimal Digits
"^DD",810.3,810.3,3,21,0)
^.001^3^3^3060504^^^
"^DD",810.3,810.3,3,21,1,0)
This field is used to define the period of time that the extract was run. 
"^DD",810.3,810.3,3,21,2,0)
The period can be for a calendar Month or quarter.
"^DD",810.3,810.3,3,21,3,0)

"^DD",810.3,810.3,3,"DT")
3060504
"^DD",810.3,810.3,4,0)
REPORTING YEAR^NJ4,0^^4;4^K:+X'=X!(X>2050)!(X<2000)!(X?.E1"."1N.N) X
"^DD",810.3,810.3,4,3)
Type a Number between 2000 and 2050, 0 Decimal Digits
"^DD",810.3,810.3,4,21,0)
^^1^1^3040820^
"^DD",810.3,810.3,4,21,1,0)
This is for the year that the extract was run against.
"^DD",810.3,810.3,4,"DT")
3040820
"^DD",810.3,810.3,5,0)
MANUAL/AUTOSCHEDULED FLAG^S^M:MANUAL;A:AUTOSCHEDULED;^4;5^Q
"^DD",810.3,810.3,5,21,0)
^^2^2^3020708^
"^DD",810.3,810.3,5,21,1,0)
This field indicates if the extract summary was created from an 
"^DD",810.3,810.3,5,21,2,0)
autoscheduled extract or as the result of a manual run.
"^DD",810.3,810.3,5,"DT")
3020708
"^DD",810.3,810.3,6,0)
HL7 MESSAGE ID^810.36^^5;0
"^DD",810.3,810.3,6,21,0)
^.001^2^2^3050121^^
"^DD",810.3,810.3,6,21,1,0)
This multiple contains each HL7 ID for every time this extract summary was
"^DD",810.3,810.3,6,21,2,0)
transmitted to Austin.
"^DD",810.3,810.3,7,0)
REPORT FREQUENCY^S^M:MONTHLY;Q:QUARTERLY;Y:YEARLY;^4;6^Q
"^DD",810.3,810.3,7,"DT")
3021001
"^DD",810.3,810.3,10,0)
EXTRACT FINDINGS^810.31P^^1;0
"^DD",810.3,810.3,10,21,0)
^.001^4^4^3060504^^^
"^DD",810.3,810.3,10,21,1,0)
This is the LREPI patient findings found during reminder extract processing for
"^DD",810.3,810.3,10,21,2,0)
the specified date range.  Entries can be selected based on the NUMBER on
"^DD",810.3,810.3,10,21,3,0)
the EXTRACT FINDINGS multiple or the Patient.
"^DD",810.3,810.3,10,21,4,0)

"^DD",810.3,810.3,20,0)
LREPI FINDING TOTALS^810.32AV^^2;0
"^DD",810.3,810.3,20,21,0)
^.001^3^3^3060504^^^^
"^DD",810.3,810.3,20,21,1,0)
This is the total count for each finding item extracted during LREPI
"^DD",810.3,810.3,20,21,2,0)
processing..
"^DD",810.3,810.3,20,21,3,0)

"^DD",810.3,810.3,20,23,0)
^^1^1^3060504^
"^DD",810.3,810.3,20,23,1,0)

"^DD",810.3,810.3,20,"DT")
3060504
"^DD",810.3,810.3,30,0)
COMPLIANCE TOTALS^810.33I^^3;0
"^DD",810.3,810.3,30,21,0)
^^2^2^3060504^
"^DD",810.3,810.3,30,21,1,0)
Used for Generic Extract reporting.
"^DD",810.3,810.3,30,21,2,0)

"^DD",810.3,810.3,30,23,0)
^^1^1^3060504^
"^DD",810.3,810.3,30,23,1,0)

"^DD",810.3,810.3,30,"DT")
3020620
"^DD",810.3,810.3,50,0)
AUTOMATICALLY PURGE^S^1:YES;0:NO;^50;1^Q
"^DD",810.3,810.3,50,21,0)
^^3^3^3050719^
"^DD",810.3,810.3,50,21,1,0)
This field is use to determine if the Extract Summary should be automatically 
"^DD",810.3,810.3,50,21,2,0)
purge after five years. This field will be check by the Reminder Extract 
"^DD",810.3,810.3,50,21,3,0)
code that runs monthly when running the National Extract.
"^DD",810.3,810.3,50,"DT")
3050719
"^DD",810.3,810.3,100,0)
CLASS^S^N:NATIONAL;V:VISN;L:LOCAL;^100;1^Q
"^DD",810.3,810.3,100,21,0)
^^3^3^3050926^
"^DD",810.3,810.3,100,21,1,0)
This is the CLASS of the extract summary. Possible classes are "N" for
"^DD",810.3,810.3,100,21,2,0)
national, "V" for VISN, and "L" for local. National extract summaries 
"^DD",810.3,810.3,100,21,3,0)
cannot be edited by sites.
"^DD",810.3,810.3,100,"DT")
3050926
"^DD",810.3,810.31,0)
EXTRACT FINDINGS SUB-FIELD^^4^12
"^DD",810.3,810.31,0,"DT")
3000829
"^DD",810.3,810.31,0,"IX","AC",810.31,.07)

"^DD",810.3,810.31,0,"IX","B",810.31,.01)

"^DD",810.3,810.31,0,"NM","EXTRACT FINDINGS")

"^DD",810.3,810.31,0,"UP")
810.3
"^DD",810.3,810.31,.001,0)
NUMBER^NJ9,0^^ ^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.31,.001,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",810.3,810.31,.001,21,0)
^^2^2^3040820^
"^DD",810.3,810.31,.001,21,1,0)
This is the sequence in which the entries are added to the Reminder
"^DD",810.3,810.31,.001,21,2,0)
Extract file.
"^DD",810.3,810.31,.001,"DT")
3040820
"^DD",810.3,810.31,.01,0)
PATIENT^MRP2'^DPT(^0;1^Q
"^DD",810.3,810.31,.01,1,0)
^.1
"^DD",810.3,810.31,.01,1,1,0)
810.31^B
"^DD",810.3,810.31,.01,1,1,1)
S ^PXRMXT(810.3,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",810.3,810.31,.01,1,1,2)
K ^PXRMXT(810.3,DA(1),1,"B",$E(X,1,30),DA)
"^DD",810.3,810.31,.01,3)
Enter the patient who had the finding.
"^DD",810.3,810.31,.01,21,0)
^^1^1^3000829^
"^DD",810.3,810.31,.01,21,1,0)
This is the patient who had the extract finding.
"^DD",810.3,810.31,.01,"DT")
3000717
"^DD",810.3,810.31,.03,0)
TERM^P811.5'^PXRMD(811.5,^0;3^Q
"^DD",810.3,810.31,.03,3)
Enter the term that is related to the finding.
"^DD",810.3,810.31,.03,21,0)
^.001^2^2^3000829^^
"^DD",810.3,810.31,.03,21,1,0)
This is the reminder term related to the finding.  This field will only be
"^DD",810.3,810.31,.03,21,2,0)
defined if the reminder contained a reminder term.
"^DD",810.3,810.31,.03,"DT")
3000708
"^DD",810.3,810.31,.04,0)
FINDING ITEM^V^^0;4^Q
"^DD",810.3,810.31,.04,3)

"^DD",810.3,810.31,.04,21,0)
^.001^2^2^3050121^^^^
"^DD",810.3,810.31,.04,21,1,0)
This is a variable pointer that contains the possible findings from a
"^DD",810.3,810.31,.04,21,2,0)
reminder evaluation.
"^DD",810.3,810.31,.04,"DT")
3000709
"^DD",810.3,810.31,.04,"V",0)
^.12P^16^16
"^DD",810.3,810.31,.04,"V",1,0)
50^DRUG^5^DR^^n
"^DD",810.3,810.31,.04,"V",2,0)
9999999.09^EDUCATION TOPIC^10^ED^^n
"^DD",810.3,810.31,.04,"V",3,0)
9999999.15^EXAM^15^EX^^n
"^DD",810.3,810.31,.04,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^^n
"^DD",810.3,810.31,.04,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^^n
"^DD",810.3,810.31,.04,"V",6,0)
60^LABORATORY TEST^30^LT^^n
"^DD",810.3,810.31,.04,"V",7,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^^n
"^DD",810.3,810.31,.04,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^^n
"^DD",810.3,810.31,.04,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^^n
"^DD",810.3,810.31,.04,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^^n
"^DD",810.3,810.31,.04,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^^n
"^DD",810.3,810.31,.04,"V",12,0)
811.5^REMINDER TERM^60^RT^^n
"^DD",810.3,810.31,.04,"V",13,0)
9999999.28^SKIN TEST^65^ST^^n
"^DD",810.3,810.31,.04,"V",14,0)
50.605^VA DRUG CLASS^70^DC^^n
"^DD",810.3,810.31,.04,"V",15,0)
50.6^VA GENERIC^75^DG^^n
"^DD",810.3,810.31,.04,"V",16,0)
120.51^VITAL MEASUREMENT^80^VM^^n
"^DD",810.3,810.31,.05,0)
ALTERNATE ID^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",810.3,810.31,.05,3)
Enter the alternate identifier related to the reminder term.
"^DD",810.3,810.31,.05,21,0)
^.001^4^4^3050121^^
"^DD",810.3,810.31,.05,21,1,0)
This is an alternate identifier related to the finding's reminder term.
"^DD",810.3,810.31,.05,21,2,0)
The ALTERNATE ID is used by the national database.  For example, all
"^DD",810.3,810.31,.05,21,3,0)
findings found for reminder terms related to risk assessment will have a
"^DD",810.3,810.31,.05,21,4,0)
number from 1-7 as its identifier. 
"^DD",810.3,810.31,.05,"DT")
3000708
"^DD",810.3,810.31,.06,0)
FINDING DATE^D^^0;6^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",810.3,810.31,.06,21,0)
^^5^5^3000829^
"^DD",810.3,810.31,.06,21,1,0)
This is the date related to the finding. For PCE data, this is the date
"^DD",810.3,810.31,.06,21,2,0)
and time of the visit. For laboratory data, this is the accession date.
"^DD",810.3,810.31,.06,21,3,0)
For Outpatient Pharmacy data, this is the fill date, refill date, or
"^DD",810.3,810.31,.06,21,4,0)
partial fill date.   For Inpatient Pharmacy, this is the order date, or
"^DD",810.3,810.31,.06,21,5,0)
renewal date.
"^DD",810.3,810.31,.06,"DT")
3000708
"^DD",810.3,810.31,.07,0)
VISIT^P9000010'^AUPNVSIT(^0;7^Q
"^DD",810.3,810.31,.07,1,0)
^.1
"^DD",810.3,810.31,.07,1,1,0)
810.31^AC^MUMPS
"^DD",810.3,810.31,.07,1,1,1)
D ADD^AUPNVSIT
"^DD",810.3,810.31,.07,1,1,2)
D SUB^AUPNVSIT
"^DD",810.3,810.31,.07,1,1,"%D",0)
^^2^2^3040205^
"^DD",810.3,810.31,.07,1,1,"%D",1,0)
This cross-reference adds and subtracts from
"^DD",810.3,810.31,.07,1,1,"%D",2,0)
the Dependent Entry Count in the VISIT file.
"^DD",810.3,810.31,.07,1,1,"DT")
3040205
"^DD",810.3,810.31,.07,3)
Enter the visit related to the finding (optional).
"^DD",810.3,810.31,.07,21,0)
^.001^2^2^3050121^^
"^DD",810.3,810.31,.07,21,1,0)
This is the visit date from the VISIT File that is related to the finding.
"^DD",810.3,810.31,.07,21,2,0)
This is only defined when the findings are from PCE.
"^DD",810.3,810.31,.07,"DT")
3040205
"^DD",810.3,810.31,.08,0)
ENCOUNTER TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",810.3,810.31,.08,3)
Enter I for Inpatient or O for Outpatient encounter type.
"^DD",810.3,810.31,.08,21,0)
^.001^5^5^3050121^^
"^DD",810.3,810.31,.08,21,1,0)
This is an ENCOUNTER TYPE that summarizes the clinical activity as
"^DD",810.3,810.31,.08,21,2,0)
Inpatient or Outpatient activity.  This ENCOUNTER TYPE is based on the
"^DD",810.3,810.31,.08,21,3,0)
Emerging Pathogens Initiative (EPI) definition of ENCOUNTER TYPES. The
"^DD",810.3,810.31,.08,21,4,0)
VADPT call to determine inpatient status on a date is used to determine
"^DD",810.3,810.31,.08,21,5,0)
the Inpatient or Outpatient status.
"^DD",810.3,810.31,.08,"DT")
3000829
"^DD",810.3,810.31,1,0)
RESULT^F^^1;1^K:$L(X)>60!($L(X)<1) X
"^DD",810.3,810.31,1,3)
Enter the RESULT for the finding from reminder evaluation.
"^DD",810.3,810.31,1,21,0)
^.001^5^5^3050121^^
"^DD",810.3,810.31,1,21,1,0)
This is the RESULT for a finding that is returned by the reminder
"^DD",810.3,810.31,1,21,2,0)
evaluation "RESULT" node.  See Clinical Reminder documentation for
"^DD",810.3,810.31,1,21,3,0)
explanations of the RESULT for each type of finding.  The result from the
"^DD",810.3,810.31,1,21,4,0)
clinical reminder evaluation is stored as freetext in this field. No input
"^DD",810.3,810.31,1,21,5,0)
and output transforms are used on this field.
"^DD",810.3,810.31,1,"DT")
3000709
"^DD",810.3,810.31,2,0)
VALUE^F^^1;2^K:$L(X)>60!($L(X)<1) X
"^DD",810.3,810.31,2,3)
Enter the finding's VALUE from reminder evaluation.
"^DD",810.3,810.31,2,21,0)
^.001^4^4^3050121^^
"^DD",810.3,810.31,2,21,1,0)
This is the VALUE for a finding that is returned in the reminder
"^DD",810.3,810.31,2,21,2,0)
evaluation "VALUE" node.  See Clinical Reminder documentation for
"^DD",810.3,810.31,2,21,3,0)
explanations of the VALUE for each type of finding.  This VALUE is stored
"^DD",810.3,810.31,2,21,4,0)
as freetext.  No input and output transforms are used on this field.
"^DD",810.3,810.31,2,"DT")
3000708
"^DD",810.3,810.31,3,0)
DRUG^F^^1;3^K:$L(X)>50!($L(X)<1) X
"^DD",810.3,810.31,3,3)
Enter the local formulary drug name.
"^DD",810.3,810.31,3,21,0)
^^2^2^3000829^
"^DD",810.3,810.31,3,21,1,0)
This is the freetext name from the local formulary file for a drug
"^DD",810.3,810.31,3,21,2,0)
finding.
"^DD",810.3,810.31,3,"DT")
3000708
"^DD",810.3,810.31,4,0)
DSUP^NJ3,0^^1;4^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.31,4,3)
Enter the days supply for pharmacy findings.
"^DD",810.3,810.31,4,21,0)
^^5^5^3000829^
"^DD",810.3,810.31,4,21,1,0)
This is the days supply that the medication covers if the finding is an
"^DD",810.3,810.31,4,21,2,0)
outpatient medication. Inpatient pharmacy medications do not normally have
"^DD",810.3,810.31,4,21,3,0)
a days supply, but since the EPI requires a value in this field, the days
"^DD",810.3,810.31,4,21,4,0)
supply is calculated by subtracting the start date from the stop date of
"^DD",810.3,810.31,4,21,5,0)
the order.
"^DD",810.3,810.31,4,"DT")
3000708
"^DD",810.3,810.32,0)
LREPI FINDING TOTALS SUB-FIELD^^.03^3
"^DD",810.3,810.32,0,"IX","B",810.32,.01)

"^DD",810.3,810.32,0,"NM","LREPI FINDING TOTALS")

"^DD",810.3,810.32,0,"UP")
810.3
"^DD",810.3,810.32,.01,0)
FINDING ITEM^V^^0;1^Q
"^DD",810.3,810.32,.01,1,0)
^.1
"^DD",810.3,810.32,.01,1,1,0)
810.32^B
"^DD",810.3,810.32,.01,1,1,1)
S ^PXRMXT(810.3,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",810.3,810.32,.01,1,1,2)
K ^PXRMXT(810.3,DA(1),2,"B",$E(X,1,30),DA)
"^DD",810.3,810.32,.01,1,1,3)
Required Index for Variable Pointer
"^DD",810.3,810.32,.01,21,0)
^.001^1^1^3050121^^
"^DD",810.3,810.32,.01,21,1,0)
This is the FINDING ITEM returned by reminder evaluation.
"^DD",810.3,810.32,.01,"DT")
3000709
"^DD",810.3,810.32,.01,"V",0)
^.12P^16^16
"^DD",810.3,810.32,.01,"V",1,0)
50^DRUG^5^DR^^n
"^DD",810.3,810.32,.01,"V",2,0)
9999999.09^EDUCATION TOPICS^10^ED^^n
"^DD",810.3,810.32,.01,"V",3,0)
9999999.15^EXAM^15^EX^^n
"^DD",810.3,810.32,.01,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^^n
"^DD",810.3,810.32,.01,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^^n
"^DD",810.3,810.32,.01,"V",6,0)
60^LABORATORY TEST^30^LT^^n
"^DD",810.3,810.32,.01,"V",7,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^^n
"^DD",810.3,810.32,.01,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^^n
"^DD",810.3,810.32,.01,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^^n
"^DD",810.3,810.32,.01,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^^n
"^DD",810.3,810.32,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^^n
"^DD",810.3,810.32,.01,"V",12,0)
811.5^REMINDER TERM^60^RT^^n
"^DD",810.3,810.32,.01,"V",13,0)
9999999.28^SKIN TEST^65^ST^^n
"^DD",810.3,810.32,.01,"V",14,0)
50.605^VA DRUG CLASS^70^DC^^n
"^DD",810.3,810.32,.01,"V",15,0)
50.6^VA GENERIC^75^DG^^n
"^DD",810.3,810.32,.01,"V",16,0)
120.51^VITAL MEASUREMENT^80^VM^^n
"^DD",810.3,810.32,.02,0)
FINDING COUNT^NJ7,0^^0;2^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.32,.02,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",810.3,810.32,.02,21,0)
^^2^2^3040820^
"^DD",810.3,810.32,.02,21,1,0)
This is the count of how many times this finding item occurred in the
"^DD",810.3,810.32,.02,21,2,0)
extract.
"^DD",810.3,810.32,.02,"DT")
3040820
"^DD",810.3,810.32,.03,0)
UNIQUE PATIENT COUNT^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.32,.03,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",810.3,810.32,.03,21,0)
^^3^3^3000801^
"^DD",810.3,810.32,.03,21,1,0)
This is the count of patients with unique findings in the extract.
"^DD",810.3,810.32,.03,21,2,0)
An example of duplicate findings for a patient is multiple fills for a
"^DD",810.3,810.32,.03,21,3,0)
particular medication.
"^DD",810.3,810.32,.03,"DT")
3000801
"^DD",810.3,810.33,0)
COMPLIANCE TOTALS SUB-FIELD^^10^10
"^DD",810.3,810.33,0,"DT")
3050926
"^DD",810.3,810.33,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^PXD(811.9,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(811.9,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",810.3,810.33,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(4,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",810.3,810.33,0,"IX","B",810.33,.01)

"^DD",810.3,810.33,0,"NM","COMPLIANCE TOTALS")

"^DD",810.3,810.33,0,"UP")
810.3
"^DD",810.3,810.33,.01,0)
EXTRACT SEQUENCE^MFX^^0;1^K:$L(X)'=3!(+X=0) X I $G(X)]"" K:$D(^PXRM(810.3,DA(1),30,"B",X)) X
"^DD",810.3,810.33,.01,1,0)
^.1
"^DD",810.3,810.33,.01,1,1,0)
810.33^B
"^DD",810.3,810.33,.01,1,1,1)
S ^PXRMXT(810.3,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",810.3,810.33,.01,1,1,2)
K ^PXRMXT(810.3,DA(1),3,"B",$E(X,1,30),DA)
"^DD",810.3,810.33,.01,3)
Enter unique sequence 001 - 999 (length 3 preceded by zeroes)
"^DD",810.3,810.33,.01,21,0)
^.001^2^2^3050117^^
"^DD",810.3,810.33,.01,21,1,0)
Each reminder, station, patient list combination is allocated a unique
"^DD",810.3,810.33,.01,21,2,0)
sequence number.
"^DD",810.3,810.33,.01,"DT")
3021011
"^DD",810.3,810.33,.02,0)
REMINDER^P811.9'^PXD(811.9,^0;2^Q
"^DD",810.3,810.33,.02,21,0)
^^2^2^3021011^
"^DD",810.3,810.33,.02,21,1,0)
This is the reminder definition for which compliance totals are being 
"^DD",810.3,810.33,.02,21,2,0)
created.
"^DD",810.3,810.33,.02,"DT")
3021011
"^DD",810.3,810.33,.03,0)
STATION^P4'^DIC(4,^0;3^Q
"^DD",810.3,810.33,.03,21,0)
^^2^2^3021011^
"^DD",810.3,810.33,.03,21,1,0)
Reminder compliance totals are accumulated by the patients' primary
"^DD",810.3,810.33,.03,21,2,0)
station.
"^DD",810.3,810.33,.03,"DT")
3021011
"^DD",810.3,810.33,.04,0)
PATIENT LIST^P810.5'^PXRMXP(810.5,^0;4^Q
"^DD",810.3,810.33,.04,21,0)
^^4^4^3051017^
"^DD",810.3,810.33,.04,21,1,0)
The patient list is a collection of patient who should have the extract 
"^DD",810.3,810.33,.04,21,2,0)
run against them, for example all patients seen in the last month that 
"^DD",810.3,810.33,.04,21,3,0)
have a diagnosis of IHD. The patient list is built by finding patients 
"^DD",810.3,810.33,.04,21,4,0)
who meet the list rules defined in file# 810.4.
"^DD",810.3,810.33,.04,"DT")
3051017
"^DD",810.3,810.33,2,0)
TOTAL PATIENTS EVALUATED^NJ8,0^^0;5^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.33,2,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",810.3,810.33,2,21,0)
^^2^2^3021011^
"^DD",810.3,810.33,2,21,1,0)
This is the total number of patients in the patient list with this 
"^DD",810.3,810.33,2,21,2,0)
primary station.
"^DD",810.3,810.33,2,"DT")
3021011
"^DD",810.3,810.33,3,0)
TOTAL PATIENTS APPLICABLE^NJ8,0^^0;6^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.33,3,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",810.3,810.33,3,21,0)
^^2^2^3021011^
"^DD",810.3,810.33,3,21,1,0)
This is the number of patients in the patient list with this primary
"^DD",810.3,810.33,3,21,2,0)
station for whom the reminder was applicable.
"^DD",810.3,810.33,3,"DT")
3021011
"^DD",810.3,810.33,4,0)
TOTAL PATIENTS NOT APPLICABLE^NJ8,0^^0;7^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.33,4,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",810.3,810.33,4,21,0)
^^2^2^3021011^
"^DD",810.3,810.33,4,21,1,0)
This is the number of patients in the patient list with this primary
"^DD",810.3,810.33,4,21,2,0)
station for whom the reminder was not applicable.
"^DD",810.3,810.33,4,"DT")
3021011
"^DD",810.3,810.33,5,0)
TOTAL PATIENTS DUE^NJ8,0^^0;8^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1.N) X
"^DD",810.3,810.33,5,3)
Type a number between 0 and 99999999, 0 Decimal Digits
"^DD",810.3,810.33,5,21,0)
^^2^2^3040820^
"^DD",810.3,810.33,5,21,1,0)
This is the number of patients in the patient list with this primary
"^DD",810.3,810.33,5,21,2,0)
station for whom the reminder was applicable and due.
"^DD",810.3,810.33,5,"DT")
3040820
"^DD",810.3,810.33,6,0)
TOTAL PATIENTS NOT DUE^NJ8,0^^0;9^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",810.3,810.33,6,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",810.3,810.33,6,21,0)
^^2^2^3040820^
"^DD",810.3,810.33,6,21,1,0)
This is the number of patients in the patient list with this primary 
"^DD",810.3,810.33,6,21,2,0)
station for whom the reminder was applicable and not due.
"^DD",810.3,810.33,6,"DT")
3040820
"^DD",810.3,810.33,10,0)
FINDING TOTALS^810.331I^^1;0
"^DD",810.3,810.33,10,21,0)
^^2^2^3060504^
"^DD",810.3,810.33,10,21,1,0)
Used for Generic Extract reporting.
"^DD",810.3,810.33,10,21,2,0)

"^DD",810.3,810.331,0)
FINDING TOTALS SUB-FIELD^^6^11
"^DD",810.3,810.331,0,"DT")
3050926
"^DD",810.3,810.331,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^PXRMD(811.5,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(811.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",810.3,810.331,0,"IX","B",810.331,.01)

"^DD",810.3,810.331,0,"NM","FINDING TOTALS")

"^DD",810.3,810.331,0,"UP")
810.33
"^DD",810.3,810.331,.01,0)
FINDING SEQUENCE^MFX^^0;1^K:$L(X)'=3!(+X=0) X I $G(X)]"" K:$D(^PXRM(810.3,DA(2),30,DA(1),10,"B",X)) X
"^DD",810.3,810.331,.01,1,0)
^.1
"^DD",810.3,810.331,.01,1,1,0)
810.331^B
"^DD",810.3,810.331,.01,1,1,1)
S ^PXRMXT(810.3,DA(2),3,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",810.3,810.331,.01,1,1,2)
K ^PXRMXT(810.3,DA(2),3,DA(1),1,"B",$E(X,1,30),DA)
"^DD",810.3,810.331,.01,3)
Enter unique sequence 001 - 999 (length 3 preceded by zeroes)
"^DD",810.3,810.331,.01,21,0)
^^1^1^3021011^^
"^DD",810.3,810.331,.01,21,1,0)
Each extracted finding total is allocated a unique sequence number.
"^DD",810.3,810.331,.01,"DT")
3021011
"^DD",810.3,810.331,.02,0)
REMINDER TERM^P811.5'^PXRMD(811.5,^0;2^Q
"^DD",810.3,810.331,.02,21,0)
^.001^3^3^3050121^^
"^DD",810.3,810.331,.02,21,1,0)
This is the REMINDER TERM for which totals are being accumulated. The 
"^DD",810.3,810.331,.02,21,2,0)
Extract Parameters (#810.2,#810.7,#810.8) define which terms should be 
"^DD",810.3,810.331,.02,21,3,0)
extracted for each reminder/patient list combination.
"^DD",810.3,810.331,.02,"DT")
3021011
"^DD",810.3,810.331,.03,0)
FINDING TOTAL TYPE^S^MRF:MOST RECENT FINDING COUNT;MRFP:MOST RECENT FINDING PATIENT COUNT;UR:UTILIZATION IN REPORTING PERIOD FINDING COUNT;^0;3^Q
"^DD",810.3,810.331,.03,21,0)
^^1^1^3021011^
"^DD",810.3,810.331,.03,21,1,0)
This code indicates the type of count.
"^DD",810.3,810.331,.03,"DT")
3021011
"^DD",810.3,810.331,.04,0)
GROUP NAME^F^^0;9^K:$L(X)>64!($L(X)<3) X
"^DD",810.3,810.331,.04,3)
Answer must be 3-64 characters in length
"^DD",810.3,810.331,.04,21,0)
^^1^1^3021011^
"^DD",810.3,810.331,.04,21,1,0)
This is the finding group name (#810.8).
"^DD",810.3,810.331,.04,"DT")
3021011
"^DD",810.3,810.331,.05,0)
REMINDER STATUS^S^T:TOTAL PATIENTS;A:APPLICABLE PATIENTS;D:DUE PATIENTS;N:NOT DUE PATIENTS;^0;10^Q
"^DD",810.3,810.331,.05,21,0)
^^2^2^3021011^
"^DD",810.3,810.331,.05,21,1,0)
This code indicates that totals are only for patients with a specific
"^DD",810.3,810.331,.05,21,2,0)
reminder evaluation status.
"^DD",810.3,810.331,.05,"DT")
3021011
"^DD",810.3,810.331,1,0)
TOTAL COUNT^NJ8,0^^0;4^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1.N) X
"^DD",810.3,810.331,1,3)
Type a number between 0 and 99999999, 0 Decimal Digits
"^DD",810.3,810.331,1,21,0)
^^2^2^3021011^^
"^DD",810.3,810.331,1,21,1,0)
This is the count of findings for all patients in the patient list with 
"^DD",810.3,810.331,1,21,2,0)
this primary station.
"^DD",810.3,810.331,1,"DT")
3021011
"^DD",810.3,810.331,2,0)
APPLICABLE COUNT^NJ8,0^^0;5^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1.N) X
"^DD",810.3,810.331,2,3)
Type a number between 0 and 99999999, 0 Decimal Digits
"^DD",810.3,810.331,2,21,0)
^^2^2^3021011^
"^DD",810.3,810.331,2,21,1,0)
This is the count of findings for all patients in the patient list with 
"^DD",810.3,810.331,2,21,2,0)
this primary station for whom the reminder is applicable.
"^DD",810.3,810.331,2,"DT")
3021011
"^DD",810.3,810.331,3,0)
NOT APPLICABLE COUNT^NJ8,0^^0;6^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1.N) X
"^DD",810.3,810.331,3,3)
Type a number between 0 and 99999999, 0 Decimal Digits
"^DD",810.3,810.331,3,21,0)
^^2^2^3021011^
"^DD",810.3,810.331,3,21,1,0)
This is the count of findings for all patients in the patient list with 
"^DD",810.3,810.331,3,21,2,0)
this primary station for whom the reminder is not applicable.
"^DD",810.3,810.331,3,"DT")
3021011
"^DD",810.3,810.331,4,0)
DUE COUNT^NJ8,0^^0;7^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1.N) X
"^DD",810.3,810.331,4,3)
Type a number between 0 and 99999999, 0 Decimal Digits
"^DD",810.3,810.331,4,21,0)
^^2^2^3021011^
"^DD",810.3,810.331,4,21,1,0)
This is the count of findings for all patients in the patient list with 
"^DD",810.3,810.331,4,21,2,0)
this primary station for whom the reminder is applicable and due.
"^DD",810.3,810.331,4,"DT")
3021011
"^DD",810.3,810.331,5,0)
NOT DUE COUNT^NJ8,0^^0;8^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1.N) X
"^DD",810.3,810.331,5,3)
Type a number between 0 and 99999999, 0 Decimal Digits
"^DD",810.3,810.331,5,21,0)
^^2^2^3021011^
"^DD",810.3,810.331,5,21,1,0)
This is the count of findings for all patients in the patient list with 
"^DD",810.3,810.331,5,21,2,0)
this primary station for whom the reminder is applicable and not due.
"^DD",810.3,810.331,5,"DT")
3021011
"^DD",810.3,810.331,6,0)
UNIQUE APPLICABLE PATIENT LIST^810.3316PA^^1;0
"^DD",810.3,810.331,6,"DT")
3050930
"^DD",810.3,810.3316,0)
UNIQUE APPLICABLE PATIENT LIST SUB-FIELD^^.01^1
"^DD",810.3,810.3316,0,"DT")
3050926
"^DD",810.3,810.3316,0,"IX","B",810.3316,.01)

"^DD",810.3,810.3316,0,"NM","UNIQUE APPLICABLE PATIENT LIST")

"^DD",810.3,810.3316,0,"UP")
810.331
"^DD",810.3,810.3316,.01,0)
UNIQUE APPLICABLE PATIENT^P2'^DPT(^0;1^Q
"^DD",810.3,810.3316,.01,1,0)
^.1
"^DD",810.3,810.3316,.01,1,1,0)
810.3316^B
"^DD",810.3,810.3316,.01,1,1,1)
S ^PXRMXT(810.3,DA(3),3,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",810.3,810.3316,.01,1,1,2)
K ^PXRMXT(810.3,DA(3),3,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",810.3,810.3316,.01,21,0)
^^6^6^3051017^
"^DD",810.3,810.3316,.01,21,1,0)
This multiple stores a list of patients from the patient list who have an 
"^DD",810.3,810.3316,.01,21,2,0)
applicable status for the extract finding evaluation. The applicable 
"^DD",810.3,810.3316,.01,21,3,0)
patient list is a subset of the patients on the patient list who have an 
"^DD",810.3,810.3316,.01,21,4,0)
applicable result to the finding item in the extract, for example from 
"^DD",810.3,810.3316,.01,21,5,0)
the list of patients in the patients list which patients have a LDL value 
"^DD",810.3,810.3316,.01,21,6,0)
greater then 120.
"^DD",810.3,810.3316,.01,"DT")
3051017
"^DD",810.3,810.36,0)
HL7 MESSAGE ID SUB-FIELD^^.03^3
"^DD",810.3,810.36,0,"DT")
3051121
"^DD",810.3,810.36,0,"IX","B",5,.01)

"^DD",810.3,810.36,0,"IX","B",810.36,.01)

"^DD",810.3,810.36,0,"NM","HL7 MESSAGE ID")

"^DD",810.3,810.36,0,"UP")
810.3
"^DD",810.3,810.36,.01,0)
HL7 MESSAGE ID^F^^0;1^K:$L(X)>20!($L(X)<3) X
"^DD",810.3,810.36,.01,1,0)
^.1
"^DD",810.3,810.36,.01,1,1,0)
810.36^B
"^DD",810.3,810.36,.01,1,1,1)
S ^PXRMXT(810.3,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",810.3,810.36,.01,1,1,2)
K ^PXRMXT(810.3,DA(1),5,"B",$E(X,1,30),DA)
"^DD",810.3,810.36,.01,1,2,0)
810.3^AHLID
"^DD",810.3,810.36,.01,1,2,1)
S ^PXRMXT(810.3,"AHLID",$E(X,1,30),DA(1),DA)=""
"^DD",810.3,810.36,.01,1,2,2)
K ^PXRMXT(810.3,"AHLID",$E(X,1,30),DA(1),DA)
"^DD",810.3,810.36,.01,1,2,"%D",0)
^^2^2^3060118^
"^DD",810.3,810.36,.01,1,2,"%D",1,0)
This crossreference will index the hl7 message id numbers for each extract.
"^DD",810.3,810.36,.01,1,2,"%D",2,0)

"^DD",810.3,810.36,.01,1,2,"DT")
3060118
"^DD",810.3,810.36,.01,3)
Answer must be 3-20 characters in length
"^DD",810.3,810.36,.01,21,0)
^^1^1^3040819^
"^DD",810.3,810.36,.01,21,1,0)
This is the HL7 id for the HL7 message that was transmitted to Austin.
"^DD",810.3,810.36,.01,"DT")
3060118
"^DD",810.3,810.36,.02,0)
DATE CREATED^D^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",810.3,810.36,.02,3)
(No range limit on date)
"^DD",810.3,810.36,.02,21,0)
^^1^1^3020425^
"^DD",810.3,810.36,.02,21,1,0)
This is the date/time the HL7 message was created. 
"^DD",810.3,810.36,.02,"DT")
3020425
"^DD",810.3,810.36,.03,0)
MESSAGE STATUS^F^^0;3^K:$L(X)>45!($L(X)<3) X
"^DD",810.3,810.36,.03,3)
Answer must be 3-45 characters in length
"^DD",810.3,810.36,.03,21,0)
^^2^2^3051121^^^^
"^DD",810.3,810.36,.03,21,1,0)
This field contains the status of the message.
"^DD",810.3,810.36,.03,21,2,0)
The status is determined by the ACK messages that are returned from the Austin Automation Center. It should state that the message is waiting to be processed or that it has been processed.
"^DD",810.3,810.36,.03,"DT")
3051121
"^DD",810.4,810.4,0)
FIELD^^9^12
"^DD",810.4,810.4,0,"DDA")
N
"^DD",810.4,810.4,0,"DT")
3050505
"^DD",810.4,810.4,0,"ID",.03)
W "   ",@("$P($P($C(59)_$S($D(^DD(810.4,.03,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
"^DD",810.4,810.4,0,"IX","AD",810.41,.02)

"^DD",810.4,810.4,0,"NM","REMINDER LIST RULE")

"^DD",810.4,810.4,0,"PT",810.21,.02)

"^DD",810.4,810.4,0,"PT",810.41,.02)

"^DD",810.4,810.4,0,"PT",810.5,.06)

"^DD",810.4,810.4,0,"VRPK")
PXRM
"^DD",810.4,810.4,.01,0)
NAME^RF^^0;1^K:$L(X)>96!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,810.4)) X
"^DD",810.4,810.4,.01,1,0)
^.1^^0
"^DD",810.4,810.4,.01,3)
Answer must be 3-96 characters in length
"^DD",810.4,810.4,.01,21,0)
^^3^3^3021010^^
"^DD",810.4,810.4,.01,21,1,0)
This is the name of the list rule.
"^DD",810.4,810.4,.01,21,2,0)
 
"^DD",810.4,810.4,.01,21,3,0)
National list rules are prefixed VA- and class national. 
"^DD",810.4,810.4,.01,"DEL",1,0)
I +$G(PXRMEXCH)=0,$D(^PXRMD(810.4,"AD",DA)) D EN^DDIOL($C(7)_"IN USE - CANNOT BE DELETED")
"^DD",810.4,810.4,.01,"DT")
3021010
"^DD",810.4,810.4,.02,0)
SHORT DESCRIPTION^F^^0;2^K:$L(X)>64!($L(X)<3) X
"^DD",810.4,810.4,.02,3)
Answer must be 3-64 characters in length.
"^DD",810.4,810.4,.02,21,0)
^^1^1^3021010^
"^DD",810.4,810.4,.02,21,1,0)
This is a short description of the list rule.
"^DD",810.4,810.4,.02,"DT")
3021010
"^DD",810.4,810.4,.03,0)
TYPE^RS^1:FINDING RULE;3:RULE SET;5:PATIENT LIST;2:REMINDER RULE;^0;3^Q
"^DD",810.4,810.4,.03,21,0)
^.001^3^3^3050117^^
"^DD",810.4,810.4,.03,21,1,0)
There are three types of rules in the file. Patient List Rules define an
"^DD",810.4,810.4,.03,21,2,0)
existing patient list. Finding Rules define reminder terms. Rule Sets
"^DD",810.4,810.4,.03,21,3,0)
contain both Finding and Patient List rules.
"^DD",810.4,810.4,.03,"DT")
3041129
"^DD",810.4,810.4,1,0)
REMINDER TERM^P811.5'^PXRMD(811.5,^0;7^Q
"^DD",810.4,810.4,1,21,0)
^^2^2^3021010^
"^DD",810.4,810.4,1,21,1,0)
Finding rules (type 1) use a reminder term (#811.5) to select patients 
"^DD",810.4,810.4,1,21,2,0)
via the reminder package indexes.
"^DD",810.4,810.4,1,"DT")
3021010
"^DD",810.4,810.4,2,0)
LIST RULE BEGINNING DATE/TIME^FX^^0;4^K:(($L(X)<1)!($L(X)>20)!('$$DATECHK^PXRMRUL1(X))) X
"^DD",810.4,810.4,2,3)
Enter an exact date, symbolic date, or 0 (zero) for no beginning date. Symbolic dates can use "T" to represent the build end date or "BDT" for build beginning date.
"^DD",810.4,810.4,2,21,0)
^^51^51^3060526^
"^DD",810.4,810.4,2,21,1,0)
Enter an exact date, symbolic date, or 0 (zero) for no beginning date. 
"^DD",810.4,810.4,2,21,2,0)
Symbolic dates can use "T" to represent the build end date or "BDT"
"^DD",810.4,810.4,2,21,3,0)
for build beginning date.
"^DD",810.4,810.4,2,21,4,0)
 
"^DD",810.4,810.4,2,21,5,0)
This field is the beginning date/time (BDT) to use when searching for  
"^DD",810.4,810.4,2,21,6,0)
findings that match a List Finding Rule. In order for patient data to
"^DD",810.4,810.4,2,21,7,0)
meet the List Finding Rule criteria, the findings must have been
"^DD",810.4,810.4,2,21,8,0)
documented on or after the BDT.
"^DD",810.4,810.4,2,21,9,0)
 
"^DD",810.4,810.4,2,21,10,0)
Reminder Rules and Patient List Rules do not use the Beginning date/time
"^DD",810.4,810.4,2,21,11,0)
field. 
"^DD",810.4,810.4,2,21,12,0)
 
"^DD",810.4,810.4,2,21,13,0)
The BDT defined for a finding rule will be overridden if the term in the
"^DD",810.4,810.4,2,21,14,0)
finding rule has a mapped finding with a BDT or Ending Date/Time (EDT).
"^DD",810.4,810.4,2,21,15,0)
 
"^DD",810.4,810.4,2,21,16,0)
The rules for overriding date ranges is represented by the following
"^DD",810.4,810.4,2,21,17,0)
equation, where "<" should be interpreted as "is overridden by":
"^DD",810.4,810.4,2,21,18,0)
 
"^DD",810.4,810.4,2,21,19,0)
  Build < rule set sequence < list rule < term's finding
"^DD",810.4,810.4,2,21,20,0)
 
"^DD",810.4,810.4,2,21,21,0)
If the BDT and EDT are not defined on the list rule set sequence, nor
"^DD",810.4,810.4,2,21,22,0)
the list finding rule, nor the Reminder Term's mapped finding, then the
"^DD",810.4,810.4,2,21,23,0)
patient list tools will use the List Build's date range to find a
"^DD",810.4,810.4,2,21,24,0)
match on findings. The List Build date range is the date range
"^DD",810.4,810.4,2,21,25,0)
specified by the user when the list build action is selected. The list
"^DD",810.4,810.4,2,21,26,0)
build date range is the Extract reporting period if an extract is
"^DD",810.4,810.4,2,21,27,0)
being run.
"^DD",810.4,810.4,2,21,28,0)
 
"^DD",810.4,810.4,2,21,29,0)
If no date range limits should be used to match findings for this
"^DD",810.4,810.4,2,21,30,0)
finding rule, the finding rule needs to be defined with a zero in the
"^DD",810.4,810.4,2,21,31,0)
BDT or EDT fields, or both. The term referenced in the list rule
"^DD",810.4,810.4,2,21,32,0)
should not have BDT and EDT fields defined. If zero is defined in the
"^DD",810.4,810.4,2,21,33,0)
BDT, and the EDT is left blank, the list build tools will assume both
"^DD",810.4,810.4,2,21,34,0)
BDT and EDT should not have date range limits, and vice versa if EDT
"^DD",810.4,810.4,2,21,35,0)
has the 0 and the BDT is blank.
"^DD",810.4,810.4,2,21,36,0)
 
"^DD",810.4,810.4,2,21,37,0)
The use of "T" in the finding rule BDT field will always represent the
"^DD",810.4,810.4,2,21,38,0)
ending date/time specified for the list build process or the extract
"^DD",810.4,810.4,2,21,39,0)
reporting period, depending on whether a reminder patient list or
"^DD",810.4,810.4,2,21,40,0)
extract option is being used to build the list. For example, T-1Y is
"^DD",810.4,810.4,2,21,41,0)
one year prior to the list build's ending date/time.
"^DD",810.4,810.4,2,21,42,0)
 
"^DD",810.4,810.4,2,21,43,0)
"BDT" may also be used in the BDT or EDT fields and represents the
"^DD",810.4,810.4,2,21,44,0)
beginning date/time specified by the user processing the list build
"^DD",810.4,810.4,2,21,45,0)
action. For example, BDT-5Y creates a beginning date for the list
"^DD",810.4,810.4,2,21,46,0)
rule that is five years prior to the list build's beginning date/time.
"^DD",810.4,810.4,2,21,47,0)
 
"^DD",810.4,810.4,2,21,48,0)
A fixed date may be defined in the BDT (e.g. 09/11/02).
"^DD",810.4,810.4,2,21,49,0)
 
"^DD",810.4,810.4,2,21,50,0)
If the beginning date/time is later than the ending date/time, then no
"^DD",810.4,810.4,2,21,51,0)
finding matches will be found.
"^DD",810.4,810.4,2,"DT")
3060504
"^DD",810.4,810.4,3,0)
LIST RULE ENDING DATE/TIME^FX^^0;5^K:(($L(X)<1)!($L(X)>20)!('$$DATECHK^PXRMRUL1(X))) X
"^DD",810.4,810.4,3,3)
Enter an exact date, symbolic date, or 0 (zero) for no ending date. Symbolic dates can use "T" to represent the build end date or "BDT" for build beginning date.
"^DD",810.4,810.4,3,21,0)
^.001^49^49^3060526^^
"^DD",810.4,810.4,3,21,1,0)
Enter an exact date, symbolic date, or 0 (zero) for no ending date.
"^DD",810.4,810.4,3,21,2,0)
Symbolic dates can use "T" to represent the build end date, or "BDT"
"^DD",810.4,810.4,3,21,3,0)
for build beginning date.
"^DD",810.4,810.4,3,21,4,0)
 
"^DD",810.4,810.4,3,21,5,0)
This field is the ending date/time to use when searching for findings
"^DD",810.4,810.4,3,21,6,0)
that match this list rule criteria. Findings must have been
"^DD",810.4,810.4,3,21,7,0)
documented before the ending date/time. If no time is included,
"^DD",810.4,810.4,3,21,8,0)
11:59PM is assumed to be the time.
"^DD",810.4,810.4,3,21,9,0)
 
"^DD",810.4,810.4,3,21,10,0)
The rules for overriding date ranges is represented by the following
"^DD",810.4,810.4,3,21,11,0)
equation, where "<" should be interpreted as "is overridden by":
"^DD",810.4,810.4,3,21,12,0)
 
"^DD",810.4,810.4,3,21,13,0)
  Build < rule set sequence < list rule < term's finding
"^DD",810.4,810.4,3,21,14,0)
 
"^DD",810.4,810.4,3,21,15,0)
The Ending Date/Time (EDT) defined for this list rule will be
"^DD",810.4,810.4,3,21,16,0)
overridden if the term in the list rule has a mapped finding with a
"^DD",810.4,810.4,3,21,17,0)
Beginning Date/Time (BDT) or Ending Date/Time (EDT).
"^DD",810.4,810.4,3,21,18,0)
 
"^DD",810.4,810.4,3,21,19,0)
If the BDT and EDT are not defined on the list rule, nor the rule set
"^DD",810.4,810.4,3,21,20,0)
sequence, nor the Reminder Term's mapped finding, then the patient
"^DD",810.4,810.4,3,21,21,0)
list tools will use the List Build date range to find a match on
"^DD",810.4,810.4,3,21,22,0)
findings. The List Build date range is the date range specified by the
"^DD",810.4,810.4,3,21,23,0)
user when the list build action is selected. The list build date range
"^DD",810.4,810.4,3,21,24,0)
is the Extract reporting period if an extract is being run.
"^DD",810.4,810.4,3,21,25,0)
 
"^DD",810.4,810.4,3,21,26,0)
If no date range limits should be used to match findings for this list
"^DD",810.4,810.4,3,21,27,0)
rule, the list rule needs to be defined with a zero in the BDT or EDT
"^DD",810.4,810.4,3,21,28,0)
fields, or both. The term referenced in the list rule should not have
"^DD",810.4,810.4,3,21,29,0)
BDT and EDT fields defined. If zero is defined in the list rule BDT,
"^DD",810.4,810.4,3,21,30,0)
and the EDT is left blank, the list build tools will assume both BDT
"^DD",810.4,810.4,3,21,31,0)
and EDT should not have date range limits, and vice versa if EDT has
"^DD",810.4,810.4,3,21,32,0)
the 0 and the BDT is blank.
"^DD",810.4,810.4,3,21,33,0)
 
"^DD",810.4,810.4,3,21,34,0)
The use of "T" in the List rule EDT field will always represent the
"^DD",810.4,810.4,3,21,35,0)
ending date/time specified for the list build process or the extract
"^DD",810.4,810.4,3,21,36,0)
reporting period, depending on whether a reminder patient list or
"^DD",810.4,810.4,3,21,37,0)
extract option is being used to build the list. T-1Y is one year prior
"^DD",810.4,810.4,3,21,38,0)
to the list build's ending date/time.
"^DD",810.4,810.4,3,21,39,0)
 
"^DD",810.4,810.4,3,21,40,0)
"BDT" may also be used in the BDT or EDT fields and represents the
"^DD",810.4,810.4,3,21,41,0)
beginning date/time specified by the user processing the list build
"^DD",810.4,810.4,3,21,42,0)
action. For example "BDT-5Y" in the list rule beginning date, and
"^DD",810.4,810.4,3,21,43,0)
"BDT" in the list rule ending date will create a five year date range
"^DD",810.4,810.4,3,21,44,0)
ending on the list build's beginning date/time.
"^DD",810.4,810.4,3,21,45,0)
 
"^DD",810.4,810.4,3,21,46,0)
A fixed date may also be defined in the EDT (e.g. 09/11/02).
"^DD",810.4,810.4,3,21,47,0)
 
"^DD",810.4,810.4,3,21,48,0)
If the ending date/time is earlier than the beginning date/time, then
"^DD",810.4,810.4,3,21,49,0)
no finding matches will be found.
"^DD",810.4,810.4,3,"DT")
3060526
"^DD",810.4,810.4,4,0)
USE EXISTING PT LIST^P810.5'^PXRMXP(810.5,^0;8^Q
"^DD",810.4,810.4,4,3)
Select an existing reminder patient list from the Reminder Patient List file.
"^DD",810.4,810.4,4,21,0)
^^24^24^3060526^
"^DD",810.4,810.4,4,21,1,0)
This field is used by Patient List rules to identify an existing
"^DD",810.4,810.4,4,21,2,0)
patient list in the Reminder Patient List file.  The existing 
"^DD",810.4,810.4,4,21,3,0)
patient list is used as the patient source to perform the ADD, 
"^DD",810.4,810.4,4,21,4,0)
SELECT, or REMOVE operation on the list rule.  The existing patient
"^DD",810.4,810.4,4,21,5,0)
list is used to modify the temporary patient list built during
"^DD",810.4,810.4,4,21,6,0)
list build processing.
"^DD",810.4,810.4,4,21,7,0)
 
"^DD",810.4,810.4,4,21,8,0)
  For the  ADD operation the patients in the source list will be
"^DD",810.4,810.4,4,21,9,0)
  added to the temporary patient list.
"^DD",810.4,810.4,4,21,10,0)
 
"^DD",810.4,810.4,4,21,11,0)
  For the SELECT operation, the patients in the source list will be 
"^DD",810.4,810.4,4,21,12,0)
  compared to the temporary patient list.  Patient's in the
"^DD",810.4,810.4,4,21,13,0)
  temporary list that are not in the source list will be removed
"^DD",810.4,810.4,4,21,14,0)
  from the temporary patient list.
"^DD",810.4,810.4,4,21,15,0)
 
"^DD",810.4,810.4,4,21,16,0)
  For the REMOVE operation, the patients in the source list, that
"^DD",810.4,810.4,4,21,17,0)
  match a patient in the temporary patient list will be removed
"^DD",810.4,810.4,4,21,18,0)
  from the temporary patient list.
"^DD",810.4,810.4,4,21,19,0)
 
"^DD",810.4,810.4,4,21,20,0)
  If the USE EXISTING PT LIST and USE EXTRACT PT LIST NAMED field
"^DD",810.4,810.4,4,21,21,0)
  are both defined in the list rule, the USE EXTRACT PT LIST NAMED
"^DD",810.4,810.4,4,21,22,0)
  will be used as the patient source for extract processing,
"^DD",810.4,810.4,4,21,23,0)
  and the USE EXISTING PT LIST will be used when the build
"^DD",810.4,810.4,4,21,24,0)
  processing is started from the Reminder Patient List option.
"^DD",810.4,810.4,4,"DT")
3060526
"^DD",810.4,810.4,7,0)
USE EXTRACT PT LIST NAMED^F^^1;1^K:$L(X)>96!($L(X)<1) X
"^DD",810.4,810.4,7,3)
Enter the name of the extract patient list defined in the extract definition.
"^DD",810.4,810.4,7,21,0)
^^41^41^3060526^
"^DD",810.4,810.4,7,21,1,0)
This is a free-text field that contains the name of the patient list
"^DD",810.4,810.4,7,21,2,0)
to use when processing this list rule during an extract run. The
"^DD",810.4,810.4,7,21,3,0)
patient list has not been created at the time the list rule is
"^DD",810.4,810.4,7,21,4,0)
defined. In contrast, the USE EXISTING PT LIST field is used by
"^DD",810.4,810.4,7,21,5,0)
patient list rule tools to reference a patient list already
"^DD",810.4,810.4,7,21,6,0)
existing in the REMINDER PATIENT LIST file.
"^DD",810.4,810.4,7,21,7,0)
 
"^DD",810.4,810.4,7,21,8,0)
The name specified in the USE EXTRACT PT LIST NAMED will contain
"^DD",810.4,810.4,7,21,9,0)
'yyyy' for year and 'pnn' for reporting period. The nn is either
"^DD",810.4,810.4,7,21,10,0)
the month (01-12) or calendar quarter (01-04), and p is either M
"^DD",810.4,810.4,7,21,11,0)
for monthly, Q for quarterly, or Y for yearly.
"^DD",810.4,810.4,7,21,12,0)
 
"^DD",810.4,810.4,7,21,13,0)
When an extract is run for a particular reporting period, the
"^DD",810.4,810.4,7,21,14,0)
extract tool will use the USE EXTRACT PT LIST NAMED to find the
"^DD",810.4,810.4,7,21,15,0)
patient list matching the name and then use this patient list to
"^DD",810.4,810.4,7,21,16,0)
create the starting temporary patient list. The starting temporary
"^DD",810.4,810.4,7,21,17,0)
patient list will be modified by add, select, and delete operations
"^DD",810.4,810.4,7,21,18,0)
defined in the remaining list rules defined in the rule set.
"^DD",810.4,810.4,7,21,19,0)
 
"^DD",810.4,810.4,7,21,20,0)
The same extract patient list name is also named in the REMINDER
"^DD",810.4,810.4,7,21,21,0)
EXTRACT DEFINITION file (#810.2). The extract definition is used to
"^DD",810.4,810.4,7,21,22,0)
create the extract patient list during an extract run. The 'yyyy'
"^DD",810.4,810.4,7,21,23,0)
and 'pnn' ensures the extract process for the reporting year and
"^DD",810.4,810.4,7,21,24,0)
period consistently uses the appropriate extract patient list
"^DD",810.4,810.4,7,21,25,0)
created for the reporting period.
"^DD",810.4,810.4,7,21,26,0)
 
"^DD",810.4,810.4,7,21,27,0)
Example: The patient list 'VA-*IHD QUERI yyyy pnn PATIENTS WITH
"^DD",810.4,810.4,7,21,28,0)
QUALIFYING VISIT' is created during 'VA-IHD QUERI' extract
"^DD",810.4,810.4,7,21,29,0)
processing by a rule set defined in the extract definition. Then a
"^DD",810.4,810.4,7,21,30,0)
subsequent rule set defined in the 'VA-IHD QUERI' extract 
"^DD",810.4,810.4,7,21,31,0)
definition references a REMINDER LIST RULE entry with the same
"^DD",810.4,810.4,7,21,32,0)
extract patient list name in the USE EXTRACT PT LIST NAMED field.
"^DD",810.4,810.4,7,21,33,0)
During the extract run, the named list will be used to find the
"^DD",810.4,810.4,7,21,34,0)
patient list created during the extract run in process.  This list
"^DD",810.4,810.4,7,21,35,0)
is used with the ADD operation in the rule set to create the
"^DD",810.4,810.4,7,21,36,0)
temporary patient list to process the remaining rules in the rule
"^DD",810.4,810.4,7,21,37,0)
set. In this example, the temorary patient list is  modified to
"^DD",810.4,810.4,7,21,38,0)
include patients that have both a QUALIFYING VISIT and an ANCHOR
"^DD",810.4,810.4,7,21,39,0)
visit, creating a new patient list, 'VA-*IHD QUERI yyyy nn PATIENTS
"^DD",810.4,810.4,7,21,40,0)
WITH QUALIFYING AND ANCHOR VISIT'. The new patient list created by the 
"^DD",810.4,810.4,7,21,41,0)
rule set processing is defined in the extract definition.
"^DD",810.4,810.4,7,"DT")
3060526
"^DD",810.4,810.4,9,0)
REMINDER DEFINITION^*P811.9'^PXD(811.9,^0;10^S DIC("S")="I $P($G(^(100)),U,4)[""L""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",810.4,810.4,9,3)
Enter a Reminder Definition that can be used to build a patient list.
"^DD",810.4,810.4,9,12)
The Reminder Definition must have an "L" for patient list in its USAGE field.
"^DD",810.4,810.4,9,12.1)
S DIC("S")="I $P($G(^(100)),U,4)[""L"""
"^DD",810.4,810.4,9,21,0)
^.001^4^4^3060615^^^^
"^DD",810.4,810.4,9,21,1,0)
This is a pointer to the Reminder Definition file #811.9. Reminders
"^DD",810.4,810.4,9,21,2,0)
used to build patient lists must have an "L" in their USAGE field.
"^DD",810.4,810.4,9,21,3,0)

"^DD",810.4,810.4,9,21,4,0)

"^DD",810.4,810.4,9,"DT")
3050121
"^DD",810.4,810.4,30,0)
SEQUENCE^810.41I^^30;0
"^DD",810.4,810.4,30,"DT")
3030811
"^DD",810.4,810.4,100,0)
CLASS^RS^N:NATIONAL;V:VISN;L:LOCAL;^100;1^Q
"^DD",810.4,810.4,100,3)
Enter the class,
"^DD",810.4,810.4,100,21,0)
^.001^1^1^3050121^^
"^DD",810.4,810.4,100,21,1,0)
This is the CLASS of the rule. National rules cannot be edited.
"^DD",810.4,810.4,100,"DT")
3020702
"^DD",810.4,810.4,110,0)
EDIT HISTORY^810.42D^^110;0
"^DD",810.4,810.4,110,21,0)
^.001^1^1^3010502^^
"^DD",810.4,810.4,110,21,1,0)
This multiple is used to record a history of changes to the rule.
"^DD",810.4,810.41,0)
SEQUENCE SUB-FIELD^^3^5
"^DD",810.4,810.41,0,"DT")
3050505
"^DD",810.4,810.41,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^PXRM(810.4,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(810.4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",810.4,810.41,0,"IX","B",810.41,.01)

"^DD",810.4,810.41,0,"IX","D",810.41,.02)

"^DD",810.4,810.41,0,"NM","SEQUENCE")

"^DD",810.4,810.41,0,"UP")
810.4
"^DD",810.4,810.41,.01,0)
SEQUENCE^MRFX^^0;1^K:$L(X)'=3!(+X=0) X I $G(X)]"" K:$D(^PXRM(810.4,DA(1),30,"B",X)) X
"^DD",810.4,810.41,.01,1,0)
^.1
"^DD",810.4,810.41,.01,1,1,0)
810.41^B
"^DD",810.4,810.41,.01,1,1,1)
S ^PXRM(810.4,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",810.4,810.41,.01,1,1,2)
K ^PXRM(810.4,DA(1),30,"B",$E(X,1,30),DA)
"^DD",810.4,810.41,.01,3)
Enter unique sequence 001 - 999
"^DD",810.4,810.41,.01,21,0)
^.001^8^8^3060815^^^
"^DD",810.4,810.41,.01,21,1,0)
A rule set is defined with one or more  sequences of list rules that 
"^DD",810.4,810.41,.01,21,2,0)
indicate the sequence the list rules should be processed when the 
"^DD",810.4,810.41,.01,21,3,0)
patient list is created. This is the sequence number associated with the
"^DD",810.4,810.41,.01,21,4,0)
list rule.
"^DD",810.4,810.41,.01,21,5,0)
 
"^DD",810.4,810.41,.01,21,6,0)
The patient list created while processing each sequential list rule is
"^DD",810.4,810.41,.01,21,7,0)
stored in ^TMP("PXRMRULE"_sequence,$J).  After the rule set is
"^DD",810.4,810.41,.01,21,8,0)
processed, the patient list is stored in the Reminder Patient List file.
"^DD",810.4,810.41,.01,"DT")
3030811
"^DD",810.4,810.41,.02,0)
LIST RULE^*P810.4^PXRM(810.4,^0;2^D SCREEN^PXRMLRED D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",810.4,810.41,.02,1,0)
^.1
"^DD",810.4,810.41,.02,1,1,0)
810.4^AD
"^DD",810.4,810.41,.02,1,1,1)
S ^PXRM(810.4,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",810.4,810.41,.02,1,1,2)
K ^PXRM(810.4,"AD",$E(X,1,30),DA(1),DA)
"^DD",810.4,810.41,.02,1,1,"%D",0)
^^1^1^3020703^
"^DD",810.4,810.41,.02,1,1,"%D",1,0)
This index is used to determine which rule sets a list rule belongs to.
"^DD",810.4,810.41,.02,1,1,"DT")
3020703
"^DD",810.4,810.41,.02,1,2,0)
810.41^D
"^DD",810.4,810.41,.02,1,2,1)
S ^PXRM(810.4,DA(1),30,"D",$E(X,1,30),DA)=""
"^DD",810.4,810.41,.02,1,2,2)
K ^PXRM(810.4,DA(1),30,"D",$E(X,1,30),DA)
"^DD",810.4,810.41,.02,1,2,"DT")
3020703
"^DD",810.4,810.41,.02,12)
RULE SETS MAY NOT CONTAIN OTHER RULE SETS
"^DD",810.4,810.41,.02,12.1)
D SCREEN^PXRMLRED
"^DD",810.4,810.41,.02,21,0)
^^1^1^3020424^
"^DD",810.4,810.41,.02,21,1,0)
This is the finding rule to be used to select patients.
"^DD",810.4,810.41,.02,"DT")
3020703
"^DD",810.4,810.41,.03,0)
OPERATION^RS^A:ADD PATIENT;F:INSERT FINDING;R:REMOVE;S:SELECT;^0;3^Q
"^DD",810.4,810.41,.03,21,0)
^.001^20^20^3040521^^
"^DD",810.4,810.41,.03,21,1,0)
This is the condition used in processing the sequence/finding rule. Each 
"^DD",810.4,810.41,.03,21,2,0)
processing step will have a start and end list, a finding rule and an
"^DD",810.4,810.41,.03,21,3,0)
operation
"^DD",810.4,810.41,.03,21,4,0)
 
"^DD",810.4,810.41,.03,21,5,0)
The possible operations are:
"^DD",810.4,810.41,.03,21,6,0)
 
"^DD",810.4,810.41,.03,21,7,0)
ADD    - Patients with findings in the rule are added to the start list to
"^DD",810.4,810.41,.03,21,8,0)
create the end list.
"^DD",810.4,810.41,.03,21,9,0)
 
"^DD",810.4,810.41,.03,21,10,0)
REMOVE - Patients with findings in the rule are removed from the start 
"^DD",810.4,810.41,.03,21,11,0)
list to create the end list.
"^DD",810.4,810.41,.03,21,12,0)
 
"^DD",810.4,810.41,.03,21,13,0)
SELECT - Patients without findings in the rule are removed from the start 
"^DD",810.4,810.41,.03,21,14,0)
list to create the end list.
"^DD",810.4,810.41,.03,21,15,0)
 
"^DD",810.4,810.41,.03,21,16,0)
The end list is always stored in ^TMP("PXRMRULE"_sequence,$J). The start 
"^DD",810.4,810.41,.03,21,17,0)
list may be the end list from another finding rule in the rule set or, 
"^DD",810.4,810.41,.03,21,18,0)
alternatively, may be a patient list (#810.5).
"^DD",810.4,810.41,.03,21,19,0)
 
"^DD",810.4,810.41,.03,21,20,0)
Patient lists may be merged using the ADD operation.
"^DD",810.4,810.41,.03,"DT")
3040521
"^DD",810.4,810.41,2,0)
SEQUENCE BEGINNING DATE/TIME^FX^^1;1^K:(($L(X)<1)!($L(X)>20)!('$$DATECHK^PXRMRUL1(X))) X
"^DD",810.4,810.41,2,3)
Answer must be 1-20 characters in length.
"^DD",810.4,810.41,2,21,0)
^^48^48^3060524^
"^DD",810.4,810.41,2,21,1,0)
This field is the beginning date/time (BDT) to use when searching for  
"^DD",810.4,810.41,2,21,2,0)
findings that match the rule set sequence criteria.  In order for 
"^DD",810.4,810.41,2,21,3,0)
patient data to meet the rule set sequence criteria, the findings must 
"^DD",810.4,810.41,2,21,4,0)
have been documented on or after the beginning date/time.
"^DD",810.4,810.41,2,21,5,0)
 
"^DD",810.4,810.41,2,21,6,0)
The rules for overriding date ranges can be defined with the following
"^DD",810.4,810.41,2,21,7,0)
equation, where "<" should be interpreted as "is overridden by":
"^DD",810.4,810.41,2,21,8,0)
 
"^DD",810.4,810.41,2,21,9,0)
  List Build < rule set sequence < list rule < term's finding
"^DD",810.4,810.41,2,21,10,0)
 
"^DD",810.4,810.41,2,21,11,0)
The Beginning Date/Time (BDT) defined for a rule set sequence will be
"^DD",810.4,810.41,2,21,12,0)
overridden if the finding list rule, or term in the finding list rule
"^DD",810.4,810.41,2,21,13,0)
has a mapped finding with a Beginning Date/Time (BDT) or Ending
"^DD",810.4,810.41,2,21,14,0)
Date/Time (EDT).
"^DD",810.4,810.41,2,21,15,0)
 
"^DD",810.4,810.41,2,21,16,0)
If the BDT and EDT are not defined on the rule set sequence,
"^DD",810.4,810.41,2,21,17,0)
                       nor the list rule, 
"^DD",810.4,810.41,2,21,18,0)
                       nor the Reminder Term's mapped finding, 
"^DD",810.4,810.41,2,21,19,0)
then the patient list tools will use the List Build date range to 
"^DD",810.4,810.41,2,21,20,0)
find a match on findings. The List Build date range is the date
"^DD",810.4,810.41,2,21,21,0)
range specified by the user when the list build action is selected.
"^DD",810.4,810.41,2,21,22,0)
The list build date range is the extract reporting period if an 
"^DD",810.4,810.41,2,21,23,0)
extract is being run.
"^DD",810.4,810.41,2,21,24,0)
 
"^DD",810.4,810.41,2,21,25,0)
If no date range limits should be used to match findings for this 
"^DD",810.4,810.41,2,21,26,0)
rule set sequence, the rule set sequence (or its list rule) needs to 
"^DD",810.4,810.41,2,21,27,0)
be defined with a zero in the BDT and/or EDT fields. The term 
"^DD",810.4,810.41,2,21,28,0)
referenced in the list rule should not have BDT and EDT fields 
"^DD",810.4,810.41,2,21,29,0)
defined. If zero is defined in the BDT, and the EDT is left blank, 
"^DD",810.4,810.41,2,21,30,0)
the list build tools will assume both BDT and EDT should not have 
"^DD",810.4,810.41,2,21,31,0)
date range limits, and vice versa if EDT has the 0 and the BDT is 
"^DD",810.4,810.41,2,21,32,0)
blank. Both BDT and EDT may be set to zero.
"^DD",810.4,810.41,2,21,33,0)
 
"^DD",810.4,810.41,2,21,34,0)
The use of "T" in the rule set sequence BDT field will always 
"^DD",810.4,810.41,2,21,35,0)
represent the ending date/time specified for the list build process
"^DD",810.4,810.41,2,21,36,0)
or the extract reporting period, depending on whether a reminder
"^DD",810.4,810.41,2,21,37,0)
patient list or extract option is being used to build the list.
"^DD",810.4,810.41,2,21,38,0)
T-1Y is one year prior to the list build's ending date/time.
"^DD",810.4,810.41,2,21,39,0)
 
"^DD",810.4,810.41,2,21,40,0)
"BDT" may also be used in the BDT or EDT fields and represents the
"^DD",810.4,810.41,2,21,41,0)
beginning date/time specified by the user processing the list build
"^DD",810.4,810.41,2,21,42,0)
action.  BDT-5Y creates a beginning date for the rule set sequence
"^DD",810.4,810.41,2,21,43,0)
that is five years prior to the list build's beginning date/time.
"^DD",810.4,810.41,2,21,44,0)
 
"^DD",810.4,810.41,2,21,45,0)
A fixed date may also be defined in the BDT (e.g. 09/11/02).
"^DD",810.4,810.41,2,21,46,0)
 
"^DD",810.4,810.41,2,21,47,0)
If the beginning date/time is later than the ending date/time, then
"^DD",810.4,810.41,2,21,48,0)
no finding matches will be found.
"^DD",810.4,810.41,2,23,0)
0
"^DD",810.4,810.41,2,"DT")
3060504
"^DD",810.4,810.41,3,0)
SEQUENCE ENDING DATE/TIME^FX^^1;2^K:(($L(X)<1)!($L(X)>20)!('$$DATECHK^PXRMRUL1(X))) X
"^DD",810.4,810.41,3,3)
Answer must be 1-20 characters in length.
"^DD",810.4,810.41,3,21,0)
^^47^47^3060504^^
"^DD",810.4,810.41,3,21,1,0)
This field is the ending date/time to use when searching for findings that
"^DD",810.4,810.41,3,21,2,0)
match this rule set sequence criteria. Findings must have been documented
"^DD",810.4,810.41,3,21,3,0)
before the ending date/time.  If no time is included, 
"^DD",810.4,810.41,3,21,4,0)
11:59PM is assumed to be the time.
"^DD",810.4,810.41,3,21,5,0)

"^DD",810.4,810.41,3,21,6,0)
The rules for overriding date ranges can be defined with the following
"^DD",810.4,810.41,3,21,7,0)
equation, where "<" should be interpreted as "is overridden by":
"^DD",810.4,810.41,3,21,8,0)

"^DD",810.4,810.41,3,21,9,0)
List Build < rule set sequence < list rule < term's finding
"^DD",810.4,810.41,3,21,10,0)

"^DD",810.4,810.41,3,21,11,0)
The Ending Date/Time (EDT) defined for this rule set sequence will be
"^DD",810.4,810.41,3,21,12,0)
overridden if the list rule, or term referenced in the list rule has a mapped
"^DD",810.4,810.41,3,21,13,0)
finding with a Beginning Date/Time (BDT) or Ending Date/Time (EDT).
"^DD",810.4,810.41,3,21,14,0)

"^DD",810.4,810.41,3,21,15,0)
If the BDT and EDT are not defined on the rule set sequence, nor the list
"^DD",810.4,810.41,3,21,16,0)
rule, nor the Reminder Term's mapped finding, then the patient list tools will
"^DD",810.4,810.41,3,21,17,0)
use the List Build date range to find a match on findings. The List Build date
"^DD",810.4,810.41,3,21,18,0)
range is the date range specified by the user selecting the list build action.
"^DD",810.4,810.41,3,21,19,0)
The list build date range is the Extract reporting period if an extract is
"^DD",810.4,810.41,3,21,20,0)
being run.
"^DD",810.4,810.41,3,21,21,0)

"^DD",810.4,810.41,3,21,22,0)
If no date range limits should be used to match findings for this rule set
"^DD",810.4,810.41,3,21,23,0)
sequence, the rule set sequence needs to be defined with a zero in the BDT or
"^DD",810.4,810.41,3,21,24,0)
EDT fields, or both fields. Alternatively, the list build referenced by the
"^DD",810.4,810.41,3,21,25,0)
sequence can be defined with a zero in its BDT or EFDT fields. The term
"^DD",810.4,810.41,3,21,26,0)
referenced in the list rule should not have BDT and EDT fields defined. If
"^DD",810.4,810.41,3,21,27,0)
zero is defined in the rule set sequence or list rule BDT, and the EDT is left
"^DD",810.4,810.41,3,21,28,0)
blank, the list build tools will assume both BDT and EDT should not have date
"^DD",810.4,810.41,3,21,29,0)
range limits, and vice versa if EDT has the 0 and the BDT is blank.  
"^DD",810.4,810.41,3,21,30,0)

"^DD",810.4,810.41,3,21,31,0)
The use of "T" in the rule set sequence EDT field will always represent the
"^DD",810.4,810.41,3,21,32,0)
ending date/time specified for the list build process or the extract reporting
"^DD",810.4,810.41,3,21,33,0)
period, depending on whether a reminder patient list or extract option is
"^DD",810.4,810.41,3,21,34,0)
being used to build the list. T-1Y is one year prior to the list build's
"^DD",810.4,810.41,3,21,35,0)
ending date/time.
"^DD",810.4,810.41,3,21,36,0)

"^DD",810.4,810.41,3,21,37,0)
"BDT" may also be used in the BDT or EDT fields and represents the beginning
"^DD",810.4,810.41,3,21,38,0)
date/time specified by the user processing the list build action.  For example
"^DD",810.4,810.41,3,21,39,0)
BDT-5Y in the rule set sequence beginning date, and BDT in the list rule set
"^DD",810.4,810.41,3,21,40,0)
sequence ending date will create a five year date range ending on the list
"^DD",810.4,810.41,3,21,41,0)
build's beginning date/time.
"^DD",810.4,810.41,3,21,42,0)

"^DD",810.4,810.41,3,21,43,0)
A fixed date may also be defined in the EDT (e.g. 09/11/02).
"^DD",810.4,810.41,3,21,44,0)

"^DD",810.4,810.41,3,21,45,0)
If the ending date/time is earlier than the beginning date/time, then no
"^DD",810.4,810.41,3,21,46,0)
finding matches will be found.
"^DD",810.4,810.41,3,21,47,0)

"^DD",810.4,810.41,3,"DT")
3060504
"^DD",810.4,810.42,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",810.4,810.42,0,"DT")
3021011
"^DD",810.4,810.42,0,"IX","B",810.42,.01)

"^DD",810.4,810.42,0,"NM","EDIT HISTORY")

"^DD",810.4,810.42,0,"UP")
810.4
"^DD",810.4,810.42,.01,0)
EDIT DATE^DX^^0;1^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",810.4,810.42,.01,1,0)
^.1
"^DD",810.4,810.42,.01,1,1,0)
810.42^B
"^DD",810.4,810.42,.01,1,1,1)
S ^PXRM(810.4,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",810.4,810.42,.01,1,1,2)
K ^PXRM(810.4,DA(1),110,"B",$E(X,1,30),DA)
"^DD",810.4,810.42,.01,3)
(No range limit on date)
"^DD",810.4,810.42,.01,21,0)
^^2^2^3020702^
"^DD",810.4,810.42,.01,21,1,0)
This is the date and time when the editing was done. This field is set 
"^DD",810.4,810.42,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",810.4,810.42,.01,"DT")
3020702
"^DD",810.4,810.42,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",810.4,810.42,1,21,0)
^^2^2^3020702^
"^DD",810.4,810.42,1,21,1,0)
This is the person who did the editing. This field is set automatically 
"^DD",810.4,810.42,1,21,2,0)
and should not be changed by the user.
"^DD",810.4,810.42,1,"DT")
3020702
"^DD",810.4,810.42,2,0)
EDIT COMMENTS^810.422^^1;0
"^DD",810.4,810.422,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",810.4,810.422,0,"DT")
3021011
"^DD",810.4,810.422,0,"NM","EDIT COMMENTS")

"^DD",810.4,810.422,0,"UP")
810.42
"^DD",810.4,810.422,.01,0)
EDIT COMMENTS^W^^0;1
"^DD",810.4,810.422,.01,21,0)
^^2^2^3021011^
"^DD",810.4,810.422,.01,21,1,0)
This word-processing field can be used to record the changes made during
"^DD",810.4,810.422,.01,21,2,0)
the editing session.
"^DD",810.4,810.422,.01,"DT")
3021011
"^DD",810.5,810.5,0)
FIELD^^.1^17
"^DD",810.5,810.5,0,"DDA")
N
"^DD",810.5,810.5,0,"DT")
3050830
"^DD",810.5,810.5,0,"NM","REMINDER PATIENT LIST")

"^DD",810.5,810.5,0,"PT",810.114,.01)

"^DD",810.5,810.5,0,"PT",810.33,.04)

"^DD",810.5,810.5,0,"PT",810.4,4)

"^DD",810.5,810.5,0,"VRPK")
PXRM
"^DD",810.5,810.5,.01,0)
NAME^RF^^0;1^K:$L(X)>96!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,810.5)) X
"^DD",810.5,810.5,.01,1,0)
^.1^^0
"^DD",810.5,810.5,.01,3)
Answer must be 3-96 characters in length
"^DD",810.5,810.5,.01,21,0)
^^9^9^3060504^^
"^DD",810.5,810.5,.01,21,1,0)
This is the unique name identifying the patient list. 
"^DD",810.5,810.5,.01,21,2,0)
 
"^DD",810.5,810.5,.01,21,3,0)
Patient lists created as denominator lists in the rollup of national data
"^DD",810.5,810.5,.01,21,4,0)
to the Austin Automation Center begin with 'VA-'. The patient list name
"^DD",810.5,810.5,.01,21,5,0)
for this type of list begins with the name of the extract definition used
"^DD",810.5,810.5,.01,21,6,0)
to create the patient list.
"^DD",810.5,810.5,.01,21,7,0)
 
"^DD",810.5,810.5,.01,21,8,0)
e.g.  VA-IHD QUERI 2002 Q1 04/22/2002@10:00AM
"^DD",810.5,810.5,.01,21,9,0)

"^DD",810.5,810.5,.01,"DT")
3060504
"^DD",810.5,810.5,.02,0)
REPORT YEAR^NJ4,0^^0;2^K:+X'=X!(X>2050)!(X<2002)!(X?.E1"."1N.N) X
"^DD",810.5,810.5,.02,3)
Type a Number between 2002 and 2050, 0 Decimal Digits
"^DD",810.5,810.5,.02,21,0)
^.001^2^2^3050826^^
"^DD",810.5,810.5,.02,21,1,0)
This is the extract year. Applies only if the patient list was created 
"^DD",810.5,810.5,.02,21,2,0)
from an extract run.
"^DD",810.5,810.5,.02,"DT")
3020424
"^DD",810.5,810.5,.03,0)
REPORT PERIOD^NJ2,0^^0;3^K:+X'=X!(X>12)!(X<1)!(X?.E1"."1N.N) X
"^DD",810.5,810.5,.03,3)
Type a Number between 1 and 12, 0 Decimal Digits
"^DD",810.5,810.5,.03,21,0)
^^2^2^3040823^^
"^DD",810.5,810.5,.03,21,1,0)
This is the extract period (Q1,M1 etc). Applies only if the patient list 
"^DD",810.5,810.5,.03,21,2,0)
was created from an extract run.
"^DD",810.5,810.5,.03,"DT")
3040823
"^DD",810.5,810.5,.04,0)
ORIGINAL DATE CREATED^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",810.5,810.5,.04,21,0)
^.001^1^1^3020701^^
"^DD",810.5,810.5,.04,21,1,0)
This is the date the patient list was originally created.
"^DD",810.5,810.5,.04,"DT")
3020701
"^DD",810.5,810.5,.05,0)
EXTRACT DEFINITION^P810.2'^PXRM(810.2,^0;5^Q
"^DD",810.5,810.5,.05,21,0)
^^4^4^3060504^^^
"^DD",810.5,810.5,.05,21,1,0)
This is a pointer to the extract definition (#810.2) used to 
"^DD",810.5,810.5,.05,21,2,0)
create the patient list.
"^DD",810.5,810.5,.05,21,3,0)

"^DD",810.5,810.5,.05,21,4,0)

"^DD",810.5,810.5,.05,"DT")
3060504
"^DD",810.5,810.5,.06,0)
LIST RULE^P810.4'^PXRM(810.4,^0;6^Q
"^DD",810.5,810.5,.06,21,0)
^.001^2^2^3050721^^^
"^DD",810.5,810.5,.06,21,1,0)
This is a pointer to the list rule (#810.4) used to create the patient 
"^DD",810.5,810.5,.06,21,2,0)
list.
"^DD",810.5,810.5,.06,"DT")
3050721
"^DD",810.5,810.5,.07,0)
CREATOR^P200'^VA(200,^0;7^Q
"^DD",810.5,810.5,.07,21,0)
^^3^3^3040823^^^
"^DD",810.5,810.5,.07,21,1,0)
This field is a pointer to file 200. The DUZ of the user who created the 
"^DD",810.5,810.5,.07,21,2,0)
patient list will be stored in this field. This field will only be set if the 
"^DD",810.5,810.5,.07,21,3,0)
user requested that the patient list be secure.
"^DD",810.5,810.5,.07,"DT")
3040823
"^DD",810.5,810.5,.08,0)
TYPE^S^PUB:PUBLIC;PVT:PRIVATE;^0;8^Q
"^DD",810.5,810.5,.08,3)
Enter the type of list, public or private
"^DD",810.5,810.5,.08,21,0)
^^1^1^3050617^
"^DD",810.5,810.5,.08,21,1,0)
This field is used to mark a list as being public or private.
"^DD",810.5,810.5,.08,"DT")
3050617
"^DD",810.5,810.5,.09,0)
CREATED BY REMINDER DUE REPORT^S^0:NO;1:YES;^0;9^Q
"^DD",810.5,810.5,.09,21,0)
^^2^2^3050721^
"^DD",810.5,810.5,.09,21,1,0)
This field will be true if the patient list was created by a
"^DD",810.5,810.5,.09,21,2,0)
Reminders Due Report.
"^DD",810.5,810.5,.09,"DT")
3050721
"^DD",810.5,810.5,.1,0)
INCLUDE PCMM INSTITUTION^S^0:NO;1:YES;^0;10^Q
"^DD",810.5,810.5,.1,21,0)
^.001^6^6^3050830^^
"^DD",810.5,810.5,.1,21,1,0)
This field is set automatically to YES if the rule set used to
"^DD",810.5,810.5,.1,21,2,0)
create the patient list contains a finding rule that is associated
"^DD",810.5,810.5,.1,21,3,0)
with either of the terms VA-IHD STATION CODE or VA-PCMM INSTITUTION.
"^DD",810.5,810.5,.1,21,4,0)
It is used to control the display of the PCMM Institution column in
"^DD",810.5,810.5,.1,21,5,0)
the ListManager patient list interface.
"^DD",810.5,810.5,.1,21,6,0)

"^DD",810.5,810.5,.1,"DT")
3050830
"^DD",810.5,810.5,30,0)
PATIENTS^810.53P^^30;0
"^DD",810.5,810.5,30,21,0)
^.001^1^1^3051018^^^^
"^DD",810.5,810.5,30,21,1,0)
This is a multiple that contains the list of patients for the patient list.
"^DD",810.5,810.5,35,0)
DATA TYPE LIST^810.535A^^35;0
"^DD",810.5,810.5,35,21,0)
^.001^1^1^3050713^^
"^DD",810.5,810.5,35,21,1,0)
This is the list of all possible data types for a patient list.
"^DD",810.5,810.5,40,0)
USERS^810.54P^^40;0
"^DD",810.5,810.5,40,21,0)
^.001^2^2^3050621^^^^
"^DD",810.5,810.5,40,21,1,0)
This multiple will store a list of users and their access to private
"^DD",810.5,810.5,40,21,2,0)
patient lists.
"^DD",810.5,810.5,45,0)
REMINDER LIST^810.545P^^45;0
"^DD",810.5,810.5,45,21,0)
^^3^3^3050721^
"^DD",810.5,810.5,45,21,1,0)
If the patient list was created by a Reminder Due Report this
"^DD",810.5,810.5,45,21,2,0)
multiple contains the list of reminders that were evaluated for the
"^DD",810.5,810.5,45,21,3,0)
report.
"^DD",810.5,810.5,50,0)
AUTOMATICALLY PURGE^S^1:Y;0:N;^50;1^Q
"^DD",810.5,810.5,50,21,0)
^^4^4^3060504^^
"^DD",810.5,810.5,50,21,1,0)
This field is use to determine if the Patient List should be automatically 
"^DD",810.5,810.5,50,21,2,0)
purge after five years. This field will be checked by the Reminder Extract 
"^DD",810.5,810.5,50,21,3,0)
code that runs monthly when running the National Extract.
"^DD",810.5,810.5,50,21,4,0)

"^DD",810.5,810.5,50,"DT")
3060504
"^DD",810.5,810.5,100,0)
CLASS^S^N:NATIONAL;V:VISN;L:LOCAL;^100;1^Q
"^DD",810.5,810.5,100,3)
Enter the class.
"^DD",810.5,810.5,100,21,0)
^^2^2^3020711^
"^DD",810.5,810.5,100,21,1,0)
This is the class of the patient list. National patient lists cannot be
"^DD",810.5,810.5,100,21,2,0)
edited.
"^DD",810.5,810.5,100,"DT")
3020711
"^DD",810.5,810.5,200,0)
CREATION DOCUMENTATION^810.51^^200;0
"^DD",810.5,810.5,200,21,0)
^.001^12^12^3051019^^^
"^DD",810.5,810.5,200,21,1,0)
This word-processing field documents how the patient list was
"^DD",810.5,810.5,200,21,2,0)
created and it is created automatically when the patient list is
"^DD",810.5,810.5,200,21,3,0)
built.
"^DD",810.5,810.5,200,21,4,0)

"^DD",810.5,810.5,200,21,5,0)
The information it contains shows the rule set details and how the
"^DD",810.5,810.5,200,21,6,0)
rule set was processed to build the patient list. This includes the
"^DD",810.5,810.5,200,21,7,0)
final Beginning Date/Time and Ending Date/Time for each finding used
"^DD",810.5,810.5,200,21,8,0)
in the list rule for each sequence/step in the rule set.
"^DD",810.5,810.5,200,21,9,0)

"^DD",810.5,810.5,200,21,10,0)

"^DD",810.5,810.5,200,21,11,0)

"^DD",810.5,810.5,200,21,12,0)

"^DD",810.5,810.51,0)
CREATION DOCUMENTATION SUB-FIELD^^.01^1
"^DD",810.5,810.51,0,"DT")
3050629
"^DD",810.5,810.51,0,"NM","CREATION DOCUMENTATION")

"^DD",810.5,810.51,0,"UP")
810.5
"^DD",810.5,810.51,.01,0)
CREATION DOCUMENTATION^W^^0;1^Q
"^DD",810.5,810.51,.01,21,0)
^.001^2^2^3051019^^^^
"^DD",810.5,810.51,.01,21,1,0)
This word-processing field is used to document how a patient list
"^DD",810.5,810.51,.01,21,2,0)
was created.
"^DD",810.5,810.51,.01,"DT")
3050629
"^DD",810.5,810.53,0)
PATIENTS SUB-FIELD^^.03^5
"^DD",810.5,810.53,0,"DT")
3050826
"^DD",810.5,810.53,0,"IX","B",810.53,.01)

"^DD",810.5,810.53,0,"NM","PATIENTS")

"^DD",810.5,810.53,0,"UP")
810.5
"^DD",810.5,810.53,.01,0)
PATIENTS^MP2'^DPT(^0;1^Q
"^DD",810.5,810.53,.01,1,0)
^.1
"^DD",810.5,810.53,.01,1,1,0)
810.53^B
"^DD",810.5,810.53,.01,1,1,1)
S ^PXRMXP(810.5,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",810.5,810.53,.01,1,1,2)
K ^PXRMXP(810.5,DA(1),30,"B",$E(X,1,30),DA)
"^DD",810.5,810.53,.01,21,0)
^.001^1^1^3050713^^
"^DD",810.5,810.53,.01,21,1,0)
This is a pointer to the patient file (#2).
"^DD",810.5,810.53,.01,"DT")
3050713
"^DD",810.5,810.53,.02,0)
PCMM INSTITUTION^P4'^DIC(4,^0;2^Q
"^DD",810.5,810.53,.02,21,0)
^.001^3^3^3050826^^^
"^DD",810.5,810.53,.02,21,1,0)
This is a pointer to the Institution file (#4) and stores the PCMM
"^DD",810.5,810.53,.02,21,2,0)
Institution for the patient.
"^DD",810.5,810.53,.02,21,3,0)

"^DD",810.5,810.53,.02,"DT")
3050826
"^DD",810.5,810.53,.03,0)
PCMM INSTITUTION NAME^F^^0;3^K:$L(X)>30!($L(X)<3) X
"^DD",810.5,810.53,.03,3)
Answer must be 3-30 characters in length.
"^DD",810.5,810.53,.03,21,0)
^.001^3^3^3051018^^
"^DD",810.5,810.53,.03,21,1,0)
This is the name, .01 field of file #4, of the patient's PCMM Institution.
"^DD",810.5,810.53,.03,21,2,0)

"^DD",810.5,810.53,.03,21,3,0)

"^DD",810.5,810.53,.03,"DT")
3050826
"^DD",810.5,810.53,1,0)
DATA^810.531A^^DATA;0
"^DD",810.5,810.53,1,21,0)
^^4^4^3050713^
"^DD",810.5,810.53,1,21,1,0)
This multiple contains the patient's data. The data that is stored
"^DD",810.5,810.53,1,21,2,0)
is determined by the Finding Rules in the rule set whose operation
"^DD",810.5,810.53,1,21,3,0)
is Insert.
"^DD",810.5,810.53,1,21,4,0)

"^DD",810.5,810.53,2,0)
DUE REMINDER LIST^810.532P^^REM;0
"^DD",810.5,810.53,2,21,0)
^^5^5^3050721^
"^DD",810.5,810.53,2,21,1,0)
If there is data in this multiple then the patient list was created
"^DD",810.5,810.53,2,21,2,0)
from a Reminders Due report. This multiple stores the list of
"^DD",810.5,810.53,2,21,3,0)
reminders that were due for the patient, the reminder evaluation
"^DD",810.5,810.53,2,21,4,0)
status, the due date, and the last done date.
"^DD",810.5,810.53,2,21,5,0)

"^DD",810.5,810.531,0)
DATA SUB-FIELD^^.02^2
"^DD",810.5,810.531,0,"DT")
3050713
"^DD",810.5,810.531,0,"NM","DATA")

"^DD",810.5,810.531,0,"UP")
810.53
"^DD",810.5,810.531,.01,0)
DATA TYPE^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",810.5,810.531,.01,1,0)
^.1^^0
"^DD",810.5,810.531,.01,3)
Answer must be 1-64 characters in length.
"^DD",810.5,810.531,.01,21,0)
^^3^3^3050713^
"^DD",810.5,810.531,.01,21,1,0)
This is the name of the data. The data can be selected by this name
"^DD",810.5,810.531,.01,21,2,0)
in the demographic report.
"^DD",810.5,810.531,.01,21,3,0)

"^DD",810.5,810.531,.01,"DT")
3050713
"^DD",810.5,810.531,.02,0)
VALUE^F^^0;2^K:$L(X)>64!($L(X)<1) X
"^DD",810.5,810.531,.02,3)
Answer must be 1-64 characters in length.
"^DD",810.5,810.531,.02,21,0)
^^1^1^3050713^
"^DD",810.5,810.531,.02,21,1,0)
This is the value of the data.
"^DD",810.5,810.531,.02,"DT")
3050713
"^DD",810.5,810.532,0)
DUE REMINDER LIST SUB-FIELD^^3^4
"^DD",810.5,810.532,0,"DT")
3050721
"^DD",810.5,810.532,0,"IX","B",810.532,.01)

"^DD",810.5,810.532,0,"NM","DUE REMINDER LIST")

"^DD",810.5,810.532,0,"UP")
810.53
"^DD",810.5,810.532,.01,0)
REMINDER^MP811.9'^PXD(811.9,^0;1^Q
"^DD",810.5,810.532,.01,1,0)
^.1
"^DD",810.5,810.532,.01,1,1,0)
810.532^B
"^DD",810.5,810.532,.01,1,1,1)
S ^PXRMXP(810.5,DA(2),30,DA(1),"REM","B",$E(X,1,30),DA)=""
"^DD",810.5,810.532,.01,1,1,2)
K ^PXRMXP(810.5,DA(2),30,DA(1),"REM","B",$E(X,1,30),DA)
"^DD",810.5,810.532,.01,21,0)
^.001^1^1^3050721^^^
"^DD",810.5,810.532,.01,21,1,0)

"^DD",810.5,810.532,.01,"DT")
3050721
"^DD",810.5,810.532,1,0)
REMINDER STATUS^F^^0;2^K:$L(X)>10!($L(X)<3) X
"^DD",810.5,810.532,1,3)
Answer must be 3-10 characters in length.
"^DD",810.5,810.532,1,"DT")
3050721
"^DD",810.5,810.532,2,0)
DUE DATE^F^^0;3^K:$L(X)>16!($L(X)<7) X
"^DD",810.5,810.532,2,3)
Answer must be 7-16 characters in length.
"^DD",810.5,810.532,2,"DT")
3050721
"^DD",810.5,810.532,3,0)
LAST DONE DATE^F^^0;4^K:$L(X)>16!($L(X)<7) X
"^DD",810.5,810.532,3,3)
Answer must be 7-16 characters in length.
"^DD",810.5,810.532,3,"DT")
3050721
"^DD",810.5,810.535,0)
DATA TYPE LIST SUB-FIELD^^.01^1
"^DD",810.5,810.535,0,"DT")
3050713
"^DD",810.5,810.535,0,"NM","DATA TYPE LIST")

"^DD",810.5,810.535,0,"UP")
810.5
"^DD",810.5,810.535,.01,0)
DATA TYPE^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",810.5,810.535,.01,1,0)
^.1^^0
"^DD",810.5,810.535,.01,3)
Answer must be 1-64 characters in length.
"^DD",810.5,810.535,.01,21,0)
^^1^1^3050713^
"^DD",810.5,810.535,.01,21,1,0)
This is the data type.
"^DD",810.5,810.535,.01,"DT")
3050713
"^DD",810.5,810.54,0)
USERS SUB-FIELD^^1^2
"^DD",810.5,810.54,0,"DT")
3030724
"^DD",810.5,810.54,0,"IX","B",810.54,.01)

"^DD",810.5,810.54,0,"NM","USERS")

"^DD",810.5,810.54,0,"UP")
810.5
"^DD",810.5,810.54,.01,0)
USERS^MP200'^VA(200,^0;1^Q
"^DD",810.5,810.54,.01,1,0)
^.1
"^DD",810.5,810.54,.01,1,1,0)
810.54^B
"^DD",810.5,810.54,.01,1,1,1)
S ^PXRMXP(810.5,DA(1),40,"B",$E(X,1,30),DA)=""
"^DD",810.5,810.54,.01,1,1,2)
K ^PXRMXP(810.5,DA(1),40,"B",$E(X,1,30),DA)
"^DD",810.5,810.54,.01,21,0)
^^2^2^3040823^^
"^DD",810.5,810.54,.01,21,1,0)
This is a pointer to file #200. The DUZes of users who have access to a secure 
"^DD",810.5,810.54,.01,21,2,0)
patient list will be stored here.
"^DD",810.5,810.54,.01,"DT")
3040823
"^DD",810.5,810.54,1,0)
ACCESS^S^F:FULL ACCESS;V:VIEW ACCESS;^0;2^Q
"^DD",810.5,810.54,1,21,0)
^.001^7^7^3050621^^^^
"^DD",810.5,810.54,1,21,1,0)
Access defines the type of access that a user has to the patient list.
"^DD",810.5,810.54,1,21,2,0)

"^DD",810.5,810.54,1,21,3,0)
Full access grants the user complete access to the list. The user will have 
"^DD",810.5,810.54,1,21,4,0)
the same rights as the Creator.
"^DD",810.5,810.54,1,21,5,0)

"^DD",810.5,810.54,1,21,6,0)
View access will allow the user to view the list and run reports against 
"^DD",810.5,810.54,1,21,7,0)
the list, but they will not be able to modify the list.
"^DD",810.5,810.54,1,"DT")
3050621
"^DD",810.5,810.545,0)
REMINDER LIST SUB-FIELD^^.01^1
"^DD",810.5,810.545,0,"DT")
3050721
"^DD",810.5,810.545,0,"IX","B",810.545,.01)

"^DD",810.5,810.545,0,"NM","REMINDER LIST")

"^DD",810.5,810.545,0,"UP")
810.5
"^DD",810.5,810.545,.01,0)
REMINDER^MP811.9'^PXD(811.9,^0;1^Q
"^DD",810.5,810.545,.01,1,0)
^.1
"^DD",810.5,810.545,.01,1,1,0)
810.545^B
"^DD",810.5,810.545,.01,1,1,1)
S ^PXRMXP(810.5,DA(1),45,"B",$E(X,1,30),DA)=""
"^DD",810.5,810.545,.01,1,1,2)
K ^PXRMXP(810.5,DA(1),45,"B",$E(X,1,30),DA)
"^DD",810.5,810.545,.01,"DT")
3050721
"^DD",810.7,810.7,0)
FIELD^^110^5
"^DD",810.7,810.7,0,"DDA")
N
"^DD",810.7,810.7,0,"DT")
3021011
"^DD",810.7,810.7,0,"IX","B",810.7,.01)

"^DD",810.7,810.7,0,"NM","REMINDER EXTRACT COUNTING RULE")

"^DD",810.7,810.7,0,"PT",810.22,2)

"^DD",810.7,810.7,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,810.7)) X
"^DD",810.7,810.7,.01,1,0)
^.1
"^DD",810.7,810.7,.01,1,1,0)
810.7^B
"^DD",810.7,810.7,.01,1,1,1)
S ^PXRM(810.7,"B",$E(X,1,30),DA)=""
"^DD",810.7,810.7,.01,1,1,2)
K ^PXRM(810.7,"B",$E(X,1,30),DA)
"^DD",810.7,810.7,.01,3)
Answer must be 3-64 characters in length
"^DD",810.7,810.7,.01,21,0)
^^3^3^3060504^^^^
"^DD",810.7,810.7,.01,21,1,0)
This is the name of the Counting Rule. Nationally distributed extract counting 
"^DD",810.7,810.7,.01,21,2,0)
rules are prefixed 'VA-'.
"^DD",810.7,810.7,.01,21,3,0)

"^DD",810.7,810.7,.01,"DT")
3060504
"^DD",810.7,810.7,1,0)
DESCRIPTION^810.71^^1;0
"^DD",810.7,810.7,1,21,0)
^^3^3^3060504^^^
"^DD",810.7,810.7,1,21,1,0)
Description is used to enter a text description of the counting groups defined 
"^DD",810.7,810.7,1,21,2,0)
in the counting rule.
"^DD",810.7,810.7,1,21,3,0)

"^DD",810.7,810.7,10,0)
EXTRACT COUNTING GROUPS^810.701I^^10;0
"^DD",810.7,810.7,10,21,0)
^^2^2^3060504^^
"^DD",810.7,810.7,10,21,1,0)
This field contains the associated Extract Counting Group.
"^DD",810.7,810.7,10,21,2,0)

"^DD",810.7,810.7,10,"DT")
3060504
"^DD",810.7,810.7,100,0)
CLASS^S^N:NATIONAL;V:VISN;L:LOCAL;^100;1^Q
"^DD",810.7,810.7,100,3)
Enter the class.
"^DD",810.7,810.7,100,21,0)
^^3^3^3060504^^^
"^DD",810.7,810.7,100,21,1,0)
This is the class of the Extract Counting Rule. National Extract Counting Rules 
"^DD",810.7,810.7,100,21,2,0)
are not editable.
"^DD",810.7,810.7,100,21,3,0)

"^DD",810.7,810.7,100,"DT")
3060504
"^DD",810.7,810.7,110,0)
EDIT HISTORY^810.72D^^110;0
"^DD",810.7,810.7,110,21,0)
^^3^3^3060504^^
"^DD",810.7,810.7,110,21,1,0)
This multiple is used to record a history of changes made to the Extract 
"^DD",810.7,810.7,110,21,2,0)
Counting Rule.
"^DD",810.7,810.7,110,21,3,0)

"^DD",810.7,810.701,0)
EXTRACT COUNTING GROUPS SUB-FIELD^^2^3
"^DD",810.7,810.701,0,"DT")
3021008
"^DD",810.7,810.701,0,"ID",1)
S %I=Y,Y=$S('$D(^(0)):"",$D(^PXRM(810.8,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(810.8,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",810.7,810.701,0,"IX","B",810.701,.01)

"^DD",810.7,810.701,0,"NM","EXTRACT COUNTING GROUPS")

"^DD",810.7,810.701,0,"UP")
810.7
"^DD",810.7,810.701,.01,0)
SEQUENCE NUMBER^MMFX^^0;1^K:$L(X)'=3!(+X=0) X I $G(X)]"" K:$D(^PXRM(810.7,DA(1),10,"B",X)) X
"^DD",810.7,810.701,.01,1,0)
^.1
"^DD",810.7,810.701,.01,1,1,0)
810.701^B
"^DD",810.7,810.701,.01,1,1,1)
S ^PXRM(810.7,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",810.7,810.701,.01,1,1,2)
K ^PXRM(810.7,DA(1),10,"B",$E(X,1,30),DA)
"^DD",810.7,810.701,.01,3)
Enter unique sequence 001 - 999 (length 3 preceded by zeroes)
"^DD",810.7,810.701,.01,21,0)
^^2^2^3060504^^^
"^DD",810.7,810.701,.01,21,1,0)
This is the numeric sequence of an individual counting group.
"^DD",810.7,810.701,.01,21,2,0)

"^DD",810.7,810.701,.01,"DT")
3060504
"^DD",810.7,810.701,1,0)
COUNTING GROUP^P810.8'^PXRM(810.8,^0;2^Q
"^DD",810.7,810.701,1,21,0)
^^3^3^3060504^^
"^DD",810.7,810.701,1,21,1,0)
This is a pointer to the Reminder Counting Group File. Each group defines 
"^DD",810.7,810.701,1,21,2,0)
reminder terms and type of count to be totaled by the extract process.
"^DD",810.7,810.701,1,21,3,0)

"^DD",810.7,810.701,1,"DT")
3060504
"^DD",810.7,810.701,2,0)
REMINDER STATUS^S^T:TOTAL PATIENTS;A:APPLICABLE PATIENTS;D:DUE PATIENTS;N:NOT DUE PATIENTS;^0;3^Q
"^DD",810.7,810.701,2,21,0)
^^5^5^3060504^^^
"^DD",810.7,810.701,2,21,1,0)
This field determines which group of patients the counting group is accumulated
"^DD",810.7,810.701,2,21,2,0)
for. The default value for this field is TOTAL PATIENTS (i.e. all  patients in
"^DD",810.7,810.701,2,21,3,0)
the denominator list are used to accumulate counts.
"^DD",810.7,810.701,2,21,4,0)

"^DD",810.7,810.701,2,21,5,0)

"^DD",810.7,810.701,2,"DT")
3060504
"^DD",810.7,810.71,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",810.7,810.71,0,"DT")
3020517
"^DD",810.7,810.71,0,"NM","DESCRIPTION")

"^DD",810.7,810.71,0,"UP")
810.7
"^DD",810.7,810.71,.01,0)
DESCRIPTION^W^^0;1
"^DD",810.7,810.71,.01,21,0)
^^2^2^3040819^^
"^DD",810.7,810.71,.01,21,1,0)
Description is used to enter a text description of the finding groups defined 
"^DD",810.7,810.71,.01,21,2,0)
in the finding rule.
"^DD",810.7,810.71,.01,"DT")
3040819
"^DD",810.7,810.72,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",810.7,810.72,0,"DT")
3021011
"^DD",810.7,810.72,0,"IX","B",810.72,.01)

"^DD",810.7,810.72,0,"NM","EDIT HISTORY")

"^DD",810.7,810.72,0,"UP")
810.7
"^DD",810.7,810.72,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",810.7,810.72,.01,1,0)
^.1
"^DD",810.7,810.72,.01,1,1,0)
810.72^B
"^DD",810.7,810.72,.01,1,1,1)
S ^PXRM(810.7,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",810.7,810.72,.01,1,1,2)
K ^PXRM(810.7,DA(1),110,"B",$E(X,1,30),DA)
"^DD",810.7,810.72,.01,3)
(No range limit on date)
"^DD",810.7,810.72,.01,21,0)
^^2^2^3040819^^
"^DD",810.7,810.72,.01,21,1,0)
This is the date and time when the editing was done. This field is set 
"^DD",810.7,810.72,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",810.7,810.72,.01,"DT")
3040819
"^DD",810.7,810.72,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",810.7,810.72,1,21,0)
^^2^2^3040819^^^
"^DD",810.7,810.72,1,21,1,0)
This is the person who did the editing. This field is set automatically and
"^DD",810.7,810.72,1,21,2,0)
should not be changed by the user.
"^DD",810.7,810.72,1,"DT")
3040819
"^DD",810.7,810.72,2,0)
EDIT COMMENTS^810.722^^1;0
"^DD",810.7,810.72,2,21,0)
^^2^2^3040819^
"^DD",810.7,810.72,2,21,1,0)
This word-processing field can be used to record the changes made during the 
"^DD",810.7,810.72,2,21,2,0)
editing session.
"^DD",810.7,810.722,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",810.7,810.722,0,"DT")
3021011
"^DD",810.7,810.722,0,"NM","EDIT COMMENTS")

"^DD",810.7,810.722,0,"UP")
810.72
"^DD",810.7,810.722,.01,0)
EDIT COMMENTS^W^^0;1
"^DD",810.7,810.722,.01,"DT")
3040819
"^DD",810.8,810.8,0)
FIELD^^110^5
"^DD",810.8,810.8,0,"DDA")
N
"^DD",810.8,810.8,0,"DT")
3040820
"^DD",810.8,810.8,0,"NM","REMINDER COUNTING GROUP")

"^DD",810.8,810.8,0,"PT",810.701,1)

"^DD",810.8,810.8,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,810.8)) X
"^DD",810.8,810.8,.01,1,0)
^.1^^0
"^DD",810.8,810.8,.01,3)
Answer must be 3-64 characters in length
"^DD",810.8,810.8,.01,21,0)
^^3^3^3060504^^
"^DD",810.8,810.8,.01,21,1,0)
This file contains groups of findings that will be used to accumulate finding
"^DD",810.8,810.8,.01,21,2,0)
totals during the reminder extract process.  
"^DD",810.8,810.8,.01,21,3,0)

"^DD",810.8,810.8,.01,"DT")
3060504
"^DD",810.8,810.8,2,0)
COUNT TYPE^S^MRF:MOST RECENT FINDING COUNT;MRFP:MOST RECENT FINDING PATIENT COUNT;UR:UTILIZATION IN REPORTING PERIOD FINDING COUNT;^0;3^Q
"^DD",810.8,810.8,2,21,0)
^^14^14^3060504^^^
"^DD",810.8,810.8,2,21,1,0)
Count is used to specify the different ways the extract can count findings:
"^DD",810.8,810.8,2,21,2,0)

"^DD",810.8,810.8,2,21,3,0)
MRF (Most Recent Finding count) counts the most recent occurrence of each 
"^DD",810.8,810.8,2,21,4,0)
term in the group. This is also the default if no extract finding is 
"^DD",810.8,810.8,2,21,5,0)
selected and all reminder terms are counted.
"^DD",810.8,810.8,2,21,6,0)

"^DD",810.8,810.8,2,21,7,0)
MRFP (Most Recent Finding for Patient) counts only the most recent finding
"^DD",810.8,810.8,2,21,8,0)
across the group. One count is accumulated for the one finding in the group of
"^DD",810.8,810.8,2,21,9,0)
findings that is the most recent finding for each patient 
"^DD",810.8,810.8,2,21,10,0)

"^DD",810.8,810.8,2,21,11,0)
UR (Utilization in Reporting period) counts all occurrences of findings from 
"^DD",810.8,810.8,2,21,12,0)
the group that were documented during the reporting period.  
"^DD",810.8,810.8,2,21,13,0)

"^DD",810.8,810.8,2,21,14,0)

"^DD",810.8,810.8,2,"DT")
3060504
"^DD",810.8,810.8,10,0)
GROUP FINDINGS^810.801I^^10;0
"^DD",810.8,810.8,10,21,0)
^^2^2^3060504^^^
"^DD",810.8,810.8,10,21,1,0)
This multiple is used to group Reminder Terms together.
"^DD",810.8,810.8,10,21,2,0)

"^DD",810.8,810.8,100,0)
CLASS^S^N:NATIONAL;V:VISN;L:LOCAL;^100;1^Q
"^DD",810.8,810.8,100,21,0)
^^2^2^3040820^^
"^DD",810.8,810.8,100,21,1,0)
This is the class of the finding groups. National finding group cannot be 
"^DD",810.8,810.8,100,21,2,0)
edited.
"^DD",810.8,810.8,100,"DT")
3040820
"^DD",810.8,810.8,110,0)
EDIT HISTORY^810.82D^^110;0
"^DD",810.8,810.8,110,"DT")
3021010
"^DD",810.8,810.801,0)
GROUP FINDINGS SUB-FIELD^^1^2
"^DD",810.8,810.801,0,"DT")
3040820
"^DD",810.8,810.801,0,"ID",1)
S %I=Y,Y=$S('$D(^(0)):"",$D(^PXRMD(811.5,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(811.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",810.8,810.801,0,"IX","B",810.801,.01)

"^DD",810.8,810.801,0,"NM","GROUP FINDINGS")

"^DD",810.8,810.801,0,"UP")
810.8
"^DD",810.8,810.801,.01,0)
SEQUENCE^MFX^^0;1^K:$L(X)'=3!(+X=0) X I $G(X)]"" K:$D(^PXRM(810.8,DA(1),10,"B",X)) X
"^DD",810.8,810.801,.01,1,0)
^.1
"^DD",810.8,810.801,.01,1,1,0)
810.801^B
"^DD",810.8,810.801,.01,1,1,1)
S ^PXRM(810.8,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",810.8,810.801,.01,1,1,2)
K ^PXRM(810.8,DA(1),10,"B",$E(X,1,30),DA)
"^DD",810.8,810.801,.01,3)
Enter unique sequence 001 - 999 (length 3 preceded by zeroes)
"^DD",810.8,810.801,.01,21,0)
^^2^2^3020828^
"^DD",810.8,810.801,.01,21,1,0)
The sequence number determines the order in which findings appear on the 
"^DD",810.8,810.801,.01,21,2,0)
extract summary.
"^DD",810.8,810.801,.01,"DT")
3021008
"^DD",810.8,810.801,1,0)
TERM^P811.5'^PXRMD(811.5,^0;2^Q
"^DD",810.8,810.801,1,3)
Enter reminder term name.
"^DD",810.8,810.801,1,21,0)
^^8^8^3060504^^^
"^DD",810.8,810.801,1,21,1,0)
This is a pointer to the Reminder Term file. The reminder terms are used to
"^DD",810.8,810.801,1,21,2,0)
identify patient findings that will be used to accumulate counts.  If the MRF
"^DD",810.8,810.801,1,21,3,0)
or MRFP Count Type is defined with the Counting Group, then the findings
"^DD",810.8,810.801,1,21,4,0)
(reminder terms) from the reminder evaluation are used to accumulate counts. 
"^DD",810.8,810.801,1,21,5,0)
If the UR Count Type is defined with the Counting Group, then the reminder
"^DD",810.8,810.801,1,21,6,0)
terms are evaluated individually to find all findings documented during the
"^DD",810.8,810.801,1,21,7,0)
reporting period.
"^DD",810.8,810.801,1,21,8,0)

"^DD",810.8,810.801,1,"DT")
3060504
"^DD",810.8,810.82,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",810.8,810.82,0,"DT")
3021010
"^DD",810.8,810.82,0,"IX","B",810.82,.01)

"^DD",810.8,810.82,0,"NM","EDIT HISTORY")

"^DD",810.8,810.82,0,"UP")
810.8
"^DD",810.8,810.82,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",810.8,810.82,.01,1,0)
^.1
"^DD",810.8,810.82,.01,1,1,0)
810.82^B
"^DD",810.8,810.82,.01,1,1,1)
S ^PXRM(810.8,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",810.8,810.82,.01,1,1,2)
K ^PXRM(810.8,DA(1),110,"B",$E(X,1,30),DA)
"^DD",810.8,810.82,.01,3)
(No range limit on date)
"^DD",810.8,810.82,.01,21,0)
^^2^2^3040820^^
"^DD",810.8,810.82,.01,21,1,0)
This is the date and time when the editing was done. This field is set 
"^DD",810.8,810.82,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",810.8,810.82,.01,"DT")
3040820
"^DD",810.8,810.82,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",810.8,810.82,1,21,0)
^^2^2^3021010^
"^DD",810.8,810.82,1,21,1,0)
This is the person who did the editing. This field is set automatically 
"^DD",810.8,810.82,1,21,2,0)
and should not be changed by the user.
"^DD",810.8,810.82,1,"DT")
3021010
"^DD",810.8,810.82,2,0)
EDIT COMMENTS^810.822^^1;0
"^DD",810.8,810.82,2,21,0)
^^2^2^3040820^
"^DD",810.8,810.82,2,21,1,0)
This word-processing field can be used to record the changes made during the 
"^DD",810.8,810.82,2,21,2,0)
editing session.
"^DD",810.8,810.822,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",810.8,810.822,0,"DT")
3021010
"^DD",810.8,810.822,0,"NM","EDIT COMMENTS")

"^DD",810.8,810.822,0,"UP")
810.82
"^DD",810.8,810.822,.01,0)
EDIT COMMENTS^W^^0;1
"^DD",810.8,810.822,.01,"DT")
3040820
"^DD",810.9,810.9,0)
FIELD^^110^8
"^DD",810.9,810.9,0,"DDA")
N
"^DD",810.9,810.9,0,"DT")
3050617
"^DD",810.9,810.9,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(810.9,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",810.9,810.9,0,"NM","REMINDER LOCATION LIST")

"^DD",810.9,810.9,0,"PT",811.52,.01)

"^DD",810.9,810.9,0,"PT",811.902,.01)

"^DD",810.9,810.9,.01,0)
NAME^RF^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,810.9)) X
"^DD",810.9,810.9,.01,1,0)
^.1^^0
"^DD",810.9,810.9,.01,3)
Enter the name of the Location List
"^DD",810.9,810.9,.01,21,0)
^.001^1^1^3050120^^^^
"^DD",810.9,810.9,.01,21,1,0)
This is the NAME of the Location List; it must be unique.
"^DD",810.9,810.9,.01,23,0)
^.001^1^1^3050120^^^^
"^DD",810.9,810.9,.01,23,1,0)
NAME is a key for this file.
"^DD",810.9,810.9,.01,"DT")
3021107
"^DD",810.9,810.9,1,0)
DESCRIPTION^810.91^^1;0
"^DD",810.9,810.9,1,21,0)
^.001^4^4^3050120^^^^
"^DD",810.9,810.9,1,21,1,0)
This word processing field is used for describing the LOCATION LIST.
"^DD",810.9,810.9,1,21,2,0)
Information such as the purpose of the LOCATION LIST can be recorded
"^DD",810.9,810.9,1,21,3,0)
here. The DESCRIPTION will be displayed when a LOCATION LIST inquiry is
"^DD",810.9,810.9,1,21,4,0)
done.
"^DD",810.9,810.9,40.7,0)
CLINIC STOP LIST^810.9001P^^40.7;0
"^DD",810.9,810.9,40.7,21,0)
^.001^2^2^3050120^^^^
"^DD",810.9,810.9,40.7,21,1,0)
This is the list of clinic stop codes that are included in the Location
"^DD",810.9,810.9,40.7,21,2,0)
List.
"^DD",810.9,810.9,40.7,"DT")
3021105
"^DD",810.9,810.9,44,0)
HOSPITAL LOCATION LIST^810.944P^^44;0
"^DD",810.9,810.9,44,21,0)
^.001^2^2^3050114^^^
"^DD",810.9,810.9,44,21,1,0)
This is the list of hospital locations that are included in the
"^DD",810.9,810.9,44,21,2,0)
Location List.
"^DD",810.9,810.9,44,"DT")
3021105
"^DD",810.9,810.9,100,0)
CLASS^RSX^L:LOCAL;N:NATIONAL;V:VISN;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",810.9,810.9,100,3)
Enter the CLASS.
"^DD",810.9,810.9,100,21,0)
^.001^4^4^3050617^^^^
"^DD",810.9,810.9,100,21,1,0)
This is the CLASS of the location list. Possible classes are "N" for
"^DD",810.9,810.9,100,21,2,0)
national, "V" for VISN, and "L" for local. National location lists cannot
"^DD",810.9,810.9,100,21,3,0)
be edited by sites.
"^DD",810.9,810.9,100,21,4,0)

"^DD",810.9,810.9,100,"DT")
3050616
"^DD",810.9,810.9,101,0)
SPONSOR^P811.6'^PXRMD(811.6,^100;2^Q
"^DD",810.9,810.9,101,3)
Enter the SPONSOR.
"^DD",810.9,810.9,101,21,0)
^^1^1^3050616^
"^DD",810.9,810.9,101,21,1,0)
This is the organization or group that sponsors this location list.
"^DD",810.9,810.9,101,"DT")
3050616
"^DD",810.9,810.9,102,0)
REVIEW DATE^D^^100;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",810.9,810.9,102,3)
Enter the REVIEW DATE.
"^DD",810.9,810.9,102,21,0)
^.001^4^4^3050617^^^
"^DD",810.9,810.9,102,21,1,0)
REVIEW DATE is used to determine when the location list should be reviewed
"^DD",810.9,810.9,102,21,2,0)
to verify that it is current with the latest standards and guidelines.
"^DD",810.9,810.9,102,21,3,0)
You can find all location lists whose review date has passed using the
"^DD",810.9,810.9,102,21,4,0)
Clinical Reminders Review Date Report.
"^DD",810.9,810.9,102,"DT")
3050617
"^DD",810.9,810.9,110,0)
EDIT HISTORY^810.9002D^^110;0
"^DD",810.9,810.9,110,21,0)
^.001^2^2^3050617^^^^
"^DD",810.9,810.9,110,21,1,0)
This multiple is used to record a history of changes made to the
"^DD",810.9,810.9,110,21,2,0)
location list.
"^DD",810.9,810.9001,0)
CLINIC STOP LIST SUB-FIELD^^1^3
"^DD",810.9,810.9001,0,"DT")
3041029
"^DD",810.9,810.9001,0,"IX","B",810.9001,.01)

"^DD",810.9,810.9001,0,"NM","CLINIC STOP LIST")

"^DD",810.9,810.9001,0,"UP")
810.9
"^DD",810.9,810.9001,.01,0)
CLINIC STOP^MP40.7'^DIC(40.7,^0;1^Q
"^DD",810.9,810.9001,.01,1,0)
^.1
"^DD",810.9,810.9001,.01,1,1,0)
810.9001^B
"^DD",810.9,810.9001,.01,1,1,1)
S ^PXRMD(810.9,DA(1),40.7,"B",$E(X,1,30),DA)=""
"^DD",810.9,810.9001,.01,1,1,2)
K ^PXRMD(810.9,DA(1),40.7,"B",$E(X,1,30),DA)
"^DD",810.9,810.9001,.01,3)
Enter a CLINIC STOP CODE
"^DD",810.9,810.9001,.01,"DT")
3031114
"^DD",810.9,810.9001,.02,0)
AMIS REPORTING STOP CODE^NJ3,0^^0;2^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",810.9,810.9001,.02,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",810.9,810.9001,.02,21,0)
^.001^2^2^3050120^^^
"^DD",810.9,810.9001,.02,21,1,0)
This is the AMIS REPORTING STOP CODE; it is set automatically when the
"^DD",810.9,810.9001,.02,21,2,0)
location is selected.
"^DD",810.9,810.9001,.02,"DT")
3030530
"^DD",810.9,810.9001,1,0)
CREDIT STOPS TO EXCLUDE^810.90011P^^1;0
"^DD",810.9,810.9001,1,21,0)
^^5^5^3050114^
"^DD",810.9,810.9001,1,21,1,0)
A Clinic Stop resolves to a list of Hospital Locations. Associated with
"^DD",810.9,810.9001,1,21,2,0)
each Hospital Location entry in file #44 is a Credit Stop (the 18th
"^DD",810.9,810.9001,1,21,3,0)
piece of the 0 node). There may be certain Credit Stops that you want
"^DD",810.9,810.9001,1,21,4,0)
to exclude from the list of locations in the Clinic Stop. This multiple
"^DD",810.9,810.9001,1,21,5,0)
contains a list of any Credit Stops that should be excluded.
"^DD",810.9,810.90011,0)
CREDIT STOPS TO EXCLUDE SUB-FIELD^^.01^1
"^DD",810.9,810.90011,0,"DT")
3041029
"^DD",810.9,810.90011,0,"IX","B",810.90011,.01)

"^DD",810.9,810.90011,0,"NM","CREDIT STOPS TO EXCLUDE")

"^DD",810.9,810.90011,0,"UP")
810.9001
"^DD",810.9,810.90011,.01,0)
CREDIT STOP TO EXCLUDE^MP40.7'^DIC(40.7,^0;1^Q
"^DD",810.9,810.90011,.01,1,0)
^.1
"^DD",810.9,810.90011,.01,1,1,0)
810.90011^B
"^DD",810.9,810.90011,.01,1,1,1)
S ^PXRMD(810.9,DA(2),40.7,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",810.9,810.90011,.01,1,1,2)
K ^PXRMD(810.9,DA(2),40.7,DA(1),1,"B",$E(X,1,30),DA)
"^DD",810.9,810.90011,.01,3)
Enter a credit stop to exclude.
"^DD",810.9,810.90011,.01,21,0)
^.001^5^5^3041101^^^^
"^DD",810.9,810.90011,.01,21,1,0)
Clinic Stops are a way to group a list of Hospital Locations.
"^DD",810.9,810.90011,.01,21,2,0)
Associated with each Hospital Location is a Credit Stop Code. If there
"^DD",810.9,810.90011,.01,21,3,0)
are Hospital Locations with certain Credit Stops that you want excluded
"^DD",810.9,810.90011,.01,21,4,0)
from the list of Hospital Locations associated with this Clinic Stop
"^DD",810.9,810.90011,.01,21,5,0)
entry, they are entered in this list.
"^DD",810.9,810.90011,.01,"DT")
3041101
"^DD",810.9,810.9002,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",810.9,810.9002,0,"DT")
3050616
"^DD",810.9,810.9002,0,"IX","B",810.9002,.01)

"^DD",810.9,810.9002,0,"NM","EDIT HISTORY")

"^DD",810.9,810.9002,0,"UP")
810.9
"^DD",810.9,810.9002,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",810.9,810.9002,.01,1,0)
^.1
"^DD",810.9,810.9002,.01,1,1,0)
810.9002^B
"^DD",810.9,810.9002,.01,1,1,1)
S ^PXRMD(810.9,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",810.9,810.9002,.01,1,1,2)
K ^PXRMD(810.9,DA(1),110,"B",$E(X,1,30),DA)
"^DD",810.9,810.9002,.01,3)
Do not edit this field.
"^DD",810.9,810.9002,.01,21,0)
^.001^3^3^3050617^^^
"^DD",810.9,810.9002,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",810.9,810.9002,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",810.9,810.9002,.01,21,3,0)

"^DD",810.9,810.9002,.01,"DT")
3050616
"^DD",810.9,810.9002,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",810.9,810.9002,1,3)
Do not edit this field.
"^DD",810.9,810.9002,1,21,0)
^.001^3^3^3050617^^
"^DD",810.9,810.9002,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",810.9,810.9002,1,21,2,0)
and should not be changed by the user.
"^DD",810.9,810.9002,1,21,3,0)

"^DD",810.9,810.9002,1,"DT")
3050616
"^DD",810.9,810.9002,2,0)
EDIT COMMENTS^810.90022^^1;0
"^DD",810.9,810.9002,2,21,0)
^.001^3^3^3050617^^^
"^DD",810.9,810.9002,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",810.9,810.9002,2,21,2,0)
during the editing session.
"^DD",810.9,810.9002,2,21,3,0)

"^DD",810.9,810.90022,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",810.9,810.90022,0,"DT")
3050616
"^DD",810.9,810.90022,0,"NM","EDIT COMMENTS")

"^DD",810.9,810.90022,0,"UP")
810.9002
"^DD",810.9,810.90022,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",810.9,810.90022,.01,3)
Enter your edit comments.
"^DD",810.9,810.90022,.01,"DT")
3050616
"^DD",810.9,810.91,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",810.9,810.91,0,"DT")
3040824
"^DD",810.9,810.91,0,"NM","DESCRIPTION")

"^DD",810.9,810.91,0,"UP")
810.9
"^DD",810.9,810.91,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",810.9,810.91,.01,"DT")
3040824
"^DD",810.9,810.944,0)
HOSPITAL LOCATION LIST SUB-FIELD^^.01^1
"^DD",810.9,810.944,0,"DT")
3021105
"^DD",810.9,810.944,0,"IX","B",810.944,.01)

"^DD",810.9,810.944,0,"NM","HOSPITAL LOCATION LIST")

"^DD",810.9,810.944,0,"UP")
810.9
"^DD",810.9,810.944,.01,0)
HOSPITAL LOCATION^MP44'^SC(^0;1^Q
"^DD",810.9,810.944,.01,1,0)
^.1
"^DD",810.9,810.944,.01,1,1,0)
810.944^B
"^DD",810.9,810.944,.01,1,1,1)
S ^PXRMD(810.9,DA(1),44,"B",$E(X,1,30),DA)=""
"^DD",810.9,810.944,.01,1,1,2)
K ^PXRMD(810.9,DA(1),44,"B",$E(X,1,30),DA)
"^DD",810.9,810.944,.01,3)
Enter a hospital location
"^DD",810.9,810.944,.01,"DT")
3021105
"^DD",811.4,811.4,0)
FIELD^^5^10
"^DD",811.4,811.4,0,"DDA")
N
"^DD",811.4,811.4,0,"DT")
3030813
"^DD",811.4,811.4,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(811.4,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",811.4,811.4,0,"NM","REMINDER COMPUTED FINDINGS")

"^DD",811.4,811.4,0,"PT",810.31,.04)

"^DD",811.4,811.4,0,"PT",810.32,.01)

"^DD",811.4,811.4,0,"PT",811.52,.01)

"^DD",811.4,811.4,0,"PT",811.902,.01)

"^DD",811.4,811.4,0,"VRPK")
PXRM
"^DD",811.4,811.4,.01,0)
NAME^RF^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.4)) X
"^DD",811.4,811.4,.01,1,0)
^.1^^0
"^DD",811.4,811.4,.01,3)
Answer must be 3-64 characters in length.
"^DD",811.4,811.4,.01,21,0)
^.001^2^2^3050117^^^^
"^DD",811.4,811.4,.01,21,1,0)
This is the name of the computed finding and is the name the User will
"^DD",811.4,811.4,.01,21,2,0)
use when adding a computed finding to a reminder definition or a term.
"^DD",811.4,811.4,.01,"DT")
3030813
"^DD",811.4,811.4,.02,0)
ROUTINE^F^^0;2^K:$L(X)>8!($L(X)<3) X
"^DD",811.4,811.4,.02,3)
Enter the M routine name.
"^DD",811.4,811.4,.02,8.5)
@
"^DD",811.4,811.4,.02,9)
@
"^DD",811.4,811.4,.02,21,0)
^.001^3^3^3050117^^^^
"^DD",811.4,811.4,.02,21,1,0)
This is the name of an M routine that contains the code for the
"^DD",811.4,811.4,.02,21,2,0)
computed finding. The entry point to use is specified in the ENTRY
"^DD",811.4,811.4,.02,21,3,0)
POINT field.
"^DD",811.4,811.4,.02,"DT")
2990526
"^DD",811.4,811.4,.03,0)
ENTRY POINT^F^^0;3^K:$L(X)>8!($L(X)<2) X
"^DD",811.4,811.4,.03,3)
Enter the entry point, must be 2-8 characters in length.
"^DD",811.4,811.4,.03,8.5)
@
"^DD",811.4,811.4,.03,9)
@
"^DD",811.4,811.4,.03,21,0)
^.001^2^2^3050117^^^^
"^DD",811.4,811.4,.03,21,1,0)
This is the entry point in the routine specified in the ROUTINE
"^DD",811.4,811.4,.03,21,2,0)
field.
"^DD",811.4,811.4,.03,"DT")
2990527
"^DD",811.4,811.4,.04,0)
PRINT NAME^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",811.4,811.4,.04,3)
Enter the PRINT NAME, up to 40 characters.
"^DD",811.4,811.4,.04,21,0)
^.001^2^2^3050117^^^
"^DD",811.4,811.4,.04,21,1,0)
The PRINT NAME will be displayed in the Clinical Maintenance output for
"^DD",811.4,811.4,.04,21,2,0)
computed findings.
"^DD",811.4,811.4,.04,"DT")
3000113
"^DD",811.4,811.4,1,0)
DESCRIPTION^811.41^^1;0
"^DD",811.4,811.4,1,21,0)
^.001^3^3^3050117^^^^
"^DD",811.4,811.4,1,21,1,0)
This is the description of the computed finding. It should explain its
"^DD",811.4,811.4,1,21,2,0)
purpose and how it is to be used including what data is returned for
"^DD",811.4,811.4,1,21,3,0)
use in a Condition.
"^DD",811.4,811.4,5,0)
TYPE^S^M:MULTIPLE;L:LIST;S:SINGLE;^0;5^Q
"^DD",811.4,811.4,5,21,0)
^^4^4^3050117^
"^DD",811.4,811.4,5,21,1,0)
This is the type of computed finding; the possible values are "S" for
"^DD",811.4,811.4,5,21,2,0)
single, "M" for multiple, and "L" for list. The default value is "S".
"^DD",811.4,811.4,5,21,3,0)
For a detailed explanation of the computed finding types see the
"^DD",811.4,811.4,5,21,4,0)
Clinical Reminder Manager manual.
"^DD",811.4,811.4,5,"DT")
3030129
"^DD",811.4,811.4,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.4,811.4,100,3)
Enter the class.
"^DD",811.4,811.4,100,21,0)
^.001^4^4^3050117^^^^
"^DD",811.4,811.4,100,21,1,0)
This is the class of computed finding. Possible values are "N" for
"^DD",811.4,811.4,100,21,2,0)
national, "V" for VISN, and "L" for local. National computed findings
"^DD",811.4,811.4,100,21,3,0)
will be  prefixed with VA- and cannot be edited. Local or VISN entry
"^DD",811.4,811.4,100,21,4,0)
names cannot  start with VA-.
"^DD",811.4,811.4,100,"DT")
3010518
"^DD",811.4,811.4,101,0)
SPONSOR^P811.6^PXRMD(811.6,^100;2^Q
"^DD",811.4,811.4,101,3)
Enter the sponsor.
"^DD",811.4,811.4,101,21,0)
^.001^1^1^3050117^^
"^DD",811.4,811.4,101,21,1,0)
This is the organization or group that sponsors this computed finding.
"^DD",811.4,811.4,101,"DT")
3010419
"^DD",811.4,811.4,102,0)
REVIEW DATE^D^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.4,811.4,102,3)
Enter the review date.
"^DD",811.4,811.4,102,21,0)
^.001^4^4^3050117^^
"^DD",811.4,811.4,102,21,1,0)
The REVIEW DATE is used to determine when the computed finding should
"^DD",811.4,811.4,102,21,2,0)
be reviewed to verify that it is current with the latest standards and
"^DD",811.4,811.4,102,21,3,0)
guidelines. You can find all computed findings whose review date has
"^DD",811.4,811.4,102,21,4,0)
passed using the Reminder Review Date report.
"^DD",811.4,811.4,102,"DT")
3010419
"^DD",811.4,811.4,110,0)
EDIT HISTORY^811.42D^^110;0
"^DD",811.4,811.4,110,21,0)
^.001^2^2^3050117^^^^
"^DD",811.4,811.4,110,21,1,0)
This multiple is used to record a history of changes made to the
"^DD",811.4,811.4,110,21,2,0)
computed finding.
"^DD",811.4,811.41,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.4,811.41,0,"DT")
3000405
"^DD",811.4,811.41,0,"NM","DESCRIPTION")

"^DD",811.4,811.41,0,"UP")
811.4
"^DD",811.4,811.41,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.4,811.41,.01,3)
Enter a description for this computed finding.
"^DD",811.4,811.41,.01,"DT")
3000405
"^DD",811.4,811.42,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",811.4,811.42,0,"DT")
3010419
"^DD",811.4,811.42,0,"IX","B",811.42,.01)

"^DD",811.4,811.42,0,"NM","EDIT HISTORY")

"^DD",811.4,811.42,0,"UP")
811.4
"^DD",811.4,811.42,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.4,811.42,.01,1,0)
^.1
"^DD",811.4,811.42,.01,1,1,0)
811.42^B
"^DD",811.4,811.42,.01,1,1,1)
S ^PXRMD(811.4,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",811.4,811.42,.01,1,1,2)
K ^PXRMD(811.4,DA(1),110,"B",$E(X,1,30),DA)
"^DD",811.4,811.42,.01,21,0)
^.001^2^2^3050117^^
"^DD",811.4,811.42,.01,21,1,0)
This is the date and time when editing was done. This field is set
"^DD",811.4,811.42,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",811.4,811.42,.01,"DT")
3010419
"^DD",811.4,811.42,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",811.4,811.42,1,21,0)
^.001^2^2^3050117^^
"^DD",811.4,811.42,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",811.4,811.42,1,21,2,0)
and should not be changed by the user.
"^DD",811.4,811.42,1,"DT")
3010419
"^DD",811.4,811.42,2,0)
EDIT COMMENTS^811.422^^1;0
"^DD",811.4,811.42,2,21,0)
^.001^2^2^3050117^^^
"^DD",811.4,811.42,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",811.4,811.42,2,21,2,0)
during the editing session.
"^DD",811.4,811.42,2,"DT")
3010425
"^DD",811.4,811.422,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",811.4,811.422,0,"DT")
3010419
"^DD",811.4,811.422,0,"NM","EDIT COMMENTS")

"^DD",811.4,811.422,0,"UP")
811.42
"^DD",811.4,811.422,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",811.4,811.422,.01,3)
Enter your edit comments.
"^DD",811.4,811.422,.01,"DT")
3010425
"^DD",811.5,811.5,0)
FIELD^^110^8
"^DD",811.5,811.5,0,"DDA")
N
"^DD",811.5,811.5,0,"DT")
3060127
"^DD",811.5,811.5,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(811.5,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",811.5,811.5,0,"NM","REMINDER TERM")

"^DD",811.5,811.5,0,"PT",801.41,116)

"^DD",811.5,811.5,0,"PT",810.31,.03)

"^DD",811.5,811.5,0,"PT",810.31,.04)

"^DD",811.5,811.5,0,"PT",810.32,.01)

"^DD",811.5,811.5,0,"PT",810.331,.02)

"^DD",811.5,811.5,0,"PT",810.4,1)

"^DD",811.5,811.5,0,"PT",810.801,1)

"^DD",811.5,811.5,0,"PT",811.902,.01)

"^DD",811.5,811.5,0,"VRPK")
PXRM
"^DD",811.5,811.5,.01,0)
NAME^RF^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",811.5,811.5,.01,1,0)
^.1^^0
"^DD",811.5,811.5,.01,3)
Enter the name of the term, up to 64 characters.
"^DD",811.5,811.5,.01,21,0)
^.001^2^2^3050124^^^^
"^DD",811.5,811.5,.01,21,1,0)
This is the name of the term. The names of national terms are prefixed
"^DD",811.5,811.5,.01,21,2,0)
with "VA-".
"^DD",811.5,811.5,.01,"DT")
3040308
"^DD",811.5,811.5,.04,0)
DATE CREATED^RD^^0;4^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.5,.04,21,0)
^.001^1^1^3050124^^^^
"^DD",811.5,811.5,.04,21,1,0)
This is the date when the term was created.
"^DD",811.5,811.5,.04,"DT")
3000505
"^DD",811.5,811.5,1,0)
DESCRIPTION^811.51^^1;0
"^DD",811.5,811.5,1,21,0)
^.001^1^1^3050124^^^
"^DD",811.5,811.5,1,21,1,0)
This is a description of the term.
"^DD",811.5,811.5,20,0)
FINDINGS^811.52V^^20;0
"^DD",811.5,811.5,20,21,0)
^.001^4^4^3060509^^^^
"^DD",811.5,811.5,20,21,1,0)
This multiple identifies which finding items have been selected to
"^DD",811.5,811.5,20,21,2,0)
represent the term. If there is more than one finding item, they will
"^DD",811.5,811.5,20,21,3,0)
all be evaluated and the most recent finding will represent the
"^DD",811.5,811.5,20,21,4,0)
term.
"^DD",811.5,811.5,20,"DT")
2990914
"^DD",811.5,811.5,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.5,811.5,100,3)
Enter the CLASS.
"^DD",811.5,811.5,100,21,0)
^.001^3^3^3050124^^^^
"^DD",811.5,811.5,100,21,1,0)
This is the class of the term. Possible classes are "N" for national,
"^DD",811.5,811.5,100,21,2,0)
"V" for VISN, and "L" for local. For national terms, only the finding
"^DD",811.5,811.5,100,21,3,0)
list can be edited.
"^DD",811.5,811.5,100,"DT")
3010518
"^DD",811.5,811.5,101,0)
SPONSOR^P811.6^PXRMD(811.6,^100;2^Q
"^DD",811.5,811.5,101,3)
Enter the SPONSOR.
"^DD",811.5,811.5,101,21,0)
^.001^2^2^3050124^^^^
"^DD",811.5,811.5,101,21,1,0)
This is the organization, group, or individual that sponsors this
"^DD",811.5,811.5,101,21,2,0)
definition.
"^DD",811.5,811.5,101,"DT")
3010427
"^DD",811.5,811.5,102,0)
REVIEW DATE^D^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.5,102,3)
Enter the REVIEW DATE.
"^DD",811.5,811.5,102,21,0)
^.001^4^4^3050124^^^
"^DD",811.5,811.5,102,21,1,0)
Review Date is used to determine when the term should be reviewed to
"^DD",811.5,811.5,102,21,2,0)
verify that it is current with the latest standards and guidelines. You
"^DD",811.5,811.5,102,21,3,0)
can find all terms whose review date has passed using the Clinical
"^DD",811.5,811.5,102,21,4,0)
Reminder Review Date Report. 
"^DD",811.5,811.5,102,"DT")
3010419
"^DD",811.5,811.5,110,0)
EDIT HISTORY^811.53D^^110;0
"^DD",811.5,811.5,110,21,0)
^.001^1^1^3050124^^^
"^DD",811.5,811.5,110,21,1,0)
This multiple is used to record a history of changes made to the term.
"^DD",811.5,811.51,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.5,811.51,0,"DT")
2990512
"^DD",811.5,811.51,0,"NM","DESCRIPTION")

"^DD",811.5,811.51,0,"UP")
811.5
"^DD",811.5,811.51,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.5,811.51,.01,3)
Enter the description of the term.
"^DD",811.5,811.51,.01,"DT")
2990512
"^DD",811.5,811.52,0)
FINDINGS SUB-FIELD^^28^17
"^DD",811.5,811.52,0,"DT")
3060127
"^DD",811.5,811.52,0,"IX","B",811.52,.01)

"^DD",811.5,811.52,0,"IX","E",811.52,.01)

"^DD",811.5,811.52,0,"NM","FINDINGS")

"^DD",811.5,811.52,0,"UP")
811.5
"^DD",811.5,811.52,.01,0)
FINDING ITEM^MVX^^0;1^K:'$$VFINDING^PXRMINTR(X) X
"^DD",811.5,811.52,.01,1,0)
^.1
"^DD",811.5,811.52,.01,1,1,0)
811.52^B
"^DD",811.5,811.52,.01,1,1,1)
S ^PXRMD(811.5,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",811.5,811.52,.01,1,1,2)
K ^PXRMD(811.5,DA(1),20,"B",$E(X,1,30),DA)
"^DD",811.5,811.52,.01,1,1,3)
Required Index for Variable Pointer
"^DD",811.5,811.52,.01,1,2,0)
811.52^E^MUMPS
"^DD",811.5,811.52,.01,1,2,1)
D SENODE^PXRMENOD(.X,.DA,811.5)
"^DD",811.5,811.52,.01,1,2,2)
D KENODE^PXRMENOD(.X,.DA,811.5)
"^DD",811.5,811.52,.01,1,2,"%D",0)
^.101^15^15^3060421^^^
"^DD",811.5,811.52,.01,1,2,"%D",1,0)
This cross-reference is used to group findings by type. The index it
"^DD",811.5,811.52,.01,1,2,"%D",2,0)
creates has the form:
"^DD",811.5,811.52,.01,1,2,"%D",3,0)
 ^PXRMD(811.5,DA(1),20,"E",GLOBAL,IEN,DA)
"^DD",811.5,811.52,.01,1,2,"%D",4,0)
 where 
"^DD",811.5,811.52,.01,1,2,"%D",5,0)
  DA(1) is the internal entry number in file # 811.5.
"^DD",811.5,811.52,.01,1,2,"%D",6,0)
  GLOBAL is the global name of the global that defines the finding.
"^DD",811.5,811.52,.01,1,2,"%D",7,0)
   For example, the global name for file #811.5 is ^PXRMD(811.5,.
"^DD",811.5,811.52,.01,1,2,"%D",8,0)
  IEN is the internal entry number of the finding in GLOBAL.
"^DD",811.5,811.52,.01,1,2,"%D",9,0)
  DA is the finding number.
"^DD",811.5,811.52,.01,1,2,"%D",10,0)

"^DD",811.5,811.52,.01,1,2,"%D",11,0)
Some examples:
"^DD",811.5,811.52,.01,1,2,"%D",12,0)
 ^PXRMD(811.5,2,20,"E","AUTTHF(",73,1)=
"^DD",811.5,811.52,.01,1,2,"%D",13,0)
 ^PXRMD(811.5,7,20,"E","PXD(811.2,",2,1)=
"^DD",811.5,811.52,.01,1,2,"%D",14,0)
 ^PXRMD(811.5,10,20,"E","PSNDF(50.6,",183,1)=
"^DD",811.5,811.52,.01,1,2,"%D",15,0)

"^DD",811.5,811.52,.01,1,2,"DT")
3060417
"^DD",811.5,811.52,.01,3)
Enter a finding item in the format: Prefix.Name
"^DD",811.5,811.52,.01,21,0)
^.001^2^2^3050124^^^
"^DD",811.5,811.52,.01,21,1,0)
This field identifies the finding items included in the reminder
"^DD",811.5,811.52,.01,21,2,0)
term.
"^DD",811.5,811.52,.01,"DT")
3060417
"^DD",811.5,811.52,.01,"V",0)
^.12P^16^16
"^DD",811.5,811.52,.01,"V",1,0)
50^DRUG^5^DR^n^n
"^DD",811.5,811.52,.01,"V",2,0)
9999999.09^EDUCATION TOPIC^10^ED^n^n
"^DD",811.5,811.52,.01,"V",3,0)
9999999.15^EXAM^15^EX^n^n
"^DD",811.5,811.52,.01,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^n^n
"^DD",811.5,811.52,.01,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^n^n
"^DD",811.5,811.52,.01,"V",6,0)
60^LABORATORY TEST^30^LT^n^n
"^DD",811.5,811.52,.01,"V",7,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^n^n
"^DD",811.5,811.52,.01,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^n^n
"^DD",811.5,811.52,.01,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^n^n
"^DD",811.5,811.52,.01,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^n^n
"^DD",811.5,811.52,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^n^n
"^DD",811.5,811.52,.01,"V",12,0)
9999999.28^SKIN TEST^65^ST^n^n
"^DD",811.5,811.52,.01,"V",13,0)
50.605^VA DRUG CLASS^70^DC^n^n
"^DD",811.5,811.52,.01,"V",14,0)
50.6^VA GENERIC^75^DG^n^n
"^DD",811.5,811.52,.01,"V",15,0)
120.51^VITAL MEASUREMENT^80^VM^n^n
"^DD",811.5,811.52,.01,"V",16,0)
810.9^REMINDER LOCATION LIST^16^RL^n^n
"^DD",811.5,811.52,9,0)
BEGINNING DATE/TIME^FX^^0;8^S X=$$COTN^PXRMDATE(X) K:(($L(X)<1)!($L(X)>20)!('$$VDT^PXRMINTR(X))) X
"^DD",811.5,811.52,9,3)
Enter the Beginning Date/Time
"^DD",811.5,811.52,9,21,0)
^.001^14^14^3050124^^^^
"^DD",811.5,811.52,9,21,1,0)
This is the beginning date/time to search for the finding. When
"^DD",811.5,811.52,9,21,2,0)
combined with the ENDING DATE/TIME, they define a date range in
"^DD",811.5,811.52,9,21,3,0)
which to search for the finding.
"^DD",811.5,811.52,9,21,4,0)

"^DD",811.5,811.52,9,21,5,0)
This can be entered in acceptable FileMan date/time formats and
"^DD",811.5,811.52,9,21,6,0)
abbreviations. In addition, you may use the abbreviations T-NY or
"^DD",811.5,811.52,9,21,7,0)
NOW-NY, where N is an integer and Y stands for years. If this is
"^DD",811.5,811.52,9,21,8,0)
null, then the beginning date/time will correspond with the 
"^DD",811.5,811.52,9,21,9,0)
date/time of the oldest entry.
"^DD",811.5,811.52,9,21,10,0)

"^DD",811.5,811.52,9,21,11,0)
See the FileMan Getting Started Manual to learn about acceptable
"^DD",811.5,811.52,9,21,12,0)
FileMan date/time formats and abbreviations.
"^DD",811.5,811.52,9,21,13,0)

"^DD",811.5,811.52,9,21,14,0)

"^DD",811.5,811.52,9,"DT")
3040924
"^DD",811.5,811.52,10,0)
USE INACTIVE PROBLEMS^S^1:YES;0:NO;^0;9^Q
"^DD",811.5,811.52,10,3)
Enter a 1 or YES if you want inactive problems used.
"^DD",811.5,811.52,10,21,0)
^.001^5^5^3050124^^^
"^DD",811.5,811.52,10,21,1,0)
Normally only active problems from the Problem List will be used in the
"^DD",811.5,811.52,10,21,2,0)
reminder evaluation. If USE INACTIVE PROBLEMS is set to YES, then both
"^DD",811.5,811.52,10,21,3,0)
active and inactive problems will be used. Note that this field applies
"^DD",811.5,811.52,10,21,4,0)
only to taxonomy findings.
"^DD",811.5,811.52,10,21,5,0)

"^DD",811.5,811.52,10,"DT")
3000314
"^DD",811.5,811.52,11,0)
WITHIN CATEGORY RANK^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.5,811.52,11,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",811.5,811.52,11,21,0)
^.001^17^17^3050124^^^^
"^DD",811.5,811.52,11,21,1,0)
This field applies only to health factors. In order to understand how
"^DD",811.5,811.52,11,21,2,0)
it works, you need to understand how health factors work in the
"^DD",811.5,811.52,11,21,3,0)
reminder evaluation process. If you are not clear about this, see the
"^DD",811.5,811.52,11,21,4,0)
health factor section of the Clinical Reminders Manager Manual.
"^DD",811.5,811.52,11,21,5,0)

"^DD",811.5,811.52,11,21,6,0)
The default behavior is to use only the most recent health factor
"^DD",811.5,811.52,11,21,7,0)
within a category. A problem can arise if there are two or more health
"^DD",811.5,811.52,11,21,8,0)
factors within a category and they both have the same date. (This can
"^DD",811.5,811.52,11,21,9,0)
happen if both health factors are given during the same encounter). 
"^DD",811.5,811.52,11,21,10,0)
When the dates are the same, the health factor with the highest WITHIN
"^DD",811.5,811.52,11,21,11,0)
CATEGORY RANK will be used. This is a numerical value like RANK
"^DD",811.5,811.52,11,21,12,0)
FREQUENCY, with 1 being the highest rank.
"^DD",811.5,811.52,11,21,13,0)

"^DD",811.5,811.52,11,21,14,0)
If WITHIN CATEGORY RANK has the special value of 0, then the
"^DD",811.5,811.52,11,21,15,0)
categorization of health factors will be ignored and the health factor
"^DD",811.5,811.52,11,21,16,0)
will be treated as a distinct finding.
"^DD",811.5,811.52,11,21,17,0)

"^DD",811.5,811.52,11,"DT")
3000505
"^DD",811.5,811.52,12,0)
ENDING DATE/TIME^FX^^0;11^S X=$$COTN^PXRMDATE(X) K:(($L(X)<1)!($L(X)>20)!('$$VDT^PXRMINTR(X))) X
"^DD",811.5,811.52,12,3)
Enter the Ending Date/Time
"^DD",811.5,811.52,12,21,0)
^.001^15^15^3050124^^^^
"^DD",811.5,811.52,12,21,1,0)
This is the ending date/time to search for findings. When combined
"^DD",811.5,811.52,12,21,2,0)
with the BEGINNING DATE/TIME, they define a date range in which to
"^DD",811.5,811.52,12,21,3,0)
search for the finding. The ENDING DATE/TIME must be after the
"^DD",811.5,811.52,12,21,4,0)
BEGINNING DATE/TIME.
"^DD",811.5,811.52,12,21,5,0)

"^DD",811.5,811.52,12,21,6,0)
This can be entered in acceptable FileMan date/time formats and
"^DD",811.5,811.52,12,21,7,0)
abbreviations. In addition, you may use the abbreviations T-NY or 
"^DD",811.5,811.52,12,21,8,0)
NOW-NY, where N is an integer and Y stands for years. If this is null,
"^DD",811.5,811.52,12,21,9,0)
then the end date/time will correspond with the date/time of the
"^DD",811.5,811.52,12,21,10,0)
most recent entry.  
"^DD",811.5,811.52,12,21,11,0)
                                 
"^DD",811.5,811.52,12,21,12,0)
See the FileMan Getting Started Manual to learn about acceptable
"^DD",811.5,811.52,12,21,13,0)
FileMan date/time formats and abbreviations.
"^DD",811.5,811.52,12,21,14,0)

"^DD",811.5,811.52,12,21,15,0)

"^DD",811.5,811.52,12,"DT")
3040924
"^DD",811.5,811.52,13,0)
MH SCALE^FX^^0;12^K:(($L(X)>79)!($L(X)<1)!('$$VSCALET^PXRMMH(X))) X
"^DD",811.5,811.52,13,3)
Enter the scale number or scale name.
"^DD",811.5,811.52,13,4)
D SCHELPT^PXRMMH
"^DD",811.5,811.52,13,21,0)
^.001^3^3^3050124^^
"^DD",811.5,811.52,13,21,1,0)
This applies only to Mental Health Instrument findings. It specifies
"^DD",811.5,811.52,13,21,2,0)
which scale to use when scoring the test.
"^DD",811.5,811.52,13,21,3,0)

"^DD",811.5,811.52,13,"DT")
3030423
"^DD",811.5,811.52,14,0)
CONDITION^FX^^3;1^K:($L(X)<3)!($L(X)>225)!('$$VCOND^PXRMCOND(X)) X
"^DD",811.5,811.52,14,3)
Answer must be 3-225 characters in length.
"^DD",811.5,811.52,14,21,0)
^.001^49^49^3050124^^^^
"^DD",811.5,811.52,14,21,1,0)
The CONDITION must be written in M code based on the value returned from
"^DD",811.5,811.52,14,21,2,0)
the patient results for the finding. Each type of finding has a specific
"^DD",811.5,811.52,14,21,3,0)
field that provides the value available to use in the CONDITION logic.
"^DD",811.5,811.52,14,21,4,0)
If the finding value is text, enclose the condition value in quotes 
"^DD",811.5,811.52,14,21,5,0)
(e.g., "positive"). If the finding value is numeric, do not use quotes
"^DD",811.5,811.52,14,21,6,0)
(e.g., 3).
"^DD",811.5,811.52,14,21,7,0)
 
"^DD",811.5,811.52,14,21,8,0)
An IF statement is used to evaluate the value.  The value is always
"^DD",811.5,811.52,14,21,9,0)
identified as V in the statement, regardless of the type of finding. If 
"^DD",811.5,811.52,14,21,10,0)
the condition logic statement evaluates to true, the finding is 
"^DD",811.5,811.52,14,21,11,0)
considered as found (true); otherwise the finding is considered as not
"^DD",811.5,811.52,14,21,12,0)
found (false).
"^DD",811.5,811.52,14,21,13,0)
 
"^DD",811.5,811.52,14,21,14,0)
Relational operators that may be used include: = equals, < less than, >
"^DD",811.5,811.52,14,21,15,0)
greater than, [ contains, ] follows and ? pattern matches. Logical
"^DD",811.5,811.52,14,21,16,0)
operators may be used to check multiple values: & And, ! Or, ' Not. 
"^DD",811.5,811.52,14,21,17,0)
         
"^DD",811.5,811.52,14,21,18,0)
Typical examples of M code are as follows:
"^DD",811.5,811.52,14,21,19,0)
    I V=3 for Education Topic's Level of Understanding = 3
"^DD",811.5,811.52,14,21,20,0)
    I V="H" for Health Factor's Level/Severity="H"
"^DD",811.5,811.52,14,21,21,0)
    I ($P(V,"/",1)>140)&($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.5,811.52,14,21,22,0)
    systolic and diastolic values
"^DD",811.5,811.52,14,21,23,0)
    I ($P(V,"/",1)>140)!($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.5,811.52,14,21,24,0)
    systolic or diastolic values
"^DD",811.5,811.52,14,21,25,0)
    I V["BLACK" for VA-RACE computed finding where race contains BLACK
"^DD",811.5,811.52,14,21,26,0)
 
"^DD",811.5,811.52,14,21,27,0)
Below is a brief summary for each finding type, the related field to use
"^DD",811.5,811.52,14,21,28,0)
for the value, and examples:
"^DD",811.5,811.52,14,21,29,0)
 
"^DD",811.5,811.52,14,21,30,0)
Finding type                Field Value Used        Example M Code
"^DD",811.5,811.52,14,21,31,0)
 
"^DD",811.5,811.52,14,21,32,0)
 Drug                       None
"^DD",811.5,811.52,14,21,33,0)
 Education Topic            Level of understanding  I V=3
"^DD",811.5,811.52,14,21,34,0)
 Exam                       Result                  I V="N"
"^DD",811.5,811.52,14,21,35,0)
 Health Factor              Level/severity          I V="H"
"^DD",811.5,811.52,14,21,36,0)
 Immunization               Series                  I V="P"
"^DD",811.5,811.52,14,21,37,0)
 Laboratory Test            Result Value            I V>130
"^DD",811.5,811.52,14,21,38,0)
 Mental Health Instrument   Raw score               I V=1
"^DD",811.5,811.52,14,21,39,0)
 Orderable Item             Status                  I V="complete"
"^DD",811.5,811.52,14,21,40,0)
 Radiology Procedure        None
"^DD",811.5,811.52,14,21,41,0)
 Reminder Computed Finding  Determined by programmer-See Manager Manual
"^DD",811.5,811.52,14,21,42,0)
 Reminder Taxonomy          None
"^DD",811.5,811.52,14,21,43,0)
 Skin Test                  Result                  I V="N"
"^DD",811.5,811.52,14,21,44,0)
 VA Drug Class              None
"^DD",811.5,811.52,14,21,45,0)
 VA Generic                 None
"^DD",811.5,811.52,14,21,46,0)
 Vital Measurement          Rate                    I V>27
"^DD",811.5,811.52,14,21,47,0)
 
"^DD",811.5,811.52,14,21,48,0)
For details about allowed CONDITIONS for each finding type, see the
"^DD",811.5,811.52,14,21,49,0)
Clinical Reminders Manager Manual.
"^DD",811.5,811.52,14,"DT")
3030923
"^DD",811.5,811.52,15,0)
CONDITION CASE SENSITIVE^S^0:NO;1:YES;^3;2^Q
"^DD",811.5,811.52,15,3)
Enter NO to make the condition case insensitive.
"^DD",811.5,811.52,15,21,0)
^.001^3^3^3050124^^^^
"^DD",811.5,811.52,15,21,1,0)
When CONDITION CASE SENSITIVE is NO, then the CONDITION will be
"^DD",811.5,811.52,15,21,2,0)
evaluated without regard to case. The default is YES, so that CONDITION
"^DD",811.5,811.52,15,21,3,0)
evaluation is case sensitive.  
"^DD",811.5,811.52,15,"DT")
3040907
"^DD",811.5,811.52,16,0)
RXTYPE^FX^^0;13^S X=$$UP^XLFSTR(X) K:($L(X)>20)!($L(X)<1)!('$$VRXTYPE^PXRMRXTY(X)) X
"^DD",811.5,811.52,16,3)
Enter the RXTYPE string.
"^DD",811.5,811.52,16,4)
D RXTYXHLP^PXRMRXTY
"^DD",811.5,811.52,16,21,0)
^.001^6^6^3050124^^^^
"^DD",811.5,811.52,16,21,1,0)
RXTYPE applies only to drug findings; it controls the search for
"^DD",811.5,811.52,16,21,2,0)
patient medications. The possible values for RXTYPE are "I" for
"^DD",811.5,811.52,16,21,3,0)
inpatient, "N" for non-VA meds, and "O" for outpatient. RXTYPE can
"^DD",811.5,811.52,16,21,4,0)
be any combination of these, such as "NO", which will search for
"^DD",811.5,811.52,16,21,5,0)
non-VA meds and outpatient medications. If RXTYPE is blank, it is
"^DD",811.5,811.52,16,21,6,0)
equivalent to a value of "INO".
"^DD",811.5,811.52,16,"DT")
3040719
"^DD",811.5,811.52,17,0)
OCCURRENCE COUNT^NJ2,0^^0;14^K:+X'=X!(X>99)!(X<-99)!(X?.E1"."1N.N) X
"^DD",811.5,811.52,17,3)
Type a Number between -99 and 99, 0 Decimal Digits
"^DD",811.5,811.52,17,21,0)
^.001^8^8^3050124^^^^
"^DD",811.5,811.52,17,21,1,0)
This is the maximum number of occurrences of the finding in the date
"^DD",811.5,811.52,17,21,2,0)
range to return. If the OCCURRENCE COUNT is input as a positive number,
"^DD",811.5,811.52,17,21,3,0)
N, up to N of the most recent occurrences will be returned and the
"^DD",811.5,811.52,17,21,4,0)
finding will take the value of the most recent occurrence. If the
"^DD",811.5,811.52,17,21,5,0)
OCCURRENCE COUNT is input as a negative number, then this behavior is
"^DD",811.5,811.52,17,21,6,0)
reversed. Up to N of the oldest occurrences will be returned and the
"^DD",811.5,811.52,17,21,7,0)
finding will take the value of the oldest occurrence in the list.
"^DD",811.5,811.52,17,21,8,0)

"^DD",811.5,811.52,17,"DT")
3040513
"^DD",811.5,811.52,18,0)
USE STATUS/COND IN SEARCH^S^1:YES;0:NO;^3;3^Q
"^DD",811.5,811.52,18,3)
Enter a "Yes" if you want the STATUS LIST and/or CONDITION used in the finding search.
"^DD",811.5,811.52,18,21,0)
^.001^11^11^3060509^^^^
"^DD",811.5,811.52,18,21,1,0)
Give this field a value of "YES" if you want the STATUS LIST and/or
"^DD",811.5,811.52,18,21,2,0)
CONDITION applied to each result found in the date range for this 
"^DD",811.5,811.52,18,21,3,0)
finding. Only results that have a status on the list or for which
"^DD",811.5,811.52,18,21,4,0)
the CONDITION is true will be retained. The maximum number to retain
"^DD",811.5,811.52,18,21,5,0)
is specified by the OCCURRENCE COUNT.  
"^DD",811.5,811.52,18,21,6,0)
                                 
"^DD",811.5,811.52,18,21,7,0)
Note - if the finding has both a STATUS LIST and a CONDITION the
"^DD",811.5,811.52,18,21,8,0)
status check will be made first; the CONDITION will be applied only
"^DD",811.5,811.52,18,21,9,0)
if the finding passes the status check.  
"^DD",811.5,811.52,18,21,10,0)

"^DD",811.5,811.52,18,21,11,0)

"^DD",811.5,811.52,18,"DT")
3060509
"^DD",811.5,811.52,21,0)
STATUS LIST^811.54^^5;0
"^DD",811.5,811.52,21,9)
^
"^DD",811.5,811.52,21,21,0)
^.001^6^6^3050124^^^^
"^DD",811.5,811.52,21,21,1,0)
This field applies to finding types that have an associated status.
"^DD",811.5,811.52,21,21,2,0)
When the search for patient findings is done, only those findings that
"^DD",811.5,811.52,21,21,3,0)
have a status on the list can be true. The allowable values depend on
"^DD",811.5,811.52,21,21,4,0)
the finding type. If no statuses are specified, then the default list
"^DD",811.5,811.52,21,21,5,0)
for each finding type will be used. The default lists can be found in
"^DD",811.5,811.52,21,21,6,0)
the Clinical Reminders Manager Manual.
"^DD",811.5,811.52,22,0)
INTERNAL CONDITION^F^^10;1^K:$L(X)>245!($L(X)<3) X
"^DD",811.5,811.52,22,3)
Do not edit this field.
"^DD",811.5,811.52,22,21,0)
^^3^3^3050124^
"^DD",811.5,811.52,22,21,1,0)
This is the internal form of the condition. It is set automatically and
"^DD",811.5,811.52,22,21,2,0)
should never be set by hand.
"^DD",811.5,811.52,22,21,3,0)

"^DD",811.5,811.52,22,"DT")
3050124
"^DD",811.5,811.52,23,0)
V SUBSCRIPT LIST^F^^11;1^K:$L(X)>245!($L(X)<1) X
"^DD",811.5,811.52,23,3)
Do not edit this field.
"^DD",811.5,811.52,23,21,0)
^^4^4^3050124^
"^DD",811.5,811.52,23,21,1,0)
This is a list of V value subscripts used in the CONDITION. It is used
"^DD",811.5,811.52,23,21,2,0)
when the CONDITION is not case sensitive. This should never be set by
"^DD",811.5,811.52,23,21,3,0)
hand.
"^DD",811.5,811.52,23,21,4,0)

"^DD",811.5,811.52,23,"DT")
3050124
"^DD",811.5,811.52,26,0)
COMPUTED FINDING PARAMETER^F^^15;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",811.5,811.52,26,3)
Answer must be 1-245 characters in length.
"^DD",811.5,811.52,26,21,0)
^^1^1^3050124^
"^DD",811.5,811.52,26,21,1,0)
This field is used to pass a parameter into the computed finding.
"^DD",811.5,811.52,26,"DT")
3050124
"^DD",811.5,811.52,27,0)
USE START DATE^S^0:NO;1:YES;^0;15^Q
"^DD",811.5,811.52,27,3)
Enter YES if you want to use the Start Date as the date of the finding
"^DD",811.5,811.52,27,21,0)
^.001^5^5^3050808^^^
"^DD",811.5,811.52,27,21,1,0)
For findings that have a Start Date and a Stop Date the default is
"^DD",811.5,811.52,27,21,2,0)
to use the Stop Date as the date of the finding. Enter a YES for
"^DD",811.5,811.52,27,21,3,0)
this field if you want to use the Start Date as the date of the
"^DD",811.5,811.52,27,21,4,0)
finding.
"^DD",811.5,811.52,27,21,5,0)

"^DD",811.5,811.52,27,"DT")
3050708
"^DD",811.5,811.52,28,0)
INCLUDE VISIT DATA^S^0:NO;1:YES;^0;16^Q
"^DD",811.5,811.52,28,3)
Enter YES or NO
"^DD",811.5,811.52,28,21,0)
^.001^4^4^3060127^^
"^DD",811.5,811.52,28,21,1,0)
This applies only to V file findings; if it is "YES" then data from
"^DD",811.5,811.52,28,21,2,0)
the associated visit will be available for use in a Condition. The
"^DD",811.5,811.52,28,21,3,0)
default is "NO."
"^DD",811.5,811.52,28,21,4,0)

"^DD",811.5,811.52,28,"DT")
3060127
"^DD",811.5,811.53,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",811.5,811.53,0,"DT")
3010419
"^DD",811.5,811.53,0,"IX","B",811.53,.01)

"^DD",811.5,811.53,0,"NM","EDIT HISTORY")

"^DD",811.5,811.53,0,"UP")
811.5
"^DD",811.5,811.53,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.53,.01,1,0)
^.1
"^DD",811.5,811.53,.01,1,1,0)
811.53^B
"^DD",811.5,811.53,.01,1,1,1)
S ^PXRMD(811.5,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",811.5,811.53,.01,1,1,2)
K ^PXRMD(811.5,DA(1),110,"B",$E(X,1,30),DA)
"^DD",811.5,811.53,.01,3)
Do not edit this field.
"^DD",811.5,811.53,.01,21,0)
^.001^2^2^3050124^^^
"^DD",811.5,811.53,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",811.5,811.53,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",811.5,811.53,.01,"DT")
3010419
"^DD",811.5,811.53,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",811.5,811.53,1,3)
Do not edit this field.
"^DD",811.5,811.53,1,21,0)
^.001^2^2^3050124^^^
"^DD",811.5,811.53,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",811.5,811.53,1,21,2,0)
and should not be changed by the user.
"^DD",811.5,811.53,1,"DT")
3010419
"^DD",811.5,811.53,2,0)
EDIT COMMENTS^811.532^^1;0
"^DD",811.5,811.53,2,21,0)
^.001^2^2^3050124^^^
"^DD",811.5,811.53,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",811.5,811.53,2,21,2,0)
during the editing session.
"^DD",811.5,811.53,2,"DT")
3010425
"^DD",811.5,811.532,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",811.5,811.532,0,"DT")
3010419
"^DD",811.5,811.532,0,"NM","EDIT COMMENTS")

"^DD",811.5,811.532,0,"UP")
811.53
"^DD",811.5,811.532,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",811.5,811.532,.01,3)
Enter your edit comments.
"^DD",811.5,811.532,.01,"DT")
3010425
"^DD",811.5,811.54,0)
STATUS LIST SUB-FIELD^^.01^1
"^DD",811.5,811.54,0,"DT")
3050124
"^DD",811.5,811.54,0,"IX","B",811.54,.01)

"^DD",811.5,811.54,0,"NM","STATUS LIST")

"^DD",811.5,811.54,0,"UP")
811.52
"^DD",811.5,811.54,.01,0)
STATUS^MFX^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.5,811.54,.01,1,0)
^.1
"^DD",811.5,811.54,.01,1,1,0)
811.54^B
"^DD",811.5,811.54,.01,1,1,1)
S ^PXRMD(811.5,DA(2),20,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",811.5,811.54,.01,1,1,2)
K ^PXRMD(811.5,DA(2),20,DA(1),5,"B",$E(X,1,30),DA)
"^DD",811.5,811.54,.01,3)
Enter a status.
"^DD",811.5,811.54,.01,21,0)
^.001^10^10^3050124^^^^
"^DD",811.5,811.54,.01,21,1,0)
This multiple is used to store a list of possible statuses that the
"^DD",811.5,811.54,.01,21,2,0)
reminder will look for when evaluating a finding item. This field
"^DD",811.5,811.54,.01,21,3,0)
should only be populated if the finding item is a Drug, Radiology
"^DD",811.5,811.54,.01,21,4,0)
Procedure, Order, or Taxonomy. This field is designed to be
"^DD",811.5,811.54,.01,21,5,0)
populated only through the Reminder Definition/Term editors; this field
"^DD",811.5,811.54,.01,21,6,0)
should not be edited using FileMan. The reason for this is because
"^DD",811.5,811.54,.01,21,7,0)
each finding item can only have certain possible statuses assigned 
"^DD",811.5,811.54,.01,21,8,0)
to it. The editors will evaluate the finding items and allow the
"^DD",811.5,811.54,.01,21,9,0)
users to select a status only from an appropriate list of statuses
"^DD",811.5,811.54,.01,21,10,0)
for that finding item.
"^DD",811.5,811.54,.01,"DT")
3050124
"^DD",811.8,811.8,0)
FIELD^^130^9
"^DD",811.8,811.8,0,"DDA")
N
"^DD",811.8,811.8,0,"DT")
3050124
"^DD",811.8,811.8,0,"NM","REMINDER EXCHANGE")

"^DD",811.8,811.8,0,"SCR")
I 0>1
"^DD",811.8,811.8,0,"VRPK")
PXRM
"^DD",811.8,811.8,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",811.8,811.8,.01,.1)

"^DD",811.8,811.8,.01,1,0)
^.1^^0
"^DD",811.8,811.8,.01,3)
Do not edit this field.
"^DD",811.8,811.8,.01,21,0)
^.001^2^2^3050124^^^^
"^DD",811.8,811.8,.01,21,1,0)
This is the name of the entry in the Exchange File. It will be the same
"^DD",811.8,811.8,.01,21,2,0)
as the name of the reminder definition that was packed.
"^DD",811.8,811.8,.01,"DT")
3010601
"^DD",811.8,811.8,.02,0)
SOURCE^F^^0;2^K:$L(X)>64!($L(X)<3) X
"^DD",811.8,811.8,.02,3)
Do not edit this field.
"^DD",811.8,811.8,.02,21,0)
^.001^2^2^3050124^^
"^DD",811.8,811.8,.02,21,1,0)
This is the source of the packed reminder. It will contain the name of
"^DD",811.8,811.8,.02,21,2,0)
person who packed it and their site.
"^DD",811.8,811.8,.02,"DT")
3000706
"^DD",811.8,811.8,.03,0)
DATE PACKED^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.8,811.8,.03,3)
Do not edit this field.
"^DD",811.8,811.8,.03,21,0)
^.001^3^3^3050124^^^
"^DD",811.8,811.8,.03,21,1,0)
This is the date and time the reminder was originally packed. When a
"^DD",811.8,811.8,.03,21,2,0)
packed reminder is put into the Exchange File from a MailMan message or
"^DD",811.8,811.8,.03,21,3,0)
a host file, this will reflect the original packing date and time.
"^DD",811.8,811.8,.03,"DT")
3000712
"^DD",811.8,811.8,100,0)
PACKED REMINDER^811.801A^^100;0
"^DD",811.8,811.8,100,9)
@
"^DD",811.8,811.8,100,21,0)
^.001^1^1^3050126^^^^
"^DD",811.8,811.8,100,21,1,0)
This multiple stores the packed reminder definition in XML format.
"^DD",811.8,811.8,100,"DT")
3030312
"^DD",811.8,811.8,110,0)
DESCRIPTION^811.804^^110;0
"^DD",811.8,811.8,110,21,0)
^.001^4^4^3050124^^^^
"^DD",811.8,811.8,110,21,1,0)
This contains formatted information about the Exchange File entry. It
"^DD",811.8,811.8,110,21,2,0)
includes source information, a brief description, and keywords. This
"^DD",811.8,811.8,110,21,3,0)
information will be displayed when an entry is selected for possible
"^DD",811.8,811.8,110,21,4,0)
installation.
"^DD",811.8,811.8,115,0)
EXCHANGE TYPE^S^EXTRACT:EXTRACT;REMINDER:REMINDER;^115;1^Q
"^DD",811.8,811.8,115,21,0)
^.001^2^2^3050124^^^
"^DD",811.8,811.8,115,21,1,0)
EXCHANGE TYPE controls the display and installation order of the components
"^DD",811.8,811.8,115,21,2,0)
in the Exchange File entry.
"^DD",811.8,811.8,115,"DT")
3040730
"^DD",811.8,811.8,119,0)
NUMBER OF UNIQUE COMPONENTS^NJ6,0^^119;1^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.8,811.8,119,3)
Do not edit this field.
"^DD",811.8,811.8,119,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8,119,21,1,0)
This is the number of unique components in the packed reminder.
"^DD",811.8,811.8,119,"DT")
3030609
"^DD",811.8,811.8,120,0)
COMPONENT LIST^811.802A^^120;0
"^DD",811.8,811.8,120,21,0)
^.001^1^1^3050126^^^^
"^DD",811.8,811.8,120,21,1,0)
This is a list of components that are included in the packed reminder.
"^DD",811.8,811.8,130,0)
INSTALLATION HISTORY^811.803DA^^130;0
"^DD",811.8,811.8,130,21,0)
^.001^2^2^3050124^^^
"^DD",811.8,811.8,130,21,1,0)
This multiple is used to record a history of packed reminder
"^DD",811.8,811.8,130,21,2,0)
installations.
"^DD",811.8,811.801,0)
PACKED REMINDER SUB-FIELD^^.01^1
"^DD",811.8,811.801,0,"DT")
3030609
"^DD",811.8,811.801,0,"IX","B",811.801,.01)

"^DD",811.8,811.801,0,"NM","PACKED REMINDER")

"^DD",811.8,811.801,0,"UP")
811.8
"^DD",811.8,811.801,.01,0)
XML DATA^WL^^0;1^Q
"^DD",811.8,811.801,.01,1,0)
^.1
"^DD",811.8,811.801,.01,1,1,0)
811.801^B
"^DD",811.8,811.801,.01,1,1,1)
S ^PXD(811.8,DA(1),100,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.801,.01,1,1,2)
K ^PXD(811.8,DA(1),100,"B",$E(X,1,30),DA)
"^DD",811.8,811.801,.01,1,1,"DT")
3030415
"^DD",811.8,811.801,.01,3)
Do not edit this field.
"^DD",811.8,811.801,.01,9)
@
"^DD",811.8,811.801,.01,21,0)
^.001^1^1^3050126^^^^
"^DD",811.8,811.801,.01,21,1,0)
This is a line of XML data.
"^DD",811.8,811.801,.01,"DT")
3030609
"^DD",811.8,811.802,0)
COMPONENT LIST SUB-FIELD^^1^4
"^DD",811.8,811.802,0,"DT")
3050124
"^DD",811.8,811.802,0,"NM","COMPONENT LIST")

"^DD",811.8,811.802,0,"UP")
811.8
"^DD",811.8,811.802,.01,0)
COMPONENT^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.802,.01,1,0)
^.1^^0
"^DD",811.8,811.802,.01,3)
Do not edit this field.
"^DD",811.8,811.802,.01,21,0)
^.001^1^1^3050124^^^
"^DD",811.8,811.802,.01,21,1,0)
This is the name of the component; for example, ROUTINE or EDUCATION TOPIC.
"^DD",811.8,811.802,.01,"DT")
3050112
"^DD",811.8,811.802,.02,0)
FILE NUMBER^NJ14,4X^^0;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."5N.N) X
"^DD",811.8,811.802,.02,3)
Do not edit this field.
"^DD",811.8,811.802,.02,21,0)
^.001^2^2^3050126^^^^
"^DD",811.8,811.802,.02,21,1,0)
This is the file number of the component. If the component is a routine,
"^DD",811.8,811.802,.02,21,2,0)
then the file number will be 0.
"^DD",811.8,811.802,.02,"DT")
3050111
"^DD",811.8,811.802,.03,0)
NUMBER OF ITEMS^NJ4,0^^0;3^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.802,.03,3)
Do not edit this field.
"^DD",811.8,811.802,.03,21,0)
^.001^4^4^3050124^^^
"^DD",811.8,811.802,.03,21,1,0)
This is the number of this type of component that is included in the
"^DD",811.8,811.802,.03,21,2,0)
packed reminder. For example, if this particular component is Health
"^DD",811.8,811.802,.03,21,3,0)
Factors and there are three of them in the packed reminder, the NUMBER
"^DD",811.8,811.802,.03,21,4,0)
OF ITEMS would be 3.
"^DD",811.8,811.802,.03,"DT")
3001101
"^DD",811.8,811.802,1,0)
ITEM LIST^811.8021A^^1;0
"^DD",811.8,811.802,1,21,0)
^.001^3^3^3050124^^^^
"^DD",811.8,811.802,1,21,1,0)
This is the list of items of the component type. For example, if the
"^DD",811.8,811.802,1,21,2,0)
component type is Health Factors and there are three of them, the three
"^DD",811.8,811.802,1,21,3,0)
entries are specified in this list.
"^DD",811.8,811.8021,0)
ITEM LIST SUB-FIELD^^2^5
"^DD",811.8,811.8021,0,"DT")
3050124
"^DD",811.8,811.8021,0,"NM","ITEM LIST")

"^DD",811.8,811.8021,0,"UP")
811.802
"^DD",811.8,811.8021,.01,0)
ITEM^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8021,.01,1,0)
^.1^^0
"^DD",811.8,811.8021,.01,3)
Do not edit this field.
"^DD",811.8,811.8021,.01,21,0)
^.001^1^1^3050124^^^
"^DD",811.8,811.8021,.01,21,1,0)
This is the name of the item.
"^DD",811.8,811.8021,.01,"DT")
3050112
"^DD",811.8,811.8021,.02,0)
START LINE^NJ6,0^^0;2^K:+X'=X!(X>100000)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,.02,3)
Do not edit this field.
"^DD",811.8,811.8021,.02,21,0)
^.001^1^1^3050124^^^
"^DD",811.8,811.8021,.02,21,1,0)
This is the line in node 100 where the data for this item starts.
"^DD",811.8,811.8021,.02,"DT")
3050124
"^DD",811.8,811.8021,.03,0)
END LINE^NJ6,0^^0;3^K:+X'=X!(X>100000)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,.03,3)
Do not edit this field.
"^DD",811.8,811.8021,.03,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8021,.03,21,1,0)
This is the line in node 100 where the data for this item ends.
"^DD",811.8,811.8021,.03,"DT")
3050124
"^DD",811.8,811.8021,1,0)
IEN ROOT START LINE^NJ6,0^^0;4^K:+X'=X!(X>100000)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,1,3)
Do not edit this field.
"^DD",811.8,811.8021,1,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8021,1,21,1,0)
This is the line in node 100 where the ien root for this item starts.
"^DD",811.8,811.8021,1,"DT")
3050124
"^DD",811.8,811.8021,2,0)
IEN ROOT END LINE^NJ6,0^^0;5^K:+X'=X!(X>100000)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,2,3)
Do not edit this field.
"^DD",811.8,811.8021,2,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8021,2,21,1,0)
This is the line in node 100 where the ien root ends.
"^DD",811.8,811.8021,2,"DT")
3050124
"^DD",811.8,811.803,0)
INSTALLATION HISTORY SUB-FIELD^^1^3
"^DD",811.8,811.803,0,"DT")
3010313
"^DD",811.8,811.803,0,"NM","INSTALLATION HISTORY")

"^DD",811.8,811.803,0,"UP")
811.8
"^DD",811.8,811.803,.01,0)
INSTALLATION DATE AND TIME^D^^0;1^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.8,811.803,.01,1,0)
^.1^^0
"^DD",811.8,811.803,.01,3)
Do not edit this field.
"^DD",811.8,811.803,.01,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.803,.01,21,1,0)
This is the date and time of the installation.
"^DD",811.8,811.803,.01,"DT")
3001121
"^DD",811.8,811.803,.02,0)
INSTALLED BY^F^^0;2^K:$L(X)>45!($L(X)<1) X
"^DD",811.8,811.803,.02,3)
Do not edit this field.
"^DD",811.8,811.803,.02,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.803,.02,21,1,0)
This is the person who did the installation.
"^DD",811.8,811.803,.02,"DT")
3001116
"^DD",811.8,811.803,1,0)
COMPONENT LIST^811.8031A^^1;0
"^DD",811.8,811.803,1,21,0)
^.001^2^2^3050124^^^
"^DD",811.8,811.803,1,21,1,0)
This multiple contains a list of the packed reminder components that
"^DD",811.8,811.803,1,21,2,0)
were selected as part of this installation.
"^DD",811.8,811.8031,0)
COMPONENT LIST SUB-FIELD^^5^6
"^DD",811.8,811.8031,0,"DT")
3010313
"^DD",811.8,811.8031,0,"IX","B",811.8031,.01)

"^DD",811.8,811.8031,0,"NM","COMPONENT LIST")

"^DD",811.8,811.8031,0,"UP")
811.803
"^DD",811.8,811.8031,.01,0)
INDEX^NJ6,0^^0;1^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.8,811.8031,.01,1,0)
^.1
"^DD",811.8,811.8031,.01,1,1,0)
811.8031^B
"^DD",811.8,811.8031,.01,1,1,1)
S ^PXD(811.8,DA(2),130,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.8031,.01,1,1,2)
K ^PXD(811.8,DA(2),130,DA(1),1,"B",$E(X,1,30),DA)
"^DD",811.8,811.8031,.01,3)
Do not edit this field.
"^DD",811.8,811.8031,.01,21,0)
^.001^2^2^3050124^^^
"^DD",811.8,811.8031,.01,21,1,0)
This number corresponds to the item number in the List Manager display
"^DD",811.8,811.8031,.01,21,2,0)
of the components in the Exchange File entry.
"^DD",811.8,811.8031,.01,"DT")
3001115
"^DD",811.8,811.8031,1,0)
COMPONENT^F^^0;2^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,1,3)
Do not edit this field.
"^DD",811.8,811.8031,1,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8031,1,21,1,0)
This is the type of component, Education Topic, Health Factor, etc.
"^DD",811.8,811.8031,1,"DT")
3001115
"^DD",811.8,811.8031,2,0)
ITEM^F^^0;3^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,2,3)
Do not edit this field.
"^DD",811.8,811.8031,2,21,0)
^.001^2^2^3050124^^
"^DD",811.8,811.8031,2,21,1,0)
This is the name of the component. For example, if the component is
"^DD",811.8,811.8031,2,21,2,0)
a Health Factor then this is the name of the Health Factor.
"^DD",811.8,811.8031,2,"DT")
3001115
"^DD",811.8,811.8031,3,0)
ACTION^F^^0;4^K:$L(X)>4!($L(X)<1) X
"^DD",811.8,811.8031,3,3)
Do not edit this field.
"^DD",811.8,811.8031,3,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8031,3,21,1,0)
This is the action that was taken with the item.
"^DD",811.8,811.8031,3,"DT")
3001115
"^DD",811.8,811.8031,4,0)
NEWNAME^F^^0;5^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,4,3)
Do not edit this field.
"^DD",811.8,811.8031,4,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8031,4,21,1,0)
If the item was copied to a new name then the new name is stored here.
"^DD",811.8,811.8031,4,"DT")
3001115
"^DD",811.8,811.8031,5,0)
ADDITIONAL DETAILS^811.80315A^^1;0
"^DD",811.8,811.8031,5,21,0)
^.001^3^3^3050124^^^
"^DD",811.8,811.8031,5,21,1,0)
This multiple is used to store additional details about the
"^DD",811.8,811.8031,5,21,2,0)
installation. As an example, if a finding in a reminder definition is
"^DD",811.8,811.8031,5,21,3,0)
replaced with another finding that information is stored here.
"^DD",811.8,811.80315,0)
ADDITIONAL DETAILS SUB-FIELD^^.01^1
"^DD",811.8,811.80315,0,"DT")
3010313
"^DD",811.8,811.80315,0,"IX","B",811.80315,.01)

"^DD",811.8,811.80315,0,"NM","ADDITIONAL DETAILS")

"^DD",811.8,811.80315,0,"UP")
811.8031
"^DD",811.8,811.80315,.01,0)
ADDITIONAL DETAILS^F^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",811.8,811.80315,.01,1,0)
^.1
"^DD",811.8,811.80315,.01,1,1,0)
811.80315^B
"^DD",811.8,811.80315,.01,1,1,1)
S ^PXD(811.8,DA(3),130,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.80315,.01,1,1,2)
K ^PXD(811.8,DA(3),130,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",811.8,811.80315,.01,3)
Do not edit this field.
"^DD",811.8,811.80315,.01,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.80315,.01,21,1,0)
This is a line of additional information.
"^DD",811.8,811.80315,.01,"DT")
3010313
"^DD",811.8,811.804,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.8,811.804,0,"DT")
3001221
"^DD",811.8,811.804,0,"NM","DESCRIPTION")

"^DD",811.8,811.804,0,"UP")
811.8
"^DD",811.8,811.804,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.8,811.804,.01,3)
Do not edit this field.
"^DD",811.8,811.804,.01,"DT")
3001221
"^DD",811.9,811.9,0)
FIELD^^78^54
"^DD",811.9,811.9,0,"DDA")
N
"^DD",811.9,811.9,0,"DT")
3060127
"^DD",811.9,811.9,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(811.9,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",811.9,811.9,0,"IX","AD",811.9,.01)

"^DD",811.9,811.9,0,"IX","AG",811.9,51)

"^DD",811.9,811.9,0,"NM","REMINDER DEFINITION")

"^DD",811.9,811.9,0,"PT",142.14,.01)

"^DD",811.9,811.9,0,"PT",801.41,2)

"^DD",811.9,811.9,0,"PT",810.12,.01)

"^DD",811.9,811.9,0,"PT",810.22,1)

"^DD",811.9,811.9,0,"PT",810.33,.02)

"^DD",811.9,811.9,0,"PT",810.4,9)

"^DD",811.9,811.9,0,"PT",810.532,.01)

"^DD",811.9,811.9,0,"PT",810.545,.01)

"^DD",811.9,811.9,0,"PT",810.6,9)

"^DD",811.9,811.9,0,"PT",811.72,.01)

"^DD",811.9,811.9,0,"PT",811.9,1.4)

"^DD",811.9,811.9,0,"VRPK")
PXRM
"^DD",811.9,811.9,.01,0)
NAME^RF^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.9)) X
"^DD",811.9,811.9,.01,1,0)
^.1^^-1
"^DD",811.9,811.9,.01,1,2,0)
811.9^AD^MUMPS
"^DD",811.9,811.9,.01,1,2,1)
Q
"^DD",811.9,811.9,.01,1,2,2)
D DELEXTL^PXRMBXTL(DA)
"^DD",811.9,811.9,.01,1,2,"DT")
2980619
"^DD",811.9,811.9,.01,3)
Enter the name of the clinical reminder
"^DD",811.9,811.9,.01,21,0)
^.001^10^10^3050121^^^^
"^DD",811.9,811.9,.01,21,1,0)
This field is the name of a clinical reminder definition. Nationally
"^DD",811.9,811.9,.01,21,2,0)
distributed reminder definition names are prefixed with "VA-". The
"^DD",811.9,811.9,.01,21,3,0)
VA- prefixed reminder definitions cannot be altered by a site, but
"^DD",811.9,811.9,.01,21,4,0)
may be inactivated so they will not be selectable or evaluated in
"^DD",811.9,811.9,.01,21,5,0)
the CPRS GUI.
"^DD",811.9,811.9,.01,21,6,0)
 
"^DD",811.9,811.9,.01,21,7,0)
Local modifications can be made to any "VA-" reminder definition by
"^DD",811.9,811.9,.01,21,8,0)
copying the definition to a new one with a unique name and then
"^DD",811.9,811.9,.01,21,9,0)
making modifications to the new definition which meet local
"^DD",811.9,811.9,.01,21,10,0)
criteria.
"^DD",811.9,811.9,.01,23,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,.01,23,1,0)
National reminders names will start with VA- and they will have a class
"^DD",811.9,811.9,.01,23,2,0)
of National. National reminders cannot be edited by sites. 
"^DD",811.9,811.9,.01,"DT")
3040506
"^DD",811.9,811.9,1.2,0)
PRINT NAME^F^^0;3^K:$L(X)>35!($L(X)<3) X
"^DD",811.9,811.9,1.2,1,0)
^.1^^0
"^DD",811.9,811.9,1.2,3)
Enter the PRINT NAME.
"^DD",811.9,811.9,1.2,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,1.2,21,1,0)
This is the name that is used when the results of a reminder evaluation
"^DD",811.9,811.9,1.2,21,2,0)
are displayed.
"^DD",811.9,811.9,1.2,"DT")
3000216
"^DD",811.9,811.9,1.3,0)
DO IN ADVANCE TIME FRAME^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.9,1.3,3)
Enter time period to mark the reminder due in advance (e.g., 6M,1Y).
"^DD",811.9,811.9,1.3,21,0)
^.001^6^6^3050124^^^^
"^DD",811.9,811.9,1.3,21,1,0)
This field is used to let a reminder become due earlier than the
"^DD",811.9,811.9,1.3,21,2,0)
date determined by adding the frequency to the date when the
"^DD",811.9,811.9,1.3,21,3,0)
reminder was last resolved. For example, if the frequency is 1Y (one
"^DD",811.9,811.9,1.3,21,4,0)
year) and the DO IN ADVANCE TIME FRAME is 1M (one month), the
"^DD",811.9,811.9,1.3,21,5,0)
reminder would have a status of "DUE SOON" 11 months after it was
"^DD",811.9,811.9,1.3,21,6,0)
last resolved. After one year has passed, the STATUS would be "DUE".
"^DD",811.9,811.9,1.3,"DT")
3000427
"^DD",811.9,811.9,1.4,0)
RELATED REMINDER GUIDELINE^*P811.9'X^PXD(811.9,^0;5^Q
"^DD",811.9,811.9,1.4,3)
Enter the related national reminder.
"^DD",811.9,811.9,1.4,12)
Look-up on National standard reminders for Congressional reporting
"^DD",811.9,811.9,1.4,12.1)
S DIC("S")="I $E($P(^(0),U,1),1,4)=""VA-*"""
"^DD",811.9,811.9,1.4,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,1.4,21,1,0)
If a local reminder replaces a national reminder, this field can be
"^DD",811.9,811.9,1.4,21,2,0)
used to identify the related national reminder.
"^DD",811.9,811.9,1.4,"DT")
3040901
"^DD",811.9,811.9,1.6,0)
INACTIVE FLAG^SX^1:INACTIVE;^0;6^Q
"^DD",811.9,811.9,1.6,1,0)
^.1
"^DD",811.9,811.9,1.6,1,1,0)
^^TRIGGER^811.9^1.7
"^DD",811.9,811.9,1.6,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^PXD(811.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y X ^DD(811.9,1.6,1,1,1.1) X ^DD(811.9,1.6,1,1,1.4)
"^DD",811.9,811.9,1.6,1,1,1.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",811.9,811.9,1.6,1,1,1.4)
S DIH=$S($D(^PXD(811.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=811.9,DIG=1.7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",811.9,811.9,1.6,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^PXD(811.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y X ^DD(811.9,1.6,1,1,2.1) X ^DD(811.9,1.6,1,1,2.4)
"^DD",811.9,811.9,1.6,1,1,2.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",811.9,811.9,1.6,1,1,2.4)
S DIH=$S($D(^PXD(811.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=811.9,DIG=1.7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",811.9,811.9,1.6,1,1,"CREATE VALUE")
NOW
"^DD",811.9,811.9,1.6,1,1,"DELETE VALUE")
NOW
"^DD",811.9,811.9,1.6,1,1,"DT")
2971008
"^DD",811.9,811.9,1.6,1,1,"FIELD")
INACTIVE DATE
"^DD",811.9,811.9,1.6,3)
Enter "1" to inactivate the reminder.
"^DD",811.9,811.9,1.6,21,0)
^.001^6^6^3050121^^^^
"^DD",811.9,811.9,1.6,21,1,0)
Reminders that are inactive will not be evaluated. The Clinical
"^DD",811.9,811.9,1.6,21,2,0)
Maintenance component will return a message stating the reminder is
"^DD",811.9,811.9,1.6,21,3,0)
inactive and the date when it was made inactive.
"^DD",811.9,811.9,1.6,21,4,0)

"^DD",811.9,811.9,1.6,21,5,0)
Other applications that use reminders may use this flag to determine
"^DD",811.9,811.9,1.6,21,6,0)
if a reminder can be selected for inclusion.
"^DD",811.9,811.9,1.6,23,0)
^.001^7^7^3050121^^^^
"^DD",811.9,811.9,1.6,23,1,0)
When a reminder is inactive, the following will occur:
"^DD",811.9,811.9,1.6,23,2,0)
1. It cannot be selected for inclusion on a Health Summary. (Other
"^DD",811.9,811.9,1.6,23,3,0)
packages that use Reminders should follow this rule.)
"^DD",811.9,811.9,1.6,23,4,0)
2. In the Clinical Maintenance mode, a message will be returned stating the
"^DD",811.9,811.9,1.6,23,5,0)
reminder is inactive along with the date and time when it was made
"^DD",811.9,811.9,1.6,23,6,0)
inactive.
"^DD",811.9,811.9,1.6,23,7,0)
3. In any other mode, nothing will be returned.
"^DD",811.9,811.9,1.6,"DT")
2971008
"^DD",811.9,811.9,1.7,0)
INACTIVE CHANGE DATE^DX^^0;7^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9,1.7,5,1,0)
811.9^1.6^1
"^DD",811.9,811.9,1.7,9)
^
"^DD",811.9,811.9,1.7,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,1.7,21,1,0)
This is the date and time when the INACTIVE FLAG was last changed. It
"^DD",811.9,811.9,1.7,21,2,0)
is set automatically. Users should never edit this field.
"^DD",811.9,811.9,1.7,23,0)
^.001^1^1^3050121^^^
"^DD",811.9,811.9,1.7,23,1,0)
This field is set by a trigger on INACTIVE FLAG.
"^DD",811.9,811.9,1.7,"DT")
2971008
"^DD",811.9,811.9,1.8,0)
IGNORE ON N/A^FX^^0;8^S X=$$UP^XLFSTR(X) K:'$$VIGNAC^PXRMINTR(X) X
"^DD",811.9,811.9,1.8,3)
Input a string of N/A code(s)
"^DD",811.9,811.9,1.8,21,0)
^.001^11^11^3050121^^^^
"^DD",811.9,811.9,1.8,21,1,0)
This field allows the user to stop reminders from being printed in
"^DD",811.9,811.9,1.8,21,2,0)
the Clinical Maintenance component if the reminder is N/A. This is a
"^DD",811.9,811.9,1.8,21,3,0)
free text field that can contain any combination of the following
"^DD",811.9,811.9,1.8,21,4,0)
codes:
"^DD",811.9,811.9,1.8,21,5,0)
 
"^DD",811.9,811.9,1.8,21,6,0)
Code  Description
"^DD",811.9,811.9,1.8,21,7,0)
 A    N/A due to not meeting age criteria.
"^DD",811.9,811.9,1.8,21,8,0)
 I    N/A due to inactive reminder.
"^DD",811.9,811.9,1.8,21,9,0)
 R    N/A due to the wrong race.
"^DD",811.9,811.9,1.8,21,10,0)
 S    N/A due to the wrong sex.
"^DD",811.9,811.9,1.8,21,11,0)
 *    N/A for any reason.
"^DD",811.9,811.9,1.8,"DT")
2991103
"^DD",811.9,811.9,1.9,0)
SEX SPECIFIC^S^F:FEMALE;M:MALE;^0;9^Q
"^DD",811.9,811.9,1.9,3)
Enter M or F if this reminder is sex specific.
"^DD",811.9,811.9,1.9,21,0)
^.001^8^8^3050124^^^^
"^DD",811.9,811.9,1.9,21,1,0)
This field is used to make a reminder sex specific. If an "F" is
"^DD",811.9,811.9,1.9,21,2,0)
entered, the reminder applies only to females. If an "M" is entered,
"^DD",811.9,811.9,1.9,21,3,0)
the reminder applies only to males. If it is left blank, then the
"^DD",811.9,811.9,1.9,21,4,0)
reminder is applicable to either sex.
"^DD",811.9,811.9,1.9,21,5,0)

"^DD",811.9,811.9,1.9,21,6,0)
If CUSTOM COHORT LOGIC is defined and it does not contain SEX, then
"^DD",811.9,811.9,1.9,21,7,0)
this field will be ignored.
"^DD",811.9,811.9,1.9,21,8,0)

"^DD",811.9,811.9,1.9,"DT")
2951109
"^DD",811.9,811.9,1.91,0)
PRIORITY^S^1:HIGH;2:MEDIUM;3:LOW;^0;10^Q
"^DD",811.9,811.9,1.91,3)
Enter the REMINDER PRIORITY.
"^DD",811.9,811.9,1.91,21,0)
^.001^1^1^3050121^^^^
"^DD",811.9,811.9,1.91,21,1,0)
REMINDER PRIORITY is used by the CPRS GUI for sorting purposes.
"^DD",811.9,811.9,1.91,"DT")
2990716
"^DD",811.9,811.9,2,0)
REMINDER DESCRIPTION^811.92^^1;0
"^DD",811.9,811.9,2,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,2,21,1,0)
This field contains a description of the clinical reminder. It is
"^DD",811.9,811.9,2,21,2,0)
used to document its purpose and intended usage.
"^DD",811.9,811.9,2,"DT")
2960131
"^DD",811.9,811.9,3,0)
TECHNICAL DESCRIPTION^811.93^^2;0
"^DD",811.9,811.9,3,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,3,21,1,0)
The TECHNICAL DESCRIPTION is for documenting how a reminder is
"^DD",811.9,811.9,3,21,2,0)
supposed to function and why the definition is set up the way it is.
"^DD",811.9,811.9,3,"DT")
2960131
"^DD",811.9,811.9,7,0)
BASELINE AGE FINDINGS^811.97^^7;0
"^DD",811.9,811.9,7,21,0)
^.001^8^8^3050121^^^^
"^DD",811.9,811.9,7,21,1,0)
This multiple is for defining reminder frequency age ranges sets. It
"^DD",811.9,811.9,7,21,2,0)
can be used to specify different frequencies for different ages. For
"^DD",811.9,811.9,7,21,3,0)
example, you could define a frequency of every 3 years for ages 40
"^DD",811.9,811.9,7,21,4,0)
to 49 as the first age range set, a frequency of every 2 years for
"^DD",811.9,811.9,7,21,5,0)
ages 50 to 59 as the second, and a frequency of once a year for ages
"^DD",811.9,811.9,7,21,6,0)
60 to 75. With this set the reminder would be due every 3 years for
"^DD",811.9,811.9,7,21,7,0)
ages 40 to 49, every 2 years for ages 50 to 59, and once a year for
"^DD",811.9,811.9,7,21,8,0)
ages 60 to 75.
"^DD",811.9,811.9,7,"DT")
2970711
"^DD",811.9,811.9,20,0)
FINDINGS^811.902V^^20;0
"^DD",811.9,811.9,20,21,0)
^.001^5^5^3060509^^^^
"^DD",811.9,811.9,20,21,1,0)
This multiple identifies which finding items to use when evaluating the
"^DD",811.9,811.9,20,21,2,0)
reminder. Finding items may be categorized into 4 types of findings:
"^DD",811.9,811.9,20,21,3,0)
age, patient cohort, resolution, and informational. How patient findings
"^DD",811.9,811.9,20,21,4,0)
are used depends on the values given to the various fields associated with 
"^DD",811.9,811.9,20,21,5,0)
findings. See the description of those fields to learn what they do.
"^DD",811.9,811.9,20,"DT")
3040513
"^DD",811.9,811.9,25,0)
FUNCTION FINDINGS^811.925I^^25;0
"^DD",811.9,811.9,25,21,0)
^.001^13^13^3050124^^^^
"^DD",811.9,811.9,25,21,1,0)
This multiple is used to define function findings; each function
"^DD",811.9,811.9,25,21,2,0)
finding is labeled by an integer: the FUNCTION FINDING NUMBER. The
"^DD",811.9,811.9,25,21,3,0)
user defines a function finding by inputting a FUNCTION FINDING
"^DD",811.9,811.9,25,21,4,0)
NUMBER and associated FUNCTION STRING. Function Findings are then
"^DD",811.9,811.9,25,21,5,0)
used in the reminder definition logic by reference to FF(FUNCTION
"^DD",811.9,811.9,25,21,6,0)
FINDING NUMBER). For example, if function findings 1 and 2 were
"^DD",811.9,811.9,25,21,7,0)
defined, then they could be used in the cohort or resolution logic as
"^DD",811.9,811.9,25,21,8,0)
FF(1) and FF(2).
"^DD",811.9,811.9,25,21,9,0)

"^DD",811.9,811.9,25,21,10,0)
Function findings can be used in the resolution logic with one
"^DD",811.9,811.9,25,21,11,0)
caveat. They do not have a date associated with them; therefore, the
"^DD",811.9,811.9,25,21,12,0)
resolution logic must be written so that it cannot be made true
"^DD",811.9,811.9,25,21,13,0)
solely by a function finding.
"^DD",811.9,811.9,25,"DT")
3030131
"^DD",811.9,811.9,30,0)
CUSTOMIZED COHORT LOGIC^FX^^30;1^K:'$$VALID^PXRMLOG(X,.DA,3,512) X
"^DD",811.9,811.9,30,.1)
CUSTOMIZED PATIENT COHORT LOGIC (OPTIONAL)
"^DD",811.9,811.9,30,1,0)
^.1^^0
"^DD",811.9,811.9,30,3)
Enter a Boolean string from 3-512 characters that uses findings to define the patient cohort.
"^DD",811.9,811.9,30,21,0)
^.001^10^10^3050121^^^^
"^DD",811.9,811.9,30,21,1,0)
This field may be used to define a customized Patient Cohort Logic
"^DD",811.9,811.9,30,21,2,0)
string. Typically this is done when the USE IN PATIENT COHORT LOGIC
"^DD",811.9,811.9,30,21,3,0)
fields associated with each finding do not provide the ability to
"^DD",811.9,811.9,30,21,4,0)
create the required logic string. The requirement for custom logic
"^DD",811.9,811.9,30,21,5,0)
arises when the required logic is more complex than can be
"^DD",811.9,811.9,30,21,6,0)
represented by simple concatenation of Boolean logical operators and
"^DD",811.9,811.9,30,21,7,0)
findings.
"^DD",811.9,811.9,30,21,8,0)

"^DD",811.9,811.9,30,21,9,0)
Detailed information on how to create the custom logic string can be
"^DD",811.9,811.9,30,21,10,0)
found in the Clinical Reminders Manager Manual.
"^DD",811.9,811.9,30,"DT")
3041227
"^DD",811.9,811.9,31,0)
INTERNAL PATIENT COHORT LOGIC^FX^^31;1^K:$L(X)>512!($L(X)<3) X
"^DD",811.9,811.9,31,3)
Do not edit this field.
"^DD",811.9,811.9,31,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,31,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,31,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,31,23,0)
^.001^4^4^3050121^^^^
"^DD",811.9,811.9,31,23,1,0)
This field is computed by the Clinical Reminders software. If there is
"^DD",811.9,811.9,31,23,2,0)
user-entered Patient Cohort Logic, then it is copied into this field.
"^DD",811.9,811.9,31,23,3,0)
Otherwise this field is determined using the USE IN PATIENT COHORT
"^DD",811.9,811.9,31,23,4,0)
LOGIC fields for each finding in the reminder definition.
"^DD",811.9,811.9,31,"DT")
3031027
"^DD",811.9,811.9,32,0)
PATIENT COHORT FINDINGS COUNT^NJ2,0X^^32;1^K:+X'=X!(X>154)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,32,3)
Do not edit this field.
"^DD",811.9,811.9,32,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,32,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,32,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,32,23,0)
^.001^3^3^3050121^^^^
"^DD",811.9,811.9,32,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,32,23,2,0)
the number of findings that are in the INTERNAL PATIENT COHORT LOGIC
"^DD",811.9,811.9,32,23,3,0)
field.
"^DD",811.9,811.9,32,"DT")
3031024
"^DD",811.9,811.9,33,0)
PATIENT COHORT FINDINGS LIST^FX^^32;2^K:$L(X)>512!($L(X)<1) X
"^DD",811.9,811.9,33,3)
Do not edit this field.
"^DD",811.9,811.9,33,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,33,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,33,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,33,23,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,33,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,33,23,2,0)
a list of the findings in the INTERNAL PATIENT COHORT LOGIC field.
"^DD",811.9,811.9,33,"DT")
3031024
"^DD",811.9,811.9,34,0)
CUSTOMIZED RESOLUTION LOGIC^FX^^34;1^K:'$$VALIDR^PXRMLOG(X,.DA,5,512) X
"^DD",811.9,811.9,34,.1)
CUSTOMIZED RESOLUTION LOGIC (OPTIONAL)
"^DD",811.9,811.9,34,1,0)
^.1^^0
"^DD",811.9,811.9,34,3)
Enter a Boolean string from 5-512 characters that includes findings that resolve the reminder.
"^DD",811.9,811.9,34,21,0)
^.001^11^11^3050121^^^^
"^DD",811.9,811.9,34,21,1,0)
This field may be used to define a customized Resolution Logic
"^DD",811.9,811.9,34,21,2,0)
string. Typically this is done when the USE IN RESOLUTION LOGIC
"^DD",811.9,811.9,34,21,3,0)
fields associated with each finding do not provide the ability to
"^DD",811.9,811.9,34,21,4,0)
create the required logic string. The requirement for custom logic
"^DD",811.9,811.9,34,21,5,0)
arises when the required logic is more complex than can be
"^DD",811.9,811.9,34,21,6,0)
represented by simple concatenation of Boolean logical operators and
"^DD",811.9,811.9,34,21,7,0)
findings.
"^DD",811.9,811.9,34,21,8,0)

"^DD",811.9,811.9,34,21,9,0)
Detailed information on how to create the custom logic string can be
"^DD",811.9,811.9,34,21,10,0)
found in the Clinical Reminders Manager Manual.
"^DD",811.9,811.9,34,21,11,0)

"^DD",811.9,811.9,34,"DT")
3050110
"^DD",811.9,811.9,35,0)
INTERNAL RESOLUTION LOGIC^FX^^35;1^K:$L(X)>512!($L(X)<5) X
"^DD",811.9,811.9,35,3)
Do not edit this field.
"^DD",811.9,811.9,35,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,35,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,35,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,35,23,0)
^.001^4^4^3050121^^^^
"^DD",811.9,811.9,35,23,1,0)
This field is computed by the Clinical Reminders software. If there is
"^DD",811.9,811.9,35,23,2,0)
user-entered Resolution Logic, then it is copied into this field.
"^DD",811.9,811.9,35,23,3,0)
Otherwise this field is determined using the USE IN RESOLUTION
"^DD",811.9,811.9,35,23,4,0)
LOGIC fields for each finding in the reminder definition.
"^DD",811.9,811.9,35,"DT")
3031027
"^DD",811.9,811.9,36,0)
RESOLUTION FINDINGS COUNT^NJ2,0X^^36;1^K:+X'=X!(X>154)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,36,3)
Do not edit this field.
"^DD",811.9,811.9,36,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,36,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,36,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,36,23,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,36,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,36,23,2,0)
the number of findings in the INTERNAL RESOLUTION LOGIC field.
"^DD",811.9,811.9,36,"DT")
3031024
"^DD",811.9,811.9,37,0)
RESOLUTION FINDINGS LIST^FX^^36;2^K:$L(X)>512!($L(X)<1) X
"^DD",811.9,811.9,37,3)
Do not edit this field.
"^DD",811.9,811.9,37,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,37,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,37,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,37,23,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,37,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,37,23,2,0)
the list of findings in the INTERNAL RESOLUTION LOGIC field.
"^DD",811.9,811.9,37,"DT")
3031024
"^DD",811.9,811.9,40,0)
AGE FINDINGS COUNT^NJ2,0X^^40;1^K:+X'=X!(X>154)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,40,3)
Do not edit this field.
"^DD",811.9,811.9,40,21,0)
^.001^2^2^3050121^^
"^DD",811.9,811.9,40,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,40,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,40,23,0)
^.001^3^3^3050121^^
"^DD",811.9,811.9,40,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,40,23,2,0)
the number of findings that can override the baseline age range frequency
"^DD",811.9,811.9,40,23,3,0)
set. It should never be edited by hand.
"^DD",811.9,811.9,40,"DT")
3031024
"^DD",811.9,811.9,41,0)
AGE FINDINGS LIST^FX^^40;2^K:$L(X)>512!($L(X)<1) X
"^DD",811.9,811.9,41,3)
Do not edit this field.
"^DD",811.9,811.9,41,21,0)
^.001^2^2^3050121^^
"^DD",811.9,811.9,41,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,41,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,41,23,0)
^.001^3^3^3050121^^
"^DD",811.9,811.9,41,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,41,23,2,0)
a list of the findings that can override the baseline age range frequency.
"^DD",811.9,811.9,41,23,3,0)
It should never be edited by hand.
"^DD",811.9,811.9,41,"DT")
3031024
"^DD",811.9,811.9,42,0)
INFORMATION FINDINGS COUNT^NJ2,0X^^42;1^K:+X'=X!(X>154)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,42,3)
Do not edit this field.
"^DD",811.9,811.9,42,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,42,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,42,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,42,23,0)
^.001^3^3^3050121^^^
"^DD",811.9,811.9,42,23,1,0)
This field is computed by the Clinical Reminders software and
"^DD",811.9,811.9,42,23,2,0)
contains the number of findings that are information only. It should
"^DD",811.9,811.9,42,23,3,0)
never be edited by hand.
"^DD",811.9,811.9,42,"DT")
3031024
"^DD",811.9,811.9,43,0)
INFORMATION FINDINGS LIST^FX^^42;2^K:$L(X)>512!($L(X)<1) X
"^DD",811.9,811.9,43,3)
Do not edit this field.
"^DD",811.9,811.9,43,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,43,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,43,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,43,23,0)
^.001^3^3^3050121^^^^
"^DD",811.9,811.9,43,23,1,0)
This field is computed by the Clinical Reminders software and
"^DD",811.9,811.9,43,23,2,0)
contains the number of information findings. It should never be
"^DD",811.9,811.9,43,23,3,0)
edited by hand.
"^DD",811.9,811.9,43,"DT")
3031024
"^DD",811.9,811.9,45,0)
CUSTOM DATE DUE^FX^^45;1^K:'$$VCDUE^PXRMCDUE(X,.DA) X
"^DD",811.9,811.9,45,3)
Enter the CUSTOM DATE DUE
"^DD",811.9,811.9,45,4)
D XHELP^PXRMCDUE
"^DD",811.9,811.9,45,21,0)
^.001^16^16^3050124^^^
"^DD",811.9,811.9,45,21,1,0)
When a CUSTOM DATE DUE is defined, it takes precedence over the
"^DD",811.9,811.9,45,21,2,0)
standard date due calculation. This means the normal date due
"^DD",811.9,811.9,45,21,3,0)
calculation that is based on the dates of the resolution findings
"^DD",811.9,811.9,45,21,4,0)
and the final frequency is not done. Only the dates of the findings
"^DD",811.9,811.9,45,21,5,0)
and the frequencies specified in the Custom Date Due string are
"^DD",811.9,811.9,45,21,6,0)
used. Any finding that is in the reminder definition can be used in
"^DD",811.9,811.9,45,21,7,0)
the Custom Date Due string; it is not limited to those defined as
"^DD",811.9,811.9,45,21,8,0)
resolution findings.
"^DD",811.9,811.9,45,21,9,0)

"^DD",811.9,811.9,45,21,10,0)
The final age range will still be used to determine if the patient
"^DD",811.9,811.9,45,21,11,0)
is in the cohort; however, the frequency associated with this age
"^DD",811.9,811.9,45,21,12,0)
range is not used. Only the frequencies specified in the Custom Date
"^DD",811.9,811.9,45,21,13,0)
Due String are used. They are added to the date of the associated
"^DD",811.9,811.9,45,21,14,0)
finding to determine the dates used by either the MIN_DATE or
"^DD",811.9,811.9,45,21,15,0)
MAX_DATE functions.
"^DD",811.9,811.9,45,21,16,0)

"^DD",811.9,811.9,45,"DT")
3030807
"^DD",811.9,811.9,46,0)
CUSTOM DATE DUE FUNCTION^F^^46;1^K:$L(X)>30!($L(X)<3) X
"^DD",811.9,811.9,46,3)
Do not edit this field.
"^DD",811.9,811.9,46,21,0)
^^2^2^3050121^
"^DD",811.9,811.9,46,21,1,0)
This field contains the function used in the CUSTOM DATE DUE. It is
"^DD",811.9,811.9,46,21,2,0)
created automatically and should not be set by hand.
"^DD",811.9,811.9,46,"DT")
3030807
"^DD",811.9,811.9,47,0)
NUMBER OF ARGUMENTS^NJ2,0^^46;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,47,3)
Do not edit this field.
"^DD",811.9,811.9,47,21,0)
^^2^2^3050121^
"^DD",811.9,811.9,47,21,1,0)
This is the number of arguments (findings) used in the CUSTOM DATE
"^DD",811.9,811.9,47,21,2,0)
DUE. It is created automatically and should not be set by hand.
"^DD",811.9,811.9,47,"DT")
3030807
"^DD",811.9,811.9,48,0)
CUSTOM DATE DUE ARG LIST^811.948A^^47;0
"^DD",811.9,811.9,48,21,0)
^^4^4^3050121^
"^DD",811.9,811.9,48,21,1,0)
This is the list of arguments (findings) used in the CUSTOM DATE
"^DD",811.9,811.9,48,21,2,0)
DUE. It is used to efficiently calculate the resolution date from
"^DD",811.9,811.9,48,21,3,0)
the custom date due string. It is created automatically and should
"^DD",811.9,811.9,48,21,4,0)
not be set by hand.
"^DD",811.9,811.9,50,0)
WEB SITES^811.9002^^50;0
"^DD",811.9,811.9,50,21,0)
^.001^5^5^3050124^^^^
"^DD",811.9,811.9,50,21,1,0)
This multiple contains Web sites that have information related to
"^DD",811.9,811.9,50,21,2,0)
this reminder. The list of web sites will be displayed in the CPRS
"^DD",811.9,811.9,50,21,3,0)
GUI if the user right-clicks on a reminder and then selects
"^DD",811.9,811.9,50,21,4,0)
reference information. If a particular web site is clicked on, the
"^DD",811.9,811.9,50,21,5,0)
GUI will open a browser at that web site.
"^DD",811.9,811.9,50,"DT")
2991129
"^DD",811.9,811.9,51,0)
LINKED REMINDER DIALOG^*P801.41'^PXRMD(801.41,^51;1^S DIC("S")="I $P(^(0),U,4)=""R""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.9,811.9,51,1,0)
^.1
"^DD",811.9,811.9,51,1,1,0)
811.9^AG
"^DD",811.9,811.9,51,1,1,1)
S ^PXD(811.9,"AG",$E(X,1,30),DA)=""
"^DD",811.9,811.9,51,1,1,2)
K ^PXD(811.9,"AG",$E(X,1,30),DA)
"^DD",811.9,811.9,51,1,1,"DT")
2991005
"^DD",811.9,811.9,51,3)
Enter the dialog to be used in CPRS to resolve this reminder. 
"^DD",811.9,811.9,51,12)
Reminders may only point to reminder dialog entries
"^DD",811.9,811.9,51,12.1)
S DIC("S")="I $P(^(0),U,4)=""R"""
"^DD",811.9,811.9,51,21,0)
^.001^2^2^3050124^^^^
"^DD",811.9,811.9,51,21,1,0)
This is the Reminder Dialog that will be used when the reminder is
"^DD",811.9,811.9,51,21,2,0)
processed in the CPRS GUI.
"^DD",811.9,811.9,51,"DT")
3000423
"^DD",811.9,811.9,60,0)
GENERAL COHORT FOUND TEXT^811.9003^^60;0
"^DD",811.9,811.9,60,9)
^
"^DD",811.9,811.9,60,21,0)
^.001^3^3^3050124^^^^
"^DD",811.9,811.9,60,21,1,0)
This optional field defines the detailed text to display when the
"^DD",811.9,811.9,60,21,2,0)
Patient Cohort Logic is true. Detailed text is used for components
"^DD",811.9,811.9,60,21,3,0)
such as Clinical Maintenance and MyHealtheVet Detailed.
"^DD",811.9,811.9,60,"DT")
3000504
"^DD",811.9,811.9,61,0)
GENERAL COHORT NOT FOUND TEXT^811.961^^61;0
"^DD",811.9,811.9,61,9)
^
"^DD",811.9,811.9,61,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.9,61,21,1,0)
This optional field defines the detailed text to display when the
"^DD",811.9,811.9,61,21,2,0)
Patient Cohort Logic is false. Detailed text is used for components
"^DD",811.9,811.9,61,21,3,0)
such as Clinical Maintenance and MyHealtheVet Detailed.
"^DD",811.9,811.9,61,21,4,0)

"^DD",811.9,811.9,61,"DT")
3000504
"^DD",811.9,811.9,62,0)
# OF GEN. COHORT FOUND LINES^F^^62;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,62,3)
Do not edit this field.
"^DD",811.9,811.9,62,9)
^
"^DD",811.9,811.9,62,21,0)
^.001^5^5^3050124^^^^
"^DD",811.9,811.9,62,21,1,0)
This is the number of lines in the GENERAL COHORT FOUND TEXT. If the
"^DD",811.9,811.9,62,21,2,0)
number ends with "T" then the text contains TIU objects. This field
"^DD",811.9,811.9,62,21,3,0)
is set automatically during reminder edit and should never be edited
"^DD",811.9,811.9,62,21,4,0)
by hand.
"^DD",811.9,811.9,62,21,5,0)

"^DD",811.9,811.9,62,"DT")
3040604
"^DD",811.9,811.9,63,0)
# GEN. COHORT NOT FOUND LINES^F^^62;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,63,3)
Do not edit this field.
"^DD",811.9,811.9,63,9)
^
"^DD",811.9,811.9,63,21,0)
^.001^5^5^3050124^^^^
"^DD",811.9,811.9,63,21,1,0)
This is the number of lines in the GENERAL COHORT NOT FOUND TEXT. If
"^DD",811.9,811.9,63,21,2,0)
the number ends with "T" then the text contains TIU objects. This
"^DD",811.9,811.9,63,21,3,0)
field is set automatically during reminder edit and should never be
"^DD",811.9,811.9,63,21,4,0)
edited by hand.
"^DD",811.9,811.9,63,21,5,0)

"^DD",811.9,811.9,63,"DT")
3040604
"^DD",811.9,811.9,65,0)
GENERAL RES. FOUND TEXT^811.965^^65;0
"^DD",811.9,811.9,65,9)
^
"^DD",811.9,811.9,65,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.9,65,21,1,0)
This optional field defines the detailed text to display when the
"^DD",811.9,811.9,65,21,2,0)
Resolution Logic is true. Detailed text is used for components such as
"^DD",811.9,811.9,65,21,3,0)
Clinical Maintenance and MyHealtheVet Detailed.
"^DD",811.9,811.9,65,21,4,0)

"^DD",811.9,811.9,65,"DT")
3040607
"^DD",811.9,811.9,66,0)
GENERAL RES. NOT FOUND TEXT^811.966^^66;0
"^DD",811.9,811.9,66,9)
^
"^DD",811.9,811.9,66,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.9,66,21,1,0)
This optional field defines the detailed text to display when the
"^DD",811.9,811.9,66,21,2,0)
Resolution Logic is false. Detailed text is used for components such as
"^DD",811.9,811.9,66,21,3,0)
Clinical Maintenance and MyHealtheVet Detailed.
"^DD",811.9,811.9,66,21,4,0)

"^DD",811.9,811.9,66,"DT")
3040607
"^DD",811.9,811.9,67,0)
# GEN. RES. FOUND LINES^F^^67;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,67,3)
Do not edit this field.
"^DD",811.9,811.9,67,9)
^
"^DD",811.9,811.9,67,21,0)
^.001^5^5^3050124^^^
"^DD",811.9,811.9,67,21,1,0)
This is the number of lines in the GENERAL RESOLUTION FOUND TEXT. If
"^DD",811.9,811.9,67,21,2,0)
the number ends with "T" then the text contains TIU objects. This
"^DD",811.9,811.9,67,21,3,0)
field is set automatically during reminder edit and should never be
"^DD",811.9,811.9,67,21,4,0)
edited by hand.
"^DD",811.9,811.9,67,21,5,0)

"^DD",811.9,811.9,67,"DT")
3040604
"^DD",811.9,811.9,68,0)
# GEN. RES. NOT FOUND LINES^F^^67;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,68,3)
Do not edit this field.
"^DD",811.9,811.9,68,9)
^
"^DD",811.9,811.9,68,21,0)
^.001^5^5^3050124^^^
"^DD",811.9,811.9,68,21,1,0)
This is the number of lines in the GENERAL RESOLUTION NOT FOUND
"^DD",811.9,811.9,68,21,2,0)
TEXT. If the number ends with "T" then the text contains TIU
"^DD",811.9,811.9,68,21,3,0)
objects. This field is set automatically during reminder edit and
"^DD",811.9,811.9,68,21,4,0)
should never be edited by hand.
"^DD",811.9,811.9,68,21,5,0)

"^DD",811.9,811.9,68,"DT")
3040604
"^DD",811.9,811.9,69,0)
RESCISSION DATE^D^^0;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9,69,3)
Enter the RESCISSION DATE
"^DD",811.9,811.9,69,21,0)
^.001^1^1^3050121^^^
"^DD",811.9,811.9,69,21,1,0)
This is the rescission date for this reminder definition.
"^DD",811.9,811.9,69,"DT")
3040617
"^DD",811.9,811.9,70,0)
SUMMARY COHORT FOUND TEXT^811.9004^^70;0
"^DD",811.9,811.9,70,9)
^
"^DD",811.9,811.9,70,21,0)
^.001^3^3^3050124^^^^
"^DD",811.9,811.9,70,21,1,0)
This optional field defines the summary text to display when the
"^DD",811.9,811.9,70,21,2,0)
Patient Cohort Logic is true. Summary text is used for components such
"^DD",811.9,811.9,70,21,3,0)
as MyHealtheVet Summary.
"^DD",811.9,811.9,71,0)
SUMMARY COHORT NOT FOUND TEXT^811.971^^71;0
"^DD",811.9,811.9,71,9)
^
"^DD",811.9,811.9,71,21,0)
^.001^3^3^3050124^^^^
"^DD",811.9,811.9,71,21,1,0)
This optional field defines the summary text to display when the
"^DD",811.9,811.9,71,21,2,0)
Patient Cohort Logic is false. Summary text is used for components such 
"^DD",811.9,811.9,71,21,3,0)
MyHealtheVet Summary.
"^DD",811.9,811.9,72,0)
# SUM. COHORT FOUND LINES^F^^72;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,72,3)
Do not edit this field.
"^DD",811.9,811.9,72,9)
^
"^DD",811.9,811.9,72,21,0)
^.001^5^5^3050124^^^^
"^DD",811.9,811.9,72,21,1,0)
This is the number of lines in the SUMMARY COHORT FOUND TEXT. If the
"^DD",811.9,811.9,72,21,2,0)
number ends with "T" then the text contains TIU objects. This field
"^DD",811.9,811.9,72,21,3,0)
is set automatically during reminder edit and should never be edited
"^DD",811.9,811.9,72,21,4,0)
by hand.  
"^DD",811.9,811.9,72,21,5,0)

"^DD",811.9,811.9,72,"DT")
3040604
"^DD",811.9,811.9,73,0)
# SUM. COHORT NOT FOUND LINES^F^^72;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,73,3)
Do not edit this field.
"^DD",811.9,811.9,73,9)
^
"^DD",811.9,811.9,73,21,0)
^.001^4^4^3050124^^
"^DD",811.9,811.9,73,21,1,0)
This is the number of lines in the SUMMARY COHORT NOT FOUND TEXT. If
"^DD",811.9,811.9,73,21,2,0)
the number ends with "T" then the text contains TIU objects. This
"^DD",811.9,811.9,73,21,3,0)
field is set automatically during reminder edit and should never be
"^DD",811.9,811.9,73,21,4,0)
edited by hand.  
"^DD",811.9,811.9,73,"DT")
3040607
"^DD",811.9,811.9,75,0)
SUMMARY RES. FOUND TEXT^811.975^^75;0
"^DD",811.9,811.9,75,9)
^
"^DD",811.9,811.9,75,21,0)
^.001^4^4^3050124^^^
"^DD",811.9,811.9,75,21,1,0)
This optional field defines the summary text to display when the
"^DD",811.9,811.9,75,21,2,0)
Resolution Logic is true. Summary text is used for components such 
"^DD",811.9,811.9,75,21,3,0)
as MyHealtheVet Summary.
"^DD",811.9,811.9,75,21,4,0)

"^DD",811.9,811.9,75,"DT")
3040608
"^DD",811.9,811.9,76,0)
SUMMARY RES. NOT FOUND TEXT^811.976^^76;0
"^DD",811.9,811.9,76,9)
^
"^DD",811.9,811.9,76,21,0)
^.001^4^4^3050124^^^
"^DD",811.9,811.9,76,21,1,0)
This optional field defines the summary text to display when the
"^DD",811.9,811.9,76,21,2,0)
Resolution Logic is false. Summary text is used for components such 
"^DD",811.9,811.9,76,21,3,0)
as MyHealtheVet Summary.
"^DD",811.9,811.9,76,21,4,0)

"^DD",811.9,811.9,77,0)
# SUM. RES. FOUND LINES^F^^77;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,77,3)
Do not edit this field.
"^DD",811.9,811.9,77,9)
^
"^DD",811.9,811.9,77,21,0)
^.001^5^5^3050124^^
"^DD",811.9,811.9,77,21,1,0)
This is the number of lines in the SUMMARY RESOLUTION FOUND TEXT. If
"^DD",811.9,811.9,77,21,2,0)
the number ends with "T" then the text contains TIU objects. This
"^DD",811.9,811.9,77,21,3,0)
field is set automatically during reminder edit and should never be
"^DD",811.9,811.9,77,21,4,0)
edited by hand.  
"^DD",811.9,811.9,77,21,5,0)

"^DD",811.9,811.9,77,"DT")
3040608
"^DD",811.9,811.9,78,0)
# SUM. RES. NOT FOUND LINES^F^^77;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,78,3)
Do not edit this field.
"^DD",811.9,811.9,78,9)
^
"^DD",811.9,811.9,78,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.9,78,21,1,0)
This is the number of lines in the SUMMARY RESOLUTION NOT FOUND
"^DD",811.9,811.9,78,21,2,0)
TEXT. If the number ends with "T" then the text contains TIU
"^DD",811.9,811.9,78,21,3,0)
objects. This field is set automatically during reminder edit and
"^DD",811.9,811.9,78,21,4,0)
should never be edited by hand.
"^DD",811.9,811.9,78,"DT")
3040608
"^DD",811.9,811.9,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.9,811.9,100,3)
Enter the CLASS.
"^DD",811.9,811.9,100,21,0)
^.001^3^3^3050124^^^^
"^DD",811.9,811.9,100,21,1,0)
This is the CLASS of the taxonomy. Possible classes are "N" for
"^DD",811.9,811.9,100,21,2,0)
national, "V" for VISN, and "L" for local. National taxonomies cannot
"^DD",811.9,811.9,100,21,3,0)
be edited by sites.
"^DD",811.9,811.9,100,"DT")
3050120
"^DD",811.9,811.9,101,0)
SPONSOR^P811.6X^PXRMD(811.6,^100;2^K:'$$VSPONSOR^PXRMINTR(X) X
"^DD",811.9,811.9,101,3)
Enter the SPONSOR.
"^DD",811.9,811.9,101,21,0)
^.001^1^1^3050124^^^
"^DD",811.9,811.9,101,21,1,0)
This is the organization or group that sponsors this definition.
"^DD",811.9,811.9,101,"DT")
3010604
"^DD",811.9,811.9,102,0)
REVIEW DATE^D^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9,102,3)
Enter the REVIEW DATE.
"^DD",811.9,811.9,102,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.9,102,21,1,0)
The REVIEW DATE is used to determine when the definition should be
"^DD",811.9,811.9,102,21,2,0)
reviewed to verify that it is current with the latest standards and
"^DD",811.9,811.9,102,21,3,0)
guidelines. You can find all reminder definitions whose review date
"^DD",811.9,811.9,102,21,4,0)
has passed using the Clinical Reminders Review Date Report.
"^DD",811.9,811.9,102,"DT")
3010416
"^DD",811.9,811.9,103,0)
USAGE^RFX^^100;4^S X=$$UP^XLFSTR(X) K:'$$VUSAGE^PXRMINTR(X) X
"^DD",811.9,811.9,103,3)
Enter usage codes.
"^DD",811.9,811.9,103,21,0)
^.001^17^17^3050124^^^^
"^DD",811.9,811.9,103,21,1,0)
The Usage field describes how the reminder definition will be
"^DD",811.9,811.9,103,21,2,0)
used. This field must contain C if the reminder is to be selected
"^DD",811.9,811.9,103,21,3,0)
in CPRS. The L value will override all other values. For
"^DD",811.9,811.9,103,21,4,0)
example, if L and C are defined in the usage field, the Reminder
"^DD",811.9,811.9,103,21,5,0)
will not show on the cover sheet in CPRS, because L is in the
"^DD",811.9,811.9,103,21,6,0)
Usage field.
"^DD",811.9,811.9,103,21,7,0)

"^DD",811.9,811.9,103,21,8,0)
This is free text field and can contain any combination of the
"^DD",811.9,811.9,103,21,9,0)
following codes: 
"^DD",811.9,811.9,103,21,10,0)
                                 
"^DD",811.9,811.9,103,21,11,0)
             Code  Usage 
"^DD",811.9,811.9,103,21,12,0)
              C    CPRS  
"^DD",811.9,811.9,103,21,13,0)
              L    Reminder Patient List
"^DD",811.9,811.9,103,21,14,0)
              P    Patient
"^DD",811.9,811.9,103,21,15,0)
              R    Reminder Reports  
"^DD",811.9,811.9,103,21,16,0)
              X    Reminder Extracts  
"^DD",811.9,811.9,103,21,17,0)
              *    All of the above, except L and P.
"^DD",811.9,811.9,103,"DT")
3060615
"^DD",811.9,811.9,110,0)
EDIT HISTORY^811.9001D^^110;0
"^DD",811.9,811.9,110,21,0)
^.001^2^2^3050124^^^^
"^DD",811.9,811.9,110,21,1,0)
This multiple is used to record a history of changes made to the
"^DD",811.9,811.9,110,21,2,0)
definition.
"^DD",811.9,811.9001,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",811.9,811.9001,0,"DT")
3010416
"^DD",811.9,811.9001,0,"IX","B",811.9001,.01)

"^DD",811.9,811.9001,0,"NM","EDIT HISTORY")

"^DD",811.9,811.9001,0,"UP")
811.9
"^DD",811.9,811.9001,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9001,.01,1,0)
^.1
"^DD",811.9,811.9001,.01,1,1,0)
811.9001^B
"^DD",811.9,811.9001,.01,1,1,1)
S ^PXD(811.9,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.9001,.01,1,1,2)
K ^PXD(811.9,DA(1),110,"B",$E(X,1,30),DA)
"^DD",811.9,811.9001,.01,3)
Do not edit this field.
"^DD",811.9,811.9001,.01,21,0)
^.001^2^2^3050124^^^
"^DD",811.9,811.9001,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",811.9,811.9001,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",811.9,811.9001,.01,"DT")
3010416
"^DD",811.9,811.9001,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",811.9,811.9001,1,3)
Do not edit this field.
"^DD",811.9,811.9001,1,21,0)
^.001^2^2^3050124^^^^
"^DD",811.9,811.9001,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",811.9,811.9001,1,21,2,0)
and should not be changed by the user.
"^DD",811.9,811.9001,1,"DT")
3010416
"^DD",811.9,811.9001,2,0)
EDIT COMMENTS^811.90012^^1;0
"^DD",811.9,811.9001,2,21,0)
^.001^2^2^3050124^^^^
"^DD",811.9,811.9001,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",811.9,811.9001,2,21,2,0)
during the editing session.
"^DD",811.9,811.9001,2,"DT")
3010425
"^DD",811.9,811.90012,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",811.9,811.90012,0,"DT")
3010416
"^DD",811.9,811.90012,0,"NM","EDIT COMMENTS")

"^DD",811.9,811.90012,0,"UP")
811.9001
"^DD",811.9,811.90012,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",811.9,811.90012,.01,3)
Enter your edit comments.
"^DD",811.9,811.90012,.01,"DT")
3010425
"^DD",811.9,811.9002,0)
WEB SITES SUB-FIELD^^1^3
"^DD",811.9,811.9002,0,"DT")
2991130
"^DD",811.9,811.9002,0,"IX","C",811.9002,.01)

"^DD",811.9,811.9002,0,"NM","WEB SITES")

"^DD",811.9,811.9002,0,"UP")
811.9
"^DD",811.9,811.9002,.01,0)
URL^MF^^0;1^K:$L(X)>128!($L(X)<1) X
"^DD",811.9,811.9002,.01,1,0)
^.1
"^DD",811.9,811.9002,.01,1,1,0)
811.9002^C
"^DD",811.9,811.9002,.01,1,1,1)
S ^PXD(811.9,DA(1),50,"C",$E(X,1,30),DA)=""
"^DD",811.9,811.9002,.01,1,1,2)
K ^PXD(811.9,DA(1),50,"C",$E(X,1,30),DA)
"^DD",811.9,811.9002,.01,1,1,"DT")
3010502
"^DD",811.9,811.9002,.01,3)
Enter a URL.
"^DD",811.9,811.9002,.01,21,0)
^.001^1^1^3050121^^^^
"^DD",811.9,811.9002,.01,21,1,0)
This is the URL for the web site.
"^DD",811.9,811.9002,.01,"DT")
3010502
"^DD",811.9,811.9002,.02,0)
WEB SITE TITLE^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",811.9,811.9002,.02,3)
Enter the web site title.
"^DD",811.9,811.9002,.02,21,0)
^.001^3^3^3050121^^^^
"^DD",811.9,811.9002,.02,21,1,0)
This is the web site title that is used by the CPRS GUI. It will
"^DD",811.9,811.9002,.02,21,2,0)
appear after a right click, allowing the user to select the web
"^DD",811.9,811.9002,.02,21,3,0)
site.
"^DD",811.9,811.9002,.02,"DT")
2991130
"^DD",811.9,811.9002,1,0)
WEB SITE DESCRIPTION^811.90021^^1;0
"^DD",811.9,811.9002,1,21,0)
^.001^1^1^3050121^^^^
"^DD",811.9,811.9002,1,21,1,0)
This field contains a description of the Web site.
"^DD",811.9,811.90021,0)
WEB SITE DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.90021,0,"DT")
2991130
"^DD",811.9,811.90021,0,"NM","WEB SITE DESCRIPTION")

"^DD",811.9,811.90021,0,"UP")
811.9002
"^DD",811.9,811.90021,.01,0)
WEB SITE DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.90021,.01,3)
Enter the Web site description.
"^DD",811.9,811.90021,.01,"DT")
2991130
"^DD",811.9,811.9003,0)
GENERAL COHORT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9003,0,"DT")
3000110
"^DD",811.9,811.9003,0,"NM","GENERAL COHORT FOUND TEXT")

"^DD",811.9,811.9003,0,"UP")
811.9
"^DD",811.9,811.9003,.01,0)
GENERAL COHORT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9003,.01,.1)
GENERAL PATIENT COHORT FOUND TEXT
"^DD",811.9,811.9003,.01,3)
Enter general text to display when the Patient Cohort Logic is true.
"^DD",811.9,811.9003,.01,"DT")
3031016
"^DD",811.9,811.9004,0)
SUMMARY COHORT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9004,0,"DT")
3040604
"^DD",811.9,811.9004,0,"NM","SUMMARY COHORT FOUND TEXT")

"^DD",811.9,811.9004,0,"UP")
811.9
"^DD",811.9,811.9004,.01,0)
SUMMARY COHORT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9004,.01,.1)
SUMMARY PATIENT COHORT FOUND TEXT
"^DD",811.9,811.9004,.01,3)
Enter the summary text to display when the Patient Cohort Logic is true.
"^DD",811.9,811.9004,.01,21,0)
^.001^1^1^3050124^^^^
"^DD",811.9,811.9004,.01,21,1,0)

"^DD",811.9,811.9004,.01,"DT")
3040608
"^DD",811.9,811.902,0)
FINDINGS SUB-FIELD^^28^27
"^DD",811.9,811.902,0,"DT")
3060127
"^DD",811.9,811.902,0,"IX","B",811.902,.01)

"^DD",811.9,811.902,0,"NM","FINDINGS")

"^DD",811.9,811.902,0,"UP")
811.9
"^DD",811.9,811.902,.01,0)
FINDING ITEM^MVX^^0;1^K:'$$VFINDING^PXRMINTR(X) X
"^DD",811.9,811.902,.01,1,0)
^.1^^-1
"^DD",811.9,811.902,.01,1,1,0)
811.902^B
"^DD",811.9,811.902,.01,1,1,1)
S ^PXD(811.9,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.902,.01,1,1,2)
K ^PXD(811.9,DA(1),20,"B",$E(X,1,30),DA)
"^DD",811.9,811.902,.01,1,1,3)
Required Index for Variable Pointer
"^DD",811.9,811.902,.01,3)
Enter a finding item in the format: Prefix.Name
"^DD",811.9,811.902,.01,21,0)
^.001^2^2^3050124^^^^
"^DD",811.9,811.902,.01,21,1,0)
This field identifies the finding items included in the reminder
"^DD",811.9,811.902,.01,21,2,0)
definition.
"^DD",811.9,811.902,.01,"DT")
3060616
"^DD",811.9,811.902,.01,"V",0)
^.12P^17^17
"^DD",811.9,811.902,.01,"V",1,0)
50^DRUG^5^DR^n^n
"^DD",811.9,811.902,.01,"V",2,0)
9999999.09^EDUCATION TOPIC^10^ED^n^n
"^DD",811.9,811.902,.01,"V",3,0)
9999999.15^EXAM^15^EX^n^n
"^DD",811.9,811.902,.01,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^n^n
"^DD",811.9,811.902,.01,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^n^n
"^DD",811.9,811.902,.01,"V",6,0)
60^LABORATORY TEST^30^LT^n^n
"^DD",811.9,811.902,.01,"V",7,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^n^n
"^DD",811.9,811.902,.01,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^n^n
"^DD",811.9,811.902,.01,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^n^n
"^DD",811.9,811.902,.01,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^n^n
"^DD",811.9,811.902,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^n^n
"^DD",811.9,811.902,.01,"V",12,0)
811.5^REMINDER TERM^60^RT^n^n
"^DD",811.9,811.902,.01,"V",13,0)
9999999.28^SKIN TEST^65^ST^n^n
"^DD",811.9,811.902,.01,"V",14,0)
50.605^VA DRUG CLASS^70^DC^n^n
"^DD",811.9,811.902,.01,"V",15,0)
50.6^VA GENERIC^75^DG^n^n
"^DD",811.9,811.902,.01,"V",16,0)
120.51^VITAL MEASUREMENT^80^VM^n^n
"^DD",811.9,811.902,.01,"V",17,0)
810.9^REMINDER LOCATION LIST^17^RL^n^n
"^DD",811.9,811.902,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,1,1,0)
^.1^^0
"^DD",811.9,811.902,1,3)
Enter the minimum age for the frequency associated with this finding.
"^DD",811.9,811.902,1,21,0)
^.001^2^2^3050120^^^^
"^DD",811.9,811.902,1,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.902,1,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.902,1,"DT")
3031107
"^DD",811.9,811.902,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,2,1,0)
^.1^^0
"^DD",811.9,811.902,2,3)
Enter the maximum age for the frequency associated with this finding.
"^DD",811.9,811.902,2,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.902,2,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.902,2,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.902,2,"DT")
3031107
"^DD",811.9,811.902,3,0)
REMINDER FREQUENCY^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.902,3,1,0)
^.1^^0
"^DD",811.9,811.902,3,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.902,3,21,0)
^.001^6^6^3050212^^^^
"^DD",811.9,811.902,3,21,1,0)
If this finding is true (found) then use this frequency and the age
"^DD",811.9,811.902,3,21,2,0)
range specified by the MINIMUM AGE and MAXIMUM AGE to override the
"^DD",811.9,811.902,3,21,3,0)
baseline frequency age range set. The frequency is input as nD, nM,
"^DD",811.9,811.902,3,21,4,0)
or nY, where n is a number and D stands for days, M for months, Y
"^DD",811.9,811.902,3,21,5,0)
for years. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.902,3,21,6,0)
values 365D, 12M, or 1Y would all work.
"^DD",811.9,811.902,3,"DT")
3031107
"^DD",811.9,811.902,4,0)
FOUND TEXT^811.9024^^1;0
"^DD",811.9,811.902,4,9)
^
"^DD",811.9,811.902,4,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.902,4,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.902,4,21,2,0)
output if this finding is found (true).
"^DD",811.9,811.902,5,0)
NOT FOUND TEXT^811.9025^^2;0
"^DD",811.9,811.902,5,9)
^
"^DD",811.9,811.902,5,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.902,5,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.902,5,21,2,0)
output if the finding is not found (false).
"^DD",811.9,811.902,6,0)
RANK FREQUENCY^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,6,3)
Enter an optional rank from 1 to 999 or leave blank.
"^DD",811.9,811.902,6,21,0)
^.001^11^11^3050120^^^^
"^DD",811.9,811.902,6,21,1,0)
This field is used to rank the frequency and age range sets associated
"^DD",811.9,811.902,6,21,2,0)
with a finding. If there is more than one true finding that can
"^DD",811.9,811.902,6,21,3,0)
override the baseline frequency age range set, then the determination of
"^DD",811.9,811.902,6,21,4,0)
which one to use is made based on the finding with the highest rank.
"^DD",811.9,811.902,6,21,5,0)
Ranks can range from 1 to 999 with 1 being the highest rank.
"^DD",811.9,811.902,6,21,6,0)
 
"^DD",811.9,811.902,6,21,7,0)
When the Rank field is blank (null) for all true findings that can
"^DD",811.9,811.902,6,21,8,0)
override the baseline frequency age range set, then the frequency that
"^DD",811.9,811.902,6,21,9,0)
will cause the reminder to be given most often will be used. For
"^DD",811.9,811.902,6,21,10,0)
example, if finding 1 has a frequency of 6 months, and finding 2 has a
"^DD",811.9,811.902,6,21,11,0)
frequency of 1 year, finding 1 will be used to override the baseline.
"^DD",811.9,811.902,6,"DT")
2990325
"^DD",811.9,811.902,7,0)
USE IN RESOLUTION LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;6^Q
"^DD",811.9,811.902,7,1,0)
^.1^^0
"^DD",811.9,811.902,7,3)
Enter the logic operator to be used in the default Internal Resolution Logic.
"^DD",811.9,811.902,7,21,0)
^.001^27^27^3050124^^^^
"^DD",811.9,811.902,7,21,1,0)
This optional field is used to indicate that this finding item
"^DD",811.9,811.902,7,21,2,0)
should be included as part of the resolution logic for this
"^DD",811.9,811.902,7,21,3,0)
reminder. Note - if the CUSTOMIZED RESOLUTION LOGIC is defined then
"^DD",811.9,811.902,7,21,4,0)
this field is ignored.
"^DD",811.9,811.902,7,21,5,0)
 
"^DD",811.9,811.902,7,21,6,0)
Valid entries for the USE IN RESOLUTION LOGIC field are:
"^DD",811.9,811.902,7,21,7,0)
 
"^DD",811.9,811.902,7,21,8,0)
                       EQUATES TO BOOLEAN
"^DD",811.9,811.902,7,21,9,0)
  OPERATOR   VALUE     OPERATOR LOGIC
"^DD",811.9,811.902,7,21,10,0)
  --------   -----     ------------------
"^DD",811.9,811.902,7,21,11,0)
             BLANK     not included in Resolution Logic
"^DD",811.9,811.902,7,21,12,0)
                       (Use @ to delete value)
"^DD",811.9,811.902,7,21,13,0)
   &         AND       &(Finding)
"^DD",811.9,811.902,7,21,14,0)
   !         OR        !(Finding)
"^DD",811.9,811.902,7,21,15,0)
   &'        AND NOT   &'(Finding)
"^DD",811.9,811.902,7,21,16,0)
   !'        OR NOT    !'(Finding)
"^DD",811.9,811.902,7,21,17,0)
 
"^DD",811.9,811.902,7,21,18,0)
All finding items that have a value in this field are automatically
"^DD",811.9,811.902,7,21,19,0)
combined to create the DEFAULT RESOLUTION LOGIC.
"^DD",811.9,811.902,7,21,20,0)
 
"^DD",811.9,811.902,7,21,21,0)
After all findings have been evaluated, the finding item is replaced
"^DD",811.9,811.902,7,21,22,0)
by its true or false value in the resolution logic and the
"^DD",811.9,811.902,7,21,23,0)
resolution logic is evaluated. If the resolution logic evaluates to
"^DD",811.9,811.902,7,21,24,0)
true, then the last resolution date is determined. The applicable
"^DD",811.9,811.902,7,21,25,0)
frequency is added to the resolution date to determine when the
"^DD",811.9,811.902,7,21,26,0)
reminder is next due. If the resolution logic evaluates to false,
"^DD",811.9,811.902,7,21,27,0)
then reminder is due.
"^DD",811.9,811.902,7,"DT")
3031107
"^DD",811.9,811.902,8,0)
USE IN PATIENT COHORT LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;7^Q
"^DD",811.9,811.902,8,1,0)
^.1^^0
"^DD",811.9,811.902,8,3)
Enter the logic operator to be used in the default Internal Patient Cohort Logic
"^DD",811.9,811.902,8,21,0)
^.001^31^31^3050124^^^^
"^DD",811.9,811.902,8,21,1,0)
This optional field is used to indicate that this finding item
"^DD",811.9,811.902,8,21,2,0)
should be included as part of the Patient Cohort Logic for this
"^DD",811.9,811.902,8,21,3,0)
reminder. Note - if the CUSTOMIZED COHORT LOGIC is defined then this
"^DD",811.9,811.902,8,21,4,0)
field is ignored.
"^DD",811.9,811.902,8,21,5,0)
 
"^DD",811.9,811.902,8,21,6,0)
Valid entries for the USE IN PATIENT COHORT LOGIC field are:
"^DD",811.9,811.902,8,21,7,0)
 
"^DD",811.9,811.902,8,21,8,0)
                     EQUATES TO BOOLEAN
"^DD",811.9,811.902,8,21,9,0)
  OPERATOR  VALUE     OPERATOR LOGIC
"^DD",811.9,811.902,8,21,10,0)
  --------  -----     ------------------
"^DD",811.9,811.902,8,21,11,0)
            BLANK     not included in Patient Cohort Logic
"^DD",811.9,811.902,8,21,12,0)
                      (Use @ to delete value)
"^DD",811.9,811.902,8,21,13,0)
   &        AND       &(Finding)
"^DD",811.9,811.902,8,21,14,0)
   !        OR        !(Finding)
"^DD",811.9,811.902,8,21,15,0)
   &'       AND NOT   &'(Finding)
"^DD",811.9,811.902,8,21,16,0)
   !'       OR NOT    !'(Finding)
"^DD",811.9,811.902,8,21,17,0)
 
"^DD",811.9,811.902,8,21,18,0)
All finding items that have a value in this field are automatically
"^DD",811.9,811.902,8,21,19,0)
combined to create the DEFAULT COHORT LOGIC. The default logic
"^DD",811.9,811.902,8,21,20,0)
string initially includes (SEX)&(AGE), regardless of whether the
"^DD",811.9,811.902,8,21,21,0)
baseline specifies SEX and AGE criteria. Each finding item with a
"^DD",811.9,811.902,8,21,22,0)
value in the Use In Patient Cohort Logic field is appended to the
"^DD",811.9,811.902,8,21,23,0)
string by using the operator and finding item. For example, if
"^DD",811.9,811.902,8,21,24,0)
finding item 2 had an operator for this field of "&" then the string
"^DD",811.9,811.902,8,21,25,0)
would be (SEX)&(AGE)&FI(2).
"^DD",811.9,811.902,8,21,26,0)

"^DD",811.9,811.902,8,21,27,0)
After all findings have been evaluated, the finding item is replaced
"^DD",811.9,811.902,8,21,28,0)
by its true or false value in the cohort logic and the cohort logic
"^DD",811.9,811.902,8,21,29,0)
is evaluated. If the cohort logic evaluates to true, then the reminder
"^DD",811.9,811.902,8,21,30,0)
is applicable to the patient. If the cohort logic evaluates to false,
"^DD",811.9,811.902,8,21,31,0)
then reminder is non-applicable or N/A.
"^DD",811.9,811.902,8,"DT")
3031107
"^DD",811.9,811.902,9,0)
BEGINNING DATE/TIME^FX^^0;8^S X=$$COTN^PXRMDATE(X) K:(($L(X)<1)!($L(X)>20)!('$$VDT^PXRMINTR(X))) X
"^DD",811.9,811.902,9,3)
Enter the Beginning Date/Time
"^DD",811.9,811.902,9,21,0)
^.001^13^13^3050124^^^^
"^DD",811.9,811.902,9,21,1,0)
This is the beginning date/time to search for the finding. When
"^DD",811.9,811.902,9,21,2,0)
combined with the ENDING DATE/TIME, they define a date range in
"^DD",811.9,811.902,9,21,3,0)
which to search for the finding.
"^DD",811.9,811.902,9,21,4,0)

"^DD",811.9,811.902,9,21,5,0)
This can be entered in acceptable FileMan date/time formats and
"^DD",811.9,811.902,9,21,6,0)
abbreviations. In addition, you may use the abbreviations T-NY or
"^DD",811.9,811.902,9,21,7,0)
NOW-NY, where N is an integer and Y stands for years. If this is
"^DD",811.9,811.902,9,21,8,0)
null, then the beginning date/time will correspond with the 
"^DD",811.9,811.902,9,21,9,0)
date/time of the oldest entry.
"^DD",811.9,811.902,9,21,10,0)

"^DD",811.9,811.902,9,21,11,0)
See the FileMan Getting Started Manual to learn about acceptable
"^DD",811.9,811.902,9,21,12,0)
FileMan date/time formats and abbreviations.
"^DD",811.9,811.902,9,21,13,0)

"^DD",811.9,811.902,9,"DT")
3040924
"^DD",811.9,811.902,10,0)
USE INACTIVE PROBLEMS^S^1:YES;0:N;^0;9^Q
"^DD",811.9,811.902,10,3)
Enter a 1 or YES if you want inactive problems used.
"^DD",811.9,811.902,10,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.902,10,21,1,0)
Normally only active problems from the Problem List will be used in the
"^DD",811.9,811.902,10,21,2,0)
reminder evaluation. If USE INACTIVE PROBLEMS is set to YES then both
"^DD",811.9,811.902,10,21,3,0)
active and inactive problems will be used. Note that this field applies
"^DD",811.9,811.902,10,21,4,0)
only to taxonomy findings.
"^DD",811.9,811.902,10,"DT")
2990325
"^DD",811.9,811.902,11,0)
WITHIN CATEGORY RANK^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,11,3)
Enter a number between 0 and 999.
"^DD",811.9,811.902,11,21,0)
^.001^16^16^3050124^^^^
"^DD",811.9,811.902,11,21,1,0)
This field applies only to health factors. In order to understand
"^DD",811.9,811.902,11,21,2,0)
how it works, you need to understand how health factors work in the
"^DD",811.9,811.902,11,21,3,0)
reminder evaluation process. If you are not clear about this, see
"^DD",811.9,811.902,11,21,4,0)
the health factor section of the Clinical Reminder Manager Manual.
"^DD",811.9,811.902,11,21,5,0)

"^DD",811.9,811.902,11,21,6,0)
The default behavior is to use only the most recent health factor
"^DD",811.9,811.902,11,21,7,0)
within a category. A problem can arise if there are two or more
"^DD",811.9,811.902,11,21,8,0)
health factors within a category and they both have the same date.
"^DD",811.9,811.902,11,21,9,0)
(This can happen if both health factors are given during the same
"^DD",811.9,811.902,11,21,10,0)
encounter).  When the dates are the same, the health factor with the
"^DD",811.9,811.902,11,21,11,0)
highest WITHIN CATEGORY RANK will be used. This is a numerical value
"^DD",811.9,811.902,11,21,12,0)
like RANK FREQUENCY, with 1 being the highest rank.
"^DD",811.9,811.902,11,21,13,0)

"^DD",811.9,811.902,11,21,14,0)
If WITHIN CATEGORY RANK has the special value of 0, then the
"^DD",811.9,811.902,11,21,15,0)
categorization of health factors will be ignored and the health
"^DD",811.9,811.902,11,21,16,0)
factor will be treated as a distinct finding.
"^DD",811.9,811.902,11,"DT")
3000501
"^DD",811.9,811.902,12,0)
ENDING DATE/TIME^FX^^0;11^S X=$$COTN^PXRMDATE(X) K:(($L(X)<1)!($L(X)>20)!('$$VDT^PXRMINTR(X))) X
"^DD",811.9,811.902,12,3)
Enter the Ending Date/Time
"^DD",811.9,811.902,12,21,0)
^.001^15^15^3050124^^^^
"^DD",811.9,811.902,12,21,1,0)
This is the ending date/time to search for findings. When combined
"^DD",811.9,811.902,12,21,2,0)
with the BEGINNING DATE/TIME they define a date range in which to
"^DD",811.9,811.902,12,21,3,0)
search for the finding. The ENDING DATE/TIME must be after the
"^DD",811.9,811.902,12,21,4,0)
BEGINNING DATE/TIME.
"^DD",811.9,811.902,12,21,5,0)

"^DD",811.9,811.902,12,21,6,0)
This can be entered in acceptable FileMan date/time formats and
"^DD",811.9,811.902,12,21,7,0)
abbreviations. In addition, you may use the abbreviations T-NY or 
"^DD",811.9,811.902,12,21,8,0)
NOW-NY, where N is an integer and Y stands for years. If this is null,
"^DD",811.9,811.902,12,21,9,0)
then the end date/time will correspond with the date/time of the
"^DD",811.9,811.902,12,21,10,0)
most recent entry.  
"^DD",811.9,811.902,12,21,11,0)
                                 
"^DD",811.9,811.902,12,21,12,0)
See the FileMan Getting Started Manual to learn about acceptable
"^DD",811.9,811.902,12,21,13,0)
FileMan date/time formats and abbreviations.
"^DD",811.9,811.902,12,21,14,0)

"^DD",811.9,811.902,12,21,15,0)

"^DD",811.9,811.902,12,"DT")
3040924
"^DD",811.9,811.902,13,0)
MH SCALE^FX^^0;12^K:(($L(X)>79)!($L(X)<1)!('$$VSCALEF^PXRMMH(X))) X
"^DD",811.9,811.902,13,3)
Enter the scale number or scale name.
"^DD",811.9,811.902,13,4)
D SCHELPF^PXRMMH
"^DD",811.9,811.902,13,21,0)
^.001^2^2^3050124^^^^
"^DD",811.9,811.902,13,21,1,0)
This applies only to Mental Health Instrument findings. It specifies
"^DD",811.9,811.902,13,21,2,0)
which scale to use when scoring the Mental Health test.
"^DD",811.9,811.902,13,"DT")
3030423
"^DD",811.9,811.902,14,0)
CONDITION^FX^^3;1^K:($L(X)<3)!($L(X)>225)!('$$VCOND^PXRMCOND(X)) X
"^DD",811.9,811.902,14,3)
Answer must be 3-225 characters in length.
"^DD",811.9,811.902,14,21,0)
^.001^49^49^3050124^^^^
"^DD",811.9,811.902,14,21,1,0)
The CONDITION must be written in M code based on the value returned from
"^DD",811.9,811.902,14,21,2,0)
the patient results for the finding. Each type of finding has a specific
"^DD",811.9,811.902,14,21,3,0)
field that provides the value available to use in the CONDITION logic.
"^DD",811.9,811.902,14,21,4,0)
If the finding value is text, enclose the condition value in quotes 
"^DD",811.9,811.902,14,21,5,0)
(e.g., "positive"). If the finding value is numeric, do not use quotes
"^DD",811.9,811.902,14,21,6,0)
(e.g., 3).
"^DD",811.9,811.902,14,21,7,0)
 
"^DD",811.9,811.902,14,21,8,0)
An IF statement is used to evaluate the value.  The value is always
"^DD",811.9,811.902,14,21,9,0)
identified as V in the statement regardless of the type of finding. If 
"^DD",811.9,811.902,14,21,10,0)
the condition logic statement evaluates to true, the finding is 
"^DD",811.9,811.902,14,21,11,0)
considered as found (true); otherwise the finding is considered as not
"^DD",811.9,811.902,14,21,12,0)
found (false).
"^DD",811.9,811.902,14,21,13,0)
 
"^DD",811.9,811.902,14,21,14,0)
Relational operators that may be used include: = equals, < less than, >
"^DD",811.9,811.902,14,21,15,0)
greater than, [ contains, ] follows and ? pattern matches. Logical
"^DD",811.9,811.902,14,21,16,0)
operators may be used to check multiple values: & And, ! Or, ' Not. 
"^DD",811.9,811.902,14,21,17,0)
         
"^DD",811.9,811.902,14,21,18,0)
Typical examples of M code are as follows:
"^DD",811.9,811.902,14,21,19,0)
    I V=3 for Education Topic's Level of Understanding = 3
"^DD",811.9,811.902,14,21,20,0)
    I V="H" for Health Factor's Level/Severity="H"
"^DD",811.9,811.902,14,21,21,0)
    I ($P(V,"/",1)>140)&($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.9,811.902,14,21,22,0)
    systolic and diastolic values
"^DD",811.9,811.902,14,21,23,0)
    I ($P(V,"/",1)>140)!($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.9,811.902,14,21,24,0)
    systolic or diastolic values
"^DD",811.9,811.902,14,21,25,0)
    I V["BLACK" for VA-RACE computed finding where race contains BLACK
"^DD",811.9,811.902,14,21,26,0)
 
"^DD",811.9,811.902,14,21,27,0)
Below is a brief summary for each finding type, the related field to use
"^DD",811.9,811.902,14,21,28,0)
for the value, and examples:
"^DD",811.9,811.902,14,21,29,0)
 
"^DD",811.9,811.902,14,21,30,0)
Finding type                Field Value Used        Example M Code
"^DD",811.9,811.902,14,21,31,0)
 
"^DD",811.9,811.902,14,21,32,0)
 Drug                       None
"^DD",811.9,811.902,14,21,33,0)
 Education Topic            Level of understanding  I V=3
"^DD",811.9,811.902,14,21,34,0)
 Exam                       Result                  I V="N"
"^DD",811.9,811.902,14,21,35,0)
 Health Factor              Level/severity          I V="H"
"^DD",811.9,811.902,14,21,36,0)
 Immunization               Series                  I V="P"
"^DD",811.9,811.902,14,21,37,0)
 Laboratory Test            Result Value            I V>130
"^DD",811.9,811.902,14,21,38,0)
 Mental Health Instrument   Raw score               I V=1
"^DD",811.9,811.902,14,21,39,0)
 Orderable Item             Status                  I V="complete"
"^DD",811.9,811.902,14,21,40,0)
 Radiology Procedure        None
"^DD",811.9,811.902,14,21,41,0)
 Reminder Computed Finding  Determined by programmer-See Manager Manual
"^DD",811.9,811.902,14,21,42,0)
 Reminder Taxonomy          None
"^DD",811.9,811.902,14,21,43,0)
 Skin Test                  Result                  I V="N"
"^DD",811.9,811.902,14,21,44,0)
 VA Drug Class              None
"^DD",811.9,811.902,14,21,45,0)
 VA Generic                 None
"^DD",811.9,811.902,14,21,46,0)
 Vital Measurement          Rate                    I V>27
"^DD",811.9,811.902,14,21,47,0)
 
"^DD",811.9,811.902,14,21,48,0)
For details about allowed CONDITIONS for each finding type, see the
"^DD",811.9,811.902,14,21,49,0)
Clinical Reminders Manager Manual.
"^DD",811.9,811.902,14,"DT")
3030923
"^DD",811.9,811.902,15,0)
CONDITION CASE SENSITIVE^S^0:NO;1:YES;^3;2^Q
"^DD",811.9,811.902,15,3)
Enter NO to make the condition case insensitive.
"^DD",811.9,811.902,15,21,0)
^.001^3^3^3050124^^^^
"^DD",811.9,811.902,15,21,1,0)
When CONDITION CASE SENSITIVE is NO, then the CONDITION will be
"^DD",811.9,811.902,15,21,2,0)
evaluated without regard to case. The default is YES, so that
"^DD",811.9,811.902,15,21,3,0)
CONDITION evaluation is case sensitive.
"^DD",811.9,811.902,15,"DT")
3040907
"^DD",811.9,811.902,16,0)
RXTYPE^FX^^0;13^S X=$$UP^XLFSTR(X) K:($L(X)>20)!($L(X)<1)!('$$VRXTYPE^PXRMRXTY(X)) X
"^DD",811.9,811.902,16,3)
Enter the RXTYPE string.
"^DD",811.9,811.902,16,4)
D RXTYXHLP^PXRMRXTY
"^DD",811.9,811.902,16,21,0)
^.001^6^6^3050124^^^^
"^DD",811.9,811.902,16,21,1,0)
RXTYPE applies only to drug findings; it controls the search for
"^DD",811.9,811.902,16,21,2,0)
patient medications. The possible values for RXTYPE are "I" for
"^DD",811.9,811.902,16,21,3,0)
inpatient, "N" for non-VA meds, and "O" for outpatient. RXTYPE can
"^DD",811.9,811.902,16,21,4,0)
be any combination of these such as "NO" which will search for
"^DD",811.9,811.902,16,21,5,0)
non-VA meds and outpatient medications. If RXTYPE is blank it is
"^DD",811.9,811.902,16,21,6,0)
equivalent to a value of "INO".
"^DD",811.9,811.902,16,"DT")
3040924
"^DD",811.9,811.902,17,0)
OCCURRENCE COUNT^NJ2,0^^0;14^K:+X'=X!(X>99)!(X<-99)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,17,3)
Type a Number between -99 and 99, 0 Decimal Digits
"^DD",811.9,811.902,17,21,0)
^.001^7^7^3050212^^^^
"^DD",811.9,811.902,17,21,1,0)
This is the maximum number of occurrences of the finding in the date
"^DD",811.9,811.902,17,21,2,0)
range to return. If the OCCURRENCE COUNT is input as a positive number,
"^DD",811.9,811.902,17,21,3,0)
N, up to N of the most recent occurrences will be returned and the
"^DD",811.9,811.902,17,21,4,0)
finding will take the value of the most recent occurrence. If the
"^DD",811.9,811.902,17,21,5,0)
OCCURRENCE COUNT is input as a negative number then this behavior is
"^DD",811.9,811.902,17,21,6,0)
reversed. Up to N of the oldest occurrences will be returned and the
"^DD",811.9,811.902,17,21,7,0)
finding will take the value of the oldest occurrence in the list.
"^DD",811.9,811.902,17,"DT")
3030922
"^DD",811.9,811.902,18,0)
USE STATUS/COND IN SEARCH^S^1:YES;0:NO;^3;3^Q
"^DD",811.9,811.902,18,3)
Enter a "Yes" if you want the STATUS LIST and/or CONDITION used in the finding search.
"^DD",811.9,811.902,18,21,0)
^.001^11^11^3060509^^^^
"^DD",811.9,811.902,18,21,1,0)
Give this field a value of "YES" if you want the STATUS LIST and/or
"^DD",811.9,811.902,18,21,2,0)
CONDITION applied to each result found in the date range for this
"^DD",811.9,811.902,18,21,3,0)
finding. Only results that have a status on the list or for which
"^DD",811.9,811.902,18,21,4,0)
the CONDITION is true will be retained. The maximum number to retain
"^DD",811.9,811.902,18,21,5,0)
is specified by the OCCURRENCE COUNT.
"^DD",811.9,811.902,18,21,6,0)

"^DD",811.9,811.902,18,21,7,0)
Note - if the finding has both a STATUS LIST and a CONDITION the
"^DD",811.9,811.902,18,21,8,0)
status check will be made first; the CONDITION will be applied only
"^DD",811.9,811.902,18,21,9,0)
if the finding passes the status check.
"^DD",811.9,811.902,18,21,10,0)

"^DD",811.9,811.902,18,21,11,0)

"^DD",811.9,811.902,18,"DT")
3060509
"^DD",811.9,811.902,21,0)
STATUS LIST^811.90221^^5;0
"^DD",811.9,811.902,21,9)
^
"^DD",811.9,811.902,21,21,0)
^.001^6^6^3050212^^^^
"^DD",811.9,811.902,21,21,1,0)
This field applies to finding types that have an associated status.
"^DD",811.9,811.902,21,21,2,0)
When the search for patient findings is done only those findings that
"^DD",811.9,811.902,21,21,3,0)
have a status on the list can be true. The allowable values depend on
"^DD",811.9,811.902,21,21,4,0)
the finding type. If no statuses are specified then the default list
"^DD",811.9,811.902,21,21,5,0)
for each finding type will be used. The default lists can be found in
"^DD",811.9,811.902,21,21,6,0)
the Clinical Reminders Manager Manual.
"^DD",811.9,811.902,22,0)
INTERNAL CONDITION^F^^10;1^K:$L(X)>245!($L(X)<3) X
"^DD",811.9,811.902,22,3)
Do not edit this field.
"^DD",811.9,811.902,22,21,0)
^.001^2^2^3050212^^^^
"^DD",811.9,811.902,22,21,1,0)
This is the internal form of the condition. It is set automatically and
"^DD",811.9,811.902,22,21,2,0)
should never be set by hand.
"^DD",811.9,811.902,22,"DT")
3030915
"^DD",811.9,811.902,23,0)
V SUBSCRIPT LIST^F^^11;1^K:$L(X)>245!($L(X)<1) X
"^DD",811.9,811.902,23,3)
Do not edit this field.
"^DD",811.9,811.902,23,21,0)
^.001^3^3^3050212^^^^
"^DD",811.9,811.902,23,21,1,0)
This is a list of V value subscripts used in the CONDITION. It is used
"^DD",811.9,811.902,23,21,2,0)
when the CONDITION is not case sensitive. This should never be set by
"^DD",811.9,811.902,23,21,3,0)
hand.
"^DD",811.9,811.902,23,"DT")
3030915
"^DD",811.9,811.902,24,0)
NO. OF FOUND TEXT LINES^F^^6;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.902,24,3)
Do not edit this field.
"^DD",811.9,811.902,24,9)
^
"^DD",811.9,811.902,24,21,0)
^.001^5^5^3050212^^^^
"^DD",811.9,811.902,24,21,1,0)
This is the number of lines in the found text. If the number ends
"^DD",811.9,811.902,24,21,2,0)
with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.902,24,21,3,0)
automatically during reminder edit and should never be edited by
"^DD",811.9,811.902,24,21,4,0)
hand.
"^DD",811.9,811.902,24,21,5,0)

"^DD",811.9,811.902,24,"DT")
3031017
"^DD",811.9,811.902,25,0)
NO. NOT FOUND TEXT LINES^F^^6;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.902,25,3)
Do not edit this field.
"^DD",811.9,811.902,25,9)
^
"^DD",811.9,811.902,25,21,0)
^.001^5^5^3050212^^^^
"^DD",811.9,811.902,25,21,1,0)
This is the number of lines in the not found text. If the number
"^DD",811.9,811.902,25,21,2,0)
ends with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.902,25,21,3,0)
automatically during reminder edit and should never be edited by
"^DD",811.9,811.902,25,21,4,0)
hand.
"^DD",811.9,811.902,25,21,5,0)

"^DD",811.9,811.902,25,"DT")
3031017
"^DD",811.9,811.902,26,0)
COMPUTED FINDING PARAMETER^F^^15;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",811.9,811.902,26,3)
Answer must be 1-245 characters in length.
"^DD",811.9,811.902,26,21,0)
^.001^1^1^3050212^^^^
"^DD",811.9,811.902,26,21,1,0)
This field is used to pass a parameter into the computed finding.
"^DD",811.9,811.902,26,"DT")
3060609
"^DD",811.9,811.902,27,0)
USE START DATE^S^0:NO;1:YES;^0;15^Q
"^DD",811.9,811.902,27,3)
Enter YES if you want to use the Start Date as the date of the finding
"^DD",811.9,811.902,27,21,0)
^.001^4^4^3050808^^^^
"^DD",811.9,811.902,27,21,1,0)
For findings that have a Start Date and a Stop Date the default is
"^DD",811.9,811.902,27,21,2,0)
to use the Stop Date as the date of the finding. Enter a YES for
"^DD",811.9,811.902,27,21,3,0)
this field if you want to use the Start Date as the date of the
"^DD",811.9,811.902,27,21,4,0)
finding.
"^DD",811.9,811.902,27,"DT")
3050708
"^DD",811.9,811.902,28,0)
INCLUDE VISIT DATA^S^0:NO;1:YES;^0;16^Q
"^DD",811.9,811.902,28,3)
Enter YES or NO
"^DD",811.9,811.902,28,21,0)
^^5^5^3060127^
"^DD",811.9,811.902,28,21,1,0)
This applies only to V file findings; if it is "YES" then data from
"^DD",811.9,811.902,28,21,2,0)
the associated visit will be available for use in a Condition. The
"^DD",811.9,811.902,28,21,3,0)
default is "NO."
"^DD",811.9,811.902,28,21,4,0)

"^DD",811.9,811.902,28,21,5,0)

"^DD",811.9,811.902,28,"DT")
3060127
"^DD",811.9,811.90221,0)
STATUS LIST SUB-FIELD^^.01^1
"^DD",811.9,811.90221,0,"DT")
3020802
"^DD",811.9,811.90221,0,"IX","B",811.90221,.01)

"^DD",811.9,811.90221,0,"NM","STATUS LIST")

"^DD",811.9,811.90221,0,"UP")
811.902
"^DD",811.9,811.90221,.01,0)
STATUS^MFX^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.9,811.90221,.01,1,0)
^.1
"^DD",811.9,811.90221,.01,1,1,0)
811.90221^B
"^DD",811.9,811.90221,.01,1,1,1)
S ^PXD(811.9,DA(2),20,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.90221,.01,1,1,2)
K ^PXD(811.9,DA(2),20,DA(1),5,"B",$E(X,1,30),DA)
"^DD",811.9,811.90221,.01,3)
Enter a status.
"^DD",811.9,811.90221,.01,4)

"^DD",811.9,811.90221,.01,21,0)
^.001^10^10^3050124^^^^
"^DD",811.9,811.90221,.01,21,1,0)
This multiple is used  to store a list of possible statuses that the
"^DD",811.9,811.90221,.01,21,2,0)
reminder  will look for when evaluating a finding item. This field
"^DD",811.9,811.90221,.01,21,3,0)
should only be  populated  if the finding item is a Drug, Radiology
"^DD",811.9,811.90221,.01,21,4,0)
Procedure, Order, or  Taxonomy. This field is designed  to only be
"^DD",811.9,811.90221,.01,21,5,0)
populated  through the Reminder  Definition/Term editors; this field
"^DD",811.9,811.90221,.01,21,6,0)
should not be edited using FileMan. The reason for this is because
"^DD",811.9,811.90221,.01,21,7,0)
each finding item can only have certain possible statuses assigned 
"^DD",811.9,811.90221,.01,21,8,0)
to it. The editors will evaluate the finding items and allow the
"^DD",811.9,811.90221,.01,21,9,0)
users to only  select a status from an appropriate list of statuses
"^DD",811.9,811.90221,.01,21,10,0)
for that finding item.
"^DD",811.9,811.90221,.01,"DT")
3040903
"^DD",811.9,811.9024,0)
FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9024,0,"DT")
2990325
"^DD",811.9,811.9024,0,"NM","FOUND TEXT")

"^DD",811.9,811.9024,0,"UP")
811.902
"^DD",811.9,811.9024,.01,0)
FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9024,.01,3)
Enter the found text.
"^DD",811.9,811.9024,.01,"DT")
2990325
"^DD",811.9,811.9025,0)
NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9025,0,"DT")
2990325
"^DD",811.9,811.9025,0,"NM","NOT FOUND TEXT")

"^DD",811.9,811.9025,0,"UP")
811.902
"^DD",811.9,811.9025,.01,0)
NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9025,.01,3)
Enter the not found text.
"^DD",811.9,811.9025,.01,"DT")
2990325
"^DD",811.9,811.92,0)
REMINDER DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.92,0,"NM","REMINDER DESCRIPTION")

"^DD",811.9,811.92,0,"UP")
811.9
"^DD",811.9,811.92,.01,0)
REMINDER DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.92,.01,3)
Enter the REMINDER DESCRIPTION.
"^DD",811.9,811.92,.01,"DT")
2960131
"^DD",811.9,811.925,0)
FUNCTION FINDINGS SUB-FIELD^^16^17
"^DD",811.9,811.925,0,"DT")
3041116
"^DD",811.9,811.925,0,"ID",3)
W:$D(^(3)) "   ",$P(^(3),U,1)
"^DD",811.9,811.925,0,"IX","B",811.925,.01)

"^DD",811.9,811.925,0,"NM","FUNCTION FINDINGS")

"^DD",811.9,811.925,0,"UP")
811.9
"^DD",811.9,811.925,.01,0)
FUNCTION FINDING NUMBER^MNJ3,0X^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X I $D(X) S DINUM=X
"^DD",811.9,811.925,.01,1,0)
^.1
"^DD",811.9,811.925,.01,1,1,0)
811.925^B
"^DD",811.9,811.925,.01,1,1,1)
S ^PXD(811.9,DA(1),25,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.925,.01,1,1,2)
K ^PXD(811.9,DA(1),25,"B",$E(X,1,30),DA)
"^DD",811.9,811.925,.01,3)
Enter the number of the function finding you are defining.
"^DD",811.9,811.925,.01,21,0)
^.001^2^2^3050124^^^
"^DD",811.9,811.925,.01,21,1,0)
This is the number of the function finding you want to create or
"^DD",811.9,811.925,.01,21,2,0)
edit.
"^DD",811.9,811.925,.01,"DT")
3040715
"^DD",811.9,811.925,1,0)
FOUND TEXT^811.9251^^1;0
"^DD",811.9,811.925,1,9)
^
"^DD",811.9,811.925,1,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.925,1,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.925,1,21,2,0)
output if  this function finding is found (true).
"^DD",811.9,811.925,2,0)
NOT FOUND TEXT^811.9252^^2;0
"^DD",811.9,811.925,2,9)
^
"^DD",811.9,811.925,2,21,0)
^.001^2^2^3050121^^
"^DD",811.9,811.925,2,21,1,0)
This is the text that will be displayed in the Clinical Maintenance output if 
"^DD",811.9,811.925,2,21,2,0)
the function finding is not found (false).  
"^DD",811.9,811.925,3,0)
FUNCTION STRING^FX^^3;1^K:$L(X)>245!($L(X)<2)!('$$VFSTRING^PXRMFFDB(X,.DA)) X
"^DD",811.9,811.925,3,3)
Answer must be 2-245 characters in length.
"^DD",811.9,811.925,3,4)
D FSXHELP^PXRMFFH
"^DD",811.9,811.925,3,21,0)
^^2^2^3050121^
"^DD",811.9,811.925,3,21,1,0)
FUNCTION STRING is input by the user and it defines a function finding.
"^DD",811.9,811.925,3,21,2,0)

"^DD",811.9,811.925,3,"DT")
3040712
"^DD",811.9,811.925,5,0)
FUNCTION LIST^811.9255^^5;0
"^DD",811.9,811.925,5,21,0)
^.001^3^3^3050121^^^^
"^DD",811.9,811.925,5,21,1,0)
FUNCTION LIST is a data structure that is used to efficiently
"^DD",811.9,811.925,5,21,2,0)
evaluate function findings. It is generated automatically and should
"^DD",811.9,811.925,5,21,3,0)
never be edited by user.
"^DD",811.9,811.925,10,0)
LOGIC^F^^10;1^K:$L(X)>250!($L(X)<3) X
"^DD",811.9,811.925,10,3)
Do not edit this field.
"^DD",811.9,811.925,10,21,0)
^.001^4^4^3050121^^
"^DD",811.9,811.925,10,21,1,0)
This is the internal representation of the function string. For
"^DD",811.9,811.925,10,21,2,0)
example, if the function string is MIN_DATE(1,2)>MAX_DATE(3) then 
"^DD",811.9,811.925,10,21,3,0)
the LOGIC field would be FN(1)>FN(2).
"^DD",811.9,811.925,10,21,4,0)

"^DD",811.9,811.925,10,"DT")
3021212
"^DD",811.9,811.925,11,0)
USE IN RESOLUTION LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;6^Q
"^DD",811.9,811.925,11,3)
Enter the logical operator
"^DD",811.9,811.925,11,21,0)
^.001^27^27^3050124^^^
"^DD",811.9,811.925,11,21,1,0)
This optional field is used to indicate that this finding item
"^DD",811.9,811.925,11,21,2,0)
should be included as part of the resolution logic for this
"^DD",811.9,811.925,11,21,3,0)
reminder. Note - if the CUSTOMIZED RESOLUTION LOGIC is defined, then
"^DD",811.9,811.925,11,21,4,0)
this field is ignored.
"^DD",811.9,811.925,11,21,5,0)
 
"^DD",811.9,811.925,11,21,6,0)
Valid entries for the USE IN RESOLUTION LOGIC field are:
"^DD",811.9,811.925,11,21,7,0)
 
"^DD",811.9,811.925,11,21,8,0)
                       EQUATES TO BOOLEAN
"^DD",811.9,811.925,11,21,9,0)
  OPERATOR   VALUE     OPERATOR LOGIC
"^DD",811.9,811.925,11,21,10,0)
  --------   -----     ------------------
"^DD",811.9,811.925,11,21,11,0)
             BLANK     not included in Resolution Logic
"^DD",811.9,811.925,11,21,12,0)
                       (Use @ to delete value)
"^DD",811.9,811.925,11,21,13,0)
   &         AND       &(Finding)
"^DD",811.9,811.925,11,21,14,0)
   !         OR        !(Finding)
"^DD",811.9,811.925,11,21,15,0)
   &'        AND NOT   &'(Finding)
"^DD",811.9,811.925,11,21,16,0)
   !'        OR NOT    !'(Finding)
"^DD",811.9,811.925,11,21,17,0)
 
"^DD",811.9,811.925,11,21,18,0)
All finding items that have a value in this field are automatically
"^DD",811.9,811.925,11,21,19,0)
combined to create the DEFAULT RESOLUTION LOGIC.
"^DD",811.9,811.925,11,21,20,0)
 
"^DD",811.9,811.925,11,21,21,0)
After all findings have been evaluated, the finding item is replaced
"^DD",811.9,811.925,11,21,22,0)
by its true or false value in the resolution logic and the
"^DD",811.9,811.925,11,21,23,0)
resolution logic is evaluated. If the resolution logic evaluates to
"^DD",811.9,811.925,11,21,24,0)
true, then the last resolution date is determined. The applicable
"^DD",811.9,811.925,11,21,25,0)
frequency is added to the resolution date to determine when the
"^DD",811.9,811.925,11,21,26,0)
reminder is next due. If the resolution logic evaluates to false,
"^DD",811.9,811.925,11,21,27,0)
then reminder is due.
"^DD",811.9,811.925,11,"DT")
3041118
"^DD",811.9,811.925,12,0)
USE IN PATIENT COHORT LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;7^Q
"^DD",811.9,811.925,12,3)
Enter the logical operator 
"^DD",811.9,811.925,12,21,0)
^.001^31^31^3050124^^
"^DD",811.9,811.925,12,21,1,0)
This optional field is used to indicate that this finding item
"^DD",811.9,811.925,12,21,2,0)
should be included as part of the Patient Cohort Logic for this
"^DD",811.9,811.925,12,21,3,0)
reminder. Note - if the CUSTOMIZED COHORT LOGIC is defined, then this
"^DD",811.9,811.925,12,21,4,0)
field is ignored.
"^DD",811.9,811.925,12,21,5,0)
 
"^DD",811.9,811.925,12,21,6,0)
Valid entries for the USE IN PATIENT COHORT LOGIC field are:
"^DD",811.9,811.925,12,21,7,0)
 
"^DD",811.9,811.925,12,21,8,0)
                     EQUATES TO BOOLEAN
"^DD",811.9,811.925,12,21,9,0)
  OPERATOR  VALUE     OPERATOR LOGIC
"^DD",811.9,811.925,12,21,10,0)
  --------  -----     ------------------
"^DD",811.9,811.925,12,21,11,0)
            BLANK     not included in Patient Cohort Logic
"^DD",811.9,811.925,12,21,12,0)
                      (Use @ to delete value)
"^DD",811.9,811.925,12,21,13,0)
   &        AND       &(Finding)
"^DD",811.9,811.925,12,21,14,0)
   !        OR        !(Finding)
"^DD",811.9,811.925,12,21,15,0)
   &'       AND NOT   &'(Finding)
"^DD",811.9,811.925,12,21,16,0)
   !'       OR NOT    !'(Finding)
"^DD",811.9,811.925,12,21,17,0)
 
"^DD",811.9,811.925,12,21,18,0)
All finding items that have a value in this field are automatically
"^DD",811.9,811.925,12,21,19,0)
combined to create the DEFAULT COHORT LOGIC. The default logic
"^DD",811.9,811.925,12,21,20,0)
string initially includes (SEX)&(AGE), regardless of whether the
"^DD",811.9,811.925,12,21,21,0)
baseline specifies SEX and AGE criteria. Each finding item with a
"^DD",811.9,811.925,12,21,22,0)
value in the Use In Patient Cohort Logic field is appended to the
"^DD",811.9,811.925,12,21,23,0)
string by using the operator and finding item. For example, if
"^DD",811.9,811.925,12,21,24,0)
finding item 2 had an operator for this field of "&" then the string
"^DD",811.9,811.925,12,21,25,0)
would be (SEX)&(AGE)&FI(2).
"^DD",811.9,811.925,12,21,26,0)

"^DD",811.9,811.925,12,21,27,0)
After all findings have been evaluated, the finding item is replaced
"^DD",811.9,811.925,12,21,28,0)
by its true or false value in the cohort logic and the cohort logic
"^DD",811.9,811.925,12,21,29,0)
is evaluated. If the cohort logic evaluates to true, then the reminder
"^DD",811.9,811.925,12,21,30,0)
is applicable to the patient. If the cohort logic evaluates to false
"^DD",811.9,811.925,12,21,31,0)
then reminder is non-applicable or N/A.
"^DD",811.9,811.925,12,"DT")
3031107
"^DD",811.9,811.925,13,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.925,13,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",811.9,811.925,13,21,0)
^^2^2^3050120^
"^DD",811.9,811.925,13,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.925,13,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.925,13,"DT")
3031107
"^DD",811.9,811.925,14,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.925,14,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",811.9,811.925,14,21,0)
^^2^2^3050120^
"^DD",811.9,811.925,14,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.925,14,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.925,14,"DT")
3031107
"^DD",811.9,811.925,15,0)
REMINDER FREQUENCY^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.925,15,3)
Answer must be 1-15 characters in length.
"^DD",811.9,811.925,15,21,0)
^^6^6^3050120^
"^DD",811.9,811.925,15,21,1,0)
If this finding is true (found) then use this frequency and the age
"^DD",811.9,811.925,15,21,2,0)
range specified by the MINIMUM AGE and MAXIMUM AGE to override the
"^DD",811.9,811.925,15,21,3,0)
baseline frequency age range set. The frequency is input as nD, nM,
"^DD",811.9,811.925,15,21,4,0)
or nY, where n is a number and D stands for days, M for months, Y
"^DD",811.9,811.925,15,21,5,0)
for years. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.925,15,21,6,0)
values 365D, 12M, or 1Y would all work.
"^DD",811.9,811.925,15,"DT")
3031107
"^DD",811.9,811.925,16,0)
RANK FREQUENCY^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.925,16,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",811.9,811.925,16,21,0)
^^11^11^3050120^
"^DD",811.9,811.925,16,21,1,0)
This field is used to rank the frequency and age range sets associated
"^DD",811.9,811.925,16,21,2,0)
with a finding. If there is more than one true finding that can
"^DD",811.9,811.925,16,21,3,0)
override the baseline frequency age range set, then the determination of
"^DD",811.9,811.925,16,21,4,0)
which one to use is made based on the finding with the highest rank.
"^DD",811.9,811.925,16,21,5,0)
Ranks can range from 1 to 999 with 1 being the highest rank.
"^DD",811.9,811.925,16,21,6,0)
 
"^DD",811.9,811.925,16,21,7,0)
When the Rank field is blank (null) for all true findings that can
"^DD",811.9,811.925,16,21,8,0)
override the baseline frequency age range set, then the frequency that
"^DD",811.9,811.925,16,21,9,0)
will cause the reminder to be given most often will be used. For
"^DD",811.9,811.925,16,21,10,0)
example, if finding 1 has a frequency of 6 months, and finding 2 has a
"^DD",811.9,811.925,16,21,11,0)
frequency of 1 year, finding 1 will be used to override the baseline.
"^DD",811.9,811.925,16,"DT")
3031210
"^DD",811.9,811.925,40,0)
NAME^F^^40;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.9,811.925,40,3)
Answer must be 1-64 characters in length.
"^DD",811.9,811.925,40,21,0)
^.001^7^7^3050121^^
"^DD",811.9,811.925,40,21,1,0)
If the NAME field is present it will be displayed with the function
"^DD",811.9,811.925,40,21,2,0)
finding result in the Clinical Maintenance output. The format is
"^DD",811.9,811.925,40,21,3,0)
 Function Finding: NAME
"^DD",811.9,811.925,40,21,4,0)
If NAME is null then the format will be:
"^DD",811.9,811.925,40,21,5,0)
 Function Finding: function
"^DD",811.9,811.925,40,21,6,0)
where function is the name of the function used in the function
"^DD",811.9,811.925,40,21,7,0)
finding.
"^DD",811.9,811.925,40,"DT")
3030922
"^DD",811.9,811.925,41,0)
NO. FOUND TEXT LINES^F^^6;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.925,41,3)
Do not edit this field.
"^DD",811.9,811.925,41,9)
^
"^DD",811.9,811.925,41,21,0)
^.001^4^4^3050121^^^^
"^DD",811.9,811.925,41,21,1,0)
This is the number of lines in the found text. If the number ends
"^DD",811.9,811.925,41,21,2,0)
with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.925,41,21,3,0)
automatically during reminder edit and should never be edited by hand.
"^DD",811.9,811.925,41,21,4,0)

"^DD",811.9,811.925,41,"DT")
3031017
"^DD",811.9,811.925,42,0)
NO. NOT FOUND TEXT LINES^F^^6;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.925,42,3)
Do not edit this field.
"^DD",811.9,811.925,42,9)
^
"^DD",811.9,811.925,42,21,0)
^.001^4^4^3050121^^^^
"^DD",811.9,811.925,42,21,1,0)
This is the number of lines in the not found text. If the number ends
"^DD",811.9,811.925,42,21,2,0)
with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.925,42,21,3,0)
automatically during reminder edit and should never be edited by hand.
"^DD",811.9,811.925,42,21,4,0)

"^DD",811.9,811.925,42,"DT")
3031017
"^DD",811.9,811.9251,0)
FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9251,0,"DT")
3021223
"^DD",811.9,811.9251,0,"NM","FOUND TEXT")

"^DD",811.9,811.9251,0,"UP")
811.925
"^DD",811.9,811.9251,.01,0)
FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9251,.01,"DT")
3021223
"^DD",811.9,811.9252,0)
NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9252,0,"DT")
3021223
"^DD",811.9,811.9252,0,"NM","NOT FOUND TEXT")

"^DD",811.9,811.9252,0,"UP")
811.925
"^DD",811.9,811.9252,.01,0)
NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9252,.01,"DT")
3021223
"^DD",811.9,811.9255,0)
FUNCTION LIST SUB-FIELD^^20^3
"^DD",811.9,811.9255,0,"DT")
3021212
"^DD",811.9,811.9255,0,"NM","FUNCTION LIST")

"^DD",811.9,811.9255,0,"UP")
811.925
"^DD",811.9,811.9255,.01,0)
FUNCTION NUMBER^MNJ3,0^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.9255,.01,1,0)
^.1^^0
"^DD",811.9,811.9255,.01,3)
Do not edit this field.
"^DD",811.9,811.9255,.01,21,0)
^.001^6^6^3050121^^
"^DD",811.9,811.9255,.01,21,1,0)
FUNCTION NUMBER is an internal counter of the functions used in the
"^DD",811.9,811.9255,.01,21,2,0)
function string. For example, if the function string is
"^DD",811.9,811.9255,.01,21,3,0)
MIN_DATE(1,2)>MAX_DATE(3) then function number 1 is MIN_DATE and
"^DD",811.9,811.9255,.01,21,4,0)
function number 2 is MAX_DATE. The function numbers correspond with
"^DD",811.9,811.9255,.01,21,5,0)
the internal number used in field #10 LOGIC. For the above function
"^DD",811.9,811.9255,.01,21,6,0)
string the LOGIC field would be FN(1)>FN(2).
"^DD",811.9,811.9255,.01,"DT")
3030911
"^DD",811.9,811.9255,.02,0)
FUNCTION^P802.4'X^PXRMD(802.4,^0;2^Q
"^DD",811.9,811.9255,.02,3)
Do not edit this field.
"^DD",811.9,811.9255,.02,21,0)
^.001^4^4^3050121^^
"^DD",811.9,811.9255,.02,21,1,0)
FUNCTION is a pointer to the Function File, #802.4. For example, if
"^DD",811.9,811.9255,.02,21,2,0)
the function string is MIN_DATE(1,2)>MAX_DATE(3) then function
"^DD",811.9,811.9255,.02,21,3,0)
number 1 is MIN_DATE and FUNCTION is the pointer to the MIN_DATE
"^DD",811.9,811.9255,.02,21,4,0)
funtion in file #802.4
"^DD",811.9,811.9255,.02,"DT")
3021216
"^DD",811.9,811.9255,20,0)
FUNCTION ARGUMENT LIST^811.9256^^20;0
"^DD",811.9,811.9255,20,21,0)
^.001^6^6^3050121^^^
"^DD",811.9,811.9255,20,21,1,0)
The FUNCTION ARGUMENT LIST multiple is the list of arguments
"^DD",811.9,811.9255,20,21,2,0)
(finding numbers) for each function in the function string. For
"^DD",811.9,811.9255,20,21,3,0)
example, if the function string is MIN_DATE(1,2)>MAX_DATE(3) then
"^DD",811.9,811.9255,20,21,4,0)
the argument list for function number 1 is 1 and 2 and the argument
"^DD",811.9,811.9255,20,21,5,0)
list for function 2 is 3.
"^DD",811.9,811.9255,20,21,6,0)

"^DD",811.9,811.9256,0)
FUNCTION ARGUMENT LIST SUB-FIELD^^.01^1
"^DD",811.9,811.9256,0,"DT")
3021212
"^DD",811.9,811.9256,0,"NM","FUNCTION ARGUMENT LIST")

"^DD",811.9,811.9256,0,"UP")
811.9255
"^DD",811.9,811.9256,.01,0)
FINDING NUMBER^MNJ3,0X^^0;1^K:'$$VFINDING^PXRMFFDB(X,DA(3)) X
"^DD",811.9,811.9256,.01,1,0)
^.1^^0
"^DD",811.9,811.9256,.01,3)
Do not edit this field.
"^DD",811.9,811.9256,.01,21,0)
^.001^1^1^3050121^^
"^DD",811.9,811.9256,.01,21,1,0)
This is an individual argument (finding number).
"^DD",811.9,811.9256,.01,"DT")
3030911
"^DD",811.9,811.93,0)
TECHNICAL DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.93,0,"NM","TECHNICAL DESCRIPTION")

"^DD",811.9,811.93,0,"UP")
811.9
"^DD",811.9,811.93,.01,0)
TECHNICAL DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.93,.01,.1)
 
"^DD",811.9,811.93,.01,3)
Enter the TECHNICAL DESCRIPTION.
"^DD",811.9,811.93,.01,"DT")
2960131
"^DD",811.9,811.948,0)
CUSTOM DATE DUE ARG LIST SUB-FIELD^^.02^2
"^DD",811.9,811.948,0,"DT")
3050121
"^DD",811.9,811.948,0,"IX","B",811.948,.01)

"^DD",811.9,811.948,0,"NM","CUSTOM DATE DUE ARG LIST")

"^DD",811.9,811.948,0,"UP")
811.9
"^DD",811.9,811.948,.01,0)
FINDING^NJ3,0^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.948,.01,1,0)
^.1
"^DD",811.9,811.948,.01,1,1,0)
811.948^B
"^DD",811.9,811.948,.01,1,1,1)
S ^PXD(811.9,DA(1),47,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.948,.01,1,1,2)
K ^PXD(811.9,DA(1),47,"B",$E(X,1,30),DA)
"^DD",811.9,811.948,.01,3)
Do not edit this field.
"^DD",811.9,811.948,.01,21,0)
^^2^2^3050121^
"^DD",811.9,811.948,.01,21,1,0)
This is the number of a finding used in the custom date due string.
"^DD",811.9,811.948,.01,21,2,0)
It is created automatically and should not be set by hand.
"^DD",811.9,811.948,.01,"DT")
3050121
"^DD",811.9,811.948,.02,0)
FREQUENCY^F^^0;2^K:$L(X)>8!($L(X)<2) X
"^DD",811.9,811.948,.02,3)
Do not edit this field.
"^DD",811.9,811.948,.02,21,0)
^^3^3^3050121^
"^DD",811.9,811.948,.02,21,1,0)
This is the frequency that is associated with the finding defined in
"^DD",811.9,811.948,.02,21,2,0)
the .01 field of the CUSTOM DATE DUE ARGUMENT LIST. It is created
"^DD",811.9,811.948,.02,21,3,0)
automatically and should never be set by hand.
"^DD",811.9,811.948,.02,"DT")
3030807
"^DD",811.9,811.961,0)
GENERAL COHORT NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.961,0,"DT")
3000110
"^DD",811.9,811.961,0,"NM","GENERAL COHORT NOT FOUND TEXT")

"^DD",811.9,811.961,0,"UP")
811.9
"^DD",811.9,811.961,.01,0)
GENERAL COHORT NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.961,.01,.1)
GENERAL PATIENT COHORT NOT FOUND TEXT
"^DD",811.9,811.961,.01,3)
Enter general text to display when the Patient Cohort Logic is false.
"^DD",811.9,811.961,.01,"DT")
3000504
"^DD",811.9,811.965,0)
GENERAL RES. FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.965,0,"DT")
3000110
"^DD",811.9,811.965,0,"NM","GENERAL RES. FOUND TEXT")

"^DD",811.9,811.965,0,"UP")
811.9
"^DD",811.9,811.965,.01,0)
GENERAL RES. FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.965,.01,.1)
GENERAL RESOLUTION FOUND TEXT
"^DD",811.9,811.965,.01,3)
Enter general text to display when the Resolution Logic is true.
"^DD",811.9,811.965,.01,"DT")
3040607
"^DD",811.9,811.966,0)
GENERAL RES. NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.966,0,"DT")
3000110
"^DD",811.9,811.966,0,"NM","GENERAL RES. NOT FOUND TEXT")

"^DD",811.9,811.966,0,"UP")
811.9
"^DD",811.9,811.966,.01,0)
GENERAL RES. NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.966,.01,.1)
GENERAL RESOLUTION NOT FOUND TEXT
"^DD",811.9,811.966,.01,3)
Enter general text to display when the Resolution Logic is false.
"^DD",811.9,811.966,.01,"DT")
3040607
"^DD",811.9,811.97,0)
BASELINE AGE FINDINGS SUB-FIELD^^6^7
"^DD",811.9,811.97,0,"DT")
3031016
"^DD",811.9,811.97,0,"IX","B",811.97,.01)

"^DD",811.9,811.97,0,"NM","BASELINE AGE FINDINGS")

"^DD",811.9,811.97,0,"UP")
811.9
"^DD",811.9,811.97,.01,0)
REMINDER FREQUENCY^MFX^^0;1^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.97,.01,1,0)
^.1
"^DD",811.9,811.97,.01,1,1,0)
811.97^B
"^DD",811.9,811.97,.01,1,1,1)
S ^PXD(811.9,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.97,.01,1,1,2)
K ^PXD(811.9,DA(1),7,"B",$E(X,1,30),DA)
"^DD",811.9,811.97,.01,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.97,.01,21,0)
^.001^5^5^3050121^^^^
"^DD",811.9,811.97,.01,21,1,0)
This is the frequency for the reminder. It is input as nD, nM, or
"^DD",811.9,811.97,.01,21,2,0)
nY, where D stands for days, M for months, Y for years, and n is a
"^DD",811.9,811.97,.01,21,3,0)
number. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.97,.01,21,4,0)
values 365D, 12M, or 1Y would all work. If a reminder is only to be
"^DD",811.9,811.97,.01,21,5,0)
given once in a lifetime use a frequency of 99Y.
"^DD",811.9,811.97,.01,"DT")
2970505
"^DD",811.9,811.97,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.97,1,3)
Enter the minimum age for this reminder frequency.
"^DD",811.9,811.97,1,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.97,1,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.97,1,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.97,1,"DT")
2960201
"^DD",811.9,811.97,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.97,2,3)
Enter the maximum age for this reminder frequency.
"^DD",811.9,811.97,2,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.97,2,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.97,2,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.97,2,"DT")
2960201
"^DD",811.9,811.97,3,0)
AGE MATCH TEXT^811.973^^1;0
"^DD",811.9,811.97,3,9)
^
"^DD",811.9,811.97,3,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.97,3,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.97,3,21,2,0)
component if the patient's age falls within the age range.
"^DD",811.9,811.97,4,0)
AGE NO MATCH TEXT^811.974^^2;0
"^DD",811.9,811.97,4,9)
^
"^DD",811.9,811.97,4,21,0)
^.001^2^2^3050121^^
"^DD",811.9,811.97,4,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.97,4,21,2,0)
component if the patient's age does not fall in the age range.
"^DD",811.9,811.97,4,"DT")
2960201
"^DD",811.9,811.97,5,0)
NO. OF AGE MATCH LINES^F^^3;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.97,5,3)
Do not edit this field.
"^DD",811.9,811.97,5,9)
^
"^DD",811.9,811.97,5,21,0)
^.001^3^3^3050121^^^^
"^DD",811.9,811.97,5,21,1,0)
This is the number of lines in the age match text. If the number ends
"^DD",811.9,811.97,5,21,2,0)
with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.97,5,21,3,0)
automatically during reminder edit and should never be edited by hand.
"^DD",811.9,811.97,5,"DT")
3031016
"^DD",811.9,811.97,6,0)
NO. OF AGE NO MATCH LINES^F^^3;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.97,6,3)
Do not edit this field.
"^DD",811.9,811.97,6,9)
^
"^DD",811.9,811.97,6,21,0)
^.001^4^4^3050121^^
"^DD",811.9,811.97,6,21,1,0)
This is the number of lines in the age no match text. If the number ends
"^DD",811.9,811.97,6,21,2,0)
with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.97,6,21,3,0)
automatically during reminder edit and should never be edited by hand.
"^DD",811.9,811.97,6,21,4,0)

"^DD",811.9,811.97,6,"DT")
3031016
"^DD",811.9,811.971,0)
SUMMARY COHORT NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.971,0,"DT")
3040604
"^DD",811.9,811.971,0,"NM","SUMMARY COHORT NOT FOUND TEXT")

"^DD",811.9,811.971,0,"UP")
811.9
"^DD",811.9,811.971,.01,0)
SUMMARY COHORT NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.971,.01,.1)
SUMMARY PATIENT COHORT NOT FOUND TEXT
"^DD",811.9,811.971,.01,3)
Enter the summary text to display when the Patient Cohort Logic is false.
"^DD",811.9,811.971,.01,21,0)
^.001^1^1^3050124^^^^
"^DD",811.9,811.971,.01,21,1,0)

"^DD",811.9,811.971,.01,"DT")
3040608
"^DD",811.9,811.973,0)
AGE MATCH TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.973,0,"DT")
2960201
"^DD",811.9,811.973,0,"NM","AGE MATCH TEXT")

"^DD",811.9,811.973,0,"UP")
811.97
"^DD",811.9,811.973,.01,0)
AGE MATCH TEXT^W^^0;1^Q
"^DD",811.9,811.973,.01,3)
Enter text to display for a match on age range.
"^DD",811.9,811.973,.01,"DT")
2960201
"^DD",811.9,811.974,0)
AGE NO MATCH TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.974,0,"DT")
2960201
"^DD",811.9,811.974,0,"NM","AGE NO MATCH TEXT")

"^DD",811.9,811.974,0,"UP")
811.97
"^DD",811.9,811.974,.01,0)
AGE NO MATCH TEXT^W^^0;1^Q
"^DD",811.9,811.974,.01,3)
Enter the text to display for no match on age range.
"^DD",811.9,811.974,.01,"DT")
2960201
"^DD",811.9,811.975,0)
SUMMARY RES. FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.975,0,"DT")
3040608
"^DD",811.9,811.975,0,"NM","SUMMARY RES. FOUND TEXT")

"^DD",811.9,811.975,0,"UP")
811.9
"^DD",811.9,811.975,.01,0)
SUMMARY RESOLUTION FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.975,.01,.1)
SUMMARY RESOLUTION LOGIC FOUND TEXT
"^DD",811.9,811.975,.01,3)
Enter the summary text to display when the Resolution Logic is true.
"^DD",811.9,811.975,.01,"DT")
3040608
"^DD",811.9,811.976,0)
SUMMARY RES. NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.976,0,"DT")
3040608
"^DD",811.9,811.976,0,"NM","SUMMARY RES. NOT FOUND TEXT")

"^DD",811.9,811.976,0,"UP")
811.9
"^DD",811.9,811.976,.01,0)
SUMMARY RES. NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.976,.01,.1)
SUMMARY RESOLUTION LOGIC NOT FOUND TEXT
"^DD",811.9,811.976,.01,3)
Enter the summary text to display when the Resolution Logic is false.
"^DD",811.9,811.976,.01,21,0)
^.001^1^1^3050124^^^^
"^DD",811.9,811.976,.01,21,1,0)

"^DD",811.9,811.976,.01,"DT")
3040608
"^DIC",800,800,0)
CLINICAL REMINDER PARAMETERS^800
"^DIC",800,800,0,"GL")
^PXRM(800,
"^DIC",800,800,"%",0)
^1.005^^0
"^DIC",800,800,"%D",0)
^1.001^2^2^3050113^^
"^DIC",800,800,"%D",1,0)
This file contains the parameters used by the Clinical Reminders
"^DIC",800,800,"%D",2,0)
package.
"^DIC",800,"B","CLINICAL REMINDER PARAMETERS",800)

"^DIC",801.41,801.41,0)
REMINDER DIALOG^801.41
"^DIC",801.41,801.41,0,"GL")
^PXRMD(801.41,
"^DIC",801.41,801.41,"%",0)
^1.005^^0
"^DIC",801.41,801.41,"%D",0)
^1.001^63^63^3050117^^^^
"^DIC",801.41,801.41,"%D",1,0)
This file is used to define all of the components that work together to 
"^DIC",801.41,801.41,"%D",2,0)
define a reminder dialog. Reminder dialog definitions are used by the CPRS 
"^DIC",801.41,801.41,"%D",3,0)
GUI for reminder resolution.  
"^DIC",801.41,801.41,"%D",4,0)
 
"^DIC",801.41,801.41,"%D",5,0)
This file contains a combination of nationally distributed entries, local 
"^DIC",801.41,801.41,"%D",6,0)
auto-generated entries, site and VISN exchanged entries and local manually 
"^DIC",801.41,801.41,"%D",7,0)
created entries. Nationally distributed dialog, element, and group 
"^DIC",801.41,801.41,"%D",8,0)
entries have their name prefixed with VA-. Nationally distributed Prompts, 
"^DIC",801.41,801.41,"%D",9,0)
Forced Value, Result Groups, and Result Elements have their name prefixed 
"^DIC",801.41,801.41,"%D",10,0)
with PXRM. Entries in this file may be auto-generated via the Dialog 
"^DIC",801.41,801.41,"%D",11,0)
Management Menu option. Manually created dialog entries should use local 
"^DIC",801.41,801.41,"%D",12,0)
namespacing conventions. Nationally distributed entries will have their 
"^DIC",801.41,801.41,"%D",13,0)
class type defined as National. Entries created at the VISN level should be 
"^DIC",801.41,801.41,"%D",14,0)
defined as VISN and entries created at a site should be defined as Local.  
"^DIC",801.41,801.41,"%D",15,0)
 
"^DIC",801.41,801.41,"%D",16,0)
This file is similar to the option file where there are different types of 
"^DIC",801.41,801.41,"%D",17,0)
entries (reminder dialog, dialog elements (sentences), prompts, and groups 
"^DIC",801.41,801.41,"%D",18,0)
of elements, result elements and groups of result elements). Where an option 
"^DIC",801.41,801.41,"%D",19,0)
has menu items, the dialog file has components that are entered, with the 
"^DIC",801.41,801.41,"%D",20,0)
sequence field as the .01 field. 
"^DIC",801.41,801.41,"%D",21,0)
 
"^DIC",801.41,801.41,"%D",22,0)
A prompt is defined for PCE prompts, WH Notification Purpose, or as locally 
"^DIC",801.41,801.41,"%D",23,0)
created comment check-boxes. The prompts will not have any components within 
"^DIC",801.41,801.41,"%D",24,0)
them. PXRM-prefixed prompts are distributed in this file with the Clinical 
"^DIC",801.41,801.41,"%D",25,0)
Reminder package.  
"^DIC",801.41,801.41,"%D",26,0)
 
"^DIC",801.41,801.41,"%D",27,0)
A dialog element is defined primarily to represent sentences to display in 
"^DIC",801.41,801.41,"%D",28,0)
the CPRS window with a check-box. When the user checks the sentence off, the
"^DIC",801.41,801.41,"%D",29,0)
FINDING ITEM in the dialog element and the ADDITIONAL FINDINGS will be added 
"^DIC",801.41,801.41,"%D",30,0)
to the list of PCE updates, orders, WH Notification Purposes, and mental 
"^DIC",801.41,801.41,"%D",31,0)
health tests. The updates won't occur on the CPRS GUI until the user clicks 
"^DIC",801.41,801.41,"%D",32,0)
on the FINISH button. Dialog elements may have components added to them. 
"^DIC",801.41,801.41,"%D",33,0)
Auto-generated components will be based on the additional prompts defined in 
"^DIC",801.41,801.41,"%D",34,0)
the Finding Type Parameters. Once a dialog element is auto-generated, the 
"^DIC",801.41,801.41,"%D",35,0)
sites can modify them.  
"^DIC",801.41,801.41,"%D",36,0)
 
"^DIC",801.41,801.41,"%D",37,0)
Dialog elements may also be instructional text or a header. The FINDING ITEM 
"^DIC",801.41,801.41,"%D",38,0)
and components would not be defined in dialog elements.  
"^DIC",801.41,801.41,"%D",39,0)
 
"^DIC",801.41,801.41,"%D",40,0)
A dialog group is similar to menu options. It groups dialog elements and 
"^DIC",801.41,801.41,"%D",41,0)
dialog groups within its component multiple. The dialog group can be defined 
"^DIC",801.41,801.41,"%D",42,0)
with a finding item and a check-box. The components in the group can be 
"^DIC",801.41,801.41,"%D",43,0)
hidden from the CPRS GUI window until the dialog group is checked off. 
"^DIC",801.41,801.41,"%D",44,0)
 
"^DIC",801.41,801.41,"%D",45,0)
A result element contains special logic that uses information entered during 
"^DIC",801.41,801.41,"%D",46,0)
the resolution process to create a sentence to add to the progress note. The 
"^DIC",801.41,801.41,"%D",47,0)
special logic contains a CONDITION that, when true, will use the ALTERNATE 
"^DIC",801.41,801.41,"%D",48,0)
PROGRESS NOTE TEXT field to update the progress note. A separate result 
"^DIC",801.41,801.41,"%D",49,0)
element is used for each separate sentence needed. The result element is 
"^DIC",801.41,801.41,"%D",50,0)
only used with mental health test finding items. Default result elements are 
"^DIC",801.41,801.41,"%D",51,0)
distributed for common mental health tests, prefixed with PXRM and the 
"^DIC",801.41,801.41,"%D",52,0)
mental health test name. Sites may copy them and modify their local versions 
"^DIC",801.41,801.41,"%D",53,0)
as needed.  
"^DIC",801.41,801.41,"%D",54,0)
 
"^DIC",801.41,801.41,"%D",55,0)
A result group contains all of the result elements that need to be checked 
"^DIC",801.41,801.41,"%D",56,0)
to create sentences for one mental health test finding. The dialog element 
"^DIC",801.41,801.41,"%D",57,0)
for the test will have its RESULT GROUP/ELEMENT field defined with the 
"^DIC",801.41,801.41,"%D",58,0)
result group. Default result groups for mental health tests are distributed 
"^DIC",801.41,801.41,"%D",59,0)
with the Clinical Reminders package. Sites may copy them and modify their local 
"^DIC",801.41,801.41,"%D",60,0)
versions as needed.  
"^DIC",801.41,801.41,"%D",61,0)

"^DIC",801.41,801.41,"%D",62,0)
Sites should name locally created items according to their local naming 
"^DIC",801.41,801.41,"%D",63,0)
convention.
"^DIC",801.41,"B","REMINDER DIALOG",801.41)

"^DIC",801.5,801.5,0)
REMINDER DIALOG PATIENT ASSOCIATION^801.5
"^DIC",801.5,801.5,0,"GL")
^PXRMD(801.5,
"^DIC",801.5,801.5,"%",0)
^1.005^^
"^DIC",801.5,801.5,"%D",0)
^^5^5^3050203^
"^DIC",801.5,801.5,"%D",1,0)
This file contains a small amount of static data. Entries are entered and 
"^DIC",801.5,801.5,"%D",2,0)
removed as Reminder Geriatric Extended Care Dialogs are processed by the
"^DIC",801.5,801.5,"%D",3,0)
CPRS GUI. Its main purpose is to keep track of and supply an Encounter
"^DIC",801.5,801.5,"%D",4,0)
Date/Time to the GUI interface so that the date/time can be added later to
"^DIC",801.5,801.5,"%D",5,0)
fields in the V HEALTH FACTOR file.
"^DIC",801.5,"B","REMINDER DIALOG PATIENT ASSOCIATION",801.5)

"^DIC",801.55,801.55,0)
REMINDER GEC DIALOG ASSOCIATION HISTORY^801.55
"^DIC",801.55,801.55,0,"GL")
^PXRMD(801.55,
"^DIC",801.55,801.55,"%",0)
^1.005^^
"^DIC",801.55,801.55,"%D",0)
^^4^4^3060808^^^
"^DIC",801.55,801.55,"%D",1,0)
This file contains a permanent history of activity that occurred during the 
"^DIC",801.55,801.55,"%D",2,0)
use of the Reminder Geriatric Extended Care Dialogs. Information is added 
"^DIC",801.55,801.55,"%D",3,0)
when a GEC Dialog is used and information is added about the patient.
"^DIC",801.55,801.55,"%D",4,0)

"^DIC",801.55,"B","REMINDER GEC DIALOG ASSOCIATION HISTORY",801.55)

"^DIC",802.4,802.4,0)
REMINDER FUNCTION FINDING FUNCTIONS^802.4
"^DIC",802.4,802.4,0,"GL")
^PXRMD(802.4,
"^DIC",802.4,802.4,"%",0)
^1.005^^
"^DIC",802.4,802.4,"%D",0)
^1.001^6^6^3060224^^^^
"^DIC",802.4,802.4,"%D",1,0)
Function findings operate on data from standard findings and return
"^DIC",802.4,802.4,"%D",2,0)
computed data. They can be used in patient cohort logic and resolution
"^DIC",802.4,802.4,"%D",3,0)
logic. This file defines the functions that can be used in function
"^DIC",802.4,802.4,"%D",4,0)
findings.
"^DIC",802.4,802.4,"%D",5,0)

"^DIC",802.4,802.4,"%D",6,0)

"^DIC",802.4,"B","REMINDER FUNCTION FINDING FUNCTIONS",802.4)

"^DIC",810.1,810.1,0)
REMINDER REPORT TEMPLATE^810.1
"^DIC",810.1,810.1,0,"GL")
^PXRMPT(810.1,
"^DIC",810.1,810.1,"%",0)
^1.005^^0
"^DIC",810.1,810.1,"%D",0)
^^13^13^3040913^
"^DIC",810.1,810.1,"%D",1,0)
This file is used by the reminder reports options only. For each type of
"^DIC",810.1,810.1,"%D",2,0)
report (e.g. Reminders Due), selection parameters used in a report may be
"^DIC",810.1,810.1,"%D",3,0)
saved as a template when the report is being run. When running reports,
"^DIC",810.1,810.1,"%D",4,0)
the user may opt to retrieve parameters from an existing template as the
"^DIC",810.1,810.1,"%D",5,0)
basis of a new report. Templates may be modified, renamed, copied, or
"^DIC",810.1,810.1,"%D",6,0)
deleted from the reminder report options.
"^DIC",810.1,810.1,"%D",7,0)
 
"^DIC",810.1,810.1,"%D",8,0)
The parameters for the reminder reports consist of a patient sample (e.g.
"^DIC",810.1,810.1,"%D",9,0)
PCMM team) from which a patient list is built and also a list of reminders
"^DIC",810.1,810.1,"%D",10,0)
to be evaluated for each selected patient.
"^DIC",810.1,810.1,"%D",11,0)
 
"^DIC",810.1,810.1,"%D",12,0)
The field names in the template file correspond to the local variable and
"^DIC",810.1,810.1,"%D",13,0)
array names used in the print routines.
"^DIC",810.1,"B","REMINDER REPORT TEMPLATE",810.1)

"^DIC",810.2,810.2,0)
REMINDER EXTRACT DEFINITION^810.2
"^DIC",810.2,810.2,0,"GL")
^PXRM(810.2,
"^DIC",810.2,810.2,"%",0)
^1.005^^
"^DIC",810.2,810.2,"%D",0)
^1.001^173^173^3060518^^
"^DIC",810.2,810.2,"%D",1,0)
National extract definitions were sent out with Clinical Reminders V.2.0 to
"^DIC",810.2,810.2,"%D",2,0)
support site roll-up of reporting totals to the Austin Automation Center
"^DIC",810.2,810.2,"%D",3,0)
(AAC).  The generic extract functionality supports corporate level management
"^DIC",810.2,810.2,"%D",4,0)
analysis by providing reports that:
"^DIC",810.2,810.2,"%D",5,0)
 
"^DIC",810.2,810.2,"%D",6,0)
 - summarize patient reminder compliance totals (not applicable,
"^DIC",810.2,810.2,"%D",7,0)
   applicable, due, not due)
"^DIC",810.2,810.2,"%D",8,0)
 - summarize finding total counts that reflect the most recent findings
"^DIC",810.2,810.2,"%D",9,0)
   resulting from reminder evaluation
"^DIC",810.2,810.2,"%D",10,0)
 - summarize finding total counts that reflect site activities during the
"^DIC",810.2,810.2,"%D",11,0)
   reporting month.  
"^DIC",810.2,810.2,"%D",12,0)
 - list unique applicable patients included in the finding count (Patient
"^DIC",810.2,810.2,"%D",13,0)
   List is not sent to Austin)
"^DIC",810.2,810.2,"%D",14,0)
 
"^DIC",810.2,810.2,"%D",15,0)
An extract definition may be manually run or set-up to automatically run
"^DIC",810.2,810.2,"%D",16,0)
monthly or quarterly.  The extract can be defined to only produce compliance
"^DIC",810.2,810.2,"%D",17,0)
totals, or to also include finding totals.
"^DIC",810.2,810.2,"%D",18,0)
 
"^DIC",810.2,810.2,"%D",19,0)
Each extract definition identifies:
"^DIC",810.2,810.2,"%D",20,0)
 -  Which type of totals the extract will create: compliance, finding 
"^DIC",810.2,810.2,"%D",21,0)
 -  What patient list(s) should be created first, second, third, , and
"^DIC",810.2,810.2,"%D",22,0)
    what criteria should be used to build the patient list(s).
"^DIC",810.2,810.2,"%D",23,0)
 -  For each patient list created when the extract is run, what reminders
"^DIC",810.2,810.2,"%D",24,0)
    should be run.
"^DIC",810.2,810.2,"%D",25,0)
 -  For each reminder run, what findings found should be used to include
"^DIC",810.2,810.2,"%D",26,0)
    in finding count totals, based on the reminder status for each
"^DIC",810.2,810.2,"%D",27,0)
    patient, and pre-defined counting groups.
"^DIC",810.2,810.2,"%D",28,0)
 -  Counting groups are used to define findings that may have been found
"^DIC",810.2,810.2,"%D",29,0)
    from reminder evaluation, as well as findings that may not be in the
"^DIC",810.2,810.2,"%D",30,0)
    reminder but need to be counted for utilization counts.
"^DIC",810.2,810.2,"%D",31,0)
 -  Counts are accumulated depending on whether the reminder status was
"^DIC",810.2,810.2,"%D",32,0)
    applicable, not applicable, due or not due for the patient.
"^DIC",810.2,810.2,"%D",33,0)
 -  Utilization counts count how many times the findings in a counting
"^DIC",810.2,810.2,"%D",34,0)
    group were entered during the reporting period for the patients in
"^DIC",810.2,810.2,"%D",35,0)
    the patient list.
"^DIC",810.2,810.2,"%D",36,0)
 
"^DIC",810.2,810.2,"%D",37,0)
The extract definition also identifies the last extract reporting period run
"^DIC",810.2,810.2,"%D",38,0)
and the next reporting period to be run.  This information is used to support
"^DIC",810.2,810.2,"%D",39,0)
managing extract runs.  The next reporting period is used by the next
"^DIC",810.2,810.2,"%D",40,0)
automated run to know which period should be run.  
"^DIC",810.2,810.2,"%D",41,0)
 
"^DIC",810.2,810.2,"%D",42,0)
The reporting results are stored in the REMINDER EXTRACT SUMMARY file (#811.3)
"^DIC",810.2,810.2,"%D",43,0)
 
"^DIC",810.2,810.2,"%D",44,0)
The national extract definitions are defined in this file to support generic
"^DIC",810.2,810.2,"%D",45,0)
extract and roll-up needs by facility. The generic extract tools provide
"^DIC",810.2,810.2,"%D",46,0)
options to:
"^DIC",810.2,810.2,"%D",47,0)
 -  manage extract criteria 
"^DIC",810.2,810.2,"%D",48,0)
 -  manage extract runs (manual and automated)
"^DIC",810.2,810.2,"%D",49,0)
 -  manage transmissions to AAC
"^DIC",810.2,810.2,"%D",50,0)
 -  view extract reporting results
"^DIC",810.2,810.2,"%D",51,0)
 -  view the list of patients making up the patient denominator
"^DIC",810.2,810.2,"%D",52,0)
 
"^DIC",810.2,810.2,"%D",53,0)
When analyzing the results of an extract run, it is important to take note of
"^DIC",810.2,810.2,"%D",54,0)
the following information before drawing conclusions:
"^DIC",810.2,810.2,"%D",55,0)
 - list rule criteria used to create the target patient lists
"^DIC",810.2,810.2,"%D",56,0)
   (denominators)
"^DIC",810.2,810.2,"%D",57,0)
 - reminder definition used to create applicable, not applicable, due and
"^DIC",810.2,810.2,"%D",58,0)
   not due compliance and finding totals
"^DIC",810.2,810.2,"%D",59,0)
 - counting rules used to accumulate totals 
"^DIC",810.2,810.2,"%D",60,0)
 - counting groups of findings and the type of totals accumulated (all
"^DIC",810.2,810.2,"%D",61,0)
   patients, applicable, due or not due patients)
"^DIC",810.2,810.2,"%D",62,0)
 
"^DIC",810.2,810.2,"%D",63,0)
The following is a comparison of Reminder Due and Reminder Extract report
"^DIC",810.2,810.2,"%D",64,0)
functionality: 
"^DIC",810.2,810.2,"%D",65,0)
 
"^DIC",810.2,810.2,"%D",66,0)
 Reminder Due reports:
"^DIC",810.2,810.2,"%D",67,0)
 
"^DIC",810.2,810.2,"%D",68,0)
   Use report criteria and pre-defined report templates with location/clinic
"^DIC",810.2,810.2,"%D",69,0)
   stop, provider, and team lists to build the list of patients that will be 
"^DIC",810.2,810.2,"%D",70,0)
   used to evaluate reminders.
"^DIC",810.2,810.2,"%D",71,0)
   
"^DIC",810.2,810.2,"%D",72,0)
   National Reminder Due report criteria and pre-defined report templates are 
"^DIC",810.2,810.2,"%D",73,0)
   not nationally distributed.
"^DIC",810.2,810.2,"%D",74,0)
 
"^DIC",810.2,810.2,"%D",75,0)
   The Reminder Due report evaluates reminders and provides counts for Total
"^DIC",810.2,810.2,"%D",76,0)
   patients, applicable patients and patients due.
"^DIC",810.2,810.2,"%D",77,0)
 
"^DIC",810.2,810.2,"%D",78,0)
   The patient with a Due status can be saved in a Reminder Patient List for
"^DIC",810.2,810.2,"%D",79,0)
   further follow-up Patient Demographic and Health Summary reporting.
"^DIC",810.2,810.2,"%D",80,0)
 
"^DIC",810.2,810.2,"%D",81,0)
   The findings in the reminder are not used to accumulate counts.
"^DIC",810.2,810.2,"%D",82,0)
 
"^DIC",810.2,810.2,"%D",83,0)
   An existing Reminder Patient List can be used to identify target patients,
"^DIC",810.2,810.2,"%D",84,0)
   instead of report criteria and report templates.
"^DIC",810.2,810.2,"%D",85,0)
 
"^DIC",810.2,810.2,"%D",86,0)
   The Reminder Due report can be created in a Summary or detailed report
"^DIC",810.2,810.2,"%D",87,0)
   format, and is typically queued to run in a job during off-hours.
"^DIC",810.2,810.2,"%D",88,0)
 
"^DIC",810.2,810.2,"%D",89,0)
 National extract reports:
"^DIC",810.2,810.2,"%D",90,0)
 
"^DIC",810.2,810.2,"%D",91,0)
   Defines complex extract criteria into one extract definition that is
"^DIC",810.2,810.2,"%D",92,0)
   pre-defined as a national Reminder Extract Definition.
"^DIC",810.2,810.2,"%D",93,0)
 
"^DIC",810.2,810.2,"%D",94,0)
   Pre-defined national extract criteria uses findings (reminder terms),
"^DIC",810.2,810.2,"%D",95,0)
   independent of a reminder definition, to build one or more lists of
"^DIC",810.2,810.2,"%D",96,0)
   patients that are used to evaluate one or more reminders.
"^DIC",810.2,810.2,"%D",97,0)
 
"^DIC",810.2,810.2,"%D",98,0)
   National extract criteria used to identify patients is similar to VA
"^DIC",810.2,810.2,"%D",99,0)
   External Peer Review (EPRP) performance measure reporting criteria.  
"^DIC",810.2,810.2,"%D",100,0)
   EPRP performance measures often require a current qualifying visit and
"^DIC",810.2,810.2,"%D",101,0)
   an anchor visit during the previous year. Since some patients seen
"^DIC",810.2,810.2,"%D",102,0)
   during a reporting month do not have a prior year anchor visit, the
"^DIC",810.2,810.2,"%D",103,0)
   national extract's total patient counts for a given month will
"^DIC",810.2,810.2,"%D",104,0)
   typically be less than the Reminder Due report's total patient counts
"^DIC",810.2,810.2,"%D",105,0)
   for the same month.
"^DIC",810.2,810.2,"%D",106,0)
 
"^DIC",810.2,810.2,"%D",107,0)
   The lists of patients used for each reporting period's national
"^DIC",810.2,810.2,"%D",108,0)
   extract are stored on the local system for sites to validate the
"^DIC",810.2,810.2,"%D",109,0)
   patient denominator counts and provide local quality of care
"^DIC",810.2,810.2,"%D",110,0)
   monitoring.
"^DIC",810.2,810.2,"%D",111,0)
 
"^DIC",810.2,810.2,"%D",112,0)
   Compliance total counts are accumulated based on the reminder status
"^DIC",810.2,810.2,"%D",113,0)
   for each patient: total, applicable, not applicable, due, and not
"^DIC",810.2,810.2,"%D",114,0)
   due.  The extract criteria used to create the totals is stored with 
"^DIC",810.2,810.2,"%D",115,0)
   the total counts on the local system, as well as transmitted to the
"^DIC",810.2,810.2,"%D",116,0)
   AAC.
"^DIC",810.2,810.2,"%D",117,0)
 
"^DIC",810.2,810.2,"%D",118,0)
   Finding total counts are accumulated for pre-defined national finding groups
"^DIC",810.2,810.2,"%D",119,0)
   based on the findings found during reminder evaluation for the patient. The
"^DIC",810.2,810.2,"%D",120,0)
   finding counts are totaled into categories that reflect the reminder status
"^DIC",810.2,810.2,"%D",121,0)
   for each patient: total, applicable, not applicable, due and not due patient
"^DIC",810.2,810.2,"%D",122,0)
   counts.  The finding counts are sent to the AAC with the extract criteria 
"^DIC",810.2,810.2,"%D",123,0)
   used to create the counts.
"^DIC",810.2,810.2,"%D",124,0)
 
"^DIC",810.2,810.2,"%D",125,0)
   Utilization counts are accumulated for pre-defined national finding groups
"^DIC",810.2,810.2,"%D",126,0)
   that count how many times specified findings were entered during the 
"^DIC",810.2,810.2,"%D",127,0)
   reporting period for patients for each patient denominator.  The finding 
"^DIC",810.2,810.2,"%D",128,0)
   counts are sent to the AAC with the extract criteria used to create the 
"^DIC",810.2,810.2,"%D",129,0)
   counts.
"^DIC",810.2,810.2,"%D",130,0)
 
"^DIC",810.2,810.2,"%D",131,0)
   Each patient that had a finding count is stored on the local system for
"^DIC",810.2,810.2,"%D",132,0)
   follow-up patient care and validation of reporting results. The patients are
"^DIC",810.2,810.2,"%D",133,0)
   not sent to the AAC.
"^DIC",810.2,810.2,"%D",134,0)
 
"^DIC",810.2,810.2,"%D",135,0)
   The national extract tools use Mailman links with the HL7 interface to send
"^DIC",810.2,810.2,"%D",136,0)
   compliance totals and finding totals for each monthly period to the AAC. AAC
"^DIC",810.2,810.2,"%D",137,0)
   adds the national monthly reporting to the Compliance Totals National 
"^DIC",810.2,810.2,"%D",138,0)
   Database stored at the AAC.
"^DIC",810.2,810.2,"%D",139,0)
 
"^DIC",810.2,810.2,"%D",140,0)
   The national extract reports are generated by a job. IRM Staff can help set
"^DIC",810.2,810.2,"%D",141,0)
   up each type of extract definition to automatically reschedule itself to run
"^DIC",810.2,810.2,"%D",142,0)
   monthly at each site. The extract run needs to occur prior to the tenth of
"^DIC",810.2,810.2,"%D",143,0)
   each month. 
"^DIC",810.2,810.2,"%D",144,0)
 
"^DIC",810.2,810.2,"%D",145,0)
   The sites can manually rerun an extract and/or selectively retransmit an
"^DIC",810.2,810.2,"%D",146,0)
   extract to AAC in the event of a failed transmission. The Extract Summary
"^DIC",810.2,810.2,"%D",147,0)
   reports may be used to verify compliance totals.  
"^DIC",810.2,810.2,"%D",148,0)
 
"^DIC",810.2,810.2,"%D",149,0)
   Parties interested in viewing the AAC Compliance Totals National Database
"^DIC",810.2,810.2,"%D",150,0)
   may be granted read-only access to this data.  The AAC uses the
"^DIC",810.2,810.2,"%D",151,0)
   national database to create Simple Authentication and Security (SAS)
"^DIC",810.2,810.2,"%D",152,0)
   files with read-only access.
"^DIC",810.2,810.2,"%D",153,0)
 
"^DIC",810.2,810.2,"%D",154,0)
File relationships:
"^DIC",810.2,810.2,"%D",155,0)
 
"^DIC",810.2,810.2,"%D",156,0)
   The extract definition uses list rules (#810.4) to build lists of patients.
"^DIC",810.2,810.2,"%D",157,0)
   If the extract definition is for Compliance and Finding Totals, the extract
"^DIC",810.2,810.2,"%D",158,0)
   definition will be defined with counting rules (#810.7). The counting rules
"^DIC",810.2,810.2,"%D",159,0)
   will be defined based on counting groups (#810.8). 
"^DIC",810.2,810.2,"%D",160,0)
 
"^DIC",810.2,810.2,"%D",161,0)
   Data from the extract is stored in the extract summary file (#810.3) and 
"^DIC",810.2,810.2,"%D",162,0)
   patient lists are saved in the patient list file (#810.5). HL7 messages 
"^DIC",810.2,810.2,"%D",163,0)
   containing the extract data from the extract summary (#810.3) are passed
"^DIC",810.2,810.2,"%D",164,0)
   to the HL7 package for transmission to the AAC. Individual patient
"^DIC",810.2,810.2,"%D",165,0)
   level data is not sent to Austin. However, a list of patients with
"^DIC",810.2,810.2,"%D",166,0)
   particular findings may be stored in the extract summary file (#810.3)
"^DIC",810.2,810.2,"%D",167,0)
   for validation of patients.
"^DIC",810.2,810.2,"%D",168,0)
 
"^DIC",810.2,810.2,"%D",169,0)
Nationally distributed definitions are prefixed 'VA-' and cannot be modified 
"^DIC",810.2,810.2,"%D",170,0)
by site.  
"^DIC",810.2,810.2,"%D",171,0)
 
"^DIC",810.2,810.2,"%D",172,0)
Sites should name locally created extract definitions according to their local 
"^DIC",810.2,810.2,"%D",173,0)
naming convention.  
"^DIC",810.2,"B","REMINDER EXTRACT DEFINITION",810.2)

"^DIC",810.3,810.3,0)
REMINDER EXTRACT SUMMARY^810.3
"^DIC",810.3,810.3,0,"GL")
^PXRMXT(810.3,
"^DIC",810.3,810.3,"%",0)
^1.005^^
"^DIC",810.3,810.3,"%D",0)
^1.001^109^109^3060504^^^^
"^DIC",810.3,810.3,"%D",1,0)
This file stores compliance totals found for a specific extract.  The extract 
"^DIC",810.3,810.3,"%D",2,0)
Entries are read only and may be selected by number or extract name. 
"^DIC",810.3,810.3,"%D",3,0)
The extract Summary entries are currently created from two types of
"^DIC",810.3,810.3,"%D",4,0)
processing:
"^DIC",810.3,810.3,"%D",5,0)
1) Generic EXTRACT tool manual runs and automated runs
"^DIC",810.3,810.3,"%D",6,0)
2) LREPI ENHANCE MANUAL RUN and LREPI NIGHTLY TASK on day 15 of each month
"^DIC",810.3,810.3,"%D",7,0)

"^DIC",810.3,810.3,"%D",8,0)
Generic extract summary entries:
"^DIC",810.3,810.3,"%D",9,0)

"^DIC",810.3,810.3,"%D",10,0)
The REMINDER EXTRACT SUMMARY NAME is the combination of a unique abbreviation.
"^DIC",810.3,810.3,"%D",11,0)
When the extract is created from the EXTRACT manual and automated options, the
"^DIC",810.3,810.3,"%D",12,0)
REMINDER EXTRACT SUMMARY NAME will include Q, M, or Y (for quarterly, monthly,
"^DIC",810.3,810.3,"%D",13,0)
or yearly), nn for month or quarter, and yyyy for year. The following is an
"^DIC",810.3,810.3,"%D",14,0)
example of extract names:
"^DIC",810.3,810.3,"%D",15,0)
     VA-IHD QUERI 2006 M2     
"^DIC",810.3,810.3,"%D",16,0)
     VA-IHD QUERI 2006 M1    
"^DIC",810.3,810.3,"%D",17,0)
     VA-IHD QUERI 2005 M12     
"^DIC",810.3,810.3,"%D",18,0)

"^DIC",810.3,810.3,"%D",19,0)
National extract summary entries created from generic Reminder Extract
"^DIC",810.3,810.3,"%D",20,0)
functionality (not LREPI) are stored with a VA- prefixed name.  Each extract
"^DIC",810.3,810.3,"%D",21,0)
entry contains reminder compliance totals for each unique combination of
"^DIC",810.3,810.3,"%D",22,0)
patient list and reminder.  The extract will optionally store finding
"^DIC",810.3,810.3,"%D",23,0)
compliance totals if the TYPE OF TOTALS for the extract is "Compliance and
"^DIC",810.3,810.3,"%D",24,0)
Finding Totals". No patient specific data is stored in the extract summary
"^DIC",810.3,810.3,"%D",25,0)
file for generic extracts.  The patient lists (denominators) used to create
"^DIC",810.3,810.3,"%D",26,0)
the extract summary totals, for a particular reporting period, are available
"^DIC",810.3,810.3,"%D",27,0)
from Reminder Patient List options.  
"^DIC",810.3,810.3,"%D",28,0)

"^DIC",810.3,810.3,"%D",29,0)
Generic extract summary entries will default to be purged after 5 years.  The
"^DIC",810.3,810.3,"%D",30,0)
automated purge status can be changed for a particular extract summary entry
"^DIC",810.3,810.3,"%D",31,0)
to retain the entry indefinitely.  
"^DIC",810.3,810.3,"%D",32,0)

"^DIC",810.3,810.3,"%D",33,0)
LREPI extract summary entries:
"^DIC",810.3,810.3,"%D",34,0)

"^DIC",810.3,810.3,"%D",35,0)
The LREPI extract names use YY/MM representing the ending year and
"^DIC",810.3,810.3,"%D",36,0)
month of the extract date range, and the run date in the format YYMMDD. The
"^DIC",810.3,810.3,"%D",37,0)
date and time of the run is an identifier.  The following is an example of
"^DIC",810.3,810.3,"%D",38,0)
LREPI extract names.
"^DIC",810.3,810.3,"%D",39,0)
    LREPI 00/05 061500     
"^DIC",810.3,810.3,"%D",40,0)
    LREPI 00/06 073100     
"^DIC",810.3,810.3,"%D",41,0)
    LREPI 00/07 081500   
"^DIC",810.3,810.3,"%D",42,0)

"^DIC",810.3,810.3,"%D",43,0)
The LREPI extract entries assume all results are for the primary institution,
"^DIC",810.3,810.3,"%D",44,0)
and includes patient specific data with findings.  The LREPI extracts created
"^DIC",810.3,810.3,"%D",45,0)
are based on LREPI reporting criteria which is not available for generic
"^DIC",810.3,810.3,"%D",46,0)
reporting functionality.    This file will maintain up to 36 extract entries
"^DIC",810.3,810.3,"%D",47,0)
for each type of extract.  After 36 entries, when a new entry is added, the
"^DIC",810.3,810.3,"%D",48,0)
oldest entry is deleted from the file.  Sites are asked to run the LREPI
"^DIC",810.3,810.3,"%D",49,0)
ENHANCE MANUAL RUN for months starting from 10/01/98 through 8/31/00. This will
"^DIC",810.3,810.3,"%D",50,0)
seed the Emerging Pathogens Initiative (EPI) database with risk assessment
"^DIC",810.3,810.3,"%D",51,0)
data.  Subsequent updates to the EPI database will automatically occur monthly
"^DIC",810.3,810.3,"%D",52,0)
via the LREPI NIGHTLY TASK option. Sites will have up to 36 months of extracts.
"^DIC",810.3,810.3,"%D",53,0)
This may be fewer than 36 months if the site runs extracts for the same month
"^DIC",810.3,810.3,"%D",54,0)
more than once.  Multiple extracts for the same month occur when the site runs
"^DIC",810.3,810.3,"%D",55,0)
the LREPI ENHANCE MANUAL RUN for a month to fix errors found by the receiving
"^DIC",810.3,810.3,"%D",56,0)
national database.  For LREPI runs, the receiving national database is the
"^DIC",810.3,810.3,"%D",57,0)
Emerging Pathogens Initiative (EPI) at the Austin  Automation Center (AAC).  
"^DIC",810.3,810.3,"%D",58,0)
 
"^DIC",810.3,810.3,"%D",59,0)
An LREPI entry in the REMINDER EXTRACT SUMMARY file contains information that 
"^DIC",810.3,810.3,"%D",60,0)
identifies the extract entry, the extract findings, and totals by finding item. 
"^DIC",810.3,810.3,"%D",61,0)
The extract entry information includes the number, extract name, beginning and
"^DIC",810.3,810.3,"%D",62,0)
ending extract dates, person who ran the extract option, task number, total
"^DIC",810.3,810.3,"%D",63,0)
patients evaluated and total patients with findings.  The extract findings
"^DIC",810.3,810.3,"%D",64,0)
include a number (for ease of selecting a finding item), patient, reminder
"^DIC",810.3,810.3,"%D",65,0)
term, value, alternate id, finding date, related visit (if PCE data), encounter
"^DIC",810.3,810.3,"%D",66,0)
type (I/O), result, value, drug and DSUP (days supply).  These extract finding
"^DIC",810.3,810.3,"%D",67,0)
fields are returned by the reminder evaluation logic.  The result, value, and
"^DIC",810.3,810.3,"%D",68,0)
drug are all free text fields without specific input and output transforms
"^DIC",810.3,810.3,"%D",69,0)
because the data comes from the source VistA data it came from, with read only
"^DIC",810.3,810.3,"%D",70,0)
access on this file.  The alternate id is specific to the LREPI extracts.  A
"^DIC",810.3,810.3,"%D",71,0)
number value in the alternate id field indicates that the finding is for
"^DIC",810.3,810.3,"%D",72,0)
Hepatitis C risk assessment.  The alternate id will be used for statistical
"^DIC",810.3,810.3,"%D",73,0)
purposes in the EPI database.     
"^DIC",810.3,810.3,"%D",74,0)
 
"^DIC",810.3,810.3,"%D",75,0)
The flow of LREPI processing is as follows: 1) LREPI gathers Lab Search/Extract
"^DIC",810.3,810.3,"%D",76,0)
patients and findings 2) LREPI gets all patients and findings from a reminder
"^DIC",810.3,810.3,"%D",77,0)
extract evaluation process given the extract date range and reminder list. 
"^DIC",810.3,810.3,"%D",78,0)
(The reminder list is from a new LREPI file 69.51).  2.1) The reminder extract
"^DIC",810.3,810.3,"%D",79,0)
evaluation logic uses medications mapped to reminder terms in the VA-NATIONAL
"^DIC",810.3,810.3,"%D",80,0)
EPI RX EXTRACT reminder, and the extract date range, to call new inpatient
"^DIC",810.3,810.3,"%D",81,0)
pharmacy and outpatient pharmacy extract logic to get patient pharmacy
"^DIC",810.3,810.3,"%D",82,0)
findings.  2.2) The reminder extract evaluation uses the remaining reminder
"^DIC",810.3,810.3,"%D",83,0)
criteria to build a list of patients with findings from the following files in
"^DIC",810.3,810.3,"%D",84,0)
the extract period: 
"^DIC",810.3,810.3,"%D",85,0)
  LAB DATA           (#63) 
"^DIC",810.3,810.3,"%D",86,0)
  V POV              (#9000010.07) 
"^DIC",810.3,810.3,"%D",87,0)
  V HEALTH FACTORS   (#9000010.23) 
"^DIC",810.3,810.3,"%D",88,0)
  V PATIENT ED       (#9000010.16) 
"^DIC",810.3,810.3,"%D",89,0)
  V EXAM             (#9000010.13) 
"^DIC",810.3,810.3,"%D",90,0)
2.3) The list of patients is used to evaluate the VA-HEP C RISK ASSESSMENT and
"^DIC",810.3,810.3,"%D",91,0)
VA-NATIONAL EPI LAB EXTRACT reminders.  The findings within the extract date
"^DIC",810.3,810.3,"%D",92,0)
range are added as Extract Findings in the REMINDER EXTRACT SUMMARY file and
"^DIC",810.3,810.3,"%D",93,0)
then returned to the Lab Search/Extract process.  3) The Lab Search/Extract
"^DIC",810.3,810.3,"%D",94,0)
process uses the final list of patients and findings to create HL7 messages. 
"^DIC",810.3,810.3,"%D",95,0)
Each reminder finding for a patient is used to create a DSP segment.  Pharmacy
"^DIC",810.3,810.3,"%D",96,0)
findings contain both a DSP and ZXE segment.  4) When the AAC processes the
"^DIC",810.3,810.3,"%D",97,0)
messages, error messages are returned for each message with the SSN related to
"^DIC",810.3,810.3,"%D",98,0)
the erroneous data. Note: Messages with errors are not added to the EPI
"^DIC",810.3,810.3,"%D",99,0)
database.  When erroneous data is  fixed at the site, the LREPI ENHANCE MANUAL
"^DIC",810.3,810.3,"%D",100,0)
RUN is run for the month with the error to transmit the entire month's data
"^DIC",810.3,810.3,"%D",101,0)
again.  The new data for each patient and finding date  replaces the old
"^DIC",810.3,810.3,"%D",102,0)
patient and finding date's data.  5) Two new options are available on the
"^DIC",810.3,810.3,"%D",103,0)
REMINDER REPORTS menu that provide total counts by finding item, as well as a
"^DIC",810.3,810.3,"%D",104,0)
detailed list by finding item and SSN.  6) Sites are encouraged to provide
"^DIC",810.3,810.3,"%D",105,0)
FileMan read-only access to the REMINDER EXTRACT SUMMARY file (810.3) for those
"^DIC",810.3,810.3,"%D",106,0)
who validate the extract data, the Hepatitis C implementation team, and
"^DIC",810.3,810.3,"%D",107,0)
Hepatitis C Coordinators responsible for monitoring Hepatitis C activities at
"^DIC",810.3,810.3,"%D",108,0)
each site.  
"^DIC",810.3,810.3,"%D",109,0)

"^DIC",810.3,"B","REMINDER EXTRACT SUMMARY",810.3)

"^DIC",810.4,810.4,0)
REMINDER LIST RULE^810.4
"^DIC",810.4,810.4,0,"GL")
^PXRM(810.4,
"^DIC",810.4,810.4,"%",0)
^1.005^^
"^DIC",810.4,810.4,"%D",0)
^1.001^96^96^3060615^^^
"^DIC",810.4,810.4,"%D",1,0)
This file is used to define what extract criteria should be used to build
"^DIC",810.4,810.4,"%D",2,0)
reminder patient lists. Extract criteria is defined as "list rules" in this
"^DIC",810.4,810.4,"%D",3,0)
file. The file is used by the Reminder Patient List option and Reminder
"^DIC",810.4,810.4,"%D",4,0)
Extract Management option to create patient lists. 
"^DIC",810.4,810.4,"%D",5,0)
 
"^DIC",810.4,810.4,"%D",6,0)
There are four types of rule criteria in the List Rule file: 
"^DIC",810.4,810.4,"%D",7,0)
 
"^DIC",810.4,810.4,"%D",8,0)
  Patient List - defines an existing patient list 
"^DIC",810.4,810.4,"%D",9,0)
  Finding Rule  - defines reminder terms that specify findings 
"^DIC",810.4,810.4,"%D",10,0)
                  and the date ranges to use
"^DIC",810.4,810.4,"%D",11,0)
  Reminder Rule - defines a reminder definition that builds a patient list
"^DIC",810.4,810.4,"%D",12,0)
                  based on the patient cohort logic using the ending date as
"^DIC",810.4,810.4,"%D",13,0)
                  the evaluation date. 
"^DIC",810.4,810.4,"%D",14,0)
  Rule Set      - defines a multiple of sequentially defined list rules 
"^DIC",810.4,810.4,"%D",15,0)
                  (a rule set can not be included in the multiple). 
"^DIC",810.4,810.4,"%D",16,0)

"^DIC",810.4,810.4,"%D",17,0)
The rule criteria are combined into a Rule Set that defines how to use the
"^DIC",810.4,810.4,"%D",18,0)
criteria to create or modify a patient list. Rule Sets allow lists of patients
"^DIC",810.4,810.4,"%D",19,0)
to be manipulated when a patient meets specified criteria by the following
"^DIC",810.4,810.4,"%D",20,0)
operations: 
"^DIC",810.4,810.4,"%D",21,0)
 
"^DIC",810.4,810.4,"%D",22,0)
  ADD     to a new or existing patient list 
"^DIC",810.4,810.4,"%D",23,0)
  REMOVE   from an existing list 
"^DIC",810.4,810.4,"%D",24,0)
  SELECT   retain a patient in an existing list if the patient meets the 
"^DIC",810.4,810.4,"%D",25,0)
           criteria, and remove the patient if the patient does not meet 
"^DIC",810.4,810.4,"%D",26,0)
           the criteria. 
"^DIC",810.4,810.4,"%D",27,0)
  
"^DIC",810.4,810.4,"%D",28,0)
A rule set can contain multiple operations. One operation can be defined for
"^DIC",810.4,810.4,"%D",29,0)
each sequence in the rule set.  
"^DIC",810.4,810.4,"%D",30,0)
 
"^DIC",810.4,810.4,"%D",31,0)
Nationally distributed list rules are prefixed with 'VA-' and cannot be
"^DIC",810.4,810.4,"%D",32,0)
modified by sites.  
"^DIC",810.4,810.4,"%D",33,0)

"^DIC",810.4,810.4,"%D",34,0)
FINDING RULES and Date Ranges:
"^DIC",810.4,810.4,"%D",35,0)
------------------------------------------------------------
"^DIC",810.4,810.4,"%D",36,0)
A Date Range is used by FINDING RULES to search for findings.
"^DIC",810.4,810.4,"%D",37,0)
List build processing determines which Beginning Date/time and Ending Date/time
"^DIC",810.4,810.4,"%D",38,0)
to use when evaluating each finding based on where the date/times are defined.
"^DIC",810.4,810.4,"%D",39,0)
Beginning Date/Time (BDT) and Ending Date/Time (EDT) fields can be defined at
"^DIC",810.4,810.4,"%D",40,0)
multiple levels:
"^DIC",810.4,810.4,"%D",41,0)

"^DIC",810.4,810.4,"%D",42,0)
1  List Build action BDT and EDT: default when not defined at lower level
"^DIC",810.4,810.4,"%D",43,0)
  2  Rule Set Sequence BDT and EDT: overrides previous level
"^DIC",810.4,810.4,"%D",44,0)
    3  List Rule BDT and EDT: overrides previous levels
"^DIC",810.4,810.4,"%D",45,0)
      4  Term Finding BDT and EDT: overrides previous levels
"^DIC",810.4,810.4,"%D",46,0)

"^DIC",810.4,810.4,"%D",47,0)
This override relationship can be defined with the following equation, where
"^DIC",810.4,810.4,"%D",48,0)
"<" should be interpreted as "is overridden by":
"^DIC",810.4,810.4,"%D",49,0)

"^DIC",810.4,810.4,"%D",50,0)
List Build < rule set sequence < list rule < term's finding
"^DIC",810.4,810.4,"%D",51,0)

"^DIC",810.4,810.4,"%D",52,0)
List Build and date range evaluation:
"^DIC",810.4,810.4,"%D",53,0)
------------------------------------
"^DIC",810.4,810.4,"%D",54,0)

"^DIC",810.4,810.4,"%D",55,0)
The List Build BDT and EDT are specified by the user selecting the List Build
"^DIC",810.4,810.4,"%D",56,0)
action. The List Build BDT and EDT is the default date range when the BDT and
"^DIC",810.4,810.4,"%D",57,0)
EDT are not defined for the rule set sequence, list rule, or term finding. The
"^DIC",810.4,810.4,"%D",58,0)
default date range is used to find a match on each finding in the criteria. 
"^DIC",810.4,810.4,"%D",59,0)

"^DIC",810.4,810.4,"%D",60,0)
If no date range limits should be used to find a match on finding, either the
"^DIC",810.4,810.4,"%D",61,0)
rule set sequence or list rule needs to be defined with a zero in the BDT or
"^DIC",810.4,810.4,"%D",62,0)
EDT fields, or both. A zero in the BDT field means start with the patient's
"^DIC",810.4,810.4,"%D",63,0)
oldest data. A zero in the EDT field represents the end of the day on the day
"^DIC",810.4,810.4,"%D",64,0)
the list is built. Note: This is in contrast to Reminder Definitions, where the
"^DIC",810.4,810.4,"%D",65,0)
BDT and EDT for a finding are left blank to specify no limits. In the REMINDER
"^DIC",810.4,810.4,"%D",66,0)
LIST RULE file, if zero is defined in the BDT, and the EDT is left blank, the
"^DIC",810.4,810.4,"%D",67,0)
list build tools will assume both BDT and EDT should not have date range
"^DIC",810.4,810.4,"%D",68,0)
limits, and vice versa if EDT has the 0 and the BDT is blank. 
"^DIC",810.4,810.4,"%D",69,0)

"^DIC",810.4,810.4,"%D",70,0)
The use of "T" in the BDT or EDT fields always represents the List Build ending
"^DIC",810.4,810.4,"%D",71,0)
date/time specified for the list build action or the extract reporting period,
"^DIC",810.4,810.4,"%D",72,0)
depending on whether a reminder patient list or extract option is being used to
"^DIC",810.4,810.4,"%D",73,0)
build the list.
"^DIC",810.4,810.4,"%D",74,0)

"^DIC",810.4,810.4,"%D",75,0)
"BDT" may also be used in the BDT or EDT fields and represents the starting
"^DIC",810.4,810.4,"%D",76,0)
date/time specified for the list build process or the extract reporting period.
"^DIC",810.4,810.4,"%D",77,0)
BDT-5Y creates a date five years prior to the beginning date/time. 
"^DIC",810.4,810.4,"%D",78,0)

"^DIC",810.4,810.4,"%D",79,0)
If the ending date/time is earlier than the beginning date/time, then no
"^DIC",810.4,810.4,"%D",80,0)
finding matches will be found.
"^DIC",810.4,810.4,"%D",81,0)

"^DIC",810.4,810.4,"%D",82,0)
REMINDER RULES and Date Ranges:
"^DIC",810.4,810.4,"%D",83,0)
------------------------------------------------------------
"^DIC",810.4,810.4,"%D",84,0)
Reminder Rules do not use the Beginning Date/time from the List Build, List
"^DIC",810.4,810.4,"%D",85,0)
Rule Sequence or Reminder Rule Beginning Date/time fields. Reminder evaluation
"^DIC",810.4,810.4,"%D",86,0)
using date ranges is based on existing reminder definitions. However, a
"^DIC",810.4,810.4,"%D",87,0)
Reminder Rule will use the Ending Date/time (EDT) from the Reminder Rule, List
"^DIC",810.4,810.4,"%D",88,0)
Rule Sequence, or List Build EDT. The same EDT overrides that are used for
"^DIC",810.4,810.4,"%D",89,0)
Finding Rule EDT are also used for Reminder Rule. The EDT used for reminder
"^DIC",810.4,810.4,"%D",90,0)
evaluation can be defined at multiple levels:
"^DIC",810.4,810.4,"%D",91,0)
1  List Build action EDT: default when not defined at lower level
"^DIC",810.4,810.4,"%D",92,0)
  2  Rule Set Sequence EDT: overrides previous level
"^DIC",810.4,810.4,"%D",93,0)
    3  List Rule EDT: overrides previous levels
"^DIC",810.4,810.4,"%D",94,0)
      4  Reminder evaluation is not impacted by terms in the reminder
"^DIC",810.4,810.4,"%D",95,0)
         definition.
"^DIC",810.4,810.4,"%D",96,0)

"^DIC",810.4,"B","REMINDER LIST RULE",810.4)

"^DIC",810.5,810.5,0)
REMINDER PATIENT LIST^810.5
"^DIC",810.5,810.5,0,"GL")
^PXRMXP(810.5,
"^DIC",810.5,810.5,"%",0)
^1.005^^
"^DIC",810.5,810.5,"%D",0)
^1.001^13^13^3060504^^^^
"^DIC",810.5,810.5,"%D",1,0)
Patient lists in this file are created from the Reminder Due reporting option,
"^DIC",810.5,810.5,"%D",2,0)
Reminder Patient List option or from Reminder Extract runs. Reminder patient
"^DIC",810.5,810.5,"%D",3,0)
lists are retained for 5 years in this file before being purged. Individual
"^DIC",810.5,810.5,"%D",4,0)
patient lists can have the automatic purge turned off.
"^DIC",810.5,810.5,"%D",5,0)
 
"^DIC",810.5,810.5,"%D",6,0)

"^DIC",810.5,810.5,"%D",7,0)
Patient lists that are created from national extract runs are prefixed with
"^DIC",810.5,810.5,"%D",8,0)
"VA-". 
"^DIC",810.5,810.5,"%D",9,0)
 
"^DIC",810.5,810.5,"%D",10,0)
Sites should name locally created patient lists according to their local naming 
"^DIC",810.5,810.5,"%D",11,0)
conventions. 
"^DIC",810.5,810.5,"%D",12,0)

"^DIC",810.5,810.5,"%D",13,0)

"^DIC",810.5,"B","REMINDER PATIENT LIST",810.5)

"^DIC",810.7,810.7,0)
REMINDER EXTRACT COUNTING RULE^810.7
"^DIC",810.7,810.7,0,"GL")
^PXRM(810.7,
"^DIC",810.7,810.7,"%",0)
^1.005^^
"^DIC",810.7,810.7,"%D",0)
^1.001^70^70^3060504^^^^
"^DIC",810.7,810.7,"%D",1,0)
This file is used during extract processing when an extract definition's TYPE
"^DIC",810.7,810.7,"%D",2,0)
OF TOTALS field is defined with COMPLIANCE AND FINDING TOTALS. When the
"^DIC",810.7,810.7,"%D",3,0)
extract type is for COMPLIANCE TOTALS only, there will not be an extract
"^DIC",810.7,810.7,"%D",4,0)
counting rule defined in the REMINDER EXTRACT DEFINITION file (#810.2). When
"^DIC",810.7,810.7,"%D",5,0)
the extract type includes FINDING TOTALS, then the extract definition needs to
"^DIC",810.7,810.7,"%D",6,0)
reference a counting rule for each reminder processed by the extract. 
"^DIC",810.7,810.7,"%D",7,0)

"^DIC",810.7,810.7,"%D",8,0)
In the Extract definition, there is a basic hierarchy as follows
"^DIC",810.7,810.7,"%D",9,0)
Extract general information
"^DIC",810.7,810.7,"%D",10,0)
   Patient List to build and list rules to build them
"^DIC",810.7,810.7,"%D",11,0)
      Reminders to be run with the Patient List
"^DIC",810.7,810.7,"%D",12,0)
         Extract Counting Rules that define how to count findings 
"^DIC",810.7,810.7,"%D",13,0)

"^DIC",810.7,810.7,"%D",14,0)
An entry in the REMINDER EXTRACT COUNTING RULE file identifies how groups of
"^DIC",810.7,810.7,"%D",15,0)
findings should be accumulated based on the reminder status.
"^DIC",810.7,810.7,"%D",16,0)
Each group of findings is defined as a counting group in the REMINDER EXTRACT
"^DIC",810.7,810.7,"%D",17,0)
COUNTING GROUP file (#810.8).
"^DIC",810.7,810.7,"%D",18,0)

"^DIC",810.7,810.7,"%D",19,0)
One counting group can be referenced multiple times in a particular counting
"^DIC",810.7,810.7,"%D",20,0)
rule to collect counts in multiple ways. The unique combination of a counting
"^DIC",810.7,810.7,"%D",21,0)
group and a Reminder Status field is what makes the counts different. The
"^DIC",810.7,810.7,"%D",22,0)
Reminder Status field is the status associated with the patient when the
"^DIC",810.7,810.7,"%D",23,0)
reminder was evaluated. Each patient is always in the TOTAL PATIENTS count,
"^DIC",810.7,810.7,"%D",24,0)
but the patient is included in the APPLICABLE PATIENTS, DUE PATIENTS, or NOT
"^DIC",810.7,810.7,"%D",25,0)
DUE PATIENTS counts depending on the reminder status for each patient. 
"^DIC",810.7,810.7,"%D",26,0)

"^DIC",810.7,810.7,"%D",27,0)
For example: A counting group defined with possible LDL value ranges, can be
"^DIC",810.7,810.7,"%D",28,0)
defined to get multiple counts, depending on the patient's REMINDER STATUS.
"^DIC",810.7,810.7,"%D",29,0)
When TOTAL PATIENTS Reminder Status is defined with the counting group: Every
"^DIC",810.7,810.7,"%D",30,0)
patient in the patient list is used to find a match on the findings in the
"^DIC",810.7,810.7,"%D",31,0)
group. If a finding match is found, a count is accumulated into columns based
"^DIC",810.7,810.7,"%D",32,0)
on the reminder status of APPLICABLE, NOT APPLICABLE, DUE or NOT DUE. 
"^DIC",810.7,810.7,"%D",33,0)

"^DIC",810.7,810.7,"%D",34,0)
When APPLICABLE PATIENTS Reminder Status is defined with the counting group:
"^DIC",810.7,810.7,"%D",35,0)
Patients from the patient list, where the reminder was applicable, are used to
"^DIC",810.7,810.7,"%D",36,0)
find a match on the findings in the group. If a finding match is found, a count
"^DIC",810.7,810.7,"%D",37,0)
is accumulated into columns for each finding in the group based on the reminder
"^DIC",810.7,810.7,"%D",38,0)
status of APPLICABLE, NOT APPLICABLE, DUE or NOT DUE. Applicable patients
"^DIC",810.7,810.7,"%D",39,0)
should have 0 counts in the NOT APPLICABLE count for each finding.
"^DIC",810.7,810.7,"%D",40,0)
 
"^DIC",810.7,810.7,"%D",41,0)
When DUE PATIENTS Reminder Status is defined with the counting group: Patients
"^DIC",810.7,810.7,"%D",42,0)
from the patient list, where the reminder was due are used to find a match on
"^DIC",810.7,810.7,"%D",43,0)
the findings in the group. If a finding match is found, a count is accumulated
"^DIC",810.7,810.7,"%D",44,0)
into columns for each finding in the group based on the reminder status of
"^DIC",810.7,810.7,"%D",45,0)
APPLICABLE, NOT APPLICABLE, DUE or NOT DUE. Due patients should have 0 counts
"^DIC",810.7,810.7,"%D",46,0)
in the NOT APPLICABLE and NOT DUE count for each finding.
"^DIC",810.7,810.7,"%D",47,0)

"^DIC",810.7,810.7,"%D",48,0)
When NOT DUE PATIENTS Reminder Status is defined with the counting group:
"^DIC",810.7,810.7,"%D",49,0)
Patients from the patient list, where the reminder was not due are used to find
"^DIC",810.7,810.7,"%D",50,0)
a match on the findings in the group. If a finding match is found, a count is
"^DIC",810.7,810.7,"%D",51,0)
accumulated into columns for each finding in the group based on the reminder
"^DIC",810.7,810.7,"%D",52,0)
status of APPLICABLE, NOT APPLICABLE, DUE or NOT DUE. Due patients should have
"^DIC",810.7,810.7,"%D",53,0)
0 counts in the NOT APPLICABLE and DUE count for each finding.
"^DIC",810.7,810.7,"%D",54,0)

"^DIC",810.7,810.7,"%D",55,0)
The accumulated counts for each finding are stored in the REMINDER EXTRACT
"^DIC",810.7,810.7,"%D",56,0)
SUMMARY file (#810.3). The sequence number in the file determines the order
"^DIC",810.7,810.7,"%D",57,0)
the counts will be accumulated for, saved to, and displayed from the REMINDER
"^DIC",810.7,810.7,"%D",58,0)
EXTRACT SUMMARY file (#810.3). 
"^DIC",810.7,810.7,"%D",59,0)
The counts can be used to make comparisons between TOTAL PATIENTS, APPLICABLE
"^DIC",810.7,810.7,"%D",60,0)
PATIENTS, DUE PATIENTS, and NOT DUE PATIENTS counts.  
"^DIC",810.7,810.7,"%D",61,0)
       
"^DIC",810.7,810.7,"%D",62,0)
If no counting groups are defined in the extract counting rule, then no finding
"^DIC",810.7,810.7,"%D",63,0)
totals will be accumulated. 
"^DIC",810.7,810.7,"%D",64,0)
Nationally distributed extract counting rules are prefixed 'VA-' and cannot be
"^DIC",810.7,810.7,"%D",65,0)
modified by sites. 
"^DIC",810.7,810.7,"%D",66,0)

"^DIC",810.7,810.7,"%D",67,0)
Sites should name locally created extract counting rules according to their 
"^DIC",810.7,810.7,"%D",68,0)
local naming convention. 
"^DIC",810.7,810.7,"%D",69,0)

"^DIC",810.7,810.7,"%D",70,0)

"^DIC",810.7,"B","REMINDER EXTRACT COUNTING RULE",810.7)

"^DIC",810.8,810.8,0)
REMINDER COUNTING GROUP^810.8
"^DIC",810.8,810.8,0,"GL")
^PXRM(810.8,
"^DIC",810.8,810.8,"%",0)
^1.005^^
"^DIC",810.8,810.8,"%D",0)
^^17^17^3060504^^
"^DIC",810.8,810.8,"%D",1,0)
Counting groups are used for extract processing when the extract type is
"^DIC",810.8,810.8,"%D",2,0)
COMPLIANCE AND FINDING TOTALS. Each counting group 
"^DIC",810.8,810.8,"%D",3,0)
defines reminder terms and type of counts to be totaled during an extract run. 
"^DIC",810.8,810.8,"%D",4,0)

"^DIC",810.8,810.8,"%D",5,0)
Counting groups are referenced and combined into one Extract Counting Rule in
"^DIC",810.8,810.8,"%D",6,0)
the REMINDER EXTRACT COUNTING RULE file (#810.7).  
"^DIC",810.8,810.8,"%D",7,0)
 
"^DIC",810.8,810.8,"%D",8,0)
The sequence number determines the order in which finding totals are saved to
"^DIC",810.8,810.8,"%D",9,0)
and displayed from the REMINDER EXTRACT SUMMARY (#810.3) file.  
"^DIC",810.8,810.8,"%D",10,0)
 
"^DIC",810.8,810.8,"%D",11,0)
Nationally distributed counting groups are prefixed 'VA-' and cannot be
"^DIC",810.8,810.8,"%D",12,0)
modified by
"^DIC",810.8,810.8,"%D",13,0)
sites.  
"^DIC",810.8,810.8,"%D",14,0)
 
"^DIC",810.8,810.8,"%D",15,0)
Sites should name locally created counting groups according to their local 
"^DIC",810.8,810.8,"%D",16,0)
naming convention.  
"^DIC",810.8,810.8,"%D",17,0)

"^DIC",810.8,"B","REMINDER COUNTING GROUP",810.8)

"^DIC",810.9,810.9,0)
REMINDER LOCATION LIST^810.9
"^DIC",810.9,810.9,0,"GL")
^PXRMD(810.9,
"^DIC",810.9,810.9,"%",0)
^1.005^^
"^DIC",810.9,810.9,"%D",0)
^^8^8^3050114^
"^DIC",810.9,810.9,"%D",1,0)
This file is used to group a list of locations and give the group a
"^DIC",810.9,810.9,"%D",2,0)
name. The locations can be Hospital Locations and/or Clinic Stops
"^DIC",810.9,810.9,"%D",3,0)
(which resolve to a list of Hospital Locations).
"^DIC",810.9,810.9,"%D",4,0)

"^DIC",810.9,810.9,"%D",5,0)
A Location List finding in Clinical Reminders is based on an entry from
"^DIC",810.9,810.9,"%D",6,0)
this file. A Location List finding will be true when a patient has an
"^DIC",810.9,810.9,"%D",7,0)
entry in the Visit file for at least one of the locations in the
"^DIC",810.9,810.9,"%D",8,0)
Location List.
"^DIC",810.9,"B","REMINDER LOCATION LIST",810.9)

"^DIC",811.4,811.4,0)
REMINDER COMPUTED FINDINGS^811.4
"^DIC",811.4,811.4,0,"GL")
^PXRMD(811.4,
"^DIC",811.4,811.4,"%",0)
^1.005^^0
"^DIC",811.4,811.4,"%D",0)
^1.001^28^28^3050117^^^^
"^DIC",811.4,811.4,"%D",1,0)
When none of the standard Clinical Reminder finding types will work, a
"^DIC",811.4,811.4,"%D",2,0)
computed finding can be created. There are two steps in creating a
"^DIC",811.4,811.4,"%D",3,0)
computed finding. First a MUMPS routine must be written. Information
"^DIC",811.4,811.4,"%D",4,0)
about how to do this can be found in the Clinical Reminders Manager
"^DIC",811.4,811.4,"%D",5,0)
Manual. The second step is to make an entry in this file, which
"^DIC",811.4,811.4,"%D",6,0)
contains a list of reminder computed findings. There are four fields
"^DIC",811.4,811.4,"%D",7,0)
for each entry; they are:
"^DIC",811.4,811.4,"%D",8,0)
 
"^DIC",811.4,811.4,"%D",9,0)
NAME - this is the name of the computed finding. When adding a computed
"^DIC",811.4,811.4,"%D",10,0)
finding as finding to a reminder definition or term, it is done using
"^DIC",811.4,811.4,"%D",11,0)
the name. For example, you would type CF.VA-BMI to add the exported
"^DIC",811.4,811.4,"%D",12,0)
VA-BMI computed finding to your reminder definition.
"^DIC",811.4,811.4,"%D",13,0)
 
"^DIC",811.4,811.4,"%D",14,0)
ROUTINE - this is the name of the MUMPS routine.
"^DIC",811.4,811.4,"%D",15,0)
 
"^DIC",811.4,811.4,"%D",16,0)
ENTRY - this is the entry point in the MUMPS routine.
"^DIC",811.4,811.4,"%D",17,0)
 
"^DIC",811.4,811.4,"%D",18,0)
PRINT NAME - this will be displayed on the Clinical Maintenance
"^DIC",811.4,811.4,"%D",19,0)
component as the name of the computed finding. If it is blank, then NAME
"^DIC",811.4,811.4,"%D",20,0)
will be used.
"^DIC",811.4,811.4,"%D",21,0)

"^DIC",811.4,811.4,"%D",22,0)
TYPE - this is a set of codes that specifies what type of computed
"^DIC",811.4,811.4,"%D",23,0)
finding this is. "S" stands for single occurrence, "M" for multiple occurrence,
"^DIC",811.4,811.4,"%D",24,0)
and "L" for list. If it is blank, single will be assumed.
"^DIC",811.4,811.4,"%D",25,0)

"^DIC",811.4,811.4,"%D",26,0)
This file contains a combination of nationally distributed and local
"^DIC",811.4,811.4,"%D",27,0)
entries. Nationally distributed entries have their name prefixed with
"^DIC",811.4,811.4,"%D",28,0)
VA-. Local entry names cannot start with VA-.
"^DIC",811.4,"B","REMINDER COMPUTED FINDINGS",811.4)

"^DIC",811.5,811.5,0)
REMINDER TERM^811.5
"^DIC",811.5,811.5,0,"GL")
^PXRMD(811.5,
"^DIC",811.5,811.5,"%",0)
^1.005^^0
"^DIC",811.5,811.5,"%D",0)
^1.001^24^24^3050124^^^^
"^DIC",811.5,811.5,"%D",1,0)
This file defines Clinical Reminder terms. Terms have a number of uses,
"^DIC",811.5,811.5,"%D",2,0)
including as findings in a reminder definition, as finding rules for
"^DIC",811.5,811.5,"%D",3,0)
building patient lists, and as elements of extract finding groups.
"^DIC",811.5,811.5,"%D",4,0)
 
"^DIC",811.5,811.5,"%D",5,0)
This file contains a combination of national, local, and VISN level
"^DIC",811.5,811.5,"%D",6,0)
terms. Nationally distributed entries will have a CLASS of "National"
"^DIC",811.5,811.5,"%D",7,0)
and the name is prefixed with "VA-". Any terms created at your site
"^DIC",811.5,811.5,"%D",8,0)
should have a CLASS of "Local". Terms created for VISN use will have a
"^DIC",811.5,811.5,"%D",9,0)
CLASS of "VISN"
"^DIC",811.5,811.5,"%D",10,0)

"^DIC",811.5,811.5,"%D",11,0)
Before a term can be used, it must have findings mapped to it. The
"^DIC",811.5,811.5,"%D",12,0)
findings that can be mapped to a term are any of the standard
"^DIC",811.5,811.5,"%D",13,0)
Clinical Reminder findings with the exception of terms.
"^DIC",811.5,811.5,"%D",14,0)

"^DIC",811.5,811.5,"%D",15,0)
Reminder terms are useful for national reminders involving findings
"^DIC",811.5,811.5,"%D",16,0)
that are based on local file definitions (e.g., laboratory test, drug
"^DIC",811.5,811.5,"%D",17,0)
file, radiology). National reminder terms have limited editing
"^DIC",811.5,811.5,"%D",18,0)
capabilities, which allow sites to map their local finding items to a
"^DIC",811.5,811.5,"%D",19,0)
term. Sites may create local reminder terms, providing an easy way to
"^DIC",811.5,811.5,"%D",20,0)
group a variety of findings and treat them the same way in a reminder.
"^DIC",811.5,811.5,"%D",21,0)
 
"^DIC",811.5,811.5,"%D",22,0)
When a reminder with terms is evaluated, the finding items mapped to
"^DIC",811.5,811.5,"%D",23,0)
the term are used to find the patient data, but the patient data is
"^DIC",811.5,811.5,"%D",24,0)
reported based on the term the data is mapped to.
"^DIC",811.5,"B","REMINDER TERM",811.5)

"^DIC",811.8,811.8,0)
REMINDER EXCHANGE^811.8
"^DIC",811.8,811.8,0,"GL")
^PXD(811.8,
"^DIC",811.8,811.8,"%",0)
^1.005^^0
"^DIC",811.8,811.8,"%D",0)
^1.001^3^3^3050126^^^^
"^DIC",811.8,811.8,"%D",1,0)
The Reminder Exchange File is used to store packed reminder
"^DIC",811.8,811.8,"%D",2,0)
definitions. All the entries in this file are managed by the
"^DIC",811.8,811.8,"%D",3,0)
Reminder Exchange Utility and should never be edited by hand.
"^DIC",811.8,"B","REMINDER EXCHANGE",811.8)

"^DIC",811.9,811.9,0)
REMINDER DEFINITION^811.9
"^DIC",811.9,811.9,0,"GL")
^PXD(811.9,
"^DIC",811.9,811.9,"%",0)
^1.005^1^1
"^DIC",811.9,811.9,"%",1,0)
GMTS
"^DIC",811.9,811.9,"%","B","GMTS",1)

"^DIC",811.9,811.9,"%D",0)
^1.001^9^9^3050117^^^^
"^DIC",811.9,811.9,"%D",1,0)
This file contains Clinical Reminder definitions. For a detailed
"^DIC",811.9,811.9,"%D",2,0)
description of the contents of this file, see the Clinical Reminders
"^DIC",811.9,811.9,"%D",3,0)
Manager Manual. Additional information may be found at the Clinical
"^DIC",811.9,811.9,"%D",4,0)
Reminders web site: http//vista.med.va.gov/reminders
"^DIC",811.9,811.9,"%D",5,0)

"^DIC",811.9,811.9,"%D",6,0)
This file contains a combination of nationally distributed and local
"^DIC",811.9,811.9,"%D",7,0)
entries. Any local entries are assigned an internal entry number
"^DIC",811.9,811.9,"%D",8,0)
prefixed with your site number. Nationally distributed entries have
"^DIC",811.9,811.9,"%D",9,0)
their name prefixed with VA-. Local entry names cannot start with VA-.
"^DIC",811.9,"B","REMINDER DEFINITION",811.9)

**INSTALL NAME**
GMTS*2.7*75
"BLD",5427,0)
GMTS*2.7*75^HEALTH SUMMARY^0^3060817^y
"BLD",5427,1,0)
^^3^3^3050615^^^
"BLD",5427,1,1,0)
This patch in conjunction with patch PXRM*2*4 restores the display
"BLD",5427,1,2,0)
of the Clinical Reminders disclaimer for the Clinical Reminders
"BLD",5427,1,3,0)
Maintenace, Brief, and Due Health Summary components.
"BLD",5427,4,0)
^9.64PA^^0
"BLD",5427,6.3)
21
"BLD",5427,"ABPKG")
n
"BLD",5427,"INI")

"BLD",5427,"INID")
^
"BLD",5427,"INIT")

"BLD",5427,"KRN",0)
^9.67PA^8989.52^19
"BLD",5427,"KRN",.4,0)
.4
"BLD",5427,"KRN",.401,0)
.401
"BLD",5427,"KRN",.402,0)
.402
"BLD",5427,"KRN",.403,0)
.403
"BLD",5427,"KRN",.5,0)
.5
"BLD",5427,"KRN",.84,0)
.84
"BLD",5427,"KRN",3.6,0)
3.6
"BLD",5427,"KRN",3.8,0)
3.8
"BLD",5427,"KRN",9.2,0)
9.2
"BLD",5427,"KRN",9.8,0)
9.8
"BLD",5427,"KRN",9.8,"NM",0)
^9.68A^6^1
"BLD",5427,"KRN",9.8,"NM",6,0)
GMTSPXHR^^0^B16312728
"BLD",5427,"KRN",9.8,"NM","B","GMTSPXHR",6)

"BLD",5427,"KRN",19,0)
19
"BLD",5427,"KRN",19.1,0)
19.1
"BLD",5427,"KRN",101,0)
101
"BLD",5427,"KRN",409.61,0)
409.61
"BLD",5427,"KRN",771,0)
771
"BLD",5427,"KRN",870,0)
870
"BLD",5427,"KRN",8989.51,0)
8989.51
"BLD",5427,"KRN",8989.52,0)
8989.52
"BLD",5427,"KRN",8994,0)
8994
"BLD",5427,"KRN","B",.4,.4)

"BLD",5427,"KRN","B",.401,.401)

"BLD",5427,"KRN","B",.402,.402)

"BLD",5427,"KRN","B",.403,.403)

"BLD",5427,"KRN","B",.5,.5)

"BLD",5427,"KRN","B",.84,.84)

"BLD",5427,"KRN","B",3.6,3.6)

"BLD",5427,"KRN","B",3.8,3.8)

"BLD",5427,"KRN","B",9.2,9.2)

"BLD",5427,"KRN","B",9.8,9.8)

"BLD",5427,"KRN","B",19,19)

"BLD",5427,"KRN","B",19.1,19.1)

"BLD",5427,"KRN","B",101,101)

"BLD",5427,"KRN","B",409.61,409.61)

"BLD",5427,"KRN","B",771,771)

"BLD",5427,"KRN","B",870,870)

"BLD",5427,"KRN","B",8989.51,8989.51)

"BLD",5427,"KRN","B",8989.52,8989.52)

"BLD",5427,"KRN","B",8994,8994)

"BLD",5427,"QUES",0)
^9.62^^
"BLD",5427,"REQB",0)
^9.611^1^1
"BLD",5427,"REQB",1,0)
GMTS*2.7*63^2
"BLD",5427,"REQB","B","GMTS*2.7*63",1)

"MBREQ")
0
"PKG",126,-1)
1^1
"PKG",126,0)
HEALTH SUMMARY^GMTS^Integrated Health Summary Tools^^^3010208
"PKG",126,20,0)
^9.402P^^
"PKG",126,22,0)
^9.49I^1^1
"PKG",126,22,1,0)
2.7^2951020^2951020^11
"PKG",126,22,1,"PAH",1,0)
75^3060817
"PKG",126,22,1,"PAH",1,1,0)
^^3^3^3060817
"PKG",126,22,1,"PAH",1,1,1,0)
This patch in conjunction with patch PXRM*2*4 restores the display
"PKG",126,22,1,"PAH",1,1,2,0)
of the Clinical Reminders disclaimer for the Clinical Reminders
"PKG",126,22,1,"PAH",1,1,3,0)
Maintenace, Brief, and Due Health Summary components.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","GMTSPXHR")
0^6^B16312728
"RTN","GMTSPXHR",1,0)
GMTSPXHR ; SLC/SBW,KER - PCE Clinical Reminders/Maint ; 06/15/2005
"RTN","GMTSPXHR",2,0)
 ;;2.7;Health Summary;**8,22,23,28,34,56,63,75**;Oct 20, 1995;Build 21
"RTN","GMTSPXHR",3,0)
 ;
"RTN","GMTSPXHR",4,0)
 ; External References
"RTN","GMTSPXHR",5,0)
 ;   DBIA  2182  MAIN^PXRM
"RTN","GMTSPXHR",6,0)
 ;                       
"RTN","GMTSPXHR",7,0)
MAIN ; Entry Point for Clinical Reminders
"RTN","GMTSPXHR",8,0)
 N CM,GMFLAG,HVET,HVDISP
"RTN","GMTSPXHR",9,0)
 S (HVET,CM)=0
"RTN","GMTSPXHR",10,0)
 I GMTSEGH["CR" S GMFLAG=0
"RTN","GMTSPXHR",11,0)
 I GMTSEGH["CRS" S GMFLAG=1
"RTN","GMTSPXHR",12,0)
 I GMTSEGH["CM" S GMFLAG=5,CM=1
"RTN","GMTSPXHR",13,0)
 I GMTSEGH["CMB" S GMFLAG=4,CM=1
"RTN","GMTSPXHR",14,0)
 I GMTSEGH["MHVD" S HVET=1,CM=1,HVDISP=11
"RTN","GMTSPXHR",15,0)
 I GMTSEGH["MHVS" S HVET=1,CM=1,HVDISP=10
"RTN","GMTSPXHR",16,0)
 Q:+$G(GMTSAGE)'>0!($G(SEX)="")!($G(DFN)'>0)
"RTN","GMTSPXHR",17,0)
 I HVET=1 D HVET Q
"RTN","GMTSPXHR",18,0)
 Q:$O(GMTSEG(GMTSEGN,811.9,0))'>0
"RTN","GMTSPXHR",19,0)
 N GMCR,GMFIRST,CRSEG,GMDISP
"RTN","GMTSPXHR",20,0)
 S GMCR=0,GMFIRST=1
"RTN","GMTSPXHR",21,0)
 F  S GMCR=$O(GMTSEG(GMTSEGN,811.9,GMCR)) Q:'GMCR  D  Q:$D(GMTSQIT)
"RTN","GMTSPXHR",22,0)
 . S CRSEG=GMTSEG(GMTSEGN,811.9,GMCR)
"RTN","GMTSPXHR",23,0)
 . K ^TMP("PXRHM",$J),^TMP("PXRM",$J)
"RTN","GMTSPXHR",24,0)
 . D MAIN^PXRM(DFN,CRSEG,+$G(GMFLAG),1)
"RTN","GMTSPXHR",25,0)
 . D:+$D(^TMP("PXRHM",$J)) GETCR
"RTN","GMTSPXHR",26,0)
 I +$G(GMDISP)'>0 D CKP^GMTSUP Q:$D(GMTSQIT)  W "Selected Clinical Reminders not due.",!
"RTN","GMTSPXHR",27,0)
 K ^TMP("PXRHM",$J),^TMP("PXRM",$J)
"RTN","GMTSPXHR",28,0)
 Q
"RTN","GMTSPXHR",29,0)
 ;
"RTN","GMTSPXHR",30,0)
HVET ;
"RTN","GMTSPXHR",31,0)
 N GMFIRST
"RTN","GMTSPXHR",32,0)
 K ^TMP("PXRHM",$J),^TMP("PXRMHV",$J)
"RTN","GMTSPXHR",33,0)
 S GMFIRST=1
"RTN","GMTSPXHR",34,0)
 D HS^PXRMHVET(DFN,HVDISP)
"RTN","GMTSPXHR",35,0)
 D:+$D(^TMP("PXRMHV",$J)) GETCRH
"RTN","GMTSPXHR",36,0)
 I +$G(GMDISP)'>0 D CKP^GMTSUP Q:$D(GMTSQIT)  W "No Patient Reminders found.",!
"RTN","GMTSPXHR",37,0)
 K ^TMP("PXRHM",$J),^TMP("PXRMHV",$J)
"RTN","GMTSPXHR",38,0)
 Q
"RTN","GMTSPXHR",39,0)
 ;
"RTN","GMTSPXHR",40,0)
GETCR ; Get reminders that were returned
"RTN","GMTSPXHR",41,0)
 N ITEM,GMDT,GMN0,X,GMTSDAT,GMTSDUE,GMREM
"RTN","GMTSPXHR",42,0)
 I HVET=1 D GETCRH
"RTN","GMTSPXHR",43,0)
 S ITEM=0
"RTN","GMTSPXHR",44,0)
 F  S ITEM=$O(^TMP("PXRHM",$J,ITEM)) Q:ITEM'>0  D  Q:$D(GMTSQIT)
"RTN","GMTSPXHR",45,0)
 . S GMREM=""
"RTN","GMTSPXHR",46,0)
 . F  S GMREM=$O(^TMP("PXRHM",$J,ITEM,GMREM)) Q:GMREM=""  D CRDISP Q:$D(GMTSQIT)
"RTN","GMTSPXHR",47,0)
 Q
"RTN","GMTSPXHR",48,0)
 ;
"RTN","GMTSPXHR",49,0)
GETCRH ; Get Reminders that were returned for MyHealtheVet
"RTN","GMTSPXHR",50,0)
 N ITEM,GMDT,GMN0,X,GMTSDAT,GMTSDUE,GMREM,GMSTATUS
"RTN","GMTSPXHR",51,0)
 S GMSTATUS=""
"RTN","GMTSPXHR",52,0)
 F  S GMSTATUS=$O(^TMP("PXRMHV",$J,GMSTATUS)) Q:GMSTATUS=""  D  Q:$D(GMTSQIT)
"RTN","GMTSPXHR",53,0)
 .S GMREM="" F  S GMREM=$O(^TMP("PXRMHV",$J,GMSTATUS,GMREM)) Q:GMREM=""  D  Q:$D(GMTSQIT)
"RTN","GMTSPXHR",54,0)
 ..S ITEM=0 F  S ITEM=$O(^TMP("PXRMHV",$J,GMSTATUS,GMREM,ITEM)) Q:ITEM'>0  D CRDISP Q:$D(GMTSQIT)
"RTN","GMTSPXHR",55,0)
 Q
"RTN","GMTSPXHR",56,0)
 ;
"RTN","GMTSPXHR",57,0)
CRDISP ; Display reminder data
"RTN","GMTSPXHR",58,0)
 N DUECOL,HIST,LASTCOL,STATUS,STATCOL,TYPE
"RTN","GMTSPXHR",59,0)
 I HVET=0 S GMN0=$G(^TMP("PXRHM",$J,ITEM,GMREM))
"RTN","GMTSPXHR",60,0)
 I HVET=1 S GMN0=$G(^TMP("PXRMHV",$J,GMSTATUS,GMREM,ITEM))
"RTN","GMTSPXHR",61,0)
 Q:GMN0']""
"RTN","GMTSPXHR",62,0)
 S STATUS=$P(GMN0,U,1)
"RTN","GMTSPXHR",63,0)
 S X=$P(GMN0,U,2) D REGDT4^GMTSU S GMTSDUE=X
"RTN","GMTSPXHR",64,0)
 S X=$P(GMN0,U,3) D REGDT4^GMTSU S GMTSDAT=X
"RTN","GMTSPXHR",65,0)
 S TYPE=$P(GMN0,U,4)
"RTN","GMTSPXHR",66,0)
 I TYPE["E" S HIST="(hist)"
"RTN","GMTSPXHR",67,0)
 I TYPE["X" S HIST="(exp)"
"RTN","GMTSPXHR",68,0)
 S GMDISP=1
"RTN","GMTSPXHR",69,0)
 D CKP^GMTSUP Q:$D(GMTSQIT)
"RTN","GMTSPXHR",70,0)
 I GMTSNPG D HDR,CKP^GMTSUP Q:$D(GMTSQIT)
"RTN","GMTSPXHR",71,0)
 I GMTSNPG D HDR
"RTN","GMTSPXHR",72,0)
 S STATCOL=41-($L(STATUS)/2)
"RTN","GMTSPXHR",73,0)
 S DUECOL=53-($L(GMTSDUE)/2)
"RTN","GMTSPXHR",74,0)
 S LASTCOL=67-($L(GMTSDAT)/2)
"RTN","GMTSPXHR",75,0)
 W GMREM,?STATCOL,STATUS,?DUECOL,GMTSDUE,?LASTCOL,GMTSDAT,?73,$G(HIST),!
"RTN","GMTSPXHR",76,0)
 I 'CM Q
"RTN","GMTSPXHR",77,0)
 ;   Display activity data on reminder
"RTN","GMTSPXHR",78,0)
 I HVET=1 D HVETCM Q
"RTN","GMTSPXHR",79,0)
 ;;commented out the following because I believe it is outdated
"RTN","GMTSPXHR",80,0)
 ;S GMDT=0
"RTN","GMTSPXHR",81,0)
 ;F  S GMDT=$O(^TMP("PXRHM",$J,ITEM,GMREM,GMDT)) Q:+GMDT'>0  D  Q:$D(GMTSQIT)
"RTN","GMTSPXHR",82,0)
 ;. S GMN0=$G(^TMP("PXRHM",$J,ITEM,GMREM,GMDT))
"RTN","GMTSPXHR",83,0)
 ;. Q:GMN0']""
"RTN","GMTSPXHR",84,0)
 ;. I $P(GMN0,U,2) S X=$P(GMN0,U,2) D REGDT4^GMTSU S GMTSDAT=X
"RTN","GMTSPXHR",85,0)
 ;. D CKP^GMTSUP Q:$D(GMTSQIT)
"RTN","GMTSPXHR",86,0)
 ;. I GMTSNPG D HDR
"RTN","GMTSPXHR",87,0)
 ;. W ?5,$P(GMN0,U)," on record - ",$G(GMTSDAT),", ",$P(GMN0,U,3),!
"RTN","GMTSPXHR",88,0)
 ;;   Display maintenance criteria for reminder
"RTN","GMTSPXHR",89,0)
 S GMDT=0
"RTN","GMTSPXHR",90,0)
 F  S GMDT=$O(^TMP("PXRHM",$J,ITEM,GMREM,"TXT",GMDT)) Q:+GMDT'>0  D  Q:$D(GMTSQIT)
"RTN","GMTSPXHR",91,0)
 . D CKP^GMTSUP Q:$D(GMTSQIT)
"RTN","GMTSPXHR",92,0)
 . I GMTSNPG D HDR
"RTN","GMTSPXHR",93,0)
 . W ?5,$G(^TMP("PXRHM",$J,ITEM,GMREM,"TXT",GMDT)),!
"RTN","GMTSPXHR",94,0)
 W !
"RTN","GMTSPXHR",95,0)
 Q
"RTN","GMTSPXHR",96,0)
HVETCM ;
"RTN","GMTSPXHR",97,0)
 ;   Display maintenance criteria for reminder
"RTN","GMTSPXHR",98,0)
 S GMDT=0
"RTN","GMTSPXHR",99,0)
 F  S GMDT=$O(^TMP("PXRMHV",$J,GMSTATUS,GMREM,ITEM,"TXT",GMDT)) Q:+GMDT'>0  D  Q:$D(GMTSQIT)
"RTN","GMTSPXHR",100,0)
 . D CKP^GMTSUP Q:$D(GMTSQIT)
"RTN","GMTSPXHR",101,0)
 . I GMTSNPG D HDR
"RTN","GMTSPXHR",102,0)
 . W ?5,$G(^TMP("PXRMHV",$J,GMSTATUS,GMREM,ITEM,"TXT",GMDT)),!
"RTN","GMTSPXHR",103,0)
 W !
"RTN","GMTSPXHR",104,0)
 Q
"RTN","GMTSPXHR",105,0)
 ;
"RTN","GMTSPXHR",106,0)
HDR ; Header
"RTN","GMTSPXHR",107,0)
 I GMFIRST D FIRST Q:$D(GMTSQIT)  S GMFIRST=0
"RTN","GMTSPXHR",108,0)
 W ?36,"--STATUS--",?47,"--DUE DATE--",?61,"--LAST DONE--",!
"RTN","GMTSPXHR",109,0)
 Q
"RTN","GMTSPXHR",110,0)
 ;
"RTN","GMTSPXHR",111,0)
FIRST ; Display Disclaimer
"RTN","GMTSPXHR",112,0)
 N GMREC
"RTN","GMTSPXHR",113,0)
 S GMREC=0
"RTN","GMTSPXHR",114,0)
 F  S GMREC=$O(^TMP("PXRM",$J,"DISC",GMREC)) Q:+GMREC'>0  D  Q:$D(GMTSQIT)
"RTN","GMTSPXHR",115,0)
 . D CKP^GMTSUP Q:$D(GMTSQIT)
"RTN","GMTSPXHR",116,0)
 . W ?1,$G(^TMP("PXRM",$J,"DISC",GMREC)),!
"RTN","GMTSPXHR",117,0)
 W !
"RTN","GMTSPXHR",118,0)
 Q
"VER")
8.0^22.0
**END**
**END**
