Released XU*8*425 SEQ #370
Extracted from mail message
**KIDS**:XU*8.0*425^

**INSTALL NAME**
XU*8.0*425
"BLD",947,0)
XU*8.0*425^KERNEL^0^3070523^y
"BLD",947,1,0)
^^2^2^3070301^^
"BLD",947,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",947,1,2,0)
XU*8*425   XLFNSLK clobbers IO.
"BLD",947,4,0)
^9.64PA^^
"BLD",947,6.3)
18
"BLD",947,"INIT")

"BLD",947,"KRN",0)
^9.67PA^8989.52^19
"BLD",947,"KRN",.4,0)
.4
"BLD",947,"KRN",.401,0)
.401
"BLD",947,"KRN",.402,0)
.402
"BLD",947,"KRN",.403,0)
.403
"BLD",947,"KRN",.5,0)
.5
"BLD",947,"KRN",.84,0)
.84
"BLD",947,"KRN",3.6,0)
3.6
"BLD",947,"KRN",3.8,0)
3.8
"BLD",947,"KRN",9.2,0)
9.2
"BLD",947,"KRN",9.8,0)
9.8
"BLD",947,"KRN",9.8,"NM",0)
^9.68A^13^13
"BLD",947,"KRN",9.8,"NM",1,0)
ZOSVONT^^0^B21543448
"BLD",947,"KRN",9.8,"NM",2,0)
XLFNSLK^^0^B29252865
"BLD",947,"KRN",9.8,"NM",3,0)
ZOSVGTM^^0^B14594340
"BLD",947,"KRN",9.8,"NM",4,0)
ZOSVGUX^^0^B36401450
"BLD",947,"KRN",9.8,"NM",5,0)
ZOSVVXD^^0^B22508962
"BLD",947,"KRN",9.8,"NM",6,0)
ZTLOAD1^^0^B23025754
"BLD",947,"KRN",9.8,"NM",7,0)
ZTMS4^^0^B4739293
"BLD",947,"KRN",9.8,"NM",8,0)
ZISUTL^^0^B10953558
"BLD",947,"KRN",9.8,"NM",9,0)
XUSAP^^0^B11192654
"BLD",947,"KRN",9.8,"NM",10,0)
ZOSFGTM^^0^B23513514
"BLD",947,"KRN",9.8,"NM",11,0)
ZOSFGUX^^0^B24238572
"BLD",947,"KRN",9.8,"NM",12,0)
ZOSV2GTM^^0^B7008460
"BLD",947,"KRN",9.8,"NM",13,0)
ZIS4GTM^^0^B20959123
"BLD",947,"KRN",9.8,"NM","B","XLFNSLK",2)

"BLD",947,"KRN",9.8,"NM","B","XUSAP",9)

"BLD",947,"KRN",9.8,"NM","B","ZIS4GTM",13)

"BLD",947,"KRN",9.8,"NM","B","ZISUTL",8)

"BLD",947,"KRN",9.8,"NM","B","ZOSFGTM",10)

"BLD",947,"KRN",9.8,"NM","B","ZOSFGUX",11)

"BLD",947,"KRN",9.8,"NM","B","ZOSV2GTM",12)

"BLD",947,"KRN",9.8,"NM","B","ZOSVGTM",3)

"BLD",947,"KRN",9.8,"NM","B","ZOSVGUX",4)

"BLD",947,"KRN",9.8,"NM","B","ZOSVONT",1)

"BLD",947,"KRN",9.8,"NM","B","ZOSVVXD",5)

"BLD",947,"KRN",9.8,"NM","B","ZTLOAD1",6)

"BLD",947,"KRN",9.8,"NM","B","ZTMS4",7)

"BLD",947,"KRN",19,0)
19
"BLD",947,"KRN",19.1,0)
19.1
"BLD",947,"KRN",101,0)
101
"BLD",947,"KRN",409.61,0)
409.61
"BLD",947,"KRN",771,0)
771
"BLD",947,"KRN",870,0)
870
"BLD",947,"KRN",8989.51,0)
8989.51
"BLD",947,"KRN",8989.52,0)
8989.52
"BLD",947,"KRN",8994,0)
8994
"BLD",947,"KRN","B",.4,.4)

"BLD",947,"KRN","B",.401,.401)

"BLD",947,"KRN","B",.402,.402)

"BLD",947,"KRN","B",.403,.403)

"BLD",947,"KRN","B",.5,.5)

"BLD",947,"KRN","B",.84,.84)

"BLD",947,"KRN","B",3.6,3.6)

"BLD",947,"KRN","B",3.8,3.8)

"BLD",947,"KRN","B",9.2,9.2)

"BLD",947,"KRN","B",9.8,9.8)

"BLD",947,"KRN","B",19,19)

"BLD",947,"KRN","B",19.1,19.1)

"BLD",947,"KRN","B",101,101)

"BLD",947,"KRN","B",409.61,409.61)

"BLD",947,"KRN","B",771,771)

"BLD",947,"KRN","B",870,870)

"BLD",947,"KRN","B",8989.51,8989.51)

"BLD",947,"KRN","B",8989.52,8989.52)

"BLD",947,"KRN","B",8994,8994)

"BLD",947,"QUES",0)
^9.62^^
"BLD",947,"REQB",0)
^9.611^4^4
"BLD",947,"REQB",1,0)
XU*8.0*151^2
"BLD",947,"REQB",2,0)
XU*8.0*385^2
"BLD",947,"REQB",3,0)
XU*8.0*415^2
"BLD",947,"REQB",4,0)
XU*8.0*361^2
"BLD",947,"REQB","B","XU*8.0*151",1)

"BLD",947,"REQB","B","XU*8.0*361",4)

"BLD",947,"REQB","B","XU*8.0*385",2)

"BLD",947,"REQB","B","XU*8.0*415",3)

"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
425^3070523
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3070523
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*425   XLFNSLK clobbers IO.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","XLFNSLK")
0^2^B29252865^B27944182
"RTN","XLFNSLK",1,0)
XLFNSLK ;ISF/RWF - Calling a DNS server for name lookup ;5/21/07  14:47
"RTN","XLFNSLK",2,0)
 ;;8.0;KERNEL;**142,151,425**;Jul 10, 1995;Build 18
"RTN","XLFNSLK",3,0)
 ;
"RTN","XLFNSLK",4,0)
TEST ;Test entry
"RTN","XLFNSLK",5,0)
 N XLF,XL1,XL3,Y,I S (XLF,XL3)=""
"RTN","XLFNSLK",6,0)
 R !,"Enter a IP address to lookup: www.va.gov//",XL1:DTIME S:XL1="" XL1="www.va.gov" Q:XL1["^"
"RTN","XLFNSLK",7,0)
 W !,"Looking up ",XL1 D NS(.XLF,XL1,"A",.XL3)
"RTN","XLFNSLK",8,0)
 S XL1="XL3" F  S XL1=$Q(@XL1) Q:XL1=""  W !,XL1," = ",@XL1
"RTN","XLFNSLK",9,0)
 S Y="" F  S Y=$O(XLF("B",Y)) Q:Y=""  W !,?5,Y," > ",XLF("B",Y)
"RTN","XLFNSLK",10,0)
 Q
"RTN","XLFNSLK",11,0)
 ;
"RTN","XLFNSLK",12,0)
ADDRESS(N,T) ;Get a IP address from a name
"RTN","XLFNSLK",13,0)
 N XLF,Y,I S XLF="",T=$G(T,"A")
"RTN","XLFNSLK",14,0)
 I ^%ZOSF("OS")["OpenM",T="A" D  Q $P(Y,",")
"RTN","XLFNSLK",15,0)
 . X "S Y=$ZU(54,13,N)"
"RTN","XLFNSLK",16,0)
 D NS(.XLF,N,T)
"RTN","XLFNSLK",17,0)
 S Y="" F I=1:1:XLF("ANCOUNT") S:$D(XLF("AN"_I_"DATA")) Y=Y_XLF("AN"_I_"DATA")_","
"RTN","XLFNSLK",18,0)
 Q $E(Y,1,$L(Y)-1)
"RTN","XLFNSLK",19,0)
 ;
"RTN","XLFNSLK",20,0)
MAIL(RET,N) ;Get the MX address for a domain
"RTN","XLFNSLK",21,0)
 ;RET is the return array
"RTN","XLFNSLK",22,0)
 N XLF,Y,I,T S XLF="",T="MX"
"RTN","XLFNSLK",23,0)
 D NS(.XLF,N,T)
"RTN","XLFNSLK",24,0)
 S RET=0,I=0 F  S I=$O(XLF("P",I)) Q:I'>0  D
"RTN","XLFNSLK",25,0)
 . S N=XLF("P",I),RET(I)=N_"^"_$G(XLF("B",N)),RET=RET+1
"RTN","XLFNSLK",26,0)
 Q
"RTN","XLFNSLK",27,0)
 ;
"RTN","XLFNSLK",28,0)
NS(XL,NAME,QTYPE,XLFLOG) ;NAME LOOKUP
"RTN","XLFNSLK",29,0)
 ;XL is the return array, NAME is the name to lookup,
"RTN","XLFNSLK",30,0)
 ;QTYPE is type of lookup, XLFLOG is a debug array returned.
"RTN","XLFNSLK",31,0)
 N RI,DNS,CNT,POP N:'$D(XLFLOG) XLFLOG S XL("ANCOUNT")=0,CNT=1
"RTN","XLFNSLK",32,0)
 D SAVEDEV
"RTN","XLFNSLK",33,0)
NS2 S DNS=$$GETDNS(CNT) I DNS="" G EXIT
"RTN","XLFNSLK",34,0)
 D LOG("Call server: "_DNS)
"RTN","XLFNSLK",35,0)
 D CALL^%ZISTCP(DNS,53) I POP S CNT=CNT+1 G NS2
"RTN","XLFNSLK",36,0)
 D LOG("Got connection, Send message")
"RTN","XLFNSLK",37,0)
 D BUILD(NAME,$G(QTYPE,"A")),LOG("Wait for reply")
"RTN","XLFNSLK",38,0)
 ;Close part of READ
"RTN","XLFNSLK",39,0)
 D READ,DECODE
"RTN","XLFNSLK",40,0)
 D RESDEV,LOG("Returned question: "_$G(XL("QD1NAME")))
"RTN","XLFNSLK",41,0)
 Q
"RTN","XLFNSLK",42,0)
EXIT D RESDEV
"RTN","XLFNSLK",43,0)
 Q
"RTN","XLFNSLK",44,0)
 ;
"RTN","XLFNSLK",45,0)
BUILD(Y,T) ;BUILD A QUEARY
"RTN","XLFNSLK",46,0)
 ; ID,PARAM,#of?, #ofA, #of Auth, #of add,
"RTN","XLFNSLK",47,0)
 N X,%,MSG,I
"RTN","XLFNSLK",48,0)
 S X=" M"_$C(1,0)_$C(0,1)_$C(0,0)_$C(0,0)_$C(0,0) ;Header
"RTN","XLFNSLK",49,0)
 I $E(Y,$L(Y))'="." S:$E(Y,$L(Y))'="." Y=Y_"."
"RTN","XLFNSLK",50,0)
 F I=1:1:$L(Y,".") S %=$P(Y,".",I) S:$L(%) X=X_$C($L(%))_% ;Address
"RTN","XLFNSLK",51,0)
 S X=X_$C(0) ;End of address
"RTN","XLFNSLK",52,0)
 ;Type A=1, NS=2, CNAME=5, MX=15
"RTN","XLFNSLK",53,0)
 S MSG=X_$C(0,$$TYPECODE(T))_$C(0,1) ;type and class
"RTN","XLFNSLK",54,0)
 D LOG("msg: "_MSG)
"RTN","XLFNSLK",55,0)
 U IO S %=$L(MSG) W $C(%\256,%#256)_MSG,!
"RTN","XLFNSLK",56,0)
 Q
"RTN","XLFNSLK",57,0)
READ ;
"RTN","XLFNSLK",58,0)
 N L1,L2,X,$ET S $ET="G RDERR" K RI S RI=0
"RTN","XLFNSLK",59,0)
 U IO R L1#2:20 I '$T D LOG("Time-out") G RDERR
"RTN","XLFNSLK",60,0)
 S RI=$A(L1,1)*256+$A(L1,2) ;get msg length
"RTN","XLFNSLK",61,0)
 F I=1:1:6 R L2#2:20 Q:'$T  S XL($P("ID^CODE^QDCOUNT^ANCOUNT^NSCOUNT^ARCOUNT","^",I))=$S(I>2:$$WBN(L2),I=2:$$BIN16(L2),1:L2)
"RTN","XLFNSLK",62,0)
 I '$T D LOG("Time-out") G RDERR
"RTN","XLFNSLK",63,0)
 D LOG("Return msg length: "_RI)
"RTN","XLFNSLK",64,0)
 F I=13:1:RI U IO R *X:20 Q:'$T  S RI(I)=X ;or use X#1 and $A(X)
"RTN","XLFNSLK",65,0)
RDERR ;End of read
"RTN","XLFNSLK",66,0)
 D CLOSE^%ZISTCP
"RTN","XLFNSLK",67,0)
 Q
"RTN","XLFNSLK",68,0)
DECODE ;
"RTN","XLFNSLK",69,0)
 N I,IX,X,Y,Z,NN,NN2 Q:RI'>7
"RTN","XLFNSLK",70,0)
 I $G(XL("ID"))'=" M" S XL("ERR")="Bad Response" D LOG(XL("ERR")) Q
"RTN","XLFNSLK",71,0)
 ;Decode the header
"RTN","XLFNSLK",72,0)
 S Z=XL("CODE"),XL("QR")=$E(Z,1),XL("Opcode")=$E(Z,2,5),XL("AA")=$E(Z,6),XL("TC")=$E(Z,7),XL("RD")=$E(Z,8),XL("RA")=$E(Z,9),XL("RCODE")=$E(Z,13,16)
"RTN","XLFNSLK",73,0)
 ;The Question section
"RTN","XLFNSLK",74,0)
 S IX=13
"RTN","XLFNSLK",75,0)
 F NN2=1:1:XL("QDCOUNT") D QD("QD"_NN2)
"RTN","XLFNSLK",76,0)
 F NN="AN","NS","AR" I $G(XL(NN_"COUNT")) F NN2=1:1:XL(NN_"COUNT") D RR(NN_NN2)
"RTN","XLFNSLK",77,0)
 Q
"RTN","XLFNSLK",78,0)
 ;
"RTN","XLFNSLK",79,0)
QD(NSP) ;Decode the Question section
"RTN","XLFNSLK",80,0)
 N Y
"RTN","XLFNSLK",81,0)
 S Y="",IX=IX+$$NAME(IX,.Y,1),XL(NSP_"NAME")=Y
"RTN","XLFNSLK",82,0)
 S XL(NSP_"TYPE")=$$BN(RI(IX),RI(IX+1)),IX=IX+2
"RTN","XLFNSLK",83,0)
 S XL(NSP_"CLASS")=$$BN(RI(IX),RI(IX+1)),IX=IX+2
"RTN","XLFNSLK",84,0)
 Q
"RTN","XLFNSLK",85,0)
RR(NSP) ;
"RTN","XLFNSLK",86,0)
 N Y,NA
"RTN","XLFNSLK",87,0)
 S Y="",IX=IX+$$NAME(IX,.Y,1),XL(NSP_"NAME")=Y,NA=Y
"RTN","XLFNSLK",88,0)
 S XL(NSP_"TYPE")=$$BN(RI(IX),RI(IX+1)),IX=IX+2
"RTN","XLFNSLK",89,0)
 S XL(NSP_"CLASS")=$$BN(RI(IX),RI(IX+1)),IX=IX+2
"RTN","XLFNSLK",90,0)
 S Y=RI(IX)*256+RI(IX+1),Y=Y*256+RI(IX+2),Y=Y*256+RI(IX+3)
"RTN","XLFNSLK",91,0)
 S XL(NSP_"TTL")=Y,IX=IX+4
"RTN","XLFNSLK",92,0)
 S (X,XL(NSP_"LENGTH"))=$$BN(RI(IX),RI(IX+1)),IX=IX+2 Q:X=0
"RTN","XLFNSLK",93,0)
 I XL(NSP_"TYPE")=1 S XL(NSP_"DATA")=RI(IX)_"."_RI(IX+1)_"."_RI(IX+2)_"."_RI(IX+3),XL("B",NA)=XL(NSP_"DATA")
"RTN","XLFNSLK",94,0)
 I XL(NSP_"TYPE")=15 D MX(IX)
"RTN","XLFNSLK",95,0)
 S IX=IX+XL(NSP_"LENGTH")
"RTN","XLFNSLK",96,0)
 Q
"RTN","XLFNSLK",97,0)
NAME(I,NM,F) ;Decode a NAME section
"RTN","XLFNSLK",98,0)
 N P,T,Y,X S NM=$G(NM) S:F T=0
"RTN","XLFNSLK",99,0)
 F  S X=RI(I) S:(X=0)&F T=T+1 Q:X=0  D  Q:X=0  ;Use X as flag to escape recursion.
"RTN","XLFNSLK",100,0)
 . I (X\64)=3 S X=$$NAME((X#64)*256+RI(I+1)+1,.NM,0),X=0 S:F T=T+2 Q
"RTN","XLFNSLK",101,0)
 . S NM=NM_$$PART(I+1,X),I=I+X+1 S:F T=T+X+1
"RTN","XLFNSLK",102,0)
 Q $G(T)
"RTN","XLFNSLK",103,0)
 ;
"RTN","XLFNSLK",104,0)
MX(IX) ;Hide IX changes
"RTN","XLFNSLK",105,0)
 N Y S Y=$$BN(RI(IX),RI(IX+1))
"RTN","XLFNSLK",106,0)
 F  Q:'$D(XL("P",Y))  S Y=Y+1
"RTN","XLFNSLK",107,0)
 S XL(NSP_"PREF")=Y,IX=IX+2
"RTN","XLFNSLK",108,0)
 S Y="",IX=IX+$$NAME(IX,.Y,1),XL(NSP_"NAME")=Y,XL("P",XL(NSP_"PREF"))=Y
"RTN","XLFNSLK",109,0)
 Q
"RTN","XLFNSLK",110,0)
 ;
"RTN","XLFNSLK",111,0)
BN(Z1,Z2) ;Convert two binary char 16 bit number into ASCII number
"RTN","XLFNSLK",112,0)
 Q Z1*256+Z2
"RTN","XLFNSLK",113,0)
 ;
"RTN","XLFNSLK",114,0)
WBN(Z1) ;Convert two byte string to a ASCII number
"RTN","XLFNSLK",115,0)
 Q $A(Z1,1)*256+$A(Z1,2)
"RTN","XLFNSLK",116,0)
 ;
"RTN","XLFNSLK",117,0)
H2(Z2) ;Convert 2 byte string to HEX
"RTN","XLFNSLK",118,0)
 N B S B=$A(Z2,1)*256+$A(Z2,2)
"RTN","XLFNSLK",119,0)
 Q $$H(B)
"RTN","XLFNSLK",120,0)
 ;
"RTN","XLFNSLK",121,0)
H(Z1) Q $$BASE^XLFUTL(Z1,10,16)
"RTN","XLFNSLK",122,0)
 ;
"RTN","XLFNSLK",123,0)
BIN16(S) ;Convert two byte string to 16 bit binary
"RTN","XLFNSLK",124,0)
 N K,Y S S=$A(S,1)*256+$A(S,2),Y=""
"RTN","XLFNSLK",125,0)
 F K=0:1:15 S Y=(S\(2**K)#2)_Y
"RTN","XLFNSLK",126,0)
 Q Y
"RTN","XLFNSLK",127,0)
 ;
"RTN","XLFNSLK",128,0)
PART(S,L) ;
"RTN","XLFNSLK",129,0)
 N R,A S R="" F A=S:1:S+L-1 S R=R_$C(RI(A))
"RTN","XLFNSLK",130,0)
 Q R_"."
"RTN","XLFNSLK",131,0)
 ;
"RTN","XLFNSLK",132,0)
TYPECODE(T) ;
"RTN","XLFNSLK",133,0)
 ;1=A:address,2=NS:nameserver,5=CNAME,15=MX:mail exchange
"RTN","XLFNSLK",134,0)
 I +T Q $S(T=1:"A",T=2:"NS",T=5:"CNAME",T=15:"MX",1:"ZZ")
"RTN","XLFNSLK",135,0)
 Q $S(T="A":1,T="NS":2,T="CNAME":5,T="MX":15,1:1)
"RTN","XLFNSLK",136,0)
 ;
"RTN","XLFNSLK",137,0)
CLASS(T) ;
"RTN","XLFNSLK",138,0)
 Q $S(T=1:"IN",1:"ZZ")
"RTN","XLFNSLK",139,0)
 ;
"RTN","XLFNSLK",140,0)
GETDNS(I) ;Get the address of our DNS
"RTN","XLFNSLK",141,0)
 N L S L=$G(^XTV(8989.3,1,"DNS"))
"RTN","XLFNSLK",142,0)
 Q $P(L,",",I)
"RTN","XLFNSLK",143,0)
 ;
"RTN","XLFNSLK",144,0)
SHOW ;LIST RI AND XL
"RTN","XLFNSLK",145,0)
 S O1=RI\3+1,O2=O1*2
"RTN","XLFNSLK",146,0)
 F I=1:1:O1 D SW(0,"RI("_I_")=",$G(RI(I))),SW(30,"RI("_(I+O1)_")=",$G(RI(I+O1))),SW(60,"RI("_(I+O2)_")=",$G(RI(I+O2))) W !
"RTN","XLFNSLK",147,0)
 Q
"RTN","XLFNSLK",148,0)
SW(T,H,V) ;
"RTN","XLFNSLK",149,0)
 W ?T,$J(H,8),V
"RTN","XLFNSLK",150,0)
 Q
"RTN","XLFNSLK",151,0)
SAVEDEV ;Save calling device
"RTN","XLFNSLK",152,0)
 D:'$D(IO(0)) HOME^%ZIS D SAVDEV^%ZISUTL("XLFNSLK")
"RTN","XLFNSLK",153,0)
 Q
"RTN","XLFNSLK",154,0)
RESDEV ;Restore calling device
"RTN","XLFNSLK",155,0)
 D USE^%ZISUTL("XLFNSLK"),RMDEV^%ZISUTL("XLFNSLK")
"RTN","XLFNSLK",156,0)
 K IO("CLOSE")
"RTN","XLFNSLK",157,0)
 Q
"RTN","XLFNSLK",158,0)
LOG(M) ;Log Debug messages
"RTN","XLFNSLK",159,0)
 S XLFLOG=$G(XLFLOG)+1,XLFLOG(XLFLOG)=M
"RTN","XLFNSLK",160,0)
 Q
"RTN","XLFNSLK",161,0)
 ;
"RTN","XLFNSLK",162,0)
POST ;Stuff a DNS address during install POST init.
"RTN","XLFNSLK",163,0)
 N DIC,DR,DIQ,XLF,DIE
"RTN","XLFNSLK",164,0)
 S XLF=$P($$PARAM^HLCS2,U,3)
"RTN","XLFNSLK",165,0)
 I XLF="T" D BMES^XPDUTL("Test Account DNS address not installed.") Q
"RTN","XLFNSLK",166,0)
 S DIC=8989.3,DR=51,DA=1,DIQ="XLF(" D EN^DIQ1 I $L(XLF(8989.3,1,51)) Q
"RTN","XLFNSLK",167,0)
 S DR="51///10.3.21.192",DIE="^XTV(8989.3,",DA=1 D ^DIE
"RTN","XLFNSLK",168,0)
 D BMES^XPDUTL("DNS address installed.")
"RTN","XLFNSLK",169,0)
 Q
"RTN","XUSAP")
0^9^B11192654^B10492122
"RTN","XUSAP",1,0)
XUSAP ;ISF/RWF - PROXY User Tools ;08/16/2006
"RTN","XUSAP",2,0)
 ;;8.0;KERNEL;**361,425**;Jul 10, 1995;Build 18
"RTN","XUSAP",3,0)
 Q
"RTN","XUSAP",4,0)
 ;
"RTN","XUSAP",5,0)
APFIND(NAME) ;Lookup Appliction user by name, return ien^vpid if OK
"RTN","XUSAP",6,0)
 ; -1,-2,-3 if not
"RTN","XUSAP",7,0)
 N X,IEN
"RTN","XUSAP",8,0)
 S X=0,IEN=+$$FIND1^DIC(200,,"X",NAME,"B") S:'IEN X="-1^not in user file"
"RTN","XUSAP",9,0)
 I IEN>0,'$$USERTYPE(IEN,"APPLICATION PROXY") S IEN=0,X="-2^not an app user"
"RTN","XUSAP",10,0)
 I IEN>0,$$USERTYPE(IEN,"CONNECTOR PROXY") S IEN=0,X="-3^is both an app user and a connector user"
"RTN","XUSAP",11,0)
 I IEN S X=IEN_"^"_$$VPID^XUPS(IEN)
"RTN","XUSAP",12,0)
 Q X
"RTN","XUSAP",13,0)
 ;
"RTN","XUSAP",14,0)
APCHK(IEN) ;Check if OK for AP user to run.
"RTN","XUSAP",15,0)
 ;Return 1 if OK, 0 if not
"RTN","XUSAP",16,0)
 Q $$ACTIVE(IEN)
"RTN","XUSAP",17,0)
 ;
"RTN","XUSAP",18,0)
CPCHK(IEN) ;Check if OK for Connector Proxy to run
"RTN","XUSAP",19,0)
 ;Return 1 if OK, "0^text" if NOT ok.
"RTN","XUSAP",20,0)
 I $D(^VA(200,IEN,0))[0 Q "0^IEN not valid"
"RTN","XUSAP",21,0)
 I IEN>0,'$$USERTYPE(IEN,"CONNECTOR PROXY") Q "0^Not a CONNECTOR PROXY User"
"RTN","XUSAP",22,0)
 I IEN>0,$$USERTYPE(IEN,"APPLICATION PROXY") Q "0^APPLICATION PROXY USER" ;Can't be both
"RTN","XUSAP",23,0)
 Q 1
"RTN","XUSAP",24,0)
 ;
"RTN","XUSAP",25,0)
ACTIVE(XUDA) ;Get if a user is active.
"RTN","XUSAP",26,0)
 N %,X1,X2
"RTN","XUSAP",27,0)
 S X1=$G(^VA(200,+$G(XUDA),0)),X2=1
"RTN","XUSAP",28,0)
 S:$P(X1,U,7)=1 X2="0^DISUSER"
"RTN","XUSAP",29,0)
 S %=$P(X1,U,11) I %>0,%'>DT S X2="0^TERMINATED^"_%
"RTN","XUSAP",30,0)
 Q X2
"RTN","XUSAP",31,0)
 ;
"RTN","XUSAP",32,0)
USERTYPE(IE,CLASS) ;See if IEN points to a APP user
"RTN","XUSAP",33,0)
 ;Return 1 if match class, else 0
"RTN","XUSAP",34,0)
 N IX,R
"RTN","XUSAP",35,0)
 I $E(CLASS,1)="`" S IX=+$E(CLASS,2,9)
"RTN","XUSAP",36,0)
 E  S IX=$$FIND1^DIC(201,,"X",CLASS)
"RTN","XUSAP",37,0)
 Q:'IX 0 ;Did not find User class.
"RTN","XUSAP",38,0)
 S R=+$O(^VA(200,IE,"USC3","B",IX,0))
"RTN","XUSAP",39,0)
 Q (R>0)
"RTN","XUSAP",40,0)
 ;
"RTN","XUSAP",41,0)
RPC(RPC) ;Check if OK for AP to run RPC
"RTN","XUSAP",42,0)
 ;Return 1 if OK to run, 0 otherwise.
"RTN","XUSAP",43,0)
 I +RPC'=RPC S RPC=$O(^XWB(8994,"B",RPC,0))
"RTN","XUSAP",44,0)
 I RPC'>0 Q 0
"RTN","XUSAP",45,0)
 Q +$P($G(^XWB(8994,RPC,0)),"^",11)
"RTN","XUSAP",46,0)
 ;
"RTN","XUSAP",47,0)
CREATE(NAME,FMAC,OPT,NIL) ;Create an APPLICATION PROXY user
"RTN","XUSAP",48,0)
 ;Return ien if OK, -1 if failed or 0 if exists.
"RTN","XUSAP",49,0)
 ;NAME for user, FMAC FM access code, OPT Option menu for secondary menu.
"RTN","XUSAP",50,0)
 ;OPT can be a name or array of names
"RTN","XUSAP",51,0)
 N IEN,IENS,FDA,DIC,IX K ^TMP("DIERR",$J)
"RTN","XUSAP",52,0)
 S IEN=$$FIND1^DIC(200,,"M",NAME)
"RTN","XUSAP",53,0)
 I IEN Q "0^Name in Use"
"RTN","XUSAP",54,0)
 S DIC="^VA(200,",DIC(0)="LMQ",DLAYGO=200,X=NAME
"RTN","XUSAP",55,0)
 S DIC("DR")="3///"_FMAC
"RTN","XUSAP",56,0)
 S XUNOTRIG=1 ;Needed to stop call to name components.
"RTN","XUSAP",57,0)
 D ^DIC S IEN=+Y
"RTN","XUSAP",58,0)
 Q:IEN<0 -1 ;Failed to create
"RTN","XUSAP",59,0)
 ;Build FDA to add Options
"RTN","XUSAP",60,0)
 S IEN(1)=","_IEN_",",IX=2
"RTN","XUSAP",61,0)
 I $D(OPT)#2 S FDA(200.03,"+"_IX_IEN(1),.01)=OPT,IX=IX+1
"RTN","XUSAP",62,0)
 I $D(OPT)>9 D
"RTN","XUSAP",63,0)
 . N O S O=""
"RTN","XUSAP",64,0)
 . F  S O=$O(OPT(O)) Q:O=""  S FDA(200.03,"+"_IX_IEN(1),.01)=O,IX=IX+1
"RTN","XUSAP",65,0)
 . Q
"RTN","XUSAP",66,0)
 S FDA(200.07,"+"_IX_IEN(1),.01)="APPLICATION PROXY",FDA(200.07,"+"_IX_IEN(1),2)=1
"RTN","XUSAP",67,0)
 S DIC(0)="" ;Needed in call to XUA4A7
"RTN","XUSAP",68,0)
 D UPDATE^DIE("E","FDA","IENS")
"RTN","XUSAP",69,0)
 I $D(^TMP("DIERR",$J)) Q -1
"RTN","XUSAP",70,0)
 Q IEN
"RTN","XUSAP",71,0)
 ;
"RTN","XUSAP",72,0)
CONT ;Connector Proxy User
"RTN","XUSAP",73,0)
 N DA,DIC,DIE,DR,DLAYGO,DIRUT,XUITNAME,X,Y
"RTN","XUSAP",74,0)
 I '$D(^XUSEC("XUMGR",$G(DUZ,0))) W !,"You MUST hold the XUMGR key" Q
"RTN","XUSAP",75,0)
 S DIC="^VA(200,",DIC(0)="AELMQ",DLAYGO=200,DIC("A")="Enter NPF CONNECTOR PROXY name : ",XUITNAME=1
"RTN","XUSAP",76,0)
 S DIC("DR")="3///@"
"RTN","XUSAP",77,0)
 D ^DIC S DA=+Y
"RTN","XUSAP",78,0)
 Q:DA'>0
"RTN","XUSAP",79,0)
 I '$P(Y,U,3),'$$USERTYPE(DA,"CONNECTOR PROXY") D  Q  ;Quit
"RTN","XUSAP",80,0)
 . W !,"Existing User is not a CONNECTOR PROXY"
"RTN","XUSAP",81,0)
 . Q
"RTN","XUSAP",82,0)
 I DA,$$USERTYPE(DA,"APPLICATION PROXY") W !,"Can't use an APPLICATION PROXY user." Q
"RTN","XUSAP",83,0)
 ;Build DIE call
"RTN","XUSAP",84,0)
 L +^VA(200,DA,0):DTIME
"RTN","XUSAP",85,0)
 S DIE="^VA(200,"
"RTN","XUSAP",86,0)
 S DR="7.2///Y;9.5///CONNECTOR PROXY;2.1;11.1;200.04///ALLOWED;201///@",DR(2,200.07)="2///Y"
"RTN","XUSAP",87,0)
 D ^DIE
"RTN","XUSAP",88,0)
 L -^VA(200,DA,0)
"RTN","XUSAP",89,0)
 Q
"RTN","ZIS4GTM")
0^13^B20959123^B17859253
"RTN","ZIS4GTM",1,0)
%ZIS4 ;ISF/RWF,DW - DEVICE HANDLER SPECIFIC CODE (GT.M for Unix/VMS) ;03/07/2007
"RTN","ZIS4GTM",2,0)
 ;;8.0;KERNEL;**275,425**;Jul 10, 1995;Build 18
"RTN","ZIS4GTM",3,0)
 ;
"RTN","ZIS4GTM",4,0)
OPEN ;From %ZIS3 for TRM
"RTN","ZIS4GTM",5,0)
 G OPN2:$D(IO(1,IO))
"RTN","ZIS4GTM",6,0)
 S POP=0 D OP1 G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4GTM",7,0)
OPN2 ;
"RTN","ZIS4GTM",8,0)
 I $D(%ZISHP),'$D(IOP) W !,*7," Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4GTM",9,0)
 Q
"RTN","ZIS4GTM",10,0)
NOPEN I %IS'["D",$D(%ZISHP)!(%ZISHG]"") S POP=1 Q
"RTN","ZIS4GTM",11,0)
 I '$D(IOP) W *7,"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4GTM",12,0)
 S POP=1 Q
"RTN","ZIS4GTM",13,0)
 Q
"RTN","ZIS4GTM",14,0)
 ;Why no open paraneters???
"RTN","ZIS4GTM",15,0)
OP1 N $ES,$ET S $ET="G OPNERR^%ZIS4"
"RTN","ZIS4GTM",16,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4GTM",17,0)
 O IO::%ZISTO S:$T IO(1,IO)="" S:'$T POP=1 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4GTM",18,0)
 Q
"RTN","ZIS4GTM",19,0)
OPNERR ;Open Error
"RTN","ZIS4GTM",20,0)
 S POP=1,IO("LASTERR")=$G(IO("ERROR")),IO("ERROR")=$$EC^%ZOSV,$EC="" Q
"RTN","ZIS4GTM",21,0)
 ;
"RTN","ZIS4GTM",22,0)
O ;From %ZIS6 for other types.
"RTN","ZIS4GTM",23,0)
 D:%IS["L" ZIO
"RTN","ZIS4GTM",24,0)
LCKGBL ;Lock Global
"RTN","ZIS4GTM",25,0)
 I %ZTYPE="CHAN" N % S %=$G(^%ZIS(1,+%E,"GBL")) I $L(%) L @("+^"_%_":0") S:'$T POP=1 I POP W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4GTM",26,0)
 I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX
"RTN","ZIS4GTM",27,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%IS("HFSIO")),$D(%IS("IOPAR")),%IS("HFSIO")]"" S IO=%IS("HFSIO"),%ZISOPAR=%IS("IOPAR")
"RTN","ZIS4GTM",28,0)
 I %ZTYPE="CHAN" D TCPIP Q:POP  G OXECUTE^%ZIS6
"RTN","ZIS4GTM",29,0)
 S %A=%ZISOPAR_$S(%ZISOPAR["):":"",%ZTYPE["CHAN"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO)
"RTN","ZIS4GTM",30,0)
 N % S %(IO)="",%=$P($P($NA(%(IO)),"(",2),")")
"RTN","ZIS4GTM",31,0)
 S %A=%_$E(":",%A]"")_%A
"RTN","ZIS4GTM",32,0)
 D O1 I POP D  Q
"RTN","ZIS4GTM",33,0)
 .I %ZTYPE="HFS",'$D(IOP),$G(IO("ERROR"))["file not found" W !,?5,*7,"[File Not Found]" Q
"RTN","ZIS4GTM",34,0)
 .W:'$D(IOP) !,?5,*7,"[DEVICE IS BUSY]" Q
"RTN","ZIS4GTM",35,0)
 ;S IO(1,IO)="" U IO S:'(IO=IO(0)&'$D(IO("S"))&'$D(ZTQUEUED)) $X=0,$Y=0 I %ZTYPE["TRM" U IO:(WIDTH=+%Z91)
"RTN","ZIS4GTM",36,0)
 U IO S $X=0,$Y=0 I %ZTYPE["TRM" U IO:(WIDTH=+%Z91)
"RTN","ZIS4GTM",37,0)
 I %ZISUPAR]"" S %A1=""""_IO_""":"_%ZISUPAR U @%A1
"RTN","ZIS4GTM",38,0)
 ;U:%IS'[0 IO(0)
"RTN","ZIS4GTM",39,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4GTM",40,0)
 ;
"RTN","ZIS4GTM",41,0)
O1 N $ES,$ET S $ET="G OPNERR^%ZIS4"
"RTN","ZIS4GTM",42,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZIS4GTM",43,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 S:'POP IO(1,IO)="" L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZIS4GTM",44,0)
 S IO("ERROR")="" Q
"RTN","ZIS4GTM",45,0)
 ;
"RTN","ZIS4GTM",46,0)
 ;Need to find out how to get IP address
"RTN","ZIS4GTM",47,0)
ZIO N %,%1 S (%,%1)=$ZIO
"RTN","ZIS4GTM",48,0)
 I $ZV["VMS",%["_TNA" D
"RTN","ZIS4GTM",49,0)
 . S (%,%1)=$ZGETDVI($I,"TT_ACCPORNAM")
"RTN","ZIS4GTM",50,0)
 . S %=$S(%["Host:":$P($P(%,"Host: ",2)," ")_":"_$P(%,"Port: ",2),1:%) S:%[" " %=$TR(%," ")
"RTN","ZIS4GTM",51,0)
 I $ZV'["VMS" D
"RTN","ZIS4GTM",52,0)
 . S (%,%1)=$ZTRNLNM("REMOTEHOST") S:$L(%) %1="Host:"_% S:'$L(%) %=$ZIO
"RTN","ZIS4GTM",53,0)
 S IO("ZIO")=% S:(%1["Host:")&'$D(IO("IP")) IO("IP")=$P(%,":")
"RTN","ZIS4GTM",54,0)
 Q
"RTN","ZIS4GTM",55,0)
 ;
"RTN","ZIS4GTM",56,0)
TCPIP ;For TCP/IP devices
"RTN","ZIS4GTM",57,0)
 N %S
"RTN","ZIS4GTM",58,0)
 S %ZISTO=$G(%ZISTO,3)
"RTN","ZIS4GTM",59,0)
 S %A="IO:"_$S($E(%ZISOPAR)="(":"",1:"(")_%ZISOPAR_$S($E(%ZISOPAR,$L(%ZISOPAR))=")":"",1:")")_":%ZISTO:""SOCKET"""
"RTN","ZIS4GTM",60,0)
 ;U $P W !,"%A=",%A
"RTN","ZIS4GTM",61,0)
 O @%A I '$T S POP=1 Q  ;D O1 ;Do the open.
"RTN","ZIS4GTM",62,0)
 U IO:(WIDTH=512:NOWRAP:EXCEPT="G OPNERR^%ZIS4") S %S=$KEY
"RTN","ZIS4GTM",63,0)
 U $P ;W !,"$KEY=",%S
"RTN","ZIS4GTM",64,0)
 Q
"RTN","ZIS4GTM",65,0)
 ;
"RTN","ZIS4GTM",66,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name.
"RTN","ZIS4GTM",67,0)
 I $D(ZISDA) W:'$D(IOP) !?5,*7,"You may not Spool the printing of a Spool document" G N
"RTN","ZIS4GTM",68,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G N
"RTN","ZIS4GTM",69,0)
R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) G OK:$D(IO("Q"))
"RTN","ZIS4GTM",70,0)
 G:'%ZISB OK I '$P(%ZY,"^",3),%ZFN]"" D SPL3 G N:%ZFN']"",DOC
"RTN","ZIS4GTM",71,0)
 S %ZFN=IO_"SPOOL_no_"_%ZDA_".TMP" D SPL2 G:%ZFN']"" N S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4GTM",72,0)
DOC S IO=%ZFN,IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA,IOF="#"
"RTN","ZIS4GTM",73,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4GTM",74,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4GTM",75,0)
N K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4GTM",76,0)
SPL2 O %ZFN:(NEWVERSION:WORLD=RWD) G:$ZA<0 SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4GTM",77,0)
SPL3 N X S X="SPL4^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4GTM",78,0)
 O %ZFN:READONLY:1 S:'$T ZISPLQ=1 G:$ZA<0!('$T) SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4GTM",79,0)
SPL4 W:'$D(IOP)&'$D(ZTQUEUED) !?5,*7,"Couldn't open the spool file." S %ZFN="" Q
"RTN","ZIS4GTM",80,0)
CLOSE N %Z1 C:IO]"" IO K:IO]"" IO(1,IO) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4GTM",81,0)
 S %ZFN=$P(%ZS,"^",2) D SPL3 Q:%ZFN']""  U %ZFN S %ZCR=$C(13),%Y="",X="SPLEOF^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4GTM",82,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4GTM",83,0)
 F %=0:0 R %X#255:5 Q:$ZA<0  S %2=%X D CL2 G:%Z1<% SPLEX
"RTN","ZIS4GTM",84,0)
SPLEOF I $ZE'["ENDO" Q  ;Send error up
"RTN","ZIS4GTM",85,0)
SPLEX C %ZFN:(DELETE) K:%ZFN]"" IO(1,%ZFN) D CLOSE^ZISPL1 K %Y,%X,%1,%ZFN Q
"RTN","ZIS4GTM",86,0)
 ;
"RTN","ZIS4GTM",87,0)
CL2 S %=%+1 I %Z1<% S ^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZIS4GTM",88,0)
 I %2[$C(12) S ^XMBS(3.519,XS,2,%,0)="|TOP|" Q
"RTN","ZIS4GTM",89,0)
 S ^XMBS(3.519,XS,2,%,0)=%2 Q
"RTN","ZIS4GTM",90,0)
 ;
"RTN","ZIS4GTM",91,0)
HFS G HFS^%ZISF
"RTN","ZIS4GTM",92,0)
REWMT(IO,IOPAR) ;Rewind Magtape
"RTN","ZIS4GTM",93,0)
 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4GTM",94,0)
 U IO W *5
"RTN","ZIS4GTM",95,0)
 Q 1
"RTN","ZIS4GTM",96,0)
REWSDP(IO,IOPAR) ;Rewind SDP
"RTN","ZIS4GTM",97,0)
 G REW1
"RTN","ZIS4GTM",98,0)
REWHFS(IO,IOPAR) ;Rewind Host File.
"RTN","ZIS4GTM",99,0)
REW1 S X="REWERR^%ZIS4",@^%ZOSF("TRAP")
"RTN","ZIS4GTM",100,0)
 U IO:(REWIND)
"RTN","ZIS4GTM",101,0)
 Q 1
"RTN","ZIS4GTM",102,0)
REWERR ;Error encountered
"RTN","ZIS4GTM",103,0)
 Q 0
"RTN","ZISUTL")
0^8^B10953558^B10918305
"RTN","ZISUTL",1,0)
%ZISUTL ;Device Handler Utility routine ;01/08/2007
"RTN","ZISUTL",2,0)
 ;;8.0;KERNEL;**18,24,34,69,118,127,199,275,425**;JUL 10, 1995;Build 18
"RTN","ZISUTL",3,0)
 Q  ;No entry from top
"RTN","ZISUTL",4,0)
GETDEV(X) ;Return IO variables
"RTN","ZISUTL",5,0)
 I '$D(^TMP("XUDEVICE",$J,X)) S POP=1 Q
"RTN","ZISUTL",6,0)
 ;Cleanup first
"RTN","ZISUTL",7,0)
 N % K IO("S")
"RTN","ZISUTL",8,0)
 D SYMBOL("K") ;Kill first
"RTN","ZISUTL",9,0)
 D SYMBOL(1,$NA(^TMP("XUDEVICE",$J,X)))
"RTN","ZISUTL",10,0)
 Q
"RTN","ZISUTL",11,0)
 ;
"RTN","ZISUTL",12,0)
SAVDEV(NM) ;Save IO variables
"RTN","ZISUTL",13,0)
 ;NM=Handle name
"RTN","ZISUTL",14,0)
 N %,Y,R
"RTN","ZISUTL",15,0)
 I $G(IO)="" Q
"RTN","ZISUTL",16,0)
 S Y=$$FINDEV(NM) I 'Y S Y=$$NEXTDEV(NM)
"RTN","ZISUTL",17,0)
 S R=$NA(^TMP("XUDEVICE",$J,Y)) K @R ;Clear
"RTN","ZISUTL",18,0)
 S @R@(0)=NM
"RTN","ZISUTL",19,0)
 D SYMBOL(0,R)
"RTN","ZISUTL",20,0)
 Q
"RTN","ZISUTL",21,0)
 ;
"RTN","ZISUTL",22,0)
SYMBOL(MODE,ROOT) ;0=Save, 1=Restore, K=Kill IO variables
"RTN","ZISUTL",23,0)
 N %
"RTN","ZISUTL",24,0)
 ;Handle IO as special case.  Don't want to kill all of IO.
"RTN","ZISUTL",25,0)
 I MODE=0 S:$D(IO)#2 @ROOT@("IO")=IO
"RTN","ZISUTL",26,0)
 I MODE=1 S:$D(@ROOT@("IO")) IO=@ROOT@("IO")
"RTN","ZISUTL",27,0)
 F %="IO(""DOC"")","IO(""HFSIO"")","IO(""Q"")","IO(""S"")","IO(""SPOOL"")","IO(""ZIO"")","IOBS","IOCPU","IOF","IOHG","IOM","ION","IOPAR","IOUPAR","IOS","IOSL","IOST","IOST(0)","IOT","IOXY" D
"RTN","ZISUTL",28,0)
 . I MODE=0 S:$D(@%)#2 @ROOT@(%)=@% Q
"RTN","ZISUTL",29,0)
 . I MODE=1 S:$D(@ROOT@(%)) @%=@ROOT@(%) Q
"RTN","ZISUTL",30,0)
 . I MODE="K" K @%
"RTN","ZISUTL",31,0)
 . Q
"RTN","ZISUTL",32,0)
 Q
"RTN","ZISUTL",33,0)
 ;
"RTN","ZISUTL",34,0)
RMDEV(X) ;Remove saved IO variables.
"RTN","ZISUTL",35,0)
 N Y
"RTN","ZISUTL",36,0)
 S Y=$$FINDEV(X)
"RTN","ZISUTL",37,0)
 Q:'Y
"RTN","ZISUTL",38,0)
 K ^TMP("XUDEVICE",$J,"B",X),^TMP("XUDEVICE",$J,+Y)
"RTN","ZISUTL",39,0)
 Q
"RTN","ZISUTL",40,0)
 ;
"RTN","ZISUTL",41,0)
RMALLDEV() ;Remove saved IO variables for all devices saved in table.
"RTN","ZISUTL",42,0)
 K ^TMP("XUDEVICE",$J)
"RTN","ZISUTL",43,0)
 Q 1
"RTN","ZISUTL",44,0)
 ;
"RTN","ZISUTL",45,0)
FINDEV(NM) ;Find Device name and return IEN.
"RTN","ZISUTL",46,0)
 Q $O(^TMP("XUDEVICE",$J,"B",NM,0))
"RTN","ZISUTL",47,0)
 ;
"RTN","ZISUTL",48,0)
NEXTDEV(NM) ;Return next available device.
"RTN","ZISUTL",49,0)
 N Y
"RTN","ZISUTL",50,0)
 F Y=1:1 Q:'$D(^TMP("XUDEVICE",$J,Y))
"RTN","ZISUTL",51,0)
 S ^TMP("XUDEVICE",$J,"B",NM,Y)=""
"RTN","ZISUTL",52,0)
 Q Y
"RTN","ZISUTL",53,0)
 ;
"RTN","ZISUTL",54,0)
OPEN(HNDL,IOP,%ZIS) ;Open extrinsic function
"RTN","ZISUTL",55,0)
 ;Parameters
"RTN","ZISUTL",56,0)
 ;HNDL=Handle name
"RTN","ZISUTL",57,0)
 ;IOP string--optional
"RTN","ZISUTL",58,0)
 ;%ZIS string--optional
"RTN","ZISUTL",59,0)
 N %
"RTN","ZISUTL",60,0)
 I $G(IOP)="" K IOP ;Remove IOP if null.
"RTN","ZISUTL",61,0)
 D ^%ZIS,SAVDEV(HNDL):POP=0
"RTN","ZISUTL",62,0)
 Q
"RTN","ZISUTL",63,0)
 ;
"RTN","ZISUTL",64,0)
CLOSE(X1) ;Close extrinsic functionsl
"RTN","ZISUTL",65,0)
 ;X1=Handle
"RTN","ZISUTL",66,0)
 N %,Y
"RTN","ZISUTL",67,0)
 S Y=$$FINDEV(X1)
"RTN","ZISUTL",68,0)
 Q:'Y
"RTN","ZISUTL",69,0)
 D GETDEV(Y)
"RTN","ZISUTL",70,0)
 D ^%ZISC,RMDEV(X1)
"RTN","ZISUTL",71,0)
 Q
"RTN","ZISUTL",72,0)
 ;
"RTN","ZISUTL",73,0)
USE(X1) ;Restore IO* variables pertaining to the device.
"RTN","ZISUTL",74,0)
 ;X1=Handle name
"RTN","ZISUTL",75,0)
 N %,Y
"RTN","ZISUTL",76,0)
 S Y=$$FINDEV^%ZISUTL(X1)
"RTN","ZISUTL",77,0)
 Q:'Y
"RTN","ZISUTL",78,0)
 D GETDEV^%ZISUTL(Y)
"RTN","ZISUTL",79,0)
 I $G(IOT)'="RES" U $S($D(IO(1,IO)):IO,1:IO(0))
"RTN","ZISUTL",80,0)
 K IO("CLOSE")
"RTN","ZISUTL",81,0)
 Q
"RTN","ZISUTL",82,0)
 ;
"RTN","ZISUTL",83,0)
LINEPORT() ;Return device name for line port.
"RTN","ZISUTL",84,0)
 ;
"RTN","ZISUTL",85,0)
 N %,%1,Y
"RTN","ZISUTL",86,0)
 S Y=0
"RTN","ZISUTL",87,0)
 S %=$$LNPRTIEN^%ZISUTL($$LNPRTNAM^%ZISUTL)
"RTN","ZISUTL",88,0)
 S Y=+$P($G(^%ZIS(3.23,+%,0)),"^",3)
"RTN","ZISUTL",89,0)
 Q Y
"RTN","ZISUTL",90,0)
LNPRTSUB() ;Return line port subtype pointer.
"RTN","ZISUTL",91,0)
 N %
"RTN","ZISUTL",92,0)
 S %=$$LNPRTIEN^%ZISUTL($$LNPRTNAM^%ZISUTL)
"RTN","ZISUTL",93,0)
 Q +$P($G(^%ZIS(3.23,+%,0)),"^",4)
"RTN","ZISUTL",94,0)
 ;
"RTN","ZISUTL",95,0)
LNPRTNAM() ;Return Line port name
"RTN","ZISUTL",96,0)
 N Y,%
"RTN","ZISUTL",97,0)
 S Y="",%=$G(^%ZOSF("OS"))
"RTN","ZISUTL",98,0)
 I %["VAX DSM"!(%["OpenM-NT") D
"RTN","ZISUTL",99,0)
 .S Y=$ZIO
"RTN","ZISUTL",100,0)
 E  I %["MSM" X "S Y=$ZDEV($I)"
"RTN","ZISUTL",101,0)
 Q Y
"RTN","ZISUTL",102,0)
LNPRTIEN(X) ;Return internal entry number of Line/port
"RTN","ZISUTL",103,0)
 Q:X'?1AN.29ANP 0
"RTN","ZISUTL",104,0)
 Q $O(^%ZIS(3.23,"B",X,0))
"RTN","ZISUTL",105,0)
LNPRTADR(X) ;Returns Line/Port name of a fixed device.
"RTN","ZISUTL",106,0)
 N %,Y
"RTN","ZISUTL",107,0)
 S Y=""
"RTN","ZISUTL",108,0)
 S %=$O(^%ZIS(1,"B",X,0))
"RTN","ZISUTL",109,0)
 S %=$O(^%ZIS(3.23,"C",+%,0))
"RTN","ZISUTL",110,0)
 I %,$G(^%ZIS(3.23,+%,0))]"" S Y=$P(^(0),"^")
"RTN","ZISUTL",111,0)
 Q Y
"RTN","ZISUTL",112,0)
 ;
"RTN","ZISUTL",113,0)
FIND(IOP) ;e.f. Get the IEN of a device
"RTN","ZISUTL",114,0)
 N %XX,%YY,%ZIS,%ZISV
"RTN","ZISUTL",115,0)
 S %ZISV=^%ZOSF("VOL"),%XX=$$UP^%ZIS1(IOP) D 1^%ZIS5
"RTN","ZISUTL",116,0)
 Q %YY
"RTN","ZISUTL",117,0)
NOQ(IOP) ;e.f. Return queueing status
"RTN","ZISUTL",118,0)
 ;Call with Device name, Return 1 if NO QUEUE, Else 0.
"RTN","ZISUTL",119,0)
 N %X,%Y S %X=$$FIND(IOP) Q:%X'>0 0
"RTN","ZISUTL",120,0)
 S %Y=$P($G(^%ZIS(1,%X,0)),U,12)
"RTN","ZISUTL",121,0)
 Q %Y=2
"RTN","ZISUTL",122,0)
 ;
"RTN","ZISUTL",123,0)
UNIQUE(ZISNA) ;Build a unque number to add to a device name
"RTN","ZISUTL",124,0)
 ;If passed a name put the number before the last dot.
"RTN","ZISUTL",125,0)
 N %,%1
"RTN","ZISUTL",126,0)
 S %=$H,%=$H_"-"_$J,%=$$CRC32^XLFCRC(%)
"RTN","ZISUTL",127,0)
 I '$L($G(ZISNA)) Q %
"RTN","ZISUTL",128,0)
 S %1=$L(ZISNA,"."),%="_"_%
"RTN","ZISUTL",129,0)
 S:%1=1 %=ZISNA_% S:%1>1 %=$P(ZISNA,".",1,%1-1)_%_"."_$P(ZISNA,".",%1)
"RTN","ZISUTL",130,0)
 Q %
"RTN","ZOSFGTM")
0^10^B23513514^B21430649
"RTN","ZOSFGTM",1,0)
ZOSFGTM ;ISF/staff - ZOSF Table for GT.M for VMS ;10/18/06  14:28
"RTN","ZOSFGTM",2,0)
 ;;8.0;KERNEL;**275,425**;Jul 10, 1995;Build 18
"RTN","ZOSFGTM",3,0)
 ; for GT.M for VMS, version 4.3
"RTN","ZOSFGTM",4,0)
 ;
"RTN","ZOSFGTM",5,0)
 S %Y=1,DTIME=$G(DTIME,600)
"RTN","ZOSFGTM",6,0)
 K ^%ZOSF("MASTER"),^%ZOSF("SIGNOFF")
"RTN","ZOSFGTM",7,0)
 I '$D(^%ZOSF("VOL")) S ^%ZOSF("VOL")="ROU"
"RTN","ZOSFGTM",8,0)
 K ZO F I="MGR","PROD","VOL" S:$D(^%ZOSF(I)) ZO(I)=^%ZOSF(I)
"RTN","ZOSFGTM",9,0)
 F I=1:2 S Z=$P($T(Z+I),";;",2) Q:Z=""  D
"RTN","ZOSFGTM",10,0)
 . S X=$P($T(Z+1+I),";;",2,99)
"RTN","ZOSFGTM",11,0)
 . S ^%ZOSF(Z)=$S($D(ZO(Z)):ZO(Z),1:X)
"RTN","ZOSFGTM",12,0)
 . Q
"RTN","ZOSFGTM",13,0)
 ;
"RTN","ZOSFGTM",14,0)
OS S ^%ZOSF("OS")="GT.M (VMS)^17"
"RTN","ZOSFGTM",15,0)
MGR W !,"NAME OF MANAGER'S UCI,VOLUME SET: "_^%ZOSF("MGR")_"// " R X:DTIME I X]"" X ^("UCICHECK") G MGR:0[Y S ^%ZOSF("MGR")=X
"RTN","ZOSFGTM",16,0)
PROD ;
"RTN","ZOSFGTM",17,0)
 W !,"The value of PRODUCTION will be used in the GETENV api."
"RTN","ZOSFGTM",18,0)
 W !,"PRODUCTION (SIGN-ON) UCI,VOLUME SET: "_^%ZOSF("PROD")_"// " R X:DTIME I X]"" X ^("UCICHECK") G PROD:0[Y S ^%ZOSF("PROD")=X
"RTN","ZOSFGTM",19,0)
 ;See that VOL and PROD agree.
"RTN","ZOSFGTM",20,0)
 I ^%ZOSF("PROD")'[^%ZOSF("VOL") S ^%ZOSF("VOL")=$P(^%ZOSF("PROD"),",",2)
"RTN","ZOSFGTM",21,0)
VOL W !,"The VOLUME name must match the one in PRODUCTION."
"RTN","ZOSFGTM",22,0)
 W !,"NAME OF VOLUME SET: "_^%ZOSF("VOL")_"//" R X:DTIME
"RTN","ZOSFGTM",23,0)
 I X]"" D  I X'?3U W "MUST BE 3 Upper case." G VOL
"RTN","ZOSFGTM",24,0)
 . I ^%ZOSF("PROD")'[X W !,"Must match PRODUCTION"
"RTN","ZOSFGTM",25,0)
 . S:X?3U ^%ZOSF("VOL")=X
"RTN","ZOSFGTM",26,0)
 W !,"^%ZOSF setup"
"RTN","ZOSFGTM",27,0)
 Q
"RTN","ZOSFGTM",28,0)
 ;
"RTN","ZOSFGTM",29,0)
Z ;
"RTN","ZOSFGTM",30,0)
 ;;ACTJ
"RTN","ZOSFGTM",31,0)
 ;;S Y=$$ACTJ^%ZOSV()
"RTN","ZOSFGTM",32,0)
 ;;AVJ
"RTN","ZOSFGTM",33,0)
 ;;S Y=$$AVJ^%ZOSV()
"RTN","ZOSFGTM",34,0)
 ;;BRK
"RTN","ZOSFGTM",35,0)
 ;;U $I:(CENABLE)
"RTN","ZOSFGTM",36,0)
 ;;DEL
"RTN","ZOSFGTM",37,0)
 ;;D DEL^%ZOSV2(X) ;N %DIR S %DIR=$P($ZRO,",") ZSYSTEM "DEL "_%DIR_X_".m;*" ZSYSTEM "DEL "_%DIR_X_".obj;*"
"RTN","ZOSFGTM",38,0)
 ;;EOFF
"RTN","ZOSFGTM",39,0)
 ;;U $I:(NOECHO)
"RTN","ZOSFGTM",40,0)
 ;;EON
"RTN","ZOSFGTM",41,0)
 ;;U $I:(ECHO)
"RTN","ZOSFGTM",42,0)
 ;;EOT
"RTN","ZOSFGTM",43,0)
 ;;S Y=$ZA\1024#2 ; <=====
"RTN","ZOSFGTM",44,0)
 ;;ERRTN
"RTN","ZOSFGTM",45,0)
 ;;^%ZTER
"RTN","ZOSFGTM",46,0)
 ;;ETRP
"RTN","ZOSFGTM",47,0)
 ;;Q
"RTN","ZOSFGTM",48,0)
 ;;GD
"RTN","ZOSFGTM",49,0)
 ;;G ^%GD
"RTN","ZOSFGTM",50,0)
 ;;$INC
"RTN","ZOSFGTM",51,0)
 ;;0
"RTN","ZOSFGTM",52,0)
 ;;JOBPARAM
"RTN","ZOSFGTM",53,0)
 ;;G JOBPAR^%ZOSV
"RTN","ZOSFGTM",54,0)
 ;;LABOFF
"RTN","ZOSFGTM",55,0)
 ;;U IO:(NOECHO)
"RTN","ZOSFGTM",56,0)
 ;;LOAD
"RTN","ZOSFGTM",57,0)
 ;;D LOAD^%ZOSV2(X) ;N % S %N=0 F XCNP=XCNP+1:1 S %N=%N+1,%=$T(+%N^@X) Q:$L(%)=0  S @(DIF_XCNP_",0)")=%
"RTN","ZOSFGTM",58,0)
 ;;LPC;;Longitudinal Parity Check (Exclusive OR of the 8-bit bytes)
"RTN","ZOSFGTM",59,0)
 ;;S Y=$$LPC^%ZOSV(X)
"RTN","ZOSFGTM",60,0)
 ;;MAGTAPE
"RTN","ZOSFGTM",61,0)
 ;;S %MT("BS")="*1",%MT("FS")="*2",%MT("WTM")="*3",%MT("WB")="*4",%MT("REW")="*5",%MT("RB")="*6",%MT("REL")="*7",%MT("WHL")="*8",%MT("WEL")="*9" ; <=====
"RTN","ZOSFGTM",62,0)
 ;;MAXSIZ
"RTN","ZOSFGTM",63,0)
 ;;Q
"RTN","ZOSFGTM",64,0)
 ;;MGR
"RTN","ZOSFGTM",65,0)
 ;;VAH,ROU
"RTN","ZOSFGTM",66,0)
 ;;MTBOT
"RTN","ZOSFGTM",67,0)
 ;;S Y=$ZA\32#2 ; <=====
"RTN","ZOSFGTM",68,0)
 ;;MTERR
"RTN","ZOSFGTM",69,0)
 ;;S Y=$ZA\32768#2 ; <=====
"RTN","ZOSFGTM",70,0)
 ;;MTONLINE
"RTN","ZOSFGTM",71,0)
 ;;S Y=$ZA\64#2 ; <=====
"RTN","ZOSFGTM",72,0)
 ;;MTWPROT
"RTN","ZOSFGTM",73,0)
 ;;S Y=$ZA\4#2 ; <=====
"RTN","ZOSFGTM",74,0)
 ;;NBRK
"RTN","ZOSFGTM",75,0)
 ;;U $I:(NOCENABLE)
"RTN","ZOSFGTM",76,0)
 ;;NO-PASSALL
"RTN","ZOSFGTM",77,0)
 ;;U $I:(ESCAPE:TERMINATOR="":NOPASTHRU)
"RTN","ZOSFGTM",78,0)
 ;;NO-TYPE-AHEAD
"RTN","ZOSFGTM",79,0)
 ;;U $I:(NOTYPEAHEAD)
"RTN","ZOSFGTM",80,0)
 ;;PASSALL
"RTN","ZOSFGTM",81,0)
 ;;U $I:(NOESCAPE:NOTERMINATOR:PASTHRU)
"RTN","ZOSFGTM",82,0)
 ;;PRIINQ
"RTN","ZOSFGTM",83,0)
 ;;S Y=$$PRIINQ^%ZOSV()
"RTN","ZOSFGTM",84,0)
 ;;PRIORITY
"RTN","ZOSFGTM",85,0)
 ;;Q  ;G PRIORITY^%ZOSV
"RTN","ZOSFGTM",86,0)
 ;;PROD
"RTN","ZOSFGTM",87,0)
 ;;VAH,ROU
"RTN","ZOSFGTM",88,0)
 ;;PROGMODE
"RTN","ZOSFGTM",89,0)
 ;;S Y=$$PROGMODE^%ZOSV()
"RTN","ZOSFGTM",90,0)
 ;;RD
"RTN","ZOSFGTM",91,0)
 ;;G ^%RD
"RTN","ZOSFGTM",92,0)
 ;;RESJOB
"RTN","ZOSFGTM",93,0)
 ;;Q:'$D(DUZ)  Q:'$D(^XUSEC("XUMGR",+DUZ))  W !!,"From VMS use: mupip stop /id=pid",!
"RTN","ZOSFGTM",94,0)
 ;;RM
"RTN","ZOSFGTM",95,0)
 ;;U $I:WIDTH=$S(X<256:X,1:0)
"RTN","ZOSFGTM",96,0)
 ;;RSEL
"RTN","ZOSFGTM",97,0)
 ;;N %ZR,X K ^UTILITY($J) D ^%RSEL S X="" X "F  S X=$O(%ZR(X)) Q:X=""""  S ^UTILITY($J,X)="""""
"RTN","ZOSFGTM",98,0)
 ;;RSUM
"RTN","ZOSFGTM",99,0)
 ;;N %,%1,%2,%3 S Y=0 F %=1,3:1 S %1=$T(+%^@X),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*%2+Y
"RTN","ZOSFGTM",100,0)
 ;;RSUM1
"RTN","ZOSFGTM",101,0)
 ;;N %,%1,%2,%3 S Y=0 F %=1,3:1 S %1=$T(+%^@X),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*(%2+%)+Y
"RTN","ZOSFGTM",102,0)
 ;;SS
"RTN","ZOSFGTM",103,0)
 ;;D ^ZSY
"RTN","ZOSFGTM",104,0)
 ;;SAVE
"RTN","ZOSFGTM",105,0)
 ;;D SAVE^%ZOSV2(X) ;N %I,%F,SP S %I=$I,SP=" ",%F=$P($ZRO,",")_X_".m" O %F:(NEWVERSION) U %F X "F  S XCN=$O(@(DIE_XCN_"")"")) Q:XCN'>0  S %=@(DIE_XCN_"",0)"") Q:$E(%,1)=""$""  I $E(%)'="";"" W $P(%,SP)_$C(9)_$P(%,SP,2,99999),!" C %F U %I
"RTN","ZOSFGTM",106,0)
 ;;SIZE
"RTN","ZOSFGTM",107,0)
 ;;N %,I S Y=0 F I=1:1 S %=$T(+I^@X) Q:%=""  S Y=Y+$L(%)+2
"RTN","ZOSFGTM",108,0)
 ;;TEST
"RTN","ZOSFGTM",109,0)
 ;;I X]"",$L($$TEST^%ZOSV2(X))
"RTN","ZOSFGTM",110,0)
 ;;TMK
"RTN","ZOSFGTM",111,0)
 ;;S Y=$ZA\16384#2
"RTN","ZOSFGTM",112,0)
 ;;TRAP
"RTN","ZOSFGTM",113,0)
 ;;$ZT="G "_X
"RTN","ZOSFGTM",114,0)
 ;;TRMOFF
"RTN","ZOSFGTM",115,0)
 ;;U $I:(TERMINATOR="":NOPASTHRU:ESCAPE)
"RTN","ZOSFGTM",116,0)
 ;;TRMON
"RTN","ZOSFGTM",117,0)
 ;;U $I:(TERMINATOR=$C(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127):NOESCAPE:PASTHRU)
"RTN","ZOSFGTM",118,0)
 ;;TRMRD
"RTN","ZOSFGTM",119,0)
 ;;S Y=$A($ZB)
"RTN","ZOSFGTM",120,0)
 ;;TYPE-AHEAD
"RTN","ZOSFGTM",121,0)
 ;;U $I:(TYPEAHEAD)
"RTN","ZOSFGTM",122,0)
 ;;UCI
"RTN","ZOSFGTM",123,0)
 ;;S Y=^%ZOSF("PROD")
"RTN","ZOSFGTM",124,0)
 ;;UCICHECK
"RTN","ZOSFGTM",125,0)
 ;;S Y=1
"RTN","ZOSFGTM",126,0)
 ;;UPPERCASE
"RTN","ZOSFGTM",127,0)
 ;;S Y=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ZOSFGTM",128,0)
 ;;XY
"RTN","ZOSFGTM",129,0)
 ;;S $X=DX,$Y=DY
"RTN","ZOSFGTM",130,0)
 ;;VOL
"RTN","ZOSFGTM",131,0)
 ;;ROU
"RTN","ZOSFGTM",132,0)
 ;;ZD;;Input X, output Y.
"RTN","ZOSFGTM",133,0)
 ;;S Y=$ZDATE(X) ;$$HTE^XLFDT(X,2) I $L($P(Y,"/"))=1 S Y=0_Y
"RTN","ZOSFGUX")
0^11^B24238572^B22086501
"RTN","ZOSFGUX",1,0)
ZOSFGUX ;SFISC/MVB,PUG/TOAD - ZOSF Table for GT.M for Unix ;4/18/07  10:30
"RTN","ZOSFGUX",2,0)
 ;;8.0;KERNEL;**275,425**;Jul 10, 1995;Build 18
"RTN","ZOSFGUX",3,0)
 ;; for GT.M for Unix, version 4.3
"RTN","ZOSFGUX",4,0)
 ;
"RTN","ZOSFGUX",5,0)
 S %Y=1,DTIME=$G(DTIME,600)
"RTN","ZOSFGUX",6,0)
 K ^%ZOSF("MASTER"),^%ZOSF("SIGNOFF")
"RTN","ZOSFGUX",7,0)
 I '$D(^%ZOSF("VOL")) S ^%ZOSF("VOL")="ROU"
"RTN","ZOSFGUX",8,0)
 K ZO F I="MGR","PROD","VOL","TMP" S:$D(^%ZOSF(I)) ZO(I)=^%ZOSF(I)
"RTN","ZOSFGUX",9,0)
 F I=1:2 S Z=$P($T(Z+I),";;",2) Q:Z=""  S X=$P($T(Z+1+I),";;",2,99) S:Z="OS" $P(^%ZOSF(Z),"^")=X I Z'="OS" S ^%ZOSF(Z)=$S($D(ZO(Z)):ZO(Z),1:X)
"RTN","ZOSFGUX",10,0)
 ;
"RTN","ZOSFGUX",11,0)
OS S ^%ZOSF("OS")="GT.M (Unix)^19"
"RTN","ZOSFGUX",12,0)
 ;
"RTN","ZOSFGUX",13,0)
MGR W !,"NAME OF MANAGER'S UCI,VOLUME SET: "_^%ZOSF("MGR")_"// " R X:DTIME I X]"" X ^("UCICHECK") G MGR:0[Y S ^%ZOSF("MGR")=X
"RTN","ZOSFGUX",14,0)
PROD ;
"RTN","ZOSFGUX",15,0)
 W !,"The value of PRODUCTION will be used in the GETENV api."
"RTN","ZOSFGUX",16,0)
 W !,"PRODUCTION (SIGN-ON) UCI,VOLUME SET: "_^%ZOSF("PROD")_"// " R X:DTIME I X]"" X ^("UCICHECK") G PROD:0[Y S ^%ZOSF("PROD")=X
"RTN","ZOSFGUX",17,0)
 ;See that VOL and PROD agree.
"RTN","ZOSFGUX",18,0)
 I ^%ZOSF("PROD")'[^%ZOSF("VOL") S ^%ZOSF("VOL")=$P(^%ZOSF("PROD"),",",2)
"RTN","ZOSFGUX",19,0)
VOL W !,"The VOLUME name must match the one in PRODUCTION."
"RTN","ZOSFGUX",20,0)
 W !,"NAME OF VOLUME SET: "_^%ZOSF("VOL")_"//" R X:DTIME
"RTN","ZOSFGUX",21,0)
 I X]"" D  I X'?3U W "MUST BE 3 Upper case." G VOL
"RTN","ZOSFGUX",22,0)
 . I ^%ZOSF("PROD")'[X W !,"Must match PRODUCTION"
"RTN","ZOSFGUX",23,0)
 . S:X?3U ^%ZOSF("VOL")=X
"RTN","ZOSFGUX",24,0)
TMP ;Get the temp directory
"RTN","ZOSFGUX",25,0)
 W !,"The temp directory for the system: '"_^%ZOSF("TMP")_"'//"
"RTN","ZOSFGUX",26,0)
 R X:DTIME I $L(X),X'?1"/".E G TMP
"RTN","ZOSFGUX",27,0)
 I $L(X) S ^%ZOSF("TMP")=X
"RTN","ZOSFGUX",28,0)
 W !,"^%ZOSF setup"
"RTN","ZOSFGUX",29,0)
 Q
"RTN","ZOSFGUX",30,0)
 ;
"RTN","ZOSFGUX",31,0)
Z ;
"RTN","ZOSFGUX",32,0)
 ;;ACTJ
"RTN","ZOSFGUX",33,0)
 ;;S Y=$$ACTJ^%ZOSV()
"RTN","ZOSFGUX",34,0)
 ;;AVJ
"RTN","ZOSFGUX",35,0)
 ;;S Y=$$AVJ^%ZOSV()
"RTN","ZOSFGUX",36,0)
 ;;BRK
"RTN","ZOSFGUX",37,0)
 ;;U $I:(CENABLE)
"RTN","ZOSFGUX",38,0)
 ;;DEL
"RTN","ZOSFGUX",39,0)
 ;;D DEL^%ZOSV2(X) ;N %RD,%OD S %RD=$P($S($ZRO["(":$P($P($ZRO,"(",2),")"),1:$ZRO)," ")_"/",%OD=$S($ZRO["(":$P($ZRO,"(",1)_"/",1:%RD) ZSYSTEM "rm -f "_%RD_X_".m" ZSYSTEM "rm -f "_%OD_X_".o"
"RTN","ZOSFGUX",40,0)
 ;;EOFF
"RTN","ZOSFGUX",41,0)
 ;;U $I:(NOECHO)
"RTN","ZOSFGUX",42,0)
 ;;EON
"RTN","ZOSFGUX",43,0)
 ;;U $I:(ECHO)
"RTN","ZOSFGUX",44,0)
 ;;EOT
"RTN","ZOSFGUX",45,0)
 ;;S Y=$ZA\1024#2 ; <=====
"RTN","ZOSFGUX",46,0)
 ;;ERRTN
"RTN","ZOSFGUX",47,0)
 ;;^%ZTER
"RTN","ZOSFGUX",48,0)
 ;;ETRP
"RTN","ZOSFGUX",49,0)
 ;;Q
"RTN","ZOSFGUX",50,0)
 ;;GD
"RTN","ZOSFGUX",51,0)
 ;;G ^%GD
"RTN","ZOSFGUX",52,0)
 ;;$INC
"RTN","ZOSFGUX",53,0)
 ;;0
"RTN","ZOSFGUX",54,0)
 ;;JOBPARAM
"RTN","ZOSFGUX",55,0)
 ;;G JOBPAR^%ZOSV
"RTN","ZOSFGUX",56,0)
 ;;LABOFF
"RTN","ZOSFGUX",57,0)
 ;;U IO:(NOECHO) ; <=====
"RTN","ZOSFGUX",58,0)
 ;;LOAD
"RTN","ZOSFGUX",59,0)
 ;;D LOAD^%ZOSV2(X) ;S %N=0 F XCNP=XCNP+1:1 S %N=%N+1,%=$T(+%N^@X) Q:$L(%)=0  S @(DIF_XCNP_",0)")=%
"RTN","ZOSFGUX",60,0)
 ;;LPC
"RTN","ZOSFGUX",61,0)
 ;;S Y="" ; <=====
"RTN","ZOSFGUX",62,0)
 ;;MAGTAPE
"RTN","ZOSFGUX",63,0)
 ;;S %MT("BS")="*1",%MT("FS")="*2",%MT("WTM")="*3",%MT("WB")="*4",%MT("REW")="*5",%MT("RB")="*6",%MT("REL")="*7",%MT("WHL")="*8",%MT("WEL")="*9" ; <=====
"RTN","ZOSFGUX",64,0)
 ;;MAXSIZ
"RTN","ZOSFGUX",65,0)
 ;;Q
"RTN","ZOSFGUX",66,0)
 ;;MGR
"RTN","ZOSFGUX",67,0)
 ;;VAH,ROU
"RTN","ZOSFGUX",68,0)
 ;;MTBOT
"RTN","ZOSFGUX",69,0)
 ;;S Y=$ZA\32#2 ; <=====
"RTN","ZOSFGUX",70,0)
 ;;MTERR
"RTN","ZOSFGUX",71,0)
 ;;S Y=$ZA\32768#2 ; <=====
"RTN","ZOSFGUX",72,0)
 ;;MTONLINE
"RTN","ZOSFGUX",73,0)
 ;;S Y=$ZA\64#2 ; <=====
"RTN","ZOSFGUX",74,0)
 ;;MTWPROT
"RTN","ZOSFGUX",75,0)
 ;;S Y=$ZA\4#2 ; <=====
"RTN","ZOSFGUX",76,0)
 ;;NBRK
"RTN","ZOSFGUX",77,0)
 ;;U $I:(NOCENABLE)
"RTN","ZOSFGUX",78,0)
 ;;NO-PASSALL
"RTN","ZOSFGUX",79,0)
 ;;U $I:(ESCAPE:TERMINATOR="":NOPASTHRU)
"RTN","ZOSFGUX",80,0)
 ;;NO-TYPE-AHEAD
"RTN","ZOSFGUX",81,0)
 ;;U $I:(NOTYPEAHEAD)
"RTN","ZOSFGUX",82,0)
 ;;PASSALL
"RTN","ZOSFGUX",83,0)
 ;;U $I:(NOESCAPE:NOTERMINATOR:PASTHRU)
"RTN","ZOSFGUX",84,0)
 ;;PRIINQ
"RTN","ZOSFGUX",85,0)
 ;;S Y=$$PRIINQ^%ZOSV()
"RTN","ZOSFGUX",86,0)
 ;;PRIORITY
"RTN","ZOSFGUX",87,0)
 ;;Q  ;G PRIORITY^%ZOSV
"RTN","ZOSFGUX",88,0)
 ;;PROD
"RTN","ZOSFGUX",89,0)
 ;;VAH,ROU
"RTN","ZOSFGUX",90,0)
 ;;PROGMODE
"RTN","ZOSFGUX",91,0)
 ;;S Y=$$PROGMODE^%ZOSV()
"RTN","ZOSFGUX",92,0)
 ;;RD
"RTN","ZOSFGUX",93,0)
 ;;G ^%RD
"RTN","ZOSFGUX",94,0)
 ;;RESJOB
"RTN","ZOSFGUX",95,0)
 ;;Q:'$D(DUZ)  Q:'$D(^XUSEC("XUMGR",+DUZ))  N XQZ S XQZ="^FORCEX[MGR]" D DO^%XUCI ; <=====
"RTN","ZOSFGUX",96,0)
 ;;RM
"RTN","ZOSFGUX",97,0)
 ;;U $I:WIDTH=$S(X<256:X,1:0)
"RTN","ZOSFGUX",98,0)
 ;;RSEL
"RTN","ZOSFGUX",99,0)
 ;;K ^UTILITY($J) D ^%RSEL S X="" X "F  S X=$O(%ZR(X)) Q:X=""""  S ^UTILITY($J,X)=""""" K %ZR
"RTN","ZOSFGUX",100,0)
 ;;RSUM
"RTN","ZOSFGUX",101,0)
 ;;S Y=0 F %=1,3:1 S %1=$T(+%^@X),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*%2+Y
"RTN","ZOSFGUX",102,0)
 ;;RSUM1
"RTN","ZOSFGUX",103,0)
 ;;N %,%1,%2,%3 S Y=0 F %=1,3:1 S %1=$T(+%^@X),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*(%2+%)+Y
"RTN","ZOSFGUX",104,0)
 ;;SS
"RTN","ZOSFGUX",105,0)
 ;;D ^ZSY
"RTN","ZOSFGUX",106,0)
 ;;SAVE
"RTN","ZOSFGUX",107,0)
 ;;D SAVE^%ZOSV2(X) ;N %I,%F S %I=$I,%F=$P($S($ZRO["(":$P($P($ZRO,"(",2),")"),1:$ZRO)," ")_"/"_X_".m" O %F:(NEWVERSION) U %F X "F  S XCN=$O(@(DIE_XCN_"")"")) Q:+XCN'=XCN  S %=@(DIE_XCN_"",0)"") Q:$E(%,1)=""$""  I $E(%)'="";"" W %,!" C %F U %I
"RTN","ZOSFGUX",108,0)
 ;;SIZE
"RTN","ZOSFGUX",109,0)
 ;;S Y=0 F I=1:1 S %=$T(+I) Q:%=""  S Y=Y+$L(%)+2 ; <=====
"RTN","ZOSFGUX",110,0)
 ;;TEST
"RTN","ZOSFGUX",111,0)
 ;;I X]"",$T(^@X)]""
"RTN","ZOSFGUX",112,0)
 ;;TMK
"RTN","ZOSFGUX",113,0)
 ;;S Y=$ZA\16384#2
"RTN","ZOSFGUX",114,0)
 ;;TMP
"RTN","ZOSFGUX",115,0)
 ;;/tmp/
"RTN","ZOSFGUX",116,0)
 ;;TRAP
"RTN","ZOSFGUX",117,0)
 ;;$ZT="G "_X
"RTN","ZOSFGUX",118,0)
 ;;TRMOFF
"RTN","ZOSFGUX",119,0)
 ;;U $I:(TERMINATOR="")
"RTN","ZOSFGUX",120,0)
 ;;TRMON
"RTN","ZOSFGUX",121,0)
 ;;U $I:(TERMINATOR=$C(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127))
"RTN","ZOSFGUX",122,0)
 ;;TRMRD
"RTN","ZOSFGUX",123,0)
 ;;S Y=$A($ZB)
"RTN","ZOSFGUX",124,0)
 ;;TYPE-AHEAD
"RTN","ZOSFGUX",125,0)
 ;;U $I:(TYPEAHEAD)
"RTN","ZOSFGUX",126,0)
 ;;UCI
"RTN","ZOSFGUX",127,0)
 ;;S Y=^%ZOSF("PROD")
"RTN","ZOSFGUX",128,0)
 ;;UCICHECK
"RTN","ZOSFGUX",129,0)
 ;;S Y=1
"RTN","ZOSFGUX",130,0)
 ;;UPPERCASE
"RTN","ZOSFGUX",131,0)
 ;;S Y=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ZOSFGUX",132,0)
 ;;XY
"RTN","ZOSFGUX",133,0)
 ;;S $X=DX,$Y=DY ; <=====
"RTN","ZOSFGUX",134,0)
 ;;VOL
"RTN","ZOSFGUX",135,0)
 ;;ROU
"RTN","ZOSFGUX",136,0)
 ;;ZD
"RTN","ZOSFGUX",137,0)
 ;;S Y=$$HTE^XLFDT(X,2) I $L($P(Y,"/"))=1 S Y=0_Y
"RTN","ZOSV2GTM")
0^12^B7008460^B4861009
"RTN","ZOSV2GTM",1,0)
%ZOSV2 ;ISF/RWF - More GT.M support routines ;10/18/06  14:29
"RTN","ZOSV2GTM",2,0)
 ;;8.0;KERNEL;**275,425**;Jul 10, 1995;Build 18
"RTN","ZOSV2GTM",3,0)
 Q
"RTN","ZOSV2GTM",4,0)
 ;SAVE: DIE open array reference.
"RTN","ZOSV2GTM",5,0)
 ;      XCN is the starting value to $O from.
"RTN","ZOSV2GTM",6,0)
SAVE(RN) ;Save a routine
"RTN","ZOSV2GTM",7,0)
 N %,%F,%I,%N,SP,$ETRAP
"RTN","ZOSV2GTM",8,0)
 S $ETRAP="S $ECODE="""" Q"
"RTN","ZOSV2GTM",9,0)
 S %I=$I,SP=" ",%F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","ZOSV2GTM",10,0)
 O %F:(newversion:noreadonly:blocksize=2048:recordsize=2044) U %F
"RTN","ZOSV2GTM",11,0)
 F  S XCN=$O(@(DIE_XCN_")")) Q:XCN'>0  S %=@(DIE_XCN_",0)") Q:$E(%,1)="$"  I $E(%)'=";" W $P(%,SP)_$C(9)_$P(%,SP,2,99999),!
"RTN","ZOSV2GTM",12,0)
 C %F ;S %N=$$NULL
"RTN","ZOSV2GTM",13,0)
 ZLINK RN
"RTN","ZOSV2GTM",14,0)
 ;C %N
"RTN","ZOSV2GTM",15,0)
 U %I
"RTN","ZOSV2GTM",16,0)
 Q
"RTN","ZOSV2GTM",17,0)
NULL() ;Open and use null to hide talking.  Return open name
"RTN","ZOSV2GTM",18,0)
 ;Doesn't work for compile errors
"RTN","ZOSV2GTM",19,0)
 N %N S %N=$S($ZV["VMS":"NLA0:",1:"/dev/nul")
"RTN","ZOSV2GTM",20,0)
 O %N U %N
"RTN","ZOSV2GTM",21,0)
 Q %N
"RTN","ZOSV2GTM",22,0)
 ;
"RTN","ZOSV2GTM",23,0)
DEL(RN) ;Delete a routine file, both source and object.
"RTN","ZOSV2GTM",24,0)
 N %N,%DIR,%I,$ETRAP
"RTN","ZOSV2GTM",25,0)
 S $ETRAP="S $ECODE="""" Q"
"RTN","ZOSV2GTM",26,0)
 S %I=$I,%DIR=$$RTNDIR^%ZOSV,RN=$TR(RN,"%","_")
"RTN","ZOSV2GTM",27,0)
 I $L($ZSEARCH(%DIR_RN_".m",244)) ZSYSTEM "DEL "_%DIR_X_".m;*"
"RTN","ZOSV2GTM",28,0)
 I $L($ZSEARCH(%DIR_RN_".obj",244)) ZSYSTEM "DEL "_%DIR_X_".obj;*"
"RTN","ZOSV2GTM",29,0)
 I $L($ZSEARCH(%DIR_RN_".o",244)) ZSYSTEM "rm -f "_%DIR_X_".o"
"RTN","ZOSV2GTM",30,0)
 Q
"RTN","ZOSV2GTM",31,0)
 ;LOAD: DIF open array to receive the routine lines.
"RTN","ZOSV2GTM",32,0)
 ;      XCNP The starting index -1.
"RTN","ZOSV2GTM",33,0)
LOAD(RN) ;Load a routine
"RTN","ZOSV2GTM",34,0)
 N %
"RTN","ZOSV2GTM",35,0)
 S %N=0 F XCNP=XCNP+1:1 S %N=%N+1,%=$T(+%N^@RN) Q:$L(%)=0  S @(DIF_XCNP_",0)")=%
"RTN","ZOSV2GTM",36,0)
 Q
"RTN","ZOSV2GTM",37,0)
 ;
"RTN","ZOSV2GTM",38,0)
LOAD2(RN) ;Load a routine
"RTN","ZOSV2GTM",39,0)
 N %,%1,%F,%N,$ETRAP
"RTN","ZOSV2GTM",40,0)
 S %I=$I,%F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","ZOSV2GTM",41,0)
 O %F:(readonly):1 Q:'$T  U %F
"RTN","ZOSV2GTM",42,0)
 F XCNP=XCNP+1:1 R %1:1 Q:'$T!$ZEOF  S @(DIF_XCNP_",0)")=$TR(%1,$C(9)," ")
"RTN","ZOSV2GTM",43,0)
 C %F I $L(%I) U %I
"RTN","ZOSV2GTM",44,0)
 Q
"RTN","ZOSV2GTM",45,0)
 ;
"RTN","ZOSV2GTM",46,0)
RSUM(RN) ;Calculate a RSUM value
"RTN","ZOSV2GTM",47,0)
 N %,DIF,XCNP,%N,Y,$ETRAP K ^TMP("RSUM",$J)
"RTN","ZOSV2GTM",48,0)
 S $ETRAP="S $ECODE="""" Q"
"RTN","ZOSV2GTM",49,0)
 S Y=0,DIF="^TMP(""RSUM"",$J,",XCNP=0 D LOAD2(RN)
"RTN","ZOSV2GTM",50,0)
 F %=1,3:1 S %1=$G(^TMP("RSUM",$J,%,0)),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*%2+Y
"RTN","ZOSV2GTM",51,0)
 K ^TMP("RSUM",$J)
"RTN","ZOSV2GTM",52,0)
 Q Y
"RTN","ZOSV2GTM",53,0)
 ;
"RTN","ZOSV2GTM",54,0)
RSUM2(RN) ;Calculate a RSUM2 value
"RTN","ZOSV2GTM",55,0)
 N %,DIF,XCNP,%N,Y,$ETRAP K ^TMP("RSUM",$J)
"RTN","ZOSV2GTM",56,0)
 S $ETRAP="S $ECODE="""" Q"
"RTN","ZOSV2GTM",57,0)
 S Y=0,DIF="^TMP(""RSUM"",$J,",XCNP=0 D LOAD2(RN)
"RTN","ZOSV2GTM",58,0)
 F %=1,3:1 S %1=$G(^TMP("RSUM",$J,%,0)),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*(%2+%)+Y
"RTN","ZOSV2GTM",59,0)
 K ^TMP("RSUM",$J)
"RTN","ZOSV2GTM",60,0)
 Q Y
"RTN","ZOSV2GTM",61,0)
 ;
"RTN","ZOSV2GTM",62,0)
TEST(RN) ;Special GT.M Test to see if routine is here.
"RTN","ZOSV2GTM",63,0)
 N %F,%X
"RTN","ZOSV2GTM",64,0)
 S %F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","ZOSV2GTM",65,0)
 S %X=$ZSEARCH("X.X",245),%X=$ZSEARCH(%F,245)
"RTN","ZOSV2GTM",66,0)
 Q %X
"RTN","ZOSVGTM")
0^3^B14594340^B17497229
"RTN","ZOSVGTM",1,0)
%ZOSV ;ISF/STAFF - View commands & special functions (GT.M). ;4/12/07  16:47
"RTN","ZOSVGTM",2,0)
 ;;8.0;KERNEL;**275,425**;Jul 10, 1995;Build 18
"RTN","ZOSVGTM",3,0)
 ; for GT.M for VMS, version 4.3
"RTN","ZOSVGTM",4,0)
 ;
"RTN","ZOSVGTM",5,0)
ACTJ() ; # active jobs
"RTN","ZOSVGTM",6,0)
 ;Keep active count in global
"RTN","ZOSVGTM",7,0)
 Q $G(^XUTL("XUSYS","CNT"))
"RTN","ZOSVGTM",8,0)
 ;Long way that would work
"RTN","ZOSVGTM",9,0)
 ;N %IMAGE S %IMAGE=$ZGETJPI($J,"IMAGNAME")
"RTN","ZOSVGTM",10,0)
 ;N Y S Y=0
"RTN","ZOSVGTM",11,0)
 ;N %PID S %PID=0
"RTN","ZOSVGTM",12,0)
 ;F  S %PID=$ZPID(%PID) Q:'%PID  I $ZGETJPI(%PID,"IMAGNAME")=%IMAGE S Y=Y+1
"RTN","ZOSVGTM",13,0)
 ;Q Y
"RTN","ZOSVGTM",14,0)
 ;
"RTN","ZOSVGTM",15,0)
AVJ() ; # available jobs, Limit is in the OS.
"RTN","ZOSVGTM",16,0)
 N V,J
"RTN","ZOSVGTM",17,0)
 S V=^%ZOSF("VOL"),J=$O(^XTV(8989.3,1,4,"B",V,0)),J=$P($G(^XTV(8989.3,1,4,J,0),"^^1000"),"^",3)
"RTN","ZOSVGTM",18,0)
 Q J-$$ACTJ ;Use signon Max
"RTN","ZOSVGTM",19,0)
 ;
"RTN","ZOSVGTM",20,0)
PASSALL ;
"RTN","ZOSVGTM",21,0)
 U $I:(PASTHRU) Q
"RTN","ZOSVGTM",22,0)
NOPASS ;
"RTN","ZOSVGTM",23,0)
 U $I:(NOPASTHRU) Q
"RTN","ZOSVGTM",24,0)
 ;
"RTN","ZOSVGTM",25,0)
GETPEER() ;Get the IP address of a connection peer
"RTN","ZOSVGTM",26,0)
 N PEER
"RTN","ZOSVGTM",27,0)
 S PEER=$ZTRNLNM("VISTA$IP")
"RTN","ZOSVGTM",28,0)
 Q $S($L(PEER):PEER,$L($G(IO("GTM-IP"))):IO("GTM-IP"),1:"")
"RTN","ZOSVGTM",29,0)
 ;
"RTN","ZOSVGTM",30,0)
PRGMODE ;
"RTN","ZOSVGTM",31,0)
 N X,XUCI,XUSLNT
"RTN","ZOSVGTM",32,0)
 W ! S ZTPAC=$P($G(^VA(200,+DUZ,.1)),"^",5),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVGTM",33,0)
 S X="" X ^%ZOSF("EOFF") R:ZTPAC]"" !,"PAC: ",X:60 D LC^XUS X ^%ZOSF("EON") I X'=ZTPAC W "??",$C(7) Q
"RTN","ZOSVGTM",34,0)
 N XMB,XMTEXT,XMY S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVGTM",35,0)
 D UCI S XUCI=Y D PRGM^ZUA
"RTN","ZOSVGTM",36,0)
 F  BREAK
"RTN","ZOSVGTM",37,0)
 HALT
"RTN","ZOSVGTM",38,0)
 ;
"RTN","ZOSVGTM",39,0)
PROGMODE() ; In Application mode
"RTN","ZOSVGTM",40,0)
 Q 0 ; This was used to control UCI switching, has no meaning in GT.M
"RTN","ZOSVGTM",41,0)
 ;
"RTN","ZOSVGTM",42,0)
UCI ;
"RTN","ZOSVGTM",43,0)
 S Y="VAH,"_^%ZOSF("VOL") Q
"RTN","ZOSVGTM",44,0)
 ;
"RTN","ZOSVGTM",45,0)
UCICHECK(X) ;
"RTN","ZOSVGTM",46,0)
 Q 1
"RTN","ZOSVGTM",47,0)
 ;
"RTN","ZOSVGTM",48,0)
TEMP() ; Return path to temp directory
"RTN","ZOSVGTM",49,0)
 ;N %TEMP S %TEMP=$P($$RTNDIR," "),%TEMP=$P(%TEMP,"/",1,$L(%TEMP,"/")-2)_"/t/"
"RTN","ZOSVGTM",50,0)
 Q $G(^%ZOSF("TMP"),$G(^XTV(8989.3,1,"DEV"),"USER$:[TEMP]"))
"RTN","ZOSVGTM",51,0)
 ;
"RTN","ZOSVGTM",52,0)
JOBPAR ;is job X valid on system, return UCI in Y.
"RTN","ZOSVGTM",53,0)
 N $ES,$ET,J S $ET="Q:$ES>0  S Y="""" G JOBPX^%ZOSV"
"RTN","ZOSVGTM",54,0)
 S Y=""
"RTN","ZOSVGTM",55,0)
 S J=$ZGETJPI(X,"PRI")
"RTN","ZOSVGTM",56,0)
 I $L(J) S Y=$P(^%ZOSF("PROD"),",")
"RTN","ZOSVGTM",57,0)
JOBPX S $EC=""
"RTN","ZOSVGTM",58,0)
 Q
"RTN","ZOSVGTM",59,0)
 ;
"RTN","ZOSVGTM",60,0)
SHARELIC(TYPE) ;Used by Cache implementations
"RTN","ZOSVGTM",61,0)
 Q
"RTN","ZOSVGTM",62,0)
 ;
"RTN","ZOSVGTM",63,0)
PRIORITY ;The VA has this disabled in general.
"RTN","ZOSVGTM",64,0)
 Q
"RTN","ZOSVGTM",65,0)
 ;
"RTN","ZOSVGTM",66,0)
PRIINQ() ;
"RTN","ZOSVGTM",67,0)
 N PRI S PRI=$ZGETJPI($J,"PRI")
"RTN","ZOSVGTM",68,0)
 Q $S(PRI=0:1,PRI=1:3,PRI=2:5,PRI=3:7,PRI=4:9,1:10)
"RTN","ZOSVGTM",69,0)
 ;
"RTN","ZOSVGTM",70,0)
BAUD S X="UNKNOWN" Q
"RTN","ZOSVGTM",71,0)
 ;
"RTN","ZOSVGTM",72,0)
LGR() Q $R ; Last global reference ($REFERENCE)
"RTN","ZOSVGTM",73,0)
 ;
"RTN","ZOSVGTM",74,0)
EC() ; Error Code: returning $ZS in format more like $ZE from DSM
"RTN","ZOSVGTM",75,0)
 N %ZE
"RTN","ZOSVGTM",76,0)
 I $ZS="" Q ""
"RTN","ZOSVGTM",77,0)
 S %ZE=$P($ZS,",",2)_","_$P($ZS,",",4)_","_$P($ZS,",")_",-"_$P($ZS,",",3)
"RTN","ZOSVGTM",78,0)
 Q %ZE
"RTN","ZOSVGTM",79,0)
 ;
"RTN","ZOSVGTM",80,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVGTM",81,0)
 ;S Y="%" F  S Y=$O(@Y) Q:Y=""  D
"RTN","ZOSVGTM",82,0)
 ;. I $D(@Y)#2 S @(X_"Y)="_Y)
"RTN","ZOSVGTM",83,0)
 ;. I $D(@Y)>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVGTM",84,0)
 S Y="%" F  M:$D(@Y) @(X_"Y)="_Y) S Y=$O(@Y) Q:Y=""
"RTN","ZOSVGTM",85,0)
 Q
"RTN","ZOSVGTM",86,0)
 ;
"RTN","ZOSVGTM",87,0)
ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVGTM",88,0)
 N %
"RTN","ZOSVGTM",89,0)
 S (Y,%)=$P(Y,"*",1) ;I $D(@Y)=0 F  S Y=$O(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVGTM",90,0)
 Q:Y=""
"RTN","ZOSVGTM",91,0)
 ;S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVGTM",92,0)
 ;F  S Y=$O(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVGTM",93,0)
 F  M:$D(@Y) @(X_"Y)="_Y) S Y=$O(@Y) Q:Y=""!(Y'[%)
"RTN","ZOSVGTM",94,0)
 Q
"RTN","ZOSVGTM",95,0)
 ;
"RTN","ZOSVGTM",96,0)
PARSIZ ;
"RTN","ZOSVGTM",97,0)
 S X=3 Q
"RTN","ZOSVGTM",98,0)
 ;
"RTN","ZOSVGTM",99,0)
NOLOG ;
"RTN","ZOSVGTM",100,0)
 S Y=0 Q
"RTN","ZOSVGTM",101,0)
 ;
"RTN","ZOSVGTM",102,0)
GETENV ;Get environment Return Y='UCI^VOL^NODE^BOX LOOKUP'
"RTN","ZOSVGTM",103,0)
 N %V,%HOST S %HOST=$ZGETSYI("NODENAME"),%V=^%ZOSF("PROD")
"RTN","ZOSVGTM",104,0)
 S Y=$TR(%V,",","^")_"^"_%HOST_"^"_$P(%V,",",2)_":"_%HOST
"RTN","ZOSVGTM",105,0)
 Q
"RTN","ZOSVGTM",106,0)
 ;
"RTN","ZOSVGTM",107,0)
VERSION(X) ;return OS version, X=1 - return OS
"RTN","ZOSVGTM",108,0)
 Q $S($G(X):$P($ZV," V"),1:+$P($ZV," V",2))
"RTN","ZOSVGTM",109,0)
 ;
"RTN","ZOSVGTM",110,0)
OS() ;
"RTN","ZOSVGTM",111,0)
 Q "VMS"
"RTN","ZOSVGTM",112,0)
 ;
"RTN","ZOSVGTM",113,0)
RTNDIR() ;primary routine source directory
"RTN","ZOSVGTM",114,0)
 ;Assume dat1$:[gtm.o]/src=(dat1$:[gtm.r]),gtm$dist
"RTN","ZOSVGTM",115,0)
 N % S %=$P($ZRO,",")
"RTN","ZOSVGTM",116,0)
 I %["/SRC" S %=$P($P($P(%,"(",2),")",1),",")
"RTN","ZOSVGTM",117,0)
 Q %
"RTN","ZOSVGTM",118,0)
 ;
"RTN","ZOSVGTM",119,0)
SETNM(X) ;Set name, Trap dup's, Fall into SETENV
"RTN","ZOSVGTM",120,0)
 N $ETRAP S $ETRAP="S $ECODE="""" Q"
"RTN","ZOSVGTM",121,0)
 ;
"RTN","ZOSVGTM",122,0)
SETENV ;Set environment X='PROCESS NAME^ '
"RTN","ZOSVGTM",123,0)
 ;workaround for GT.M
"RTN","ZOSVGTM",124,0)
 S ^XUTL("XUSYS",$J,0)=$H,^("NM")=X,^("PID")=$$FUNC^%DH($J)
"RTN","ZOSVGTM",125,0)
 Q
"RTN","ZOSVGTM",126,0)
 ;
"RTN","ZOSVGTM",127,0)
SID() ;System ID
"RTN","ZOSVGTM",128,0)
 N J1,T S T="~"
"RTN","ZOSVGTM",129,0)
 S J1(1)=$ZROUTINES
"RTN","ZOSVGTM",130,0)
 S J1(2)=$ZGBLDIR
"RTN","ZOSVGTM",131,0)
 Q "1~"_J1(1)_T_J1(2)
"RTN","ZOSVGTM",132,0)
 ;
"RTN","ZOSVGTM",133,0)
PRI() ;Check if a mixed OS enviroment.
"RTN","ZOSVGTM",134,0)
 ;Default return 1 unless we are on the secondary OS.
"RTN","ZOSVGTM",135,0)
 ;Only Cache on a VMS/Linux mix is supported now.
"RTN","ZOSVGTM",136,0)
 Q 1
"RTN","ZOSVGTM",137,0)
 ;
"RTN","ZOSVGTM",138,0)
T0 ; start RT clock
"RTN","ZOSVGTM",139,0)
 Q
"RTN","ZOSVGTM",140,0)
 ;
"RTN","ZOSVGTM",141,0)
T1 ; store RT datum, Obsolete
"RTN","ZOSVGTM",142,0)
 Q
"RTN","ZOSVGTM",143,0)
 ;
"RTN","ZOSVGTM",144,0)
 ;Code moved to %ZOSVKR, Comment out if needed.
"RTN","ZOSVGTM",145,0)
LOGRSRC(OPT,TYPE,STATUS) ;record resource usage in ^XTMP("KMPR"
"RTN","ZOSVGTM",146,0)
 Q:'$G(^%ZTSCH("LOGRSRC"))  ; quit if RUM not turned on.
"RTN","ZOSVGTM",147,0)
 ; call to RUM routine.
"RTN","ZOSVGTM",148,0)
 D RU^%ZOSVKR($G(OPT),$G(TYPE),$G(STATUS))
"RTN","ZOSVGTM",149,0)
 Q
"RTN","ZOSVGTM",150,0)
 ;
"RTN","ZOSVGTM",151,0)
SETTRM(X) ;Turn on specified terminators.
"RTN","ZOSVGTM",152,0)
 U $I:TERM=X
"RTN","ZOSVGTM",153,0)
 Q 1
"RTN","ZOSVGTM",154,0)
 ;
"RTN","ZOSVGTM",155,0)
DEVOK ;
"RTN","ZOSVGTM",156,0)
 ;INPUT:  X=Device $I, X1=IOT -- X1 needed for resources
"RTN","ZOSVGTM",157,0)
 ;OUTPUT: Y=0 if available, Y=job # if owned
"RTN","ZOSVGTM",158,0)
 ; Y=-1 if device does not exists.
"RTN","ZOSVGTM",159,0)
 ; return Y=0 if not owned, Y=$J of owning job, Y=999 if dev cycling
"RTN","ZOSVGTM",160,0)
 ;
"RTN","ZOSVGTM",161,0)
 S Y=0,X1=$G(X1) Q:(X1="HFS")!(X1="MT")!(X1="CHAN")
"RTN","ZOSVGTM",162,0)
 I X1="RES" G RESOK^%ZIS6
"RTN","ZOSVGTM",163,0)
 S Y=0
"RTN","ZOSVGTM",164,0)
 Q  ;Let ZIS deal with it.
"RTN","ZOSVGTM",165,0)
 ;
"RTN","ZOSVGTM",166,0)
 Q
"RTN","ZOSVGTM",167,0)
LPC(X) ;ZCRC(X)
"RTN","ZOSVGTM",168,0)
 N R,I
"RTN","ZOSVGTM",169,0)
 S R=$ZBITSTR(8,0)
"RTN","ZOSVGTM",170,0)
 F I=1:1:$L(X) S R=$ZBITXOR(R,$C(0)_$E(X,I))
"RTN","ZOSVGTM",171,0)
 Q $A(R,2)
"RTN","ZOSVGUX")
0^4^B36401450^B42854824
"RTN","ZOSVGUX",1,0)
%ZOSV ;SFISC/AC,PUG/TOAD,HOU/DHW - View commands & special functions. ;4/12/07  16:48
"RTN","ZOSVGUX",2,0)
 ;;8.0;KERNEL;**275,425**;Jul 10, 1995;Build 18
"RTN","ZOSVGUX",3,0)
 ;
"RTN","ZOSVGUX",4,0)
ACTJ() ; # active jobs
"RTN","ZOSVGUX",5,0)
 I $G(^XUTL("XUSYS","CNT")) Q $G(^XUTL("XUSYS","CNT"))
"RTN","ZOSVGUX",6,0)
 ;This would also work
"RTN","ZOSVGUX",7,0)
 N %I,%FILE,Y
"RTN","ZOSVGUX",8,0)
 S %FILE=$$TEMP_"zosv_actj_"_$J_".tmp"
"RTN","ZOSVGUX",9,0)
 ZSYSTEM "ps cef -C mumps|wc>"_%FILE
"RTN","ZOSVGUX",10,0)
 S %I=$I
"RTN","ZOSVGUX",11,0)
 O %FILE
"RTN","ZOSVGUX",12,0)
 U %FILE R Y:99 U %I
"RTN","ZOSVGUX",13,0)
 C %FILE:DELETE
"RTN","ZOSVGUX",14,0)
 F  Q:$E(Y)'=" "  S $E(Y)=""
"RTN","ZOSVGUX",15,0)
 S Y=Y-1,^XUTL("XUSYS","CNT")=Y
"RTN","ZOSVGUX",16,0)
 Q Y
"RTN","ZOSVGUX",17,0)
 ;
"RTN","ZOSVGUX",18,0)
AVJ() ; # available jobs, Limit is in the OS.
"RTN","ZOSVGUX",19,0)
 N V,J
"RTN","ZOSVGUX",20,0)
 S V=^%ZOSF("VOL"),J=$O(^XTV(8989.3,1,4,"B",V,0)),J=$P($G(^XTV(8989.3,1,4,J,0),"^^1000"),"^",3)
"RTN","ZOSVGUX",21,0)
 Q J-$$ACTJ ;Use signon Max
"RTN","ZOSVGUX",22,0)
 ;
"RTN","ZOSVGUX",23,0)
RTNDIR() ; primary routine source directory
"RTN","ZOSVGUX",24,0)
 ;Assume /home/xxx/o(/home/xxx/r /home/gtm)
"RTN","ZOSVGUX",25,0)
 Q $P($S($ZRO["(":$P($P($ZRO,"(",2),")"),1:$ZRO)," ")_"/"
"RTN","ZOSVGUX",26,0)
 ;
"RTN","ZOSVGUX",27,0)
TEMP() ; Return path to temp directory
"RTN","ZOSVGUX",28,0)
 ;N %TEMP S %TEMP=$P($$RTNDIR," "),%TEMP=$P(%TEMP,"/",1,$L(%TEMP,"/")-2)_"/t/"
"RTN","ZOSVGUX",29,0)
 Q $G(^%ZOSF("TMP"),$G(^XTV(8989.3,1,"DEV"),"/tmp/"))
"RTN","ZOSVGUX",30,0)
 ;
"RTN","ZOSVGUX",31,0)
PASSALL ;
"RTN","ZOSVGUX",32,0)
 U $I:(NOESCAPE:NOTERMINATOR:PASTHRU) Q
"RTN","ZOSVGUX",33,0)
NOPASS ;
"RTN","ZOSVGUX",34,0)
 U $I:(ESCAPE:TERMINATOR="":NOPASTHRU) Q
"RTN","ZOSVGUX",35,0)
 ;
"RTN","ZOSVGUX",36,0)
GETPEER() ;Get the IP address of a connection peer
"RTN","ZOSVGUX",37,0)
 N % S %=$P($ZTRNLNM("SSH_CLIENT")," ") S:%="" %=$ZTRNLNM("REMOTEHOST")
"RTN","ZOSVGUX",38,0)
 Q $S($L(%):%,$L($G(IO("GTM-IP"))):IO("GTM-IP"),1:"")
"RTN","ZOSVGUX",39,0)
 ;
"RTN","ZOSVGUX",40,0)
PRGMODE ;Drop into direct mode
"RTN","ZOSVGUX",41,0)
 N X,XUCI,XUSLNT
"RTN","ZOSVGUX",42,0)
 W ! S ZTPAC=$P($G(^VA(200,+DUZ,.1)),"^",5),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVGUX",43,0)
 S X="" X ^%ZOSF("EOFF") R:ZTPAC]"" !,"PAC: ",X:60 D LC^XUS X ^%ZOSF("EON") I X'=ZTPAC W "??",$C(7) Q
"RTN","ZOSVGUX",44,0)
 N XMB,XMTEXT,XMY S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVGUX",45,0)
 D UCI S XUCI=Y D PRGM^ZUA
"RTN","ZOSVGUX",46,0)
 F  BREAK
"RTN","ZOSVGUX",47,0)
 HALT
"RTN","ZOSVGUX",48,0)
 ;
"RTN","ZOSVGUX",49,0)
PROGMODE() ; In Application mode
"RTN","ZOSVGUX",50,0)
 Q 0 ; This was used to control UCI switching, has no meaning in GT.M
"RTN","ZOSVGUX",51,0)
 ;
"RTN","ZOSVGUX",52,0)
UCI ;
"RTN","ZOSVGUX",53,0)
 S Y=^%ZOSF("PROD") Q
"RTN","ZOSVGUX",54,0)
 ;
"RTN","ZOSVGUX",55,0)
UCICHECK(X) ;
"RTN","ZOSVGUX",56,0)
 Q X
"RTN","ZOSVGUX",57,0)
 ;
"RTN","ZOSVGUX",58,0)
JOBPAR ; <=====
"RTN","ZOSVGUX",59,0)
 N %FILE,%I S %FILE=$$PWD^%ZISH_"zosv_jobpar_"_$J_".tmp"
"RTN","ZOSVGUX",60,0)
 ZSYSTEM "ps c -p "_X_"|tail -1>"_%FILE
"RTN","ZOSVGUX",61,0)
 S %I=$I
"RTN","ZOSVGUX",62,0)
 O %FILE
"RTN","ZOSVGUX",63,0)
 U %FILE R Y:99 U %I
"RTN","ZOSVGUX",64,0)
 C %FILE:DELETE
"RTN","ZOSVGUX",65,0)
 F  Q:$E(Y)'=" "  S $E(Y)=""
"RTN","ZOSVGUX",66,0)
 I +Y=X,$E(Y,$L(Y)-4,$L(Y))="mumps" S Y=^%ZOSF("PROD")
"RTN","ZOSVGUX",67,0)
 E  S Y=""
"RTN","ZOSVGUX",68,0)
 Q
"RTN","ZOSVGUX",69,0)
 ;
"RTN","ZOSVGUX",70,0)
SHARELIC(TYPE) ;Used by Cache implementations
"RTN","ZOSVGUX",71,0)
 Q
"RTN","ZOSVGUX",72,0)
 ;
"RTN","ZOSVGUX",73,0)
PRIORITY ;
"RTN","ZOSVGUX",74,0)
 K Y ; VA has this disabled in general.
"RTN","ZOSVGUX",75,0)
 Q
"RTN","ZOSVGUX",76,0)
 ;
"RTN","ZOSVGUX",77,0)
PRIINQ() ;
"RTN","ZOSVGUX",78,0)
 Q 5 ; for now, we're always middle of the road
"RTN","ZOSVGUX",79,0)
 ;
"RTN","ZOSVGUX",80,0)
BAUD S X="UNKNOWN"
"RTN","ZOSVGUX",81,0)
 Q
"RTN","ZOSVGUX",82,0)
 ;
"RTN","ZOSVGUX",83,0)
LGR() ; Last global reference ($REFERENCE)
"RTN","ZOSVGUX",84,0)
 Q $R
"RTN","ZOSVGUX",85,0)
 ;
"RTN","ZOSVGUX",86,0)
EC() ; Error Code: returning $ZS in format more like $ZE from DSM
"RTN","ZOSVGUX",87,0)
 N %ZE
"RTN","ZOSVGUX",88,0)
 I $ZS="" S %ZE=""
"RTN","ZOSVGUX",89,0)
 S %ZE=$P($ZS,",",2)_","_$P($ZS,",",4)_","_$P($ZS,",")_",-"_$P($ZS,",",3)
"RTN","ZOSVGUX",90,0)
 Q %ZE
"RTN","ZOSVGUX",91,0)
 ;
"RTN","ZOSVGUX",92,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVGUX",93,0)
 ;S Y="%" F  S Y=$O(@Y) Q:Y=""  D
"RTN","ZOSVGUX",94,0)
 ;. I $D(@Y)#2 S @(X_"Y)="_Y)
"RTN","ZOSVGUX",95,0)
 ;. I $D(@Y)>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVGUX",96,0)
 S Y="%" F  M:$D(@Y) @(X_"Y)="_Y) S Y=$O(@Y) Q:Y=""
"RTN","ZOSVGUX",97,0)
 Q
"RTN","ZOSVGUX",98,0)
 ;
"RTN","ZOSVGUX",99,0)
ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVGUX",100,0)
 N %
"RTN","ZOSVGUX",101,0)
 S (Y,%)=$P(Y,"*",1) ;I $D(@Y)=0 F  S Y=$O(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVGUX",102,0)
 Q:Y=""
"RTN","ZOSVGUX",103,0)
 ;S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVGUX",104,0)
 ;F  S Y=$O(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVGUX",105,0)
 F  M:$D(@Y) @(X_"Y)="_Y) S Y=$O(@Y) Q:Y=""!(Y'[%)
"RTN","ZOSVGUX",106,0)
 Q
"RTN","ZOSVGUX",107,0)
 ;
"RTN","ZOSVGUX",108,0)
PARSIZ ;
"RTN","ZOSVGUX",109,0)
 S X=3 Q
"RTN","ZOSVGUX",110,0)
 ;
"RTN","ZOSVGUX",111,0)
NOLOG ;
"RTN","ZOSVGUX",112,0)
 S Y=0 Q
"RTN","ZOSVGUX",113,0)
 ;
"RTN","ZOSVGUX",114,0)
GETENV ;Get environment Return Y='UCI^VOL^NODE^BOX LOOKUP'
"RTN","ZOSVGUX",115,0)
 N %HOST,%V S %V=^%ZOSF("PROD"),%HOST=$$RETURN("hostname -s")
"RTN","ZOSVGUX",116,0)
 S Y=$TR(%V,",","^")_"^"_%HOST_"^"_$P(%V,",",2)_":"_%HOST
"RTN","ZOSVGUX",117,0)
 Q
"RTN","ZOSVGUX",118,0)
 ;
"RTN","ZOSVGUX",119,0)
VERSION(X) ;return OS version, X=1 - return OS
"RTN","ZOSVGUX",120,0)
 Q $S($G(X):$P($ZV," V"),1:+$P($ZV," V",2))
"RTN","ZOSVGUX",121,0)
 ;
"RTN","ZOSVGUX",122,0)
OS() ;
"RTN","ZOSVGUX",123,0)
 Q "UNIX"
"RTN","ZOSVGUX",124,0)
 ;
"RTN","ZOSVGUX",125,0)
SETNM(X) ;Set name, Trap dup's, Fall into SETENV
"RTN","ZOSVGUX",126,0)
 N $ETRAP S $ETRAP="S $ECODE="""" Q"
"RTN","ZOSVGUX",127,0)
SETENV ;Set environment X='PROCESS NAME^ '
"RTN","ZOSVGUX",128,0)
 S ^XUTL("XUSYS",$J,0)=$H,^("NM")=X ; workaround
"RTN","ZOSVGUX",129,0)
 Q
"RTN","ZOSVGUX",130,0)
 ;
"RTN","ZOSVGUX",131,0)
SID() ;System ID
"RTN","ZOSVGUX",132,0)
 N J1,T S T="~"
"RTN","ZOSVGUX",133,0)
 S J1(1)=$ZROUTINES,J1(1)=$P(J1(1)," ")
"RTN","ZOSVGUX",134,0)
 S J1(2)=$ZGBLDIR
"RTN","ZOSVGUX",135,0)
 Q "1~"_J1(1)_T_J1(2)
"RTN","ZOSVGUX",136,0)
 ;
"RTN","ZOSVGUX",137,0)
PRI() ;Check if a mixed OS enviroment.
"RTN","ZOSVGUX",138,0)
 ;Default return 1 unless we are on the secondary OS.
"RTN","ZOSVGUX",139,0)
 ;Only Cache on a VMS/Linux mix is supported now.
"RTN","ZOSVGUX",140,0)
 Q 1
"RTN","ZOSVGUX",141,0)
 ;
"RTN","ZOSVGUX",142,0)
T0 ; start RT clock
"RTN","ZOSVGUX",143,0)
 Q  ; we don't have $ZH on GT.M
"RTN","ZOSVGUX",144,0)
 ;
"RTN","ZOSVGUX",145,0)
T1 ; store RT datum w/ZHDIF
"RTN","ZOSVGUX",146,0)
 Q  ; we don't have $ZH on GT.M
"RTN","ZOSVGUX",147,0)
 ;
"RTN","ZOSVGUX",148,0)
ZHDIF ;Display dif of two $ZH's
"RTN","ZOSVGUX",149,0)
 W !," ET=",$J(($P(%ZH1,",")-$P(%ZH0,",")*86400)+($P(%ZH1,",",2)-$P(%ZH0,",",2)),6,2)
"RTN","ZOSVGUX",150,0)
 Q
"RTN","ZOSVGUX",151,0)
 ;
"RTN","ZOSVGUX",152,0)
 ;Code moved to %ZOSVKR, Comment out if needed.
"RTN","ZOSVGUX",153,0)
LOGRSRC(OPT,TYPE,STATUS) ;record resource usage in ^XTMP("KMPR"
"RTN","ZOSVGUX",154,0)
 Q:'$G(^%ZTSCH("LOGRSRC"))  ; quit if RUM not turned on.
"RTN","ZOSVGUX",155,0)
 ; call to RUM routine.
"RTN","ZOSVGUX",156,0)
 D RU^%ZOSVKR($G(OPT),$G(TYPE),$G(STATUS))
"RTN","ZOSVGUX",157,0)
 Q
"RTN","ZOSVGUX",158,0)
 ;
"RTN","ZOSVGUX",159,0)
SETTRM(X) ;Turn on specified terminators.
"RTN","ZOSVGUX",160,0)
 U $I:(TERMINATOR=X)
"RTN","ZOSVGUX",161,0)
 Q 1
"RTN","ZOSVGUX",162,0)
 ;
"RTN","ZOSVGUX",163,0)
DEVOK ;
"RTN","ZOSVGUX",164,0)
 ;use lsof (list open files)
"RTN","ZOSVGUX",165,0)
 ; given a device name in X
"RTN","ZOSVGUX",166,0)
 ;INPUT:  X=Device $I, X1=IOT -- X1 needed for resources
"RTN","ZOSVGUX",167,0)
 ;OUTPUT: Y=0 if available, Y=job # if owned
"RTN","ZOSVGUX",168,0)
 ; Y=-1 if device does not exists.
"RTN","ZOSVGUX",169,0)
 ; return Y=0 if not owned, Y=$J of owning job, Y=999 if dev cycling
"RTN","ZOSVGUX",170,0)
 ;
"RTN","ZOSVGUX",171,0)
 I $G(X1)="RES" G RESOK^%ZIS6
"RTN","ZOSVGUX",172,0)
 S Y=0
"RTN","ZOSVGUX",173,0)
 Q  ;Let ZIS deal with it.
"RTN","ZOSVGUX",174,0)
 ;
"RTN","ZOSVGUX",175,0)
 N %FILE S %FILE=$$TEMP_"zosv_devok_"_$J_".tmp"
"RTN","ZOSVGUX",176,0)
 ZSYSTEM "/usr/sbin/lsof -F Pc "_X_" >"_%FILE
"RTN","ZOSVGUX",177,0)
 N %I,%X,%Y S %I=$I
"RTN","ZOSVGUX",178,0)
 O %FILE U %FILE
"RTN","ZOSVGUX",179,0)
 F %Y=0:1 R %X:99 Q:%X=""  Q:%X["lsof: status error"  D
"RTN","ZOSVGUX",180,0)
 . S %Y(%Y\2,$S($E(%X)="p":"PID",$E(%X)="c":"CMD",1:"?"))=$E(%X,2,$L(%X))
"RTN","ZOSVGUX",181,0)
 U %I
"RTN","ZOSVGUX",182,0)
 C %FILE:(DELETE)
"RTN","ZOSVGUX",183,0)
 I %X["lsof: status error" S Y=-1 Q
"RTN","ZOSVGUX",184,0)
 S %X="",Y=0
"RTN","ZOSVGUX",185,0)
 F  S %X=$O(%Y(%X)) Q:%X=""  I %Y(%X,"CMD")="mumps" S Y=%Y(%X,"PID") Q
"RTN","ZOSVGUX",186,0)
 Q
"RTN","ZOSVGUX",187,0)
 ;
"RTN","ZOSVGUX",188,0)
DEVOPN ;List of Devices opened.  Linux only
"RTN","ZOSVGUX",189,0)
 ;Returns variable Y. Y=Devices owned separated by a comma
"RTN","ZOSVGUX",190,0)
 ; ZSHOW "D":Y
"RTN","ZOSVGUX",191,0)
 N %FILE S %FILE=$$TEMP_"zosv_devopn_"_$J_".tmp"
"RTN","ZOSVGUX",192,0)
 ZSYSTEM "lsof -F n -p "_$J_" >"_%FILE
"RTN","ZOSVGUX",193,0)
 N %I,%X,%Y S %I=$I
"RTN","ZOSVGUX",194,0)
 O %FILE
"RTN","ZOSVGUX",195,0)
 U %FILE
"RTN","ZOSVGUX",196,0)
 F %Y=0:1 R %X:99 Q:%X=""  S %Y($S($E(%X)="p":"PID",$E(%X)="n":%Y,1:"?"))=$E(%X,2,$L(%X))
"RTN","ZOSVGUX",197,0)
 U %I
"RTN","ZOSVGUX",198,0)
 C %FILE:(DELETE)
"RTN","ZOSVGUX",199,0)
 I %Y("PID")'=$J S Y="" Q
"RTN","ZOSVGUX",200,0)
 I $D(%Y("?")) S Y="" Q
"RTN","ZOSVGUX",201,0)
 K %Y("PID"),%Y("?")
"RTN","ZOSVGUX",202,0)
 S (Y,%X)="" F  S %X=$O(%Y(%X)) Q:%X=""  S Y=Y_","_%Y(%X)
"RTN","ZOSVGUX",203,0)
 Q
"RTN","ZOSVGUX",204,0)
 ;
"RTN","ZOSVGUX",205,0)
RETURN(%COMMAND) ; ** Private Entry Point: execute a shell command & return the resulting value **
"RTN","ZOSVGUX",206,0)
 ; %COMMAND is the string value of the Linux command
"RTN","ZOSVGUX",207,0)
 N %VALUE S %VALUE="" ; value to return
"RTN","ZOSVGUX",208,0)
 N %FILE S %FILE=$$TEMP_"RET"_$J_".txt" ; temporary results file
"RTN","ZOSVGUX",209,0)
 ZSYSTEM %COMMAND_" > "_%FILE ; execute command & save result
"RTN","ZOSVGUX",210,0)
 O %FILE:(REWIND) U %FILE R:'$ZEOF %VALUE:99 C %FILE:(DELETE) ; fetch value & delete file
"RTN","ZOSVGUX",211,0)
 ;
"RTN","ZOSVGUX",212,0)
 QUIT %VALUE ; return value
"RTN","ZOSVGUX",213,0)
 ;
"RTN","ZOSVGUX",214,0)
 ;
"RTN","ZOSVGUX",215,0)
STRIPCR(%DIRECT) ; ** Private Entry Point: strip extraneous CR from end of lines of all
"RTN","ZOSVGUX",216,0)
 ; routines in %DIRECTORY Linux directory
"RTN","ZOSVGUX",217,0)
 ;
"RTN","ZOSVGUX",218,0)
 ZSYSTEM "perl -pi -e 's/\r\n$/\n/' "_%DIRECT_"[A-K]*.m"
"RTN","ZOSVGUX",219,0)
 ZSYSTEM "perl -pi -e 's/\r\n$/\n/' "_%DIRECT_"[L-S]*.m"
"RTN","ZOSVGUX",220,0)
 ZSYSTEM "perl -pi -e 's/\r\n$/\n/' "_%DIRECT_"[T-z]*.m"
"RTN","ZOSVGUX",221,0)
 ZSYSTEM "perl -pi -e 's/\r\n$/\n/' "_%DIRECT_"[_]*.m"
"RTN","ZOSVGUX",222,0)
 Q
"RTN","ZOSVGUX",223,0)
 ;
"RTN","ZOSVONT")
0^1^B21543448^B22821420
"RTN","ZOSVONT",1,0)
%ZOSV ;SFISC/AC - $View commands for Open M for NT.  ;4/26/07  09:39
"RTN","ZOSVONT",2,0)
 ;;8.0;KERNEL;**34,94,107,118,136,215,293,284,385,425**;Jul 10, 1995;Build 18
"RTN","ZOSVONT",3,0)
ACTJ() ;# Active jobs
"RTN","ZOSVONT",4,0)
 N %,V,Y S V=$$VERSION()
"RTN","ZOSVONT",5,0)
 I V<5 D  Q Y
"RTN","ZOSVONT",6,0)
 . S %=0 F Y=0:1 S %=$ZJOB(%) Q:%=""
"RTN","ZOSVONT",7,0)
 S Y=$system.License.LUConsumed() ;Cache 5 up
"RTN","ZOSVONT",8,0)
 Q Y
"RTN","ZOSVONT",9,0)
AVJ() ;# available jobs
"RTN","ZOSVONT",10,0)
 N %,AVJ,V,ZOSV,$ET
"RTN","ZOSVONT",11,0)
 S V=+$$VERSION()
"RTN","ZOSVONT",12,0)
 ;Cache 3 and 4
"RTN","ZOSVONT",13,0)
 ;maxpid: from %SS
"RTN","ZOSVONT",14,0)
 I V<5 D  Q AVJ
"RTN","ZOSVONT",15,0)
 . N port,t,x,maxpid,lmflim
"RTN","ZOSVONT",16,0)
 . S $ET="",maxpid=$V($ZU(40,2,118),-2,4)
"RTN","ZOSVONT",17,0)
 . X "S ZOSV=$ZU(5),%=$ZU(5,""%SYS"") S lmflim=$$inquire^LMFCLI,%=$ZU(5,ZOSV)" ;Get the license info
"RTN","ZOSVONT",18,0)
 . ;Add together the enterprise and division licenses avaliable
"RTN","ZOSVONT",19,0)
 . S x=$P(lmflim,";",2)+$P($P(lmflim,"|",2),";",2)
"RTN","ZOSVONT",20,0)
 . S t=+lmflim+$P(lmflim,"|",2) ;Check the license total
"RTN","ZOSVONT",21,0)
 . S AVJ=$S(t<maxpid:x,1:maxpid-$$ACTJ) ;Return the smaller of license or pid
"RTN","ZOSVONT",22,0)
 ;To get available jobs from Cache 5.0 up
"RTN","ZOSVONT",23,0)
 I V'<5 D  Q AVJ
"RTN","ZOSVONT",24,0)
 . X "S AVJ=$system.License.LUAvailable()"
"RTN","ZOSVONT",25,0)
 ;Return fixed value not known version
"RTN","ZOSVONT",26,0)
 Q 15
"RTN","ZOSVONT",27,0)
 ;
"RTN","ZOSVONT",28,0)
PRIINQ() ;
"RTN","ZOSVONT",29,0)
 Q 8
"RTN","ZOSVONT",30,0)
 ;
"RTN","ZOSVONT",31,0)
UCI ;Current UCI,VOL
"RTN","ZOSVONT",32,0)
 S Y=$ZU(5)_","_^%ZOSF("VOL") Q
"RTN","ZOSVONT",33,0)
 ;
"RTN","ZOSVONT",34,0)
UCICHECK(X) ;Check if valid namespace (UCI)
"RTN","ZOSVONT",35,0)
 N Y,%
"RTN","ZOSVONT",36,0)
 S %=$P(X,",",1),Y=0 I $ZU(90,10,%) S Y=%
"RTN","ZOSVONT",37,0)
 Q Y
"RTN","ZOSVONT",38,0)
 ;
"RTN","ZOSVONT",39,0)
GETPEER() ;Get the PEER tcp/ip address
"RTN","ZOSVONT",40,0)
 N PEER,NL,$ET S NL="",$ET="S $EC=NL Q NL",PEER=""
"RTN","ZOSVONT",41,0)
 I $$OS="VMS" S PEER=$ZF("TRNLNM","VISTA$IP")
"RTN","ZOSVONT",42,0)
 I '$L(PEER) S PEER=$ZU(111,0) S:$L(PEER) PEER=$A(PEER,1)_"."_$A(PEER,2)_"."_$A(PEER,3)_"."_$A(PEER,4)
"RTN","ZOSVONT",43,0)
 Q PEER
"RTN","ZOSVONT",44,0)
 ;
"RTN","ZOSVONT",45,0)
SHARELIC(TYPE) ;See if can share a C/S license
"RTN","ZOSVONT",46,0)
 ;Type is 1 for C/S and 0 for Telnet
"RTN","ZOSVONT",47,0)
 N %,%N,%2,UID,%V,$ET S $ET="S $EC="""" Q",%V=$$VERSION()
"RTN","ZOSVONT",48,0)
 I %V<3.1 X:TYPE "S %N=$ZU(5),%2=$ZU(5,""%SYS""),%2=$$GetLic^LMFCLI,%N=$ZU(5,%N)" Q
"RTN","ZOSVONT",49,0)
 I %V<5 S:TYPE %=$$GetCSLic^%LICENSE S:'TYPE %=$$ShareLic^%LICENSE
"RTN","ZOSVONT",50,0)
 ;Per Sandy Waal 10/18/2003: With Cache' 5.0, your telnet and IP connections are now handled properly.
"RTN","ZOSVONT",51,0)
 I %V'<5 S %V=%V
"RTN","ZOSVONT",52,0)
 S $EC=""
"RTN","ZOSVONT",53,0)
 Q
"RTN","ZOSVONT",54,0)
JOBPAR ;See if X points to a valid Job. Return its UCI.
"RTN","ZOSVONT",55,0)
 N ZJ S Y="",$ZT="JOBX"
"RTN","ZOSVONT",56,0)
 Q:'$D(^$JOB(X))  S Y=$V(-1,X),Y=$P(Y,"^",14)_","_^%ZOSF("VOL")
"RTN","ZOSVONT",57,0)
JOBX Q
"RTN","ZOSVONT",58,0)
 ;
"RTN","ZOSVONT",59,0)
NOLOG ;4096 is switch 12 - sign on inhibited.
"RTN","ZOSVONT",60,0)
 S Y="$V(0,-2,4)\4096#2" Q
"RTN","ZOSVONT",61,0)
 ;
"RTN","ZOSVONT",62,0)
PROGMODE() ;Check if in PROG mode
"RTN","ZOSVONT",63,0)
 Q $ZJ#2
"RTN","ZOSVONT",64,0)
 ;
"RTN","ZOSVONT",65,0)
PRGMODE ;
"RTN","ZOSVONT",66,0)
 N X,XMB,XQZ,XUCI,XUSLNT,XUVOL,Y,ZTPAC
"RTN","ZOSVONT",67,0)
 W ! S ZTPAC=$S('$D(^VA(200,+DUZ,.1)):"",1:$P(^(.1),U,5)),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVONT",68,0)
 S X="" X ^%ZOSF("EOFF") R:ZTPAC]"" !,"PAC: ",X:60 D LC^XUS X ^%ZOSF("EON") I X'=ZTPAC W "??"_$C(7) Q
"RTN","ZOSVONT",69,0)
 S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVONT",70,0)
 D UCI S XUCI=Y,XQZ="PRGM^ZUA[MGR]",XUSLNT=1 D DO^%XUCI D ^%PMODE U $I:(:"+B+C+R") S $ZT="" Q
"RTN","ZOSVONT",71,0)
 Q
"RTN","ZOSVONT",72,0)
LGR() S $ZT="LGRX^%ZOSV"
"RTN","ZOSVONT",73,0)
 Q $ZR ;Last Global ref.
"RTN","ZOSVONT",74,0)
LGRX Q ""
"RTN","ZOSVONT",75,0)
 ;
"RTN","ZOSVONT",76,0)
EC() Q $ZE ;Error code
"RTN","ZOSVONT",77,0)
 ;
"RTN","ZOSVONT",78,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVONT",79,0)
 ;S Y="%" F  S Y=$O(@Y) Q:Y=""  D
"RTN","ZOSVONT",80,0)
 ;. I $D(@Y)#2 S @(X_"Y)="_Y)
"RTN","ZOSVONT",81,0)
 ;. I $D(@Y)>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVONT",82,0)
 S Y="%" F  M:$D(@Y) @(X_"Y)="_Y) S Y=$O(@Y) Q:Y=""
"RTN","ZOSVONT",83,0)
 Q
"RTN","ZOSVONT",84,0)
 ;
"RTN","ZOSVONT",85,0)
ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVONT",86,0)
 N %
"RTN","ZOSVONT",87,0)
 S (Y,%)=$P(Y,"*",1) ;I $D(@Y)=0 F  S Y=$O(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVONT",88,0)
 Q:Y=""
"RTN","ZOSVONT",89,0)
 ;S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVONT",90,0)
 ;F  S Y=$O(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVONT",91,0)
 F  M:$D(@Y) @(X_"Y)="_Y) S Y=$O(@Y) Q:Y=""!(Y'[%)
"RTN","ZOSVONT",92,0)
 Q
"RTN","ZOSVONT",93,0)
 ;
"RTN","ZOSVONT",94,0)
PARSIZ ;
"RTN","ZOSVONT",95,0)
 S X=3
"RTN","ZOSVONT",96,0)
 Q
"RTN","ZOSVONT",97,0)
 ;
"RTN","ZOSVONT",98,0)
DEVOPN ;List of Devices opened
"RTN","ZOSVONT",99,0)
 ;Returns variable Y. Y=Devices owned separated by a comma
"RTN","ZOSVONT",100,0)
 Q
"RTN","ZOSVONT",101,0)
DEVOK ;
"RTN","ZOSVONT",102,0)
 S Y=0,X1=$G(X1) Q:X=2  Q:(X1="HFS")!(X1="SPL")!(X1="MT")!(X1="CHAN")  ;Quit w/ OK for HFS, Spool, MT, TCP/IP
"RTN","ZOSVONT",103,0)
 G:X1="RES" RESOK^%ZIS6
"RTN","ZOSVONT",104,0)
 N $ET S $ET="D OPNERR Q"
"RTN","ZOSVONT",105,0)
 O X::$S($D(%ZISTO):%ZISTO,1:0) E  S Y=999 Q  ;G NOPN
"RTN","ZOSVONT",106,0)
 S Y=0 I '$D(%ZISCHK)!($G(%ZIS)["T") C X Q
"RTN","ZOSVONT",107,0)
 S:X]"" IO(1,X)="" Q
"RTN","ZOSVONT",108,0)
 Q
"RTN","ZOSVONT",109,0)
 ;
"RTN","ZOSVONT",110,0)
OPNERR S $EC="",Y=-1 Q
"RTN","ZOSVONT",111,0)
 ;
"RTN","ZOSVONT",112,0)
GETENV ;Get environment  (UCI^VOL^NODE^BOX:VOLUME)
"RTN","ZOSVONT",113,0)
 N %,%1 S %=$$VERSION,%1=$ZU(86),%1=$S(%<3.1:$P(%1,"*",3),1:$P(%1,"*",2))
"RTN","ZOSVONT",114,0)
 D UCI S Y=$P(Y,",")_"^"_^%ZOSF("VOL")_"^"_$ZU(110)_"^"_^%ZOSF("VOL")_":"_%1
"RTN","ZOSVONT",115,0)
 Q
"RTN","ZOSVONT",116,0)
VERSION(X) ;return Cache version, X=1 - return full name
"RTN","ZOSVONT",117,0)
 Q $S($G(X):$P($ZV,")")_")",1:$P($P($ZV,") ",2),"("))
"RTN","ZOSVONT",118,0)
 ;
"RTN","ZOSVONT",119,0)
OS() ;Return the OS NT, VMS, Unix
"RTN","ZOSVONT",120,0)
 Q $S($ZV["VMS":"VMS",$ZV["Windows":"NT",$ZV["NT":"NT",$ZV["UNIX":"UNIX",1:"UNK")
"RTN","ZOSVONT",121,0)
 ;
"RTN","ZOSVONT",122,0)
SETNM(X) ;Set name, Fall into SETENV
"RTN","ZOSVONT",123,0)
SETENV ;Set environment
"RTN","ZOSVONT",124,0)
 N Q,$ET,$ES S $ET="S $EC="""" Q"
"RTN","ZOSVONT",125,0)
 I $$OS="VMS" S Q=$ZF("SETPRN",$E(X,1,15))
"RTN","ZOSVONT",126,0)
 Q
"RTN","ZOSVONT",127,0)
 ;
"RTN","ZOSVONT",128,0)
SID() ;System ID Ver 1
"RTN","ZOSVONT",129,0)
 N %1,%2,%3,T S T="~"
"RTN","ZOSVONT",130,0)
 S %1=$ZU(5) ;namespace
"RTN","ZOSVONT",131,0)
 S %2=$ZU(12,"") ;directory
"RTN","ZOSVONT",132,0)
 I '$L(%2),$$VERSION'<5.2 S %2=$$defdir^%SYS.GLO(%1) ;remote directory
"RTN","ZOSVONT",133,0)
 S %3=%1_T_%2 ;namespace~directory
"RTN","ZOSVONT",134,0)
 Q "1~"_%3
"RTN","ZOSVONT",135,0)
 ;
"RTN","ZOSVONT",136,0)
PRI() ;Check if a mixed OS enviroment.
"RTN","ZOSVONT",137,0)
 ;Default return 1 unless we are on the secondary OS.
"RTN","ZOSVONT",138,0)
 ;Only Cache on a VMS(1)/Linux(2) mix is supported now.
"RTN","ZOSVONT",139,0)
 N % S %=1
"RTN","ZOSVONT",140,0)
 I $P(^XTV(8989.3,1,0),"^",5),$$OS'="VMS" S %=2
"RTN","ZOSVONT",141,0)
 ;I $P(^XTV(8989.3,1,0),"^",5),$$OS["NT" S %=2
"RTN","ZOSVONT",142,0)
 Q %
"RTN","ZOSVONT",143,0)
 ;
"RTN","ZOSVONT",144,0)
HFSREW(IO,IOPAR) ;Rewind Host File.
"RTN","ZOSVONT",145,0)
 S $ZT="HFSRWERR"
"RTN","ZOSVONT",146,0)
 C IO O @(""""_IO_""""_$S(IOPAR]"":":"_IOPAR_":1",1:":1")) I '$T Q 0
"RTN","ZOSVONT",147,0)
 Q 1
"RTN","ZOSVONT",148,0)
HFSRWERR ;Error encountered
"RTN","ZOSVONT",149,0)
 Q 0
"RTN","ZOSVONT",150,0)
LOGRSRC(OPT,TYPE,STATUS) ;record resource usage in ^XTMP("KMPR"
"RTN","ZOSVONT",151,0)
 Q:'$G(^%ZTSCH("LOGRSRC"))  ; quit if RUM not turned on.
"RTN","ZOSVONT",152,0)
 ; call to RUM routine.
"RTN","ZOSVONT",153,0)
 D RU^%ZOSVKR($G(OPT),$G(TYPE),$G(STATUS))
"RTN","ZOSVONT",154,0)
 Q
"RTN","ZOSVONT",155,0)
SETTRM(X) ;Turn on specified terminators.
"RTN","ZOSVONT",156,0)
 U $I:(:"+T":X)
"RTN","ZOSVONT",157,0)
 Q 1
"RTN","ZOSVONT",158,0)
 ;
"RTN","ZOSVONT",159,0)
T0 ; start RT clock
"RTN","ZOSVONT",160,0)
 ;S XRT0=$H
"RTN","ZOSVONT",161,0)
 Q
"RTN","ZOSVONT",162,0)
T1 ; store RT datum, obsolete
"RTN","ZOSVONT",163,0)
 ;S ^%ZRTL(3,XRTL,+$H,XRTN,$P($H,",",2))=XRT0 K XRT0
"RTN","ZOSVONT",164,0)
 Q
"RTN","ZOSVVXD")
0^5^B22508962^B27832883
"RTN","ZOSVVXD",1,0)
%ZOSV ;SFISC/AC - View commands & special functions. ;10/26/06  08:15
"RTN","ZOSVVXD",2,0)
 ;;8.0;KERNEL;**13,65,71,94,107,118,136,215,284,425**;Jul 10, 1995;Build 18
"RTN","ZOSVVXD",3,0)
ACTJ() ; # active jobs
"RTN","ZOSVVXD",4,0)
 Q $P($$JOBS^%SY,",",2)
"RTN","ZOSVVXD",5,0)
 ;
"RTN","ZOSVVXD",6,0)
AVJ() ; # available jobs
"RTN","ZOSVVXD",7,0)
 N Y S Y=$$JOBS^%SY Q +Y-$P(Y,",",2)
"RTN","ZOSVVXD",8,0)
 ;
"RTN","ZOSVVXD",9,0)
PASSALL ;
"RTN","ZOSVVXD",10,0)
 S Y=$ZC(%SPAWN,"SET TERM/PASTHRU "_$I) U $I:NOTERM Q
"RTN","ZOSVVXD",11,0)
NOPASS ;
"RTN","ZOSVVXD",12,0)
 S Y=$ZC(%SPAWN,"SET TERM/NOPASTHRU "_$I) U $I:TERM="" Q
"RTN","ZOSVVXD",13,0)
 ;
"RTN","ZOSVVXD",14,0)
PRGMODE ;
"RTN","ZOSVVXD",15,0)
 W ! S ZTPAC=$S($D(^VA(200,+DUZ,.1))#10:$P(^(.1),"^",5),1:""),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVVXD",16,0)
 S X="" X ^%ZOSF("EOFF") R:ZTPAC]"" !,"PAC: ",X:60 D LC^XUS X ^%ZOSF("EON") I X'=ZTPAC W "??",*7 Q
"RTN","ZOSVVXD",17,0)
 K XMB,XMTEXT,XMY S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVVXD",18,0)
 I '$$PROGMODE() D UCI S XUCI=Y,XQZ="PRGM^ZUA[MGR]",XUSLNT=1 D DO^%XUCI ZESCAPE
"RTN","ZOSVVXD",19,0)
 E  S $ECODE=",<<PROG>>,"
"RTN","ZOSVVXD",20,0)
 ;
"RTN","ZOSVVXD",21,0)
PROGMODE() ;
"RTN","ZOSVVXD",22,0)
 Q ($V($V($V(0)))#2=0)
"RTN","ZOSVVXD",23,0)
 ;
"RTN","ZOSVVXD",24,0)
UCI ;
"RTN","ZOSVVXD",25,0)
 S Y=$ZC(%UCI),Y=$P(Y,",",1)_","_$P(Y,",",4) Q
"RTN","ZOSVVXD",26,0)
 ;
"RTN","ZOSVVXD",27,0)
UCICHECK(X) ;
"RTN","ZOSVVXD",28,0)
 N %,%1,U,V,Y
"RTN","ZOSVVXD",29,0)
 I '(X?3U!(X?3U1","3U)) Q ""
"RTN","ZOSVVXD",30,0)
 S U=$ZC(%UCI),V=$P(U,",",4),U=$P(U,","),%1=$P(X,",",2),%=$P(X,",")
"RTN","ZOSVVXD",31,0)
 S Y=$ZC(%SETUCI,%,%1),Y=$S(Y:%_","_$S(%1]"":%1,1:V),1:""),V=$ZC(%SETUCI,U,V)
"RTN","ZOSVVXD",32,0)
 Q Y
"RTN","ZOSVVXD",33,0)
 ;
"RTN","ZOSVVXD",34,0)
GETPEER() ;Get the PEER address
"RTN","ZOSVVXD",35,0)
 N PEER,NL,$ET S NL="",$ET="S $EC=NL Q NL",PEER=""
"RTN","ZOSVVXD",36,0)
 S PEER=$ZC(%TRNLNM,"VISTA$IP")
"RTN","ZOSVVXD",37,0)
 I '$L(PEER) S PEER=$&%UCXGETPEER S PEER=$A(PEER,1)_"."_$A(PEER,2)_"."_$A(PEER,3)_"."_$A(PEER,4)
"RTN","ZOSVVXD",38,0)
 Q PEER
"RTN","ZOSVVXD",39,0)
 ;
"RTN","ZOSVVXD",40,0)
SHARELIC(TYPE) ;See if can share a C/S license DSM
"RTN","ZOSVVXD",41,0)
 Q  ;Cache only at this time.
"RTN","ZOSVVXD",42,0)
 Q:$$VERSION<7.2
"RTN","ZOSVVXD",43,0)
 N %,$ET S $ET="S $EC="""" Q"
"RTN","ZOSVVXD",44,0)
 I TYPE S %=$$GetCSLic^%LICENSE Q
"RTN","ZOSVVXD",45,0)
 I 'TYPE S %=$$ShareLic^%LICENSE
"RTN","ZOSVVXD",46,0)
 S $EC=""
"RTN","ZOSVVXD",47,0)
 Q
"RTN","ZOSVVXD",48,0)
PRIORITY ;
"RTN","ZOSVVXD",49,0)
 Q  ;Q:X>10!(X<1)  S X=(X+1)\2-1,Y=$ZC(%SETPRI,X) Q  ;Let VSM do it's thing.
"RTN","ZOSVVXD",50,0)
 ;
"RTN","ZOSVVXD",51,0)
PRIINQ() ;
"RTN","ZOSVVXD",52,0)
 Q $ZC(%GETJPI,0,"PRIB")*2+2
"RTN","ZOSVVXD",53,0)
 ;
"RTN","ZOSVVXD",54,0)
BAUD S X="UNKNOWN" Q
"RTN","ZOSVVXD",55,0)
 ;
"RTN","ZOSVVXD",56,0)
LGR() Q $ZR ;Last global ref.
"RTN","ZOSVVXD",57,0)
 ;
"RTN","ZOSVVXD",58,0)
EC() Q $ZE ;Error code
"RTN","ZOSVVXD",59,0)
 ;
"RTN","ZOSVVXD",60,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVVXD",61,0)
 S Y="%" F  S Y=$ZSORT(@Y) Q:Y=""  D  ;code from DEC
"RTN","ZOSVVXD",62,0)
 . I $D(@Y)#2 S @(X_"Y)="_Y)
"RTN","ZOSVVXD",63,0)
 . I $D(@Y)>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVVXD",64,0)
 K %X,%Y,Y Q
"RTN","ZOSVVXD",65,0)
 ;
"RTN","ZOSVVXD",66,0)
ORDER ;SAVE PARTS OF SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVVXD",67,0)
 S (Y,Y1)=$P(Y,"*") I $D(@Y)=0 F  S Y=$ZSORT(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVVXD",68,0)
 Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVVXD",69,0)
 F  S Y=$ZSORT(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVVXD",70,0)
 K %,%X,%Y,Y,Y1
"RTN","ZOSVVXD",71,0)
 Q
"RTN","ZOSVVXD",72,0)
 ;
"RTN","ZOSVVXD",73,0)
PARSIZ ;
"RTN","ZOSVVXD",74,0)
 S X=3 Q
"RTN","ZOSVVXD",75,0)
 ;
"RTN","ZOSVVXD",76,0)
NOLOG ;
"RTN","ZOSVVXD",77,0)
 S Y=0 Q
"RTN","ZOSVVXD",78,0)
 ;
"RTN","ZOSVVXD",79,0)
GETENV ;Get environment Return Y='UCI^VOL/DIR^NODE^BOX LOOKUP'
"RTN","ZOSVVXD",80,0)
 S Y=$P($ZU(0),",",1)_"^"_$P($ZU(0),",",2)_"^"_$P($ZC(%GETSYI),",",4)
"RTN","ZOSVVXD",81,0)
 S $P(Y,"^",4)=$P(Y,"^",2)_":"_$P(Y,"^",3)
"RTN","ZOSVVXD",82,0)
 Q
"RTN","ZOSVVXD",83,0)
VERSION(X) ;return DSM version, X=1 - return OS
"RTN","ZOSVVXD",84,0)
 N % S %=$ZV
"RTN","ZOSVVXD",85,0)
 I %[" V" Q $S($G(X):$P($ZV," V"),1:$P($ZV," V",2))
"RTN","ZOSVVXD",86,0)
 Q $S($G(X):$P($ZV," ",1,2),1:$P($ZV," ",3))
"RTN","ZOSVVXD",87,0)
 ;
"RTN","ZOSVVXD",88,0)
SETNM(X) ;Set name, Trap dup's, Fall into SETENV
"RTN","ZOSVVXD",89,0)
 N $ETRAP S $ETRAP="S $ECODE="""" Q"
"RTN","ZOSVVXD",90,0)
SETENV ;Set environment X='PROCESS NAME^ '
"RTN","ZOSVVXD",91,0)
 S %=$ZC(%SETPRN,$P(X,"^")) Q
"RTN","ZOSVVXD",92,0)
 ;
"RTN","ZOSVVXD",93,0)
 ;Code moved to %ZOSVKR, Comment out if needed.
"RTN","ZOSVVXD",94,0)
LOGRSRC(OPT,TYPE,STATUS) ;record resource usage in ^XTMP("KMPR"
"RTN","ZOSVVXD",95,0)
 Q:'$G(^%ZTSCH("LOGRSRC"))  ; quit if RUM not turned on.
"RTN","ZOSVVXD",96,0)
 ; call to RUM routine.
"RTN","ZOSVVXD",97,0)
 D RU^%ZOSVKR($G(OPT),$G(TYPE),$G(STATUS))
"RTN","ZOSVVXD",98,0)
 Q
"RTN","ZOSVVXD",99,0)
 ;
"RTN","ZOSVVXD",100,0)
SETTRM(X) ;Turn on specified terminators.
"RTN","ZOSVVXD",101,0)
 U $I:TERM=X
"RTN","ZOSVVXD",102,0)
 Q 1
"RTN","ZOSVVXD",103,0)
 ;
"RTN","ZOSVVXD",104,0)
DEVOK ;Check Device Availability.  (not complete)
"RTN","ZOSVVXD",105,0)
 ;INPUT:  X=Device $I, X1=IOT -- X1 needed for resources
"RTN","ZOSVVXD",106,0)
 ;OUTPUT: Y=0 if available, Y=job # if owned, Y=-1 if device does not exists.
"RTN","ZOSVVXD",107,0)
 S Y=0 Q:X["::"  I $G(X1)="RES" G RESOK^%ZIS6
"RTN","ZOSVVXD",108,0)
 S Y=$ZC(%GETDVI,X,"EXISTS")
"RTN","ZOSVVXD",109,0)
 G DV1:Y D DV2 Q:Y=-1  I Y="TERM" S Y=-1 Q
"RTN","ZOSVVXD",110,0)
 S Y=-2 Q
"RTN","ZOSVVXD",111,0)
DV1 S Y=$ZC(%GETDVI,X,"PID") I Y=$J!($ZC(%GETDVI,X,"SPL")) S Y=0 Q
"RTN","ZOSVVXD",112,0)
 I Y,$ZC(%GETJPI,X,"MASTER_PID")=Y G DVOPN
"RTN","ZOSVVXD",113,0)
 Q:Y>0  D DV2 G DVOPN:Y="TERM" S Y=$S(Y="DISK":0,Y="MAILBOX":0,Y="TAPE":0,1:-1) Q
"RTN","ZOSVVXD",114,0)
DV2 S Y=$ZC(%PARSE,X) I Y="" S Y=-1 Q
"RTN","ZOSVVXD",115,0)
 I X]"" S Y=$ZC(%GETDVI,$S(Y]"":Y,1:X),"DEVCLASS") Q
"RTN","ZOSVVXD",116,0)
 Q
"RTN","ZOSVVXD",117,0)
DVOPN S $ZT="DVERR",Y=0 Q:$D(%ZTIO)
"RTN","ZOSVVXD",118,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZOSVVXD",119,0)
 O X::$S($D(%ZISTO):%ZISTO,1:0) E  S Y=999 L:$D(%ZISLOCK) -@%ZISLOCK:60 Q
"RTN","ZOSVVXD",120,0)
 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZOSVVXD",121,0)
 S Y=0 I '$D(%ZISCHK)!$S($D(%ZIS)#2:(%ZIS["T"),1:0) C X Q
"RTN","ZOSVVXD",122,0)
 S:X]"" IO(1,X)="" Q
"RTN","ZOSVVXD",123,0)
DVERR I $ZE["OPENERR" S Y=-1 Q
"RTN","ZOSVVXD",124,0)
 ZQ
"RTN","ZOSVVXD",125,0)
 ;
"RTN","ZOSVVXD",126,0)
SID() ;Build a System ID
"RTN","ZOSVVXD",127,0)
 N J1,J2,J3,T S T="~"
"RTN","ZOSVVXD",128,0)
 S J1=$P($ZC(%GETSYI),",",4) ;NODE NAME
"RTN","ZOSVVXD",129,0)
 S J2=$ZU(0) ;UCI
"RTN","ZOSVVXD",130,0)
 S J3=$ZC(%ENVIDNM) ;Enviroment number,name
"RTN","ZOSVVXD",131,0)
 ;S ^RWF("SID",$J,1)=J1,^(2)=J2,^(3)=J3
"RTN","ZOSVVXD",132,0)
 Q "1~"_(+J3)_T_$P(J3,",",2)_T_J2_T
"RTN","ZOSVVXD",133,0)
 ;
"RTN","ZOSVVXD",134,0)
T0 ; start RT clock
"RTN","ZOSVVXD",135,0)
 ;S %ZH0=$ZH,%=$P(%ZH0,",",3) S:$E($ZV,10,12)>5.1 %=$E(%,13,23) S XRT0=+$H_","_($P(%,":")*3600+($P(%,":",2)*60)+$P(%,":",3))
"RTN","ZOSVVXD",136,0)
 Q
"RTN","ZOSVVXD",137,0)
 ;
"RTN","ZOSVVXD",138,0)
T1 ; store RT datum w/ZHDIF
"RTN","ZOSVVXD",139,0)
 ;S %ZH1=$ZH,%=$P(%ZH1,",",3) S:$E($ZV,10,12)>5.1 %=$E(%,13,23) S XRT1=+$H_","_($P(%,":")*3600+($P(%,":",2)*60)+$P(%,":",3))
"RTN","ZOSVVXD",140,0)
 ;S ^%ZRTL(3,XRTL,+XRT1,XRTN,$P(XRT1,",",2))=XRT0_"^^"_($P(%ZH1,",")-$P(%ZH0,","))_"^"_($P(%ZH1,",",7)-$P(%ZH0,",",7))_"^"_($P(%ZH1,",",8)-$P(%ZH0,",",8)) K XRT0,%ZH0,%ZH1
"RTN","ZOSVVXD",141,0)
 Q
"RTN","ZOSVVXD",142,0)
 ;
"RTN","ZOSVVXD",143,0)
ZHDIF ;Display dif of two $ZH's
"RTN","ZOSVVXD",144,0)
 W !," CPU=",$J($P(%ZH1,",")-$P(%ZH0,","),6,2),?14," ET=",$J($P(%ZH1,",",2)-$P(%ZH0,",",2),6,1),?27," DIO=",$J($P(%ZH1,",",7)-$P(%ZH0,",",7),5),?40," BIO=",$J($P(%ZH1,",",8)-$P(%ZH0,",",8),5),! Q
"RTN","ZOSVVXD",145,0)
 ;
"RTN","ZOSVVXD",146,0)
DEVOPN ;List devices opened.
"RTN","ZOSVVXD",147,0)
 N %,%B,%I,%L,%X,%X1,%X2,%Y
"RTN","ZOSVVXD",148,0)
 S %X1=$V($V(0)+8),%X2=$V(%X1),Y=""
"RTN","ZOSVVXD",149,0)
 F %I=1:1 D D1 S %X2=$V(%X2) Q:%X2=%X1
"RTN","ZOSVVXD",150,0)
 Q
"RTN","ZOSVVXD",151,0)
D1 S %X=$V(%X2+8)
"RTN","ZOSVVXD",152,0)
 S %L=$V(%X+4,-1,1),%B=$V(%X+8)
"RTN","ZOSVVXD",153,0)
 S %Y=""
"RTN","ZOSVVXD",154,0)
 F %=1:1:%L S %Y=%Y_$C($V(%B,-1,1)) S %B=%B+1
"RTN","ZOSVVXD",155,0)
 S Y=Y_%Y_"," Q
"RTN","ZOSVVXD",156,0)
 ;
"RTN","ZTLOAD1")
0^6^B23025754^B24282359
"RTN","ZTLOAD1",1,0)
%ZTLOAD1 ;SEA/RDS-TaskMan: P I: Queue ;01/16/2007
"RTN","ZTLOAD1",2,0)
 ;;8.0;KERNEL;**112,118,127,162,275,363,409,415,425**;Jul 10, 1995;Build 18
"RTN","ZTLOAD1",3,0)
 ;
"RTN","ZTLOAD1",4,0)
GET ;get task data
"RTN","ZTLOAD1",5,0)
 N %X,%Y,X,Y,X1,ZT,ZTC1,ZTC2,ZTA1,ZTA4,ZTA5,ZTINC,ZTGOT,ZTC34P
"RTN","ZTLOAD1",6,0)
 K %ZTLOAD
"RTN","ZTLOAD1",7,0)
 I ("^"[$G(ZTRTN))!($L($G(ZTRTN),"^")>2) D REJECT^%ZTLOAD2("Bad Routine") G EXIT
"RTN","ZTLOAD1",8,0)
 S U="^" I ZTRTN'[U S ZTRTN=U_ZTRTN
"RTN","ZTLOAD1",9,0)
 S ZTC1=$G(DUZ),ZTC2=""
"RTN","ZTLOAD1",10,0)
 I ZTC1>0 S ZTC2=$P($G(^VA(200,ZTC1,0)),U)
"RTN","ZTLOAD1",11,0)
 ;Check Date/Time
"RTN","ZTLOAD1",12,0)
1 I $D(ZTDTH)[0 S ZTDTH=""
"RTN","ZTLOAD1",13,0)
 I ZTDTH?7N.".".N S ZTDTH=$$FMTH^%ZTLOAD7(ZTDTH)
"RTN","ZTLOAD1",14,0)
 I $P($G(XQY0),U,18) D RESTRCT^%ZTLOAD2
"RTN","ZTLOAD1",15,0)
 I ZTDTH'="@",ZTDTH'?1.5N1","1.5N D ASK^%ZTLOAD2 I ZTDTH'>0 D REJECT^%ZTLOAD2("Bad Date/Time") G EXIT
"RTN","ZTLOAD1",16,0)
 ;
"RTN","ZTLOAD1",17,0)
 S ZTA1="R",ZTA4="",ZTA5=""
"RTN","ZTLOAD1",18,0)
 I ZTRTN="ZTSK^XQ1" D OPTION^%ZTLOAD2 I ZTA1="" D REJECT^%ZTLOAD2("Bad Option") G EXIT
"RTN","ZTLOAD1",19,0)
 I ZTA1="R" D
"RTN","ZTLOAD1",20,0)
 . S ZTSAVE("XQY")="",ZTSAVE("XQY0")="",ZTA4=$G(XQY),ZTA5=$P($G(XQY0),U)
"RTN","ZTLOAD1",21,0)
 ;
"RTN","ZTLOAD1",22,0)
 D GETENV^%ZOSV S ZTC34P=Y
"RTN","ZTLOAD1",23,0)
 ;Description
"RTN","ZTLOAD1",24,0)
2 I $D(ZTDESC)[0 S ZTDESC="No Description (%ZTLOAD)"
"RTN","ZTLOAD1",25,0)
 ;
"RTN","ZTLOAD1",26,0)
 I $G(ZTKIL)]"" D ZTKIL^%ZTLOAD2
"RTN","ZTLOAD1",27,0)
 S:$G(ZTUCI)["," ZTUCI=$P(ZTUCI,",") S:$G(ZTCPU)["," ZTCPU=$P(ZTCPU,",",2)
"RTN","ZTLOAD1",28,0)
DEVICE ;get device data
"RTN","ZTLOAD1",29,0)
 I $D(ZTIO)#2,$G(ION)=$P(ZTIO,";"),$G(IOT)="SPL" D SPOOL^%ZTLOAD2
"RTN","ZTLOAD1",30,0)
 ;If no ZTIO, build from symbol table
"RTN","ZTLOAD1",31,0)
 I $D(ZTIO)[0 S ZTIO=$G(ION) I $L(ZTIO) D
"RTN","ZTLOAD1",32,0)
 . S:$G(IOST)]"" $P(ZTIO,";",2)=IOST
"RTN","ZTLOAD1",33,0)
 . I $G(IO("DOC"))]"" S ZTIO=ZTIO_";"_IO("DOC")
"RTN","ZTLOAD1",34,0)
 . E  I $G(IOM)]"" S ZTIO=ZTIO_";"_IOM I $G(IOSL)]"" S ZTIO=ZTIO_";"_IOSL
"RTN","ZTLOAD1",35,0)
 . Q
"RTN","ZTLOAD1",36,0)
 ;
"RTN","ZTLOAD1",37,0)
 I $E(ZTIO,1)="`" S $P(ZTIO,";")=$P(^%ZIS(1,+$E(ZTIO,2,99),0),"^") ;Convert `IEN format
"RTN","ZTLOAD1",38,0)
 S ZTIO(1)=$S($G(ZTIO(1))'="D":"Q",1:"DIRECT")
"RTN","ZTLOAD1",39,0)
 I $L(ZTIO) D  ;Skip if no device
"RTN","ZTLOAD1",40,0)
 . ;IO("HFSIO") and IOPAR are how %ZIS reports the user selected file name and parameters
"RTN","ZTLOAD1",41,0)
 . S:'$D(ZTIO("H")) ZTIO("H")=$G(IO("HFSIO"))
"RTN","ZTLOAD1",42,0)
 . S:'$D(ZTIO("P")) ZTIO("P")=$G(IOPAR)
"RTN","ZTLOAD1",43,0)
 . I $G(IO("P"))]"",ZTIO'[";/" S ZTIO=ZTIO_";/"_IO("P")
"RTN","ZTLOAD1",44,0)
 . I $$NOQ^%ZISUTL($P(ZTIO,";")) D BADDEV^%ZTLOAD2("Restricted Device")
"RTN","ZTLOAD1",45,0)
 . I $E(ZTIO,1,9)="P-MESSAGE" S ZTSAVE("^TMP(""XM-MESS"",$J,")=""
"RTN","ZTLOAD1",46,0)
 . Q
"RTN","ZTLOAD1",47,0)
 ;
"RTN","ZTLOAD1",48,0)
 I $D(%ZTLOAD("ERROR")) G EXIT
"RTN","ZTLOAD1",49,0)
 ;
"RTN","ZTLOAD1",50,0)
 ;See that ^%ZTSK(-1) is set
"RTN","ZTLOAD1",51,0)
 I $D(^%ZTSK(-1))[0 S ^%ZTSK(-1)=$S($P($G(^%ZTSK(0)),U,3):$P(^(0),U,3),1:1000)
"RTN","ZTLOAD1",52,0)
RECORD ;build record
"RTN","ZTLOAD1",53,0)
 S ZTINC=$G(^%ZOSF("$INC"),1) ;Set to 1 if this system has $INCREMENT, otherwise 0.
"RTN","ZTLOAD1",54,0)
 S ZTGOT=0
"RTN","ZTLOAD1",55,0)
 I 'ZTINC D  ;For System that don't have $INC (GT.M, DTM, MSM)
"RTN","ZTLOAD1",56,0)
 . ;Find a free entry, Claim it and Lock it.
"RTN","ZTLOAD1",57,0)
 . L +^%ZTSK(-1):0 S ZTSK=^%ZTSK(-1) ;This is just a starting point
"RTN","ZTLOAD1",58,0)
 . F  S ZTSK=ZTSK+1 I '$D(^%ZTSK(ZTSK)) D  Q:ZTGOT
"RTN","ZTLOAD1",59,0)
 . . L +^%ZTSK(ZTSK):0 Q:'$T  ;Can we lock it
"RTN","ZTLOAD1",60,0)
 . . I $D(^%ZTSK(ZTSK)) L -^%ZTSK(ZTSK) ;Already claimed
"RTN","ZTLOAD1",61,0)
 . . S ^%ZTSK(ZTSK,.1)=0,^%ZTSK(-1)=ZTSK,ZTGOT=1 ;Claim it
"RTN","ZTLOAD1",62,0)
 . . Q
"RTN","ZTLOAD1",63,0)
 . L -^%ZTSK(-1) ;
"RTN","ZTLOAD1",64,0)
 . Q
"RTN","ZTLOAD1",65,0)
 I ZTINC D  ;For DSM and OpenM. Faster over network(DDP)
"RTN","ZTLOAD1",66,0)
 . S ZTSK=$INCREMENT(^%ZTSK(-1))
"RTN","ZTLOAD1",67,0)
 . L +^%ZTSK(ZTSK):0 S ZTGOT=$T
"RTN","ZTLOAD1",68,0)
 I 'ZTGOT!($D(^%ZTSK(ZTSK,0))) L -^%ZTSK(ZTSK) G RECORD
"RTN","ZTLOAD1",69,0)
 S ^%ZTSK(ZTSK,0)=ZTRTN_U_ZTC1_U_$G(ZTUCI)_U_$H_U_ZTDTH_U_ZTA1_U_ZTA4_U_ZTA5_U_ZTC2_U_$P(ZTC34P,U,1,2)_U_"ZTDESC"_U_$G(ZTCPU)_U_$G(ZTPRI)
"RTN","ZTLOAD1",70,0)
 S ^%ZTSK(ZTSK,.1)=0,^%ZTSK(ZTSK,.03)=ZTDESC
"RTN","ZTLOAD1",71,0)
 S ^%ZTSK(ZTSK,.2)=ZTIO_"^^^^"_ZTIO(1)_U_$G(ZTIO("H")) S:$D(ZTSYNC) $P(^%ZTSK(ZTSK,.2),U,7)=ZTSYNC
"RTN","ZTLOAD1",72,0)
 I $G(ZTIO("P"))]"" S ^%ZTSK(ZTSK,.25)=ZTIO("P")
"RTN","ZTLOAD1",73,0)
 ;
"RTN","ZTLOAD1",74,0)
 D ZTSAVE
"RTN","ZTLOAD1",75,0)
 ;
"RTN","ZTLOAD1",76,0)
SCHED ;schedule task and quit
"RTN","ZTLOAD1",77,0)
 S ZTSTAT=$S(ZTDTH'="@":1,1:"K")_"^"_$H,$P(ZTSTAT,U,8)=$G(ZTKIL)
"RTN","ZTLOAD1",78,0)
 S ^%ZTSK(ZTSK,.1)=ZTSTAT
"RTN","ZTLOAD1",79,0)
 I ZTDTH'="@" S ZT=$$H3(ZTDTH),^%ZTSK(ZTSK,.04)=ZT,^%ZTSCH(ZT,ZTSK)=""
"RTN","ZTLOAD1",80,0)
 L -^%ZTSK(ZTSK) S ZTSK("D")=ZTDTH
"RTN","ZTLOAD1",81,0)
EXIT ;Clean up
"RTN","ZTLOAD1",82,0)
 I $E($G(ZTIO),1,9)="P-MESSAGE" K ^TMP("XM-MESS",$J) ;Clean up the Global
"RTN","ZTLOAD1",83,0)
 K X1,ZT,ZT1,ZTDTH,ZTKIL,ZTSAVE,ZTSTAT,ZTIO
"RTN","ZTLOAD1",84,0)
 Q
"RTN","ZTLOAD1",85,0)
 ;
"RTN","ZTLOAD1",86,0)
ZTSAVE ;save variables
"RTN","ZTLOAD1",87,0)
 N ZTIO
"RTN","ZTLOAD1",88,0)
 K %H,%T,ZTA1,ZTA4,ZTA5,ZTC1,ZTC2,ZTC34P,ZTCPU,ZTDESC,ZTIO,ZTNOGO,ZTPRI,ZTRTN,ZTUCI,ZTSYNC
"RTN","ZTLOAD1",89,0)
 S ZTSAVE("DUZ(")=""
"RTN","ZTLOAD1",90,0)
 S ZT1="" F  S ZT1=$O(ZTSAVE(ZT1)) Q:ZT1=""  D EVAL
"RTN","ZTLOAD1",91,0)
 K ^%ZTSK(ZTSK,.3,"DUZ(","NEWCODE")
"RTN","ZTLOAD1",92,0)
 K ^%ZTSK(ZTSK,.3,"ZTSK"),^("ZTSAVE"),^("ZTDTH")
"RTN","ZTLOAD1",93,0)
 K ^%ZTSK(ZTSK,.3,"XQNOGO")
"RTN","ZTLOAD1",94,0)
 Q
"RTN","ZTLOAD1",95,0)
 ;
"RTN","ZTLOAD1",96,0)
EVAL ;ZTSAVE--evaluate expression
"RTN","ZTLOAD1",97,0)
 I ZT1="*" S X="^%ZTSK(ZTSK,.3," D DOLRO^%ZOSV Q
"RTN","ZTLOAD1",98,0)
 I ZT1["*",$P(ZT1,"*")'["(" S X="^%ZTSK(ZTSK,.3,",Y=ZT1 D ORDER^%ZOSV Q
"RTN","ZTLOAD1",99,0)
 I $S($E(ZT1)="""":1,+ZT1'=ZT1:0,1:ZT1]0),$D(ZTSAVE(ZT1))#2 S @("^%ZTSK(ZTSK,"_ZT1_")=ZTSAVE(ZT1)") Q
"RTN","ZTLOAD1",100,0)
 I $S(ZT1'["(":1,1:$E(ZT1,$L(ZT1))=")"),$S($D(@ZT1)#2:1,1:ZTSAVE(ZT1)]"") S ^%ZTSK(ZTSK,.3,ZT1)=$S(ZTSAVE(ZT1)]"":ZTSAVE(ZT1),1:@ZT1) Q
"RTN","ZTLOAD1",101,0)
 I $E(ZT1)="^",ZT1["(" S %X=ZT1,%Y="^%ZTSK(ZTSK,.3,ZT1," D %XY^%RCR Q
"RTN","ZTLOAD1",102,0)
 I ZT1["(" S %X=ZT1,%Y="^%ZTSK(ZTSK,.3,ZT1," D %XY^%RCR
"RTN","ZTLOAD1",103,0)
 ;I ZT1["(" M ^%ZTSK(ZTSK,.3,ZT1)=@$P(ZT1,"(")
"RTN","ZTLOAD1",104,0)
 Q
"RTN","ZTLOAD1",105,0)
 ;
"RTN","ZTLOAD1",106,0)
H3(%) ;Convert $H to seconds.
"RTN","ZTLOAD1",107,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTLOAD1",108,0)
H0(%) ;Covert from seconds to $H
"RTN","ZTLOAD1",109,0)
 Q (%\86400)_","_(%#86400)
"RTN","ZTMS4")
0^7^B4739293^B5923868
"RTN","ZTMS4",1,0)
%ZTMS4 ;SEA/RDS-TaskMan: Submanager, Part 6 (Setup, Cleanup) ;10 Feb 2003 3:01 pm
"RTN","ZTMS4",2,0)
 ;;8.0;KERNEL;**136,275,425**;JUL 10, 1995;Build 18
"RTN","ZTMS4",3,0)
 ;
"RTN","ZTMS4",4,0)
RESTORE ;RUN--restore saved variables
"RTN","ZTMS4",5,0)
 ;prepare for restore, Call w/ task locked.
"RTN","ZTMS4",6,0)
 N %ZTTV,DT,IO,IOBS,IOHG,IOM,ION,IOPAR,IOS,IOSL,IOST,IOT,IOUPAR,IOXY,POP,U,XY,ZTDTH,ZTIO,ZTQUEUED,ZTRTN
"RTN","ZTMS4",7,0)
 ;
"RTN","ZTMS4",8,0)
 ;restore from old node
"RTN","ZTMS4",9,0)
 ;K ^%ZTSK(ZTSK,0,"ZTSK"),^("ZT3")
"RTN","ZTMS4",10,0)
 ;S ZT3=""
"RTN","ZTMS4",11,0)
 ;F ZT=0:0 S ZT3=$O(^%ZTSK(ZTSK,0,ZT3)) Q:ZT3=""  I +ZT3'=ZT3 S:$D(^(ZT3))#2 @ZT3=^(ZT3) I $D(^(ZT3))>9 S %X="^%ZTSK(ZTSK,0,ZT3,",%Y=ZT3_$E("(",ZT3'["(") D %XY^%RCR
"RTN","ZTMS4",12,0)
 ;
"RTN","ZTMS4",13,0)
A ;restore from new node
"RTN","ZTMS4",14,0)
 K ^%ZTSK(ZTSK,.3,"ZTSK"),^("ZT3")
"RTN","ZTMS4",15,0)
 S ZT3=""
"RTN","ZTMS4",16,0)
 ;F  S ZT3=$O(^%ZTSK(ZTSK,.3,ZT3)) Q:ZT3=""  I +ZT3'=ZT3 S:$D(^(ZT3))#2 @ZT3=^(ZT3) I $D(^(ZT3))>9 S %X="^%ZTSK(ZTSK,.3,ZT3,",%Y=ZT3_$E("(",ZT3'["(") D %XY^%RCR
"RTN","ZTMS4",17,0)
 F  S ZT3=$O(^%ZTSK(ZTSK,.3,ZT3)) Q:ZT3=""  D:+ZT3'=ZT3
"RTN","ZTMS4",18,0)
 . I ZT3'["(" M:$D(^(ZT3)) @ZT3=^(ZT3) Q
"RTN","ZTMS4",19,0)
 . S ZT4=$L(ZT3)
"RTN","ZTMS4",20,0)
 . I $E(ZT3,ZT4)="(" M @($E(ZT3,1,ZT4-1))=^(ZT3) Q
"RTN","ZTMS4",21,0)
 . M @($E(ZT3,1,ZT4-1)_")")=^(ZT3)
"RTN","ZTMS4",22,0)
 . Q
"RTN","ZTMS4",23,0)
 ;
"RTN","ZTMS4",24,0)
 ;cleanup
"RTN","ZTMS4",25,0)
 K %A,%B,%C,%X,%Y,%Z,ZT,ZT3
"RTN","ZTMS4",26,0)
 Q
"RTN","ZTMS4",27,0)
 ;
"RTN","ZTMS4",28,0)
POST ;RUN--post-execution commands, Call w/ task locked.
"RTN","ZTMS4",29,0)
 I $G(ZTSTOP)=1 D TSKSTAT^%ZTMS3("D","Job asked to stop") Q
"RTN","ZTMS4",30,0)
 S X=^%ZTSK(ZTSK,.1) ;Get keep till.
"RTN","ZTMS4",31,0)
 I $S($P(X,U,8)>$H:0,$D(^%ZTSK(ZTSK,0))[0:1,$G(ZTREQ)="@":1,1:0) D KILL^%ZTM4 Q
"RTN","ZTMS4",32,0)
 N ZTUCI,ZTCPU,ZTNODE,ZTPAIR,ZTYPE,ZTRTN,ZTDESC,ZTIO,ZTDTH ;Protect current values.
"RTN","ZTMS4",33,0)
 I $D(ZTREQ)#2 S ZTDTH=$P(ZTREQ,U),ZTIO=$P(ZTREQ,U,2),ZTDESC=$P(ZTREQ,U,3),ZTRTN=$P(ZTREQ,U,4,5),ZTIO(1)=$P(ZTREQ,U,6) S:$P(ZTRTN,U,2)="" ZTRTN=$P(ZTRTN,U) D REQ^%ZTLOAD Q
"RTN","ZTMS4",34,0)
 Q
"RTN","ZTMS4",35,0)
 ;
"RTN","ZTMS4",36,0)
 ;
"RTN","ZTMS4",37,0)
LOGIN ;RUN--enter task in signon log
"RTN","ZTMS4",38,0)
 I '$L($T(SLOG^XUS1)) Q  ;No Sign-on Log
"RTN","ZTMS4",39,0)
 N XL1
"RTN","ZTMS4",40,0)
 S XL1=$$SLOG^XUS1($P(%ZTTV,U,7),1,IOS,$P($P(%ZTTV,U),","),$P(%ZTTV,U,8))
"RTN","ZTMS4",41,0)
 S $P(%ZTTV,U,10)=XL1
"RTN","ZTMS4",42,0)
 Q
"RTN","ZTMS4",43,0)
 ;
"RTN","ZTMS4",44,0)
LOGOUT ;RUN--set signoff time for task in signon log
"RTN","ZTMS4",45,0)
 N ZT
"RTN","ZTMS4",46,0)
 S ZT=$P(%ZTTV,"^",10) Q:ZT'>0  D LOUT^XUSCLEAN(ZT)
"RTN","ZTMS4",47,0)
 Q
"RTN","ZTMS4",48,0)
 ;
"RTN","ZTMS4",49,0)
ALERT ;Send a alert for rejected tasks.
"RTN","ZTMS4",50,0)
 I $G(DUZ)>.9,$D(^DD(8992,.01,0)) D
"RTN","ZTMS4",51,0)
 . D SETUP^XQALERT
"RTN","ZTMS4",52,0)
 ;S ZTREQ="@"
"RTN","ZTMS4",53,0)
 Q
"VER")
8.0^22.0
"BLD",947,6)
^370
**END**
**END**
