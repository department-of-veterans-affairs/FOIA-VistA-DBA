KIDS Distribution saved on Jun 03, 2002@17:43:20
LTC COPAYMENTS PHASE II
**KIDS**:EAS*1.0*7^DG*5.3*433^IVM*2.0*49^

**INSTALL NAME**
EAS*1.0*7
"BLD",3610,0)
EAS*1.0*7^ENROLLMENT APPLICATION SYSTEM^0^3020603^y
"BLD",3610,4,0)
^9.64PA^^0
"BLD",3610,"INID")
^n
"BLD",3610,"INIT")
POST^EAS1P7
"BLD",3610,"KRN",0)
^9.67PA^8989.52^19
"BLD",3610,"KRN",.4,0)
.4
"BLD",3610,"KRN",.401,0)
.401
"BLD",3610,"KRN",.402,0)
.402
"BLD",3610,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",3610,"KRN",.402,"NM",1,0)
EASEC COMPLETE LTC CO-PAY TEST    FILE #408.31^408.31^0
"BLD",3610,"KRN",.402,"NM",2,0)
EASEC ENTER/EDIT INCOME    FILE #408.21^408.21^0
"BLD",3610,"KRN",.402,"NM",3,0)
EASEC ENTER/EDIT EXPENSES    FILE #408.21^408.21^0
"BLD",3610,"KRN",.402,"NM","B","EASEC COMPLETE LTC CO-PAY TEST    FILE #408.31",1)

"BLD",3610,"KRN",.402,"NM","B","EASEC ENTER/EDIT EXPENSES    FILE #408.21",3)

"BLD",3610,"KRN",.402,"NM","B","EASEC ENTER/EDIT INCOME    FILE #408.21",2)

"BLD",3610,"KRN",.403,0)
.403
"BLD",3610,"KRN",.5,0)
.5
"BLD",3610,"KRN",.84,0)
.84
"BLD",3610,"KRN",3.6,0)
3.6
"BLD",3610,"KRN",3.8,0)
3.8
"BLD",3610,"KRN",9.2,0)
9.2
"BLD",3610,"KRN",9.8,0)
9.8
"BLD",3610,"KRN",9.8,"NM",0)
^9.68A^25^25
"BLD",3610,"KRN",9.8,"NM",1,0)
EASECA^^0^B9749435
"BLD",3610,"KRN",9.8,"NM",2,0)
EASECSCC^^0^B33763046
"BLD",3610,"KRN",9.8,"NM",3,0)
EASECU^^0^B3800536
"BLD",3610,"KRN",9.8,"NM",4,0)
EASECPC^^0^B83111487
"BLD",3610,"KRN",9.8,"NM",5,0)
EASECMT^^0^B31263260
"BLD",3610,"KRN",9.8,"NM",6,0)
EASECE^^0^B9816656
"BLD",3610,"KRN",9.8,"NM",7,0)
EASECSC1^^0^B30085546
"BLD",3610,"KRN",9.8,"NM",8,0)
EASECCAL^^0^B11161595
"BLD",3610,"KRN",9.8,"NM",9,0)
EASECSC5^^0^B12428627
"BLD",3610,"KRN",9.8,"NM",10,0)
EASECSC6^^0^B9344091
"BLD",3610,"KRN",9.8,"NM",11,0)
EASECV^^0^B9639494
"BLD",3610,"KRN",9.8,"NM",12,0)
EASECDD^^0^B38158201
"BLD",3610,"KRN",9.8,"NM",13,0)
EASECPC1^^0^B3026409
"BLD",3610,"KRN",9.8,"NM",14,0)
EASEC100^^0^B56889113
"BLD",3610,"KRN",9.8,"NM",15,0)
EASECSC^^0^B3781232
"BLD",3610,"KRN",9.8,"NM",16,0)
EASECSCU^^0^B8864962
"BLD",3610,"KRN",9.8,"NM",17,0)
EASECDP1^^0^B8980117
"BLD",3610,"KRN",9.8,"NM",18,0)
EASECDP2^^0^B21414536
"BLD",3610,"KRN",9.8,"NM",19,0)
EASECDP4^^0^B13762481
"BLD",3610,"KRN",9.8,"NM",20,0)
EASECDPH^^0^B12827480
"BLD",3610,"KRN",9.8,"NM",21,0)
EASECU23^^0^B10362450
"BLD",3610,"KRN",9.8,"NM",22,0)
EASECSU3^^0^B6803221
"BLD",3610,"KRN",9.8,"NM",23,0)
EASEC102^^0^B33419152
"BLD",3610,"KRN",9.8,"NM",24,0)
EASEC103^^0^B20291884
"BLD",3610,"KRN",9.8,"NM",25,0)
EAS1P7^^0^B1215171
"BLD",3610,"KRN",9.8,"NM","B","EAS1P7",25)

"BLD",3610,"KRN",9.8,"NM","B","EASEC100",14)

"BLD",3610,"KRN",9.8,"NM","B","EASEC102",23)

"BLD",3610,"KRN",9.8,"NM","B","EASEC103",24)

"BLD",3610,"KRN",9.8,"NM","B","EASECA",1)

"BLD",3610,"KRN",9.8,"NM","B","EASECCAL",8)

"BLD",3610,"KRN",9.8,"NM","B","EASECDD",12)

"BLD",3610,"KRN",9.8,"NM","B","EASECDP1",17)

"BLD",3610,"KRN",9.8,"NM","B","EASECDP2",18)

"BLD",3610,"KRN",9.8,"NM","B","EASECDP4",19)

"BLD",3610,"KRN",9.8,"NM","B","EASECDPH",20)

"BLD",3610,"KRN",9.8,"NM","B","EASECE",6)

"BLD",3610,"KRN",9.8,"NM","B","EASECMT",5)

"BLD",3610,"KRN",9.8,"NM","B","EASECPC",4)

"BLD",3610,"KRN",9.8,"NM","B","EASECPC1",13)

"BLD",3610,"KRN",9.8,"NM","B","EASECSC",15)

"BLD",3610,"KRN",9.8,"NM","B","EASECSC1",7)

"BLD",3610,"KRN",9.8,"NM","B","EASECSC5",9)

"BLD",3610,"KRN",9.8,"NM","B","EASECSC6",10)

"BLD",3610,"KRN",9.8,"NM","B","EASECSCC",2)

"BLD",3610,"KRN",9.8,"NM","B","EASECSCU",16)

"BLD",3610,"KRN",9.8,"NM","B","EASECSU3",22)

"BLD",3610,"KRN",9.8,"NM","B","EASECU",3)

"BLD",3610,"KRN",9.8,"NM","B","EASECU23",21)

"BLD",3610,"KRN",9.8,"NM","B","EASECV",11)

"BLD",3610,"KRN",19,0)
19
"BLD",3610,"KRN",19,"NM",0)
^9.68A^11^11
"BLD",3610,"KRN",19,"NM",1,0)
EASEC LTC COPAY MENU^^0
"BLD",3610,"KRN",19,"NM",2,0)
EASEC LTC EXEMPT TST VIEW EDIT^^0
"BLD",3610,"KRN",19,"NM",3,0)
EASEC LTC EXEMPTION TEST EDIT^^0
"BLD",3610,"KRN",19,"NM",4,0)
EASEC LTC EXEMPTION TEST MENU^^0
"BLD",3610,"KRN",19,"NM",5,0)
EASEC LTC EXEMPTION TST DELETE^^0
"BLD",3610,"KRN",19,"NM",6,0)
EASEC LTC EXEMPTION TEST VIEW^^0
"BLD",3610,"KRN",19,"NM",7,0)
EASEC LTC COPAY PRINT^^0
"BLD",3610,"KRN",19,"NM",8,0)
EASEC LTC COPAY TEST ADD^^0
"BLD",3610,"KRN",19,"NM",9,0)
EASEC LTC COPAY TEST EDIT^^0
"BLD",3610,"KRN",19,"NM",10,0)
EASEC LTC COPAY TEST PRINT^^0
"BLD",3610,"KRN",19,"NM",11,0)
EASEC LTC COPAY TEST VIEW^^0
"BLD",3610,"KRN",19,"NM","B","EASEC LTC COPAY MENU",1)

"BLD",3610,"KRN",19,"NM","B","EASEC LTC COPAY PRINT",7)

"BLD",3610,"KRN",19,"NM","B","EASEC LTC COPAY TEST ADD",8)

"BLD",3610,"KRN",19,"NM","B","EASEC LTC COPAY TEST EDIT",9)

"BLD",3610,"KRN",19,"NM","B","EASEC LTC COPAY TEST PRINT",10)

"BLD",3610,"KRN",19,"NM","B","EASEC LTC COPAY TEST VIEW",11)

"BLD",3610,"KRN",19,"NM","B","EASEC LTC EXEMPT TST VIEW EDIT",2)

"BLD",3610,"KRN",19,"NM","B","EASEC LTC EXEMPTION TEST EDIT",3)

"BLD",3610,"KRN",19,"NM","B","EASEC LTC EXEMPTION TEST MENU",4)

"BLD",3610,"KRN",19,"NM","B","EASEC LTC EXEMPTION TEST VIEW",6)

"BLD",3610,"KRN",19,"NM","B","EASEC LTC EXEMPTION TST DELETE",5)

"BLD",3610,"KRN",19.1,0)
19.1
"BLD",3610,"KRN",101,0)
101
"BLD",3610,"KRN",409.61,0)
409.61
"BLD",3610,"KRN",771,0)
771
"BLD",3610,"KRN",870,0)
870
"BLD",3610,"KRN",8989.51,0)
8989.51
"BLD",3610,"KRN",8989.52,0)
8989.52
"BLD",3610,"KRN",8994,0)
8994
"BLD",3610,"KRN","B",.4,.4)

"BLD",3610,"KRN","B",.401,.401)

"BLD",3610,"KRN","B",.402,.402)

"BLD",3610,"KRN","B",.403,.403)

"BLD",3610,"KRN","B",.5,.5)

"BLD",3610,"KRN","B",.84,.84)

"BLD",3610,"KRN","B",3.6,3.6)

"BLD",3610,"KRN","B",3.8,3.8)

"BLD",3610,"KRN","B",9.2,9.2)

"BLD",3610,"KRN","B",9.8,9.8)

"BLD",3610,"KRN","B",19,19)

"BLD",3610,"KRN","B",19.1,19.1)

"BLD",3610,"KRN","B",101,101)

"BLD",3610,"KRN","B",409.61,409.61)

"BLD",3610,"KRN","B",771,771)

"BLD",3610,"KRN","B",870,870)

"BLD",3610,"KRN","B",8989.51,8989.51)

"BLD",3610,"KRN","B",8989.52,8989.52)

"BLD",3610,"KRN","B",8994,8994)

"BLD",3610,"QUES",0)
^9.62^^
"BLD",3610,"REQB",0)
^9.611^^
"INIT")
POST^EAS1P7
"KRN",.402,2610,-1)
0^3
"KRN",.402,2610,0)
EASEC ENTER/EDIT EXPENSES^3020312.1603^@^408.21^^@^3020522
"KRN",.402,2610,"DIAB",5,0,408.21,0)
1.03;"EDUCATION"
"KRN",.402,2610,"DIAB",9,0,408.21,0)
1.02;"FUNERAL AND BURIAL"
"KRN",.402,2610,"DIAB",14,0,408.21,1)
1.01;"NON-REIMBURSED MEDICAL EXPENSES"
"KRN",.402,2610,"DR",1,408.21)
K DGFIN;I '$D(DGDR) W !,*7,"Variable DGDR must be defined!" S Y="@999";S:DGDR'["101" Y="@102";@101;1.03EDUCATION~;@102;S:DGDR'["102" Y="@103";S:'$P(DGVIR0,U,8)&('$P(DGVIR0,U,14)) Y="@103";1.02FUNERAL AND BURIAL~;@103;
"KRN",.402,2610,"DR",1,408.21,1)
S:DGDR'["103" Y="@104";1.04;@104;S:DGDR'["104" Y="@105";1.05;@105;S:DGDR'["105" Y="@106";1.06;@106;S:DGDR'["106" Y="@107";1.07;@107;S:DGDR'["107" Y="@108";1.01NON-REIMBURSED MEDICAL EXPENSES~;@108;S:DGDR'["108" Y="@109";1.08;@109;
"KRN",.402,2610,"DR",1,408.21,2)
S:DGDR'["109" Y="@110";1.09;@110;S:DGDR'["110" Y="@998";1.1;@998;S DGFIN="";@999;
"KRN",.402,2611,-1)
0^2
"KRN",.402,2611,0)
EASEC ENTER/EDIT INCOME^3020227.1406^@^408.21^^@^3020522
"KRN",.402,2611,"DIAB",1,0,408.21,3)
.16;"OTHER COMPENSATION (WORKERS COMP/BLACK LUNG)"
"KRN",.402,2611,"DIAB",2,0,408.21,1)
.15;"INTEREST/DIVIDENDS"
"KRN",.402,2611,"DIAB",5,0,408.21,0)
.14;"CURRENT INCOME"
"KRN",.402,2611,"DIAB",6,0,408.21,2)
.19;"SPOUSE VA DISABILITY/COMPENSATION"
"KRN",.402,2611,"DIAB",8,0,408.21,0)
.08;"SOCIAL SECURITY RETIREMENT/DISABILITY"
"KRN",.402,2611,"DIAB",8,0,408.21,1)
.09;"CIVIL SERVICE RETIREMENT"
"KRN",.402,2611,"DIAB",13,0,408.21,3)
.17;"OTHER INCOME"
"KRN",.402,2611,"DR",1,408.21)
K DGFIN;I '$D(DGDR)!('$D(DGPRTY)) W !,*7,"Variable DGDR and DGPRTY must be defined!" S Y="@999";S:DGDR'["101" Y="@102";@101;.14CURRENT INCOME~;@102;S:DGDR'["102" Y="@103";.08SOCIAL SECURITY RETIREMENT/DISABILITY~;@103;
"KRN",.402,2611,"DR",1,408.21,1)
S:DGDR'["103" Y="@104";.15INTEREST/DIVIDENDS~;@104;S:DGDR'["104" Y="@105";.06;@105;S:DGDR'["105" Y="@106";.09CIVIL SERVICE RETIREMENT~;@106;S:DGDR'["106" Y="@107";.1;@107;S:DGDR'["107" Y="@108";
"KRN",.402,2611,"DR",1,408.21,2)
S:DGPRTY="V"&($P($G(^DPT(DFN,.362)),U,14)'="Y") Y="@108";.07;@108;S:DGDR'["108" Y="@109";S:DGPRTY="V" Y="@109";.19SPOUSE VA DISABILITY/COMPENSATION~;@109;S:DGDR'["109" Y="@110";.12;@110;S:DGDR'["110" Y="@111";
"KRN",.402,2611,"DR",1,408.21,3)
.16OTHER COMPENSATION (WORKERS COMP/BLACK LUNG)~;@111;S:DGDR'["111" Y="@112";.11;@112;S:DGDR'["112" Y="@113";.13;@113;S:DGDR'["113" Y="@114";.2;@114;S:DGDR'["114" Y="@998";.17OTHER INCOME~;@998;S DGFIN="";@999;
"KRN",.402,2612,-1)
0^1
"KRN",.402,2612,0)
EASEC COMPLETE LTC CO-PAY TEST^3020108.1457^@^408.31^^@^3020528
"KRN",.402,2612,"DIAB",2,0,408.31,3)
.07;REQ
"KRN",.402,2612,"DIAB",4,0,408.31,3)
50;"Comments"
"KRN",.402,2612,"DR",1,408.31)
K DGFIN;I '$D(DGMTS)!('$D(DGINT))!('$D(DGDET))!('$D(DGNWT)) W !,*7,"Variables DGMTS, DGINT, DGDET, and DGNWT must be defined!" S Y="@999";S:'$P(^DGMT(408.31,DA,0),U,14)&('$D(DGREF)) Y="@20";.14///^S X=$S($D(DGREF):1,1:"@");@20;
"KRN",.402,2612,"DR",1,408.31,1)
.03////^S X=DGMTS;2.07////^S X=$S(DGMTS=12:$G(DGRE),1:"@");2.08////^S X=$P($$GETLTC4^EASECMT(DFN,DGMTDT),U,1);.04////^S X=$S('$D(DGREF):DGINT,1:"@");.15////^S X=$S('$D(DGREF):DGDET,1:"@");.05////^S X=$S('$D(DGREF):DGNWT,1:"@");
"KRN",.402,2612,"DR",1,408.31,2)
.18////^S X=$G(DGND);.06////^S X=DUZ;S:$P(^DGMT(408.31,DA,0),U,7) Y="@30";.07///^S X=$S(DGMTDT=DT:"NOW",1:DGMTDT);2.05////^S X=$$GETSITE^DGMTU4(.DUZ);@30;2.02///^S X="NOW";.11////^S X=$S($D(DGAGR):DGAGR,1:"@");
"KRN",.402,2612,"DR",1,408.31,3)
S:DGMTDT'<DT Y="@998";.07R~;@998;50Comments~;S DGFIN="";@999;
"KRN",19,11065,-1)
0^8
"KRN",19,11065,0)
EASEC LTC COPAY TEST ADD^Add a New LTC Copayment Test^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1^1
"KRN",19,11065,1,0)
^^4^4^3020306^
"KRN",19,11065,1,1,0)
This option will add a new Long Term Care Copayment Test for a patient.
"KRN",19,11065,1,2,0)
The information entered will be from the Application for Extended
"KRN",19,11065,1,3,0)
Care Services (VA Form 10-10EC). If all the required information is
"KRN",19,11065,1,4,0)
entered, the test can be completed and the 10-10EC form can be printed.
"KRN",19,11065,15)
K DGMTYPT
"KRN",19,11065,20)
S DGMTYPT=3 D EN^EASECA
"KRN",19,11065,"U")
ADD A NEW LTC COPAYMENT TEST
"KRN",19,11066,-1)
0^9
"KRN",19,11066,0)
EASEC LTC COPAY TEST EDIT^Edit an Existing LTC Copayment Test^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^y^1^1
"KRN",19,11066,1,0)
^19.06^3^3^3020306^^
"KRN",19,11066,1,1,0)
This option will enable the user to make changes to data in an existing
"KRN",19,11066,1,2,0)
Long Term Care Copayment Test.  If all the required information is
"KRN",19,11066,1,3,0)
entered, the test can be completed and the 10-10EC form can be printed.
"KRN",19,11066,15)
K DGMTYPT
"KRN",19,11066,20)
S DGMTYPT=3 D EN^EASECE
"KRN",19,11066,"U")
EDIT AN EXISTING LTC COPAYMENT
"KRN",19,11067,-1)
0^11
"KRN",19,11067,0)
EASEC LTC COPAY TEST VIEW^View a LTC Copayment Test^^A^^^^^^^^^y^1^1
"KRN",19,11067,1,0)
^19.06^3^3^3020306^^^
"KRN",19,11067,1,1,0)
This option will display all of the screens containing the information for
"KRN",19,11067,1,2,0)
a selected Long Term Care Copayment Test.  This option does not allow
"KRN",19,11067,1,3,0)
editing.
"KRN",19,11067,15)
K DGMTYPT
"KRN",19,11067,20)
S DGMTYPT=3 D EN^EASECV
"KRN",19,11067,"U")
VIEW A LTC COPAYMENT TEST
"KRN",19,11068,-1)
0^7
"KRN",19,11068,0)
EASEC LTC COPAY PRINT^Calculated LTC Copayments Print^^A^^^^^^^^^y^1^1
"KRN",19,11068,1,0)
^19.06^2^2^3020306^^^
"KRN",19,11068,1,1,0)
This option will enable the user to display or print the calculated Long
"KRN",19,11068,1,2,0)
Term Care copayments for a selected veteran.
"KRN",19,11068,15)
K DGMTYPT
"KRN",19,11068,20)
S DGMTYPT=3 D EN^EASECPC
"KRN",19,11068,"U")
CALCULATED LTC COPAYMENTS PRIN
"KRN",19,11069,-1)
0^1
"KRN",19,11069,0)
EASEC LTC COPAY MENU^LTC Copayments Menu^^M^^^^^^^^^y
"KRN",19,11069,1,0)
^19.06^2^2^3020306^^^^
"KRN",19,11069,1,1,0)
This is the menu that will contain the options for the Long Term Care
"KRN",19,11069,1,2,0)
Copayments application.
"KRN",19,11069,10,0)
^19.01IP^6^6
"KRN",19,11069,10,1,0)
11065^^1
"KRN",19,11069,10,1,"^")
EASEC LTC COPAY TEST ADD
"KRN",19,11069,10,2,0)
11066^^2
"KRN",19,11069,10,2,"^")
EASEC LTC COPAY TEST EDIT
"KRN",19,11069,10,3,0)
11067^^3
"KRN",19,11069,10,3,"^")
EASEC LTC COPAY TEST VIEW
"KRN",19,11069,10,4,0)
11068^^5
"KRN",19,11069,10,4,"^")
EASEC LTC COPAY PRINT
"KRN",19,11069,10,5,0)
11146^^4
"KRN",19,11069,10,5,"^")
EASEC LTC COPAY TEST PRINT
"KRN",19,11069,10,6,0)
11267
"KRN",19,11069,10,6,"^")
EASEC LTC EXEMPTION TEST MENU
"KRN",19,11069,99)
58874,39156
"KRN",19,11069,"U")
LTC COPAYMENTS MENU
"KRN",19,11146,-1)
0^10
"KRN",19,11146,0)
EASEC LTC COPAY TEST PRINT^Print Application for Extended Care (10-10EC)^^R^^^^^^^^ENROLLMENT APPLICATION SYSTEM^y
"KRN",19,11146,1,0)
^^3^3^3020306^
"KRN",19,11146,1,1,0)
This menu option will allow the selection and printing of the Application 
"KRN",19,11146,1,2,0)
for Extended Care Services (VA Form 10-10EC) for a veteran that has 
"KRN",19,11146,1,3,0)
completed a Long Term Care Copayment Test.
"KRN",19,11146,25)
OEN^EASEC10E
"KRN",19,11146,"U")
PRINT APPLICATION FOR EXTENDED
"KRN",19,11209,-1)
0^2
"KRN",19,11209,0)
EASEC LTC EXEMPT TST VIEW EDIT^View LTC Copay Exemption Test Editing^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^y^1
"KRN",19,11209,1,0)
^19.06^8^8^3020306^^^
"KRN",19,11209,1,1,0)
This option allows the user to view all changes made to a particular Long 
"KRN",19,11209,1,2,0)
Term Care Copay Exemption Test for a patient.  Some of the displayed 
"KRN",19,11209,1,3,0)
information includes date of change, user who made the change, and the 
"KRN",19,11209,1,4,0)
type of change.  If a change involves a change to the test status, then 
"KRN",19,11209,1,5,0)
both the current and previous values are displayed.
"KRN",19,11209,1,6,0)
 
"KRN",19,11209,1,7,0)
If a LTC Exemption test is deleted, any associated changes are also 
"KRN",19,11209,1,8,0)
deleted.
"KRN",19,11209,20)
S DGMTYPT=4 D DIS^DGMTAUD
"KRN",19,11209,"U")
VIEW LTC COPAY EXEMPTION TEST 
"KRN",19,11216,-1)
0^5
"KRN",19,11216,0)
EASEC LTC EXEMPTION TST DELETE^Delete a LTC Copay Exemption Test^^A^^DG MTDELETE^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11216,1,0)
^19.06^2^2^3020220^^
"KRN",19,11216,1,1,0)
This option is used to delete a LTC copay exemption test which may have
"KRN",19,11216,1,2,0)
been inadvertently entered.
"KRN",19,11216,20)
S DGMTYPT=4 D EN^DGMTDEL
"KRN",19,11216,"U")
DELETE A LTC COPAY EXEMPTION T
"KRN",19,11267,-1)
0^4
"KRN",19,11267,0)
EASEC LTC EXEMPTION TEST MENU^LTC Copay Exemption Test Menu^^M^^^^^^^^ENROLLMENT APPLICATION SYSTEM
"KRN",19,11267,1,0)
^19.06^2^2^3020122^^
"KRN",19,11267,1,1,0)
This is the menu that contains the options pertaining to the 
"KRN",19,11267,1,2,0)
Long Term Care Copay Exemption Test.
"KRN",19,11267,10,0)
^19.01IP^4^4
"KRN",19,11267,10,1,0)
11209
"KRN",19,11267,10,1,"^")
EASEC LTC EXEMPT TST VIEW EDIT
"KRN",19,11267,10,2,0)
11270
"KRN",19,11267,10,2,"^")
EASEC LTC EXEMPTION TEST EDIT
"KRN",19,11267,10,3,0)
11216
"KRN",19,11267,10,3,"^")
EASEC LTC EXEMPTION TST DELETE
"KRN",19,11267,10,4,0)
11271
"KRN",19,11267,10,4,"^")
EASEC LTC EXEMPTION TEST VIEW
"KRN",19,11267,99)
58874,39157
"KRN",19,11267,"U")
LTC COPAY EXEMPTION TEST MENU
"KRN",19,11270,-1)
0^3
"KRN",19,11270,0)
EASEC LTC EXEMPTION TEST EDIT^Edit an Existing LTC Copay Exemption Test^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11270,1,0)
^19.06^1^1^3020306^^
"KRN",19,11270,1,1,0)
Edit existing LTC Copay Exemption Test information.
"KRN",19,11270,20)
S DGMTYPT=4 D EN^DGMTE
"KRN",19,11270,"U")
EDIT AN EXISTING LTC COPAY EXE
"KRN",19,11271,-1)
0^6
"KRN",19,11271,0)
EASEC LTC EXEMPTION TEST VIEW^LTC Copay Exemption Test View^^A^^^^^^^^ENROLLMENT APPLICATION SYSTEM^^1
"KRN",19,11271,1,0)
^19.06^1^1^3020306^^^
"KRN",19,11271,1,1,0)
This option allows a user to view a LTC Copay Exemption Test.
"KRN",19,11271,20)
S DGMTYPT=4 D EN^DGMTV
"KRN",19,11271,"U")
LTC COPAY EXEMPTION TEST VIEW
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",551,-1)
1^1
"PKG",551,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",551,20,0)
^9.402P^^0
"PKG",551,22,0)
^9.49I^1^1
"PKG",551,22,1,0)
1.0^3010315^3010523^66481
"PKG",551,22,1,"PAH",1,0)
7^3020603^123456800
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
25
"RTN","EAS1P7")
0^25^B1215171
"RTN","EAS1P7",1,0)
EAS1P7 ;ALB/LBD - Post Init for EAS*1.0*7 ;12 MAR 2002
"RTN","EAS1P7",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**7**;Mar 15, 2001
"RTN","EAS1P7",3,0)
 ;
"RTN","EAS1P7",4,0)
POST ; Entry point for post init
"RTN","EAS1P7",5,0)
 ;
"RTN","EAS1P7",6,0)
 ; Update LTC COPAY EXEMPTION file (#714.1)
"RTN","EAS1P7",7,0)
 D MES^XPDUTL("*** Updating LTC COPAY EXEMPTION (File #714.1) ***")
"RTN","EAS1P7",8,0)
 N DIC,DA,DIE,X,Y,FILE
"RTN","EAS1P7",9,0)
 ; Modify entry #2
"RTN","EAS1P7",10,0)
 D MES^XPDUTL("  - Modifying entry #2")
"RTN","EAS1P7",11,0)
 S FILE="^EAS(714.1,"
"RTN","EAS1P7",12,0)
 S DIC=FILE,DIC(0)="N",X=2 D ^DIC
"RTN","EAS1P7",13,0)
 I Y<0 D MES^XPDUTL("    ERROR: Entry #2 not updated")
"RTN","EAS1P7",14,0)
 E  S DIE=FILE,DA=2,DR=".01///INCOME (LAST YEAR) BELOW LTC THRESHOLD" D ^DIE
"RTN","EAS1P7",15,0)
 ; Add entry #12
"RTN","EAS1P7",16,0)
 D MES^XPDUTL("  - Adding entry #12")
"RTN","EAS1P7",17,0)
 K DO
"RTN","EAS1P7",18,0)
 S DIC=FILE,DIC(0)="F",(DA,DINUM)=12
"RTN","EAS1P7",19,0)
 S X="INCOME (CURRENT YEAR) BELOW LTC THRESHOLD",DIC("DR")=".02////1"
"RTN","EAS1P7",20,0)
 D FILE^DICN
"RTN","EAS1P7",21,0)
 Q
"RTN","EASEC100")
0^14^B56889113
"RTN","EASEC100",1,0)
EASEC100 ;ALB/BRM - Print 1010EC LTC Enrollment form ; 3/1/02 8:22am
"RTN","EASEC100",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASEC100",3,0)
 ;
"RTN","EASEC100",4,0)
 ; This routine is called by EASEC10E to gather veteran data to be
"RTN","EASEC100",5,0)
 ; printed in the 1010EC (Long Term Care) form.
"RTN","EASEC100",6,0)
 ;
"RTN","EASEC100",7,0)
GETDATA(EASDFN,EAINFO) ;get veterans LTC data to be printed
"RTN","EASEC100",8,0)
 ;Input:
"RTN","EASEC100",9,0)
 ;   EASDFN - DFN for the Patient file (#2)
"RTN","EASEC100",10,0)
 ;Output:
"RTN","EASEC100",11,0)
 ;   ^TMP("1010EC",$J
"RTN","EASEC100",12,0)
 ;
"RTN","EASEC100",13,0)
 N EASROOT,DGINC,DGINR,DGREL,DGDEP
"RTN","EASEC100",14,0)
 S EASROOT="^TMP(""1010EC"",$J,"_EASDFN_","
"RTN","EASEC100",15,0)
 ; data for section 1
"RTN","EASEC100",16,0)
 D DATA1(EASDFN,.EAINFO,EASROOT)
"RTN","EASEC100",17,0)
 ; data for section 2
"RTN","EASEC100",18,0)
 D DATA2(EASDFN,EASROOT)
"RTN","EASEC100",19,0)
 ; data for section 3
"RTN","EASEC100",20,0)
 D DATA3(EASDFN,.EAINFO,EASROOT,.DGINC)
"RTN","EASEC100",21,0)
 ; data for section 4 and part of section 5
"RTN","EASEC100",22,0)
 D DATA4(EASDFN,EASROOT,.DGINC)
"RTN","EASEC100",23,0)
 ; data for section 5
"RTN","EASEC100",24,0)
 D DATA5(EASDFN,EASROOT,.DGINC)
"RTN","EASEC100",25,0)
 ; data for section 6
"RTN","EASEC100",26,0)
 D DATA6(EASDFN,EASROOT,.DGINC)
"RTN","EASEC100",27,0)
 ; data for section 8
"RTN","EASEC100",28,0)
 D DATA8(EASROOT,.EAINFO)
"RTN","EASEC100",29,0)
 Q
"RTN","EASEC100",30,0)
 ;
"RTN","EASEC100",31,0)
DATA1(EASDFN,EAINFO,EASROOT) ;data for section 1
"RTN","EASEC100",32,0)
 N EASINS,INSTMP,MDATA,EASROOT1,MPA,MPB,MPADT,MPBDT,MCN
"RTN","EASEC100",33,0)
 S EASROOT1=EASROOT_"1)"
"RTN","EASEC100",34,0)
 S @EASROOT1@(1)=$G(EAINFO("VET"))                     ;name
"RTN","EASEC100",35,0)
 S @EASROOT1@(2)=$G(EAINFO("SSN"))                      ;ssn
"RTN","EASEC100",36,0)
 S @EASROOT1@(3)=$$GET1^DIQ(2,EASDFN_",",".381","E")   ;medicaid
"RTN","EASEC100",37,0)
 ; **  determine medicare info
"RTN","EASEC100",38,0)
 S EASINS=0,(MPA,MPB)="NO",(MPADT,MPBDT,MCN)=""
"RTN","EASEC100",39,0)
 S MDATA=$$GETWNR^IBCNSMM1    ;
"RTN","EASEC100",40,0)
 I +MDATA D  ;
"RTN","EASEC100",41,0)
 .F  S EASINS=$O(^DPT(EASDFN,.312,EASINS)) Q:'EASINS  D
"RTN","EASEC100",42,0)
 ..S INSTMP=$G(^DPT(EASDFN,.312,EASINS,0))
"RTN","EASEC100",43,0)
 ..Q:$P(INSTMP,"^")'=+MDATA
"RTN","EASEC100",44,0)
 ..I $P(INSTMP,"^",18)=$P(MDATA,"^",3) S MPA="YES",MPADT=$$FMTE^XLFDT($P(INSTMP,"^",8)),MCN=$P(INSTMP,"^",2) Q
"RTN","EASEC100",45,0)
 ..I $P(INSTMP,"^",18)=$P(MDATA,"^",5) S MPB="YES",MPBDT=$$FMTE^XLFDT($P(INSTMP,"^",8)),MCN=$P(INSTMP,"^",2) Q
"RTN","EASEC100",46,0)
 S @EASROOT1@(4)=MPA      ;medicare part a
"RTN","EASEC100",47,0)
 S @EASROOT1@(5)=MPADT    ;medicare part a effective date
"RTN","EASEC100",48,0)
 S @EASROOT1@(6)=MPB      ;medicare part b
"RTN","EASEC100",49,0)
 S @EASROOT1@(7)=MPBDT    ;medicare part b effective date
"RTN","EASEC100",50,0)
 S @EASROOT1@(8)=MCN      ;medicare claim number
"RTN","EASEC100",51,0)
 Q
"RTN","EASEC100",52,0)
DATA2(EASDFN,EASROOT) ;data for section 2
"RTN","EASEC100",53,0)
 N EASINS,X,Z,EASROOT2,EASINS,CNT,NUM,EASIN1I,GRPIEN,INSUR
"RTN","EASEC100",54,0)
 S EASROOT2=EASROOT_"2)"
"RTN","EASEC100",55,0)
 S @EASROOT2@(1)=$$GET1^DIQ(2,EASDFN_",",".3192","E")  ;covered by ins
"RTN","EASEC100",56,0)
 F X=2:1:22 S @EASROOT2@(X)=""
"RTN","EASEC100",57,0)
 F I=3,10,17 F Z=.111:.001:.116 S @EASROOT2@(I,Z)=""
"RTN","EASEC100",58,0)
 S EASINS=0,CNT=2
"RTN","EASEC100",59,0)
 F  S EASINS=$O(^DPT(EASDFN,.312,EASINS)) Q:'EASINS!(CNT>16)  D
"RTN","EASEC100",60,0)
 .S EASIN1I=EASINS_","_EASDFN_","
"RTN","EASEC100",61,0)
 .D GETS^DIQ(2.312,EASIN1I,".18;1;16;17;","IE","INSUR")
"RTN","EASEC100",62,0)
 .S @EASROOT2@(CNT+3)=$G(INSUR(2.312,EASIN1I,17,"E"))  ;insured name
"RTN","EASEC100",63,0)
 .S @EASROOT2@(CNT+4)=$G(INSUR(2.312,EASIN1I,16,"E"))  ;relationship
"RTN","EASEC100",64,0)
 .S @EASROOT2@(CNT+5)=$G(INSUR(2.312,EASIN1I,1,"E"))  ;policy #
"RTN","EASEC100",65,0)
 .S GRPIEN=$G(INSUR(2.312,EASIN1I,.18,"I"))  ;group ien/name
"RTN","EASEC100",66,0)
 .S:GRPIEN @EASROOT2@(CNT+6)=$$GET1^DIQ(355.3,GRPIEN_",",".03","E")
"RTN","EASEC100",67,0)
 .D INSDAT(EASINS,CNT)
"RTN","EASEC100",68,0)
 .S CNT=CNT+7
"RTN","EASEC100",69,0)
 Q
"RTN","EASEC100",70,0)
INSDAT(EASINS,CNT) ;obtain insurance information from the insurance file (#36)
"RTN","EASEC100",71,0)
 Q:'EASINS
"RTN","EASEC100",72,0)
 N X,INSDAT,ERR
"RTN","EASEC100",73,0)
 D GETS^DIQ(36,EASINS_",",".01;.111:.116;.131","E","INSDAT","ERR")
"RTN","EASEC100",74,0)
 Q:$D(ERR)
"RTN","EASEC100",75,0)
 S @EASROOT2@(CNT)=$G(INSDAT(36,EASINS_",",.01,"E"))  ;insurance name
"RTN","EASEC100",76,0)
 F X=.111:.001:.116 S @EASROOT2@((CNT+1),X)=$G(INSDAT(36,EASINS_",",X,"E"))  ;insurance address
"RTN","EASEC100",77,0)
 S @EASROOT2@(CNT+2)=$G(INSDAT(36,EASINS_",",.131,"E"))  ;ins. phone
"RTN","EASEC100",78,0)
 Q
"RTN","EASEC100",79,0)
DATA3(EASDFN,EAINFO,EASROOT,DGINC) ;data for section 3
"RTN","EASEC100",80,0)
 N INFO13,DEP1,DEP,X,I,EASROOT3,SSN
"RTN","EASEC100",81,0)
 S EASROOT3=EASROOT_"3)"
"RTN","EASEC100",82,0)
 F X=1:1:11 S @EASROOT3@(X)=""
"RTN","EASEC100",83,0)
 D ALL^EASECU21(EASDFN,"SCV",EAINFO("MTDT"),"IPR",$G(EAINFO("DGMTIEN")))
"RTN","EASEC100",84,0)
 D:$D(DGREL("S"))
"RTN","EASEC100",85,0)
 .S INFO13=$G(^DGPR(408.13,+$P(DGREL("S"),"^",2),0))
"RTN","EASEC100",86,0)
 .S @EASROOT3@(1)=$P(INFO13,"^")  ;Spouse Name
"RTN","EASEC100",87,0)
 .S SSN=$P(INFO13,"^",9)          ;Spouse SSN
"RTN","EASEC100",88,0)
 .S @EASROOT3@(3)=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,9)
"RTN","EASEC100",89,0)
 .S:$G(DGINR("V")) @EASROOT3@(2)=$$GET1^DIQ(408.22,DGINR("V"),".16","E")                               ;Spouse Residing in the Community?
"RTN","EASEC100",90,0)
 Q:'$D(DGREL("C"))
"RTN","EASEC100",91,0)
 S DEP=""
"RTN","EASEC100",92,0)
 F  S DEP=$O(DGREL("C",DEP)) Q:'DEP!(DEP>2)  D
"RTN","EASEC100",93,0)
 .Q:'$D(^DGPR(408.13,+$P(DGREL("C",DEP),"^",2),0))
"RTN","EASEC100",94,0)
 .S INFO13=$G(^DGPR(408.13,+$P(DGREL("C",DEP),"^",2),0))
"RTN","EASEC100",95,0)
 .S DEP1=$S(DEP=1:4,DEP=2:8)
"RTN","EASEC100",96,0)
 .S @EASROOT3@(DEP1)=$P(INFO13,"^")                   ;Dependent Name
"RTN","EASEC100",97,0)
 .S @EASROOT3@(DEP1+1)=$$FMTE^XLFDT($P(INFO13,"^",3))  ;Dependent DOB
"RTN","EASEC100",98,0)
 .S SSN=$P(INFO13,"^",9)                               ;Dependent SSN
"RTN","EASEC100",99,0)
 .S @EASROOT3@(DEP1+2)=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,9)
"RTN","EASEC100",100,0)
 .S:$G(DGINR("C",DEP)) @EASROOT3@(DEP1+3)=$$GET1^DIQ(408.22,DGINR("C",DEP),".16","E")                  ;Dependent Living in Community?
"RTN","EASEC100",101,0)
 Q
"RTN","EASEC100",102,0)
DATA4(EASDFN,EASROOT,DGINC) ;data for section 4 and the first part of 5
"RTN","EASEC100",103,0)
 N EASROOT4,EASROOT5,ASSET
"RTN","EASEC100",104,0)
 S EASROOT4=EASROOT_"4)"
"RTN","EASEC100",105,0)
 S EASROOT5=EASROOT_"5)"
"RTN","EASEC100",106,0)
 F I=1:1:4 S @EASROOT4@(I)=""
"RTN","EASEC100",107,0)
 F I=1:1:5 S @EASROOT5@(I)=""
"RTN","EASEC100",108,0)
 Q:'$G(DGINC("V"))
"RTN","EASEC100",109,0)
 D GETS^DIQ(408.21,DGINC("V"),"2.01;2.02;2.06:2.09","I","ASSET")
"RTN","EASEC100",110,0)
 S @EASROOT4@(1)=+$G(ASSET(408.21,DGINC("V")_",",2.06,"I")) ;Residence
"RTN","EASEC100",111,0)
 S @EASROOT4@(2)=+$G(ASSET(408.21,DGINC("V")_",",2.07,"I")) ;Land/Farm
"RTN","EASEC100",112,0)
 S @EASROOT4@(3)=+$G(ASSET(408.21,DGINC("V")_",",2.08,"I")) ;Vehicles
"RTN","EASEC100",113,0)
 S @EASROOT4@(4)=@EASROOT4@(1)+@EASROOT4@(2)+@EASROOT4@(3) ;Sub-total
"RTN","EASEC100",114,0)
 S @EASROOT5@(1)=+$G(ASSET(408.21,DGINC("V")_",",2.01,"I")) ;Cash
"RTN","EASEC100",115,0)
 S @EASROOT5@(2)=+$G(ASSET(408.21,DGINC("V")_",",2.02,"I")) ;Stocks
"RTN","EASEC100",116,0)
 S @EASROOT5@(3)=+$G(ASSET(408.21,DGINC("V")_",",2.09,"I")) ;Other
"RTN","EASEC100",117,0)
 S @EASROOT5@(4)=@EASROOT5@(1)+@EASROOT5@(2)+@EASROOT5@(3) ;Sub-total
"RTN","EASEC100",118,0)
 S @EASROOT5@(5)=@EASROOT4@(4)+@EASROOT5@(4)  ;Total Assets
"RTN","EASEC100",119,0)
 Q
"RTN","EASEC100",120,0)
DATA5(EASDFN,EASROOT,DGINC) ;data for section 5 (the rest of it)
"RTN","EASEC100",121,0)
 N EASROOT5,ASSETV,ASSETS,NUM,X,ASSETRT,IENS,I
"RTN","EASEC100",122,0)
 S EASROOT5=EASROOT_"5)"
"RTN","EASEC100",123,0)
 F I=6:1:35 S @EASROOT5@(I)=""
"RTN","EASEC100",124,0)
 F X="V","S" Q:'$D(DGINC(X))  D  ;
"RTN","EASEC100",125,0)
 .D GETS^DIQ(408.21,+DGINC(X),".06:.2","I","ASSET"_X)
"RTN","EASEC100",126,0)
 .S NUM=$S(X="V":6,X="S":7)
"RTN","EASEC100",127,0)
 .S IENS=+DGINC(X)_","
"RTN","EASEC100",128,0)
 .S ASSETRT="ASSET"_X_"(408.21,"_""""_IENS_""""_","
"RTN","EASEC100",129,0)
 .S @EASROOT5@(NUM)=+$G(@(ASSETRT_".14,""I"")"))    ;Gross Income
"RTN","EASEC100",130,0)
 .S @EASROOT5@(NUM+2)=+$G(@(ASSETRT_".08,""I"")"))  ;Soc. Security
"RTN","EASEC100",131,0)
 .S @EASROOT5@(NUM+4)=+$G(@(ASSETRT_".15,""I"")"))  ;Interest/Div
"RTN","EASEC100",132,0)
 .S @EASROOT5@(NUM+6)=+$G(@(ASSETRT_".06,""I"")"))  ;Retire/Pension
"RTN","EASEC100",133,0)
 .S @EASROOT5@(NUM+8)=+$G(@(ASSETRT_".09,""I"")"))  ;Civil Service
"RTN","EASEC100",134,0)
 .S @EASROOT5@(NUM+10)=+$G(@(ASSETRT_".1,""I"")"))  ;US Railroad
"RTN","EASEC100",135,0)
 .S @EASROOT5@(NUM+12)=+$G(@(ASSETRT_".07,""I"")"))  ;VA Pension
"RTN","EASEC100",136,0)
 .S @EASROOT5@(NUM+14)=+$G(@(ASSETRT_".19,""I"")"))  ;Spouse Disab
"RTN","EASEC100",137,0)
 .S @EASROOT5@(NUM+16)=+$G(@(ASSETRT_".12,""I"")"))  ;Unemployment
"RTN","EASEC100",138,0)
 .S @EASROOT5@(NUM+18)=+$G(@(ASSETRT_".16,""I"")"))  ;Workers Comp,etc
"RTN","EASEC100",139,0)
 .S @EASROOT5@(NUM+20)=+$G(@(ASSETRT_".11,""I"")"))  ;Military Retire
"RTN","EASEC100",140,0)
 .S @EASROOT5@(NUM+22)=+$G(@(ASSETRT_".13,""I"")"))  ;Other Retire
"RTN","EASEC100",141,0)
 .S @EASROOT5@(NUM+24)=+$G(@(ASSETRT_".2,""I"")"))  ;Court Mandated
"RTN","EASEC100",142,0)
 .S @EASROOT5@(NUM+26)=+$G(@(ASSETRT_".17,""I"")"))  ;Other Income
"RTN","EASEC100",143,0)
 .F I=NUM:2:NUM+26 S @EASROOT5@(NUM+28)=@EASROOT5@(NUM+28)+@EASROOT5@(I)  ;Total Income
"RTN","EASEC100",144,0)
 Q
"RTN","EASEC100",145,0)
DATA6(EASDFN,EASROOT,DGINC) ;
"RTN","EASEC100",146,0)
 N IENS,EXPRT,EASROOT6,EXPENSE
"RTN","EASEC100",147,0)
 S EASROOT6=EASROOT_"6)"
"RTN","EASEC100",148,0)
 F I=1:1:11 S @EASROOT6@(I)=""
"RTN","EASEC100",149,0)
 Q:'$G(DGINC("V"))
"RTN","EASEC100",150,0)
 D GETS^DIQ(408.21,+DGINC("V"),"1.01:1.1","I","EXPENSE")
"RTN","EASEC100",151,0)
 S IENS=+DGINC("V")_","
"RTN","EASEC100",152,0)
 S EXPRT="EXPENSE(408.21,"_""""_IENS_""""_","
"RTN","EASEC100",153,0)
 S @EASROOT6@(1)=+$G(@(EXPRT_"1.03,""I"")"))  ;Education
"RTN","EASEC100",154,0)
 S @EASROOT6@(2)=+$G(@(EXPRT_"1.02,""I"")"))  ;Funeral and Burial
"RTN","EASEC100",155,0)
 S @EASROOT6@(3)=+$G(@(EXPRT_"1.04,""I"")"))  ;Rent/Mortgage
"RTN","EASEC100",156,0)
 S @EASROOT6@(4)=+$G(@(EXPRT_"1.05,""I"")"))  ;Utilities
"RTN","EASEC100",157,0)
 S @EASROOT6@(5)=+$G(@(EXPRT_"1.06,""I"")"))  ;Car Payment
"RTN","EASEC100",158,0)
 S @EASROOT6@(6)=+$G(@(EXPRT_"1.07,""I"")"))  ;Food
"RTN","EASEC100",159,0)
 S @EASROOT6@(7)=+$G(@(EXPRT_"1.01,""I"")"))  ;Medical Expenses
"RTN","EASEC100",160,0)
 S @EASROOT6@(8)=+$G(@(EXPRT_"1.08,""I"")"))  ;Court-Ordered Payments
"RTN","EASEC100",161,0)
 S @EASROOT6@(9)=+$G(@(EXPRT_"1.09,""I"")"))  ;Insurance
"RTN","EASEC100",162,0)
 S @EASROOT6@(10)=+$G(@(EXPRT_"1.1,""I"")"))  ;Taxes (Income, etc)
"RTN","EASEC100",163,0)
 F I=1:1:10 S @EASROOT6@(11)=@EASROOT6@(11)+@EASROOT6@(I)  ;Total Expenses
"RTN","EASEC100",164,0)
 Q
"RTN","EASEC100",165,0)
DATA8(EASROOT,EAINFO) ;get the word processing field for section 8
"RTN","EASEC100",166,0)
 N LINE,X,EASROOT8,IENS,WP
"RTN","EASEC100",167,0)
 S EASROOT8=EASROOT_"8)",LINE=0
"RTN","EASEC100",168,0)
 Q:'EAINFO("DGMTIEN")
"RTN","EASEC100",169,0)
 S IENS=EAINFO("DGMTIEN")_","
"RTN","EASEC100",170,0)
 S X=$$GET1^DIQ(408.31,IENS,50,"","WP")
"RTN","EASEC100",171,0)
 F  S LINE=$O(WP(LINE)) Q:'LINE  S @EASROOT8@(LINE)=$G(WP(LINE))
"RTN","EASEC100",172,0)
 Q
"RTN","EASEC102")
0^23^B33419152
"RTN","EASEC102",1,0)
EASEC102 ;ALB/BRM - Print 1010EC LTC Enrollment form ; 9/20/01 12:25pm
"RTN","EASEC102",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASEC102",3,0)
 ;
"RTN","EASEC102",4,0)
 ; Called from ^EASEC10E to print page 2 of the 1010EC
"RTN","EASEC102",5,0)
 ;
"RTN","EASEC102",6,0)
PAGE2(EALNE,EAINFO,EASDFN) ;Print page 2
"RTN","EASEC102",7,0)
 N X,EASROOT
"RTN","EASEC102",8,0)
 S EASROOT="^TMP(""1010EC"",$J,"_EASDFN_","
"RTN","EASEC102",9,0)
 D HDR^EASEC10E(.EALNE,.EAINFO)
"RTN","EASEC102",10,0)
 D SIGN
"RTN","EASEC102",11,0)
 D SEC4
"RTN","EASEC102",12,0)
 D SEC5
"RTN","EASEC102",13,0)
 D FT^EASEC10E(.EALNE,.EAINFO)
"RTN","EASEC102",14,0)
 Q
"RTN","EASEC102",15,0)
SIGN ;print disclaimer and signature block to refuse income data
"RTN","EASEC102",16,0)
 ;
"RTN","EASEC102",17,0)
 W !,"I do not wish to provide my detailed financial information.  "
"RTN","EASEC102",18,0)
 W "I understand that I will be assessed the maximum copayment amount for"
"RTN","EASEC102",19,0)
 W !,"extended care services and agree to pay the applicable VA copayment as required by law.",?131,$C(13) X EAINFO("L")
"RTN","EASEC102",20,0)
 W !,"Signature",?100,"| Date",!?100,"|",?131,$C(13) X EAINFO("L")
"RTN","EASEC102",21,0)
 Q
"RTN","EASEC102",22,0)
 ;
"RTN","EASEC102",23,0)
SEC4 ; print section 4 - Fixed Assets (Veteran and Spouse)
"RTN","EASEC102",24,0)
 N EAS4
"RTN","EASEC102",25,0)
 S EAS4=EASROOT_"4)"
"RTN","EASEC102",26,0)
 W !?23,"SECTION IV - FIXED ASSETS (VETERAN AND SPOUSE)",?100,"|",?113,"VALUE",!,EALNE("D")
"RTN","EASEC102",27,0)
 ;
"RTN","EASEC102",28,0)
 W !,"1. Residence (Market value minus any outstanding mortgage or "
"RTN","EASEC102",29,0)
 W "lien - exclude if veteran",?100,"|",?105,"$",$J(@EAS4@(1),12,2)
"RTN","EASEC102",30,0)
 W !?3,"receiving only non-institutional services or spouse or "
"RTN","EASEC102",31,0)
 W "dependent residing in community).",?100,"|",?131,$C(13) X EAINFO("L")
"RTN","EASEC102",32,0)
 ;
"RTN","EASEC102",33,0)
 W !,"2. Other Residences/Land/Farm or Ranch (Market value minus any "
"RTN","EASEC102",34,0)
 W "outstanding mortgage or lien)",?100,"|",?105,"$",$J(@EAS4@(2),12,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",35,0)
 ;
"RTN","EASEC102",36,0)
 W !,"3. Vehicle(s)* (Value minus any outstanding lien - exclude if veteran is "
"RTN","EASEC102",37,0)
 W "receiving only",?100,"|",?105,"$",$J(@EAS4@(3),12,2)
"RTN","EASEC102",38,0)
 W !?3,"non-institutional services or spouse or dependent residing in community).",?100,"|",?131,$C(13) X EAINFO("L")
"RTN","EASEC102",39,0)
 ;
"RTN","EASEC102",40,0)
 W !?62,"| SUBTOTAL (Sum of lines 1 through 3)",?100,"|",?105,"$",$J(@EAS4@(4),12,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",41,0)
 Q
"RTN","EASEC102",42,0)
SEC5 ; print section 5 - Liquid Assets (Veteran and Spouse)
"RTN","EASEC102",43,0)
 N EAS5
"RTN","EASEC102",44,0)
 S EAS5=EASROOT_"5)"
"RTN","EASEC102",45,0)
 W !?23,"SECTION V - LIQUID ASSETS (VETERAN AND SPOUSE)",?100,"|",?113,"VALUE",!,EALNE("D")
"RTN","EASEC102",46,0)
 ;
"RTN","EASEC102",47,0)
 W !,"1. Cash, e.g., interest, dividends from IRA, 401K's and other "
"RTN","EASEC102",48,0)
 W "tax deferred annuities ",?100,"|",?105,"$",$J(@EAS5@(1),12,2)
"RTN","EASEC102",49,0)
 W !?3,"(including checking, savings, money market, etc.)"
"RTN","EASEC102",50,0)
 W ?100,"|",?131,$C(13) X EAINFO("L")
"RTN","EASEC102",51,0)
 ;
"RTN","EASEC102",52,0)
 W !,"2. Stocks, bonds, mutual funds, SEP's, and other retirement "
"RTN","EASEC102",53,0)
 W "accounts (e.g., IRA, 401K,",?100,"|",?105,"$",$J(@EAS5@(2),12,2)
"RTN","EASEC102",54,0)
 W !?3,"annuities, self-employed person)",?100,"|",?131,$C(13) X EAINFO("L")
"RTN","EASEC102",55,0)
 ;
"RTN","EASEC102",56,0)
 W !,"3. Other Liquid Assets (Includes such items as stamp or coin "
"RTN","EASEC102",57,0)
 W "collections, art work, collectibles",?100,"|"
"RTN","EASEC102",58,0)
 W !?3,"household furniture and other household goods, clothing, jewelry, and "
"RTN","EASEC102",59,0)
 W "personal items",?100,"|",?105,"$",$J(@EAS5@(3),12,2)
"RTN","EASEC102",60,0)
 W !?3,"minus amount owed).",?100,"|",?131,$C(13) X EAINFO("L")
"RTN","EASEC102",61,0)
 ;
"RTN","EASEC102",62,0)
 W !?62,"| SUBTOTAL (Sum of lines 1 through 3)",?100,"|",?105,"$",$J(@EAS5@(4),12,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",63,0)
 ;
"RTN","EASEC102",64,0)
 W !,"SUM OF ALL LINES FIXED AND LIQUID ASSETS",?62,"|"
"RTN","EASEC102",65,0)
 W ?83,"TOTAL ASSETS",?100,"|",?105,"$",$J(@EAS5@(5),12,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",66,0)
 ;
"RTN","EASEC102",67,0)
 W !?45,"CATEGORY",?97,"|",?102,"VETERAN",?113,"|",?119,"SPOUSE",?131,$C(13) X EAINFO("L")
"RTN","EASEC102",68,0)
 ;
"RTN","EASEC102",69,0)
 W !,"Current income, e.g. gross income (including, but not limited "
"RTN","EASEC102",70,0)
 W "to, wages and income from",?97,"| $",$J(@EAS5@(6),10,2),?113,"| $",$J(@EAS5@(7),10,2)
"RTN","EASEC102",71,0)
 W !,"a business, bonuses, tips, severance pay, accrued benefits, "
"RTN","EASEC102",72,0)
 W "cash gifts)",?97,"|",?113,"|",?131,$C(13) X EAINFO("L")
"RTN","EASEC102",73,0)
 ;
"RTN","EASEC102",74,0)
 W !,"Social Security Retirement/Disability",?97,"| $",$J(@EAS5@(8),10,2),?113,"| $",$J(@EAS5@(9),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",75,0)
 ;
"RTN","EASEC102",76,0)
 W !,"Interest/Dividends (i.e., interest income, standard dividend "
"RTN","EASEC102",77,0)
 W "income from non tax deferred",?97,"| $",$J(@EAS5@(10),10,2),?113,"| $",$J(@EAS5@(11),10,2)
"RTN","EASEC102",78,0)
 W !,"annuities)",?97,"|",?113,"|",?131,$C(13) X EAINFO("L")
"RTN","EASEC102",79,0)
 ;
"RTN","EASEC102",80,0)
 W !,"Retirement and Pension income",?97,"| $",$J(@EAS5@(12),10,2),?113,"| $",$J(@EAS5@(13),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",81,0)
 ;
"RTN","EASEC102",82,0)
 W !,"Civil Service Retirement",?97,"| $",$J(@EAS5@(14),10,2),?113,"| $",$J(@EAS5@(15),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",83,0)
 ;
"RTN","EASEC102",84,0)
 W !,"US Railroad Retirement",?97,"| $",$J(@EAS5@(16),10,2),?113,"| $",$J(@EAS5@(17),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",85,0)
 ;
"RTN","EASEC102",86,0)
 W !,"VA Pension",?97,"| $",$J(@EAS5@(18),10,2),?113,"| $",$J(@EAS5@(19),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",87,0)
 ;
"RTN","EASEC102",88,0)
 W !,"Spouse VA disability/compensation",?97,"| $",$J(@EAS5@(20),10,2),?113,"| $",$J(@EAS5@(21),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",89,0)
 ;
"RTN","EASEC102",90,0)
 W !,"Unemployment Benefits/Compensation",?97,"| $",$J(@EAS5@(22),10,2),?113,"| $",$J(@EAS5@(23),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",91,0)
 ;
"RTN","EASEC102",92,0)
 W !,"Other compensation, e.g. Workers Compensation and Black Lung",?97,"| $",$J(@EAS5@(24),10,2),?113,"| $",$J(@EAS5@(25),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",93,0)
 ;
"RTN","EASEC102",94,0)
 W !,"Military Retirement",?97,"| $",$J(@EAS5@(26),10,2),?113,"| $",$J(@EAS5@(27),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",95,0)
 ;
"RTN","EASEC102",96,0)
 W !,"Other Retirement",?97,"| $",$J(@EAS5@(28),10,2),?113,"| $",$J(@EAS5@(29),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",97,0)
 ;
"RTN","EASEC102",98,0)
 W !,"Court Mandated (e.g. alimony, child support) (Veteran and Spouse)",?97,"| $",$J(@EAS5@(30),10,2),?113,"| $",$J(@EAS5@(31),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",99,0)
 ;
"RTN","EASEC102",100,0)
 W !,"Other Income (i.e., inheritance amounts, tort settlement "
"RTN","EASEC102",101,0)
 W "payments)",?97,"| $",$J(@EAS5@(32),10,2),?113,"| $",$J(@EAS5@(33),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC102",102,0)
 W !,?82,"|    TOTALS",?97,"| $",$J(@EAS5@(34),10,2),?113,"| $",$J(@EAS5@(35),10,2)
"RTN","EASEC102",103,0)
 Q
"RTN","EASEC103")
0^24^B20291884
"RTN","EASEC103",1,0)
EASEC103 ;ALB/BRM - Print 1010EC LTC Enrollment form ; 9/7/01 9:49am
"RTN","EASEC103",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASEC103",3,0)
 ;
"RTN","EASEC103",4,0)
 ; Called from ^EASEC10E to print page 3 of the 1010EC
"RTN","EASEC103",5,0)
 ;
"RTN","EASEC103",6,0)
PAGE3(EALNE,EAINFO,EASDFN) ;Print page 3
"RTN","EASEC103",7,0)
 N X,EASROOT
"RTN","EASEC103",8,0)
 S EASROOT="^TMP(""1010EC"",$J,"_EASDFN_","
"RTN","EASEC103",9,0)
 D HDR^EASEC10E(.EALNE,.EAINFO)
"RTN","EASEC103",10,0)
 D SEC6
"RTN","EASEC103",11,0)
 D SEC7
"RTN","EASEC103",12,0)
 D SEC8
"RTN","EASEC103",13,0)
 D FT^EASEC10E(.EALNE,.EAINFO)
"RTN","EASEC103",14,0)
 Q
"RTN","EASEC103",15,0)
 ;
"RTN","EASEC103",16,0)
SEC6 ; print section 6 - Expenses
"RTN","EASEC103",17,0)
 N EAS6
"RTN","EASEC103",18,0)
 S EAS6=EASROOT_"6)"
"RTN","EASEC103",19,0)
 ;
"RTN","EASEC103",20,0)
 W !?55,"SECTION VI - EXPENSES",!,EALNE("D")
"RTN","EASEC103",21,0)
 W !?54,"ITEMS",?113,"|",?119,"AMOUNT",?131,$C(13) X EAINFO("L")
"RTN","EASEC103",22,0)
 W !,"1. Education (veteran, spouse or dependent)",?113,"| $",$J(@EAS6@(1),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",23,0)
 W !,"2. Funeral and Burial (spouse or child)",?113,"| $",$J(@EAS6@(2),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",24,0)
 W !,"3. Rent/Mortgage",?113,"| $",$J(@EAS6@(3),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",25,0)
 W !,"4. Utilities",?113,"| $",$J(@EAS6@(4),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",26,0)
 W !,"5. Car Payment Only (excludes gas, insurance, parking fees)",?113,"| $",$J(@EAS6@(5),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",27,0)
 W !,"6. Food",?113,"| $",$J(@EAS6@(6),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",28,0)
 W !,"7. Non-reimbursed medical expenses",?113,"| $",$J(@EAS6@(7),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",29,0)
 W !,"8. Court-ordered payments",?113,"| $",$J(@EAS6@(8),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",30,0)
 W !,"9. Insurance (exclude life insurance)",?113,"| $",$J(@EAS6@(9),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",31,0)
 W !,"10. Taxes (on any amount include in gross income, property, personal)",?113,"| $",$J(@EAS6@(10),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",32,0)
 W !,?95,"|      TOTAL",?113,"| $",$J(@EAS6@(11),10,2),?131,$C(13) X EAINFO("L")
"RTN","EASEC103",33,0)
 Q
"RTN","EASEC103",34,0)
SEC7 ;print section 7 - Consent for Assignment of Benefits
"RTN","EASEC103",35,0)
 W !?42,"SECTION VII - CONSENT FOR ASSIGNMENT OF BENEFITS",!,EALNE("D")
"RTN","EASEC103",36,0)
 W !,"I hereby authorize the Department of Veterans Affairs to disclose any such history, diagnostic and treatment information from my"
"RTN","EASEC103",37,0)
 W !,"medical records to the contractor of any health plan contract under which I am apparently eligible for medical care or payment of"
"RTN","EASEC103",38,0)
 W !,"the expense of care or to any other party against whom liability is asserted.  I understand that I may revoke this authorization at"
"RTN","EASEC103",39,0)
 W !,"any time, except to the extent that action has already been taken in reliance on it.  Without my express revocation, this consent"
"RTN","EASEC103",40,0)
 W !,"will automatically expire when all action arising from VA's claim for reimbursement from my medical care has been completed."
"RTN","EASEC103",41,0)
 W !,"I authorize payment of medical benefits to VA for any services for which payment is accepted.",?131,$C(13) X EAINFO("L")
"RTN","EASEC103",42,0)
 W !,"Signature",?100,"| Date",!?100,"|",?131,$C(13) X EAINFO("L")
"RTN","EASEC103",43,0)
 Q
"RTN","EASEC103",44,0)
SEC8 ;print section 8 - Consent and Agreement to make copayments
"RTN","EASEC103",45,0)
 N I,WPLINE,EAS8,WPCNT
"RTN","EASEC103",46,0)
 S EAS8=EASROOT_"8)",WPLINE=0,WPCNT=1
"RTN","EASEC103",47,0)
 W !?39,"SECTION VIII - CONSENT AND AGREEMENT TO MAKE COPAYMENTS",!,EALNE("D")
"RTN","EASEC103",48,0)
 W !,"Completion of this form with signature of the Veteran or veteran's representative is certification that the veteran/representative"
"RTN","EASEC103",49,0)
 W !,"has received a copy of the Privacy Act Statement and agrees to make appropriate copayments."
"RTN","EASEC103",50,0)
 W !!,"I certify the foregoing statement(s) are true and correct to the best of my knowledge and belief and agree to make the applicable"
"RTN","EASEC103",51,0)
 W !,"copayment for extended care services as required by law.",?131,$C(13) X EAINFO("L")
"RTN","EASEC103",52,0)
 W !,"Signature",?100,"| Date",!?100,"|",?131,$C(13) X EAINFO("L")
"RTN","EASEC103",53,0)
 W !,"Additional Comments:"
"RTN","EASEC103",54,0)
 D:$D(EAS8)
"RTN","EASEC103",55,0)
 .F  S WPLINE=$O(@EAS8@(WPLINE)) Q:'WPLINE  S WPCNT=WPCNT+1 W !,@EAS8@(WPLINE)
"RTN","EASEC103",56,0)
 F I=WPCNT:1:14 W !
"RTN","EASEC103",57,0)
 Q
"RTN","EASECA")
0^1^B9749435
"RTN","EASECA",1,0)
EASECA ;ALB/PHH - Add a New LTC Co-Pay Test ;10 AUG 2001
"RTN","EASECA",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECA",3,0)
 ;
"RTN","EASECA",4,0)
EN ;Entry point to add a new LTC Co-Pay test
"RTN","EASECA",5,0)
 N DGMDOD S DGMDOD=""
"RTN","EASECA",6,0)
 S DGMTYPT=3
"RTN","EASECA",7,0)
 I $D(DGMTDFN)#2 K DGMTDFN
"RTN","EASECA",8,0)
 S DIC="^DPT(",DIC(0)="AEMQ" W !! D ^DIC K DIC G Q:Y<0 S (DFN,DGMTDFN)=+Y
"RTN","EASECA",9,0)
 I $P($G(^DPT(DFN,.35)),U)'="" S DGMDOD=$P(^DPT(DFN,.35),U)
"RTN","EASECA",10,0)
 I $G(DGMDOD) W !,"Patient died on: ",$$FMTE^XLFDT(DGMDOD,"1D") Q
"RTN","EASECA",11,0)
 ;
"RTN","EASECA",12,0)
 S DGLDT=$$LST^EASECU(DFN,"",DGMTYPT),DGLD=$P(DGLDT,U,2),DGLDYR=$E(DGLD,1,3)_"1231"
"RTN","EASECA",13,0)
 ;
"RTN","EASECA",14,0)
DT S %DT("A")="DATE OF LTC COPAY TEST: ",%DT="AEX",%DT(0)="-NOW",%DT("B")="NOW" W ! D ^%DT K %DT G Q:Y<0 S DGMTDT=Y
"RTN","EASECA",15,0)
 ;I DGMTDT<3011001 W !?3,*7,"The date of test cannot be before 10/01/2001." G DT
"RTN","EASECA",16,0)
 I DGLD,DGMTDT<DGLD W !?3,*7,"The date of test cannot be before the last date of test on " S Y=DGLD X ^DD("DD") W Y,"." G DT
"RTN","EASECA",17,0)
 I DGLD S X1=DGMTDT,X2=DGLD D ^%DTC I X<365,DGMTDT'>DGLDYR D  G EN
"RTN","EASECA",18,0)
 .W !?3,*7,"An LTC Copay Test already exists on " S Y=DGLD X ^DD("DD") W Y,"."
"RTN","EASECA",19,0)
 .S DGTTYP="LTC COPAY "
"RTN","EASECA",20,0)
 .W !,$S($P($G(^DG(408.34,+$P($G(^DGMT(408.31,+DGLDT,0)),U,23),0)),U)="VAMC":"   Use the 'EASEC "_DGTTYP_"TEST EDIT' Option.",1:"   Use the 'EASEC "_DGTTYP_"TEST VIEW' Option.")
"RTN","EASECA",21,0)
 ;
"RTN","EASECA",22,0)
 D ADD G EN:DGMTI<0
"RTN","EASECA",23,0)
 ; Is veteran exempt from LTC copayments?
"RTN","EASECA",24,0)
 W !!,"... checking if veteran is exempt from LTC copayments ...",!
"RTN","EASECA",25,0)
 S DGEXMPT=$$EXMPT^EASECU(DFN)
"RTN","EASECA",26,0)
 I DGEXMPT D EXMPT^EASECSCC(DFN,DGMTI,DGEXMPT) D Q G EN
"RTN","EASECA",27,0)
 ; Check if veteran's income is below the pension threshold
"RTN","EASECA",28,0)
 D EN^EASECMT I $G(DGOUT) D DEL,Q G EN
"RTN","EASECA",29,0)
 I DGEXMPT D EXMPT^EASECSCC(DFN,DGMTI,2) D Q G EN
"RTN","EASECA",30,0)
 W !! F I=1:1:80 W "="
"RTN","EASECA",31,0)
 W !!,?10,"Veteran is NOT EXEMPT from Long Term Care copayments and"
"RTN","EASECA",32,0)
 W !,?10,"must complete a 10-10EC form."
"RTN","EASECA",33,0)
 W !! F I=1:1:80 W "="
"RTN","EASECA",34,0)
 ; Does veteran decline to provide income information?
"RTN","EASECA",35,0)
 W !!
"RTN","EASECA",36,0)
 D REF^EASECSCC I $D(DTOUT)!($D(DUOUT)) D Q G EN
"RTN","EASECA",37,0)
 I $D(DGREF) D  D Q G EN
"RTN","EASECA",38,0)
 .; Ask if veteran agrees to pay copayments; complete LTC copay test
"RTN","EASECA",39,0)
 .D AGREE^EASECSCC Q:$D(DTOUT)!($D(DUOUT))
"RTN","EASECA",40,0)
 .S DGSTA="NON-EXEMPT",DGCAT="T" D STA^DGMTSCU2 S (DGINT,DGDET,DGNWT)=""
"RTN","EASECA",41,0)
 .D UPD^EASECSCC
"RTN","EASECA",42,0)
 ; Go to LTC co-pay test (1010-EC) input screens
"RTN","EASECA",43,0)
 S DGMTACT="ADD",DGMTROU="EN^EASECA" G EN^EASECSC
"RTN","EASECA",44,0)
 ;
"RTN","EASECA",45,0)
Q K DA,DFN,DGADDF,DGBL,DGCAT,DGEXMPT,DGFL,DGFLD,DGIRO,DGLD,DGLDT,DGLDYR
"RTN","EASECA",46,0)
 K DGMTACT,DGMTCOR,DGMTDT,DGMTI,DGMTROU,DGMTYPT,DGOUT,DGREQF,DGSTA
"RTN","EASECA",47,0)
 K DGTTYP,DGVI,DGVO,DTOUT,DUOUT,X,X1,X2,Y
"RTN","EASECA",48,0)
 Q
"RTN","EASECA",49,0)
 ;
"RTN","EASECA",50,0)
ADD ;Add LTC Copay test
"RTN","EASECA",51,0)
 ; Input  -- DFN     Patient IEN
"RTN","EASECA",52,0)
 ;           DGMTDT  Date
"RTN","EASECA",53,0)
 ;           DGMTYPT Type of Test 3 = LTC Copay
"RTN","EASECA",54,0)
 ; Output -- DGMTI   Annual LTC Copay Test IEN
"RTN","EASECA",55,0)
 N DA,DD,DIC,DIK,DINUM,DLAYGO,DO,DS,X,D0,DGSITE
"RTN","EASECA",56,0)
 ;
"RTN","EASECA",57,0)
 S X=DGMTDT,(DIC,DIK)="^DGMT(408.31,",DIC(0)="L",DLAYGO=408.31
"RTN","EASECA",58,0)
 S DGSITE=$$GETSITE^DGMTU4(.DUZ)
"RTN","EASECA",59,0)
 S DIC("DR")=".02////"_DFN_";.019////"_DGMTYPT_";.23////1;2.05////"_DGSITE
"RTN","EASECA",60,0)
 K DD,D0
"RTN","EASECA",61,0)
 D FILE^DICN S DGMTI=+Y
"RTN","EASECA",62,0)
ADDQ Q
"RTN","EASECA",63,0)
 ;
"RTN","EASECA",64,0)
DEL ;Delete incomplete LTC Copay test
"RTN","EASECA",65,0)
 ; Input   -- DGMTI  LTC Copay test IEN
"RTN","EASECA",66,0)
 N DA,DIK
"RTN","EASECA",67,0)
 Q:'$G(DGMTI)  Q:$P($G(^DGMT(408.31,DGMTI,0)),U,19)'=3
"RTN","EASECA",68,0)
 S DA=DGMTI,DIK="^DGMT(408.31,"
"RTN","EASECA",69,0)
 D ^DIK
"RTN","EASECA",70,0)
 Q
"RTN","EASECCAL")
0^8^B11161595
"RTN","EASECCAL",1,0)
EASECCAL ;ALB/LBD - Calculate LTC co-payment ;27 AUG 2001
"RTN","EASECCAL",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECCAL",3,0)
 ;
"RTN","EASECCAL",4,0)
 ; Input --   DFN    Patient IEN
"RTN","EASECCAL",5,0)
 ;            MNTH   Last day of month for the LTC co-pay calculation
"RTN","EASECCAL",6,0)
 ;                    in FM format (e.g. 3020131)
"RTN","EASECCAL",7,0)
 ;            LOS    (Length of stay) The number of days in the patient's
"RTN","EASECCAL",8,0)
 ;                    LTC episode
"RTN","EASECCAL",9,0)
 ; Output --  COPAY  String containing co-payment calculation
"RTN","EASECCAL",10,0)
 ;                    = 0: no completed LTC co-pay test on file
"RTN","EASECCAL",11,0)
 ;                    piece 1: LTC co-pay test status
"RTN","EASECCAL",12,0)
 ;                               (1=Exempt; 2=Non-Exempt)
"RTN","EASECCAL",13,0)
 ;                          2: If Exempt, Reason for Exemption
"RTN","EASECCAL",14,0)
 ;                               (IEN to file #714.1)
"RTN","EASECCAL",15,0)
 ;                          3: Calculated LTC co-payment for IP 
"RTN","EASECCAL",16,0)
 ;                               (1-180 days)
"RTN","EASECCAL",17,0)
 ;                          4: Calculated LTC co-payment for IP
"RTN","EASECCAL",18,0)
 ;                               (181+ days)
"RTN","EASECCAL",19,0)
 ;                          5: Calculated LTC co-payment for OP
"RTN","EASECCAL",20,0)
 ;
"RTN","EASECCAL",21,0)
COPAY(DFN,MNTH,LOS) ;
"RTN","EASECCAL",22,0)
 N COPAY,DAYS,IPMAX,OPMAX,LST,DGMT,DGMTI,DGMTDT,DGSTA,ERR,X1,X2
"RTN","EASECCAL",23,0)
 S COPAY=0
"RTN","EASECCAL",24,0)
 I 'DFN!('MNTH) G Q
"RTN","EASECCAL",25,0)
 S LOS=+$G(LOS),DAYS=$E(MNTH,6,7),IPMAX=97*DAYS,OPMAX=15*DAYS
"RTN","EASECCAL",26,0)
 ; Get last completed LTC co-pay test
"RTN","EASECCAL",27,0)
 S LST=$$LST^EASECU(DFN,MNTH,3) I +LST=0 G Q
"RTN","EASECCAL",28,0)
 S DGMTI=$P(LST,U),DGMT(0)=$G(^DGMT(408.31,DGMTI,0)) I 'DGMT(0) G Q
"RTN","EASECCAL",29,0)
 S DGMTDT=+DGMT(0),DGSTA=$P($G(^DG(408.32,+$P(DGMT(0),U,3),0)),U,1)
"RTN","EASECCAL",30,0)
 ; If LTC co-pay test status is neither NON-EXEMPT nor EXEMPT, quit
"RTN","EASECCAL",31,0)
 I DGSTA'="NON-EXEMPT",DGSTA'="EXEMPT" G Q
"RTN","EASECCAL",32,0)
 ; If LTC co-pay test is more than a year old, quit
"RTN","EASECCAL",33,0)
 S X1=MNTH,X2=DGMTDT D ^%DTC I X>365 G Q
"RTN","EASECCAL",34,0)
 S COPAY=$S(DGSTA="EXEMPT":1,1:2)_U
"RTN","EASECCAL",35,0)
 ; If test status = 'EXEMPT', get Reason for Exemption
"RTN","EASECCAL",36,0)
 I DGSTA="EXEMPT" S COPAY=COPAY_$P($G(^DGMT(408.31,DGMTI,2)),U,7)
"RTN","EASECCAL",37,0)
 ; If veteran declined to give financial info, co-pay = max monthly co-pay
"RTN","EASECCAL",38,0)
 I $P(DGMT(0),U,14) S COPAY=COPAY_U_IPMAX_U_IPMAX_U_OPMAX G Q
"RTN","EASECCAL",39,0)
 ; Get total income, assets and expenses for veteran (and spouse)
"RTN","EASECCAL",40,0)
 D FINTOT I $G(ERR) G Q
"RTN","EASECCAL",41,0)
 ; Calculate co-payments
"RTN","EASECCAL",42,0)
 D CALC
"RTN","EASECCAL",43,0)
Q ; Quit and return COPAY
"RTN","EASECCAL",44,0)
 Q COPAY
"RTN","EASECCAL",45,0)
 ;
"RTN","EASECCAL",46,0)
FINTOT ; Get total income, assets and expenses for veteran (and spouse)
"RTN","EASECCAL",47,0)
 N DGDC,DGDEP,DGDET,DGERR,DGIN0,DGIN1,DGIN2,DGINI,DGINT,DGINTF,DGIRI
"RTN","EASECCAL",48,0)
 N DGNC,DGND,DGNWT,DGNWTF,DGPRI,DGVINI,DGVIR0,DGVIRI
"RTN","EASECCAL",49,0)
 S ERR=0
"RTN","EASECCAL",50,0)
 S DGPRI=$O(^DGPR(408.12,"C",DFN_";DPT(",0)) I 'DGPRI S ERR=1 Q
"RTN","EASECCAL",51,0)
 D GETIENS^EASECU2(DFN,DGPRI,DGMTDT) I '$G(DGIRI),'$G(DGINI) S ERR=1 Q
"RTN","EASECCAL",52,0)
 S DGVIRI=DGIRI,DGVINI=DGINI
"RTN","EASECCAL",53,0)
 D DEP^EASECSU3
"RTN","EASECCAL",54,0)
 D INC^EASECSU3
"RTN","EASECCAL",55,0)
 I DGINT=0,DGDET=0,DGNWT=0 S ERR=1 Q
"RTN","EASECCAL",56,0)
 ; Does spouse reside in community?  Does spouse live with patient?
"RTN","EASECCAL",57,0)
 S SRIC=$P(DGVIR0,U,16),SLIV=$P(DGVIR0,U,15)
"RTN","EASECCAL",58,0)
 ; Divide income and expense totals by 12 to get monthly amounts
"RTN","EASECCAL",59,0)
 S INC=DGINT/12,EXP=DGDET/12,AST=DGNWT
"RTN","EASECCAL",60,0)
 ; Calculate total monthly allowance:
"RTN","EASECCAL",61,0)
 ; 20*number of days in month*(veteran+spouse(if married and spouse
"RTN","EASECCAL",62,0)
 ;   resides in the community))
"RTN","EASECCAL",63,0)
 S ALLOW=20*DAYS*(1+SRIC)
"RTN","EASECCAL",64,0)
 Q
"RTN","EASECCAL",65,0)
 ;
"RTN","EASECCAL",66,0)
CALC ; Calculate co-payments
"RTN","EASECCAL",67,0)
 ; Calculation for IP services up to 180 days and OP services:
"RTN","EASECCAL",68,0)
 ;   Income-Allowance-Expenses
"RTN","EASECCAL",69,0)
 S CCPY=INC-ALLOW-EXP
"RTN","EASECCAL",70,0)
 S (OPCPY,IPCPY1)=$S(CCPY>0:(CCPY+.5)\1,1:0)
"RTN","EASECCAL",71,0)
 ; Calculation for IP services 181+ days, add in assets
"RTN","EASECCAL",72,0)
 S IPCPY2=0 I LOS>180 D
"RTN","EASECCAL",73,0)
 . S TEXP=0 I DGSP,SRIC S TEXP=TEXP+EXP
"RTN","EASECCAL",74,0)
 . ; number of months to spend down assets
"RTN","EASECCAL",75,0)
 . S SD=(LOS-180)/30,SD=((SD+.5)\1)-1
"RTN","EASECCAL",76,0)
 . ; get month to start spend down
"RTN","EASECCAL",77,0)
 . S M=+$E(MNTH,4,5)-SD I M<1 F  S M=12-M Q:M>0
"RTN","EASECCAL",78,0)
 . ; calculate asset spend down
"RTN","EASECCAL",79,0)
 . I SD>0 F I=1:1:SD D
"RTN","EASECCAL",80,0)
 . . S DAYS=$S("^4^6^9^11^"[("^"_M_"^"):30,M=2:28,1:31)
"RTN","EASECCAL",81,0)
 . . ;get total expenses + allowance
"RTN","EASECCAL",82,0)
 . . S TEXALL=TEXP+(20*DAYS*(1+SRIC))
"RTN","EASECCAL",83,0)
 . . S IPMAX=97*DAYS
"RTN","EASECCAL",84,0)
 . . I (INC-TEXALL)'>IPMAX S AST=AST-(IPMAX-(INC-TEXALL)) S:AST<0 AST=0
"RTN","EASECCAL",85,0)
 . . S M=M+1 S:M=13 M=1
"RTN","EASECCAL",86,0)
 . S CCPY=CCPY+AST
"RTN","EASECCAL",87,0)
 . ;If veteran is single or spouse does not reside in the community,
"RTN","EASECCAL",88,0)
 . ;add expenses back in
"RTN","EASECCAL",89,0)
 . I 'DGSP!('SRIC) S CCPY=CCPY+EXP
"RTN","EASECCAL",90,0)
 . S IPCPY2=(CCPY+.5)\1 I IPCPY2<0 S IPCPY2=0
"RTN","EASECCAL",91,0)
 S COPAY=COPAY_U_IPCPY1_U_IPCPY2_U_OPCPY
"RTN","EASECCAL",92,0)
 K CCPY,INC,ALLOW,EXP,AST,OPCPY,IPCPY1,IPCPY2,DGSP,M,SD,SRIC,SLIV,TEXP,TEXALL
"RTN","EASECCAL",93,0)
 Q
"RTN","EASECDD")
0^12^B38158201
"RTN","EASECDD",1,0)
EASECDD ;ALB/LBD - Executable help for fields in file #408.21  ;4 SEP 2001
"RTN","EASECDD",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECDD",3,0)
 ;
"RTN","EASECDD",4,0)
8 ; Social Security
"RTN","EASECDD",5,0)
 W !,?8,"Enter in this field the annual amount of Social Security"
"RTN","EASECDD",6,0)
 W !,?8,"received during the current calendar year."
"RTN","EASECDD",7,0)
 W !!,?8,"A monthly amount can be entered with an '*' after it.",!
"RTN","EASECDD",8,0)
 S X="?"
"RTN","EASECDD",9,0)
 Q
"RTN","EASECDD",10,0)
9 ; US Civil Service
"RTN","EASECDD",11,0)
 W !,?8,"Enter in this field the annual amount of U.S. Civil Service"
"RTN","EASECDD",12,0)
 W !,?8,"received during the current calendar year."
"RTN","EASECDD",13,0)
 W !!,?8,"A monthly amount can be entered with an '*' after it.",!
"RTN","EASECDD",14,0)
 S X="?"
"RTN","EASECDD",15,0)
 Q
"RTN","EASECDD",16,0)
10 ; US Railroad Retirement
"RTN","EASECDD",17,0)
 W !,?8,"Enter in this field the annual amount of U.S. Railroad Retirement"
"RTN","EASECDD",18,0)
 W !,?8,"received during the current calendar year."
"RTN","EASECDD",19,0)
 W !!,?8,"A monthly amount can be entered with an '*' after it.",!
"RTN","EASECDD",20,0)
 S X="?"
"RTN","EASECDD",21,0)
 Q
"RTN","EASECDD",22,0)
11 ; Military Retirement
"RTN","EASECDD",23,0)
 W !,?8,"Enter in this field the annual amount of Military Retirement"
"RTN","EASECDD",24,0)
 W !,?8,"received during the current calendar year."
"RTN","EASECDD",25,0)
 W !!,?8,"A monthly amount can be entered with an '*' after it.",!
"RTN","EASECDD",26,0)
 S X="?"
"RTN","EASECDD",27,0)
 Q
"RTN","EASECDD",28,0)
12 ; Unemployment Compensation
"RTN","EASECDD",29,0)
 W !,?8,"Enter in this field the annual amount of Unemployment Compensation"
"RTN","EASECDD",30,0)
 W !,?8,"received during the current calendar year."
"RTN","EASECDD",31,0)
 W !!,?8,"A monthly amount can be entered with an '*' after it.",!
"RTN","EASECDD",32,0)
 S X="?"
"RTN","EASECDD",33,0)
 Q
"RTN","EASECDD",34,0)
13 ; Other Retirement
"RTN","EASECDD",35,0)
 W !,?8,"Enter in this field the annual amount of Other Retirement received"
"RTN","EASECDD",36,0)
 W !,?8,"during the current calendar year.  This includes company, state,"
"RTN","EASECDD",37,0)
 W !,?8,"local, etc."
"RTN","EASECDD",38,0)
 W !!,?8,"A monthly amount can be entered with an '*' after it.",!
"RTN","EASECDD",39,0)
 S X="?"
"RTN","EASECDD",40,0)
 Q
"RTN","EASECDD",41,0)
14 ; Total Income from Employment
"RTN","EASECDD",42,0)
 W !,?8,"Enter in this field the annual amount of Gross Income received during"
"RTN","EASECDD",43,0)
 W !,?8,"the current year.  This includes, but is not limited to, wages and"
"RTN","EASECDD",44,0)
 W !,?8,"income from a business, bonuses, tips, severance pay, accrued"
"RTN","EASECDD",45,0)
 W !,?8,"benefits, cash gifts."
"RTN","EASECDD",46,0)
 W !!,?8,"A monthly amount can be entered with an '*' after it.",!
"RTN","EASECDD",47,0)
 S X="?"
"RTN","EASECDD",48,0)
 Q
"RTN","EASECDD",49,0)
15 ; Interest, Dividend or Annuity
"RTN","EASECDD",50,0)
 W !,?8,"Enter in this field the annual amount of Interest and Dividend"
"RTN","EASECDD",51,0)
 W !,?8,"Income received during the current calendar year (i.e., interest"
"RTN","EASECDD",52,0)
 W !,?8,"income, standard dividend income from non tax deferred annuities)."
"RTN","EASECDD",53,0)
 W !!,?8,"A monthly amount can be entered with an '*' after it.",!
"RTN","EASECDD",54,0)
 S X="?"
"RTN","EASECDD",55,0)
 Q
"RTN","EASECDD",56,0)
16 ; Workers Comp or Black Lung
"RTN","EASECDD",57,0)
 W !,?8,"Enter in this field the annual amount of Workers Compensation or"
"RTN","EASECDD",58,0)
 W !,?8,"Black Lung Benefits received during the current calendar year."
"RTN","EASECDD",59,0)
 W !!,?8,"A monthly amount can be entered with an '*' after it.",!
"RTN","EASECDD",60,0)
 S X="?"
"RTN","EASECDD",61,0)
 Q
"RTN","EASECDD",62,0)
17 ; All Other Income
"RTN","EASECDD",63,0)
 W !,?8,"Enter in this field the annual amount of All Other Income"
"RTN","EASECDD",64,0)
 W !,?8,"received during the current calendar year (i.e., inheritance amounts,"
"RTN","EASECDD",65,0)
 W !,?8,"tort settlement payments)."
"RTN","EASECDD",66,0)
 W !!,?8,"A monthly amount can be entered with an '*' after it.",!
"RTN","EASECDD",67,0)
 S X="?"
"RTN","EASECDD",68,0)
 Q
"RTN","EASECDD",69,0)
101 ; Medical Expenses
"RTN","EASECDD",70,0)
 W !,?8,"Enter in this field the total amount of unreimbursed medical expenses"
"RTN","EASECDD",71,0)
 W !,?8,"paid by the veteran during the current calendar year.  The expenses"
"RTN","EASECDD",72,0)
 W !,?8,"can be for the veteran or for members of the veteran's family."
"RTN","EASECDD",73,0)
 W !,?8,"Reportable medical expenses include amounts paid for the following:"
"RTN","EASECDD",74,0)
 W !,?8,"fees of physicians, dentists, and other providers of health services;"
"RTN","EASECDD",75,0)
 W !,?8,"hospital and nursing home fees; medical insurance premiums (including"
"RTN","EASECDD",76,0)
 W !,?8,"the Medicare premium); drugs and medicines; eyeglasses; any other"
"RTN","EASECDD",77,0)
 W !,?8,"expenses that are reasonable related to medical care.  The expenses"
"RTN","EASECDD",78,0)
 W !,?8,"must actually have been paid by the veteran.  Do not list expenses"
"RTN","EASECDD",79,0)
 W !,?8,"which have not been paid or which have been paid by someone other"
"RTN","EASECDD",80,0)
 W !,?8,"than the veteran.  Do not list expenses which the veteran has paid if"
"RTN","EASECDD",81,0)
 W !,?8,"the veteran expects to receive reimbursement from insurance or some"
"RTN","EASECDD",82,0)
 W !,?8,"other source."
"RTN","EASECDD",83,0)
 W !
"RTN","EASECDD",84,0)
 W !,?8,"A monthly amount can be entered with an '*' after it."
"RTN","EASECDD",85,0)
 S X="?"
"RTN","EASECDD",86,0)
 Q
"RTN","EASECDD",87,0)
102 ; Funeral and Burial Expenses
"RTN","EASECDD",88,0)
 W !,?8,"Enter in this field amounts paid by the veteran during the current"
"RTN","EASECDD",89,0)
 W !,?8,"calendar year for funeral or burial expenses of the veteran's"
"RTN","EASECDD",90,0)
 W !,?8,"spouse or child.  Do not report amounts paid for funeral or"
"RTN","EASECDD",91,0)
 W !,?8,"burial expenses of other relatives such as parents, siblings, etc."
"RTN","EASECDD",92,0)
 W !
"RTN","EASECDD",93,0)
 W !,?8,"A monthly amount can be entered with an '*' after it."
"RTN","EASECDD",94,0)
 S X="?"
"RTN","EASECDD",95,0)
 Q
"RTN","EASECDD",96,0)
103 ; Educational Expenses
"RTN","EASECDD",97,0)
 W !,?8,"Enter in this field the total amount paid by the veteran for"
"RTN","EASECDD",98,0)
 W !,?8,"educational expenses during the current calendar year.  This"
"RTN","EASECDD",99,0)
 W !,?8,"includes educational expenses for the veteran, spouse and children."
"RTN","EASECDD",100,0)
 W !,?8,"Educational expenses are tuition, fees, and books if enrolled in a"
"RTN","EASECDD",101,0)
 W !,?8,"program of education."
"RTN","EASECDD",102,0)
 W !
"RTN","EASECDD",103,0)
 W !,?8,"A monthly amount can be entered with an '*' after it."
"RTN","EASECDD",104,0)
 S X="?"
"RTN","EASECDD",105,0)
 Q
"RTN","EASECDD",106,0)
201 ; Cash
"RTN","EASECDD",107,0)
 W !,?8,"Enter in this field cash and amounts in bank accounts.  This"
"RTN","EASECDD",108,0)
 W !,?8,"includes checking accounts, savings accounts, money markets,"
"RTN","EASECDD",109,0)
 W !,?8,"interest, dividends from IRA, 401K's, and other tax deferred"
"RTN","EASECDD",110,0)
 W !,?8,"annuities."
"RTN","EASECDD",111,0)
 S X="?"
"RTN","EASECDD",112,0)
 Q
"RTN","EASECDD",113,0)
202 ; Stock, bonds, mutual funds
"RTN","EASECDD",114,0)
 W !,?8,"Enter in this field the current value of stocks, bonds, mutual"
"RTN","EASECDD",115,0)
 W !,?8,"funds, SEP's, and other retirement accounts (e.g., IRA, 401K,"
"RTN","EASECDD",116,0)
 W !,?8,"annuities, self-employed person)."
"RTN","EASECDD",117,0)
 S X="?"
"RTN","EASECDD",118,0)
 Q
"RTN","EASECDP1")
0^17^B8980117
"RTN","EASECDP1",1,0)
EASECDP1 ;ALB/LBD List One Dependent/Edit Effective Dates ;22 AUG 2001
"RTN","EASECDP1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECDP1",3,0)
 ;
"RTN","EASECDP1",4,0)
LSTDEP(DGDEP) ;List Depentdents
"RTN","EASECDP1",5,0)
 N DEP,CNT S CNT=0
"RTN","EASECDP1",6,0)
 F  S CNT=$O(DGDEP(CNT)) Q:'CNT  D ONE(CNT)
"RTN","EASECDP1",7,0)
 Q
"RTN","EASECDP1",8,0)
 ;
"RTN","EASECDP1",9,0)
ONE(CNT) ; List one dependent
"RTN","EASECDP1",10,0)
 ;
"RTN","EASECDP1",11,0)
 N DGLN S DGLN=1
"RTN","EASECDP1",12,0)
 ;
"RTN","EASECDP1",13,0)
 S X="",X=$$SETSTR^VALM1("SSN: ",X,4,5)
"RTN","EASECDP1",14,0)
 S X=$$SETSTR^VALM1($P(DGDEP(CNT),U,5),X,9,24)
"RTN","EASECDP1",15,0)
 S X=$$SETSTR^VALM1("Sex: ",X,52,5)
"RTN","EASECDP1",16,0)
 S X=$$SETSTR^VALM1($P(DGDEP(CNT),U,3),X,58,7)
"RTN","EASECDP1",17,0)
 D SET(X)
"RTN","EASECDP1",18,0)
 ;
"RTN","EASECDP1",19,0)
 S X="",X=$$SETSTR^VALM1("DOB: ",X,4,5)
"RTN","EASECDP1",20,0)
 S X=$$SETSTR^VALM1($P(DGDEP(CNT),U,4),X,9,24)
"RTN","EASECDP1",21,0)
 D SET(X)
"RTN","EASECDP1",22,0)
 ;
"RTN","EASECDP1",23,0)
 S DEP=""
"RTN","EASECDP1",24,0)
 F  S DEP=$O(DGDEP(CNT,DEP)) Q:DEP']""  D
"RTN","EASECDP1",25,0)
 .S X="",X=$$SETSTR^VALM1("Status: ",X,1,8)
"RTN","EASECDP1",26,0)
 .S X=$$SETSTR^VALM1($P(DGDEP(CNT,DEP),U,2),X,9,24)
"RTN","EASECDP1",27,0)
 .S X=$$SETSTR^VALM1("Effective Date: ",X,41,16)
"RTN","EASECDP1",28,0)
 .S X=$$SETSTR^VALM1($P(DGDEP(CNT,DEP),U),X,58,20)
"RTN","EASECDP1",29,0)
 .D SET(X)
"RTN","EASECDP1",30,0)
 .D SET("")
"RTN","EASECDP1",31,0)
 S VALMCNT=DGLN-1
"RTN","EASECDP1",32,0)
 Q
"RTN","EASECDP1",33,0)
 ;
"RTN","EASECDP1",34,0)
SET(X) ;Set up array
"RTN","EASECDP1",35,0)
 S ^TMP("DGMTEP",$J,DGLN,0)=X
"RTN","EASECDP1",36,0)
 S DGLN=DGLN+1
"RTN","EASECDP1",37,0)
 Q
"RTN","EASECDP1",38,0)
 ;
"RTN","EASECDP1",39,0)
EXIT ;
"RTN","EASECDP1",40,0)
 K ^TMP("DGMTEP",$J)
"RTN","EASECDP1",41,0)
 Q
"RTN","EASECDP1",42,0)
 ;
"RTN","EASECDP1",43,0)
EN ; Effective Dates
"RTN","EASECDP1",44,0)
 S VALMBCK=""
"RTN","EASECDP1",45,0)
 I $D(DGMTI),$G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." H 2 G ENQ
"RTN","EASECDP1",46,0)
 I '$D(DGMTI),$G(DGRPV)=1 W !,"Not while viewing" H 2 G ENQ
"RTN","EASECDP1",47,0)
 D EDIT
"RTN","EASECDP1",48,0)
 I DGW=1 D  I $G(DGERR) W !,"Cannot inactivate veteran" K DGERR G EN
"RTN","EASECDP1",49,0)
 .S DATE=$O(DGDEP(1,""))
"RTN","EASECDP1",50,0)
 .S ACTIVE=$P(DGDEP(1,DATE),U,2)
"RTN","EASECDP1",51,0)
 .I ACTIVE="Inactive" S DGERR=1
"RTN","EASECDP1",52,0)
ENQ S VALMBCK="R"
"RTN","EASECDP1",53,0)
 Q
"RTN","EASECDP1",54,0)
 ;
"RTN","EASECDP1",55,0)
EDIT ; Edit Effective Dates
"RTN","EASECDP1",56,0)
 ;  values for DGFLG:
"RTN","EASECDP1",57,0)
 ;     DGFLG = 1   IVM effective date
"RTN","EASECDP1",58,0)
 ;
"RTN","EASECDP1",59,0)
 N DA,DR,DIE,DIC,DATE,DGEDIT,DGEE,Y
"RTN","EASECDP1",60,0)
 S DGFLG=0,DGEDIT=1
"RTN","EASECDP1",61,0)
 S DGPR=$S($G(DGW):$P(DGDEP(DGW),U,20),1:$P(DGDEP,U,20))
"RTN","EASECDP1",62,0)
 S DIE="^DGPR(408.12,",DA=DGPR,DR="75"
"RTN","EASECDP1",63,0)
 S DR(2,408.1275)="I $P($G(^DGPR(408.12,DGPR,""E"",DA,0)),U,3) S Y=0,DGFLG=1;S:$P($G(^DGPR(408.12,DGPR,""E"",DA,0)),U,2)']"""" DIE(""NO^"")="""";.01;.02"
"RTN","EASECDP1",64,0)
 D ^DIE
"RTN","EASECDP1",65,0)
 I DGFLG W !!,"Cannot edit date added by IVM." H 2 G EDITQ
"RTN","EASECDP1",66,0)
 S DATE=0,DATE=$O(^DGPR(408.12,$P(DGDEP(DGW),U,20),"E",DATE))
"RTN","EASECDP1",67,0)
 I 'DATE W !!,"There has to be an effective date for this person." H 2 G EDIT
"RTN","EASECDP1",68,0)
EDITQ K DGDEP,DGFLG D INIT^EASECDEP
"RTN","EASECDP1",69,0)
 K ^TMP("DGMTEP",$J) D ONE(DGW)
"RTN","EASECDP1",70,0)
 Q
"RTN","EASECDP1",71,0)
 ;
"RTN","EASECDP1",72,0)
DOB(DA,X) ;CHECK EFFECTIVE DATE AGAINST DOB
"RTN","EASECDP1",73,0)
 N DGFILE,X1
"RTN","EASECDP1",74,0)
 S DGFILE=$P($G(^DGPR(408.12,DA,0)),U,3),X1=$P(DGFILE,";"),DGFILE=$S(DGFILE["DGPR":"^DGPR(408.13,",1:"^DPT(")
"RTN","EASECDP1",75,0)
 I X<$P($G(@(DGFILE_X1_",0)")),U,3) D
"RTN","EASECDP1",76,0)
 . W !,"  <<EFFECTIVE DATE may not precede Date Of Birth>>",$C(7)
"RTN","EASECDP1",77,0)
 . S X=0
"RTN","EASECDP1",78,0)
 Q X
"RTN","EASECDP2")
0^18^B21414536
"RTN","EASECDP2",1,0)
EASECDP2 ;ALB/LBD Dependent Utilities ;19 AUG 2001
"RTN","EASECDP2",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECDP2",3,0)
 ;
"RTN","EASECDP2",4,0)
 ; NOTE: This routine was modified from DGDEP2 for LTC Co-pay
"RTN","EASECDP2",5,0)
 ;
"RTN","EASECDP2",6,0)
EN1 ; Add dependent to means test
"RTN","EASECDP2",7,0)
 ;
"RTN","EASECDP2",8,0)
 N DGSAVE,DGMTD,DGSAVE1
"RTN","EASECDP2",9,0)
 I '$G(DGMTI),$G(DGMTYPT)'=3 W !,"Not a LTC copay test - use LTC copay test options." H 2 G EN1Q
"RTN","EASECDP2",10,0)
 I $G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." H 2 G EN1Q
"RTN","EASECDP2",11,0)
 S VALMBCK="",DGSAVE=VALMLST,DGSAVE1=VALMBG
"RTN","EASECDP2",12,0)
 S VALMBG=1,VALMLST=DGCNT D SEL^VALM2 S VALMBG=DGSAVE1,VALMLST=DGSAVE G EN1Q:'$O(VALMY(0))
"RTN","EASECDP2",13,0)
 N CTR S CTR=0 F  S CTR=$O(VALMY(CTR)) Q:'CTR  D
"RTN","EASECDP2",14,0)
 .D ADD(DFN,DGDEP(CTR),$G(DGMTI))
"RTN","EASECDP2",15,0)
 S DGMTD=$S($G(DGMTI):$P(^DGMT(408.31,DGMTI,0),U),1:DT)
"RTN","EASECDP2",16,0)
 D ALL^EASECU21(DFN,"VSC",DGMTD,"IPR",DGMTI)
"RTN","EASECDP2",17,0)
 K DGDEP D INIT^EASECDEP
"RTN","EASECDP2",18,0)
EN1Q S VALMBCK="R" Q
"RTN","EASECDP2",19,0)
 ;
"RTN","EASECDP2",20,0)
ADD(DFN,DGDEP,DGMTI) ;Add
"RTN","EASECDP2",21,0)
 N DA,DR,DIE,DGMTD,DGIRI
"RTN","EASECDP2",22,0)
 I '$G(DGMTI),$G(DGMTYPT)'=3 W !,"Not a LTC copay test - use LTC copay test options." H 2 G ADDQ
"RTN","EASECDP2",23,0)
 I $G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." G ADDQ
"RTN","EASECDP2",24,0)
 S DGMTR=$O(^DG(408.11,"B",$P(DGDEP,U,2),"")) I '$P(^DG(408.11,DGMTR,0),U,4) D  G ADDQ
"RTN","EASECDP2",25,0)
 .W !,"Cannot add a "_$P(DGDEP,U,2)_" as a dependent to the LTC copay test." H 2
"RTN","EASECDP2",26,0)
 S DGMTD=$S($G(DGMTI):$P($G(^DGMT(408.31,DGMTI,0)),U),1:DT)
"RTN","EASECDP2",27,0)
 D GETIENS^EASECU2(DFN,$P(DGDEP,U,20),DGMTD)
"RTN","EASECDP2",28,0)
 S DA=DGIRI
"RTN","EASECDP2",29,0)
 S DIE="^DGMT(408.22,",DR="31////"_DGMTI
"RTN","EASECDP2",30,0)
 D ^DIE
"RTN","EASECDP2",31,0)
ADDQ Q
"RTN","EASECDP2",32,0)
 ;
"RTN","EASECDP2",33,0)
EN2 ; Remove dependent from means test
"RTN","EASECDP2",34,0)
 ;
"RTN","EASECDP2",35,0)
 N DGSAVE1,DGSAVE2,DGMTD
"RTN","EASECDP2",36,0)
 I '$G(DGMTI),$G(DGMTYPT)'=3 W !,"Not a LTC copay test - use LTC copay test options." H 2 G EN2Q
"RTN","EASECDP2",37,0)
 I $G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." H 2 G EN2Q
"RTN","EASECDP2",38,0)
 S VALMBCK="",DGSAVE1=VALMBG,DGSAVE2=VALMLST,VALMBG=2
"RTN","EASECDP2",39,0)
 S VALMLST=DGCNT D SEL^VALM2 S VALMBG=DGSAVE1,VALMLST=DGSAVE2 G EN1Q:'$O(VALMY(0))
"RTN","EASECDP2",40,0)
 N CTR S CTR=0 F  S CTR=$O(VALMY(CTR)) Q:'CTR  D
"RTN","EASECDP2",41,0)
 .D REMOVE(DFN,DGDEP(CTR),$G(DGMTI))
"RTN","EASECDP2",42,0)
 S DGMTD=$S($G(DGMTI):$P(^DGMT(408.31,DGMTI,0),U),1:DT)
"RTN","EASECDP2",43,0)
 D ALL^EASECU21(DFN,"VSC",DGMTD,"IPR",DGMTI)
"RTN","EASECDP2",44,0)
EN2Q S VALMBCK="R" Q
"RTN","EASECDP2",45,0)
 ;
"RTN","EASECDP2",46,0)
REMOVE(DFN,DGDEP,DGMTI) ;Remove
"RTN","EASECDP2",47,0)
 N DA,DR,DIE,DGMTD
"RTN","EASECDP2",48,0)
 I '$G(DGMTI),$G(DGMTYPT)'=3 W !,"Not a LTC copay test - use LTC copay test options." H 2 G REMOVEQ
"RTN","EASECDP2",49,0)
 I $G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." H 2 G EN2Q
"RTN","EASECDP2",50,0)
 S DGMTD=$S($G(DGMTI):$P($G(^DGMT(408.31,DGMTI,0)),U),1:DT)
"RTN","EASECDP2",51,0)
 D GETIENS^EASECU2(DFN,$P(DGDEP,U,20),DGMTD)
"RTN","EASECDP2",52,0)
 S DA=DGIRI
"RTN","EASECDP2",53,0)
 S DIE="^DGMT(408.22,",DR="31////@"
"RTN","EASECDP2",54,0)
 D ^DIE S DGREMOVE=1
"RTN","EASECDP2",55,0)
 K DGDEP D INIT^EASECDEP
"RTN","EASECDP2",56,0)
REMOVEQ K DGREMOVE Q
"RTN","EASECDP2",57,0)
 ;
"RTN","EASECDP2",58,0)
EN3 ; Edit dependent demo
"RTN","EASECDP2",59,0)
 ;
"RTN","EASECDP2",60,0)
 S VALMBCK=""
"RTN","EASECDP2",61,0)
 N DGSAVE1,DGSAVE2,DGMTD,DGBEG,I
"RTN","EASECDP2",62,0)
 I $G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." H 2 G EN3Q
"RTN","EASECDP2",63,0)
 I '$D(DGMTI),$G(DGRPV)=1 W !,"Not while viewing" H 2 G EN3Q
"RTN","EASECDP2",64,0)
 S VALMBCK="",DGSAVE1=VALMBG,DGSAVE2=VALMLST,VALMBG=1
"RTN","EASECDP2",65,0)
 S VALMLST=DGCNT D SEL^VALM2 S VALMBG=DGSAVE1,VALMLST=DGSAVE2 G EN1Q:'$O(VALMY(0))
"RTN","EASECDP2",66,0)
 N CTR S CTR=0 F  S CTR=$O(VALMY(CTR)) Q:'CTR  D
"RTN","EASECDP2",67,0)
 .D EDITD(DFN,DGDEP(CTR),CTR,$G(DGMTI))
"RTN","EASECDP2",68,0)
 S VALMBCK="R"
"RTN","EASECDP2",69,0)
 K DGDEP D INIT^EASECDEP
"RTN","EASECDP2",70,0)
EN3Q Q
"RTN","EASECDP2",71,0)
 ;
"RTN","EASECDP2",72,0)
EDITD(DFN,DGDEP,DGW,DGMTI) ; Edit
"RTN","EASECDP2",73,0)
 N DA,DR,DIE,DGMTDT,SPOUSE,DGREL,DGDR,CNT,RELATION
"RTN","EASECDP2",74,0)
 I $G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." H 2 G EDITDQ
"RTN","EASECDP2",75,0)
 W !!,$P(DGDEP,U)
"RTN","EASECDP2",76,0)
 I '$G(DGMTI),$P(DGDEP,U,2)="SELF" D  G EDITDQ
"RTN","EASECDP2",77,0)
 .S DGREL("V")=$P(DGDEP,U,20) D SPOUSE^EASECED2
"RTN","EASECDP2",78,0)
 I '$G(DGMTI) W !,"Can only input information for veteran." H 2 G EN3Q
"RTN","EASECDP2",79,0)
 S DGMTDT=$P(^DGMT(408.31,DGMTI,0),U)
"RTN","EASECDP2",80,0)
 I $P(DGDEP,U,2)="SPOUSE" W !,"Married information is entered under the veteran." H 2 G EDITDQ
"RTN","EASECDP2",81,0)
 I $P(DGDEP,U,2)="SELF" D  G EDITDQ
"RTN","EASECDP2",82,0)
 .S DGDR=101
"RTN","EASECDP2",83,0)
 .D GETREL^DGMTU11(DFN,"S",$S($G(DGMTDT):DGMTDT,1:DT))
"RTN","EASECDP2",84,0)
 .S DA=DGVIRI,DIE="^DGMT(408.22,",DR="[EASEC EDIT MARITAL STATUS]" D ^DIE K DA,DIE,DR
"RTN","EASECDP2",85,0)
 .I $G(DGMTI),$G(DGREL("S")) D
"RTN","EASECDP2",86,0)
 ..S SPOUSE=+DGREL("S")
"RTN","EASECDP2",87,0)
 ..D INIT^EASECDEP
"RTN","EASECDP2",88,0)
 ..S CNT=0 F  S CNT=$O(DGDEP(CNT)) Q:'CNT  I $P(DGDEP(CNT),U,20)=SPOUSE D ADD(DFN,DGDEP(CNT),DGMTI)
"RTN","EASECDP2",89,0)
 S RELATION=$O(^DG(408.11,"B",$P(DGDEP,U,2),""))
"RTN","EASECDP2",90,0)
 I '$P(^DG(408.11,+RELATION,0),U,4) W !,"Not applicable for LTC copay test" H 2 G EDITDQ
"RTN","EASECDP2",91,0)
 S DGPRI=$P(DGDEP,U,20)
"RTN","EASECDP2",92,0)
 D EDT
"RTN","EASECDP2",93,0)
 I $G(DGFL)'<0 D ADD(DFN,DGDEP,DGMTI)
"RTN","EASECDP2",94,0)
EDITDQ ;
"RTN","EASECDP2",95,0)
 Q
"RTN","EASECDP2",96,0)
 ;
"RTN","EASECDP2",97,0)
EDT ;Edit dependent child data
"RTN","EASECDP2",98,0)
 ; NOTE: this code was modified from DGMTSC11
"RTN","EASECDP2",99,0)
 N DA,DGERR,DGFIN,DGINI,DGIRI,DIE,DR
"RTN","EASECDP2",100,0)
 D GETIENS^EASECU2(DFN,+DGPRI,DGMTDT) G EDTQ:DGERR
"RTN","EASECDP2",101,0)
 S DA=DGIRI,DIE="^DGMT(408.22,",DR="[EASEC EDIT DEPENDENTS]" D ^DIE
"RTN","EASECDP2",102,0)
 S:'$D(DGFIN) DGFL=$S($D(DTOUT):-2,$D(DUOUT):-1,($D(Y))=10:-1,1:0)
"RTN","EASECDP2",103,0)
EDTQ Q
"RTN","EASECDP4")
0^19^B13762481
"RTN","EASECDP4",1,0)
EASECDP4 ;ALB/LBD - Dependents Utilities (con't) ;19 AUG 2001
"RTN","EASECDP4",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECDP4",3,0)
 ; NOTE: This routine was modified from DGDEP4 for LTC Copay
"RTN","EASECDP4",4,0)
 ;
"RTN","EASECDP4",5,0)
EN ; Spouse Demographics
"RTN","EASECDP4",6,0)
 N BEG,CNT,END,FLAG,QUIT,DGERR S CNT=0
"RTN","EASECDP4",7,0)
 I $G(DGMTI),$G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." H 2 G ENQ
"RTN","EASECDP4",8,0)
 I '$D(DGMTI),$G(DGRPV)=1 W !,"Not while viewing" H 2 G ENQ
"RTN","EASECDP4",9,0)
 F  S CNT=$O(DGDEP(CNT)) Q:'CNT  D
"RTN","EASECDP4",10,0)
 .I $P(DGDEP(CNT),U,2)="SPOUSE" S FLAG=$G(FLAG)+1
"RTN","EASECDP4",11,0)
 I '$G(FLAG) W !,"There is no spouse to choose from." H 2 G ENQ
"RTN","EASECDP4",12,0)
 I $G(FLAG)>1 D  G:'$G(DGERR) EN1
"RTN","EASECDP4",13,0)
 .S BEG=2,END=FLAG+1 D SEL^DGDEPU Q:$G(DGERR)
"RTN","EASECDP4",14,0)
 .S DGREL("S")=$P(DGDEP(DGW),U,20)_U_$P(^DGPR(408.12,+$P(DGDEP(DGW),U,20),0),U,3)
"RTN","EASECDP4",15,0)
 I $G(DGERR) G ENQ
"RTN","EASECDP4",16,0)
 I '$G(DGREL("S")) S DGREL("S")=$P(DGDEP(2),U,20)_U_$P(^DGPR(408.12,+$P(DGDEP(2),U,20),0),U,3)
"RTN","EASECDP4",17,0)
EN1 S DGPRI=$P(DGDEP(1),U,20),DGIRI=$P(DGDEP(1),U,22) D SPOUSE1^EASECSC3
"RTN","EASECDP4",18,0)
ENQ D INIT^EASECDEP
"RTN","EASECDP4",19,0)
 Q
"RTN","EASECDP4",20,0)
 ;
"RTN","EASECDP4",21,0)
 ;
"RTN","EASECDP4",22,0)
ADDEP ; Add a new dependent
"RTN","EASECDP4",23,0)
 ;
"RTN","EASECDP4",24,0)
 N DGANS
"RTN","EASECDP4",25,0)
 S VALMBCK=""
"RTN","EASECDP4",26,0)
 I $G(DGMTI),$G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." H 2 G ADDEPQ
"RTN","EASECDP4",27,0)
 I '$D(DGMTI),$G(DGRPV)=1 W !,"Not while viewing" H 2 G ADDEPQ
"RTN","EASECDP4",28,0)
 S DIR(0)="S^S:Spouse;D:Dependent",DIR("A")="Do you want to add (S)pouse or (D)ependent"
"RTN","EASECDP4",29,0)
 D ^DIR S DGANS=Y K DIR,Y I DGANS="D",$G(DGMTI) S DGANS="C"
"RTN","EASECDP4",30,0)
 I $D(DIRUT) G ADDEPQ
"RTN","EASECDP4",31,0)
 D GETREL^DGMTU11(DFN,"S",$S($G(DGMTD):DGMTD,1:DT))
"RTN","EASECDP4",32,0)
 I DGANS="S",$G(DGREL("S")) W !,"An active spouse is currently on file.  Use the 'ES - Edit Spouse'",!,"action to edit." H 3 G ADDEPQ
"RTN","EASECDP4",33,0)
 I DGANS="S",$G(DGMTI) S CNT=0 F  S CNT=$O(DGDEP(CNT)) Q:'CNT  I $P(DGDEP(CNT),U,2)="SPOUSE" D REMOVE^EASECDP2(DFN,DGDEP(CNT),DGMTI)
"RTN","EASECDP4",34,0)
 D CLEAR^VALM1
"RTN","EASECDP4",35,0)
 D ADD^EASECED(DFN,DGANS,$S($G(DGMTI):$P(^DGMT(408.31,DGMTI,0),U),1:DT))
"RTN","EASECDP4",36,0)
 S PERSON=DGPRI
"RTN","EASECDP4",37,0)
 I DGFL=-1!(DGFL=-2) G ADDEPQ
"RTN","EASECDP4",38,0)
 D INIT^EASECDEP
"RTN","EASECDP4",39,0)
 I $G(DGMTI) D
"RTN","EASECDP4",40,0)
 .N CNT
"RTN","EASECDP4",41,0)
 .S CNT=0
"RTN","EASECDP4",42,0)
 .F  S CNT=$O(DGDEP(CNT)) Q:'CNT  I $P(DGDEP(CNT),U,20)=PERSON D
"RTN","EASECDP4",43,0)
 ..D ADD^EASECDP2(DFN,DGDEP(CNT),DGMTI)
"RTN","EASECDP4",44,0)
 ..D EDITD^EASECDP2(DFN,DGDEP(CNT),CNT,DGMTI)
"RTN","EASECDP4",45,0)
ADDEPQ S VALMBCK="R"
"RTN","EASECDP4",46,0)
 D INIT^EASECDEP
"RTN","EASECDP4",47,0)
 K DGFL Q
"RTN","EASECDP4",48,0)
 ;
"RTN","EASECDP4",49,0)
EDITDEP ; Edit dependent demo
"RTN","EASECDP4",50,0)
 ;
"RTN","EASECDP4",51,0)
 S VALMBCK=""
"RTN","EASECDP4",52,0)
 N DGSAVE1,DGSAVE2,DGMTD,DGBEG,I
"RTN","EASECDP4",53,0)
 I $G(DGMTI),$G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." H 2 G EDITDEPQ
"RTN","EASECDP4",54,0)
 I '$D(DGMTI),$G(DGRPV)=1 W !,"Not while viewing" H 2 G EDITDEPQ
"RTN","EASECDP4",55,0)
 S I=0 F  S I=$O(DGDEP(I)) Q:'I!($G(DGBEG))  I $P(DGDEP(I),U,2)'="SELF",$P(DGDEP(I),U,2)'="SPOUSE" S DGBEG=I
"RTN","EASECDP4",56,0)
 S VALMBCK="",DGSAVE1=VALMBG,DGSAVE2=VALMLST,VALMBG=$S($G(DGBEG):DGBEG,1:0)
"RTN","EASECDP4",57,0)
 S VALMLST=DGCNT D SEL^VALM2 S VALMBG=DGSAVE1,VALMLST=DGSAVE2 G EDITDEPQ:'$O(VALMY(0))
"RTN","EASECDP4",58,0)
 N CTR S CTR=0 F  S CTR=$O(VALMY(CTR)) Q:'CTR  D
"RTN","EASECDP4",59,0)
 .D EDITC(DFN,DGDEP(CTR),CTR,$G(DGMTI))
"RTN","EASECDP4",60,0)
EDITDEPQ S VALMBCK="R"
"RTN","EASECDP4",61,0)
 K DGDEP D INIT^EASECDEP
"RTN","EASECDP4",62,0)
 Q
"RTN","EASECDP4",63,0)
 ;
"RTN","EASECDP4",64,0)
EDITC(DFN,DGDEP,DGW,DGMTI) ; Edit
"RTN","EASECDP4",65,0)
 N DA,DR,DIE,DGMTDT,DEP,DGSAVE
"RTN","EASECDP4",66,0)
 S DGMTDT=$S($G(DGMTI):$P(^DGMT(408.31,+DGMTI,0),U),1:DT)
"RTN","EASECDP4",67,0)
 I $G(DGMTI),$G(DGMTACT)="VEW" W !,"Cannot edit when viewing a LTC copay test." H 2 G EDITCQ
"RTN","EASECDP4",68,0)
 S DEP=$S($G(DGMTI):"C",1:"D"),DGSAVE=DGDEP
"RTN","EASECDP4",69,0)
 D GETREL^DGMTU11(DFN,DEP,$S($G(DGMTDT):DGMTDT,1:DT),$G(DGMTI))
"RTN","EASECDP4",70,0)
 S DGDEP=DGSAVE
"RTN","EASECDP4",71,0)
 N CNTR
"RTN","EASECDP4",72,0)
 S CNTR=0
"RTN","EASECDP4",73,0)
 F  S CNTR=$O(DGREL(DEP,CNTR)) Q:'CNTR  I $P(DGDEP,U,20)=+DGREL(DEP,CNTR) D
"RTN","EASECDP4",74,0)
 .D EDIT^EASECED(DGREL(DEP,CNTR),DEP)
"RTN","EASECDP4",75,0)
EDITCQ ;
"RTN","EASECDP4",76,0)
 K ^TMP("DGMTEP",$J)
"RTN","EASECDP4",77,0)
 Q
"RTN","EASECDPH")
0^20^B12827480
"RTN","EASECDPH",1,0)
EASECDPH ;ALB/LBD - LTC Co-pay Test Dependent - Help ;22 AUG 2001
"RTN","EASECDPH",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECDPH",3,0)
 ;NOTE: This routine was modified from DGDEPH for LTC Co-pay
"RTN","EASECDPH",4,0)
 ;
"RTN","EASECDPH",5,0)
HLP ; -- help for list
"RTN","EASECDPH",6,0)
 N DGX
"RTN","EASECDPH",7,0)
 I $D(X),X'["??" D HLPS G HLPQ
"RTN","EASECDPH",8,0)
 D CLEAR^VALM1
"RTN","EASECDPH",9,0)
 F I=1:1 S DGX=$P($T(@VAR+I),";",3,99) Q:DGX="$END"  D PAUSE^VALM1:DGX="$PAUSE" Q:'Y  W !,$S(DGX["$PAUSE":"",1:DGX)
"RTN","EASECDPH",10,0)
HLPQ S VALMBCK="R" K SDX,Y S X="" Q
"RTN","EASECDPH",11,0)
 ;
"RTN","EASECDPH",12,0)
HLPS ; -- short help
"RTN","EASECDPH",13,0)
 S X="?" W !,"Enter action by typing the name or the abbreviation.",! Q
"RTN","EASECDPH",14,0)
 ;
"RTN","EASECDPH",15,0)
HELPTXT ; -- help text
"RTN","EASECDPH",16,0)
 ;;Enter action by typing the name or abbreviation.
"RTN","EASECDPH",17,0)
 ;;
"RTN","EASECDPH",18,0)
 ;;DA - Spouse/Dependent Add (Not available when viewing)
"RTN","EASECDPH",19,0)
 ;;  This allows the user to add a new dependent.  The dependent can
"RTN","EASECDPH",20,0)
 ;;  either be a spouse or other dependents.  It will ask the LTC
"RTN","EASECDPH",21,0)
 ;;  copay test information questions if the dependent is added when
"RTN","EASECDPH",22,0)
 ;;  adding or editing a LTC copay test.
"RTN","EASECDPH",23,0)
 ;;
"RTN","EASECDPH",24,0)
 ;;ES - Edit Spouse Demographics (Not available when viewing)
"RTN","EASECDPH",25,0)
 ;;  This allows the user to edit the demographics related to the spouse.
"RTN","EASECDPH",26,0)
 ;;  e.g. Name, DOB, SSN, etc.
"RTN","EASECDPH",27,0)
 ;;
"RTN","EASECDPH",28,0)
 ;;DD - Edit Dependent Demographics (Not available when viewing)
"RTN","EASECDPH",29,0)
 ;;  This allows the user to edit the demographics related to dependents.
"RTN","EASECDPH",30,0)
 ;;  e.g. Name, DOB, SSN, etc.
"RTN","EASECDPH",31,0)
 ;;
"RTN","EASECDPH",32,0)
 ;;$PAUSE
"RTN","EASECDPH",33,0)
 ;;
"RTN","EASECDPH",34,0)
 ;;
"RTN","EASECDPH",35,0)
 ;;MT - Marital/Dependent Info (Not available when viewing)
"RTN","EASECDPH",36,0)
 ;;  This allows the user to edit the veteran's marital status and
"RTN","EASECDPH",37,0)
 ;;  spouse or dependent information specific to the LTC copay test,
"RTN","EASECDPH",38,0)
 ;;  such as 'Residing in the Community' or 'Living with Spouse'.
"RTN","EASECDPH",39,0)
 ;;
"RTN","EASECDPH",40,0)
 ;;AD - Add Dependent to LTC Copay Test (Not available when viewing)
"RTN","EASECDPH",41,0)
 ;;  This allows the user to add selected dependents to the LTC copay 
"RTN","EASECDPH",42,0)
 ;;  test from the above list.  The dependent does not have to currently 
"RTN","EASECDPH",43,0)
 ;;  be an active dependent.  This will only be allowed if the user is
"RTN","EASECDPH",44,0)
 ;;  adding or editing a LTC copay test.
"RTN","EASECDPH",45,0)
 ;;
"RTN","EASECDPH",46,0)
 ;;RE - Remove from LTC Copay Test (Not available when viewing)
"RTN","EASECDPH",47,0)
 ;;  This allows the user to select dependent(s) to be removed from
"RTN","EASECDPH",48,0)
 ;;  the LTC copay test.  This will only be allowed if the user is
"RTN","EASECDPH",49,0)
 ;;  adding or editing a LTC copay test.
"RTN","EASECDPH",50,0)
 ;;$PAUSE
"RTN","EASECDPH",51,0)
 ;;
"RTN","EASECDPH",52,0)
 ;;XD - Expand Dependent
"RTN","EASECDPH",53,0)
 ;;  Allows user to select a specific dependent and view more information
"RTN","EASECDPH",54,0)
 ;;  about that dependent.  The user can also select an action to edit
"RTN","EASECDPH",55,0)
 ;;  the effective dates for that dependent.
"RTN","EASECDPH",56,0)
 ;;
"RTN","EASECDPH",57,0)
 ;;$PAUSE
"RTN","EASECDPH",58,0)
 ;;$END
"RTN","EASECDPH",59,0)
 Q
"RTN","EASECDPH",60,0)
HLPTXT1 ;help text for DI - Display Info Menu
"RTN","EASECDPH",61,0)
 ;;EE - Edit Effective Dates (Not available when viewing)
"RTN","EASECDPH",62,0)
 ;;  This allows the user to edit the effective dates for a dependent.
"RTN","EASECDPH",63,0)
 ;;  They also may add an effective date.
"RTN","EASECDPH",64,0)
 ;;
"RTN","EASECDPH",65,0)
 ;;$PAUSE
"RTN","EASECDPH",66,0)
 ;;$END
"RTN","EASECE")
0^6^B9816656
"RTN","EASECE",1,0)
EASECE ;ALB/PHH - Edit an Existing LTC Co-Pay Test ;17 AUG 2001
"RTN","EASECE",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECE",3,0)
 ;
"RTN","EASECE",4,0)
EN ;Entry point to edit an existing LTC co-pay test
"RTN","EASECE",5,0)
 N DGMDOD S DGMDOD="",DGMTYPT=3
"RTN","EASECE",6,0)
 S DIC("S")="I $D(^DGMT(408.31,""AID"",DGMTYPT,+Y))"
"RTN","EASECE",7,0)
 I $D(DGMTDFN)#2 K DGMTDFN
"RTN","EASECE",8,0)
 S DIC="^DPT(",DIC(0)="AEMQ" W ! D ^DIC K DIC G Q:Y<0 S (DFN,DGMTDFN)=+Y
"RTN","EASECE",9,0)
 I $P($G(^DPT(DFN,.35)),U)'="" S DGMDOD=$P(^DPT(DFN,.35),U)
"RTN","EASECE",10,0)
 I $G(DGMDOD) W !,"Patient died on: ",$$FMTE^XLFDT(DGMDOD,"1D") Q
"RTN","EASECE",11,0)
 ;
"RTN","EASECE",12,0)
DT S DIC("A")="Select DATE OF LTC COPAY TEST: "
"RTN","EASECE",13,0)
 I $D(^DGMT(408.31,+$$LST^EASECU(DFN,"",DGMTYPT),0)) S DIC("B")=$P(^(0),"^")
"RTN","EASECE",14,0)
 S DIC("S")="I $P(^(0),U,2)=DFN,$P(^(0),U,19)=DGMTYPT"
"RTN","EASECE",15,0)
 S DIC="^DGMT(408.31,",DIC(0)="EQZ" W ! D EN^DGMTLK K DIC G Q:Y<0
"RTN","EASECE",16,0)
 S DGMTI=+Y,DGMTDT=$P(Y,"^",2),DGMT0=Y(0)
"RTN","EASECE",17,0)
 ;
"RTN","EASECE",18,0)
 ;If test is uneditable, print error message and allow user to view test
"RTN","EASECE",19,0)
 ;or print 10/10EC
"RTN","EASECE",20,0)
 ;
"RTN","EASECE",21,0)
 I '$P($G(^DG(408.34,+$P(Y(0),U,23),0)),U,2) D  D:$G(DGMTERR) VIEWPRT G EN
"RTN","EASECE",22,0)
 .W !!?3,*7,"Warning: Uneditable LTC Copay test.  The source of this test is "_$S($$SR^DGMTAUD1(Y(0))]"":$$SR^DGMTAUD1(Y(0)),1:"UNKNOWN")
"RTN","EASECE",23,0)
 .W !?12,"which has been flagged as an uneditable source.",!
"RTN","EASECE",24,0)
 .S DIR("A")="Would you like to view the LTC Copay test or print the 10-10EC",DIR("B")="NO",DIR(0)="Y"
"RTN","EASECE",25,0)
 .D ^DIR K DIR S DGMTERR=Y I $D(DTOUT)!($D(DUOUT)) K DGMTERR,DTOUT,DUOUT
"RTN","EASECE",26,0)
 ;
"RTN","EASECE",27,0)
 ;Is veteran exempt?
"RTN","EASECE",28,0)
 S DGEXMPT=$$EXMPT^EASECU(DFN)
"RTN","EASECE",29,0)
 I DGEXMPT D EXMPT^EASECSCC(DFN,DGMTI,DGEXMPT) D Q G EN
"RTN","EASECE",30,0)
 ;
"RTN","EASECE",31,0)
 D DISPLAY^EASECU23(DGMTI,DGMTYPT),PAUSE I $D(DTOUT)!($D(DUOUT)) K DTOUT,DUOUT G EN
"RTN","EASECE",32,0)
 ;
"RTN","EASECE",33,0)
 ; Check if veteran's income is below the pension threshold
"RTN","EASECE",34,0)
 D EN^EASECMT I $G(DGOUT) D Q G EN
"RTN","EASECE",35,0)
 I DGEXMPT D EXMPT^EASECSCC(DFN,DGMTI,2) D Q G EN
"RTN","EASECE",36,0)
 S DGMT0=$G(^DGMT(408.31,DGMTI,0)) F I=4,5,15 I $P(DGMT0,U,I) G EDT
"RTN","EASECE",37,0)
 W !! F I=1:1:80 W "="
"RTN","EASECE",38,0)
 W !!,?10,"Veteran is NOT EXEMPT from Long Term Care copayments and"
"RTN","EASECE",39,0)
 W !,?10,"must complete a 10-10EC form."
"RTN","EASECE",40,0)
 W !! F I=1:1:80 W "="
"RTN","EASECE",41,0)
 ; Does veteran decline to provide income information?
"RTN","EASECE",42,0)
 W !!
"RTN","EASECE",43,0)
 D REF^EASECSCC I $D(DTOUT)!($D(DUOUT)) D Q G EN
"RTN","EASECE",44,0)
 I $D(DGREF) D  D Q G EN
"RTN","EASECE",45,0)
 .; Ask if veteran agrees to pay copayments; complete LTC copay test
"RTN","EASECE",46,0)
 .D AGREE^EASECSCC Q:$D(DTOUT)!($D(DUOUT))
"RTN","EASECE",47,0)
 .S DGSTA="NON-EXEMPT",DGCAT="T" D STA^DGMTSCU2 S (DGINT,DGDET,DGNWT)=""
"RTN","EASECE",48,0)
 .D UPD^EASECSCC
"RTN","EASECE",49,0)
 ;
"RTN","EASECE",50,0)
EDT S DGMTACT="EDT",DGMTROU="EN^EASECE" G EN^EASECSC
"RTN","EASECE",51,0)
 ;
"RTN","EASECE",52,0)
Q K DFN,DGEXMPT,DGMTACT,DGMTDT,DGMTERR,DGMT0,DGMTI,DGMTROU,DGMTYPT,DGMTX,DGOUT,DTOUT,DUOUT,X,Y
"RTN","EASECE",53,0)
 K DGREF,DGSTA,DGCAT,DGINT,DGDET,DGNWT
"RTN","EASECE",54,0)
 Q
"RTN","EASECE",55,0)
 ;
"RTN","EASECE",56,0)
PAUSE S DIR(0)="E" D ^DIR
"RTN","EASECE",57,0)
 Q
"RTN","EASECE",58,0)
 ;
"RTN","EASECE",59,0)
VIEWPRT ; Select 1 to view an uneditable means test or 2 to print a 10/10EC
"RTN","EASECE",60,0)
 ;
"RTN","EASECE",61,0)
 S DIR(0)="S^1:View LTC Copay Test;2:Print LTC Copay Test 10-10EC",DIR("A")="Select Choice"
"RTN","EASECE",62,0)
 D ^DIR S DGMTANS=Y G:$D(DTOUT)!($D(DUOUT)) VIEWPRTQ
"RTN","EASECE",63,0)
 I DGMTANS=1 D EN1^EASECV
"RTN","EASECE",64,0)
 I DGMTANS=2 D OEN^EASEC10E
"RTN","EASECE",65,0)
VIEWPRTQ ;
"RTN","EASECE",66,0)
 K DGMTANS,DIR,DTOUT,DUOUT,Y
"RTN","EASECE",67,0)
 Q
"RTN","EASECE",68,0)
 ;
"RTN","EASECMT")
0^5^B31263260
"RTN","EASECMT",1,0)
EASECMT ;ALB/LBD - Means Test for LTC Co-Pay exemption ; 27 DEC 2001
"RTN","EASECMT",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**7**;Mar 15, 2001
"RTN","EASECMT",3,0)
 ;
"RTN","EASECMT",4,0)
EN ; This is the entry point for the routine that will find the 
"RTN","EASECMT",5,0)
 ; financial test for a veteran that can be used to check if
"RTN","EASECMT",6,0)
 ; veteran's income is below the threshold and exempt from LTC
"RTN","EASECMT",7,0)
 ; co-payments.  If a financial test is not on file for the veteran
"RTN","EASECMT",8,0)
 ; it can be added through this process.
"RTN","EASECMT",9,0)
 ;  Input --      DFN = Patient IEN
"RTN","EASECMT",10,0)
 ;  Output --     DGEXMPT = 1 (exempt from LTC co-payments)
"RTN","EASECMT",11,0)
 ;                        = 0 or "" (not exempt from LTC co-payments)
"RTN","EASECMT",12,0)
 ;                DGOUT = 1 (user wants to exit from the process) 
"RTN","EASECMT",13,0)
 N DGMTI,DGMTDT,DGMTYPT,DGMTACT,DGL,DGCS,DGMSGF,DGREQF,Y
"RTN","EASECMT",14,0)
 ; Does veteran have current LTC co-pay exemption test (type 4)?
"RTN","EASECMT",15,0)
 S Y=$$GETLTC4(DFN) I Y S DGEXMPT=$S($P(Y,U,3)="EXEMPT":1,1:0) Q
"RTN","EASECMT",16,0)
 ; Does veteran have current means test?
"RTN","EASECMT",17,0)
 S DGL=$$LST^DGMTU(DFN),DGMTI=+DGL,DGMTDT=$P(DGL,U,2),DGCS=$P(DGL,U,4)
"RTN","EASECMT",18,0)
 ; If means test is required or more than a year old, do new means test
"RTN","EASECMT",19,0)
 I (DGCS="R")!($$OLD^DGMTU4(DGMTDT)) D  Q:$G(DGOUT)!(DGMTYPT=4)
"RTN","EASECMT",20,0)
 .S (DGADDF,DGMSGF)=1 D ^DGMTR S DGMTYPT=$S(DGREQF:1,1:4)
"RTN","EASECMT",21,0)
 .I '$$ASK(DGMTYPT) S DGOUT=1 Q
"RTN","EASECMT",22,0)
 .S DGMTACT="ADD" I DGMTYPT=1,$E(DGMTDT,1,3)=$E(DT,1,3) S DGMTACT="EDT"
"RTN","EASECMT",23,0)
 .I '$$MT(DFN,DGMTYPT,DGMTACT,.DGMTI) S DGOUT=1 Q
"RTN","EASECMT",24,0)
 .I DGMTYPT=4 D
"RTN","EASECMT",25,0)
 ..D COPYRX^DGMTR1(DFN,DGMTI)
"RTN","EASECMT",26,0)
 ..S Y=$$GETCODE^DGMTH($P($G(^DGMT(408.31,DGMTI,0)),U,3)),DGEXMPT=$S(Y=0:1,1:0)
"RTN","EASECMT",27,0)
 ; If no means test or means test is no longer required, check if
"RTN","EASECMT",28,0)
 ; there is an RX co-pay test, otherwise do new LTC co-pay exemption test
"RTN","EASECMT",29,0)
 I DGCS=""!(DGCS="N") D  Q:$G(DGOUT)!($G(DGMTYPT)=4)
"RTN","EASECMT",30,0)
 .S DGL=$$LST^DGMTU(DFN,DT,2),DGMTI=+DGL,DGMTDT=$P(DGL,U,2),DGCS=$P(DGL,U,4)
"RTN","EASECMT",31,0)
 .I DGMTI,'$$OLD^DGMTU4(DGMTDT),("^I^L^")'[("^"_DGCS_"^") Q
"RTN","EASECMT",32,0)
 .S DGMTYPT=4
"RTN","EASECMT",33,0)
 .I '$$ASK(DGMTYPT) S DGOUT=1 Q
"RTN","EASECMT",34,0)
 .I '$$MT(DFN,DGMTYPT,"ADD",.DGMTI) S DGOUT=1 Q
"RTN","EASECMT",35,0)
 .D COPYRX^DGMTR1(DFN,DGMTI)
"RTN","EASECMT",36,0)
 .S Y=$$GETCODE^DGMTH($P($G(^DGMT(408.31,DGMTI,0)),U,3))
"RTN","EASECMT",37,0)
 .S DGEXMPT=$S(Y=0:1,1:0)
"RTN","EASECMT",38,0)
 ; Check if veteran's income is below the pension threshold
"RTN","EASECMT",39,0)
 S DGEXMPT=$$THRES(DFN,DGMTDT)
"RTN","EASECMT",40,0)
 I DGEXMPT<0 W !!,"The income threshold check could not be completed due to an error." S DGOUT=1 Q
"RTN","EASECMT",41,0)
 ; Create LTC co-pay exemption test (type 4) by copying MT
"RTN","EASECMT",42,0)
 D LTC4(DGMTI,DGEXMPT)
"RTN","EASECMT",43,0)
 Q
"RTN","EASECMT",44,0)
 ;
"RTN","EASECMT",45,0)
THRES(DFN,DGMTDT) ; Is veteran's income below the pension threshold
"RTN","EASECMT",46,0)
 ; Input   -  DFN = Patient IEN
"RTN","EASECMT",47,0)
 ;            DGMTDT = Test date
"RTN","EASECMT",48,0)
 ; Output  -   = 1 (Below the threshold)
"RTN","EASECMT",49,0)
 ;             = 0 (Above the threshold)
"RTN","EASECMT",50,0)
 ;             = -1(Error)
"RTN","EASECMT",51,0)
 N DGDC,DGDEP,DGDET,DGERR,DGIN0,DGIN1,DGIN2,DGINI,DGINT,DGINTF,DGIRI
"RTN","EASECMT",52,0)
 N DGNC,DGND,DGNWT,DGNWTF,DGPRI,DGSP,DGVINI,DGVIR0,DGVIRI,DGTHRES
"RTN","EASECMT",53,0)
 ; Get current single veteran pension threshold amount
"RTN","EASECMT",54,0)
 S DGTHRES=$$THRES^IBARXEU1(DGMTDT,1,0) I '+DGTHRES Q -1
"RTN","EASECMT",55,0)
 ; Calculate veteran's income level and check against the threshold
"RTN","EASECMT",56,0)
 S DGPRI=$O(^DGPR(408.12,"C",DFN_";DPT(",0)) I 'DGPRI Q -1
"RTN","EASECMT",57,0)
 D GETIENS^DGMTU2(DFN,DGPRI,DGMTDT) I '$G(DGIRI),'$G(DGINI) Q -1
"RTN","EASECMT",58,0)
 S DGVIRI=DGIRI,DGVINI=DGINI
"RTN","EASECMT",59,0)
 D DEP^DGMTSCU2,INC^DGMTSCU3 I '$D(DGINT) Q -1
"RTN","EASECMT",60,0)
 I (DGINT-DGDET)'>+DGTHRES Q 1
"RTN","EASECMT",61,0)
 Q 0
"RTN","EASECMT",62,0)
 ;
"RTN","EASECMT",63,0)
MT(DFN,TYPE,ACT,DGMTI) ; Complete a means test or LTC co-pay exemption test
"RTN","EASECMT",64,0)
 ; Input    -  DFN = Patient IEN
"RTN","EASECMT",65,0)
 ;             DGMTYPT = Type of test (1=MT; 4=LTC4)
"RTN","EASECMT",66,0)
 ;             ACT = Type of action (ADD or EDT)
"RTN","EASECMT",67,0)
 ;             DGMTI = If EDT action, IEN of test to be edited
"RTN","EASECMT",68,0)
 ; Output   -  EASECMT = 1 (MT completed)
"RTN","EASECMT",69,0)
 ;                     = 0 (MT not completed)
"RTN","EASECMT",70,0)
 ;             DGMTI = IEN of new test
"RTN","EASECMT",71,0)
 N DGMTYPT,DGMTACT,DGMTROU,DGMT0,DGSTA,EASECMT
"RTN","EASECMT",72,0)
 S EASECMT=0
"RTN","EASECMT",73,0)
 I $$LOCK^DGMTUTL(DFN) E  Q EASECMT
"RTN","EASECMT",74,0)
 S DGMTYPT=TYPE,DGMTACT=ACT
"RTN","EASECMT",75,0)
 S DGMTDT=$S(DGMTACT="EDT":+$G(^DGMT(408.31,DGMTI,0)),1:DT) G MT1:'DGMTDT
"RTN","EASECMT",76,0)
 I DGMTACT="ADD" D ADD^DGMTA G MT1:'$G(DGMTI)
"RTN","EASECMT",77,0)
 S DGMTROU="MT1^EASECMT"
"RTN","EASECMT",78,0)
 G EN^DGMTSC
"RTN","EASECMT",79,0)
MT1 I $G(DGMTI) D
"RTN","EASECMT",80,0)
 .S DGMT0=$G(^DGMT(408.31,DGMTI,0)),DGSTA=$$GETCODE^DGMTH($P(DGMT0,U,3))
"RTN","EASECMT",81,0)
 .I DGSTA'="","ACP01"[DGSTA,$P(DGMT0,U,7)]"" S EASECMT=1
"RTN","EASECMT",82,0)
 .I 'EASECMT,TYPE=4 D DEL  ;Delete incomplete LTC copay exemption test
"RTN","EASECMT",83,0)
 D UNLOCK^DGMTUTL(DFN)
"RTN","EASECMT",84,0)
 Q +$G(EASECMT)
"RTN","EASECMT",85,0)
 ;
"RTN","EASECMT",86,0)
LTC4(DGMT,DGEXMPT) ; Create or update LTC copay exemption test (type 4) by copying
"RTN","EASECMT",87,0)
 ; means test
"RTN","EASECMT",88,0)
 ; Input   -   DGMT = Annual Means Test IEN of test to be copied
"RTN","EASECMT",89,0)
 ;         -   DGEXMPT = LTC copayments exemption status (optional)
"RTN","EASECMT",90,0)
 Q:'DGMT
"RTN","EASECMT",91,0)
 N DGMT0,DGMT2,DA,DIC,DIK,DLAYGO,X,DFN,DGMTI
"RTN","EASECMT",92,0)
 N DGMTA,DGMTP,DGMTACT,DGMTINF,DGMTYPT
"RTN","EASECMT",93,0)
 ; Quit if this is a LTC copay exemption test (type 4)
"RTN","EASECMT",94,0)
 S DGMT0=$G(^DGMT(408.31,DGMT,0)) I $P(DGMT0,U,19)=4 Q
"RTN","EASECMT",95,0)
 S DGMT2=$G(^DGMT(408.31,DGMT,2))
"RTN","EASECMT",96,0)
 ; Add a new LTC 4 test or edit an existing LTC 4 test?
"RTN","EASECMT",97,0)
 S DGMTI=$O(^DGMT(408.31,"AT",DGMT,0))
"RTN","EASECMT",98,0)
 S DGMTACT=$S(DGMTI:"EDT",1:"ADD")
"RTN","EASECMT",99,0)
 S DGMTP="" I DGMTACT="EDT" S DGMTP=$G(^DGMT(408.31,DGMTI,0))
"RTN","EASECMT",100,0)
 ; Add new entry to Annual Means Test file (#408.31) for LTC 4 test
"RTN","EASECMT",101,0)
 I DGMTACT="ADD" D  Q:DGMTI'>0
"RTN","EASECMT",102,0)
 .S X=+DGMT0,(DIC,DIK)="^DGMT(408.31,",DIC(0)="L",DLAYGO=408.31
"RTN","EASECMT",103,0)
 .D FILE^DICN S DGMTI=+Y
"RTN","EASECMT",104,0)
 S DFN=$P(DGMT0,U,2)
"RTN","EASECMT",105,0)
 F I=.01,.02,.04,.05,.06,.11,.14,.15,.18,.23 S DATA(I)=$P(DGMT0,U,(I/.01))
"RTN","EASECMT",106,0)
 I '$D(DGEXMPT) S DGEXMPT=$$THRES(DFN,$P(DGMT0,U,1))
"RTN","EASECMT",107,0)
 S DATA(.03)=$S(DGEXMPT:15,1:14),DATA(.07)=DT
"RTN","EASECMT",108,0)
 S DATA(.019)=4,DATA(2.02)=$P(DGMT2,U,2),DATA(2.08)=DGMT
"RTN","EASECMT",109,0)
 S DATA(2.05)=$P(DGMT2,U,5)
"RTN","EASECMT",110,0)
 I $$UPD^DGENDBS(408.31,DGMTI,.DATA,.ERROR)
"RTN","EASECMT",111,0)
 K DATA,ERROR
"RTN","EASECMT",112,0)
 ; Update the LTC copay test (type 3), if status changed
"RTN","EASECMT",113,0)
 I DGMTACT="EDT" D UPLTC3(DGMTI)
"RTN","EASECMT",114,0)
 ; Update Audit file and IVM Patient file
"RTN","EASECMT",115,0)
 S DGMTYPT=4,DGMTINF=1 D AFTER^DGMTEVT
"RTN","EASECMT",116,0)
 D EN^DGMTAUD
"RTN","EASECMT",117,0)
 D EN^IVMPMTE
"RTN","EASECMT",118,0)
 Q
"RTN","EASECMT",119,0)
 ;
"RTN","EASECMT",120,0)
ASK(TYPE) ; Does user want to perform MT/LTC4 test now?
"RTN","EASECMT",121,0)
 ; Input   -   TYPE = Type of test, 1: MT; 4: LTC Copay Exemption
"RTN","EASECMT",122,0)
 ; Output  -   Y = 1 (YES)
"RTN","EASECMT",123,0)
 ;               = 0 (NO)
"RTN","EASECMT",124,0)
 N DIR,TST
"RTN","EASECMT",125,0)
 S TST=$S(TYPE=1:"Means Test",1:"LTC Copay Exemption Test")
"RTN","EASECMT",126,0)
 W !!,"The previous year's financial information is not on file for this veteran.",!,"A ",TST," is required."
"RTN","EASECMT",127,0)
 S DIR("A")="Do you wish to complete the "_TST_" at this time"
"RTN","EASECMT",128,0)
 S DIR("B")="NO",DIR(0)="Y"
"RTN","EASECMT",129,0)
 W ! D ^DIR
"RTN","EASECMT",130,0)
 Q +(Y)
"RTN","EASECMT",131,0)
 ;
"RTN","EASECMT",132,0)
GETLTC4(DFN,DGMTDT) ; Return last LTC co-pay exemption test (type 4),
"RTN","EASECMT",133,0)
 ; if less than a year old
"RTN","EASECMT",134,0)
 ; Input   -   DFN = Patient IEN
"RTN","EASECMT",135,0)
 ;             DGMTDT (optional) = Date of test
"RTN","EASECMT",136,0)
 ; Output  -   Y = Annual Means Test IEN^Date of Test^Status Name^
"RTN","EASECMT",137,0)
 ;                    Status Code^Source of Test
"RTN","EASECMT",138,0)
 ;               = "" (no current LTC co-pay exemption test)
"RTN","EASECMT",139,0)
 N Y
"RTN","EASECMT",140,0)
 S Y="" Q:'$G(DFN) Y I '$G(DGMTDT) S DGMTDT=DT
"RTN","EASECMT",141,0)
 S Y=$$LST^DGMTU(DFN,DGMTDT,4) I '(+Y) Q Y
"RTN","EASECMT",142,0)
 I $$OLD^DGMTU4($P(Y,U,2)) S Y=""
"RTN","EASECMT",143,0)
 Q Y
"RTN","EASECMT",144,0)
 ;
"RTN","EASECMT",145,0)
DEL ;Delete incomplete LTC Copay Exemption test (type 4)
"RTN","EASECMT",146,0)
 ; Input   -- DGMTI  LTC Copay Exemption test IEN
"RTN","EASECMT",147,0)
 N DA,DIK,DIE,DR,V
"RTN","EASECMT",148,0)
 Q:'$G(DGMTI)  Q:$P($G(^DGMT(408.31,DGMTI,0)),U,19)'=4
"RTN","EASECMT",149,0)
 ; Delete pointer in Income Relation file (#408.22)
"RTN","EASECMT",150,0)
 I $D(^DGMT(408.22,"AMT",DGMTI)) D
"RTN","EASECMT",151,0)
 .S DIE="^DGMT(408.22,",DR="31///@"
"RTN","EASECMT",152,0)
 .S V=$O(^DGMT(408.22,"AMT",DGMTI,0)) Q:'V
"RTN","EASECMT",153,0)
 .S IR=0 F  S IR=$O(^DGMT(408.22,"AMT",DGMTI,V,IR)) Q:'IR  S DA=$O(^(IR,0)) I DA D ^DIE
"RTN","EASECMT",154,0)
 ; Delete LTC Copay Exemption test from Annual Means Test file (#408.31)
"RTN","EASECMT",155,0)
 S DA=DGMTI,DIK="^DGMT(408.31,"
"RTN","EASECMT",156,0)
 D ^DIK
"RTN","EASECMT",157,0)
 Q
"RTN","EASECMT",158,0)
 ;
"RTN","EASECMT",159,0)
UPLTC3(DGMT4) ;If the status of a LTC Copay Exemption test (type 4) changes,
"RTN","EASECMT",160,0)
 ;update the status of the LTC Copay test (type 3), if necessary
"RTN","EASECMT",161,0)
 ;  Input   -- DGMT4  LTC Copay Exemption test IEN
"RTN","EASECMT",162,0)
 N DGMT3,DGMTS4,DGMTS3,DGS,DATA,ERROR
"RTN","EASECMT",163,0)
 Q:'DGMT4
"RTN","EASECMT",164,0)
 S DGMT3=$O(^DGMT(408.31,"AT",DGMT4,0)) Q:$G(^DGMT(408.31,+DGMT3,0))=""
"RTN","EASECMT",165,0)
 ; Get test status
"RTN","EASECMT",166,0)
 S DGMTS4=$$GETNAME^DGMTH($P(^DGMT(408.31,DGMT4,0),U,3))
"RTN","EASECMT",167,0)
 S DGMTS3=$$GETNAME^DGMTH($P(^DGMT(408.31,DGMT3,0),U,3))
"RTN","EASECMT",168,0)
 ; If test status is the same quit
"RTN","EASECMT",169,0)
 I DGMTS4=DGMTS3 Q
"RTN","EASECMT",170,0)
 ; If LTC copay test (type 3) is Exempt and the Reason for Exemption is
"RTN","EASECMT",171,0)
 ; anything other than 2 (Income Last Year Below Threshold), quit
"RTN","EASECMT",172,0)
 I DGMTS3="EXEMPT",$P($G(^DGMT(408.31,DGMT3,2)),U,7)'=2 Q
"RTN","EASECMT",173,0)
 ; Get IEN of Means Test Status and update LTC copay test
"RTN","EASECMT",174,0)
 S DGS="" F  S DGS=$O(^DG(408.32,"B",DGMTS4,DGS)) Q:'DGS  I $P(^DG(408.32,DGS,0),U,19)=3 Q
"RTN","EASECMT",175,0)
 S DATA(.03)=DGS,DATA(2.07)=$S(DGMTS4="EXEMPT":2,1:"@")
"RTN","EASECMT",176,0)
 I $$UPD^DGENDBS(408.31,DGMT3,.DATA,.ERROR)
"RTN","EASECMT",177,0)
 Q
"RTN","EASECPC")
0^4^B83111487
"RTN","EASECPC",1,0)
EASECPC ;ALB/PHH - LTC Co-Payment Report; 29-AUG-2001
"RTN","EASECPC",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECPC",3,0)
 ;
"RTN","EASECPC",4,0)
 ; This routine produces a calculated LTC Co-Payment for a veteran.
"RTN","EASECPC",5,0)
 ;
"RTN","EASECPC",6,0)
EN N PAGE,DFN,DGMTI,DGMTDT,DGSTA,MODE,MARIT
"RTN","EASECPC",7,0)
 N DGDC,DGERR,DGINI,DGINTF,DGIRI,DGMTPAR,DGNC,DGND,DGSP,DGVIR0
"RTN","EASECPC",8,0)
 S DTIME=$G(DTIME,300),PAGE=0,(DFN,DGMTI,DGMTDT,DGSTA,MARIT)="",MODE=1
"RTN","EASECPC",9,0)
 Q:$$GETDFN
"RTN","EASECPC",10,0)
 Q:$$GETSDATE
"RTN","EASECPC",11,0)
 Q:$$EXEMPT
"RTN","EASECPC",12,0)
 S MARIT=$$MARIT
"RTN","EASECPC",13,0)
 D QUEUE
"RTN","EASECPC",14,0)
 Q
"RTN","EASECPC",15,0)
GETDFN() ; Get the veteran's DFN
"RTN","EASECPC",16,0)
 N DIC,DTOUT,DUOUT,X,Y
"RTN","EASECPC",17,0)
 W !
"RTN","EASECPC",18,0)
 S DIC="^DPT(",DIC(0)="AEMZQ",DIC("S")="I $D(^DGMT(408.31,""AID"",3,+Y))"
"RTN","EASECPC",19,0)
 D ^DIC
"RTN","EASECPC",20,0)
 Q:$D(DTOUT)!($D(DUOUT)) 1
"RTN","EASECPC",21,0)
 Q:Y<0 1
"RTN","EASECPC",22,0)
 S DFN=+Y
"RTN","EASECPC",23,0)
 Q 0
"RTN","EASECPC",24,0)
GETSDATE() ; Get the Start Date
"RTN","EASECPC",25,0)
 N LST,DIC,DTOUT,DUOUT,X,Y
"RTN","EASECPC",26,0)
 W !
"RTN","EASECPC",27,0)
 S LST=$$LST^EASECU(DFN,"",3)
"RTN","EASECPC",28,0)
 S DIC("A")="Select DATE OF TEST: "
"RTN","EASECPC",29,0)
 I $D(^DGMT(408.31,+LST,0)) S DIC("B")=$P(^DGMT(408.31,+LST,0),"^")
"RTN","EASECPC",30,0)
 S DIC("S")="I $P(^(0),U,2)=DFN,$P(^(0),U,19)=3"
"RTN","EASECPC",31,0)
 S DIC="^DGMT(408.31,",DIC(0)="EQZ"
"RTN","EASECPC",32,0)
 D EN^DGMTLK
"RTN","EASECPC",33,0)
 Q:$D(DTOUT)!($D(DUOUT)) 1
"RTN","EASECPC",34,0)
 Q:Y<0 1
"RTN","EASECPC",35,0)
 S DGMTI=+Y,DGMTDT=$P(Y,U,2)
"RTN","EASECPC",36,0)
 S DGSTA=$$MTS^EASECU(DFN,$P(^DGMT(408.31,DGMTI,0),U,3))
"RTN","EASECPC",37,0)
 S DGSTA=$P(DGSTA,"^")
"RTN","EASECPC",38,0)
 Q 0
"RTN","EASECPC",39,0)
EXEMPT() ; Check for Test Status
"RTN","EASECPC",40,0)
 N LTCTS,ESTAT
"RTN","EASECPC",41,0)
 S LTCTS=$P($G(^DGMT(408.31,DGMTI,0)),U,3)
"RTN","EASECPC",42,0)
 I LTCTS="" D  Q 1
"RTN","EASECPC",43,0)
 .W !!,"This LTC Copayment Test has not yet been completed for this veteran!"
"RTN","EASECPC",44,0)
 S ESTAT=$P($G(^DG(408.32,LTCTS,0)),U)
"RTN","EASECPC",45,0)
 I ESTAT="EXEMPT" D  Q 1
"RTN","EASECPC",46,0)
 .W !!,"This veteran is ",ESTAT," from LTC Copayments!"
"RTN","EASECPC",47,0)
 I ESTAT'="NON-EXEMPT" D  Q 1
"RTN","EASECPC",48,0)
 .W !!,"This LTC Copay Test record contains an invalid test status!"
"RTN","EASECPC",49,0)
 .W !,"DFN: ",DGMTI,!,"Test Status: ",LTCTS
"RTN","EASECPC",50,0)
 Q 0
"RTN","EASECPC",51,0)
MARIT() ; Define Marital Status
"RTN","EASECPC",52,0)
 N DGPRI,DGVIRI,SRIC
"RTN","EASECPC",53,0)
 S DGPRI=$O(^DGPR(408.12,"C",DFN_";DPT(",0))
"RTN","EASECPC",54,0)
 D GETIENS^EASECU2(DFN,DGPRI,DGMTDT)
"RTN","EASECPC",55,0)
 S DGVIRI=DGIRI
"RTN","EASECPC",56,0)
 D DEP^EASECSU3
"RTN","EASECPC",57,0)
 S SRIC=$P(DGVIR0,U,16)
"RTN","EASECPC",58,0)
 Q DGSP_"^"_SRIC
"RTN","EASECPC",59,0)
QUEUE ; Get report device. Queue report if requested.
"RTN","EASECPC",60,0)
 N MSG
"RTN","EASECPC",61,0)
 S MSG(1)=""
"RTN","EASECPC",62,0)
 S MSG(2)="This report may take a long time to generate.  It is recommended that the report"
"RTN","EASECPC",63,0)
 S MSG(3)="be queued to print."
"RTN","EASECPC",64,0)
 S MSG(4)=""
"RTN","EASECPC",65,0)
 D BMES^XPDUTL(.MSG)
"RTN","EASECPC",66,0)
 K IOP,%ZIS
"RTN","EASECPC",67,0)
 S %ZIS="MQ"
"RTN","EASECPC",68,0)
 D ^%ZIS I POP W !!,"Report Cancelled!" Q
"RTN","EASECPC",69,0)
 I $D(IO("Q")) D  Q
"RTN","EASECPC",70,0)
 .S ZTRTN="START^EASECPC"
"RTN","EASECPC",71,0)
 .S ZTDESC="LTC Copay Calculation Report"
"RTN","EASECPC",72,0)
 .S (ZTSAVE("DFN"),ZTSAVE("DGMTI"),ZTSAVE("DGMTDT"),ZTSAVE("DGSTA"))=""
"RTN","EASECPC",73,0)
 .S (ZTSAVE("MODE"),ZTSAVE("PAGE"),ZTSAVE("MARIT"))=""
"RTN","EASECPC",74,0)
 .D ^%ZTLOAD
"RTN","EASECPC",75,0)
 .W !!,"Report "_$S($D(ZTSK):"Queued!",1:"Cancelled!")
"RTN","EASECPC",76,0)
 .D HOME^%ZIS
"RTN","EASECPC",77,0)
 D START,^%ZISC
"RTN","EASECPC",78,0)
 Q
"RTN","EASECPC",79,0)
INITHDR ; Initialize the Report Header
"RTN","EASECPC",80,0)
 N %,%H,%I,X,CDATE
"RTN","EASECPC",81,0)
 D NOW^%DTC
"RTN","EASECPC",82,0)
 S CDATE=X
"RTN","EASECPC",83,0)
 S HDR(1)=$$FMTE^XLFDT(CDATE)
"RTN","EASECPC",84,0)
 S HDR(2)=""
"RTN","EASECPC",85,0)
 I MODE S HDR(3)="        LONG TERM CARE ESTIMATED COPAYMENTS FOR INSTITUTIONAL SERVICES"
"RTN","EASECPC",86,0)
 I 'MODE S HDR(3)="      LONG TERM CARE ESTIMATED COPAYMENTS FOR NON-INSTITUTIONAL SERVICES"
"RTN","EASECPC",87,0)
 S HDR(4)=""
"RTN","EASECPC",88,0)
 S HDR(5)=""
"RTN","EASECPC",89,0)
 Q
"RTN","EASECPC",90,0)
HEADER ; Print the header
"RTN","EASECPC",91,0)
 N LTCIDX,PGHDR
"RTN","EASECPC",92,0)
 S PAGE=$G(PAGE,0),PAGE=PAGE+1,PGHDR="Page: "_$J(PAGE,3)
"RTN","EASECPC",93,0)
 W #
"RTN","EASECPC",94,0)
 S LTCIDX="",LTCIDX=$O(HDR(LTCIDX))
"RTN","EASECPC",95,0)
 W HDR(LTCIDX),?71,PGHDR
"RTN","EASECPC",96,0)
 F  S LTCIDX=$O(HDR(LTCIDX)) Q:LTCIDX=""  D
"RTN","EASECPC",97,0)
 .W !,HDR(LTCIDX)
"RTN","EASECPC",98,0)
 Q
"RTN","EASECPC",99,0)
START ; Generate Report
"RTN","EASECPC",100,0)
 N CRT,HDR
"RTN","EASECPC",101,0)
 S CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","EASECPC",102,0)
 S MODE=1 U IO W ! D PRINT W !     ; Institutional
"RTN","EASECPC",103,0)
 I CRT Q:$$PAUSE(0)
"RTN","EASECPC",104,0)
 D:'CRT NOTETXT
"RTN","EASECPC",105,0)
 S MODE=0 U IO W ! D PRINT W !     ; Non-institutional
"RTN","EASECPC",106,0)
 I CRT Q:$$PAUSE(0)
"RTN","EASECPC",107,0)
 D:'CRT NOTETXT
"RTN","EASECPC",108,0)
 I CRT D  Q:$$PAUSE(0)
"RTN","EASECPC",109,0)
 .K HDR(3),HDR(4),HDR(5)
"RTN","EASECPC",110,0)
 .D HEADER,NOTETXT
"RTN","EASECPC",111,0)
 D EN^EASECPC1
"RTN","EASECPC",112,0)
 U 0
"RTN","EASECPC",113,0)
 I $G(ZTSK) S ZTREQ="@"
"RTN","EASECPC",114,0)
 Q
"RTN","EASECPC",115,0)
PRINT ; Print the Report
"RTN","EASECPC",116,0)
 N PAT0,NAME,SSN,DOB,ARRY,HDTEXT,IDX,SIDX,EIDX,MNTH,CPYFLG
"RTN","EASECPC",117,0)
 D INITHDR
"RTN","EASECPC",118,0)
 S PAT0=$G(^DPT(DFN,0)),NAME=$P(PAT0,"^"),SSN=$P(PAT0,"^",9),DOB=$P(PAT0,"^",3)
"RTN","EASECPC",119,0)
 ;
"RTN","EASECPC",120,0)
 D BLDTBL(DGMTDT,.ARRY)
"RTN","EASECPC",121,0)
 D DETFIG(.ARRY)
"RTN","EASECPC",122,0)
 S HDTEXT="TOTAL INCOME - TOTAL EXPENSES - TOTAL ALLOWANCE"
"RTN","EASECPC",123,0)
 D HEADER
"RTN","EASECPC",124,0)
 W NAME,?35,SSN,?62,"DOB: ",$$FMTE^XLFDT(DOB)
"RTN","EASECPC",125,0)
 W !,$S(+MARIT:"MARRIED",1:"SINGLE")
"RTN","EASECPC",126,0)
 I +MARIT,$P(MARIT,"^",2) W ?15,"SPOUSE RESIDING IN THE COMMUNITY"
"RTN","EASECPC",127,0)
 I CPYFLG W !,"** DECLINED TO PROVIDE INCOME INFORMATION **"
"RTN","EASECPC",128,0)
 W !,"LTC COPAY REPORT START DATE: ",$$FMTE^XLFDT(DGMTDT)
"RTN","EASECPC",129,0)
 W !!!,"LTC COPAYMENTS FOR DAYS 1-180",!,"COPAY CALC: ",HDTEXT
"RTN","EASECPC",130,0)
 S SIDX=1,EIDX=6
"RTN","EASECPC",131,0)
 W ! D PRINTROW("TOT INCOME    ",SIDX,EIDX,3)
"RTN","EASECPC",132,0)
 D PRINTROW("TOT EXPENSES  ",SIDX,EIDX,4)
"RTN","EASECPC",133,0)
 D PRINTROW("TOT ALLOWANCE ",SIDX,EIDX,5)
"RTN","EASECPC",134,0)
 W ! D PRINTROW("CALC COPAY    ",SIDX,EIDX,6)
"RTN","EASECPC",135,0)
 D PRINTROW("MAX COPAY     ",SIDX,EIDX,7)
"RTN","EASECPC",136,0)
 D PRINTROW("VET MAX COPAY ",SIDX,EIDX,8)
"RTN","EASECPC",137,0)
 W !,"              "
"RTN","EASECPC",138,0)
 F MNTH=1:1:6 W $J($P(ARRY(MNTH),"^"),11)
"RTN","EASECPC",139,0)
 ;
"RTN","EASECPC",140,0)
 I MODE,'+MARIT S HDTEXT="(TOTAL ASSETS + TOTAL INCOME) - TOTAL ALLOWANCE"
"RTN","EASECPC",141,0)
 I MODE,+MARIT S HDTEXT="(TOTAL ASSETS + TOTAL INCOME) - TOTAL EXPENSES - TOTAL ALLOWANCE"
"RTN","EASECPC",142,0)
 W !!,"LTC COPAYMENTS FOR DAYS 181+"
"RTN","EASECPC",143,0)
 W !,"COPAY CALC: ",HDTEXT,!
"RTN","EASECPC",144,0)
 S SIDX=7,EIDX=12
"RTN","EASECPC",145,0)
 I MODE D PRINTROW("TOT ASSETS    ",SIDX,EIDX,9)
"RTN","EASECPC",146,0)
 D PRINTROW("TOT INCOME    ",SIDX,EIDX,3)
"RTN","EASECPC",147,0)
 I 'MODE!MARIT D PRINTROW("TOT EXPENSES  ",SIDX,EIDX,4)
"RTN","EASECPC",148,0)
 D PRINTROW("TOT ALLOWANCE ",SIDX,EIDX,5)
"RTN","EASECPC",149,0)
 W ! D PRINTROW("CALC COPAY    ",SIDX,EIDX,6)
"RTN","EASECPC",150,0)
 D PRINTROW("MAX COPAY     ",SIDX,EIDX,7)
"RTN","EASECPC",151,0)
 D PRINTROW("VET MAX COPAY ",SIDX,EIDX,8)
"RTN","EASECPC",152,0)
 W !,"              "
"RTN","EASECPC",153,0)
 F MNTH=7:1:12 W $J($P(ARRY(MNTH),"^"),11)
"RTN","EASECPC",154,0)
 Q
"RTN","EASECPC",155,0)
PRINTROW(TEXT,SIDX,EIDX,NODE) ; Print the Rows
"RTN","EASECPC",156,0)
 N MNTH
"RTN","EASECPC",157,0)
 W !,TEXT
"RTN","EASECPC",158,0)
 F MNTH=SIDX:1:EIDX W $J($S($P(ARRY(MNTH),"^",NODE)[".":$P($P(ARRY(MNTH),"^",NODE),"."),1:$P(ARRY(MNTH),"^",NODE)),11)
"RTN","EASECPC",159,0)
 Q
"RTN","EASECPC",160,0)
PAUSE(RESP) ; Prompt user for next page or quit
"RTN","EASECPC",161,0)
 N DIR,DIRUT,DUOUT,DTOUT,U,X,Y
"RTN","EASECPC",162,0)
 S DIR(0)="E"
"RTN","EASECPC",163,0)
 D ^DIR
"RTN","EASECPC",164,0)
 I 'Y S RESP=1
"RTN","EASECPC",165,0)
 Q RESP
"RTN","EASECPC",166,0)
BLDTBL(DATE,ARRY) ; Build the Month/Year Table
"RTN","EASECPC",167,0)
 N IDX,FMNYR
"RTN","EASECPC",168,0)
 K ARRY
"RTN","EASECPC",169,0)
 S DATE=$$FMTHL7^XLFDT(DGMTDT)
"RTN","EASECPC",170,0)
 S FMNYR=$E(DATE,1,6)_"00"
"RTN","EASECPC",171,0)
 F IDX=1:1:12 D
"RTN","EASECPC",172,0)
 .S ARRY(IDX)=$$UP^XLFSTR($$FMTE^XLFDT($$HL7TFM^XLFDT(FMNYR)))
"RTN","EASECPC",173,0)
 .S ARRY(IDX)=$P(ARRY(IDX)," ")_"'"_$E($P(ARRY(IDX)," ",2),3,4)
"RTN","EASECPC",174,0)
 .S $P(ARRY(IDX),"^",2)=$E(FMNYR,5,6)
"RTN","EASECPC",175,0)
 .S FMNYR=$E(FMNYR,1,4)_$E(FMNYR,5,6)+1_"00"
"RTN","EASECPC",176,0)
 .S:$E(FMNYR,5,6)=13 FMNYR=$E(FMNYR,1,4)+1_"0100"
"RTN","EASECPC",177,0)
 Q
"RTN","EASECPC",178,0)
DETFIG(ARRY) ; Determine Figures
"RTN","EASECPC",179,0)
 ; Variables:  Marit:     0 = Single         1 = Married
"RTN","EASECPC",180,0)
 ;             Mode:      0 = Out-Patient    1 = In-Patient
"RTN","EASECPC",181,0)
 ;             FLAG180:   0 = 180 or Less    1 = 181+
"RTN","EASECPC",182,0)
 ;             SRIC:      0 = Not in Com.    1 = Reside in Com.
"RTN","EASECPC",183,0)
 ;             LWP:       0 = Not live w/    1 = Living w/ Pat.
"RTN","EASECPC",184,0)
 ;
"RTN","EASECPC",185,0)
 N DGDC,DGDEP,DGERR,DGFL,DGIN0,DGIN1,DGIN2,DGDET,DGINT,DGNWT
"RTN","EASECPC",186,0)
 N DGMTSC,DGNC,DGND,DGNWTF,DGSP,DGVINI,DGVIR0,DGVIRI,DGVPRI
"RTN","EASECPC",187,0)
 N IDX,INC,FLAG180,FXAST,LQAST,EXP,TAST,TINC,TEXP,DECINF,AGRPAY
"RTN","EASECPC",188,0)
 N ALLOW,CALCCPY,DAYS,LWP,MAXCPY,SRIC,VETMAX
"RTN","EASECPC",189,0)
 ;
"RTN","EASECPC",190,0)
 D SETUP^EASECSCU,DEP^EASECSU3,INC^EASECSU3
"RTN","EASECPC",191,0)
 S CPYFLG=0
"RTN","EASECPC",192,0)
 S DECINF=$P($G(^DGMT(408.31,DGMTI,0)),"^",14)
"RTN","EASECPC",193,0)
 S AGRPAY=$P($G(^DGMT(408.31,DGMTI,0)),"^",11)
"RTN","EASECPC",194,0)
 I DECINF,AGRPAY S CPYFLG=1
"RTN","EASECPC",195,0)
 S SRIC=$P(MARIT,U,2)
"RTN","EASECPC",196,0)
 S LWP=+$P(DGVIR0,U,15)
"RTN","EASECPC",197,0)
 S INC=DGINT,EXP=DGDET
"RTN","EASECPC",198,0)
 ;
"RTN","EASECPC",199,0)
 F FLAG180=0,1 D
"RTN","EASECPC",200,0)
 .I 'MODE S TAST=0
"RTN","EASECPC",201,0)
 .I MODE D
"RTN","EASECPC",202,0)
 ..S TAST=$S(FLAG180:DGNWT,1:0)
"RTN","EASECPC",203,0)
 ..I 'MARIT,FLAG180 S EXP=0
"RTN","EASECPC",204,0)
 .S TINC=INC/12,TEXP=EXP/12
"RTN","EASECPC",205,0)
 .;
"RTN","EASECPC",206,0)
 .; Build both tables: 1-180 days and 181+ days
"RTN","EASECPC",207,0)
 .F IDX=$S(FLAG180:7,1:1):1:$S(FLAG180:12,1:6) D
"RTN","EASECPC",208,0)
 ..S DAYS=$$DOM($P(ARRY(IDX),"^",2))
"RTN","EASECPC",209,0)
 ..S ALLOW=20*DAYS*(1+SRIC) S:CPYFLG ALLOW=0
"RTN","EASECPC",210,0)
 ..S CALCCPY=$$CALCCPY
"RTN","EASECPC",211,0)
 ..S MAXCPY=$$CALCMAX(DAYS)
"RTN","EASECPC",212,0)
 ..S VETMAX=$$VETMAX(CALCCPY,MAXCPY)
"RTN","EASECPC",213,0)
 ..S $P(ARRY(IDX),"^",3)=TINC
"RTN","EASECPC",214,0)
 ..S $P(ARRY(IDX),"^",4)=TEXP
"RTN","EASECPC",215,0)
 ..S $P(ARRY(IDX),"^",5)=ALLOW
"RTN","EASECPC",216,0)
 ..S $P(ARRY(IDX),"^",6)=CALCCPY
"RTN","EASECPC",217,0)
 ..S $P(ARRY(IDX),"^",7)=MAXCPY
"RTN","EASECPC",218,0)
 ..S $P(ARRY(IDX),"^",8)=VETMAX
"RTN","EASECPC",219,0)
 ..S:FLAG180 $P(ARRY(IDX),"^",9)=TAST
"RTN","EASECPC",220,0)
 ..I FLAG180 S TAST=$$ASTSPD
"RTN","EASECPC",221,0)
 Q
"RTN","EASECPC",222,0)
 ;
"RTN","EASECPC",223,0)
ASTSPD() ;Asset Spend down for 180+ days
"RTN","EASECPC",224,0)
 Q:CPYFLG TAST
"RTN","EASECPC",225,0)
 I (TINC-TEXP)'>VETMAX D
"RTN","EASECPC",226,0)
 . I MARIT S TAST=TAST-(VETMAX-(TINC-TEXP-ALLOW))
"RTN","EASECPC",227,0)
 . I 'MARIT S TAST=TAST-(VETMAX-(TINC-ALLOW))
"RTN","EASECPC",228,0)
 . S:TAST<0 TAST=0
"RTN","EASECPC",229,0)
 Q TAST
"RTN","EASECPC",230,0)
 ;
"RTN","EASECPC",231,0)
CALCCPY() ; Calculate the Co-Pay Amount
"RTN","EASECPC",232,0)
 ;
"RTN","EASECPC",233,0)
 Q:CPYFLG 0
"RTN","EASECPC",234,0)
 Q TAST+TINC-ALLOW-TEXP
"RTN","EASECPC",235,0)
DOM(MNTH) ; Days in Month
"RTN","EASECPC",236,0)
 ; Returns: number of days in a month
"RTN","EASECPC",237,0)
 N DAYS,HL7DATE
"RTN","EASECPC",238,0)
 I "04060911"[MNTH S DAYS=30 Q DAYS
"RTN","EASECPC",239,0)
 I MNTH="02" D  Q DAYS
"RTN","EASECPC",240,0)
 .S DAYS=28
"RTN","EASECPC",241,0)
 .S HL7DATE=$$FMTHL7^XLFDT(DGMTDT)
"RTN","EASECPC",242,0)
 .S:$E(HL7DATE,1,4)#4=0 DAYS=29
"RTN","EASECPC",243,0)
 S DAYS=31
"RTN","EASECPC",244,0)
 Q DAYS
"RTN","EASECPC",245,0)
CALCMAX(DAYS) ; Calculate the Maximum Co-Pay Amount
"RTN","EASECPC",246,0)
 ;
"RTN","EASECPC",247,0)
 Q $S(MODE:97,1:15)*DAYS
"RTN","EASECPC",248,0)
VETMAX(CALCCPY,MAXCPY) ; Calculate the Veteran Maximum Co-Pay Amount
"RTN","EASECPC",249,0)
 ;
"RTN","EASECPC",250,0)
 Q:CPYFLG MAXCPY
"RTN","EASECPC",251,0)
 Q:CALCCPY<0 0
"RTN","EASECPC",252,0)
 Q:CALCCPY<MAXCPY CALCCPY
"RTN","EASECPC",253,0)
 Q MAXCPY
"RTN","EASECPC",254,0)
NOTETXT ; Write the Note message
"RTN","EASECPC",255,0)
 W !!,"IMPORTANT NOTICE: The copayment amounts shown in this report are"
"RTN","EASECPC",256,0)
 W " estimates",!,"based on calculations of the copayment amount for "
"RTN","EASECPC",257,0)
 W "an entire month. The",!,"copayment amounts will be adjusted to "
"RTN","EASECPC",258,0)
 W "reflect the actual start date of LTC",!,"services and the "
"RTN","EASECPC",259,0)
 W "copayment exemption for the first 21 days of service. The VET",!
"RTN","EASECPC",260,0)
 W "MAX COPAY amount is based on the assumption that the veteran "
"RTN","EASECPC",261,0)
 W "will be",!,"responsible to pay the lesser of EITHER the calculated"
"RTN","EASECPC",262,0)
 W " copayment (CALC COPAY) OR",!,"the maximum copayment (MAX COPAY).  "
"RTN","EASECPC",263,0)
 W "In the event that the calculated copayment",!,"(CALC COPAY) is a "
"RTN","EASECPC",264,0)
 W "negative figure, the veteran maximum copayment (VET MAX COPAY)",!
"RTN","EASECPC",265,0)
 W "will be adjusted to zero (0). If the veteran declined to provide"
"RTN","EASECPC",266,0)
 W " income",!,"information, the veteran will be obligated to pay the"
"RTN","EASECPC",267,0)
 W " maximum copayment."
"RTN","EASECPC",268,0)
 Q
"RTN","EASECPC1")
0^13^B3026409
"RTN","EASECPC1",1,0)
EASECPC1 ;ALB/LBD - LTC Co-Payment Report continuation ; 6-FEB-2002
"RTN","EASECPC1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**7**;Mar 15, 2001
"RTN","EASECPC1",3,0)
 ;
"RTN","EASECPC1",4,0)
 ; This routine produces a calculated LTC Co-Payment for a veteran.
"RTN","EASECPC1",5,0)
 ;
"RTN","EASECPC1",6,0)
EN ;
"RTN","EASECPC1",7,0)
 ; Print explanation of spend down page
"RTN","EASECPC1",8,0)
 D HEADER^EASECPC,SPNDDWN
"RTN","EASECPC1",9,0)
 Q
"RTN","EASECPC1",10,0)
SPNDDWN ; Text of message to explain the asset spend down
"RTN","EASECPC1",11,0)
 W !!,"EXPLANATION OF ASSET SPEND DOWN CALCULATION:"
"RTN","EASECPC1",12,0)
 W !,"============================================"
"RTN","EASECPC1",13,0)
 W !,"The veteran's assets are included in the calculation of copayments"
"RTN","EASECPC1",14,0)
 W !,"after 180 days of institutional LTC services.  The assets then may"
"RTN","EASECPC1",15,0)
 W !,"be reduced each month according to the following formula:"
"RTN","EASECPC1",16,0)
 W !
"RTN","EASECPC1",17,0)
 W !,"Single Veteran:"
"RTN","EASECPC1",18,0)
 W !
"RTN","EASECPC1",19,0)
 W !,"  TOTAL ASSETS-(MAX COPAY-(INCOME-ALLOWANCE))"
"RTN","EASECPC1",20,0)
 W !
"RTN","EASECPC1",21,0)
 W !,"Married Veteran (spouse residing in the community):"
"RTN","EASECPC1",22,0)
 W !
"RTN","EASECPC1",23,0)
 W !,"  TOTAL ASSETS-(MAX COPAY-(INCOME-EXPENSES-ALLOWANCE))"
"RTN","EASECPC1",24,0)
 W !
"RTN","EASECPC1",25,0)
 W !,"In other words, the assets will be reduced by the amount of the"
"RTN","EASECPC1",26,0)
 W !,"maximum copayment that is not covered by the veteran's income "
"RTN","EASECPC1",27,0)
 W !,"after all expenses and/or allowances are subtracted."
"RTN","EASECPC1",28,0)
 W !
"RTN","EASECPC1",29,0)
 Q
"RTN","EASECSC")
0^15^B3781232
"RTN","EASECSC",1,0)
EASECSC ;ALB/LBD - LTC Co-Pay Test Screen Driver ;10 AUG 2001
"RTN","EASECSC",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECSC",3,0)
 ;
"RTN","EASECSC",4,0)
 ;A series of screens used to collect the LTC Co-pay Test data
"RTN","EASECSC",5,0)
 ; Input  -- DFN      Patient IEN
"RTN","EASECSC",6,0)
 ;           DGMTACT  Menu Action  (ie, ADD to Add a New Test)
"RTN","EASECSC",7,0)
 ;           DGMTDT   Date of Test
"RTN","EASECSC",8,0)
 ;           DGMTI    Annual Means Test IEN
"RTN","EASECSC",9,0)
 ;           DGMTYPT  Type of Test 3=LTC COPAY
"RTN","EASECSC",10,0)
 ;           DGMTROU  Option Routine Return
"RTN","EASECSC",11,0)
 ; Output -- None
"RTN","EASECSC",12,0)
 ;NOTE: This routine was modified from DGMTSC for LTC Co-pay
"RTN","EASECSC",13,0)
 ;
"RTN","EASECSC",14,0)
EN ;Entry point for LTC co-pay test screen driver
"RTN","EASECSC",15,0)
 D HOME^%ZIS,SETUP^EASECSCU I DGERR D MG G Q1
"RTN","EASECSC",16,0)
EN1 ;Entry point to edit LTC co-pay test if incomplete
"RTN","EASECSC",17,0)
 S DGMTSCI=+$O(DGMTSC(0)) G @($$ROU^EASECSCU(DGMTSCI))
"RTN","EASECSC",18,0)
 ;
"RTN","EASECSC",19,0)
Q I DGMTACT'="VEW" D:$G(DGX)'="^" EN^EASECSCC I DGERR G EN1:$$EDT
"RTN","EASECSC",20,0)
Q1 ;
"RTN","EASECSC",21,0)
 K %,DGBL,DGDC,DGDEP,DGDR,DGFCOL,DGFL,DGMT0,DGMTA,DGMTINF,DGMTOUT,DGMTP,DGMTPAR,DGMTSC,DGMTSCI,DGREL,DGRNG,DGRPPR,DGSCOL,DGSEL,DGSELTY,DGVI,DGVINI,DGVIRI,DGVO,DGVPRI,DGX,DGY,DTOUT,DUOUT,Y,Z
"RTN","EASECSC",22,0)
 ;
"RTN","EASECSC",23,0)
 ;Update the TEST-DETERMINED STATUS field (#2.03) in the ANNUAL MEANS
"RTN","EASECSC",24,0)
 ;TEST file (408.31) when adding a means or copay test, completing a 
"RTN","EASECSC",25,0)
 ;means test, or editing a means or copay test.
"RTN","EASECSC",26,0)
 ;I "ADDCOMEDT"[DGMTACT D SAVESTAT^DGMTU4(DGMTI,DGERR)
"RTN","EASECSC",27,0)
 K DGERR
"RTN","EASECSC",28,0)
 ;
"RTN","EASECSC",29,0)
 G @(DGMTROU)
"RTN","EASECSC",30,0)
 ;
"RTN","EASECSC",31,0)
MG ;Print set-up error messages
"RTN","EASECSC",32,0)
 I $D(DGVPRI),DGVPRI'>0 W !!?3,"Patient Relation cannot be setup for patient."
"RTN","EASECSC",33,0)
 I $D(DGVINI),DGVINI'>0 W !!?3,"Individual Annual Income cannot be setup for patient."
"RTN","EASECSC",34,0)
 ;I $D(DGMTPAR),DGMTPAR']"",DGMTYPT=1 W !!?3,"Means Test Thresholds are not defined."
"RTN","EASECSC",35,0)
 W !?3,*7,"Please contact your site manager."
"RTN","EASECSC",36,0)
 Q
"RTN","EASECSC",37,0)
 ;
"RTN","EASECSC",38,0)
EDT() ;Edit means/copay test if incomplete
"RTN","EASECSC",39,0)
 N DIR,Y
"RTN","EASECSC",40,0)
 S DIR("A")="Do you wish to edit the LTC copay test"
"RTN","EASECSC",41,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR
"RTN","EASECSC",42,0)
 Q +$G(Y)
"RTN","EASECSC1")
0^7^B30085546
"RTN","EASECSC1",1,0)
EASECSC1 ;ALB/PHH - LTC Co-Pay Test Screen Military Service ;18 AUG 2001
"RTN","EASECSC1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECSC1",3,0)
 ;
"RTN","EASECSC1",4,0)
 ; Input  -- DFN      Patient IEN
"RTN","EASECSC1",5,0)
 ;           DGMTACT  LTC Co-Pay Test Action
"RTN","EASECSC1",6,0)
 ;           DGVINI   Veteran Individual Annual Income IEN
"RTN","EASECSC1",7,0)
 ;           DGVIRI   Veteran Income Relation IEN
"RTN","EASECSC1",8,0)
 ;           DGVPRI   Veteran Patient Relation IEN
"RTN","EASECSC1",9,0)
 ; Output -- None
"RTN","EASECSC1",10,0)
 ;
"RTN","EASECSC1",11,0)
EN ;Entry point
"RTN","EASECSC1",12,0)
 N DGLTCEX,DGLTC,IORVON,IORVOFF
"RTN","EASECSC1",13,0)
 D ^DGRPV
"RTN","EASECSC1",14,0)
 D EASECRP6
"RTN","EASECSC1",15,0)
 S X="IORVON;IORVOFF" D ENDR^%ZISS K X
"RTN","EASECSC1",16,0)
 I $G(DGLTCEX) W !?2,$G(IORVON)," * VETERAN MAY BE EXEMPT FROM COPAY IF LTC EPISODE IS DUE TO THIS CONDITION.",$G(IORVOFF)
"RTN","EASECSC1",17,0)
 S X="^2"
"RTN","EASECSC1",18,0)
 S:$$PAUSE(0) X="^"
"RTN","EASECSC1",19,0)
 G EN1^EASECSCR
"RTN","EASECSC1",20,0)
 Q
"RTN","EASECSC1",21,0)
PAUSE(RESP) ; Prompt user for next page or quit
"RTN","EASECSC1",22,0)
 N DIR,DIRUT,DUOUT,DTOUT,U,X,Y
"RTN","EASECSC1",23,0)
 S DIR(0)="E"
"RTN","EASECSC1",24,0)
 D ^DIR
"RTN","EASECSC1",25,0)
 I 'Y S RESP=1
"RTN","EASECSC1",26,0)
 Q RESP
"RTN","EASECSC1",27,0)
 ;
"RTN","EASECSC1",28,0)
EASECRP6 ; Display the screen
"RTN","EASECSC1",29,0)
 ; Note: This section was copied from ^DGRP6 and modified specifically
"RTN","EASECSC1",30,0)
 ;       to work with LTC.
"RTN","EASECSC1",31,0)
 ;
"RTN","EASECSC1",32,0)
 S (DGRPS,DGMTSCI)=1 D HD^EASECSCU F I=.32,.321,.322,.36,.52,.53 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","EASECSC1",33,0)
 S (DGRPW,Z)=1 D WW S Z="    Service Branch",Z1=24 D WW1^DGRPV S Z="   Service #",Z1=19 D WW1^DGRPV S Z="   Entered",Z1=12 D WW1^DGRPV S Z="   Separated",Z1=12 D WW1^DGRPV W "   Discharge"
"RTN","EASECSC1",34,0)
 W !?4,"--------------",?27,"---------",?46,"-------",?58,"---------",?70,"---------"
"RTN","EASECSC1",35,0)
 S DGRPX=DGRP(.32),DGRPSV=4 D S I $P(DGRPX,"^",19)="Y" S DGRPSV=9 D S I $P(DGRPX,"^",20)="Y" S DGRPSV=14 D S
"RTN","EASECSC1",36,0)
 S Z=2,DGRPX=DGRP(.52) D WW W "           POW: " S X=5,Z1=6 D YN W "From: " S X=7,Z1=13 D DAT W "To: " S X=8,Z1=12 D DAT W "War: ",$S($D(^DIC(22,+$P(DGRPX,"^",6),0)):$P(^(0),"^",2),1:"")
"RTN","EASECSC1",37,0)
 S Z=3 D WW W "        Combat: " S X=11,Z1=6 D YN W "From: " S X=13,Z1=13 D DAT W "To: " S X=14,Z1=12 D DAT W "Loc: ",$S($D(^DIC(22,+$P(DGRPX,"^",12),0)):$P(^(0),"^",2),1:"")
"RTN","EASECSC1",38,0)
 S Z=4,DGRPX=DGRP(.321) D WW W "       Vietnam: " S X=1,Z1=6 D YN W "From: " S X=4,Z1=13 D DAT W "To: " S X=5,X1=13 D DAT
"RTN","EASECSC1",39,0)
 S Z=5 D WW W "      A/O Exp.: " S X=2,Z1=7,DGLTC=1 D YN W "Reg: " S X=7,Z1=11 D DAT W "Exam: " S X=9,Z1=11 D DAT W "A/O#: " S Z=$P(DGRPX,"^",10),Z1=8 D WW1^DGRPV S Z=$P(DGRPX,"^",13) W $S(Z="K":" DMZ",Z="V":"VIET",1:"")
"RTN","EASECSC1",40,0)
 S Z=6 D WW W "      ION Rad.: " S X=3,Z1=7,DGLTC=1 D YN W "Reg: " S X=11,Z1=9 D DAT W "Method: " S X=$P(DGRPX,"^",12) W $S(X="B":"BOTH",X="T":"NUCLEAR TESTING",X="N":"NAGASAKI/HIROSHIMA",1:"")
"RTN","EASECSC1",41,0)
 S DGRPX=DGRP(.322)
"RTN","EASECSC1",42,0)
 F DGX=1,4,7,10 S X=DGX,Z=DGX-1/3+7 D WW W:DGX<10 " " W $S(DGX=1:"      Lebanon",DGX=4:"      Grenada",DGX=7:"       Panama",1:"      Gulf War"),": " S Z1=6 D YN W "From: " S X=DGX+1,Z1=13 D DAT W "To: " S X=DGX+2,Z1=12 D DAT
"RTN","EASECSC1",43,0)
 S Z=11 D WW W "       Somalia: " S (DGX,X)=16,Z1=6 D YN W "From: " S X=17,Z1=13 D DAT W "To: " S X=18,Z1=12 D DAT
"RTN","EASECSC1",44,0)
 S Z=12 D WW W "    Env Contam: " S X=13,Z1=7,DGLTC=1 D YN W "Reg: " S X=14,Z1=11 D DAT W "Exam: " S X=15,Z1=10 D DAT
"RTN","EASECSC1",45,0)
 S Z=13 D WW S X=$P(DGRP(.36),"^",2)
"RTN","EASECSC1",46,0)
 W "     Mil Disab: ",$S(X=0:"NO",X=1:"YES",X=2:"YES",X=3:"UNK",1:"UNANSWERED") I X]"",(X'=3) W ", Applicant is ",$S('X:"NOT ",1:""),"retired from military due to disability." I X=2 D MR
"RTN","EASECSC1",47,0)
 S Z=14 D WW W "      Dent Inj: " S DGRPX=DGRP(.36),X=8,Z1=28 D YN W "Teeth Extracted: " S X=9,Z1=9 D YN S DGRPD=0 I $P(DGRPX,"^",8)="Y",$P(DGRPX,"^",9)="Y" S DGRPD=1
"RTN","EASECSC1",48,0)
 I DGRPD S I1="" F I=0:0 S I=$O(^DPT(DFN,.37,I)) Q:'I  S I1=1,DGRPX=^(I,0) D DEN
"RTN","EASECSC1",49,0)
 S DGRPX=DGRP(.322)
"RTN","EASECSC1",50,0)
 S Z=15 D WW W "    Yugoslavia: " S (DGX,X)=19,Z1=6 D YN W "From: " S X=20,Z1=13 D DAT W "To: " S X=21,Z1=12 D DAT
"RTN","EASECSC1",51,0)
 S Z=16 D WW W "  Purple Heart: " S DGRPX=DGRP(.53),X=1 D YN D
"RTN","EASECSC1",52,0)
 . I $P($G(DGRPX),U)="Y",($P($G(DGRPX),U,2)]"") W ?26,"PH Status: "_$S($P($G(DGRPX),U,2)="1":"Pending",$P($G(DGRPX),U,2)="2":"In Process",$P($G(DGRPX),U,2)="3":"Confirmed",1:"")
"RTN","EASECSC1",53,0)
 I $P($G(DGRPX),U)="N" D
"RTN","EASECSC1",54,0)
 . S DGX=$P(DGRPX,U,3)
"RTN","EASECSC1",55,0)
 . S DGX=$S($G(DGX)=1:"UNACCEPTABLE DOCUMENTATION",$G(DGX)=2:"NO DOCUMENTATION REC'D",$G(DGX)=3:"ENTERED IN ERROR",$G(DGX)=4:"UNSUPPORTED PURPLE HEART",$G(DGX)=5:"VAMC",$G(DGX)=6:"UNDELIVERABLE MAIL",1:"")
"RTN","EASECSC1",56,0)
 . I $G(DGX)]"" W ?26,"PH Remarks: "_$S($G(DGX)]"":$G(DGX),1:"")
"RTN","EASECSC1",57,0)
 S Z=17 D WW W "    N/T Radium: " D     ;N/T Radium Treatment expos.
"RTN","EASECSC1",58,0)
 . N DGNT S DGRPX=$$GETCUR^DGNTAPI(DFN,"DGNT") W $G(DGNT("INTRP")) I $G(DGNT("INTRP"))["YES" W "*" S DGLTCEX=1
"RTN","EASECSC1",59,0)
Q K DGRPD,DGRPSV
"RTN","EASECSC1",60,0)
 Q
"RTN","EASECSC1",61,0)
YN S Z=$S($P(DGRPX,"^",X)="Y":"YES",$P(DGRPX,"^",X)="N":"NO",$P(DGRPX,"^",X)="U":"UNK",1:"") S:Z="YES"&($G(DGLTC)) Z=Z_"*",DGLTCEX=1 D WW1^DGRPV K DGLTC Q
"RTN","EASECSC1",62,0)
DAT S Z=$P(DGRPX,"^",X) I Z']"" S Z=""
"RTN","EASECSC1",63,0)
 E  S Z=$$FMTE^XLFDT(Z,"5DZ")
"RTN","EASECSC1",64,0)
 D WW1^DGRPV Q
"RTN","EASECSC1",65,0)
DEN W !?3," Trt Date: " S X=1,Z1=10 D DAT W "Cond.: ",$E($P(DGRPX,"^",2),1,45) Q
"RTN","EASECSC1",66,0)
S W !?4,$S($D(^DIC(23,+$P(DGRPX,"^",DGRPSV+1),0)):$E($P(^(0),"^",1),1,24),1:DGRPU),?27,$S($P(DGRPX,"^",DGRPSV+4)]"":$P(DGRPX,"^",DGRPSV+4),1:DGRPU)
"RTN","EASECSC1",67,0)
 F I=2,3 S X=$P(DGRPX,"^",DGRPSV+I),X=$S(X]"":$$FMTE^XLFDT(X,"5DZ"),1:"UNKNOWN") W ?$S(I=2:46,1:58),X
"RTN","EASECSC1",68,0)
 W ?70,$S($D(^DIC(25,+$P(DGRPX,"^",DGRPSV),0)):$E($P(^(0),"^",1),1,9),1:"UNKNOWN") Q
"RTN","EASECSC1",69,0)
MR W !?19,"Receiving Military retirement in lieu of VA Compensation." Q
"RTN","EASECSC1",70,0)
WW ;Write number on screens for display and/or edit (Z=number)
"RTN","EASECSC1",71,0)
 ; NOTE: This section was copied from WW^DGRPV and modified specifically
"RTN","EASECSC1",72,0)
 ;       for LTC.  The code calling ^DGRPV has been redirected here.
"RTN","EASECSC1",73,0)
 W:DGRPW !
"RTN","EASECSC1",74,0)
 Q
"RTN","EASECSC5")
0^9^B12428627
"RTN","EASECSC5",1,0)
EASECSC5 ;ALB/PHH - LTC Co-Pay Test Screen Income ;13 AUG 2001
"RTN","EASECSC5",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECSC5",3,0)
 ;
"RTN","EASECSC5",4,0)
 ; Input  -- DFN      Patient IEN
"RTN","EASECSC5",5,0)
 ;           DGMTDT   Date of Test
"RTN","EASECSC5",6,0)
 ;           DGVINI   Veteran Individual Annual Income IEN
"RTN","EASECSC5",7,0)
 ;           DGVIRI   Veteran Income Relation IEN
"RTN","EASECSC5",8,0)
 ;           DGVPRI   Veteran Patient Relation IEN
"RTN","EASECSC5",9,0)
 ;           DGMTI    LTC Co-Pay Test IEN
"RTN","EASECSC5",10,0)
 ; Output -- None
"RTN","EASECSC5",11,0)
 ;
"RTN","EASECSC5",12,0)
EN ;Entry point for calendar year income screen
"RTN","EASECSC5",13,0)
 S DGMTSCI=5 D HD^EASECSCU
"RTN","EASECSC5",14,0)
 D DIS
"RTN","EASECSC5",15,0)
 S DGRNG="1-14" G EN^EASECSCR
"RTN","EASECSC5",16,0)
 ;
"RTN","EASECSC5",17,0)
EN1 ;Entry point for read processor return
"RTN","EASECSC5",18,0)
 D ALL^EASECU21(DFN,"S",DGMTDT,"IPR",$S($G(DGMTI):DGMTI,1:""))
"RTN","EASECSC5",19,0)
 I DGX!($G(DGSELTY)["V") S DGPRI=DGVPRI,DGPRTY="V" D EDT
"RTN","EASECSC5",20,0)
 I '$G(DGMTOUT)&($G(DGSEL)["S")&(DGX!($G(DGSELTY)["S")) S DGPRI=+DGREL("S"),DGPRTY="S" D EDT
"RTN","EASECSC5",21,0)
Q K DGCNT,DGDEP,DGDR,DGMTOUT,DGPRI,DGPRTY,DGREL,DGSEL,DGSELTY,DGX,DGY,DTOUT,DUOUT,Y
"RTN","EASECSC5",22,0)
 G EN
"RTN","EASECSC5",23,0)
 ;
"RTN","EASECSC5",24,0)
DIS ;Display income
"RTN","EASECSC5",25,0)
 N DGDC,DGDET,DGIN0,DGIN1,DGIN2,DGINT,DGINTF,DGNC,DGND,DGNWT,DGNWTF,DGSP,DGVIR0,DGCNT
"RTN","EASECSC5",26,0)
 D DEP^EASECSU3,INC^EASECSU3 S DGCNT=1
"RTN","EASECSC5",27,0)
 W !!?39,"Veteran" W:DGSP ?56,"Spouse" W ?73,"Total"
"RTN","EASECSC5",28,0)
 W !?36,"------------------------------------------"
"RTN","EASECSC5",29,0)
 D HIGH^DGMTSCU1(1,DGMTACT),FLD(.DGIN0,14,"Current Income")
"RTN","EASECSC5",30,0)
 D HIGH^DGMTSCU1(2,DGMTACT),FLD(.DGIN0,8,"Soc. Sec. Retire/Disabil")
"RTN","EASECSC5",31,0)
 D HIGH^DGMTSCU1(3,DGMTACT),FLD(.DGIN0,15,"Interest/Dividends")
"RTN","EASECSC5",32,0)
 D HIGH^DGMTSCU1(4,DGMTACT),FLD(.DGIN0,6,"Retirement/Pension Income")
"RTN","EASECSC5",33,0)
 D HIGH^DGMTSCU1(5,DGMTACT),FLD(.DGIN0,9,"Civil Service Retirement")
"RTN","EASECSC5",34,0)
 D HIGH^DGMTSCU1(6,DGMTACT),FLD(.DGIN0,10,"U.S. Railroad Retirement")
"RTN","EASECSC5",35,0)
 D HIGH^DGMTSCU1(7,DGMTACT),FLD(.DGIN0,7,"VA Pension")
"RTN","EASECSC5",36,0)
 D HIGH^DGMTSCU1(8,DGMTACT),FLD(.DGIN0,19,"Spouse VA Disabil/Compens")
"RTN","EASECSC5",37,0)
 D HIGH^DGMTSCU1(9,DGMTACT),FLD(.DGIN0,12,"Unemployment Benefit/Comp")
"RTN","EASECSC5",38,0)
 D HIGH^DGMTSCU1(10,DGMTACT),FLD(.DGIN0,16,"Other Compensation")
"RTN","EASECSC5",39,0)
 D HIGH^DGMTSCU1(11,DGMTACT),FLD(.DGIN0,11,"Military Retirement")
"RTN","EASECSC5",40,0)
 D HIGH^DGMTSCU1(12,DGMTACT),FLD(.DGIN0,13,"Other Retirement")
"RTN","EASECSC5",41,0)
 D HIGH^DGMTSCU1(13,DGMTACT),FLD(.DGIN0,20,"Court Mandated")
"RTN","EASECSC5",42,0)
 D HIGH^DGMTSCU1(14,DGMTACT),FLD(.DGIN0,17,"Other Income")
"RTN","EASECSC5",43,0)
 W !?56,"Total -->",?66,$J($$AMT^DGMTSCU1(DGINT),12)
"RTN","EASECSC5",44,0)
 Q
"RTN","EASECSC5",45,0)
 ;
"RTN","EASECSC5",46,0)
FLD(DGIN,DGPCE,DGTXT) ;Display income fields
"RTN","EASECSC5",47,0)
 ;
"RTN","EASECSC5",48,0)
 ;    Input -- DGIN as Individual Annual Income 0 node for vet,
"RTN","EASECSC5",49,0)
 ;                  spouse, and dependents
"RTN","EASECSC5",50,0)
 ;             DGPCE as piece position wanted
"RTN","EASECSC5",51,0)
 ;             DGTXT as income description
"RTN","EASECSC5",52,0)
 ;
"RTN","EASECSC5",53,0)
 ;             Also keeps running total if DGGTOT is defined (grand
"RTN","EASECSC5",54,0)
 ;                  total)
"RTN","EASECSC5",55,0)
 ;
"RTN","EASECSC5",56,0)
 N DGTOT,I,AMT
"RTN","EASECSC5",57,0)
 I '$D(DGBL) S $P(DGBL," ",26)=""
"RTN","EASECSC5",58,0)
 W:DGCNT<10 " "
"RTN","EASECSC5",59,0)
 W " ",$E(DGTXT_DGBL,1,26)
"RTN","EASECSC5",60,0)
 ; Display veteran amount
"RTN","EASECSC5",61,0)
 S AMT=$$AMT^DGMTSCU1($P(DGIN("V"),U,DGPCE))
"RTN","EASECSC5",62,0)
 ; No amount for Spouse VA Disability/Compensation
"RTN","EASECSC5",63,0)
 I DGPCE=19 S AMT="N/A"
"RTN","EASECSC5",64,0)
 ; No amount for VA Pension if Receiving VA Pension is not YES
"RTN","EASECSC5",65,0)
 I DGPCE=7,$P($G(^DPT(DFN,.362)),U,14)'="Y" S AMT="N/A"
"RTN","EASECSC5",66,0)
 W $J(AMT,15)
"RTN","EASECSC5",67,0)
 ; Display spouse amount (if married)
"RTN","EASECSC5",68,0)
 W " ",$S($D(DGIN("S")):$J($$AMT^DGMTSCU1($P(DGIN("S"),"^",DGPCE)),15),1:$E(DGBL,1,15))
"RTN","EASECSC5",69,0)
 W "  "
"RTN","EASECSC5",70,0)
 S DGTOT="",I="" F  S I=$O(DGIN(I)) Q:I=""  I $P(DGIN(I),"^",DGPCE)]"" S DGTOT=DGTOT+$P(DGIN(I),"^",DGPCE)
"RTN","EASECSC5",71,0)
 W "  ",$J($$AMT^DGMTSCU1(DGTOT),12)
"RTN","EASECSC5",72,0)
 S DGCNT=DGCNT+1
"RTN","EASECSC5",73,0)
 Q
"RTN","EASECSC5",74,0)
 ;
"RTN","EASECSC5",75,0)
EDT ;Edit income fields
"RTN","EASECSC5",76,0)
 N DA,DGERR,DGFIN,DGINI,DGIN0,DGIRI,DIE,DR
"RTN","EASECSC5",77,0)
 D GETIENS^EASECU2(DFN,DGPRI,DGMTDT) G EDTQ:DGERR
"RTN","EASECSC5",78,0)
 I $G(DGSEL)]"" W !!,"NAME: ",$$NAME^DGMTU1(DGPRI)
"RTN","EASECSC5",79,0)
 S DGIN0=$G(^DGMT(408.21,DGINI,0))
"RTN","EASECSC5",80,0)
 S DA=DGINI,DIE="^DGMT(408.21,",DR="[EASEC ENTER/EDIT INCOME]" D ^DIE S:'$D(DGFIN) DGMTOUT=1
"RTN","EASECSC5",81,0)
 I DGIN0'=$G(^DGMT(408.21,DGINI,0)) D
"RTN","EASECSC5",82,0)
 .S DR="103////^S X=DUZ;104///^S X=""NOW"""
"RTN","EASECSC5",83,0)
 .I '$G(^DGMT(408.21,DGINI,"MT")) S DR=DR_";31////^S X=$G(DGMTI)"
"RTN","EASECSC5",84,0)
 .D ^DIE
"RTN","EASECSC5",85,0)
EDTQ Q
"RTN","EASECSC6")
0^10^B9344091
"RTN","EASECSC6",1,0)
EASECSC6 ;ALB/PHH - LTC Co-Pay Test Screen Deductible Expense ;13 AUG 2001
"RTN","EASECSC6",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECSC6",3,0)
 ;
"RTN","EASECSC6",4,0)
 ; Input  -- DFN      Patient IEN
"RTN","EASECSC6",5,0)
 ;           DGMTDT   Date of Test
"RTN","EASECSC6",6,0)
 ;           DGVINI   Veteran Individual Annual Income IEN
"RTN","EASECSC6",7,0)
 ;           DGVIRI   Veteran Income Relation IEN
"RTN","EASECSC6",8,0)
 ;           DGVPRI   Veteran Patient Relation IEN
"RTN","EASECSC6",9,0)
 ;           DGMTI    LTC Co-Pay Test IEN
"RTN","EASECSC6",10,0)
 ; Output -- None
"RTN","EASECSC6",11,0)
 ;
"RTN","EASECSC6",12,0)
EN ;Entry point for expense screen
"RTN","EASECSC6",13,0)
 S DGMTSCI=6 D HD^EASECSCU
"RTN","EASECSC6",14,0)
 D DIS
"RTN","EASECSC6",15,0)
 S DGRNG="1-10" G EN^EASECSCR
"RTN","EASECSC6",16,0)
 ;
"RTN","EASECSC6",17,0)
EN1 ;Entry point for read processor return
"RTN","EASECSC6",18,0)
 D ALL^EASECU21(DFN,"CS",DGMTDT,"IPR",$S($G(DGMTI):DGMTI,1:""))
"RTN","EASECSC6",19,0)
 I DGX!($G(DGSELTY)["V") S DGPRI=DGVPRI,DGPRTY="V" D EDT
"RTN","EASECSC6",20,0)
Q K DGCNT,DGDEP,DGDR,DGMTOUT,DGPRI,DGPRTY,DGREL,DGSEL,DGSELTY,DGX,DGY,DTOUT,DUOUT,Y
"RTN","EASECSC6",21,0)
 G EN
"RTN","EASECSC6",22,0)
 ;
"RTN","EASECSC6",23,0)
DIS ;Display deductible expenses
"RTN","EASECSC6",24,0)
 N DGDC,DGDET,DGIN0,DGIN1,DGIN2,DGINT,DGINTF,DGNC,DGND,DGNWT,DGNWTF,DGSP,DGVIR0,DGCNT
"RTN","EASECSC6",25,0)
 D DEP^EASECSU3,INC^EASECSU3 S DGCNT=1
"RTN","EASECSC6",26,0)
 W !!?39,"Veteran" W:DGSP " and Spouse" W ?73,"Total"
"RTN","EASECSC6",27,0)
 W !?36,"------------------------------------------"
"RTN","EASECSC6",28,0)
 D HIGH^DGMTSCU1(1,DGMTACT),FLD(.DGIN1,3,"Education")
"RTN","EASECSC6",29,0)
 D HIGH^DGMTSCU1(2,DGMTACT),FLD(.DGIN1,2,"Funeral and Burial")
"RTN","EASECSC6",30,0)
 D HIGH^DGMTSCU1(3,DGMTACT),FLD(.DGIN1,4,"Rent/Mortgage")
"RTN","EASECSC6",31,0)
 D HIGH^DGMTSCU1(4,DGMTACT),FLD(.DGIN1,5,"Utilities")
"RTN","EASECSC6",32,0)
 D HIGH^DGMTSCU1(5,DGMTACT),FLD(.DGIN1,6,"Car Payment Only")
"RTN","EASECSC6",33,0)
 D HIGH^DGMTSCU1(6,DGMTACT),FLD(.DGIN1,7,"Food")
"RTN","EASECSC6",34,0)
 D HIGH^DGMTSCU1(7,DGMTACT),FLD(.DGIN1,1,"Non-reimbursed Medical Expenses")
"RTN","EASECSC6",35,0)
 D HIGH^DGMTSCU1(8,DGMTACT),FLD(.DGIN1,8,"Court-ordered Payments")
"RTN","EASECSC6",36,0)
 D HIGH^DGMTSCU1(9,DGMTACT),FLD(.DGIN1,9,"Insurance")
"RTN","EASECSC6",37,0)
 D HIGH^DGMTSCU1(10,DGMTACT),FLD(.DGIN1,10,"Taxes")
"RTN","EASECSC6",38,0)
 W !?56,"Total -->",?66,$J($$AMT^DGMTSCU1(DGDET),12)
"RTN","EASECSC6",39,0)
 Q
"RTN","EASECSC6",40,0)
 ;
"RTN","EASECSC6",41,0)
FLD(DGIN,DGPCE,DGTXT) ;Display income fields
"RTN","EASECSC6",42,0)
 ;
"RTN","EASECSC6",43,0)
 ;    Input -- DGIN as Individual Annual Income 0 node for vet,
"RTN","EASECSC6",44,0)
 ;                  spouse, and dependents
"RTN","EASECSC6",45,0)
 ;             DGPCE as piece position wanted
"RTN","EASECSC6",46,0)
 ;             DGTXT as income description
"RTN","EASECSC6",47,0)
 ;
"RTN","EASECSC6",48,0)
 ;             Also keeps running total if DGGTOT is defined (grand
"RTN","EASECSC6",49,0)
 ;                  total)
"RTN","EASECSC6",50,0)
 ;
"RTN","EASECSC6",51,0)
 N DGTOT,I,AMT
"RTN","EASECSC6",52,0)
 I '$D(DGBL) S $P(DGBL," ",26)=""
"RTN","EASECSC6",53,0)
 W:DGCNT<10 " "
"RTN","EASECSC6",54,0)
 W " ",$E(DGTXT_DGBL,1,26)
"RTN","EASECSC6",55,0)
 S AMT=$$AMT^DGMTSCU1($P(DGIN("V"),U,DGPCE))
"RTN","EASECSC6",56,0)
 ; If veteran is single w/ no dependents do not allow Funeral expenses
"RTN","EASECSC6",57,0)
 I DGPCE=2,'$P(DGVIR0,U,8),'$P(DGVIR0,U,14) S AMT="N/A"
"RTN","EASECSC6",58,0)
 W $J(AMT,15)
"RTN","EASECSC6",59,0)
 W "                  "
"RTN","EASECSC6",60,0)
 S DGTOT="",I="" F  S I=$O(DGIN(I)) Q:I=""  I $P(DGIN(I),"^",DGPCE)]"" S DGTOT=DGTOT+$P(DGIN(I),"^",DGPCE)
"RTN","EASECSC6",61,0)
 W "  ",$J($$AMT^DGMTSCU1(DGTOT),12)
"RTN","EASECSC6",62,0)
 S DGCNT=DGCNT+1
"RTN","EASECSC6",63,0)
 Q
"RTN","EASECSC6",64,0)
 ;
"RTN","EASECSC6",65,0)
EDT ;Edit income fields
"RTN","EASECSC6",66,0)
 N DA,DGERR,DGFIN,DGINI,DGIN0,DGIRI,DGVIR0,DIE,DR
"RTN","EASECSC6",67,0)
 D GETIENS^EASECU2(DFN,DGPRI,DGMTDT) G EDTQ:DGERR
"RTN","EASECSC6",68,0)
 I $G(DGSEL)]"" W !!,"NAME: ",$$NAME^DGMTU1(DGPRI)
"RTN","EASECSC6",69,0)
 S DGVIR0=$G(^DGMT(408.22,DGVIRI,0))
"RTN","EASECSC6",70,0)
 S DGIN1=$G(^DGMT(408.21,DGINI,1))
"RTN","EASECSC6",71,0)
 S DA=DGINI,DIE="^DGMT(408.21,",DR="[EASEC ENTER/EDIT EXPENSES]" D ^DIE S:'$D(DGFIN) DGMTOUT=1
"RTN","EASECSC6",72,0)
 I DGIN1'=$G(^DGMT(408.21,DGINI,1)) D
"RTN","EASECSC6",73,0)
 .S DR="103////^S X=DUZ;104///^S X=""NOW"""
"RTN","EASECSC6",74,0)
 .I '$G(^DGMT(408.21,DGINI,"MT")) S DR=DR_";31////^S X=$G(DGMTI)"
"RTN","EASECSC6",75,0)
 .D ^DIE
"RTN","EASECSC6",76,0)
EDTQ Q
"RTN","EASECSCC")
0^2^B33763046
"RTN","EASECSCC",1,0)
EASECSCC ;ALB/LBD - LTC Co-Pay Test Screen Completion;13 AUG 2001 ; 9/4/01 10:21am
"RTN","EASECSCC",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECSCC",3,0)
 ;
"RTN","EASECSCC",4,0)
 ;NOTE: This routine was modified from DGMTSCC for LTC Co-pay
"RTN","EASECSCC",5,0)
 ; Input  -- DFN      Patient IEN
"RTN","EASECSCC",6,0)
 ;           DGMTACT  Menu Action
"RTN","EASECSCC",7,0)
 ;           DGMTDT   Date of Test
"RTN","EASECSCC",8,0)
 ;           DGMTYPT  Type of Test 3=LTC COPAY
"RTN","EASECSCC",9,0)
 ;           DGMTPAR  Annual Means Test Parameters
"RTN","EASECSCC",10,0)
 ;           DGMTI    Annual Means Test IEN
"RTN","EASECSCC",11,0)
 ;           DGVINI   Veteran Individual Annual Income IEN
"RTN","EASECSCC",12,0)
 ;           DGVIRI   Veteran Income Relation IEN
"RTN","EASECSCC",13,0)
 ;           DGVPRI   Veteran Patient Relation IEN
"RTN","EASECSCC",14,0)
 ; Output -- DGERR    1=INCOMPLETE and 0=COMPLETE
"RTN","EASECSCC",15,0)
 ;
"RTN","EASECSCC",16,0)
EN N DGCAT,DGCOMF,DGDC,DGDET,DGIN0,DGIN1,DGIN2,DGINT,DGINTF,DGMTS,DGNC,DGND,DGNWT,DGNWTF,DGREF1,DGSP,DGTYC,DGTHA,DGTHB,DGVIR0,DGCOPS,DGCOST,DGRE,DGSTA,DGAGR
"RTN","EASECSCC",17,0)
 S DGERR=0
"RTN","EASECSCC",18,0)
 S DGCOMF=1 D DEP^EASECSU3,INC^EASECSU3
"RTN","EASECSCC",19,0)
 ; If veteran's income is below the threshold then exempt from LTC co-pay
"RTN","EASECSCC",20,0)
 I DGINT,DGINT'>+$$THRES^IBARXEU1(DGMTDT,1,0) D  G Q
"RTN","EASECSCC",21,0)
 .D EXMPT(DFN,DGMTI,12)
"RTN","EASECSCC",22,0)
 .D PRT
"RTN","EASECSCC",23,0)
 ; Check if test can be completed
"RTN","EASECSCC",24,0)
 D CHK I DGERR W !?3,*7,"LTC copay test cannot be completed." G Q
"RTN","EASECSCC",25,0)
 ; Did vet refuse to give income info
"RTN","EASECSCC",26,0)
 I 'DGINTF,'DGNWTF S DGREF1="" D  G Q:$D(DTOUT)!($D(DUOUT))
"RTN","EASECSCC",27,0)
 .D REF
"RTN","EASECSCC",28,0)
 .I $D(DGREF) S DGSTA="NON-EXEMPT"
"RTN","EASECSCC",29,0)
 ; Get test status (Exempt or Non-Exempt)
"RTN","EASECSCC",30,0)
 D STA G Q:$D(DTOUT)!($D(DUOUT))
"RTN","EASECSCC",31,0)
 ; Does vet agree to pay co-payments
"RTN","EASECSCC",32,0)
 I $G(DGSTA)="NON-EXEMPT" D AGREE G Q:$D(DTOUT)!($D(DUOUT))
"RTN","EASECSCC",33,0)
UPD S DA=DGMTI,DIE="^DGMT(408.31,",DIE("NO^")="",DR="[EASEC COMPLETE LTC CO-PAY TEST]" D ^DIE K DA,DIE,DR I '$D(DGFIN) S DGERR=1 G Q
"RTN","EASECSCC",34,0)
 W !?3,"...The LTC copay test has been completed with a status of ",DGSTA,"..."
"RTN","EASECSCC",35,0)
 D PRT
"RTN","EASECSCC",36,0)
 ;
"RTN","EASECSCC",37,0)
Q K DGFIN,DGREF,DTOUT,DUOUT,Y
"RTN","EASECSCC",38,0)
 Q
"RTN","EASECSCC",39,0)
 ;
"RTN","EASECSCC",40,0)
COM ;Check if user wants to complete the LTC co-pay test
"RTN","EASECSCC",41,0)
 N DIR
"RTN","EASECSCC",42,0)
 S DIR("A")="Do you wish to complete the LTC copay test"
"RTN","EASECSCC",43,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR
"RTN","EASECSCC",44,0)
 Q
"RTN","EASECSCC",45,0)
 ;
"RTN","EASECSCC",46,0)
REF ;Check if patient declines to provide income information
"RTN","EASECSCC",47,0)
 N DIR,Y
"RTN","EASECSCC",48,0)
 S DIR("A")="Does veteran decline to give income information"
"RTN","EASECSCC",49,0)
 I $P($G(^DGMT(408.31,DGMTI,0)),"^",14)]"" S DIR("B")=$$YN^DGMTSCU1($P(^(0),"^",14))
"RTN","EASECSCC",50,0)
 S:'$D(DIR("B")) DIR("B")="NO"
"RTN","EASECSCC",51,0)
 S DIR("?")="Answer 'Y' or 'N'."
"RTN","EASECSCC",52,0)
 S DIR("?",1)="Enter whether the veteran declines to provide current income information."
"RTN","EASECSCC",53,0)
 S DIR(0)="Y" D ^DIR K DIR G REFQ:$D(DTOUT)!($D(DUOUT))
"RTN","EASECSCC",54,0)
 S:Y DGREF=""
"RTN","EASECSCC",55,0)
REFQ Q
"RTN","EASECSCC",56,0)
 ;
"RTN","EASECSCC",57,0)
CHK ;Check if LTC co-pay test can be completed
"RTN","EASECSCC",58,0)
 N DGA,DGD,DGDEP,DGREL,DGL,DGM,I
"RTN","EASECSCC",59,0)
 D GETREL^DGMTU11(DFN,"CS",$E(DGMTDT,1,3)_"0000",$S($G(DGMTI):DGMTI,1:""))
"RTN","EASECSCC",60,0)
 S DGM=$P(DGVIR0,"^",14),DGL=$P(DGVIR0,"^",15),DGD=$P(DGVIR0,"^",8)
"RTN","EASECSCC",61,0)
 I DGM']""!(DGM&(DGL']"")) W !?3,"Marital section must be completed." S DGERR=1
"RTN","EASECSCC",62,0)
 I DGM,'$D(DGREL("S")) W !?3,"Married is 'YES'.  An active spouse for this LTC copay test does not exist." S DGERR=1
"RTN","EASECSCC",63,0)
 I 'DGM,$D(DGREL("S")) W !?3,"An active spouse exists for this LTC copay test. Married should be 'YES'." S DGERR=1
"RTN","EASECSCC",64,0)
 I DGD']"" W !?3,"Dependent Children section must be completed." S DGERR=1
"RTN","EASECSCC",65,0)
 I DGD,'$D(DGREL("C")) W !?3,"Dependent Children is 'YES'.  No active children exist." S DGERR=1
"RTN","EASECSCC",66,0)
 I 'DGD,$D(DGREL("C")) W !?3,"Active children exist.  Dependent Children should be 'YES'." S DGERR=1
"RTN","EASECSCC",67,0)
 I DGDET>DGINT W !?3,"Patient's deductible expenses cannot exceed income." S DGERR=1
"RTN","EASECSCC",68,0)
 Q:$G(DGERR)
"RTN","EASECSCC",69,0)
 N CNT,ACT,DGDEP,FLAG,DGINCP
"RTN","EASECSCC",70,0)
 D INIT^EASECDEP S CNT=0 D
"RTN","EASECSCC",71,0)
 .F  S CNT=$O(DGDEP(CNT)) Q:'CNT  I $P(DGDEP(CNT),U,2)="SPOUSE" D  Q:$G(DGERR)
"RTN","EASECSCC",72,0)
 ..D GETIENS^EASECU2(DFN,$P(DGDEP(CNT),U,20),DGMTDT)
"RTN","EASECSCC",73,0)
 ..S DGINCP=$G(^DGMT(408.22,+DGIRI,"MT")) S:DGINCP FLAG=$G(FLAG)+1
"RTN","EASECSCC",74,0)
 ..I $G(FLAG)>1 W !?3,"Patient has more than one spouse for this LTC copay test." S DGERR=1
"RTN","EASECSCC",75,0)
 Q
"RTN","EASECSCC",76,0)
 ;
"RTN","EASECSCC",77,0)
STA ;Ask test status
"RTN","EASECSCC",78,0)
 N DIR,Y
"RTN","EASECSCC",79,0)
 S DGMTS=$P($G(^DGMT(408.31,DGMTI,0)),U,3)
"RTN","EASECSCC",80,0)
 S DGRE=$P($G(^DGMT(408.31,DGMTI,2)),U,7)
"RTN","EASECSCC",81,0)
 I DGMTS S DGSTA=$P($G(^DG(408.32,DGMTS,0)),U)
"RTN","EASECSCC",82,0)
 I '$D(DGSTA) S DGSTA="NON-EXEMPT"
"RTN","EASECSCC",83,0)
 I DGSTA="EXEMPT",("12"[DGRE),$G(DGINT)>+$$THRES^IBARXEU1(DGMTDT,1,0) S DGSTA="NON-EXEMPT"
"RTN","EASECSCC",84,0)
 S DIR("A")="LTC Copay Test Status" S DIR("B")=DGSTA
"RTN","EASECSCC",85,0)
 S DIR(0)="P^408.32:EM",DIR("S")="I $P(^(0),U,19)=3"
"RTN","EASECSCC",86,0)
 D ^DIR K DIR Q:'Y!($D(DTOUT))!($D(DUOUT))
"RTN","EASECSCC",87,0)
 S DGMTS=+Y,DGSTA=$P(Y,U,2) Q:DGSTA="NON-EXEMPT"
"RTN","EASECSCC",88,0)
 ;If Exempt, ask reason for exemption
"RTN","EASECSCC",89,0)
 S DIR("A")="REASON FOR EXEMPTION"
"RTN","EASECSCC",90,0)
 I DGRE S DIR("B")=$P($G(^EAS(714.1,DGRE,0)),U)
"RTN","EASECSCC",91,0)
 S DIR("S")="I $P(^(0),U,2)"
"RTN","EASECSCC",92,0)
 S DIR(0)="P^714.1:EM" D ^DIR K DIR I 'Y!($D(DTOUT))!($D(DUOUT)) D  G STA
"RTN","EASECSCC",93,0)
 .W !!,"A reason for exemption must be entered for an Exempt status.",!
"RTN","EASECSCC",94,0)
 S DGRE=+Y
"RTN","EASECSCC",95,0)
 Q
"RTN","EASECSCC",96,0)
AGREE ;Ask if vet agrees to pay co-payment
"RTN","EASECSCC",97,0)
 N DIR,Y
"RTN","EASECSCC",98,0)
 S DIR("A")="Does the veteran agree to pay copayments"
"RTN","EASECSCC",99,0)
 I $P($G(^DGMT(408.31,DGMTI,0)),U,11)]"" S DIR("B")=$$YN^DGMTSCU1($P(^(0),U,11))
"RTN","EASECSCC",100,0)
 S:'$D(DIR("B")) DIR("B")="YES"
"RTN","EASECSCC",101,0)
 S DIR("?")="Answer 'Y' or 'N'."
"RTN","EASECSCC",102,0)
 S DIR("?",1)="Enter in this field whether the veteran agrees to pay the"
"RTN","EASECSCC",103,0)
 S DIR("?",2)="LTC copayments.  The veteran must also sign the 1010-EC form"
"RTN","EASECSCC",104,0)
 S DIR("?",3)="agreeing to pay the copayments. If the veteran does not agree"
"RTN","EASECSCC",105,0)
 S DIR("?",4)="to pay the copayments, the veteran becomes ineligible to"
"RTN","EASECSCC",106,0)
 S DIR("?",5)="receive extended care services."
"RTN","EASECSCC",107,0)
 S DIR(0)="Y" D ^DIR K DIR Q:$D(DTOUT)!($D(DUOUT))
"RTN","EASECSCC",108,0)
 S DGAGR=Y
"RTN","EASECSCC",109,0)
 Q
"RTN","EASECSCC",110,0)
PRT ;Print Extended Care Services test (1010EC)
"RTN","EASECSCC",111,0)
 N DIR,Y,X,ZTSK
"RTN","EASECSCC",112,0)
 S DIR("A")="PRINT 10-10EC"
"RTN","EASECSCC",113,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR G PRTQ:'Y!($D(DTOUT))!($D(DUOUT))
"RTN","EASECSCC",114,0)
 S ZTSK=$$QUE^EASEC10E(DFN,DGMTI)
"RTN","EASECSCC",115,0)
PRTQ Q
"RTN","EASECSCC",116,0)
 ;
"RTN","EASECSCC",117,0)
EXMPT(DFN,DGMTI,EX) ; Veteran is exempt from LTC co-payments
"RTN","EASECSCC",118,0)
 ; Complete LTC co-pay test in Annual Means Test file (#408.31)
"RTN","EASECSCC",119,0)
 ; Input -- DFN     Patient IEN
"RTN","EASECSCC",120,0)
 ;          DGMTI   Annual Means Test IEN
"RTN","EASECSCC",121,0)
 ;          EX      Copay exemption code
"RTN","EASECSCC",122,0)
 ;                  1 = SC compensable disability
"RTN","EASECSCC",123,0)
 ;                  2 = NSC, single, receiving VA pension (no A&A, HB)
"RTN","EASECSCC",124,0)
 ;                         or
"RTN","EASECSCC",125,0)
 ;                      Income (last year) is below single pension threshold
"RTN","EASECSCC",126,0)
 ;                 12 = Income (current year) is below single pension threshold 
"RTN","EASECSCC",127,0)
 Q:'DGMTI  Q:'EX
"RTN","EASECSCC",128,0)
 N DATA,I
"RTN","EASECSCC",129,0)
 W !! F I=1:1:80 W "="
"RTN","EASECSCC",130,0)
 W !!,?10,"Veteran is EXEMPT from Long Term Care copayments."
"RTN","EASECSCC",131,0)
 W !,?10,"Reason for Exemption: ",$P($G(^EAS(714.1,EX,0)),U)
"RTN","EASECSCC",132,0)
 W !! F I=1:1:80 W "="
"RTN","EASECSCC",133,0)
 W !!
"RTN","EASECSCC",134,0)
 S DATA(.03)=$O(^DG(408.32,"C","X","")),DATA(2.07)=EX,DATA(.06)=DUZ
"RTN","EASECSCC",135,0)
 S (DATA(.07),DATA(2.02))=$$NOW^XLFDT
"RTN","EASECSCC",136,0)
 S DATA(.04)=$G(DGINT),DATA(.05)=$G(DGNWT),DATA(.15)=$G(DGDET)
"RTN","EASECSCC",137,0)
 S DATA(.18)=$G(DGND),DATA(2.08)=$P($$GETLTC4^EASECMT(DFN),U,1)
"RTN","EASECSCC",138,0)
 I $$UPD^DGENDBS(408.31,DGMTI,.DATA) Q
"RTN","EASECSCC",139,0)
 W !,"ERROR:  COULD NOT UPDATE LTC COPAY TEST",!!
"RTN","EASECSCC",140,0)
 Q
"RTN","EASECSCU")
0^16^B8864962
"RTN","EASECSCU",1,0)
EASECSCU ;ALB/LBD - LTC Co-Pay Test Screen Driver Utilities ;10 AUG 2001
"RTN","EASECSCU",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECSCU",3,0)
 ;
"RTN","EASECSCU",4,0)
 ;NOTE: This routine was modified from DGMTSCU for LTC Co-pay
"RTN","EASECSCU",5,0)
SETUP ;Set-up the screen driver array and required screen variables
"RTN","EASECSCU",6,0)
 ; Input  -- DFN              Patient IEN
"RTN","EASECSCU",7,0)
 ;           DGMTDT           Date of Test
"RTN","EASECSCU",8,0)
 ;           DGMTYPT          Type of Test
"RTN","EASECSCU",9,0)
 ; Output -- DGMTSC           Screen Driver Array
"RTN","EASECSCU",10,0)
 ;           DGVPRI           Veteran Patient Relation IEN
"RTN","EASECSCU",11,0)
 ;           DGVINI           Veteran Individual Annual Income IEN
"RTN","EASECSCU",12,0)
 ;           DGVIRI           Veteran Income Relation IEN
"RTN","EASECSCU",13,0)
 ;           DGMTPAR          Annual Means Test Parameter Array
"RTN","EASECSCU",14,0)
 ;           DGERR            1=ERROR and 0=NO ERROR
"RTN","EASECSCU",15,0)
 N DGINI,DGIRI,DGLY,DGPRI,DGPRTY,DGSCR,I,X
"RTN","EASECSCU",16,0)
 K DGMTSC S DGERR=0,DGLY=$$LYR^DGMTSCU1(DGMTDT)
"RTN","EASECSCU",17,0)
 F I=1:1 S X=$P($T(SCRNS+I),";;",2) Q:X="QUIT"  S DGMTSC(+X)=X
"RTN","EASECSCU",18,0)
 D NEW^EASECED1 S:DGPRI'>0 DGERR=1 G Q:DGERR S DGVPRI=DGPRI
"RTN","EASECSCU",19,0)
 D GETIENS^EASECU2(DFN,DGPRI,DGMTDT) G Q:DGERR S DGVINI=DGINI,DGVIRI=DGIRI
"RTN","EASECSCU",20,0)
 D PAR S:DGMTPAR="" DGERR=1
"RTN","EASECSCU",21,0)
Q Q
"RTN","EASECSCU",22,0)
 ;
"RTN","EASECSCU",23,0)
PAR ;Annual Means Test Parameters
"RTN","EASECSCU",24,0)
 ; Input  -- DGLY             Last Year
"RTN","EASECSCU",25,0)
 ; Output -- DGMTPAR          Means Test Parameter 0th node
"RTN","EASECSCU",26,0)
 ;    Returned if the current year's parameters are not available:
"RTN","EASECSCU",27,0)
 ;           DGMTPAR("PREV")  Previous Year Income Parameters
"RTN","EASECSCU",28,0)
 S DGMTPAR=$S($D(^DG(43,1,"MT",DGLY+10000,0)):^(0),1:"")
"RTN","EASECSCU",29,0)
 I DGMTPAR']"",$D(^DG(43,1,"MT",DGLY,0)) S DGMTPAR=^(0),DGMTPAR("PREV")=""
"RTN","EASECSCU",30,0)
 Q
"RTN","EASECSCU",31,0)
 ;
"RTN","EASECSCU",32,0)
HD ;Print screen header
"RTN","EASECSCU",33,0)
 ; Input  -- DGMTSCI  Screen number
"RTN","EASECSCU",34,0)
 ;           DGVPRI   Veteran Patient Relation IEN
"RTN","EASECSCU",35,0)
 ;           DGMTDT   Date of Test
"RTN","EASECSCU",36,0)
 ;           DGHLPF   Help Flag  (Optional)
"RTN","EASECSCU",37,0)
 ; Output -- Screen Header
"RTN","EASECSCU",38,0)
 N DGHDR,DGIOM,DGLNE,DGMTSCR,DGTAB,Y
"RTN","EASECSCU",39,0)
 S:'$D(DGHLPF) DGHLPF=0
"RTN","EASECSCU",40,0)
 S DGLNE="",DGIOM=$S('IOM:80,1:IOM),$P(DGLNE,"=",(DGIOM-1))=""
"RTN","EASECSCU",41,0)
 S DGHDR=$P($$SCR(DGMTSCI),";",2)_", SCREEN <"_+$$SCR(DGMTSCI)_"> "_$S(DGHLPF:"HELP",1:"")
"RTN","EASECSCU",42,0)
 S DGTAB=DGIOM-$L(DGHDR)\2
"RTN","EASECSCU",43,0)
 S (DGVI,DGVO)="" I $S('$D(IOST(0)):1,'$D(^DG(43,1,0)):1,'$P(^DG(43,1,0),"^",36):1,$D(^DG(43,1,"TERM",IOST(0))):1,1:0) G HDNH ;goto HDNH if not high intensity
"RTN","EASECSCU",44,0)
 S X="IOINHI;IOINLOW" D ENDR^%ZISS K X S DGVI=IOINHI,DGVO=IOINLOW S X=132 X ^%ZOSF("RM")
"RTN","EASECSCU",45,0)
HDNH ;
"RTN","EASECSCU",46,0)
 W @IOF W ?DGTAB,DGVI,DGHDR,DGVO
"RTN","EASECSCU",47,0)
 I 'DGHLPF W !,$$NAME^DGMTU1(DGVPRI),"  ",$$SSN^DGMTU1(DGVPRI),?(DGIOM-26),"LTC COPAY TEST FOR " S Y=$E(DGMTDT,1,3)_"0000" X ^DD("DD") W Y
"RTN","EASECSCU",48,0)
 W !,DGLNE
"RTN","EASECSCU",49,0)
 K DGHLPF Q
"RTN","EASECSCU",50,0)
 ;
"RTN","EASECSCU",51,0)
SCR(DGMTSCI) ;Screen name and number
"RTN","EASECSCU",52,0)
 ;         Input  -- DGMTSCI  Screen number
"RTN","EASECSCU",53,0)
 ;         Output -- Screen number;Screen name
"RTN","EASECSCU",54,0)
 N DGMTSCR
"RTN","EASECSCU",55,0)
 S DGMTSCR=$P($G(DGMTSC(DGMTSCI)),";",1,2)
"RTN","EASECSCU",56,0)
 Q $G(DGMTSCR)
"RTN","EASECSCU",57,0)
 ;
"RTN","EASECSCU",58,0)
ROU(DGMTSCI) ;Screen entry routine
"RTN","EASECSCU",59,0)
 ;         Input  -- DGMTSCI  Screen number
"RTN","EASECSCU",60,0)
 ;         Output -- Routine name
"RTN","EASECSCU",61,0)
 N DGROU
"RTN","EASECSCU",62,0)
 S DGROU=$P($G(DGMTSC(DGMTSCI)),";",3)
"RTN","EASECSCU",63,0)
 Q $G(DGROU)
"RTN","EASECSCU",64,0)
 ;
"RTN","EASECSCU",65,0)
ROURET(DGMTSCI) ;Screen read processor return routine
"RTN","EASECSCU",66,0)
 ;         Input  -- DGMTSCI  Screen number
"RTN","EASECSCU",67,0)
 ;         Output -- Routine name
"RTN","EASECSCU",68,0)
 N DGROU
"RTN","EASECSCU",69,0)
 S DGROU=$P($G(DGMTSC(DGMTSCI)),";",4)
"RTN","EASECSCU",70,0)
 Q $G(DGROU)
"RTN","EASECSCU",71,0)
 ;
"RTN","EASECSCU",72,0)
SCRNS ;Screen Number;Screen Name;Screen Entry Routine;Reader Return Routine
"RTN","EASECSCU",73,0)
 ;;1;MILITARY SERVICE DATA;EN^EASECSC1;EN1^EASECSC1
"RTN","EASECSCU",74,0)
 ;;2;ELIGIBILITY STATUS DATA;EN^EASECSC2;EN1^EASECSC2
"RTN","EASECSCU",75,0)
 ;;3;MARITAL STATUS/DEPENDENTS;EN^EASECSC3;EN1^EASECSC3
"RTN","EASECSCU",76,0)
 ;;4;FIXED AND LIQUID ASSETS;EN^EASECSC4;EN1^EASECSC4
"RTN","EASECSCU",77,0)
 ;;5;CURRENT CALENDAR YEAR GROSS INCOME;EN^EASECSC5;EN1^EASECSC5
"RTN","EASECSCU",78,0)
 ;;6;DEDUCTIBLE EXPENSES;EN^EASECSC6;EN1^EASECSC6
"RTN","EASECSCU",79,0)
 ;;QUIT
"RTN","EASECSU3")
0^22^B6803221
"RTN","EASECSU3",1,0)
EASECSU3 ;ALB/LBD - LTC Co-Pay Test Screen Variable Utilities Cont. ;14 AUG 2001
"RTN","EASECSU3",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECSU3",3,0)
 ;
"RTN","EASECSU3",4,0)
INC ;Determine income, expense and net worth
"RTN","EASECSU3",5,0)
 ; Input  -- DFN      Patient file IEN
"RTN","EASECSU3",6,0)
 ;           DGCOMF   LTC Co-Pay Test Completion Flag  (Optional)
"RTN","EASECSU3",7,0)
 ;                    (1 if completing LTC co-pay test)
"RTN","EASECSU3",8,0)
 ;           DGMTDT   Date of Test
"RTN","EASECSU3",9,0)
 ;           DGMTI    Annual Means Test IEN
"RTN","EASECSU3",10,0)
 ;           DGVINI   Veteran Individual Annual Income IEN
"RTN","EASECSU3",11,0)
 ;           DGSP     Spouse 1=YES and 0=NO (mt income)
"RTN","EASECSU3",12,0)
 ;           DGDC     Dependent children 1=YES and 0=NO (mt income)
"RTN","EASECSU3",13,0)
 ;           DGMTPAR  Annual Means Test Parameters
"RTN","EASECSU3",14,0)
 ; Output -- DGIN0    Annual Income 0th node array (income)
"RTN","EASECSU3",15,0)
 ;           DGIN1    Annual Income 1 node array (expense)
"RTN","EASECSU3",16,0)
 ;           DGIN2    Annual Income 2 node array (net worth)
"RTN","EASECSU3",17,0)
 ;           DGINT    Total income
"RTN","EASECSU3",18,0)
 ;           DGDET    Total deductible expenses
"RTN","EASECSU3",19,0)
 ;           DGNWT    Total net worth
"RTN","EASECSU3",20,0)
 ;           DGINTF   Income flag
"RTN","EASECSU3",21,0)
 ;           DGNWTF   Net worth flag
"RTN","EASECSU3",22,0)
 N DGCNT,DGINC,DGINR,I,J,Y
"RTN","EASECSU3",23,0)
 D ALL^EASECU21(DFN,"VCS",DGMTDT,"IR",$S($G(DGMTI):DGMTI,1:""))
"RTN","EASECSU3",24,0)
 S DGIN0("V")=$G(^DGMT(408.21,DGVINI,0)),DGIN1("V")=$G(^(1)),DGIN2("V")=$G(^(2))
"RTN","EASECSU3",25,0)
 S DGINT=$$TOT^DGMTSCU1(DGIN0("V"),6,17)+$$TOT^DGMTSCU1(DGIN0("V"),19,20)
"RTN","EASECSU3",26,0)
 S DGDET=$$TOT^DGMTSCU1(DGIN1("V"),1,10)
"RTN","EASECSU3",27,0)
 S DGNWT=$$TOT^DGMTSCU1(DGIN2("V"),1,4)+$$TOT^DGMTSCU1(DGIN2("V"),6,9)
"RTN","EASECSU3",28,0)
 I $G(DGCOMF) D MT(DGINR("V"),DGMTI)
"RTN","EASECSU3",29,0)
 I DGSP S (DGIN0("S"),DGIN1("S"),DGIN2("S"))="" D SPOUSE:$D(DGINC("S"))
"RTN","EASECSU3",30,0)
 ; dependent child income is not included for LTC co-pay test
"RTN","EASECSU3",31,0)
 ;I DGDC S (DGIN0("C"),DGIN1("C"))="",DGCNT=0 F  S DGCNT=$O(DGINC("C",DGCNT)) Q:'DGCNT  D CHK^DGMTSCU2,CHILD:Y
"RTN","EASECSU3",32,0)
 S DGINTF=$S(DGINT:1,1:0)
"RTN","EASECSU3",33,0)
 S DGNWTF=$S(DGNWT:1,1:0)
"RTN","EASECSU3",34,0)
 Q
"RTN","EASECSU3",35,0)
 ;
"RTN","EASECSU3",36,0)
SPOUSE ;Determine spouse income and net worth
"RTN","EASECSU3",37,0)
 S DGIN0("S")=$G(^DGMT(408.21,DGINC("S"),0)),DGIN1("S")=$G(^(1)),DGIN2("S")=$G(^(2))
"RTN","EASECSU3",38,0)
 S DGINT=DGINT+$$TOT^DGMTSCU1(DGIN0("S"),6,17)+$$TOT^DGMTSCU1(DGIN0("S"),19,20)
"RTN","EASECSU3",39,0)
 I $G(DGCOMF) D MT(DGINR("S"),DGMTI)
"RTN","EASECSU3",40,0)
SPOUSEQ Q
"RTN","EASECSU3",41,0)
 ;
"RTN","EASECSU3",42,0)
CHILD ;Determine total dependent children(s) income and expense
"RTN","EASECSU3",43,0)
 N DGCE,DGEMP,I,X
"RTN","EASECSU3",44,0)
 S X=$G(^DGMT(408.21,DGINC("C",DGCNT),0)) F I=8:1:17 I $P(X,"^",I)]"" S $P(DGIN0("C"),"^",I)=$P(DGIN0("C"),"^",I)+$P(X,"^",I)
"RTN","EASECSU3",45,0)
 S DGEMP=$P(X,"^",14),DGINT=DGINT+$$TOT^DGMTSCU1(X,8,17)
"RTN","EASECSU3",46,0)
 S X=$G(^DGMT(408.21,DGINC("C",DGCNT),1)) I $P(X,"^",3)]"" S $P(DGIN1("C"),"^",3)=$P(DGIN1("C"),"^",3)+$P(X,"^",3)
"RTN","EASECSU3",47,0)
 S DGCE=(DGEMP-$P(DGMTPAR,"^",17))-$P(X,"^",3)
"RTN","EASECSU3",48,0)
 S DGDET=DGDET+DGEMP-$S($G(DGCE)>0:DGCE,1:0)
"RTN","EASECSU3",49,0)
 I $G(DGCOMF) D MT(DGINR("C",DGCNT),DGMTI)
"RTN","EASECSU3",50,0)
CHILDQ Q
"RTN","EASECSU3",51,0)
 ;
"RTN","EASECSU3",52,0)
MT(DGINR,DGMTI) ;Update Income Relation file with Means Test IEN
"RTN","EASECSU3",53,0)
 ;         Input  -- DGINR  Income Relation IEN
"RTN","EASECSU3",54,0)
 ;                   DGMTI  Annual Means Test IEN
"RTN","EASECSU3",55,0)
 ;         Output -- Update Means Test IEN
"RTN","EASECSU3",56,0)
 N DA,DIE,DR
"RTN","EASECSU3",57,0)
 S DA=DGINR,DIE="^DGMT(408.22,",DR="31////^S X="_DGMTI D ^DIE
"RTN","EASECSU3",58,0)
 Q
"RTN","EASECSU3",59,0)
 ;
"RTN","EASECSU3",60,0)
DEP ;Determine dependent data
"RTN","EASECSU3",61,0)
 ; Input  -- DFN     Patient file IEN
"RTN","EASECSU3",62,0)
 ;           DGMTDT  Date of Test
"RTN","EASECSU3",63,0)
 ;           DGVIRI  Veteran Income Relation IEN
"RTN","EASECSU3",64,0)
 ; Output -- DGVIR0  Veteran Income Relation 0th node
"RTN","EASECSU3",65,0)
 ;           DGSP    Spouse 1=YES and 0=NO (mt income)
"RTN","EASECSU3",66,0)
 ;           DGDC    Dependent children 1=YES and 0=NO (mt income)
"RTN","EASECSU3",67,0)
 ;           DGNC    Number of dependent children
"RTN","EASECSU3",68,0)
 ;           DGND    Total number of dependents
"RTN","EASECSU3",69,0)
 N DGCNT,DGDEP,DGINR,DGREL,Y
"RTN","EASECSU3",70,0)
 S DGVIR0=$G(^DGMT(408.22,DGVIRI,0)) D ALL^EASECU21(DFN,"SC",DGMTDT,"PR",$S($G(DGMTI):DGMTI,1:""))
"RTN","EASECSU3",71,0)
 ;Include spouse's income for LTC co-pay if vet is married
"RTN","EASECSU3",72,0)
 S DGSP=$S('$P(DGVIR0,"^",14):0,'$G(DGREL("S")):0,1:1)
"RTN","EASECSU3",73,0)
 ;Child's income is not included for LTC co-pay test
"RTN","EASECSU3",74,0)
 S DGDC=0
"RTN","EASECSU3",75,0)
 S DGNC=+$P(DGVIR0,"^",13)
"RTN","EASECSU3",76,0)
 S DGND=DGSP+DGNC
"RTN","EASECSU3",77,0)
 Q
"RTN","EASECU")
0^3^B3800536
"RTN","EASECU",1,0)
EASECU ;ALB/PHH - LTC Co-Pay Test Utilities ; 22 AUG 2001
"RTN","EASECU",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECU",3,0)
 ;
"RTN","EASECU",4,0)
LST(DFN,DGDT,DGMTYPT) ;Last LTC Co-Pay test for a patient
"RTN","EASECU",5,0)
 ;         Input  -- DFN   Patient IEN
"RTN","EASECU",6,0)
 ;                   DGDT  Date/Time  (Optional- default today@2359)
"RTN","EASECU",7,0)
 ;                DGMTYPT  Type of Test (Optional - if not defined 
"RTN","EASECU",8,0)
 ;                                       LTC Co-Pay will be assumed)
"RTN","EASECU",9,0)
 ;         Output -- LTC Co-Pay Test IEN^Date of Test
"RTN","EASECU",10,0)
 ;                   ^Status Name^Status Code^Source of Test
"RTN","EASECU",11,0)
 N DGIDT,DGMTFL1,DGMTI,DGNOD,Y I '$D(DGMTYPT) S DGMTYPT=3
"RTN","EASECU",12,0)
 S DGIDT=$S($G(DGDT)>0:-DGDT,1:-DT) S:'$P(DGIDT,".",2) DGIDT=DGIDT_.2359
"RTN","EASECU",13,0)
 F  S DGIDT=+$O(^DGMT(408.31,"AID",DGMTYPT,DFN,DGIDT)) Q:'DGIDT!$G(DGMTFL1)  D
"RTN","EASECU",14,0)
 .F DGMTI=0:0 S DGMTI=+$O(^DGMT(408.31,"AID",DGMTYPT,DFN,DGIDT,DGMTI)) Q:'DGMTI!$G(DGMTFL1)  D
"RTN","EASECU",15,0)
 ..S DGNOD=$G(^DGMT(408.31,DGMTI,0)) I DGNOD S DGMTFL1=1,Y=DGMTI_"^"_$P(^(0),"^")_"^"_$$MTS(DFN,+$P(^(0),"^",3))_"^"_$P(DGNOD,"^",23)
"RTN","EASECU",16,0)
 Q $G(Y)
"RTN","EASECU",17,0)
 ;
"RTN","EASECU",18,0)
MTS(DFN,DGMTS) ;LTC Co-Pay test status -- default current
"RTN","EASECU",19,0)
 ;         Input  -- DFN    Patient IEN
"RTN","EASECU",20,0)
 ;                   DGMTS  LTC Co-Pay Test Status IEN  (Optional)
"RTN","EASECU",21,0)
 ;         Output -- Status Name^Status Code
"RTN","EASECU",22,0)
 N Y
"RTN","EASECU",23,0)
 S DGMTS=$S($G(DGMTS)>0:DGMTS,1:$P($G(^DPT(DFN,0)),"^",14))
"RTN","EASECU",24,0)
 I DGMTS S Y=$P($G(^DG(408.32,DGMTS,0)),"^",1,2)
"RTN","EASECU",25,0)
 Q $G(Y)
"RTN","EASECU",26,0)
 ;
"RTN","EASECU",27,0)
EXMPT(DFN) ;Check if veteran is exempt from LTC co-payments:
"RTN","EASECU",28,0)
 ; If the veteran has a compensable SC disability, OR
"RTN","EASECU",29,0)
 ; If the veteran is a single, NSC pensioner not in receipt of A&A
"RTN","EASECU",30,0)
 ; and HB benefits
"RTN","EASECU",31,0)
 ;   Input   -- DFN  Patient IEN
"RTN","EASECU",32,0)
 ;   Output  -- 0 = veteran not exempt
"RTN","EASECU",33,0)
 ;              1 = veteran has compensable SC disability
"RTN","EASECU",34,0)
 ;              2 = veteran is single NSC pensioner (no A&A, HB)
"RTN","EASECU",35,0)
 N X,Y,ELG
"RTN","EASECU",36,0)
 S Y=0
"RTN","EASECU",37,0)
 ; if service connected percentage is greater than 10% OR service
"RTN","EASECU",38,0)
 ; connected percentage is less than 10% and annual VA
"RTN","EASECU",39,0)
 ; check amount is greater than 0, then exempt type 1
"RTN","EASECU",40,0)
 S X=$G(^DPT(DFN,.36)),ELG=$P($G(^DIC(8,+X,0)),U,9)
"RTN","EASECU",41,0)
 I ELG=1!($P($G(^DPT(DFN,.3)),U,2)'<10) S Y=1 G EXMPTQ
"RTN","EASECU",42,0)
 I ELG=3,$P($G(^DPT(DFN,.3)),U,2)<10,$P($G(^DPT(DFN,.362)),U,20)>0 S Y=1 G EXMPTQ
"RTN","EASECU",43,0)
 ; if Service Connected quit
"RTN","EASECU",44,0)
 I $P($G(^DPT(DFN,.3)),U)="Y" G EXMPTQ
"RTN","EASECU",45,0)
 ; if Marital Status = 'Married' or 'Separated' quit
"RTN","EASECU",46,0)
 S X=$P($G(^DIC(11,+$P($G(^DPT(DFN,0)),U,5),0)),U,3)
"RTN","EASECU",47,0)
 I "^M^S^"[("^"_X_"^") G EXMPTQ
"RTN","EASECU",48,0)
 ; if not receiving VA pension quit
"RTN","EASECU",49,0)
 S X=$G(^DPT(DFN,.362)) I $P(X,U,14)'="Y" G EXMPTQ
"RTN","EASECU",50,0)
 ; if receiving A&A or HP benefits quit
"RTN","EASECU",51,0)
 I $P(X,U,12)="Y"!($P(X,U,13)="Y") G EXMPTQ
"RTN","EASECU",52,0)
 S Y=2
"RTN","EASECU",53,0)
EXMPTQ Q Y
"RTN","EASECU23")
0^21^B10362450
"RTN","EASECU23",1,0)
EASECU23 ;ALB/PHH - Display LTC Co-Pay test information; 17 AUG 2001
"RTN","EASECU23",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECU23",3,0)
 ;
"RTN","EASECU23",4,0)
DISPLAY(DGMTI,DGMTYPT) ;Display LTC Co-Pay test data
"RTN","EASECU23",5,0)
 ;          Input:  DGMTI - IEN of LTC Co-Pay
"RTN","EASECU23",6,0)
 ;                  DGMTYPT - Type of Test
"RTN","EASECU23",7,0)
 ;         Output:  None
"RTN","EASECU23",8,0)
 N DGFCOL,DGSCOL,DGMTDIS,DGMTWP,WP,X,X1,Y,Z,DGSOURCE
"RTN","EASECU23",9,0)
 S (DGMTWP,WP)=0,DGFCOL=24,DGSCOL=65
"RTN","EASECU23",10,0)
 S DGMTDIS=^DGMT(408.31,DGMTI,0) I $D(^("C")) F  S DGMTWP=$O(^DGMT(408.31,DGMTI,"C",DGMTWP)) Q:'DGMTWP  S DGMTDIS(DGMTWP)=^(DGMTWP,0)
"RTN","EASECU23",11,0)
 S X="",X=$$SETSTR^VALM1("Patient:",X,15,8)
"RTN","EASECU23",12,0)
 S X=$$SETSTR^VALM1($P(^DPT($P(DGMTDIS,U,2),0),U),X,DGFCOL,25)
"RTN","EASECU23",13,0)
 S X=$$SETSTR^VALM1("Date of Test:",X,51,13)
"RTN","EASECU23",14,0)
 S X=$$SETSTR^VALM1($$FTIME^DGMTUTL($P(DGMTDIS,U)),X,DGSCOL,15)
"RTN","EASECU23",15,0)
 W !!,X
"RTN","EASECU23",16,0)
 S X="",X=$$SETSTR^VALM1("Total Dependents:",X,6,17)
"RTN","EASECU23",17,0)
 S X=$$SETSTR^VALM1($P(DGMTDIS,U,18),X,DGFCOL,25)
"RTN","EASECU23",18,0)
 S X=$$SETSTR^VALM1("Type Of Test:",X,51,13)
"RTN","EASECU23",19,0)
 S X=$$SETSTR^VALM1($P($G(^DG(408.33,+$P(DGMTDIS,U,19),0)),U),X,DGSCOL,15)
"RTN","EASECU23",20,0)
 W !,X
"RTN","EASECU23",21,0)
 S X="",X=$$SETSTR^VALM1("Status:",X,16,7)
"RTN","EASECU23",22,0)
 S X=$$SETSTR^VALM1($S($P(DGMTDIS,U,3)'="":$P(^DG(408.32,$P(DGMTDIS,U,3),0),U),1:"In Process"),X,DGFCOL,25)
"RTN","EASECU23",23,0)
 S X=$$SETSTR^VALM1("Date/Time Completed:",X,44,20)
"RTN","EASECU23",24,0)
 S X=$$SETSTR^VALM1($S($P(DGMTDIS,U,7)'="":$$FTIME^DGMTUTL($P(DGMTDIS,U,7)),1:""),X,DGSCOL,15)
"RTN","EASECU23",25,0)
 W !,X
"RTN","EASECU23",26,0)
 I $P(DGMTDIS,U,3)=12 D
"RTN","EASECU23",27,0)
 .N EXERSN
"RTN","EASECU23",28,0)
 .S X="",X=$$SETSTR^VALM1("Reason:",X,16,7),EXERSN=$P($G(^DGMT(408.31,DGMTI,2)),U,7)
"RTN","EASECU23",29,0)
 .S X=$$SETSTR^VALM1($S(EXERSN'="":$P(^EAS(714.1,EXERSN,0),"^"),1:""),X,DGFCOL,56)
"RTN","EASECU23",30,0)
 .W !,X
"RTN","EASECU23",31,0)
 S X="",X=$$SETSTR^VALM1("Source Of Test:",X,49,15)
"RTN","EASECU23",32,0)
 S DGSOURCE=$$SR^DGMTAUD1(DGMTDIS)
"RTN","EASECU23",33,0)
 I DGSOURCE="OTHER FACILITY" S DGSOURCE=$P($G(^DGMT(408.31,DGMTI,2)),"^",5)
"RTN","EASECU23",34,0)
 S X=$$SETSTR^VALM1(DGSOURCE,X,DGSCOL,15)
"RTN","EASECU23",35,0)
 W !,X
"RTN","EASECU23",36,0)
 S X="",X=$$SETSTR^VALM1("Income:",X,16,7)
"RTN","EASECU23",37,0)
 S X=$$SETSTR^VALM1($S($P(DGMTDIS,U,4)'="":"$"_$P(DGMTDIS,U,4),1:""),X,DGFCOL,25)
"RTN","EASECU23",38,0)
 S X=$$SETSTR^VALM1("Completed By:",X,51,13)
"RTN","EASECU23",39,0)
 S X=$$SETSTR^VALM1($P($G(^VA(200,+$P(DGMTDIS,U,6),0)),U),X,DGSCOL,15)
"RTN","EASECU23",40,0)
 W !,X
"RTN","EASECU23",41,0)
 S X="",X=$$SETSTR^VALM1("Assets:",X,16,7)
"RTN","EASECU23",42,0)
 S X=$$SETSTR^VALM1($S($P(DGMTDIS,U,5)'="":"$"_$P(DGMTDIS,U,5),1:""),X,DGFCOL,25)
"RTN","EASECU23",43,0)
 W !,X
"RTN","EASECU23",44,0)
 S X="",X=$$SETSTR^VALM1("Deductible Expenses:",X,3,20)
"RTN","EASECU23",45,0)
 S X=$$SETSTR^VALM1($S($P(DGMTDIS,U,15)'="":"$"_$P(DGMTDIS,U,15),1:""),X,DGFCOL,25)
"RTN","EASECU23",46,0)
 W !,X
"RTN","EASECU23",47,0)
 S X=""
"RTN","EASECU23",48,0)
 S X=$$SETSTR^VALM1("Declines Income Info:",X,2,21)
"RTN","EASECU23",49,0)
 S X=$$SETSTR^VALM1($S($P(DGMTDIS,U,14)=1:"YES",$P(DGMTDIS,U,14)=0:"NO",1:""),X,DGFCOL,25)
"RTN","EASECU23",50,0)
 S X=$$SETSTR^VALM1("Agrees to Pay Copayments:",X,39,25)
"RTN","EASECU23",51,0)
 S X=$$SETSTR^VALM1($S($P(DGMTDIS,U,11)=1:"YES",$P(DGMTDIS,U,11)=0:"NO",1:""),X,DGSCOL,15)
"RTN","EASECU23",52,0)
 W !,X
"RTN","EASECU23",53,0)
 S (X,Y)=""
"RTN","EASECU23",54,0)
 I $G(^DGMT(408.31,DGMTI,"PURGE"))'="" D
"RTN","EASECU23",55,0)
 .S X=$$SETSTR^VALM1("Income Data Purged:",X,45,19)
"RTN","EASECU23",56,0)
 .S X1=^DGMT(408.31,DGMTI,"PURGE")
"RTN","EASECU23",57,0)
 .S X=$$SETSTR^VALM1($$FTIME^DGMTUTL(X1),X,DGSCOL,15)
"RTN","EASECU23",58,0)
 W !,X
"RTN","EASECU23",59,0)
 ;
"RTN","EASECU23",60,0)
 S (X,Y,Z)=""
"RTN","EASECU23",61,0)
 W !,"Comment(s):" F  S WP=$O(DGMTDIS(WP)) Q:'WP  D
"RTN","EASECU23",62,0)
 .W !,DGMTDIS(WP)
"RTN","EASECU23",63,0)
 W !
"RTN","EASECU23",64,0)
 Q
"RTN","EASECV")
0^11^B9639494
"RTN","EASECV",1,0)
EASECV ;ALB/PHH - View an LTC Co-Pay Test ; 20 AUG 2001
"RTN","EASECV",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7**;Mar 15, 2001
"RTN","EASECV",3,0)
 ;
"RTN","EASECV",4,0)
EN ;Entry point to view an LTC Co-Pay test
"RTN","EASECV",5,0)
 S DIC("S")="I $D(^DGMT(408.31,""AID"",3,+Y))"
"RTN","EASECV",6,0)
 S DIC="^DPT(",DIC(0)="AEMQ" W ! D ^DIC K DIC G Q:Y<0 S DFN=+Y
"RTN","EASECV",7,0)
 ;
"RTN","EASECV",8,0)
DT S DIC("A")="Select DATE OF TEST: "
"RTN","EASECV",9,0)
 I $D(^DGMT(408.31,+$$LST^EASECU(DFN,"",DGMTYPT),0)) S DIC("B")=$P(^(0),"^")
"RTN","EASECV",10,0)
 S DIC("S")="I $P(^(0),U,2)=DFN,$P(^(0),U,19)=DGMTYPT"
"RTN","EASECV",11,0)
 S DIC="^DGMT(408.31,",DIC(0)="EQZ" W ! D EN^DGMTLK K DIC G Q:Y<0
"RTN","EASECV",12,0)
 S DGMTI=+Y,DGMTDT=$P(Y,"^",2),DGMT0=Y(0)
"RTN","EASECV",13,0)
 ;
"RTN","EASECV",14,0)
EN1 ;Entry point to view an uneditable test
"RTN","EASECV",15,0)
 ;JAN;12/13/00;DG*5.3*346;Change G EN to G EN1Q.  This allowed the code to quit back to VIEWPRT+4^EASECE, then back to DT+9^EASECE then GO to EN^EASECE.
"RTN","EASECV",16,0)
 D DIS I $D(DTOUT)!($D(DUOUT))!($G(DGERR)) K DGERR,DTOUT,DUOUT G EN1Q
"RTN","EASECV",17,0)
 S DGMTACT="VEW",DGMTROU=$S($G(DGMTERR):"EN1Q^EASECV",1:"EN^EASECV") G EN^EASECSC
"RTN","EASECV",18,0)
 ;
"RTN","EASECV",19,0)
Q K DFN,DGMTACT,DGMTDT,DGMTERR,DGMTI,DGMT0,DGMTROU,DGMTYPT,DTOUT,DUOUT,X,Y
"RTN","EASECV",20,0)
EN1Q Q
"RTN","EASECV",21,0)
 ;
"RTN","EASECV",22,0)
DIS ;Display LTC Co-Pay test data
"RTN","EASECV",23,0)
 N DA,DGCONTOT,DGDEP,DGINC,DGINR,DGREL,DIC,DIR,DR,Y
"RTN","EASECV",24,0)
 D ALL^EASECU21(DFN,"VSC",DGMTDT,"IPR",$S($G(DGMTI):DGMTI,1:""))
"RTN","EASECV",25,0)
 D DISPLAY^EASECU23(DGMTI,DGMTYPT)
"RTN","EASECV",26,0)
 I '$D(DGREL("V"))!('$D(DGINC("V")))!('$D(DGINR("V"))) D
"RTN","EASECV",27,0)
 .W !?2,*7,"** DETAILED LTC COPAY TEST INCOME INFORMATION IS NOT "
"RTN","EASECV",28,0)
 .I $P(DGMT0,U,3)=12!($P(DGMT0,U,14))=1 W "REQUIRED **",!
"RTN","EASECV",29,0)
 .E  W "AVAILABLE **",1
"RTN","EASECV",30,0)
 .S DGERR=1
"RTN","EASECV",31,0)
 I '$G(DGERR),$D(^DGMT(408.21,+$G(DGINC("V")),"TOT")),$P(DGMT0,"^",4)]"" S DGCONTOT=^("TOT") D CHK
"RTN","EASECV",32,0)
 I '$G(DGERR),$P(DGMT0,"^",3)=12 W !?2,*7,"** LTC COPAY TEST IS NO LONGER REQUIRED, INCOME INFORMATION MAY NOT BE ACCURATE **",!
"RTN","EASECV",33,0)
 S DIR(0)="E" D ^DIR
"RTN","EASECV",34,0)
 Q
"RTN","EASECV",35,0)
 ;
"RTN","EASECV",36,0)
CHK ;Check for spouse and children totals NOT converted 
"RTN","EASECV",37,0)
 N DGCTOT,DGSTOT,DGVIR0
"RTN","EASECV",38,0)
 S DGVIR0=$G(^DGMT(408.22,+$G(DGINR("V")),0))
"RTN","EASECV",39,0)
 I '$D(DGINC("S")),$P(DGVIR0,"^",5),($P(DGCONTOT,"^")]""!($P(DGCONTOT,"^",2)]"")) S DGSTOT=$P(DGCONTOT,"^",1,2)
"RTN","EASECV",40,0)
 I '$D(DGINC("C")),$P(DGVIR0,"^",8),($P(DGCONTOT,"^",3)]""!($P(DGCONTOT,"^",4)]"")) S DGCTOT=$P(DGCONTOT,"^",3,4)
"RTN","EASECV",41,0)
 D WRT:$D(DGSTOT)!($D(DGCTOT))
"RTN","EASECV",42,0)
 Q
"RTN","EASECV",43,0)
 ;
"RTN","EASECV",44,0)
WRT ;Write spouse and children totals NOT converted
"RTN","EASECV",45,0)
 W !?2,*7,"DETAILED LTC COPAY TEST INCOME INFORMATION COULD NOT BE CONVERTED FOR THE",!?2,"FOLLOWING RELATIONS ASSOCIATED WITH THIS LTC COPAY TEST:"
"RTN","EASECV",46,0)
 W !!?27,"INCOME",?37,"NET WORTH",!?27,"------",?37,"---------"
"RTN","EASECV",47,0)
 W:$D(DGSTOT) !?2,"SPOUSE",?22,$J($$AMT^DGMTSCU1($P(DGSTOT,"^")),11),?35,$J($$AMT^DGMTSCU1($P(DGSTOT,"^",2)),11)
"RTN","EASECV",48,0)
 W:$D(DGCTOT) !?2,"CHILDREN",?22,$J($$AMT^DGMTSCU1($P(DGCTOT,"^")),11),?35,$J($$AMT^DGMTSCU1($P(DGCTOT,"^",2)),11)
"RTN","EASECV",49,0)
 W !!?2,"TO COLLECT THE NEW DETAILED DEPENDENT DEMOGRAPHIC AND INCOME INFORMATION",!?2,"THE LTC COPAY TEST WOULD HAVE TO BE EDITED.",!
"RTN","EASECV",50,0)
 Q
"VER")
8.0^22
**INSTALL NAME**
DG*5.3*433
"BLD",3609,0)
DG*5.3*433^REGISTRATION^0^3020603^y
"BLD",3609,4,0)
^9.64PA^408.33^4
"BLD",3609,4,408.21,0)
408.21
"BLD",3609,4,408.21,2,0)
^9.641^408.21^1
"BLD",3609,4,408.21,2,408.21,0)
INDIVIDUAL ANNUAL INCOME  (File-top level)
"BLD",3609,4,408.21,2,408.21,1,0)
^9.6411^1.11^11
"BLD",3609,4,408.21,2,408.21,1,1.01,0)
MEDICAL EXPENSES
"BLD",3609,4,408.21,2,408.21,1,1.02,0)
FUNERAL AND BURIAL EXPENSES
"BLD",3609,4,408.21,2,408.21,1,1.03,0)
EDUCATIONAL EXPENSES
"BLD",3609,4,408.21,2,408.21,1,1.04,0)
RENT/MORTGAGE
"BLD",3609,4,408.21,2,408.21,1,1.05,0)
UTILITIES
"BLD",3609,4,408.21,2,408.21,1,1.06,0)
CAR PAYMENT
"BLD",3609,4,408.21,2,408.21,1,1.07,0)
FOOD
"BLD",3609,4,408.21,2,408.21,1,1.08,0)
COURT-ORDERED PAYMENTS
"BLD",3609,4,408.21,2,408.21,1,1.09,0)
INSURANCE
"BLD",3609,4,408.21,2,408.21,1,1.1,0)
TAXES
"BLD",3609,4,408.21,2,408.21,1,1.11,0)
TAXES (PROPERTY,PERSONAL)
"BLD",3609,4,408.21,222)
y^n^p^^^^n
"BLD",3609,4,408.31,0)
408.31
"BLD",3609,4,408.31,2,0)
^9.641^408.31^1
"BLD",3609,4,408.31,2,408.31,0)
ANNUAL MEANS TEST  (File-top level)
"BLD",3609,4,408.31,2,408.31,1,0)
^9.6411^2.08^2
"BLD",3609,4,408.31,2,408.31,1,.11,0)
AGREED TO PAY DEDUCTIBLE
"BLD",3609,4,408.31,2,408.31,1,2.08,0)
LINKED LTC CO-PAY/MEANS TEST
"BLD",3609,4,408.31,222)
y^n^p^^^^n
"BLD",3609,4,408.32,0)
408.32
"BLD",3609,4,408.32,222)
n^n^f^^n^^y^m^n
"BLD",3609,4,408.33,0)
408.33
"BLD",3609,4,408.33,222)
n^n^f^^n^^y^m^n
"BLD",3609,4,"APDD",408.21,408.21)

"BLD",3609,4,"APDD",408.21,408.21,1.01)

"BLD",3609,4,"APDD",408.21,408.21,1.02)

"BLD",3609,4,"APDD",408.21,408.21,1.03)

"BLD",3609,4,"APDD",408.21,408.21,1.04)

"BLD",3609,4,"APDD",408.21,408.21,1.05)

"BLD",3609,4,"APDD",408.21,408.21,1.06)

"BLD",3609,4,"APDD",408.21,408.21,1.07)

"BLD",3609,4,"APDD",408.21,408.21,1.08)

"BLD",3609,4,"APDD",408.21,408.21,1.09)

"BLD",3609,4,"APDD",408.21,408.21,1.1)

"BLD",3609,4,"APDD",408.21,408.21,1.11)

"BLD",3609,4,"APDD",408.31,408.31)

"BLD",3609,4,"APDD",408.31,408.31,.11)

"BLD",3609,4,"APDD",408.31,408.31,2.08)

"BLD",3609,4,"B",408.21,408.21)

"BLD",3609,4,"B",408.31,408.31)

"BLD",3609,4,"B",408.32,408.32)

"BLD",3609,4,"B",408.33,408.33)

"BLD",3609,"KRN",0)
^9.67PA^8989.52^19
"BLD",3609,"KRN",.4,0)
.4
"BLD",3609,"KRN",.401,0)
.401
"BLD",3609,"KRN",.402,0)
.402
"BLD",3609,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",3609,"KRN",.402,"NM",1,0)
DGMT ENTER/EDIT COMPLETION    FILE #408.31^408.31^0
"BLD",3609,"KRN",.402,"NM","B","DGMT ENTER/EDIT COMPLETION    FILE #408.31",1)

"BLD",3609,"KRN",.403,0)
.403
"BLD",3609,"KRN",.5,0)
.5
"BLD",3609,"KRN",.84,0)
.84
"BLD",3609,"KRN",3.6,0)
3.6
"BLD",3609,"KRN",3.8,0)
3.8
"BLD",3609,"KRN",9.2,0)
9.2
"BLD",3609,"KRN",9.8,0)
9.8
"BLD",3609,"KRN",9.8,"NM",0)
^9.68A^13^13
"BLD",3609,"KRN",9.8,"NM",1,0)
DGMTA^^0^B31176145
"BLD",3609,"KRN",9.8,"NM",2,0)
DGMTAUD^^0^B10506130
"BLD",3609,"KRN",9.8,"NM",3,0)
DGMTAUD1^^0^B4613757
"BLD",3609,"KRN",9.8,"NM",4,0)
DGMTAUD2^^0^B10704103
"BLD",3609,"KRN",9.8,"NM",5,0)
DGMTU^^0^B53142426
"BLD",3609,"KRN",9.8,"NM",6,0)
DGMTSCU2^^0^B7979328
"BLD",3609,"KRN",9.8,"NM",7,0)
DGMTSC^^0^B9520828
"BLD",3609,"KRN",9.8,"NM",8,0)
DGMTE^^0^B20191648
"BLD",3609,"KRN",9.8,"NM",9,0)
DGMTU3^^0^B7002090
"BLD",3609,"KRN",9.8,"NM",10,0)
DGMTR1^^0^B29588968
"BLD",3609,"KRN",9.8,"NM",11,0)
DGMTDEL^^0^B24882422
"BLD",3609,"KRN",9.8,"NM",12,0)
DGMTDEL1^^0^B12420169
"BLD",3609,"KRN",9.8,"NM",13,0)
DGMTSCC^^0^B30086637
"BLD",3609,"KRN",9.8,"NM","B","DGMTA",1)

"BLD",3609,"KRN",9.8,"NM","B","DGMTAUD",2)

"BLD",3609,"KRN",9.8,"NM","B","DGMTAUD1",3)

"BLD",3609,"KRN",9.8,"NM","B","DGMTAUD2",4)

"BLD",3609,"KRN",9.8,"NM","B","DGMTDEL",11)

"BLD",3609,"KRN",9.8,"NM","B","DGMTDEL1",12)

"BLD",3609,"KRN",9.8,"NM","B","DGMTE",8)

"BLD",3609,"KRN",9.8,"NM","B","DGMTR1",10)

"BLD",3609,"KRN",9.8,"NM","B","DGMTSC",7)

"BLD",3609,"KRN",9.8,"NM","B","DGMTSCC",13)

"BLD",3609,"KRN",9.8,"NM","B","DGMTSCU2",6)

"BLD",3609,"KRN",9.8,"NM","B","DGMTU",5)

"BLD",3609,"KRN",9.8,"NM","B","DGMTU3",9)

"BLD",3609,"KRN",19,0)
19
"BLD",3609,"KRN",19,"NM",0)
^9.68A^^
"BLD",3609,"KRN",19.1,0)
19.1
"BLD",3609,"KRN",101,0)
101
"BLD",3609,"KRN",409.61,0)
409.61
"BLD",3609,"KRN",771,0)
771
"BLD",3609,"KRN",870,0)
870
"BLD",3609,"KRN",8989.51,0)
8989.51
"BLD",3609,"KRN",8989.52,0)
8989.52
"BLD",3609,"KRN",8994,0)
8994
"BLD",3609,"KRN","B",.4,.4)

"BLD",3609,"KRN","B",.401,.401)

"BLD",3609,"KRN","B",.402,.402)

"BLD",3609,"KRN","B",.403,.403)

"BLD",3609,"KRN","B",.5,.5)

"BLD",3609,"KRN","B",.84,.84)

"BLD",3609,"KRN","B",3.6,3.6)

"BLD",3609,"KRN","B",3.8,3.8)

"BLD",3609,"KRN","B",9.2,9.2)

"BLD",3609,"KRN","B",9.8,9.8)

"BLD",3609,"KRN","B",19,19)

"BLD",3609,"KRN","B",19.1,19.1)

"BLD",3609,"KRN","B",101,101)

"BLD",3609,"KRN","B",409.61,409.61)

"BLD",3609,"KRN","B",771,771)

"BLD",3609,"KRN","B",870,870)

"BLD",3609,"KRN","B",8989.51,8989.51)

"BLD",3609,"KRN","B",8989.52,8989.52)

"BLD",3609,"KRN","B",8994,8994)

"BLD",3609,"QUES",0)
^9.62^^
"DATA",408.32,1,0)
REQUIRED^R^N^^^^^^^^^^^^^^^^1
"DATA",408.32,1,"D",0)
^408.321^3^3^3020508^^^^
"DATA",408.32,1,"D",1,0)
This status is assigned by the system, typically through registration.
"DATA",408.32,1,"D",2,0)
All veterans whose primary eligibility is NSC require a means test.
"DATA",408.32,1,"D",3,0)
There are conditional exemptions as determined by legislation.
"DATA",408.32,1,"E",0)
^408.3275DA^1^1
"DATA",408.32,1,"E",1,0)
2860701^1
"DATA",408.32,2,0)
PENDING ADJUDICATION^P^D^^^^^^^^^^^^^^^^1
"DATA",408.32,2,"D",0)
^^5^5^2930203^^^^
"DATA",408.32,2,"D",1,0)
This status is indirectly assigned by the user.  If a veteran's income
"DATA",408.32,2,"D",2,0)
places him or her in a mandatory care category, but the income plus
"DATA",408.32,2,"D",3,0)
net worth exceeds the annual property threshold the case can be sent
"DATA",408.32,2,"D",4,0)
to adjudication.  The veteran is considered to be a Category C and
"DATA",408.32,2,"D",5,0)
must agree to make the co-payment until the case is adjudicated.
"DATA",408.32,2,"E",0)
^408.3275DA^1^1
"DATA",408.32,2,"E",1,0)
2860701^1
"DATA",408.32,3,0)
NO LONGER REQUIRED^N^N^^^^^^^^^^^^^^^^1
"DATA",408.32,3,"D",0)
^^4^4^2980511^^^^
"DATA",408.32,3,"D",1,0)
This status is assigned by the system, typically through registration.
"DATA",408.32,3,"D",2,0)
This status is assigned when a veteran no longer requires a means test.
"DATA",408.32,3,"D",3,0)
This may occur if the primary eligibility changes o one of the
"DATA",408.32,3,"D",4,0)
conditional exeptions is applied.
"DATA",408.32,3,"E",0)
^408.3275DA^1^1
"DATA",408.32,3,"E",1,0)
2860701^1
"DATA",408.32,4,0)
CATEGORY A^A^M^^^^^^^^^^^^^^^^1
"DATA",408.32,4,"D",0)
^408.321^6^6^3020508^^^^
"DATA",408.32,4,"D",1,0)
This status is assigned by the system or the user.  If a veteran's
"DATA",408.32,4,"D",2,0)
income is below the annual threshold for this category, the means test
"DATA",408.32,4,"D",3,0)
is assigned this status and subsequent category of care.  This is
"DATA",408.32,4,"D",4,0)
determined when the user completes the means test for a veteran.
"DATA",408.32,4,"D",5,0)
This status can also be assigned by the user when adjudicating
"DATA",408.32,4,"D",6,0)
a means test.
"DATA",408.32,4,"E",0)
^408.3275DA^1^1
"DATA",408.32,4,"E",1,0)
2860701^1
"DATA",408.32,4,"MSG")
Veteran is eligible and provision of hospital care is mandatory
"DATA",408.32,5,0)
CATEGORY B^B^M^^^^^^^^^^^^^^^^1
"DATA",408.32,5,"D",0)
^^6^6^2921217^^^
"DATA",408.32,5,"D",1,0)
This status is assigned by the system or the user.  If a veteran's
"DATA",408.32,5,"D",2,0)
income is below the annual threshold for this category, the means test
"DATA",408.32,5,"D",3,0)
is assigned this status and subsequent category of care.  This
"DATA",408.32,5,"D",4,0)
is determined when the user completes the means test for a veteran.
"DATA",408.32,5,"D",5,0)
This status can also be assigned by the user when adjudicating a
"DATA",408.32,5,"D",6,0)
means test.
"DATA",408.32,5,"E",0)
^408.3275DA^3^2
"DATA",408.32,5,"E",1,0)
2860701^1
"DATA",408.32,5,"E",3,0)
2910101^0
"DATA",408.32,5,"MSG")
Veteran is eligible on a space available basis
"DATA",408.32,6,0)
CATEGORY C^C^D^^^^^^^^^^^^^^^^1
"DATA",408.32,6,"D",0)
^408.321^5^5^3020508^^^
"DATA",408.32,6,"D",1,0)
This status is assigned by the system or the user.  If a veteran's
"DATA",408.32,6,"D",2,0)
income does not fall under any of the other thresholds, this status
"DATA",408.32,6,"D",3,0)
and subsequent category of care is assigned.  This is determined
"DATA",408.32,6,"D",4,0)
when the user completes the means test for a veteran.  This status
"DATA",408.32,6,"D",5,0)
can also be assigned by the user when adjudicating a means test.
"DATA",408.32,6,"E",0)
^408.3275DA^1^1
"DATA",408.32,6,"E",1,0)
2860701^1
"DATA",408.32,7,0)
EXEMPT^E^N^^^^^^^^^^^^^^^^2
"DATA",408.32,7,"D",0)
^408.321^3^3^3010815^^
"DATA",408.32,7,"D",1,0)
This status is determined by the billing package.  This is determined 
"DATA",408.32,7,"D",2,0)
when the user completes the co-pay test for a veteran.  This status can 
"DATA",408.32,7,"D",3,0)
also be assigned by the user when adjudicating a means test.
"DATA",408.32,7,"E",0)
^408.3275DA^1^1
"DATA",408.32,7,"E",1,0)
2921001^1
"DATA",408.32,8,0)
NON-EXEMPT^M^N^^^^^^^^^^^^^^^^2
"DATA",408.32,8,"D",0)
^^3^3^2930302^^^
"DATA",408.32,8,"D",1,0)
This status is determined by the billing package.  This is determined 
"DATA",408.32,8,"D",2,0)
when the user completes the co-pay test for a veteran.  This status can 
"DATA",408.32,8,"D",3,0)
also be assigned by the user when adjudicating a means test.
"DATA",408.32,8,"E",0)
^408.3275DA^1^1
"DATA",408.32,8,"E",1,0)
2921001^1
"DATA",408.32,9,0)
INCOMPLETE^I^N^^^^^^^^^^^^^^^^2
"DATA",408.32,9,"D",0)
^^1^1^2980511^^^^
"DATA",408.32,9,"D",1,0)
This status is assigned to the co-pays test until the test is completed.
"DATA",408.32,9,"E",0)
^408.3275DA^2^1
"DATA",408.32,9,"E",2,0)
2921029^1
"DATA",408.32,10,0)
NO LONGER APPLICABLE^L^N^^^^^^^^^^^^^^^^2
"DATA",408.32,10,"D",0)
^^3^3^2980511^^^^
"DATA",408.32,10,"D",1,0)
This status is assigned by the system, through registration.  This status
"DATA",408.32,10,"D",2,0)
is assigned when a veteran is no longer applicable to apply for a co-pay
"DATA",408.32,10,"D",3,0)
test.
"DATA",408.32,10,"E",0)
^408.3275DA^1^1
"DATA",408.32,10,"E",1,0)
2921029^1
"DATA",408.32,11,0)
PENDING ADJUDICATION^P^N^^^^^^^^^^^^^^^^2
"DATA",408.32,11,"D",0)
^^4^4^2930316^^^^
"DATA",408.32,11,"D",1,0)
This status is indirectly assigned by the user.  If a veteran's income
"DATA",408.32,11,"D",2,0)
places him or her in a mandatory care category, but the income plus
"DATA",408.32,11,"D",3,0)
net worth exceeds the annual property threshold the case can be sent
"DATA",408.32,11,"D",4,0)
to adjudication.  
"DATA",408.32,11,"E",0)
^408.3275DA^1^1
"DATA",408.32,11,"E",1,0)
2921029^0
"DATA",408.32,12,0)
EXEMPT^X^N^^^^^^^^^^^^^^^^3
"DATA",408.32,12,"D",0)
^408.321^2^2^3011214^^
"DATA",408.32,12,"D",1,0)
This status indicates that a veteran is exempt from Long Term Care
"DATA",408.32,12,"D",2,0)
co-payments.
"DATA",408.32,12,"E",0)
^408.3275DA^1^1
"DATA",408.32,12,"E",1,0)
3010815^1
"DATA",408.32,13,0)
NON-EXEMPT^T^N^^^^^^^^^^^^^^^^3
"DATA",408.32,13,"D",0)
^408.321^2^2^3010830^^
"DATA",408.32,13,"D",1,0)
This status indicates that a veteran is obligated to pay Long Term Care
"DATA",408.32,13,"D",2,0)
co-payments.
"DATA",408.32,13,"E",0)
^408.3275DA^1^1
"DATA",408.32,13,"E",1,0)
3010815^1
"DATA",408.32,14,0)
NON-EXEMPT^1^N^^^^^^^^^^^^^^^^4
"DATA",408.32,14,"D",0)
^408.321^2^2^3020219^^
"DATA",408.32,14,"D",1,0)
This status indicates that a veteran is obligated to complete the Long
"DATA",408.32,14,"D",2,0)
Term Care co-payments test (10-10EC).
"DATA",408.32,14,"E",0)
^408.3275DA^1^1
"DATA",408.32,14,"E",1,0)
3011214^1
"DATA",408.32,15,0)
EXEMPT^0^N^^^^^^^^^^^^^^^^4
"DATA",408.32,15,"D",0)
^^2^2^3011214^
"DATA",408.32,15,"D",1,0)
This status indicates that a veteran is not obligated to complete the
"DATA",408.32,15,"D",2,0)
Long Term Care co-payments test (10-10EC).
"DATA",408.32,15,"E",0)
^408.3275DA^1^1
"DATA",408.32,15,"E",1,0)
3011214^1
"DATA",408.33,1,0)
MEANS TEST
"DATA",408.33,2,0)
CO-PAY EXEMPTION TEST
"DATA",408.33,3,0)
LTC CO-PAY TEST
"DATA",408.33,4,0)
LTC CO-PAY EXEMPTION TEST
"FIA",408.21)
INDIVIDUAL ANNUAL INCOME
"FIA",408.21,0)
^DGMT(408.21,
"FIA",408.21,0,0)
408.21ID
"FIA",408.21,0,1)
y^n^p^^^^n
"FIA",408.21,0,10)

"FIA",408.21,0,11)

"FIA",408.21,0,"RLRO")

"FIA",408.21,0,"VR")
5.3^DG
"FIA",408.21,408.21)
1
"FIA",408.21,408.21,1.01)

"FIA",408.21,408.21,1.02)

"FIA",408.21,408.21,1.03)

"FIA",408.21,408.21,1.04)

"FIA",408.21,408.21,1.05)

"FIA",408.21,408.21,1.06)

"FIA",408.21,408.21,1.07)

"FIA",408.21,408.21,1.08)

"FIA",408.21,408.21,1.09)

"FIA",408.21,408.21,1.1)

"FIA",408.21,408.21,1.11)

"FIA",408.31)
ANNUAL MEANS TEST
"FIA",408.31,0)
^DGMT(408.31,
"FIA",408.31,0,0)
408.31ID
"FIA",408.31,0,1)
y^n^p^^^^n
"FIA",408.31,0,10)

"FIA",408.31,0,11)

"FIA",408.31,0,"RLRO")

"FIA",408.31,0,"VR")
5.3^DG
"FIA",408.31,408.31)
1
"FIA",408.31,408.31,.11)

"FIA",408.31,408.31,2.08)

"FIA",408.32)
MEANS TEST STATUS
"FIA",408.32,0)
^DG(408.32,
"FIA",408.32,0,0)
408.32I
"FIA",408.32,0,1)
n^n^f^^n^^y^m^n
"FIA",408.32,0,10)

"FIA",408.32,0,11)

"FIA",408.32,0,"RLRO")

"FIA",408.32,0,"VR")
5.3^DG
"FIA",408.32,408.32)
0
"FIA",408.32,408.321)
0
"FIA",408.32,408.3275)
0
"FIA",408.33)
TYPE OF TEST
"FIA",408.33,0)
^DG(408.33,
"FIA",408.33,0,0)
408.33
"FIA",408.33,0,1)
n^n^f^^n^^y^m^n
"FIA",408.33,0,10)

"FIA",408.33,0,11)

"FIA",408.33,0,"RLRO")

"FIA",408.33,0,"VR")
5.3^DG
"FIA",408.33,408.33)
0
"KRN",.402,1023,-1)
0^1
"KRN",.402,1023,0)
DGMT ENTER/EDIT COMPLETION^3020129.1511^^408.31^^^3020528
"KRN",.402,1023,"DIAB",5,0,408.31,4)
.07;REQ
"KRN",.402,1023,"DIAB",6,0,408.31,3)
.11;REQ
"KRN",.402,1023,"DR",1,408.31)
K DGFIN;I '$D(DGCAT)!('$D(DGINT))!('$D(DGNWT))!('$D(DGTHA))!('$D(DGTYC))!('$D(DGMTS)) W !,*7,"Variables DGCAT, DGINT, DGNWT, DGTHA, DGTYC and DGMTS must be defined!" S Y="@999";
"KRN",.402,1023,"DR",1,408.31,1)
I '$D(DFN)!('$D(DGDET))!('$D(DGMTDT))!('$D(DGND)) W !,*7,"Variables DFN, DGND, DGDET and DGMTDT must be defined!" S Y="@999";S:'$P(^DGMT(408.31,DA,0),U,14)&('$D(DGREF)) Y="@20";.14///^S X=$S($D(DGREF):1,1:"@");S:'X Y="@20";50;@20;
"KRN",.402,1023,"DR",1,408.31,2)
.03////^S X=DGMTS;.04////^S X=$S('$D(DGREF):DGINT,1:"@");.15////^S X=$S('$D(DGREF):DGDET,1:"@");.18////^S X=DGND;.06////^S X=DUZ;S:$P(^DGMT(408.31,DA,0),U,7) Y="@30";.07///^S X=$S(DGMTDT=DT:"NOW",1:DGMTDT);
"KRN",.402,1023,"DR",1,408.31,3)
2.05////^S X=$$GETSITE^DGMTU4(.DUZ);@30;S:DGMTYPT'=1 Y="@60";.05////^S X=$S('$D(DGREF):DGNWT,1:"@");I DGTYC'="D" S Y="@40";.11R~;@40;.12////^S X=DGTHA;I '$D(DGTHB) S Y="@50";.13////^S X=DGTHB;@50;
"KRN",.402,1023,"DR",1,408.31,4)
S:'$P(^DGMT(408.31,DA,0),U,16)&('$D(DGMTPAR("PREV"))) Y="@60";.16///^S X=$S($D(DGMTPAR("PREV")):1,1:"@");@60;S:DGMTDT'<DT Y="@998";.07R~;I $P(^DGMT(408.31,DA,0),U,3)=4 S Y="@998";.2////@;.21////@;.22////@;@998;S DGFIN="";@999;
"KRN",.402,1023,"ROU")
^DGMTXC
"KRN",.402,1023,"ROUOLD")
DGMTXC
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
433^3020603
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","DGMTA")
0^1^B31176145
"RTN","DGMTA",1,0)
DGMTA ;ALB/RMO/CAW/LD/SCG - Add a New Means Test ;3/12/02 2:00 pm
"RTN","DGMTA",2,0)
 ;;5.3;Registration;**33,45,137,166,177,182,290,344,332,433**;Aug 13, 1993
"RTN","DGMTA",3,0)
 ;
"RTN","DGMTA",4,0)
EN ;Entry point to add a new means test
"RTN","DGMTA",5,0)
 N DGMDOD S DGMDOD=""
"RTN","DGMTA",6,0)
 S DGADDF=1
"RTN","DGMTA",7,0)
 I $D(DGMTDFN)#2 D UNLOCK^DGMTUTL(DGMTDFN) K DGMTDFN
"RTN","DGMTA",8,0)
 S DIC="^DPT(",DIC(0)="AEMQ" W ! D ^DIC K DIC G Q:Y<0 S (DFN,DGMTDFN)=+Y
"RTN","DGMTA",9,0)
 I $P($G(^DPT(DFN,.35)),U)'="" S DGMDOD=$P(^DPT(DFN,.35),U)
"RTN","DGMTA",10,0)
 I $G(DGMDOD) W !,"Patient died on: ",$$FMTE^XLFDT(DGMDOD,"1D") Q
"RTN","DGMTA",11,0)
 ;
"RTN","DGMTA",12,0)
 ; check if income test in progress
"RTN","DGMTA",13,0)
 D CKUPLOAD^IVMCUPL(DFN)
"RTN","DGMTA",14,0)
 ;
"RTN","DGMTA",15,0)
 ; obtain lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTA",16,0)
 I $$LOCK^DGMTUTL(DFN)
"RTN","DGMTA",17,0)
 ;
"RTN","DGMTA",18,0)
 I DGMTYPT=1 N DGDOM1 D EN^DGMTR I 'DGREQF,'$G(DGDOM1) W !,*7,"A means test can only be added for patients who require one.",! K DGDOM1 G EN
"RTN","DGMTA",19,0)
 ;
"RTN","DGMTA",20,0)
 N FUTMT S FUTMT=$$FUT^DGMTU(DFN,"",DGMTYPT) I FUTMT D FTST G EN
"RTN","DGMTA",21,0)
 ;
"RTN","DGMTA",22,0)
 ;if a test was auto-completed, DGADDF gets set to 0
"RTN","DGMTA",23,0)
 I 'DGADDF W !!,*7,"A means test already exists and is in effect" G EN
"RTN","DGMTA",24,0)
 ;
"RTN","DGMTA",25,0)
 K:DGMTYPT=1 DGDOM1
"RTN","DGMTA",26,0)
 I DGMTYPT=2 D EN^DGMTCOR I 'DGMTCOR S I=$P($T(WHY+DGWRT),";",3,99) W !!,*7,"A copay exemption test can only be added for applicable veterans.",!,I G EN
"RTN","DGMTA",27,0)
 S DGLDT=$$LST^DGMTU(DFN,"",DGMTYPT),DGLD=$P(DGLDT,U,2),DGLDYR=$E(DGLD,1,3)_"1231"
"RTN","DGMTA",28,0)
 ;
"RTN","DGMTA",29,0)
DT S %DT("A")="DATE OF TEST: ",%DT="AEX",%DT(0)="-NOW",%DT("B")="NOW" W ! D ^%DT K %DT G Q:Y<0 S DGMTDT=Y
"RTN","DGMTA",30,0)
 I DGMTDT<$S(DGMTYPT=1:2860701,1:2921029) W !?3,*7,"The date of test cannot be before "_$S(DGMTYPT=1:"7/1/1986.",1:"10/29/1992.") G DT
"RTN","DGMTA",31,0)
 I DGLD,DGMTDT<DGLD W !?3,*7,"The date of test cannot be before the last date of test on " S Y=DGLD X ^DD("DD") W Y,"." G DT
"RTN","DGMTA",32,0)
 I DGLD S X1=DGMTDT,X2=DGLD D ^%DTC I X<365,DGMTDT'>DGLDYR D  G EN
"RTN","DGMTA",33,0)
 .W !?3,*7,"An annual date of test already exists on " S Y=DGLD X ^DD("DD") W Y,"."
"RTN","DGMTA",34,0)
 .S DGTTYP=$S(DGMTYPT=1:"Means ",1:"Copay Exemption ")
"RTN","DGMTA",35,0)
 .W !,$S($P($G(^DG(408.34,+$P($G(^DGMT(408.31,+DGLDT,0)),U,23),0)),U)="VAMC":"   Use the 'Edit an Existing "_DGTTYP_"Test' Option.",1:"   Use the 'View a Past Means Test' Option.")
"RTN","DGMTA",36,0)
 ;
"RTN","DGMTA",37,0)
 ;Means Test cannot be added for patient on a DOM ward on date of test
"RTN","DGMTA",38,0)
 I DGMTYPT=2 G PRINT
"RTN","DGMTA",39,0)
 N VAINDT,VADMVT,DGDOM,DGDOM1
"RTN","DGMTA",40,0)
 S VAINDT=DGMTDT
"RTN","DGMTA",41,0)
 D DOM1^DGMTR I $G(DGDOM1) D  K VAINDT,VADMVT,DGDOM,DGDOM1 G EN
"RTN","DGMTA",42,0)
 .W !,*7,"A Means Test cannot be added for patients on a DOM ward on date of test.",!
"RTN","DGMTA",43,0)
 K VAINDT,VADMVT,DGDOM,DGDOM1
"RTN","DGMTA",44,0)
 ;
"RTN","DGMTA",45,0)
 ;A warning message is displayed if last means test for patient is
"RTN","DGMTA",46,0)
 ;from a prior year and has a status of required.  The user is given
"RTN","DGMTA",47,0)
 ;the option to continue or stop adding a new means test.
"RTN","DGMTA",48,0)
 N %
"RTN","DGMTA",49,0)
 I DGLD,DGMTDT>DGLDYR,$P(DGLDT,"^",4)="R" D  Q:%=-1  I %=2 K % G EN
"RTN","DGMTA",50,0)
 .W !?3,*7,"WARNING - last means test on " S Y=DGLD X ^DD("DD") W Y," has a status of required."
"RTN","DGMTA",51,0)
DT2 .W !?3,"Do you still want to continue adding new test"
"RTN","DGMTA",52,0)
 .S %=2 D YN^DICN
"RTN","DGMTA",53,0)
 .I %=0 W !?3,"Answer 'Y'es to continue adding new test." G DT2
"RTN","DGMTA",54,0)
 .Q 
"RTN","DGMTA",55,0)
 K %
"RTN","DGMTA",56,0)
 ;
"RTN","DGMTA",57,0)
PRINT I "^P^A^C^"[(U_$P(DGLDT,U,4)_U) S %=1 W !,"Do you wish to print the prior means test" D YN^DICN G:%=-1 Q I %Y["?" W !!,"This will print the prior means test information.",! G PRINT
"RTN","DGMTA",58,0)
 I $G(%)=1 S DGX=DGMTDT,DGMTDT=DGLD,DGMTI=+DGLDT,DGOPT="" D DEV^DGMTP,CLOSE^DGUTQ S DGMTDT=DGX K DGX
"RTN","DGMTA",59,0)
 D ADD G EN:DGMTI<0
"RTN","DGMTA",60,0)
 S DGMTACT="ADD",DGMTROU="EN^DGMTA" G EN^DGMTSC
"RTN","DGMTA",61,0)
 ;
"RTN","DGMTA",62,0)
Q K DA,DFN,DGADDF,DGBL,DGFL,DGFLD,DGIRO,DGLD,DGLDT,DGLDYR,DGMTACT,DGMTCOR,DGMTDT,DGMTI,DGMTROU,DGREQF,DGTTYP,DGMTYPT,DGVI,DGVO,X,X1,X2,Y
"RTN","DGMTA",63,0)
 ;
"RTN","DGMTA",64,0)
 ; release lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTA",65,0)
 I $D(DGMTDFN)#2 D UNLOCK^DGMTUTL(DGMTDFN) K DGMTDFN
"RTN","DGMTA",66,0)
 Q
"RTN","DGMTA",67,0)
 ;
"RTN","DGMTA",68,0)
ADD ;Add means test
"RTN","DGMTA",69,0)
 ; Input  -- DFN     Patient IEN
"RTN","DGMTA",70,0)
 ;           DGMTDT  Date
"RTN","DGMTA",71,0)
 ;           DGMTYPT Type of Test 1=MT 2=COPAY 4=LTC
"RTN","DGMTA",72,0)
 ; Output -- DGMTI   Annual Means/Copay/LTC Test IEN
"RTN","DGMTA",73,0)
 N DA,DD,DIC,DIK,DINUM,DLAYGO,DO,DS,X,D0,DGSITE
"RTN","DGMTA",74,0)
 ;
"RTN","DGMTA",75,0)
 ; obtain lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTA",76,0)
 I $$LOCK^DGMTUTL(DFN) E  Q
"RTN","DGMTA",77,0)
 ;
"RTN","DGMTA",78,0)
 S DGSITE=$$GETSITE^DGMTU4(.DUZ)
"RTN","DGMTA",79,0)
 S X=DGMTDT,(DIC,DIK)="^DGMT(408.31,",DIC(0)="L",DLAYGO=408.31
"RTN","DGMTA",80,0)
 S DIC("DR")=".02////"_DFN_";.019////"_DGMTYPT_";.23////1"
"RTN","DGMTA",81,0)
 S DIC("DR")=DIC("DR")_";2////"_(DGMTYPT'=4)_";2.05////"_DGSITE
"RTN","DGMTA",82,0)
 K DD,D0
"RTN","DGMTA",83,0)
 D FILE^DICN S DGMTI=+Y
"RTN","DGMTA",84,0)
 ;
"RTN","DGMTA",85,0)
 ; release lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTA",86,0)
 D UNLOCK^DGMTUTL(DFN)
"RTN","DGMTA",87,0)
 ;
"RTN","DGMTA",88,0)
ADDQ Q
"RTN","DGMTA",89,0)
 ;
"RTN","DGMTA",90,0)
FTST ; Build message for future tests that are added to the system, but
"RTN","DGMTA",91,0)
 ; were not performed by the VAMC trying to add a new MT.
"RTN","DGMTA",92,0)
 N SITE,DGMTYPT,DGTTYP,SRC,SCT
"RTN","DGMTA",93,0)
 S SCT=$P(^DGMT(408.31,+FUTMT,2),U,5),SITE=$$INST^DGENU()
"RTN","DGMTA",94,0)
 S DGMTYPT=$P(^DGMT(408.31,+FUTMT,0),U,19)
"RTN","DGMTA",95,0)
 S DGTTYP=$S(DGMTYPT=1:"Means ",1:"Copay Exemption ")
"RTN","DGMTA",96,0)
 W !?3,*7,"A future test already exists on "
"RTN","DGMTA",97,0)
 S Y=$P(FUTMT,U,2) X ^DD("DD") W Y,"."
"RTN","DGMTA",98,0)
 ; This site performed the MT
"RTN","DGMTA",99,0)
 I SITE=SCT D
"RTN","DGMTA",100,0)
 .W !?3,"Use the 'Edit an Existing "_DGTTYP_"Test' Option."
"RTN","DGMTA",101,0)
 ;
"RTN","DGMTA",102,0)
 ; The MT was added by another VAMC
"RTN","DGMTA",103,0)
 I SITE'=SCT D
"RTN","DGMTA",104,0)
 .S SRC=$P(FUTMT,U,5)
"RTN","DGMTA",105,0)
 .I SCT W !?3,"The "_DGTTYP_"Test was conducted at Site: ",SCT
"RTN","DGMTA",106,0)
 .W !?3,"Please contact "
"RTN","DGMTA",107,0)
 .W $S($D(^DIC(4,+SCT,0)):$P(^DIC(4,+SCT,0),U),SRC=2:"IVM",SRC=3:"the HEC",1:"the site")
"RTN","DGMTA",108,0)
 .W ",",!?3,"if it is necessary to edit the test."
"RTN","DGMTA",109,0)
 Q
"RTN","DGMTA",110,0)
WHY ;Why Copay Test cannot be added
"RTN","DGMTA",111,0)
 ;;Patient is not a veteran.
"RTN","DGMTA",112,0)
 ;;Patient does not have a Primary Eligibility Code.
"RTN","DGMTA",113,0)
 ;;Patient has a Primary or Other Eligibility Code of SC>50%, AA, HB or NSC,Pension
"RTN","DGMTA",114,0)
 ;;Means Test options must be used instead of Copay options.
"RTN","DGMTA",115,0)
 ;;Patient is receiving Aid and Attendance, automatically exempted.
"RTN","DGMTA",116,0)
 ;;Patient is receiving Housebound Benefits, automatically exempted.
"RTN","DGMTA",117,0)
 ;;Patient is receiving a VA Pension, automatically exempted.
"RTN","DGMTA",118,0)
 ;;Patient is in a DOM ward, automatically exempted.
"RTN","DGMTA",119,0)
 ;;Patient is an inpatient, automatically exempted.
"RTN","DGMTAUD")
0^2^B10506130
"RTN","DGMTAUD",1,0)
DGMTAUD ;ALB/TT,RMO,CAW,LD,BRM - AUDIT CHANGES TO MEANS TEST ; 1/2/02 11:39am
"RTN","DGMTAUD",2,0)
 ;;5.3;Registration;**33,45,182,433**;Aug 13, 1993
"RTN","DGMTAUD",3,0)
 ;
"RTN","DGMTAUD",4,0)
EN ;INPUT:  DFN     - Patient IEN
"RTN","DGMTAUD",5,0)
 ;        DGMTACT - Type of Action from Means Test
"RTN","DGMTAUD",6,0)
 ;        DGMTI   - Means Test IEN
"RTN","DGMTAUD",7,0)
 ;        DGMTINF - Means Test Interactive/Non-interactive flag
"RTN","DGMTAUD",8,0)
 ;        DGMTP   - Prior zero node
"RTN","DGMTAUD",9,0)
 ;        DGMTA   - After zero node
"RTN","DGMTAUD",10,0)
 ;        DGMTYPT - Type of Test 1=MT, 2=COPAY, 4=LTC
"RTN","DGMTAUD",11,0)
 ;        DGDEP   - (Optional) Dependent Info
"RTN","DGMTAUD",12,0)
 ;        DGDEPI  - (Optional) Dependent IEN
"RTN","DGMTAUD",13,0)
 ;OUTPUT:  None
"RTN","DGMTAUD",14,0)
 I DGMTP=DGMTA Q
"RTN","DGMTAUD",15,0)
SETD ; Update audit file
"RTN","DGMTAUD",16,0)
 ;
"RTN","DGMTAUD",17,0)
 ;DGMTFLG - Flag for status or deductible agreement change
"RTN","DGMTAUD",18,0)
 ;          0=no change,1=status change,2=agree to pay deductible change
"RTN","DGMTAUD",19,0)
 ;
"RTN","DGMTAUD",20,0)
 ;DGMTFLG1 - source flag  0=no change, 1=source change
"RTN","DGMTAUD",21,0)
 ;DGMTFLG2 - Dependent Flag 0=no change, 1=dependent info change
"RTN","DGMTAUD",22,0)
 ;DGMTATYP - Means Test Change Type
"RTN","DGMTAUD",23,0)
 ;           1-Add
"RTN","DGMTAUD",24,0)
 ;           2-Category change
"RTN","DGMTAUD",25,0)
 ;           3-Agree to pay deductible
"RTN","DGMTAUD",26,0)
 ;           4-Adjudicate
"RTN","DGMTAUD",27,0)
 ;           5-Edit
"RTN","DGMTAUD",28,0)
 ;           7-Status change
"RTN","DGMTAUD",29,0)
 ;          13-Source of test change
"RTN","DGMTAUD",30,0)
 ;          14-Delete primary means test that was previously uploaded
"RTN","DGMTAUD",31,0)
 ;          15-Deleted Dependent
"RTN","DGMTAUD",32,0)
 ;(IVM)     16-Name Change
"RTN","DGMTAUD",33,0)
 ;(IVM)     17-Date of Birth Change
"RTN","DGMTAUD",34,0)
 ;(IVM)     18-SSN Change
"RTN","DGMTAUD",35,0)
 ;(IVM)     19-Sex Change 
"RTN","DGMTAUD",36,0)
 ;(IVM)     20-Relationship Change
"RTN","DGMTAUD",37,0)
 ;
"RTN","DGMTAUD",38,0)
 ;DGMTACT - type of change
"RTN","DGMTAUD",39,0)
 ;          'DEL' (delete): changes related to that means test
"RTN","DGMTAUD",40,0)
 ;                are deleted from file 408.41.
"RTN","DGMTAUD",41,0)
 ;          'COM' (Complete) a means test then type is edited
"RTN","DGMTAUD",42,0)
 ;          'UPL' (Upload), this is a means test uploaded from an 
"RTN","DGMTAUD",43,0)
 ;                external source such as IVM and is a Source of
"RTN","DGMTAUD",44,0)
 ;                Test change.
"RTN","DGMTAUD",45,0)
 ;          'EDT' is Edit, 
"RTN","DGMTAUD",46,0)
 ;          'ADD' is Add, 
"RTN","DGMTAUD",47,0)
 ;          'ADJ' is Adjudicate,
"RTN","DGMTAUD",48,0)
 ;          'CAT' is Category change,
"RTN","DGMTAUD",49,0)
 ;          'STA' is Status change,
"RTN","DGMTAUD",50,0)
 ;          'DUP' is delete a primary means test, 
"RTN","DGMTAUD",51,0)
 ;          'DDP' is deleted dependent
"RTN","DGMTAUD",52,0)
 ;          'NAM' is name change (dependent only)
"RTN","DGMTAUD",53,0)
 ;          'DOB' is Date of Birth change (dependent only)
"RTN","DGMTAUD",54,0)
 ;          'SSN' is Social Security Number change (dependent only)
"RTN","DGMTAUD",55,0)
 ;          'SEX' is Sex change (dependent only)
"RTN","DGMTAUD",56,0)
 ;          'REL' is Relationship change (dependent only)
"RTN","DGMTAUD",57,0)
 ;
"RTN","DGMTAUD",58,0)
SET S DGMTATYP="" I '$D(DGMTYPT) S DGMTYPT=$P(DGMTA,U,19)
"RTN","DGMTAUD",59,0)
 I DGMTACT="DEL" G DEL
"RTN","DGMTAUD",60,0)
 I DGMTACT="STA" S DGMTATYP=$P("7^10^^10","^",DGMTYPT)
"RTN","DGMTAUD",61,0)
 I DGMTACT="EDT"!(DGMTACT="COM") S DGMTATYP=$P("5^9^^9","^",DGMTYPT)
"RTN","DGMTAUD",62,0)
 I DGMTACT="ADD" S DGMTATYP=$P("1^8^^8","^",DGMTYPT)
"RTN","DGMTAUD",63,0)
 I DGMTACT="CAT" S DGMTATYP=$P("2^11^^11","^",DGMTYPT)
"RTN","DGMTAUD",64,0)
 I DGMTACT="ADJ" S DGMTATYP=$P("4^12^^12","^",DGMTYPT)
"RTN","DGMTAUD",65,0)
 I DGMTACT="UPL" S DGMTATYP=$P("13^^^","^",DGMTYPT)
"RTN","DGMTAUD",66,0)
 I DGMTACT="DUP" S DGMTATYP=$P("14^^^","^",DGMTYPT)
"RTN","DGMTAUD",67,0)
 I DGMTACT="DDP" S DGMTATYP=15
"RTN","DGMTAUD",68,0)
 I DGMTACT="NAM" S DGMTATYP=16
"RTN","DGMTAUD",69,0)
 I DGMTACT="DOB" S DGMTATYP=17
"RTN","DGMTAUD",70,0)
 I DGMTACT="SSN" S DGMTATYP=18
"RTN","DGMTAUD",71,0)
 I DGMTACT="SEX" S DGMTATYP=19
"RTN","DGMTAUD",72,0)
 I DGMTACT="REL" S DGMTATYP=20
"RTN","DGMTAUD",73,0)
 S (DGMTFLG,DGMTFLG1,DGMTFLG2)=0
"RTN","DGMTAUD",74,0)
 I ($$SR^DGMTAUD1(DGMTP)'=$$SR^DGMTAUD1(DGMTA)) S DGMTFLG1=1,DGMTOSRC=$$SR^DGMTAUD1(DGMTP),DGMTNSRC=$$SR^DGMTAUD1(DGMTA)
"RTN","DGMTAUD",75,0)
 I $P(DGMTA,U,3)'=$P(DGMTP,U,3) S DGMTFLG=1,DGMTSOLD=$$S^DGMTAUD1($P(DGMTP,U,3)),DGMTSNEW=$$S^DGMTAUD1($P(DGMTA,U,3))
"RTN","DGMTAUD",76,0)
 I DGMTATYP=15 S DGMTSOLD=$P(DGDEP,U),DGMTSNEW="",DGMTFLG=1
"RTN","DGMTAUD",77,0)
 I DGMTATYP>15 S (DGMTFLG,DGMTFLG2)=1
"RTN","DGMTAUD",78,0)
ED ;File and edit
"RTN","DGMTAUD",79,0)
 D NOW^%DTC S (DIE,DIC)="^DGMT(408.41,",DIC(0)="L",X=% K DD,DO D FILE^DICN G:Y'>0 Q S (DA,DGMTAUD)=+Y
"RTN","DGMTAUD",80,0)
LOCK L +^DGMT(408.41,DGMTAUD):1 G:'$T LOCK
"RTN","DGMTAUD",81,0)
 S DR="[DGMT UPDATE AUDIT]" D ^DIE L -^DGMT(408.41,DGMTAUD)
"RTN","DGMTAUD",82,0)
Q K DA,DE,DGDASH,DGMTAI,DGMTAIZ,DGMTATYP,DGMTAUD,DGMTD,DGMTFLG,DGMTFLG1,DGMTSNEW,DGMTSOLD,DGMTOSRC,DGMTNSRC,DGNAM,DIC,DIE,DQ,DR,DTOUT,DUOUT,X,Y,% Q
"RTN","DGMTAUD",83,0)
DEL ;Delete audits associated to MT
"RTN","DGMTAUD",84,0)
 S DIK="^DGMT(408.41,"
"RTN","DGMTAUD",85,0)
 S DA=0 F  S DA=$O(^DGMT(408.41,"AM",DGMTYPT,DFN,DGMTI,DA)) Q:'DA  D ^DIK
"RTN","DGMTAUD",86,0)
 K DA,DIK Q
"RTN","DGMTAUD",87,0)
 ;
"RTN","DGMTAUD",88,0)
DIS ;Display changes pertaining to a means test for a vet
"RTN","DGMTAUD",89,0)
 D DIS^DGMTAUD2 Q
"RTN","DGMTAUD1")
0^3^B4613757
"RTN","DGMTAUD1",1,0)
DGMTAUD1 ;ALB/CAW,LD,BRM - Audit Changes to Means Tests - Con't ; 12/20/01 9:07am
"RTN","DGMTAUD1",2,0)
 ;;5.3;Registration;**33,166,182,254,300,433**;Aug 13, 1993
"RTN","DGMTAUD1",3,0)
 ;
"RTN","DGMTAUD1",4,0)
D(I) ;Date function
"RTN","DGMTAUD1",5,0)
 ;INPUT = Internal value of date
"RTN","DGMTAUD1",6,0)
 ;OUTPUT= External value of date
"RTN","DGMTAUD1",7,0)
 N DGX,Y
"RTN","DGMTAUD1",8,0)
 S Y=I,DGX=$$FMTE^XLFDT(Y,"5F"),DGX=$TR(DGX," ","0")
"RTN","DGMTAUD1",9,0)
 Q DGX
"RTN","DGMTAUD1",10,0)
U(I) ;User function
"RTN","DGMTAUD1",11,0)
 ;INPUT = Internal value (ptr) to NEW PERSON file
"RTN","DGMTAUD1",12,0)
 ;OUTPUT= External value of .01 field (person name)
"RTN","DGMTAUD1",13,0)
 N DGX
"RTN","DGMTAUD1",14,0)
 S DGX=$P($G(^VA(200,+I,0)),U)
"RTN","DGMTAUD1",15,0)
 Q DGX
"RTN","DGMTAUD1",16,0)
C(I) ;Change type function
"RTN","DGMTAUD1",17,0)
 ;INPUT = Internal value (ptr) to MEANS TEST CHANGES TYPE file
"RTN","DGMTAUD1",18,0)
 ;OUTPUT= External value of .01 field (change type name)
"RTN","DGMTAUD1",19,0)
 N DGX
"RTN","DGMTAUD1",20,0)
 S DGX=$P($G(^DG(408.42,+I,0)),U)
"RTN","DGMTAUD1",21,0)
 Q DGX
"RTN","DGMTAUD1",22,0)
SR(I,DGMTI) ;Get source of test
"RTN","DGMTAUD1",23,0)
 ;Input:
"RTN","DGMTAUD1",24,0)
 ; I  = zeroth node of test from file #408.31
"RTN","DGMTAUD1",25,0)
 ; DGMTI = Annual Means Test file (#408.31) IEN (OPTIONAL)
"RTN","DGMTAUD1",26,0)
 ;
"RTN","DGMTAUD1",27,0)
 ; Output:
"RTN","DGMTAUD1",28,0)
 ;  DGX = external value of .01 field (name of source) OR
"RTN","DGMTAUD1",29,0)
 ;        Station name
"RTN","DGMTAUD1",30,0)
 ;
"RTN","DGMTAUD1",31,0)
 N DGX
"RTN","DGMTAUD1",32,0)
 S DGX=$P($G(^DG(408.34,+$P(I,"^",23),0)),U)
"RTN","DGMTAUD1",33,0)
 ; check if the source is 'OTHER FACILITY'. If it is derive source
"RTN","DGMTAUD1",34,0)
 ; from 'SITE CONDUCTING TEST' field (#2.05) in the Annual Means Test
"RTN","DGMTAUD1",35,0)
 ; file (#408.31).
"RTN","DGMTAUD1",36,0)
 I DGX="OTHER FACILITY",$D(DGMTI) D
"RTN","DGMTAUD1",37,0)
 . N STA
"RTN","DGMTAUD1",38,0)
 . ; exclude suffix to get Station # from 'SITE CONDUCTING TEST' field
"RTN","DGMTAUD1",39,0)
 . S DGX(1)=$E($$GET1^DIQ(408.31,DGMTI,2.05),1,3)
"RTN","DGMTAUD1",40,0)
 . ; get Institution NAME using STATION NUMBER field (#99) in Institution
"RTN","DGMTAUD1",41,0)
 . ; file (#4)
"RTN","DGMTAUD1",42,0)
 . D FIND^DIC(4,,99,,.DGX,1,"D",,,"STA")
"RTN","DGMTAUD1",43,0)
 . S DGX=$G(STA("DILIST",1,1),DGX)
"RTN","DGMTAUD1",44,0)
 Q DGX
"RTN","DGMTAUD1",45,0)
S(I) ;MT status
"RTN","DGMTAUD1",46,0)
 ;INPUT - Internal val of status from 408.31 (ptr to 408.32)
"RTN","DGMTAUD1",47,0)
 ;OUTPUT - External val (.01 field)
"RTN","DGMTAUD1",48,0)
 N DGX
"RTN","DGMTAUD1",49,0)
 S DGX=$P($G(^DG(408.32,+I,0)),U)
"RTN","DGMTAUD1",50,0)
 Q DGX
"RTN","DGMTAUD1",51,0)
A(I) ;Agree to pay deduct
"RTN","DGMTAUD1",52,0)
 ;INPUT - Internal val of agree to pay deduc. fld from file 408.31
"RTN","DGMTAUD1",53,0)
 ;OUTPUT - External val of set
"RTN","DGMTAUD1",54,0)
 N DGX
"RTN","DGMTAUD1",55,0)
 S DGX=$P($G(^DD(408.31,.11,0)),U,3),DGX=$P($P(DGX,I_":",2),";",1)
"RTN","DGMTAUD1",56,0)
 Q DGX
"RTN","DGMTAUD1",57,0)
 ;
"RTN","DGMTAUD1",58,0)
HDR ;Header
"RTN","DGMTAUD1",59,0)
 W @IOF,!,"PATIENT: ",$E(DGNAM,1,38),?40,$P("MEANS^COPAY^^LTC EXEMPTION","^",DGMTYPT)_" TEST DATE: ",$$D^DGMTAUD1(DGMTD),!
"RTN","DGMTAUD1",60,0)
 W ?40,$$SR^DGMTAUD1($G(^DGMT(408.31,DGMTI,0)))_" "_$P("MEANS^COPAY^^LTC EXEMPTION","^",DGMTYPT)_" TEST",!
"RTN","DGMTAUD1",61,0)
 W ?33,"CHANGES",!!
"RTN","DGMTAUD1",62,0)
 W ?2,"Date",?23,"Type of Change",?57,"User",!,DGDASH,!
"RTN","DGMTAUD1",63,0)
 Q
"RTN","DGMTAUD2")
0^4^B10704103
"RTN","DGMTAUD2",1,0)
DGMTAUD2 ;ALB/CAW,BRM - Means test audit delete ; 12/20/01 9:22am
"RTN","DGMTAUD2",2,0)
 ;;5.3;Registration;**45,166,182,300,433**;Aug 13, 1993
"RTN","DGMTAUD2",3,0)
 ;
"RTN","DGMTAUD2",4,0)
DIS ;Display changes pertaining to a means test for a vet
"RTN","DGMTAUD2",5,0)
 ;
"RTN","DGMTAUD2",6,0)
LKP ;Vet lookup
"RTN","DGMTAUD2",7,0)
 S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G:$D(DTOUT)!($D(DUOUT))!(+Y<0) KIL
"RTN","DGMTAUD2",8,0)
 I '$O(^DGMT(408.31,"AD",DGMTYPT,+Y,0)) W !?5,$P(Y(0),U)," has no "_$P("means^copay^^LTC exemption","^",DGMTYPT)_" test on file." K DIC,Y G LKP
"RTN","DGMTAUD2",9,0)
 S DFN=+Y,DGNAM=$P(Y(0),U) K DIC,Y
"RTN","DGMTAUD2",10,0)
 ;
"RTN","DGMTAUD2",11,0)
LKM ;Means test lookup
"RTN","DGMTAUD2",12,0)
 S DIC("W")="W ?27,$P(""MEANS^COPAY^^LTC EXEMPTION"",""^"",DGMTYPT)_"" TEST "",?42,$S($G(^DGMT(408.31,+Y,""PRIM""))=1:"" **PRIMARY** "",1:""""),?60,$$SR^DGMTAUD1($G(^DGMT(408.31,+Y,0)),+Y)",DIC("S")="I $P(^(0),U,2)=DFN&($P(^(0),U,19)=DGMTYPT)"
"RTN","DGMTAUD2",13,0)
 S DIC="^DGMT(408.31,",DIC(0)="EQZ",X=DFN,D="C" D IX^DIC K DIC I X["?" W !,"Enter appropriate corresponding number." G LKM
"RTN","DGMTAUD2",14,0)
 I $D(DTOUT)!($D(DUOUT)) D KIL Q
"RTN","DGMTAUD2",15,0)
 I +Y<0 G LKP
"RTN","DGMTAUD2",16,0)
 S DGMTI=+Y,DGMTD=$P(Y(0),U) K DIC,Y
"RTN","DGMTAUD2",17,0)
 S DGDASH="",$P(DGDASH,"=",79)="" D HDR^DGMTAUD1 I '$O(^DGMT(408.41,"AM",DGMTYPT,DFN,DGMTI,0)) W !?5,"There are no changes to the "_$P("means^copay^^LTC exemption","^",DGMTYPT)_" test.",! G KIL
"RTN","DGMTAUD2",18,0)
 ;
"RTN","DGMTAUD2",19,0)
 ;Loop thru xref;write data
"RTN","DGMTAUD2",20,0)
 S DGMTAI=0 F  S DGMTAI=$O(^DGMT(408.41,"AM",DGMTYPT,DFN,DGMTI,DGMTAI)) Q:'DGMTAI  S DGMTAIZ=$G(^DGMT(408.41,DGMTAI,0)) I DGMTAIZ]"" D:IOSL'>($Y+4) CR G:$D(DTOUT)!($D(DUOUT)) KIL D
"RTN","DGMTAUD2",21,0)
 .W !?2,$$D^DGMTAUD1($P(DGMTAIZ,U)),?23,$$C^DGMTAUD1($P(DGMTAIZ,U,2)),?57,$E($$U^DGMTAUD1($P(DGMTAIZ,U,7)),1,20)
"RTN","DGMTAUD2",22,0)
 .I $P(DGMTAIZ,U,5,6)'="^" W !?23,"OLD STATUS VALUE:  ",$S($P(DGMTAIZ,U,5)']"":"<Nothing>",1:$P(DGMTAIZ,U,5)),!?23,"NEW STATUS VALUE:  ",$S($P(DGMTAIZ,U,6)']"":"<Nothing>",1:$P(DGMTAIZ,U,6))
"RTN","DGMTAUD2",23,0)
 .I $P(DGMTAIZ,U,8,9)'="^" W !?23,"OLD SOURCE OF TEST:  ",$S($P(DGMTAIZ,U,8)']"":"<Nothing>",1:$P(DGMTAIZ,U,8)),!?23,"NEW SOURCE OF TEST:  ",$S($P(DGMTAIZ,U,9)']"":"<Nothing>",1:$P(DGMTAIZ,U,9))
"RTN","DGMTAUD2",24,0)
 G LKP
"RTN","DGMTAUD2",25,0)
 ;
"RTN","DGMTAUD2",26,0)
KIL K D,DGDASH,DGMTAI,DGMTAIZ,DGMTD,DGMTI,DGMTYPT,DGNAM,DFN,DIC,DTOUT,DUOUT,X,Y
"RTN","DGMTAUD2",27,0)
 Q
"RTN","DGMTAUD2",28,0)
CR I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR W:'Y @IOF D:Y HDR^DGMTAUD1
"RTN","DGMTAUD2",29,0)
 Q
"RTN","DGMTDEL")
0^11^B24882422
"RTN","DGMTDEL",1,0)
DGMTDEL ;ALB/TET,RMO,CAW,LD,SCG - DELETE MEANS TEST for a Patient ;5/11/92  09:40
"RTN","DGMTDEL",2,0)
 ;;5.3;Registration;**33,45,182,344,407,433**;Aug 13, 1993
"RTN","DGMTDEL",3,0)
 ;
"RTN","DGMTDEL",4,0)
EN ;Entry point to delete means test
"RTN","DGMTDEL",5,0)
 I '$D(^XUSEC("DG MTDELETE",+DUZ)) W !!,"ACCESS TO THIS OPTION IS RESTRICTED!!",*7 G EXIT
"RTN","DGMTDEL",6,0)
 F I=1:1 S J=$P($T(TXT+I),";;",2) Q:J="END"  W !,J
"RTN","DGMTDEL",7,0)
 ; - if type of test = means test, diplay MT text
"RTN","DGMTDEL",8,0)
 I DGMTYPT=1 F I=1:1 S J=$P($T(MTTXT+I),";;",2) Q:J="END"  W !,J
"RTN","DGMTDEL",9,0)
 ; - if type of test = copay test, display CT text
"RTN","DGMTDEL",10,0)
 I DGMTYPT=2 F I=1:1 S J=$P($T(CTTXT+I),";;",2) Q:J="END"  W !,J
"RTN","DGMTDEL",11,0)
 ; - if type of test = LTC copay exemption test, display LTC text
"RTN","DGMTDEL",12,0)
 I DGMTYPT=4 F I=1:1 S J=$P($T(LTCTXT+I),";;",2) Q:J="END"  W !,J
"RTN","DGMTDEL",13,0)
 ;
"RTN","DGMTDEL",14,0)
LKP ;Patient lookup
"RTN","DGMTDEL",15,0)
 N DGMDOD,DGFLG
"RTN","DGMTDEL",16,0)
 D HOME^%ZIS S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G:$D(DTOUT)!($D(DUOUT))!(+Y<0) EXIT
"RTN","DGMTDEL",17,0)
 I '$O(^DGMT(408.31,"AD",DGMTYPT,+Y,0)) W !?5,$P(Y(0),U)," has no "_$S(DGMTYPT=1:"means",DGMTYPT=2:"copay",DGMTYPT=4:"LTC copay exemption",1:"")_" tests on file." K DIC,Y G LKP
"RTN","DGMTDEL",18,0)
 S DFN=+Y,DGNAM=$P(Y(0),U),DG0=Y(0) K DIC,Y
"RTN","DGMTDEL",19,0)
 I $P($G(^DPT(DFN,.35)),U)'="" S DGMDOD=$P(^DPT(DFN,.35),U)
"RTN","DGMTDEL",20,0)
 I $G(DGMDOD) W !,*7,"Patient died on: ",$$FMTE^XLFDT(DGMDOD,"1D") G EXIT
"RTN","DGMTDEL",21,0)
 W @IOF,"Name: ",$P(DGNAM,U),?40,"DOB: ",$$DATE^DGMTDEL1($P(DG0,U,3)),?60,"PT ID: ",$$PID^DGMTDEL1(DFN),!!!
"RTN","DGMTDEL",22,0)
 D DIS^DGMTU(DFN) W !!
"RTN","DGMTDEL",23,0)
VET ;determine if patient is a vet; set dgnvet flag (1=nonvet,0=vet)
"RTN","DGMTDEL",24,0)
 S DGNVET=0 ;,DGNVET=+$P($G(^DPT(DFN,.36)),U),DGNVET=$P($G(^DIC(8,DGNVET,0)),U,5),DGNVET=$S(DGNVET="N":1,1:0)
"RTN","DGMTDEL",25,0)
 S DGNVET=$S($P($G(^DIC(8,+$P($G(^DPT(DFN,.36)),U),0)),U,5)="N":1,1:0)
"RTN","DGMTDEL",26,0)
 I 'DGNVET S:$G(^DPT(DFN,"VET"))="N" DGNVET=1
"RTN","DGMTDEL",27,0)
 G:'DGNVET LKM ;Q
"RTN","DGMTDEL",28,0)
 S DIR("A")="Do you wish to delete all "_$S(DGMTYPT=1:"means",DGMTYPT=2:"copay",DGMTYPT=4:"LTC copay exemption",1:"")_" tests on file for this patient",DIR(0)="Y",DIR("B")="YES" D ^DIR K DIR G LKP:$D(DIRUT),LOOP^DGMTDEL1:Y
"RTN","DGMTDEL",29,0)
LKM ;Means test lookup
"RTN","DGMTDEL",30,0)
 S DIC("W")="D ID^DGMTDEL1",DIC("S")="I $P(^(0),U,2)=DFN,$P(^(0),U,19)=DGMTYPT"
"RTN","DGMTDEL",31,0)
 W ! S DIC="^DGMT(408.31,",DIC(0)="EQZ",X=DFN,D="C" D IX^DIC K DIC I X["?" W !,"Enter appropriate corresponding number." G LKM
"RTN","DGMTDEL",32,0)
 G LKP:$D(DTOUT)!($D(DUOUT))!(+Y<0)
"RTN","DGMTDEL",33,0)
 I DGMTYPT=1!(DGMTYPT=2) D  G:$G(DGFLG) LKP
"RTN","DGMTDEL",34,0)
 .I ('$P($G(^DG(408.34,+$P(Y(0),"^",23),0)),U,2))!('$P($G(^DGMT(408.31,+Y,"PRIM")),"^")) W !?5,*7,"This "_$S(DGMTYPT=1:"means",DGMTYPT=2:"copay")_" test is uneditable and cannot be deleted." S DGFLG=1
"RTN","DGMTDEL",35,0)
 I DGMTYPT=4 D  G:$G(DGFLG) LKP
"RTN","DGMTDEL",36,0)
 . I '$P($G(^DG(408.34,+$P(Y(0),"^",23),0)),U,2) W !,?5,*7,"This LTC Copay Exemption Test is uneditable and cannot be deleted." S DGFLG=1
"RTN","DGMTDEL",37,0)
 S DGMTI=+Y,DGMT0=Y(0) D VAR^DGMTDEL1 K DIC,Y
"RTN","DGMTDEL",38,0)
 S DIR("A")="Are you sure you want to delete the "_$$DATE^DGMTDEL1(DGMTD)_" test date",DIR(0)="Y",DIR("B")="NO"
"RTN","DGMTDEL",39,0)
 D ^DIR K DIR G LKP:$D(DIRUT)!('Y) D DEL^DGMTDEL1 W !,$S(DGMTYPT=1:"Means",DGMTYPT=2:"Copay",DGMTYPT=4:"LTC copay exemption",1:"")_" test deleted."
"RTN","DGMTDEL",40,0)
 S DGMT=$$LST^DGMTU(DFN,"",DGMTYPT) I DGMTYPT=1,DGMT]"",$P(DGMT,U,2)<DGMTD D
"RTN","DGMTDEL",41,0)
 .Q:$P(DGMT,U,4)=$P(DGCAT,U,2)
"RTN","DGMTDEL",42,0)
 .W !,"Previous Means Test Category of '",$P(DGCAT,U),"'",!,"  has been changed to '",$P(DGMT,U,3),"'"
"RTN","DGMTDEL",43,0)
 .S DGMTACT="CAT",DGMTP=DGP,DGMTI=+DGMT D AFTER^DGMTEVT
"RTN","DGMTDEL",44,0)
 .S DGMTINF=0 D EN^DGMTEVT
"RTN","DGMTDEL",45,0)
EXIT K DFN,DGCAT,DGCT,DGI,DGN,DGNAM,DGNVET,DGP,DG0,DGMT,DGMTA,DGMTACT,DGMTD,DGMTI,DGMTINF,DGMTSRC,DGMTY,DGMT0,DGMTYPT,DGMTATYP
"RTN","DGMTDEL",46,0)
 K D,DA,DIC,DIE,DIK,DIR,DIRUT,DTOUT,DUOUT,DGMTA,DGMTP,I,J,VA,VADAT,VADATE,X,Y
"RTN","DGMTDEL",47,0)
 Q
"RTN","DGMTDEL",48,0)
 ;
"RTN","DGMTDEL",49,0)
TXT ;informational text displayed to user
"RTN","DGMTDEL",50,0)
 ;;
"RTN","DGMTDEL",51,0)
 ;;This option is used to delete financial test data which may have been
"RTN","DGMTDEL",52,0)
 ;;inadvertantly entered.  Under normal circumstances only individual
"RTN","DGMTDEL",53,0)
 ;;dates of test may be deleted using this option.  The exception is
"RTN","DGMTDEL",54,0)
 ;;non-veterans.  All financial tests found for a non-veteran may be
"RTN","DGMTDEL",55,0)
 ;;deleted.
"RTN","DGMTDEL",56,0)
 ;;END
"RTN","DGMTDEL",57,0)
MTTXT ;informational text displayed to user if type of test = means test
"RTN","DGMTDEL",58,0)
 ;;
"RTN","DGMTDEL",59,0)
 ;;A means test may not be deleted under the following conditions:
"RTN","DGMTDEL",60,0)
 ;;  1) The means test is an uploaded test from the IVM Center.
"RTN","DGMTDEL",61,0)
 ;;  2) The means test is a test that was done at the VAMC but has
"RTN","DGMTDEL",62,0)
 ;;     an associated uploaded means test from the IVM Center.
"RTN","DGMTDEL",63,0)
 ;;END
"RTN","DGMTDEL",64,0)
CTTXT ;informational text displayed to user if type of test = copay test
"RTN","DGMTDEL",65,0)
 ;;
"RTN","DGMTDEL",66,0)
 ;;A copay test may not be deleted under the following conditions:
"RTN","DGMTDEL",67,0)
 ;;  1) The copay test is an uploaded test from the IVM Center.
"RTN","DGMTDEL",68,0)
 ;;  2) The copay test is a test that was done at the VAMC but has
"RTN","DGMTDEL",69,0)
 ;;     an associated uploaded copay test from the IVM Center.
"RTN","DGMTDEL",70,0)
 ;;END
"RTN","DGMTDEL",71,0)
LTCTXT ;informational text displayed to user if type of test = LTC copay test
"RTN","DGMTDEL",72,0)
 ;;
"RTN","DGMTDEL",73,0)
 ;;A LTC copay exemption test may not be deleted under the following conditions:
"RTN","DGMTDEL",74,0)
 ;;  1) The LTC copay exemption test is an uploaded test from the IVM Center.
"RTN","DGMTDEL",75,0)
 ;;END
"RTN","DGMTDEL1")
0^12^B12420169
"RTN","DGMTDEL1",1,0)
DGMTDEL1 ;ALB/CAW - Delete MT for a Patient (con't) ;12/6/94
"RTN","DGMTDEL1",2,0)
 ;;5.3;Registration;**45,166,182,433**;Aug 13, 1993
"RTN","DGMTDEL1",3,0)
 ;
"RTN","DGMTDEL1",4,0)
ID ;write identifiers
"RTN","DGMTDEL1",5,0)
 S DGI=Y,DGN=$G(^DGMT(408.31,DGI,0))
"RTN","DGMTDEL1",6,0)
 W ?21,$S(DGMTYPT=1:"MEANS",DGMTYPT=2:"COPAY",DGMTYPT=4:"LTC Copay Exemption",1:"")_" TEST DATE"
"RTN","DGMTDEL1",7,0)
 S DGMTSRC=$$SR^DGMTAUD1(DGN)
"RTN","DGMTDEL1",8,0)
 I DGMTSRC="" S DGMTSRC="UNKNOWN"
"RTN","DGMTDEL1",9,0)
 W ?40,"SOURCE: ",$S($L(DGMTSRC)>10:$E(DGMTSRC,1,10),1:DGMTSRC),?60,"PRIMARY TEST: ",$S($G(^DGMT(408.31,DGI,"PRIM"))=1:"YES",1:"NO")
"RTN","DGMTDEL1",10,0)
 W !?14,"STATUS: ",$$S^DGMTAUD1($P(^(0),U,3)),?45,"COMPLETED: ",$S($P(^DGMT(408.31,DGI,0),U,7)']"":"-----",1:$$DATE($P(^(0),U,7)))
"RTN","DGMTDEL1",11,0)
 Q
"RTN","DGMTDEL1",12,0)
 ;
"RTN","DGMTDEL1",13,0)
DEL ;delete
"RTN","DGMTDEL1",14,0)
 ;
"RTN","DGMTDEL1",15,0)
 ;add entry in IVM PATIENT file used to notify HEC that a Means Test
"RTN","DGMTDEL1",16,0)
 ;or Copay, or LTC Copay Exemption Test has been deleted.
"RTN","DGMTDEL1",17,0)
 ;
"RTN","DGMTDEL1",18,0)
 D DELETE^IVMPLOG(DFN,DGMTD,$S(DGMTYPT=1:1,1:""),$S(DGMTYPT=2:2,1:""),,$S(DGMTYPT=4:4,1:""))
"RTN","DGMTDEL1",19,0)
 ;
"RTN","DGMTDEL1",20,0)
 D DELLNK  ;Deletion of Linked Tests
"RTN","DGMTDEL1",21,0)
 S DGMTACT="DEL",DIK="^DGMT(408.31," D ^DIK
"RTN","DGMTDEL1",22,0)
 S DGMTY=0 F  S DGMTY=$O(^DGMT(408.22,"AMT",DGMTI,DFN,DGMTY)) Q:'DGMTY  S DGMTX=0 F  S DGMTX=$O(^DGMT(408.22,"AMT",DGMTI,DFN,DGMTY,DGMTX)) Q:'DGMTX  D
"RTN","DGMTDEL1",23,0)
 .S DA=DGMTX
"RTN","DGMTDEL1",24,0)
 .I DA S DR="31///@",DIE="^DGMT(408.22," D ^DIE
"RTN","DGMTDEL1",25,0)
 .K DE,DQ,DR,DIK
"RTN","DGMTDEL1",26,0)
 D AFTER^DGMTEVT S DGMTINF=0
"RTN","DGMTDEL1",27,0)
 I DGMTYPT=1!(DGMTYPT=2) D EN^DGMTEVT
"RTN","DGMTDEL1",28,0)
 I DGMTYPT=4 D
"RTN","DGMTDEL1",29,0)
 . D EN^DGMTAUD
"RTN","DGMTDEL1",30,0)
 . D ^IVMPMTE
"RTN","DGMTDEL1",31,0)
 Q
"RTN","DGMTDEL1",32,0)
VAR ;set variables
"RTN","DGMTDEL1",33,0)
 S DA=DGMTI,(DGP,DGMTP)=DGMT0,DGMTD=$P(DGMT0,U),DGCAT=$$MTS^DGMTU(DFN,$P(DGMTP,U,3)),DGMTYPT=$P(^DGMT(408.31,DGMTI,0),U,19)
"RTN","DGMTDEL1",34,0)
 Q
"RTN","DGMTDEL1",35,0)
LOOP ;loop through all means test for patient and delete
"RTN","DGMTDEL1",36,0)
 S (DGCT,DGI)=0 F  S DGI=$O(^DGMT(408.31,"C",DFN,DGI)) G:'DGI LKP^DGMTDEL S DGMTI=DGI,DGMT0=+$G(^DGMT(408.31,DGMTI,0)) D VAR,DEL S DGMTP=DGP,DGCT=DGCT+1
"RTN","DGMTDEL1",37,0)
 W !?10,DGCT,$S(DGMTYPT=1:" Means Test",DGMTYPT=2:" Copay Test",DGMTYPT=4:" LTC Copay Exemption Test",1:"")_$S(DGCT'=1:"s",1:"")_" deleted!"
"RTN","DGMTDEL1",38,0)
 Q
"RTN","DGMTDEL1",39,0)
DATE(X) ;function to return date in external format
"RTN","DGMTDEL1",40,0)
 ;INPUT -  FM internal date format
"RTN","DGMTDEL1",41,0)
 ;OUTPUT - external date format
"RTN","DGMTDEL1",42,0)
 Q $$FMTE^XLFDT($E(X,1,12),1)
"RTN","DGMTDEL1",43,0)
 ;
"RTN","DGMTDEL1",44,0)
PID(X) ;function to return pid
"RTN","DGMTDEL1",45,0)
 ;INPUT -  DFN
"RTN","DGMTDEL1",46,0)
 ;OUTPUT - PID or UNKNOWN
"RTN","DGMTDEL1",47,0)
 D PID^VADPT6
"RTN","DGMTDEL1",48,0)
 Q $S(VA("PID")]"":VA("PID"),1:"UNKNOWN")
"RTN","DGMTDEL1",49,0)
DELLNK ;Deletion of Linked tests
"RTN","DGMTDEL1",50,0)
 N IEN4,GIEN,DA,DIK,DIE,DR,LTCDT
"RTN","DGMTDEL1",51,0)
 I DGMTYPT=1!(DGMTYPT=2) D
"RTN","DGMTDEL1",52,0)
 .;check to see if test type 4 is linked with type 1 or 2
"RTN","DGMTDEL1",53,0)
 . S IEN4=$O(^DGMT(408.31,"AT",DGMTI,"")) Q:IEN4=""  ;Test type 4
"RTN","DGMTDEL1",54,0)
 . S LTCDT=$P($G(^DGMT(408.31,IEN4,0)),"^",1)  ;Date of Test
"RTN","DGMTDEL1",55,0)
 .;Check to see if test type 3 is linked with type 4
"RTN","DGMTDEL1",56,0)
 . S GIEN=$O(^DGMT(408.31,"AT",IEN4,""))  ;Test type 3
"RTN","DGMTDEL1",57,0)
 .;if linked, remove pointer value from test type 3
"RTN","DGMTDEL1",58,0)
 . I GIEN S DA=GIEN,DR="2.08///@",DIE="^DGMT(408.31," D ^DIE
"RTN","DGMTDEL1",59,0)
 .;remove linked test type 4 record.
"RTN","DGMTDEL1",60,0)
 . D DELETE^IVMPLOG(DFN,LTCDT,,,,4)
"RTN","DGMTDEL1",61,0)
 . N DGMTI,DGMTP,DGMTA,DGMTINF,DGMTACT,DGMTYPT
"RTN","DGMTDEL1",62,0)
 . S DGMTI=IEN4,DGMTP=$G(^DGMT(408.31,DGMTI,0))
"RTN","DGMTDEL1",63,0)
 . S DA=DGMTI,DIK="^DGMT(408.31," D ^DIK
"RTN","DGMTDEL1",64,0)
 . S DGMTACT="DEL" D AFTER^DGMTEVT S DGMTINF=0
"RTN","DGMTDEL1",65,0)
 . S DGMTYPT=4 D EN^DGMTAUD
"RTN","DGMTDEL1",66,0)
 I DGMTYPT=4 D
"RTN","DGMTDEL1",67,0)
 . S GIEN=$O(^DGMT(408.31,"AT",DGMTI,"")) Q:GIEN=""  ;Linked test type 3
"RTN","DGMTDEL1",68,0)
 .;if linked, remove pointer value from test type 3
"RTN","DGMTDEL1",69,0)
 . S DA=GIEN,DIE="^DGMT(408.31,",DR="2.08///@" D ^DIE
"RTN","DGMTDEL1",70,0)
 Q
"RTN","DGMTE")
0^8^B20191648
"RTN","DGMTE",1,0)
DGMTE ;ALB/RMO,CAW,LD,SCG - Edit an Existing Means Test ;03 APR 2002 2:00 pm
"RTN","DGMTE",2,0)
 ;;5.3;Registration;**33,45,182,344,332,433**;Aug 13, 1993
"RTN","DGMTE",3,0)
 ;
"RTN","DGMTE",4,0)
EN ;Entry point to edit an existing means test
"RTN","DGMTE",5,0)
 N DGMDOD S DGMDOD=""
"RTN","DGMTE",6,0)
 I DGMTYPT=1 S DIC("S")="I $P(^(0),U,14)"
"RTN","DGMTE",7,0)
 I DGMTYPT=2!(DGMTYPT=4) S DIC("S")="I $D(^DGMT(408.31,""AID"",DGMTYPT,+Y))"
"RTN","DGMTE",8,0)
 I $D(DGMTDFN)#2 D UNLOCK^DGMTUTL(DGMTDFN) K DGMTDFN
"RTN","DGMTE",9,0)
 S DIC="^DPT(",DIC(0)="AEMQ" W ! D ^DIC K DIC G Q:Y<0 S (DFN,DGMTDFN)=+Y
"RTN","DGMTE",10,0)
 I $P($G(^DPT(DFN,.35)),U)'="" S DGMDOD=$P(^DPT(DFN,.35),U)
"RTN","DGMTE",11,0)
 I $G(DGMDOD) W !,"Patient died on: ",$$FMTE^XLFDT(DGMDOD,"1D") Q
"RTN","DGMTE",12,0)
 ;
"RTN","DGMTE",13,0)
 ; check if income test upload in progress
"RTN","DGMTE",14,0)
 D CKUPLOAD^IVMCUPL(DFN)
"RTN","DGMTE",15,0)
 ;
"RTN","DGMTE",16,0)
 ; obtain lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTE",17,0)
 I $$LOCK^DGMTUTL(DFN)
"RTN","DGMTE",18,0)
 ;
"RTN","DGMTE",19,0)
DT S DIC("A")="Select DATE OF TEST: "
"RTN","DGMTE",20,0)
 N FUTFLG,VSITE S FUTFLG=0,VSITE=+$P($$SITE^VASITE(),U,3)
"RTN","DGMTE",21,0)
 I $D(^DGMT(408.31,+$$FUT^DGMTU(DFN,"",DGMTYPT),0)),+$P($G(^(2)),U,5)=VSITE S DIC("B")=$P(^(0),"^"),FUTFLG=1
"RTN","DGMTE",22,0)
 I 'FUTFLG I $D(^DGMT(408.31,+$$LST^DGMTU(DFN,"",DGMTYPT),0)) S DIC("B")=$P(^(0),"^")
"RTN","DGMTE",23,0)
 S DIC("S")="I $P(^(0),U,2)=DFN,$P(^(0),U,19)=DGMTYPT"
"RTN","DGMTE",24,0)
 S:DGMTYPT'=4 DIC("S")=DIC("S")_" I $G(^(""PRIM""))!($P(^(0),U,1)>DT)"
"RTN","DGMTE",25,0)
 S DIC="^DGMT(408.31,",DIC(0)="EQZ" W ! D EN^DGMTLK K DIC G Q:Y<0
"RTN","DGMTE",26,0)
 S DGMTI=+Y,DGMTDT=$P(Y,"^",2),DGMT0=Y(0)
"RTN","DGMTE",27,0)
 ;
"RTN","DGMTE",28,0)
 ;If test is uneditable, print error message and allow user to view test
"RTN","DGMTE",29,0)
 ;or print 10/10F
"RTN","DGMTE",30,0)
 ;
"RTN","DGMTE",31,0)
 I '$P($G(^DG(408.34,+$P(Y(0),U,23),0)),U,2) D  D:$G(DGMTERR) VIEWPRT G EN
"RTN","DGMTE",32,0)
 .W !!?3,*7,"Warning: Uneditable "_$S(DGMTYPT=1:"means",1:"copay")_" test.  The source of this test is "_$S($$SR^DGMTAUD1(Y(0))]"":$$SR^DGMTAUD1(Y(0)),1:"UNKNOWN")
"RTN","DGMTE",33,0)
 .W !?12,"which has been flagged as an uneditable source.",!
"RTN","DGMTE",34,0)
 .S DIR("A")="Would you like to view the "_$S(DGMTYPT=1:"means",1:"copay")_" test or print the 10/10F",DIR("B")="NO",DIR(0)="Y"
"RTN","DGMTE",35,0)
 .D ^DIR K DIR S DGMTERR=Y I $D(DTOUT)!($D(DUOUT)) K DGMTERR,DTOUT,DUOUT
"RTN","DGMTE",36,0)
 I "^3^10^"[("^"_$P(Y(0),"^",3)_"^") W !?3,*7,$S(DGMTYPT=1:"Means",1:"Copay")_" test is NO LONGER "_$S(DGMTYPT=1:"REQUIRED",1:"APPLICABLE")_", it cannot be edited." G EN
"RTN","DGMTE",37,0)
 I DGMTYPT=4,$P($G(^DGMT(408.31,DGMTI,2)),U,8) D  I $G(DGOUT) K DGOUT G EN
"RTN","DGMTE",38,0)
 .N DGMT,DGT S DGMT=$P(^DGMT(408.31,DGMTI,2),U,8),DGT=$P($G(^DGMT(408.31,DGMT,0)),U,19)
"RTN","DGMTE",39,0)
 .I DGT,DGT>2 Q
"RTN","DGMTE",40,0)
 .W !!,?3,"This LTC copay exemption test is linked to the ",$$FTIME^DGMTUTL(+^DGMT(408.31,DGMT,0)),$S(DGT=1:" means",1:" RX copay")," test."
"RTN","DGMTE",41,0)
 .W !,?3,"Changes should be made using the 'Edit an Existing ",$S(DGT=1:"Means",1:"Copay Exemption")," Test'"
"RTN","DGMTE",42,0)
 .W !,?3,"menu option."
"RTN","DGMTE",43,0)
 .S DGOUT=1
"RTN","DGMTE",44,0)
 D DISPLAY^DGMTU23(DGMTI,DGMTYPT),PAUSE I $D(DTOUT)!($D(DUOUT)) K DTOUT,DUOUT G EN
"RTN","DGMTE",45,0)
 ;
"RTN","DGMTE",46,0)
 ;hardship determination, once granted, will remain unless deleted by
"RTN","DGMTE",47,0)
 ;hardship option
"RTN","DGMTE",48,0)
 ;I $P(DGMT0,"^",20),'$$EDIT() G EN ; if hardship
"RTN","DGMTE",49,0)
 ;
"RTN","DGMTE",50,0)
 S DGMTACT="EDT",DGMTROU="EN^DGMTE" G EN^DGMTSC
"RTN","DGMTE",51,0)
 ;
"RTN","DGMTE",52,0)
Q K DFN,DGMTACT,DGMTDT,DGMTERR,DGMT0,DGMTI,DGMTROU,DGMTYPT,DGMTX,DGOUT,DTOUT,DUOUT,X,Y
"RTN","DGMTE",53,0)
 ;
"RTN","DGMTE",54,0)
 ; release lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTE",55,0)
 I $D(DGMTDFN)#2 D UNLOCK^DGMTUTL(DGMTDFN) K DGMTDFN
"RTN","DGMTE",56,0)
 Q
"RTN","DGMTE",57,0)
 ;
"RTN","DGMTE",58,0)
PAUSE S DIR(0)="E" D ^DIR
"RTN","DGMTE",59,0)
 Q
"RTN","DGMTE",60,0)
 ;
"RTN","DGMTE",61,0)
VIEWPRT ; Select 1 to view an uneditable means test or 2 to print a 10/10F
"RTN","DGMTE",62,0)
 ;
"RTN","DGMTE",63,0)
 S DIR(0)="S^1:View Means Test;2:Print Means Test 10/10F",DIR("A")="Select Choice"
"RTN","DGMTE",64,0)
 D ^DIR S DGMTANS=Y G:$D(DTOUT)!($D(DUOUT)) VIEWPRTQ
"RTN","DGMTE",65,0)
 I DGMTANS=1 D EN1^DGMTV
"RTN","DGMTE",66,0)
 I DGMTANS=2 D DEV^DGMTP
"RTN","DGMTE",67,0)
VIEWPRTQ ;
"RTN","DGMTE",68,0)
 K DGMTANS,DIR,DTOUT,DUOUT,Y
"RTN","DGMTE",69,0)
 Q
"RTN","DGMTE",70,0)
 ;
"RTN","DGMTE",71,0)
EDIT() ; want to edit even though MT is hardship?
"RTN","DGMTE",72,0)
 ;
"RTN","DGMTE",73,0)
 ; Output:  1 if user wants to edit, 0 otherwise
"RTN","DGMTE",74,0)
 ;
"RTN","DGMTE",75,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,I,X,Y
"RTN","DGMTE",76,0)
 S DIR("?",1)="WARNING:  You are about to access a means test for which a hardship has"
"RTN","DGMTE",77,0)
 S DIR("?",2)="          been authorized.  If you proceed, the hardship will be removed"
"RTN","DGMTE",78,0)
 S DIR("?",3)="          and the means test category will be recalculated!  To avoid"
"RTN","DGMTE",79,0)
 S DIR("?",4)="          this problem, enter NO at the next prompt and use the 'View"
"RTN","DGMTE",80,0)
 S DIR("?",5)="          a Past Means Test' option should you need to see details of"
"RTN","DGMTE",81,0)
 S DIR("?",6)="          this means test."
"RTN","DGMTE",82,0)
 S DIR("?",7)=" "
"RTN","DGMTE",83,0)
 S DIR("?")="Enter NO to stop editing this means test.  Enter YES to continue"
"RTN","DGMTE",84,0)
 F I=1:1 Q:'$D(DIR("?",I))  W !,DIR("?",I)
"RTN","DGMTE",85,0)
 S DIR("A")="Do you want to continue editing this means test?  ",DIR("B")="NO",DIR(0)="YA"
"RTN","DGMTE",86,0)
 D ^DIR
"RTN","DGMTE",87,0)
 Q Y
"RTN","DGMTR1")
0^10^B29588968
"RTN","DGMTR1",1,0)
DGMTR1 ;ALB/CJM,SCG - Check Means Test Requirements Cont'd;3/25/92  09:51
"RTN","DGMTR1",2,0)
 ;;5.3;Registration;**182,344,433**;Aug 13, 1993
"RTN","DGMTR1",3,0)
 ;
"RTN","DGMTR1",4,0)
COPYRX(DFN,MTIEN) ;
"RTN","DGMTR1",5,0)
 ;Creates a Pharmacy Copay test based on the means test if the vet is
"RTN","DGMTR1",6,0)
 ;subject to the Rx copayment and the income screening was already
"RTN","DGMTR1",7,0)
 ;completed
"RTN","DGMTR1",8,0)
 ;1/16/2002 - Changes added for LTC Copay Phase II (DG*5.3*433)
"RTN","DGMTR1",9,0)
 ;Creates a Pharmacy Copay test based on a LTC copay exemption test
"RTN","DGMTR1",10,0)
 ;(type 4) if the veteran is exempt from means test
"RTN","DGMTR1",11,0)
 ;
"RTN","DGMTR1",12,0)
 N NODE0,RXSTATUS,Y,DGMT,DGMTYPT,DGNODE,DATA,SUB,COMMENTS,RXIEN,DGMTACT,DGMTI,DGMTP,DGMTA,NODE2,CODE,QUIT,TRIES,ERROR,TYPE
"RTN","DGMTR1",13,0)
 ;
"RTN","DGMTR1",14,0)
 S DGMTP="",DGMTACT="ADD"
"RTN","DGMTR1",15,0)
 D ON^DGMTCOU G:'Y COPYRXQ
"RTN","DGMTR1",16,0)
 I $$CHK(DFN) D
"RTN","DGMTR1",17,0)
 .S NODE0=$G(^DGMT(408.31,MTIEN,0))
"RTN","DGMTR1",18,0)
 .Q:NODE0=""
"RTN","DGMTR1",19,0)
 .S NODE2=$G(^DGMT(408.31,MTIEN,2))
"RTN","DGMTR1",20,0)
 .;
"RTN","DGMTR1",21,0)
 .;get type of test (1=means test; 4=LTC copay exemption test)
"RTN","DGMTR1",22,0)
 .S TYPE=$P(NODE0,"^",19)
"RTN","DGMTR1",23,0)
 .;
"RTN","DGMTR1",24,0)
 .;must have been completed
"RTN","DGMTR1",25,0)
 .S CODE=$$GETCODE^DGMTH($P(NODE0,"^",3))
"RTN","DGMTR1",26,0)
 .S QUIT=1
"RTN","DGMTR1",27,0)
 .I (CODE'=""),("ACP01"[CODE) S QUIT=0
"RTN","DGMTR1",28,0)
 .S CODE=$$GETCODE^DGMTH($P(NODE2,"^",3))
"RTN","DGMTR1",29,0)
 .I (CODE'=""),("ACP01"[CODE) S QUIT=0
"RTN","DGMTR1",30,0)
 .Q:QUIT
"RTN","DGMTR1",31,0)
 .;
"RTN","DGMTR1",32,0)
 .;must still be effective
"RTN","DGMTR1",33,0)
 .Q:($$FMDIFF^XLFDT(DT,$P(NODE0,"^"))>365)
"RTN","DGMTR1",34,0)
 .Q:$$OLD^DGMTU4($P(NODE0,"^"))
"RTN","DGMTR1",35,0)
 .Q:($P(NODE0,"^",14))  ;declined to provide income information
"RTN","DGMTR1",36,0)
 .Q:($P(NODE0,"^",26))  ;refused to sign the test
"RTN","DGMTR1",37,0)
 .F TRIES=1:1 D  Q:(TRIES>3)
"RTN","DGMTR1",38,0)
 ..S DGNODE=$$LST^DGMTU(DFN,$S((DT>$P(NODE0,"^",2)):DT,1:$P(NODE0,"^",2)),2),RXIEN=+DGNODE
"RTN","DGMTR1",39,0)
 ..;
"RTN","DGMTR1",40,0)
 ..;mark existing test as non-primary
"RTN","DGMTR1",41,0)
 ..I RXIEN,($E($P(DGNODE,"^",2),1,3)=$E($P(NODE0,"^"),1,3)) D
"RTN","DGMTR1",42,0)
 ...S DATA(2)=0 I $$UPD^DGENDBS(408.31,RXIEN,.DATA)
"RTN","DGMTR1",43,0)
 ..E  S TRIES=4
"RTN","DGMTR1",44,0)
 .;
"RTN","DGMTR1",45,0)
 .S RXIEN=$P(NODE2,"^",6)
"RTN","DGMTR1",46,0)
 .;if already copied, reuse the same record
"RTN","DGMTR1",47,0)
 .I RXIEN,$P($G(^DGMT(408.31,RXIEN,2)),"^",6)=MTIEN D
"RTN","DGMTR1",48,0)
 ..S DGMTI=RXIEN
"RTN","DGMTR1",49,0)
 .E  D  Q:'DGMTI
"RTN","DGMTR1",50,0)
 ..;This call works. Adding via the ADD^DGENDBS encountered an error
"RTN","DGMTR1",51,0)
 ..S DGMTDT=$P(NODE0,"^") S DGMTYPT=2 D ADD^DGMTA
"RTN","DGMTR1",52,0)
 .;
"RTN","DGMTR1",53,0)
 .S DATA(.019)=2
"RTN","DGMTR1",54,0)
 .S DATA(.03)=""
"RTN","DGMTR1",55,0)
 .F SUB=.01,.02,.04,.05,.06,.07,.14,.15,.18,.23,.24,.25 S DATA(SUB)=$P(NODE0,"^",(SUB/.01))
"RTN","DGMTR1",56,0)
 .S DATA(2)=1
"RTN","DGMTR1",57,0)
 .S DATA(2.02)=$P(NODE2,"^",2)
"RTN","DGMTR1",58,0)
 .S DATA(2.05)=$P(NODE2,"^",5)
"RTN","DGMTR1",59,0)
 .I TYPE=1 D
"RTN","DGMTR1",60,0)
 ..S DATA(2.06)=MTIEN
"RTN","DGMTR1",61,0)
 ..S COMMENTS("LINES",1,0)="This Rx Copay Test was automatically created based on a completed means test"
"RTN","DGMTR1",62,0)
 ..S COMMENTS("LINES",2,0)="which was changed to NO LONGER REQUIRED. All data including income"
"RTN","DGMTR1",63,0)
 ..S COMMENTS("LINES",3,0)="screening was copied from the test on "_$$FMTE^XLFDT($$NOW^XLFDT)_"."
"RTN","DGMTR1",64,0)
 .I TYPE=4 D
"RTN","DGMTR1",65,0)
 ..S COMMENTS("LINES",1,0)="This Rx Copay Test was automatically created based on a completed"
"RTN","DGMTR1",66,0)
 ..S COMMENTS("LINES",2,0)="LTC copay exemption test. All data including income screening"
"RTN","DGMTR1",67,0)
 ..S COMMENTS("LINES",3,0)="was copied from the test on "_$$FMTE^XLFDT($$NOW^XLFDT)_"."
"RTN","DGMTR1",68,0)
 .S DATA(50)="COMMENTS(""LINES"")"
"RTN","DGMTR1",69,0)
 .S (DATA(.03),DATA(2.03))=$$RXSTATUS(MTIEN)
"RTN","DGMTR1",70,0)
 .I $$UPD^DGENDBS(408.31,DGMTI,.DATA,.ERROR)
"RTN","DGMTR1",71,0)
 .K DATA
"RTN","DGMTR1",72,0)
 .S:TYPE=1 DATA(2.06)=DGMTI
"RTN","DGMTR1",73,0)
 .S:TYPE=4 DATA(2.08)=DGMTI
"RTN","DGMTR1",74,0)
 .I $$UPD^DGENDBS(408.31,MTIEN,.DATA,.ERROR)
"RTN","DGMTR1",75,0)
 .D TRANSFER^DGMTU4(DFN,MTIEN,DGMTI)
"RTN","DGMTR1",76,0)
 .D QUE^DGMTR
"RTN","DGMTR1",77,0)
COPYRXQ ;
"RTN","DGMTR1",78,0)
 K ERROR
"RTN","DGMTR1",79,0)
 Q
"RTN","DGMTR1",80,0)
 ;
"RTN","DGMTR1",81,0)
RXSTATUS(MTIEN) ;
"RTN","DGMTR1",82,0)
 ;Determins RX Copay Status based on the means test
"RTN","DGMTR1",83,0)
 ;
"RTN","DGMTR1",84,0)
 Q:('$G(MTIEN)) ""
"RTN","DGMTR1",85,0)
 N NODE0,NODE,PIECE,IBSTATUS,MTSTATUS
"RTN","DGMTR1",86,0)
 S NODE0=$G(^DGMT(408.31,MTIEN,0))
"RTN","DGMTR1",87,0)
 Q:(NODE0="") ""
"RTN","DGMTR1",88,0)
 F PIECE=1,2,4,5,14,15,18 S $P(NODE,"^",PIECE)=$P(NODE0,"^",PIECE)
"RTN","DGMTR1",89,0)
 S $P(NODE,"^",19)=2
"RTN","DGMTR1",90,0)
 S IBSTATUS=+$$INCDT^IBARXEU1(NODE)
"RTN","DGMTR1",91,0)
 S MTSTATUS=$S(IBSTATUS=1:"E",IBSTATUS=2:"M",1:"")
"RTN","DGMTR1",92,0)
 Q:(MTSTATUS="") ""
"RTN","DGMTR1",93,0)
 Q $O(^DG(408.32,"AC",2,MTSTATUS,0))
"RTN","DGMTR1",94,0)
 ;
"RTN","DGMTR1",95,0)
CHK(DFN) ;
"RTN","DGMTR1",96,0)
 ;can the veteran take a RX copay test?
"RTN","DGMTR1",97,0)
 N DGMTI,DGMTE,DGMTCOR,DGNODE,DGMTYPT,STATUS,ELIG,ELIGIEN
"RTN","DGMTR1",98,0)
 S DGMTCOR=1,DGMT="",DGMTYPT=2
"RTN","DGMTR1",99,0)
 ;
"RTN","DGMTR1",100,0)
 ;
"RTN","DGMTR1",101,0)
 I $P($G(^DPT(DFN,"VET")),U,1)'="Y" S DGMTCOR=0 G CHKQ ;NON-VET
"RTN","DGMTR1",102,0)
 S DGMTI=0 I '$P($G(^DPT(DFN,.36)),U) S DGMTCOR=0 G CHKQ
"RTN","DGMTR1",103,0)
 ;
"RTN","DGMTR1",104,0)
 S ELIG=$P($G(^DPT(DFN,.36)),"^")
"RTN","DGMTR1",105,0)
 I 'ELIG S DGMTCOR=0 G CHKQ
"RTN","DGMTR1",106,0)
 S DGMTE=$P($G(^DIC(8,ELIG,0)),U,9)
"RTN","DGMTR1",107,0)
 I "^1^2^4^15^"[("^"_DGMTE_"^") S DGMTCOR=0 G CHKQ
"RTN","DGMTR1",108,0)
 S ELIGIEN=0
"RTN","DGMTR1",109,0)
 F  S ELIGIEN=$O(^DPT(DFN,"E",ELIGIEN)) Q:'ELIGIEN  S ELIG=$P($G(^DPT(DFN,"E",ELIGIEN,0)),"^") I ELIG  S DGMTE=$P($G(^DIC(8,ELIG,0)),U,9) I "^1^2^4^15^"[("^"_DGMTE_"^") S DGMTCOR=0 G CHKQ
"RTN","DGMTR1",110,0)
 ;
"RTN","DGMTR1",111,0)
 S DGNODE=$G(^DPT(DFN,.362))
"RTN","DGMTR1",112,0)
 I DGMTCOR,$P(DGNODE,U,12)["Y" S DGMTCOR=0 G CHKQ ;A&A
"RTN","DGMTR1",113,0)
 I DGMTCOR,$P(DGNODE,U,13)["Y" S DGMTCOR=0 G CHKQ ;HB
"RTN","DGMTR1",114,0)
 I DGMTCOR,$P(DGNODE,U,14)["Y" S DGMTCOR=0 G CHKQ ;PENSION
"RTN","DGMTR1",115,0)
CHKQ ;
"RTN","DGMTR1",116,0)
 Q DGMTCOR
"RTN","DGMTR1",117,0)
MAIL ; Send a mailman msg to user/ INCONSISTENCY EDIT GROUP with results
"RTN","DGMTR1",118,0)
 N %,DGB,I,VA,VADM,VAERR,Y,XMDUZ,XMSUB,XMTEXT,XMY,XMZ
"RTN","DGMTR1",119,0)
 D DEM^VADPT
"RTN","DGMTR1",120,0)
 S XMSUB="Patient "_VADM(1)_" has an invalid secondary eligibility"
"RTN","DGMTR1",121,0)
 S XMDUZ="PIMS PACKAGE",XMY(DUZ)="",XMY(.5)=""
"RTN","DGMTR1",122,0)
 S DGB=+$P($G(^DG(43,1,"NOT")),"^",6)
"RTN","DGMTR1",123,0)
 I $D(^XMB(3.8,DGB,0)) S XMY("G."_$P($G(^XMB(3.8,DGB,0)),"^"))=""
"RTN","DGMTR1",124,0)
 S XMTEXT="DGTXT("
"RTN","DGMTR1",125,0)
 D NOW^%DTC S Y=% D DD^%DT
"RTN","DGMTR1",126,0)
 S DGTXT(1)="On "_Y_"  "_VADM(1)_" ("_VA("BID")_")"
"RTN","DGMTR1",127,0)
 S DGTXT(2)="has an invalid secondary eligibility"
"RTN","DGMTR1",128,0)
 S DGTXT(3)="  "
"RTN","DGMTR1",129,0)
 ;que mailman message
"RTN","DGMTR1",130,0)
 N DIFROM,I,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","DGMTR1",131,0)
 F I="DGTXT(","XMDUZ","XMSUB","XMTEXT","XMY(" S ZTSAVE(I)=""
"RTN","DGMTR1",132,0)
 S ZTDESC="MAILMAN MSG FOR INVALID ELIGIBILITY CODE FILE ENTRIES"
"RTN","DGMTR1",133,0)
 S ZTDTH=$$NOW^XLFDT(),ZTIO="",ZTRTN="^XMD"
"RTN","DGMTR1",134,0)
 D ^%ZTLOAD
"RTN","DGMTR1",135,0)
 Q
"RTN","DGMTSC")
0^7^B9520828
"RTN","DGMTSC",1,0)
DGMTSC ;ALB/RMO,CAW,RTK,PDJ - Means Test Screen Driver ;21 JAN 1992 8:00 pm
"RTN","DGMTSC",2,0)
 ;;5.3;Registration;**182,327,372,433**;Aug 13, 1993
"RTN","DGMTSC",3,0)
 ;
"RTN","DGMTSC",4,0)
 ;A series of screens used to collect the means test data
"RTN","DGMTSC",5,0)
 ; Input  -- DFN      Patient IEN
"RTN","DGMTSC",6,0)
 ;           DGMTACT  Means Test Action  (ie, ADD to Add a Means Test)
"RTN","DGMTSC",7,0)
 ;           DGMTDT   Date of Test
"RTN","DGMTSC",8,0)
 ;           DGMTI    Annual Means Test IEN
"RTN","DGMTSC",9,0)
 ;           DTMTYPT  Type of Test 1=MT 2=COPAY
"RTN","DGMTSC",10,0)
 ;           DGMTROU  Option Routine Return
"RTN","DGMTSC",11,0)
 ; Output -- None
"RTN","DGMTSC",12,0)
 ;
"RTN","DGMTSC",13,0)
EN ;Entry point for means test screen driver
"RTN","DGMTSC",14,0)
 D PRIOR^DGMTEVT:DGMTACT'="VEW",HOME^%ZIS,SETUP^DGMTSCU I DGERR D MG G Q1
"RTN","DGMTSC",15,0)
EN1 ;Entry point to edit means test if incomplete
"RTN","DGMTSC",16,0)
 S DGMTSCI=+$O(DGMTSC(0)) G @($$ROU^DGMTSCU(DGMTSCI))
"RTN","DGMTSC",17,0)
 ;
"RTN","DGMTSC",18,0)
Q I DGMTACT'="VEW" D EN^DGMTSCC I DGERR G EN1:$$EDT
"RTN","DGMTSC",19,0)
 ; Added for LTC Co-pay Phase II - DG*5.3*433
"RTN","DGMTSC",20,0)
 I DGMTACT'="VEW",DGMTYPT=4 D  G K
"RTN","DGMTSC",21,0)
 .Q:$P($G(^DGMT(408.31,DGMTI,0)),U,3)=""  ; LTC 4 test is incomplete
"RTN","DGMTSC",22,0)
 .D AFTER^DGMTEVT S DGMTINF=0
"RTN","DGMTSC",23,0)
 .D EN^DGMTAUD,EN^IVMPMTE
"RTN","DGMTSC",24,0)
 .D DATETIME^DGMTU4(DGMTI)
"RTN","DGMTSC",25,0)
 .; If LTC copay exemption test is edited, update LTC copay test
"RTN","DGMTSC",26,0)
 .I DGMTACT="EDT" D UPLTC3^EASECMT(DGMTI)
"RTN","DGMTSC",27,0)
Q1 I DGMTACT'="VEW" D AFTER^DGMTEVT S DGMTINF=0 D EN^DGMTEVT
"RTN","DGMTSC",28,0)
 ;
"RTN","DGMTSC",29,0)
 ;If the veteran has agreed to pay copay after previously refusing,
"RTN","DGMTSC",30,0)
 ;automatically update their Primary Eligibility (327-Ineligible Project)
"RTN","DGMTSC",31,0)
 I $D(DGMTP),$D(DGMTA) D
"RTN","DGMTSC",32,0)
 .I $D(^DPT(DFN,.3)),$P(DGMTP,U,11)=0,$P(DGMTA,U,11)=1 D
"RTN","DGMTSC",33,0)
 ..N DATA
"RTN","DGMTSC",34,0)
 ..I $P(^DPT(DFN,.3),U)="Y" S DATA(.361)=$O(^DIC(8,"B","SC LESS THAN 50%",""))
"RTN","DGMTSC",35,0)
 ..E  S DATA(.361)=$O(^DIC(8,"B","NSC",""))
"RTN","DGMTSC",36,0)
 ..I $$UPD^DGENDBS(2,DFN,.DATA)
"RTN","DGMTSC",37,0)
 .;If the veteran has refused to pay copay, update ENROLLMENT
"RTN","DGMTSC",38,0)
 .;PRIORITY to null.
"RTN","DGMTSC",39,0)
 .I $P(DGMTA,U,11)=0 D
"RTN","DGMTSC",40,0)
 ..S CUR=$$FINDCUR^DGENA(DFN)
"RTN","DGMTSC",41,0)
 ..N DATA S DATA(.07)="@" I $$UPD^DGENDBS(27.11,CUR,.DATA)
"RTN","DGMTSC",42,0)
 ;
"RTN","DGMTSC",43,0)
 ; Added for LTC Copay Phase II (DG*5.2*433)
"RTN","DGMTSC",44,0)
 ; If means test or copay test is edited and has a LTC copay exemption
"RTN","DGMTSC",45,0)
 ; test associated with it, update the LTC copay exemption test.
"RTN","DGMTSC",46,0)
 I DGMTACT="EDT",$O(^DGMT(408.31,"AT",DGMTI,0)) D LTC4^EASECMT(DGMTI)
"RTN","DGMTSC",47,0)
 ;
"RTN","DGMTSC",48,0)
K K %,DGBL,DGDC,DGDEP,DGDR,DGFCOL,DGFL,DGMT0,DGMTA,DGMTINF,DGMTOUT,DGMTP,DGMTPAR,DGMTSC,DGMTSCI,DGREL,DGRNG,DGRPPR,DGSCOL,DGSEL,DGSELTY,DGVI,DGVINI,DGVIRI,DGVO,DGVPRI,DGX,DGY,DTOUT,DUOUT,Y,Z
"RTN","DGMTSC",49,0)
 ;
"RTN","DGMTSC",50,0)
 ;Update the TEST-DETERMINED STATUS field (#2.03) in the ANNUAL MEANS
"RTN","DGMTSC",51,0)
 ;TEST file (408.31) when adding a means or copay test, completing a 
"RTN","DGMTSC",52,0)
 ;means test, or editing a means or copay test.
"RTN","DGMTSC",53,0)
 I "ADDCOMEDT"[DGMTACT D SAVESTAT^DGMTU4(DGMTI,DGERR)
"RTN","DGMTSC",54,0)
 K DGERR
"RTN","DGMTSC",55,0)
 ;
"RTN","DGMTSC",56,0)
 G @(DGMTROU)
"RTN","DGMTSC",57,0)
 ;
"RTN","DGMTSC",58,0)
MG ;Print set-up error messages
"RTN","DGMTSC",59,0)
 I $D(DGVPRI),DGVPRI'>0 W !!?3,"Patient Relation cannot be setup for patient."
"RTN","DGMTSC",60,0)
 I $D(DGVINI),DGVINI'>0 W !!?3,"Individual Annual Income cannot be setup for patient."
"RTN","DGMTSC",61,0)
 I $D(DGMTPAR),DGMTPAR']"",DGMTYPT=1 W !!?3,"Means Test Thresholds are not defined."
"RTN","DGMTSC",62,0)
 W !?3,*7,"Please contact your site manager."
"RTN","DGMTSC",63,0)
 Q
"RTN","DGMTSC",64,0)
 ;
"RTN","DGMTSC",65,0)
EDT() ;Edit means/copay test if incomplete
"RTN","DGMTSC",66,0)
 N DIR,Y
"RTN","DGMTSC",67,0)
 S DIR("A")="Do you wish to edit the "_$S(DGMTYPT=1:"means",1:"copay exemption")_" test"
"RTN","DGMTSC",68,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR
"RTN","DGMTSC",69,0)
 Q +$G(Y)
"RTN","DGMTSCC")
0^13^B30086637
"RTN","DGMTSCC",1,0)
DGMTSCC ;ALB/RMO,CAW - Means Test Screen Completion ; 4/6/02 10:25am
"RTN","DGMTSCC",2,0)
 ;;5.3;Registration;**33,45,130,438,332,433**;Aug 13, 1993
"RTN","DGMTSCC",3,0)
 ;
"RTN","DGMTSCC",4,0)
 ; Input  -- DFN      Patient IEN
"RTN","DGMTSCC",5,0)
 ;           DGMTACT  Means Test Action
"RTN","DGMTSCC",6,0)
 ;           DGMTDT   Date of Test
"RTN","DGMTSCC",7,0)
 ;           DGMTYPT  Type of Test 1=MT 2=COPAY
"RTN","DGMTSCC",8,0)
 ;           DGMTPAR  Annual Means Test Parameters
"RTN","DGMTSCC",9,0)
 ;           DGVINI   Veteran Individual Annual Income IEN
"RTN","DGMTSCC",10,0)
 ;           DGVIRI   Veteran Income Relation IEN
"RTN","DGMTSCC",11,0)
 ;           DGVPRI   Veteran Patient Relation IEN
"RTN","DGMTSCC",12,0)
 ; Output -- DGERR    1=INCOMPLETE and 0=COMPLETE
"RTN","DGMTSCC",13,0)
 ;
"RTN","DGMTSCC",14,0)
EN N DGCAT,DGCOMF,DGDC,DGDET,DGIN0,DGIN1,DGIN2,DGINT,DGINTF,DGMTS,DGNC,DGND,DGNWT,DGNWTF,DGREF1,DGSP,DGTYC,DGTHA,DGTHB,DGVIR0,DGCOPS,DGCOST
"RTN","DGMTSCC",15,0)
 S DGERR=0
"RTN","DGMTSCC",16,0)
 I DGMTACT="ADD" D COM I 'Y!($D(DTOUT))!($D(DUOUT)) G Q
"RTN","DGMTSCC",17,0)
 S DGCOMF=1 D DEP^DGMTSCU2,INC^DGMTSCU3
"RTN","DGMTSCC",18,0)
 I 'DGINTF,'DGNWTF S DGREF1="" D REF G Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTSCC",19,0)
 D CAT^DGMTSCU2,STA^DGMTSCU2
"RTN","DGMTSCC",20,0)
 D CHK I DGERR W !?3,*7,$S(DGMTYPT=1:"Means",1:"Copay")_" test cannot be completed." G Q
"RTN","DGMTSCC",21,0)
 I DGMTYPT=1,DGTYC="M",(DGNWT+DGINT-DGDET)>$P(DGMTPAR,"^",8) D ADJ G Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTSCC",22,0)
 I DGMTYPT=2,DGCAT="P" D ADJ G Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTSCC",23,0)
 S DA=DGMTI,DIE="^DGMT(408.31,",DIE("NO^")="",DR="[DGMT ENTER/EDIT COMPLETION]" D ^DIE K DA,DIE,DR I '$D(DGFIN) S DGERR=1 G Q
"RTN","DGMTSCC",24,0)
 I DGMTACT="EDT",DGMTDT>DT S (DATA(.01),DATA(.07))=DT,DATA(2)=1 I $$UPD^DGENDBS(408.31,DGMTI,.DATA)
"RTN","DGMTSCC",25,0)
 W:DGMTYPT=1 !?3,"...means test status is ",$P($$MTS^DGMTU(DFN,DGMTS),"^"),"..."
"RTN","DGMTSCC",26,0)
 W:DGMTYPT=2 !?3,"...copay test status is ",$S(DGCAT="E":"EXEMPT",DGCAT="M":"NON-EXEMPT",DGCAT="P":"PENDING ADJUDICATION",1:"INCOMPLETE"),"..."
"RTN","DGMTSCC",27,0)
 D PRT
"RTN","DGMTSCC",28,0)
 ;
"RTN","DGMTSCC",29,0)
Q K DGFIN,DGREF,DTOUT,DUOUT,Y
"RTN","DGMTSCC",30,0)
 Q
"RTN","DGMTSCC",31,0)
 ;
"RTN","DGMTSCC",32,0)
COM ;Check if user wants to complete the means test
"RTN","DGMTSCC",33,0)
 N DIR
"RTN","DGMTSCC",34,0)
 S DIR("A")="Do you wish to complete the "_$S(DGMTYPT=1:"means",1:"copay exemption")_" test"
"RTN","DGMTSCC",35,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR
"RTN","DGMTSCC",36,0)
 ; The following was added for LTC Copay Phase II (DG*5.3*433)
"RTN","DGMTSCC",37,0)
 I DGMTYPT=4,'Y D
"RTN","DGMTSCC",38,0)
 .W !,"NOTE: If you do not complete the LTC copay exemption test, the incomplete test",!?6,"will be deleted."
"RTN","DGMTSCC",39,0)
 .S DIR("A")="Do you wish to complete the copay exemption test"
"RTN","DGMTSCC",40,0)
 .S DIR("B")="YES",DIR(0)="Y" D ^DIR
"RTN","DGMTSCC",41,0)
 Q
"RTN","DGMTSCC",42,0)
 ;
"RTN","DGMTSCC",43,0)
REF ;Check if patient declines to provide income information
"RTN","DGMTSCC",44,0)
 N DIR,Y
"RTN","DGMTSCC",45,0)
 S DIR("A")="DECLINES TO GIVE INCOME INFORMATION"
"RTN","DGMTSCC",46,0)
 I $P($G(^DGMT(408.31,DGMTI,0)),"^",14)]"" S DIR("B")=$$YN^DGMTSCU1($P(^(0),"^",14))
"RTN","DGMTSCC",47,0)
 S DIR(0)="408.31,.14" D ^DIR K DIR G REFQ:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTSCC",48,0)
 S:Y DGREF="" Q:'$D(DGREF)!($D(DGREF1))!(DGMTYPT'=1)  S DGCAT="C" D STA^DGMTSCU2
"RTN","DGMTSCC",49,0)
REFQ Q
"RTN","DGMTSCC",50,0)
 ;
"RTN","DGMTSCC",51,0)
CHK ;Check if means test can be completed
"RTN","DGMTSCC",52,0)
 N DGA,DGD,DGDEP,DGREL,DGL,DGM,I
"RTN","DGMTSCC",53,0)
 D GETREL^DGMTU11(DFN,"CS",$$LYR^DGMTSCU1(DGMTDT),$S($G(DGMTI):DGMTI,1:""))
"RTN","DGMTSCC",54,0)
 S DGM=$P(DGVIR0,"^",5),DGL=$P(DGVIR0,"^",6),DGA=$P(DGVIR0,"^",7),DGD=$P(DGVIR0,"^",8)
"RTN","DGMTSCC",55,0)
 I DGM']""!(DGM&(DGL']""))!(DGM&('DGL)&(DGA']"")) W !?3,"Marital section must be completed." S DGERR=1
"RTN","DGMTSCC",56,0)
 I DGM,'$D(DGREL("S")),'$D(DGREF) W !?3,"Married is 'YES'.  An active spouse for this means test does not exist." S DGERR=1
"RTN","DGMTSCC",57,0)
 I 'DGM,$D(DGREL("S")) W !?3,"An active spouse exists for this means test. Married should be 'YES'." S DGERR=1
"RTN","DGMTSCC",58,0)
 I DGD']"" W !?3,"Dependent Children section must be completed." S DGERR=1
"RTN","DGMTSCC",59,0)
 I DGD,'$D(DGREL("C")) W !?3,"Dependent Children is 'YES'.  No active children exist." S DGERR=1
"RTN","DGMTSCC",60,0)
 I 'DGD,$D(DGREL("C")) W !?3,"Active children exist.  Dependent Children should be 'YES'." S DGERR=1
"RTN","DGMTSCC",61,0)
 I DGMTYPT=1,'$D(DGREF),DGTYC="M",'DGNWTF W !?3,"Patient's in Category A " W:$D(DGTHB) "and B " W "require property information." S DGERR=1
"RTN","DGMTSCC",62,0)
 I DGMTYPT=2,'DGNWTF,DGCAT="E",$$ASKNW^DGMTCOU W !?3,"Patient is in an 'EXEMPT' status and requires property information." S DGERR=1
"RTN","DGMTSCC",63,0)
 I DGDET>DGINT W !?3,"Patient's deductible expenses cannot exceed income." S DGERR=1
"RTN","DGMTSCC",64,0)
 Q:$G(DGERR)
"RTN","DGMTSCC",65,0)
 N CNT,ACT,DGDEP,FLAG,DGINCP
"RTN","DGMTSCC",66,0)
 D INIT^DGDEP S CNT=0 D
"RTN","DGMTSCC",67,0)
 .F  S CNT=$O(DGDEP(CNT)) Q:'CNT  I $P(DGDEP(CNT),U,2)="SPOUSE" D  Q:$G(DGERR)
"RTN","DGMTSCC",68,0)
 ..D GETIENS^DGMTU2(DFN,$P(DGDEP(CNT),U,20),DGMTDT)
"RTN","DGMTSCC",69,0)
 ..S DGINCP=$G(^DGMT(408.22,+DGIRI,"MT")) S:DGINCP FLAG=$G(FLAG)+1
"RTN","DGMTSCC",70,0)
 ..I $G(FLAG)>1 W !?3,"Patient has more than one spouse for this means test." S DGERR=1
"RTN","DGMTSCC",71,0)
 Q
"RTN","DGMTSCC",72,0)
 ;
"RTN","DGMTSCC",73,0)
ADJ ;Adjudicate the means test
"RTN","DGMTSCC",74,0)
 N DIR,Y
"RTN","DGMTSCC",75,0)
 S DIR("?",1)="Since assets exceed the threshold, the "_$S(DGMTYPT=1:"means",1:"copay")_" test can"
"RTN","DGMTSCC",76,0)
 S DIR("?",2)="be sent to adjudication.  If the "_$S(DGMTYPT=1:"means",1:"copay")_" test is not"
"RTN","DGMTSCC",77,0)
 S DIR("?")="adjudicated, the patient will be placed in "_$S(DGMTYPT=1:"Category C.",1:"Non-exempt status.")
"RTN","DGMTSCC",78,0)
 S DIR("A")="Do you wish to send this case to adjudication"
"RTN","DGMTSCC",79,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR G ADJQ:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTSCC",80,0)
 S DGCAT=$S(Y:"P",DGMTYPT=1&('Y):"C",1:"N") D STA^DGMTSCU2
"RTN","DGMTSCC",81,0)
ADJQ Q
"RTN","DGMTSCC",82,0)
 ;
"RTN","DGMTSCC",83,0)
PRT ;Print the means test 10-10F
"RTN","DGMTSCC",84,0)
 N DIR,Y
"RTN","DGMTSCC",85,0)
 S DIR("A")="PRINT 10-10F"
"RTN","DGMTSCC",86,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR G PRTQ:'Y!($D(DTOUT))!($D(DUOUT))
"RTN","DGMTSCC",87,0)
 D QUE
"RTN","DGMTSCC",88,0)
PRTQ Q
"RTN","DGMTSCC",89,0)
 ;
"RTN","DGMTSCC",90,0)
QUE ;Ask device and queue output
"RTN","DGMTSCC",91,0)
 I '$D(DGIO(10)) W !!,*7,"THIS OUTPUT REQUIRES 132 COLUMN OUTPUT TO THE PRINTER.",! S %ZIS="QM",%ZIS("B")="",IOP="Q" D ^%ZIS G Q:POP I IO=IO(0),$E(IOST,1,2)="C-" W !,*7,"CANNOT QUEUE TO HOME DEVICE!",! G QUE
"RTN","DGMTSCC",92,0)
 K:$D(IO("Q")) IO("Q")
"RTN","DGMTSCC",93,0)
 S ZTRTN="START^DGMTP",ZTDTH=$H,ZTDESC="Print 10-10F"
"RTN","DGMTSCC",94,0)
 F I="DFN","DGMTI","DGMTDT","DGMTYPT" S ZTSAVE(I)=""
"RTN","DGMTSCC",95,0)
 S ZTIO=$S($D(DGIO(10)):DGIO(10),1:ION) D ^%ZTLOAD
"RTN","DGMTSCC",96,0)
 W !,$S($D(ZTSK):"REQUEST QUEUED!",1:"REQUEST CANCELLED!")
"RTN","DGMTSCC",97,0)
 K ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","DGMTSCC",98,0)
 Q
"RTN","DGMTSCU2")
0^6^B7979328
"RTN","DGMTSCU2",1,0)
DGMTSCU2 ;ALB/RMO,CAW - Means Test Screen Variable Utilities ;6 FEB 1992 7:45 am
"RTN","DGMTSCU2",2,0)
 ;;5.3;Registration;**45,130,433**;Aug 13, 1993
"RTN","DGMTSCU2",3,0)
 ;
"RTN","DGMTSCU2",4,0)
SET ;Set required means test variables
"RTN","DGMTSCU2",5,0)
 ; Input  -- DFN      Patient file IEN
"RTN","DGMTSCU2",6,0)
 ;           DGMTDT   Date of Test
"RTN","DGMTSCU2",7,0)
 ;           DGMTYPT  Type of Test 1=MT 2=COPAY
"RTN","DGMTSCU2",8,0)
 ;           DGMTI    Annual Means Test IEN
"RTN","DGMTSCU2",9,0)
 ;           DGMTPAR  Annual Means Test Parameters
"RTN","DGMTSCU2",10,0)
 ;           DGVIRI   Veteran Income Relation IEN
"RTN","DGMTSCU2",11,0)
 ;           DGVINI   Veteran Individual Annual Income IEN
"RTN","DGMTSCU2",12,0)
 ; Output -- All output variables in tags DEP, INC^DGMTSCU3, CAT and STA
"RTN","DGMTSCU2",13,0)
 D DEP,INC^DGMTSCU3,CAT,STA
"RTN","DGMTSCU2",14,0)
 Q
"RTN","DGMTSCU2",15,0)
 ;
"RTN","DGMTSCU2",16,0)
DEP ;Determine dependent data
"RTN","DGMTSCU2",17,0)
 ; Input  -- DFN     Patient file IEN
"RTN","DGMTSCU2",18,0)
 ;           DGMTDT  Date of Test
"RTN","DGMTSCU2",19,0)
 ;           DGVIRI  Veteran Income Relation IEN
"RTN","DGMTSCU2",20,0)
 ; Output -- DGVIR0  Veteran Income Relation 0th node
"RTN","DGMTSCU2",21,0)
 ;           DGSP    Spouse 1=YES and 0=NO (mt income)
"RTN","DGMTSCU2",22,0)
 ;           DGDC    Dependent children 1=YES and 0=NO (mt income)
"RTN","DGMTSCU2",23,0)
 ;           DGNC    Number of dependent children
"RTN","DGMTSCU2",24,0)
 ;           DGND    Total number of dependents
"RTN","DGMTSCU2",25,0)
 N DGCNT,DGDEP,DGINR,DGREL,Y
"RTN","DGMTSCU2",26,0)
 S DGVIR0=$G(^DGMT(408.22,DGVIRI,0)) D ALL^DGMTU21(DFN,"SC",DGMTDT,"PR",$S($G(DGMTI):DGMTI,1:""))
"RTN","DGMTSCU2",27,0)
 S DGSP=$S('$P(DGVIR0,"^",5)!('$G(DGREL("S"))):0,$P(DGVIR0,"^",6):1,$P(DGVIR0,"^",7)>599:1,1:0)
"RTN","DGMTSCU2",28,0)
 S DGDC=+$P(DGVIR0,"^",8) I DGDC S (DGDC,DGCNT)=0 F  S DGCNT=$O(DGINR("C",DGCNT)) Q:'DGCNT!(DGDC)  D CHK S:Y DGDC=1
"RTN","DGMTSCU2",29,0)
 S DGNC=+$P(DGVIR0,"^",13)
"RTN","DGMTSCU2",30,0)
 S DGND=DGSP+DGNC
"RTN","DGMTSCU2",31,0)
 Q
"RTN","DGMTSCU2",32,0)
 ;
"RTN","DGMTSCU2",33,0)
CHK ;Check if child has income which is available to the veteran
"RTN","DGMTSCU2",34,0)
 S Y=0
"RTN","DGMTSCU2",35,0)
 I $D(^DGMT(408.22,+$G(DGINR("C",DGCNT)),0)),$P(^(0),"^",11),$P(^(0),"^",12) S Y=1
"RTN","DGMTSCU2",36,0)
 Q
"RTN","DGMTSCU2",37,0)
 ;
"RTN","DGMTSCU2",38,0)
CAT ;Determine means test thresholds and category
"RTN","DGMTSCU2",39,0)
 ; Input  -- DGMTDT   Date of Test
"RTN","DGMTSCU2",40,0)
 ;           DGND     Total number of dependents
"RTN","DGMTSCU2",41,0)
 ;           DGINT    Total income
"RTN","DGMTSCU2",42,0)
 ;           DGDET    Total deductible expenses
"RTN","DGMTSCU2",43,0)
 ;           DGMTPAR  Annual Means Test Parameters
"RTN","DGMTSCU2",44,0)
 ; Output -- DGTHA    Category A threshold
"RTN","DGMTSCU2",45,0)
 ;           DGTHB    Category B threshold
"RTN","DGMTSCU2",46,0)
 ;           DGCAT    Means/Copay test category code
"RTN","DGMTSCU2",47,0)
 N DGCOST,DGCOPS S DGCAT=""
"RTN","DGMTSCU2",48,0)
 ;  Added for LTC Copay Phase II - DG*5.3*433
"RTN","DGMTSCU2",49,0)
 I DGMTYPT=4 D  Q
"RTN","DGMTSCU2",50,0)
 .N Y S Y=$$THRES^EASECMT(DFN,DGMTDT) Q:Y=-1
"RTN","DGMTSCU2",51,0)
 .S DGCAT=$S(Y:0,1:1),DGTHA=""
"RTN","DGMTSCU2",52,0)
 I $$ACT^DGMTDD(4,DGMTDT) S DGTHA=$P(DGMTPAR,"^",2)+$S(DGND:$P(DGMTPAR,"^",3),1:0)+$S((DGND-1)>0:($P(DGMTPAR,"^",4)*(DGND-1)),1:0) S:(DGINT-DGDET)'>DGTHA DGCAT="A"
"RTN","DGMTSCU2",53,0)
 I $$ACT^DGMTDD(5,DGMTDT) S DGTHB=$P(DGMTPAR,"^",5)+$S(DGND:$P(DGMTPAR,"^",6),1:0)+$S((DGND-1)>0:($P(DGMTPAR,"^",7)*(DGND-1)),1:0) I DGCAT']"",(DGINT-DGDET)'>DGTHB S DGCAT="B"
"RTN","DGMTSCU2",54,0)
 I DGCAT']"",$$ACT^DGMTDD(6,DGMTDT) S DGCAT="C"
"RTN","DGMTSCU2",55,0)
 I $D(DGREF),DGMTYPT=1,$D(DGREF1) S DGCAT="C"
"RTN","DGMTSCU2",56,0)
 I DGMTYPT=2 D
"RTN","DGMTSCU2",57,0)
 .S DGCOST=DGMTDT_U_DFN_U_U_DGINT_U_DGNWT,$P(DGCOST,U,14)=$S($D(DGREF):1,1:0),$P(DGCOST,U,15)=DGDET,$P(DGCOST,U,18)=DGND,$P(DGCOST,U,19)=2
"RTN","DGMTSCU2",58,0)
 .S DGCOPS=$$INCDT^IBARXEU1(DGCOST)
"RTN","DGMTSCU2",59,0)
 .S DGCAT=$S(+DGCOPS=1:"E",+DGCOPS=2:"M",+DGCOPS=3:"P",1:"I")
"RTN","DGMTSCU2",60,0)
 .S (DGTHA,DGTHB)=""
"RTN","DGMTSCU2",61,0)
 Q
"RTN","DGMTSCU2",62,0)
 ;
"RTN","DGMTSCU2",63,0)
STA ;Determine means test status and type of care
"RTN","DGMTSCU2",64,0)
 ; Input  -- DGCAT   Means test category code
"RTN","DGMTSCU2",65,0)
 ;           DGMTYPT Type of Test 1=MT 2=COPAY
"RTN","DGMTSCU2",66,0)
 ; Output -- DGMTS   Means test status IEN
"RTN","DGMTSCU2",67,0)
 ;           DGTYC   Type of care
"RTN","DGMTSCU2",68,0)
 S DGMTS=+$O(^DG(408.32,"AC",DGMTYPT,DGCAT,0))
"RTN","DGMTSCU2",69,0)
 S DGTYC=$P($G(^DG(408.32,DGMTS,0)),"^",3)
"RTN","DGMTSCU2",70,0)
 Q
"RTN","DGMTU")
0^5^B53142426
"RTN","DGMTU",1,0)
DGMTU ;ALB/RMO - Means Test Utilities ; 4/03/02
"RTN","DGMTU",2,0)
 ;;5.3;Registration;**4,33,182,277,290,374,358,420,426,411,332,433**;Aug 13, 1993
"RTN","DGMTU",3,0)
 ;
"RTN","DGMTU",4,0)
LST(DFN,DGDT,DGMTYPT) ;Last means test for a patient
"RTN","DGMTU",5,0)
 ;         Input  -- DFN   Patient IEN
"RTN","DGMTU",6,0)
 ;                   DGDT  Date/Time  (Optional- default today@2359)
"RTN","DGMTU",7,0)
 ;                DGMTYPT  Type of Test (Optional - if not defined 
"RTN","DGMTU",8,0)
 ;                                       Means Test will be assumed)
"RTN","DGMTU",9,0)
 ;         Output -- Annual Means Test IEN^Date of Test
"RTN","DGMTU",10,0)
 ;                   ^Status Name^Status Code^Source of Test
"RTN","DGMTU",11,0)
 N DGIDT,DGMTFL1,DGMTI,DGNOD,Y I '$D(DGMTYPT) S DGMTYPT=1
"RTN","DGMTU",12,0)
 S DGIDT=$S($G(DGDT)>0:-DGDT,1:-DT) S:'$P(DGIDT,".",2) DGIDT=DGIDT_.2359
"RTN","DGMTU",13,0)
 F  S DGIDT=+$O(^DGMT(408.31,"AID",DGMTYPT,DFN,DGIDT)) Q:'DGIDT!$G(DGMTFL1)  D
"RTN","DGMTU",14,0)
 .F DGMTI=0:0 S DGMTI=+$O(^DGMT(408.31,"AID",DGMTYPT,DFN,DGIDT,DGMTI)) Q:'DGMTI!$G(DGMTFL1)  D
"RTN","DGMTU",15,0)
 ..S DGNOD=$G(^DGMT(408.31,DGMTI,0)) I DGNOD,$G(^("PRIM"))!(DGMTYPT=4) S DGMTFL1=1,Y=DGMTI_"^"_$P(^(0),"^")_"^"_$$MTS(DFN,+$P(^(0),"^",3))_"^"_$P(DGNOD,"^",23) ; chk for primary MT
"RTN","DGMTU",16,0)
 Q $G(Y)
"RTN","DGMTU",17,0)
 ;
"RTN","DGMTU",18,0)
LVMT(DFN,DGDT) ;Last valid means test (status other than required)
"RTN","DGMTU",19,0)
 ;          Input  -- DFN    Patient IEN
"RTN","DGMTU",20,0)
 ;                    DGDT   Date (Optional - default today)
"RTN","DGMTU",21,0)
 ;          Output -- Annual Means Test IEN^Date of Test^Status Name
"RTN","DGMTU",22,0)
 ;                     ^Status Code
"RTN","DGMTU",23,0)
 N DGMT,DGMTL
"RTN","DGMTU",24,0)
 S:'$D(DGDT) DGDT=DT S DGMTL=$$LST^DGMTU(DFN,DGDT)
"RTN","DGMTU",25,0)
 I $P(DGMTL,"^",4)="R" F  S DGMT=$$LST^DGMTU(DFN,DGDT) Q:DGMT']""!($P(DGMT,U,4)'="R")  S DGDT=$P(DGMT,U,2)-1
"RTN","DGMTU",26,0)
 Q $S($G(DGMT)]"":DGMT,1:$G(DGMTL))
"RTN","DGMTU",27,0)
 ;
"RTN","DGMTU",28,0)
NVMT(DFN,DGDT) ;Next valid means test (status other than required)
"RTN","DGMTU",29,0)
 ;          Input  -- DFN    Patient IEN
"RTN","DGMTU",30,0)
 ;                    DGDT   Date (Required)
"RTN","DGMTU",31,0)
 ;          Output -- Annual Means Test IEN^Date of Test^Status Name
"RTN","DGMTU",32,0)
 ;                     ^Status Code
"RTN","DGMTU",33,0)
 N DGDTE,DGMT,DGMT0,DGMTI,DGMTPR,DGMTS
"RTN","DGMTU",34,0)
 S DGDTE=DGDT
"RTN","DGMTU",35,0)
 F  S DGDTE=$O(^DGMT(408.31,"AD",1,DFN,DGDTE)) Q:'DGDTE!$G(DGMT)  D
"RTN","DGMTU",36,0)
 .F DGMTI=0:0 S DGMTI=$O(^DGMT(408.31,"AD",1,DFN,DGDTE,DGMTI)) Q:'DGMTI  S DGMT0=$G(^DGMT(408.31,DGMTI,0)),DGMTS=+$P(DGMT0,"^",3),DGMTPR=$G(^("PRIM")) I +DGMT0,DGMTS'=1,DGMTPR S DGMT=DGMTI_"^"_+DGMT0_"^"_$$MTS^DGMTU(DFN,DGMTS) Q
"RTN","DGMTU",37,0)
 Q $G(DGMT)
"RTN","DGMTU",38,0)
 ;
"RTN","DGMTU",39,0)
MTS(DFN,DGMTS) ;Means test status -- default current
"RTN","DGMTU",40,0)
 ;         Input  -- DFN    Patient IEN
"RTN","DGMTU",41,0)
 ;                   DGMTS  Means Test Status IEN  (Optional)
"RTN","DGMTU",42,0)
 ;         Output -- Status Name^Status Code
"RTN","DGMTU",43,0)
 N Y
"RTN","DGMTU",44,0)
 S DGMTS=$S($G(DGMTS)>0:DGMTS,1:$P($G(^DPT(DFN,0)),"^",14))
"RTN","DGMTU",45,0)
 I DGMTS S Y=$P($G(^DG(408.32,DGMTS,0)),"^",1,2)
"RTN","DGMTU",46,0)
 Q $G(Y)
"RTN","DGMTU",47,0)
 ;
"RTN","DGMTU",48,0)
DIS(DFN) ;Display patients current means test status,
"RTN","DGMTU",49,0)
 ;        eligibility for care, deductible information,
"RTN","DGMTU",50,0)
 ;        date of test and date of completion
"RTN","DGMTU",51,0)
 ;         Input  -- DFN    Patient IEN
"RTN","DGMTU",52,0)
 ;         Output -- None
"RTN","DGMTU",53,0)
 N DGCS,DGDED,DGMTI,DGMT0
"RTN","DGMTU",54,0)
 S DGCS=$P($G(^DPT(DFN,0)),"^",14) G DISQ:DGCS=""
"RTN","DGMTU",55,0)
 S DGMTI=+$$LST^DGMTU(DFN),DGMT0=$G(^DGMT(408.31,DGMTI,0))
"RTN","DGMTU",56,0)
 S MTSIG=$P(DGMT0,"^",29)
"RTN","DGMTU",57,0)
 W !,"Means Test Signed?: ",$S(MTSIG=1:"YES",MTSIG=0:"NO",MTSIG=9:"DELETED",1:"")
"RTN","DGMTU",58,0)
 I DGCS=1 W !!,"Patient Requires a Means Test"
"RTN","DGMTU",59,0)
 I DGCS=2 W !!,"Patient's Means Test is Pending Adjudication"
"RTN","DGMTU",60,0)
 I DGCS=3 W !!,"Means Test Not Required"
"RTN","DGMTU",61,0)
 I ("^4^5^6^")[("^"_DGCS_"^") W !!,"Patient is Category ",$P($$MTS(DFN,DGCS),"^",2)," based on primary means test"
"RTN","DGMTU",62,0)
 I $D(^DG(408.32,DGCS,"MSG")) W !,^("MSG")
"RTN","DGMTU",63,0)
 I DGCS=6 S DGDED=$P(DGMT0,"^",11) W ! W:DGDED]"" "Has",$S(DGDED:"",1:" not")," agreed to pay the deductible"
"RTN","DGMTU",64,0)
 S Y=$P(DGMT0,"^") X ^DD("DD") W !,"Primary Means Test ",$S(DGCS=1:"Required from",1:"Last Applied")," '",Y,"'"
"RTN","DGMTU",65,0)
 I ("^2^4^5^6^")[("^"_DGCS_"^") S Y=$P(DGMT0,"^",7) X ^DD("DD") W " (COMPLETED: ",Y,")"
"RTN","DGMTU",66,0)
 I DGCS=3 S Y=$P(DGMT0,"^",17) X ^DD("DD") W " (NO LONGER REQUIRED: ",Y,")"
"RTN","DGMTU",67,0)
DISQ Q
"RTN","DGMTU",68,0)
 ;
"RTN","DGMTU",69,0)
EDT(DFN,DGDT) ;Display patients current means test information and provide
"RTN","DGMTU",70,0)
 ;        the user with the option of proceeding with a required
"RTN","DGMTU",71,0)
 ;        means test or editing an existing means test
"RTN","DGMTU",72,0)
 ;         Input  -- DFN    Patient IEN
"RTN","DGMTU",73,0)
 ;                   DGDT   Date/Time
"RTN","DGMTU",74,0)
 ;         Output -- None
"RTN","DGMTU",75,0)
 ;
"RTN","DGMTU",76,0)
 ; obtain lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTU",77,0)
 I $$LOCK^DGMTUTL(DFN)
"RTN","DGMTU",78,0)
 ;
"RTN","DGMTU",79,0)
 D DIS(DFN)
"RTN","DGMTU",80,0)
 S DGMTI=+$$LST(DFN,DGDT) G EDTQ:'DGMTI!(DGMTI'=+$$LST^DGMTU(DFN))
"RTN","DGMTU",81,0)
 S DGMT0=$G(^DGMT(408.31,DGMTI,0)),DGMTDT=+DGMT0,DGMTS=$P(DGMT0,"^",3)
"RTN","DGMTU",82,0)
 S DIR("A")="Do you wish to "_$S(DGMTS=1:"proceed with",1:"edit")_" the means test at this time"
"RTN","DGMTU",83,0)
 S DIR("B")=$S(DGMTS=1:"YES",1:"NO"),DIR(0)="Y"
"RTN","DGMTU",84,0)
 W ! D ^DIR G EDTQ:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTU",85,0)
 I Y S DGMTYPT=1,DGMTACT="EDT",DGMTROU="EDTQ^DGMTU" G EN^DGMTSC
"RTN","DGMTU",86,0)
EDTQ K DGMT0,DGMTACT,DGMTDT,DGMTI,DGMTROU,DGMTS,DIR,DTOUT,DUOUT,Y
"RTN","DGMTU",87,0)
 ;
"RTN","DGMTU",88,0)
 ; release lock
"RTN","DGMTU",89,0)
 D UNLOCK^DGMTUTL(DFN)
"RTN","DGMTU",90,0)
 ;
"RTN","DGMTU",91,0)
 Q
"RTN","DGMTU",92,0)
 ;
"RTN","DGMTU",93,0)
CMTS(DFN) ;Get Current Means Test Status - query HEC if necessary
"RTN","DGMTU",94,0)
 ;
"RTN","DGMTU",95,0)
 ;        Input: DFN=patient ien
"RTN","DGMTU",96,0)
 ;       Output: MT IEN^Date of Test^Status Name
"RTN","DGMTU",97,0)
 ;                 ^Status Code^Source of Test
"RTN","DGMTU",98,0)
 ;
"RTN","DGMTU",99,0)
 N X,Y,DGMTDATA,DGQSENT,DGDOD,NODE0,DGRET,DGMFLG,DGTAG,DGMTYPT
"RTN","DGMTU",100,0)
 S DGMTYPT=1,DGMTDATA=$$LST(DFN,"",DGMTYPT)
"RTN","DGMTU",101,0)
 ;Next line checks to see if patient has expired, if so, Query not initiated
"RTN","DGMTU",102,0)
 S DGDOD=$P($G(^DPT(DFN,.35)),U)
"RTN","DGMTU",103,0)
 I +DGDOD Q DGMTDATA
"RTN","DGMTU",104,0)
 ;Next line checks to see if current test exists, if not, Query not initiated 
"RTN","DGMTU",105,0)
 I '$G(DGMTDATA) Q DGMTDATA
"RTN","DGMTU",106,0)
 D:+$$QFLG(DGMTDATA)
"RTN","DGMTU",107,0)
 .I $G(IVMZ10)'="UPLOAD IN PROGRESS",'$$OPEN^IVMCQ2(DFN),'$$SENT^IVMCQ2(DFN),$G(DGMFLG)'=0 D
"RTN","DGMTU",108,0)
 ..I $$LOCK^DGMTUTL(DFN)
"RTN","DGMTU",109,0)
 ..D QRYQUE2^IVMCQ2(DFN,$G(DUZ),0,$G(XQY)) S DGQSENT=1
"RTN","DGMTU",110,0)
 ..I '$D(ZTQUEUED),'$G(DGMSGF),$G(DGQSENT) W !!,"Financial query queued to be sent to HEC...",! H .5
"RTN","DGMTU",111,0)
 ..D UNLOCK^DGMTUTL(DFN)
"RTN","DGMTU",112,0)
 .S DGMTDATA=$$LST(DFN,"",DGMTYPT)
"RTN","DGMTU",113,0)
 D:+$$MFLG(DGMTDATA)
"RTN","DGMTU",114,0)
 .S DGMFLG=$$MFLG(DGMTDATA)
"RTN","DGMTU",115,0)
 .S DGTAG=$S(DGMFLG=1:"MSG"_DGMFLG,DGMFLG=2:"MSG"_DGMFLG,1:0)
"RTN","DGMTU",116,0)
 .I DGTAG["MSG",'$G(DGMSGF) D @DGTAG
"RTN","DGMTU",117,0)
 Q DGMTDATA   ;return most current MT data
"RTN","DGMTU",118,0)
MFLG(DGMTDATA) ;Set up appropriate informational message flag for user's
"RTN","DGMTU",119,0)
 ;benefit.
"RTN","DGMTU",120,0)
 ;Input        -     DGMTDATA as defined by $$LST function.
"RTN","DGMTU",121,0)
 ;Output       -     DGRETV
"RTN","DGMTU",122,0)
 ;                   1 = Current Test is REQUIRED
"RTN","DGMTU",123,0)
 ;                   2 = Test is > 365 days old and is in a status of 
"RTN","DGMTU",124,0)
 ;                       other than REQUIRED or NO LONGER REQUIRED
"RTN","DGMTU",125,0)
 ;                   0 = CAT C/Pend Adj. and test date is 10/6/99 or 
"RTN","DGMTU",126,0)
 ;                       greater and has agreed to the deductible.
"RTN","DGMTU",127,0)
 ;               OR  0 = Cat C, declined income info and has agreed 
"RTN","DGMTU",128,0)
 ;                       to pay deductible.
"RTN","DGMTU",129,0)
 ;               OR  0 = Has a future dated Means Test
"RTN","DGMTU",130,0)
 N DGRETV,FTST
"RTN","DGMTU",131,0)
 S DGRETV=0
"RTN","DGMTU",132,0)
 I $P($G(DGMTDATA),U,4)="R" S DGRETV=1
"RTN","DGMTU",133,0)
 I $$OLD^DGMTU4($P(DGMTDATA,U,2)),($P($G(DGMTDATA),U,4)'="N")&($P($G(DGMTDATA),U,4)'="R") S DGRETV=2
"RTN","DGMTU",134,0)
 I ($P($G(DGMTDATA),U,4)="C")!($P($G(DGMTDATA),U,4)="P"),$P($G(DGMTDATA),U,2)>2991005,$P($G(^DGMT(408.31,+DGMTDATA,0)),U,11)=1 S DGRETV=0
"RTN","DGMTU",135,0)
 I ($P($G(DGMTDATA),U,4)="C"),+$P($G(^DGMT(408.31,+DGMTDATA,0)),U,14),+$P($G(^DGMT(408.31,+DGMTDATA,0)),U,11) S DGRETV=0
"RTN","DGMTU",136,0)
 D DOM^DGMTR I $G(DGDOM) S DGRETV=0
"RTN","DGMTU",137,0)
 S FTST=$$FUT(DFN)
"RTN","DGMTU",138,0)
 I DGRETV,FTST,$P(^DGMT(408.31,+FTST,0),U,19)=1 S DGRETV=0
"RTN","DGMTU",139,0)
 Q DGRETV
"RTN","DGMTU",140,0)
MSG1 ;Informational message 1
"RTN","DGMTU",141,0)
 N NODE0,Y
"RTN","DGMTU",142,0)
 S NODE0=$G(^DGMT(408.31,+DGMTDATA,0))
"RTN","DGMTU",143,0)
 W !!,$C(7),?15,"*** Patient Requires a Means Test ***",!
"RTN","DGMTU",144,0)
 S Y=$P(NODE0,U) X ^DD("DD") W !,?14,"Primary Means Test Required from "_Y,!
"RTN","DGMTU",145,0)
 I $G(IOST)["C-" R !!,"Enter <RETURN> to continue.",DGRET:DTIME
"RTN","DGMTU",146,0)
 Q
"RTN","DGMTU",147,0)
MSG2 ;Informational message 2
"RTN","DGMTU",148,0)
 N NODE0,Y
"RTN","DGMTU",149,0)
 S NODE0=$G(^DGMT(408.31,+DGMTDATA,0))
"RTN","DGMTU",150,0)
 W !!,$C(7),?17,"*** Patient Requires a Means Test ***",!
"RTN","DGMTU",151,0)
 S Y=$P(NODE0,U) X ^DD("DD") W !,?10,"Patient's Test dated "_Y_" is "_$P(DGMTDATA,U,3)_"."_" The test"
"RTN","DGMTU",152,0)
 W !,?10,"date is greater than 365 days old.  Please update."
"RTN","DGMTU",153,0)
 I $G(IOST)["C-" R !!,"Enter <RETURN> to continue.",DGRET:DTIME
"RTN","DGMTU",154,0)
 Q
"RTN","DGMTU",155,0)
QFLG(DGMTDATA) ;
"RTN","DGMTU",156,0)
 ;INPUT - DGMTDATA
"RTN","DGMTU",157,0)
 ;OUTPUT- IVMQFLG 1 if query is necessary 0 if not
"RTN","DGMTU",158,0)
 N IVMQFLG
"RTN","DGMTU",159,0)
 S IVMQFLG=0
"RTN","DGMTU",160,0)
 ;Set flag to 1 if Means test is Required.
"RTN","DGMTU",161,0)
 I $P($G(DGMTDATA),U,4)="R" S IVMQFLG=1
"RTN","DGMTU",162,0)
 ;Set flag to 1 if Means test is older than 365 days and status is not
"RTN","DGMTU",163,0)
 ;equal to No Longer Required and not equal to REQUIRED.
"RTN","DGMTU",164,0)
 I $$OLD^DGMTU4($P(DGMTDATA,U,2)),($P($G(DGMTDATA),U,4)'="N")&($P($G(DGMTDATA),U,4)'="R") S IVMQFLG=1
"RTN","DGMTU",165,0)
 ;If Cat C/Pending Adj.,older than 365 days,agreed to pay, test date >
"RTN","DGMTU",166,0)
 ;10/5/99 reset flag to 0 - no query is necessary.
"RTN","DGMTU",167,0)
 I ($P($G(DGMTDATA),U,4)="C")!($P($G(DGMTDATA),U,4)="P"),$P($G(DGMTDATA),U,2)>2991005,$P($G(^DGMT(408.31,+DGMTDATA,0)),U,11)=1 S IVMQFLG=0
"RTN","DGMTU",168,0)
 ;If patient is Cat C, declined to provide income info but has agreed to
"RTN","DGMTU",169,0)
 ;pay deductible, no query necessary - reset flag to 0
"RTN","DGMTU",170,0)
 I (+$P($G(DGMTDATA),U,4)="C"),+$P($G(^DGMT(408.31,+DGMTDATA,0)),U,14),+$P($G(^DGMT(408.31,+DGMTDATA,0)),U,11) S DGRETV=0
"RTN","DGMTU",171,0)
 ;If patient is on a DOM ward, don't initiate query
"RTN","DGMTU",172,0)
 D DOM^DGMTR I $G(DGDOM) S IVMQFLG=0
"RTN","DGMTU",173,0)
 Q IVMQFLG
"RTN","DGMTU",174,0)
 ;
"RTN","DGMTU",175,0)
FUT(DFN,DGDT,DGMTYPT) ; Future Means Tests for a patient
"RTN","DGMTU",176,0)
 ; Input:
"RTN","DGMTU",177,0)
 ;       DFN      Patient IEN
"RTN","DGMTU",178,0)
 ;       DGDT     Date (Optional- default to today)
"RTN","DGMTU",179,0)
 ;       DGMTYPT  Type of Test (Optional - default to Means Test)
"RTN","DGMTU",180,0)
 ; Output:
"RTN","DGMTU",181,0)
 ;       If a DCD test was performed it will be returned, else the
"RTN","DGMTU",182,0)
 ;       earliest performed future test for the Income Year.
"RTN","DGMTU",183,0)
 ;       Future MT IEN^Date of Test (Future)^Status Name^Status Code^
"RTN","DGMTU",184,0)
 ;       Source of Test
"RTN","DGMTU",185,0)
 ;
"RTN","DGMTU",186,0)
 N DGIDT,Y,MTIEN,SRCE,DONE,MTNOD,ARR,FIRST,TYPTST
"RTN","DGMTU",187,0)
 S:'$D(DGMTYPT) DGMTYPT=1
"RTN","DGMTU",188,0)
 S TYPTST=$S(DGMTYPT=2:"AF",1:"AE")
"RTN","DGMTU",189,0)
 S DGIDT=$S($G(DGDT)>0:DGDT,1:DT),DONE=0
"RTN","DGMTU",190,0)
 S (ARR,FIRST,Y)=""
"RTN","DGMTU",191,0)
 S:$P(DGIDT,".",2) DGIDT=$P(DGIDT,".")
"RTN","DGMTU",192,0)
 F  S DGIDT=$O(^IVM(301.5,TYPTST,DFN,DGIDT)) Q:'DGIDT!(DONE)  D
"RTN","DGMTU",193,0)
 .S MTIEN=0
"RTN","DGMTU",194,0)
 .F  S MTIEN=$O(^IVM(301.5,TYPTST,DFN,DGIDT,MTIEN)) Q:'MTIEN!(DONE)  D
"RTN","DGMTU",195,0)
 ..Q:'$D(^DGMT(408.31,MTIEN,0))
"RTN","DGMTU",196,0)
 ..S MTNOD=^DGMT(408.31,MTIEN,0),SRCE=$P(MTNOD,U,23)
"RTN","DGMTU",197,0)
 ..I SRCE'=1 S DONE=1,Y=MTIEN_U_$P(MTNOD,U)_U_$$MTS^DGMTU(DFN,+$P(MTNOD,U,3))_U_$P(MTNOD,U,23) Q
"RTN","DGMTU",198,0)
 ..I 'DONE,'$D(ARR($P(MTNOD,U))) S ARR($P(MTNOD,U))=MTIEN_U_$P(MTNOD,U)_U_$$MTS^DGMTU(DFN,+$P(MTNOD,U,3))_U_$P(MTNOD,U,23)
"RTN","DGMTU",199,0)
 I 'DONE S FIRST=$O(ARR("")) I FIRST S Y=ARR(FIRST)
"RTN","DGMTU",200,0)
 Q $G(Y)
"RTN","DGMTU3")
0^9^B7002090
"RTN","DGMTU3",1,0)
DGMTU3 ;ALB/MLI - Internal Entry Number Utility Calls ; June 1, 1994
"RTN","DGMTU3",2,0)
 ;;5.3;Registration;**33,45,137,182,300,433**;Aug 13, 1993
"RTN","DGMTU3",3,0)
 ;
"RTN","DGMTU3",4,0)
 ; This routine will return the IENs for the primary income
"RTN","DGMTU3",5,0)
 ; test from various files.
"RTN","DGMTU3",6,0)
 ;
"RTN","DGMTU3",7,0)
MTIEN(TYPE,DFN,INVDT) ; get last primary income test for date
"RTN","DGMTU3",8,0)
 ;
"RTN","DGMTU3",9,0)
 ; Input  -- TYPE as 1 for means test, 2 for copay test
"RTN","DGMTU3",10,0)
 ;           DFN as Patient IEN
"RTN","DGMTU3",11,0)
 ;           INVDT as inverse date for search
"RTN","DGMTU3",12,0)
 ; Output -- Record IEN
"RTN","DGMTU3",13,0)
 ;
"RTN","DGMTU3",14,0)
 N I
"RTN","DGMTU3",15,0)
 F I=0:0 S I=$O(^DGMT(408.31,"AID",TYPE,DFN,INVDT,I)) Q:'I  I +$G(^DGMT(408.31,I,"PRIM")) Q
"RTN","DGMTU3",16,0)
 Q I
"RTN","DGMTU3",17,0)
 ;
"RTN","DGMTU3",18,0)
 ;
"RTN","DGMTU3",19,0)
IAI(REL,YEAR,DGMTYPT) ; get individual annual income IEN for primary income test/pt relation
"RTN","DGMTU3",20,0)
 ;
"RTN","DGMTU3",21,0)
 ; Input  -- REL as IEN of PATIENT RELATION file
"RTN","DGMTU3",22,0)
 ;           YEAR as income year in question
"RTN","DGMTU3",23,0)
 ;           DGMTYPT as type of test (optional if not defined means test
"RTN","DGMTU3",24,0)
 ;                   will be assumed)
"RTN","DGMTU3",25,0)
 ; Output -- Record IEN
"RTN","DGMTU3",26,0)
 ;
"RTN","DGMTU3",27,0)
 N DFN,I,IEN,INR,MTIEN,LAST
"RTN","DGMTU3",28,0)
 S DFN=+$G(^DGPR(408.12,+REL,0)) I 'DFN G IAIQ
"RTN","DGMTU3",29,0)
 S MTIEN=$S($G(DGMTACT)'="VEW":$$LST^DGMTU(DFN,$E(YEAR,1,3)+1_"1231.99",$S($G(DGMTYPT):DGMTYPT,1:1)),1:DGMTI) ; If user selects view option, set IEN=DGMTI
"RTN","DGMTU3",30,0)
 I MTIEN S LAST=0 D
"RTN","DGMTU3",31,0)
 . F I=0:0 S I=$O(^DGMT(408.21,"AI",+REL,-YEAR,I)) Q:'I  S LAST=I,INR=$O(^DGMT(408.22,"AIND",I,"")) I +$G(^DGMT(408.22,+INR,"MT"))=+MTIEN Q
"RTN","DGMTU3",32,0)
 . S IEN=LAST
"RTN","DGMTU3",33,0)
 . ; The following was added for LTC Copay Phase II (DG*5.3*433)
"RTN","DGMTU3",34,0)
 . ; If the IAI record is associated with a LTC Copay Test (type 3),
"RTN","DGMTU3",35,0)
 . ; don't return it if DGMTYPT is not type 3.
"RTN","DGMTU3",36,0)
 . Q:'$G(^DGMT(408.21,IEN,"MT"))
"RTN","DGMTU3",37,0)
 . I $P($G(^DGMT(408.31,+^DGMT(408.21,IEN,"MT"),0)),U,19)=3,$G(DGMTYPT)'=3 S IEN=""
"RTN","DGMTU3",38,0)
 ; if veteran doesn't have a mt
"RTN","DGMTU3",39,0)
 I 'MTIEN D
"RTN","DGMTU3",40,0)
 . ; The following was added for LTC Copay Phase II (DG*5.3*433)
"RTN","DGMTU3",41,0)
 . ; If the IAI record is associated with a LTC Copay Test (type 3),
"RTN","DGMTU3",42,0)
 . ; don't return it if DGMTYPT is not type 3.
"RTN","DGMTU3",43,0)
 . S IEN="" F I=0:0 S I=$O(^DGMT(408.21,"AI",+REL,-YEAR,I)) Q:'I  S IEN=I Q:'$G(^DGMT(408.21,IEN,"MT"))  D  Q:IEN
"RTN","DGMTU3",44,0)
 .. I $P($G(^DGMT(408.31,+^DGMT(408.21,IEN,"MT"),0)),U,19)=3,$G(DGMTYPT)'=3 S IEN=""
"RTN","DGMTU3",45,0)
IAIQ Q $G(IEN)
"RTN","DGMTU3",46,0)
 ;
"RTN","DGMTU3",47,0)
 ;
"RTN","DGMTU3",48,0)
MTIENLT(TYPE,DFN,INVDTL) ; get last primary income test on or before date
"RTN","DGMTU3",49,0)
 ;
"RTN","DGMTU3",50,0)
 ; Input  -- TYPE as 1 for means test, 2 for copay test
"RTN","DGMTU3",51,0)
 ;           DFN as Patient IEN
"RTN","DGMTU3",52,0)
 ;           INVDTL as inverse date for search
"RTN","DGMTU3",53,0)
 ; Output -- Record IEN
"RTN","DGMTU3",54,0)
 ;
"RTN","DGMTU3",55,0)
 N K
"RTN","DGMTU3",56,0)
 S K=""
"RTN","DGMTU3",57,0)
 F  S INVDTL=$O(^DGMT(408.31,"AID",TYPE,DFN,INVDTL)) Q:'INVDTL  S K=$$MTIEN(TYPE,DFN,INVDTL) Q:K
"RTN","DGMTU3",58,0)
 Q K
"VER")
8.0^22
"^DD",408.21,408.21,1.01,0)
MEDICAL EXPENSES^NJ8,2X^^1;1^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 D EN^DDIOL(""  ""_X,"""",""?0"")" K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",408.21,408.21,1.01,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",408.21,408.21,1.01,4)
D:$G(DGMTYPT)=3 101^EASECDD
"^DD",408.21,408.21,1.01,21,0)
^.001^13^13^3010906^^^
"^DD",408.21,408.21,1.01,21,1,0)
Enter in this field the total amount of unreimbursed medical expenses
"^DD",408.21,408.21,1.01,21,2,0)
paid by the veteran during the previous calendar year.  The expenses
"^DD",408.21,408.21,1.01,21,3,0)
can be for the veteran or for members of the veteran's family.
"^DD",408.21,408.21,1.01,21,4,0)
Reportable medical expenses include amounts paid for the following:
"^DD",408.21,408.21,1.01,21,5,0)
fees of physicians, dentists, and other providers of health services;
"^DD",408.21,408.21,1.01,21,6,0)
hospital and nursing home fees; medical insurance premiums (including
"^DD",408.21,408.21,1.01,21,7,0)
the Medicare premium); drugs and medicines; eyeglasses; any other
"^DD",408.21,408.21,1.01,21,8,0)
expenses that are reasonable related to medical care.  The expenses
"^DD",408.21,408.21,1.01,21,9,0)
must actually have been paid by the veteran.  Do not list expenses
"^DD",408.21,408.21,1.01,21,10,0)
which have not been paid or which have been paid by someone other
"^DD",408.21,408.21,1.01,21,11,0)
than the veteran.  Do not list expenses which the veteran has paid if
"^DD",408.21,408.21,1.01,21,12,0)
the veteran expects to receive reimbursement from insurance or some
"^DD",408.21,408.21,1.01,21,13,0)
other source.
"^DD",408.21,408.21,1.01,"DT")
3020506
"^DD",408.21,408.21,1.02,0)
FUNERAL AND BURIAL EXPENSES^NJ8,2X^^1;2^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 D EN^DDIOL(""  ""_X,"""",""?0"")" K:X'?.N.1".".2N!(X>9999999)!(X<0) X D:$G(DGMTYPT)'=3 FUN^DGMTDD3:$D(X)
"^DD",408.21,408.21,1.02,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",408.21,408.21,1.02,4)
D:$G(DGMTYPT)=3 102^EASECDD
"^DD",408.21,408.21,1.02,21,0)
^.001^4^4^3010906^^
"^DD",408.21,408.21,1.02,21,1,0)
Enter in this field amounts paid by the veteran during the previous
"^DD",408.21,408.21,1.02,21,2,0)
calendar year for funeral or burial expenses of the veteran's
"^DD",408.21,408.21,1.02,21,3,0)
spouse or child.  Do not report amounts paid for funeral or
"^DD",408.21,408.21,1.02,21,4,0)
burial expenses of other relatives such as parents, siblings, etc.
"^DD",408.21,408.21,1.02,"DT")
3020506
"^DD",408.21,408.21,1.03,0)
EDUCATIONAL EXPENSES^NJ8,2X^^1;3^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 D EN^DDIOL(""  ""_X,"""",""?0"")" K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",408.21,408.21,1.03,3)

"^DD",408.21,408.21,1.03,4)
D:$G(DGMTYPT)'=3 EDHLP^DGMTDD3 D:$G(DGMTYPT)=3 103^EASECDD
"^DD",408.21,408.21,1.03,21,0)
^.001^2^2^3010906^^^^
"^DD",408.21,408.21,1.03,21,1,0)
Enter amounts paid by the veteran during the previous calendar year
"^DD",408.21,408.21,1.03,21,2,0)
for educational expenses.
"^DD",408.21,408.21,1.03,"DT")
3020506
"^DD",408.21,408.21,1.04,0)
RENT/MORTGAGE^NJ10,2X^^1;4^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 D EN^DDIOL(""  ""_X,"""",""?0"")" K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",408.21,408.21,1.04,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",408.21,408.21,1.04,21,0)
^^4^4^3020211^^
"^DD",408.21,408.21,1.04,21,1,0)
Enter in this field the annual amount paid for Rent or Mortgage during
"^DD",408.21,408.21,1.04,21,2,0)
the current calendar year.
"^DD",408.21,408.21,1.04,21,3,0)
  
"^DD",408.21,408.21,1.04,21,4,0)
A monthly amount can be entered with an '*' after it.
"^DD",408.21,408.21,1.04,"DT")
3020506
"^DD",408.21,408.21,1.05,0)
UTILITIES^NJ10,2X^^1;5^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 D EN^DDIOL(""  ""_X,"""",""?0"")" K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",408.21,408.21,1.05,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",408.21,408.21,1.05,21,0)
^.001^4^4^3020211^^
"^DD",408.21,408.21,1.05,21,1,0)
Enter in this field the annual amount paid for Utilities during the
"^DD",408.21,408.21,1.05,21,2,0)
current calendar year.
"^DD",408.21,408.21,1.05,21,3,0)
 
"^DD",408.21,408.21,1.05,21,4,0)
A monthly amount can be entered with an '*' after it.
"^DD",408.21,408.21,1.05,"DT")
3020506
"^DD",408.21,408.21,1.06,0)
CAR PAYMENT^NJ10,2X^^1;6^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 D EN^DDIOL(""  ""_X,"""",""?0"")" K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",408.21,408.21,1.06,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",408.21,408.21,1.06,21,0)
^.001^5^5^3020211^^^
"^DD",408.21,408.21,1.06,21,1,0)
Enter in this field the annual amount paid for Car Payments during the
"^DD",408.21,408.21,1.06,21,2,0)
current calendar year.  This amount excludes gas, insurance, and parking
"^DD",408.21,408.21,1.06,21,3,0)
fees.
"^DD",408.21,408.21,1.06,21,4,0)
 
"^DD",408.21,408.21,1.06,21,5,0)
A monthly amount can be entered with an '*' after it.
"^DD",408.21,408.21,1.06,"DT")
3020506
"^DD",408.21,408.21,1.07,0)
FOOD^NJ10,2X^^1;7^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 D EN^DDIOL(""  ""_X,"""",""?0"")" K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",408.21,408.21,1.07,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",408.21,408.21,1.07,21,0)
^.001^4^4^3020211^^
"^DD",408.21,408.21,1.07,21,1,0)
Enter in this field the annual amount paid for Food during the current
"^DD",408.21,408.21,1.07,21,2,0)
calendar year.
"^DD",408.21,408.21,1.07,21,3,0)
 
"^DD",408.21,408.21,1.07,21,4,0)
A monthly amount can be entered with an '*' after it.
"^DD",408.21,408.21,1.07,"DT")
3020506
"^DD",408.21,408.21,1.08,0)
COURT-ORDERED PAYMENTS^NJ10,2X^^1;8^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 D EN^DDIOL(""  ""_X,"""",""?0"")" K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",408.21,408.21,1.08,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",408.21,408.21,1.08,21,0)
^^4^4^3020211^
"^DD",408.21,408.21,1.08,21,1,0)
Enter in this field the annual amount paid for Court-Ordered Payments
"^DD",408.21,408.21,1.08,21,2,0)
during this current calendar year.
"^DD",408.21,408.21,1.08,21,3,0)
 
"^DD",408.21,408.21,1.08,21,4,0)
A monthly amount can be entered with an '*' after it.
"^DD",408.21,408.21,1.08,"DT")
3020506
"^DD",408.21,408.21,1.09,0)
INSURANCE^NJ10,2X^^1;9^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 D EN^DDIOL(""  ""_X,"""",""?0"")" K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",408.21,408.21,1.09,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",408.21,408.21,1.09,21,0)
^.001^4^4^3020211^^
"^DD",408.21,408.21,1.09,21,1,0)
Enter in this field the annual amount paid for Insurance during the
"^DD",408.21,408.21,1.09,21,2,0)
current calendar year.  This amount should exclude life insurance.
"^DD",408.21,408.21,1.09,21,3,0)
 
"^DD",408.21,408.21,1.09,21,4,0)
A monthly amount can be entered with an '*' after it.
"^DD",408.21,408.21,1.09,"DT")
3020506
"^DD",408.21,408.21,1.1,0)
TAXES^NJ10,2X^^1;10^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 D EN^DDIOL(""  ""_X,"""",""?0"")" K:X'?.N.1".".2N!(X>9999999)!(X<0)!(X?.E1"."3.N) X
"^DD",408.21,408.21,1.1,3)
Type a Dollar amount between 0 and 9999999, 2 Decimal Digits
"^DD",408.21,408.21,1.1,21,0)
^.001^4^4^3020312^^^^
"^DD",408.21,408.21,1.1,21,1,0)
Enter in this field the annual amount paid for Taxes during the current
"^DD",408.21,408.21,1.1,21,2,0)
calendar year.  This includes income tax, property and personal tax.
"^DD",408.21,408.21,1.1,21,3,0)
 
"^DD",408.21,408.21,1.1,21,4,0)
A monthly amount can be entered with an '*' after it.
"^DD",408.21,408.21,1.1,"DT")
3020506
"^DD",408.21,408.21,1.11,0)
TAXES (PROPERTY,PERSONAL)^NJ10,2X^^1;11^S:X["$" X=$P(X,"$",2) X:X["*" "S X=X*12 W ""  "",X" K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",408.21,408.21,1.11,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",408.21,408.21,1.11,21,0)
^.001^4^4^3020211^^
"^DD",408.21,408.21,1.11,21,1,0)
Enter in this field the total amount of Taxes (personal, property)
"^DD",408.21,408.21,1.11,21,2,0)
paid during the current calendar year.
"^DD",408.21,408.21,1.11,21,3,0)
 
"^DD",408.21,408.21,1.11,21,4,0)
A monthly amount can be entered with an '*' after it.
"^DD",408.21,408.21,1.11,"DT")
3020211
"^DD",408.31,408.31,.11,0)
AGREED TO PAY DEDUCTIBLE^S^1:YES;0:NO;^0;11^Q
"^DD",408.31,408.31,.11,1,0)
^.1
"^DD",408.31,408.31,.11,1,1,0)
408.31^AAPD^MUMPS
"^DD",408.31,408.31,.11,1,1,1)
D:$G(DGMTYPT)<3 AUTOUPD^DGENA2(+$P(^DGMT(408.31,DA,0),U,2),2)
"^DD",408.31,408.31,.11,1,1,2)
D:$G(DGMTYPT)<3 AUTOUPD^DGENA2(+$P(^DGMT(408.31,DA,0),U,2),2)
"^DD",408.31,408.31,.11,1,1,"%D",0)
^.101^3^3^3020129^^^^
"^DD",408.31,408.31,.11,1,1,"%D",1,0)
Trigger to update Enrollment when updating the Agree to Pay Deductible
"^DD",408.31,408.31,.11,1,1,"%D",2,0)
field. Trigger routine is not called for a LTC copay test (type 3) or a
"^DD",408.31,408.31,.11,1,1,"%D",3,0)
LTC copay exemption test (type 4).
"^DD",408.31,408.31,.11,1,1,"DT")
3020129
"^DD",408.31,408.31,.11,3)
Enter in this field whether the veteran agrees to pay the deductible.  The veteran must also sign the 1010f form agreeing to pay the deductible.
"^DD",408.31,408.31,.11,21,0)
^^3^3^2920326^^^^
"^DD",408.31,408.31,.11,21,1,0)
Enter in this field whether the veteran agrees to pay the
"^DD",408.31,408.31,.11,21,2,0)
deductible.  The veteran must also sign the 1010f form agreeing
"^DD",408.31,408.31,.11,21,3,0)
to pay the deductible.
"^DD",408.31,408.31,.11,"DT")
3020129
"^DD",408.31,408.31,2.08,0)
LINKED LTC CO-PAY/MEANS TEST^P408.31'^DGMT(408.31,^2;8^Q
"^DD",408.31,408.31,2.08,1,0)
^.1
"^DD",408.31,408.31,2.08,1,1,0)
408.31^AT
"^DD",408.31,408.31,2.08,1,1,1)
S ^DGMT(408.31,"AT",$E(X,1,30),DA)=""
"^DD",408.31,408.31,2.08,1,1,2)
K ^DGMT(408.31,"AT",$E(X,1,30),DA)
"^DD",408.31,408.31,2.08,1,1,"DT")
3011217
"^DD",408.31,408.31,2.08,21,0)
^^4^4^3011217^
"^DD",408.31,408.31,2.08,21,1,0)
If this is a LTC CO-PAY TEST (type 3), this field will point to the
"^DD",408.31,408.31,2.08,21,2,0)
LTC CO-PAY EXEMPTION TEST (type 4) associated with this test.  If this
"^DD",408.31,408.31,2.08,21,3,0)
is a LTC CO-PAY EXEMPTION TEST (type 4), this field will point to the
"^DD",408.31,408.31,2.08,21,4,0)
MEANS TEST (type 1) associated with this the test.
"^DD",408.31,408.31,2.08,"DT")
3011217
"^DD",408.32,408.32,0)
FIELD^^100^8
"^DD",408.32,408.32,0,"DT")
2921230
"^DD",408.32,408.32,0,"ID",.019)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DG(408.33,+$P(^(0),U,19),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(408.33,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",408.32,408.32,0,"IX","AC",408.32,.019)

"^DD",408.32,408.32,0,"IX","AC1",408.32,.02)

"^DD",408.32,408.32,0,"IX","B",408.32,.01)

"^DD",408.32,408.32,0,"IX","C",408.32,.02)

"^DD",408.32,408.32,0,"NM","MEANS TEST STATUS")

"^DD",408.32,408.32,0,"PT",2,.14)

"^DD",408.32,408.32,0,"PT",27.11,50.14)

"^DD",408.32,408.32,0,"PT",301.6,1.01)

"^DD",408.32,408.32,0,"PT",408.31,.03)

"^DD",408.32,408.32,0,"PT",408.31,2.03)

"^DD",408.32,408.32,.001,0)
ENTRY NUMBER^NJ3,0I^^ ^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
"^DD",408.32,408.32,.001,3)
Type a Number between 1 and 100, 0 Decimal Digits
"^DD",408.32,408.32,.001,21,0)
^^1^1^2920408^
"^DD",408.32,408.32,.001,21,1,0)
Enter in this field the internal entry number associated with this status.
"^DD",408.32,408.32,.001,"DT")
2920114
"^DD",408.32,408.32,.01,0)
NAME^RFI^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",408.32,408.32,.01,1,0)
^.1
"^DD",408.32,408.32,.01,1,1,0)
408.32^B
"^DD",408.32,408.32,.01,1,1,1)
S ^DG(408.32,"B",$E(X,1,30),DA)=""
"^DD",408.32,408.32,.01,1,1,2)
K ^DG(408.32,"B",$E(X,1,30),DA)
"^DD",408.32,408.32,.01,1,1,"%D",0)
^^1^1^2920408^
"^DD",408.32,408.32,.01,1,1,"%D",1,0)
This cross-reference allows look-up by name.
"^DD",408.32,408.32,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",408.32,408.32,.01,21,0)
^^1^1^2921228^^
"^DD",408.32,408.32,.01,21,1,0)
Enter in this field the name of the financial test status.
"^DD",408.32,408.32,.01,"DEL",1,0)
I 1 W !,*7,"Deletion of a means test status is not allowed."
"^DD",408.32,408.32,.01,"DT")
2930202
"^DD",408.32,408.32,.019,0)
TYPE OF TEST^RP408.33'I^DG(408.33,^0;19^Q
"^DD",408.32,408.32,.019,1,0)
^.1
"^DD",408.32,408.32,.019,1,1,0)
408.32^AC^MUMPS
"^DD",408.32,408.32,.019,1,1,1)
S:$P(^DG(408.32,DA,0),U,2) ^DG(408.32,"AC",X,+$P(^(0),U,2),DA)=""
"^DD",408.32,408.32,.019,1,1,2)
K ^DG(408.32,"AC",X,+$P(^DG(408.32,DA,0),U,2),DA)
"^DD",408.32,408.32,.019,1,1,"%D",0)
^^2^2^2921230^
"^DD",408.32,408.32,.019,1,1,"%D",1,0)
This cross reference can be used to sort by type of test by code by
"^DD",408.32,408.32,.019,1,1,"%D",2,0)
internal entry number.
"^DD",408.32,408.32,.019,1,1,"DT")
2921230
"^DD",408.32,408.32,.019,3)
Enter the type of test associated with the status.
"^DD",408.32,408.32,.019,"DT")
2930202
"^DD",408.32,408.32,.02,0)
CODE^RFI^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>1!($L(X)<1) X
"^DD",408.32,408.32,.02,1,0)
^.1
"^DD",408.32,408.32,.02,1,1,0)
408.32^C
"^DD",408.32,408.32,.02,1,1,1)
S ^DG(408.32,"C",$E(X,1,30),DA)=""
"^DD",408.32,408.32,.02,1,1,2)
K ^DG(408.32,"C",$E(X,1,30),DA)
"^DD",408.32,408.32,.02,1,1,"%D",0)
^^1^1^2920408^
"^DD",408.32,408.32,.02,1,1,"%D",1,0)
This cross-reference allows look-up by code.
"^DD",408.32,408.32,.02,1,1,"DT")
2920107
"^DD",408.32,408.32,.02,1,2,0)
408.32^AC1^MUMPS
"^DD",408.32,408.32,.02,1,2,1)
S:$P(^DG(408.32,DA,0),U,19) ^DG(408.32,"AC",+$P(^(0),U,19),X,DA)=""
"^DD",408.32,408.32,.02,1,2,2)
K ^DG(408.32,"AC",+$P(^DG(408.32,DA,0),U,19),X,DA)
"^DD",408.32,408.32,.02,1,2,"%D",0)
^^2^2^2921230^^^^
"^DD",408.32,408.32,.02,1,2,"%D",1,0)
This cross reference can be used to sort by type of test by code by
"^DD",408.32,408.32,.02,1,2,"%D",2,0)
internal entry number.
"^DD",408.32,408.32,.02,1,2,"DT")
2921230
"^DD",408.32,408.32,.02,3)
Answer must be 1 character in length.
"^DD",408.32,408.32,.02,21,0)
^^1^1^2921228^^
"^DD",408.32,408.32,.02,21,1,0)
Enter in this field the code associated with the financial test status.
"^DD",408.32,408.32,.02,"DT")
2930302
"^DD",408.32,408.32,.03,0)
TYPE OF CARE^RS^D:DISCRETIONARY;M:MANDATORY;N:NOT APPLICABLE;^0;3^Q
"^DD",408.32,408.32,.03,3)
Enter in this field the type of care the financial test status is associated with.
"^DD",408.32,408.32,.03,21,0)
^^2^2^2921228^^
"^DD",408.32,408.32,.03,21,1,0)
Enter in this field the type of care the financial test status is
"^DD",408.32,408.32,.03,21,2,0)
associated with.
"^DD",408.32,408.32,.03,"DT")
2920224
"^DD",408.32,408.32,50,0)
DESCRIPTION^408.321^^D;0
"^DD",408.32,408.32,50,21,0)
^^1^1^2921228^^
"^DD",408.32,408.32,50,21,1,0)
Enter in this field the description associated with the financial test status.
"^DD",408.32,408.32,75,0)
EFFECTIVE DATE^408.3275DA^^E;0
"^DD",408.32,408.32,75,21,0)
^^1^1^2921228^^
"^DD",408.32,408.32,75,21,1,0)
Enter in this field the effective date of the financial test status.
"^DD",408.32,408.32,100,0)
MESSAGE^F^^MSG;1^K:$L(X)>80!($L(X)<1) X
"^DD",408.32,408.32,100,3)
Answer must be 1-80 characters in length.
"^DD",408.32,408.32,100,21,0)
^^1^1^2921228^^
"^DD",408.32,408.32,100,21,1,0)
Enter in this field the message associated with the financial test status.
"^DD",408.32,408.32,100,"DT")
2920214
"^DD",408.32,408.321,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",408.32,408.321,0,"DT")
2920103
"^DD",408.32,408.321,0,"NM","DESCRIPTION")

"^DD",408.32,408.321,0,"UP")
408.32
"^DD",408.32,408.321,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",408.32,408.321,.01,3)
Enter in this field the description associated with the means test status.
"^DD",408.32,408.321,.01,21,0)
^^1^1^2920408^
"^DD",408.32,408.321,.01,21,1,0)
Enter in this field the description associated with the means test status.
"^DD",408.32,408.321,.01,"DT")
2920103
"^DD",408.32,408.3275,0)
EFFECTIVE DATE SUB-FIELD^^.02^2
"^DD",408.32,408.3275,0,"DT")
2920221
"^DD",408.32,408.3275,0,"IX","AID",408.3275,.01)

"^DD",408.32,408.3275,0,"IX","B",408.3275,.01)

"^DD",408.32,408.3275,0,"NM","EFFECTIVE DATE")

"^DD",408.32,408.3275,0,"UP")
408.32
"^DD",408.32,408.3275,.01,0)
EFFECTIVE DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",408.32,408.3275,.01,1,0)
^.1
"^DD",408.32,408.3275,.01,1,1,0)
408.3275^B
"^DD",408.32,408.3275,.01,1,1,1)
S ^DG(408.32,DA(1),"E","B",$E(X,1,30),DA)=""
"^DD",408.32,408.3275,.01,1,1,2)
K ^DG(408.32,DA(1),"E","B",$E(X,1,30),DA)
"^DD",408.32,408.3275,.01,1,1,"%D",0)
^^1^1^2920408^
"^DD",408.32,408.3275,.01,1,1,"%D",1,0)
This cross-reference allows look-up by effective date.
"^DD",408.32,408.3275,.01,1,2,0)
408.3275^AID^MUMPS
"^DD",408.32,408.3275,.01,1,2,1)
S ^DG(408.32,DA(1),"E","AID",-X,DA)=""
"^DD",408.32,408.3275,.01,1,2,2)
K ^DG(408.32,DA(1),"E","AID",-X,DA)
"^DD",408.32,408.3275,.01,1,2,"%D",0)
^^3^3^2920408^
"^DD",408.32,408.3275,.01,1,2,"%D",1,0)
This cross-reference can be used to sort by means test status
"^DD",408.32,408.3275,.01,1,2,"%D",2,0)
internal entry number by inverse effective data by internal
"^DD",408.32,408.3275,.01,1,2,"%D",3,0)
entry number of the effective date.
"^DD",408.32,408.3275,.01,1,2,"DT")
2920221
"^DD",408.32,408.3275,.01,3)
Enter in this field the effective date of the financial test status.
"^DD",408.32,408.3275,.01,21,0)
^^1^1^2921228^^^
"^DD",408.32,408.3275,.01,21,1,0)
Enter in this field the effective date of the financial test status.
"^DD",408.32,408.3275,.01,"DT")
2920221
"^DD",408.32,408.3275,.02,0)
ACTIVE^RS^1:YES;0:NO;^0;2^Q
"^DD",408.32,408.3275,.02,3)
Enter in this field whether or not the effective date of the financial test status is active.
"^DD",408.32,408.3275,.02,21,0)
^^2^2^2921228^^^
"^DD",408.32,408.3275,.02,21,1,0)
Enter in this field whether or not the effective date of the financial test
"^DD",408.32,408.3275,.02,21,2,0)
status is active.
"^DD",408.32,408.3275,.02,"DT")
2920221
"^DD",408.33,408.33,0)
FIELD^^.01^2
"^DD",408.33,408.33,0,"DDA")
N
"^DD",408.33,408.33,0,"DT")
2921224
"^DD",408.33,408.33,0,"IX","B",408.33,.01)

"^DD",408.33,408.33,0,"NM","TYPE OF TEST")

"^DD",408.33,408.33,0,"PT",408.31,.019)

"^DD",408.33,408.33,0,"PT",408.32,.019)

"^DD",408.33,408.33,0,"PT",408.41,.019)

"^DD",408.33,408.33,.001,0)
NUMBER^NJ3,0I^^ ^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
"^DD",408.33,408.33,.001,3)
Type a Number between 1 and 100, 0 Decimal Digits
"^DD",408.33,408.33,.001,21,0)
^.001^2^2^3000407^^
"^DD",408.33,408.33,.001,21,1,0)
Enter in this field the internal entry number associated with this type of
"^DD",408.33,408.33,.001,21,2,0)
test.
"^DD",408.33,408.33,.001,"DT")
2930126
"^DD",408.33,408.33,.01,0)
NAME^RFI^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",408.33,408.33,.01,1,0)
^.1
"^DD",408.33,408.33,.01,1,1,0)
408.33^B
"^DD",408.33,408.33,.01,1,1,1)
S ^DG(408.33,"B",$E(X,1,30),DA)=""
"^DD",408.33,408.33,.01,1,1,2)
K ^DG(408.33,"B",$E(X,1,30),DA)
"^DD",408.33,408.33,.01,3)
Answer must be 3-30 characters in length.
"^DD",408.33,408.33,.01,21,0)
^.001^1^1^3000407^^
"^DD",408.33,408.33,.01,21,1,0)
Enter in this field the name of the type of test.
"^DD",408.33,408.33,.01,"DT")
2930126
"^DIC",408.32,408.32,0)
MEANS TEST STATUS
"^DIC",408.32,408.32,0,"GL")
^DG(408.32,
"^DIC",408.32,408.32,"%D",0)
^^1^1^2990427^^
"^DIC",408.32,408.32,"%D",1,0)
This file contains the statuses associated with the means test.
"^DIC",408.32,"B","MEANS TEST STATUS",408.32)

"^DIC",408.33,408.33,0)
TYPE OF TEST^408.33
"^DIC",408.33,408.33,0,"GL")
^DG(408.33,
"^DIC",408.33,408.33,"%D",0)
^^2^2^2930114^^
"^DIC",408.33,408.33,"%D",1,0)
This file contains the types of test assoicated with financial data
"^DIC",408.33,408.33,"%D",2,0)
collected.
"^DIC",408.33,"B","TYPE OF TEST",408.33)

**INSTALL NAME**
IVM*2.0*49
"BLD",3608,0)
IVM*2.0*49^INCOME VERIFICATION MATCH^0^3020603^y
"BLD",3608,4,0)
^9.64PA^301.5^1
"BLD",3608,4,301.5,0)
301.5
"BLD",3608,4,301.5,2,0)
^9.641^301.5^1
"BLD",3608,4,301.5,2,301.5,0)
IVM PATIENT  (File-top level)
"BLD",3608,4,301.5,2,301.5,1,0)
^9.6411^.11^1
"BLD",3608,4,301.5,2,301.5,1,.11,0)
LTC COPAY EXMPT TEST DELETE DT
"BLD",3608,4,301.5,222)
y^n^p^^^^n
"BLD",3608,4,"APDD",301.5,301.5)

"BLD",3608,4,"APDD",301.5,301.5,.11)

"BLD",3608,4,"B",301.5,301.5)

"BLD",3608,"ABPKG")
n
"BLD",3608,"KRN",0)
^9.67PA^8989.52^19
"BLD",3608,"KRN",.4,0)
.4
"BLD",3608,"KRN",.401,0)
.401
"BLD",3608,"KRN",.402,0)
.402
"BLD",3608,"KRN",.403,0)
.403
"BLD",3608,"KRN",.5,0)
.5
"BLD",3608,"KRN",.84,0)
.84
"BLD",3608,"KRN",3.6,0)
3.6
"BLD",3608,"KRN",3.8,0)
3.8
"BLD",3608,"KRN",9.2,0)
9.2
"BLD",3608,"KRN",9.8,0)
9.8
"BLD",3608,"KRN",9.8,"NM",0)
^9.68A^15^15
"BLD",3608,"KRN",9.8,"NM",1,0)
IVMCM^^0^B73593148
"BLD",3608,"KRN",9.8,"NM",2,0)
IVMCM1^^0^B34492739
"BLD",3608,"KRN",9.8,"NM",3,0)
IVMCM5^^0^B16846940
"BLD",3608,"KRN",9.8,"NM",4,0)
IVMCMC^^0^B22707524
"BLD",3608,"KRN",9.8,"NM",5,0)
IVMCME^^0^B11899624
"BLD",3608,"KRN",9.8,"NM",6,0)
IVMCME2^^0^B10084704
"BLD",3608,"KRN",9.8,"NM",7,0)
IVMCME4^^0^B16983245
"BLD",3608,"KRN",9.8,"NM",8,0)
IVMCMB^^0^B16093169
"BLD",3608,"KRN",9.8,"NM",9,0)
IVMCMD^^0^B37811469
"BLD",3608,"KRN",9.8,"NM",10,0)
IVMCM6^^0^B69311692
"BLD",3608,"KRN",9.8,"NM",11,0)
IVMCME5^^0^B36387771
"BLD",3608,"KRN",9.8,"NM",12,0)
IVMPTRN9^^0^B22592380
"BLD",3608,"KRN",9.8,"NM",13,0)
IVMCZMT^^0^B48182574
"BLD",3608,"KRN",9.8,"NM",14,0)
IVMPLOG^^0^B38975037
"BLD",3608,"KRN",9.8,"NM",15,0)
IVMPMTE^^0^B6176210
"BLD",3608,"KRN",9.8,"NM","B","IVMCM",1)

"BLD",3608,"KRN",9.8,"NM","B","IVMCM1",2)

"BLD",3608,"KRN",9.8,"NM","B","IVMCM5",3)

"BLD",3608,"KRN",9.8,"NM","B","IVMCM6",10)

"BLD",3608,"KRN",9.8,"NM","B","IVMCMB",8)

"BLD",3608,"KRN",9.8,"NM","B","IVMCMC",4)

"BLD",3608,"KRN",9.8,"NM","B","IVMCMD",9)

"BLD",3608,"KRN",9.8,"NM","B","IVMCME",5)

"BLD",3608,"KRN",9.8,"NM","B","IVMCME2",6)

"BLD",3608,"KRN",9.8,"NM","B","IVMCME4",7)

"BLD",3608,"KRN",9.8,"NM","B","IVMCME5",11)

"BLD",3608,"KRN",9.8,"NM","B","IVMCZMT",13)

"BLD",3608,"KRN",9.8,"NM","B","IVMPLOG",14)

"BLD",3608,"KRN",9.8,"NM","B","IVMPMTE",15)

"BLD",3608,"KRN",9.8,"NM","B","IVMPTRN9",12)

"BLD",3608,"KRN",19,0)
19
"BLD",3608,"KRN",19.1,0)
19.1
"BLD",3608,"KRN",101,0)
101
"BLD",3608,"KRN",409.61,0)
409.61
"BLD",3608,"KRN",771,0)
771
"BLD",3608,"KRN",870,0)
870
"BLD",3608,"KRN",8989.51,0)
8989.51
"BLD",3608,"KRN",8989.52,0)
8989.52
"BLD",3608,"KRN",8994,0)
8994
"BLD",3608,"KRN","B",.4,.4)

"BLD",3608,"KRN","B",.401,.401)

"BLD",3608,"KRN","B",.402,.402)

"BLD",3608,"KRN","B",.403,.403)

"BLD",3608,"KRN","B",.5,.5)

"BLD",3608,"KRN","B",.84,.84)

"BLD",3608,"KRN","B",3.6,3.6)

"BLD",3608,"KRN","B",3.8,3.8)

"BLD",3608,"KRN","B",9.2,9.2)

"BLD",3608,"KRN","B",9.8,9.8)

"BLD",3608,"KRN","B",19,19)

"BLD",3608,"KRN","B",19.1,19.1)

"BLD",3608,"KRN","B",101,101)

"BLD",3608,"KRN","B",409.61,409.61)

"BLD",3608,"KRN","B",771,771)

"BLD",3608,"KRN","B",870,870)

"BLD",3608,"KRN","B",8989.51,8989.51)

"BLD",3608,"KRN","B",8989.52,8989.52)

"BLD",3608,"KRN","B",8994,8994)

"BLD",3608,"QUES",0)
^9.62^^
"BLD",3608,"REQB",0)
^9.611^1^1
"BLD",3608,"REQB",1,0)
IVM*2.0*34^2
"BLD",3608,"REQB","B","IVM*2.0*34",1)

"FIA",301.5)
IVM PATIENT
"FIA",301.5,0)
^IVM(301.5,
"FIA",301.5,0,0)
301.5IP
"FIA",301.5,0,1)
y^n^p^^^^n
"FIA",301.5,0,10)

"FIA",301.5,0,11)

"FIA",301.5,0,"RLRO")

"FIA",301.5,0,"VR")
2.0^IVM
"FIA",301.5,301.5)
1
"FIA",301.5,301.5,.11)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
49^3020603
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","IVMCM")
0^1^B73593148
"RTN","IVMCM",1,0)
IVMCM ;ALB/SEK,KCL,RTK,AEG,BRM - PROCESS INCOME TEST (Z10) TRANSMISSIONS ; 4/17/02 4:30pm
"RTN","IVMCM",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**12,17,28,41,44,53,34,49**;21-OCT-94
"RTN","IVMCM",3,0)
 ;
"RTN","IVMCM",4,0)
 ;
"RTN","IVMCM",5,0)
ORF ; Handler for ORF type HL7 messages received from HEC
"RTN","IVMCM",6,0)
 ;
"RTN","IVMCM",7,0)
 N CNT,IVMRTN,SEGCNT
"RTN","IVMCM",8,0)
 S IVMRTN="IVMCMX"  ;USE "IVMCMX" BECAUSE "IVMCM" ALREADY USED
"RTN","IVMCM",9,0)
 K ^TMP($J,IVMRTN)
"RTN","IVMCM",10,0)
 F SEGCNT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","IVMCM",11,0)
 . S CNT=0
"RTN","IVMCM",12,0)
 . S ^TMP($J,IVMRTN,SEGCNT,CNT)=HLNODE
"RTN","IVMCM",13,0)
 . F  S CNT=$O(HLNODE(CNT)) Q:'CNT  D
"RTN","IVMCM",14,0)
 . . S ^TMP($J,IVMRTN,SEGCNT,CNT)=HLNODE(CNT)
"RTN","IVMCM",15,0)
 S HLDA=HLMTIEN
"RTN","IVMCM",16,0)
 ;
"RTN","IVMCM",17,0)
 N SEG,EVENT,MSGID
"RTN","IVMCM",18,0)
 D NXTSEG^DGENUPL(HLDA,0,.SEG)
"RTN","IVMCM",19,0)
 Q:(SEG("TYPE")'="MSH")  ;would not have reached here if this happened!
"RTN","IVMCM",20,0)
 S EVENT=$P(SEG(9),$E(HLECH),2)
"RTN","IVMCM",21,0)
 ;
"RTN","IVMCM",22,0)
 ; INITIALIZE HL7 VARIABLES
"RTN","IVMCM",23,0)
 S HLEID="VAMC "_$P($$SITE^VASITE,"^",3)_" ORF-"_EVENT_" SERVER"
"RTN","IVMCM",24,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","IVMCM",25,0)
 D INIT^HLFNC2(HLEID,.HL)
"RTN","IVMCM",26,0)
 S HLEIDS=$O(^ORD(101,HLEID,775,"B",0))
"RTN","IVMCM",27,0)
 ;
"RTN","IVMCM",28,0)
 ; Handle means test signature ORF (Z06) event
"RTN","IVMCM",29,0)
 I EVENT="Z06" D ORF^IVMPREC7
"RTN","IVMCM",30,0)
 ;
"RTN","IVMCM",31,0)
 ; Handle income test ORF (Z10) event
"RTN","IVMCM",32,0)
 I EVENT="Z10" D Z10
"RTN","IVMCM",33,0)
 ;
"RTN","IVMCM",34,0)
 ; Handle enrollment/elig. ORF (Z11) event
"RTN","IVMCM",35,0)
 I EVENT="Z11" D
"RTN","IVMCM",36,0)
 .S MSGID=SEG(10)
"RTN","IVMCM",37,0)
 .D ORFZ11^DGENUPL(HLDA,MSGID)
"RTN","IVMCM",38,0)
 ;
"RTN","IVMCM",39,0)
 K ^TMP($J,IVMRTN)
"RTN","IVMCM",40,0)
 Q
"RTN","IVMCM",41,0)
 ;
"RTN","IVMCM",42,0)
 ;
"RTN","IVMCM",43,0)
Z10 ; Entry point for receipt of ORF~Z10 transmission
"RTN","IVMCM",44,0)
 ; The Income Test (Z10) transmission has the following format:
"RTN","IVMCM",45,0)
 ;
"RTN","IVMCM",46,0)
 ;       BHS           ORF msgs do not include batch header or trailer.
"RTN","IVMCM",47,0)
 ;       {MSH
"RTN","IVMCM",48,0)
 ;        PID          They will include the sequence:  MSA 
"RTN","IVMCM",49,0)
 ;        ZIC                                           QRD
"RTN","IVMCM",50,0)
 ;        ZIR                                           QRF
"RTN","IVMCM",51,0)
 ;        {ZDP         These segments will follow the MSH segment.
"RTN","IVMCM",52,0)
 ;         ZIC
"RTN","IVMCM",53,0)
 ;         ZIR
"RTN","IVMCM",54,0)
 ;        }
"RTN","IVMCM",55,0)
 ;        {ZMT
"RTN","IVMCM",56,0)
 ;        }
"RTN","IVMCM",57,0)
 ;        ZBT
"RTN","IVMCM",58,0)
 ;       }
"RTN","IVMCM",59,0)
 ;       BTS
"RTN","IVMCM",60,0)
 ;
"RTN","IVMCM",61,0)
 S IVMORF=1 ; set ORF msg flag
"RTN","IVMCM",62,0)
 S (HLEVN,IVMCT,IVMERROR,IVMCNTR)=0 ; init vars
"RTN","IVMCM",63,0)
 ;
"RTN","IVMCM",64,0)
ORU ; Entry point for receipt of ORU~Z10 trans (called by IVMPREC2)
"RTN","IVMCM",65,0)
 S IVMTYPE=5 ; set default to error condition
"RTN","IVMCM",66,0)
 N X,%DT,Y,IVMCICY S X="T",%DT="" D ^%DT S IVMCICY=Y
"RTN","IVMCM",67,0)
 S IVMCICY=$$LYR^DGMTSCU1(IVMCICY)
"RTN","IVMCM",68,0)
 ;
"RTN","IVMCM",69,0)
 ; - loop through the msg in (#772 file), and process (PROC) msgs
"RTN","IVMCM",70,0)
 S IVMDA=0 F  S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)) Q:'IVMDA  S IVMSEG=$G(^(IVMDA,0)) I $E(IVMSEG,1,3)="MSH" D PROC Q:'IVMDA
"RTN","IVMCM",71,0)
 ;
"RTN","IVMCM",72,0)
 ; - if ORF msg flag, update the Query Tran Log and send ACK
"RTN","IVMCM",73,0)
 I $G(IVMORF) D
"RTN","IVMCM",74,0)
 .I $G(DFN),$D(IVMMCI) D
"RTN","IVMCM",75,0)
 ..N IVMCR
"RTN","IVMCM",76,0)
 ..S IVMCR=$P("1^2^3^7^5^6^4","^",IVMTYPE)  ;map reason to test type
"RTN","IVMCM",77,0)
 ..D FIND^IVMCQ2(DFN,IVMMCI,HLDT,$S($D(HLERR):5,1:IVMCR),1)
"RTN","IVMCM",78,0)
 .D ACK^IVMPREC:'$D(HLERR)
"RTN","IVMCM",79,0)
 .N HLRESLTA,HLP
"RTN","IVMCM",80,0)
 .D GENACK^HLMA1(HLEID,HLMTIENS,HLEIDS,"LM",1,.HLRESLTA,"",.HLP)
"RTN","IVMCM",81,0)
 ;
"RTN","IVMCM",82,0)
 ; - if tests are uploaded, generate notification msg
"RTN","IVMCM",83,0)
 I $D(^TMP($J,"IVMBULL")) D ^IVMCMB
"RTN","IVMCM",84,0)
 ;
"RTN","IVMCM",85,0)
ENQ ;
"RTN","IVMCM",86,0)
 K IVMDA,IVMORF,IVMSEG,IVMFLGC,IVMTYPE,IVMMTIEN,IVMMTDT,IVMDGBT,IVMMCI
"RTN","IVMCM",87,0)
 K ^TMP($J,"IVMCM"),^("IVMBULL"),DGMSGF,DGADDF,IVMCPAY,IVMBULL,DFN
"RTN","IVMCM",88,0)
 Q
"RTN","IVMCM",89,0)
 ;
"RTN","IVMCM",90,0)
 ;
"RTN","IVMCM",91,0)
PROC ; Process each HL7 message from (#772) file
"RTN","IVMCM",92,0)
 ;
"RTN","IVMCM",93,0)
 N IVMFUTR,TMSTAMP,SOURCE,NODE,HSDATE,IVMZ10,DGMTP,DGMTACT,DGMTI,DGMTA
"RTN","IVMCM",94,0)
 S DGMTACT="ADD"
"RTN","IVMCM",95,0)
 D PRIOR^DGMTEVT
"RTN","IVMCM",96,0)
 S IVMZ10="UPLOAD IN PROGRESS"
"RTN","IVMCM",97,0)
 S IVMFUTR=0 ;this flag will indicate whether or not a test with a future date is being uploaded
"RTN","IVMCM",98,0)
 S IVMMTIEN=0
"RTN","IVMCM",99,0)
 ;
"RTN","IVMCM",100,0)
 S MSGID=$P(IVMSEG,HLFS,10) ; msg control id for ACK's
"RTN","IVMCM",101,0)
 ;
"RTN","IVMCM",102,0)
 ; - check if DCD messaging is enabled
"RTN","IVMCM",103,0)
 I '$$DCDON^IVMUPAR1() D PROB^IVMCMC("Facility has DCD messaging disabled") Q
"RTN","IVMCM",104,0)
 ;
"RTN","IVMCM",105,0)
 ; - check HL7 msg structure for errors
"RTN","IVMCM",106,0)
 K HLERR,^TMP($J,"IVMCM")
"RTN","IVMCM",107,0)
 D ^IVMCMC I $D(HLERR) K:HLERR="" HLERR Q
"RTN","IVMCM",108,0)
 ;
"RTN","IVMCM",109,0)
 ; Determine type of test/transmission
"RTN","IVMCM",110,0)
 S IVMTYPE=0
"RTN","IVMCM",111,0)
 ;
"RTN","IVMCM",112,0)
 ; - was a means test sent?
"RTN","IVMCM",113,0)
 I $P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2) S IVMTYPE=1 ; MT trans
"RTN","IVMCM",114,0)
 ;
"RTN","IVMCM",115,0)
 ; - if MT and CT transmitted, error - pt can't have both unless
"RTN","IVMCM",116,0)
 ;   one is a deletion, but HEC not currently handling that situation
"RTN","IVMCM",117,0)
 I IVMTYPE,$P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2) D PROB^IVMCMC("Patient  can not have both a Means Test and Copay Test") Q
"RTN","IVMCM",118,0)
 I $P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2) S IVMTYPE=2 ; CT trans
"RTN","IVMCM",119,0)
 ;
"RTN","IVMCM",120,0)
 ; - if no MT or CT or LTC then Income Screening
"RTN","IVMCM",121,0)
 I 'IVMTYPE,'$P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,2) S IVMTYPE=3 ; IS trans
"RTN","IVMCM",122,0)
 ;
"RTN","IVMCM",123,0)
 ;send an eligibility query if no eligibility code
"RTN","IVMCM",124,0)
 I '$$ELIG^IVMCUF1(DFN),'$$PENDING^DGENQRY(DFN) I $$SEND^DGENQRY1(DFN)
"RTN","IVMCM",125,0)
 ;
"RTN","IVMCM",126,0)
 ; obtain locks used to sychronize upload with local income test options
"RTN","IVMCM",127,0)
 D GETLOCKS^IVMCUPL(DFN)
"RTN","IVMCM",128,0)
 ;
"RTN","IVMCM",129,0)
 ;
"RTN","IVMCM",130,0)
MT ; If transmission is a Means Test
"RTN","IVMCM",131,0)
 N NODE0,RET,CODE,DATA
"RTN","IVMCM",132,0)
 S HLQ=$G(HL("Q"))
"RTN","IVMCM",133,0)
 S:HLQ="" HLQ=""""""
"RTN","IVMCM",134,0)
 I IVMTYPE=1 D  I $D(HLERR) G PROCQ
"RTN","IVMCM",135,0)
 .S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2))
"RTN","IVMCM",136,0)
 .S TMSTAMP=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,25))
"RTN","IVMCM",137,0)
 .S HSDATE=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,24))
"RTN","IVMCM",138,0)
 .S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,22)
"RTN","IVMCM",139,0)
 .S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,1)
"RTN","IVMCM",140,0)
 .;IVM*2.0*41 - Screen tests not > previous income year.
"RTN","IVMCM",141,0)
 .I IVMMTDT'>(IVMCICY-10000) D PROB^IVMCMC("Only Means Tests in current/previous income years are valid (not effective)") Q
"RTN","IVMCM",142,0)
 .;
"RTN","IVMCM",143,0)
 .; - perform edit checks and file MT
"RTN","IVMCM",144,0)
 .D CHKDT
"RTN","IVMCM",145,0)
 .;deletion indicator sent?
"RTN","IVMCM",146,0)
 .I $P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,3)=HLQ D  Q
"RTN","IVMCM",147,0)
 ..D
"RTN","IVMCM",148,0)
 ...;if there is a future test for that income year, delete that
"RTN","IVMCM",149,0)
 ...N IEN,DATA,IVMPAT
"RTN","IVMCM",150,0)
 ...S IEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),1,.IVMPAT)
"RTN","IVMCM",151,0)
 ...I IEN S DATA(.06)="" I $$UPD^DGENDBS(301.5,IVMPAT,.DATA)
"RTN","IVMCM",152,0)
 ...I IEN,$D(^DGMT(408.31,IEN,0)) D
"RTN","IVMCM",153,0)
 ....S IVMMTIEN=IEN
"RTN","IVMCM",154,0)
 ....S IVMFUTR=1
"RTN","IVMCM",155,0)
 ...E  D
"RTN","IVMCM",156,0)
 ....S IVMFUTR=0
"RTN","IVMCM",157,0)
 ..Q:('IVMMTIEN)
"RTN","IVMCM",158,0)
 ..S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","IVMCM",159,0)
 ..I $$EN^IVMCMD(IVMMTIEN) D
"RTN","IVMCM",160,0)
 ...S RET=$$LST^DGMTU(DFN,DT,IVMTYPE)
"RTN","IVMCM",161,0)
 ...S CODE=$S(($E($P(RET,"^",2),1,3)=$E(DT,1,3)):$P(RET,"^",4),1:"")
"RTN","IVMCM",162,0)
 ...D ADD^IVMCMB(DFN,IVMTYPE,$S(IVMFUTR:"DELETE FUTR TEST",1:"DELETE PRMRY TEST"),+$G(NODE0),$$GETCODE^DGMTH($P(NODE0,"^",3)),CODE)
"RTN","IVMCM",163,0)
 .;
"RTN","IVMCM",164,0)
 .;check timestamp - if matches current primary test and hardship matches, then this is a duplicate and does not need to be uploaded
"RTN","IVMCM",165,0)
 .I TMSTAMP D
"RTN","IVMCM",166,0)
 ..S NODE=""
"RTN","IVMCM",167,0)
 ..I IVMFUTR N IVMMTIEN S IVMMTIEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),1)
"RTN","IVMCM",168,0)
 ..Q:'IVMMTIEN
"RTN","IVMCM",169,0)
 ..S NODE=$G(^DGMT(408.31,IVMMTIEN,2))
"RTN","IVMCM",170,0)
 .S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","IVMCM",171,0)
 .I TMSTAMP,TMSTAMP=$P(NODE,"^",2),IVMMTDT=$P(NODE0,"^"),SOURCE=$P(NODE,"^",5),(HSDATE=$P(NODE,"^")) Q
"RTN","IVMCM",172,0)
 .;
"RTN","IVMCM",173,0)
 .D DELTYPE^IVMCMD(DFN,IVMMTDT,2)
"RTN","IVMCM",174,0)
 .D EN^IVMCM1
"RTN","IVMCM",175,0)
 ;
"RTN","IVMCM",176,0)
 ;
"RTN","IVMCM",177,0)
CT ; If transmission is a Copay Test
"RTN","IVMCM",178,0)
 N NODE0,RET,CODE,DATA
"RTN","IVMCM",179,0)
 I IVMTYPE=2 D  I $D(HLERR) G PROCQ
"RTN","IVMCM",180,0)
 .S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2))
"RTN","IVMCM",181,0)
 .S TMSTAMP=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,25))
"RTN","IVMCM",182,0)
 .S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,22)
"RTN","IVMCM",183,0)
 .S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,2)
"RTN","IVMCM",184,0)
 .S IVMCPAY=$$RXST^IBARXEU(DFN)
"RTN","IVMCM",185,0)
 .I IVMMTDT'>(IVMCICY-10000) D PROB^IVMCMC("Only Copay Tests in the current/previous income years are valid. (Not effective)") Q
"RTN","IVMCM",186,0)
 .; - perform edit checks and file CT
"RTN","IVMCM",187,0)
 .D CHKDT
"RTN","IVMCM",188,0)
 .;deletion indicator sent?
"RTN","IVMCM",189,0)
 .I $P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,3)=HLQ D  Q
"RTN","IVMCM",190,0)
 ..D
"RTN","IVMCM",191,0)
 ...;if there is a future test for that income year, delete that
"RTN","IVMCM",192,0)
 ...N IEN,DATA,IVMPAT
"RTN","IVMCM",193,0)
 ...S IEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),2,.IVMPAT)
"RTN","IVMCM",194,0)
 ...I IEN S DATA(.07)="" I $$UPD^DGENDBS(301.5,IVMPAT,.DATA)
"RTN","IVMCM",195,0)
 ...I IEN,$D(^DGMT(408.31,IEN,0)) D
"RTN","IVMCM",196,0)
 ....S IVMMTIEN=IEN
"RTN","IVMCM",197,0)
 ....S IVMFUTR=1
"RTN","IVMCM",198,0)
 ...E  D
"RTN","IVMCM",199,0)
 ....S IVMFUTR=0
"RTN","IVMCM",200,0)
 ..Q:('IVMMTIEN)
"RTN","IVMCM",201,0)
 ..S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","IVMCM",202,0)
 ..I $$EN^IVMCMD(IVMMTIEN) D
"RTN","IVMCM",203,0)
 ...S RET=$$LST^DGMTU(DFN,DT,IVMTYPE)
"RTN","IVMCM",204,0)
 ...S CODE=$S(($E($P(RET,"^",2),1,3)=$E(DT,1,3)):$P(RET,"^",4),1:"")
"RTN","IVMCM",205,0)
 ...D ADD^IVMCMB(DFN,IVMTYPE,$S(IVMFUTR:"DELETE FUTR TEST",1:"DELETE PRMRY TEST"),+$G(NODE0),$$GETCODE^DGMTH($P(NODE0,"^",3)),CODE)
"RTN","IVMCM",206,0)
 .;
"RTN","IVMCM",207,0)
 .;check timestamp - if matches current primary test, then this is a duplicate and does not need to be uploaded
"RTN","IVMCM",208,0)
 .I TMSTAMP D
"RTN","IVMCM",209,0)
 ..S NODE=""
"RTN","IVMCM",210,0)
 ..I IVMFUTR N IVMMTIEN S IVMMTIEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),2)
"RTN","IVMCM",211,0)
 ..Q:'IVMMTIEN
"RTN","IVMCM",212,0)
 ..S NODE=$G(^DGMT(408.31,IVMMTIEN,2))
"RTN","IVMCM",213,0)
 .S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","IVMCM",214,0)
 .I TMSTAMP,TMSTAMP=$P(NODE,"^",2),IVMMTDT=$P(NODE0,"^"),SOURCE=$P(NODE,"^",5) Q
"RTN","IVMCM",215,0)
 .;
"RTN","IVMCM",216,0)
 .D DELTYPE^IVMCMD(DFN,IVMMTDT,1)
"RTN","IVMCM",217,0)
 .D EN^IVMCM1
"RTN","IVMCM",218,0)
 ;
"RTN","IVMCM",219,0)
 ;
"RTN","IVMCM",220,0)
IS ; - If transmission is income screening info only then do not process
"RTN","IVMCM",221,0)
 ; - outside of the scope of MTS
"RTN","IVMCM",222,0)
 ;I IVMTYPE=3 S IVMMTDT=0 D EN^IVMCM1 I $D(HLERR) G PROCQ
"RTN","IVMCM",223,0)
 I IVMTYPE=3 S IVMMTDT=0
"RTN","IVMCM",224,0)
 ;
"RTN","IVMCM",225,0)
 ;
"RTN","IVMCM",226,0)
LTC ; If transmission contains a Long Term Care Test (TYPE 4 TEST)
"RTN","IVMCM",227,0)
 I $P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,2) D LTC^IVMCM1
"RTN","IVMCM",228,0)
 ;
"RTN","IVMCM",229,0)
PROCQ ;
"RTN","IVMCM",230,0)
 ; release locks used to sychronize upload with local income test options
"RTN","IVMCM",231,0)
 D RELLOCKS^IVMCUPL(DFN)
"RTN","IVMCM",232,0)
 Q
"RTN","IVMCM",233,0)
 ;
"RTN","IVMCM",234,0)
 ;
"RTN","IVMCM",235,0)
DOM(DFN) ; Is patient in a DOM?
"RTN","IVMCM",236,0)
 ;
"RTN","IVMCM",237,0)
 ;  Input:    DFN - pointer to pt in file (#2)
"RTN","IVMCM",238,0)
 ;
"RTN","IVMCM",239,0)
 ; Output: IVMDOM - Is the patient in a DOM?  0 => NO | 1 => YES
"RTN","IVMCM",240,0)
 ;
"RTN","IVMCM",241,0)
 N IVMDOM,VAINDT,VADMVT
"RTN","IVMCM",242,0)
 D ADM^VADPT2
"RTN","IVMCM",243,0)
 I VADMVT,$P($G(^DG(43,1,0)),"^",21),$D(^DIC(42,+$P($G(^DGPM(VADMVT,0)),"^",6),0)),$P(^(0),"^",3)="D" S IVMDOM=1
"RTN","IVMCM",244,0)
 Q +$G(IVMDOM)
"RTN","IVMCM",245,0)
 ;
"RTN","IVMCM",246,0)
 ;
"RTN","IVMCM",247,0)
CHKDT ; check date of income test being uploaded
"RTN","IVMCM",248,0)
 ; Is it a future date?  If so, set IVMFUTR=1
"RTN","IVMCM",249,0)
 ;
"RTN","IVMCM",250,0)
 ; IVMMTIEN is the IEN of current primary test for the year
"RTN","IVMCM",251,0)
 ;
"RTN","IVMCM",252,0)
 I $E($P(IVMLAST,"^",2),1,3)=$E(IVMMTDT,1,3) S IVMMTIEN=+IVMLAST
"RTN","IVMCM",253,0)
 I IVMMTDT>DT S IVMFUTR=1
"RTN","IVMCM",254,0)
 Q
"RTN","IVMCM",255,0)
FUTURE(DFN,YEAR,TYPE,IVMPAT) ;
"RTN","IVMCM",256,0)
 ;Returns the ien of the future test, if there is one
"RTN","IVMCM",257,0)
 ;Inputs:  DFN
"RTN","IVMCM",258,0)
 ;         YEAR  - income year
"RTN","IVMCM",259,0)
 ;         TYPE - type of test
"RTN","IVMCM",260,0)
 ;Output:
"RTN","IVMCM",261,0)
 ;  function value - ien of future means test, if there is one, "" otherwise
"RTN","IVMCM",262,0)
 ;  IVMPAT - Pointer to the IVM Patient file for the income year if there is an entry (pass by reference)
"RTN","IVMCM",263,0)
 ;
"RTN","IVMCM",264,0)
 N RET
"RTN","IVMCM",265,0)
 S RET=""
"RTN","IVMCM",266,0)
 S IVMPAT=$$FIND^IVMPLOG(DFN,YEAR)
"RTN","IVMCM",267,0)
 I IVMPAT S RET=$P($G(^IVM(301.5,IVMPAT,0)),"^",$S(TYPE=1:6,1:7))
"RTN","IVMCM",268,0)
 Q RET
"RTN","IVMCM1")
0^2^B34492739
"RTN","IVMCM1",1,0)
IVMCM1 ;ALB/SEK,BRM - DCD INCOME TESTS UPLOAD DRIVER ; 1/4/02 1:43pm
"RTN","IVMCM1",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,49**;21-OCT-94
"RTN","IVMCM1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMCM1",4,0)
 ;
"RTN","IVMCM1",5,0)
EN ; this routine will call routines to upload means/copay/LTC test and
"RTN","IVMCM1",6,0)
 ; income screening sent by the IVM Center (DCD).  the calling routine
"RTN","IVMCM1",7,0)
 ; validated segment sequence.  entries will be added/modified in the
"RTN","IVMCM1",8,0)
 ; following means test and patient files:
"RTN","IVMCM1",9,0)
 ;
"RTN","IVMCM1",10,0)
 ;       PATIENT RELATION (#408.12)
"RTN","IVMCM1",11,0)
 ;       INCOME PERSON (#408.13)
"RTN","IVMCM1",12,0)
 ;       INDIVIDUAL ANNUAL INCOME (#408.21)
"RTN","IVMCM1",13,0)
 ;       INCOME RELATION (#408.22)
"RTN","IVMCM1",14,0)
 ;       ANNUAL MEANS TEST (#408.31)
"RTN","IVMCM1",15,0)
 ;       MEANS TEST CHANGES (#408.41)
"RTN","IVMCM1",16,0)
 ;       PATIENT (#2)
"RTN","IVMCM1",17,0)
 ;
"RTN","IVMCM1",18,0)
 ; input:
"RTN","IVMCM1",19,0)
 ;
"RTN","IVMCM1",20,0)
 ; IVMTYPE test type 1-means 2-copay 3-income screening 4-LTC
"RTN","IVMCM1",21,0)
 ; IVMMTIEN IEN of replaced test (408.31)
"RTN","IVMCM1",22,0)
 ; IVMFLGC  # of dependent children
"RTN","IVMCM1",23,0)
 ; IVMMTDT  dt of test
"RTN","IVMCM1",24,0)
 ; DGLY income year
"RTN","IVMCM1",25,0)
 ;
"RTN","IVMCM1",26,0)
 ; ^TMP($J,"IVMCM",  contains data sent by IVM Center
"RTN","IVMCM1",27,0)
 ;   3rd node "PIDV"
"RTN","IVMCM1",28,0)
 ;            "ZICV"
"RTN","IVMCM1",29,0)
 ;            "ZIRV"
"RTN","IVMCM1",30,0)
 ;            "ZDPS"
"RTN","IVMCM1",31,0)
 ;            "ZICS"
"RTN","IVMCM1",32,0)
 ;            "ZIRS"
"RTN","IVMCM1",33,0)
 ;           {"ZDPC",N
"RTN","IVMCM1",34,0)
 ;            "ZICC",N
"RTN","IVMCM1",35,0)
 ;            "ZIRC",N
"RTN","IVMCM1",36,0)
 ;           }
"RTN","IVMCM1",37,0)
 ;            "ZMT1"
"RTN","IVMCM1",38,0)
 ;            "ZMT2"
"RTN","IVMCM1",39,0)
 ;            "ZMT4"
"RTN","IVMCM1",40,0)
 ;            "ZBT"  
"RTN","IVMCM1",41,0)
 ;
"RTN","IVMCM1",42,0)
 S:'$D(DUZ) DUZ=.5
"RTN","IVMCM1",43,0)
 ;
"RTN","IVMCM1",44,0)
 ; subscript of array IVMAR is 408.12 ien transmitted by IVM Center
"RTN","IVMCM1",45,0)
 ; or created by upload.
"RTN","IVMCM1",46,0)
 K IVMAR
"RTN","IVMCM1",47,0)
 ;
"RTN","IVMCM1",48,0)
 ; edit checks
"RTN","IVMCM1",49,0)
 S IVMX=$$EN^IVMCME() I IVMX]"" D PROB^IVMCMC(IVMX) K IVMX Q
"RTN","IVMCM1",50,0)
 ;
"RTN","IVMCM1",51,0)
 ; IVMHADJ indicates means test hardship/adjudication
"RTN","IVMCM1",52,0)
 ; 1-adj 2-hardship 3-pending adj 0-not adj/hard
"RTN","IVMCM1",53,0)
 I IVMTYPE=1 D
"RTN","IVMCM1",54,0)
 .S IVMSEG=$G(^TMP($J,"IVMCM","ZMT1"))
"RTN","IVMCM1",55,0)
 .S IVMHADJ=$S($P(IVMSEG,"^",13):2,$P(IVMSEG,"^",6)]"":1,$P(IVMSEG,"^",3)="P":3,1:0)
"RTN","IVMCM1",56,0)
 ;
"RTN","IVMCM1",57,0)
 S:IVMTYPE=3 DGMTI=""
"RTN","IVMCM1",58,0)
 ;
"RTN","IVMCM1",59,0)
 ; add new annual means test file (408.31) stub for Means test,
"RTN","IVMCM1",60,0)
 ; RX Copay test, or Long Term Care test
"RTN","IVMCM1",61,0)
 I "^1^2^4^"[("^"_IVMTYPE_"^") D
"RTN","IVMCM1",62,0)
 .;
"RTN","IVMCM1",63,0)
 .; input   DGMTDT (.01) dt of test
"RTN","IVMCM1",64,0)
 .;         DFN (.02) Patient IEN
"RTN","IVMCM1",65,0)
 .;         DGMTYPT (.19) type of test
"RTN","IVMCM1",66,0)
 .; output  DGMTI annual means test IEN
"RTN","IVMCM1",67,0)
 .S DGMTDT=IVMMTDT,DGMTYPT=IVMTYPE
"RTN","IVMCM1",68,0)
 .D ADD^DGMTA
"RTN","IVMCM1",69,0)
 .;
"RTN","IVMCM1",70,0)
 .; change primary income test for year?
"RTN","IVMCM1",71,0)
 .S DA=DGMTI,DIE="^DGMT(408.31,",DR="2////0"
"RTN","IVMCM1",72,0)
 .D ^DIE K DA,DIE,DR
"RTN","IVMCM1",73,0)
 ;
"RTN","IVMCM1",74,0)
 D NEWVET^IVMCM3 Q:$D(IVMFERR)  ; if no entry in patient relation file for vet add
"RTN","IVMCM1",75,0)
 ;
"RTN","IVMCM1",76,0)
 ; get patient relation ien (#408.12) for vet, spouse, & child
"RTN","IVMCM1",77,0)
 S IVMREQU=$P($G(^DG(408.32,+$P($G(^DGMT(408.31,IVMMTIEN,0)),"^",3),0)),"^",2)
"RTN","IVMCM1",78,0)
 D GETREL^DGMTU11(DFN,"VSC",DGLY,$S($G(IVMMTIEN)&(IVMREQU'="R"):IVMMTIEN,1:0))
"RTN","IVMCM1",79,0)
 ;
"RTN","IVMCM1",80,0)
 ; add dependent(s) to income person file (408.13)
"RTN","IVMCM1",81,0)
 ;
"RTN","IVMCM1",82,0)
 ; add spouse if not in 408.13
"RTN","IVMCM1",83,0)
 S IVMSPCHV="S" ; spouse/child/vet indicator
"RTN","IVMCM1",84,0)
 S IVMSEG=$G(^TMP($J,"IVMCM","ZDPS")) ; spouse ZDP segment
"RTN","IVMCM1",85,0)
 D INPIEN^IVMCM2
"RTN","IVMCM1",86,0)
 Q:$D(IVMFERR)
"RTN","IVMCM1",87,0)
 ;
"RTN","IVMCM1",88,0)
 I IVMFLG5 G ADDCHILD ; entry not added - goto add children
"RTN","IVMCM1",89,0)
 ;
"RTN","IVMCM1",90,0)
 ; add entry to patient relation file (408.12)
"RTN","IVMCM1",91,0)
 D EN^IVMCM3
"RTN","IVMCM1",92,0)
 Q:$D(IVMFERR)
"RTN","IVMCM1",93,0)
 ;
"RTN","IVMCM1",94,0)
ADDS21 ; add spouse entry to individual annual income file (408.21)
"RTN","IVMCM1",95,0)
 S IVMSEG=$G(^TMP($J,"IVMCM","ZICS")) ; spouse ZIC segment
"RTN","IVMCM1",96,0)
 D EN^IVMCM4
"RTN","IVMCM1",97,0)
 Q:$D(IVMFERR)
"RTN","IVMCM1",98,0)
 ;
"RTN","IVMCM1",99,0)
 ; add spouse entry to income relation file (408.22)
"RTN","IVMCM1",100,0)
 S IVMSEG=$G(^TMP($J,"IVMCM","ZIRS")) ; spouse ZIR segment
"RTN","IVMCM1",101,0)
 D EN^IVMCM5
"RTN","IVMCM1",102,0)
 Q:$D(IVMFERR)
"RTN","IVMCM1",103,0)
 ;
"RTN","IVMCM1",104,0)
ADDCHILD ; add children if not in 408.13
"RTN","IVMCM1",105,0)
 S IVMSPCHV="C" ; spouse/child/vet indicator
"RTN","IVMCM1",106,0)
 I 'IVMFLGC G ADDV21 ; no dependent children 
"RTN","IVMCM1",107,0)
 F IVMCTR3=1:1:IVMFLGC D  Q:$D(IVMFERR)
"RTN","IVMCM1",108,0)
 .S IVMSEG=$G(^TMP($J,"IVMCM","ZDPC",IVMCTR3)) ; child ZDP segment
"RTN","IVMCM1",109,0)
 .D INPIEN^IVMCM2
"RTN","IVMCM1",110,0)
 .Q:$D(IVMFERR)
"RTN","IVMCM1",111,0)
 .;
"RTN","IVMCM1",112,0)
 .; add child entry to patient relation file (408.12)
"RTN","IVMCM1",113,0)
 .D EN^IVMCM3
"RTN","IVMCM1",114,0)
 .Q:$D(IVMFERR)
"RTN","IVMCM1",115,0)
 .;
"RTN","IVMCM1",116,0)
ADDC21 .; add child entry to individual annual income file (408.21)
"RTN","IVMCM1",117,0)
 .S IVMSEG=$G(^TMP($J,"IVMCM","ZICC",IVMCTR3)) ; child ZIC segment
"RTN","IVMCM1",118,0)
 .D EN^IVMCM4
"RTN","IVMCM1",119,0)
 .Q:$D(IVMFERR)
"RTN","IVMCM1",120,0)
 .;
"RTN","IVMCM1",121,0)
 .; add entry to income relation file (408.22)
"RTN","IVMCM1",122,0)
 .S IVMSEG=$G(^TMP($J,"IVMCM","ZIRC",IVMCTR3)) ; child ZIR segment
"RTN","IVMCM1",123,0)
 .D EN^IVMCM5
"RTN","IVMCM1",124,0)
 .Q:$D(IVMFERR)
"RTN","IVMCM1",125,0)
 .Q
"RTN","IVMCM1",126,0)
 Q:$D(IVMFERR)
"RTN","IVMCM1",127,0)
 ;
"RTN","IVMCM1",128,0)
ADDV21 ; add vet entry to individual annual income file (408.21)
"RTN","IVMCM1",129,0)
 ; get vet patient relation ien
"RTN","IVMCM1",130,0)
 S DGPRI=+$G(DGREL("V"))
"RTN","IVMCM1",131,0)
 S IVMSEG=$G(^TMP($J,"IVMCM","ZICV")) ; vet ZIC segment
"RTN","IVMCM1",132,0)
 S IVMSPCHV="V" ; spouse/child/vet indicator
"RTN","IVMCM1",133,0)
 D EN^IVMCM4
"RTN","IVMCM1",134,0)
 Q:$D(IVMFERR)
"RTN","IVMCM1",135,0)
 S DGVINI=DGINI ; vet individual annual income ien
"RTN","IVMCM1",136,0)
 ;
"RTN","IVMCM1",137,0)
 ; add vet entry to income relation file (408.22)
"RTN","IVMCM1",138,0)
 S IVMSEG=$G(^TMP($J,"IVMCM","ZIRV")) ; vet ZIR segment
"RTN","IVMCM1",139,0)
 D EN^IVMCM5
"RTN","IVMCM1",140,0)
 Q:$D(IVMFERR)
"RTN","IVMCM1",141,0)
 S DGVIRI=DGIRI ; vet income relation ien
"RTN","IVMCM1",142,0)
 ;
"RTN","IVMCM1",143,0)
COMPLETE ; complete means test, copay test, or Long Term Care test
"RTN","IVMCM1",144,0)
 ;
"RTN","IVMCM1",145,0)
 D EN^IVMCM6
"RTN","IVMCM1",146,0)
 ;
"RTN","IVMCM1",147,0)
 ; cleanup
"RTN","IVMCM1",148,0)
 K DGINI,DGIRI,DGMTDT,DGMTI,DGMTYPT,DGPRI,DGREL,DGVINI,DGVIRI
"RTN","IVMCM1",149,0)
 K IVMAR,IVMCEB,IVMCTR3,IVMFERR,IVMFLG1
"RTN","IVMCM1",150,0)
 K IVMFLG2,IVMFLG5,IVMHADJ,IVMMTB,IVMPRN
"RTN","IVMCM1",151,0)
 K IVMRELN,IVMRELO,IVMREQU,IVMSEG,IVMSPCHV,IVMX
"RTN","IVMCM1",152,0)
 Q
"RTN","IVMCM1",153,0)
 ;
"RTN","IVMCM1",154,0)
LTC ; transmission contains a long term care test (type 4)
"RTN","IVMCM1",155,0)
 ;
"RTN","IVMCM1",156,0)
 Q:'$P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,2)
"RTN","IVMCM1",157,0)
 I "^1^2^"[("^"_$G(IVMTYPE)_"^") N IVMTYPE
"RTN","IVMCM1",158,0)
 S IVMTYPE=4,IVMFUTR=0
"RTN","IVMCM1",159,0)
 S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,2))
"RTN","IVMCM1",160,0)
 S TMSTAMP=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,25))
"RTN","IVMCM1",161,0)
 S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,22)
"RTN","IVMCM1",162,0)
 S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,4)
"RTN","IVMCM1",163,0)
 S IVMMTIEN=+IVMLAST  ;last LTC test
"RTN","IVMCM1",164,0)
 ;deletion indicator sent?
"RTN","IVMCM1",165,0)
 I $P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,3)=HLQ D  Q
"RTN","IVMCM1",166,0)
 .Q:('IVMMTIEN)
"RTN","IVMCM1",167,0)
 .S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","IVMCM1",168,0)
 .I $$EN^IVMCMD(IVMMTIEN) D
"RTN","IVMCM1",169,0)
 ..S RET=$$LST^DGMTU(DFN,DT,IVMTYPE)
"RTN","IVMCM1",170,0)
 ..S CODE=$S(($E($P(RET,"^",2),1,3)=$E(DT,1,3)):$P(RET,"^",4),1:"")
"RTN","IVMCM1",171,0)
 ..D ADD^IVMCMB(DFN,IVMTYPE,"DELETE LONG TERM CARE TEST",+$G(NODE0),$$GETCODE^DGMTH($P(NODE0,"^",3)),CODE)
"RTN","IVMCM1",172,0)
 ;
"RTN","IVMCM1",173,0)
 ;check date/time last edited, test date and source - if they match current test then this is a duplicate and does not need to be uploaded
"RTN","IVMCM1",174,0)
 N NODE0,NODE2
"RTN","IVMCM1",175,0)
 S NODE2=$G(^DGMT(408.31,IVMMTIEN,2)),NODE0=$G(^(0))
"RTN","IVMCM1",176,0)
 I TMSTAMP,TMSTAMP=$P(NODE2,"^",2),IVMMTDT=$P(NODE0,"^"),SOURCE=$P(NODE2,"^",5) Q
"RTN","IVMCM1",177,0)
 ;
"RTN","IVMCM1",178,0)
 D DELTYPE^IVMCMD(DFN,IVMMTDT,4)
"RTN","IVMCM1",179,0)
 I $P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2)!($P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2)) D  Q
"RTN","IVMCM1",180,0)
 .S DGMTDT=IVMMTDT,DGMTYPT=IVMTYPE
"RTN","IVMCM1",181,0)
 .D ADD^DGMTA
"RTN","IVMCM1",182,0)
 .D COMPLETE^IVMCM1
"RTN","IVMCM1",183,0)
 D EN^IVMCM1
"RTN","IVMCM1",184,0)
 Q
"RTN","IVMCM5")
0^3^B16846940
"RTN","IVMCM5",1,0)
IVMCM5 ;ALB/SEK,BRM - ADD NEW DCD INCOME RELATION FILE ENTRIES ; 1/4/02 1:34pm
"RTN","IVMCM5",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,49**;21-OCT-94
"RTN","IVMCM5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMCM5",4,0)
 ;
"RTN","IVMCM5",5,0)
EN ; this routine will add entries to INCOME RELATION file (408.22).
"RTN","IVMCM5",6,0)
 ; will inactivate dependents (spouse & children) who are not
"RTN","IVMCM5",7,0)
 ; dependents of the test being uploaded, by adding an inactivate
"RTN","IVMCM5",8,0)
 ; entry into the EFFECTIVE DATE sub-file (multiple-408.1275) of
"RTN","IVMCM5",9,0)
 ; the PATIENT RELATION file (#408.12).
"RTN","IVMCM5",10,0)
 ;
"RTN","IVMCM5",11,0)
 ; exceptions to above:
"RTN","IVMCM5",12,0)
 ;   . income screening:
"RTN","IVMCM5",13,0)
 ;       . "mt" node not set to annual means test ien
"RTN","IVMCM5",14,0)
 ;       . no replaced test to change primary test for income year
"RTN","IVMCM5",15,0)
 ;         field to 0
"RTN","IVMCM5",16,0)
 ;
"RTN","IVMCM5",17,0)
 ;
"RTN","IVMCM5",18,0)
 ; DFN    Patient file IEN
"RTN","IVMCM5",19,0)
 ; DGINI  Individual Annual Income IEN
"RTN","IVMCM5",20,0)
 ; DGIRI  Income Relation IEN
"RTN","IVMCM5",21,0)
 ; IVMSEG ZIR record for veteran or spouse or dependent
"RTN","IVMCM5",22,0)
 ; IVM0   408.22 0 node pieces 5-7
"RTN","IVMCM5",23,0)
 ; IVM01         0 node pieces 9-12
"RTN","IVMCM5",24,0)
 ; IVM02         0 node piece  6
"RTN","IVMCM5",25,0)
 ;
"RTN","IVMCM5",26,0)
 N IVM0,IVM01,IVM02
"RTN","IVMCM5",27,0)
 S DGIRI=$$ADDIR^DGMTU2(DFN,DGINI)
"RTN","IVMCM5",28,0)
 ;
"RTN","IVMCM5",29,0)
 ; if can't create stub notify site & IVM Center
"RTN","IVMCM5",30,0)
 I DGIRI'>0 D  Q
"RTN","IVMCM5",31,0)
 .S (IVMTEXT(6))="Can't create stub for file 408.22"
"RTN","IVMCM5",32,0)
 .D PROB^IVMCMC(IVMTEXT(6))
"RTN","IVMCM5",33,0)
 .D ERRBULL^IVMPREC7,MAIL^IVMUFNC("DGMT MT/CT UPLOAD ALERTS")
"RTN","IVMCM5",34,0)
 .S IVMFERR=""
"RTN","IVMCM5",35,0)
 ;
"RTN","IVMCM5",36,0)
 ; set "mt" node to annual means test ien
"RTN","IVMCM5",37,0)
 I "^1^2^4^"[("^"_IVMTYPE_"^") D MT^DGMTSCU3(DGIRI,DGMTI)
"RTN","IVMCM5",38,0)
 ;
"RTN","IVMCM5",39,0)
 Q:IVMSPCHV="S"
"RTN","IVMCM5",40,0)
 ;
"RTN","IVMCM5",41,0)
 ; set number of dependent children (#.13) and dependent children(#.08)
"RTN","IVMCM5",42,0)
 ; in income relation file (#408.22) based on active child dependents
"RTN","IVMCM5",43,0)
 ; in patient relation file (#408.12).
"RTN","IVMCM5",44,0)
 ; make DCD means test or copay test primary income test for year
"RTN","IVMCM5",45,0)
 I IVMSPCHV="V" D  Q:$D(IVMFERR)
"RTN","IVMCM5",46,0)
 .;
"RTN","IVMCM5",47,0)
 .; inactivate dependents who are not dependents of the test
"RTN","IVMCM5",48,0)
 .; being uploaded.
"RTN","IVMCM5",49,0)
 .K DGREL("V")
"RTN","IVMCM5",50,0)
 .I $D(DGREL) D INACTIVE Q:$D(IVMFERR)
"RTN","IVMCM5",51,0)
 .;
"RTN","IVMCM5",52,0)
 .D RESET^DGMTU11(DFN,DGLY,$S($G(DGMTI):DGMTI,1:0))
"RTN","IVMCM5",53,0)
 .I $P($G(^DGMT(408.22,DGIRI,0)),"^",8)="" D
"RTN","IVMCM5",54,0)
 ..S DA=DGIRI,DR=".08////0;.13////@",DIE="^DGMT(408.22," D ^DIE
"RTN","IVMCM5",55,0)
 ..K DA,DR,DIE
"RTN","IVMCM5",56,0)
 .S IVM0=$P(IVMSEG,"^",2,4)
"RTN","IVMCM5",57,0)
 I IVMSPCHV="C" S IVM01=$P(IVMSEG,"^",6,9),IVM02=$P(IVMSEG,"^",3)
"RTN","IVMCM5",58,0)
 S DIK="^DGMT(408.22,"
"RTN","IVMCM5",59,0)
 L +^DGMT(408.22,DGIRI) S:IVMSPCHV="V" $P(^DGMT(408.22,DGIRI,0),"^",5,7)=IVM0 S:IVMSPCHV="C" $P(^DGMT(408.22,DGIRI,0),"^",9,12)=IVM01,$P(^(0),"^",6)=IVM02 S DA=DGIRI D IX1^DIK L -^DGMT(408.22,DGIRI)
"RTN","IVMCM5",60,0)
 K DA,DIK
"RTN","IVMCM5",61,0)
 Q
"RTN","IVMCM5",62,0)
 ;
"RTN","IVMCM5",63,0)
INACTIVE ; inactivate dependents not in DCD means test or copay test and
"RTN","IVMCM5",64,0)
 ; kill corresponding dgrel
"RTN","IVMCM5",65,0)
 N X,Y
"RTN","IVMCM5",66,0)
 I $D(DGREL("S")) S DA(1)=+DGREL("S") D  K DGREL("S")
"RTN","IVMCM5",67,0)
 .D CHKINACT
"RTN","IVMCM5",68,0)
 .Q:IVMFLG6!($D(IVMFERR))
"RTN","IVMCM5",69,0)
 .; if spouse was active before income year, add record with date
"RTN","IVMCM5",70,0)
 .; of 12/31 of year before income year with active code 0
"RTN","IVMCM5",71,0)
 .S X=$E(DGLY,1,3)-1_1231
"RTN","IVMCM5",72,0)
 .D INACT1
"RTN","IVMCM5",73,0)
 Q:'$D(DGREL)!($D(IVMFERR))
"RTN","IVMCM5",74,0)
 S IVMACTR=0
"RTN","IVMCM5",75,0)
 F  S IVMACTR=$O(DGREL("C",IVMACTR)) Q:'IVMACTR  S DA(1)=+DGREL("C",IVMACTR) D  K DGREL("C",IVMACTR)
"RTN","IVMCM5",76,0)
 .D CHKINACT
"RTN","IVMCM5",77,0)
 .Q:IVMFLG6!($D(IVMFERR))
"RTN","IVMCM5",78,0)
 .; if child was active before income year, add record with date
"RTN","IVMCM5",79,0)
 .; of 12/31 of year before income year with active code 0
"RTN","IVMCM5",80,0)
 .S X=$E(DGLY,1,3)-1_1231
"RTN","IVMCM5",81,0)
 .D INACT1
"RTN","IVMCM5",82,0)
 ;
"RTN","IVMCM5",83,0)
 K IVMACTR,IVMDGLY,IVMFLG6,IVMYEAR
"RTN","IVMCM5",84,0)
 Q
"RTN","IVMCM5",85,0)
 ;
"RTN","IVMCM5",86,0)
CHKINACT ; if dependent was made active during income year
"RTN","IVMCM5",87,0)
 ; add record for same date (add .08 time) with active code 0
"RTN","IVMCM5",88,0)
 ;
"RTN","IVMCM5",89,0)
 S IVMFLG6=0
"RTN","IVMCM5",90,0)
 S IVMDGLY="" F  S IVMDGLY=$O(^DGPR(408.12,DA(1),"E","B",IVMDGLY)) Q:IVMDGLY']""  D  Q:IVMFLG6!($D(IVMFERR))
"RTN","IVMCM5",91,0)
 .Q:$E(IVMDGLY,1,3)'=$E(DGLY,1,3)
"RTN","IVMCM5",92,0)
 .S IVMYEAR=0 F  S IVMYEAR=$O(^(IVMDGLY,IVMYEAR)) Q:IVMYEAR']""  D  Q:IVMFLG6!($D(IVMFERR))
"RTN","IVMCM5",93,0)
 ..I $P($G(^DGPR(408.12,DA(1),"E",IVMYEAR,0)),"^",2) D
"RTN","IVMCM5",94,0)
 ...S X=IVMDGLY_.08 D INACT1 S IVMFLG6=1
"RTN","IVMCM5",95,0)
 ...Q
"RTN","IVMCM5",96,0)
 Q
"RTN","IVMCM5",97,0)
 ;
"RTN","IVMCM5",98,0)
INACT1 ; add inactivate entry to 408.1275
"RTN","IVMCM5",99,0)
 ;
"RTN","IVMCM5",100,0)
 K DINUM
"RTN","IVMCM5",101,0)
 S (DIK,DIC)="^DGPR(408.12,DA(1),""E"",",DIC(0)="L",DLAYGO=408.1275 K DD,DO D FILE^DICN S DA=+Y K DLAYGO
"RTN","IVMCM5",102,0)
 ;
"RTN","IVMCM5",103,0)
 ; if can't create stub notify site & IVM Center
"RTN","IVMCM5",104,0)
 I DA'>0 D  Q
"RTN","IVMCM5",105,0)
 .S (IVMTEXT(6))="Can't create stub for file 408.1275"
"RTN","IVMCM5",106,0)
 .D PROB^IVMCMC(IVMTEXT(6))
"RTN","IVMCM5",107,0)
 .D ERRBULL^IVMPREC7,MAIL^IVMUFNC("DGMT MT/CT UPLOAD ALERTS")
"RTN","IVMCM5",108,0)
 .S IVMFERR=""
"RTN","IVMCM5",109,0)
 L +^DGPR(408.12,+DGPRI) S $P(^DGPR(408.12,DA(1),"E",DA,0),"^",2,4)=0_"^"_1_$S(IVMTYPE=3:"",1:"^"_DGMTI) D IX1^DIK L -^DGPR(408.12,+DGPRI)
"RTN","IVMCM5",110,0)
 K DA,DIC,DIK
"RTN","IVMCM5",111,0)
 Q
"RTN","IVMCM6")
0^10^B69311692
"RTN","IVMCM6",1,0)
IVMCM6 ;ALB/SEK,JAN,RTK,CKN - COMPLETE DCD INCOME TEST ; 19-MAR-02
"RTN","IVMCM6",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,25,39,44,50,53,49**;21-OCT-94
"RTN","IVMCM6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMCM6",4,0)
 ;
"RTN","IVMCM6",5,0)
EN ; This routine will update annual means test file (#408.31):
"RTN","IVMCM6",6,0)
 ;      
"RTN","IVMCM6",7,0)
 ; Note: There is no entry in 408.31 for income screening.
"RTN","IVMCM6",8,0)
 ;
"RTN","IVMCM6",9,0)
 ;
"RTN","IVMCM6",10,0)
 ;Input:
"RTN","IVMCM6",11,0)
 ;  DGMTI - ien of new Annual Means Test which requires completion
"RTN","IVMCM6",12,0)
 ;  IVMMTIEN - ien of replaced test (may not exist)
"RTN","IVMCM6",13,0)
 ;
"RTN","IVMCM6",14,0)
 ; - open case record in (#301.5) file
"RTN","IVMCM6",15,0)
 N DGREF,DATA,CODE,FIELD,RET,NODE0,NODE2,OK2SND
"RTN","IVMCM6",16,0)
 D CHKTST,OPEN
"RTN","IVMCM6",17,0)
 ;
"RTN","IVMCM6",18,0)
 ; - if income screening goto MTBULL
"RTN","IVMCM6",19,0)
 I IVMTYPE=3 G MTBULL
"RTN","IVMCM6",20,0)
 ;
"RTN","IVMCM6",21,0)
 ; - setup variables for (#408.31) file
"RTN","IVMCM6",22,0)
 ;get the ZMT segment, translate HLQ's to NULLS
"RTN","IVMCM6",23,0)
 S IVMSEG=$G(^TMP($J,"IVMCM","ZMT"_IVMTYPE)) ; get mt/copay ZMT segment
"RTN","IVMCM6",24,0)
 F FIELD=4:1:27 I FIELD'=24,$P(IVMSEG,HLFS,FIELD)=HLQ S $P(IVMSEG,HLFS,FIELD)=""
"RTN","IVMCM6",25,0)
 ;
"RTN","IVMCM6",26,0)
 S IVM1=$$FMDATE^HLFNC($P(IVMSEG,"^",10)) ; dt/time completed
"RTN","IVMCM6",27,0)
 S IVM2=$P(IVMSEG,"^",7) ; agree to pay deductible
"RTN","IVMCM6",28,0)
 S IVM3=$$FMDATE^HLFNC($P(IVMSEG,"^",15)) ; dt vet signed test
"RTN","IVMCM6",29,0)
 S IVM4=$P(IVMSEG,"^",16) ; declines to give income info field
"RTN","IVMCM6",30,0)
 S:IVM4 DGREF=""
"RTN","IVMCM6",31,0)
 S IVM5=$$FMDATE^HLFNC($P(IVMSEG,"^",6)) ; dt/time of adjudication
"RTN","IVMCM6",32,0)
 S IVM6=$P(IVMSEG,"^",3) ;status
"RTN","IVMCM6",33,0)
 S IVM7=$P(IVMSEG,"^",13) ; hardship
"RTN","IVMCM6",34,0)
 S:$G(IVMHADJ) IVMCAT=$P(IVMSEG,"^",3) ; test status 
"RTN","IVMCM6",35,0)
 S IVM8=$P(IVMSEG,"^",22) ; site conducting test
"RTN","IVMCM6",36,0)
 S IVM9=$P(IVMSEG,"^",23) ; site granting hardship
"RTN","IVMCM6",37,0)
 S IVM10=$P(IVMSEG,"^",11) ; prev years threshold
"RTN","IVMCM6",38,0)
 S IVM11=$P(IVMSEG,"^",18) ; source of test
"RTN","IVMCM6",39,0)
 S IVM12=$$FMDATE^HLFNC($P(IVMSEG,"^",24)) ; hardship effective date
"RTN","IVMCM6",40,0)
 S IVM13=$$FMDATE^HLFNC($P(IVMSEG,"^",25)) ; date/time last edited
"RTN","IVMCM6",41,0)
 S IVM14=$P(IVMSEG,"^",26) ; test determined status
"RTN","IVMCM6",42,0)
 S IVM15=$P(IVMSEG,"^",4) ; income 
"RTN","IVMCM6",43,0)
 S IVM16=$P(IVMSEG,"^",5) ; net worth
"RTN","IVMCM6",44,0)
 S IVM17=$P(IVMSEG,"^",8) ; threshold A
"RTN","IVMCM6",45,0)
 S IVM18=$P(IVMSEG,"^",9) ; deductible expenses
"RTN","IVMCM6",46,0)
 S IVM19=$P(IVMSEG,"^",12) ; total dependents
"RTN","IVMCM6",47,0)
 S IVM20=$P(IVMSEG,"^",27) ; signature valid?
"RTN","IVMCM6",48,0)
 S IVM21=$$FMDATE^HLFNC($P(IVMSEG,"^",14)) ; hardship review date
"RTN","IVMCM6",49,0)
 ;
"RTN","IVMCM6",50,0)
 ;old tests may not have the field Test-Determined Status
"RTN","IVMCM6",51,0)
 I IVM14="" D
"RTN","IVMCM6",52,0)
 .I IVMTYPE=1,IVM7,IVM6="A" S IVM14="C" Q
"RTN","IVMCM6",53,0)
 .S IVM14=IVM6
"RTN","IVMCM6",54,0)
 ;
"RTN","IVMCM6",55,0)
 ; - fields for means test, copay test and Long Term Care Test
"RTN","IVMCM6",56,0)
 S DATA(.14)=IVM4,DATA(.18)=IVM19,DATA(.23)=IVM11,DATA(2.05)=IVM8,DATA(.06)=DUZ,DATA(.07)=IVM1,DATA(2.02)=IVM13,DATA(2.03)=$$GETSTAT^DGMTH(IVM14,IVMTYPE)
"RTN","IVMCM6",57,0)
 ;
"RTN","IVMCM6",58,0)
 I IVM7 S DATA(.08)=.5,DATA(.09)=$$NOW^XLFDT
"RTN","IVMCM6",59,0)
 ;
"RTN","IVMCM6",60,0)
 I 'IVM4 S DATA(.04)=IVM15,DATA(.15)=IVM18
"RTN","IVMCM6",61,0)
 ;
"RTN","IVMCM6",62,0)
 ; - means test fields
"RTN","IVMCM6",63,0)
 I IVMTYPE=1 D
"RTN","IVMCM6",64,0)
 .S DATA(.11)=IVM2,DATA(.12)=IVM17,DATA(.2)=IVM7,DATA(.24)=IVM3,DATA(.29)=IVM20,DATA(2.04)=IVM9,DATA(.1)=IVM5,DATA(2.01)=IVM12
"RTN","IVMCM6",65,0)
 .I 'IVM4 S DATA(.05)=IVM16
"RTN","IVMCM6",66,0)
 .S DATA(.16)=IVM10,DATA(.21)=IVM21
"RTN","IVMCM6",67,0)
 ;
"RTN","IVMCM6",68,0)
 ; - Long Term Care fields
"RTN","IVMCM6",69,0)
 I IVMTYPE=4 D
"RTN","IVMCM6",70,0)
 .N DATE,TYPE
"RTN","IVMCM6",71,0)
 .;set pointer to associated means test or RX copay test if there is one
"RTN","IVMCM6",72,0)
 .I $P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2) S DATE=$P(^TMP($J,"IVMCM","ZMT1"),HLFS,2),TYPE=1
"RTN","IVMCM6",73,0)
 .E  I $P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2) S DATE=$P(^TMP($J,"IVMCM","ZMT2"),HLFS,2),TYPE=2
"RTN","IVMCM6",74,0)
 .I $G(DATE) S DATA(2.08)=$P($$LST^DGMTU(DFN,DATE,TYPE),"^")
"RTN","IVMCM6",75,0)
 .S DATA(.11)=IVM2
"RTN","IVMCM6",76,0)
 .I 'IVM4 S DATA(.05)=IVM16
"RTN","IVMCM6",77,0)
 .K DATA(2.03)  ;test determined status is not used in LTC test
"RTN","IVMCM6",78,0)
 ;
"RTN","IVMCM6",79,0)
 I $G(IVMMTIEN) D
"RTN","IVMCM6",80,0)
 .; Get record data to compare with HL7 Message data
"RTN","IVMCM6",81,0)
 .S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","IVMCM6",82,0)
 .S NODE2=$G(^DGMT(408.31,IVMMTIEN,2))
"RTN","IVMCM6",83,0)
 .;
"RTN","IVMCM6",84,0)
 .; If Site Conducting Test is the same, get Completed By from record.
"RTN","IVMCM6",85,0)
 .I $P(NODE2,"^",5)=IVM8 S DATA(.06)=$P(NODE0,"^",6)
"RTN","IVMCM6",86,0)
 .;
"RTN","IVMCM6",87,0)
 .; If there are Comments, copy them into new record
"RTN","IVMCM6",88,0)
 .I $D(^DGMT(408.31,IVMMTIEN,"C")) S DATA(50)="^DGMT(408.31,"_IVMMTIEN_",""C"")"
"RTN","IVMCM6",89,0)
 .;
"RTN","IVMCM6",90,0)
 .I IVMTYPE=1 D
"RTN","IVMCM6",91,0)
 ..; Hardship is YES in msg and record, and the Site Granting Hardship
"RTN","IVMCM6",92,0)
 ..; is the same as the site receiving the msg, keep the record data
"RTN","IVMCM6",93,0)
 ..I IVM7,$P(NODE0,"^",20),IVM9=$P($$SITE^VASITE,"^",3) S DATA(.21)=$P(NODE0,"^",21),DATA(.22)=$P(NODE0,"^",22),DATA(2.01)=$P(NODE2,"^",1),DATA(.08)=$P(NODE0,"^",8),DATA(.09)=$P(NODE0,"^",9)
"RTN","IVMCM6",94,0)
 ..;
"RTN","IVMCM6",95,0)
 ..; Hardship is YES in msg and record, and the Site Granting Hardship
"RTN","IVMCM6",96,0)
 ..; is NOT the same in both the msg and record, keep the message data
"RTN","IVMCM6",97,0)
 ..I IVM7,$P(NODE0,"^",20),$P(NODE2,"^",4)'=IVM9 S DATA(.22)=DATA(.06)
"RTN","IVMCM6",98,0)
 ..;
"RTN","IVMCM6",99,0)
 ..; Hardship is YES in msg and NO in record, keep the message data
"RTN","IVMCM6",100,0)
 ..I IVM7,'$P(NODE0,"^",20) S DATA(.22)=DATA(.06)
"RTN","IVMCM6",101,0)
 ..;
"RTN","IVMCM6",102,0)
 ..; Hardship is set to delete in msg, delete the Hardship
"RTN","IVMCM6",103,0)
 ..I IVM12=HLQ!('IVM7&($P(NODE0,"^",20))) D
"RTN","IVMCM6",104,0)
 ...S (DATA(.08),DATA(.09),DATA(.2),DATA(.21),DATA(.22),DATA(2.01),DATA(2.04))=""
"RTN","IVMCM6",105,0)
 ...I $P(NODE0,"^",20) D BULL2^IVMCMB(DFN,$P(NODE2,"^"),$P(NODE2,"^",4))
"RTN","IVMCM6",106,0)
 ..;
"RTN","IVMCM6",107,0)
 ..; Hardship is NO in msg and in record, keep the message data
"RTN","IVMCM6",108,0)
 ..I 'IVM7,'$P(NODE0,"^",20) S DATA(.22)=""
"RTN","IVMCM6",109,0)
 ..;
"RTN","IVMCM6",110,0)
 ..; Notify site of hardship?
"RTN","IVMCM6",111,0)
 ..I IVM12'=HLQ,IVM7,((IVM12'=$P(NODE2,"^"))!('$P(NODE0,"^",20))) D BULL1^IVMCMB(DFN,IVM12,IVM9)
"RTN","IVMCM6",112,0)
 ..;
"RTN","IVMCM6",113,0)
 ..; Notify site to discontinue net-worth development?
"RTN","IVMCM6",114,0)
 ..I IVM11=3,$P(NODE0,"^",23)=1,$$GETCODE^DGMTH($P(NODE0,"^",3))="P" D BULL3^IVMCMB(DFN)
"RTN","IVMCM6",115,0)
 ;
"RTN","IVMCM6",116,0)
 ;determine status based on test-determined status and hardship
"RTN","IVMCM6",117,0)
 S CODE=IVM14
"RTN","IVMCM6",118,0)
 I IVMTYPE=1,DATA(.2),"CP"[CODE S CODE="A"
"RTN","IVMCM6",119,0)
 S DATA(.03)=$$GETSTAT^DGMTH(CODE,IVMTYPE)
"RTN","IVMCM6",120,0)
 ;
"RTN","IVMCM6",121,0)
 I $$UPD^DGENDBS(408.31,DGMTI,.DATA) D
"RTN","IVMCM6",122,0)
 .;
"RTN","IVMCM6",123,0)
 .; can't call MT Events protocol for Long Term Care Copay Exemption
"RTN","IVMCM6",124,0)
 .; Tests as it triggers an IB and Enrollment update
"RTN","IVMCM6",125,0)
 .; so manually call needed protocols to trigger audit, date stamp
"RTN","IVMCM6",126,0)
 .; and transmission (if necessary)
"RTN","IVMCM6",127,0)
 .I IVMTYPE=4 D  Q
"RTN","IVMCM6",128,0)
 ..S:$G(DGMTACT)="" DGMTACT="ADD"
"RTN","IVMCM6",129,0)
 ..S DGMTINF=1  ;Means Test Interactive/Non-interactive flag
"RTN","IVMCM6",130,0)
 ..D AFTER^DGMTEVT
"RTN","IVMCM6",131,0)
 ..D EN^DGMTAUD                   ;means test audit event
"RTN","IVMCM6",132,0)
 ..D ^IVMPMTE                     ;IVM means test event
"RTN","IVMCM6",133,0)
 ..D DATETIME^DGMTU4($G(DGMTI))   ;date stamp
"RTN","IVMCM6",134,0)
 .;
"RTN","IVMCM6",135,0)
 .; - call means test event driver if not future test
"RTN","IVMCM6",136,0)
 .I 'IVMFUTR D
"RTN","IVMCM6",137,0)
 ..D:(IVMTYPE=1) MTPRIME^DGMTU4(DGMTI)
"RTN","IVMCM6",138,0)
 ..D:(IVMTYPE=2) RXPRIME^DGMTU4(DGMTI)
"RTN","IVMCM6",139,0)
 ..S CODE=$$GETCODE^DGMTH($P($G(^DGMT(408.31,DGMTI,0)),"^",3))
"RTN","IVMCM6",140,0)
 .E  D
"RTN","IVMCM6",141,0)
 ..;enter to list of future tests kept in the IVM Patient file
"RTN","IVMCM6",142,0)
 ..D ADDFUTR^IVMPLOG2(DGMTI)
"RTN","IVMCM6",143,0)
 ..;also, if HEC changed the test to a future date, there could be
"RTN","IVMCM6",144,0)
 ..;a test on file for the same income year marked as primary
"RTN","IVMCM6",145,0)
 ..I $G(IVMMTIEN),$P(NODE2,"^",5)=IVM8 D
"RTN","IVMCM6",146,0)
 ...N DATA,ERROR,DGMTI,DGMTACT,DGMTYPT,DGMTA
"RTN","IVMCM6",147,0)
 ...S DATA(2)=0
"RTN","IVMCM6",148,0)
 ...I $$UPD^DGENDBS(408.31,IVMMTIEN,.DATA,.ERROR)
"RTN","IVMCM6",149,0)
 ...; if the test being replaced by the uploaded future test
"RTN","IVMCM6",150,0)
 ...; becomes non-primary and the site conducted both tests
"RTN","IVMCM6",151,0)
 ...; then call Means Test event driver (non interactively)
"RTN","IVMCM6",152,0)
 ...S DGMTACT="EDT",DGMTI=IVMMTIEN,DGMTYPT=IVMTYPE,DGMTINF=1
"RTN","IVMCM6",153,0)
 ...D AFTER^DGMTEVT
"RTN","IVMCM6",154,0)
 ...D EN^DGMTEVT
"RTN","IVMCM6",155,0)
 ...D
"RTN","IVMCM6",156,0)
 ....N DGMSGF,DGADDF
"RTN","IVMCM6",157,0)
 ....S DGMSGF=1,DGADDF=0
"RTN","IVMCM6",158,0)
 ....D EN^DGMTR
"RTN","IVMCM6",159,0)
 .D:OK2SND TRNSMT
"RTN","IVMCM6",160,0)
 ;
"RTN","IVMCM6",161,0)
 ;
"RTN","IVMCM6",162,0)
MTBULL ; Build results array
"RTN","IVMCM6",163,0)
 D ADD^IVMCMB(DFN,IVMTYPE,$S(IVMFUTR:"Future Test",1:"New Test"),$G(IVMMTDT),$S($G(IVMMTIEN):$$GETCODE^DGMTH($P($G(^DGMT(408.31,IVMMTIEN,0)),"^",3)),1:""),CODE)
"RTN","IVMCM6",164,0)
 ;
"RTN","IVMCM6",165,0)
CLEANUP ; cleanup
"RTN","IVMCM6",166,0)
 K DGCAT,DGCOMF,DGMTACT,DGMTI,DGMTINF,DGMTPAR,DGTHB,IVMBU45,IVMOP,IVMOP1
"RTN","IVMCM6",167,0)
 K IVM1,IVM2,IVM3,IVM4,IVM5,IVM6,IVM7,IVM8,IVM9,IVM10,IVM11,IVM12,IVM13,IVM14,IVMCAT,IVMCEA,IVMCEB,IVMMTA,IVM15,IVM16,IVM17,IVM18,IVM19,IVM20,IVM21
"RTN","IVMCM6",168,0)
 Q
"RTN","IVMCM6",169,0)
 ;
"RTN","IVMCM6",170,0)
OPEN ; open case record for uploaded test
"RTN","IVMCM6",171,0)
 S IVMOP="",IVMOP=$O(^IVM(301.5,"AYR",DGLY,DFN,IVMOP)) I 'IVMOP D OPEN1 Q
"RTN","IVMCM6",172,0)
 S IVMOP1=$G(^IVM(301.5,IVMOP,0)) I 'IVMOP1 D OPEN1 Q
"RTN","IVMCM6",173,0)
 I $P(IVMOP1,"^",4)=1 S DA=+IVMOP D  Q
"RTN","IVMCM6",174,0)
 .S DIE="^IVM(301.5,",DR=".03////1;.04////0"
"RTN","IVMCM6",175,0)
 .D OPEN2
"RTN","IVMCM6",176,0)
 Q
"RTN","IVMCM6",177,0)
OPEN1 K DD,DO
"RTN","IVMCM6",178,0)
 S DIC="^IVM(301.5,",DIC(0)="LMNZ",X=DFN,DLAYGO=301.5
"RTN","IVMCM6",179,0)
 D FILE^DICN Q:Y'>0  S DA=+Y
"RTN","IVMCM6",180,0)
 S DIE="^IVM(301.5,",DR=".02////^S X=DGLY;.03////1;.04////0"
"RTN","IVMCM6",181,0)
OPEN2 D ^DIE K DD,DO,DIC,DLAYGO,X,Y,DIE,DR
"RTN","IVMCM6",182,0)
 Q
"RTN","IVMCM6",183,0)
 ;
"RTN","IVMCM6",184,0)
MTDRIVER ; call means test event driver
"RTN","IVMCM6",185,0)
 ; dgmtact
"RTN","IVMCM6",186,0)
 ; adj  adjudicated mt
"RTN","IVMCM6",187,0)
 ; cat  hardship mt
"RTN","IVMCM6",188,0)
 ; add  new mt or copay
"RTN","IVMCM6",189,0)
 ; edit corrected mt or copay
"RTN","IVMCM6",190,0)
 ;         
"RTN","IVMCM6",191,0)
 N IVMDA,IVMDT,IVMFLG,IVMMTDT,IVMNEW
"RTN","IVMCM6",192,0)
 S DGMTACT=$S($G(IVMHADJ)=1:"ADJ",$G(IVMHADJ)=2:"CAT",'$G(DGMTP):"ADD",1:"EDT")
"RTN","IVMCM6",193,0)
 D AFTER^DGMTEVT
"RTN","IVMCM6",194,0)
 S DGMTINF=1 ; non-interactive flag
"RTN","IVMCM6",195,0)
 D EN^DGMTEVT
"RTN","IVMCM6",196,0)
 Q
"RTN","IVMCM6",197,0)
 ;
"RTN","IVMCM6",198,0)
CHKTST ; Verify if the incoming Income Test requires a Z07 transmission.
"RTN","IVMCM6",199,0)
 ;
"RTN","IVMCM6",200,0)
 N MTREC,REC01,ZMTSEG
"RTN","IVMCM6",201,0)
 S OK2SND=0
"RTN","IVMCM6",202,0)
 S MTREC=$G(^DGMT(408.31,DGMTI,0))
"RTN","IVMCM6",203,0)
 Q:'$D(^DGMT(408.31,DGMTI,0))
"RTN","IVMCM6",204,0)
 ; Check if the Source of the Test is DCD
"RTN","IVMCM6",205,0)
 S ZMTSEG=$G(^TMP($J,"IVMCM","ZMT"_IVMTYPE))
"RTN","IVMCM6",206,0)
 Q:$P($G(^DG(408.34,+$P(ZMTSEG,U,18),0)),U)'="DCD"
"RTN","IVMCM6",207,0)
 ;Check if the DCD software has been installed
"RTN","IVMCM6",208,0)
 Q:'$$VERSION^XPDUTL("IVMC")
"RTN","IVMCM6",209,0)
 ;
"RTN","IVMCM6",210,0)
 ; If the source of the test is DCD, and the site receiving the test
"RTN","IVMCM6",211,0)
 ; is a DCD site, set the record to transmit.
"RTN","IVMCM6",212,0)
 S OK2SND=1
"RTN","IVMCM6",213,0)
 Q
"RTN","IVMCM6",214,0)
 ;
"RTN","IVMCM6",215,0)
TRNSMT ; Set the record to transmit due to DCD Criteria
"RTN","IVMCM6",216,0)
 N REC01,DCDDATA,DCDIEN,EVENTS,ERROR
"RTN","IVMCM6",217,0)
 S REC01=$O(^IVM(301.5,"AYR",DGLY,DFN,""))
"RTN","IVMCM6",218,0)
 S DCDDATA(.04)=0,DCDIEN=REC01
"RTN","IVMCM6",219,0)
 I $$UPD^DGENDBS(301.5,DCDIEN,.DCDDATA,.ERROR)
"RTN","IVMCM6",220,0)
 S EVENTS("DCD")=1
"RTN","IVMCM6",221,0)
 I $$SETSTAT^IVMPLOG(REC01,.EVENTS)
"RTN","IVMCM6",222,0)
 ;
"RTN","IVMCM6",223,0)
 Q
"RTN","IVMCMB")
0^8^B16093169
"RTN","IVMCMB",1,0)
IVMCMB ;ALB/SEK,BRM - SEND INCOME TEST TRANSMISSION BULLETIN ; 12/18/01 1:21pm
"RTN","IVMCMB",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,49**;21-OCT-94
"RTN","IVMCMB",3,0)
 ;
"RTN","IVMCMB",4,0)
 ;  Input array required:
"RTN","IVMCMB",5,0)
 ;    ^TMP($J,"IVMBULL"  --  contains lists of tests which were uploaded
"RTN","IVMCMB",6,0)
 ;     dfn^type of test^dt of test^category^action
"RTN","IVMCMB",7,0)
 ;
"RTN","IVMCMB",8,0)
BULL ; Send mail message notifying site of uploaded income tests.
"RTN","IVMCMB",9,0)
 K IVMTEXT
"RTN","IVMCMB",10,0)
 I '$D(^TMP($J,"IVMBULL")) G BULLQ
"RTN","IVMCMB",11,0)
 S XMSUB="HEC INCOME TEST UPLOAD"
"RTN","IVMCMB",12,0)
 S IVMTEXT(1)="Income tests were uploaded from the Health Eligibility Center"
"RTN","IVMCMB",13,0)
 S IVMTEXT(2)="for the following patients:"
"RTN","IVMCMB",14,0)
 S IVMTEXT(3)=" "
"RTN","IVMCMB",15,0)
 S IVMTEXT(4)="    Name         PID          Type        TestDate   Old->New  Action"
"RTN","IVMCMB",16,0)
 S IVMTEXT(5)="                                                       Code"
"RTN","IVMCMB",17,0)
 S IVMBCTR=$G(^TMP($J,"IVMBULL",0))
"RTN","IVMCMB",18,0)
 F IVMBDA=1:1:IVMBCTR D
"RTN","IVMCMB",19,0)
 .S IVMBULLM=$G(^TMP($J,"IVMBULL",IVMBDA)) Q:'IVMBULLM
"RTN","IVMCMB",20,0)
 .S IVMPAT=$$PT^IVMUFNC4($P(IVMBULLM,"^"))
"RTN","IVMCMB",21,0)
 .S $E(IVMTEXT(IVMBDA+5),1,30)=$E($P(IVMPAT,"^"),1,18)_" "_$P(IVMPAT,"^",2)
"RTN","IVMCMB",22,0)
 .S $E(IVMTEXT(IVMBDA+5),31,41)=$S($P(IVMBULLM,"^",2)=1:"Means Test",$P(IVMBULLM,"^",2)=2:"Copay Test",$P(IVMBULLM,"^",2)=4:"LTC Test",1:"")
"RTN","IVMCMB",23,0)
 .S Y=$P(IVMBULLM,"^",3) X ^DD("DD") ;test date
"RTN","IVMCMB",24,0)
 .S $E(IVMTEXT(IVMBDA+5),43,53)=Y
"RTN","IVMCMB",25,0)
 .S $E(IVMTEXT(IVMBDA+5),56,56)=$P(IVMBULLM,"^",4) ;status before
"RTN","IVMCMB",26,0)
 .S $E(IVMTEXT(IVMBDA+5),57,58)="->"
"RTN","IVMCMB",27,0)
 .S $E(IVMTEXT(IVMBDA+5),59)=$P(IVMBULLM,"^",5) ;status after
"RTN","IVMCMB",28,0)
 .S $E(IVMTEXT(IVMBDA+5),64,78)=$P(IVMBULLM,"^",6) ;action
"RTN","IVMCMB",29,0)
 ;
"RTN","IVMCMB",30,0)
 D MAIL^IVMUFNC("DGMT MT/CT UPLOAD ALERTS")
"RTN","IVMCMB",31,0)
BULLQ K IVMBCTR,IVMBDA,IVMBULLM,^TMP($J,"IVMBULL"),IVMPAT,Y
"RTN","IVMCMB",32,0)
 Q
"RTN","IVMCMB",33,0)
 ;
"RTN","IVMCMB",34,0)
BULL1(DFN,WDATE,SITE) ; 
"RTN","IVMCMB",35,0)
 ;Send message notifying site of hardship determination
"RTN","IVMCMB",36,0)
 ;
"RTN","IVMCMB",37,0)
 N IVMTEXT,IVMPAT
"RTN","IVMCMB",38,0)
 S IVMPAT=$$PT^IVMUFNC4(DFN)
"RTN","IVMCMB",39,0)
 S XMSUB="HEC NOTIFICATION OF HARDSHIP"
"RTN","IVMCMB",40,0)
 S IVMTEXT(1)="A hardship determination was uploaded from the Health Eligibility Center"
"RTN","IVMCMB",41,0)
 S IVMTEXT(2)="for the following patient:"
"RTN","IVMCMB",42,0)
 S IVMTEXT(3)=" "
"RTN","IVMCMB",43,0)
 S IVMTEXT(4)="                  Name: "_$P(IVMPAT,"^")
"RTN","IVMCMB",44,0)
 S IVMTEXT(5)="                   PID: "_$P(IVMPAT,"^",2)
"RTN","IVMCMB",45,0)
 S IVMTEXT(6)="        Effective Date: "_$S(WDATE:$$FMTE^XLFDT(WDATE),1:"UNKNOWN")
"RTN","IVMCMB",46,0)
 S IVMTEXT(7)="Site Granting Hardship: "_$S($L(SITE):SITE,1:"UNKNOWN")
"RTN","IVMCMB",47,0)
 ;
"RTN","IVMCMB",48,0)
 D MAIL^IVMUFNC("DGMT MT/CT UPLOAD ALERTS")
"RTN","IVMCMB",49,0)
 Q
"RTN","IVMCMB",50,0)
 ;
"RTN","IVMCMB",51,0)
BULL2(DFN,WDATE,SITE) ; 
"RTN","IVMCMB",52,0)
 ;Send message notifying site of deletion of hardship determination
"RTN","IVMCMB",53,0)
 ;
"RTN","IVMCMB",54,0)
 N IVMTEXT,IVMPAT
"RTN","IVMCMB",55,0)
 S IVMPAT=$$PT^IVMUFNC4(DFN)
"RTN","IVMCMB",56,0)
 S XMSUB="HEC NOTIFICATION OF HARDSHIP"
"RTN","IVMCMB",57,0)
 S IVMTEXT(1)="Notification has been received from the Health Eligibility Center "
"RTN","IVMCMB",58,0)
 S IVMTEXT(2)="that the hardship determination was deleted for the following patient:"
"RTN","IVMCMB",59,0)
 S IVMTEXT(3)=" "
"RTN","IVMCMB",60,0)
 S IVMTEXT(4)="                             Name: "_$P(IVMPAT,"^")
"RTN","IVMCMB",61,0)
 S IVMTEXT(5)="                              PID: "_$P(IVMPAT,"^",2)
"RTN","IVMCMB",62,0)
 S IVMTEXT(6)=" Effective Date Prior to Deletion: "_$S(WDATE:$$FMTE^XLFDT(WDATE),1:"UNKNOWN")
"RTN","IVMCMB",63,0)
 S IVMTEXT(7)="Site Originally Granting Hardship: "_$S($L(SITE):SITE,1:"UNKNOWN")
"RTN","IVMCMB",64,0)
 ;
"RTN","IVMCMB",65,0)
 D MAIL^IVMUFNC("DGMT MT/CT UPLOAD ALERTS")
"RTN","IVMCMB",66,0)
 Q
"RTN","IVMCMB",67,0)
 ;
"RTN","IVMCMB",68,0)
BULL3(DFN) ; 
"RTN","IVMCMB",69,0)
 ;Send message notifying site to discontinue net-worth adjudication
"RTN","IVMCMB",70,0)
 ;
"RTN","IVMCMB",71,0)
 Q:('$G(DFN))
"RTN","IVMCMB",72,0)
 ;
"RTN","IVMCMB",73,0)
 N IVMTEXT,IVMPAT
"RTN","IVMCMB",74,0)
 S IVMPAT=$$PT^IVMUFNC4(DFN)
"RTN","IVMCMB",75,0)
 S XMSUB="HEC Authority Over Networth-Adjudication"
"RTN","IVMCMB",76,0)
 S IVMTEXT(1)="Please discontinue development of net-worth for the following patient:"
"RTN","IVMCMB",77,0)
 S IVMTEXT(2)=" "
"RTN","IVMCMB",78,0)
 S IVMTEXT(3)=" "
"RTN","IVMCMB",79,0)
 S IVMTEXT(4)="                  Name: "_$P(IVMPAT,"^")
"RTN","IVMCMB",80,0)
 S IVMTEXT(5)="                   PID: "_$P(IVMPAT,"^",2)
"RTN","IVMCMB",81,0)
 ;
"RTN","IVMCMB",82,0)
 D MAIL^IVMUFNC("DGMT MT/CT UPLOAD ALERTS")
"RTN","IVMCMB",83,0)
 Q
"RTN","IVMCMB",84,0)
 ;
"RTN","IVMCMB",85,0)
ADD(DFN,TYPETEST,ACTION,TESTDATE,STATUS1,STATUS2) ;
"RTN","IVMCMB",86,0)
 ;Adds to the notification list
"RTN","IVMCMB",87,0)
 ;
"RTN","IVMCMB",88,0)
 N COUNT
"RTN","IVMCMB",89,0)
 S COUNT=$G(^TMP($J,"IVMBULL",0))+1
"RTN","IVMCMB",90,0)
 S ^TMP($J,"IVMBULL",COUNT)=DFN_U_$G(TYPETEST)_U_$G(TESTDATE)_U_$G(STATUS1)_U_$G(STATUS2)_U_$G(ACTION)
"RTN","IVMCMB",91,0)
 S ^TMP($J,"IVMBULL",0)=COUNT
"RTN","IVMCMB",92,0)
 Q
"RTN","IVMCMC")
0^4^B22707524
"RTN","IVMCMC",1,0)
IVMCMC ;ALB/SEK,BRM - CHECK INCOME TEST TRANSMISSION SEGMENTS ; 3/6/01 3:43pm
"RTN","IVMCMC",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,34,49**;21-OCT-94
"RTN","IVMCMC",3,0)
 ;
"RTN","IVMCMC",4,0)
EN ; Check segment structure of Income Test (Z10) transmission.
"RTN","IVMCMC",5,0)
 ;  Variable input:
"RTN","IVMCMC",6,0)
 ;      IVMDA  --  pointer to an incoming message line in file #772
"RTN","IVMCMC",7,0)
 ;     IVMORF  --  [optional]: set to 1 if Z10 is an ORF message
"RTN","IVMCMC",8,0)
 ;     IVMSEG  --  the MSH segment string
"RTN","IVMCMC",9,0)
 ; 
"RTN","IVMCMC",10,0)
 ;     plus the usual HL7 variables: HLDA, HLFS, HLQ, HLECH
"RTN","IVMCMC",11,0)
 ; 
"RTN","IVMCMC",12,0)
 ;  Variable output:
"RTN","IVMCMC",13,0)
 ;        DFN  --  pointer to the patient in file #2
"RTN","IVMCMC",14,0)
 ;       DGLY  --  Income Year
"RTN","IVMCMC",15,0)
 ;    IVMFLGC  --  Number of Dependent Children
"RTN","IVMCMC",16,0)
 ;    IVMMCI   --  HL7 message control id of query sent to IVM Center
"RTN","IVMCMC",17,0)
 ; 
"RTN","IVMCMC",18,0)
 ;    and the global array ^TMP($J,"IVMCM" which holds the message.
"RTN","IVMCMC",19,0)
 ;
"RTN","IVMCMC",20,0)
 N ERRMSG,DOBP,SEXP,X,Y
"RTN","IVMCMC",21,0)
 ;
"RTN","IVMCMC",22,0)
 ; - message control id from MSH segment
"RTN","IVMCMC",23,0)
 S MSGID=$P(IVMSEG,HLFS,10)
"RTN","IVMCMC",24,0)
 ;
"RTN","IVMCMC",25,0)
 ; - if query response (ORF), do additional edit checks
"RTN","IVMCMC",26,0)
 I $G(IVMORF) D ADDL I $D(HLERR) G ENQ
"RTN","IVMCMC",27,0)
 ;
"RTN","IVMCMC",28,0)
 ; - check the PID segment and get a match on patient
"RTN","IVMCMC",29,0)
 D GET("PIDV") I IVMSEG1'="PID" D PROB("Missing PID segment") G ENQ
"RTN","IVMCMC",30,0)
 S DOBP=$P(IVMSEG,HLFS,8),SEXP=$P(IVMSEG,HLFS,9)
"RTN","IVMCMC",31,0)
 I SEXP'="F"&(SEXP'="M") D PROB("Incorrect value for Sex") G ENQ
"RTN","IVMCMC",32,0)
 S X=$$FMDATE^HLFNC(DOBP),%DT=X D ^%DT I Y<0 D PROB("Invalid Date of Birth") G ENQ
"RTN","IVMCMC",33,0)
 S DFN=$$LOOKUP^IVMUFNC($P(IVMSEG,HLFS,20),Y,SEXP,.ERRMSG)
"RTN","IVMCMC",34,0)
 I 'DFN D PROB(ERRMSG) G ENQ
"RTN","IVMCMC",35,0)
 ;
"RTN","IVMCMC",36,0)
 ; - check for veteran's ZIC and ZIR segments
"RTN","IVMCMC",37,0)
 D GET("ZICV") I IVMSEG1'="ZIC" D PROB("Missing veteran's ZIC segment") G ENQ
"RTN","IVMCMC",38,0)
 S DGLY=$$FMDATE^HLFNC($P(IVMSEG,"^",3)) ; income year
"RTN","IVMCMC",39,0)
 I 'DGLY D PROB("Missing veteran's Income Year") G ENQ
"RTN","IVMCMC",40,0)
 D GET("ZIRV") I IVMSEG1'="ZIR" D PROB("Missing veteran's ZIR segment") G ENQ
"RTN","IVMCMC",41,0)
 ;
"RTN","IVMCMC",42,0)
 ; - check for spouse's ZDP, ZIC, ZIR segments
"RTN","IVMCMC",43,0)
 D GET("ZDPS") I IVMSEG1'="ZDP" D PROB("Missing spouse's ZDP segment") G ENQ
"RTN","IVMCMC",44,0)
 D GET("ZICS") I IVMSEG1'="ZIC" D PROB("Missing spouse's ZIC segment") G ENQ
"RTN","IVMCMC",45,0)
 D GET("ZIRS") I IVMSEG1'="ZIR" D PROB("Missing spouse's ZIR segment") G ENQ
"RTN","IVMCMC",46,0)
 ;
"RTN","IVMCMC",47,0)
 ; - check for dependent children's ZDP, ZIC, ZIR segments and ZMT segment
"RTN","IVMCMC",48,0)
 S IVMFLGC=0
"RTN","IVMCMC",49,0)
 F IVMNBR=1:1 D  I $D(HLERR)!(IVMSEG1="ZMT") Q
"RTN","IVMCMC",50,0)
 .D GET("ZDPC",IVMNBR) I IVMSEG1'="ZDP",IVMSEG1'="ZMT" D PROB("Missing child's ZDP segment or ZMT segment") Q
"RTN","IVMCMC",51,0)
 .I IVMSEG1="ZMT" Q
"RTN","IVMCMC",52,0)
 .I $P(IVMSEG,"^",2)=""!($P(IVMSEG,"^",3)="")!($P(IVMSEG,"^",4)="") D PROB("Missing child data from ZDP segment") Q
"RTN","IVMCMC",53,0)
 .D GET("ZICC",IVMNBR) I IVMSEG1'="ZIC" D PROB("Missing child's ZIC segment") Q
"RTN","IVMCMC",54,0)
 .D GET("ZIRC",IVMNBR) I IVMSEG1'="ZIR" D PROB("Missing child's ZIR segment") Q
"RTN","IVMCMC",55,0)
 .S IVMFLGC=IVMFLGC+1 ; # of children
"RTN","IVMCMC",56,0)
 ;
"RTN","IVMCMC",57,0)
 I $D(HLERR) G ENQ
"RTN","IVMCMC",58,0)
 ;
"RTN","IVMCMC",59,0)
 ; - check for remaining ZMT and ZBT segments
"RTN","IVMCMC",60,0)
 D GET("ZMT2") I IVMSEG1'="ZMT" D PROB("Missing Copay Test ZMT segment") G ENQ
"RTN","IVMCMC",61,0)
 ;
"RTN","IVMCMC",62,0)
 ; ** added ZMT4 lines for LTC phase II (IVM*2*49)
"RTN","IVMCMC",63,0)
 ; uncomment after all sites have installed to enable consistency chk
"RTN","IVMCMC",64,0)
 ;D GET("ZMT4") I IVMSEG1'="ZMT" D PROB("Missing LTC Test ZMT segment") G ENQ
"RTN","IVMCMC",65,0)
 ;
"RTN","IVMCMC",66,0)
 ; remove next line after all sites have installed
"RTN","IVMCMC",67,0)
 D GET("ZMT4") I IVMSEG1'="ZMT" K ^TMP($J,"IVMCM","ZMT4") S IVMDA=IVMDA-1
"RTN","IVMCMC",68,0)
 ;
"RTN","IVMCMC",69,0)
 D GET("ZBT") I IVMSEG1'="ZBT" D PROB("Missing Beneficiary Travel ZBT segment") G ENQ
"RTN","IVMCMC",70,0)
 ;
"RTN","IVMCMC",71,0)
ENQ I IVMSEG1="MSH" S IVMDA=IVMDA-1,HLERR="",IVMTYPE=5
"RTN","IVMCMC",72,0)
 K IVMSEG1,IVMNBR
"RTN","IVMCMC",73,0)
 Q
"RTN","IVMCMC",74,0)
 ;
"RTN","IVMCMC",75,0)
 ;
"RTN","IVMCMC",76,0)
GET(SEG,NUM) ; Get the next HL7 segment.
"RTN","IVMCMC",77,0)
 ;  Formal input:
"RTN","IVMCMC",78,0)
 ;        SEG  --  String with which to build ^TMP($J,"IVMCM"
"RTN","IVMCMC",79,0)
 ;        NUM  --  Number to index child dependent strings [optional]
"RTN","IVMCMC",80,0)
 ;  Required variable input:
"RTN","IVMCMC",81,0)
 ;       HLDA  --  Pointer to the incoming message in file #772
"RTN","IVMCMC",82,0)
 ;      IVMDA  --  Pointer to the next message line within file #772
"RTN","IVMCMC",83,0)
 S IVMDA=$O(^TMP($J,IVMRTN,+IVMDA)),IVMSEG=$G(^(+IVMDA,0))
"RTN","IVMCMC",84,0)
 S IVMSEG1=$E(IVMSEG,1,3)
"RTN","IVMCMC",85,0)
 I $G(SEG)="" G GETQ
"RTN","IVMCMC",86,0)
 I $G(NUM),IVMSEG1'="ZMT" S ^TMP($J,"IVMCM",SEG,NUM)=$P(IVMSEG,HLFS,2,99) G GETQ
"RTN","IVMCMC",87,0)
 I IVMSEG1="ZMT",$E(SEG,1,3)'="ZMT" S SEG="ZMT1"
"RTN","IVMCMC",88,0)
 S ^TMP($J,"IVMCM",SEG)=$P(IVMSEG,HLFS,2,99)
"RTN","IVMCMC",89,0)
GETQ Q
"RTN","IVMCMC",90,0)
 ;
"RTN","IVMCMC",91,0)
PROB(ERR) ; Process encountered errors.
"RTN","IVMCMC",92,0)
 ;  Input:  ERR  --  Error text
"RTN","IVMCMC",93,0)
 S HLERR=ERR
"RTN","IVMCMC",94,0)
 D ACK^IVMPREC
"RTN","IVMCMC",95,0)
 Q
"RTN","IVMCMC",96,0)
 ;
"RTN","IVMCMC",97,0)
ADDL ; Perform additional segment checks for ORF messages.
"RTN","IVMCMC",98,0)
 ;
"RTN","IVMCMC",99,0)
 N DOB,ERRMSG,IVMMSA,IVMPAT,IVMQRD,IVMQRF,QARRAY,QRYIEN,SEX,SSN
"RTN","IVMCMC",100,0)
 ;
"RTN","IVMCMC",101,0)
 ; edit checks for MSA, QRD, and QRF segments
"RTN","IVMCMC",102,0)
 D GET("") I IVMSEG1'="MSA" D PROB("Missing required MSA segment") G ADDLQ
"RTN","IVMCMC",103,0)
 S IVMMCI=$P(IVMSEG,"^",3) ; msg control id of msg being acknowledged
"RTN","IVMCMC",104,0)
 S IVMMSA=IVMSEG
"RTN","IVMCMC",105,0)
 ; trace reply back to the original query msg
"RTN","IVMCMC",106,0)
 S QRYIEN=$$FINDMSG^IVMCQ2(IVMMCI)
"RTN","IVMCMC",107,0)
 I 'QRYIEN D PROB("Query not found") G ADDLQ
"RTN","IVMCMC",108,0)
 I QRYIEN,'$$GET^IVMCQ2(QRYIEN,.QARRAY) D PROB("Query not found") G ADDLQ
"RTN","IVMCMC",109,0)
 S DFN=QARRAY("DFN")
"RTN","IVMCMC",110,0)
 ;
"RTN","IVMCMC",111,0)
 D GET("") I IVMSEG1'="QRD" D PROB("Missing required QRD segment") G ADDLQ
"RTN","IVMCMC",112,0)
 S IVMQRD=IVMSEG
"RTN","IVMCMC",113,0)
 S SSN=$P(IVMQRD,HLFS,9)
"RTN","IVMCMC",114,0)
 ;
"RTN","IVMCMC",115,0)
 D GET("") I IVMSEG1'="QRF" D PROB("Missing required QRF segment") G ADDLQ
"RTN","IVMCMC",116,0)
 S IVMQRF=IVMSEG
"RTN","IVMCMC",117,0)
 S DOB=$$FMDATE^HLFNC($P(IVMQRF,HLFS,5))
"RTN","IVMCMC",118,0)
 S SEX=$P(IVMQRF,HLFS,6)
"RTN","IVMCMC",119,0)
 ;
"RTN","IVMCMC",120,0)
 ;
"RTN","IVMCMC",121,0)
 ; if application reject rec'd from HEC (i.e. No income data on file)
"RTN","IVMCMC",122,0)
 I $P(IVMMSA,HLFS,2)="AR" D
"RTN","IVMCMC",123,0)
 .S HLERR=""
"RTN","IVMCMC",124,0)
 .S IVMTYPE=7  ;type 4 is now used for LTC test (IVM*2*49)
"RTN","IVMCMC",125,0)
 .; - if patient identifiers rec'd from HEC incorrect, 
"RTN","IVMCMC",126,0)
 .;   queue off job to send a new query
"RTN","IVMCMC",127,0)
 .I $$GETPAT^IVMUFNC(DFN,.IVMPAT),((SSN'=IVMPAT("SSN"))!(DOB'=IVMPAT("DOB"))!(SEX'=IVMPAT("SEX"))) D QRYQUE^IVMCQ2(DFN)
"RTN","IVMCMC",128,0)
 ;
"RTN","IVMCMC",129,0)
ADDLQ Q
"RTN","IVMCMD")
0^9^B37811469
"RTN","IVMCMD",1,0)
IVMCMD ;ALB/SEK,KCL,BRM - DELETE DCD INCOME TESTS ; 12/18/01 1:18pm
"RTN","IVMCMD",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,33,49**;21-OCT-94
"RTN","IVMCMD",3,0)
 ;
"RTN","IVMCMD",4,0)
 ;
"RTN","IVMCMD",5,0)
 ;
"RTN","IVMCMD",6,0)
EN(IVMMTIEN) ; --
"RTN","IVMCMD",7,0)
 ; This routine will process income test deletion requests received
"RTN","IVMCMD",8,0)
 ; from the IVM Center.
"RTN","IVMCMD",9,0)
 ;
"RTN","IVMCMD",10,0)
 ;  Input(s):
"RTN","IVMCMD",11,0)
 ;           IVMMTIEN - pointer to test to be deleted in file 408.31
"RTN","IVMCMD",12,0)
 ;
"RTN","IVMCMD",13,0)
 ; Output(s):
"RTN","IVMCMD",14,0)
 ;           Function Value - 1 test deleted
"RTN","IVMCMD",15,0)
 ;                            0 test not deleted   
"RTN","IVMCMD",16,0)
 ;
"RTN","IVMCMD",17,0)
 ;
"RTN","IVMCMD",18,0)
 ; Initialize variables
"RTN","IVMCMD",19,0)
 N DFN,IVMERR,IVMLINK,IVMNODE0,IVMDOT,IVMTOT,IVMDONE,IVMLTC
"RTN","IVMCMD",20,0)
 S IVMDONE=0
"RTN","IVMCMD",21,0)
 ;
"RTN","IVMCMD",22,0)
EN1 ; Get zero node of (#408.31)
"RTN","IVMCMD",23,0)
 S IVMNODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","IVMCMD",24,0)
 I 'IVMNODE0 Q 1  ; test not found
"RTN","IVMCMD",25,0)
 S IVMDOT=$P(IVMNODE0,"^") ; date of test
"RTN","IVMCMD",26,0)
 S DFN=$P(IVMNODE0,"^",2)
"RTN","IVMCMD",27,0)
 S IVMTOT=$P(IVMNODE0,"^",19) ; type of test
"RTN","IVMCMD",28,0)
 S IVMLINK=$P($G(^DGMT(408.31,IVMMTIEN,2)),"^",6)
"RTN","IVMCMD",29,0)
 I IVMTOT=1,$D(^DGMT(408.31,"AT",IVMMTIEN)) S IVMLTC=$O(^DGMT(408.31,"AT",IVMMTIEN,""))
"RTN","IVMCMD",30,0)
 I IVMTOT=2,IVMLINK Q 0  ; don't delete copay test linked to means test
"RTN","IVMCMD",31,0)
 I IVMTOT=1 D  I $D(IVMERR) Q 0  ;if MT linked, delete linked test
"RTN","IVMCMD",32,0)
 .D:IVMLINK DELETE(IVMLINK,DFN,IVMDOT) ; delete copay test
"RTN","IVMCMD",33,0)
 .D:$G(IVMLTC) DELETE(IVMLTC,DFN,IVMDOT) ; delete LTC test
"RTN","IVMCMD",34,0)
 ;
"RTN","IVMCMD",35,0)
 D DELETE(IVMMTIEN,DFN,IVMDOT) ; delete copay or MT
"RTN","IVMCMD",36,0)
 Q IVMDONE
"RTN","IVMCMD",37,0)
 ;
"RTN","IVMCMD",38,0)
DELETE(IVMMTIEN,DFN,IVMDOT) ; delete copay or MT
"RTN","IVMCMD",39,0)
 ;
"RTN","IVMCMD",40,0)
 ; Handle LTC test deletion if there is an associated Means Test
"RTN","IVMCMD",41,0)
 I $P($G(^DGMT(408.31,+IVMMTIEN,0)),"^",19)=4,+$P($G(^DGMT(408.31,+IVMMTIEN,2)),"^",8) D DEL31^IVMCMD1(IVMMTIEN) Q
"RTN","IVMCMD",42,0)
 ;
"RTN","IVMCMD",43,0)
 ; Set DGMTP prior to delete
"RTN","IVMCMD",44,0)
 S DGMTACT="DEL",DGMTI=IVMMTIEN D PRIOR^DGMTEVT
"RTN","IVMCMD",45,0)
 ;
"RTN","IVMCMD",46,0)
 ; Get Income Relation IEN array (DGINR) and
"RTN","IVMCMD",47,0)
 ; Individual Annual Income IEN array (DGINC)
"RTN","IVMCMD",48,0)
 D ALL^DGMTU21(DFN,"VSC",IVMDOT,"IR",IVMMTIEN)
"RTN","IVMCMD",49,0)
 ;
"RTN","IVMCMD",50,0)
 ;
"RTN","IVMCMD",51,0)
DEL22 ; Delete veteran, spouse, and dependent entries from the 
"RTN","IVMCMD",52,0)
 ; Income Relation (#408.22) file:
"RTN","IVMCMD",53,0)
 ; - Veteran (#408.22) record
"RTN","IVMCMD",54,0)
 S DA=$G(DGINR("V")) D
"RTN","IVMCMD",55,0)
 .Q:'DA
"RTN","IVMCMD",56,0)
 .S DIK="^DGMT(408.22,"
"RTN","IVMCMD",57,0)
 .D ^DIK
"RTN","IVMCMD",58,0)
 ;
"RTN","IVMCMD",59,0)
 ; - Spouse (#408.22) record
"RTN","IVMCMD",60,0)
 S DA=$G(DGINR("S")) D
"RTN","IVMCMD",61,0)
 .Q:'DA
"RTN","IVMCMD",62,0)
 .S DIK="^DGMT(408.22,"
"RTN","IVMCMD",63,0)
 .D ^DIK
"RTN","IVMCMD",64,0)
 ;
"RTN","IVMCMD",65,0)
 ; - All dependent children (#408.22) records
"RTN","IVMCMD",66,0)
 S IVMDEP=0
"RTN","IVMCMD",67,0)
 F  S IVMDEP=$O(DGINR("C",IVMDEP)) Q:'IVMDEP  D
"RTN","IVMCMD",68,0)
 .S DA=$G(DGINR("C",IVMDEP))
"RTN","IVMCMD",69,0)
 .S DIK="^DGMT(408.22,"
"RTN","IVMCMD",70,0)
 .D ^DIK
"RTN","IVMCMD",71,0)
 ;
"RTN","IVMCMD",72,0)
 ;
"RTN","IVMCMD",73,0)
DEL21 ; Delete veteran, spouse, and dependent entries from
"RTN","IVMCMD",74,0)
 ; Individual Annual Income (#408.21) file:
"RTN","IVMCMD",75,0)
 ; - Veteran (#408.21) record
"RTN","IVMCMD",76,0)
 S DA=$G(DGINC("V")) D
"RTN","IVMCMD",77,0)
 .Q:'DA
"RTN","IVMCMD",78,0)
 .S DIK="^DGMT(408.21,"
"RTN","IVMCMD",79,0)
 .D ^DIK
"RTN","IVMCMD",80,0)
 ;
"RTN","IVMCMD",81,0)
 ; - Spouse (#408.21) record
"RTN","IVMCMD",82,0)
 S DA=$G(DGINC("S")) D
"RTN","IVMCMD",83,0)
 .Q:'DA
"RTN","IVMCMD",84,0)
 .S DIK="^DGMT(408.21,"
"RTN","IVMCMD",85,0)
 .D ^DIK
"RTN","IVMCMD",86,0)
 ;
"RTN","IVMCMD",87,0)
 ; - All dependent children (#408.21) records
"RTN","IVMCMD",88,0)
 S IVMDEP=0
"RTN","IVMCMD",89,0)
 F  S IVMDEP=$O(DGINC("C",IVMDEP)) Q:'IVMDEP  D
"RTN","IVMCMD",90,0)
 .S DA=$G(DGINC("C",IVMDEP))
"RTN","IVMCMD",91,0)
 .S DIK="^DGMT(408.21,"
"RTN","IVMCMD",92,0)
 .D ^DIK
"RTN","IVMCMD",93,0)
 ;
"RTN","IVMCMD",94,0)
 ;
"RTN","IVMCMD",95,0)
 ; Logic for (#408.12/#408.1275) & (#408.13) file entries
"RTN","IVMCMD",96,0)
 D SETUPAR
"RTN","IVMCMD",97,0)
 ;
"RTN","IVMCMD",98,0)
 ; Look for IVM/DCD Patient Realtion (#408.12) file entries.
"RTN","IVMCMD",99,0)
 ; If no entries in "AIVM" x-ref, no dependent changes required.
"RTN","IVMCMD",100,0)
 S IVM12="" F  S IVM12=$O(^DGPR(408.12,"AIVM",IVMMTIEN,IVM12)) Q:'IVM12  D  Q:$D(IVMERR)
"RTN","IVMCMD",101,0)
 .; - if can't find entry in (#408.12), set IVMERR
"RTN","IVMCMD",102,0)
 .I $G(^DGPR(408.12,+IVM12,0))']"" D  Q
"RTN","IVMCMD",103,0)
 ..S IVMERR="" Q
"RTN","IVMCMD",104,0)
 .;
"RTN","IVMCMD",105,0)
 .; - if only one record exists in (#408.1275) mult., then only one IVM/DCD dependent to delete
"RTN","IVMCMD",106,0)
 .I $P($G(^DGPR(408.12,+IVM12,"E",0)),"^",4)=1 D  Q
"RTN","IVMCMD",107,0)
 ..;
"RTN","IVMCMD",108,0)
 ..; -- if can't find entry in (#408.13), set IVMERR
"RTN","IVMCMD",109,0)
 ..S IVM13=$P($P($G(^DGPR(408.12,+IVM12,0)),"^",3),";") I $G(^DGPR(408.13,+IVM13,0))']"" D  Q
"RTN","IVMCMD",110,0)
 ...S IVMERR="" Q
"RTN","IVMCMD",111,0)
 ..;
"RTN","IVMCMD",112,0)
 ..; -- delete (#408.12) & (#408.13) records for IVM/DCD dependent
"RTN","IVMCMD",113,0)
 ..S DA=IVM12,DIK="^DGPR(408.12," D ^DIK K DA,DIK
"RTN","IVMCMD",114,0)
 ..S DA=IVM13,DIK="^DGPR(408.13," D ^DIK K DA,DIK
"RTN","IVMCMD",115,0)
 ..Q
"RTN","IVMCMD",116,0)
 .;
"RTN","IVMCMD",117,0)
 .;
"RTN","IVMCMD",118,0)
 .; Delete (#408.1275) record for IVM/DCD dependent and
"RTN","IVMCMD",119,0)
 .; change demo data in (#408.12) & (#408.13) back to VAMC values.
"RTN","IVMCMD",120,0)
 .; OR, Delete (#408.1275) record for inactivated VAMC dependent.
"RTN","IVMCMD",121,0)
 .S IVM121="",IVM121=$O(^DGPR(408.12,"AIVM",IVMMTIEN,+IVM12,IVM121))
"RTN","IVMCMD",122,0)
 .; - if can't find entry in (#408.1275), set IVMERR
"RTN","IVMCMD",123,0)
 .I $G(^DGPR(408.12,+IVM12,"E",+IVM121,0))']"" D  Q
"RTN","IVMCMD",124,0)
 ..S IVMERR="" Q
"RTN","IVMCMD",125,0)
 .;
"RTN","IVMCMD",126,0)
 .S IVMVAMCA=$P($G(^DGPR(408.12,+IVM12,"E",+IVM121,0)),"^",2) ; dependent active?
"RTN","IVMCMD",127,0)
 .S DA(1)=IVM12,DA=IVM121,DIK="^DGPR(408.12,"_DA(1)_",""E"","
"RTN","IVMCMD",128,0)
 .D ^DIK K DA(1),DA,DIK
"RTN","IVMCMD",129,0)
 .;
"RTN","IVMCMD",130,0)
 .; - quit if inactivated VAMC dependent
"RTN","IVMCMD",131,0)
 .Q:'IVMVAMCA
"RTN","IVMCMD",132,0)
 .;
"RTN","IVMCMD",133,0)
 .; - get pointer to Income Person (#408.13) file
"RTN","IVMCMD",134,0)
 .S IVM13=+$P($P($G(^DGPR(408.12,+IVM12,0)),"^",3),";")
"RTN","IVMCMD",135,0)
 .;
"RTN","IVMCMD",136,0)
 .; - change demo data back to original values
"RTN","IVMCMD",137,0)
 .D DEMO
"RTN","IVMCMD",138,0)
 .Q
"RTN","IVMCMD",139,0)
 ;
"RTN","IVMCMD",140,0)
 ; Complete deletion of income test
"RTN","IVMCMD",141,0)
 D EN^IVMCMD1
"RTN","IVMCMD",142,0)
 ;
"RTN","IVMCMD",143,0)
ENQ Q
"RTN","IVMCMD",144,0)
 ;
"RTN","IVMCMD",145,0)
 ;
"RTN","IVMCMD",146,0)
DEMO ; Change demographic data in (#408.12) & (#408.13) files
"RTN","IVMCMD",147,0)
 ; back to original VAMC values.
"RTN","IVMCMD",148,0)
 ;
"RTN","IVMCMD",149,0)
 ; Input(s):
"RTN","IVMCMD",150,0)
 ;      IVM12 - as IEN of (#408.12) file
"RTN","IVMCMD",151,0)
 ;      IVM13 - as IEN of (#408.13) file
"RTN","IVMCMD",152,0)
 ;   IVMMTIEN - as IEN of (#408.31) file
"RTN","IVMCMD",153,0)
 ;
"RTN","IVMCMD",154,0)
 ; Output(s): None
"RTN","IVMCMD",155,0)
 ;
"RTN","IVMCMD",156,0)
 ; NOTE: File (#408.13) fields were added to (#408.41) file before
"RTN","IVMCMD",157,0)
 ;       file (#408.12) field.
"RTN","IVMCMD",158,0)
 ;
"RTN","IVMCMD",159,0)
 K DR S IVM41=0
"RTN","IVMCMD",160,0)
 F  S IVM41=$O(^DGMT(408.41,"D",IVMMTIEN,IVM41)) Q:'IVM41  D
"RTN","IVMCMD",161,0)
 .S IVM411=$G(^DGMT(408.41,+IVM41,0))
"RTN","IVMCMD",162,0)
 .Q:$P(IVM411,"^",10)'=IVM13
"RTN","IVMCMD",163,0)
 .S IVMOLD=$P(IVM411,"^",5)
"RTN","IVMCMD",164,0)
 .S IVMOLD=$S(IVMOLD="":"@",1:IVMOLD)
"RTN","IVMCMD",165,0)
 .S IVMFILE=$P(IVMAR1($P(IVM411,"^",2)),";")
"RTN","IVMCMD",166,0)
 .S IVMNOD=$P(IVMAR1($P(IVM411,"^",2)),";",2)
"RTN","IVMCMD",167,0)
 .I IVMFILE=408.13 S DA=IVM13,DIE="^DGPR(408.13,"
"RTN","IVMCMD",168,0)
 .I IVMFILE=408.12 S DA=IVM12,DIE="^DGPR(408.12,"
"RTN","IVMCMD",169,0)
 .S DR=IVMNOD_"////^S X=IVMOLD"
"RTN","IVMCMD",170,0)
 .D ^DIE K DA,DR,DIE
"RTN","IVMCMD",171,0)
 Q
"RTN","IVMCMD",172,0)
 ;
"RTN","IVMCMD",173,0)
 ;
"RTN","IVMCMD",174,0)
SETUPAR ; Create array IVMAR1() where
"RTN","IVMCMD",175,0)
 ;  1) Subscript is MT Changes Type (#408.42) file node where type of
"RTN","IVMCMD",176,0)
 ;     change = Name, DOB, SSN, Sex, Relationship.
"RTN","IVMCMD",177,0)
 ;  2) 1st piece is (#408.12) or (#408.13) file.
"RTN","IVMCMD",178,0)
 ;  3) 2nd piece is (#408.12) or (#408.13) file field number.
"RTN","IVMCMD",179,0)
 ;
"RTN","IVMCMD",180,0)
 F IVM41=4:1 S IVM411=$P($T(TYPECH+IVM41),";;",2) Q:IVM411="QUIT"  D
"RTN","IVMCMD",181,0)
 .S IVMAR1($P(IVM411,";"))=$P(IVM411,";",2,3)
"RTN","IVMCMD",182,0)
 K IVM41,IVM411
"RTN","IVMCMD",183,0)
 Q
"RTN","IVMCMD",184,0)
 ;
"RTN","IVMCMD",185,0)
DELTYPE(DFN,MTDATE,TYPE) ;
"RTN","IVMCMD",186,0)
 ;will delete any primary test for patient=DFN for same income year as
"RTN","IVMCMD",187,0)
 ;MTDATE for test of type=TYPE
"RTN","IVMCMD",188,0)
 ;
"RTN","IVMCMD",189,0)
 Q:'$G(DFN)
"RTN","IVMCMD",190,0)
 Q:'$G(MTDATE)
"RTN","IVMCMD",191,0)
 Q:'$G(TYPE)
"RTN","IVMCMD",192,0)
 N MTNODE,YEAR,RET
"RTN","IVMCMD",193,0)
 S YEAR=$E(MTDATE,1,3)_1230.999999
"RTN","IVMCMD",194,0)
 D
"RTN","IVMCMD",195,0)
 .S MTNODE=$$LST^DGMTU(DFN,YEAR,TYPE)
"RTN","IVMCMD",196,0)
 .Q:'+MTNODE
"RTN","IVMCMD",197,0)
 .I $E($P(MTNODE,"^",2),1,3)'=$E(YEAR,1,3) Q
"RTN","IVMCMD",198,0)
 .;don't want to delete auto-created Rx copay tests -they are deleted by
"RTN","IVMCMD",199,0)
 .; deleting the MT that they are based on
"RTN","IVMCMD",200,0)
 .I TYPE=2,+$P($G(^DGMT(408.31,+MTNODE,2)),"^",6) Q
"RTN","IVMCMD",201,0)
 .I $P(MTNODE,"^",5),$P(MTNODE,"^",5)'=1 I $$EN(+MTNODE) D
"RTN","IVMCMD",202,0)
 ..;
"RTN","IVMCMD",203,0)
 ..S RET=$$LST^DGMTU(DFN,DT,IVMTYPE)
"RTN","IVMCMD",204,0)
 ..I $E($P(RET,"^",2),1,3)'=$E(YEAR,1,3) S RET=""
"RTN","IVMCMD",205,0)
 ..D ADD^IVMCMB(DFN,IVMTYPE,"DELETE PRMY TEST",$P(MTNODE,"^",2),$P(MTNODE,"^",4),$P(RET,"^",4))
"RTN","IVMCMD",206,0)
 Q
"RTN","IVMCMD",207,0)
 ;
"RTN","IVMCMD",208,0)
TYPECH ; Type of dependent changes (#408.41/#408.42) file
"RTN","IVMCMD",209,0)
 ;    1st piece - 408.42 table file node
"RTN","IVMCMD",210,0)
 ;    2nd piece - file (408.12/408.13)
"RTN","IVMCMD",211,0)
 ;    3rd piece - 408.12/408.13 field
"RTN","IVMCMD",212,0)
 ;;16;408.13;.01
"RTN","IVMCMD",213,0)
 ;;17;408.13;.03
"RTN","IVMCMD",214,0)
 ;;18;408.13;.09
"RTN","IVMCMD",215,0)
 ;;19;408.13;.02
"RTN","IVMCMD",216,0)
 ;;20;408.12;.02
"RTN","IVMCMD",217,0)
 ;;QUIT
"RTN","IVMCMD",218,0)
 Q
"RTN","IVMCME")
0^5^B11899624
"RTN","IVMCME",1,0)
IVMCME ;ALB/SEK,BRM - DCD INCOME TEST EDIT CHECK DRIVER ; 12/18/01 1:26pm
"RTN","IVMCME",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,49**;21-OCT-94
"RTN","IVMCME",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMCME",4,0)
 ;
"RTN","IVMCME",5,0)
 ; This routine will perform edit checks to validate income tests
"RTN","IVMCME",6,0)
 ; which are transmitted to DHCP from that Data Collection Division
"RTN","IVMCME",7,0)
 ; of the IVM Center.  Any errors will be recorded and will be sent
"RTN","IVMCME",8,0)
 ; automatically to the IVM Center for processing.
"RTN","IVMCME",9,0)
 ;
"RTN","IVMCME",10,0)
 ; This routine is called from IVMCM1.
"RTN","IVMCME",11,0)
 ;
"RTN","IVMCME",12,0)
 ; Required Input:
"RTN","IVMCME",13,0)
 ;   The global array ^TMP($J,"IVMCM" which contains the income test
"RTN","IVMCME",14,0)
 ;   The local variable IVMTYPE, which may be:
"RTN","IVMCME",15,0)
 ;       1 - Means Test
"RTN","IVMCME",16,0)
 ;       2 - Copay Test
"RTN","IVMCME",17,0)
 ;       3 - Income Screening information only
"RTN","IVMCME",18,0)
 ;       4 - Long Term Care Test
"RTN","IVMCME",19,0)
 ;
"RTN","IVMCME",20,0)
 ; Output:
"RTN","IVMCME",21,0)
 ;   IVMMTERR as error condition found (free text)
"RTN","IVMCME",22,0)
 ;
"RTN","IVMCME",23,0)
EN() ; Entry point to begin edit checks.
"RTN","IVMCME",24,0)
 ;
"RTN","IVMCME",25,0)
 N ARRAY,DEP,ERROR,I,IEN,SPOUSE,STRING,TYPE,X
"RTN","IVMCME",26,0)
 S ERROR=""
"RTN","IVMCME",27,0)
 ;
"RTN","IVMCME",28,0)
 I '$G(IVMTYPE) S ERROR="Income Test Type not Specified" G ENQ
"RTN","IVMCME",29,0)
 ;
"RTN","IVMCME",30,0)
 ; - build strings for the veteran
"RTN","IVMCME",31,0)
 S SPOUSE=0,DEP=1
"RTN","IVMCME",32,0)
 S ARRAY("PID")=$$CLEAR($G(^TMP($J,"IVMCM","PIDV")))
"RTN","IVMCME",33,0)
 S ARRAY("ZIC")=$$CLEAR($G(^TMP($J,"IVMCM","ZICV"))),$P(ARRAY("ZIC"),HLFS,21)=$$TOTAL(ARRAY("ZIC"))
"RTN","IVMCME",34,0)
 S ARRAY("ZIR")=$$CLEAR($G(^TMP($J,"IVMCM","ZIRV")))
"RTN","IVMCME",35,0)
 ;
"RTN","IVMCME",36,0)
 ; - build strings for spouse as dependent
"RTN","IVMCME",37,0)
 S ARRAY(DEP,"ZDP")=$$CLEAR($G(^TMP($J,"IVMCM","ZDPS")))
"RTN","IVMCME",38,0)
 S ARRAY(DEP,"ZIC")=$$CLEAR($G(^TMP($J,"IVMCM","ZICS")))
"RTN","IVMCME",39,0)
 S ARRAY(DEP,"ZIR")=$$CLEAR($G(^TMP($J,"IVMCM","ZIRS")))
"RTN","IVMCME",40,0)
 D ADJ
"RTN","IVMCME",41,0)
 ;
"RTN","IVMCME",42,0)
 ; - build strings for children as dependents
"RTN","IVMCME",43,0)
 S IEN=0 F  S IEN=$O(^TMP($J,"IVMCM","ZDPC",IEN)) Q:'IEN  D
"RTN","IVMCME",44,0)
 . S DEP=DEP+1
"RTN","IVMCME",45,0)
 . S ARRAY(DEP,"ZDP")=$$CLEAR($G(^TMP($J,"IVMCM","ZDPC",IEN)))
"RTN","IVMCME",46,0)
 . S ARRAY(DEP,"ZIC")=$$CLEAR($G(^TMP($J,"IVMCM","ZICC",IEN)))
"RTN","IVMCME",47,0)
 . S ARRAY(DEP,"ZIR")=$$CLEAR($G(^TMP($J,"IVMCM","ZIRC",IEN)))
"RTN","IVMCME",48,0)
 . D ADJ
"RTN","IVMCME",49,0)
 ;
"RTN","IVMCME",50,0)
 ; - build income test string and check for errors
"RTN","IVMCME",51,0)
 S ARRAY("ZMT")=$$CLEAR($G(^TMP($J,"IVMCM","ZMT"_IVMTYPE)))
"RTN","IVMCME",52,0)
 S ERROR=$$CHECK()
"RTN","IVMCME",53,0)
ENQ Q ERROR
"RTN","IVMCME",54,0)
 ;
"RTN","IVMCME",55,0)
 ;
"RTN","IVMCME",56,0)
CHECK() ; check validity of transmission data
"RTN","IVMCME",57,0)
 ;
"RTN","IVMCME",58,0)
 ; Output:  error message (first one found)
"RTN","IVMCME",59,0)
 ;
"RTN","IVMCME",60,0)
 N ERROR,IEN
"RTN","IVMCME",61,0)
 S ERROR=$$ZIC^IVMCME2(ARRAY("ZIC"))
"RTN","IVMCME",62,0)
 I ERROR']"" S ERROR=$$ZIR^IVMCME1(ARRAY("ZIR"))
"RTN","IVMCME",63,0)
 I ERROR']"","^1^2^4^"[("^"_IVMTYPE_"^") S ERROR=$$ZMT^IVMCME4(ARRAY("ZMT"))
"RTN","IVMCME",64,0)
 I ERROR']"" F IEN=0:0 S IEN=$O(ARRAY(IEN)) Q:'IEN  D  I ERROR]"" G CHECKQ ; check dependent segments
"RTN","IVMCME",65,0)
 . S ERROR=$$ZDP^IVMCME3(ARRAY(IEN,"ZDP"),IEN)
"RTN","IVMCME",66,0)
 . I ERROR']"" S ERROR=$$ZIC^IVMCME2(ARRAY(IEN,"ZIC"),IEN)
"RTN","IVMCME",67,0)
 . I ERROR']"" S ERROR=$$ZIR^IVMCME1(ARRAY(IEN,"ZIR"),IEN)
"RTN","IVMCME",68,0)
CHECKQ Q ERROR
"RTN","IVMCME",69,0)
 ;
"RTN","IVMCME",70,0)
 ;
"RTN","IVMCME",71,0)
CLEAR(NODE) ; convert HLQ to null
"RTN","IVMCME",72,0)
 N I
"RTN","IVMCME",73,0)
 F I=1:1:25 I $P(NODE,HLFS,I)=HLQ S $P(NODE,HLFS,I)=""
"RTN","IVMCME",74,0)
 Q NODE
"RTN","IVMCME",75,0)
 ;
"RTN","IVMCME",76,0)
 ;
"RTN","IVMCME",77,0)
TOTAL(STRING,INCR,DEP) ; append total on the end
"RTN","IVMCME",78,0)
 N I,D,N,INC,DEB,NET S (INC,DEB,NET)=""
"RTN","IVMCME",79,0)
INC ; income
"RTN","IVMCME",80,0)
 I $D(INCR),$P($G(DEP),HLFS,6)'=2,'$P(INCR,HLFS,9) S INC=0 G DEBT
"RTN","IVMCME",81,0)
 F I=3:1:12 S INC=$G(INC)+$P(STRING,HLFS,I)
"RTN","IVMCME",82,0)
DEBT ; debts
"RTN","IVMCME",83,0)
 F I=13:1:15 S DEB=$G(DEB)+$P(STRING,HLFS,I)
"RTN","IVMCME",84,0)
NET ; net worth
"RTN","IVMCME",85,0)
 F I=16:1:19 I $P(STRING,HLFS,I)]"" S NET=$G(NET)+$P(STRING,HLFS,I)
"RTN","IVMCME",86,0)
 I NET]"" S NET=NET-$P(STRING,HLFS,20)
"RTN","IVMCME",87,0)
 Q INC_HLFS_DEB_HLFS_NET
"RTN","IVMCME",88,0)
 ;
"RTN","IVMCME",89,0)
 ;
"RTN","IVMCME",90,0)
ADJ ; Adjust spouse dependent's strings
"RTN","IVMCME",91,0)
 I $P(ARRAY(DEP,"ZDP"),HLFS,6)=2,$P(ARRAY(DEP,"ZDP"),HLFS,2,4)'="^^" S SPOUSE=DEP
"RTN","IVMCME",92,0)
 I $P(ARRAY(DEP,"ZDP"),HLFS,6)=2,$P(ARRAY(DEP,"ZDP"),HLFS,2,4)="^^" K ARRAY(DEP) S DEP=DEP-1
"RTN","IVMCME",93,0)
 I DEP S $P(ARRAY(DEP,"ZIC"),HLFS,21)=$$TOTAL(ARRAY(DEP,"ZIC"),ARRAY(DEP,"ZIR"),ARRAY(DEP,"ZDP"))
"RTN","IVMCME",94,0)
 Q
"RTN","IVMCME2")
0^6^B10084704
"RTN","IVMCME2",1,0)
IVMCME2 ;ALB/SEK,BRM - CHECK ANNUAL INCOME DATA ; 12/18/01 2:19pm
"RTN","IVMCME2",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,49**;21-OCT-94
"RTN","IVMCME2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMCME2",4,0)
 ;
"RTN","IVMCME2",5,0)
 ; This routine is called from IVMCME.
"RTN","IVMCME2",6,0)
 ;
"RTN","IVMCME2",7,0)
 ;
"RTN","IVMCME2",8,0)
ZIC(STRING,DEPIEN) ; check validity of ZIC segment
"RTN","IVMCME2",9,0)
 ;
"RTN","IVMCME2",10,0)
 ; Input:  STRING as ZIC segment
"RTN","IVMCME2",11,0)
 ;         DEPIEN as the IEN of the dependent in the array, if applicable
"RTN","IVMCME2",12,0)
 ;
"RTN","IVMCME2",13,0)
 ; Output: ERROR message or null
"RTN","IVMCME2",14,0)
 ;
"RTN","IVMCME2",15,0)
 N ERROR,FLAG,I,X,Y
"RTN","IVMCME2",16,0)
 S ERROR="",X=$P(STRING,HLFS,2),FLAG=0
"RTN","IVMCME2",17,0)
 I $E(X,1,4)<1992!($E(X,5,8)'="0000") S ERROR="Invalid Income Year in ZIC" G ZICQ
"RTN","IVMCME2",18,0)
 F I=3:1:20 I $$NUM($P(STRING,HLFS,I),7,2) S ERROR=$P($T(ZICFLD+I),";;",2)_" field content/length error" Q
"RTN","IVMCME2",19,0)
 I ERROR]"" G ZICQ
"RTN","IVMCME2",20,0)
 I $G(DEPIEN) D  I ERROR]"" G ZICQ
"RTN","IVMCME2",21,0)
 . F I=13,14 I $P(STRING,HLFS,I)]"" S ERROR="Dependents can't have medical or funeral expenses" Q
"RTN","IVMCME2",22,0)
 . I DEPIEN=SPOUSE,($P(STRING,HLFS,15)]"") S ERROR="No educational expenses for spouse" Q
"RTN","IVMCME2",23,0)
 . I DEPIEN'=SPOUSE D  Q:ERROR]""
"RTN","IVMCME2",24,0)
 . . I $P(STRING,HLFS,15)&('$P(ARRAY(DEPIEN,"ZIR"),U,9)) S ERROR="Dependent Educational Exp. error-income not avail. to vet" Q
"RTN","IVMCME2",25,0)
 . . S X=$E($P(STRING,HLFS,2),1,4) D ^%DT S X=Y
"RTN","IVMCME2",26,0)
 . . I $P(STRING,HLFS,15)]"" S X=$P(^DG(43,1,"MT",X,0),U,17) I X'<$P(STRING,HLFS,9) S ERROR="Income does not exceed child exclusion amount-educational expense not allowed" Q
"RTN","IVMCME2",27,0)
 . . F I=16:1:20 I $P(STRING,HLFS,I)]"" S ERROR="No net worth figures allowed for dependent children"
"RTN","IVMCME2",28,0)
 I $P(STRING,HLFS,20)>$P(STRING,HLFS,19) S ERROR="Debts can't be greater than Other Property or Assets" G ZICQ
"RTN","IVMCME2",29,0)
 I '$G(DEPIEN) D  I ERROR]"" G ZICQ
"RTN","IVMCME2",30,0)
 . I IVMTYPE'=1 Q
"RTN","IVMCME2",31,0)
 . I $P(ARRAY("ZMT"),HLFS,3)="C" Q
"RTN","IVMCME2",32,0)
 . S FLAG=0 F I=16:1:20 I $P(STRING,HLFS,I)]"" S FLAG=1 Q
"RTN","IVMCME2",33,0)
 . I 'FLAG,SPOUSE F I=16:1:20 I $P(ARRAY(SPOUSE,"ZIC"),HLFS,I)]"" S FLAG=1 Q
"RTN","IVMCME2",34,0)
ZICQ Q ERROR
"RTN","IVMCME2",35,0)
 ;
"RTN","IVMCME2",36,0)
 ;
"RTN","IVMCME2",37,0)
NUM(NUMBER,DIGIT,DECIMAL) ; function to determine if valid numeric value
"RTN","IVMCME2",38,0)
 ; 
"RTN","IVMCME2",39,0)
 ; Input:  NUMBER as data element to evaluate
"RTN","IVMCME2",40,0)
 ;         DIGIT as number of digits allowed
"RTN","IVMCME2",41,0)
 ;         DECIMAL as number of decimal places
"RTN","IVMCME2",42,0)
 ;
"RTN","IVMCME2",43,0)
 N ERROR
"RTN","IVMCME2",44,0)
 S ERROR=0
"RTN","IVMCME2",45,0)
 I NUMBER'?.N.1".".2N S ERROR=1 G NUMQ
"RTN","IVMCME2",46,0)
 I $L($P(NUMBER,".",1))>DIGIT S ERROR=1 G NUMQ
"RTN","IVMCME2",47,0)
 I NUMBER<0 S ERROR=1
"RTN","IVMCME2",48,0)
NUMQ Q ERROR
"RTN","IVMCME2",49,0)
 ;
"RTN","IVMCME2",50,0)
 ;
"RTN","IVMCME2",51,0)
ZICFLD ; ZIC field names
"RTN","IVMCME2",52,0)
 ;;
"RTN","IVMCME2",53,0)
 ;;INCOME YEAR
"RTN","IVMCME2",54,0)
 ;;SOCIAL SECURITY
"RTN","IVMCME2",55,0)
 ;;US CIVIL SERVICE
"RTN","IVMCME2",56,0)
 ;;US RAILROAD RETIREMENT
"RTN","IVMCME2",57,0)
 ;;MILITARY RETIREMENT
"RTN","IVMCME2",58,0)
 ;;UNEMPLOYMENT COMPENSATION
"RTN","IVMCME2",59,0)
 ;;OTHER RETIREMENT
"RTN","IVMCME2",60,0)
 ;;EMPLOYMENT INCOME
"RTN","IVMCME2",61,0)
 ;;INTEREST, DIVIDEND, ANNUITY
"RTN","IVMCME2",62,0)
 ;;WORKERS COMP/BLACK LUNG
"RTN","IVMCME2",63,0)
 ;;OTHER INCOME
"RTN","IVMCME2",64,0)
 ;;MEDICAL EXPENSES
"RTN","IVMCME2",65,0)
 ;;FUNERAL AND BURIAL EXPENSES
"RTN","IVMCME2",66,0)
 ;;EDUCATIONAL EXPENSES
"RTN","IVMCME2",67,0)
 ;;CASH AMOUNT IN BANK ACCOUNTS
"RTN","IVMCME2",68,0)
 ;;STOCKS AND BONDS
"RTN","IVMCME2",69,0)
 ;;REAL PROPERTY
"RTN","IVMCME2",70,0)
 ;;OTHER PROPERTY OR ASSETS
"RTN","IVMCME2",71,0)
 ;;DEBTS
"RTN","IVMCME4")
0^7^B16983245
"RTN","IVMCME4",1,0)
IVMCME4 ;ALB/SEK,BRM - CHECK INCOME TEST DATA ; 12/20/01 8:12am
"RTN","IVMCME4",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,49**;21-OCT-94
"RTN","IVMCME4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMCME4",4,0)
 ;
"RTN","IVMCME4",5,0)
 ; This routine is called from IVMCME.
"RTN","IVMCME4",6,0)
 ;
"RTN","IVMCME4",7,0)
ZMT(STRING) ; check ZMT segment
"RTN","IVMCME4",8,0)
 ;
"RTN","IVMCME4",9,0)
 ; Input:  STRING as ZMT segment
"RTN","IVMCME4",10,0)
 ;
"RTN","IVMCME4",11,0)
 ; Output: ERROR message or null
"RTN","IVMCME4",12,0)
 ;
"RTN","IVMCME4",13,0)
 N ERROR,I,X,Y
"RTN","IVMCME4",14,0)
 S ERROR=""
"RTN","IVMCME4",15,0)
 S X=$P(STRING,HLFS,2) I $E(X,1,4)<1993 S ERROR="Invalid Date of Test" G ZMTQ
"RTN","IVMCME4",16,0)
 S X=$$FMDATE^HLFNC(X),%DT="X" D ^%DT I Y<0 S ERROR="Invalid Date of Test" G ZMTQ
"RTN","IVMCME4",17,0)
 ;
"RTN","IVMCME4",18,0)
 ; Means Test Status Checks
"RTN","IVMCME4",19,0)
 I IVMTYPE=1 D MT^IVMCME5(STRING,ARRAY("ZIC")) I ERROR]"" G ZMTQ
"RTN","IVMCME4",20,0)
 ;
"RTN","IVMCME4",21,0)
 ; Copay Test Status Checks
"RTN","IVMCME4",22,0)
 I IVMTYPE=2 D CO^IVMCME5(STRING) I ERROR]"" G ZMTQ
"RTN","IVMCME4",23,0)
 ;
"RTN","IVMCME4",24,0)
 ; Long Term Care Status Checks
"RTN","IVMCME4",25,0)
 I IVMTYPE=4 D LTC^IVMCME5(STRING) I ERROR]"" G ZMTQ
"RTN","IVMCME4",26,0)
 ;
"RTN","IVMCME4",27,0)
 ; Field content/length
"RTN","IVMCME4",28,0)
 F I=4,5 I $$NUM^IVMCME2($P(STRING,HLFS,I),10,2) S ERROR=$S(I=4:"INCOME",1:"NET WORTH")_" field content/length error" Q
"RTN","IVMCME4",29,0)
 I ERROR]"" G ZMTQ
"RTN","IVMCME4",30,0)
 ;
"RTN","IVMCME4",31,0)
 ; gather income totals
"RTN","IVMCME4",32,0)
 D INC^IVMCME5 I ERROR]"" G ZMTQ
"RTN","IVMCME4",33,0)
 ;
"RTN","IVMCME4",34,0)
 ; Adjudicate Date/Time
"RTN","IVMCME4",35,0)
 S X=$P(STRING,HLFS,6) I X]"" D  I ERROR]"" G ZMTQ
"RTN","IVMCME4",36,0)
 . I $E(X,1,4)<1993!($E(X,1,4)>($E(DT,1,3)+1700)) S ERROR="Invalid Adjudication Date/Time" Q
"RTN","IVMCME4",37,0)
 . S X=$$FMDATE^HLFNC(X),%DT="TX" D ^%DT I Y<0 S ERROR="Invalid Adjudication Date/Time" Q
"RTN","IVMCME4",38,0)
 ;
"RTN","IVMCME4",39,0)
 ; Agree to Pay Deductible
"RTN","IVMCME4",40,0)
 S X=$P(STRING,HLFS,7) I X]"",(X'=0),(X'=1) S ERROR="Invalid Agreed To Pay Deductible Value" G ZMTQ
"RTN","IVMCME4",41,0)
 I $P(STRING,HLFS,26)="A",X'="" S ERROR="Cat A veteran-Agree to Pay Deductible should be null" G ZMTQ
"RTN","IVMCME4",42,0)
 ;
"RTN","IVMCME4",43,0)
 ; Threshold A value
"RTN","IVMCME4",44,0)
 I IVMTYPE=1 D  I ERROR]"" G ZMTQ
"RTN","IVMCME4",45,0)
 .S X=$P(STRING,HLFS,8) I X']"" S ERROR="Invalid Threshold A value"
"RTN","IVMCME4",46,0)
 .I (X'>0)!(X'<99001) S ERROR="Invalid Threshold A value"
"RTN","IVMCME4",47,0)
 ;
"RTN","IVMCME4",48,0)
 ; Deductibe Expenses
"RTN","IVMCME4",49,0)
 I $$NUM^IVMCME2($P(STRING,HLFS,9),10,2) S ERROR="Deductible Expenses field content/length error" G ZMTQ
"RTN","IVMCME4",50,0)
 I $P(STRING,HLFS,4)<($P(STRING,HLFS,9)) S ERROR="Deductible Expenses cannot exceed income" G ZMTQ
"RTN","IVMCME4",51,0)
 ;
"RTN","IVMCME4",52,0)
 ; Means Test Completion Date/Time
"RTN","IVMCME4",53,0)
 S X=$P(STRING,HLFS,10) I $E(X,1,4)<1992 S ERROR="Invalid Completion Date/Time" G ZMTQ
"RTN","IVMCME4",54,0)
 S X=$$FMDATE^HLFNC(X),%DT="TX" D ^%DT I Y<0 S ERROR="Invalid Completion Date/Time" G ZMTQ
"RTN","IVMCME4",55,0)
 ;
"RTN","IVMCME4",56,0)
 ; Hardship consistency checks
"RTN","IVMCME4",57,0)
 N HARDSHIP K HARDSHIP
"RTN","IVMCME4",58,0)
 S HARDSHIP("Y/N")=$P(STRING,HLFS,13)
"RTN","IVMCME4",59,0)
 S HARDSHIP("SITE")=$P(STRING,HLFS,23)
"RTN","IVMCME4",60,0)
 S HARDSHIP("EFFDATE")=$P(STRING,HLFS,24)
"RTN","IVMCME4",61,0)
 ;
"RTN","IVMCME4",62,0)
 I (IVMTYPE'=4),(HARDSHIP("Y/N"))!(+HARDSHIP("SITE"))!(HARDSHIP("EFFDATE")) D  I ERROR]"" G ZMTQ
"RTN","IVMCME4",63,0)
 .I HARDSHIP("Y/N")="" S ERROR="Missing Hardship Indicator" Q
"RTN","IVMCME4",64,0)
 .I HARDSHIP("SITE")="" S ERROR="Missing Site Granting Hardship" Q
"RTN","IVMCME4",65,0)
 .;starting in year 2000, all hardships should have an effective date
"RTN","IVMCME4",66,0)
 .I $E($P(STRING,HLFS,2),1,4)'<2000,(HARDSHIP("EFFDATE")="") S ERROR="Missing Hardship Effective Date" Q
"RTN","IVMCME4",67,0)
 .I $L(HARDSHIP("EFFDATE")) S X=$$FMDATE^HLFNC(HARDSHIP("EFFDATE")),%DT=X D ^%DT I Y<0 S ERROR="Invalid Hardship Effective Date" Q
"RTN","IVMCME4",68,0)
 .I HARDSHIP("EFFDATE"),(HARDSHIP("EFFDATE")<$P(STRING,HLFS,2)) S ERROR="Hardship Effective Date earlier than Means Test Date" Q
"RTN","IVMCME4",69,0)
 ;
"RTN","IVMCME4",70,0)
 ; Date Veteran Signed/Refused to Sign
"RTN","IVMCME4",71,0)
 D SIGN^IVMCME5 I ERROR]"" G ZMTQ
"RTN","IVMCME4",72,0)
 ;
"RTN","IVMCME4",73,0)
 ; Source of Test
"RTN","IVMCME4",74,0)
 S X=$P(STRING,HLFS,18)
"RTN","IVMCME4",75,0)
 I X'=1,X'=2,X'=3,X'=4 S ERROR="Source of Test must be identified" G ZMTQ
"RTN","IVMCME4",76,0)
 I X=4,$P(STRING,HLFS,22)="" S ERROR="Site Conducting Test must be identified" G ZMTQ
"RTN","IVMCME4",77,0)
 ;
"RTN","IVMCME4",78,0)
ZMTQ Q ERROR
"RTN","IVMCME5")
0^11^B36387771
"RTN","IVMCME5",1,0)
IVMCME5 ;ALB/SEK,KCL,BRM,AEG - CHECK INCOME TEST DATA (CON'T.) ; 12/18/01 2:12pm
"RTN","IVMCME5",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,26,38,49**;21-OCT-94
"RTN","IVMCME5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMCME5",4,0)
 ;
"RTN","IVMCME5",5,0)
 ;
"RTN","IVMCME5",6,0)
 ; This routine is called from IVMCME4.
"RTN","IVMCME5",7,0)
 ;
"RTN","IVMCME5",8,0)
MT(STRING,INCOME) ; Calculate means test status
"RTN","IVMCME5",9,0)
 ;
"RTN","IVMCME5",10,0)
 ; - init vars
"RTN","IVMCME5",11,0)
 N X,Y,ADJ,HAR,INC,NET,THRESH,THRESHA,THRESHT,IVMTEXT,XMSUB,CAT,CAT1
"RTN","IVMCME5",12,0)
 ;DGMTBS - BASE THRESHOLD VALUE FOR SITE
"RTN","IVMCME5",13,0)
 ;DGMTBH - BASE THRESHOLD VALUE SENT FROM HEC
"RTN","IVMCME5",14,0)
 ;DGTDEP - TOTAL # OF DEPENDENTS SENT BY HEC.
"RTN","IVMCME5",15,0)
 N VADM,DGMTBS,DGMTBH,DGTDEP,ECODE,DGMTICY    ;BRM added for IVM*2*26
"RTN","IVMCME5",16,0)
 ;
"RTN","IVMCME5",17,0)
 ; - perform initial error checking
"RTN","IVMCME5",18,0)
 S CAT1=$P(STRING,HLFS,3)
"RTN","IVMCME5",19,0)
 I '$$GETSTAT^DGMTH(CAT1,1) S ERROR="Invalid Means Test Status" G MTQ
"RTN","IVMCME5",20,0)
 ;
"RTN","IVMCME5",21,0)
 S CAT=$P(STRING,HLFS,26)
"RTN","IVMCME5",22,0)
 ;
"RTN","IVMCME5",23,0)
 I CAT="" S CAT=CAT1
"RTN","IVMCME5",24,0)
 I CAT'="A",CAT'="C",CAT'="P" S ERROR="Invalid Means Test Status for Test-Determined Status" G MTQ
"RTN","IVMCME5",25,0)
 ;
"RTN","IVMCME5",26,0)
 ; - if previous yr mt threshold flag is set use date of prev year
"RTN","IVMCME5",27,0)
 S X=$S($P(STRING,HLFS,11):($E($P(STRING,HLFS,2),1,4)-1),1:$E($P(STRING,HLFS,2),1,4)),DGMTICY=$P($G(STRING),HLFS,2)
"RTN","IVMCME5",28,0)
 N Y S Y=$$HL7TFM^XLFDT(DGMTICY,"1D") X ^DD("DD") S DGMTICY=Y
"RTN","IVMCME5",29,0)
 ;
"RTN","IVMCME5",30,0)
 S %DT="" D ^%DT S X=Y K %DT
"RTN","IVMCME5",31,0)
 ;
"RTN","IVMCME5",32,0)
 S THRESH=$G(^DG(43,1,"MT",X,0)),THRESHT=$P(THRESH,U,2),DGMTBS=THRESHT
"RTN","IVMCME5",33,0)
 I $P(STRING,HLFS,12) S THRESHT=THRESHT+$P(THRESH,U,3)+(($P(STRING,HLFS,12)-1)*$P(THRESH,U,4)),DGTDEP=$P($G(STRING),HLFS,12)
"RTN","IVMCME5",34,0)
 ;
"RTN","IVMCME5",35,0)
 S INC=$P(STRING,HLFS,4)-$P(STRING,HLFS,9)
"RTN","IVMCME5",36,0)
 S NET=$P(STRING,HLFS,5)
"RTN","IVMCME5",37,0)
 S ADJ=$P(STRING,HLFS,6)
"RTN","IVMCME5",38,0)
 S THRESHA=$P(STRING,HLFS,8),DGMTBH=THRESHA
"RTN","IVMCME5",39,0)
 I $P(STRING,HLFS,12),(THRESHA'=THRESHT) S THRESHA=THRESHA+$P(THRESH,U,3)+(($P(STRING,HLFS,12)-1)*$P(THRESH,U,4))
"RTN","IVMCME5",40,0)
 S DECLINE=$P(STRING,HLFS,16)
"RTN","IVMCME5",41,0)
 S HAR=$P(STRING,HLFS,13)
"RTN","IVMCME5",42,0)
 ;
"RTN","IVMCME5",43,0)
 ; - perform error checking
"RTN","IVMCME5",44,0)
 I DECLINE,CAT="A" S ERROR="Declines to give income info-must be CAT C" G MTQ
"RTN","IVMCME5",45,0)
 I DECLINE,CAT="C" G MTQ
"RTN","IVMCME5",46,0)
 ;
"RTN","IVMCME5",47,0)
 ; - if threshold A is incorrect, send message to sites's IVM MESSAGE
"RTN","IVMCME5",48,0)
 ;   mail group and continue to process
"RTN","IVMCME5",49,0)
 I THRESHT'=THRESHA D
"RTN","IVMCME5",50,0)
 .;
"RTN","IVMCME5",51,0)
 .;brm;27apr00;code modifications below to add PID and Name to message
"RTN","IVMCME5",52,0)
 .D:$G(DFN)'=""
"RTN","IVMCME5",53,0)
 ..N VAHOW,VAROOT,VAPTYP
"RTN","IVMCME5",54,0)
 ..D DEM^VADPT
"RTN","IVMCME5",55,0)
 .S XMSUB="Category A threshold discrepancy - "_"PID - "_$P($G(VADM(2)),U,2)
"RTN","IVMCME5",56,0)
 .S IVMTEXT(1)="While uploading the following income test from HEC a"
"RTN","IVMCME5",57,0)
 .S IVMTEXT(2)="discrepancy was found with the threshold A values."
"RTN","IVMCME5",58,0)
 .S IVMTEXT(3)="  ",IVMTEXT(4)="   NAME: "_$G(VADM(1))
"RTN","IVMCME5",59,0)
 .S IVMTEXT(5)="  ",IVMTEXT(6)="   PID : "_$P($G(VADM(2)),"^",2)
"RTN","IVMCME5",60,0)
 .S IVMTEXT(8)="  ",IVMTEXT(9)="Date of Test sent from HEC: "_DGMTICY
"RTN","IVMCME5",61,0)
 .S IVMTEXT(10)="  "
"RTN","IVMCME5",62,0)
 .S IVMTEXT(11)="Site Cat A Threshold value: "_$J($FN($G(THRESHT),",",0),6)
"RTN","IVMCME5",63,0)
 .S IVMTEXT(12)="  "
"RTN","IVMCME5",64,0)
 .S IVMTEXT(13)="HEC Transmitted Cat A Threshold value: "_$J($FN($G(DGMTBH),",",0),6)
"RTN","IVMCME5",65,0)
 .S IVMTEXT(14)="  ",IVMTEXT(16)="Total number of dependents: "_$G(DGTDEP)
"RTN","IVMCME5",66,0)
 .S IVMTEXT(17)="  "
"RTN","IVMCME5",67,0)
 .;brm;27apr00;end of changes
"RTN","IVMCME5",68,0)
 .;
"RTN","IVMCME5",69,0)
 .D MAIL^IVMUFNC("DGMT MT/CT UPLOAD ALERTS")
"RTN","IVMCME5",70,0)
 .Q
"RTN","IVMCME5",71,0)
 I INC'>THRESHA D  I ERROR]"" G MTQ
"RTN","IVMCME5",72,0)
 .I NET']"" S ERROR="This veteran requires net worth" Q
"RTN","IVMCME5",73,0)
 .I ((INC+NET)'>$P(THRESH,U,8))&(CAT="C") S ERROR="Income plus net worth not greater than threshold value-incorrect status" Q
"RTN","IVMCME5",74,0)
 .I ((INC+NET)>$P(THRESH,U,8))&(CAT="A"),'$P(STRING,HLFS,6) S ERROR="Patient should be adjudicated-no adjudicated date/time" Q
"RTN","IVMCME5",75,0)
 I INC>THRESHA,CAT'="C",'HAR,'ADJ,CAT'="P" S ERROR="Incorrect means test status for Test-Determined Status"
"RTN","IVMCME5",76,0)
MTQ Q
"RTN","IVMCME5",77,0)
 ;
"RTN","IVMCME5",78,0)
 ;
"RTN","IVMCME5",79,0)
CO(STRING) ; Calculate copay test status
"RTN","IVMCME5",80,0)
 ;
"RTN","IVMCME5",81,0)
 ; - init vars
"RTN","IVMCME5",82,0)
 N CAT,CAT1,COPDT,DECLINE,DEDEX,DEP,DGCAT,DGCOPS,DGCOST,INC
"RTN","IVMCME5",83,0)
 ;
"RTN","IVMCME5",84,0)
 ; - vars containing ZMT fields
"RTN","IVMCME5",85,0)
 S COPDT=$$FMDATE^HLFNC($P(STRING,HLFS,2))
"RTN","IVMCME5",86,0)
 S CAT1=$P(STRING,HLFS,3)
"RTN","IVMCME5",87,0)
 I '$$GETSTAT^DGMTH(CAT1,2) S ERROR="Invalid Copay Test Status" G COQ
"RTN","IVMCME5",88,0)
 ;
"RTN","IVMCME5",89,0)
 ;For the Test-Determined Status only
"RTN","IVMCME5",90,0)
 ; - a status of E or M or P should be transmitted
"RTN","IVMCME5",91,0)
 ; - P only is networth is used to determine exemption
"RTN","IVMCME5",92,0)
 S CAT=$P(STRING,HLFS,26)
"RTN","IVMCME5",93,0)
 I CAT="" S CAT=CAT1
"RTN","IVMCME5",94,0)
 I CAT'="E",CAT'="M",CAT'="P" S ERROR="Invalid Copay Test Status for Test-Determined Status" G COQ
"RTN","IVMCME5",95,0)
 I CAT="P",'$$NETW^IBARXEU1 S ERROR="Invalid Copay Test Status for Test-Determined Status" G COQ
"RTN","IVMCME5",96,0)
 ;
"RTN","IVMCME5",97,0)
 ; - a status of E or M or P should be transmitted
"RTN","IVMCME5",98,0)
 ; - P only is networth is used to determine exemption
"RTN","IVMCME5",99,0)
 I CAT'="E",CAT'="M",CAT'="P" S ERROR="Invalid Copay Test Status" G COQ
"RTN","IVMCME5",100,0)
 I CAT="P",'$$NETW^IBARXEU1 S ERROR="Invalid Copay Test Status" G COQ
"RTN","IVMCME5",101,0)
 S INC=$P(STRING,HLFS,4)
"RTN","IVMCME5",102,0)
 S DEDEX=$P(STRING,HLFS,9)
"RTN","IVMCME5",103,0)
 S DEP=$P(STRING,HLFS,12)
"RTN","IVMCME5",104,0)
 S DECLINE=$P(STRING,HLFS,16)
"RTN","IVMCME5",105,0)
 ;
"RTN","IVMCME5",106,0)
 S DGCOST=COPDT_U_DFN_U_U_INC,$P(DGCOST,U,14)=DECLINE,$P(DGCOST,U,15)=DEDEX,$P(DGCOST,U,18)=DEP,$P(DGCOST,U,19)=2
"RTN","IVMCME5",107,0)
 S DGCOPS=$$INCDT^IBARXEU1(DGCOST)
"RTN","IVMCME5",108,0)
 S DGCAT=$S(+DGCOPS=1:"E",+DGCOPS=2:"M",+DGCOPS=3:"P",1:"I")
"RTN","IVMCME5",109,0)
 I CAT'=DGCAT S ERROR="Copay Test Status should be "_DGCAT
"RTN","IVMCME5",110,0)
COQ Q
"RTN","IVMCME5",111,0)
 ;
"RTN","IVMCME5",112,0)
 ;
"RTN","IVMCME5",113,0)
INC ; Gather income totals
"RTN","IVMCME5",114,0)
 N DEBD,DEB,DEBT,DGX,EXCL,INC,INCYR,NET,X,Y
"RTN","IVMCME5",115,0)
 I $P(STRING,HLFS,4)']"",'$$IS^IVMCUC(DFN,DGLY),'$P(STRING,HLFS,16) S ERROR="No Income transmitted"
"RTN","IVMCME5",116,0)
 S INC=$P(ARRAY("ZIC"),HLFS,21),DEBT=$P(ARRAY("ZIC"),HLFS,22),NET=$P(ARRAY("ZIC"),HLFS,23)
"RTN","IVMCME5",117,0)
 S DGX=0 F  S DGX=$O(ARRAY(DGX)) Q:'DGX  D
"RTN","IVMCME5",118,0)
 .S INC=INC+($P(ARRAY(DGX,"ZIC"),HLFS,21))
"RTN","IVMCME5",119,0)
 .S NET=NET+($P(ARRAY(DGX,"ZIC"),HLFS,23))
"RTN","IVMCME5",120,0)
 .I $P(ARRAY(DGX,"ZDP"),U,6)'=2 D  Q
"RTN","IVMCME5",121,0)
 ..S X=$E($P(ARRAY("ZMT"),U,2),1,4),%DT="" D ^%DT S INCYR=Y
"RTN","IVMCME5",122,0)
 ..S EXCL=$P($G(^DG(43,1,"MT",INCYR,0)),U,17)
"RTN","IVMCME5",123,0)
 ..S DEBD=($P(ARRAY(DGX,"ZIC"),HLFS,9)-EXCL-$P(ARRAY(DGX,"ZIC"),HLFS,15))
"RTN","IVMCME5",124,0)
 ..S DEBD=$S(DEBD>0:DEBD,1:0)
"RTN","IVMCME5",125,0)
 ..S DEB=($P(ARRAY(DGX,"ZIC"),HLFS,9)-DEBD)
"RTN","IVMCME5",126,0)
 ..S DEBT=DEBT+DEB
"RTN","IVMCME5",127,0)
 .S DEBT=DEBT+($P(ARRAY(DGX,"ZIC"),HLFS,22))
"RTN","IVMCME5",128,0)
INCQ Q
"RTN","IVMCME5",129,0)
 ;
"RTN","IVMCME5",130,0)
 ;
"RTN","IVMCME5",131,0)
SIGN ; Date Veteran Signed/Refused to Sign
"RTN","IVMCME5",132,0)
 I $P(STRING,HLFS,15)]"" D  G:ERROR]"" SIGNQ
"RTN","IVMCME5",133,0)
 .S X=$P(STRING,HLFS,15) I $E(X,1,4)<1994!($E(X,1,4)>($E(DT,1,3)+1700)) S ERROR="Invalid Date Veteran Signed Test" Q
"RTN","IVMCME5",134,0)
 .S X=$$FMDATE^HLFNC($P(STRING,HLFS,15)),%DT="X" D ^%DT I Y<0 S ERROR="Invalid Date Veteran Signed Test" Q
"RTN","IVMCME5",135,0)
SIGNQ Q
"RTN","IVMCME5",136,0)
 ;
"RTN","IVMCME5",137,0)
LTC(STRING) ;calculate LTC test status
"RTN","IVMCME5",138,0)
 ;
"RTN","IVMCME5",139,0)
 N CAT1
"RTN","IVMCME5",140,0)
 S CAT1=$P(STRING,HLFS,3)
"RTN","IVMCME5",141,0)
 I '$$GETSTAT^DGMTH(CAT1,4) S ERROR="Invalid LTC Test Status"
"RTN","IVMCME5",142,0)
 Q
"RTN","IVMCZMT")
0^13^B48182574
"RTN","IVMCZMT",1,0)
IVMCZMT ;ALB/MLI/LD/CKN - Creation of  HL7 ZMT (means test) segment ; 04-APR-02
"RTN","IVMCZMT",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**17,53,49**;21-OCT-94
"RTN","IVMCZMT",3,0)
 ;
"RTN","IVMCZMT",4,0)
 ; This routine returns the ZMT segment which contains means test
"RTN","IVMCZMT",5,0)
 ; data for a selected patient. It differs from the standard segment
"RTN","IVMCZMT",6,0)
 ; builder in that it will add default values where needed for
"RTN","IVMCZMT",7,0)
 ; fields added by means test sharing - these fields may not have
"RTN","IVMCZMT",8,0)
 ; values for old tests, though for new tests the values should be there.
"RTN","IVMCZMT",9,0)
 ; 
"RTN","IVMCZMT",10,0)
 ;
"RTN","IVMCZMT",11,0)
 ;
"RTN","IVMCZMT",12,0)
EN(DFN,VAFSTR,VAFMTDT,VAFTYPE,SETID,DELETE,LIMIT) ; Entry point to get ZMT segment
"RTN","IVMCZMT",13,0)
 ;
"RTN","IVMCZMT",14,0)
 ;  Input:
"RTN","IVMCZMT",15,0)
 ;      DFN - as the IEN or corresponding patient in the PATIENT file
"RTN","IVMCZMT",16,0)
 ;   VAFSTR - as string of segment fields needed separated by commas
"RTN","IVMCZMT",17,0)
 ;  VAFMTDT - (optional) as date of desired means test (defaults to latest MT)
"RTN","IVMCZMT",18,0)
 ;  VAFTYPE - (optional) as type of test:  1 - Means Test (default=1)
"RTN","IVMCZMT",19,0)
 ;                                         2 - Copay Test
"RTN","IVMCZMT",20,0)
 ;                                         4 - LTC Copay Exemption Test
"RTN","IVMCZMT",21,0)
 ;  SETID -  (optional) value to use for SEQ 1, the set id field (1 used
"RTN","IVMCZMT",22,0)
 ;            as default if not passed.)
"RTN","IVMCZMT",23,0)
 ;  DELETE - (optional, pass by reference) This array is used to
"RTN","IVMCZMT",24,0)
 ;           indicate whether the segment is being used to notify of the
"RTN","IVMCZMT",25,0)
 ;           the deletion of a means test, pharmacy copay test, or a 
"RTN","IVMCZMT",26,0)
 ;           hardship determinatin.  If a means test or hardship is being
"RTN","IVMCZMT",27,0)
 ;           deleted, then VAFTYPE must equal 1.  If an Rx copay test is
"RTN","IVMCZMT",28,0)
 ;           being deleted, then VAFTYPE must equal 2.  The subscripts
"RTN","IVMCZMT",29,0)
 ;           are as follows:
"RTN","IVMCZMT",30,0)
 ;           DELETE("DATE OF TEST")=<date of test> - indicates
"RTN","IVMCZMT",31,0)
 ;                  the income year of the test that the deletion flags
"RTN","IVMCZMT",32,0)
 ;                  refer to
"RTN","IVMCZMT",33,0)
 ;           DELETE("HARDSHIP") -  if $G(DELETE("HARDSHIP"))=1 then the
"RTN","IVMCZMT",34,0)
 ;                  segment will be created to delete the hardship.
"RTN","IVMCZMT",35,0)
 ;           DELETE("MT") - if $G(DELETE("MT"))=1 then
"RTN","IVMCZMT",36,0)
 ;                  the segment will be created to delete a means test.
"RTN","IVMCZMT",37,0)
 ;           DELETE("RX")= if $G(DELETE("RX"))=1 then
"RTN","IVMCZMT",38,0)
 ;                  the segment will be created to delete a pharmacy
"RTN","IVMCZMT",39,0)
 ;                  copay test.
"RTN","IVMCZMT",40,0)
 ;           DELETE("LTC")= if $G(DELETE("LTC"))=1 then
"RTN","IVMCZMT",41,0)
 ;                  the segment will be created to delete a Long term
"RTN","IVMCZMT",42,0)
 ;                  care copay exemption test.
"RTN","IVMCZMT",43,0)
 ;  LIMIT - (optional) if $G(LIMIT)=1 then this indicates that a test in
"RTN","IVMCZMT",44,0)
 ;           a prior income year than indicated by the VAFMTDT parameter
"RTN","IVMCZMT",45,0)
 ;           should NOT be returned in the ZMT segment
"RTN","IVMCZMT",46,0)
 ;
"RTN","IVMCZMT",47,0)
 ;      ****Also assumes all HL7 variables are defined as returned ****
"RTN","IVMCZMT",48,0)
 ;          by the INIT^HLTRANS call
"RTN","IVMCZMT",49,0)
 ;
"RTN","IVMCZMT",50,0)
 ; Output - string in the form of the DHCP HL7 ZMT segment
"RTN","IVMCZMT",51,0)
 ;
"RTN","IVMCZMT",52,0)
 ;
"RTN","IVMCZMT",53,0)
 N NODE,PRIM,X,Y,VAFY,NODE2,MTIEN
"RTN","IVMCZMT",54,0)
 ;
"RTN","IVMCZMT",55,0)
 I '$G(DFN)!($G(VAFSTR)']"") G QUIT
"RTN","IVMCZMT",56,0)
 S $P(VAFY,HLFS,22)="",VAFSTR=","_VAFSTR_","
"RTN","IVMCZMT",57,0)
 S VAFTYPE=$S($G(VAFTYPE):VAFTYPE,1:1)
"RTN","IVMCZMT",58,0)
 S VAFMTDT=$S($G(VAFMTDT):VAFMTDT,1:DT)
"RTN","IVMCZMT",59,0)
 S $P(VAFY,HLFS,1)=$S($G(SETID):SETID,1:1)
"RTN","IVMCZMT",60,0)
 S (NODE,NODE2,PRIM)=""
"RTN","IVMCZMT",61,0)
 ;
"RTN","IVMCZMT",62,0)
 ;handle deletions of a test
"RTN","IVMCZMT",63,0)
 I ($G(DELETE("MT"))=1),VAFTYPE=1 D  G QUIT
"RTN","IVMCZMT",64,0)
 .S $P(VAFY,HLFS,2)=$$HLDATE^HLFNC(DELETE("DATE OF TEST")) ; MT Date
"RTN","IVMCZMT",65,0)
 .S $P(VAFY,HLFS,3)=HLQ
"RTN","IVMCZMT",66,0)
 .I ($G(DELETE("HARDSHIP"))=1) S $P(VAFY,HLFS,24)=HLQ
"RTN","IVMCZMT",67,0)
 .S $P(VAFY,HLFS,17)=VAFTYPE ; Type Of Test
"RTN","IVMCZMT",68,0)
 ;
"RTN","IVMCZMT",69,0)
 I ($G(DELETE("RX"))=1),VAFTYPE=2 D  G QUIT
"RTN","IVMCZMT",70,0)
 .S $P(VAFY,HLFS,2)=$$HLDATE^HLFNC(DELETE("DATE OF TEST")) ; MT Date
"RTN","IVMCZMT",71,0)
 .S $P(VAFY,HLFS,3)=HLQ
"RTN","IVMCZMT",72,0)
 .S $P(VAFY,HLFS,17)=VAFTYPE ; Type Of Test
"RTN","IVMCZMT",73,0)
 ;
"RTN","IVMCZMT",74,0)
 I ($G(DELETE("LTC"))=1),VAFTYPE=4 D  G QUIT
"RTN","IVMCZMT",75,0)
 .S $P(VAFY,HLFS,2)=$$HLDATE^HLFNC(DELETE("DATE OF TEST")) ; MT Date
"RTN","IVMCZMT",76,0)
 .S $P(VAFY,HLFS,3)=HLQ
"RTN","IVMCZMT",77,0)
 .S $P(VAFY,HLFS,17)=VAFTYPE ; Type Of Test
"RTN","IVMCZMT",78,0)
 ;
"RTN","IVMCZMT",79,0)
 S X=$$LST^DGMTU(DFN,VAFMTDT,$S($G(VAFTYPE):VAFTYPE,1:1))
"RTN","IVMCZMT",80,0)
 S MTIEN=+X
"RTN","IVMCZMT",81,0)
 I MTIEN S NODE=$G(^DGMT(408.31,+X,0)),PRIM=$G(^("PRIM")),NODE2=$G(^DGMT(408.31,+X,2))
"RTN","IVMCZMT",82,0)
 ;
"RTN","IVMCZMT",83,0)
 ;if $$LST of ^DGMTU returned the wrong income yr, disregard it
"RTN","IVMCZMT",84,0)
 I ($G(LIMIT)=1),$E(VAFMTDT,1,3)'=$E(+NODE,1,3) S (NODE,NODE2,X,PRIM)=""
"RTN","IVMCZMT",85,0)
 ;
"RTN","IVMCZMT",86,0)
 ; Check $$FUT
"RTN","IVMCZMT",87,0)
 I 'X D
"RTN","IVMCZMT",88,0)
 . N OK2SND,DGMTI,Y
"RTN","IVMCZMT",89,0)
 . S OK2SND=0
"RTN","IVMCZMT",90,0)
 . S Y=$$FUT^DGMTU(DFN,"",$S($G(VAFTYPE):VAFTYPE,1:1))
"RTN","IVMCZMT",91,0)
 . I +Y,$P($G(^DG(408.34,+$P(Y,U,5),0)),U)="DCD",$$VERSION^XPDUTL("IVMC") S X=Y
"RTN","IVMCZMT",92,0)
 S MTIEN=+X
"RTN","IVMCZMT",93,0)
 I MTIEN S NODE=$G(^DGMT(408.31,+X,0)),PRIM=$G(^("PRIM")),NODE2=$G(^DGMT(408.31,+X,2))
"RTN","IVMCZMT",94,0)
 ;
"RTN","IVMCZMT",95,0)
 ;if $$FUT of ^DGMTU returned the wrong income yr, disregard it
"RTN","IVMCZMT",96,0)
 I ($G(LIMIT)=1),$E(VAFMTDT,1,3)'=$E(+NODE,1,3) S (NODE,NODE2,X,PRIM)=""
"RTN","IVMCZMT",97,0)
 ;
"RTN","IVMCZMT",98,0)
 I NODE'="" D
"RTN","IVMCZMT",99,0)
 .;add default values to new means test sharing fields
"RTN","IVMCZMT",100,0)
 .N STATUS,CODE,TDSTATUS,TDCODE,HARDSHIP,DATA,SOURCE,TIME
"RTN","IVMCZMT",101,0)
 .S TDSTATUS=$P(NODE2,"^",3)
"RTN","IVMCZMT",102,0)
 .S HARDSHIP=$P(NODE,"^",20)
"RTN","IVMCZMT",103,0)
 .I TDSTATUS="" D
"RTN","IVMCZMT",104,0)
 ..S STATUS=$P(NODE,"^",3)
"RTN","IVMCZMT",105,0)
 ..Q:'STATUS
"RTN","IVMCZMT",106,0)
 ..S CODE=$$GETCODE^DGMTH(STATUS)
"RTN","IVMCZMT",107,0)
 ..I CODE'="","ABCEMP"[CODE D
"RTN","IVMCZMT",108,0)
 ...I VAFTYPE=1,"A"=CODE,HARDSHIP D
"RTN","IVMCZMT",109,0)
 ....S TDSTATUS=$$GETSTAT^DGMTH("C",1)
"RTN","IVMCZMT",110,0)
 ...E  S TDSTATUS=STATUS
"RTN","IVMCZMT",111,0)
 ...S DATA(2.03)=TDSTATUS,$P(NODE2,"^",3)=TDSTATUS
"RTN","IVMCZMT",112,0)
 .S SOURCE=$P(NODE,"^",23)
"RTN","IVMCZMT",113,0)
 .I SOURCE=1 D
"RTN","IVMCZMT",114,0)
 ..S TIME=$P(NODE2,"^",2)
"RTN","IVMCZMT",115,0)
 ..I TIME="" S TIME=$$NOW^XLFDT,$P(NODE2,"^",2)=TIME,DATA(2.02)=TIME
"RTN","IVMCZMT",116,0)
 ..I $P(NODE2,"^",5)="",$P(NODE,"^",6) S $P(NODE2,"^",5)=$$GETSITE^DGMTU4($P(NODE,"^",6)),DATA(2.05)=$P(NODE2,"^",5)
"RTN","IVMCZMT",117,0)
 .I HARDSHIP,$P(NODE2,"^",4)="",$P(NODE,"^",22) S $P(NODE2,"^",4)=$$GETSITE^DGMTU4($P(NODE,"^",22)),DATA(2.04)=$P(NODE2,"^",4)
"RTN","IVMCZMT",118,0)
 .I $D(DATA),$$UPD^DGENDBS(408.31,MTIEN,.DATA)
"RTN","IVMCZMT",119,0)
 .;
"RTN","IVMCZMT",120,0)
 I VAFSTR[",2," S $P(VAFY,HLFS,2)=$S(+NODE:$$HLDATE^HLFNC(+NODE),1:HLQ) ; MT Date
"RTN","IVMCZMT",121,0)
 I VAFSTR[",3," S X=$P($G(^DG(408.32,+$P(NODE,"^",3),0)),"^",2),$P(VAFY,HLFS,3)=$S(X]"":X,1:"") ; MT Status
"RTN","IVMCZMT",122,0)
 I VAFSTR[",4," S $P(VAFY,HLFS,4)=$S($P(NODE,"^",4)]"":$P(NODE,"^",4),1:HLQ) ; Income
"RTN","IVMCZMT",123,0)
 I VAFSTR[",5," S $P(VAFY,HLFS,5)=$S($P(NODE,"^",5)]"":$P(NODE,"^",5),1:HLQ) ; Net Worth
"RTN","IVMCZMT",124,0)
 I VAFSTR[",6," S $P(VAFY,HLFS,6)=$S($P(NODE,"^",10):$$HLDATE^HLFNC($P(NODE,"^",10)),1:HLQ) ; Adjudication Date/Time
"RTN","IVMCZMT",125,0)
 I VAFSTR[",7," S $P(VAFY,HLFS,7)=$$YN^VAFHLFNC($P(NODE,"^",11)) ; Agreed To Pay
"RTN","IVMCZMT",126,0)
 I VAFSTR[",8," S $P(VAFY,HLFS,8)=$S($P(NODE,"^",12):$P(NODE,"^",12),1:HLQ) ; Threshold A
"RTN","IVMCZMT",127,0)
 I VAFSTR[",9," S $P(VAFY,HLFS,9)=$S($P(NODE,"^",15)]"":$P(NODE,"^",15),1:HLQ) ; Deductible Expenses
"RTN","IVMCZMT",128,0)
 I VAFSTR[",10," S $P(VAFY,HLFS,10)=$S($P(NODE,"^",7):$$HLDATE^HLFNC($P(NODE,"^",7)),1:HLQ) ; Date/Time Completed
"RTN","IVMCZMT",129,0)
 I VAFSTR[",11," S $P(VAFY,HLFS,11)=$$YN^VAFHLFNC($P(NODE,"^",16)) ; Previous Year Means Test Threshold Flag
"RTN","IVMCZMT",130,0)
 I VAFSTR[",12," S $P(VAFY,HLFS,12)=$S($P(NODE,"^",18)]"":$P(NODE,"^",18),1:HLQ) ; Total Dependents
"RTN","IVMCZMT",131,0)
 I VAFSTR[",13," S $P(VAFY,HLFS,13)=$$YN^VAFHLFNC($P(NODE,"^",20)) ; Hardship
"RTN","IVMCZMT",132,0)
 I VAFSTR[",14," S $P(VAFY,HLFS,14)=$S($P(NODE,"^",21):$$HLDATE^HLFNC($P(NODE,"^",21)),1:HLQ) ; Hardship Review Date
"RTN","IVMCZMT",133,0)
 I VAFSTR[",15," S $P(VAFY,HLFS,15)=$S($P(NODE,"^",24):$$HLDATE^HLFNC($P(NODE,"^",24)),1:HLQ) ; Date Vet Signed Test
"RTN","IVMCZMT",134,0)
 I VAFSTR[",16," S $P(VAFY,HLFS,16)=$$YN^VAFHLFNC($P(NODE,"^",14)) ; Declines To Give Income Info
"RTN","IVMCZMT",135,0)
 I VAFSTR[",17," S $P(VAFY,HLFS,17)=$S($P(NODE,"^",19):$P(NODE,"^",19),1:VAFTYPE) ; Type Of Test
"RTN","IVMCZMT",136,0)
 I VAFSTR[",18," S $P(VAFY,HLFS,18)=$S($P(NODE,"^",23)]"":$P(NODE,"^",23),1:HLQ) ; Source Of Test
"RTN","IVMCZMT",137,0)
 I VAFSTR[",19," S $P(VAFY,HLFS,19)=$$YN^VAFHLFNC(PRIM) ; Primary Test?
"RTN","IVMCZMT",138,0)
 I VAFSTR[",20," S $P(VAFY,HLFS,20)=$S($P(NODE,"^",25):$$HLDATE^HLFNC($P(NODE,"^",25)),1:HLQ) ; Date IVM Verified MT Completed
"RTN","IVMCZMT",139,0)
 I VAFSTR[",21," S $P(VAFY,HLFS,21)=$$YN^VAFHLFNC($P(NODE,"^",26)) ; Refused To Sign
"RTN","IVMCZMT",140,0)
 ;
"RTN","IVMCZMT",141,0)
 ;
"RTN","IVMCZMT",142,0)
 I VAFSTR[",22," S $P(VAFY,HLFS,22)=$P(NODE2,"^",5) ;Site Conducting Test
"RTN","IVMCZMT",143,0)
 I VAFSTR[",23," S $P(VAFY,HLFS,23)=$P(NODE2,"^",4) ;Site Granting Hardship
"RTN","IVMCZMT",144,0)
 I VAFSTR[",24," S $P(VAFY,HLFS,24)=$S($P(NODE2,"^"):$$HLDATE^HLFNC($P(NODE2,"^")),1:"") ;Hardship Effective Date
"RTN","IVMCZMT",145,0)
 I VAFSTR[",25," S $P(VAFY,HLFS,25)=$S($P(NODE2,"^",2):$$HLDATE^HLFNC($P(NODE2,"^",2)),1:"") ;Dt/Tm Test Last Edited
"RTN","IVMCZMT",146,0)
 I VAFSTR[",26," S $P(VAFY,HLFS,26)=$S($P(NODE2,"^",3):$$GETCODE^DGMTH($P(NODE2,"^",3)),1:"") ; Test Determined Status
"RTN","IVMCZMT",147,0)
 ;
"RTN","IVMCZMT",148,0)
 ;can only transmit the deletion of a hardship if the segment is for a means test - and the income years must match if there is a means test
"RTN","IVMCZMT",149,0)
 ;
"RTN","IVMCZMT",150,0)
 I VAFTYPE=1,($G(DELETE("HARDSHIP"))=1),('(+NODE)!($E(DELETE("DATE OF TEST"),1,3)=$E((+NODE),1,3))) S $P(VAFY,HLFS,24)=HLQ
"RTN","IVMCZMT",151,0)
 ;
"RTN","IVMCZMT",152,0)
QUIT Q "ZMT"_HLFS_$G(VAFY)
"RTN","IVMPLOG")
0^14^B38975037
"RTN","IVMPLOG",1,0)
IVMPLOG ;ALB/CJM,RTK - API for IVM PATIENT file; ; 12/6/00 5:28pm
"RTN","IVMPLOG",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,19,12,21,17,28,36,40,49**; 21-OCT-94
"RTN","IVMPLOG",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPLOG",4,0)
 ;
"RTN","IVMPLOG",5,0)
 ;
"RTN","IVMPLOG",6,0)
FIND(DFN,YEAR) ;
"RTN","IVMPLOG",7,0)
 ;Description: Looks up an entry in the IVM PATIENT file (#301.5).
"RTN","IVMPLOG",8,0)
 ;Input:
"RTN","IVMPLOG",9,0)
 ;  DFN - IEN in the PATIENT file.
"RTN","IVMPLOG",10,0)
 ;  YEAR - value for the INCOME YEAR field, a year in FM format.
"RTN","IVMPLOG",11,0)
 ;Output:
"RTN","IVMPLOG",12,0)
 ;  Function Value - returns IEN of record if found, NULL otherwise.
"RTN","IVMPLOG",13,0)
 ;
"RTN","IVMPLOG",14,0)
 Q:('$G(DFN)!'$G(YEAR)) ""
"RTN","IVMPLOG",15,0)
 ;
"RTN","IVMPLOG",16,0)
 N YR
"RTN","IVMPLOG",17,0)
 S YR=$E(YEAR,1,3)_"0000"
"RTN","IVMPLOG",18,0)
 Q $O(^IVM(301.5,"APT",DFN,YR,0))
"RTN","IVMPLOG",19,0)
 ;
"RTN","IVMPLOG",20,0)
LOCK(IEN) ;
"RTN","IVMPLOG",21,0)
 ;Description: Locks a record in the IVM PATIENT file.
"RTN","IVMPLOG",22,0)
 ;Input:
"RTN","IVMPLOG",23,0)
 ;  IEN - ien of record  in IVM PATIENT file.
"RTN","IVMPLOG",24,0)
 ;Output:
"RTN","IVMPLOG",25,0)
 ;  Function Value - 1 if successful, 0 otherwise.
"RTN","IVMPLOG",26,0)
 ;
"RTN","IVMPLOG",27,0)
 I $G(IEN) L +^IVM(301.5,IEN):3
"RTN","IVMPLOG",28,0)
 Q $T
"RTN","IVMPLOG",29,0)
 ;
"RTN","IVMPLOG",30,0)
UNLOCK(IEN) ;
"RTN","IVMPLOG",31,0)
 ;Description: Unlocks a record in the IVM PATIENT file.
"RTN","IVMPLOG",32,0)
 ;Input:
"RTN","IVMPLOG",33,0)
 ;  IEN - ien of record in the IVM PATIENT file.
"RTN","IVMPLOG",34,0)
 ;Output: None
"RTN","IVMPLOG",35,0)
 ;
"RTN","IVMPLOG",36,0)
 I $G(IEN) L -^IVM(301.5,IEN)
"RTN","IVMPLOG",37,0)
 Q
"RTN","IVMPLOG",38,0)
 ;
"RTN","IVMPLOG",39,0)
STATUS(IEN,EVENTS) ;
"RTN","IVMPLOG",40,0)
 ;Description: Returns the value of the TRANSMISSION STATUS field of the 
"RTN","IVMPLOG",41,0)
 ;  IVM PATIENT file.
"RTN","IVMPLOG",42,0)
 ;
"RTN","IVMPLOG",43,0)
 ;Input:
"RTN","IVMPLOG",44,0)
 ;  IEN - internal entry number of a record in the IVM PATIENT file
"RTN","IVMPLOG",45,0)
 ;Output:
"RTN","IVMPLOG",46,0)
 ;  Function Value -returns the value of the TRANSMISSION STATUS field
"RTN","IVMPLOG",47,0)
 ;  EVENTS - optional, pass by reference.  Will return the types of events logged.
"RTN","IVMPLOG",48,0)
 ;  EVENTS("IVM") - value of IVM EVENT field
"RTN","IVMPLOG",49,0)
 ;  EVENTS("DCD") - value of DCD EVENT field
"RTN","IVMPLOG",50,0)
 ;  EVENTS("ENROLL") - value of ENROLLMENT EVENT field
"RTN","IVMPLOG",51,0)
 ;
"RTN","IVMPLOG",52,0)
 ;
"RTN","IVMPLOG",53,0)
 S EVENTS("IVM")=""
"RTN","IVMPLOG",54,0)
 S EVENTS("DCD")=""
"RTN","IVMPLOG",55,0)
 S EVENTS("ENROLL")=""
"RTN","IVMPLOG",56,0)
 ;
"RTN","IVMPLOG",57,0)
 Q:'$G(IEN) ""
"RTN","IVMPLOG",58,0)
 ;
"RTN","IVMPLOG",59,0)
 N NODE
"RTN","IVMPLOG",60,0)
 S NODE=$G(^IVM(301.5,IEN,"E"))
"RTN","IVMPLOG",61,0)
 S EVENTS("IVM")=$P(NODE,"^")
"RTN","IVMPLOG",62,0)
 S EVENTS("DCD")=$P(NODE,"^",2)
"RTN","IVMPLOG",63,0)
 S EVENTS("ENROLL")=$P(NODE,"^",3)
"RTN","IVMPLOG",64,0)
 Q $P($G(^IVM(301.5,IEN,0)),"^",3)
"RTN","IVMPLOG",65,0)
 ;
"RTN","IVMPLOG",66,0)
SETSTAT(IEN,EVENTS,ERRMSG) ;
"RTN","IVMPLOG",67,0)
 ;Description: Sets the value of the TRANSMISSION STATUS field of the
"RTN","IVMPLOG",68,0)
 ;  IVM PATIENT file for a particular record to 0, meaning transmission
"RTN","IVMPLOG",69,0)
 ;  is requested.  If the case is closed, depending on the event types,
"RTN","IVMPLOG",70,0)
 ;  the TRANSMISSION STATUS may not be set.
"RTN","IVMPLOG",71,0)
 ;Input:
"RTN","IVMPLOG",72,0)
 ;  IEN - internal entry number of a record in the IVM PATIENT file.
"RTN","IVMPLOG",73,0)
 ;  EVENTS () - an array of reasons for transmission, pass by reference.
"RTN","IVMPLOG",74,0)
 ;  EVENTS("IVM") = 1 if transmission due to IVM criteria, 0 otherwise
"RTN","IVMPLOG",75,0)
 ;  EVENTS("DCD")=1 if transmission due to DCD criteria, 0 otherwise
"RTN","IVMPLOG",76,0)
 ;  EVENTS("ENROLL")=1 if transmission due to enrollment criteria, 0 otherwise
"RTN","IVMPLOG",77,0)
 ;Output:  
"RTN","IVMPLOG",78,0)
 ;  Function Value - 1 on success, 0 on failure.
"RTN","IVMPLOG",79,0)
 ;  ERRMSG - optional, pass by reference if needed, returns message on failure
"RTN","IVMPLOG",80,0)
 ;
"RTN","IVMPLOG",81,0)
 N DATA,CLOSED,SUCCESS
"RTN","IVMPLOG",82,0)
 ;
"RTN","IVMPLOG",83,0)
 I ($G(DGENUPLD)="ENROLLMENT/ELIGIBILITY UPLOAD IN PROGRESS") S ERRMSG="ENROLLMENT UPLOAD IN PROGRESS" Q 0
"RTN","IVMPLOG",84,0)
 ;
"RTN","IVMPLOG",85,0)
 I '$$LOCK($G(IEN)) S ERRMSG="UNABLE TO OBTAIN LOCK ON IVM PATIENT, TRY AGAIN LATTER" Q 0
"RTN","IVMPLOG",86,0)
 S CLOSED=$$CLOSED(IEN)
"RTN","IVMPLOG",87,0)
 S SUCCESS=0
"RTN","IVMPLOG",88,0)
 I ('CLOSED)!(1=$G(EVENTS("ENROLL"))) D
"RTN","IVMPLOG",89,0)
 .S DATA(.03)=0
"RTN","IVMPLOG",90,0)
 .I 'CLOSED D
"RTN","IVMPLOG",91,0)
 ..I $G(EVENTS("IVM"))=1 S DATA(30.01)=1
"RTN","IVMPLOG",92,0)
 ..I $G(EVENTS("DCD"))=1 S DATA(30.02)=1
"RTN","IVMPLOG",93,0)
 .I $G(EVENTS("ENROLL"))=1 S DATA(30.03)=1
"RTN","IVMPLOG",94,0)
 .S SUCCESS=$$UPD^DGENDBS(301.5,IEN,.DATA,.ERRMSG)
"RTN","IVMPLOG",95,0)
 E  S SUCCESS=0,ERRMSG="CASE IS CLOSED"
"RTN","IVMPLOG",96,0)
 D UNLOCK(IEN)
"RTN","IVMPLOG",97,0)
 Q SUCCESS
"RTN","IVMPLOG",98,0)
 ;
"RTN","IVMPLOG",99,0)
CLEAR(IEN,WHEN) ;
"RTN","IVMPLOG",100,0)
 ; Description: Sets the value of the TRANSMISSION STATUS field of the
"RTN","IVMPLOG",101,0)
 ;IVM PATIENT file for a particular record to 1, meaning transmission
"RTN","IVMPLOG",102,0)
 ;already occurred.
"RTN","IVMPLOG",103,0)
 ;
"RTN","IVMPLOG",104,0)
 ;Input:
"RTN","IVMPLOG",105,0)
 ;  IEN - internal entry number of record in IVM PATIENT file
"RTN","IVMPLOG",106,0)
 ;  WHEN - optional, date/time in FM format that transmission occurred
"RTN","IVMPLOG",107,0)
 ;Output:
"RTN","IVMPLOG",108,0)
 ;  Function Value - 1 on success, 0 on failure
"RTN","IVMPLOG",109,0)
 ; 
"RTN","IVMPLOG",110,0)
 N SUCCESS,PLOG,DATA
"RTN","IVMPLOG",111,0)
 Q:'$$LOCK($G(IEN)) 0
"RTN","IVMPLOG",112,0)
 Q:'$$GET(IEN,.PLOG) 0
"RTN","IVMPLOG",113,0)
 S DATA(.03)=1
"RTN","IVMPLOG",114,0)
 I PLOG("EVENTS","IVM")=1 S DATA(30.01)=2
"RTN","IVMPLOG",115,0)
 I PLOG("EVENTS","DCD")=1 S DATA(30.02)=2
"RTN","IVMPLOG",116,0)
 I PLOG("EVENTS","ENROLL")=1 S DATA(30.03)=2
"RTN","IVMPLOG",117,0)
 I $G(WHEN),((PLOG("FIRST")'>0)!(WHEN<PLOG("FIRST"))) S DATA(.05)=WHEN
"RTN","IVMPLOG",118,0)
 S SUCCESS=$$UPD^DGENDBS(301.5,IEN,.DATA)
"RTN","IVMPLOG",119,0)
 D UNLOCK(IEN)
"RTN","IVMPLOG",120,0)
 Q SUCCESS
"RTN","IVMPLOG",121,0)
 ;
"RTN","IVMPLOG",122,0)
GET(IEN,PLOG) ;
"RTN","IVMPLOG",123,0)
 ;Description: Used to obtain a record in the IVM PATIENT file.  The
"RTN","IVMPLOG",124,0)
 ;values are returned in the PLOG() array.
"RTN","IVMPLOG",125,0)
 ;Input:
"RTN","IVMPLOG",126,0)
 ;  IEN - internal entry number of a record in the IVM PATIENT file.
"RTN","IVMPLOG",127,0)
 ;Output:
"RTN","IVMPLOG",128,0)
 ;  Function Value - 1 on success, 0 on failure.
"RTN","IVMPLOG",129,0)
 ;  PLOG() array, pass by reference.  Subscripts are
"RTN","IVMPLOG",130,0)
 ;  "DFN" - value of the PATIENT field (#.01) which is the ien of record in the PATIENT file.
"RTN","IVMPLOG",131,0)
 ;  "YEAR" -  value of the INCOME YEAR field (#.02)
"RTN","IVMPLOG",132,0)
 ;  "STATUS" - value from the TRANSMISSIONS STATUS field (#.03)
"RTN","IVMPLOG",133,0)
 ;  "FIRST" -  value from the QUERY TRANSMISSION DATE/TIME field (#.05)
"RTN","IVMPLOG",134,0)
 ;  "CLOSE" - value from the STOP FLAG field (#.04)
"RTN","IVMPLOG",135,0)
 ;  "CLOSE","REASON" -  value from the CLOSURE REASON field (#301.93)
"RTN","IVMPLOG",136,0)
 ;  "CLOSE","SOURCE" - value of the CLOSURE SOURCE  field (#1.02)
"RTN","IVMPLOG",137,0)
 ;  "CLOSE","TIME" - value of the CLOSURE DATE/TIME field (#1.03)
"RTN","IVMPLOG",138,0)
 ;  "EVENTS","IVM" - value of the IVM EVENT field
"RTN","IVMPLOG",139,0)
 ;  "EVENTS","DCD" - value of the DCD EVENT field
"RTN","IVMPLOG",140,0)
 ;  "EVENTS","ENROLL" - value of the ENROLLMENT EVENT field
"RTN","IVMPLOG",141,0)
 ;
"RTN","IVMPLOG",142,0)
 N NODE
"RTN","IVMPLOG",143,0)
 Q:'$G(IEN) 0
"RTN","IVMPLOG",144,0)
 S NODE=$G(^IVM(301.5,IEN,0))
"RTN","IVMPLOG",145,0)
 Q:(NODE="") 0
"RTN","IVMPLOG",146,0)
 S PLOG("DFN")=$P(NODE,"^")
"RTN","IVMPLOG",147,0)
 S PLOG("YEAR")=$P(NODE,"^",2)
"RTN","IVMPLOG",148,0)
 S PLOG("STATUS")=$P(NODE,"^",3)
"RTN","IVMPLOG",149,0)
 S PLOG("FIRST")=$P(NODE,"^",5)
"RTN","IVMPLOG",150,0)
 S PLOG("CLOSE")=$P(NODE,"^",4)
"RTN","IVMPLOG",151,0)
 S NODE=$G(^IVM(301.5,IEN,1))
"RTN","IVMPLOG",152,0)
 S PLOG("CLOSE","REASON")=$P(NODE,"^")
"RTN","IVMPLOG",153,0)
 S PLOG("CLOSE","SOURCE")=$P(NODE,"^",2)
"RTN","IVMPLOG",154,0)
 S PLOG("CLOSE","TIME")=$P(NODE,"^",3)
"RTN","IVMPLOG",155,0)
 S NODE=$G(^IVM(301.5,IEN,"E"))
"RTN","IVMPLOG",156,0)
 S PLOG("EVENTS","IVM")=$P(NODE,"^")
"RTN","IVMPLOG",157,0)
 S PLOG("EVENTS","DCD")=$P(NODE,"^",2)
"RTN","IVMPLOG",158,0)
 S PLOG("EVENTS","ENROLL")=$P(NODE,"^",3)
"RTN","IVMPLOG",159,0)
 Q 1
"RTN","IVMPLOG",160,0)
 ;
"RTN","IVMPLOG",161,0)
CLOSED(IEN) ;
"RTN","IVMPLOG",162,0)
 ;Description: Returns the value of the STOP FLAG field of the
"RTN","IVMPLOG",163,0)
 ;IVM PATIENT file for a particular record, which indicates whether
"RTN","IVMPLOG",164,0)
 ;transmissions for certain events (but not enrollment events) should
"RTN","IVMPLOG",165,0)
 ;take place.
"RTN","IVMPLOG",166,0)
 ;
"RTN","IVMPLOG",167,0)
 ;Input:
"RTN","IVMPLOG",168,0)
 ;  IEN - internal entry number of a record in the IVM PATIENT file.
"RTN","IVMPLOG",169,0)
 ;Output:
"RTN","IVMPLOG",170,0)
 ;  Function Value - The value of the STOP FLAG field.
"RTN","IVMPLOG",171,0)
 ;
"RTN","IVMPLOG",172,0)
 Q:'$G(IEN) ""
"RTN","IVMPLOG",173,0)
 Q $P($G(^IVM(301.5,IEN,0)),"^",4)
"RTN","IVMPLOG",174,0)
 ;
"RTN","IVMPLOG",175,0)
LOG(DFN,YEAR,EVENTS) ;
"RTN","IVMPLOG",176,0)
 ;Description: Used to queue a patient for the nightly full transmission
"RTN","IVMPLOG",177,0)
 ;for a particular income year. If EVENTS is not passed, an entry in the 
"RTN","IVMPLOG",178,0)
 ;IVM PATIENT file will be created if it does not already exist, but
"RTN","IVMPLOG",179,0)
 ;the flag for transmission will not be set.
"RTN","IVMPLOG",180,0)
 ;
"RTN","IVMPLOG",181,0)
 ;Input:
"RTN","IVMPLOG",182,0)
 ;  DFN - ien of record in the PATIENT file.
"RTN","IVMPLOG",183,0)
 ;  YEAR -  income year in FM format.  This is the year that is to be
"RTN","IVMPLOG",184,0)
 ;  used when creating the full transmission message.
"RTN","IVMPLOG",185,0)
 ;  EVENTS () - an array of reasons for transmission, pass by reference.
"RTN","IVMPLOG",186,0)
 ;    EVENTS("IVM") = 1 if transmission due to IVM criteria, 0 otherwise
"RTN","IVMPLOG",187,0)
 ;    EVENTS(" "DCD")=1 if transmission due to DCD criteria, 0 otherwise
"RTN","IVMPLOG",188,0)
 ;    EVENTS("ENROLL")=1 if transmission due to enrollment criteria, 0 otherwise
"RTN","IVMPLOG",189,0)
 ;Output:
"RTN","IVMPLOG",190,0)
 ;  Function Value - internal entry number of the IVM PATIENT file record, or NULL if record could not be found or created.
"RTN","IVMPLOG",191,0)
 ;
"RTN","IVMPLOG",192,0)
 N IEN
"RTN","IVMPLOG",193,0)
 ;
"RTN","IVMPLOG",194,0)
 ;if the eligibility/enrollment upload is in progess, do nothing
"RTN","IVMPLOG",195,0)
 Q:($G(DGENUPLD)="ENROLLMENT/ELIGIBILITY UPLOAD IN PROGRESS") ""
"RTN","IVMPLOG",196,0)
 ;
"RTN","IVMPLOG",197,0)
 ;to be compatable with current software - in some places,
"RTN","IVMPLOG",198,0)
 ;YEAR passed is just 3 digits
"RTN","IVMPLOG",199,0)
 S:YEAR YEAR=$E(YEAR,1,3)_"0000"
"RTN","IVMPLOG",200,0)
 ;
"RTN","IVMPLOG",201,0)
 Q:'$$TESTVAL^DGENDBS(301.5,.01,DFN) ""
"RTN","IVMPLOG",202,0)
 Q:'$$TESTVAL^DGENDBS(301.5,.02,YEAR) ""
"RTN","IVMPLOG",203,0)
 ;
"RTN","IVMPLOG",204,0)
 ; check for an existing record in 301.5 for this income year...
"RTN","IVMPLOG",205,0)
 S IEN=$$FIND(DFN,YEAR)
"RTN","IVMPLOG",206,0)
 I 'IEN D
"RTN","IVMPLOG",207,0)
 .;need to create a new record
"RTN","IVMPLOG",208,0)
 .N DATA
"RTN","IVMPLOG",209,0)
 .L +^IVM(301.5,0):3
"RTN","IVMPLOG",210,0)
 .Q:'$T
"RTN","IVMPLOG",211,0)
 .S IEN=$$FIND(DFN,YEAR)
"RTN","IVMPLOG",212,0)
 .I IEN L -^IVM(301.5,0) Q
"RTN","IVMPLOG",213,0)
 .S DATA(.01)=DFN,DATA(.02)=YEAR
"RTN","IVMPLOG",214,0)
 .S IEN=$$ADD^DGENDBS(301.5,,.DATA)
"RTN","IVMPLOG",215,0)
 .L -^IVM(301.5,0)
"RTN","IVMPLOG",216,0)
 I IEN,$D(EVENTS),$$SETSTAT(IEN,.EVENTS)
"RTN","IVMPLOG",217,0)
 Q IEN
"RTN","IVMPLOG",218,0)
 ;
"RTN","IVMPLOG",219,0)
DELETE(DFN,TESTDATE,MT,RX,HARDSHIP,LTC) ;
"RTN","IVMPLOG",220,0)
 ;Description: Used to notify HEC that deletion of a MT,RX Copay test,
"RTN","IVMPLOG",221,0)
 ;LTC copay exemption test or hardship has occurred
"RTN","IVMPLOG",222,0)
 ;
"RTN","IVMPLOG",223,0)
 ;Input:
"RTN","IVMPLOG",224,0)
 ;  DFN - ien of record in the PATIENT file.
"RTN","IVMPLOG",225,0)
 ;  TESTDATE - date of test
"RTN","IVMPLOG",226,0)
 ;  MT - if $D(MT),MT then a MT was deleted
"RTN","IVMPLOG",227,0)
 ;  RX - if $D(RX),RX then a RX copay test was deleted
"RTN","IVMPLOG",228,0)
 ;  HARDSHIP - if $D(HARDSHIP),HARDSHIP then a hardship was deleted
"RTN","IVMPLOG",229,0)
 ;  LTC - if $G(LTC) then a LTC copay exemption test was deleted
"RTN","IVMPLOG",230,0)
 ;Output: none
"RTN","IVMPLOG",231,0)
 ;
"RTN","IVMPLOG",232,0)
 N YEAR,IEN,DATA
"RTN","IVMPLOG",233,0)
 ;
"RTN","IVMPLOG",234,0)
 S YEAR=($E(TESTDATE,1,3)-1)_"0000"
"RTN","IVMPLOG",235,0)
 ;
"RTN","IVMPLOG",236,0)
 ;
"RTN","IVMPLOG",237,0)
 S IEN=$$FIND(DFN,YEAR)
"RTN","IVMPLOG",238,0)
 Q:'IEN
"RTN","IVMPLOG",239,0)
 I $D(HARDSHIP),HARDSHIP S DATA(.1)=TESTDATE
"RTN","IVMPLOG",240,0)
 I $D(MT),MT S DATA(.08)=TESTDATE
"RTN","IVMPLOG",241,0)
 I $D(RX),RX S DATA(.09)=TESTDATE
"RTN","IVMPLOG",242,0)
 I $G(LTC) S DATA(.11)=TESTDATE
"RTN","IVMPLOG",243,0)
 I $$UPD^DGENDBS(301.5,IEN,.DATA)
"RTN","IVMPLOG",244,0)
 Q
"RTN","IVMPLOG",245,0)
 ;
"RTN","IVMPLOG",246,0)
EVENT(DFN) ;
"RTN","IVMPLOG",247,0)
 ;Description: Called in response to enrollment events. Determines
"RTN","IVMPLOG",248,0)
 ;whether for this patient transmission is appropriate, and if so the
"RTN","IVMPLOG",249,0)
 ;patient is logged for transmission.
"RTN","IVMPLOG",250,0)
 ;
"RTN","IVMPLOG",251,0)
 ;Input: DFN
"RTN","IVMPLOG",252,0)
 ;Output: none
"RTN","IVMPLOG",253,0)
 ;
"RTN","IVMPLOG",254,0)
 Q:'$G(DFN)
"RTN","IVMPLOG",255,0)
 ;
"RTN","IVMPLOG",256,0)
 Q:'$$ON^IVMUPAR1  ;quit if enrollment events turned off
"RTN","IVMPLOG",257,0)
 ;
"RTN","IVMPLOG",258,0)
 ;don't want to log event if called due to file re-indexing
"RTN","IVMPLOG",259,0)
 I $D(DIU(0))!($D(DIK)&$D(DIKJ)&$D(DIKLK)&$D(DIKS)&$D(DIN)) Q
"RTN","IVMPLOG",260,0)
 ;
"RTN","IVMPLOG",261,0)
 ;if the eligibility/enrollment upload is in progess, or there is no enrollment, do nothing
"RTN","IVMPLOG",262,0)
 Q:($G(DGENUPLD)="ENROLLMENT/ELIGIBILITY UPLOAD IN PROGRESS")
"RTN","IVMPLOG",263,0)
 I ('$$FINDCUR^DGENA(DFN)),('$$VET^DGENPTA(DFN)) Q
"RTN","IVMPLOG",264,0)
 N STATUS
"RTN","IVMPLOG",265,0)
 S STATUS=$$STATUS^DGENA(DFN)
"RTN","IVMPLOG",266,0)
 ; Purple Heart added status 21
"RTN","IVMPLOG",267,0)
 I $$VET1^DGENPTA(DFN)!(STATUS=1)!(STATUS=2)!(STATUS=9)!(STATUS=15)!(STATUS=16)!(STATUS=17)!(STATUS=18)!(STATUS=19)!(STATUS=20)!(STATUS=21) D
"RTN","IVMPLOG",268,0)
 .N EVENTS
"RTN","IVMPLOG",269,0)
 .S EVENTS("ENROLL")=1
"RTN","IVMPLOG",270,0)
 .I $$LOG(DFN,$$YEAR(DFN),.EVENTS) ;no need to inform on success or failure
"RTN","IVMPLOG",271,0)
 Q
"RTN","IVMPLOG",272,0)
 ;
"RTN","IVMPLOG",273,0)
YEAR(DFN) ;
"RTN","IVMPLOG",274,0)
 ;Determines the income year to be used in the transmission 
"RTN","IVMPLOG",275,0)
 ;
"RTN","IVMPLOG",276,0)
 N YEAR
"RTN","IVMPLOG",277,0)
 S YEAR=$$LD^IVMUFNC4(DFN)
"RTN","IVMPLOG",278,0)
 S:YEAR YEAR=($E(YEAR,1,3)-1)_"0000"
"RTN","IVMPLOG",279,0)
 S:'YEAR YEAR=($E(DT,1,3)-1)_"0000"
"RTN","IVMPLOG",280,0)
 Q YEAR
"RTN","IVMPMTE")
0^15^B6176210
"RTN","IVMPMTE",1,0)
IVMPMTE ;ALB/KCL/CJM/JAN - MEANS TEST EVENT DRIVER INTERFACE ; 07-MAR-01
"RTN","IVMPMTE",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**1,9,17,39,49**;21-OCT-94
"RTN","IVMPMTE",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPMTE",4,0)
 ;
"RTN","IVMPMTE",5,0)
 ;  Input - DFN the patient's internal entry number.
"RTN","IVMPMTE",6,0)
 ;          DGMTI the Means Test internal entry number.
"RTN","IVMPMTE",7,0)
 ;          DGMTINF the Means Test Interactive/Non-interactive flag.
"RTN","IVMPMTE",8,0)
 ;          DGMTACT the Means Test event type
"RTN","IVMPMTE",9,0)
 ;          DGMTP annual Means Test 0th node prior to Add, Edit
"RTN","IVMPMTE",10,0)
 ;                or Delete.
"RTN","IVMPMTE",11,0)
 ;          DGMTA annual Means Test 0th node after Add, Edit or Delete.
"RTN","IVMPMTE",12,0)
 ;
"RTN","IVMPMTE",13,0)
 ; Output - None.
"RTN","IVMPMTE",14,0)
 ;
"RTN","IVMPMTE",15,0)
 ;
"RTN","IVMPMTE",16,0)
EN ; Entry point
"RTN","IVMPMTE",17,0)
 N EVENTS,IVMDA
"RTN","IVMPMTE",18,0)
 S EVENTS("IVM")=1
"RTN","IVMPMTE",19,0)
 ;
"RTN","IVMPMTE",20,0)
 ; Quit if supported Means Test variables are not defined
"RTN","IVMPMTE",21,0)
 Q:'$D(DFN)!('$D(DGMTA))!('$D(DGMTP))!('$D(DGMTINF))!('$D(DGMTACT))
"RTN","IVMPMTE",22,0)
 ;
"RTN","IVMPMTE",23,0)
 ; - no processing required when uploading or deleting
"RTN","IVMPMTE",24,0)
 ; - an IVM-verified Means Test
"RTN","IVMPMTE",25,0)
 Q:DGMTACT="UPL"!(DGMTACT="DUP")
"RTN","IVMPMTE",26,0)
 I DGMTP]"",DGMTA]"",DGMTACT="DEL" Q
"RTN","IVMPMTE",27,0)
 ;
"RTN","IVMPMTE",28,0)
 ; Prevent DCD/other income tests uploaded from HEC to trigger a
"RTN","IVMPMTE",29,0)
 ; transmission back to HEC (quit if source of test isn't VAMC)
"RTN","IVMPMTE",30,0)
 N DGST S DGST=$S(+DGMTA:+$P(DGMTA,U,23),1:+$P(DGMTP,U,23))
"RTN","IVMPMTE",31,0)
 Q:$P($G(^DG(408.34,DGST,0)),"^")'="VAMC"&(DGMTACT'="CAT")
"RTN","IVMPMTE",32,0)
 ;
"RTN","IVMPMTE",33,0)
 W:'DGMTINF !,"Checking Income Verification Match (IVM) for changes..."
"RTN","IVMPMTE",34,0)
 S IVMMTDT=$S(DGMTA:+DGMTA,1:+DGMTP) Q:'IVMMTDT  S IVMDT=$$LYR^DGMTSCU1(IVMMTDT)
"RTN","IVMPMTE",35,0)
 S IVMNEW=0 S IVMDA=$O(^IVM(301.5,"APT",DFN,IVMDT,0)) I 'IVMDA S IVMNEW=1 ; Check for entry/previous year in IVM PATIENT file
"RTN","IVMPMTE",36,0)
 I 'IVMNEW D CHK ; If entry in IVM PATIENT file check for Means Test changes
"RTN","IVMPMTE",37,0)
 I IVMNEW,$$IVM^IVMUFNC(DFN,IVMMTDT),($E(IVMDT,1,3)=($E(DT,1,3)-1)) I $$LOG^IVMPLOG(DFN,IVMDT,.EVENTS) ; new & meets crtieria & current year
"RTN","IVMPMTE",38,0)
 ;
"RTN","IVMPMTE",39,0)
 ;log patient for transmission if patient meets DCD criteria
"RTN","IVMPMTE",40,0)
 D LOGDCD^IVMCUC(DFN,IVMMTDT)
"RTN","IVMPMTE",41,0)
 ;
"RTN","IVMPMTE",42,0)
ENQ ; Cleanup
"RTN","IVMPMTE",43,0)
 W:'DGMTINF "completed."
"RTN","IVMPMTE",44,0)
 K DA,DIC,DIE,DLAYGO,DR,IVMDA,IVMDT,IVMFLG,IVMMTDT,IVMNEW,X,Y
"RTN","IVMPMTE",45,0)
 Q
"RTN","IVMPMTE",46,0)
CHK ; Check if Means Test has been ADDED, DELETED, or EDITED
"RTN","IVMPMTE",47,0)
 S IVMFLG=0
"RTN","IVMPMTE",48,0)
 F X=1,2,3,4,5,7,10,12,15,18 Q:IVMFLG=1  D
"RTN","IVMPMTE",49,0)
 .I $P(DGMTA,"^",X)'=$P(DGMTP,"^",X) S IVMFLG=1 I $$SETSTAT^IVMPLOG(IVMDA,.EVENTS) ; If MT changes then edit IVM PATIENT file
"RTN","IVMPMTE",50,0)
 Q
"RTN","IVMPTRN9")
0^12^B22592380
"RTN","IVMPTRN9",1,0)
IVMPTRN9 ;ALB/KCL/CKN/BRM - HL7 FULL DATA TRANSMISSION (Z07) BUILDER (CONTINUED); 16-SEPTEMBER-1997 ; 4/30/02 11:11am
"RTN","IVMPTRN9",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,19,12,21,17,46,50,53,34,49**; 21-OCT-94
"RTN","IVMPTRN9",3,0)
 ;
"RTN","IVMPTRN9",4,0)
 ;
"RTN","IVMPTRN9",5,0)
GOTO ; place to break up the routine
"RTN","IVMPTRN9",6,0)
 ;
"RTN","IVMPTRN9",7,0)
 ;find if the deletion flags were set in the IVM Patient file, and if so, should the deletion indicators be sent?
"RTN","IVMPTRN9",8,0)
 F I="RX","MT","HARDSHIP","DATE OF TEST","LTC" S DELETE(I)=""
"RTN","IVMPTRN9",9,0)
 S IVMPIEN=$$FIND^IVMPLOG(DFN,($E(IVMMTDT,1,3)-1))
"RTN","IVMPTRN9",10,0)
 I IVMPIEN D
"RTN","IVMPTRN9",11,0)
 .S IVMPNODE=$G(^IVM(301.5,IVMPIEN,0))
"RTN","IVMPTRN9",12,0)
 .I $P(IVMPNODE,"^",8)!$P(IVMPNODE,"^",9)!$P(IVMPNODE,"^",10)!$P(IVMPNODE,"^",11) S DELETE("SET")=1
"RTN","IVMPTRN9",13,0)
 .;was the MT deletion flag set, and if so verify that there is no completed MT
"RTN","IVMPTRN9",14,0)
 .I $P(IVMPNODE,"^",8),(TESTTYPE'=1)!(TESTCODE="")!("ACP"'[TESTCODE) S DELETE("DATE OF TEST")=$P(IVMPNODE,"^",8),DELETE("MT")=1
"RTN","IVMPTRN9",15,0)
 .;
"RTN","IVMPTRN9",16,0)
 .;was the hardship deletion flag set, and if so verify that there is no completed hardship
"RTN","IVMPTRN9",17,0)
 .I $P(IVMPNODE,"^",10),'HARDSHIP D
"RTN","IVMPTRN9",18,0)
 ..S:('DELETE("DATE OF TEST")) DELETE("DATE OF TEST")=$P(IVMPNODE,"^",10)
"RTN","IVMPTRN9",19,0)
 ..S DELETE("HARDSHIP")=1
"RTN","IVMPTRN9",20,0)
 ;
"RTN","IVMPTRN9",21,0)
 ; create (ZMT) Means Test segment 
"RTN","IVMPTRN9",22,0)
 ;
"RTN","IVMPTRN9",23,0)
 S SEQS=$S(TESTTYPE=1:"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26",1:"1,17")
"RTN","IVMPTRN9",24,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^IVMCZMT(DFN,SEQS,IVMMTDT,1,1,.DELETE,1)
"RTN","IVMPTRN9",25,0)
 ;
"RTN","IVMPTRN9",26,0)
 ; create (ZMT) Rx-Copay Test segment
"RTN","IVMPTRN9",27,0)
 I IVMPIEN D
"RTN","IVMPTRN9",28,0)
 .;was the RX deletion flag set, and if so verify that there is no completed test
"RTN","IVMPTRN9",29,0)
 .I $P(IVMPNODE,"^",9),(TESTTYPE'=2)!(TESTCODE="")!("EM"'[TESTCODE) S DELETE("DATE OF TEST")=$P(IVMPNODE,"^",9),DELETE("RX")=1
"RTN","IVMPTRN9",30,0)
 ;
"RTN","IVMPTRN9",31,0)
 S SEQS=$S(TESTTYPE=2:"1,2,3,4,9,10,12,15,16,17,18,22,25,26",1:"1,17")
"RTN","IVMPTRN9",32,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^IVMCZMT(DFN,SEQS,IVMMTDT,2,2,.DELETE,1)
"RTN","IVMPTRN9",33,0)
 ;
"RTN","IVMPTRN9",34,0)
 ; create (ZMT) Long Term Care Copay Exemption Test segment
"RTN","IVMPTRN9",35,0)
 I IVMPIEN D
"RTN","IVMPTRN9",36,0)
 .; set deletion indicators if LTC test deletion should be transmitted
"RTN","IVMPTRN9",37,0)
 .I $P(IVMPNODE,"^",11) S DELETE("LTC")=1 S:('DELETE("DATE OF TEST")) DELETE("DATE OF TEST")=$P(IVMPNODE,"^",11)
"RTN","IVMPTRN9",38,0)
 ;
"RTN","IVMPTRN9",39,0)
 S SEQS="1,2,3,4,5,7,9,10,12,16,17,18,22,25"
"RTN","IVMPTRN9",40,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^IVMCZMT(DFN,SEQS,IVMMTDT,4,4,.DELETE,1)
"RTN","IVMPTRN9",41,0)
 ;
"RTN","IVMPTRN9",42,0)
 ;if the deletion flags were set in the IVM Patient file, unset them
"RTN","IVMPTRN9",43,0)
 I $G(DELETE("SET")) D
"RTN","IVMPTRN9",44,0)
 .N DATA
"RTN","IVMPTRN9",45,0)
 .S DATA(.08)="",DATA(.09)="",DATA(.1)="",DATA(.11)=""
"RTN","IVMPTRN9",46,0)
 .I $$UPD^DGENDBS(301.5,IVMPIEN,.DATA)
"RTN","IVMPTRN9",47,0)
 ;
"RTN","IVMPTRN9",48,0)
 ; create (ZBT) Beneficiary Travel segment based on last BT Claim
"RTN","IVMPTRN9",49,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZBT($$BTCLM^IVMUFNC4(DFN),"1,2,3,4,7")
"RTN","IVMPTRN9",50,0)
 ;
"RTN","IVMPTRN9",51,0)
 ; create (ZFE) Fee Basis segment(s)
"RTN","IVMPTRN9",52,0)
 D EN^FBHLZFE(DFN,"1,2,3,4,5")
"RTN","IVMPTRN9",53,0)
 F IVMSUB=0:0 S IVMSUB=+$O(FBZFE(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN9",54,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(FBZFE(+IVMSUB))
"RTN","IVMPTRN9",55,0)
 ;
"RTN","IVMPTRN9",56,0)
 ; create (ZSP) Service Period segment
"RTN","IVMPTRN9",57,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZSP(DFN,1,1)
"RTN","IVMPTRN9",58,0)
 ;
"RTN","IVMPTRN9",59,0)
 ; create (OBX) segment for NTR
"RTN","IVMPTRN9",60,0)
 ; CALL PIMS API TO GET NTRARRY OF NTR DATA
"RTN","IVMPTRN9",61,0)
 S GETCUR=$$ENRGET^DGNTAPI1(DFN)
"RTN","IVMPTRN9",62,0)
 I GETCUR D NTROBX^IVMPTRNA(.DGNTARR)
"RTN","IVMPTRN9",63,0)
 I $D(NTROBX) D
"RTN","IVMPTRN9",64,0)
 . S IVMCT=IVMCT+1
"RTN","IVMPTRN9",65,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLOBX(.NTROBX,,"2,3,5,11,12,14,15,16,17")
"RTN","IVMPTRN9",66,0)
 . I $G(NTROBX(16))'="" S $P(^TMP("HLS",$J,IVMCT),"^",17)=$G(NTROBX(16))
"RTN","IVMPTRN9",67,0)
 . K NTROBX
"RTN","IVMPTRN9",68,0)
 Q
"RTN","IVMPTRN9",69,0)
 ;
"RTN","IVMPTRN9",70,0)
GETTYPE(DFN,IVMMTDT,CODE,HARDSHIP,ACTVIEN) ;
"RTN","IVMPTRN9",71,0)
 ;Determines the type of test to include in the Z10.  HEC wants only the
"RTN","IVMPTRN9",72,0)
 ;test that they would consider primary,i.e., preference given to a comptleted means test, even if not currently in effect.
"RTN","IVMPTRN9",73,0)
 ;
"RTN","IVMPTRN9",74,0)
 ;Input:
"RTN","IVMPTRN9",75,0)
 ;  DFN
"RTN","IVMPTRN9",76,0)
 ;  IVMMTDT -date to be the search for the test
"RTN","IVMPTRN9",77,0)
 ;Output:
"RTN","IVMPTRN9",78,0)
 ;  Function value - type of test to send in Z10
"RTN","IVMPTRN9",79,0)
 ;  CODE - status code of test (pass by reference)
"RTN","IVMPTRN9",80,0)
 ;  HARDSHIP - hardship indicator (pass by reference)
"RTN","IVMPTRN9",81,0)
 ;  ACTVIEN - ien of test that should have the associated Income Relations (pass by reference)
"RTN","IVMPTRN9",82,0)
 ;
"RTN","IVMPTRN9",83,0)
 N TESTTYPE,MTNODE,RXNODE,NODE0,NODE2
"RTN","IVMPTRN9",84,0)
 S TESTTYPE=1
"RTN","IVMPTRN9",85,0)
 S (HARDSHIP,CODE,ACTVIEN)=""
"RTN","IVMPTRN9",86,0)
 Q:'$G(IVMMTDT) TESTTYPE
"RTN","IVMPTRN9",87,0)
 Q:'$G(DFN) TESTTYPE
"RTN","IVMPTRN9",88,0)
 ;
"RTN","IVMPTRN9",89,0)
 S MTNODE=$$LST^DGMTU(DFN,IVMMTDT,1) I $E($P(MTNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S MTNODE=""
"RTN","IVMPTRN9",90,0)
 S RXNODE=$$LST^DGMTU(DFN,IVMMTDT,2) I $E($P(RXNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S RXNODE=""
"RTN","IVMPTRN9",91,0)
 ;
"RTN","IVMPTRN9",92,0)
 I MTNODE="" S MTNODE=$$FUT^DGMTU(DFN,"",1) I $E($P(MTNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S MTNODE=""
"RTN","IVMPTRN9",93,0)
 I RXNODE="" S RXNODE=$$FUT^DGMTU(DFN,"",2) I $E($P(RXNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S RXNODE=""
"RTN","IVMPTRN9",94,0)
 D
"RTN","IVMPTRN9",95,0)
 .;determine which test has the associated income relations
"RTN","IVMPTRN9",96,0)
 .;
"RTN","IVMPTRN9",97,0)
 .I +MTNODE S CODE=$P(MTNODE,"^",4) I CODE'="",("ACPR"[CODE) S ACTVIEN=+MTNODE Q
"RTN","IVMPTRN9",98,0)
 .I +RXNODE S CODE=$P(RXNODE,"^",4) I CODE'="",("EMI"[CODE) S ACTVIEN=+RXNODE Q
"RTN","IVMPTRN9",99,0)
 .I +MTNODE S ACTVIEN=+MTNODE Q
"RTN","IVMPTRN9",100,0)
 .I +RXNODE S ACTVIEN=+RXNODE Q
"RTN","IVMPTRN9",101,0)
 I ACTVIEN,+MTNODE,+RXNODE D TRANSFER^DGMTU4(DFN,$S((ACTVIEN=+MTNODE):+RXNODE,1:+MTNODE),ACTVIEN)
"RTN","IVMPTRN9",102,0)
 ;
"RTN","IVMPTRN9",103,0)
 ;now find the primary test
"RTN","IVMPTRN9",104,0)
 I '(+MTNODE) G CHKCOPAY
"RTN","IVMPTRN9",105,0)
 S CODE=$P(MTNODE,"^",4)
"RTN","IVMPTRN9",106,0)
 S HARDSHIP=$P($G(^DGMT(408.31,+MTNODE,0)),"^",20)
"RTN","IVMPTRN9",107,0)
 I (CODE="")!("ACP"'[CODE) S NODE2=$G(^DGMT(408.31,+MTNODE,2)),CODE=$$GETCODE^DGMTH($P(NODE2,"^",3)) I (CODE="")!("ACP"'[CODE) G CHKCOPAY
"RTN","IVMPTRN9",108,0)
 ;
"RTN","IVMPTRN9",109,0)
 G QGETTYPE
"RTN","IVMPTRN9",110,0)
 ;
"RTN","IVMPTRN9",111,0)
CHKCOPAY ;
"RTN","IVMPTRN9",112,0)
 I '(+RXNODE) G QGETTYPE
"RTN","IVMPTRN9",113,0)
 S CODE=$P(RXNODE,"^",4)
"RTN","IVMPTRN9",114,0)
 I (CODE="")!("EM"'[CODE) S NODE2=$G(^DGMT(408.31,+RXNODE,2)),CODE=$$GETCODE^DGMTH($P(NODE2,"^",3)) I (CODE="")!("EM"'[CODE) G QGETTYPE
"RTN","IVMPTRN9",115,0)
 S TESTTYPE=2
"RTN","IVMPTRN9",116,0)
 ;
"RTN","IVMPTRN9",117,0)
QGETTYPE ;
"RTN","IVMPTRN9",118,0)
 Q TESTTYPE
"VER")
8.0^22
"^DD",301.5,301.5,.11,0)
LTC COPAY EXMPT TEST DELETE DT^D^^0;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",301.5,301.5,.11,.1)
LONG TERM CARE COPAY EXEMPTION TEST DELETION DATE
"^DD",301.5,301.5,.11,3)
Enter the Date of Test for the test that was deleted.
"^DD",301.5,301.5,.11,21,0)
^^4^4^3011220^
"^DD",301.5,301.5,.11,21,1,0)
This field will indicate whether HEC needs to be notified of the deletion
"^DD",301.5,301.5,.11,21,2,0)
of the veteran's Long Term Care Copay Exemption test.  The presence
"^DD",301.5,301.5,.11,21,3,0)
of a date will both indicate that a deletion occurred and the income year
"^DD",301.5,301.5,.11,21,4,0)
of the test that was deleted.
"^DD",301.5,301.5,.11,"DT")
3011220
**END**
**END**
