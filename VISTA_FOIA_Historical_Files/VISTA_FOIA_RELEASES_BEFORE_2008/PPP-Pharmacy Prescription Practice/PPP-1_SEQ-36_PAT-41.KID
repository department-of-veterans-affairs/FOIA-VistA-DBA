Released PPP*1*41 SEQ #36
Extracted from mail message
**KIDS**:PPP*1.0*41^

**INSTALL NAME**
PPP*1.0*41
"BLD",5285,0)
PPP*1.0*41^PHARMACY PRESCRIPTION PRACTICE^0^3060323^y
"BLD",5285,1,0)
^^8^8^3060323^
"BLD",5285,1,1,0)
PPPBLD1A CHANGE VAR I TO PPPI TO PREVENT POSS UNDEF ERROR
"BLD",5285,1,2,0)
 
"BLD",5285,1,3,0)
PPPMPI MODIFY PPP BUILD FFX TO PREVENT DUPLICATE ENTRIES
"BLD",5285,1,4,0)
 
"BLD",5285,1,5,0)
PPPMPI UPDATE DATE OF LAST AUTO BUILD
"BLD",5285,1,6,0)
 
"BLD",5285,1,7,0)
PPPSCN2 MODIFY ROUTINE TO LOOK AT THE FILE 44.003 MULTIPLE INSTEAD OF 
"BLD",5285,1,8,0)
JUST THE FIRST ENTRY
"BLD",5285,4,0)
^9.64PA^^
"BLD",5285,6)
2^
"BLD",5285,"ABPKG")
n
"BLD",5285,"INID")
^n
"BLD",5285,"INIT")

"BLD",5285,"KRN",0)
^9.67PA^8989.52^19
"BLD",5285,"KRN",.4,0)
.4
"BLD",5285,"KRN",.401,0)
.401
"BLD",5285,"KRN",.402,0)
.402
"BLD",5285,"KRN",.403,0)
.403
"BLD",5285,"KRN",.5,0)
.5
"BLD",5285,"KRN",.84,0)
.84
"BLD",5285,"KRN",3.6,0)
3.6
"BLD",5285,"KRN",3.8,0)
3.8
"BLD",5285,"KRN",9.2,0)
9.2
"BLD",5285,"KRN",9.8,0)
9.8
"BLD",5285,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5285,"KRN",9.8,"NM",1,0)
PPPBLD1A^^0^B18984309
"BLD",5285,"KRN",9.8,"NM",2,0)
PPPSCN2^^0^B16603361
"BLD",5285,"KRN",9.8,"NM",3,0)
PPPMPI^^0^B27108371
"BLD",5285,"KRN",9.8,"NM","B","PPPBLD1A",1)

"BLD",5285,"KRN",9.8,"NM","B","PPPMPI",3)

"BLD",5285,"KRN",9.8,"NM","B","PPPSCN2",2)

"BLD",5285,"KRN",19,0)
19
"BLD",5285,"KRN",19.1,0)
19.1
"BLD",5285,"KRN",101,0)
101
"BLD",5285,"KRN",409.61,0)
409.61
"BLD",5285,"KRN",771,0)
771
"BLD",5285,"KRN",870,0)
870
"BLD",5285,"KRN",8989.51,0)
8989.51
"BLD",5285,"KRN",8989.52,0)
8989.52
"BLD",5285,"KRN",8994,0)
8994
"BLD",5285,"KRN","B",.4,.4)

"BLD",5285,"KRN","B",.401,.401)

"BLD",5285,"KRN","B",.402,.402)

"BLD",5285,"KRN","B",.403,.403)

"BLD",5285,"KRN","B",.5,.5)

"BLD",5285,"KRN","B",.84,.84)

"BLD",5285,"KRN","B",3.6,3.6)

"BLD",5285,"KRN","B",3.8,3.8)

"BLD",5285,"KRN","B",9.2,9.2)

"BLD",5285,"KRN","B",9.8,9.8)

"BLD",5285,"KRN","B",19,19)

"BLD",5285,"KRN","B",19.1,19.1)

"BLD",5285,"KRN","B",101,101)

"BLD",5285,"KRN","B",409.61,409.61)

"BLD",5285,"KRN","B",771,771)

"BLD",5285,"KRN","B",870,870)

"BLD",5285,"KRN","B",8989.51,8989.51)

"BLD",5285,"KRN","B",8989.52,8989.52)

"BLD",5285,"KRN","B",8994,8994)

"BLD",5285,"QUES",0)
^9.62^^
"BLD",5285,"REQB",0)
^9.611^4^3
"BLD",5285,"REQB",1,0)
PPP*1.0*9^1
"BLD",5285,"REQB",3,0)
PPP*1.0*38^2
"BLD",5285,"REQB",4,0)
PPP*1.0*39^2
"BLD",5285,"REQB","B","PPP*1.0*38",3)

"BLD",5285,"REQB","B","PPP*1.0*39",4)

"BLD",5285,"REQB","B","PPP*1.0*9",1)

"MBREQ")
0
"PKG",521,-1)
1^1
"PKG",521,0)
PHARMACY PRESCRIPTION PRACTICE^PPP^3P
"PKG",521,20,0)
^9.402P^^
"PKG",521,22,0)
^9.49I^1^1
"PKG",521,22,1,0)
1.0^2950407^2951019
"PKG",521,22,1,"PAH",1,0)
41^3060323^123456952
"PKG",521,22,1,"PAH",1,1,0)
^^8^8^3060323
"PKG",521,22,1,"PAH",1,1,1,0)
PPPBLD1A CHANGE VAR I TO PPPI TO PREVENT POSS UNDEF ERROR
"PKG",521,22,1,"PAH",1,1,2,0)
 
"PKG",521,22,1,"PAH",1,1,3,0)
PPPMPI MODIFY PPP BUILD FFX TO PREVENT DUPLICATE ENTRIES
"PKG",521,22,1,"PAH",1,1,4,0)
 
"PKG",521,22,1,"PAH",1,1,5,0)
PPPMPI UPDATE DATE OF LAST AUTO BUILD
"PKG",521,22,1,"PAH",1,1,6,0)
 
"PKG",521,22,1,"PAH",1,1,7,0)
PPPSCN2 MODIFY ROUTINE TO LOOK AT THE FILE 44.003 MULTIPLE INSTEAD OF 
"PKG",521,22,1,"PAH",1,1,8,0)
JUST THE FIRST ENTRY
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PPPBLD1A")
0^1^B18984309^B18553476
"RTN","PPPBLD1A",1,0)
PPPBLD1A ;ALB/DMB - BUILD FFX FROM CDROM - CONTINUED : 3/4/92
"RTN","PPPBLD1A",2,0)
 ;;1.0;PHARMACY PRESCRIPTION PRACTICE;**2,26,38,41**;APR 7,1995
"RTN","PPPBLD1A",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PPPBLD1A",4,0)
 ;
"RTN","PPPBLD1A",5,0)
GETDATA ;
"RTN","PPPBLD1A",6,0)
 ;
"RTN","PPPBLD1A",7,0)
 S STARTTM=$$NOW^PPPCNV1
"RTN","PPPBLD1A",8,0)
 ;VMP OIFO BAY PINES;PPP*1*41  CHANGED F I= TO F PPPI=
"RTN","PPPBLD1A",9,0)
 NEW PPPI
"RTN","PPPBLD1A",10,0)
 F PPPI=0:0 D  Q:(STATUS)
"RTN","PPPBLD1A",11,0)
 .;
"RTN","PPPBLD1A",12,0)
 .; 
"RTN","PPPBLD1A",13,0)
 .;
"RTN","PPPBLD1A",14,0)
CHKTM .;VMP OIFO BAY PINES;ELR;PPP*1*38
"RTN","PPPBLD1A",15,0)
 .;REMOVE CHECKING FOR TIMEOUT ON MPD
"RTN","PPPBLD1A",16,0)
GETSSN .S SSN=$O(@OUTARRY@("DONE",""))
"RTN","PPPBLD1A",17,0)
 .I SSN'="" D
"RTN","PPPBLD1A",18,0)
 ..S STARTTM=$$NOW^PPPCNV1
"RTN","PPPBLD1A",19,0)
 ..S TSSN=TSSN+1
"RTN","PPPBLD1A",20,0)
 ..S FOUND=$G(@OUTARRY@(SSN,"FOUND"))
"RTN","PPPBLD1A",21,0)
 ..I FOUND<1 D  Q
"RTN","PPPBLD1A",22,0)
 ...I FOUND<0 D
"RTN","PPPBLD1A",23,0)
 ....S TMP=$$LOGEVNT^PPPMSC1(MPDERR2,PPPMRT,SSN_"/"_+FOUND)
"RTN","PPPBLD1A",24,0)
 ...K @OUTARRY@(SSN)
"RTN","PPPBLD1A",25,0)
 ...K @OUTARRY@("DONE",SSN)
"RTN","PPPBLD1A",26,0)
 ...D DEL
"RTN","PPPBLD1A",27,0)
 ..;
"RTN","PPPBLD1A",28,0)
GETDFN ..; Get the DFN for the SSN.  If we can't then we have an invalid SSN.
"RTN","PPPBLD1A",29,0)
 ..;
"RTN","PPPBLD1A",30,0)
 ..S PATDFN=+$$GETDFN^PPPGET1(SSN)
"RTN","PPPBLD1A",31,0)
 ..I PATDFN<1 D  Q
"RTN","PPPBLD1A",32,0)
 ...S STARTTM=$$NOW^PPPCNV1
"RTN","PPPBLD1A",33,0)
 ...S ERRTXT="Could not find SSN "_SSN_" in Patient File."
"RTN","PPPBLD1A",34,0)
 ...S ERRORS=1
"RTN","PPPBLD1A",35,0)
 ...S TMP=$$ADD2ERR^PPPBLD2(ERRARY2,ERRTXT)
"RTN","PPPBLD1A",36,0)
 ...K @OUTARRY@("DONE",SSN)
"RTN","PPPBLD1A",37,0)
 ...K @OUTARRY@(SSN)
"RTN","PPPBLD1A",38,0)
 ...D DEL
"RTN","PPPBLD1A",39,0)
 ..;
"RTN","PPPBLD1A",40,0)
GETSTA ..; Now get the station number.  If its not in the institution file
"RTN","PPPBLD1A",41,0)
 ..; then reject it.
"RTN","PPPBLD1A",42,0)
 ..;
"RTN","PPPBLD1A",43,0)
 ..S STANO=0
"RTN","PPPBLD1A",44,0)
 ..F  D  Q:STANO=""
"RTN","PPPBLD1A",45,0)
 ...S STANO=$O(@OUTARRY@(SSN,"SITES",STANO)) Q:STANO=""
"RTN","PPPBLD1A",46,0)
 ...;
"RTN","PPPBLD1A",47,0)
 ...; We need the station IFN to look up the entry in the FFX file.
"RTN","PPPBLD1A",48,0)
 ...;
"RTN","PPPBLD1A",49,0)
 ...;S SNIFN=$O(^DIC(4,"D",STANO,""))
"RTN","PPPBLD1A",50,0)
 ...S SNIFN=STANO
"RTN","PPPBLD1A",51,0)
 ...I SNIFN="" D  Q
"RTN","PPPBLD1A",52,0)
 ....S SNIFN=$O(^PPP(1020.128,"AC",STANO,0)) I SNIFN]"" Q
"RTN","PPPBLD1A",53,0)
 ....S STARTTM=$$NOW^PPPCNV1
"RTN","PPPBLD1A",54,0)
 ....S ERRTXT="Could not find station "_STANO_" in Institution File for SSN "_SSN_"."
"RTN","PPPBLD1A",55,0)
 ....S ERRORS=1
"RTN","PPPBLD1A",56,0)
 ....S TMP=$$ADD2ERR^PPPBLD2(ERRARY2,ERRTXT)
"RTN","PPPBLD1A",57,0)
 ...;
"RTN","PPPBLD1A",58,0)
FFXIFN ...; Check to see if the entry already exists.  If it does then update
"RTN","PPPBLD1A",59,0)
 ...; the last date of visit if necessary.  Else create a new entry.
"RTN","PPPBLD1A",60,0)
 ...;
"RTN","PPPBLD1A",61,0)
 ...S FFXIFN=$$GETFFIFN^PPPGET1(PATDFN,SNIFN)
"RTN","PPPBLD1A",62,0)
 ...S MPDLDOV=$G(@OUTARRY@(SSN,"SITES",STANO))
"RTN","PPPBLD1A",63,0)
 ...I FFXIFN>0 D
"RTN","PPPBLD1A",64,0)
 ....S FFXLDOV=$P($G(^PPP(1020.2,FFXIFN,0)),"^",3)
"RTN","PPPBLD1A",65,0)
 ....I MPDLDOV>FFXLDOV D
"RTN","PPPBLD1A",66,0)
 .....S DIE=1020.2
"RTN","PPPBLD1A",67,0)
 .....S DA=FFXIFN
"RTN","PPPBLD1A",68,0)
 .....S DR="2///"_MPDLDOV
"RTN","PPPBLD1A",69,0)
 .....D ^DIE
"RTN","PPPBLD1A",70,0)
 ....S TEDTENT=TEDTENT+1
"RTN","PPPBLD1A",71,0)
 ...E  D
"RTN","PPPBLD1A",72,0)
 ....S X=PATDFN
"RTN","PPPBLD1A",73,0)
 ....S DIC="^PPP(1020.2,"
"RTN","PPPBLD1A",74,0)
 ....S DIC(0)=""
"RTN","PPPBLD1A",75,0)
 ....S DIC("DR")="1////"_SNIFN_";2///"_MPDLDOV_";7///0"
"RTN","PPPBLD1A",76,0)
 ....K DD,DO D FILE^DICN
"RTN","PPPBLD1A",77,0)
 ....S TNEWENT=TNEWENT+1
"RTN","PPPBLD1A",78,0)
 ....I $P(Y,"^",3)'=1 D
"RTN","PPPBLD1A",79,0)
 .....S ERRTXT="Could not add "_SSN_"/"_STANO_" to FFX file."
"RTN","PPPBLD1A",80,0)
 .....S ERRORS=1
"RTN","PPPBLD1A",81,0)
 .....S TMP=$$ADD2ERR^PPPBLD2(ERRARY2,ERRTXT)
"RTN","PPPBLD1A",82,0)
 ....;
"RTN","PPPBLD1A",83,0)
 ....; Make sure the DOMAIN name got resolved.
"RTN","PPPBLD1A",84,0)
 ....;
"RTN","PPPBLD1A",85,0)
 ....I $P($G(^PPP(1020.2,+Y,1)),"^",5)="" D
"RTN","PPPBLD1A",86,0)
 .....S ERRTXT="Could not resolve DOMAIN for "_SSN_"/"_STANO
"RTN","PPPBLD1A",87,0)
 .....S ERRORS=1
"RTN","PPPBLD1A",88,0)
 .....S TMP=$$ADD2ERR^PPPBLD2(ERRARY2,ERRTXT)
"RTN","PPPBLD1A",89,0)
 ..;
"RTN","PPPBLD1A",90,0)
 ..; We're done with that SSN, kill it off and set last SSN processed
"RTN","PPPBLD1A",91,0)
 ..;VMP OIFO BAY PINES;ELR;PPP*1*38
"RTN","PPPBLD1A",92,0)
 ..D DEL
"RTN","PPPBLD1A",93,0)
 ..;
"RTN","PPPBLD1A",94,0)
 ..K @OUTARRY@("DONE",SSN)
"RTN","PPPBLD1A",95,0)
 ..;PPP*1*26 Dave Blocker - remove setting last SSN
"RTN","PPPBLD1A",96,0)
 ..;messes up the build option
"RTN","PPPBLD1A",97,0)
 ..K @OUTARRY@(SSN)
"RTN","PPPBLD1A",98,0)
 ..;S $P(^PPP(1020.1,1,2),"^",1)=SSN
"RTN","PPPBLD1A",99,0)
 ..S STARTTM=$$NOW^PPPCNV1
"RTN","PPPBLD1A",100,0)
 .E  D
"RTN","PPPBLD1A",101,0)
 ..;
"RTN","PPPBLD1A",102,0)
 ..; There was no SSN available.  Check to see if we're done.
"RTN","PPPBLD1A",103,0)
 ..; If not then check again.
"RTN","PPPBLD1A",104,0)
 ..;
"RTN","PPPBLD1A",105,0)
 ..S STATUS=+$G(@OUTARRY@("STATUS"))
"RTN","PPPBLD1A",106,0)
 ..I STATUS<0 D
"RTN","PPPBLD1A",107,0)
 ...S ERR=MPDSTERR
"RTN","PPPBLD1A",108,0)
 ...S TMP=$$LOGEVNT^PPPMSC1(ERR,PPPMRT,"Status = "_$P($G(@OUTARRY@("STATUS")),U,2))
"RTN","PPPBLD1A",109,0)
 ..E  H 1
"RTN","PPPBLD1A",110,0)
 ;
"RTN","PPPBLD1A",111,0)
 ; We're all done.  Check to see if we need to send an error bulletin.
"RTN","PPPBLD1A",112,0)
 ;
"RTN","PPPBLD1A",113,0)
 I ERRORS D
"RTN","PPPBLD1A",114,0)
 .S TMP=$$SNDBLTN^PPPMSC1("PPP FFX BUILD MESSAGES","PRESCRIPTION PRACTICES",ERRARY1)
"RTN","PPPBLD1A",115,0)
 ;
"RTN","PPPBLD1A",116,0)
 Q
"RTN","PPPBLD1A",117,0)
 ;
"RTN","PPPBLD1A",118,0)
DEL ;VMP OIFO BAY PINES;ELR;PPP*1*38
"RTN","PPPBLD1A",119,0)
 NEW PPPDA S PPPDA=0
"RTN","PPPBLD1A",120,0)
 F  S PPPDA=$O(^PPP(1020.7,"B",SSN,PPPDA)) Q:PPPDA=""  D
"RTN","PPPBLD1A",121,0)
 .I PPPDA S DA=PPPDA,DIK="^PPP(1020.7," D ^DIK K DIK
"RTN","PPPBLD1A",122,0)
 Q
"RTN","PPPMPI")
0^3^B27108371^B24128712
"RTN","PPPMPI",1,0)
PPPMPI ;BHM/DB - OBTAIN VISIT DATA FROM MPI ;21NOV01
"RTN","PPPMPI",2,0)
 ;;1.0;PHARMACY PRESCRIPTION PRACTICE;**35,39,41**;APR 7, 1995
"RTN","PPPMPI",3,0)
 ;
"RTN","PPPMPI",4,0)
 ;Reference to ^DPT("SSN" are covered by IA# 350
"RTN","PPPMPI",5,0)
 ;Reference to ^DIC(4) are covered by IA# 10090
"RTN","PPPMPI",6,0)
 D DONE
"RTN","PPPMPI",7,0)
 S (PPPCNT,PPPCNT1)=0
"RTN","PPPMPI",8,0)
 ;This routine extracts patient data from the
"RTN","PPPMPI",9,0)
 ;Treating Facility List file (#391.91)
"RTN","PPPMPI",10,0)
 ;^DGCN(391.91,D0,0) =
"RTN","PPPMPI",11,0)
 ;(#.01) PATIENT [1P] ^ (#.02) INSTITUTION [2P] ^
"RTN","PPPMPI",12,0)
 ;(#.03) DATE LAST TREATED [3D]
"RTN","PPPMPI",13,0)
 ;
"RTN","PPPMPI",14,0)
 W @IOF,!!,?20,"Build Foreign Facility Cross Reference",!
"RTN","PPPMPI",15,0)
 ;I '$D(^DGCN(391.91)) W !,"Sorry could not find the TREATING FACILITY LIST file (#391.91).",! G Q
"RTN","PPPMPI",16,0)
DATE ;Check for last build date
"RTN","PPPMPI",17,0)
 S PPPDUZ=DUZ
"RTN","PPPMPI",18,0)
 I $P($G(^PPP(1020.1,1,0)),"^",4)'>0 W !,"Could not find last build date." G ASKDT
"RTN","PPPMPI",19,0)
 S (PPPDT,Y)=$P($G(^PPP(1020.1,1,0)),"^",4) I +Y>0 X ^DD("DD") S PPPDT(1)=Y W !,"This option was last run on "_PPPDT(1)
"RTN","PPPMPI",20,0)
ASKDT S %DT("A")="Start searching from what date? " I $G(PPPDT)'="" S %DT(0)=PPPDT,%DT("B")=PPPDT(1)
"RTN","PPPMPI",21,0)
 S %DT="AE" D ^%DT G DONE:$G(DTOUT)=1 G DONE:+Y'>0  S PPPSTDT=+Y
"RTN","PPPMPI",22,0)
PPPSSN ;CHECK SSN
"RTN","PPPMPI",23,0)
 ;First check for Last SSN processed
"RTN","PPPMPI",24,0)
 S PPPSSN=$P($G(^PPP(1020.1,1,2)),"^",1) I PPPSSN="" S PPPSSN=0 G TSKMAN
"RTN","PPPMPI",25,0)
 I $O(^DPT("SSN",PPPSSN))="" W !!,?10,"The last SSN processed (",PPPSSN,") is the last in the file.",!,?10,"therefore, we will start the extract from the beginning.",! S PPPSSN=0 G TSKMAN
"RTN","PPPMPI",26,0)
 ;
"RTN","PPPMPI",27,0)
ASK1 W !,"Do you want to start this extract at SSN : ",PPPSSN," ? NO// " R AN:DTIME G DONE:AN["^" I AN="" S AN="N"
"RTN","PPPMPI",28,0)
 I "YyNn"'[AN W !!,?10,"Answer Y and the report will commence with the next SSN.",!,?10,"Answer 'N' and the process will start with the first SSN on file.",! K AN G ASK1
"RTN","PPPMPI",29,0)
 I "Yy"[AN G TSKMAN
"RTN","PPPMPI",30,0)
 I "Nn"[AN W !!,"OK, we'll start at the beginning." S PPPSSN=0
"RTN","PPPMPI",31,0)
TSKMAN ;Call taskman
"RTN","PPPMPI",32,0)
 W ! K DIR S DIR(0)="DA^NOW::ERSX",DIR("A")="When do you want to run this utility? ",DIR("B")="NOW",DIR("?")="Complete data and time must be stated." D ^DIR G DONE:$D(DIRUT)
"RTN","PPPMPI",33,0)
 F X="PPPSTDT","PPPRCVD","PPPDUZ","PPPSSN","PPPDT" S ZTSAVE(X)=""
"RTN","PPPMPI",34,0)
 S ZTDTH=Y,ZTRTN="PPPBGN^PPPMPI",ZTDESC="FFX BUILD FROM CD ROM",ZTIO=""
"RTN","PPPMPI",35,0)
 D ^%ZTLOAD
"RTN","PPPMPI",36,0)
 I '$D(ZTSK) D HOME^%ZIS W !,"Task was not started properly.",! G DONE
"RTN","PPPMPI",37,0)
 W !!,"Task Queued - Task Number: ",ZTSK,!!
"RTN","PPPMPI",38,0)
 G DONE
"RTN","PPPMPI",39,0)
 ;
"RTN","PPPMPI",40,0)
PPPBGN ;Entry point for building FFX file
"RTN","PPPMPI",41,0)
 N PPPDLUP
"RTN","PPPMPI",42,0)
 D NOW^%DTC S Y=%,PPPDLUP=$P(Y,".") X ^DD("DD") S PPPSTRT=Y,(PPPCNTR,PPPVSTC,PPPEND,PPPCNT,PPPENDT)=0
"RTN","PPPMPI",43,0)
 S PPPCNTR=0,PPPSSN1=PPPSSN F  S PPPSSN1=$O(^DPT("SSN",PPPSSN1)) Q:PPPSSN1=""  S PPPCNTR=$G(PPPCNTR)+1
"RTN","PPPMPI",44,0)
 ;
"RTN","PPPMPI",45,0)
 ;
"RTN","PPPMPI",46,0)
PPPLOOP S PPPSSN=$O(^DPT("SSN",PPPSSN)) G Q:$G(PPPSSN)="" S PPPCNT=$G(PPPCNT)+1,PPPDFN=+$$GETDFN^PPPGET1(PPPSSN) I $G(PPPDFN)'>0 G PPPLOOP
"RTN","PPPMPI",47,0)
 S ^PPP(1020.1,1,2)=PPPSSN,PPPEND=PPPSSN
"RTN","PPPMPI",48,0)
 K PPPDATA D TFL^VAFCTFU1(.PPPDATA,PPPDFN) ;Supported IA #2990
"RTN","PPPMPI",49,0)
 S PPPX1=0
"RTN","PPPMPI",50,0)
1 S PPPX1=$O(PPPDATA(PPPX1)) G PPPLOOP:PPPX1'>0 S DATA=PPPDATA(PPPX1),PPPVSTC=$G(PPPVSTC)+1
"RTN","PPPMPI",51,0)
 I $P(DATA,"^",5)'="VAMC" G 1
"RTN","PPPMPI",52,0)
 S PPPSITE=$P(DATA,"^",1) I $D(^PPP(1020.5,"B",PPPSITE)) G 1
"RTN","PPPMPI",53,0)
 I PPPSITE=$P($G(^PPP(1020.1,1,0)),"^",9) G 1
"RTN","PPPMPI",54,0)
 ;get visit information & update 1020.2
"RTN","PPPMPI",55,0)
 S PPPVST=$P($P(DATA,"^",3),".") I $G(PPPVST)<PPPSTDT G 1
"RTN","PPPMPI",56,0)
 ;
"RTN","PPPMPI",57,0)
MTCH ;Site data already exist for SSN
"RTN","PPPMPI",58,0)
 ;VMP OIFO BAY PINES;VGF;PPP*1.0*39;STORE INSTITUTION FILE IEN INTO PLACE OF VISIT FIELD OF 1020.2
"RTN","PPPMPI",59,0)
 K PPPIIEN
"RTN","PPPMPI",60,0)
 S PPPIIEN=$O(^DIC(4,"D",PPPSITE,0))
"RTN","PPPMPI",61,0)
 S PPPUPDT=0,PPPIEN1=$O(^PPP(1020.2,"APOV",PPPDFN,PPPIIEN,""))
"RTN","PPPMPI",62,0)
 I $G(PPPIEN1)>0 S PPPOLDDT=$P($G(^PPP(1020.2,PPPIEN1,0)),"^",3) D
"RTN","PPPMPI",63,0)
 .I $G(PPPOLDDT)'="",PPPVST>PPPOLDDT K DIE,DR S DIE="^PPP(1020.2,",DA=PPPIEN1,DR="2///"_PPPVST D ^DIE K DIE,DR,DA S PPPUPDT=1
"RTN","PPPMPI",64,0)
 .;VMP OIFO BAY PINES;PPP*1*41
"RTN","PPPMPI",65,0)
 .;ADDED NEXT LINE VISIT DATE CAN BE NULL IF ADDED BY PDX TRANSACTION IN PPPPDX3
"RTN","PPPMPI",66,0)
 .I $G(PPPOLDDT)="",PPPVST>0 K DIE,DR S DIE="^PPP(1020.2,",DA=PPPIEN1,DR="2///"_PPPVST D ^DIE K DIE,DR,DA S PPPUPDT=1
"RTN","PPPMPI",67,0)
 I $G(PPPUPDT)=1 G 1
"RTN","PPPMPI",68,0)
 I $G(PPPIEN1)>0 G 1
"RTN","PPPMPI",69,0)
 ;
"RTN","PPPMPI",70,0)
 ;
"RTN","PPPMPI",71,0)
 ;
"RTN","PPPMPI",72,0)
NEWSSN ;Add patient to 1020.2
"RTN","PPPMPI",73,0)
 S X=PPPDFN,DLAYGO="1020.2",DIC="^PPP(1020.2,",DIC(0)="",DIC("DR")="1////"_PPPIIEN_";2///"_PPPVST_";7///0" K DD,D0 D FILE^DICN
"RTN","PPPMPI",74,0)
 G 1
"RTN","PPPMPI",75,0)
Q ;
"RTN","PPPMPI",76,0)
 ;VMP OIFO BAY PINES;PPP*1*41
"RTN","PPPMPI",77,0)
 ;ADDED NEXT LINE TO UPDATE LAST PDX BATCH DATE IN PARAMETER FILE
"RTN","PPPMPI",78,0)
 K DIE,DR S DIE="^PPP(1020.1,",DA=1,DR="3///"_PPPDLUP D ^DIE K DIE,DR,DA
"RTN","PPPMPI",79,0)
 K DIC
"RTN","PPPMPI",80,0)
 D NOW^%DTC S Y=% X ^DD("DD") S PPPENDT=Y
"RTN","PPPMPI",81,0)
 S ^TMP($J,"PPP",1)=" "
"RTN","PPPMPI",82,0)
 S ^TMP($J,"PPP",2)=" RESULTS FROM BUILD PROCESS"
"RTN","PPPMPI",83,0)
 S ^TMP($J,"PPP",3)=" Build Started at   : "_$G(PPPSTRT)
"RTN","PPPMPI",84,0)
 S ^TMP($J,"PPP",4)=" Build Finished at  : "_$G(PPPENDT)
"RTN","PPPMPI",85,0)
 S ^TMP($J,"PPP",5)=" Last SSN processed : "_$G(PPPEND) I $O(^DPT("SSN",PPPEND))="" S ^TMP($J,"PPP",5)=^TMP($J,"PPP",5)_"   << Last SSN on file."
"RTN","PPPMPI",86,0)
 S ^TMP($J,"PPP",6)=" Processed "_$G(PPPCNT)_" out of "_$G(PPPCNTR)_" SSNs."
"RTN","PPPMPI",87,0)
 S ^TMP($J,"PPP",7)=" Examined "_$G(PPPVSTC)_" site visits"
"RTN","PPPMPI",88,0)
 ;
"RTN","PPPMPI",89,0)
 ;
"RTN","PPPMPI",90,0)
SNDMAIL ;Send message to user
"RTN","PPPMPI",91,0)
 S XMSUB="PHARMACY PRESCRIPTION PRACTICES",XMTEXT="^TMP("_$J_","_"""PPP"""_",",XMDUZ=.5,XMY(PPPDUZ)="" D ^XMD K XMDUZ
"RTN","PPPMPI",92,0)
 K ^TMP($J)
"RTN","PPPMPI",93,0)
DONE ;kill variables & exit
"RTN","PPPMPI",94,0)
 K AN,DA,DATA,DD,DIC,DIE,DIR,DR,OLDDT,PPPCNT,PPPCNT1,PPPCNTR,PPPDATA,PPPDFN,PPPDT,PPPDUZ,PPPEND,PPPENDT,PPPIEN1,PPPSITE,PPPSSN,PPPSSN1,PPPSTDT,PPPSTRT,PPPUPDT,PPPVST,PPPVSTC,PPPX1
"RTN","PPPMPI",95,0)
 K X,XMDUZ,XMY,Y Q
"RTN","PPPSCN2")
0^2^B16603361^B15182169
"RTN","PPPSCN2",1,0)
PPPSCN2 ;ALB/DMB - PPP CLINIC SCAN ROUTINE ; 2/20/92
"RTN","PPPSCN2",2,0)
 ;;1.0;PHARMACY PRESCRIPTION PRACTICE;**9,41**;APR 7,1995
"RTN","PPPSCN2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PPPSCN2",4,0)
 ;
"RTN","PPPSCN2",5,0)
FFSCAN ; Scan clinic for patients to send PDX's for
"RTN","PPPSCN2",6,0)
 ;
"RTN","PPPSCN2",7,0)
 N X,TMP,DTCERR,PFGERR,CSCNSTRT,CSCNEND,DATE,SCANDATE,PCSD,TOTPATS
"RTN","PPPSCN2",8,0)
 N PDXSTRT,PDXEND,CODE,ERR,FFXIFN,LPDX,MAXDAYS,RSLTPTR,UNSPTR
"RTN","PPPSCN2",9,0)
 N PATDFN,STAPTR,TOTSTA,X1,X2,PROCPTR,AUTOPTR
"RTN","PPPSCN2",10,0)
 ;
"RTN","PPPSCN2",11,0)
 S PPPMRT="FFSCAN_PPPSCN2"
"RTN","PPPSCN2",12,0)
 S DTCERR=-9006
"RTN","PPPSCN2",13,0)
 S PFGERR=-9007
"RTN","PPPSCN2",14,0)
 S CSCNSTRT=1006
"RTN","PPPSCN2",15,0)
 S CSCNEND=1007
"RTN","PPPSCN2",16,0)
 S PDXSTRT=1008
"RTN","PPPSCN2",17,0)
 S PDXEND=1009
"RTN","PPPSCN2",18,0)
 S ^TMP("PPP",$J,"ERR",1)="The following Errors occurred while attempting to send PDX's:"
"RTN","PPPSCN2",19,0)
 S ^TMP("PPP",$J,"ERR",2)=" "
"RTN","PPPSCN2",20,0)
 S (PDXSNT,TOTSTA)=0
"RTN","PPPSCN2",21,0)
 S ERR=0
"RTN","PPPSCN2",22,0)
 ;GET POINTERS TO ACCEPTABLE PDX STATUSES
"RTN","PPPSCN2",23,0)
 S RSLTPTR=$$GETSTPTR^PPPGET7("VAQ-RSLT")
"RTN","PPPSCN2",24,0)
 S UNSPTR=$$GETSTPTR^PPPGET7("VAQ-UNSOL")
"RTN","PPPSCN2",25,0)
 S PROCPTR=$$GETSTPTR^PPPGET7("VAQ-PROC")
"RTN","PPPSCN2",26,0)
 S AUTOPTR=$$GETSTPTR^PPPGET7("VAQ-AUTO")
"RTN","PPPSCN2",27,0)
 ;
"RTN","PPPSCN2",28,0)
 S TMP=$$LOGEVNT^PPPMSC1(CSCNSTRT,PPPMRT)
"RTN","PPPSCN2",29,0)
 ;
"RTN","PPPSCN2",30,0)
 D NOW^%DTC
"RTN","PPPSCN2",31,0)
 I X="" D  Q
"RTN","PPPSCN2",32,0)
 .S TMP=$$LOGEVNT^PPPMSC1(DTCERR,PPPMRT)
"RTN","PPPSCN2",33,0)
 S DATE=X
"RTN","PPPSCN2",34,0)
 K %,%H,%I,X
"RTN","PPPSCN2",35,0)
 ;
"RTN","PPPSCN2",36,0)
 S PCSD=$P($G(^PPP(1020.1,1,0)),"^",2)
"RTN","PPPSCN2",37,0)
 I PCSD="" D  Q
"RTN","PPPSCN2",38,0)
 .S TMP=$$LOGEVNT^PPPMSC1(PFGERR,PPPMRT)
"RTN","PPPSCN2",39,0)
 S X1=DATE
"RTN","PPPSCN2",40,0)
 S X2=PCSD
"RTN","PPPSCN2",41,0)
 D C^%DTC
"RTN","PPPSCN2",42,0)
 I X="" D  Q
"RTN","PPPSCN2",43,0)
 .S TMP=$$LOGEVNT^PPPMSC1(DTCERR,PPPMRT)
"RTN","PPPSCN2",44,0)
 S SCANDATE=X
"RTN","PPPSCN2",45,0)
 K X1,X2,X,%H
"RTN","PPPSCN2",46,0)
 ;
"RTN","PPPSCN2",47,0)
 S TOTPATS=$$CLINSCAN(SCANDATE,"^TMP(""PPP"",$J,SCANDATE)")
"RTN","PPPSCN2",48,0)
 S TMP=$$LOGEVNT^PPPMSC1(CSCNEND,PPPMRT,"TOTAL ENTRIES = "_TOTPATS)
"RTN","PPPSCN2",49,0)
 ;
"RTN","PPPSCN2",50,0)
 S MAXDAYS=$P($G(^PPP(1020.1,1,0)),"^",3)
"RTN","PPPSCN2",51,0)
 S TMP=$$LOGEVNT^PPPMSC1(PDXSTRT,PPPMRT)
"RTN","PPPSCN2",52,0)
 ;
"RTN","PPPSCN2",53,0)
 F PATDFN=0:0 D  Q:PATDFN=""
"RTN","PPPSCN2",54,0)
 .K PPPSTA
"RTN","PPPSCN2",55,0)
 .S PATDFN=$O(^TMP("PPP",$J,SCANDATE,PATDFN)) Q:PATDFN=""
"RTN","PPPSCN2",56,0)
 .F STAPTR=0:0 D  Q:STAPTR=""
"RTN","PPPSCN2",57,0)
 ..S STAPTR=$O(^PPP(1020.2,"APOV",PATDFN,STAPTR)) Q:STAPTR=""
"RTN","PPPSCN2",58,0)
 ..S FFXIFN=$O(^PPP(1020.2,"APOV",PATDFN,STAPTR,"")) Q:FFXIFN=""
"RTN","PPPSCN2",59,0)
 ..I '$D(^PPP(1020.5,"B",STAPTR)) D
"RTN","PPPSCN2",60,0)
 ...S LPDX=$P($G(^PPP(1020.2,FFXIFN,1)),"^",2)
"RTN","PPPSCN2",61,0)
 ...I LPDX=""!($$DIFFDT^PPPCNV1(DATE,LPDX)>MAXDAYS) D
"RTN","PPPSCN2",62,0)
 ....S CODE=$P($G(^PPP(1020.2,FFXIFN,1)),"^",3)
"RTN","PPPSCN2",63,0)
 ....I ((CODE=RSLTPTR)!(CODE=UNSPTR)!(CODE=PROCPTR)!(CODE=AUTOPTR)!(CODE="")) D
"RTN","PPPSCN2",64,0)
 .....S PPPSTA(STAPTR)=""
"RTN","PPPSCN2",65,0)
 .....S TOTSTA=TOTSTA+1
"RTN","PPPSCN2",66,0)
 .I $O(PPPSTA(""))'="" D  Q:ERR
"RTN","PPPSCN2",67,0)
 ..S ERR=$$SNDPDX^PPPPDX1(PATDFN,"PPPSTA","^TMP(""PPP"",$J,""ERR"")")
"RTN","PPPSCN2",68,0)
 ..I ERR D
"RTN","PPPSCN2",69,0)
 ...S TMP=$$LOGEVNT^PPPMSC1(ERR,PPPMRT,"Error From PPPPDX1 ==> "_ERR)
"RTN","PPPSCN2",70,0)
 ...S PATDFN=""
"RTN","PPPSCN2",71,0)
 ;
"RTN","PPPSCN2",72,0)
 ; Set the last batch request date to today
"RTN","PPPSCN2",73,0)
 ;
"RTN","PPPSCN2",74,0)
 S $P(^PPP(1020.1,1,0),"^",6)=DT
"RTN","PPPSCN2",75,0)
 S TMP=$$LOGEVNT^PPPMSC1(PDXEND,PPPMRT,"TOTAL PDX'S REQUESTED = "_TOTSTA)
"RTN","PPPSCN2",76,0)
 I '$D(^TMP("PPP",$J,"ERR",3)) S ^TMP("PPP",$J,"ERR",1)="No Errors occurred while attempting to send PDX's"
"RTN","PPPSCN2",77,0)
 ;S ^TMP("PPP",$J,"ERR",4)=""
"RTN","PPPSCN2",78,0)
 S TMP=$$SNDBLTN^PPPMSC1("PPP DAILY BATCH "_$$SLASHDT^PPPCNV1(DT),"PRESCRIPTION PRACTICES","^TMP(""PPP"",$J,""ERR"",")
"RTN","PPPSCN2",79,0)
 ;
"RTN","PPPSCN2",80,0)
 K ^TMP("PPP",$J,"ERR"),^TMP("PPP",$J,SCANDATE),PPPMRT,PPPSTA,PDXSNT
"RTN","PPPSCN2",81,0)
 Q
"RTN","PPPSCN2",82,0)
 ;
"RTN","PPPSCN2",83,0)
CLINSCAN(SCANDATE,ARRYNM) ; Scan the clinics for appointments
"RTN","PPPSCN2",84,0)
 ;
"RTN","PPPSCN2",85,0)
 N CLINIC,DATE,DPTINFO,I,PATDFN
"RTN","PPPSCN2",86,0)
 N TMP,TPATS,X,PPPSCDA
"RTN","PPPSCN2",87,0)
 ;
"RTN","PPPSCN2",88,0)
 S TPATS=0
"RTN","PPPSCN2",89,0)
 ;
"RTN","PPPSCN2",90,0)
 S CLINIC=""
"RTN","PPPSCN2",91,0)
 F I=0:0 D  Q:CLINIC=""
"RTN","PPPSCN2",92,0)
 .S CLINIC=$O(^SC("AC","C",CLINIC)) Q:CLINIC=""
"RTN","PPPSCN2",93,0)
 .F DATE=SCANDATE:0 D  Q:$P(DATE,".")'=SCANDATE
"RTN","PPPSCN2",94,0)
 ..S DATE=$O(^SC(CLINIC,"S",DATE)) Q:$P(DATE,".")'=SCANDATE
"RTN","PPPSCN2",95,0)
 ..I $P(DATE,".")=SCANDATE D
"RTN","PPPSCN2",96,0)
 ...;VMP OIFO BAY PINES;PPP*1*41
"RTN","PPPSCN2",97,0)
 ...;ADD F LOOP TO PICK UP 44.003 MULTIPLE
"RTN","PPPSCN2",98,0)
 ...S PPPSCDA=0 F  S PPPSCDA=$O(^SC(CLINIC,"S",DATE,1,PPPSCDA)) Q:PPPSCDA'>0  D
"RTN","PPPSCN2",99,0)
 ....S PATDFN=$P($G(^SC(CLINIC,"S",DATE,1,PPPSCDA,0)),"^") Q:PATDFN=""
"RTN","PPPSCN2",100,0)
 ....S DPTINFO=$P($G(^DPT(PATDFN,"S",DATE,0)),"^",1,2)
"RTN","PPPSCN2",101,0)
 ....I $P(DPTINFO,"^")=CLINIC&($P(DPTINFO,"^",2)="") D
"RTN","PPPSCN2",102,0)
 .....S @ARRYNM@(PATDFN)=""
"RTN","PPPSCN2",103,0)
 .....S TPATS=TPATS+1
"RTN","PPPSCN2",104,0)
 Q TPATS
"VER")
8.0^22.0
"BLD",5285,6)
^36
**END**
**END**
