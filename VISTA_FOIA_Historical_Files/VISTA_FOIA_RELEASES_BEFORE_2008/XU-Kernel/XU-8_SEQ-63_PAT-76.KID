Released XU*8*76 SEQ #63
Extracted from mail message
**KIDS**:XU*8.0*76^

**INSTALL NAME**
XU*8.0*76
"BLD",46,0)
XU*8.0*76^KERNEL^0^^y
"BLD",46,4,0)
^9.64PA^^
"BLD",46,"KRN",0)
^9.67PA^19^18
"BLD",46,"KRN",.4,0)
.4
"BLD",46,"KRN",.401,0)
.401
"BLD",46,"KRN",.402,0)
.402
"BLD",46,"KRN",.403,0)
.403
"BLD",46,"KRN",.5,0)
.5
"BLD",46,"KRN",.84,0)
.84
"BLD",46,"KRN",3.6,0)
3.6
"BLD",46,"KRN",3.8,0)
3.8
"BLD",46,"KRN",9.2,0)
9.2
"BLD",46,"KRN",9.8,0)
9.8
"BLD",46,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",46,"KRN",9.8,"NM",1,0)
XPDIL1^^0^B30195737
"BLD",46,"KRN",9.8,"NM","B","XPDIL1",1)

"BLD",46,"KRN",19,0)
19
"BLD",46,"KRN",19.1,0)
19.1
"BLD",46,"KRN",101,0)
101
"BLD",46,"KRN",409.61,0)
409.61
"BLD",46,"KRN",771,0)
771
"BLD",46,"KRN",869.2,0)
869.2
"BLD",46,"KRN",870,0)
870
"BLD",46,"KRN",8994,0)
8994
"BLD",46,"KRN","B",.4,.4)

"BLD",46,"KRN","B",.401,.401)

"BLD",46,"KRN","B",.402,.402)

"BLD",46,"KRN","B",.403,.403)

"BLD",46,"KRN","B",.5,.5)

"BLD",46,"KRN","B",.84,.84)

"BLD",46,"KRN","B",3.6,3.6)

"BLD",46,"KRN","B",3.8,3.8)

"BLD",46,"KRN","B",9.2,9.2)

"BLD",46,"KRN","B",9.8,9.8)

"BLD",46,"KRN","B",19,19)

"BLD",46,"KRN","B",19.1,19.1)

"BLD",46,"KRN","B",101,101)

"BLD",46,"KRN","B",409.61,409.61)

"BLD",46,"KRN","B",771,771)

"BLD",46,"KRN","B",869.2,869.2)

"BLD",46,"KRN","B",870,870)

"BLD",46,"KRN","B",8994,8994)

"BLD",46,"QUES",0)
^9.62^^
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2970507^.5
"PKG",3,22,1,"PAH",1,0)
76
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","XPDIL1")
0^1^B30195737
"RTN","XPDIL1",1,0)
XPDIL1 ;SFISC/RSD - cont. of load Distribution Global ;03/23/98  10:15
"RTN","XPDIL1",2,0)
 ;;8.0;KERNEL;**15,17,39,41,44,66,68,76**;Jul 10, 1995
"RTN","XPDIL1",3,0)
 ;
"RTN","XPDIL1",4,0)
PKG(XPDA) ;check Package file
"RTN","XPDIL1",5,0)
 N XPD,XPDCP,XPDNM,XPDNOQUE,XPDPKG,X,Y,%
"RTN","XPDIL1",6,0)
 S XPDNM=$P(XPDT(XPDIT),U,2) W !?3,XPDNM
"RTN","XPDIL1",7,0)
 ;check KIDS version against sites version, skip if package is Kernel
"RTN","XPDIL1",8,0)
 I $$PKG^XPDUTL(XPDNM)'["KERNEL" D  I $D(XPDQUIT) D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",9,0)
 .;this is part of a Kernel multi package
"RTN","XPDIL1",10,0)
 .Q:$O(XPDT("NM","KERNEL"))["KERNEL"
"RTN","XPDIL1",11,0)
 .S Y=$G(^XTMP("XPDI",XPDA,"VER"))
"RTN","XPDIL1",12,0)
 .I $$VERSION^XPDUTL("XU")<Y W !!,"But I need Version ",+Y," of KERNEL!"  S XPDQUIT=1
"RTN","XPDIL1",13,0)
 .I $$VERSION^XPDUTL("VA FILEMAN")<$P(Y,U,2) W !,"But I Need Version ",+$P(Y,U,2)," of VA FILEMAN!" S XPDQUIT=1
"RTN","XPDIL1",14,0)
 ;get national package name
"RTN","XPDIL1",15,0)
 S %=$O(^XTMP("XPDI",XPDA,"PKG",0)),XPDPKG(0)=$G(^(+%,0)),XPDPKG=%
"RTN","XPDIL1",16,0)
 ;XPDPKG=new ien^old ien
"RTN","XPDIL1",17,0)
 I XPDPKG D  S XPDPKG=+Y_U_XPDPKG
"RTN","XPDIL1",18,0)
 .N D,DIC
"RTN","XPDIL1",19,0)
 .S DIC="^DIC(9.4,",DIC(0)="X",X=$P(XPDPKG(0),U)
"RTN","XPDIL1",20,0)
 .D ^DIC Q:Y>0
"RTN","XPDIL1",21,0)
 .;if lookup fails try Prefix, C x-ref
"RTN","XPDIL1",22,0)
 .S X=$P(XPDPKG(0),U,2),D="C" D IX^DIC
"RTN","XPDIL1",23,0)
 ;add package to Install file
"RTN","XPDIL1",24,0)
 I XPDPKG>0 S XPD(9.7,XPDA_",",1)=+XPDPKG D FILE^DIE("","XPD")
"RTN","XPDIL1",25,0)
 ;XPDSKPE= does site want to run Environ. Check
"RTN","XPDIL1",26,0)
 I '$G(XPDSKPE) Q:$$ENV(0)=1
"RTN","XPDIL1",27,0)
 ;global package can't have pre or post inits
"RTN","XPDIL1",28,0)
 Q:$D(XPDGP)
"RTN","XPDIL1",29,0)
 ;create pre-init checkpoint
"RTN","XPDIL1",30,0)
 S XPDCP="INI" I '$$NEWCP^XPDUTL("XPD PREINSTALL COMPLETED") D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",31,0)
 S %=$$INRTN("INI")
"RTN","XPDIL1",32,0)
 ;check for routine, use as call back
"RTN","XPDIL1",33,0)
 I $L(%),'$$NEWCP^XPDUTL("XPD PREINSTALL STARTED",%) D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",34,0)
 ;create post-init checkpoint
"RTN","XPDIL1",35,0)
 S XPDCP="INIT" I '$$NEWCP^XPDUTL("XPD POSTINSTALL COMPLETED") D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",36,0)
 S %=$$INRTN("INIT")
"RTN","XPDIL1",37,0)
 I $L(%),'$$NEWCP^XPDUTL("XPD POSTINSTALL STARTED",%) D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",38,0)
 ;create fileman and components check points and file rest of data
"RTN","XPDIL1",39,0)
 D XPCK^XPDIK("FIA"),XPCK^XPDIK("KRN")
"RTN","XPDIL1",40,0)
 Q
"RTN","XPDIL1",41,0)
INST(XPDNM) ;add to Install file
"RTN","XPDIL1",42,0)
 N DIC,DIR,DIRUT,DLAYGO,X,XPD,XPDA,XPDIE,XPDDIQ,Y
"RTN","XPDIL1",43,0)
 ;check if Build was already installed
"RTN","XPDIL1",44,0)
 ;XPD=0 abort install, else XPD=ien in Install file
"RTN","XPDIL1",45,0)
 I $D(^XPD(9.7,"B",XPDNM)) S Y=0 D  Q:$D(XPD) XPD
"RTN","XPDIL1",46,0)
 .W !,"The following Entries already exist in the INSTALL file: ",!
"RTN","XPDIL1",47,0)
 .F  S Y=$O(^XPD(9.7,"B",XPDNM,Y)) Q:'Y  D
"RTN","XPDIL1",48,0)
 ..Q:'$D(^XPD(9.7,Y,0))  S %=^(0)
"RTN","XPDIL1",49,0)
 ..W !,$P(%,U),"   "
"RTN","XPDIL1",50,0)
 ..I $P(%,U,9)<3,$D(^XTMP("XPDI",Y)) W "**Transport Global already exists**",*7 S XPD=0 Q
"RTN","XPDIL1",51,0)
 ..W $$EXTERNAL^DILFD(9.7,.02,"",$P(%,U,9)),!,"was loaded on ",$$FMTE^XLFDT($P($G(^XPD(9.7,Y,1)),U))
"RTN","XPDIL1",52,0)
 .;quit if transport global exist
"RTN","XPDIL1",53,0)
 .Q:$D(XPD)
"RTN","XPDIL1",54,0)
 .S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="NO"
"RTN","XPDIL1",55,0)
 .D ^DIR I $D(DIRUT)!'Y S XPD=0 Q
"RTN","XPDIL1",56,0)
 S DIC="^XPD(9.7,",DIC(0)="XL",DLAYGO=9.7,X=""""_XPDNM_""""
"RTN","XPDIL1",57,0)
 ;add to Install file, must be new
"RTN","XPDIL1",58,0)
 D ^DIC
"RTN","XPDIL1",59,0)
 I Y<0 W !,"Can't add Build ",XPDNM," to Install File" Q 0
"RTN","XPDIL1",60,0)
 ;set starting package to Y, if it is not already defined
"RTN","XPDIL1",61,0)
 S:'XPDST XPDST=+Y
"RTN","XPDIL1",62,0)
 ;XPDT array keeps track of all packages in this distribution
"RTN","XPDIL1",63,0)
 S XPDA=+Y,XPDT(XPDIT)=XPDA_U_XPDNM,(XPDT("DA",XPDA),XPDT("NM",XPDNM))=XPDIT
"RTN","XPDIL1",64,0)
 S %="XPDIE(9.7,"""_XPDA_","")",@%@(.02)=0,@%@(2)=$$NOW^XLFDT,@%@(3)=XPDST,@%@(4)=XPDIT,@%@(5)="",@%@(6)=XPDST("H1")
"RTN","XPDIL1",65,0)
 D FILE^DIE("","XPDIE")
"RTN","XPDIL1",66,0)
 Q XPDA
"RTN","XPDIL1",67,0)
 ;
"RTN","XPDIL1",68,0)
 ;XPDQUIT quit current package install, 1=kill global, 2=leave global
"RTN","XPDIL1",69,0)
 ;XPDQUIT(package) quit package install, 1=kill, 2=leave
"RTN","XPDIL1",70,0)
 ;XPDABORT quit the entire distribution, 1=kill, 2=leave
"RTN","XPDIL1",71,0)
 ;XPDENV 0=loading distribution, 1=installing
"RTN","XPDIL1",72,0)
ENV(XPDENV) ;enviroment check & version check
"RTN","XPDIL1",73,0)
 ;returns 0=ok, 1=rejected kill global, 2=rejected leave global
"RTN","XPDIL1",74,0)
 N %,DIR,XPDI,XPDQUIT,XPDABORT
"RTN","XPDIL1",75,0)
 ;check version number
"RTN","XPDIL1",76,0)
 I XPDPKG>0 D  I $G(XPDQUIT) D ABORT^XPDI(XPDA,1) Q 1
"RTN","XPDIL1",77,0)
 .N DIR,DIRUT,X,Y
"RTN","XPDIL1",78,0)
 .S %=+$$VER^XPDUTL(XPDNM),Y=+$G(^DIC(9.4,+XPDPKG,"VERSION")),X=XPDNM["*"
"RTN","XPDIL1",79,0)
 .;if patch, version must be the same
"RTN","XPDIL1",80,0)
 .I X,%'=Y W !,"This Patch is for Version ",%,", you are running Version ",Y,! S XPDQUIT=1
"RTN","XPDIL1",81,0)
 .;if package, version must be greater or equal
"RTN","XPDIL1",82,0)
 .I 'X,%<Y W !,"You have a Version greater than mine!",! S XPDQUIT=1
"RTN","XPDIL1",83,0)
 .Q:'$G(XPDQUIT)
"RTN","XPDIL1",84,0)
 .S DIR(0)="Y",DIR("A")="Want to continue with Install",DIR("B")="NO"
"RTN","XPDIL1",85,0)
 .D ^DIR I Y K XPDQUIT
"RTN","XPDIL1",86,0)
 .Q
"RTN","XPDIL1",87,0)
 S %=$$REQB I % S (XPDABORT,XPDREQAB)=% G ABORT
"RTN","XPDIL1",88,0)
 S %=$G(^XTMP("XPDI",XPDA,"PRE")) D:%]""
"RTN","XPDIL1",89,0)
 .W !,"Will first run the Environment Check Routine, ",%,!
"RTN","XPDIL1",90,0)
 .D SAVE^XPDIJ(%),@("^"_%)
"RTN","XPDIL1",91,0)
ABORT I $G(XPDABORT) D  Q XPDABORT
"RTN","XPDIL1",92,0)
 .;if during load & leave global quit
"RTN","XPDIL1",93,0)
 .I 'XPDENV,XPDABORT=2 Q
"RTN","XPDIL1",94,0)
 .D ABRTALL^XPDI(XPDABORT)
"RTN","XPDIL1",95,0)
 Q:'$D(XPDQUIT) 0
"RTN","XPDIL1",96,0)
 I $G(XPDQUIT) D ABORT^XPDI(XPDA,XPDQUIT)
"RTN","XPDIL1",97,0)
 S XPDI=""
"RTN","XPDIL1",98,0)
 ;don't do if loading & leave global, need to keep XPDT(array)
"RTN","XPDIL1",99,0)
 F  S XPDI=$O(XPDQUIT(XPDI)) Q:XPDI=""  D:'(XPDQUIT(XPDI)=2&'XPDENV)
"RTN","XPDIL1",100,0)
 .S %=$G(XPDT("NM",XPDI)) D:% ABORT^XPDI(+XPDT(%),XPDQUIT(XPDI))
"RTN","XPDIL1",101,0)
 S XPDQUIT=$S($G(XPDQUIT):XPDQUIT,'$O(XPDT(0))!'$D(^XTMP("XPDI",XPDA)):1,1:0)
"RTN","XPDIL1",102,0)
 Q XPDQUIT
"RTN","XPDIL1",103,0)
 ;
"RTN","XPDIL1",104,0)
REQB() ;check for Required Builds
"RTN","XPDIL1",105,0)
 ;returns 0=ok, 1=failed kill global, 2=failed leave global
"RTN","XPDIL1",106,0)
 N XPDACT,XPDBLD,XPDI,XPDQ,XPDQUIT,XPDX,XPDX0,X,Y
"RTN","XPDIL1",107,0)
 S XPDBLD=$O(^XTMP("XPDI",XPDA,"BLD",0)),XPDQUIT=0,XPDI=0
"RTN","XPDIL1",108,0)
 Q:'$D(^XTMP("XPDI",XPDA,"BLD",XPDBLD,"REQB")) 0
"RTN","XPDIL1",109,0)
 F  S XPDI=$O(^XTMP("XPDI",XPDA,"BLD",XPDBLD,"REQB",XPDI)) Q:'XPDI  S XPDX0=^(XPDI,0) D
"RTN","XPDIL1",110,0)
 .S XPDQ=0,XPDX=$P(XPDX0,U),XPDACT=$P(XPDX0,U,2),X=$$PKG^XPDUTL(XPDX),Y=$$VER^XPDUTL(XPDX),Z=$$VERSION^XPDUTL(X)
"RTN","XPDIL1",111,0)
 .;quit if current version is greater than what we are checking for
"RTN","XPDIL1",112,0)
 .Q:Z>Y
"RTN","XPDIL1",113,0)
 .I XPDX'["*" S:Z<Y XPDQ=2
"RTN","XPDIL1",114,0)
 .E  S:'$$PATCH^XPDUTL(XPDX) XPDQ=1
"RTN","XPDIL1",115,0)
 .;quit if patch is already on system
"RTN","XPDIL1",116,0)
 .Q:'XPDQ
"RTN","XPDIL1",117,0)
 .;quit if patch is sequenced prior within this build 
"RTN","XPDIL1",118,0)
 .I $D(XPDT("NM",XPDX)),(XPDT("NM",XPDX)<XPDT("NM",XPDNM)) S XPDQ=0 Q
"RTN","XPDIL1",119,0)
 .S XPDQUIT=$S(XPDACT>XPDQUIT:XPDACT,1:XPDQUIT)
"RTN","XPDIL1",120,0)
 .;XPDACT=0 warning, =1 abort & kill global, =2 abort
"RTN","XPDIL1",121,0)
 .W !!,$S(XPDACT:"**INSTALL ABORTED**",1:"**WARNING**")_$S(XPDQ=1:" Patch ",1:" Package ")_XPDX_" is Required "_$S(XPDACT:"to install",1:"for")_" this package!!",!
"RTN","XPDIL1",122,0)
 Q:'XPDQUIT 0
"RTN","XPDIL1",123,0)
 ;don't do if leave global and loading
"RTN","XPDIL1",124,0)
 D:'(XPDQUIT=2&'XPDENV) ABORT^XPDI(XPDA,XPDQUIT)
"RTN","XPDIL1",125,0)
 Q XPDQUIT
"RTN","XPDIL1",126,0)
 ;
"RTN","XPDIL1",127,0)
 ;return a routine that can be run
"RTN","XPDIL1",128,0)
INRTN(X) N Y
"RTN","XPDIL1",129,0)
 S Y=$G(^XTMP("XPDI",XPDA,X)) Q:Y="" ""
"RTN","XPDIL1",130,0)
 S Y=$S(Y["^":Y,1:"^"_Y)
"RTN","XPDIL1",131,0)
 Q Y
"VER")
8.0^21.0
**END**
**END**
