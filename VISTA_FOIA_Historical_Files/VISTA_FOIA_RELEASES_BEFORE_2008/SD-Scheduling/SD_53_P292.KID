KIDS Distribution saved on Oct 01, 2003@14:57:49
SD*5.3*292 & TIU*1*168 Combined Build
**KIDS**:SD*5.3*292^TIU*1.0*168^

**INSTALL NAME**
SD*5.3*292
"BLD",4200,0)
SD*5.3*292^SCHEDULING^0^3031001^y
"BLD",4200,1,0)
^^14^14^3031001^
"BLD",4200,1,1,0)
 
"BLD",4200,1,2,0)
Patches SD*5.3*292 and TIU*1.0*168 combined build.
"BLD",4200,1,3,0)
 
"BLD",4200,1,4,0)
OQP is interested in gathering data for a performance indicators involving
"BLD",4200,1,5,0)
Scheduling and TIU. 
"BLD",4200,1,6,0)
 
"BLD",4200,1,7,0)
This patch addresses the indicator; it measures the percentages of 
"BLD",4200,1,8,0)
outpatient encounters in ambulatory care with a completed or amended 
"BLD",4200,1,9,0)
electronic progress notes signed by the primary care provider for that 
"BLD",4200,1,10,0)
encounter. The report identifies the encounter, finds any progress note 
"BLD",4200,1,11,0)
associated with the encounter, it looks at the progress note and reports 
"BLD",4200,1,12,0)
the date the PN was signed by the provider. It then looks at the results 
"BLD",4200,1,13,0)
and reports the encounter as compliant or non compliant based on 
"BLD",4200,1,14,0)
nationally or locally defined criteria.
"BLD",4200,4,0)
^9.64PA^409.92^1
"BLD",4200,4,409.92,0)
409.92
"BLD",4200,4,409.92,222)
n^n^f^^y^^y^r^n
"BLD",4200,4,409.92,224)
I ",1301,1302,1303,"[(","_$P(^(0),U,1)_",")
"BLD",4200,4,"B",409.92,409.92)

"BLD",4200,"ABNS",0)
^9.66A^^
"BLD",4200,"ABPKG")
n^n
"BLD",4200,"KRN",0)
^9.67PA^8989.52^19
"BLD",4200,"KRN",.4,0)
.4
"BLD",4200,"KRN",.4,"NM",0)
^9.68A^^
"BLD",4200,"KRN",.401,0)
.401
"BLD",4200,"KRN",.402,0)
.402
"BLD",4200,"KRN",.403,0)
.403
"BLD",4200,"KRN",.5,0)
.5
"BLD",4200,"KRN",.5,"NM",0)
^9.68A^^
"BLD",4200,"KRN",.84,0)
.84
"BLD",4200,"KRN",3.6,0)
3.6
"BLD",4200,"KRN",3.6,"NM",0)
^9.68A^^
"BLD",4200,"KRN",3.8,0)
3.8
"BLD",4200,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",4200,"KRN",9.2,0)
9.2
"BLD",4200,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",4200,"KRN",9.8,0)
9.8
"BLD",4200,"KRN",9.8,"NM",0)
^9.68A^9^7
"BLD",4200,"KRN",9.8,"NM",1,0)
SCRPW301^^0^B56379203
"BLD",4200,"KRN",9.8,"NM",2,0)
SCRPW302^^0^B7523042
"BLD",4200,"KRN",9.8,"NM",3,0)
SCRPW303^^0^B28103014
"BLD",4200,"KRN",9.8,"NM",4,0)
SCRPW304^^0^B25059982
"BLD",4200,"KRN",9.8,"NM",5,0)
SCRPW306^^0^B1921913
"BLD",4200,"KRN",9.8,"NM",8,0)
SDPMUT1^^0^B47818224
"BLD",4200,"KRN",9.8,"NM",9,0)
SDPMUT2^^0^B4203562
"BLD",4200,"KRN",9.8,"NM","B","SCRPW301",1)

"BLD",4200,"KRN",9.8,"NM","B","SCRPW302",2)

"BLD",4200,"KRN",9.8,"NM","B","SCRPW303",3)

"BLD",4200,"KRN",9.8,"NM","B","SCRPW304",4)

"BLD",4200,"KRN",9.8,"NM","B","SCRPW306",5)

"BLD",4200,"KRN",9.8,"NM","B","SDPMUT1",8)

"BLD",4200,"KRN",9.8,"NM","B","SDPMUT2",9)

"BLD",4200,"KRN",19,0)
19
"BLD",4200,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",4200,"KRN",19,"NM",1,0)
SCRPW ACRP REPORTS MENU^^2
"BLD",4200,"KRN",19,"NM",2,0)
SCRPW PERFORMANCE MONITOR MENU^^0
"BLD",4200,"KRN",19,"NM",3,0)
SCRPW PM DETAILED REPORT^^0
"BLD",4200,"KRN",19,"NM",4,0)
SCRPW PM SUMMARY REPORT^^0
"BLD",4200,"KRN",19,"NM","B","SCRPW ACRP REPORTS MENU",1)

"BLD",4200,"KRN",19,"NM","B","SCRPW PERFORMANCE MONITOR MENU",2)

"BLD",4200,"KRN",19,"NM","B","SCRPW PM DETAILED REPORT",3)

"BLD",4200,"KRN",19,"NM","B","SCRPW PM SUMMARY REPORT",4)

"BLD",4200,"KRN",19.1,0)
19.1
"BLD",4200,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",4200,"KRN",101,0)
101
"BLD",4200,"KRN",101,"NM",0)
^9.68A^^0
"BLD",4200,"KRN",409.61,0)
409.61
"BLD",4200,"KRN",771,0)
771
"BLD",4200,"KRN",771,"NM",0)
^9.68A^^0
"BLD",4200,"KRN",870,0)
870
"BLD",4200,"KRN",870,"NM",0)
^9.68A^^0
"BLD",4200,"KRN",8989.51,0)
8989.51
"BLD",4200,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",4200,"KRN",8989.52,0)
8989.52
"BLD",4200,"KRN",8994,0)
8994
"BLD",4200,"KRN","B",.4,.4)

"BLD",4200,"KRN","B",.401,.401)

"BLD",4200,"KRN","B",.402,.402)

"BLD",4200,"KRN","B",.403,.403)

"BLD",4200,"KRN","B",.5,.5)

"BLD",4200,"KRN","B",.84,.84)

"BLD",4200,"KRN","B",3.6,3.6)

"BLD",4200,"KRN","B",3.8,3.8)

"BLD",4200,"KRN","B",9.2,9.2)

"BLD",4200,"KRN","B",9.8,9.8)

"BLD",4200,"KRN","B",19,19)

"BLD",4200,"KRN","B",19.1,19.1)

"BLD",4200,"KRN","B",101,101)

"BLD",4200,"KRN","B",409.61,409.61)

"BLD",4200,"KRN","B",771,771)

"BLD",4200,"KRN","B",870,870)

"BLD",4200,"KRN","B",8989.51,8989.51)

"BLD",4200,"KRN","B",8989.52,8989.52)

"BLD",4200,"KRN","B",8994,8994)

"BLD",4200,"QUES",0)
^9.62^^
"BLD",4200,"REQB",0)
^9.611^^
"DATA",409.92,80,0)
1301^PM^PERF MONITOR^PR^ACCEPTABLE PROVIDER^P^^^LR^100^^^^^1^0
"DATA",409.92,80,1)
PMPR
"DATA",409.92,80,7)
 ^VA(200,
"DATA",409.92,80,11)
D PMPR^SCRPW306(.SDX)
"DATA",409.92,81,0)
1302^PM^PERF MONITOR^DT^DATE SIGNED^D^^^R^100^^^^^1^0
"DATA",409.92,81,1)
PMDT
"DATA",409.92,81,11)
D PMDT^SCRPW306(.SDX)
"DATA",409.92,82,0)
1303^PM^PERF MONITOR^ET^ELAPSED TIME^N^^^LR^100^^^^^1^0
"DATA",409.92,82,1)
PMET
"DATA",409.92,82,8)
NO^0::0
"DATA",409.92,82,11)
D PMET^SCRPW306(.SDX)
"FIA",409.92)
ACRP REPORT TEMPLATE PARAMETER
"FIA",409.92,0)
^SD(409.92,
"FIA",409.92,0,0)
409.92I
"FIA",409.92,0,1)
n^n^f^^y^^y^r^n
"FIA",409.92,0,10)

"FIA",409.92,0,11)
I ",1301,1302,1303,"[(","_$P(^(0),U,1)_",")
"FIA",409.92,0,"RLRO")

"FIA",409.92,0,"VR")
5.3^SD
"FIA",409.92,409.92)
0
"KRN",19,6310,-1)
2^1
"KRN",19,6310,0)
SCRPW ACRP REPORTS MENU^ACRP Reports Menu^^M^66476^^^^^^^16
"KRN",19,6310,10,0)
^19.01IP^23^23
"KRN",19,6310,10,23,0)
10898^PMI
"KRN",19,6310,10,23,"^")
SCRPW PERFORMANCE MONITOR MENU
"KRN",19,6310,"U")
ACRP REPORTS MENU
"KRN",19,10898,-1)
0^2
"KRN",19,10898,0)
SCRPW PERFORMANCE MONITOR MENU^Performance Monitor Menu^^M^^^^^^^^SCHEDULING
"KRN",19,10898,1,0)
^^3^3^3030801^
"KRN",19,10898,1,1,0)
Menu options used for reporting Performance Indicator information
"KRN",19,10898,1,2,0)
involving outpatient encounters, their associated progress notes and the
"KRN",19,10898,1,3,0)
time it takes the care providers to sign their progress notes.
"KRN",19,10898,10,0)
^19.01IP^2^2
"KRN",19,10898,10,1,0)
10899^PMS^1
"KRN",19,10898,10,1,"^")
SCRPW PM SUMMARY REPORT
"KRN",19,10898,10,2,0)
10900^PMD^2
"KRN",19,10898,10,2,"^")
SCRPW PM DETAILED REPORT
"KRN",19,10898,99)
59437,39756
"KRN",19,10898,"U")
PERFORMANCE MONITOR MENU
"KRN",19,10899,-1)
0^4
"KRN",19,10899,0)
SCRPW PM SUMMARY REPORT^Performance Monitor Summary Report^^R^^^^^^^^
"KRN",19,10899,1,0)
^19.06^5^5^3030724^^
"KRN",19,10899,1,1,0)
This option generates a summary of all Outpatient Encounters within a 
"KRN",19,10899,1,2,0)
user selected time frame. It uses nationally defined screening criteria 
"KRN",19,10899,1,3,0)
to identify encounters requiring progress notes, it then uses a TIU call 
"KRN",19,10899,1,4,0)
to retrieve progress note information. The information is then used to 
"KRN",19,10899,1,5,0)
report the number of encounters, the number of compliant notes etc. etc.
"KRN",19,10899,25)
EN^SCRPW304
"KRN",19,10899,"U")
PERFORMANCE MONITOR SUMMARY RE
"KRN",19,10900,-1)
0^3
"KRN",19,10900,0)
SCRPW PM DETAILED REPORT^Performance Monitor Detailed Report^^R^^^^^^^^
"KRN",19,10900,1,0)
^^5^5^3030724^
"KRN",19,10900,1,1,0)
This option generates a detailed report on information pertaining to 
"KRN",19,10900,1,2,0)
Outpatient Encounters and progress notes associated with them. It 
"KRN",19,10900,1,3,0)
identifies the encounter, the provider, was a note done on an encounter 
"KRN",19,10900,1,4,0)
and was the note signed within a given time frame. The option allows 
"KRN",19,10900,1,5,0)
users to screen and sort by different criteria.
"KRN",19,10900,25)
EN^SCRPW301
"KRN",19,10900,"U")
PERFORMANCE MONITOR DETAILED R
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2941102
"PKG",16,22,1,"PAH",1,0)
292^3031001^3507
"PKG",16,22,1,"PAH",1,1,0)
^^14^14^3031001
"PKG",16,22,1,"PAH",1,1,1,0)
 
"PKG",16,22,1,"PAH",1,1,2,0)
Patches SD*5.3*292 and TIU*1.0*168 combined build.
"PKG",16,22,1,"PAH",1,1,3,0)
 
"PKG",16,22,1,"PAH",1,1,4,0)
OQP is interested in gathering data for a performance indicators involving
"PKG",16,22,1,"PAH",1,1,5,0)
Scheduling and TIU. 
"PKG",16,22,1,"PAH",1,1,6,0)
 
"PKG",16,22,1,"PAH",1,1,7,0)
This patch addresses the indicator; it measures the percentages of 
"PKG",16,22,1,"PAH",1,1,8,0)
outpatient encounters in ambulatory care with a completed or amended 
"PKG",16,22,1,"PAH",1,1,9,0)
electronic progress notes signed by the primary care provider for that 
"PKG",16,22,1,"PAH",1,1,10,0)
encounter. The report identifies the encounter, finds any progress note 
"PKG",16,22,1,"PAH",1,1,11,0)
associated with the encounter, it looks at the progress note and reports 
"PKG",16,22,1,"PAH",1,1,12,0)
the date the PN was signed by the provider. It then looks at the results 
"PKG",16,22,1,"PAH",1,1,13,0)
and reports the encounter as compliant or non compliant based on 
"PKG",16,22,1,"PAH",1,1,14,0)
nationally or locally defined criteria.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","SCRPW301")
0^1^B56379203
"RTN","SCRPW301",1,0)
SCRPW301 ; BPFO/JRC - Performance Monitor Detailed Report ; 9/25/03 3:45pm
"RTN","SCRPW301",2,0)
 ;;5.3;SCHEDULING;**292**;AUG 13, 1993
"RTN","SCRPW301",3,0)
 ;
"RTN","SCRPW301",4,0)
EN ;Main entry point for generation of local detailed report
"RTN","SCRPW301",5,0)
 ;Declare variable(s) and arrays
"RTN","SCRPW301",6,0)
 N SCRNARR,SORTARR
"RTN","SCRPW301",7,0)
 S SCRNARR="^TMP(""SCRPW"",$J,""SCRNARR"")"
"RTN","SCRPW301",8,0)
 S SORTARR="^TMP(""SCRPW"",$J,""SORTARR"")"
"RTN","SCRPW301",9,0)
 K @SCRNARR,@SORTARR
"RTN","SCRPW301",10,0)
 ;Get time limit
"RTN","SCRPW301",11,0)
 I '$$TLMT^SCRPW302(SCRNARR) D EX1 Q
"RTN","SCRPW301",12,0)
 ;Get date frame
"RTN","SCRPW301",13,0)
 I '$$DATE^SCRPW302("","",SCRNARR) D EX1 Q
"RTN","SCRPW301",14,0)
 ;Get division (one/many/all)
"RTN","SCRPW301",15,0)
 I '$$DIV^SCRPW302(SCRNARR) D EX1 Q
"RTN","SCRPW301",16,0)
 ;Get provider (one/many/all)
"RTN","SCRPW301",17,0)
 I '$$PROV^SCRPW302(SCRNARR) D EX1 Q
"RTN","SCRPW301",18,0)
 ;Get stop code (one/man/all)
"RTN","SCRPW301",19,0)
 I '$$DSS^SCRPW303(SCRNARR) D EX1 Q
"RTN","SCRPW301",20,0)
 ;Include scanned notes
"RTN","SCRPW301",21,0)
 I '$$SCAN^SCRPW302(SCRNARR) D EX1 Q
"RTN","SCRPW301",22,0)
 ;Get primary & secondary sort
"RTN","SCRPW301",23,0)
 I '$$SORT^SCRPW303(SORTARR) D EX1 Q
"RTN","SCRPW301",24,0)
 ;Queue report
"RTN","SCRPW301",25,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!!
"RTN","SCRPW301",26,0)
 N ZTDESC,ZTIO,ZTSAVE,TMP
"RTN","SCRPW301",27,0)
 S ZTIO=""
"RTN","SCRPW301",28,0)
 S ZTDESC="Performance Monitor Detailed Report"
"RTN","SCRPW301",29,0)
 S ZTSAVE("SCRNARR")=""
"RTN","SCRPW301",30,0)
 S TMP=$$OREF^DILF(SCRNARR)
"RTN","SCRPW301",31,0)
 S ZTSAVE(TMP)=""
"RTN","SCRPW301",32,0)
 I $D(@SCRNARR)#2 S ZTSAVE(SCRNARR)=""
"RTN","SCRPW301",33,0)
 S ZTSAVE("SORTARR")=""
"RTN","SCRPW301",34,0)
 S TMP=$$OREF^DILF(SORTARR)
"RTN","SCRPW301",35,0)
 S ZTSAVE(TMP)=""
"RTN","SCRPW301",36,0)
 I $D(@SORTARR)#2 S ZTSAVE(SORTARR)=""
"RTN","SCRPW301",37,0)
 D EN^XUTMDEVQ("EN1^SCRPW301",ZTDESC,.ZTSAVE)
"RTN","SCRPW301",38,0)
 D EX1
"RTN","SCRPW301",39,0)
 Q
"RTN","SCRPW301",40,0)
 ;
"RTN","SCRPW301",41,0)
EN1 ;Tasked entry point
"RTN","SCRPW301",42,0)
 ;Input  : SCRNARR - Screen array
"RTN","SCRPW301",43,0)
 ;         SORTARR - Sort array
"RTN","SCRPW301",44,0)
 ;Output : None
"RTN","SCRPW301",45,0)
 ;
"RTN","SCRPW301",46,0)
 ;Declare variables
"RTN","SCRPW301",47,0)
 N OUTARR,PAGENUM,ENODE,DFN,TMP
"RTN","SCRPW301",48,0)
 N SUB1,SUB2,PTRENC,DIV,PROV,TNODE,STOP
"RTN","SCRPW301",49,0)
 S OUTARR="^TMP(""SCRPW"",$J,""OUTARR"")"
"RTN","SCRPW301",50,0)
 S STOP=0
"RTN","SCRPW301",51,0)
 K @OUTARR
"RTN","SCRPW301",52,0)
 ;Get data
"RTN","SCRPW301",53,0)
 D GETDATA^SDPMUT1(SCRNARR,SORTARR,OUTARR)
"RTN","SCRPW301",54,0)
 ;Print summary page
"RTN","SCRPW301",55,0)
 S PAGENUM=1
"RTN","SCRPW301",56,0)
 D SUMMARY,WAIT I STOP D EXIT Q
"RTN","SCRPW301",57,0)
 ;Print detailed report
"RTN","SCRPW301",58,0)
 I '$D(@OUTARR) D EXIT Q
"RTN","SCRPW301",59,0)
 ;Loop through data
"RTN","SCRPW301",60,0)
 S STOP=0
"RTN","SCRPW301",61,0)
 S SUB1="" F  S SUB1=$O(@OUTARR@("DETAIL",SUB1)) Q:SUB1=""  D  Q:STOP
"RTN","SCRPW301",62,0)
 .D PRTHEAD
"RTN","SCRPW301",63,0)
 .S SUB2="" F  S SUB2=$O(@OUTARR@("DETAIL",SUB1,SUB2)) Q:SUB2=""  D  Q:STOP
"RTN","SCRPW301",64,0)
 ..S DFN=0 F  S DFN=+$O(@OUTARR@("DETAIL",SUB1,SUB2,DFN)) Q:'DFN  D  Q:STOP
"RTN","SCRPW301",65,0)
 ...S PTRENC=0 F  S PTRENC=+$O(@OUTARR@("DETAIL",SUB1,SUB2,DFN,PTRENC)) Q:'PTRENC  D  Q:STOP
"RTN","SCRPW301",66,0)
 ....S INFO=$G(@OUTARR@("DETAIL",SUB1,SUB2,DFN,PTRENC))
"RTN","SCRPW301",67,0)
 ....D PRTDTL
"RTN","SCRPW301",68,0)
 ....I $Y>(IOSL-5) D WAIT Q:STOP  D PRTHEAD
"RTN","SCRPW301",69,0)
 ....Q
"RTN","SCRPW301",70,0)
 ...Q
"RTN","SCRPW301",71,0)
 ..Q
"RTN","SCRPW301",72,0)
 .Q:STOP
"RTN","SCRPW301",73,0)
 .D SUB1SUM,WAIT
"RTN","SCRPW301",74,0)
 .Q
"RTN","SCRPW301",75,0)
 ;Clean up and quit
"RTN","SCRPW301",76,0)
 D EXIT
"RTN","SCRPW301",77,0)
 Q
"RTN","SCRPW301",78,0)
 ;
"RTN","SCRPW301",79,0)
SUMMARY ;Summary Page
"RTN","SCRPW301",80,0)
 ;Input  : SCRNARR - Screen array
"RTN","SCRPW301",81,0)
 ;         OUTARR - Data array
"RTN","SCRPW301",82,0)
 ;         PAGENUM - Page number
"RTN","SCRPW301",83,0)
 ;Output : None
"RTN","SCRPW301",84,0)
 ;         PAGENUM is incremented by 1
"RTN","SCRPW301",85,0)
 ;
"RTN","SCRPW301",86,0)
 N DIV,PROV,DSS,INFO,PS
"RTN","SCRPW301",87,0)
 I $E(IOST)="C" W @IOF
"RTN","SCRPW301",88,0)
 W !,"Performance Monitor Detailed Report",?120,"Page: ",PAGENUM
"RTN","SCRPW301",89,0)
 W !!,"Run Date: ",$$HTE^XLFDT($H)
"RTN","SCRPW301",90,0)
 W !!,"Encounter Date Range: ",?15,$$FMTE^XLFDT($P(@SCRNARR@("RANGE"),U,1))
"RTN","SCRPW301",91,0)
 W " to ",$$FMTE^XLFDT($P(@SCRNARR@("RANGE"),U,2))
"RTN","SCRPW301",92,0)
 W !!,"Time limit for acceptable signatures: ",@SCRNARR@("TLMT")
"RTN","SCRPW301",93,0)
 W !!,"Division(s): "
"RTN","SCRPW301",94,0)
 I @SCRNARR@("DIVISION")=0 D
"RTN","SCRPW301",95,0)
 .S PS=0
"RTN","SCRPW301",96,0)
 .S DIV=0 F  S DIV=$O(@SCRNARR@("DIVISION",DIV)) Q:'DIV  D
"RTN","SCRPW301",97,0)
 ..S INFO=@SCRNARR@("DIVISION",DIV)
"RTN","SCRPW301",98,0)
 ..I ($L(INFO)+$X+3)>(IOM-1) W !,?13,"/ " S PS=0
"RTN","SCRPW301",99,0)
 ..I PS W " / "
"RTN","SCRPW301",100,0)
 ..W INFO
"RTN","SCRPW301",101,0)
 ..S PS=1
"RTN","SCRPW301",102,0)
 .Q
"RTN","SCRPW301",103,0)
 I @SCRNARR@("DIVISION")=1 W "All"
"RTN","SCRPW301",104,0)
 W !!,"Provider(s): "
"RTN","SCRPW301",105,0)
 I @SCRNARR@("PROVIDERS")=0 D
"RTN","SCRPW301",106,0)
 .S PS=0
"RTN","SCRPW301",107,0)
 .S PROV=0 F  S PROV=$O(@SCRNARR@("PROVIDERS",PROV)) Q:'PROV  D
"RTN","SCRPW301",108,0)
 ..S INFO=@SCRNARR@("PROVIDERS",PROV)
"RTN","SCRPW301",109,0)
 ..I ($L(INFO)+$X+3)>(IOM-1) W !,?13,"/ " S PS=0
"RTN","SCRPW301",110,0)
 ..I PS W " / "
"RTN","SCRPW301",111,0)
 ..W INFO
"RTN","SCRPW301",112,0)
 ..S PS=1
"RTN","SCRPW301",113,0)
 .Q
"RTN","SCRPW301",114,0)
 I @SCRNARR@("PROVIDERS")=1 W "All"
"RTN","SCRPW301",115,0)
 W !!,"DSS ID(s)  : "
"RTN","SCRPW301",116,0)
 I @SCRNARR@("DSS")=0 D
"RTN","SCRPW301",117,0)
 .I @SCRNARR@("DSS-NTNL") W "All stop codes & credit pairs in national cohort" Q
"RTN","SCRPW301",118,0)
 .S PS=0
"RTN","SCRPW301",119,0)
 .S DSS=0 F  S DSS=$O(@SCRNARR@("DSS",DSS)) Q:'DSS  D
"RTN","SCRPW301",120,0)
 ..S INFO=@SCRNARR@("DSS",DSS)
"RTN","SCRPW301",121,0)
 ..I ($L(INFO)+$X+3)>(IOM-1) W !,?13,"/ " S PS=0
"RTN","SCRPW301",122,0)
 ..I PS W " / "
"RTN","SCRPW301",123,0)
 ..W INFO
"RTN","SCRPW301",124,0)
 ..S PS=1
"RTN","SCRPW301",125,0)
 I @SCRNARR@("DSS")=1 W "All"
"RTN","SCRPW301",126,0)
 W !!,"Count encounters with scanned notes: ",$S(@SCRNARR@("SCANNED"):"YES",1:"NO")
"RTN","SCRPW301",127,0)
 I '$D(@OUTARR) D  Q
"RTN","SCRPW301",128,0)
 .W !
"RTN","SCRPW301",129,0)
 .W !,"*********************************************"
"RTN","SCRPW301",130,0)
 .W !,"*  NOTHING TO REPORT FOR SELECTED CRITERIA  *"
"RTN","SCRPW301",131,0)
 .W !,"*********************************************"
"RTN","SCRPW301",132,0)
 S INFO=$$SITE^VASITE()
"RTN","SCRPW301",133,0)
 W !!,"Total for facility ",$P(INFO,"^",2)," (",$P(INFO,"^",3),")"
"RTN","SCRPW301",134,0)
 I $$S^%ZTLOAD() W !! Q
"RTN","SCRPW301",135,0)
 S INFO=$G(@OUTARR@("SUMMARY"))
"RTN","SCRPW301",136,0)
 D PRTSUMS
"RTN","SCRPW301",137,0)
 Q
"RTN","SCRPW301",138,0)
 ;
"RTN","SCRPW301",139,0)
PRTSUMS ;Print summaries
"RTN","SCRPW301",140,0)
 ;Input  : INFO - Summary information to print
"RTN","SCRPW301",141,0)
 ;         SCRNARR - Screen array
"RTN","SCRPW301",142,0)
 ;Output : None
"RTN","SCRPW301",143,0)
 ;
"RTN","SCRPW301",144,0)
 N VAL
"RTN","SCRPW301",145,0)
 W !,"Encounters (denominator): ",+$P(INFO,U,1)
"RTN","SCRPW301",146,0)
 W ?34,"Compliant Notes (numerator): ",+$P(INFO,U,2)
"RTN","SCRPW301",147,0)
 W ?69,"Compliance Rate: "
"RTN","SCRPW301",148,0)
 S VAL=0 I +$P(INFO,U,1) S VAL=100*($P(INFO,U,2)/$P(INFO,U,1))
"RTN","SCRPW301",149,0)
 W $TR($J(VAL,3,0)," ")_" %"
"RTN","SCRPW301",150,0)
 W !,?5,"Encounter Providers: ",+$P(INFO,U,4)
"RTN","SCRPW301",151,0)
 W ?34,"DSS IDs: ",+$P(INFO,U,5),?53,"Ave Time: "
"RTN","SCRPW301",152,0)
 S VAL=0 I +$P(INFO,U,8) S VAL=$P(INFO,U,6)/$P(INFO,U,8)
"RTN","SCRPW301",153,0)
 W $TR($J(VAL,3,0)," ")
"RTN","SCRPW301",154,0)
 I $G(@SCRNARR@("SCANNED")) W ?71,"Scanned Notes: ",+$P(INFO,U,7)
"RTN","SCRPW301",155,0)
 Q
"RTN","SCRPW301",156,0)
 ;
"RTN","SCRPW301",157,0)
WAIT ;End of page logic
"RTN","SCRPW301",158,0)
 ;Input  : None
"RTN","SCRPW301",159,0)
 ;Output : STOP - Flag indicating if printing should continue
"RTN","SCRPW301",160,0)
 ;                1 = Stop     0 = Continue
"RTN","SCRPW301",161,0)
 ;
"RTN","SCRPW301",162,0)
 S STOP=0
"RTN","SCRPW301",163,0)
 ;CRT - Prompt for continue
"RTN","SCRPW301",164,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","SCRPW301",165,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","SCRPW301",166,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","SCRPW301",167,0)
 .S DIR(0)="E"
"RTN","SCRPW301",168,0)
 .D ^DIR
"RTN","SCRPW301",169,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","SCRPW301",170,0)
 ;Background task - check TaskMan
"RTN","SCRPW301",171,0)
 S STOP=$$S^%ZTLOAD()
"RTN","SCRPW301",172,0)
 I STOP D
"RTN","SCRPW301",173,0)
 .W !,"*********************************************"
"RTN","SCRPW301",174,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","SCRPW301",175,0)
 .W !,"*********************************************"
"RTN","SCRPW301",176,0)
 Q
"RTN","SCRPW301",177,0)
 ;
"RTN","SCRPW301",178,0)
PRTHEAD ;Report Heading
"RTN","SCRPW301",179,0)
 ;Input  : SORTARR - Sort array
"RTN","SCRPW301",180,0)
 ;         PAGENUM - Page number
"RTN","SCRPW301",181,0)
 ;         SUB1 - Primary sort value
"RTN","SCRPW301",182,0)
 ;Output : None
"RTN","SCRPW301",183,0)
 ;         PAGENUM is incremented by 1
"RTN","SCRPW301",184,0)
 ;
"RTN","SCRPW301",185,0)
 N SORT,SORTTEXT,DASH,TYPE
"RTN","SCRPW301",186,0)
 S SORT=$G(@SORTARR)
"RTN","SCRPW301",187,0)
 S SORTTEXT=$G(@SORTARR@("TEXT"))
"RTN","SCRPW301",188,0)
 S PAGENUM=PAGENUM+1
"RTN","SCRPW301",189,0)
 S $P(DASH,"-",IOM)="-"
"RTN","SCRPW301",190,0)
 W @IOF
"RTN","SCRPW301",191,0)
 W !,"Performance indicator detailed report",?120,"Page: ",PAGENUM
"RTN","SCRPW301",192,0)
 W !!,"Report for ",$P(SORTTEXT,U,1)," "
"RTN","SCRPW301",193,0)
 S TYPE=$P(SORT,U,1) D
"RTN","SCRPW301",194,0)
 .I TYPE=1 W $P(SUB1,U,1)," (",$P(SUB1,U,2),")" Q
"RTN","SCRPW301",195,0)
 .I TYPE=5 W $$FMTE^XLFDT(SUB1,"D") Q
"RTN","SCRPW301",196,0)
 .W SUB1
"RTN","SCRPW301",197,0)
 W " sorted by ",$P(SORTTEXT,U,2)
"RTN","SCRPW301",198,0)
 W !!,"Encounter",?40,"Primary Encounter",?62,"DSS"
"RTN","SCRPW301",199,0)
 W ?89,"Acceptable Provider",?112,"Date",?122,"Time"
"RTN","SCRPW301",200,0)
 W !,"Date",?11,"Patient Name",?34,"SSN",?40,"Provider",?62,"ID"
"RTN","SCRPW301",201,0)
 W ?67,"Clinic Name",?89,"Signing Progress Note",?112,"Signed"
"RTN","SCRPW301",202,0)
 W ?122,"Span"
"RTN","SCRPW301",203,0)
 W !,$E(DASH,1,9),?11,$E(DASH,1,21),?34,$E(DASH,1,4),?40,$E(DASH,1,20)
"RTN","SCRPW301",204,0)
 W ?62,$E(DASH,1,3),?67,$E(DASH,1,20),?89,$E(DASH,1,21),?112,$E(DASH,1,8)
"RTN","SCRPW301",205,0)
 W ?122,$E(DASH,1,5)
"RTN","SCRPW301",206,0)
 Q
"RTN","SCRPW301",207,0)
 ;
"RTN","SCRPW301",208,0)
PRTDTL ;Print detail line
"RTN","SCRPW301",209,0)
 ;Input  : INFO - Detail information to print
"RTN","SCRPW301",210,0)
 ;         DFN - Pointer to Patient
"RTN","SCRPW301",211,0)
 ;         PTRENC - Pointer to Outpatient Encounter
"RTN","SCRPW301",212,0)
 ;Output : None
"RTN","SCRPW301",213,0)
 ;
"RTN","SCRPW301",214,0)
 N PROV,ENODE,VAL,VADM,VAERR,VA
"RTN","SCRPW301",215,0)
 D DEM^VADPT
"RTN","SCRPW301",216,0)
 S PROV=$$ENCPROV^SDPMUT2(PTRENC)
"RTN","SCRPW301",217,0)
 S ENODE=$G(^SCE(PTRENC,0))
"RTN","SCRPW301",218,0)
 S VAL=$$FMTE^XLFDT($P(ENODE,U,1),"2DF")
"RTN","SCRPW301",219,0)
 W !,$TR(VAL," ","0")
"RTN","SCRPW301",220,0)
 W ?11,$E(VADM(1),1,21)
"RTN","SCRPW301",221,0)
 W ?34,$E($P(VADM(2),U,1),6,10)
"RTN","SCRPW301",222,0)
 I PROV W ?40,$E($P($G(^VA(200,PROV,0)),U,1),1,20)
"RTN","SCRPW301",223,0)
 I 'PROV W ?40,"Provider Unknown"
"RTN","SCRPW301",224,0)
 S VAL=$P(ENODE,U,3)
"RTN","SCRPW301",225,0)
 S VAL=$P($G(^DIC(40.7,VAL,0)),U,2)
"RTN","SCRPW301",226,0)
 S:VAL="" VAL="???"
"RTN","SCRPW301",227,0)
 W ?62,VAL
"RTN","SCRPW301",228,0)
 S VAL=$P(ENODE,U,4)
"RTN","SCRPW301",229,0)
 S VAL=$P($G(^SC(VAL,0)),U,1)
"RTN","SCRPW301",230,0)
 S:VAL="" VAL="Clinic Unknown"
"RTN","SCRPW301",231,0)
 W ?67,$E(VAL,1,20)
"RTN","SCRPW301",232,0)
 S VAL=$P(INFO,U,1)
"RTN","SCRPW301",233,0)
 I VAL W ?89,$E($P($G(^VA(200,VAL,0)),U,1),1,21)
"RTN","SCRPW301",234,0)
 S VAL=$P(INFO,U,2)
"RTN","SCRPW301",235,0)
 I VAL S VAL=$$FMTE^XLFDT(VAL,"2DF") W ?112,$TR(VAL," ","0")
"RTN","SCRPW301",236,0)
 W ?122,$P(INFO,U,3)
"RTN","SCRPW301",237,0)
 Q
"RTN","SCRPW301",238,0)
 ;
"RTN","SCRPW301",239,0)
SUB1SUM ;Summary for primary sort
"RTN","SCRPW301",240,0)
 ;Input  : SORTARR - Sort array
"RTN","SCRPW301",241,0)
 ;         OUTARR - Data array
"RTN","SCRPW301",242,0)
 ;         SUB1 - Primary sort value (1st subscript in OUTARR)
"RTN","SCRPW301",243,0)
 ;Output : None
"RTN","SCRPW301",244,0)
 ;
"RTN","SCRPW301",245,0)
 N SORT,SORTTEXT,TYPE,INFO
"RTN","SCRPW301",246,0)
 I $Y>(IOSL+6) D WAIT Q:STOP  D PRTHEAD
"RTN","SCRPW301",247,0)
 S SORT=$G(@SORTARR)
"RTN","SCRPW301",248,0)
 S SORTTEXT=$G(@SORTARR@("TEXT"))
"RTN","SCRPW301",249,0)
 S INFO=$G(@OUTARR@("SUBTOTAL",SUB1))
"RTN","SCRPW301",250,0)
 W !!,"Total for ",$P(SORTTEXT,U,1)," "
"RTN","SCRPW301",251,0)
 S TYPE=$P(SORT,U,1) D
"RTN","SCRPW301",252,0)
 .I TYPE=1 W $P(SUB1,U,1)," (",$P(SUB1,U,2),")" Q
"RTN","SCRPW301",253,0)
 .I TYPE=5 W $$FMTE^XLFDT(SUB1,"D") Q
"RTN","SCRPW301",254,0)
 .W SUB1
"RTN","SCRPW301",255,0)
 D PRTSUMS
"RTN","SCRPW301",256,0)
 Q
"RTN","SCRPW301",257,0)
 ;
"RTN","SCRPW301",258,0)
EXIT ;Kill temporary arrays
"RTN","SCRPW301",259,0)
 K @OUTARR
"RTN","SCRPW301",260,0)
EX1 K @SCRNARR,@SORTARR
"RTN","SCRPW301",261,0)
 Q
"RTN","SCRPW302")
0^2^B7523042
"RTN","SCRPW302",1,0)
SCRPW302 ;BPFO/JRC - Performance Monitor Report Utils; 30 Jul 2003
"RTN","SCRPW302",2,0)
 ;;5.3;SCHEDULING;**292**;AUG 13, 2003
"RTN","SCRPW302",3,0)
 ;
"RTN","SCRPW302",4,0)
TLMT(SCRNARR) ; Set Time Limit into screen array
"RTN","SCRPW302",5,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","SCRPW302",6,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","SCRPW302",7,0)
 ;         @SCRNARR@("TLMT") = Time Limit (days)
"RTN","SCRPW302",8,0)
 ;Note   : @SCRNARR@("TLMT") is initialized (KILLed) on input
"RTN","SCRPW302",9,0)
 ;
"RTN","SCRPW302",10,0)
 ; Declare variables
"RTN","SCRPW302",11,0)
 N DIR,X,Y,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","SCRPW302",12,0)
 K @SCRNARR@("TLMT")
"RTN","SCRPW302",13,0)
 ; Prompt user for number of days
"RTN","SCRPW302",14,0)
 S DIR(0)="N^2:100:0"
"RTN","SCRPW302",15,0)
 S DIR("A")="Enter number of days for Elapsed Time: "
"RTN","SCRPW302",16,0)
 S DIR("B")=10
"RTN","SCRPW302",17,0)
 D ^DIR
"RTN","SCRPW302",18,0)
 I $D(DIRUT) Q 0
"RTN","SCRPW302",19,0)
 S @SCRNARR@("TLMT")=X
"RTN","SCRPW302",20,0)
 Q 1
"RTN","SCRPW302",21,0)
 ;
"RTN","SCRPW302",22,0)
DATE(MIN,MAX,SCRNARR) ; Set Date Range into screen array
"RTN","SCRPW302",23,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","SCRPW302",24,0)
 ;         MIN - Minimum date (FileMan) (default to MAX - time limit)
"RTN","SCRPW302",25,0)
 ;         MAX - Maximum date (FileMan) (default to T - time limit)
"RTN","SCRPW302",26,0)
 ;         @SCRNARR@("TLMT") - Time limit (optional - default to 10)
"RTN","SCRPW302",27,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","SCRPW302",28,0)
 ;         @SCRNARR@("RANGE") = StartDate^EndDate
"RTN","SCRPW302",29,0)
 ;Note   : @SCRNARR@("RANGE") is initialized (KILLed) on input
"RTN","SCRPW302",30,0)
 ;
"RTN","SCRPW302",31,0)
 ;Declare variables
"RTN","SCRPW302",32,0)
 N STDATE,ENDDATE,DATE,DIR,X,Y,TLMT,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","SCRPW302",33,0)
 K @SCRNARR@("RANGE")
"RTN","SCRPW302",34,0)
 S MIN=$P($G(MIN),".",1)
"RTN","SCRPW302",35,0)
 S MAX=$P($G(MAX),".",1)
"RTN","SCRPW302",36,0)
 ;Get time limit out of screen array (default to 10)
"RTN","SCRPW302",37,0)
 S TLMT=+$G(@SCRNARR@("TLMT")) S:'TLMT TLMT=10
"RTN","SCRPW302",38,0)
 ;Maximum date can't be more then Today minus time limit
"RTN","SCRPW302",39,0)
 S DATE=$$FMADD^XLFDT($$DT^XLFDT(),-TLMT)
"RTN","SCRPW302",40,0)
 I ('MAX)!(MAX>DATE) S MAX=DATE
"RTN","SCRPW302",41,0)
 ;Minimum date can't be after maximum date
"RTN","SCRPW302",42,0)
 I (MAX'>MIN) S MIN=$$FMADD^XLFDT(MAX,-TLMT)
"RTN","SCRPW302",43,0)
 ;Prompt user for start date
"RTN","SCRPW302",44,0)
 S DIR(0)="D^"_MIN_":"_MAX_":PEX"
"RTN","SCRPW302",45,0)
 S DIR("A")="Enter Report Start Date"
"RTN","SCRPW302",46,0)
 S DATE=$S('MIN:$$FMADD^XLFDT(MAX,-TLMT),1:MIN)
"RTN","SCRPW302",47,0)
 S DIR("B")=$$FMTE^XLFDT(DATE,"5D")
"RTN","SCRPW302",48,0)
 D ^DIR
"RTN","SCRPW302",49,0)
 I $D(DIRUT) Q 0
"RTN","SCRPW302",50,0)
 S STDATE=Y
"RTN","SCRPW302",51,0)
 ;Prompt user for end date
"RTN","SCRPW302",52,0)
 K DIR,X,Y
"RTN","SCRPW302",53,0)
 S MIN=STDATE
"RTN","SCRPW302",54,0)
 S DIR(0)="D^"_MIN_":"_MAX_":PEX"
"RTN","SCRPW302",55,0)
 S DIR("A")="Enter Report Stop Date"
"RTN","SCRPW302",56,0)
 S DIR("B")=$$FMTE^XLFDT($$FMADD^XLFDT(STDATE,TLMT),"5D")
"RTN","SCRPW302",57,0)
 D ^DIR
"RTN","SCRPW302",58,0)
 I $D(DIRUT) K @SCRNARR@("RANGE") Q 0
"RTN","SCRPW302",59,0)
 S ENDDATE=Y
"RTN","SCRPW302",60,0)
 S @SCRNARR@("RANGE")=STDATE_"^"_ENDDATE
"RTN","SCRPW302",61,0)
 Q 1
"RTN","SCRPW302",62,0)
DIV(SCRNARR) ; Set Divisions into screen array (prompt is one/many/all)
"RTN","SCRPW302",63,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","SCRPW302",64,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","SCRPW302",65,0)
 ;         @SCRNARR@("DIVISION") = User pick all divisions ?
"RTN","SCRPW302",66,0)
 ;           1 = Yes (all)     0 = No
"RTN","SCRPW302",67,0)
 ;         @SCRNARR@("DIVISION",PtrDiv) = Division name
"RTN","SCRPW302",68,0)
 ;Note   : @SCRNARR@("DIVISION") is initialized (KILLed) on input
"RTN","SCRPW302",69,0)
 ;       : @SCRNARR@("DIVISION",PtrDiv) is only set when the user
"RTN","SCRPW302",70,0)
 ;         picked individual divisions (i.e. didn't pick all)
"RTN","SCRPW302",71,0)
 ;
"RTN","SCRPW302",72,0)
 ;Declare variables
"RTN","SCRPW302",73,0)
 N VAUTD,Y
"RTN","SCRPW302",74,0)
 K @SCRNARR@("DIVISION")
"RTN","SCRPW302",75,0)
 ;Get division selection
"RTN","SCRPW302",76,0)
 D DIVISION^VAUTOMA
"RTN","SCRPW302",77,0)
 I Y<0 Q 0
"RTN","SCRPW302",78,0)
 M @SCRNARR@("DIVISION")=VAUTD
"RTN","SCRPW302",79,0)
 Q 1
"RTN","SCRPW302",80,0)
 ;
"RTN","SCRPW302",81,0)
PROV(SCRNARR) ; Set Providers into screen array (prompt is one/many/all)
"RTN","SCRPW302",82,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","SCRPW302",83,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","SCRPW302",84,0)
 ;         @SCRNARR@("PROVIDERS") = User pick all providers ?
"RTN","SCRPW302",85,0)
 ;           1 = Yes (all)     0 = No
"RTN","SCRPW302",86,0)
 ;         @SCRNARR@("PROVIDERS",PtrProvider) = Provider name
"RTN","SCRPW302",87,0)
 ;Note   : @SCRNARR@("PROVIDERS") is initialized (KILLed) on input
"RTN","SCRPW302",88,0)
 ;       : @SCRNARR@("PROVIDERS",PtrProvider) is only set when the user
"RTN","SCRPW302",89,0)
 ;         picked individual providers (i.e. didn't pick all)
"RTN","SCRPW302",90,0)
 ;
"RTN","SCRPW302",91,0)
 ;Declare variables
"RTN","SCRPW302",92,0)
 N DIC,VAUTSTR,VAUTVB,VAUTNI,SCANARR,Y
"RTN","SCRPW302",93,0)
 K @SCRNARR@("PROVIDERS")
"RTN","SCRPW302",94,0)
 ;Get provider selection
"RTN","SCRPW302",95,0)
 S DIC="^VA(200,"
"RTN","SCRPW302",96,0)
 S VAUTSTR="PROVIDER"
"RTN","SCRPW302",97,0)
 S VAUTVB="SCANARR"
"RTN","SCRPW302",98,0)
 S VAUTNI=2
"RTN","SCRPW302",99,0)
 D FIRST^VAUTOMA
"RTN","SCRPW302",100,0)
 I Y<0 Q 0
"RTN","SCRPW302",101,0)
 M @SCRNARR@("PROVIDERS")=SCANARR
"RTN","SCRPW302",102,0)
 Q 1
"RTN","SCRPW302",103,0)
 ;
"RTN","SCRPW302",104,0)
SCAN(SCRNARR) ; Set Scanned Notes into screen array
"RTN","SCRPW302",105,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","SCRPW302",106,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","SCRPW302",107,0)
 ;         @SCRNARR@("SCANNED") = Include count of encounters with
"RTN","SCRPW302",108,0)
 ;                                scanned notes    1 = Yes  0 = No
"RTN","SCRPW302",109,0)
 ;Note   : @SCRNARR@("SCANNED") is initialized (KILLed) on input
"RTN","SCRPW302",110,0)
 ;
"RTN","SCRPW302",111,0)
 ;Declare variables
"RTN","SCRPW302",112,0)
 N DIR,X,Y,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","SCRPW302",113,0)
 K @SCRNARR@("SCANNED")
"RTN","SCRPW302",114,0)
 ;Prompt user
"RTN","SCRPW302",115,0)
 S DIR(0)="Y"
"RTN","SCRPW302",116,0)
 S DIR("B")="NO"
"RTN","SCRPW302",117,0)
 S DIR("A")="Would you like to include SCANNED notes "
"RTN","SCRPW302",118,0)
 D ^DIR
"RTN","SCRPW302",119,0)
 I $D(DIRUT) Q 0
"RTN","SCRPW302",120,0)
 S @SCRNARR@("SCANNED")=Y
"RTN","SCRPW302",121,0)
 Q 1
"RTN","SCRPW303")
0^3^B28103014
"RTN","SCRPW303",1,0)
SCRPW303 ; BPFO/JRC - Performance Monitor Report Utils; 30 Jul 2003 ; 9/22/03 2:48pm
"RTN","SCRPW303",2,0)
 ;;5.3;SCHEDULING;**292**; AUG 13, 1993
"RTN","SCRPW303",3,0)
 ;
"RTN","SCRPW303",4,0)
DSS(SCRNARR) ;Set Stop Codes into screen array (prompt is one/many/all)
"RTN","SCRPW303",5,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","SCRPW303",6,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","SCRPW303",7,0)
 ;         @SCRNARR@("DSS") = User pick all stop codes ?
"RTN","SCRPW303",8,0)
 ;           1 = Yes (all)     0 = No
"RTN","SCRPW303",9,0)
 ;         @SCRNARR@("DSS-NTNL") = Only stop codes in national cohort ?
"RTN","SCRPW303",10,0)
 ;           1 = Yes           0 = No
"RTN","SCRPW303",11,0)
 ;         @SCRNARR@("DSS",PtrStopCode) = Stop Code Name
"RTN","SCRPW303",12,0)
 ;         @SCRNARR@("DSS-EXCLUDE",PtrStopCod) = SC Name
"RTN","SCRPW303",13,0)
 ;Note   : @SCRNARR@("DSS") is initialized (KILLed) on input
"RTN","SCRPW303",14,0)
 ;       : @SCRNARR@("DSS",PtrStopCode) is only set when the user
"RTN","SCRPW303",15,0)
 ;         picked individual stop codes (i.e. didn't pick all)
"RTN","SCRPW303",16,0)
 ;       : @SCRNARR@("DSS-EXCLUDE") is only set if the user picked ALL
"RTN","SCRPW303",17,0)
 ;         stop codes and choose to only use stop codes & credit pairs
"RTN","SCRPW303",18,0)
 ;         from the national cohort
"RTN","SCRPW303",19,0)
 ;       : @SCRNARR@("DSS-EXCLUDE") is set when
"RTN","SCRPW303",20,0)
 ;         @SCRNARR@("DSS-NTNL") equals 1
"RTN","SCRPW303",21,0)
 ;
"RTN","SCRPW303",22,0)
 ;Declare variables
"RTN","SCRPW303",23,0)
 N VAUTSTR,VAUTVB,VAUTNI,DSS,SCANARR,DIC,Y
"RTN","SCRPW303",24,0)
 K @SCRNARR@("DSS")
"RTN","SCRPW303",25,0)
 ;Get stop code selection
"RTN","SCRPW303",26,0)
 S DIC="^DIC(40.7,"
"RTN","SCRPW303",27,0)
 S VAUTSTR="Stop Code"
"RTN","SCRPW303",28,0)
 S VAUTVB="SCANARR"
"RTN","SCRPW303",29,0)
 S VAUTNI=2
"RTN","SCRPW303",30,0)
 D FIRST^VAUTOMA
"RTN","SCRPW303",31,0)
 I Y<0 Q 0
"RTN","SCRPW303",32,0)
 ;Does selection of ALL mean all stop codes in national cohort
"RTN","SCRPW303",33,0)
 I SCANARR=1 D
"RTN","SCRPW303",34,0)
 .N DIR,X,Y,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","SCRPW303",35,0)
 .S DIR(0)="Y"
"RTN","SCRPW303",36,0)
 .S DIR("B")="YES"
"RTN","SCRPW303",37,0)
 .S DIR("A",1)="By ALL do you mean stop codes from the"
"RTN","SCRPW303",38,0)
 .S DIR("A")="Performance Monitor national cohort "
"RTN","SCRPW303",39,0)
 .D ^DIR
"RTN","SCRPW303",40,0)
 .I $D(DIRUT) K SCANARR Q
"RTN","SCRPW303",41,0)
 .I Y D NTNLESC(SCRNARR)
"RTN","SCRPW303",42,0)
 .Q
"RTN","SCRPW303",43,0)
 I '$D(SCANARR) Q 0
"RTN","SCRPW303",44,0)
 I $D(@SCRNARR@("DSS")) Q 1
"RTN","SCRPW303",45,0)
 S @SCRNARR@("DSS-NTNL")=0
"RTN","SCRPW303",46,0)
 M @SCRNARR@("DSS")=SCANARR
"RTN","SCRPW303",47,0)
 Q 1
"RTN","SCRPW303",48,0)
 ;
"RTN","SCRPW303",49,0)
SORT(SORTARR) ; Set sort order into sort array
"RTN","SCRPW303",50,0)
 ;Input  : SORTARR - Sort array full global reference
"RTN","SCRPW303",51,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","SCRPW303",52,0)
 ;         @SORTARR = Sort1Code^Sort2Code
"RTN","SCRPW303",53,0)
 ;           Codes: 1 = Division   2 = Clinic
"RTN","SCRPW303",54,0)
 ;                  3 = Provider   4 = Stop Code
"RTN","SCRPW303",55,0)
 ;                  5 = Date       6 = Patient
"RTN","SCRPW303",56,0)
 ;         @SORTARR@("TEXT") = Sort1Text^Sort2Text
"RTN","SCRPW303",57,0)
 ;Note   : @SORTARR is initialized (KILLed) on input
"RTN","SCRPW303",58,0)
 ;
"RTN","SCRPW303",59,0)
 ;Declare variables
"RTN","SCRPW303",60,0)
 N DIR,X,Y,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","SCRPW303",61,0)
 K @SORTARR
"RTN","SCRPW303",62,0)
 ;Get sort level 1
"RTN","SCRPW303",63,0)
 S DIR(0)="SC^1:DIVISION;2:CLINIC;3:PROVIDER;4:STOP CODE;5:DATE;6:PATIENT"
"RTN","SCRPW303",64,0)
 S DIR("A")="Select primary sorting criteria"
"RTN","SCRPW303",65,0)
 D ^DIR
"RTN","SCRPW303",66,0)
 I $D(DIRUT) Q 0
"RTN","SCRPW303",67,0)
 S @SORTARR=Y
"RTN","SCRPW303",68,0)
 S @SORTARR@("TEXT")=$$SRT2TXT(Y)
"RTN","SCRPW303",69,0)
 ;Get sort level 2
"RTN","SCRPW303",70,0)
 K DIR,X,Y
"RTN","SCRPW303",71,0)
 S DIR(0)="SC^1:DIVISION;2:CLINIC;3:PROVIDER;4:STOP CODE;5:DATE;6:PATIENT"
"RTN","SCRPW303",72,0)
 S DIR("A")="Within "_@SORTARR@("TEXT")_" sort by"
"RTN","SCRPW303",73,0)
 S DIR("S")="I Y'="_@SORTARR
"RTN","SCRPW303",74,0)
 D ^DIR
"RTN","SCRPW303",75,0)
 I $D(DIRUT) K @SORTARR Q 0
"RTN","SCRPW303",76,0)
 S @SORTARR=@SORTARR_"^"_Y
"RTN","SCRPW303",77,0)
 S @SORTARR@("TEXT")=@SORTARR@("TEXT")_"^"_$$SRT2TXT(Y)
"RTN","SCRPW303",78,0)
 Q 1
"RTN","SCRPW303",79,0)
SRT2TXT(CODE)   ;Convert sort code to sort text
"RTN","SCRPW303",80,0)
 ;Input  : CODE - Sort code
"RTN","SCRPW303",81,0)
 ;Output : Text for sort code
"RTN","SCRPW303",82,0)
 ;
"RTN","SCRPW303",83,0)
 I CODE=1 Q "division"
"RTN","SCRPW303",84,0)
 I CODE=2 Q "clinic"
"RTN","SCRPW303",85,0)
 I CODE=3 Q "provider"
"RTN","SCRPW303",86,0)
 I CODE=4 Q "stop code"
"RTN","SCRPW303",87,0)
 I CODE=5 Q "date"
"RTN","SCRPW303",88,0)
 I CODE=6 Q "patient"
"RTN","SCRPW303",89,0)
 Q ""
"RTN","SCRPW303",90,0)
 ;
"RTN","SCRPW303",91,0)
ROLLUP(SCRNARR,SORTARR) ;Set screen and sort arrays for national rollup
"RTN","SCRPW303",92,0)
 ;Input  : SCRNARR - Screening array
"RTN","SCRPW303",93,0)
 ;         SORTARR - Sort array full global reference
"RTN","SCRPW303",94,0)
 ;Output : None
"RTN","SCRPW303",95,0)
 ;         Nodes in @SCRNARR are set to denote the following:
"RTN","SCRPW303",96,0)
 ;           Time limit of 10
"RTN","SCRPW303",97,0)
 ;           Include all divisions
"RTN","SCRPW303",98,0)
 ;           Use excluded stop codes from national cohort array
"RTN","SCRPW303",99,0)
 ;           Count encounters with scanned progress notes
"RTN","SCRPW303",100,0)
 ;         Nodes in @SORTARR are set to denote the following:
"RTN","SCRPW303",101,0)
 ;           Primary sort is division
"RTN","SCRPW303",102,0)
 ;           Secondary sort is date
"RTN","SCRPW303",103,0)
 ;Note   : @SCRNARR and @SORTARR are initialized (KILLed) on input
"RTN","SCRPW303",104,0)
 ;
"RTN","SCRPW303",105,0)
 K @SCRNARR,@SORTARR
"RTN","SCRPW303",106,0)
 S @SCRNARR@("TLMT")=10
"RTN","SCRPW303",107,0)
 S @SCRNARR@("DIVISION")=1
"RTN","SCRPW303",108,0)
 S @SCRNARR@("PROVIDERS")=1
"RTN","SCRPW303",109,0)
 D NTNLESC(SCRNARR)
"RTN","SCRPW303",110,0)
 S @SCRNARR@("SCANNED")=1
"RTN","SCRPW303",111,0)
 S @SORTARR="1^5"
"RTN","SCRPW303",112,0)
 S @SORTARR@("TEXT")="division^date"
"RTN","SCRPW303",113,0)
 Q
"RTN","SCRPW303",114,0)
 ;
"RTN","SCRPW303",115,0)
NTNLSC(SCRNARR) ;Set inclusion array of stop codes for national reporting
"RTN","SCRPW303",116,0)
 ;Input  : SCRNARR - Screening array
"RTN","SCRPW303",117,0)
 ;Output : National list of acceptable stop code & credit pairs
"RTN","SCRPW303",118,0)
 ;         @SCRNARR@("DSS") = 0
"RTN","SCRPW303",119,0)
 ;         @SCRNARR@("DSS-NTNL") = 1
"RTN","SCRPW303",120,0)
 ;         @SCRNARR@("DSS",PtrStopCode) = Stop Code Name
"RTN","SCRPW303",121,0)
 ;         @SCRNARR@("DSS-PAIR",PtrStopCode,PtrStopCode) = SC Name ^ SC Name
"RTN","SCRPW303",122,0)
 ;
"RTN","SCRPW303",123,0)
 N OFF,TEXT,J,CODE,PTR1,TMP,PTR2
"RTN","SCRPW303",124,0)
 S @SCRNARR@("DSS")=0
"RTN","SCRPW303",125,0)
 S @SCRNARR@("DSS-NTNL")=1
"RTN","SCRPW303",126,0)
 F OFF=1:1 S TEXT=$P($T(STOP+OFF),";;",2) Q:TEXT="END"  D
"RTN","SCRPW303",127,0)
 .F J=1:1:$L(TEXT,"^") S CODE=$P(TEXT,"^",J) D
"RTN","SCRPW303",128,0)
 ..S TMP=$L(CODE) Q:((TMP'=3)&(TMP'=6))
"RTN","SCRPW303",129,0)
 ..I TMP=3 D  Q
"RTN","SCRPW303",130,0)
 ...;Individual stop code
"RTN","SCRPW303",131,0)
 ...S PTR1=$$SC2PTR(CODE) Q:'PTR1
"RTN","SCRPW303",132,0)
 ...S @SCRNARR@("DSS",+PTR1)=$P(PTR1,"^",2)
"RTN","SCRPW303",133,0)
 ..;Credit pair
"RTN","SCRPW303",134,0)
 ..S PTR1=$$SC2PTR($E(CODE,1,3)) Q:'PTR1
"RTN","SCRPW303",135,0)
 ..S PTR2=$$SC2PTR($E(CODE,4,6)) Q:'PTR2
"RTN","SCRPW303",136,0)
 ..S @SCRNARR@("DSS-PAIR",+PTR1,+PTR2)=$P(PTR1,"^",2)_"^"_$P(PTR2,"^",2)
"RTN","SCRPW303",137,0)
 Q
"RTN","SCRPW303",138,0)
NTNLESC(SCRNARR) ;Set exclusion array of stop codes for national reporting
"RTN","SCRPW303",139,0)
 ;Input  : SCRNARR - Screening array
"RTN","SCRPW303",140,0)
 ;Output : National list of stop codes to be excluded
"RTN","SCRPW303",141,0)
 ;         @SCRNARR@("DSS") = 0
"RTN","SCRPW303",142,0)
 ;         @SCRNARR@("DSS-NTNL") = 1
"RTN","SCRPW303",143,0)
 ;         @SCRNARR@("DSS-EXCLUDE",PtrStopCode) = Stop Code Name
"RTN","SCRPW303",144,0)
 ;
"RTN","SCRPW303",145,0)
 N OFF,TEXT,J,CODE,PTR1,TMP,PTR2
"RTN","SCRPW303",146,0)
 S @SCRNARR@("DSS")=0
"RTN","SCRPW303",147,0)
 S @SCRNARR@("DSS-NTNL")=1
"RTN","SCRPW303",148,0)
 F OFF=1:1 S TEXT=$P($T(EXCSTOP+OFF),";;",2) Q:TEXT="END"  D
"RTN","SCRPW303",149,0)
 .F J=1:1:$L(TEXT,"^") S CODE=$P(TEXT,"^",J) D
"RTN","SCRPW303",150,0)
 ..S TMP=$L(CODE) Q:((TMP'=3)&(TMP'=6))
"RTN","SCRPW303",151,0)
 ..I TMP=3 D  Q
"RTN","SCRPW303",152,0)
 ...;Individual stop code for exclusion
"RTN","SCRPW303",153,0)
 ...S PTR1=$$SC2PTR(CODE) Q:'PTR1
"RTN","SCRPW303",154,0)
 ...S @SCRNARR@("DSS-EXCLUDE",+PTR1)=$P(PTR1,"^",2)
"RTN","SCRPW303",155,0)
 Q
"RTN","SCRPW303",156,0)
SC2PTR(CODE)    ;Get pointer to stop code
"RTN","SCRPW303",157,0)
 ;Input  : CODE - Stop code
"RTN","SCRPW303",158,0)
 ;Output : Pointer #40.7 ^ Name (#.01)
"RTN","SCRPW303",159,0)
 ;
"RTN","SCRPW303",160,0)
 N NODE,PTR
"RTN","SCRPW303",161,0)
 S PTR=+$O(^DIC(40.7,"C",CODE,0)) I 'PTR Q "0^INVALID STOP CODE"
"RTN","SCRPW303",162,0)
 S NODE=$G(^DIC(40.7,PTR,0))
"RTN","SCRPW303",163,0)
 Q PTR_"^"_$P(NODE,"^",1)
"RTN","SCRPW303",164,0)
 ;
"RTN","SCRPW303",165,0)
STOP ;List of acceptable stop codes and credit pairs
"RTN","SCRPW303",166,0)
 ;;END
"RTN","SCRPW303",167,0)
 ;
"RTN","SCRPW303",168,0)
EXCSTOP ;Exclusion list of stop codes
"RTN","SCRPW303",169,0)
 ;;104^105^106^107^108^109^115^116^117^120^126^127^128^144^145
"RTN","SCRPW303",170,0)
 ;;146^149^150^151^152^153^154^155^165^166^167^168^169^174^190
"RTN","SCRPW303",171,0)
 ;;202^205^206^207^208^212^213^214^290^291^292^293^294^295^296
"RTN","SCRPW303",172,0)
 ;;321^327^328^329^333^334^370^417^421^422^423^429^430^431^435
"RTN","SCRPW303",173,0)
 ;;450^451^452^453^454^455^456^458^459^460^461^462^463^464^465
"RTN","SCRPW303",174,0)
 ;;466^467^468^469^470^471^472^473^474^475^476^477^478^479^481
"RTN","SCRPW303",175,0)
 ;;482^483^484^485^505^506^510^513^516^519^521^522^523^525^535
"RTN","SCRPW303",176,0)
 ;;538^545^547^550^553^554^557^558^559^560^561^563^564^565^566
"RTN","SCRPW303",177,0)
 ;;573^574^575^577^578^590^602^603^604^606^607^608^610^650^651
"RTN","SCRPW303",178,0)
 ;;652^653^654^655^656^657^660^670^680^681^682^691^701^702^703
"RTN","SCRPW303",179,0)
 ;;704^705^706^707^708^709^710^711^725^730^731^900^999
"RTN","SCRPW303",180,0)
 ;;END
"RTN","SCRPW303",181,0)
 ;
"RTN","SCRPW304")
0^4^B25059982
"RTN","SCRPW304",1,0)
SCRPW304 ; BPFO/JRC - Performance Monitors National Summary Report; 30 Jul 2003 ; 9/30/03 10:03am
"RTN","SCRPW304",2,0)
 ;;5.3;SCHEDULING;**292**;AUG 13, 1993
"RTN","SCRPW304",3,0)
 ;
"RTN","SCRPW304",4,0)
EN ;Main Entry Point
"RTN","SCRPW304",5,0)
 ;Declare variable(s) and arrays
"RTN","SCRPW304",6,0)
 N SCRNARR,SORTARR
"RTN","SCRPW304",7,0)
 S SCRNARR="^TMP(""SCRPW"",$J,""SCRNARR"")"
"RTN","SCRPW304",8,0)
 S SORTARR="^TMP(""SCRPW"",$J,""SORTARR"")"
"RTN","SCRPW304",9,0)
 K @SCRNARR,@SORTARR
"RTN","SCRPW304",10,0)
 ;Set national screen/sort
"RTN","SCRPW304",11,0)
 D ROLLUP^SCRPW303(SCRNARR,SORTARR)
"RTN","SCRPW304",12,0)
 ;Get date frame
"RTN","SCRPW304",13,0)
 I $$DATE^SCRPW302("","",SCRNARR)<0 D EX1 Q
"RTN","SCRPW304",14,0)
 ;Queue report
"RTN","SCRPW304",15,0)
 W !!
"RTN","SCRPW304",16,0)
 N ZTDESC,ZTIO,ZTSAVE,TMP
"RTN","SCRPW304",17,0)
 S ZTIO=""
"RTN","SCRPW304",18,0)
 S ZTDESC="Performance Monitor National Summary Report"
"RTN","SCRPW304",19,0)
 S ZTSAVE("SCRNARR")=""
"RTN","SCRPW304",20,0)
 S TMP=$$OREF^DILF(SCRNARR)
"RTN","SCRPW304",21,0)
 S ZTSAVE(TMP)=""
"RTN","SCRPW304",22,0)
 I $D(@SCRNARR)#2 S ZTSAVE(SCRNARR)=""
"RTN","SCRPW304",23,0)
 S ZTSAVE("SORTARR")=""
"RTN","SCRPW304",24,0)
 S TMP=$$OREF^DILF(SORTARR)
"RTN","SCRPW304",25,0)
 S ZTSAVE(TMP)=""
"RTN","SCRPW304",26,0)
 I $D(@SORTARR)#2 S ZTSAVE(SORTARR)=""
"RTN","SCRPW304",27,0)
 D EN^XUTMDEVQ("EN1^SCRPW304",ZTDESC,.ZTSAVE)
"RTN","SCRPW304",28,0)
 D EX1
"RTN","SCRPW304",29,0)
 Q
"RTN","SCRPW304",30,0)
 ;
"RTN","SCRPW304",31,0)
EN1 ;Tasked entry point
"RTN","SCRPW304",32,0)
 ;Input  : SCRNARR - Screen array
"RTN","SCRPW304",33,0)
 ;         SORTARR - Sort array
"RTN","SCRPW304",34,0)
 ;Output : None
"RTN","SCRPW304",35,0)
 ;
"RTN","SCRPW304",36,0)
 N OUTARR,STOP,PAGENUM,STOP,SUMNODE,PINODE,DIV
"RTN","SCRPW304",37,0)
 S OUTARR="^TMP(""SCRPW"",$J,""OUTARR"")"
"RTN","SCRPW304",38,0)
 S STOP=0
"RTN","SCRPW304",39,0)
 K @OUTARR
"RTN","SCRPW304",40,0)
 S PAGENUM=1
"RTN","SCRPW304",41,0)
 ;Get data
"RTN","SCRPW304",42,0)
 D GETDATA^SDPMUT1(SCRNARR,SORTARR,OUTARR)
"RTN","SCRPW304",43,0)
 ;Print summary for facility
"RTN","SCRPW304",44,0)
 S DIV=""
"RTN","SCRPW304",45,0)
 D PRTHEAD
"RTN","SCRPW304",46,0)
 S SUMNODE=$G(@OUTARR@("SUMMARY"))
"RTN","SCRPW304",47,0)
 S PINODE=$G(@OUTARR@("SUMMARY","PI"))
"RTN","SCRPW304",48,0)
 I '$$S^%ZTLOAD() D PRTSUMS
"RTN","SCRPW304",49,0)
 D WAIT^SCRPW301 I STOP D EXIT Q
"RTN","SCRPW304",50,0)
 ;Print divisional summaries
"RTN","SCRPW304",51,0)
 S DIV="" F  S DIV=$O(@OUTARR@("SUBTOTAL",DIV)) Q:DIV=""  D  Q:STOP
"RTN","SCRPW304",52,0)
 .D PRTHEAD
"RTN","SCRPW304",53,0)
 .S SUMNODE=$G(@OUTARR@("SUBTOTAL",DIV))
"RTN","SCRPW304",54,0)
 .S PINODE=$G(@OUTARR@("SUBTOTAL",DIV,"PI"))
"RTN","SCRPW304",55,0)
 .D PRTSUMS
"RTN","SCRPW304",56,0)
 .D WAIT^SCRPW301 I STOP Q
"RTN","SCRPW304",57,0)
 ;Cleanup and quit
"RTN","SCRPW304",58,0)
 D EXIT
"RTN","SCRPW304",59,0)
 Q
"RTN","SCRPW304",60,0)
 ;
"RTN","SCRPW304",61,0)
PRTHEAD ;Page Header
"RTN","SCRPW304",62,0)
 ;Input  : OUTARR - Data array
"RTN","SCRPW304",63,0)
 ;         SCRNARR - Screen array
"RTN","SCRPW304",64,0)
 ;         PAGENUM - Page number
"RTN","SCRPW304",65,0)
 ;         DIV - Division Name ^ Division Number
"RTN","SCRPW304",66,0)
 ;             - NULL if facility name/number should be used
"RTN","SCRPW304",67,0)
 ;Output : None
"RTN","SCRPW304",68,0)
 ;         PAGENUM is incremented by 1
"RTN","SCRPW304",69,0)
 ;
"RTN","SCRPW304",70,0)
 N TMP,LINE,VISN
"RTN","SCRPW304",71,0)
 W @IOF
"RTN","SCRPW304",72,0)
 W !,"Performance Monitor National Summary Report",?70,"Page: ",PAGENUM
"RTN","SCRPW304",73,0)
 S LINE="Division: "_$P(DIV,U,1)_" ("_$P(DIV,U,2)_")"
"RTN","SCRPW304",74,0)
 I DIV="" D
"RTN","SCRPW304",75,0)
 .S TMP=$$SITE^VASITE()
"RTN","SCRPW304",76,0)
 .D PARENT^XUAF4("VISN",$P(TMP,U,1))
"RTN","SCRPW304",77,0)
 .S VISN="" F VISN=$O(VISN("P",VISN)) Q:VISN=""
"RTN","SCRPW304",78,0)
 .S LINE="Facility: "_$P(TMP,U,2)_" ("_$P(TMP,U,3)_")"_" "_$P($G(VISN("P",VISN)),U,1)
"RTN","SCRPW304",79,0)
 W !!,LINE
"RTN","SCRPW304",80,0)
 W !,"Run Date: ",$$HTE^XLFDT($H)
"RTN","SCRPW304",81,0)
 W !,"Encounter Date Range: ",$$FMTE^XLFDT($P(@SCRNARR@("RANGE"),U,1))
"RTN","SCRPW304",82,0)
 W " to ",$$FMTE^XLFDT($P(@SCRNARR@("RANGE"),U,2))
"RTN","SCRPW304",83,0)
 I DIV="" S LINE=+$G(@OUTARR@("SUMMARY"))
"RTN","SCRPW304",84,0)
 I DIV'="" S LINE=+$G(@OUTARR@("SUBTOTAL",DIV))
"RTN","SCRPW304",85,0)
 W !,"Total number of encounters (denominator): ",LINE
"RTN","SCRPW304",86,0)
 W !!,"Total number of encounters in the denominator are those included in the"
"RTN","SCRPW304",87,0)
 W !,"Performance Monitor cohort"
"RTN","SCRPW304",88,0)
 S PAGENUM=PAGENUM+1
"RTN","SCRPW304",89,0)
 Q
"RTN","SCRPW304",90,0)
 ;
"RTN","SCRPW304",91,0)
PRTSUMS ;Print summaries
"RTN","SCRPW304",92,0)
 ;Input  : SUMNODE - Summary node from OUTARR
"RTN","SCRPW304",93,0)
 ;         PINODE - PI node from OUTARR
"RTN","SCRPW304",94,0)
 ;Output : None
"RTN","SCRPW304",95,0)
 ;
"RTN","SCRPW304",96,0)
 I (SUMNODE="")&(PINODE="") D  Q
"RTN","SCRPW304",97,0)
 .W !
"RTN","SCRPW304",98,0)
 .W !,"***********************************************"
"RTN","SCRPW304",99,0)
 .W !,"*  NOTHING TO REPORT FOR SELECTED DATE FRAME  *"
"RTN","SCRPW304",100,0)
 .W !,"***********************************************"
"RTN","SCRPW304",101,0)
 N VAL,DASH6,TOTENC,CMPENC,PRCNT,TMP,SCANNED,NPN
"RTN","SCRPW304",102,0)
 S $P(DASH6,"-",6)="-"
"RTN","SCRPW304",103,0)
 S $P(PRCNT,U,11)=""
"RTN","SCRPW304",104,0)
 ;Get general totals
"RTN","SCRPW304",105,0)
 S TOTENC=+$P(SUMNODE,U,1)
"RTN","SCRPW304",106,0)
 S CMPENC=+$P(SUMNODE,U,2)
"RTN","SCRPW304",107,0)
 S SCANNED=+$P(SUMNODE,U,7)
"RTN","SCRPW304",108,0)
 S NPN=+$P(SUMNODE,U,9)
"RTN","SCRPW304",109,0)
 ;Calculate compliance percentages
"RTN","SCRPW304",110,0)
 I TOTENC F TMP=1:1:11 D
"RTN","SCRPW304",111,0)
 .S VAL=100*($P(PINODE,U,TMP)/TOTENC)
"RTN","SCRPW304",112,0)
 .S $P(PRCNT,U,TMP)=$TR($J(VAL,3,0)," ")_"%"
"RTN","SCRPW304",113,0)
 ;Part 1
"RTN","SCRPW304",114,0)
 W !!,"Signed",?21,"Elapsed Time (Days)"
"RTN","SCRPW304",115,0)
 W !,"within",?14,"0-1",?22,">1-2",?31,">2-3",?39,">3-4",?47,">4-5"
"RTN","SCRPW304",116,0)
 W ?55,">5-6",?63,">6-7",?71,">7-8"
"RTN","SCRPW304",117,0)
 W !,?13,DASH6,?21,DASH6,?30,DASH6,?38,DASH6,?46,DASH6,?54,DASH6
"RTN","SCRPW304",118,0)
 W ?62,DASH6,?70,DASH6
"RTN","SCRPW304",119,0)
 W !,"Encounters",?13,+$P(PINODE,U,1),?21,+$P(PINODE,U,2)
"RTN","SCRPW304",120,0)
 W ?30,+$P(PINODE,U,3),?38,+$P(PINODE,U,4),?46,+$P(PINODE,U,5)
"RTN","SCRPW304",121,0)
 W ?54,+$P(PINODE,U,6),?62,+$P(PINODE,U,7),?70,+$P(PINODE,U,8)
"RTN","SCRPW304",122,0)
 W !,"Percentage",?13,$P(PRCNT,U,1),?21,$P(PRCNT,U,2)
"RTN","SCRPW304",123,0)
 W ?30,$P(PRCNT,U,3),?38,$P(PRCNT,U,4),?46,$P(PRCNT,U,5)
"RTN","SCRPW304",124,0)
 W ?54,$P(PRCNT,U,6),?62,$P(PRCNT,U,7),?70,$P(PRCNT,U,8)
"RTN","SCRPW304",125,0)
 ;Part 2
"RTN","SCRPW304",126,0)
 W !!,"Signed",?21,"Elapsed Time (Days)",?45,"Pending",?60,"Scanned"
"RTN","SCRPW304",127,0)
 W !,"within",?14,">8-9",?22,">9-10",?32,">10",?38,"Signatures"
"RTN","SCRPW304",128,0)
 W ?50,"Notes",?59,"Note Only"
"RTN","SCRPW304",129,0)
 W !,?13,DASH6,?21,DASH6,?30,DASH6,?38,DASH6_"----"
"RTN","SCRPW304",130,0)
 W ?50,DASH6,?59,DASH6_"---"
"RTN","SCRPW304",131,0)
 W !,"Encounters",?13,+$P(PINODE,U,9),?21,+$P(PINODE,U,10)
"RTN","SCRPW304",132,0)
 W ?30,+$P(PINODE,U,11),?38,TOTENC-CMPENC-NPN-SCANNED-(+$P(PINODE,U,11))
"RTN","SCRPW304",133,0)
 W ?50,NPN,?59,SCANNED
"RTN","SCRPW304",134,0)
 W !,"Percentage",?13,$P(PRCNT,U,9),?21,$P(PRCNT,U,10)
"RTN","SCRPW304",135,0)
 W ?30,$P(PRCNT,U,11)
"RTN","SCRPW304",136,0)
 S NPNVAL=100*(NPN/TOTENC)
"RTN","SCRPW304",137,0)
 S NPNVAL=$TR($J(NPNVAL,3,0)," ")_"%"
"RTN","SCRPW304",138,0)
 S VAL=100*((TOTENC-CMPENC-NPN-(+$P(PINODE,U,11)))/TOTENC)
"RTN","SCRPW304",139,0)
 S VAL=$TR($J(VAL,3,0)," ")_"%"
"RTN","SCRPW304",140,0)
 W ?38,VAL,?50,NPNVAL,?59,"N/A"
"RTN","SCRPW304",141,0)
 Q
"RTN","SCRPW304",142,0)
 ;
"RTN","SCRPW304",143,0)
EXIT ;Kill temporary arrays
"RTN","SCRPW304",144,0)
 K @OUTARR
"RTN","SCRPW304",145,0)
EX1 K @SORTARR,@SCRNARR
"RTN","SCRPW304",146,0)
 Q
"RTN","SCRPW306")
0^5^B1921913
"RTN","SCRPW306",1,0)
SCRPW306 ; BPFO/JRC - ACRP Ad Hoc Report for Perf Monitors; 6-19-2003
"RTN","SCRPW306",2,0)
 ;;5.3;Scheduling;**292**;Aug 13, 1993
"RTN","SCRPW306",3,0)
 ;
"RTN","SCRPW306",4,0)
PMPR(SDX) ;Provider signing progress note
"RTN","SCRPW306",5,0)
 K SDX N INFO,PTR
"RTN","SCRPW306",6,0)
 D GETTIU
"RTN","SCRPW306",7,0)
 S PTR=+$P(INFO,"^",1)
"RTN","SCRPW306",8,0)
 S:PTR SDX(1)=PTR_"^"_$P($G(^VA(200,PTR,0)),"^",1)
"RTN","SCRPW306",9,0)
 D NX Q
"RTN","SCRPW306",10,0)
 ;
"RTN","SCRPW306",11,0)
PMDT(SDX) ;Date progress notes was signed
"RTN","SCRPW306",12,0)
 K SDX N INFO,DATE
"RTN","SCRPW306",13,0)
 D GETTIU
"RTN","SCRPW306",14,0)
 S DATE=+$P(INFO,"^",2)
"RTN","SCRPW306",15,0)
 S:DATE SDX(1)=DATE_"^"_$$FMTE^XLFDT(DATE,"1D")
"RTN","SCRPW306",16,0)
 D NX Q
"RTN","SCRPW306",17,0)
 ;
"RTN","SCRPW306",18,0)
PMET(SDX) ;Elapsed time in (days) for provider to sign progress note
"RTN","SCRPW306",19,0)
 K SDX N INFO,ELAPSE
"RTN","SCRPW306",20,0)
 D GETTIU
"RTN","SCRPW306",21,0)
 S ELAPSE=$P(INFO,"^",3)
"RTN","SCRPW306",22,0)
 S:ELAPSE'="" SDX(1)=ELAPSE_"^"_ELAPSE
"RTN","SCRPW306",23,0)
 D NX Q
"RTN","SCRPW306",24,0)
 ;
"RTN","SCRPW306",25,0)
NX S:$D(SDX)<10 SDX(1)="~~~NONE~~~^~~~NONE~~~" Q
"RTN","SCRPW306",26,0)
 ;
"RTN","SCRPW306",27,0)
GETTIU ;Get data from TIU
"RTN","SCRPW306",28,0)
 ;Input  : SDOE - Pointer to Outpatient Encounter (#409.68)
"RTN","SCRPW306",29,0)
 ;         SDOE0 - Zero node of encounter
"RTN","SCRPW306",30,0)
 ;Output : None
"RTN","SCRPW306",31,0)
 ;         INFO = P1 ^ P2 ^ P3
"RTN","SCRPW306",32,0)
 ;                P1 - Signing Provider (ptr)
"RTN","SCRPW306",33,0)
 ;                P2 - Date Signed (FM)
"RTN","SCRPW306",34,0)
 ;                P3 - Elapsed Time (day)
"RTN","SCRPW306",35,0)
 ;Note   : INFO will be set to NULL if a note signed by an
"RTN","SCRPW306",36,0)
 ;         acceptable provider is not found
"RTN","SCRPW306",37,0)
 ;
"RTN","SCRPW306",38,0)
 N TIUINFO,PROV,DATE,ELAPSE
"RTN","SCRPW306",39,0)
 ;Get progress note status/info
"RTN","SCRPW306",40,0)
 S TIUINFO=$$NOTEINF^SDPMUT2(SDOE)
"RTN","SCRPW306",41,0)
 S INFO=""
"RTN","SCRPW306",42,0)
 ;Status not acceptable
"RTN","SCRPW306",43,0)
 I $P(TIUINFO,"^",2)'="B" Q
"RTN","SCRPW306",44,0)
 ;Determine signing provider & date signed
"RTN","SCRPW306",45,0)
 S PROV=$P(TIUINFO,"^",5)
"RTN","SCRPW306",46,0)
 S DATE=$P(TIUINFO,"^",6)
"RTN","SCRPW306",47,0)
 I 'PROV S PROV=$P(TIUINFO,"^",3),DATE=$P(TIUINFO,"^",4)
"RTN","SCRPW306",48,0)
 ;Determine elapsed time
"RTN","SCRPW306",49,0)
 S ELAPSE=$$FMDIFF^XLFDT(DATE,+SDOE0)
"RTN","SCRPW306",50,0)
 ;Done
"RTN","SCRPW306",51,0)
 S INFO=PROV_"^"_DATE_"^"_ELAPSE
"RTN","SCRPW306",52,0)
 Q
"RTN","SDPMUT1")
0^8^B47818224
"RTN","SDPMUT1",1,0)
SDPMUT1 ; BPFO/JRC - Performance Monitors Utilities; 6-19-2003
"RTN","SDPMUT1",2,0)
 ;;5.3;SCHEDULING;**292**;AUGUST 13, 1993
"RTN","SDPMUT1",3,0)
 ;
"RTN","SDPMUT1",4,0)
GETDATA(SCRNARR,SORTARR,OUTARR) ;Get progress note compliance information
"RTN","SDPMUT1",5,0)
 ;Input  : SCRNARR - Screening array full global reference
"RTN","SDPMUT1",6,0)
 ;         SORTARR - Sort array full global reference
"RTN","SDPMUT1",7,0)
 ;         OUTARR  - Output array full global reference
"RTN","SDPMUT1",8,0)
 ;Output : None
"RTN","SDPMUT1",9,0)
 ;         @OUTARR@("SUMMARY") = Enc^Comply^ ^Prov^Stop^ET^Scan^Signed
"RTN","SDPMUT1",10,0)
 ;           Enc    - Number of encounters checked for compliance
"RTN","SDPMUT1",11,0)
 ;           Comply - Compliant encounters (note signed w/in time limit)
"RTN","SDPMUT1",12,0)
 ;           Prov   - Unique primary encounter providers
"RTN","SDPMUT1",13,0)
 ;           Stop   - Unique primary stop codes
"RTN","SDPMUT1",14,0)
 ;           ET     - Total elapsed time (days) to sign PN
"RTN","SDPMUT1",15,0)
 ;           Scan   - Encounters with scanned notes
"RTN","SDPMUT1",16,0)
 ;           Signed - Encounters with signed notes
"RTN","SDPMUT1",17,0)
 ;         @OUTARR@("SUBTOTAL",SUB1) = SUMMARY node for sort level 1
"RTN","SDPMUT1",18,0)
 ;         @OUTARR@("SUMMARY","PI") = F0^F1^F2^F3^F4^F5^F6^F7^F8^F9^F10^F11
"RTN","SDPMUT1",19,0)
 ;           Fx  - Notes signed in x to X+1 days
"RTN","SDPMUT1",20,0)
 ;           F11 - Notes signed in 10 or more days
"RTN","SDPMUT1",21,0)
 ;         @OUTARR@("SUBTOTAL",SUB1,"PI") = PI node for sort level 1
"RTN","SDPMUT1",22,0)
 ;         @OUTARR@("DETAIL",SUB1,SUB2,DFN,PtrEnc) = Prov^DT^ET
"RTN","SDPMUT1",23,0)
 ;           Prov - TIU Provider
"RTN","SDPMUT1",24,0)
 ;           DT   - Date Provider signed progress note
"RTN","SDPMUT1",25,0)
 ;           ET   - Number of days that elpased before signing PN
"RTN","SDPMUT1",26,0)
 ;Note   : OUTARR is initialized (i.e. KILLed) on input
"RTN","SDPMUT1",27,0)
 ;       : When division is used as a sorting subscript,
"RTN","SDPMUT1",28,0)
 ;         DivisionName^DivisionNumber is used as the subscript
"RTN","SDPMUT1",29,0)
 ;       : Time is stripped from the encounter date when used as a
"RTN","SDPMUT1",30,0)
 ;         sorting subscript
"RTN","SDPMUT1",31,0)
 ;
"RTN","SDPMUT1",32,0)
 ;Declare variables
"RTN","SDPMUT1",33,0)
 N PTRENC,DATE,ENDDATE,UNQARR,STOP,LOOP
"RTN","SDPMUT1",34,0)
 ;Get begin and end dates for scan
"RTN","SDPMUT1",35,0)
 S DATE=$G(@SCRNARR@("RANGE"))
"RTN","SDPMUT1",36,0)
 S ENDDATE=$P(DATE,U,2)
"RTN","SDPMUT1",37,0)
 S DATE=$P(DATE,U,1)
"RTN","SDPMUT1",38,0)
 Q:('DATE)!('ENDDATE)
"RTN","SDPMUT1",39,0)
 S DATE=$P(DATE,".",1)-.000001
"RTN","SDPMUT1",40,0)
 S $P(ENDDATE,".",2)=999999
"RTN","SDPMUT1",41,0)
 ;Initialize output and array used to track uniques
"RTN","SDPMUT1",42,0)
 S UNQARR=$NA(^TMP("SDPMUT1-UNIQUE",$J))
"RTN","SDPMUT1",43,0)
 K @UNQARR,@OUTARR
"RTN","SDPMUT1",44,0)
 ;Scan
"RTN","SDPMUT1",45,0)
 S STOP=0
"RTN","SDPMUT1",46,0)
 F LOOP=1:1 S DATE=+$O(^SCE("B",DATE)) Q:('DATE)!(DATE>ENDDATE)  D  Q:STOP
"RTN","SDPMUT1",47,0)
 .S PTRENC=0
"RTN","SDPMUT1",48,0)
 .F  S PTRENC=+$O(^SCE("B",DATE,PTRENC)) Q:'PTRENC  D  Q:STOP
"RTN","SDPMUT1",49,0)
 ..;Task asked to stop
"RTN","SDPMUT1",50,0)
 ..I '(LOOP#100) S STOP=$$S^%ZTLOAD()  Q:STOP
"RTN","SDPMUT1",51,0)
 ..;Screen out encounter
"RTN","SDPMUT1",52,0)
 ..Q:$$SCREEN^SDPMUT2(PTRENC,SCRNARR)
"RTN","SDPMUT1",53,0)
 ..;Set output array
"RTN","SDPMUT1",54,0)
 ..D GET
"RTN","SDPMUT1",55,0)
 ;Cleanup and quit
"RTN","SDPMUT1",56,0)
 K @UNQARR
"RTN","SDPMUT1",57,0)
 Q
"RTN","SDPMUT1",58,0)
GET ;Get info & establish output array for GETDATA
"RTN","SDPMUT1",59,0)
 ;Input  : PTRENC - Pointer to Outpatient Encounter file
"RTN","SDPMUT1",60,0)
 ;         UNQARR - Array to use for unique calculations
"RTN","SDPMUT1",61,0)
 ;         Input parameters for GETDATA (SCRNARR, SORTARR, and OUTARR)
"RTN","SDPMUT1",62,0)
 ;Ouput  : See GETDATA for format of nodes set into OUTARR
"RTN","SDPMUT1",63,0)
 ;         Unique Stop Codes
"RTN","SDPMUT1",64,0)
 ;           @UNQARR@("SUMMARY","STOP",PtrStopCode)
"RTN","SDPMUT1",65,0)
 ;           @UNQARR@("SUBTOTAL","STOP",SUB1,PtrStopCode)
"RTN","SDPMUT1",66,0)
 ;         Unique Primary Encounter Providers
"RTN","SDPMUT1",67,0)
 ;           @UNQARR@("SUMMARY","PROV",PtrProvider)
"RTN","SDPMUT1",68,0)
 ;           @UNQARR@("SUBTOTAL","PROV",SUB1,PtrProvider)
"RTN","SDPMUT1",69,0)
 ;Declare variables
"RTN","SDPMUT1",70,0)
 N DFN,DIV,CLINIC,NODE,NOTEINFO,PROV,ENCDT,SUB1,SUB2,TIUPROV
"RTN","SDPMUT1",71,0)
 N TIUDT,TIUET,SUMNODE,SUBNODE,ESUB1,ESUB2,SCODE,X
"RTN","SDPMUT1",72,0)
 S NODE=^SCE(PTRENC,0)
"RTN","SDPMUT1",73,0)
 S DFN=+$P(NODE,U,2),DIV=+$P(NODE,U,11),CLINIC=+$P(NODE,U,4)
"RTN","SDPMUT1",74,0)
 S SCODE=+$P(NODE,U,3),ENCDT=+NODE
"RTN","SDPMUT1",75,0)
 ;Get primary encounter provider
"RTN","SDPMUT1",76,0)
 S PROV=$$ENCPROV^SDPMUT2(PTRENC)
"RTN","SDPMUT1",77,0)
 ;Set sorting subscripts (ESUB1 & ESUB2)
"RTN","SDPMUT1",78,0)
 ;  If SUBx = 1 Set sorting criteria to division
"RTN","SDPMUT1",79,0)
 ;  If SUBx = 2 Set soring criteria to clinic
"RTN","SDPMUT1",80,0)
 ;  If SUBx = 3 Set sorting criteria to Provider
"RTN","SDPMUT1",81,0)
 ;  If SUBx = 4 Set sorting criteria to Stop Code
"RTN","SDPMUT1",82,0)
 ;  If SUBx = 5 Set sorting criteria to Encounter Date
"RTN","SDPMUT1",83,0)
 ;  If SUBx = 6 Set sorting criteria to Patient
"RTN","SDPMUT1",84,0)
 S NODE=@SORTARR
"RTN","SDPMUT1",85,0)
 S SUB1=$P(NODE,"^",1)
"RTN","SDPMUT1",86,0)
 S SUB2=$P(NODE,"^",2)
"RTN","SDPMUT1",87,0)
 F NODE="SUB1","SUB2" D  I @("E"_NODE)="" S @("E"_NODE)="UNKNOWN"
"RTN","SDPMUT1",88,0)
 .I @NODE=1 D  Q
"RTN","SDPMUT1",89,0)
 ..S X=$G(^DG(40.8,DIV,0))
"RTN","SDPMUT1",90,0)
 ..S @("E"_NODE)=$P(X,U,1)_"^"_$P(X,U,2)
"RTN","SDPMUT1",91,0)
 .I @NODE=2 D  Q
"RTN","SDPMUT1",92,0)
 ..S @("E"_NODE)=$P($G(^SC(CLINIC,0)),U,1)
"RTN","SDPMUT1",93,0)
 .I @NODE=3 D  Q
"RTN","SDPMUT1",94,0)
 ..S @("E"_NODE)=$P($G(^VA(200,PROV,0)),U,1)
"RTN","SDPMUT1",95,0)
 .I @NODE=4 D  Q
"RTN","SDPMUT1",96,0)
 ..S @("E"_NODE)=$P($G(^DIC(40.7,SCODE,0)),U,1)
"RTN","SDPMUT1",97,0)
 .I @NODE=5 D  Q
"RTN","SDPMUT1",98,0)
 ..S @("E"_NODE)=$P(ENCDT,".",1)
"RTN","SDPMUT1",99,0)
 .I @NODE=6 D  Q
"RTN","SDPMUT1",100,0)
 ..S @("E"_NODE)=$P($G(^DPT(DFN,0)),U,1)
"RTN","SDPMUT1",101,0)
 .S @("E"_NODE)="UNKNOWN"
"RTN","SDPMUT1",102,0)
 ;Increment Encounters for hospital and sort level 1
"RTN","SDPMUT1",103,0)
 S $P(@OUTARR@("SUMMARY"),U,1)=$P($G(@OUTARR@("SUMMARY")),U,1)+1
"RTN","SDPMUT1",104,0)
 S $P(@OUTARR@("SUBTOTAL",ESUB1),U,1)=$P($G(@OUTARR@("SUBTOTAL",ESUB1)),U,1)+1
"RTN","SDPMUT1",105,0)
 ;Get TIU information
"RTN","SDPMUT1",106,0)
 S NOTEINFO=$$NOTEINF^SDPMUT2(PTRENC)
"RTN","SDPMUT1",107,0)
 S (TIUPROV,TIUDT,TIUET)=""
"RTN","SDPMUT1",108,0)
 ;Only update performance indicators for note status of B
"RTN","SDPMUT1",109,0)
 I $P((NOTEINFO),U,2)="B" D
"RTN","SDPMUT1",110,0)
 .S TIUPROV=$P((NOTEINFO),U,5)
"RTN","SDPMUT1",111,0)
 .S TIUDT=$P((NOTEINFO),U,6)
"RTN","SDPMUT1",112,0)
 .I 'TIUPROV D
"RTN","SDPMUT1",113,0)
 ..S TIUPROV=$P((NOTEINFO),U,3)
"RTN","SDPMUT1",114,0)
 ..S TIUDT=$P((NOTEINFO),U,4)
"RTN","SDPMUT1",115,0)
 .S TIUET=$$FMDIFF^XLFDT(TIUDT,ENCDT)
"RTN","SDPMUT1",116,0)
 .I TIUET<0 Q
"RTN","SDPMUT1",117,0)
 .;Increment Compliant Notes for hospital and sort level 1
"RTN","SDPMUT1",118,0)
 .I TIUET'>@SCRNARR@("TLMT") D
"RTN","SDPMUT1",119,0)
 ..S $P(@OUTARR@("SUMMARY"),U,2)=$P($G(@OUTARR@("SUMMARY")),U,2)+1
"RTN","SDPMUT1",120,0)
 ..S $P(@OUTARR@("SUBTOTAL",ESUB1),U,2)=$P($G(@OUTARR@("SUBTOTAL",ESUB1)),U,2)+1
"RTN","SDPMUT1",121,0)
 .;Increment Total Elapsed Time for hospital and sort level 1
"RTN","SDPMUT1",122,0)
 .S $P(@OUTARR@("SUMMARY"),U,6)=$P($G(@OUTARR@("SUMMARY")),U,6)+TIUET
"RTN","SDPMUT1",123,0)
 .S $P(@OUTARR@("SUBTOTAL",ESUB1),U,6)=$P($G(@OUTARR@("SUBTOTAL",ESUB1)),U,6)+TIUET
"RTN","SDPMUT1",124,0)
 .;Increment Total Signed Notes for hospital and sort level 1
"RTN","SDPMUT1",125,0)
 .S $P(@OUTARR@("SUMMARY"),U,8)=$P($G(@OUTARR@("SUMMARY")),U,8)+1
"RTN","SDPMUT1",126,0)
 .S $P(@OUTARR@("SUBTOTAL",ESUB1),U,8)=$P($G(@OUTARR@("SUBTOTAL",ESUB1)),U,8)+1
"RTN","SDPMUT1",127,0)
 .;Update performance indicator node for hospital and sort level 1
"RTN","SDPMUT1",128,0)
 .S SUMNODE=$G(@OUTARR@("SUMMARY","PI"))
"RTN","SDPMUT1",129,0)
 .S SUBNODE=$G(@OUTARR@("SUBTOTAL",ESUB1,"PI"))
"RTN","SDPMUT1",130,0)
 .I TIUET'<0&(TIUET'>1) D
"RTN","SDPMUT1",131,0)
 ..S $P(SUMNODE,U,1)=$P($G(SUMNODE),U,1)+1
"RTN","SDPMUT1",132,0)
 ..S $P(SUBNODE,U,1)=$P($G(SUBNODE),U,1)+1
"RTN","SDPMUT1",133,0)
 .I TIUET>1&(TIUET'>2) D
"RTN","SDPMUT1",134,0)
 ..S $P(SUMNODE,U,2)=$P($G(SUMNODE),U,2)+1
"RTN","SDPMUT1",135,0)
 ..S $P(SUBNODE,U,2)=$P($G(SUBNODE),U,2)+1
"RTN","SDPMUT1",136,0)
 .I TIUET>2&(TIUET'>3) D
"RTN","SDPMUT1",137,0)
 ..S $P(SUMNODE,U,3)=$P($G(SUMNODE),U,3)+1
"RTN","SDPMUT1",138,0)
 ..S $P(SUBNODE,U,3)=$P($G(SUBNODE),U,3)+1
"RTN","SDPMUT1",139,0)
 .I TIUET>3&(TIUET'>4) D
"RTN","SDPMUT1",140,0)
 ..S $P(SUMNODE,U,4)=$P($G(SUMNODE),U,4)+1
"RTN","SDPMUT1",141,0)
 ..S $P(SUBNODE,U,4)=$P($G(SUBNODE),U,4)+1
"RTN","SDPMUT1",142,0)
 .I TIUET>4&(TIUET'>5) D
"RTN","SDPMUT1",143,0)
 ..S $P(SUMNODE,U,5)=$P($G(SUMNODE),U,5)+1
"RTN","SDPMUT1",144,0)
 ..S $P(SUBNODE,U,5)=$P($G(SUBNODE),U,5)+1
"RTN","SDPMUT1",145,0)
 .I TIUET>5&(TIUET'>6) D
"RTN","SDPMUT1",146,0)
 ..S $P(SUMNODE,U,6)=$P($G(SUMNODE),U,6)+1
"RTN","SDPMUT1",147,0)
 ..S $P(SUBNODE,U,6)=$P($G(SUBNODE),U,6)+1
"RTN","SDPMUT1",148,0)
 .I TIUET>6&(TIUET'>7) D
"RTN","SDPMUT1",149,0)
 ..S $P(SUMNODE,U,7)=$P($G(SUMNODE),U,7)+1
"RTN","SDPMUT1",150,0)
 ..S $P(SUBNODE,U,7)=$P($G(SUBNODE),U,7)+1
"RTN","SDPMUT1",151,0)
 .I TIUET>7&(TIUET'>8) D
"RTN","SDPMUT1",152,0)
 ..S $P(SUMNODE,U,8)=$P($G(SUMNODE),U,8)+1
"RTN","SDPMUT1",153,0)
 ..S $P(SUBNODE,U,8)=$P($G(SUBNODE),U,8)+1
"RTN","SDPMUT1",154,0)
 .I TIUET>8&(TIUET'>9) D
"RTN","SDPMUT1",155,0)
 ..S $P(SUMNODE,U,9)=$P($G(SUMNODE),U,9)+1
"RTN","SDPMUT1",156,0)
 ..S $P(SUBNODE,U,9)=$P($G(SUBNODE),U,9)+1
"RTN","SDPMUT1",157,0)
 .I TIUET>9&(TIUET'>10) D
"RTN","SDPMUT1",158,0)
 ..S $P(SUMNODE,U,10)=$P($G(SUMNODE),U,10)+1
"RTN","SDPMUT1",159,0)
 ..S $P(SUBNODE,U,10)=$P($G(SUBNODE),U,10)+1
"RTN","SDPMUT1",160,0)
 .I TIUET>10 D
"RTN","SDPMUT1",161,0)
 ..S $P(SUMNODE,U,11)=$P($G(SUMNODE),U,11)+1
"RTN","SDPMUT1",162,0)
 ..S $P(SUBNODE,U,11)=$P($G(SUBNODE),U,11)+1
"RTN","SDPMUT1",163,0)
 .S @OUTARR@("SUMMARY","PI")=SUMNODE
"RTN","SDPMUT1",164,0)
 .S @OUTARR@("SUBTOTAL",ESUB1,"PI")=SUBNODE
"RTN","SDPMUT1",165,0)
 .Q
"RTN","SDPMUT1",166,0)
 ;Increment Scanned Notes for hospital and sort level 1 (if required)
"RTN","SDPMUT1",167,0)
 I @SCRNARR@("SCANNED")["YES"&($P(NOTEINFO,U,2)["D") D
"RTN","SDPMUT1",168,0)
 .S $P(@OUTARR@("SUMMARY"),U,7)=$P($G(@OUTARR@("SUMMARY")),U,7)+1
"RTN","SDPMUT1",169,0)
 .S $P(@OUTARR@("SUBTOTAL",ESUB1),U,7)=$P($G(@OUTARR@("SUBTOTAL",ESUB1)),U,7)+1
"RTN","SDPMUT1",170,0)
 .Q
"RTN","SDPMUT1",171,0)
 ;Only update performance indicators for note status of A
"RTN","SDPMUT1",172,0)
 I $P((NOTEINFO),U,2)="A" D
"RTN","SDPMUT1",173,0)
 .S $P(@OUTARR@("SUMMARY"),U,9)=$P($G(@OUTARR@("SUMMARY")),U,9)+1
"RTN","SDPMUT1",174,0)
 .S $P(@OUTARR@("SUBTOTAL",ESUB1),U,9)=$P($G(@OUTARR@("SUBTOTAL",ESUB1)),U,9)+1
"RTN","SDPMUT1",175,0)
 .Q
"RTN","SDPMUT1",176,0)
 ;Increment unique Stop Codes for hospital and sort level 1
"RTN","SDPMUT1",177,0)
 I SCODE D
"RTN","SDPMUT1",178,0)
 .I '($D(@UNQARR@("SUMMARY","STOP",SCODE))#2) D
"RTN","SDPMUT1",179,0)
 ..S $P(@OUTARR@("SUMMARY"),U,5)=$P($G(@OUTARR@("SUMMARY")),U,5)+1
"RTN","SDPMUT1",180,0)
 ..S @UNQARR@("SUMMARY","STOP",SCODE)=""
"RTN","SDPMUT1",181,0)
 ..Q
"RTN","SDPMUT1",182,0)
 .I '($D(@UNQARR@("SUBTOTAL","STOP",ESUB1,SCODE))#2) D
"RTN","SDPMUT1",183,0)
 ..S $P(@OUTARR@("SUBTOTAL",ESUB1),U,5)=$P($G(@OUTARR@("SUBTOTAL",ESUB1)),U,5)+1
"RTN","SDPMUT1",184,0)
 ..S @UNQARR@("SUBTOTAL","STOP",ESUB1,SCODE)=""
"RTN","SDPMUT1",185,0)
 ..Q
"RTN","SDPMUT1",186,0)
 .Q
"RTN","SDPMUT1",187,0)
 ;Increment unique Providers for hospital and sort level 1
"RTN","SDPMUT1",188,0)
 I PROV D
"RTN","SDPMUT1",189,0)
 .I '($D(@UNQARR@("SUMMARY","PROV",PROV))#2) D
"RTN","SDPMUT1",190,0)
 ..S $P(@OUTARR@("SUMMARY"),U,4)=$P($G(@OUTARR@("SUMMARY")),U,4)+1
"RTN","SDPMUT1",191,0)
 ..S @UNQARR@("SUMMARY","PROV",PROV)=""
"RTN","SDPMUT1",192,0)
 ..Q
"RTN","SDPMUT1",193,0)
 .I '($D(@UNQARR@("SUBTOTAL","PROV",ESUB1,PROV))#2) D
"RTN","SDPMUT1",194,0)
 ..S $P(@OUTARR@("SUBTOTAL",ESUB1),U,4)=$P($G(@OUTARR@("SUBTOTAL",ESUB1)),U,4)+1
"RTN","SDPMUT1",195,0)
 ..S @UNQARR@("SUBTOTAL","PROV",ESUB1,PROV)=""
"RTN","SDPMUT1",196,0)
 ..Q
"RTN","SDPMUT1",197,0)
 .Q
"RTN","SDPMUT1",198,0)
 ;Set detailed node
"RTN","SDPMUT1",199,0)
 S @OUTARR@("DETAIL",ESUB1,ESUB2,DFN,PTRENC)=TIUPROV_"^"_TIUDT_"^"_TIUET
"RTN","SDPMUT1",200,0)
 Q
"RTN","SDPMUT2")
0^9^B4203562
"RTN","SDPMUT2",1,0)
SDPMUT2 ;BPFO/JRC - Performance Monitors Utilities ; 9/25/03 4:26pm
"RTN","SDPMUT2",2,0)
 ;;5.3;SCHEDULING;**292**;AUGUST 13, 1993
"RTN","SDPMUT2",3,0)
 ;
"RTN","SDPMUT2",4,0)
SCREEN(PTRENC,SCRNARR) ;Screen Outpatient Encounter
"RTN","SDPMUT2",5,0)
 ;Input  : PTRENC - Outpatient Encounter IEN
"RTN","SDPMUT2",6,0)
 ;         SCRNARR - Screening array full global reference
"RTN","SDPMUT2",7,0)
 ;Output : 1 = Screen encounter out
"RTN","SDPMUT2",8,0)
 ;         0 = Keep encounter and process
"RTN","SDPMUT2",9,0)
 ;
"RTN","SDPMUT2",10,0)
 ;Declare variables
"RTN","SDPMUT2",11,0)
 N PCODE,SCODE,CLINIC,NODE,Y,I,CHLD,PROV,TYPE
"RTN","SDPMUT2",12,0)
 S NODE=$G(^SCE(PTRENC,0))
"RTN","SDPMUT2",13,0)
 ;Can not be test patient
"RTN","SDPMUT2",14,0)
 I $$TESTPAT^VADPT($P(NODE,U,2)) Q 1
"RTN","SDPMUT2",15,0)
 ;Encounter must be checked out
"RTN","SDPMUT2",16,0)
 I '$P(NODE,U,7) Q 1
"RTN","SDPMUT2",17,0)
 ;Can't be child encounter
"RTN","SDPMUT2",18,0)
 I +$P(NODE,U,6) Q 1
"RTN","SDPMUT2",19,0)
 ;Screen out non-count clinics
"RTN","SDPMUT2",20,0)
 S CLINIC=$P($G(NODE),U,4)
"RTN","SDPMUT2",21,0)
 I 'CLINIC Q 1
"RTN","SDPMUT2",22,0)
 I $P($G(^SC(CLINIC,0)),U,17)="Y" Q 1
"RTN","SDPMUT2",23,0)
 ;Appointment type must be regular
"RTN","SDPMUT2",24,0)
 I $P($G(NODE),U,10) S TYPE=$P($G(^SD(409.1,$P($G(NODE),U,10),0)),U,1)
"RTN","SDPMUT2",25,0)
 I '$D(TYPE) Q 1
"RTN","SDPMUT2",26,0)
 I TYPE'["REGULAR" Q 1
"RTN","SDPMUT2",27,0)
 ;Get primary & secondary stop codes
"RTN","SDPMUT2",28,0)
 S PCODE=+$P(NODE,U,3)
"RTN","SDPMUT2",29,0)
 S CHLD=+$O(^SCE("APAR",PTRENC,0))
"RTN","SDPMUT2",30,0)
 S SCODE=0
"RTN","SDPMUT2",31,0)
 I CHLD D
"RTN","SDPMUT2",32,0)
 .S SCODE=+$P($G(^SCE(CHLD,0)),U,3)
"RTN","SDPMUT2",33,0)
 ;Check stop codes (in inclusion list and/or not in exclusion list)
"RTN","SDPMUT2",34,0)
 S Y=$S($O(@SCRNARR@("DSS",0)):1,$O(@SCRNARR@("DSS-PAIR",0)):1,1:0)
"RTN","SDPMUT2",35,0)
 I 'PCODE Q 1
"RTN","SDPMUT2",36,0)
 I @SCRNARR@("DSS")=1 S Y=0
"RTN","SDPMUT2",37,0)
 I $D(@SCRNARR@("DSS",PCODE)) S Y=0
"RTN","SDPMUT2",38,0)
 I $D(@SCRNARR@("DSS-EXCLUDE",PCODE))!$D(@SCRNARR@("DSS-EXCLUDE",SCODE)) S Y=1
"RTN","SDPMUT2",39,0)
 I Y Q 1
"RTN","SDPMUT2",40,0)
 ;Check division (must be in list)
"RTN","SDPMUT2",41,0)
 S Y=1
"RTN","SDPMUT2",42,0)
 S DIV=$P(NODE,U,11)
"RTN","SDPMUT2",43,0)
 I 'DIV Q 1
"RTN","SDPMUT2",44,0)
 I @SCRNARR@("DIVISION")=1 S Y=0
"RTN","SDPMUT2",45,0)
 I $D(@SCRNARR@("DIVISION",DIV)) S Y=0
"RTN","SDPMUT2",46,0)
 I Y Q 1
"RTN","SDPMUT2",47,0)
 ;Get primary encounter provider
"RTN","SDPMUT2",48,0)
 S Y=1
"RTN","SDPMUT2",49,0)
 S PROV=$$ENCPROV(PTRENC)
"RTN","SDPMUT2",50,0)
 ;Check primary encounter provider (must be in list)
"RTN","SDPMUT2",51,0)
 I 'PROV Q 1
"RTN","SDPMUT2",52,0)
 I @SCRNARR@("PROVIDERS")=1 S Y=0
"RTN","SDPMUT2",53,0)
 I $D(@SCRNARR@("PROVIDER",PROV)) S Y=0
"RTN","SDPMUT2",54,0)
 I Y Q 1
"RTN","SDPMUT2",55,0)
 ;Passed all screens
"RTN","SDPMUT2",56,0)
 Q 0
"RTN","SDPMUT2",57,0)
 ;
"RTN","SDPMUT2",58,0)
NOTEINF(PTRENC) ;Returns performance monitor information for a given encounter
"RTN","SDPMUT2",59,0)
 ;Input : PTRENC - Outpatient Encounter IEN
"RTN","SDPMUT2",60,0)
 ;Output: Results of calling $$PM^TIUPXPM
"RTN","SDPMUT2",61,0)
 ;        String with 6 fields ('^' delimiter)
"RTN","SDPMUT2",62,0)
 ;          1  VIEN
"RTN","SDPMUT2",63,0)
 ;          2  Note Category (A-E)
"RTN","SDPMUT2",64,0)
 ;          3  Signed By (pointer to File #200)
"RTN","SDPMUT2",65,0)
 ;          4  Signed Date.Time (FM format)
"RTN","SDPMUT2",66,0)
 ;          5  Co-signed By (pointer to File #200) - defined only if necessary
"RTN","SDPMUT2",67,0)
 ;          6  Co-signed Date.Time - defined only if necessary    
"RTN","SDPMUT2",68,0)
 ;
"RTN","SDPMUT2",69,0)
 N VIEN
"RTN","SDPMUT2",70,0)
 S VIEN=$P(^SCE(PTRENC,0),U,5)
"RTN","SDPMUT2",71,0)
 Q $$PM^TIUPXPM(VIEN)
"RTN","SDPMUT2",72,0)
 ;
"RTN","SDPMUT2",73,0)
ENCPROV(PTRENC) ;Return primary encounter provider
"RTN","SDPMUT2",74,0)
 ;Input  : ENCPTR - Pointer to Outpatient Encounter
"RTN","SDPMUT2",75,0)
 ;Output : Pointer to New Person File
"RTN","SDPMUT2",76,0)
 ;Note   : 0 returned if primary encounter provider not found
"RTN","SDPMUT2",77,0)
 N NODE,PROV,X
"RTN","SDPMUT2",78,0)
 D GETPRV^SDOE(PTRENC,"NODE")
"RTN","SDPMUT2",79,0)
 S PROV=0
"RTN","SDPMUT2",80,0)
 S X=0 F  S X=+$O(NODE(X)) Q:'X  D  Q:PROV
"RTN","SDPMUT2",81,0)
 .I $P(NODE(X),"^",4)="P" S PROV=+NODE(X)
"RTN","SDPMUT2",82,0)
 Q PROV
"VER")
8.0^22.0
"^DD",409.92,409.92,0)
FIELD^^16^17
"^DD",409.92,409.92,0,"DDA")
N
"^DD",409.92,409.92,0,"DT")
2980408
"^DD",409.92,409.92,0,"ID",2)
W "   ",$P(^(0),U,3)
"^DD",409.92,409.92,0,"ID",4)
W "   ",$P(^(0),U,5)
"^DD",409.92,409.92,0,"IX","AC",409.92,16)

"^DD",409.92,409.92,0,"IX","B",409.92,.01)

"^DD",409.92,409.92,0,"IX","C",409.92,4)

"^DD",409.92,409.92,0,"NM","ACRP REPORT TEMPLATE PARAMETER")

"^DD",409.92,409.92,0,"VRPK")
SD
"^DD",409.92,409.92,.01,0)
ORDER NUMBER^RF^^0;1^K:$L(X)>4!($L(X)<4)!'(X?4N) X
"^DD",409.92,409.92,.01,1,0)
^.1
"^DD",409.92,409.92,.01,1,1,0)
409.92^B
"^DD",409.92,409.92,.01,1,1,1)
S ^SD(409.92,"B",$E(X,1,30),DA)=""
"^DD",409.92,409.92,.01,1,1,2)
K ^SD(409.92,"B",$E(X,1,30),DA)
"^DD",409.92,409.92,.01,3)
Answer must be 4 characters in length, all numeric; where the first 2 characters represent the order of the major category, the second 2 characters represent the order of the minor category.
"^DD",409.92,409.92,.01,21,0)
^^5^5^2980529^
"^DD",409.92,409.92,.01,21,1,0)
This is a 4 digit numeric value that determines where (and in what
"^DD",409.92,409.92,.01,21,2,0)
order) each data element will be displayed by ^DIR for selection in the
"^DD",409.92,409.92,.01,21,3,0)
'ACRP Ad Hoc Report'.  The first to digits determine the order of the
"^DD",409.92,409.92,.01,21,4,0)
major category of this data element.  The second two digits determine the
"^DD",409.92,409.92,.01,21,5,0)
order of the subcategory of this data element (within the major category).
"^DD",409.92,409.92,.01,"DT")
2980319
"^DD",409.92,409.92,1,0)
MAJOR CATEGORY (INTERNAL)^F^^0;2^K:$L(X)>2!($L(X)<2) X
"^DD",409.92,409.92,1,3)
Answer must be 2 characters in length.
"^DD",409.92,409.92,1,21,0)
^^4^4^2980529^
"^DD",409.92,409.92,1,21,1,0)
This is the internal value or acronym that represents the major category
"^DD",409.92,409.92,1,21,2,0)
of this data element.  The 4 character acronym created by concatinating
"^DD",409.92,409.92,1,21,3,0)
the major category acromym with the subcategory acronym is used as a
"^DD",409.92,409.92,1,21,4,0)
unique identifier for this data element.
"^DD",409.92,409.92,1,"DT")
2980319
"^DD",409.92,409.92,2,0)
MAJOR CATEGORY (EXTERNAL)^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",409.92,409.92,2,3)
Answer must be 1-40 characters in length.
"^DD",409.92,409.92,2,21,0)
^^2^2^2980529^
"^DD",409.92,409.92,2,21,1,0)
This is the external representation of the major category (conceptual
"^DD",409.92,409.92,2,21,2,0)
group) of this data element.
"^DD",409.92,409.92,2,"DT")
2980408
"^DD",409.92,409.92,3,0)
MINOR CATEGORY (INTERNAL)^F^^0;4^K:$L(X)>2!($L(X)<2) X
"^DD",409.92,409.92,3,3)
Answer must be 2 characters in length.
"^DD",409.92,409.92,3,21,0)
^^2^2^2980529^
"^DD",409.92,409.92,3,21,1,0)
This is the internal value or acronym that represents the subcategory
"^DD",409.92,409.92,3,21,2,0)
of this data element.
"^DD",409.92,409.92,3,"DT")
2980319
"^DD",409.92,409.92,4,0)
MINOR CATEGORY (EXTERNAL)^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",409.92,409.92,4,1,0)
^.1
"^DD",409.92,409.92,4,1,1,0)
409.92^C^MUMPS
"^DD",409.92,409.92,4,1,1,1)
S ^SD(409.92,"C",X,DA)=""
"^DD",409.92,409.92,4,1,1,2)
K ^SD(409.92,"C",X,DA)
"^DD",409.92,409.92,4,1,1,"DT")
2980319
"^DD",409.92,409.92,4,3)
Answer must be 1-40 characters in length.
"^DD",409.92,409.92,4,21,0)
^^2^2^2980529^
"^DD",409.92,409.92,4,21,1,0)
This is the external representation of the subcategory (actual data value)
"^DD",409.92,409.92,4,21,2,0)
of this data element.
"^DD",409.92,409.92,4,"DT")
2980408
"^DD",409.92,409.92,5,0)
TYPE^S^D:DATE;P:POINTER;F:FIELD;N:NUMBER;T:TEXT;C:COMPUTED;PP:POINTER/POINTER;S:SET OF CODES;^0;6^Q
"^DD",409.92,409.92,5,3)
Indicates the type of data this element is.
"^DD",409.92,409.92,5,21,0)
^^2^2^2980529^
"^DD",409.92,409.92,5,21,1,0)
This field defines the type of data this data element consists of and 
"^DD",409.92,409.92,5,21,2,0)
determines how it will be manipulated generically.
"^DD",409.92,409.92,5,"DT")
2980319
"^DD",409.92,409.92,6,0)
TYPE WHERE^F^^7;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",409.92,409.92,6,3)
Answer must be 1-245 characters in length.  Contains 'where' (global or field) or execute code that sets up DIR array for set of codes.
"^DD",409.92,409.92,6,8.5)
@
"^DD",409.92,409.92,6,9)
@
"^DD",409.92,409.92,6,21,0)
^^9^9^2980529^
"^DD",409.92,409.92,6,21,1,0)
This indicates where or how this data type is found or code to set up
"^DD",409.92,409.92,6,21,2,0)
DIR(0). Specifically:
"^DD",409.92,409.92,6,21,3,0)
 
"^DD",409.92,409.92,6,21,4,0)
       Data type:              Value:
"^DD",409.92,409.92,6,21,5,0)
       ------------------      -------------------------------
"^DD",409.92,409.92,6,21,6,0)
       FIELD                   "file#,field#"
"^DD",409.92,409.92,6,21,7,0)
       POINTER                 global root of file pointed to
"^DD",409.92,409.92,6,21,8,0)
       POINTER/POINTER         "globalroot;field#"
"^DD",409.92,409.92,6,21,9,0)
       SET OF CODES            execute code to set DIR(0)
"^DD",409.92,409.92,6,"DT")
2980319
"^DD",409.92,409.92,7,0)
TYPE SCREEN^F^^8;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",409.92,409.92,7,3)
Answer must be 1-245 characters in length.  Value for DIC("S") or input transform.
"^DD",409.92,409.92,7,8.5)
@
"^DD",409.92,409.92,7,9)
@
"^DD",409.92,409.92,7,21,0)
^^9^9^2980529^
"^DD",409.92,409.92,7,21,1,0)
This field contains logic for DIC("S") or parameters for DIC(0),
"^DD",409.92,409.92,7,21,2,0)
specifically:
"^DD",409.92,409.92,7,21,3,0)
 
"^DD",409.92,409.92,7,21,4,0)
       Data type:              Value:
"^DD",409.92,409.92,7,21,5,0)
       --------------------    -------------------------------------
"^DD",409.92,409.92,7,21,6,0)
       DATE                    value for DIR(0)          (required)
"^DD",409.92,409.92,7,21,7,0)
       NUMBER                  value for DIR(0)          (required)
"^DD",409.92,409.92,7,21,8,0)
       POINTER                 screen logic for DIC("S") (optional)
"^DD",409.92,409.92,7,21,9,0)
       TEXT                    value for DIR(0)          (required)
"^DD",409.92,409.92,7,"DT")
2980319
"^DD",409.92,409.92,8,0)
CHOICE METHOD^S^L:LIST;R:RANGE;LR:LIST OR RANGE;^0;9^Q
"^DD",409.92,409.92,8,3)
Determines selection method(s) allowed for this data element.
"^DD",409.92,409.92,8,21,0)
^^2^2^2980529^
"^DD",409.92,409.92,8,21,1,0)
This determines the choice method(s) the user will be allowed when
"^DD",409.92,409.92,8,21,2,0)
selecting items for this data element.
"^DD",409.92,409.92,8,"DT")
2980319
"^DD",409.92,409.92,9,0)
NUMBER OF CHOICES^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.92,409.92,9,3)
Type a Number between 0 and 999, 0 Decimal Digits.  Limits the number of choices for list selection.
"^DD",409.92,409.92,9,21,0)
^^2^2^2980529^
"^DD",409.92,409.92,9,21,1,0)
This determines the maximum number of item choices a user is allowed
"^DD",409.92,409.92,9,21,2,0)
for this data element.
"^DD",409.92,409.92,9,"DT")
2980319
"^DD",409.92,409.92,10,0)
CODE TO SET 'SDX'^K^^11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",409.92,409.92,10,3)
This is Standard MUMPS code.  Creates SDX array where SDX(internal value)=external value.
"^DD",409.92,409.92,10,9)
@
"^DD",409.92,409.92,10,21,0)
^^6^6^2980529^
"^DD",409.92,409.92,10,21,1,0)
When an encounter is being evaluated, the actual data values for this 
"^DD",409.92,409.92,10,21,2,0)
data element are extracted into an array where:
"^DD",409.92,409.92,10,21,3,0)
 
"^DD",409.92,409.92,10,21,4,0)
       SDX(n)=internal value^external value
"^DD",409.92,409.92,10,21,5,0)
 
"^DD",409.92,409.92,10,21,6,0)
This field contains code which, when executed, will create the SDX array.
"^DD",409.92,409.92,10,"DT")
2980319
"^DD",409.92,409.92,11,0)
OUTPUT TRANSFORM^K^^12;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",409.92,409.92,11,3)
This is Standard MUMPS code.  Performs output transform (where SDX="internal value^external value" or "int;int^ext / ext" for pointer/pointer data types).
"^DD",409.92,409.92,11,9)
@
"^DD",409.92,409.92,11,21,0)
^^2^2^2980529^
"^DD",409.92,409.92,11,21,1,0)
This field contains code which, when executed, will transform the values
"^DD",409.92,409.92,11,21,2,0)
in the SDX(n) array into a different format, if desired.
"^DD",409.92,409.92,11,"DT")
2980319
"^DD",409.92,409.92,12,0)
CODE TO SET 'SDIRQ'^K^^13;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",409.92,409.92,12,3)
This is Standard MUMPS code.  Code that sets SDIRQ array for use as DIR("?").
"^DD",409.92,409.92,12,9)
@
"^DD",409.92,409.92,12,21,0)
^^2^2^2980529^
"^DD",409.92,409.92,12,21,1,0)
This field contains code that sets the SDIRQ array to help text used as
"^DD",409.92,409.92,12,21,2,0)
the DIR("?") array.
"^DD",409.92,409.92,12,"DT")
2980319
"^DD",409.92,409.92,13,0)
ADDITIONAL LIMITATIONS^F^^0;14^K:$L(X)>4!($L(X)<4) X
"^DD",409.92,409.92,13,3)
Answer must be 4 characters in length.  Represents synonymous additional limitations to apply when evaluating limitations.
"^DD",409.92,409.92,13,21,0)
^^3^3^2980529^
"^DD",409.92,409.92,13,21,1,0)
This field contains the acronym representing an additional data element
"^DD",409.92,409.92,13,21,2,0)
to be applied synonymously when evaluating this data element as a 
"^DD",409.92,409.92,13,21,3,0)
limitation.
"^DD",409.92,409.92,13,"DT")
2980319
"^DD",409.92,409.92,14,0)
PRINT FIELD LEVEL^S^0:EXCLUDE;1:ENCOUNTER DETAIL ONLY;2:ALL DETAIL TYPES;^0;15^Q
"^DD",409.92,409.92,14,3)
Determines which data element are selectable for which patient detail types (ie. encounter or patient/visit).
"^DD",409.92,409.92,14,21,0)
^^2^2^2980529^
"^DD",409.92,409.92,14,21,1,0)
This field describes what level of detail this data element is related
"^DD",409.92,409.92,14,21,2,0)
to and restricts selection accordingly.
"^DD",409.92,409.92,14,"DT")
2980319
"^DD",409.92,409.92,15,0)
MULTIPLE VALUED^S^0:NO;1:YES;^0;16^Q
"^DD",409.92,409.92,15,3)
Indicates if this data element is potentially multiply valued.
"^DD",409.92,409.92,15,21,0)
^^2^2^2980529^
"^DD",409.92,409.92,15,21,1,0)
This indicates if the actual data for this data element can potentially
"^DD",409.92,409.92,15,21,2,0)
be multiply valued.
"^DD",409.92,409.92,15,"DT")
2980319
"^DD",409.92,409.92,16,0)
ACRONYM^F^^1;1^K:$L(X)>4!($L(X)<4) X
"^DD",409.92,409.92,16,1,0)
^.1
"^DD",409.92,409.92,16,1,1,0)
409.92^AC^MUMPS
"^DD",409.92,409.92,16,1,1,1)
S ^SD(409.92,"C",X,DA)=""
"^DD",409.92,409.92,16,1,1,2)
K ^SD(409.92,"C",X,DA)
"^DD",409.92,409.92,16,1,1,"%D",0)
^^1^1^2980319^^^
"^DD",409.92,409.92,16,1,1,"%D",1,0)
Adds acronym to 'C' x-ref. for lookup.
"^DD",409.92,409.92,16,1,1,"DT")
2980319
"^DD",409.92,409.92,16,3)
Answer must be 4 characters in length.
"^DD",409.92,409.92,16,21,0)
^^3^3^2980529^
"^DD",409.92,409.92,16,21,1,0)
This field contains the acronym which uniquely identifies this data 
"^DD",409.92,409.92,16,21,2,0)
element.  It is a 4 character value which consists of the internal
"^DD",409.92,409.92,16,21,3,0)
values of the major category and subcategory of this data element.
"^DD",409.92,409.92,16,"DT")
2980319
"^DIC",409.92,409.92,0)
ACRP REPORT TEMPLATE PARAMETER^409.92
"^DIC",409.92,409.92,0,"GL")
^SD(409.92,
"^DIC",409.92,409.92,"%D",0)
^^4^4^2980705^^^^
"^DIC",409.92,409.92,"%D",1,0)
This file contains the parameters necessary to manipulate the various data
"^DIC",409.92,409.92,"%D",2,0)
elements used by the 'ACRP Ad Hoc Report' [SCRPW AD HOC REPORT].
"^DIC",409.92,409.92,"%D",3,0)
 
"^DIC",409.92,409.92,"%D",4,0)
         *** THE CONTENTS OF THIS FILE SHOULD NOT BE EDITED ***
"^DIC",409.92,"B","ACRP REPORT TEMPLATE PARAMETER",409.92)

**INSTALL NAME**
TIU*1.0*168
"BLD",4274,0)
TIU*1.0*168^TEXT INTEGRATION UTILITIES^0^3031001^y
"BLD",4274,4,0)
^9.64PA^^
"BLD",4274,"KRN",0)
^9.67PA^8989.52^19
"BLD",4274,"KRN",.4,0)
.4
"BLD",4274,"KRN",.401,0)
.401
"BLD",4274,"KRN",.402,0)
.402
"BLD",4274,"KRN",.403,0)
.403
"BLD",4274,"KRN",.5,0)
.5
"BLD",4274,"KRN",.84,0)
.84
"BLD",4274,"KRN",3.6,0)
3.6
"BLD",4274,"KRN",3.8,0)
3.8
"BLD",4274,"KRN",9.2,0)
9.2
"BLD",4274,"KRN",9.8,0)
9.8
"BLD",4274,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",4274,"KRN",9.8,"NM",1,0)
TIUPXPM^^0^B20600780
"BLD",4274,"KRN",9.8,"NM","B","TIUPXPM",1)

"BLD",4274,"KRN",19,0)
19
"BLD",4274,"KRN",19,"NM",0)
^9.68A^^
"BLD",4274,"KRN",19.1,0)
19.1
"BLD",4274,"KRN",101,0)
101
"BLD",4274,"KRN",409.61,0)
409.61
"BLD",4274,"KRN",771,0)
771
"BLD",4274,"KRN",870,0)
870
"BLD",4274,"KRN",8989.51,0)
8989.51
"BLD",4274,"KRN",8989.52,0)
8989.52
"BLD",4274,"KRN",8994,0)
8994
"BLD",4274,"KRN","B",.4,.4)

"BLD",4274,"KRN","B",.401,.401)

"BLD",4274,"KRN","B",.402,.402)

"BLD",4274,"KRN","B",.403,.403)

"BLD",4274,"KRN","B",.5,.5)

"BLD",4274,"KRN","B",.84,.84)

"BLD",4274,"KRN","B",3.6,3.6)

"BLD",4274,"KRN","B",3.8,3.8)

"BLD",4274,"KRN","B",9.2,9.2)

"BLD",4274,"KRN","B",9.8,9.8)

"BLD",4274,"KRN","B",19,19)

"BLD",4274,"KRN","B",19.1,19.1)

"BLD",4274,"KRN","B",101,101)

"BLD",4274,"KRN","B",409.61,409.61)

"BLD",4274,"KRN","B",771,771)

"BLD",4274,"KRN","B",870,870)

"BLD",4274,"KRN","B",8989.51,8989.51)

"BLD",4274,"KRN","B",8989.52,8989.52)

"BLD",4274,"KRN","B",8994,8994)

"BLD",4274,"QUES",0)
^9.62^^
"BLD",4274,"REQB",0)
^9.611^^
"MBREQ")
0
"PKG",391,-1)
1^1
"PKG",391,0)
TEXT INTEGRATION UTILITIES^TIU^Text Integration Utilities 
"PKG",391,20,0)
^9.402P^^
"PKG",391,22,0)
^9.49I^1^1
"PKG",391,22,1,0)
1.0^3010801^3010808^66476
"PKG",391,22,1,"PAH",1,0)
168^3031001^3507
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","TIUPXPM")
0^1^B20600780
"RTN","TIUPXPM",1,0)
TIUPXPM ;SLC OIFO/DKK,GSS - ADDITIONAL PERFORMANCE MONITORS ; 07/01/03
"RTN","TIUPXPM",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**168**Jun 20, 1997
"RTN","TIUPXPM",3,0)
 ;External reference to File ^AUPNVPRV supported by DBIA 1541
"RTN","TIUPXPM",4,0)
 ;External reference to File ^AUPNVSIT supported by DBIA 1625 & DBIA 3580
"RTN","TIUPXPM",5,0)
 ;-----------------------------------
"RTN","TIUPXPM",6,0)
 ;Determines if note has been appropriately signed in a timely manner.
"RTN","TIUPXPM",7,0)
 ;Originally written as an API for use by PIMS
"RTN","TIUPXPM",8,0)
 ;
"RTN","TIUPXPM",9,0)
 ;Note
"RTN","TIUPXPM",10,0)
 ;Category  Type
"RTN","TIUPXPM",11,0)
 ;  A       No note for the Visit IEN
"RTN","TIUPXPM",12,0)
 ;  B       Acceptable Note ('signed')
"RTN","TIUPXPM",13,0)
 ;  C       Unacceptable Note ('unsigned')
"RTN","TIUPXPM",14,0)
 ;  D       Scanned Image
"RTN","TIUPXPM",15,0)
 ;  E       Purged, Deleted, or Retracted Note
"RTN","TIUPXPM",16,0)
 ;
"RTN","TIUPXPM",17,0)
 ;TIU Note Status                                    Possible
"RTN","TIUPXPM",18,0)
 ;Code      Description                              Category
"RTN","TIUPXPM",19,0)
 ;none      No corresponding Progress Note for VIEN     A
"RTN","TIUPXPM",20,0)
 ; 1        Undictated                                  C or D
"RTN","TIUPXPM",21,0)
 ; 2        Untranscribed                               C
"RTN","TIUPXPM",22,0)
 ; 3        Unreleased                                  -
"RTN","TIUPXPM",23,0)
 ; 4        Unverified                                  C or D
"RTN","TIUPXPM",24,0)
 ; 5        Unsigned                                    C
"RTN","TIUPXPM",25,0)
 ; 6        Uncosigned                                  C
"RTN","TIUPXPM",26,0)
 ; 7        Completed                                   B or C
"RTN","TIUPXPM",27,0)
 ; 8        Amended                                     B or C
"RTN","TIUPXPM",28,0)
 ; 9        Purged                                      E
"RTN","TIUPXPM",29,0)
 ;11        Active                                      C
"RTN","TIUPXPM",30,0)
 ;13        Inactive                                    C or D
"RTN","TIUPXPM",31,0)
 ;14        Deleted                                     E
"RTN","TIUPXPM",32,0)
 ;15        Retracted                                   E
"RTN","TIUPXPM",33,0)
 ;variable  Scanned Image                               D
"RTN","TIUPXPM",34,0)
 ;
"RTN","TIUPXPM",35,0)
 ;Primary variables Used:
"RTN","TIUPXPM",36,0)
 ;ARY()      = Array of all visit providers returned by GETPRV^PXAPIOE
"RTN","TIUPXPM",37,0)
 ;CSTATC     = ","_Document status_","
"RTN","TIUPXPM",38,0)
 ;DOCTYP()   = Array of all note types based on Progress Note Class
"RTN","TIUPXPM",39,0)
 ;SIG        = Pointer to File #200 of signer^FM Date.Time of signing
"RTN","TIUPXPM",40,0)
 ;SIGA       = Pointer to F#200 of Amended note signer^FM Date.Time
"RTN","TIUPXPM",41,0)
 ;SIGC       = Pointer to F#200 of note Co-Signer^FM Date.Time
"RTN","TIUPXPM",42,0)
 ;STAT       = Document status
"RTN","TIUPXPM",43,0)
 ;TIUIEN     = TIU Note IEN
"RTN","TIUPXPM",44,0)
 ;VIEN       = Visit IEN
"RTN","TIUPXPM",45,0)
 ;VPRV()     = Array 
"RTN","TIUPXPM",46,0)
 ;X,Y,Z      = Scratch variables
"RTN","TIUPXPM",47,0)
 ;
"RTN","TIUPXPM",48,0)
 ;Returns:
"RTN","TIUPXPM",49,0)
 ;String with 6 fields ('^' delimiter)
"RTN","TIUPXPM",50,0)
 ; 1  VIEN
"RTN","TIUPXPM",51,0)
 ; 2  Note Category (A-E)
"RTN","TIUPXPM",52,0)
 ; 3  Signed By (pointer to File #200)
"RTN","TIUPXPM",53,0)
 ; 4  Signed Date.Time (FM format)
"RTN","TIUPXPM",54,0)
 ; 5  Co-signed By (pointer to File #200) - defined only if necessary
"RTN","TIUPXPM",55,0)
 ; 6  Co-signed Date.Time - defined only if necessary
"RTN","TIUPXPM",56,0)
 ;-------------------------
"RTN","TIUPXPM",57,0)
 ;
"RTN","TIUPXPM",58,0)
PM(VIEN) ; external access point
"RTN","TIUPXPM",59,0)
 ; quit and return null if visit IEN is null
"RTN","TIUPXPM",60,0)
 I $G(VIEN)="" Q ""
"RTN","TIUPXPM",61,0)
 N ARY,CSTATC,DATE,PC,SIG,SIGA,SIGC,STAT,TIUIEN,VPRV
"RTN","TIUPXPM",62,0)
 S (TIUIEN,X,Z)=""
"RTN","TIUPXPM",63,0)
 ; get providers (returned in ARY array) who saw the patient
"RTN","TIUPXPM",64,0)
 D GETPRV^PXAPIOE(VIEN,"ARY")  ; DBIA 1541
"RTN","TIUPXPM",65,0)
 ; create VPRV array of valid providers
"RTN","TIUPXPM",66,0)
 D PROV
"RTN","TIUPXPM",67,0)
 ; initalize return string
"RTN","TIUPXPM",68,0)
 S Y=""
"RTN","TIUPXPM",69,0)
 ; looking for notes re: visit/encounter, get each document in turn
"RTN","TIUPXPM",70,0)
 F  S TIUIEN=$O(^TIU(8925,"V",VIEN,TIUIEN)) Q:TIUIEN=""  D  Q:$E(Y)="B"
"RTN","TIUPXPM",71,0)
 . ; get status of note, signers, and dates
"RTN","TIUPXPM",72,0)
 . D STAT
"RTN","TIUPXPM",73,0)
 . ;
"RTN","TIUPXPM",74,0)
 . ; Category B: Co-signed note by Primary Provider
"RTN","TIUPXPM",75,0)
 . I $D(SIGC),$G(VPRV(+SIGC))="P" D  Q:$E(Y)="B"
"RTN","TIUPXPM",76,0)
 .. Q:'$D(^TIU(8925,TIUIEN,"TEXT"))
"RTN","TIUPXPM",77,0)
 .. I STAT=7 S Y="B"_U_SIG_U_SIGC Q
"RTN","TIUPXPM",78,0)
 .. I STAT=8 S Y="B"_U_SIGA_U_SIGC
"RTN","TIUPXPM",79,0)
 . ;
"RTN","TIUPXPM",80,0)
 . ; Cateogory B: Primary Provider signed & completed note
"RTN","TIUPXPM",81,0)
 . I $D(SIG),$G(VPRV(+SIG))="P" D  Q:$E(Y)="B"
"RTN","TIUPXPM",82,0)
 .. I STAT=7,$D(^TIU(8925,TIUIEN,"TEXT")) S Y="B"_U_SIG_U_U
"RTN","TIUPXPM",83,0)
 . ;
"RTN","TIUPXPM",84,0)
 . ; Category B: Primary Provider Amended note
"RTN","TIUPXPM",85,0)
 . I $D(SIGA),$G(VPRV(+SIGA))="P" D  Q:$E(Y)="B"
"RTN","TIUPXPM",86,0)
 .. I STAT=8,$D(^TIU(8925,TIUIEN,"TEXT")) S Y="B"_U_SIGA_U_U
"RTN","TIUPXPM",87,0)
 . ;
"RTN","TIUPXPM",88,0)
 . ; Category B: Signer a Secondary Provider but in VPRV & note complete
"RTN","TIUPXPM",89,0)
 . I STAT=7,$D(SIG),$G(VPRV(+SIG))="S" S Y="B"_U_SIG_U_U Q
"RTN","TIUPXPM",90,0)
 . ;
"RTN","TIUPXPM",91,0)
 . ; Category D: Scanned Image
"RTN","TIUPXPM",92,0)
 . I $D(^TIU(8925.91,"B",TIUIEN)) S Y="D"_U_U_U_U Q
"RTN","TIUPXPM",93,0)
 . ;
"RTN","TIUPXPM",94,0)
 . ; Category C: Unsigned note
"RTN","TIUPXPM",95,0)
 . I ",1,2,4,5,6,7,8,11,13,"[CSTATC,Y="" S Y="C"_U_U_U_U Q
"RTN","TIUPXPM",96,0)
 . ;
"RTN","TIUPXPM",97,0)
 . ; Category E: Purged, deleted, or retracted
"RTN","TIUPXPM",98,0)
 . I ",9,14,15,"[CSTATC,Y="" S Y="E"_U_U_U_U Q
"RTN","TIUPXPM",99,0)
 ;
"RTN","TIUPXPM",100,0)
 ; Category A: no note found for this visit
"RTN","TIUPXPM",101,0)
 S:Y="" Y="A"_U_U_U_U
"RTN","TIUPXPM",102,0)
 ; return Y string w/ first piece being VIEN
"RTN","TIUPXPM",103,0)
 S Y=VIEN_U_Y
"RTN","TIUPXPM",104,0)
 Q Y
"RTN","TIUPXPM",105,0)
 ;
"RTN","TIUPXPM",106,0)
STAT ; get status of note and signer
"RTN","TIUPXPM",107,0)
 K SIG,SIGA,SIGC
"RTN","TIUPXPM",108,0)
 S STAT=$P($G(^TIU(8925,TIUIEN,0)),U,5),CSTATC=","_STAT_","
"RTN","TIUPXPM",109,0)
 ; document amended (STAT=8)
"RTN","TIUPXPM",110,0)
 I STAT=8 S X=$G(^TIU(8925,TIUIEN,16)) D
"RTN","TIUPXPM",111,0)
 . ; amended by ($P(X,U,2))
"RTN","TIUPXPM",112,0)
 . I $P(X,U,2) S SIGA=$P(X,U,2)_U_$P(X,U)
"RTN","TIUPXPM",113,0)
 S X=$G(^TIU(8925,TIUIEN,15))
"RTN","TIUPXPM",114,0)
 ; co-signature needed ($P(X,U,6)) 1=Yes, 0=No
"RTN","TIUPXPM",115,0)
 ;   per J.Hawsey co-sig field is not reliably set, thus not used
"RTN","TIUPXPM",116,0)
 ; co-signer ($P(X,U,8))
"RTN","TIUPXPM",117,0)
 I $P(X,U,8) S SIGC=$P(X,U,8)_U_$P(X,U,7)
"RTN","TIUPXPM",118,0)
 ; signer of document ($P(X,U,2))
"RTN","TIUPXPM",119,0)
 I $P(X,U,2) S SIG=$P(X,U,2)_U_$P(X,U)
"RTN","TIUPXPM",120,0)
 Q
"RTN","TIUPXPM",121,0)
 ;
"RTN","TIUPXPM",122,0)
PROV ; validate providers by $O through provider array (ARY) and
"RTN","TIUPXPM",123,0)
 ; creating VPRV array, where VPRV(VPRV)=Primary/Secondary^PersonClass
"RTN","TIUPXPM",124,0)
 S X=""
"RTN","TIUPXPM",125,0)
 F  S X=$O(ARY(X)) Q:X=""  D
"RTN","TIUPXPM",126,0)
 . ; Z=VPRV^PTIEN^VIEN^Prim/Secondary^Op/Attend^Ptr2PersonClass
"RTN","TIUPXPM",127,0)
 . S Z=ARY(X),VPRV=$P(Z,U)
"RTN","TIUPXPM",128,0)
 . ; Get Person Class information at the time of the visit
"RTN","TIUPXPM",129,0)
 . S PC=$P($$GET^XUA4A72(VPRV,+$G(^AUPNVSIT(VIEN,0))),U,7)  ; DBIA 1625 & 3580
"RTN","TIUPXPM",130,0)
 . S VPRV(VPRV)=$P(Z,U,4)
"RTN","TIUPXPM",131,0)
 . ; quit if provider is Primary (that is, accept provider)
"RTN","TIUPXPM",132,0)
 . Q:$P(VPRV(VPRV),U)="P"
"RTN","TIUPXPM",133,0)
 . ; PA/NP's are V100000 through V100618, inclusive
"RTN","TIUPXPM",134,0)
 . ; Physician (MD/DO) Resident, Allopathic is V115500
"RTN","TIUPXPM",135,0)
 . ; Physician (MD/DO) Resident, Osteopathic is V115600
"RTN","TIUPXPM",136,0)
 . ; if PC is any of the above, then accept provider, otherwise - don't
"RTN","TIUPXPM",137,0)
 . ; note: already accepted Primary provider above
"RTN","TIUPXPM",138,0)
 . I (PC]"V100618"!(PC']"V099999")),(PC'="V115500"),(PC'="V115600") S VPRV(VPRV)="X"
"RTN","TIUPXPM",139,0)
 Q
"VER")
8.0^22.0
**END**
**END**
