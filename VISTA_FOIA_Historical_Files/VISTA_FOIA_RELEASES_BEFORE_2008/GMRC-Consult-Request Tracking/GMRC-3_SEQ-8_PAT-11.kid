Released GMRC*3*11 SEQ #8
Extracted from mail message
**KIDS**:GMRC*3.0*11^

**INSTALL NAME**
GMRC*3.0*11
"BLD",1848,0)
GMRC*3.0*11^CONSULT/REQUEST TRACKING^0^2991130^y
"BLD",1848,1,0)
^^1^1^2990803^
"BLD",1848,1,1,0)
See the National Patch Module for full description of enhancements.
"BLD",1848,4,0)
^9.64PA^123.5^1
"BLD",1848,4,123.5,0)
123.5
"BLD",1848,4,123.5,2,0)
^9.641^123.58^5
"BLD",1848,4,123.5,2,123.5,0)
REQUEST SERVICES  (File-top level)
"BLD",1848,4,123.5,2,123.5,1,0)
^9.6411^.08^3
"BLD",1848,4,123.5,2,123.5,1,.06,0)
UNRESTRICTED ACCESS
"BLD",1848,4,123.5,2,123.5,1,.07,0)
PROCESS PARENTS FOR UPDATES
"BLD",1848,4,123.5,2,123.5,1,.08,0)
PROCESS PARENTS FOR NOTIFS
"BLD",1848,4,123.5,2,123.555,0)
ADMINISTRATIVE UPDATE USERS  (sub-file)
"BLD",1848,4,123.5,2,123.555,1,0)
^9.6411^.02^2
"BLD",1848,4,123.5,2,123.555,1,.01,0)
ADMINISTRATIVE UPDATE USER
"BLD",1848,4,123.5,2,123.555,1,.02,0)
NOTIFICATION RECIPIENT
"BLD",1848,4,123.5,2,123.57,0)
UPDATE TEAMS W/O NOTIFICATIONS  (sub-file)
"BLD",1848,4,123.5,2,123.57,1,0)
^9.6411^^
"BLD",1848,4,123.5,2,123.58,0)
ADMINISTRATIVE UPDATE TEAMS  (sub-file)
"BLD",1848,4,123.5,2,123.58,1,0)
^9.6411^^
"BLD",1848,4,123.5,2,123.59,0)
UPDATE USER CLASSES W/O NOTIFS  (sub-file)
"BLD",1848,4,123.5,2,123.59,1,0)
^9.6411^^
"BLD",1848,4,123.5,222)
y^n^p^^^^n
"BLD",1848,4,"APDD",123.5,123.5)

"BLD",1848,4,"APDD",123.5,123.5,.06)

"BLD",1848,4,"APDD",123.5,123.5,.07)

"BLD",1848,4,"APDD",123.5,123.5,.08)

"BLD",1848,4,"APDD",123.5,123.555)

"BLD",1848,4,"APDD",123.5,123.555,.01)

"BLD",1848,4,"APDD",123.5,123.555,.02)

"BLD",1848,4,"APDD",123.5,123.57)

"BLD",1848,4,"APDD",123.5,123.58)

"BLD",1848,4,"APDD",123.5,123.59)

"BLD",1848,4,"B",123.5,123.5)

"BLD",1848,"ABPKG")
n
"BLD",1848,"KRN",0)
^9.67PA^19^18
"BLD",1848,"KRN",.4,0)
.4
"BLD",1848,"KRN",.401,0)
.401
"BLD",1848,"KRN",.402,0)
.402
"BLD",1848,"KRN",.402,"NM",0)
^9.68A^2^2
"BLD",1848,"KRN",.402,"NM",1,0)
GMRC SETUP REQUEST SERVICE    FILE #123.5^123.5^0
"BLD",1848,"KRN",.402,"NM",2,0)
GMRC SERVICE USER MGMT    FILE #123.5^123.5^0
"BLD",1848,"KRN",.402,"NM","B","GMRC SERVICE USER MGMT    FILE #123.5",2)

"BLD",1848,"KRN",.402,"NM","B","GMRC SETUP REQUEST SERVICE    FILE #123.5",1)

"BLD",1848,"KRN",.403,0)
.403
"BLD",1848,"KRN",.403,"NM",0)
^9.68A^^
"BLD",1848,"KRN",.5,0)
.5
"BLD",1848,"KRN",.84,0)
.84
"BLD",1848,"KRN",3.6,0)
3.6
"BLD",1848,"KRN",3.8,0)
3.8
"BLD",1848,"KRN",9.2,0)
9.2
"BLD",1848,"KRN",9.8,0)
9.8
"BLD",1848,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",1848,"KRN",9.8,"NM",1,0)
GMRCAU^^0^B51123463
"BLD",1848,"KRN",9.8,"NM",2,0)
GMRCNOTF^^0^B4739068
"BLD",1848,"KRN",9.8,"NM",3,0)
GMRCT^^0^B21880893
"BLD",1848,"KRN",9.8,"NM",4,0)
GMRCACTM^^0^B3201818
"BLD",1848,"KRN",9.8,"NM","B","GMRCACTM",4)

"BLD",1848,"KRN",9.8,"NM","B","GMRCAU",1)

"BLD",1848,"KRN",9.8,"NM","B","GMRCNOTF",2)

"BLD",1848,"KRN",9.8,"NM","B","GMRCT",3)

"BLD",1848,"KRN",19,0)
19
"BLD",1848,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",1848,"KRN",19,"NM",1,0)
GMRC MGR^^2
"BLD",1848,"KRN",19,"NM",2,0)
GMRC NOTIFCATION RECIPS^^0
"BLD",1848,"KRN",19,"NM",3,0)
GMRC UPDATE AUTHORITY^^0
"BLD",1848,"KRN",19,"NM",4,0)
GMRC USER NOTIFICATION^^0
"BLD",1848,"KRN",19,"NM","B","GMRC MGR",1)

"BLD",1848,"KRN",19,"NM","B","GMRC NOTIFCATION RECIPS",2)

"BLD",1848,"KRN",19,"NM","B","GMRC UPDATE AUTHORITY",3)

"BLD",1848,"KRN",19,"NM","B","GMRC USER NOTIFICATION",4)

"BLD",1848,"KRN",19.1,0)
19.1
"BLD",1848,"KRN",101,0)
101
"BLD",1848,"KRN",101,"NM",0)
^9.68A^6^6
"BLD",1848,"KRN",101,"NM",1,0)
GMRCACTM DISPLAY ACTIONS^^2
"BLD",1848,"KRN",101,"NM",2)
^^^
"BLD",1848,"KRN",101,"NM",2,0)
VALM LAST SCREEN^^4^
"BLD",1848,"KRN",101,"NM",3,0)
GMRCACTM NOTIF RECIP^^0
"BLD",1848,"KRN",101,"NM",4,0)
GMRCU SELECT NOTIF SERV^^0
"BLD",1848,"KRN",101,"NM",5,0)
GMRCACTM USER REVIEW SCREEN^^2
"BLD",1848,"KRN",101,"NM",6,0)
GMRCACT COMMENT ORDERS^^4^
"BLD",1848,"KRN",101,"NM","B","GMRCACT COMMENT ORDERS",6)

"BLD",1848,"KRN",101,"NM","B","GMRCACTM DISPLAY ACTIONS",1)

"BLD",1848,"KRN",101,"NM","B","GMRCACTM NOTIF RECIP",3)

"BLD",1848,"KRN",101,"NM","B","GMRCACTM USER REVIEW SCREEN",5)

"BLD",1848,"KRN",101,"NM","B","GMRCU SELECT NOTIF SERV",4)

"BLD",1848,"KRN",101,"NM","B","VALM LAST SCREEN",2)

"BLD",1848,"KRN",409.61,0)
409.61
"BLD",1848,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",1848,"KRN",409.61,"NM",1,0)
GMRC NOTIFICATION RECIPS^^0
"BLD",1848,"KRN",409.61,"NM","B","GMRC NOTIFICATION RECIPS",1)

"BLD",1848,"KRN",771,0)
771
"BLD",1848,"KRN",869.2,0)
869.2
"BLD",1848,"KRN",870,0)
870
"BLD",1848,"KRN",8994,0)
8994
"BLD",1848,"KRN","B",.4,.4)

"BLD",1848,"KRN","B",.401,.401)

"BLD",1848,"KRN","B",.402,.402)

"BLD",1848,"KRN","B",.403,.403)

"BLD",1848,"KRN","B",.5,.5)

"BLD",1848,"KRN","B",.84,.84)

"BLD",1848,"KRN","B",3.6,3.6)

"BLD",1848,"KRN","B",3.8,3.8)

"BLD",1848,"KRN","B",9.2,9.2)

"BLD",1848,"KRN","B",9.8,9.8)

"BLD",1848,"KRN","B",19,19)

"BLD",1848,"KRN","B",19.1,19.1)

"BLD",1848,"KRN","B",101,101)

"BLD",1848,"KRN","B",409.61,409.61)

"BLD",1848,"KRN","B",771,771)

"BLD",1848,"KRN","B",869.2,869.2)

"BLD",1848,"KRN","B",870,870)

"BLD",1848,"KRN","B",8994,8994)

"BLD",1848,"QUES",0)
^9.62^^
"BLD",1848,"REQB",0)
^9.611^4^4
"BLD",1848,"REQB",1,0)
GMRC*3.0*1^2
"BLD",1848,"REQB",2,0)
GMRC*3.0*4^2
"BLD",1848,"REQB",3,0)
GMRC*3.0*5^2
"BLD",1848,"REQB",4,0)
GMRC*3.0*10^2
"BLD",1848,"REQB","B","GMRC*3.0*1",1)

"BLD",1848,"REQB","B","GMRC*3.0*10",4)

"BLD",1848,"REQB","B","GMRC*3.0*4",2)

"BLD",1848,"REQB","B","GMRC*3.0*5",3)

"FIA",123.5)
REQUEST SERVICES
"FIA",123.5,0)
^GMR(123.5,
"FIA",123.5,0,0)
123.5
"FIA",123.5,0,1)
y^n^p^^^^n
"FIA",123.5,0,10)

"FIA",123.5,0,11)

"FIA",123.5,0,"RLRO")

"FIA",123.5,0,"VR")
3.0^GMRC
"FIA",123.5,123.5)
1
"FIA",123.5,123.5,.06)

"FIA",123.5,123.5,.07)

"FIA",123.5,123.5,.08)

"FIA",123.5,123.5,123.31)

"FIA",123.5,123.5,123.33)

"FIA",123.5,123.5,123.34)

"FIA",123.5,123.5,123.35)

"FIA",123.5,123.555)
1
"FIA",123.5,123.555,.01)

"FIA",123.5,123.555,.02)

"FIA",123.5,123.57)
0
"FIA",123.5,123.58)
0
"FIA",123.5,123.59)
0
"KRN",.402,763,-1)
0^1
"KRN",.402,763,0)
GMRC SETUP REQUEST SERVICE^2991129.0848^^123.5^^^2991129
"KRN",.402,763,"DIAB",1,1,123.51,0)
ALL
"KRN",.402,763,"DIAB",1,1,123.52,0)
ALL
"KRN",.402,763,"DIAB",1,1,123.53,0)
ALL
"KRN",.402,763,"DIAB",1,1,123.54,0)
ALL
"KRN",.402,763,"DIAB",1,1,123.55,0)
ALL
"KRN",.402,763,"DIAB",1,1,123.555,0)
ALL
"KRN",.402,763,"DIAB",1,1,123.57,0)
ALL
"KRN",.402,763,"DIAB",1,1,123.58,0)
ALL
"KRN",.402,763,"DIAB",1,1,123.59,0)
ALL
"KRN",.402,763,"DIAB",3,0,123.5,0)
1.11;"ABBREVIATED PRINT NAME (Optional)"
"KRN",.402,763,"DR",1,123.5)
.01;123.01///^S X="CONSULTS";1.11ABBREVIATED PRINT NAME (Optional)~;1.1;123.03///^S X="GMRCACTM SERVICE ACTION MENU";2;123.09;D EN^DDIOL(" ");123.08;123.1;123.2;.08;D EN^DDIOL(" ");123.3;123.31;123.35;123.33;123.34;.07;
"KRN",.402,763,"DR",1,123.5,1)
D EN^DDIOL(" ");123.5;.06;10;101;
"KRN",.402,763,"DR",2,123.51)
.01:2
"KRN",.402,763,"DR",2,123.5101)
.01;
"KRN",.402,763,"DR",2,123.52)
.01
"KRN",.402,763,"DR",2,123.53)
.01
"KRN",.402,763,"DR",2,123.54)
.01:2
"KRN",.402,763,"DR",2,123.55)
.01
"KRN",.402,763,"DR",2,123.555)
.01:.02
"KRN",.402,763,"DR",2,123.57)
.01
"KRN",.402,763,"DR",2,123.58)
.01:.02
"KRN",.402,763,"DR",2,123.59)
.01
"KRN",.402,764,-1)
0^2
"KRN",.402,764,0)
GMRC SERVICE USER MGMT^2991129.0842^^123.5^^^2991129
"KRN",.402,764,"DIAB",1,1,123.53,0)
ALL
"KRN",.402,764,"DIAB",1,1,123.54,0)
ALL
"KRN",.402,764,"DIAB",1,1,123.55,0)
ALL
"KRN",.402,764,"DIAB",1,1,123.555,0)
ALL
"KRN",.402,764,"DIAB",1,1,123.57,0)
ALL
"KRN",.402,764,"DIAB",1,1,123.58,0)
ALL
"KRN",.402,764,"DIAB",1,1,123.59,0)
ALL
"KRN",.402,764,"DR",1,123.5)
123.08;123.1;123.2;D EN^DDIOL(" ");123.3;123.31;123.35;123.33;123.34;123.5;
"KRN",.402,764,"DR",2,123.53)
.01
"KRN",.402,764,"DR",2,123.54)
.01:2
"KRN",.402,764,"DR",2,123.55)
.01
"KRN",.402,764,"DR",2,123.555)
.01:.02
"KRN",.402,764,"DR",2,123.57)
.01
"KRN",.402,764,"DR",2,123.58)
.01:.02
"KRN",.402,764,"DR",2,123.59)
.01
"KRN",19,2046,-1)
2^1
"KRN",19,2046,0)
GMRC MGR^Consult Management^^M^.5^^^^^^^128
"KRN",19,2046,10,0)
^19.01PI^15^14
"KRN",19,2046,10,12,0)
7814^UA^26
"KRN",19,2046,10,12,"^")
GMRC UPDATE AUTHORITY
"KRN",19,2046,10,13,0)
7817^UN^27
"KRN",19,2046,10,13,"^")
GMRC USER NOTIFICATION
"KRN",19,2046,10,14,0)
7821^NR^28
"KRN",19,2046,10,14,"^")
GMRC NOTIFCATION RECIPS
"KRN",19,2046,"U")
CONSULT MANAGEMENT
"KRN",19,7814,-1)
0^3
"KRN",19,7814,0)
GMRC UPDATE AUTHORITY^Determine users' update authority^^R^^^^^^^^CONSULT/REQUEST TRACKING^^1
"KRN",19,7814,1,0)
^^2^2^2990722^^
"KRN",19,7814,1,1,0)
This option will determine a selected user's update authority for a
"KRN",19,7814,1,2,0)
selected service in the consult hierarchy.
"KRN",19,7814,20)
D TSTINTRO^GMRCAU
"KRN",19,7814,25)
TEST^GMRCAU
"KRN",19,7814,"U")
DETERMINE USERS' UPDATE AUTHOR
"KRN",19,7817,-1)
0^4
"KRN",19,7817,0)
GMRC USER NOTIFICATION^Determine if user is notification recipient^^R^^^^^^^^CONSULT/REQUEST TRACKING^^1
"KRN",19,7817,1,0)
^^2^2^2990722^^
"KRN",19,7817,1,1,0)
This option will determine if a user would be a notification recipient
"KRN",19,7817,1,2,0)
for a selected service.
"KRN",19,7817,20)
D TSTINTRO^GMRCT
"KRN",19,7817,25)
TEST^GMRCT
"KRN",19,7817,99)
57911,75462
"KRN",19,7817,"U")
DETERMINE IF USER IS NOTIFICAT
"KRN",19,7821,-1)
0^2
"KRN",19,7821,0)
GMRC NOTIFCATION RECIPS^Determine notfication recipients for a service^^R^^^^^^^^CONSULT/REQUEST TRACKING
"KRN",19,7821,25)
EN^GMRCNOTF
"KRN",19,7821,"U")
DETERMINE NOTFICATION RECIPIEN
"KRN",101,1393,-1)
2^5
"KRN",101,1393,0)
GMRCACTM USER REVIEW SCREEN^Consult/Request Review^^M^.5^^^^^^^128
"KRN",101,1393,10,0)
^101.01PA^16^6
"KRN",101,1393,10,16,0)
1717^CM^7^
"KRN",101,1393,10,16,"^")
GMRCACT COMMENT ORDERS
"KRN",101,1717,-1)
4^6
"KRN",101,1717,0)
GMRCACT COMMENT ORDERS
"KRN",101,2762,-1)
4^2
"KRN",101,2762,0)
VALM LAST SCREEN
"KRN",101,5136,-1)
2^1
"KRN",101,5136,0)
GMRCACTM DISPLAY ACTIONS^Display menu^^M^18^^^^^^^128
"KRN",101,5136,10,0)
^101.01PA^27^13
"KRN",101,5136,10,18,0)
2762^LS^4^
"KRN",101,5136,10,18,"^")
VALM LAST SCREEN
"KRN",101,5433,-1)
0^3
"KRN",101,5433,0)
GMRCACTM NOTIF RECIP^Action Menu for notification recipients^^M^^^^^^^^CONSULT/REQUEST TRACKING
"KRN",101,5433,4)
26^5
"KRN",101,5433,10,0)
^101.01PA^1^1
"KRN",101,5433,10,1,0)
5434^SS^1^
"KRN",101,5433,10,1,"^")
GMRCU SELECT NOTIF SERV
"KRN",101,5433,26)
D SHOW^VALM
"KRN",101,5433,99)
57988,39196
"KRN",101,5434,-1)
0^4
"KRN",101,5434,0)
GMRCU SELECT NOTIF SERV^Select new Service^^A^^^^^^^^CONSULT/REQUEST TRACKING
"KRN",101,5434,15)
S VALMBCK="R"
"KRN",101,5434,20)
D SELSS^GMRCNOTF,HDR^GMRCNOTF,INIT^GMRCNOTF
"KRN",101,5434,99)
57920,72578
"KRN",409.61,747,-1)
0^1
"KRN",409.61,747,0)
GMRC NOTIFICATION RECIPS^1^^80^5^21^0^1^^GMRCACTM NOTIF RECIP^Consult Notif Recipients^1^^1
"KRN",409.61,747,1)
^GMRCACTM DISPLAY ACTIONS
"KRN",409.61,747,"ARRAY")
 ^TMP("GMRCNOTF",$J)
"KRN",409.61,747,"COL",0)
^409.621^2^2
"KRN",409.61,747,"COL",1,0)
RECIPIENT^2^34^Notification Recipient^R^0
"KRN",409.61,747,"COL",2,0)
SERVICE^35^40^Service^R
"KRN",409.61,747,"COL","AIDENT",0,1)

"KRN",409.61,747,"COL","B","RECIPIENT",1)

"KRN",409.61,747,"COL","B","SERVICE",2)

"KRN",409.61,747,"FNL")
D EXIT^GMRCNOTF
"KRN",409.61,747,"HDR")
D HDR^GMRCNOTF
"KRN",409.61,747,"HLP")
D HELP^GMRCNOTF
"KRN",409.61,747,"INIT")
D INIT^GMRCNOTF
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",128,-1)
1^1
"PKG",128,0)
CONSULT/REQUEST TRACKING^GMRC^CONSULTS/REQUESTS
"PKG",128,20,0)
^9.402P^^
"PKG",128,22,0)
^9.49I^1^1
"PKG",128,22,1,0)
3.0^2980101
"PKG",128,22,1,"PAH",1,0)
11^2991130
"PKG",128,22,1,"PAH",1,1,0)
^^1^1^2991130
"PKG",128,22,1,"PAH",1,1,1,0)
See the National Patch Module for full description of enhancements.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","GMRCACTM")
0^4^B3201818
"RTN","GMRCACTM",1,0)
GMRCACTM ; SLC/DLT,DCM - Set GMRCACTM with action menu based on Service ;10/6/98  17:15
"RTN","GMRCACTM",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**1,4,11**;DEC 27, 1997
"RTN","GMRCACTM",3,0)
CPRS(GMRCPM,GUI) ;Entry point for setting menu actions for CPRS user
"RTN","GMRCACTM",4,0)
 ;GMRCPM=a list of File 123 IEN's to check for menu actions.
"RTN","GMRCACTM",5,0)
 ;       Passed in as '300;303;295;309;313'
"RTN","GMRCACTM",6,0)
 ;GUI =1 if coming from the GUI; return field name in ORFLG also
"RTN","GMRCACTM",7,0)
 ;Menu access is passed out in ORFLG as, for example,
"RTN","GMRCACTM",8,0)
 ;2=Extended menu actions allowed - If ORFLG(DUZ)>1 then extended menu actions are allowed
"RTN","GMRCACTM",9,0)
 I '$L(GMRCPM) S ORFLG=1 Q
"RTN","GMRCACTM",10,0)
 K ORFLG
"RTN","GMRCACTM",11,0)
 N I,GMRCSS,GMRCIEN
"RTN","GMRCACTM",12,0)
 F I=1:1 S ORFLG=1,GMRCIEN=$P(GMRCPM,";",I) Q:GMRCIEN=""  D
"RTN","GMRCACTM",13,0)
 .S ORFLG(GMRCIEN)=1 ;set default answer to read only
"RTN","GMRCACTM",14,0)
 .S GMRCSS=+$P($G(^GMR(123,+GMRCIEN,0)),"^",5)
"RTN","GMRCACTM",15,0)
 .Q:'+$G(GMRCSS)
"RTN","GMRCACTM",16,0)
 .;when service is defined, check for service user 
"RTN","GMRCACTM",17,0)
 .D EN
"RTN","GMRCACTM",18,0)
 .S ORFLG(GMRCIEN)=ORFLG
"RTN","GMRCACTM",19,0)
 .Q
"RTN","GMRCACTM",20,0)
 Q
"RTN","GMRCACTM",21,0)
 ;
"RTN","GMRCACTM",22,0)
EN ;Set GMRCACTM with appropriate menu of actions given user characteristics
"RTN","GMRCACTM",23,0)
 ;If ORFLG is DEFINED then GMRCACTM is returned as a set of codes:
"RTN","GMRCACTM",24,0)
 ;    1 = GMRCACTM USER REVIEW SCREEN - simple actions
"RTN","GMRCACTM",25,0)
 ;    2 = GMRCACTM SERVICE ACTION menu  - all actions possible for
"RTN","GMRCACTM",26,0)
 ;        clinical user in service
"RTN","GMRCACTM",27,0)
 ;    3 = GMRCACTM ADMIN ACTION menu - administrative user
"RTN","GMRCACTM",28,0)
 ;    4 = GMRCACTM TRK MEDICINE CONSULTS menu - all actions that the user of the medicine package can take.
"RTN","GMRCACTM",29,0)
 ; initialize GMRCACTM for read only
"RTN","GMRCACTM",30,0)
 S GMRCACTM="GMRCACTM USER REVIEW SCREEN"
"RTN","GMRCACTM",31,0)
 ; medicine options will get the medicine interface
"RTN","GMRCACTM",32,0)
 I $D(XQY0),$E(XQY0,1,2)="MC" S GMRCACTM="GMRCACTM MEDICINE PKG MENU" Q
"RTN","GMRCACTM",33,0)
 ;
"RTN","GMRCACTM",34,0)
 ; if service and entry aren't defined, assume read only access
"RTN","GMRCACTM",35,0)
 I '$D(XQADATA),$S('+$G(GMRCSS):1,1:0) D  Q
"RTN","GMRCACTM",36,0)
 .I $D(ORFLG) S ORFLG(GMRCIEN)=1 K GMRCACTM
"RTN","GMRCACTM",37,0)
 .Q
"RTN","GMRCACTM",38,0)
 ;
"RTN","GMRCACTM",39,0)
 ;Check first for local variations of the action menu. 
"RTN","GMRCACTM",40,0)
 ;using locally developed options
"RTN","GMRCACTM",41,0)
 ;N GMRCOPT,LOCALMNU
"RTN","GMRCACTM",42,0)
 ;I +$G(GMRCSS) D
"RTN","GMRCACTM",43,0)
 ;. S GMRCOPT=$P($G(^GMR(123.5,+GMRCSS,123)),"^",10)
"RTN","GMRCACTM",44,0)
 ;. S LOCALMNU=$P($G(^GMR(123.5,+GMRCSS,123)),"^",3)
"RTN","GMRCACTM",45,0)
 ;. I +$G(^ORD(101,+LOCALMNU,0)) D
"RTN","GMRCACTM",46,0)
 ;.. S GMRCACTM=$P($G(ORD(101,+LOCALMNU,0)),"^",1)
"RTN","GMRCACTM",47,0)
 ;.. I $D(ORFLG) S ORFLG=2 K GMRCACTM
"RTN","GMRCACTM",48,0)
 ;. Q
"RTN","GMRCACTM",49,0)
 ;
"RTN","GMRCACTM",50,0)
 ;Get the users service update level
"RTN","GMRCACTM",51,0)
 N GMRCFLG
"RTN","GMRCACTM",52,0)
 S GMRCFLG=$$VALID^GMRCAU(+GMRCSS,"",,$G(GUI))
"RTN","GMRCACTM",53,0)
 ;
"RTN","GMRCACTM",54,0)
 ;If ORFLG is all that should be returned, than set and exit
"RTN","GMRCACTM",55,0)
 I $D(ORFLG) D  Q
"RTN","GMRCACTM",56,0)
 . K GMRCACTM
"RTN","GMRCACTM",57,0)
 . I GMRCFLG=0 S ORFLG=1 Q
"RTN","GMRCACTM",58,0)
 . S ORFLG=GMRCFLG Q
"RTN","GMRCACTM",59,0)
 ;
"RTN","GMRCACTM",60,0)
 ;Process the GMRCFLG value to get the GMRCACTM defined.
"RTN","GMRCACTM",61,0)
 I GMRCFLG>0 D SETACTM Q
"RTN","GMRCACTM",62,0)
 Q
"RTN","GMRCACTM",63,0)
 ;
"RTN","GMRCACTM",64,0)
SETACTM ;Set GMRCACTM with local update menu or the GMRCACTM SERVICE ACTION MENU
"RTN","GMRCACTM",65,0)
 S GMRCACTM=$S($P($G(^GMR(123.5,GMRCSS,123)),"^",3):$P(^ORD(101,$P(^(123),"^",3),0),"^"),1:"GMRCACTM SERVICE ACTION MENU")
"RTN","GMRCACTM",66,0)
 Q
"RTN","GMRCACTM",67,0)
 ;
"RTN","GMRCAU")
0^1^B51123463
"RTN","GMRCAU",1,0)
GMRCAU ;SLC/DLT,JFR - Action Utilities  ;9/8/98  03:33
"RTN","GMRCAU",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**1,4,11**;DEC 27, 1997
"RTN","GMRCAU",3,0)
GETPROV K GMRCORNP N DIR S DIR(0)="123.02,3"
"RTN","GMRCAU",4,0)
 S DIR("A")=$S($D(GETPROV):GETPROV,1:"Responsible Clinician")
"RTN","GMRCAU",5,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DIROUT)!(X="^") S GMRCQIT="Q" Q
"RTN","GMRCAU",6,0)
 G:Y<1 GETPROV S GMRCORNP=+Y
"RTN","GMRCAU",7,0)
 Q
"RTN","GMRCAU",8,0)
GETDT ;Get actual activity date
"RTN","GMRCAU",9,0)
 K GMRCQIT
"RTN","GMRCAU",10,0)
 D NOW^%DTC S (X,GMRCDT)=% D REGDTM^GMRCU S GMRCAD=X
"RTN","GMRCAU",11,0)
 S DIR(0)="123.02,2",DIR("A")=$S($D(GETDT):GETDT,1:"Date/Time of Actual Activity"),DIR("B")="NOW" D ^DIR K DIR I $D(DIRUT) S GMRCQIT="Q" Q
"RTN","GMRCAU",12,0)
 I X="NOW" K GMRCAD,Y Q
"RTN","GMRCAU",13,0)
 S GMRCAD=Y K X,Y,DIRUT,DUOUT
"RTN","GMRCAU",14,0)
 Q
"RTN","GMRCAU",15,0)
ORTX(GMRCO) ;Get the abbreviated text for alert displays
"RTN","GMRCAU",16,0)
 ;GMRCO is the consult entry from 123
"RTN","GMRCAU",17,0)
 N GMRCSVC,GMRCSSNM,GMRCPROC,GMRCORTX
"RTN","GMRCAU",18,0)
 S GMRCSSNM=$$SVC(GMRCO)
"RTN","GMRCAU",19,0)
 S GMRCPROC=$$PROC(GMRCO)
"RTN","GMRCAU",20,0)
 S GMRCORTX=$S($L(GMRCPROC):($E(GMRCSSNM,1,10)_" "_$E(GMRCPROC,1,10)),1:$E(GMRCSSNM,1,20))
"RTN","GMRCAU",21,0)
 Q GMRCORTX
"RTN","GMRCAU",22,0)
 ;
"RTN","GMRCAU",23,0)
SVC(GMRCO) ;Get abbreviated service text
"RTN","GMRCAU",24,0)
 S GMRCSVC=$P(^GMR(123,+GMRCO,0),"^",5),GMRCSSNM=""
"RTN","GMRCAU",25,0)
 I +GMRCSVC S GMRCSSNM=$S($L($G(^GMR(123.5,+GMRCSVC,.1))):^(.1),1:$P($G(^GMR(123.5,+GMRCSVC,0)),U,1))
"RTN","GMRCAU",26,0)
 Q GMRCSSNM
"RTN","GMRCAU",27,0)
PROC(GMRCO) ;Get abbreviated procedure text
"RTN","GMRCAU",28,0)
 S GMRCPROC=$P(^GMR(123,+GMRCO,0),"^",8)
"RTN","GMRCAU",29,0)
 I +GMRCPROC S GMRCPROC=$S($L($G(^ORD(101,+GMRCPROC,.1))):^(.1),1:$P($G(^ORD(101,+GMRCPROC,0)),"^",2))
"RTN","GMRCAU",30,0)
 Q GMRCPROC
"RTN","GMRCAU",31,0)
 ;
"RTN","GMRCAU",32,0)
LMTX(GMRCO) ;Get the text for list manager displays
"RTN","GMRCAU",33,0)
 ;GMRCO is the consult entry from 123
"RTN","GMRCAU",34,0)
 N GMRCSVC,GMRCSSNM,GMRCREQ,GMRCORTX
"RTN","GMRCAU",35,0)
 S GMRCSVC=$P(^GMR(123,+GMRCO,0),"^",5),GMRCSSNM=""
"RTN","GMRCAU",36,0)
 I +GMRCSVC S GMRCSSNM=$P($G(^GMR(123.5,+GMRCSVC,0)),U,1)
"RTN","GMRCAU",37,0)
 S GMRCREQ=$P(^GMR(123,+GMRCO,0),"^",8)
"RTN","GMRCAU",38,0)
 I +GMRCREQ S GMRCREQ=$S($L($G(^ORD(101,+GMRCREQ,.1))):^(.1),1:$P($G(^ORD(101,+GMRCPROC,0)),"^",2))
"RTN","GMRCAU",39,0)
 S GMRCORTX=$S($L(GMRCPROC):($E(GMRCSSNM,1,10)_" "_$E(GMRCREQ,1,10)),1:$E(GMRCSSNM,1,20))
"RTN","GMRCAU",40,0)
 Q GMRCORTX
"RTN","GMRCAU",41,0)
 ;
"RTN","GMRCAU",42,0)
 ;
"RTN","GMRCAU",43,0)
VALID(GMRCSER,GMRCO,GMRCUSER,GMRCTST) ;Get users update authority
"RTN","GMRCAU",44,0)
 ; check GMRCSS and all parents for authority
"RTN","GMRCAU",45,0)
 ; codes returned are same as $$VALIDU
"RTN","GMRCAU",46,0)
 N GMRCUPDL,GMRCLIS,GMRCHKD,GMRCNT,GMRCLP,GMRCQUIT
"RTN","GMRCAU",47,0)
 I '$G(GMRCUSER) S GMRCUSER=DUZ
"RTN","GMRCAU",48,0)
 ; check initial service first
"RTN","GMRCAU",49,0)
 S GMRCUPDL=$$VALIDU(GMRCSER,GMRCUSER) I +GMRCUPDL D  G VALEX
"RTN","GMRCAU",50,0)
 . I $G(GMRCTST) S $P(GMRCUPDL,U,3)=$P($G(^GMR(123.5,+GMRCSER,0)),U)
"RTN","GMRCAU",51,0)
 S GMRCHKD(GMRCSER)="",GMRCNT=1
"RTN","GMRCAU",52,0)
 ; find parents if set to process, quit if none
"RTN","GMRCAU",53,0)
 I '$P($G(^GMR(123.5,+GMRCSER,0)),U,7) G VALEX ;process parents = 0
"RTN","GMRCAU",54,0)
 D FINDPAR(GMRCSER,.GMRCNT) I '$D(GMRCLIS) S GMRCUPDL=0 G VALEX
"RTN","GMRCAU",55,0)
 S GMRCLP=0
"RTN","GMRCAU",56,0)
 F  S GMRCLP=$O(GMRCLIS(GMRCLP)) Q:'GMRCLP!($D(GMRCQUIT))  D  I +GMRCUPDL G VALEX
"RTN","GMRCAU",57,0)
 . I +$P(GMRCLIS(GMRCLP),U,2) K GMRCLIS(GMRCLP) Q  ;been checked
"RTN","GMRCAU",58,0)
 . I '$D(GMRCHKD(+GMRCLIS(GMRCLP))) D
"RTN","GMRCAU",59,0)
 .. ; check parent 
"RTN","GMRCAU",60,0)
 .. S GMRCUPDL=$$VALIDU(+GMRCLIS(GMRCLP),GMRCUSER)
"RTN","GMRCAU",61,0)
 .. S GMRCHKD(+GMRCLIS(GMRCLP))=""
"RTN","GMRCAU",62,0)
 . S $P(GMRCLIS(GMRCLP),U,2)=1
"RTN","GMRCAU",63,0)
 . I +GMRCUPDL D  Q  ;got one
"RTN","GMRCAU",64,0)
 .. S:$G(GMRCTST) $P(GMRCUPDL,U,3)=$P($G(^GMR(123.5,+GMRCLIS(GMRCLP),0)),U)
"RTN","GMRCAU",65,0)
 . I $P(^GMR(123.5,+GMRCLIS(GMRCLP),0),U,7) D  ;process parents
"RTN","GMRCAU",66,0)
 .. D FINDPAR(+GMRCLIS(GMRCLP),.GMRCNT)
"RTN","GMRCAU",67,0)
 . S GMRCLP=0 ;start back at top and don't miss any
"RTN","GMRCAU",68,0)
VALEX Q GMRCUPDL
"RTN","GMRCAU",69,0)
FINDPAR(SERV,ARCNT)     ;find parents of SERV
"RTN","GMRCAU",70,0)
 ; SERV = service to find parents of
"RTN","GMRCAU",71,0)
 ; ARCNT = next array element
"RTN","GMRCAU",72,0)
 N PARENT
"RTN","GMRCAU",73,0)
 S PARENT=0
"RTN","GMRCAU",74,0)
 F  S PARENT=$O(^GMR(123.5,"APC",SERV,PARENT)) Q:'PARENT  D
"RTN","GMRCAU",75,0)
 . S GMRCLIS(ARCNT)=PARENT
"RTN","GMRCAU",76,0)
 . S ARCNT=ARCNT+1
"RTN","GMRCAU",77,0)
 Q
"RTN","GMRCAU",78,0)
 ;
"RTN","GMRCAU",79,0)
VALIDU(GMRCSS,GMRCUSR) ;Check to see if user is an update user
"RTN","GMRCAU",80,0)
 ;The value returned is the equivalent of this set of codes:
"RTN","GMRCAU",81,0)
 ;    0 = not an update user
"RTN","GMRCAU",82,0)
 ;    2 = update user
"RTN","GMRCAU",83,0)
 ;    3 = administrative update user
"RTN","GMRCAU",84,0)
 N GMRCUPD
"RTN","GMRCAU",85,0)
 I '$G(GMRCUSR) S GMRCUSR=DUZ
"RTN","GMRCAU",86,0)
 I '+$G(GMRCSS) Q 0
"RTN","GMRCAU",87,0)
 I +$P($G(^GMR(123.5,GMRCSS,0)),U,6) Q 2_$$FIELD(.06)
"RTN","GMRCAU",88,0)
 I $D(^GMR(123.5,+GMRCSS,123.3,"B",GMRCUSR)) Q 2_$$FIELD(123.3)
"RTN","GMRCAU",89,0)
 I GMRCUSR=$P($G(^GMR(123.5,+GMRCSS,123)),"^",8) Q 2_$$FIELD(123.08)
"RTN","GMRCAU",90,0)
 I $D(^GMR(123.5,+GMRCSS,123.33,"B",GMRCUSR)) Q 3_$$FIELD(123.33)
"RTN","GMRCAU",91,0)
 ;
"RTN","GMRCAU",92,0)
 S GMRCUPD=0
"RTN","GMRCAU",93,0)
 ; check service teams to notify, update teams w/o and admin teams w/o
"RTN","GMRCAU",94,0)
 N NODE F NODE=123.1,123.31,123.34 D  I +GMRCUPD Q
"RTN","GMRCAU",95,0)
 . I '$D(^GMR(123.5,+GMRCSS,NODE)) Q
"RTN","GMRCAU",96,0)
 . D TEAM(.GMRCUPD,NODE,GMRCUSR)
"RTN","GMRCAU",97,0)
 I +GMRCUPD Q GMRCUPD
"RTN","GMRCAU",98,0)
 ;
"RTN","GMRCAU",99,0)
 ; check ASU user classes in field 123.35
"RTN","GMRCAU",100,0)
 S GMRCUPD=$$USR(GMRCSS,GMRCUSR)
"RTN","GMRCAU",101,0)
 I +GMRCUPD Q GMRCUPD
"RTN","GMRCAU",102,0)
 ;
"RTN","GMRCAU",103,0)
 I $D(^GMR(123.5,+GMRCSS,123.2)) D LOC(.GMRCUPD) Q:+GMRCUPD GMRCUPD
"RTN","GMRCAU",104,0)
 Q 0
"RTN","GMRCAU",105,0)
 ;
"RTN","GMRCAU",106,0)
LOC(GMRCUPD) ;Check for the DUZ in the NOTIFICATION BY PT LOCATION multiple
"RTN","GMRCAU",107,0)
 N GMRCL,GMRCTM
"RTN","GMRCAU",108,0)
 S GMRCL=0 ;Check if DUZ is associated with any location/ward
"RTN","GMRCAU",109,0)
 F  S GMRCL=$O(^GMR(123.5,+GMRCSS,123.2,GMRCL))  Q:'GMRCL!+GMRCUPD  D  Q:+GMRCUPD
"RTN","GMRCAU",110,0)
 . ;Get user and/or team assigned to location
"RTN","GMRCAU",111,0)
 . S GMRCL(0)=$G(^GMR(123.5,+GMRCSS,123.2,+GMRCL,0))
"RTN","GMRCAU",112,0)
 . I $P(GMRCL(0),"^",2)=DUZ S GMRCUPD=2 Q
"RTN","GMRCAU",113,0)
 . I $P(GMRCL(0),"^",3) S GMRCTM=$P(GMRCL(0),"^",3) ;D CHKTM
"RTN","GMRCAU",114,0)
 Q
"RTN","GMRCAU",115,0)
 ;
"RTN","GMRCAU",116,0)
TEAM(TYPE,SUBSC,USER) ;Check for the DUZ in the multiple of SUBSC
"RTN","GMRCAU",117,0)
 N GMRCTM,GMRCHIT
"RTN","GMRCAU",118,0)
 S GMRCTM=""
"RTN","GMRCAU",119,0)
 I '$G(USER) S USER=DUZ
"RTN","GMRCAU",120,0)
 F  S GMRCTM=$O(^GMR(123.5,GMRCSS,SUBSC,"B",GMRCTM)) Q:'GMRCTM!+TYPE  D
"RTN","GMRCAU",121,0)
 . S GMRCHIT=$$CHKTM(GMRCTM,USER) Q:'GMRCHIT
"RTN","GMRCAU",122,0)
 . S TYPE=$S(SUBSC=123.34:3,1:2)_$$FIELD(SUBSC)
"RTN","GMRCAU",123,0)
 Q
"RTN","GMRCAU",124,0)
 ;
"RTN","GMRCAU",125,0)
CHKTM(TEAM,PERS) ;checks for PERS in list of users on TEAM
"RTN","GMRCAU",126,0)
 ;Input:  TEAM must be set to the Order Team entry number
"RTN","GMRCAU",127,0)
 ;Output: 1 will be returned PERS is on TEAM
"RTN","GMRCAU",128,0)
 N ND,GMRCLST,FOUND
"RTN","GMRCAU",129,0)
 S GMRCLST=""
"RTN","GMRCAU",130,0)
 D TEAMPROV^ORQPTQ1(.GMRCLST,TEAM)
"RTN","GMRCAU",131,0)
 I $P(GMRCLST(1),"^",2)="No providers found." Q 0
"RTN","GMRCAU",132,0)
 S ND=0
"RTN","GMRCAU",133,0)
 F  S ND=$O(GMRCLST(ND)) Q:ND=""  I +GMRCLST(ND)=PERS S FOUND=1 Q
"RTN","GMRCAU",134,0)
 Q $S($G(FOUND):1,1:0)
"RTN","GMRCAU",135,0)
 ;
"RTN","GMRCAU",136,0)
USR(SERV,USER) ; check USR classes for user
"RTN","GMRCAU",137,0)
 N UCLS,UPD
"RTN","GMRCAU",138,0)
 I '$O(^GMR(123.5,+SERV,123.35,0)) Q 0
"RTN","GMRCAU",139,0)
 S UCLS=0,UPD=0
"RTN","GMRCAU",140,0)
 S UCLS=$O(^GMR(123.5,+SERV,123.35,"B",UCLS)) Q:'UCLS  D  I +UPD Q UPD
"RTN","GMRCAU",141,0)
 . S UPD=$$ISA^USRLM(USER,UCLS)
"RTN","GMRCAU",142,0)
 . I +UPD S UPD=2_$$FIELD(123.35)
"RTN","GMRCAU",143,0)
 . Q
"RTN","GMRCAU",144,0)
 Q UPD
"RTN","GMRCAU",145,0)
FIELD(GMRCFLD) ;return field name where became update user
"RTN","GMRCAU",146,0)
 I '$G(GMRCTST) Q ""
"RTN","GMRCAU",147,0)
 D FIELD^DID(123.5,GMRCFLD,,"LABEL","GMRCFLD")
"RTN","GMRCAU",148,0)
 Q "^"_$G(GMRCFLD("LABEL"))
"RTN","GMRCAU",149,0)
COMPLETE(GMRCA) ;Determine if the action is a complete action (10,13,14)
"RTN","GMRCAU",150,0)
 S GMRCA=$G(GMRCA)
"RTN","GMRCAU",151,0)
 Q $S(GMRCA=13:1,GMRCA=14:1,GMRCA=10:1,1:0)
"RTN","GMRCAU",152,0)
 ;   10=administrative complete, 13=ADDENDUM ADDED, 14=New Note
"RTN","GMRCAU",153,0)
 ;
"RTN","GMRCAU",154,0)
RESOLUA(GMRCA) ;Determine if action has resolution info for clinician
"RTN","GMRCAU",155,0)
 ;Action value is based on value in ^ORD(100.01,"
"RTN","GMRCAU",156,0)
 ;Returns 1 for consult resolution, 0 for pending resolution
"RTN","GMRCAU",157,0)
 S GMRCA=$G(GMRCA)
"RTN","GMRCAU",158,0)
 Q $S(GMRCA=4:1,GMRCA=6:1,GMRCA=10:1,GMRCA=11:1,GMRCA=12:1,GMRCA=13:1,GMRCA=14:1,GMRCA=19:1,1:0)
"RTN","GMRCAU",159,0)
 ;    4=Sig Findings, 6=discontinued, 10=administrative complete
"RTN","GMRCAU",160,0)
 ;    11=Edit/resubmit
"RTN","GMRCAU",161,0)
 ;    12=Disassociate result, 13=Addendum Added, 14=New Note
"RTN","GMRCAU",162,0)
 ;    19=cancelled
"RTN","GMRCAU",163,0)
 ;
"RTN","GMRCAU",164,0)
RESOLUS(GMRCSTS) ;Determine status indicates the consult has a resolution
"RTN","GMRCAU",165,0)
 ;Status value is based on values in ^ORD(100.01,"
"RTN","GMRCAU",166,0)
 ;Returns 1 for consult resolution, 0 for pending resolution
"RTN","GMRCAU",167,0)
 S GMRCSTS=$G(GMRCSTS)
"RTN","GMRCAU",168,0)
 Q $S(GMRCSTS:1,GMRCSTS=2:1,GMRCSTS=13:1,1:0)
"RTN","GMRCAU",169,0)
 ;    1=dc,2=comp,13=canc
"RTN","GMRCAU",170,0)
 ;
"RTN","GMRCAU",171,0)
TEST ;called from GMRC UPDATE AUTHORITY
"RTN","GMRCAU",172,0)
 ; determines how a user gets update authority for a service 
"RTN","GMRCAU",173,0)
 W !
"RTN","GMRCAU",174,0)
 N GMRCSRV,GMRCUSR,UPD,GMRCDG,GMRC1
"RTN","GMRCAU",175,0)
 N DIR,DIROUT,DIRUT,DUOUT,DTOUT,X,Y
"RTN","GMRCAU",176,0)
 S DIR(0)="PO^123.5:EM",DIR("A")="Select Consult Service"
"RTN","GMRCAU",177,0)
 S DIR("?")="Choose the consult service to check update status of user"
"RTN","GMRCAU",178,0)
 S DIR("??")="^D TESTHELP^GMRCAU(""ALL SERVICES"")" D ^DIR
"RTN","GMRCAU",179,0)
 I $D(DIRUT) Q
"RTN","GMRCAU",180,0)
 S GMRCSRV=+Y
"RTN","GMRCAU",181,0)
 N DIR
"RTN","GMRCAU",182,0)
 S DIR(0)="PO^200:EM",DIR("A")="Choose user to check for update status"
"RTN","GMRCAU",183,0)
 D ^DIR I $D(DIRUT) Q
"RTN","GMRCAU",184,0)
 S GMRCUSR=+Y
"RTN","GMRCAU",185,0)
 S UPD=$$VALID(GMRCSRV,,GMRCUSR,1)
"RTN","GMRCAU",186,0)
 I +UPD=0 W !!,"This user has no update authority"
"RTN","GMRCAU",187,0)
 I +UPD D
"RTN","GMRCAU",188,0)
 . I +UPD=2 W !!,"This user is an update user for: ",$P(UPD,U,3)
"RTN","GMRCAU",189,0)
 . I +UPD=3 W !!,"This user is an administrative user for: ",$P(UPD,U,3)
"RTN","GMRCAU",190,0)
 . W !,"via the ",$P(UPD,U,2)," field."
"RTN","GMRCAU",191,0)
 . W ! I $L($P(UPD,U,3)) D
"RTN","GMRCAU",192,0)
 .. I $P(UPD,U,3)'=$P(^GMR(123.5,+GMRCSRV,0),U) D HIER^GMRCT($P(UPD,U,3))
"RTN","GMRCAU",193,0)
 W !!
"RTN","GMRCAU",194,0)
 K GMRCSRV,GMRCUSR,UPD
"RTN","GMRCAU",195,0)
 K DIR,DIROUT,DIRUT,DUOUT,DTOUT,X,Y
"RTN","GMRCAU",196,0)
 G TEST
"RTN","GMRCAU",197,0)
TESTHELP(GMRCSVNM) ;wrapper for LISTSRV^GMRCASV
"RTN","GMRCAU",198,0)
 N DIR,GMRC1,GMRCDG
"RTN","GMRCAU",199,0)
 D LISTSRV^GMRCASV
"RTN","GMRCAU",200,0)
 Q
"RTN","GMRCAU",201,0)
TSTINTRO ;entry action of GMRC UPDATE AUTHORITY option
"RTN","GMRCAU",202,0)
 W !!,"This option will allow you to check a user's update authority for any given"
"RTN","GMRCAU",203,0)
 W !,"service in the consults hierarchy.  If the PROCESS PARENTS FOR UPDATES field"
"RTN","GMRCAU",204,0)
 W !,"is set to YES, all ancestors of the selected service will be checked."
"RTN","GMRCAU",205,0)
 W !,"The type of update authority and the service to which they are assigned will"
"RTN","GMRCAU",206,0)
 W !,"be displayed.",!!
"RTN","GMRCAU",207,0)
 Q
"RTN","GMRCNOTF")
0^2^B4739068
"RTN","GMRCNOTF",1,0)
GMRCNOTF ;SLC/JFR - NOTIFICATION RECIPIENT UTILITIES; 7/31/99 21:58
"RTN","GMRCNOTF",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**11**;DEC 27, 1997
"RTN","GMRCNOTF",3,0)
EN ; -- main entry point for GMRC NOTIFICATION RECIPS
"RTN","GMRCNOTF",4,0)
 N GMRCSV
"RTN","GMRCNOTF",5,0)
 D SELSS Q:'$D(GMRCSV)
"RTN","GMRCNOTF",6,0)
 D INIT
"RTN","GMRCNOTF",7,0)
 D EN^VALM("GMRC NOTIFICATION RECIPS")
"RTN","GMRCNOTF",8,0)
 Q
"RTN","GMRCNOTF",9,0)
 ;
"RTN","GMRCNOTF",10,0)
SELSS ; select new service
"RTN","GMRCNOTF",11,0)
 N DIR,X,Y,DIRUT,DUOUT,DTOUT
"RTN","GMRCNOTF",12,0)
 D FULL^VALM1
"RTN","GMRCNOTF",13,0)
 S DIR(0)="PO^123.5:EMQ",DIR("A")="Select Service"
"RTN","GMRCNOTF",14,0)
 D ^DIR
"RTN","GMRCNOTF",15,0)
 I $D(DIRUT) Q
"RTN","GMRCNOTF",16,0)
 S GMRCSV=+Y
"RTN","GMRCNOTF",17,0)
 K ^TMP("GMRCNOTF",$J)
"RTN","GMRCNOTF",18,0)
 Q
"RTN","GMRCNOTF",19,0)
 ;
"RTN","GMRCNOTF",20,0)
HDR ; -- header code
"RTN","GMRCNOTF",21,0)
 S VALMHDR(1)="Notification Recipients for: "
"RTN","GMRCNOTF",22,0)
 S VALMHDR(1)=VALMHDR(1)_$P(^GMR(123.5,+GMRCSV,0),U)
"RTN","GMRCNOTF",23,0)
 Q
"RTN","GMRCNOTF",24,0)
 ;
"RTN","GMRCNOTF",25,0)
INIT ; -- init variables and list array
"RTN","GMRCNOTF",26,0)
 N GMRCADUZ,LINE,GMRCI,PERS
"RTN","GMRCNOTF",27,0)
 D EN^GMRCT(+GMRCSV,,1) 
"RTN","GMRCNOTF",28,0)
 I '$D(GMRCADUZ) S ^TMP("GMRCNOTF",$J,1,0)="No notification recipients"
"RTN","GMRCNOTF",29,0)
 S GMRCI=0,LINE=1
"RTN","GMRCNOTF",30,0)
 F  S GMRCI=$O(GMRCADUZ(GMRCI)) Q:'GMRCI  D
"RTN","GMRCNOTF",31,0)
 . S PERS=$$GET1^DIQ(200,GMRCI,.01)
"RTN","GMRCNOTF",32,0)
 . S ^TMP("GMRCNOTF",$J,"B",PERS)=GMRCADUZ(GMRCI)
"RTN","GMRCNOTF",33,0)
 S PERS="" F  S PERS=$O(^TMP("GMRCNOTF",$J,"B",PERS)) Q:PERS=""  D
"RTN","GMRCNOTF",34,0)
 . I $L($P(^TMP("GMRCNOTF",$J,"B",PERS),"~",2)) D  Q
"RTN","GMRCNOTF",35,0)
 .. N LOOP,SERV S LOOP=2
"RTN","GMRCNOTF",36,0)
 .. N SPACES S SPACES=$$REPEAT^XLFSTR(" ",(34-$L(PERS)))
"RTN","GMRCNOTF",37,0)
 .. S ^TMP("GMRCNOTF",$J,LINE,0)=PERS_SPACES_$P(^TMP("GMRCNOTF",$J,"B",PERS),"~")
"RTN","GMRCNOTF",38,0)
 .. S LINE=LINE+1
"RTN","GMRCNOTF",39,0)
 .. F  S SERV=$P(^TMP("GMRCNOTF",$J,"B",PERS),"~",LOOP) Q:SERV=""  D
"RTN","GMRCNOTF",40,0)
 ... S ^TMP("GMRCNOTF",$J,LINE,0)=$$REPEAT^XLFSTR(" ",34)_SERV
"RTN","GMRCNOTF",41,0)
 ... S LOOP=LOOP+1,LINE=LINE+1
"RTN","GMRCNOTF",42,0)
 . N SPACES S SPACES=$$REPEAT^XLFSTR(" ",(34-$L(PERS)))
"RTN","GMRCNOTF",43,0)
 . S ^TMP("GMRCNOTF",$J,LINE,0)=PERS_SPACES_^TMP("GMRCNOTF",$J,"B",PERS)
"RTN","GMRCNOTF",44,0)
 . S LINE=LINE+1
"RTN","GMRCNOTF",45,0)
 K ^TMP("GMRCNOTF",$J,"B")
"RTN","GMRCNOTF",46,0)
 S VALMCNT=$O(^TMP("GMRCNOTF",$J,999999),-1)
"RTN","GMRCNOTF",47,0)
 S VALMBG=1
"RTN","GMRCNOTF",48,0)
 Q
"RTN","GMRCNOTF",49,0)
 ;
"RTN","GMRCNOTF",50,0)
HELP ; -- help code
"RTN","GMRCNOTF",51,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","GMRCNOTF",52,0)
 Q
"RTN","GMRCNOTF",53,0)
 ;
"RTN","GMRCNOTF",54,0)
EXIT ; -- exit code
"RTN","GMRCNOTF",55,0)
 Q
"RTN","GMRCNOTF",56,0)
 ;
"RTN","GMRCNOTF",57,0)
EXPND ; -- expand code
"RTN","GMRCNOTF",58,0)
 Q
"RTN","GMRCNOTF",59,0)
 ;
"RTN","GMRCT")
0^3^B21880893
"RTN","GMRCT",1,0)
GMRCT ;SLC/DLT,JFR - Get DUZ's of users for notification to service ;5/20/98  14:21
"RTN","GMRCT",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**1,5,11**;DEC 27, 1997
"RTN","GMRCT",3,0)
EN(GMRCSRV,USER,TEST) ;Get who is to be notified for alert action
"RTN","GMRCT",4,0)
 ; return them in array GMRCADUZ(DUZ)=""
"RTN","GMRCT",5,0)
 N GMRCLIS,GMRCHKD,GMRCNT,GMRCLP,GMRCQUIT
"RTN","GMRCT",6,0)
 D RECIP(GMRCSRV,$G(TEST)) I $D(TEST),$G(USER),$D(GMRCADUZ(USER)) Q
"RTN","GMRCT",7,0)
 I '$P(^GMR(123.5,+GMRCSRV,0),U,8) Q  ; don't check parents
"RTN","GMRCT",8,0)
 S GMRCHKD(GMRCSRV)="",GMRCNT=1
"RTN","GMRCT",9,0)
 D FINDPAR^GMRCAU(GMRCSRV,.GMRCNT) I '$D(GMRCLIS) Q
"RTN","GMRCT",10,0)
 S GMRCLP=0
"RTN","GMRCT",11,0)
 F  S GMRCLP=$O(GMRCLIS(GMRCLP)) Q:'GMRCLP  D  I $D(GMRCQUIT) Q  
"RTN","GMRCT",12,0)
 . I +$P(GMRCLIS(GMRCLP),U,2) K GMRCLIS(GMRCLP) Q  ;been checked
"RTN","GMRCT",13,0)
 . I '$D(GMRCHKD(+GMRCLIS(GMRCLP))) D
"RTN","GMRCT",14,0)
 .. ; check parent 
"RTN","GMRCT",15,0)
 .. D RECIP(+GMRCLIS(GMRCLP),$G(TEST)) I $G(USER),$D(GMRCADUZ(USER)) D  Q
"RTN","GMRCT",16,0)
 ... S GMRCQUIT=1
"RTN","GMRCT",17,0)
 .. S GMRCHKD(+GMRCLIS(GMRCLP))=""
"RTN","GMRCT",18,0)
 . S $P(GMRCLIS(GMRCLP),U,2)=1
"RTN","GMRCT",19,0)
 . I $P(^GMR(123.5,+GMRCLIS(GMRCLP),0),U,8) D  ;check parents, fld .08 =1
"RTN","GMRCT",20,0)
 .. D FINDPAR^GMRCAU(+GMRCLIS(GMRCLP),.GMRCNT)
"RTN","GMRCT",21,0)
 . S GMRCLP=0 ;start back at top and don't miss any
"RTN","GMRCT",22,0)
 Q
"RTN","GMRCT",23,0)
RECIP(GMRCSS,NOTNULL) ;gather recipients for GMRCSS
"RTN","GMRCT",24,0)
 N GMRCTM,GMRCTMI,GMRCLST,GMRCER,GMRCHL,GMRCSSI,GMRCU,GMRCWL
"RTN","GMRCT",25,0)
 I $D(^GMR(123.5,GMRCSS,123)),$P(^GMR(123.5,GMRCSS,123),"^",8) S GMRCADUZ($P(^(123),"^",8))=$S($G(NOTNULL):$$NOTSERV($P(^(123),"^",8)),1:"")
"RTN","GMRCT",26,0)
 I $D(^GMR(123.5,GMRCSS,123.1)) D TEAM
"RTN","GMRCT",27,0)
 I $D(^GMR(123.5,GMRCSS,123.2)),+$G(GMRCO) D LOC
"RTN","GMRCT",28,0)
 I $D(^GMR(123.5,GMRCSS,123.33)) D ADMU
"RTN","GMRCT",29,0)
 I $D(^GMR(123.5,GMRCSS,123.34)) D ADMT
"RTN","GMRCT",30,0)
 Q
"RTN","GMRCT",31,0)
LOC ;Find the patients location and match to location assignments
"RTN","GMRCT",32,0)
 S GMRCWL="",GMRCHL=""
"RTN","GMRCT",33,0)
 I +$G(GMRCO) S GMRCHL=$P(^GMR(123,+GMRCO,0),"^",4) I GMRCHL S GMRCWL=$G(^SC(GMRCHL,42)) S:GMRCWL GMRCWL=GMRCWL_";DIC(42," S GMRCHL=GMRCHL_";SC("
"RTN","GMRCT",34,0)
 E  S:+$G(GMRCWLI) GMRCWL=GMRCWLI_";DIC(42," S:+$G(GMRCHLI) GMRCHL=GMRCHLI_";SC("
"RTN","GMRCT",35,0)
 I +GMRCWL S GMRCSSI=$O(^GMR(123.5,GMRCSS,123.2,"B",GMRCWL,"")) I GMRCSSI D LOC1
"RTN","GMRCT",36,0)
 I +GMRCHL S GMRCSSI=$O(^GMR(123.5,GMRCSS,123.2,"B",GMRCHL,"")) I GMRCSSI D LOC1
"RTN","GMRCT",37,0)
 Q
"RTN","GMRCT",38,0)
LOC1 ;Get user and/or team assigned to location
"RTN","GMRCT",39,0)
 I $P(^GMR(123.5,GMRCSS,123.2,GMRCSSI,0),"^",2) S GMRCADUZ($P(^(0),"^",2))=$S($G(NOTNULL):$$NOTSERV($P(^(0),"^",2)),1:"")
"RTN","GMRCT",40,0)
 I $P(^GMR(123.5,GMRCSS,123.2,GMRCSSI,0),"^",3) S GMRCTMI=$P(^(0),"^",3) D TEAM1
"RTN","GMRCT",41,0)
 Q
"RTN","GMRCT",42,0)
ADMU ;Get notification recips from admin users field (123.33)
"RTN","GMRCT",43,0)
 ;Loop "AC" x-ref to get those admin users marked as notif recipients
"RTN","GMRCT",44,0)
 N RECIP
"RTN","GMRCT",45,0)
 S RECIP=0
"RTN","GMRCT",46,0)
 F  S RECIP=$O(^GMR(123.5,GMRCSS,123.33,"AC",1,RECIP)) Q:'RECIP  D
"RTN","GMRCT",47,0)
 . S GMRCADUZ(RECIP)=$S($G(NOTNULL):$$NOTSERV(RECIP),1:"")
"RTN","GMRCT",48,0)
 Q
"RTN","GMRCT",49,0)
ADMT ;Get notification recips from admin teams field (123.34)
"RTN","GMRCT",50,0)
 ;Loop "AC" x-ref to get those admin teams marked as notif recipients
"RTN","GMRCT",51,0)
 ;call TEAM1 to get list of users and add to recip list
"RTN","GMRCT",52,0)
 N GMRCTMI S GMRCTMI=0
"RTN","GMRCT",53,0)
 F  S GMRCTMI=$O(^GMR(123.5,GMRCSS,123.34,"AC",1,GMRCTMI)) Q:'GMRCTMI  D
"RTN","GMRCT",54,0)
 . D TEAM1
"RTN","GMRCT",55,0)
TEAM ;Loop through Teams to send all users notifications
"RTN","GMRCT",56,0)
 S GMRCTM=0 F  S GMRCTM=$O(^GMR(123.5,GMRCSS,123.1,GMRCTM)) Q:'+GMRCTM  S GMRCTMI=$P($G(^GMR(123.5,GMRCSS,123.1,GMRCTM,0)),"^") I GMRCTMI D TEAM1
"RTN","GMRCT",57,0)
 Q
"RTN","GMRCT",58,0)
TEAM1 ;Get user DUZ's from Team pointed to in File
"RTN","GMRCT",59,0)
 S GMRCLST="" D TEAMPROV^ORQPTQ1(.GMRCLST,GMRCTMI)
"RTN","GMRCT",60,0)
 Q:$S('$O(GMRCLST(0)):1,$P(GMRCLST(1),"^",2)="No providers found.":1,1:0)
"RTN","GMRCT",61,0)
 S GMRCU=0 F  S GMRCU=$O(GMRCLST(GMRCU)) Q:GMRCU=""  S GMRCADUZ($P(GMRCLST(GMRCU),"^",1))=$S($G(NOTNULL):$$NOTSERV(GMRCU),1:"")
"RTN","GMRCT",62,0)
 K GMRCLST
"RTN","GMRCT",63,0)
 Q
"RTN","GMRCT",64,0)
NOTSERV(RECIP) ;set GMRCADUZ(RECIP)=all services they receive for
"RTN","GMRCT",65,0)
 I '$D(GMRCADUZ(RECIP)) Q $P(^GMR(123.5,+GMRCSS,0),U)
"RTN","GMRCT",66,0)
 Q GMRCADUZ(RECIP)_"~"_$P(^GMR(123.5,+GMRCSS,0),U)
"RTN","GMRCT",67,0)
TEST ; called from GMRC NOTIF RECIPIENTS
"RTN","GMRCT",68,0)
 N GMRCSRV,GMRCUSR,GMRCADUZ
"RTN","GMRCT",69,0)
 N DIR,DIROUT,DIRUT,DUOUT,DTOUT,X,Y
"RTN","GMRCT",70,0)
 S DIR(0)="PO^123.5:EM",DIR("A")="Select Consult Service"
"RTN","GMRCT",71,0)
 S DIR("?")="Choose the consult service to check update status of user"
"RTN","GMRCT",72,0)
 S DIR("??")="^D TESTHELP^GMRCAU(""ALL SERVICES"")" D ^DIR
"RTN","GMRCT",73,0)
 I $D(DIRUT) Q
"RTN","GMRCT",74,0)
 S GMRCSRV=+Y
"RTN","GMRCT",75,0)
 N DIR
"RTN","GMRCT",76,0)
 S DIR(0)="PO^200:EM",DIR("A")="Choose notification recipient"
"RTN","GMRCT",77,0)
 D ^DIR I $D(DIRUT) Q
"RTN","GMRCT",78,0)
 S GMRCUSR=+Y
"RTN","GMRCT",79,0)
 D EN(GMRCSRV,GMRCUSR,1)
"RTN","GMRCT",80,0)
 I $D(GMRCADUZ(GMRCUSR)) D
"RTN","GMRCT",81,0)
 . W !!,"This user is a notification recipients for "_GMRCADUZ(GMRCUSR),!
"RTN","GMRCT",82,0)
 . I GMRCADUZ(GMRCUSR)'=$P(^GMR(123.5,GMRCSRV,0),U) D
"RTN","GMRCT",83,0)
 .. D HIER(GMRCADUZ(GMRCUSR))
"RTN","GMRCT",84,0)
 . W !!
"RTN","GMRCT",85,0)
 I '$D(GMRCADUZ(GMRCUSR)) W !!,"This user is not a notification recipient.",!!
"RTN","GMRCT",86,0)
 G TEST
"RTN","GMRCT",87,0)
HIER(SERV) ;ask to see the hierarchy
"RTN","GMRCT",88,0)
 N DIR,DIRUT,DUOUT,DTOUT
"RTN","GMRCT",89,0)
 S DIR(0)="Y"
"RTN","GMRCT",90,0)
 S DIR("A")="View hierarchy from this service to the selected service"
"RTN","GMRCT",91,0)
 S DIR("B")="NO"
"RTN","GMRCT",92,0)
 D ^DIR
"RTN","GMRCT",93,0)
 I Y>0 D TESTHELP^GMRCAU(SERV)
"RTN","GMRCT",94,0)
 Q
"RTN","GMRCT",95,0)
TSTINTRO ; entry action for GMRC USER NOTIFICATION
"RTN","GMRCT",96,0)
 W !,"This option will list how a given user became a notification recipient"
"RTN","GMRCT",97,0)
 W !,"for a selected consult service. If the PROCESS PARENTS FOR NOTIFS field is"
"RTN","GMRCT",98,0)
 W !,"set to YES, all the parents of the service will also be processed to"
"RTN","GMRCT",99,0)
 W !,"determine if the user is a recipient via that service.",!!
"RTN","GMRCT",100,0)
 Q
"UP",123.5,123.555,-1)
123.5^123.33
"UP",123.5,123.555,0)
123.555
"UP",123.5,123.57,-1)
123.5^123.31
"UP",123.5,123.57,0)
123.57
"UP",123.5,123.58,-1)
123.5^123.34
"UP",123.5,123.58,0)
123.58
"UP",123.5,123.59,-1)
123.5^123.35
"UP",123.5,123.59,0)
123.59
"VER")
8.0^22.0
"^DD",123.5,123.5,.06,0)
UNRESTRICTED ACCESS^S^1:YES;0:NO;^0;6^Q
"^DD",123.5,123.5,.06,3)
Enter Y or YES to allow all users to update requests for this service
"^DD",123.5,123.5,.06,21,0)
^^8^8^2990719^^
"^DD",123.5,123.5,.06,21,1,0)
This field, if set to yes will allow all users to perform the full range
"^DD",123.5,123.5,.06,21,2,0)
of update activities on consult or procedure requests directed to this
"^DD",123.5,123.5,.06,21,3,0)
service. If this field is set to yes, all other fields related to
"^DD",123.5,123.5,.06,21,4,0)
assignment of update users are ignored. 
"^DD",123.5,123.5,.06,21,5,0)
 
"^DD",123.5,123.5,.06,21,6,0)
The SERVICE INDIVIDUAL TO NOTIFY and the SERVICE TEAM(S) TO NOTIFY fields
"^DD",123.5,123.5,.06,21,7,0)
will still be used to determine notification recipients for each
"^DD",123.5,123.5,.06,21,8,0)
individual service. 
"^DD",123.5,123.5,.06,"DT")
2990712
"^DD",123.5,123.5,.07,0)
PROCESS PARENTS FOR UPDATES^S^1:YES;0:NO;^0;7^Q
"^DD",123.5,123.5,.07,3)
Enter YES to have parent services checked for user update authority.
"^DD",123.5,123.5,.07,21,0)
^^2^2^2990722^
"^DD",123.5,123.5,.07,21,1,0)
This field, if set to YES will cause the parent services of the this 
"^DD",123.5,123.5,.07,21,2,0)
service to be screened to determine update authority for a given user. 
"^DD",123.5,123.5,.07,"DT")
2990722
"^DD",123.5,123.5,.08,0)
PROCESS PARENTS FOR NOTIFS^S^1:YES;0:NO;^0;8^Q
"^DD",123.5,123.5,.08,3)
Enter YES to process parent services for notification recipients.
"^DD",123.5,123.5,.08,21,0)
^^2^2^2991129^^
"^DD",123.5,123.5,.08,21,1,0)
This field, if set to YES will cause the parent services of this service
"^DD",123.5,123.5,.08,21,2,0)
to be processed when determining notification recipients. 
"^DD",123.5,123.5,.08,"DT")
2990722
"^DD",123.5,123.5,123.31,0)
UPDATE TEAMS W/O NOTIFICATIONS^123.57P^^123.31;0
"^DD",123.5,123.5,123.31,21,0)
^^3^3^2990719^^
"^DD",123.5,123.5,123.31,21,1,0)
This field will allow teams of users to be assigned as update users. Team
"^DD",123.5,123.5,123.31,21,2,0)
members will not receive notifications as a result of the team being
"^DD",123.5,123.5,123.31,21,3,0)
entered in this field. 
"^DD",123.5,123.5,123.33,0)
ADMINISTRATIVE UPDATE USERS^123.555P^^123.33;0
"^DD",123.5,123.5,123.33,"DT")
2991129
"^DD",123.5,123.5,123.34,0)
ADMINISTRATIVE UPDATE TEAMS^123.58P^^123.34;0
"^DD",123.5,123.5,123.34,"DT")
2991129
"^DD",123.5,123.5,123.35,0)
UPDATE USER CLASSES W/O NOTIFS^123.59P^^123.35;0
"^DD",123.5,123.5,123.35,12)
Only active User Classes may be selected
"^DD",123.5,123.5,123.35,12.1)
I $P(^(0),"^",3)
"^DD",123.5,123.555,0)
ADMINISTRATIVE UPDATE USERS SUB-FIELD^^.02^2
"^DD",123.5,123.555,0,"NM","ADMINISTRATIVE UPDATE USERS")

"^DD",123.5,123.555,.01,0)
ADMINISTRATIVE UPDATE USER^MP200'^VA(200,^0;1^Q
"^DD",123.5,123.555,.01,1,0)
^.1
"^DD",123.5,123.555,.01,1,1,0)
123.555^B
"^DD",123.5,123.555,.01,1,1,1)
S ^GMR(123.5,DA(1),123.33,"B",$E(X,1,30),DA)=""
"^DD",123.5,123.555,.01,1,1,2)
K ^GMR(123.5,DA(1),123.33,"B",$E(X,1,30),DA)
"^DD",123.5,123.555,.01,3)
Enter the administrative users name.
"^DD",123.5,123.555,.01,21,0)
^^3^3^2991129^^^
"^DD",123.5,123.555,.01,21,1,0)
This multiple allows the administrative users for a service to be
"^DD",123.5,123.555,.01,21,2,0)
identified.  Administrative users update actions may be different from the
"^DD",123.5,123.555,.01,21,3,0)
service update users' actions.
"^DD",123.5,123.555,.01,"DT")
2991129
"^DD",123.5,123.555,.02,0)
NOTIFICATION RECIPIENT^S^1:YES;0:NO;^0;2^Q
"^DD",123.5,123.555,.02,1,0)
^.1
"^DD",123.5,123.555,.02,1,1,0)
123.555^AC^MUMPS
"^DD",123.5,123.555,.02,1,1,1)
S ^GMR(123.5,DA(1),123.33,"AC",X,$P(^GMR(123.5,DA(1),123.33,DA,0),"^"),DA)=""
"^DD",123.5,123.555,.02,1,1,2)
K ^GMR(123.5,DA(1),123.33,"AC",X,$P(^GMR(123.5,DA(1),123.33,DA,0),"^"),DA)
"^DD",123.5,123.555,.02,1,1,"DT")
2991124
"^DD",123.5,123.555,.02,3)
Enter YES if this Administrative user should receive notifications.
"^DD",123.5,123.555,.02,21,0)
^^2^2^2991123^
"^DD",123.5,123.555,.02,21,1,0)
This field, if set to YES will include this user in the list of
"^DD",123.5,123.555,.02,21,2,0)
notification recipients for this service. 
"^DD",123.5,123.555,.02,"DT")
2991124
"^DD",123.5,123.57,0)
UPDATE TEAMS W/O NOTIFICATIONS SUB-FIELD^^.01^1
"^DD",123.5,123.57,0,"DT")
2990712
"^DD",123.5,123.57,0,"IX","B",123.57,.01)

"^DD",123.5,123.57,0,"NM","UPDATE TEAMS W/O NOTIFICATIONS")

"^DD",123.5,123.57,0,"UP")
123.5
"^DD",123.5,123.57,.01,0)
UPDATE TEAMS W/O NOTIFICATIONS^MP100.21'^OR(100.21,^0;1^Q
"^DD",123.5,123.57,.01,1,0)
^.1
"^DD",123.5,123.57,.01,1,1,0)
123.57^B
"^DD",123.5,123.57,.01,1,1,1)
S ^GMR(123.5,DA(1),123.31,"B",$E(X,1,30),DA)=""
"^DD",123.5,123.57,.01,1,1,2)
K ^GMR(123.5,DA(1),123.31,"B",$E(X,1,30),DA)
"^DD",123.5,123.57,.01,1,2,0)
123.5^AUT
"^DD",123.5,123.57,.01,1,2,1)
S ^GMR(123.5,"AUT",$E(X,1,30),DA(1),DA)=""
"^DD",123.5,123.57,.01,1,2,2)
K ^GMR(123.5,"AUT",$E(X,1,30),DA(1),DA)
"^DD",123.5,123.57,.01,1,2,"%D",0)
^^2^2^2990902^
"^DD",123.5,123.57,.01,1,2,"%D",1,0)
This cross-reference is used to locate and delete pointers to the
"^DD",123.5,123.57,.01,1,2,"%D",2,0)
OE/RR LIST (#100.21) file that have been deleted.
"^DD",123.5,123.57,.01,1,2,"DT")
2990902
"^DD",123.5,123.57,.01,3)
Enter a team list of users to be assigned update authority for this service.
"^DD",123.5,123.57,.01,21,0)
^^3^3^2990719^^^
"^DD",123.5,123.57,.01,21,1,0)
This field allows team lists from the OE/RR LIST (#100.21) file to be
"^DD",123.5,123.57,.01,21,2,0)
entered. All users will have update authority for requests directed to
"^DD",123.5,123.57,.01,21,3,0)
this service but will not be used as notification recipients. 
"^DD",123.5,123.57,.01,"DT")
2990902
"^DD",123.5,123.58,0)
ADMINISTRATIVE UPDATE TEAMS SUB-FIELD^^.02^2
"^DD",123.5,123.58,0,"DT")
2991124
"^DD",123.5,123.58,0,"IX","AC",123.58,.02)

"^DD",123.5,123.58,0,"IX","B",123.58,.01)

"^DD",123.5,123.58,0,"NM","ADMINISTRATIVE UPDATE TEAMS")

"^DD",123.5,123.58,0,"UP")
123.5
"^DD",123.5,123.58,.01,0)
ADMINISTRATIVE UPDATE TEAM^MP100.21'^OR(100.21,^0;1^Q
"^DD",123.5,123.58,.01,1,0)
^.1
"^DD",123.5,123.58,.01,1,1,0)
123.58^B
"^DD",123.5,123.58,.01,1,1,1)
S ^GMR(123.5,DA(1),123.34,"B",$E(X,1,30),DA)=""
"^DD",123.5,123.58,.01,1,1,2)
K ^GMR(123.5,DA(1),123.34,"B",$E(X,1,30),DA)
"^DD",123.5,123.58,.01,1,2,0)
123.5^AAT
"^DD",123.5,123.58,.01,1,2,1)
S ^GMR(123.5,"AAT",$E(X,1,30),DA(1),DA)=""
"^DD",123.5,123.58,.01,1,2,2)
K ^GMR(123.5,"AAT",$E(X,1,30),DA(1),DA)
"^DD",123.5,123.58,.01,1,2,"%D",0)
^^2^2^2990902^
"^DD",123.5,123.58,.01,1,2,"%D",1,0)
This cross-reference is used to locate and delete pointers to the
"^DD",123.5,123.58,.01,1,2,"%D",2,0)
OE/RR LIST (#100.21) file that have been deleted. 
"^DD",123.5,123.58,.01,1,2,"DT")
2990902
"^DD",123.5,123.58,.01,3)
Enter a team list of users to be assigned administrative update privileges.
"^DD",123.5,123.58,.01,21,0)
^^3^3^2991129^
"^DD",123.5,123.58,.01,21,1,0)
This field allows team lists from the OE/RR LIST (#100.21) file to be
"^DD",123.5,123.58,.01,21,2,0)
entered. All provider/users of the teams will have administrative update
"^DD",123.5,123.58,.01,21,3,0)
authority for requests directed to this service.
"^DD",123.5,123.58,.01,"DT")
2991129
"^DD",123.5,123.58,.02,0)
NOTIFICATION RECIPIENTS^S^0:NO;1:YES;^0;2^Q
"^DD",123.5,123.58,.02,1,0)
^.1
"^DD",123.5,123.58,.02,1,1,0)
123.58^AC^MUMPS
"^DD",123.5,123.58,.02,1,1,1)
S ^GMR(123.5,DA(1),123.34,"AC",+X,$P(^GMR(123.5,DA(1),123.34,DA,0),"^"),DA)=""
"^DD",123.5,123.58,.02,1,1,2)
K ^GMR(123.5,DA(1),123.34,"AC",+X,$P(^GMR(123.5,DA(1),123.34,DA,0),"^"),DA)
"^DD",123.5,123.58,.02,1,1,"DT")
2991124
"^DD",123.5,123.58,.02,3)
Enter YES if these Administrative users should receive notifications.
"^DD",123.5,123.58,.02,21,0)
^^2^2^2991124^
"^DD",123.5,123.58,.02,21,1,0)
This field, if set to YES will include the users on the specified team in
"^DD",123.5,123.58,.02,21,2,0)
the list of notification recipients for this service.
"^DD",123.5,123.58,.02,"DT")
2991124
"^DD",123.5,123.59,0)
UPDATE USER CLASSES W/O NOTIFS SUB-FIELD^^.01^1
"^DD",123.5,123.59,0,"DT")
2990831
"^DD",123.5,123.59,0,"IX","B",123.59,.01)

"^DD",123.5,123.59,0,"NM","UPDATE USER CLASSES W/O NOTIFS")

"^DD",123.5,123.59,0,"UP")
123.5
"^DD",123.5,123.59,.01,0)
UPDATE USER CLASS W/O NOTIFS^M*P8930'^USR(8930,^0;1^S DIC("S")="I $P(^(0),""^"",3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",123.5,123.59,.01,1,0)
^.1
"^DD",123.5,123.59,.01,1,1,0)
123.59^B
"^DD",123.5,123.59,.01,1,1,1)
S ^GMR(123.5,DA(1),123.35,"B",$E(X,1,30),DA)=""
"^DD",123.5,123.59,.01,1,1,2)
K ^GMR(123.5,DA(1),123.35,"B",$E(X,1,30),DA)
"^DD",123.5,123.59,.01,3)
Enter a USER CLASS that can perform updates
"^DD",123.5,123.59,.01,12)
Only active User Classes may be selected
"^DD",123.5,123.59,.01,12.1)
S DIC("S")="I $P(^(0),""^"",3)"
"^DD",123.5,123.59,.01,21,0)
^^2^2^2990831^^^^
"^DD",123.5,123.59,.01,21,1,0)
This field will allow all members of the selected ASU User Class to
"^DD",123.5,123.59,.01,21,2,0)
perform full update actions on consults directed to this service.
"^DD",123.5,123.59,.01,"DT")
2990831
**END**
**END**
