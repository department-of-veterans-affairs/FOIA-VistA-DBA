Released XT*7.3*93 SEQ #73
Extracted from mail message
**KIDS**:XT*7.3*93^

**INSTALL NAME**
XT*7.3*93
"BLD",854,0)
XT*7.3*93^TOOLKIT^0^3050425^y
"BLD",854,1,0)
^^1^1^3050422^^^
"BLD",854,1,1,0)
Please see the patch description on Forum, in the National Patch Module.
"BLD",854,4,0)
^9.64PA^8985.1^1
"BLD",854,4,8985.1,0)
8985.1
"BLD",854,4,8985.1,222)
y^y^f^^^^n
"BLD",854,4,"B",8985.1,8985.1)

"BLD",854,"ABPKG")
n
"BLD",854,"KRN",0)
^9.67PA^8989.52^19
"BLD",854,"KRN",.4,0)
.4
"BLD",854,"KRN",.401,0)
.401
"BLD",854,"KRN",.402,0)
.402
"BLD",854,"KRN",.403,0)
.403
"BLD",854,"KRN",.5,0)
.5
"BLD",854,"KRN",.84,0)
.84
"BLD",854,"KRN",3.6,0)
3.6
"BLD",854,"KRN",3.8,0)
3.8
"BLD",854,"KRN",9.2,0)
9.2
"BLD",854,"KRN",9.8,0)
9.8
"BLD",854,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",854,"KRN",9.8,"NM",1,0)
XTID^^0^3782395
"BLD",854,"KRN",9.8,"NM",2,0)
XTID1^^0^27860493
"BLD",854,"KRN",9.8,"NM",3,0)
XTIDCTX^^0^18329767
"BLD",854,"KRN",9.8,"NM",4,0)
XTIDSET^^0^12683051
"BLD",854,"KRN",9.8,"NM",5,0)
XTIDTBL^^0^7276687
"BLD",854,"KRN",9.8,"NM",6,0)
XTIDTERM^^0^20599072
"BLD",854,"KRN",9.8,"NM","B","XTID",1)

"BLD",854,"KRN",9.8,"NM","B","XTID1",2)

"BLD",854,"KRN",9.8,"NM","B","XTIDCTX",3)

"BLD",854,"KRN",9.8,"NM","B","XTIDSET",4)

"BLD",854,"KRN",9.8,"NM","B","XTIDTBL",5)

"BLD",854,"KRN",9.8,"NM","B","XTIDTERM",6)

"BLD",854,"KRN",19,0)
19
"BLD",854,"KRN",19.1,0)
19.1
"BLD",854,"KRN",101,0)
101
"BLD",854,"KRN",409.61,0)
409.61
"BLD",854,"KRN",771,0)
771
"BLD",854,"KRN",870,0)
870
"BLD",854,"KRN",8989.51,0)
8989.51
"BLD",854,"KRN",8989.52,0)
8989.52
"BLD",854,"KRN",8994,0)
8994
"BLD",854,"KRN","B",.4,.4)

"BLD",854,"KRN","B",.401,.401)

"BLD",854,"KRN","B",.402,.402)

"BLD",854,"KRN","B",.403,.403)

"BLD",854,"KRN","B",.5,.5)

"BLD",854,"KRN","B",.84,.84)

"BLD",854,"KRN","B",3.6,3.6)

"BLD",854,"KRN","B",3.8,3.8)

"BLD",854,"KRN","B",9.2,9.2)

"BLD",854,"KRN","B",9.8,9.8)

"BLD",854,"KRN","B",19,19)

"BLD",854,"KRN","B",19.1,19.1)

"BLD",854,"KRN","B",101,101)

"BLD",854,"KRN","B",409.61,409.61)

"BLD",854,"KRN","B",771,771)

"BLD",854,"KRN","B",870,870)

"BLD",854,"KRN","B",8989.51,8989.51)

"BLD",854,"KRN","B",8989.52,8989.52)

"BLD",854,"KRN","B",8994,8994)

"BLD",854,"QUES",0)
^9.62^^
"BLD",854,"REQB",0)
^9.611^^
"FIA",8985.1)
XTID VUID FOR SET OF CODES
"FIA",8985.1,0)
^XTID(8985.1,
"FIA",8985.1,0,0)
8985.1
"FIA",8985.1,0,1)
y^y^f^^^^n
"FIA",8985.1,0,10)

"FIA",8985.1,0,11)

"FIA",8985.1,0,"RLRO")

"FIA",8985.1,0,"VR")
7.3^XT
"FIA",8985.1,8985.1)
0
"FIA",8985.1,8985.11)
0
"IX",8985.1,8985.1,"B",0)
8985.1^B^Used to ensure uniqueness of reference terms for set of codes^R^^R^IR^I^8985.1^^^^^LS
"IX",8985.1,8985.1,"B",1)
S ^XTID(8985.1,"B",X(1),X(2),X(3),DA)=""
"IX",8985.1,8985.1,"B",2)
K ^XTID(8985.1,"B",X(1),X(2),X(3),DA)
"IX",8985.1,8985.1,"B",2.5)
K ^XTID(8985.1,"B")
"IX",8985.1,8985.1,"B",11.1,0)
^.114IA^3^3
"IX",8985.1,8985.1,"B",11.1,1,0)
1^F^8985.1^.01^^1
"IX",8985.1,8985.1,"B",11.1,2,0)
2^F^8985.1^.02^^2
"IX",8985.1,8985.1,"B",11.1,3,0)
3^F^8985.1^.03^^3
"IX",8985.1,8985.1,"C",0)
8985.1^C^Used for locating reference terms by VUID and can indicate the master entry^R^^R^IR^I^8985.1^^^^^LS
"IX",8985.1,8985.1,"C",1)
S ^XTID(8985.1,"C",$E(X(1),1,20),$E(X(2),1,30),$E(X(3),1,30),$E(X(4),1,1),DA)=""
"IX",8985.1,8985.1,"C",2)
K ^XTID(8985.1,"C",$E(X(1),1,20),$E(X(2),1,30),$E(X(3),1,30),$E(X(4),1,1),DA)
"IX",8985.1,8985.1,"C",2.5)
K ^XTID(8985.1,"C")
"IX",8985.1,8985.1,"C",11.1,0)
^.114IA^4^4
"IX",8985.1,8985.1,"C",11.1,1,0)
1^F^8985.1^99.99^20^1^F
"IX",8985.1,8985.1,"C",11.1,2,0)
2^F^8985.1^.01^30^2^F
"IX",8985.1,8985.1,"C",11.1,3,0)
3^F^8985.1^.02^30^3^F
"IX",8985.1,8985.1,"C",11.1,4,0)
4^F^8985.1^99.98^1^4^F
"IX",8985.1,8985.11,"B",0)
8985.11^B^Uniqueness Index for Key 'A' of Subfile #8985.11^R^^F^IR^I^8985.11^^^^^LS
"IX",8985.1,8985.11,"B",1)
S ^XTID(8985.1,DA(1),"TERMSTATUS","B",X,DA)=""
"IX",8985.1,8985.11,"B",2)
K ^XTID(8985.1,DA(1),"TERMSTATUS","B",X,DA)
"IX",8985.1,8985.11,"B",2.5)
K ^XTID(8985.1,DA(1),"TERMSTATUS","B")
"IX",8985.1,8985.11,"B",11.1,0)
^.114IA^1^1
"IX",8985.1,8985.11,"B",11.1,1,0)
1^F^8985.11^.01^^1
"KEY",8985.1,8985.1,"A",0)
8985.1^A^P^87
"KEY",8985.1,8985.1,"A",2,0)
^.312IA^3^3
"KEY",8985.1,8985.1,"A",2,1,0)
.01^8985.1^1
"KEY",8985.1,8985.1,"A",2,2,0)
.02^8985.1^2
"KEY",8985.1,8985.1,"A",2,3,0)
.03^8985.1^3
"KEY",8985.1,8985.11,"A",0)
8985.11^A^P^88
"KEY",8985.1,8985.11,"A",2,0)
^.312IA^1^1
"KEY",8985.1,8985.11,"A",2,1,0)
.01^8985.11^1
"KEYPTR",8985.1,8985.1,"A")
8985.1^B
"KEYPTR",8985.1,8985.11,"A")
8985.11^B
"MBREQ")
0
"PKG",6,-1)
1^1
"PKG",6,0)
TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP^
"PKG",6,20,0)
^9.402P^^
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
7.3^3040428^2970513^2
"PKG",6,22,1,"PAH",1,0)
93^3050425
"PKG",6,22,1,"PAH",1,1,0)
^^1^1^3050425
"PKG",6,22,1,"PAH",1,1,1,0)
Please see the patch description on Forum, in the National Patch Module.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","XTID")
0^1^B3782395
"RTN","XTID",1,0)
XTID    ;OAKCIOFO/JLG - API set for VUID-Term/Concepts in VistA ;04/22/2005 15:12
"RTN","XTID",2,0)
 ;;7.3;TOOLKIT;**93**;Apr 25, 1995
"RTN","XTID",3,0)
 Q
"RTN","XTID",4,0)
 ;  API set for VUID Term/Concepts in VistA
"RTN","XTID",5,0)
 ; supported by IA # 4631
"RTN","XTID",6,0)
 ; official definition of API set can be viewed online
"RTN","XTID",7,0)
 ; in the VistA Document Library website
"RTN","XTID",8,0)
GETVUID(TFILE,TFIELD,TIREF) ;
"RTN","XTID",9,0)
 ;Function: Returns the VHA unique id (VUID) for a given term 
"RTN","XTID",10,0)
 ;  reference, TIREF.  TIREF is represented differently based 
"RTN","XTID",11,0)
 ;  in its context--the combined value of TFILE and TFIELD
"RTN","XTID",12,0)
 ; 
"RTN","XTID",13,0)
 ;Input:
"RTN","XTID",14,0)
 ; TFILE =  VistA file # where term is defined.
"RTN","XTID",15,0)
 ; (req)
"RTN","XTID",16,0)
 ; TFIELD = field #, in TFILE where term is defined.
"RTN","XTID",17,0)
 ; (opt)    When defined, it must be of type SET OF CODES.
"RTN","XTID",18,0)
 ;          When not defined, TFILE represents a "table" of terms
"RTN","XTID",19,0)
 ; TIREF =  term reference, as internal reference value.
"RTN","XTID",20,0)
 ; (req)    When TFIELD is defined (SET OF CODES), TIREF is the 
"RTN","XTID",21,0)
 ;          internal value used in the set of codes.
"RTN","XTID",22,0)
 ;          When TFIELD is not defined, TIREF is the IEN of the term
"RTN","XTID",23,0)
 ;          in TFILE.
"RTN","XTID",24,0)
 ; 
"RTN","XTID",25,0)
 ;Returns:  Returns the VHA unique id (VUID) as a number for
"RTN","XTID",26,0)
 ;  a given term reference.  On error, it returns  
"RTN","XTID",27,0)
 ;  "0^<error message>" 
"RTN","XTID",28,0)
 ;  
"RTN","XTID",29,0)
 G GETVUID^XTID1
"RTN","XTID",30,0)
 ;
"RTN","XTID",31,0)
SETVUID(TFILE,TFIELD,TIREF,TVUID) ;
"RTN","XTID",32,0)
 ;Function: Assigns (stores) a VHA unique id (VUID) to a given term
"RTN","XTID",33,0)
 ;  reference, TIREF.  TIREF is represented differently based in its 
"RTN","XTID",34,0)
 ;  context--the combined value of TFILE and TFIELD.
"RTN","XTID",35,0)
 ;  
"RTN","XTID",36,0)
 ;Input:
"RTN","XTID",37,0)
 ; TFILE =  VistA file # where term is defined.
"RTN","XTID",38,0)
 ; (req)
"RTN","XTID",39,0)
 ; TFIELD = field #, in TFILE where term is defined.
"RTN","XTID",40,0)
 ; (opt)    When defined, it must be of type SET OF CODES.
"RTN","XTID",41,0)
 ;          When not defined, TFILE represents a "table" of terms
"RTN","XTID",42,0)
 ; TIREF =  term reference, as internal reference value.
"RTN","XTID",43,0)
 ; (req)    When TFIELD is defined (SET OF CODES), TIREF is the 
"RTN","XTID",44,0)
 ;          internal value used in the set of codes.
"RTN","XTID",45,0)
 ;          When TFIELD is not defined, TIREF is the IEN of the term
"RTN","XTID",46,0)
 ;          in TFILE.
"RTN","XTID",47,0)
 ; TVUID =  The VUID number to assign to term reference.
"RTN","XTID",48,0)
 ; (req)
"RTN","XTID",49,0)
 ; 
"RTN","XTID",50,0)
 ;Returns:  Returns indication of operation as
"RTN","XTID",51,0)
 ;  1 for successful; or 
"RTN","XTID",52,0)
 ;  "0^<error message>" for unsuccessful
"RTN","XTID",53,0)
 ;           
"RTN","XTID",54,0)
 ;Modifies: updates or creates new entry in file 8985.1 or 
"RTN","XTID",55,0)
 ;          updates TFILE file
"RTN","XTID",56,0)
 ;  
"RTN","XTID",57,0)
 G SETVUID^XTID1
"RTN","XTID",58,0)
 ;
"RTN","XTID",59,0)
GETSTAT(TFILE,TFIELD,TIREF,TDATE) ;
"RTN","XTID",60,0)
 ;Function: Returns the status information for the given term (TIREF)
"RTN","XTID",61,0)
 ;  and date (TDATE). TIREF is represented differently based in its 
"RTN","XTID",62,0)
 ;  context--the combined value of TFILE and TFIELD
"RTN","XTID",63,0)
 ;  
"RTN","XTID",64,0)
 ;Input:
"RTN","XTID",65,0)
 ; TFILE =  VistA file # where term is defined.
"RTN","XTID",66,0)
 ; (req)
"RTN","XTID",67,0)
 ; TFIELD = field #, in TFILE where term is defined.
"RTN","XTID",68,0)
 ; (opt)    When defined, it must be of type SET OF CODES.
"RTN","XTID",69,0)
 ;          When not defined, TFILE represents a "table" of terms
"RTN","XTID",70,0)
 ; TIREF =  term reference, as internal reference value.
"RTN","XTID",71,0)
 ; (req)    When TFIELD is defined (SET OF CODES), TIREF is the 
"RTN","XTID",72,0)
 ;          internal value used in the set of codes.
"RTN","XTID",73,0)
 ;          When TFIELD is not defined, TIREF is the IEN of the term
"RTN","XTID",74,0)
 ;          in TFILE.
"RTN","XTID",75,0)
 ; TDATE =  FileMan date/time, defaults to NOW.
"RTN","XTID",76,0)
 ; (opt)
"RTN","XTID",77,0)
 ; 
"RTN","XTID",78,0)
 ;Returns:  Returns the status representation for a given 
"RTN","XTID",79,0)
 ;  term reference as
"RTN","XTID",80,0)
 ;  "<internal value>^<FileMan effective date/time>^<external value>"
"RTN","XTID",81,0)
 ;          where value is a set of codes (0:INACTIVE,1:ACTIVE).  
"RTN","XTID",82,0)
 ;          On error, it returns  
"RTN","XTID",83,0)
 ;  "^<error message>" 
"RTN","XTID",84,0)
 ;  
"RTN","XTID",85,0)
 G GETSTAT^XTID1
"RTN","XTID",86,0)
 ;
"RTN","XTID",87,0)
SETSTAT(TFILE,TFIELD,TIREF,TSTAT,TDATE) ;
"RTN","XTID",88,0)
 ;Function: Assigns (stores) status information (TSTAT and TDATE) 
"RTN","XTID",89,0)
 ;  to the given term reference, TIREF. TIREF is represented 
"RTN","XTID",90,0)
 ;  differently based in its context--the combined value of 
"RTN","XTID",91,0)
 ;  TFILE and TFIELD.
"RTN","XTID",92,0)
 ;  
"RTN","XTID",93,0)
 ;Input:
"RTN","XTID",94,0)
 ; TFILE =  VistA file # where term is defined.
"RTN","XTID",95,0)
 ; (req)
"RTN","XTID",96,0)
 ; TFIELD = field #, in TFILE where term is defined.
"RTN","XTID",97,0)
 ; (opt)    When defined, it must be of type SET OF CODES.
"RTN","XTID",98,0)
 ;          When not defined, TFILE represents a "table" of terms
"RTN","XTID",99,0)
 ; TIREF =  term reference, as internal reference value.
"RTN","XTID",100,0)
 ; (req)    When TFIELD is defined (SET OF CODES), TIREF is the 
"RTN","XTID",101,0)
 ;          internal value used in the set of codes.
"RTN","XTID",102,0)
 ;          When TFIELD is not defined, TIREF is the IEN of the term
"RTN","XTID",103,0)
 ;          in TFILE.
"RTN","XTID",104,0)
 ; TSTAT =  The status to assign (0 or 1).
"RTN","XTID",105,0)
 ; (req)    TSTAT is a set of codes (0:INACTIVE, 1:ACTIVE)
"RTN","XTID",106,0)
 ; 
"RTN","XTID",107,0)
 ; TDATE =  FileMan date/time, defaults to NOW.
"RTN","XTID",108,0)
 ; (opt)
"RTN","XTID",109,0)
 ;
"RTN","XTID",110,0)
 ;Returns:  Returns indication of operation
"RTN","XTID",111,0)
 ;  1:successful or or 
"RTN","XTID",112,0)
 ;  "0^<error message>" for unsuccessful
"RTN","XTID",113,0)
 ; 
"RTN","XTID",114,0)
 ;Modifies: updates entry in file 8985.1 or TFILE file
"RTN","XTID",115,0)
 ;  
"RTN","XTID",116,0)
 G SETSTAT^XTID1
"RTN","XTID",117,0)
 ;
"RTN","XTID",118,0)
GETMASTR(TFILE,TFIELD,TIREF) ;
"RTN","XTID",119,0)
 ;Function: Returns the MASTER VUID flag for a given term 
"RTN","XTID",120,0)
 ;  reference, TIREF.  TIREF is represented differently based 
"RTN","XTID",121,0)
 ;  in its context--the combined value of TFILE and TFIELD
"RTN","XTID",122,0)
 ; 
"RTN","XTID",123,0)
 ;Input:
"RTN","XTID",124,0)
 ; TFILE =  VistA file # where term is defined.
"RTN","XTID",125,0)
 ; (req)
"RTN","XTID",126,0)
 ; TFIELD = field #, in TFILE where term is defined.
"RTN","XTID",127,0)
 ; (opt)    When defined, it must be of type SET OF CODES.
"RTN","XTID",128,0)
 ;          When not defined, TFILE represents a "table" of terms
"RTN","XTID",129,0)
 ; TIREF =  term reference, as internal reference value.
"RTN","XTID",130,0)
 ; (req)    When TFIELD is defined (SET OF CODES), TIREF is the 
"RTN","XTID",131,0)
 ;          internal value used in the set of codes.
"RTN","XTID",132,0)
 ;          When TFIELD is not defined, TIREF is the IEN of the term
"RTN","XTID",133,0)
 ;          in TFILE.
"RTN","XTID",134,0)
 ; 
"RTN","XTID",135,0)
 ;Returns:  Returns the MASTER VUID value (set of codes: 0,1)
"RTN","XTID",136,0)
 ;          On error, it returns  
"RTN","XTID",137,0)
 ;  "^<error message>" 
"RTN","XTID",138,0)
 ;  
"RTN","XTID",139,0)
 G GETMASTR^XTID1
"RTN","XTID",140,0)
 ;
"RTN","XTID",141,0)
SETMASTR(TFILE,TFIELD,TIREF,TMASTER) ;
"RTN","XTID",142,0)
 ;Function: Assigns the MASTER VUID flag to a given term
"RTN","XTID",143,0)
 ;  reference, TIREF.  TIREF is represented differently based in its 
"RTN","XTID",144,0)
 ;  context--the combined value of TFILE and TFIELD.
"RTN","XTID",145,0)
 ;  
"RTN","XTID",146,0)
 ;Input:
"RTN","XTID",147,0)
 ; TFILE =  VistA file # where term is defined.
"RTN","XTID",148,0)
 ; (req)
"RTN","XTID",149,0)
 ; TFIELD = field #, in TFILE where term is defined.
"RTN","XTID",150,0)
 ; (opt)    When defined, it must be of type SET OF CODES.
"RTN","XTID",151,0)
 ;          When not defined, TFILE represents a "table" of terms
"RTN","XTID",152,0)
 ; TIREF =  term reference, as internal reference value.
"RTN","XTID",153,0)
 ; (req)    When TFIELD is defined (SET OF CODES), TIREF is the 
"RTN","XTID",154,0)
 ;          internal value used in the set of codes.
"RTN","XTID",155,0)
 ;          When TFIELD is not defined, TIREF is the IEN of the term
"RTN","XTID",156,0)
 ;          in TFILE.
"RTN","XTID",157,0)
 ; TMASTER =  The MASTER VUID flag value to assign to term reference.
"RTN","XTID",158,0)
 ; (req)
"RTN","XTID",159,0)
 ; 
"RTN","XTID",160,0)
 ;Returns:  Returns indication of operation as
"RTN","XTID",161,0)
 ;  1 for successful; or 
"RTN","XTID",162,0)
 ;  "0^<error message>" for unsuccessful
"RTN","XTID",163,0)
 ;           
"RTN","XTID",164,0)
 ;Modifies: updates entry in file 8985.1 or TFILE file
"RTN","XTID",165,0)
 ;  
"RTN","XTID",166,0)
 G SETMASTR^XTID1
"RTN","XTID",167,0)
 ;
"RTN","XTID",168,0)
GETIREF(TFILE,TFIELD,TVUID,TARRAY,TMASTER) ;
"RTN","XTID",169,0)
 ;Function: Returns a list of Terms' internal references (IREF) for 
"RTN","XTID",170,0)
 ;  a given  VUID (TVUID).  A term's file (TFILE) and field limit 
"RTN","XTID",171,0)
 ;  the size of the list to those terms found in a given file/field.  
"RTN","XTID",172,0)
 ;  TIREF is represented differently based in its context--the 
"RTN","XTID",173,0)
 ;  combined value of TFILE and TFIELD.
"RTN","XTID",174,0)
 ;  
"RTN","XTID",175,0)
 ;Input:
"RTN","XTID",176,0)
 ; TFILE =  VistA file # where term is defined.
"RTN","XTID",177,0)
 ; (opt)
"RTN","XTID",178,0)
 ; TFIELD = field #, in TFILE where term is defined.
"RTN","XTID",179,0)
 ; (opt)    When defined, it must be of type SET OF CODES.
"RTN","XTID",180,0)
 ;          When not defined, TFILE represents a "table" of terms
"RTN","XTID",181,0)
 ; TVUID =  term's VHA unique id.
"RTN","XTID",182,0)
 ; (req)    
"RTN","XTID",183,0)
 ; 
"RTN","XTID",184,0)
 ;Output:
"RTN","XTID",185,0)
 ; TARRAY =  name of local or global array that will contain the 
"RTN","XTID",186,0)
 ; (opt)    list of terms as
"RTN","XTID",187,0)
 ; 
"RTN","XTID",188,0)
 ;       ARRAY(TFILE,TFIELD,TIREF)= status
"RTN","XTID",189,0)
 ;           on error it returns
"RTN","XTID",190,0)
 ;       ARRAY("ERROR")="<error message>"
"RTN","XTID",191,0)
 ;          
"RTN","XTID",192,0)
 G GETIREF^XTID1
"RTN","XTID",193,0)
 ;
"RTN","XTID",194,0)
SCREEN(TFILE,TFIELD,TIREF,TDATE) ;
"RTN","XTID",195,0)
 ;Function: Returns the screening condition for the given term (TIREF) 
"RTN","XTID",196,0)
 ;  and date (TDATE).  TIREF is represented differently based in its 
"RTN","XTID",197,0)
 ;  context--the combined value of TFILE and TFIELD.
"RTN","XTID",198,0)
 ;  
"RTN","XTID",199,0)
 ;Input:
"RTN","XTID",200,0)
 ; TFILE =  VistA file # where term is defined.
"RTN","XTID",201,0)
 ; (req)
"RTN","XTID",202,0)
 ; TFIELD = field #, in TFILE where term is defined.
"RTN","XTID",203,0)
 ; (opt)    When defined, it must be of type SET OF CODES.
"RTN","XTID",204,0)
 ;          When not defined, TFILE represents a "table" of terms
"RTN","XTID",205,0)
 ; TIREF =  term reference, as internal reference value.
"RTN","XTID",206,0)
 ; (req)    When TFIELD is defined (SET OF CODES), TIREF is the 
"RTN","XTID",207,0)
 ;          internal value used in the set of codes.
"RTN","XTID",208,0)
 ;          When TFIELD is not defined, TIREF is the IEN of the term
"RTN","XTID",209,0)
 ;          in TFILE.
"RTN","XTID",210,0)
 ; TDATE =  FileMan date/time, defaults to NOW.
"RTN","XTID",211,0)
 ; (opt)
"RTN","XTID",212,0)
 ; 
"RTN","XTID",213,0)
 ;Returns:  0 (i.e. don't screen) if the term is/was active or 
"RTN","XTID",214,0)
 ;          1 if the term is/was inactive (i.e. screen).
"RTN","XTID",215,0)
 ;          
"RTN","XTID",216,0)
 G SCREEN^XTID1
"RTN","XTID",217,0)
 ;
"RTN","XTID1")
0^2^B27860493
"RTN","XTID1",1,0)
XTID1 ;OAKCIOFO/JLG - Implementation of API set in XTID ;04/20/2005 15:12
"RTN","XTID1",2,0)
 ;;7.3;TOOLKIT;**93**;Apr 25, 1995
"RTN","XTID1",3,0)
 ; Reference to $$SCREEN^HDISVF01 supported by IA #4640
"RTN","XTID1",4,0)
 Q
"RTN","XTID1",5,0)
GETVUID ;
"RTN","XTID1",6,0)
 ; called from GETVUID^XTID(TFILE,TFIELD,TIREF)
"RTN","XTID1",7,0)
 N CTX,TERM,VUID
"RTN","XTID1",8,0)
 S TFILE=+$G(TFILE),TFIELD=+$G(TFIELD),TIREF=$G(TIREF)
"RTN","XTID1",9,0)
 S:'TFIELD TFIELD=.01
"RTN","XTID1",10,0)
 D CONTEXT^XTIDCTX(TFILE,TFIELD,.CTX)
"RTN","XTID1",11,0)
 Q:'$D(CTX) "0^invalid combination of FILE/FIELD"
"RTN","XTID1",12,0)
 D FINDTERM^XTIDCTX(.CTX,TIREF,.TERM)
"RTN","XTID1",13,0)
 Q:'$D(TERM) "0^TERM IREF doesn't exist in this FILE/FIELD context"
"RTN","XTID1",14,0)
 S VUID=$$GETVUID^XTIDTERM(.TERM)
"RTN","XTID1",15,0)
 Q:'$G(VUID) "0^TERM index did not contain VUID value"
"RTN","XTID1",16,0)
 Q VUID
"RTN","XTID1",17,0)
 ;
"RTN","XTID1",18,0)
GETSTAT ;
"RTN","XTID1",19,0)
 ; called from GETSTAT^XTID(TFILE,TFIELD,TIREF,TDATE)
"RTN","XTID1",20,0)
 N CTX,STATUS,TERM
"RTN","XTID1",21,0)
 S TFILE=+$G(TFILE),TFIELD=+$G(TFIELD),TIREF=$G(TIREF)
"RTN","XTID1",22,0)
 S:'$G(TDATE) TDATE=$$NOW^XLFDT
"RTN","XTID1",23,0)
 S:'TFIELD TFIELD=.01
"RTN","XTID1",24,0)
 D CONTEXT^XTIDCTX(TFILE,TFIELD,.CTX)
"RTN","XTID1",25,0)
 Q:'$D(CTX) "^invalid combination of FILE/FIELD"
"RTN","XTID1",26,0)
 D FINDTERM^XTIDCTX(.CTX,TIREF,.TERM)
"RTN","XTID1",27,0)
 Q:'$D(TERM) "^TERM IREF doesn't exist in this FILE/FIELD context"
"RTN","XTID1",28,0)
 S STATUS=""
"RTN","XTID1",29,0)
 S STATUS=$$GETSTAT^XTIDTERM(.TERM,TDATE)
"RTN","XTID1",30,0)
 Q:STATUS']"" ""
"RTN","XTID1",31,0)
 Q STATUS
"RTN","XTID1",32,0)
 ;
"RTN","XTID1",33,0)
GETMASTR ;
"RTN","XTID1",34,0)
 ; called from GETMASTR^XTID(TFILE,TFIELD,TIREF)
"RTN","XTID1",35,0)
 N CTX,TERM,MASTR
"RTN","XTID1",36,0)
 S TFILE=+$G(TFILE),TFIELD=+$G(TFIELD),TIREF=$G(TIREF)
"RTN","XTID1",37,0)
 S:'TFIELD TFIELD=.01
"RTN","XTID1",38,0)
 D CONTEXT^XTIDCTX(TFILE,TFIELD,.CTX)
"RTN","XTID1",39,0)
 Q:'$D(CTX) "0^invalid combination of FILE/FIELD"
"RTN","XTID1",40,0)
 D FINDTERM^XTIDCTX(.CTX,TIREF,.TERM)
"RTN","XTID1",41,0)
 Q:'$D(TERM) "0^TERM IREF doesn't exist in this FILE/FIELD context"
"RTN","XTID1",42,0)
 S MASTR=""
"RTN","XTID1",43,0)
 S MASTR=$$GETMASTR^XTIDTERM(.TERM)
"RTN","XTID1",44,0)
 Q:MASTR']"" ""
"RTN","XTID1",45,0)
 Q MASTR
"RTN","XTID1",46,0)
 ;
"RTN","XTID1",47,0)
SETVUID ;
"RTN","XTID1",48,0)
 ; called from SETVUID^XTID(TFILE,TFIELD,TIREF,TVUID)
"RTN","XTID1",49,0)
 N CTX,TERM,SUCCESS,OLDVUID
"RTN","XTID1",50,0)
 S TFILE=+$G(TFILE),TFIELD=+$G(TFIELD),TIREF=$G(TIREF),TVUID=$G(TVUID)
"RTN","XTID1",51,0)
 S:'TFIELD TFIELD=.01
"RTN","XTID1",52,0)
 S SUCCESS=0
"RTN","XTID1",53,0)
 D CONTEXT^XTIDCTX(TFILE,TFIELD,.CTX)
"RTN","XTID1",54,0)
 Q:'$D(CTX) "0^invalid combination of FILE/FIELD"
"RTN","XTID1",55,0)
 Q:'$$VALIDREF^XTIDCTX(.CTX,TIREF) "0^TERM IREF doesn't exist in this FILE/FIELD context"
"RTN","XTID1",56,0)
 D FINDTERM^XTIDCTX(.CTX,TIREF,.TERM)
"RTN","XTID1",57,0)
 ;
"RTN","XTID1",58,0)
 ; create new term index entry in "set of codes" not in "tables"
"RTN","XTID1",59,0)
 I '$D(TERM) S SUCCESS=$$NEWTERM^XTIDCTX(.CTX,TIREF,TVUID) Q SUCCESS
"RTN","XTID1",60,0)
 ;
"RTN","XTID1",61,0)
 ; TERM exists
"RTN","XTID1",62,0)
 ; existing entries with empty VUID-related data
"RTN","XTID1",63,0)
 ; determine existing value of VUID
"RTN","XTID1",64,0)
 S OLDVUID=$$GETVUID^XTIDTERM(.TERM)
"RTN","XTID1",65,0)
 I OLDVUID S SUCCESS=$$RPLVUID(OLDVUID,TVUID) Q SUCCESS
"RTN","XTID1",66,0)
 ; 'OLDVUID
"RTN","XTID1",67,0)
 ; set VUID for the first time for existing entry
"RTN","XTID1",68,0)
 S SUCCESS=$$NEWVUID()
"RTN","XTID1",69,0)
 Q SUCCESS
"RTN","XTID1",70,0)
 ;
"RTN","XTID1",71,0)
SETSTAT ;
"RTN","XTID1",72,0)
 ; called from SETSTAT^XTID(TFILE,TFIELD,TIREF,TSTAT,TDATE)
"RTN","XTID1",73,0)
 N CTX,TERM
"RTN","XTID1",74,0)
 S TFILE=+$G(TFILE),TFIELD=+$G(TFIELD),TIREF=$G(TIREF),TSTAT=+$G(TSTAT)
"RTN","XTID1",75,0)
 S:'$G(TDATE) TDATE=$$NOW^XLFDT
"RTN","XTID1",76,0)
 S:'TFIELD TFIELD=.01
"RTN","XTID1",77,0)
 D CONTEXT^XTIDCTX(TFILE,TFIELD,.CTX)
"RTN","XTID1",78,0)
 Q:'$D(CTX) "0^invalid combination of FILE/FIELD"
"RTN","XTID1",79,0)
 D FINDTERM^XTIDCTX(.CTX,TIREF,.TERM)
"RTN","XTID1",80,0)
 Q:'$D(TERM) "0^TERM IREF doesn't exist in this FILE/FIELD context"
"RTN","XTID1",81,0)
 Q:'$$GETVUID^XTIDTERM(.TERM) "0^VUID value must exist before setting STATUS info"
"RTN","XTID1",82,0)
 Q:'$$SETSTAT^XTIDTERM(.TERM,TSTAT,TDATE) "0^unable to set status for the term index"
"RTN","XTID1",83,0)
 Q 1
"RTN","XTID1",84,0)
 ;
"RTN","XTID1",85,0)
SETMASTR ;
"RTN","XTID1",86,0)
 ; called from SETMASTR^XTID(TFILE,TFIELD,TIREF,TMASTER)
"RTN","XTID1",87,0)
 ; constraint: only one entry could be master for given
"RTN","XTID1",88,0)
 ; reference term, must check success after setting master
"RTN","XTID1",89,0)
 N CTX,TERM,NEWMASTR
"RTN","XTID1",90,0)
 S TFILE=+$G(TFILE),TFIELD=+$G(TFIELD),TIREF=$G(TIREF)
"RTN","XTID1",91,0)
 S TMASTER=+$G(TMASTER)
"RTN","XTID1",92,0)
 S:'TFIELD TFIELD=.01
"RTN","XTID1",93,0)
 D CONTEXT^XTIDCTX(TFILE,TFIELD,.CTX)
"RTN","XTID1",94,0)
 Q:'$D(CTX) "0^invalid combination of FILE/FIELD"
"RTN","XTID1",95,0)
 D FINDTERM^XTIDCTX(.CTX,TIREF,.TERM)
"RTN","XTID1",96,0)
 Q:'$D(TERM) "0^TERM IREF doesn't exist in this FILE/FIELD context"
"RTN","XTID1",97,0)
 Q:'$$GETVUID^XTIDTERM(.TERM) "0^VUID value must exist before setting master flag"
"RTN","XTID1",98,0)
 Q:'$$SETMASTR^XTIDTERM(.TERM,TMASTER) "0^unable to set master flag for the term index"
"RTN","XTID1",99,0)
 ; check success based on constraint
"RTN","XTID1",100,0)
 S NEWMASTR=$$GETMASTR^XTID(TFILE,TFIELD,TIREF)
"RTN","XTID1",101,0)
 Q:NEWMASTR'=TMASTER "0^pre-existing master entry"
"RTN","XTID1",102,0)
 Q 1
"RTN","XTID1",103,0)
 ;
"RTN","XTID1",104,0)
GETIREF ; 
"RTN","XTID1",105,0)
 ; called from GETIREF^XTID(TFILE,TFIELD,TVUID,TARRAY,TMASTER)
"RTN","XTID1",106,0)
 N CTX,TERM
"RTN","XTID1",107,0)
 S TFILE=+$G(TFILE),TFIELD=$G(TFIELD),TVUID=$G(TVUID)
"RTN","XTID1",108,0)
 S TMASTER=+$G(TMASTER)
"RTN","XTID1",109,0)
 Q:$G(TARRAY)']""
"RTN","XTID1",110,0)
 D CONTEXT^XTIDCTX(TFILE,TFIELD,.CTX)
"RTN","XTID1",111,0)
 I '$D(CTX) S @TARRAY@("ERROR")="invalid FILE/FIELD combination" Q
"RTN","XTID1",112,0)
 S @TARRAY=0
"RTN","XTID1",113,0)
 D SRCHTRMS^XTIDCTX(.CTX,TVUID,TARRAY,TMASTER)
"RTN","XTID1",114,0)
 Q
"RTN","XTID1",115,0)
 ;
"RTN","XTID1",116,0)
SCREEN ;
"RTN","XTID1",117,0)
 ; called from SCREEN^XTID(TFILE,TFIELD,TIREF,TDATE)
"RTN","XTID1",118,0)
 N SCREEN,STATUS,ACTIVE
"RTN","XTID1",119,0)
 S SCREEN=1
"RTN","XTID1",120,0)
 S:'$G(TDATE) TDATE=$$NOW^XLFDT
"RTN","XTID1",121,0)
 S SCREEN=$$SCREEN^HDISVF01(+$G(TFILE),+$G(TFIELD),+$G(TDATE))
"RTN","XTID1",122,0)
 Q:'SCREEN SCREEN
"RTN","XTID1",123,0)
 S STATUS=$$GETSTAT^XTID(+$G(TFILE),+$G(TFIELD),$G(TIREF),+$G(TDATE))
"RTN","XTID1",124,0)
 S ACTIVE=$P(STATUS,"^",1)
"RTN","XTID1",125,0)
 S SCREEN=$S(ACTIVE:0,1:1)
"RTN","XTID1",126,0)
 Q SCREEN
"RTN","XTID1",127,0)
 ;
"RTN","XTID1",128,0)
RPLVUID(OLDV,NEWV) ;
"RTN","XTID1",129,0)
 ; called from SETVUID(TFILE,TFIELD,TIREF,TVUID)
"RTN","XTID1",130,0)
 ; existing TERM index entry with VUID value
"RTN","XTID1",131,0)
 N SUCCESS S SUCCESS=1
"RTN","XTID1",132,0)
 I OLDV=NEWV Q SUCCESS
"RTN","XTID1",133,0)
 ; replace existing VUID value
"RTN","XTID1",134,0)
 I '$$SETVUID^XTIDTERM(.TERM,NEWV) D  Q SUCCESS
"RTN","XTID1",135,0)
 . S SUCCESS="0^unable to replace VUID value to existing term entry" Q
"RTN","XTID1",136,0)
 ;
"RTN","XTID1",137,0)
 Q SUCCESS
"RTN","XTID1",138,0)
 ;
"RTN","XTID1",139,0)
NEWVUID() ;
"RTN","XTID1",140,0)
 ; called from SETVUID(TFILE,TFIELD,TIREF,TVUID)
"RTN","XTID1",141,0)
 ; set VUID value to existing TERM entry
"RTN","XTID1",142,0)
 ; for the first time
"RTN","XTID1",143,0)
 N MASTER,SUCCESS
"RTN","XTID1",144,0)
 S SUCCESS=1,MASTER=1
"RTN","XTID1",145,0)
 I '$$SETVUID^XTIDTERM(.TERM,TVUID) D  Q SUCCESS
"RTN","XTID1",146,0)
 . S SUCCESS="0^unable to add VUID value to existing term entry"
"RTN","XTID1",147,0)
 ;
"RTN","XTID1",148,0)
 ; set master=1 default, will be overridden if duplicate master
"RTN","XTID1",149,0)
 I '$$SETMASTR^XTIDTERM(.TERM,MASTER) D  Q SUCCESS
"RTN","XTID1",150,0)
 . S SUCCESS="0^unable to add MASTER VUID value to existing term entry"
"RTN","XTID1",151,0)
 ;
"RTN","XTID1",152,0)
 Q SUCCESS
"RTN","XTID1",153,0)
 ;
"RTN","XTIDCTX")
0^3^B18329767
"RTN","XTIDCTX",1,0)
XTIDCTX ;OAKCIOFO/JLG - TERM/CONCEPT CONTEXT directories ;04/20/2005  15:12
"RTN","XTIDCTX",2,0)
 ;;7.3;TOOLKIT;**93**;Apr 25, 1995
"RTN","XTIDCTX",3,0)
 ; Reference to global "^DD" supported by IA #4634
"RTN","XTIDCTX",4,0)
 Q
"RTN","XTIDCTX",5,0)
 ; encapsulates the location (directory) of term/concept
"RTN","XTIDCTX",6,0)
 ; references based on FILE/FIELD.  
"RTN","XTIDCTX",7,0)
 ; It eventually encapsulates the retrieval of
"RTN","XTIDCTX",8,0)
 ; specific term/concept references (TERM defined in XTIDTERM) based 
"RTN","XTIDCTX",9,0)
 ; on the internal reference (IREF).
"RTN","XTIDCTX",10,0)
 ; There are two current implementations: one for terms defined
"RTN","XTIDCTX",11,0)
 ; as "set of codes"; the other defined in VistA files that have
"RTN","XTIDCTX",12,0)
 ; been updated to contain VUID-related data in their DD.
"RTN","XTIDCTX",13,0)
 ; CTX and TERM are passed by reference in all the subroutines
"RTN","XTIDCTX",14,0)
 ; 
"RTN","XTIDCTX",15,0)
CONTEXT(TFILE,TFIELD,CTX) ;  determine and create context impl
"RTN","XTIDCTX",16,0)
 ; returns new CTX array
"RTN","XTIDCTX",17,0)
 ; CTX("TYPE")=<"SET" or "TABLE" or "ROOT">
"RTN","XTIDCTX",18,0)
 ; CTX("TERM FILE#")=<TFILE or "">
"RTN","XTIDCTX",19,0)
 ; CTX("TERM FIELD#")=<TFIELD or "">
"RTN","XTIDCTX",20,0)
 ; CTX("SOURCE FILE#")=<8985.1 or TFILE or "">
"RTN","XTIDCTX",21,0)
 ; CTX("TERMSTATUS SUBFILE#")=
"RTN","XTIDCTX",22,0)
 ;       <subfile for the multi-valued field 
"RTN","XTIDCTX",23,0)
 ;        99.991, EFFECTIVE DATE/TIME or "">
"RTN","XTIDCTX",24,0)
 N TTYPE
"RTN","XTIDCTX",25,0)
 Q:$D(CTX)
"RTN","XTIDCTX",26,0)
 S TFILE=$G(TFILE),TFIELD=$G(TFIELD)
"RTN","XTIDCTX",27,0)
 S TTYPE=$$GETTYPE(TFILE,TFIELD)
"RTN","XTIDCTX",28,0)
 Q:TTYPE=""
"RTN","XTIDCTX",29,0)
 I TTYPE="SET" D CONTEXT^XTIDSET(TFILE,TFIELD,.CTX) Q
"RTN","XTIDCTX",30,0)
 I TTYPE="TABLE" D CONTEXT^XTIDTBL(TFILE,.01,.CTX) Q
"RTN","XTIDCTX",31,0)
 I TTYPE="ROOT" D ROOTCTX(.CTX) Q
"RTN","XTIDCTX",32,0)
 Q
"RTN","XTIDCTX",33,0)
 ;
"RTN","XTIDCTX",34,0)
VALIDREF(CTX,TIREF) ; validate IREF
"RTN","XTIDCTX",35,0)
 ; validate internal reference against given CTX
"RTN","XTIDCTX",36,0)
 N VALID S VALID=1
"RTN","XTIDCTX",37,0)
 Q:'$D(CTX) 'VALID
"RTN","XTIDCTX",38,0)
 I CTX("TYPE")="SET" D  Q VALID
"RTN","XTIDCTX",39,0)
 . S VALID=$$VALIDREF^XTIDSET(.CTX,$G(TIREF))
"RTN","XTIDCTX",40,0)
 ;
"RTN","XTIDCTX",41,0)
 I CTX("TYPE")="TABLE" D  Q VALID
"RTN","XTIDCTX",42,0)
 . S VALID=$$VALIDREF^XTIDTBL(.CTX,$G(TIREF))
"RTN","XTIDCTX",43,0)
 ;
"RTN","XTIDCTX",44,0)
 Q 'VALID
"RTN","XTIDCTX",45,0)
FINDTERM(CTX,TIREF,TERM) ; find term 
"RTN","XTIDCTX",46,0)
 ; find the single term reference for given term IREF
"RTN","XTIDCTX",47,0)
 ; return TERM data as new TERM array
"RTN","XTIDCTX",48,0)
 ; IREF is unique within a given CTX, except for "RO0T" context
"RTN","XTIDCTX",49,0)
 ; on success, attach CTX to TERM array
"RTN","XTIDCTX",50,0)
 Q:'$D(CTX)!($D(TERM))
"RTN","XTIDCTX",51,0)
 I CTX("TYPE")="SET" D FINDTERM^XTIDSET(.CTX,$G(TIREF),.TERM)
"RTN","XTIDCTX",52,0)
 I CTX("TYPE")="TABLE" D FINDTERM^XTIDTBL(.CTX,$G(TIREF),.TERM)
"RTN","XTIDCTX",53,0)
 ; don't find term reference for "ROOT" type, where IREF is not unique
"RTN","XTIDCTX",54,0)
 ; on success, attach CTX to TERM
"RTN","XTIDCTX",55,0)
 I $D(TERM) M TERM("CTX")=CTX
"RTN","XTIDCTX",56,0)
 Q
"RTN","XTIDCTX",57,0)
 ;
"RTN","XTIDCTX",58,0)
NEWTERM(CTX,TIREF,VUID) ; create a new term reference with given VUID
"RTN","XTIDCTX",59,0)
 ; only for "set of codes"
"RTN","XTIDCTX",60,0)
 ; on success (term entry), new TERM array is returned
"RTN","XTIDCTX",61,0)
 ; create a new entry in the Kernel (8985.1) file only (set of codes)
"RTN","XTIDCTX",62,0)
 N SUCCESS
"RTN","XTIDCTX",63,0)
 S TIREF=$G(TIREF),VUID=+$G(VUID)
"RTN","XTIDCTX",64,0)
 Q:'$D(CTX)!('VUID) 0
"RTN","XTIDCTX",65,0)
 ; create new term reference entry only for "set of codes"
"RTN","XTIDCTX",66,0)
 Q:CTX("TYPE")'="SET" 0
"RTN","XTIDCTX",67,0)
 Q $$NEWTERM^XTIDSET(.CTX,TIREF,VUID)
"RTN","XTIDCTX",68,0)
 ;
"RTN","XTIDCTX",69,0)
GETTERM(CTX,FILE,IENS,TERM) ; get term
"RTN","XTIDCTX",70,0)
 ; return TERM data as new TERM array
"RTN","XTIDCTX",71,0)
 ; called from CTX implementations only
"RTN","XTIDCTX",72,0)
 ; subroutine might be moved to XTIDTERM
"RTN","XTIDCTX",73,0)
 ; D GETS^DIQ(FILE,IENS,FIELD,FLAGS,TARGET_ROOT,MSG_ROOT)
"RTN","XTIDCTX",74,0)
 N DIERR,MSG
"RTN","XTIDCTX",75,0)
 S FILE=+$G(FILE),IENS=$G(IENS)
"RTN","XTIDCTX",76,0)
 ; ensure only CTX implementations use this for callback
"RTN","XTIDCTX",77,0)
 Q:'$D(CTX)!($D(TERM))!('FILE)!(IENS']"")
"RTN","XTIDCTX",78,0)
 D GETS^DIQ(FILE,IENS,"**","IR","TERM","MSG")
"RTN","XTIDCTX",79,0)
 Q:$D(MSG("DIERR"))
"RTN","XTIDCTX",80,0)
 Q
"RTN","XTIDCTX",81,0)
 ;
"RTN","XTIDCTX",82,0)
SRCHTRMS(CTX,VUID,XTCARR,MASTER) ; search term reference entries
"RTN","XTIDCTX",83,0)
 ; search term reference entries based on VUID and its context
"RTN","XTIDCTX",84,0)
 S VUID=$G(VUID),XTCARR=$G(XTCARR),MASTER=+$G(MASTER)
"RTN","XTIDCTX",85,0)
 ; CTX must be defined
"RTN","XTIDCTX",86,0)
 Q:'$D(CTX)!(XTCARR']"")!('VUID)
"RTN","XTIDCTX",87,0)
 I CTX("TYPE")="SET" D SRCHTRMS^XTIDSET(.CTX,VUID,XTCARR,MASTER) Q
"RTN","XTIDCTX",88,0)
 I CTX("TYPE")="TABLE" D SRCHTRMS^XTIDTBL(.CTX,VUID,XTCARR,MASTER) Q
"RTN","XTIDCTX",89,0)
 I CTX("TYPE")="ROOT" D  Q
"RTN","XTIDCTX",90,0)
 . ; each CTX implementation should contribute to XTCARR array
"RTN","XTIDCTX",91,0)
 . N FL
"RTN","XTIDCTX",92,0)
 . ; search "set of codes" first
"RTN","XTIDCTX",93,0)
 . ; temporarily set context info
"RTN","XTIDCTX",94,0)
 . S CTX("TYPE")="SET"
"RTN","XTIDCTX",95,0)
 . S CTX("SOURCE FILE#")=8985.1
"RTN","XTIDCTX",96,0)
 . D SRCHTRMS^XTIDSET(.CTX,VUID,XTCARR,MASTER)
"RTN","XTIDCTX",97,0)
 . ; search all "table" files
"RTN","XTIDCTX",98,0)
 . ; temporarily set context info
"RTN","XTIDCTX",99,0)
 . S CTX("TYPE")="TABLE"
"RTN","XTIDCTX",100,0)
 . S FL=0
"RTN","XTIDCTX",101,0)
 . F  S FL=$O(^DIC(FL)) Q:'FL  D
"RTN","XTIDCTX",102,0)
 . . Q:'$D(^DD(FL,99.991))
"RTN","XTIDCTX",103,0)
 . . Q:FL=8985.1
"RTN","XTIDCTX",104,0)
 . . S CTX("SOURCE FILE#")=FL
"RTN","XTIDCTX",105,0)
 . . S CTX("TERM FILE#")=FL
"RTN","XTIDCTX",106,0)
 . . S CTX("TERM FIELD#")=.01
"RTN","XTIDCTX",107,0)
 . . D SRCHTRMS^XTIDTBL(.CTX,VUID,XTCARR,MASTER)
"RTN","XTIDCTX",108,0)
 . ;
"RTN","XTIDCTX",109,0)
 . ; reset context info
"RTN","XTIDCTX",110,0)
 . S CTX("TYPE")="ROOT"
"RTN","XTIDCTX",111,0)
 . S CTX("SOURCE FILE#")=""
"RTN","XTIDCTX",112,0)
 . S CTX("TERM FILE#")=""
"RTN","XTIDCTX",113,0)
 . S CTX("TERM FIELD#")=""
"RTN","XTIDCTX",114,0)
 ;
"RTN","XTIDCTX",115,0)
 Q
"RTN","XTIDCTX",116,0)
 ;
"RTN","XTIDCTX",117,0)
ADDTARRY(XTC2ARR,FILE,FIELD,IREF,VALUE) ;
"RTN","XTIDCTX",118,0)
 ; adds element and value to XTC2ARR array (by name)
"RTN","XTIDCTX",119,0)
 ; called by CTX implementations of SRCHTRMS()
"RTN","XTIDCTX",120,0)
 ; increased count 
"RTN","XTIDCTX",121,0)
 N COUNT
"RTN","XTIDCTX",122,0)
 S COUNT=$G(@XTC2ARR)
"RTN","XTIDCTX",123,0)
 S @XTC2ARR@(+$G(FILE),+$G(FIELD),$G(IREF))=$G(VALUE)
"RTN","XTIDCTX",124,0)
 S @XTC2ARR=COUNT+1
"RTN","XTIDCTX",125,0)
 Q
"RTN","XTIDCTX",126,0)
 ;
"RTN","XTIDCTX",127,0)
GETTYPE(FILE,FIELD) ; determine type of context
"RTN","XTIDCTX",128,0)
 ; based on FILE and FIELD combination
"RTN","XTIDCTX",129,0)
 ; D FIELD^DID(FILE,FIELD,FLAGS,ATTRIBUTES,TARGET_ROOT,MSG_ROOT)
"RTN","XTIDCTX",130,0)
 N DIERR,ATTR,MSG,TYPE
"RTN","XTIDCTX",131,0)
 S FILE=+$G(FILE),FIELD=$G(FIELD)
"RTN","XTIDCTX",132,0)
 S TYPE=""
"RTN","XTIDCTX",133,0)
 ; file may be empty in GETIREF^XTID use-case
"RTN","XTIDCTX",134,0)
 I 'FILE S TYPE="ROOT" Q TYPE
"RTN","XTIDCTX",135,0)
 ; determine if "table" type, by checking VUID DD
"RTN","XTIDCTX",136,0)
 I FIELD=""!(FIELD=.01) D
"RTN","XTIDCTX",137,0)
 . N VFIELD
"RTN","XTIDCTX",138,0)
 . S VFIELD=99.99 ; test existence of VUID field
"RTN","XTIDCTX",139,0)
 . D FIELD^DID(FILE,VFIELD,"","LABEL","ATTR","MSG")
"RTN","XTIDCTX",140,0)
 . ;Q:$D(MSG("DIERR"))  ; INVALID type returned
"RTN","XTIDCTX",141,0)
 . I $G(ATTR("LABEL"))="VUID" S TYPE="TABLE"
"RTN","XTIDCTX",142,0)
 ;
"RTN","XTIDCTX",143,0)
 Q:TYPE'="" TYPE
"RTN","XTIDCTX",144,0)
 ; determine if FIELD is a SET OF CODES
"RTN","XTIDCTX",145,0)
 ; D FIELD^DID(FILE,FIELD,"","TYPE","ATTR","MSG")
"RTN","XTIDCTX",146,0)
 ; Q:$D(MSG("DIERR")) TYPE
"RTN","XTIDCTX",147,0)
 ; I $G(ATTR("TYPE"))="SET" S TYPE="SET" Q TYPE
"RTN","XTIDCTX",148,0)
 ; DS requested to assume "SET"
"RTN","XTIDCTX",149,0)
 S TYPE="SET"
"RTN","XTIDCTX",150,0)
 Q TYPE
"RTN","XTIDCTX",151,0)
 ;
"RTN","XTIDCTX",152,0)
ROOTCTX(CTX) ; set up Context for "ROOT" type
"RTN","XTIDCTX",153,0)
 ; called from CONTEXT^XTIDCTX(TFILE,TFIELD,CTX)
"RTN","XTIDCTX",154,0)
 ; called only when TFILE is not defined
"RTN","XTIDCTX",155,0)
 S CTX("TYPE")="ROOT"
"RTN","XTIDCTX",156,0)
 S CTX("TERM FILE#")=""
"RTN","XTIDCTX",157,0)
 S CTX("TERM FIELD#")=""
"RTN","XTIDCTX",158,0)
 ; the default source file 
"RTN","XTIDCTX",159,0)
 S CTX("SOURCE FILE#")=""
"RTN","XTIDCTX",160,0)
 ; TERMSTATUS 99.991, EFFECTIVE DATE/TIME subfile
"RTN","XTIDCTX",161,0)
 S CTX("TERMSTATUS SUBFILE#")=""
"RTN","XTIDCTX",162,0)
 Q
"RTN","XTIDCTX",163,0)
 ;
"RTN","XTIDSET")
0^4^B12683051
"RTN","XTIDSET",1,0)
XTIDSET ;OAKCIOFO/JLG - SET OF CODES CONTEXT ;04/25/2005  15:12
"RTN","XTIDSET",2,0)
 ;;7.3;TOOLKIT;**93**;Apr 25, 1995
"RTN","XTIDSET",3,0)
 Q
"RTN","XTIDSET",4,0)
 ; Context implementation for "set of codes"
"RTN","XTIDSET",5,0)
 ; CTX and TERM are passed by ref in all calls
"RTN","XTIDSET",6,0)
CONTEXT(TFILE,TFIELD,CTX) ; set up Context for "set of codes" type
"RTN","XTIDSET",7,0)
 ; called from CONTEXT^XTIDCTX(TFILE,TFIELD,CTX)
"RTN","XTIDSET",8,0)
 ; returns a valid new CTX array
"RTN","XTIDSET",9,0)
 S TFILE=+$G(TFILE),TFIELD=$G(TFIELD)
"RTN","XTIDSET",10,0)
 Q:'TFILE!($D(CTX))
"RTN","XTIDSET",11,0)
 S CTX("TYPE")="SET"
"RTN","XTIDSET",12,0)
 S CTX("TERM FILE#")=TFILE
"RTN","XTIDSET",13,0)
 S CTX("TERM FIELD#")=TFIELD
"RTN","XTIDSET",14,0)
 ; the default source file 
"RTN","XTIDSET",15,0)
 S CTX("SOURCE FILE#")=8985.1
"RTN","XTIDSET",16,0)
 ; TERMSTATUS 99.991, EFFECTIVE DATE/TIME subfile
"RTN","XTIDSET",17,0)
 S CTX("TERMSTATUS SUBFILE#")=8985.11
"RTN","XTIDSET",18,0)
 Q
"RTN","XTIDSET",19,0)
 ;
"RTN","XTIDSET",20,0)
VALIDREF(CTX,TIREF) ; validate the term, internal ref
"RTN","XTIDSET",21,0)
 ; test TIREF is a valid value in set of codes
"RTN","XTIDSET",22,0)
 Q:'$D(CTX)!($G(TIREF)']"") 0
"RTN","XTIDSET",23,0)
 ; as requested by DS, no need for this restrictive validation 
"RTN","XTIDSET",24,0)
 ; as some terms to be filed in "set of codes" kernel file
"RTN","XTIDSET",25,0)
 ; may not yet exist in their original file.
"RTN","XTIDSET",26,0)
 ;Q $$MEMBER(CTX("TERM FILE#"),CTX("TERM FIELD#"),TIREF)
"RTN","XTIDSET",27,0)
 Q 1
"RTN","XTIDSET",28,0)
 ;
"RTN","XTIDSET",29,0)
FINDTERM(CTX,TIREF,TERM) ; find term in given context
"RTN","XTIDSET",30,0)
 ; called from FINDTERM^XTIDCTX(CTX,TIREF,TERM)
"RTN","XTIDSET",31,0)
 ; return TERM data as new TERM array
"RTN","XTIDSET",32,0)
 N IENS
"RTN","XTIDSET",33,0)
 Q:'$D(CTX)!($D(TERM))
"RTN","XTIDSET",34,0)
 Q:'$$VALIDREF(.CTX,$G(TIREF))
"RTN","XTIDSET",35,0)
 S IENS=$$GETIENS($G(TIREF))
"RTN","XTIDSET",36,0)
 Q:IENS']""
"RTN","XTIDSET",37,0)
 D GETTERM^XTIDCTX(.CTX,CTX("SOURCE FILE#"),IENS,.TERM)
"RTN","XTIDSET",38,0)
 Q
"RTN","XTIDSET",39,0)
 ;
"RTN","XTIDSET",40,0)
NEWTERM(CTX,TIREF,VUID) ; create new term index entry
"RTN","XTIDSET",41,0)
 ; called from NEWTERM^XTIDCTX(CTX,TIREF,VUID,TERM)
"RTN","XTIDSET",42,0)
 ; D UPDATE^DIE(FLAGS,FDA_ROOT,IEN_ROOT,MSG_ROOT)
"RTN","XTIDSET",43,0)
 N DIERR,FILE,SFILE,FLAGS,MASTER,MSG,MYFDA,MYIEN,SUCCESS
"RTN","XTIDSET",44,0)
 S TIREF=$G(TIREF),VUID=+$G(VUID)
"RTN","XTIDSET",45,0)
 Q:'$D(CTX)!($D(TERM))!('VUID) 0
"RTN","XTIDSET",46,0)
 Q:'$$VALIDREF(.CTX,TIREF) 0
"RTN","XTIDSET",47,0)
 S SUCCESS=0,FLAGS="KS"
"RTN","XTIDSET",48,0)
 S MASTER=1
"RTN","XTIDSET",49,0)
 I $$DUPLMSTR^XTIDTERM(CTX("TERM FILE#"),CTX("TERM FIELD#"),VUID) D
"RTN","XTIDSET",50,0)
 . S MASTER=0
"RTN","XTIDSET",51,0)
 S FILE=CTX("SOURCE FILE#")
"RTN","XTIDSET",52,0)
 S SFILE=CTX("TERMSTATUS SUBFILE#")
"RTN","XTIDSET",53,0)
 S MYFDA(FILE,"+1,",.01)=CTX("TERM FILE#")
"RTN","XTIDSET",54,0)
 S MYFDA(FILE,"+1,",.02)=CTX("TERM FIELD#")
"RTN","XTIDSET",55,0)
 S MYFDA(FILE,"+1,",.03)=TIREF
"RTN","XTIDSET",56,0)
 S MYFDA(FILE,"+1,",99.99)=VUID
"RTN","XTIDSET",57,0)
 S MYFDA(FILE,"+1,",99.98)=MASTER
"RTN","XTIDSET",58,0)
 D UPDATE^DIE(FLAGS,"MYFDA","MYIEN","MSG")
"RTN","XTIDSET",59,0)
 S:'$D(MSG("DIERR")) SUCCESS=1
"RTN","XTIDSET",60,0)
 ; success, build TERM and return
"RTN","XTIDSET",61,0)
 Q SUCCESS
"RTN","XTIDSET",62,0)
 ;
"RTN","XTIDSET",63,0)
SRCHTRMS(CTX,VUID,XTSARR,MASTER) ; search term index entries
"RTN","XTIDSET",64,0)
 ; called from SEARCH^XTIDCTX(CTX,VUID,XTCARR,MASTER)
"RTN","XTIDSET",65,0)
 N DIERR,FILE,XTC,FIELD
"RTN","XTIDSET",66,0)
 S VUID=$G(VUID),MASTER=+$G(MASTER)
"RTN","XTIDSET",67,0)
 Q:$G(CTX("TYPE"))'="SET"!('VUID)
"RTN","XTIDSET",68,0)
 S FILE=$G(CTX("TERM FILE#"))
"RTN","XTIDSET",69,0)
 S FIELD=$G(CTX("TERM FIELD#"))
"RTN","XTIDSET",70,0)
 ; search in ^XTID(8985.1,"C",VUID,FILE,FIELD,FLAG,IEN)=""
"RTN","XTIDSET",71,0)
 Q:'$D(^XTID(8985.1,"C",VUID))
"RTN","XTIDSET",72,0)
 M XTC=^XTID(8985.1,"C",VUID)
"RTN","XTIDSET",73,0)
 ; search everywhere
"RTN","XTIDSET",74,0)
 I FILE="" D  Q
"RTN","XTIDSET",75,0)
 . F  S FILE=$O(XTC(FILE)) Q:'FILE  D L1
"RTN","XTIDSET",76,0)
 ;
"RTN","XTIDSET",77,0)
 I FILE,FIELD="" D L1 Q
"RTN","XTIDSET",78,0)
 I FILE,FIELD D L2 Q
"RTN","XTIDSET",79,0)
 ;
"RTN","XTIDSET",80,0)
 Q
"RTN","XTIDSET",81,0)
 ;
"RTN","XTIDSET",82,0)
L1 ;
"RTN","XTIDSET",83,0)
 N FIELD
"RTN","XTIDSET",84,0)
 S FIELD="" F  S FIELD=$O(XTC(FILE,FIELD)) Q:'FIELD  D L2
"RTN","XTIDSET",85,0)
 Q
"RTN","XTIDSET",86,0)
 ;
"RTN","XTIDSET",87,0)
L2 ;
"RTN","XTIDSET",88,0)
 N IEN,MSTR,IREF,STATUS
"RTN","XTIDSET",89,0)
 S MSTR="" F  S MSTR=$O(XTC(FILE,FIELD,MSTR)) Q:MSTR=""  D
"RTN","XTIDSET",90,0)
 . S IEN=0 F  S IEN=$O(XTC(FILE,FIELD,MSTR,IEN)) Q:'IEN  D
"RTN","XTIDSET",91,0)
 . . I MASTER,MSTR=0 Q
"RTN","XTIDSET",92,0)
 . . S IREF=$P($G(^XTID(8985.1,IEN,0)),"^",3)
"RTN","XTIDSET",93,0)
 . . S STATUS=$$GETSTAT^XTID(FILE,FIELD,IREF,"")
"RTN","XTIDSET",94,0)
 . . S STATUS=STATUS_"^"_MSTR
"RTN","XTIDSET",95,0)
 . . D ADDTARRY^XTIDCTX(XTSARR,FILE,FIELD,IREF,STATUS)
"RTN","XTIDSET",96,0)
 . ;
"RTN","XTIDSET",97,0)
 ;
"RTN","XTIDSET",98,0)
 Q
"RTN","XTIDSET",99,0)
 ;
"RTN","XTIDSET",100,0)
GETIENS(TIREF) ; find term's ien/IENS
"RTN","XTIDSET",101,0)
 ; find term entry and return IENS
"RTN","XTIDSET",102,0)
 ; $$FIND1^DIC(FILE,IENS,FLAGS,[.]VALUE,[.]INDEXES,.SCREEN,MSG_ROOT)
"RTN","XTIDSET",103,0)
 N DIERR,FILE,FLAGS,INDEXES,MSG,RIEN,VALUE
"RTN","XTIDSET",104,0)
 S FILE=CTX("SOURCE FILE#"),FLAGS="KQX",INDEXES="",RIEN=""
"RTN","XTIDSET",105,0)
 S VALUE(1)=CTX("TERM FILE#")
"RTN","XTIDSET",106,0)
 S VALUE(2)=CTX("TERM FIELD#")
"RTN","XTIDSET",107,0)
 S VALUE(3)=TIREF
"RTN","XTIDSET",108,0)
 ; get record IEN
"RTN","XTIDSET",109,0)
 ;S RIEN=$$FIND1^DIC(FILE,"",FLAGS,.VALUE,INDEXES,"","MSG")
"RTN","XTIDSET",110,0)
 S RIEN=$O(^XTID(FILE,"B",VALUE(1),VALUE(2),VALUE(3),0))
"RTN","XTIDSET",111,0)
 Q:RIEN RIEN_","
"RTN","XTIDSET",112,0)
 Q RIEN
"RTN","XTIDSET",113,0)
 ;
"RTN","XTIDSET",114,0)
MEMBER(FILE,FIELD,VALUE) ; valid member in "set of codes"?
"RTN","XTIDSET",115,0)
 ; validate VALUE for this FIELD
"RTN","XTIDSET",116,0)
 ; for validation purposes only, RESULT not used
"RTN","XTIDSET",117,0)
 ; D VAL^DIE(FILE,IENS,FIELD,FLAGS,VALUE,.RESULT,FDA_ROOT,MSG_ROOT)
"RTN","XTIDSET",118,0)
 N DIERR,FLAGS,IENS,MSG,RESULT,SUCCESS
"RTN","XTIDSET",119,0)
 S SUCCESS=0
"RTN","XTIDSET",120,0)
 S FLAGS="U",IENS="+1,"
"RTN","XTIDSET",121,0)
 D VAL^DIE(CTX("TERM FILE#"),IENS,CTX("TERM FIELD#"),FLAGS,VALUE,.RESULT,"","MSG")
"RTN","XTIDSET",122,0)
 S:'$D(MSG("DIERR")) SUCCESS=1
"RTN","XTIDSET",123,0)
 Q SUCCESS
"RTN","XTIDSET",124,0)
 ;
"RTN","XTIDTBL")
0^5^B7276687
"RTN","XTIDTBL",1,0)
XTIDTBL ;OAKCIOFO/JLG - TABLE CONTEXT ;04/21/2005  15:12
"RTN","XTIDTBL",2,0)
 ;;7.3;TOOLKIT;**93**;Apr 25, 1995
"RTN","XTIDTBL",3,0)
 Q
"RTN","XTIDTBL",4,0)
 ; Context implementation for "table"
"RTN","XTIDTBL",5,0)
 ; CTX and TERM are passed by ref in all calls
"RTN","XTIDTBL",6,0)
CONTEXT(TFILE,TFIELD,CTX) ; set up Context for "table" type
"RTN","XTIDTBL",7,0)
 ; called from CONTEXT^XTIDCTX(TFILE,TFIELD,CTX)
"RTN","XTIDTBL",8,0)
 ; returns a valid new CTX array
"RTN","XTIDTBL",9,0)
 N SUBFILE
"RTN","XTIDTBL",10,0)
 S TFILE=+$G(TFILE)
"RTN","XTIDTBL",11,0)
 Q:'TFILE!($D(CTX))
"RTN","XTIDTBL",12,0)
 ; determine the subfile for the multi-valued field 
"RTN","XTIDTBL",13,0)
 ; 99.991, EFFECTIVE DATE/TIME
"RTN","XTIDTBL",14,0)
 S SUBFILE=$$GETSUBF(TFILE,99.991)
"RTN","XTIDTBL",15,0)
 Q:'SUBFILE
"RTN","XTIDTBL",16,0)
 S CTX("TYPE")="TABLE"
"RTN","XTIDTBL",17,0)
 S CTX("TERM FILE#")=TFILE
"RTN","XTIDTBL",18,0)
 S CTX("TERM FIELD#")=.01
"RTN","XTIDTBL",19,0)
 S CTX("SOURCE FILE#")=TFILE
"RTN","XTIDTBL",20,0)
 S CTX("TERMSTATUS SUBFILE#")=SUBFILE
"RTN","XTIDTBL",21,0)
 Q
"RTN","XTIDTBL",22,0)
 ;
"RTN","XTIDTBL",23,0)
VALIDREF(CTX,TIREF) ; validate the term, internal ref
"RTN","XTIDTBL",24,0)
 ; test TIREF is a valid value in given context (table)
"RTN","XTIDTBL",25,0)
 ; TIREF must be in IENS form, but will be checked
"RTN","XTIDTBL",26,0)
 ; later as VDUI related data is retrieved
"RTN","XTIDTBL",27,0)
 ; would be nice if we can do an earlier check
"RTN","XTIDTBL",28,0)
 ; based on IENS and the CTX("SOURCE FILE#")
"RTN","XTIDTBL",29,0)
 N VALID
"RTN","XTIDTBL",30,0)
 Q:'$D(CTX)!($G(TIREF)']"") 0
"RTN","XTIDTBL",31,0)
 S VALID=TIREF?.(.N1",")
"RTN","XTIDTBL",32,0)
 Q VALID
"RTN","XTIDTBL",33,0)
 ;
"RTN","XTIDTBL",34,0)
FINDTERM(CTX,TIREF,TERM) ; find term 
"RTN","XTIDTBL",35,0)
 ; called from FINDTERM^XTIDCTX(CTX,TIREF,TERM)
"RTN","XTIDTBL",36,0)
 ; find term for given term IREF
"RTN","XTIDTBL",37,0)
 ; return TERM data as new TERM array
"RTN","XTIDTBL",38,0)
 N IENS
"RTN","XTIDTBL",39,0)
 Q:'$D(CTX)!($D(TERM))
"RTN","XTIDTBL",40,0)
 Q:'$$VALIDREF(.CTX,$G(TIREF))
"RTN","XTIDTBL",41,0)
 S IENS=$G(TIREF)
"RTN","XTIDTBL",42,0)
 Q:IENS']""
"RTN","XTIDTBL",43,0)
 D GETTERM^XTIDCTX(.CTX,CTX("SOURCE FILE#"),IENS,.TERM)
"RTN","XTIDTBL",44,0)
 Q
"RTN","XTIDTBL",45,0)
 ;
"RTN","XTIDTBL",46,0)
SRCHTRMS(CTX,VUID,XTTBARR,MASTER) ; search term index entries
"RTN","XTIDTBL",47,0)
 ; called from SEARCH^XTIDCTX(CTX,VUID,ARRAY,MASTER)
"RTN","XTIDTBL",48,0)
 ; FIND^DIC(FILE,IENS,FIELDS,FLAGS,[.]VALUE,NUMBER,[.]INDEXES,
"RTN","XTIDTBL",49,0)
 ;          [.]SCREEN,IDENTIFIER,TARGET_ROOT,MSG_ROOT)
"RTN","XTIDTBL",50,0)
 N DIERR,FILE,TFILE,INDEXES,MSG,RIEN,VALUE,FLAGS,TARG,MSG,NUMFND
"RTN","XTIDTBL",51,0)
 N FIELDS,SCREEN
"RTN","XTIDTBL",52,0)
 S VUID=$G(VUID),MASTER=+$G(MASTER)
"RTN","XTIDTBL",53,0)
 Q:$G(CTX("TYPE"))'="TABLE"!('VUID)
"RTN","XTIDTBL",54,0)
 S FILE=CTX("SOURCE FILE#"),INDEXES="AVUID",FLAGS="QX"
"RTN","XTIDTBL",55,0)
 S FIELDS="@;99.98I"
"RTN","XTIDTBL",56,0)
 S VALUE(1)=VUID
"RTN","XTIDTBL",57,0)
 S SCREEN="" I MASTER S SCREEN="I $P(^(""VUID""),""^"",2)"
"RTN","XTIDTBL",58,0)
 ; get entries
"RTN","XTIDTBL",59,0)
 D FIND^DIC(FILE,"",FIELDS,FLAGS,.VALUE,"",INDEXES,SCREEN,"","TARG","MSG")
"RTN","XTIDTBL",60,0)
 Q:$D(MSG("DIERR"))
"RTN","XTIDTBL",61,0)
 S NUMFND=+$G(TARG("DILIST",0))
"RTN","XTIDTBL",62,0)
 I NUMFND D  ;  found entries
"RTN","XTIDTBL",63,0)
 . N ITM,TEMP
"RTN","XTIDTBL",64,0)
 . M TEMP=TARG("DILIST",2)
"RTN","XTIDTBL",65,0)
 . M TEMP=TARG("DILIST","ID")
"RTN","XTIDTBL",66,0)
 . F ITM=1:1:NUMFND  D
"RTN","XTIDTBL",67,0)
 . . N STATUS,IENS
"RTN","XTIDTBL",68,0)
 . . S IENS=TEMP(ITM)_","
"RTN","XTIDTBL",69,0)
 . . S STATUS=$$GETSTAT^XTID(CTX("TERM FILE#"),CTX("TERM FIELD#"),IENS,"")
"RTN","XTIDTBL",70,0)
 . . S STATUS=STATUS_"^"_TEMP(ITM,99.98)
"RTN","XTIDTBL",71,0)
 . . D ADDTARRY^XTIDCTX(XTTBARR,CTX("TERM FILE#"),CTX("TERM FIELD#"),IENS,STATUS)
"RTN","XTIDTBL",72,0)
 . ;
"RTN","XTIDTBL",73,0)
 ;
"RTN","XTIDTBL",74,0)
 Q
"RTN","XTIDTBL",75,0)
 ; 
"RTN","XTIDTBL",76,0)
GETSUBF(FILE,MFIELD) ; get subfile #
"RTN","XTIDTBL",77,0)
 ; get subfile for the given file and multiple-valued field
"RTN","XTIDTBL",78,0)
 N DIERR,ATTR,SUBFILE
"RTN","XTIDTBL",79,0)
 S SUBFILE=""
"RTN","XTIDTBL",80,0)
 D FIELD^DID(FILE,MFIELD,"","MULTIPLE-VALUED;SPECIFIER;TYPE","ATTR")
"RTN","XTIDTBL",81,0)
 I ATTR("MULTIPLE-VALUED")=1,ATTR("TYPE")'="WORD-PROCESSING" D
"RTN","XTIDTBL",82,0)
 . S SUBFILE=+$G(ATTR("SPECIFIER"))
"RTN","XTIDTBL",83,0)
 ;
"RTN","XTIDTBL",84,0)
 Q SUBFILE
"RTN","XTIDTBL",85,0)
 ;
"RTN","XTIDTERM")
0^6^B20599072
"RTN","XTIDTERM",1,0)
XTIDTERM ;OAKCIOFO/JLG - TERM/CONCEPT index entry ;03/18/2005  15:12
"RTN","XTIDTERM",2,0)
 ;;7.3;TOOLKIT;**93**;Apr 25, 1995
"RTN","XTIDTERM",3,0)
 Q
"RTN","XTIDTERM",4,0)
 ; encapsulates a term/concept index entry for both
"RTN","XTIDTERM",5,0)
 ; "set of codes" and "table" indexes
"RTN","XTIDTERM",6,0)
 ; it interfaces through FileMan
"RTN","XTIDTERM",7,0)
 ; TERM is by reference and is in FDA format + CTX data
"RTN","XTIDTERM",8,0)
 ; only exceptions are $$GETSTAT and $$SETSTAT
"RTN","XTIDTERM",9,0)
 ; FDA format is left for convenience but future
"RTN","XTIDTERM",10,0)
 ; implementations might customize it.
"RTN","XTIDTERM",11,0)
 ; TERM is passed by ref in all calls
"RTN","XTIDTERM",12,0)
GETVUID(TERM) ; return VUID value
"RTN","XTIDTERM",13,0)
 ;
"RTN","XTIDTERM",14,0)
 N FILE,IENS
"RTN","XTIDTERM",15,0)
 Q:'$D(TERM)
"RTN","XTIDTERM",16,0)
 S FILE=TERM("CTX","SOURCE FILE#")
"RTN","XTIDTERM",17,0)
 S IENS=$O(TERM(FILE,""))
"RTN","XTIDTERM",18,0)
 Q $G(TERM(FILE,IENS,"VUID","I"))
"RTN","XTIDTERM",19,0)
 ;
"RTN","XTIDTERM",20,0)
GETMASTR(TERM) ; return MASTER VUID value
"RTN","XTIDTERM",21,0)
 ; 
"RTN","XTIDTERM",22,0)
 N FILE,IENS
"RTN","XTIDTERM",23,0)
 Q:'$D(TERM)
"RTN","XTIDTERM",24,0)
 S FILE=TERM("CTX","SOURCE FILE#")
"RTN","XTIDTERM",25,0)
 S IENS=$O(TERM(FILE,""))
"RTN","XTIDTERM",26,0)
 Q $G(TERM(FILE,IENS,"MASTER ENTRY FOR VUID","I"))
"RTN","XTIDTERM",27,0)
 ;
"RTN","XTIDTERM",28,0)
GETSTAT(TERM,DATE) ; return MASTER VUID value
"RTN","XTIDTERM",29,0)
 ; 
"RTN","XTIDTERM",30,0)
 N FILE,SFILE,IENS,STATUS
"RTN","XTIDTERM",31,0)
 Q:'$D(TERM)
"RTN","XTIDTERM",32,0)
 S:'$G(DATE) DATE=$$NOW^XLFDT
"RTN","XTIDTERM",33,0)
 S FILE=TERM("CTX","SOURCE FILE#")
"RTN","XTIDTERM",34,0)
 S SFILE=TERM("CTX","TERMSTATUS SUBFILE#")
"RTN","XTIDTERM",35,0)
 S IENS=","_$O(TERM(FILE,""))
"RTN","XTIDTERM",36,0)
 S STATUS=$$FINDSTAT(SFILE,IENS,DATE)
"RTN","XTIDTERM",37,0)
 ;I 'STATUS Q "^status not found for given date/time"
"RTN","XTIDTERM",38,0)
 Q $P(STATUS,"^",2,4)
"RTN","XTIDTERM",39,0)
 ;
"RTN","XTIDTERM",40,0)
SETVUID(TERM,VUID) ; set new VUID to existing TERM
"RTN","XTIDTERM",41,0)
 ;
"RTN","XTIDTERM",42,0)
 N DIERR,FLAGS,FILE,IENS,MSG,MYFDA,SUCCESS
"RTN","XTIDTERM",43,0)
 S VUID=$G(VUID)
"RTN","XTIDTERM",44,0)
 Q:'$D(TERM)!('VUID) 0
"RTN","XTIDTERM",45,0)
 ; check constraints first
"RTN","XTIDTERM",46,0)
 Q:$$CNSTR1() 0
"RTN","XTIDTERM",47,0)
 S SUCCESS=0,FLAGS="KS"
"RTN","XTIDTERM",48,0)
 S FILE=TERM("CTX","SOURCE FILE#")
"RTN","XTIDTERM",49,0)
 S IENS=$O(TERM(+FILE,""))
"RTN","XTIDTERM",50,0)
 Q:IENS']"" SUCCESS
"RTN","XTIDTERM",51,0)
 S MYFDA(FILE,IENS,99.99)=VUID
"RTN","XTIDTERM",52,0)
 D FILE^DIE(FLAGS,"MYFDA","MSG")
"RTN","XTIDTERM",53,0)
 I '$D(MSG("DIERR")) D
"RTN","XTIDTERM",54,0)
 . S SUCCESS=1
"RTN","XTIDTERM",55,0)
 . ; update the cached TERM array
"RTN","XTIDTERM",56,0)
 . S TERM(FILE,IENS,"VUID","I")=VUID
"RTN","XTIDTERM",57,0)
 ;
"RTN","XTIDTERM",58,0)
 Q SUCCESS
"RTN","XTIDTERM",59,0)
 ;
"RTN","XTIDTERM",60,0)
SETMASTR(TERM,MVUID) ; set MASTER ENTRY flag to existing TERM
"RTN","XTIDTERM",61,0)
 ;
"RTN","XTIDTERM",62,0)
 N DIERR,FLAGS,FILE,IENS,MSG,MYFDA,SUCCESS
"RTN","XTIDTERM",63,0)
 S MVUID=+$G(MVUID)
"RTN","XTIDTERM",64,0)
 Q:'$D(TERM) 0
"RTN","XTIDTERM",65,0)
 ; check constraints first and override VUID flag
"RTN","XTIDTERM",66,0)
 I MVUID,$$CNSTR2() S MVUID=0
"RTN","XTIDTERM",67,0)
 S FILE=TERM("CTX","SOURCE FILE#")
"RTN","XTIDTERM",68,0)
 S IENS=$O(TERM(+FILE,""))
"RTN","XTIDTERM",69,0)
 Q:IENS']"" 0
"RTN","XTIDTERM",70,0)
 S SUCCESS=0,FLAGS="KS"
"RTN","XTIDTERM",71,0)
 S MYFDA(FILE,IENS,99.98)=MVUID
"RTN","XTIDTERM",72,0)
 D FILE^DIE(FLAGS,"MYFDA","MSG")
"RTN","XTIDTERM",73,0)
 I '$D(MSG("DIERR")) D
"RTN","XTIDTERM",74,0)
 . S SUCCESS=1
"RTN","XTIDTERM",75,0)
 . ; update the cached TERM array
"RTN","XTIDTERM",76,0)
 . S TERM(FILE,IENS,"MASTER ENTRY FOR VUID","I")=MVUID
"RTN","XTIDTERM",77,0)
 ;
"RTN","XTIDTERM",78,0)
 Q SUCCESS
"RTN","XTIDTERM",79,0)
 ;
"RTN","XTIDTERM",80,0)
SETSTAT(TERM,STATUS,DATE) ; set status
"RTN","XTIDTERM",81,0)
 ; set status and date for the given term 
"RTN","XTIDTERM",82,0)
 N DIERR,FLAGS,FILE,SFILE,MYFDA,MSG,SUCCESS,IENS
"RTN","XTIDTERM",83,0)
 S STATUS=$G(STATUS),DATE=$G(DATE)
"RTN","XTIDTERM",84,0)
 Q:'$D(TERM)!(STATUS']"") 0
"RTN","XTIDTERM",85,0)
 S SUCCESS=0,FLAGS="KS"
"RTN","XTIDTERM",86,0)
 S STATUS=+$G(STATUS)
"RTN","XTIDTERM",87,0)
 S:'$G(DATE) DATE=$$NOW^XLFDT
"RTN","XTIDTERM",88,0)
 S FILE=TERM("CTX","SOURCE FILE#")
"RTN","XTIDTERM",89,0)
 S SFILE=TERM("CTX","TERMSTATUS SUBFILE#")
"RTN","XTIDTERM",90,0)
 S IENS="?+1,"_$O(TERM(FILE,""))
"RTN","XTIDTERM",91,0)
 S MYFDA(SFILE,IENS,.01)=DATE
"RTN","XTIDTERM",92,0)
 S MYFDA(SFILE,IENS,.02)=STATUS
"RTN","XTIDTERM",93,0)
 D UPDATE^DIE(FLAGS,"MYFDA","","MSG")
"RTN","XTIDTERM",94,0)
 S:'$D(MSG("DIERR")) SUCCESS=1
"RTN","XTIDTERM",95,0)
 Q SUCCESS
"RTN","XTIDTERM",96,0)
 ;
"RTN","XTIDTERM",97,0)
FINDSTAT(FILE,IENS,DATE) ; find status info 
"RTN","XTIDTERM",98,0)
 ; find status of term for given DATE
"RTN","XTIDTERM",99,0)
 ; D LIST^DIC(FILE,IENS,FIELDS,FLAGS,NUMBER,[.]FROM,[.]PART,INDEX,[.]SCREEN,IDENTIFIER,TARGET_ROOT,MSG_ROOT)
"RTN","XTIDTERM",100,0)
 N DIERR,FIELDS,FLAGS,FROM,MSG,MYSTAT,NUMBER,STATUS
"RTN","XTIDTERM",101,0)
 S STATUS="^^^"
"RTN","XTIDTERM",102,0)
 S:'$G(DATE) DATE=$$NOW^XLFDT
"RTN","XTIDTERM",103,0)
 S FROM=DATE+.000001
"RTN","XTIDTERM",104,0)
 S FIELDS="@;.01IE;.02IE",FLAGS="B",NUMBER=1
"RTN","XTIDTERM",105,0)
 D LIST^DIC(FILE,IENS,FIELDS,FLAGS,NUMBER,FROM,"","","","","MYSTAT","MSG")
"RTN","XTIDTERM",106,0)
 Q:$D(MSG("DIERR")) STATUS
"RTN","XTIDTERM",107,0)
 I $D(MYSTAT("DILIST","ID",1)) D
"RTN","XTIDTERM",108,0)
 . N ESTAT,IDATE,IENSTAT,ISTAT
"RTN","XTIDTERM",109,0)
 . S IENSTAT=$G(MYSTAT("DILIST",2,1))
"RTN","XTIDTERM",110,0)
 . S ISTAT=$G(MYSTAT("DILIST","ID",1,.02,"I"))
"RTN","XTIDTERM",111,0)
 . S ESTAT=$G(MYSTAT("DILIST","ID",1,.02,"E"))
"RTN","XTIDTERM",112,0)
 . S IDATE=$G(MYSTAT("DILIST","ID",1,.01,"I"))
"RTN","XTIDTERM",113,0)
 . S STATUS=IENSTAT_"^"_ISTAT_"^"_IDATE_"^"_ESTAT
"RTN","XTIDTERM",114,0)
 ;
"RTN","XTIDTERM",115,0)
 Q STATUS
"RTN","XTIDTERM",116,0)
 ;
"RTN","XTIDTERM",117,0)
DUPLMSTR(FILE,FIELD,TVUID) ; check duplicates
"RTN","XTIDTERM",118,0)
 ; used to determine existence of duplicate
"RTN","XTIDTERM",119,0)
 ; entries with the same VUID and master flag
"RTN","XTIDTERM",120,0)
 ; can potentially use this from DD trigger
"RTN","XTIDTERM",121,0)
 N XTTARR,DUPL
"RTN","XTIDTERM",122,0)
 S DUPL=0
"RTN","XTIDTERM",123,0)
 D GETIREF^XTID(FILE,FIELD,TVUID,"XTTARR",1)
"RTN","XTIDTERM",124,0)
 I +$G(XTTARR) S DUPL=1
"RTN","XTIDTERM",125,0)
 Q DUPL
"RTN","XTIDTERM",126,0)
 ;
"RTN","XTIDTERM",127,0)
CNSTR1() ; check constraints when setting VUID
"RTN","XTIDTERM",128,0)
 ; called from SETVUID()
"RTN","XTIDTERM",129,0)
 ; only one MASTER ENTRY FOR VUID can exist
"RTN","XTIDTERM",130,0)
 N CONSTR,DUPL,MFLAG,TFILE,TFIELD
"RTN","XTIDTERM",131,0)
 S CONSTR=1
"RTN","XTIDTERM",132,0)
 S MFLAG=$$GETMASTR(.TERM)
"RTN","XTIDTERM",133,0)
 Q:'MFLAG 'CONSTR ; no constraint
"RTN","XTIDTERM",134,0)
 S TFILE=TERM("CTX","TERM FILE#")
"RTN","XTIDTERM",135,0)
 S TFIELD=TERM("CTX","TERM FIELD#")
"RTN","XTIDTERM",136,0)
 S DUPL=$$DUPLMSTR(TFILE,TFIELD,VUID)
"RTN","XTIDTERM",137,0)
 Q:'DUPL 'CONSTR ; no constraint
"RTN","XTIDTERM",138,0)
 Q CONSTR ; constrained
"RTN","XTIDTERM",139,0)
 ;
"RTN","XTIDTERM",140,0)
CNSTR2() ; check constraints when setting MASTER ENTRY flag
"RTN","XTIDTERM",141,0)
 ; called from SETMASTR()
"RTN","XTIDTERM",142,0)
 ; only one MASTER ENTRY FOR VUID can exist
"RTN","XTIDTERM",143,0)
 N CONSTR,DUPL,MFLAG,TFILE,TFIELD,TVUID
"RTN","XTIDTERM",144,0)
 S CONSTR=1
"RTN","XTIDTERM",145,0)
 S MFLAG=$$GETMASTR(.TERM)
"RTN","XTIDTERM",146,0)
 Q:MFLAG 'CONSTR ; TERM is already MASTER
"RTN","XTIDTERM",147,0)
 S TFILE=TERM("CTX","TERM FILE#")
"RTN","XTIDTERM",148,0)
 S TFIELD=TERM("CTX","TERM FIELD#")
"RTN","XTIDTERM",149,0)
 S TVUID=$$GETVUID(.TERM)
"RTN","XTIDTERM",150,0)
 S DUPL=$$DUPLMSTR(TFILE,TFIELD,TVUID)
"RTN","XTIDTERM",151,0)
 Q:'DUPL 'CONSTR ; no constraint
"RTN","XTIDTERM",152,0)
 Q CONSTR ; constrained
"RTN","XTIDTERM",153,0)
 ;
"SEC","^DD",8985.1,8985.1,.01,8)

"SEC","^DD",8985.1,8985.1,.01,8.5)

"SEC","^DD",8985.1,8985.1,.01,9)

"SEC","^DIC",8985.1,8985.1,0,"AUDIT")
@
"SEC","^DIC",8985.1,8985.1,0,"DD")
@
"SEC","^DIC",8985.1,8985.1,0,"DEL")
@
"SEC","^DIC",8985.1,8985.1,0,"LAYGO")
@
"SEC","^DIC",8985.1,8985.1,0,"RD")
@
"SEC","^DIC",8985.1,8985.1,0,"WR")
@
"VER")
8.0^22.0
"^DD",8985.1,8985.1,0)
FIELD^^99.98^6
"^DD",8985.1,8985.1,0,"DDA")
N
"^DD",8985.1,8985.1,0,"DT")
3050217
"^DD",8985.1,8985.1,0,"NM","XTID VUID FOR SET OF CODES")

"^DD",8985.1,8985.1,.01,0)
FILE NUMBER^RFXI^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",8985.1,8985.1,.01,1,0)
^.1^^0
"^DD",8985.1,8985.1,.01,3)
Answer must be a valid VistA file number or subfile number.
"^DD",8985.1,8985.1,.01,7.5)
I $G(DUZ(0))'="@" K X
"^DD",8985.1,8985.1,.01,10)

"^DD",8985.1,8985.1,.01,21,0)
^.001^2^2^3050217^^^
"^DD",8985.1,8985.1,.01,21,1,0)
The file number or subfile number assigned in VistA where the Set of 
"^DD",8985.1,8985.1,.01,21,2,0)
Codes exists.
"^DD",8985.1,8985.1,.01,23,0)
^.001^2^2^3050217^^^^
"^DD",8985.1,8985.1,.01,23,1,0)
The number of the file or subfile that contains a field of type SET OF 
"^DD",8985.1,8985.1,.01,23,2,0)
CODES.
"^DD",8985.1,8985.1,.01,"DT")
3050217
"^DD",8985.1,8985.1,.02,0)
FIELD NUMBER^RFXI^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",8985.1,8985.1,.02,3)
Answer must be a valid field number in the VistA file/subfile.
"^DD",8985.1,8985.1,.02,7.5)
I $G(DUZ(0))'="@" K X
"^DD",8985.1,8985.1,.02,21,0)
^.001^2^2^3050217^^^^
"^DD",8985.1,8985.1,.02,21,1,0)
The field number assigned to a field in a VistA file or subfile that 
"^DD",8985.1,8985.1,.02,21,2,0)
contains a Set of Codes.
"^DD",8985.1,8985.1,.02,23,0)
^.001^1^1^3050217^^^^
"^DD",8985.1,8985.1,.02,23,1,0)
A field with a SET OF CODES as its type.
"^DD",8985.1,8985.1,.02,"DT")
3050217
"^DD",8985.1,8985.1,.03,0)
INTERNAL REFERENCE^RFXI^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",8985.1,8985.1,.03,3)
Answer must be a valid internal value in the Set of Codes for this field.
"^DD",8985.1,8985.1,.03,7.5)
I $G(DUZ(0))'="@" K X
"^DD",8985.1,8985.1,.03,21,0)
^^1^1^3050217^
"^DD",8985.1,8985.1,.03,21,1,0)
An internal value used by the Set of Codes.
"^DD",8985.1,8985.1,.03,23,0)
^^2^2^3050217^
"^DD",8985.1,8985.1,.03,23,1,0)
The internal value used by the set of codes for the field indicated in 
"^DD",8985.1,8985.1,.03,23,2,0)
the FIELD NUMBER field.
"^DD",8985.1,8985.1,.03,"DT")
3050217
"^DD",8985.1,8985.1,99.98,0)
MASTER ENTRY FOR VUID^RSI^0:NO;1:YES;^VUID;2^Q
"^DD",8985.1,8985.1,99.98,21,0)
^^2^2^3050217^
"^DD",8985.1,8985.1,99.98,21,1,0)
This field identifies the Master entry for a VUID associated with a 
"^DD",8985.1,8985.1,99.98,21,2,0)
Term/Concept.
"^DD",8985.1,8985.1,99.98,"DT")
3050217
"^DD",8985.1,8985.1,99.99,0)
VUID^RFXI^^VUID;1^S X=+X K:$L(X)>20!($L(X)<1)!'(X?1.18N) X
"^DD",8985.1,8985.1,99.99,1,0)
^.1^^0
"^DD",8985.1,8985.1,99.99,3)
Answer must be 1-20 characters in length.
"^DD",8985.1,8985.1,99.99,21,0)
^.001^2^2^3050217^^
"^DD",8985.1,8985.1,99.99,21,1,0)
VHA Unique ID (VUID).  A unique meaningless integer assigned to reference 
"^DD",8985.1,8985.1,99.99,21,2,0)
terms VHA wide.
"^DD",8985.1,8985.1,99.99,"DT")
3050217
"^DD",8985.1,8985.1,99.991,0)
EFFECTIVE DATE/TIME^8985.11DA^^TERMSTATUS;0
"^DD",8985.1,8985.1,99.991,21,0)
^.001^1^1^3050217^^
"^DD",8985.1,8985.1,99.991,21,1,0)
Describes the pair Status and Effective Date/Time for each reference term.
"^DD",8985.1,8985.11,0)
EFFECTIVE DATE/TIME SUB-FIELD^^.02^2
"^DD",8985.1,8985.11,0,"DT")
3050217
"^DD",8985.1,8985.11,0,"NM","EFFECTIVE DATE/TIME")

"^DD",8985.1,8985.11,0,"UP")
8985.1
"^DD",8985.1,8985.11,.01,0)
EFFECTIVE DATE/TIME^RDI^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",8985.1,8985.11,.01,1,0)
^.1^^0
"^DD",8985.1,8985.11,.01,21,0)
^.001^2^2^3050217^^^^
"^DD",8985.1,8985.11,.01,21,1,0)
This is the date/time when the Status of the reference term was 
"^DD",8985.1,8985.11,.01,21,2,0)
established.
"^DD",8985.1,8985.11,.01,"DT")
3050217
"^DD",8985.1,8985.11,.02,0)
STATUS^RSI^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",8985.1,8985.11,.02,21,0)
^^4^4^3050217^
"^DD",8985.1,8985.11,.02,21,1,0)
The Status of a reference term is either 'ACTIVE' or 'INACTIVE'.  If 
"^DD",8985.1,8985.11,.02,21,2,0)
'ACTIVE', then the term will be accessible by end-users to document a 
"^DD",8985.1,8985.11,.02,21,3,0)
particular patient event.  If 'INACTIVE', then the term will only be 
"^DD",8985.1,8985.11,.02,21,4,0)
accessible by the application to display legacy data.
"^DD",8985.1,8985.11,.02,"DT")
3050127
"^DIC",8985.1,8985.1,0)
XTID VUID FOR SET OF CODES^8985.1
"^DIC",8985.1,8985.1,0,"GL")
^XTID(8985.1,
"^DIC",8985.1,8985.1,"%",0)
^1.005^^
"^DIC",8985.1,8985.1,"%D",0)
^1.001^3^3^3050217^^^^
"^DIC",8985.1,8985.1,"%D",1,0)
This file is used to associate a VHA Unique ID (VUID) to each of the 
"^DIC",8985.1,8985.1,"%D",2,0)
elements in a Set of Codes, effectively associating a standard reference 
"^DIC",8985.1,8985.1,"%D",3,0)
term with a non-standard reference term.
"^DIC",8985.1,"B","XTID VUID FOR SET OF CODES",8985.1)

**END**
**END**
