KIDS Distribution saved on Oct 08, 2004@12:28:55
MRA:  IB*2.0*155, PRCA*4.5*138
**KIDS**:IB*2.0*155^PRCA*4.5*138^

**INSTALL NAME**
IB*2.0*155
"BLD",3517,0)
IB*2.0*155^INTEGRATED BILLING^0^3041008^y
"BLD",3517,1,0)
^^5^5^3040922^
"BLD",3517,1,1,0)
This patch contains the functionality to begin electronically requesting
"BLD",3517,1,2,0)
and receiving MEDICARE REMITTANCE ADVICE (MRA) from MEDICARE for those
"BLD",3517,1,3,0)
patients who have MEDICARE coverage as well as other coverage that is
"BLD",3517,1,4,0)
secondary to MEDICARE. See the patch module and release notes that
"BLD",3517,1,5,0)
accompany this patch for further documentation.
"BLD",3517,4,0)
^9.64PA^356.19^8
"BLD",3517,4,350.8,0)
350.8
"BLD",3517,4,350.8,222)
n^n^f^^n^^y^o^n
"BLD",3517,4,350.8,224)
I $F(".IB120.IB122.IB325.IB326.","."_$P($G(^IBE(350.8,+Y,0)),U,1)_".")
"BLD",3517,4,350.9,0)
350.9
"BLD",3517,4,350.9,2,0)
^9.641^350.9^1
"BLD",3517,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",3517,4,350.9,2,350.9,1,0)
^9.6411^8.13^4
"BLD",3517,4,350.9,2,350.9,1,8.1,0)
EDI/MRA ACTIVATED
"BLD",3517,4,350.9,2,350.9,1,8.11,0)
AUTOMATIC MRA EOB PROCESS?
"BLD",3517,4,350.9,2,350.9,1,8.12,0)
ALLOW MRA EOB PROCESSING?
"BLD",3517,4,350.9,2,350.9,1,8.13,0)
DATE MRA FIRST ACTIVATED
"BLD",3517,4,350.9,222)
y^n^p^^^^n
"BLD",3517,4,356.19,0)
356.19
"BLD",3517,4,356.19,2,0)
^9.641^356.19^1
"BLD",3517,4,356.19,2,356.19,0)
CLAIMS TRACKING UNBILLED AMOUNTS DATA  (File-top level)
"BLD",3517,4,356.19,2,356.19,1,0)
^9.6411^3.1^9
"BLD",3517,4,356.19,2,356.19,1,3.01,0)
NO. MRA INPT INST CLAIMS
"BLD",3517,4,356.19,2,356.19,1,3.02,0)
NO. MRA INPT PROF CLAIMS
"BLD",3517,4,356.19,2,356.19,1,3.04,0)
MRA CPT CODES ON INST CLAIMS
"BLD",3517,4,356.19,2,356.19,1,3.05,0)
MRA CPT CODES ON PROF CLAIMS
"BLD",3517,4,356.19,2,356.19,1,3.06,0)
NUMBER OF MRA UNBILLED RX'S
"BLD",3517,4,356.19,2,356.19,1,3.07,0)
MRA UNBILLED INPATIENT AMOUNT
"BLD",3517,4,356.19,2,356.19,1,3.08,0)
MRA UNBILLED OUTPATIENT AMOUNT
"BLD",3517,4,356.19,2,356.19,1,3.09,0)
MRA UNBILLED PRESCRIPTION AMT
"BLD",3517,4,356.19,2,356.19,1,3.1,0)
TOTAL MRA UNBILLED AMOUNT
"BLD",3517,4,356.19,222)
y^n^p^^^^n^^n
"BLD",3517,4,356.19,224)

"BLD",3517,4,361.1,0)
361.1
"BLD",3517,4,361.1,2,0)
^9.641^361.115^6
"BLD",3517,4,361.1,2,361.1,0)
EXPLANATION OF BENEFITS  (File-top level)
"BLD",3517,4,361.1,2,361.1,1,0)
^9.6411^.06^9
"BLD",3517,4,361.1,2,361.1,1,.06,0)
EOB PAID DATE
"BLD",3517,4,361.1,2,361.1,1,.16,0)
REVIEW STATUS
"BLD",3517,4,361.1,2,361.1,1,.2,0)
FINAL REVIEW ACTION
"BLD",3517,4,361.1,2,361.1,1,2.05,0)
NEGATIVE REIMBURSEMENT AMT
"BLD",3517,4,361.1,2,361.1,1,3.01,0)
M-CARE OUTP REIMBURS. RATE
"BLD",3517,4,361.1,2,361.1,1,30.01,0)
AUTO BILL MESSAGE
"BLD",3517,4,361.1,2,361.1,1,30.02,0)
AUTO BILL MESSAGE DATE/TIME
"BLD",3517,4,361.1,2,361.1,1,100.03,0)
LAST EDITED BY
"BLD",3517,4,361.1,2,361.1,1,100.04,0)
LAST EDITED DATE
"BLD",3517,4,361.1,2,361.111,0)
REASONS  (sub-file)
"BLD",3517,4,361.1,2,361.111,1,0)
^9.6411^.03^2
"BLD",3517,4,361.1,2,361.111,1,.02,0)
AMOUNT
"BLD",3517,4,361.1,2,361.111,1,.03,0)
QUANTITY
"BLD",3517,4,361.1,2,361.115,0)
835 LINE LEVEL ADJUSTMENTS  (sub-file)
"BLD",3517,4,361.1,2,361.115,1,0)
^9.6411^.11^1
"BLD",3517,4,361.1,2,361.115,1,.11,0)
PAID UNITS OF SERVICE
"BLD",3517,4,361.1,2,361.1151,0)
ADJUSTMENTS  (sub-file)
"BLD",3517,4,361.1,2,361.1151,1,0)
^9.6411^.01^1
"BLD",3517,4,361.1,2,361.1151,1,.01,0)
GROUP CODE
"BLD",3517,4,361.1,2,361.11511,0)
REASONS  (sub-file)
"BLD",3517,4,361.1,2,361.11511,1,0)
^9.6411^.03^1
"BLD",3517,4,361.1,2,361.11511,1,.03,0)
QUANTITY
"BLD",3517,4,361.1,2,361.1154,0)
ORIGINAL LINE NUMBERS  (sub-file)
"BLD",3517,4,361.1,2,361.1154,1,0)
^9.6411^^0
"BLD",3517,4,361.1,222)
y^n^p^^^^n^^n
"BLD",3517,4,361.1,224)

"BLD",3517,4,364.5,0)
364.5
"BLD",3517,4,364.5,222)
n^n^f^^y^^y^o^n
"BLD",3517,4,364.5,224)
I $$INCLUDE^IBY155PR(Y)
"BLD",3517,4,364.6,0)
364.6
"BLD",3517,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",3517,4,364.6,224)
I $T(ENT6+1^IBY155PO)[(U_+Y_U)
"BLD",3517,4,364.7,0)
364.7
"BLD",3517,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",3517,4,364.7,224)
I $$INCLUDE^IBY155PO(Y)
"BLD",3517,4,399,0)
399
"BLD",3517,4,399,2,0)
^9.641^399^1
"BLD",3517,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",3517,4,399,2,399,1,0)
^9.6411^28^4
"BLD",3517,4,399,2,399,1,7,0)
MRA REQUESTED DATE
"BLD",3517,4,399,2,399,1,9,0)
AUTHORIZE BILL GENERATION?
"BLD",3517,4,399,2,399,1,25,0)
REQUEST AN MRA?
"BLD",3517,4,399,2,399,1,28,0)
FORCE PRINT MRA CLAIM
"BLD",3517,4,399,222)
y^n^p^^^^n^^n
"BLD",3517,4,399,224)

"BLD",3517,4,"APDD",350.9,350.9)

"BLD",3517,4,"APDD",350.9,350.9,8.1)

"BLD",3517,4,"APDD",350.9,350.9,8.11)

"BLD",3517,4,"APDD",350.9,350.9,8.12)

"BLD",3517,4,"APDD",350.9,350.9,8.13)

"BLD",3517,4,"APDD",356.19,356.19)

"BLD",3517,4,"APDD",356.19,356.19,3.01)

"BLD",3517,4,"APDD",356.19,356.19,3.02)

"BLD",3517,4,"APDD",356.19,356.19,3.04)

"BLD",3517,4,"APDD",356.19,356.19,3.05)

"BLD",3517,4,"APDD",356.19,356.19,3.06)

"BLD",3517,4,"APDD",356.19,356.19,3.07)

"BLD",3517,4,"APDD",356.19,356.19,3.08)

"BLD",3517,4,"APDD",356.19,356.19,3.09)

"BLD",3517,4,"APDD",356.19,356.19,3.1)

"BLD",3517,4,"APDD",361.1,361.1)

"BLD",3517,4,"APDD",361.1,361.1,.06)

"BLD",3517,4,"APDD",361.1,361.1,.16)

"BLD",3517,4,"APDD",361.1,361.1,.2)

"BLD",3517,4,"APDD",361.1,361.1,2.05)

"BLD",3517,4,"APDD",361.1,361.1,3.01)

"BLD",3517,4,"APDD",361.1,361.1,30.01)

"BLD",3517,4,"APDD",361.1,361.1,30.02)

"BLD",3517,4,"APDD",361.1,361.1,100.03)

"BLD",3517,4,"APDD",361.1,361.1,100.04)

"BLD",3517,4,"APDD",361.1,361.111)

"BLD",3517,4,"APDD",361.1,361.111,.02)

"BLD",3517,4,"APDD",361.1,361.111,.03)

"BLD",3517,4,"APDD",361.1,361.115)

"BLD",3517,4,"APDD",361.1,361.115,.11)

"BLD",3517,4,"APDD",361.1,361.1151)

"BLD",3517,4,"APDD",361.1,361.1151,.01)

"BLD",3517,4,"APDD",361.1,361.11511)

"BLD",3517,4,"APDD",361.1,361.11511,.03)

"BLD",3517,4,"APDD",361.1,361.1154)

"BLD",3517,4,"APDD",399,399)

"BLD",3517,4,"APDD",399,399,7)

"BLD",3517,4,"APDD",399,399,9)

"BLD",3517,4,"APDD",399,399,25)

"BLD",3517,4,"APDD",399,399,28)

"BLD",3517,4,"B",350.8,350.8)

"BLD",3517,4,"B",350.9,350.9)

"BLD",3517,4,"B",356.19,356.19)

"BLD",3517,4,"B",361.1,361.1)

"BLD",3517,4,"B",364.5,364.5)

"BLD",3517,4,"B",364.6,364.6)

"BLD",3517,4,"B",364.7,364.7)

"BLD",3517,4,"B",399,399)

"BLD",3517,"ABNS",0)
^9.66A^1^1
"BLD",3517,"ABNS",1,0)
IB
"BLD",3517,"ABNS",1,1,0)
^9.661A^^
"BLD",3517,"ABNS","B","IB",1)

"BLD",3517,"ABPKG")
n^y^
"BLD",3517,"INI")
IBY155PR
"BLD",3517,"INID")
n^n^n
"BLD",3517,"INIT")
IBY155PO
"BLD",3517,"KRN",0)
^9.67PA^19^18
"BLD",3517,"KRN",.4,0)
.4
"BLD",3517,"KRN",.4,"NM",0)
^9.68A^^0
"BLD",3517,"KRN",.401,0)
.401
"BLD",3517,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",3517,"KRN",.402,0)
.402
"BLD",3517,"KRN",.402,"NM",0)
^9.68A^4^4
"BLD",3517,"KRN",.402,"NM",1,0)
IB STATUS    FILE #399^399^0
"BLD",3517,"KRN",.402,"NM",2,0)
IB SCREEN8H    FILE #399^399^0
"BLD",3517,"KRN",.402,"NM",3,0)
IB SCREEN82    FILE #399^399^0
"BLD",3517,"KRN",.402,"NM",4,0)
IBT UNBILLED AMOUNTS    FILE #356.19^356.19^0
"BLD",3517,"KRN",.402,"NM","B","IB SCREEN82    FILE #399",3)

"BLD",3517,"KRN",.402,"NM","B","IB SCREEN8H    FILE #399",2)

"BLD",3517,"KRN",.402,"NM","B","IB STATUS    FILE #399",1)

"BLD",3517,"KRN",.402,"NM","B","IBT UNBILLED AMOUNTS    FILE #356.19",4)

"BLD",3517,"KRN",.403,0)
.403
"BLD",3517,"KRN",.403,"NM",0)
^9.68A^^
"BLD",3517,"KRN",.5,0)
.5
"BLD",3517,"KRN",.84,0)
.84
"BLD",3517,"KRN",3.6,0)
3.6
"BLD",3517,"KRN",3.8,0)
3.8
"BLD",3517,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",3517,"KRN",9.2,0)
9.2
"BLD",3517,"KRN",9.8,0)
9.8
"BLD",3517,"KRN",9.8,"NM",0)
^9.68A^106^90
"BLD",3517,"KRN",9.8,"NM",1,0)
IBCNS2^^0^B14096238
"BLD",3517,"KRN",9.8,"NM",4,0)
IBCBB3^^0^B37223191
"BLD",3517,"KRN",9.8,"NM",6,0)
IBCERP6^^0^B24273824
"BLD",3517,"KRN",9.8,"NM",7,0)
IBCECOB2^^0^B72912246
"BLD",3517,"KRN",9.8,"NM",9,0)
IBCECOB^^0^B15518592
"BLD",3517,"KRN",9.8,"NM",10,0)
IBCECOB1^^0^B60699445
"BLD",3517,"KRN",9.8,"NM",11,0)
IBCECOB3^^0^B10293841
"BLD",3517,"KRN",9.8,"NM",12,0)
IBCEOB2^^0^B12799483
"BLD",3517,"KRN",9.8,"NM",13,0)
IBCEM1^^0^B8052218
"BLD",3517,"KRN",9.8,"NM",14,0)
IBCEU1^^0^B40400571
"BLD",3517,"KRN",9.8,"NM",16,0)
IBCEOB21^^0^B24441262
"BLD",3517,"KRN",9.8,"NM",17,0)
IBCEOB0^^0^B60096537
"BLD",3517,"KRN",9.8,"NM",18,0)
IBCEOB1^^0^B59356447
"BLD",3517,"KRN",9.8,"NM",19,0)
IBCEOB^^0^B66548072
"BLD",3517,"KRN",9.8,"NM",20,0)
IBCEM3^^0^B10722375
"BLD",3517,"KRN",9.8,"NM",21,0)
IBCE835^^0^B36249252
"BLD",3517,"KRN",9.8,"NM",22,0)
IBCEMQA^^0^B12911228
"BLD",3517,"KRN",9.8,"NM",23,0)
IBCEMQC^^0^B29727908
"BLD",3517,"KRN",9.8,"NM",24,0)
IBCEMU1^^0^B56645809
"BLD",3517,"KRN",9.8,"NM",25,0)
IBCESRV3^^0^B11136630
"BLD",3517,"KRN",9.8,"NM",26,0)
IBCESRV2^^0^B54202565
"BLD",3517,"KRN",9.8,"NM",27,0)
IBCB1^^0^B77996552
"BLD",3517,"KRN",9.8,"NM",28,0)
IBCEU2^^0^B56299934
"BLD",3517,"KRN",9.8,"NM",29,0)
IBCCCB^^0^B57071055
"BLD",3517,"KRN",9.8,"NM",30,0)
IBCECSA5^^0^B62760679
"BLD",3517,"KRN",9.8,"NM",31,0)
IBCEMRAA^^0^B61733871
"BLD",3517,"KRN",9.8,"NM",32,0)
IBCEMRAB^^0^B51933708
"BLD",3517,"KRN",9.8,"NM",35,0)
IBCC^^0^B29504277
"BLD",3517,"KRN",9.8,"NM",36,0)
IBCCC2^^0^B55631790
"BLD",3517,"KRN",9.8,"NM",38,0)
IBCBB9^^0^B10255056
"BLD",3517,"KRN",9.8,"NM",39,0)
IBCEMRAX^^0^B48242861
"BLD",3517,"KRN",9.8,"NM",41,0)
IBCEU0^^0^B60871715
"BLD",3517,"KRN",9.8,"NM",42,0)
IBCEMVU^^0^B6413709
"BLD",3517,"KRN",9.8,"NM",44,0)
IBCEMU2^^0^B34074055
"BLD",3517,"KRN",9.8,"NM",45,0)
IBCFP1^^0^B33019277
"BLD",3517,"KRN",9.8,"NM",46,0)
IBOSTUS^^0^B23718386
"BLD",3517,"KRN",9.8,"NM",47,0)
IBOSTUS1^^0^B28202831
"BLD",3517,"KRN",9.8,"NM",48,0)
IBCEM^^0^B58848548
"BLD",3517,"KRN",9.8,"NM",49,0)
IBCECOB5^^0^B13018400
"BLD",3517,"KRN",9.8,"NM",50,0)
IBCCCB0^^0^B52541919
"BLD",3517,"KRN",9.8,"NM",51,0)
IBCECSA6^^0^B87864497
"BLD",3517,"KRN",9.8,"NM",53,0)
IBCECSA7^^0^B8092739
"BLD",3517,"KRN",9.8,"NM",54,0)
IBCEOB00^^0^B60220072
"BLD",3517,"KRN",9.8,"NM",56,0)
IBCEU6^^0^B9821242
"BLD",3517,"KRN",9.8,"NM",57,0)
IBCEF11^^0^B33466788
"BLD",3517,"KRN",9.8,"NM",58,0)
IBCEF22^^0^B50744084
"BLD",3517,"KRN",9.8,"NM",59,0)
IBJTBA1^^0^B26882169
"BLD",3517,"KRN",9.8,"NM",60,0)
IBJPS^^0^B5742162
"BLD",3517,"KRN",9.8,"NM",61,0)
IBJPS2^^0^B51439573
"BLD",3517,"KRN",9.8,"NM",62,0)
IBCU6^^0^B19309919
"BLD",3517,"KRN",9.8,"NM",64,0)
IBCEU3^^0^B42120644
"BLD",3517,"KRN",9.8,"NM",65,0)
IBOCPD^^0^B14496211
"BLD",3517,"KRN",9.8,"NM",66,0)
IBOCPDS^^0^B59686442
"BLD",3517,"KRN",9.8,"NM",67,0)
IBCECSA4^^0^B55019134
"BLD",3517,"KRN",9.8,"NM",68,0)
IBJTCA2^^0^B15221038
"BLD",3517,"KRN",9.8,"NM",70,0)
IBCEF3^^0^B39901861
"BLD",3517,"KRN",9.8,"NM",71,0)
IBCEF31^^0^B7378097
"BLD",3517,"KRN",9.8,"NM",72,0)
IBCEMMR^^0^B43402718
"BLD",3517,"KRN",9.8,"NM",73,0)
IBCEXTR2^^0^B6246450
"BLD",3517,"KRN",9.8,"NM",75,0)
IBCSC4^^0^B23272927
"BLD",3517,"KRN",9.8,"NM",76,0)
IBCEF1^^0^B44690565
"BLD",3517,"KRN",9.8,"NM",77,0)
IBCEU4^^0^B52983076
"BLD",3517,"KRN",9.8,"NM",78,0)
IBCFP^^0^B12725454
"BLD",3517,"KRN",9.8,"NM",79,0)
IBCIADD1^^0^B45581066
"BLD",3517,"KRN",9.8,"NM",80,0)
IBCEMU3^^0^B39494874
"BLD",3517,"KRN",9.8,"NM",81,0)
IBCE277^^0^B56792508
"BLD",3517,"KRN",9.8,"NM",82,0)
IBCBULL^^0^B12278052
"BLD",3517,"KRN",9.8,"NM",83,0)
IBCNSP2^^0^B22122714
"BLD",3517,"KRN",9.8,"NM",84,0)
IBCRBC11^^0^B9906582
"BLD",3517,"KRN",9.8,"NM",85,0)
IBCONS2^^0^B74204893
"BLD",3517,"KRN",9.8,"NM",86,0)
IBTUBO^^0^B25696439
"BLD",3517,"KRN",9.8,"NM",87,0)
IBTUBO1^^0^B45521783
"BLD",3517,"KRN",9.8,"NM",88,0)
IBTUBO2^^0^B25602045
"BLD",3517,"KRN",9.8,"NM",89,0)
IBTUBO3^^0^B23248932
"BLD",3517,"KRN",9.8,"NM",90,0)
IBTUBOA^^0^B27828043
"BLD",3517,"KRN",9.8,"NM",91,0)
IBTUBOU^^0^B38728907
"BLD",3517,"KRN",9.8,"NM",92,0)
IBTUBUL^^0^B20146388
"BLD",3517,"KRN",9.8,"NM",93,0)
IBEFUNC^^0^B46009797
"BLD",3517,"KRN",9.8,"NM",95,0)
IBCBB1^^0^B58004272
"BLD",3517,"KRN",9.8,"NM",96,0)
IBCEMSR^^0^B43094278
"BLD",3517,"KRN",9.8,"NM",97,0)
IBCEMSR1^^0^B59769872
"BLD",3517,"KRN",9.8,"NM",98,0)
IBCB2^^0^B52497710
"BLD",3517,"KRN",9.8,"NM",99,0)
IBCEF2^^0^B52300347
"BLD",3517,"KRN",9.8,"NM",100,0)
IBCEF4^^0^B27070656
"BLD",3517,"KRN",9.8,"NM",101,0)
IBCBB21^^0^B10727629
"BLD",3517,"KRN",9.8,"NM",102,0)
IBCSC82^^0^B16576811
"BLD",3517,"KRN",9.8,"NM",103,0)
IBCSC8H^^0^B22724982
"BLD",3517,"KRN",9.8,"NM",104,0)
IBTUBV^^0^B16655729
"BLD",3517,"KRN",9.8,"NM",105,0)
IBCEF71^^0^B61572600
"BLD",3517,"KRN",9.8,"NM",106,0)
IBCEF74^^0^B66348235
"BLD",3517,"KRN",9.8,"NM","B","IBCB1",27)

"BLD",3517,"KRN",9.8,"NM","B","IBCB2",98)

"BLD",3517,"KRN",9.8,"NM","B","IBCBB1",95)

"BLD",3517,"KRN",9.8,"NM","B","IBCBB21",101)

"BLD",3517,"KRN",9.8,"NM","B","IBCBB3",4)

"BLD",3517,"KRN",9.8,"NM","B","IBCBB9",38)

"BLD",3517,"KRN",9.8,"NM","B","IBCBULL",82)

"BLD",3517,"KRN",9.8,"NM","B","IBCC",35)

"BLD",3517,"KRN",9.8,"NM","B","IBCCC2",36)

"BLD",3517,"KRN",9.8,"NM","B","IBCCCB",29)

"BLD",3517,"KRN",9.8,"NM","B","IBCCCB0",50)

"BLD",3517,"KRN",9.8,"NM","B","IBCE277",81)

"BLD",3517,"KRN",9.8,"NM","B","IBCE835",21)

"BLD",3517,"KRN",9.8,"NM","B","IBCECOB",9)

"BLD",3517,"KRN",9.8,"NM","B","IBCECOB1",10)

"BLD",3517,"KRN",9.8,"NM","B","IBCECOB2",7)

"BLD",3517,"KRN",9.8,"NM","B","IBCECOB3",11)

"BLD",3517,"KRN",9.8,"NM","B","IBCECOB5",49)

"BLD",3517,"KRN",9.8,"NM","B","IBCECSA4",67)

"BLD",3517,"KRN",9.8,"NM","B","IBCECSA5",30)

"BLD",3517,"KRN",9.8,"NM","B","IBCECSA6",51)

"BLD",3517,"KRN",9.8,"NM","B","IBCECSA7",53)

"BLD",3517,"KRN",9.8,"NM","B","IBCEF1",76)

"BLD",3517,"KRN",9.8,"NM","B","IBCEF11",57)

"BLD",3517,"KRN",9.8,"NM","B","IBCEF2",99)

"BLD",3517,"KRN",9.8,"NM","B","IBCEF22",58)

"BLD",3517,"KRN",9.8,"NM","B","IBCEF3",70)

"BLD",3517,"KRN",9.8,"NM","B","IBCEF31",71)

"BLD",3517,"KRN",9.8,"NM","B","IBCEF4",100)

"BLD",3517,"KRN",9.8,"NM","B","IBCEF71",105)

"BLD",3517,"KRN",9.8,"NM","B","IBCEF74",106)

"BLD",3517,"KRN",9.8,"NM","B","IBCEM",48)

"BLD",3517,"KRN",9.8,"NM","B","IBCEM1",13)

"BLD",3517,"KRN",9.8,"NM","B","IBCEM3",20)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMMR",72)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMQA",22)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMQC",23)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMRAA",31)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMRAB",32)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMRAX",39)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMSR",96)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMSR1",97)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMU1",24)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMU2",44)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMU3",80)

"BLD",3517,"KRN",9.8,"NM","B","IBCEMVU",42)

"BLD",3517,"KRN",9.8,"NM","B","IBCEOB",19)

"BLD",3517,"KRN",9.8,"NM","B","IBCEOB0",17)

"BLD",3517,"KRN",9.8,"NM","B","IBCEOB00",54)

"BLD",3517,"KRN",9.8,"NM","B","IBCEOB1",18)

"BLD",3517,"KRN",9.8,"NM","B","IBCEOB2",12)

"BLD",3517,"KRN",9.8,"NM","B","IBCEOB21",16)

"BLD",3517,"KRN",9.8,"NM","B","IBCERP6",6)

"BLD",3517,"KRN",9.8,"NM","B","IBCESRV2",26)

"BLD",3517,"KRN",9.8,"NM","B","IBCESRV3",25)

"BLD",3517,"KRN",9.8,"NM","B","IBCEU0",41)

"BLD",3517,"KRN",9.8,"NM","B","IBCEU1",14)

"BLD",3517,"KRN",9.8,"NM","B","IBCEU2",28)

"BLD",3517,"KRN",9.8,"NM","B","IBCEU3",64)

"BLD",3517,"KRN",9.8,"NM","B","IBCEU4",77)

"BLD",3517,"KRN",9.8,"NM","B","IBCEU6",56)

"BLD",3517,"KRN",9.8,"NM","B","IBCEXTR2",73)

"BLD",3517,"KRN",9.8,"NM","B","IBCFP",78)

"BLD",3517,"KRN",9.8,"NM","B","IBCFP1",45)

"BLD",3517,"KRN",9.8,"NM","B","IBCIADD1",79)

"BLD",3517,"KRN",9.8,"NM","B","IBCNS2",1)

"BLD",3517,"KRN",9.8,"NM","B","IBCNSP2",83)

"BLD",3517,"KRN",9.8,"NM","B","IBCONS2",85)

"BLD",3517,"KRN",9.8,"NM","B","IBCRBC11",84)

"BLD",3517,"KRN",9.8,"NM","B","IBCSC4",75)

"BLD",3517,"KRN",9.8,"NM","B","IBCSC82",102)

"BLD",3517,"KRN",9.8,"NM","B","IBCSC8H",103)

"BLD",3517,"KRN",9.8,"NM","B","IBCU6",62)

"BLD",3517,"KRN",9.8,"NM","B","IBEFUNC",93)

"BLD",3517,"KRN",9.8,"NM","B","IBJPS",60)

"BLD",3517,"KRN",9.8,"NM","B","IBJPS2",61)

"BLD",3517,"KRN",9.8,"NM","B","IBJTBA1",59)

"BLD",3517,"KRN",9.8,"NM","B","IBJTCA2",68)

"BLD",3517,"KRN",9.8,"NM","B","IBOCPD",65)

"BLD",3517,"KRN",9.8,"NM","B","IBOCPDS",66)

"BLD",3517,"KRN",9.8,"NM","B","IBOSTUS",46)

"BLD",3517,"KRN",9.8,"NM","B","IBOSTUS1",47)

"BLD",3517,"KRN",9.8,"NM","B","IBTUBO",86)

"BLD",3517,"KRN",9.8,"NM","B","IBTUBO1",87)

"BLD",3517,"KRN",9.8,"NM","B","IBTUBO2",88)

"BLD",3517,"KRN",9.8,"NM","B","IBTUBO3",89)

"BLD",3517,"KRN",9.8,"NM","B","IBTUBOA",90)

"BLD",3517,"KRN",9.8,"NM","B","IBTUBOU",91)

"BLD",3517,"KRN",9.8,"NM","B","IBTUBUL",92)

"BLD",3517,"KRN",9.8,"NM","B","IBTUBV",104)

"BLD",3517,"KRN",19,0)
19
"BLD",3517,"KRN",19,"NM",0)
^9.68A^20^16
"BLD",3517,"KRN",19,"NM",1,0)
IBCE 837 EDI MENU^^0
"BLD",3517,"KRN",19,"NM",2,0)
IBCE EOB MANAGEMENT^^1^
"BLD",3517,"KRN",19,"NM",4,0)
IBCE MRA MANAGEMENT^^0
"BLD",3517,"KRN",19,"NM",5,0)
IBCEM MRA REPORT PRINT^^0
"BLD",3517,"KRN",19,"NM",6,0)
IBCEM VIEW MRA EOB^^0
"BLD",3517,"KRN",19,"NM",7,0)
IBCEM MRA MANAGEMENT MENU^^0
"BLD",3517,"KRN",19,"NM",10,0)
IBCE RESUBMIT BILL^^4^
"BLD",3517,"KRN",19,"NM",11,0)
IBCE RESUBMIT BILL BATCH^^4^
"BLD",3517,"KRN",19,"NM",12,0)
IBCE 837 EDI REPORTS^^4^
"BLD",3517,"KRN",19,"NM",13,0)
IBCE 837 MANUAL TRANSMIT^^4^
"BLD",3517,"KRN",19,"NM",14,0)
IBCE EXTRACT STATUS^^4^
"BLD",3517,"KRN",19,"NM",15,0)
IBCE TXMT MGMNT REPORTS^^4^
"BLD",3517,"KRN",19,"NM",16,0)
IB MRA MENU^^1^
"BLD",3517,"KRN",19,"NM",17,0)
IBCEM PATIENTS W/O MEDICARE^^0
"BLD",3517,"KRN",19,"NM",19,0)
IB OUTPUT MANAGEMENT REPORTS^^2
"BLD",3517,"KRN",19,"NM",20,0)
IBCEM MRA STATISTICS REPORT^^0
"BLD",3517,"KRN",19,"NM","B","IB MRA MENU",16)

"BLD",3517,"KRN",19,"NM","B","IB OUTPUT MANAGEMENT REPORTS",19)

"BLD",3517,"KRN",19,"NM","B","IBCE 837 EDI MENU",1)

"BLD",3517,"KRN",19,"NM","B","IBCE 837 EDI REPORTS",12)

"BLD",3517,"KRN",19,"NM","B","IBCE 837 MANUAL TRANSMIT",13)

"BLD",3517,"KRN",19,"NM","B","IBCE EOB MANAGEMENT",2)

"BLD",3517,"KRN",19,"NM","B","IBCE EXTRACT STATUS",14)

"BLD",3517,"KRN",19,"NM","B","IBCE MRA MANAGEMENT",4)

"BLD",3517,"KRN",19,"NM","B","IBCE RESUBMIT BILL",10)

"BLD",3517,"KRN",19,"NM","B","IBCE RESUBMIT BILL BATCH",11)

"BLD",3517,"KRN",19,"NM","B","IBCE TXMT MGMNT REPORTS",15)

"BLD",3517,"KRN",19,"NM","B","IBCEM MRA MANAGEMENT MENU",7)

"BLD",3517,"KRN",19,"NM","B","IBCEM MRA REPORT PRINT",5)

"BLD",3517,"KRN",19,"NM","B","IBCEM MRA STATISTICS REPORT",20)

"BLD",3517,"KRN",19,"NM","B","IBCEM PATIENTS W/O MEDICARE",17)

"BLD",3517,"KRN",19,"NM","B","IBCEM VIEW MRA EOB",6)

"BLD",3517,"KRN",19.1,0)
19.1
"BLD",3517,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",3517,"KRN",101,0)
101
"BLD",3517,"KRN",101,"NM",0)
^9.68A^37^19
"BLD",3517,"KRN",101,"NM",1,0)
IBCEM COB MANAGEMENT^^0
"BLD",3517,"KRN",101,"NM",3,0)
IBCEM COB CANCEL^^0
"BLD",3517,"KRN",101,"NM",5,0)
IBCEM COB EDIT BILL^^0
"BLD",3517,"KRN",101,"NM",7,0)
IBCEM COB EXIT^^0
"BLD",3517,"KRN",101,"NM",8,0)
IBCEM COPY SECOND/THIRD^^0
"BLD",3517,"KRN",101,"NM",13,0)
VALM EXPAND^^0
"BLD",3517,"KRN",101,"NM",22,0)
IBCE EXIT^^0
"BLD",3517,"KRN",101,"NM",26,0)
IBCEM CSA EOB LINK^^0
"BLD",3517,"KRN",101,"NM",27,0)
IBCEM CSA EOB GEN^^0
"BLD",3517,"KRN",101,"NM",28,0)
IBCEM CSA EOB PAY^^0
"BLD",3517,"KRN",101,"NM",29,0)
IBCEM CSA EOB CLAIM^^0
"BLD",3517,"KRN",101,"NM",30,0)
IBCEM CSA EOB CLAIM ADJ^^0
"BLD",3517,"KRN",101,"NM",31,0)
IBCEM CSA EOB MEDICARE^^0
"BLD",3517,"KRN",101,"NM",32,0)
IBCEM CSA EOB LINE ADJ^^0
"BLD",3517,"KRN",101,"NM",33,0)
IBCEM CSA EOB REVIEW^^0
"BLD",3517,"KRN",101,"NM",34,0)
IBCE EOB VIEW^^0
"BLD",3517,"KRN",101,"NM",35,0)
IBCEM COB MRA PRINT^^0
"BLD",3517,"KRN",101,"NM",36,0)
IBCEM CLONE BILL^^0
"BLD",3517,"KRN",101,"NM",37,0)
IBCEM COB TPJI^^0
"BLD",3517,"KRN",101,"NM","B","IBCE EOB VIEW",34)

"BLD",3517,"KRN",101,"NM","B","IBCE EXIT",22)

"BLD",3517,"KRN",101,"NM","B","IBCEM CLONE BILL",36)

"BLD",3517,"KRN",101,"NM","B","IBCEM COB CANCEL",3)

"BLD",3517,"KRN",101,"NM","B","IBCEM COB EDIT BILL",5)

"BLD",3517,"KRN",101,"NM","B","IBCEM COB EXIT",7)

"BLD",3517,"KRN",101,"NM","B","IBCEM COB MANAGEMENT",1)

"BLD",3517,"KRN",101,"NM","B","IBCEM COB MRA PRINT",35)

"BLD",3517,"KRN",101,"NM","B","IBCEM COB TPJI",37)

"BLD",3517,"KRN",101,"NM","B","IBCEM COPY SECOND/THIRD",8)

"BLD",3517,"KRN",101,"NM","B","IBCEM CSA EOB CLAIM",29)

"BLD",3517,"KRN",101,"NM","B","IBCEM CSA EOB CLAIM ADJ",30)

"BLD",3517,"KRN",101,"NM","B","IBCEM CSA EOB GEN",27)

"BLD",3517,"KRN",101,"NM","B","IBCEM CSA EOB LINE ADJ",32)

"BLD",3517,"KRN",101,"NM","B","IBCEM CSA EOB LINK",26)

"BLD",3517,"KRN",101,"NM","B","IBCEM CSA EOB MEDICARE",31)

"BLD",3517,"KRN",101,"NM","B","IBCEM CSA EOB PAY",28)

"BLD",3517,"KRN",101,"NM","B","IBCEM CSA EOB REVIEW",33)

"BLD",3517,"KRN",101,"NM","B","VALM EXPAND",13)

"BLD",3517,"KRN",409.61,0)
409.61
"BLD",3517,"KRN",409.61,"NM",0)
^9.68A^10^8
"BLD",3517,"KRN",409.61,"NM",1,0)
IBCEM EOB MANAGEMENT^^1^
"BLD",3517,"KRN",409.61,"NM",2,0)
IBCEM MRA DETAIL^^0
"BLD",3517,"KRN",409.61,"NM",3,0)
IBCEM MRA MANAGEMENT^^0
"BLD",3517,"KRN",409.61,"NM",6,0)
IBCEM EOB DETAIL^^1^
"BLD",3517,"KRN",409.61,"NM",7,0)
IBCEM EOB REVIEW^^1^
"BLD",3517,"KRN",409.61,"NM",8,0)
IBCEM EOB VIEW EOB^^1^
"BLD",3517,"KRN",409.61,"NM",9,0)
IBCEM VIEW EOB^^0
"BLD",3517,"KRN",409.61,"NM",10,0)
IBCEM CSA MSG^^0
"BLD",3517,"KRN",409.61,"NM","B","IBCEM CSA MSG",10)

"BLD",3517,"KRN",409.61,"NM","B","IBCEM EOB DETAIL",6)

"BLD",3517,"KRN",409.61,"NM","B","IBCEM EOB MANAGEMENT",1)

"BLD",3517,"KRN",409.61,"NM","B","IBCEM EOB REVIEW",7)

"BLD",3517,"KRN",409.61,"NM","B","IBCEM EOB VIEW EOB",8)

"BLD",3517,"KRN",409.61,"NM","B","IBCEM MRA DETAIL",2)

"BLD",3517,"KRN",409.61,"NM","B","IBCEM MRA MANAGEMENT",3)

"BLD",3517,"KRN",409.61,"NM","B","IBCEM VIEW EOB",9)

"BLD",3517,"KRN",771,0)
771
"BLD",3517,"KRN",771,"NM",0)
^9.68A^^
"BLD",3517,"KRN",869.2,0)
869.2
"BLD",3517,"KRN",869.2,"NM",0)
^9.68A^^
"BLD",3517,"KRN",870,0)
870
"BLD",3517,"KRN",870,"NM",0)
^9.68A^^
"BLD",3517,"KRN",8994,0)
8994
"BLD",3517,"KRN","B",.4,.4)

"BLD",3517,"KRN","B",.401,.401)

"BLD",3517,"KRN","B",.402,.402)

"BLD",3517,"KRN","B",.403,.403)

"BLD",3517,"KRN","B",.5,.5)

"BLD",3517,"KRN","B",.84,.84)

"BLD",3517,"KRN","B",3.6,3.6)

"BLD",3517,"KRN","B",3.8,3.8)

"BLD",3517,"KRN","B",9.2,9.2)

"BLD",3517,"KRN","B",9.8,9.8)

"BLD",3517,"KRN","B",19,19)

"BLD",3517,"KRN","B",19.1,19.1)

"BLD",3517,"KRN","B",101,101)

"BLD",3517,"KRN","B",409.61,409.61)

"BLD",3517,"KRN","B",771,771)

"BLD",3517,"KRN","B",869.2,869.2)

"BLD",3517,"KRN","B",870,870)

"BLD",3517,"KRN","B",8994,8994)

"BLD",3517,"PRE")
IBY155NV
"BLD",3517,"QUES",0)
^9.62^^0
"BLD",3517,"REQB",0)
^9.611^26^15
"BLD",3517,"REQB",8,0)
IB*2.0*183^2
"BLD",3517,"REQB",10,0)
IB*2.0*232^2
"BLD",3517,"REQB",12,0)
IB*2.0*245^2
"BLD",3517,"REQB",13,0)
IB*2.0*265^2
"BLD",3517,"REQB",15,0)
IB*2.0*203^2
"BLD",3517,"REQB",17,0)
IB*2.0*191^2
"BLD",3517,"REQB",18,0)
IB*2.0*181^2
"BLD",3517,"REQB",19,0)
IB*2.0*241^2
"BLD",3517,"REQB",20,0)
IB*2.0*82^2
"BLD",3517,"REQB",21,0)
IB*2.0*280^2
"BLD",3517,"REQB",22,0)
IB*2.0*174^2
"BLD",3517,"REQB",23,0)
IB*2.0*197^2
"BLD",3517,"REQB",24,0)
IB*2.0*217^2
"BLD",3517,"REQB",25,0)
IB*2.0*247^2
"BLD",3517,"REQB",26,0)
IB*2.0*248^2
"BLD",3517,"REQB","B","IB*2.0*174",22)

"BLD",3517,"REQB","B","IB*2.0*181",18)

"BLD",3517,"REQB","B","IB*2.0*183",8)

"BLD",3517,"REQB","B","IB*2.0*191",17)

"BLD",3517,"REQB","B","IB*2.0*197",23)

"BLD",3517,"REQB","B","IB*2.0*203",15)

"BLD",3517,"REQB","B","IB*2.0*217",24)

"BLD",3517,"REQB","B","IB*2.0*232",10)

"BLD",3517,"REQB","B","IB*2.0*241",19)

"BLD",3517,"REQB","B","IB*2.0*245",12)

"BLD",3517,"REQB","B","IB*2.0*247",25)

"BLD",3517,"REQB","B","IB*2.0*248",26)

"BLD",3517,"REQB","B","IB*2.0*265",13)

"BLD",3517,"REQB","B","IB*2.0*280",21)

"BLD",3517,"REQB","B","IB*2.0*82",20)

"DATA",350.8,297,0)
IB120^Missing Diagnosis:  Medicare requires diagnosis for UB92 forms^IB120^1^1
"DATA",350.8,301,0)
IB122^Rendering provider specialty code 99 is invalid for Medicare^IB122^1^3
"DATA",350.8,303,0)
IB325^Secondary Claim must be printed - over 50 procs on claim^IB325^1^3
"DATA",350.8,304,0)
IB326^Secondary Claim must be printed - over 9 diagnoses on claim^IB326^1^3
"DATA",364.5,3,0)
N-CURR INSURED ID^N^E^I^399^^^
"DATA",364.5,3,1)
N Z,Z0,IBZ D F^IBCEF("N-ALL INSURANCE NUMBER","IBZ",,IBXIEN) S Z0=+$$COBN^IBCEF(IBXIEN),Z=$G(IBZ(Z0)) I Z'="" S IBXDATA=Z
"DATA",364.5,3,3,0)
^364.53^1^1^3010612^^^^
"DATA",364.5,3,3,1,0)
The id number of the current insured for bill IBXIEN.
"DATA",364.5,26,0)
N-CURR INSURED GROUP NAME^N^E^I^399^^^
"DATA",364.5,26,1)
N IBZ D F^IBCEF("N-ALL INSURANCE GROUP NAME","IBZ",,IBXIEN) S IBZ=$G(IBZ(+$$COBN^IBCEF(IBXIEN))) I IBZ'="" S IBXDATA=IBZ
"DATA",364.5,26,3,0)
^364.53^1^1^3010612^^^^
"DATA",364.5,26,3,1,0)
The current insured's group name for bill entry IBXIEN.
"DATA",364.5,27,0)
N-CURR INSURED GROUP NUMBER^N^E^I^399^^^
"DATA",364.5,27,1)
N IBZ D F^IBCEF("N-ALL INSURANCE GROUP NUMBER","IBZ",,IBXIEN) S IBZ=$G(IBZ(+$$COBN^IBCEF(IBXIEN))) I IBZ'="" S IBXDATA=IBZ
"DATA",364.5,27,3,0)
^364.53^1^1^3010612^^^^
"DATA",364.5,27,3,1,0)
The current insured's group number for bill entry IBXIEN.
"DATA",364.5,55,0)
N-CURR INS FORM LOC 37^N^E^I^399^^^
"DATA",364.5,55,1)
N Z S Z=$$COBN^IBCEF(IBXIEN) D F^IBCEF("N-UB92 FORM LOCATOR 37"_$P("^B^C",U,Z)) S:$$WNRBILL^IBEFUNC(IBXIEN) IBXDATA=""
"DATA",364.5,55,3,0)
^^2^2^2990610^^^^
"DATA",364.5,55,3,1,0)
The form locator 37 data for the current insurance company for bill entry
"DATA",364.5,55,3,2,0)
IBXIEN.
"DATA",364.5,127,0)
N-CURR INSURANCE CO PROV #^N^E^I^399^^^
"DATA",364.5,127,1)
N IBZ,Z D F^IBCEF("N-ALL INSURANCE CO PROV NUM","IBZ",,IBXIEN) S Z=+$$COBN^IBCEF(IBXIEN) I $G(IBZ(Z))'="" S IBXDATA=IBZ(Z)
"DATA",364.5,127,3,0)
^364.53^1^1^3040617^^^^
"DATA",364.5,127,3,1,0)
The provider number for the current insurance company for bill entry IBXIEN.
"DATA",364.5,177,0)
N-HCFA BOX 24K FREE TEXT^N^E^G^399^^^
"DATA",364.5,177,1)
N M,S D:'$D(IBXSAVE("BOX24")) B24^IBCEF3(.IBXSAVE,IBXIEN) S M=$$WNRBILL^IBEFUNC(IBXIEN),S="" S:M S=$$MCRSPEC^IBCEU4(IBXIEN,1),IBXSAVE("Q")=$S(S'="":"V"_S_+$$SITE^VASITE(),1:"") D TEXT24^IBCEU3("K",.IBXSAVE,.IBXDATA) K IBXSAVE("Q")
"DATA",364.5,177,3,0)
^364.53^8^8^3000823^^^^
"DATA",364.5,177,3,1,0)
Data element relies on the data previously extracted in array
"DATA",364.5,177,3,2,0)
IBXSAVE("BOX24") from HCFA 1500 SERVICES PRINT.  Returns the array of
"DATA",364.5,177,3,3,0)
HCFA 1500 Box 24 data for each procedure being billed in IBXDATA(n).
"DATA",364.5,177,3,4,0)
Since each procedure has 2 lines of data, if there is a text line present
"DATA",364.5,177,3,5,0)
for a procedure (IBXSAVE("BOX24",n,"TEXT") is defined), the data is
"DATA",364.5,177,3,6,0)
returned on the upper line and the characters 71-80 of the text are
"DATA",364.5,177,3,7,0)
returned on the bottom line.  If there is no text, the upper line is
"DATA",364.5,177,3,8,0)
returned as null and the data extracted is returned on the second line.
"DATA",364.5,225,0)
N-COB CLAIM LEVEL AMOUNTS^N^E^G^399^^^
"DATA",364.5,225,1)
K IBXSAVE("CCOB") D CCOB1^IBCEU1(IBXIEN,"0,1,2,4")
"DATA",364.5,225,3,0)
5^364.53^5^5^3030220^^^^
"DATA",364.5,225,3,1,0)
This data element extracts all the claim level COB data from the EOB file
"DATA",364.5,225,3,2,0)
for the current and its associated bills.
"DATA",364.5,225,3,3,0)
The data is returned in the array IBXDATA(n) and consists of the payer
"DATA",364.5,225,3,4,0)
sequence (1-3) in the first '^' piece followed by the data on the 0-2 node
"DATA",364.5,225,3,5,0)
of file 361.1 (1.01...1.99) for each accepted EOB in the COB sequence.
"DATA",364.5,248,0)
N-REFERRING PROVIDER SPECIALTY^N^E^I^399^^^
"DATA",364.5,248,1)
N IBZ D GETPRV^IBCEU(IBXIEN,1,.IBZ) S IBXDATA=$$SPEC^IBCEU($P($G(IBZ(1,1)),U,3),+$G(^DGCR(399,IBXIEN,"U")))
"DATA",364.5,248,3,0)
^^2^2^2991202^^^^
"DATA",364.5,248,3,1,0)
Find the specialty from the VA code of the person class attached to the
"DATA",364.5,248,3,2,0)
referring provider for bill IBXIEN, if it can be determined.
"DATA",364.5,249,0)
N-ATT/REND PHYSICIAN SPEC^N^E^I^399^^^
"DATA",364.5,249,1)
N IBZ,IBI S IBI=$S($$FT^IBCEF(IBXIEN)=2:3,1:4) D GETPRV^IBCEU(IBXIEN,IBI,.IBZ) S IBXDATA=$$SPEC^IBCEU($P($G(IBZ(IBI,1)),U,3),+$G(^DGCR(399,IBXIEN,"U")))
"DATA",364.5,249,3,0)
^^2^2^2991202^^^^
"DATA",364.5,249,3,1,0)
Find the specialty from the VA code of the person class attached to the
"DATA",364.5,249,3,2,0)
attending/rendering provider for bill IBXIEN, if it can be determined.
"DATA",364.5,251,0)
N-OPERATING PHYSICIAN SPEC^N^E^I^399^^^
"DATA",364.5,251,1)
N IBZ D GETPRV^IBCEU(IBXIEN,2,.IBZ) S IBXDATA=$$SPEC^IBCEU($P($G(IBZ(2,1)),U,3),+$G(^DGCR(399,IBXIEN,"U")))
"DATA",364.5,251,3,0)
^^2^2^2991202^^^^
"DATA",364.5,251,3,1,0)
Find the specialty from the VA code of the person class attached to the
"DATA",364.5,251,3,2,0)
operating provider for bill IBXIEN, if it can be determined.
"DATA",364.5,257,0)
N-DRG USED^N^E^I^399^^^
"DATA",364.5,257,1)
N Z,Z0,Z1 S Z=$$COBN^IBCEF(IBXIEN) I Z>1 S Z=Z-1 I $D(^IBM(361.1,"ABS",IBXIEN,Z)) S Z0="" F  S Z0=$O(^IBM(361.1,"ABS",IBXIEN,Z,Z0),-1) Q:'Z0  S Z1=$G(^IBM(361.1,Z0,0)) I $P(Z1,U,16)=3,$P(Z1,U,10)'="" S IBXDATA=$P(Z1,U,10) Q
"DATA",364.5,257,3,0)
^^2^2^2990901^^^^
"DATA",364.5,257,3,1,0)
If there is a valid processed EOB on file for the previous insurance
"DATA",364.5,257,3,2,0)
company, extract the last DRG code used to calculate payment.
"DATA",364.6,716,0)
3^N^^1^48^^1^50^14^GROUP NAME (FL-61A:C)
"DATA",364.6,964,0)
8^N^^115^1^^0^13^3^COB COVERED DAYS^0^1
"DATA",364.7,115,0)
98^N^33^^^^N
"DATA",364.7,115,1)
N C,Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S C=$$OTHINS1^IBCEF2(IBXIEN) F Z=1,2 I $G(IBZ(Z))'="",$E(C,Z) S IBXDATA(Z)=$$NOPUNCT^IBCEF(IBZ(Z),,"/-")
"DATA",364.7,115,3,0)
^364.73^3^3^3040521^^
"DATA",364.7,115,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,115,3,2,0)
possible for the data element in the IBXDATA array.  If any other insurance
"DATA",364.7,115,3,3,0)
is found, the other insured data is output.
"DATA",364.7,176,0)
123^N^8^^^^N
"DATA",364.7,176,1)
N A,Z S Z=0,A=$G(^TMP($J,"IBLCT")) F  S Z=$O(IBXDATA(Z)) K:'Z&($D(IBXDATA)=1) IBXDATA S:'Z ^TMP($J,"IBLCT")=A Q:'Z  S A=A+1 M IBXSAVE("INPT",Z)=IBXDATA(Z) K IBXDATA(Z) S IBXDATA(Z)=A D:Z>1 ID^IBCEF2(Z,"INS ")
"DATA",364.7,176,3,0)
^^4^4^3021024^^^^
"DATA",364.7,176,3,1,0)
^TMP($J,"IBLCT") keeps track of the last service line # output.  Data  
"DATA",364.7,176,3,2,0)
element is a group data element so multiple occurences of the data element
"DATA",364.7,176,3,3,0)
are possible in the IBXDATA array.  Save the data in the IBXSAVE array for
"DATA",364.7,176,3,4,0)
later use.  For every service line > 1, output the INS record id.
"DATA",364.7,181,0)
128^N^5^^^^N
"DATA",364.7,181,1)
N Z S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  S:$P(IBXSAVE("INPT",Z),U,9)'="" IBXSAVE("PMOD",Z)=$P(IBXSAVE("INPT",Z),U,9),IBXDATA(Z)=$P(IBXSAVE("PMOD",Z),",")
"DATA",364.7,181,3,0)
^364.73^1^1^3001005^^^^
"DATA",364.7,181,3,1,0)
Save the data element in the IBXSAVE("PMOD") array for later use.
"DATA",364.7,182,0)
129^N^5^^^^N
"DATA",364.7,182,1)
N Z S Z=0 F  S Z=$O(IBXSAVE("PMOD",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE("PMOD",Z),",",2) I '$O(IBXSAVE("PMOD",Z)) K IBXSAVE("PMOD")
"DATA",364.7,182,3,0)
^364.73^2^2^3001005^^^^
"DATA",364.7,182,3,1,0)
This data element relies on the existence of the variable IBXSAVE("PMOD")
"DATA",364.7,182,3,2,0)
previously extracted.
"DATA",364.7,188,0)
195^N^128^^^^N
"DATA",364.7,188,1)
N Z,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $D(^DGCR(399,IBXIEN,"I"_(Z+1))),$G(IBZ(Z))'="" S IBXDATA(Z)=$S(($$MCRONBIL^IBEFUNC(IBXIEN)&($$FT^IBCEF(IBXIEN)=2)):"VA0"_+$$SITE^VASITE(),1:$$NOPUNCT^IBCEF(IBZ(Z)))
"DATA",364.7,188,3,0)
^^3^3^2990412^^^^
"DATA",364.7,188,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,188,3,2,0)
possible for the data element in the IBXDATA array.  If any other insurance
"DATA",364.7,188,3,3,0)
provider # data is found, the data is output.
"DATA",364.7,268,0)
509^N^68^^^^N
"DATA",364.7,268,1)
S IBXSAVE("MSTAT")=$$MARITAL^IBCEFG1(+IBXDATA),IBXDATA=$S(IBXSAVE("MSTAT")="I":"X",1:"")
"DATA",364.7,268,3,0)
^364.73^2^2^3040219^^^
"DATA",364.7,268,3,1,0)
Save the value of marital status in IBXSAVE variable for later use.  If
"DATA",364.7,268,3,2,0)
the value is 'I' (NEVER MARRIED), this field's value is 'X'.
"DATA",364.7,270,0)
511^N^5^^^^N
"DATA",364.7,270,1)
S IBXDATA=$S($G(IBXSAVE("MSTAT"))="":"","MI"'[IBXSAVE("MSTAT"):"X",1:"") K IBXSAVE("MSTAT")
"DATA",364.7,270,3,0)
^364.73^3^3^3040220^^^^
"DATA",364.7,270,3,1,0)
This field relies on the existence of variable IBXSAVE("MSTAT") previously
"DATA",364.7,270,3,2,0)
extracted.  If its value is not a 'M', or 'I', assume it must be other and
"DATA",364.7,270,3,3,0)
this field's value will be 'X'.
"DATA",364.7,275,0)
516^N^27^^^^N
"DATA",364.7,275,1)
N Z S Z=$$WNRBILL^IBEFUNC(IBXIEN,+$$COBN^IBCEF(IBXIEN)) S:Z IBXDATA="NONE" Q:Z  I $$POLICY^IBCEF(IBXIEN,2,$P($G(^DGCR(399,IBXIEN,0)),U,21))="" S IBXDATA=""
"DATA",364.7,275,3,0)
^364.73^1^1^3040225^^^^
"DATA",364.7,275,3,1,0)
Only output the group number if the SUBSCRIBER ID field is non-null.
"DATA",364.7,293,0)
534^N^31^^^^N
"DATA",364.7,293,1)
K IBXSAVE("OINUM") S IBXDATA="" I $O(IBXDATA("")) N C,Z,Z0 S C=$$OTHINS1^IBCEF2(IBXIEN),Z=$G(IBXDATA(1)) K IBXDATA I $E(C) S IBXDATA=$S($$MCRWNR^IBEFUNC(+$G(^DGCR(399,IBXIEN,"I"_$E(C)))):"MEDICARE",$P(Z,U,2):$P($G(^DIC(36,+Z,0)),U),1:$P(Z,U))
"DATA",364.7,293,3,0)
^364.73^6^6^3040114^^^^
"DATA",364.7,293,3,1,0)
Use the first occurrence of other insured group name.  The first '^' piece
"DATA",364.7,293,3,2,0)
of this value has either the group name or the insurance company pointer.
"DATA",364.7,293,3,3,0)
If the second '^' piece is a 1, the insurance company name is extracted
"DATA",364.7,293,3,4,0)
using the insurance company pointer in the first '^' piece, otherwise, the
"DATA",364.7,293,3,5,0)
name in the first '^' piece is output.
"DATA",364.7,293,3,6,0)
MEDICARE WNR always outputs MEDICARE.
"DATA",364.7,296,0)
537^N^65^^^^N
"DATA",364.7,296,1)
N Z S Z=$$NAME^IBCEFG1(IBXDATA),IBXDATA=$P(Z,U,2)_" "_$S($P(Z,U,3)'="":$E($P(Z,U,3))_" ",1:"")_$P(Z,U)
"DATA",364.7,296,3,0)
^^1^1^2991102^
"DATA",364.7,296,3,1,0)
Output the patient's name as the signature first middle last name.
"DATA",364.7,297,0)
538^N^2^^^^N
"DATA",364.7,297,1)
N Z S Z=$$NAME^IBCEFG1(IBXDATA),IBXDATA=$P(Z,U,2)_" "_$S($P(Z,U,3)'="":$E($P(Z,U,3))_" ",1:"")_$P(Z,U)
"DATA",364.7,297,3,0)
^^2^2^2991102^^
"DATA",364.7,297,3,1,0)
Output the current insured's name as the signature first name, middle name
"DATA",364.7,297,3,2,0)
last name
"DATA",364.7,305,0)
544^N^160^^^^N
"DATA",364.7,305,1)
D:'IBXDATA&'$$INPAT^IBCEF(IBXIEN,1) F^IBCEF("N-STATEMENT COVERS TO DATE",,,IBXIEN) S IBXDATA=$$DATE^IBCF2(IBXDATA,1)
"DATA",364.7,305,3,0)
^364.73^2^2^3040226^^^^
"DATA",364.7,305,3,1,0)
If there is no date in IBXDATA, set it to Statement Covers To Date then 
"DATA",364.7,305,3,2,0)
format the resulted date.
"DATA",364.7,306,0)
548^N^86^^^^N
"DATA",364.7,306,1)
N IB,IBCT M IB=IBXDATA K IBXDATA X "N Z S (Z,IBCT)=0 F  S Z=$O(IB(Z)) Q:'Z  I $G(IB(Z)) S IBCT=IBCT+1 M IBXSAVE(""DX"",IBCT)=IB(Z)" S IBXDATA=$P($G(^ICD9(+$G(IBXSAVE("DX",1)),0)),U) D PGDX^IBCEF31(1,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,306,3,0)
^364.73^4^4^3040121^^^^
"DATA",364.7,306,3,1,0)
Save the diagnoses in the IBXSAVE array for later use. Output the
"DATA",364.7,306,3,2,0)
diagnosis code for the first diagnosis. Check for any diagnosis codes
"DATA",364.7,306,3,3,0)
that should display in the first position on pages subsequent to page 1
"DATA",364.7,306,3,4,0)
and output them.
"DATA",364.7,308,0)
549^N^163^^^^N
"DATA",364.7,308,1)
S IBXDATA=$P($G(^ICD9(+IBXDATA,0)),U) D PGDX^IBCEF31(3,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,308,3,0)
^364.73^3^3^3040121^^^^
"DATA",364.7,308,3,1,0)
Output the third diagnosis code. Check for any diagnosis codes that should
"DATA",364.7,308,3,2,0)
display in the third position on pages subsequent to page 1 and output
"DATA",364.7,308,3,3,0)
them.
"DATA",364.7,309,0)
550^N^162^^^^N
"DATA",364.7,309,1)
S IBXDATA=$P($G(^ICD9(+IBXDATA,0)),U) D PGDX^IBCEF31(2,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,309,3,0)
^364.73^3^3^3040121^^^^
"DATA",364.7,309,3,1,0)
Output the second diagnosis code.  Check for any diagnosis codes that should
"DATA",364.7,309,3,2,0)
display in the second position on pages subsequent to page 1 and output
"DATA",364.7,309,3,3,0)
them.
"DATA",364.7,310,0)
551^N^164^^^^N
"DATA",364.7,310,1)
S IBXDATA=$P($G(^ICD9(+IBXDATA,0)),U) D PGDX^IBCEF31(4,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE) K IBXSAVE("DX")
"DATA",364.7,310,3,0)
^364.73^3^3^3040121^^^^
"DATA",364.7,310,3,1,0)
Output the forth diagnosis code. Check for any diagnosis codes that should
"DATA",364.7,310,3,2,0)
display in the forth position on pages subsequent to page 1 and output
"DATA",364.7,310,3,3,0)
them.
"DATA",364.7,322,0)
570^N^104^^^^N
"DATA",364.7,322,1)
N IBZ D F^IBCEF("N-AGENT CASHIER MAIL SYMBOL","IBZ",,IBXIEN) I $G(IBZ)'="" S IBXDATA=IBXDATA_" "_IBZ
"DATA",364.7,322,3,0)
^364.73^2^2^3040120^^^
"DATA",364.7,322,3,1,0)
Concatenate Agent Cashier Mail Symbol to the end of Agent Cashier Street
"DATA",364.7,322,3,2,0)
Address.
"DATA",364.7,344,0)
593^N^5^^^^N
"DATA",364.7,344,1)
I $O(^TMP("IBXDATA",$J,IBXREC,1)) N Z,FLDS X "F Z=1:1:+$O(^IBA(364.6,""ASEQ"",2,1,""""),-1) S:(Z'>44!(Z'<57))&(Z'=6)&(Z'=39)&(Z'=41) FLDS(Z)=""""" F Z=2:1:+$O(^TMP("IBXDATA",$J,IBXREC,Z),-1) D MPG^IBCEF3(Z,.FLDS,2)
"DATA",364.7,344,3,0)
^^4^4^2960814^
"DATA",364.7,344,3,1,0)
If there is more than 1 page of bill extracted, the variable
"DATA",364.7,344,3,2,0)
FLDS(line,column) holds the lines and columns that should be duplicated on
"DATA",364.7,344,3,3,0)
pages after the first.  This takes care of the population of these static
"DATA",364.7,344,3,4,0)
fields on these subsequent pages.
"DATA",364.7,346,0)
594^N^5^^^^N
"DATA",364.7,346,1)
K IBXDATA S IBXSAVE("PAID")=$J(0,7,2) I $O(^TMP("IBXDATA",$J,IBXREC,""),-1)'>1 S IBXDATA=IBXSAVE("PAID") K IBXSAVE("PAID")
"DATA",364.7,346,3,0)
^^2^2^3000124^^^^
"DATA",364.7,346,3,1,0)
This field is the prior amounts the patient has paid.  This will always
"DATA",364.7,346,3,2,0)
be 0 unless VA changes policy.
"DATA",364.7,353,0)
600^N^318^^^^N
"DATA",364.7,353,1)
S IBXDATA=$P(IBXDATA,U,1)
"DATA",364.7,353,3,0)
^364.73^1^1^3040203^^^
"DATA",364.7,353,3,1,0)
ID of Referring Physician
"DATA",364.7,493,0)
615^N^104^^^^N
"DATA",364.7,493,1)
N IBZ D F^IBCEF("N-AGENT CASHIER MAIL SYMBOL","IBZ",,IBXIEN) I $G(IBZ)'="" S IBXDATA=IBXDATA_" "_IBZ
"DATA",364.7,493,3,0)
^364.73^2^2^3040204^^
"DATA",364.7,493,3,1,0)
Concatenate Agent Cashier Mail Symbol to the end of Agent Cashier Street 
"DATA",364.7,493,3,2,0)
Address.
"DATA",364.7,503,0)
625^N^75^^^^N
"DATA",364.7,503,1)
I IBXDATA S IBXDATA=$E("000",1,3-$L(IBXDATA))_IBXDATA
"DATA",364.7,503,3,0)
^^1^1^3040217^
"DATA",364.7,503,3,1,0)
Format Covered Days to have leading zeroes.
"DATA",364.7,504,0)
626^N^76^^^^N
"DATA",364.7,504,1)
I 'IBXDATA S IBXDATA=""
"DATA",364.7,504,3,0)
^^1^1^3040217^
"DATA",364.7,504,3,1,0)
Display a blank if non-covered days field is zero.
"DATA",364.7,623,0)
745^N^5^^^^N
"DATA",364.7,623,1)
D:'$D(IBXSAVE("PRV-82")) BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$E($P($G(IBXSAVE("PRV-82",2)),U,2),1,30+$G(^TMP("IBXSAVE",$J,"RM")))
"DATA",364.7,623,3,0)
^364.73^3^3^3040317^^^^
"DATA",364.7,623,3,1,0)
If not already done, extract all the possible providers into the
"DATA",364.7,623,3,2,0)
appropriate line for box 82 on the UB-92 print claim form.  This is the
"DATA",364.7,623,3,3,0)
second line extracted.
"DATA",364.7,630,0)
752^N^5^^^^N
"DATA",364.7,630,1)
D:'$D(IBXSAVE("PRV-82")) BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$E($P($G(IBXSAVE("PRV-82",4)),U,2),1,30+$G(^TMP("IBXSAVE",$J,"RM")))
"DATA",364.7,630,3,0)
^364.73^3^3^3040317^^^^
"DATA",364.7,630,3,1,0)
If not already done, extract all the possible providers into the
"DATA",364.7,630,3,2,0)
appropriate line for box 82 on the UB-92 print claim form.  This is the
"DATA",364.7,630,3,3,0)
fourth line extracted.
"DATA",364.7,631,0)
753^N^5^^^^N
"DATA",364.7,631,1)
D:'$D(IBXSAVE("PRV-82")) BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$G(IBXSAVE("PRV-SSN",3)) I IBXDATA="" S IBXDATA=$G(IBXSAVE("PRV-82",3))
"DATA",364.7,631,3,0)
^^3^3^3000107^^^^
"DATA",364.7,631,3,1,0)
If not already done, extract all the possible providers into the
"DATA",364.7,631,3,2,0)
appropriate line for box 82 on the UB-92 print claim form.  This is the
"DATA",364.7,631,3,3,0)
third line extracted.
"DATA",364.7,633,0)
755^N^5^^^^N
"DATA",364.7,633,1)
D:'$D(IBXSAVE("PRV-82")) BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$G(IBXSAVE("PRV-SSN",5)) I IBXDATA="" S IBXDATA=$G(IBXSAVE("PRV-82",5))
"DATA",364.7,633,3,0)
^364.73^3^3^3040317^^^^
"DATA",364.7,633,3,1,0)
If not already done, extract all the possible providers into the
"DATA",364.7,633,3,2,0)
appropriate line for box 82 on the UB-92 print claim form.  This is the
"DATA",364.7,633,3,3,0)
fifth line extracted.
"DATA",364.7,635,0)
757^N^5^^^^N
"DATA",364.7,635,1)
D:'$D(IBXSAVE("PRV-82")) BOX82NM^IBCEU4(IBXIEN,.IBXSAVE) K IBXDATA S IBXDATA=$E($P($G(IBXSAVE("PRV-82",6)),U,2),1,30+$G(^TMP("IBXSAVE",$J,"RM"))) K IBXSAVE("PRV-82")
"DATA",364.7,635,3,0)
^364.73^3^3^3040317^^^^
"DATA",364.7,635,3,1,0)
If not already done, extract all the possible providers into the
"DATA",364.7,635,3,2,0)
appropriate line for box 82 on the UB-92 print claim form.  This is the
"DATA",364.7,635,3,3,0)
sixth line extracted.
"DATA",364.7,717,0)
697^N^5^^^^N
"DATA",364.7,717,1)
N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$S($P(Z1,U,8):$J($P(Z1,U,8),9,2),1:$J(0,9,2)),+Z1=2:$E($P(Z1,U,2),67,77),1:$E($P(Z1,U,2),62,72)) S:Z'>21 IBXDATA(Z)=Z0 D:Z'<21 CKREV^IBCEF3(Z,Z0)
"DATA",364.7,717,3,0)
^^13^13^2990629^^^^
"DATA",364.7,717,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,717,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,717,3,3,0)
IBXSAVE("REV",n) extracted previously.  The first '^' piece of the array
"DATA",364.7,717,3,4,0)
indicates whether this is a 'normal' service data line (=1) or a text line
"DATA",364.7,717,3,5,0)
(=2 or =3).  For a normal service line, the data is found in the eighth '^'
"DATA",364.7,717,3,6,0)
piece of the array and is formatted preceeded by a space.  For text line
"DATA",364.7,717,3,7,0)
where the first piece = 2, the text is assumed to start in column 1, so the
"DATA",364.7,717,3,8,0)
data is extracted from positions 67-77.  For text line where the first
"DATA",364.7,717,3,9,0)
piece = 3, the text is assumed to start in column 6, so the data for this
"DATA",364.7,717,3,10,0)
field is extracted from positions 62-72.
"DATA",364.7,717,3,11,0)
Since only 23 lines of service line can appear on one form, if there
"DATA",364.7,717,3,12,0)
are more than 23 lines, subsequent pages are forced for the remaining data
"DATA",364.7,717,3,13,0)
lines after 23.
"DATA",364.7,728,0)
708^N^156^^^^N
"DATA",364.7,728,1)
N Z F Z=1:1:3 K:'$D(^DGCR(399,IBXIEN,"I"_Z)) IBXDATA(Z) I $D(IBXDATA(Z)) S IBXDATA(Z)=$S(IBXDATA(Z)'="":$J(IBXDATA(Z),10,2),1:$J(0,10,2))
"DATA",364.7,728,3,0)
^364.73^2^2^3040218^^^^
"DATA",364.7,728,3,1,0)
If the insurance company for the prior payment does not exist for the bill,
"DATA",364.7,728,3,2,0)
don't output the prior payment information.
"DATA",364.7,729,0)
709^N^152^^^^N
"DATA",364.7,729,1)
N Z,Z0,IBZ S IBZ=$G(IBXDATA) K IBXDATA S Z0=$$COBN^IBCEF(IBXIEN),IBXDATA(Z0)=$J(+IBZ,9,2) F Z=1:1:3 I Z'=Z0,$D(^DGCR(399,IBXIEN,"I"_Z)) S IBXDATA(Z)=$J(0,9,2)
"DATA",364.7,729,3,0)
^364.73^2^2^3040218^^^^
"DATA",364.7,729,3,1,0)
Set the estimated amt for the current insurance equal to the balance on the
"DATA",364.7,729,3,2,0)
bill.
"DATA",364.7,736,0)
716^N^199^^^^N
"DATA",364.7,736,1)
N Z,Z0 S Z0=$$COBN^IBCEF(IBXIEN) F Z=1:1:3 S IBXDATA(Z)=$G(IBXDATA(Z))_" " I $D(^DGCR(399,IBXIEN,"I"_Z)),$$WNRBILL^IBEFUNC(IBXIEN,Z) S IBXDATA(Z)=""
"DATA",364.7,736,3,0)
^364.73^3^3^3040226^^^
"DATA",364.7,736,3,1,0)
If the insurance is MEDICARE WNR, do not output the group name.
"DATA",364.7,736,3,2,0)
Add a space to the end of the Group Name to separate it from
"DATA",364.7,736,3,3,0)
the next field , Group Number.
"DATA",364.7,809,0)
809^N^5^^^^N
"DATA",364.7,809,1)
N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE("CCOB",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE("CCOB",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE("CCOB",IBZ,Z,1)),U,2) S IBXDATA(Z0)=$$DOLLAR^IBCEFG1($G(IBXDATA(Z0))+$P(IBXSAVE("CCOB",IBZ,Z,1),U,2))
"DATA",364.7,809,3,0)
^^3^3^3030220^^^^
"DATA",364.7,809,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,809,3,2,0)
insurance into the IBXSAVE("CCOB",COB,n,1) array.  Extract the second piece
"DATA",364.7,809,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,814,0)
817^N^5^^^^N
"DATA",364.7,814,1)
K:$$INPAT^IBCEF(IBXIEN,1) IBXDATA I $D(IBXDATA) N Z,IBZ K IBXDATA S (Z,IBZ)=0 F  S IBZ=$O(IBXSAVE("MOA",IBZ)) Q:'IBZ  S Z=Z+1,IBXDATA(Z)=IBZ I Z>1 D ID^IBCEF2(Z,"MOA1")
"DATA",364.7,814,3,0)
^^4^4^2990901^^^^
"DATA",364.7,814,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,814,3,2,0)
possible for the data element in the IBXDATA array.  It relies on the
"DATA",364.7,814,3,3,0)
existence of the IBXSAVE("MOA") array that was previously extracted.
"DATA",364.7,814,3,4,0)
For other than the first occurrence, the RECORD ID 'MOA1' must be output.
"DATA",364.7,815,0)
828^N^5^^^^N
"DATA",364.7,815,1)
K:'$$INPAT^IBCEF(IBXIEN,1) IBXDATA I $D(IBXDATA) N Z,IBZ K IBXDATA S (Z,IBZ)=0 F  S IBZ=$O(IBXSAVE("MIA45",IBZ)) Q:'IBZ  S Z=Z+1,IBXDATA(Z)=IBZ I Z>1 D ID^IBCEF2(Z,"MIA1")
"DATA",364.7,815,3,0)
^^4^4^2990901^^^^
"DATA",364.7,815,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,815,3,2,0)
possible for the data element in the IBXDATA array.  It relies on the
"DATA",364.7,815,3,3,0)
existence of the IBXSAVE("MIA45") array that was previously extracted.
"DATA",364.7,815,3,4,0)
For other than the first occurrence, the RECORD ID 'MIA1' must be output.
"DATA",364.7,816,0)
840^N^5^^^^N
"DATA",364.7,816,1)
K:'$$INPAT^IBCEF(IBXIEN,1) IBXDATA I $D(IBXDATA) N Z,IBZ K IBXDATA S (Z,IBZ)=0 F  S IBZ=$O(IBXSAVE("MIA45",IBZ)) Q:'IBZ  S Z=Z+1,IBXDATA(Z)=IBZ I Z>1 D ID^IBCEF2(Z,"MOA1")
"DATA",364.7,816,3,0)
^^4^4^2990901^^^^
"DATA",364.7,816,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,816,3,2,0)
possible for the data element in the IBXDATA array.  It relies on the
"DATA",364.7,816,3,3,0)
existence of the IBXSAVE("MIA45") array that was previously extracted.
"DATA",364.7,816,3,4,0)
For other than the first occurrence, the RECORD ID 'MIA2' must be output.
"DATA",364.7,822,0)
841^N^5^^^^N
"DATA",364.7,822,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=12 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,822,3,0)
^^4^4^2990901^^^^
"DATA",364.7,822,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,822,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the twelveth
"DATA",364.7,822,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,822,3,4,0)
entry.
"DATA",364.7,823,0)
818^N^5^^^^N
"DATA",364.7,823,1)
N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE("MOA",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE("MOA",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE("MOA",IBZ,Z,3)),U) S IBXDATA(Z0)=$G(IBXDATA(Z0))+$$DOLLAR^IBCEFG1($P(IBXSAVE("MOA",IBZ,Z,3),U))
"DATA",364.7,823,3,0)
^^3^3^2990901^^^^
"DATA",364.7,823,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,823,3,2,0)
insurance into the IBXSAVE("MOA",COB,n,3) array.  Extract the first piece
"DATA",364.7,823,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,824,0)
829^N^5^^^^N
"DATA",364.7,824,1)
N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE("MIA45",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE("MIA45",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE("MIA45",IBZ,Z,4)),U,1)'="" S IBXDATA(Z0)=$G(IBXDATA(Z0))+$P(IBXSAVE("MIA45",IBZ,Z,4),U)
"DATA",364.7,824,3,0)
^^3^3^2990901^^^^
"DATA",364.7,824,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,824,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the first piece
"DATA",364.7,824,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,832,0)
867^N^5^^^^N
"DATA",364.7,832,1)
I $$COBN^IBCEF(IBXIEN)>1 D COBPYRID^IBCEU1(IBXIEN,.IBXSAVE,.IBXDATA)
"DATA",364.7,832,3,0)
^^4^4^2990902^^^^
"DATA",364.7,832,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,832,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,832,3,3,0)
associated with it, output the payer id for each COB sequence found for the
"DATA",364.7,832,3,4,0)
line.
"DATA",364.7,839,0)
882^N^5^^^^N
"DATA",364.7,839,1)
N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,5) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))
"DATA",364.7,839,3,0)
^^4^4^2990902^^^^
"DATA",364.7,839,3,1,0)
This data element assumes the existence of the IBXSAVE("LCOB") array that
"DATA",364.7,839,3,2,0)
was previously extracted with COB data for specific line items.  Up to 6
"DATA",364.7,839,3,3,0)
adj amts can be output on a single record for the same line and group
"DATA",364.7,839,3,4,0)
code.  This extracts the first, seventh, etc onto separate records.
"DATA",364.7,842,0)
812^N^5^^^^N
"DATA",364.7,842,1)
N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE("CCOB",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE("CCOB",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE("CCOB",IBZ,Z,1)),U,5) S IBXDATA(Z0)=$$DOLLAR^IBCEFG1($G(IBXDATA(Z0))+$P(IBXSAVE("CCOB",IBZ,Z,1),U,5))
"DATA",364.7,842,3,0)
^^3^3^2990901^^^^
"DATA",364.7,842,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,842,3,2,0)
insurance into the IBXSAVE("CCOB",COB,n,1) array.  Extract the fifth piece
"DATA",364.7,842,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,846,0)
819^N^5^^^^N
"DATA",364.7,846,1)
N Z1,Z2,Z3 S Z1="MOA",Z2=3,Z3=2 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,846,3,0)
^^3^3^3030724^^^^
"DATA",364.7,846,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,846,3,2,0)
insurance into the IBXSAVE("MOA",COB,n,3) array.  Extract the second piece
"DATA",364.7,846,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,851,0)
825^N^5^^^^N
"DATA",364.7,851,1)
N Z1,Z2,Z3 S Z1="MOA",Z2=3,Z3=8 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,851,3,0)
^^3^3^2990901^^^^
"DATA",364.7,851,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,851,3,2,0)
insurance into the IBXSAVE("MOA",COB,n,3) array.  Extract the eighth piece
"DATA",364.7,851,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,852,0)
826^N^5^^^^N
"DATA",364.7,852,1)
N Z1,Z2,Z3 S Z1="MOA",Z2=3,Z3=9 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,852,3,0)
^^3^3^2990901^^^^
"DATA",364.7,852,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,852,3,2,0)
insurance into the IBXSAVE("MOA",COB,n,3) array.  Extract the ninth piece
"DATA",364.7,852,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,853,0)
830^N^5^^^^N
"DATA",364.7,853,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=3 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,853,3,0)
^^3^3^2990901^^^^
"DATA",364.7,853,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,853,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the third piece
"DATA",364.7,853,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,854,0)
831^N^257^^^^N
"DATA",364.7,854,1)
I +IBXDATA=0 K IBXDATA
"DATA",364.7,855,0)
832^N^5^^^^N
"DATA",364.7,855,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=5 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,855,3,0)
^^3^3^2990901^^^^
"DATA",364.7,855,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,855,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the fifth piece
"DATA",364.7,855,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,856,0)
833^N^5^^^^N
"DATA",364.7,856,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=6 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,856,3,0)
^^3^3^2990901^^^^
"DATA",364.7,856,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,856,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the sixth piece
"DATA",364.7,856,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,857,0)
834^N^5^^^^N
"DATA",364.7,857,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=7 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,857,3,0)
^^4^4^2990901^^^^
"DATA",364.7,857,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,857,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the seventh
"DATA",364.7,857,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,857,3,4,0)
entry.
"DATA",364.7,858,0)
835^N^5^^^^N
"DATA",364.7,858,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=8 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,858,3,0)
^^4^4^2990901^^^^
"DATA",364.7,858,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,858,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the eighth
"DATA",364.7,858,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,858,3,4,0)
entry.
"DATA",364.7,859,0)
836^N^5^^^^N
"DATA",364.7,859,1)
N Z1,Z2,Z2 S Z1="MIA45",Z2=4,Z3=9 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,859,3,0)
^^4^4^2990901^^^^
"DATA",364.7,859,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,859,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the ninth
"DATA",364.7,859,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,859,3,4,0)
entry.
"DATA",364.7,860,0)
837^N^5^^^^N
"DATA",364.7,860,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=10 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,860,3,0)
^^4^4^2990901^^^^
"DATA",364.7,860,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,860,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the tenth
"DATA",364.7,860,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,860,3,4,0)
entry.
"DATA",364.7,861,0)
838^N^5^^^^N
"DATA",364.7,861,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=11 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,861,3,0)
^^4^4^2990901^^^^
"DATA",364.7,861,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,861,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the eleventh
"DATA",364.7,861,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,861,3,4,0)
entry.
"DATA",364.7,862,0)
842^N^5^^^^N
"DATA",364.7,862,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=13 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,862,3,0)
^^4^4^2990901^^^^
"DATA",364.7,862,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,862,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the thirteenth
"DATA",364.7,862,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,862,3,4,0)
entry.
"DATA",364.7,864,0)
844^N^5^^^^N
"DATA",364.7,864,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=15 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,864,3,0)
^^4^4^2990901^^^^
"DATA",364.7,864,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,864,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the fifteenth
"DATA",364.7,864,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,864,3,4,0)
entry.
"DATA",364.7,865,0)
847^N^5^^^^N
"DATA",364.7,865,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=18 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,865,3,0)
^^4^4^2990901^^^^
"DATA",364.7,865,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,865,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the eighteenth
"DATA",364.7,865,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,865,3,4,0)
entry.
"DATA",364.7,870,0)
845^N^5^^^^N
"DATA",364.7,870,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=16 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,870,3,0)
^^3^3^2990901^^^^
"DATA",364.7,870,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,870,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the sixteenth
"DATA",364.7,870,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,871,0)
846^N^5^^^^N
"DATA",364.7,871,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=17 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,871,3,0)
^^4^4^2990901^^^^
"DATA",364.7,871,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,871,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the seventeenth
"DATA",364.7,871,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,871,3,4,0)
entry.
"DATA",364.7,872,0)
857^N^5^^^^N
"DATA",364.7,872,1)
N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE("CCAS",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE("CCAS",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE("CCAS",Z,Z0,1)),U,2)'="" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE("CCAS",Z,Z0,1),U,2))
"DATA",364.7,872,3,0)
^^3^3^2990901^^^^
"DATA",364.7,872,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,872,3,2,0)
insurance into the IBXSAVE("CCAS",COB,n,1) array.  Extract the second piece
"DATA",364.7,872,3,3,0)
if not null for this data.
"DATA",364.7,875,0)
897^N^5^^^^N
"DATA",364.7,875,1)
N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE("CCAS",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE("CCAS",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE("CCAS",Z,Z0,2)),U,2)'="" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE("CCAS",Z,Z0,2),U,2))
"DATA",364.7,875,3,0)
^^3^3^2990901^^^^
"DATA",364.7,875,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,875,3,2,0)
insurance into the IBXSAVE("CCAS",COB,n,2) array.  Extract the second piece
"DATA",364.7,875,3,3,0)
for this data, if not null.
"DATA",364.7,876,0)
898^N^5^^^^N
"DATA",364.7,876,1)
N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE("CCAS",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE("CCAS",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE("CCAS",Z,Z0,3)),U,2)'="" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE("CCAS",Z,Z0,3),U,2))
"DATA",364.7,876,3,0)
^^3^3^2990901^^^^
"DATA",364.7,876,3,1,0)
his data element relies on the previous extract of COB data for other
"DATA",364.7,876,3,2,0)
nsurance into the IBXSAVE("CCAS",COB,n,3) array.  Extract the second piece
"DATA",364.7,876,3,3,0)
or this data, if not null.
"DATA",364.7,882,0)
899^N^5^^^^N
"DATA",364.7,882,1)
N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE("CCAS",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE("CCAS",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE("CCAS",Z,Z0,4)),U,2)'="" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE("CCAS",Z,Z0,4),U,2))
"DATA",364.7,882,3,0)
^^3^3^2990901^^^^
"DATA",364.7,882,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,882,3,2,0)
insurance into the IBXSAVE("CCAS",COB,n,4) array.  Extract the second piece
"DATA",364.7,882,3,3,0)
for this data, if not null.
"DATA",364.7,883,0)
901^N^5^^^^N
"DATA",364.7,883,1)
N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE("CCAS",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE("CCAS",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE("CCAS",Z,Z0,6)),U,2)'="" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE("CCAS",Z,Z0,6),U,2))
"DATA",364.7,883,3,0)
^^3^3^2990901^^^^
"DATA",364.7,883,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,883,3,2,0)
insurance into the IBXSAVE("CCAS",COB,n,6) array.  Extract the second piece
"DATA",364.7,883,3,3,0)
for this data, if not null.
"DATA",364.7,886,0)
900^N^5^^^^N
"DATA",364.7,886,1)
N Z,Z0,Z1 K IBXDATA S (Z,Z1)=0 F  S Z=$O(IBXSAVE("CCAS",Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBXSAVE("CCAS",Z,Z0)) Q:'Z0  S Z1=Z1+1 I $P($G(IBXSAVE("CCAS",Z,Z0,5)),U,2)'="" S IBXDATA(Z1)=$$DOLLAR^IBCEFG1($P(IBXSAVE("CCAS",Z,Z0,5),U,2))
"DATA",364.7,886,3,0)
^^3^3^2990901^^^^
"DATA",364.7,886,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,886,3,2,0)
insurance into the IBXSAVE("CCAS",COB,n,5) array.  Extract the second piece
"DATA",364.7,886,3,3,0)
for this data, if not null.
"DATA",364.7,890,0)
852^N^5^^^^N
"DATA",364.7,890,1)
N Z1,Z2,Z3 S Z1="MIA45",Z2=4,Z3=4 D AMTOUT^IBCEF2(Z1,Z2,Z3,.IBXSAVE)
"DATA",364.7,890,3,0)
^^4^4^2990901^^^^
"DATA",364.7,890,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,890,3,2,0)
insurance into the IBXSAVE("MIA45",COB,n,4) array.  Extract the fourth
"DATA",364.7,890,3,3,0)
piece for this data.  Output the sum of each COB sequence as 1 IBXDATA(n)
"DATA",364.7,890,3,4,0)
entry.
"DATA",364.7,947,0)
970^N^271^^^^N
"DATA",364.7,947,1)
K:'$$OLAB^IBCEU(IBXIEN)&'$$WNRBILL^IBEFUNC(IBXIEN) IBXDATA I $D(IBXDATA) S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA)
"DATA",364.7,951,0)
891^N^5^^^^N
"DATA",364.7,951,1)
N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE("CCOB",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE("CCOB",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE("CCOB",IBZ,Z,0)),U,6) S IBXDATA(Z0)=$$DT^IBCEFG1($P(IBXSAVE("CCOB",IBZ,Z,0),U,6),"","D8") Q
"DATA",364.7,951,3,0)
^^4^4^2991115^^^^
"DATA",364.7,951,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,951,3,2,0)
insurance into the IBXSAVE("CCOB",COB,n,0) array.  Extract the sixth piece
"DATA",364.7,951,3,3,0)
for this data.  Extract only the first date paid for each COB sequence into
"DATA",364.7,951,3,4,0)
IBXDATA(n).
"DATA",364.7,956,0)
964^N^5^^^^N
"DATA",364.7,956,1)
N Z,ZO,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE("CCOB",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE("CCOB",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE("CCOB",IBZ,Z,4)),U) S IBXDATA(Z0)=$P(IBXSAVE("CCOB",IBZ,Z,4),U)
"DATA",364.7,956,3,0)
^364.73^3^3^3031002^^^^
"DATA",364.7,956,3,1,0)
This data element relies on the previous extract of COB data for
"DATA",364.7,956,3,2,0)
other insurance into the IBXSAVE("CCOB",COB,n,4) array.  Extract the first
"DATA",364.7,956,3,3,0)
piece for this data.  Output each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,957,0)
868^N^5^^^^N
"DATA",364.7,957,1)
N S,N K IBXDATA S S=4 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S) S N=0 F  S N=$O(IBXDATA(N)) Q:'N  S:$G(IBXDATA(N)) IBXDATA(N)=$$DOLLAR^IBCEFG1(IBXDATA(N))
"DATA",364.7,957,3,0)
^^4^4^3030428^
"DATA",364.7,957,3,1,0)
This data element assumes the existence of the IBXSAVE array for each 
"DATA",364.7,957,3,2,0)
line item (LCOB) that was previously extracted.  If the line has COB data 
"DATA",364.7,957,3,3,0)
associated with it, output the amount paid for each COB sequence found for
"DATA",364.7,957,3,4,0)
the line.
"DATA",364.7,958,0)
869^N^5^^^^N
"DATA",364.7,958,1)
N S K IBXDATA S S=5 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S)
"DATA",364.7,958,3,0)
^^4^4^2990902^^^
"DATA",364.7,958,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,958,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,958,3,3,0)
associated with it, output the procedure for each COB sequence found for the
"DATA",364.7,958,3,4,0)
line.
"DATA",364.7,959,0)
870^N^5^^^^N
"DATA",364.7,959,1)
N S K IBXDATA S S=11 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S)
"DATA",364.7,959,3,0)
^^4^4^2990902^^^
"DATA",364.7,959,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,959,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,959,3,3,0)
associated with it, output the revenue code for each COB sequence found for
"DATA",364.7,959,3,4,0)
the line.
"DATA",364.7,960,0)
871^N^5^^^^N
"DATA",364.7,960,1)
D COBMOD^IBCEU0(.IBXSAVE,.IBXDATA,1)
"DATA",364.7,960,3,0)
^^4^4^2990902^^^
"DATA",364.7,960,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,960,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,960,3,3,0)
associated with it, output the modifier 1 for each COB sequence found for
"DATA",364.7,960,3,4,0)
the line.
"DATA",364.7,961,0)
872^N^5^^^^N
"DATA",364.7,961,1)
D COBMOD^IBCEU0(.IBXSAVE,.IBXDATA,2)
"DATA",364.7,961,3,0)
^^4^4^2990902^^
"DATA",364.7,961,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,961,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,961,3,3,0)
associated with it, output the modifier 2 for each COB sequence found for
"DATA",364.7,961,3,4,0)
the line.
"DATA",364.7,962,0)
873^N^5^^^^N
"DATA",364.7,962,1)
D COBMOD^IBCEU0(.IBXSAVE,.IBXDATA,3)
"DATA",364.7,962,3,0)
^^4^4^2990902^^
"DATA",364.7,962,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,962,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,962,3,3,0)
associated with it, output the modifier 3 for each COB sequence found for
"DATA",364.7,962,3,4,0)
the line.
"DATA",364.7,963,0)
874^N^5^^^^N
"DATA",364.7,963,1)
D COBMOD^IBCEU0(.IBXSAVE,.IBXDATA,4)
"DATA",364.7,963,3,0)
^^4^4^2990902^^
"DATA",364.7,963,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,963,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,963,3,3,0)
associated with it, output the modifier 4 for each COB sequence found for
"DATA",364.7,963,3,4,0)
the line.
"DATA",364.7,964,0)
875^N^5^^^^N
"DATA",364.7,964,1)
K IBXDATA D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,10)
"DATA",364.7,964,3,0)
^^4^4^2990902^^
"DATA",364.7,964,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,964,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,964,3,3,0)
associated with it, output the description for each COB sequence found for
"DATA",364.7,964,3,4,0)
the line.
"DATA",364.7,965,0)
876^N^5^^^^N
"DATA",364.7,965,1)
N S K IBXDATA S S=12 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S)
"DATA",364.7,965,3,0)
^^4^4^2990902^^
"DATA",364.7,965,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,965,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,965,3,3,0)
associated with it, output the paid units for each COB sequence found for
"DATA",364.7,965,3,4,0)
the line.
"DATA",364.7,966,0)
877^N^5^^^^N
"DATA",364.7,966,1)
N S K IBXDATA S S=13 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S) K:'$G(IBXTRA) IBXDATA
"DATA",364.7,966,3,0)
^^4^4^2990902^^
"DATA",364.7,966,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,966,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,966,3,3,0)
associated with it, output the assigned line # for each COB sequence found
"DATA",364.7,966,3,4,0)
for the line.
"DATA",364.7,967,0)
976^N^5^^^^N
"DATA",364.7,967,1)
N S,N K IBXDATA S S=20 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S) S N=0 F  S N=$O(IBXDATA(N)) Q:'N  S:$G(IBXDATA(N)) IBXDATA(N)=$$DT^IBCEFG1(IBXDATA(N),"","D8")
"DATA",364.7,967,3,0)
^^5^5^2991115^^^^
"DATA",364.7,967,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,967,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,967,3,3,0)
associated with it, output the date paid for each COB sequence found for
"DATA",364.7,967,3,4,0)
the line.  This data is only stored at the claim level, not the line level,
"DATA",364.7,967,3,5,0)
so it is assumed it applies to every line item on the EOB.
"DATA",364.7,975,0)
914^N^5^^^^N
"DATA",364.7,975,1)
N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,14) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))
"DATA",364.7,975,3,0)
^^4^4^2990902^^^
"DATA",364.7,975,3,1,0)
This data element assumes the existence of the IBXSAVE("LCOB") array that
"DATA",364.7,975,3,2,0)
was previously extracted with COB data for specific line items.  Up to 6
"DATA",364.7,975,3,3,0)
adj amts can be output on a single record for the same line and group
"DATA",364.7,975,3,4,0)
code.  This extracts the fourth, tenth, etc onto separate records.
"DATA",364.7,978,0)
913^N^5^^^^N
"DATA",364.7,978,1)
N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,11) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))
"DATA",364.7,978,3,0)
^^4^4^2990902^^^^
"DATA",364.7,978,3,1,0)
This data element assumes the existence of the IBXSAVE("LCOB") array that
"DATA",364.7,978,3,2,0)
was previously extracted with COB data for specific line items.  Up to 6
"DATA",364.7,978,3,3,0)
adj amts can be output on a single record for the same line and group
"DATA",364.7,978,3,4,0)
code.  This extracts the third, ninth, etc onto separate records.
"DATA",364.7,980,0)
915^N^5^^^^N
"DATA",364.7,980,1)
N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,17) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))
"DATA",364.7,980,3,0)
^^4^4^2990902^^^
"DATA",364.7,980,3,1,0)
This data element assumes the existence of the IBXSAVE("LCOB") array that
"DATA",364.7,980,3,2,0)
was previously extracted with COB data for specific line items.  Up to 6
"DATA",364.7,980,3,3,0)
adj amts can be output on a single record for the same line and group
"DATA",364.7,980,3,4,0)
code.  This extracts the fifth, eleventh, etc onto separate records.
"DATA",364.7,982,0)
916^N^5^^^^N
"DATA",364.7,982,1)
N Z D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,20) I $D(IBXDATA) S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  S IBXDATA(Z)=$$DOLLAR^IBCEFG1(IBXDATA(Z))
"DATA",364.7,982,3,0)
^^4^4^2990902^^^^
"DATA",364.7,982,3,1,0)
This data element assumes the existence of the IBXSAVE("LCOB") array that
"DATA",364.7,982,3,2,0)
was previously extracted with COB data for specific line items.  Up to 6
"DATA",364.7,982,3,3,0)
adj amts can be output on a single record for the same line and group
"DATA",364.7,982,3,4,0)
code.  This extracts the sixth, twelveth, etc onto separate records.
"DATA",364.7,983,0)
962^N^5^^^^N
"DATA",364.7,983,1)
N Z,Z0,IBZ K IBXDATA S (IBZ,Z0)=0 F  S IBZ=$O(IBXSAVE("CCOB",IBZ)) Q:'IBZ  S Z0=Z0+1,Z=0 F  S Z=$O(IBXSAVE("CCOB",IBZ,Z)) Q:'Z  I $P($G(IBXSAVE("CCOB",IBZ,Z,0)),U,21)'="" S IBXDATA(Z0)=$P(IBXSAVE("CCOB",IBZ,Z,0),U,21)
"DATA",364.7,983,3,0)
^^4^4^2990901^^^^
"DATA",364.7,983,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,983,3,2,0)
insurance into the IBXSAVE("CCOB",COB,n,0) array.  Extract the thirteenth
"DATA",364.7,983,3,3,0)
piece for this data.  Output only the last claim status found for each COB
"DATA",364.7,983,3,4,0)
sequence.
"DATA",364.7,985,0)
983^N^5^^^^N
"DATA",364.7,985,1)
N Z,Z0 K IBXDATA I $$COBN^IBCEF(IBXIEN)>1 F Z0="INPT","OUTPT","RX" S Z=0 F  S Z=$O(IBXSAVE(Z0,Z)) K:'Z IBXSAVE(Z0) Q:'Z  I $D(IBXSAVE(Z0,Z)),$$EOBCNT^IBCEU1(IBXIEN) M IBXSAVE("LCOB",Z)=IBXSAVE(Z0,Z)
"DATA",364.7,985,3,0)
^^4^4^3030331^^^^
"DATA",364.7,985,3,1,0)
The arrays IBXSAVE("INPT"), IBXSAVE("OUTPT") and IBXSAVE("RX") are created
"DATA",364.7,985,3,2,0)
when the line items on the bill are produced.  This field takes the data
"DATA",364.7,985,3,3,0)
from these arrays and creates a new IBXSAVE("LCOB") array with just the COB
"DATA",364.7,985,3,4,0)
data and deletes the original IBXSAVE arrays.
"DATA",364.7,1013,0)
1012^N^5
"DATA",364.7,1013,1)
N S K IBXDATA S S=19 D COBOUT^IBCEU1(.IBXSAVE,.IBXDATA,S)
"DATA",364.7,1013,3,0)
^^4^4^3030331^
"DATA",364.7,1013,3,1,0)
This data element assumes the existence of the IBXSAVE array for each line
"DATA",364.7,1013,3,2,0)
item (LCOB) that was previously extracted.  If the line has COB data
"DATA",364.7,1013,3,3,0)
associated with it, output the procedure type code for each COB sequence
"DATA",364.7,1013,3,4,0)
found for the line.
"DATA",364.7,1014,0)
1013^N^5
"DATA",364.7,1014,1)
D LCOBOUT^IBCEU1(.IBXSAVE,.IBXDATA,22)
"DATA",364.7,1014,3,0)
^^3^3^3030403^
"DATA",364.7,1014,3,1,0)
This data element assumes the existence of the IBXSAVE("LCOB") array that
"DATA",364.7,1014,3,2,0)
was previously extracted with COB data for specific line items.  This
"DATA",364.7,1014,3,3,0)
extracts piece 22 for the line item remark code.
"FIA",350.8)
IB ERROR
"FIA",350.8,0)
^IBE(350.8,
"FIA",350.8,0,0)
350.8I
"FIA",350.8,0,1)
n^n^f^^n^^y^o^n
"FIA",350.8,0,10)

"FIA",350.8,0,11)
I $F(".IB120.IB122.IB325.IB326.","."_$P($G(^IBE(350.8,+Y,0)),U,1)_".")
"FIA",350.8,0,"RLRO")

"FIA",350.8,0,"VR")
2.0^IB
"FIA",350.8,350.8)
0
"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^n^p^^^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,8.1)

"FIA",350.9,350.9,8.11)

"FIA",350.9,350.9,8.12)

"FIA",350.9,350.9,8.13)

"FIA",356.19)
CLAIMS TRACKING UNBILLED AMOUNTS DATA
"FIA",356.19,0)
^IBE(356.19,
"FIA",356.19,0,0)
356.19D
"FIA",356.19,0,1)
y^n^p^^^^n^^n
"FIA",356.19,0,10)

"FIA",356.19,0,11)

"FIA",356.19,0,"RLRO")

"FIA",356.19,0,"VR")
2.0^IB
"FIA",356.19,356.19)
1
"FIA",356.19,356.19,3.01)

"FIA",356.19,356.19,3.02)

"FIA",356.19,356.19,3.04)

"FIA",356.19,356.19,3.05)

"FIA",356.19,356.19,3.06)

"FIA",356.19,356.19,3.07)

"FIA",356.19,356.19,3.08)

"FIA",356.19,356.19,3.09)

"FIA",356.19,356.19,3.1)

"FIA",361.1)
EXPLANATION OF BENEFITS
"FIA",361.1,0)
^IBM(361.1,
"FIA",361.1,0,0)
361.1PI
"FIA",361.1,0,1)
y^n^p^^^^n^^n
"FIA",361.1,0,10)

"FIA",361.1,0,11)

"FIA",361.1,0,"RLRO")

"FIA",361.1,0,"VR")
2.0^IB
"FIA",361.1,361.1)
1
"FIA",361.1,361.1,.06)

"FIA",361.1,361.1,.16)

"FIA",361.1,361.1,.2)

"FIA",361.1,361.1,2.05)

"FIA",361.1,361.1,3.01)

"FIA",361.1,361.1,30.01)

"FIA",361.1,361.1,30.02)

"FIA",361.1,361.1,100.03)

"FIA",361.1,361.1,100.04)

"FIA",361.1,361.111)
1
"FIA",361.1,361.111,.02)

"FIA",361.1,361.111,.03)

"FIA",361.1,361.115)
1
"FIA",361.1,361.115,.11)

"FIA",361.1,361.115,1)

"FIA",361.1,361.115,4)

"FIA",361.1,361.1151)
1
"FIA",361.1,361.1151,.01)

"FIA",361.1,361.11511)
1
"FIA",361.1,361.11511,.03)

"FIA",361.1,361.1154)
0
"FIA",364.5)
IB DATA ELEMENT DEFINITION
"FIA",364.5,0)
^IBA(364.5,
"FIA",364.5,0,0)
364.5I
"FIA",364.5,0,1)
n^n^f^^y^^y^o^n
"FIA",364.5,0,10)

"FIA",364.5,0,11)
I $$INCLUDE^IBY155PR(Y)
"FIA",364.5,0,"RLRO")

"FIA",364.5,0,"VR")
2.0^IB
"FIA",364.5,364.5)
0
"FIA",364.5,364.53)
0
"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $T(ENT6+1^IBY155PO)[(U_+Y_U)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY155PO(Y)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,7)

"FIA",399,399,9)

"FIA",399,399,25)

"FIA",399,399,28)

"INI")
IBY155PR
"INIT")
IBY155PO
"IX",361.1,361.1,"ABD",0)
361.1^ABD^This xref provides an index by bill # and EOB date^R^^R^IR^I^361.1^^^^^S
"IX",361.1,361.1,"ABD",1)
S ^IBM(361.1,"ABD",X2(1),X2(2),DA)=""
"IX",361.1,361.1,"ABD",1.4)
I X2(1)=""!(X2(2)="") S X=0
"IX",361.1,361.1,"ABD",2)
K ^IBM(361.1,"ABD",X1(1),X1(2),DA)
"IX",361.1,361.1,"ABD",2.4)
I X1(1)=""!(X1(2)="") S X=0
"IX",361.1,361.1,"ABD",2.5)
K ^IBM(361.1,"ABD")
"IX",361.1,361.1,"ABD",11.1,0)
^.114IA^2^2
"IX",361.1,361.1,"ABD",11.1,1,0)
1^F^361.1^.01^^1^F
"IX",361.1,361.1,"ABD",11.1,2,0)
2^F^361.1^.06^^2^F
"IX",361.1,361.1,"AMRA",0)
361.1^AMRA^Index by EOB type and Review Status^R^^R^IR^I^361.1^^^^^S
"IX",361.1,361.1,"AMRA",1)
S ^IBM(361.1,"AMRA",X(1),X(2),DA)=""
"IX",361.1,361.1,"AMRA",2)
K ^IBM(361.1,"AMRA",X(1),X(2),DA)
"IX",361.1,361.1,"AMRA",2.5)
K ^IBM(361.1,"AMRA")
"IX",361.1,361.1,"AMRA",11.1,0)
^.114IA^2^2
"IX",361.1,361.1,"AMRA",11.1,1,0)
1^F^361.1^.04^^1^F
"IX",361.1,361.1,"AMRA",11.1,1,3)

"IX",361.1,361.1,"AMRA",11.1,2,0)
2^F^361.1^.16^^2^F
"IX",361.1,361.1,"AMRA",11.1,2,3)

"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)

"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)

"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)

"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)

"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)

"KRN",.402,1054,-1)
0^1
"KRN",.402,1054,0)
IB STATUS^3040608.1554^^399^^^3040809
"KRN",.402,1054,"%D",0)
^^1^1^3040608^
"KRN",.402,1054,"%D",1,0)
Edit a bill's status.
"KRN",.402,1054,"DIAB",1,1,399.044,0)
ALL
"KRN",.402,1054,"DIAB",10,0,399,0)
REQUEST AN MRA?;"REQUEST MRA NOW?"
"KRN",.402,1054,"DR",1,399)
S DIE("NO^")="OUTOK";I $D(IBYY) S Y=IBYY;@90;9;I $S(X="":1,X=1:1,1:0) S Y="@99";S IBX3=3;44;S Y="@99";@901;25REQUEST MRA NOW?~;S Y="@99";@91;21///^S X="NOW";@92;I $P(^DGCR(399,DA,"S"),"^",12)]"" S Y="@94";12///^S X=DT;S Y="@99";
"KRN",.402,1054,"DR",1,399,1)
@911;21///^S X="NOW";I $P($G(^DGCR(399,DA,0)),U,13)'=2 S Y="@99";I $P($G(^DGCR(399,DA,"TX")),U,5)="C" S Y="@99";24///^S X="1R";S Y="@99";@94;14///^S X=DT;S Y="@99";@902;9///Y;S Y="@99";@99;K DIE("NO^");
"KRN",.402,1054,"DR",2,399.044)
.01
"KRN",.402,1054,"ROU")
^IBXST
"KRN",.402,1054,"ROUOLD")
IBXST
"KRN",.402,1080,-1)
0^2
"KRN",.402,1080,0)
IB SCREEN8H^3040914.1335^@^399^^@^3040914
"KRN",.402,1080,"DIAB",1,0,399,1)
163;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1080,"DIAB",1,0,399,3)
232:
"KRN",.402,1080,"DIAB",4,1,399.0222,5)
.12;T;REQ
"KRN",.402,1080,"DIAB",5,0,399,4)
D ASK19^IBCEU3(DA);X
"KRN",.402,1080,"DIAB",5,1,399.0222,5)
.05;T
"KRN",.402,1080,"DIAB",8,0,399,0)
453;T
"KRN",.402,1080,"DIAB",8,1,399.0222,5)
.13;T;REQ
"KRN",.402,1080,"DIAB",9,1,399.0222,5)
.06;T
"KRN",.402,1080,"DIAB",10,0,399,0)
454;T
"KRN",.402,1080,"DIAB",12,1,399.0222,5)
.14;T;REQ
"KRN",.402,1080,"DIAB",13,1,399.0222,5)
.07;T
"KRN",.402,1080,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["81" Y="@82";166;167;@82;S:IBDR20'["82" Y="@83";215;453T~;S:'DIPA("I2") Y="@825";454T~;S:'DIPA("I3") Y="@825";455;@825;
"KRN",.402,1080,"DR",1,399,1)
163PRIMARY AUTHORIZATION CODE~;S:'DIPA("I2") Y="@83";230;S:'DIPA("I3") Y="@83";231;@83;S:IBDR20'["83" Y="@84";222;@84;S:IBDR20'["84" Y="@85";232;S DIPA("NVA_FC")=X S:X="" Y="@842";
"KRN",.402,1080,"DR",1,399,2)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@841";
"KRN",.402,1080,"DR",1,399,3)
^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");@841;233;234;@842;S:"24"'[$P($G(^DGCR(399,DA,"U2")),U,11) Y="@85";
"KRN",.402,1080,"DR",1,399,4)
235//^S X=$$CLIANVA^IBCEP8(DA);@85;S:IBDR20'["85" Y="@86";459;D ASK19^IBCEU3(DA);236;237;238//^S X=$S($$WNRBILL^IBEFUNC(DA):"31",1:"");@86;S:IBDR20'["86" Y="@99";I $$NSAME^IBCSC8H(DA) S Y="@861";401;@861;
"KRN",.402,1080,"DR",1,399,5)
I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@862";I $$REQMRA^IBEFUNC(DA) S Y="@8611";27//NO FORCED PRINT;S Y="@862";@8611;28//NO FORCED PRINT;@862;@99;
"KRN",.402,1080,"DR",2,355.93)
.05;.1;.06;.07;.08;
"KRN",.402,1080,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:X="" Y="@98";
"KRN",.402,1080,"DR",2,399.0222,1)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");S DIPA("CRD")=$$CRED^IBCEU($P(^DGCR(399,DA(1),"PRV",DA,0),U,2));
"KRN",.402,1080,"DR",2,399.0222,2)
.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P(^DGCR(399,DA(1),"PRV",DA,0),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC8H($G(DIPA("CRD")));K DIPA("W1");I '$G(DIPA("I1")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,3)
D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8382",DIPA("EDIT")=1:"@8391",DIPA("EDIT")=2:"@8371",1:"");@8382;I '$G(DIPA("I2")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,4)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8383",DIPA("EDIT")=1:"@8392",DIPA("EDIT")=2:"@8372",1:"");@8383;I '$G(DIPA("I3")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,5)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8305",DIPA("EDIT")=1:"@8393",DIPA("EDIT")=2:"@8373",1:"");S Y="@8305";@8391;.12R~T~;.05T~;S Y="@8382";@8392;.13R~T~;.06T~;S Y="@8383";@8393;.14R~T~;.07T~;S Y="@8305";@8371;
"KRN",.402,1080,"DR",2,399.0222,6)
.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@8382";@8372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@8383";@8373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@8305";@8305;@98;W @IOF;
"KRN",.402,1080,"ROU")
^IBXSC8H
"KRN",.402,1080,"ROUOLD")
IBXSC8H
"KRN",.402,1316,-1)
0^3
"KRN",.402,1316,0)
IB SCREEN82^3040914.1336^@^399^^@^3040914
"KRN",.402,1316,"DIAB",1,0,399,5)
232:
"KRN",.402,1316,"DIAB",4,0,399,0)
453;T
"KRN",.402,1316,"DIAB",4,1,399.0222,5)
.12;T;REQ
"KRN",.402,1316,"DIAB",5,1,399.0222,5)
.05;T
"KRN",.402,1316,"DIAB",6,0,399,0)
454;T
"KRN",.402,1316,"DIAB",8,0,399,0)
455;T
"KRN",.402,1316,"DIAB",8,1,399.0222,5)
.13;T;REQ
"KRN",.402,1316,"DIAB",9,1,399.0222,5)
.06;T
"KRN",.402,1316,"DIAB",10,0,399,0)
163;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1316,"DIAB",12,1,399.0222,5)
.14;T;REQ
"KRN",.402,1316,"DIAB",13,1,399.0222,5)
.07;T
"KRN",.402,1316,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["81" Y="@82";208;453T~;S:'DIPA("I2") Y="@8111";454T~;S:'DIPA("I3") Y="@8111";455T~;@8111;163PRIMARY AUTHORIZATION CODE~;
"KRN",.402,1316,"DR",1,399,1)
S:'DIPA("I2") Y="@811";230;S:'DIPA("I3") Y="@811";231;@811;215;159;@82;S:IBDR20'["82" Y="@83";222;@83;S:IBDR20'["83" Y="@84";450;451;@84;S:IBDR20'["84" Y="@85";452;@85;S:IBDR20'["85" Y="@86";456;458;@86;S:IBDR20'["86" Y="@87";
"KRN",.402,1316,"DR",1,399,2)
I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@861";I $$REQMRA^IBEFUNC(DA) S Y="@8611";27//NO FORCED PRINT;S Y="@87";@8611;28//NO FORCED PRINT;S Y="@87";@861;
"KRN",.402,1316,"DR",1,399,3)
N X,Y,DIR S DIR(0)="EA",DIR("A",1)="NO FIELDS AVAILABLE TO EDIT",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR;@87;S:IBDR20'["87" Y="@88";@88;S:IBDR20'["88" Y="@89";232;S DIPA("NVA_FC")=X S:DIPA("NVA_FC")="" Y="@882";
"KRN",.402,1316,"DR",1,399,4)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@881";
"KRN",.402,1316,"DR",1,399,5)
^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");@881;233;@882;@89;
"KRN",.402,1316,"DR",2,355.93)
.05;.1;.06;.07;.08;
"KRN",.402,1316,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:DIPA("PRF")="" Y="@98";
"KRN",.402,1316,"DR",2,399.0222,1)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");
"KRN",.402,1316,"DR",2,399.0222,2)
S DIPA("CRD")=$$CRED^IBCEU($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2));.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC8H($G(DIPA("CRD")));K DIPA("W1");
"KRN",.402,1316,"DR",2,399.0222,3)
I '$G(DIPA("I1")) S Y="@8205";D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8282",DIPA("EDIT")=1:"@8291",DIPA("EDIT")=2:"@8271",1:"");@8282;I '$G(DIPA("I2")) S Y="@8205";
"KRN",.402,1316,"DR",2,399.0222,4)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8283",DIPA("EDIT")=1:"@8292",DIPA("EDIT")=2:"@8272",1:"");@8283;I '$G(DIPA("I3")) S Y="@8205";
"KRN",.402,1316,"DR",2,399.0222,5)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8205",DIPA("EDIT")=1:"@8293",DIPA("EDIT")=2:"@8273",1:"");S Y="@8205";@8291;.12R~T~;.05T~;S Y="@8282";@8292;.13R~T~;.06T~;S Y="@8283";@8293;.14R~T~;.07T~;S Y="@8205";@8271;
"KRN",.402,1316,"DR",2,399.0222,6)
.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@8282";@8272;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@8283";@8273;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@8205";@8205;@98;W @IOF;
"KRN",.402,1316,"ROU")
^IBXSC82
"KRN",.402,1316,"ROUOLD")
IBXSC82
"KRN",.402,2306,-1)
0^4
"KRN",.402,2306,0)
IBT UNBILLED AMOUNTS^3040928.1019^^356.19^^^3040928
"KRN",.402,2306,"DIAB",1,0,356.19,3)
2.11///NOW
"KRN",.402,2306,"DR",1,356.19)
2.01////^S X=IBUNB("EPISM-I");2.02////^S X=IBUNB("EPISM-P");2.03////^S X=IBUNB("ENCNTRS");2.04////^S X=IBUNB("CPTMS-I");2.05////^S X=IBUNB("CPTMS-P");2.06////^S X=IBUNB("PRESCRP");2.07////^S X=IBUNB("UNBILIP");
"KRN",.402,2306,"DR",1,356.19,1)
2.08////^S X=IBUNB("UNBILOP");2.09////^S X=IBUNB("UNBILRX");2.1////^S X=IBUNB("UNBILTL");3.01////^S X=IBUNB("EPISM-I-MRA");3.02////^S X=IBUNB("EPISM-P-MRA");3.04////^S X=IBUNB("CPTMS-I-MRA");3.05////^S X=IBUNB("CPTMS-P-MRA");
"KRN",.402,2306,"DR",1,356.19,2)
3.06////^S X=IBUNB("PRESCRP-MRA");3.07////^S X=IBUNB("UNBILIP-MRA");3.08////^S X=IBUNB("UNBILOP-MRA");3.09////^S X=IBUNB("UNBILRX-MRA");3.1////^S X=IBUNB("UNBILTL-MRA");Q;
"KRN",.402,2306,"DR",1,356.19,3)
2.11///^S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100);
"KRN",19,3374,-1)
2^19
"KRN",19,3374,0)
IB OUTPUT MANAGEMENT REPORTS^Management Reports (Billing) Menu^^M^1453^^^^^^^200
"KRN",19,3374,10,0)
^19.01IP^17^15
"KRN",19,3374,10,17,0)
12114^MRS
"KRN",19,3374,10,17,"^")
IBCEM MRA STATISTICS REPORT
"KRN",19,3374,"U")
MANAGEMENT REPORTS (BILLING) M
"KRN",19,6406,-1)
4^11
"KRN",19,6406,0)
IBCE RESUBMIT BILL BATCH
"KRN",19,6407,-1)
4^10
"KRN",19,6407,0)
IBCE RESUBMIT BILL
"KRN",19,6409,-1)
0^1
"KRN",19,6409,0)
IBCE 837 EDI MENU^EDI Menu For Electronic Bills^^M^^^^^^^^INTEGRATED BILLING
"KRN",19,6409,1,0)
^19.06^2^2^3030502^^^^
"KRN",19,6409,1,1,0)
This menu contains the options needed to process and maintain EDI 837
"KRN",19,6409,1,2,0)
bill submission functions.
"KRN",19,6409,10,0)
^19.01IP^18^18
"KRN",19,6409,10,1,0)
6407^RBI^40
"KRN",19,6409,10,1,"^")
IBCE RESUBMIT BILL
"KRN",19,6409,10,2,0)
6406^RBA^50
"KRN",19,6409,10,2,"^")
IBCE RESUBMIT BILL BATCH
"KRN",19,6409,10,6,0)
6412^MM^10
"KRN",19,6409,10,6,"^")
IBCE 837 EDI REPORTS
"KRN",19,6409,10,14,0)
8912^SEND
"KRN",19,6409,10,14,"^")
IBCE 837 MANUAL TRANSMIT
"KRN",19,6409,10,16,0)
8999^EXT
"KRN",19,6409,10,16,"^")
IBCE EXTRACT STATUS
"KRN",19,6409,10,17,0)
9628^TR^20
"KRN",19,6409,10,17,"^")
IBCE TXMT MGMNT REPORTS
"KRN",19,6409,10,18,0)
11443^MRA^30
"KRN",19,6409,10,18,"^")
IBCEM MRA MANAGEMENT MENU
"KRN",19,6409,99)
59319,44396
"KRN",19,6409,99.1)
58500,34241
"KRN",19,6409,"U")
EDI MENU FOR ELECTRONIC BILLS
"KRN",19,6412,-1)
4^12
"KRN",19,6412,0)
IBCE 837 EDI REPORTS
"KRN",19,8912,-1)
4^13
"KRN",19,8912,0)
IBCE 837 MANUAL TRANSMIT
"KRN",19,8999,-1)
4^14
"KRN",19,8999,0)
IBCE EXTRACT STATUS
"KRN",19,9628,-1)
4^15
"KRN",19,9628,0)
IBCE TXMT MGMNT REPORTS
"KRN",19,11315,-1)
0^4
"KRN",19,11315,0)
IBCE MRA MANAGEMENT^MRA Management WorkList^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11315,1,0)
^19.06^3^3^3030502^^^^
"KRN",19,11315,1,1,0)
This will be a list manager screen with the option available to print an
"KRN",19,11315,1,2,0)
associated report. Using the screen, billing staff will be able to follow
"KRN",19,11315,1,3,0)
up on bills for secondary and tertiary billing for MRA bills.
"KRN",19,11315,25)
EN^IBCECOB
"KRN",19,11315,"U")
MRA MANAGEMENT WORKLIST
"KRN",19,11440,-1)
0^5
"KRN",19,11440,0)
IBCEM MRA REPORT PRINT^Print MRA^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11440,1,0)
^19.06^4^4^3031017^^^^
"KRN",19,11440,1,1,0)
This menu option prints the MRA Reports given a Bill Number. Based on the 
"KRN",19,11440,1,2,0)
Bill Type, this report will print either an Institutional Format (Part A) 
"KRN",19,11440,1,3,0)
or a Professional Format (Part B). In addition, if more than one MRA are 
"KRN",19,11440,1,4,0)
associated with the Bill, all MRA's will print.
"KRN",19,11440,25)
ENT^IBCEMRAA
"KRN",19,11440,"U")
PRINT MRA
"KRN",19,11443,-1)
0^7
"KRN",19,11443,0)
IBCEM MRA MANAGEMENT MENU^MRA Management Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",19,11443,1,0)
^19.06^2^2^3040812^^^^
"KRN",19,11443,1,1,0)
This menu option holds all EDI Medicare Remittance Advice (MRA) related 
"KRN",19,11443,1,2,0)
options.
"KRN",19,11443,10,0)
^19.01IP^6^4
"KRN",19,11443,10,1,0)
11315^MRW^10
"KRN",19,11443,10,1,"^")
IBCE MRA MANAGEMENT
"KRN",19,11443,10,2,0)
11440^PRI^20
"KRN",19,11443,10,2,"^")
IBCEM MRA REPORT PRINT
"KRN",19,11443,10,3,0)
11444^EOB^30
"KRN",19,11443,10,3,"^")
IBCEM VIEW MRA EOB
"KRN",19,11443,10,6,0)
11757^WNR^35
"KRN",19,11443,10,6,"^")
IBCEM PATIENTS W/O MEDICARE
"KRN",19,11443,99)
59759,63764
"KRN",19,11443,"U")
MRA MANAGEMENT MENU
"KRN",19,11444,-1)
0^6
"KRN",19,11444,0)
IBCEM VIEW MRA EOB^View MRA EOB^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11444,1,0)
^19.06^4^4^3030502^^
"KRN",19,11444,1,1,0)
This option will allow the user to choose a bill that has at 
"KRN",19,11444,1,2,0)
least one Medicare Remittance Advice (MRA) Explanation of
"KRN",19,11444,1,3,0)
Benefits (EOB) on file.  The user can then view the MRA EOB
"KRN",19,11444,1,4,0)
through the ListManager utility.
"KRN",19,11444,25)
EN^IBCEMVU
"KRN",19,11444,"U")
VIEW MRA EOB
"KRN",19,11757,-1)
0^17
"KRN",19,11757,0)
IBCEM PATIENTS W/O MEDICARE^Patients Without MEDICARE (WNR) Insurance^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11757,1,0)
^^4^4^3031201^
"KRN",19,11757,1,1,0)
This report will show living patients that have active insurance, but no 
"KRN",19,11757,1,2,0)
MEDICARE (WNR) insurance on file.  The other active insurance must be 
"KRN",19,11757,1,3,0)
Medigap, or Medicare Secondary type insurance.  In these cases, MEDICARE 
"KRN",19,11757,1,4,0)
(WNR) should be the primary insurance.  This is for the MRA project.
"KRN",19,11757,25)
EN^IBCEMMR
"KRN",19,11757,"U")
PATIENTS WITHOUT MEDICARE (WNR
"KRN",19,12114,-1)
0^20
"KRN",19,12114,0)
IBCEM MRA STATISTICS REPORT^MRA Statistics Report^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,12114,1,0)
^19.06^2^2^3040922^^
"KRN",19,12114,1,1,0)
The MRA Statistics Report displays statistics on Primary and Secondary
"KRN",19,12114,1,2,0)
MRA requests.
"KRN",19,12114,25)
EN^IBCEMSR
"KRN",19,12114,"U")
MRA STATISTICS REPORT
"KRN",19,12118,-1)
1^2
"KRN",19,12118,0)
IBCE EOB MANAGEMENT
"KRN",19,12119,-1)
1^16
"KRN",19,12119,0)
IB MRA MENU
"KRN",101,645,-1)
0^13
"KRN",101,645,0)
VALM EXPAND^Expand Entry^^A^^^^^^^^LIST MANAGER
"KRN",101,645,15)
S:'VALMCC VALMBCK="R"
"KRN",101,645,20)
I $D(^TMP("VALM DATA",$J,VALMEVL,"EXP")),^("EXP")]"" X ^("EXP")
"KRN",101,645,99)
59319,44393
"KRN",101,1734,-1)
0^22
"KRN",101,1734,0)
IBCE EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,1734,1,0)
^^2^2^2960221^
"KRN",101,1734,1,1,0)
Allows the user to exit the system without quitting through the hierarchy
"KRN",101,1734,1,2,0)
of screens, or the user can exit to the previous screen.
"KRN",101,1734,2,0)
^101.02A^1^1
"KRN",101,1734,2,1,0)
EX
"KRN",101,1734,2,"B","EX",1)

"KRN",101,1734,4)
^^^EX
"KRN",101,1734,20)
D FASTEXIT^IBCEFG4
"KRN",101,1734,28)

"KRN",101,1734,99)
59319,44393
"KRN",101,1793,-1)
0^36
"KRN",101,1793,0)
IBCEM CLONE BILL^Cancel/Clone A Bill^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,1793,1,0)
^101.06^2^2^3000713^^^
"KRN",101,1793,1,1,0)
This action allows a user to cancel and clone a bill that has been returned
"KRN",101,1793,1,2,0)
to the site in error.
"KRN",101,1793,4)
^^^CC
"KRN",101,1793,15)
I '$D(IOUON) D ENS^%ZISS
"KRN",101,1793,20)
D CLONE^IBCECOB2
"KRN",101,1793,99)
58919,37011
"KRN",101,2974,-1)
0^1
"KRN",101,2974,0)
IBCEM COB MANAGEMENT^^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,2974,1,0)
^101.06^2^2^3020904^^^^
"KRN",101,2974,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,2974,1,2,0)
to follow up on bills for secondary and tertiary billing.
"KRN",101,2974,4)
26^4
"KRN",101,2974,10,0)
^101.01PA^21^20
"KRN",101,2974,10,5,0)
2978^CB^40^
"KRN",101,2974,10,5,"^")
IBCEM COB CANCEL
"KRN",101,2974,10,10,0)
2983^Q^100^
"KRN",101,2974,10,10,"^")
IBCEM COB EXIT
"KRN",101,2974,10,11,0)
2975^PC^10^
"KRN",101,2974,10,11,"^")
IBCEM COPY SECOND/THIRD
"KRN",101,2974,10,14,0)
3012^VE^20^
"KRN",101,2974,10,14,"^")
IBCE EOB VIEW
"KRN",101,2974,10,17,0)
645^SU^30^^^Summary MRA Info
"KRN",101,2974,10,17,"^")
VALM EXPAND
"KRN",101,2974,10,18,0)
3736^PM^70^
"KRN",101,2974,10,18,"^")
IBCEM COB MRA PRINT
"KRN",101,2974,10,19,0)
2981^VB^60^^^View Bill
"KRN",101,2974,10,19,"^")
IBCEM COB EDIT BILL
"KRN",101,2974,10,20,0)
1793^CC^50^
"KRN",101,2974,10,20,"^")
IBCEM CLONE BILL
"KRN",101,2974,10,21,0)
3797^TP^80^
"KRN",101,2974,10,21,"^")
IBCEM COB TPJI
"KRN",101,2974,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,2974,20)
K IBFASTXT
"KRN",101,2974,26)
D SHOW^VALM
"KRN",101,2974,28)
Select Action: 
"KRN",101,2974,99)
59393,54732
"KRN",101,2975,-1)
0^8
"KRN",101,2975,0)
IBCEM COPY SECOND/THIRD^Process COB^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,2975,1,0)
^^1^1^2990723^^^^
"KRN",101,2975,1,1,0)
This action is used to create Secondary and Tertiary bills.
"KRN",101,2975,10,0)
^101.01PA
"KRN",101,2975,15)
I '$D(IOUON) D ENS^%ZISS
"KRN",101,2975,20)
D PRO^IBCECOB2
"KRN",101,2975,99)
59319,44393
"KRN",101,2978,-1)
0^3
"KRN",101,2978,0)
IBCEM COB CANCEL^Cancel Bill^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,2978,1,0)
^101.06^2^2^3000713^^^^
"KRN",101,2978,1,1,0)
This action allows a user to cancel a bill that has been 
"KRN",101,2978,1,2,0)
returned to the site in error
"KRN",101,2978,15)
I '$D(IOUON) D ENS^%ZISS
"KRN",101,2978,20)
D CANCEL^IBCECOB2
"KRN",101,2978,99)
59319,44393
"KRN",101,2981,-1)
0^5
"KRN",101,2981,0)
IBCEM COB EDIT BILL^Edit Bill^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,2981,1,0)
^101.06^2^2^3000510^^^^
"KRN",101,2981,1,1,0)
This option allows the user to enter the information required to
"KRN",101,2981,1,2,0)
generate a third party bill and to edit existing billing information.
"KRN",101,2981,15)
I '$D(IOUON) D ENS^%ZISS
"KRN",101,2981,20)
D EBI^IBCECOB2
"KRN",101,2981,99)
59319,44393
"KRN",101,2983,-1)
0^7
"KRN",101,2983,0)
IBCEM COB EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,2983,1,0)
^^1^1^2990625^
"KRN",101,2983,1,1,0)
This action is allowed a user to exit out of COB menu.
"KRN",101,2983,20)
D EXIT^IBCECOB2
"KRN",101,2983,99)
59319,44393
"KRN",101,3012,-1)
0^34
"KRN",101,3012,0)
IBCE EOB VIEW^View an EOB^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3012,1,0)
^^1^1^2990713^
"KRN",101,3012,1,1,0)
This displays the EOB detail
"KRN",101,3012,20)
D VIEW^IBCEOB21
"KRN",101,3012,99)
59319,44394
"KRN",101,3139,-1)
0^26
"KRN",101,3139,0)
IBCEM CSA EOB LINK^View an EOB^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,3139,1,0)
^101.06^1^1^3020904^^^^
"KRN",101,3139,1,1,0)
This menu includes all the options in View EOB menu.
"KRN",101,3139,4)
26^4
"KRN",101,3139,10,0)
^101.01PA^9^9
"KRN",101,3139,10,1,0)
3140^^1^^^General Info
"KRN",101,3139,10,1,"^")
IBCEM CSA EOB GEN
"KRN",101,3139,10,2,0)
3141^^5^^^Payer Info
"KRN",101,3139,10,2,"^")
IBCEM CSA EOB PAY
"KRN",101,3139,10,3,0)
3142^^10^^^Claim Level Pay
"KRN",101,3139,10,3,"^")
IBCEM CSA EOB CLAIM
"KRN",101,3139,10,4,0)
3143^^15^^^Claim Level Adj
"KRN",101,3139,10,4,"^")
IBCEM CSA EOB CLAIM ADJ
"KRN",101,3139,10,5,0)
3144^^20^^^Medicare Info
"KRN",101,3139,10,5,"^")
IBCEM CSA EOB MEDICARE
"KRN",101,3139,10,7,0)
3146^^30^^^Line Level Adj
"KRN",101,3139,10,7,"^")
IBCEM CSA EOB LINE ADJ
"KRN",101,3139,10,8,0)
3147^^35^^^Review Info
"KRN",101,3139,10,8,"^")
IBCEM CSA EOB REVIEW
"KRN",101,3139,10,9,0)
1734^^100^^^Exit
"KRN",101,3139,10,9,"^")
IBCE EXIT
"KRN",101,3139,15)
I $S($G(IBPRVSCR)="":$G(IBFASTXT),1:IBPRVSCR'="IBJTED"&($G(IBFASTXT)>2)) S VALMBCK="Q"
"KRN",101,3139,20)
K IBFASTXT
"KRN",101,3139,26)
D:$D(IBPRVSCR) BM^IBJU1(21,17) D SHOW^VALM
"KRN",101,3139,28)
Select Action: 
"KRN",101,3139,99)
59319,44394
"KRN",101,3140,-1)
0^27
"KRN",101,3140,0)
IBCEM CSA EOB GEN^General Info^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3140,1,0)
^101.06^1^1^3001027^^^^
"KRN",101,3140,1,1,0)
This action allows a user to display EOB general information.
"KRN",101,3140,20)
N IBACT S IBACT=1 D ACT^IBCECSA6
"KRN",101,3140,99)
59319,44394
"KRN",101,3141,-1)
0^28
"KRN",101,3141,0)
IBCEM CSA EOB PAY^EOB PAYER INFORMATION^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3141,1,0)
^^1^1^2991117^
"KRN",101,3141,1,1,0)
This action allows a user to view EOB payer information.
"KRN",101,3141,20)
N IBACT S IBACT=2 D ACT^IBCECSA6
"KRN",101,3141,99)
59319,44394
"KRN",101,3142,-1)
0^29
"KRN",101,3142,0)
IBCEM CSA EOB CLAIM^EOB CLAIM STATUS LEVEL^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3142,1,0)
^^1^1^2991215^^^
"KRN",101,3142,1,1,0)
This action allows a user to view EOB claim status level information.
"KRN",101,3142,20)
N IBACT S IBACT=3 D ACT^IBCECSA6
"KRN",101,3142,99)
59319,44394
"KRN",101,3143,-1)
0^30
"KRN",101,3143,0)
IBCEM CSA EOB CLAIM ADJ^EOB CLAIM LEVEL ADJUSTMENTS^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3143,1,0)
^^1^1^2991117^
"KRN",101,3143,1,1,0)
This action allows a user to view EOB claim level adjustments information.
"KRN",101,3143,20)
N IBACT S IBACT=4 D ACT^IBCECSA6
"KRN",101,3143,99)
59319,44394
"KRN",101,3144,-1)
0^31
"KRN",101,3144,0)
IBCEM CSA EOB MEDICARE^MEDICARE MRA INFO^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3144,1,0)
^101.06^1^1^3020904^^^^
"KRN",101,3144,1,1,0)
This action allows a user to view MRA medicare information.
"KRN",101,3144,20)
N IBACT S IBACT=5 D ACT^IBCECSA6
"KRN",101,3144,99)
59319,44394
"KRN",101,3146,-1)
0^32
"KRN",101,3146,0)
IBCEM CSA EOB LINE ADJ^EOB LINE LEVEL ADJUSTMENTS^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3146,1,0)
^101.06^1^1^3001026^^^^
"KRN",101,3146,1,1,0)
This action allows a user to view EOB line level adjustments information.
"KRN",101,3146,20)
N IBACT S IBACT=7 D ACT^IBCECSA6
"KRN",101,3146,99)
59319,44394
"KRN",101,3147,-1)
0^33
"KRN",101,3147,0)
IBCEM CSA EOB REVIEW^EOB REVIEW DATA^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3147,1,0)
^^1^1^2991117^
"KRN",101,3147,1,1,0)
This action allows a user to view EOB review data.
"KRN",101,3147,20)
N IBACT S IBACT=8 D ACT^IBCECSA6
"KRN",101,3147,99)
59319,44394
"KRN",101,3736,-1)
0^35
"KRN",101,3736,0)
IBCEM COB MRA PRINT^Print MRA^^A^^^^^^^^
"KRN",101,3736,20)
D PMRA^IBCECOB2 S VALMBCK="R"
"KRN",101,3736,99)
59319,44394
"KRN",101,3797,-1)
0^37
"KRN",101,3797,0)
IBCEM COB TPJI^Third Party Joint Inq.^^A^^^^^^^^
"KRN",101,3797,1,0)
^^1^1^3030812^
"KRN",101,3797,1,1,0)
This action is used to display the Third Party Joint Inquiry display for the claim.
"KRN",101,3797,20)
D TPJI^IBCECOB2
"KRN",101,3797,99)
59393,49935
"KRN",409.61,507,-1)
0^10
"KRN",409.61,507,0)
IBCEM CSA MSG^1^^200^6^18^1^1^Claims Status^IBCEM CSA MSG MENU^Claims Status Awaiting^1^^1
"KRN",409.61,507,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,507,"ARRAY")
 ^TMP("IBCECSC",$J)
"KRN",409.61,507,"COL",0)
^409.621^14^5
"KRN",409.61,507,"COL",1,0)
BILL^2^14^Bill #
"KRN",409.61,507,"COL",6,0)
ABILL^70^10^Billed Amt
"KRN",409.61,507,"COL",12,0)
PNAME^15^18^Payer Name
"KRN",409.61,507,"COL",13,0)
PANAME^35^25^Patient Name/Last 4
"KRN",409.61,507,"COL",14,0)
SERVICE^61^8^Svc Date
"KRN",409.61,507,"COL","B","ABILL",6)

"KRN",409.61,507,"COL","B","BILL",1)

"KRN",409.61,507,"COL","B","PANAME",13)

"KRN",409.61,507,"COL","B","PNAME",12)

"KRN",409.61,507,"COL","B","SERVICE",14)

"KRN",409.61,507,"FNL")
D EXIT^IBCECSA2
"KRN",409.61,507,"HDR")
D HDR^IBCECSA2
"KRN",409.61,507,"HLP")
D HELP^IBCECSA2
"KRN",409.61,507,"INIT")
D INIT^IBCECSA2
"KRN",409.61,526,-1)
0^9
"KRN",409.61,526,0)
IBCEM VIEW EOB^1^^80^7^19^1^1^EOB/MRA^IBCEM CSA EOB LINK^View an EOB^1^^1
"KRN",409.61,526,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,526,"ARRAY")
 ^TMP("IBCECSD",$J)
"KRN",409.61,526,"FNL")
D EXIT^IBCECSA5
"KRN",409.61,526,"HDR")

"KRN",409.61,526,"HLP")
D HELP^IBCECSA5
"KRN",409.61,526,"INIT")
D INIT^IBCECSA5
"KRN",409.61,654,-1)
0^3
"KRN",409.61,654,0)
IBCEM MRA MANAGEMENT^1^^80^4^19^1^1^MRA/EOB^IBCEM COB MANAGEMENT^MRA Management WorkList^1^^1
"KRN",409.61,654,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,654,"ARRAY")
 ^TMP("IBCECOB",$J)
"KRN",409.61,654,"COL",0)
^409.621^14^7
"KRN",409.61,654,"COL",1,0)
BILL^5^12^Bill #^^
"KRN",409.61,654,"COL",2,0)
SERVICE^18^8^Svc Date^^
"KRN",409.61,654,"COL",9,0)
NUMBER^1^4^^^
"KRN",409.61,654,"COL",10,0)
PATNM^27^23^Patient Name        SSN
"KRN",409.61,654,"COL",12,0)
BTYPE^72^9^Care/Form
"KRN",409.61,654,"COL",13,0)
PTRESP^51^9^  Pt Resp
"KRN",409.61,654,"COL",14,0)
IBAMT^61^9^ Bill Amt
"KRN",409.61,654,"COL","B","BILL",1)

"KRN",409.61,654,"COL","B","BTYPE",12)

"KRN",409.61,654,"COL","B","IBAMT",14)

"KRN",409.61,654,"COL","B","NUMBER",9)

"KRN",409.61,654,"COL","B","PATNM",10)

"KRN",409.61,654,"COL","B","PTRESP",13)

"KRN",409.61,654,"COL","B","SERVICE",2)

"KRN",409.61,654,"EXP")
D EXP^IBCECOB
"KRN",409.61,654,"FNL")
D EXIT^IBCECOB
"KRN",409.61,654,"HDR")
D HDR^IBCECOB
"KRN",409.61,654,"HLP")
D HELP^IBCECOB
"KRN",409.61,654,"INIT")
D INIT^IBCECOB
"KRN",409.61,657,-1)
0^2
"KRN",409.61,657,0)
IBCEM MRA DETAIL^1^^80^4^18^1^1^MRA/EOB^^Summary MRA Info^1^^1
"KRN",409.61,657,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,657,"ARRAY")
 ^TMP("IBCECOB-X",$J)
"KRN",409.61,657,"COL",0)
^409.621^8^7
"KRN",409.61,657,"COL",1,0)
BILL^5^12^Bill #
"KRN",409.61,657,"COL",2,0)
SERVICE^18^8^Svc Date
"KRN",409.61,657,"COL",3,0)
NUMBER^1^3
"KRN",409.61,657,"COL",4,0)
PATNM^27^23^Patient Name        SSN
"KRN",409.61,657,"COL",5,0)
BTYPE^72^9^Care/Form
"KRN",409.61,657,"COL",7,0)
PTRESP^51^9^  Pt Resp
"KRN",409.61,657,"COL",8,0)
IBAMT^61^9^ Bill Amt
"KRN",409.61,657,"COL","B","BILL",1)

"KRN",409.61,657,"COL","B","BTYPE",5)

"KRN",409.61,657,"COL","B","IBAMT",8)

"KRN",409.61,657,"COL","B","NUMBER",3)

"KRN",409.61,657,"COL","B","PATNM",4)

"KRN",409.61,657,"COL","B","PTRESP",7)

"KRN",409.61,657,"COL","B","SERVICE",2)

"KRN",409.61,657,"FNL")
D EXIT^IBCECOB5
"KRN",409.61,657,"HDR")
D HDR^IBCECOB
"KRN",409.61,657,"HLP")
D HELP^IBCECOB
"KRN",409.61,657,"INIT")
D INIT^IBCECOB5
"KRN",409.61,707,-1)
1^1
"KRN",409.61,707,0)
IBCEM EOB MANAGEMENT
"KRN",409.61,708,-1)
1^6
"KRN",409.61,708,0)
IBCEM EOB DETAIL
"KRN",409.61,709,-1)
1^7
"KRN",409.61,709,0)
IBCEM EOB REVIEW
"KRN",409.61,710,-1)
1^8
"KRN",409.61,710,0)
IBCEM EOB VIEW EOB
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)
 
"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
155^3041008^101001
"PKG",200,22,1,"PAH",1,1,0)
^^5^5^3041008
"PKG",200,22,1,"PAH",1,1,1,0)
This patch contains the functionality to begin electronically requesting
"PKG",200,22,1,"PAH",1,1,2,0)
and receiving MEDICARE REMITTANCE ADVICE (MRA) from MEDICARE for those
"PKG",200,22,1,"PAH",1,1,3,0)
patients who have MEDICARE coverage as well as other coverage that is
"PKG",200,22,1,"PAH",1,1,4,0)
secondary to MEDICARE. See the patch module and release notes that
"PKG",200,22,1,"PAH",1,1,5,0)
accompany this patch for further documentation.
"PRE")
IBY155NV
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
93
"RTN","IBCB1")
0^27^B77996552
"RTN","IBCB1",1,0)
IBCB1 ;ALB/AAS - Process bill after enter/edited ;2-NOV-89
"RTN","IBCB1",2,0)
 ;;2.0;INTEGRATED BILLING;**70,106,51,137,161,182,155**;21-MAR-94
"RTN","IBCB1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCB1",4,0)
 ;
"RTN","IBCB1",5,0)
 ;MAP TO DGCRB1
"RTN","IBCB1",6,0)
 ;
"RTN","IBCB1",7,0)
 ;IBQUIT = Flag to stop processing
"RTN","IBCB1",8,0)
 ;IBVIEW = Flag for Bill has been viewed
"RTN","IBCB1",9,0)
 ;IBDISP = Flag for Bill entering display been viewed.
"RTN","IBCB1",10,0)
 ;
"RTN","IBCB1",11,0)
 K ^UTILITY($J) I $D(IBAC),IBAC>1 G @IBAC
"RTN","IBCB1",12,0)
1 ;complete bill
"RTN","IBCB1",13,0)
 D END,EDITS^IBCB2 G:IBQUIT END
"RTN","IBCB1",14,0)
 ;
"RTN","IBCB1",15,0)
 I '$$IICM^IBCB2(IBIFN) G END ; Ingenix ClaimsManager
"RTN","IBCB1",16,0)
 I '$$IIQMED^IBCB2(IBIFN) G END ; DSS QuadraMed Claims Scrubber
"RTN","IBCB1",17,0)
 ;
"RTN","IBCB1",18,0)
3 ;authorize bill/request MRA
"RTN","IBCB1",19,0)
 I '$D(^XUSEC("IB AUTHORIZE",DUZ))!('$D(IBIFN)) W !!,"You do not hold the Authorize Key.",! G END
"RTN","IBCB1",20,0)
 I '$P($G(^IBE(350.9,1,1)),"^",23),DUZ=$P(^DGCR(399,IBIFN,"S"),"^",2) W !!,"Entering user can not authorize.",! G END
"RTN","IBCB1",21,0)
 I $P(^DGCR(399,IBIFN,"S"),"^",9) W !,"Already Approved, Can't change" G END
"RTN","IBCB1",22,0)
 D:'$G(IBAC)!($G(IBAC)>1) EDITS^IBCB2 G:IBQUIT END
"RTN","IBCB1",23,0)
 ;
"RTN","IBCB1",24,0)
 I $G(IBAC)'=1,'$$IICM^IBCB2(IBIFN) G END ; Ingenix ClaimsManager
"RTN","IBCB1",25,0)
 I $G(IBAC)'=1,'$$IIQMED^IBCB2(IBIFN) G END ; DSS QuadraMed Claims Scrubber
"RTN","IBCB1",26,0)
 ;
"RTN","IBCB1",27,0)
AUTH S IBMRA=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCB1",28,0)
 S IBEND=0
"RTN","IBCB1",29,0)
 I IBMRA["R" D  G:IBEND END ;MRA normally required, but MEDIGAP ins co
"RTN","IBCB1",30,0)
 . ;                         doesn't want/need it or MRA parameter off
"RTN","IBCB1",31,0)
 . N DIR,Y,X,IBINS,NXTINS
"RTN","IBCB1",32,0)
 . S NXTINS=+$$POLICY^IBCEF(IBIFN,1,$$COBN^IBCEF(IBIFN)+1)  ; next ins
"RTN","IBCB1",33,0)
 . S IBINS=$P($G(^DIC(36,NXTINS,0)),U)   ; name of next insurance
"RTN","IBCB1",34,0)
 . Q:$$MCRWNR^IBEFUNC(NXTINS)            ; quit if its Medicare
"RTN","IBCB1",35,0)
 . ;
"RTN","IBCB1",36,0)
 . S DIR(0)="YO",DIR("B")="YES",DIR("A",1)=" "
"RTN","IBCB1",37,0)
 . S DIR("A",2)="This bill has prior insurance of MEDICARE, but"
"RTN","IBCB1",38,0)
 . I +$P($G(^IBE(350.9,1,8)),U,10)'<2 D
"RTN","IBCB1",39,0)
 .. S DIR("A",3)="Ins Co, "_IBINS_", does not want/need an MRA."
"RTN","IBCB1",40,0)
 . E  D
"RTN","IBCB1",41,0)
 .. S DIR("A",3)="the site parameter for MRA Requests is turned off."
"RTN","IBCB1",42,0)
 . S DIR("A",4)=" "
"RTN","IBCB1",43,0)
 . S DIR("A")="Do you want this bill to go directly to "_IBINS
"RTN","IBCB1",44,0)
 . S DIR("?",1)="If you answer NO, the bill will not be authorized."
"RTN","IBCB1",45,0)
 . S DIR("?")="If you answer YES, this bill will automatically become a "_$P("secondary^tertiary",U,$$COBN^IBCEF(IBIFN))_" bill."
"RTN","IBCB1",46,0)
 . D ^DIR K DIR
"RTN","IBCB1",47,0)
 . I 'Y S IBEND=1 W !,"Can't continue",! Q
"RTN","IBCB1",48,0)
 . D COBCHG^IBCCC2(IBIFN,+$$CURR^IBCEF2(IBIFN))
"RTN","IBCB1",49,0)
 . Q
"RTN","IBCB1",50,0)
 ;
"RTN","IBCB1",51,0)
 W !!,"THIS BILL WILL "_$P("NOT ^",U,$$TXMT^IBCEF4(IBIFN)+1)_"BE TRANSMITTED ELECTRONICALLY"
"RTN","IBCB1",52,0)
 W !!,"WANT TO ",$S('IBMRA:"AUTHORIZE BILL",1:"REQUEST AN MRA")," AT THIS TIME" S %=2 D YN^DICN G:%=-1!(%=2) END
"RTN","IBCB1",53,0)
 I '% W !?4,"YES - If finished entering bill information and to allow bill to be printed or transmitted",!?4,"No - To take no action" G AUTH
"RTN","IBCB1",54,0)
 S (DIC,DIE)=399,IBYY=$S('IBMRA:"@90",1:"@901"),DA=IBIFN,DR="[IB STATUS]" D ^DIE K DIC,DIE,IBYY D:$D(IBX3) DISAP^IBCBULL
"RTN","IBCB1",55,0)
 I $S('IBMRA:'$P(^DGCR(399,IBIFN,"S"),"^",9),1:'$P($G(^DGCR(399,IBIFN,"TX")),U,6)) G END
"RTN","IBCB1",56,0)
 ;
"RTN","IBCB1",57,0)
 ; Update the review status for all EOB's on file
"RTN","IBCB1",58,0)
 D STAT^IBCEMU2(IBIFN,3)     ; Accepted - Complete EOB
"RTN","IBCB1",59,0)
 ;
"RTN","IBCB1",60,0)
 D AUTOCK^IBCEU2(IBIFN) ; Checks for need to add any codes to bill based on information already on bill, specifically for EDI purposes
"RTN","IBCB1",61,0)
 S IBTXSTAT=$$TXMT^IBCEF4(IBIFN,,1)  ;Determine transmit, whether live/test
"RTN","IBCB1",62,0)
 I IBTXSTAT D  I IBMRA D CTCOPY^IBCCCB(IBIFN,1) G END
"RTN","IBCB1",63,0)
 .W !,"  Adding "
"RTN","IBCB1",64,0)
 .W:+IBTXSTAT=2 "test " W "bill to BILL TRANSMISSION File"_$S('IBMRA:"",1:" for MRA submission")_".",!
"RTN","IBCB1",65,0)
 .W:+IBTXSTAT=1&IBMRA "  Bill is no longer editable unless returned in error from Medicare."
"RTN","IBCB1",66,0)
 .S Y=$$ADDTBILL(IBIFN,+IBTXSTAT)
"RTN","IBCB1",67,0)
 .W ! W:'$P(Y,U,3) *7 W $S($P(Y,U,3):"  Bill will be submitted electronically",1:"  Error loading into transmit file - bill can not be transmitted.")
"RTN","IBCB1",68,0)
 .;
"RTN","IBCB1",69,0)
 ;
"RTN","IBCB1",70,0)
 W !,"Passing completed Bill to Accounts Receivable.  Bill is no longer editable."
"RTN","IBCB1",71,0)
 D ARPASS(IBIFN,1)
"RTN","IBCB1",72,0)
 G:'$G(PRCASV("OKAY")) END
"RTN","IBCB1",73,0)
 W !,"Completed Bill Successfully sent to Accounts Receivable." D FIND^IBOHCK(DFN,IBIFN)
"RTN","IBCB1",74,0)
 ;
"RTN","IBCB1",75,0)
 ; Check to see if any unreviewed status messages or EOBs on file and
"RTN","IBCB1",76,0)
 ; what to do about them
"RTN","IBCB1",77,0)
 N IBTXBARR
"RTN","IBCB1",78,0)
 S IBRESUB=$$RESUB^IBCECSA4($S($G(IBCNCOPY):$P($G(^DGCR(399,IBIFN,0)),U,15),1:IBIFN),+IBTXSTAT,"E",.IBTXBARR)
"RTN","IBCB1",79,0)
 I IBRESUB=2 D         ; update review statuses to be 'review complete'
"RTN","IBCB1",80,0)
 . N IBDA S IBDA=0
"RTN","IBCB1",81,0)
 . F  S IBDA=$O(IBTXBARR(IBDA)) Q:'IBDA  D UPDEDI^IBCEM(IBDA,$S($G(IBCNCOPY):"R",1:"E"))
"RTN","IBCB1",82,0)
 . Q
"RTN","IBCB1",83,0)
 ;
"RTN","IBCB1",84,0)
 K IBTXPRT
"RTN","IBCB1",85,0)
 ;
"RTN","IBCB1",86,0)
4 ;generate/print bill
"RTN","IBCB1",87,0)
 G:'$D(IBIFN) END
"RTN","IBCB1",88,0)
 S:'$D(IBMRA) IBMRA=+$$NEEDMRA^IBEFUNC(IBIFN)
"RTN","IBCB1",89,0)
 I 'IBMRA,'$P(^DGCR(399,IBIFN,"S"),"^",9) W !!,*7,"Not Authorized, Can Not Print!" G END
"RTN","IBCB1",90,0)
 I IBMRA,'$P(^DGCR(399,IBIFN,"TX"),"^",6) W !!,*7,"Not Ready For MRA Submission, Can Not Print!" G END
"RTN","IBCB1",91,0)
 S IBTXSTAT=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCB1",92,0)
 I IBMRA,$$NEEDMRA^IBEFUNC(IBIFN)'["R" W !!,*7,"MRA Submission not yet confirmed by Austin, Can Not Print!" Q:$S('IBTXSTAT:1,1:"XP"'[$P($G(^IBA(364,+$$LAST364^IBCEF4(IBIFN),0)),U,3))
"RTN","IBCB1",93,0)
 I +IBTXSTAT,$D(^IBA(364,"ABDT",IBIFN)) S IBTXOK="" D  I 'IBTXOK S %=2 G GENTX
"RTN","IBCB1",94,0)
 . N IBX,IBTST
"RTN","IBCB1",95,0)
 . S IBX=+$$LAST364^IBCEF4(IBIFN),IBTST=""
"RTN","IBCB1",96,0)
 . I $$TEST^IBCEF4(IBIFN) S (IBTXOK,IBTST)=1
"RTN","IBCB1",97,0)
 . I "XP"[$P($G(^IBA(364,IBX,0)),U,3) D:'IBTST  Q
"RTN","IBCB1",98,0)
 .. W !!,*7,"This Bill Can Not Be Printed Until Transmit Confirmed" W:IBMRA " (to request an MRA)" D:'$D(IBVIEW) VIEW^IBCB2
"RTN","IBCB1",99,0)
 . W !!,"This Bill Has Already Been Transmitted" W:IBMRA " (to request an MRA)"
"RTN","IBCB1",100,0)
 . S DIR("B")="Y",DIR("A")="WANT TO PRINT IT ANYWAY",DIR(0)="Y" D ^DIR K DIR Q:$D(DTOUT)!$D(DUOUT)!'Y  S IBTXOK=1
"RTN","IBCB1",101,0)
 D DISP^IBCB2
"RTN","IBCB1",102,0)
 S:'$D(IBQUIT) IBQUIT=0
"RTN","IBCB1",103,0)
 D:'$D(IBVIEW) VIEW^IBCB2 G:IBQUIT END
"RTN","IBCB1",104,0)
 S IBPNT=$P(^DGCR(399,IBIFN,"S"),"^",12)
"RTN","IBCB1",105,0)
GEN I $$TEST^IBCEF4(IBIFN) W !!,"THIS BILL IS BEING USED AS A TRANSMISSION TEST BILL"
"RTN","IBCB1",106,0)
 W !!,"WANT TO ",$S(IBPNT]"":"RE-",1:""),"PRINT BILL AT THIS TIME" S %=2 D YN^DICN I %=-1 D:+$G(IBAC)=1 END,CTCOPY^IBCCCB(IBIFN) G END
"RTN","IBCB1",107,0)
 I '% W !?4,"YES - to print the bill now",!?4,"NO - To take no action" G GEN
"RTN","IBCB1",108,0)
GENTX I %'=1 D:+$G(IBAC)=1 END,CTCOPY^IBCCCB(IBIFN) G END
"RTN","IBCB1",109,0)
 ;
"RTN","IBCB1",110,0)
 ; Bill has never been printed.  First time print.
"RTN","IBCB1",111,0)
 I 'IBPNT D  G END
"RTN","IBCB1",112,0)
 . I $D(IBTXPRT) D TXPRTS
"RTN","IBCB1",113,0)
 . D EN1^IBCF
"RTN","IBCB1",114,0)
 . I $D(IBTXPRT) D TXPRT
"RTN","IBCB1",115,0)
 . D MRA^IBCEMU1(IBIFN)       ; Printing the MRA
"RTN","IBCB1",116,0)
 . I +$G(IBAC)=1 D END,CTCOPY^IBCCCB(IBIFN)
"RTN","IBCB1",117,0)
 . Q
"RTN","IBCB1",118,0)
 ;
"RTN","IBCB1",119,0)
 ; Below section is for re-prints
"RTN","IBCB1",120,0)
RPNT G:$$NEEDMRA^IBEFUNC(IBIFN) END
"RTN","IBCB1",121,0)
 R !!,"(2)nd Notice, (3)rd Notice, (C)opy or (O)riginal: C// ",IBPNT:DTIME S:IBPNT="" IBPNT="C" G:IBPNT["^" END
"RTN","IBCB1",122,0)
 S IBPNT=$E(IBPNT,1) I "23oOcC"'[IBPNT W !?5,"Enter 'O' to reprint the original bill or",!?5,"Enter 'C' to reprint the bill as a duplicate copy or",!?5,"Enter '2' or '3' to print 2nd or 3rd follow-up notices." S IBPNT=1 G RPNT
"RTN","IBCB1",123,0)
 W "  (",$S("cC"[IBPNT:"COPY","oO"[IBPNT:"ORIGINAL",IBPNT=2:"2nd NOTICE",IBPNT=3:"3rd NOTICE",1:""),")"
"RTN","IBCB1",124,0)
 I $D(IBTXPRT) D
"RTN","IBCB1",125,0)
 . D TXPRTS
"RTN","IBCB1",126,0)
 . I "oOcC"[IBPNT S IBRESUB=$$RESUB^IBCECSA4(IBIFN,1,"P")
"RTN","IBCB1",127,0)
 S IBPNT=$S("oO"[IBPNT:1,"cC"[IBPNT:0,1:IBPNT)
"RTN","IBCB1",128,0)
 D EN1X^IBCF D:$D(IBTXPRT) TXPRT
"RTN","IBCB1",129,0)
 D MRA^IBCEMU1(IBIFN)       ; Printing the MRA
"RTN","IBCB1",130,0)
 ;
"RTN","IBCB1",131,0)
 ;
"RTN","IBCB1",132,0)
END K IBER,IBEND D END^IBCBB1 K IBQUIT,IBVIEW,IBDISP,IBST,IB,PRCAERCD,PRCAERR,PRCASVC,PRCAT,DGRA2,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,PRCAORA,IBX3,DGBILLBS,DGII,DGVISCNT,DGFIL,DGTE,IBTXOK,IBTXSTAT,IBMRA,IBNOFIX
"RTN","IBCB1",133,0)
 K %DT,DIC,DIE,I,J,X,Y,Y1,Y2,IBER,IBDFN,IBDSDT,IBJ,IBNDI1,IBZZ,VA,IBMA,IBXDT,DI,PRCAPAYR,DGBS,DGCNT,DGDA,DGPAG,DGREVC,DGRV,DGTEXT,DGTOTPAG,IBOPV,DGLCNT,DGTEXT1,DGRSPAC,DGSM,IBPNT,DGINPT,DGLL,IBCPTN,IBFL
"RTN","IBCB1",134,0)
 K IBRESUB,IBOPV1,IBOPV2,IBCHG,DGBIL1,DGU,DDH,IBA1,IBINS,IBPROC,PRCARI K:'$D(PRCASV("NOTICE")) PRCASV
"RTN","IBCB1",135,0)
 K ^TMP("IBXDATA",$J),^TMP("IBXEDIT",$J)
"RTN","IBCB1",136,0)
 K IBCISNT,IBCISTAT,IBCIERR   ; remove ClaimsManager variables
"RTN","IBCB1",137,0)
 Q
"RTN","IBCB1",138,0)
 ;
"RTN","IBCB1",139,0)
TX1(IBX,RESUB) ; Transmit a single bill from file 364 entry # IBX
"RTN","IBCB1",140,0)
 ; RESUB = flag (1 = resubmitting a bill, 0 = submitting bill 1st time)
"RTN","IBCB1",141,0)
 ; Returns 1 if successfully extracted to mailman queue for transmission,
"RTN","IBCB1",142,0)
 ;         0 if extract not successful
"RTN","IBCB1",143,0)
 N IBTXOK,IBVVSAVE
"RTN","IBCB1",144,0)
 K ^TMP("IBRESUBMIT",$J),^TMP("IBONE",$J)
"RTN","IBCB1",145,0)
 S IBVVSAVE("IBX")=IBX,^TMP("IBONE",$J)=+$G(RESUB),^($J,IBX)=""
"RTN","IBCB1",146,0)
 D ONE^IBCE837
"RTN","IBCB1",147,0)
 S IBX=IBVVSAVE("IBX")
"RTN","IBCB1",148,0)
 I $P($G(^IBA(364,IBX,0)),U,3)="P" S IBTXOK=1
"RTN","IBCB1",149,0)
 K ^TMP("IBONE",$J)
"RTN","IBCB1",150,0)
 Q $G(IBTXOK)
"RTN","IBCB1",151,0)
 ;
"RTN","IBCB1",152,0)
ARONLY(IBIFN) ; Pass bill to A/R, but that's all
"RTN","IBCB1",153,0)
 D ARPASS(IBIFN,0)
"RTN","IBCB1",154,0)
 Q
"RTN","IBCB1",155,0)
 ;
"RTN","IBCB1",156,0)
ARPASS(IBIFN,UPDOK) ;Pass bill to A/R as NEW BILL
"RTN","IBCB1",157,0)
 ;IBIFN = bill entry #
"RTN","IBCB1",158,0)
 ;UPDOK = flag 1: if error going to A/R, allow interactive edit
"RTN","IBCB1",159,0)
 ;             0: send bulletin to IB EDI for error going to A/R
"RTN","IBCB1",160,0)
 Q:+$$STA^PRCAFN(+IBIFN)'=201  ;Must not have been sent previously
"RTN","IBCB1",161,0)
 D GVAR^IBCBB
"RTN","IBCB1",162,0)
 ;Can't be an ins co that won't reimburse
"RTN","IBCB1",163,0)
 Q:$S($P($G(^DGCR(399,IBIFN,0)),U,11)="i":'IBNDMP,1:0)
"RTN","IBCB1",164,0)
 D ARRAY^IBCBB1,^PRCASVC6
"RTN","IBCB1",165,0)
 D REL^PRCASVC:$G(PRCASV("OKAY"))
"RTN","IBCB1",166,0)
 I '$G(PRCASV("OKAY")) D
"RTN","IBCB1",167,0)
 . N IBQUIT,IBQUIT1
"RTN","IBCB1",168,0)
 . S IBQUIT=0
"RTN","IBCB1",169,0)
 . I $G(UPDOK) D  Q
"RTN","IBCB1",170,0)
 .. F  D  Q:IBQUIT
"RTN","IBCB1",171,0)
 ... D DSPARERR^IBCB2("")
"RTN","IBCB1",172,0)
 ... Q:IBQUIT
"RTN","IBCB1",173,0)
 ... I $$ASKEDIT^IBCB2($G(IBAC)) D VIEW1^IBCB2 Q
"RTN","IBCB1",174,0)
 ... S IBQUIT=1
"RTN","IBCB1",175,0)
 . N XMSUB,XMY,XMTEXT,XMDUZ,IBT
"RTN","IBCB1",176,0)
 . S XMSUB="ERROR PASSING BILL TO A/R ON CONFIRMATION",XMTEXT="IBT(",XMY="G.IB EDI",XMDUZ=.5
"RTN","IBCB1",177,0)
 . S IBT(1)="A problem has been detected while trying to pass bill "_$P($G(^DGCR(399,IBIFN,0)),U)_" to"
"RTN","IBCB1",178,0)
 . S IBT(2)="Accounts Receivable when updating the bill's electronic confirmation."
"RTN","IBCB1",179,0)
 . S IBT(3)="Please use the option PASS BILL TO A/R to complete this process."
"RTN","IBCB1",180,0)
 . D ^XMD
"RTN","IBCB1",181,0)
 Q
"RTN","IBCB1",182,0)
 ;
"RTN","IBCB1",183,0)
ADDTBILL(IBIFN,TXST) ; Add new transmit bill rec to file 364 for bill IBIFN
"RTN","IBCB1",184,0)
 ; TXST = test flag 1=live, 2=test
"RTN","IBCB1",185,0)
 N COB,DD,DO,DIC,DLAYGO,X
"RTN","IBCB1",186,0)
 S TXST=($G(TXST)/2\1),COB=$$COB^IBCEF(IBIFN)
"RTN","IBCB1",187,0)
 S DIC(0)="L",DIC="^IBA(364,",DLAYGO=364,X=IBIFN,DIC("DR")=".03///X;.04///NOW;.07////"_TXST_";.08////"_COB D FILE^DICN
"RTN","IBCB1",188,0)
 Q Y
"RTN","IBCB1",189,0)
 ;
"RTN","IBCB1",190,0)
TXPRTS ; Save off last print date to see if bill was reprinted without queueing
"RTN","IBCB1",191,0)
 I '$$NEEDMRA^IBEFUNC(IBIFN) S IBTXPRT("PRT")=$P($G(^DGCR(399,IBIFN,"S")),U,14)
"RTN","IBCB1",192,0)
 Q
"RTN","IBCB1",193,0)
 ;
"RTN","IBCB1",194,0)
TXPRT ; Set variable if print was tasked or bill was printed (last print date changed)
"RTN","IBCB1",195,0)
 I '$$NEEDMRA^IBEFUNC(IBIFN),$S($G(ZTSK):1,1:IBTXPRT("PRT")'=$P($G(^DGCR(399,IBIFN,"S")),U,14)) S IBTXPRT=1
"RTN","IBCB1",196,0)
 Q
"RTN","IBCB1",197,0)
 ;
"RTN","IBCB2")
0^98^B52497710
"RTN","IBCB2",1,0)
IBCB2 ;ALB/AAS - Process bill after enter/edited ;13-DEC-89
"RTN","IBCB2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,161,182,155**;21-MAR-94
"RTN","IBCB2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCB2",4,0)
 ;
"RTN","IBCB2",5,0)
 ;MAP TO DGCRB2
"RTN","IBCB2",6,0)
 ;
"RTN","IBCB2",7,0)
 ;IBQUIT = Flag to stop processing
"RTN","IBCB2",8,0)
 ;IBVIEW = Flag showing Bill has been viewed
"RTN","IBCB2",9,0)
 ;IBDISP = Flag showing Bill entering display has been viewed.
"RTN","IBCB2",10,0)
 ;IBNOFIX = Flag to indicate do not ask to edit or review bill screens
"RTN","IBCB2",11,0)
 ;IBREEDIT = Flag to indicate Bill has been re-edited
"RTN","IBCB2",12,0)
 ;
"RTN","IBCB2",13,0)
VIEW ;View screens; if status allows editing , allow editing
"RTN","IBCB2",14,0)
 N Y,DIR
"RTN","IBCB2",15,0)
 S IBPOPOUT=0
"RTN","IBCB2",16,0)
 S IBVIEW=1,IBV=$S($D(IBV):IBV,1:1)
"RTN","IBCB2",17,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A")="WANT TO "_$S('IBV:"EDIT",1:"REVIEW")_" SCREENS? ",DIR("?",1)="   YES - to "_$S('IBV:"EDIT",1:"REVIEW")_" the screens",DIR("?")="   NO - To take no action"
"RTN","IBCB2",18,0)
 D ^DIR K DIR
"RTN","IBCB2",19,0)
 S:$D(DTOUT) IBQUIT=1
"RTN","IBCB2",20,0)
 Q:Y'=1
"RTN","IBCB2",21,0)
 I $G(IBREEDIT)=1,'IBV S IBREEDIT=2   ; set flag indicating re-edit
"RTN","IBCB2",22,0)
VIEW1 S IBVIEW=1,IBEDIT=0
"RTN","IBCB2",23,0)
 D SCREENS
"RTN","IBCB2",24,0)
 S:$G(IBPOPOUT) IBQUIT=1
"RTN","IBCB2",25,0)
 Q
"RTN","IBCB2",26,0)
 ;
"RTN","IBCB2",27,0)
DISP S IB("S")=$S($D(^DGCR(399,IBIFN,"S")):^("S"),1:"")
"RTN","IBCB2",28,0)
 W ! D DISP^IBCNQ W !
"RTN","IBCB2",29,0)
 S IBDISP=1 Q
"RTN","IBCB2",30,0)
 Q
"RTN","IBCB2",31,0)
 ;
"RTN","IBCB2",32,0)
EDITS ; Perform edits on bill prior to authorization/transmission
"RTN","IBCB2",33,0)
 N IBREEDIT
"RTN","IBCB2",34,0)
ED1 ;
"RTN","IBCB2",35,0)
 S IBQUIT=0
"RTN","IBCB2",36,0)
 I '$D(IBER)!('$D(PRCASV)) D ALLED(.IBQUIT)
"RTN","IBCB2",37,0)
 ;
"RTN","IBCB2",38,0)
 ; If the user is wanting to quit, but there are some unresolved
"RTN","IBCB2",39,0)
 ; errors reported by ClaimsManager, then capture the user's Exit
"RTN","IBCB2",40,0)
 ; comments.
"RTN","IBCB2",41,0)
 ;
"RTN","IBCB2",42,0)
 I $$CM^IBCIUT1(IBIFN),IBQUIT,$P($G(^IBA(351.9,IBIFN,0)),U,2)=4 D COMMENT^IBCIUT7(IBIFN,1)
"RTN","IBCB2",43,0)
 ;
"RTN","IBCB2",44,0)
 Q:IBQUIT
"RTN","IBCB2",45,0)
 D:'$D(IBDISP) DISP
"RTN","IBCB2",46,0)
 ;
"RTN","IBCB2",47,0)
 ; If claim re-edit, then call the IB edit checks again
"RTN","IBCB2",48,0)
 I '$D(IBVIEW) S IBREEDIT=1 D VIEW I $G(IBREEDIT)=2 K IBER,IBDISP,IBVIEW G ED1
"RTN","IBCB2",49,0)
 Q
"RTN","IBCB2",50,0)
 ;
"RTN","IBCB2",51,0)
ALLED(IBQUIT) ; Billing edit/correction
"RTN","IBCB2",52,0)
 N IBQUIT1,IBDONE1,IBDONE,IBEDIT,IBCORR,IBER,IBPRT,IBXERR
"RTN","IBCB2",53,0)
 S (IBQUIT,IBDONE,IBCORR)=0,IBER=""
"RTN","IBCB2",54,0)
 ; IBDONE = 1 ==> exit, no errors 
"RTN","IBCB2",55,0)
 ; IBQUIT = 1 ==> exit, errors not corrected
"RTN","IBCB2",56,0)
 I $$FT^IBCEF(IBIFN)=2,'$G(IBNOFIX) D DISP24(IBIFN,.IBCORR,.IBQUIT)
"RTN","IBCB2",57,0)
 ;
"RTN","IBCB2",58,0)
 F  D  Q:IBQUIT!IBDONE  D VIEW1 I $$FT^IBCEF(IBIFN)=2,'$G(IBNOFIX),'IBQUIT S IBCORR=0 D DISP24(IBIFN,.IBCORR,.IBQUIT)
"RTN","IBCB2",59,0)
 . I $G(IBPOPOUT) S IBQUIT=1
"RTN","IBCB2",60,0)
 . Q:IBQUIT!IBCORR
"RTN","IBCB2",61,0)
 . I $G(IBNOFIX) D
"RTN","IBCB2",62,0)
 .. W !!,"... Checking claim validity"
"RTN","IBCB2",63,0)
 . E  D
"RTN","IBCB2",64,0)
 .. W !!,"... Executing national IB edits"
"RTN","IBCB2",65,0)
 . D EN^IBCBB,LOCERR
"RTN","IBCB2",66,0)
 . ;
"RTN","IBCB2",67,0)
 . I $G(IBER)'=""!$D(IBXERR) D  Q:'IBDONE
"RTN","IBCB2",68,0)
 .. D DSPLERR ; Displays warnings/errors
"RTN","IBCB2",69,0)
 .. K IBXERR
"RTN","IBCB2",70,0)
 .. Q:IBQUIT!(IBDONE)
"RTN","IBCB2",71,0)
 .. I $G(IBNOFIX) S IBDONE=1 Q
"RTN","IBCB2",72,0)
 .. I '$$ASKEDIT($G(IBAC)) W ! S IBQUIT=1 ; Don't want to re-edit
"RTN","IBCB2",73,0)
 .. ;
"RTN","IBCB2",74,0)
 . I $G(IBNOFIX) S IBDONE=1 Q
"RTN","IBCB2",75,0)
 . S IBEDIT=0
"RTN","IBCB2",76,0)
 . I $S($P($G(^DGCR(399,IBIFN,0)),U,13)>2:1,$D(PRCASV):'$D(PRCASV("OKAY")),1:0) D  S:'IBQUIT&'IBEDIT IBDONE=1 Q
"RTN","IBCB2",77,0)
 .. N IBQUIT1
"RTN","IBCB2",78,0)
 .. S IBQUIT1=0
"RTN","IBCB2",79,0)
 .. W !!!,"... Executing A/R edits"
"RTN","IBCB2",80,0)
 .. I $P($G(^DGCR(399,IBIFN,0)),U,13)>2 D GVAR^IBCBB,ARRAY^IBCBB1
"RTN","IBCB2",81,0)
 .. D ARCHK($G(IBNOFIX),0,.IBQUIT1,.IBQUIT,.IBEDIT,.PRCASV)
"RTN","IBCB2",82,0)
 . S IBDONE=1 ; No errors
"RTN","IBCB2",83,0)
 . S:$G(IBPRT("PRT"))'<0 IBQUIT=0
"RTN","IBCB2",84,0)
 Q
"RTN","IBCB2",85,0)
 ;
"RTN","IBCB2",86,0)
ARCHK(IBNOFIX,IBNOPRT,IBQUIT1,IBQUIT,IBEDIT,PRCASV) ; A/R Verification
"RTN","IBCB2",87,0)
 ; Returns IBEDIT, IBQUIT1, IBQUIT,PRCASV array if passed by reference
"RTN","IBCB2",88,0)
 ; IBNOFIX = 1 if no editing needed
"RTN","IBCB2",89,0)
 ; IBNOPRT = 1 if no printing needed
"RTN","IBCB2",90,0)
 F  D ^PRCASVC6 D  Q:IBQUIT1!IBEDIT  D GVAR^IBCBB,ARRAY^IBCBB1
"RTN","IBCB2",91,0)
 . I '$G(IBNOPRT) Q:$G(IBPRT("PRT"))<0
"RTN","IBCB2",92,0)
 . I PRCASV("OKAY") W:'$G(IBNOPRT) !!,"No A/R errors found" S IBQUIT1=1 Q
"RTN","IBCB2",93,0)
 . I 'PRCASV("OKAY") D  Q
"RTN","IBCB2",94,0)
 .. D DSPARERR($G(IBNOPRT)) ; Display A/R errors
"RTN","IBCB2",95,0)
 .. Q:IBQUIT
"RTN","IBCB2",96,0)
 .. I $G(IBNOFIX) S IBQUIT1=1 Q
"RTN","IBCB2",97,0)
 .. I '$$ASKEDIT($G(IBAC)) W !,"There is an unresolved A/R error - cannot authorize bill" D PAUSE^VALM1 S (IBQUIT,IBQUIT1)=1 Q
"RTN","IBCB2",98,0)
 .. S IBEDIT=1
"RTN","IBCB2",99,0)
 ;
"RTN","IBCB2",100,0)
 Q
"RTN","IBCB2",101,0)
 ;
"RTN","IBCB2",102,0)
DSPLERR ; Display national/local edits failed
"RTN","IBCB2",103,0)
 N Z
"RTN","IBCB2",104,0)
 D PRTH(.IBPRT)
"RTN","IBCB2",105,0)
 I IBPRT("PRT")<0 S IBQUIT=1 Q
"RTN","IBCB2",106,0)
 S Z=0 F  S Z=$O(^TMP($J,"BILL-WARN",Z)) Q:'Z  W !,^(Z) W:'$O(^(Z)) !
"RTN","IBCB2",107,0)
 S Y2=""
"RTN","IBCB2",108,0)
 I IBER'="WARN" F I=1:1 S X=$P(IBER,";",I) Q:X=""  W:I=1 !?5,"**Errors**:" I $D(^IBE(350.8,+$O(^IBE(350.8,"AC",X,0)),0)) S Y=^(0),Y1=$P(Y,"^",5),Y2=Y2_Y1 I Y1<5 W !?5,$E($P(Y,"^",2),1,80)
"RTN","IBCB2",109,0)
 ; IBXERR = local edits return error array
"RTN","IBCB2",110,0)
 ; If IBXERR returns = 1 then we have at least one error
"RTN","IBCB2",111,0)
 ;                   = "" or 0, then we have only local warnings
"RTN","IBCB2",112,0)
 ;           undefined = no local errors or warnings
"RTN","IBCB2",113,0)
 I $D(IBXERR) D
"RTN","IBCB2",114,0)
 . S I="" W !!,?3,"Local Edits:"
"RTN","IBCB2",115,0)
 . S:$G(IBXERR) Y2=3,IBER="L"
"RTN","IBCB2",116,0)
 . F  S I=$O(IBXERR(I)) Q:I=""  W !,?5,$E(IBXERR(I),1,75)
"RTN","IBCB2",117,0)
 I $G(IBPRT("PRT")) D CLOSE(.IBPRT)
"RTN","IBCB2",118,0)
 G:$G(IBNOFIX) Q
"RTN","IBCB2",119,0)
 I $G(IBER)="WARN"!($G(IBXERR)=0) D  ;Warnings only - make biller stop and look
"RTN","IBCB2",120,0)
 . W !
"RTN","IBCB2",121,0)
 . N DIR,X,Y
"RTN","IBCB2",122,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="THIS BILL STILL HAS ONE OR MORE WARNINGS - PLEASE REVIEW THEM CAREFULLY",DIR("A")="ARE YOU SURE IT'S OK TO CONTINUE? "
"RTN","IBCB2",123,0)
 . D ^DIR K DIR
"RTN","IBCB2",124,0)
 . I Y'=1 S Y2=3 Q
"RTN","IBCB2",125,0)
 . S IBER="",IBDONE=1 K IBXERR
"RTN","IBCB2",126,0)
 I $S(Y2'["3"&'$G(IBXERR):0,1:1) K IBXERR
"RTN","IBCB2",127,0)
Q K ^TMP($J,"BILL-WARN")
"RTN","IBCB2",128,0)
 Q
"RTN","IBCB2",129,0)
 ;
"RTN","IBCB2",130,0)
DSPARERR(IBNOPRT) ; Displays A/R errors
"RTN","IBCB2",131,0)
 N I,J,Y,X,ERRPRT
"RTN","IBCB2",132,0)
 I '$G(IBNOPRT) D PRTH(.IBPRT) I IBPRT("PRT")<0 S IBQUIT=1 Q
"RTN","IBCB2",133,0)
 I $P($G(PRCAERR),U,2)'="" D
"RTN","IBCB2",134,0)
 . N Z
"RTN","IBCB2",135,0)
 . S Z=+$O(^IBE(350.8,"C",$P(PRCAERR,U,2),0)),Z=$P($G(^IBE(350.8,+Z,0)),U,2)
"RTN","IBCB2",136,0)
 . W !,?5,"An A/R error has been reported - bill cannot be authorized",!!,?5,$P(PRCAERR,U,2)," - ",$S(Z'="":Z,1:"??")
"RTN","IBCB2",137,0)
 E  D
"RTN","IBCB2",138,0)
 . W !,?5,"An undetermined A/R error was found - "_$G(PRCAERR)
"RTN","IBCB2",139,0)
 I $G(IBPRT("PRT")) D CLOSE(.IBPRT)
"RTN","IBCB2",140,0)
 Q
"RTN","IBCB2",141,0)
 ;
"RTN","IBCB2",142,0)
NOPTF S IBAC1=1 I $D(^DGCR(399,IBIFN,0)),$P(^(0),"^",8),'$D(^DGPT($P(^(0),"^",8),0)) S IBAC1=0
"RTN","IBCB2",143,0)
 Q
"RTN","IBCB2",144,0)
 ;
"RTN","IBCB2",145,0)
NOPTF1 W !!,*7,"PTF Record for this Bill was DELETED!",!,"Further processing not allowed.  Cancel and re-enter." Q
"RTN","IBCB2",146,0)
 ;
"RTN","IBCB2",147,0)
LOCERR ; Check for local edits
"RTN","IBCB2",148,0)
 ; Execute screen post-processor for bills with local scrn 9 affiliations
"RTN","IBCB2",149,0)
 N IBZ,IBXIEN,IBPRT
"RTN","IBCB2",150,0)
 K IBXERR
"RTN","IBCB2",151,0)
 S IBZ=$$LOCSCRN^IBCSC9(IBIFN)
"RTN","IBCB2",152,0)
 I IBZ S IBXIEN=IBIFN W !!,"... Executing local IB edits" D FPOST^IBCEFG7(IBZ,0,.IBXERR) I '$D(IBXERR) W !!,"No errors found for local edits"
"RTN","IBCB2",153,0)
 Q
"RTN","IBCB2",154,0)
 ;
"RTN","IBCB2",155,0)
PRTH(IBPRT,IBA) ; Print a heading for error/warnings sent to a printer
"RTN","IBCB2",156,0)
 ; Returns IBPRT = 1 if valid pritner selected
"RTN","IBCB2",157,0)
 ;         IBPRT = -1 if '^' entered
"RTN","IBCB2",158,0)
 ;         IBPRT = 0 if home device
"RTN","IBCB2",159,0)
 N POP,%ZIS,POP
"RTN","IBCB2",160,0)
 S %ZIS("A")="ERROR/WARNING OUTPUT DEVICE: "
"RTN","IBCB2",161,0)
 D ^%ZIS
"RTN","IBCB2",162,0)
 I POP S IBPRT("PRT")=-1 Q
"RTN","IBCB2",163,0)
 I IO=IO(0) S IBPRT("PRT")=0 Q
"RTN","IBCB2",164,0)
 S IBPRT("PRT")=1
"RTN","IBCB2",165,0)
 U IO
"RTN","IBCB2",166,0)
 W !,"INCONSISTENCIES LIST FOR BILL #: ",$P($G(^DGCR(399,IBIFN,0)),U),!,$J("",29),"AT: ",$$FMTE^XLFDT($$NOW^XLFDT,2),!,$J("",19),"GENERATED BY: ",$P($G(^VA(200,DUZ,0)),U),!!
"RTN","IBCB2",167,0)
 Q
"RTN","IBCB2",168,0)
 ;
"RTN","IBCB2",169,0)
CLOSE(IBPRT) ; Close device, reset printer flag
"RTN","IBCB2",170,0)
 D ^%ZISC
"RTN","IBCB2",171,0)
 S IBPRT("PRT")=0
"RTN","IBCB2",172,0)
 D HOME^%ZIS
"RTN","IBCB2",173,0)
 Q
"RTN","IBCB2",174,0)
 ;
"RTN","IBCB2",175,0)
ASKEDIT(IBAC) ; Ask if edit/review of bill is desired
"RTN","IBCB2",176,0)
 ; FUNCTION returns 0/1 for NO/YES
"RTN","IBCB2",177,0)
 ; IBAC = flag for function being performed - to determine edit/review
"RTN","IBCB2",178,0)
 N DIR,X,Y
"RTN","IBCB2",179,0)
 S DIR(0)="YA"
"RTN","IBCB2",180,0)
 S DIR("A",1)=" ",DIR("A",2)=" ",DIR("A")="Do you wish to "_$S($G(IBAC)<4:"edit",1:"review")_" the inconsistencies now? ",DIR("B")="NO"
"RTN","IBCB2",181,0)
 S DIR("?",1)=" ",DIR("?",2)=" ",DIR("?",3)="   YES - To edit inconsistent fields",DIR("?")="   NO - To discontinue this process."
"RTN","IBCB2",182,0)
 D ^DIR K DIR
"RTN","IBCB2",183,0)
 Q (Y=1)
"RTN","IBCB2",184,0)
 ;
"RTN","IBCB2",185,0)
SCREENS ;
"RTN","IBCB2",186,0)
 N IBH
"RTN","IBCB2",187,0)
 D ^IBCSCU,^IBCSC1
"RTN","IBCB2",188,0)
 I $G(IBV) K IBPOPOUT
"RTN","IBCB2",189,0)
 Q
"RTN","IBCB2",190,0)
 ;
"RTN","IBCB2",191,0)
DISP24(IBIFN,IBCORR,IBQUIT) ;
"RTN","IBCB2",192,0)
 W @IOF D BL24^IBCSCH(IBIFN,0)
"RTN","IBCB2",193,0)
 S DIR("A",1)=" ",DIR("A")="Are the above charges correct for this bill? ",DIR("B")="YES",DIR(0)="YA" D ^DIR K DIR
"RTN","IBCB2",194,0)
 I Y'=1 D
"RTN","IBCB2",195,0)
 . I Y=0,$$ASKEDIT($G(IBAC)) S IBCORR=1 Q
"RTN","IBCB2",196,0)
 . S IBQUIT=1
"RTN","IBCB2",197,0)
 Q
"RTN","IBCB2",198,0)
 ;
"RTN","IBCB2",199,0)
IICM(IBIFN) ; Ingenix ClaimsManager: Claim Scrubber
"RTN","IBCB2",200,0)
 ; Send the bill to ClaimsManager, the IBCISTAT variable returned from ClaimsManager indicates
"RTN","IBCB2",201,0)
 ;         3 - Passed CM with no errors
"RTN","IBCB2",202,0)
 ;         5 - User overriding the CM errors
"RTN","IBCB2",203,0)
 ;         7 - the CM interface isn't working
"RTN","IBCB2",204,0)
 ;        11 - User overriding the CM errors (CM not updated)
"RTN","IBCB2",205,0)
 ; 
"RTN","IBCB2",206,0)
 ; Returns False (0) if the bill fails the ClaimsManager Scrubber/errors found
"RTN","IBCB2",207,0)
 ; Returns True (1) if the bill passed the ClaimsManager Scrubber/no errors found or ClaimsManager not On at site
"RTN","IBCB2",208,0)
 ;
"RTN","IBCB2",209,0)
 N IBOK S IBOK=1
"RTN","IBCB2",210,0)
 I +$G(IBIFN),$$CM^IBCIUT1(IBIFN) S IBCISNT=1 D ST2^IBCIST I '$F(".3.5.7.11.","."_IBCISTAT_".") S IBOK=0
"RTN","IBCB2",211,0)
 Q IBOK
"RTN","IBCB2",212,0)
 ;
"RTN","IBCB2",213,0)
IIQMED(IBIFN) ; DSS QuadraMed Interface: QuadraMed Claim Scrubber
"RTN","IBCB2",214,0)
 ; Send the bill to the QuadraMed Claim Scrubber
"RTN","IBCB2",215,0)
 ; Returns False (0) if the bill fails the QuadraMed Scrubber/errors found
"RTN","IBCB2",216,0)
 ; Returns True (1) if the bill passed the QuadraMed Scrubber/no errors found or QuadraMed not On at site
"RTN","IBCB2",217,0)
 ;
"RTN","IBCB2",218,0)
 ; QuadraMed Scrubber EN^VEJDIBSC returns IBQMED = 1 if no error found, returns 0 if error found
"RTN","IBCB2",219,0)
 ;
"RTN","IBCB2",220,0)
 N IBQMED S IBQMED=1
"RTN","IBCB2",221,0)
 I +$G(IBIFN),$$QMED^IBCU1("EN^VEJDIBSC",IBIFN) D EN^VEJDIBSC(IBIFN)
"RTN","IBCB2",222,0)
 Q IBQMED
"RTN","IBCBB1")
0^95^B58004272
"RTN","IBCBB1",1,0)
IBCBB1 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE ;2-NOV-89
"RTN","IBCBB1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,80,93,106,51,151,148,153,137,232,280,155**;21-MAR-94
"RTN","IBCBB1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB1",4,0)
 ;
"RTN","IBCBB1",5,0)
 ;MAP TO DGCRBB1
"RTN","IBCBB1",6,0)
 ;
"RTN","IBCBB1",7,0)
% ;Bill Status
"RTN","IBCBB1",8,0)
 N Z,Z0,Z1
"RTN","IBCBB1",9,0)
 I $S(+IBST=0:1,1:"^1^2^3^4^7^"'[(U_IBST_U)) S IBER=IBER_"IB045;"
"RTN","IBCBB1",10,0)
 ;
"RTN","IBCBB1",11,0)
 ;Statement Covers From
"RTN","IBCBB1",12,0)
 I IBFDT="" S IBER=IBER_"IB061;"
"RTN","IBCBB1",13,0)
 I IBFDT]"",IBFDT'?7N&(IBFDT'?7N1".".N) S IBER=IBER_"IB061;"
"RTN","IBCBB1",14,0)
 I IBFDT>IBTDT S IBER=IBER_"IB061;" ; from must be on or before the to date 
"RTN","IBCBB1",15,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",16,0)
 ; if inpat - from date must not be prior to admit date.
"RTN","IBCBB1",17,0)
 I $$INPAT^IBCEF(IBIFN,1),(IBFDT<($P($G(^DGPT(+$P(IBND0,U,8),0)),U,2)\1))  S IBER=IBER_"IB061;"
"RTN","IBCBB1",18,0)
 ;
"RTN","IBCBB1",19,0)
 ;Statement Covers To
"RTN","IBCBB1",20,0)
 I IBTDT="" S IBER=IBER_"IB062;"
"RTN","IBCBB1",21,0)
 I IBTDT]"",IBTDT'?7N&(IBTDT'?7N1".".N) S IBER=IBER_"IB062;"
"RTN","IBCBB1",22,0)
 I IBTDT>DT!(IBTDT<IBFDT) S IBER=IBER_"IB062;"  ; to date must not be >than today's date
"RTN","IBCBB1",23,0)
 S IBTFY=$$FY^IBOUTL(IBTDT)
"RTN","IBCBB1",24,0)
 ;
"RTN","IBCBB1",25,0)
 ;Statement crosses fiscal years
"RTN","IBCBB1",26,0)
 ;I IBTFY'=IBFFY S IBER=IBER_"IB047;"
"RTN","IBCBB1",27,0)
 ;
"RTN","IBCBB1",28,0)
 ;Statement crosses calendar years
"RTN","IBCBB1",29,0)
 ;I $E(IBTDT,1,3)'=$E(IBFDT,1,3) S IBER=IBER_"IB046;"
"RTN","IBCBB1",30,0)
 ;
"RTN","IBCBB1",31,0)
 ;Total Charges
"RTN","IBCBB1",32,0)
 I +IBTC'>0!(+IBTC'=IBTC) S IBER=IBER_"IB064;"
"RTN","IBCBB1",33,0)
 ;
"RTN","IBCBB1",34,0)
 ;Billable charges for secondary claim
"RTN","IBCBB1",35,0)
 I $$MCRONBIL^IBEFUNC(IBIFN)&(($P(IBNDU1,U,1)-$P(IBNDU1,U,2))'>0) S IBER=IBER_"IB094;"
"RTN","IBCBB1",36,0)
 ;Fiscal Year 1
"RTN","IBCBB1",37,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",38,0)
 ;
"RTN","IBCBB1",39,0)
 ;Check provider link for current user, enterer, reviewer and Authorizor
"RTN","IBCBB1",40,0)
 I '$D(^VA(200,DUZ,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",41,0)
 I IBEU]"",'$D(^VA(200,IBEU,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",42,0)
 I IBRU]"",'$D(^VA(200,IBRU,0)) S IBER=IBER_"IB060;"
"RTN","IBCBB1",43,0)
 I IBAU]"",'$D(^VA(200,IBAU,0)) S IBER=IBER_"IB041;"
"RTN","IBCBB1",44,0)
 ;
"RTN","IBCBB1",45,0)
 ;Bill exists and not already new bill
"RTN","IBCBB1",46,0)
 ;I $S('$D(^PRCA(430,IBIFN,0)):1,$P($P(^PRCA(430,IBIFN,0),"^"),"-",2)'=IBBNO:1,1:0) S IBER=IBER_"IB056;"
"RTN","IBCBB1",47,0)
 ;I $P($$BN^PRCAFN(IBIFN),"-",2)'=IBBNO S IBER=IBER_"IB056;"
"RTN","IBCBB1",48,0)
 ;I IBER="",$P(^PRCA(430,IBIFN,0),"^",8)=$O(^PRCA(430.3,"AC",104,"")) S IBER=IBER_"IB040;"
"RTN","IBCBB1",49,0)
 I IBER="",+$$STA^PRCAFN(IBIFN)=104 S IBER=IBER_"IB040;"
"RTN","IBCBB1",50,0)
 ; If ins bill, must have valid COB sequence
"RTN","IBCBB1",51,0)
 I $P(IBND0,U,11)="i",$S($P(IBND0,U,21)="":1,1:"PST"'[$P(IBND0,U,21)) S IBER=IBER_"IB324;"
"RTN","IBCBB1",52,0)
 ;
"RTN","IBCBB1",53,0)
 ; Check for valid sec provider id for current ins
"RTN","IBCBB1",54,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)),Z1=+$$COBN^IBCEF(IBIFN) I $P(Z0,U,4+Z1)'="",$P(Z0,U,11+Z1)'="" D
"RTN","IBCBB1",55,0)
 . I '$$SECIDCK^IBCEF74(IBIFN,Z1,$P(Z0,U,11+Z1),Z) D WARN^IBCBB11("Prov secondary id type for the "_$P("PRIMARY^SECONDARY^TERTIARY",U,Z1)_" "_$$EXTERNAL^DILFD(399.0222,.01,,+Z0)_" is invalid/won't transmit")
"RTN","IBCBB1",56,0)
 ;
"RTN","IBCBB1",57,0)
 N IBCOBN,IBZ
"RTN","IBCBB1",58,0)
 S IBCOBN=+$$COBN^IBCEF(IBIFN),Z=$$GETTYP^IBCEP2A(IBIFN,IBCOBN)
"RTN","IBCBB1",59,0)
 I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB1",60,0)
 . ; for current insurance
"RTN","IBCBB1",61,0)
 . N Q,Q0,IBID,IBOK
"RTN","IBCBB1",62,0)
 . S IBOK=0
"RTN","IBCBB1",63,0)
 . D PROVINF^IBCEF74(IBIFN,IBCOBN,.IBID,IBCOBN,"C")
"RTN","IBCBB1",64,0)
 . S Q0=0,Q=$S($$FT^IBCEF(IBIFN)=3:4,1:3) F  S Q0=$O(IBID(IBCOBN,Q,Q0)) Q:'Q0  I $P(IBID(IBCOBN,Q,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB1",65,0)
 . I 'IBOK S IBER=IBER_"IB303;"
"RTN","IBCBB1",66,0)
 K IBXDATA D F^IBCEF("N-ATT/REND PHYSICIAN NAME",,,IBIFN)
"RTN","IBCBB1",67,0)
 I $P($G(IBXDATA),U)="" S IBER=IBER_"IB303;"
"RTN","IBCBB1",68,0)
 I $$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB1",69,0)
 . D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ",,IBIFN)
"RTN","IBCBB1",70,0)
 . I $P(IBZ,U,3)=""&($P(IBZ,U,4)="") S IBER=IBER_"IB321;" ; SSN/IEN required for rend/att
"RTN","IBCBB1",71,0)
 . ;
"RTN","IBCBB1",72,0)
 ;
"RTN","IBCBB1",73,0)
 ; Must be one and only one division on bill
"RTN","IBCBB1",74,0)
 S IBZ=$$MULTDIV^IBCBB11(IBIFN,IBND0)
"RTN","IBCBB1",75,0)
 I IBZ S IBER=IBER_$S(IBZ=1:"IB095;",IBZ=2:"IB104;",1:"IB105;")
"RTN","IBCBB1",76,0)
 ; Division address must be defined in institution file
"RTN","IBCBB1",77,0)
 I $P(IBND0,U,22) D
"RTN","IBCBB1",78,0)
 . N Z,Z0,Z1
"RTN","IBCBB1",79,0)
 . S Z0=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),0))
"RTN","IBCBB1",80,0)
 . S Z1=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),1))
"RTN","IBCBB1",81,0)
 . I $P(Z0,U,2)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",82,0)
 . F Z=1,3,4 I $P(Z1,U,Z)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",83,0)
 ;
"RTN","IBCBB1",84,0)
 ;CHAMPVA Rate Type and Primary Insurance Carriers Type of Coverage must match
"RTN","IBCBB1",85,0)
 S (IBRTCHV,IBPICHV)=0
"RTN","IBCBB1",86,0)
 I $P($G(^DGCR(399.3,+IBAT,0)),U,1)="CHAMPVA" S IBRTCHV=1
"RTN","IBCBB1",87,0)
 I $P($G(^IBE(355.2,+$P($G(^DIC(36,+IBNDMP,0)),U,13),0)),U,1)="CHAMPVA" S IBPICHV=1
"RTN","IBCBB1",88,0)
 I (+IBRTCHV!+IBPICHV)&('IBRTCHV!'IBPICHV) S IBER=IBER_"IB085;"
"RTN","IBCBB1",89,0)
 ;
"RTN","IBCBB1",90,0)
 N IBZPRC,IBZPRC92
"RTN","IBCBB1",91,0)
 D F^IBCEF("N-ALL PROCEDURES","IBZPRC",,IBIFN)
"RTN","IBCBB1",92,0)
 ; Procedure Clinic is required for Surgical Procedures Outpt Facility Charges
"RTN","IBCBB1",93,0)
 I +$P(IBND0,U,27)'=2,$$BILLRATE^IBCRU3(IBAT,IBCL,IBEVDT,"RC OUTPATIENT") D
"RTN","IBCBB1",94,0)
 . N Z,Z0,Z1,ZE S (ZE,Z)=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  D  I +ZE S IBER=IBER_"IB320;" Q
"RTN","IBCBB1",95,0)
 .. S Z0=$G(^DGCR(399,IBIFN,"CP",Z,0)),Z1=+Z0 I Z0'[";ICPT(" Q
"RTN","IBCBB1",96,0)
 .. I '((Z1'<10000)&(Z1'>69999))&'((Z1'<93501)&(Z1'>93533)) Q
"RTN","IBCBB1",97,0)
 .. I '$P(Z0,U,7) S ZE=1
"RTN","IBCBB1",98,0)
 ;
"RTN","IBCBB1",99,0)
 ; Extract procedures for UB92
"RTN","IBCBB1",100,0)
 D F^IBCEF("N-UB92 PROCEDURES","IBZPRC92",,IBIFN)
"RTN","IBCBB1",101,0)
 ; Does this bill have ANY prescriptions associated with it?
"RTN","IBCBB1",102,0)
 ; Must bill prescriptions separately from other charges
"RTN","IBCBB1",103,0)
 ;
"RTN","IBCBB1",104,0)
 I $$ISRX^IBCEF1(IBIFN) D
"RTN","IBCBB1",105,0)
 . N IBZ,IBRXDEF
"RTN","IBCBB1",106,0)
 . S IBRXDEF=$P($G(^IBE(350.9,1,1)),U,30),IBZ=0
"RTN","IBCBB1",107,0)
 . F  S IBZ=$O(IBZPRC92(IBZ)) Q:'IBZ  I IBZPRC92(IBZ),+$P(IBZPRC92(IBZ),U)'=IBRXDEF S IBER=IBER_"IB102;" Q
"RTN","IBCBB1",108,0)
 . K IBZ
"RTN","IBCBB1",109,0)
 ;
"RTN","IBCBB1",110,0)
 ; Check that COB sequences are not skipped
"RTN","IBCBB1",111,0)
 K Z
"RTN","IBCBB1",112,0)
 F Z=1:1:3 S:+$G(^DGCR(399,IBIFN,"I"_Z)) Z(Z)=""
"RTN","IBCBB1",113,0)
 F Z=0:1:2 S Z0=$O(Z(Z)) Q:'Z0  I Z0'=(Z+1) S IBER=IBER_"IB322;" Q
"RTN","IBCBB1",114,0)
 K Z
"RTN","IBCBB1",115,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,21)="" S IBER=IBER_"IB323;"
"RTN","IBCBB1",116,0)
 K IBXDATA D F^IBCEF("N-PROCEDURE CODING METHD",,,IBIFN)
"RTN","IBCBB1",117,0)
 ; Coding method should agree with types of procedure codes
"RTN","IBCBB1",118,0)
 S IBOK=$S('$O(IBZPRC(0))!(IBXDATA=""):1,1:0)
"RTN","IBCBB1",119,0)
 I 'IBOK S IBOK=1,IBZ=0 F  S IBZ=$O(IBZPRC(IBZ)) Q:'IBZ  I IBZPRC(IBZ),$P(IBZPRC(IBZ),U)'[$S(IBXDATA=9:"ICD",1:"ICP") S IBOK=0 Q
"RTN","IBCBB1",120,0)
 I 'IBOK D WARN^IBCBB11("Coding Method does not agree with all procedure codes found on bill")
"RTN","IBCBB1",121,0)
 D EDITMRA^IBCBB3(.IBQUIT,.IBER,IBIFN,IBFT)
"RTN","IBCBB1",122,0)
 Q:$G(IBQUIT)
"RTN","IBCBB1",123,0)
 ;
"RTN","IBCBB1",124,0)
 ;Other things that could be added:  Rev Code - calculating charges
"RTN","IBCBB1",125,0)
 ;        Diagnosis Coding, if MT copay - check for other co-payments
"RTN","IBCBB1",126,0)
 ;
"RTN","IBCBB1",127,0)
 I $P(IBNDTX,U,8),$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB121;"   ; can't force MRAs to print
"RTN","IBCBB1",128,0)
 I $P(IBNDTX,U,8)!$P(IBNDTX,U,9) D WARN^IBCBB11($S($$REQMRA^IBEFUNC(IBIFN)&($P(IBNDTX,U,9)):"MRA Secondary ",1:"")_"Bill has been forced to print "_$S($P(IBNDTX,U,8)=1!($P(IBNDTX,U,9)=1):"locally",1:"at clearinghouse"))
"RTN","IBCBB1",129,0)
 I IBFT'=2,$P(IBNDM,U,10)="" D WARN^IBCBB11("Patient Short Address has no value")
"RTN","IBCBB1",130,0)
 N IBXZ,IBIZ F IBIZ=12,13,14 S IBXZ=$P(IBNDM,U,IBIZ) I +IBXZ S IBXZ=$P($G(^DPT(DFN,.312,IBXZ,0)),U,18) I +IBXZ S IBXZ=$G(^IBA(355.3,+IBXZ,0)) I +$P(IBXZ,U,12) D
"RTN","IBCBB1",131,0)
 . D WARN^IBCBB11($P($G(^DIC(36,+IBXZ,0)),U,1)_" requires Amb Care Certification")
"RTN","IBCBB1",132,0)
 ;
"RTN","IBCBB1",133,0)
 ;Build AR array if no errors and MRA not needed or already rec'd
"RTN","IBCBB1",134,0)
 I IBER="",$S($$NEEDMRA^IBEFUNC(IBIFN)!($$REQMRA^IBEFUNC(IBIFN)):0,1:1) D ARRAY
"RTN","IBCBB1",135,0)
 ;
"RTN","IBCBB1",136,0)
END ;Don't kill IBIFN, IBER, DFN
"RTN","IBCBB1",137,0)
 I $O(^TMP($J,"BILL-WARN",0)),$G(IBER)="" S IBER="WARN" ;Warnings only
"RTN","IBCBB1",138,0)
 K IBBNO,IBEVDT,IBLOC,IBCL,IBTF,IBAT,IBWHO,IBST,IBFDT,IBTDT,IBTC,IBFY,IBFY1,IBAU,IBRU,IBEU,IBARTP,IBFYC,IBMRA,IBTOB,IBTOB12,IBNDU2,IBNDUF3,IBNDUF31,IBNDTX
"RTN","IBCBB1",139,0)
 K IBNDS,IBND0,IBNDU,IBNDM,IBNDMP,IBNDU1,IBFFY,IBTFY,IBFT,IBRTCHV,IBPICHV,IBXDATA,IBOK
"RTN","IBCBB1",140,0)
 I $D(IBER),IBER="" W !,"No Errors found for National edits"
"RTN","IBCBB1",141,0)
 Q
"RTN","IBCBB1",142,0)
 ;
"RTN","IBCBB1",143,0)
ARRAY ;Build PRCASV(array)
"RTN","IBCBB1",144,0)
 N IBCOBN,X
"RTN","IBCBB1",145,0)
 K PRCASV
"RTN","IBCBB1",146,0)
 Q:$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))
"RTN","IBCBB1",147,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCBB1",148,0)
 S X=IBIFN
"RTN","IBCBB1",149,0)
 S PRCASV("BDT")=DT,PRCASV("ARREC")=IBIFN
"RTN","IBCBB1",150,0)
 S PRCASV("APR")=DUZ
"RTN","IBCBB1",151,0)
 S PRCASV("PAT")=DFN,PRCASV("CAT")=$P(^DGCR(399.3,IBAT,0),"^",6)
"RTN","IBCBB1",152,0)
 I IBWHO="i" S PRCASV("DEBTOR")=+IBNDMP_";DIC(36,"
"RTN","IBCBB1",153,0)
 S PRCASV("DEBTOR")=$S(IBWHO="p":DFN_";DPT(",IBWHO="o":$P(IBNDM,"^",11)_";DIC(4,",IBWHO="i":PRCASV("DEBTOR"),1:"")
"RTN","IBCBB1",154,0)
 S PRCASV("CARE")=$E($$TOB^IBCEF1(IBIFN),1,2)
"RTN","IBCBB1",155,0)
 S PRCASV("FY")=$$FY^IBOUTL(DT)_U_($P(IBNDU1,U)-$P(IBNDU1,U,2))
"RTN","IBCBB1",156,0)
 ;S PRCASV("FY")=$P(IBNDU1,U,9)_U_$S($P(IBNDU1,U,2)]"":($P(IBNDU1,U,10)-$P(IBNDU1,U,2)),1:$P(IBNDU1,U,10))_$S($P(IBNDU1,U,11)]"":U_$P(IBNDU1,U,11)_U_$P(IBNDU1,U,12),1:"")
"RTN","IBCBB1",157,0)
PLUS I IBWHO="i",$P(IBNDM,"^",2),$D(^DIC(36,$P(IBNDM,"^",2),0)) S PRCASV("2NDINS")=$P(IBNDM,"^",2)
"RTN","IBCBB1",158,0)
 I IBWHO="i",$P(IBNDM,"^",3),$D(^DIC(36,$P(IBNDM,"^",3),0)) S PRCASV("3RDINS")=$P(IBNDM,"^",3)
"RTN","IBCBB1",159,0)
 ;
"RTN","IBCBB1",160,0)
 N IBX S IBX=$P(IBND0,U,21),IBX=$S(IBX="P":"I1",IBX="S":"I2",IBX="T":"I3",1:"") Q:IBX=""
"RTN","IBCBB1",161,0)
 N IBNDI1
"RTN","IBCBB1",162,0)
 Q:'$D(^DGCR(399,IBIFN,IBX))  S IBNDI1=^(IBX)
"RTN","IBCBB1",163,0)
 S:$P(IBNDI1,"^",3)]"" PRCASV("GPNO")=$P(IBNDI1,"^",3)
"RTN","IBCBB1",164,0)
 S:$P(IBNDI1,"^",15)]"" PRCASV("GPNM")=$P(IBNDI1,"^",15)
"RTN","IBCBB1",165,0)
 S:$P(IBNDI1,"^",17)]"" PRCASV("INPA")=$P(IBNDI1,"^",17)
"RTN","IBCBB1",166,0)
 S:$P(IBNDI1,"^",2)]"" PRCASV("IDNO")=$P(IBNDI1,"^",2),PRCASV("INID")=PRCASV("IDNO")
"RTN","IBCBB1",167,0)
 ; Check that this is a secondary or tertiary bill and insurance for previous
"RTN","IBCBB1",168,0)
 ; COB sequence is Medicare WNR and MRA is active --> send data elements to AR
"RTN","IBCBB1",169,0)
 I IBCOBN>1,$$WNRBILL^IBEFUNC(IBIFN,IBCOBN-1),$$EDIACTV^IBCEF4(2) D MRA
"RTN","IBCBB1",170,0)
 Q
"RTN","IBCBB1",171,0)
 ;
"RTN","IBCBB1",172,0)
MRA N IBEOB S IBEOB=0
"RTN","IBCBB1",173,0)
 ;
"RTN","IBCBB1",174,0)
 K PRCASV("MEDURE"),PRCASV("MEDCA")
"RTN","IBCBB1",175,0)
 ; Get EOB data
"RTN","IBCBB1",176,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCBB1",177,0)
 . D MRACALC^IBCEMU2(IBEOB,IBIFN,1,.PRCASV)
"RTN","IBCBB1",178,0)
 Q  ;MRA
"RTN","IBCBB1",179,0)
 ;
"RTN","IBCBB1",180,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB1",181,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB21")
0^101^B10727629
"RTN","IBCBB21",1,0)
IBCBB21 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE FOR UB-92 ;2-NOV-89
"RTN","IBCBB21",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,232,155**;21-MAR-94
"RTN","IBCBB21",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB21",4,0)
 ;
"RTN","IBCBB21",5,0)
EN(IBZPRC92) ;
"RTN","IBCBB21",6,0)
 ;
"RTN","IBCBB21",7,0)
 N ECODE,IBTXMT,IBXDATA,IBLPRT,IBI,Z,Z0,Z1,IBREQMRA
"RTN","IBCBB21",8,0)
 I '$D(IBZPRC92) D ALLPROC^IBCVA1(IBIFN,.IBZPRC92)
"RTN","IBCBB21",9,0)
 S IBREQMRA=$$REQMRA^IBEFUNC(IBIFN)    ; MRA?
"RTN","IBCBB21",10,0)
 K IBQUIT S IBQUIT=0
"RTN","IBCBB21",11,0)
 S (Z,Z0,Z1)=0
"RTN","IBCBB21",12,0)
 F  S Z=$O(IBZPRC92(Z)) Q:'Z  S:IBZPRC92(Z)["CPT" Z0=Z0+1 S:IBZPRC92(Z)["ICD" Z1=Z1+1
"RTN","IBCBB21",13,0)
 S IBTXMT=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB21",14,0)
 S IBZPRC92=Z0_U_Z1 ;Save # of CPT's and ICD9's
"RTN","IBCBB21",15,0)
 ; More than 50 procedures on a bill - must print locally
"RTN","IBCBB21",16,0)
 I IBTXMT,(+IBZPRC92>50!(+$P(IBZPRC92,U,2)>50)) D  Q:IBQUIT
"RTN","IBCBB21",17,0)
 . I 'IBREQMRA S IBQUIT=$$IBER^IBCBB3(.IBER,308) Q
"RTN","IBCBB21",18,0)
 . I '$P(IBNDTX,U,9) S IBQUIT=$$IBER^IBCBB3(.IBER,325)
"RTN","IBCBB21",19,0)
 ; If ICD9 procedures with dates and charges, bill 11x or 83x needs operating physician
"RTN","IBCBB21",20,0)
 I IBTOB12="11",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB304;"
"RTN","IBCBB21",21,0)
 I IBTOB12="83",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB312;"
"RTN","IBCBB21",22,0)
 ;
"RTN","IBCBB21",23,0)
 ; If any CPT procedures have more than 2 modifiers, warn
"RTN","IBCBB21",24,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>2 S Z0="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 2 modifiers - only first 2 will be used" D WARN^IBCBB11(Z0)
"RTN","IBCBB21",25,0)
 ;
"RTN","IBCBB21",26,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="A" S IBER=IBER_"IB086;"
"RTN","IBCBB21",27,0)
 ;
"RTN","IBCBB21",28,0)
 ; UB92 Diagnosis Codes
"RTN","IBCBB21",29,0)
 K IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCBB21",30,0)
 ;
"RTN","IBCBB21",31,0)
 ; Only 9 dx's allowed per claim plus 1 E-code
"RTN","IBCBB21",32,0)
 S (Z,ECODE,IBI)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  Q:IBER["309;"
"RTN","IBCBB21",33,0)
 . S IBI=IBI+1
"RTN","IBCBB21",34,0)
 . I $E($$ICD9^IBACSV(+$P(IBXDATA(Z),U)))="E" S:ECODE IBQUIT=$$IBER^IBCBB3(.IBER,301) S:'ECODE IBI=IBI-1,ECODE=1
"RTN","IBCBB21",35,0)
 . ; max DX check does not apply to MRAs
"RTN","IBCBB21",36,0)
 . I IBTXMT,IBI>9 D
"RTN","IBCBB21",37,0)
 .. I 'IBREQMRA Q:$P(IBNDTX,U,8)  S IBER=IBER_"IB309;" Q
"RTN","IBCBB21",38,0)
 .. I '$P(IBNDTX,U,9) S IBER=IBER_"IB326;"
"RTN","IBCBB21",39,0)
 ;
"RTN","IBCBB21",40,0)
 I 'IBI S IBER=IBER_"IB071;"   ;Require Diag code NOIS:OKL-0304-72495
"RTN","IBCBB21",41,0)
 I IBI,$$INPAT^IBCEF(IBIFN,1),$E($$ICD9^IBACSV(+$P(IBXDATA(1),U)))="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB21",42,0)
 I '$$OCC10^IBCBB2(IBIFN,.IBXDATA,3) S IBER=IBER_"IB093;"
"RTN","IBCBB21",43,0)
 ;
"RTN","IBCBB21",44,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",45,0)
 D F^IBCEF("N-UB92 SERVICE LINE (PRINT)",,,IBIFN)
"RTN","IBCBB21",46,0)
 S (Z0,IBI)=0 F  S IBI=$O(^TMP($J,"IBC-RC",IBI)) Q:'IBI  S Z=$G(^(IBI))  Q:+$P(Z,U,2)=1  I $P(Z,U,2) D
"RTN","IBCBB21",47,0)
 . I IBER'["IB090;",$P(Z,U,2)>1,($P(Z,U,7)>99999.99!($P(Z,U,8)>99999.99)) S IBER=IBER_"IB090;"
"RTN","IBCBB21",48,0)
 . Q:$P(Z,U,2)'<180&($P(Z,U,2)'>189)  ;Pass days (LOA) don't matter
"RTN","IBCBB21",49,0)
 . I '$P(Z,U,7),'$P(Z,U,8),'Z0,$$COBN^IBCEF(IBIFN)'>1  S Z0="Rev Code(s) having a 0-charge will not be transmitted for the bill" D WARN^IBCBB11(Z0) S Z0=1
"RTN","IBCBB21",50,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",51,0)
 Q
"RTN","IBCBB21",52,0)
 ;
"RTN","IBCBB3")
0^4^B37223191
"RTN","IBCBB3",1,0)
IBCBB3 ;ALB/TMP - CONTINUATION OF EDIT CHECKS ROUTINE (MEDICARE) ;06/23/98
"RTN","IBCBB3",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155**;21-MAR-94
"RTN","IBCBB3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB3",4,0)
 ;
"RTN","IBCBB3",5,0)
EDITMRA(IBQUIT,IBER,IBIFN,IBFT) ;
"RTN","IBCBB3",6,0)
 ; Requires execution of GVAR^IBCBB, IBIFN defined
"RTN","IBCBB3",7,0)
 ; File IB ERROR (350.8) contains error codes/text
"RTN","IBCBB3",8,0)
 ;
"RTN","IBCBB3",9,0)
 N IBMRATYP,Z,IBZP,IBZP1,IBOK
"RTN","IBCBB3",10,0)
 S IBQUIT=0 ;Flag to say we have too many errors - quit edits
"RTN","IBCBB3",11,0)
 ;
"RTN","IBCBB3",12,0)
 S IBMRATYP=$$MRATYPE^IBEFUNC(IBIFN,"C")
"RTN","IBCBB3",13,0)
 ;
"RTN","IBCBB3",14,0)
 I IBFT=3 D
"RTN","IBCBB3",15,0)
 . D PARTA
"RTN","IBCBB3",16,0)
 ;
"RTN","IBCBB3",17,0)
 I IBFT=2 D PARTB^IBCBB9
"RTN","IBCBB3",18,0)
 ;
"RTN","IBCBB3",19,0)
 K IBXDATA D F^IBCEF("N-ADMITTING DIAGNOSIS",,,IBIFN)
"RTN","IBCBB3",20,0)
 ; Req. for UB92 type of bills 11x!18x
"RTN","IBCBB3",21,0)
 I $G(IBXDATA)="",IBFT=3 D  Q:IBQUIT
"RTN","IBCBB3",22,0)
 . N Z
"RTN","IBCBB3",23,0)
 . I "^11^18^"[(U_IBTOB12_U) S IBQUIT=$$IBER^IBCBB3(.IBER,231) Q
"RTN","IBCBB3",24,0)
 . I $$INPAT^IBCEF(IBIFN,1) S Z="Admitting Diagnosis may be required by payer, please verify" D WARN^IBCBB11(Z)
"RTN","IBCBB3",25,0)
 ;
"RTN","IBCBB3",26,0)
 D GETPRV^IBCEU(IBIFN,"2,3,4",.Z)
"RTN","IBCBB3",27,0)
 S IBOK=1,Z=0,IBZP=U F  S Z=$O(Z(Z)) Q:'Z  S:$S($P($G(Z(Z,1)),U,3)["VA(200":1,1:0) IBZP=IBZP_+$P(Z(Z,1),U,3)_U
"RTN","IBCBB3",28,0)
 D ALLPROC^IBCVA1(IBIFN,.IBZP1)
"RTN","IBCBB3",29,0)
 S Z=0 F  S Z=$O(IBZP1(Z)) Q:'Z  I $P(IBZP1(Z),U,18),(U_$P(IBZP1(Z),U,18)_U)'[IBZP S IBOK=0 Q
"RTN","IBCBB3",30,0)
 I 'IBOK D WARN^IBCBB11("At least one provider on a procedure does not match your "_$S(IBFT=2:"render",1:"attend")_"ing or operating provider")
"RTN","IBCBB3",31,0)
 I IBFT=2 D EN^IBCBB2
"RTN","IBCBB3",32,0)
 ; edit checks for UB92 (institutional) forms
"RTN","IBCBB3",33,0)
 I IBFT=3 D EN^IBCBB21(.IBZPRC92)
"RTN","IBCBB3",34,0)
 ;
"RTN","IBCBB3",35,0)
 Q
"RTN","IBCBB3",36,0)
 ;
"RTN","IBCBB3",37,0)
PARTA ; MEDICARE specific edit checks for PART A claims (UB92 formats)
"RTN","IBCBB3",38,0)
 ;
"RTN","IBCBB3",39,0)
 N IBI,IBJ,IBX,IBCTYP,VADM,VAPA,IBSTOP,IBDXC,IBDXARY,IBPR,IBLABS
"RTN","IBCBB3",40,0)
 N IBS,IBTUNIT,IBCAGE,IBREV1,IBOCCS,IBOCSDT,IBVALCD,IBOCCD,IBNOPR
"RTN","IBCBB3",41,0)
 N IBCCARY1,IBPATST,IBZADMIT,IBZDISCH,IBXIEN,IBXERR,IBXDATA,IBOCSP
"RTN","IBCBB3",42,0)
 N IBCOV,IBNCOV,IBREVC,IBREVDUP,IBBCPT,IBREVC12,IBREVTOT,IBECAT,IBINC
"RTN","IBCBB3",43,0)
 ;
"RTN","IBCBB3",44,0)
 ; Medicare is the current payer, but no diagnosis codes
"RTN","IBCBB3",45,0)
 I $$WNRBILL^IBEFUNC(IBIFN) D SET^IBCSC4D(IBIFN,.IBDX,.IBDXO) I '$P(IBDX,U,2) S IBQUIT=$$IBER(.IBER,120) Q:IBQUIT
"RTN","IBCBB3",46,0)
 ;
"RTN","IBCBB3",47,0)
 ; Type of Bill must be three digits
"RTN","IBCBB3",48,0)
 I IBTOB'?3N S X=$$IBER(.IBER,103) Q
"RTN","IBCBB3",49,0)
 ;
"RTN","IBCBB3",50,0)
 ; Covered Days
"RTN","IBCBB3",51,0)
 S IBCTYP=0
"RTN","IBCBB3",52,0)
 S IBCOV=$P(IBNDU2,U,2),IBNCOV=$P(IBNDU2,U,3)
"RTN","IBCBB3",53,0)
 ;
"RTN","IBCBB3",54,0)
 ; If interim bill, covered days must not be greater than 60
"RTN","IBCBB3",55,0)
 I "23"[$E(IBTOB,3),IBCOV>60 S IBQUIT=$$IBER(.IBER,"096") Q:IBQUIT
"RTN","IBCBB3",56,0)
 ;
"RTN","IBCBB3",57,0)
 ; I bill type is 11x or 18x or 21x then we need covered days
"RTN","IBCBB3",58,0)
 I "^11^18^21^"[(U_IBTOB12_U) S IBCTYP=1 I IBCOV="" S IBQUIT=$$IBER(.IBER,106) Q:IBQUIT
"RTN","IBCBB3",59,0)
 ;
"RTN","IBCBB3",60,0)
 S (IBI,IBJ)=0
"RTN","IBCBB3",61,0)
 K IBXDATA D F^IBCEF("N-CONDITION CODES",,,IBIFN)
"RTN","IBCBB3",62,0)
 ; Re-sort the condition codes by code
"RTN","IBCBB3",63,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  S IBCCARY1($P(IBXDATA(IBI),U))=""
"RTN","IBCBB3",64,0)
 ;
"RTN","IBCBB3",65,0)
 ; for condition code 40, covered days must be 0
"RTN","IBCBB3",66,0)
 I $D(IBCCARY1(40)),IBCOV'=0 S IBQUIT=$$IBER(.IBER,107) Q:IBQUIT
"RTN","IBCBB3",67,0)
 ;
"RTN","IBCBB3",68,0)
 ; cov days+non=to date -from date unless the patient status = 30 (still
"RTN","IBCBB3",69,0)
 ;  pt) or outpatient or if the to date and from date are same then add 1
"RTN","IBCBB3",70,0)
 S IBPATST="",IBX=$P(IBNDU,U,12),IBPATST=$P($G(^DGCR(399.1,+IBX,0)),U,2)
"RTN","IBCBB3",71,0)
 S IBINC=$S(IBPATST=30!(IBFDT=IBTDT):1,1:0)
"RTN","IBCBB3",72,0)
 I $$INPAT^IBCEF(IBIFN,1),(IBCOV+IBNCOV)'=($$FMDIFF^XLFDT(IBTDT,IBFDT)+IBINC) S IBQUIT=$$IBER(.IBER,108) Q:IBQUIT
"RTN","IBCBB3",73,0)
 ;
"RTN","IBCBB3",74,0)
 ; if covered days >100 and type of bill is 21x or 18x error
"RTN","IBCBB3",75,0)
 I IBCOV>100,(IBTOB12=18!(IBTOB12=21)) S IBQUIT=$$IBER(.IBER,109) Q:IBQUIT
"RTN","IBCBB3",76,0)
 ;
"RTN","IBCBB3",77,0)
 S (IBJ,IBTUNIT,IBS,IBREVTOT("AC"),IBREVTOT("AI"),IBREVTOT("AO"),IBREVTOT)=0
"RTN","IBCBB3",78,0)
 ;
"RTN","IBCBB3",79,0)
 K IBXDATA D F^IBCEF("N-UB92 SERVICE LINE (EDI)",,,IBIFN) ;Get rev codes
"RTN","IBCBB3",80,0)
 ;
"RTN","IBCBB3",81,0)
 ; Re-sort the revenue codes by code
"RTN","IBCBB3",82,0)
 ;>> IBREV1(rev code,x)=Rev code^ptr cpt^unit chg^units^total^tot unc
"RTN","IBCBB3",83,0)
 ;   IBREV1(rev code) = revenue code edit category
"RTN","IBCBB3",84,0)
 ;
"RTN","IBCBB3",85,0)
 ; IBNOPR = flag that determines if there are revenue codes with
"RTN","IBCBB3",86,0)
 ;          charges that do not have a procedure - no need to check
"RTN","IBCBB3",87,0)
 ;          for billable MCR procedures if at least one RC is billable
"RTN","IBCBB3",88,0)
 ;          1 = there is at least one billable revenue code without a
"RTN","IBCBB3",89,0)
 ;              procedure
"RTN","IBCBB3",90,0)
 ;
"RTN","IBCBB3",91,0)
 S (IBNOPR,IBI)=0
"RTN","IBCBB3",92,0)
 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D
"RTN","IBCBB3",93,0)
 . S IBJ=$P(IBXDATA(IBI),U),IBECAT=""
"RTN","IBCBB3",94,0)
 . I 'IBNOPR D
"RTN","IBCBB3",95,0)
 .. I $P(IBXDATA(IBI),U,2)'="" S IBPR($P(IBXDATA(IBI),U,2))=IBI Q
"RTN","IBCBB3",96,0)
 .. S IBNOPR=1 K IBPR
"RTN","IBCBB3",97,0)
 . S:$D(IBREV1(IBJ)) IBECAT=$G(IBREV1(IBJ))
"RTN","IBCBB3",98,0)
 . I '$D(IBREV1(IBJ))!(IBECAT="") D  S IBREV1(IBJ)=IBECAT
"RTN","IBCBB3",99,0)
 . . ;
"RTN","IBCBB3",100,0)
 . . ; Accomodations (AC)
"RTN","IBCBB3",101,0)
 . . I (IBJ'<100&(IBJ'>219))!(IBJ=224) S IBECAT="AC" Q
"RTN","IBCBB3",102,0)
 . . ;
"RTN","IBCBB3",103,0)
 . . ; Ancillary Outpatient (AO)
"RTN","IBCBB3",104,0)
 . . I '$$INPAT^IBCEF(IBIFN,1) S IBECAT="AO" Q
"RTN","IBCBB3",105,0)
 . . ;
"RTN","IBCBB3",106,0)
 . . ; Ancillary Inpatient (AI)
"RTN","IBCBB3",107,0)
 . . S IBECAT="AI"
"RTN","IBCBB3",108,0)
 . ;
"RTN","IBCBB3",109,0)
 . S IBREV1(IBJ,+$O(IBREV1(IBJ,""),-1)+1)=IBXDATA(IBI)
"RTN","IBCBB3",110,0)
 . S IBREVTOT(IBECAT)=IBREVTOT(IBECAT)+$P(IBXDATA(IBI),U,6)
"RTN","IBCBB3",111,0)
 . I IBECAT="AC" S IBTUNIT=IBTUNIT+$P(IBXDATA(IBI),U,4)
"RTN","IBCBB3",112,0)
 ;
"RTN","IBCBB3",113,0)
 I $$NEEDMRA^IBEFUNC(IBIFN),$O(IBPR(""))'="" D  Q:IBQUIT
"RTN","IBCBB3",114,0)
 . ; Don't allow a bill containing only billable procedures for:
"RTN","IBCBB3",115,0)
 . ;    Oxygen, labs, or influenza shots
"RTN","IBCBB3",116,0)
 . ;  OR a bill with prosthetics on it
"RTN","IBCBB3",117,0)
 . ;    to be sent to MEDICARE for an MRA
"RTN","IBCBB3",118,0)
 . D NONMCR(.IBPR,.IBLABS) ; Remove Oxygen, labs, influenza shots
"RTN","IBCBB3",119,0)
 . ;I $O(IBPR(""))="" D
"RTN","IBCBB3",120,0)
 . I $G(IBLABS) D WARN^IBCBB11("The only possible billable procedures on this bill are labs -"),WARN^IBCBB11(" Please verify that MEDICARE does not reimburse these labs at 100%") Q
"RTN","IBCBB3",121,0)
 . I $O(IBPR(""))="" D
"RTN","IBCBB3",122,0)
 .. S IBQUIT=$$IBER(.IBER,"098")
"RTN","IBCBB3",123,0)
 ;
"RTN","IBCBB3",124,0)
 ; covered days+non covered = units of accom rev codes
"RTN","IBCBB3",125,0)
 ; Check room and board
"RTN","IBCBB3",126,0)
 I IBTUNIT,IBTUNIT'=(IBCOV+IBNCOV) S IBQUIT=$$IBER(.IBER,114) Q:IBQUIT
"RTN","IBCBB3",127,0)
 ;
"RTN","IBCBB3",128,0)
 ; Non Covered Days
"RTN","IBCBB3",129,0)
 ;   required when the type of bill is 11x,18x,21x or covered days=0
"RTN","IBCBB3",130,0)
 I IBNCOV="",(IBCTYP!(IBCOV=0)) S IBQUIT=$$IBER(.IBER,115) Q:IBQUIT
"RTN","IBCBB3",131,0)
 ;
"RTN","IBCBB3",132,0)
 ; if cc code=40 then non-covered days must be 1
"RTN","IBCBB3",133,0)
 I $D(IBCCARY1(40)),IBNCOV'=1 S IBQUIT=$$IBER(.IBER,116) Q:IBQUIT
"RTN","IBCBB3",134,0)
 ;
"RTN","IBCBB3",135,0)
 ; Patient Sex
"RTN","IBCBB3",136,0)
 ; must be "M" or "F"
"RTN","IBCBB3",137,0)
 D DEM^VADPT
"RTN","IBCBB3",138,0)
 I $P(VADM(5),U)'="M",$P(VADM(5),U)'="F" S IBQUIT=$$IBER(.IBER,124) Q:IBQUIT
"RTN","IBCBB3",139,0)
 ;
"RTN","IBCBB3",140,0)
 D ^IBCBB4
"RTN","IBCBB3",141,0)
 Q
"RTN","IBCBB3",142,0)
 ;
"RTN","IBCBB3",143,0)
IBER(IBER,ERRNO) ; Sets error list
"RTN","IBCBB3",144,0)
 ; NOTE: add code to check error list > 20 ... If so, display message and
"RTN","IBCBB3",145,0)
 ;   quit so we don't get too many errors at once to handle
"RTN","IBCBB3",146,0)
 ;   Print all if printing list
"RTN","IBCBB3",147,0)
 ;
"RTN","IBCBB3",148,0)
 I '$G(IBQUIT) D
"RTN","IBCBB3",149,0)
 . I ERRNO?1N.N S:$L(ERRNO)<3 ERRNO=$E("00",1,3-$L(ERRNO))_ERRNO
"RTN","IBCBB3",150,0)
 . I $L(IBER,";")>19,'$G(IBPRT("PRT")) S IBER=IBER_"IB999;",IBQUIT=1
"RTN","IBCBB3",151,0)
 . I $G(IBER)'[("IB"_ERRNO_";") S IBER=IBER_"IB"_ERRNO_";"
"RTN","IBCBB3",152,0)
 Q IBQUIT
"RTN","IBCBB3",153,0)
 ;
"RTN","IBCBB3",154,0)
NONMCR(IBPR,IBLABS) ;  Delete all oxygen and lab, flu shot CPT entries from IBPR
"RTN","IBCBB3",155,0)
 ; IBPR = array subscripted by CPT codes from bill
"RTN","IBCBB3",156,0)
 ; IBLABS = flag returned =1 if labs found on bill
"RTN","IBCBB3",157,0)
 N Z S IBLABS=0
"RTN","IBCBB3",158,0)
 ; Oxygen
"RTN","IBCBB3",159,0)
 F Z="A0422","A4575","A4616","A4619","A4620","A4621","E0455","E1353","E1355" K IBPR(Z)
"RTN","IBCBB3",160,0)
 F Z=77:1:85 S Z0="E13"_Z K IBPR(Z0)
"RTN","IBCBB3",161,0)
 ; Labs
"RTN","IBCBB3",162,0)
 ;S Z="80000" F  S Z=$O(IBPR(Z)) Q:Z'?1"8"4N  K IBPR(Z) S IBLABS=1
"RTN","IBCBB3",163,0)
 S Z="80000" F  S Z=$O(IBPR(Z)) Q:Z'?1"8"4N  S IBLABS=1
"RTN","IBCBB3",164,0)
 ; Flu shots
"RTN","IBCBB3",165,0)
 F Z="90724","G0008","90732","G0009","90657","90658","90659","90660" K IBPR(Z)
"RTN","IBCBB3",166,0)
 Q
"RTN","IBCBB3",167,0)
 ;
"RTN","IBCBB3",168,0)
MCRANUM(IBIFN) ; Determine MEDICARE A provider ID # from bedsection for
"RTN","IBCBB3",169,0)
 ; bill ien IBIFN
"RTN","IBCBB3",170,0)
 N IBX
"RTN","IBCBB3",171,0)
 ; PART A MRA (only) needed - determine if psych/non-psych claim
"RTN","IBCBB3",172,0)
 N IBX,IBI
"RTN","IBCBB3",173,0)
 S IBI=$P($G(^DGCR(399,IBIFN,"U")),U,11)
"RTN","IBCBB3",174,0)
 S IBX=$S($TR($P($G(^DGCR(399.1,+IBI,0)),U),"psych","PSYCH")'["PSYCH":670899,1:674499)
"RTN","IBCBB3",175,0)
 Q IBX
"RTN","IBCBB3",176,0)
 ;
"RTN","IBCBB3",177,0)
MCRACK(IBIFN,X,IBFLD) ; Check for MEDICARE A for bill IBIFN
"RTN","IBCBB3",178,0)
 ; Called from CLAIM STATUS MRA field (#24) xrefs in file 399
"RTN","IBCBB3",179,0)
 ; X = current value of field 399;24
"RTN","IBCBB3",180,0)
 ; IBFLD = 1 for primary ins co, 2 for secondary, 3 for tertiary
"RTN","IBCBB3",181,0)
 N IB
"RTN","IBCBB3",182,0)
 S IB=0
"RTN","IBCBB3",183,0)
 I +X,$$COBN^IBCEF(IBIFN)=IBFLD,$$WNRBILL^IBEFUNC(IBIFN,IBFLD),$$MRATYPE^IBEFUNC(IBIFN,"C")="A" S IB=1
"RTN","IBCBB3",184,0)
 Q IB
"RTN","IBCBB3",185,0)
 ;
"RTN","IBCBB9")
0^38^B10255056
"RTN","IBCBB9",1,0)
IBCBB9 ;ALB/BGA MEDICARE PART B EDIT CHECKS ;10/15/98
"RTN","IBCBB9",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155**;21-MAR-94
"RTN","IBCBB9",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB9",4,0)
 ;
"RTN","IBCBB9",5,0)
PARTB ; MEDICARE specific edit checks for PART B claims (HCFA 1500)
"RTN","IBCBB9",6,0)
 ;
"RTN","IBCBB9",7,0)
 N IBXDATA,IBXERR,IBXIEN,IBXSAVE,IBPR,IBDTFLG
"RTN","IBCBB9",8,0)
 ;
"RTN","IBCBB9",9,0)
 I $$NEEDMRA^IBEFUNC(IBIFN) D
"RTN","IBCBB9",10,0)
 . K IBXDATA
"RTN","IBCBB9",11,0)
 . D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)",,,IBIFN)
"RTN","IBCBB9",12,0)
 . S IBI=0
"RTN","IBCBB9",13,0)
 . F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D
"RTN","IBCBB9",14,0)
 .. S IBJ=$P(IBXDATA(IBI),U,5)
"RTN","IBCBB9",15,0)
 .. I IBJ'="","^CJ^HC^"[(U_$P(IBXDATA(IBI),U,6)_U) S IBPR(IBJ)=""
"RTN","IBCBB9",16,0)
 . I $$REQMRA^IBEFUNC(IBIFN),$O(IBXDATA(""),-1)>12 D WARN^IBCBB11("This claim will be split into multiple EOB'S since there are more than 12"),WARN^IBCBB11("service lines being submitted on the claim.")
"RTN","IBCBB9",17,0)
 . I $$REQMRA^IBEFUNC(IBIFN),$E(IBFDT,1,3)'=$E(IBTDT,1,3) D WARN^IBCBB11("This claim will be split into multiple EOB'S due to the service dates"),WARN^IBCBB11("spanning different calendar years.")
"RTN","IBCBB9",18,0)
 . D NONMCR^IBCBB3(.IBPR,.IBLABS) ; Oxygen, labs, influenza shots
"RTN","IBCBB9",19,0)
 . S Z="80000" F  S Z=$O(IBPR(Z)) Q:Z'?1"8"4N  S IBLABS=1
"RTN","IBCBB9",20,0)
 . I $G(IBLABS) D WARN^IBCBB11("The only possible billable procedures on this bill are labs -"),WARN^IBCBB11(" Please verify that MEDICARE does not reimburse these labs at 100%") Q
"RTN","IBCBB9",21,0)
 . I $O(IBPR(""))="" S IBQUIT=$$IBER^IBCBB3(.IBER,"098")
"RTN","IBCBB9",22,0)
 ;
"RTN","IBCBB9",23,0)
 ; First char of the pat's first and last name must be present and
"RTN","IBCBB9",24,0)
 ; must be an alpha
"RTN","IBCBB9",25,0)
 K IBXDATA D F^IBCEF("N-PATIENT NAME",,,IBIFN)
"RTN","IBCBB9",26,0)
 S IBXDATA=$$NAME^IBCEFG1(IBXDATA)
"RTN","IBCBB9",27,0)
 I $S($G(IBXDATA)="":1,$E($P(IBXDATA,U))=" "!($E($P(IBXDATA,U))'?1A):1,$E($P(IBXDATA,U,2))=" "!($E($P(IBXDATA,U,2))'?1A):1,1:0) S IBQUIT=$$IBER^IBCBB3(.IBER,300) Q:IBQUIT
"RTN","IBCBB9",28,0)
 ;
"RTN","IBCBB9",29,0)
 ; First char of the pat's address and city must not be a space
"RTN","IBCBB9",30,0)
 K IBXDATA D F^IBCEF("N-PATIENT STREET ADDRESS LN 1",,,IBIFN)
"RTN","IBCBB9",31,0)
 I $G(IBXDATA)=""!($E($G(IBXDATA))=" ") S IBQUIT=$$IBER^IBCBB3(.IBER,302) Q:IBQUIT
"RTN","IBCBB9",32,0)
 ;
"RTN","IBCBB9",33,0)
 K IBXDATA D F^IBCEF("N-PATIENT CITY",,,IBIFN)
"RTN","IBCBB9",34,0)
 I $G(IBXDATA)=""!($E($G(IBXDATA))=" ") S IBQUIT=$$IBER^IBCBB3(.IBER,302) Q:IBQUIT
"RTN","IBCBB9",35,0)
 ;
"RTN","IBCBB9",36,0)
 ; Must be a valid HIC #
"RTN","IBCBB9",37,0)
 I '$$VALID^IBCBB8(IBIFN) S IBQUIT=$$IBER^IBCBB3(.IBER,215) Q:IBQUIT
"RTN","IBCBB9",38,0)
 ;
"RTN","IBCBB9",39,0)
 ; Specialty code 99 is not valid for Medicare MRA request claims
"RTN","IBCBB9",40,0)
 I $$REQMRA^IBEFUNC(IBIFN),$$BILLSPEC^IBCEU3(IBIFN)=99 S IBQUIT=$$IBER^IBCBB3(.IBER,122) Q:IBQUIT
"RTN","IBCBB9",41,0)
 ;
"RTN","IBCBB9",42,0)
 Q
"RTN","IBCBB9",43,0)
 ;
"RTN","IBCBULL")
0^82^B12278052
"RTN","IBCBULL",1,0)
IBCBULL ;ALB/MJB - MCCR MAILMAN BULLETINS  ;14 JUN 88 15:33
"RTN","IBCBULL",2,0)
 ;;2.0;INTEGRATED BILLING;**124,155**;21-MAR-94
"RTN","IBCBULL",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBULL",4,0)
 ;
"RTN","IBCBULL",5,0)
 ;MAP TO DGCRBULL
"RTN","IBCBULL",6,0)
 ; both bulletins are sent to: billing supervisor, person cancelling/disapproving, and respective mail group, if defined
"RTN","IBCBULL",7,0)
 ; disapproval bulletin is also sent to person who entered the bill
"RTN","IBCBULL",8,0)
 ;
"RTN","IBCBULL",9,0)
BULL S IBFTN=$P($G(^DGCR(399,+$G(IBIFN),0)),U,19),IBFTN=$$FTN^IBCU3(IBFTN)
"RTN","IBCBULL",10,0)
 K XMY S XMSUB=$S($D(IBCAN):"MAS "_IBFTN_" BILL CANCELLATION BULLETIN",1:"MAS "_IBFTN_" BILL DISAPPROVAL BULLETIN"),XMDUZ=DUZ
"RTN","IBCBULL",11,0)
 S IBEPAR(1)=$G(^IBE(350.9,1,1)),IB(0)=$S($D(^DGCR(399,IBIFN,0)):^(0),1:"")
"RTN","IBCBULL",12,0)
 S IB("S")=$G(^DGCR(399,IBIFN,"S"))
"RTN","IBCBULL",13,0)
 S DFN=$P(IB(0),U,2) D PID^VADPT6 S IBBNO=$P(IB(0),U,1),IBNAME=$P(^DPT(DFN,0),U),Y=$P(IB(0),U,3) X ^DD("DD") S IBDT=Y
"RTN","IBCBULL",14,0)
 S IBTEXT(1,0)="The following "_IBFTN_" bill has been "_$S($D(IBCAN):"cancelled: ",1:"disapproved: "),IBTEXT(2,0)="",IBTEXT(3,0)="Bill Number: "_IBBNO,IBTEXT(4,0)=""
"RTN","IBCBULL",15,0)
 S IBTEXT(5,0)="Patient Name: "_IBNAME_"         PT ID: "_VA("PID"),IBTEXT(6,0)="",IBTEXT(7,0)="Event Date: "_IBDT
"RTN","IBCBULL",16,0)
 S:$D(IBCAN) IBTEXT(8,0)="",IBTEXT(9,0)="Reason for cancellation: "_$P(^DGCR(399,IBIFN,"S"),"^",19)
"RTN","IBCBULL",17,0)
 S:$D(IBCAN) IBTEXT(10,0)="",IBTEXT(11,0)="Status when cancelled: "_$S('$D(IBSTAT):"",1:$P($P($P(^DD(399,.13,0),"^",3),IBSTAT_":",2),";",1))
"RTN","IBCBULL",18,0)
 S:$D(IBTEXT(11,0)) Y=$P(IB("S"),"^",10),IBTEXT(11,0)=IBTEXT(11,0)_"  -  "_$S('Y:"Not passed to AR",1:"Passed to AR on ") I Y D D^DIQ S IBTEXT(11,0)=IBTEXT(11,0)_Y
"RTN","IBCBULL",19,0)
 S:'$D(IBCAN) IBTEXT(8,0)="" F I=1:1 Q:'$D(IBD(I))  S J=8+I Q:J'<14  S IBTEXT(J,0)="Reason for disapproval: "_IBD(I)
"RTN","IBCBULL",20,0)
 I '$D(IBCAN),$D(J)#2,J'<14 S IBTEXT(J,0)="",IBTEXT((J+1),0)="Other reasons too numerous to mention..."
"RTN","IBCBULL",21,0)
 ;
"RTN","IBCBULL",22,0)
 S XMTEXT="IBTEXT(",XMY(DUZ)="",XMY($P(IBEPAR(1),"^",8))="" S:'$D(IBCAN) XMY($P(^DGCR(399,IBIFN,"S"),"^",2))=""
"RTN","IBCBULL",23,0)
 ;
"RTN","IBCBULL",24,0)
 ;I $D(IBCAN),IBEPAR(1)]"",$P(IBEPAR(1),U,7)]"" S IBM="" F I=1:1 S IBM=$O(^XMB(3.8,$P(IBEPAR(1),U,7),1,"B",IBM)) Q:IBM=""  S:'$D(XMY(IBM)) XMY(IBM)=""
"RTN","IBCBULL",25,0)
 I $D(IBCAN) S IBGRP=$P($G(^XMB(3.8,+$P($G(IBEPAR(1)),"^",7),0)),"^") I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBCBULL",26,0)
 ;
"RTN","IBCBULL",27,0)
 ;I '$D(IBCAN),IBEPAR(1)]"",$P(IBEPAR(1),U,9)]"" S IBM="" F I=1:1 S IBM=$O(^XMB(3.8,$P(IBEPAR(1),U,9),1,"B",IBM)) Q:IBM=""  S:'$D(XMY(IBM)) XMY(IBM)=""
"RTN","IBCBULL",28,0)
 I '$D(IBCAN) S IBGRP=$P($G(^XMB(3.8,+$P($G(IBEPAR(1)),"^",9),0)),"^") I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBCBULL",29,0)
 ;
"RTN","IBCBULL",30,0)
 D ^XMD K XMSUB,XMY,XMDUZ,XMTEXT,IB,IBTEXT,IBNAME,IBGRP,IBBNO,IBD,IBDT,IBM,IBFTN,VA("BID"),VA("PID"),I,Y,DIC Q
"RTN","IBCBULL",31,0)
 Q
"RTN","IBCBULL",32,0)
DISAP Q:$P(^DGCR(399,IBIFN,"S"),"^",6)!('$D(IBX3))  S X3=IBX3
"RTN","IBCBULL",33,0)
 I X3=3 S IBD=0 F I=1:1 S IBD=$O(^DGCR(399,IBIFN,"D1",IBD)) Q:IBD'?1N.N  S IBD(I)=^DGCR(399,IBIFN,"D1",IBD,0),IBD(I)=$S($D(^DGCR(399.4,IBD(I),0)):$P(^(0),"^",1),1:"")
"RTN","IBCBULL",34,0)
 I X3=6 S IBD=0 F I=1:1 S IBD=$O(^DGCR(399,IBIFN,"D2",IBD)) Q:IBD'?1N.N  S IBD(I)=^DGCR(399,IBIFN,"D2",IBD,0),IBD(I)=$S($D(^DGCR(399.4,IBD(I),0)):$P(^(0),"^",1),1:"")
"RTN","IBCBULL",35,0)
 D BULL K IBD,IBX3,X3,I Q
"RTN","IBCBULL",36,0)
 Q
"RTN","IBCBULL",37,0)
SET S X1=$S($D(^DGCR(399,+IBIFN,"S")):^("S"),1:""),IB("U1")=$S($D(^DGCR(399,IBIFN,"U1")):^("U1"),1:"") Q:X1']""
"RTN","IBCBULL",38,0)
 ;IBCBULL
"RTN","IBCC")
0^35^B29504277
"RTN","IBCC",1,0)
IBCC ;ALB/MJB - CANCEL UB-82 THIRD PARTY BILL ;14 JUN 88  10:12
"RTN","IBCC",2,0)
 ;;2.0;INTEGRATED BILLING;**2,19,77,80,51,142,137,161,199,241,155**;21-MAR-94
"RTN","IBCC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCC",4,0)
 ;
"RTN","IBCC",5,0)
 ;MAP TO DGCRC
"RTN","IBCC",6,0)
 ;
"RTN","IBCC",7,0)
 I '$D(IBCAN) S IBCAN=1
"RTN","IBCC",8,0)
ASK ;
"RTN","IBCC",9,0)
 ;***
"RTN","IBCC",10,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
"RTN","IBCC",11,0)
 ;S XRTL=$ZU(0),XRTN="IBCC-1" D T0^%ZOSV ;start rt clock
"RTN","IBCC",12,0)
 ;
"RTN","IBCC",13,0)
 ; If called at entry point PROCESS, variable IBNOASK will exist.
"RTN","IBCC",14,0)
 ; First time through, IBNOASK=1
"RTN","IBCC",15,0)
 ; Second time through, IBNOASK=2 and it will quit
"RTN","IBCC",16,0)
 I $G(IBNOASK)=2 G Q
"RTN","IBCC",17,0)
 I $G(IBNOASK)=1 S IBNOASK=2
"RTN","IBCC",18,0)
 ;
"RTN","IBCC",19,0)
 G Q:$G(IBCE("EDI"))
"RTN","IBCC",20,0)
 D Q
"RTN","IBCC",21,0)
 S IBQUIT=0
"RTN","IBCC",22,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCC",23,0)
 I '$G(IBNOASK) S DIC="^DGCR(399,",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or Patient NAME: " W !! D ^DIC I Y<1 S IBQUIT=1 G Q1
"RTN","IBCC",24,0)
 K IB364
"RTN","IBCC",25,0)
NOPTF ; Note if IB364 is >0 it will be used as the ien to update in file 364
"RTN","IBCC",26,0)
 N DA,I
"RTN","IBCC",27,0)
 I '$G(IBNOASK) S IBIFN=+$G(Y)
"RTN","IBCC",28,0)
 I '$G(IBIFN) G ASK
"RTN","IBCC",29,0)
 I IBCAN>1 D NOPTF^IBCB2 I 'IBAC1 D NOPTF1^IBCB2 G ASK
"RTN","IBCC",30,0)
 ; Check if bill has been referred to Counsel
"RTN","IBCC",31,0)
 I $P($G(^PRCA(430,IBIFN,6)),U,4) D  G ASK
"RTN","IBCC",32,0)
 . W !,"This bill has been referred to Regional Counsel and cannot be 'CANCELLED' in"
"RTN","IBCC",33,0)
 . W !,"Integrated Billing.  Please use the option 'TP Referred Follow-up'"
"RTN","IBCC",34,0)
 . W !,"[PRCA RC ACTION MENU] in Accounts Receivable to request that Regional"
"RTN","IBCC",35,0)
 . W !,"Counsel return the bill to your facility."
"RTN","IBCC",36,0)
 . Q
"RTN","IBCC",37,0)
 ;
"RTN","IBCC",38,0)
 F I=0,"S","U1" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCC",39,0)
 S IBSTAT=$P(IB(0),U,13)
"RTN","IBCC",40,0)
 ;
"RTN","IBCC",41,0)
 ; Restrict access to this process for REQUEST MRA bills
"RTN","IBCC",42,0)
 I IBSTAT=2,'$G(IBCE("EDI")),$$MRAWL^IBCEMU2(IBIFN) D  G ASK
"RTN","IBCC",43,0)
 . W !!?4,"This bill is in a status of REQUEST MRA and it does appear on the"
"RTN","IBCC",44,0)
 . W !?4,"MRA Management Work List.  Please use the 'MRA Management Menu' options"
"RTN","IBCC",45,0)
 . W !?4,"for all processing related to this bill."
"RTN","IBCC",46,0)
 . Q
"RTN","IBCC",47,0)
 ;
"RTN","IBCC",48,0)
 ; Warning message if in a REQUEST MRA status with no MRA on file
"RTN","IBCC",49,0)
 I IBSTAT=2,'$$MRACNT^IBCEMU1(IBIFN) D
"RTN","IBCC",50,0)
 . N REJ
"RTN","IBCC",51,0)
 . D TXSTS^IBCEMU2(IBIFN,,.REJ)
"RTN","IBCC",52,0)
 . W *7,!!?4,"Warning!  This bill is in a status of REQUEST MRA."
"RTN","IBCC",53,0)
 . W !?4,"No MRAs have been received"
"RTN","IBCC",54,0)
 . I REJ W ", but the most recent transmission of this",!?4,"MRA request bill was rejected."
"RTN","IBCC",55,0)
 . I 'REJ W " and there are no rejection messages on file",!?4,"for the most recent transmission of this MRA request bill."
"RTN","IBCC",56,0)
 . Q
"RTN","IBCC",57,0)
 ;
"RTN","IBCC",58,0)
 I IBCAN=2,IB("S")]"",+$P(IB("S"),U,16),$P(IB("S"),U,17)]"" D  G 1
"RTN","IBCC",59,0)
 . W !!,"This bill was cancelled on " S Y=$P(IB("S"),U,17) X ^DD("DD") W Y," by ",$S($P(IB("S"),U,18)']"":IBU,$D(^VA(200,$P(IB("S"),U,18),0)):$P(^(0),U,1),1:IBU),"."
"RTN","IBCC",60,0)
 . S IBQUIT=1
"RTN","IBCC",61,0)
 ; Notify if a payment has been posted to this bill before cancel
"RTN","IBCC",62,0)
 N PRCABILL
"RTN","IBCC",63,0)
 S PRCABILL=$$TPR^PRCAFN(IBIFN)
"RTN","IBCC",64,0)
 I PRCABILL=-1 W !!,"Please note: PRCA was unable to determine if a payment has been posted."
"RTN","IBCC",65,0)
 I PRCABILL>0 W !!,"Please note a PAYMENT of **$"_$$TPR^PRCAFN(IBIFN)_"** has been POSTED to this bill."
"RTN","IBCC",66,0)
CHK S (IBCCCC,IBQUIT)=0 I '$G(IBCEAUTO) W !!,"ARE YOU SURE YOU WANT TO CANCEL THIS BILL" S %=2 D YN^DICN G:%=0 HELP I %'=1 S IBQUIT=1 G NO
"RTN","IBCC",67,0)
 W:'$G(IBCEAUTO) !!,"LAST CHANCE TO CHANGE YOUR MIND..." S DIE("NO^")="",DIE="^DGCR(399,",DA=IBIFN,DR=$S($G(IBCEAUTO):"16////1;19////EDI/MRA TURNED OFF;S IBCCCC=1;",1:"16;S:'X Y=0;19;S IBCCCC=1;") D ^DIE K DIE,DR
"RTN","IBCC",68,0)
NO I 'IBCCCC W !!,"<NO ACTION TAKEN>",*7 S IBQUIT=1 G ASK:IBCAN<2,Q
"RTN","IBCC",69,0)
 W !!,"...Bill has been cancelled..." D BULL^IBCBULL,BSTAT^IBCDC(IBIFN),PRIOR^IBCCC2(IBIFN)
"RTN","IBCC",70,0)
 ;
"RTN","IBCC",71,0)
 ; cancelling in ingenix claimsmanager if ingenix is running
"RTN","IBCC",72,0)
 ; clean-up of variables is OK if not coming in from ListMan screen
"RTN","IBCC",73,0)
 I $$CM^IBCIUT1(IBIFN) S IBCISNT=4 D ST2^IBCIST I '$G(IBCICNCL) K IBCISNT,IBCISTAT,IBCIREDT,IBCIERR
"RTN","IBCC",74,0)
 ;
"RTN","IBCC",75,0)
 S IBEDI=$G(IB364)
"RTN","IBCC",76,0)
 I 'IBEDI S IBEDI=+$$LAST364^IBCEF4(IBIFN)
"RTN","IBCC",77,0)
 I IBEDI D UPDEDI^IBCEM(IBEDI,"C") ;Update EDI files, if needed
"RTN","IBCC",78,0)
 ;
"RTN","IBCC",79,0)
 F I="S","U1" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCC",80,0)
 S PRCASV("ARREC")=IBIFN,PRCASV("AMT")=$S(IB("U1")']"":0,1:$P(IB("U1"),"^")),PRCASV("DATE")=$P(IB("S"),"^",17),PRCASV("BY")=$P(IB("S"),"^",18)
"RTN","IBCC",81,0)
 S PRCASV("COMMENT")=$S($P(IB("S"),U,19)]"":$P(IB("S"),U,19),$P(^IBE(350.9,1,2),"^",7)]"":$P(^(2),"^",7),1:"BILL CANCELLED IN MAS")
"RTN","IBCC",82,0)
 S PRCASV("BY")=$S($P(IB("S"),U,18)]"":$P(IB("S"),U,18),1:"")
"RTN","IBCC",83,0)
 S X=$$CANCEL^RCBEIB($G(PRCASV("ARREC")),$G(PRCASV("DATE")),$G(PRCASV("BY")),$G(PRCASV("AMT")),$G(PRCASV("COMMENT")))
"RTN","IBCC",84,0)
 W !,$S(X:">> The receivable associated with the claim was cancelled.",1:">> The receivable associated with the claim was not cancelled.")
"RTN","IBCC",85,0)
 I $P(X,U,2)]"" W !,">>> ",$P(X,U,2) ; The reason why the claim can not be cancelled.
"RTN","IBCC",86,0)
 I IBCAN<2 D RNB^IBCC1 ;assign a reason not billable
"RTN","IBCC",87,0)
 G ASK:IBCAN<2,Q
"RTN","IBCC",88,0)
 ;
"RTN","IBCC",89,0)
HELP W !,?3,"Answer 'YES' or 'Y' if you wish to cancel this bill.",!,?3,"Answer 'NO' or 'N' if you want to abort." G CHK
"RTN","IBCC",90,0)
 Q
"RTN","IBCC",91,0)
1 I $P(IB(0),U,13)=1 W !,"This record was re-opened on " S Y=$P(IB(0),U,14) X ^DD("DD") W Y,"." G CHK
"RTN","IBCC",92,0)
 G ASK
"RTN","IBCC",93,0)
Q1 K:IBCAN=1 IBQUIT K IBCAN
"RTN","IBCC",94,0)
Q K %,IBEPAR,IBSTAT,IBARST,IBAC1,IB,DFN,IBX,IBZ,DIC,DIE,DR,PRCASV,PRCASVC,X,Y,IBEDI
"RTN","IBCC",95,0)
 ;***
"RTN","IBCC",96,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
"RTN","IBCC",97,0)
 Q
"RTN","IBCC",98,0)
 ;
"RTN","IBCC",99,0)
PROCESS(IBIFN,IBCAN) ;
"RTN","IBCC",100,0)
 ; Entry point when the bill number is already known.  Use this when
"RTN","IBCC",101,0)
 ; you just want to try to cancel this bill and this bill only.
"RTN","IBCC",102,0)
 ; Input:
"RTN","IBCC",103,0)
 ;   IBIFN - Internal bill# (Required)
"RTN","IBCC",104,0)
 ;   IBCAN - Cancel Flag (optional, defaults to 1 if not included)
"RTN","IBCC",105,0)
 ;
"RTN","IBCC",106,0)
 NEW IBNOASK
"RTN","IBCC",107,0)
 S IBNOASK=1
"RTN","IBCC",108,0)
 S IBCAN=$G(IBCAN,1)
"RTN","IBCC",109,0)
 G ASK
"RTN","IBCC",110,0)
 ;
"RTN","IBCC",111,0)
 ;IBCC
"RTN","IBCCC2")
0^36^B55631790
"RTN","IBCCC2",1,0)
IBCCC2 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;6/6/03 9:56am
"RTN","IBCCC2",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,124,138,51,151,137,161,182,211,245,155**;21-MAR-94
"RTN","IBCCC2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCC2",4,0)
 ;
"RTN","IBCCC2",5,0)
 ;MAP TO DGCRCC2
"RTN","IBCCC2",6,0)
 ;
"RTN","IBCCC2",7,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC2",8,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC2",9,0)
 ;
"RTN","IBCCC2",10,0)
STEP5 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBCCC2",11,0)
 ;
"RTN","IBCCC2",12,0)
 ;move pure data nodes
"RTN","IBCCC2",13,0)
 F I="I1","I2","I3","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",14,0)
 ;
"RTN","IBCCC2",15,0)
 ;move top level data node. ;Do not move 'TX' node
"RTN","IBCCC2",16,0)
 F I="U","U1","U2","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",17,0)
 ;
"RTN","IBCCC2",18,0)
 ;move multiple level data
"RTN","IBCCC2",19,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",20,0)
 ;
"RTN","IBCCC2",21,0)
 D FTPRV^IBCEU5(IBIFN) ; Ask change prov type if form type not the same
"RTN","IBCCC2",22,0)
 D COBCHG(IBIFN,,.IBCOB)
"RTN","IBCCC2",23,0)
 ;
"RTN","IBCCC2",24,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBCCC2",25,0)
 ;
"RTN","IBCCC2",26,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBCCC2",27,0)
 D PRIOR(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBCCC2",28,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ) G END
"RTN","IBCCC2",29,0)
 ;
"RTN","IBCCC2",30,0)
STEP6 N IBGOEND
"RTN","IBCCC2",31,0)
 I '$G(IBCE("EDI"))!$G(IBCE("EDI","NEW")),'$G(IBCEAUTO) D IBSCEDT G END:$G(IBGOEND)
"RTN","IBCCC2",32,0)
 ;
"RTN","IBCCC2",33,0)
 ;
"RTN","IBCCC2",34,0)
END K DFN,IB,IBA,IBA2,IBAD,IBADD1,IBBNO,IBCAN,IBCCC,IBDA,IBDPT,IBDR,IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBND,IBQUIT,IBU,IBUN,IBARST,IBCOB,IBCNCOPY,IBCBCOPY
"RTN","IBCCC2",35,0)
 K IBV,IBV1,IBW,IBWW,IBYN,IBZZ,PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,VAEL,VAERR,IBAC,IBCCC,IBDD1,IBIN,DGREV,DGREV00,DGREVHDR,IBCHK
"RTN","IBCCC2",36,0)
 K IBBS,IBLS,DGPCM,IBIP,IBND0,IBNDU,IBO,IBPTF,IBST,IBUC,IBDD,D,%,%DT,DIC,VA,VADM,X,X1,X2,X3,X4,Y,I,J,K,DGRVRCAL,DDH,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,IBA1,IBOD,IBINS,IBN,IBPROC,DGFUNC,DGIFN
"RTN","IBCCC2",37,0)
 Q
"RTN","IBCCC2",38,0)
 ;
"RTN","IBCCC2",39,0)
 ;
"RTN","IBCCC2",40,0)
IBSCEDT ; call the IB bill edit screens and validate the data
"RTN","IBCCC2",41,0)
 N IBV,IBPAR,IBAC,IBHV,IBH,IBCIREDT
"RTN","IBCCC2",42,0)
 D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBCCC2",43,0)
ST1 S IBV=0 D ^IBCSCU,^IBCSC1 I $G(IBPOPOUT) S IBGOEND=1 G IBSCX
"RTN","IBCCC2",44,0)
 S IBAC=1
"RTN","IBCCC2",45,0)
 D ^IBCB1
"RTN","IBCCC2",46,0)
 I $G(IBCIREDT) G ST1
"RTN","IBCCC2",47,0)
IBSCX ;
"RTN","IBCCC2",48,0)
 Q
"RTN","IBCCC2",49,0)
 ;
"RTN","IBCCC2",50,0)
 ;
"RTN","IBCCC2",51,0)
U F J=3,4,6:1:17,20 I $P(IBND("U"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U"),"^",J)=$P(IBND("U"),"^",J)
"RTN","IBCCC2",52,0)
 Q
"RTN","IBCCC2",53,0)
U1 F J=1:1:9,13,14 I $P(IBND("U1"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U1"),"^",J)=$P(IBND("U1"),"^",J)
"RTN","IBCCC2",54,0)
 Q
"RTN","IBCCC2",55,0)
U2 F J=1:1:19 I $P(IBND("U2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U2"),"^",J)=$P(IBND("U2"),"^",J)
"RTN","IBCCC2",56,0)
 Q
"RTN","IBCCC2",57,0)
UF2 F J=1 I $P(IBND("UF2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF2"),"^",J)=$P(IBND("UF2"),"^",J)
"RTN","IBCCC2",58,0)
 Q
"RTN","IBCCC2",59,0)
UF3 F J=1:1:7 I $P(IBND("UF3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF3"),"^",J)=$P(IBND("UF3"),"^",J)
"RTN","IBCCC2",60,0)
 Q
"RTN","IBCCC2",61,0)
UF31 F J=1:1:3 I $P(IBND("UF31"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF31"),"^",J)=$P(IBND("UF31"),"^",J)
"RTN","IBCCC2",62,0)
 Q
"RTN","IBCCC2",63,0)
C F J=10 I $P(IBND("C"),"^",J)]"" S $P(^DGCR(399,IBIFN,"C"),"^",J)=$P(IBND("C"),"^",J)
"RTN","IBCCC2",64,0)
 I '$D(^DGCR(399,IBIFN1,"CP")) D CP1
"RTN","IBCCC2",65,0)
 Q
"RTN","IBCCC2",66,0)
M F J=1:1:14 I $P(IBND("M"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M"),"^",J)=$P(IBND("M"),"^",J)
"RTN","IBCCC2",67,0)
 Q
"RTN","IBCCC2",68,0)
CC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",69,0)
 S IBDD=399.04 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",70,0)
OP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",71,0)
 S IBDD=399.043 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",72,0)
 Q
"RTN","IBCCC2",73,0)
OC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",74,0)
 S IBDD=399.041 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",75,0)
 Q
"RTN","IBCCC2",76,0)
OT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",77,0)
 S IBDD=399.048 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",78,0)
 Q
"RTN","IBCCC2",79,0)
CV ; Don't copy value codes from inpatient inst to inpatient prof bills
"RTN","IBCCC2",80,0)
 I $$FT^IBCEF(IBIFN1)'=2,$$FT^IBCEF(IBIFN)=2 Q
"RTN","IBCCC2",81,0)
 S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",82,0)
 S IBDD=399.047 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",83,0)
 Q
"RTN","IBCCC2",84,0)
RC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",85,0)
 S IBDD=399.042 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("RC")=^(0) F K=1:1:15 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("RC"),"^",K),X=$P(IBND("RC"),"^",K)
"RTN","IBCCC2",86,0)
 Q
"RTN","IBCCC2",87,0)
CP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",88,0)
 I +$G(IBNOCPT) Q
"RTN","IBCCC2",89,0)
 S IBDD=399.0304 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("CP")=^(0),IBND("CP-AUX")=$G(^("AUX")) D
"RTN","IBCCC2",90,0)
 . F K=1:1:7,9:1:14,16:1:22 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("CP"),"^",K)
"RTN","IBCCC2",91,0)
 . I IBND("CP-AUX")'="" F K=1:1:8 S $P(^DGCR(399,IBIFN,I,J,"AUX"),"^",K)=$P(IBND("CP-AUX"),"^",K)
"RTN","IBCCC2",92,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"MOD",0)) S ^DGCR(399,IBIFN,I,J,"MOD",0)=^DGCR(399,IBIFN1,I,J,"MOD",0) D
"RTN","IBCCC2",93,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"MOD",K)) Q:'K  D
"RTN","IBCCC2",94,0)
 ... I $G(IBNOTC),$P($$MOD^ICPTMOD(+$P($G(^DGCR(399,IBIFN1,I,J,"MOD",K,0)),U,2),"I"),U,2)="TC" Q  ; Don't copy TC modifier from inst to prof bill
"RTN","IBCCC2",95,0)
 ... S ^DGCR(399,IBIFN,I,J,"MOD",K,0)=^DGCR(399,IBIFN1,I,J,"MOD",K,0)
"RTN","IBCCC2",96,0)
CP1 S IBCOD=$P($G(^DGCR(399,IBIFN,0)),"^",9) Q:IBCOD=""!('$D(^DGCR(399,IBIFN1,"C")))
"RTN","IBCCC2",97,0)
 I IBCOD=9 F DGI=4,5,6 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICD0(",DGPROCDT=$P(^("C"),"^",DGI+7) D FILE
"RTN","IBCCC2",98,0)
 I IBCOD=4 F DGI=1,2,3 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+10) D FILE
"RTN","IBCCC2",99,0)
 I IBCOD=5 F DGI=7,8,9 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+4) D FILE
"RTN","IBCCC2",100,0)
 Q
"RTN","IBCCC2",101,0)
 ;
"RTN","IBCCC2",102,0)
PRV S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",103,0)
 N Z,Z0
"RTN","IBCCC2",104,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,19),Z0=$P($G(^DGCR(399,IBIFN1,0)),U,19)
"RTN","IBCCC2",105,0)
 S IBDD=399.0222 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) D
"RTN","IBCCC2",106,0)
 . S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",107,0)
 . I Z'=Z0,$S(X=3:Z0=3,X=4:Z0=2,1:0) S $P(^DGCR(399,IBIFN,I,J,0),U)=(Z0+1)
"RTN","IBCCC2",108,0)
 Q
"RTN","IBCCC2",109,0)
 ;
"RTN","IBCCC2",110,0)
COB S J=0 F  S J=$O(IBCOB(I,J)) Q:'J  S $P(^DGCR(399,IBIFN,I),U,J)=IBCOB(I,J)
"RTN","IBCCC2",111,0)
 Q
"RTN","IBCCC2",112,0)
 ;
"RTN","IBCCC2",113,0)
FILE N DIC,DIE,DR,DA,X,Y,DLAYGO,DD,DO
"RTN","IBCCC2",114,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCC2",115,0)
 S DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP""," Q:X=""  D FILE^DICN K DO,DD Q:+Y<1  S DA=+Y
"RTN","IBCCC2",116,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR="1///"_DGPROCDT D ^DIE
"RTN","IBCCC2",117,0)
 K DGPROCDT
"RTN","IBCCC2",118,0)
 Q
"RTN","IBCCC2",119,0)
 ;
"RTN","IBCCC2",120,0)
INDEX ;index entire file (set logic)
"RTN","IBCCC2",121,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
"RTN","IBCCC2",122,0)
 Q
"RTN","IBCCC2",123,0)
 ;
"RTN","IBCCC2",124,0)
PRIOR(IBIFN) ; set Secondary/Tertiary Bill #s on prior bills, if the bill is cancelled remove it from prior bills
"RTN","IBCCC2",125,0)
 N IBSEQ,IBSEQN,IBM1,I,IBIFN1
"RTN","IBCCC2",126,0)
 S IBSEQ=$$COB^IBCEF(IBIFN)
"RTN","IBCCC2",127,0)
 S IBSEQN=$S(IBSEQ="S":6,IBSEQ="T":7,1:"") Q:'IBSEQN
"RTN","IBCCC2",128,0)
 ;
"RTN","IBCCC2",129,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1")) I +$P(^DGCR(399,IBIFN,0),U,13)=7 S IBIFN=""
"RTN","IBCCC2",130,0)
 F I=5,6 I I<IBSEQN  S IBIFN1=+$P(IBM1,U,I) I +IBIFN1,$D(^DGCR(399,+IBIFN1,0)) S $P(^DGCR(399,IBIFN1,"M1"),U,IBSEQN)=IBIFN
"RTN","IBCCC2",131,0)
 Q
"RTN","IBCCC2",132,0)
 ;
"RTN","IBCCC2",133,0)
COBCHG(IBIFN,IBINS,IBCOB) ; Make changes for a new COB payer for bill
"RTN","IBCCC2",134,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCCC2",135,0)
 ; IBINS = ien of bill's current insurance (optional)
"RTN","IBCCC2",136,0)
 ; IBCOB = array subscripted by node,piece of COB data field change
"RTN","IBCCC2",137,0)
 ;
"RTN","IBCCC2",138,0)
 N I,IBFRMTYP
"RTN","IBCCC2",139,0)
 ; Subtract the Prior Payments from the bill's Offset (these are re-added by triggers)
"RTN","IBCCC2",140,0)
 F I=4,5,6  S $P(^DGCR(399,IBIFN,"U1"),U,2)=$P($G(^DGCR(399,IBIFN,"U1")),U,2)-$P($G(^DGCR(399,IBIFN,"U2")),U,I)
"RTN","IBCCC2",141,0)
 ;
"RTN","IBCCC2",142,0)
 I $G(IBINS),$$MCRWNR^IBEFUNC(IBINS) D
"RTN","IBCCC2",143,0)
 . ;MCRWNR is current insurance ... move payer only
"RTN","IBCCC2",144,0)
 . N IBCOBN,IBX
"RTN","IBCCC2",145,0)
 . S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCCC2",146,0)
 . S IBCOB(0,15)=""
"RTN","IBCCC2",147,0)
 . S IBCOB(0,21)=$P("S^T^",U,IBCOBN)
"RTN","IBCCC2",148,0)
 . S IBCOB("M1",IBCOBN+4)=IBIFN
"RTN","IBCCC2",149,0)
 . S IBCOB("TX",1)="",IBCOB("TX",2)=""
"RTN","IBCCC2",150,0)
 . S IBX=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCCC2",151,0)
 . I IBX=0 S IBCOB("TX",5)=0                         ; MRA not needed
"RTN","IBCCC2",152,0)
 . I IBX["R" S IBCOB("TX",5)="A"                     ; MRA skipped
"RTN","IBCCC2",153,0)
 . I IBX=1,$$CHK^IBCEMU1(IBIFN) S IBCOB("TX",5)="C"  ; MRA on file
"RTN","IBCCC2",154,0)
 . I $G(IBPRCOB) S IBCOB("TX",5)="C"                 ; MRA being proc'd
"RTN","IBCCC2",155,0)
 . D PRIOR(IBIFN)
"RTN","IBCCC2",156,0)
 . Q
"RTN","IBCCC2",157,0)
 ;
"RTN","IBCCC2",158,0)
 ;reset fields for next Sequence Payer
"RTN","IBCCC2",159,0)
 F I=0,"M1","U2","TX" I $D(IBCOB(I)) D COB
"RTN","IBCCC2",160,0)
 ;
"RTN","IBCCC2",161,0)
 ; IB*2.0*211
"RTN","IBCCC2",162,0)
 ; save off Form Type
"RTN","IBCCC2",163,0)
 S IBFRMTYP=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC2",164,0)
 ;
"RTN","IBCCC2",165,0)
 ; fire xrefs set logic
"RTN","IBCCC2",166,0)
 D INDEX
"RTN","IBCCC2",167,0)
 ;
"RTN","IBCCC2",168,0)
 ; Restore Form Type if changed, but don't restore Form Type if
"RTN","IBCCC2",169,0)
 ;   creating HCFA bill from CTCOPY1^IBCCCB
"RTN","IBCCC2",170,0)
 I $G(IBCTCOPY)'=1,IBFRMTYP'=$P($G(^DGCR(399,IBIFN,0)),U,19) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBFRMTYP D ^DIE
"RTN","IBCCC2",171,0)
 ;
"RTN","IBCCC2",172,0)
 ; Restore Claim MRA Status field since triggers in fields 101 & 102
"RTN","IBCCC2",173,0)
 ;   will overwrite the correct value when processing the MRA/EOB.
"RTN","IBCCC2",174,0)
 ; If we're processing the MRA/EOB, then a valid MRA has been received.
"RTN","IBCCC2",175,0)
 I $G(IBPRCOB) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="24////C" D ^DIE
"RTN","IBCCC2",176,0)
 ;
"RTN","IBCCC2",177,0)
 K IBCOB("TX")
"RTN","IBCCC2",178,0)
 Q
"RTN","IBCCC2",179,0)
 ;
"RTN","IBCCCB")
0^29^B57071055
"RTN","IBCCCB",1,0)
IBCCCB ;ALB/ARH - COPY BILL FOR COB ;06-19-97
"RTN","IBCCCB",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,51,151,137,182,155**;21-MAR-94
"RTN","IBCCCB",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCCB",4,0)
 ;
"RTN","IBCCCB",5,0)
 ; Copy bill for COB w/out cancelling, update some flds
"RTN","IBCCCB",6,0)
 ; Primary->Secondary->Tertiary
"RTN","IBCCCB",7,0)
ASK ;
"RTN","IBCCCB",8,0)
 S IBCBCOPY=1 ; flag that copy function entered thru Copy COB option
"RTN","IBCCCB",9,0)
 ;
"RTN","IBCCCB",10,0)
 D KVAR S IBCAN=2,IBU="UNSPECIFIED"
"RTN","IBCCCB",11,0)
 ;
"RTN","IBCCCB",12,0)
 S IBX=$$PB^IBJTU2 S:+IBX=2 IBIFN=$P(IBX,U,2) I +IBX=1 S DFN=$P(IBX,U,2),IBV=1,IBAC=5 D DATE^IBCB
"RTN","IBCCCB",13,0)
 I '$G(IBIFN) G EXIT
"RTN","IBCCCB",14,0)
 ;
"RTN","IBCCCB",15,0)
 ; Restrict access to this process for REQUEST MRA bills in 2 Cases:
"RTN","IBCCCB",16,0)
 ; 1. No MRA EOB's on File for bill
"RTN","IBCCCB",17,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2,'$$CHK^IBCEMU1(IBIFN) D  G ASK
"RTN","IBCCCB",18,0)
 . W !!?4,"This bill is in a status of REQUEST MRA and it has No MRA EOB's"
"RTN","IBCCCB",19,0)
 . W !?4,"on file.  Access to this bill is restricted."
"RTN","IBCCCB",20,0)
 ;
"RTN","IBCCCB",21,0)
 ; 2. At least one MRA EOB appears on the MRA management worklist
"RTN","IBCCCB",22,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2,$$MRAWL^IBCEMU2(IBIFN) D  G ASK
"RTN","IBCCCB",23,0)
 . W !!?4,"This bill is in a status of REQUEST MRA and it does appear on the"
"RTN","IBCCCB",24,0)
 . W !?4,"MRA Management Work List.  Please use the 'MRA Management Menu' options"
"RTN","IBCCCB",25,0)
 . W !?4,"for all processing related to this bill."
"RTN","IBCCCB",26,0)
 . Q
"RTN","IBCCCB",27,0)
 ;
"RTN","IBCCCB",28,0)
 ; If MRA is Activated and bill is in Entered/Not Reviewed status and current insurance Co. is WNR -->
"RTN","IBCCCB",29,0)
 ; ask if user wants to continue
"RTN","IBCCCB",30,0)
 I $$EDIACTV^IBCEF4(2),$P($G(^DGCR(399,IBIFN,0)),U,13)=1,$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) D  I 'Y G ASK
"RTN","IBCCCB",31,0)
 . W !!?4,"This bill is in a status of ENTERED/NOT REVIEWED and current payer is "
"RTN","IBCCCB",32,0)
 . W !?4,"MEDICARE (WNR). No MRA has been requested for this bill."
"RTN","IBCCCB",33,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="    Are you sure you want to continue to process this bill?: "
"RTN","IBCCCB",34,0)
 . D ^DIR K DIR
"RTN","IBCCCB",35,0)
 ;
"RTN","IBCCCB",36,0)
 ; Display related bills
"RTN","IBCCCB",37,0)
 D DSPRB^IBCCCB0(IBIFN)
"RTN","IBCCCB",38,0)
 ;
"RTN","IBCCCB",39,0)
CHKB ; Entrypoint-COB processing via EDI's COB Mgmt
"RTN","IBCCCB",40,0)
 ; Ask if final EOB was received for previous bill
"RTN","IBCCCB",41,0)
 I '$$FINALEOB^IBCCCB0(IBIFN) S IBSECHK=1
"RTN","IBCCCB",42,0)
 I $G(IBSECHK)=1,$$MCRONBIL^IBEFUNC(IBIFN) G EXIT
"RTN","IBCCCB",43,0)
 ;
"RTN","IBCCCB",44,0)
 ; Warn if previous bill not at least authorized
"RTN","IBCCCB",45,0)
 I '$$MCRONBIL^IBEFUNC(IBIFN) I '$$COBOK^IBCCCB0(IBIFN) G EXIT
"RTN","IBCCCB",46,0)
 ;
"RTN","IBCCCB",47,0)
CHKB1 ; Entry point for Automatic/Silent COB Processing.
"RTN","IBCCCB",48,0)
 ; No writes or reads can occur from this point forward if variable
"RTN","IBCCCB",49,0)
 ; IBSILENT=1.  Any and all error messages should be processed with
"RTN","IBCCCB",50,0)
 ; the ERROR procedure below.
"RTN","IBCCCB",51,0)
 ;
"RTN","IBCCCB",52,0)
 S IBX=$G(^DGCR(399,+IBIFN,0)),DFN=$P(IBX,U,2),IBDT=$P(IBX,U,3)\1,IBER=""
"RTN","IBCCCB",53,0)
 I IBCAN>1 D NOPTF^IBCB2 I 'IBAC1 D NOPTF1^IBCB2 G ASK1
"RTN","IBCCCB",54,0)
 ;
"RTN","IBCCCB",55,0)
 F IBI=0,"S","U1","M","MP","M1" S IB(IBI)=$G(^DGCR(399,IBIFN,IBI))
"RTN","IBCCCB",56,0)
 I IB(0)="" S IBER="Invalid Bill Number" D ERROR G ASK1
"RTN","IBCCCB",57,0)
 ;
"RTN","IBCCCB",58,0)
 ; check to see if the bill has been cancelled
"RTN","IBCCCB",59,0)
 I $P(IB("S"),U,16),$P(IB("S"),U,17) D  G ASK1
"RTN","IBCCCB",60,0)
 . N WHO
"RTN","IBCCCB",61,0)
 . S IBER="This bill was cancelled on "
"RTN","IBCCCB",62,0)
 . S IBER=IBER_$$FMTE^XLFDT($P(IB("S"),U,17),"1Z")_" by "
"RTN","IBCCCB",63,0)
 . S WHO="UNSPECIFIED"
"RTN","IBCCCB",64,0)
 . I $P(IB("S"),U,18) S WHO=$P($G(^VA(200,$P(IB("S"),U,18),0)),U,1)
"RTN","IBCCCB",65,0)
 . S IBER=IBER_WHO_"."
"RTN","IBCCCB",66,0)
 . D ERROR
"RTN","IBCCCB",67,0)
 . Q
"RTN","IBCCCB",68,0)
 ;
"RTN","IBCCCB",69,0)
 S IBCOB=$$COB^IBCEF(IBIFN),IBCOBN=$TR(IBCOB,"PSTA","12")
"RTN","IBCCCB",70,0)
 S IBMRAIO=+$$CURR^IBCEF2(IBIFN),IBMRAO=$$MCRWNR^IBEFUNC(IBMRAIO)
"RTN","IBCCCB",71,0)
 S IBNMOLD=$S(IBCOB="P":"Primary",IBCOB="S":"Secondary",IBCOB="T":"Tertiary",IBCOB="A":"Patient",1:"")_$S(IBMRAO:"-MRA Only",1:"")
"RTN","IBCCCB",72,0)
 S IBINSOLD=$G(^DIC(36,$S(IB("MP"):+IB("MP"),IBMRAO:IBMRAIO,1:0),0))
"RTN","IBCCCB",73,0)
 ;
"RTN","IBCCCB",74,0)
NEXTP ; If current bill=MEDICARE WNR and valid 'next payer', use same
"RTN","IBCCCB",75,0)
 ;  bill for new payer
"RTN","IBCCCB",76,0)
 ; If next valid 'payer' is ins co or MEDICARE WNR, create new bill
"RTN","IBCCCB",77,0)
 S IBCOBN=IBCOBN+1,IBNM=$S(IBCOBN=2:"Secondary Payer",IBCOBN=3:"Tertiary Payer",1:"")
"RTN","IBCCCB",78,0)
 ;
"RTN","IBCCCB",79,0)
 I IBNM="" S IBER=$P(IB(0),U,1)_" is a "_IBNMOLD_" bill, there is no next bill in the series." D ERROR G ASK1
"RTN","IBCCCB",80,0)
 ;
"RTN","IBCCCB",81,0)
 S IBX=+$P(IB("M1"),U,(4+IBCOBN)),IBY=$G(^DGCR(399,+IBX,0)),IBCOBIL(+IBIFN)=""
"RTN","IBCCCB",82,0)
 ;
"RTN","IBCCCB",83,0)
 I $P(IBY,U,13)=7 S IBER="The "_$P(IBNM," ",1)_" bill "_$P(IBY,U,1)_" has been cancelled." D ERROR S IBX=""
"RTN","IBCCCB",84,0)
 ;
"RTN","IBCCCB",85,0)
 I +IBX,$D(IBCOBIL(+IBX)) S IBER="Next bill in series can not be determined." D ERROR G ASK1
"RTN","IBCCCB",86,0)
 I +IBX S IBER=$P(IBNM," ",1)_" bill already defined for this series: "_$P(IBY,U,1) D ERROR S IBIFN=IBX G ASK1
"RTN","IBCCCB",87,0)
 ;
"RTN","IBCCCB",88,0)
 S IBINSN=$P(IB("M"),U,IBCOBN) I 'IBINSN S IBER="There is no "_IBNM_" for "_$P(IB(0),U,1)_"." D ERROR G ASK1
"RTN","IBCCCB",89,0)
 S IBINS=$G(^DIC(36,+IBINSN,0)) I IBINS="" S IBER="The "_IBNM_" for "_$P(IB(0),U,1)_" is not a valid Insurance Co." D ERROR G ASK1
"RTN","IBCCCB",90,0)
 ;
"RTN","IBCCCB",91,0)
 S IBMRA=0
"RTN","IBCCCB",92,0)
 I $P(IBINS,U,2)="N" S IBQ=0 D  G:IBQ NEXTP
"RTN","IBCCCB",93,0)
 . I $$MCRWNR^IBEFUNC(IBINSN) D  Q
"RTN","IBCCCB",94,0)
 .. ; Check if a valid tert ins if MCR WNR secondary
"RTN","IBCCCB",95,0)
 .. I IBCOBN'>2 D
"RTN","IBCCCB",96,0)
 ... N Z
"RTN","IBCCCB",97,0)
 ... S Z=+$P(IB("M"),U,IBCOBN+1)
"RTN","IBCCCB",98,0)
 ... I Z,$D(^DIC(36,Z,0)),$P(^(0),U,2)'="N" S IBMRA=1,IBNM=$P(IBNM," ")_"-MRA.Only"
"RTN","IBCCCB",99,0)
 .. I 'IBMRA S IBER="MEDICARE will not reimburse and no further valid insurance for bill" D ERROR S IBQ=1
"RTN","IBCCCB",100,0)
 . S IBER=$P(IB(0),U,1)_" "_IBNM_", "_$P(IBINS,U,1)_", will not Reimburse" D ERROR S IBQ=1
"RTN","IBCCCB",101,0)
 ;
"RTN","IBCCCB",102,0)
 ; If processing in silent mode, skip over the following reads
"RTN","IBCCCB",103,0)
 I $G(IBSILENT) G SKIP
"RTN","IBCCCB",104,0)
 ;
"RTN","IBCCCB",105,0)
 W !!
"RTN","IBCCCB",106,0)
 S DIR("?")="Enter Yes to "_$S('$G(IBMRAO):"create a new bill in the bill series for this care.  The new bill will be the "_$P(IBNM," ")_" bill ",1:"enter the MRA information and change the payer to the "_$P($P(IBNM,"-")," ")_" payer ")
"RTN","IBCCCB",107,0)
 S DIR("?")=DIR("?")_$S('IBMRA:"with the "_IBNM_" responsible for payment.",1:"and will request an MRA from MEDICARE.")
"RTN","IBCCCB",108,0)
 S DIR(0)="YO",DIR("A")=$S('$G(IBMRAO):"Copy "_$P(IB(0),U,1)_" for a bill to the ",1:"Change payer on bill "_$P(IB(0),U,1)_" to ")_IBNM_", "_$P(IBINS,U,1) D ^DIR K DIR I Y'=1 S IBSECHK=1 G ASK1
"RTN","IBCCCB",109,0)
 ;
"RTN","IBCCCB",110,0)
 W !
"RTN","IBCCCB",111,0)
 S IBQ=0
"RTN","IBCCCB",112,0)
 I '$G(IBMRAO) D  G:IBQ ASK1
"RTN","IBCCCB",113,0)
 . N Z
"RTN","IBCCCB",114,0)
 . S DIR("?")="Enter the amount of the payment from the payer of the "_IBNMOLD_" bill."
"RTN","IBCCCB",115,0)
 . S DIR("?")=DIR("?")_"  This will be added to the new bill as a prior payment and subtracted from the charges due for the new bill."
"RTN","IBCCCB",116,0)
 . S DIR("A")="Prior Payment from "_$P(IB(0),U,1)_" "_IBNMOLD_" Payer, "_$P(IBINSOLD,U,1)_": "
"RTN","IBCCCB",117,0)
 . S Z=$$EOBTOT^IBCEU1(IBIFN,$$COBN^IBCEF(IBIFN))
"RTN","IBCCCB",118,0)
 . S:Z DIR("B")=Z
"RTN","IBCCCB",119,0)
 . S DIR(0)="NOA^0:99999999:2"
"RTN","IBCCCB",120,0)
 . D ^DIR K DIR I Y=""!$D(DIRUT) S IBQ=1
"RTN","IBCCCB",121,0)
 . K IBCOB
"RTN","IBCCCB",122,0)
 . S IBCOB("U2",IBCOBN+2)=Y
"RTN","IBCCCB",123,0)
 . Q
"RTN","IBCCCB",124,0)
 ;
"RTN","IBCCCB",125,0)
SKIP ; Jump here if skipping over the preceeding reads
"RTN","IBCCCB",126,0)
 ;
"RTN","IBCCCB",127,0)
 ; If payer is Medicare (WNR) update payer sequence and quit
"RTN","IBCCCB",128,0)
 I IBMRAO D  G END
"RTN","IBCCCB",129,0)
 . N IBPRTOT,IBTOTCHG,IBPTRESP
"RTN","IBCCCB",130,0)
 . S IBTOTCHG=0
"RTN","IBCCCB",131,0)
 . ; Get Total Submitted Charges from EOB file
"RTN","IBCCCB",132,0)
 . I $G(IBDA) S IBTOTCHG=$P($G(^IBM(361.1,IBDA,2)),U,4)
"RTN","IBCCCB",133,0)
 . ; Calculate Patient Responsibility for Bill
"RTN","IBCCCB",134,0)
 . S IBPTRESP=$$PREOBTOT^IBCEU0(IBIFN)
"RTN","IBCCCB",135,0)
 . ; Calculate Patient Primary/Secondary Prior Payment (field 218 or 219 of File 399)
"RTN","IBCCCB",136,0)
 . ; These fields are stored in DGCR(399,IBIFN,"U2") pieces 4 and 5 respectively
"RTN","IBCCCB",137,0)
 . ; Calculate: Prior Payment= Total Submitted Charges - Patient Responsibility
"RTN","IBCCCB",138,0)
 . S IBPRTOT=IBTOTCHG-IBPTRESP
"RTN","IBCCCB",139,0)
 . I IBPRTOT<0 S IBPRTOT=0      ; don't allow negative prior payment or offset
"RTN","IBCCCB",140,0)
 . S IBCOB("U2",IBCOBN+2)=IBPRTOT
"RTN","IBCCCB",141,0)
 . D COBCHG^IBCCC2(IBIFN,IBMRAIO,.IBCOB)
"RTN","IBCCCB",142,0)
 . D STAT^IBCEMU2(IBIFN,1.5,1)     ; mra eob status update
"RTN","IBCCCB",143,0)
 . I $G(IBSILENT) S IBERRMSG=""
"RTN","IBCCCB",144,0)
 . Q
"RTN","IBCCCB",145,0)
 ;
"RTN","IBCCCB",146,0)
 ; We should NOT get to here in silent mode .... just in case
"RTN","IBCCCB",147,0)
 I $G(IBSILENT) G END    ; currently only MCRWNR in silent mode
"RTN","IBCCCB",148,0)
 ;
"RTN","IBCCCB",149,0)
 ; Payer is not Medicare (WNR) - Perform additional steps
"RTN","IBCCCB",150,0)
 S IBCOB(0,15)=""
"RTN","IBCCCB",151,0)
 S IBCOB(0,21)=$S(IBCOBN=2:"S",IBCOBN=3:"T",1:"")
"RTN","IBCCCB",152,0)
 I IBCOB(0,21)="" G END
"RTN","IBCCCB",153,0)
 S IBCOB("M1",IBCOBN+3)=IBIFN
"RTN","IBCCCB",154,0)
 S IBIDS(.15)=IBIFN
"RTN","IBCCCB",155,0)
 D KVAR
"RTN","IBCCCB",156,0)
 G STEP2^IBCCC
"RTN","IBCCCB",157,0)
 ;
"RTN","IBCCCB",158,0)
END ;
"RTN","IBCCCB",159,0)
 Q
"RTN","IBCCCB",160,0)
 ;
"RTN","IBCCCB",161,0)
 ;
"RTN","IBCCCB",162,0)
ASK1 ; If entering thru EDI COB processing, don't ask for new bill, quit
"RTN","IBCCCB",163,0)
 I $G(IBCBASK) G EXIT
"RTN","IBCCCB",164,0)
 G ASK
"RTN","IBCCCB",165,0)
 ;
"RTN","IBCCCB",166,0)
ERROR ; Display/Save error message
"RTN","IBCCCB",167,0)
 I '$G(IBSILENT) W !,IBER,!
"RTN","IBCCCB",168,0)
 E  S IBERRMSG=IBER
"RTN","IBCCCB",169,0)
 S IBER=""
"RTN","IBCCCB",170,0)
 I $D(IBSECHK) S IBSECHK=1
"RTN","IBCCCB",171,0)
 Q
"RTN","IBCCCB",172,0)
 ;
"RTN","IBCCCB",173,0)
EXIT K IBCAN,IBCOB,IBU
"RTN","IBCCCB",174,0)
KVAR K IBX,IBY,IBI,IBIFN,DFN,IBDT,IB,IBCOBN,IBNMOLD,IBINSOLD,IBNM,IBINSN,IBINS,IBER,DIR,IBAC,IBAC1,IBV,X,Y,IBDATA,IBT,IBND0,DIRUT,IBCOBIL,IBMRA,IBMRAI,IBMRAO,IBMRAIO,IBCBCOPY
"RTN","IBCCCB",175,0)
 K ^UTILITY($J)
"RTN","IBCCCB",176,0)
 Q
"RTN","IBCCCB",177,0)
 ;
"RTN","IBCCCB",178,0)
DSPRB(IBIFN) ; display related bills
"RTN","IBCCCB",179,0)
 ;
"RTN","IBCCCB",180,0)
 D DSPRB^IBCCCB0(IBIFN) ; Code moved for size too big
"RTN","IBCCCB",181,0)
 Q
"RTN","IBCCCB",182,0)
 ;
"RTN","IBCCCB",183,0)
 ; ==============
"RTN","IBCCCB",184,0)
 ; 
"RTN","IBCCCB",185,0)
 ; Copy a bill for Reasonable Charges without cancelling it, update certain fields
"RTN","IBCCCB",186,0)
 ;
"RTN","IBCCCB",187,0)
 ; there is always both inpt inst (created first) and prof charges, always need both bills
"RTN","IBCCCB",188,0)
 ; there may be both outpt inst (created first) and prof charges, may not need both bills
"RTN","IBCCCB",189,0)
 ; if billing by episode rather than by day (current standard) then may need multiple prof bills per day
"RTN","IBCCCB",190,0)
 ; 
"RTN","IBCCCB",191,0)
 ; Inst bills are copied to create prof Bills automatically
"RTN","IBCCCB",192,0)
 ; Subsequent prof bills may be created if the user wants them
"RTN","IBCCCB",193,0)
 ;
"RTN","IBCCCB",194,0)
 ; Only the first bill in the COB series of bills should be copied for the next prof bill
"RTN","IBCCCB",195,0)
 ; The primary inst bill should be copied to get the secondary inst bill
"RTN","IBCCCB",196,0)
 ; The primary prof bill should be copied to get the secondary prof bill
"RTN","IBCCCB",197,0)
 ;
"RTN","IBCCCB",198,0)
CTCOPY(IBIFN,IBMRA) ; based on the type of bill, copy without cancelling
"RTN","IBCCCB",199,0)
 ; IBMRA = 1 if an MRA bill and copy for prof components is desired
"RTN","IBCCCB",200,0)
 ;
"RTN","IBCCCB",201,0)
 D CTCOPY^IBCCCB0(IBIFN,$G(IBMRA)) ;Moved due to routine size
"RTN","IBCCCB",202,0)
 Q
"RTN","IBCCCB",203,0)
 ;
"RTN","IBCCCB0")
0^50^B52541919
"RTN","IBCCCB0",1,0)
IBCCCB0 ;ALB/ARH - COPY BILL FOR COB (OVERFLOW) ;06-19-97
"RTN","IBCCCB0",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155**;21-MAR-94
"RTN","IBCCCB0",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCCB0",4,0)
 ;
"RTN","IBCCCB0",5,0)
DSPRB(IBIFN) ; display related bills
"RTN","IBCCCB0",6,0)
 ;
"RTN","IBCCCB0",7,0)
 N IBCOB,IBI,IBLABEL,IBJ,IBK,IBINS,IBAR,IBDS Q:'$G(IBIFN)
"RTN","IBCCCB0",8,0)
 S IBDS="------------------------------------------------------------------"
"RTN","IBCCCB0",9,0)
 D BCOB^IBCU3(IBIFN,.IBCOB) I $O(IBCOB(0)) D
"RTN","IBCCCB0",10,0)
 . W !!!,?13,"Payer Responsible",?33,"Bill #",?41,"Status",?49,"Original",?59,"Collected",?72,"Balance",!,?13,IBDS
"RTN","IBCCCB0",11,0)
 . S IBI=0  F  S IBI=$O(IBCOB(IBI)) Q:'IBI  D
"RTN","IBCCCB0",12,0)
 .. S IBLABEL=$S(IBI=1:"Primary",IBI=2:"Secondary",IBI=3:"Tertiary",1:"Other")_":",IBLABEL=$J(IBLABEL,10)
"RTN","IBCCCB0",13,0)
 .. S IBJ=0 F  S IBJ=$O(IBCOB(IBI,IBJ)) Q:'IBJ  D
"RTN","IBCCCB0",14,0)
 ... S IBK="" F  S IBK=$O(IBCOB(IBI,IBJ,IBK)) Q:IBK=""  D
"RTN","IBCCCB0",15,0)
 .... S IBINS=$G(^DIC(36,+IBJ,0))
"RTN","IBCCCB0",16,0)
 .... W !," ",IBLABEL,?13,$E($P(IBINS,U),1,18) S IBLABEL="" Q:'IBK
"RTN","IBCCCB0",17,0)
 .... S IBAR=$$BILL^RCJIBFN2(IBK)
"RTN","IBCCCB0",18,0)
 .... W ?33,$P($G(^DGCR(399,+IBK,0)),U)
"RTN","IBCCCB0",19,0)
 .... W ?43,$P($$STNO^RCJIBFN2(+$P(IBAR,U,2)),U,2)
"RTN","IBCCCB0",20,0)
 .... W ?47,$J($P(IBAR,U),10,2)
"RTN","IBCCCB0",21,0)
 .... W ?58,$J($P(IBAR,U,4),10,2)
"RTN","IBCCCB0",22,0)
 .... W ?69,$J($P(IBAR,U,3),10,2)
"RTN","IBCCCB0",23,0)
 I +$$IB^IBRUTL(IBIFN,0) W !!,?8,"* There are patient bills on Hold for the date range of this bill."
"RTN","IBCCCB0",24,0)
 W !!
"RTN","IBCCCB0",25,0)
 Q
"RTN","IBCCCB0",26,0)
 ;
"RTN","IBCCCB0",27,0)
CTCOPY(IBIFN,IBMRA) ; based on the type of bill, copy it without cancelling
"RTN","IBCCCB0",28,0)
 ; IBMRA = 1 if an MRA bill and copy for prof components is desired
"RTN","IBCCCB0",29,0)
 ;
"RTN","IBCCCB0",30,0)
 N IB0,IBCTYPE I +$G(IBCBCOPY) Q
"RTN","IBCCCB0",31,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBCTYPE=+$P(IB0,U,27) Q:'IBCTYPE
"RTN","IBCCCB0",32,0)
 I $S('$G(IBMRA):$P(IB0,U,21)'=$E($$BINS^IBCU3(+$G(IBIFN))),1:0) Q  ; don't copy if not first in series, current payer=first payer and not an MRA
"RTN","IBCCCB0",33,0)
 I IBCTYPE=1 D CTCOPY1(IBIFN) Q
"RTN","IBCCCB0",34,0)
 I IBCTYPE=2 D CTCOPY2(IBIFN) Q
"RTN","IBCCCB0",35,0)
 Q
"RTN","IBCCCB0",36,0)
 ;
"RTN","IBCCCB0",37,0)
CTCOPY1(IBIFN) ;  Copy a Reasonable Charges inst bill to create a prof bill:
"RTN","IBCCCB0",38,0)
 ;   - Billing Rate must be Reasonable Charges
"RTN","IBCCCB0",39,0)
 ;   - Bill being copied must be an inst bill
"RTN","IBCCCB0",40,0)
 ;   - Prof bill must not already exist for the event date
"RTN","IBCCCB0",41,0)
 ;   - If the bill is outpt at least one CPT must have prof charges
"RTN","IBCCCB0",42,0)
 ;   - Procedure codes are copied only if the care is outpt
"RTN","IBCCCB0",43,0)
 ;
"RTN","IBCCCB0",44,0)
 N IB0,IBU,IBBTYPE,IBBCTO,IBBCTN,IBBCTOD,IBBCTND,IBNOCPT,IBCTCOPY,IBX,IBHV,IBNOTC
"RTN","IBCCCB0",45,0)
 ;
"RTN","IBCCCB0",46,0)
 S IBCTCOPY=1 ; flag - the copy function entered to auto copy Inst->Prof
"RTN","IBCCCB0",47,0)
 ;
"RTN","IBCCCB0",48,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) Q:IB0=""  S IBU=$G(^("U")) Q:'IBU
"RTN","IBCCCB0",49,0)
 S IBBTYPE=$S($P(IB0,U,5)<3:"Inpatient",1:"Outpatient")
"RTN","IBCCCB0",50,0)
 ;
"RTN","IBCCCB0",51,0)
 S IBBCTO=$P(IB0,U,27),IBBCTN=0 I 'IBBCTO Q
"RTN","IBCCCB0",52,0)
 I IBBCTO=1 S IBBCTN=2 ; inst defined, create prof
"RTN","IBCCCB0",53,0)
 I 'IBBCTN Q
"RTN","IBCCCB0",54,0)
 ;
"RTN","IBCCCB0",55,0)
 I '$$BILLRATE^IBCRU3($P(IB0,U,7),$P(IB0,U,5),$P(IBU,U,1,2),"RC") Q  ; copy only reasonable charges bills
"RTN","IBCCCB0",56,0)
 ;
"RTN","IBCCCB0",57,0)
 S IBBCTOD=$S(IBBCTO=1:"INSTITUTIONAL",2:"PROFESSIONAL"),IBBCTND=$S(IBBCTN=1:"INSTITUTIONAL",2:"PROFESSIONAL")
"RTN","IBCCCB0",58,0)
 ;
"RTN","IBCCCB0",59,0)
 I $P(IB0,U,5)>2,'$$CPTCHG^IBCRCU1(IBIFN,"PROF") W !!!,"There are no Reasonable Charges Outpatient Professional charges for this bill,",!,"second bill not created.",!! Q
"RTN","IBCCCB0",60,0)
 ;
"RTN","IBCCCB0",61,0)
 W !!!,"This ",IBBTYPE," ",IBBCTOD," bill may have corresponding ",IBBCTND," charges."
"RTN","IBCCCB0",62,0)
 ;
"RTN","IBCCCB0",63,0)
 I '$G(^DGCR(399,IBIFN,"U1")) W !!,"The current bill has no charges defined, no second bill created." Q
"RTN","IBCCCB0",64,0)
 ;
"RTN","IBCCCB0",65,0)
 S IBX=$$CTCHK^IBCU41(IBIFN) I +IBX W !!,"There is an existing ",IBBTYPE," ",IBBCTND," bill (",$P($G(^DGCR(399,+IBX,0)),U,1),") that appears",!,"to correspond to this ",IBBCTOD," bill, second bill not created.",!! Q
"RTN","IBCCCB0",66,0)
 ;
"RTN","IBCCCB0",67,0)
 W !,"Creating an ",IBBTYPE," ",IBBCTND," bill.",!!
"RTN","IBCCCB0",68,0)
 ;
"RTN","IBCCCB0",69,0)
 S IBCOB(0,27)=IBBCTN
"RTN","IBCCCB0",70,0)
 S IBIDS(.15)=IBIFN D KVAR^IBCCCB
"RTN","IBCCCB0",71,0)
 ;
"RTN","IBCCCB0",72,0)
 I $P(IB0,U,5)<3 S IBNOCPT=1 ; do not copy inpt facility procedures (ICD) to inpt prof bill
"RTN","IBCCCB0",73,0)
 S IBNOTC=1 ; don't copy TC modifier from inst to prof bill
"RTN","IBCCCB0",74,0)
 D STEP2^IBCCC ; copy/create second bill
"RTN","IBCCCB0",75,0)
 ;
"RTN","IBCCCB0",76,0)
 I $G(IBHV("IBIFN1"))!(IBCTCOPY=1) D FTPRV^IBCEU5(+$G(IBHV("IBIFN1")),1) ; Change att to rend prov if new prof bill added
"RTN","IBCCCB0",77,0)
 S IBV=0,IBAC=1
"RTN","IBCCCB0",78,0)
 ;
"RTN","IBCCCB0",79,0)
 ; DSS QuadraMed Interface: CPT Sequence and Diagnosis Linkage
"RTN","IBCCCB0",80,0)
 I +$G(IBHV("IBIFN1")),$$QMED^IBCU1("CTCOPY^VEJDIBE1",IBHV("IBIFN1")) D CTCOPY^VEJDIBE1(IBHV("IBIFN1"))
"RTN","IBCCCB0",81,0)
 Q
"RTN","IBCCCB0",82,0)
 ;
"RTN","IBCCCB0",83,0)
CTCOPY2(IBIFN) ; Copy a Reasonable Charges prof bill to create another prof bill if user wants another:
"RTN","IBCCCB0",84,0)
 ;   - Billing Rate must be Reasonable Charges
"RTN","IBCCCB0",85,0)
 ;   - Bill being copied must be a prof bill
"RTN","IBCCCB0",86,0)
 ;   - Procedures are not copied
"RTN","IBCCCB0",87,0)
 ;
"RTN","IBCCCB0",88,0)
 N IB0,IBU,IBBTYPE,IBBCTO,IBNOCPT,IBCTCOPY,IBX,DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBCCCB0",89,0)
 ;
"RTN","IBCCCB0",90,0)
 S IBCTCOPY=2 ; flag indicating the copy function is entered to auto Copy prof->prof
"RTN","IBCCCB0",91,0)
 ;
"RTN","IBCCCB0",92,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) Q:IB0=""  S IBU=$G(^("U")) Q:'IBU
"RTN","IBCCCB0",93,0)
 S IBBTYPE=$S($P(IB0,U,5)<3:"Inpatient",1:"Outpatient")
"RTN","IBCCCB0",94,0)
 S IBBCTO=$P(IB0,U,27) I IBBCTO'=2 Q  ; prof bills only
"RTN","IBCCCB0",95,0)
 ;
"RTN","IBCCCB0",96,0)
 I '$$BILLRATE^IBCRU3($P(IB0,U,7),$P(IB0,U,5),$P(IBU,U,1,2),"RC") Q  ; copy only reasonable charges bills
"RTN","IBCCCB0",97,0)
 ;
"RTN","IBCCCB0",98,0)
 I '$G(^DGCR(399,IBIFN,"U1")) Q  ; if the current bill has no charges do not allow creation of another one
"RTN","IBCCCB0",99,0)
 ;
"RTN","IBCCCB0",100,0)
 ; ask if they want a second prof bill
"RTN","IBCCCB0",101,0)
 S DIR("?",1)="If answered Yes, the current bill will be copied, without being cancelled,"
"RTN","IBCCCB0",102,0)
 S DIR("?",2)="to create another Professional bill for the same dates of care.",DIR("?",3)=" "
"RTN","IBCCCB0",103,0)
 S DIR("?")="Enter Yes if multiple professional bills are needed for the care provided on this date."
"RTN","IBCCCB0",104,0)
 S DIR("A")="Copy this bill to create another Professional bill for this date now"
"RTN","IBCCCB0",105,0)
 W !! S DIR(0)="Y",DIR("B")="No" D ^DIR I $D(DIRUT)!('Y) Q
"RTN","IBCCCB0",106,0)
 ;
"RTN","IBCCCB0",107,0)
 W !,"Creating an ",IBBTYPE," Professional bill.",!!
"RTN","IBCCCB0",108,0)
 ;
"RTN","IBCCCB0",109,0)
 S IBIDS(.15)=IBIFN D KVAR^IBCCCB
"RTN","IBCCCB0",110,0)
 ;
"RTN","IBCCCB0",111,0)
 S IBNOCPT=1
"RTN","IBCCCB0",112,0)
 D STEP2^IBCCC ; copy/create second prof bill
"RTN","IBCCCB0",113,0)
 S IBV=0,IBAC=1
"RTN","IBCCCB0",114,0)
 Q
"RTN","IBCCCB0",115,0)
 ;
"RTN","IBCCCB0",116,0)
 ;
"RTN","IBCCCB0",117,0)
FINALEOB(IBIFN) ; Returns 1 if user indicates final EOB has been received
"RTN","IBCCCB0",118,0)
 ; from prior payer
"RTN","IBCCCB0",119,0)
 N DIR,X,Y,IBOK
"RTN","IBCCCB0",120,0)
 S IBOK=0
"RTN","IBCCCB0",121,0)
 I '$$MCRONBIL^IBEFUNC(IBIFN) D  G FEOBQ
"RTN","IBCCCB0",122,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="Has the final EOB been received for this claim?: "
"RTN","IBCCCB0",123,0)
 . S DIR("?",1)="COB should not normally be performed until the claim is fully processed by the",DIR("?",2)="prior payer.  Enter Y (yes) if the prior payer's final EOB has",DIR("?")="been received"
"RTN","IBCCCB0",124,0)
 . D ^DIR K DIR
"RTN","IBCCCB0",125,0)
 . I Y'=0 S IBOK=$S(Y>0:1,1:0)
"RTN","IBCCCB0",126,0)
 I $$SPLTMRA^IBCEMU1(IBIFN)=1 D  G FEOBQ
"RTN","IBCCCB0",127,0)
 . W !!," Only one MRA has been received for this claim.  The MRA on file indicates"
"RTN","IBCCCB0",128,0)
 . W !," that it is a 'split MRA' meaning that additional MRA's are needed."
"RTN","IBCCCB0",129,0)
 . W !," Processing cannot continue until all MRA's have been received for this claim."
"RTN","IBCCCB0",130,0)
 . W ! S DIR(0)="E" D ^DIR K DIR
"RTN","IBCCCB0",131,0)
 . Q
"RTN","IBCCCB0",132,0)
 ;
"RTN","IBCCCB0",133,0)
 I $$SPLTMRA^IBCEMU1(IBIFN)>1 D
"RTN","IBCCCB0",134,0)
 . W !!," At least 2 MRA's have been received for this claim."
"RTN","IBCCCB0",135,0)
 . W !,"Please verify that all possible MRA's have been received for",!,"this claim before processing.",!
"RTN","IBCCCB0",136,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A")="Are you sure you want to continue to process this COB?: "
"RTN","IBCCCB0",137,0)
 D ^DIR K DIR
"RTN","IBCCCB0",138,0)
 W !
"RTN","IBCCCB0",139,0)
 S IBOK=$S(Y'=1:0,1:1)
"RTN","IBCCCB0",140,0)
FEOBQ Q IBOK
"RTN","IBCCCB0",141,0)
 ;
"RTN","IBCCCB0",142,0)
 ;
"RTN","IBCCCB0",143,0)
COBOK(IBIFN) ; Returns 1 if user indicates the COB process should proceed
"RTN","IBCCCB0",144,0)
 ; even though the prior payer's bill is still in ENTERED/NOT REVIEWED
"RTN","IBCCCB0",145,0)
 ; or REQUEST MRA status (1,2)
"RTN","IBCCCB0",146,0)
 N DIR,X,Y,IBOK,IBSTAT
"RTN","IBCCCB0",147,0)
 S IBOK=0,IBSTAT=$P($G(^DGCR(399,IBIFN,0)),U,13)
"RTN","IBCCCB0",148,0)
 I "^1^2"'[(U_IBSTAT_U) S IBOK=1 G COBOKQ
"RTN","IBCCCB0",149,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","IBCCCB0",150,0)
 S DIR("A",1)="The bill for the prior ("_$P("primary^secondary",U,+$$COBN^IBCEF(IBIFN))_") payer is still in "_$$EXTERNAL^DILFD(399,.13,,IBSTAT)_" status"
"RTN","IBCCCB0",151,0)
 S DIR("A")="Are you sure you want to continue to process this COB?: "
"RTN","IBCCCB0",152,0)
 D ^DIR K DIR
"RTN","IBCCCB0",153,0)
 W !
"RTN","IBCCCB0",154,0)
 S IBOK=$S(Y'=1:0,1:1)
"RTN","IBCCCB0",155,0)
COBOKQ Q IBOK
"RTN","IBCCCB0",156,0)
 ;
"RTN","IBCE277")
0^81^B56792508
"RTN","IBCE277",1,0)
IBCE277 ;ALB/TMP - 277 EDI CLAIM STATUS MESSAGE PROCESSING ;15-JUL-98
"RTN","IBCE277",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-94
"RTN","IBCE277",3,0)
 Q
"RTN","IBCE277",4,0)
 ; MESSAGE HEADER DATA STRING =
"RTN","IBCE277",5,0)
 ;   type of message^msg queue^msg #^bill #^REF NUM/Batch #^date/time
"RTN","IBCE277",6,0)
 ;
"RTN","IBCE277",7,0)
HDR(ENTITY,ENTVAL,IBTYPE,IBD) ;Process header data
"RTN","IBCE277",8,0)
 ; INPUT:
"RTN","IBCE277",9,0)
 ;   ENTITY = "BATCH" if batch level message
"RTN","IBCE277",10,0)
 ;            "CLAIM" if claim level message
"RTN","IBCE277",11,0)
 ;   ENTVAL = batch # or claim #
"RTN","IBCE277",12,0)
 ;   IBTYPE = the type of status msg this piece of the message represents
"RTN","IBCE277",13,0)
 ;             (837REC1, 837REJ1)
"RTN","IBCE277",14,0)
 ;   ^TMP("IBMSGH",$J,0) = header message text
"RTN","IBCE277",15,0)
 ;
"RTN","IBCE277",16,0)
 ; OUTPUT:
"RTN","IBCE277",17,0)
 ;   IBD array returned with processed data
"RTN","IBCE277",18,0)
 ;      "LINE" = The last line # populated in the message
"RTN","IBCE277",19,0)
 ;      "DATE" = Date/Time of status (Fileman format)
"RTN","IBCE277",20,0)
 ;      "MRA" =  1 if MRA, 0 if not         "X12" = 1 if X12, 0 if not
"RTN","IBCE277",21,0)
 ;      "BATCH" = Batch ien for batch level calls
"RTN","IBCE277",22,0)
 ;      "SOURCE" = Source of message code^source name, if known
"RTN","IBCE277",23,0)
 ;
"RTN","IBCE277",24,0)
 ;   ^TMP("IBMSG",$J,"BATCH",batch #,0)=MESSAGE HEADER DATA STRING
"RTN","IBCE277",25,0)
 ;                                      if called from batch level
"RTN","IBCE277",26,0)
 ;                                  ,"D",0,1)=header record raw data
"RTN","IBCE277",27,0)
 ;                                  ,line #)=batch status message lines
"RTN","IBCE277",28,0)
 ;
"RTN","IBCE277",29,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,0)=MESSAGE HEADER DATA STRING
"RTN","IBCE277",30,0)
 ;                                      if called from claim level
"RTN","IBCE277",31,0)
 ;                                  ,"D",0,1)=header record raw data
"RTN","IBCE277",32,0)
 ;                                  ,line #)=claim status message lines
"RTN","IBCE277",33,0)
 ;
"RTN","IBCE277",34,0)
 N CT,CT1,IBBILL,IBD0,L,LINE,PC,Z,X,Y
"RTN","IBCE277",35,0)
 S IBD0=$G(^TMP("IBMSGH",$J,0)),IBD("LINE")=0
"RTN","IBCE277",36,0)
 Q:IBD0=""
"RTN","IBCE277",37,0)
 S Y=0,X=$$DATE($P(IBD0,U,3))_"@"_$E($P(IBD0,U,4)_"0000",1,4)
"RTN","IBCE277",38,0)
 I X S %DT="XTS" D ^%DT
"RTN","IBCE277",39,0)
 S IBD("DATE")=$S(Y>0:Y,1:"")
"RTN","IBCE277",40,0)
 S IBD("MRA")=$P(IBD0,U,5),IBD("X12")=($P(IBD0,U,2)="X")
"RTN","IBCE277",41,0)
 S IBD("SOURCE")=$P(IBD0,U,12,13)
"RTN","IBCE277",42,0)
 S CT=0
"RTN","IBCE277",43,0)
 ;
"RTN","IBCE277",44,0)
 I ENTITY="BATCH",ENTVAL'="" D  ;Only pertinent for batch level extract
"RTN","IBCE277",45,0)
 . S IBD("BATCH")=$O(^IBA(364.1,"B",ENTVAL,0))
"RTN","IBCE277",46,0)
 . F PC=6:1:9 D
"RTN","IBCE277",47,0)
 .. I $P(IBD0,U,PC)'="" S DATA=$P("# Claims Submitted^# Claims Rejected^Total Charges Submitted^Total Charges Rejected",U,PC-5)_": "_$S(PC<8:+$P(IBD0,U,PC),1:$FNUMBER($P(IBD0,U,PC)/100,"",2))_"  "
"RTN","IBCE277",48,0)
 .. I CT,$L($G(LINE(CT)))+$L(DATA)>80 S CT=CT+1
"RTN","IBCE277",49,0)
 .. S:'CT CT=1 S LINE(CT)=$G(LINE(CT))_DATA
"RTN","IBCE277",50,0)
 ;
"RTN","IBCE277",51,0)
 I ENTVAL'="",$TR($P(IBD0,U,10,13),U)'="" S CT1=CT,CT=CT+1 F PC=10,11,12 D  ;Both batch, claim levels extract
"RTN","IBCE277",52,0)
 . Q:$P(IBD0,U,PC)=""
"RTN","IBCE277",53,0)
 . I PC<12 S LINE(CT)=$G(LINE(CT))_$P("Payer Name^Payer ID",U,PC-9)_": "_$P(IBD0,U,PC)_"  ",CT1=CT Q
"RTN","IBCE277",54,0)
 . I $P(IBD0,U,12)'=""!($P(IBD0,U,13)'="") S:$P(IBD0,U,10)'=""!($P(IBD0,U,11)'="") CT=CT+1 S LINE(CT)="Source: "_$S($P(IBD0,U,12)="Y":"Sent by payer",$P(IBD0,U,13)'="":"Sent by non-payer ("_$P(IBD0,U,13)_")",1:"UNKNOWN")_"  "
"RTN","IBCE277",55,0)
 ;
"RTN","IBCE277",56,0)
 I CT D
"RTN","IBCE277",57,0)
 . S (L,Z)=0
"RTN","IBCE277",58,0)
 . F  S Z=$O(LINE(Z)) Q:'Z  S L=L+1,^TMP("IBMSG-H",$J,ENTITY,ENTVAL,L)=LINE(Z)
"RTN","IBCE277",59,0)
 . ;S IBD("LINE")=$G(IBD("LINE"))+CT
"RTN","IBCE277",60,0)
 ;
"RTN","IBCE277",61,0)
 I ENTITY="CLAIM" D
"RTN","IBCE277",62,0)
 . N Z0
"RTN","IBCE277",63,0)
 . S Z0=+$O(^DGCR(399,"B",ENTVAL,0))
"RTN","IBCE277",64,0)
 . I $G(IBD("BATCH")) S IBBILL=$O(^IBA(364,"ABABI",+$G(IBD("BATCH")),Z0,""),-1) Q
"RTN","IBCE277",65,0)
 . S IBBILL=$$LAST364^IBCEF4(Z0)
"RTN","IBCE277",66,0)
 S ^TMP("IBMSG",$J,ENTITY,ENTVAL,0)=IBTYPE_U_$G(IBD("MSG#"))_U_$G(IBD("SUBJ"))_U_$S(ENTITY="CLAIM":IBBILL,1:"")_U_$S(ENTITY="BATCH":ENTVAL,1:"")_U_IBD("DATE")_U_IBD("SOURCE")
"RTN","IBCE277",67,0)
 ;
"RTN","IBCE277",68,0)
 S ^TMP("IBMSG",$J,ENTITY,ENTVAL,"D",0,1)="##RAW DATA: "_IBD0
"RTN","IBCE277",69,0)
 Q
"RTN","IBCE277",70,0)
 ;
"RTN","IBCE277",71,0)
5(IBD) ; Process batch status data
"RTN","IBCE277",72,0)
 ; INPUT:
"RTN","IBCE277",73,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE277",74,0)
 ; OUTPUT:
"RTN","IBCE277",75,0)
 ;   IBD array returned with processed data
"RTN","IBCE277",76,0)
 ;      "LINE" = The last line # populated in the message
"RTN","IBCE277",77,0)
 ;
"RTN","IBCE277",78,0)
 ;   ^TMP("IBMSG",$J,"BATCH",batch #,line#)=batch status message lines
"RTN","IBCE277",79,0)
 ;                                  ,"D",5,msg seq #)=
"RTN","IBCE277",80,0)
 ;                                       batch status message raw data
"RTN","IBCE277",81,0)
 ;
"RTN","IBCE277",82,0)
 N CT,DATA,IBBTCH,IBTYPE,L,LINE,Z
"RTN","IBCE277",83,0)
 K ^TMP("IBCONF",$J)
"RTN","IBCE277",84,0)
 S IBBTCH=+$P(IBD,U,2)
"RTN","IBCE277",85,0)
 S IBTYPE=$S($P(IBD,U,3)="R":"837REJ1",1:"837REC1")
"RTN","IBCE277",86,0)
 I '$D(^TMP("IBMSG",$J,"BATCH",IBBTCH)) D HDR("BATCH",IBBTCH,IBTYPE,.IBD) ;Process header data if not already done for batch
"RTN","IBCE277",87,0)
 S CT=0,LINE(1)=""
"RTN","IBCE277",88,0)
 S DATA=$P(IBD,U,4)
"RTN","IBCE277",89,0)
 I DATA'="",$TR($P(IBD,U,5,7),U)'="" D
"RTN","IBCE277",90,0)
 . Q:$G(^TMP("IBMSG",$J,"BATCH",IBBTCH))=DATA
"RTN","IBCE277",91,0)
 . S:'CT CT=CT+1 S LINE(CT)=$G(LINE(CT))_$S(DATA="W":"Warning",DATA="E":"Error",1:"Informational")_"  "
"RTN","IBCE277",92,0)
 S ^TMP("IBMSG",$J,"BATCH",IBBTCH)=DATA
"RTN","IBCE277",93,0)
 I $P(IBD,U,5)'="" S:'CT CT=CT+1 S LINE(CT)=$G(LINE(CT))_"Code: "_$P(IBD,U,5)
"RTN","IBCE277",94,0)
 I $P(IBD,U,6)'="" S:'CT CT=CT+1 S LINE(CT)=$G(LINE(CT))_"  "_$P(IBD,U,6),CT=CT+1
"RTN","IBCE277",95,0)
 I $P(IBD,U,7)'="" S:'CT CT=CT+1 S LINE(CT)=$G(LINE(CT))_"  "_$P(IBD,U,7)
"RTN","IBCE277",96,0)
 I CT D
"RTN","IBCE277",97,0)
 . S L=$G(IBD("LINE")),Z=0
"RTN","IBCE277",98,0)
 . F  S Z=$O(LINE(Z)) Q:'Z  S L=L+1,^TMP("IBMSG",$J,"BATCH",IBBTCH,L)=LINE(Z)
"RTN","IBCE277",99,0)
 . S ^TMP("IBMSG",$J,"BATCH",IBBTCH,"D",5,$O(^TMP("IBMSG",$J,"BATCH",IBBTCH,"D",5,""),-1)+1)="##RAW DATA: "_IBD
"RTN","IBCE277",100,0)
 . S IBD("LINE")=$G(IBD("LINE"))+CT
"RTN","IBCE277",101,0)
 Q
"RTN","IBCE277",102,0)
 ;
"RTN","IBCE277",103,0)
10(IBD) ; Process claim status data
"RTN","IBCE277",104,0)
 ; INPUT:
"RTN","IBCE277",105,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE277",106,0)
 ; OUTPUT:
"RTN","IBCE277",107,0)
 ;   IBD array returned with processed data
"RTN","IBCE277",108,0)
 ;      "CLAIM" = The claim #
"RTN","IBCE277",109,0)
 ;      "LINE" = The last line # populated in the message
"RTN","IBCE277",110,0)
 ;
"RTN","IBCE277",111,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,line#)=claim status message lines
"RTN","IBCE277",112,0)
 ;                                  ,"D",10,msg seq #)=
"RTN","IBCE277",113,0)
 ;                                       claim status raw data
"RTN","IBCE277",114,0)
 ;   ^TMP("IBCONF",$J,claim #")="" for invalid claims within the batch
"RTN","IBCE277",115,0)
 ;
"RTN","IBCE277",116,0)
 N CT,DATA,IBCLM,IBTYPE,L,LINE,Z
"RTN","IBCE277",117,0)
 S IBCLM=$$GETCLM($P(IBD,U,2))
"RTN","IBCE277",118,0)
 Q:IBCLM=""
"RTN","IBCE277",119,0)
 S:$P(IBD,U,3)="R" ^TMP("IBCONF",$J,+$O(^DGCR(399,"B",IBCLM,0)))=""
"RTN","IBCE277",120,0)
 S IBTYPE=$S($P(IBD,U,3)="R":"837REJ1",1:"837REC1")
"RTN","IBCE277",121,0)
 I '$D(^TMP("IBMSG",$J,"CLAIM",IBCLM)) D HDR("CLAIM",IBCLM,IBTYPE,.IBD) ;Process header data if not already done for claim
"RTN","IBCE277",122,0)
 I IBTYPE="837REJ1",$P($G(^TMP("IBMSG",$J,"CLAIM",IBCLM,0)),U,1)'="837REJ1" D HDR("CLAIM",IBCLM,IBTYPE,.IBD)
"RTN","IBCE277",123,0)
 S CT=0,DATA=$P(IBD,U,4)
"RTN","IBCE277",124,0)
 I DATA'="",$TR($P(IBD,U,5,7),U)'="" D
"RTN","IBCE277",125,0)
 . Q:$G(^TMP("IBMSG",$J,"CLAIM",IBCLM))=DATA
"RTN","IBCE277",126,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBCLM)=DATA
"RTN","IBCE277",127,0)
 . S CT=CT+1,LINE(CT)=$G(LINE(CT))_$S(DATA="W":"Warning",DATA="E":"Error",1:"Informational")_"  "
"RTN","IBCE277",128,0)
 I $P(IBD,U,5)'="" S CT=$S('CT:1,1:CT),LINE(CT)=$G(LINE(CT))_"Code: "_$P(IBD,U,5)
"RTN","IBCE277",129,0)
 I $P(IBD,U,6)'="" S CT=$S('CT:1,1:CT),LINE(CT)=$G(LINE(CT))_"  "_$P(IBD,U,6)
"RTN","IBCE277",130,0)
 I $P(IBD,U,7)'="" S CT=CT+1,LINE(CT)="  "_$P(IBD,U,7)
"RTN","IBCE277",131,0)
 I CT D
"RTN","IBCE277",132,0)
 . S L=$G(IBD("LINE")),Z=0
"RTN","IBCE277",133,0)
 . F  S Z=$O(LINE(Z)) Q:'Z  S L=L+1,^TMP("IBMSG",$J,"CLAIM",IBCLM,L)=LINE(Z)
"RTN","IBCE277",134,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",10,$O(^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",10,""),-1)+1)="##RAW DATA: "_IBD
"RTN","IBCE277",135,0)
 . S IBD("LINE")=$G(IBD("LINE"))+CT
"RTN","IBCE277",136,0)
 Q
"RTN","IBCE277",137,0)
 ;
"RTN","IBCE277",138,0)
15(IBD) ; Process subscriber/patient data
"RTN","IBCE277",139,0)
 ; Claim must have been referenced by a previous '10' level
"RTN","IBCE277",140,0)
 ; INPUT:
"RTN","IBCE277",141,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE277",142,0)
 ;
"RTN","IBCE277",143,0)
 ; OUTPUT:
"RTN","IBCE277",144,0)
 ;      IBD("LINE") = The last line # populated in the message
"RTN","IBCE277",145,0)
 ;
"RTN","IBCE277",146,0)
 ;     ^TMP("IBMSG",$J,"CLAIM",claim #,line#)=formatted service dates
"RTN","IBCE277",147,0)
 ;                                    ,"D",15,msg seq #)=
"RTN","IBCE277",148,0)
 ;                                         subscr/patient raw data
"RTN","IBCE277",149,0)
 ;
"RTN","IBCE277",150,0)
 N CT,Z,L,LINE,DATA,IBCLM,IBNM,IBNUM,IBDFN
"RTN","IBCE277",151,0)
 S IBCLM=$$GETCLM($P(IBD,U,2)),CT=0,L=$G(IBD("LINE"))
"RTN","IBCE277",152,0)
 Q:$S(IBCLM="":1,1:'$D(^TMP("IBMSG",$J,"CLAIM",IBCLM)))
"RTN","IBCE277",153,0)
 S IBDFN=+$G(^DGCR(+$O(^DGCR(399,"B",IBCLM,0)),0))
"RTN","IBCE277",154,0)
 S IBNM=$S($P(IBD,U,3)'="":$P(IBD,U,3)_","_$P(IBD,U,4)_$S($P(IBD,U,5)'="":" "_$P(IBD,U,5),1:""),1:$P($G(^DPT(IBDFN,0)),U))
"RTN","IBCE277",155,0)
 S IBNUM=$S($P(IBD,U,6)'="":$P(IBD,U,6),1:$P($G(^DPT(IBDFN,0)),U,9))
"RTN","IBCE277",156,0)
 S CT=CT+1,LINE(CT)="Patient: "_IBNM_"   "_IBNUM
"RTN","IBCE277",157,0)
 I $P(IBD,U,11) D
"RTN","IBCE277",158,0)
 . S DATA=$$DATE($P(IBD,U,11)),CT=CT+1
"RTN","IBCE277",159,0)
 . S LINE(CT)="Service Dates: "_DATA_" - "_$S($P(IBD,U,12):$$DATE($P(IBD,U,12)),1:DATA)_"  "
"RTN","IBCE277",160,0)
 . ; Add additional lines of display data here for record 15
"RTN","IBCE277",161,0)
 S Z=0 F  S Z=$O(LINE(Z)) Q:'Z  S L=L+1,^TMP("IBMSG",$J,"CLAIM",IBCLM,L)=LINE(Z)
"RTN","IBCE277",162,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",15,$O(^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",15,""),-1)+1)="##RAW DATA: "_IBD
"RTN","IBCE277",163,0)
 S IBD("LINE")=$G(IBD("LINE"))+CT
"RTN","IBCE277",164,0)
 Q
"RTN","IBCE277",165,0)
 ;
"RTN","IBCE277",166,0)
20(IBD) ; Process service line status data
"RTN","IBCE277",167,0)
 ; Claim must have been referenced by a previous '10' level
"RTN","IBCE277",168,0)
 ; INPUT:
"RTN","IBCE277",169,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE277",170,0)
 ; OUTPUT:
"RTN","IBCE277",171,0)
 ;   IBD array returned with processed data
"RTN","IBCE277",172,0)
 ;      "LINE" = The last line # populated in the message
"RTN","IBCE277",173,0)
 ;      "TYPE" = The msg type of status record (Confirmation/rejection)
"RTN","IBCE277",174,0)
 ;             Note: returned if not already set at batch or claim level
"RTN","IBCE277",175,0)
 ;
"RTN","IBCE277",176,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #)=""
"RTN","IBCE277",177,0)
 ;                                  ,line#)=service line status msg lines
"RTN","IBCE277",178,0)
 ;                                  ,"D",20,msg seq #)=
"RTN","IBCE277",179,0)
 ;                                       service line status raw data
"RTN","IBCE277",180,0)
 ;
"RTN","IBCE277",181,0)
 N CT,DATA,L,LINE,Z,IBCLM,IBLNUM
"RTN","IBCE277",182,0)
 S IBCLM=$$GETCLM($P(IBD,U,2)),IBLNUM=$P(IBD,U,8)
"RTN","IBCE277",183,0)
 Q:'$D(^TMP("IBMSG",$J,"CLAIM",IBCLM))
"RTN","IBCE277",184,0)
 S CT=0
"RTN","IBCE277",185,0)
 I IBLNUM'="" S CT=CT+1,LINE(CT)="Claim Line: "_IBLNUM,^TMP("IBMSG",$J,"LINE",IBCLM,IBLNUM)=""
"RTN","IBCE277",186,0)
 S DATA=$P(IBD,U,4)
"RTN","IBCE277",187,0)
 I DATA'="",$TR($P(IBD,U,5,7),U)'="" S:'CT CT=CT+1 S LINE(CT)=$S(DATA="W":"Warning",DATA="E":"Error",1:"Informational")_"  "_$G(LINE(CT))
"RTN","IBCE277",188,0)
 S:$G(IBD("TYPE"))="" IBD("TYPE")=$S(DATA="E":"837REJ1",1:"837REC1")
"RTN","IBCE277",189,0)
 I $P(IBD,U,5)'="" S:'CT CT=CT+1 S LINE(CT)=LINE(CT)_$P(IBD,U,5)
"RTN","IBCE277",190,0)
 I $P(IBD,U,6)'="" S CT=CT+1,LINE(CT)="  "_$P(IBD,U,6)
"RTN","IBCE277",191,0)
 I $P(IBD,U,7)'="" S CT=CT+1,LINE(CT)="  "_$P(IBD,U,7)
"RTN","IBCE277",192,0)
 I CT D
"RTN","IBCE277",193,0)
 . S L=$G(IBD("LINE")),Z=0
"RTN","IBCE277",194,0)
 . F  S Z=$O(LINE(Z)) Q:'Z  S L=L+1,^TMP("IBMSG",$J,"CLAIM",IBCLM,L)=LINE(Z)
"RTN","IBCE277",195,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",20,$O(^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",20,""),-1)+1)="##RAW DATA: "_IBD
"RTN","IBCE277",196,0)
 . S IBD("LINE")=$G(IBD("LINE"))+CT
"RTN","IBCE277",197,0)
 Q
"RTN","IBCE277",198,0)
 ;
"RTN","IBCE277",199,0)
21(IBD) ; Process service line ID data
"RTN","IBCE277",200,0)
 ; Moved for size too big
"RTN","IBCE277",201,0)
 D 21^IBCE277A(IBD)
"RTN","IBCE277",202,0)
 Q
"RTN","IBCE277",203,0)
 ;
"RTN","IBCE277",204,0)
DATE(DT) ; Convert YYMMDD Date into MM/DD/YY or YYYYMMDD into MM/DD/YYYY
"RTN","IBCE277",205,0)
 N D,Y
"RTN","IBCE277",206,0)
 S D=DT,Y=""
"RTN","IBCE277",207,0)
 I $L(DT)=8 S D=$E(DT,3,8),Y=$E(DT,1,2)
"RTN","IBCE277",208,0)
 Q ($E(D,3,4)_"/"_$E(D,5,6)_"/"_Y_$E(D,1,2))
"RTN","IBCE277",209,0)
 ;
"RTN","IBCE277",210,0)
GETCLM(X) ; Extract the claim # without site id from the data in X
"RTN","IBCE277",211,0)
 N IBCLM
"RTN","IBCE277",212,0)
 S IBCLM=$P(X,"-",2)
"RTN","IBCE277",213,0)
 I IBCLM="",X'="" S IBCLM=$E(X,$S($L(X)>7:4,1:1),$L(X))
"RTN","IBCE277",214,0)
 ;S IBCLM=$E(X,$L(IBCLM)-6,$L(IBCLM)) ; Only take last 7 char
"RTN","IBCE277",215,0)
 Q IBCLM
"RTN","IBCE277",216,0)
 ;
"RTN","IBCE835")
0^21^B36249252
"RTN","IBCE835",1,0)
IBCE835 ;ALB/TMP - 835 EDI EXPLANATION OF BENEFITS MSG PROCESSING ;19-JAN-99
"RTN","IBCE835",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,155**;21-MAR-94
"RTN","IBCE835",3,0)
 Q
"RTN","IBCE835",4,0)
 ;
"RTN","IBCE835",5,0)
 ; MESSAGE HEADER DATA STRING =
"RTN","IBCE835",6,0)
 ;   type of message^msg queue^msg #^bill #^^date/time
"RTN","IBCE835",7,0)
 ;
"RTN","IBCE835",8,0)
HDR(IBCLNO,IBD) ;Process header data
"RTN","IBCE835",9,0)
 ; INPUT:
"RTN","IBCE835",10,0)
 ;   IBCLNO = claim #
"RTN","IBCE835",11,0)
 ;
"RTN","IBCE835",12,0)
 ;   ^TMP("IBMSGH",$J,0) = header message text
"RTN","IBCE835",13,0)
 ;
"RTN","IBCE835",14,0)
 ; OUTPUT:
"RTN","IBCE835",15,0)
 ;   IBD array returned with processed data
"RTN","IBCE835",16,0)
 ;      "LINE"  = The last line # populated in the message
"RTN","IBCE835",17,0)
 ;      "DATE"  = Date/Time of EOB (Fileman format)
"RTN","IBCE835",18,0)
 ;      "MRA"   = 1 if MRA, 0 if not
"RTN","IBCE835",19,0)
 ;      "X12"   = 1 if X12, 0 if not
"RTN","IBCE835",20,0)
 ;
"RTN","IBCE835",21,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,0)=MESSAGE HEADER DATA STRING
"RTN","IBCE835",22,0)
 ;                                  ,"D",0,1)=header record raw data
"RTN","IBCE835",23,0)
 ;                                  ,"D1",1,0)=header record raw data
"RTN","IBCE835",24,0)
 ;                                  ,line #)=EOB message lines
"RTN","IBCE835",25,0)
 ;
"RTN","IBCE835",26,0)
 N CT,IB399,IBD0,IBBILL,LINE,L,X,Y,Z,%DT
"RTN","IBCE835",27,0)
 S IBD0=$G(^TMP("IBMSGH",$J,0)),IBD("LINE")=0
"RTN","IBCE835",28,0)
 Q:IBD0=""
"RTN","IBCE835",29,0)
 S X=$P(IBD0,U,3),X=$E(X,5,8)_$E(X,1,4)_"@"_$P(IBD0,U,4)
"RTN","IBCE835",30,0)
 I X S %DT="XTS" D ^%DT
"RTN","IBCE835",31,0)
 S IBD("DATE")=$S(Y>0:Y,1:"")
"RTN","IBCE835",32,0)
 S IBD("MRA")=$P(IBD0,U,5)
"RTN","IBCE835",33,0)
 S IBD("X12")=($P(IBD0,U,2)="X")
"RTN","IBCE835",34,0)
 S CT=0
"RTN","IBCE835",35,0)
 ;
"RTN","IBCE835",36,0)
 I $P(IBD0,U,6)'="" S CT=CT+1 S LINE(CT)=$G(LINE(CT))_"Payer Name: "_$P(IBD0,U,6)
"RTN","IBCE835",37,0)
 ;
"RTN","IBCE835",38,0)
 I CT D
"RTN","IBCE835",39,0)
 . S (L,Z)=0
"RTN","IBCE835",40,0)
 . F  S Z=$O(LINE(Z)) Q:'Z  S L=L+1,^TMP("IBMSG",$J,"CLAIM",IBCLNO,L)=LINE(Z)
"RTN","IBCE835",41,0)
 . S IBD("LINE")=IBD("LINE")+CT
"RTN","IBCE835",42,0)
 ;
"RTN","IBCE835",43,0)
 S IB399=+$O(^DGCR(399,"B",$$GETCLM^IBCE277(IBCLNO),""),-1)
"RTN","IBCE835",44,0)
 ;
"RTN","IBCE835",45,0)
 S IBBILL=$$LAST364^IBCEF4(IB399)
"RTN","IBCE835",46,0)
 ;
"RTN","IBCE835",47,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLNO,0)="835EOB"_U_$G(IBD("MSG#"))_U_$G(IBD("SUBJ"))_U_IBBILL_U_U_IBD("DATE")
"RTN","IBCE835",48,0)
 ;
"RTN","IBCE835",49,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLNO,"D",0,1)="##RAW DATA: "_IBD0
"RTN","IBCE835",50,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLNO,"D1",1,0)="##RAW DATA: "_IBD0
"RTN","IBCE835",51,0)
 Q
"RTN","IBCE835",52,0)
 ;
"RTN","IBCE835",53,0)
5(IBD) ; Process claim patient ID data
"RTN","IBCE835",54,0)
 ; INPUT:
"RTN","IBCE835",55,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835",56,0)
 ;
"RTN","IBCE835",57,0)
 ; OUTPUT:
"RTN","IBCE835",58,0)
 ;   IBD array
"RTN","IBCE835",59,0)
 ;      "LINE" = the last line # populated in the message
"RTN","IBCE835",60,0)
 ;
"RTN","IBCE835",61,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,line#)=claim pt id message lines
"RTN","IBCE835",62,0)
 ;                                  ,"D",5,msg seq #)=
"RTN","IBCE835",63,0)
 ;                                  ,"D1",msg seq #,5)=
"RTN","IBCE835",64,0)
 ;                                       claim pt id message raw data
"RTN","IBCE835",65,0)
 ;
"RTN","IBCE835",66,0)
 N IBBILL
"RTN","IBCE835",67,0)
 S IBBILL=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835",68,0)
 ;
"RTN","IBCE835",69,0)
 I '$D(^TMP("IBMSG",$J,"CLAIM",IBBILL)) D HDR(IBBILL,.IBD) ;Process header data if not already done for claim
"RTN","IBCE835",70,0)
 ;
"RTN","IBCE835",71,0)
 I $P(IBD,U,7)="Y"!($P(IBD,U,8)="Y") D  ;New patient name or id reported
"RTN","IBCE835",72,0)
 . ;
"RTN","IBCE835",73,0)
 . ; Alert to EDI mail group that name or ID has changed
"RTN","IBCE835",74,0)
 . N XQA,XQAMSG
"RTN","IBCE835",75,0)
 . S XQA("G.IB EDI")=""
"RTN","IBCE835",76,0)
 . S XQAMSG="EOB for bill # "_IBBILL_" indicates a new name or id exists for patient"
"RTN","IBCE835",77,0)
 . D SETUP^XQALERT
"RTN","IBCE835",78,0)
 . ;
"RTN","IBCE835",79,0)
 . S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835",80,0)
 . I $P(IBD,U,7)="Y" S ^TMP("IBMSG",$J,"CLAIM",IBBILL,IBD("LINE"))="New patient name: "_$P(IBD,U,3)_","_$P(IBD,U,4)_" "_$P(IBD,U,5)_"  "
"RTN","IBCE835",81,0)
 . I $P(IBD,U,8)="Y" S ^TMP("IBMSG",$J,"CLAIM",IBBILL,IBD("LINE"))=$G(^TMP("IBMSG",$J,"CLAIM",IBBILL,IBD("LINE")))_"New patient id: "_$P(IBD,U,6)
"RTN","IBCE835",82,0)
 ;
"RTN","IBCE835",83,0)
 I $P(IBD,U,9) D  ;Statement dates
"RTN","IBCE835",84,0)
 . S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835",85,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBBILL,IBD("LINE"))="Statement Dates: "_$$DATE^IBCE277($P(IBD,U,9))_" - "_$$DATE^IBCE277($P(IBD,U,10))
"RTN","IBCE835",86,0)
 ;
"RTN","IBCE835",87,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBBILL,"D",5,1)="##RAW DATA: "_IBD
"RTN","IBCE835",88,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBBILL,"D1",1,5)="##RAW DATA: "_IBD
"RTN","IBCE835",89,0)
 Q
"RTN","IBCE835",90,0)
 ;
"RTN","IBCE835",91,0)
10(IBD) ; Process claim status data
"RTN","IBCE835",92,0)
 ; INPUT:
"RTN","IBCE835",93,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835",94,0)
 ;
"RTN","IBCE835",95,0)
 ; OUTPUT:
"RTN","IBCE835",96,0)
 ;   IBD array returned with processed data
"RTN","IBCE835",97,0)
 ;      "CLAIM" = The claim #
"RTN","IBCE835",98,0)
 ;      "LINE" = The last line # populated in the message
"RTN","IBCE835",99,0)
 ;
"RTN","IBCE835",100,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,line#)=claim status message lines
"RTN","IBCE835",101,0)
 ;                                  ,"D",10,msg seq #)=
"RTN","IBCE835",102,0)
 ;                                  ,"D1",msg seq #,10)=
"RTN","IBCE835",103,0)
 ;                                       claim status raw data
"RTN","IBCE835",104,0)
 ;
"RTN","IBCE835",105,0)
 N IBCLM,CT,LINE,L,Z,Z0,IBDATA,IBSTAT
"RTN","IBCE835",106,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835",107,0)
 Q:IBCLM=""
"RTN","IBCE835",108,0)
 ;
"RTN","IBCE835",109,0)
 I '$D(^TMP("IBMSG",$J,"CLAIM",IBCLM)) D HDR(IBCLM,.IBD) ;Process header data if not already done for claim
"RTN","IBCE835",110,0)
 ;
"RTN","IBCE835",111,0)
 S CT=0
"RTN","IBCE835",112,0)
 F Z=3:1:6 I $P(IBD,U,Z)="Y" D  Q  ;Claim status
"RTN","IBCE835",113,0)
 . S IBSTAT=(Z-2)
"RTN","IBCE835",114,0)
 . S CT=CT+1,LINE(CT)="CLAIM STATUS: "_$P("PROCESSED^DENIED^PENDED^REVERSAL",U,IBSTAT)
"RTN","IBCE835",115,0)
 I '$G(IBSTAT) D
"RTN","IBCE835",116,0)
 . S CT=CT+1,LINE(CT)="CLAIM STATUS: "_$P(IBD,U,7)_" (OTHER)"
"RTN","IBCE835",117,0)
 ;
"RTN","IBCE835",118,0)
 I $P(IBD,U,8)'="" D  ;Crossed over info
"RTN","IBCE835",119,0)
 . S LINE(CT)=LINE(CT)_"  Crossed over to: "_$P(IBD,U,9)_"  "_$P(IBD,U,8)
"RTN","IBCE835",120,0)
 ;
"RTN","IBCE835",121,0)
 I CT D
"RTN","IBCE835",122,0)
 . S L=$G(IBD("LINE")),Z=0
"RTN","IBCE835",123,0)
 . F  S Z=$O(LINE(Z)) Q:'Z  S L=L+1,^TMP("IBMSG",$J,"CLAIM",IBCLM,L)=LINE(Z)
"RTN","IBCE835",124,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",10,1)="##RAW DATA: "_IBD
"RTN","IBCE835",125,0)
 . S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",1,10)="##RAW DATA: "_IBD
"RTN","IBCE835",126,0)
 . S IBD("LINE")=$G(IBD("LINE"))+CT
"RTN","IBCE835",127,0)
 Q
"RTN","IBCE835",128,0)
 ;
"RTN","IBCE835",129,0)
15(IBD) ; Process claim status data
"RTN","IBCE835",130,0)
 ; INPUT:
"RTN","IBCE835",131,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835",132,0)
 ;
"RTN","IBCE835",133,0)
 ; OUTPUT:
"RTN","IBCE835",134,0)
 ;   IBD array
"RTN","IBCE835",135,0)
 ;      "LINE" = The last line # populated in the message
"RTN","IBCE835",136,0)
 ;
"RTN","IBCE835",137,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D",15,msg seq #)=
"RTN","IBCE835",138,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D1",msg seq #,15)=
"RTN","IBCE835",139,0)
 ;                                       claim status raw data
"RTN","IBCE835",140,0)
 ;
"RTN","IBCE835",141,0)
 N IBCLM,Z,Z0,IBDATA
"RTN","IBCE835",142,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835",143,0)
 Q:IBCLM=""
"RTN","IBCE835",144,0)
 ;
"RTN","IBCE835",145,0)
 I '$D(^TMP("IBMSG",$J,"CLAIM",IBCLM)) D HDR(IBCLM,.IBD) ;Process header data if not already done for claim
"RTN","IBCE835",146,0)
 ;
"RTN","IBCE835",147,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",15,1)="##RAW DATA: "_IBD
"RTN","IBCE835",148,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",1,15)="##RAW DATA: "_IBD
"RTN","IBCE835",149,0)
 Q
"RTN","IBCE835",150,0)
 ;
"RTN","IBCE835",151,0)
20(IBD) ; Process claim level adjustment data
"RTN","IBCE835",152,0)
 ; Claim must have been referenced by a previous '05' level
"RTN","IBCE835",153,0)
 ;
"RTN","IBCE835",154,0)
 ; INPUT:
"RTN","IBCE835",155,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835",156,0)
 ;
"RTN","IBCE835",157,0)
 ; OUTPUT:
"RTN","IBCE835",158,0)
 ;    IBD("LINE") = The last line # populated in the message
"RTN","IBCE835",159,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,line #)=claim level adjustment
"RTN","IBCE835",160,0)
 ;                                  ,"D",20,seq#)=
"RTN","IBCE835",161,0)
 ;                                  ,"D1",seq#,20)=
"RTN","IBCE835",162,0)
 ;                                          claim level adjust. raw data
"RTN","IBCE835",163,0)
 ;
"RTN","IBCE835",164,0)
 N IBCLM
"RTN","IBCE835",165,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835",166,0)
 Q:'$D(^TMP("IBMSG",$J,"CLAIM",IBCLM))
"RTN","IBCE835",167,0)
 S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835",168,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,IBD("LINE"))="ADJUSTMENT GROUP: "_$P(IBD,U,3)_"  QTY: "_+$P(IBD,U,6)_", AMT: "_($P(IBD,U,5)/100)
"RTN","IBCE835",169,0)
 S IBD("LINE")=IBD("LINE")+1
"RTN","IBCE835",170,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,IBD("LINE"))="   REASON: ("_$P(IBD,U,4)_")  "_$P(IBD,U,7)
"RTN","IBCE835",171,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",20,IBD("LINE"))="##RAW DATA: "_IBD
"RTN","IBCE835",172,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",IBD("LINE"),20)="##RAW DATA: "_IBD
"RTN","IBCE835",173,0)
 Q
"RTN","IBCE835",174,0)
 ;
"RTN","IBCE835",175,0)
37(IBD) ; Process claim level adjustment data for Inpatient MEDICARE
"RTN","IBCE835",176,0)
 D 37^IBCE835A(.IBD)
"RTN","IBCE835",177,0)
 Q
"RTN","IBCE835",178,0)
 ;
"RTN","IBCE835",179,0)
40(IBD) ; Process service line data
"RTN","IBCE835",180,0)
 D 40^IBCE835A(.IBD)
"RTN","IBCE835",181,0)
 Q
"RTN","IBCE835",182,0)
 ;
"RTN","IBCE835",183,0)
45(IBD) ; Process service line adjustment data
"RTN","IBCE835",184,0)
 D 45^IBCE835A(.IBD)
"RTN","IBCE835",185,0)
 Q
"RTN","IBCE835",186,0)
 ;
"RTN","IBCE835",187,0)
17(IBD) ; Process claim contact data segment
"RTN","IBCE835",188,0)
 D XX(.IBD,17)
"RTN","IBCE835",189,0)
 Q
"RTN","IBCE835",190,0)
 ;
"RTN","IBCE835",191,0)
30(IBD) ; Process MEDICARE inpatient adjudication data (part 1)
"RTN","IBCE835",192,0)
 D XX(.IBD,30)
"RTN","IBCE835",193,0)
 Q
"RTN","IBCE835",194,0)
 ;
"RTN","IBCE835",195,0)
35(IBD) ; Process MEDICARE inpatient adjudication data (part 2)
"RTN","IBCE835",196,0)
 D XX(.IBD,35)
"RTN","IBCE835",197,0)
 Q
"RTN","IBCE835",198,0)
 ;
"RTN","IBCE835",199,0)
41(IBD) ; Process service line data (part 2)
"RTN","IBCE835",200,0)
 D XX(.IBD,41)
"RTN","IBCE835",201,0)
 Q
"RTN","IBCE835",202,0)
 ;
"RTN","IBCE835",203,0)
42(IBD) ; Process service line data (part 3)
"RTN","IBCE835",204,0)
 D XX(.IBD,42)
"RTN","IBCE835",205,0)
 Q
"RTN","IBCE835",206,0)
 ;
"RTN","IBCE835",207,0)
99(IBD) ; Process trailer record for non-MRA EOB
"RTN","IBCE835",208,0)
 D XX(.IBD,99)
"RTN","IBCE835",209,0)
 Q
"RTN","IBCE835",210,0)
 ;
"RTN","IBCE835",211,0)
XX(IBD,IBID) ; Store non-displayed data nodes in TMP array
"RTN","IBCE835",212,0)
 ;
"RTN","IBCE835",213,0)
 ; INPUT:
"RTN","IBCE835",214,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE835",215,0)
 ;   IBID = record id for generic store
"RTN","IBCE835",216,0)
 ;
"RTN","IBCE835",217,0)
 ; OUTPUT:
"RTN","IBCE835",218,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D",IBID,msg seq #)=
"RTN","IBCE835",219,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,"D1",msg seq #,IBID)=
"RTN","IBCE835",220,0)
 ;                                       claim status raw data
"RTN","IBCE835",221,0)
 ;    IBD("LINE") = The last line # populated in the message
"RTN","IBCE835",222,0)
 ;
"RTN","IBCE835",223,0)
 N IBCLM
"RTN","IBCE835",224,0)
 S IBCLM=$$GETCLM^IBCE277($P(IBD,U,2))
"RTN","IBCE835",225,0)
 ;
"RTN","IBCE835",226,0)
 S IBD("LINE")=$G(IBD("LINE"))+1
"RTN","IBCE835",227,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D",IBID,IBD("LINE"))="##RAW DATA: "_IBD
"RTN","IBCE835",228,0)
 S ^TMP("IBMSG",$J,"CLAIM",IBCLM,"D1",IBD("LINE"),IBID)="##RAW DATA: "_IBD
"RTN","IBCE835",229,0)
 ;
"RTN","IBCE835",230,0)
 Q
"RTN","IBCE835",231,0)
 ;
"RTN","IBCECOB")
0^9^B15518592
"RTN","IBCECOB",1,0)
IBCECOB ;ALB/CXW - IB COB MANAGEMENT SCREEN ;16-JUN-1999
"RTN","IBCECOB",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-1994
"RTN","IBCECOB",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECOB",4,0)
 ;
"RTN","IBCECOB",5,0)
EN ; -- main entry point for COB management
"RTN","IBCECOB",6,0)
 K IBSRT
"RTN","IBCECOB",7,0)
 D EN^VALM("IBCEM MRA MANAGEMENT")
"RTN","IBCECOB",8,0)
 Q
"RTN","IBCECOB",9,0)
 ;
"RTN","IBCECOB",10,0)
HDR ; -- header code
"RTN","IBCECOB",11,0)
 Q
"RTN","IBCECOB",12,0)
 ;
"RTN","IBCECOB",13,0)
INIT ; -- init variables and list array
"RTN","IBCECOB",14,0)
 N DIC,DIRUT,DIROUT,DTOUT,DUOUT,X,Y,DIR,IB1
"RTN","IBCECOB",15,0)
 K ^TMP("IBBIL",$J)
"RTN","IBCECOB",16,0)
 S IBSRT=""
"RTN","IBCECOB",17,0)
 S IB1=1
"RTN","IBCECOB",18,0)
 W !
"RTN","IBCECOB",19,0)
 F  S DIC="^VA(200,",DIC(0)="AEMQ",DIC("A")="Select "_$S('IB1:"Another ",1:"")_"BILLER: "_$S('IB1:"",1:"ALL//") D ^DIC K DIC D  Q:Y<0
"RTN","IBCECOB",20,0)
 . Q:Y<0
"RTN","IBCECOB",21,0)
 . I $D(^TMP("IBBIL",$J,+Y)) W !,"This biller has already been selected" Q
"RTN","IBCECOB",22,0)
 . S ^TMP("IBBIL",$J,+Y)=""
"RTN","IBCECOB",23,0)
 . S IB1=0
"RTN","IBCECOB",24,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",25,0)
 ;
"RTN","IBCECOB",26,0)
 S DIR("A")="Sort By: ",DIR("B")="BILLER"
"RTN","IBCECOB",27,0)
 S DIR(0)="SBA^B:BILLER;D:DAYS SINCE TRANSMISSION OF LATEST BILL;L:DATE LAST MRA RECEIVED;I:SECONDARY INSURANCE COMPANY;M:MRA STATUS;P:PATIENT NAME;R:PATIENT RESPONSIBILITY;S:SERVICE DATE"
"RTN","IBCECOB",28,0)
 S DIR("?")="Enter the code to indicate how the list should be sorted." D ^DIR K DIR
"RTN","IBCECOB",29,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",30,0)
 S IBSRT=Y
"RTN","IBCECOB",31,0)
 ;
"RTN","IBCECOB",32,0)
 ;W !
"RTN","IBCECOB",33,0)
 ;S IBMRADUP=0
"RTN","IBCECOB",34,0)
 ;S DIR("A")="Do you want to include Denied MRAs for Duplicate Claim/Service",DIR("B")="No",DIR(0)="YO"
"RTN","IBCECOB",35,0)
 ;D ^DIR K DIR
"RTN","IBCECOB",36,0)
 ;I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",37,0)
 ;I Y S IBMRADUP=1
"RTN","IBCECOB",38,0)
 ;
"RTN","IBCECOB",39,0)
 D BLD^IBCECOB1
"RTN","IBCECOB",40,0)
INITQ Q
"RTN","IBCECOB",41,0)
 ;
"RTN","IBCECOB",42,0)
HELP ; -- help code
"RTN","IBCECOB",43,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECOB",44,0)
 Q
"RTN","IBCECOB",45,0)
 ;
"RTN","IBCECOB",46,0)
EXIT ; -- exit code
"RTN","IBCECOB",47,0)
 K ^TMP("IBCECOB",$J),^TMP("IBCOBST",$J),^TMP("IBBIL",$J)
"RTN","IBCECOB",48,0)
 K ^TMP("IBCECOB1",$J),^TMP("IBCOBSTX",$J)
"RTN","IBCECOB",49,0)
 D CLEAN^VALM10
"RTN","IBCECOB",50,0)
 Q
"RTN","IBCECOB",51,0)
 ;
"RTN","IBCECOB",52,0)
EXP ; -- expand code to show additional details of the EOB record
"RTN","IBCECOB",53,0)
 NEW IBDA,IBIFN,LSTENTRY
"RTN","IBCECOB",54,0)
 D SEL^IBCECOB2(.IBDA,1)                       ; selects a bill
"RTN","IBCECOB",55,0)
 S LSTENTRY=+$O(IBDA(0)) I 'LSTENTRY G EXPQ    ; list entry number
"RTN","IBCECOB",56,0)
 S IBIFN=+$G(IBDA(LSTENTRY)) I 'IBIFN G EXPQ   ; bill#
"RTN","IBCECOB",57,0)
 ;
"RTN","IBCECOB",58,0)
 ; If only one MRA on file, call the listman screen and quit
"RTN","IBCECOB",59,0)
 I $$MRACNT^IBCEMU1(IBIFN)=1 D EN^VALM("IBCEM MRA DETAIL") G EXPQ
"RTN","IBCECOB",60,0)
 ;
"RTN","IBCECOB",61,0)
EXPLOOP ; At this point, we know there are multiple MRA's on file
"RTN","IBCECOB",62,0)
 ;
"RTN","IBCECOB",63,0)
 D FULL^VALM1
"RTN","IBCECOB",64,0)
 I $$SEL^IBCEMU1(IBIFN,1,LSTENTRY) D  G EXPLOOP  ; MRA lister/selection
"RTN","IBCECOB",65,0)
 . NEW IBIFN,LSTENTRY,IBDASAVE                   ; protect variables
"RTN","IBCECOB",66,0)
 . M IBDASAVE=IBDA                               ; save off IBDA array
"RTN","IBCECOB",67,0)
 . D EN^VALM("IBCEM MRA DETAIL")                 ; call the listman
"RTN","IBCECOB",68,0)
 . M IBDA=IBDASAVE                               ; restore IBDA array
"RTN","IBCECOB",69,0)
 . Q
"RTN","IBCECOB",70,0)
EXPQ ;
"RTN","IBCECOB",71,0)
 S VALMBCK="R"
"RTN","IBCECOB",72,0)
 Q
"RTN","IBCECOB",73,0)
 ;
"RTN","IBCECOB",74,0)
COBPOSS(IB364) ; Returns 1 if transmit bill ien in IB364 is currently
"RTN","IBCECOB",75,0)
 ; in a status where COB may be performed on the bill
"RTN","IBCECOB",76,0)
 ; Used by index "ACOB", file 364
"RTN","IBCECOB",77,0)
 N IBWNR,IBNSEQ,IB01,IBM1,IBU1,IB0,IBOK,IBMRA
"RTN","IBCECOB",78,0)
 S IBOK=1
"RTN","IBCECOB",79,0)
 S IB0=$G(^IBA(364,IB364,0))
"RTN","IBCECOB",80,0)
 S IBWNR=$$WNRBILL^IBEFUNC(+IB0),IBMRA=$P($G(^DGCR(399,+IB0,"TX")),U,5)
"RTN","IBCECOB",81,0)
 S IB01=$G(^DGCR(399,+IB0,0)),IBM1=$G(^("M1")),IBU1=$G(^("U1"))
"RTN","IBCECOB",82,0)
 I 'IBWNR,IBU1-$P(IBU1,U,2)'>0 S IBOK=0 G COBQ ; Bill has a 0 balance
"RTN","IBCECOB",83,0)
 I $S('IBWNR:$E($P(IB0,U,3))'="A",1:IBMRA'="1N"&(IBMRA'="A")) S IBOK=0 G COBQ ; Not in correct transmit status
"RTN","IBCECOB",84,0)
 S IBNSEQ=+$TR($P(IB0,U,8),"PST","230")
"RTN","IBCECOB",85,0)
 I 'IBNSEQ!'$D(^DGCR(399,+IB0,"I"_IBNSEQ)) S IBOK=0 G COBQ ; No next ins
"RTN","IBCECOB",86,0)
 I "234"'[$P(IB01,U,13) S IBOK=0 G COBQ ; Bill invalid status for COB
"RTN","IBCECOB",87,0)
 I IBNSEQ D
"RTN","IBCECOB",88,0)
 . N Z,IBSTOP
"RTN","IBCECOB",89,0)
 . S IBSTOP=0
"RTN","IBCECOB",90,0)
 . F Z=IBNSEQ:1:3 D  Q:IBSTOP
"RTN","IBCECOB",91,0)
 .. I $D(^DGCR(399,+IB0,"I"_Z)) D
"RTN","IBCECOB",92,0)
 ... ;Insurance must reimburse
"RTN","IBCECOB",93,0)
 ... I $P($G(^DIC(36,+^DGCR(399,+IB0,"I"_Z),0)),U,2)="N" S IBOK=0 Q
"RTN","IBCECOB",94,0)
 ... I $P(IBM1,U,4+Z) S IBOK=0,IBSTOP=1 Q  ; Already has a next seq bill
"RTN","IBCECOB",95,0)
 ... S (IBOK,IBSTOP)=1
"RTN","IBCECOB",96,0)
 ;
"RTN","IBCECOB",97,0)
COBQ Q IBOK
"RTN","IBCECOB",98,0)
 ;
"RTN","IBCECOB1")
0^10^B60699445
"RTN","IBCECOB1",1,0)
IBCECOB1 ;ALB/CXW - IB COB MANAGEMENT SCREEN/REPORT ;14-JUN-99
"RTN","IBCECOB1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-94
"RTN","IBCECOB1",3,0)
 ;
"RTN","IBCECOB1",4,0)
BLD ; Build list entrypoint
"RTN","IBCECOB1",5,0)
 N I,IBFND,IBB,IBIFN,IB364,IBDA1,IBDTN,IBDA,IBDAY,IBHIS,IBNDS,IBEUT,IBAPY,IBOAM,IBDT,IBMUT,IBBPY,IBINS,IBNDM,IBQ,IBNDI1,IBNDI2,IBNDI3,Z,Z0,IBSEQ,IB3611,IBINS1,IBINS2,IBEXPY,IBNBAL,IBPTRSP,IBAMT,IBMRACNT,IBPTNM,IBSRVC,IBPY,IBB364
"RTN","IBCECOB1",6,0)
 N IBEOBREV
"RTN","IBCECOB1",7,0)
 K ^TMP("IBCECOB",$J),^TMP("IBCECOB1",$J),^TMP("IBCOBST",$J),^TMP("IBCOBSTX",$J)
"RTN","IBCECOB1",8,0)
 D CLEAN^VALM10      ; kill data and video control arrays
"RTN","IBCECOB1",9,0)
 S VALMCNT=0,IBHIS=""
"RTN","IBCECOB1",10,0)
 ; since 0 is a valid Review Status, init w/null
"RTN","IBCECOB1",11,0)
 S IBEOBREV=""
"RTN","IBCECOB1",12,0)
 ; get EOB's w/Review Status of 0, 1, 1.5 or 2; If 3 or higher, not needed
"RTN","IBCECOB1",13,0)
 F  S IBEOBREV=$O(^IBM(361.1,"AMRA",1,IBEOBREV)) Q:IBEOBREV=""  Q:IBEOBREV>2  D  ;
"RTN","IBCECOB1",14,0)
 . S IBDA="A" F  S IBDA=$O(^IBM(361.1,"AMRA",1,IBEOBREV,IBDA),-1) Q:'IBDA  D BLD1
"RTN","IBCECOB1",15,0)
 ; no data accumulated
"RTN","IBCECOB1",16,0)
 I $O(^TMP("IBCOBST",$J,""))="" D NMAT Q
"RTN","IBCECOB1",17,0)
 ; display accumulated data
"RTN","IBCECOB1",18,0)
 D SCRN
"RTN","IBCECOB1",19,0)
 Q
"RTN","IBCECOB1",20,0)
BLD1 ;
"RTN","IBCECOB1",21,0)
 I '$$ELIG(IBDA) Q
"RTN","IBCECOB1",22,0)
 S IB3611=$G(^IBM(361.1,IBDA,0))
"RTN","IBCECOB1",23,0)
 S IBIFN=+IB3611,IB364=$P(IB3611,U,19),IBDT=+$P(IB3611,U,6)
"RTN","IBCECOB1",24,0)
 I $D(^TMP("IBCOBSTX",$J,IBIFN)) Q  ;show each bill once on the worklist
"RTN","IBCECOB1",25,0)
 S IBB=$G(^DGCR(399,IBIFN,0))
"RTN","IBCECOB1",26,0)
 S IBNDS=$G(^DGCR(399,IBIFN,"S")),IBNDI1=$G(^("I1")),IBNDI2=$G(^("I2")),IBNDI3=$G(^("I3")),IBNDM=$G(^("M"))
"RTN","IBCECOB1",27,0)
 S IBMUT=+$P(IBNDS,U,8),IBEUT=+$P(IBNDS,U,2)
"RTN","IBCECOB1",28,0)
 S IBINS="",IBSEQ=$P(IB3611,U,15)
"RTN","IBCECOB1",29,0)
 F I=1:1:3 S Z="IBNDI"_I I @Z D
"RTN","IBCECOB1",30,0)
 . N Q
"RTN","IBCECOB1",31,0)
 . S Q=(IBSEQ=I)
"RTN","IBCECOB1",32,0)
 . I Q S IBINS1=+@Z_U_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCECOB1",33,0)
 . S IBINS=IBINS_$S(IBINS="":"",1:", ")_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCECOB1",34,0)
 ; Get the payer/insurance company that comes after Medicare WNR
"RTN","IBCECOB1",35,0)
 ; If WNR is Primary, get the secondary ins. co.
"RTN","IBCECOB1",36,0)
 ; If WNR is secondary, get the tertiary ins. co.
"RTN","IBCECOB1",37,0)
 D  I $P(IBINS2,U,2)="" S $P(IBINS2,U,2)="UNKNOWN"
"RTN","IBCECOB1",38,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,1) S IBINS2=+IBNDI2_U_$P($G(^DIC(36,+IBNDI2,0)),U) Q
"RTN","IBCECOB1",39,0)
 . S IBINS2=+IBNDI3_U_$P($G(^DIC(36,+IBNDI3,0)),U)
"RTN","IBCECOB1",40,0)
 S IBFND=0
"RTN","IBCECOB1",41,0)
 ; biller entry not ALL and no biller, then get entered/edited by user
"RTN","IBCECOB1",42,0)
 I $D(^TMP("IBBIL",$J)) D  Q:'IBFND
"RTN","IBCECOB1",43,0)
 . S IBFND=$S($D(^TMP("IBBIL",$J,IBMUT)):IBMUT,$D(^TMP("IBBIL",$J,IBEUT)):IBEUT,1:0)
"RTN","IBCECOB1",44,0)
 S Z=$S(IBFND:IBFND,IBMUT:IBMUT,1:IBEUT)
"RTN","IBCECOB1",45,0)
 S IBMUT=$P($G(^VA(200,+Z,0)),U)_"~"_Z
"RTN","IBCECOB1",46,0)
 S:'$P(IBMUT,"~",2) IBMUT="UNKNOWN~0"
"RTN","IBCECOB1",47,0)
 S IBBPY=+$$COBN^IBCEF(IBIFN),IBQ=1
"RTN","IBCECOB1",48,0)
 ;IBQ;1=EOB without subsequent insurer,0=COB,2=0 balance
"RTN","IBCECOB1",49,0)
 D  ;I IBQ Q
"RTN","IBCECOB1",50,0)
 . ;Check for no reimbursable subsequent insurance
"RTN","IBCECOB1",51,0)
 .  F I=IBBPY+1:1:3 D  Q:'IBQ
"RTN","IBCECOB1",52,0)
 .. S Z="IBNDI"_I,Z=$G(@Z)
"RTN","IBCECOB1",53,0)
 .. I $P($G(^DIC(36,+Z,0)),U,2)="N" S IBQ=0 Q
"RTN","IBCECOB1",54,0)
 . ;Check if next ins doesn't exist or next bill# already created
"RTN","IBCECOB1",55,0)
 . S Z="IBNDI"_(IBBPY+1),Z=$G(@Z)
"RTN","IBCECOB1",56,0)
 . I Z,'$P($G(^DGCR(399,IBIFN,"M1")),U,5+IBBPY) S IBQ=0
"RTN","IBCECOB1",57,0)
 ;
"RTN","IBCECOB1",58,0)
 ; Days since transmission of latest bill in COB - IBDAY
"RTN","IBCECOB1",59,0)
 S IBDAY=+$P($G(^DGCR(399,IBIFN,"TX")),U,2) I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1)
"RTN","IBCECOB1",60,0)
 ; if no Last Electronic Extract Date on file 399, get it from file 364
"RTN","IBCECOB1",61,0)
 I 'IBDAY D  I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1) ;calc. the difference
"RTN","IBCECOB1",62,0)
 . S IBB364=$$LAST364^IBCEF4(IBIFN) I IBB364'="" S IBDAY=+$P($P($G(^IBA(364,IBB364,0)),U,4),".",1)
"RTN","IBCECOB1",63,0)
 ;
"RTN","IBCECOB1",64,0)
 S IBAPY=$$TPR^PRCAFN(IBIFN) ; payment on this bill from A/R
"RTN","IBCECOB1",65,0)
 S IBEXPY=+$G(^IBM(361.1,IBDA,1))       ; payer paid amount
"RTN","IBCECOB1",66,0)
 S IBPTRSP=$$PREOBTOT^IBCEU0(IBIFN)     ; patient resp. function
"RTN","IBCECOB1",67,0)
 S IBPY=$S(IBAPY:IBAPY,1:IBEXPY)
"RTN","IBCECOB1",68,0)
 S IBOAM=+$G(^DGCR(399,IBIFN,"U1"))     ; total charges for bill
"RTN","IBCECOB1",69,0)
 S IBNBAL=IBOAM-IBPY
"RTN","IBCECOB1",70,0)
 I IBNBAL'>0 S IBQ=2
"RTN","IBCECOB1",71,0)
 S IBPTNM=$P($G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0)),U) I IBPTNM="" S IBPTNM="UNKNOWN"
"RTN","IBCECOB1",72,0)
 S IBSRVC=$P($G(^DGCR(399,IBIFN,"U")),U)
"RTN","IBCECOB1",73,0)
 S Z0=$S(IBSRT="B":IBMUT,IBSRT="D":-IBDAY,IBSRT="I":$P(IBINS2,U,2)_"~"_$P(IBINS2,U),IBSRT="M":$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13)),IBSRT="R":-IBPTRSP,IBSRT="P":IBPTNM,IBSRT="S":IBSRVC,1:IBDT)
"RTN","IBCECOB1",74,0)
 S ^TMP("IBCOBST",$J,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_IBDA_U_$$HIS(IBIFN)_U_IBDAY_U_IBDT_U_IBQ_U_IB364_U_IBSEQ_U_IBEXPY_U_IBPTRSP
"RTN","IBCECOB1",75,0)
 S ^TMP("IBCOBST",$J,Z0,IBIFN,1)=$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16)
"RTN","IBCECOB1",76,0)
 S ^TMP("IBCOBSTX",$J,IBIFN)=IBDA  ;keep track of compiled IBIFN's
"RTN","IBCECOB1",77,0)
 ;
"RTN","IBCECOB1",78,0)
 ; Save some data when there are multiple MRA's on file for this bill
"RTN","IBCECOB1",79,0)
 S IBMRACNT=$$MRACNT^IBCEMU1(IBIFN)
"RTN","IBCECOB1",80,0)
 I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,1)="Multiple MRA's on file"
"RTN","IBCECOB1",81,0)
 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCECOB1",82,0)
 Q
"RTN","IBCECOB1",83,0)
 ;
"RTN","IBCECOB1",84,0)
HIS(IBIFN) ; COB history
"RTN","IBCECOB1",85,0)
 N A,B,IBST,IBBIL,IBHIS
"RTN","IBCECOB1",86,0)
 S IBHIS="",A=0 F  S A=$O(^IBM(361.1,"ABS",IBIFN,A)) Q:'A  S B=0 F  S B=$O(^IBM(361.1,"ABS",IBIFN,A,B)) Q:'B  D
"RTN","IBCECOB1",87,0)
 . S IBST=$P($G(^IBM(361.1,B,0)),U,4),IBBIL=$P(^DGCR(399,IBIFN,"M1"),U,4+A)
"RTN","IBCECOB1",88,0)
 . Q:IBBIL=""
"RTN","IBCECOB1",89,0)
 . S IBHIS=IBHIS_$S(IBHIS="":"",1:";")_$S(A=1:"PRIMARY",A=2:"SECONDARY",1:"TERTIARY")_" "_$S(IBST:"MRA",1:"EOB")_" RECEIVED - "_IBBIL
"RTN","IBCECOB1",90,0)
 Q IBHIS
"RTN","IBCECOB1",91,0)
 ;
"RTN","IBCECOB1",92,0)
NMAT ;No COB list
"RTN","IBCECOB1",93,0)
 S VALMCNT=2,IBCNT=2
"RTN","IBCECOB1",94,0)
 S ^TMP("IBCECOB",$J,1,0)=" "
"RTN","IBCECOB1",95,0)
 S ^TMP("IBCECOB",$J,2,0)="    No MRA's Matching Selection Criteria Were Found"
"RTN","IBCECOB1",96,0)
 Q
"RTN","IBCECOB1",97,0)
 ;
"RTN","IBCECOB1",98,0)
SCRN ;
"RTN","IBCECOB1",99,0)
 N IBX,IBCNT,IBIFN,IBDA,IB,X,IBS1,IBPAT,Z,IBK
"RTN","IBCECOB1",100,0)
 S IBCNT=0
"RTN","IBCECOB1",101,0)
 S IBS1=$S(IBSRT="B":"BILLER",IBSRT="D":"Days Since Last Transmission",IBSRT="L":"Date Last MRA Received",IBSRT="I":"SECONDARY INSURANCE COMPANY",IBSRT="M":"MRA Status",1:"")
"RTN","IBCECOB1",102,0)
 S IBX="" F  S IBX=$O(^TMP("IBCOBST",$J,IBX)) Q:IBX=""  D
"RTN","IBCECOB1",103,0)
 . I IBSRT="B"!(IBSRT="I")!(IBSRT="M") D
"RTN","IBCECOB1",104,0)
 .. D:IBCNT SET("",IBCNT+1)
"RTN","IBCECOB1",105,0)
 .. D SET(IBS1_": "_$P(IBX,"~"),IBCNT+1)
"RTN","IBCECOB1",106,0)
 . S IBIFN=0 F  S IBIFN=$O(^TMP("IBCOBST",$J,IBX,IBIFN)) Q:'IBIFN  D
"RTN","IBCECOB1",107,0)
 .. S IB=$G(^TMP("IBCOBST",$J,IBX,IBIFN))
"RTN","IBCECOB1",108,0)
 .. S Z=$G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0))
"RTN","IBCECOB1",109,0)
 .. S IBPAT=$$LJ^XLFSTR($E($P(Z,U),1,18),18," ")_" "_$E($P(Z,U,9),6,9)
"RTN","IBCECOB1",110,0)
 .. S IBDA=$P(IB,U,10) ;361.1-ien
"RTN","IBCECOB1",111,0)
 .. S IBQ=$P(IB,U,14),IB364=$P(IB,U,15)
"RTN","IBCECOB1",112,0)
 .. S IBPTRSP=$P(IB,U,18)
"RTN","IBCECOB1",113,0)
 .. S IBAMT=$P(IB,U,2)
"RTN","IBCECOB1",114,0)
 .. S IBCNT=IBCNT+1
"RTN","IBCECOB1",115,0)
 .. S X=""
"RTN","IBCECOB1",116,0)
 .. S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBCECOB1",117,0)
 .. S X=$$SETFLD^VALM1($$BN1^PRCAFN(IBIFN),X,"BILL")
"RTN","IBCECOB1",118,0)
 .. S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IB,U)),X,"SERVICE")
"RTN","IBCECOB1",119,0)
 .. S X=$$SETFLD^VALM1(IBPAT,X,"PATNM")
"RTN","IBCECOB1",120,0)
 .. S X=$$SETFLD^VALM1($$RJ^XLFSTR($FN(IBPTRSP,"",2),9," "),X,"PTRESP")
"RTN","IBCECOB1",121,0)
 .. S X=$$SETFLD^VALM1($$RJ^XLFSTR($FN(IBAMT,"",2),9," "),X,"IBAMT")
"RTN","IBCECOB1",122,0)
 .. S X=$$SETFLD^VALM1($$TYPE^IBJTLA1($P(IB,U,5))_"/"_$P("UB-82^HCFA^UB-92",U,+$P(IB,U,6)),X,"BTYPE")
"RTN","IBCECOB1",123,0)
 .. D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",124,0)
 .. ;For R (Pt Resp), P (Pt Name) and S (Service Date) don't display sub-headers
"RTN","IBCECOB1",125,0)
 .. I "BIMRPS"'[IBSRT D
"RTN","IBCECOB1",126,0)
 ... S Z=$S(IBSRT="L":$$DAT1^IBOUTL(IBX),IBSRT="D":-IBX,1:IBX)
"RTN","IBCECOB1",127,0)
 ... D SET("   "_IBS1_": "_Z,IBCNT)
"RTN","IBCECOB1",128,0)
 .. S X=$$SETSTR^VALM1("Insurers:  "_$P(IB,U,9),"",7,74)
"RTN","IBCECOB1",129,0)
 .. D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",130,0)
 .. ;
"RTN","IBCECOB1",131,0)
 .. ; line 3 of display:  MRA status/date/split claim indicator
"RTN","IBCECOB1",132,0)
 .. S X=$$SETSTR^VALM1("MRA Status:  ","",5,13)
"RTN","IBCECOB1",133,0)
 .. S IBK=$G(^TMP("IBCOBST",$J,IBX,IBIFN,1))
"RTN","IBCECOB1",134,0)
 .. S X=$$SETSTR^VALM1($P(IBK,U,1),X,18,63)
"RTN","IBCECOB1",135,0)
 .. I $P(IBK,U,2)=2 S X=$$SETSTR^VALM1("** SPLIT CLAIM **",X,63,18)
"RTN","IBCECOB1",136,0)
 .. D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",137,0)
 .. ;
"RTN","IBCECOB1",138,0)
 .. ; conditionally update video attributes of line 3
"RTN","IBCECOB1",139,0)
 .. I '$D(IOINHI) D ENS^%ZISS
"RTN","IBCECOB1",140,0)
 .. ; split claim
"RTN","IBCECOB1",141,0)
 .. I $P(IBK,U,2)=2 D CNTRL^VALM10(VALMCNT,63,17,IOINHI,IOINORM)
"RTN","IBCECOB1",142,0)
 .. ; multiple mra's on file
"RTN","IBCECOB1",143,0)
 .. I $P(IBK,U,3)>1 D CNTRL^VALM10(VALMCNT,18,22,IOINHI,IOINORM)
"RTN","IBCECOB1",144,0)
 .. Q
"RTN","IBCECOB1",145,0)
 ;K ^TMP("IBCOBST",$J)
"RTN","IBCECOB1",146,0)
 Q
"RTN","IBCECOB1",147,0)
 ;
"RTN","IBCECOB1",148,0)
SET(X,CNT,IBIFN,IBDA,IBQ,IB364,IBX,IB) ;set up list manager screen array
"RTN","IBCECOB1",149,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECOB1",150,0)
 S ^TMP("IBCECOB",$J,VALMCNT,0)=X
"RTN","IBCECOB1",151,0)
 S ^TMP("IBCECOB",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECOB1",152,0)
 I $G(IBIFN),$G(^TMP("IBCECOB",$J,CNT))="" S ^TMP("IBCECOB",$J,CNT)=VALMCNT_U_IBIFN_U_IB364_U_IBDA_U_IBQ_U_IBX,^TMP("IBCECOB1",$J,CNT)=IB
"RTN","IBCECOB1",153,0)
 Q
"RTN","IBCECOB1",154,0)
 ;
"RTN","IBCECOB1",155,0)
FTYPE(Y) ;type classification
"RTN","IBCECOB1",156,0)
 Q $E($P($G(^IBE(353,Y,0)),U),1,8)
"RTN","IBCECOB1",157,0)
 ;
"RTN","IBCECOB1",158,0)
PTRESPI(IBEOB) ; Function - Computes the Patient's Responsibility based on IBEOB
"RTN","IBCECOB1",159,0)
 ; of 361.1 for Claims/Bills with form type 3=UB92
"RTN","IBCECOB1",160,0)
 ; Input IBEOB - a single EOB ien; Required
"RTN","IBCECOB1",161,0)
 ; Output      - Function Returns IBPTRES - Patient Responsibility Amount for the EOB
"RTN","IBCECOB1",162,0)
 ;
"RTN","IBCECOB1",163,0)
 N IBPTRES,IBC,EOBADJ
"RTN","IBCECOB1",164,0)
 S IBPTRES=0,IBEOB=+$G(IBEOB)
"RTN","IBCECOB1",165,0)
 I 'IBEOB Q IBPTRES   ;PTRESPI
"RTN","IBCECOB1",166,0)
 ;
"RTN","IBCECOB1",167,0)
 ; get claim level adjustments
"RTN","IBCECOB1",168,0)
 K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCECOB1",169,0)
 S IBPTRES=$$CALCPR^IBCEU0(.EOBADJ)
"RTN","IBCECOB1",170,0)
 ;
"RTN","IBCECOB1",171,0)
 ; get line level adjustments
"RTN","IBCECOB1",172,0)
 S IBC=0 F  S IBC=$O(^IBM(361.1,IBEOB,15,IBC)) Q:'IBC  D
"RTN","IBCECOB1",173,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,15,IBC,1)
"RTN","IBCECOB1",174,0)
 . S IBPTRES=IBPTRES+$$CALCPR^IBCEU0(.EOBADJ)
"RTN","IBCECOB1",175,0)
 Q IBPTRES
"RTN","IBCECOB1",176,0)
 ;
"RTN","IBCECOB1",177,0)
ELIG(IBEOB) ; Function to determine if an EOB entry is eligible for
"RTN","IBCECOB1",178,0)
 ; inclusion on the MRA management worklist or not.
"RTN","IBCECOB1",179,0)
 ; IBEOB - ien into file 361.1 (required)
"RTN","IBCECOB1",180,0)
 ; Returns 1 if EOB should appear on the worklist
"RTN","IBCECOB1",181,0)
 ; Returns 0 if EOB should not appear on the worklist
"RTN","IBCECOB1",182,0)
 ;
"RTN","IBCECOB1",183,0)
 NEW ELIG,IB3611,IBIFN
"RTN","IBCECOB1",184,0)
 S ELIG=0,IBEOB=+$G(IBEOB)
"RTN","IBCECOB1",185,0)
 S IB3611=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCECOB1",186,0)
 I $P(IB3611,U,4)'=1 G ELIGX    ; eob type must be Medicare MRA
"RTN","IBCECOB1",187,0)
 I $P(IB3611,U,16)>2 G ELIGX    ; review status must be <= 2
"RTN","IBCECOB1",188,0)
 S IBIFN=+IB3611
"RTN","IBCECOB1",189,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=2 G ELIGX  ; Request MRA bill status
"RTN","IBCECOB1",190,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) G ELIGX         ; filing errors
"RTN","IBCECOB1",191,0)
 ;
"RTN","IBCECOB1",192,0)
 S ELIG=1    ; this EOB is eligible for the worklist
"RTN","IBCECOB1",193,0)
 ;
"RTN","IBCECOB1",194,0)
ELIGX ;
"RTN","IBCECOB1",195,0)
 Q ELIG
"RTN","IBCECOB1",196,0)
 ;
"RTN","IBCECOB2")
0^7^B72912246
"RTN","IBCECOB2",1,0)
IBCECOB2 ;ALB/CXW - IB COB MANAGEMENT SCREEN ;16-JUN-1999
"RTN","IBCECOB2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-1994
"RTN","IBCECOB2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECOB2",4,0)
 ;
"RTN","IBCECOB2",5,0)
EDI ;history detail display
"RTN","IBCECOB2",6,0)
 N IBIFN,IBDA
"RTN","IBCECOB2",7,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",8,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(IBDA))
"RTN","IBCECOB2",9,0)
 D EDI1(IBIFN)
"RTN","IBCECOB2",10,0)
 S VALMBCK="R"
"RTN","IBCECOB2",11,0)
 Q
"RTN","IBCECOB2",12,0)
 ;
"RTN","IBCECOB2",13,0)
EDI1(IBIFN) ;
"RTN","IBCECOB2",14,0)
 N DFN
"RTN","IBCECOB2",15,0)
 Q:'IBIFN
"RTN","IBCECOB2",16,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",17,0)
 D EN^VALM("IBJT EDI STATUS")
"RTN","IBCECOB2",18,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",19,0)
 Q
"RTN","IBCECOB2",20,0)
 ;
"RTN","IBCECOB2",21,0)
EDI2(IBIFN) ;
"RTN","IBCECOB2",22,0)
 N DFN
"RTN","IBCECOB2",23,0)
 Q:'IBIFN
"RTN","IBCECOB2",24,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",25,0)
 D EN^VALM("IBJT EDI STATUS ALONE")
"RTN","IBCECOB2",26,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",27,0)
 Q
"RTN","IBCECOB2",28,0)
 ;
"RTN","IBCECOB2",29,0)
CSA ;claims status awaiting resolution
"RTN","IBCECOB2",30,0)
 N IBDAX
"RTN","IBCECOB2",31,0)
 D EN^IBCECSA
"RTN","IBCECOB2",32,0)
 I $D(IBFASTXT) K IBFASTXT
"RTN","IBCECOB2",33,0)
 S VALMBCK="R"
"RTN","IBCECOB2",34,0)
 Q
"RTN","IBCECOB2",35,0)
 ;
"RTN","IBCECOB2",36,0)
RVEOB ;Review EOB
"RTN","IBCECOB2",37,0)
 D FULL^VALM1 W !
"RTN","IBCECOB2",38,0)
 N IBDA,IBIFN,IBCMT,IBSEL
"RTN","IBCECOB2",39,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",40,0)
 S IBSEL=+$O(IBDA(0))
"RTN","IBCECOB2",41,0)
 S IBDA=$G(IBDA(IBSEL))
"RTN","IBCECOB2",42,0)
 S IBIFN=$P(IBDA,U),IBDA=$P(IBDA,U,3)
"RTN","IBCECOB2",43,0)
 I 'IBIFN G VEOBQ
"RTN","IBCECOB2",44,0)
 S IBCMT=$G(^TMP("IBCECOB1",$J,IBSEL))
"RTN","IBCECOB2",45,0)
 I IBCMT'="" D EN^VALM("IBCEM MRA REVIEW")
"RTN","IBCECOB2",46,0)
VEOBQ K ^TMP("IBCECOC",$J)
"RTN","IBCECOB2",47,0)
 S VALMBCK="R"
"RTN","IBCECOB2",48,0)
 Q
"RTN","IBCECOB2",49,0)
 ;
"RTN","IBCECOB2",50,0)
TPJI ;Third Party joint Inquiry
"RTN","IBCECOB2",51,0)
 N IBDA,IBIFN
"RTN","IBCECOB2",52,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",53,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(IBDA))
"RTN","IBCECOB2",54,0)
 I IBDA="" G TPJIQ
"RTN","IBCECOB2",55,0)
 D TPJI1(IBIFN)
"RTN","IBCECOB2",56,0)
TPJIQ S VALMBCK="R"
"RTN","IBCECOB2",57,0)
 Q
"RTN","IBCECOB2",58,0)
 ;
"RTN","IBCECOB2",59,0)
TPJI1(IBIFN) ;
"RTN","IBCECOB2",60,0)
 N DFN,IBNOTPJI
"RTN","IBCECOB2",61,0)
 Q:'IBIFN
"RTN","IBCECOB2",62,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2),IBNOTPJI=1
"RTN","IBCECOB2",63,0)
 D EN^VALM("IBJT CLAIM INFO")
"RTN","IBCECOB2",64,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",65,0)
 Q
"RTN","IBCECOB2",66,0)
 ;
"RTN","IBCECOB2",67,0)
PBILL ;Print bill
"RTN","IBCECOB2",68,0)
 N IBIFN,IBDA,IBRESUB
"RTN","IBCECOB2",69,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",70,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA))
"RTN","IBCECOB2",71,0)
 I IBDA="" G PBOUT
"RTN","IBCECOB2",72,0)
 S IBRESUB=$$RESUB^IBCECSA4(IBIFN,1,"P")
"RTN","IBCECOB2",73,0)
 I IBRESUB'>0 W !,*7,"This is not a transmittable bill or review not needed" D PAUSE^VALM1 G PBOUT
"RTN","IBCECOB2",74,0)
 I IBRESUB=2 D  G PBOUT
"RTN","IBCECOB2",75,0)
 . N IB364
"RTN","IBCECOB2",76,0)
 . S IB364=+$P($G(IBDA(IBDA)),U,2)
"RTN","IBCECOB2",77,0)
 . D PRINT1^IBCEM03(IBIFN,.IBDA,IB364)
"RTN","IBCECOB2",78,0)
 D PBILL1(IBIFN)
"RTN","IBCECOB2",79,0)
PBOUT S VALMBCK="R"
"RTN","IBCECOB2",80,0)
 Q
"RTN","IBCECOB2",81,0)
 ;
"RTN","IBCECOB2",82,0)
PMRA ;Print MRA
"RTN","IBCECOB2",83,0)
 N IBIFN,IBDA
"RTN","IBCECOB2",84,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",85,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA))
"RTN","IBCECOB2",86,0)
 G:'IBIFN PRMQ
"RTN","IBCECOB2",87,0)
 D MRA^IBCEMRAA(.IBIFN)
"RTN","IBCECOB2",88,0)
PRMQ S VALMBCK="R"
"RTN","IBCECOB2",89,0)
 Q
"RTN","IBCECOB2",90,0)
PBILL1(IBIFN) ;
"RTN","IBCECOB2",91,0)
 N IBAC1,IBAC,DFN
"RTN","IBCECOB2",92,0)
 Q:'IBIFN
"RTN","IBCECOB2",93,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",94,0)
 S IBAC=4,IBAC1=1
"RTN","IBCECOB2",95,0)
 D 4^IBCB1
"RTN","IBCECOB2",96,0)
 D FULL^VALM1,PAUSE^VALM1
"RTN","IBCECOB2",97,0)
 Q
"RTN","IBCECOB2",98,0)
 ;
"RTN","IBCECOB2",99,0)
CANCEL ;Cancel bill
"RTN","IBCECOB2",100,0)
 ; IBDA(IBDA)=IBIFN^IB364^ien of 361.1^user selection seq^user name~duz#
"RTN","IBCECOB2",101,0)
 ;
"RTN","IBCECOB2",102,0)
 N IBIFN,IBDA,IB364,IBEOBIFN
"RTN","IBCECOB2",103,0)
 ;
"RTN","IBCECOB2",104,0)
 ; Check for security key
"RTN","IBCECOB2",105,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CANCELQ
"RTN","IBCECOB2",106,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",107,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECOB2",108,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECOB2",109,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",110,0)
 . Q
"RTN","IBCECOB2",111,0)
 ;
"RTN","IBCECOB2",112,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",113,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IB364=$P($G(IBDA(+IBDA)),U,2)
"RTN","IBCECOB2",114,0)
 S IBEOBIFN=$P($G(IBDA(+IBDA)),U,3)
"RTN","IBCECOB2",115,0)
 I IBDA D
"RTN","IBCECOB2",116,0)
 . I '$$LOCK^IBCEU0(361.1,IBEOBIFN) Q
"RTN","IBCECOB2",117,0)
 . D CANCEL^IBCEM3(.IBDA,IBIFN,IB364)
"RTN","IBCECOB2",118,0)
 . D UNLOCK^IBCEU0(361.1,IBEOBIFN)
"RTN","IBCECOB2",119,0)
 S VALMBCK="R"
"RTN","IBCECOB2",120,0)
 I $G(IBDA)'="" D BLD^IBCECOB1
"RTN","IBCECOB2",121,0)
CANCELQ Q
"RTN","IBCECOB2",122,0)
 ;
"RTN","IBCECOB2",123,0)
CLONE ; 'Copy/cancel bill' protocol action
"RTN","IBCECOB2",124,0)
 N IBDA,IBQ,IBEOBIFN
"RTN","IBCECOB2",125,0)
 ;
"RTN","IBCECOB2",126,0)
 ; Check for security key
"RTN","IBCECOB2",127,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CLONEQ
"RTN","IBCECOB2",128,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",129,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECOB2",130,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECOB2",131,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",132,0)
 . Q
"RTN","IBCECOB2",133,0)
 ;
"RTN","IBCECOB2",134,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",135,0)
 S IBDA=$O(IBDA(""))
"RTN","IBCECOB2",136,0)
 I IBDA="" G CLONEQ
"RTN","IBCECOB2",137,0)
 S IBEOBIFN=$P($G(IBDA(+IBDA)),U,3)
"RTN","IBCECOB2",138,0)
 I '$$LOCK^IBCEU0(361.1,IBEOBIFN) G CLONEQ
"RTN","IBCECOB2",139,0)
 D COPYCLON(+$G(IBDA(IBDA)),$P($G(IBDA(+IBDA)),U,2),.IBQ)
"RTN","IBCECOB2",140,0)
 D UNLOCK^IBCEU0(361.1,IBEOBIFN)
"RTN","IBCECOB2",141,0)
CLONEQ ;
"RTN","IBCECOB2",142,0)
 S VALMBCK="R"
"RTN","IBCECOB2",143,0)
 D:$G(IBQ)'="" BLD^IBCECOB1
"RTN","IBCECOB2",144,0)
 Q
"RTN","IBCECOB2",145,0)
 ;
"RTN","IBCECOB2",146,0)
COPYCLON(IBIFN,IB364,IBQ) ; Generic entry point for clone a bill from EDI processing
"RTN","IBCECOB2",147,0)
 ; IBIFN = original bill ien
"RTN","IBCECOB2",148,0)
 ; IB364 = the ien of the transmission bill entry in file 364
"RTN","IBCECOB2",149,0)
 ; IBQ = If bill is not cancelled, this is returned as null
"RTN","IBCECOB2",150,0)
 ;        - pass by reference -
"RTN","IBCECOB2",151,0)
 ;
"RTN","IBCECOB2",152,0)
 N IBQUIT,IBCCCC,IBHV,Y,IBCAN,IBCE,IBDA,IBCNCOPY
"RTN","IBCECOB2",153,0)
 I '$$CANCKS^IBCEM3("CC",IBIFN) S IBQ="" G CCQ
"RTN","IBCECOB2",154,0)
 ;
"RTN","IBCECOB2",155,0)
 S IBCAN=2,IBCE("EDI")=1,Y=IBIFN,IBCCCC=0,IBHV("IBIFN")=IBIFN,IBHV("IBIFN1")="",IBCNCOPY=1
"RTN","IBCECOB2",156,0)
 D ^IBCCC
"RTN","IBCECOB2",157,0)
 S IBIFN=IBHV("IBIFN")
"RTN","IBCECOB2",158,0)
 K IBCE("EDI") S IBQ=1
"RTN","IBCECOB2",159,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=7 S IBQ=""
"RTN","IBCECOB2",160,0)
 I IBHV("IBIFN1") D
"RTN","IBCECOB2",161,0)
 . N IBU
"RTN","IBCECOB2",162,0)
 . S IBU="R"
"RTN","IBCECOB2",163,0)
 . S IBNIEN=+IBHV("IBIFN1")
"RTN","IBCECOB2",164,0)
 . I "23"'[$P($G(^DGCR(399,+IBHV("IBIFN1"),0)),U,13) D
"RTN","IBCECOB2",165,0)
 .. W:'$G(IBCEAUTO) !,*7,"Please note: the new bill was not AUTHORIZED.",!,"It can only be accessed now via the normal, non-EDI functions.",!,"Status of new bill is ",$$EXPAND^IBTRE(399,.13,$P(^DGCR(399,IBHV("IBIFN1"),0),U,13)) S IBU="C"
"RTN","IBCECOB2",166,0)
 . D UPDEDI^IBCEM(IB364,IBU)
"RTN","IBCECOB2",167,0)
 ;
"RTN","IBCECOB2",168,0)
 I '$G(IBCEAUTO) D PAUSE^VALM1
"RTN","IBCECOB2",169,0)
CCQ Q
"RTN","IBCECOB2",170,0)
 ;
"RTN","IBCECOB2",171,0)
PRO ; Copy for secondary/tertiary bill
"RTN","IBCECOB2",172,0)
 N VALMY,IBDA,Z,IBIFN,IBIFNH,IB364,IBCE
"RTN","IBCECOB2",173,0)
 I '$P($G(^IBE(350.9,1,8)),U,12) D  G PROQ
"RTN","IBCECOB2",174,0)
 . D FULL^VALM1
"RTN","IBCECOB2",175,0)
 . W !!?5,"MRA's may not be processed at this time."
"RTN","IBCECOB2",176,0)
 . W !?5,"The IB site parameter ""Allow MRA Processing?"" is set to NO."
"RTN","IBCECOB2",177,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",178,0)
 . Q
"RTN","IBCECOB2",179,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",180,0)
 S Z=$O(IBDA(0)),Z=$G(IBDA(+Z)) G:'Z PROQ
"RTN","IBCECOB2",181,0)
 S IBIFN=$P(Z,U),IB364=$P(Z,U,2),IBDA=$P(Z,U,3),IBIFNH=IBIFN
"RTN","IBCECOB2",182,0)
 I 'IBIFN G PROQ
"RTN","IBCECOB2",183,0)
 I '$$LOCK^IBCEU0(361.1,IBDA) G PROQ
"RTN","IBCECOB2",184,0)
 D COBCOPY(IBIFN,IB364,2,IBDA,"BLD^IBCECOB1")
"RTN","IBCECOB2",185,0)
 D UNLOCK^IBCEU0(361.1,IBDA)
"RTN","IBCECOB2",186,0)
PROQ S VALMBCK="R"
"RTN","IBCECOB2",187,0)
 Q
"RTN","IBCECOB2",188,0)
 ;
"RTN","IBCECOB2",189,0)
COBCOPY(IBIFN,IB364,IBFROM,IBIEN,IBBLD) ; Generic entry point for EDI COB copy
"RTN","IBCECOB2",190,0)
 ; IBIFN = original bill ien
"RTN","IBCECOB2",191,0)
 ; IB364 = the ien of the transmission bill entry in file 364
"RTN","IBCECOB2",192,0)
 ; IBFROM = 1 if called from CSA, 2 if called from COB/EOB processing
"RTN","IBCECOB2",193,0)
 ; IBIEN = entry in 361 (IBFROM=1) or 361.1 (IBFROM=2) being processed
"RTN","IBCECOB2",194,0)
 ; IBBLD = the name of the entrypoint that will rebuild the display
"RTN","IBCECOB2",195,0)
 ;
"RTN","IBCECOB2",196,0)
 N IBCBASK,IBCBCOPY,IBCAN,IBIFNH,IBNSTAT,IBOSTAT,IBPRCOB,IBSECHK,IBLMVAR,IBAC,IBMRAIEN,IBDA,IBAUTO
"RTN","IBCECOB2",197,0)
 N IBCOB,IBCOBIL,IBCOBN,IBINS,IBINSN,IBINSOLD,IBMRAIO,IBMRAO,IBNMOLD,IBQUIT
"RTN","IBCECOB2",198,0)
 S (IBCBASK,IBCBCOPY,IBCAN,IBAUTO)=1,(IBPRCOB,IBSECHK)=0,(IBMRAIEN,IBDA)=IBIEN
"RTN","IBCECOB2",199,0)
 I 'IB364!'IBIFN W !,"Transmission record is missing for this bill" D PAUSE^VALM1 G COBCOPX
"RTN","IBCECOB2",200,0)
 ;
"RTN","IBCECOB2",201,0)
 S IBIFNH=IBIFN
"RTN","IBCECOB2",202,0)
 I IBFROM=2 S IBPRCOB=1
"RTN","IBCECOB2",203,0)
 ;
"RTN","IBCECOB2",204,0)
 I $$PREOBTOT^IBCEU0(IBIFN)'>0 D  G COBCOPX
"RTN","IBCECOB2",205,0)
 . D FULL^VALM1
"RTN","IBCECOB2",206,0)
 . W !!?5,"There is no patient responsibility for this claim."
"RTN","IBCECOB2",207,0)
 . W !?5,"This claim may not be processed."
"RTN","IBCECOB2",208,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",209,0)
 . Q
"RTN","IBCECOB2",210,0)
 ;
"RTN","IBCECOB2",211,0)
 I $P($G(^IBM(361.1,IBDA,0)),U,16)="1.5" D  G COBCOPX
"RTN","IBCECOB2",212,0)
 . W !!,"This claim has already been processed as a secondary claim."
"RTN","IBCECOB2",213,0)
 . W !,"You will need to complete the authorization process for this claim."
"RTN","IBCECOB2",214,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",215,0)
 . D AUTH
"RTN","IBCECOB2",216,0)
 . Q
"RTN","IBCECOB2",217,0)
 ;
"RTN","IBCECOB2",218,0)
 ; Get out if no next payer
"RTN","IBCECOB2",219,0)
 I '$P($G(^DGCR(399,IBIFN,"I"_($$COBN^IBCEF(IBIFN)+1))),U,1) D  G COBCOPX
"RTN","IBCECOB2",220,0)
 . W !,"There is no next payer for this bill"
"RTN","IBCECOB2",221,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",222,0)
 . Q
"RTN","IBCECOB2",223,0)
 ;
"RTN","IBCECOB2",224,0)
 D DSPRB^IBCCCB0(IBIFN)        ; display related bills
"RTN","IBCECOB2",225,0)
 S IBCE("EDI")=1
"RTN","IBCECOB2",226,0)
 D CHKB^IBCCCB                 ; process COB, create secondary bill
"RTN","IBCECOB2",227,0)
 S IBIFN=IBIFNH
"RTN","IBCECOB2",228,0)
 I IBSECHK G COBCOPX
"RTN","IBCECOB2",229,0)
 S IBV=1 D VIEW^IBCB2          ; display billing screens
"RTN","IBCECOB2",230,0)
 D AUTH                        ; authorize bill
"RTN","IBCECOB2",231,0)
COBCOPX ;
"RTN","IBCECOB2",232,0)
 Q
"RTN","IBCECOB2",233,0)
 ;
"RTN","IBCECOB2",234,0)
AUTH ; procedure to authorize the claim and refresh the screen
"RTN","IBCECOB2",235,0)
 K ^UTILITY($J) S IBAC=1,IBQUIT=0 D 3^IBCB1
"RTN","IBCECOB2",236,0)
 I '$D(IOUON)!'$D(IORVON) D ENS^%ZISS
"RTN","IBCECOB2",237,0)
 I $P($G(^IBM(361.1,IBMRAIEN,0)),U,16)=3 D UPDEDI^IBCEM(IB364,"Z")
"RTN","IBCECOB2",238,0)
 I $G(IBBLD)'="" D @IBBLD
"RTN","IBCECOB2",239,0)
 D PAUSE^VALM1
"RTN","IBCECOB2",240,0)
AUTHX ;
"RTN","IBCECOB2",241,0)
 Q
"RTN","IBCECOB2",242,0)
 ;
"RTN","IBCECOB2",243,0)
RES ;Resubmit bill by print
"RTN","IBCECOB2",244,0)
 N IBDA,IBIFN,IB364
"RTN","IBCECOB2",245,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",246,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IB364=+$P($G(IBDA(IBDA)),U,2)
"RTN","IBCECOB2",247,0)
 I 'IBIFN G RESQ
"RTN","IBCECOB2",248,0)
 D PRINT1^IBCEM03(IBIFN,.IBDA,IB364)
"RTN","IBCECOB2",249,0)
 D PAUSE^VALM1
"RTN","IBCECOB2",250,0)
 I $G(IBDA)'="" D BLD^IBCECOB1
"RTN","IBCECOB2",251,0)
RESQ S VALMBCK="R"
"RTN","IBCECOB2",252,0)
 Q
"RTN","IBCECOB2",253,0)
 ;
"RTN","IBCECOB2",254,0)
EBI ;View an unauthorized transmitted bill
"RTN","IBCECOB2",255,0)
 N IBFLG,IBDA,IBIFN,IB364,DFN
"RTN","IBCECOB2",256,0)
 K ^TMP($J,"IBBILL")
"RTN","IBCECOB2",257,0)
 D FULL^VALM1
"RTN","IBCECOB2",258,0)
 ;
"RTN","IBCECOB2",259,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",260,0)
 S IBDA=+$O(IBDA(""))
"RTN","IBCECOB2",261,0)
 S IBIFN=+$G(IBDA(IBDA)),IB364=+$P($G(IBDA(IBDA)),U,2),DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",262,0)
 G:'IBIFN EDITQ
"RTN","IBCECOB2",263,0)
 S IBV=1 D VIEW^IBCB2
"RTN","IBCECOB2",264,0)
 I '$D(IOUON)!'$D(IORVON) D ENS^%ZISS
"RTN","IBCECOB2",265,0)
 D BLD^IBCECOB1
"RTN","IBCECOB2",266,0)
EDITQ S VALMBCK="R"
"RTN","IBCECOB2",267,0)
 Q
"RTN","IBCECOB2",268,0)
 ;
"RTN","IBCECOB2",269,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCECOB2",270,0)
 ; IBDA = array returned if selections made
"RTN","IBCECOB2",271,0)
 ;    IBDA(n)=ien of bill selected (file 399)
"RTN","IBCECOB2",272,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCECOB2",273,0)
 N IB
"RTN","IBCECOB2",274,0)
 K IBDA
"RTN","IBCECOB2",275,0)
 D FULL^VALM1
"RTN","IBCECOB2",276,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECOB2",277,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  S IBDA(IBDA)=$P($G(^TMP("IBCECOB",$J,+IBDA)),U,2,6)
"RTN","IBCECOB2",278,0)
 Q
"RTN","IBCECOB2",279,0)
 ;
"RTN","IBCECOB2",280,0)
EXIT ; Exit out of COB
"RTN","IBCECOB2",281,0)
 D FASTEXIT^IBCEFG4
"RTN","IBCECOB2",282,0)
 I $G(IBFASTXT)=1 S IBFASTXT=5
"RTN","IBCECOB2",283,0)
 Q
"RTN","IBCECOB2",284,0)
 ;
"RTN","IBCECOB3")
0^11^B10293841
"RTN","IBCECOB3",1,0)
IBCECOB3 ;ALB/CXW - COB MANAGEMENT REPORT ;23-JUL-99
"RTN","IBCECOB3",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-94
"RTN","IBCECOB3",3,0)
 Q
"RTN","IBCECOB3",4,0)
EN ; Report of bill awaiting resubmission/cancel
"RTN","IBCECOB3",5,0)
 D FULL^VALM1
"RTN","IBCECOB3",6,0)
 W !!,"You will need a 132 column printer for this report!",!
"RTN","IBCECOB3",7,0)
 ;
"RTN","IBCECOB3",8,0)
 N %ZIS,ZTSAVE,ZTRTN,ZTDESC
"RTN","IBCECOB3",9,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","IBCECOB3",10,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","IBCECOB3",11,0)
 . S ZTRTN="LIST^IBCECOB3"
"RTN","IBCECOB3",12,0)
 . S ZTSAVE("IBSRT")="",ZTSAVE("^TMP(""IBBIL"",$J")="",ZTSAVE("^TMP(""IBCOBST"",$J,")=""
"RTN","IBCECOB3",13,0)
 . S ZTDESC="IB -COB Management Report" D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCECOB3",14,0)
 U IO
"RTN","IBCECOB3",15,0)
LIST ; display
"RTN","IBCECOB3",16,0)
 N IBSTOP,IBPAGE,IBX,IBIFN,IBUER,IB,IBZ,IBI,IBFST
"RTN","IBCECOB3",17,0)
 W:$E(IOST,1,2)["C-" @IOF ;Only initial form feed for print to screen
"RTN","IBCECOB3",18,0)
 S (IBSTOP,IBPAGE,IBFST)=0
"RTN","IBCECOB3",19,0)
 S IBUER=$S(IBSRT="A":1,1:0)
"RTN","IBCECOB3",20,0)
 I '$D(^TMP("IBCOBST",$J)) D  G LISTQ
"RTN","IBCECOB3",21,0)
 . D HDR1 W !,"No entries found for this report"
"RTN","IBCECOB3",22,0)
 S IBX="" F  S IBX=$O(^TMP("IBCOBST",$J,IBX)) Q:IBX=""!(IBSTOP)  D
"RTN","IBCECOB3",23,0)
 . I 'IBFST D HDR1 S:'IBUER IBFST=1 Q:IBSTOP
"RTN","IBCECOB3",24,0)
 . S IBIFN=0 F  S IBIFN=$O(^TMP("IBCOBST",$J,IBX,IBIFN)) Q:'IBIFN!(IBSTOP)  D
"RTN","IBCECOB3",25,0)
 .. S IB=$G(^TMP("IBCOBST",$J,IBX,IBIFN))
"RTN","IBCECOB3",26,0)
 .. S IBZ=$P($P(IB,U,11),";",2,99)
"RTN","IBCECOB3",27,0)
 .. I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCECOB3",28,0)
 .. W !,$$BN1^PRCAFN(IBIFN),?13,$$DAT1^IBOUTL($P(IB,U)),?24,$J($P(IB,U,2),8,2),?36,$J($P(IB,U,3),8,2),?48,$J($P(IB,U,4),8,2),?60,$P($P(IB,U,11),";"),?95,$$DAT1^IBOUTL($P(IB,U,13))
"RTN","IBCECOB3",29,0)
 .. W ?107,$E($$EXTERNAL^DILFD(399,.21,,$TR($P(IB,U,7),"123","PST")),1,10),?119,$P(IB,U,12)
"RTN","IBCECOB3",30,0)
 .. I IBZ'="" F IBI=1:1:$L(IBZ,";") D  Q:IBSTOP
"RTN","IBCECOB3",31,0)
 ... I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCECOB3",32,0)
 ... W !,?60,$P(IBZ,";",IBI)
"RTN","IBCECOB3",33,0)
 .. I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCECOB3",34,0)
 .. I 'IBUER W !,?3,"Authorizing/requesting biller: "_$P(IB,U,8)
"RTN","IBCECOB3",35,0)
 .. W !,?3,"Insurers on file: "_$P(IB,U,9),!
"RTN","IBCECOB3",36,0)
 G:IBSTOP LISTQ
"RTN","IBCECOB3",37,0)
 I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR
"RTN","IBCECOB3",38,0)
LISTQ ;K ^TMP("IBCOBST",$J)
"RTN","IBCECOB3",39,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCECOB3",40,0)
 W ! D ^%ZISC
"RTN","IBCECOB3",41,0)
 Q
"RTN","IBCECOB3",42,0)
HDR1 ;
"RTN","IBCECOB3",43,0)
 N DIR,Y
"RTN","IBCECOB3",44,0)
 I IBPAGE D  Q:IBSTOP
"RTN","IBCECOB3",45,0)
 . I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR S IBSTOP=('Y) Q:IBSTOP
"RTN","IBCECOB3",46,0)
 . W @IOF
"RTN","IBCECOB3",47,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCECOB3",48,0)
 W !,?48,"COB MANAGEMENT REPORT",?115,"PAGE: ",IBPAGE,!,?45,"RUN DATE: ",$$HTE^XLFDT($H,"2"),!
"RTN","IBCECOB3",49,0)
 W ?42,"SORT BY: "_$S(IBSRT="A":"AUTHORIZING/REQUESTING BILLER","D":"DAYS SINCE TRANSMISSION OF LATEST BILL","B":"BALANCE REMAINING","I":"INSURANCE COMPANY",1:"DATE LAST MRA RECEIVED")
"RTN","IBCECOB3",50,0)
 I IBUER W !!,"AUTHORIZING/REQUESTING BILLER: "_$G(IBX)
"RTN","IBCECOB3",51,0)
 W !,?114,"LAST COB PRODUCED"
"RTN","IBCECOB3",52,0)
 W !,?13,"DATE OF",?24,"BILLED",?36,"AMOUNT",?48,"BALANCE",?60,"MRA",?95,"DATE",?119,"DAYS SINCE"
"RTN","IBCECOB3",53,0)
 W !,"BILL #",?13,"SERVICE",?24,"AMOUNT",?36,"PAID",?48,"REMAINING",?60,"HISTORY",?95,"RECEIVED",?107,"SEQUENCE",?119,"TRANSMIT"
"RTN","IBCECOB3",54,0)
 W !,$TR($J("",132)," ","-"),!
"RTN","IBCECOB3",55,0)
 Q
"RTN","IBCECOB3",56,0)
 ;
"RTN","IBCECOB5")
0^49^B13018400
"RTN","IBCECOB5",1,0)
IBCECOB5 ;ALB/TMP - IB COB MANAGEMENT SCREEN ;31-JAN-01
"RTN","IBCECOB5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-94
"RTN","IBCECOB5",3,0)
 ;
"RTN","IBCECOB5",4,0)
INIT ;
"RTN","IBCECOB5",5,0)
 S IBDA=+$O(IBDA(0))
"RTN","IBCECOB5",6,0)
 Q:'IBDA
"RTN","IBCECOB5",7,0)
 D BLD(IBDA)
"RTN","IBCECOB5",8,0)
 S VALMBG=1
"RTN","IBCECOB5",9,0)
 Q
"RTN","IBCECOB5",10,0)
 ;
"RTN","IBCECOB5",11,0)
BLD(IBDA) ; Build list entrypoint
"RTN","IBCECOB5",12,0)
 N IB,IBIFN,IBVCNT,X,Z,IBCNT,CNT,IBREC,IBIFN1,IBPTRESP
"RTN","IBCECOB5",13,0)
 K ^TMP("IBCECOB-X",$J)
"RTN","IBCECOB5",14,0)
 S VALMCNT=0
"RTN","IBCECOB5",15,0)
 S IB=$G(^TMP("IBCECOB1",$J,IBDA)),IBCNT=$P(IB,"^",10)
"RTN","IBCECOB5",16,0)
 S IBVCNT=$G(^TMP("IBCECOB",$J,IBDA)),IBIFN=$P(IBVCNT,U,2),IBVCNT=+IBVCNT
"RTN","IBCECOB5",17,0)
 Q:'IBVCNT
"RTN","IBCECOB5",18,0)
 S Z=IBVCNT-1
"RTN","IBCECOB5",19,0)
 F  S Z=$O(^TMP("IBCECOB",$J,"IDX",Z)) Q:'Z!('$D(^TMP("IBCECOB",$J,"IDX",+Z,IBDA)))  D SET($G(^TMP("IBCECOB",$J,Z,0)))
"RTN","IBCECOB5",20,0)
 D SET("")
"RTN","IBCECOB5",21,0)
 S X=$E(" Original Billed Amt: $"_$$A10^IBCECSA5(+$P(IB,U,2))_$J("",40),1,40)
"RTN","IBCECOB5",22,0)
 S X=X_$S($G(IBSRC):"   Total A/R Payments: $"_$$A10^IBCECSA5($P(IB,U,3)),1:"Unreimburse Medicare Exp: $"_$$A10^IBCECSA5(+$G(^IBM(361.1,IBCNT,1))))
"RTN","IBCECOB5",23,0)
 D SET(X)
"RTN","IBCECOB5",24,0)
 ;
"RTN","IBCECOB5",25,0)
 S IBIFN1=$P($G(^IBM(361.1,IBCNT,0)),U,1)      ; bill#
"RTN","IBCECOB5",26,0)
 S IBPTRESP=$P($G(^IBM(361.1,IBCNT,1)),U,2)    ; Pt Resp Amt 1.02 field
"RTN","IBCECOB5",27,0)
 ; Override Pt Resp Amt for bills with Form Type UB92
"RTN","IBCECOB5",28,0)
 I $$FT^IBCEF(IBIFN1)=3 S IBPTRESP=$$PTRESPI^IBCECOB1(IBCNT)
"RTN","IBCECOB5",29,0)
 ;
"RTN","IBCECOB5",30,0)
 S X=$E($S($G(IBSRC):"        Bill Balance: $"_$$A10^IBCECSA5(+$P(IB,U,4)),1:" Pt Resp Amt:         $"_$$A10^IBCECSA5(IBPTRESP))_$J("",40),1,40)
"RTN","IBCECOB5",31,0)
 I '$G(IBSRC) N IBCALC,IBIFN S IBIFN=+$G(^IBM(361.1,IBCNT,0)) D MRACALC^IBCEMU2(IBCNT,IBIFN,0,.IBCALC)
"RTN","IBCECOB5",32,0)
 S X=X_$S($G(IBSRC):"       Total Amt This EOB: $"_$$A10^IBCECSA5($P(IB,U,17)),1:"   Medicare Contract Adj: $"_$$A10^IBCECSA5($G(IBCALC("MEDCA"))))
"RTN","IBCECOB5",33,0)
 D SET(X)
"RTN","IBCECOB5",34,0)
 D SET("")
"RTN","IBCECOB5",35,0)
 I $G(IBSRC) D
"RTN","IBCECOB5",36,0)
 . S X=" Days Since Last Transmit: "_+$P(IB,U,12)
"RTN","IBCECOB5",37,0)
 . D SET(X)
"RTN","IBCECOB5",38,0)
 . S X="       Authorizing Biller: "_$P(IB,U,8)
"RTN","IBCECOB5",39,0)
 . D SET(X)
"RTN","IBCECOB5",40,0)
 . S X="              COB History: "
"RTN","IBCECOB5",41,0)
 . I $P(IB,U,11)'="" D
"RTN","IBCECOB5",42,0)
 .. F Z=1:1:$L($P(IB,U,11),";") S X=X_$P($P(IB,U,11),";",Z) D SET(X) S X=$J("",27)
"RTN","IBCECOB5",43,0)
 . E  D
"RTN","IBCECOB5",44,0)
 .. S X=X_"NONE FOUND" D SET(X)
"RTN","IBCECOB5",45,0)
 I '$G(IBSRC) S CNT=20,IBREC=$G(^IBM(361.1,IBCNT,0)) K ^TMP("IBCECSD",$J) D MRALLA^IBCECSA5 M ^TMP("IBCECOB-X",$J)=^TMP("IBCECSD",$J) K ^TMP("IBCECSD",$J)
"RTN","IBCECOB5",46,0)
 ;
"RTN","IBCECOB5",47,0)
 Q
"RTN","IBCECOB5",48,0)
 ;
"RTN","IBCECOB5",49,0)
EXIT ; -- exit code --
"RTN","IBCECOB5",50,0)
 K ^TMP("IBCECOB-X",$J),IBDA
"RTN","IBCECOB5",51,0)
 D CLEAN^VALM10
"RTN","IBCECOB5",52,0)
 Q
"RTN","IBCECOB5",53,0)
 ;
"RTN","IBCECOB5",54,0)
HDR1 ; -- header code
"RTN","IBCECOB5",55,0)
 ; Assume IBIFN and IBZIEN are defined
"RTN","IBCECOB5",56,0)
 N IBCOB,IBINS
"RTN","IBCECOB5",57,0)
 K VALMHDR
"RTN","IBCECOB5",58,0)
 S IBINS=$$FINDINS^IBCEF1(IBIFN)
"RTN","IBCECOB5",59,0)
 S VALMHDR(1)=IORVON_" BILL #:"_$$BN^PRCAFN(IBIFN)_IORVOFF
"RTN","IBCECOB5",60,0)
 S VALMHDR(1)=$J("",80-$L(VALMHDR(1))\2)_VALMHDR(1)
"RTN","IBCECOB5",61,0)
 S VALMHDR(2)="  INSURANCE COMPANY: "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCECOB5",62,0)
 S VALMHDR(3)="  "_IOUON_"Svc Date  Patient Name/Last 4           Care Type/Form  COB/SEQ"_IOUOFF
"RTN","IBCECOB5",63,0)
 S Z=$G(^TMP("IBCECOB",$J,IBZIEN,0))
"RTN","IBCECOB5",64,0)
 S VALMHDR(4)="  "_$E(Z,17,$L(Z))
"RTN","IBCECOB5",65,0)
 Q
"RTN","IBCECOB5",66,0)
 ;
"RTN","IBCECOB5",67,0)
EXIT1 ; -- exit code --
"RTN","IBCECOB5",68,0)
 K ^TMP("IBCECSD",$J)
"RTN","IBCECOB5",69,0)
 D CLEAN^VALM10
"RTN","IBCECOB5",70,0)
 Q
"RTN","IBCECOB5",71,0)
 ;
"RTN","IBCECOB5",72,0)
VEOB ;View an EOB from EOB Management
"RTN","IBCECOB5",73,0)
 N IBDA,IBCNT,IBIFN,Z,VALMCNT,IBZIEN,IBONE
"RTN","IBCECOB5",74,0)
 ;
"RTN","IBCECOB5",75,0)
 D FULL^VALM1
"RTN","IBCECOB5",76,0)
 D SEL^IBCECOB2(.IBDA,1)
"RTN","IBCECOB5",77,0)
 S IBDA=+$O(IBDA(0))
"RTN","IBCECOB5",78,0)
 I IBDA D EN^VALM("IBCEM EOB VIEW EOB")
"RTN","IBCECOB5",79,0)
 S VALMBCK="R"
"RTN","IBCECOB5",80,0)
 Q
"RTN","IBCECOB5",81,0)
 ;
"RTN","IBCECOB5",82,0)
INIT1 ;
"RTN","IBCECOB5",83,0)
 S IBCNT=+$P($G(IBDA(IBDA)),U,3)
"RTN","IBCECOB5",84,0)
 S IBIFN=+$G(IBDA(IBDA)),IBZIEN=+$G(^TMP("IBCECOB",$J,IBDA)),IBONE=1
"RTN","IBCECOB5",85,0)
 Q:'IBCNT!'IBIFN!'IBZIEN
"RTN","IBCECOB5",86,0)
 D HDR1
"RTN","IBCECOB5",87,0)
 D BLD^IBCECSA6
"RTN","IBCECOB5",88,0)
 Q
"RTN","IBCECOB5",89,0)
 ;
"RTN","IBCECOB5",90,0)
SET(X) ;set up list manager screen array
"RTN","IBCECOB5",91,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECOB5",92,0)
 S ^TMP("IBCECOB-X",$J,VALMCNT,0)=X
"RTN","IBCECOB5",93,0)
 Q
"RTN","IBCECOB5",94,0)
 ;
"RTN","IBCECSA4")
0^67^B55019134
"RTN","IBCECSA4",1,0)
IBCECSA4 ;ALB/CXW - IB CLAIMS STATUS AWAITING RESOLUTION SCREEN ;5-AUG-1999
"RTN","IBCECSA4",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-1994
"RTN","IBCECSA4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECSA4",4,0)
 ;
"RTN","IBCECSA4",5,0)
SMSG ;select message
"RTN","IBCECSA4",6,0)
 N IBCOM,IBX,IBDAX,IBA
"RTN","IBCECSA4",7,0)
 D SEL(.IBDAX,1)
"RTN","IBCECSA4",8,0)
 I $O(IBDAX(""))="" G SMSGQ
"RTN","IBCECSA4",9,0)
 S IBDAX=+$O(IBDAX(0)),IBA=$G(IBDAX(IBDAX))
"RTN","IBCECSA4",10,0)
 S IBX=$G(^TMP("IBCECSB",$J,$P(IBA,U,3),$P(IBA,U,4),$P(IBA,U,2)))
"RTN","IBCECSA4",11,0)
 I IBX'="" D
"RTN","IBCECSA4",12,0)
 . Q:'$$LOCK^IBCEU0(361,$P(IBA,U,2))
"RTN","IBCECSA4",13,0)
 . D EN^VALM("IBCEM CSA MSG")
"RTN","IBCECSA4",14,0)
 . D UNLOCK^IBCEU0(361,$P(IBA,U,2))
"RTN","IBCECSA4",15,0)
SMSGQ S VALMBCK="R"
"RTN","IBCECSA4",16,0)
 D:$O(IBDAX(0)) BLD^IBCECSA1
"RTN","IBCECSA4",17,0)
 Q
"RTN","IBCECSA4",18,0)
 ;
"RTN","IBCECSA4",19,0)
COB ; COB management link from CSA
"RTN","IBCECSA4",20,0)
 N IBA,IBX
"RTN","IBCECSA4",21,0)
 ;IBX,IBA are killed during cancel execution
"RTN","IBCECSA4",22,0)
 D FULL^VALM1
"RTN","IBCECSA4",23,0)
 D EN^IBCECOB
"RTN","IBCECSA4",24,0)
 I $D(IBFASTXT) K IBFASTXT
"RTN","IBCECSA4",25,0)
 S VALMBCK="R"
"RTN","IBCECSA4",26,0)
 Q
"RTN","IBCECSA4",27,0)
 ;
"RTN","IBCECSA4",28,0)
EDI ;History detail display
"RTN","IBCECSA4",29,0)
 N IBIFN,IBX,IBA
"RTN","IBCECSA4",30,0)
 D FULL^VALM1
"RTN","IBCECSA4",31,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",32,0)
 D EDI2^IBCECOB2(IBIFN)
"RTN","IBCECSA4",33,0)
 S VALMBCK="R"
"RTN","IBCECSA4",34,0)
 Q
"RTN","IBCECSA4",35,0)
EOB ;View an EOB
"RTN","IBCECSA4",36,0)
 N IBIFN,IBA,IBX
"RTN","IBCECSA4",37,0)
 D FULL^VALM1
"RTN","IBCECSA4",38,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",39,0)
 D EN^VALM("IBCEM VIEW EOB")
"RTN","IBCECSA4",40,0)
 Q
"RTN","IBCECSA4",41,0)
 ;
"RTN","IBCECSA4",42,0)
TPJI ;Third Party joint Inquiry
"RTN","IBCECSA4",43,0)
 N IBIFN,IBX,IBA
"RTN","IBCECSA4",44,0)
 D FULL^VALM1
"RTN","IBCECSA4",45,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",46,0)
 D TPJI1^IBCECOB2(IBIFN)
"RTN","IBCECSA4",47,0)
 S VALMBCK="R"
"RTN","IBCECSA4",48,0)
 Q
"RTN","IBCECSA4",49,0)
 ;
"RTN","IBCECSA4",50,0)
PBILL ;Print bill - not for resubmit
"RTN","IBCECSA4",51,0)
 N IBIFN,IBX,IBA,IBRESUB
"RTN","IBCECSA4",52,0)
 D FULL^VALM1
"RTN","IBCECSA4",53,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(+IBDAX))
"RTN","IBCECSA4",54,0)
 I "34"'[$P($G(^DGCR(399,IBIFN,0)),U,13) W !!,"Bill status must be AUTHORIZED or PRNT/TX to print the bill." D PAUSE^VALM1 G PB1
"RTN","IBCECSA4",55,0)
 S IBRESUB=$$RESUB(IBIFN,1,"PX")
"RTN","IBCECSA4",56,0)
 I IBRESUB'>0 W !,*7,"This is not a transmittable bill or review not needed" D PAUSE^VALM1 G PB1
"RTN","IBCECSA4",57,0)
 I IBRESUB=2 D  G PB1
"RTN","IBCECSA4",58,0)
 . N IB364
"RTN","IBCECSA4",59,0)
 . S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",60,0)
 . D PRINT1^IBCEM03(IBIFN,.IBDAX,IB364)
"RTN","IBCECSA4",61,0)
 D PBILL1^IBCECOB2(IBIFN)
"RTN","IBCECSA4",62,0)
PB1 ;
"RTN","IBCECSA4",63,0)
 S VALMBCK="R"
"RTN","IBCECSA4",64,0)
 Q
"RTN","IBCECSA4",65,0)
 ;
"RTN","IBCECSA4",66,0)
CANCEL ;Cancel bill
"RTN","IBCECSA4",67,0)
 N IBIFN,IB364,IBX,IBA,MRACHK
"RTN","IBCECSA4",68,0)
 ; IBX,IBA will be killed during execution - need to protect them
"RTN","IBCECSA4",69,0)
 D FULL^VALM1
"RTN","IBCECSA4",70,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(+IBDAX))
"RTN","IBCECSA4",71,0)
 ; Check for security key
"RTN","IBCECSA4",72,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CANCELQ
"RTN","IBCECSA4",73,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECSA4",74,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECSA4",75,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",76,0)
 . Q
"RTN","IBCECSA4",77,0)
 D MRACHK I MRACHK G CANCELQ
"RTN","IBCECSA4",78,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",79,0)
 D CANCEL^IBCEM3(.IBDAX,IBIFN,IB364)
"RTN","IBCECSA4",80,0)
CANCELQ S VALMBCK="R"
"RTN","IBCECSA4",81,0)
 Q
"RTN","IBCECSA4",82,0)
 ;
"RTN","IBCECSA4",83,0)
CLONE ;'Copy/cancel bill' protocol action
"RTN","IBCECSA4",84,0)
 N IBX,IBA,IB364,MRACHK,IBIFN
"RTN","IBCECSA4",85,0)
 ; IBX,IBA will be killed during execution - need to protect them
"RTN","IBCECSA4",86,0)
 D FULL^VALM1
"RTN","IBCECSA4",87,0)
 S IBDAX=$O(IBDAX("")),IBIFN=+$P($G(IBDAX(IBDAX)),U)
"RTN","IBCECSA4",88,0)
 I IBDAX="" G CLONEQ
"RTN","IBCECSA4",89,0)
 ; Check for security key
"RTN","IBCECSA4",90,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CLONEQ
"RTN","IBCECSA4",91,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECSA4",92,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECSA4",93,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",94,0)
 . Q
"RTN","IBCECSA4",95,0)
 D MRACHK I MRACHK G CLONEQ
"RTN","IBCECSA4",96,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",97,0)
 D COPYCLON^IBCECOB2(+$G(IBDAX(IBDAX)),IB364,.IBDAX)
"RTN","IBCECSA4",98,0)
CLONEQ S VALMBCK="R"
"RTN","IBCECSA4",99,0)
 Q
"RTN","IBCECSA4",100,0)
 ;
"RTN","IBCECSA4",101,0)
PRO ; Copy for secondary/tertiary bill
"RTN","IBCECSA4",102,0)
 N IBIFNH,IBIFN,IB364,IBX,IBA,Z,IBCBASK,IBCBCOPY,IBCAN
"RTN","IBCECSA4",103,0)
 D FULL^VALM1
"RTN","IBCECSA4",104,0)
 ;IBDAX - array from selection of message
"RTN","IBCECSA4",105,0)
 S IBA=$G(IBDAX(+$G(IBDAX)))
"RTN","IBCECSA4",106,0)
 G:'IBA PROQ
"RTN","IBCECSA4",107,0)
 S IBX=$G(^TMP("IBCECSB",$J,$P(IBA,U,3),$P(IBA,U,4),$P(IBA,U,2))),IBIFN=$P(IBA,U)
"RTN","IBCECSA4",108,0)
 S IB364=+$P(IBA,U,5)
"RTN","IBCECSA4",109,0)
 G:'IBIFN PROQ
"RTN","IBCECSA4",110,0)
 ;
"RTN","IBCECSA4",111,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2 D  G PROQ
"RTN","IBCECSA4",112,0)
 . W !!?4,"This bill is in a status of REQUEST MRA."
"RTN","IBCECSA4",113,0)
 . I $$CHK^IBCEMU1(IBIFN) W !?4,"MRA EOBs must be processed from the MRA management worklist."
"RTN","IBCECSA4",114,0)
 . E  W !?4,"There are no MRA EOBs on file."
"RTN","IBCECSA4",115,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",116,0)
 . Q
"RTN","IBCECSA4",117,0)
 ;
"RTN","IBCECSA4",118,0)
 D COBCOPY^IBCECOB2(IBIFN,IB364,1,$P(IBA,U,2),"INIT^IBCECSA2")
"RTN","IBCECSA4",119,0)
PROQ S VALMBCK="R"
"RTN","IBCECSA4",120,0)
 Q
"RTN","IBCECSA4",121,0)
 ;
"RTN","IBCECSA4",122,0)
RES ;Resubmit bill by print
"RTN","IBCECSA4",123,0)
 N IBTMP,IB364,IBIFN,IBX,IBA
"RTN","IBCECSA4",124,0)
 D FULL^VALM1
"RTN","IBCECSA4",125,0)
 S (IBTMP,IBDAX)=$O(IBDAX(0)),IBTMP(IBTMP)=IBDAX(IBDAX)
"RTN","IBCECSA4",126,0)
 S IBIFN=$P($G(IBDAX(+IBDAX)),U)
"RTN","IBCECSA4",127,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",128,0)
 I IBIFN D PRINT1^IBCEM03(IBIFN,.IBDAX,IB364),PAUSE^VALM1,INIT^IBCECSA2
"RTN","IBCECSA4",129,0)
 S IBDAX(IBTMP)=IBTMP(IBTMP)
"RTN","IBCECSA4",130,0)
 S VALMBCK="R"
"RTN","IBCECSA4",131,0)
 Q
"RTN","IBCECSA4",132,0)
 ;
"RTN","IBCECSA4",133,0)
EBI ;Edit bill
"RTN","IBCECSA4",134,0)
 N IBFLG,IBIFN,IB364,IBX,IBA
"RTN","IBCECSA4",135,0)
 K ^TMP($J,"IBBILL")
"RTN","IBCECSA4",136,0)
 D FULL^VALM1
"RTN","IBCECSA4",137,0)
 S IBDAX=$O(IBDAX(""))
"RTN","IBCECSA4",138,0)
 I IBDAX="" G EDITQ
"RTN","IBCECSA4",139,0)
 S IBIFN=$P(IBDAX(IBDAX),U)
"RTN","IBCECSA4",140,0)
 S IBFLG=1 D  I IBFLG S IBDAX="" D PAUSE^VALM1 G EDITQ
"RTN","IBCECSA4",141,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,13)>2 W !,*7,"An authorized bill can not be edited." Q
"RTN","IBCECSA4",142,0)
 . I '$D(^XUSEC("IB EDIT",DUZ)) W !,*7,"You are not authorized to edit a bill" Q
"RTN","IBCECSA4",143,0)
 . S IBFLG=0
"RTN","IBCECSA4",144,0)
 S IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",145,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",146,0)
 D EBILL^IBCEM3(.IBDAX,IBIFN,IB364)
"RTN","IBCECSA4",147,0)
EDITQ S VALMBCK="R"
"RTN","IBCECSA4",148,0)
 Q
"RTN","IBCECSA4",149,0)
 ;
"RTN","IBCECSA4",150,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCECSA4",151,0)
 ; IBDA = array returned if selections made
"RTN","IBCECSA4",152,0)
 ;    IBDAX(n)=ien of bill selected (file 399)
"RTN","IBCECSA4",153,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCECSA4",154,0)
 N IB
"RTN","IBCECSA4",155,0)
 K IBDA
"RTN","IBCECSA4",156,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECSA4",157,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  D
"RTN","IBCECSA4",158,0)
 . S IBDA(IBDA)=$P($G(^TMP("IBCECSA",$J,IBDA)),U,2,6)
"RTN","IBCECSA4",159,0)
 Q
"RTN","IBCECSA4",160,0)
 ;
"RTN","IBCECSA4",161,0)
RESUB(IBIFN,TXMT,IBFUNC,IBTBA) ; Function asks if resubmit as resolution to a
"RTN","IBCECSA4",162,0)
 ;   message is the intention
"RTN","IBCECSA4",163,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCECSA4",164,0)
 ; TXMT = flag if = 1, assume it's transmittable, don't have to check
"RTN","IBCECSA4",165,0)
 ; IBFUNC = code to say where the code is called from
"RTN","IBCECSA4",166,0)
 ;  'E'=edit/authorize  'P'=print 'PX'= print/not to resubmit  'C'=cancel
"RTN","IBCECSA4",167,0)
 ; IBTBA = transmit bill array returned to calling routine.  Optional
"RTN","IBCECSA4",168,0)
 ;    parameter to be passed by reference.
"RTN","IBCECSA4",169,0)
 ;    IBTBA(364ptr)=""
"RTN","IBCECSA4",170,0)
 ;
"RTN","IBCECSA4",171,0)
 ; Returns:
"RTN","IBCECSA4",172,0)
 ; -1 = ^ or timeout at prompt
"RTN","IBCECSA4",173,0)
 ;  0 = not a transmittable bill or review not needed
"RTN","IBCECSA4",174,0)
 ;  1 = don't update the review status (user choice)
"RTN","IBCECSA4",175,0)
 ;  2 = Yes, update the review status (user choice), or resubmit by print
"RTN","IBCECSA4",176,0)
 ;
"RTN","IBCECSA4",177,0)
 NEW DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,STAT
"RTN","IBCECSA4",178,0)
 KILL IBTBA
"RTN","IBCECSA4",179,0)
 I '$G(TXMT),'$$TXMT^IBCEF4(IBIFN) S Y=0 G RESUB1   ; not transmittable
"RTN","IBCECSA4",180,0)
 ;
"RTN","IBCECSA4",181,0)
 ; Check for any messages or EOB's needing review
"RTN","IBCECSA4",182,0)
 S STAT=$$STATUS^IBCEF4(IBIFN)
"RTN","IBCECSA4",183,0)
 I '$TR(STAT,U) S Y=0 G RESUB1                ; no unreviewed items
"RTN","IBCECSA4",184,0)
 I $P(STAT,U,1) S IBTBA($P(STAT,U,1))=""      ; 364 ien for 361 data
"RTN","IBCECSA4",185,0)
 I $P(STAT,U,2) S IBTBA($P(STAT,U,2))=""      ; 364 ien for 361.1 data
"RTN","IBCECSA4",186,0)
 ;
"RTN","IBCECSA4",187,0)
 I IBFUNC'="P" D
"RTN","IBCECSA4",188,0)
 . S DIR(0)="YA",DIR("A",1)="",DIR("A",2)="This bill is in need of review due to receipt of a status msg or EOB",DIR("A")="OK to update the review status to 'REVIEW COMPLETE' based on this action?: ",DIR("B")="NO"
"RTN","IBCECSA4",189,0)
 . S DIR("?",1)="You have just "_$S(IBFUNC="E":"requested re-transmission of",IBFUNC="C":"cancelled",1:"")_" the bill"
"RTN","IBCECSA4",190,0)
 . S DIR("?",2)="You can update the review status of the unreviewed message to ",DIR("?",3)=" 'REVIEW COMPLETE' if you say YES here"
"RTN","IBCECSA4",191,0)
 . S DIR("?")="Press ENTER to continue "
"RTN","IBCECSA4",192,0)
 . D ^DIR K DIR
"RTN","IBCECSA4",193,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=-1 Q
"RTN","IBCECSA4",194,0)
 . S Y=Y+1
"RTN","IBCECSA4",195,0)
 E  D
"RTN","IBCECSA4",196,0)
 . W !,"The review status of this message will be updated to 'REVIEW COMPLETE'",!,"  based on this action"
"RTN","IBCECSA4",197,0)
 . S Y=2
"RTN","IBCECSA4",198,0)
 ;
"RTN","IBCECSA4",199,0)
RESUB1 Q +Y
"RTN","IBCECSA4",200,0)
 ;
"RTN","IBCECSA4",201,0)
RETXMT ;
"RTN","IBCECSA4",202,0)
 N IB364,IBIFN
"RTN","IBCECSA4",203,0)
 D FULL^VALM1
"RTN","IBCECSA4",204,0)
 S IBDAX=$O(IBDAX(0)),IB364=+$P($G(IBDAX(IBDAX)),U,5),IBIFN=+$P($G(IBDAX(IBDAX)),U)
"RTN","IBCECSA4",205,0)
 I 'IB364!('IBIFN) G RETXMTQ
"RTN","IBCECSA4",206,0)
 D MRACHK I MRACHK G RETXMTQ
"RTN","IBCECSA4",207,0)
 D RESUB^IBCE(IB364)
"RTN","IBCECSA4",208,0)
RETXMTQ S VALMBCK="R"
"RTN","IBCECSA4",209,0)
 Q
"RTN","IBCECSA4",210,0)
 ;
"RTN","IBCECSA4",211,0)
MRACHK ; Restrict access to process REQUEST MRA claims
"RTN","IBCECSA4",212,0)
 S MRACHK=0
"RTN","IBCECSA4",213,0)
 ; At least one MRA EOB appears on the MRA management worklist
"RTN","IBCECSA4",214,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2,$$MRAWL^IBCEMU2(IBIFN) S MRACHK=1 D  D PAUSE^VALM1
"RTN","IBCECSA4",215,0)
 . W !,?4,"This bill is in a status of REQUEST MRA and it does appear on"
"RTN","IBCECSA4",216,0)
 . W !,?4,"the MRA Management Worklist.  Please use the MRA Management Menu"
"RTN","IBCECSA4",217,0)
 . W !,?4,"options for all processing related to this bill."
"RTN","IBCECSA4",218,0)
 Q
"RTN","IBCECSA5")
0^30^B62760679
"RTN","IBCECSA5",1,0)
IBCECSA5 ;ALB/CXW - VIEW EOB SCREEN ;01-OCT-1999
"RTN","IBCECSA5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,263,280,155**;21-MAR-1994
"RTN","IBCECSA5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECSA5",4,0)
 ;
"RTN","IBCECSA5",5,0)
EN ; -- main entry point for VIEW EOB
"RTN","IBCECSA5",6,0)
 N VALMCNT,VALMBG,VALMHDR
"RTN","IBCECSA5",7,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCECSA5",8,0)
 D EN^VALM("IBCEM VIEW EOB")
"RTN","IBCECSA5",9,0)
 Q
"RTN","IBCECSA5",10,0)
 ;
"RTN","IBCECSA5",11,0)
INIT ; -- init variables and list array
"RTN","IBCECSA5",12,0)
 I '$G(IBIFN) S VALMQUIT="" G INITQ    ; bill# is required
"RTN","IBCECSA5",13,0)
 D HDR^IBCEOB2                         ; build the VALMHDR array
"RTN","IBCECSA5",14,0)
 K IBCNT,IBONE,^TMP("IBCECSD",$J)      ; kill vars and scratch global
"RTN","IBCECSA5",15,0)
 ;
"RTN","IBCECSA5",16,0)
 ; 8/13/03 - If variable IBEOBIFN is set, then this is the 361.1 ien
"RTN","IBCECSA5",17,0)
 ;           that the user selected from a list.  Build the detail.
"RTN","IBCECSA5",18,0)
 I $G(IBEOBIFN) S IBCNT=IBEOBIFN,IBONE=1 D BLD^IBCECSA6 G INITQ
"RTN","IBCECSA5",19,0)
 ;
"RTN","IBCECSA5",20,0)
 D BLD^IBCEOB2   ; build ^TMP("IBCEOB",$J) containing MRA/EOB lister
"RTN","IBCECSA5",21,0)
 S IBONE=0
"RTN","IBCECSA5",22,0)
 M ^TMP("IBCECSD",$J)=^TMP("IBCEOB",$J)
"RTN","IBCECSA5",23,0)
 ;
"RTN","IBCECSA5",24,0)
 ; 4/7/03 - If only 1 EOB record found for this bill, then set the
"RTN","IBCECSA5",25,0)
 ;          IBCNT variable, the IBONE one-time flag, and build the
"RTN","IBCECSA5",26,0)
 ;          detail sections of this list.
"RTN","IBCECSA5",27,0)
 I $G(VALMCNT)=1 S IBCNT=$P($G(^TMP("IBCECSD",$J,1)),U,2),IBONE=1 I IBCNT D BLD^IBCECSA6
"RTN","IBCECSA5",28,0)
 ;
"RTN","IBCECSA5",29,0)
INITQ Q
"RTN","IBCECSA5",30,0)
 ;
"RTN","IBCECSA5",31,0)
HELP ; -- help code
"RTN","IBCECSA5",32,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECSA5",33,0)
 Q
"RTN","IBCECSA5",34,0)
 ;
"RTN","IBCECSA5",35,0)
EXIT ; -- exit code
"RTN","IBCECSA5",36,0)
 K ^TMP("IBCECSD",$J)
"RTN","IBCECSA5",37,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBCECSA5",38,0)
 Q
"RTN","IBCECSA5",39,0)
MIN ;
"RTN","IBCECSA5",40,0)
 N IBREC1,IBRM1,IBRM2,IBRM3,IBRM4,IBRM5,IBRL,IBTYPE,IBT,IBTX,IBD
"RTN","IBCECSA5",41,0)
 ; flag for inpatient mra
"RTN","IBCECSA5",42,0)
 S IBTYPE=$S($G(IBSRC):1,$$INPAT^IBCEF(+IBREC):1,1:0)
"RTN","IBCECSA5",43,0)
 ;
"RTN","IBCECSA5",44,0)
 S IB=$$SETSTR^VALM1("MEDICARE INFORMATION:","",1,50)
"RTN","IBCECSA5",45,0)
 D SET(IB)
"RTN","IBCECSA5",46,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",47,0)
 . D CNTRL^VALM10(VALMCNT,1,21,IORVON,IORVOFF)
"RTN","IBCECSA5",48,0)
 . S ^TMP("IBCECSD",$J,"X",5)=VALMCNT
"RTN","IBCECSA5",49,0)
 I $G(IBSRC),'$D(^IBM(361.1,IBCNT,4)) Q
"RTN","IBCECSA5",50,0)
 I '$G(IBSRC),'$$INPAT^IBCEF(+IBREC) Q
"RTN","IBCECSA5",51,0)
 D SET(" INPATIENT:")
"RTN","IBCECSA5",52,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,4)),(IB,IBRL)=""
"RTN","IBCECSA5",53,0)
 ;
"RTN","IBCECSA5",54,0)
 F IBT=2:1 S IBTX=$P($T(MINDAT+IBT),";",3) Q:IBTX=""  D
"RTN","IBCECSA5",55,0)
 . S IBD=$P(IBREC1,"^",+IBTX)
"RTN","IBCECSA5",56,0)
 . I $L($P(IBTX,"^",4)) X $P(IBTX,"^",4) E  N IBFULL S IBFULL=1
"RTN","IBCECSA5",57,0)
 . I $S(IBFULL:1,1:IBD) D
"RTN","IBCECSA5",58,0)
 .. I $L($P(IBTX,"^",4)) X $P(IBTX,"^",4) I  Q
"RTN","IBCECSA5",59,0)
 .. X "S IBD="_$S($L($P(IBTX,"^",3)):$P(IBTX,"^",3),1:"$$A10(IBD)")
"RTN","IBCECSA5",60,0)
 .. S IB=$$SETSTR^VALM1($P(IBTX,"^",2)_IBD,IB,$S('IBRL:4,1:37),$S('IBRL:41,1:38))
"RTN","IBCECSA5",61,0)
 .. S IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA5",62,0)
 .. I 'IBRL D SET(IB,IBRL) S IB=""
"RTN","IBCECSA5",63,0)
 ;
"RTN","IBCECSA5",64,0)
 D:IBRL'="" SET(IB)
"RTN","IBCECSA5",65,0)
 D REMARK
"RTN","IBCECSA5",66,0)
 Q
"RTN","IBCECSA5",67,0)
 ;
"RTN","IBCECSA5",68,0)
MINDAT ; data for MIN tag
"RTN","IBCECSA5",69,0)
 ; format:  piece^lable^special format code^special decision for disp
"RTN","IBCECSA5",70,0)
 ;;1^Cov Days/Visit Ct  : ^$$RJ(+IBD)^I $G(IBSRC)
"RTN","IBCECSA5",71,0)
 ;;3^Claim DRG Amt      : 
"RTN","IBCECSA5",72,0)
 ;;2^Lifetm Psych Dy Ct : ^$$RJ(IBD)
"RTN","IBCECSA5",73,0)
 ;;5^Disprop Share Amt  : ^^I IBTYPE
"RTN","IBCECSA5",74,0)
 ;;4^Cap Exception Amt  : 
"RTN","IBCECSA5",75,0)
 ;;7^PPS Capital Amt    : ^^I IBTYPE
"RTN","IBCECSA5",76,0)
 ;;6^MSP Pass Thru Amt  : 
"RTN","IBCECSA5",77,0)
 ;;9^PPS Cap HSP-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",78,0)
 ;;8^PPS Cap FSP-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",79,0)
 ;;11^Old Capital Amt    : ^^I IBTYPE
"RTN","IBCECSA5",80,0)
 ;;10^PPS Cap DSH-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",81,0)
 ;;13^PPS Op Hos DRG Amt : 
"RTN","IBCECSA5",82,0)
 ;;12^PPS Capital IME Amt: ^^I IBTYPE
"RTN","IBCECSA5",83,0)
 ;;15^PPS Op Fed DRG Amt : ^^I IBTYPE
"RTN","IBCECSA5",84,0)
 ;;14^Cost Report Day Ct : ^$$RJ(IBD)^I IBTYPE
"RTN","IBCECSA5",85,0)
 ;;17^Indirect Teach Amt : ^^I IBTYPE
"RTN","IBCECSA5",86,0)
 ;;16^PPS Cap Outlier Amt: ^^I IBTYPE
"RTN","IBCECSA5",87,0)
 ;;18^Non-Pay Prof Comp  : ^$$RJ(IBD)
"RTN","IBCECSA5",88,0)
 ;;19^Non-Covered Days Ct: ^$$RJ(+IBD)^I IBTYPE
"RTN","IBCECSA5",89,0)
 ;;
"RTN","IBCECSA5",90,0)
 ;
"RTN","IBCECSA5",91,0)
REMARK ; set up remarks and line level details
"RTN","IBCECSA5",92,0)
 N IBREC1,IBP,IBT,IBX,RCODE,RDESC,REXIST
"RTN","IBCECSA5",93,0)
 Q:$G(IBREM)  S IBREM=1
"RTN","IBCECSA5",94,0)
 D SET(" ")
"RTN","IBCECSA5",95,0)
 D SET(" Claim Level Remark Information")
"RTN","IBCECSA5",96,0)
 D SET("   Code     Description")
"RTN","IBCECSA5",97,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",98,0)
 . D CNTRL^VALM10(VALMCNT,4,4,IOUON,IOUOFF)
"RTN","IBCECSA5",99,0)
 . D CNTRL^VALM10(VALMCNT,13,11,IOUON,IOUOFF)
"RTN","IBCECSA5",100,0)
 . Q
"RTN","IBCECSA5",101,0)
 ;
"RTN","IBCECSA5",102,0)
 S IBREC1=$P($G(^IBM(361.1,IBCNT,3)),U,3,7)
"RTN","IBCECSA5",103,0)
 I $P(IBREC1,U,1)="" S IBREC1=$P($G(^IBM(361.1,IBCNT,5)),U,1,5)
"RTN","IBCECSA5",104,0)
 S REXIST=0
"RTN","IBCECSA5",105,0)
 ;
"RTN","IBCECSA5",106,0)
 F IBP=1:1:5 D
"RTN","IBCECSA5",107,0)
 . S RCODE=$P(IBREC1,U,IBP)
"RTN","IBCECSA5",108,0)
 . S RDESC=$G(^IBM(361.1,IBCNT,"RM"_IBP))
"RTN","IBCECSA5",109,0)
 . I RCODE="",RDESC="" Q
"RTN","IBCECSA5",110,0)
 . S REXIST=1
"RTN","IBCECSA5",111,0)
 . K IBT
"RTN","IBCECSA5",112,0)
 . S IBT(IBP)=RDESC
"RTN","IBCECSA5",113,0)
 . D TXT1(.IBT,0,60)
"RTN","IBCECSA5",114,0)
 . D SET("   "_$$LJ^XLFSTR(RCODE,6)_"-  "_$G(IBT(1)))
"RTN","IBCECSA5",115,0)
 . S IBX=1
"RTN","IBCECSA5",116,0)
 . F  S IBX=$O(IBT(IBX)) Q:'IBX  D SET($J("",12)_IBT(IBX))
"RTN","IBCECSA5",117,0)
 . Q
"RTN","IBCECSA5",118,0)
 ;
"RTN","IBCECSA5",119,0)
 I 'REXIST D SET("   No claim level remarks on file")
"RTN","IBCECSA5",120,0)
 D SET(" ")
"RTN","IBCECSA5",121,0)
 Q:$G(IBSRC)  ; MRA Only
"RTN","IBCECSA5",122,0)
 ;
"RTN","IBCECSA5",123,0)
MRALLA S IB=$$SETSTR^VALM1("LINE LEVEL ADJUSTMENTS:","",1,50)
"RTN","IBCECSA5",124,0)
 D SET(IB)
"RTN","IBCECSA5",125,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",126,0)
 . D CNTRL^VALM10(VALMCNT,1,23,IORVON,IORVOFF)
"RTN","IBCECSA5",127,0)
 . S ^TMP("IBCECSD",$J,"X",7)=VALMCNT
"RTN","IBCECSA5",128,0)
 I '$D(^IBM(361.1,IBCNT,15,0)) D SET("NONE") Q  ; only if there is info
"RTN","IBCECSA5",129,0)
 ;
"RTN","IBCECSA5",130,0)
 ; look up all billed data
"RTN","IBCECSA5",131,0)
 N IBZDATA,IBFORM,IBX2,IBX3,IBREC2,IBREC3,IBTX,IBT,IBRC,IBZ,IBTXL
"RTN","IBCECSA5",132,0)
 S IBFORM=0                             ; hcfa-1500
"RTN","IBCECSA5",133,0)
 I $$FT^IBCEF(+IBREC)=3 S IBFORM=1      ; ub92
"RTN","IBCECSA5",134,0)
 D F^IBCEF("N-"_$S(IBFORM:"UB92",1:"HCFA 1500")_" SERVICE LINE (EDI)","IBZDATA",,+IBREC)
"RTN","IBCECSA5",135,0)
 ;
"RTN","IBCECSA5",136,0)
 S IBX=0 F  S IBX=$O(^IBM(361.1,IBCNT,15,IBX)) Q:IBX<1  S IBREC1=^IBM(361.1,IBCNT,15,IBX,0) D
"RTN","IBCECSA5",137,0)
 . NEW RVL
"RTN","IBCECSA5",138,0)
 . D SET("  #   SV DT   REVCD  PROC  MOD  UNITS  BILLED  DEDUCT  COINS    ALLOW     PYMT")
"RTN","IBCECSA5",139,0)
 . S RVL=+$P(IBREC1,U,12)       ; referenced Vista line#
"RTN","IBCECSA5",140,0)
 . I 'RVL S RVL=IBX             ; use the EOB line# if not there
"RTN","IBCECSA5",141,0)
 . S IBT=$$RJ($P(IBREC1,"^"),3) ;             line number
"RTN","IBCECSA5",142,0)
 . S IBT=IBT_" "_$$DAT1^IBOUTL($P($P(IBREC1,"^",16),".")) ; service date
"RTN","IBCECSA5",143,0)
 . S IBT=IBT_" "_$$RJ($$EXTERNAL^DILFD(361.115,.1,"",$P(IBREC1,"^",10)),6) ;                                                revcd
"RTN","IBCECSA5",144,0)
 . S IBT=IBT_" "_$$RJ($P(IBREC1,"^",4),5) ;   procedure
"RTN","IBCECSA5",145,0)
 . S IBT=IBT_" "_$$RJ($P($G(^IBM(361.1,IBCNT,15,IBX,2,1,0)),"^"),3)_$S($D(^IBM(361.1,IBCNT,15,IBX,2,2,0)):"+",1:" ") ;      modifiers
"RTN","IBCECSA5",146,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",11),"",0),5) ; units
"RTN","IBCECSA5",147,0)
 . S IBT=IBT_" "_$$RJ($FN($S(IBFORM:$P($G(IBZDATA(RVL)),"^",5),1:$P($G(IBZDATA(RVL)),"^",8)*$P($G(IBZDATA(RVL)),"^",9)),"",2),8) ;    billed
"RTN","IBCECSA5",148,0)
 . S IBT=IBT_" "_$$RJ($FN($P($G(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,+$O(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,"B",1,0)),0)),"^",2),"",2),7) ;  deduct
"RTN","IBCECSA5",149,0)
 . S IBT=IBT_" "_$$RJ($FN($P($G(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,+$O(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,"B",2,0)),0)),"^",2),"",2),6) ;   coins
"RTN","IBCECSA5",150,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",13),"",2),8) ; allow
"RTN","IBCECSA5",151,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",3),"",2),8) ;  payment
"RTN","IBCECSA5",152,0)
 . D SET(IBT)
"RTN","IBCECSA5",153,0)
 . S IBX2=0 F  S IBX2=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2)) Q:IBX2<1  D
"RTN","IBCECSA5",154,0)
 .. S IBREC2=^IBM(361.1,IBCNT,15,IBX,1,IBX2,0),IBX3=0
"RTN","IBCECSA5",155,0)
 .. F  S IBX3=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2,1,IBX3)) Q:IBX3<1  D
"RTN","IBCECSA5",156,0)
 ... S IBREC3=^IBM(361.1,IBCNT,15,IBX,1,IBX2,1,IBX3,0)
"RTN","IBCECSA5",157,0)
 ... ; line level adjustments; don't display kludges (esg 10/23/03)
"RTN","IBCECSA5",158,0)
 ... I $P(IBREC2,U,1)="PR",$P(IBREC3,U,1)="AAA" Q
"RTN","IBCECSA5",159,0)
 ... I $P(IBREC2,U,1)="OA",$P(IBREC3,U,1)="AB3" Q
"RTN","IBCECSA5",160,0)
 ... I $P(IBREC2,U,1)="LQ" Q
"RTN","IBCECSA5",161,0)
 ... S IBTX(1)="ADJ: "_$P(IBREC2,"^")_"  "_$P(IBREC3,"^")_"  "_$P(IBREC3,"^",4) D TXT1(.IBTX,0,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",162,0)
 ... K IBTX
"RTN","IBCECSA5",163,0)
 ... D SET("ADJ AMT: "_$FN($P(IBREC3,"^",2),"",2))
"RTN","IBCECSA5",164,0)
 . S IBRC=0
"RTN","IBCECSA5",165,0)
 . F  S IBRC=$O(^IBM(361.1,IBCNT,15,IBX,4,IBRC)) Q:'IBRC  S IBREC2=$G(^(IBRC,0)) I IBREC2 K IBTX,IBZ S IBTX(1)="  -REMARK CODE("_+IBREC2_"): ",IBTXL=$L(IBTX(1)) D
"RTN","IBCECSA5",166,0)
 .. S IBTX(1)=IBTX(1)_$P(IBREC2,U,2)_"  "_$P(IBREC2,U,3)
"RTN","IBCECSA5",167,0)
 .. I $L(IBTX(1))>79 D
"RTN","IBCECSA5",168,0)
 ... D TXT1(.IBTX,0,79) D SET(IBTX(1)) M IBZ=IBTX K IBTX S IBTX(1)="",IBT=1 F  S IBT=$O(IBZ(IBT)) Q:'IBT  S IBTX(1)=IBTX(1)_IBZ(IBT)_" "
"RTN","IBCECSA5",169,0)
 .. E  D
"RTN","IBCECSA5",170,0)
 ... S IBTXL=0
"RTN","IBCECSA5",171,0)
 .. D TXT1(.IBTX,IBTXL,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",172,0)
 . D SET(" ")
"RTN","IBCECSA5",173,0)
 D SET(" ")
"RTN","IBCECSA5",174,0)
 Q
"RTN","IBCECSA5",175,0)
 ;
"RTN","IBCECSA5",176,0)
TXT(IBRM,IBLN,IBXY) ;display text over 79 chars
"RTN","IBCECSA5",177,0)
 ;IBRM - text, IBLN - length, IBXY - position
"RTN","IBCECSA5",178,0)
 S IBRM=$E(IBRM,IBLN+1,999)
"RTN","IBCECSA5",179,0)
REP I $E(IBRM,1,IBLN)'="" S IB=$$SETSTR^VALM1($E(IBRM,1,IBLN),"",IBXY,IBLN) D SET(IB) S IBRM=$E(IBRM,IBLN+1,999) G REP
"RTN","IBCECSA5",180,0)
 Q
"RTN","IBCECSA5",181,0)
 ;
"RTN","IBCECSA5",182,0)
SET(IB,IBSAV) ;
"RTN","IBCECSA5",183,0)
 I '$G(IBSAV) D SET^IBCECSA6($G(IBSRC),IB,CNT,IBCNT)
"RTN","IBCECSA5",184,0)
 Q
"RTN","IBCECSA5",185,0)
 ;
"RTN","IBCECSA5",186,0)
A10(X) ;
"RTN","IBCECSA5",187,0)
 Q $$A10^IBCECSA6(X)
"RTN","IBCECSA5",188,0)
 ;
"RTN","IBCECSA5",189,0)
A7(X) ; returns a dollar amount right justified to 7 characters
"RTN","IBCECSA5",190,0)
 Q $$RJ($FN(X,"",2),7)
"RTN","IBCECSA5",191,0)
 ;
"RTN","IBCECSA5",192,0)
TXT1(IBT,DIWL,DIWR) ; sets up text for over 79 chars
"RTN","IBCECSA5",193,0)
 ; IBT - pass by ref, array of text to be formatted back in array
"RTN","IBCECSA5",194,0)
 ; DIWL - left margin, DIWR = right margin
"RTN","IBCECSA5",195,0)
 N IBX,X,DIWF,IBS K ^UTILITY($J,"W")
"RTN","IBCECSA5",196,0)
 S DIWF="|I"_DIWL
"RTN","IBCECSA5",197,0)
 S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  S X=IBT(IBX) D ^DIWP
"RTN","IBCECSA5",198,0)
 K IBT F  S IBX=$O(^UTILITY($J,"W",DIWL,IBX)) Q:IBX<1  S IBT(IBX)=^UTILITY($J,"W",DIWL,IBX,0)
"RTN","IBCECSA5",199,0)
 K ^UTILITY($J,"W")
"RTN","IBCECSA5",200,0)
 Q
"RTN","IBCECSA5",201,0)
 ;
"RTN","IBCECSA5",202,0)
RJ(X,Y) ; right just, default is 10
"RTN","IBCECSA5",203,0)
 Q $$RJ^XLFSTR(X,$G(Y,10)," ")
"RTN","IBCECSA5",204,0)
 ;
"RTN","IBCECSA6")
0^51^B87864497
"RTN","IBCECSA6",1,0)
IBCECSA6 ;ALB/CXW - VIEW EOB SCREEN ;01-OCT-1999
"RTN","IBCECSA6",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,155**;21-MAR-1994
"RTN","IBCECSA6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECSA6",4,0)
 ;
"RTN","IBCECSA6",5,0)
BLD ;build EOB data display
"RTN","IBCECSA6",6,0)
 D GETEOB(IBCNT,0)
"RTN","IBCECSA6",7,0)
 Q
"RTN","IBCECSA6",8,0)
 ;
"RTN","IBCECSA6",9,0)
GETEOB(IBCNT,IBSRC,IBFULL,IBJTIBLN) ; Get EOB data in display format
"RTN","IBCECSA6",10,0)
 ; IBCNT = the ien of the entry in file 361.1
"RTN","IBCECSA6",11,0)
 ; IBSRC = 1 if called from AR, 0 if List Manager format needed
"RTN","IBCECSA6",12,0)
 ;       = 2 if called from AR and header data is desired
"RTN","IBCECSA6",13,0)
 ;   If IBSRC > 0  ^TMP("PRCA_EOB",$J,IBCNT,n)=line n's text is ret'd
"RTN","IBCECSA6",14,0)
 ; IBFULL = 1 if no check should be made to eliminate a fld whose value=0
"RTN","IBCECSA6",15,0)
 ; IBJTIBLN = line number to start VALMCNT with (optional)
"RTN","IBCECSA6",16,0)
 ;            used by IBJTBA1
"RTN","IBCECSA6",17,0)
 ;
"RTN","IBCECSA6",18,0)
 N IBREC,IBTYP,CNT,IBREM
"RTN","IBCECSA6",19,0)
 S IBFULL=$G(IBFULL),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",20,0)
 I IBSRC N VALMBG,VALMCNT
"RTN","IBCECSA6",21,0)
 S VALMCNT=0,VALMBG=1,CNT=0
"RTN","IBCECSA6",22,0)
 I $G(IBJTIBLN)>0 S VALMCNT=IBJTIBLN
"RTN","IBCECSA6",23,0)
 S IBREC=$G(^IBM(361.1,IBCNT,0)),IBTYP=$P(IBREC,U,4)
"RTN","IBCECSA6",24,0)
 I IBSRC K ^TMP("PRCA_EOB",$J,IBCNT)
"RTN","IBCECSA6",25,0)
 ; Once we're displaying a single EOB, remove the multiple EOB header of 
"RTN","IBCECSA6",26,0)
 ; the View EOB screen that was set in HDR^IBCEOB2 - VALMHDR(4).
"RTN","IBCECSA6",27,0)
 I 'IBSRC,$G(VALMHDR(4))'="" S VALMHDR(4)=""
"RTN","IBCECSA6",28,0)
 D GEN,PAY,ARCP^IBCECSA7,CLVL,CLVLA,MIN^IBCECSA5,MOUT,LLVLA^IBCECSA7,RDATA^IBCECSA7
"RTN","IBCECSA6",29,0)
 Q
"RTN","IBCECSA6",30,0)
 ;
"RTN","IBCECSA6",31,0)
SEL(IB,ONE) ;
"RTN","IBCECSA6",32,0)
 N IBDA
"RTN","IBCECSA6",33,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECSA6",34,0)
 S IBDA=0 S IBDA=$O(VALMY(IBDA)) Q:'IBDA  D
"RTN","IBCECSA6",35,0)
 . S IB=$P($G(^TMP("IBCECSD",$J,IBDA)),U,2)
"RTN","IBCECSA6",36,0)
 . S IBONE=1
"RTN","IBCECSA6",37,0)
 Q
"RTN","IBCECSA6",38,0)
 ;
"RTN","IBCECSA6",39,0)
ACT ; Reposition display using actions
"RTN","IBCECSA6",40,0)
 I '$G(IBONE) D SEL(.IBCNT,1) D BLD:$G(IBCNT)
"RTN","IBCECSA6",41,0)
 S VALMBG=$G(^TMP("IBCECSD",$J,"X",+$G(IBACT))) S:'VALMBG VALMBG=1
"RTN","IBCECSA6",42,0)
 S VALMBCK="R"
"RTN","IBCECSA6",43,0)
 Q
"RTN","IBCECSA6",44,0)
 ;
"RTN","IBCECSA6",45,0)
SET(IBSRC,X,CNT,IBCNT) ;set list manager arrays
"RTN","IBCECSA6",46,0)
 S VALMCNT=VALMCNT+1,IBSRC=$G(IBSRC)
"RTN","IBCECSA6",47,0)
 ;
"RTN","IBCECSA6",48,0)
 I IBSRC D  Q
"RTN","IBCECSA6",49,0)
 . S ^TMP("PRCA_EOB",$J,IBCNT,VALMCNT)=X
"RTN","IBCECSA6",50,0)
 ;
"RTN","IBCECSA6",51,0)
 S ^TMP("IBCECSD",$J,VALMCNT,0)=X
"RTN","IBCECSA6",52,0)
 S ^TMP("IBCECSD",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECSA6",53,0)
 S ^TMP("IBCECSD",$J,CNT)=VALMCNT_U_IBCNT
"RTN","IBCECSA6",54,0)
 Q
"RTN","IBCECSA6",55,0)
 ;
"RTN","IBCECSA6",56,0)
GEN ;
"RTN","IBCECSA6",57,0)
 S IBSRC=$G(IBSRC) Q:IBSRC=1
"RTN","IBCECSA6",58,0)
 N IBREC1,IBTMP,IBSPL
"RTN","IBCECSA6",59,0)
 S IBSPL=+$O(^IBM(361.1,IBCNT,8,0)),IBSPL=(+$O(^(IBSPL))'=IBSPL)
"RTN","IBCECSA6",60,0)
 S IB=$$SETSTR^VALM1("EOB GENERAL INFORMATION:","",1,50)
"RTN","IBCECSA6",61,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",62,0)
 I 'IBSRC D
"RTN","IBCECSA6",63,0)
 . D CNTRL^VALM10(VALMCNT,1,24,IORVON,IORVOFF)
"RTN","IBCECSA6",64,0)
 . S ^TMP("IBCECSD",$J,"X",1)=VALMCNT
"RTN","IBCECSA6",65,0)
 S IB=$$SETSTR^VALM1("Type        : "_$S(IBTYP:"MEDICARE MRA",1:"NORMAL EOB")_$S(IBSPL:" (SPLIT IN A/R)",1:""),"",2,39)
"RTN","IBCECSA6",66,0)
 S IB=$$SETSTR^VALM1("EOB Paid DT  : "_$$DAT1^IBOUTL($P(IBREC,U,6),1),IB,41,38)
"RTN","IBCECSA6",67,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",68,0)
 I IBSRC D
"RTN","IBCECSA6",69,0)
 . S IB=$$SETSTR^VALM1($S(IBSRC:"Entry Dt/Tm :"_$$DAT1^IBOUTL($P(IBREC,U,5),1),1:""),"",2,39)
"RTN","IBCECSA6",70,0)
 . S IBTMP=$P(IBREC,U,13)
"RTN","IBCECSA6",71,0)
 . S IB=$$SETSTR^VALM1("Claim Status : "_$$EXTERNAL^DILFD(361.1,.13,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",72,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",73,0)
 . S IBTMP=$P(IBREC,U,16)
"RTN","IBCECSA6",74,0)
 . S IB=$$SETSTR^VALM1("Review Status: "_$$EXTERNAL^DILFD(361.1,.16,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",75,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",76,0)
 . S IB=$$SETSTR^VALM1("Entered By  : "_$P($G(^VA(200,+$P(IBREC,U,18),0)),U),"",2,39)
"RTN","IBCECSA6",77,0)
 . S IBTMP=$P(IBREC,U,15)
"RTN","IBCECSA6",78,0)
 . S IB=$$SETSTR^VALM1("Insurance Seq: "_$$EXTERNAL^DILFD(361.1,.15,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",79,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",80,0)
 I 'IBSRC D
"RTN","IBCECSA6",81,0)
 . S IB=$$SETSTR^VALM1($S($P(IBREC,U,17):"Manual Entry: YES",1:""),"",2,39)
"RTN","IBCECSA6",82,0)
 . S IBTMP=$P(IBREC,U,13)
"RTN","IBCECSA6",83,0)
 . S IB=$$SETSTR^VALM1("Claim Status : "_$$EXTERNAL^DILFD(361.1,.13,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",84,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",85,0)
 . S IBTMP=$P(IBREC,U,15)
"RTN","IBCECSA6",86,0)
 . S IB=$$SETSTR^VALM1("Insurance Seq: "_$$EXTERNAL^DILFD(361.1,.15,"",IBTMP),"",41,38)
"RTN","IBCECSA6",87,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",88,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,100))
"RTN","IBCECSA6",89,0)
 I $S($G(IBFULL):1,1:$P(IBREC1,U,4)'=""!($P(IBREC1,U,3)'="")) D
"RTN","IBCECSA6",90,0)
 . S IB=$$SETSTR^VALM1("Last Edited : "_$$DAT1^IBOUTL($P(IBREC1,U,4),1),"",2,39)
"RTN","IBCECSA6",91,0)
 . S IB=$$SETSTR^VALM1("Last Edit By : "_$P($G(^VA(200,+$P(IBREC1,U,3),0)),U),IB,41,38)
"RTN","IBCECSA6",92,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",93,0)
 ;
"RTN","IBCECSA6",94,0)
 D INSINF^IBCECSA7(+IBREC,CNT,IBCNT)
"RTN","IBCECSA6",95,0)
 ;
"RTN","IBCECSA6",96,0)
 I $S($G(IBFULL):1,1:$P($G(^IBM(361.1,IBCNT,6)),U)'=""!($P($G(^IBM(361.1,IBCNT,6)),U,2)'="")) D
"RTN","IBCECSA6",97,0)
 . S IB=$$SETSTR^VALM1("New Pat. Nm.: "_$P($G(^IBM(361.1,IBCNT,6)),U),"",2,39)
"RTN","IBCECSA6",98,0)
 . S IB=$$SETSTR^VALM1("New Pat. Id  : "_$P($G(^IBM(361.1,IBCNT,6)),U,2),IB,41,38)
"RTN","IBCECSA6",99,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",100,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",101,0)
 Q
"RTN","IBCECSA6",102,0)
 ;
"RTN","IBCECSA6",103,0)
PAY ;
"RTN","IBCECSA6",104,0)
 S IBSRC=$G(IBSRC) Q:IBSRC=1
"RTN","IBCECSA6",105,0)
 N IBREC1,IBTMP
"RTN","IBCECSA6",106,0)
 S IB=$$SETSTR^VALM1("PAYER INFORMATION:","",1,50)
"RTN","IBCECSA6",107,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",108,0)
 I 'IBSRC D
"RTN","IBCECSA6",109,0)
 . D CNTRL^VALM10(VALMCNT,1,18,IORVON,IORVOFF)
"RTN","IBCECSA6",110,0)
 . S ^TMP("IBCECSD",$J,"X",2)=VALMCNT
"RTN","IBCECSA6",111,0)
 S IB=$$SETSTR^VALM1("Payer Name   : "_$P($G(^DIC(36,+$P(IBREC,U,2),0)),U),"",2,39)
"RTN","IBCECSA6",112,0)
 S IB=$$SETSTR^VALM1("Payer Id    : "_$P(IBREC,U,3),IB,41,38)
"RTN","IBCECSA6",113,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",114,0)
 S IB=$$SETSTR^VALM1("ICN          : "_$P(IBREC,U,14),"",2,39)
"RTN","IBCECSA6",115,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",116,0)
 I $P(IBREC,U,9)'=""!($P(IBREC,U,8)'="") D
"RTN","IBCECSA6",117,0)
 . S IB=$$SETSTR^VALM1("Cross Ovr ID : "_$P(IBREC,U,9),"",2,39)
"RTN","IBCECSA6",118,0)
 . S IB=$$SETSTR^VALM1("Cross Ovr Nm: "_$P(IBREC,U,8),IB,41,38)
"RTN","IBCECSA6",119,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",120,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",121,0)
 Q
"RTN","IBCECSA6",122,0)
 ;
"RTN","IBCECSA6",123,0)
CLVL ;
"RTN","IBCECSA6",124,0)
 N IBREC1,IBTMP,IBRL
"RTN","IBCECSA6",125,0)
 S IB=$$SETSTR^VALM1("CLAIM LEVEL PAY STATUS:","",1,50),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",126,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",127,0)
 I 'IBSRC D
"RTN","IBCECSA6",128,0)
 . D CNTRL^VALM10(VALMCNT,1,23,IORVON,IORVOFF)
"RTN","IBCECSA6",129,0)
 . S ^TMP("IBCECSD",$J,"X",3)=VALMCNT
"RTN","IBCECSA6",130,0)
 I '$D(^IBM(361.1,IBCNT,2)),'$D(^IBM(361.1,IBCNT,1)) D SET(IBSRC," NONE",CNT,IBCNT) Q
"RTN","IBCECSA6",131,0)
 S IB=$$SETSTR^VALM1("Tot Submitted Chrg: "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,4)),"",2,39)
"RTN","IBCECSA6",132,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,1))
"RTN","IBCECSA6",133,0)
 S IB=$$SETSTR^VALM1("Covered Amt       : "_$$A10($P(IBREC1,U,3)),IB,41,38)
"RTN","IBCECSA6",134,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",135,0)
 S IB=$$SETSTR^VALM1("Payer Paid Amt    : "_$$A10($P(IBREC1,U)),"",2,39)
"RTN","IBCECSA6",136,0)
 S IB=$$SETSTR^VALM1("Patient Resp. Amt : "_$$A10($S(IBSRC:$P(IBREC1,U,2),$$FT^IBCEF(+IBREC)=3:$$PTRESPI^IBCECOB1(IBCNT),1:$P($G(^IBM(361.1,IBCNT,1)),"^",2))),IB,41,38)
"RTN","IBCECSA6",137,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",138,0)
 S (IB,IBRL)=""
"RTN","IBCECSA6",139,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,4)) S IB=$$SETSTR^VALM1("Discount Amt      : "_$$A10($P(IBREC1,U,4)),"",2,39),IBRL=1
"RTN","IBCECSA6",140,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,5)) S IB=$$SETSTR^VALM1("Per Day Limit Amt : "_$$A10($P(IBREC1,U,5)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",141,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,8)) S IB=$$SETSTR^VALM1("Tax Amt           : "_$$A10($P(IBREC1,U,8)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",142,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,9)) S IB=$$SETSTR^VALM1("Tot Before Tax Amt: "_$$A10($P(IBREC1,U,9)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",143,0)
 I $S(IBFULL:1,1:$P($G(^IBM(361.1,IBCNT,2)),U,3)) S IB=$$SETSTR^VALM1("Total Allowed Amt : "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,3)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",144,0)
 I $S(IBFULL:1,1:$P($G(^IBM(361.1,IBCNT,2)),U,5)) S IB=$$SETSTR^VALM1("Negative Reimb Amt: "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,5)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",145,0)
 I $G(IBSRC) I $S(IBFULL:1,1:$P(IBREC,U,12)) S IB=$$SETSTR^VALM1("Discharge Fraction: "_$$A10($P(IBREC,U,12)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",146,0)
 I $S(IBFULL:1,1:$P(IBREC,U,10)) S IB=$$SETSTR^VALM1("DRG Code Used     :"_$$RJ^XLFSTR($P(IBREC,U,10),11," "),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",147,0)
 I $S(IBFULL:1,1:$P(IBREC,U,11)) S IB=$$SETSTR^VALM1("DRG Weight Used   :"_$$RJ^XLFSTR($P(IBREC,U,11),11," "),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",148,0)
 D:IBRL'="" SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",149,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",150,0)
 Q
"RTN","IBCECSA6",151,0)
 ;
"RTN","IBCECSA6",152,0)
MOUT ;
"RTN","IBCECSA6",153,0)
 N IBREC1,IBRL
"RTN","IBCECSA6",154,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,3)),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",155,0)
 I 'IBSRC,$$INPAT^IBCEF(+IBREC),$TR(IBREC1,"0^")="" Q
"RTN","IBCECSA6",156,0)
 I IBREC1="" D:'$D(^IBM(361.1,IBCNT,4)) SET(IBSRC,"  NONE",CNT,IBCNT) D:'IBSRC SET(IBSRC,"",CNT,IBCNT),REMARK^IBCECSA5 Q
"RTN","IBCECSA6",157,0)
 D SET(IBSRC," OUTPATIENT:",CNT,IBCNT)
"RTN","IBCECSA6",158,0)
 S IBRL=""
"RTN","IBCECSA6",159,0)
 I $S(IBFULL:1,1:$P(IBREC1,U)) S IB=$$SETSTR^VALM1("Reimburse Rate    : "_$$P10($P(IBREC1,U)),"",$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",160,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,2)) S IB=$$SETSTR^VALM1("HCPCS Pay Amt     : "_$$A10($P(IBREC1,U,2)),IB,$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",161,0)
 D:IBRL=0 SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",162,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,8)) S IB=$$SETSTR^VALM1("Esrd Paid Amt     : "_$$A10($P(IBREC1,U,8)),"",$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",163,0)
 D:IBRL=0 SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",164,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,9)) S IB=$$SETSTR^VALM1("Non-Pay Prof Comp : "_$$A10($P(IBREC1,U,9)),IB,$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",165,0)
 D:IBRL'="" SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",166,0)
 D REMARK^IBCECSA5
"RTN","IBCECSA6",167,0)
 D SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",168,0)
 Q
"RTN","IBCECSA6",169,0)
 ;
"RTN","IBCECSA6",170,0)
CLVLA ;
"RTN","IBCECSA6",171,0)
 N IBREC,IBFLG,GR,RSN,Z
"RTN","IBCECSA6",172,0)
 S IB=$$SETSTR^VALM1("CLAIM LEVEL ADJUSTMENTS:","",1,50),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",173,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",174,0)
 I 'IBSRC D
"RTN","IBCECSA6",175,0)
 . D CNTRL^VALM10(VALMCNT,1,24,IORVON,IORVOFF)
"RTN","IBCECSA6",176,0)
 . S ^TMP("IBCECSD",$J,"X",4)=VALMCNT
"RTN","IBCECSA6",177,0)
 S (Y,IBFLG)=0 F  S Y=$O(^IBM(361.1,IBCNT,10,Y)) Q:'Y  D
"RTN","IBCECSA6",178,0)
 . S IBREC=$G(^IBM(361.1,IBCNT,10,Y,0)),GR=$P(IBREC,U,1)
"RTN","IBCECSA6",179,0)
 . I GR="OA",$P($G(^IBM(361.1,IBCNT,10,Y,1,0)),U,4)=1,$D(^IBM(361.1,IBCNT,10,Y,1,"B","AB3")) Q   ; kludge
"RTN","IBCECSA6",180,0)
 . S IBREC=$$EXTERNAL^DILFD(361.11,.01,"",GR),IBFLG=1
"RTN","IBCECSA6",181,0)
 . D SET(IBSRC," GROUP CODE: "_IBREC,CNT,IBCNT)
"RTN","IBCECSA6",182,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IBCNT,10,Y,1,Z)) Q:'Z  D
"RTN","IBCECSA6",183,0)
 .. S IBREC=$G(^IBM(361.1,IBCNT,10,Y,1,Z,0)),RSN=$P(IBREC,U,1)
"RTN","IBCECSA6",184,0)
 .. I GR="OA",RSN="AB3" Q   ; kludge
"RTN","IBCECSA6",185,0)
 .. S IB=$$SETSTR^VALM1("REASON CODE: "_RSN_"  "_$P(IBREC,U,4),"",3,77)
"RTN","IBCECSA6",186,0)
 .. D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",187,0)
 .. S IB=$$SETSTR^VALM1("Amount: "_$$A10($P(IBREC,U,2)),"",3,40)
"RTN","IBCECSA6",188,0)
 .. S IB=$$SETSTR^VALM1("Quantity: "_$P(IBREC,U,3),IB,41,38)
"RTN","IBCECSA6",189,0)
 .. D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",190,0)
 I 'IBFLG D SET(IBSRC," NONE",CNT,IBCNT)
"RTN","IBCECSA6",191,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",192,0)
 Q
"RTN","IBCECSA6",193,0)
 ;
"RTN","IBCECSA6",194,0)
A10(X) ; returns a dollar amount right justified to 10 characters
"RTN","IBCECSA6",195,0)
 Q $$RJ^XLFSTR($FN(X,"",2),10," ")
"RTN","IBCECSA6",196,0)
 ;
"RTN","IBCECSA6",197,0)
P10(X) ; returns a % right just 10
"RTN","IBCECSA6",198,0)
 ; X is a decimal between 0-1
"RTN","IBCECSA6",199,0)
 Q $$RJ^XLFSTR((X*100)_"%",10," ")
"RTN","IBCECSA6",200,0)
 ;
"RTN","IBCECSA7")
0^53^B8092739
"RTN","IBCECSA7",1,0)
IBCECSA7 ;ALB/ESG - VIEW EOB SCREEN CONTINUED ;26-JUN-2003
"RTN","IBCECSA7",2,0)
 ;;2.0;INTEGRATED BILLING;**135,155**;21-MAR-1994
"RTN","IBCECSA7",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECSA7",4,0)
 ;
"RTN","IBCECSA7",5,0)
 Q     ; Must be called at proper entry points
"RTN","IBCECSA7",6,0)
 ;
"RTN","IBCECSA7",7,0)
LLVLA ;line level adjustment
"RTN","IBCECSA7",8,0)
 Q:'$G(IBSRC)  ; no MRA
"RTN","IBCECSA7",9,0)
 D MRALLA^IBCECSA5
"RTN","IBCECSA7",10,0)
 Q
"RTN","IBCECSA7",11,0)
RDATA ;
"RTN","IBCECSA7",12,0)
 I '$G(IBSRC) Q     ; no review data for IB/MRA
"RTN","IBCECSA7",13,0)
 I $G(IBSRC) Q      ; no review data for AR either
"RTN","IBCECSA7",14,0)
 N IBRM,IBREC,IBFLG,IBFST
"RTN","IBCECSA7",15,0)
 S IB=$$SETSTR^VALM1("REVIEW DATA:","",1,50)
"RTN","IBCECSA7",16,0)
 D SET(IB)
"RTN","IBCECSA7",17,0)
 D CNTRL^VALM10(VALMCNT,1,12,IORVON,IORVOFF)
"RTN","IBCECSA7",18,0)
 S ^TMP("IBCECSD",$J,"X",8)=VALMCNT
"RTN","IBCECSA7",19,0)
 S (Y,IBFLG)=0 F  S Y=$O(^IBM(361.1,IBCNT,21,Y)) Q:'Y  D
"RTN","IBCECSA7",20,0)
 . S IBREC=$G(^IBM(361.1,IBCNT,21,Y,0)),IBFLG=1
"RTN","IBCECSA7",21,0)
 . D SET("  REVIEW DATE/TIME: "_$$DAT1^IBOUTL($P(IBREC,U),1))
"RTN","IBCECSA7",22,0)
 . S Z=0,IBFST=1 F  S Z=$O(^IBM(361.1,IBCNT,21,Y,1,Z)) Q:'Z  D
"RTN","IBCECSA7",23,0)
 .. S IBRM=$G(^IBM(361.1,IBCNT,21,Y,1,Z,0))
"RTN","IBCECSA7",24,0)
 .. D:IBFST SET("  COMMENT:"_$E(IBRM,1,68))
"RTN","IBCECSA7",25,0)
 .. D TXT^IBCECSA5(IBRM,68,11)
"RTN","IBCECSA7",26,0)
 .. S IBFST=0
"RTN","IBCECSA7",27,0)
 D:'IBFLG SET(" NONE")
"RTN","IBCECSA7",28,0)
 Q
"RTN","IBCECSA7",29,0)
 ;
"RTN","IBCECSA7",30,0)
ARCP ; A/R corrected payment data from splitting payment in EOB Worklist
"RTN","IBCECSA7",31,0)
 N Z,Z0
"RTN","IBCECSA7",32,0)
 I '$O(^IBM(361.1,IBCNT,8,0)) Q
"RTN","IBCECSA7",33,0)
 S IB=$$SETSTR^VALM1(" **A/R CORRECTED PAYMENT DATA:","",1,50)
"RTN","IBCECSA7",34,0)
 D SET(IB)
"RTN","IBCECSA7",35,0)
 I '$G(IBSRC) D
"RTN","IBCECSA7",36,0)
 . D CNTRL^VALM10(VALMCNT,1,27,IORVON,IORVOFF)
"RTN","IBCECSA7",37,0)
 . S ^TMP("IBCECSD",$J,"X",5)=VALMCNT
"RTN","IBCECSA7",38,0)
 D SET("   TOTAL AMT PD: "_$J(+$P($G(^IBM(361.1,IBCNT,1)),U,1),"",2))
"RTN","IBCECSA7",39,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBCNT,8,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBCECSA7",40,0)
 . S IB=$E($J("",6)_$S($P(Z0,U,3):$$BN1^PRCAFN(+$P(Z0,U,3)),1:"[suspense]"_$P(Z0,U))_$J("",25),1,25)_"  "_$J(+$P(Z0,U,2),"",2)
"RTN","IBCECSA7",41,0)
 . D SET(IB)
"RTN","IBCECSA7",42,0)
 Q
"RTN","IBCECSA7",43,0)
 ;
"RTN","IBCECSA7",44,0)
INSINF(IBREC,CNT,IBCNT) ; Extract insured information (moved from IBCECSA6)
"RTN","IBCECSA7",45,0)
 N IB,IBZ,IBSEQ,IBREL,Z,Z0
"RTN","IBCECSA7",46,0)
 S IBSEQ=+$$COBN^IBCEF(IBREC)
"RTN","IBCECSA7",47,0)
 S IB=$$SETSTR^VALM1("Patient Name: "_$P($G(^DPT(+$P($G(^DGCR(399,IBREC,0)),U,2),0)),U),"",2,39)
"RTN","IBCECSA7",48,0)
 D F^IBCEF("N-ALL INSURED PT RELATION","IBZ",,IBREC)
"RTN","IBCECSA7",49,0)
 S IBREL=$G(IBZ(IBSEQ))
"RTN","IBCECSA7",50,0)
 S IB=$$SETSTR^VALM1("Pt. Relation : "_$$EXTERNAL^DILFD(2.312,16,"",IBREL),IB,41,38)
"RTN","IBCECSA7",51,0)
 D SET^IBCECSA6($G(IBSRC),IB,CNT,IBCNT)
"RTN","IBCECSA7",52,0)
 S Z=2,Z0=39,IB=""
"RTN","IBCECSA7",53,0)
 I +IBREL'=1 D
"RTN","IBCECSA7",54,0)
 . D F^IBCEF("N-ALL INSURED FULL NAMES","IBZ",,IBREC)
"RTN","IBCECSA7",55,0)
 . S IB=$$SETSTR^VALM1("Insured Name: "_$G(IBZ(IBSEQ)),IB,Z,Z0)
"RTN","IBCECSA7",56,0)
 . S Z=41,Z0=38
"RTN","IBCECSA7",57,0)
 D F^IBCEF("N-ALL INSURANCE NUMBER","IBZ",,IBREC)
"RTN","IBCECSA7",58,0)
 S IB=$$SETSTR^VALM1("Insured ID  "_$S(Z=41:" ",1:"")_": "_$G(IBZ(IBSEQ)),IB,Z,Z0)
"RTN","IBCECSA7",59,0)
 D SET^IBCECSA6($G(IBSRC),IB,CNT,IBCNT)
"RTN","IBCECSA7",60,0)
 Q
"RTN","IBCECSA7",61,0)
 ;
"RTN","IBCECSA7",62,0)
SET(IB,IBSAV) ;
"RTN","IBCECSA7",63,0)
 I '$G(IBSAV) D SET^IBCECSA6($G(IBSRC),IB,CNT,IBCNT)
"RTN","IBCECSA7",64,0)
 Q
"RTN","IBCECSA7",65,0)
 ;
"RTN","IBCEF1")
0^76^B44690565
"RTN","IBCEF1",1,0)
IBCEF1 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS - CONT ;30-JAN-96
"RTN","IBCEF1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,124,51,137,210,155**;21-MAR-94
"RTN","IBCEF1",3,0)
 ;
"RTN","IBCEF1",4,0)
OCC(IBIFN,REL,TEXT) ;Sets up an arrays of occurrence codes for various cks
"RTN","IBCEF1",5,0)
 ;RETURNS 1^additional data for entry IBXSAVE("OCC",n) if REL or TEXT
"RTN","IBCEF1",6,0)
 ;   parameters have been met or null if conditions not met
"RTN","IBCEF1",7,0)
 ;If no REL or TEXT parameters sent, just extract codes array
"RTN","IBCEF1",8,0)
 ; IBIFN = bill ien
"RTN","IBCEF1",9,0)
 ; REL = 'OCC RELATED TO' value to check for
"RTN","IBCEF1",10,0)
 ; TEXT = text to check for the .01 field of 399.1 entry pointed to
"RTN","IBCEF1",11,0)
 ;         by the occurrence code
"RTN","IBCEF1",12,0)
 N OCC
"RTN","IBCEF1",13,0)
 I '$D(IBXSAVE("OCC")),'$D(IBXSAVE("OCCS")) D
"RTN","IBCEF1",14,0)
 .N IBI,Z,CT1,CT2,Z0 S (IBI,CT1,CT2)=0
"RTN","IBCEF1",15,0)
 .F  S IBI=$O(^DGCR(399,IBIFN,"OC",IBI)) Q:'IBI  S Z=$G(^(IBI,0)) D
"RTN","IBCEF1",16,0)
 ..S Z0=$G(^DGCR(399.1,+Z,0))
"RTN","IBCEF1",17,0)
 ..Q:'$P(Z0,U,10)&'$P(Z0,U,4)  ;Not an occurrence code
"RTN","IBCEF1",18,0)
 ..I $P(Z0,U,10) S CT2=CT2+1,IBXSAVE("OCCS",CT2)=$S($P(Z0,U,4):$P(Z0,U,2)_U_$P(Z,U,2),1:U)_U_$P(Z,U,4)_U_$P(Z0,U)_U_$P(Z0,U,9)_U_$P(Z,U,3)_U_$P(Z,U,2)
"RTN","IBCEF1",19,0)
 ..I '$P(Z0,U,10) S CT1=CT1+1,IBXSAVE("OCC",CT1)=$S($P(Z0,U,4):$P(Z0,U,2)_U_$P(Z,U,2),1:U)_U_U_$P(Z0,U)_U_$P(Z0,U,9)_U_$P(Z,U,3)_U_$P(Z,U,2)
"RTN","IBCEF1",20,0)
 I '$D(IBXSAVE("OCC"))&'$D(IBXSAVE("OCCS")) S IBXSAVE("OCC")="" G OCCQ
"RTN","IBCEF1",21,0)
 I $G(REL)'=""!($G(TEXT)'="") D OCC1("",.OCC,$G(REL),$G(TEXT)) D:'$D(OCC) OCC1("S",.OCC,$G(REL),$G(TEXT))
"RTN","IBCEF1",22,0)
OCCQ Q $G(OCC)
"RTN","IBCEF1",23,0)
 ;
"RTN","IBCEF1",24,0)
OCC1(ARR,OCC,REL,TEXT) ; Search thru local array for parameters met
"RTN","IBCEF1",25,0)
 ; ARR = null to search OCC subscript, "S" to search OCCS subscript
"RTN","IBCEF1",26,0)
 N Z
"RTN","IBCEF1",27,0)
 S ARR="OCC"_ARR,Z=0
"RTN","IBCEF1",28,0)
 F  S Z=$O(IBXSAVE(ARR,Z)) Q:'Z  D
"RTN","IBCEF1",29,0)
 .I $G(REL)'="",$P(IBXSAVE(ARR,Z),U,5)=REL S OCC="1"_$S(REL=2:U_$P(IBXSAVE(ARR,Z),U,6),1:"") Q
"RTN","IBCEF1",30,0)
 .I $G(TEXT)'="",$P(IBXSAVE(ARR,Z),U,4)=TEXT S OCC="1^"_$P(IBXSAVE(ARR,Z),U,7)
"RTN","IBCEF1",31,0)
 Q
"RTN","IBCEF1",32,0)
 ;
"RTN","IBCEF1",33,0)
RX(IBIFN) ; Format billable prescription data for refills for 837
"RTN","IBCEF1",34,0)
 N Z,IBXDATA,CT
"RTN","IBCEF1",35,0)
 I '$D(IBXSAVE("BOX24")) D B24^IBCEF3(.IBXSAVE,IBIFN,1)
"RTN","IBCEF1",36,0)
 S Z="",CT=0
"RTN","IBCEF1",37,0)
 F  S Z=$O(IBXSAVE("BOX24",Z)) Q:Z=""  I $D(IBXSAVE("BOX24",Z,"RX")) S CT=CT+1,IBXDATA(Z)=IBXSAVE("BOX24",Z,"RX")
"RTN","IBCEF1",38,0)
RXQ Q CT
"RTN","IBCEF1",39,0)
 ;
"RTN","IBCEF1",40,0)
OTHPAY(IBIFN,SEQ) ; Return the other insurance payment amount for bill
"RTN","IBCEF1",41,0)
 ;  IBIFN and payer sequence SEQ (1-3)
"RTN","IBCEF1",42,0)
 N AMT,IBIFN1
"RTN","IBCEF1",43,0)
 S IBIFN1=$P($G(^DGCR(399,IBIFN,"M1")),U,SEQ+4)
"RTN","IBCEF1",44,0)
 I IBIFN1 D
"RTN","IBCEF1",45,0)
 . I $$MCRWNR^IBEFUNC(+$G(^DGCR(399,IBIFN,"I"_SEQ))) S AMT=$$MCRPAY^IBCEU0(IBIFN) Q
"RTN","IBCEF1",46,0)
 . S AMT=+$$TPR^PRCAFN(IBIFN1) Q:AMT  ; A/R amount
"RTN","IBCEF1",47,0)
 . S AMT=+$P($G(^DGCR(399,IBIFN,"U2")),U,SEQ+3) ; amount on bill
"RTN","IBCEF1",48,0)
 Q $G(AMT)
"RTN","IBCEF1",49,0)
 ;
"RTN","IBCEF1",50,0)
OUTPT(IBIFN,IBPRINT) ; Moved for space
"RTN","IBCEF1",51,0)
 D OUTPT^IBCEF11(IBIFN,$G(IBPRINT))
"RTN","IBCEF1",52,0)
 Q
"RTN","IBCEF1",53,0)
 ;
"RTN","IBCEF1",54,0)
OCC92 ;Reformats IBXSAVE("OCC") and IBXSAVE("OCCS") to fit blocks on UB92
"RTN","IBCEF1",55,0)
 ; Set up IBXSAVE(32-36) arrays
"RTN","IBCEF1",56,0)
 N IBPG,IB32,IB33,IB34,IB35,IB36,IBFL,Z,Z0,PG
"RTN","IBCEF1",57,0)
 S IBPG=0
"RTN","IBCEF1",58,0)
 F Z=32:1:36 K IBFL(Z) S IBFL(Z)=0
"RTN","IBCEF1",59,0)
 M IB32=IBXSAVE("OCC"),IB36=IBXSAVE("OCCS")
"RTN","IBCEF1",60,0)
 S IB32=$O(IB32(""),-1),IB36=$O(IB36(""),-1),PG=1
"RTN","IBCEF1",61,0)
 D OCC^IBCF32
"RTN","IBCEF1",62,0)
 F Z=32:1:36 S Z0="" F  S Z0=$O(IBFL(Z,Z0)) Q:'Z0  S IBXSAVE("OC92",Z,Z0)=$P(IBFL(Z,Z0),U,1,3)
"RTN","IBCEF1",63,0)
 Q
"RTN","IBCEF1",64,0)
 ;
"RTN","IBCEF1",65,0)
BATCH() ; Sets up record for and stores/returns the next batch number
"RTN","IBCEF1",66,0)
 N NUM,FAC,DO,DD,DLAYGO,DIC,X,Y
"RTN","IBCEF1",67,0)
 ;Keep latest batch number for view/print edi bill extract data option
"RTN","IBCEF1",68,0)
 I $D(IBVNUM) S NUM=IBVNUM G BATCHQ
"RTN","IBCEF1",69,0)
 ;Check for batch resubmit - if yes, use same number as original batch
"RTN","IBCEF1",70,0)
 I $P($G(^TMP("IBRESUBMIT",$J)),U,3)=1 S NUM=$P(^($J),U) G BATCHQ
"RTN","IBCEF1",71,0)
 L +^IBA(364.1,0):5 I '$T Q 0
"RTN","IBCEF1",72,0)
 S FAC=+$P($$SITE^VASITE(),U,3),NUM=$O(^IBA(364.1,"B",""),-1)
"RTN","IBCEF1",73,0)
 I $D(^IBA(364.1,+NUM,0)),$P(^(0),U,2)="" F  D  Q:'NUM!($P($G(^IBA(364.1,+NUM,0)),U,2)'="")
"RTN","IBCEF1",74,0)
 . I $D(^IBA(364.1,NUM,0)) S DA=NUM,DIK="^IBA(364.1," D ^DIK
"RTN","IBCEF1",75,0)
 . S NUM=$O(^IBA(364.1,"B",""),-1)
"RTN","IBCEF1",76,0)
 F  S NUM=$S($P(NUM,FAC,2)'="":NUM+1,1:FAC_"0000001") Q:'$D(^IBA(364.1,"B",NUM))
"RTN","IBCEF1",77,0)
 K DO,DD S DIC="^IBA(364.1,",DLAYGO=364.1,DIC(0)="L",X=NUM D FILE^DICN K DD,DO I Y'>0 S NUM=0
"RTN","IBCEF1",78,0)
 L -^IBA(364.1,0)
"RTN","IBCEF1",79,0)
BATCHQ Q NUM
"RTN","IBCEF1",80,0)
 ;
"RTN","IBCEF1",81,0)
PROC(T,TYPE) ; Find procedure code, strip '.' Function returns result
"RTN","IBCEF1",82,0)
 ; T = Procedure internal entry #;file reference
"RTN","IBCEF1",83,0)
 ; TYPE = "CPT" for only CPT/HCPCS valid
"RTN","IBCEF1",84,0)
 ;        "ICD" for only ICD9 valid or null for either
"RTN","IBCEF1",85,0)
 N Q,S
"RTN","IBCEF1",86,0)
 S Q="",S="^"_$P($P(T,";",2),"(")
"RTN","IBCEF1",87,0)
 I $G(TYPE)="" D
"RTN","IBCEF1",88,0)
 . I $E(S,2,3)="IC" S Q=$P($$PRCD(T),U) Q
"RTN","IBCEF1",89,0)
 . I T["DIC(81.3" S Q=$$MOD^ICPTMOD(+T,"I") S Q=$S(Q>0:$P(Q,U,4),1:"")
"RTN","IBCEF1",90,0)
 I $G(TYPE)="CPT",$E(S,2,3)="IC" S Q=$$PRCD(T) Q
"RTN","IBCEF1",91,0)
 I $G(TYPE)="ICD",T["ICD0" S Q=$P($$ICD0^IBACSV(+T),U)
"RTN","IBCEF1",92,0)
 Q $TR(Q,".")
"RTN","IBCEF1",93,0)
 ;
"RTN","IBCEF1",94,0)
FACILITY(IBIFN) ;return the Facility (Institution pointer-#4) for a bill
"RTN","IBCEF1",95,0)
 ; the institution of the Bill Division (399,.22) if defined, otherwise the Facility Name (350.9,.02)
"RTN","IBCEF1",96,0)
 ;
"RTN","IBCEF1",97,0)
 N IB0,IBIN S IBIN=0
"RTN","IBCEF1",98,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) I +$P(IB0,U,22) S IBIN=$$SITE^VASITE(+$P(IB0,U,3),+$P(IB0,U,22))
"RTN","IBCEF1",99,0)
 I IBIN'>0 S IBIN=+$P($G(^IBE(350.9,1,0)),U,2)
"RTN","IBCEF1",100,0)
 Q +IBIN
"RTN","IBCEF1",101,0)
 ;
"RTN","IBCEF1",102,0)
ISRX(IBIFN) ; Function to determine if bill is a prescription refill bill
"RTN","IBCEF1",103,0)
 ; Returns 0 if no Rx on bill or 1 if there is.
"RTN","IBCEF1",104,0)
 ;
"RTN","IBCEF1",105,0)
 N IBRX
"RTN","IBCEF1",106,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN)) S IBRX=1
"RTN","IBCEF1",107,0)
 Q +$G(IBRX)
"RTN","IBCEF1",108,0)
 ;
"RTN","IBCEF1",109,0)
ISPROS(IBIFN) ; Function to determine if bill is a prosthetics bill
"RTN","IBCEF1",110,0)
 ; Returns 0 if no Prosthetics on bill or 1 if there is.
"RTN","IBCEF1",111,0)
 ;
"RTN","IBCEF1",112,0)
 N IBPROS
"RTN","IBCEF1",113,0)
 I $D(^IBA(362.5,"AIFN"_IBIFN)) S IBPROS=1
"RTN","IBCEF1",114,0)
 Q +$G(IBPROS)
"RTN","IBCEF1",115,0)
 ;
"RTN","IBCEF1",116,0)
FINDINS(IBIFN,IBSEQ) ; Returns the internal entry number of the insurance
"RTN","IBCEF1",117,0)
 ;  company for bill ien IBIFN for payer sequence IBSEQ (or current if
"RTN","IBCEF1",118,0)
 ;  IBSEQ is null)
"RTN","IBCEF1",119,0)
 Q $P($G(^DGCR(399,IBIFN,"I"_$$COBN^IBCEF(IBIFN,$G(IBSEQ)))),U)
"RTN","IBCEF1",120,0)
 ;
"RTN","IBCEF1",121,0)
TOB(IBIFN) ; Returns UB92 type of bill from data in the output formatter
"RTN","IBCEF1",122,0)
 N IBTOB,IBZ1,IBZ2,IBZ3
"RTN","IBCEF1",123,0)
 D F^IBCEF("N-UB92 LOCATION OF CARE","IBZ1",,IBIFN),F^IBCEF("N-UB92 BILL CLASSIFICATION","IBZ2",,IBIFN),F^IBCEF("N-UB92 TIMEFRAME OF BILL","IBZ3",,IBIFN)
"RTN","IBCEF1",124,0)
 S IBTOB=$S($G(^TMP("IBXSAVE",$J,"RM")):" ",1:"")_IBZ1_IBZ2_IBZ3
"RTN","IBCEF1",125,0)
 Q IBTOB
"RTN","IBCEF1",126,0)
 ;
"RTN","IBCEF1",127,0)
PRCD(PRIEN,ALL,EDT) ; Function returns the code that corresponds to the variable
"RTN","IBCEF1",128,0)
 ; pointer data in PRIEN (ien;file)
"RTN","IBCEF1",129,0)
 ; ALL = if ALL=1, returns the entire $$CPT^ICPTCOD for CPT or
"RTN","IBCEF1",130,0)
 ;       ^code^name format for ICD result
"RTN","IBCEF1",131,0)
 ;       or null if lookup fails
"RTN","IBCEF1",132,0)
 ; EDT = Effective date to check (not used if +$G(ALL)=0)
"RTN","IBCEF1",133,0)
 N CODE,IBX
"RTN","IBCEF1",134,0)
 S CODE=""
"RTN","IBCEF1",135,0)
 ;Modified for Code Set Versioning
"RTN","IBCEF1",136,0)
 I PRIEN["ICPT" S IBX=$$CPT^ICPTCOD(+PRIEN,$G(EDT)) G:IBX'>0 PRCDQ S CODE=$S($G(ALL):IBX,1:$P(IBX,U,2))
"RTN","IBCEF1",137,0)
 I PRIEN["ICD0" S IBX=$$ICD0^IBACSV(+PRIEN,$G(EDT)) G:IBX="" PRCDQ S CODE=$S($G(ALL):U_$P(IBX,U)_U_$P(IBX,U,4),1:$P(IBX,U))
"RTN","IBCEF1",138,0)
PRCDQ Q CODE
"RTN","IBCEF1",139,0)
 ;
"RTN","IBCEF1",140,0)
NFT(FT,IBIFN) ; Returns 1 if bill IBIFN is not of form type FT (internal)
"RTN","IBCEF1",141,0)
 ; so the data element should not be required
"RTN","IBCEF1",142,0)
 S FT=$S($$FT^IBCEF(IBIFN)=FT:0,1:1)
"RTN","IBCEF1",143,0)
 Q FT
"RTN","IBCEF1",144,0)
 ;
"RTN","IBCEF1",145,0)
REQ(FT,INP,IBIFN) ; Determine if bill IBIFN is of form type FT and
"RTN","IBCEF1",146,0)
 ; Inpatient (I) or Outpatient (O) status INP [or either if (null)] 
"RTN","IBCEF1",147,0)
 ;
"RTN","IBCEF1",148,0)
 ;Returns 1 if both conditions FT and INP match for the bill
"RTN","IBCEF1",149,0)
 ; or 0 if either of these conditions are not true
"RTN","IBCEF1",150,0)
 ; I $$REQ^IBCEF1(2,"I",1) would mean if bill entry #1 is
"RTN","IBCEF1",151,0)
 ;                         HCFA 1500/inpatient the data would be required
"RTN","IBCEF1",152,0)
 ; I '$$REQ^IBCEF1(2,"I",1) would mean if bill entry #1 is anything but
"RTN","IBCEF1",153,0)
 ;                          HCFA 1500/inpatient, the data would not be
"RTN","IBCEF1",154,0)
 ;                          required
"RTN","IBCEF1",155,0)
 N Z
"RTN","IBCEF1",156,0)
 S Z=1
"RTN","IBCEF1",157,0)
 S:$$NFT(FT,IBIFN) Z=0 ; Not the form type for requirement
"RTN","IBCEF1",158,0)
 I Z,$G(INP)'="" D
"RTN","IBCEF1",159,0)
 . S Z0=$$INPAT^IBCEF(IBIFN,1),INP=$G(INP)
"RTN","IBCEF1",160,0)
 . S Z=$S(Z0:INP="I",1:INP="O") ;Check if I/O matches required state
"RTN","IBCEF1",161,0)
 Q Z
"RTN","IBCEF1",162,0)
 ;
"RTN","IBCEF1",163,0)
SET1(IBIFN,A,IBZ,IBXDATA,IBXNOREQ) ; Utility to set variables for output
"RTN","IBCEF1",164,0)
 ; formatter for professional EDI 
"RTN","IBCEF1",165,0)
 ; Returns values of A, IBXDATA, IBZ, IBXNOREQ
"RTN","IBCEF1",166,0)
 N Z,CT
"RTN","IBCEF1",167,0)
 S A="^TMP($J,""IBLCT"")"
"RTN","IBCEF1",168,0)
 S (Z,CT)=0
"RTN","IBCEF1",169,0)
 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  ; Don't transmit 0-charges
"RTN","IBCEF1",170,0)
 . I $P(IBXDATA(Z),U,9),$P(IBXDATA(Z),U,8) S CT=CT+1 M IBZ(CT)=IBXDATA(Z)
"RTN","IBCEF1",171,0)
 K IBXDATA
"RTN","IBCEF1",172,0)
 S IBXNOREQ='$$REQ(2,"O",IBIFN)
"RTN","IBCEF1",173,0)
 Q
"RTN","IBCEF1",174,0)
 ;
"RTN","IBCEF1",175,0)
CIADDR(IBXDATA,IBXSAVE,LINE,FORM) ; Format current ins co address line LINE for FORM
"RTN","IBCEF1",176,0)
 ; FORM = 1 for HCFA 1500, 2 for UB-92
"RTN","IBCEF1",177,0)
 ; Called from formatter - both IBXDATA, IBXSAVE parameters are
"RTN","IBCEF1",178,0)
 ;  passed by reference
"RTN","IBCEF1",179,0)
 K IBXDATA
"RTN","IBCEF1",180,0)
 I $G(FORM)'=1 D
"RTN","IBCEF1",181,0)
 . Q:'$G(LINE)
"RTN","IBCEF1",182,0)
 . N Z
"RTN","IBCEF1",183,0)
 . S:'$D(IBXSAVE("LM-UB")) IBXSAVE("LM-UB")=$P($G(^IBE(350.9,1,1)),U,31)-1
"RTN","IBCEF1",184,0)
 . S Z=$S(IBXSAVE("LM-UB")>0:$J("",IBXSAVE("LM-UB")),1:"")
"RTN","IBCEF1",185,0)
 . I LINE=1 S IBXDATA=Z_$P(IBXSAVE("CADR"),U)_$S($P(IBXSAVE("CADR"),U,2)'="":" "_$P(IBXSAVE("CADR"),U,2),1:"")_$S($P(IBXSAVE("CADR"),U,3)'="":" "_$P(IBXSAVE("CADR"),U,3),1:"")
"RTN","IBCEF1",186,0)
 . I LINE=2 S IBXDATA=Z_$P(IBXSAVE("CADR"),U,4)_", "_$$STATE^IBCEFG1($P(IBXSAVE("CADR"),U,5))_" "_$P(IBXSAVE("CADR"),U,6)
"RTN","IBCEF1",187,0)
 I $G(FORM)=1 D
"RTN","IBCEF1",188,0)
 . N CT,X,Z
"RTN","IBCEF1",189,0)
 . S:'$D(IBXSAVE("INDENT")) Z="",$P(Z," ",+$P($G(^IBE(350.9,1,1)),U,27)+1)="",IBXSAVE("INDENT")=Z
"RTN","IBCEF1",190,0)
 . S CT=0
"RTN","IBCEF1",191,0)
 . S X=$P(IBXSAVE("CADR"),U) S:X'="" CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_X
"RTN","IBCEF1",192,0)
 . S X=$S($P(IBXSAVE("CADR"),U,2)'="":$P(IBXSAVE("CADR"),U,2),1:"")_$S($P(IBXSAVE("CADR"),U,2)'="":" ",1:"")_$P(IBXSAVE("CADR"),U,3) S:X'="" CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_X
"RTN","IBCEF1",193,0)
 . S CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_$P(IBXSAVE("CADR"),U,4)_", "_$$STATE^IBCEFG1($P(IBXSAVE("CADR"),U,5))_" "_$P(IBXSAVE("CADR"),U,6)
"RTN","IBCEF1",194,0)
 Q
"RTN","IBCEF1",195,0)
 ;
"RTN","IBCEF11")
0^57^B33466788
"RTN","IBCEF11",1,0)
IBCEF11 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS - CONT ;30-JAN-96
"RTN","IBCEF11",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155**;21-MAR-94
"RTN","IBCEF11",3,0)
 ;
"RTN","IBCEF11",4,0)
BOX24D(A,IB) ; Returns the lines for boxes 19-24 of the HCFA 1500 display
"RTN","IBCEF11",5,0)
 ; IB = flag is 1 if only box 24 is needed
"RTN","IBCEF11",6,0)
 Q $S('$G(IB):"36",1:"44")_"^55"
"RTN","IBCEF11",7,0)
 ;
"RTN","IBCEF11",8,0)
RCBOX() ; Returns the lines for revenue code boxes of the UB-92 display
"RTN","IBCEF11",9,0)
 Q "19^41"
"RTN","IBCEF11",10,0)
 ;
"RTN","IBCEF11",11,0)
OUTPT(IBIFN,IBPRINT) ; Returns an array of service line data from
"RTN","IBCEF11",12,0)
 ;                 HCFA 1500 box 24.  Output is in IBXDATA(n)
"RTN","IBCEF11",13,0)
 ; IBPRINT = print flag  1: return print fields
"RTN","IBCEF11",14,0)
 ;                       0: return EDI fields
"RTN","IBCEF11",15,0)
 ; Uses diagnosis array ^TMP("IBXSAVE",$J,"DX",IBIFN,DIAG CODE)=SEQ #
"RTN","IBCEF11",16,0)
 ;   if it already exists. If not, it builds it from N-DIAGNOSES element
"RTN","IBCEF11",17,0)
 ;
"RTN","IBCEF11",18,0)
 ; For EDI call: Returns IBXDATA(n)=
"RTN","IBCEF11",19,0)
 ;   begin date(YYYYMMDD)^end date(YYYYMMDD)^pos^tos^
"RTN","IBCEF11",20,0)
 ;   proc code/revenue code - if no procedure (not the pointers)^
"RTN","IBCEF11",21,0)
 ;   type of code^dx pointer(s)^unit charge^units^modifiers separated by;
"RTN","IBCEF11",22,0)
 ;   ^purchased charge amount ^anesthesia minutes^emergency indicator^
"RTN","IBCEF11",23,0)
 ;   lab-type service flag.
"RTN","IBCEF11",24,0)
 ;
"RTN","IBCEF11",25,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF11",26,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF11",27,0)
 ;      line in the first '^' piece followed by the '0' node data of file
"RTN","IBCEF11",28,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF11",29,0)
 ;       COB = COB sequence # of adjustment's ins co, m = seq #
"RTN","IBCEF11",30,0)
 ;         -- AND --
"RTN","IBCEF11",31,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF11",32,0)
 ;           the data on the '0' node for each subordinate entry of file
"RTN","IBCEF11",33,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837 output)
"RTN","IBCEF11",34,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF11",35,0)
 ;
"RTN","IBCEF11",36,0)
 ; For Print call: Returns begin date(DDMMYYYY)^end date(DDMMYYYY) or
"RTN","IBCEF11",37,0)
 ;   null if equal to begin date^pos^tos^bedsection name(if no procedure)
"RTN","IBCEF11",38,0)
 ;   or procedure code(not the pointer)^ ... refer to EDI call results
"RTN","IBCEF11",39,0)
 ;   Also, IBXDATA(n,"TEXT")=the text to print on second line of box 24,
"RTN","IBCEF11",40,0)
 ;   If no procedure code, returns IBXDATA(n,"A")=rev code abbrev
"RTN","IBCEF11",41,0)
 ;
"RTN","IBCEF11",42,0)
 ;  For both calls, returns IBXDATA(n,item type,item ptr)=""
"RTN","IBCEF11",43,0)
 ;      -- AND --
"RTN","IBCEF11",44,0)
 ;   IBXDATA(n,"RX")=RX#^drug name^NDC^refill #^(re)fill date^qty^days
"RTN","IBCEF11",45,0)
 ;                   ^chrge^ien of file 362.4^NDC format
"RTN","IBCEF11",46,0)
 ;           If line references a prescription
"RTN","IBCEF11",47,0)
 ;      -- AND --
"RTN","IBCEF11",48,0)
 ;   If no revenue code for a prescription, returns IBXDATA(n,"ARX")=""
"RTN","IBCEF11",49,0)
 ;      -- AND --
"RTN","IBCEF11",50,0)
 ;   IBXDATA(n,"AUX")='AUX' node of the procedure entry
"RTN","IBCEF11",51,0)
 ;
"RTN","IBCEF11",52,0)
 N IB,IBI,IBJ,IBFLD,IBDXI,IBXIEN,Z,IBXTRA,IBRX,IBRX0,IBRX1,Z0,Z1
"RTN","IBCEF11",53,0)
 ;
"RTN","IBCEF11",54,0)
 K ^TMP($J,"IBITEM")
"RTN","IBCEF11",55,0)
 S ^TMP($J,"IBITEM")=""
"RTN","IBCEF11",56,0)
 ; Build diagnosis array if not already built
"RTN","IBCEF11",57,0)
 I $O(^TMP("IBXSAVE",$J,"DX",IBIFN,""))="",$O(^IBA(362.3,"AIFN"_IBIFN,"")) D
"RTN","IBCEF11",58,0)
 .N Z,IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCEF11",59,0)
 .S Z="" F  S Z=$O(IBXDATA(Z)) K:$O(IBXDATA(0))=""&(Z="") IBXDATA Q:Z=""  S:$P(IBXDATA(Z),U,2) ^TMP("IBXSAVE",$J,"DX",IBIFN,$P(IBXDATA(Z),U,2))=Z
"RTN","IBCEF11",60,0)
 ;
"RTN","IBCEF11",61,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)),IB("U")=$G(^("U")),IB("U1")=$G(^("U1"))
"RTN","IBCEF11",62,0)
 S IBI="" F  S IBI=$O(^TMP("IBXSAVE",$J,"DX",IBIFN,IBI)) Q:IBI=""  S IBDXI(IBI)=^(IBI)
"RTN","IBCEF11",63,0)
 I '$G(IBPRINT) D RVCE^IBCF23(IBIFN,IBIFN)
"RTN","IBCEF11",64,0)
 I $G(IBPRINT) D RVCE^IBCF23(,IBIFN)
"RTN","IBCEF11",65,0)
 ; Returns IBFLD(24) = begin date^end date^pos^tos^
"RTN","IBCEF11",66,0)
 ;     proc/bedsection/revenue code^dx pointer^unit charge^
"RTN","IBCEF11",67,0)
 ;     units^modifiers^ purchased charge amount ^anesthesia minutes^
"RTN","IBCEF11",68,0)
 ;     emergency indicator ^ AND
"RTN","IBCEF11",69,0)
 ;         IBFLD(24,n,type,item)=""
"RTN","IBCEF11",70,0)
 ;         IBFLD(24,n_"A") = revenue code abbreviation if no procedure
"RTN","IBCEF11",71,0)
 ;         IBFLD(24,n,"AUX") = 'AUX' node of line item 
"RTN","IBCEF11",72,0)
 ;         IBFLD(24,n,"RX") = soft pointer to file 362.4 from 'item' fld
"RTN","IBCEF11",73,0)
 ;                            (can be null)
"RTN","IBCEF11",74,0)
 ;
"RTN","IBCEF11",75,0)
 D SET^IBCSC5A(IBIFN,.IBRX) ;prescriptions
"RTN","IBCEF11",76,0)
 ; IBRX1(ien 362.4)=RX#^drug ien^NDC^refil #^(re)fil date^qty^days^chrge
"RTN","IBCEF11",77,0)
 I IBRX S IBRX="" F  S IBRX=$O(IBRX(IBRX)) Q:IBRX=""  S IBRX0=0 F  S IBRX0=$O(IBRX(IBRX,IBRX0)) Q:'IBRX0  D
"RTN","IBCEF11",78,0)
 . N IBRXH
"RTN","IBCEF11",79,0)
 . S IBRXH=IBRX(IBRX,IBRX0)
"RTN","IBCEF11",80,0)
 . S IBRX1(+IBRXH)=IBRX_U_$P(IBRXH,U,2)_U_$P(IBRXH,U,5)_U_$P(IBRXH,U,7)_U_IBRX0_U_$P(IBRXH,U,4)_U_$P(IBRXH,U,3)_U_$P(IBRXH,U,6)_U_+IBRXH_U_$P(IBRXH,U,8)
"RTN","IBCEF11",81,0)
 K IBRX
"RTN","IBCEF11",82,0)
 ;
"RTN","IBCEF11",83,0)
 S IBI=0
"RTN","IBCEF11",84,0)
 F  S IBI=$O(IBFLD(24,IBI)) Q:IBI'=+IBI  D
"RTN","IBCEF11",85,0)
 . S IBRX1=0
"RTN","IBCEF11",86,0)
 . I '$G(IBPRINT) Q:$P(IBFLD(24,IBI),U,7)*$P(IBFLD(24,IBI),U,8)'>0  ; For EDI, ignore 0-charge line items
"RTN","IBCEF11",87,0)
 . S IBXDATA(IBI)=$P(IBFLD(24,IBI),U)_U_$P(IBFLD(24,IBI),U,$S($P(IBFLD(24,IBI),U,2)=""&'$G(IBPRINT):1,1:2))
"RTN","IBCEF11",88,0)
 . S $P(IBXDATA(IBI),U,3,5)=$P(IBFLD(24,IBI),U,3,5)
"RTN","IBCEF11",89,0)
 . S $P(IBXDATA(IBI),U,6)=$S($D(IBFLD(24,IBI_"X")):"CJ",1:"HC")
"RTN","IBCEF11",90,0)
 . S $P(IBXDATA(IBI),U,7,13)=$P(IBFLD(24,IBI),U,6,12)
"RTN","IBCEF11",91,0)
 . S $P(IBXDATA(IBI),U,14)=+$$ISLAB(IBXDATA(IBI))
"RTN","IBCEF11",92,0)
 . I $D(IBFLD(24,IBI,"RX")) D  ;Rx
"RTN","IBCEF11",93,0)
 .. S IBRX1=1
"RTN","IBCEF11",94,0)
 .. I $P($G(IBFLD(24,IBI,"AUX")),U,8)'="" S $P(IBFLD(24,IBI,"AUX"),U,8)="" ;No free text allowed for rx's
"RTN","IBCEF11",95,0)
 .. I $D(IBRX1(+IBFLD(24,IBI,"RX"))) D  Q  ;Soft link exists
"RTN","IBCEF11",96,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(+IBFLD(24,IBI,"RX")),$P(IBXDATA(IBI,"RX"),U,2)=$E($P($G(^PSDRUG(+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2),0)),U),1,30)
"RTN","IBCEF11",97,0)
 ... K IBRX1(+IBFLD(24,IBI,"RX"))
"RTN","IBCEF11",98,0)
 ... ; No soft link - must find the first Rx with the same charge
"RTN","IBCEF11",99,0)
 .. S IBRX="" F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  I +$P(IBRX1(IBRX),U,8)=+$P(IBXDATA(IBI),U,8) S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($P($G(^PSDRUG(+$P(IBRX1(IBRX),U,2),0)),U),1,30) K IBRX1(IBRX) Q
"RTN","IBCEF11",100,0)
 . I $G(IBFLD(24,IBI,"AUX"))'="" D
"RTN","IBCEF11",101,0)
 .. I $G(IBPRINT),$P(IBFLD(24,IBI,"AUX"),U,8)'="" S IBXDATA(IBI,"TEXT")=$P(IBFLD(24,IBI,"AUX"),U,8),$P(IBFLD(24,IBI,"AUX"),U,8)=""
"RTN","IBCEF11",102,0)
 .. S IBXDATA(IBI,"AUX")=IBFLD(24,IBI,"AUX")
"RTN","IBCEF11",103,0)
 . I $G(IBPRINT) D
"RTN","IBCEF11",104,0)
 .. I '$P(IBXDATA(IBI),U,8),'$G(IBXDATA(IBI,"RX")) S:'$G(IBNOSHOW) IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS < #PROCEDURES, THEY MUST BE =" Q
"RTN","IBCEF11",105,0)
 .. I $G(IBFLD(24,IBI_"A"))'="" S IBXDATA(IBI,"A")=IBFLD(24,IBI_"A") S:'$G(IBNOSHOW) IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS > #PROCEDURES, THEY MUST BE=: "_IBFLD(24,IBI_"A") Q
"RTN","IBCEF11",106,0)
 .. S IBRX=$G(IBXDATA(IBI,"RX"))
"RTN","IBCEF11",107,0)
 .. I IBRX'="" D  ;Format Rx detail
"RTN","IBCEF11",108,0)
 ... N Z
"RTN","IBCEF11",109,0)
 ... S Z=$P(IBRX,U)
"RTN","IBCEF11",110,0)
 ... S Z=$S(Z'="":"Rx#"_Z_" ",1:"RX: ")
"RTN","IBCEF11",111,0)
 ... S IBXDATA(IBI,"TEXT")=Z_$S($P(IBRX,U,3)'="":"NDC: "_$P(IBRX,U,3),1:"NOC: "_$P(IBRX,U,2))_" Qty: "_$P(IBRX,U,6)_" Days: "_$P(IBRX,U,7)
"RTN","IBCEF11",112,0)
 . I '$G(IBPRINT) D COBLINE^IBCEU6(IBIFN,IBI,.IBXDATA,,.IBXTRA)
"RTN","IBCEF11",113,0)
 I $G(IBPRINT) D
"RTN","IBCEF11",114,0)
 . S IBRX=0 F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  D
"RTN","IBCEF11",115,0)
 .. S IBI=+$O(IBXDATA(""),-1)+1
"RTN","IBCEF11",116,0)
 .. S IBXDATA(IBI)=$$DATE($P(IBRX1(IBRX),U,5))
"RTN","IBCEF11",117,0)
 .. S IBXDATA(IBI,"TEXT")="**** ERROR - NO PROC LINK TO REV CODE FOR DRUG: RX#: "_$P(IBRX1(IBRX),U)_"  NDC #: "_$P(IBRX1(IBRX),U,3)
"RTN","IBCEF11",118,0)
 .. S IBXDATA(IBI,"ARX")=""
"RTN","IBCEF11",119,0)
 .. S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($P($G(^PSDRUG(+$P(IBRX1(IBRX),U,2),0)),U),1,30) K IBRX1(IBRX)
"RTN","IBCEF11",120,0)
 ;
"RTN","IBCEF11",121,0)
 I '$G(IBPRINT),$D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,0) ;Handle bundled/unbundled lines
"RTN","IBCEF11",122,0)
 Q
"RTN","IBCEF11",123,0)
 ;
"RTN","IBCEF11",124,0)
ISLAB(LDATA) ; Returns 0/1 if line item data indicates the item is a lab (1)
"RTN","IBCEF11",125,0)
 ; 'LAB' is defined here as type of service = 5
"RTN","IBCEF11",126,0)
 Q $E($P(LDATA,U,4))="5"
"RTN","IBCEF11",127,0)
 ;
"RTN","IBCEF11",128,0)
FMT(DATA,DLEN,FLEN) ; Returns a string in DATA with a max length of DLEN
"RTN","IBCEF11",129,0)
 ;  and a field length of FLEN
"RTN","IBCEF11",130,0)
 Q $E($E(DATA,1,DLEN)_$J("",FLEN),1,FLEN)
"RTN","IBCEF11",131,0)
 ;
"RTN","IBCEF11",132,0)
DATE(X,DEL) ;  Returns FM date in X as MMxDDxYYYY  where x=DEL
"RTN","IBCEF11",133,0)
 S DEL=$G(DEL)
"RTN","IBCEF11",134,0)
 S X=$$DATE^IBCF2(X,1,1)
"RTN","IBCEF11",135,0)
 I X'="" S X=$E(X,1,2)_DEL_$E(X,3,4)_DEL_$E(X,5,8)
"RTN","IBCEF11",136,0)
 Q X
"RTN","IBCEF11",137,0)
 ;
"RTN","IBCEF2")
0^99^B52300347
"RTN","IBCEF2",1,0)
IBCEF2 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;8/6/03 10:54am
"RTN","IBCEF2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,85,51,137,232,155**;21-MAR-94
"RTN","IBCEF2",3,0)
 ;
"RTN","IBCEF2",4,0)
HOS(IBIFN) ; Extract rev codes for inst. episode into IBXDATA
"RTN","IBCEF2",5,0)
 ; Moved for space
"RTN","IBCEF2",6,0)
 D HOS^IBCEF22(IBIFN)
"RTN","IBCEF2",7,0)
 Q
"RTN","IBCEF2",8,0)
 ;
"RTN","IBCEF2",9,0)
OTHINS(IBIFN) ;Determine 'other insurance' node (I1,I2)
"RTN","IBCEF2",10,0)
 ; If primary bill, other ins is secondary
"RTN","IBCEF2",11,0)
 ; If sec or tert bill, other ins is primary
"RTN","IBCEF2",12,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",13,0)
 N Z
"RTN","IBCEF2",14,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",15,0)
 Q "I"_$S(Z=1:2,1:1)
"RTN","IBCEF2",16,0)
 ;
"RTN","IBCEF2",17,0)
OTHINS1(IBIFN) ; Returns the COB #'s of all 'other insurance' as a string
"RTN","IBCEF2",18,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",19,0)
 N IBC,Z
"RTN","IBCEF2",20,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",21,0)
 I Z=1 S IBC=$S($D(^DGCR(399,IBIFN,"I2")):$S($D(^DGCR(399,IBIFN,"I3")):23,1:2),1:"") ;Primary=>2 or 23
"RTN","IBCEF2",22,0)
 I Z=2 S IBC="1"_$S($D(^DGCR(399,IBIFN,"I3")):3,1:"") ;Secondary=>1 or 13
"RTN","IBCEF2",23,0)
 I Z=3 S IBC="12" ;Tertiary =>12
"RTN","IBCEF2",24,0)
OTHQ Q IBC
"RTN","IBCEF2",25,0)
 ;
"RTN","IBCEF2",26,0)
RECVR(IBIFN) ; Returns the V.A. internal routing id of the current ins
"RTN","IBCEF2",27,0)
 ; co for 837
"RTN","IBCEF2",28,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",29,0)
 N MCR,NUM,IBPH
"RTN","IBCEF2",30,0)
 S IBPH=$P("P^H",U,$$FT^IBCEF(IBIFN)-1)
"RTN","IBCEF2",31,0)
 S NUM="ENVOY"_IBPH       ; 155 version
"RTN","IBCEF2",32,0)
 ; If rate type is CHAMPVA, send 'CHAMVA'
"RTN","IBCEF2",33,0)
 I $P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U)="CHAMPVA" S NUM="CHAMV"_IBPH
"RTN","IBCEF2",34,0)
 I NUM["ENVOY",$$MCRWNR^IBEFUNC(+$$CURR(IBIFN)) D  ;Find out PART A/B for MEDICARE    155 version
"RTN","IBCEF2",35,0)
 . S MCR=$$MRATYPE^IBEFUNC(IBIFN)
"RTN","IBCEF2",36,0)
 . I MCR'="","AB"[MCR S NUM="PART"_MCR
"RTN","IBCEF2",37,0)
 Q NUM
"RTN","IBCEF2",38,0)
 ;
"RTN","IBCEF2",39,0)
ALLPAYID(IBIFN,IBXDATA,SEQ) ; Returns clearinghouse id for all (SEQ="")
"RTN","IBCEF2",40,0)
 ;  or a specific (SEQ=1,2,3) ins co's for 837 in IBXDATA(n) for bill ien
"RTN","IBCEF2",41,0)
 ;  IBIFN
"RTN","IBCEF2",42,0)
 N Z,Z0,Z1,A,IBM,IBINST,IBMCR,IBX
"RTN","IBCEF2",43,0)
 S IBXDATA="",IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCEF2",44,0)
 F Z=1:1:3 I $S('$G(SEQ):1,1:Z=SEQ) S Z0=$P(IBM,U,Z) I Z0 D  S:A'="" IBXDATA(Z)=A
"RTN","IBCEF2",45,0)
 . S A=""
"RTN","IBCEF2",46,0)
 . S IBINST=($$FT^IBCEF(IBIFN)=3) ;Is bill UB-92?
"RTN","IBCEF2",47,0)
 . S IBMCR=$$MCRONBIL^IBEFUNC(IBIFN),Z1=$G(^DGCR(399,IBIFN,"TX"))
"RTN","IBCEF2",48,0)
 . Q:$P(Z1,U,8)=1!$S('$P(Z1,U,9):0,1:$$MRASEC^IBCEF4(IBIFN))  ;Force local prnt
"RTN","IBCEF2",49,0)
 . S A=$S($P(Z1,U,8)'=2:$P($G(^DIC(36,Z0,3)),U,$S(IBINST:4,1:2)),1:"")
"RTN","IBCEF2",50,0)
 . S A=$$UP^XLFSTR(A)
"RTN","IBCEF2",51,0)
 . ;
"RTN","IBCEF2",52,0)
 . ; RPRNT = HCFA 1500 Rx bills
"RTN","IBCEF2",53,0)
 . ; IPRNT = Inst with MRA 
"RTN","IBCEF2",54,0)
 . ; PPRNT = Prof with MRA
"RTN","IBCEF2",55,0)
 . ; No MRA: HPRNT = inst printed bills
"RTN","IBCEF2",56,0)
 . ;         SPRNT = prof printed bills
"RTN","IBCEF2",57,0)
 . ; Default to appropriate 'xPRNT' if Rx bill or COB bill or forced to
"RTN","IBCEF2",58,0)
 . ;    print - claims must print at clearinghouse
"RTN","IBCEF2",59,0)
 . ;
"RTN","IBCEF2",60,0)
 . I 'IBINST,$$ISRX^IBCEF1(IBIFN) S A="RPRNT" Q  ; Rx bills on HCFA 1500
"RTN","IBCEF2",61,0)
 . I $P(Z1,U,8)=2 S A=$S(IBINST:"H",1:"S")_"PRNT" Q  ;Forced to print
"RTN","IBCEF2",62,0)
 . ;
"RTN","IBCEF2",63,0)
 . ; If not a primary bill force to print
"RTN","IBCEF2",64,0)
 . I Z>1,IBMCR=1,$P(Z1,U,5)="C" S A=$S(IBINST:"I",1:"P")_"PRNT" Q
"RTN","IBCEF2",65,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,Z) S A=$S(IBINST:"12M61",1:"SMTX1") Q
"RTN","IBCEF2",66,0)
 . ; If not a primary bill force to print
"RTN","IBCEF2",67,0)
 . I Z>1,Z=$$COBN^IBCEF(IBIFN) S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",68,0)
 ;
"RTN","IBCEF2",69,0)
 Q
"RTN","IBCEF2",70,0)
 ;
"RTN","IBCEF2",71,0)
PAYERID(IBIFN) ; Returns clearinghouse id for current ins co
"RTN","IBCEF2",72,0)
 ; IBIFN = bill ien
"RTN","IBCEF2",73,0)
 N NUM,IBSEQ
"RTN","IBCEF2",74,0)
 ; Determine the current ins co's # to identify at WEBMD
"RTN","IBCEF2",75,0)
 ; Envoy changed to WEBMD in patch 232
"RTN","IBCEF2",76,0)
 S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",77,0)
 D ALLPAYID(IBIFN,.NUM,IBSEQ) S NUM=$G(NUM(IBSEQ))
"RTN","IBCEF2",78,0)
 Q $G(NUM)
"RTN","IBCEF2",79,0)
 ;
"RTN","IBCEF2",80,0)
CURR(IBIFN) ; Returns ien of the current insurance
"RTN","IBCEF2",81,0)
 ; company for bill ien IBIFN
"RTN","IBCEF2",82,0)
 Q $$FINDINS^IBCEF1(IBIFN)
"RTN","IBCEF2",83,0)
 ;
"RTN","IBCEF2",84,0)
ADMDT(IBIFN,NOOUTCK) ; Calculate admission/start of care date/time
"RTN","IBCEF2",85,0)
 ; IBIFN = bill ien
"RTN","IBCEF2",86,0)
 ; NOOUTCK = flag that will:
"RTN","IBCEF2",87,0)
 ;          (1) no check for inpt episode overlap for outpt
"RTN","IBCEF2",88,0)
 ;          (0 or null) performs check for inpt episode overlap for outpt
"RTN","IBCEF2",89,0)
 ;                                      
"RTN","IBCEF2",90,0)
 ; Returns IBXDATA = fileman date format
"RTN","IBCEF2",91,0)
 N Z,Z0,Z1
"RTN","IBCEF2",92,0)
 S Z=$G(^DGCR(399,IBIFN,0)),Z1=$P($G(^("U")),U,20),Z0=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEF2",93,0)
 S IBXDATA=$S(Z0&$P(Z,U,8):$P($G(^DGPT(+$P(Z,U,8),0)),U,2),1:"")
"RTN","IBCEF2",94,0)
 S:'IBXDATA IBXDATA=$P(Z,U,3)_$S(Z0&(Z1<25):"."_$E("0",$L(Z1))_Z1,1:"")
"RTN","IBCEF2",95,0)
 ; Check to see if outpt episode (date in event date) overlaps inpt
"RTN","IBCEF2",96,0)
 ;  episode - use admit date if it does
"RTN","IBCEF2",97,0)
 I 'Z0,IBXDATA,'$G(NOOUTCK) D
"RTN","IBCEF2",98,0)
 . N VAINDT,VAIN,DFN
"RTN","IBCEF2",99,0)
 . S VAINDT=IBXDATA,DFN=$P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBCEF2",100,0)
 . D INP^VADPT S IBXDATA=+VAIN(7) S:'IBXDATA IBXDATA=""
"RTN","IBCEF2",101,0)
 I 'IBXDATA,'Z0 S IBXDATA=$$SERVDT^IBCEF(IBIFN,,2)
"RTN","IBCEF2",102,0)
 Q
"RTN","IBCEF2",103,0)
 ;
"RTN","IBCEF2",104,0)
DISDT(IBIFN) ; Calculate discharge date
"RTN","IBCEF2",105,0)
 ; IBIFN = bill ien
"RTN","IBCEF2",106,0)
 N Z,Z0
"RTN","IBCEF2",107,0)
 S Z=$$INPAT^IBCEF(IBIFN,1),Z0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF2",108,0)
 I Z S IBXDATA=+$G(^DGPT(+$P(Z0,U,8),70)) S:'IBXDATA IBXDATA=$P(Z0,U,16)
"RTN","IBCEF2",109,0)
 I 'Z N VAINDT,VAIN,DFN S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2) D INP^VADPT I VAIN(1) S IBXDATA=+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0))
"RTN","IBCEF2",110,0)
 Q
"RTN","IBCEF2",111,0)
 ;
"RTN","IBCEF2",112,0)
INDTS(IBIFN) ; Function returns the admit ^ discharge date/time of admission if patient is an inpatient on bill's event date
"RTN","IBCEF2",113,0)
 N Z,Z0,DFN,VAINDT,VAIN S Z0=""
"RTN","IBCEF2",114,0)
 S Z=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(Z,U,2),VAINDT=$P(Z,U,3)
"RTN","IBCEF2",115,0)
 I +DFN,+VAINDT D INP^VADPT I +VAIN(1) S Z0=+VAIN(7)_U_+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0))
"RTN","IBCEF2",116,0)
 Q Z0
"RTN","IBCEF2",117,0)
 ;
"RTN","IBCEF2",118,0)
TXMT(IBIFN) ; Function moved - use new call in IBCEF4
"RTN","IBCEF2",119,0)
 Q $$TXMT^IBCEF4(IBIFN)
"RTN","IBCEF2",120,0)
 ;
"RTN","IBCEF2",121,0)
 ;
"RTN","IBCEF2",122,0)
ID(LN,VAL) ; Set EXTRACT GLOBAL for multi-valued record
"RTN","IBCEF2",123,0)
 ; ids for Austin
"RTN","IBCEF2",124,0)
 ; LN = the line # being extracted
"RTN","IBCEF2",125,0)
 ; VAL = the value of the element being extracted
"RTN","IBCEF2",126,0)
 ;
"RTN","IBCEF2",127,0)
 ; Assumes IBXPG exists
"RTN","IBCEF2",128,0)
 ;
"RTN","IBCEF2",129,0)
 Q:LN<2
"RTN","IBCEF2",130,0)
 D SETGBL^IBCEFG(IBXPG,LN,1,VAL,.IBXSIZE)
"RTN","IBCEF2",131,0)
 Q
"RTN","IBCEF2",132,0)
 ;
"RTN","IBCEF2",133,0)
ID1(LN,DX,CT) ;Special entrypoint for diagnoses to 'save' the fact
"RTN","IBCEF2",134,0)
 ;   a dx code is an e-code.
"RTN","IBCEF2",135,0)
 ; LN is last entry # output, returned as the entry # (IBXLINE) to assign to this entry
"RTN","IBCEF2",136,0)
 ; DX = the actual Dx code array(RECORD ID). Pass by reference, DX returned null if
"RTN","IBCEF2",137,0)
 ;      dx was not output
"RTN","IBCEF2",138,0)
 ; CT = the ct on the 'DC' entry.  pass by reference, returned null if
"RTN","IBCEF2",139,0)
 ;      the end of the valid dx codes has been reached
"RTN","IBCEF2",140,0)
 N IBINS,VAL
"RTN","IBCEF2",141,0)
 S IBINS=($$FT^IBCEF(IBXIEN)=3)
"RTN","IBCEF2",142,0)
 S VAL="DC"_CT                     ; **232**
"RTN","IBCEF2",143,0)
 S VAL=$E(VAL_" ",1,4)
"RTN","IBCEF2",144,0)
 ;I 'IBINS,CT>8 S CT=""  ;Only 8 codes for professional/HCFA  **232**
"RTN","IBCEF2",145,0)
 I IBINS D
"RTN","IBCEF2",146,0)
 . I CT>8 S CT="" Q  ;Only 8 codes for institutional/UB  **232**
"RTN","IBCEF2",147,0)
 . ; Check for 'E-code'.  If there, don't extract the first one as a dx,
"RTN","IBCEF2",148,0)
 . ;     but as a special E-code
"RTN","IBCEF2",149,0)
 . I $G(IBXSAVE("DX-E"))="",$E($G(DX))="E" S IBXSAVE("DX-E")=DX,DX=""
"RTN","IBCEF2",150,0)
 I 'IBINS,CT>4 S ^TMP("IBXSAVE",$J,"DX",IBXIEN)=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN))+1,^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(+^TMP("IBXSAVE",$J,"DX",IBXIEN)),U,2))=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN)),DX="" Q
"RTN","IBCEF2",151,0)
 I CT'="",DX'="" S LN=LN+1 D ID(LN,VAL) S ^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(LN),U,2))=LN,^TMP("IBXSAVE",$J,"DX",IBXIEN)=CT,CT=CT+1 Q
"RTN","IBCEF2",152,0)
 Q
"RTN","IBCEF2",153,0)
 ;
"RTN","IBCEF2",154,0)
M(CT) ; Calculate multi-valued field for 837 extract
"RTN","IBCEF2",155,0)
 ; CT = passed by reference/the record ID counter
"RTN","IBCEF2",156,0)
 S CT=CT+1
"RTN","IBCEF2",157,0)
 Q $E(CT#12+$S(CT#12:0,1:12)_" ",1,2)
"RTN","IBCEF2",158,0)
 ;
"RTN","IBCEF2",159,0)
SVITM(IBA,LINE) ; Saves the linked items from the bill data extract into
"RTN","IBCEF2",160,0)
 ; an array the formatter will use to link Rxs and prosthetics
"RTN","IBCEF2",161,0)
 ; to an SV1 or SV2 line item, if possible.  Kills off IBA array entries
"RTN","IBCEF2",162,0)
 ; after they are 'moved'
"RTN","IBCEF2",163,0)
 ; IBA = array that contains the data to be saved
"RTN","IBCEF2",164,0)
 ;   subscripts are (line #,item type,item pointer)=ct
"RTN","IBCEF2",165,0)
 N Z0,Z1
"RTN","IBCEF2",166,0)
 S Z0="" F  S Z0=$O(IBA("OUTPT",LINE,Z0)) Q:Z0=""  I Z0?1N.N  S Z1="" F  S Z1=$O(IBA("OUTPT",LINE,Z0,Z1)) Q:Z1=""  S ^TMP($J,"IBITEM",Z0,Z1,LINE)=IBA("OUTPT",LINE,Z0,Z1) K IBA("OUTPT",LINE,Z0,Z1)
"RTN","IBCEF2",167,0)
 Q
"RTN","IBCEF2",168,0)
 ;
"RTN","IBCEF2",169,0)
LINK(IBTYP,IBDATA) ; Link the item with a service line, if possible
"RTN","IBCEF2",170,0)
 ; IBTYP = the code for the type of item
"RTN","IBCEF2",171,0)
 ;         returned incremented if no link is made
"RTN","IBCEF2",172,0)
 ; IBDATA = the extracted data string that identifies the item. 
"RTN","IBCEF2",173,0)
 ; Returns the line to link to or null if no link
"RTN","IBCEF2",174,0)
 N IBLN,IBKEY,Z
"RTN","IBCEF2",175,0)
 S IBLN=""
"RTN","IBCEF2",176,0)
 S IBKEY=$S(IBTYP=3:$P(IBDATA,U,9),IBTYP=5:$P(IBDATA,U,4),1:"") Q:IBKEY=""
"RTN","IBCEF2",177,0)
 I $D(^TMP($J,"IBITEM",IBTYP,IBKEY)) D  G:IBLN LINKQ
"RTN","IBCEF2",178,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",179,0)
 I $D(^TMP($J,"IBITEM",IBTYP,0)) S IBKEY=0 D
"RTN","IBCEF2",180,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",181,0)
LINKQ Q IBLN
"RTN","IBCEF2",182,0)
 ;
"RTN","IBCEF2",183,0)
COID(IBIFN) ; Claim office ID - moved for space
"RTN","IBCEF2",184,0)
 Q $$COID^IBCEF21(IBIFN)
"RTN","IBCEF2",185,0)
 ;
"RTN","IBCEF2",186,0)
PPOL(IBIFN,COB) ; return IFN of patient policy on a bill defined by COB (fields 399,112-114)
"RTN","IBCEF2",187,0)
 N X,Y,PPOL S PPOL=""
"RTN","IBCEF2",188,0)
 I +$G(IBIFN) S X=$G(^DGCR(399,+IBIFN,"M")) I +$G(COB),COB<4 S Y=COB+11,PPOL=$P(X,U,Y)
"RTN","IBCEF2",189,0)
 Q PPOL
"RTN","IBCEF2",190,0)
 ;
"RTN","IBCEF2",191,0)
LADJ(SUB,LINE,SEQ1,GRP,IBXSAVE,PIECE) ; Extract line level adjustments
"RTN","IBCEF2",192,0)
 ; SUB     = 1st subscript in IBXSAVE array to use
"RTN","IBCEF2",193,0)
 ; LINE    = 2nd subscript
"RTN","IBCEF2",194,0)
 ; SEQ1    = 4th subscript
"RTN","IBCEF2",195,0)
 ; GRP     = 5th subscript
"RTN","IBCEF2",196,0)
 ; IBXSAVE = array that has the data for COB line level adjustments
"RTN","IBCEF2",197,0)
 ; PIECE   = # of the piece on the 0-node of the line level
"RTN","IBCEF2",198,0)
 ;           adjustment reason to be extracted
"RTN","IBCEF2",199,0)
 ;
"RTN","IBCEF2",200,0)
 N A,B
"RTN","IBCEF2",201,0)
 S (A,B)=0
"RTN","IBCEF2",202,0)
 F  S A=$O(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A)) Q:'A  D
"RTN","IBCEF2",203,0)
 . S B=B+1,IBXDATA(B)=$P(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A),U,PIECE)
"RTN","IBCEF2",204,0)
 Q
"RTN","IBCEF2",205,0)
 ;
"RTN","IBCEF2",206,0)
ESGHPST(IBIFN,COB) ; return insureds employ status if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",207,0)
 Q $$ESGHPST^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",208,0)
 ;
"RTN","IBCEF2",209,0)
ESGHPNL(IBIFN,COB) ; return employer name and location if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",210,0)
 Q $$ESGHPNL^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",211,0)
 ;
"RTN","IBCEF2",212,0)
AMTOUT(A,B,C,IBXSAVE) ; format output amount
"RTN","IBCEF2",213,0)
 ;
"RTN","IBCEF2",214,0)
 N Z,K,IBZ,IBARR K IBXDATA S (IBZ,K)=0,IBARR="IBXSAVE("""_A_""")" F  S IBZ=$O(@IBARR@(IBZ)) Q:'IBZ  S K=K+1,Z=0 F  S Z=$O(@IBARR@(IBZ,Z)) Q:'Z  I $P($G(@IBARR@(IBZ,Z,B)),U,C) S IBXDATA(K)=$$DOLLAR^IBCEFG1($G(IBXDATA(K))+$P(@IBARR@(IBZ,Z,B),U,C))
"RTN","IBCEF2",215,0)
 Q
"RTN","IBCEF22")
0^58^B50744084
"RTN","IBCEF22",1,0)
IBCEF22 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;06-FEB-96
"RTN","IBCEF22",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,135,155**;21-MAR-94
"RTN","IBCEF22",3,0)
 ;
"RTN","IBCEF22",4,0)
 ;  OVERFLOW FROM ROUTINE IBCEF2
"RTN","IBCEF22",5,0)
HOS(IBIFN) ; Extract rev codes for episode billed on a UB92 into IBXDATA
"RTN","IBCEF22",6,0)
 ; IBIFN = bill ien
"RTN","IBCEF22",7,0)
 ; Format: IBXDATA(n) =
"RTN","IBCEF22",8,0)
 ;  rev cd ptr ^ CPT CODE ptr ^ unit chg ^ units ^ tot charge
"RTN","IBCEF22",9,0)
 ;    ^ tot uncov^ FL49 value ^ ien of rev code multiple entry(s)
"RTN","IBCEF22",10,0)
 ;      (separated by ";")
"RTN","IBCEF22",11,0)
 ;    ^ modifiers specific to rev code/proc (separated by ",")
"RTN","IBCEF22",12,0)
 ;    ^ rev code date, if it can be determined by a corresponding proc
"RTN","IBCEF22",13,0)
 ;
"RTN","IBCEF22",14,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF22",15,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF22",16,0)
 ;      line in the first '^' piece followed by the '0' node of file
"RTN","IBCEF22",17,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF22",18,0)
 ;       COB = COB seq # of adjustment's ins co, m = seq #
"RTN","IBCEF22",19,0)
 ;         -- AND --
"RTN","IBCEF22",20,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF22",21,0)
 ;           the '0' node for each subordinate entry of file
"RTN","IBCEF22",22,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837)
"RTN","IBCEF22",23,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF22",24,0)
 ;
"RTN","IBCEF22",25,0)
 N IBDA,IBCOMB,IBINPAT,IBLN,IBX,IBY,IBZ,IBS,IBSS,IBXTRA,IBX1,IBXS,IBP,IBPO,IBP1,IBDEF,Z,Z0,Z1,ZX,QQ,IBMOD
"RTN","IBCEF22",26,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEF22",27,0)
 I 'IBINPAT D F^IBCEF("N-STATEMENT COVERS FROM DATE","IBZ",,IBIFN)
"RTN","IBCEF22",28,0)
 S IBDEF=$G(IBZ)
"RTN","IBCEF22",29,0)
 ; loop through all proc codes - sort by procedure, modifiers and print order
"RTN","IBCEF22",30,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"CP",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ D
"RTN","IBCEF22",31,0)
 . S IBP(+$P(IBZ,U)_U_$$GETMOD^IBEFUNC(IBIFN,IBDA,1),$S($P(IBZ,U,4):$P(IBZ,U,4),1:999),IBDA)=$P(IBZ,U,2)
"RTN","IBCEF22",32,0)
 ; loop through all rev codes - sort by rev code
"RTN","IBCEF22",33,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ S IBMOD="" D
"RTN","IBCEF22",34,0)
 . S IBX=$G(^DGCR(399.2,+IBZ,0)),IBX1="",IBPO=0
"RTN","IBCEF22",35,0)
 . ; Auto-added procedure charge
"RTN","IBCEF22",36,0)
 . I $P(IBZ,U,10)=4,$P(IBZ,U,11) D  ; Soft link to proc
"RTN","IBCEF22",37,0)
 .. S Z=$G(^DGCR(399,IBIFN,"CP",$P(IBZ,U,11),0))
"RTN","IBCEF22",38,0)
 .. Q:Z=""
"RTN","IBCEF22",39,0)
 .. S ZX=+Z_U_$$GETMOD^IBEFUNC(IBIFN,$P(IBZ,U,11),1)
"RTN","IBCEF22",40,0)
 .. Q:'$O(IBP(ZX,0))&'$O(IBP1(ZX,0))
"RTN","IBCEF22",41,0)
 .. I $P(IBZ,U,6) Q:$S($P(Z,U)'["ICPT":1,1:+$P(Z,U)'=$P(IBZ,U,6))
"RTN","IBCEF22",42,0)
 .. S Z0=$S($D(IBP(ZX)):$O(IBP(ZX,0)),1:$O(IBP1(ZX,0)))
"RTN","IBCEF22",43,0)
 .. S:'Z0 Z0=999
"RTN","IBCEF22",44,0)
 .. Q:'$D(IBP(ZX,+Z0,$P(IBZ,U,11)))&'$D(IBP1(ZX,+Z0,$P(IBZ,U,11)))
"RTN","IBCEF22",45,0)
 .. I '$D(IBP1(ZX,+Z0,$P(IBZ,U,11))) S IBP1(ZX,+Z0,$P(IBZ,U,11))=IBP(ZX,+Z0,$P(IBZ,U,11)) K IBP(ZX,+Z0,$P(IBZ,U,11))
"RTN","IBCEF22",46,0)
 .. S IBX1=$P(Z,U,2),IBPO=+Z0,IBMOD=$P(ZX,U,2)
"RTN","IBCEF22",47,0)
 . ; Manually added charge with a procedure
"RTN","IBCEF22",48,0)
 . I $P(IBZ,U,6),$S($P(IBZ,U,10)=4:'$P(IBZ,U,11),1:1),+$O(IBP($P(IBZ,U,6)))=$P(IBZ,U,6) D
"RTN","IBCEF22",49,0)
 .. ; No direct link, but a proc exists on rev code and in procedure mult without and then with modifiers
"RTN","IBCEF22",50,0)
 .. S ZX=$O(IBP($P(IBZ,U,6)))
"RTN","IBCEF22",51,0)
 .. F QQ=1,2 Q:IBPO  S Z="" F  S Z=$O(IBP(ZX,Z),-1) Q:'Z!(IBPO)  S Z0=0 F  S Z0=$O(IBP(ZX,Z,Z0)) Q:'Z0  S Z1=$G(^DGCR(399,IBIFN,"CP",Z0,0)) D  Q:IBPO
"RTN","IBCEF22",52,0)
 ... ; Ignore if not a CPT or a modifier exists and this is first pass
"RTN","IBCEF22",53,0)
 ... S IBMOD=$$GETMOD^IBEFUNC(IBIFN,Z0,1)
"RTN","IBCEF22",54,0)
 ... Q:$S($P(Z1,U)'["ICPT":1,QQ=1:IBMOD'="",1:0)
"RTN","IBCEF22",55,0)
 ... S IBPO=+$P(Z1,U,4),IBX1=$P(Z1,U,2)
"RTN","IBCEF22",56,0)
 ... K IBP(+Z1_U_IBMOD,Z,Z0)
"RTN","IBCEF22",57,0)
 . ;
"RTN","IBCEF22",58,0)
 . I IBX'="" D  ; revenue code is valid
"RTN","IBCEF22",59,0)
 .. F Z=900:1 S Z0=$S(IBPO:IBPO,$D(IBX(" "_$P(IBX,U),Z)):0,1:Z) I Z0 S IBPO=Z0 Q
"RTN","IBCEF22",60,0)
 .. S IBX(" "_$P(IBX,U),IBPO,IBDA)=IBX,IBX(" "_$P(IBX,U),IBPO,IBDA,"DT")=$S(IBX1:IBX1,1:IBDEF),IBX(" "_$P(IBX,U),IBPO,IBDA,"MOD")=IBMOD
"RTN","IBCEF22",61,0)
 ;
"RTN","IBCEF22",62,0)
 S IBS="" F  S IBS=$O(IBX(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX(IBS,IBPO)) Q:'IBPO  D
"RTN","IBCEF22",63,0)
 . S IBDA=0 F  S IBDA=$O(IBX(IBS,IBPO,IBDA)) Q:'IBDA  S IBX=$G(IBX(IBS,IBPO,IBDA)),IBZ=$G(^DGCR(399,IBIFN,"RC",IBDA,0)) I IBX'="" D
"RTN","IBCEF22",64,0)
 .. ;S IBXS=$P(IBZ,U,2)_U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD"))
"RTN","IBCEF22",65,0)
 .. S IBXS=U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD")) ;combine same proc and modifiers regardless of rate
"RTN","IBCEF22",66,0)
 .. S:IBPO'<900&'$$ACCRV($P(IBS," ",2))&$S(IBINPAT:$P(IBZ,U,6),1:1) IBCOMB(IBS,IBXS,IBPO)=IBDA
"RTN","IBCEF22",67,0)
 .. S:'$D(IBX1(IBS,IBPO,IBXS,1)) IBX1(IBS,IBPO,IBXS,1)=IBX,IBX1(IBS,IBPO,IBXS,2)=IBZ
"RTN","IBCEF22",68,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U)=$P($G(IBX1(IBS,IBPO,IBXS)),U)+$P(IBZ,U,3)
"RTN","IBCEF22",69,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U,2)=$P($G(IBX1(IBS,IBPO,IBXS)),U,2)+$P(IBZ,U,4)
"RTN","IBCEF22",70,0)
 .. S IBX1(IBS,IBPO,IBXS,"DT")=$G(IBX(IBS,IBPO,IBDA,"DT")),IBX1(IBS,IBPO,IBXS,"IEN")=$G(IBX1(IBS,IBPO,IBXS,"IEN"))_$S($G(IBX1(IBS,IBPO,IBXS,"IEN")):";",1:"")_IBDA
"RTN","IBCEF22",71,0)
 ;
"RTN","IBCEF22",72,0)
 S IBS="" F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=899 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  D  ; Check to combine like rev codes without print order
"RTN","IBCEF22",73,0)
 . N Q,Q0,Q1,Z,Z0,Z1,Z2,IBZ1,IBZ2
"RTN","IBCEF22",74,0)
 . S Z=""
"RTN","IBCEF22",75,0)
 . N IBACC
"RTN","IBCEF22",76,0)
 . F  S Z=$O(IBX1(IBS,IBPO,Z)) Q:Z=""  S Q=IBPO F  S Q=$O(IBCOMB(IBS,Z,Q)) Q:'Q  I Q'=IBPO S IBZ1=$G(IBX1(IBS,IBPO,Z,1)),IBZ2=$G(IBX1(IBS,IBPO,Z,2)) D
"RTN","IBCEF22",77,0)
 .. Q:$G(IBX1(IBS,IBPO,Z,1))'=$G(IBX1(IBS,Q,Z,1))
"RTN","IBCEF22",78,0)
 .. S Q1=1,IBACC=$$ACCRV(+$P(IBS," ",2))
"RTN","IBCEF22",79,0)
 .. F Q0=1,5:1:7,10:1:13,15 D  Q:'Q1
"RTN","IBCEF22",80,0)
 ... I IBACC Q:Q0=5!(Q0>6)
"RTN","IBCEF22",81,0)
 ... I (Q0=11!(Q0=15))&($P($G(IBX1(IBS,Q,Z,2)),U,10)=3) Q
"RTN","IBCEF22",82,0)
 ... I Q0=5,'IBINPAT Q
"RTN","IBCEF22",83,0)
 ... I $P($G(IBX1(IBS,IBPO,Z,2)),U,Q0)'=$P($G(IBX1(IBS,Q,Z,2)),U,Q0) S Q1=0
"RTN","IBCEF22",84,0)
 .. Q:'Q1
"RTN","IBCEF22",85,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,3)=$P(IBX1(IBS,IBPO,Z,2),U,3)+$P(IBX1(IBS,Q,Z,2),U,3)
"RTN","IBCEF22",86,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,4)=$P(IBX1(IBS,IBPO,Z,2),U,4)+$P(IBX1(IBS,Q,Z,2),U,4)
"RTN","IBCEF22",87,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,9)=$P(IBX1(IBS,IBPO,Z,2),U,9)+$P(IBX1(IBS,Q,Z,2),U,9)
"RTN","IBCEF22",88,0)
 .. S IBX1(IBS,IBPO,Z)=$P(IBX1(IBS,IBPO,Z,2),U,3)_U_$P(IBX1(IBS,IBPO,Z,2),U,4)
"RTN","IBCEF22",89,0)
 .. S IBX1(IBS,IBPO,Z,"IEN")=IBX1(IBS,IBPO,Z,"IEN")_";"_IBX1(IBS,Q,Z,"IEN")
"RTN","IBCEF22",90,0)
 .. K IBX1(IBS,Q,Z)
"RTN","IBCEF22",91,0)
 ;
"RTN","IBCEF22",92,0)
 S IBS="",IBLN=0
"RTN","IBCEF22",93,0)
 F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  S IBSS="" F  S IBSS=$O(IBX1(IBS,IBPO,IBSS)) Q:IBSS=""  D
"RTN","IBCEF22",94,0)
 . S IBX=$G(IBX1(IBS,IBPO,IBSS,1)),IBZ=$G(IBX1(IBS,IBPO,IBSS,2))
"RTN","IBCEF22",95,0)
 . S IBLN=$G(IBLN)+1,IBXDATA(IBLN)=$P(IBX,U)_U_$P(IBZ,U,6)_U_$P(IBZ,U,2)_U_+IBX1(IBS,IBPO,IBSS)_U_+$P(IBX1(IBS,IBPO,IBSS),U,2),$P(IBXDATA(IBLN),U,10)=$G(IBX1(IBS,IBPO,IBSS,"DT"))
"RTN","IBCEF22",96,0)
 . S $P(IBXDATA(IBLN),U,6)=$P(IBZ,U,9),$P(IBXDATA(IBLN),U,7)=$P(IBZ,U,13),$P(IBXDATA(IBLN),U,8)=$G(IBX1(IBS,IBPO,IBSS,"IEN")),$P(IBXDATA(IBLN),U,9)=$P($P(IBSS,U,3),",",1,2)
"RTN","IBCEF22",97,0)
 . ; Extract line lev COB data for sec or tert bill
"RTN","IBCEF22",98,0)
 . I $$COBN^IBCEF(IBIFN)>1 D COBLINE^IBCEU6(IBIFN,IBLN,.IBXDATA,,.IBXTRA) I $D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,1) ;Handle bundled/unbundled
"RTN","IBCEF22",99,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN))!$D(^IBA(362.5,"AIFN"_IBIFN)) D
"RTN","IBCEF22",100,0)
 . N IBARRAY,IBX,IBZ,IBRX,IBLCNT
"RTN","IBCEF22",101,0)
 . S IBLCNT=0
"RTN","IBCEF22",102,0)
 . ; Print prescriptions, prosthetics on front of UB-92
"RTN","IBCEF22",103,0)
 . D SET^IBCSC5A(IBIFN,.IBARRAY)
"RTN","IBCEF22",104,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",105,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",106,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB92",IBLCNT)=""
"RTN","IBCEF22",107,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB92",IBLCNT)="PRESCRIPTION REFILLS:",IBLCNT=2
"RTN","IBCEF22",108,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  S IBRX=IBARRAY(IBX,IBY) D
"RTN","IBCEF22",109,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB92",IBLCNT)=IBX_$J(" ",(11-$L(IBX)))_" "_$J($S($P(IBRX,U,6):"$"_$FN($P(IBRX,U,6),",",2),1:""),10)_"  "_$J($$FMTE^XLFDT(IBY,2),8)_"  "_$P($G(^PSDRUG(+$P(IBRX,U,2),0)),U,1)
"RTN","IBCEF22",110,0)
 ... S IBZ=$S(+$P(IBRX,U,4):"QTY: "_$P(IBRX,U,4)_" ",1:"")_$S(+$P(IBRX,U,3):"for "_$P(IBRX,U,3)_" days supply ",1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB92",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",111,0)
 ... S IBZ=$S($P(IBRX,U,5)'="":"NDC #: "_$P(IBRX,U,5),1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB92",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",112,0)
 . ;
"RTN","IBCEF22",113,0)
 . D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF22",114,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",115,0)
 .. S IBLCNT=0
"RTN","IBCEF22",116,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",117,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB92",IBLCNT)=""
"RTN","IBCEF22",118,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB92",IBLCNT)="PROSTHETIC REFILLS:",IBLCNT=2
"RTN","IBCEF22",119,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCEF22",120,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB92",IBLCNT)=$$FMTE^XLFDT(IBX,2)_" "_$J($S($P(IBARRAY(IBX,IBY),U,2):"$"_$FN($P(IBARRAY(IBX,IBY),U,2),",",2),1:""),10)_"  "_$E($P($$PIN^IBCSC5B(IBY),U,2),1,54)
"RTN","IBCEF22",121,0)
 Q
"RTN","IBCEF22",122,0)
 ;
"RTN","IBCEF22",123,0)
ACCRV(X) ; Returns 1 if X is an accomodation RC, 0 if not
"RTN","IBCEF22",124,0)
 Q ((X'<100&(X'>219))!(X=224))
"RTN","IBCEF22",125,0)
 ;
"RTN","IBCEF3")
0^70^B39901861
"RTN","IBCEF3",1,0)
IBCEF3 ;ALB/TMP - FORMATTER SPECIFIC BILL FLD FUNCTIONS ;17-JUNE-96
"RTN","IBCEF3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,84,121,51,152,210,155**;21-MAR-94
"RTN","IBCEF3",3,0)
 ;
"RTN","IBCEF3",4,0)
MPG(PG,FLDS,FORM) ; Set static flds on pages after page 1
"RTN","IBCEF3",5,0)
 ;        for either HCFA 1500 or UB92
"RTN","IBCEF3",6,0)
 ;  PG = page #
"RTN","IBCEF3",7,0)
 ; FORM= 1 for UB-92, otherwise for 1500
"RTN","IBCEF3",8,0)
 ;  FLDS: array passed by reference and containing lines OR
"RTN","IBCEF3",9,0)
 ;        line/column from pg 1 to repeat on subsequent pgs
"RTN","IBCEF3",10,0)
 ;        Format: FLDS(LINE,COL)  or  FLDS(LINE) for whole line
"RTN","IBCEF3",11,0)
 ;   HCFA 1500:       LINES 1-5,7-43,57 from col 1 to 49, 58-63
"RTN","IBCEF3",12,0)
 ;   UB-92:           LINE 2-5/COL 1 (FACILITY NAME/ADDRESS)
"RTN","IBCEF3",13,0)
 ;                    LINE 3/COL 57,78 (BILL#, TYPE OF BILL)
"RTN","IBCEF3",14,0)
 ;                    LINE 7 (PATIENT NAME, ADDRESS)
"RTN","IBCEF3",15,0)
 ;                    LINE 9/COL 1 (PATIENT BIRTHDATE)
"RTN","IBCEF3",16,0)
 ;                    LINE 62-64/COL 1 (BOX 84 DATA)
"RTN","IBCEF3",17,0)
 N Z,Z0,Z1,LPG
"RTN","IBCEF3",18,0)
 S FORM=$S($G(FORM)=1:3,1:2)
"RTN","IBCEF3",19,0)
 I FORM=2 D  ; print page # on each pg, totals on last page of 1500
"RTN","IBCEF3",20,0)
 . S LPG=+$O(^TMP("IBXDATA",$J,IBXREC,""),-1)
"RTN","IBCEF3",21,0)
 . S Z="[Page "_PG_" of "_LPG_"]"
"RTN","IBCEF3",22,0)
 . I $L($G(IBXSAVE("INDENT")))'>40 S Z=$J("",(80-$L(Z))\2)_Z
"RTN","IBCEF3",23,0)
 . I $L($G(IBXSAVE("INDENT")))>40 S Z=$J("",10)_Z
"RTN","IBCEF3",24,0)
 . D SETGBL^IBCEFG(PG,6,1,Z,.IBXSIZE)
"RTN","IBCEF3",25,0)
 . I PG=2 S Z=$P(Z,"[")_"[Page 1 of "_LPG_"]" D SETGBL^IBCEFG(1,6,1,Z,.IBXSIZE)
"RTN","IBCEF3",26,0)
 . I LPG=PG D
"RTN","IBCEF3",27,0)
 .. D SETGBL^IBCEFG(PG,57,50,$J($G(IBXSAVE("TOT")),10,2),.IBXSIZE)
"RTN","IBCEF3",28,0)
 .. D SETGBL^IBCEFG(PG,57,63,$G(IBXSAVE("PAID")),.IBXSIZE)
"RTN","IBCEF3",29,0)
 .. D SETGBL^IBCEFG(PG,57,72,$G(IBXSAVE("BDUE")),.IBXSIZE)
"RTN","IBCEF3",30,0)
 .. K IBXSAVE("PTOT"),IBXSAVE("TOT"),IBXSAVE("BDUE"),IBXSAVE("PAID")
"RTN","IBCEF3",31,0)
 ;
"RTN","IBCEF3",32,0)
 S Z=0 F  S Z=$O(FLDS(Z)) Q:'Z  D
"RTN","IBCEF3",33,0)
 . I $O(FLDS(Z,""))="" D  Q  ;repeats line
"RTN","IBCEF3",34,0)
 .. S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) Q:'Z0  S Z1=$G(^(Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",35,0)
 . S Z0=0 F  S Z0=$O(FLDS(Z,Z0)) Q:'Z0  S Z1=$G(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",36,0)
 . I FORM=2,LPG'=PG D
"RTN","IBCEF3",37,0)
 .. D SETGBL^IBCEFG(PG,57,50,"",.IBXSIZE)
"RTN","IBCEF3",38,0)
 .. D SETGBL^IBCEFG(PG,57,72,"",.IBXSIZE)
"RTN","IBCEF3",39,0)
 Q
"RTN","IBCEF3",40,0)
 ;
"RTN","IBCEF3",41,0)
NONSERV(Z,Z0) ; Set variable if non-service/non-text data is present for box
"RTN","IBCEF3",42,0)
 ;  24 of HCFA 1500
"RTN","IBCEF3",43,0)
 ; Z = sequence of IBXSAVE being processed
"RTN","IBCEF3",44,0)
 ; Z0 = sequnce within IBXDATA to indicate actual line #
"RTN","IBCEF3",45,0)
 I $P(IBXSAVE("BOX24",Z),U)="" S IBXSAVE("NON-SERV",Z0)=""
"RTN","IBCEF3",46,0)
 Q
"RTN","IBCEF3",47,0)
 ;
"RTN","IBCEF3",48,0)
PG(VAL,LNCT) ;Set next pg for HCFA 1500 lines
"RTN","IBCEF3",49,0)
 ;VAL = value of fld
"RTN","IBCEF3",50,0)
 ;LNCT = line # from IBXSAVE("BOX24") array
"RTN","IBCEF3",51,0)
 N IBP,IBL
"RTN","IBCEF3",52,0)
 S IBP=LNCT\12+(LNCT#12>0),IBL=LNCT-(12*(IBP-1))-1
"RTN","IBCEF3",53,0)
 I IBL'<0 S VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA)) D SETGBL^IBCEFG(IBP,IBXLN+IBL,IBXCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",54,0)
 K IBXDATA(LNCT)
"RTN","IBCEF3",55,0)
 Q
"RTN","IBCEF3",56,0)
 ;
"RTN","IBCEF3",57,0)
MPG92(PG,OFFSET,VAL,IBLN,IBCOL,NOFORM) ; Set up pgs > 1 for UB92 overflows
"RTN","IBCEF3",58,0)
 ; PG = Page # to set (REQUIRED)
"RTN","IBCEF3",59,0)
 ; OFFSET = offset from first line this should be extracted into
"RTN","IBCEF3",60,0)
 ;          0 = first line (REQUIRED)
"RTN","IBCEF3",61,0)
 ; VAL = value to set (REQUIRED)
"RTN","IBCEF3",62,0)
 ; IBLN = line to set data at (if null, uses IBXLN)
"RTN","IBCEF3",63,0)
 ; IBCOL = column to set data at (if null, uses IBXCOL)
"RTN","IBCEF3",64,0)
 ; NOFORM = don't format, just output data as passed
"RTN","IBCEF3",65,0)
 ; Assumes formatter IBXLN,IBXCOL variables exist
"RTN","IBCEF3",66,0)
 ;
"RTN","IBCEF3",67,0)
 I $G(IBLN)="" S IBLN=IBXLN
"RTN","IBCEF3",68,0)
 I $G(IBCOL)="" S IBCOL=IBXCOL
"RTN","IBCEF3",69,0)
 S:'$G(NOFORM) VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA))
"RTN","IBCEF3",70,0)
 D SETGBL^IBCEFG(PG,IBLN+OFFSET,IBCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",71,0)
 Q
"RTN","IBCEF3",72,0)
 ;
"RTN","IBCEF3",73,0)
CKREV(CT,VAL) ; Check too many rev code lines to fit on pg
"RTN","IBCEF3",74,0)
 ; 
"RTN","IBCEF3",75,0)
 I CT'>23,$O(^TMP($J,"IBC-RC",""),-1)'>23 S IBXDATA(CT)=VAL Q  ;If up to 23 rev codes, output on first page
"RTN","IBCEF3",76,0)
 D MPG92((CT-1)\21+1,CT-1#21,VAL) ; 21 on a pg, blank line, pg ref
"RTN","IBCEF3",77,0)
 Q
"RTN","IBCEF3",78,0)
 ;
"RTN","IBCEF3",79,0)
CKPG92 ; Check to see if multiple UB92 pgs are needed then populate
"RTN","IBCEF3",80,0)
 ; static flds from page 1, add page numbers
"RTN","IBCEF3",81,0)
 Q:'$O(^TMP("IBXDATA",$J,IBXREC,1))
"RTN","IBCEF3",82,0)
 ;
"RTN","IBCEF3",83,0)
 N FLDS,LPG,IBPG,IBP,Z,Z0
"RTN","IBCEF3",84,0)
 S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1),IBP=0
"RTN","IBCEF3",85,0)
 S Z="" F  S Z=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z),-1) Q:'Z  S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z,Z0)) Q:'Z0  I $G(^(Z0))'="" S IBP=1 Q
"RTN","IBCEF3",86,0)
 I 'IBP K ^TMP("IBXDATA",$J,IBXREC,LPG) S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1) Q:LPG=1
"RTN","IBCEF3",87,0)
 ; Static flds
"RTN","IBCEF3",88,0)
 S FLDS(7)="" F Z=2,9,4,5,62,63,64 S FLDS(Z,1)=""
"RTN","IBCEF3",89,0)
 F Z=1,58,77:1:80 S FLDS(3,Z)=""
"RTN","IBCEF3",90,0)
 F IBPG=1:1:LPG D
"RTN","IBCEF3",91,0)
 . ; Add pg # to last line of rev codes if multiple pages
"RTN","IBCEF3",92,0)
 . N IB,IBP
"RTN","IBCEF3",93,0)
 . S IB=$G(^TMP("IBXDATA",$J,IBXREC,IBPG,41,6))
"RTN","IBCEF3",94,0)
 . D MPG92(IBPG,22,$J("",20)_"PAGE",19,6,1)
"RTN","IBCEF3",95,0)
 . D MPG92(IBPG,22,IBPG_" OF "_LPG,19,31,1)
"RTN","IBCEF3",96,0)
 . D:IBPG>1 MPG(IBPG,.FLDS,1)
"RTN","IBCEF3",97,0)
 ;
"RTN","IBCEF3",98,0)
 Q
"RTN","IBCEF3",99,0)
 ;
"RTN","IBCEF3",100,0)
HCPC(R) ;FORMAT HCPC fld FOR UB92 (returns formatted value)
"RTN","IBCEF3",101,0)
 ; R = flag for type of fld (1/2/3) being printed in rev code block
"RTN","IBCEF3",102,0)
 Q R  ;No longer used as of patch IB*2.0*51
"RTN","IBCEF3",103,0)
 ;
"RTN","IBCEF3",104,0)
PROS(IBIFN) ; Extract billable prosthetics for 837
"RTN","IBCEF3",105,0)
 N IBARRAY,Z,Z0,CT,PROS
"RTN","IBCEF3",106,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF3",107,0)
 I '$P(IBARRAY,U,2) S CT="" G PROSQ
"RTN","IBCEF3",108,0)
 S Z="",CT=0
"RTN","IBCEF3",109,0)
 F  S Z=$O(IBARRAY(Z)) Q:Z=""  S Z0="" F  S Z0=$O(IBARRAY(Z,Z0)) Q:Z0=""  S CT=CT+1 D
"RTN","IBCEF3",110,0)
 .S PROS=$P($$PIN^IBCSC5B(+$P($G(^IBA(362.5,+IBARRAY(Z,Z0),0)),U,3)),U,2)
"RTN","IBCEF3",111,0)
 .;date^item ptr file 661^short descr from file 441^entry # in file 362.5
"RTN","IBCEF3",112,0)
 .S IBXDATA(CT)=Z_U_Z0_U_PROS_U_+IBARRAY(Z,Z0)
"RTN","IBCEF3",113,0)
PROSQ Q CT
"RTN","IBCEF3",114,0)
 ;
"RTN","IBCEF3",115,0)
B24(IBXSV,IBIFN,IBNOSHOW) ; Code to execute to set up IBXSV("BOX24") for
"RTN","IBCEF3",116,0)
 ;   print or IBXSAVE("OUTPT") for transmit - called by output formatter
"RTN","IBCEF3",117,0)
 ; IBNOSHOW = 1 if not to show error/warning text lines
"RTN","IBCEF3",118,0)
 ; Pass IBXSV by reference
"RTN","IBCEF3",119,0)
 N IBSUB
"RTN","IBCEF3",120,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEF3",121,0)
 K IBXSV(IBSUB)
"RTN","IBCEF3",122,0)
 I '$D(IBIFN) S IBIFN=$G(IBXIEN)
"RTN","IBCEF3",123,0)
 I IBIFN D F^IBCEF("N-HCFA 1500 SERVICE"_$S(IBSUB["24":"S (PRINT",1:" LINE (EDI")_")",,,IBIFN)
"RTN","IBCEF3",124,0)
 I $S(IBSUB'["24":1,1:'$G(IBNOSHOW)) D
"RTN","IBCEF3",125,0)
 . M IBXSV(IBSUB)=IBXDATA
"RTN","IBCEF3",126,0)
 E  D
"RTN","IBCEF3",127,0)
 . N Z,CT
"RTN","IBCEF3",128,0)
 . S (Z,CT)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  I '$D(IBXDATA(Z,"ARX")) S CT=CT+1 M IBXSV(IBSUB,CT)=IBXDATA(Z)
"RTN","IBCEF3",129,0)
 Q
"RTN","IBCEF3",130,0)
 ;
"RTN","IBCEF3",131,0)
 ; esg - 11/14/03 - Moved the below functions due to space constraints
"RTN","IBCEF3",132,0)
 ;
"RTN","IBCEF3",133,0)
ALLTYP(IBIFN) Q $$ALLTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",134,0)
INSTYP(IBIFN,SEQ) Q $$INSTYP^IBCEF31(IBIFN,$G(SEQ))
"RTN","IBCEF3",135,0)
POLTYP(IBIFN,IBSEQ) Q $$POLTYP^IBCEF31(IBIFN,$G(IBSEQ))
"RTN","IBCEF3",136,0)
ALLPTYP(IBIFN) Q $$ALLPTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",137,0)
 ;
"RTN","IBCEF3",138,0)
FILL(Z) ;
"RTN","IBCEF3",139,0)
 Q
"RTN","IBCEF3",140,0)
 ;
"RTN","IBCEF3",141,0)
 ;  ***** 
"RTN","IBCEF3",142,0)
 ;  The following code performs the multi-page set up for
"RTN","IBCEF3",143,0)
 ;  printing overflow data on the UB-92
"RTN","IBCEF3",144,0)
 ;  *****
"RTN","IBCEF3",145,0)
 ;
"RTN","IBCEF3",146,0)
XPROC(DATA,CT) ; Output any UB92 procedures after 6 on new page(s)
"RTN","IBCEF3",147,0)
 ; DATA = output data from IBXSAVE("PROC",CT)
"RTN","IBCEF3",148,0)
 ; CT = array sequence # of the procedure being output
"RTN","IBCEF3",149,0)
 ; Only used for local prints
"RTN","IBCEF3",150,0)
 N OFFSET,PG,COL,PRCODE,Q
"RTN","IBCEF3",151,0)
 S Q=(CT-1)\3#2,OFFSET=$S('Q:0,1:2)
"RTN","IBCEF3",152,0)
 S PG=(CT-1)\6+1,COL=4+(CT-1#3*15)
"RTN","IBCEF3",153,0)
 D MPG92(PG,OFFSET,$P(DATA,U),58,COL),MPG92(PG,OFFSET,$P(DATA,U,2),58,COL+8)
"RTN","IBCEF3",154,0)
 Q
"RTN","IBCEF3",155,0)
 ;
"RTN","IBCEF3",156,0)
XDIAG(DATA,CT) ; Output any UB92 other diagnoses after 8 on new page(s)
"RTN","IBCEF3",157,0)
 ; DATA = output data from IBXSAVE("DX",CT)
"RTN","IBCEF3",158,0)
 ; CT = array sequence # of the diagnosis being output
"RTN","IBCEF3",159,0)
 ; Only used for local prints
"RTN","IBCEF3",160,0)
 N COL,PG
"RTN","IBCEF3",161,0)
 S PG=(CT-1)\8+1,COL=8+(CT-1#9*7)
"RTN","IBCEF3",162,0)
 S DATA=$P($$ICD9^IBACSV(+DATA),U)
"RTN","IBCEF3",163,0)
 D MPG92(PG,0,DATA,56,COL)
"RTN","IBCEF3",164,0)
 Q
"RTN","IBCEF3",165,0)
 ;
"RTN","IBCEF3",166,0)
XVAL(DATA,CT) ; Output any UB92 value codes after 12 on new page(s)
"RTN","IBCEF3",167,0)
 ; DATA = output data from IBXSAVE("VC",CT)
"RTN","IBCEF3",168,0)
 ; CT = array sequence # of the value code being output
"RTN","IBCEF3",169,0)
 ;
"RTN","IBCEF3",170,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",171,0)
 S PG=(CT-1)\12+1,COL=44+(CT-1#3*13),OFFSET=(CT-(12*(PG-1))-1)\3
"RTN","IBCEF3",172,0)
 D MPG92(PG,OFFSET,$P(DATA,U),14,COL),MPG92(PG,OFFSET,$P(DATA,U,2),14,COL+2)
"RTN","IBCEF3",173,0)
 Q
"RTN","IBCEF3",174,0)
 ;
"RTN","IBCEF3",175,0)
XCC(DATA,CT) ; Output any UB92 condition codes after 7 on new page(s)
"RTN","IBCEF3",176,0)
 ; DATA = output data from IBXSAVE("CC",CT)
"RTN","IBCEF3",177,0)
 ; CT = array sequence # of the condition code being output
"RTN","IBCEF3",178,0)
 ;
"RTN","IBCEF3",179,0)
 N COL,PG
"RTN","IBCEF3",180,0)
 S PG=(CT-1)\7+1,COL=55+(CT-1#7*3)
"RTN","IBCEF3",181,0)
 D MPG92(PG,0,DATA,9,COL)
"RTN","IBCEF3",182,0)
 Q
"RTN","IBCEF3",183,0)
 ;
"RTN","IBCEF3",184,0)
XOCC(DATA,CT,FL) ; Output any UB92 occurrence codes after 8 (2 per form
"RTN","IBCEF3",185,0)
 ;  locators 32-35) on new page(s)
"RTN","IBCEF3",186,0)
 ; DATA = data from IBXSAVE("OCC",CT) to be output
"RTN","IBCEF3",187,0)
 ; CT = array sequence # of occurrence code being output
"RTN","IBCEF3",188,0)
 ; FL = # of form locator being populated with the occ code
"RTN","IBCEF3",189,0)
 ;
"RTN","IBCEF3",190,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",191,0)
 S PG=(CT-1)\2+1,COL=4+((FL-32)*10),OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",192,0)
 D MPG92(PG,OFFSET,$P(DATA,U),11,COL),MPG92(PG,OFFSET,$P(DATA,U,2),11,COL+3)
"RTN","IBCEF3",193,0)
 Q
"RTN","IBCEF3",194,0)
XOCCS(DATA,CT) ; Output any UB92 occurrence span codes after 2 on new page(s)
"RTN","IBCEF3",195,0)
 ; DATA = data from IBXSAVE("OCCS",CT) to be output
"RTN","IBCEF3",196,0)
 ; CT = array sequence # of occurrence span code being output
"RTN","IBCEF3",197,0)
 ;
"RTN","IBCEF3",198,0)
 N PG,OFFSET
"RTN","IBCEF3",199,0)
 S PG=(CT-1)\2+1,OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",200,0)
 D MPG92(PG,OFFSET,$P(DATA,U),11,41),MPG92(PG,OFFSET,$P(DATA,U,2),11,44),MPG92(PG,OFFSET,$P(DATA,U,3),11,51)
"RTN","IBCEF3",201,0)
 Q
"RTN","IBCEF3",202,0)
 ;
"RTN","IBCEF3",203,0)
FORMAT(VAL,IBX0,IBXDA) ;
"RTN","IBCEF3",204,0)
 I IBX0'="",IBXDA S VAL=$$FORMAT^IBCEFG(VAL,$P($G(^IBA(364.6,+IBXDA,0)),U,9),$P(IBX0,U,7),IBX0)
"RTN","IBCEF3",205,0)
 Q VAL
"RTN","IBCEF3",206,0)
 ;
"RTN","IBCEF3",207,0)
OUTPDT(IBIFN,IBXSAVE,IBXDATA) ; Returns outpatient service to date
"RTN","IBCEF3",208,0)
 ;  formatted CCYYMMDD for UB92 837
"RTN","IBCEF3",209,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEF3",210,0)
 ; IBXSAVE = pass by reference for IBXSAVE("INPT") and IBXSAVE("DATE")
"RTN","IBCEF3",211,0)
 ; IBXDATA = array with formatted date or each line item - CCYYMMDD
"RTN","IBCEF3",212,0)
 N Z
"RTN","IBCEF3",213,0)
 S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE("INPT",Z),U,10):$$DT^IBCEFG1($P(IBXSAVE("INPT",Z),U,10),,"D8"),1:IBXSAVE("DATE"))
"RTN","IBCEF3",214,0)
 K IBXSAVE("DATE")
"RTN","IBCEF3",215,0)
 Q
"RTN","IBCEF3",216,0)
 ;
"RTN","IBCEF31")
0^71^B7378097
"RTN","IBCEF31",1,0)
IBCEF31 ;ALB/ESG - FORMATTER SPECIFIC BILL FLD FUNCTIONS - CONT ;14-NOV-03
"RTN","IBCEF31",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEF31",3,0)
 ;
"RTN","IBCEF31",4,0)
 Q
"RTN","IBCEF31",5,0)
 ;
"RTN","IBCEF31",6,0)
ALLTYP(IBIFN) ; returns codes to translate to ALL ins types on a bill
"RTN","IBCEF31",7,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",8,0)
 N IBX,Z
"RTN","IBCEF31",9,0)
 F Z=1:1:3 S $P(IBX,U,Z)=$$INSTYP(IBIFN,Z)
"RTN","IBCEF31",10,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF31",11,0)
 Q IBX
"RTN","IBCEF31",12,0)
 ;
"RTN","IBCEF31",13,0)
INSTYP(IBIFN,SEQ) ; Returns insurance type code for an ins on a bill
"RTN","IBCEF31",14,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",15,0)
 ; SEQ = sequence (1,2,3) of insurance wanted - prim, second, tert
"RTN","IBCEF31",16,0)
 ;       Default is current insurance co
"RTN","IBCEF31",17,0)
 ;
"RTN","IBCEF31",18,0)
 N IBA,Z
"RTN","IBCEF31",19,0)
 ;
"RTN","IBCEF31",20,0)
 I '$G(SEQ) S SEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF31",21,0)
 S Z=+$G(^DGCR(399,IBIFN,"I"_SEQ))
"RTN","IBCEF31",22,0)
 ;Codes 1:HMO;2:COMMERCIAL;3:MEDICARE;4:MEDICAID;5:GROUP POLICY;9:OTHER
"RTN","IBCEF31",23,0)
 I Z D
"RTN","IBCEF31",24,0)
 . S IBA=$P($G(^DIC(36,Z,3)),U,9)
"RTN","IBCEF31",25,0)
 . I IBA="" S IBA=5 ;Default is group policy - 5 if blank
"RTN","IBCEF31",26,0)
 ;
"RTN","IBCEF31",27,0)
 Q $G(IBA)
"RTN","IBCEF31",28,0)
 ;
"RTN","IBCEF31",29,0)
POLTYP(IBIFN,IBSEQ) ; Returns ins electronic policy type code for one
"RTN","IBCEF31",30,0)
 ;   ins policy on a bill
"RTN","IBCEF31",31,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",32,0)
 ; IBSEQ = sequence (1,2,3) of ins policy wanted - prim, second, tert
"RTN","IBCEF31",33,0)
 ;       Default is current insurance co
"RTN","IBCEF31",34,0)
 ;
"RTN","IBCEF31",35,0)
 N IBPLAN,IBPLTYP
"RTN","IBCEF31",36,0)
 ;
"RTN","IBCEF31",37,0)
 I '$G(IBSEQ) S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF31",38,0)
 S IBPLAN=$G(^IBA(355.3,+$P($G(^DGCR(399,IBIFN,"I"_IBSEQ)),U,18),0))
"RTN","IBCEF31",39,0)
 S IBPLTYP=$P(IBPLAN,U,15)
"RTN","IBCEF31",40,0)
 ;
"RTN","IBCEF31",41,0)
 ; esg - 11/14/03 - Different defaults when Medicare (WNR) is the payer
"RTN","IBCEF31",42,0)
 I IBPLTYP="",$$WNRBILL^IBEFUNC(IBIFN,IBSEQ),$$FT^IBCEF(IBIFN)=2 S IBPLTYP="MB"   ; hcfa-1500 --> Medicare Part B
"RTN","IBCEF31",43,0)
 I IBPLTYP="",$$WNRBILL^IBEFUNC(IBIFN,IBSEQ),$$FT^IBCEF(IBIFN)=3 S IBPLTYP="MA"   ; ub92 -------> Medicare Part A
"RTN","IBCEF31",44,0)
 ;
"RTN","IBCEF31",45,0)
 I IBPLTYP="" S IBPLTYP="CI" ;Default is commercial - 'CI'
"RTN","IBCEF31",46,0)
 I IBPLTYP="MX" D
"RTN","IBCEF31",47,0)
 . I $P(IBPLAN,U,14)'="","AB"[$P(IBPLAN,U,14) S IBPLTYP="M"_$P(IBPLAN,U,14) Q
"RTN","IBCEF31",48,0)
 . S IBPLTYP="CI"
"RTN","IBCEF31",49,0)
 Q $G(IBPLTYP)
"RTN","IBCEF31",50,0)
 ;
"RTN","IBCEF31",51,0)
ALLPTYP(IBIFN) ; returns insurance policy type codes for ALL ins on a bill
"RTN","IBCEF31",52,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",53,0)
 N IBX,Z S IBX=""
"RTN","IBCEF31",54,0)
 F Z=1:1:3 I $D(^DGCR(399,IBIFN,"I"_Z)) S $P(IBX,U,Z)=$$POLTYP(IBIFN,Z)
"RTN","IBCEF31",55,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF31",56,0)
 Q IBX
"RTN","IBCEF31",57,0)
 ;
"RTN","IBCEF31",58,0)
PGDX(DXCNT,IBX0,IBXDA,IBXLN,IBXCOL,IBXSIZE,IBXSAVE) ; Subroutine - Checks for Diagnosis Codes (Dx) beyond 
"RTN","IBCEF31",59,0)
 ; the first four, that relate to the current Dx position passed in DXCNT.
"RTN","IBCEF31",60,0)
 ; This subroutine stores the Diagnosis Codes in output global using display parameters (IBXLN,IBXCOL)
"RTN","IBCEF31",61,0)
 ; If DXCNT is 1, check for Dx's 5,9,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",62,0)
 ; If DXCNT is 2, check for Dx's 6,10,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",63,0)
 ; If DXCNT is 3, check for Dx's 7,11,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",64,0)
 ; If DXCNT is 4, check for Dx's 8,12,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",65,0)
 ;
"RTN","IBCEF31",66,0)
 ; Input: DXCNT= position of current Dx (from 1 to 4)
"RTN","IBCEF31",67,0)
 ;        IBX0= zero-level of file 364.7 of current Dx
"RTN","IBCEF31",68,0)
 ;        IBXDA= ien# of file 364.6 of current Dx
"RTN","IBCEF31",69,0)
 ;        IBXLN IBXCOL= line# & Column# of current Dx
"RTN","IBCEF31",70,0)
 ;        IBXSIZE= size counter
"RTN","IBCEF31",71,0)
 ;        IBXSAVE("DX")= local array with all Dx's on current bill
"RTN","IBCEF31",72,0)
 ;
"RTN","IBCEF31",73,0)
 N JUMP,IBPG,VAL
"RTN","IBCEF31",74,0)
 F JUMP=DXCNT+4:4 Q:'$D(IBXSAVE("DX",JUMP))  D  ;
"RTN","IBCEF31",75,0)
 . ;calculate page number where Dx number JUMP will print
"RTN","IBCEF31",76,0)
 . S IBPG=JUMP\4+(JUMP#4>0)
"RTN","IBCEF31",77,0)
 . S VAL=$P($G(^ICD9(+IBXSAVE("DX",JUMP),0)),U)   ; resolve Dx pointer
"RTN","IBCEF31",78,0)
 . S VAL=$$FORMAT^IBCEF3(VAL,$G(IBX0),$G(IBXDA))  ;format Dx value
"RTN","IBCEF31",79,0)
 . D SETGBL^IBCEFG(IBPG,IBXLN,IBXCOL,VAL,.IBXSIZE) ;store in output global
"RTN","IBCEF31",80,0)
 Q  ;PGDX
"RTN","IBCEF31",81,0)
 ;
"RTN","IBCEF4")
0^100^B27070656
"RTN","IBCEF4",1,0)
IBCEF4 ;ALB/TMP - MRA/EDI ACTIVATED UTILITIES ;06-FEB-96
"RTN","IBCEF4",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,155**;21-MAR-94
"RTN","IBCEF4",3,0)
 ;
"RTN","IBCEF4",4,0)
EDIACTV(IBEDIMRA) ; Returns 0 if EDI or MRA is not active, 
"RTN","IBCEF4",5,0)
 ; otherwise, returns 1
"RTN","IBCEF4",6,0)
 ; IBEDIMRA : 1= checking if EDI is active, 2= checking if MRA is active
"RTN","IBCEF4",7,0)
 N IBEDI
"RTN","IBCEF4",8,0)
 S IBEDI=$P($G(^IBE(350.9,1,8)),U,10)
"RTN","IBCEF4",9,0)
 Q $S('IBEDI:0,IBEDI=3:1,1:IBEDI=IBEDIMRA)
"RTN","IBCEF4",10,0)
 ;
"RTN","IBCEF4",11,0)
RATEOK(IBIFN) ; Returns 1 if rate type of bill IBIFN is transmittable
"RTN","IBCEF4",12,0)
 Q +$P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U,10)
"RTN","IBCEF4",13,0)
 ;
"RTN","IBCEF4",14,0)
INSOK(INS) ; Determine EDI activation status of insurance co
"RTN","IBCEF4",15,0)
 Q +$G(^DIC(36,INS,3))  ;1 = TEST, 2 = LIVE, 0 = NOT ACTIVE FOR EDI
"RTN","IBCEF4",16,0)
 ;
"RTN","IBCEF4",17,0)
BSTATX(IBIFN) ; Returns internal value of bill's latest transmission status
"RTN","IBCEF4",18,0)
 N IBDA
"RTN","IBCEF4",19,0)
 Q $P($G(^IBA(364,+$$LAST364(IBIFN),0)),U,3)
"RTN","IBCEF4",20,0)
 ;
"RTN","IBCEF4",21,0)
LAST364(IBIFN) ; Determine ien of latest transmit bill record for a bill
"RTN","IBCEF4",22,0)
 Q +$O(^IBA(364,"ABDT",IBIFN,+$O(^IBA(364,"ABDT",IBIFN,""),-1),""),-1)
"RTN","IBCEF4",23,0)
 ;
"RTN","IBCEF4",24,0)
TXMT(IBIFN,IBWHY,IBNEW) ; Determine if bill # IBIFN is 'transmittable'
"RTN","IBCEF4",25,0)
 ; IBNEW = flag is 1 if new entry - don't check for entry in file 364
"RTN","IBCEF4",26,0)
 ; Function returns:
"RTN","IBCEF4",27,0)
 ;        0 if not transmittable
"RTN","IBCEF4",28,0)
 ;        if transmittable, the entire node 3 of the insurance company
"RTN","IBCEF4",29,0)
 ;  and, if passed by reference IBWHY = reason not transmittable
"RTN","IBCEF4",30,0)
 ;                    1 if local print
"RTN","IBCEF4",31,0)
 ;                    2 if EDI/MRA not active
"RTN","IBCEF4",32,0)
 ;                    3 if rate type not transmittable
"RTN","IBCEF4",33,0)
 ;                    4 if no transmit for insurance co
"RTN","IBCEF4",34,0)
 ;                    5 if failed txmn rules
"RTN","IBCEF4",35,0)
 ;                      and IBWHY(0) = ien of rule failed
"RTN","IBCEF4",36,0)
 ;                    6 if Rx with missing/invalid NDC format
"RTN","IBCEF4",37,0)
 ;
"RTN","IBCEF4",38,0)
 N IB,IB0,IBOK,IBCOB,IBMCR,X1
"RTN","IBCEF4",39,0)
 S IBOK=1,IB=IBIFN,IBWHY=""
"RTN","IBCEF4",40,0)
 ;
"RTN","IBCEF4",41,0)
 S IBCOB=$$COBN^IBCEF(IB),IB(.07)=+$G(^DGCR(399,IB,"I"_IBCOB))
"RTN","IBCEF4",42,0)
 S IBMCR=$$MCRWNR^IBEFUNC(IB(.07))
"RTN","IBCEF4",43,0)
 ; Does bill have force local print flag set?
"RTN","IBCEF4",44,0)
 I 'IBMCR D  G:IBWHY TXMTQ  ; MCR WNR not curr ins
"RTN","IBCEF4",45,0)
 . I $S($$MRASEC(IBIFN):$P($G(^DGCR(399,IBIFN,"TX")),U,9)=1,1:$P($G(^DGCR(399,IBIFN,"TX")),U,8)=1) S IBOK=0,IBWHY=1
"RTN","IBCEF4",46,0)
 I '$G(IBNEW),'$O(^IBA(364,"B",IBIFN,0)),$P($G(^DGCR(399,IBIFN,0)),U,13)>2,'$$RETN^PRCAFN(IBIFN) S IBOK=0 G TXMTQ ; Not recognized as transmittable when it was authorized
"RTN","IBCEF4",47,0)
 I $O(^IBA(364,"B",IBIFN,0)),$$INSOK(IB(.07)),$$BSTATX(IBIFN)'="X" G TXMTQ ;Already determined to be transmittable - entry exists for bill in transmit bill file
"RTN","IBCEF4",48,0)
 S IB(.03)=$S('IBMCR:1,1:2) ; EDI(1) or MRA(2)
"RTN","IBCEF4",49,0)
 S IB(.04)=$S('$$INPAT^IBCEF(IB,1):1,1:2) ;Outpt(1) or Inpt(2)
"RTN","IBCEF4",50,0)
 S IB(.05)=$S($$FT^IBCEF(IB)=3:1,1:2) ;Inst(1) or Prof(2)
"RTN","IBCEF4",51,0)
 ; Execute unmodifiable, general edits
"RTN","IBCEF4",52,0)
 S X1=$$EDIACTV(IB(.03))
"RTN","IBCEF4",53,0)
 I 'X1 S IBWHY=2
"RTN","IBCEF4",54,0)
 I 'IBWHY S X1=$$RATEOK(IBIFN) S:'X1 IBWHY=3
"RTN","IBCEF4",55,0)
 I 'IBWHY S X1=$$INSOK(+IB(.07)) S:'X1 IBWHY=4
"RTN","IBCEF4",56,0)
 I 'IBWHY,$$ISRX^IBCEF1(IBIFN) D  ;S:'X1 IBWHY=6
"RTN","IBCEF4",57,0)
 . ; Check for Rxs and NDC # format valid (5-4-2)
"RTN","IBCEF4",58,0)
 . ;IF THIS IS A UB92 DO NOT SEND ELECTRONIC
"RTN","IBCEF4",59,0)
 . I $$FT^IBCEF(IBIFN)=3 S IBWHY=1
"RTN","IBCEF4",60,0)
 . ;
"RTN","IBCEF4",61,0)
 . Q  ;;CHECK REMOVAL SO NON NDC FORMAT NUMBERS WILL GO
"RTN","IBCEF4",62,0)
 . N Z,Z0,Z00
"RTN","IBCEF4",63,0)
 . S Z="" F  S Z=$O(^IBA(362.4,"AIFN"_IBIFN,Z)) Q:Z=""!'X1  D  Q:'X1
"RTN","IBCEF4",64,0)
 .. S Z0=0 F  S Z0=$O(^IBA(362.4,"AIFN"_IBIFN,Z,Z0)) Q:'Z0  D  Q:'X1
"RTN","IBCEF4",65,0)
 ... S Z00=$G(^IBA(362.4,Z0,0))
"RTN","IBCEF4",66,0)
 ... Q:$S($P(Z00,U,8)="":1,1:$L($P(Z00,U,8))=11)
"RTN","IBCEF4",67,0)
 ... I $P(Z00,U,9)'=4 S X1=0
"RTN","IBCEF4",68,0)
 ; Only continue if general edits are passed
"RTN","IBCEF4",69,0)
 I IBWHY S IBOK=0 G TXMTQ
"RTN","IBCEF4",70,0)
 S IBOK=$$EDIT(IBIFN,.IB,.IBWHY)
"RTN","IBCEF4",71,0)
 G:'IBOK TXMTQ
"RTN","IBCEF4",72,0)
 ;
"RTN","IBCEF4",73,0)
TXMTQ ;
"RTN","IBCEF4",74,0)
 I IBOK S IBOK=$G(^DIC(36,+IB(.07),3))
"RTN","IBCEF4",75,0)
 Q IBOK
"RTN","IBCEF4",76,0)
 ;
"RTN","IBCEF4",77,0)
MRASEC(IBIFN) ; Returns 1 if current bill is secondary to MCR WNR
"RTN","IBCEF4",78,0)
 N IBSEQ,IB,Z
"RTN","IBCEF4",79,0)
 S IB=0
"RTN","IBCEF4",80,0)
 ; Chk if MCR WNR is prev insurer with MRA on file
"RTN","IBCEF4",81,0)
 S IBSEQ=$$COBN^IBCEF(IBIFN)-1
"RTN","IBCEF4",82,0)
 S Z=$$MCRONBIL^IBEFUNC(IBIFN,IBSEQ) I +Z=1,$P(Z,U,2)=1,$$CHK^IBCEMU1(IBIFN) S IB=1
"RTN","IBCEF4",83,0)
 Q IB
"RTN","IBCEF4",84,0)
 ;
"RTN","IBCEF4",85,0)
EDIT(IBIFN,IB,IBWHY) ; Find, execute edits applying to bill to see if transmittable
"RTN","IBCEF4",86,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEF4",87,0)
 ; IB = array containing necessary data for xref search from bill
"RTN","IBCEF4",88,0)
 ;      subscripted by field # in file 364.4
"RTN","IBCEF4",89,0)
 ;
"RTN","IBCEF4",90,0)
 ;  Matrix entries:
"RTN","IBCEF4",91,0)
 ;    IB(.03): 1=EDI specific, 2=MRA specific
"RTN","IBCEF4",92,0)
 ;    IB(.04): 1=Outpatient or 2=inpatient only (currently defaults to 3)
"RTN","IBCEF4",93,0)
 ;    IB(.05): 1=Only institutional or 2=only professional
"RTN","IBCEF4",94,0)
 ;          X: Anything valid
"RTN","IBCEF4",95,0)
 ;
"RTN","IBCEF4",96,0)
 ;                 MRA-EDI    IN-OUT     INST-PROF
"RTN","IBCEF4",97,0)
 ;  Level          -------    ------     ---------
"RTN","IBCEF4",98,0)
 ;    1               X          X           X
"RTN","IBCEF4",99,0)
 ;    2               X          X        IB(.05)
"RTN","IBCEF4",100,0)
 ;    3               X       IB(.04)        X
"RTN","IBCEF4",101,0)
 ;    4               X       IB(.04)     IB(.05)
"RTN","IBCEF4",102,0)
 ;    5            IB(.03)       X           X
"RTN","IBCEF4",103,0)
 ;    6            IB(.03)       X        IB(.05) 
"RTN","IBCEF4",104,0)
 ;    7            IB(.03)    IB(.04)        X
"RTN","IBCEF4",105,0)
 ;    8            IB(.03)    IB(.04)     IB(.05)
"RTN","IBCEF4",106,0)
 ;
"RTN","IBCEF4",107,0)
 N IB0,IB1,IB2,IB3,IB4,IBDA,IBFT,IBPASS,IBSEQ,IBT,IBNOCK
"RTN","IBCEF4",108,0)
 I '$G(IB(.03)) S IBPASS=0 G EDITQ
"RTN","IBCEF4",109,0)
 S IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCEF4",110,0)
 ;
"RTN","IBCEF4",111,0)
 S IBPASS=1
"RTN","IBCEF4",112,0)
 F IBSEQ=1:1:8 D  Q:'IBPASS  ; Loop thru levels in matrix
"RTN","IBCEF4",113,0)
 . F IB1=1:1:3 Q:'IBPASS  F IB2=1:1:3 Q:'IBPASS  F IB3=1:1:3 Q:'IBPASS  D
"RTN","IBCEF4",114,0)
 .. S IB4=0 F  S IB4=$O(^IBE(364.4,"AD",IB1,IB2,IB3,IB4)) Q:'IB4  I $O(^(IB4,0)) D  Q:'IBPASS
"RTN","IBCEF4",115,0)
 ... S IBDA=0
"RTN","IBCEF4",116,0)
 ... F   S IBDA=$O(^IBE(364.4,"AD",IB1,IB2,IB3,IB4,IBDA)) Q:'IBDA  S IB0=$G(^IBE(364.4,IBDA,0)) I IB0'="",'$D(IBNOCK(IBDA)) D  Q:'IBPASS
"RTN","IBCEF4",117,0)
 .... I $P(IB0,U,2)>DT S IBNOCK(IBDA)="" Q  ; Not activated yet
"RTN","IBCEF4",118,0)
 .... I $P(IB0,U,6),$P(IB0,U,6)'>DT  S IBNOCK(IBDA)="" Q  ; Inactive
"RTN","IBCEF4",119,0)
 .... I $P(IB0,U,11),IB3'=3,$S(IBFT=3:IB3'=1,IBFT=2:IB3'=2,1:0) S IBNOCK(IBDA)="" Q  ; Form type not included - not used for form type rule (0)
"RTN","IBCEF4",120,0)
 .... I IB4=1,'$D(^IBE(364.4,IBDA,3,"B",+IB(.07))) S IBNOCK(IBDA)="" Q  ; Ins not included for rule
"RTN","IBCEF4",121,0)
 .... I IB4=2,$D(^IBE(364.4,IBDA,2,"B",+IB(.07))) S IBNOCK(IBDA)="" Q  ; Ins is excluded from rule
"RTN","IBCEF4",122,0)
 .... S IBT=$G(^IBE(364.4,IBDA,1))
"RTN","IBCEF4",123,0)
 .... ; Code can assume IBIFN, IBDA and IB(.03 thru .05 and .07) exist
"RTN","IBCEF4",124,0)
 .... I IBT'="" X IBT I '$T S IBPASS=0,IBWHY(0)=IBDA,IBWHY=5
"RTN","IBCEF4",125,0)
EDITQ Q IBPASS
"RTN","IBCEF4",126,0)
 ;
"RTN","IBCEF4",127,0)
STATUS(IBIFN) ; Function returns whether or not bill currently has a status
"RTN","IBCEF4",128,0)
 ;  message or EOB message not yet fully reviewed -
"RTN","IBCEF4",129,0)
 ; (only for transmittable bills)
"RTN","IBCEF4",130,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEF4",131,0)
 ; Returns:
"RTN","IBCEF4",132,0)
 ; 0 = None found
"RTN","IBCEF4",133,0)
 ; If found, returns a pieced string as follows:
"RTN","IBCEF4",134,0)
 ;
"RTN","IBCEF4",135,0)
 ;   [1] ien of transmit bill entry (file 364) associated with an
"RTN","IBCEF4",136,0)
 ;       entry in file 361 with an unreviewed status message
"RTN","IBCEF4",137,0)
 ;   [2] ien of transmit bill entry (file 364) associated with an
"RTN","IBCEF4",138,0)
 ;       entry in file 361.1 with an unreviewed EOB
"RTN","IBCEF4",139,0)
 ;
"RTN","IBCEF4",140,0)
 N IB,Z,Z0
"RTN","IBCEF4",141,0)
 S IB=""
"RTN","IBCEF4",142,0)
 S Z="" F  S Z=$O(^IBM(361,"B",IBIFN,Z),-1) Q:'Z  I $P($G(^IBM(361,Z,0)),U,9)<2,$P(^(0),U,11) S $P(IB,U)=$P(^(0),U,11) Q
"RTN","IBCEF4",143,0)
 ;
"RTN","IBCEF4",144,0)
 S Z="" F  S Z=$O(^IBM(361.1,"B",IBIFN,Z),-1) Q:'Z  I $P($G(^IBM(361.1,Z,0)),U,16)<2,$P(^(0),U,19) S $P(IB,U,2)=$P(^(0),U,19) Q
"RTN","IBCEF4",145,0)
 ;
"RTN","IBCEF4",146,0)
 Q IB
"RTN","IBCEF4",147,0)
 ;
"RTN","IBCEF4",148,0)
TEST(IBIFN) ; Returns 1 if bill IBIFN is a transmission test bill, 0 if not
"RTN","IBCEF4",149,0)
 Q +$P($G(^IBA(364,+$$LAST364(IBIFN),0)),U,7)
"RTN","IBCEF4",150,0)
 ;
"RTN","IBCEF71")
0^105^B61572600
"RTN","IBCEF71",1,0)
IBCEF71 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF71",2,0)
 ;;2.0;INTEGRATED BILLING;**232,155**;21-MAR-94
"RTN","IBCEF71",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF71",4,0)
 ;
"RTN","IBCEF71",5,0)
 ;---------
"RTN","IBCEF71",6,0)
 ;OTHPAYC - from FORMAT code for OP1,OP2 ...
"RTN","IBCEF71",7,0)
 ;Input:
"RTN","IBCEF71",8,0)
 ;IBXIEN - ien #399
"RTN","IBCEF71",9,0)
 ;IBSAVE - "in" array (i.e. IBXSAVE)
"RTN","IBCEF71",10,0)
 ;IBDATA - "out" array (i.e. IBXDATA)
"RTN","IBCEF71",11,0)
 ;IBFUNC - FUNCTION from #399 (1-refering,2-operating,etc)
"RTN","IBCEF71",12,0)
 ;IBVAL - output value
"RTN","IBCEF71",13,0)
 ;Output:
"RTN","IBCEF71",14,0)
 ; IBDATA with formatted output
"RTN","IBCEF71",15,0)
OTHPAYC(IBXIEN,IBSAVE,IBDATA,IBFUNC,IBVAL) ;
"RTN","IBCEF71",16,0)
 N IB1,IB2,IBINS,IBFL
"RTN","IBCEF71",17,0)
 S IBFL=$S(IBFUNC=3!(IBFUNC=4):1,1:0)
"RTN","IBCEF71",18,0)
 F IB1=1,2 D
"RTN","IBCEF71",19,0)
 . Q:'$$ISINSUR($G(IBSAVE("PROVINF",IBXIEN,"O",IB1)),IBXIEN)  ;don't create anything if no such insurance
"RTN","IBCEF71",20,0)
 . I IBFL S IBFUNC=$S($O(IBSAVE("PROVINF",IBXIEN,"O",IB1,3,0)):3,1:4)
"RTN","IBCEF71",21,0)
 . S:$O(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,0)) IBDATA(IB1)=IBVAL
"RTN","IBCEF71",22,0)
 Q
"RTN","IBCEF71",23,0)
 ;----
"RTN","IBCEF71",24,0)
 ;OTHPAYV - called from FORMAT code for OP1,OP2 ...
"RTN","IBCEF71",25,0)
 ;Input:
"RTN","IBCEF71",26,0)
 ;IBXIEN - ien #399
"RTN","IBCEF71",27,0)
 ;IBSAVE - "in" array (i.e. IBXSAVE)
"RTN","IBCEF71",28,0)
 ;IBDATA - "out" array (i.e. IBXDATA)
"RTN","IBCEF71",29,0)
 ;IBFUNC - FUNCTION from #399 (1-refering, 2-operating, etc)
"RTN","IBCEF71",30,0)
 ;IBSEQN - seq # of ID/QUAL
"RTN","IBCEF71",31,0)
 ;IBFLDTYP
"RTN","IBCEF71",32,0)
 ; "I" - ID  "Q" - ID QUAL
"RTN","IBCEF71",33,0)
 ;Output:
"RTN","IBCEF71",34,0)
 ; IBDATA with formatted output
"RTN","IBCEF71",35,0)
OTHPAYV(IBXIEN,IBSAVE,IBDATA,IBFUNC,IBFLDTYP,IBSEQN) ;
"RTN","IBCEF71",36,0)
 N IB1,IB2,IBPIECE,IBINS,IBFL
"RTN","IBCEF71",37,0)
 S IBFL=$S(IBFUNC=3!(IBFUNC=4):1,1:0)
"RTN","IBCEF71",38,0)
 S IBPIECE=$S(IBFLDTYP="I":4,IBFLDTYP="Q":3,1:3)
"RTN","IBCEF71",39,0)
 F IB1=1,2 D
"RTN","IBCEF71",40,0)
 . Q:'$$ISINSUR($G(IBSAVE("PROVINF",IBXIEN,"O",IB1)),IBXIEN)  ;don't create anything if there is no such insurance
"RTN","IBCEF71",41,0)
 . I IBFL S IBFUNC=$S($O(IBSAVE("PROVINF",IBXIEN,"O",IB1,3,0)):3,1:4),IBFL=0
"RTN","IBCEF71",42,0)
 . S IBDATA(IB1)=$P($G(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,IBSEQN)),"^",IBPIECE)
"RTN","IBCEF71",43,0)
 Q
"RTN","IBCEF71",44,0)
 ;
"RTN","IBCEF71",45,0)
 ;chk for ins
"RTN","IBCEF71",46,0)
 ;Input:
"RTN","IBCEF71",47,0)
 ; IBINS = "P","S","T"
"RTN","IBCEF71",48,0)
 ; IBXIEN - ien file #399
"RTN","IBCEF71",49,0)
 ;Output:
"RTN","IBCEF71",50,0)
 ; returns 1-exists , 0-doesn't
"RTN","IBCEF71",51,0)
ISINSUR(IBINS,IBXIEN) ;
"RTN","IBCEF71",52,0)
 N IBINSNOD
"RTN","IBCEF71",53,0)
 S IBINSNOD=$S(IBINS="P":"I1",IBINS="S":"I2",IBINS="T":"I3",1:"")
"RTN","IBCEF71",54,0)
 I IBINSNOD="" Q 0
"RTN","IBCEF71",55,0)
 Q $D(^DGCR(399,IBXIEN,IBINSNOD))
"RTN","IBCEF71",56,0)
 ;
"RTN","IBCEF71",57,0)
 ;---PRACT----
"RTN","IBCEF71",58,0)
 ;Get list of all 355.9 or 355.93 records for prov
"RTN","IBCEF71",59,0)
 ;Input: 
"RTN","IBCEF71",60,0)
 ;IB399INS - ins co for bill to match PRACTIONER from 355.9
"RTN","IBCEF71",61,0)
 ;IB399FRM - form type (0=unknwn/both,1=UB92,2=HCFA 1500) to 
"RTN","IBCEF71",62,0)
 ;   match PRACTIONER from 355.9
"RTN","IBCEF71",63,0)
 ;IB399CAR - BILL CARE (0=unknwn or both inp/outp,1=inpatient,
"RTN","IBCEF71",64,0)
 ;   2=outpatient/3=Rx) to match PROV from 355.9
"RTN","IBCEF71",65,0)
 ;    OR   - DIVISION PTR to file 40.8 for entries in file 355.92
"RTN","IBCEF71",66,0)
 ;IBPROV - VARIABLE PTR VA prov
"RTN","IBCEF71",67,0)
 ;IBARR - array by reference for result
"RTN","IBCEF71",68,0)
 ;IBPROVTP- function (2-operating, 3-RENDERING,etc 0-facility)
"RTN","IBCEF71",69,0)
 ;IBINSTP - "C" -current ins , "O"-other
"RTN","IBCEF71",70,0)
 ;IBFILE - 355.92 for facility ids or 355.9 (default) for provider ids
"RTN","IBCEF71",71,0)
 ;IBINS - 1 if to include ids for the ins co for all provs
"RTN","IBCEF71",72,0)
 ;Ouput:
"RTN","IBCEF71",73,0)
 ;IBARR - array by ref for result
"RTN","IBCEF71",74,0)
 ; prov var ptr^ins ptr^X12 id cd^ID^form typ^care typ or division ptr^st ptr^id rec ptr^id type ptr
"RTN","IBCEF71",75,0)
PRACT(IB399INS,IB399FRM,IB399CAR,IBPROV,IBARR,IBPROVTP,IBINSTP,IBFILE,IBINS) ;
"RTN","IBCEF71",76,0)
 N IB1,IB2,IBDAT,IBF,IBFX,IB3559,IBINSCO,IBFRMTYP,IBIDTYP,IBID,IBIDT,IBDIV,IBQ,IBS1,IBS2,IBARRX,Z,Z1,Z2,IBCARE
"RTN","IBCEF71",77,0)
 I $G(IBFILE)="" S IBFILE=355.9
"RTN","IBCEF71",78,0)
 S IBINS=$G(IBINS)
"RTN","IBCEF71",79,0)
 S (IBARR,IB3559,IB1)=0
"RTN","IBCEF71",80,0)
 F IBF="",1 Q:IBF=1&$S(IBFILE'=355.9:1,1:'IBINS)  S IBFX=IBFILE_IBF F IB2=1:1 S IB3559=$O(^IBA(IBFX,"B",$S(IBFILE=355.9&(IBF=""):IBPROV,1:IB399INS),IB3559)) Q:IB3559=""  D
"RTN","IBCEF71",81,0)
 . S IBINSCO=$P($G(^IBA(IBFX,IB3559,0)),"^",$S(IBFILE=355.9&(IBF=""):2,1:1)) ;ins co. ptr
"RTN","IBCEF71",82,0)
 . I IBINSCO'="" I IBINSCO'=IB399INS Q  ;exclude if different ins
"RTN","IBCEF71",83,0)
 . S:IBINSCO="" IBINSCO="NONE" ;NONE will be included in the array
"RTN","IBCEF71",84,0)
 . S IBFRMTYP=+$P($G(^IBA(IBFX,IB3559,0)),"^",4) ;form type (0=both,1=UB92,2=HCFA 1500)
"RTN","IBCEF71",85,0)
 . I '(IBFRMTYP=0!(IB399FRM=0)) Q:IBFRMTYP'=IB399FRM  ;exclude if not "both" and different
"RTN","IBCEF71",86,0)
 . S IBCARE=+$P($G(^IBA(IBFX,IB3559,0)),"^",5) ;0=both(inp and outp),1=inp,2=outp,3=prescr  -- OR -- division ptr
"RTN","IBCEF71",87,0)
 . I $S(IBFILE=355.92:0,1:IBCARE=3) I IB399CAR'=3 Q  ; Id is only for Rx
"RTN","IBCEF71",88,0)
 . I $S(IBFILE=355.92:0,1:IBCARE=1!(IBCARE=2)) I IB399CAR=1!(IB399CAR=2) Q:IBCARE'=IB399CAR  ;both is OK
"RTN","IBCEF71",89,0)
 . I IBFILE=355.92,IBCARE Q:IB399CAR'=IBCARE  ; Division doesn't match
"RTN","IBCEF71",90,0)
 . S IBIDTYP=+$P($G(^IBA(IBFX,IB3559,0)),"^",6) ;prov ID type
"RTN","IBCEF71",91,0)
 . I IBFILE=355.9,IBIDTYP=$$TAXID^IBCEP8(),$S(IBPROV["VA(200":1,1:$P($G(^IBA(355.93,+IBPROV,0)),U,2)=2) Q  ; Don't extract tax id # id for indiv prov
"RTN","IBCEF71",92,0)
 . S IBIDT=IBIDTYP
"RTN","IBCEF71",93,0)
 . S IBIDTYP=$P($G(^IBE(355.97,IBIDTYP,0)),"^",3)
"RTN","IBCEF71",94,0)
 . Q:$P($G(^IBE(355.97,+IBIDT,1)),U,9)
"RTN","IBCEF71",95,0)
 . Q:IBFILE=355.9&(IBIDTYP="X4")  ;exclude CLIA #
"RTN","IBCEF71",96,0)
 . S IBID=$P($G(^IBA(IBFX,IB3559,0)),"^",7) ;prov ID value
"RTN","IBCEF71",97,0)
 . I $G(IBPROVTP)'="",$G(IBINSTP)'="",IBPROVTP'=0 I '$$CHCKSEC^IBCEF73(IB399FRM,IBPROVTP,IBINSTP,IBIDTYP) Q  ; No qualifier chk for fac
"RTN","IBCEF71",98,0)
 . I IBID'="" S IBDAT=IBPROV_"^"_IBINSCO_"^"_IBIDTYP_"^"_IBID_"^"_IBFRMTYP_"^"_IBCARE_"^"_"^"_IB3559_U_IBIDT,IBS2=$S(IBFX'=355.91:"",1:"INS DEF^")_IB3559
"RTN","IBCEF71",99,0)
 . I IBFILE'=355.92,IBID'="",IB399CAR=3 S IBQ=0 D  Q:IBQ
"RTN","IBCEF71",100,0)
 .. I $G(IBARRX(IBIDT))!(IBCARE=1) S IBQ=1 Q
"RTN","IBCEF71",101,0)
 .. I IBCARE=3&(IB399CAR=3) S IBARRX(IBIDT)=1 Q  ; Rx match
"RTN","IBCEF71",102,0)
 .. I IBCARE=0!(IBCARE=2) S IBARRX(IBIDT,IBINSCO,IBS2)=IBDAT,IBQ=1 Q
"RTN","IBCEF71",103,0)
 . I IBID'="" S IBARR(IBINSCO,IBS2)=IBDAT
"RTN","IBCEF71",104,0)
 ;
"RTN","IBCEF71",105,0)
 I IB399CAR=3 S Z=0 F  S Z=$O(IBARRX(Z)) Q:'Z  I '$G(IBARRX(Z)) D
"RTN","IBCEF71",106,0)
 . S Z1="" F  S Z1=$O(IBARRX(Z,Z1)) Q:Z1=""  S Z2="" F  S Z2=$O(IBARRX(Z,Z1,Z2)) Q:Z2=""  S IBARR(Z1,Z2)=IBARRX(Z,Z1,Z2)
"RTN","IBCEF71",107,0)
 ;
"RTN","IBCEF71",108,0)
 I IBPROV["VA(200," D  ; Get lic #s from file 2 for VA providers
"RTN","IBCEF71",109,0)
 . N Z,IBLIC
"RTN","IBCEF71",110,0)
 . S IBLIC=+IBPROV,IBLIC=$$GETLIC^IBCEP5D(.IBLIC)
"RTN","IBCEF71",111,0)
 . S IBIDTYP=$P($G(^IBE(355.97,+$$STLIC^IBCEP8(),0)),U,3)
"RTN","IBCEF71",112,0)
 . S Z=0 F  S Z=$O(IBLIC(Z)) Q:'Z  S:$$CHCKSEC^IBCEF73(IB399FRM,IBPROVTP,IBINSTP,IBIDTYP) IBARR("NONE","LIC"_Z_"^"_IBPROV)=IBPROV_U_"NONE"_U_IBIDTYP_U_IBLIC(Z)_U_"0"_U_"0"_U_Z_U_U_+$$STLIC^IBCEP8()
"RTN","IBCEF71",113,0)
 I IBPROV["IBA(355.93" D
"RTN","IBCEF71",114,0)
 . Q:$P($G(^IBA(355.93,+IBPROV,0)),U,12)=""
"RTN","IBCEF71",115,0)
 . S IBIDTYP=$P($G(^IBE(355.97,+$$STLIC^IBCEP8(),0)),U,3)
"RTN","IBCEF71",116,0)
 . S:$$CHCKSEC^IBCEF73(IB399FRM,IBPROVTP,IBINSTP,IBIDTYP) IBARR("NONE","LIC"_Z_"^"_IBPROV)=IBPROV_U_"NONE"_U_IBIDTYP_U_$P(^IBA(355.93,+IBPROV,0),U,12)_U_"0"_U_"0"_U_$P($G(^IBA(355.93,+IBPROV,0)),U,7)_U_U_+IBPROV
"RTN","IBCEF71",117,0)
 Q
"RTN","IBCEF71",118,0)
 ;
"RTN","IBCEF71",119,0)
ALLPRFAC(IBXIEN,IBXSAVE) ; Return all non-VA/outside facility prov ids
"RTN","IBCEF71",120,0)
 ; and all VA alternate prov ids
"RTN","IBCEF71",121,0)
 ; IBXIEN = ien file 399
"RTN","IBCEF71",122,0)
 ; IBXSAVE = subscripted array returned
"RTN","IBCEF71",123,0)
 N IBPROV,IBFRMTYP,IBCARE,IBRETARR,IBRET1,IBCOBN,Z,Z0,Z1,ZZ
"RTN","IBCEF71",124,0)
 K IBXSAVE("PROVINF_FAC",IBXIEN) ; Always rebuild this
"RTN","IBCEF71",125,0)
 S IBCOBN=+$$COBN^IBCEF(IBXIEN)
"RTN","IBCEF71",126,0)
 S IBFRMTYP=$$FT^IBCEF(IBXIEN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF71",127,0)
 S IBPROV=$P($G(^DGCR(399,IBXIEN,"U2")),U,10)_";IBA(355.93,"
"RTN","IBCEF71",128,0)
 I 'IBPROV S IBCARE=$P($G(^DGCR(399,IBXIEN,0)),U,22)
"RTN","IBCEF71",129,0)
 I IBPROV D
"RTN","IBCEF71",130,0)
 . S IBCARE=$S($$ISRX^IBCEF1(IBXIEN):3,1:0) ;if Rx refill bill
"RTN","IBCEF71",131,0)
 . S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBXIEN,1) S:'IBCARE IBCARE=2 ;1-inp, 2-out
"RTN","IBCEF71",132,0)
 F Z=1:1:3 K IBRETARR I $G(^DGCR(399,IBXIEN,"I"_Z)) D
"RTN","IBCEF71",133,0)
 . D PRACT(+^DGCR(399,IBXIEN,"I"_Z),IBFRMTYP,IBCARE,IBPROV,.IBRETARR,0,$S(Z=IBCOBN:"C",1:"O"),$S('IBPROV:355.92,1:355.9))
"RTN","IBCEF71",134,0)
 . K IBRET1
"RTN","IBCEF71",135,0)
 . S Z0="" F  S Z0=$O(IBRETARR(Z0)) Q:Z0=""  S Z1="" F  S Z1=$O(IBRETARR(Z0,Z1)) Q:Z1=""  D
"RTN","IBCEF71",136,0)
 .. ; Sort by div/id type
"RTN","IBCEF71",137,0)
 .. S IBRET1($S(IBPROV:0,1:+$P(IBRETARR(Z0,Z1),U,6)),+$P(IBRETARR(Z0,Z1),U,9))=IBRETARR(Z0,Z1)
"RTN","IBCEF71",138,0)
 . S Z0=$O(IBRET1(""),-1) Q:Z0=""  S Z1="" S Z1=$O(IBRET1(Z0,Z1)) Q:Z1=""  D
"RTN","IBCEF71",139,0)
 .. I Z=IBCOBN S IBXSAVE("PROVINF_FAC",IBXIEN,"C",1,0,$O(IBXSAVE("PROVINF_FAC",IBXIEN,"C",1,0," "),-1)+1)=IBRET1(Z0,Z1) Q
"RTN","IBCEF71",140,0)
 .. S ZZ=$S(Z=1:1,Z=2:(IBCOBN=3)+1,1:2)
"RTN","IBCEF71",141,0)
 .. S IBXSAVE("PROVINF_FAC",IBXIEN,"O",ZZ,0,$O(IBXSAVE("PROVINF_FAC",IBXIEN,"O",ZZ,0," "),-1)+1)=IBRET1(Z0,Z1),IBXSAVE("PROVINF_FAC",IBXIEN,"O",ZZ)=$E("PST",Z)
"RTN","IBCEF71",142,0)
 S IBXSAVE("PROVINF_FAC",IBXIEN)=IBXIEN,IBXSAVE("PROVINF_FAC",IBXIEN,"C",1)=$E("PST",IBCOBN)
"RTN","IBCEF71",143,0)
 Q
"RTN","IBCEF71",144,0)
 ;
"RTN","IBCEF71",145,0)
OTHID(IBXSAVE,IBXDATA,IBXIEN,PRIDSEQ,PRTYP,IBQ,IBFAC) ; From data in IBXSAVE,
"RTN","IBCEF71",146,0)
 ;  determine id or qualifier to output in the 837 records OP*
"RTN","IBCEF71",147,0)
 ; Returns IBXDATA array IBXDATA(n)=data
"RTN","IBCEF71",148,0)
 ; IBXIEN = ien of the bill-file 399
"RTN","IBCEF71",149,0)
 ; PRIDSEQ = sequence of the payer id needed
"RTN","IBCEF71",150,0)
 ; PRTYP = provider type to check for data
"RTN","IBCEF71",151,0)
 ; IBQ = 1 if qualifier needed, 0/null if id needed
"RTN","IBCEF71",152,0)
 ; IBFAC = 1 if facility id, 0 for individual provider id
"RTN","IBCEF71",153,0)
 ; 
"RTN","IBCEF71",154,0)
 N Z,Z0,Z1
"RTN","IBCEF71",155,0)
 S Z0="PROVINF"_$S('$G(IBFAC):"",1:"_FAC"),Z1=$S($G(IBQ):3,1:4)
"RTN","IBCEF71",156,0)
 S Z=0 F  S Z=$O(IBXSAVE("OSQ",Z)) Q:'Z  D
"RTN","IBCEF71",157,0)
 . I $P($G(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),+$G(PRIDSEQ))),U,4)'="" S IBXDATA(IBXSAVE("OSQ",Z))=$P(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),+$G(PRIDSEQ)),U,Z1)
"RTN","IBCEF71",158,0)
 Q
"RTN","IBCEF71",159,0)
 ;
"RTN","IBCEF71",160,0)
SETSEQ(IBXIEN,IBXSAVE,IBXDATA,PRTYP,IBFAC,IBOP) ; Sets up IBXSAVE("OSQ")
"RTN","IBCEF71",161,0)
 ;  array for other id seq in 837 records OP*
"RTN","IBCEF71",162,0)
 ; Returns IBXDATA(n)=cob seq indicator for ids
"RTN","IBCEF71",163,0)
 ; IBXIEN = ien of bill-399
"RTN","IBCEF71",164,0)
 ; PRTYP = the provider type to check for data for indiv provider
"RTN","IBCEF71",165,0)
 ; IBFAC = 1 if facility id, 0 for individual provider id
"RTN","IBCEF71",166,0)
 ; IBOP = segement # in OP being output
"RTN","IBCEF71",167,0)
 N C,Z,Z0,Z1,OK
"RTN","IBCEF71",168,0)
 S C=0,Z0="PROVINF"_$S('$G(IBFAC):"",1:"_FAC")
"RTN","IBCEF71",169,0)
 S:$G(IBFAC) PRTYP=0
"RTN","IBCEF71",170,0)
 S Z=0 F  S Z=$O(IBXSAVE(Z0,IBXIEN,"O",Z)) Q:'Z  S OK=0 D
"RTN","IBCEF71",171,0)
 . N Z1 F Z1=1:1 Q:'$D(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),Z1))  I $P(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),Z1),U,4)'="""" S OK=1 Q
"RTN","IBCEF71",172,0)
 . I OK S C=C+1,IBXSAVE("OSQ",Z)=C
"RTN","IBCEF71",173,0)
 S Z=0 F  S Z=$O(IBXSAVE("OSQ",Z)) Q:'Z  S IBXDATA(IBXSAVE("OSQ",Z))=$G(IBXSAVE(Z0,IBXIEN,"O",Z)) D:IBXSAVE("OSQ",Z)>1 ID^IBCEF2(IBXSAVE("OSQ",Z),"OP"_$G(IBOP)_" ")
"RTN","IBCEF71",174,0)
 Q
"RTN","IBCEF71",175,0)
 ;
"RTN","IBCEF71",176,0)
PSPRV(IBIFN) ;
"RTN","IBCEF71",177,0)
 Q $$PSPRV^IBCEF7(IBIFN) ; Moved
"RTN","IBCEF71",178,0)
 ;
"RTN","IBCEF74")
0^106^B66348235
"RTN","IBCEF74",1,0)
IBCEF74 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF74",2,0)
 ;;2.0;INTEGRATED BILLING;**232,280,155**;21-MAR-94
"RTN","IBCEF74",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF74",4,0)
 ;
"RTN","IBCEF74",5,0)
SORT(IBPRNUM,IBPRTYP,IB399,IBSRC,IBDST,IBN,IBEXC,IBSEQ) ;
"RTN","IBCEF74",6,0)
 ; Only output 1 of each provider id type
"RTN","IBCEF74",7,0)
 N IBXIEN,IBXDATA,IBNET,IBTRI,IB1,IB2,IBID,Z,IBZ,IBZ1,IBSVP
"RTN","IBCEF74",8,0)
 S (IB1,IB2,IBZ,IBZ1,IBTRI)=""
"RTN","IBCEF74",9,0)
 D F^IBCEF("N-ALL ATT/RENDERING PROV SSN","IBZ",,IB399)
"RTN","IBCEF74",10,0)
 S IBZ1=$$ALLPTYP^IBCEF3(IB399)
"RTN","IBCEF74",11,0)
 F Z=1:1:3 S $P(IBZ1,U,Z)=$S($P(IBZ1,U,Z)="CH":1,1:"") S:$P(IBZ1,U,Z) IBTRI=1
"RTN","IBCEF74",12,0)
 S IBNET=0 F  S IBNET=$O(^IBE(355.97,IBNET)) S IBNET=+IBNET Q:'IBNET  I $P($G(^IBE(355.97,IBNET,1)),U,6)=1 Q  ; network id type
"RTN","IBCEF74",13,0)
 I $G(IBN) D
"RTN","IBCEF74",14,0)
 . S Z=0 F  S Z=$O(IBDST(IBPRNUM,IBPRTYP,Z)) Q:'Z  S IBID(+$P(IBDST(IBPRNUM,IBPRTYP,Z),U,9))=""
"RTN","IBCEF74",15,0)
 F  S IB1=$O(IBSRC(IB1)) Q:IB1=""  D
"RTN","IBCEF74",16,0)
 . N OK,IBSTLIC
"RTN","IBCEF74",17,0)
 . S IBSTLIC=""
"RTN","IBCEF74",18,0)
 . F  S IB2=$O(IBSRC(IB1,IB2)) Q:IB2=""  D
"RTN","IBCEF74",19,0)
 . . S IBSVP=$P(IBSRC(IB1,IB2),U)
"RTN","IBCEF74",20,0)
 . . ; Ck state of care/license match if st license #
"RTN","IBCEF74",21,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="0B" S OK=1 D  Q:'OK
"RTN","IBCEF74",22,0)
 . . . I +$$CAREST^IBCEP2A(IB399)'=$P(IBSRC(IB1,IB2),U,7) S IBSTLIC=1 Q
"RTN","IBCEF74",23,0)
 . . . I $G(IBSTLIC(0))'="" S OK=0 Q
"RTN","IBCEF74",24,0)
 . . . S IBSTLIC(0)=$G(IBSRC(IB1,IB2)),OK=0
"RTN","IBCEF74",25,0)
 . . ; If ID is overridden in claim, don't output any others of this type
"RTN","IBCEF74",26,0)
 . . I $G(IBEXC),$P($G(IBSRC(IB1,IB2)),U,8)=IBEXC Q
"RTN","IBCEF74",27,0)
 . . ; EXCLUDE SSN FROM SECONDARY IDS
"RTN","IBCEF74",28,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="SY" Q
"RTN","IBCEF74",29,0)
 . . ; Only 1 of each provider id type allowed
"RTN","IBCEF74",30,0)
 . . Q:$D(IBID(+$P($G(IBSRC(IB1,IB2)),U,9)))
"RTN","IBCEF74",31,0)
 . . S IBN=IBN+1,IBID(+$P($G(IBSRC(IB1,IB2)),U,9))=""
"RTN","IBCEF74",32,0)
 . . S IBDST(IBPRNUM,IBPRTYP,IBN)=$G(IBSRC(IB1,IB2))
"RTN","IBCEF74",33,0)
 . I '$G(IBSTLIC),$G(IBSTLIC(0))'="" S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=IBSTLIC(0)
"RTN","IBCEF74",34,0)
 I $$FT^IBCEF(IBIFN)=2,$G(IBID(IBNET))="",IBTRI,$P(IBZ1,U,IBSEQ) D
"RTN","IBCEF74",35,0)
 . Q:$P(IBZ,U,IBPRTYP)=""
"RTN","IBCEF74",36,0)
 . ; to get here, no network id exists and this is a TRICARE ins co.
"RTN","IBCEF74",37,0)
 . N Z
"RTN","IBCEF74",38,0)
 . S Z=+$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0)),Z=$P($G(^DGCR(399,IB399,"PRV",Z,0)),U,2)
"RTN","IBCEF74",39,0)
 . S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=Z_U_+$$POLICY^IBCEF(IB399,1,IBSEQ)_U_$P($G(^IBE(355.97,IBNET,0)),U,3)_U_$P(IBZ,U,IBPRTYP)_U_"0^0^^^"_IBNET
"RTN","IBCEF74",40,0)
 Q
"RTN","IBCEF74",41,0)
 ;
"RTN","IBCEF74",42,0)
 ;-- PROVINF --
"RTN","IBCEF74",43,0)
 ;Create an array with provider information
"RTN","IBCEF74",44,0)
 ;Input:
"RTN","IBCEF74",45,0)
 ; IB399 - ien of #399
"RTN","IBCEF74",46,0)
 ; IBPRNUM - 1=primary ins, 2= sec, 3 -tert
"RTN","IBCEF74",47,0)
 ; IBRES - for results
"RTN","IBCEF74",48,0)
 ; IBSORT - to sort OTHER INSURANCE data 
"RTN","IBCEF74",49,0)
 ;  if PROVINF is called for "C" mode of PROVIDER subroutine then 
"RTN","IBCEF74",50,0)
 ;    the IBSORT can be any (say 1)
"RTN","IBCEF74",51,0)
 ;  if PROVINF is called for "O" mode then it can be more then set
"RTN","IBCEF74",52,0)
 ;    of data then we need to sort array to use it in loop 
"RTN","IBCEF74",53,0)
 ;    (like IBXDATA(1) and IBXDATA(2))
"RTN","IBCEF74",54,0)
 ;    thus for mode "O" it should be 1 or 2 (see PROVIDER for example)
"RTN","IBCEF74",55,0)
 ;IBINSTP -  "C" -current insurance , "O"-other
"RTN","IBCEF74",56,0)
 ;Output:
"RTN","IBCEF74",57,0)
 ; IBRES(PRNUM,PRTYPE,SEQ#)=PROV^INSUR^IDTYPE^ID^FORMTYP^CARETYP
"RTN","IBCEF74",58,0)
 ; where:(see PROVIDER)
"RTN","IBCEF74",59,0)
PROVINF(IB399,IBPRNUM,IBRES,IBSORT,IBINSTP) ;
"RTN","IBCEF74",60,0)
 I +$G(IBSORT)=0 S IBSORT=IBPRNUM
"RTN","IBCEF74",61,0)
 N IBPRTYP,IBINSCO,IBPROV,IBFRMTYP,IBCARE,IB35591,IBN,IBCURR,IBEXC S IBN=0
"RTN","IBCEF74",62,0)
 S IBINSCO=+$P($G(^DGCR(399,IB399,"M")),"^",IBPRNUM)
"RTN","IBCEF74",63,0)
 S IBFRMTYP=$$FT^IBCEF(IB399),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF74",64,0)
 S IBCARE=$S($$ISRX^IBCEF1(IB399):3,1:0) ;if bill is a prescription refill bill
"RTN","IBCEF74",65,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IB399,1) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF74",66,0)
 F IBPRTYP=1:1:9 D
"RTN","IBCEF74",67,0)
 . N Z,IB355OV
"RTN","IBCEF74",68,0)
 . S IBPROV=$$PROVPTR^IBCEF7(IB399,IBPRTYP)
"RTN","IBCEF74",69,0)
 . Q:+IBPROV=0
"RTN","IBCEF74",70,0)
 . ;don't create anything if the form type is different than "HCFA 1500" or "UB-92"
"RTN","IBCEF74",71,0)
 . Q:IBFRMTYP=0
"RTN","IBCEF74",72,0)
 . N IBRETARR S IBRETARR=0
"RTN","IBCEF74",73,0)
 . D PRACT^IBCEF71(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBRETARR,IBPRTYP,$G(IBINSTP))
"RTN","IBCEF74",74,0)
 . S IB355OV="",IBEXC=""
"RTN","IBCEF74",75,0)
 . S Z=$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0))
"RTN","IBCEF74",76,0)
 . I Z S Z=$G(^DGCR(399,IB399,"PRV",Z,0)) D
"RTN","IBCEF74",77,0)
 .. I $P(Z,U,IBPRNUM+4)'="",$P(Z,U,IBPRNUM+11)'="" S IB355OV=$P(Z,U,IBPRNUM+4)_U_$P(Z,U,IBPRNUM+11)
"RTN","IBCEF74",78,0)
 . S IBCURR=$$COB^IBCEF(IB399)
"RTN","IBCEF74",79,0)
 . S IBN=0,IB35591=$$CH35591^IBCEF72(IBINSCO,IBFRMTYP,IBCARE)
"RTN","IBCEF74",80,0)
 . I $G(IBINSTP)="C","34"[$G(IBPRTYP),"P"[$G(IBCURR),$G(IBFRMTYP)=2,$$MCRONBIL^IBEFUNC(IB399) S IB355OV=$$MCR24K^IBCEU3(IB399)_"^12"
"RTN","IBCEF74",81,0)
 . I $G(IBINSTP)="O","34"[$G(IBPRTYP),"ST"[$G(IBCURR),$G(IBFRMTYP)=2,$$MCRONBIL^IBEFUNC(IB399) S IB355OV=$$MCR24K^IBCEU3(IB399)_"^12" ;Calculate MEDICARE (WNR) specific provider qualifier and ID for HCFA 1500 secondary claims
"RTN","IBCEF74",82,0)
 . I $P(IB355OV,U,2) D
"RTN","IBCEF74",83,0)
 .. I $$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P($G(^IBE(355.97,+$P(IB355OV,U,2),0)),U,3)) D
"RTN","IBCEF74",84,0)
 ... S IBEXC=$P(IB355OV,U,2),IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="OVERRIDE^"_IBINSCO_U_$P($G(^IBE(355.97,+IBEXC,0)),U,3)_U_$P(IB355OV,U)_"^^^^^"_+IBEXC
"RTN","IBCEF74",85,0)
 . I IB35591'="",IBEXC'=$P(IB35591,U,3) S:$$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P(IB35591,"^")) IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="DEFAULT^"_IBINSCO_"^"_IB35591_"^^",$P(IBRES(IBSORT,IBPRTYP,IBN),U,9)=$P(IB35591,U,3)
"RTN","IBCEF74",86,0)
 . D SORT(IBSORT,IBPRTYP,IB399,.IBRETARR,.IBRES,IBN,IBEXC,IBPRNUM)
"RTN","IBCEF74",87,0)
 S IBRES(IBSORT)=$S(IBPRNUM=3:"T",IBPRNUM=2:"S",1:"P")
"RTN","IBCEF74",88,0)
 Q
"RTN","IBCEF74",89,0)
 ;
"RTN","IBCEF74",90,0)
SECIDCK(IBIFN,IBSEQ,IBTYP,IBIFN1) ; Function returns 1 if ID type ptr in
"RTN","IBCEF74",91,0)
 ;  IBTYP is a valid X12 code for the claim/provider function (IBPROVF)
"RTN","IBCEF74",92,0)
 ;  as a secondary id
"RTN","IBCEF74",93,0)
 ; IBSEQ = the COB sequence being checked
"RTN","IBCEF74",94,0)
 ; IBIFN1 = the entry # in the PRV multiple being checked
"RTN","IBCEF74",95,0)
 ;  Called from input transform of fields .12-.14 in subfile 399.0222
"RTN","IBCEF74",96,0)
 N IBOK,IBFRM,IBCOBN,IBX12,IBPROVF
"RTN","IBCEF74",97,0)
 S IBPROVF=+$G(^DGCR(399,IBIFN,"PRV",IBIFN1,0))
"RTN","IBCEF74",98,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBFRM=$S(IBFRM=3:1,1:2) ; Form type
"RTN","IBCEF74",99,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN) S:'IBCOBN IBCOBN=1 ; Current COB seq
"RTN","IBCEF74",100,0)
 S IBX12=$P($G(^IBE(355.97,+IBTYP,0)),U,3) ; X12 code for prov id typ
"RTN","IBCEF74",101,0)
 Q $$CHSEC^IBCEF73(IBFRM,IBPROVF,$S(IBSEQ=IBCOBN:"C",1:"O"),IBX12)
"RTN","IBCEF74",102,0)
 ;
"RTN","IBCEF74",103,0)
DEFID(IBIFN,IBPRV) ;
"RTN","IBCEF74",104,0)
 ; IBIFN = ien of bill
"RTN","IBCEF74",105,0)
 ; IBPRV = ien of entry in subfile 399.0222
"RTN","IBCEF74",106,0)
 ;  Function returns default ids: prim id def^sec id def^tert id def
"RTN","IBCEF74",107,0)
 N Z,Z1,ID,IBZ,IBINS,IBINS4,IBFRM
"RTN","IBCEF74",108,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ","",IBIFN)
"RTN","IBCEF74",109,0)
 S Z=$G(^DGCR(399,IBIFN,"PRV",IBPRV,0)),ID=$P(Z,U,5,7)
"RTN","IBCEF74",110,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBFRM=$S(IBFRM=3:1,1:2)
"RTN","IBCEF74",111,0)
 F Z1=1:1:3 I $P(ID,U,Z1)="" D
"RTN","IBCEF74",112,0)
 . Q:'$G(^DGCR(399,IBIFN,"I"_Z1))
"RTN","IBCEF74",113,0)
 . S $P(ID,U,Z1)=$$GETID^IBCEP2(IBIFN,2,$P(Z,U,2),Z1)
"RTN","IBCEF74",114,0)
 . I $P(ID,U,Z1)="" S $P(ID,U,Z1)=$P(IBZ,U,+Z)
"RTN","IBCEF74",115,0)
 Q ID
"RTN","IBCEF74",116,0)
 ;
"RTN","IBCEF74",117,0)
DISPID(IBXIEN) ; Displays a list of all provider and facility ids that will
"RTN","IBCEF74",118,0)
 ; extracted for this bill if it is transmitted electronically
"RTN","IBCEF74",119,0)
 N IBID,IBID1,IBZ,IBCT,IBFRM,IBCOBN,IBATT,IBQUIT,IBTYP,DIR,IBIFN,X,Y,Z,Z0,Z1
"RTN","IBCEF74",120,0)
 S IBIFN=IBXIEN
"RTN","IBCEF74",121,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBCOBN=$$COBN^IBCEF(IBIFN),IBATT=$S(IBFRM=2:3,1:4)
"RTN","IBCEF74",122,0)
 W @IOF
"RTN","IBCEF74",123,0)
 W !,"IF THIS BILL IS TRANSMITTED ELECTRONICALLY, THE FOLLOWING IDS WILL BE SENT:"
"RTN","IBCEF74",124,0)
 ; Returns all provider secondary ids to be transmitted in the indicated segments
"RTN","IBCEF74",125,0)
 S Z=+$G(^DGCR(399,IBIFN,"I1")) I Z W !,"  PRIMARY INS CO: ",$$EXTERNAL^DILFD(399,101,"",Z),$S(IBCOBN=1:" <<<Current Ins",1:"")
"RTN","IBCEF74",126,0)
 S Z=+$G(^DGCR(399,IBIFN,"I2")) I Z W !,"SECONDARY INS CO: ",$$EXTERNAL^DILFD(399,101,"",Z),$S(IBCOBN=2:" <<<Current Ins",1:"")
"RTN","IBCEF74",127,0)
 S Z=+$G(^DGCR(399,IBIFN,"I3")) I Z W !," TERTIARY INS CO: ",$$EXTERNAL^DILFD(399,101,"",Z),$S(IBCOBN=3:" <<<Current Ins",1:"")
"RTN","IBCEF74",128,0)
 W !!,"PROVIDER IDs: (VISTA RECORDS OP1,OP2,OP4,OP8,OP9,OPR2,OPR3,OPR4,OPR5,OPR8):"
"RTN","IBCEF74",129,0)
 F Z=1:1:3 I $G(^DGCR(399,IBIFN,"I"_Z)) D PROVINF^IBCEF74(IBIFN,Z,.IBID,"",$S(IBCOBN=Z:"C",1:"O"))
"RTN","IBCEF74",130,0)
 S Z=0 F  S Z=$O(IBID(Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBID(Z,Z0)) Q:'Z0  S Z1=0 F  S Z1=$O(IBID(Z,Z0,Z1)) Q:'Z1  I $P(IBID(Z,Z0,Z1),U,9) S IBID1(Z0,Z,Z1)=IBID(Z,Z0,Z1)
"RTN","IBCEF74",131,0)
 S Z=+$O(^DGCR(399,IBIFN,"PRV","B",IBATT,0))
"RTN","IBCEF74",132,0)
 I Z S Z=$P($G(^DGCR(399,IBIFN,"PRV",Z,0)),U,2)
"RTN","IBCEF74",133,0)
 W !,?5,"ATTENDING/RENDERING: ",$$EXTERNAL^DILFD(399.0222,.02,"",Z)
"RTN","IBCEF74",134,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ","",IBIFN)
"RTN","IBCEF74",135,0)
 W !,?8,"SSN: ",?35,$S($P(IBZ,U,IBATT)'="":$P(IBZ,U,IBATT),1:"***MISSING***")
"RTN","IBCEF74",136,0)
 I $O(IBID1(IBATT,0)) W !,?8,"SECONDARY IDs"
"RTN","IBCEF74",137,0)
 S IBQUIT=0
"RTN","IBCEF74",138,0)
 S Z0=0 F  S Z0=$O(IBID1(IBATT,Z0)) Q:'Z0!IBQUIT  K IBTYP S Z1=0 F  S Z1=$O(IBID1(IBATT,Z0,Z1)) Q:'Z1  D  Q:IBQUIT
"RTN","IBCEF74",139,0)
 . Q:$D(IBTYP(+$P(IBID1(IBATT,Z0,Z1),U,9)))  ;1st of each type transmits
"RTN","IBCEF74",140,0)
 . I ($Y+5)>IOSL S IBQUIT=$$NOMORE() Q:IBQUIT
"RTN","IBCEF74",141,0)
 . S IBTYP(+$P(IBID1(IBATT,Z0,Z1),U,9))=""
"RTN","IBCEF74",142,0)
 . W !,?8,"(",$E("PST",Z0),") ",$$EXTERNAL^DILFD(36,4.01,"",$P(IBID1(IBATT,Z0,Z1),U,9)),?35,$P(IBID1(IBATT,Z0,Z1),U,4)
"RTN","IBCEF74",143,0)
 S Z=0 F  S Z=$O(IBID1(Z)) Q:'Z  I Z<3!(Z>4) D  Q:IBQUIT
"RTN","IBCEF74",144,0)
 . N Q
"RTN","IBCEF74",145,0)
 . S Q=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEF74",146,0)
 . W !!,?5,$$EXTERNAL^DILFD(399.0222,.01,"",Q),": "_$$EXTERNAL^DILFD(399.0222,.02,"",$P($G(^DGCR(399,IBIFN,"PRV",Q,0)),U,2))
"RTN","IBCEF74",147,0)
 . S Z0=0 F  S Z0=$O(IBID1(Z,Z0)) Q:'Z0!IBQUIT  K IBTYP S Z1=0 F  S Z1=$O(IBID1(Z,Z0,Z1)) Q:'Z1!IBQUIT  D
"RTN","IBCEF74",148,0)
 .. Q:$D(IBTYP(+$P(IBID1(Z,Z0,Z1),U,9)))  ; 1st of each type transmits
"RTN","IBCEF74",149,0)
 .. I ($Y+5)>IOSL S IBQUIT=$$NOMORE() Q:IBQUIT
"RTN","IBCEF74",150,0)
 .. S IBTYP(+$P(IBID1(Z,Z0,Z1),U,9))=""
"RTN","IBCEF74",151,0)
 .. W !,?8,"(",$E("PST",Z0),") ",$$EXTERNAL^DILFD(36,4.01,"",$P(IBID1(Z,Z0,Z1),U,9)),?35,$P(IBID1(Z,Z0,Z1),U,4)
"RTN","IBCEF74",152,0)
 S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","IBCEF74",153,0)
 Q
"RTN","IBCEF74",154,0)
 ;
"RTN","IBCEF74",155,0)
NOMORE() ;
"RTN","IBCEF74",156,0)
 S DIR(0)="EA",DIR("A")="Press RETURN for more IDs or '^' to exit: " W ! D ^DIR
"RTN","IBCEF74",157,0)
 W @IOF
"RTN","IBCEF74",158,0)
 Q (Y'=1)
"RTN","IBCEF74",159,0)
 ;
"RTN","IBCEF74",160,0)
DEFSEC(IBIFN,IBARR) ; Function returns an array in IBARR for default
"RTN","IBCEF74",161,0)
 ; provider secondary ids for bill ien IBIFN
"RTN","IBCEF74",162,0)
 ; IBARR if passed by ref is returned as 
"RTN","IBCEF74",163,0)
 ;     IBARR(prov function,COBN)=default id
"RTN","IBCEF74",164,0)
 N IBCAR,IBCOBN,IBPC,IBINS,IBARRX,Q,Z,Z0,ZINS,X
"RTN","IBCEF74",165,0)
 K IBARR
"RTN","IBCEF74",166,0)
 S ZINS="",IBCOBN=$$COBN^IBCEF(IBIFN),IBPC=$S($$FT^IBCEF(IBIFN)=3:2,1:1)
"RTN","IBCEF74",167,0)
 S IBCAR=$$INPAT^IBCEF(IBIFN,1),IBCAR=$S('IBCAR:2,1:1)
"RTN","IBCEF74",168,0)
 F Z=1:1:3 S ZINS=ZINS_+$G(^DGCR(399,IBIFN,"I"_Z))_U
"RTN","IBCEF74",169,0)
 F Z=1:1:3 I $P(ZINS,U,Z),'$P($G(^DIC(36,+$P(ZINS,U,Z),4)),U,IBPC) S $P(ZINS,U,Z)=""
"RTN","IBCEF74",170,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBCEF74",171,0)
 . F Q=1:1:3 D
"RTN","IBCEF74",172,0)
 .. I $P(Z0,U,Q+4)'="" S IBARR(+Z0,Q)=$P(Z0,U,Q+4) Q  ; Override entered
"RTN","IBCEF74",173,0)
 .. S IBINS=$P(ZINS,U,Q)
"RTN","IBCEF74",174,0)
 .. Q:'IBINS
"RTN","IBCEF74",175,0)
 .. S X=$$IDFIND^IBCEP2(IBIFN,"",$P(Z0,U,2),Q,1)
"RTN","IBCEF74",176,0)
 .. I X'="" S IBARR(+Z0,Q)=X
"RTN","IBCEF74",177,0)
 Q
"RTN","IBCEF74",178,0)
 ;
"RTN","IBCEM")
0^48^B58848548
"RTN","IBCEM",1,0)
IBCEM ;ALB/TMP - 837 EDI RETURN MESSAGE PROCESSING ;17-APR-96
"RTN","IBCEM",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,155**;21-MAR-94
"RTN","IBCEM",3,0)
 Q
"RTN","IBCEM",4,0)
 ;
"RTN","IBCEM",5,0)
UPD ; Update messages manually from messages list
"RTN","IBCEM",6,0)
 N IBDA,IBOK,IBTDA,ZTSK,IBTSK,IBTYP,IBU,IBU1,IB0
"RTN","IBCEM",7,0)
 D FULL^VALM1
"RTN","IBCEM",8,0)
 D SEL(.IBDA,1)
"RTN","IBCEM",9,0)
 S IBDA=$O(IBDA(""))
"RTN","IBCEM",10,0)
 I IBDA="" G UPDQ
"RTN","IBCEM",11,0)
 S IBTDA=+IBDA(IBDA)
"RTN","IBCEM",12,0)
 I '$$LOCK(IBTDA) G UPDQ
"RTN","IBCEM",13,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEM",14,0)
 ;
"RTN","IBCEM",15,0)
 I IB0="" D  G UPDQ
"RTN","IBCEM",16,0)
 . W !,*7,"Message ",IBDA," is no longer in return message file" S IBOK=""
"RTN","IBCEM",17,0)
 . D PAUSE^VALM1
"RTN","IBCEM",18,0)
 I $P(IB0,U,11) S IBOK=1 D  G:'IBOK UPDQ
"RTN","IBCEM",19,0)
 . N ZTSK
"RTN","IBCEM",20,0)
 . S ZTSK=$P(IB0,U,11) D STAT^%ZTLOAD Q:ZTSK(0)=0  ;Task not scheduled
"RTN","IBCEM",21,0)
 . I "12"[ZTSK(1) W *7,!,"This message has already been scheduled for update.  Task # is: ",$P(IB0,U,11) S IBOK="" D PAUSE^VALM1
"RTN","IBCEM",22,0)
 ;
"RTN","IBCEM",23,0)
 I $P(IB0,U,6)=""!("UP"'[$P(IB0,U,6)) D  G UPDQ
"RTN","IBCEM",24,0)
 . W !,*7,"Message status ("_$$EXPAND^IBTRE(364.2,.06,$P(IB0,U,6))_") is not appropriate for this action"
"RTN","IBCEM",25,0)
 . D PAUSE^VALM1
"RTN","IBCEM",26,0)
 ;
"RTN","IBCEM",27,0)
 S IBTYP=$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U)
"RTN","IBCEM",28,0)
 S IBU=$S(IBTYP="REPORT":"MAILIT^IBCESRV2",IBTYP["837REC":"CON837^IBCESRV2",IBTYP["837REJ":"REJ837^IBCESRV2",IBTYP["835EOB":"EOB835^IBCESRV3",1:""),IBU1=$S(IBTYP["837":$E(IBTYP,$L(IBTYP)),1:2)
"RTN","IBCEM",29,0)
 I IBU="" W !,*7,"This message has an invalid message type - can't update" D PAUSE^VALM1 G UPDQ
"RTN","IBCEM",30,0)
 S IBTSK=$$TASK(IBU,$P(IB0,U,4),IBTDA,IBU1)
"RTN","IBCEM",31,0)
 I IBTSK W !,"Update has been tasked (#",IBTSK,")"
"RTN","IBCEM",32,0)
 I 'IBTSK W !,*7,"Update could not be tasked.  Please try again later!!!"
"RTN","IBCEM",33,0)
 D PAUSE^VALM1
"RTN","IBCEM",34,0)
 ;
"RTN","IBCEM",35,0)
 D BLD^IBCEM1
"RTN","IBCEM",36,0)
UPDQ I $G(IBTDA) L -^IBA(364.2,IBTDA,0)
"RTN","IBCEM",37,0)
 S VALMBCK="R"
"RTN","IBCEM",38,0)
 Q
"RTN","IBCEM",39,0)
 ;
"RTN","IBCEM",40,0)
VP ; View/Print Return Messages
"RTN","IBCEM",41,0)
 N DHD,DIC,FLDS,BY,FR,TO,DIR,Y,L,IBDA,IBTDA,IBBILLS
"RTN","IBCEM",42,0)
 D FULL^VALM1,SEL(.IBDA,1)
"RTN","IBCEM",43,0)
 S IBDA=$O(IBDA(""))
"RTN","IBCEM",44,0)
 G:'IBDA VPQ
"RTN","IBCEM",45,0)
 S IBTDA=$G(IBDA(IBDA)),IBBILLS=""
"RTN","IBCEM",46,0)
 I $P($G(^IBA(364.2,IBTDA,0)),U,4),'$P(^(0),U,5) D
"RTN","IBCEM",47,0)
 .S DIR(0)="YA",DIR("B")="NO",DIR("A")="Do you want to list all bills for this batch?: " D ^DIR K DIR
"RTN","IBCEM",48,0)
 .I Y S IBBILLS=1
"RTN","IBCEM",49,0)
 S DHD=$S(IBBILLS:"[IBCEM MESSAGE LIST HDR]",1:""),DIC="^IBA(364.2,",FLDS=$S(IBBILLS:"[IBCEM MESSAGE LIST]",1:"[CAPTIONED]"),BY="@NUMBER",(FR,TO)=$G(IBDA(IBDA)),L=0 D EN1^DIP
"RTN","IBCEM",50,0)
 D PAUSE^VALM1
"RTN","IBCEM",51,0)
VPQ S VALMBCK="R"
"RTN","IBCEM",52,0)
 Q
"RTN","IBCEM",53,0)
 ;
"RTN","IBCEM",54,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCEM",55,0)
 ; IBDA = array returned if selections made
"RTN","IBCEM",56,0)
 ;    IBDA(n)=ien of bill selected in file 399
"RTN","IBCEM",57,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCEM",58,0)
 N IB
"RTN","IBCEM",59,0)
 K IBDA
"RTN","IBCEM",60,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCEM",61,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  S IB=$G(^TMP("IBCEM-837DX",$J,IBDA)),IBDA(IBDA)=+$P(IB,U,2)
"RTN","IBCEM",62,0)
 Q
"RTN","IBCEM",63,0)
 ;
"RTN","IBCEM",64,0)
UPDEDI(IBDA,FUNC,NOCT) ; Update EDI files - cancel/resubmit/print as
"RTN","IBCEM",65,0)
 ;   resolution to message
"RTN","IBCEM",66,0)
 ; IBDA = transmit bill ien # for bill
"RTN","IBCEM",67,0)
 ; FUNC = "E" for edit/resubmit, "C" for cancel, "R" for resubmit not
"RTN","IBCEM",68,0)
 ;       from edit, "P" for print, "Z" for COB processed , "N" for no
"RTN","IBCEM",69,0)
 ;       further action needed-close record
"RTN","IBCEM",70,0)
 ; NOCT = 1 if not necessary to update batch count, 0 if update needed
"RTN","IBCEM",71,0)
 ;
"RTN","IBCEM",72,0)
 N IB0,IBBA,IBBDA,IBCT,IBM,IBTDA,IBNEW,DA,DIE,DR,Z,IBTEXT,IBZ,IBIFN,IBSTAT
"RTN","IBCEM",73,0)
 S IB0=$G(^IBA(364,+IBDA,0)),IBBA=$P(IB0,U,2)
"RTN","IBCEM",74,0)
 Q:IB0=""  S IBIFN=+IB0
"RTN","IBCEM",75,0)
 ;
"RTN","IBCEM",76,0)
 S IBNEW=$S(FUNC="E"!(FUNC="R"):+$P($G(^IBA(364,+$$LAST364^IBCEF4(+IB0),0)),U,2),1:"") S:IBNEW=IBBA IBNEW=""
"RTN","IBCEM",77,0)
 ;
"RTN","IBCEM",78,0)
 S IBSTAT=$P(IB0,U,3)                ; current status in file 364
"RTN","IBCEM",79,0)
 I '$F(".C.R.E.Z.","."_IBSTAT_".") D   ; don't update if in final status
"RTN","IBCEM",80,0)
 . S DR=".03////"_$S(FUNC="E":"R","NP"'[FUNC:FUNC,1:"Z")_";.04///NOW" S:FUNC="E"!(FUNC="R") DR=DR_$S(IBNEW:";.06////"_IBNEW,1:"")
"RTN","IBCEM",81,0)
 . S DA=+IBDA,DIE="^IBA(364," D ^DIE ;Update the transmit bill record
"RTN","IBCEM",82,0)
 . Q
"RTN","IBCEM",83,0)
 ;
"RTN","IBCEM",84,0)
 I IBBA D CKRES^IBCESRV2(IBBA) ;Update completely resubmitted flags
"RTN","IBCEM",85,0)
 ;
"RTN","IBCEM",86,0)
 I IBBA,(FUNC="P"!(IBNEW&'$G(NOCT))) D CTDOWN^IBCEM02(IBBA,1) ;If resubmitted in a new batch or printed, update old batch
"RTN","IBCEM",87,0)
 ;
"RTN","IBCEM",88,0)
 S IBTEXT(1)=" UPDATED BY: "_$$EXTERNAL^DILFD(361.02,.02,,+$G(DUZ))
"RTN","IBCEM",89,0)
 S IBTEXT(2)="ACTION USED: "_$S(FUNC="E":"BILL EDITED/RESUBMITTED",FUNC="C":"BILL CANCELED",FUNC="R":"BILL RESUBMITTED WITHOUT EDIT)",FUNC="P":"PRINT BILL",FUNC="Z":"PROCESS COB",1:"")
"RTN","IBCEM",90,0)
 S IBTEXT(2)=$S(IBTEXT(2)="":"UNSPECIFIED",1:IBTEXT(2)_" - REVIEW MARKED AS COMPLETE")
"RTN","IBCEM",91,0)
 S IBTEXT=2
"RTN","IBCEM",92,0)
 ;
"RTN","IBCEM",93,0)
 ; Update file 361
"RTN","IBCEM",94,0)
 S IBZ=0 F  S IBZ=$O(^IBM(361,"AERR",+IBDA,IBZ)) Q:'IBZ  I $D(^IBM(361,IBZ,0)),$P(^(0),U,10)="",$P(^(0),U,9)<2 D
"RTN","IBCEM",95,0)
 . S DIE="^IBM(361,",DR=".09////2;.1////"_$TR(FUNC,"RCEIBZPN","RCROOFOO"),DA=IBZ D ^DIE
"RTN","IBCEM",96,0)
 . I FUNC'="","ECRPIBZ"[FUNC D  ; Update review status, notes for message
"RTN","IBCEM",97,0)
 .. D NOTECHG^IBCECSA2(IBZ,1,.IBTEXT)
"RTN","IBCEM",98,0)
 ;
"RTN","IBCEM",99,0)
 ; Update file 361.1 with the Cancel Status, to cancel All EOB's on file
"RTN","IBCEM",100,0)
 I FUNC="C" D STAT^IBCEMU2(IBIFN,9,0)
"RTN","IBCEM",101,0)
 ;
"RTN","IBCEM",102,0)
 Q
"RTN","IBCEM",103,0)
 ;
"RTN","IBCEM",104,0)
DEL ; Delete messages from messages list - locked with IB SUPERVISOR key
"RTN","IBCEM",105,0)
 N IBDA,IBOK,IBTDA,IBTYP,IBU,IBU1,IB0,DIR,IBT,IBE,Z,X,Y,XMSUBJ,XMTO,XMBODY,XMDUZ
"RTN","IBCEM",106,0)
 D FULL^VALM1
"RTN","IBCEM",107,0)
 S IBTDA=0
"RTN","IBCEM",108,0)
 I '$D(^XUSEC("IB SUPERVISOR",DUZ)) D  G DELQ
"RTN","IBCEM",109,0)
 . W !,"You don't have authority to use this action. See your supervisr for assistance"
"RTN","IBCEM",110,0)
 . D PAUSE^VALM1
"RTN","IBCEM",111,0)
 D SEL(.IBDA,1)
"RTN","IBCEM",112,0)
 S IBDA=$O(IBDA(""))
"RTN","IBCEM",113,0)
 I IBDA="" G DELQ
"RTN","IBCEM",114,0)
 W !
"RTN","IBCEM",115,0)
 S DIR(0)="YA",DIR("A",1)="This action will PERMANENTLY delete a return message from your system",DIR("A",2)="A bulletin will be sent to report the deletion",DIR("A",3)=" "
"RTN","IBCEM",116,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","IBCEM",117,0)
 D ^DIR K DIR
"RTN","IBCEM",118,0)
 G:Y'=1 DELQ
"RTN","IBCEM",119,0)
 S IBTDA=+IBDA(IBDA)
"RTN","IBCEM",120,0)
 I '$$LOCK(IBTDA) G DELQ
"RTN","IBCEM",121,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEM",122,0)
 ;
"RTN","IBCEM",123,0)
 I $P(IB0,U,11) S IBOK=1 D  G:'IBOK DELQ
"RTN","IBCEM",124,0)
 . N ZTSK
"RTN","IBCEM",125,0)
 . S ZTSK=$P(IB0,U,11) D STAT^%ZTLOAD Q:ZTSK(0)=0  ;Task not scheduled
"RTN","IBCEM",126,0)
 . I "12"[ZTSK(1) W *7,!,"This message is currently scheduled for update.  Task # is: ",$P(IB0,U,11) S IBOK="" D PAUSE^VALM1
"RTN","IBCEM",127,0)
 ;
"RTN","IBCEM",128,0)
 I $P(IB0,U,6)=""!("UP"'[$P(IB0,U,6)) D  G DELQ
"RTN","IBCEM",129,0)
 . W !,*7,"Message status ("_$$EXPAND^IBTRE(364.2,.06,$P(IB0,U,6))_") is not appropriate for this action"
"RTN","IBCEM",130,0)
 . D PAUSE^VALM1
"RTN","IBCEM",131,0)
 ;
"RTN","IBCEM",132,0)
 S DIR(0)="YA",DIR("A",1)=" ",DIR("A",2)="",$P(DIR("A",2),"*",54)="",DIR("A",3)="* This message is about to be PERMANENTLY deleted!! *",DIR("A",4)=DIR("A",2),DIR("A",5)=" "
"RTN","IBCEM",133,0)
 S DIR("A")="ARE YOU STILL SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","IBCEM",134,0)
 W ! D ^DIR W ! K DIR
"RTN","IBCEM",135,0)
 I Y'=1 W !!,"Nothing deleted" D PAUSE^VALM1 G DELQ
"RTN","IBCEM",136,0)
 ;
"RTN","IBCEM",137,0)
 K ^TMP("IBMSG",$J)
"RTN","IBCEM",138,0)
 M ^TMP("IBMSG",$J)=^IBA(364.2,IBTDA)
"RTN","IBCEM",139,0)
 D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEM",140,0)
 I $D(^IBA(364.2,IBTDA)) D  G DELQ
"RTN","IBCEM",141,0)
 . W !,"Message not deleted - problem with delete" D PAUSE^VALM1
"RTN","IBCEM",142,0)
 ;
"RTN","IBCEM",143,0)
 S IBT(1)="EDI return message #"_$P(IB0,U)_" has been deleted"
"RTN","IBCEM",144,0)
 S IBT(2)=" "
"RTN","IBCEM",145,0)
 S IBT(3)="DELETED BY: "_$P($G(^VA(200,+$G(DUZ),0)),U)_"   "_$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","IBCEM",146,0)
 S Z=$$EXPAND^IBTRE(364.2,.06,$P(IB0,U,6)) S:Z="" Z="??"
"RTN","IBCEM",147,0)
 S IBT(4)="    STATUS: "_$E(Z_$J("",11),1,11)_"  MESSAGE TYPE: "_$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U,5)
"RTN","IBCEM",148,0)
 S IBT(5)=" MESSAGE #: "_$E($P(IB0,U)_$J("",11),1,11)_"   STATUS DATE: "_$$FMTE^XLFDT($P($G(^TMP("IBMSG",$J,1)),U,3))
"RTN","IBCEM",149,0)
 S IBT(6)="   BATCH #: "_$E($P($G(^IBA(364.1,+$P(IB0,U,4),0)),U)_$J("",11),1,11)_"        BILL #: "_$$EXPAND^IBTRE(364.2,.05,$P(IB0,U,5))
"RTN","IBCEM",150,0)
 S IBT(7)=" "
"RTN","IBCEM",151,0)
 S IBT(8)="MESSAGE TEXT:",IBE=8
"RTN","IBCEM",152,0)
 S Z=0 F  S Z=$O(^TMP("IBMSG",$J,2,Z)) Q:'Z  S IBE=IBE+1,IBT(IBE)=$G(^(Z,0))
"RTN","IBCEM",153,0)
 S XMSUBJ="EDI MESSAGE DELETED",XMBODY="IBT",XMDUZ="",XMTO("I:G.IB EDI")=""
"RTN","IBCEM",154,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCEM",155,0)
 ;
"RTN","IBCEM",156,0)
 K ^TMP("IBMSG",$J)
"RTN","IBCEM",157,0)
 ;
"RTN","IBCEM",158,0)
 W !,"A bulletin has been sent to report this deletion",!
"RTN","IBCEM",159,0)
 D PAUSE^VALM1
"RTN","IBCEM",160,0)
 ;
"RTN","IBCEM",161,0)
 D BLD^IBCEM1
"RTN","IBCEM",162,0)
DELQ L -^IBA(364.2,IBTDA,0)
"RTN","IBCEM",163,0)
 S VALMBCK="R"
"RTN","IBCEM",164,0)
 Q
"RTN","IBCEM",165,0)
 ;
"RTN","IBCEM",166,0)
TASK(IBRTN,IBBDA,IBTDA,IBTYP) ; Schedule the task to update data base from message
"RTN","IBCEM",167,0)
 ; IBRTN = routine to task
"RTN","IBCEM",168,0)
 ; IBBDA = batch # associated with the message (OPTIONAL)
"RTN","IBCEM",169,0)
 ; IBTDA = internal entry of message
"RTN","IBCEM",170,0)
 ; IBTYP = the number that is the last digit in the message type
"RTN","IBCEM",171,0)
 ;
"RTN","IBCEM",172,0)
 N ZTSK,ZTDESC,ZTIO,ZTDTH,ZTSAVE,DA,DR,DIE
"RTN","IBCEM",173,0)
 S ZTIO="",ZTDTH=$H,ZTDESC="UPDATE DATA BASE FROM EDI RETURN MESSAGE",ZTSAVE("IB*")="",ZTRTN=IBRTN
"RTN","IBCEM",174,0)
 D ^%ZTLOAD
"RTN","IBCEM",175,0)
 I $G(ZTSK),$G(^IBA(364.2,IBTDA,0)) S DIE="^IBA(364.2,",DR=".11////"_ZTSK_";.06////U",DA=IBTDA D ^DIE
"RTN","IBCEM",176,0)
 Q $G(ZTSK)
"RTN","IBCEM",177,0)
 ;
"RTN","IBCEM",178,0)
LOCK(IBTDA) ; Attempt to lock message file entry IBTDA
"RTN","IBCEM",179,0)
 ; Return 1 if successful, 0 if not able to lock
"RTN","IBCEM",180,0)
 ;
"RTN","IBCEM",181,0)
 N OK
"RTN","IBCEM",182,0)
 S OK=1
"RTN","IBCEM",183,0)
 L +^IBA(364.2,IBTDA,0):5
"RTN","IBCEM",184,0)
 I '$T D
"RTN","IBCEM",185,0)
 . I '$D(DIQUIET) W !,*7,"Another user is editing this entry ... try again later" D PAUSE^VALM1
"RTN","IBCEM",186,0)
 . S IBDA="",OK=0
"RTN","IBCEM",187,0)
 Q OK
"RTN","IBCEM",188,0)
 ;
"RTN","IBCEM1")
0^13^B8052218
"RTN","IBCEM1",1,0)
IBCEM1 ;ALB/TMP - 837 EDI RETURN MESSAGE MAIN LIST TEMPLATE ;02-MAY-96
"RTN","IBCEM1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-94
"RTN","IBCEM1",3,0)
 ;
"RTN","IBCEM1",4,0)
EN ; Main entry point
"RTN","IBCEM1",5,0)
 D DT^DICRW
"RTN","IBCEM1",6,0)
 K XQORS,VALMEVL,IBFASTXT,IBDA
"RTN","IBCEM1",7,0)
 D EN^VALM("IBCEM 837 MESSAGE LIST")
"RTN","IBCEM1",8,0)
 K IBFASTXT,IBDA
"RTN","IBCEM1",9,0)
 Q
"RTN","IBCEM1",10,0)
 ;
"RTN","IBCEM1",11,0)
INIT ; -- set up inital variables
"RTN","IBCEM1",12,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","IBCEM1",13,0)
 D BLD
"RTN","IBCEM1",14,0)
 Q
"RTN","IBCEM1",15,0)
 ;
"RTN","IBCEM1",16,0)
REBLD ; Set up formatted global
"RTN","IBCEM1",17,0)
 ;
"RTN","IBCEM1",18,0)
BLD ; -- build list of messages
"RTN","IBCEM1",19,0)
 N IBCNT,IBEOB,IBMSGT,IBMSG,X,IB0
"RTN","IBCEM1",20,0)
 K ^TMP("IBCEM-837",$J),^TMP("IBCEM-837DX",$J)
"RTN","IBCEM1",21,0)
 S (IBCNT,IBMSG,VALMCNT)=0,IBEOB=+$O(^IBE(364.3,"B","835EOB",0))
"RTN","IBCEM1",22,0)
 F  S IBMSG=$O(^IBA(364.2,IBMSG)) Q:'IBMSG  S IB0=$G(^(IBMSG,0)) D
"RTN","IBCEM1",23,0)
 . N IBSTOP
"RTN","IBCEM1",24,0)
 . S IBSTOP=0
"RTN","IBCEM1",25,0)
 . S IBMSGT=$P(IB0,U,2)
"RTN","IBCEM1",26,0)
 . I IBMSGT,IBEOB,IBMSGT=IBEOB D  Q:IBSTOP
"RTN","IBCEM1",27,0)
 .. N Z,Z0 ; Only allow MRA EOB's to be viewed
"RTN","IBCEM1",28,0)
 .. S Z=0 F  S Z=$O(^IBA(364.2,IBMSG,2,Z)) Q:'Z!(IBSTOP)  S Z0=$G(^(Z,0)) I $E(Z0,1,12)="##RAW DATA: ",$E(Z0,13,18)="835EOB",$P(Z0,U,5)'="Y" S IBSTOP=1 Q
"RTN","IBCEM1",29,0)
 . ; -- add to list
"RTN","IBCEM1",30,0)
 . S IBCNT=IBCNT+1,X=""
"RTN","IBCEM1",31,0)
 . S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBCEM1",32,0)
 . S X=$$SETFLD^VALM1($$FMTE^XLFDT($P(IB0,U,3),2),X,"DATEREC")
"RTN","IBCEM1",33,0)
 . I IB0'="" S X=$$SETFLD^VALM1($$FMTE^XLFDT($P(IB0,U,10),2),X,"DATEMSG")
"RTN","IBCEM1",34,0)
 . S X=$$SETFLD^VALM1(+IB0,X,"MENTRY")
"RTN","IBCEM1",35,0)
 . S Z=$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U,6) S:Z="EOB" Z="MRA"
"RTN","IBCEM1",36,0)
 . S X=$$SETFLD^VALM1($E(Z_$J("",6),1,6),X,"TYPE")
"RTN","IBCEM1",37,0)
 . S X=$$SETFLD^VALM1($P($G(^IBA(364.1,+$P(IB0,U,4),0)),U),X,"BATCH")
"RTN","IBCEM1",38,0)
 . S X=$$SETFLD^VALM1($$BILLNO($P(IB0,U,5)),X,"BILL")
"RTN","IBCEM1",39,0)
 . S X=$$SETFLD^VALM1($$EXPAND^IBTRE(364.2,.06,$P(IB0,U,6)),X,"STATUS")
"RTN","IBCEM1",40,0)
 . D SET(X)
"RTN","IBCEM1",41,0)
 ;
"RTN","IBCEM1",42,0)
 I '$D(^TMP("IBCEM-837",$J)) S VALMCNT=2,IBCNT=2,^TMP("IBCEM-837",$J,1,0)=" ",^TMP("IBCEM-837",$J,2,0)="   All Incoming EDI Messages For Billing Have Filed - No Action Needed"
"RTN","IBCEM1",43,0)
 Q
"RTN","IBCEM1",44,0)
 ;
"RTN","IBCEM1",45,0)
FNL ; -- Clean up list
"RTN","IBCEM1",46,0)
 K ^TMP("IBCEM-837DX",$J)
"RTN","IBCEM1",47,0)
 D CLEAN^VALM10
"RTN","IBCEM1",48,0)
 K IBFASTXT
"RTN","IBCEM1",49,0)
 Q
"RTN","IBCEM1",50,0)
 ;
"RTN","IBCEM1",51,0)
SET(X) ; -- set arrays for 837 return messages
"RTN","IBCEM1",52,0)
 S VALMCNT=VALMCNT+1,^TMP("IBCEM-837",$J,VALMCNT,0)=X
"RTN","IBCEM1",53,0)
 S ^TMP("IBCEM-837",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBCEM1",54,0)
 S ^TMP("IBCEM-837DX",$J,IBCNT)=VALMCNT_U_IBMSG
"RTN","IBCEM1",55,0)
 Q
"RTN","IBCEM1",56,0)
 ;
"RTN","IBCEM1",57,0)
BILLNO(DA) ; Return bill # from entry in file 364
"RTN","IBCEM1",58,0)
 N Z
"RTN","IBCEM1",59,0)
 S Z=$P($G(^DGCR(399,+$P($G(^IBA(364,+DA,0)),U),0)),U)
"RTN","IBCEM1",60,0)
 Q $S($L(Z):Z,1:DA)
"RTN","IBCEM1",61,0)
 ;
"RTN","IBCEM1",62,0)
BATNO(DA) ; Return batch # from entry in file 364
"RTN","IBCEM1",63,0)
 Q $P($G(^IBA(364.1,+$P($G(^IBA(364,+DA,0)),U,2),0)),U)
"RTN","IBCEM1",64,0)
 ;
"RTN","IBCEM1",65,0)
HDR ;
"RTN","IBCEM1",66,0)
 S VALMHDR(1)=$J("",17)_"RETURN MESSAGES NEEDING TO BE FILED"
"RTN","IBCEM1",67,0)
 S VALMHDR(2)=" "
"RTN","IBCEM1",68,0)
 Q
"RTN","IBCEM1",69,0)
 ;
"RTN","IBCEM3")
0^20^B10722375
"RTN","IBCEM3",1,0)
IBCEM3 ;ALB/TMP - IB ELECTRONIC MESSAGE MGMNT ACTIONS ;18-AUG-1999
"RTN","IBCEM3",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-1994
"RTN","IBCEM3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEM3",4,0)
 ;
"RTN","IBCEM3",5,0)
CANCEL(IBDA,IBIFN,IB364) ; Generic cancel bill action
"RTN","IBCEM3",6,0)
 ; IBDA = entry selected from list (pass by reference-value is returned)
"RTN","IBCEM3",7,0)
 ; IBIFN = ien of bill entry in file 399
"RTN","IBCEM3",8,0)
 ; IB364 = ien of transmitted bill entry in file 364
"RTN","IBCEM3",9,0)
 ;
"RTN","IBCEM3",10,0)
 N Y,IBCAN,IBCE,IBTDA,IB0
"RTN","IBCEM3",11,0)
 I 'IBDA!'IBIFN S IBDA="" G CANCELQ
"RTN","IBCEM3",12,0)
 I '$$CANCKS("C",IBIFN) S IBDA="" G CANCELQ
"RTN","IBCEM3",13,0)
 ;
"RTN","IBCEM3",14,0)
 S (IBCAN,IBCE("EDI"))=1,Y=IBIFN
"RTN","IBCEM3",15,0)
 I $G(IBCEAUTO) S IBCAN=2
"RTN","IBCEM3",16,0)
 N IBQUIT
"RTN","IBCEM3",17,0)
 D NOPTF^IBCC S:$P($G(^DGCR(399,IBIFN,0)),U,13)'=7 IBDA=""
"RTN","IBCEM3",18,0)
 I '$G(IBCEAUTO) D PAUSE^VALM1
"RTN","IBCEM3",19,0)
CANCELQ Q
"RTN","IBCEM3",20,0)
 ;
"RTN","IBCEM3",21,0)
CANCKS(FUNC,IBIFN)      ; Check validity of cancel or cancel/clone function
"RTN","IBCEM3",22,0)
 ;FUNC = "C" for cancel "CC" for cancel/clone
"RTN","IBCEM3",23,0)
 ;IBIFN = bill internal entry #
"RTN","IBCEM3",24,0)
 N ERR
"RTN","IBCEM3",25,0)
 S ERR=""
"RTN","IBCEM3",26,0)
 I '$$DISP(IBIFN,"cancel"_$S(FUNC="C":"",1:"/clone")) S ERR="<No action taken>"
"RTN","IBCEM3",27,0)
 I ERR'="" W !,*7,ERR D PAUSE^VALM1
"RTN","IBCEM3",28,0)
 Q (ERR="")
"RTN","IBCEM3",29,0)
 ;
"RTN","IBCEM3",30,0)
EBILL(IBDA,IBIFN,IB364) ;Generic edit bill action
"RTN","IBCEM3",31,0)
 N IBAC,IBBDA,IBTDA,IB0,IBV,DFN,IBDA1,IBELOOP,IB399,IBDAB,IBHOLD,IB399TX,IBNEED,IBPOPOUT,IBTXPRT
"RTN","IBCEM3",32,0)
 S IB399=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCEM3",33,0)
 S IB399TX=$G(^DGCR(399,+IBIFN,"TX")),IBNEED=$$NEEDMRA^IBEFUNC(IBIFN)
"RTN","IBCEM3",34,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'<3 D  G EBILLQ
"RTN","IBCEM3",35,0)
 . N DIR
"RTN","IBCEM3",36,0)
 . S DIR(0)="EA",DIR("A",1)="You cannot edit a bill with a status of "_$$EXPAND^IBTRE(399,.13,$P($G(^DGCR(399,IBIFN,0)),U,13))
"RTN","IBCEM3",37,0)
 . S DIR("A")="Enter RETURN to continue or '^' to exit:"
"RTN","IBCEM3",38,0)
 . D ^DIR
"RTN","IBCEM3",39,0)
 . S IBDA=""
"RTN","IBCEM3",40,0)
 I '$$DISP(IBIFN,"edit") S IBDA="" G EBILLQ
"RTN","IBCEM3",41,0)
 S IBAC=1,DFN=$P($G(^DGCR(399,IBIFN,0)),U,2),IBV=0
"RTN","IBCEM3",42,0)
 S IBHOLD("IBIFN")=IBIFN,IBHOLD("IBDA")=$G(IBDA)
"RTN","IBCEM3",43,0)
 ; Warning - do not use IBH variable when calling the following routine
"RTN","IBCEM3",44,0)
 D ST^IBCB,ENS^%ZISS
"RTN","IBCEM3",45,0)
 D:$D(IBIFN) PAUSE^VALM1
"RTN","IBCEM3",46,0)
 S IBIFN=IBHOLD("IBIFN"),IBDA=IBHOLD("IBDA")
"RTN","IBCEM3",47,0)
 I $S(IBNEED:$P($G(^DGCR(399,IBIFN,0)),U,13)'=2,1:$P($G(^DGCR(399,IBIFN,0)),U,13)'=3) S IBDA=""
"RTN","IBCEM3",48,0)
 I IBDA D
"RTN","IBCEM3",49,0)
 . S $P(^DGCR(399,IBIFN,"S"),U,10,11)=(DT_U_DUZ)
"RTN","IBCEM3",50,0)
 . S DIK="^DGCR(399,",DA=IBIFN F DIK(1)=10,11 D EN1^DIK
"RTN","IBCEM3",51,0)
 . D UPDEDI^IBCEM(IB364,"E")
"RTN","IBCEM3",52,0)
EBILLQ Q
"RTN","IBCEM3",53,0)
 ;
"RTN","IBCEM3",54,0)
DISP(IBIFN,FUNC,DISP)   ;Display bill detail
"RTN","IBCEM3",55,0)
 ;  Returns 1 if function should continue, 0 if function should not
"RTN","IBCEM3",56,0)
 ; IBIFN = Bill #
"RTN","IBCEM3",57,0)
 ; FUNC = Text (lower case) to describe function to perform
"RTN","IBCEM3",58,0)
 ; DISP = flag = 1 for return data, no display
"RTN","IBCEM3",59,0)
 ;   format = 1^BILL #^PATIENT^BILL TYPE^DATES
"RTN","IBCEM3",60,0)
 ;
"RTN","IBCEM3",61,0)
 N IBB0,IBBU,IBNO,STAT,DIR,DTOUT,DUOUT,IBV
"RTN","IBCEM3",62,0)
 S IBB0=$G(^DGCR(399,IBIFN,0)),IBBU=$G(^("U")),IBNO=$P(IBB0,U)
"RTN","IBCEM3",63,0)
 S IBV(1)=$P($G(^DPT(+$P(IBB0,U,2),0)),U)_$S($P($G(^(0)),U,9)'="":" ("_$P(^(0),U,9)_")",1:"")
"RTN","IBCEM3",64,0)
 S IBV(2)=$$EXPAND^IBTRE(399,.05,$P(IBB0,U,5))
"RTN","IBCEM3",65,0)
 S IBV(3)=$$EXPAND^IBTRE(399,151,$P(IBBU,U))_" - "_$$EXPAND^IBTRE(399,151,$P(IBBU,U,2))
"RTN","IBCEM3",66,0)
 ;
"RTN","IBCEM3",67,0)
 I '$G(DISP) D  G DISPQ
"RTN","IBCEM3",68,0)
 . S (DIR("A",1),DIR("A",6))=" ",STAT=1
"RTN","IBCEM3",69,0)
 . S DIR("A",2)="    Bill #: "_IBNO
"RTN","IBCEM3",70,0)
 . S DIR("A",3)="   Patient: "_IBV(1)
"RTN","IBCEM3",71,0)
 . S DIR("A",4)=" Bill Type: "_IBV(2)
"RTN","IBCEM3",72,0)
 . S DIR("A",5)="Bill Dates: "_IBV(3)
"RTN","IBCEM3",73,0)
 . S DIR("A")="Are you sure this is the bill you want to "_FUNC_"? "
"RTN","IBCEM3",74,0)
 . S DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR
"RTN","IBCEM3",75,0)
 . I $D(DTOUT)!$D(DUOUT)!'Y S STAT=0
"RTN","IBCEM3",76,0)
 S STAT="1^"_IBNO_U_IBV(1)_U_IBV(2)_U_IBV(3)
"RTN","IBCEM3",77,0)
DISPQ   Q STAT
"RTN","IBCEM3",78,0)
 ;
"RTN","IBCEMMR")
0^72^B43402718
"RTN","IBCEMMR",1,0)
IBCEMMR ;ALB/ESG - IB MRA Report of Patients w/o Medicare WNR ;20-NOV-2003
"RTN","IBCEMMR",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMMR",3,0)
 ;
"RTN","IBCEMMR",4,0)
 ; Find patients with Medicare supplemental insurance or Medigap
"RTN","IBCEMMR",5,0)
 ; insurance (etc.) but who do not have MEDICARE (WNR) on file as
"RTN","IBCEMMR",6,0)
 ; one of their insurances.
"RTN","IBCEMMR",7,0)
 ;
"RTN","IBCEMMR",8,0)
 Q
"RTN","IBCEMMR",9,0)
 ;
"RTN","IBCEMMR",10,0)
EN ; Entry Point
"RTN","IBCEMMR",11,0)
 NEW IBMSORT
"RTN","IBCEMMR",12,0)
 D SORT I 'IBMSORT G EX
"RTN","IBCEMMR",13,0)
 D DEVICE
"RTN","IBCEMMR",14,0)
EX ; Exit Point
"RTN","IBCEMMR",15,0)
 Q
"RTN","IBCEMMR",16,0)
 ;
"RTN","IBCEMMR",17,0)
SORT ; Ask user how to sort the report
"RTN","IBCEMMR",18,0)
 NEW CH,DIR,X,Y,DIRUT,DIROUT
"RTN","IBCEMMR",19,0)
 W @IOF,!?20,"Patients Without MEDICARE (WNR) Insurance"
"RTN","IBCEMMR",20,0)
 W !!?2,"This option finds patients who do not have active MEDICARE (WNR) insurance,"
"RTN","IBCEMMR",21,0)
 W !?2,"but who do have active insurance with a Plan Type of Medigap, Carve-Out, or"
"RTN","IBCEMMR",22,0)
 W !?2,"Medicare Secondary.  In these cases, MEDICARE (WNR) should be primary."
"RTN","IBCEMMR",23,0)
 W !!?2,"The insurances for all living patients will be analyzed, but"
"RTN","IBCEMMR",24,0)
 W !?2,"you can determine how this information will be sorted."
"RTN","IBCEMMR",25,0)
 S IBMSORT=""
"RTN","IBCEMMR",26,0)
 W !
"RTN","IBCEMMR",27,0)
 S CH="1:Patient Name;2:SSN - Last 4 Digits;3:Insurance Company;"
"RTN","IBCEMMR",28,0)
 S CH=CH_"4:Type of Plan;5:Appointment Date"
"RTN","IBCEMMR",29,0)
 S DIR(0)="SO^"_CH
"RTN","IBCEMMR",30,0)
 S DIR("A")="Please enter the Sort Criteria"
"RTN","IBCEMMR",31,0)
 S DIR("B")="Patient Name"
"RTN","IBCEMMR",32,0)
 D ^DIR K DIR
"RTN","IBCEMMR",33,0)
 I 'Y G SORTX
"RTN","IBCEMMR",34,0)
 S IBMSORT=Y
"RTN","IBCEMMR",35,0)
SORTX ;
"RTN","IBCEMMR",36,0)
 Q
"RTN","IBCEMMR",37,0)
 ;
"RTN","IBCEMMR",38,0)
COMPILE ; Entry point for both background and foreground task execution
"RTN","IBCEMMR",39,0)
 ;
"RTN","IBCEMMR",40,0)
 NEW RTN,DFN,CNT,MS,DPT,PTNM,SSN,APPT,APDTE,A
"RTN","IBCEMMR",41,0)
 NEW INS,GRP,PLN,INSNM,PLNTYP,SORT
"RTN","IBCEMMR",42,0)
 S RTN="IBCEMMR"
"RTN","IBCEMMR",43,0)
 KILL ^TMP($J,RTN)
"RTN","IBCEMMR",44,0)
 S DFN=" ",CNT=0
"RTN","IBCEMMR",45,0)
 F  S DFN=$O(^DPT(DFN),-1) Q:'DFN!$G(ZTSTOP)  D
"RTN","IBCEMMR",46,0)
 . S CNT=CNT+1
"RTN","IBCEMMR",47,0)
 . I '$D(ZTQUEUED),CNT#500=0 U IO(0) W "." U IO
"RTN","IBCEMMR",48,0)
 . I $D(ZTQUEUED),CNT#500=0,$$S^%ZTLOAD() S ZTSTOP=1 Q
"RTN","IBCEMMR",49,0)
 . I $P($G(^DPT(DFN,.35)),U,1) Q           ; date of death
"RTN","IBCEMMR",50,0)
 . I '$$PTINS(DFN,.MS) Q                   ; eligible for report
"RTN","IBCEMMR",51,0)
 . S DPT=$G(^DPT(DFN,0))
"RTN","IBCEMMR",52,0)
 . S PTNM=$P(DPT,U,1)
"RTN","IBCEMMR",53,0)
 . I PTNM="" S PTNM="~UNKNOWN"
"RTN","IBCEMMR",54,0)
 . S SSN=$E($P(DPT,U,9),6,99)_" "
"RTN","IBCEMMR",55,0)
 . I SSN="" S SSN="~UNK"
"RTN","IBCEMMR",56,0)
 . S APPT=$O(^DPT(DFN,"S",DT))\1
"RTN","IBCEMMR",57,0)
 . I 'APPT S APPT=$O(^DPT(DFN,"S",DT),-1)\1
"RTN","IBCEMMR",58,0)
 . I 'APPT S APPT=0
"RTN","IBCEMMR",59,0)
 . S APDTE="  n/a"
"RTN","IBCEMMR",60,0)
 . I APPT S APDTE=$$FMTE^XLFDT(APPT,"2Z")
"RTN","IBCEMMR",61,0)
 . S A=0 F  S A=$O(MS(A)) Q:'A  D
"RTN","IBCEMMR",62,0)
 .. S INS=+$P(MS(A),U,1),GRP=+$P(MS(A),U,2)
"RTN","IBCEMMR",63,0)
 .. S PLN=+$P(MS(A),U,3)
"RTN","IBCEMMR",64,0)
 .. S INSNM=$P($G(^DIC(36,INS,0)),U,1)
"RTN","IBCEMMR",65,0)
 .. I INSNM="" S INSNM="~UNKNOWN"
"RTN","IBCEMMR",66,0)
 .. S PLNTYP=$P($G(^IBE(355.1,PLN,0)),U,1)
"RTN","IBCEMMR",67,0)
 .. I PLNTYP="" S PLNTYP="~UNKNOWN"
"RTN","IBCEMMR",68,0)
 .. S SORT=$S(IBMSORT=1:PTNM,IBMSORT=2:SSN,IBMSORT=3:INSNM,IBMSORT=4:PLNTYP,IBMSORT=5:-APPT,1:PTNM)
"RTN","IBCEMMR",69,0)
 .. S ^TMP($J,RTN,SORT,PTNM,DFN,A)=SSN_U_INSNM_U_PLNTYP_U_APDTE
"RTN","IBCEMMR",70,0)
 .. Q
"RTN","IBCEMMR",71,0)
 . Q
"RTN","IBCEMMR",72,0)
 ;
"RTN","IBCEMMR",73,0)
 I '$G(ZTSTOP) D PRINT             ; print the report
"RTN","IBCEMMR",74,0)
 D ^%ZISC                          ; close the device
"RTN","IBCEMMR",75,0)
 KILL ^TMP($J,RTN)                 ; kill scratch global
"RTN","IBCEMMR",76,0)
 I $D(ZTQUEUED) S ZTREQ="@"        ; purge the task record
"RTN","IBCEMMR",77,0)
COMPX ;
"RTN","IBCEMMR",78,0)
 Q
"RTN","IBCEMMR",79,0)
 ;
"RTN","IBCEMMR",80,0)
PRINT ; print the report to the device specified
"RTN","IBCEMMR",81,0)
 NEW MAXCNT,CRT,PAGECNT,STOP,SORT,PTNM,DFN,A,DATA,DIR,X,Y,DIRUT,DIROUT
"RTN","IBCEMMR",82,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCEMMR",83,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCEMMR",84,0)
 S PAGECNT=0,STOP=0
"RTN","IBCEMMR",85,0)
 ;
"RTN","IBCEMMR",86,0)
 ; Check for no data
"RTN","IBCEMMR",87,0)
 I '$D(^TMP($J,RTN)) D HEADER W !!?5,"No Data Found"
"RTN","IBCEMMR",88,0)
 ;
"RTN","IBCEMMR",89,0)
 S SORT=""
"RTN","IBCEMMR",90,0)
 F  S SORT=$O(^TMP($J,RTN,SORT)) Q:SORT=""  D  Q:STOP
"RTN","IBCEMMR",91,0)
 . S PTNM=""
"RTN","IBCEMMR",92,0)
 . F  S PTNM=$O(^TMP($J,RTN,SORT,PTNM)) Q:PTNM=""  D  Q:STOP
"RTN","IBCEMMR",93,0)
 .. S DFN=0
"RTN","IBCEMMR",94,0)
 .. F  S DFN=$O(^TMP($J,RTN,SORT,PTNM,DFN)) Q:'DFN  D  Q:STOP
"RTN","IBCEMMR",95,0)
 ... S A=0
"RTN","IBCEMMR",96,0)
 ... F  S A=$O(^TMP($J,RTN,SORT,PTNM,DFN,A)) Q:'A  D  Q:STOP
"RTN","IBCEMMR",97,0)
 .... S DATA=$G(^TMP($J,RTN,SORT,PTNM,DFN,A))
"RTN","IBCEMMR",98,0)
 .... I $Y+1>MAXCNT!'PAGECNT D HEADER Q:STOP
"RTN","IBCEMMR",99,0)
 .... W !,$E(PTNM,1,20),?23,$P(DATA,U,1),?30,$E($P(DATA,U,2),1,20)
"RTN","IBCEMMR",100,0)
 .... W ?53,$E($P(DATA,U,3),1,13),?69,$P(DATA,U,4)
"RTN","IBCEMMR",101,0)
 .... Q
"RTN","IBCEMMR",102,0)
 ... Q
"RTN","IBCEMMR",103,0)
 .. Q
"RTN","IBCEMMR",104,0)
 . Q
"RTN","IBCEMMR",105,0)
 ;
"RTN","IBCEMMR",106,0)
 I STOP G PRINTX
"RTN","IBCEMMR",107,0)
 W !!?30,"*** End of Report ***"
"RTN","IBCEMMR",108,0)
 I CRT,'$D(ZTQUEUED) S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEMMR",109,0)
PRINTX ;
"RTN","IBCEMMR",110,0)
 Q
"RTN","IBCEMMR",111,0)
 ;
"RTN","IBCEMMR",112,0)
HEADER ; page break and report header information
"RTN","IBCEMMR",113,0)
 NEW LIN,HDR,TAB
"RTN","IBCEMMR",114,0)
 S STOP=0
"RTN","IBCEMMR",115,0)
 ; ask screen user if they want to continue
"RTN","IBCEMMR",116,0)
 I CRT,PAGECNT>0,'$D(ZTQUEUED) D  I STOP G HEADERX
"RTN","IBCEMMR",117,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCEMMR",118,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEMMR",119,0)
 . I 'Y S STOP=1 Q
"RTN","IBCEMMR",120,0)
 . Q
"RTN","IBCEMMR",121,0)
 ;
"RTN","IBCEMMR",122,0)
 S PAGECNT=PAGECNT+1
"RTN","IBCEMMR",123,0)
 W @IOF,!,"Patients Without MEDICARE (WNR) Insurance"
"RTN","IBCEMMR",124,0)
 S HDR="Page: "_PAGECNT
"RTN","IBCEMMR",125,0)
 S TAB=80-$L(HDR)-1
"RTN","IBCEMMR",126,0)
 W ?TAB,HDR
"RTN","IBCEMMR",127,0)
 W !,"Sorted by ",$S(IBMSORT=1:"Patient Name",IBMSORT=2:"SSN - Last 4 Digits",IBMSORT=3:"Insurance Company",IBMSORT=4:"Type of Plan",IBMSORT=5:"Appointment Date",1:"Patient Name")
"RTN","IBCEMMR",128,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,"1Z")
"RTN","IBCEMMR",129,0)
 S TAB=80-$L(HDR)-1
"RTN","IBCEMMR",130,0)
 W ?TAB,HDR
"RTN","IBCEMMR",131,0)
 W !,"Patient Name",?24,"SSN",?30,"Insurance Company"
"RTN","IBCEMMR",132,0)
 W ?53,"Type of Plan",?69,"ApptDate"
"RTN","IBCEMMR",133,0)
 W !,$$RJ^XLFSTR("",80,"=")
"RTN","IBCEMMR",134,0)
 ;
"RTN","IBCEMMR",135,0)
 ; check for stop request
"RTN","IBCEMMR",136,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() D  G HEADERX
"RTN","IBCEMMR",137,0)
 . S (ZTSTOP,STOP)=1
"RTN","IBCEMMR",138,0)
 . W !!!?5,"*** Report Halted by TaskManager Request ***"
"RTN","IBCEMMR",139,0)
 . Q
"RTN","IBCEMMR",140,0)
 ;
"RTN","IBCEMMR",141,0)
HEADERX ;
"RTN","IBCEMMR",142,0)
 Q
"RTN","IBCEMMR",143,0)
 ;
"RTN","IBCEMMR",144,0)
PTINS(DFN,MCRSUP) ; Function to determine if a patient should be 
"RTN","IBCEMMR",145,0)
 ; included in this report or not.
"RTN","IBCEMMR",146,0)
 ; Input:  DFN - patient ien
"RTN","IBCEMMR",147,0)
 ; Output:  Function value is either 0 (don't include) or 1 (include)
"RTN","IBCEMMR",148,0)
 ;    MCRSUP array pass by reference
"RTN","IBCEMMR",149,0)
 ;    MCRSUP(seq) = [1] insurance co ien pointer to file 36
"RTN","IBCEMMR",150,0)
 ;                  [2] group pointer to file 355.3
"RTN","IBCEMMR",151,0)
 ;                  [3] type of plan pointer to file 355.1
"RTN","IBCEMMR",152,0)
 ;
"RTN","IBCEMMR",153,0)
 NEW INCLUDE,INS,A,MCRWNR,MCRZ,IBINS,IBGRP,GP,TP,PLABBR
"RTN","IBCEMMR",154,0)
 S INCLUDE=0 KILL MCRSUP
"RTN","IBCEMMR",155,0)
 I '$G(DFN) G PTINSX
"RTN","IBCEMMR",156,0)
 I '$D(^DPT(DFN)) G PTINSX
"RTN","IBCEMMR",157,0)
 D ALLWNR^IBCNS1(DFN,"INS",DT)
"RTN","IBCEMMR",158,0)
 S A=0,(MCRWNR,MCRZ)=0
"RTN","IBCEMMR",159,0)
 F  S A=$O(INS(A)) Q:'A  D  Q:MCRWNR
"RTN","IBCEMMR",160,0)
 . S IBINS=$P($G(INS(A,0)),U,1)
"RTN","IBCEMMR",161,0)
 . S IBGRP=$P($G(INS(A,0)),U,18)
"RTN","IBCEMMR",162,0)
 . I $$MCRWNR^IBEFUNC(IBINS) S MCRWNR=1 Q      ; Medicare WNR on file
"RTN","IBCEMMR",163,0)
 . S GP=$G(INS(A,355.3))                       ; group/plan info
"RTN","IBCEMMR",164,0)
 . S TP=$P(GP,U,9),PLABBR=""                   ; type of plan pointer
"RTN","IBCEMMR",165,0)
 . I TP S PLABBR=$P($G(^IBE(355.1,TP,0)),U,2)  ; plan abbreviation
"RTN","IBCEMMR",166,0)
 . I '$F(".MG.MS.COUT.","."_PLABBR_".") Q      ; check plan
"RTN","IBCEMMR",167,0)
 . S MCRZ=1                                    ; Medicare other on file
"RTN","IBCEMMR",168,0)
 . S MCRSUP(A)=IBINS_U_IBGRP_U_TP
"RTN","IBCEMMR",169,0)
 . Q
"RTN","IBCEMMR",170,0)
 ;
"RTN","IBCEMMR",171,0)
 ; If Medicare Other was found, but no Medicare WNR, then include it
"RTN","IBCEMMR",172,0)
 I MCRZ,'MCRWNR S INCLUDE=1
"RTN","IBCEMMR",173,0)
 ;
"RTN","IBCEMMR",174,0)
PTINSX ;
"RTN","IBCEMMR",175,0)
 I 'INCLUDE K MCRSUP
"RTN","IBCEMMR",176,0)
 Q INCLUDE
"RTN","IBCEMMR",177,0)
 ;
"RTN","IBCEMMR",178,0)
 ;
"RTN","IBCEMMR",179,0)
DEVICE ; This procedure displays a warning message and prompts for the 
"RTN","IBCEMMR",180,0)
 ; device on which to print the report.
"RTN","IBCEMMR",181,0)
 ;
"RTN","IBCEMMR",182,0)
 NEW ZTRTN,ZTDESC,ZTSAVE,POP
"RTN","IBCEMMR",183,0)
 W *7,!!!?14,"*** WARNING ***"
"RTN","IBCEMMR",184,0)
 W !?2,"This report takes a long time to compile!"
"RTN","IBCEMMR",185,0)
 W !!?2,"The active insurance coverage for all living patients is analyzed."
"RTN","IBCEMMR",186,0)
 W !!?2,"It is recommended that you queue this report to the background and"
"RTN","IBCEMMR",187,0)
 W !?2,"run it after hours or on the weekend."
"RTN","IBCEMMR",188,0)
 W !!?2,"This report is 80 characters wide."
"RTN","IBCEMMR",189,0)
 W !
"RTN","IBCEMMR",190,0)
 ;
"RTN","IBCEMMR",191,0)
 S ZTRTN="COMPILE^IBCEMMR"
"RTN","IBCEMMR",192,0)
 S ZTDESC="Patients without MEDICARE (WNR) Insurance"
"RTN","IBCEMMR",193,0)
 S ZTSAVE("IBMSORT")=""
"RTN","IBCEMMR",194,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","IBCEMMR",195,0)
DEVICEX ;
"RTN","IBCEMMR",196,0)
 Q
"RTN","IBCEMMR",197,0)
 ;
"RTN","IBCEMQA")
0^22^B12911228
"RTN","IBCEMQA",1,0)
IBCEMQA ;DAOU/ESG - MRA QUIET BILL AUTHORIZATION ;25-MAR-2003
"RTN","IBCEMQA",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMQA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMQA",4,0)
 ;
"RTN","IBCEMQA",5,0)
 Q   ; must be called at proper entry point
"RTN","IBCEMQA",6,0)
 ;
"RTN","IBCEMQA",7,0)
 ;
"RTN","IBCEMQA",8,0)
AUTOCOB(IBIFN,IBEOB,ERRMSG) ; This procedure mimics and automates the
"RTN","IBCEMQA",9,0)
 ; Process COB action on the MRA management screen.  This is intended
"RTN","IBCEMQA",10,0)
 ; to be called in background mode (no user interface).
"RTN","IBCEMQA",11,0)
 ;
"RTN","IBCEMQA",12,0)
 ; Input
"RTN","IBCEMQA",13,0)
 ;    IBIFN - bill#
"RTN","IBCEMQA",14,0)
 ;    IBEOB - ien of entry in file 361.1 (MRA)
"RTN","IBCEMQA",15,0)
 ;
"RTN","IBCEMQA",16,0)
 ; Output
"RTN","IBCEMQA",17,0)
 ;    ERRMSG - optional output parameter, passed by reference
"RTN","IBCEMQA",18,0)
 ;           - error message text
"RTN","IBCEMQA",19,0)
 ;
"RTN","IBCEMQA",20,0)
 NEW MRADATA,IB364,IBCBASK,IBCBCOPY,IBCAN,IBIFNH,IBAUTO,IBDA
"RTN","IBCEMQA",21,0)
 NEW IBCE,IBSILENT,IBPRCOB,IBERRMSG
"RTN","IBCEMQA",22,0)
 NEW IBCOB,IBCOBIL,IBCOBN,IBINS,IBINSN,IBINSOLD,IBMRAIO,IBMRAO,IBNMOLD
"RTN","IBCEMQA",23,0)
 S (IBIFN,IBIFNH)=+$G(IBIFN),IBEOB=+$G(IBEOB),ERRMSG=""
"RTN","IBCEMQA",24,0)
 ;
"RTN","IBCEMQA",25,0)
 S MRADATA=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEMQA",26,0)
 I $P(MRADATA,U,1)'=IBIFN S ERRMSG="Incorrect Bill or MRA EOB" G AUCOBX
"RTN","IBCEMQA",27,0)
 I $P(MRADATA,U,4)'=1 S ERRMSG="EOB is not a Medicare MRA" G AUCOBX
"RTN","IBCEMQA",28,0)
 S IB364=+$P(MRADATA,U,19)
"RTN","IBCEMQA",29,0)
 I 'IB364 S ERRMSG="Missing or incorrect Transmission record" G AUCOBX
"RTN","IBCEMQA",30,0)
 ;
"RTN","IBCEMQA",31,0)
 I '$P($G(^DGCR(399,IBIFN,"I"_($$COBN^IBCEF(IBIFN)+1))),U,1) D  G AUCOBX
"RTN","IBCEMQA",32,0)
 . S ERRMSG="No next payer for this bill"
"RTN","IBCEMQA",33,0)
 . Q
"RTN","IBCEMQA",34,0)
 ;
"RTN","IBCEMQA",35,0)
 ; Make sure that Medicare WNR is the current insurance for this bill
"RTN","IBCEMQA",36,0)
 I '$$WNRBILL^IBEFUNC(IBIFN) D  G AUCOBX
"RTN","IBCEMQA",37,0)
 . S ERRMSG="Medicare (WNR) is not the current payer for this bill"
"RTN","IBCEMQA",38,0)
 . Q
"RTN","IBCEMQA",39,0)
 ;
"RTN","IBCEMQA",40,0)
 ; Set variable flags for use in IBCCCB/IBCCC2
"RTN","IBCEMQA",41,0)
 S (IBCBASK,IBCBCOPY,IBCAN,IBAUTO,IBCE("EDI"),IBSILENT,IBPRCOB)=1
"RTN","IBCEMQA",42,0)
 S IBDA=IBEOB
"RTN","IBCEMQA",43,0)
 ;
"RTN","IBCEMQA",44,0)
 D CHKB1^IBCCCB
"RTN","IBCEMQA",45,0)
 ;
"RTN","IBCEMQA",46,0)
 S IBIFN=IBIFNH                                   ; restore bill#
"RTN","IBCEMQA",47,0)
 I $G(IBERRMSG)'="" S ERRMSG=IBERRMSG G AUCOBX    ; error message
"RTN","IBCEMQA",48,0)
 D UPDEDI^IBCEM(IB364,"Z")                        ; status updates
"RTN","IBCEMQA",49,0)
AUCOBX ;
"RTN","IBCEMQA",50,0)
 Q
"RTN","IBCEMQA",51,0)
 ;
"RTN","IBCEMQA",52,0)
 ;
"RTN","IBCEMQA",53,0)
AUTH(IBIFN,ERRMSG) ; Entry Point
"RTN","IBCEMQA",54,0)
 ; This procedure's job is to authorize this bill.  The manual
"RTN","IBCEMQA",55,0)
 ; process to authorize a bill is found in routine IBCB1.  This
"RTN","IBCEMQA",56,0)
 ; routine borrows heavily from that routine.
"RTN","IBCEMQA",57,0)
 ;
"RTN","IBCEMQA",58,0)
 ; *** Any changes here should be considered also in IBCB1 ***
"RTN","IBCEMQA",59,0)
 ;
"RTN","IBCEMQA",60,0)
 ; This routine is called when receiving an incoming MRA from
"RTN","IBCEMQA",61,0)
 ; Medicare.  If that MRA/EOB meets certain criteria, then the bill
"RTN","IBCEMQA",62,0)
 ; will become a secondary bill and we will try to authorize it (using
"RTN","IBCEMQA",63,0)
 ; this procedure) and put it in the EDI queue ready for extract.
"RTN","IBCEMQA",64,0)
 ;
"RTN","IBCEMQA",65,0)
 ; Input
"RTN","IBCEMQA",66,0)
 ;    IBIFN - internal bill#
"RTN","IBCEMQA",67,0)
 ;
"RTN","IBCEMQA",68,0)
 ; Output
"RTN","IBCEMQA",69,0)
 ;    ERRMSG - optional output parameter, passed by reference
"RTN","IBCEMQA",70,0)
 ;           - error message text
"RTN","IBCEMQA",71,0)
 ;
"RTN","IBCEMQA",72,0)
 NEW CST,IBTXSTAT,IB364,PRCASV,DFN,STSMSG
"RTN","IBCEMQA",73,0)
 NEW DIE,DA,DR,IBYY
"RTN","IBCEMQA",74,0)
 ;
"RTN","IBCEMQA",75,0)
 ; Check the bill, make sure the current status is valid
"RTN","IBCEMQA",76,0)
 S IBIFN=+$G(IBIFN),ERRMSG=""
"RTN","IBCEMQA",77,0)
 S CST=$P($G(^DGCR(399,IBIFN,0)),U,13)
"RTN","IBCEMQA",78,0)
 I CST="" S ERRMSG="Bill has no current status defined." G AUTHX
"RTN","IBCEMQA",79,0)
 I CST'=2 S ERRMSG="This bill's status is "_$$GET1^DIQ(399,IBIFN_",",.13)_".  It must be REQUEST MRA." G AUTHX
"RTN","IBCEMQA",80,0)
 ;
"RTN","IBCEMQA",81,0)
 ; authorize the bill quietly
"RTN","IBCEMQA",82,0)
 S DIE=399,DA=IBIFN,DR="[IB STATUS]",IBYY="@902" D ^DIE
"RTN","IBCEMQA",83,0)
 ;
"RTN","IBCEMQA",84,0)
 ; Update the review status for all EOB's on file
"RTN","IBCEMQA",85,0)
 D STAT^IBCEMU2(IBIFN,3)     ; Accepted - Complete EOB
"RTN","IBCEMQA",86,0)
 ;
"RTN","IBCEMQA",87,0)
 ; Checks for need to add any codes to bill for EDI (call in quiet mode)
"RTN","IBCEMQA",88,0)
 D AUTOCK^IBCEU2(IBIFN,1)
"RTN","IBCEMQA",89,0)
 ;
"RTN","IBCEMQA",90,0)
 ; Calculate transmittable status
"RTN","IBCEMQA",91,0)
 ;   0 = not transmittable
"RTN","IBCEMQA",92,0)
 ;   1 = yes, live transmittable
"RTN","IBCEMQA",93,0)
 ;   2 = yes, test transmittable
"RTN","IBCEMQA",94,0)
 S IBTXSTAT=+$$TXMT^IBCEF4(IBIFN)
"RTN","IBCEMQA",95,0)
 ;
"RTN","IBCEMQA",96,0)
 ; If transmittable, add this bill to the bill transmission file
"RTN","IBCEMQA",97,0)
 I IBTXSTAT D  I ERRMSG'="" G AUTHX
"RTN","IBCEMQA",98,0)
 . S IB364=$$ADDTBILL^IBCB1(IBIFN,IBTXSTAT)
"RTN","IBCEMQA",99,0)
 . I '$P(IB364,U,3) S ERRMSG="Error loading bill into transmit file."
"RTN","IBCEMQA",100,0)
 . Q
"RTN","IBCEMQA",101,0)
 ;
"RTN","IBCEMQA",102,0)
 ; Pass completed bill to Accounts Receivable (quietly)
"RTN","IBCEMQA",103,0)
 D ARPASS^IBCB1(IBIFN,0)
"RTN","IBCEMQA",104,0)
 I '$G(PRCASV("OKAY")) S ERRMSG="Error while passing bill to A/R." G AUTHX
"RTN","IBCEMQA",105,0)
 ;
"RTN","IBCEMQA",106,0)
 ; Find and process any IB charges on hold
"RTN","IBCEMQA",107,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEMQA",108,0)
 D FIND^IBOHCK(DFN,IBIFN)
"RTN","IBCEMQA",109,0)
 ;
"RTN","IBCEMQA",110,0)
 ; If transmittable, check for unreviewed items & update 364 status
"RTN","IBCEMQA",111,0)
 I IBTXSTAT D
"RTN","IBCEMQA",112,0)
 . S STSMSG=$$STATUS^IBCEF4(IBIFN)
"RTN","IBCEMQA",113,0)
 . I $P(STSMSG,U,1) D UPDEDI^IBCEM($P(STSMSG,U,1),"E")
"RTN","IBCEMQA",114,0)
 . I $P(STSMSG,U,2),$P(STSMSG,U,2)'=$P(STSMSG,U,1) D UPDEDI^IBCEM($P(STSMSG,U,2),"E")
"RTN","IBCEMQA",115,0)
 . Q
"RTN","IBCEMQA",116,0)
 ;
"RTN","IBCEMQA",117,0)
AUTHX ;
"RTN","IBCEMQA",118,0)
 Q
"RTN","IBCEMQA",119,0)
 ;
"RTN","IBCEMQC")
0^23^B29727908
"RTN","IBCEMQC",1,0)
IBCEMQC ;DAOU/ESG - MRA EOB CRITERIA FOR AUTO-AUTHORIZE ;14-MAR-2003
"RTN","IBCEMQC",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMQC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMQC",4,0)
 ;
"RTN","IBCEMQC",5,0)
 Q   ; must be called at proper entry point
"RTN","IBCEMQC",6,0)
 ;
"RTN","IBCEMQC",7,0)
CRIT(IBEOB) ; Function to determine if EOB entry meets the criteria for
"RTN","IBCEMQC",8,0)
 ; auto-authorization and secondary claim submission
"RTN","IBCEMQC",9,0)
 ;
"RTN","IBCEMQC",10,0)
 ; Input:  IBEOB - internal entry number for an entry in 361.1
"RTN","IBCEMQC",11,0)
 ;
"RTN","IBCEMQC",12,0)
 ; Output:  This function returns a pieced string
"RTN","IBCEMQC",13,0)
 ;          [1] 0 or 1, EOB meets criteria
"RTN","IBCEMQC",14,0)
 ;          [2] error message if the first piece is 0
"RTN","IBCEMQC",15,0)
 ;
"RTN","IBCEMQC",16,0)
 NEW IBM,IBM3,IBM5,IBIFN,PCE,REMC,Z,OK,REASON,STOP,IBPTRESP
"RTN","IBCEMQC",17,0)
 ;
"RTN","IBCEMQC",18,0)
 S OK=0,REASON="Unknown",IBEOB=+$G(IBEOB)
"RTN","IBCEMQC",19,0)
 ;
"RTN","IBCEMQC",20,0)
 S IBM=$G(^IBM(361.1,IBEOB,0)) I IBM="" S REASON="No EOB Data Found" G CRITX
"RTN","IBCEMQC",21,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) S REASON="Filing Errors" G CRITX
"RTN","IBCEMQC",22,0)
 I $P(IBM,U,13)'=1 S REASON="Claim Status is "_$$GET1^DIQ(361.1,IBEOB_",",.13)_".  It must be PROCESSED." G CRITX
"RTN","IBCEMQC",23,0)
 ;
"RTN","IBCEMQC",24,0)
 I $P(IBM,U,4)'=1 S REASON="The EOB Type is not Medicare MRA" G CRITX
"RTN","IBCEMQC",25,0)
 ;
"RTN","IBCEMQC",26,0)
 ; If any other MRA's on file for this bill failed the auto-generation
"RTN","IBCEMQC",27,0)
 ; check, then this MRA must also fail the check
"RTN","IBCEMQC",28,0)
 S IBIFN=+IBM,Z=0,STOP=0
"RTN","IBCEMQC",29,0)
 F  S Z=$O(^IBM(361.1,"B",IBIFN,Z)) Q:'Z  D  Q:STOP
"RTN","IBCEMQC",30,0)
 . I Z=IBEOB Q             ; check different EOB records if they exist
"RTN","IBCEMQC",31,0)
 . I $P($G(^IBM(361.1,Z,0)),U,4)'=1 Q     ; must be an MRA
"RTN","IBCEMQC",32,0)
 . I $P($G(^IBM(361.1,Z,30)),U,1)="" Q    ; no problems recorded
"RTN","IBCEMQC",33,0)
 . S REASON="Another MRA for this bill (ien="_Z_") failed the auto-generation criteria check."
"RTN","IBCEMQC",34,0)
 . S STOP=1
"RTN","IBCEMQC",35,0)
 . Q
"RTN","IBCEMQC",36,0)
 I STOP G CRITX
"RTN","IBCEMQC",37,0)
 ;
"RTN","IBCEMQC",38,0)
 ; If this EOB is a split EOB, then don't allow it
"RTN","IBCEMQC",39,0)
 I $$SPLIT^IBCEMU1(IBEOB) S REASON="Claim level remark code MA15 received.  Multiple MRA's" G CRITX
"RTN","IBCEMQC",40,0)
 ;
"RTN","IBCEMQC",41,0)
 ; Call the function that checks the claim level and/or line level
"RTN","IBCEMQC",42,0)
 ; adjustments for this EOB
"RTN","IBCEMQC",43,0)
 I '$$CAS(IBEOB,"B",.REASON) G CRITX      ; "B" for both
"RTN","IBCEMQC",44,0)
 ;
"RTN","IBCEMQC",45,0)
 ; Make sure the patient responsibility amount for this MRA is greater than $0
"RTN","IBCEMQC",46,0)
 S IBPTRESP=$P($G(^IBM(361.1,IBEOB,1)),U,2)      ; Pt Resp Amt 1.02 field
"RTN","IBCEMQC",47,0)
 I $$FT^IBCEF(IBIFN)=3 S IBPTRESP=$$PTRESPI^IBCECOB1(IBEOB)
"RTN","IBCEMQC",48,0)
 I IBPTRESP'>0 S REASON="Patient responsibility dollar amount is less than or equal to $0" G CRITX
"RTN","IBCEMQC",49,0)
 ;
"RTN","IBCEMQC",50,0)
 ; Check the parameter values last of all
"RTN","IBCEMQC",51,0)
 I '$P($G(^IBE(350.9,1,8)),U,11) S REASON="Automatic MRA Processing parameter is turned off.  File 350.9, Field 8.11." G CRITX
"RTN","IBCEMQC",52,0)
 I '$P($G(^IBE(350.9,1,8)),U,12) S REASON="Allow MRA Processing parameter is turned off.  File 350.9, Field 8.12." G CRITX
"RTN","IBCEMQC",53,0)
 ;
"RTN","IBCEMQC",54,0)
 ; At this point, we're OK
"RTN","IBCEMQC",55,0)
 S OK=1,REASON=""
"RTN","IBCEMQC",56,0)
 ;
"RTN","IBCEMQC",57,0)
CRITX ;
"RTN","IBCEMQC",58,0)
 Q OK_U_REASON
"RTN","IBCEMQC",59,0)
 ;
"RTN","IBCEMQC",60,0)
 ;
"RTN","IBCEMQC",61,0)
CAS(IBEOB,ADJFLAG,REASON) ; This function determines if the EOB
"RTN","IBCEMQC",62,0)
 ; adjustment group codes and reason codes from file 361.1 (either
"RTN","IBCEMQC",63,0)
 ; claim level or line level or both) meet the criteria for auto-
"RTN","IBCEMQC",64,0)
 ; authorization and secondary claim submission.
"RTN","IBCEMQC",65,0)
 ;
"RTN","IBCEMQC",66,0)
 ; Input Parameters
"RTN","IBCEMQC",67,0)
 ;        IBEOB    - ien of entry in file 361.1
"RTN","IBCEMQC",68,0)
 ;      ADJFLAG    - adjustment flag
"RTN","IBCEMQC",69,0)
 ;                   "C" - look at claim level adjustments only
"RTN","IBCEMQC",70,0)
 ;                   "L" - look at line level adjustments only
"RTN","IBCEMQC",71,0)
 ;                   "B" - look at both claim and line level adjustments
"RTN","IBCEMQC",72,0)
 ; Output Parameter
"RTN","IBCEMQC",73,0)
 ;       REASON    - error message describing why it failed
"RTN","IBCEMQC",74,0)
 ;
"RTN","IBCEMQC",75,0)
 ; Function Value is either 0 or 1, indicating if it passed the criteria
"RTN","IBCEMQC",76,0)
 ;
"RTN","IBCEMQC",77,0)
 NEW EOBADJ,OK,OKCOMBO,PATRESP,STOP,LNIEN
"RTN","IBCEMQC",78,0)
 ;
"RTN","IBCEMQC",79,0)
 S IBEOB=+$G(IBEOB)
"RTN","IBCEMQC",80,0)
 S ADJFLAG=$G(ADJFLAG,"B")     ; default is "B" if not passed in
"RTN","IBCEMQC",81,0)
 D BUILD           ; build the array of OK group/reason combinations
"RTN","IBCEMQC",82,0)
 S PATRESP=0       ; patient responsibility flag (default false)
"RTN","IBCEMQC",83,0)
 S STOP=0          ; Stop flag
"RTN","IBCEMQC",84,0)
 S OK=0            ; OK flag (function value)
"RTN","IBCEMQC",85,0)
 S REASON=""       ; error reason text
"RTN","IBCEMQC",86,0)
 ;
"RTN","IBCEMQC",87,0)
 ; claim level adjustments
"RTN","IBCEMQC",88,0)
 I $F(".C.B.","."_ADJFLAG_".") D
"RTN","IBCEMQC",89,0)
 . KILL EOBADJ
"RTN","IBCEMQC",90,0)
 . M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCEMQC",91,0)
 . D ADJCHK
"RTN","IBCEMQC",92,0)
 . Q
"RTN","IBCEMQC",93,0)
 ;
"RTN","IBCEMQC",94,0)
 ; Get out if the claim level adjustments failed
"RTN","IBCEMQC",95,0)
 I STOP G CASX
"RTN","IBCEMQC",96,0)
 ;
"RTN","IBCEMQC",97,0)
 ; line level adjustments
"RTN","IBCEMQC",98,0)
 I $F(".L.B.","."_ADJFLAG_".") D
"RTN","IBCEMQC",99,0)
 . S LNIEN=0
"RTN","IBCEMQC",100,0)
 . F  S LNIEN=$O(^IBM(361.1,IBEOB,15,LNIEN)) Q:'LNIEN  D  Q:STOP
"RTN","IBCEMQC",101,0)
 .. KILL EOBADJ
"RTN","IBCEMQC",102,0)
 .. M EOBADJ=^IBM(361.1,IBEOB,15,LNIEN,1)
"RTN","IBCEMQC",103,0)
 .. D ADJCHK
"RTN","IBCEMQC",104,0)
 .. Q
"RTN","IBCEMQC",105,0)
 . Q
"RTN","IBCEMQC",106,0)
 ;
"RTN","IBCEMQC",107,0)
 ; Get out if the line level adjustments failed
"RTN","IBCEMQC",108,0)
 I STOP G CASX
"RTN","IBCEMQC",109,0)
 ;
"RTN","IBCEMQC",110,0)
 ; Get out if there was no patient responsibility adjustments found
"RTN","IBCEMQC",111,0)
 I 'PATRESP S REASON="No Patient Responsibility Adjustments found" G CASX
"RTN","IBCEMQC",112,0)
 ;
"RTN","IBCEMQC",113,0)
 ; At this point, we're OK
"RTN","IBCEMQC",114,0)
 S OK=1,REASON=""
"RTN","IBCEMQC",115,0)
CASX ;
"RTN","IBCEMQC",116,0)
 Q OK
"RTN","IBCEMQC",117,0)
 ;
"RTN","IBCEMQC",118,0)
 ;
"RTN","IBCEMQC",119,0)
ADJCHK ; This procedure checks the adjustments for this EOB.  The group codes
"RTN","IBCEMQC",120,0)
 ; and reason codes are in the EOBADJ array structures from file 361.1.
"RTN","IBCEMQC",121,0)
 ;
"RTN","IBCEMQC",122,0)
 ;   Variables STOP and REASON will be returned on an error
"RTN","IBCEMQC",123,0)
 ;   Variable PATRESP will be returned if a valid PR adjustment found
"RTN","IBCEMQC",124,0)
 ;
"RTN","IBCEMQC",125,0)
 NEW ADJIEN,GROUP,RSNIEN,RSNCODE
"RTN","IBCEMQC",126,0)
 S ADJIEN=0
"RTN","IBCEMQC",127,0)
 F  S ADJIEN=$O(EOBADJ(ADJIEN)) Q:'ADJIEN  D  Q:STOP
"RTN","IBCEMQC",128,0)
 . S GROUP=$P($G(EOBADJ(ADJIEN,0)),U,1)
"RTN","IBCEMQC",129,0)
 . I GROUP="LQ" Q      ; line level remark code kludge: 42 rec [3]
"RTN","IBCEMQC",130,0)
 . I GROUP="" S GROUP="<Undefined>"
"RTN","IBCEMQC",131,0)
 . I '$D(OKCOMBO(GROUP)) S STOP=1,REASON="Unacceptable Claim Adjustment Group Code: "_GROUP Q
"RTN","IBCEMQC",132,0)
 . S RSNIEN=0
"RTN","IBCEMQC",133,0)
 . F  S RSNIEN=$O(EOBADJ(ADJIEN,1,RSNIEN)) Q:'RSNIEN  D  Q:STOP
"RTN","IBCEMQC",134,0)
 .. S RSNCODE=$P($G(EOBADJ(ADJIEN,1,RSNIEN,0)),U,1)
"RTN","IBCEMQC",135,0)
 .. ;
"RTN","IBCEMQC",136,0)
 .. ; Ignore some special adjustment data that is filed with the MRA
"RTN","IBCEMQC",137,0)
 .. I GROUP="PR",RSNCODE="AAA" Q    ; Allowed Amount: 41 rec [3]
"RTN","IBCEMQC",138,0)
 .. I GROUP="OA",RSNCODE="AB3" Q    ; Covered Amount: 15 rec [3]
"RTN","IBCEMQC",139,0)
 .. ;
"RTN","IBCEMQC",140,0)
 .. I RSNCODE="" S RSNCODE="<Undefined>"
"RTN","IBCEMQC",141,0)
 .. I '$D(OKCOMBO(GROUP,RSNCODE)) S STOP=1,REASON="Unacceptable Reason Code ("_RSNCODE_") for Claim Adjustment Group Code ("_GROUP_")" Q
"RTN","IBCEMQC",142,0)
 .. ;
"RTN","IBCEMQC",143,0)
 .. ; Set the flag if the group is PR
"RTN","IBCEMQC",144,0)
 .. I GROUP="PR" S PATRESP=1
"RTN","IBCEMQC",145,0)
 .. Q
"RTN","IBCEMQC",146,0)
 . Q
"RTN","IBCEMQC",147,0)
ADJCHKX ;
"RTN","IBCEMQC",148,0)
 Q
"RTN","IBCEMQC",149,0)
 ;
"RTN","IBCEMQC",150,0)
 ;
"RTN","IBCEMQC",151,0)
BUILD ; This procedure builds the OKCOMBO array which identifies which
"RTN","IBCEMQC",152,0)
 ; combinations of group codes and reason codes are acceptable
"RTN","IBCEMQC",153,0)
 ;
"RTN","IBCEMQC",154,0)
 NEW LN,LINE,GROUP,RSNLST,R,RSN
"RTN","IBCEMQC",155,0)
 KILL OKCOMBO
"RTN","IBCEMQC",156,0)
 F LN=1:1 D  Q:$P(LINE,";",4)=""&$D(OKCOMBO)
"RTN","IBCEMQC",157,0)
 . S LINE=$T(OKCOMBO+LN)
"RTN","IBCEMQC",158,0)
 . S GROUP=$P(LINE,";",3) Q:GROUP=""
"RTN","IBCEMQC",159,0)
 . S RSNLST=$P(LINE,";",4) Q:RSNLST=""
"RTN","IBCEMQC",160,0)
 . F R=1:1:$L(RSNLST,",") D
"RTN","IBCEMQC",161,0)
 .. S RSN=$P(RSNLST,",",R) Q:RSN=""
"RTN","IBCEMQC",162,0)
 .. S OKCOMBO(GROUP,RSN)=""
"RTN","IBCEMQC",163,0)
 .. Q
"RTN","IBCEMQC",164,0)
 . Q
"RTN","IBCEMQC",165,0)
BUILDX ;
"RTN","IBCEMQC",166,0)
 Q
"RTN","IBCEMQC",167,0)
 ;
"RTN","IBCEMQC",168,0)
 ;
"RTN","IBCEMQC",169,0)
OKCOMBO ; This section lists OK combinations of adjustment category group codes
"RTN","IBCEMQC",170,0)
 ; and associated reason codes.
"RTN","IBCEMQC",171,0)
 ; The format is as follows - semi-colon delimiter
"RTN","IBCEMQC",172,0)
 ;     [3] Adjustment category (group code)
"RTN","IBCEMQC",173,0)
 ;     [4] List of acceptable reason codes - comma delimiter
"RTN","IBCEMQC",174,0)
 ;
"RTN","IBCEMQC",175,0)
 ; PR-AAA is created by VistA for the Allowed Amount
"RTN","IBCEMQC",176,0)
 ; OA-AB3 is created by VistA for the Covered Amount
"RTN","IBCEMQC",177,0)
 ; LQ-zzz is created by VistA for the Line Level remark
"RTN","IBCEMQC",178,0)
 ;
"RTN","IBCEMQC",179,0)
 ;;CO;A2,B6,42,45
"RTN","IBCEMQC",180,0)
 ;;PR;1,2,66,AAA
"RTN","IBCEMQC",181,0)
 ;;OA;AB3
"RTN","IBCEMQC",182,0)
 ;
"RTN","IBCEMRAA")
0^31^B61733871
"RTN","IBCEMRAA",1,0)
IBCEMRAA ;ALB/DSM - MEDICARE REMITTANCE ADVICE DETAIL-PART A ;27-MAR-2003
"RTN","IBCEMRAA",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMRAA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMRAA",4,0)
 ;
"RTN","IBCEMRAA",5,0)
 Q  ; must call an entry point
"RTN","IBCEMRAA",6,0)
 ;
"RTN","IBCEMRAA",7,0)
 ;  This routine prints MRA Report for UB92 (Part A) Form Type
"RTN","IBCEMRAA",8,0)
 ;
"RTN","IBCEMRAA",9,0)
MRA(IBIFN) ;;Module - Entry point to print ALL MRA reports, for a given IBIFN.
"RTN","IBCEMRAA",10,0)
 ; This entry point doesn't ask for a Bill Number, it must pass IBIFN as Input.
"RTN","IBCEMRAA",11,0)
 ; It will prompt the user for a device.
"RTN","IBCEMRAA",12,0)
 ;
"RTN","IBCEMRAA",13,0)
 ; Input   IBIFN  = ien of Bill Number (required)
"RTN","IBCEMRAA",14,0)
 ;
"RTN","IBCEMRAA",15,0)
 N IBQUIT,IBPGN S IBQUIT=0
"RTN","IBCEMRAA",16,0)
 D ENT1
"RTN","IBCEMRAA",17,0)
 Q  ;MRA
"RTN","IBCEMRAA",18,0)
 ;
"RTN","IBCEMRAA",19,0)
ENT ; Menu Option Entry Point
"RTN","IBCEMRAA",20,0)
 N IBQUIT,IBEOB,IBIFN,FRMTYP,IBPGN
"RTN","IBCEMRAA",21,0)
 S IBQUIT=0
"RTN","IBCEMRAA",22,0)
 D GETBIL I IBQUIT Q   ;ENT
"RTN","IBCEMRAA",23,0)
 ;
"RTN","IBCEMRAA",24,0)
ENT1 ; Prompt for a print device and print MRA Reports
"RTN","IBCEMRAA",25,0)
 D DEV^IBCEMRAX(IBIFN) I IBQUIT Q    ; device handling  ENT1
"RTN","IBCEMRAA",26,0)
 ;
"RTN","IBCEMRAA",27,0)
PROC ; This section must have IBIFN defined
"RTN","IBCEMRAA",28,0)
 ; This section is called as both a foreground and a background process,
"RTN","IBCEMRAA",29,0)
 ; so all write stmts need to consider printing in both cases.
"RTN","IBCEMRAA",30,0)
 N FRMTYP,IEN,IBZDATA,INPAT
"RTN","IBCEMRAA",31,0)
 S IBQUIT=$G(IBQUIT)
"RTN","IBCEMRAA",32,0)
 S FRMTYP=$$FT^IBCEF(IBIFN)    ;Form Type
"RTN","IBCEMRAA",33,0)
 S INPAT=$$INPAT^IBCEF(IBIFN)  ;Inpatient Flag
"RTN","IBCEMRAA",34,0)
 ;
"RTN","IBCEMRAA",35,0)
 ; Get Service Line Level Data from 837 Extract - Make the appropriate call
"RTN","IBCEMRAA",36,0)
 ; based on the Bill's Form Type 3=UB92  ; 2=HCFA 1500
"RTN","IBCEMRAA",37,0)
 D  ;
"RTN","IBCEMRAA",38,0)
 . I FRMTYP=2 D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)","IBZDATA",,IBIFN) Q
"RTN","IBCEMRAA",39,0)
 . D F^IBCEF("N-UB92 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEMRAA",40,0)
 ;
"RTN","IBCEMRAA",41,0)
 ; For a given IBIFN, print all MRA's on file for that Bill
"RTN","IBCEMRAA",42,0)
 S IEN=0
"RTN","IBCEMRAA",43,0)
 F  S IEN=$O(^IBM(361.1,"B",IBIFN,IEN)) Q:'IEN  D  I IBQUIT Q
"RTN","IBCEMRAA",44,0)
 . I $P($G(^IBM(361.1,IEN,0)),U,4)'=1 Q  ;not an MRA
"RTN","IBCEMRAA",45,0)
 . D PRNTMRA  ; print an MRA
"RTN","IBCEMRAA",46,0)
 ;
"RTN","IBCEMRAA",47,0)
 ; Force a form feed at end of a printer report
"RTN","IBCEMRAA",48,0)
 I $E(IOST,1,2)'["C-" W @IOF
"RTN","IBCEMRAA",49,0)
 ; Pause on screen before exiting
"RTN","IBCEMRAA",50,0)
 I 'IBQUIT,$E(IOST,1,2)["C-" W ! S DIR("A")="Press RETURN to continue: ",DIR(0)="EA" D ^DIR K DIR
"RTN","IBCEMRAA",51,0)
 ;
"RTN","IBCEMRAA",52,0)
 ; Quit if called from a background process (ZTQUEUED defined)
"RTN","IBCEMRAA",53,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q  ;PROC
"RTN","IBCEMRAA",54,0)
 D ^%ZISC     ; handle device closing before exiting
"RTN","IBCEMRAA",55,0)
 Q   ;PROC
"RTN","IBCEMRAA",56,0)
 ;
"RTN","IBCEMRAA",57,0)
PRNTMRA ; Print a single MRA
"RTN","IBCEMRAA",58,0)
 ; Input IEN - the ien# of EOB file (361.1); Required
"RTN","IBCEMRAA",59,0)
 S IBPGN=0
"RTN","IBCEMRAA",60,0)
 ; Print Part B - HCFA 1500
"RTN","IBCEMRAA",61,0)
 I FRMTYP=2 D PRNT^IBCEMRAB Q  ;PRNTMRA
"RTN","IBCEMRAA",62,0)
 ;
"RTN","IBCEMRAA",63,0)
 ; Print Part A - Institutional next
"RTN","IBCEMRAA",64,0)
 ; Claim Level
"RTN","IBCEMRAA",65,0)
 N RSNCD,NCVRCHRG,IBILL,IBILLU,IBCOINS,IBCTADJ,IBEOB,RMKS,IBFD,IBTD,IBDED,CLMADJ
"RTN","IBCEMRAA",66,0)
 I IBPGN>1 D PAUSE^IBCEMRAX I IBQUIT Q  ;pause between EOB reports
"RTN","IBCEMRAA",67,0)
 D CLMDATA,CLMHDR I IBQUIT Q
"RTN","IBCEMRAA",68,0)
 D CLMPRNT
"RTN","IBCEMRAA",69,0)
 ;
"RTN","IBCEMRAA",70,0)
 ; Print Service Line Level Adjustments - check if exist
"RTN","IBCEMRAA",71,0)
 I $D(^IBM(361.1,IEN,15)) D  I IBQUIT Q
"RTN","IBCEMRAA",72,0)
 . I ($Y+4)>IOSL D PAUSE^IBCEMRAX Q:IBQUIT  W @IOF D CLMHDR
"RTN","IBCEMRAA",73,0)
 . D SRVHDR^IBCEMRAX,SRVDATA^IBCEMRAX
"RTN","IBCEMRAA",74,0)
 ;
"RTN","IBCEMRAA",75,0)
 ; Print Disclaimer
"RTN","IBCEMRAA",76,0)
 D DSCLMR^IBCEMRAX
"RTN","IBCEMRAA",77,0)
 Q  ;PRTMRA
"RTN","IBCEMRAA",78,0)
 ;
"RTN","IBCEMRAA",79,0)
GETBIL ; Prompt the user for a Bill#. Get INIFN and IBEOB.
"RTN","IBCEMRAA",80,0)
 ;
"RTN","IBCEMRAA",81,0)
 N DIC,Y W !
"RTN","IBCEMRAA",82,0)
 ; Access Explanation Of Benefits File #361.1
"RTN","IBCEMRAA",83,0)
 ; Screen: only allow access to EOB's of Type = 1 (Medicare MRA)
"RTN","IBCEMRAA",84,0)
 S DIC="^IBM(361.1,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,4)=1"
"RTN","IBCEMRAA",85,0)
 S DIC("W")="D EOBLST^IBCEMU1(Y)"   ; modify generic lister
"RTN","IBCEMRAA",86,0)
 D ^DIC
"RTN","IBCEMRAA",87,0)
 I Y<1!$D(DTOUT)!$D(DUOUT) S IBQUIT=1 Q  ; GETBIL
"RTN","IBCEMRAA",88,0)
 S IBIFN=+$P(Y,U,2)   ; get index to Bill file (#399)
"RTN","IBCEMRAA",89,0)
 Q  ;GETBIL
"RTN","IBCEMRAA",90,0)
 ;
"RTN","IBCEMRAA",91,0)
CLMDATA ; Get MRA Claim Level data of EOB file (#361.1)
"RTN","IBCEMRAA",92,0)
 N I,RCNT,GRPCD,GLVL,GLVLD,RLVL,RLVLD,RCDED,RCOINS,RCTADJ,RCNCVR,RCLMADJ,CLMLVL
"RTN","IBCEMRAA",93,0)
 F I=1:1:5 S @($P($T(TABLE+I),";",3))=$P($T(TABLE+I),";",4)
"RTN","IBCEMRAA",94,0)
 ;
"RTN","IBCEMRAA",95,0)
 ; Get Top Levels of EOB file (#361.1)
"RTN","IBCEMRAA",96,0)
 F I=0,1,3:1:6 S IBEOB(I)=$G(^IBM(361.1,IEN,I))
"RTN","IBCEMRAA",97,0)
 ;
"RTN","IBCEMRAA",98,0)
 ; Get Claim Level Remarks Code from appropriate levels of 361.1 based on
"RTN","IBCEMRAA",99,0)
 ; whether Bill is Outpatient or Inpatient.
"RTN","IBCEMRAA",100,0)
 D  ;
"RTN","IBCEMRAA",101,0)
 . I INPAT S RMKS=IBEOB(5) Q   ; Inpatient remarks code
"RTN","IBCEMRAA",102,0)
 . S RMKS=$P(IBEOB(3),U,3,7)   ; Outpatient remarks code
"RTN","IBCEMRAA",103,0)
 ;
"RTN","IBCEMRAA",104,0)
 ; Get Group Level Data
"RTN","IBCEMRAA",105,0)
 ; RLVLD=reason_code^amount^quantity^reason text
"RTN","IBCEMRAA",106,0)
 ; CLMLVL=Claim Level Flag indicating where the displayed data is coming from
"RTN","IBCEMRAA",107,0)
 ; 1=Claim Level; 0=Line Level
"RTN","IBCEMRAA",108,0)
 ;
"RTN","IBCEMRAA",109,0)
 S (GLVL,RLVL,RCNT,NCVRCHRG,IBDED,IBCOINS,IBCTADJ,CLMADJ,CLMLVL)=0
"RTN","IBCEMRAA",110,0)
 F  S GLVL=$O(^IBM(361.1,IEN,10,GLVL)) Q:'GLVL  S GLVLD=^(GLVL,0) D  ;
"RTN","IBCEMRAA",111,0)
 . S GRPCD=$P(GLVLD,U),RLVL=0
"RTN","IBCEMRAA",112,0)
 . F  S RLVL=$O(^IBM(361.1,IEN,10,GLVL,1,RLVL)) Q:'RLVL  S RLVLD=^(RLVL,0) D  ;
"RTN","IBCEMRAA",113,0)
 . . S RSNCD=$P(RLVLD,U)
"RTN","IBCEMRAA",114,0)
 . . I GRPCD="PR",RSNCD="AAA" Q   ;exception
"RTN","IBCEMRAA",115,0)
 . . I GRPCD="OA",RSNCD="AB3" Q   ;exception
"RTN","IBCEMRAA",116,0)
 . . I GRPCD="LQ" Q               ;exception
"RTN","IBCEMRAA",117,0)
 . . S RCNT=RCNT+1,RSNCD(RCNT)=RSNCD ;display
"RTN","IBCEMRAA",118,0)
 . . I RCLMADJ[(","_RSNCD_",") S CLMADJ=CLMADJ+$P(RLVLD,U,2),CLMLVL=1 ;Claim Adjustment
"RTN","IBCEMRAA",119,0)
 . . ; Get data from Claim Level: calculate Coinsurance, Contractual Adjustment,
"RTN","IBCEMRAA",120,0)
 . . ; Noncovered Charges and Deductible amounts
"RTN","IBCEMRAA",121,0)
 . . I GRPCD="PR",RCOINS[(","_RSNCD_",") S IBCOINS=$P(RLVLD,U,2),CLMLVL=1 Q
"RTN","IBCEMRAA",122,0)
 . . I GRPCD="PR",RCDED[(","_RSNCD_",") S IBDED=IBDED+$P(RLVLD,U,2),CLMLVL=1 Q
"RTN","IBCEMRAA",123,0)
 . . I GRPCD="CO" D  ;
"RTN","IBCEMRAA",124,0)
 . . . I RCTADJ[(","_RSNCD_",") S IBCTADJ=IBCTADJ+$P(RLVLD,U,2),CLMLVL=1
"RTN","IBCEMRAA",125,0)
 . . . I RCNCVR'[(","_RSNCD_",") S NCVRCHRG=NCVRCHRG+$P(RLVLD,U,2),CLMLVL=1
"RTN","IBCEMRAA",126,0)
 ;
"RTN","IBCEMRAA",127,0)
 ; If no data was found at Claim Level, get data from Line Level
"RTN","IBCEMRAA",128,0)
 I 'CLMLVL D LINELVL^IBCEMRAX
"RTN","IBCEMRAA",129,0)
 S IBILL=$G(^DGCR(399,$P(IBEOB(0),U),0)),IBILLU=$G(^DGCR(399,$P(IBEOB(0),U),"U"))
"RTN","IBCEMRAA",130,0)
 S IBFD=$$FMTE^XLFDT($P(IBILLU,U),5),IBTD=$$FMTE^XLFDT($P(IBILLU,U,2),5)
"RTN","IBCEMRAA",131,0)
 ;
"RTN","IBCEMRAA",132,0)
 Q  ;CLMDATA
"RTN","IBCEMRAA",133,0)
 ;
"RTN","IBCEMRAA",134,0)
CLMHDR ; Print Claim Level Header
"RTN","IBCEMRAA",135,0)
 S IBPGN=IBPGN+1
"RTN","IBCEMRAA",136,0)
 I IBPGN=1,$E(IOST,1,2)["C-" W @IOF  ; refresh terminal screen on 1st hdr
"RTN","IBCEMRAA",137,0)
 ;
"RTN","IBCEMRAA",138,0)
 ; Rows 1 to 3
"RTN","IBCEMRAA",139,0)
 W !,?108,"Medicare-equivalent",!?110,"Remittance Advice",!
"RTN","IBCEMRAA",140,0)
 N PRVDR,LVL,STATE
"RTN","IBCEMRAA",141,0)
 ; Retrieve the Provider data from IB Site Parameters file - ^IBE(350.9)
"RTN","IBCEMRAA",142,0)
 S PRVDR=$G(^IBE(350.9,1,2))
"RTN","IBCEMRAA",143,0)
 ; ProviderName^AgentCashierAddress^City^State^Zip
"RTN","IBCEMRAA",144,0)
 ;
"RTN","IBCEMRAA",145,0)
 F LVL=1:1:5 S PRVDR(LVL)=$P(PRVDR,U,LVL)
"RTN","IBCEMRAA",146,0)
 ; PRVDR(1)  Provider Name (Agent Cashier Mail Symbol)
"RTN","IBCEMRAA",147,0)
 ; PRVDR(2)  Agent Cashier Street Address
"RTN","IBCEMRAA",148,0)
 ; PRVDR(3)  Agent Cashier City
"RTN","IBCEMRAA",149,0)
 ; PRVDR(4)  Agent Cashier State
"RTN","IBCEMRAA",150,0)
 ; PRVDR(5)  Agent Cashier Zip
"RTN","IBCEMRAA",151,0)
 ;
"RTN","IBCEMRAA",152,0)
 ; resolve the State File Pointer in PRVDR(4) & get State Abbreviation
"RTN","IBCEMRAA",153,0)
 S STATE=$S(PRVDR(4)'="":$P($G(^DIC(5,PRVDR(4),0)),U,2),1:"")
"RTN","IBCEMRAA",154,0)
 ; Row 4 to 15
"RTN","IBCEMRAA",155,0)
 W !!!,"DEPT OF VETERANS AFFAIRS"
"RTN","IBCEMRAA",156,0)
 W !,PRVDR(2),?103,"PROVIDER #:",?117,$P($G(^IBE(350.9,1,1)),U,5) ;Tax ID
"RTN","IBCEMRAA",157,0)
 W !,PRVDR(1),?103,"PAGE #:",?117,$J(IBPGN,3)
"RTN","IBCEMRAA",158,0)
 W !,PRVDR(3),", ",STATE," ",PRVDR(5),?103,"DATE: ",?117,$$FMTE^XLFDT($P(IBEOB(0),U,6),5)
"RTN","IBCEMRAA",159,0)
 W !!,"PATIENT NAME",?24,"PATIENT CNTRL NUMBER",?48,"RC",?52,"REM",?58,"DRG#",?72,"DRG OUT AMT"
"RTN","IBCEMRAA",160,0)
 W ?86,"COINSURANCE",?100,"PAT REFUND",?115,"CONTRACT ADJ"
"RTN","IBCEMRAA",161,0)
 W !,"HIC NUMBER",?24,"ICN NUMBER",?48,"RC",?52,"REM",?58,"OUTCD CAPCD",?72,"DRG CAP AMT"
"RTN","IBCEMRAA",162,0)
 W ?86,"COVD CHGS",?100,"ESRD NET ADJ",?115,"PER DIEM RTE"
"RTN","IBCEMRAA",163,0)
 W !,"FROM DT    THRU DT",?24,"NACHG  HICHG  TOB",?48,"RC",?52,"REM",?58,"PROF COMP",?72,"MSP PAYMT"
"RTN","IBCEMRAA",164,0)
 W ?86,"NCOVD CHGS",?100,"INTEREST",?115,"PROC CD AMT"
"RTN","IBCEMRAA",165,0)
 W !,"CLM STATUS",?24,"COST  COVDY  NCOVDY",?48,"RC",?52,"REM",?58,"DRG AMT",?72,"DEDUCTIBLES"
"RTN","IBCEMRAA",166,0)
 W ?86,"DENIED CHGS",?100,"CLAIM ADJ",?115,"NET REIMB",!
"RTN","IBCEMRAA",167,0)
 Q  ;CLMHDR
"RTN","IBCEMRAA",168,0)
 ;
"RTN","IBCEMRAA",169,0)
CLMPRNT ; - Print Claim Level part of the Report
"RTN","IBCEMRAA",170,0)
 N PTNM,PTLEN,HIC
"RTN","IBCEMRAA",171,0)
 ; ROW 16
"RTN","IBCEMRAA",172,0)
 ; format and standardize patient name for display
"RTN","IBCEMRAA",173,0)
 S PTNM("FILE")=2,PTNM("IENS")=$P(IBILL,U,2),PTNM("FIELD")=.01,PTLEN=23
"RTN","IBCEMRAA",174,0)
 S PTNM=$$BLDNAME^XLFNAME(.PTNM,PTLEN)
"RTN","IBCEMRAA",175,0)
 I $P(IBEOB(6),U,1)'="" S PTNM=$E($P(IBEOB(6),U,1),1,PTLEN)
"RTN","IBCEMRAA",176,0)
 W !,PTNM
"RTN","IBCEMRAA",177,0)
 ; Account # (Bill #)
"RTN","IBCEMRAA",178,0)
 W ?24,+$$SITE^VASITE(),"-",$P(IBILL,U)
"RTN","IBCEMRAA",179,0)
 ; Reason Code,Remarks Code 1
"RTN","IBCEMRAA",180,0)
 W ?48,$G(RSNCD(1)),?52,$P(RMKS,U,1)
"RTN","IBCEMRAA",181,0)
 ; DRG Code Used
"RTN","IBCEMRAA",182,0)
 W ?58,$P(IBEOB(0),U,10)
"RTN","IBCEMRAA",183,0)
 ; Coinsurance, Contract Adjustment
"RTN","IBCEMRAA",184,0)
 W ?86,$J($G(IBCOINS),11,2),?115,$J($G(IBCTADJ),11,2)
"RTN","IBCEMRAA",185,0)
 ; ROW 17
"RTN","IBCEMRAA",186,0)
 ; HIC & ICN
"RTN","IBCEMRAA",187,0)
 S HIC=$S($P(IBEOB(6),U,2)'="":$P(IBEOB(6),U,2),$$WNRBILL^IBEFUNC(IBIFN,1):$P($G(^DGCR(399,$P(IBEOB(0),U),"I1")),U,2),1:$P($G(^DGCR(399,$P(IBEOB(0),U),"I2")),U,2))
"RTN","IBCEMRAA",188,0)
 W !,HIC,?24,$P(IBEOB(0),U,14)
"RTN","IBCEMRAA",189,0)
 ; Reason Code, Remarks Code 2
"RTN","IBCEMRAA",190,0)
 W ?48,$G(RSNCD(2)),?52,$P(RMKS,U,2)
"RTN","IBCEMRAA",191,0)
 ; covered charges
"RTN","IBCEMRAA",192,0)
 W ?86,$J($P(IBEOB(1),U,3),11,2)
"RTN","IBCEMRAA",193,0)
 ; Outpatient Reimbursement Rate
"RTN","IBCEMRAA",194,0)
 I 'INPAT W ?115,$J($P(IBEOB(3),U,1),11,2)
"RTN","IBCEMRAA",195,0)
 ; ROW 18
"RTN","IBCEMRAA",196,0)
 W !,IBFD,?12,IBTD
"RTN","IBCEMRAA",197,0)
 ; Type of Bill (=Location of Care_Bill Clasification_Frequency)
"RTN","IBCEMRAA",198,0)
 W ?38,$P(IBILL,U,24)_$P($G(^DGCR(399.1,$P(IBILL,U,25),0)),U,2)_$P(IBILL,U,26)
"RTN","IBCEMRAA",199,0)
 ; Reason Code,Remarks Code 3
"RTN","IBCEMRAA",200,0)
 W ?48,$G(RSNCD(3)),?52,$P(RMKS,U,3)
"RTN","IBCEMRAA",201,0)
 ; non-covered amount (Pt Responsibility)
"RTN","IBCEMRAA",202,0)
 W ?86,$J(NCVRCHRG,11,2)
"RTN","IBCEMRAA",203,0)
 ; Interest Amount
"RTN","IBCEMRAA",204,0)
 I $P(IBEOB(1),U,7) W ?100,$J($P(IBEOB(1),U,7),11,2)
"RTN","IBCEMRAA",205,0)
 ; Procedure code amount
"RTN","IBCEMRAA",206,0)
 W ?115,$J($P(IBEOB(3),U,2),11,2)
"RTN","IBCEMRAA",207,0)
 ; ROW 19
"RTN","IBCEMRAA",208,0)
 ; claim status
"RTN","IBCEMRAA",209,0)
 W !?6,$E($P(IBEOB(0),U,21),1,2)
"RTN","IBCEMRAA",210,0)
 ; M-Care Inp Cost Report Day Ct
"RTN","IBCEMRAA",211,0)
 W ?24,$P(IBEOB(4),U,14)
"RTN","IBCEMRAA",212,0)
 ; M-Care Inp Cov. Days/Visit Ct
"RTN","IBCEMRAA",213,0)
 W ?30,$P(IBEOB(4),U,1)
"RTN","IBCEMRAA",214,0)
 ; Medicare Non-Covered Days
"RTN","IBCEMRAA",215,0)
 W ?38,$P(IBEOB(4),U,19)
"RTN","IBCEMRAA",216,0)
 ; Reason Code,Remarks Code 4
"RTN","IBCEMRAA",217,0)
 W ?48,$G(RSNCD(4)),?52,$P(RMKS,U,4)
"RTN","IBCEMRAA",218,0)
 ; M-Care Inp Claim Drg Amt
"RTN","IBCEMRAA",219,0)
 W ?58,$J($P(IBEOB(4),U,3),11,2)
"RTN","IBCEMRAA",220,0)
 ; if Group Code is PR, print the sum of Reason Codes 1 and 66
"RTN","IBCEMRAA",221,0)
 W ?72,$J($G(IBDED),11,2)
"RTN","IBCEMRAA",222,0)
 ; Claim Adjustments
"RTN","IBCEMRAA",223,0)
 W ?100,$J($G(CLMADJ),10,2)
"RTN","IBCEMRAA",224,0)
 ; net reimburse
"RTN","IBCEMRAA",225,0)
 W ?115,$J($P(IBEOB(1),U,1),11,2)
"RTN","IBCEMRAA",226,0)
 ; Row 20
"RTN","IBCEMRAA",227,0)
 ; Reason Code,Remarks Code 5
"RTN","IBCEMRAA",228,0)
 W !?48,$G(RSNCD(5)),?52,$P(RMKS,U,5)
"RTN","IBCEMRAA",229,0)
 ;
"RTN","IBCEMRAA",230,0)
 Q  ; CLMPRNT
"RTN","IBCEMRAA",231,0)
TABLE ;;variable;list of Reason Codes w/leading & trailing commas; description;
"RTN","IBCEMRAA",232,0)
 ;;RCDED;,1,66,;reason code to calc deductible amount;
"RTN","IBCEMRAA",233,0)
 ;;RCOINS;,2,;reason code to calc coinsurance amount;
"RTN","IBCEMRAA",234,0)
 ;;RCTADJ;,A2,;reason codes to calc contract adjustment amount;
"RTN","IBCEMRAA",235,0)
 ;;RCNCVR;,1,2,23,42,45,66,70,71,89,94,97,118,A1,A2,B3,B6,;reason codes excluded from calc of noncovered charges amount;
"RTN","IBCEMRAA",236,0)
 ;;RCLMADJ;,42,45,70,94,97,122,A1,;reason codes to calc claim adj
"RTN","IBCEMRAA",237,0)
 ;
"RTN","IBCEMRAB")
0^32^B51933708
"RTN","IBCEMRAB",1,0)
IBCEMRAB ;ALB/DSM - MEDICARE REMITTANCE ADVICE DETAIL-PART B ;15-APR-03
"RTN","IBCEMRAB",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMRAB",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMRAB",4,0)
 ;
"RTN","IBCEMRAB",5,0)
 Q  ; this routine must be called at an entry point
"RTN","IBCEMRAB",6,0)
 ;
"RTN","IBCEMRAB",7,0)
 ;  This routine prints MRA Report for HCFA 1500 (Part B) Form Type
"RTN","IBCEMRAB",8,0)
PRNT ;
"RTN","IBCEMRAB",9,0)
 ; Claim Level Adjustments
"RTN","IBCEMRAB",10,0)
 N DIC,Y,IBEOB,IBILL,IBILLU,IBTD,IBFD,TOT,PRFRMID
"RTN","IBCEMRAB",11,0)
 D GDATA,HDR
"RTN","IBCEMRAB",12,0)
 ;
"RTN","IBCEMRAB",13,0)
 ; Initialize Totals
"RTN","IBCEMRAB",14,0)
 S (TOT("ALWD"),TOT("SRVDED"),TOT("SRVCOIN"),TOT("SRVADJ"),TOT("PAID"))=0
"RTN","IBCEMRAB",15,0)
 ;
"RTN","IBCEMRAB",16,0)
 ; Service Line Level Adjustments
"RTN","IBCEMRAB",17,0)
 I $D(^IBM(361.1,IEN,15)) D SRVPRNT I IBQUIT Q
"RTN","IBCEMRAB",18,0)
 ;
"RTN","IBCEMRAB",19,0)
 ; Print Totals Line
"RTN","IBCEMRAB",20,0)
 D TOTAL
"RTN","IBCEMRAB",21,0)
 ;
"RTN","IBCEMRAB",22,0)
 ; Print Disclaimer
"RTN","IBCEMRAB",23,0)
 D DSCLMR^IBCEMRAX
"RTN","IBCEMRAB",24,0)
 ;
"RTN","IBCEMRAB",25,0)
 Q  ;PRNT
"RTN","IBCEMRAB",26,0)
 ;
"RTN","IBCEMRAB",27,0)
GDATA ; Get MRA data
"RTN","IBCEMRAB",28,0)
 ;
"RTN","IBCEMRAB",29,0)
 N I
"RTN","IBCEMRAB",30,0)
 F I=0,1,2,3,6 S IBEOB(I)=$G(^IBM(361.1,IEN,I))
"RTN","IBCEMRAB",31,0)
 S IBILL=$G(^DGCR(399,$P(IBEOB(0),U),0)),IBILLU=$G(^DGCR(399,$P(IBEOB(0),U),"U"))
"RTN","IBCEMRAB",32,0)
 S IBTD=$$FMTE^XLFDT($P(IBILLU,U),5),IBFD=$$FMTE^XLFDT($P(IBILLU,U,2),5)
"RTN","IBCEMRAB",33,0)
 Q  ;GDATA
"RTN","IBCEMRAB",34,0)
 ;
"RTN","IBCEMRAB",35,0)
HDR ; Print Header
"RTN","IBCEMRAB",36,0)
 I $E(IOST,1,2)["C-" W @IOF
"RTN","IBCEMRAB",37,0)
 S IBPGN=IBPGN+1
"RTN","IBCEMRAB",38,0)
 ;
"RTN","IBCEMRAB",39,0)
 ; Row 1,2,3
"RTN","IBCEMRAB",40,0)
 W !,?102,"Medicare-equivalent",!?104,"Remittance Advice",!
"RTN","IBCEMRAB",41,0)
 ; Row 7
"RTN","IBCEMRAB",42,0)
 W !!!!,"DEPT OF VETERANS AFFAIRS"
"RTN","IBCEMRAB",43,0)
 ;
"RTN","IBCEMRAB",44,0)
 N PRVDR,LVL,STATE,LINE,PTNM,PTLEN,RMKS,HIC
"RTN","IBCEMRAB",45,0)
 ; Retrieve the Provider data from IB Site Parameters file - ^IBE(350.9)
"RTN","IBCEMRAB",46,0)
 S PRVDR=$G(^IBE(350.9,1,2))
"RTN","IBCEMRAB",47,0)
 ; ProviderName^AgentCashierAddress^City^State^Zip
"RTN","IBCEMRAB",48,0)
 ;
"RTN","IBCEMRAB",49,0)
 F LVL=1:1:5 S PRVDR(LVL)=$P(PRVDR,U,LVL)
"RTN","IBCEMRAB",50,0)
 ; PRVDR(1)  Provider Name (Agent Cashier Mail Symbol)
"RTN","IBCEMRAB",51,0)
 ; PRVDR(2)  Agent Cashier Street Address
"RTN","IBCEMRAB",52,0)
 ; PRVDR(3)  Agent Cashier City
"RTN","IBCEMRAB",53,0)
 ; PRVDR(4)  Agent Cashier State
"RTN","IBCEMRAB",54,0)
 ; PRVDR(5)  Agent Cashier Zip
"RTN","IBCEMRAB",55,0)
 ;
"RTN","IBCEMRAB",56,0)
 ; resolve the State File Pointer in PRVDR(4) & get State Abbreviation
"RTN","IBCEMRAB",57,0)
 S STATE=$S(PRVDR(4)'="":$P($G(^DIC(5,PRVDR(4),0)),U,2),1:"")
"RTN","IBCEMRAB",58,0)
 ;
"RTN","IBCEMRAB",59,0)
 ; Row 8
"RTN","IBCEMRAB",60,0)
 W !,PRVDR(2),?97,"PROVIDER #:",?111,"VA0"_+$$SITE^VASITE()
"RTN","IBCEMRAB",61,0)
 ; Row 9
"RTN","IBCEMRAB",62,0)
 W !,PRVDR(1),?97,"PAGE #:",?111,$J(IBPGN,3)
"RTN","IBCEMRAB",63,0)
 ; Row 10
"RTN","IBCEMRAB",64,0)
 W !,PRVDR(3),", ",STATE," ",PRVDR(5),?97,"DATE:",?111,$$FMTE^XLFDT($P(IBEOB(0),U,6),5)
"RTN","IBCEMRAB",65,0)
 ; Row 14
"RTN","IBCEMRAB",66,0)
 W !!!!,"PERF PROV",?12,"SERV DATE",?25,"POS",?29,"NOS",?34,"PROC",?40,"MODS",?53,"BILLED",?63,"ALLOWED",?75,"DEDUCT"
"RTN","IBCEMRAB",67,0)
 W ?87,"COINS",?93,"GRP-RC",?107,"AMT",?114,"PROV PD"
"RTN","IBCEMRAB",68,0)
 ; Row 15
"RTN","IBCEMRAB",69,0)
 S $P(LINE,"-",122)="" W !,LINE
"RTN","IBCEMRAB",70,0)
 ;
"RTN","IBCEMRAB",71,0)
 ; format and standardize patient name for display
"RTN","IBCEMRAB",72,0)
 S PTNM("FILE")=2,PTNM("IENS")=$P(IBILL,U,2),PTNM("FIELD")=.01,PTLEN=23
"RTN","IBCEMRAB",73,0)
 S PTNM=$$BLDNAME^XLFNAME(.PTNM,PTLEN)
"RTN","IBCEMRAB",74,0)
 I $P(IBEOB(6),U,1)'="" S PTNM=$E($P(IBEOB(6),U,1),1,PTLEN)
"RTN","IBCEMRAB",75,0)
 ;
"RTN","IBCEMRAB",76,0)
 S HIC=$S($P(IBEOB(6),U,2)'="":$P(IBEOB(6),U,2),$$WNRBILL^IBEFUNC(IBIFN,1):$P($G(^DGCR(399,$P(IBEOB(0),U),"I1")),U,2),1:$P($G(^DGCR(399,$P(IBEOB(0),U),"I2")),U,2))
"RTN","IBCEMRAB",77,0)
 ; Row 17
"RTN","IBCEMRAB",78,0)
 ; Patient Name, HIC, ACNT, ICN, ASG
"RTN","IBCEMRAB",79,0)
 W !!,"NAME",?7,PTNM,?31,"HIC",?35,HIC
"RTN","IBCEMRAB",80,0)
 W ?49,"ACNT",?54,+$$SITE^VASITE(),"-",$P(IBILL,U),?76,"ICN",?80,$P(IBEOB(0),U,14)
"RTN","IBCEMRAB",81,0)
 W ?97,"ASG",?101,$S($P(IBILLU,U,6):"Y",1:"N")
"RTN","IBCEMRAB",82,0)
 ;
"RTN","IBCEMRAB",83,0)
 ; MOA: Medicare Outpatient Remarks Code
"RTN","IBCEMRAB",84,0)
 S RMKS=$P(IBEOB(3),U,3,7) I RMKS="" S RMKS="^^^^"
"RTN","IBCEMRAB",85,0)
 W ?104,"MOA   " I RMKS'?1."^" W $P(RMKS,U,1)," ",$P(RMKS,U,2)
"RTN","IBCEMRAB",86,0)
 I $P(RMKS,U,3,5)'?1."^" S RMKS=$TR(RMKS,U," ") W !,RMKS
"RTN","IBCEMRAB",87,0)
 ; Secondary Performing Provider ID
"RTN","IBCEMRAB",88,0)
 ; On HCFA 1500 Form Type reports, If Medicare WNR is Primary or Secondary, then set Performing Provider ID
"RTN","IBCEMRAB",89,0)
 I $$WNRBILL^IBEFUNC(IBIFN,1)!$$WNRBILL^IBEFUNC(IBIFN,2) S PRFRMID="V"_$$MCRSPEC^IBCEU4(IBIFN,1)_+$$SITE^VASITE()
"RTN","IBCEMRAB",90,0)
 Q  ;HDR
"RTN","IBCEMRAB",91,0)
 ;
"RTN","IBCEMRAB",92,0)
SRVPRNT ; Print Service Level Data of EOB file (#361.1 Level 15)
"RTN","IBCEMRAB",93,0)
 ;
"RTN","IBCEMRAB",94,0)
 N LNLVL,RLVL,RLVLD,LNLVLD,SRVFDT,SRVTDT,UNIT,PRCD,MOD,I
"RTN","IBCEMRAB",95,0)
 N ALWD,GLVL,GLVLD,GRPCD,OPRCD,PAID,RCNT,SRMKS,SRVCOIN
"RTN","IBCEMRAB",96,0)
 N SRVDED,SRVADJ,SRVCHRG,SRVDT,CLMLN,Z
"RTN","IBCEMRAB",97,0)
 ;
"RTN","IBCEMRAB",98,0)
 ; RLVLD=reason_code^amount^quantity^reason text
"RTN","IBCEMRAB",99,0)
 S LNLVL=0
"RTN","IBCEMRAB",100,0)
 F  S LNLVL=$O(^IBM(361.1,IEN,15,LNLVL)) Q:'LNLVL  S LNLVLD=^(LNLVL,0) D  I IBQUIT Q
"RTN","IBCEMRAB",101,0)
 . I ($Y+4)>IOSL D  I IBQUIT Q
"RTN","IBCEMRAB",102,0)
 . . D PAUSE^IBCEMRAX I IBQUIT Q
"RTN","IBCEMRAB",103,0)
 . . W @IOF D HDR
"RTN","IBCEMRAB",104,0)
 . ; From Service Date, To Service Date
"RTN","IBCEMRAB",105,0)
 . S SRVFDT=$P(LNLVLD,U,16),SRVTDT=$P(LNLVLD,U,17)
"RTN","IBCEMRAB",106,0)
 . S SRVFDT=$$FMTE^XLFDT(SRVFDT,5),SRVTDT=$$FMTE^XLFDT(SRVTDT,5)
"RTN","IBCEMRAB",107,0)
 . ; Get Units, Procedure Code, Original Procedure Code
"RTN","IBCEMRAB",108,0)
 . S UNIT=$P(LNLVLD,U,11),PRCD=$P(LNLVLD,U,4),OPRCD=$P(LNLVLD,U,15)
"RTN","IBCEMRAB",109,0)
 . S PAID=$P(LNLVLD,U,3),TOT("PAID")=TOT("PAID")+PAID    ; Provider Paid Amount
"RTN","IBCEMRAB",110,0)
 . S ALWD=$P(LNLVLD,U,13),TOT("ALWD")=TOT("ALWD")+ALWD   ; Allowed Amount
"RTN","IBCEMRAB",111,0)
 . ; Handle Multiple Paid Modifiers from the Service Line Level - string together
"RTN","IBCEMRAB",112,0)
 . K MOD M MOD=^IBM(361.1,IEN,15,LNLVL,2) S MOD="" F I=1:1:4 Q:'$D(MOD(I))  S MOD=MOD_MOD(I,0)
"RTN","IBCEMRAB",113,0)
 . ; Calculate Submitted Service Line Charge
"RTN","IBCEMRAB",114,0)
 . S CLMLN=$P(LNLVLD,U,12)   ; use to match EOB line # to VistA Bill line#
"RTN","IBCEMRAB",115,0)
 . S SRVCHRG=$P($G(IBZDATA(CLMLN)),U,8)*$P($G(IBZDATA(CLMLN)),U,9)
"RTN","IBCEMRAB",116,0)
 . ; Service Line Level Remarks Codes
"RTN","IBCEMRAB",117,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IEN,15,LNLVL,4,Z)) Q:'Z  I $G(^(Z,0))'="" S SRMKS(Z)=$P(^(0),U,2)
"RTN","IBCEMRAB",118,0)
 . ; Get Service Level Group Code/Reason Code Data
"RTN","IBCEMRAB",119,0)
 . S (SRVDED,GLVL,RCNT,SRVCOIN)=0 K RSNCD
"RTN","IBCEMRAB",120,0)
 . F  S GLVL=$O(^IBM(361.1,IEN,15,LNLVL,1,GLVL)) Q:'GLVL  S GLVLD=^(GLVL,0) D  ;
"RTN","IBCEMRAB",121,0)
 . . S GRPCD=$P(GLVLD,U),RLVL=0
"RTN","IBCEMRAB",122,0)
 . . F  S RLVL=$O(^IBM(361.1,IEN,15,LNLVL,1,GLVL,1,RLVL)) Q:'RLVL  S RLVLD=^(RLVL,0),RSNCD=$P(RLVLD,U) D  ;
"RTN","IBCEMRAB",123,0)
 . . . I GRPCD="PR",RSNCD="AAA" Q  ;exception
"RTN","IBCEMRAB",124,0)
 . . . I GRPCD="OA",RSNCD="AB3" Q  ;exception
"RTN","IBCEMRAB",125,0)
 . . . I GRPCD="LQ" Q              ;exception
"RTN","IBCEMRAB",126,0)
 . . . I GRPCD="PR",RSNCD=1 S SRVDED=SRVDED+$P(RLVLD,U,2),TOT("SRVDED")=TOT("SRVDED")+SRVDED Q  ;deductible
"RTN","IBCEMRAB",127,0)
 . . . I GRPCD="PR",RSNCD=2 S SRVCOIN=$P(RLVLD,U,2),TOT("SRVCOIN")=TOT("SRVCOIN")+SRVCOIN Q  ;coinsurance
"RTN","IBCEMRAB",128,0)
 . . . S SRVADJ=$P(RLVLD,U,2),TOT("SRVADJ")=TOT("SRVADJ")+SRVADJ  ;adjustment
"RTN","IBCEMRAB",129,0)
 . . . S RCNT=RCNT+1,RSNCD(RCNT)=GRPCD_"-"_RSNCD_U_SRVADJ
"RTN","IBCEMRAB",130,0)
 . ; Performing Provider ID
"RTN","IBCEMRAB",131,0)
 . W !,$G(PRFRMID)
"RTN","IBCEMRAB",132,0)
 . ; From Date in MMDD (w/leading zero) format
"RTN","IBCEMRAB",133,0)
 . I SRVFDT'="" S SRVDT=$E("00",1,2-$L(+SRVFDT))_+SRVFDT_$E("00",1,2-$L($P(SRVFDT,"/",2)))_$P(SRVFDT,"/",2) W ?12,SRVDT
"RTN","IBCEMRAB",134,0)
 . ; To Date in MMDDYY (w/leading zero) format
"RTN","IBCEMRAB",135,0)
 . I SRVTDT'="" W ?17,$E("00",1,2-$L(+SRVTDT)),+SRVTDT,$E("00",1,2-$L($P(SRVTDT,"/",2))),$P(SRVTDT,"/",2),$E($P(SRVTDT,"/",3),3,4)
"RTN","IBCEMRAB",136,0)
 . ; If To Date is Null, Print From Date with year (if not Null)
"RTN","IBCEMRAB",137,0)
 . I SRVTDT="",SRVFDT'="" W ?17,SRVDT,$E($P(SRVFDT,"/",3),3,4)
"RTN","IBCEMRAB",138,0)
 . ; Place of Service - from 837 Extract from HCFA Service Line Level
"RTN","IBCEMRAB",139,0)
 . W ?25,$P($G(IBZDATA(CLMLN)),U,3)
"RTN","IBCEMRAB",140,0)
 . ; Print Units, Procedure Code Paid, Modifiers, Submitted Line Charge, Allowed Amt, Deductable, Coinsurance
"RTN","IBCEMRAB",141,0)
 . W ?28,UNIT,?34,PRCD,?40,MOD,?49,$J(SRVCHRG,10,2),?60,$J(ALWD,10,2),?71,$J(SRVDED,10,2),?82,$J(SRVCOIN,10,2)
"RTN","IBCEMRAB",142,0)
 . ; Print 1st Line of Group Code-Reason Code, Adjustment Amount, Paid Amount
"RTN","IBCEMRAB",143,0)
 . W ?93,$P($G(RSNCD(1)),U),?100,$J($P($G(RSNCD(1)),U,2),10,2),?111,$J(PAID,10,2)
"RTN","IBCEMRAB",144,0)
 . ; print PRCD Submitted, Remarks if any
"RTN","IBCEMRAB",145,0)
 . I OPRCD'=""!$O(SRMKS(0)) W ! D  ;
"RTN","IBCEMRAB",146,0)
 . . I OPRCD'="" W ?33,"(",OPRCD,")"
"RTN","IBCEMRAB",147,0)
 . . I $O(SRMKS(0)) W ?44,"REM: " S Z=0 F  S Z=$O(SRMKS(Z)) Q:'Z  W SRMKS(Z),$S($O(SRMKS(Z)):",",1:"")
"RTN","IBCEMRAB",148,0)
 . ; Print the rest of Group Code-Reason Code, Reason Code Amount
"RTN","IBCEMRAB",149,0)
 . F I=2:1:RCNT W !?93,$P(RSNCD(I),U),?100,$J($P(RSNCD(I),U,2),10,2)
"RTN","IBCEMRAB",150,0)
 Q  ;SRVPRNT
"RTN","IBCEMRAB",151,0)
 ;
"RTN","IBCEMRAB",152,0)
TOTAL ; Print Totals
"RTN","IBCEMRAB",153,0)
 W !!,"PT RESP ",$J($P($G(IBEOB(1)),U,2),10,2)  ;Patient Responsibility
"RTN","IBCEMRAB",154,0)
 ; Billed Amount, Allowed Amount, Deductable Amount
"RTN","IBCEMRAB",155,0)
 W ?35,"CLAIM TOTAL",?49,$J($P($G(IBEOB(2)),U,4),10,2),?60,$J(TOT("ALWD"),10,2),?71,$J(TOT("SRVDED"),10,2)
"RTN","IBCEMRAB",156,0)
 ; Coinsurance Amount, Adjustment Amount, Paid Amount
"RTN","IBCEMRAB",157,0)
 W ?82,$J(TOT("SRVCOIN"),10,2),?100,$J(TOT("SRVADJ"),10,2),?111,$J(TOT("PAID"),10,2)
"RTN","IBCEMRAB",158,0)
 Q  ;TOTAL
"RTN","IBCEMRAB",159,0)
 ;
"RTN","IBCEMRAX")
0^39^B48242861
"RTN","IBCEMRAX",1,0)
IBCEMRAX ;ALB/DSM - MEDICARE REMITTANCE ADVICE DETAIL-PART A Cont'd ;25-APR-2003
"RTN","IBCEMRAX",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMRAX",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMRAX",4,0)
 ;
"RTN","IBCEMRAX",5,0)
 Q
"RTN","IBCEMRAX",6,0)
 ;
"RTN","IBCEMRAX",7,0)
DEV(IBIFN) ; Prompt the user for a device
"RTN","IBCEMRAX",8,0)
 ; Input: IBIFN= ien# of Claim file
"RTN","IBCEMRAX",9,0)
 ;
"RTN","IBCEMRAX",10,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC,POP,MRACNT
"RTN","IBCEMRAX",11,0)
 I '$G(IBIFN) Q  ;DEV
"RTN","IBCEMRAX",12,0)
 W !!,"This report displays Medicare-equivalent Remittance Advice Detail."
"RTN","IBCEMRAX",13,0)
 S MRACNT=$$MRACNT^IBCEMU1(IBIFN)
"RTN","IBCEMRAX",14,0)
 I MRACNT>1 W !,"*** Multiple MRAs on File for this claim.  ",MRACNT," MRAs will be printed. ***"
"RTN","IBCEMRAX",15,0)
 W !,"You will need a 132 column printer for this report",!
"RTN","IBCEMRAX",16,0)
 ;
"RTN","IBCEMRAX",17,0)
 S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBCEMRAX",18,0)
 ; handle queuing report next
"RTN","IBCEMRAX",19,0)
 I $D(IO("Q")) D  S IBQUIT=1 Q
"RTN","IBCEMRAX",20,0)
 . S ZTRTN="PROC^IBCEMRAA"   ; background re-entry point
"RTN","IBCEMRAX",21,0)
 . S ZTDESC="Medicare-equivalent Remittance Advice Detail Print"
"RTN","IBCEMRAX",22,0)
 . S ZTSAVE("IB*")=""
"RTN","IBCEMRAX",23,0)
 . D ^%ZTLOAD
"RTN","IBCEMRAX",24,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBCEMRAX",25,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBCEMRAX",26,0)
 U IO    ; Output device
"RTN","IBCEMRAX",27,0)
 Q  ;DEV
"RTN","IBCEMRAX",28,0)
 ;
"RTN","IBCEMRAX",29,0)
SRVHDR ; Print Srvice Level Header
"RTN","IBCEMRAX",30,0)
 ; ROW 23 -
"RTN","IBCEMRAX",31,0)
 ; Service (Line) Level Adjustments Data
"RTN","IBCEMRAX",32,0)
 W !!! I '$G(INPAT) W "SERV DATE"  ;print only on outpatient claims
"RTN","IBCEMRAX",33,0)
 W ?12,"PT",?15,"PROC",?21,"MODS",?30,"REV",?35,"APC",?43,"UNITS",?50,"TOT CHARGES"
"RTN","IBCEMRAX",34,0)
 W ?67,"DEDUCT",?80,"COINS",?90,"ALLOWED",?102,"PAYMENT",?111,"GRP-RC",?123,"ADJ AMT"
"RTN","IBCEMRAX",35,0)
 Q  ;SRVHDR
"RTN","IBCEMRAX",36,0)
 ;
"RTN","IBCEMRAX",37,0)
SRVDATA ; Get Service Level Data of EOB file (#361.1 Level 15)
"RTN","IBCEMRAX",38,0)
 ; 
"RTN","IBCEMRAX",39,0)
 N LNLVL,RLVL,GLVL,RLVLD,GLVLD,SRVDED,GRPCD,RSNCD,SRVCOIN,I,MOD,SRMKS,LNLVLD
"RTN","IBCEMRAX",40,0)
 N PRCD,REVCD,UNIT,SRVDT,PRCTYP,ALWD,PAID,SRVDED,GLVL,RCNT,OPRCD,TOTL,LNORD,LNCNT
"RTN","IBCEMRAX",41,0)
 ; Use array LNORD to sort Service Lines in order of Referenced Line #
"RTN","IBCEMRAX",42,0)
 S LNLVL=0,LNCNT=1000
"RTN","IBCEMRAX",43,0)
 F  S LNLVL=$O(^IBM(361.1,IEN,15,LNLVL)) Q:'LNLVL  S LNORD=$P(^(LNLVL,0),U,12) D  ;
"RTN","IBCEMRAX",44,0)
 . I LNORD S LNORD(LNORD)=LNLVL Q
"RTN","IBCEMRAX",45,0)
 . S LNORD(LNCNT)=LNLVL,LNCNT=LNCNT+1
"RTN","IBCEMRAX",46,0)
 ;
"RTN","IBCEMRAX",47,0)
 S LNORD=0
"RTN","IBCEMRAX",48,0)
 F  S LNORD=$O(LNORD(LNORD)) Q:'LNORD  S LNLVL=LNORD(LNORD) D  I IBQUIT Q
"RTN","IBCEMRAX",49,0)
 . S LNLVLD=$G(^IBM(361.1,IEN,15,LNLVL,0)) I LNLVLD="" Q
"RTN","IBCEMRAX",50,0)
 . I ($Y+4)>IOSL D  I IBQUIT Q
"RTN","IBCEMRAX",51,0)
 . . D PAUSE I IBQUIT Q
"RTN","IBCEMRAX",52,0)
 . . W @IOF D CLMHDR^IBCEMRAA
"RTN","IBCEMRAX",53,0)
 . . D SRVHDR
"RTN","IBCEMRAX",54,0)
 . ;
"RTN","IBCEMRAX",55,0)
 . K MOD,RCNT,TOTL S RCNT=0
"RTN","IBCEMRAX",56,0)
 . ; Procedure Code, Revenue Code, Units, From Service Date, Procedure Type
"RTN","IBCEMRAX",57,0)
 . S PRCD=$P(LNLVLD,U,4),REVCD=$P(LNLVLD,U,10),UNIT=$P(LNLVLD,U,11),SRVDT=$P(LNLVLD,U,16)
"RTN","IBCEMRAX",58,0)
 . S PRCTYP=$P(LNLVLD,U,18) I PRCTYP="NU" S PRCTYP="" ;don't display NU for Proc Type
"RTN","IBCEMRAX",59,0)
 . ; Resolve Revenue Code Pointer
"RTN","IBCEMRAX",60,0)
 . I REVCD'="" S REVCD=$P($G(^DGCR(399.2,REVCD,0)),U)
"RTN","IBCEMRAX",61,0)
 . ; Allowed, Payment, Original Procedure Code
"RTN","IBCEMRAX",62,0)
 . S ALWD=$P(LNLVLD,U,13),PAID=$P(LNLVLD,U,3),OPRCD=$P(LNLVLD,U,15)
"RTN","IBCEMRAX",63,0)
 . ; Handle Multiple Paid Modifiers from the Service Line Level (may have 4 mod's, could only fit 3)
"RTN","IBCEMRAX",64,0)
 . M MOD=^IBM(361.1,IEN,15,LNLVL,2) S MOD="" F I=1:1:3 Q:'$D(MOD(I))  S MOD=MOD_$S(MOD="":"",1:",")_MOD(I,0)
"RTN","IBCEMRAX",65,0)
 . ; Get Total Charge by matching 837 Extract Records with Bill's Original Line# on the current Service Line (LNLVLD)
"RTN","IBCEMRAX",66,0)
 . S TOTL=$P($G(IBZDATA($P(LNLVLD,U,12))),U,5)
"RTN","IBCEMRAX",67,0)
 . ; Service Line Level Remarks Codes
"RTN","IBCEMRAX",68,0)
 . S SRMKS=$G(^IBM(361.1,IEN,15,LNLVL,3))
"RTN","IBCEMRAX",69,0)
 . ; Row 24  - print Service date only on Outpatient claims (skip on Inpatients)
"RTN","IBCEMRAX",70,0)
 . W ! I '$G(INPAT) W $$FMTE^XLFDT(SRVDT,5)
"RTN","IBCEMRAX",71,0)
 . W ?12,PRCTYP,?15,PRCD,?21,MOD,?30,REVCD,?41,$J(UNIT,7),?49,$J($G(TOTL),12,2)
"RTN","IBCEMRAX",72,0)
 . ;
"RTN","IBCEMRAX",73,0)
 . ; Get Service Level Group Code/Reason Code Data
"RTN","IBCEMRAX",74,0)
 . ; RLVLD=reason_code^amount^quantity^reason text
"RTN","IBCEMRAX",75,0)
 . S (SRVDED,GLVL,RCNT,SRVCOIN)=0 K RSNCD
"RTN","IBCEMRAX",76,0)
 . F  S GLVL=$O(^IBM(361.1,IEN,15,LNLVL,1,GLVL)) Q:'GLVL  S GLVLD=^(GLVL,0) D  ;
"RTN","IBCEMRAX",77,0)
 . . S GRPCD=$P(GLVLD,U),RLVL=0
"RTN","IBCEMRAX",78,0)
 . . F  S RLVL=$O(^IBM(361.1,IEN,15,LNLVL,1,GLVL,1,RLVL)) Q:'RLVL  S RLVLD=^(RLVL,0),RSNCD=$P(RLVLD,U) D  ;
"RTN","IBCEMRAX",79,0)
 . . . I GRPCD="PR",RSNCD="AAA" Q   ;exception
"RTN","IBCEMRAX",80,0)
 . . . I GRPCD="OA",RSNCD="AB3" Q   ;exception
"RTN","IBCEMRAX",81,0)
 . . . I GRPCD="LQ" Q               ;exception
"RTN","IBCEMRAX",82,0)
 . . . I GRPCD="PR",RSNCD=1!(RSNCD=66) S SRVDED=SRVDED+$P(RLVLD,U,2) Q  ;deductible
"RTN","IBCEMRAX",83,0)
 . . . I GRPCD="PR",RSNCD=2 S SRVCOIN=$P(RLVLD,U,2) Q  ;coinsurance
"RTN","IBCEMRAX",84,0)
 . . . S RCNT=RCNT+1,RSNCD(RCNT)=GRPCD_"-"_RSNCD_U_$P(RLVLD,U,2)
"RTN","IBCEMRAX",85,0)
 . ; Print Service Level Group Code/Reason Code Data
"RTN","IBCEMRAX",86,0)
 . ; Service Level deductible, Coinsurance, Allowed, Paid Amount
"RTN","IBCEMRAX",87,0)
 . W ?62,$J(SRVDED,11,2),?74,$J(SRVCOIN,11,2),?86,$J(ALWD,11,2),?98,$J(PAID,11,2)
"RTN","IBCEMRAX",88,0)
 . ; Print Group Code-Reason Code, Adjustment Amount
"RTN","IBCEMRAX",89,0)
 . F I=1:1:RCNT W:I>1 ! W ?111,$P(RSNCD(I),U),?118,$J($P(RSNCD(I),U,2),12,2)
"RTN","IBCEMRAX",90,0)
 . ; Row 25
"RTN","IBCEMRAX",91,0)
 . I OPRCD="",(SRMKS="") Q
"RTN","IBCEMRAX",92,0)
 . W ! I OPRCD'="" W ?15,"(",$E(OPRCD,1,4),")"
"RTN","IBCEMRAX",93,0)
 . I SRMKS'="" W ?26,"REM:",?30,$P(SRMKS,U)
"RTN","IBCEMRAX",94,0)
 ;
"RTN","IBCEMRAX",95,0)
 Q  ;SRVDATA
"RTN","IBCEMRAX",96,0)
 ;
"RTN","IBCEMRAX",97,0)
PAUSE ; Pause at the bottom of screen. This section is called
"RTN","IBCEMRAX",98,0)
 ; from different points of the MRA report.
"RTN","IBCEMRAX",99,0)
 ;
"RTN","IBCEMRAX",100,0)
 I $E(IOST,1,2)'["C-" Q  ;if not terminal, don't pause
"RTN","IBCEMRAX",101,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCEMRAX",102,0)
 S DIR(0)="E" D ^DIR
"RTN","IBCEMRAX",103,0)
 I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCEMRAX",104,0)
 Q  ;PAUSE
"RTN","IBCEMRAX",105,0)
 ;
"RTN","IBCEMRAX",106,0)
DSCLMR ;
"RTN","IBCEMRAX",107,0)
 N LINE
"RTN","IBCEMRAX",108,0)
 S $P(LINE,"-",122)=""
"RTN","IBCEMRAX",109,0)
 W !!,LINE
"RTN","IBCEMRAX",110,0)
 W !,"This is a printed representation of a remittance advice, developed through a joint effort between the Centers for Medicare and"
"RTN","IBCEMRAX",111,0)
 W !,"Medicaid Services and the Department of Veterans Affairs, for a claim for services or supplies furnished to a Medicare-eligible"
"RTN","IBCEMRAX",112,0)
 W !,"veteran through a facility of the Department of Veterans Affairs.  The remittance advice shows the amount that Medicare would have"
"RTN","IBCEMRAX",113,0)
 W !,"paid had the claim been payable by Medicare, as well as the coinsurance and deductible amounts that would have applied."
"RTN","IBCEMRAX",114,0)
 W !,"The claim is not payable under the Medicare program, and no Medicare payment was issued."
"RTN","IBCEMRAX",115,0)
 W !
"RTN","IBCEMRAX",116,0)
 Q  ;DSCLMR
"RTN","IBCEMRAX",117,0)
 ;
"RTN","IBCEMRAX",118,0)
LINELVL ; This section is called when printing Institutional Reports
"RTN","IBCEMRAX",119,0)
 ; The values of Coinsurance, Contractual Adjustment, Noncovered Charges
"RTN","IBCEMRAX",120,0)
 ; and Deductible are calculated from the Service Line level and not
"RTN","IBCEMRAX",121,0)
 ; from the Claim level.
"RTN","IBCEMRAX",122,0)
 ;
"RTN","IBCEMRAX",123,0)
 ; RLVLD=reason_code^amount^quantity^reason text
"RTN","IBCEMRAX",124,0)
 ; IBCOINS,IBCTADJ,NCVRCHRG,CLMADJ are set to zero in the calling section CLMDATA
"RTN","IBCEMRAX",125,0)
 ;
"RTN","IBCEMRAX",126,0)
 N LNLVL,LNLVLD,GLVL,GLVLD,RLVL,RLVLD,GRPCD,RSNCD
"RTN","IBCEMRAX",127,0)
 S LNLVL=0
"RTN","IBCEMRAX",128,0)
 F  S LNLVL=$O(^IBM(361.1,IEN,15,LNLVL)) Q:'LNLVL  S LNLVLD=^(LNLVL,0) D  ;
"RTN","IBCEMRAX",129,0)
 . S GLVL=0 F  S GLVL=$O(^IBM(361.1,IEN,15,LNLVL,1,GLVL)) Q:'GLVL  S GLVLD=^(GLVL,0) D  ;
"RTN","IBCEMRAX",130,0)
 . . S GRPCD=$P(GLVLD,U),RLVL=0
"RTN","IBCEMRAX",131,0)
 . . F  S RLVL=$O(^IBM(361.1,IEN,15,LNLVL,1,GLVL,1,RLVL)) Q:'RLVL  S RLVLD=^(RLVL,0),RSNCD=$P(RLVLD,U) D  ;
"RTN","IBCEMRAX",132,0)
 . . . I GRPCD="PR",RSNCD="AAA" Q   ;exception
"RTN","IBCEMRAX",133,0)
 . . . I GRPCD="OA",RSNCD="AB3" Q   ;exception
"RTN","IBCEMRAX",134,0)
 . . . I GRPCD="LQ" Q               ;exception
"RTN","IBCEMRAX",135,0)
 . . . ; set Claim Adjustment only if none were found at the claim level (don't check for group code)
"RTN","IBCEMRAX",136,0)
 . . . I RCLMADJ[(","_RSNCD_",") S CLMADJ=CLMADJ+$P(RLVLD,U,2)
"RTN","IBCEMRAX",137,0)
 . . . ; Coinsurance
"RTN","IBCEMRAX",138,0)
 . . . I GRPCD="PR",RCOINS[(","_RSNCD_",") S IBCOINS=IBCOINS+$P(RLVLD,U,2) Q
"RTN","IBCEMRAX",139,0)
 . . . ; Deductible
"RTN","IBCEMRAX",140,0)
 . . . I GRPCD="PR" I RCDED[(","_RSNCD_",") S IBDED=IBDED+$P(RLVLD,U,2) Q
"RTN","IBCEMRAX",141,0)
 . . . I GRPCD="CO" D  ;
"RTN","IBCEMRAX",142,0)
 . . . . ; Contractual Adjustment
"RTN","IBCEMRAX",143,0)
 . . . . I RCTADJ[(","_RSNCD_",") S IBCTADJ=IBCTADJ+$P(RLVLD,U,2)
"RTN","IBCEMRAX",144,0)
 . . . . ; Noncovered Charges
"RTN","IBCEMRAX",145,0)
 . . . . I RCNCVR'[(","_RSNCD_",") S NCVRCHRG=NCVRCHRG+$P(RLVLD,U,2)
"RTN","IBCEMRAX",146,0)
 Q  ;LINELVL
"RTN","IBCEMRAX",147,0)
 ;
"RTN","IBCEMSR")
0^96^B43094278
"RTN","IBCEMSR",1,0)
IBCEMSR ;WOIFO/AAT - MRA STATISTICS REPORT ;09/03/04
"RTN","IBCEMSR",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMSR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMSR",4,0)
 ;
"RTN","IBCEMSR",5,0)
EN ;
"RTN","IBCEMSR",6,0)
 N IBQ,IBDIV,IBBDT,IBEDT,IBSUM,IBSCR
"RTN","IBCEMSR",7,0)
 W !!,"Report requires 132 Columns"
"RTN","IBCEMSR",8,0)
 S IBQ=0 ; quit flag
"RTN","IBCEMSR",9,0)
 ; Prompts to the user:
"RTN","IBCEMSR",10,0)
 D DIV Q:IBQ  ; Division(s)
"RTN","IBCEMSR",11,0)
 D SUM Q:IBQ  ; Summary only?
"RTN","IBCEMSR",12,0)
 W !!,"Normal processing time for a MRA is 10-12 days.  If you select a date range of"
"RTN","IBCEMSR",13,0)
 W !,"less than 2 weeks, do not expect to have received many MRAs."
"RTN","IBCEMSR",14,0)
 D DTR Q:IBQ  ; From-To date range
"RTN","IBCEMSR",15,0)
 D DEVICE Q:IBQ
"RTN","IBCEMSR",16,0)
 D RUN
"RTN","IBCEMSR",17,0)
 Q
"RTN","IBCEMSR",18,0)
 ;
"RTN","IBCEMSR",19,0)
DIV N DIC,DIR,DIRUT,Y
"RTN","IBCEMSR",20,0)
 W ! S DIR("B")="ALL",DIR("A")="Run this report for All divisions or Selected Divisions: "
"RTN","IBCEMSR",21,0)
 S DIR(0)="SA^ALL:All divisions;S:Selected divisions" D ^DIR
"RTN","IBCEMSR",22,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSR",23,0)
 S IBDIV=Y Q:Y="ALL"
"RTN","IBCEMSR",24,0)
 ; Collect divisions
"RTN","IBCEMSR",25,0)
 F  D  Q:Y'>0
"RTN","IBCEMSR",26,0)
 . W ! S DIC("A")="Division: ",DIC=40.8,DIC(0)="AEQM" D ^DIC
"RTN","IBCEMSR",27,0)
 . I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSR",28,0)
 . I Y'>0 Q
"RTN","IBCEMSR",29,0)
 . S IBDIV(+Y)=""
"RTN","IBCEMSR",30,0)
 I $O(IBDIV(""))=""  S IBQ=1 Q  ; None selected
"RTN","IBCEMSR",31,0)
 Q
"RTN","IBCEMSR",32,0)
 ;
"RTN","IBCEMSR",33,0)
DTR ;date range
"RTN","IBCEMSR",34,0)
 N %DT,Y
"RTN","IBCEMSR",35,0)
 S (IBBDT,IBEDT)=DT
"RTN","IBCEMSR",36,0)
 S %DT="AEX"
"RTN","IBCEMSR",37,0)
 S %DT("A")="Start with MRA Request Transmission Date: " ; No default,%DT("B")="TODAY"
"RTN","IBCEMSR",38,0)
 W ! D ^%DT K %DT
"RTN","IBCEMSR",39,0)
 I Y<0 S IBQ=1 Q
"RTN","IBCEMSR",40,0)
 S IBBDT=+Y
"RTN","IBCEMSR",41,0)
 S %DT="AEX"
"RTN","IBCEMSR",42,0)
 S %DT("A")="Go to MRA Request Transmission Date: ",%DT("B")="TODAY"
"RTN","IBCEMSR",43,0)
 D ^%DT K %DT
"RTN","IBCEMSR",44,0)
 I Y<0 S IBQ=1 Q
"RTN","IBCEMSR",45,0)
 S IBEDT=+Y
"RTN","IBCEMSR",46,0)
 Q
"RTN","IBCEMSR",47,0)
 ;
"RTN","IBCEMSR",48,0)
SUM N DIR,DIRUT,Y
"RTN","IBCEMSR",49,0)
 W ! S DIR("B")="YES",DIR("A")="Do you want to print a summary only? "
"RTN","IBCEMSR",50,0)
 S DIR(0)="YA" D ^DIR
"RTN","IBCEMSR",51,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSR",52,0)
 S IBSUM=+Y
"RTN","IBCEMSR",53,0)
 Q
"RTN","IBCEMSR",54,0)
 ;
"RTN","IBCEMSR",55,0)
DEVICE N %ZIS,IOP,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","IBCEMSR",56,0)
 K IO("Q")
"RTN","IBCEMSR",57,0)
 S %ZIS="QM"
"RTN","IBCEMSR",58,0)
 W ! D ^%ZIS
"RTN","IBCEMSR",59,0)
 I POP S IBQ=1 Q
"RTN","IBCEMSR",60,0)
 S IBSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","IBCEMSR",61,0)
 ;
"RTN","IBCEMSR",62,0)
 I $D(IO("Q")) D  S IBQ=1
"RTN","IBCEMSR",63,0)
 . S ZTRTN="RUN^IBCEMSR"
"RTN","IBCEMSR",64,0)
 . S ZTIO=ION
"RTN","IBCEMSR",65,0)
 . S ZTSAVE("IB*")=""
"RTN","IBCEMSR",66,0)
 . S ZTDESC="IB MRA STATISTICS REPORT"
"RTN","IBCEMSR",67,0)
 . D ^%ZTLOAD
"RTN","IBCEMSR",68,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBCEMSR",69,0)
 . D HOME^%ZIS
"RTN","IBCEMSR",70,0)
 U IO
"RTN","IBCEMSR",71,0)
 Q
"RTN","IBCEMSR",72,0)
 ;
"RTN","IBCEMSR",73,0)
 ;
"RTN","IBCEMSR",74,0)
RUN N REF
"RTN","IBCEMSR",75,0)
 S REF=$NA(^TMP($J,"IBCEMSR"))
"RTN","IBCEMSR",76,0)
 K @REF
"RTN","IBCEMSR",77,0)
 D COLLECT  ; Collect the data in ^TMP
"RTN","IBCEMSR",78,0)
 U IO
"RTN","IBCEMSR",79,0)
 D REPORT^IBCEMSR1
"RTN","IBCEMSR",80,0)
 I 'IBSCR W !,@IOF
"RTN","IBCEMSR",81,0)
 D ^%ZISC
"RTN","IBCEMSR",82,0)
 K @REF
"RTN","IBCEMSR",83,0)
 Q
"RTN","IBCEMSR",84,0)
 ;
"RTN","IBCEMSR",85,0)
COLLECT ; Collect Information
"RTN","IBCEMSR",86,0)
 ; Input: IBDIV, IBBDT,IBEDT
"RTN","IBCEMSR",87,0)
 N IBDT,IBBAT,IBTRAN,IBZ,MRAUSR
"RTN","IBCEMSR",88,0)
 S MRAUSR=$$MRAUSR^IBCEMU1() ;Auto-authorizer
"RTN","IBCEMSR",89,0)
 S IBDT=IBBDT-.000001
"RTN","IBCEMSR",90,0)
 F  S IBDT=$O(^IBA(364.1,"ALT",IBDT)) Q:'IBDT  Q:IBDT>IBEDT  D
"RTN","IBCEMSR",91,0)
 . S IBBAT=0 F  S IBBAT=$O(^IBA(364.1,"ALT",IBDT,IBBAT)) Q:'IBBAT  D
"RTN","IBCEMSR",92,0)
 .. S IBTRAN=0 F  S IBTRAN=$O(^IBA(364,"C",IBBAT,IBTRAN)) Q:'IBTRAN  D
"RTN","IBCEMSR",93,0)
 ... S IBZ=$G(^IBA(364,IBTRAN,0)) Q:IBZ=""
"RTN","IBCEMSR",94,0)
 ... N IBIFN,IBSTAT,IBSEQ,IBBILZ,IBBILST,IBFORM,IBCLERK,IBDV,IBDVN,REFX,REFS,MRACNT,IBREJECT
"RTN","IBCEMSR",95,0)
 ... S IBIFN=+IBZ
"RTN","IBCEMSR",96,0)
 ... I '$P($G(^DGCR(399,IBIFN,"S")),U,7) Q  ; no MRA request
"RTN","IBCEMSR",97,0)
 ... S IBSTAT=$P(IBZ,U,3)
"RTN","IBCEMSR",98,0)
 ... S IBSEQ=$P(IBZ,U,8) Q:"T"[IBSEQ
"RTN","IBCEMSR",99,0)
 ... ; is this a "primary" MRA request?
"RTN","IBCEMSR",100,0)
 ... ; if non of 'P' and 'S' are MCR WNR - we assume that MCR WNR was 'P'
"RTN","IBCEMSR",101,0)
 ... I '$$WNRBILL^IBEFUNC(IBIFN,IBSEQ),'$$WNRBILL^IBEFUNC(IBIFN,$S(IBSEQ="P":"S",1:"P")) Q:IBSEQ'="P"
"RTN","IBCEMSR",102,0)
 ... S IBBILZ=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEMSR",103,0)
 ... S IBBILST=$P(IBBILZ,U,13)
"RTN","IBCEMSR",104,0)
 ... S IBFORM=+$P(IBBILZ,U,19)
"RTN","IBCEMSR",105,0)
 ... I IBFORM'=2,IBFORM'=3 Q  ; not HCFA1500 or UB92
"RTN","IBCEMSR",106,0)
 ... S IBCLERK=+$P($G(^DGCR(399,IBIFN,"S")),U,8) ; Who requested MRA?
"RTN","IBCEMSR",107,0)
 ... S IBCLERK=$P($G(^VA(200,IBCLERK,0)),U)
"RTN","IBCEMSR",108,0)
 ... S:IBCLERK="" IBCLERK="UNKNOWN"
"RTN","IBCEMSR",109,0)
 ... S IBDV=+$P(IBBILZ,U,22) ; Default division
"RTN","IBCEMSR",110,0)
 ... S IBDVN=$P($G(^DG(40.8,IBDV,0)),U) ; Div name
"RTN","IBCEMSR",111,0)
 ... S:IBDVN="" IBDVN="UNKNOWN"
"RTN","IBCEMSR",112,0)
 ... I IBDIV'="ALL",'$D(IBDIV(IBDV)) Q  ;Division filter
"RTN","IBCEMSR",113,0)
 ... I 'IBSUM S REFX=$NA(@REF@(IBDVN,IBCLERK,IBFORM))
"RTN","IBCEMSR",114,0)
 ... S REFS=$NA(@REF@(IBDVN,0,IBFORM)) ; Summary by division
"RTN","IBCEMSR",115,0)
 ... D TXSTS^IBCEMU2(IBIFN,IBTRAN,.IBREJECT) ; rejected?
"RTN","IBCEMSR",116,0)
 ... S MRACNT=$$MRACNT^IBCEMU1(IBIFN) ; how many MRAs?
"RTN","IBCEMSR",117,0)
 ... D INC("ALL") ; total no of requests
"RTN","IBCEMSR",118,0)
 ... I IBSTAT="C" D INC("ALLC") ;cancelled
"RTN","IBCEMSR",119,0)
 ... I IBSTAT="R" D INC("ALLR") ;resubmitted
"RTN","IBCEMSR",120,0)
 ... I '$D(@REFS@("TOT",IBIFN)) S ^(IBIFN)="" D INC("TOT") ;unique requests
"RTN","IBCEMSR",121,0)
 ... ;no response?
"RTN","IBCEMSR",122,0)
 ... I 'IBREJECT,'MRACNT,'$D(@REFS@("NON",IBIFN)) S ^(IBIFN)="" D INC("NON")
"RTN","IBCEMSR",123,0)
 ... ;final reject?
"RTN","IBCEMSR",124,0)
 ... I 'MRACNT,IBREJECT,'$D(@REFS@("REJF",IBIFN)),IBTRAN=$$LAST364^IBCEF4(IBIFN) D
"RTN","IBCEMSR",125,0)
 .... S @REFS@("REJF",IBIFN)="" D INC("REJF")
"RTN","IBCEMSR",126,0)
 .... ; MRA?
"RTN","IBCEMSR",127,0)
 ... I MRACNT,'$D(@REFS@("MRA",IBIFN)) S ^(IBIFN)="" D
"RTN","IBCEMSR",128,0)
 .... D INC("MRA")
"RTN","IBCEMSR",129,0)
 .... I $$DENIED(IBIFN) D INC("MRAD")
"RTN","IBCEMSR",130,0)
 ... ;any secondary claims?
"RTN","IBCEMSR",131,0)
 ... D SECOND
"RTN","IBCEMSR",132,0)
 Q
"RTN","IBCEMSR",133,0)
 ;
"RTN","IBCEMSR",134,0)
INC(NODE,VALUE) ;Increase the respective value in ^TMP
"RTN","IBCEMSR",135,0)
 I 'IBSUM S @REFX@(NODE)=$G(@REFX@(NODE))+$G(VALUE,1)
"RTN","IBCEMSR",136,0)
 S @REFS@(NODE)=$G(@REFS@(NODE))+$G(VALUE,1)
"RTN","IBCEMSR",137,0)
 Q
"RTN","IBCEMSR",138,0)
 ;
"RTN","IBCEMSR",139,0)
DENIED(IBIFN) ;MRA requests denied?
"RTN","IBCEMSR",140,0)
 ; 361.1 for this bill#
"RTN","IBCEMSR",141,0)
 ; if at least one request is 'processed' - MRA is NOT DENIED
"RTN","IBCEMSR",142,0)
 N IBDEN,IEN,IBZ
"RTN","IBCEMSR",143,0)
 S IBDEN=1
"RTN","IBCEMSR",144,0)
 S IEN=0 F  S IEN=$O(^IBM(361.1,"B",+$G(IBIFN),IEN)) Q:'IEN  D  Q:'IBDEN
"RTN","IBCEMSR",145,0)
 . S IBZ=$G(^IBM(361.1,IEN,0))
"RTN","IBCEMSR",146,0)
 . I $P(IBZ,U,4)'=1 Q  ; only MEDICARE
"RTN","IBCEMSR",147,0)
 . I $P(IBZ,U,13)=1 S IBDEN=0
"RTN","IBCEMSR",148,0)
 Q IBDEN
"RTN","IBCEMSR",149,0)
 ;
"RTN","IBCEMSR",150,0)
SECOND ;Secondary claims
"RTN","IBCEMSR",151,0)
 N IBAUT,IBTX,IBCBPS,IBNEXT,IBBILS,IBTOT,IBUNR,IB2ND,IBNODE
"RTN","IBCEMSR",152,0)
 I $D(@REFS@("SEC",IBIFN)) Q  ; Already included
"RTN","IBCEMSR",153,0)
 S IBCBPS=$P(IBBILZ,U,21) ; current bill sequence
"RTN","IBCEMSR",154,0)
 S IBNEXT=$S(IBSEQ="S":"T",1:"S") ;Next (after MRA) sequence
"RTN","IBCEMSR",155,0)
 I IBCBPS'=IBNEXT Q
"RTN","IBCEMSR",156,0)
 ; Number of unique sec claims
"RTN","IBCEMSR",157,0)
 S @REFS@("SEC",IBIFN)=""
"RTN","IBCEMSR",158,0)
 D INC("SEC")
"RTN","IBCEMSR",159,0)
 S IBBILS=$G(^DGCR(399,IBIFN,"S")) Q:'$P(IBBILS,U,10)  ; Not even authorized
"RTN","IBCEMSR",160,0)
 ; Authorized but not yet printed?
"RTN","IBCEMSR",161,0)
 I $P(IBBILS,U,10),'$P(IBBILS,U,13) D INC("AUT") Q
"RTN","IBCEMSR",162,0)
 ; Check the field 'FIRST PRINTED BY'
"RTN","IBCEMSR",163,0)
 S IBAUT=$P(IBBILS,U,13)=MRAUSR ; Auto-generated?
"RTN","IBCEMSR",164,0)
 S IBTX=$$TRANSM(IBIFN,IBNEXT) ; Transmitted? (present in 364?)
"RTN","IBCEMSR",165,0)
 I IBAUT,IBTX S IBNODE="AT"   ; Auto-gen Tx
"RTN","IBCEMSR",166,0)
 I 'IBAUT,IBTX S IBNODE="MT"  ; Manually Tx
"RTN","IBCEMSR",167,0)
 I IBAUT,'IBTX S IBNODE="AP"  ; Auto-gen Prn
"RTN","IBCEMSR",168,0)
 I 'IBAUT,'IBTX S IBNODE="MP" ; Manually Prn
"RTN","IBCEMSR",169,0)
 ;
"RTN","IBCEMSR",170,0)
 ;Calculate amounts
"RTN","IBCEMSR",171,0)
 S IBTOT=+$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBCEMSR",172,0)
 S IBUNR=$P($G(^PRCA(430,IBIFN,13)),U,2) ; Medicare Unreimbursable
"RTN","IBCEMSR",173,0)
 S IB2ND=$$PREOBTOT^IBCEU0(IBIFN)
"RTN","IBCEMSR",174,0)
 D INC(IBNODE)
"RTN","IBCEMSR",175,0)
 D INC(IBNODE_"1",IBTOT)
"RTN","IBCEMSR",176,0)
 D INC(IBNODE_"2",IBUNR)
"RTN","IBCEMSR",177,0)
 D INC(IBNODE_"3",IB2ND)
"RTN","IBCEMSR",178,0)
 Q
"RTN","IBCEMSR",179,0)
 ;
"RTN","IBCEMSR",180,0)
TRANSM(IBIFN,IBSEQ) ;was the claim ever transmitted?
"RTN","IBCEMSR",181,0)
 ; Does the claim present in 364?
"RTN","IBCEMSR",182,0)
 N RES,IBI
"RTN","IBCEMSR",183,0)
 S RES=0
"RTN","IBCEMSR",184,0)
 S IBI="" F  S IBI=$O(^IBA(364,"B",IBIFN,IBI),-1) Q:IBI=""  D  Q:RES
"RTN","IBCEMSR",185,0)
 . I $P($G(^IBA(364,IBI,0)),U,8)=IBSEQ S RES=1
"RTN","IBCEMSR",186,0)
 Q RES
"RTN","IBCEMSR",187,0)
 ;
"RTN","IBCEMSR1")
0^97^B59769872
"RTN","IBCEMSR1",1,0)
IBCEMSR1 ;WOIFO/AAT - MRA STATISTICS REPORT CONT. ;09/03/04
"RTN","IBCEMSR1",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMSR1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMSR1",4,0)
 ;
"RTN","IBCEMSR1",5,0)
 Q
"RTN","IBCEMSR1",6,0)
 ;
"RTN","IBCEMSR1",7,0)
 ; Report header
"RTN","IBCEMSR1",8,0)
HDR N IBI
"RTN","IBCEMSR1",9,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCEMSR1",10,0)
 W @IOF,"MRA Statistics Report for period covering "_$$DAT(IBBDT)_" thru "_$$DAT(IBEDT),"   ",?100,$$DAT(DT),"   Page ",IBPAGE
"RTN","IBCEMSR1",11,0)
 W ! F IBI=1:1:$S($G(IOM):IOM,1:130) W "-"
"RTN","IBCEMSR1",12,0)
 Q
"RTN","IBCEMSR1",13,0)
 ;
"RTN","IBCEMSR1",14,0)
REPORT N IBDVN,IBCLERK,IBPAGE,IBTU,IBTH
"RTN","IBCEMSR1",15,0)
 S IBPAGE=0
"RTN","IBCEMSR1",16,0)
 D HDR
"RTN","IBCEMSR1",17,0)
 I '$D(@REF) W !,"No data meet the criteria." Q
"RTN","IBCEMSR1",18,0)
 I 'IBSUM S IBDVN="" F  S IBDVN=$O(@REF@(IBDVN)) Q:IBDVN=""  D  Q:IBQ
"RTN","IBCEMSR1",19,0)
 . D CHKP Q:IBQ  W !,"DIVISION: ",IBDVN
"RTN","IBCEMSR1",20,0)
 . S IBCLERK="A" F  S IBCLERK=$O(@REF@(IBDVN,IBCLERK)) Q:IBCLERK=""  D  Q:IBQ
"RTN","IBCEMSR1",21,0)
 . . D DETAILS
"RTN","IBCEMSR1",22,0)
 Q:IBQ
"RTN","IBCEMSR1",23,0)
 ; Summary section
"RTN","IBCEMSR1",24,0)
 D:'IBSUM HDR W !,"SUMMARY"
"RTN","IBCEMSR1",25,0)
 S IBDVN="" F  S IBDVN=$O(@REF@(IBDVN)) Q:IBDVN=""  D  Q:IBQ
"RTN","IBCEMSR1",26,0)
 . D CHKP Q:IBQ  W !,"DIVISION: ",IBDVN
"RTN","IBCEMSR1",27,0)
 . D SUMMARY
"RTN","IBCEMSR1",28,0)
 Q
"RTN","IBCEMSR1",29,0)
 ;
"RTN","IBCEMSR1",30,0)
DETAILS ; Print Details
"RTN","IBCEMSR1",31,0)
 N REFU,REFU,IBTXT,IBNU,IBNH,IBTU,IBTH
"RTN","IBCEMSR1",32,0)
 ;
"RTN","IBCEMSR1",33,0)
 S REFU=$NA(@REF@(IBDVN,IBCLERK,3))
"RTN","IBCEMSR1",34,0)
 S REFH=$NA(@REF@(IBDVN,IBCLERK,2))
"RTN","IBCEMSR1",35,0)
 ;
"RTN","IBCEMSR1",36,0)
 D CHKP Q:IBQ  W !,"CLERK: ",IBCLERK
"RTN","IBCEMSR1",37,0)
 D CHKP Q:IBQ  W !?7,"Primary UB92 MRA Requests",?67,"Primary HCFA 1500 MRA Requests"
"RTN","IBCEMSR1",38,0)
 D CHKP Q:IBQ  W !?7,"-------------------------",?67,"------------------------------"
"RTN","IBCEMSR1",39,0)
 S IBTXT="Total number of MRA Requests:"
"RTN","IBCEMSR1",40,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("ALL")),5),?67,IBTXT,?110,$J(+$G(@REFH@("ALL")),5)
"RTN","IBCEMSR1",41,0)
 S IBTXT="Number of unique MRA Requests:",IBTU=+$G(@REFU@("TOT")),IBTH=+$G(@REFH@("TOT"))
"RTN","IBCEMSR1",42,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",43,0)
 S IBTXT="Requests with no response:",IBNU=+$G(@REFU@("NON")),IBNH=+$G(@REFH@("NON"))
"RTN","IBCEMSR1",44,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",45,0)
 S IBTXT="Requests with final rejection:",IBNU=+$G(@REFU@("REJF")),IBNH=+$G(@REFH@("REJF"))
"RTN","IBCEMSR1",46,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",47,0)
 ;
"RTN","IBCEMSR1",48,0)
 S IBTXT="Requests with returned MRA:",IBNU=+$G(@REFU@("MRA")),IBNH=+$G(@REFH@("MRA"))
"RTN","IBCEMSR1",49,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",50,0)
 S IBTXT="Processed MRA:"
"RTN","IBCEMSR1",51,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?35,$J($G(@REFU@("MRA"))-$G(@REFU@("MRAD")),5),?74,IBTXT,?90,$J($G(@REFH@("MRA"))-$G(@REFH@("MRAD")),5)
"RTN","IBCEMSR1",52,0)
 S IBTXT="Denied MRA:"
"RTN","IBCEMSR1",53,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?35,$J(+$G(@REFU@("MRAD")),5),?74,IBTXT,?90,$J(+$G(@REFH@("MRAD")),5)
"RTN","IBCEMSR1",54,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",55,0)
 ;
"RTN","IBCEMSR1",56,0)
 D SECONDRY Q:IBQ
"RTN","IBCEMSR1",57,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",58,0)
 Q
"RTN","IBCEMSR1",59,0)
 ;
"RTN","IBCEMSR1",60,0)
SUMMARY ;Print summary
"RTN","IBCEMSR1",61,0)
 N REFU,REFH,IBTXT,IBNU,IBNH,IBTU,IBTH
"RTN","IBCEMSR1",62,0)
 ;
"RTN","IBCEMSR1",63,0)
 S REFU=$NA(@REF@(IBDVN,0,3))
"RTN","IBCEMSR1",64,0)
 S REFH=$NA(@REF@(IBDVN,0,2))
"RTN","IBCEMSR1",65,0)
 ;
"RTN","IBCEMSR1",66,0)
 D CHKP Q:IBQ  W !?7,"Primary UB92 MRA Requests",?67,"Primary HCFA 1500 MRA Requests"
"RTN","IBCEMSR1",67,0)
 D CHKP Q:IBQ  W !?7,"-------------------------",?67,"------------------------------"
"RTN","IBCEMSR1",68,0)
 S IBTXT="Total number of MRA Requests:",IBTU=+$G(@REFU@("ALL")),IBTH=+$G(@REFH@("ALL"))
"RTN","IBCEMSR1",69,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",70,0)
 S IBTXT="Percent Resubmitted:",IBNU=+$G(@REFU@("ALLR")),IBNH=+$G(@REFH@("ALLR"))
"RTN","IBCEMSR1",71,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",72,0)
 S IBTXT="Percent Cancelled/Copied:",IBNU=+$G(@REFU@("ALLC")),IBNH=+$G(@REFH@("ALLC"))
"RTN","IBCEMSR1",73,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",74,0)
 S IBTXT="Number of unique MRA Requests:",IBTU=+$G(@REFU@("TOT")),IBTH=+$G(@REFH@("TOT"))
"RTN","IBCEMSR1",75,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",76,0)
 S IBTXT="Requests with no response:",IBNU=+$G(@REFU@("NON")),IBNH=+$G(@REFH@("NON"))
"RTN","IBCEMSR1",77,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",78,0)
 S IBTXT="Requests with final rejection:",IBNU=+$G(@REFU@("REJF")),IBNH=+$G(@REFH@("REJF"))
"RTN","IBCEMSR1",79,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",80,0)
 S IBTXT="Percent with final rejection:"
"RTN","IBCEMSR1",81,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",82,0)
 S IBTXT="Requests with returned MRA:",IBTU=+$G(@REFU@("MRA")),IBTH=+$G(@REFH@("MRA"))
"RTN","IBCEMSR1",83,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",84,0)
 S IBTXT="Processed MRA:",IBNU=IBTU-$G(@REFU@("MRAD")),IBNH=IBTH-$G(@REFH@("MRAD"))
"RTN","IBCEMSR1",85,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",86,0)
 S IBTXT="Denied MRA:"
"RTN","IBCEMSR1",87,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("MRAD")),5),?67,IBTXT,?110,$J(+$G(@REFH@("MRAD")),5)
"RTN","IBCEMSR1",88,0)
 S IBTXT="Percent Processed MRA:"
"RTN","IBCEMSR1",89,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",90,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",91,0)
 ;
"RTN","IBCEMSR1",92,0)
 D SECONDRY Q:IBQ
"RTN","IBCEMSR1",93,0)
 S IBTXT="Percent Unique Req to Secondary:"
"RTN","IBCEMSR1",94,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J($$%(+$G(@REFU@("SEC")),+$G(@REFU@("TOT"))),5),?67,IBTXT,?110,$J($$%(+$G(@REFH@("SEC")),+$G(@REFH@("TOT"))),5)
"RTN","IBCEMSR1",95,0)
 S IBTXT="Percent Auto-Generated:"
"RTN","IBCEMSR1",96,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$J($$%($G(@REFU@("AT"))+$G(@REFU@("AP")),+$G(@REFU@("TOT"))),5),?67,IBTXT,?110,$J($$%($G(@REFH@("AT"))+$G(@REFH@("AP")),+$G(@REFH@("TOT"))),5)
"RTN","IBCEMSR1",97,0)
 S IBTXT="Percent Manually-Processed:"
"RTN","IBCEMSR1",98,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$J($$%($G(@REFU@("MT"))+$G(@REFU@("MP")),+$G(@REFU@("TOT"))),5),?67,IBTXT,?110,$J($$%($G(@REFH@("MT"))+$G(@REFH@("MP")),+$G(@REFH@("TOT"))),5)
"RTN","IBCEMSR1",99,0)
 ;
"RTN","IBCEMSR1",100,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",101,0)
 Q
"RTN","IBCEMSR1",102,0)
 ;
"RTN","IBCEMSR1",103,0)
SECONDRY ; Print 2ndary claims info
"RTN","IBCEMSR1",104,0)
 D CHKP Q:IBQ  W !?7,"Secondary UB92 claims",?67,"Secondary HCFA 1500 claims"
"RTN","IBCEMSR1",105,0)
 D CHKP Q:IBQ  W !?7,"---------------------",?67,"--------------------------"
"RTN","IBCEMSR1",106,0)
 S IBTXT="Authorized (not yet printed):"
"RTN","IBCEMSR1",107,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("AUT")),5),?67,IBTXT,?110,$J(+$G(@REFH@("AUT")),5)
"RTN","IBCEMSR1",108,0)
 ;
"RTN","IBCEMSR1",109,0)
 S IBTXT="Auto-generated to print:"
"RTN","IBCEMSR1",110,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("AP")),5),?67,IBTXT,?110,$J(+$G(@REFH@("AP")),5)
"RTN","IBCEMSR1",111,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",112,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AP1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AP1")),10,2)
"RTN","IBCEMSR1",113,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",114,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AP2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AP2")),10,2)
"RTN","IBCEMSR1",115,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",116,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AP3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AP3")),10,2)
"RTN","IBCEMSR1",117,0)
 ;
"RTN","IBCEMSR1",118,0)
 S IBTXT="Auto-generated to transmit:"
"RTN","IBCEMSR1",119,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("AT")),5),?67,IBTXT,?110,$J(+$G(@REFH@("AT")),5)
"RTN","IBCEMSR1",120,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",121,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AT1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AT1")),10,2)
"RTN","IBCEMSR1",122,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",123,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AT2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AT2")),10,2)
"RTN","IBCEMSR1",124,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",125,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AT3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AT3")),10,2)
"RTN","IBCEMSR1",126,0)
 ;
"RTN","IBCEMSR1",127,0)
 S IBTXT="Manually processed to print:"
"RTN","IBCEMSR1",128,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("MP")),5),?67,IBTXT,?110,$J(+$G(@REFH@("MP")),5)
"RTN","IBCEMSR1",129,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",130,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MP1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MP1")),10,2)
"RTN","IBCEMSR1",131,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",132,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MP2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MP2")),10,2)
"RTN","IBCEMSR1",133,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",134,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MP3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MP3")),10,2)
"RTN","IBCEMSR1",135,0)
 ;
"RTN","IBCEMSR1",136,0)
 S IBTXT="Manually processed to transmit:"
"RTN","IBCEMSR1",137,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("MT")),5),?67,IBTXT,?110,$J(+$G(@REFH@("MT")),5)
"RTN","IBCEMSR1",138,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",139,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MT1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MT1")),10,2)
"RTN","IBCEMSR1",140,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",141,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MT2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MT2")),10,2)
"RTN","IBCEMSR1",142,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",143,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MT3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MT3")),10,2)
"RTN","IBCEMSR1",144,0)
 Q
"RTN","IBCEMSR1",145,0)
 ;
"RTN","IBCEMSR1",146,0)
 ;
"RTN","IBCEMSR1",147,0)
%(VALUE,TOTAL) ;Percentage
"RTN","IBCEMSR1",148,0)
 I 'TOTAL Q $J("0%",6)
"RTN","IBCEMSR1",149,0)
 Q $J($J(VALUE*100/TOTAL,3,0)_"%",6)
"RTN","IBCEMSR1",150,0)
 ;
"RTN","IBCEMSR1",151,0)
CHKP ;Check for EOP
"RTN","IBCEMSR1",152,0)
 I $Y>(IOSL-4) D:IBSCR PAUSE Q:IBQ  D HDR
"RTN","IBCEMSR1",153,0)
 Q
"RTN","IBCEMSR1",154,0)
 ;
"RTN","IBCEMSR1",155,0)
PAUSE ;
"RTN","IBCEMSR1",156,0)
 N X U IO(0) W !!,"Press RETURN to continue, '^' to exit:" R X:DTIME S:'$T X="^" S:X["^" IBQ=2
"RTN","IBCEMSR1",157,0)
 U IO
"RTN","IBCEMSR1",158,0)
 Q
"RTN","IBCEMSR1",159,0)
 ;
"RTN","IBCEMSR1",160,0)
PAUSE2 ;
"RTN","IBCEMSR1",161,0)
 N X U IO(0) W !!,"Press RETURN to continue:" R X:DTIME S:'$T X="^" S:X["^" IBQ=2
"RTN","IBCEMSR1",162,0)
 U IO
"RTN","IBCEMSR1",163,0)
 Q
"RTN","IBCEMSR1",164,0)
 ;
"RTN","IBCEMSR1",165,0)
DAT(X) ;Convert FM date to displayable (mm/dd/yy) format.
"RTN","IBCEMSR1",166,0)
 N DATE,YR
"RTN","IBCEMSR1",167,0)
 I $G(X) S YR=$E(X,2,3)
"RTN","IBCEMSR1",168,0)
 I $G(X) S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_YR,1:"")
"RTN","IBCEMSR1",169,0)
 Q $G(DATE)
"RTN","IBCEMSR1",170,0)
 ;
"RTN","IBCEMU1")
0^24^B56645809
"RTN","IBCEMU1",1,0)
IBCEMU1 ;ALB/DSM - IB MRA Utility ;26-MAR-2003
"RTN","IBCEMU1",2,0)
 ;;2.0;INTEGRATED BILLING;**135,155**;21-MAR-94
"RTN","IBCEMU1",3,0)
 ;
"RTN","IBCEMU1",4,0)
MRAUSR() ;; Function
"RTN","IBCEMU1",5,0)
 ; Returns IEN (Internal Entry Number) from file #200 for
"RTN","IBCEMU1",6,0)
 ; the Bill Authorizer of acceptable MRA secondary claims,
"RTN","IBCEMU1",7,0)
 ; namely, AUTHORIZER,IB MRA
"RTN","IBCEMU1",8,0)
 ;
"RTN","IBCEMU1",9,0)
 ; Output:    -1   if record not on file
"RTN","IBCEMU1",10,0)
 ;            IEN  if record is on file
"RTN","IBCEMU1",11,0)
 ;
"RTN","IBCEMU1",12,0)
 N DIC,X,Y
"RTN","IBCEMU1",13,0)
 S DIC(0)="MO",DIC="^VA(200,",X="AUTHORIZER,IB MRA"
"RTN","IBCEMU1",14,0)
 ; call FM lookup utility
"RTN","IBCEMU1",15,0)
 D ^DIC
"RTN","IBCEMU1",16,0)
 ; if record is already on file, return IEN
"RTN","IBCEMU1",17,0)
 ; else  return -1
"RTN","IBCEMU1",18,0)
 Q +Y
"RTN","IBCEMU1",19,0)
 ;
"RTN","IBCEMU1",20,0)
 ;
"RTN","IBCEMU1",21,0)
MRA(IBIFN) ; Utility driver procedure - this is what gets called
"RTN","IBCEMU1",22,0)
 I $$MRAEXIST(IBIFN) D PRINTMRA(IBIFN)
"RTN","IBCEMU1",23,0)
MRAX ;
"RTN","IBCEMU1",24,0)
 Q
"RTN","IBCEMU1",25,0)
 ;
"RTN","IBCEMU1",26,0)
 ;
"RTN","IBCEMU1",27,0)
MRAEXIST(IBIFN) ; This function determines if any MRA exists for the
"RTN","IBCEMU1",28,0)
 ; passed bill (IBIFN).
"RTN","IBCEMU1",29,0)
 ;
"RTN","IBCEMU1",30,0)
 ; This function is called from the IB package as well as the AR package.
"RTN","IBCEMU1",31,0)
 ;
"RTN","IBCEMU1",32,0)
 ; This function returns a true value (1) under the following
"RTN","IBCEMU1",33,0)
 ; conditions:
"RTN","IBCEMU1",34,0)
 ;
"RTN","IBCEMU1",35,0)
 ; - The current payer sequence is secondary or tertiary for the bill
"RTN","IBCEMU1",36,0)
 ; - Medicare WNR is a payer on the bill
"RTN","IBCEMU1",37,0)
 ; - At least one MRA EOB is on file for the bill
"RTN","IBCEMU1",38,0)
 ; - Medicare is primary, bill is 2nd/3rd
"RTN","IBCEMU1",39,0)
 ; - or, Medicare is secondary, bill is 3rd
"RTN","IBCEMU1",40,0)
 ;
"RTN","IBCEMU1",41,0)
 NEW OK,IBCOB,PRIMBILL
"RTN","IBCEMU1",42,0)
 S IBIFN=+$G(IBIFN)
"RTN","IBCEMU1",43,0)
 S OK=0
"RTN","IBCEMU1",44,0)
 I '$D(^DGCR(399,IBIFN,0)) G MRAEX         ; Check for valid bill
"RTN","IBCEMU1",45,0)
 S IBCOB=$$COBN^IBCEF(IBIFN)               ; Current payer sequence
"RTN","IBCEMU1",46,0)
 I IBCOB=1 G MRAEX                         ; Must be secondary or tert
"RTN","IBCEMU1",47,0)
 I '$$MCRONBIL^IBEFUNC(IBIFN) G MRAEX      ; Medicare not on bill
"RTN","IBCEMU1",48,0)
 ;
"RTN","IBCEMU1",49,0)
 ; If bill is secondary and Medicare is primary, then we know the bill#
"RTN","IBCEMU1",50,0)
 I IBCOB=2,$$WNRBILL^IBEFUNC(IBIFN,1) S OK=$$CHK(IBIFN) G MRAEX
"RTN","IBCEMU1",51,0)
 ;
"RTN","IBCEMU1",52,0)
 ; Similarly if bill is tert and Medicare is 2nd, then we know the bill#
"RTN","IBCEMU1",53,0)
 I IBCOB=3,$$WNRBILL^IBEFUNC(IBIFN,2) S OK=$$CHK(IBIFN) G MRAEX
"RTN","IBCEMU1",54,0)
 ;
"RTN","IBCEMU1",55,0)
 ; If bill is tert and Medicare is first, then we have to get the bill#
"RTN","IBCEMU1",56,0)
 I IBCOB=3,$$WNRBILL^IBEFUNC(IBIFN,1) D  G MRAEX
"RTN","IBCEMU1",57,0)
 . S PRIMBILL=+$P($G(^DGCR(399,IBIFN,"M1")),U,5)
"RTN","IBCEMU1",58,0)
 . I PRIMBILL S OK=$$CHK(PRIMBILL)
"RTN","IBCEMU1",59,0)
 . Q
"RTN","IBCEMU1",60,0)
 ;
"RTN","IBCEMU1",61,0)
MRAEX ;
"RTN","IBCEMU1",62,0)
 Q OK
"RTN","IBCEMU1",63,0)
 ;
"RTN","IBCEMU1",64,0)
CHK(IBIFN) ; This function returns 1 if there is at least 1 MRA EOB for
"RTN","IBCEMU1",65,0)
 ; this bill# in file 361.1.
"RTN","IBCEMU1",66,0)
 NEW OK,IEN
"RTN","IBCEMU1",67,0)
 S (OK,IEN)=0
"RTN","IBCEMU1",68,0)
 F  S IEN=$O(^IBM(361.1,"B",+$G(IBIFN),IEN)) Q:'IEN  D  Q:OK
"RTN","IBCEMU1",69,0)
 . I $P($G(^IBM(361.1,IEN,0)),U,4)=1 S OK=1 Q
"RTN","IBCEMU1",70,0)
 . Q
"RTN","IBCEMU1",71,0)
CHKX ;
"RTN","IBCEMU1",72,0)
 Q OK
"RTN","IBCEMU1",73,0)
 ;
"RTN","IBCEMU1",74,0)
 ;
"RTN","IBCEMU1",75,0)
PRINTMRA(IBIFN) ; This procedure is called when the user is printing bills
"RTN","IBCEMU1",76,0)
 ; and we know that one or more MRA's exist for this bill.  We ask the
"RTN","IBCEMU1",77,0)
 ; user if the MRA(s) should be printed at this time too.
"RTN","IBCEMU1",78,0)
 ;
"RTN","IBCEMU1",79,0)
 NEW CNT,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBCEMU1",80,0)
 S IBIFN=+$G(IBIFN) I 'IBIFN G PRMRAX
"RTN","IBCEMU1",81,0)
 S CNT=$$MRACNT(IBIFN) I 'CNT G PRMRAX
"RTN","IBCEMU1",82,0)
 ;
"RTN","IBCEMU1",83,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","IBCEMU1",84,0)
 S DIR("A",1)="There is an MRA associated with this bill."
"RTN","IBCEMU1",85,0)
 S DIR("A")="Do you want to print this MRA now"
"RTN","IBCEMU1",86,0)
 I CNT>1 D
"RTN","IBCEMU1",87,0)
 . S DIR("A",1)="There are "_CNT_" MRA's associated with this bill."
"RTN","IBCEMU1",88,0)
 . S DIR("A")="Do you want to print these MRA's now"
"RTN","IBCEMU1",89,0)
 . Q
"RTN","IBCEMU1",90,0)
 S DIR("?")="Please answer Yes or No.  If you answer Yes, then you will be asked to supply the output device and all MRA's associated with this bill will then be printed."
"RTN","IBCEMU1",91,0)
 W !!
"RTN","IBCEMU1",92,0)
 D ^DIR K DIR
"RTN","IBCEMU1",93,0)
 I 'Y G PRMRAX
"RTN","IBCEMU1",94,0)
 ;
"RTN","IBCEMU1",95,0)
 ; At this point, the user wants to print the MRA's
"RTN","IBCEMU1",96,0)
 D MRA^IBCEMRAA(IBIFN)
"RTN","IBCEMU1",97,0)
 ;
"RTN","IBCEMU1",98,0)
PRMRAX ;
"RTN","IBCEMU1",99,0)
 Q
"RTN","IBCEMU1",100,0)
 ;
"RTN","IBCEMU1",101,0)
 ;
"RTN","IBCEMU1",102,0)
MRACNT(IBIFN) ; This function counts up the number of MRA EOB's in file
"RTN","IBCEMU1",103,0)
 ; 361.1 for this bill#
"RTN","IBCEMU1",104,0)
 NEW CNT,IEN
"RTN","IBCEMU1",105,0)
 S (CNT,IEN)=0
"RTN","IBCEMU1",106,0)
 F  S IEN=$O(^IBM(361.1,"B",+$G(IBIFN),IEN)) Q:'IEN  D
"RTN","IBCEMU1",107,0)
 . I $P($G(^IBM(361.1,IEN,0)),U,4)'=1 Q
"RTN","IBCEMU1",108,0)
 . S CNT=CNT+1
"RTN","IBCEMU1",109,0)
 . Q
"RTN","IBCEMU1",110,0)
MRACNTX ;
"RTN","IBCEMU1",111,0)
 Q CNT
"RTN","IBCEMU1",112,0)
 ;
"RTN","IBCEMU1",113,0)
SPLTMRA(IBIFN) ; This function returns the number of Split MRA's for a 
"RTN","IBCEMU1",114,0)
 ; given bill#.
"RTN","IBCEMU1",115,0)
 ;
"RTN","IBCEMU1",116,0)
 NEW NUM,IEN
"RTN","IBCEMU1",117,0)
 S (NUM,IEN)=0
"RTN","IBCEMU1",118,0)
 F  S IEN=$O(^IBM(361.1,"B",+$G(IBIFN),IEN)) Q:'IEN  I $$SPLIT(IEN) S NUM=NUM+1
"RTN","IBCEMU1",119,0)
SPLTX ;
"RTN","IBCEMU1",120,0)
 Q NUM
"RTN","IBCEMU1",121,0)
 ;
"RTN","IBCEMU1",122,0)
SPLIT(IBEOB) ; This function returns whether or not the given EOB is a
"RTN","IBCEMU1",123,0)
 ; split EOB as indicated in the claim level remark code.
"RTN","IBCEMU1",124,0)
 ; Check the remittance advice remark codes looking for code MA15.  This
"RTN","IBCEMU1",125,0)
 ; code indicates that the claim has been separated to expedite
"RTN","IBCEMU1",126,0)
 ; handling.  This means that this is an incomplete EOB.
"RTN","IBCEMU1",127,0)
 ;
"RTN","IBCEMU1",128,0)
 NEW SPLIT,IBM3,IBM5,PCE,REMC
"RTN","IBCEMU1",129,0)
 S SPLIT=0,IBEOB=+$G(IBEOB)
"RTN","IBCEMU1",130,0)
 S IBM3=$G(^IBM(361.1,IBEOB,3))
"RTN","IBCEMU1",131,0)
 S IBM5=$G(^IBM(361.1,IBEOB,5))
"RTN","IBCEMU1",132,0)
 F PCE=3:1:7 S REMC=$P(IBM3,U,PCE) I REMC="MA15" S SPLIT=1 Q
"RTN","IBCEMU1",133,0)
 I SPLIT G SPLITX
"RTN","IBCEMU1",134,0)
 F PCE=1:1:5 S REMC=$P(IBM5,U,PCE) I REMC="MA15" S SPLIT=1 Q
"RTN","IBCEMU1",135,0)
SPLITX ;
"RTN","IBCEMU1",136,0)
 Q SPLIT
"RTN","IBCEMU1",137,0)
 ;
"RTN","IBCEMU1",138,0)
 ;
"RTN","IBCEMU1",139,0)
EOBLST(IBEOB) ; Standard FileMan lister code for entries in the EOB file
"RTN","IBCEMU1",140,0)
 ; Input parameter IBEOB is the IEN into file 361.1
"RTN","IBCEMU1",141,0)
 ; This can be used by setting DIC("W")="D EOBLST^IBCEMU1(Y)" prior
"RTN","IBCEMU1",142,0)
 ; to FileMan lister calls.
"RTN","IBCEMU1",143,0)
 ;
"RTN","IBCEMU1",144,0)
 NEW IBM,IBIFN,IB,PATNAME,INSCO,SEQ
"RTN","IBCEMU1",145,0)
 NEW EOBDT,EOBTYP,CLMSTAT
"RTN","IBCEMU1",146,0)
 S IBM=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEMU1",147,0)
 S IBIFN=+IBM
"RTN","IBCEMU1",148,0)
 S IB=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEMU1",149,0)
 S PATNAME=$P($G(^DPT(+$P(IB,U,2),0)),U,1)
"RTN","IBCEMU1",150,0)
 S INSCO=" "_$$EXTERNAL^DILFD(361.1,.02,,$P(IBM,U,2))
"RTN","IBCEMU1",151,0)
 S SEQ=$E($$EXTERNAL^DILFD(361.1,.15,,$P(IBM,U,15)),1,3)
"RTN","IBCEMU1",152,0)
 S EOBDT=" "_$$FMTE^XLFDT($P($P(IBM,U,6),".",1),"2Z")
"RTN","IBCEMU1",153,0)
 S EOBTYP=" "_$P("EOB^MRA",U,$P(IBM,U,4)+1)
"RTN","IBCEMU1",154,0)
 S CLMSTAT=" "_$$EXTERNAL^DILFD(361.1,.13,"",$P(IBM,U,13))
"RTN","IBCEMU1",155,0)
 W $E(PATNAME,1,19)," (",$E(SEQ),")",$E(INSCO,1,17),?56,EOBDT
"RTN","IBCEMU1",156,0)
 W ?66,EOBTYP,?70,CLMSTAT
"RTN","IBCEMU1",157,0)
EOBLSTX ;
"RTN","IBCEMU1",158,0)
 Q
"RTN","IBCEMU1",159,0)
 ;
"RTN","IBCEMU1",160,0)
SEL(IBIFN,MRAONLY,IBDA) ; Function to display and allow user selection
"RTN","IBCEMU1",161,0)
 ; of an EOB/MRA on file in 361.1 for the given bill.
"RTN","IBCEMU1",162,0)
 ;
"RTN","IBCEMU1",163,0)
 ; Input:  IBIFN   - internal bill number (required)
"RTN","IBCEMU1",164,0)
 ;         MRAONLY - 1 if only MRA EOB's should be included here
"RTN","IBCEMU1",165,0)
 ;         IBDA    - list entry number of user selection (optional)
"RTN","IBCEMU1",166,0)
 ;
"RTN","IBCEMU1",167,0)
 ; Function Value:  IEN to file 361.1 or nil if no selection made
"RTN","IBCEMU1",168,0)
 ;
"RTN","IBCEMU1",169,0)
 NEW IBEOB,EOBDATE,COUNT,IEN,IBM,INSCO,SEQ,EOBDT,EOBTYP,CLMSTAT,LIST
"RTN","IBCEMU1",170,0)
 NEW J,A,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,IBM1
"RTN","IBCEMU1",171,0)
 S IBEOB="",IBIFN=+$G(IBIFN),EOBDATE=0,COUNT=0,IBDA=+$G(IBDA)
"RTN","IBCEMU1",172,0)
 F  S EOBDATE=$O(^IBM(361.1,"ABD",IBIFN,EOBDATE)) Q:'EOBDATE  D
"RTN","IBCEMU1",173,0)
 . S IEN=0
"RTN","IBCEMU1",174,0)
 . F  S IEN=$O(^IBM(361.1,"ABD",IBIFN,EOBDATE,IEN)) Q:'IEN  D
"RTN","IBCEMU1",175,0)
 .. S IBM=$G(^IBM(361.1,IEN,0))
"RTN","IBCEMU1",176,0)
 .. I $G(MRAONLY),'$P(IBM,U,4) Q     ; mra only check
"RTN","IBCEMU1",177,0)
 .. S INSCO=$$EXTERNAL^DILFD(361.1,.02,,$P(IBM,U,2))
"RTN","IBCEMU1",178,0)
 .. S SEQ=$E($$EXTERNAL^DILFD(361.1,.15,,$P(IBM,U,15)),1)
"RTN","IBCEMU1",179,0)
 .. S EOBDT=$$FMTE^XLFDT($P($P(IBM,U,6),".",1),"2Z")
"RTN","IBCEMU1",180,0)
 .. S EOBTYP=$P("EOB^MRA",U,$P(IBM,U,4)+1)
"RTN","IBCEMU1",181,0)
 .. S CLMSTAT=$$EXTERNAL^DILFD(361.1,.13,"",$P(IBM,U,13))
"RTN","IBCEMU1",182,0)
 .. S COUNT=COUNT+1
"RTN","IBCEMU1",183,0)
 .. S LIST(COUNT)=IEN_U_SEQ_U_INSCO_U_EOBDT_U_EOBTYP_U_CLMSTAT
"RTN","IBCEMU1",184,0)
 .. Q
"RTN","IBCEMU1",185,0)
 . Q
"RTN","IBCEMU1",186,0)
 ;
"RTN","IBCEMU1",187,0)
 I 'COUNT G SELX                           ; no mra/eob data found
"RTN","IBCEMU1",188,0)
 ;
"RTN","IBCEMU1",189,0)
 ; Display mra/eob data
"RTN","IBCEMU1",190,0)
 S J="EOB's/MRA's"
"RTN","IBCEMU1",191,0)
 I $G(MRAONLY) S J="MRA's"
"RTN","IBCEMU1",192,0)
 I COUNT>1 W !!,"The selected bill has multiple ",J," on file.  Please choose one."
"RTN","IBCEMU1",193,0)
 W !!?7,"#",?11,"Seq",?17,"Insurance Company",?40,"EOB Date"
"RTN","IBCEMU1",194,0)
 W ?51,"Type",?57,"Claim Status"
"RTN","IBCEMU1",195,0)
 F J=1:1:COUNT S A=LIST(J) D
"RTN","IBCEMU1",196,0)
 . W !?5,$J(J,3),?11,"(",$P(A,U,2),")",?17,$E($P(A,U,3),1,20)
"RTN","IBCEMU1",197,0)
 . W ?40,$P(A,U,4),?51,$P(A,U,5),?57,$P(A,U,6)
"RTN","IBCEMU1",198,0)
 . Q
"RTN","IBCEMU1",199,0)
 ;
"RTN","IBCEMU1",200,0)
 ; User Selection
"RTN","IBCEMU1",201,0)
 W ! S DIR(0)="NO^1:"_COUNT,DIR("A")="Select an EOB/MRA"
"RTN","IBCEMU1",202,0)
 I $G(MRAONLY) S DIR("A")="Select an MRA"
"RTN","IBCEMU1",203,0)
 D ^DIR K DIR
"RTN","IBCEMU1",204,0)
 I 'Y G SELX    ; no selection made
"RTN","IBCEMU1",205,0)
 S IBEOB=+$G(LIST(Y))
"RTN","IBCEMU1",206,0)
 ;
"RTN","IBCEMU1",207,0)
 ; At this point we need to update the scratch globals with this
"RTN","IBCEMU1",208,0)
 ; EOB specific data
"RTN","IBCEMU1",209,0)
 S IBM=$G(^IBM(361.1,IBEOB,0)) I IBM="" G SELX
"RTN","IBCEMU1",210,0)
 S IBM1=$G(^IBM(361.1,IBEOB,1))
"RTN","IBCEMU1",211,0)
 ;
"RTN","IBCEMU1",212,0)
 I IBDA,$P($G(^TMP("IBCECOB",$J,IBDA)),U,2)=IBIFN D
"RTN","IBCEMU1",213,0)
 . S $P(^TMP("IBCECOB",$J,IBDA),U,3)=$P(IBM,U,19)    ; ptr 364
"RTN","IBCEMU1",214,0)
 . S $P(^TMP("IBCECOB",$J,IBDA),U,4)=IBEOB           ; 361.1 ien
"RTN","IBCEMU1",215,0)
 . Q
"RTN","IBCEMU1",216,0)
 ;
"RTN","IBCEMU1",217,0)
 I IBDA,$D(^TMP("IBCECOB1",$J,IBDA)) D
"RTN","IBCEMU1",218,0)
 . S $P(^TMP("IBCECOB1",$J,IBDA),U,10)=IBEOB         ; 361.1 ien
"RTN","IBCEMU1",219,0)
 . S $P(^TMP("IBCECOB1",$J,IBDA),U,13)=$P(IBM,U,6)   ; eob paid date
"RTN","IBCEMU1",220,0)
 . S $P(^TMP("IBCECOB1",$J,IBDA),U,15)=$P(IBM,U,19)  ; ptr 364
"RTN","IBCEMU1",221,0)
 . S $P(^TMP("IBCECOB1",$J,IBDA),U,16)=$P(IBM,U,15)  ; ins seq
"RTN","IBCEMU1",222,0)
 . S $P(^TMP("IBCECOB1",$J,IBDA),U,17)=$P(IBM1,U,1)  ; payer paid amt
"RTN","IBCEMU1",223,0)
 . Q
"RTN","IBCEMU1",224,0)
SELX ;
"RTN","IBCEMU1",225,0)
 Q IBEOB
"RTN","IBCEMU1",226,0)
 ;
"RTN","IBCEMU1",227,0)
 ;
"RTN","IBCEMU1",228,0)
CHKSUM(IBARRAY) ; Incoming 835 checksum calculation
"RTN","IBCEMU1",229,0)
 ; This function calculates the checksum of the raw 835 data from
"RTN","IBCEMU1",230,0)
 ; the data in array IBARRAY.  This is done to prevent duplicates.
"RTN","IBCEMU1",231,0)
 ; Input parameter IBARRAY is the array reference where the data exists
"RTN","IBCEMU1",232,0)
 ;    at @IBARRAY@(n,0) where n is a sequential #
"RTN","IBCEMU1",233,0)
 ; For file 364.2, IBARRAY = "^IBA(364.2,IBIEN,2)" where IBIEN = the ien
"RTN","IBCEMU1",234,0)
 ;    of the entry in file 364.2 being evaluated
"RTN","IBCEMU1",235,0)
 ;
"RTN","IBCEMU1",236,0)
 NEW Y,LN,DATA,IBREC,POS,EOBFLG
"RTN","IBCEMU1",237,0)
 S Y=0,EOBFLG=0
"RTN","IBCEMU1",238,0)
 S LN=0
"RTN","IBCEMU1",239,0)
 F  S LN=$O(@IBARRAY@(LN)) Q:'LN  D
"RTN","IBCEMU1",240,0)
 . S DATA=$$EXT($G(@IBARRAY@(LN,0))) Q:DATA=""
"RTN","IBCEMU1",241,0)
 . S IBREC=$P(DATA,U,1)
"RTN","IBCEMU1",242,0)
 . I IBREC="835EOB"!(IBREC="835ERA") S EOBFLG=1 Q      ; set the EOB flag
"RTN","IBCEMU1",243,0)
 . I IBREC<1 Q             ; rec# too low
"RTN","IBCEMU1",244,0)
 . I IBREC'<99 Q           ; rec# too high
"RTN","IBCEMU1",245,0)
 . F POS=1:1:$L(DATA) S Y=Y+($A(DATA,POS)*POS)
"RTN","IBCEMU1",246,0)
 . Q
"RTN","IBCEMU1",247,0)
 ;
"RTN","IBCEMU1",248,0)
 I 'EOBFLG S Y=0   ; if this array is not an 835
"RTN","IBCEMU1",249,0)
 Q Y
"RTN","IBCEMU1",250,0)
 ;
"RTN","IBCEMU1",251,0)
EXT(DATA) ; Extracts from the text in DATA if the text contains 
"RTN","IBCEMU1",252,0)
 ;  "##RAW DATA: "
"RTN","IBCEMU1",253,0)
 Q $S(DATA["##RAW DATA: ":$P(DATA,"##RAW DATA: ",2,99),1:DATA)
"RTN","IBCEMU1",254,0)
 ;
"RTN","IBCEMU2")
0^44^B34074055
"RTN","IBCEMU2",1,0)
IBCEMU2 ;ALB/DSM - IB MRA Utility ;01-MAY-2003
"RTN","IBCEMU2",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMU2",3,0)
 ;
"RTN","IBCEMU2",4,0)
 Q
"RTN","IBCEMU2",5,0)
 ;
"RTN","IBCEMU2",6,0)
QMRA ; This is a background procedure that is spun off of the IB BATCH
"RTN","IBCEMU2",7,0)
 ; Print option. This process scans a queue in ^XTMP("IBMRA"_#,$J) and checks
"RTN","IBCEMU2",8,0)
 ; each Bill to see if a printable MRA exist, if so, prints them. MRA's print
"RTN","IBCEMU2",9,0)
 ; on the device associated with the 'Bill Addendum' Form Type.
"RTN","IBCEMU2",10,0)
 ; This process doesn't interact with users.
"RTN","IBCEMU2",11,0)
 ;
"RTN","IBCEMU2",12,0)
 ; Input:
"RTN","IBCEMU2",13,0)
 ;      IBJ   = $J of starting job
"RTN","IBCEMU2",14,0)
 ;      IBFTP = "IBMRA"_# (ien of form type)
"RTN","IBCEMU2",15,0)
 ;
"RTN","IBCEMU2",16,0)
 N IBS1,IBS2,IBS3,IBIFN,IBQ,IBPGN
"RTN","IBCEMU2",17,0)
 S (IBS1,IBIFN,IBQ)=0
"RTN","IBCEMU2",18,0)
 F  S IBS1=$O(^XTMP(IBFTP,IBJ,IBS1)) Q:IBS1=""  D  I IBQ Q
"RTN","IBCEMU2",19,0)
 . S IBS2=0 F  S IBS2=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2)) Q:IBS2=""  D  I IBQ Q
"RTN","IBCEMU2",20,0)
 . . S IBS3=0 F  S IBS3=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3)) Q:IBS3=""  D  I IBQ Q
"RTN","IBCEMU2",21,0)
 . . . S IBIFN=0 F  S IBIFN=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3,IBIFN)) Q:IBIFN=""  D  I $$STOP S IBQ=1 Q
"RTN","IBCEMU2",22,0)
 . . . . I $$MRAEXIST^IBCEMU1(IBIFN) D PROC^IBCEMRAA W @IOF ;must have IBIFN set
"RTN","IBCEMU2",23,0)
 K ^XTMP(IBFTP,IBJ) S ZTREQ="@"
"RTN","IBCEMU2",24,0)
 Q  ;QMRA
"RTN","IBCEMU2",25,0)
 ;
"RTN","IBCEMU2",26,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCEMU2",27,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCEMU2",28,0)
 Q +$G(ZTSTOP)
"RTN","IBCEMU2",29,0)
 ;
"RTN","IBCEMU2",30,0)
 ;
"RTN","IBCEMU2",31,0)
STAT(IBIFN,STATUS,MRAONLY) ; Update the review status in the EOB file
"RTN","IBCEMU2",32,0)
 ; This procedure updates field .16 in file 361.1 for all EOB's for
"RTN","IBCEMU2",33,0)
 ; the given bill#
"RTN","IBCEMU2",34,0)
 ; 
"RTN","IBCEMU2",35,0)
 ;   IBIFN   - Internal Bill# (required)
"RTN","IBCEMU2",36,0)
 ;   STATUS  - Internal Value of the Review Status field (required)
"RTN","IBCEMU2",37,0)
 ;   MRAONLY - Optional Flag with a default of 0 if not passed in
"RTN","IBCEMU2",38,0)
 ;             1:only update MRA EOB's for this bill
"RTN","IBCEMU2",39,0)
 ;             0:update all EOB's for this bill
"RTN","IBCEMU2",40,0)
 ;
"RTN","IBCEMU2",41,0)
 NEW RESULT,IBEOB,IBM
"RTN","IBCEMU2",42,0)
 NEW DIE,DA,DR,D,D0,DI,DIC,DICR,DIG,DIH,DISYS,DIU,DIV,DIW,DQ,DIERR,X,Y
"RTN","IBCEMU2",43,0)
 S IBIFN=+$G(IBIFN),STATUS=$G(STATUS)
"RTN","IBCEMU2",44,0)
 S MRAONLY=$G(MRAONLY,0)
"RTN","IBCEMU2",45,0)
 ;
"RTN","IBCEMU2",46,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G STATX    ; no EOB's for this bill
"RTN","IBCEMU2",47,0)
 D CHK^DIE(361.1,.16,,STATUS,.RESULT)
"RTN","IBCEMU2",48,0)
 I RESULT="^" G STATX                    ; invalid status passed in
"RTN","IBCEMU2",49,0)
 ;
"RTN","IBCEMU2",50,0)
 S IBEOB=0        ; loop thru all EOB's for the bill
"RTN","IBCEMU2",51,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCEMU2",52,0)
 . S IBM=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEMU2",53,0)
 . I $P(IBM,U,16)=STATUS Q           ; no change
"RTN","IBCEMU2",54,0)
 . I MRAONLY,'$P(IBM,U,4) Q          ; skip because of parameter
"RTN","IBCEMU2",55,0)
 . S DIE=361.1,DA=IBEOB,DR=".16////"_STATUS D ^DIE
"RTN","IBCEMU2",56,0)
 . Q
"RTN","IBCEMU2",57,0)
 ;
"RTN","IBCEMU2",58,0)
STATX ;
"RTN","IBCEMU2",59,0)
 Q
"RTN","IBCEMU2",60,0)
 ;
"RTN","IBCEMU2",61,0)
MRAWL(IBIFN) ; Do any MRA EOB's for this bill appear on the worklist?
"RTN","IBCEMU2",62,0)
 ;
"RTN","IBCEMU2",63,0)
 ; This function returns 1 if at least one MRA EOB for the given bill
"RTN","IBCEMU2",64,0)
 ; appears on the MRA management worklist.  Otherwise, this function
"RTN","IBCEMU2",65,0)
 ; returns 0.
"RTN","IBCEMU2",66,0)
 ;
"RTN","IBCEMU2",67,0)
 NEW OK,IBEOB
"RTN","IBCEMU2",68,0)
 S OK=0,IBIFN=+$G(IBIFN)
"RTN","IBCEMU2",69,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G MRAWLX     ; no EOB's for this bill
"RTN","IBCEMU2",70,0)
 S IBEOB=0        ; loop thru all EOB's for the bill
"RTN","IBCEMU2",71,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  Q:OK
"RTN","IBCEMU2",72,0)
 . I $$ELIG^IBCECOB1(IBEOB) S OK=1
"RTN","IBCEMU2",73,0)
 . Q
"RTN","IBCEMU2",74,0)
MRAWLX ;
"RTN","IBCEMU2",75,0)
 Q OK
"RTN","IBCEMU2",76,0)
 ;
"RTN","IBCEMU2",77,0)
TXSTS(IBIFN,IB364,REJFLG,IBZ) ; Claim transmission status information
"RTN","IBCEMU2",78,0)
 ; Input   IBIFN - required
"RTN","IBCEMU2",79,0)
 ;         IB364 - optional (defaults to most recent transmission#)
"RTN","IBCEMU2",80,0)
 ; Output  REJFLG (pass by reference) - 1/0 flag if any rejection status
"RTN","IBCEMU2",81,0)
 ;                                      messages on file
"RTN","IBCEMU2",82,0)
 ;         IBZ (pass by reference) - array of information
"RTN","IBCEMU2",83,0)
 ;
"RTN","IBCEMU2",84,0)
 NEW IEN,SMCNT,SEV,BCH,BCHD0,BCHD1
"RTN","IBCEMU2",85,0)
 S REJFLG=0 K IBZ
"RTN","IBCEMU2",86,0)
 S IBIFN=+$G(IBIFN) I 'IBIFN G TXSTSX
"RTN","IBCEMU2",87,0)
 S IB364=+$G(IB364)
"RTN","IBCEMU2",88,0)
 I 'IB364 S IB364=$$LAST364^IBCEF4(IBIFN) I 'IB364 G TXSTSX
"RTN","IBCEMU2",89,0)
 I $P($G(^IBA(364,IB364,0)),U,1)'=IBIFN G TXSTSX
"RTN","IBCEMU2",90,0)
 S IEN=0,SMCNT=0
"RTN","IBCEMU2",91,0)
 F  S IEN=$O(^IBM(361,"AERR",IB364,IEN)) Q:'IEN  D
"RTN","IBCEMU2",92,0)
 . S SMCNT=SMCNT+1
"RTN","IBCEMU2",93,0)
 . S SEV=$P($G(^IBM(361,IEN,0)),U,3)   ; status message severity
"RTN","IBCEMU2",94,0)
 . I SEV="R" S REJFLG=1
"RTN","IBCEMU2",95,0)
 . Q
"RTN","IBCEMU2",96,0)
 S BCH=+$P($G(^IBA(364,IB364,0)),U,2)  ; batch ien
"RTN","IBCEMU2",97,0)
 S BCHD0=$G(^IBA(364.1,BCH,0))
"RTN","IBCEMU2",98,0)
 S BCHD1=$G(^IBA(364.1,BCH,1))
"RTN","IBCEMU2",99,0)
 S IBZ("DATE LAST SENT")=$P(BCHD1,U,3)
"RTN","IBCEMU2",100,0)
 S IBZ("NUMBER OF STATUS MESSAGES")=SMCNT
"RTN","IBCEMU2",101,0)
 S IBZ("BATCH NUMBER")=$P(BCHD0,U,1)
"RTN","IBCEMU2",102,0)
 S IBZ("TRANSMISSION STATUS")=$P($G(^IBA(364,IB364,0)),U,3)
"RTN","IBCEMU2",103,0)
TXSTSX ;
"RTN","IBCEMU2",104,0)
 Q
"RTN","IBCEMU2",105,0)
 ;
"RTN","IBCEMU2",106,0)
MRACALC(IBEOB,IBIFN,AR,PRCASV) ; Calculates Two Amounts:
"RTN","IBCEMU2",107,0)
 ;  Unreimbursable Medicare Expense and Medicare Contract Adjustment
"RTN","IBCEMU2",108,0)
 ;  Amount for a given EOB.
"RTN","IBCEMU2",109,0)
 ;
"RTN","IBCEMU2",110,0)
 ; Input   IBIFN= ien of Claim file 399 - Required
"RTN","IBCEMU2",111,0)
 ;         IBEOB= ien of EOB file 361.1 - Required
"RTN","IBCEMU2",112,0)
 ;         AR=    Flag indicating this was called from AR function
"RTN","IBCEMU2",113,0)
 ; Input/Output  PRCASV= array with the two calculated values
"RTN","IBCEMU2",114,0)
 ;         PRCASV("MEDURE")=Unreimbursable Medicare Expense
"RTN","IBCEMU2",115,0)
 ;         PRCASV("MEDCA")=Medicare Contract Adjustment Amount
"RTN","IBCEMU2",116,0)
 ;
"RTN","IBCEMU2",117,0)
 ; For multiple EOB's, add up the calculated values across EOB's
"RTN","IBCEMU2",118,0)
 ;
"RTN","IBCEMU2",119,0)
 N I,LNLVL,EOBADJ,IBCOBN,INPAT,FRMTYP
"RTN","IBCEMU2",120,0)
 ;
"RTN","IBCEMU2",121,0)
 S FRMTYP=$$FT^IBCEF(IBIFN)       ;Form Type 2=HCFA 1500; 3=UB92
"RTN","IBCEMU2",122,0)
 S INPAT=$$INPAT^IBCEF(IBIFN)     ;Inpat/Outpat Flag
"RTN","IBCEMU2",123,0)
 S AR=$G(AR,0)    ;initialize AR flag
"RTN","IBCEMU2",124,0)
 F I=0,1,2 S IBEOB(I)=$G(^IBM(361.1,IBEOB,I))
"RTN","IBCEMU2",125,0)
 I $P(IBEOB(0),U,4)'=1 Q  ;make sure it's an MRA
"RTN","IBCEMU2",126,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN) ;get current bill sequence
"RTN","IBCEMU2",127,0)
 ; Make sure we're on the right insurance sequence when AR flag is on
"RTN","IBCEMU2",128,0)
 I AR I $P(IBEOB(0),U,15)'=(IBCOBN-1) Q
"RTN","IBCEMU2",129,0)
 ;
"RTN","IBCEMU2",130,0)
 ; Unreimburseable Medicare Expense (same calc regardless of form type)
"RTN","IBCEMU2",131,0)
 ; For multiple EOB's, add up the amounts across EOB's
"RTN","IBCEMU2",132,0)
 S PRCASV("MEDURE")=$G(PRCASV("MEDURE"))+IBEOB(1)
"RTN","IBCEMU2",133,0)
 ;
"RTN","IBCEMU2",134,0)
 ; Handle HCFA 1500 Form Type Next:
"RTN","IBCEMU2",135,0)
 I FRMTYP=2 D MEDCARE(IBEOB,.PRCASV) Q
"RTN","IBCEMU2",136,0)
 ;
"RTN","IBCEMU2",137,0)
 ; Handle UB92 Form Type Next:
"RTN","IBCEMU2",138,0)
 ; If Inpatient Calculate from Claim level data
"RTN","IBCEMU2",139,0)
 I INPAT D  Q  ;
"RTN","IBCEMU2",140,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCEMU2",141,0)
 . S PRCASV("MEDCA")=$G(PRCASV("MEDCA"))+$$CALCMCA(.EOBADJ)
"RTN","IBCEMU2",142,0)
 ;
"RTN","IBCEMU2",143,0)
 ; If Outpatient Calculate from Service Line level data
"RTN","IBCEMU2",144,0)
 D MEDCARE(IBEOB,.PRCASV)
"RTN","IBCEMU2",145,0)
 Q  ;MRACALC
"RTN","IBCEMU2",146,0)
 ;
"RTN","IBCEMU2",147,0)
MEDCARE(IBEOB,PRCASV) ; If Outpatient Calculate from Service Line level data
"RTN","IBCEMU2",148,0)
 N LNLVL,EOBADJ
"RTN","IBCEMU2",149,0)
 S LNLVL=0
"RTN","IBCEMU2",150,0)
 F  S LNLVL=$O(^IBM(361.1,IBEOB,15,LNLVL)) Q:'LNLVL  D  ;
"RTN","IBCEMU2",151,0)
 . K EOBADJ
"RTN","IBCEMU2",152,0)
 . M EOBADJ=^IBM(361.1,IBEOB,15,LNLVL,1)
"RTN","IBCEMU2",153,0)
 . ; Total up the Medicare Contract Adjustment across ALL Service Lines
"RTN","IBCEMU2",154,0)
 . S PRCASV("MEDCA")=$G(PRCASV("MEDCA"))+$$CALCMCA(.EOBADJ)
"RTN","IBCEMU2",155,0)
 Q  ;MEDCARE
"RTN","IBCEMU2",156,0)
 ;
"RTN","IBCEMU2",157,0)
CALCMCA(EOBADJ) ; FUNCTION - Calculate Medicare Contract Adjustment
"RTN","IBCEMU2",158,0)
 ; Sums up Amounts on ALL Reason Codes under ALL Group Codes = 'CO' and
"RTN","IBCEMU2",159,0)
 ; returns that value (which is Medicare Contract Adjustment).
"RTN","IBCEMU2",160,0)
 ;
"RTN","IBCEMU2",161,0)
 ; Input  EOBADJ = Array of Group Codes & Reason Codes from either the Claim 
"RTN","IBCEMU2",162,0)
 ;                 Level (10) or Service Line Level (15) of EOB file (#361.1)
"RTN","IBCEMU2",163,0)
 ; Output  returns Medicare Contract Adjustment
"RTN","IBCEMU2",164,0)
 ;
"RTN","IBCEMU2",165,0)
 N GRPLVL,RSNLVL,RSNAMT,MCA
"RTN","IBCEMU2",166,0)
 S (GRPLVL,MCA)=0
"RTN","IBCEMU2",167,0)
 F  S GRPLVL=$O(EOBADJ(GRPLVL)) Q:'GRPLVL  D  ;
"RTN","IBCEMU2",168,0)
 . I $P($G(EOBADJ(GRPLVL,0)),U)'="CO" Q
"RTN","IBCEMU2",169,0)
 . S RSNLVL=0
"RTN","IBCEMU2",170,0)
 . F  S RSNLVL=$O(EOBADJ(GRPLVL,1,RSNLVL)) Q:'RSNLVL  D  ;
"RTN","IBCEMU2",171,0)
 . . S RSNAMT=$P($G(EOBADJ(GRPLVL,1,RSNLVL,0)),U,2)
"RTN","IBCEMU2",172,0)
 . . S MCA=MCA+RSNAMT
"RTN","IBCEMU2",173,0)
 Q MCA  ;CALCMCA
"RTN","IBCEMU2",174,0)
 ;
"RTN","IBCEMU2",175,0)
ALLOWED(IBEOB) ; Returns Total Allowed Amount by summing up all Allowed Amounts 
"RTN","IBCEMU2",176,0)
 ; from Line Level Adjustment
"RTN","IBCEMU2",177,0)
 ; Input: IBEOB = ien of EOB file (361.1)
"RTN","IBCEMU2",178,0)
 ; 
"RTN","IBCEMU2",179,0)
 N LNLVL,LNLVLD,ALWD,TOTALWD
"RTN","IBCEMU2",180,0)
 S (LNLVL,TOTALWD)=0
"RTN","IBCEMU2",181,0)
 F  S LNLVL=$O(^IBM(361.1,IBEOB,15,LNLVL)) Q:'LNLVL  S LNLVLD=^(LNLVL,0) D
"RTN","IBCEMU2",182,0)
 . S ALWD=$P(LNLVLD,U,13),TOTALWD=TOTALWD+ALWD   ; Allowed Amount
"RTN","IBCEMU2",183,0)
 Q TOTALWD  ;ALLOWED
"RTN","IBCEMU2",184,0)
 ;
"RTN","IBCEMU2",185,0)
MRATYPE(BILL,ARDATE) ; Function - determines the MRA Receivable Type for a Third
"RTN","IBCEMU2",186,0)
 ; Party Receivable. This is accomplished by comparing DATE MRA FIRST ACTIVATED
"RTN","IBCEMU2",187,0)
 ; with AR Activation Date for the Bill.
"RTN","IBCEMU2",188,0)
 ; 
"RTN","IBCEMU2",189,0)
 ; Input     BILL= ien of a given Bill Number (Required)
"RTN","IBCEMU2",190,0)
 ;         ARDATE= Date Account Receivable was Activated - date only  (Required)
"RTN","IBCEMU2",191,0)
 ;
"RTN","IBCEMU2",192,0)
 ; Output - Possible Types:
"RTN","IBCEMU2",193,0)
 ;          1 = Pre-MRA implementation
"RTN","IBCEMU2",194,0)
 ;          2 = Post MRA Medicare Receivable
"RTN","IBCEMU2",195,0)
 ;          3 = Post MRA non-Medicare Receivable
"RTN","IBCEMU2",196,0)
 ;
"RTN","IBCEMU2",197,0)
 N MRADTACT,MRAMT
"RTN","IBCEMU2",198,0)
 I '$G(ARDATE)!'$G(BILL) Q 1
"RTN","IBCEMU2",199,0)
 ;
"RTN","IBCEMU2",200,0)
 ; get DATE MRA FIRST ACTIVATED at site
"RTN","IBCEMU2",201,0)
 S MRADTACT=$$MRADTACT()
"RTN","IBCEMU2",202,0)
 ;
"RTN","IBCEMU2",203,0)
 ; MRA not Activated at site
"RTN","IBCEMU2",204,0)
 I MRADTACT="" Q 1 ;MRATYPE
"RTN","IBCEMU2",205,0)
 ; 
"RTN","IBCEMU2",206,0)
 ; Bill from pre-MRA implementation era
"RTN","IBCEMU2",207,0)
 I ARDATE<MRADTACT Q 1 ;MRATYPE
"RTN","IBCEMU2",208,0)
 ;
"RTN","IBCEMU2",209,0)
 ; Post-MRA Medicare bill; get Medicare amounts
"RTN","IBCEMU2",210,0)
 S MRAMT=$G(^PRCA(430,BILL,13))
"RTN","IBCEMU2",211,0)
 ; check Medicare Contractual Adjustment Amount
"RTN","IBCEMU2",212,0)
 I $P(MRAMT,U,1) Q 2 ;MRATYPE
"RTN","IBCEMU2",213,0)
 ; check Medicare Unreimburseable Amout
"RTN","IBCEMU2",214,0)
 I $P(MRAMT,U,2) Q 2 ;MRATYPE
"RTN","IBCEMU2",215,0)
 ; check if bill is a Medicare one
"RTN","IBCEMU2",216,0)
 I $$MRAEXIST^IBCEMU1(BILL) Q 2 ;MRATYPE
"RTN","IBCEMU2",217,0)
 ; check if bill is a Medicare Supplemental one
"RTN","IBCEMU2",218,0)
 I $P($$CRIT^IBRFN2(BILL),U)=2 Q 2 ;MRATYPE
"RTN","IBCEMU2",219,0)
 ;
"RTN","IBCEMU2",220,0)
 ; all others are Post-MRA non-Medicare bills
"RTN","IBCEMU2",221,0)
 Q 3 ;MRATYPE
"RTN","IBCEMU2",222,0)
 ;
"RTN","IBCEMU2",223,0)
MRADTACT() ; Function - returns DATE MRA FIRST ACTIVATED at site
"RTN","IBCEMU2",224,0)
 Q $P($G(^IBE(350.9,1,8)),U,13)
"RTN","IBCEMU2",225,0)
 ;
"RTN","IBCEMU3")
0^80^B39494874
"RTN","IBCEMU3",1,0)
IBCEMU3 ;ALB/ESG - MRA UTILITY - INS CO CHECKER ;14-JUNE-2004
"RTN","IBCEMU3",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMU3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMU3",4,0)
 ;
"RTN","IBCEMU3",5,0)
 Q
"RTN","IBCEMU3",6,0)
 ;
"RTN","IBCEMU3",7,0)
INSCHK ; Check insurance company file for "rogue" Medicare WNR entries
"RTN","IBCEMU3",8,0)
 ; Send an email message reporting any problems
"RTN","IBCEMU3",9,0)
 NEW IEN,INSNAME,CNT,MSG,Z,XMTEXT,XMDUZ,XMSUB,XMY,XMDUN,XMZ,XMMG
"RTN","IBCEMU3",10,0)
 NEW D,D0,D1,D2,DG,DIC,DICR,DISYS,DIW,DIFROM,DA,DIK,X,Y
"RTN","IBCEMU3",11,0)
 NEW MCR,DATA,Z0,Z5,PCE,TOC,IBX,INACTXT
"RTN","IBCEMU3",12,0)
 KILL ^TMP($J,"P155")
"RTN","IBCEMU3",13,0)
 S IEN=0,CNT=0,MCR=0
"RTN","IBCEMU3",14,0)
 F  S IEN=$O(^DIC(36,IEN)) Q:'IEN  D
"RTN","IBCEMU3",15,0)
 . I '$$MCRWNR^IBEFUNC(IEN) Q          ; not Medicare WNR
"RTN","IBCEMU3",16,0)
 . ;I $P($G(^DIC(36,IEN,0)),U,5) Q      ; inactive
"RTN","IBCEMU3",17,0)
 . ;I $P($G(^DIC(36,IEN,5)),U,1) Q      ; scheduled for deletion
"RTN","IBCEMU3",18,0)
 . S INSNAME=$P($G(^DIC(36,IEN,0)),U,1)
"RTN","IBCEMU3",19,0)
 . I INSNAME="MEDICARE (WNR)" D  Q     ; this is what it should be
"RTN","IBCEMU3",20,0)
 .. S MCR=MCR+1
"RTN","IBCEMU3",21,0)
 .. D MCRPRV(IEN),PROVID(IEN)          ; do some stuff with MCRWNR
"RTN","IBCEMU3",22,0)
 .. Q
"RTN","IBCEMU3",23,0)
 . I INSNAME="" S INSNAME="~UNKNOWN"
"RTN","IBCEMU3",24,0)
 . S CNT=CNT+1
"RTN","IBCEMU3",25,0)
 . S ^TMP($J,"P155",1,INSNAME,IEN)=""
"RTN","IBCEMU3",26,0)
 . Q
"RTN","IBCEMU3",27,0)
 ;
"RTN","IBCEMU3",28,0)
 ; Either none or more than 1 Medicare WNR entries exist
"RTN","IBCEMU3",29,0)
 I MCR'=1 D
"RTN","IBCEMU3",30,0)
 . S IEN=0,INSNAME="MEDICARE (WNR)"
"RTN","IBCEMU3",31,0)
 . I '$D(^DIC(36,"B",INSNAME)) S ^TMP($J,"P155",2,0)="DNE" Q
"RTN","IBCEMU3",32,0)
 . F  S IEN=$O(^DIC(36,"B",INSNAME,IEN)) Q:'IEN  D
"RTN","IBCEMU3",33,0)
 .. S DATA="",Z0=$G(^DIC(36,IEN,0)),Z5=$G(^DIC(36,IEN,5))
"RTN","IBCEMU3",34,0)
 .. I $P(Z0,U,2)'="N" S $P(DATA,U,1)=$$EXTERNAL^DILFD(36,1,,$P(Z0,U,2))
"RTN","IBCEMU3",35,0)
 .. S TOC=$$EXTERNAL^DILFD(36,.13,,$P(Z0,U,13))  ; type of coverage
"RTN","IBCEMU3",36,0)
 .. I TOC'="MEDICARE" S $P(DATA,U,2)=TOC
"RTN","IBCEMU3",37,0)
 .. I $P(Z0,U,5) S $P(DATA,U,3)=$$EXTERNAL^DILFD(36,.05,,$P(Z0,U,5))
"RTN","IBCEMU3",38,0)
 .. I $P(Z5,U,1) S $P(DATA,U,4)=$$EXTERNAL^DILFD(36,5.01,,$P(Z5,U,1))
"RTN","IBCEMU3",39,0)
 .. S ^TMP($J,"P155",2,IEN)=DATA
"RTN","IBCEMU3",40,0)
 .. Q
"RTN","IBCEMU3",41,0)
 . Q
"RTN","IBCEMU3",42,0)
 ;
"RTN","IBCEMU3",43,0)
 ; Check the Medicare related plans
"RTN","IBCEMU3",44,0)
 S IBX=$$GETWNR^IBCNSMM1()
"RTN","IBCEMU3",45,0)
 I 'IBX S ^TMP($J,"P155",3)=IBX
"RTN","IBCEMU3",46,0)
 ;
"RTN","IBCEMU3",47,0)
 S MSG(1)="MRA has been installed at the following site:"
"RTN","IBCEMU3",48,0)
 I '$$VFIELD^DILFD(350.9,8.11) S MSG(1)="Pre-MRA Insurance Company checker utility from:"
"RTN","IBCEMU3",49,0)
 ;
"RTN","IBCEMU3",50,0)
 S MSG(2)=""
"RTN","IBCEMU3",51,0)
 S MSG(3)="   "_$P($G(^DIC(4,+$P($G(^IBE(350.9,1,0)),U,2),0)),U,1)
"RTN","IBCEMU3",52,0)
 S MSG(4)="   "_$G(^XMB("NETNAME"))
"RTN","IBCEMU3",53,0)
 S MSG(5)="   "_$$SITE^VASITE()
"RTN","IBCEMU3",54,0)
 S MSG(6)=""
"RTN","IBCEMU3",55,0)
 S MSG(7)="Version Information:  "_$G(^XPD(9.7,+$O(^XPD(9.7,"B","IB*2.0*155",""),-1),2))
"RTN","IBCEMU3",56,0)
 S MSG(8)="",Z=8
"RTN","IBCEMU3",57,0)
 ;
"RTN","IBCEMU3",58,0)
 I '$D(^TMP($J,"P155")) D
"RTN","IBCEMU3",59,0)
 . S Z=Z+1,MSG(Z)="No problems detected with the set-up of MEDICARE (WNR)."
"RTN","IBCEMU3",60,0)
 . S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",61,0)
 . Q
"RTN","IBCEMU3",62,0)
 ;
"RTN","IBCEMU3",63,0)
 I $D(^TMP($J,"P155",2)) D
"RTN","IBCEMU3",64,0)
 . S Z=Z+1,MSG(Z)="*** MEDICARE (WNR) IS NOT SET-UP CORRECTLY ***"
"RTN","IBCEMU3",65,0)
 . S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",66,0)
 . ;
"RTN","IBCEMU3",67,0)
 . I $D(^TMP($J,"P155",2,0)) D  Q
"RTN","IBCEMU3",68,0)
 .. S Z=Z+1,MSG(Z)="   There is no insurance company on file named ""MEDICARE (WNR)""."
"RTN","IBCEMU3",69,0)
 .. S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",70,0)
 .. Q
"RTN","IBCEMU3",71,0)
 . ;
"RTN","IBCEMU3",72,0)
 . I MCR>1 D
"RTN","IBCEMU3",73,0)
 .. S Z=Z+1,MSG(Z)="   There are multiple MEDICARE (WNR) entries defined."
"RTN","IBCEMU3",74,0)
 .. S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",75,0)
 .. Q
"RTN","IBCEMU3",76,0)
 . ;
"RTN","IBCEMU3",77,0)
 . S IEN=0
"RTN","IBCEMU3",78,0)
 . F  S IEN=$O(^TMP($J,"P155",2,IEN)) Q:'IEN  D
"RTN","IBCEMU3",79,0)
 .. S DATA=^TMP($J,"P155",2,IEN)
"RTN","IBCEMU3",80,0)
 .. S Z=Z+1,MSG(Z)="   "_$P($G(^DIC(36,IEN,0)),U,1)_"  ien="_IEN
"RTN","IBCEMU3",81,0)
 .. I DATA="" S Z=Z+1,MSG(Z)="     VALID"
"RTN","IBCEMU3",82,0)
 .. F PCE=1:1:4 I $P(DATA,U,PCE)'="" D
"RTN","IBCEMU3",83,0)
 ... S Z=Z+1
"RTN","IBCEMU3",84,0)
 ... I PCE=1 S MSG(Z)="REIMBURSE?"
"RTN","IBCEMU3",85,0)
 ... I PCE=2 S MSG(Z)="TYPE OF COVERAGE"
"RTN","IBCEMU3",86,0)
 ... I PCE=3 S MSG(Z)="INACTIVE"
"RTN","IBCEMU3",87,0)
 ... I PCE=4 S MSG(Z)="SCHEDULED FOR DELETION"
"RTN","IBCEMU3",88,0)
 ... S MSG(Z)="     "_MSG(Z)_" = "_$P(DATA,U,PCE)
"RTN","IBCEMU3",89,0)
 ... Q
"RTN","IBCEMU3",90,0)
 .. S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",91,0)
 .. Q
"RTN","IBCEMU3",92,0)
 . S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",93,0)
 . Q
"RTN","IBCEMU3",94,0)
 ;
"RTN","IBCEMU3",95,0)
 I $D(^TMP($J,"P155",3)) D
"RTN","IBCEMU3",96,0)
 . S Z=Z+1,MSG(Z)="Additional Information:"
"RTN","IBCEMU3",97,0)
 . S Z=Z+1,MSG(Z)="   "_$G(^TMP($J,"P155",3))
"RTN","IBCEMU3",98,0)
 . S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",99,0)
 . Q
"RTN","IBCEMU3",100,0)
 ;
"RTN","IBCEMU3",101,0)
 I $D(^TMP($J,"P155",1)) D
"RTN","IBCEMU3",102,0)
 . S Z=Z+1,MSG(Z)="The following insurance company is "
"RTN","IBCEMU3",103,0)
 . I CNT>1 S MSG(Z)="The following "_CNT_" insurance companies are "
"RTN","IBCEMU3",104,0)
 . S MSG(Z)=MSG(Z)_"incorrectly set-up like Medicare WNR:"
"RTN","IBCEMU3",105,0)
 . S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",106,0)
 . S INSNAME=""
"RTN","IBCEMU3",107,0)
 . F  S INSNAME=$O(^TMP($J,"P155",1,INSNAME)) Q:INSNAME=""  S IEN=0 F  S IEN=$O(^TMP($J,"P155",1,INSNAME,IEN)) Q:'IEN  D
"RTN","IBCEMU3",108,0)
 .. S INACTXT=""
"RTN","IBCEMU3",109,0)
 .. I $P($G(^DIC(36,IEN,0)),U,5) S INACTXT="Inactive"
"RTN","IBCEMU3",110,0)
 .. S Z=Z+1,MSG(Z)="   "_$$LJ^XLFSTR(INSNAME,35)
"RTN","IBCEMU3",111,0)
 .. S MSG(Z)=MSG(Z)_$$LJ^XLFSTR(INACTXT,15)
"RTN","IBCEMU3",112,0)
 .. S MSG(Z)=MSG(Z)_"ien="_IEN
"RTN","IBCEMU3",113,0)
 .. Q
"RTN","IBCEMU3",114,0)
 . S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",115,0)
 . S Z=Z+1,MSG(Z)="According to the VA guidelines for the Standardization of Medicare"
"RTN","IBCEMU3",116,0)
 . S Z=Z+1,MSG(Z)="Information, the only entry should be ""MEDICARE (WNR)""."
"RTN","IBCEMU3",117,0)
 . S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",118,0)
 . Q
"RTN","IBCEMU3",119,0)
 ;
"RTN","IBCEMU3",120,0)
 ; Send this message to holders of the IB INSURANCE SUPERVISOR key
"RTN","IBCEMU3",121,0)
 S Z=Z+1,MSG(Z)="Local recipients of this message hold the IB INSURANCE SUPERVISOR key"
"RTN","IBCEMU3",122,0)
 S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",123,0)
 S IBX=0
"RTN","IBCEMU3",124,0)
 F  S IBX=$O(^XUSEC("IB INSURANCE SUPERVISOR",IBX)) Q:'IBX  D
"RTN","IBCEMU3",125,0)
 . N INFO,PHONE,NAME,PHONE2
"RTN","IBCEMU3",126,0)
 . S INFO=$G(^VA(200,IBX,0))
"RTN","IBCEMU3",127,0)
 . I $P(INFO,U,7) Q    ; disuser
"RTN","IBCEMU3",128,0)
 . I $P(INFO,U,11) Q   ; termination date
"RTN","IBCEMU3",129,0)
 . S XMY(IBX)=""
"RTN","IBCEMU3",130,0)
 . S PHONE=$P($G(^VA(200,IBX,.13)),U,2)
"RTN","IBCEMU3",131,0)
 . S PHONE2=$P($G(^VA(200,IBX,.13)),U,5)
"RTN","IBCEMU3",132,0)
 . I PHONE2'="" S PHONE=PHONE_$S(PHONE'="":" / ",1:"")_PHONE2
"RTN","IBCEMU3",133,0)
 . I PHONE="" S PHONE="Unknown phone #"
"RTN","IBCEMU3",134,0)
 . S NAME=$P(INFO,U,1)
"RTN","IBCEMU3",135,0)
 . S Z=Z+1,MSG(Z)="   "_$$LJ^XLFSTR(NAME,40)_PHONE
"RTN","IBCEMU3",136,0)
 . Q
"RTN","IBCEMU3",137,0)
 S Z=Z+1,MSG(Z)=""
"RTN","IBCEMU3",138,0)
 ;
"RTN","IBCEMU3",139,0)
 ; MailMan variables and message sending
"RTN","IBCEMU3",140,0)
 S XMTEXT="MSG("
"RTN","IBCEMU3",141,0)
 S XMDUZ=DUZ
"RTN","IBCEMU3",142,0)
 S XMSUB="MEDICARE WNR ENTRIES"
"RTN","IBCEMU3",143,0)
 S XMY(DUZ)=""
"RTN","IBCEMU3",144,0)
 S XMY("michael.f.pida@us.pwc.com")=""
"RTN","IBCEMU3",145,0)
 S XMY("Janet.Harris2@med.va.gov")=""
"RTN","IBCEMU3",146,0)
 S XMY("Loretta.Gulley2@med.va.gov")=""
"RTN","IBCEMU3",147,0)
 S XMY("eric.gustafson@daou.com")=""
"RTN","IBCEMU3",148,0)
 ;
"RTN","IBCEMU3",149,0)
 D ^XMD   ; send it!
"RTN","IBCEMU3",150,0)
 ;
"RTN","IBCEMU3",151,0)
INSCHKX ;
"RTN","IBCEMU3",152,0)
 KILL ^TMP($J,"P155")
"RTN","IBCEMU3",153,0)
 Q
"RTN","IBCEMU3",154,0)
 ;
"RTN","IBCEMU3",155,0)
MCRPRV(INSIEN) ; Update fields in the MCRWNR entry
"RTN","IBCEMU3",156,0)
 ; This procedure updates the Hospital Provider Number field (.11)
"RTN","IBCEMU3",157,0)
 ; and the Professional Provider Number field (.17) in file 36 for the
"RTN","IBCEMU3",158,0)
 ; MEDICARE (WNR) entry.  These numbers have been assigned to the VA
"RTN","IBCEMU3",159,0)
 ; by Medicare.
"RTN","IBCEMU3",160,0)
 ;
"RTN","IBCEMU3",161,0)
 NEW DIE,DA,DR,D,D0,DI,DIC,DQ,X,Y
"RTN","IBCEMU3",162,0)
 S INSIEN=+$G(INSIEN)
"RTN","IBCEMU3",163,0)
 I '$D(^DIC(36,INSIEN)) G MCRPRVX
"RTN","IBCEMU3",164,0)
 S DIE=36,DA=INSIEN,DR=".11///670899;.17///670899"
"RTN","IBCEMU3",165,0)
 D ^DIE
"RTN","IBCEMU3",166,0)
MCRPRVX ;
"RTN","IBCEMU3",167,0)
 Q
"RTN","IBCEMU3",168,0)
 ;
"RTN","IBCEMU3",169,0)
PROVID(INSIEN) ; Add an entry to file 355.91 - IB insurance co level billing
"RTN","IBCEMU3",170,0)
 ; provider ID file.  This is to add an entry for the UPIN of VAD000
"RTN","IBCEMU3",171,0)
 ; into this file for the MEDICARE (WNR) insurance company entry.
"RTN","IBCEMU3",172,0)
 ;
"RTN","IBCEMU3",173,0)
 NEW DA,DATA,DIK,DG,DIC,DICR,DIW,X,Y
"RTN","IBCEMU3",174,0)
 S INSIEN=+$G(INSIEN)
"RTN","IBCEMU3",175,0)
 I '$D(^DIC(36,INSIEN)) G PROVIDX
"RTN","IBCEMU3",176,0)
 S DA=0
"RTN","IBCEMU3",177,0)
 F  S DA=$O(^IBA(355.91,"B",INSIEN,DA)) Q:'DA  D
"RTN","IBCEMU3",178,0)
 . S DATA=$G(^IBA(355.91,DA,0))
"RTN","IBCEMU3",179,0)
 . I $$EXTERNAL^DILFD(355.91,.06,,$P(DATA,U,6))'="UPIN" Q
"RTN","IBCEMU3",180,0)
 . S DIK="^IBA(355.91," D ^DIK    ; delete existing MCRWNR/upin entry
"RTN","IBCEMU3",181,0)
 . Q
"RTN","IBCEMU3",182,0)
 ;
"RTN","IBCEMU3",183,0)
 ; Add the new MCRWNR/upin entry
"RTN","IBCEMU3",184,0)
 NEW DIC,DO,DA,DINUM,X,Y,UPIN,DG,DICR,DIW
"RTN","IBCEMU3",185,0)
 S DIC="^IBA(355.91,",DIC(0)="F",X=INSIEN
"RTN","IBCEMU3",186,0)
 S UPIN=$O(^IBE(355.97,"B","UPIN",0)) I 'UPIN G PROVIDX
"RTN","IBCEMU3",187,0)
 S DIC("DR")=".04////0;.05////0;.06////"_UPIN_";.07////VAD000;.1////*N/A*"
"RTN","IBCEMU3",188,0)
 D FILE^DICN
"RTN","IBCEMU3",189,0)
PROVIDX ;
"RTN","IBCEMU3",190,0)
 Q
"RTN","IBCEMU3",191,0)
 ;
"RTN","IBCEMVU")
0^42^B6413709
"RTN","IBCEMVU",1,0)
IBCEMVU ;DAOU/ESG - STAND-ALONE VIEW MRA EOB ;18-APR-2003
"RTN","IBCEMVU",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEMVU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMVU",4,0)
 ;
"RTN","IBCEMVU",5,0)
EN ; Entry point
"RTN","IBCEMVU",6,0)
 NEW DA,DIC,DILN,DISYS,X,Y,DTOUT,DUOUT,IBIFN,IBEOBIFN
"RTN","IBCEMVU",7,0)
LOOP ;
"RTN","IBCEMVU",8,0)
 K IBIFN
"RTN","IBCEMVU",9,0)
 D INIT
"RTN","IBCEMVU",10,0)
 W !
"RTN","IBCEMVU",11,0)
 S DIC="^IBM(361.1,"
"RTN","IBCEMVU",12,0)
 S DIC(0)="AEMQ"
"RTN","IBCEMVU",13,0)
 S DIC("S")="I $P(^(0),U,4)=1"      ; MRA EOB type
"RTN","IBCEMVU",14,0)
 S DIC("W")="D EOBLST^IBCEMU1(Y)"   ; modify generic lister
"RTN","IBCEMVU",15,0)
 D ^DIC
"RTN","IBCEMVU",16,0)
 I Y=-1!$D(DTOUT)!$D(DUOUT) G EX
"RTN","IBCEMVU",17,0)
 S IBIFN=+$P(Y,U,2)
"RTN","IBCEMVU",18,0)
 I IBIFN D VIEWEOB(IBIFN,+$P(Y,U,1))
"RTN","IBCEMVU",19,0)
 I $$MRACNT^IBCEMU1(IBIFN)'>1 G LOOP
"RTN","IBCEMVU",20,0)
 ;
"RTN","IBCEMVU",21,0)
 ; At this point, we know the selected bill has multiple MRA's on file.
"RTN","IBCEMVU",22,0)
 ; Display the multiple MRA lister and let the user choose again
"RTN","IBCEMVU",23,0)
ML1 ;
"RTN","IBCEMVU",24,0)
 D INIT
"RTN","IBCEMVU",25,0)
 S IBEOBIFN=$$SEL^IBCEMU1(IBIFN,1)
"RTN","IBCEMVU",26,0)
 I 'IBEOBIFN G LOOP
"RTN","IBCEMVU",27,0)
 D VIEWEOB(IBIFN,IBEOBIFN)
"RTN","IBCEMVU",28,0)
 G ML1
"RTN","IBCEMVU",29,0)
 ;
"RTN","IBCEMVU",30,0)
EX ; Exit point
"RTN","IBCEMVU",31,0)
 Q
"RTN","IBCEMVU",32,0)
 ;
"RTN","IBCEMVU",33,0)
INIT ; clear screen, intro text
"RTN","IBCEMVU",34,0)
 W @IOF
"RTN","IBCEMVU",35,0)
 W !?33,"View MRA EOB's"
"RTN","IBCEMVU",36,0)
 W !!?1,"This option will allow you to select and view Medicare Remittance Advice (MRA)"
"RTN","IBCEMVU",37,0)
 W !?1,"Explanations of Benefits (EOB).  Only Medicare EOB's are displayed here."
"RTN","IBCEMVU",38,0)
INITX ;
"RTN","IBCEMVU",39,0)
 Q
"RTN","IBCEMVU",40,0)
 ;
"RTN","IBCEMVU",41,0)
VIEWEOB(IBIFN,IBEOBIFN) ; This procedure is responsible for
"RTN","IBCEMVU",42,0)
 ; invoking the ListManager list for viewing an EOB.
"RTN","IBCEMVU",43,0)
 ;   IBIFN is the internal bill# (required)
"RTN","IBCEMVU",44,0)
 ;   IBEOBIFN is the ien to file 361.1 if known (optional)
"RTN","IBCEMVU",45,0)
 ;
"RTN","IBCEMVU",46,0)
 NEW COL,CTRLCOL,FINISH,IB,IBCNT,IBONE,POP,VALMBCK,VALMY,X,Y,Z
"RTN","IBCEMVU",47,0)
 D EN^VALM("IBCEM VIEW EOB")
"RTN","IBCEMVU",48,0)
VIEWX ;
"RTN","IBCEMVU",49,0)
 Q
"RTN","IBCEMVU",50,0)
 ;
"RTN","IBCEMVU",51,0)
SCR(IBIFN) ; ?MRA action from the IB Bill Enter/Edit screens
"RTN","IBCEMVU",52,0)
 NEW DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,CNT,IBFASTXT,IBEOBIFN
"RTN","IBCEMVU",53,0)
 I '$D(IOUON)!'$D(IORVON) D ENS^%ZISS
"RTN","IBCEMVU",54,0)
 D SCHD
"RTN","IBCEMVU",55,0)
 S CNT=$$MRACNT^IBCEMU1(IBIFN)
"RTN","IBCEMVU",56,0)
 I 'CNT D  G SCRX
"RTN","IBCEMVU",57,0)
 . W !!!?8,"There are no MRA EOB's on file for this bill."
"RTN","IBCEMVU",58,0)
 . D EOP
"RTN","IBCEMVU",59,0)
 . Q
"RTN","IBCEMVU",60,0)
 ;
"RTN","IBCEMVU",61,0)
 I CNT=1 D VIEWEOB(IBIFN) G SCRX     ; only one MRA
"RTN","IBCEMVU",62,0)
 ;
"RTN","IBCEMVU",63,0)
SCLOOP ; Multiple MRA's on file.  Call the MRA/EOB lister.
"RTN","IBCEMVU",64,0)
 ;
"RTN","IBCEMVU",65,0)
 D SCHD
"RTN","IBCEMVU",66,0)
 S IBEOBIFN=$$SEL^IBCEMU1(IBIFN,1)
"RTN","IBCEMVU",67,0)
 I 'IBEOBIFN G SCRX
"RTN","IBCEMVU",68,0)
 D VIEWEOB(IBIFN,IBEOBIFN)
"RTN","IBCEMVU",69,0)
 G SCLOOP
"RTN","IBCEMVU",70,0)
 ;
"RTN","IBCEMVU",71,0)
SCRX ;
"RTN","IBCEMVU",72,0)
 Q
"RTN","IBCEMVU",73,0)
 ;
"RTN","IBCEMVU",74,0)
SCHD ; screen header info
"RTN","IBCEMVU",75,0)
 W @IOF
"RTN","IBCEMVU",76,0)
 W !!?24,"View Medicare Remittance Advice"
"RTN","IBCEMVU",77,0)
 W !?28,"Explanation of Benefits"
"RTN","IBCEMVU",78,0)
SCHDX ;
"RTN","IBCEMVU",79,0)
 Q
"RTN","IBCEMVU",80,0)
 ;
"RTN","IBCEMVU",81,0)
EOP ; End of page
"RTN","IBCEMVU",82,0)
 W !! S DIR("A")="   Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCEMVU",83,0)
EOPX ;
"RTN","IBCEMVU",84,0)
 Q
"RTN","IBCEMVU",85,0)
 ;
"RTN","IBCEOB")
0^19^B66548072
"RTN","IBCEOB",1,0)
IBCEOB ;ALB/TMP - 835 EDI EOB MESSAGE PROCESSING ;20-JAN-99
"RTN","IBCEOB",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,265,155**;21-MAR-94
"RTN","IBCEOB",3,0)
 Q
"RTN","IBCEOB",4,0)
 ;
"RTN","IBCEOB",5,0)
UPDEOB(IBTDA) ; Update EXPLANATION OF BENEFITS file (#361.1) from return msg
"RTN","IBCEOB",6,0)
 ; IBTDA = ien of return message
"RTN","IBCEOB",7,0)
 ; Function returns ien of EOB file entry or "" if errors found
"RTN","IBCEOB",8,0)
 ;          the data.  Any errors found are
"RTN","IBCEOB",9,0)
 ;          stored in array ^TMP("IBCERR-EOB",$J,n) in text format
"RTN","IBCEOB",10,0)
 ;          n = seq # and are stored with the EOB in a wp field
"RTN","IBCEOB",11,0)
 ;
"RTN","IBCEOB",12,0)
 N IB0,IB100,IBBTCH,IBE,IBMNUM,IBT,DLAYGO,DIC,DD,DO,X,Y,Z,Z0,Z1,IBEOB,IBBAD,IBOK,IB,IBA1,IBIFN,IBFILE
"RTN","IBCEOB",13,0)
 K ^TMP($J),^TMP("IBCERR-EOB",$J)
"RTN","IBCEOB",14,0)
 ;
"RTN","IBCEOB",15,0)
 S (IBBAD,IBEOB)=""
"RTN","IBCEOB",16,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEOB",17,0)
 S IBMNUM=+$P(IB0,U)
"RTN","IBCEOB",18,0)
 S X=+$G(^IBA(364,+$P(IB0,U,5),0))
"RTN","IBCEOB",19,0)
 ;
"RTN","IBCEOB",20,0)
 G:$S(IBMNUM=""!(X=""):1,1:$D(^IBM(361.1,"AC",IBMNUM))) UPDQ
"RTN","IBCEOB",21,0)
 ;
"RTN","IBCEOB",22,0)
 ; Duplicate EOB Check
"RTN","IBCEOB",23,0)
 S IBFILE="^IBA(364.2,"_IBTDA_",2)"
"RTN","IBCEOB",24,0)
 I $$DUP(IBFILE,X) G UPDQ
"RTN","IBCEOB",25,0)
 ;
"RTN","IBCEOB",26,0)
 I '$$LOCK^IBCEM(IBTDA) G UPDQ ;Lock msg file 364.2
"RTN","IBCEOB",27,0)
 S IBEOB=+$$ADD3611(IBMNUM,$P(IB0,U,5),$P(IB0,U,4),X,0,IBFILE)
"RTN","IBCEOB",28,0)
 L -^IBA(364.2,IBTDA,0)
"RTN","IBCEOB",29,0)
 ;
"RTN","IBCEOB",30,0)
 I IBEOB<0 S IBEOB="" G UPDQ
"RTN","IBCEOB",31,0)
 D UPD3611(IBEOB,IBTDA,0)
"RTN","IBCEOB",32,0)
 ;
"RTN","IBCEOB",33,0)
UPDQ I IBEOB,$O(^TMP("IBCERR-EOB",$J,0)) D ERRUPD(IBEOB,"IBCERR-EOB")
"RTN","IBCEOB",34,0)
 K ^TMP($J),^TMP("IBCERR-EOB",$J)
"RTN","IBCEOB",35,0)
 D CLEAN^DILF
"RTN","IBCEOB",36,0)
 Q +IBEOB
"RTN","IBCEOB",37,0)
 ;
"RTN","IBCEOB",38,0)
 ;
"RTN","IBCEOB",39,0)
 ; NOTE: **** For all variables IB0,IBEGBL,IBEOB below:
"RTN","IBCEOB",40,0)
 ; IB0 = raw data received for this record type on the 835 flat file
"RTN","IBCEOB",41,0)
 ; IBEGBL = subscript to use in error global
"RTN","IBCEOB",42,0)
 ; IBEOB = ien in file 361.1 for this EOB
"RTN","IBCEOB",43,0)
 ;
"RTN","IBCEOB",44,0)
835(IB0,IBEGBL,IBEOB) ; Store header
"RTN","IBCEOB",45,0)
 ;
"RTN","IBCEOB",46,0)
 Q $$HDR^IBCEOB1(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",47,0)
 ;
"RTN","IBCEOB",48,0)
5(IB0,IBEGBL,IBEOB) ; Record '05'
"RTN","IBCEOB",49,0)
 ;
"RTN","IBCEOB",50,0)
 N IBOK,IBBULL,DA,DR,DIE,X,Y
"RTN","IBCEOB",51,0)
 K IBZDATA
"RTN","IBCEOB",52,0)
 S DR=";",IBOK=1
"RTN","IBCEOB",53,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB",54,0)
 ;
"RTN","IBCEOB",55,0)
 S IBBULL=""
"RTN","IBCEOB",56,0)
 I $$UPDNM^IBCEOB00(IBEOB,IB0,.IBBULL,.DR)!$$UPDID^IBCEOB00(IBEOB,IB0,.IBBULL,.DR) D  ; New insured's name and/or HIC # found
"RTN","IBCEOB",57,0)
 . D CHGBULL^IBCEOB3(IBEOB,IBBULL) ;Send a bulletin reporting change
"RTN","IBCEOB",58,0)
 ;
"RTN","IBCEOB",59,0)
 I $P(IB0,U,9) S DR=DR_"1.1///"_$$DATE^IBCEU($P(IB0,U,9))_";"
"RTN","IBCEOB",60,0)
 I $P(IB0,U,10) S DR=DR_"1.11///"_$$DATE^IBCEU($P(IB0,U,10))_";"
"RTN","IBCEOB",61,0)
 S DR=$P(DR,";",2,$L(DR,";")-1)
"RTN","IBCEOB",62,0)
 I DR'="" D ^DIE S IBOK=$D(Y)=0
"RTN","IBCEOB",63,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 5 data"
"RTN","IBCEOB",64,0)
 Q IBOK
"RTN","IBCEOB",65,0)
 ;
"RTN","IBCEOB",66,0)
10(IB0,IBEGBL,IBEOB) ; Record '10'
"RTN","IBCEOB",67,0)
 ;
"RTN","IBCEOB",68,0)
 N DA,DR,DIE,X,Y,VAL,IBOK
"RTN","IBCEOB",69,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB",70,0)
 S DR=".13////"_$S($P(IB0,U,3)="Y":1,$P(IB0,U,4)="Y":2,$P(IB0,U,5)="Y":3,$P(IB0,U,6)="Y":4,1:5)_";.21////"_$P(IB0,U,7)
"RTN","IBCEOB",71,0)
 S DR=DR_";2.04////"_$$DOLLAR($P(IB0,U,10))_";1.01////"_$$DOLLAR($P(IB0,U,11))_$S($P(IB0,U,12)'="":";.14///"_$P(IB0,U,12),1:"")
"RTN","IBCEOB",72,0)
 S DR=DR_$S($P(IB0,U,13)'="":";.1///"_$P(IB0,U,13),1:"")_";.11///"_($P(IB0,U,14)/10000)_";.12///"_($P(IB0,U,15)/100)
"RTN","IBCEOB",73,0)
 I $P(IB0,U,8)'="" S DR=DR_";.08////"_$P(IB0,U,8)_$S($P(IB0,U,9)'="":";.09///"_$P(IB0,U,9),1:"")
"RTN","IBCEOB",74,0)
 ;
"RTN","IBCEOB",75,0)
 D ^DIE
"RTN","IBCEOB",76,0)
 S IBOK=($D(Y)=0)
"RTN","IBCEOB",77,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 10 data" G Q10
"RTN","IBCEOB",78,0)
 ;
"RTN","IBCEOB",79,0)
 ; File ICN in Bill
"RTN","IBCEOB",80,0)
 D ICN^IBCEOB00(IBEOB,$P(IB0,U,12),$P($G(^IBM(361.1,IBEOB,0)),U,15),.IBOK)
"RTN","IBCEOB",81,0)
 ;
"RTN","IBCEOB",82,0)
Q10 Q IBOK
"RTN","IBCEOB",83,0)
 ;
"RTN","IBCEOB",84,0)
15(IB0,IBEGBL,IBEOB) ; Record '15'
"RTN","IBCEOB",85,0)
 ;
"RTN","IBCEOB",86,0)
 N A,IBOK
"RTN","IBCEOB",87,0)
 ;
"RTN","IBCEOB",88,0)
 S A="3;1.03;1;0;0^4;1.04;1;0;0^5;1.05;1;0;0^6;1.07;1;0;0^7;1.08;1;0;0^8;1.09;1;0;0^9;1.02;1;0;0^10;2.05;1;0;0"
"RTN","IBCEOB",89,0)
 ;
"RTN","IBCEOB",90,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB",91,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 15 data" G Q15
"RTN","IBCEOB",92,0)
 ;
"RTN","IBCEOB",93,0)
 ; For Medicare MRA's only:
"RTN","IBCEOB",94,0)
 ; If the Covered Amount is present (15 record, piece 3), then file
"RTN","IBCEOB",95,0)
 ; a claim level adjustment with Group code=OA, Reason code=AB3.
"RTN","IBCEOB",96,0)
 ;
"RTN","IBCEOB",97,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,+$P(IB0,U,3) D
"RTN","IBCEOB",98,0)
 . N IB20
"RTN","IBCEOB",99,0)
 . S IB20=20_U_$P(IB0,U,2)_U_"OA"_U_"AB3"_U_$P(IB0,U,3)_U_"0000000000"
"RTN","IBCEOB",100,0)
 . S IB20=IB20_U_"Covered Amount"
"RTN","IBCEOB",101,0)
 . S IBOK=$$20(IB20,IBEGBL,IBEOB)
"RTN","IBCEOB",102,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file the OA-AB3 claim level adjustment for the Covered Amount"
"RTN","IBCEOB",103,0)
 . K ^TMP($J,20)
"RTN","IBCEOB",104,0)
 . Q
"RTN","IBCEOB",105,0)
 ;
"RTN","IBCEOB",106,0)
Q15 Q IBOK
"RTN","IBCEOB",107,0)
 ;
"RTN","IBCEOB",108,0)
17(IB0,IBEGBL,IBEOB) ; Record '17'
"RTN","IBCEOB",109,0)
 N A,IBOK
"RTN","IBCEOB",110,0)
 S A="3;25.01;0;1;0^4;25.02;0;1;0^5;25.03;0;1;0^6;25.04;0;1;0^7;25.05;0;1;0^8;25.06;0;1;0^9;25.07;0;1;0"
"RTN","IBCEOB",111,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB",112,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 17 data"
"RTN","IBCEOB",113,0)
Q17 Q IBOK
"RTN","IBCEOB",114,0)
 ;
"RTN","IBCEOB",115,0)
20(IB0,IBEGBL,IBEOB) ; Record '20'
"RTN","IBCEOB",116,0)
 ;
"RTN","IBCEOB",117,0)
 N A,LEVEL,IBGRP,IBDA,IBOK
"RTN","IBCEOB",118,0)
 ;
"RTN","IBCEOB",119,0)
 S IBGRP=$P(IB0,U,3)
"RTN","IBCEOB",120,0)
 I IBGRP'="" S ^TMP($J,20)=IBGRP
"RTN","IBCEOB",121,0)
 I IBGRP="" S IBGRP=$G(^TMP($J,20))
"RTN","IBCEOB",122,0)
 I IBGRP="" S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Missing claim level adjustment group code" G Q20
"RTN","IBCEOB",123,0)
 ;
"RTN","IBCEOB",124,0)
 S IBDA(1)=$O(^IBM(361.1,IBEOB,10,"B",IBGRP,0))
"RTN","IBCEOB",125,0)
 ;
"RTN","IBCEOB",126,0)
 I 'IBDA(1) D  ;Needs a new entry at group level
"RTN","IBCEOB",127,0)
 . N X,Y,DA,DD,DO,DIC,DLAYGO
"RTN","IBCEOB",128,0)
 . S DIC="^IBM(361.1,"_IBEOB_",10,",DIC(0)="L",DLAYGO=361.11,DA(1)=IBEOB
"RTN","IBCEOB",129,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1,10)
"RTN","IBCEOB",130,0)
 . S X=IBGRP
"RTN","IBCEOB",131,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB",132,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Adjustment group code could not be added" Q
"RTN","IBCEOB",133,0)
 . S IBDA(1)=+Y
"RTN","IBCEOB",134,0)
 ;
"RTN","IBCEOB",135,0)
 I $G(IBDA(1)) D  ;Add a new entry at the reason code level
"RTN","IBCEOB",136,0)
 . S DIC="^IBM(361.1,"_IBEOB_",10,"_IBDA(1)_",1,",DIC(0)="L",DLAYGO=361.111,DA(2)=IBEOB,DA(1)=IBDA(1)
"RTN","IBCEOB",137,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.11,1)
"RTN","IBCEOB",138,0)
 . S X=$P(IB0,U,4)
"RTN","IBCEOB",139,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB",140,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Adjustment reason code could not be added" Q
"RTN","IBCEOB",141,0)
 . S IBDA=+Y
"RTN","IBCEOB",142,0)
 ;
"RTN","IBCEOB",143,0)
 I $G(IBDA) D
"RTN","IBCEOB",144,0)
 . S LEVEL=10,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",10,"_IBDA(1)_",1,"
"RTN","IBCEOB",145,0)
 . S LEVEL(0)=IBDA,LEVEL(1)=IBDA(1),LEVEL(2)=IBEOB
"RTN","IBCEOB",146,0)
 . S A="5;.02;1;0;0^6;.03;0;1;1^7;.04;0;1;0"
"RTN","IBCEOB",147,0)
 . S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL)
"RTN","IBCEOB",148,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad adjustment reason code ("_$P(IB0,U,4)_") data" Q
"RTN","IBCEOB",149,0)
Q20 Q $G(IBOK)
"RTN","IBCEOB",150,0)
 ;
"RTN","IBCEOB",151,0)
30(IB0,IBEGBL,IBEOB) ; Record '30'
"RTN","IBCEOB",152,0)
 ;
"RTN","IBCEOB",153,0)
 N IBOK
"RTN","IBCEOB",154,0)
 D 30^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",155,0)
Q30 Q $G(IBOK)
"RTN","IBCEOB",156,0)
 ;
"RTN","IBCEOB",157,0)
35(IB0,IBEGBL,IBEOB) ; Record '35'
"RTN","IBCEOB",158,0)
 ; Moved due to space constraints
"RTN","IBCEOB",159,0)
Q35 Q $$35^IBCEOB00(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",160,0)
 ;
"RTN","IBCEOB",161,0)
37(IB0,IBEGBL,IBEOB) ; Record '37'
"RTN","IBCEOB",162,0)
 ; Moved due to space constraints
"RTN","IBCEOB",163,0)
Q37 Q $$37^IBCEOB00(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",164,0)
 ;
"RTN","IBCEOB",165,0)
40(IB0,IBEGBL,IBEOB) ; Record '40'
"RTN","IBCEOB",166,0)
 ;
"RTN","IBCEOB",167,0)
 N IBOK
"RTN","IBCEOB",168,0)
 D 40^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",169,0)
Q40 Q $G(IBOK)
"RTN","IBCEOB",170,0)
 ;
"RTN","IBCEOB",171,0)
41(IB0,IBEGBL,IBEOB) ; Record '41'
"RTN","IBCEOB",172,0)
 ;
"RTN","IBCEOB",173,0)
 N IBOK
"RTN","IBCEOB",174,0)
 D 41^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",175,0)
Q41 Q $G(IBOK)
"RTN","IBCEOB",176,0)
 ;
"RTN","IBCEOB",177,0)
42(IB0,IBEGBL,IBEOB) ; Record '42'
"RTN","IBCEOB",178,0)
 ;
"RTN","IBCEOB",179,0)
 N IBOK
"RTN","IBCEOB",180,0)
 D 42^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",181,0)
Q42 Q $G(IBOK)
"RTN","IBCEOB",182,0)
 ;
"RTN","IBCEOB",183,0)
45(IB0,IBEGBL,IBEOB) ; Record '45'
"RTN","IBCEOB",184,0)
 ;
"RTN","IBCEOB",185,0)
 N IBOK
"RTN","IBCEOB",186,0)
 D 45^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",187,0)
 Q $G(IBOK)
"RTN","IBCEOB",188,0)
 ;
"RTN","IBCEOB",189,0)
DOLLAR(X) ; Convert value in X to dollar format XXX.XX
"RTN","IBCEOB",190,0)
 Q $S(+X:$J(X/100,$L(+X),2),1:0)
"RTN","IBCEOB",191,0)
 ;
"RTN","IBCEOB",192,0)
ADD3611(IBMNUM,IBTBILL,IBBATCH,X,IBAR,IBFILE) ; Add stub record to file 361.1
"RTN","IBCEOB",193,0)
 ; X = the ien of the referenced bill in file 399
"RTN","IBCEOB",194,0)
 ; IBTBILL = ien of transmitted bill (optional)
"RTN","IBCEOB",195,0)
 ; IBBATCH = ien of batch # the transmitted bill was in (optional)
"RTN","IBCEOB",196,0)
 ; IBMNUM = the message # from which this record originally came
"RTN","IBCEOB",197,0)
 ; IBAR = 1 only if called from AR
"RTN","IBCEOB",198,0)
 ; IBFILE = array reference of raw EOB data
"RTN","IBCEOB",199,0)
 ;
"RTN","IBCEOB",200,0)
 N DIC,DA,DR,DO,DD,DLAYGO,Y,REVSTAT,BS
"RTN","IBCEOB",201,0)
 F  L +^IBM(361.1,0):10 Q:$T
"RTN","IBCEOB",202,0)
 ;
"RTN","IBCEOB",203,0)
 ; default proper review status
"RTN","IBCEOB",204,0)
 S BS=$P($G(^DGCR(399,X,0)),U,13)   ; bill status
"RTN","IBCEOB",205,0)
 S REVSTAT=$S(BS=7:9,BS=3:3,BS=4:3,1:0)
"RTN","IBCEOB",206,0)
 S DIC(0)="L",DIC="^IBM(361.1,",DLAYGO=361.1
"RTN","IBCEOB",207,0)
 S DIC("DR")=".16////"_REVSTAT_";.17////0"_";100.02////"_IBMNUM_$S('$G(IBAR):";.19////"_+IBTBILL_";100.01////"_IBBATCH,1:"")
"RTN","IBCEOB",208,0)
 S DIC("DR")=DIC("DR")_";100.05////"_$$CHKSUM^IBCEMU1(IBFILE)
"RTN","IBCEOB",209,0)
 D FILE^DICN
"RTN","IBCEOB",210,0)
 L -^IBM(361.1,0)
"RTN","IBCEOB",211,0)
 Q +Y
"RTN","IBCEOB",212,0)
 ;
"RTN","IBCEOB",213,0)
UPD3611(IBEOB,IBTDA,IBAR) ; From flat file 835 format, add EOB record
"RTN","IBCEOB",214,0)
 ; IBEOB = the ien of the entry in file 361.1 being updated
"RTN","IBCEOB",215,0)
 ; IBTDA = the ien in the source file
"RTN","IBCEOB",216,0)
 ; IBAR = 1 if being called from AR
"RTN","IBCEOB",217,0)
 N IBA1,IBFILE,IBEGBL,Z,IBREC,Q
"RTN","IBCEOB",218,0)
 S IBFILE=$S('$G(IBAR):"^IBA(364.2,"_IBTDA_",2)",1:"^TMP("_$J_",""RCDP-EOB"","_IBTDA_")")
"RTN","IBCEOB",219,0)
 S IBEGBL=$S('$G(IBAR):"IBCERR-EOB",1:"RCDPERR-EOB")
"RTN","IBCEOB",220,0)
 I $G(IBAR),'$$HDR^IBCEOB1($G(^TMP($J,"RCDPEOB","HDR")),IBEGBL,IBEOB) Q
"RTN","IBCEOB",221,0)
 S IBA1=0
"RTN","IBCEOB",222,0)
 F  S IBA1=$O(@IBFILE@(IBA1)) Q:'IBA1  S IB0=$S('$G(IBAR):$P($G(^(IBA1,0)),"##RAW DATA: ",2),1:$G(@IBFILE@(IBA1,0))) I IB0'="" D
"RTN","IBCEOB",223,0)
 . S IBREC=+IB0
"RTN","IBCEOB",224,0)
 . I IBREC'=37 K ^TMP($J,37)
"RTN","IBCEOB",225,0)
 . I IBREC S IB="S IBOK=$$"_IBREC_"(IB0,IBEGBL,IBEOB)",Q=IBREC_"^IBCEOB" I $T(@Q)'="" X IB S:'IBOK ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)=$S('$G(IBAR):"  ##RAW DATA: ",1:"")_IB0
"RTN","IBCEOB",226,0)
 ;
"RTN","IBCEOB",227,0)
 Q
"RTN","IBCEOB",228,0)
 ;
"RTN","IBCEOB",229,0)
ERRUPD(IBEOB,IBEGBL) ; Update error text in entry, if needed
"RTN","IBCEOB",230,0)
 D WP^DIE(361.1,IBEOB_",",20,"","^TMP(IBEGBL,$J)","")
"RTN","IBCEOB",231,0)
 Q
"RTN","IBCEOB",232,0)
 ;
"RTN","IBCEOB",233,0)
 ;
"RTN","IBCEOB",234,0)
DUP(IBARRAY,IBIFN) ; Duplicate Check
"RTN","IBCEOB",235,0)
 ; This function determines if the EOB data already exists in file
"RTN","IBCEOB",236,0)
 ; 361.1 by comparing the checksums of the raw 835 data.
"RTN","IBCEOB",237,0)
 ;
"RTN","IBCEOB",238,0)
 ; IBARRAY = Literal array reference where the raw 835 data exists.
"RTN","IBCEOB",239,0)
 ;           The data exists at @IBARRAY@(n,0), where n is the seq#.
"RTN","IBCEOB",240,0)
 ;           For example, IBARRAY = "^IBA(364.2,IBIEN,2)"
"RTN","IBCEOB",241,0)
 ;
"RTN","IBCEOB",242,0)
 ; IBIFN = the bill # (ptr to 399).  The checksums of the EOB's on 
"RTN","IBCEOB",243,0)
 ;         file for this bill will be compared to the checksum of the
"RTN","IBCEOB",244,0)
 ;         835 raw data in the IBARRAY reference.
"RTN","IBCEOB",245,0)
 ;
"RTN","IBCEOB",246,0)
 ; This function returns 0 if the entry is not found (no duplicate),
"RTN","IBCEOB",247,0)
 ; Otherwise, the IEN of the entry in file 361.1 is returned if this
"RTN","IBCEOB",248,0)
 ; is a duplicate EOB.
"RTN","IBCEOB",249,0)
 ;
"RTN","IBCEOB",250,0)
 NEW DUP,IBEOB,CHKSUM1,CHKSUM2
"RTN","IBCEOB",251,0)
 S DUP=0,IBIFN=+$G(IBIFN)
"RTN","IBCEOB",252,0)
 I $G(IBARRAY)=""!'IBIFN G DUPX
"RTN","IBCEOB",253,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G DUPX     ; no EOB's on file yet
"RTN","IBCEOB",254,0)
 S CHKSUM1=$$CHKSUM^IBCEMU1(IBARRAY)     ; checksum of current EOB
"RTN","IBCEOB",255,0)
 I 'CHKSUM1 G DUPX                       ; must be able to be calculated
"RTN","IBCEOB",256,0)
 S IBEOB=0
"RTN","IBCEOB",257,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  Q:DUP
"RTN","IBCEOB",258,0)
 . S CHKSUM2=+$P($G(^IBM(361.1,IBEOB,100)),U,5)   ; checksum of old EOB
"RTN","IBCEOB",259,0)
 . I 'CHKSUM2 Q
"RTN","IBCEOB",260,0)
 . I CHKSUM1=CHKSUM2 S DUP=IBEOB Q                    ; comparison
"RTN","IBCEOB",261,0)
 . Q
"RTN","IBCEOB",262,0)
DUPX ;
"RTN","IBCEOB",263,0)
 Q DUP
"RTN","IBCEOB",264,0)
 ;
"RTN","IBCEOB0")
0^17^B60096537
"RTN","IBCEOB0",1,0)
IBCEOB0 ;ALB/TMP - 835 EDI EOB MSG PROCESSING ;18-FEB-99
"RTN","IBCEOB0",2,0)
 ;;2.0;INTEGRATED BILLING;**135,280,155**;21-MAR-94
"RTN","IBCEOB0",3,0)
 Q
"RTN","IBCEOB0",4,0)
 ;
"RTN","IBCEOB0",5,0)
30(IB0,IBEOB,IBOK) ; Process record type 30 for EOB
"RTN","IBCEOB0",6,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",7,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",8,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",9,0)
 ;
"RTN","IBCEOB0",10,0)
 N A
"RTN","IBCEOB0",11,0)
 S A="3;4.01;0;1;1^5;4.02;0;1;1^6;4.03;1;0;0^7;4.05;1;0;0^8;4.06;1;0;0^9;4.07;1;0;0^10;4.08;1;0;0^11;4.09;1;0;0^12;4.1;1;0;0^13;4.11;1;0;0^14;4.19;0;1;1"
"RTN","IBCEOB0",12,0)
 ;
"RTN","IBCEOB0",13,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB0",14,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad MEDICARE Inpt Adjudication data"
"RTN","IBCEOB0",15,0)
Q30 Q
"RTN","IBCEOB0",16,0)
 ;
"RTN","IBCEOB0",17,0)
40(IB0,IBEOB,IBOK) ; Process record type 40 for EOB
"RTN","IBCEOB0",18,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",19,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",20,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",21,0)
 ;
"RTN","IBCEOB0",22,0)
 ; IBZDATA is also assumed to exist or if not, it is created in FINDLN
"RTN","IBCEOB0",23,0)
 ;
"RTN","IBCEOB0",24,0)
 N A,LEVEL,IBSEQ,IBDA,IBPC,IBLREF,IBIFN,Q,X,Y,DA,DD,DO,DIC,DLAYGO
"RTN","IBCEOB0",25,0)
 K ^TMP($J,40) ; the entry # for corresponding 41, 42, and 45 records
"RTN","IBCEOB0",26,0)
 ;
"RTN","IBCEOB0",27,0)
 S IBIFN=+$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB0",28,0)
 L +^IBM(361.1,IBEOB,15):0 I $T S IBSEQ=+$O(^IBM(361.1,IBEOB,15," "),-1)+1
"RTN","IBCEOB0",29,0)
 I '$G(IBSEQ) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Record lock failure - could not acquire next service line number" G Q40
"RTN","IBCEOB0",30,0)
 ;
"RTN","IBCEOB0",31,0)
 ; Update the 40 record data a little bit (pieces 3/4/16)
"RTN","IBCEOB0",32,0)
 I $P(IB0,U,21)="NU" S $P(IB0,U,4)=$P(IB0,U,3),$P(IB0,U,3)=""
"RTN","IBCEOB0",33,0)
 S $P(IB0,U,16)=$S(+$P(IB0,U,16):$P(IB0,U,16)/100,1:+$P(IB0,U,18)/100)
"RTN","IBCEOB0",34,0)
 I $P(IB0,U,4)?1.N S $P(IB0,U,4)=+$P(IB0,U,4)
"RTN","IBCEOB0",35,0)
 ;
"RTN","IBCEOB0",36,0)
 ; Find the line item from original bill for this adjustment
"RTN","IBCEOB0",37,0)
 S IBLREF=+$$FINDLN^IBCEOB1(IB0,IBEOB,.IBZDATA)
"RTN","IBCEOB0",38,0)
 I 'IBLREF D  G Q40
"RTN","IBCEOB0",39,0)
 . N Z,Z0,CT
"RTN","IBCEOB0",40,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line detail could not be matched to a billed item"
"RTN","IBCEOB0",41,0)
 . D DET40^IBCEOB00(IB0,.Z0)
"RTN","IBCEOB0",42,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",43,0)
 ;
"RTN","IBCEOB0",44,0)
 S DIC="^IBM(361.1,"_IBEOB_",15,",DIC(0)="L",DLAYGO=361.115,DA(1)=IBEOB
"RTN","IBCEOB0",45,0)
 S X=IBSEQ
"RTN","IBCEOB0",46,0)
 S DIC("DR")=".12////"_+IBLREF_$S($P(IBLREF,U,2)="":"",1:";.15////"_$P(IBLREF,U,2))_";.16////"_$$DATE^IBCEU($P(IB0,U,19))_$S($P(IB0,U,20):";.17////"_$$DATE^IBCEU($P(IB0,U,20)),1:"")
"RTN","IBCEOB0",47,0)
 D FILE^DICN K DIC,DO,DD,DLAYGO ;Add a new LINE LEVEL ADJUSTMENT ('SVC')
"RTN","IBCEOB0",48,0)
 I Y<0 S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add a LINE LEVEL ADJUSTMENT ("_IBSEQ_")" G Q40
"RTN","IBCEOB0",49,0)
 ;
"RTN","IBCEOB0",50,0)
 L -^IBM(361.1,IBEOB,15)
"RTN","IBCEOB0",51,0)
 ;
"RTN","IBCEOB0",52,0)
 S LEVEL=15.1,LEVEL(0)=+Y,LEVEL(1)=IBEOB,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",15,"
"RTN","IBCEOB0",53,0)
 S A="3;.04;0;0;0^4;.1;0;0;0^9;.09;0;0;0^17;.03;1;0;0^18;.11;0;1;D2^21;.18;0;0;0"
"RTN","IBCEOB0",54,0)
 I '$P(IB0,U,18),$P(IB0,U,16) S $P(A,U,5)="16;.11;0;1;1"
"RTN","IBCEOB0",55,0)
 I $$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL) S ^TMP($J,40)=LEVEL(0),IBOK=1
"RTN","IBCEOB0",56,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad data for line level adjustment "_IBSEQ G Q40
"RTN","IBCEOB0",57,0)
 ;
"RTN","IBCEOB0",58,0)
 ; Store modifiers in multiple
"RTN","IBCEOB0",59,0)
 S DIC="^IBM(361.1,"_IBEOB_",15,"_LEVEL(0)_",2,",DIC(0)="L",DLAYGO=361.1152,DA(2)=IBEOB,DA(1)=LEVEL(0)
"RTN","IBCEOB0",60,0)
 F Q=5:1:8 S X=$P(IB0,U,Q) I X'="" D FILE^DICN K DO,DD I Y<0 S IBOK=0 Q
"RTN","IBCEOB0",61,0)
 K DLAYGO,DIC,DR,DA
"RTN","IBCEOB0",62,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file modifier data for line level adjustment "_IBSEQ G Q40
"RTN","IBCEOB0",63,0)
Q40 Q
"RTN","IBCEOB0",64,0)
 ;
"RTN","IBCEOB0",65,0)
41(IB0,IBEOB,IBOK) ; Process record type 41 for EOB
"RTN","IBCEOB0",66,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",67,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",68,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",69,0)
 ;
"RTN","IBCEOB0",70,0)
 N DA,DR,DIE,X,Y,Z,Z0,CT
"RTN","IBCEOB0",71,0)
 I '$G(^TMP($J,40)) D  G Q41
"RTN","IBCEOB0",72,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment has no corresponding service line"
"RTN","IBCEOB0",73,0)
 . D DET4X^IBCEOB00(41,IB0,.Z0)
"RTN","IBCEOB0",74,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",75,0)
 ;
"RTN","IBCEOB0",76,0)
 S DR="",IBOK=1
"RTN","IBCEOB0",77,0)
 S DA=+^TMP($J,40),DA(1)=IBEOB
"RTN","IBCEOB0",78,0)
 S DIE="^IBM(361.1,"_DA(1)_",15,"
"RTN","IBCEOB0",79,0)
 I +$P(IB0,U,3) S DR=".13///"_$$DOLLAR^IBCEOB($P(IB0,U,3))
"RTN","IBCEOB0",80,0)
 I +$P(IB0,U,4) S DR=DR_$S(DR="":"",1:";")_".14///"_$$DOLLAR^IBCEOB($P(IB0,U,4))
"RTN","IBCEOB0",81,0)
 I DR'="" D ^DIE S IBOK=($D(Y)=0)
"RTN","IBCEOB0",82,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad data for service line adjustment-2"
"RTN","IBCEOB0",83,0)
 ;
"RTN","IBCEOB0",84,0)
 ; For Medicare MRA's only:
"RTN","IBCEOB0",85,0)
 ; If the Allowed Amount field is present, then we need to file an
"RTN","IBCEOB0",86,0)
 ; adjustment:  Group code PR, Reason code AAA, Amount, Quantity, and
"RTN","IBCEOB0",87,0)
 ; Reason Text.  This is data normally found on the 45 record, so we're
"RTN","IBCEOB0",88,0)
 ; going to create our own "45" record and file it.
"RTN","IBCEOB0",89,0)
 ;
"RTN","IBCEOB0",90,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,+$P(IB0,U,3) D
"RTN","IBCEOB0",91,0)
 . N IB45,IBSAV40
"RTN","IBCEOB0",92,0)
 . S IB45=45_U_$P(IB0,U,2)_U_"PR"_U_"AAA"_U_$P(IB0,U,3)_U_"0000000001"
"RTN","IBCEOB0",93,0)
 . S IB45=IB45_U_"Allowed Amount"
"RTN","IBCEOB0",94,0)
 . S IBSAV40=$G(^TMP($J,40))
"RTN","IBCEOB0",95,0)
 . D 45(IB45,IBEOB,.IBOK)
"RTN","IBCEOB0",96,0)
 . S ^TMP($J,40)=IBSAV40
"RTN","IBCEOB0",97,0)
 . I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file the PR-AAA adjustment for the Allowed Amount at line "_+^TMP($J,40)
"RTN","IBCEOB0",98,0)
 . Q
"RTN","IBCEOB0",99,0)
 ;
"RTN","IBCEOB0",100,0)
Q41 Q
"RTN","IBCEOB0",101,0)
 ;
"RTN","IBCEOB0",102,0)
42(IB0,IBEOB,IBOK) ; Process record type 42 for EOB 
"RTN","IBCEOB0",103,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",104,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",105,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",106,0)
 ;
"RTN","IBCEOB0",107,0)
 N DO,DD,DLAYGO,DIC,DA,X,Y,Z,Z0,CT
"RTN","IBCEOB0",108,0)
 S IBOK=0
"RTN","IBCEOB0",109,0)
 I '$G(^TMP($J,40)) D  G Q42
"RTN","IBCEOB0",110,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment has no corresponding service line"
"RTN","IBCEOB0",111,0)
 . D DET4X^IBCEOB00(42,IB0,.Z0)
"RTN","IBCEOB0",112,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",113,0)
 ;
"RTN","IBCEOB0",114,0)
 K DO,DD,DLAYGO
"RTN","IBCEOB0",115,0)
 S IBOK=1
"RTN","IBCEOB0",116,0)
 S DA(1)=+^TMP($J,40),DA(2)=IBEOB
"RTN","IBCEOB0",117,0)
 S X=+$O(^IBM(361.1,DA(2),15,DA(1),4," "),-1)+1,DIC="^IBM(361.1,"_DA(2)_",15,"_DA(1)_",4,",DIC(0)="L",DLAYGO=361.1154
"RTN","IBCEOB0",118,0)
 S DIC("DR")=$S($P(IB0,U,3)'="":".02////"_$P(IB0,U,3),1:"")
"RTN","IBCEOB0",119,0)
 S DIC("DR")=DIC("DR")_$S($P(IB0,U,4)'="":$S($L(DIC("DR")):";",1:"")_".03////"_$TR($P(IB0,U,4),";"," "))
"RTN","IBCEOB0",120,0)
 D FILE^DICN K DO,DD,DLAYGO
"RTN","IBCEOB0",121,0)
 I Y'>0 S IBOK=0
"RTN","IBCEOB0",122,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad data for service line adjustment-3"
"RTN","IBCEOB0",123,0)
 ;
"RTN","IBCEOB0",124,0)
 ; For Medicare MRA's only:
"RTN","IBCEOB0",125,0)
 ; Process and store the line level remark code as an LQ kludge line
"RTN","IBCEOB0",126,0)
 ; level adjustment.
"RTN","IBCEOB0",127,0)
 ;
"RTN","IBCEOB0",128,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$P(IB0,U,3)'="" D
"RTN","IBCEOB0",129,0)
 . N IB45,IBSAV40
"RTN","IBCEOB0",130,0)
 . S IB45=45_U_$P(IB0,U,2)_U_"LQ"_U_$P(IB0,U,3)_U_0_U_0_U_$P(IB0,U,4)
"RTN","IBCEOB0",131,0)
 . S IBSAV40=$G(^TMP($J,40))
"RTN","IBCEOB0",132,0)
 . D 45(IB45,IBEOB,.IBOK)
"RTN","IBCEOB0",133,0)
 . S ^TMP($J,40)=IBSAV40
"RTN","IBCEOB0",134,0)
 . I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file the LQ-remark code adjustment at line "_+^TMP($J,40)
"RTN","IBCEOB0",135,0)
 . Q
"RTN","IBCEOB0",136,0)
Q42 Q
"RTN","IBCEOB0",137,0)
 ;
"RTN","IBCEOB0",138,0)
45(IB0,IBEOB,IBOK) ; Process record type 45 for EOB 
"RTN","IBCEOB0",139,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",140,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",141,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",142,0)
 ;
"RTN","IBCEOB0",143,0)
 N IBDA,LEVEL,A,Z0,CT,Z
"RTN","IBCEOB0",144,0)
 I '$G(^TMP($J,40)) D  G Q45
"RTN","IBCEOB0",145,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment has no corresponding service line"
"RTN","IBCEOB0",146,0)
 . D DET4X^IBCEOB00(45,IB0,.Z0)
"RTN","IBCEOB0",147,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",148,0)
 ;
"RTN","IBCEOB0",149,0)
 I $P(IB0,U,3)'="" S $P(^TMP($J,40),U,2)=$P(IB0,U,3)
"RTN","IBCEOB0",150,0)
 I $P(IB0,U,3)="" S $P(IB0,U,3)=$P(^TMP($J,40),U,2)
"RTN","IBCEOB0",151,0)
 I $P(IB0,U,3)="" S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment is missing its group code" G Q45
"RTN","IBCEOB0",152,0)
 ;
"RTN","IBCEOB0",153,0)
 S IBDA(2)=+^TMP($J,40)
"RTN","IBCEOB0",154,0)
 S IBDA(1)=+$O(^IBM(361.1,IBEOB,15,IBDA(2),1,"B",$P(IB0,U,3),0))
"RTN","IBCEOB0",155,0)
 ;
"RTN","IBCEOB0",156,0)
 I 'IBDA(1) D  ;Needs a new entry at group level
"RTN","IBCEOB0",157,0)
 . N X,Y,DA,DD,DO,DIC,DLAYGO
"RTN","IBCEOB0",158,0)
 . S DIC="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,",DIC(0)="L",DLAYGO=361.1151,DA(2)=IBEOB,DA(1)=IBDA(2)
"RTN","IBCEOB0",159,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.115,1)
"RTN","IBCEOB0",160,0)
 . S X=$P(IB0,U,3)
"RTN","IBCEOB0",161,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB0",162,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",163,0)
 . S IBDA(1)=+Y
"RTN","IBCEOB0",164,0)
 ;
"RTN","IBCEOB0",165,0)
 ;Add a new entry at the reason code level
"RTN","IBCEOB0",166,0)
 I $G(IBDA(1)) D
"RTN","IBCEOB0",167,0)
 . S DIC="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,"_IBDA(1)_",1,",DIC(0)="L",DLAYGO=361.11511,DA(1)=IBDA(1),DA(2)=IBDA(2),DA(3)=IBEOB
"RTN","IBCEOB0",168,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1151,1)
"RTN","IBCEOB0",169,0)
 . S X=$P(IB0,U,4)
"RTN","IBCEOB0",170,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB0",171,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add reason code ("_$P(IB0,U,4)_") for adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",172,0)
 . S IBDA=+Y
"RTN","IBCEOB0",173,0)
 ;
"RTN","IBCEOB0",174,0)
 I $G(IBDA) D
"RTN","IBCEOB0",175,0)
 . S LEVEL=15,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,"_IBDA(1)_",1,"
"RTN","IBCEOB0",176,0)
 . S LEVEL(0)=IBDA,LEVEL(1)=IBDA(1),LEVEL(2)=IBDA(2),LEVEL(3)=IBEOB
"RTN","IBCEOB0",177,0)
 . S A="5;.02;1;0;0^6;.03;0;1;1^7;.04;0;1;0"
"RTN","IBCEOB0",178,0)
 . S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL)
"RTN","IBCEOB0",179,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad data for reason code ("_$P(IB0,U,4)_"), adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",180,0)
 ;
"RTN","IBCEOB0",181,0)
Q45 Q
"RTN","IBCEOB0",182,0)
 ;
"RTN","IBCEOB00")
0^54^B60220072
"RTN","IBCEOB00",1,0)
IBCEOB00 ;ALB/ESG - 835 EDI EOB MSG PROCESSING CONT ;30-JUN-2003
"RTN","IBCEOB00",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEOB00",3,0)
 Q
"RTN","IBCEOB00",4,0)
 ;
"RTN","IBCEOB00",5,0)
RCRU(IBZDATA,IB0,IBLN) ; Revenue Code Roll-up procedure check -
"RTN","IBCEOB00",6,0)
 ; Total up outbound line items by revenue code and compare with
"RTN","IBCEOB00",7,0)
 ; incoming EOB 40 record to see if it has been rolled up
"RTN","IBCEOB00",8,0)
 ;
"RTN","IBCEOB00",9,0)
 ; IBZDATA - ub92 output formatter array, passed by reference
"RTN","IBCEOB00",10,0)
 ; IB0     - 40 record data
"RTN","IBCEOB00",11,0)
 ; IBLN    - output parameter, passed by reference
"RTN","IBCEOB00",12,0)
 ;
"RTN","IBCEOB00",13,0)
 NEW Z,LN,REV,UN,CH,RUD,RUD2,UCH,MRAUCH
"RTN","IBCEOB00",14,0)
 I $P(IB0,U,4)="" G RCRUX
"RTN","IBCEOB00",15,0)
 S IBLN="",Z=0
"RTN","IBCEOB00",16,0)
 F  S Z=$O(IBZDATA(Z)) Q:'Z  S LN=IBZDATA(Z) D
"RTN","IBCEOB00",17,0)
 . S REV=$P(LN,U,1),UN=$P(LN,U,4),CH=$P(LN,U,5),UCH=+$P(LN,U,3)
"RTN","IBCEOB00",18,0)
 . I REV="" Q
"RTN","IBCEOB00",19,0)
 . ;
"RTN","IBCEOB00",20,0)
 . S RUD=$G(RUD(REV))                 ; roll up data array for rev code
"RTN","IBCEOB00",21,0)
 . S $P(RUD,U,1)=$P(RUD,U,1)+CH       ; total charges
"RTN","IBCEOB00",22,0)
 . S $P(RUD,U,2)=$P(RUD,U,2)+UN       ; total units
"RTN","IBCEOB00",23,0)
 . S $P(RUD,U,3)=$P(RUD,U,3)+1        ; total line items
"RTN","IBCEOB00",24,0)
 . S RUD(REV)=RUD
"RTN","IBCEOB00",25,0)
 . S RUD(REV,Z)=""
"RTN","IBCEOB00",26,0)
 . ;
"RTN","IBCEOB00",27,0)
 . S RUD2=$G(RUD2(REV,UCH))           ; roll up data array for rev code
"RTN","IBCEOB00",28,0)
 . S $P(RUD2,U,1)=$P(RUD2,U,1)+CH     ; total charges
"RTN","IBCEOB00",29,0)
 . S $P(RUD2,U,2)=$P(RUD2,U,2)+UN     ; total units
"RTN","IBCEOB00",30,0)
 . S $P(RUD2,U,3)=$P(RUD2,U,3)+1      ; total line items
"RTN","IBCEOB00",31,0)
 . S RUD2(REV,UCH)=RUD2
"RTN","IBCEOB00",32,0)
 . S RUD2(REV,UCH,Z)=""
"RTN","IBCEOB00",33,0)
 . ;
"RTN","IBCEOB00",34,0)
 . Q
"RTN","IBCEOB00",35,0)
 ;
"RTN","IBCEOB00",36,0)
 I '$D(RUD),'$D(RUD2) G RCRUX
"RTN","IBCEOB00",37,0)
 ;
"RTN","IBCEOB00",38,0)
 ; delete the revenue code roll-up, if only 1 line item.
"RTN","IBCEOB00",39,0)
 S REV=""     ; this is not a roll up situation
"RTN","IBCEOB00",40,0)
 F  S REV=$O(RUD(REV)) Q:REV=""  I $P(RUD(REV),U,3)=1 KILL RUD(REV)
"RTN","IBCEOB00",41,0)
 ;
"RTN","IBCEOB00",42,0)
 S (REV,UCH)=""
"RTN","IBCEOB00",43,0)
 F  S REV=$O(RUD2(REV)) Q:REV=""  F  S UCH=$O(RUD2(REV,UCH)) Q:UCH=""  I $P(RUD2(REV,UCH),U,3)=1 KILL RUD2(REV,UCH)
"RTN","IBCEOB00",44,0)
 ;
"RTN","IBCEOB00",45,0)
 I '$D(RUD),'$D(RUD2) G RCRUX
"RTN","IBCEOB00",46,0)
 ;
"RTN","IBCEOB00",47,0)
 S RUD=$G(RUD($P(IB0,U,4)))      ; compare with 40 record data
"RTN","IBCEOB00",48,0)
 I RUD="" G RCRU2                ; make sure it exists
"RTN","IBCEOB00",49,0)
 I $P(RUD,U,1)'=+$$DOLLAR^IBCEOB($P(IB0,U,15)) G RCRU2    ; charges
"RTN","IBCEOB00",50,0)
 I $P(RUD,U,2)'=$P(IB0,U,16) G RCRU2                      ; units
"RTN","IBCEOB00",51,0)
 S IBLN=$O(RUD($P(IB0,U,4),""))  ; use the first line# found
"RTN","IBCEOB00",52,0)
 G RCRUX
"RTN","IBCEOB00",53,0)
 ;
"RTN","IBCEOB00",54,0)
RCRU2 ; check roll-up data by rev code and unit charge
"RTN","IBCEOB00",55,0)
 S MRAUCH=0
"RTN","IBCEOB00",56,0)
 I $P(IB0,U,16) S MRAUCH=+$$DOLLAR^IBCEOB($P(IB0,U,15))/$P(IB0,U,16)
"RTN","IBCEOB00",57,0)
 S RUD2=$G(RUD2($P(IB0,U,4),MRAUCH))     ; compare with 40 record data
"RTN","IBCEOB00",58,0)
 I RUD2="" G RCRUX                       ; make sure it exists
"RTN","IBCEOB00",59,0)
 I $P(RUD2,U,1)'=+$$DOLLAR^IBCEOB($P(IB0,U,15)) G RCRUX   ; charges
"RTN","IBCEOB00",60,0)
 I $P(RUD2,U,2)'=$P(IB0,U,16) G RCRUX                     ; units
"RTN","IBCEOB00",61,0)
 S IBLN=$O(RUD2($P(IB0,U,4),MRAUCH,""))  ; use the first line# found
"RTN","IBCEOB00",62,0)
 ;
"RTN","IBCEOB00",63,0)
RCRUX ;
"RTN","IBCEOB00",64,0)
 Q
"RTN","IBCEOB00",65,0)
 ;
"RTN","IBCEOB00",66,0)
ICN(IBEOB,ICN,COBN,IBOK) ; File the 835 ICN into the Bill
"RTN","IBCEOB00",67,0)
 ;
"RTN","IBCEOB00",68,0)
 ; Input parameters
"RTN","IBCEOB00",69,0)
 ;   IBEOB - ien to file 361.1
"RTN","IBCEOB00",70,0)
 ;   ICN   - the ICN# from the 835 transmission
"RTN","IBCEOB00",71,0)
 ;   COBN  - the insurance sequence#
"RTN","IBCEOB00",72,0)
 ;
"RTN","IBCEOB00",73,0)
 ; Output parameter
"RTN","IBCEOB00",74,0)
 ;   IBOK  - returns as 0 if we get a filing error here
"RTN","IBCEOB00",75,0)
 ;
"RTN","IBCEOB00",76,0)
 ; The field in file 399 depends on the current payer sequence
"RTN","IBCEOB00",77,0)
 ;     399,453 - primary ICN
"RTN","IBCEOB00",78,0)
 ;     399,454 - secondary ICN
"RTN","IBCEOB00",79,0)
 ;     399,455 - tertiary ICN
"RTN","IBCEOB00",80,0)
 ;
"RTN","IBCEOB00",81,0)
 NEW IBIFN,FIELD,D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","IBCEOB00",82,0)
 S IBEOB=+$G(IBEOB),COBN=+$G(COBN)
"RTN","IBCEOB00",83,0)
 I 'IBEOB!'COBN G ICNX
"RTN","IBCEOB00",84,0)
 S IBIFN=+$P($G(^IBM(361.1,IBEOB,0)),U,1)
"RTN","IBCEOB00",85,0)
 I '$D(^DGCR(399,IBIFN)) G ICNX
"RTN","IBCEOB00",86,0)
 I $G(ICN)="" G ICNX
"RTN","IBCEOB00",87,0)
 I '$F(".1.2.3.","."_COBN_".") G ICNX
"RTN","IBCEOB00",88,0)
 ;
"RTN","IBCEOB00",89,0)
 S FIELD=452+COBN
"RTN","IBCEOB00",90,0)
 S DIE=399,DA=IBIFN,DR=FIELD_"////"_ICN D ^DIE
"RTN","IBCEOB00",91,0)
 S IBOK=($D(Y)=0)
"RTN","IBCEOB00",92,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Error in filing the ICN into the Bill/Claims file"
"RTN","IBCEOB00",93,0)
ICNX ;
"RTN","IBCEOB00",94,0)
 Q
"RTN","IBCEOB00",95,0)
 ;
"RTN","IBCEOB00",96,0)
35(IB0,IBEGBL,IBEOB) ; Record '35'
"RTN","IBCEOB00",97,0)
 ;
"RTN","IBCEOB00",98,0)
 N A,IBOK
"RTN","IBCEOB00",99,0)
 ;
"RTN","IBCEOB00",100,0)
 S A="3;4.12;1;0;0^4;4.13;1;0;0^5;4.14;0;1;1^6;4.15;1;0;0^7;4.16;1;0;0^8;4.17;1;0;0^9;4.18;1;0;0^10;4.04;1;0;0^11;3.01;0;1;1^12;3.02;1;0;0^13;3.08;1;0;0^14;3.09;1;0;0"
"RTN","IBCEOB00",101,0)
 ;
"RTN","IBCEOB00",102,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB00",103,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad MEDICARE Inpt Adjudication data"
"RTN","IBCEOB00",104,0)
Q35 Q $G(IBOK)
"RTN","IBCEOB00",105,0)
 ;
"RTN","IBCEOB00",106,0)
37(IB0,IBEGBL,IBEOB) ; Record '37'
"RTN","IBCEOB00",107,0)
 ;
"RTN","IBCEOB00",108,0)
 N IBOK,IBCT
"RTN","IBCEOB00",109,0)
 S IBCT=$G(^TMP($J,37))+1
"RTN","IBCEOB00",110,0)
 I IBCT>5 S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Too many Medicare Claim Level Adjudication Remarks" G Q37    ; Max 5 allowed
"RTN","IBCEOB00",111,0)
 S A="4;"_$S($P(IB0,U,3)="O":"3.0"_(IBCT+2),1:"5.0"_IBCT)_";0;0;0^5;5.0"_IBCT_"1;0;0;0"
"RTN","IBCEOB00",112,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB00",113,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad Medicare Claim Level Adjudication Remarks data"
"RTN","IBCEOB00",114,0)
 ;
"RTN","IBCEOB00",115,0)
 ; 4/22/03 - esg - If claim level remark code MA15 is reported, then
"RTN","IBCEOB00",116,0)
 ;         this is a split EOB and we need to change the REVIEW STATUS
"RTN","IBCEOB00",117,0)
 ;         of this EOB to be ACCEPTED-INTERIM EOB.
"RTN","IBCEOB00",118,0)
 ;
"RTN","IBCEOB00",119,0)
 I $P(IB0,U,4)["MA15" D
"RTN","IBCEOB00",120,0)
 . N DA,DIE,DR,DIC
"RTN","IBCEOB00",121,0)
 . S DA=IBEOB,DIE=361.1,DR=".16////2" D ^DIE S IBOK=($D(Y)=0)
"RTN","IBCEOB00",122,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Split EOB, but review status was not updated correctly"
"RTN","IBCEOB00",123,0)
 . Q
"RTN","IBCEOB00",124,0)
 ;
"RTN","IBCEOB00",125,0)
Q37 S ^TMP($J,37)=$G(^TMP($J,37))+1 ; Saves the # of entries for 37 records
"RTN","IBCEOB00",126,0)
 Q $G(IBOK)
"RTN","IBCEOB00",127,0)
 ;
"RTN","IBCEOB00",128,0)
 ;
"RTN","IBCEOB00",129,0)
DET40(IB0,ARRAY) ; Format important details of record 40 for error
"RTN","IBCEOB00",130,0)
 ; IB0 = data on 40 record (some pieces pre-formatted)
"RTN","IBCEOB00",131,0)
 ;  ARRAY(n)=formatted line is returned if passed by ref
"RTN","IBCEOB00",132,0)
 N Q
"RTN","IBCEOB00",133,0)
 S ARRAY(1)="Payer reported the following was billed to them:"
"RTN","IBCEOB00",134,0)
 S ARRAY(2)=" "_$S($P(IB0,U,21)="NU":"Rev Cd",1:"Proc")_": "_$S($P(IB0,U,10)'="":$P(IB0,U,10),1:"Same as adjudicated")_"  Chg: "_$J($P(IB0,U,15)/100,"",2)_"  Units: "_$S($P(IB0,U,16):$P(IB0,U,16),1:1)
"RTN","IBCEOB00",135,0)
 S ARRAY(3)="  Svc Date(s): "_$S($P(IB0,U,19)'="":$$FDT($P(IB0,U,19)),1:"??")_$S($P(IB0,U,20)'="":"-"_$$FDT($P(IB0,U,20)),1:"")
"RTN","IBCEOB00",136,0)
 I $P(IB0,U,11)'="" S ARRAY(3)=ARRAY(3)_"  Mods: " F Q=11:1:14 I $P(IB0,U,Q)'="" S ARRAY(3)=ARRAY(3)_$P(IB0,U,Q)_$S(Q=14:"",$P(IB0,U,Q+1)'="":",",1:"")
"RTN","IBCEOB00",137,0)
 S ARRAY(4)="Payer reported adjudication on:"
"RTN","IBCEOB00",138,0)
 S ARRAY(5)=" "_$S($P(IB0,U,21)="NU":"Rev Cd",1:"Proc")_": "_$S($P(IB0,U,3)'="":$P(IB0,U,3),1:$P(IB0,U,4))
"RTN","IBCEOB00",139,0)
 S ARRAY(5)=ARRAY(5)_"  Type: "_$P(IB0,U,21)_$S($P(IB0,U,21)'="NU":"  Rev Cd: "_$P(IB0,U,4),1:"")_"  Units: "_$S($P(IB0,U,18):$P(IB0,U,18)/100,1:1)_"  Amt: "_$J($P(IB0,U,17)/100,"",2)
"RTN","IBCEOB00",140,0)
 I $P(IB0,U,5)'="" S ARRAY(5)=ARRAY(5)_"  Mods: " F Q=5:1:8 I $P(IB0,U,Q)'="" S ARRAY(5)=ARRAY(5)_$P(IB0,U,Q)_$S(Q=8:"",$P(IB0,U,Q+1)'="":",",1:"")
"RTN","IBCEOB00",141,0)
 Q
"RTN","IBCEOB00",142,0)
 ;
"RTN","IBCEOB00",143,0)
DET4X(RECID,IB0,ARRAY) ; Format important details of record 41-45 for error
"RTN","IBCEOB00",144,0)
 ; RECID = 41,42,45
"RTN","IBCEOB00",145,0)
 ; IB0 = data on RECID record
"RTN","IBCEOB00",146,0)
 ;  ARRAY(n)=formatted line is returned if passed by ref
"RTN","IBCEOB00",147,0)
 N CT,Q
"RTN","IBCEOB00",148,0)
 I RECID=41 D  Q
"RTN","IBCEOB00",149,0)
 . S ARRAY(1)="Allowed Amt: "_$J($P(IB0,U,3)/100,"",2)_"  Per Diem Amt: "_$J($P(IB0,U,4)/100,"",2)
"RTN","IBCEOB00",150,0)
 ;
"RTN","IBCEOB00",151,0)
 I RECID=42 D  Q
"RTN","IBCEOB00",152,0)
 . S ARRAY(1)="Line Item Remark Code: "_$P(IB0,U,3)
"RTN","IBCEOB00",153,0)
 . I $P(IB0,U,4)'="" S CT=1 F Q=0:80:190 I $E($P(IB0,U,4),Q+1,Q+80)'="" S CT=CT+1,ARRAY(CT)=$E($P(IB0,U,4),Q+1,Q+80)
"RTN","IBCEOB00",154,0)
 ;
"RTN","IBCEOB00",155,0)
 I RECID=45 D
"RTN","IBCEOB00",156,0)
 . S ARRAY(1)="Adj Group Cd: "_$P(IB0,U,3)_"  Reason Cd: "_$P(IB0,U,4)_"  Amt: "_$J($P(IB0,U,5)/100,"",2)_"  Quantity: "_+$P(IB0,U,6)
"RTN","IBCEOB00",157,0)
 . I $P(IB0,U,7)'="" S CT=1 F Q=0:80:190 I $E($P(IB0,U,7),Q+1,Q+80)'="" S CT=CT+1,ARRAY(CT)=$E($P(IB0,U,7),Q+1,Q+80)
"RTN","IBCEOB00",158,0)
 Q
"RTN","IBCEOB00",159,0)
 ; 
"RTN","IBCEOB00",160,0)
FDT(X) ; Format date in X (YYYYMMDD) to MM/DD/YYYY
"RTN","IBCEOB00",161,0)
 S:X'="" X=$E(X,5,6)_"/"_$E(X,7,8)_"/"_$E(X,1,4)
"RTN","IBCEOB00",162,0)
 Q X
"RTN","IBCEOB00",163,0)
 ;
"RTN","IBCEOB00",164,0)
UPDNM(IBEOB,IB0,IBBULL,IBDR) ; Update name on claim if it comes back changed
"RTN","IBCEOB00",165,0)
 ; IBEOB = the internal entry # of the entry in file 361.1
"RTN","IBCEOB00",166,0)
 ; IB0 = the raw data returned from the 835 flat file
"RTN","IBCEOB00",167,0)
 ; IBBULL = holds result of name change check in piece 1 - if name
"RTN","IBCEOB00",168,0)
 ;          changed, first '^' piece is 1, 3rd '^' piece is the old
"RTN","IBCEOB00",169,0)
 ;          insured's name
"RTN","IBCEOB00",170,0)
 ; IBDR = returned as the updated 'DR' string with the name changed
"RTN","IBCEOB00",171,0)
 ;       fields to use to update the EOB file (361.1) - pass by reference
"RTN","IBCEOB00",172,0)
 ;
"RTN","IBCEOB00",173,0)
 N IBCHGED,IBIFN,IBNEW,IBCOB,DIE,DR,X,Y
"RTN","IBCEOB00",174,0)
 I $P(IB0,U,7) D
"RTN","IBCEOB00",175,0)
 . S IBNEW=$P(IB0,U,3)_","_$P(IB0,U,4)_$S($P(IB0,U,5)'="":" "_$P(IB0,U,5),1:""),$P(IBBULL,U)=1
"RTN","IBCEOB00",176,0)
 . S IBCOB=+$P($G(^IBM(361.1,IBEOB,0)),U,15)
"RTN","IBCEOB00",177,0)
 . S IBIFN=+$G(^IBM(361.1,+IBEOB,0))
"RTN","IBCEOB00",178,0)
 . S IB=$G(^DGCR(399,IBIFN,"I"_IBCOB))
"RTN","IBCEOB00",179,0)
 . ;
"RTN","IBCEOB00",180,0)
 . I IB'="",$P(IB,U,17)'=IBNEW D
"RTN","IBCEOB00",181,0)
 .. ; Update the claim data only
"RTN","IBCEOB00",182,0)
 .. S $P(IBBULL,U,3)=$P(IB,U,17) ; save old value
"RTN","IBCEOB00",183,0)
 .. S $P(IB,U,17)=IBNEW
"RTN","IBCEOB00",184,0)
 .. S DIE="^DGCR(399,",DA=IBIFN,DR="30"_IBCOB_"////"_IB
"RTN","IBCEOB00",185,0)
 .. D:DA ^DIE
"RTN","IBCEOB00",186,0)
 .. S IBCHGED=1
"RTN","IBCEOB00",187,0)
 . S IBDR=$G(IBDR)_"6.01////"_$P(IB0,U,3)_","_$P(IB0,U,4)_" "_$P(IB0,U,5)_";"
"RTN","IBCEOB00",188,0)
 ;
"RTN","IBCEOB00",189,0)
 Q $G(IBCHGED)
"RTN","IBCEOB00",190,0)
 ;
"RTN","IBCEOB00",191,0)
UPDID(IBEOB,IB0,IBBULL,IBDR) ; Update id # on claim and policy if it comes back
"RTN","IBCEOB00",192,0)
 ;   changed
"RTN","IBCEOB00",193,0)
 ; IBEOB = the internal entry # of the entry in file 361.1
"RTN","IBCEOB00",194,0)
 ; IB0 = the raw data returned from the 835 flat file
"RTN","IBCEOB00",195,0)
 ; IBBULL = holds result of id change check in piece 2 - if id changed,
"RTN","IBCEOB00",196,0)
 ;          second '^' piece = 1,4th '^' piece is the old insured's id
"RTN","IBCEOB00",197,0)
 ; IBDR = returned as the updated 'DR' string with the id changed fields
"RTN","IBCEOB00",198,0)
 ;        to use to update the EOB file (361.1) - pass by reference
"RTN","IBCEOB00",199,0)
 ;
"RTN","IBCEOB00",200,0)
 N IBCHGED,IBNEW,IBCOB,IB,DIE,DR,DA,X,Y
"RTN","IBCEOB00",201,0)
 I $P(IB0,U,8) D
"RTN","IBCEOB00",202,0)
 . S IBNEW=$P(IB0,U,6),$P(IBBULL,U,2)=1
"RTN","IBCEOB00",203,0)
 . S IBIFN=+$G(^IBM(361.1,+IBEOB,0))
"RTN","IBCEOB00",204,0)
 . S IBCOB=+$P($G(^IBM(361.1,IBEOB,0)),U,15)
"RTN","IBCEOB00",205,0)
 . S IB=$G(^DGCR(399,IBIFN,"I"_IBCOB))
"RTN","IBCEOB00",206,0)
 . ;
"RTN","IBCEOB00",207,0)
 . I IB'="",$P(IB,U,2)'=IBNEW D
"RTN","IBCEOB00",208,0)
 .. ; Update the claim
"RTN","IBCEOB00",209,0)
 .. S $P(IBBULL,U,4)=$P(IB,U,2) ; save old value
"RTN","IBCEOB00",210,0)
 .. S $P(IB,U,2)=IBNEW
"RTN","IBCEOB00",211,0)
 .. S DIE="^DGCR(399,",DA=IBIFN,DR="30"_IBCOB_"////"_IB D ^DIE
"RTN","IBCEOB00",212,0)
 .. ;
"RTN","IBCEOB00",213,0)
 .. ; Update the policy
"RTN","IBCEOB00",214,0)
 .. S DA(1)=$P($G(^DGCR(399,IBIFN,0)),U,2),DA=$P($G(^("M")),U,(11+IBCOB)),DR="1////"_IBNEW,DIE="^DPT("_DA(1)_",.312,"
"RTN","IBCEOB00",215,0)
 .. I DA(1),DA D ^DIE
"RTN","IBCEOB00",216,0)
 .. S IBCHGED=1
"RTN","IBCEOB00",217,0)
 . S IBDR=$G(IBDR)_"6.02////"_$P(IB0,U,6)_";"
"RTN","IBCEOB00",218,0)
 ;
"RTN","IBCEOB00",219,0)
 Q $G(IBCHGED)
"RTN","IBCEOB00",220,0)
 ;
"RTN","IBCEOB1")
0^18^B59356447
"RTN","IBCEOB1",1,0)
IBCEOB1 ;ALB/TMP - 835 EDI EOB MSG PROCESSING ;18-FEB-99
"RTN","IBCEOB1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,155**;21-MAR-94
"RTN","IBCEOB1",3,0)
 Q
"RTN","IBCEOB1",4,0)
 ;
"RTN","IBCEOB1",5,0)
STORE(A,IB0,IBEOB,LEVEL) ;
"RTN","IBCEOB1",6,0)
 ; A = the string of data to extract and try to store
"RTN","IBCEOB1",7,0)
 ;       each ^ piece is a field to store
"RTN","IBCEOB1",8,0)
 ;         within each ^ piece, there are 5 ';' pieces:
"RTN","IBCEOB1",9,0)
 ;            1 = piece to extract from the data string;
"RTN","IBCEOB1",10,0)
 ;            2 = field to update;
"RTN","IBCEOB1",11,0)
 ;            3 = flag for dollar amt (1=YES);
"RTN","IBCEOB1",12,0)
 ;            4 = flag for 4-slash stuff without transform (1=YES);
"RTN","IBCEOB1",13,0)
 ;            5 = flag for numeric/non-dollar amt (1=Yes, 0=No,
"RTN","IBCEOB1",14,0)
 ;                 Dn = the field is numeric with 'n' decimal places
"RTN","IBCEOB1",15,0)
 ; IB0 = the record being processed
"RTN","IBCEOB1",16,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",17,0)
 ; LEVEL = the array that contains the DIE and DA values if stuffing at a
"RTN","IBCEOB1",18,0)
 ;         level other than the top level
"RTN","IBCEOB1",19,0)
 ;
"RTN","IBCEOB1",20,0)
 N B,IBPC,IBFLD,DA,DR,DIE,X,Y
"RTN","IBCEOB1",21,0)
 S DR=";"
"RTN","IBCEOB1",22,0)
 ;
"RTN","IBCEOB1",23,0)
 I '$G(LEVEL) S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB1",24,0)
 ;
"RTN","IBCEOB1",25,0)
 I $G(LEVEL) D
"RTN","IBCEOB1",26,0)
 . N Q
"RTN","IBCEOB1",27,0)
 . S DIE=$G(LEVEL("DIE"))
"RTN","IBCEOB1",28,0)
 . S Q=0 F  S Q=$O(LEVEL(Q)) Q:'Q  S DA(Q)=LEVEL(Q)
"RTN","IBCEOB1",29,0)
 . S DA=LEVEL(0)
"RTN","IBCEOB1",30,0)
 ;
"RTN","IBCEOB1",31,0)
 I $G(DA) F B=1:1:$L(A,U) D
"RTN","IBCEOB1",32,0)
 . S IBPC=$P(A,U,B),IBFLD=$P(IBPC,";",2)
"RTN","IBCEOB1",33,0)
 . I $P(IB0,U,+IBPC)'="",IBFLD D
"RTN","IBCEOB1",34,0)
 .. N VAL
"RTN","IBCEOB1",35,0)
 .. ; For dollar amts, add full cents; For numerics, strip leading
"RTN","IBCEOB1",36,0)
 .. ;   0's; For non-numeric/non-dollar amts, make any ; in data into |
"RTN","IBCEOB1",37,0)
 .. S VAL=$S($P(IBPC,";",3):$$DOLLAR^IBCEOB($P(IB0,U,+IBPC)),$P(IBPC,";",5):+$P(IB0,U,+IBPC),$P($P(IBPC,";",5),"D",2):$P(IB0,U,+IBPC)/(10**$P($P(IBPC,";",5),"D",2)),1:$TR($P(IB0,U,+IBPC),";","|"))
"RTN","IBCEOB1",38,0)
 .. I $P(IBPC,";",3),VAL S VAL=$P(VAL,".")_"."_$E($P(VAL,".",2)_"00",1,2)
"RTN","IBCEOB1",39,0)
 .. S DR=DR_IBFLD_"///"_$S($P(IBPC,";",4):"/",1:"")_VAL_";"
"RTN","IBCEOB1",40,0)
 ;
"RTN","IBCEOB1",41,0)
 S DR=$P(DR,";",2,$L(DR,";")-1)
"RTN","IBCEOB1",42,0)
 I DR'="" D ^DIE
"RTN","IBCEOB1",43,0)
 Q ($D(Y)=0) ;Successfully stored all the data it was sent if $D(Y)=0
"RTN","IBCEOB1",44,0)
 ;
"RTN","IBCEOB1",45,0)
HDR(IB0,IBEGBL,IBEOB) ; Store header data for EOB
"RTN","IBCEOB1",46,0)
 ; IB0 = the record being processed from the msg
"RTN","IBCEOB1",47,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",48,0)
 ;
"RTN","IBCEOB1",49,0)
 N IBDT,IBDTP,DA,DR,DIE,X,Y
"RTN","IBCEOB1",50,0)
 K IBXSAVE("XTRA"),IBZSAVE
"RTN","IBCEOB1",51,0)
 ;
"RTN","IBCEOB1",52,0)
 S IBDT=$P(IB0,U,3),IBDT=$E(IBDT,1,4)-1700_$E(IBDT,5,8)_"."_$P(IB0,U,4)
"RTN","IBCEOB1",53,0)
 S IBDTP=$P(IB0,U,9)
"RTN","IBCEOB1",54,0)
 I IBDTP S IBDTP=$E(IBDTP,1,4)-1700_$E(IBDTP,5,8)
"RTN","IBCEOB1",55,0)
 S DR=$S($P(IB0,U,7)'="":".03////"_$P(IB0,U,7)_";",1:"")_".05////"_IBDT_";.04////"_($P(IB0,U,5)="Y")_";.15///"_$$COBN^IBCEF(+$G(^IBM(361.1,IBEOB,0)))_";.07///"_$P(IB0,U,8)_$S(IBDTP:";.06////"_IBDTP,1:"")
"RTN","IBCEOB1",56,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB1",57,0)
 D ^DIE
"RTN","IBCEOB1",58,0)
 I $D(Y)'=0 D
"RTN","IBCEOB1",59,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad header data"
"RTN","IBCEOB1",60,0)
 Q ($D(Y)=0)
"RTN","IBCEOB1",61,0)
 ;
"RTN","IBCEOB1",62,0)
FINDLN(IB0,IBEOB,IBZDATA) ; Find the corresponding billed line for the adj
"RTN","IBCEOB1",63,0)
 ; IB0 = the record being processed
"RTN","IBCEOB1",64,0)
 ;       NOTE: pieces 3,4,16 are already reformatted
"RTN","IBCEOB1",65,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",66,0)
 ; IBZDATA = the array from the output formatter containing line
"RTN","IBCEOB1",67,0)
 ;           items for the bill.  This is passed in so this data only has
"RTN","IBCEOB1",68,0)
 ;           to be extracted once for each bill (the first time in, it
"RTN","IBCEOB1",69,0)
 ;           will be undefined)
"RTN","IBCEOB1",70,0)
 ; OUTPUT = Line # in the original bill that this adjustment relates to
"RTN","IBCEOB1",71,0)
 ;          ^ paid procedure code if different from original procedure OR
"RTN","IBCEOB1",72,0)
 ;            paid rev code if different from original and no proc code
"RTN","IBCEOB1",73,0)
 ;
"RTN","IBCEOB1",74,0)
 N IBLN,IBLN1,IBBNDL,OCHG,OCHG2,OPROC,OREVCD,IBIFN,IBXARRAY,IBXARRY,IBXERR,UNITS,UNITS2,UNITS3,IBMOD,Z,Z0,CPT,EOBCHG
"RTN","IBCEOB1",75,0)
 ;
"RTN","IBCEOB1",76,0)
 S (IBLN,IBLN1)="",IBIFN=+$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB1",77,0)
 S EOBCHG=+$$DOLLAR^IBCEOB($P(IB0,U,15))   ; charges on EOB 40 record
"RTN","IBCEOB1",78,0)
 ;
"RTN","IBCEOB1",79,0)
 ; if original procedure exists and is different than the 835 procedure,
"RTN","IBCEOB1",80,0)
 ; the procedure or revenue code originally billed will be in piece 10
"RTN","IBCEOB1",81,0)
 ; of the '40' record of the 835 flat file.  Otherwise, pc 10 is null.
"RTN","IBCEOB1",82,0)
 S IBBNDL=$S($P(IB0,U,10)'="":1,1:0)
"RTN","IBCEOB1",83,0)
 ;
"RTN","IBCEOB1",84,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,19)=3 D  G FINDLNX     ; UB92 format
"RTN","IBCEOB1",85,0)
 . I '$D(IBZDATA) D F^IBCEF("N-UB92 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEOB1",86,0)
 . I $P(IB0,U,22),$D(IBZDATA(+$P(IB0,U,22))) S IBLN=+$P(IB0,U,22)_U_$P(IB0,U,10) Q
"RTN","IBCEOB1",87,0)
 . ;
"RTN","IBCEOB1",88,0)
 . S Z=0 F  S Z=$O(IBZDATA(Z)) Q:'Z  D  Q:IBLN
"RTN","IBCEOB1",89,0)
 .. ; Quit if processing an MRA and this VistA line# has already been filed
"RTN","IBCEOB1",90,0)
 .. I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$D(^IBM(361.1,IBEOB,15,"AC",Z)) Q
"RTN","IBCEOB1",91,0)
 .. I $G(IBZDATA(Z))="" Q
"RTN","IBCEOB1",92,0)
 .. S OCHG=$P(IBZDATA(Z),U,3)*$P(IBZDATA(Z),U,4) ; Total charge from bill
"RTN","IBCEOB1",93,0)
 .. S OCHG2=+$P(IBZDATA(Z),U,5)
"RTN","IBCEOB1",94,0)
 .. I OCHG'=EOBCHG,OCHG2=EOBCHG S OCHG=OCHG2     ; update OCHG
"RTN","IBCEOB1",95,0)
 .. ;
"RTN","IBCEOB1",96,0)
 .. S CPT=$P(IBZDATA(Z),U,2)                        ; proc from bill
"RTN","IBCEOB1",97,0)
 .. I CPT'?.N,CPT'="" S CPT=$O(^ICPT("B",CPT,""))   ; non-numeric proc
"RTN","IBCEOB1",98,0)
 .. S OPROC=$$PRCD^IBCEF1(+CPT_";ICPT(")            ; ext proc code
"RTN","IBCEOB1",99,0)
 .. S OREVCD=+$P($G(^DGCR(399.2,+IBZDATA(Z),0)),U)  ; Rev cd from bill
"RTN","IBCEOB1",100,0)
 .. ;
"RTN","IBCEOB1",101,0)
 .. ; if not bundled/unbundled
"RTN","IBCEOB1",102,0)
 .. I 'IBBNDL D  Q
"RTN","IBCEOB1",103,0)
 ... I OPROC="",OREVCD,OREVCD'=$P(IB0,U,4) Q      ; revenue code
"RTN","IBCEOB1",104,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,3) Q             ; procedure code
"RTN","IBCEOB1",105,0)
 ... I +$P(IBZDATA(Z),U,4)'=$P(IB0,U,16) Q        ; original units
"RTN","IBCEOB1",106,0)
 ... I +OCHG'=EOBCHG Q                            ; original charges
"RTN","IBCEOB1",107,0)
 ... I '$$MODMATCH($P(IBZDATA(Z),U,9),$P(IB0,U,5,8)),'$$MODMATCH($P($P(IBZDATA(Z),U,9),",",1),$P(IB0,U,5)) Q                    ; modifiers
"RTN","IBCEOB1",108,0)
 ... S IBLN=Z
"RTN","IBCEOB1",109,0)
 ... Q
"RTN","IBCEOB1",110,0)
 .. ;
"RTN","IBCEOB1",111,0)
 .. ; if bundled/unbundled
"RTN","IBCEOB1",112,0)
 .. I IBBNDL D  Q
"RTN","IBCEOB1",113,0)
 ... I OPROC="",OREVCD,OREVCD'=+$P(IB0,U,10) Q    ; revenue code
"RTN","IBCEOB1",114,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,10) Q            ; procedure code
"RTN","IBCEOB1",115,0)
 ... I +$P(IBZDATA(Z),U,4)'=$P(IB0,U,16) Q        ; original units
"RTN","IBCEOB1",116,0)
 ... I +OCHG'=EOBCHG Q                            ; original charges
"RTN","IBCEOB1",117,0)
 ... I '$$MODMATCH($P(IBZDATA(Z),U,9),$P(IB0,U,11,14)),'$$MODMATCH($P($P(IBZDATA(Z),U,9),",",1),$P(IB0,U,11)) Q                 ; modifiers
"RTN","IBCEOB1",118,0)
 ... S IBLN=Z_U_$S(OPROC'="":OPROC,1:OREVCD)
"RTN","IBCEOB1",119,0)
 ... Q
"RTN","IBCEOB1",120,0)
 .. Q
"RTN","IBCEOB1",121,0)
 . ; When dealing with Inpatient UB92's, check for revenue code roll-ups
"RTN","IBCEOB1",122,0)
 . I 'IBLN,$$INPAT^IBCEF(IBIFN,1) D RCRU^IBCEOB00(.IBZDATA,IB0,.IBLN)
"RTN","IBCEOB1",123,0)
 . ; If only 1 rev code and charges are the same, assume a match
"RTN","IBCEOB1",124,0)
 . I 'IBLN,'$P($G(^IBM(361.1,IBEOB,0)),U,4),$O(IBZDATA(""),-1)=$O(IBZDATA("")),+OCHG=EOBCHG S IBLN=+$O(IBZDATA(""))_U_OREVCD
"RTN","IBCEOB1",125,0)
 ;
"RTN","IBCEOB1",126,0)
 ; At this point, we can assume the claim is HCFA 1500 format
"RTN","IBCEOB1",127,0)
 I '$D(IBZDATA) D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEOB1",128,0)
 I $P(IB0,U,22),$D(IBZDATA(+$P(IB0,U,22))) S IBLN=+$P(IB0,U,22)_U_$P(IB0,U,10) G FINDLNX
"RTN","IBCEOB1",129,0)
 S Z=0 F  S Z=$O(IBZDATA(Z)) Q:'Z  D  Q:IBLN
"RTN","IBCEOB1",130,0)
 . ; Quit if processing an MRA and this VistA line# has already been filed
"RTN","IBCEOB1",131,0)
 . I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$D(^IBM(361.1,IBEOB,15,"AC",Z)) Q
"RTN","IBCEOB1",132,0)
 . S OCHG=$P(IBZDATA(Z),U,8)*$P(IBZDATA(Z),U,9) ; charge from bill
"RTN","IBCEOB1",133,0)
 . S UNITS=$S('$P(IBZDATA(Z),U,12):$P(IBZDATA(Z),U,9),1:$P(IBZDATA(Z),U,12)/15) ; original units from bill or anethesia minutes calculation
"RTN","IBCEOB1",134,0)
 . I $P(UNITS,".",2) S UNITS=$FN(UNITS,"",1)    ; round to a single decimal place for fractional units
"RTN","IBCEOB1",135,0)
 . I $P($P(IB0,U,16),".",2) S $P(IB0,U,16)=$FN($P(IB0,U,16),"",1)
"RTN","IBCEOB1",136,0)
 . S UNITS2=$P(IBZDATA(Z),U,9)     ; just the units
"RTN","IBCEOB1",137,0)
 . ; UNITS3 is the number of anesthesia minutes divided by 10, or nil.
"RTN","IBCEOB1",138,0)
 . ; Solution to get around the Trailblazers bug for MRAs
"RTN","IBCEOB1",139,0)
 . S UNITS3=""
"RTN","IBCEOB1",140,0)
 . I $P(IBZDATA(Z),U,12) S UNITS3=$P(IBZDATA(Z),U,12)/10
"RTN","IBCEOB1",141,0)
 . ;
"RTN","IBCEOB1",142,0)
 . S CPT=$P(IBZDATA(Z),U,5)        ; proc from bill
"RTN","IBCEOB1",143,0)
 . I CPT'?.N,CPT'="" S CPT=$O(^ICPT("B",CPT,""))   ; non-numeric proc
"RTN","IBCEOB1",144,0)
 . S OPROC=$$PRCD^IBCEF1(+CPT_";ICPT(")            ; ext proc code
"RTN","IBCEOB1",145,0)
 . Q:OPROC'=$S('IBBNDL:$P(IB0,U,3),1:$P(IB0,U,10))
"RTN","IBCEOB1",146,0)
 . ;
"RTN","IBCEOB1",147,0)
 . S MODOK=0
"RTN","IBCEOB1",148,0)
 . I $$DOLLAR^IBCEFG1(OCHG)=+$P(IB0,U,15),UNITS=$P(IB0,U,16)!(UNITS2=$P(IB0,U,16))!(UNITS3=$P(IB0,U,16)),$S($P(IB0,U,19):$P(IB0,U,19)=$P(IBZDATA(Z),U),1:1) D
"RTN","IBCEOB1",149,0)
 .. ;Original procedure/chg/units/date match to get here
"RTN","IBCEOB1",150,0)
 .. ;Check matching original modifiers
"RTN","IBCEOB1",151,0)
 .. S MODOK=$$MODMATCH($$MODLST^IBEFUNC2($P(IBZDATA(Z),U,10)),$S('IBBNDL:$P(IB0,U,5,8),1:$P(IB0,U,11,14)))
"RTN","IBCEOB1",152,0)
 .. I 'MODOK,'IBLN1 S IBLN1=Z_$S(IBBNDL:U_OPROC,1:"")
"RTN","IBCEOB1",153,0)
 .. Q:'MODOK
"RTN","IBCEOB1",154,0)
 .. S IBLN=Z_$S(IBBNDL:U_OPROC,1:"")
"RTN","IBCEOB1",155,0)
 I 'IBLN,IBLN1 S IBLN=IBLN1
"RTN","IBCEOB1",156,0)
 ;
"RTN","IBCEOB1",157,0)
FINDLNX ;
"RTN","IBCEOB1",158,0)
 Q IBLN
"RTN","IBCEOB1",159,0)
 ;
"RTN","IBCEOB1",160,0)
MODMATCH(IB,MODLST) ; Match modifiers
"RTN","IBCEOB1",161,0)
 ; IB = the list of modifiers iens from the bill, comma delimited
"RTN","IBCEOB1",162,0)
 ; MODLST = the 4 '^' pieces of the reported modifiers
"RTN","IBCEOB1",163,0)
 ;
"RTN","IBCEOB1",164,0)
 N MODOK,Q,Z0,IBMOD,MMOD
"RTN","IBCEOB1",165,0)
 S MODOK=1
"RTN","IBCEOB1",166,0)
 I $TR(IB,",")'="" F Q=1:1:$L(IB,",") S Z0=$P(IB,",",Q) I Z0'="" S IBMOD(Z0)=$G(IBMOD(Z0))+1
"RTN","IBCEOB1",167,0)
 I $TR(MODLST,U)="",$O(IBMOD(""))="" G MODQ ; No modifiers used
"RTN","IBCEOB1",168,0)
 ;
"RTN","IBCEOB1",169,0)
 ; No match if no VistA modifiers, but there are MRA modifiers
"RTN","IBCEOB1",170,0)
 I $TR(MODLST,U)'="",$O(IBMOD(""))="" S MODOK=0 G MODQ
"RTN","IBCEOB1",171,0)
 ;
"RTN","IBCEOB1",172,0)
 ; Evaluate each MRA modifier
"RTN","IBCEOB1",173,0)
 F Z0=1:1:4 D
"RTN","IBCEOB1",174,0)
 . S MMOD=$P(MODLST,U,Z0) Q:MMOD=""     ; individual MRA modifier
"RTN","IBCEOB1",175,0)
 . I '$D(IBMOD(MMOD)) Q                 ; not in array so just quit
"RTN","IBCEOB1",176,0)
 . S IBMOD(MMOD)=IBMOD(MMOD)-1          ; decrement array counter
"RTN","IBCEOB1",177,0)
 . I 'IBMOD(MMOD) KILL IBMOD(MMOD)      ; if 0, then kill array entry
"RTN","IBCEOB1",178,0)
 . Q
"RTN","IBCEOB1",179,0)
 ;
"RTN","IBCEOB1",180,0)
 I $O(IBMOD(""))'="" S MODOK=0 ; All submitted mods not matched
"RTN","IBCEOB1",181,0)
MODQ Q MODOK
"RTN","IBCEOB1",182,0)
 ;
"RTN","IBCEOB2")
0^12^B12799483
"RTN","IBCEOB2",1,0)
IBCEOB2 ;ALB/TMP - EOB LIST FOR MANUAL MAINTENANCE ;18-FEB-99
"RTN","IBCEOB2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-94
"RTN","IBCEOB2",3,0)
 Q
"RTN","IBCEOB2",4,0)
 ;
"RTN","IBCEOB2",5,0)
EN ; Enter/edit an EOB manually for a bill
"RTN","IBCEOB2",6,0)
 ; MRA's cannot be manually entered
"RTN","IBCEOB2",7,0)
 N VALMCNT,VALMBG,VALMHDR
"RTN","IBCEOB2",8,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCEOB2",9,0)
 D EN^VALM("IBCE EOB LIST")
"RTN","IBCEOB2",10,0)
 Q
"RTN","IBCEOB2",11,0)
 ;
"RTN","IBCEOB2",12,0)
HDR ; -- header code
"RTN","IBCEOB2",13,0)
 N IBCOB,IBINS,IBINSNM
"RTN","IBCEOB2",14,0)
 K VALMHDR
"RTN","IBCEOB2",15,0)
 S IBINS=$$CURR^IBCEF2(IBIFN),IBINSNM=$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCEOB2",16,0)
 S IBCOB=$P("^PRIMARY^SECONDARY^TERTIARY",U,$$COBN^IBCEF(IBIFN)+1)
"RTN","IBCEOB2",17,0)
 S VALMHDR(1)=IORVON_" BILL #:"_$$BN^PRCAFN(IBIFN)_IORVOFF
"RTN","IBCEOB2",18,0)
 S VALMHDR(1)=$J("",80-$L(VALMHDR(1))\2)_VALMHDR(1)
"RTN","IBCEOB2",19,0)
 S VALMHDR(2)=" CURRENT INSURANCE COMPANY ("_IBCOB_"): "_IBINSNM
"RTN","IBCEOB2",20,0)
 I $D(^IBM(361.1,"B",IBIFN)) D
"RTN","IBCEOB2",21,0)
 . S VALMHDR(3)=" "
"RTN","IBCEOB2",22,0)
 . S VALMHDR(4)=" #  SEQ PAYER"_$J("",15)_"EOB PAID DATE     TYPE  STATUS"
"RTN","IBCEOB2",23,0)
 Q
"RTN","IBCEOB2",24,0)
 ;
"RTN","IBCEOB2",25,0)
INIT ; -- init variables and list array
"RTN","IBCEOB2",26,0)
 ; Select bill
"RTN","IBCEOB2",27,0)
 K VALMQUIT
"RTN","IBCEOB2",28,0)
 S IBIFN=$$BILL(.VALMQUIT)
"RTN","IBCEOB2",29,0)
INITQ Q
"RTN","IBCEOB2",30,0)
 ;
"RTN","IBCEOB2",31,0)
HELP ; -- help code
"RTN","IBCEOB2",32,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCEOB2",33,0)
 Q
"RTN","IBCEOB2",34,0)
 ;
"RTN","IBCEOB2",35,0)
EXIT ; -- exit code
"RTN","IBCEOB2",36,0)
 K ^TMP("IBCEOB",$J),IBIFN,IBEOB
"RTN","IBCEOB2",37,0)
 D CLEAR^VALM1
"RTN","IBCEOB2",38,0)
 Q
"RTN","IBCEOB2",39,0)
 ;
"RTN","IBCEOB2",40,0)
BLD ; Build list template display - IBIFN must equal ien of bill in file 399
"RTN","IBCEOB2",41,0)
 ;
"RTN","IBCEOB2",42,0)
 N IB0,X,Y,IBCOB,IBCOBN,IB,IBCNT,IBEOB,IBSEQ,IBPDDT
"RTN","IBCEOB2",43,0)
 S VALMCNT=0
"RTN","IBCEOB2",44,0)
 K ^TMP("IBCEOB",$J)
"RTN","IBCEOB2",45,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),VALMCNT=0
"RTN","IBCEOB2",46,0)
 S IBCOB=$P($$EXTERNAL^DILFD(399,.21,,$P(IB0,U,21))," "),IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCEOB2",47,0)
 ;
"RTN","IBCEOB2",48,0)
 S IBCNT=0
"RTN","IBCEOB2",49,0)
 I $D(^IBM(361.1,"B",IBIFN)) D  ; Display existing EOB's for bill, if any
"RTN","IBCEOB2",50,0)
 . K ^TMP("IB",$J)
"RTN","IBCEOB2",51,0)
 . S IBEOB=0 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCEOB2",52,0)
 .. S IB0=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB2",53,0)
 .. S ^TMP("IB",$J,+$P(IB0,U,6),IBEOB)=IB0 ; Sort by EOB paid date
"RTN","IBCEOB2",54,0)
 . ;
"RTN","IBCEOB2",55,0)
 . S IBPDDT="" F  S IBPDDT=$O(^TMP("IB",$J,IBPDDT)) Q:IBPDDT=""  S IBEOB=0 F  S IBEOB=$O(^TMP("IB",$J,IBPDDT,IBEOB)) Q:'IBEOB  S IB0=$G(^(IBEOB)) I IB0'="" D
"RTN","IBCEOB2",56,0)
 .. ;
"RTN","IBCEOB2",57,0)
 .. S IBCNT=IBCNT+1
"RTN","IBCEOB2",58,0)
 .. S IBSEQ=+$P(IB0,U,15)
"RTN","IBCEOB2",59,0)
 .. S IB=" "_$E(IBCNT_"   ",1,3)_$S(IBSEQ:"("_$P("P^S^T",U,IBSEQ)_") ",1:$J("",4))_$E($$EXTERNAL^DILFD(361.1,.02,"",$P(IB0,U,2))_$J("",18),1,18)_"  "
"RTN","IBCEOB2",60,0)
 .. S IB=IB_$E($$FMTE^XLFDT($P(IB0,U,6),"2")_$J("",18),1,18)_" "_$E($P("EOB^MRA",U,$P(IB0,U,4)+1)_$J("",5),1,5)_$$EXTERNAL^DILFD(361.1,.13,"",$P(IB0,U,13))
"RTN","IBCEOB2",61,0)
 .. ;
"RTN","IBCEOB2",62,0)
 .. D SET(IB,IBCNT,IBEOB)
"RTN","IBCEOB2",63,0)
 . ;
"RTN","IBCEOB2",64,0)
 . K ^TMP("IB",$J)
"RTN","IBCEOB2",65,0)
 I 'IBCNT S IBCNT=IBCNT D SET(" NO EOB's FOUND FOR BILL #"_$$BN^PRCAFN(IBIFN))
"RTN","IBCEOB2",66,0)
 ;
"RTN","IBCEOB2",67,0)
 Q
"RTN","IBCEOB2",68,0)
 ;
"RTN","IBCEOB2",69,0)
SET(X,CNT,IBEOB) ;set list manager screen arrays
"RTN","IBCEOB2",70,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCEOB2",71,0)
 S ^TMP("IBCEOB",$J,VALMCNT,0)=X
"RTN","IBCEOB2",72,0)
 I $G(IBEOB) D
"RTN","IBCEOB2",73,0)
 . S ^TMP("IBCEOB",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCEOB2",74,0)
 . S ^TMP("IBCEOB",$J,CNT)=VALMCNT_U_IBEOB
"RTN","IBCEOB2",75,0)
 Q
"RTN","IBCEOB2",76,0)
 ;
"RTN","IBCEOB2",77,0)
BILL(VALMQUIT,IBX) ; Select bill
"RTN","IBCEOB2",78,0)
 ; VALMQUIT = pass by reference to determine if protocol should quit
"RTN","IBCEOB2",79,0)
 ; IBX = pass by reference to return 1 if timeout or ^ entered
"RTN","IBCEOB2",80,0)
 ;
"RTN","IBCEOB2",81,0)
 ; Must be printed/txmt or closed status, have a current insurance and
"RTN","IBCEOB2",82,0)
 ; not having MEDICARE WNR as its primary insurance with the COB sequence
"RTN","IBCEOB2",83,0)
 ;  of the bill being primary
"RTN","IBCEOB2",84,0)
 ;
"RTN","IBCEOB2",85,0)
 N DIC,DA,X,Y,IBIFN
"RTN","IBCEOB2",86,0)
 K VALMQUIT
"RTN","IBCEOB2",87,0)
 S IBX=0
"RTN","IBCEOB2",88,0)
 S DIC="^DGCR(399,",DIC(0)="AEMQ",DIC("S")="N IBY S IBY=Y I $P(^(0),U,13)'="""",""04""[$P(^(0),U,13),$D(^(""I1"")),$S($$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(+IBY)):+$$COBN^IBCEF(+IBY)'=1,1:1)" D ^DIC K DIC
"RTN","IBCEOB2",89,0)
 S IBIFN=+Y,IBX=($G(DTOUT)!($G(DUOUT)))
"RTN","IBCEOB2",90,0)
 I IBIFN'>0 S VALMQUIT=1 G BILLQ
"RTN","IBCEOB2",91,0)
 I IBIFN>0 D BLD,HDR
"RTN","IBCEOB2",92,0)
BILLQ Q IBIFN
"RTN","IBCEOB2",93,0)
 ;
"RTN","IBCEOB21")
0^16^B24441262
"RTN","IBCEOB21",1,0)
IBCEOB21 ;ALB/TMP - EOB MAINTENANCE ACTIONS ;18-FEB-99
"RTN","IBCEOB21",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-94
"RTN","IBCEOB21",3,0)
 Q
"RTN","IBCEOB21",4,0)
 ;
"RTN","IBCEOB21",5,0)
EDIT ; Edit a previously entered manual EOB
"RTN","IBCEOB21",6,0)
 N IBDA,IB0,DIE,DR,X,Y,DA
"RTN","IBCEOB21",7,0)
 ;
"RTN","IBCEOB21",8,0)
 D FULL^VALM1
"RTN","IBCEOB21",9,0)
 S IBDA=$$SEL()
"RTN","IBCEOB21",10,0)
 G:'IBDA EDITQ
"RTN","IBCEOB21",11,0)
 ;
"RTN","IBCEOB21",12,0)
 S IB0=$G(^IBM(361.1,IBDA,0))
"RTN","IBCEOB21",13,0)
 I $P(IB0,U,17)'=1 D  G EDITQ
"RTN","IBCEOB21",14,0)
 . W !,*7,"Cannot edit an EOB that was not entered manually!!"
"RTN","IBCEOB21",15,0)
 . D PAUSE^VALM1
"RTN","IBCEOB21",16,0)
 ;
"RTN","IBCEOB21",17,0)
 I $P(IB0,U,15)'=$$COBN^IBCEF(IBIFN) D  G EDITQ
"RTN","IBCEOB21",18,0)
 . W !,*7,"Can only edit an EOB for the current insurance sequence"
"RTN","IBCEOB21",19,0)
 . D PAUSE^VALM1
"RTN","IBCEOB21",20,0)
 ;
"RTN","IBCEOB21",21,0)
 S DIE="^IBM(361.1,",DA=IBDA
"RTN","IBCEOB21",22,0)
 S DR="100.03///"_DUZ_";100.04///^S X=""NOW"";.06;.13;.16//^S X=$$EXTERNAL^DILFD(361.1,.16,,3)"_$S($$AMTCHG(DA):";1.01",1:"")_";21"
"RTN","IBCEOB21",23,0)
 D ^DIE
"RTN","IBCEOB21",24,0)
 ;
"RTN","IBCEOB21",25,0)
 D BLD^IBCEOB2
"RTN","IBCEOB21",26,0)
 ;
"RTN","IBCEOB21",27,0)
 D PAUSE^VALM1
"RTN","IBCEOB21",28,0)
EDITQ S VALMBCK="R"
"RTN","IBCEOB21",29,0)
 Q
"RTN","IBCEOB21",30,0)
 ;
"RTN","IBCEOB21",31,0)
DELETE ; Delete a previously entered manual EOB
"RTN","IBCEOB21",32,0)
 N IB0,IBDA,IBE,DIR,X,Y,DA,DIK
"RTN","IBCEOB21",33,0)
 ;
"RTN","IBCEOB21",34,0)
 D FULL^VALM1
"RTN","IBCEOB21",35,0)
 S IBDA=$$SEL(.IBE)
"RTN","IBCEOB21",36,0)
 G:'IBDA DELQ
"RTN","IBCEOB21",37,0)
 ;
"RTN","IBCEOB21",38,0)
 S IB0=$G(^IBM(361.1,IBDA,0))
"RTN","IBCEOB21",39,0)
 I $P(IB0,U,17)'=1 D  G DELQ
"RTN","IBCEOB21",40,0)
 . W !,*7,"Cannot delete an EOB that was not entered manually!!"
"RTN","IBCEOB21",41,0)
 . D PAUSE^VALM1
"RTN","IBCEOB21",42,0)
 ;
"RTN","IBCEOB21",43,0)
 I $P(IB0,U,15)'=$$COBN^IBCEF(IBIFN) D  G DELQ
"RTN","IBCEOB21",44,0)
 . W !,*7,"Cannot only edit an EOB for the current insurance sequence"
"RTN","IBCEOB21",45,0)
 . D PAUSE^VALM1
"RTN","IBCEOB21",46,0)
 ;
"RTN","IBCEOB21",47,0)
 W !!,IBE,!
"RTN","IBCEOB21",48,0)
 S DIR("A")="ARE YOU REALLY SURE YOU WANT TO DELETE THIS EOB?: ",DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR
"RTN","IBCEOB21",49,0)
 G:Y'=1 DELQ
"RTN","IBCEOB21",50,0)
 ;
"RTN","IBCEOB21",51,0)
 S DIK="^IBM(361.1,",DA=IBDA D ^DIK
"RTN","IBCEOB21",52,0)
 W !!,"EOB Deleted!!",!
"RTN","IBCEOB21",53,0)
 ;
"RTN","IBCEOB21",54,0)
 D BLD^IBCEOB2
"RTN","IBCEOB21",55,0)
 ;
"RTN","IBCEOB21",56,0)
 D PAUSE^VALM1
"RTN","IBCEOB21",57,0)
DELQ S VALMBCK="R"
"RTN","IBCEOB21",58,0)
 Q
"RTN","IBCEOB21",59,0)
 ;
"RTN","IBCEOB21",60,0)
NEW ; Add a manual EOB for the current COB sequence for the claim
"RTN","IBCEOB21",61,0)
 N DO,DD,DIC,DIE,DLAYGO,Y,X,IBEOB,IBOK,IB364
"RTN","IBCEOB21",62,0)
 ;
"RTN","IBCEOB21",63,0)
 D FULL^VALM1
"RTN","IBCEOB21",64,0)
 ;
"RTN","IBCEOB21",65,0)
 K DO,DD
"RTN","IBCEOB21",66,0)
 S IB364=$$LAST364^IBCEF4(IBIFN)
"RTN","IBCEOB21",67,0)
 S DIC="^IBM(361.1,",DIC(0)="L",X=IBIFN,DLAYGO=361.1
"RTN","IBCEOB21",68,0)
 S DIC("DR")=".15////"_$$COBN^IBCEF(IBIFN)_";.04////0;.05////"_$$NOW^XLFDT_";.17////1;.18///"_DUZ_$S(IB364:";.19////"_IB364,1:"")
"RTN","IBCEOB21",69,0)
 D FILE^DICN K DO,DD,DLAYGO,DIC
"RTN","IBCEOB21",70,0)
 G:Y<0 NEWQ
"RTN","IBCEOB21",71,0)
 S DIE="^IBM(361.1,",DA=+Y,DR=".06//^S X=""NOW"";S DIE(""NO^"")="""";.13//^S X=$$EXTERNAL^DILFD(361.1,.13,,1);.16//^S X=$$EXTERNAL^DILFD(361.1,.16,,3);K DIE(""NO^"");1.01;21"
"RTN","IBCEOB21",72,0)
 W ! D ^DIE K DIE
"RTN","IBCEOB21",73,0)
 S IBEOB=$P($G(^IBM(361.1,DA,0)),U,6),IBOK=1
"RTN","IBCEOB21",74,0)
 I IBEOB D
"RTN","IBCEOB21",75,0)
 . I $P($G(^IBM(361.1,DA,1)),U,1)="" D
"RTN","IBCEOB21",76,0)
 .. S DIR(0)="YA",DIR("A",1)="Nothing entered for payer amt paid",DIR("A")="Are you sure you want to file this EOB?: ",DIR("B")="NO"
"RTN","IBCEOB21",77,0)
 .. W ! D ^DIR W ! K DIR
"RTN","IBCEOB21",78,0)
 .. I Y'=1 S (IBEOB,IBOK)=0
"RTN","IBCEOB21",79,0)
 . I IBOK W !,"EOB added",!
"RTN","IBCEOB21",80,0)
 I 'IBEOB D
"RTN","IBCEOB21",81,0)
 . Q:DA'>0
"RTN","IBCEOB21",82,0)
 . S DIK="^IBM(361.1," D ^DIK
"RTN","IBCEOB21",83,0)
 . I IBOK W !!,"EOB Date/Time needed, not entered"
"RTN","IBCEOB21",84,0)
 . W !,"No EOB added!!",!
"RTN","IBCEOB21",85,0)
 D BLD^IBCEOB2
"RTN","IBCEOB21",86,0)
NEWQ D PAUSE^VALM1
"RTN","IBCEOB21",87,0)
 S VALMBCK="R"
"RTN","IBCEOB21",88,0)
 Q
"RTN","IBCEOB21",89,0)
 ;
"RTN","IBCEOB21",90,0)
VIEW ; View an MRA
"RTN","IBCEOB21",91,0)
 N IBDA,IBSEL,IBIFN,IBEOBIFN,IBIFNSAV
"RTN","IBCEOB21",92,0)
 ;
"RTN","IBCEOB21",93,0)
 D FULL^VALM1
"RTN","IBCEOB21",94,0)
 D SEL(.IBDA,1)     ; select a bill from the main list
"RTN","IBCEOB21",95,0)
 S IBSEL=+$O(IBDA(0)) I 'IBSEL G VIEWQ                    ; list#
"RTN","IBCEOB21",96,0)
 S IBIFN=$P($G(IBDA(IBSEL)),U,1) I 'IBIFN G VIEWQ         ; bill#
"RTN","IBCEOB21",97,0)
 S IBEOBIFN=$P($G(IBDA(IBSEL)),U,3) I 'IBEOBIFN G VIEWQ   ; eob ien
"RTN","IBCEOB21",98,0)
 ;
"RTN","IBCEOB21",99,0)
 ; If only one MRA on file, then call the Listman and quit
"RTN","IBCEOB21",100,0)
 I $$MRACNT^IBCEMU1(IBIFN)=1 D EN^VALM("IBCEM VIEW EOB") G VIEWQ
"RTN","IBCEOB21",101,0)
 ;
"RTN","IBCEOB21",102,0)
VLOOP ; Multiple MRA's on file.  Allow user to select the MRA to view
"RTN","IBCEOB21",103,0)
 D FULL^VALM1
"RTN","IBCEOB21",104,0)
 S IBEOBIFN=$$SEL^IBCEMU1(IBIFN,1)
"RTN","IBCEOB21",105,0)
 I 'IBEOBIFN G VIEWQ
"RTN","IBCEOB21",106,0)
 S IBIFNSAV=IBIFN                 ; save off the bill#
"RTN","IBCEOB21",107,0)
 D EN^VALM("IBCEM VIEW EOB")      ; call the Listman
"RTN","IBCEOB21",108,0)
 S IBIFN=IBIFNSAV                 ; restore the bill# (just in case)
"RTN","IBCEOB21",109,0)
 G VLOOP
"RTN","IBCEOB21",110,0)
 ;
"RTN","IBCEOB21",111,0)
VIEWQ ;
"RTN","IBCEOB21",112,0)
 S VALMBCK="R"
"RTN","IBCEOB21",113,0)
 Q
"RTN","IBCEOB21",114,0)
 ;
"RTN","IBCEOB21",115,0)
AMTCHG(DA) ; Function to determine if amt on EOB can be modified
"RTN","IBCEOB21",116,0)
 ; DA = ien of EOB entry (file 361.1)
"RTN","IBCEOB21",117,0)
 ; Function returns 1 if OK to change, 0 if the next bill in COB
"RTN","IBCEOB21",118,0)
 ;  sequence has already been sent or the bill has been closed.
"RTN","IBCEOB21",119,0)
 N IBOK,IBIFN,IBCOBN,IB0,IBNB
"RTN","IBCEOB21",120,0)
 S IBOK=1
"RTN","IBCEOB21",121,0)
 S IBIFN=+$G(^IBM(361.1,+DA,0)),IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEOB21",122,0)
 I $P(IB0,U,13)=6 S IBOK=0 G AMTQ ; Bill is closed...can't change EOB amt
"RTN","IBCEOB21",123,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCEOB21",124,0)
 I IBCOBN=3 G AMTQ ; Already the last bill
"RTN","IBCEOB21",125,0)
 S IBNB=+$P($G(^DGCR(399,IBIFN,"M")),U,IBCOBN+5) ; Get next bill #
"RTN","IBCEOB21",126,0)
 I 'IBNB G AMTQ ; No next bill
"RTN","IBCEOB21",127,0)
 I $P($G(^DGCR(399,IBNB,0)),U,13)<3 G AMTQ
"RTN","IBCEOB21",128,0)
 S IBOK=0
"RTN","IBCEOB21",129,0)
 ;
"RTN","IBCEOB21",130,0)
AMTQ Q IBOK
"RTN","IBCEOB21",131,0)
 ;
"RTN","IBCEOB21",132,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCEOB21",133,0)
 ; IBDA = array returned if selections made
"RTN","IBCEOB21",134,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCEOB21",135,0)
 N VALMY
"RTN","IBCEOB21",136,0)
 K IBDA
"RTN","IBCEOB21",137,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCEOB21",138,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  S IBDA(IBDA)=$P($G(^TMP("IBCECOB",$J,+IBDA)),U,2,6)
"RTN","IBCEOB21",139,0)
 Q
"RTN","IBCEOB21",140,0)
 ;
"RTN","IBCEOB21",141,0)
CHANGE ; Select another bill to display
"RTN","IBCEOB21",142,0)
 N IBNULL,IBIFN1
"RTN","IBCEOB21",143,0)
 D FULL^VALM1
"RTN","IBCEOB21",144,0)
 K VALMQUIT
"RTN","IBCEOB21",145,0)
 S IBIFN1=IBIFN
"RTN","IBCEOB21",146,0)
 S IBIFN=$$BILL^IBCEOB2(.VALMQUIT,.IBNULL)
"RTN","IBCEOB21",147,0)
 I '$G(IBNULL) S IBIFN=IBIFN1 K VALMQUIT
"RTN","IBCEOB21",148,0)
 I '$D(VALMQUIT) S VALMBCK="R"
"RTN","IBCEOB21",149,0)
 Q
"RTN","IBCEOB21",150,0)
 ;
"RTN","IBCERP6")
0^6^B24273824
"RTN","IBCERP6",1,0)
IBCERP6 ;ALB/JEH - MRA/EDI CLAIMS READY FOR EXTRACT ;12/10/99
"RTN","IBCERP6",2,0)
 ;;2.0;INTEGRATED BILLING;**137,211,155**;21-MAR-94
"RTN","IBCERP6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCERP6",4,0)
 ;
"RTN","IBCERP6",5,0)
EN ;Entry point from option
"RTN","IBCERP6",6,0)
 W !!,"This report provides a list of claims held in a"
"RTN","IBCERP6",7,0)
 W !,"Ready for Extract status.  Users can select all bills"
"RTN","IBCERP6",8,0)
 W !,"in a Ready for extract status or only those trapped due to"
"RTN","IBCERP6",9,0)
 W !,"the EDI/MRA Parameters being turned off."
"RTN","IBCERP6",10,0)
 ;
"RTN","IBCERP6",11,0)
 S IBQUIT=0 D SELECT I IBQUIT G ENQ1
"RTN","IBCERP6",12,0)
 S IBQUIT=0 D PARAM I IBQUIT G ENQ1
"RTN","IBCERP6",13,0)
 ;
"RTN","IBCERP6",14,0)
 W !!,"This report requires a 132 column printer.",!!
"RTN","IBCERP6",15,0)
 ; - Ask device
"RTN","IBCERP6",16,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCERP6",17,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ1
"RTN","IBCERP6",18,0)
 I $D(IO("Q")) D  G ENQ1
"RTN","IBCERP6",19,0)
 .S ZTRTN="BLD^IBCERP6",ZTDESC="IB - EDI/MRA Claims in Waiting Transmission Status"
"RTN","IBCERP6",20,0)
 .S ZTSAVE("IB*")=""
"RTN","IBCERP6",21,0)
 .D ^%ZTLOAD
"RTN","IBCERP6",22,0)
 .W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBCERP6",23,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBCERP6",24,0)
 U IO
"RTN","IBCERP6",25,0)
 ;
"RTN","IBCERP6",26,0)
BLD ; - Tasked entry point
"RTN","IBCERP6",27,0)
 ;
"RTN","IBCERP6",28,0)
 N IBSTAT,IBILL,IBREC,IBIFN,IBSTAT,IBVSIT,IBCAT,IBI,IBINS,IBPREC,IBEVDT,IBTYP,IBPG,IBCHK
"RTN","IBCERP6",29,0)
 K ^TMP("IBCERP6",$J)
"RTN","IBCERP6",30,0)
 S (IBI,IBIFN)=0 F  S IBI=$O(^IBA(364,"ASTAT","X",IBI)) Q:'IBI  S IBIFN=+$G(^IBA(364,IBI,0)) D
"RTN","IBCERP6",31,0)
 .S IBQUIT=0
"RTN","IBCERP6",32,0)
 .S IBSTAT=$$WNRBILL^IBEFUNC(IBIFN)
"RTN","IBCERP6",33,0)
 .I IBSEL=2 D  I IBQUIT Q
"RTN","IBCERP6",34,0)
 ..I 'IBSTAT,13[IBPARAM S IBQUIT=1 Q
"RTN","IBCERP6",35,0)
 ..I IBSTAT,23[IBPARAM S IBQUIT=1 Q
"RTN","IBCERP6",36,0)
 .S IBSTAT=$S(IBSTAT:"MRA",1:"EDI")
"RTN","IBCERP6",37,0)
 .S IBREC=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCERP6",38,0)
 .S IBVSIT=$S($$INPAT^IBCEF(IBIFN,1)=1:"INP",1:"OPT")
"RTN","IBCERP6",39,0)
 .S IBCAT=$S($$FT^IBCEF(IBIFN)=3:"UB92",1:"HCFA")
"RTN","IBCERP6",40,0)
 .S IBILL=$$BN1^PRCAFN(IBIFN)
"RTN","IBCERP6",41,0)
 .S IBINS=$P($G(^DIC(36,+$$CURR^IBCEF2(IBIFN),0)),U)
"RTN","IBCERP6",42,0)
 .S IBPREC=$$PT^IBEFUNC(+$P(IBREC,U,2))
"RTN","IBCERP6",43,0)
 .S IBEVDT=$P($G(^DGCR(399,IBIFN,"U")),U) ;Statement from date
"RTN","IBCERP6",44,0)
 .;S IBTYP=$P(IBREC,U,24)_U_$P($G(^DGCR(399.1,+$P(IBREC,U,25),0)),U)_U_$P(IBREC,U,26)
"RTN","IBCERP6",45,0)
 .S IBTYP=$$GET1^DIQ(399,IBIFN,.24)_U_$$GET1^DIQ(399,IBIFN,.25)_U_$$GET1^DIQ(399,IBIFN,.26)
"RTN","IBCERP6",46,0)
 .S ^TMP("IBCERP6",$J,IBSTAT,IBILL)=IBILL_U_IBVSIT_U_IBCAT_U_$P(IBPREC,U)_U_$E($P(IBPREC,U,2),8,11)_U_IBEVDT_U_IBTYP_U_IBINS
"RTN","IBCERP6",47,0)
 ;
"RTN","IBCERP6",48,0)
PRINT ;Prints report
"RTN","IBCERP6",49,0)
 S (IBQUIT,IBPG,IBEDI,IBMRA,IBTOT)=0 D HDR
"RTN","IBCERP6",50,0)
 I '$D(^TMP("IBCERP6",$J)) W !!,"There are no "_$S(IBPARAM=1:"EDI",IBPARAM=2:"MRA",1:"EDI/MRA")_" records"_$S(IBSEL=2:" trapped",1:"")_" in a ready for extract status" G ENQ1
"RTN","IBCERP6",51,0)
 S IBSTAT="" F  S IBSTAT=$O(^TMP("IBCERP6",$J,IBSTAT)) Q:IBSTAT=""!(IBQUIT=1)  D
"RTN","IBCERP6",52,0)
 .S IBILL="" F  S IBILL=$O(^TMP("IBCERP6",$J,IBSTAT,IBILL)) Q:IBILL=""!(IBQUIT=1)  S IBREC=^(IBILL)  D
"RTN","IBCERP6",53,0)
 ..I ($Y+5)>IOSL D  I IBQUIT Q
"RTN","IBCERP6",54,0)
 ...D ASK I IBQUIT Q
"RTN","IBCERP6",55,0)
 ...D HDR
"RTN","IBCERP6",56,0)
 ..;
"RTN","IBCERP6",57,0)
 ..W !,?2,$P(IBREC,U),?15,$P(IBREC,U,2),?22,$P(IBREC,U,3)
"RTN","IBCERP6",58,0)
 ..W ?28,$E($P(IBREC,U,4),1,20),?50,$P(IBREC,U,5)
"RTN","IBCERP6",59,0)
 ..W ?57,$$FMTE^XLFDT($P(IBREC,U,6)),?73,$E($P(IBREC,U,7),1,8)_", "_$E($P(IBREC,U,8),1,3)_", "_$E($P(IBREC,U,9),1,16),?110,$E($P(IBREC,U,10),1,20)
"RTN","IBCERP6",60,0)
 ..I IBSTAT="EDI" S IBEDI=IBEDI+1
"RTN","IBCERP6",61,0)
 ..E  S IBMRA=IBMRA+1
"RTN","IBCERP6",62,0)
 ..S IBTOT=IBTOT+1
"RTN","IBCERP6",63,0)
 W !!
"RTN","IBCERP6",64,0)
 I IBEDI>0 W !,?3,"Total EDI Bills ",IBEDI
"RTN","IBCERP6",65,0)
 I IBMRA>0 W !,?3,"Total MRA Bills ",IBMRA
"RTN","IBCERP6",66,0)
 W !!,?3,"Total bills ",IBTOT
"RTN","IBCERP6",67,0)
 K ^TMP("IBCERP6",$J)
"RTN","IBCERP6",68,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCERP6",69,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","IBCERP6",70,0)
ENQ1 K IBPARAM,IBQUIT,IBSEL,Y,IBEDI,IBMRA,IBTOT Q
"RTN","IBCERP6",71,0)
 ;
"RTN","IBCERP6",72,0)
PARAM ;
"RTN","IBCERP6",73,0)
 S IBPARAM=$P($G(^IBE(350.9,1,8)),U,10) ;Get MRA/EDI site parameter setting
"RTN","IBCERP6",74,0)
 I IBPARAM="" D
"RTN","IBCERP6",75,0)
 .W !!,"Your EDI/MRA site parameter setting is incomplete."
"RTN","IBCERP6",76,0)
 .W !,"Please contact your coordinator.",!
"RTN","IBCERP6",77,0)
 .S IBQUIT=1
"RTN","IBCERP6",78,0)
 ;
"RTN","IBCERP6",79,0)
 I IBSEL=2,IBPARAM=3 D
"RTN","IBCERP6",80,0)
 .W !!,"Your site parameters are set to allow both EDI and MRA"
"RTN","IBCERP6",81,0)
 .W !,"transmissions.  There is no need to run this report.",!
"RTN","IBCERP6",82,0)
 .S IBQUIT=1
"RTN","IBCERP6",83,0)
 Q
"RTN","IBCERP6",84,0)
 ;
"RTN","IBCERP6",85,0)
HDR ;Prints report heading
"RTN","IBCERP6",86,0)
 ; IB*2.0*211
"RTN","IBCERP6",87,0)
 ;I $E(IOST,1,2)="C-" W @IOF,*13
"RTN","IBCERP6",88,0)
 I $S(IBPG:1,1:$E(IOST,1,2)="C-") W @IOF,*13
"RTN","IBCERP6",89,0)
 S IBPG=IBPG+1
"RTN","IBCERP6",90,0)
 W !!,?45,$S(IBSEL=2:"Trapped ",1:"")_" Claims Ready for Extract",?90,$$FMTE^XLFDT(DT),?110,"Page: ",IBPG
"RTN","IBCERP6",91,0)
 W !!,?15,"Inpt/",?23,"Inst/",!,?4,"Bill #",?15,"Opt",?23,"Prof",?32,"Name"
"RTN","IBCERP6",92,0)
 W ?51,"SSN",?57,"Statement Date",?89,"Type",?110,"Insurance Co."
"RTN","IBCERP6",93,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","IBCERP6",94,0)
 Q
"RTN","IBCERP6",95,0)
 ;
"RTN","IBCERP6",96,0)
ASK ;
"RTN","IBCERP6",97,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCERP6",98,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCERP6",99,0)
 S DIR(0)="E" D ^DIR
"RTN","IBCERP6",100,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCERP6",101,0)
 Q
"RTN","IBCERP6",102,0)
 ;
"RTN","IBCERP6",103,0)
SELECT ;Report selection
"RTN","IBCERP6",104,0)
 N DIR,DIROUT,DTOUT,DUOUT,DTOUT
"RTN","IBCERP6",105,0)
 S IBSEL=0
"RTN","IBCERP6",106,0)
 W !!  S DIR("A",1)="Do you want to print a list of:"
"RTN","IBCERP6",107,0)
 S DIR("A",2)=""
"RTN","IBCERP6",108,0)
 S DIR("A",3)="     1 - All bills in Ready for Extract status"
"RTN","IBCERP6",109,0)
 S DIR("A",4)="     2 - Bills trapped due to EDI/MRA parameter being turned off"
"RTN","IBCERP6",110,0)
 S DIR("A",5)=""
"RTN","IBCERP6",111,0)
 S DIR(0)="SAXB^1:All bills;2:Trapped bills"
"RTN","IBCERP6",112,0)
 W !
"RTN","IBCERP6",113,0)
 S DIR("A")="Select Number: ",DIR("B")=1
"RTN","IBCERP6",114,0)
 D ^DIR
"RTN","IBCERP6",115,0)
 I +Y'>0 S IBQUIT=1 Q
"RTN","IBCERP6",116,0)
 S IBSEL=+Y
"RTN","IBCERP6",117,0)
 Q
"RTN","IBCESRV2")
0^26^B54202565
"RTN","IBCESRV2",1,0)
IBCESRV2 ;ALB/TMP - Server based Auto-update utilities - IB EDI ;03/05/96
"RTN","IBCESRV2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,155**;21-MAR-94
"RTN","IBCESRV2",3,0)
 Q
"RTN","IBCESRV2",4,0)
 ;
"RTN","IBCESRV2",5,0)
CON837 ; Confirmation of 837 batch - auto update
"RTN","IBCESRV2",6,0)
 ;Input expected: IBTDA = the ien of the message entry in file 364.2
"RTN","IBCESRV2",7,0)
 ;
"RTN","IBCESRV2",8,0)
 N IB0,IBBDA,IBBILL,IBMSG,IBFLAG,IBTYP,IBBST,DR,DA,DIE,Z
"RTN","IBCESRV2",9,0)
 Q:'$G(IBTDA)
"RTN","IBCESRV2",10,0)
 S IB0=$G(^IBA(364.2,IBTDA,0)),IBBDA=+$P(IB0,U,4) ;Batch ien
"RTN","IBCESRV2",11,0)
 S IBTYP=$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U)
"RTN","IBCESRV2",12,0)
 ;
"RTN","IBCESRV2",13,0)
 Q:IBTYP'["837REC"
"RTN","IBCESRV2",14,0)
 ; Austin receipt is '837REC0',
"RTN","IBCESRV2",15,0)
 ;  other non-payer confirmations are '837REC1',
"RTN","IBCESRV2",16,0)
 ;  payer confirmations are '837REC2'
"RTN","IBCESRV2",17,0)
 S IBTYP=+$P(IBTYP,"837REC",2)
"RTN","IBCESRV2",18,0)
 S IBBST=$P($G(^IBA(364.1,IBBDA,0)),U,2)
"RTN","IBCESRV2",19,0)
 ;
"RTN","IBCESRV2",20,0)
 I $S(IBBST?1"A"1N:IBTYP<+$P(IBBST,"A",2),1:0) D  Q
"RTN","IBCESRV2",21,0)
 . ;Don't allow status to go backwards
"RTN","IBCESRV2",22,0)
 . D DELMSG(IBTDA)
"RTN","IBCESRV2",23,0)
 ;
"RTN","IBCESRV2",24,0)
 D UPDCONF(IBBDA,IBTDA,IBTYP,1)
"RTN","IBCESRV2",25,0)
 ;
"RTN","IBCESRV2",26,0)
 Q
"RTN","IBCESRV2",27,0)
 ;
"RTN","IBCESRV2",28,0)
BILLSTAC(IBBILL,IBTYP) ;Change status of transmit bill
"RTN","IBCESRV2",29,0)
 ; IBBILL = the ien of the entry in file 364 to update
"RTN","IBCESRV2",30,0)
 ; IBTYP = code for new status (see field 364;.03 for details)
"RTN","IBCESRV2",31,0)
 ;
"RTN","IBCESRV2",32,0)
 N IBSTAT,DIE,DA,DR,X,Y
"RTN","IBCESRV2",33,0)
 ;
"RTN","IBCESRV2",34,0)
 S IBSTAT=$P($G(^IBA(364,IBBILL,0)),U,3)
"RTN","IBCESRV2",35,0)
 ;
"RTN","IBCESRV2",36,0)
 Q:IBSTAT=IBTYP!(IBTYP="")  ;Status hasn't changed or new status is null
"RTN","IBCESRV2",37,0)
 Q:"CREZ"[IBSTAT  ;Don't update status of completed transmit record
"RTN","IBCESRV2",38,0)
 ;
"RTN","IBCESRV2",39,0)
 ; Don't allow the status to go backwards
"RTN","IBCESRV2",40,0)
 I $E(IBSTAT)="A","PX"[IBTYP Q
"RTN","IBCESRV2",41,0)
 I $E(IBSTAT)="A",$E(IBTYP)="A",$P(IBTYP,"A",2)<$P(IBSTAT,"A",2) Q
"RTN","IBCESRV2",42,0)
 ;
"RTN","IBCESRV2",43,0)
 S DIE="^IBA(364,",DA=IBBILL,DR=".03////"_IBTYP_";.04///NOW" D ^DIE
"RTN","IBCESRV2",44,0)
 Q
"RTN","IBCESRV2",45,0)
 ;
"RTN","IBCESRV2",46,0)
REJ837 ; Rejections 837
"RTN","IBCESRV2",47,0)
 ;Input IBTDA = the ien of the message entry in file 364.2
"RTN","IBCESRV2",48,0)
 ;
"RTN","IBCESRV2",49,0)
 Q:'$G(IBTDA)
"RTN","IBCESRV2",50,0)
 ;
"RTN","IBCESRV2",51,0)
 D UPDREJ(+$P($G(^IBA(364.2,IBTDA,0)),U,4),IBTDA)
"RTN","IBCESRV2",52,0)
 Q
"RTN","IBCESRV2",53,0)
 ;
"RTN","IBCESRV2",54,0)
DELMSG(IBTDA) ;
"RTN","IBCESRV2",55,0)
 ; Delete message after it successfully updates the database.
"RTN","IBCESRV2",56,0)
 ; IBTDA = the ien of the message in file 364.2
"RTN","IBCESRV2",57,0)
 D TRADEL^IBCESRV1(IBTDA)
"RTN","IBCESRV2",58,0)
 Q
"RTN","IBCESRV2",59,0)
 ;
"RTN","IBCESRV2",60,0)
BILLSTAR(IBBILL,IBTDA) ;Change status of transmit bill and bill on rejection
"RTN","IBCESRV2",61,0)
 ; IBBILL = ien of bill (399)
"RTN","IBCESRV2",62,0)
 ; IBTDA = ien of error message
"RTN","IBCESRV2",63,0)
 ;
"RTN","IBCESRV2",64,0)
 N DR,DIE,DA,IBSTAT,IBDA,IBCBH
"RTN","IBCESRV2",65,0)
 ;
"RTN","IBCESRV2",66,0)
 S IBDA=$S($P($G(^IBA(364.2,IBTDA,0)),U,5):$P(^(0),U,5),1:+$O(^IBA(364,"B",IBBILL,""),-1))
"RTN","IBCESRV2",67,0)
 S IBSTAT=$P($G(^IBA(364,IBDA,0)),U,3),IBCBH=$P($G(^DGCR(399,IBBILL,0)),U,21)
"RTN","IBCESRV2",68,0)
 ;
"RTN","IBCESRV2",69,0)
 Q:"CREZ"[IBSTAT  ;Don't update status of completed transmit record
"RTN","IBCESRV2",70,0)
 ;
"RTN","IBCESRV2",71,0)
 I IBSTAT'="E" S DIE="^IBA(364,",DA=IBDA,DR=".03////E;.04///NOW;.05////"_IBTDA D ^DIE
"RTN","IBCESRV2",72,0)
 ;
"RTN","IBCESRV2",73,0)
 ; Don't process further if only testing transmission with insurance co
"RTN","IBCESRV2",74,0)
 Q:+$G(^DIC(36,+$P($G(^DGCR(399,IBBILL,"I"_($F("PST",IBCBH)-1))),U),3))=2
"RTN","IBCESRV2",75,0)
 ;
"RTN","IBCESRV2",76,0)
 ; Suspend bill if waiting for MRA - allows it to be edited
"RTN","IBCESRV2",77,0)
 ;I $P($G(^DGCR(399,IBBILL,0)),U,13)=2,$$NEEDMRA^IBEFUNC(IBBILL)="1N" S DIE="^DGCR(399,",DA=IBBILL,DR=".13////6" D:DA ^DIE
"RTN","IBCESRV2",78,0)
 Q
"RTN","IBCESRV2",79,0)
 ;
"RTN","IBCESRV2",80,0)
UPDMSG(IBTDA,STAT,UPD) ; Update msg with status of 'P','U' or delete message
"RTN","IBCESRV2",81,0)
 ; STAT = 'P' 'U' for pending or updating, 'R' to delete
"RTN","IBCESRV2",82,0)
 ; UPD = flag that says update the data base updated field (.12) if 1
"RTN","IBCESRV2",83,0)
 ;
"RTN","IBCESRV2",84,0)
 N DIE,DA,DR
"RTN","IBCESRV2",85,0)
 ;
"RTN","IBCESRV2",86,0)
 I STAT="R" D DELMSG(IBTDA) Q
"RTN","IBCESRV2",87,0)
 ;
"RTN","IBCESRV2",88,0)
 I $P($G(^IBA(364.2,IBTDA,0)),U,6)'=STAT D
"RTN","IBCESRV2",89,0)
 . S DR=".06////"_STAT_$S($G(UPD):".12////1",1:"")
"RTN","IBCESRV2",90,0)
 . S DIE="^IBA(364.2,",DA=IBTDA
"RTN","IBCESRV2",91,0)
 . I $G(^IBA(364.2,DA,0)) D ^DIE
"RTN","IBCESRV2",92,0)
 Q
"RTN","IBCESRV2",93,0)
 ;
"RTN","IBCESRV2",94,0)
STOREM(IBTDA,IBTEXT,IBE) ;Store message text in file 364.2
"RTN","IBCESRV2",95,0)
 ; INPUT:
"RTN","IBCESRV2",96,0)
 ;   IBTDA = ien in file 364 message field entry #IBTDA
"RTN","IBCESRV2",97,0)
 ;   IBTEXT = name of the array where the message text is retrieved from
"RTN","IBCESRV2",98,0)
 ;            or "@" to delete the text from the message field
"RTN","IBCESRV2",99,0)
 ; OUTPUT:
"RTN","IBCESRV2",100,0)
 ;   IBE = array of errors (IBE("DIERR")) returned, pass by reference
"RTN","IBCESRV2",101,0)
 ;
"RTN","IBCESRV2",102,0)
 N IBZ,X,Y
"RTN","IBCESRV2",103,0)
 ;
"RTN","IBCESRV2",104,0)
 Q:$S($G(IBTEXT)="@":0,1:$D(@IBTEXT)<10)
"RTN","IBCESRV2",105,0)
 ;
"RTN","IBCESRV2",106,0)
 K IBE("DIERR")
"RTN","IBCESRV2",107,0)
 ;
"RTN","IBCESRV2",108,0)
 F IBZ=1:1:20 D WP^DIE(364.2,IBTDA_",",2,"AK",""_IBTEXT_"","IBE") Q:$S('$D(IBE("DIERR")):1,+IBE("DIERR")=1:$G(IBE("DIERR",1))'=110,1:1)  K IBE("DIERR") H .5 ; On lock error, retry up to 20 times
"RTN","IBCESRV2",109,0)
 Q
"RTN","IBCESRV2",110,0)
 ;
"RTN","IBCESRV2",111,0)
CKRES(IBBDA,IBDEF,IBLIST) ;Chk to see if the batch file can be updated to
"RTN","IBCESRV2",112,0)
 ; completely resubmitted based on finding all bills in it
"RTN","IBCESRV2",113,0)
 ; having a status of cancelled, resubmitted, deleted or closed
"RTN","IBCESRV2",114,0)
 ; or if none of these statuses, they at least have a transmission
"RTN","IBCESRV2",115,0)
 ; record for the same bill created at a later date/time.
"RTN","IBCESRV2",116,0)
 ;
"RTN","IBCESRV2",117,0)
 ; IBBDA : Batch # ien in file 364.1
"RTN","IBCESRV2",118,0)
 ; IBDEF : Default to set the batch status to.
"RTN","IBCESRV2",119,0)
 ;         0 or undefined, status will set to 0 (NOT INCOMPLETE)
"RTN","IBCESRV2",120,0)
 ;                         if no incomplete submissions found
"RTN","IBCESRV2",121,0)
 ;         1 status will set to 1 (INCOMPLETE)
"RTN","IBCESRV2",122,0)
 ;                  if any incomplete submissions found
"RTN","IBCESRV2",123,0)
 ;        -1 status will not be updated
"RTN","IBCESRV2",124,0)
 ; IBLIST : If passed by reference and IBLIST=1, returns list of bill
"RTN","IBCESRV2",125,0)
 ;          #'s not resubmitted in IBLIST(ien of file 364)=""
"RTN","IBCESRV2",126,0)
 ;
"RTN","IBCESRV2",127,0)
 N IB,IBINC,IBBILL,DIE,DR,DA,Z,Z0
"RTN","IBCESRV2",128,0)
 ;
"RTN","IBCESRV2",129,0)
 S IBDEF=+$G(IBDEF),IBINC=0
"RTN","IBCESRV2",130,0)
 Q:$S('$G(IBBDA):1,IBDEF'<0:'$P($G(^IBA(364.1,IBBDA,0)),U,10),1:0)
"RTN","IBCESRV2",131,0)
 ;
"RTN","IBCESRV2",132,0)
 I $G(IBLIST) K IBLIST S IBLIST=1
"RTN","IBCESRV2",133,0)
 S IB="" F  S IB=$O(^IBA(364,"ABAST",IBBDA,IB)) Q:IB=""  I "CRDZ"'[IB D  Q:'$G(IBLIST)
"RTN","IBCESRV2",134,0)
 . S Z=0 F  S Z=$O(^IBA(364,"ABAST",IBBDA,IB,Z)) Q:'Z  D
"RTN","IBCESRV2",135,0)
 .. S Z0=($$LAST364^IBCEF4(+$G(^IBA(364,Z,0)))=Z)
"RTN","IBCESRV2",136,0)
 .. I Z0,'$G(IBLIST) S IBINC=1 Q
"RTN","IBCESRV2",137,0)
 .. I $G(IBLIST),Z0 S IBLIST(Z)=""
"RTN","IBCESRV2",138,0)
 ;
"RTN","IBCESRV2",139,0)
 I $S('IBDEF:'IBINC,IBDEF>0:IBINC,1:0) S DA=IBBDA,DIE="^IBA(364.1,",DR=".1////"_IBDEF D ^DIE
"RTN","IBCESRV2",140,0)
 ;
"RTN","IBCESRV2",141,0)
 Q
"RTN","IBCESRV2",142,0)
 ;
"RTN","IBCESRV2",143,0)
UPDCONF(IBBDA,IBTDA,IBTYP,IBAUTO) ; Add status msgs to STATUS file #361
"RTN","IBCESRV2",144,0)
 ;   Update data base from confirmation msg
"RTN","IBCESRV2",145,0)
 ; IBBDA = ien of batch
"RTN","IBCESRV2",146,0)
 ; IBTDA = ien of message
"RTN","IBCESRV2",147,0)
 ; IBTYP = type of message
"RTN","IBCESRV2",148,0)
 ;         (0=Austin confirmation, 1=confirmation by non-payer
"RTN","IBCESRV2",149,0)
 ;          2=confirmation by payer)
"RTN","IBCESRV2",150,0)
 ; IBAUTO = flag for update mode
"RTN","IBCESRV2",151,0)
 ;         0 or null : manual   1 : auto
"RTN","IBCESRV2",152,0)
 ; ^TMP("IBCONF",$J,bill ien)="" where bill ien is the internal entry
"RTN","IBCESRV2",153,0)
 ;         number of any bills in file 364 to be excluded from the
"RTN","IBCESRV2",154,0)
 ;         confirmation due to reported errors
"RTN","IBCESRV2",155,0)
 ;
"RTN","IBCESRV2",156,0)
 N IBBILL,IBIDA,PRCASV,DA,DIE,DR,IBFLAG,IB0,IBS
"RTN","IBCESRV2",157,0)
 ;
"RTN","IBCESRV2",158,0)
 D UPDMSG(IBTDA,"U",0)
"RTN","IBCESRV2",159,0)
 ;
"RTN","IBCESRV2",160,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCESRV2",161,0)
 S IBS="A"_IBTYP
"RTN","IBCESRV2",162,0)
 ;
"RTN","IBCESRV2",163,0)
 S IBBILL="" F  S IBBILL=$O(^IBA(364,"ABABI",+IBBDA,IBBILL)) Q:'IBBILL  D
"RTN","IBCESRV2",164,0)
 . Q:$D(^TMP("IBCONF",$J,IBBILL))  ;Bill was rejected
"RTN","IBCESRV2",165,0)
 . ;Update status of all valid bills in a batch
"RTN","IBCESRV2",166,0)
 . S IBIDA=0 F  S IBIDA=$O(^IBA(364,"ABABI",IBBDA,IBBILL,IBIDA)) Q:'IBIDA  D
"RTN","IBCESRV2",167,0)
 .. D BILLSTAC(IBIDA,IBS)
"RTN","IBCESRV2",168,0)
 . ;
"RTN","IBCESRV2",169,0)
 . I 'IBTYP D
"RTN","IBCESRV2",170,0)
 .. S DR="20///N0W"
"RTN","IBCESRV2",171,0)
 .. S:$P($G(^DGCR(399,IBBILL,"TX")),U,5)="1N" DR=DR_";24///1R"
"RTN","IBCESRV2",172,0)
 .. S DA=IBBILL,DIE="^DGCR(399," D ^DIE
"RTN","IBCESRV2",173,0)
 ;
"RTN","IBCESRV2",174,0)
 I 'IBTYP D DELMSG(IBTDA)
"RTN","IBCESRV2",175,0)
 ;
"RTN","IBCESRV2",176,0)
 I 'IBBDA,$P(IB0,U,5) D
"RTN","IBCESRV2",177,0)
 . N IB
"RTN","IBCESRV2",178,0)
 . S IB=$P($G(^IBA(364,+$P(IB0,U,5),0)),U,2) ; batch
"RTN","IBCESRV2",179,0)
 . D BILLSTAC($P(IB0,U,5),IBS) ;Upd individual transmitted bill entry
"RTN","IBCESRV2",180,0)
 . I $G(^IBA(364.1,+IB,0)),$P($G(^(0)),U,2)'="A0" S DIE="^IBA(364.1,",DA=+IB,DR=".02////A0" D ^DIE
"RTN","IBCESRV2",181,0)
 ;
"RTN","IBCESRV2",182,0)
 I IBBDA,$P($G(^IBA(364.1,+IBBDA,0)),U,2)'=IBS D
"RTN","IBCESRV2",183,0)
 . S DA=IBBDA,DIE="^IBA(364.1,"
"RTN","IBCESRV2",184,0)
 . S DR=".02////"_IBS_$S($G(IBFLAG)'="":";.06////"_IBFLAG,1:"")_";1.05////"_$P(IB0,U,10)_";1.06///NOW"
"RTN","IBCESRV2",185,0)
 . D ^DIE
"RTN","IBCESRV2",186,0)
 ;
"RTN","IBCESRV2",187,0)
 ; Add message to bill status file 361 for bill
"RTN","IBCESRV2",188,0)
 I IBTYP D UPD361^IBCEST(IBTDA)
"RTN","IBCESRV2",189,0)
 ;
"RTN","IBCESRV2",190,0)
 S ZTREQ="@"
"RTN","IBCESRV2",191,0)
 K ^TMP("IBCONF",$J)
"RTN","IBCESRV2",192,0)
 Q
"RTN","IBCESRV2",193,0)
 ;
"RTN","IBCESRV2",194,0)
UPDREJ(IBBDA,IBTDA) ;  Update data base from rejection msg
"RTN","IBCESRV2",195,0)
 ; IBBDA = ien of batch
"RTN","IBCESRV2",196,0)
 ; IBTDA = ien of message
"RTN","IBCESRV2",197,0)
 ;
"RTN","IBCESRV2",198,0)
 N DA,DR,DIE,IBBILL,IBTBILL,IB0
"RTN","IBCESRV2",199,0)
 ;
"RTN","IBCESRV2",200,0)
 D UPDMSG(IBTDA,"U",0)
"RTN","IBCESRV2",201,0)
 ;
"RTN","IBCESRV2",202,0)
 S IB0=$G(^IBA(364.2,IBTDA,0)),IBTBILL=+$P(IB0,U,5),IBBILL=+$G(^IBA(364,IBTBILL,0))
"RTN","IBCESRV2",203,0)
 I IBBILL D BILLSTAR(IBBILL,IBTDA) ;Update individual bill
"RTN","IBCESRV2",204,0)
 ;
"RTN","IBCESRV2",205,0)
 I IBBDA,'IBBILL D
"RTN","IBCESRV2",206,0)
 . S DA=IBBDA,DIE="^IBA(364.1,"
"RTN","IBCESRV2",207,0)
 . S DR=".11////"_IBTDA_";.06////1;1.05////"_$P(IB0,U,10)_";1.06///NOW;.05////1"
"RTN","IBCESRV2",208,0)
 . D ^DIE ;Batch Rejected
"RTN","IBCESRV2",209,0)
 .;
"RTN","IBCESRV2",210,0)
 . ;Update status of all bills in batch, bill file
"RTN","IBCESRV2",211,0)
 . F  S IBBILL=$O(^IBA(364,"ABABI",IBBDA,IBBILL)) Q:'IBBILL  D BILLSTAR(IBBILL,IBTDA)
"RTN","IBCESRV2",212,0)
 ;
"RTN","IBCESRV2",213,0)
 ;Add message to bill status file 361 for bill
"RTN","IBCESRV2",214,0)
 D UPD361^IBCEST(IBTDA)
"RTN","IBCESRV2",215,0)
 ;
"RTN","IBCESRV2",216,0)
 S ZTREQ="@"
"RTN","IBCESRV2",217,0)
 Q
"RTN","IBCESRV2",218,0)
 ;
"RTN","IBCESRV2",219,0)
MAILIT ; Mails the report text (bulletin) to the IB EDI SUPERVISOR mail grp;
"RTN","IBCESRV2",220,0)
 N IB0,IBHD,IBL,IBZ,IBOK,XMTO,XMSUBJ,XMBODY,XMDUZ,XMZ,Z
"RTN","IBCESRV2",221,0)
 K ^TMP("IBMSG",$J),^TMP("IBMSGH",$J)
"RTN","IBCESRV2",222,0)
 Q:'$G(IBTDA)  ;Assume this exists and is the IEN of the message in 364.2
"RTN","IBCESRV2",223,0)
 S (IBL,IBZ,IBHD)=0,IBOK=1
"RTN","IBCESRV2",224,0)
 F  S IBZ=$O(^IBA(364.2,IBTDA,2,IBZ)) Q:'IBZ  S IB0=$G(^(IBZ,0)) D
"RTN","IBCESRV2",225,0)
 . Q:$P(IB0,U)="REPORT"!($E(IB0,1,4)="99^$")
"RTN","IBCESRV2",226,0)
 . ;
"RTN","IBCESRV2",227,0)
 . I $P(IB0,U)="SUBJECT" D  Q
"RTN","IBCESRV2",228,0)
 .. I $O(^TMP("IBMSG",$J,0)) D SEND(.IBOK) ; send last report
"RTN","IBCESRV2",229,0)
 .. S ^TMP("IBMSGH",$J)=$P(IB0,"SUBJECT^",2)
"RTN","IBCESRV2",230,0)
 . ;
"RTN","IBCESRV2",231,0)
 . I $E(IB0,1,18)="***  NEW PAGE  ***" D  Q
"RTN","IBCESRV2",232,0)
 .. F Z=1:1:5 S IBL=IBL+1,^TMP("IBMSG",$J,IBL)=" "
"RTN","IBCESRV2",233,0)
 .. S ^TMP("IBMSG",$J,IBL)="*** END OF PAGE ***"
"RTN","IBCESRV2",234,0)
 .. F Z=1,2 S IBL=IBL+1,^TMP("IBMSG",$J,IBL)=" "
"RTN","IBCESRV2",235,0)
 . S IBL=IBL+1,^TMP("IBMSG",$J,IBL)=IB0
"RTN","IBCESRV2",236,0)
 . ;
"RTN","IBCESRV2",237,0)
 I $O(^TMP("IBMSG",$J,0)) D SEND(.IBOK)
"RTN","IBCESRV2",238,0)
 I IBOK D DELMSG($G(IBTDA))
"RTN","IBCESRV2",239,0)
 K ^TMP("IBMSG",$J),^TMP($J,"IBMSGH",$J)
"RTN","IBCESRV2",240,0)
 Q
"RTN","IBCESRV2",241,0)
 ;
"RTN","IBCESRV2",242,0)
SEND(IBOK) ; Send actual message for 1 report
"RTN","IBCESRV2",243,0)
 ;
"RTN","IBCESRV2",244,0)
 N XMSUBJ,XMBODY,XMTO,XMZ,XMDUZ
"RTN","IBCESRV2",245,0)
 S XMSUBJ=$G(^TMP("IBMSGH",$J)),XMBODY="^TMP(""IBMSG"",$J)",XMTO("I:G.IB EDI SUPERVISOR")=""
"RTN","IBCESRV2",246,0)
 D SENDMSG^XMXAPI(,$E(XMSUBJ,1,65),XMBODY,.XMTO,,.XMZ)
"RTN","IBCESRV2",247,0)
 I '$G(XMZ) S IBOK=0
"RTN","IBCESRV2",248,0)
 K ^TMP("IBMSG",$J),^TMP("IBMSGH",$J)
"RTN","IBCESRV2",249,0)
 Q
"RTN","IBCESRV2",250,0)
 ;
"RTN","IBCESRV3")
0^25^B11136630
"RTN","IBCESRV3",1,0)
IBCESRV3 ;ALB/TMP - Server based Auto-update utilities - IB EDI ;03/05/96
"RTN","IBCESRV3",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-94
"RTN","IBCESRV3",3,0)
 ; IA 4129 for call to DUZ^XUP
"RTN","IBCESRV3",4,0)
 Q
"RTN","IBCESRV3",5,0)
 ;
"RTN","IBCESRV3",6,0)
EOB835 ; Explanation of Benefits - auto update
"RTN","IBCESRV3",7,0)
 ; Input expected: IBTDA = the ien of the message entry in file 364.2
"RTN","IBCESRV3",8,0)
 ;
"RTN","IBCESRV3",9,0)
 ; This is the background task that is queued to run by TaskManager.
"RTN","IBCESRV3",10,0)
 ; The call which queues this task is found in TRTN^IBCESRV1 which is
"RTN","IBCESRV3",11,0)
 ; called by ADD^IBCESRV.
"RTN","IBCESRV3",12,0)
 ;
"RTN","IBCESRV3",13,0)
 N IB0,IBBDA,IBBILL,IBMSG,IBFLAG,IBTYP,IBBST,DR,DA,DIE,Z,MRAUSER
"RTN","IBCESRV3",14,0)
 ;
"RTN","IBCESRV3",15,0)
 Q:'$G(IBTDA)
"RTN","IBCESRV3",16,0)
 S IB0=$G(^IBA(364.2,IBTDA,0)),IBBDA=+$P(IB0,U,4)  ; Batch ien
"RTN","IBCESRV3",17,0)
 S IBTYP=$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U)      ; IB message type
"RTN","IBCESRV3",18,0)
 Q:IBTYP'="835EOB"
"RTN","IBCESRV3",19,0)
 ;
"RTN","IBCESRV3",20,0)
 ; The MRA Project is using a specific non-human user for all
"RTN","IBCESRV3",21,0)
 ; 835 EOB/MRA filing processes.  Change the DUZ to be this user.
"RTN","IBCESRV3",22,0)
 ; *** VA SACC approved this exemption 5-June-2003 ***
"RTN","IBCESRV3",23,0)
 ; *** Integration Agreement 4129 - Activated on 30-June-2003 ***
"RTN","IBCESRV3",24,0)
 ;
"RTN","IBCESRV3",25,0)
 S MRAUSER=$$MRAUSR^IBCEMU1()
"RTN","IBCESRV3",26,0)
 I MRAUSER>0,$$ISITMRA(IBTDA) NEW DUZ D DUZ^XUP(MRAUSER)
"RTN","IBCESRV3",27,0)
 ;
"RTN","IBCESRV3",28,0)
 D UPDEOB(IBTDA)
"RTN","IBCESRV3",29,0)
 ;
"RTN","IBCESRV3",30,0)
 Q
"RTN","IBCESRV3",31,0)
 ;
"RTN","IBCESRV3",32,0)
UPDEOB(IBTDA) ; Explanation of Benefits or MRA
"RTN","IBCESRV3",33,0)
 ;   Update data base from msg (store EOB in file 361.1)
"RTN","IBCESRV3",34,0)
 ; IBTDA = ien of message in file 364.2
"RTN","IBCESRV3",35,0)
 ;
"RTN","IBCESRV3",36,0)
 N IBBILL,PRCASV,DA,DIE,DR,DA,X,Y,IBFLAG,IB0,IBS
"RTN","IBCESRV3",37,0)
 N IBEOB,IBAUTO,IBIFN,IBERRMSG
"RTN","IBCESRV3",38,0)
 ;
"RTN","IBCESRV3",39,0)
 D UPDMSG^IBCESRV2(IBTDA,"U",0)    ; updating data in 364.2
"RTN","IBCESRV3",40,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCESRV3",41,0)
 ;
"RTN","IBCESRV3",42,0)
 I '$P(IB0,U,5) G UPDEOBX          ; no transmit bill# in file 364
"RTN","IBCESRV3",43,0)
 S IBEOB=$$UPDEOB^IBCEOB(IBTDA)    ; new entry in file 361.1
"RTN","IBCESRV3",44,0)
 I 'IBEOB G UPDEOBX                ;   exit if some failure
"RTN","IBCESRV3",45,0)
 ;
"RTN","IBCESRV3",46,0)
 ; update transmission status of transmission Bill# in file 364
"RTN","IBCESRV3",47,0)
 ;   status is closed (code "Z")
"RTN","IBCESRV3",48,0)
 D BILLSTAC^IBCESRV2($P(IB0,U,5),"Z") ;Upd indiv transmitted bill
"RTN","IBCESRV3",49,0)
 ;
"RTN","IBCESRV3",50,0)
 ; Delete the entry from file 364.2
"RTN","IBCESRV3",51,0)
 D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCESRV3",52,0)
 ;
"RTN","IBCESRV3",53,0)
 ; If the EOB is not a Medicare MRA, then we can stop here
"RTN","IBCESRV3",54,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)'=1 G UPDEOBX
"RTN","IBCESRV3",55,0)
 ; 
"RTN","IBCESRV3",56,0)
 ; *** Medicare MRA processing ***
"RTN","IBCESRV3",57,0)
 ;
"RTN","IBCESRV3",58,0)
 ; update the claim MRA status of the file 399 bill
"RTN","IBCESRV3",59,0)
 ; to be "C" - Valid MRA received
"RTN","IBCESRV3",60,0)
 D MRASTAT(IBEOB,"C")
"RTN","IBCESRV3",61,0)
 ;
"RTN","IBCESRV3",62,0)
 ; Invoke the EOB criteria check and attempt to create and authorize
"RTN","IBCESRV3",63,0)
 ; the secondary bill
"RTN","IBCESRV3",64,0)
 S IBAUTO=$$CRIT^IBCEMQC(IBEOB)
"RTN","IBCESRV3",65,0)
 I 'IBAUTO D AUTOMSG(IBEOB,$P(IBAUTO,U,2)) G UPDEOBX
"RTN","IBCESRV3",66,0)
 S IBIFN=$P($G(^IBA(364,+$P(IB0,U,5),0)),U,1)   ; bill# from file 364
"RTN","IBCESRV3",67,0)
 ;
"RTN","IBCESRV3",68,0)
 ; Process COB, create secondary bill
"RTN","IBCESRV3",69,0)
 S IBERRMSG=""
"RTN","IBCESRV3",70,0)
 D AUTOCOB^IBCEMQA(IBIFN,IBEOB,.IBERRMSG)
"RTN","IBCESRV3",71,0)
 I IBERRMSG'="" D AUTOMSG(IBEOB,IBERRMSG) G UPDEOBX
"RTN","IBCESRV3",72,0)
 ;
"RTN","IBCESRV3",73,0)
 ; Authorize the secondary bill
"RTN","IBCESRV3",74,0)
 D AUTH^IBCEMQA(IBIFN,.IBERRMSG)
"RTN","IBCESRV3",75,0)
 I IBERRMSG'="" D AUTOMSG(IBEOB,IBERRMSG) G UPDEOBX
"RTN","IBCESRV3",76,0)
 ;
"RTN","IBCESRV3",77,0)
UPDEOBX ;
"RTN","IBCESRV3",78,0)
 S ZTREQ="@"
"RTN","IBCESRV3",79,0)
 Q
"RTN","IBCESRV3",80,0)
 ;
"RTN","IBCESRV3",81,0)
AUTOMSG(IBEOB,MSG) ; File the automatic bill generation failure message
"RTN","IBCESRV3",82,0)
 NEW DIE,DA,DR,D,D0,DI,DIC,DQ,X,Y
"RTN","IBCESRV3",83,0)
 S IBEOB=+$G(IBEOB),MSG=$G(MSG)
"RTN","IBCESRV3",84,0)
 I '$D(^IBM(361.1,IBEOB)) G AUMSGX
"RTN","IBCESRV3",85,0)
 I MSG="" G AUMSGX
"RTN","IBCESRV3",86,0)
 S DIE=361.1,DA=IBEOB,DR="30.01////"_MSG_";30.02////"_$$NOW^XLFDT
"RTN","IBCESRV3",87,0)
 D ^DIE
"RTN","IBCESRV3",88,0)
AUMSGX ;
"RTN","IBCESRV3",89,0)
 Q
"RTN","IBCESRV3",90,0)
 ;
"RTN","IBCESRV3",91,0)
MRASTAT(IBEOB,STAT) ; Update the claim MRA status field on the bill
"RTN","IBCESRV3",92,0)
 ; File 399, Field 24 - CLAIM MRA STATUS
"RTN","IBCESRV3",93,0)
 NEW DIE,DA,DR,D,D0,DI,DIC,DIG,DIH,DIU,DIV,DQ,X,Y,IBIFN
"RTN","IBCESRV3",94,0)
 S IBEOB=+$G(IBEOB),STAT=$G(STAT)
"RTN","IBCESRV3",95,0)
 I '$D(^IBM(361.1,IBEOB)) G MRASTX
"RTN","IBCESRV3",96,0)
 I STAT="" G MRASTX
"RTN","IBCESRV3",97,0)
 S IBIFN=+$P($G(^IBM(361.1,IBEOB,0)),U,1)
"RTN","IBCESRV3",98,0)
 I '$D(^DGCR(399,IBIFN,"TX")) G MRASTX
"RTN","IBCESRV3",99,0)
 ;
"RTN","IBCESRV3",100,0)
 S DIE=399,DA=IBIFN,DR="24////"_STAT
"RTN","IBCESRV3",101,0)
 D ^DIE
"RTN","IBCESRV3",102,0)
MRASTX ;
"RTN","IBCESRV3",103,0)
 Q
"RTN","IBCESRV3",104,0)
 ;
"RTN","IBCESRV3",105,0)
ISITMRA(IBTDA) ; Function to return whether or not this transmission
"RTN","IBCESRV3",106,0)
 ; is a Medicare MRA or a normal EOB
"RTN","IBCESRV3",107,0)
 NEW IEN,MRA,STOP,DATA
"RTN","IBCESRV3",108,0)
 S (IEN,MRA,STOP)=0
"RTN","IBCESRV3",109,0)
 F  S IEN=$O(^IBA(364.2,IBTDA,2,IEN)) Q:'IEN  D  Q:STOP
"RTN","IBCESRV3",110,0)
 . S DATA=$$EXT^IBCEMU1($G(^IBA(364.2,IBTDA,2,IEN,0))) Q:DATA=""
"RTN","IBCESRV3",111,0)
 . I $P(DATA,U,1)'="835EOB" Q
"RTN","IBCESRV3",112,0)
 . I $P(DATA,U,5)="Y" S MRA=1
"RTN","IBCESRV3",113,0)
 . S STOP=1
"RTN","IBCESRV3",114,0)
 . Q
"RTN","IBCESRV3",115,0)
ISMRAX ;
"RTN","IBCESRV3",116,0)
 Q MRA
"RTN","IBCESRV3",117,0)
 ;
"RTN","IBCEU0")
0^41^B60871715
"RTN","IBCEU0",1,0)
IBCEU0 ;ALB/TMP - EDI UTILITIES ;02-OCT-96
"RTN","IBCEU0",2,0)
 ;;2.0;INTEGRATED BILLING;**137,197,155**;21-MAR-94
"RTN","IBCEU0",3,0)
 ;
"RTN","IBCEU0",4,0)
NOTECHG(IBDA,IBNTEXT) ; Enter who/when review stat change was entered
"RTN","IBCEU0",5,0)
 ; IBDA = ien of entry in file 361.1
"RTN","IBCEU0",6,0)
 ; IBNTEXT = array containing the lines of text to store if not using the
"RTN","IBCEU0",7,0)
 ;           default text  IBNTEXT = # of lines  IBNTEXT(#)=line text
"RTN","IBCEU0",8,0)
 N IBIEN,IBTEXT,DA,X,Y,DIC,DO,DLAYGO,DD
"RTN","IBCEU0",9,0)
 S DA(1)=IBDA,DIC="^IBM(361.1,"_DA(1)_",2,",DIC(0)="L",DLAYGO=361.121
"RTN","IBCEU0",10,0)
 S X=$$NOW^XLFDT
"RTN","IBCEU0",11,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","IBCEU0",12,0)
 Q:Y'>0
"RTN","IBCEU0",13,0)
 S DA(2)=DA(1),DA(1)=+Y,IBIEN=DA(1)_","_DA(2)_","
"RTN","IBCEU0",14,0)
 I $G(IBNTEXT) D
"RTN","IBCEU0",15,0)
 . M IBTEXT=IBNTEXT
"RTN","IBCEU0",16,0)
 E  D
"RTN","IBCEU0",17,0)
 . S IBTEXT(1)="REVIEW STATUS CHANGED TO '"_$$EXTERNAL^DILFD(361.1,.2,,$P(^IBM(361.1,DA(2),0),U,20))_"'  BY: "_$$EXTERNAL^DILFD(361.121,.02,,+$G(DUZ))
"RTN","IBCEU0",18,0)
 D WP^DIE(361.121,IBIEN,.03,,"IBTEXT") K ^TMP("DIERR",$J)
"RTN","IBCEU0",19,0)
 Q
"RTN","IBCEU0",20,0)
 ;
"RTN","IBCEU0",21,0)
LOCK(IBFILE,IBREC) ; Lock record # IBREC in file #IBFILE (361 or 361.1)
"RTN","IBCEU0",22,0)
 N OK
"RTN","IBCEU0",23,0)
 S OK=0
"RTN","IBCEU0",24,0)
 L +^IBM(IBFILE,IBREC):3 I $T S OK=1
"RTN","IBCEU0",25,0)
 I 'OK D
"RTN","IBCEU0",26,0)
 . W !,"Another user has locked this record - try again later"
"RTN","IBCEU0",27,0)
 . D PAUSE^VALM1
"RTN","IBCEU0",28,0)
 Q OK
"RTN","IBCEU0",29,0)
 ;
"RTN","IBCEU0",30,0)
UNLOCK(IBFILE,IBREC) ; Unlock record # IBREC in file #IBFILE
"RTN","IBCEU0",31,0)
 I $G(IBREC) L -^IBM(IBFILE,IBREC)
"RTN","IBCEU0",32,0)
 Q
"RTN","IBCEU0",33,0)
 ;
"RTN","IBCEU0",34,0)
MSTAT ; Enter reviewed by selected range
"RTN","IBCEU0",35,0)
 N IBDAX,IBA,IBCLOSE,IBLOOK,IBOK,IBSTOP,IBREBLD,IBCLOK,DA,DIR,X,Y,DIE,DR
"RTN","IBCEU0",36,0)
 D FULL^VALM1
"RTN","IBCEU0",37,0)
 D SEL^IBCECSA4(.IBDAX)
"RTN","IBCEU0",38,0)
 S IBREBLD=0
"RTN","IBCEU0",39,0)
 I $O(IBDAX(""))="" G MSTATQ
"RTN","IBCEU0",40,0)
 S DIR("?,1")="ONLY SELECT TO CLOSE THE TRANSMIT RECORDS IF YOU KNOW THESE ARE THE FINAL",DIR("?",2)="  ELECTRONIC MESSAGES YOU WILL RECEIVE FOR ALL THE BILLS REFERENCED BY",DIR("?")="  THESE MESSAGES"
"RTN","IBCEU0",41,0)
 S DIR(0)="YA",DIR("A",1)="DO YOU WANT TO AUTOMATICALLY CLOSE THE TRANSMIT RECORDS FOR ANY MESSAGES",DIR("A")=" THAT AREN'T REJECTS?: ",DIR("B")="NO" W ! D ^DIR K DIR W !
"RTN","IBCEU0",42,0)
 G:$D(DIRUT) MSTATQ
"RTN","IBCEU0",43,0)
 S IBCLOSE=(Y=1)
"RTN","IBCEU0",44,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO SEE EACH MESSAGE BEFORE MARKING IT REVIEWED?: ",DIR("B")="NO"
"RTN","IBCEU0",45,0)
 S DIR("?",1)="IF YOU OPT TO SEE EACH MESSAGE, YOU CAN CONTROL WHETHER OR NOT THE MESSAGE",DIR("?",2)="  IS MARKED AS REVIEWED"
"RTN","IBCEU0",46,0)
 I 'IBCLOSE S DIR("?")=DIR("?",2) K DIR("?",2)
"RTN","IBCEU0",47,0)
 I IBCLOSE S DIR("?",2)=DIR("?",2)_" AND, FOR NON-REJECTS, WHETHER OR NOT TO CLOSE THE",DIR("?")="  TRANSMIT RECORD FOR THE BILL"
"RTN","IBCEU0",48,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEU0",49,0)
 G:$D(DIRUT) MSTATQ
"RTN","IBCEU0",50,0)
 S IBLOOK=(Y=1)
"RTN","IBCEU0",51,0)
 S IBDAX=0,IBSTOP=0
"RTN","IBCEU0",52,0)
 F  S IBDAX=+$O(IBDAX(IBDAX)) Q:'IBDAX  D  Q:IBSTOP
"RTN","IBCEU0",53,0)
 . S IBA=$G(IBDAX(IBDAX))
"RTN","IBCEU0",54,0)
 . S DIE="^IBM(361,",DA=$P(IBA,U,2),DR=""
"RTN","IBCEU0",55,0)
 . I DA D
"RTN","IBCEU0",56,0)
 .. S IBOK=1
"RTN","IBCEU0",57,0)
 .. S IBCLOK=$S(IBCLOSE:1,1:0)
"RTN","IBCEU0",58,0)
 .. I IBLOOK D  Q:'IBOK
"RTN","IBCEU0",59,0)
 ... S DIC="^IBM(361," D EN^DIQ
"RTN","IBCEU0",60,0)
 ... I '$$LOCK(361,DA) W ! S IBOK=0 Q
"RTN","IBCEU0",61,0)
 ... S DIR(0)="YA",DIR("A")="OK TO MARK REVIEWED?: ",DIR("B")="YES",DIR("?",1)="IF YOU ENTER YES, THIS MESSAGE WILL BE MARKED REVIEWED"
"RTN","IBCEU0",62,0)
 ... S DIR("?",2)="IF YOU ENTER NO, THIS MESSAGE WILL NOT BE ALTERED",DIR("?",3)="IF YOU ENTER AN ^, THIS MESSAGE WILL NOT BE ALTERED & NONE OF THE",DIR("?")="   REMAINING MESSAGES WILL BE PROCESSED" D ^DIR K DIR
"RTN","IBCEU0",63,0)
 ... I Y'>0 S IBOK=0 S:$D(DIRUT) IBSTOP=1 Q
"RTN","IBCEU0",64,0)
 ... I 'IBCLOSE D
"RTN","IBCEU0",65,0)
 .... S DIR(0)="YA",DIR("A")="OK TO CLOSE THIS BILL'S TRANSMIT RECORD?: ",DIR("B")="NO"
"RTN","IBCEU0",66,0)
 .... S DIR("?",1)="If you respond YES to this prompt, the transmit status of this bill will",DIR("?",2)="  be set to CLOSED.  No further electronic processing of this bill will be"
"RTN","IBCEU0",67,0)
 .... S DIR("?",3)="  allowed.  If you respond NO to this prompt, this electronic message will",DIR("?",4)="  be filed as reviewed, but the bill's transmit status will not be changed."
"RTN","IBCEU0",68,0)
 .... S DIR("?",5)="  You may wish to periodically print a list of bills with a non-final",DIR("?",6)="  (closed/cancelled/etc) status to ensure the electronic processing of all"
"RTN","IBCEU0",69,0)
 .... S DIR("?",7)="  bills has been completed.  Closing the transmit bill record here will",DIR("?")="  eliminate the bill from this list."
"RTN","IBCEU0",70,0)
 .... W ! D ^DIR K DIR W !
"RTN","IBCEU0",71,0)
 .... I Y'=1 S IBCLOK=0
"RTN","IBCEU0",72,0)
 .. I 'IBLOOK,$P($G(^IBM(361,DA,0)),U,3)="R" D  Q:'IBOK
"RTN","IBCEU0",73,0)
 ... S DR="1",DIC="^IBM(361," D EN^DIQ W !,"Bill Number: ",$$EXPAND^IBTRE(361,.01,+^IBM(361,DA,0))
"RTN","IBCEU0",74,0)
 ... S DIR(0)="YA",DIR("A")="THIS IS A REJECTION ... ARE YOU SURE YOU WANT TO MARK IT REVIEWED?: ",DIR("B")="NO"
"RTN","IBCEU0",75,0)
 ... S DIR("?",1)="IF YOU ENTER YES, THIS MESSAGE WILL BE MARKED REVIEWED"
"RTN","IBCEU0",76,0)
 ... S DIR("?",2)="IF YOU ENTER NO, THIS MESSAGE WILL NOT BE ALTERED",DIR("?",3)="IF YOU ENTER AN ^, THIS MESSAGE WILL NOT BE ALTERED & NONE OF THE",DIR("?")="   MESSAGES FOLLOWING THIS ONE WILL BE PROCESSED" D ^DIR K DIR
"RTN","IBCEU0",77,0)
 ... I Y'=1 S IBOK=0 S:$D(DIRUT) IBSTOP=1
"RTN","IBCEU0",78,0)
 .. S:'IBREBLD IBREBLD=1
"RTN","IBCEU0",79,0)
 .. S DR=".09////2;.1////F" D ^DIE
"RTN","IBCEU0",80,0)
 .. N IBUPD
"RTN","IBCEU0",81,0)
 .. S IBUPD=0
"RTN","IBCEU0",82,0)
 .. I $$PRINTUPD($G(^IBM(361,DA,1,1,0)),+$P(^IBM(361,DA,0),U,11)) S IBUPD=1
"RTN","IBCEU0",83,0)
 .. I $G(^IBM(361,DA,1,1,0))["CLAIM SENT TO PAYER" D UPDTX^IBCECSA2(+$P(^IBM(361,DA,0),U,11),$S(IBCLOK:"Z",1:"A2")) S IBUPD=1
"RTN","IBCEU0",84,0)
 .. I $G(^IBM(361,DA,1,1,0))["CLAIM REJECTED" D UPDTX^IBCECSA2(+$P(^IBM(361,DA,0),U,11),"E") S IBUPD=1
"RTN","IBCEU0",85,0)
 .. I IBCLOK,'IBUPD D UPDTX^IBCECSA2(+$P(^IBM(361,DA,0),U,11),"Z")
"RTN","IBCEU0",86,0)
 .. I 'IBLOOK D
"RTN","IBCEU0",87,0)
 ... W !,"Seq #: ",IBDAX,"  Bill number: ",$$EXPAND^IBTRE(361,.01,+^IBM(361,DA,0)),?45,"REVIEWED"
"RTN","IBCEU0",88,0)
 .. D NOTECHG^IBCECSA2(DA,1)
"RTN","IBCEU0",89,0)
 .. D UNLOCK(361,DA)
"RTN","IBCEU0",90,0)
 W !!,"LAST SELECTION PROCESSED",!
"RTN","IBCEU0",91,0)
 D PAUSE^VALM1
"RTN","IBCEU0",92,0)
MSTATQ S VALMBCK="R"
"RTN","IBCEU0",93,0)
 I IBREBLD D BLD^IBCECSA1
"RTN","IBCEU0",94,0)
 Q
"RTN","IBCEU0",95,0)
 ;
"RTN","IBCEU0",96,0)
PRPAY(IBIFN,IBMCR) ; Returns total amount of prior payments applied to
"RTN","IBCEU0",97,0)
 ; bill ien IBIFN
"RTN","IBCEU0",98,0)
 ; IBMCR = flag passed in as 1 if MRA total should be included
"RTN","IBCEU0",99,0)
 ;
"RTN","IBCEU0",100,0)
 N IBTOT,IBZ,IBSEQ
"RTN","IBCEU0",101,0)
 S IBSEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEU0",102,0)
 I IBSEQ'>1 S IBTOT=0 G PRPAYQ
"RTN","IBCEU0",103,0)
 D F^IBCEF("N-PRIOR PAYMENTS","IBZ",,IBIFN)
"RTN","IBCEU0",104,0)
 S IBTOT=IBZ
"RTN","IBCEU0",105,0)
 I $G(IBMCR),$$MCRONBIL^IBEFUNC(IBIFN)=1 D  ; MCR on bill before curr ins
"RTN","IBCEU0",106,0)
 . N Z,Z0,Z2,Q
"RTN","IBCEU0",107,0)
 . F Z=1:1:IBSEQ-1 I $$WNRBILL^IBEFUNC(IBIFN,Z) D
"RTN","IBCEU0",108,0)
 .. S IBTOT=+$$MCRPAY(IBIFN)
"RTN","IBCEU0",109,0)
PRPAYQ Q IBTOT
"RTN","IBCEU0",110,0)
 ;
"RTN","IBCEU0",111,0)
PRINTUPD(IBTEXT,IBDA) ; If the status message indicates claim was printed
"RTN","IBCEU0",112,0)
 ;    or the claim record in file 399 says it was, update the transmit
"RTN","IBCEU0",113,0)
 ;    message status to closed
"RTN","IBCEU0",114,0)
 ; IBTEXT = the first line text of the status message (optional)
"RTN","IBCEU0",115,0)
 ; IBDA = the ien of the transmission record in file 364
"RTN","IBCEU0",116,0)
 ;
"RTN","IBCEU0",117,0)
 ; FUNCTION returns 1 if message status changed
"RTN","IBCEU0",118,0)
 ;
"RTN","IBCEU0",119,0)
 N IBP,IBP1
"RTN","IBCEU0",120,0)
 S IBP=0,IBP1=$P($G(^DGCR(399,+$G(^IBA(364,+$G(IBDA),0)),"TX")),U,7)
"RTN","IBCEU0",121,0)
 I $G(IBTEXT)["CLAIM RECEIVED, PRINTED AND MAILED BY PRINT CENTER"!IBP1 D
"RTN","IBCEU0",122,0)
 . N Z
"RTN","IBCEU0",123,0)
 . S Z=$E($P($G(^IBA(364,IBDA,0)),U,3),1)
"RTN","IBCEU0",124,0)
 . I "AP"'[Z Q  ; Only change if status is pending or received/accepted
"RTN","IBCEU0",125,0)
 . D UPDTX^IBCECSA2(IBDA,"Z") S IBP=1
"RTN","IBCEU0",126,0)
 Q IBP
"RTN","IBCEU0",127,0)
 ;
"RTN","IBCEU0",128,0)
MCRPAY(IBIFN) ; Calculate MRA total for the bill IBIFN
"RTN","IBCEU0",129,0)
 N IBPAY,Q,Z0
"RTN","IBCEU0",130,0)
 S IBPAY=0
"RTN","IBCEU0",131,0)
 S Q=0 F  S Q=$O(^IBM(361.1,"B",IBIFN,Q)) Q:'Q  S Z0=$G(^IBM(361.1,Q,0)) I $P(Z0,U,4)=1 S IBPAY=IBPAY+$G(^(1))
"RTN","IBCEU0",132,0)
 Q IBPAY
"RTN","IBCEU0",133,0)
 ;
"RTN","IBCEU0",134,0)
PREOBTOT(IBIFN) ; Function - Calculates Patient Responsibility Amount
"RTN","IBCEU0",135,0)
 ; Input:  IBIFN - ien of Bill Number (ien of file 399)
"RTN","IBCEU0",136,0)
 ; Output Function returns: Patient Responsibility Amount for all EOB's for bill
"RTN","IBCEU0",137,0)
 ;
"RTN","IBCEU0",138,0)
 N FRMTYP,IBPTRES
"RTN","IBCEU0",139,0)
 S IBPTRES=0
"RTN","IBCEU0",140,0)
 ; Form Type 2=HCFA 1500; 3=UB92
"RTN","IBCEU0",141,0)
 S FRMTYP=$$FT^IBCEF(IBIFN)
"RTN","IBCEU0",142,0)
 ;
"RTN","IBCEU0",143,0)
 ; For bills w/HCFA 1500 Form Type, total up Pt Resp amount from top
"RTN","IBCEU0",144,0)
 ; level of EOB (field 1.02) for All MRA type EOB's on file for that
"RTN","IBCEU0",145,0)
 ; bill (IBIFN)
"RTN","IBCEU0",146,0)
 ;  
"RTN","IBCEU0",147,0)
 I FRMTYP=2 D  Q IBPTRES
"RTN","IBCEU0",148,0)
 . N IBEOB,EOBREC,EOBREC1,IBPRTOT
"RTN","IBCEU0",149,0)
 . S (IBEOB,IBPRTOT,IBPTRES)=0
"RTN","IBCEU0",150,0)
 . F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  ;
"RTN","IBCEU0",151,0)
 . . S EOBREC=$G(^IBM(361.1,IBEOB,0)),EOBREC1=$G(^(1))
"RTN","IBCEU0",152,0)
 . . I $P(EOBREC,U,4)'=1 Q  ;make sure it's an MRA
"RTN","IBCEU0",153,0)
 . . ; Total up Pt Resp Amounts on all valid MRA's
"RTN","IBCEU0",154,0)
 . . S IBPTRES=IBPTRES+$P(EOBREC1,U,2)
"RTN","IBCEU0",155,0)
 ;
"RTN","IBCEU0",156,0)
 ; For bills w/UB92 Form Type, loop through all EOB's and sum up amounts
"RTN","IBCEU0",157,0)
 ; on both Line level and on Claim level
"RTN","IBCEU0",158,0)
 N EOBADJ,IBEOB,LNLVL
"RTN","IBCEU0",159,0)
 S IBEOB=0
"RTN","IBCEU0",160,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  ;
"RTN","IBCEU0",161,0)
 . I $P($G(^IBM(361.1,IBEOB,0)),U,4)'=1 Q    ; must be an MRA
"RTN","IBCEU0",162,0)
 . ;
"RTN","IBCEU0",163,0)
 . ; get claim level adjustments
"RTN","IBCEU0",164,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCEU0",165,0)
 . S IBPTRES=IBPTRES+$$CALCPR(.EOBADJ)
"RTN","IBCEU0",166,0)
 . ;
"RTN","IBCEU0",167,0)
 . ; get line level adjustments
"RTN","IBCEU0",168,0)
 . S LNLVL=0
"RTN","IBCEU0",169,0)
 . F  S LNLVL=$O(^IBM(361.1,IBEOB,15,LNLVL)) Q:'LNLVL  D  ;
"RTN","IBCEU0",170,0)
 . . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,15,LNLVL,1)
"RTN","IBCEU0",171,0)
 . . S IBPTRES=IBPTRES+$$CALCPR(.EOBADJ)
"RTN","IBCEU0",172,0)
 Q IBPTRES
"RTN","IBCEU0",173,0)
 ;
"RTN","IBCEU0",174,0)
CALCPR(EOBADJ) ; Function - Calculate Patient Responsibilty Amount
"RTN","IBCEU0",175,0)
 ; For Group Code PR; Ignore the PR-AAA kludge
"RTN","IBCEU0",176,0)
 ; Input - EOBADJ = Array of Group Codes & Reason Codes from either the Claim
"RTN","IBCEU0",177,0)
 ;                 Level (10) or Service Line Level (15) of EOB file (#361.1)
"RTN","IBCEU0",178,0)
 ; Output - Function returns Patient Responsibility Amount
"RTN","IBCEU0",179,0)
 ;
"RTN","IBCEU0",180,0)
 N GRPLVL,RSNCD,RSNAMT,PTRESP
"RTN","IBCEU0",181,0)
 S (GRPLVL,PTRESP)=0
"RTN","IBCEU0",182,0)
 F  S GRPLVL=$O(EOBADJ(GRPLVL)) Q:'GRPLVL  D
"RTN","IBCEU0",183,0)
 . I $P($G(EOBADJ(GRPLVL,0)),U)'="PR" Q  ;grp code must be PR
"RTN","IBCEU0",184,0)
 . S RSNCD=0
"RTN","IBCEU0",185,0)
 . F  S RSNCD=$O(EOBADJ(GRPLVL,1,RSNCD)) Q:'RSNCD  D
"RTN","IBCEU0",186,0)
 . . I $P($G(EOBADJ(GRPLVL,1,RSNCD,0)),U,1)="AAA" Q   ; ignore PR-AAA
"RTN","IBCEU0",187,0)
 . . S RSNAMT=$P($G(EOBADJ(GRPLVL,1,RSNCD,0)),U,2)
"RTN","IBCEU0",188,0)
 . . S PTRESP=PTRESP+RSNAMT
"RTN","IBCEU0",189,0)
 Q PTRESP
"RTN","IBCEU0",190,0)
 ;
"RTN","IBCEU0",191,0)
COBMOD(IBXSAVE,IBXDATA,SEQ) ; output the modifiers from the COB
"RTN","IBCEU0",192,0)
 ; SEQ is which modifier we're extracting (1-4)
"RTN","IBCEU0",193,0)
 ; Build IBXDATA(line#)=Modifier# SEQ
"RTN","IBCEU0",194,0)
 NEW LN,N,Z,MOD
"RTN","IBCEU0",195,0)
 KILL IBXDATA
"RTN","IBCEU0",196,0)
 I '$G(SEQ) Q
"RTN","IBCEU0",197,0)
 S LN=0 F  S LN=$O(IBXSAVE("LCOB",LN)) Q:'LN  D
"RTN","IBCEU0",198,0)
 . S (N,Z)=0
"RTN","IBCEU0",199,0)
 . F  S Z=$O(IBXSAVE("LCOB",LN,"COBMOD",Z)) Q:'Z  D
"RTN","IBCEU0",200,0)
 .. S N=N+1
"RTN","IBCEU0",201,0)
 .. S MOD(LN,N)=$P($G(IBXSAVE("LCOB",LN,"COBMOD",Z,0)),U,1)
"RTN","IBCEU0",202,0)
 .. Q
"RTN","IBCEU0",203,0)
 . S MOD=$G(MOD(LN,SEQ))
"RTN","IBCEU0",204,0)
 . I MOD'="" S IBXDATA(LN)=MOD
"RTN","IBCEU0",205,0)
 . Q
"RTN","IBCEU0",206,0)
 Q
"RTN","IBCEU0",207,0)
 ;
"RTN","IBCEU1")
0^14^B40400571
"RTN","IBCEU1",1,0)
IBCEU1 ;ALB/TMP - EDI UTILITIES FOR EOB PROCESSING ;10-FEB-99
"RTN","IBCEU1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-94
"RTN","IBCEU1",3,0)
 ;
"RTN","IBCEU1",4,0)
CCOB1(IBIFN,NODE,SEQ) ; Extract Claim level COB data
"RTN","IBCEU1",5,0)
 ; for a bill IBIFN
"RTN","IBCEU1",6,0)
 ; NODE = the file 361.1 node(s) to be returned, separated by commas
"RTN","IBCEU1",7,0)
 ; SEQ = the specific insurance sequence you want returned.  If not =
"RTN","IBCEU1",8,0)
 ;       1, 2, or 3, all are returned
"RTN","IBCEU1",9,0)
 ; Returns IBXDATA(COB,n,node)  where COB = COB insurance sequence,
"RTN","IBCEU1",10,0)
 ;  n is the entry number in file 361.1 and node is the node requested
"RTN","IBCEU1",11,0)
 ;   = the requested node's data
"RTN","IBCEU1",12,0)
 ;
"RTN","IBCEU1",13,0)
 N IB,IBN,IBBILL,IBS,A,B,C
"RTN","IBCEU1",14,0)
 ;
"RTN","IBCEU1",15,0)
 K IBXDATA
"RTN","IBCEU1",16,0)
 ;
"RTN","IBCEU1",17,0)
 S:$G(NODE)="" NODE=1
"RTN","IBCEU1",18,0)
 S IB=$P($G(^DGCR(399,IBIFN,"M1")),U,5,7)
"RTN","IBCEU1",19,0)
 S:"123"'[$G(SEQ) SEQ=""
"RTN","IBCEU1",20,0)
 ;
"RTN","IBCEU1",21,0)
 F B=1:1:3 S IBBILL=$P(IB,U,B) I IBBILL S C=0 F  S C=$O(^IBM(361.1,"B",IBBILL,C)) Q:'C  D
"RTN","IBCEU1",22,0)
 . I '$$EOBELIG(C) Q      ; eob not eligible for secondary claim
"RTN","IBCEU1",23,0)
 . S IBS=$P($G(^IBM(361.1,C,0)),U,15)   ; insurance sequence
"RTN","IBCEU1",24,0)
 . I $S('$G(SEQ):1,1:SEQ=IBS) D
"RTN","IBCEU1",25,0)
 .. F Z=1:1:$L(NODE,",") D
"RTN","IBCEU1",26,0)
 ... S A=$P(NODE,",",Z)
"RTN","IBCEU1",27,0)
 ... Q:A=""
"RTN","IBCEU1",28,0)
 ... S IBN=$G(^IBM(361.1,C,A))
"RTN","IBCEU1",29,0)
 ... I $TR(IBN,U)'="" S IBXDATA(IBS,C,A)=IBN
"RTN","IBCEU1",30,0)
 ;
"RTN","IBCEU1",31,0)
 Q
"RTN","IBCEU1",32,0)
 ;
"RTN","IBCEU1",33,0)
CCAS1(IBIFN,SEQ) ; Extract all MEDICARE COB claim level adjustment data
"RTN","IBCEU1",34,0)
 ; for a bill IBIFN (subfile 361.11 in file 361.1)
"RTN","IBCEU1",35,0)
 ; SEQ = the specific insurance sequence you want returned.  If not =
"RTN","IBCEU1",36,0)
 ;       1, 2, or 3, all are returned
"RTN","IBCEU1",37,0)
 ; Returns IBXDATA(COB,n)  where COB = COB insurance sequence,
"RTN","IBCEU1",38,0)
 ;       n is the entry number in file 361.1 and
"RTN","IBCEU1",39,0)
 ;       = the 0-node of the subfile entry (361.11)
"RTN","IBCEU1",40,0)
 ;    and IBXDATA(COB,n,m) where m is a sequential # and
"RTN","IBCEU1",41,0)
 ;                         = this level's 0-node
"RTN","IBCEU1",42,0)
 N IB,IBA,IBS,IB0,IB00,IBBILL,B,C,D,E
"RTN","IBCEU1",43,0)
 ;
"RTN","IBCEU1",44,0)
 S IB=$P($G(^DGCR(399,IBIFN,"M1")),U,5,7)
"RTN","IBCEU1",45,0)
 S:"123"'[$G(SEQ) SEQ=""
"RTN","IBCEU1",46,0)
 ;
"RTN","IBCEU1",47,0)
 F B=1:1:3 S IBBILL=$P(IB,U,B) I IBBILL S C=0 F  S C=$O(^IBM(361.1,"B",IBBILL,C)) Q:'C  D
"RTN","IBCEU1",48,0)
 . I '$$EOBELIG(C) Q      ; eob not eligible for secondary claim
"RTN","IBCEU1",49,0)
 . S IBS=$P($G(^IBM(361.1,C,0)),U,15)   ; insurance sequence
"RTN","IBCEU1",50,0)
 . I $S('$G(SEQ):1,1:SEQ=IBS) D
"RTN","IBCEU1",51,0)
 .. S (IBA,D)=0 F  S D=$O(^IBM(361.1,C,10,D)) Q:'D  S IB0=$G(^(D,0)) D
"RTN","IBCEU1",52,0)
 ... S IBXDATA(IBS,D)=IB0
"RTN","IBCEU1",53,0)
 ... S (IBA,E)=0
"RTN","IBCEU1",54,0)
 ... F  S E=$O(^IBM(361.1,C,10,D,1,E)) Q:'E  S IB00=$G(^(E,0)) D
"RTN","IBCEU1",55,0)
 .... S IBA=IBA+1
"RTN","IBCEU1",56,0)
 .... I $TR(IB00,U)'="" S IBXDATA(IBS,D,IBA)=IB00
"RTN","IBCEU1",57,0)
 ;
"RTN","IBCEU1",58,0)
 Q
"RTN","IBCEU1",59,0)
 ;
"RTN","IBCEU1",60,0)
SEQ(A) ; Translate sequence # A into corresponding letter representation
"RTN","IBCEU1",61,0)
 S A=$E("PST",A)
"RTN","IBCEU1",62,0)
 I $S(A'="":"PST"'[A,1:1) S A="P"
"RTN","IBCEU1",63,0)
 Q A
"RTN","IBCEU1",64,0)
 ;
"RTN","IBCEU1",65,0)
EOBTOT(IBIFN,IBCOBN) ; Total all EOB's for a bill's COB sequence
"RTN","IBCEU1",66,0)
 ; Function returns the total of all EOB's for a specific COB seq
"RTN","IBCEU1",67,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEU1",68,0)
 ; IBCOBN = the # of the COB sequence you want EOB/MRA total for (1-3)
"RTN","IBCEU1",69,0)
 ;
"RTN","IBCEU1",70,0)
 N Z,Z0,IBTOT
"RTN","IBCEU1",71,0)
 S IBTOT=0
"RTN","IBCEU1",72,0)
 I $O(^IBM(361.1,"ABS",IBIFN,IBCOBN,0)) D
"RTN","IBCEU1",73,0)
 . ; Set up prior payment field here from MRA/EOB(s)
"RTN","IBCEU1",74,0)
 . S (IBTOT,Z)=0
"RTN","IBCEU1",75,0)
 . F  S Z=$O(^IBM(361.1,"ABS",IBIFN,IBCOBN,Z)) Q:'Z  D
"RTN","IBCEU1",76,0)
 .. S IBTOT=IBTOT+$P($G(^IBM(361.1,Z,1)),U,2)
"RTN","IBCEU1",77,0)
 Q IBTOT
"RTN","IBCEU1",78,0)
 ;
"RTN","IBCEU1",79,0)
 ;
"RTN","IBCEU1",80,0)
LCOBOUT(IBXSAVE,IBXDATA,COL) ; Output the line adjustment reasons COB
"RTN","IBCEU1",81,0)
 ;  line # data for an electronic claim
"RTN","IBCEU1",82,0)
 ; IBXSAVE,IBXDATA = arrays holding formatter information for claim -
"RTN","IBCEU1",83,0)
 ;                   pass by reference
"RTN","IBCEU1",84,0)
 ; COL = the column in the 837 flat file being output for LCAS record
"RTN","IBCEU1",85,0)
 N LINE,COBSEQ,RECCT,GRPCD,SEQ,RCCT,RCPC,DATA,RCREC,SEQLINE K IBXDATA
"RTN","IBCEU1",86,0)
 S (LINE,RECCT)=0
"RTN","IBCEU1",87,0)
 S RCPC=(COL#3) S:'RCPC RCPC=3
"RTN","IBCEU1",88,0)
 S RCREC=$S(COL'<4:COL-1\3,1:0)
"RTN","IBCEU1",89,0)
 ;S RCREC=$S(COL'<4:COL+5\6-1,1:0)
"RTN","IBCEU1",90,0)
 F  S LINE=$O(IBXSAVE("LCOB",LINE)) Q:'LINE  D
"RTN","IBCEU1",91,0)
 . S COBSEQ=0
"RTN","IBCEU1",92,0)
 . F  S COBSEQ=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ)) Q:'COBSEQ  S SEQLINE=0 F  S SEQLINE=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE)) Q:'SEQLINE  S GRPCD="" F  S GRPCD=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD)) Q:GRPCD=""  D
"RTN","IBCEU1",93,0)
 .. S RECCT=RECCT+1
"RTN","IBCEU1",94,0)
 .. I COL=2 S IBXDATA(RECCT)=LINE,DATA=LINE D:RECCT>1 ID^IBCEF2(RECCT,"LCAS")
"RTN","IBCEU1",95,0)
 .. I COL=3 S IBXDATA(RECCT)=$TR(GRPCD," ")
"RTN","IBCEU1",96,0)
 .. S (SEQ,RCCT)=0
"RTN","IBCEU1",97,0)
 .. F  S SEQ=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD,SEQ)) Q:'SEQ  I $TR($G(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD,SEQ)),U)'="" D
"RTN","IBCEU1",98,0)
 ... S RCCT=RCCT+1
"RTN","IBCEU1",99,0)
 ... Q:COL'<4&(RCCT'=RCREC)&(RCCT'>6)
"RTN","IBCEU1",100,0)
 ... S DATA=$S(COL=2:LINE,COL=3:$TR(GRPCD," "),1:$P($G(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD,SEQ)),U,RCPC))
"RTN","IBCEU1",101,0)
 ... I COL'<4,RCCT=RCREC S:DATA'="" IBXDATA(RECCT)=DATA Q
"RTN","IBCEU1",102,0)
 ... I RCCT>6 S RCCT=1,RECCT=RECCT+1 D:COL=2 ID^IBCEF2(RECCT,"LCAS") I DATA'="",$S(COL'>3:1,1:RCCT=RCREC) S IBXDATA(RECCT)=DATA
"RTN","IBCEU1",103,0)
 Q
"RTN","IBCEU1",104,0)
 ;
"RTN","IBCEU1",105,0)
CCOBOUT(IBXSAVE,IBXDATA,COL) ; Output the claim adjustment reasons COB
"RTN","IBCEU1",106,0)
 ;  data for an electronic claim
"RTN","IBCEU1",107,0)
 ; IBXSAVE,IBXDATA = arrays holding formatter information for claim -
"RTN","IBCEU1",108,0)
 ;                   pass by reference
"RTN","IBCEU1",109,0)
 ; COL = the column in the 837 flat file being output for CCAS record
"RTN","IBCEU1",110,0)
 N COBSEQ,RECCT,GRPSEQ,SEQ,RCPC,RCCT,RCREC,DATA K IBXDATA
"RTN","IBCEU1",111,0)
 S RECCT=0
"RTN","IBCEU1",112,0)
 S RCPC=(COL#3) S:'RCPC RCPC=3
"RTN","IBCEU1",113,0)
 S RCREC=$S(COL'<4:COL+5\6-1,1:0)
"RTN","IBCEU1",114,0)
 S COBSEQ=0
"RTN","IBCEU1",115,0)
 F  S COBSEQ=$O(IBXSAVE("CCAS",COBSEQ)) Q:'COBSEQ  S GRPSEQ="" F  S GRPSEQ=$O(IBXSAVE("CCAS",COBSEQ,GRPSEQ)) Q:GRPSEQ=""  D
"RTN","IBCEU1",116,0)
 . S RECCT=RECCT+1
"RTN","IBCEU1",117,0)
 . I COL=2 S IBXDATA(RECCT)=COBSEQ D:RECCT>1 ID^IBCEF2(RECCT,"CCAS")
"RTN","IBCEU1",118,0)
 . I COL=3 S IBXDATA(RECCT)=$P($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ)),U)
"RTN","IBCEU1",119,0)
 . S (SEQ,RCCT)=0
"RTN","IBCEU1",120,0)
 . F  S SEQ=$O(IBXSAVE("CCAS",COBSEQ,GRPSEQ,SEQ)) Q:'SEQ  I $TR($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ,SEQ)),U)'="" D
"RTN","IBCEU1",121,0)
 .. S RCCT=RCCT+1
"RTN","IBCEU1",122,0)
 .. Q:COL'<4&(RCCT'=RCREC)&(RCCT'>6)
"RTN","IBCEU1",123,0)
 .. S DATA=$S(COL=2:COBSEQ,COL=3:$P($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ)),U),1:$P($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ,SEQ)),U,RCPC))
"RTN","IBCEU1",124,0)
 .. I COL'<4,RCCT=RCREC S:DATA'="" IBXDATA(RECCT)=DATA Q
"RTN","IBCEU1",125,0)
 .. I RCCT>6 S RCCT=1,RECCT=RECCT+1 D:COL=2 ID^IBCEF2(RECCT,"CCAS") I DATA'="",$S(COL'>3:1,1:RCCT=RCREC) S IBXDATA(RECCT)=DATA
"RTN","IBCEU1",126,0)
 Q
"RTN","IBCEU1",127,0)
 ;
"RTN","IBCEU1",128,0)
COBOUT(IBXSAVE,IBXDATA,CL) ;
"RTN","IBCEU1",129,0)
 N Z,M,N,P,PCCL
"RTN","IBCEU1",130,0)
 S (N,Z,P)=0 F  S Z=$O(IBXSAVE("LCOB",Z)) Q:'Z  D
"RTN","IBCEU1",131,0)
 . S N=N+1
"RTN","IBCEU1",132,0)
 . S M=$O(IBXSAVE("LCOB",Z,"COB",""),-1) Q:'M
"RTN","IBCEU1",133,0)
 . S P=$O(IBXSAVE("LCOB",Z,"COB",M,""),-1) Q:'P
"RTN","IBCEU1",134,0)
 . S PCCL=$P($G(IBXSAVE("LCOB",Z,"COB",M,P)),U,CL)
"RTN","IBCEU1",135,0)
 . S:PCCL'="" IBXDATA(N)=PCCL
"RTN","IBCEU1",136,0)
 . Q
"RTN","IBCEU1",137,0)
 Q
"RTN","IBCEU1",138,0)
 ;
"RTN","IBCEU1",139,0)
COBPYRID(IBXIEN,IBXSAVE,IBXDATA) ; cob insurance company payer id
"RTN","IBCEU1",140,0)
 N Z,N,NUM
"RTN","IBCEU1",141,0)
 K IBXDATA
"RTN","IBCEU1",142,0)
 I '$D(IBXSAVE("LCOB")) G COBPYRX
"RTN","IBCEU1",143,0)
 D ALLPAYID^IBCEF2(IBXIEN,.NUM,1)
"RTN","IBCEU1",144,0)
 S Z=$$COID^IBCEF2(IBXIEN),NUM=$G(NUM(1))
"RTN","IBCEU1",145,0)
 S:Z="" Z="0000"
"RTN","IBCEU1",146,0)
 S NUM=$E(NUM_$J("",5),1,5)_$E(Z_$J("",4),1,4)
"RTN","IBCEU1",147,0)
 S N=0
"RTN","IBCEU1",148,0)
 F  S N=$O(IBXSAVE("LCOB",N)) Q:'N  S IBXDATA(N)=NUM
"RTN","IBCEU1",149,0)
COBPYRX ;
"RTN","IBCEU1",150,0)
 Q
"RTN","IBCEU1",151,0)
 ;
"RTN","IBCEU1",152,0)
EOBELIG(IBEOB) ; EOB eligibility for secondary claim
"RTN","IBCEU1",153,0)
 ; Function to decide if EOB entry in file 361.1 (ien=IBEOB) is
"RTN","IBCEU1",154,0)
 ; eligible to be included for secondary claim creation process
"RTN","IBCEU1",155,0)
 ; The EOB is not eligible if the review status is not 3, or if there
"RTN","IBCEU1",156,0)
 ; is no insurance sequence indicator, or if the EOB has been DENIED
"RTN","IBCEU1",157,0)
 ; and the patient responsibility for that EOB is $0.
"RTN","IBCEU1",158,0)
 ;
"RTN","IBCEU1",159,0)
 NEW ELIG,IBDATA,PTRESP
"RTN","IBCEU1",160,0)
 S ELIG=0
"RTN","IBCEU1",161,0)
 I '$G(IBEOB) G EOBELIGX
"RTN","IBCEU1",162,0)
 S IBDATA=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEU1",163,0)
 I $P(IBDATA,U,16)'=3 G EOBELIGX     ; review status - accepted-complete
"RTN","IBCEU1",164,0)
 I '$P(IBDATA,U,15) G EOBELIGX       ; insurance sequence must exist
"RTN","IBCEU1",165,0)
 S PTRESP=$P($G(^IBM(361.1,IBEOB,1)),U,2)     ; Pt Resp Amount for HCFAs
"RTN","IBCEU1",166,0)
 I $$FT^IBCEF(+IBDATA)=3 S PTRESP=$$PTRESPI^IBCECOB1(IBEOB)  ; for UBs
"RTN","IBCEU1",167,0)
 I PTRESP'>0,$P(IBDATA,U,13)=2 G EOBELIGX     ; Denied & No Pt. Resp.
"RTN","IBCEU1",168,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) G EOBELIGX     ; filing error
"RTN","IBCEU1",169,0)
 ;
"RTN","IBCEU1",170,0)
 S ELIG=1
"RTN","IBCEU1",171,0)
EOBELIGX ;
"RTN","IBCEU1",172,0)
 Q ELIG
"RTN","IBCEU1",173,0)
 ;
"RTN","IBCEU1",174,0)
EOBCNT(IBIFN) ; This function counts up the number of EOBs that are eligible
"RTN","IBCEU1",175,0)
 ; for the secondary claim creation process for a given bill#.
"RTN","IBCEU1",176,0)
 NEW CNT,IEN
"RTN","IBCEU1",177,0)
 S (CNT,IEN)=0
"RTN","IBCEU1",178,0)
 F  S IEN=$O(^IBM(361.1,"B",+$G(IBIFN),IEN)) Q:'IEN  D
"RTN","IBCEU1",179,0)
 . I $$EOBELIG(IEN) S CNT=CNT+1
"RTN","IBCEU1",180,0)
 . Q
"RTN","IBCEU1",181,0)
EOBCNTX ;
"RTN","IBCEU1",182,0)
 Q CNT
"RTN","IBCEU1",183,0)
 ;
"RTN","IBCEU2")
0^28^B56299934
"RTN","IBCEU2",1,0)
IBCEU2 ;ALB/TMP - EDI UTILITIES FOR AUTO ADD OF CODES ON BILL ;20-OCT-99
"RTN","IBCEU2",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155**;21-MAR-94
"RTN","IBCEU2",3,0)
 ;
"RTN","IBCEU2",4,0)
AUTOCK(IBIFN,IBQUIET) ; Auto add any codes necessary based on data
"RTN","IBCEU2",5,0)
 ; existing on bill, if needed.
"RTN","IBCEU2",6,0)
 ; IBQUIET - optional parameter - equals 1 to suppress screen display
"RTN","IBCEU2",7,0)
 ;
"RTN","IBCEU2",8,0)
 N IBCOBN,IBFL,DIE,DA,DR
"RTN","IBCEU2",9,0)
 S DR="",IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCEU2",10,0)
 ;
"RTN","IBCEU2",11,0)
 ;Look for prior payments value codes A1, A2 and occur code 24, if needed
"RTN","IBCEU2",12,0)
 ;I IBCOBN>1 D PRPAY(IBIFN,IBCOBN,$G(IBQUIET))
"RTN","IBCEU2",13,0)
 ;
"RTN","IBCEU2",14,0)
 ;Look for occur codes A1,B1,C1 for subscriber date of birth, if needed
"RTN","IBCEU2",15,0)
 D SUBDOB(IBIFN,IBCOBN,$G(IBQUIET))
"RTN","IBCEU2",16,0)
 ;
"RTN","IBCEU2",17,0)
 ; If outpatient bill and no discharge status, add code 01 as default
"RTN","IBCEU2",18,0)
 I '$$INPAT^IBCEF(IBIFN,1),$$FT^IBCEF(IBIFN)=3 D
"RTN","IBCEU2",19,0)
 . ;Default discharge status for outpt UB92 to '01'
"RTN","IBCEU2",20,0)
 . D F^IBCEF("N-PATIENT STATUS","IBZ",,IBIFN)
"RTN","IBCEU2",21,0)
 . I IBZ="" D
"RTN","IBCEU2",22,0)
 .. N Z S Z=0 F  S Z=$O(^DGCR(399.1,"C","01",Z)) Q:'Z  I $P($G(^DGCR(399.1,Z,0)),U,6) Q
"RTN","IBCEU2",23,0)
 .. I Z S DR=DR_$S(DR'="":";",1:"")_"162////"_Z
"RTN","IBCEU2",24,0)
 . ; Default admit source to 2
"RTN","IBCEU2",25,0)
 . D F^IBCEF("N-SOURCE OF ADMISSION","IBZ",,IBIFN)
"RTN","IBCEU2",26,0)
 . I IBZ="" S DR=DR_$S(DR'="":";",1:"")_"159///2"
"RTN","IBCEU2",27,0)
 ;
"RTN","IBCEU2",28,0)
 ; If inpatient bill and no 01 or 02 value code, add 01 value code with
"RTN","IBCEU2",29,0)
 ; the highest value of all 101 entries
"RTN","IBCEU2",30,0)
 I $$INPAT^IBCEF(IBIFN,1) D
"RTN","IBCEU2",31,0)
 . N IBTOB,IBND0,IBFL,IBOK,Z,Z0,IBAMT,DIC,DR,DIE,DA,DO,DD,DLAYGO,X,Y
"RTN","IBCEU2",32,0)
 . S IBND0=$G(^DGCR(399,IBIFN,0)),IBTOB=$P(IBND0,U,24)_$P($G(^DGCR(399.1,+$P(IBND0,U,25),0)),U,2)
"RTN","IBCEU2",33,0)
 . I IBTOB'="11",IBTOB'="18",IBTOB'="21" Q
"RTN","IBCEU2",34,0)
 . S IBOK=0
"RTN","IBCEU2",35,0)
 . D F^IBCEF("N-VALUE CODES",,,IBIFN)
"RTN","IBCEU2",36,0)
 . S Z=0 F  S Z=$O(IBFL(39,Z)) Q:'Z  I $P(IBFL(39,Z),U)="01"!($P(IBFL(39,Z),U)="02") S IBOK=1 Q
"RTN","IBCEU2",37,0)
 . Q:IBOK
"RTN","IBCEU2",38,0)
 . S Z=0,IBAMT=0
"RTN","IBCEU2",39,0)
 . F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$P($G(^DGCR(399.2,+$G(^DGCR(399,IBIFN,"RC",Z,0)),0)),U) I Z0=101,IBAMT<$P($G(^DGCR(399,IBIFN,"RC",Z,0)),U,2) S IBAMT=$P(^(0),U,2)
"RTN","IBCEU2",40,0)
 . I IBAMT D
"RTN","IBCEU2",41,0)
 .. S DA(1)=IBIFN,DLAYGO=399.047,DIC(0)="L",DIC="^DGCR(399,"_DA(1)_",""CV"",",DIC("DR")=".02////"_IBAMT
"RTN","IBCEU2",42,0)
 .. S X=0 F  S X=$O(^DGCR(399.1,"C","01",X)) Q:'X  I $P($G(^DGCR(399.1,X,0)),U,11) Q
"RTN","IBCEU2",43,0)
 .. I X D FILE^DICN
"RTN","IBCEU2",44,0)
 .. K DIC,DO,DD,DLAYGO
"RTN","IBCEU2",45,0)
 I DR'="" S DA=IBIFN,DIE="^DGCR(399," D ^DIE
"RTN","IBCEU2",46,0)
 Q
"RTN","IBCEU2",47,0)
 ;
"RTN","IBCEU2",48,0)
PRPAY(IBIFN,IBCOBN,IBQUIET) ; Output value cd A1 or A2 for prior payments, if needed
"RTN","IBCEU2",49,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEU2",50,0)
 ; IBCOBN = the COB sequence number for bill (2=secondary, 3=tertiary)
"RTN","IBCEU2",51,0)
 ; IBQUIET = 1 to suppress screen display
"RTN","IBCEU2",52,0)
 ;
"RTN","IBCEU2",53,0)
 N IBNEED,IBNEED24,IB24,IBV,IBVN,DIC,DA,DLAYGO,DD,DO,Z,Z0
"RTN","IBCEU2",54,0)
 S (IBCT,IBNEED)=0,IBNEED24=1,(IB24(24),IB24("A1"),IB24("A2"))=0
"RTN","IBCEU2",55,0)
 S Z=0 F  S Z=$O(^DGCR(399.1,"C1",24,Z)) Q:'Z  I $P($G(^DGCR(399.1,Z,0)),U,4) S IB24(24)=Z Q  ;Occurrence code 24
"RTN","IBCEU2",56,0)
 F Z0="A1","A2" S Z=0 F  S Z=$O(^DGCR(399.1,"C1",Z0,Z)) Q:'Z  I $P($G(^DGCR(399.1,Z,0)),U,11) S IB24(Z0)=Z Q  ;Value codes A1 and A2
"RTN","IBCEU2",57,0)
 F Z="A1","A2" I $D(^DGCR(399,IBIFN,"I"_$P(Z,"A",2)+1)),IB24(Z) D
"RTN","IBCEU2",58,0)
 . I '$D(^DGCR(399,IBIFN,"CV","B",+IB24(Z))) S IBNEED(Z)="",IBNEED=IBNEED+1 Q
"RTN","IBCEU2",59,0)
 . S Z0=0 F  S Z0=$O(^DGCR(399,IBIFN,"CV","B",+IB24(Z),Z0)) Q:'Z0  S IBV(Z)=$G(^DGCR(399,IBIFN,"CV",Z0,0)) I Z="A1" S IBNEED24=$S($P(IBV(Z),U,2):0,1:1)
"RTN","IBCEU2",60,0)
 ;
"RTN","IBCEU2",61,0)
 I $D(^DGCR(399,IBIFN,"OC","B",+IB24(24))) S IBNEED24=0
"RTN","IBCEU2",62,0)
 I 'IBNEED24,'IBNEED Q
"RTN","IBCEU2",63,0)
 I IBNEED D
"RTN","IBCEU2",64,0)
 . N IBZ,IBXDATA
"RTN","IBCEU2",65,0)
 . D F^IBCEF("N-OTH INSURANCE PRIOR PAYMENT","IBZ",,IBIFN) Q:'$O(IBZ(0))  ;No prior payment data found
"RTN","IBCEU2",66,0)
 . F Z="A1","A2" I $D(IBNEED(Z)) S Z0=$TR(Z,"A"),IBNEED(Z)=$G(IBZ(Z0)) S:IBNEED(Z) IBCT=IBCT+1,IBVN(Z)="" I Z="A1",$P(IBNEED(Z),U,2) S IBNEED24=0
"RTN","IBCEU2",67,0)
 ;
"RTN","IBCEU2",68,0)
 I IBNEED24 D
"RTN","IBCEU2",69,0)
 . N Z1,IBZ,IBXDATA
"RTN","IBCEU2",70,0)
 . ; Get primary's EOB data if possible - find EOB reject date
"RTN","IBCEU2",71,0)
 . D F^IBCEF("N-EOB ENTRIES","IBZ",,IBIFN)
"RTN","IBCEU2",72,0)
 . Q:'$O(IBZ(1,0))  ;EOB entry not found for primary insurance
"RTN","IBCEU2",73,0)
 . S (IB24,Z)=""
"RTN","IBCEU2",74,0)
 . F  S Z=$O(IBZ(1,Z),-1) Q:'Z  S Z0=$G(^IBM(361.1,+IBZ(1,Z),0)),Z1=+$G(^(1)) I 'Z1 S IB24=$P(Z0,U,6)\1 Q:IB24
"RTN","IBCEU2",75,0)
 . Q:'IB24
"RTN","IBCEU2",76,0)
 . W:'$G(IBQUIET) !,"Adding occurrence code 24 and primary insurance rejection date to bill"
"RTN","IBCEU2",77,0)
 . S DA(1)=IBIFN,DIC="^DGCR(399,"_IBIFN_",""OC"",",X=IB24(24),DLAYGO=399.041
"RTN","IBCEU2",78,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(399,41),DIC(0)="L",DIC("DR")=".02////"_IB24
"RTN","IBCEU2",79,0)
 . D FILE^DICN K DO,DD,DIC,DLAYGO
"RTN","IBCEU2",80,0)
 ;
"RTN","IBCEU2",81,0)
 I IBNEED D
"RTN","IBCEU2",82,0)
 . W:'$G(IBQUIET) !!,"Adding value code",$S(IBCT=2:"s A1 and A2",1:$O(IBVN("")))," for reporting of bill's prior payments"
"RTN","IBCEU2",83,0)
 . ; Adding codes to bill
"RTN","IBCEU2",84,0)
 . F Z="A1","A2" I $D(IBVN(Z)) D
"RTN","IBCEU2",85,0)
 .. S DA(1)=IBIFN,DIC="^DGCR(399,"_IBIFN_",""VC"",",X=IB24(Z),DLAYGO=399.047
"RTN","IBCEU2",86,0)
 .. S DIC("P")=$$GETSPEC^IBEFUNC(399,47),DIC(0)="L",DIC("DR")=".02////"_+$P(IBNEED(Z),U,2)
"RTN","IBCEU2",87,0)
 .. D FILE^DICN K DO,DD,DIC,DLAYGO
"RTN","IBCEU2",88,0)
 ;
"RTN","IBCEU2",89,0)
 Q
"RTN","IBCEU2",90,0)
 ;
"RTN","IBCEU2",91,0)
SUBDOB(IBIFN,IBCOBN,IBQUIET) ; Add occurrence codes A1,B1,C1 as needed for subscriber DOB
"RTN","IBCEU2",92,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEU2",93,0)
 ; IBQUIET = 1 to suppress screen display
"RTN","IBCEU2",94,0)
 ;
"RTN","IBCEU2",95,0)
 N IBZ,Z,Z0,IBVOC,DR
"RTN","IBCEU2",96,0)
 S (IBVOC("A1"),IBVOC("B1"),IBVOC("C1"))=0
"RTN","IBCEU2",97,0)
 F Z0="A1","B1","C1" S Z=0 F  S Z=$O(^DGCR(399.1,"C1",Z0,Z)) Q:'Z  I $P($G(^DGCR(399.1,Z,0)),U,4) S IBVOC(Z0)=Z Q  ;Occurrence codes A1, B1, C1
"RTN","IBCEU2",98,0)
 F Z=1,2,3 I $D(^DGCR(399,IBIFN,"I"_Z)) D
"RTN","IBCEU2",99,0)
 . N IBZ1,IBZ2,IBOC,DIC,DA,DLAYGO,DO,DD,X,Y
"RTN","IBCEU2",100,0)
 . S IBOC=$E("ABC",Z)_"1"
"RTN","IBCEU2",101,0)
 . Q:'IBVOC(IBOC)
"RTN","IBCEU2",102,0)
 . Q:$D(^DGCR(399,IBIFN,"OC","B",IBVOC(IBOC)))  ;Already there
"RTN","IBCEU2",103,0)
 . I '$D(IBZ) D
"RTN","IBCEU2",104,0)
 .. D F^IBCEF("N-CURR INSURED DEMOGRAPHICS","IBZ1",,IBIFN)
"RTN","IBCEU2",105,0)
 .. D F^IBCEF("N-OTH INSURED DEMOGRAPHICS","IBZ2",,IBIFN)
"RTN","IBCEU2",106,0)
 .. I IBCOBN=1 S IBZ(1)=+$G(IBZ1),IBZ(2)=+$G(IBZ2(1)),IBZ(3)=+$G(IBZ2(2)) Q
"RTN","IBCEU2",107,0)
 .. I IBCOBN=2 S IBZ(1)=+$G(IBZ2(1)),IBZ(2)=+$G(IBZ1),IBZ(3)=+$G(IBZ2(2)) Q
"RTN","IBCEU2",108,0)
 .. I IBCOBN=3 S IBZ(1)=+$G(IBZ2(1)),IBZ(2)=+$G(IBZ2(2)),IBZ(3)=+$G(IBZ1)
"RTN","IBCEU2",109,0)
 . Q:'$G(IBZ(Z))!$D(^DGCR(399,IBIFN,"OC","B",IBOC(IBOC)))
"RTN","IBCEU2",110,0)
 . W:'$G(IBQUIET) !,"Adding occurrence code '"_IBOC_"' for "_$P("primary^secondary^tertiary",U,Z)_" insurance subscriber's date of birth"
"RTN","IBCEU2",111,0)
 . S DIC="^DGCR(399,"_IBIFN_",""OC"",",DA(1)=IBIFN,DLAYGO=399.041,DIC(0)="L",DIC("P")=$$GETSPEC^IBEFUNC(399,41),X=IBVOC(IBOC),DIC("DR")=".02////"_IBZ(Z)
"RTN","IBCEU2",112,0)
 . D FILE^DICN K DO,DD
"RTN","IBCEU2",113,0)
 Q
"RTN","IBCEU2",114,0)
 ;
"RTN","IBCEU2",115,0)
COMBO(IBXDATA,IBXTRA,IBINST) ; Determine the bundled/unbundled codes - add
"RTN","IBCEU2",116,0)
 ; line items where needed to line item array IBXDATA(line #)
"RTN","IBCEU2",117,0)
 ; Update referenced line in COB entries returned in IBXDATA
"RTN","IBCEU2",118,0)
 ; IBXTR = array input with bundled/unbundled procedures
"RTN","IBCEU2",119,0)
 ;      ("ALL",original line~original procedure~service date,
"RTN","IBCEU2",120,0)
 ;          new procedure)=COB seq #^sequence # of adjustment in
"RTN","IBCEU2",121,0)
 ;          IBXDATA(n,"COB",COB seq #,adj#)
"RTN","IBCEU2",122,0)
 ; IBINST = 1 if institutional claim, 0 if professional
"RTN","IBCEU2",123,0)
 N Z,Z0,Z1
"RTN","IBCEU2",124,0)
 S Z="" F  S Z=$O(IBXTRA("ALL",Z)) Q:Z=""  S Z0=$O(IBXTRA("ALL",Z,"")) D
"RTN","IBCEU2",125,0)
 . ; Unbundled procs will have multiple entries for the combination of
"RTN","IBCEU2",126,0)
 . ; line~original procedure~service date - one for every new procedure
"RTN","IBCEU2",127,0)
 . ; Bundled ones will have multiple entries for the same original
"RTN","IBCEU2",128,0)
 . ; procedure~service date combination
"RTN","IBCEU2",129,0)
 . ;
"RTN","IBCEU2",130,0)
 . I $O(IBXTRA("ALL",Z,Z0))'="" S Z0="" F  S Z0=$O(IBXTRA("ALL",Z,Z0)) Q:Z0=""  S IBXTRA("U",Z,Z0)=IBXTRA("ALL",Z,Z0) Q
"RTN","IBCEU2",131,0)
 . ; Must be bundled
"RTN","IBCEU2",132,0)
 . S IBXTRA("B",Z0_"~"_$P(Z,"~",3),$P(Z,"~",1,2))=IBXTRA("ALL",Z,Z0)
"RTN","IBCEU2",133,0)
 K IBXTRA("ALL")
"RTN","IBCEU2",134,0)
 ;
"RTN","IBCEU2",135,0)
 ; UNBUNDLED
"RTN","IBCEU2",136,0)
 I $D(IBXTRA("U")) D  ; Add a new entry to IBXDATA for each new proc
"RTN","IBCEU2",137,0)
 . S Z="" F  S Z=$O(IBXTRA("U",Z)) Q:Z=""  S Z0="" F  S Z0=$O(IBXTRA("U",Z,Z0)) Q:Z0=""  D
"RTN","IBCEU2",138,0)
 .. ; Z0 = the new procedure, +Z = the original line to reference
"RTN","IBCEU2",139,0)
 .. S Z1=+$O(IBXDATA(""),-1)+1,IBXDATA(Z1)=IBXDATA(+Z)
"RTN","IBCEU2",140,0)
 .. I '$G(IBINST) S $P(IBXDATA(Z1),U,8)=0,$P(IBXDATA(Z1),U,5)=Z0,$P(IBXDATA(+Z,"COB",+IBXTRA("U",Z,Z0),$P(IBXTRA("U",Z,Z0),U,2)),U)=Z1
"RTN","IBCEU2",141,0)
 .. I $G(IBINST) S $P(IBXDATA(Z1),U,3)=0,$P(IBXDATA(Z1),U,5,6)="0^0",$P(IBXDATA(Z1),U,2)=Z0
"RTN","IBCEU2",142,0)
 ;
"RTN","IBCEU2",143,0)
 ; BUNDLED
"RTN","IBCEU2",144,0)
 I $D(IBXTRA("B")) D  ; Add a new entry to IBXDATA for the new proc
"RTN","IBCEU2",145,0)
 . N PROC1
"RTN","IBCEU2",146,0)
 . S Z0="" F  S Z0=$O(IBXTRA("B",Z0)) Q:Z0=""  S PROC1="",Z=$O(IBXTRA("B",Z0,"")) Q:Z=""  D
"RTN","IBCEU2",147,0)
 .. ; $P(Z0,"~",1) = the new procedure, +Z = the original line to reference
"RTN","IBCEU2",148,0)
 .. I 'PROC1 N ZP S PROC1=1,Z1=+$O(IBXDATA(""),-1)+1,IBXDATA(Z1)=IBXDATA(+Z),ZP=$P(Z0,"~") D
"RTN","IBCEU2",149,0)
 ... I '$G(IBINST) S $P(IBXDATA(Z1),U,8)=0,$P(IBXDATA(Z1),U,5)=ZP,$P(IBXDATA(+Z,"COB",+IBXTRA("U",Z,Z0),$P(IBXTRA("U",Z,Z0),U,2)),U)=Z1
"RTN","IBCEU2",150,0)
 .. I $G(IBINST) S $P(IBXDATA(Z1),U,3)=0,$P(IBXDATA(Z1),U,5,6)="0^0",$P(IBXDATA(Z1),U,2)=ZP
"RTN","IBCEU2",151,0)
 .. S $P(IBXDATA(+Z,"COB",+IBXTRA("U",Z,Z0),$P(IBXTRA("U",Z,Z0),U,2)),U)=Z1 ;Update original line with reference to the new procedure line
"RTN","IBCEU2",152,0)
 ;
"RTN","IBCEU2",153,0)
 Q
"RTN","IBCEU2",154,0)
 ;
"RTN","IBCEU2",155,0)
MCRPT(DFN,IBDT) ; Determine if patient has MCRWNR insurance or if they
"RTN","IBCEU2",156,0)
 ; are at least 65 yrs old, so should be MCR eligible as of IBDT (or DT)
"RTN","IBCEU2",157,0)
 ; DFN = ien of patient
"RTN","IBCEU2",158,0)
 N MCR,DOB,Z
"RTN","IBCEU2",159,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBCEU2",160,0)
 S (MCR,Z)=0
"RTN","IBCEU2",161,0)
 F  S Z=$O(^DPT(2,DFN,2.312,Z)) Q:'Z  I $$MCRWNR^IBEFUNC(+$P($G(^(Z,0)),U)) S MCR=1 Q
"RTN","IBCEU2",162,0)
 I 'MCR S DOB=+$P($G(^DPT(DFN,0)),U,3) I DOB,$E(DT,1,3)-$E(DOB,1,3)-($E(DT,4,7)<$E(DOB,4,7)) S MCR=1
"RTN","IBCEU2",163,0)
 Q MCR
"RTN","IBCEU2",164,0)
 ;
"RTN","IBCEU3")
0^64^B42120644
"RTN","IBCEU3",1,0)
IBCEU3 ;ALB/TMP - EDI UTILITIES FOR HCFA 1500 ;30-NOV-99
"RTN","IBCEU3",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155**;21-MAR-94
"RTN","IBCEU3",3,0)
 ;
"RTN","IBCEU3",4,0)
BOX19(IBIFN) ; Returns the text that should print in box 19 of the HCFA 1500
"RTN","IBCEU3",5,0)
 ;   for bill ien IBIFN
"RTN","IBCEU3",6,0)
 ; Data is derived from a combo of data throughout
"RTN","IBCEU3",7,0)
 ; the system and is limited to 80 characters.  The hierarchy for
"RTN","IBCEU3",8,0)
 ; including data is as follows (until 80 characters have been used):
"RTN","IBCEU3",9,0)
 ;   DATE LAST SEEN and REFERRING PHYSICIAN ID# (physical therapy)
"RTN","IBCEU3",10,0)
 ;                      specialty codes = 025,065,073,067,048
"RTN","IBCEU3",11,0)
 ;   LAST X-RAY DATE (chiropractic) specialty code = 35
"RTN","IBCEU3",12,0)
 ;   HOMEBOUND INDICATOR (independent lab renders an EKG or obtains
"RTN","IBCEU3",13,0)
 ;                        a specimen from a homebound patient)
"RTN","IBCEU3",14,0)
 ;   NO ASSIGNMENT OF BENEFITS (if no assignment of benefits indicated)
"RTN","IBCEU3",15,0)
 ;   Hearing aid testing (if applicable)
"RTN","IBCEU3",16,0)
 ;   ATTENDING PHYSICIAN NOT HOSPICE EMPLOYEE (if applicable)
"RTN","IBCEU3",17,0)
 ;   SPECIAL PROGRAM indicator if Medicare demonstration project for
"RTN","IBCEU3",18,0)
 ;                   lung volume reduction surgery study is set
"RTN","IBCEU3",19,0)
 ;   COMMENTS FOUND IN BOX 19 DATA FIELD FOR THE CLAIM
"RTN","IBCEU3",20,0)
 ;   REMARKS FOUND IN BILL COMMENT FOR THE CLAIM, INCLUDING PROSTHETICS
"RTN","IBCEU3",21,0)
 ;     DETAIL
"RTN","IBCEU3",22,0)
 ;
"RTN","IBCEU3",23,0)
 N IBGO,IBHOSP,IBID,IBLSDT,IBXDATA,IB19,IBHAID,IBXRAY,IBSPEC,Z,Z0,IBSUB,IBPRT,IBREM
"RTN","IBCEU3",24,0)
 S IB19="",IBGO=1
"RTN","IBCEU3",25,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEU3",26,0)
 I $D(IBXSAVE(IBSUB)) N IBXSAVE
"RTN","IBCEU3",27,0)
 S IBPRT=(IBSUB["24")
"RTN","IBCEU3",28,0)
 ;
"RTN","IBCEU3",29,0)
 S IBSPEC=$$BILLSPEC(IBIFN)
"RTN","IBCEU3",30,0)
 G:'IBPRT NPRT
"RTN","IBCEU3",31,0)
 I "^25^65^73^67^48^"[(U_IBSPEC_U) D
"RTN","IBCEU3",32,0)
 . K IBXDATA D F^IBCEF("N-DATE LAST SEEN",,,IBIFN)
"RTN","IBCEU3",33,0)
 . I IBXDATA'="" S IBID="",IBLSDT=$$DATE^IBCF2(IBXDATA,0,1) D  I IBLSDT'="" S IBGO=$$LENOK("Date Last Seen:"_IBLSDT_IBID,.IB19)
"RTN","IBCEU3",34,0)
 .. ; Only print if specialty is OT or PT or proc for routine foot care
"RTN","IBCEU3",35,0)
 .. D F^IBCEF("N-REFERRING PROVIDER ID",,,IBIFN) I IBXDATA'="" S IBID=" By:"_IBXDATA
"RTN","IBCEU3",36,0)
 ;
"RTN","IBCEU3",37,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",38,0)
 K IBXDATA D F^IBCEF("N-HOMEBOUND",,,IBIFN)
"RTN","IBCEU3",39,0)
 I IBXDATA G:'$$LENOK("Homebound",.IB19) BOX19Q
"RTN","IBCEU3",40,0)
 ;
"RTN","IBCEU3",41,0)
 K IBXDATA D F^IBCEF("N-ASSIGN OF BENEFITS INDICATOR",,,IBIFN)
"RTN","IBCEU3",42,0)
 I "Nn0"[IBXDATA&(IBXDATA'="") G:'$$LENOK("Patient refuses to assign benefits",.IB19) BOX19Q
"RTN","IBCEU3",43,0)
 ;
"RTN","IBCEU3",44,0)
 I '$D(IBXSAVE(IBSUB)) D B24^IBCEF3(.IBXSAVE,IBIFN,$S($G(IBNOSHOW)=0:0,1:1))
"RTN","IBCEU3",45,0)
 ;
"RTN","IBCEU3",46,0)
 S (IBHAID,IBHOSP,IBXRAY)=0
"RTN","IBCEU3",47,0)
 ;
"RTN","IBCEU3",48,0)
 S Z=0 F  S Z=$O(IBXSAVE(IBSUB,Z)) Q:'Z  D  G:'IBGO BOX19Q
"RTN","IBCEU3",49,0)
 . I $D(IBXSAVE(IBSUB,Z,"RX")),$P(IBXSAVE(IBSUB,Z,"RX"),U,3)="" S IBGO=$$LENOK("NOC Drug:"_$P(IBXSAVE(IBSUB,Z,"RX"),U,2)_" Units:"_+$P(IBXSAVE(IBSUB,Z,"RX"),U,6),.IB19)
"RTN","IBCEU3",50,0)
 . ;
"RTN","IBCEU3",51,0)
 . Q:'IBGO
"RTN","IBCEU3",52,0)
 . I 'IBHAID,$P(IBXSAVE(IBSUB,Z),U,5)="V5010",$$COBCT^IBCEF(IBIFN)>1 D  Q
"RTN","IBCEU3",53,0)
 .. S IBHAID=1,IBGO=$$LENOK("Testing for hearing aid",.IB19) Q
"RTN","IBCEU3",54,0)
 . ;
"RTN","IBCEU3",55,0)
 . Q:'IBGO
"RTN","IBCEU3",56,0)
 . I 'IBHOSP,$P($G(IBXSAVE(IBSUB,Z,"AUX")),U,3) D  Q
"RTN","IBCEU3",57,0)
 .. S IBHOSP=1,IBGO=$$LENOK("Attending physician,not hospice employee",.IB19)
"RTN","IBCEU3",58,0)
 . ;
"RTN","IBCEU3",59,0)
 . Q:'IBGO
"RTN","IBCEU3",60,0)
 . I 'IBXRAY,IBSPEC=35,$G(IBXSAVE(IBSUB,Z,"AUX"))'="" D  Q
"RTN","IBCEU3",61,0)
 .. ; Check for chiropratic services in claim type or specialty
"RTN","IBCEU3",62,0)
 .. S IBXRAY=1
"RTN","IBCEU3",63,0)
 .. S IBGO=$$LENOK($S($P(IBXSAVE(IBSUB,Z,"AUX"),U,2):"Last Xray:"_$$DATE^IBCF2($P(IBXSAVE(IBSUB,Z,"AUX"),U,2),0,1)_" ",1:"")_$S($P(IBXSAVE(IBSUB,Z,"AUX"),U,4)'="":"Level of Sublux:"_$P(IBXSAVE(IBSUB,Z,"AUX"),U,4),1:""),.IB19)
"RTN","IBCEU3",64,0)
 ;
"RTN","IBCEU3",65,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",66,0)
 K IBXDATA D F^IBCEF("N-SPECIAL PROGRAM",,,IBIFN)
"RTN","IBCEU3",67,0)
 I IBXDATA=30 G:'$$LENOK("Medicare demonstration project for lung volume reduction surgery study",.IB19) BOX19Q
"RTN","IBCEU3",68,0)
 ;
"RTN","IBCEU3",69,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",70,0)
NPRT K IBXDATA D F^IBCEF("N-HCFA 1500 BOX 19 RAW DATA",,,IBIFN)
"RTN","IBCEU3",71,0)
 S IBREM=0
"RTN","IBCEU3",72,0)
 I IBXDATA'="" G:'$$LENOK("Remarks:"_IBXDATA,.IB19) BOX19Q S IBREM=1
"RTN","IBCEU3",73,0)
 K IBXDATA D F^IBCEF("N-BILL REMARKS",,,IBIFN)
"RTN","IBCEU3",74,0)
 I IBXDATA'="" G:'$$LENOK($S('IBREM:"Remarks:",1:"")_IBXDATA,.IB19) BOX19Q
"RTN","IBCEU3",75,0)
 ;
"RTN","IBCEU3",76,0)
BOX19Q Q IB19
"RTN","IBCEU3",77,0)
 ;
"RTN","IBCEU3",78,0)
LENOK(IBDATA,IB19) ; Add text IBDATA to box 19 string (IB19 passed by ref)
"RTN","IBCEU3",79,0)
 ; Check length of box 19 data - truncate at 96 (max length)
"RTN","IBCEU3",80,0)
 ; Returns 0 if max length reached or exceeded, otherwise, 1
"RTN","IBCEU3",81,0)
 N OK
"RTN","IBCEU3",82,0)
 S OK=1
"RTN","IBCEU3",83,0)
 S IB19=IB19_$S(IB19'="":" ",1:"")_$G(IBDATA)
"RTN","IBCEU3",84,0)
 I $L(IB19)'<96 S OK=0,IB19=$E(IB19,1,96) G LENOKQ
"RTN","IBCEU3",85,0)
LENOKQ Q OK
"RTN","IBCEU3",86,0)
 ;
"RTN","IBCEU3",87,0)
ASK19(IBIFN) ; Ask to display HCFA 1500 box 19 data for current IBIFN
"RTN","IBCEU3",88,0)
 N DIR,DIC,X,Y,DIE,DR,Z
"RTN","IBCEU3",89,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A")="DISPLAY THE FULL HCFA 1500 BOX 19?: "
"RTN","IBCEU3",90,0)
 D ^DIR
"RTN","IBCEU3",91,0)
 I Y=1 S Z=$$BOX19(IBIFN) W !!,?4,"19",?20,$E(Z,1,32) W:$L(Z)>32 !,?4,$E(Z,33,80),!
"RTN","IBCEU3",92,0)
 Q
"RTN","IBCEU3",93,0)
 ;
"RTN","IBCEU3",94,0)
ONLAB(IBIFN) ; Functions returns 1 if the bill IBIFN is outside non-lab
"RTN","IBCEU3",95,0)
 N IBP,IBPUR
"RTN","IBCEU3",96,0)
 S IBP=0
"RTN","IBCEU3",97,0)
 S IBPUR=$P($G(^DGCR(399,IBIFN,"U2")),U,11)
"RTN","IBCEU3",98,0)
 I IBPUR,"13"[IBPUR S IBP=1
"RTN","IBCEU3",99,0)
 Q IBP
"RTN","IBCEU3",100,0)
 ;
"RTN","IBCEU3",101,0)
TEXT24(FLD,IBXSAVE,IBXDATA,IBSUB) ; Format the text line of box 24 by fld
"RTN","IBCEU3",102,0)
 ; INPUT:
"RTN","IBCEU3",103,0)
 ;   FLD = the letter of the field in box 24 (A-K)
"RTN","IBCEU3",104,0)
 ;   IBXSAVE = passed by reference = extracted data for the box 24 lines
"RTN","IBCEU3",105,0)
 ;   IBSUB = the subscript of the IBXSAVE array to use.
"RTN","IBCEU3",106,0)
 ;           If null, use "BOX24"
"RTN","IBCEU3",107,0)
 ; OUTPUT:
"RTN","IBCEU3",108,0)
 ;   IBXDATA = passed by reference, set to the correct part of the
"RTN","IBCEU3",109,0)
 ;             text that will print in the field's positions
"RTN","IBCEU3",110,0)
 ;
"RTN","IBCEU3",111,0)
 N Z,IBLINE,IBVAL,IBS,IBE,IBTEXT,IBAUX,IBDAT,IBZ
"RTN","IBCEU3",112,0)
 K IBXDATA
"RTN","IBCEU3",113,0)
 S (IBLINE,Z)=0 S:$G(IBSUB)="" IBSUB="BOX24"
"RTN","IBCEU3",114,0)
 ;
"RTN","IBCEU3",115,0)
 F  S Z=$O(IBXSAVE(IBSUB,Z)) Q:'Z  D
"RTN","IBCEU3",116,0)
 . S IBDAT=$G(IBXSAVE(IBSUB,Z))
"RTN","IBCEU3",117,0)
 . S IBAUX=$G(IBXSAVE(IBSUB,Z,"AUX"))
"RTN","IBCEU3",118,0)
 . S IBTEXT=$G(IBXSAVE(IBSUB,Z,"TEXT"))
"RTN","IBCEU3",119,0)
 . I $S($G(IBAC)=4:$S($D(IBXSAVE(IBSUB,Z,"ARX")):1,1:$D(IBXSAVE(IBSUB,Z,"A"))),$D(IBXSAVE(IBSUB,Z,"RX")):0,1:$G(IBNOSHOW)) S IBTEXT=""
"RTN","IBCEU3",120,0)
 . I FLD="AF" S IBVAL=$P(IBDAT,U),IBS=1,IBE=9
"RTN","IBCEU3",121,0)
 . I FLD="AT" S IBVAL=$S($P(IBDAT,U,2):$P(IBDAT,U,2),1:$P(IBDAT,U)),IBS=10,IBE=18
"RTN","IBCEU3",122,0)
 . I FLD="B" S IBVAL=$P(IBDAT,U,3),IBS=19,IBE=21
"RTN","IBCEU3",123,0)
 . I FLD="C" S IBVAL=$P(IBDAT,U,4),IBS=22,IBE=24
"RTN","IBCEU3",124,0)
 . I FLD="D" S IBVAL=$P(IBDAT,U,5),IBS=25,IBE=41
"RTN","IBCEU3",125,0)
 . I FLD="D1" S IBVAL=$P($$MODLST^IBEFUNC($P(IBDAT,U,10)),",",1,4),IBS=0,IBE=0 ;Text for this area is handled by procedure field
"RTN","IBCEU3",126,0)
 . I FLD="E" S IBVAL=$P(IBDAT,U,7),IBS=42,IBE=48
"RTN","IBCEU3",127,0)
 . I FLD="F" S IBVAL=$P(IBDAT,U,8)*$P(IBDAT,U,9),IBS=49,IBE=58
"RTN","IBCEU3",128,0)
 . I FLD="G" S IBVAL=$S($P(IBDAT,U,4)'=7:$P(IBDAT,U,9),1:$P(IBDAT,U,12)),IBS=59,IBE=61
"RTN","IBCEU3",129,0)
 . I FLD="H" S IBVAL=$P(IBAUX,U,7),IBS=62,IBE=64
"RTN","IBCEU3",130,0)
 . I FLD="I" S IBVAL=$S($P(IBDAT,U,13)=1:"Y",1:""),IBS=65,IBE=67
"RTN","IBCEU3",131,0)
 . I FLD="J" S IBVAL="",IBS=68,IBE=70
"RTN","IBCEU3",132,0)
 . I FLD="K" S IBVAL=$S($G(IBXSAVE("Q"))'="":IBXSAVE("Q"),1:$P(IBAUX,U)),IBS=71,IBE=80
"RTN","IBCEU3",133,0)
 . I IBTEXT'="" D
"RTN","IBCEU3",134,0)
 .. S IBLINE=IBLINE+1,IBXDATA(IBLINE)=IBVAL
"RTN","IBCEU3",135,0)
 .. S IBLINE=IBLINE+1,IBXDATA(IBLINE)=$E(IBTEXT,IBS,IBE),IBXDATA(IBLINE,"T")=1
"RTN","IBCEU3",136,0)
 . E  D
"RTN","IBCEU3",137,0)
 .. S IBLINE=IBLINE+1,IBXDATA(IBLINE)=""
"RTN","IBCEU3",138,0)
 .. S IBLINE=IBLINE+1,IBXDATA(IBLINE)=IBVAL
"RTN","IBCEU3",139,0)
 Q
"RTN","IBCEU3",140,0)
 ;
"RTN","IBCEU3",141,0)
BILLSPEC(IBIFN,IBPRV) ;  Returns the specialty of the provider on bill IBIFN
"RTN","IBCEU3",142,0)
 ; If IBPRV is supplied, returns the data for that provider, otherwise,
"RTN","IBCEU3",143,0)
 ;  returns the specialty of the 'main/required' provider on the bill.
"RTN","IBCEU3",144,0)
 ;  Default = 99 if no valid code found
"RTN","IBCEU3",145,0)
 ; IBPRV = vp of provider (file 200 or 355.93)
"RTN","IBCEU3",146,0)
 N Z,IBSPEC,IBINS,IBDT
"RTN","IBCEU3",147,0)
 S IBSPEC="",IBPRV=$G(IBPRV)
"RTN","IBCEU3",148,0)
 S IBDT=$P($G(^DGCR(399,+IBIFN,"U")),U,1)  ; use statement from date
"RTN","IBCEU3",149,0)
 ;
"RTN","IBCEU3",150,0)
 I $G(IBPRV) D  G SPECQ
"RTN","IBCEU3",151,0)
 . S IBSPEC=$$SPEC^IBCEU(IBPRV,IBDT)
"RTN","IBCEU3",152,0)
 ;
"RTN","IBCEU3",153,0)
 ;Get rendering for professional, attending for institutional,
"RTN","IBCEU3",154,0)
 S IBINS=($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEU3",155,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCEU3",156,0)
 S Z=$S('IBINS:3,1:4)
"RTN","IBCEU3",157,0)
 I $G(IBPRV(Z,1))'="" D
"RTN","IBCEU3",158,0)
 . I $P(IBPRV(Z,1),U,3) S IBSPEC=$$SPEC^IBCEU($P($G(IBPRV(Z,1)),U,3),IBDT) Q:IBSPEC'=""
"RTN","IBCEU3",159,0)
 . S Z0=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEU3",160,0)
 . I Z0,$P($G(^DGCR(399,IBIFN,"PRV",Z0,0)),U,8)'="" S IBSPEC=$P(^(0),U,8)
"RTN","IBCEU3",161,0)
 ;
"RTN","IBCEU3",162,0)
SPECQ I IBSPEC="" S IBSPEC="99"
"RTN","IBCEU3",163,0)
 Q IBSPEC
"RTN","IBCEU3",164,0)
 ;
"RTN","IBCEU3",165,0)
CHAMPVA(IBIFN) ; Returns 1 if the bill IBIFN has a CHAMPVA rate type
"RTN","IBCEU3",166,0)
 Q $E($P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U),1,7)="CHAMPVA"
"RTN","IBCEU3",167,0)
 ;
"RTN","IBCEU3",168,0)
FAC(IBIFN) ; Is facility always to print in box 32 for bill ien IBIFN?
"RTN","IBCEU3",169,0)
 ;  Returns 1 if yes, 0 if no
"RTN","IBCEU3",170,0)
 Q $S($P($G(^DGCR(399,IBIFN,"UF2")),U,2):1,1:$P($G(^IBE(350.9,1,2)),U,12))
"RTN","IBCEU3",171,0)
 ;
"RTN","IBCEU3",172,0)
MCR24K(IBIFN) ;Function returns MEDICARE id# for professional (HCFA 1500) box 24k for bill IBIFN if appropriate
"RTN","IBCEU3",173,0)
 Q $S($$FT^IBCEF(IBIFN)=2&$$MCRONBIL^IBEFUNC(IBIFN):"V"_$$MCRSPEC^IBCEU4(IBIFN,1)_+$$SITE^VASITE(),1:"")
"RTN","IBCEU4")
0^77^B52983076
"RTN","IBCEU4",1,0)
IBCEU4 ;ALB/TMP - EDI UTILITIES ;02-OCT-96
"RTN","IBCEU4",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,155**;21-MAR-94
"RTN","IBCEU4",3,0)
 ;
"RTN","IBCEU4",4,0)
TESTFLD ;  Entrypoint to call to test the output the formatter will
"RTN","IBCEU4",5,0)
 ;  produce for a specific entry in file 364.7
"RTN","IBCEU4",6,0)
 ;
"RTN","IBCEU4",7,0)
 N X,Y,DIC,IBCT
"RTN","IBCEU4",8,0)
 K IBXDATA,IBXSAVE
"RTN","IBCEU4",9,0)
 S IBCT=0
"RTN","IBCEU4",10,0)
 F  W !,$S(IBCT:"Another ",1:""),"Bill: " S DIC="^DGCR(399,",DIC(0)="AEMQ" D ^DIC Q:Y<0  D
"RTN","IBCEU4",11,0)
 . S IBCT=1
"RTN","IBCEU4",12,0)
 . K ^TMP($J),^TMP("IBXSAVE",$J),^TMP("IBXDATA",$J),IBXSAVE,IBXDATA
"RTN","IBCEU4",13,0)
 . D FLDS(+Y)
"RTN","IBCEU4",14,0)
 . F  R !!,"VARIABLE TO DISPLAY (IBXDATA): ",X:DTIME Q:X["^"  S:X="" X="IBXDATA" D
"RTN","IBCEU4",15,0)
 .. I $S($E(X,$L(X))'=")"&($L(X,"(")>1):1,1:$L(X,"(")'=$L(X,")")) W !,"BAD VARIABLE NAME" Q
"RTN","IBCEU4",16,0)
 .. I '$D(@X) W "   *** NO DATA TO DISPLAY" Q
"RTN","IBCEU4",17,0)
 .. N S S S=X
"RTN","IBCEU4",18,0)
 .. W !,X," = ",$G(@X)
"RTN","IBCEU4",19,0)
 .. F  S X=$Q(@X) Q:X'[S  W !,X," = ",@X
"RTN","IBCEU4",20,0)
 .. W !
"RTN","IBCEU4",21,0)
 Q
"RTN","IBCEU4",22,0)
 ;
"RTN","IBCEU4",23,0)
FLDS(IBIFN) ; Extract fields for bill IBIFN
"RTN","IBCEU4",24,0)
 N X,Y,DIC,IB1,IBI,IBAR,IBXPG,IBXLN,IBXCOL,IBXREC,Z,Z0
"RTN","IBCEU4",25,0)
 W !,"Remember to run this for flds that set up pre-requisite data (if any) first",!
"RTN","IBCEU4",26,0)
 ;
"RTN","IBCEU4",27,0)
 S IB1=1
"RTN","IBCEU4",28,0)
 F  W !,$S('IB1:"Another ",1:""),"Form Field: " S DIC="^IBA(364.7,",DIC(0)="AEMQZ" D ^DIC Q:Y<0  D
"RTN","IBCEU4",29,0)
 . S IB1=0
"RTN","IBCEU4",30,0)
 . N IBZXX,IBXIEN
"RTN","IBCEU4",31,0)
 . ; Execute data element logic for fld
"RTN","IBCEU4",32,0)
 . S IBI=+Y,Z=$P($G(^IBA(364.5,+$P(Y(0),U,3),0)),U)
"RTN","IBCEU4",33,0)
 . S Z0=$G(^IBA(364.6,+Y(0),0))
"RTN","IBCEU4",34,0)
 . S IBAR=$G(^IBA(364.5,+$P(Y(0),U,3),2)) S:IBAR="" IBAR="IBXDATA"
"RTN","IBCEU4",35,0)
 . S IBXPG=$P(Z0,U,4),IBXLN=$P(Z0,U,5),IBXCOL=$P(Z0,U,8),IBXREC=1
"RTN","IBCEU4",36,0)
 . D F^IBCEF(Z,"IBZXX","",IBIFN)
"RTN","IBCEU4",37,0)
 . Q:'$D(IBZXX)
"RTN","IBCEU4",38,0)
 . K @IBAR
"RTN","IBCEU4",39,0)
 . M @IBAR=IBZXX
"RTN","IBCEU4",40,0)
 . I $G(^IBA(364.7,IBI,1))'="" S IBXIEN=IBIFN X ^IBA(364.7,IBI,1)
"RTN","IBCEU4",41,0)
 . D CLEAN^DILF
"RTN","IBCEU4",42,0)
 Q
"RTN","IBCEU4",43,0)
 ;
"RTN","IBCEU4",44,0)
DATE(X) ; Convert date in YYYYMMDD or YYMMDD format to MM DD YYYY or MM DD YY
"RTN","IBCEU4",45,0)
 N Z
"RTN","IBCEU4",46,0)
 S Z=X
"RTN","IBCEU4",47,0)
 I $L(X)=8 S Z=$E(X,5,6)_" "_$E(X,7,8)_" "_$E(X,1,4)
"RTN","IBCEU4",48,0)
 I $L(X)=6 S Z=$E(X,3,4)_" "_$E(X,5,6)_" "_$E(X,1,2)
"RTN","IBCEU4",49,0)
 Q Z
"RTN","IBCEU4",50,0)
 ;
"RTN","IBCEU4",51,0)
MCRSPEC(IBIFN,MCR,IBPIEN) ; Returns specialty code for a provider on bill
"RTN","IBCEU4",52,0)
 ; IBIFN = bill ien (file 399)
"RTN","IBCEU4",53,0)
 ; MCR = 1 if 2-digit MCR code should be returned 0 or null=3 digit code
"RTN","IBCEU4",54,0)
 ; IBPIEN = vp of the provider for which to get the
"RTN","IBCEU4",55,0)
 ;   specialty, otherwise it returns specialty code for the 'required'
"RTN","IBCEU4",56,0)
 ;   provider on bill (default is file 200 if no file designated)
"RTN","IBCEU4",57,0)
 ;
"RTN","IBCEU4",58,0)
 N IBZ,IBDT
"RTN","IBCEU4",59,0)
 S IBZ="99" ;default if none found
"RTN","IBCEU4",60,0)
 S IBDT=$P($G(^DGCR(399,+IBIFN,"U")),U,1)  ; use statement from date
"RTN","IBCEU4",61,0)
 I '$G(IBPIEN) D F^IBCEF("N-SPECIALTY CODE","IBZ",,IBIFN)
"RTN","IBCEU4",62,0)
 I $G(IBPIEN) S:$P(IBPIEN,";",2)="" IBPIEN=IBPIEN_";VA(200," S IBZ=$$SPEC^IBCEU(IBPIEN,IBDT)
"RTN","IBCEU4",63,0)
 I '$G(MCR) S IBZ="0"_IBZ
"RTN","IBCEU4",64,0)
 Q IBZ
"RTN","IBCEU4",65,0)
 ;
"RTN","IBCEU4",66,0)
ECODE(IBP,CD) ; Function returns 1 if procedure ien IBP is an E-code
"RTN","IBCEU4",67,0)
 ; CD = returned = the external code, if passed by reference
"RTN","IBCEU4",68,0)
 N Q
"RTN","IBCEU4",69,0)
 S CD=$P($$ICD9^IBACSV(+IBP),U)
"RTN","IBCEU4",70,0)
 Q ($E(CD)="E")
"RTN","IBCEU4",71,0)
 ;
"RTN","IBCEU4",72,0)
BOX82NM(IBIFN,IBZSAVE) ; Returns the data to be printed in form locators 82
"RTN","IBCEU4",73,0)
 ; and 83 on the UB92 for bill ien IBIFN, based on the providers on the
"RTN","IBCEU4",74,0)
 ; bill
"RTN","IBCEU4",75,0)
 ; Pass array IBZSAVE by reference
"RTN","IBCEU4",76,0)
 N Z,IBZ,IBCT,IBA
"RTN","IBCEU4",77,0)
 ; return Providers as such: 
"RTN","IBCEU4",78,0)
 ; IBA = Referring^Operating^Rendering^Attending^Supervisor^^^^Other
"RTN","IBCEU4",79,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBA",,IBIFN) S IBZSAVE("PRV-SSN")=IBA
"RTN","IBCEU4",80,0)
 ;
"RTN","IBCEU4",81,0)
 D F^IBCEF("N-ALL PROVIDERS","IBZ",,IBIFN)
"RTN","IBCEU4",82,0)
 F Z=1:1:6 S IBZSAVE("PRV-82",Z)=""
"RTN","IBCEU4",83,0)
 ; Find Providers and store them (if found) in this order:
"RTN","IBCEU4",84,0)
 ; Attending/Rendering, Operating, Referring, Other
"RTN","IBCEU4",85,0)
 F Z=4,2,1,9 D
"RTN","IBCEU4",86,0)
 . S IBCT=$S(Z=4:0,1:IBCT) Q:IBCT>4
"RTN","IBCEU4",87,0)
 . I Z=4,$$FT^IBCEF(IBIFN)=2 S Z=3    ; Find rendering for HCFA 1500
"RTN","IBCEU4",88,0)
 . I $S(Z=4!(Z=3):0,1:'$O(IBZ(Z,0))) Q
"RTN","IBCEU4",89,0)
 . S IBCT=IBCT+1
"RTN","IBCEU4",90,0)
 . I Z=4,$G(IBZ(4,1))="",$$FT^IBCEF(IBIFN)=3,'$D(^DGCR(399,IBIFN,"PRV")) S IBZ(Z,1)="DEPT OF VETERANS AFFAIRS" ;Default for old bills w/o prv
"RTN","IBCEU4",91,0)
 . I $O(IBZ(Z,1,1)) S IBZSAVE("PRV-82",IBCT)=$G(IBZ(Z,1,2))_" "_$G(IBZ(Z,1,3)),IBZSAVE("PRV-SSN",IBCT)=$P(IBA,U,Z)
"RTN","IBCEU4",92,0)
 . S IBCT=IBCT+1,IBZSAVE("PRV-82",IBCT)=$P($G(IBZ(Z,1,1)),U)_U_$P($G(IBZ(Z,1)),U)
"RTN","IBCEU4",93,0)
 Q
"RTN","IBCEU4",94,0)
 ;
"RTN","IBCEU4",95,0)
STATOK(IBIFN,VALST) ; Returns 1 if status of bill IBIFN is one of the valid
"RTN","IBCEU4",96,0)
 ;  status codes in VALST
"RTN","IBCEU4",97,0)
 N OK,Z
"RTN","IBCEU4",98,0)
 S OK=0
"RTN","IBCEU4",99,0)
 I $G(VALST)'="" S OK=$L(VALST,$P($G(^DGCR(399,IBIFN,0)),U,13))>1
"RTN","IBCEU4",100,0)
 Q OK
"RTN","IBCEU4",101,0)
 ;
"RTN","IBCEU4",102,0)
RXPRLOOK(IBX) ; Do a FM lookup of procedures for RX that can be linked
"RTN","IBCEU4",103,0)
 ; to a specific revenue code (ones that are not already soft-linked)
"RTN","IBCEU4",104,0)
 ; Function returns ien of the 'CP' node multiple for the selected proc
"RTN","IBCEU4",105,0)
 ; OR  "" if none selected or selection is invalid
"RTN","IBCEU4",106,0)
 ;
"RTN","IBCEU4",107,0)
 ; IBX = the procedure code
"RTN","IBCEU4",108,0)
 ;
"RTN","IBCEU4",109,0)
 N IBZ,IBMAX,IBEACH,IBMANY,IBHLP,IBNEXT,Z
"RTN","IBCEU4",110,0)
 S IBMAX=50,IBEACH=5,IBHLP=0
"RTN","IBCEU4",111,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J),^TMP("DIHELP",$J),^TMP("IBLIST",$J)
"RTN","IBCEU4",112,0)
 ;
"RTN","IBCEU4",113,0)
 S IBZ=IBX
"RTN","IBCEU4",114,0)
 I IBX?1"?".E,'$D(DIQUIET) D
"RTN","IBCEU4",115,0)
 . I IBX?2"?".E S IBMAX=50,IBEACH=20 D RXPRHLP(IBMAX,.IBNEXT) S IBHLP=1
"RTN","IBCEU4",116,0)
 . S IBX=""
"RTN","IBCEU4",117,0)
 . ;
"RTN","IBCEU4",118,0)
 I IBX'="" D
"RTN","IBCEU4",119,0)
 . S:$L(IBX)<5 IBX="`"_IBX
"RTN","IBCEU4",120,0)
 . D FIND^DIC(399.0304,","_DA(1)_",","@;.01E","A",IBX,IBMAX,,"I '$$LINKED^IBCEU4(.DA,Y)")
"RTN","IBCEU4",121,0)
 . D XFER(0)
"RTN","IBCEU4",122,0)
 ;
"RTN","IBCEU4",123,0)
 S IBMANY=($G(^TMP("IBLIST",$J,0))>1)
"RTN","IBCEU4",124,0)
 I IBMANY D  ;More than one match found
"RTN","IBCEU4",125,0)
 . I $D(DIQUIET) S ^TMP("IBLIST",$J,0)=0,IBX="" Q
"RTN","IBCEU4",126,0)
 . N IB1,IB2,IBSEL,IBGOT,IBCNT,Q,Q1
"RTN","IBCEU4",127,0)
 . S (IBGOT,IB1,IB2)=0
"RTN","IBCEU4",128,0)
 . F  S IB1=$O(^TMP("IBLIST",$J,2,IB1)) Q:'IB1  D  Q:IBGOT
"RTN","IBCEU4",129,0)
 .. S IB2=IB2+1
"RTN","IBCEU4",130,0)
 .. S Q=$J("",5)_$S('IBHLP:$E(IB2_$J("",5),1,5),1:"")_^TMP("IBLIST",$J,2,IB1)
"RTN","IBCEU4",131,0)
 .. F Q1=0:0 S Q1=$O(^TMP("IBLIST",$J,"ID",IB1,Q1)) Q:'Q1  D
"RTN","IBCEU4",132,0)
 ... I $G(^TMP("IBLIST",$J,"ID",IB1,Q1))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",IB1,Q1) Q
"RTN","IBCEU4",133,0)
 ... I $G(^TMP("IBLIST",$J,"ID",IB1,Q1,"E"))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",IB1,Q1,"E")
"RTN","IBCEU4",134,0)
 .. S IBSEL($S(IB2#IBEACH:IB2#IBEACH,1:IBEACH))=Q
"RTN","IBCEU4",135,0)
 .. I '$O(^TMP("IBLIST",$J,2,IB1))!'(IB1#IBEACH) D
"RTN","IBCEU4",136,0)
 ... M DIR("A")=IBSEL K IBSEL
"RTN","IBCEU4",137,0)
 ... I 'IBHLP D
"RTN","IBCEU4",138,0)
 .... S:$O(^TMP("IBLIST",$J,2,IB1)) DIR("A",6)="Press <RETURN> to see more, '^' to exit this list, OR"
"RTN","IBCEU4",139,0)
 .... S DIR("A")="SELECT 1-"_IB2_": "
"RTN","IBCEU4",140,0)
 .... S DIR(0)="NAO^1:"_IB2_":0"
"RTN","IBCEU4",141,0)
 .... S DIR("?")="Enter your selection for procedure from 1 to "_IB2
"RTN","IBCEU4",142,0)
 ... I IBHLP D
"RTN","IBCEU4",143,0)
 .... I $S(IB2'=+$G(^TMP("IBLIST",$J,0)):1,1:$P($G(^(0)),U,3)) S DIR("A")="'^' TO STOP: ",DIR(0)="EA" Q
"RTN","IBCEU4",144,0)
 .... S Z=0 F  S Z=$O(DIR("A",Z)) Q:'Z  W !,DIR("A",Z)
"RTN","IBCEU4",145,0)
 .... S Y="^" K DIR W ! Q
"RTN","IBCEU4",146,0)
 ... I $D(DIR("A")) D ^DIR K DIR
"RTN","IBCEU4",147,0)
 ... I IBHLP S Y=$S(Y=1:"",1:"^")
"RTN","IBCEU4",148,0)
 ... I Y="" D  Q
"RTN","IBCEU4",149,0)
 .... I $O(^TMP("IBLIST",$J,2,IB1)) Q
"RTN","IBCEU4",150,0)
 .... S IBX=""
"RTN","IBCEU4",151,0)
 .... W:'IBHLP !
"RTN","IBCEU4",152,0)
 .... I $P($G(^TMP("IBLIST",$J,0)),U,3),IB1'<IBMAX D
"RTN","IBCEU4",153,0)
 ..... I 'IBHLP W !!,"There were more than ",IBMAX," matches found.  Please try again with more specific input",! Q
"RTN","IBCEU4",154,0)
 ..... D RXPRHLP(IBMAX,.IBNEXT)
"RTN","IBCEU4",155,0)
 ... I Y["^" S IBX="",IBGOT=1 Q
"RTN","IBCEU4",156,0)
 ... I Y>0 S IBGOT=1,IBX=$G(^TMP("IBLIST",$J,2,+Y)) D RECALL^DILFD(399.0304,+IBX_",",DUZ)
"RTN","IBCEU4",157,0)
 . I 'IBGOT S ^TMP("IBLIST",$J,0)=0
"RTN","IBCEU4",158,0)
 I 'IBMANY,$G(^TMP("IBLIST",$J,0)) D
"RTN","IBCEU4",159,0)
 . N Q,Q1
"RTN","IBCEU4",160,0)
 . S Q=^TMP("IBLIST",$J,2,1)
"RTN","IBCEU4",161,0)
 . F Q1=0:0 S Q1=$O(^TMP("IBLIST",$J,"ID",1,Q1)) Q:'Q1  D
"RTN","IBCEU4",162,0)
 .. I $G(^TMP("IBLIST",$J,"ID",1,Q1))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",1,Q1) Q
"RTN","IBCEU4",163,0)
 .. I $G(^TMP("IBLIST",$J,"ID",1,Q1,"E"))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",1,Q1,"E")
"RTN","IBCEU4",164,0)
 . D EN^DDIOL($J("",16)_Q) S IBX=$G(^TMP("IBLIST",$J,2,1)) D RECALL^DILFD(399.0304,+IBX_",",DUZ)
"RTN","IBCEU4",165,0)
 ;
"RTN","IBCEU4",166,0)
 D CLEAN^DILF
"RTN","IBCEU4",167,0)
 K ^TMP("IBLIST",$J)
"RTN","IBCEU4",168,0)
 Q IBX
"RTN","IBCEU4",169,0)
 ;
"RTN","IBCEU4",170,0)
RXPRHLP(IBMAX,IBNEXT) ; Get list for ?? help
"RTN","IBCEU4",171,0)
 ;
"RTN","IBCEU4",172,0)
 ; IBMAX = The maximum # of entries to extract at once
"RTN","IBCEU4",173,0)
 ; IBNEXT = Contains the value of the index to start at
"RTN","IBCEU4",174,0)
 ;
"RTN","IBCEU4",175,0)
 N IBQ,IBZ
"RTN","IBCEU4",176,0)
 S IBQ=+$O(^TMP("IBLIST",$J,2,""),-1),IBZ=","_DA(1)_","
"RTN","IBCEU4",177,0)
 D LIST^DIC(399.0304,IBZ,"@;.01EI;1E",,IBMAX,.IBNEXT,,"B","I '$$LINKED^IBCEU4(.DA,Y)"),XFER(IBQ)
"RTN","IBCEU4",178,0)
 Q
"RTN","IBCEU4",179,0)
 ;
"RTN","IBCEU4",180,0)
LINKED(DA,Y) ; Function returns 1 if proc already linked to an RX rev code
"RTN","IBCEU4",181,0)
 ; DA = the DA array from the RC multiple
"RTN","IBCEU4",182,0)
 ; Y = the ien of the CP multiple
"RTN","IBCEU4",183,0)
 N Z
"RTN","IBCEU4",184,0)
 S Z=+$O(^DGCR(399,DA(1),"RC","ACP",Y,0))
"RTN","IBCEU4",185,0)
 Q $S(Z:Z'=DA,1:0)
"RTN","IBCEU4",186,0)
 ;
"RTN","IBCEU4",187,0)
XFER(IBQ) ; Transfer DILIST to IBLIST array
"RTN","IBCEU4",188,0)
 ; IBQ = the number of entries already found
"RTN","IBCEU4",189,0)
 N Z,IBZ
"RTN","IBCEU4",190,0)
 S (Z,IBZ)=0
"RTN","IBCEU4",191,0)
 F  S Z=$O(^TMP("DILIST",$J,2,Z)) Q:'Z  S IBZ=IBZ+1,^TMP("IBLIST",$J,2,IBZ+IBQ)=^TMP("DILIST",$J,2,Z) M ^TMP("IBLIST",$J,"ID",IBZ+IBQ)=^TMP("DILIST",$J,"ID",Z)
"RTN","IBCEU4",192,0)
 ;
"RTN","IBCEU4",193,0)
 I $D(^TMP("DILIST",$J,0)) S ^TMP("IBLIST",$J,0)=^TMP("DILIST",$J,0)
"RTN","IBCEU4",194,0)
 S $P(^TMP("IBLIST",$J,0),U)=IBQ+IBZ
"RTN","IBCEU4",195,0)
 Q
"RTN","IBCEU4",196,0)
 ;
"RTN","IBCEU4",197,0)
NOREV(DA,IBRX) ; Returns 1 if no other revenue code on bill DA(1)
"RTN","IBCEU4",198,0)
 ; is linked to prescription entry IBRX
"RTN","IBCEU4",199,0)
 N X,Z
"RTN","IBCEU4",200,0)
 S X=1,Z=0 F  S Z=$O(^DGCR(399,DA(1),"RC",Z)) Q:'Z  I DA'=Z,$P($G(^(Z,0)),U,11)=IBRX S X=0 Q
"RTN","IBCEU4",201,0)
 Q X
"RTN","IBCEU4",202,0)
 ;
"RTN","IBCEU4",203,0)
ASKRX(DA) ; Returns the selected RX entry in file 362.4
"RTN","IBCEU4",204,0)
 N DIR,X,Y
"RTN","IBCEU4",205,0)
 S DIR(0)="PAO^IBA(362.4,"
"RTN","IBCEU4",206,0)
 S DIR("A")="  RX: ",DIR("B")=$P($G(^IBA(362.4,+$P($G(^DGCR(399,DA(1),"RC",DA,0)),U,11),0)),U)
"RTN","IBCEU4",207,0)
 S DIR("S")="I $P(^(0),U,2)=DA(1),$$NOREV^IBCEU4(.DA,Y)"
"RTN","IBCEU4",208,0)
 D ^DIR K DIR
"RTN","IBCEU4",209,0)
 Q $S(Y>0:+Y,1:"")
"RTN","IBCEU4",210,0)
 ;
"RTN","IBCEU4",211,0)
SLF(IBIFN) ;  Returns 1 if Attending/Rendering provider id is SLF000
"RTN","IBCEU4",212,0)
 N IB,IBZ
"RTN","IBCEU4",213,0)
 S IB=0
"RTN","IBCEU4",214,0)
 D F^IBCEF("N-ATT/REND PROVIDER ID","IBZ",,IBIFN)
"RTN","IBCEU4",215,0)
 S:$G(IBZ)="SLF000" IB=1
"RTN","IBCEU4",216,0)
 Q IB
"RTN","IBCEU4",217,0)
 ;
"RTN","IBCEU6")
0^56^B9821242
"RTN","IBCEU6",1,0)
IBCEU6 ;ALB/ESG - EDI UTILITIES FOR EOB PROCESSING ;29-JUL-2003
"RTN","IBCEU6",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBCEU6",3,0)
 ;
"RTN","IBCEU6",4,0)
 Q
"RTN","IBCEU6",5,0)
 ;
"RTN","IBCEU6",6,0)
COBLINE(IBIFN,IBI,IBXDATA,SORT,IBXTRA) ; Extract all COB data for line item
"RTN","IBCEU6",7,0)
 ;  from file 361.1 (EOB), subfile 15 into IBXDATA(IBI,"COB",n)
"RTN","IBCEU6",8,0)
 ;
"RTN","IBCEU6",9,0)
 ; IBIFN = bill entry #
"RTN","IBCEU6",10,0)
 ; IBI = VistA outbound line item #
"RTN","IBCEU6",11,0)
 ; IBXDATA = array returned with COB line item data/pass by reference
"RTN","IBCEU6",12,0)
 ; SORT = flag that determines whether the data should be sorted for
"RTN","IBCEU6",13,0)
 ;        output for the 837 record ('PR' group always there and has
"RTN","IBCEU6",14,0)
 ;        a reason code for deductible first and co-insurance second -
"RTN","IBCEU6",15,0)
 ;        even if they are 0).
"RTN","IBCEU6",16,0)
 ;        1 = sort, 0 = no sort needed
"RTN","IBCEU6",17,0)
 ;
"RTN","IBCEU6",18,0)
 ;   Returns IBXDATA(IBI,"COB",COB,n) with COB data for each line item
"RTN","IBCEU6",19,0)
 ;      found in an accepted EOB for the bill and = the '0' node data of
"RTN","IBCEU6",20,0)
 ;      file 361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEU6",21,0)
 ;         -- AND --
"RTN","IBCEU6",22,0)
 ;    IBXDATA(IBI,"COB",COB,n,z,p)=
"RTN","IBCEU6",23,0)
 ;           the data on the '0' node for each subordinate entry of file
"RTN","IBCEU6",24,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837 output)
"RTN","IBCEU6",25,0)
 ;               z = this is either piece 1 of the 0-node for subfile
"RTN","IBCEU6",26,0)
 ;                   361.1151 (ADJUSTMENTS)
"RTN","IBCEU6",27,0)
 ;                          OR
"RTN","IBCEU6",28,0)
 ;                   for the 837 COB 'sorted' output, this will be ' PR'
"RTN","IBCEU6",29,0)
 ;                    for the forced/extracted entries for deductible
"RTN","IBCEU6",30,0)
 ;                    and co-insurance so they are always output first
"RTN","IBCEU6",31,0)
 ;                    The space needs to be stripped off on output
"RTN","IBCEU6",32,0)
 ;         -- AND --
"RTN","IBCEU6",33,0)
 ; IBXTRA = array returned if passed by reference if line is found
"RTN","IBCEU6",34,0)
 ;          associated with line IBI due to bundling/unbundling
"RTN","IBCEU6",35,0)
 ;          IBXTRA("ALL",x,paid procedure)=COB SEQ ^ seq # corresponding
"RTN","IBCEU6",36,0)
 ;                        to subscript n in IBXDATA(,"COB",COB,n
"RTN","IBCEU6",37,0)
 ;                (x = line #-original proc-service dt)
"RTN","IBCEU6",38,0)
 ;
"RTN","IBCEU6",39,0)
 N A,B,B1,C,D,IBDATA,IB0,IB00,IBA,IBB,IBDED,IBCOI,IBS,IBN,IBDT
"RTN","IBCEU6",40,0)
 ;
"RTN","IBCEU6",41,0)
 ; If multiple EOB's reference this line for the same COB sequence,
"RTN","IBCEU6",42,0)
 ;   extract only the last one marked accepted containing this line item.
"RTN","IBCEU6",43,0)
 ;
"RTN","IBCEU6",44,0)
 S A=0
"RTN","IBCEU6",45,0)
 F  S A=$O(^IBM(361.1,"B",IBIFN,A)) Q:'A  D
"RTN","IBCEU6",46,0)
 . I '$$EOBELIG^IBCEU1(A) Q   ; eob not eligible for secondary claim
"RTN","IBCEU6",47,0)
 . S IBA=0
"RTN","IBCEU6",48,0)
 . S IBDATA=$G(^IBM(361.1,A,0))
"RTN","IBCEU6",49,0)
 . S IBS=$P(IBDATA,U,15)      ; insurance sequence#
"RTN","IBCEU6",50,0)
 . S IBN=+$O(IBXDATA(IBI,"COB",IBS,0))
"RTN","IBCEU6",51,0)
 . I IBN D  Q:IBN  ; check for later EOB
"RTN","IBCEU6",52,0)
 .. I $G(IBDT(IBI,IBS)),IBDT(IBI,IBS)<$P(IBDATA,U,6) K IBDT(IBI,IBS),IBXDATA(IBI,"COB",IBS) S IBN=0
"RTN","IBCEU6",53,0)
 . ;
"RTN","IBCEU6",54,0)
 . S IBDT(IBI,IBS)=$P(IBDATA,U,6)
"RTN","IBCEU6",55,0)
 . S B=0
"RTN","IBCEU6",56,0)
 . F  S B=$O(^IBM(361.1,A,15,"AC",IBI,B)) Q:'B  S IB0=$G(^IBM(361.1,A,15,B,0)),IB0=IB0_U_IBDT(IBI,IBS) D
"RTN","IBCEU6",57,0)
 .. Q:$TR(IB0,U)=""
"RTN","IBCEU6",58,0)
 .. S IBA=IBA+1,IBXDATA(IBI,"COB",IBS,IBA)=IBI_U_IB0
"RTN","IBCEU6",59,0)
 .. ;
"RTN","IBCEU6",60,0)
 .. ; capture the modifiers (361.1152)
"RTN","IBCEU6",61,0)
 .. I $D(^IBM(361.1,A,15,B,2)) M IBXDATA(IBI,"COBMOD")=^IBM(361.1,A,15,B,2)
"RTN","IBCEU6",62,0)
 .. I $P(IB0,U,15)'="" D  ;Line involved in bundling/unbundling
"RTN","IBCEU6",63,0)
 ... N Z0 S Z0=IBI_"-"_$P(IB0,U,15)_"-"_$P(IB0,U,16)
"RTN","IBCEU6",64,0)
 ... S IBXTRA("ALL",Z0,$P(IB0,U,4))=IBS_U_IBA,$P(IBXDATA(IBI,"COB",IBS,IBA),U)=""
"RTN","IBCEU6",65,0)
 .. S C=0,(IBDED(IBA),IBCOI(IBA))="0^0" ;Assume 0 if not found in list
"RTN","IBCEU6",66,0)
 .. F  S C=$O(^IBM(361.1,A,15,B,1,C)) Q:'C  S IB0=$G(^(C,0)) D
"RTN","IBCEU6",67,0)
 ... S D=0
"RTN","IBCEU6",68,0)
 ... F  S D=$O(^IBM(361.1,A,15,B,1,C,1,D)) Q:'D  S IB00=$S($G(SORT):$P($G(^(D,0)),U,1,3),1:$G(^(D,0))) D
"RTN","IBCEU6",69,0)
 .... I $G(SORT),$P(IB0,U)="PR" D  ;Check for deductible or co-ins
"RTN","IBCEU6",70,0)
 ..... I 'IBDED(IBA),$P(IB00,U)=1 S IBDED(IBA)=IB00,IB00="" Q
"RTN","IBCEU6",71,0)
 ..... I 'IBCOI(IBA),$P(IB00,U)=2 S IBCOI(IBA)=IB00,IB00="" Q
"RTN","IBCEU6",72,0)
 .... I $TR(IB00,U)'="" S IBB=$O(IBXDATA(IBI,"COB",IBS,IBA,$P(IB0,U),""),-1)+1,IBXDATA(IBI,"COB",IBS,IBA,$P(IB0,U),IBB)=IB00
"RTN","IBCEU6",73,0)
 .. Q:'$G(SORT)
"RTN","IBCEU6",74,0)
 .. S IBXDATA(IBI,"COB",IBS,IBA," PR",1)=IBDED(IBA)
"RTN","IBCEU6",75,0)
 .. S IBXDATA(IBI,"COB",IBS,IBA," PR",2)=IBCOI(IBA)
"RTN","IBCEU6",76,0)
 Q
"RTN","IBCEU6",77,0)
 ;
"RTN","IBCEXTR2")
0^73^B6246450
"RTN","IBCEXTR2",1,0)
IBCEXTR2 ;ALB/JEH - IB EXTRACT STATUS MANAGEMENT  ;01/14/00
"RTN","IBCEXTR2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155**;21-MAR-1994
"RTN","IBCEXTR2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEXTR2",4,0)
 ;This routine contains the action items to cancel,clone and authorize
"RTN","IBCEXTR2",5,0)
 ;claims held in a ready for extract statue due to EDI/MRA parameters
"RTN","IBCEXTR2",6,0)
 ;being turned off.
"RTN","IBCEXTR2",7,0)
 ;
"RTN","IBCEXTR2",8,0)
CANCEL ;Cancel bill
"RTN","IBCEXTR2",9,0)
 N IBIFN,IBDA,IB364,IBCEAUTO
"RTN","IBCEXTR2",10,0)
 S IBCEAUTO=1
"RTN","IBCEXTR2",11,0)
 ;
"RTN","IBCEXTR2",12,0)
 ; Check for security key
"RTN","IBCEXTR2",13,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CANCELQ
"RTN","IBCEXTR2",14,0)
 . D FULL^VALM1
"RTN","IBCEXTR2",15,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCEXTR2",16,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCEXTR2",17,0)
 . D PAUSE^VALM1
"RTN","IBCEXTR2",18,0)
 . Q
"RTN","IBCEXTR2",19,0)
 ;
"RTN","IBCEXTR2",20,0)
 D SEL(.IBDA,1)
"RTN","IBCEXTR2",21,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IB364=$P($G(IBDA(+IBDA)),U,2)
"RTN","IBCEXTR2",22,0)
 I 'IBIFN G CANCELQ
"RTN","IBCEXTR2",23,0)
 D CANCEL^IBCEM3(.IBDA,IBIFN,IB364)
"RTN","IBCEXTR2",24,0)
 D PAUSE^VALM1
"RTN","IBCEXTR2",25,0)
CANCELQ S VALMBCK="R"
"RTN","IBCEXTR2",26,0)
 I $G(IBDA)'="" D BLD^IBCEXTR1
"RTN","IBCEXTR2",27,0)
 Q
"RTN","IBCEXTR2",28,0)
 ;
"RTN","IBCEXTR2",29,0)
CPYCLN ;Cancel/clone/authorize bill
"RTN","IBCEXTR2",30,0)
 N IBIFN,IBDA,IB364,IBCEAUTO,IBNIEN,IBYY
"RTN","IBCEXTR2",31,0)
 S IBCEAUTO=1
"RTN","IBCEXTR2",32,0)
 ;
"RTN","IBCEXTR2",33,0)
 ; Check for security key
"RTN","IBCEXTR2",34,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CPYCLNQ
"RTN","IBCEXTR2",35,0)
 . D FULL^VALM1
"RTN","IBCEXTR2",36,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCEXTR2",37,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCEXTR2",38,0)
 . D PAUSE^VALM1
"RTN","IBCEXTR2",39,0)
 . Q
"RTN","IBCEXTR2",40,0)
 ;
"RTN","IBCEXTR2",41,0)
 D SEL(.IBDA,1)
"RTN","IBCEXTR2",42,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IB364=$P($G(IBDA(+IBDA)),U,2)
"RTN","IBCEXTR2",43,0)
 I 'IBIFN G CPYCLNQ
"RTN","IBCEXTR2",44,0)
 D COPYCLON^IBCECOB2(IBIFN,IB364,.IBDA) ;Cancel/copy bill
"RTN","IBCEXTR2",45,0)
 I '$G(IBNIEN) D PAUSE^VALM1 G CPYCLNQ
"RTN","IBCEXTR2",46,0)
 S IBIFN=IBNIEN
"RTN","IBCEXTR2",47,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="[IB STATUS]",IBYY="@902" D ^DIE K DIE,DA,DR,IBNIEN ;Authorize bill quietly
"RTN","IBCEXTR2",48,0)
 W !,"Authorizing bill..."
"RTN","IBCEXTR2",49,0)
 D ARONLY^IBCB1(IBIFN) ;Pass to AR as new bill
"RTN","IBCEXTR2",50,0)
 D PAUSE^VALM1
"RTN","IBCEXTR2",51,0)
 ;
"RTN","IBCEXTR2",52,0)
CPYCLNQ ;
"RTN","IBCEXTR2",53,0)
 S VALMBCK="R"
"RTN","IBCEXTR2",54,0)
 K IBCEAUTO
"RTN","IBCEXTR2",55,0)
 Q
"RTN","IBCEXTR2",56,0)
 ;
"RTN","IBCEXTR2",57,0)
SEL(IBDA,ONE) ;Select entry from List Manager
"RTN","IBCEXTR2",58,0)
 ;D FULL^VALM1
"RTN","IBCEXTR2",59,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCEXTR2",60,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  S IBDA(IBDA)=$P($G(^TMP("IBCERP61",$J,IBDA)),U,2,3)
"RTN","IBCEXTR2",61,0)
 Q
"RTN","IBCFP")
0^78^B12725454
"RTN","IBCFP",1,0)
IBCFP ;ALB/ARH - PRINT AUTHORIZED BILLS IN ORDER ;6-DEC-94
"RTN","IBCFP",2,0)
 ;;2.0;INTEGRATED BILLING;**41,54,137,155**;21-MAR-94
"RTN","IBCFP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCFP",4,0)
 ;
"RTN","IBCFP",5,0)
 ;
"RTN","IBCFP",6,0)
 S IBPAR1=$G(^IBE(350.9,1,1))
"RTN","IBCFP",7,0)
 S IBFT=$G(^IBE(353,+$P(IBPAR1,U,26),0)) I $P(IBFT,U,2)="" W !,"Default printer in billing not defined for the "_$P(IBFT,U,1)_", none will print!",!
"RTN","IBCFP",8,0)
 I +$P(IBPAR1,U,22),$P($G(^IBE(353,+$$FNT^IBCU3("HCFA 1500"),0)),U,2)="" W !,"Default printer in billing not defined for the HCFA 1500, none will print!",!
"RTN","IBCFP",9,0)
 I '$D(^DGCR(399,"AST")) W !,"There are no Authorized but not Printed bills to print!" G END
"RTN","IBCFP",10,0)
 ;
"RTN","IBCFP",11,0)
 S IBS="",IBZ="Z:ZIP;I:INSURANCE COMPANY NAME;P:PATIENT NAME;"
"RTN","IBCFP",12,0)
ORDER S DIR("?")="This option prints all non-transmittable bills with a Status of Authorized in the order requested.  The printed bills may be sorted by: Zip Code, Insurance Company Name, and Patient name."
"RTN","IBCFP",13,0)
1 S DIR("A")="First Sort Bills By",DIR(0)="SOB^"_IBZ D ^DIR I $D(DIRUT) G END
"RTN","IBCFP",14,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0) S IBX=$P($P(IBZ,Y_":",2),";",1)
"RTN","IBCFP",15,0)
 ;
"RTN","IBCFP",16,0)
 S DIR("?",1)="Enter the field that the bills should be sorted on within "_IBX_".  Press return if the order already entered is sufficient.",DIR("?",2)=""
"RTN","IBCFP",17,0)
2 S DIR("A")="Then Sort Bills By",DIR(0)="SOB^"_IBZ D ^DIR I Y'="",$D(DIRUT) G END
"RTN","IBCFP",18,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0) G:Y="" BEG S IBY=$P($P(IBZ,Y_":",2),";",1)
"RTN","IBCFP",19,0)
 ;
"RTN","IBCFP",20,0)
 S DIR("?",1)="Enter the field that the bills should be sorted on within "_IBX_" and "_IBY_".  Press return if the order already entered is sufficient."
"RTN","IBCFP",21,0)
3 S DIR("A")="Then Sort Bills By",DIR(0)="SOB^"_IBZ D ^DIR K DIR I Y'="",$D(DIRUT) G END
"RTN","IBCFP",22,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0)
"RTN","IBCFP",23,0)
 ;
"RTN","IBCFP",24,0)
BEG S DIR("A")="Begin printing bills",DIR("?",1)="  Enter YES to begin printing all authorized non-transmittable bills."
"RTN","IBCFP",25,0)
 S DIR("?",2)="  Enter NO to quit this option."
"RTN","IBCFP",26,0)
 S DIR("?")="  Enter ?? to list the authorized bills that will be printed."
"RTN","IBCFP",27,0)
 W ! S DIR(0)="YBO",DIR("??")="^D DISPX^IBCF" D ^DIR K DIR I 'Y W "... bills not printed!" G END
"RTN","IBCFP",28,0)
 ;
"RTN","IBCFP",29,0)
 S ZTRTN="QTASK^IBCFP1",ZTDESC="BATCH PRINT AUTHORIZED THIRD PARTY BILLS",ZTIO="",ZTSAVE("IBS")="" D ^%ZTLOAD
"RTN","IBCFP",30,0)
 I $D(ZTSK) W !," ... queued"
"RTN","IBCFP",31,0)
 ;
"RTN","IBCFP",32,0)
END K DIR,IBX,IBY,IBZ,IBS,IBPAR1,IBFT,Y,X,DIRUT ; end of interactive part
"RTN","IBCFP",33,0)
 Q
"RTN","IBCFP",34,0)
 ;
"RTN","IBCFP",35,0)
 ;
"RTN","IBCFP",36,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCFP",37,0)
 ;
"RTN","IBCFP",38,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCFP",39,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCFP",40,0)
 Q +$G(ZTSTOP)
"RTN","IBCFP1")
0^45^B33019277
"RTN","IBCFP1",1,0)
IBCFP1 ;ALB/ARH - PRINT AUTHORIZED BILLS IN ORDER ;6-DEC-94
"RTN","IBCFP1",2,0)
 ;;2.0;INTEGRATED BILLING;**54,52,80,121,51,137,155**;21-MAR-94
"RTN","IBCFP1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCFP1",4,0)
 ;
"RTN","IBCFP1",5,0)
 ;
"RTN","IBCFP1",6,0)
QTASK ; 1st part sorts authorized bills into order requested by bill form type then queues off 1 job for each type to print bills
"RTN","IBCFP1",7,0)
 ;
"RTN","IBCFP1",8,0)
 D GCLEAN S IBXP=$$FMADD^XLFDT(DT,1)_"^"_DT_"^BATCH PRINT BILLS "_$$HTE^XLFDT($H)_" by "_$S($D(^VA(200,+$G(DUZ),0)):$P(^(0),"^"),1:"Unknown User")
"RTN","IBCFP1",9,0)
SORT ;sort authorized bills by form type and requested sort order (notice bill addendums only print for HCFA 1500's)
"RTN","IBCFP1",10,0)
 S (IBQ,IBIFN)=0 F  S IBIFN=$O(^DGCR(399,"AST",3,IBIFN)) Q:'IBIFN!IBQ  D  I $$STOP S IBQ=1 Q
"RTN","IBCFP1",11,0)
 . Q:+$$TXMT^IBCEF4(IBIFN)=1  ;Exclude transmittable bills
"RTN","IBCFP1",12,0)
 . S IBFT=$$FT^IBCU3(IBIFN) Q:$P($G(^IBE(353,+IBFT,0)),U,2)=""  I IBFT'?1N Q  ;No device for form type
"RTN","IBCFP1",13,0)
 . S IBX=$G(^DGCR(399,IBIFN,0)),IBPAT=$P($G(^DPT(+$P(IBX,U,2),0)),U,1) Q:$P(IBX,U,13)'=3
"RTN","IBCFP1",14,0)
 . S IBZIP=$P($G(^DGCR(399,IBIFN,"M")),U,9),IBINS=$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"MP")),0)),U,1)
"RTN","IBCFP1",15,0)
 . S IBX=IBZIP_U_IBINS_U_IBPAT,IBS1=$P(IBX,U,$E(IBS,1))_" ",IBS2=$P(IBX,U,$E(IBS,2))_" ",IBS3=$P(IBX,U,$E(IBS,3))_" "
"RTN","IBCFP1",16,0)
 . S ^XTMP("IBCFP"_IBFT,0)=IBXP,^XTMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCFP1",17,0)
 . S XIBFT=IBFT  ;save off curent value of IBFT
"RTN","IBCFP1",18,0)
 . ;
"RTN","IBCFP1",19,0)
 . ; set MRA queue to print
"RTN","IBCFP1",20,0)
 . S IBFT=$$FNT^IBCU3("MRA")
"RTN","IBCFP1",21,0)
 . ; Merge the data from ^XTMP("IBCFP" queue, into "IBMRA" queue
"RTN","IBCFP1",22,0)
 . I +IBFT,$P($G(^IBE(353,+IBFT,0)),U,2)'="" S ^XTMP("IBMRA"_IBFT,0)=IBXP M ^XTMP("IBMRA"_IBFT,$J)=^XTMP("IBCFP"_XIBFT,$J)
"RTN","IBCFP1",23,0)
 . ;
"RTN","IBCFP1",24,0)
 . ; Print Bill Addendums only for HCFA 1500's
"RTN","IBCFP1",25,0)
 . I $$FTN^IBCU3(XIBFT)'["HCFA 1500" Q
"RTN","IBCFP1",26,0)
 . S IBFT=$$FNT^IBCU3("BILL ADDENDUM")
"RTN","IBCFP1",27,0)
 . I +IBFT,$P($G(^IBE(353,+IBFT,0)),U,2)'="" S ^XTMP("IBCFP"_IBFT,0)=IBXP,^XTMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCFP1",28,0)
 . Q
"RTN","IBCFP1",29,0)
 K IBIFN,IBFT,XIBFT,IBX,IBY,IBPAT,IBZIP,IBINS,IBS1,IBS2,IBS3,IBS,IBXP
"RTN","IBCFP1",30,0)
 ;
"RTN","IBCFP1",31,0)
QUEUE ; starts a queued job for each form type that an authorized bill was found for
"RTN","IBCFP1",32,0)
 ; no form types without defined device
"RTN","IBCFP1",33,0)
 I IBQ D GCLEAN ;queued job stopped
"RTN","IBCFP1",34,0)
 I 'IBQ D
"RTN","IBCFP1",35,0)
 . ; queue a job for each form type
"RTN","IBCFP1",36,0)
 . S IBIX="IBCFP" F  S IBIX=$O(^XTMP(IBIX)) Q:(IBIX'?1"IBCFP"1N)  I $D(^XTMP(IBIX,$J)) S IBFT=$E(IBIX,6) D
"RTN","IBCFP1",37,0)
 . . S ZTIO=$P($G(^IBE(353,+IBFT,0)),U,2),IBFTP=IBIX,IBJ=$J
"RTN","IBCFP1",38,0)
 . . S ZTDTH=$H,ZTSAVE("IBFTP")="",ZTSAVE("IBFT")="",ZTSAVE("IBJ")=""
"RTN","IBCFP1",39,0)
 . . S ZTDESC="BATCH PRINTING "_$$FTN^IBCU3(+IBFT),ZTRTN="QBILL^IBCFP1" D ^%ZTLOAD
"RTN","IBCFP1",40,0)
 . ; Also queue a job to print MRA's, if any, for each bill
"RTN","IBCFP1",41,0)
 . S IBIX="IBMRA" F  S IBIX=$O(^XTMP(IBIX)) Q:(IBIX'?1"IBMRA"1N)  I $D(^XTMP(IBIX,$J)) S IBFT=$E(IBIX,6) D
"RTN","IBCFP1",42,0)
 . . S ZTIO=$P($G(^IBE(353,+IBFT,0)),U,2),IBFTP=IBIX,IBJ=$J
"RTN","IBCFP1",43,0)
 . . S ZTDTH=$H,ZTSAVE("IBFTP")="",ZTSAVE("IBFT")="",ZTSAVE("IBJ")=""
"RTN","IBCFP1",44,0)
 . . S ZTDESC="BATCH PRINTING MRA'S",ZTRTN="QMRA^IBCEMU2" D ^%ZTLOAD
"RTN","IBCFP1",45,0)
 K IBIX,IBY,IBFTP,IBJ ; end of first queued part
"RTN","IBCFP1",46,0)
 Q
"RTN","IBCFP1",47,0)
 ;
"RTN","IBCFP1",48,0)
GCLEAN ; Clean up XTMP global for $J of IBCFP and IBMRA entries
"RTN","IBCFP1",49,0)
 N I
"RTN","IBCFP1",50,0)
 S I="IBCFP" F  S I=$O(^XTMP(I)) Q:I'?1"IBCFP"1N.N  K ^XTMP(I)
"RTN","IBCFP1",51,0)
 S I="IBMRA" F  S I=$O(^XTMP(I)) Q:I'?1"IBMRA"1N.N  K ^XTMP(I)
"RTN","IBCFP1",52,0)
 Q
"RTN","IBCFP1",53,0)
 ;
"RTN","IBCFP1",54,0)
QBILL ; 2nd queued part will print all authorized bills for a specific form type
"RTN","IBCFP1",55,0)
 N IBF,IBFORM,IBPNT
"RTN","IBCFP1",56,0)
 S IBF=$P($G(^IBE(353,+IBFT,2)),U,8),IBPNT=1
"RTN","IBCFP1",57,0)
 I IBF'="" S IBFORM=IBF D FORMOUT^IBCEFG7 Q  ;call formatter
"RTN","IBCFP1",58,0)
 ;
"RTN","IBCFP1",59,0)
QB1 ; Entrypoint for output logic of formatter
"RTN","IBCFP1",60,0)
 ; pass in "^XTMP(IBFTP,IBJ)" sorted array of bills to print
"RTN","IBCFP1",61,0)
 ;         IBFTP = "IBCFP"_(form type) subscript indicating which part of array to print
"RTN","IBCFP1",62,0)
 ;         IBPNT = reprint status of bill (1-original, 0-copy, etc)
"RTN","IBCFP1",63,0)
 ;         IBFT  = IFN of bill form type to be printed
"RTN","IBCFP1",64,0)
 ;         IBJ   = $J of starting job (for when multiple print jobs might be queued)
"RTN","IBCFP1",65,0)
 ;                 if a single bill printed and queued, IBJ will be null
"RTN","IBCFP1",66,0)
 S:$G(IBJ)="" IBJ=$J
"RTN","IBCFP1",67,0)
 S:'$D(IBPNT) IBPNT=1
"RTN","IBCFP1",68,0)
 N IBCT,IBBN,IBS1,IBS2,IBS3,IBQ,IBIFN
"RTN","IBCFP1",69,0)
 S (IBCT,IBQ,IBS1)=0
"RTN","IBCFP1",70,0)
 S ZTREQ="@"
"RTN","IBCFP1",71,0)
 F  S IBS1=$O(^XTMP(IBFTP,IBJ,IBS1)) Q:IBS1=""!IBQ  D
"RTN","IBCFP1",72,0)
 . S IBS2=0 F  S IBS2=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2)) Q:IBS2=""!IBQ  D
"RTN","IBCFP1",73,0)
 .. S IBS3=0 F  S IBS3=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3)) Q:IBS3=""!IBQ  D
"RTN","IBCFP1",74,0)
 ... S IBBN=0 F  S IBBN=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3,IBBN)) Q:IBBN=""  D  I $$STOP S IBQ=1 Q
"RTN","IBCFP1",75,0)
 .... D ROUT(IBFT,IBPNT,IBBN,.IBCT)
"RTN","IBCFP1",76,0)
 K ^XTMP(IBFTP,IBJ) ; end of last queued part
"RTN","IBCFP1",77,0)
 Q
"RTN","IBCFP1",78,0)
 ;
"RTN","IBCFP1",79,0)
ROUT(IBFT,IBPNT,IBIFN,IBCT,IBF) ; sub procedure to protect variables with new
"RTN","IBCFP1",80,0)
 N IBBN,IBS1,IBS2,IBS3,IBQ,IBFTP,IBJ,IBXPARM,Z
"RTN","IBCFP1",81,0)
 D BILLPARM^IBCEFG0(IBIFN,.IBXPARM)
"RTN","IBCFP1",82,0)
 S IBF=$S($G(IBF)'="":IBF,1:$P($G(^IBE(353,+IBFT,2)),U,8)),IBCT=$G(IBCT)+1
"RTN","IBCFP1",83,0)
 I IBF'="" S Z=$$EXTRACT^IBCEFG(IBF,IBIFN,.IBCT,.IBXPARM) G REX
"RTN","IBCFP1",84,0)
 I IBFT=1 S DFN=$P($G(^DGCR(399,+IBIFN,0)),U,2) D ENP^IBCF1 W @IOF G REX
"RTN","IBCFP1",85,0)
 I IBFT=2 D EN^IBCF2 W @IOF G REX
"RTN","IBCFP1",86,0)
 I $$FTN^IBCU3(+IBFT)="UB-92" D EN^IBCF3 W @IOF G REX
"RTN","IBCFP1",87,0)
 I $$FTN^IBCU3(+IBFT)="BILL ADDENDUM" I +$$BILLAD^IBCF4(IBIFN) D EN^IBCF4 W @IOF G REX
"RTN","IBCFP1",88,0)
REX Q
"RTN","IBCFP1",89,0)
 ;
"RTN","IBCFP1",90,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCFP1",91,0)
 ;
"RTN","IBCFP1",92,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCFP1",93,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCFP1",94,0)
 Q +$G(ZTSTOP)
"RTN","IBCFP1",95,0)
 ;
"RTN","IBCFP1",96,0)
FORMPRE ; Set up environment for bill message
"RTN","IBCFP1",97,0)
 K ^TMP("IBXMSG",$J),^TMP("IBXERR",$J),IBXERR,^TMP("IBXDATA",$J)
"RTN","IBCFP1",98,0)
 Q
"RTN","IBCFP1",99,0)
 ;
"RTN","IBCFP1",100,0)
FORMPOST ; Clean up
"RTN","IBCFP1",101,0)
 I $O(^TMP("IBXERR",$J,"")) D  ;Error messages to mail group
"RTN","IBCFP1",102,0)
 .N XMTO,XMBODY,XMDUZ,XMSUBJ,IBCT,IBERR
"RTN","IBCFP1",103,0)
 .K ^TMP("IBXMSG",$J)
"RTN","IBCFP1",104,0)
 .S ^TMP("IBXMSG",$J,1)="The following bill(s) were not printed due to errors indicated.",^(2)="Once the errors are corrected, the bill(s) can be printed again.",^(3)=" "
"RTN","IBCFP1",105,0)
 .;
"RTN","IBCFP1",106,0)
 .S IBERR=0,IBCT=3
"RTN","IBCFP1",107,0)
 .F  S IBERR=$O(^TMP("IBXERR",$J,IBERR)) Q:'IBERR  S IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)="Bill #: "_$P($G(^DGCR(399,IBERR,0)),U),IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)=$J("",5)_^TMP("IBXERR",$J,IBERR)
"RTN","IBCFP1",108,0)
 .S XMBODY="^TMP(""IBXMSG"","_$J_")" D ERRMSG(XMBODY)
"RTN","IBCFP1",109,0)
 .K ^TMP("IBXMSG",$J),^TMP($J,"IBICT")
"RTN","IBCFP1",110,0)
 ;
"RTN","IBCFP1",111,0)
 K ^TMP("IBXERR",$J),IBXERR
"RTN","IBCFP1",112,0)
 D CLEAN^DILF
"RTN","IBCFP1",113,0)
 Q
"RTN","IBCFP1",114,0)
 ;
"RTN","IBCFP1",115,0)
ENTPRE ; Run before processing a bill entry
"RTN","IBCFP1",116,0)
 K IBXSAVE,IBXERR,^UTILITY("VAPA",$J),^TMP("IBXSAVE",$J),^TMP($J),^TMP("DIERR",$J)
"RTN","IBCFP1",117,0)
 Q
"RTN","IBCFP1",118,0)
 ;
"RTN","IBCFP1",119,0)
ENTPOST ; Run after processing a bill entry
"RTN","IBCFP1",120,0)
 N IBIFN
"RTN","IBCFP1",121,0)
 I $G(IBXERR)'="" S ^TMP("IBXERR",$J,IBXIEN)=IBXERR K ^TMP("IBXDATA",$J)
"RTN","IBCFP1",122,0)
 S IBIFN=IBXIEN D END^IBCF2
"RTN","IBCFP1",123,0)
 K IBXSAVE,^UTILITY("VAPA",$J),^TMP($J),^TMP("IBXSAVE",$J)
"RTN","IBCFP1",124,0)
 D CLEAN^DILF
"RTN","IBCFP1",125,0)
 Q
"RTN","IBCFP1",126,0)
 ;
"RTN","IBCFP1",127,0)
ERRMSG(XMBODY) ; Send bulletin for error message
"RTN","IBCFP1",128,0)
 N XMTO,XMSUBJ
"RTN","IBCFP1",129,0)
 S XMTO($G(DUZ))="",XMSUBJ="PRINT BILL ERRORS"
"RTN","IBCFP1",130,0)
 ;
"RTN","IBCFP1",131,0)
 D SENDMSG^XMXAPI(,XMSUBJ,XMBODY,.XMTO)
"RTN","IBCFP1",132,0)
 D ALERT("One or more bills were not printed.  Check your mail for details",$G(DUZ))
"RTN","IBCFP1",133,0)
 Q
"RTN","IBCFP1",134,0)
 ;
"RTN","IBCFP1",135,0)
ALERT(XQAMSG,IBGRP) ; Send alert message
"RTN","IBCFP1",136,0)
 N XQA
"RTN","IBCFP1",137,0)
 S XQA(IBGRP)=""
"RTN","IBCFP1",138,0)
 D SETUP^XQALERT
"RTN","IBCFP1",139,0)
 Q
"RTN","IBCIADD1")
0^79^B45581066
"RTN","IBCIADD1",1,0)
IBCIADD1 ;DSI/SLM - ADD ENTRY TO FILE 351.9 ;17-JAN-2001
"RTN","IBCIADD1",2,0)
 ;;2.0;INTEGRATED BILLING;**161,203,155**;21-MAR-94
"RTN","IBCIADD1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCIADD1",4,0)
 ;
"RTN","IBCIADD1",5,0)
ADD ;add an entry
"RTN","IBCIADD1",6,0)
 Q:'IBIFN
"RTN","IBCIADD1",7,0)
 N FDA,IENS S IBCIADD=1
"RTN","IBCIADD1",8,0)
 S DIC="^IBA(351.9,",(X,DINUM)=IBIFN,DIC(0)="Z"
"RTN","IBCIADD1",9,0)
 D FILE^DICN I Y<0 W !!,IBIFN," NOT ADDED TO FILE 351.9" K Y Q
"RTN","IBCIADD1",10,0)
UPDT ; update an entry
"RTN","IBCIADD1",11,0)
 I $G(IBCISNT)=7 Q              ; esg - 1/3/2002
"RTN","IBCIADD1",12,0)
 ;
"RTN","IBCIADD1",13,0)
 ; esg - 3/20/02 - No need to rebuild the 3,4,5 nodes in the event of
"RTN","IBCIADD1",14,0)
 ;       a cancel because we want to send the claim lines that were
"RTN","IBCIADD1",15,0)
 ;       most recently sent to CM, not whatever Vista has now.
"RTN","IBCIADD1",16,0)
 ; esg - 10/9/02 - However, if the 3,4,5 nodes are not there, then we
"RTN","IBCIADD1",17,0)
 ;       need to rebuild them based on whatever Vista has now.
"RTN","IBCIADD1",18,0)
 ;
"RTN","IBCIADD1",19,0)
 I $G(IBCISNT)=4,$P($G(^IBA(351.9,IBIFN,3)),U,1) Q
"RTN","IBCIADD1",20,0)
 ;
"RTN","IBCIADD1",21,0)
 D CLEAN^IBCIUT2,DELTI^IBCIUT4
"RTN","IBCIADD1",22,0)
 NEW IBRFID,IBRFLN,IBRFMN,IBRFFN,IBRFDEPT,IBRFSPEC
"RTN","IBCIADD1",23,0)
 S (IBRFID,IBRFLN,IBRFMN,IBRFFN,IBRFDEPT,IBRFSPEC)=""
"RTN","IBCIADD1",24,0)
 I '$D(IBCIADD) S IBCIADD=0
"RTN","IBCIADD1",25,0)
 D INIT1
"RTN","IBCIADD1",26,0)
 S IENS=IBIFN_","
"RTN","IBCIADD1",27,0)
 S FDA(351.9,IENS,.02)=IBCIST
"RTN","IBCIADD1",28,0)
 I $P(^IBA(351.9,IBIFN,0),U,6)']"" D
"RTN","IBCIADD1",29,0)
 .S FDA(351.9,IENS,.06)=IBCIDE,FDA(351.9,IENS,.07)=IBCIEB
"RTN","IBCIADD1",30,0)
 S FDA(351.9,IENS,3.01)=IBCIPID,FDA(351.9,IENS,3.02)=IBCIPTLA
"RTN","IBCIADD1",31,0)
 S FDA(351.9,IENS,3.03)=IBCIPTMI,FDA(351.9,IENS,3.04)=IBCIPTFI
"RTN","IBCIADD1",32,0)
 S FDA(351.9,IENS,3.05)=IBCIDOB,FDA(351.9,IENS,3.06)=IBCISEX
"RTN","IBCIADD1",33,0)
 S FDA(351.9,IENS,3.07)=IBCIET
"RTN","IBCIADD1",34,0)
 ;
"RTN","IBCIADD1",35,0)
 ; Add referring provider fields
"RTN","IBCIADD1",36,0)
 S FDA(351.9,IENS,3.08)=IBRFID      ; ID
"RTN","IBCIADD1",37,0)
 S FDA(351.9,IENS,3.09)=IBRFLN      ; last name
"RTN","IBCIADD1",38,0)
 S FDA(351.9,IENS,3.1)=IBRFMN       ; middle name
"RTN","IBCIADD1",39,0)
 S FDA(351.9,IENS,3.11)=IBRFFN      ; first name
"RTN","IBCIADD1",40,0)
 S FDA(351.9,IENS,4.01)=IBRFDEPT    ; department
"RTN","IBCIADD1",41,0)
 S FDA(351.9,IENS,4.02)=IBRFSPEC    ; specialty
"RTN","IBCIADD1",42,0)
 ;
"RTN","IBCIADD1",43,0)
 D FILE^DIE("K","FDA"),UPDT1^IBCIST
"RTN","IBCIADD1",44,0)
 ;
"RTN","IBCIADD1",45,0)
 S IBCILSEG=0 F  S IBCILSEG=$O(IBXDATA(IBCILSEG)) Q:'IBCILSEG  D
"RTN","IBCIADD1",46,0)
 .I '$D(^IBA(351.9,IBIFN,5,IBCILSEG)) D ADDSUB
"RTN","IBCIADD1",47,0)
 .S DR=".06////"_IBCIBDOS(IBCILSEG)_";.02////"_IBCIXLID(IBCILSEG)
"RTN","IBCIADD1",48,0)
 .S DR=DR_";.03////"_IBCIOGID(IBCILSEG)_";.04////"_IBCIOID(IBCILSEG)
"RTN","IBCIADD1",49,0)
 .S DR=DR_";.07////"_IBCIEDOS(IBCILSEG)_";.08////"_IBCIPOS(IBCILSEG)
"RTN","IBCIADD1",50,0)
 .S DR=DR_";.09////"_IBCISPC(IBCILSEG)_";.1////"_IBCIAPC(IBCILSEG)
"RTN","IBCIADD1",51,0)
 .S DR=DR_";.11////"_IBCISAMT(IBCILSEG)_";.12////"_IBCIPAC(IBCILSEG)
"RTN","IBCIADD1",52,0)
 .S DIE="^IBA(351.9,"_IBIFN_",5,",DA=IBCILSEG,DA(1)=IBIFN D ^DIE
"RTN","IBCIADD1",53,0)
 .S DR=".13////"_IBCISPID(IBCILSEG)_";1.01////"_IBCISPLA(IBCILSEG)
"RTN","IBCIADD1",54,0)
 .S DR=DR_";1.02////"_IBCISPMI(IBCILSEG)_";1.03////"_IBCISPFI(IBCILSEG)
"RTN","IBCIADD1",55,0)
 .S DR=DR_";1.04////"_IBCISPTI(IBCILSEG)_";1.05////"_IBCISPDE(IBCILSEG)
"RTN","IBCIADD1",56,0)
 .S DIE="^IBA(351.9,"_IBIFN_",5,",DA=IBCILSEG,DA(1)=IBIFN D ^DIE
"RTN","IBCIADD1",57,0)
 .S DR="1.06////"_IBCISPSP(IBCILSEG)_";1.07////"_IBCISPDI(IBCILSEG)
"RTN","IBCIADD1",58,0)
 .S DR=DR_";1.08////"_IBCISPUP(IBCILSEG)_";1.09////"_IBCIBPID(IBCILSEG)
"RTN","IBCIADD1",59,0)
 .S DIE="^IBA(351.9,"_IBIFN_",5,",DA=IBCILSEG,DA(1)=IBIFN D ^DIE
"RTN","IBCIADD1",60,0)
 .S DR="2.01////"_IBCIBPLA(IBCILSEG)_";2.02////"_IBCIBPMI(IBCILSEG)
"RTN","IBCIADD1",61,0)
 .S DR=DR_";2.03////"_IBCIBPFI(IBCILSEG)_";2.04////"_IBCIBPTI(IBCILSEG)
"RTN","IBCIADD1",62,0)
 .S DR=DR_";2.05////"_IBCIBPDE(IBCILSEG)_";2.06////"_IBCIBPSP(IBCILSEG)
"RTN","IBCIADD1",63,0)
 .S DIE="^IBA(351.9,"_IBIFN_",5,",DA=IBCILSEG,DA(1)=IBIFN D ^DIE
"RTN","IBCIADD1",64,0)
 .S DR="2.07////"_IBCIBPDI(IBCILSEG)_";2.08////"_IBCIBPUP(IBCILSEG)
"RTN","IBCIADD1",65,0)
 .S DR=DR_";2.09////"_IBCIPPID(IBCILSEG)_";2.1////"_IBCISPAI(IBCILSEG)
"RTN","IBCIADD1",66,0)
 .S DR=DR_";2.11////"_IBCITOS(IBCILSEG)_";2.12////"_IBCIUNIT(IBCILSEG)
"RTN","IBCIADD1",67,0)
 .S DR=DR_";3.01////"_IBCICPT(IBCILSEG)
"RTN","IBCIADD1",68,0)
 .S DIE="^IBA(351.9,"_IBIFN_",5,",DA=IBCILSEG,DA(1)=IBIFN D ^DIE
"RTN","IBCIADD1",69,0)
 .Q
"RTN","IBCIADD1",70,0)
 D CLEAN^IBCIUT2 K IBCIADD
"RTN","IBCIADD1",71,0)
 Q
"RTN","IBCIADD1",72,0)
 ;
"RTN","IBCIADD1",73,0)
INIT1 ; Initialize variables for adding entry in 351.9
"RTN","IBCIADD1",74,0)
 NEW IBZ,IBPRV
"RTN","IBCIADD1",75,0)
 S IBCIDFN=$P(^DGCR(399,IBIFN,0),U,2)
"RTN","IBCIADD1",76,0)
 S IBCICL=$P(^DGCR(399,IBIFN,0),U)
"RTN","IBCIADD1",77,0)
 S IBCIST=$S(IBCIADD=1:1,1:$P(^IBA(351.9,IBIFN,0),U,2)),IBCIEB=DUZ
"RTN","IBCIADD1",78,0)
 S (IBCIDE,IBCIET)=$$NOW^XLFDT
"RTN","IBCIADD1",79,0)
 S IBCIPID=$P(^DPT(IBCIDFN,0),U,9)
"RTN","IBCIADD1",80,0)
 S X=$P(^DPT(IBCIDFN,0),U) D NAMSP^IBCIUT1
"RTN","IBCIADD1",81,0)
 S IBCIPTLA=$P(Y,U,1),IBCIPTFI=$P(Y,U,2),IBCIPTMI=$P(Y,U,3)
"RTN","IBCIADD1",82,0)
 S IBCIDOB=$P(^DPT(IBCIDFN,0),U,3),IBCISEX=$P(^DPT(IBCIDFN,0),U,2)
"RTN","IBCIADD1",83,0)
 ;
"RTN","IBCIADD1",84,0)
 ; capture referring provider information
"RTN","IBCIADD1",85,0)
 D GETPRV^IBCEU(IBIFN,1,.IBZ)      ; "1" signifies referring provider
"RTN","IBCIADD1",86,0)
 S IBZ=$G(IBZ(1,1))
"RTN","IBCIADD1",87,0)
 I IBZ'="" D
"RTN","IBCIADD1",88,0)
 . S IBPRV=$P(IBZ,U,3)
"RTN","IBCIADD1",89,0)
 . S IBRFLN=$$NAME^IBCEFG1($P(IBZ,U,1)),IBRFMN=$P(IBRFLN,U,3),IBRFFN=$P(IBRFLN,U,2),IBRFLN=$P(IBRFLN,U,1)
"RTN","IBCIADD1",90,0)
 . S IBRFSPEC=$$BILLSPEC^IBCEU3(IBIFN,IBPRV)  ; ref prov specialty
"RTN","IBCIADD1",91,0)
 . I IBPRV'["IBA(355.93" D    ; va provider data
"RTN","IBCIADD1",92,0)
 .. S IBRFID=+IBPRV
"RTN","IBCIADD1",93,0)
 .. S IBRFDEPT=$P($G(^VA(200,+IBPRV,5)),U,1)
"RTN","IBCIADD1",94,0)
 .. Q
"RTN","IBCIADD1",95,0)
 . I IBPRV["IBA(355.93" D     ; non-va provider data
"RTN","IBCIADD1",96,0)
 .. S IBRFID="NVA"_+IBPRV
"RTN","IBCIADD1",97,0)
 .. S IBRFDEPT="NVA"
"RTN","IBCIADD1",98,0)
 .. Q
"RTN","IBCIADD1",99,0)
 . Q
"RTN","IBCIADD1",100,0)
 ;
"RTN","IBCIADD1",101,0)
 ;initialize variables for line items in 351.9 and save
"RTN","IBCIADD1",102,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN)
"RTN","IBCIADD1",103,0)
 S IBCILSEG=0
"RTN","IBCIADD1",104,0)
 F  S IBCILSEG=$O(IBXDATA(IBCILSEG)) Q:'IBCILSEG  D
"RTN","IBCIADD1",105,0)
 . NEW CURRENT,DIV
"RTN","IBCIADD1",106,0)
 . S X=$P(IBXDATA(IBCILSEG),U),IBCIBDOS(IBCILSEG)=$$NOW1^IBCIUT1(X)
"RTN","IBCIADD1",107,0)
 . I $P(IBXDATA(IBCILSEG),U,2)]"" S X=$P(IBXDATA(IBCILSEG),U,2),IBCIEDOS(IBCILSEG)=$$NOW1^IBCIUT1(X)
"RTN","IBCIADD1",108,0)
 . I $P(IBXDATA(IBCILSEG),U,2)']"" S IBCIEDOS(IBCILSEG)=IBCIBDOS(IBCILSEG)
"RTN","IBCIADD1",109,0)
 . S IBCIPOS(IBCILSEG)=$P(IBXDATA(IBCILSEG),U,3)
"RTN","IBCIADD1",110,0)
 . S IBCITOS(IBCILSEG)=$P(IBXDATA(IBCILSEG),U,4)
"RTN","IBCIADD1",111,0)
 . S IBCISPC(IBCILSEG)=$P(IBXDATA(IBCILSEG),U,5)
"RTN","IBCIADD1",112,0)
 . S IBCISAMT(IBCILSEG)=$P(IBXDATA(IBCILSEG),U,8)
"RTN","IBCIADD1",113,0)
 . S IBCIUNIT(IBCILSEG)=$P(IBXDATA(IBCILSEG),U,9)
"RTN","IBCIADD1",114,0)
 . S IBCICPT(IBCILSEG)=$P(IBXDATA(IBCILSEG),U,10)
"RTN","IBCIADD1",115,0)
 . S IBCICPT(IBCILSEG)=$$GETMOD^IBCIUT5(IBCICPT(IBCILSEG))
"RTN","IBCIADD1",116,0)
 . I IBCIUNIT(IBCILSEG)>1 S IBCISAMT(IBCILSEG)=IBCISAMT(IBCILSEG)*IBCIUNIT(IBCILSEG)
"RTN","IBCIADD1",117,0)
 . S IBCIAPC(IBCILSEG)="",IBCIXLID(IBCILSEG)=IBCILSEG
"RTN","IBCIADD1",118,0)
 . S IBCIOGID(IBCILSEG)="",IBCIOID(IBCILSEG)="",IBCIPAC(IBCILSEG)=""
"RTN","IBCIADD1",119,0)
 . ;
"RTN","IBCIADD1",120,0)
 . ; capture the default division (field# .22) for the organization id
"RTN","IBCIADD1",121,0)
 . S DIV=$P($G(^DGCR(399,IBIFN,0)),U,22)
"RTN","IBCIADD1",122,0)
 . I DIV S IBCIOID(IBCILSEG)=$P($G(^DG(40.8,DIV,0)),U,2)
"RTN","IBCIADD1",123,0)
 . ;
"RTN","IBCIADD1",124,0)
 . ; Billing provider information
"RTN","IBCIADD1",125,0)
 . S IBXDAT1=$$RPHY^IBCIUT1(IBIFN)        ; Get provider information
"RTN","IBCIADD1",126,0)
 . S IBCIBPID(IBCILSEG)=$P(IBXDAT1,U,2)   ; provider ID
"RTN","IBCIADD1",127,0)
 . S X=$P(IBXDAT1,U,1) D NAMSP^IBCIUT1    ; parse full provider name
"RTN","IBCIADD1",128,0)
 . S IBCIBPLA(IBCILSEG)=$P(Y,U,1)         ; provider last name
"RTN","IBCIADD1",129,0)
 . S IBCIBPFI(IBCILSEG)=$P(Y,U,2)         ; provider first name
"RTN","IBCIADD1",130,0)
 . S IBCIBPMI(IBCILSEG)=$P(Y,U,3)         ; provider middle name
"RTN","IBCIADD1",131,0)
 . S IBCIBPDE(IBCILSEG)=$P(IBXDAT1,U,3)   ; provider department
"RTN","IBCIADD1",132,0)
 . S IBCIBPSP(IBCILSEG)=$P(IBXDAT1,U,4)   ; provider specialty
"RTN","IBCIADD1",133,0)
 . S IBCIBPDI(IBCILSEG)=""                ; provider degree ID
"RTN","IBCIADD1",134,0)
 . S IBCIBPTI(IBCILSEG)=""                ; provider title
"RTN","IBCIADD1",135,0)
 . S IBCIBPUP(IBCILSEG)=""                ; provider UPIN
"RTN","IBCIADD1",136,0)
 . KILL X,Y                               ; clean up
"RTN","IBCIADD1",137,0)
 . ;
"RTN","IBCIADD1",138,0)
 . ; Primary payer ID
"RTN","IBCIADD1",139,0)
 . S IBCIPPID(IBCILSEG)=$$FINDINS^IBCEF1(IBIFN)
"RTN","IBCIADD1",140,0)
 . ;
"RTN","IBCIADD1",141,0)
 . ; Get the secondary payer ID based on the current bill sequence
"RTN","IBCIADD1",142,0)
 . ;
"RTN","IBCIADD1",143,0)
 . S IBCISPAI(IBCILSEG)=""
"RTN","IBCIADD1",144,0)
 . S CURRENT=$$COB^IBCEF(IBIFN)
"RTN","IBCIADD1",145,0)
 . I CURRENT="P" S IBCISPAI(IBCILSEG)=$$FINDINS^IBCEF1(IBIFN,"S")
"RTN","IBCIADD1",146,0)
 . I CURRENT="S" S IBCISPAI(IBCILSEG)=$$FINDINS^IBCEF1(IBIFN,"T")
"RTN","IBCIADD1",147,0)
 . ;
"RTN","IBCIADD1",148,0)
 . S IBCISPID(IBCILSEG)="",IBCISPLA(IBCILSEG)="",IBCISPFI(IBCILSEG)=""
"RTN","IBCIADD1",149,0)
 . S IBCISPMI(IBCILSEG)="",IBCISPTI(IBCILSEG)="",IBCISPDE(IBCILSEG)=""
"RTN","IBCIADD1",150,0)
 . S IBCISPSP(IBCILSEG)="",IBCISPDI(IBCILSEG)="",IBCISPUP(IBCILSEG)=""
"RTN","IBCIADD1",151,0)
 . Q
"RTN","IBCIADD1",152,0)
 Q
"RTN","IBCIADD1",153,0)
 ;
"RTN","IBCIADD1",154,0)
ADDSUB ;create the subfile
"RTN","IBCIADD1",155,0)
 S DIC="^IBA(351.9,"_IBIFN_",5,",DA(1)=IBIFN,DIC(0)="LMN",(DA,X)=IBCILSEG
"RTN","IBCIADD1",156,0)
 D FILE^DICN
"RTN","IBCIADD1",157,0)
 Q
"RTN","IBCNS2")
0^1^B14096238
"RTN","IBCNS2",1,0)
IBCNS2 ;ALB/AAS - INSURANCE POLICY CALLS FROM FILE 399 DD ;22-JULY-91
"RTN","IBCNS2",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,80,51,137,155**;21-MAR-94
"RTN","IBCNS2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNS2",4,0)
 ;
"RTN","IBCNS2",5,0)
 Q
"RTN","IBCNS2",6,0)
DD(IBX,IBDA,LEVEL) ;  - called from input transform for field 111,112,113
"RTN","IBCNS2",7,0)
 ; -- input   ibx = x from input transform
"RTN","IBCNS2",8,0)
 ;           ibda = internal entry in 399
"RTN","IBCNS2",9,0)
 ;          level = 1=primary, 2=secondary, 3=tertiary
"RTN","IBCNS2",10,0)
 ; -- output  returns x=internal entry in 2.3121 (ins. Mult.) if valid
"RTN","IBCNS2",11,0)
 ;   
"RTN","IBCNS2",12,0)
 N DFN,ACTIVE,INSDT
"RTN","IBCNS2",13,0)
 D VAR
"RTN","IBCNS2",14,0)
 S X=$$SEL(IBX,DFN,INSDT,ACTIVE)
"RTN","IBCNS2",15,0)
 I +X<1 K X
"RTN","IBCNS2",16,0)
DDQ Q
"RTN","IBCNS2",17,0)
 ;
"RTN","IBCNS2",18,0)
VAR S DFN=$P(^DGCR(399,IBDA,0),"^",2),ACTIVE=1,INSDT=$S(+$G(^DGCR(399,IBDA,"U")):+$G(^("U")),1:DT)
"RTN","IBCNS2",19,0)
 Q
"RTN","IBCNS2",20,0)
 ;
"RTN","IBCNS2",21,0)
SEL(IBX,DFN,INSDT,ACTIVE) ; -- Select insurance policy
"RTN","IBCNS2",22,0)
 ; -- Input    IBX  = x from input transform
"RTN","IBCNS2",23,0)
 ;             DFN  = patient
"RTN","IBCNS2",24,0)
 ;           INSDT  = (optional) Active date of ins. (default = dt)
"RTN","IBCNS2",25,0)
 ;          ACTIVE  = (optional) 1 if want active (default)
"RTN","IBCNS2",26,0)
 ;                  = 2 if want all ins returned
"RTN","IBCNS2",27,0)
 ;
"RTN","IBCNS2",28,0)
 ; -- Output      =  pointer to 36 ^ pointer to 2.3121 ^ pointer to 355.3
"RTN","IBCNS2",29,0)
 ;
"RTN","IBCNS2",30,0)
 N I,J,Y,DA,DE,DQ,DR,DIC,DIE,DIR,DIV,IBSEL,IBDD,IBD
"RTN","IBCNS2",31,0)
 S IBSEL=1,Y=""
"RTN","IBCNS2",32,0)
 I '$G(ACTIVE) S ACTIVE=1
"RTN","IBCNS2",33,0)
 S:'$G(INSDT) INSDT=DT
"RTN","IBCNS2",34,0)
 I '$G(DFN) G SELQ
"RTN","IBCNS2",35,0)
 D BLD
"RTN","IBCNS2",36,0)
 ;
"RTN","IBCNS2",37,0)
 ; -- call DIC to choose from list
"RTN","IBCNS2",38,0)
 S X=IBX
"RTN","IBCNS2",39,0)
 S DIC="^DPT("_DFN_",.312,",DIC(0)="EQMN"
"RTN","IBCNS2",40,0)
 S DIC("S")="I $D(IBDD(+Y))" ; add not other selection
"RTN","IBCNS2",41,0)
 S DIC("W")="W $P(^DIC(36,+^(0),0),U)_""  Group: ""_$$GRP^IBCNS($P(^DPT(DFN,.312,+Y,0),U,18))"
"RTN","IBCNS2",42,0)
 D ^DIC
"RTN","IBCNS2",43,0)
SELQ Q +Y
"RTN","IBCNS2",44,0)
 ;
"RTN","IBCNS2",45,0)
BLD K IBD,IBDD
"RTN","IBCNS2",46,0)
 S (IBDD,IBCDFN)=0 F  S IBCDFN=$O(^DPT(DFN,.312,IBCDFN)) Q:'IBCDFN  I $D(^DPT(DFN,.312,IBCDFN,0)) D CHK(IBCDFN,ACTIVE,INSDT)
"RTN","IBCNS2",47,0)
 Q
"RTN","IBCNS2",48,0)
 ;
"RTN","IBCNS2",49,0)
CHK(IBCDFN,ACTIVE,INSDT) ; -- see if active
"RTN","IBCNS2",50,0)
 N X,X1
"RTN","IBCNS2",51,0)
 S X=$G(^DPT(DFN,.312,IBCDFN,0))
"RTN","IBCNS2",52,0)
 S IBDD(IBCDFN)=+X_"^"_IBCDFN_"^"_$P(X,"^",18)
"RTN","IBCNS2",53,0)
 I ACTIVE=2 G CHKQ
"RTN","IBCNS2",54,0)
 S X1=$G(^DIC(36,+X,0)) I X1="" G CQ ;ins co entry doesn't exist
"RTN","IBCNS2",55,0)
 I $P(X,"^",8) G:INSDT<$P(X,"^",8) CQ ;effective date later than care
"RTN","IBCNS2",56,0)
 I $P(X,"^",4) G:INSDT>$P(X,"^",4) CQ ;care after expiration date
"RTN","IBCNS2",57,0)
 I $P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",11) G CQ ;plan is inactive
"RTN","IBCNS2",58,0)
 G:$P(X1,"^",5) CQ ;                  ;ins company inactive
"RTN","IBCNS2",59,0)
 ;G:$P(X1,"^",2)="N" CQ ;              ;ins company will not reimburse
"RTN","IBCNS2",60,0)
 G CHKQ
"RTN","IBCNS2",61,0)
CQ K IBDD(IBCDFN)
"RTN","IBCNS2",62,0)
CHKQ S:$D(IBDD(IBCDFN)) IBDD=IBDD+1,IBD(IBDD)=IBCDFN
"RTN","IBCNS2",63,0)
 Q
"RTN","IBCNS2",64,0)
 ;
"RTN","IBCNS2",65,0)
 ;
"RTN","IBCNS2",66,0)
DDHELP(IBDA,LEVEL) ; -- Executable help
"RTN","IBCNS2",67,0)
 ; -- write out list to choose from
"RTN","IBCNS2",68,0)
 N DFN,ACTIVE,INSDT,I,IBINS
"RTN","IBCNS2",69,0)
 D VAR,BLD
"RTN","IBCNS2",70,0)
 ;
"RTN","IBCNS2",71,0)
 I $G(IBDD)=0 W !,"No Insurance Policies to Select From" G DDHQ
"RTN","IBCNS2",72,0)
 ;
"RTN","IBCNS2",73,0)
 I '$D(IOM) D HOME^%ZIS
"RTN","IBCNS2",74,0)
 N IBDTIN
"RTN","IBCNS2",75,0)
 S IBDTIN=$G(INSDT)
"RTN","IBCNS2",76,0)
 W ! D HDR^IBCNS
"RTN","IBCNS2",77,0)
 S I=0 F  S I=$O(IBD(I)) Q:'I  D
"RTN","IBCNS2",78,0)
 .S IBINS=$G(^DPT(DFN,.312,$G(IBD(I)),0))
"RTN","IBCNS2",79,0)
 .D D1^IBCNS
"RTN","IBCNS2",80,0)
DDHQ Q
"RTN","IBCNS2",81,0)
 ;
"RTN","IBCNS2",82,0)
TRANS(IBDA,Y) ; -- output transform
"RTN","IBCNS2",83,0)
 N DFN,ACTIVE,INSDT
"RTN","IBCNS2",84,0)
 D VAR
"RTN","IBCNS2",85,0)
 S Y=$P($G(^DIC(36,+$P($G(^DPT(DFN,.312,+$G(Y),0)),U),0)),U)
"RTN","IBCNS2",86,0)
 Q Y
"RTN","IBCNS2",87,0)
 ;
"RTN","IBCNS2",88,0)
INSCO(IBDA,IBCDFN) ; -- return pointer value of 36 from pt. file
"RTN","IBCNS2",89,0)
 N DFN,ACTIVE,INSDT
"RTN","IBCNS2",90,0)
 D VAR
"RTN","IBCNS2",91,0)
 S Y=+$G(^DPT(DFN,.312,IBCDFN,0))
"RTN","IBCNS2",92,0)
 Q Y_$S(Y>0:"^"_$P($G(^DIC(36,+Y,0)),"^"),1:"")
"RTN","IBCNS2",93,0)
 ;
"RTN","IBCNS2",94,0)
IX(DA,XREF) ; -- create i1, aic xrefs for fields 112, 113, 114
"RTN","IBCNS2",95,0)
 ;
"RTN","IBCNS2",96,0)
 S ^DGCR(399,DA,XREF)=$$ZND^IBCNS1($P($G(^DGCR(399,DA,0)),"^",2),X)
"RTN","IBCNS2",97,0)
 S ^DGCR(399,DA,"AIC",+$G(^DPT($P($G(^DGCR(399,DA,0)),"^",2),.312,+X,0)))=""
"RTN","IBCNS2",98,0)
 Q
"RTN","IBCNS2",99,0)
 ;
"RTN","IBCNS2",100,0)
KIX(DA,XREF) ; -- kill logic for above xref
"RTN","IBCNS2",101,0)
 K ^DGCR(399,DA,XREF)
"RTN","IBCNS2",102,0)
 K ^DGCR(399,DA,"AIC",+$G(^DPT($P($G(^DGCR(399,DA,0)),"^",2),.312,+X,0)))
"RTN","IBCNS2",103,0)
 Q
"RTN","IBCNS2",104,0)
 ;
"RTN","IBCNS2",105,0)
BPP(IBDA,IBMCR) ; Find Bill Payer Policy based on Payer Sequence and the P/S/T payers assigned to the bill,Ins Co must reimburse
"RTN","IBCNS2",106,0)
 ; IBMCR = flag that says include MEDICARE WNR
"RTN","IBCNS2",107,0)
 ; returns - Bill Payer Policy (ifn of policy entry in patient file)
"RTN","IBCNS2",108,0)
 ;         - null if either no Payer Sequence or there is no policy defined for the payer sequence
"RTN","IBCNS2",109,0)
 ;           or the policy defined by the payer sequence Will Not Reimburse and is not MEDICARE
"RTN","IBCNS2",110,0)
 ;
"RTN","IBCNS2",111,0)
 N IBI,IBX,IBY,IBP,IBC,IBM0 S IBX="",(IBP,IBC)=0
"RTN","IBCNS2",112,0)
 S IBMCR=+$G(IBMCR)
"RTN","IBCNS2",113,0)
 S IBY=$$COBN^IBCEF(+IBDA) I IBY S IBY=IBY+11
"RTN","IBCNS2",114,0)
 I IBY S IBM0=$G(^DGCR(399,+IBDA,"M")),IBP=$P(IBM0,U,IBY)
"RTN","IBCNS2",115,0)
 I IBP S IBY=IBY-11,(IBI,IBY)=$P(IBM0,U,IBY) I +IBY S IBC=$P($G(^DIC(36,+IBY,0)),U,2)
"RTN","IBCNS2",116,0)
 I IBP,IBI,$S(IBC'="N":1,'IBMCR:0,1:$$MCRWNR^IBEFUNC(+IBY)) S IBX=IBP
"RTN","IBCNS2",117,0)
 Q IBX
"RTN","IBCNSP2")
0^83^B22122714
"RTN","IBCNSP2",1,0)
IBCNSP2 ;ALB/AAS - PATIENT INSURANCE INTERFACE FOR REGISTRATION ;21-JUNE-93
"RTN","IBCNSP2",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,75,82,155**;21-MAR-94
"RTN","IBCNSP2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNSP2",4,0)
 ;
"RTN","IBCNSP2",5,0)
% ;
"RTN","IBCNSP2",6,0)
REG ; --Edit Patient insurance from registration, fee and mccr, allow new entries
"RTN","IBCNSP2",7,0)
 ;   only edit policy if new policy
"RTN","IBCNSP2",8,0)
 ;   call event driver if adding a new policy
"RTN","IBCNSP2",9,0)
 ;
"RTN","IBCNSP2",10,0)
 ; -- Input  DFN  = patient
"RTN","IBCNSP2",11,0)
 ;
"RTN","IBCNSP2",12,0)
 I $G(DGPRFLG) D PREG^IBCNBME(DFN) Q
"RTN","IBCNSP2",13,0)
 D REG^IBCNBME(DFN)
"RTN","IBCNSP2",14,0)
 Q
"RTN","IBCNSP2",15,0)
 ;
"RTN","IBCNSP2",16,0)
 N DIC,DIE,DE,DQ,DIR,DA,DR,DIC,DIV,X,Y,I,J,L,D,DIH,DIY,IBSEL,IBDD,IBD,IBNEW,IBNEWP,IBDT,IBQUIT,IBCNS,IBCDFN,IBCNSEH,IBCNP,IBCPOL,IBOK,VALMQUIT,IBCNT,IBEVT1,IBEVTA,VAERR,IBCOVP
"RTN","IBCNSP2",17,0)
 S IBCNP=1
"RTN","IBCNSP2",18,0)
 I '$D(DFN) D  G:$D(VALMQUIT) REGQ
"RTN","IBCNSP2",19,0)
 .S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC
"RTN","IBCNSP2",20,0)
 .S DFN=+Y
"RTN","IBCNSP2",21,0)
 I $G(DFN)<1 S IBQUIT=1,VALMQUIT="" G REGQ
"RTN","IBCNSP2",22,0)
 ;
"RTN","IBCNSP2",23,0)
 I '$$ASKCOVD(DFN,.IBCOV,.IBCOVP) S IBQUIT=1 G REGQ
"RTN","IBCNSP2",24,0)
 ; -- of covered by ins but none currently active so indicate
"RTN","IBCNSP2",25,0)
 ;S IBCOV=$P($G(^DPT(DFN,.31)),"^",11)
"RTN","IBCNSP2",26,0)
 ;I IBCOV="Y",'$$INSURED^IBCNS1(DFN) W !!,"Covered By Health Insurance indicates 'YES' but none currently Active.",!,"Please Review!",!!
"RTN","IBCNSP2",27,0)
 ;
"RTN","IBCNSP2",28,0)
 ;; -- ask if covered by insuracnce
"RTN","IBCNSP2",29,0)
 ;S DIE="^DPT(",DR=".3192",DA=DFN D ^DIE K DIC,DIE,DA,DR
"RTN","IBCNSP2",30,0)
 ;S IBCOVP=$P($G(^DPT(DFN,.31)),"^",11)
"RTN","IBCNSP2",31,0)
 ;I $D(Y)!($D(DTOUT)) S IBQUIT=1 G REGQ
"RTN","IBCNSP2",32,0)
 ;I $P($G(^DPT(DFN,.31)),"^",11)'="Y",'$$INSURED^IBCNS1(DFN) S IBQUIT=1 G REGQ
"RTN","IBCNSP2",33,0)
 ;
"RTN","IBCNSP2",34,0)
R1 S (IBNEW,IBNEWP,IBQUIT)=0
"RTN","IBCNSP2",35,0)
 S DIC="^DPT("_DFN_",.312,",DIC(0)="AEQLM",DIC("A")="Select INSURANCE COMPANY: "
"RTN","IBCNSP2",36,0)
 S DIC("W")="N IBD S IBD=$G(^DPT(DFN,.312,+Y,0)) W ""  Group: ""_$$GRP^IBCNS($P(IBD,U,18))_""  Whose: ""_$$EXPAND^IBTRE(2.312,6,$P(IBD,U,6))"
"RTN","IBCNSP2",37,0)
 I IBCNP=1 S X=$P($G(^DIC(36,+$G(^DPT(DFN,.312,+$P($G(^DPT(DFN,.312,0)),"^",3),0)),0)),"^") I X'="" S DIC("B")=X
"RTN","IBCNSP2",38,0)
 S DA(1)=DFN
"RTN","IBCNSP2",39,0)
 I $G(^DPT(DFN,.312,0))="" S ^DPT(DFN,.312,0)="^2.312PAI^^"
"RTN","IBCNSP2",40,0)
 D ^DIC K DIC I +Y<1 S IBQUIT=1,VALMQUIT="" G REGQ
"RTN","IBCNSP2",41,0)
 S IBCDFN=+Y,IBCNS=$P(Y,"^",2)
"RTN","IBCNSP2",42,0)
 I $P(Y,"^",3) S IBNEW=1 I $$DUPCO^IBCNSOK1(DFN,IBCNS,IBCDFN,1)
"RTN","IBCNSP2",43,0)
 D BEFORE^IBCNSEVT
"RTN","IBCNSP2",44,0)
 S IBCNSEH=$P($G(^IBE(350.9,1,4)),"^",1)
"RTN","IBCNSP2",45,0)
 S IBCNP=IBCNP+1
"RTN","IBCNSP2",46,0)
 I 'IBNEW,$P($G(^DPT(DFN,.312,+IBCDFN,0)),"^",18)="" D  G REGQ
"RTN","IBCNSP2",47,0)
 .I '$P($G(^IBE(350.9,1,3)),"^",18) W !,"Insurance conversion not complete, NO EDITING ALLOWED",!! S IBQUIT=1 H 3 Q
"RTN","IBCNSP2",48,0)
 .I $P($G(^IBE(350.9,1,3)),"^",18) W !,"INVALID ENTRY, DELETE AND RE-ENTER, NO EDITING ALLOWED",!! S IBQUIT=1 H 3 Q
"RTN","IBCNSP2",49,0)
 ;
"RTN","IBCNSP2",50,0)
 I $G(IBFEE),'$G(IBNEW) G REGQ ; fee users can add but not edit existing  info
"RTN","IBCNSP2",51,0)
 I $G(IBNEW) D  G:$G(IBQUIT) REGQ
"RTN","IBCNSP2",52,0)
 .D SEL^IBCNSEH
"RTN","IBCNSP2",53,0)
 .S IBCPOL=$$LK^IBCNSM31(IBCNS)
"RTN","IBCNSP2",54,0)
 .I IBCPOL<1 D NEW^IBCNSJ3(IBCNS,.IBCPOL) S:IBCPOL<1 IBQUIT=1 Q:IBQUIT  S IBNEWP=1
"RTN","IBCNSP2",55,0)
 .;  dgprflg is a 1 if called from pre-registration, set default 4
"RTN","IBCNSP2",56,0)
 .;  for pre-reg, otherwise set the default to 1 for interview
"RTN","IBCNSP2",57,0)
 .S DR=".18////"_IBCPOL_";1.09////"_$S($G(DGPRFLG):4,1:1)_";1.05///NOW;1.06////"_DUZ
"RTN","IBCNSP2",58,0)
 .S DA=IBCDFN,DA(1)=DFN,DIE="^DPT("_DFN_",.312," D ^DIE
"RTN","IBCNSP2",59,0)
 .K DIE,DA,DR,DIC
"RTN","IBCNSP2",60,0)
 ;
"RTN","IBCNSP2",61,0)
 ; -- edit patient ins. data
"RTN","IBCNSP2",62,0)
 S IBREG=1 G:$G(IBQUIT) REGQ
"RTN","IBCNSP2",63,0)
 D PAT^IBCNSEH,PATPOL^IBCNSM32(IBCDFN)
"RTN","IBCNSP2",64,0)
 ;
"RTN","IBCNSP2",65,0)
 ; -- edit policy specific data if new or have key
"RTN","IBCNSP2",66,0)
 I $G(IBNEWP)!($D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ))) D:'$G(IBQUIT) POL^IBCNSEH,EDPOL^IBCNSM3(IBCDFN)
"RTN","IBCNSP2",67,0)
 K IBREG S IBQUIT=0
"RTN","IBCNSP2",68,0)
 ;
"RTN","IBCNSP2",69,0)
REGQ ; -- exit logic and checks
"RTN","IBCNSP2",70,0)
 ; -- if no policy pointer delete
"RTN","IBCNSP2",71,0)
 I $G(IBNEW),$G(IBCDFN),$P($G(^DPT(DFN,.312,+IBCDFN,0)),"^",18)="" D
"RTN","IBCNSP2",72,0)
 .D DP1^IBCNSM1 W !,"<DELETED>  GROUP INSURANCE PLAN REQUIRED BUT NOT ENTERED" K IBNEW
"RTN","IBCNSP2",73,0)
 ;
"RTN","IBCNSP2",74,0)
 ; -- call event driver
"RTN","IBCNSP2",75,0)
 I $G(IBCDFN),$P($G(^DPT(DFN,.312,+$G(IBCDFN),0)),"^",18) D
"RTN","IBCNSP2",76,0)
 .K IBNEW
"RTN","IBCNSP2",77,0)
 .D AFTER^IBCNSEVT,^IBCNSEVT
"RTN","IBCNSP2",78,0)
 ;
"RTN","IBCNSP2",79,0)
 K IBCNS,IBCDFN,IBNEW,IBNEWP
"RTN","IBCNSP2",80,0)
 I '$G(IBQUIT) W ! G R1
"RTN","IBCNSP2",81,0)
 D COVERED^IBCNSM31(DFN,$G(IBCOVP))
"RTN","IBCNSP2",82,0)
 K IBQUIT
"RTN","IBCNSP2",83,0)
 Q
"RTN","IBCNSP2",84,0)
 ;
"RTN","IBCNSP2",85,0)
FEE ; -- fee entry point to add patient insurance.
"RTN","IBCNSP2",86,0)
 ;N IBFEE S IBFEE=1 D REG
"RTN","IBCNSP2",87,0)
 D FEE^IBCNBME(DFN)
"RTN","IBCNSP2",88,0)
 Q
"RTN","IBCNSP2",89,0)
 ;
"RTN","IBCNSP2",90,0)
MCCR ; -- called from screen 3 of the edit bill option in mccr
"RTN","IBCNSP2",91,0)
 N DLAYGO,DIC,DIE,DE,DQ,DIR,DA,DR,DIC,DIV,X,Y,I,J,L,D,DIH,DIY,IBSEL,IBDD,IBD,IBNEW,IBNEWP,IBDT,IBQUIT,IBCNS,IBCDFN,IBCNSEH,IBCNP,IBCPOL,IBOK,VALMQUIT,IBMCR
"RTN","IBCNSP2",92,0)
 ;
"RTN","IBCNSP2",93,0)
 S IBCNP=1,IBMCR=$$WNRBILL^IBEFUNC(IBIFN)
"RTN","IBCNSP2",94,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="[IB SCREEN3]" D ^DIE K DIC,DIE,DA,DR
"RTN","IBCNSP2",95,0)
 ;
"RTN","IBCNSP2",96,0)
 I $G(IBADI)=1 D R1 S IBCNRTN=1 K IBADI G MCCR
"RTN","IBCNSP2",97,0)
 I 'IBMCR,$$WNRBILL^IBEFUNC(IBIFN) S DGRVRCAL=1
"RTN","IBCNSP2",98,0)
 K IBCNRTN
"RTN","IBCNSP2",99,0)
 Q
"RTN","IBCNSP2",100,0)
 ;
"RTN","IBCNSP2",101,0)
DISP ; -- Display Patient insurance policy information for registrations
"RTN","IBCNSP2",102,0)
 Q:'$D(DFN)
"RTN","IBCNSP2",103,0)
 D DISP^IBCNS
"RTN","IBCNSP2",104,0)
DISPQ Q
"RTN","IBCNSP2",105,0)
 ;
"RTN","IBCNSP2",106,0)
ASKCOVD(DFN,IBCOV,IBCOVP) ; ask user if patient covered by insurance (2,.3192), returns true if answered yes
"RTN","IBCNSP2",107,0)
 ;
"RTN","IBCNSP2",108,0)
 N IBX,IBINSD,DIC,DIE,DA,DR,X,Y,DTOUT
"RTN","IBCNSP2",109,0)
 ;
"RTN","IBCNSP2",110,0)
 S IBCOV=$P($G(^DPT(DFN,.31)),"^",11),IBINSD=$$INSURED^IBCNS1(DFN),IBX=1 W !
"RTN","IBCNSP2",111,0)
 ;
"RTN","IBCNSP2",112,0)
 ; -- if covered by ins but none currently active so indicate
"RTN","IBCNSP2",113,0)
 I IBCOV="Y",'IBINSD W !!,"Covered By Health Insurance indicates 'YES' but none currently Active.",!,"Please Review!",!!
"RTN","IBCNSP2",114,0)
 ;
"RTN","IBCNSP2",115,0)
 ; -- ask if covered by insurance
"RTN","IBCNSP2",116,0)
 S DIE="^DPT(",DR=".3192",DA=DFN D ^DIE K DIC,DIE,DA,DR I $D(Y)!($D(DTOUT)) S IBX=0
"RTN","IBCNSP2",117,0)
 ;
"RTN","IBCNSP2",118,0)
 S IBCOVP=$P($G(^DPT(DFN,.31)),"^",11) I +IBX,IBCOVP'="Y",'IBINSD S IBX=0
"RTN","IBCNSP2",119,0)
 ;
"RTN","IBCNSP2",120,0)
 Q IBX
"RTN","IBCONS2")
0^85^B74204893
"RTN","IBCONS2",1,0)
IBCONS2 ;ALB/CPM - NSC W/INSURANCE OUTPUT (CON'T) ;31-JAN-92
"RTN","IBCONS2",2,0)
 ;;2.0;INTEGRATED BILLING;**19,36,54,66,91,99,108,120,142,174,155**;21-MAR-94
"RTN","IBCONS2",3,0)
 ;
"RTN","IBCONS2",4,0)
 ;MAP TO DGCRONS2
"RTN","IBCONS2",5,0)
 ;
"RTN","IBCONS2",6,0)
LOOP1 ; Compilation for both Inpatient Admisssion and Discharge reports.
"RTN","IBCONS2",7,0)
 N DA,IBADM K ^TMP($J,"PATIENT INCLUDE"),^TMP($J,"PATIENT EXCLUDE")
"RTN","IBCONS2",8,0)
 D DIV
"RTN","IBCONS2",9,0)
 F I=(IBBEG-.0001):0 S I=$O(^DGPM(IBSUB,I)) Q:'I!(I>(IBEND+.99))  D
"RTN","IBCONS2",10,0)
 . S DFN=0 F  S DFN=$O(^DGPM(IBSUB,I,DFN)) Q:'DFN  S DA=+$O(^(DFN,0)) D  D:PTF PTF I $G(IBDV) D PROC K IBADMVT
"RTN","IBCONS2",11,0)
 ..  S:IBINPT=2 DA=+$P($G(^DGPM(DA,0)),"^",14),IBADM=+$G(^DGPM(DA,0))
"RTN","IBCONS2",12,0)
 ..  S PTF=$P($G(^DGPM(DA,0)),"^",16)
"RTN","IBCONS2",13,0)
 ..  S IBADMVT=DA
"RTN","IBCONS2",14,0)
 ..  S IBDV=+$P($G(^DIC(42,+$P($G(^DGPM(DA,0)),"^",6),0)),"^",11)
"RTN","IBCONS2",15,0)
 K ^TMP($J,"PATIENT INCLUDE"),^TMP($J,"PATIENT EXCLUDE")
"RTN","IBCONS2",16,0)
 Q
"RTN","IBCONS2",17,0)
 ;
"RTN","IBCONS2",18,0)
 ;
"RTN","IBCONS2",19,0)
LOOP2 ; Compilation for the Outpatient report
"RTN","IBCONS2",20,0)
 N DFN,IBDTA,IBDV,IBVAL,IBFILTER,IBCBK,IBNO,IBOE,IBOE0,IBSTOP,IBOEZ,Y,Y0,IBQUERY2
"RTN","IBCONS2",21,0)
 D DIV K ^TMP($J,"PATIENT INCLUDE"),^TMP($J,"PATIENT EXCLUDE")
"RTN","IBCONS2",22,0)
 ;
"RTN","IBCONS2",23,0)
 S IBQUERY2=""
"RTN","IBCONS2",24,0)
 S IBVAL("BDT")=IBBEG,IBVAL("EDT")=IBEND+.99
"RTN","IBCONS2",25,0)
 S IBFILTER="I '$P(Y0,U,6)"
"RTN","IBCONS2",26,0)
 S IBCBK="D CALLBCK^IBCONS2(Y,Y0,.IBQUERY2)"
"RTN","IBCONS2",27,0)
 K ^TMP("IBOEC",$J)
"RTN","IBCONS2",28,0)
 D SCAN^IBSDU("DATE/TIME",.IBVAL,IBFILTER,IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBCONS2",29,0)
 I $G(IBQUERY2) D CLOSE^IBSDU(IBQUERY2)
"RTN","IBCONS2",30,0)
 ;
"RTN","IBCONS2",31,0)
 ; Process stand-alone add/edits extracted
"RTN","IBCONS2",32,0)
 S DFN=0 F  S DFN=$O(^TMP("IBOEC",$J,DFN)) Q:'DFN  I $D(^DPT(DFN,0)) D
"RTN","IBCONS2",33,0)
 . S IBDTA=0 F  S IBDTA=$O(^TMP("IBOEC",$J,DFN,IBDTA)) Q:'IBDTA  D
"RTN","IBCONS2",34,0)
 .. K IBOE,IBSTOP,IBCOMB
"RTN","IBCONS2",35,0)
 .. S IBNO=1
"RTN","IBCONS2",36,0)
 .. S IBOEZ=0 F  S IBOEZ=$O(^TMP("IBOEC",$J,DFN,IBDTA,IBOEZ)) Q:'IBOEZ  S IBOE0=$$SCE^IBSDU(IBOEZ,"",0) D
"RTN","IBCONS2",37,0)
 ... S IBDV=$P(IBOE0,U,11)
"RTN","IBCONS2",38,0)
 ... S:$L($G(IBOE(IBNO)))+$L(IBOEZ)+1>200 IBNO=IBNO+1
"RTN","IBCONS2",39,0)
 ... S IBOE(IBNO)=$G(IBOE(IBNO))_IBOEZ_U I '$G(IBOE) S IBOE=+IBOE(1)
"RTN","IBCONS2",40,0)
 ... S Z=+$P($G(^DIC(40.7,+$P(IBOE0,U,3),0)),U,2) S:Z IBCOMB(Z)=$G(IBCOMB(Z))+1
"RTN","IBCONS2",41,0)
 .. S:'$D(IBSTOP) IBSTOP="Add/Edit Stop Code^"
"RTN","IBCONS2",42,0)
 .. S Z=0 F  S Z=$O(IBCOMB(Z)) Q:'Z  S IBSTOP=IBSTOP_Z_$S(IBCOMB(Z)=1:"",1:"(x"_IBCOMB(Z)_")")_U
"RTN","IBCONS2",43,0)
 .. ;
"RTN","IBCONS2",44,0)
 .. S I=IBDTA
"RTN","IBCONS2",45,0)
 .. I $G(IBOE) D PROCO ;All add/edit encounters for a patient/date on a single line
"RTN","IBCONS2",46,0)
 ;
"RTN","IBCONS2",47,0)
 K ^TMP("IBOEC",$J),^TMP($J,"PATIENT INCLUDE"),^TMP($J,"PATIENT EXCLUDE")
"RTN","IBCONS2",48,0)
 Q
"RTN","IBCONS2",49,0)
 ;
"RTN","IBCONS2",50,0)
CALLBCK(IBOE,IBOE0,IBQUERY2) ; Executed by scan call back logic to process encounters
"RTN","IBCONS2",51,0)
 ; IBOE = encounter ien
"RTN","IBCONS2",52,0)
 ; IBOE0 = 0-node of the encounter
"RTN","IBCONS2",53,0)
 ;
"RTN","IBCONS2",54,0)
 N DFN,I,IBDC,IBDS,IBDV,IBSTOP,IBT,Z
"RTN","IBCONS2",55,0)
 I '$$BDSRC^IBEFUNC3($P($G(IBOE0),U,5)) Q  ; non-billable visit data source
"RTN","IBCONS2",56,0)
 ;
"RTN","IBCONS2",57,0)
 S IBT=$P(IBOE0,U,8),DFN=$P(IBOE0,U,2),IBDV=$P(IBOE0,U,11),(IBDS,IBDC)=""
"RTN","IBCONS2",58,0)
 S I=+IBOE0
"RTN","IBCONS2",59,0)
 Q:'I  Q:DFN=""
"RTN","IBCONS2",60,0)
 I IBT=1 D
"RTN","IBCONS2",61,0)
 . S IBDC=+$P(IBOE0,U,4)
"RTN","IBCONS2",62,0)
 . I IBDV="" S IBDV=$P($G(^SC(IBDC,0)),U,15)
"RTN","IBCONS2",63,0)
 ;
"RTN","IBCONS2",64,0)
 I IBT=3 D
"RTN","IBCONS2",65,0)
 . S IBDS=$$DISND^IBSDU(IBOE,IBOE0)
"RTN","IBCONS2",66,0)
 . I IBDV="" S IBDV=$P(IBDS,U,4)
"RTN","IBCONS2",67,0)
 ;
"RTN","IBCONS2",68,0)
 Q:'$$VALID()
"RTN","IBCONS2",69,0)
 ;
"RTN","IBCONS2",70,0)
 ; Screen to only include 1-3 originating process and
"RTN","IBCONS2",71,0)
 ;  for 1 or 2, include only those that have appt types indicating they
"RTN","IBCONS2",72,0)
 ;  are included on reports 
"RTN","IBCONS2",73,0)
 ;
"RTN","IBCONS2",74,0)
 I $S(IBT<3:$$RPT^IBEFUNC($P(IBOE0,U,10),+IBOE0),1:IBT=3) D
"RTN","IBCONS2",75,0)
 . ; Extract add/edits to global so we can combine the data into one line (2 lines if RNB defined)
"RTN","IBCONS2",76,0)
 . I IBT=2 D  Q  ; Stand-alone Add/Edits
"RTN","IBCONS2",77,0)
 .. I VAUTD'=1 Q:'$D(VAUTD(+IBDV))
"RTN","IBCONS2",78,0)
 .. I VAUTD=1 Q:'IBDV
"RTN","IBCONS2",79,0)
 .. I +$$RNBOE(IBOE) S ^TMP("IBOEC",$J,DFN,(IBOE0\1)_".",IBOE)="" Q
"RTN","IBCONS2",80,0)
 .. S ^TMP("IBOEC",$J,DFN,IBOE0\1,IBOE)=""
"RTN","IBCONS2",81,0)
 . ;
"RTN","IBCONS2",82,0)
 . I IBT=1 D  Q  ;Appointments
"RTN","IBCONS2",83,0)
 .. I IBDC D
"RTN","IBCONS2",84,0)
 ... S X=$$CHILD(IBOE,IBOE0,.IBVAL,.IBSTOP,.IBQUERY2)
"RTN","IBCONS2",85,0)
 ... S IBSTOP="Clinic: "_$P($G(^SC(IBDC,0)),U)_$S('X:"",1:"  --  "_IBSTOP)
"RTN","IBCONS2",86,0)
 ... S I=+IBOE0 D PROCO
"RTN","IBCONS2",87,0)
 . ;
"RTN","IBCONS2",88,0)
 . I IBT=3 D  Q  ;Registration
"RTN","IBCONS2",89,0)
 .. N X
"RTN","IBCONS2",90,0)
 .. Q:'$$DISCT^IBEFUNC(IBOE,IBOE0)
"RTN","IBCONS2",91,0)
 .. S X=$$CHILD(IBOE,IBOE0,.IBVAL,.IBSTOP,.IBQUERY2)
"RTN","IBCONS2",92,0)
 .. S IBSTOP="Registration: "_$P($G(^DIC(37,+$P(IBDS,U,7),0)),U)_$S('X:"",1:"  --  "_IBSTOP)
"RTN","IBCONS2",93,0)
 .. S I=+IBOE0 D PROCO
"RTN","IBCONS2",94,0)
 ;
"RTN","IBCONS2",95,0)
 Q
"RTN","IBCONS2",96,0)
 ;
"RTN","IBCONS2",97,0)
CHILD(IBOE,IBOE0,IBVAL,IBSTOP,IBQUERY2) ;Find any child add/edits
"RTN","IBCONS2",98,0)
 ;  IBSTOP and IBQUERY2 are returned
"RTN","IBCONS2",99,0)
 N IBVAL1,IBFILTER,IBCBK,IBCOMB,Z
"RTN","IBCONS2",100,0)
 M IBVAL1=IBVAL
"RTN","IBCONS2",101,0)
 S (IBFILTER,IBSTOP)="",IBVAL1("DFN")=+$P(IBOE0,U,2)
"RTN","IBCONS2",102,0)
 S IBCBK="I $S(Y=IBOE:1,1:$P(Y0,U,6)=IBOE),$P(Y0,U,3),$$RPT^IBEFUNC($P(Y0,U,10),+Y0) S Z=+$P($G(^DIC(40.7,+$P(Y0,U,3),0)),U,2) S:Z IBCOMB(Z)=$G(IBCOMB(Z))+1"
"RTN","IBCONS2",103,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL1,IBFILTER,IBCBK,0,.IBQUERY2) K ^TMP("DIERR",$J)
"RTN","IBCONS2",104,0)
 S Z=0 F  S Z=$O(IBCOMB(Z)) Q:'Z  S IBSTOP=$S(IBSTOP="":"Stop Codes^",1:IBSTOP)_Z_$S(IBCOMB(Z)=1:"",1:"(x"_IBCOMB(Z)_")")_U
"RTN","IBCONS2",105,0)
 Q (IBSTOP'="")
"RTN","IBCONS2",106,0)
 ;
"RTN","IBCONS2",107,0)
PROC ;  -process each episode of care
"RTN","IBCONS2",108,0)
 Q:'$$VALID()
"RTN","IBCONS2",109,0)
PROCO ; Entrypoint for outpatient loop2
"RTN","IBCONS2",110,0)
 K IBRMARK
"RTN","IBCONS2",111,0)
 I '$G(IBSC) D TRACK^IBCONS3 ;     -find tracking entry get reason not billable
"RTN","IBCONS2",112,0)
 I +$G(IBSC) S IBRMARK="{ALL MOVES SC}" ; stays with all SC moves not added to CT but on rpt w/RNB  ** PATCH 66
"RTN","IBCONS2",113,0)
 D BILL,SET ;          -on billed or unbilled list
"RTN","IBCONS2",114,0)
 Q
"RTN","IBCONS2",115,0)
 ;
"RTN","IBCONS2",116,0)
VALID() ;
"RTN","IBCONS2",117,0)
 N IBOK
"RTN","IBCONS2",118,0)
 S IBOK=0
"RTN","IBCONS2",119,0)
 I +$G(IBSELRNG),$D(^TMP($J,"PATIENT EXCLUDE",DFN)) G VALIDQ ; pat already excluded from select range ** PATCH 66
"RTN","IBCONS2",120,0)
 I +$G(IBSELRNG),+$G(IBSELRNG)<3,'$$PAT(DFN) G VALIDQ ; patient in selected range  ** PATCH 66
"RTN","IBCONS2",121,0)
 I VAUTD'=1 G:'$D(VAUTD(+IBDV)) VALIDQ
"RTN","IBCONS2",122,0)
 I VAUTD=1 G:'IBDV VALIDQ
"RTN","IBCONS2",123,0)
 D PTCHK G:'IBFLAG VALIDQ ;  -is patient a vet and have ins data
"RTN","IBCONS2",124,0)
 D INS G:'IBFLAG VALIDQ ;    -is insurance valid for date of care
"RTN","IBCONS2",125,0)
 I +$G(IBSELRNG)=3,'$$PTINS(DFN) G VALIDQ ; patient ins is included in range  ** PATCH 66
"RTN","IBCONS2",126,0)
 S IBOK=1
"RTN","IBCONS2",127,0)
VALIDQ Q IBOK
"RTN","IBCONS2",128,0)
 ;
"RTN","IBCONS2",129,0)
INS S IBFLAG=$$INSURED^IBCNS1(DFN,I)
"RTN","IBCONS2",130,0)
 I +IBFLAG,+IBINPT,'$$PTCOV^IBCNSU3(DFN,+I,"INPATIENT") S IBFLAG=0
"RTN","IBCONS2",131,0)
 Q
"RTN","IBCONS2",132,0)
 ;
"RTN","IBCONS2",133,0)
PTCHK S IBFLAG=0 I $D(^DPT(+DFN,.312)),$G(^("VET"))="Y" S IBFLAG=1
"RTN","IBCONS2",134,0)
 ; Patch #36 - removes non-veteran eligibilities and inpatient visits
"RTN","IBCONS2",135,0)
 I 'IBINPT D
"RTN","IBCONS2",136,0)
 .N IBTEMP,IBOE0 S IBTEMP=$$SCE^IBSDU(+IBOE,13,0),IBOE0=$$SCE^IBSDU(+IBOE)
"RTN","IBCONS2",137,0)
 .I $P($G(^DIC(8,+IBTEMP,0)),U,5)="N" S IBFLAG=0 Q
"RTN","IBCONS2",138,0)
 .I '$$APPTCT^IBEFUNC(IBOE0) S IBFLAG=0 Q
"RTN","IBCONS2",139,0)
 Q
"RTN","IBCONS2",140,0)
 ;
"RTN","IBCONS2",141,0)
SET N DPT0,IBSUBSC2,IBSUBSC3,IBSUBSC4,IBSUBSC6 S DPT0=$G(^DPT(+DFN,0))
"RTN","IBCONS2",142,0)
 S IBSUBSC2=+IBDV I +$G(IBSELCDV) S IBSUBSC2="COMBINED"
"RTN","IBCONS2",143,0)
 S IBSUBSC3=$S(B]"":2,1:1)
"RTN","IBCONS2",144,0)
 S IBSUBSC4=$P(DPT0,U,1) I +$G(IBSELTRM) S IBSUBSC4=+$$TERMDG(DFN)
"RTN","IBCONS2",145,0)
 S IBSUBSC6=I F IBSUBSC6=IBSUBSC6:.000001 Q:'$D(^TMP($J,IBSUBSC2,IBSUBSC3,IBSUBSC4,DFN,IBSUBSC6))
"RTN","IBCONS2",146,0)
 S ^TMP($J,IBSUBSC2,IBSUBSC3,IBSUBSC4,DFN,IBSUBSC6)=B
"RTN","IBCONS2",147,0)
 I $D(IBSTOP),'$D(^TMP($J,IBSUBSC2,IBSUBSC3,IBSUBSC4,DFN,IBSUBSC6,1)) S ^(1)=IBSTOP
"RTN","IBCONS2",148,0)
 I $G(IBRMARK)'="" S ^TMP($J,IBSUBSC2,IBSUBSC3,IBSUBSC4,DFN,IBSUBSC6,2)=$G(IBRMARK)
"RTN","IBCONS2",149,0)
 K IBSTOP,IBRMARK
"RTN","IBCONS2",150,0)
 Q
"RTN","IBCONS2",151,0)
 ;
"RTN","IBCONS2",152,0)
BILL ;  Add to billed list if is insurance bill, not canceled
"RTN","IBCONS2",153,0)
 ;     if opt, date is in list, if inpt, admission date = event date
"RTN","IBCONS2",154,0)
 ;  ** PATCH 66 modified to include check for bill authorized status and add that to the stored TMP array
"RTN","IBCONS2",155,0)
 ;
"RTN","IBCONS2",156,0)
 S B="",I1=$S(IBINPT=2:IBADM,IBINPT:I,1:I\1),IBAUTH=2 N IB0
"RTN","IBCONS2",157,0)
 ; -- the following line modified in patch 19 to check for only inpt. bills ($p(^(0),u,5)<3) are counted as bills,
"RTN","IBCONS2",158,0)
 ;    for when there is an outpatient bill with the same event date.
"RTN","IBCONS2",159,0)
 I IBINPT,$D(^DGCR(399,"C",DFN)) F M=0:0 S M=$O(^DGCR(399,"C",DFN,M)) Q:'M  D  Q:$L(B)>200
"RTN","IBCONS2",160,0)
 . S IB0=$G(^DGCR(399,M,0))
"RTN","IBCONS2",161,0)
 . I IB0'="",$P(IB0,"^",5)<3,$P(IB0,"^",13)<7,$P($P(IB0,"^",3),".")=$P(I1,"."),$P(IB0,"^",11)="i" S B=B_M_"^" I $P(IB0,"^",13)<2 S IBAUTH=1
"RTN","IBCONS2",162,0)
 ;
"RTN","IBCONS2",163,0)
 I 'IBINPT,$D(^DGCR(399,"AOPV",DFN,I1)) F M=0:0 S M=$O(^DGCR(399,"AOPV",DFN,I1,M)) Q:'M  D  Q:$L(B)>200
"RTN","IBCONS2",164,0)
 . S IB0=$G(^DGCR(399,M,0))
"RTN","IBCONS2",165,0)
 . I IB0'="",$P(IB0,"^",13)<7,$P(IB0,"^",11)="i" S B=B_M_"^" I $P(IB0,"^",13)<2 S IBAUTH=1
"RTN","IBCONS2",166,0)
 I +B S B=IBAUTH_"^"_B
"RTN","IBCONS2",167,0)
 Q
"RTN","IBCONS2",168,0)
 ;
"RTN","IBCONS2",169,0)
PTF ;  if all movements are for sc condition then not billable
"RTN","IBCONS2",170,0)
 ;
"RTN","IBCONS2",171,0)
 S IBSC="" Q:'$D(^DGPT(+PTF))
"RTN","IBCONS2",172,0)
 S IBMOV=0 F  S IBMOV=$O(^DGPT(PTF,"M",IBMOV)) Q:'IBMOV  S IBSC=$P($G(^(IBMOV,0)),"^",18) I IBSC=2!(IBSC="") Q
"RTN","IBCONS2",173,0)
 S IBSC=$S(IBSC=2!(IBSC=""):0,1:1)
"RTN","IBCONS2",174,0)
 Q
"RTN","IBCONS2",175,0)
DIV ;adds the requested divisions to the report
"RTN","IBCONS2",176,0)
 N IBDIV I +$G(IBSELCDV) S ^TMP($J,"COMBINED")="" Q
"RTN","IBCONS2",177,0)
 I VAUTD'=1 D
"RTN","IBCONS2",178,0)
 .S IBDIV="" F  S IBDIV=$O(VAUTD(IBDIV)) Q:'IBDIV  S ^TMP($J,IBDIV)=""
"RTN","IBCONS2",179,0)
 I VAUTD=1 D
"RTN","IBCONS2",180,0)
 .S IBDIV="" F  S IBDIV=$O(^DG(40.8,IBDIV)) Q:IBDIV']""!(+IBDIV'=IBDIV)  I $P($G(^DG(40.8,IBDIV,0)),"^",1)]"" S ^TMP($J,IBDIV)=""
"RTN","IBCONS2",181,0)
 Q
"RTN","IBCONS2",182,0)
 ;
"RTN","IBCONS2",183,0)
PAT(DFN) ; true if patient is included in range requested   ** PATCH 66
"RTN","IBCONS2",184,0)
 N IBX,IBY S IBX=1
"RTN","IBCONS2",185,0)
 I $D(^TMP($J,"PATIENT INCLUDE",DFN)) S IBX=1 G PATQ
"RTN","IBCONS2",186,0)
 I $D(^TMP($J,"PATIENT EXCLUDE",DFN)) S IBX=0 G PATQ
"RTN","IBCONS2",187,0)
 ;
"RTN","IBCONS2",188,0)
 I +$G(IBSELRNG)=2 S IBY=$$TERMDG(DFN) D
"RTN","IBCONS2",189,0)
 . I IBY<$G(IBSELSR1) S IBX=0
"RTN","IBCONS2",190,0)
 . I +$G(IBSELSR2),IBY>IBSELSR2 S IBX=0
"RTN","IBCONS2",191,0)
 ;
"RTN","IBCONS2",192,0)
 I +$G(IBSELRNG)=1 S IBY=$P($G(^DPT(+DFN,0)),U,1),IBX=$$STGRNG(IBY)
"RTN","IBCONS2",193,0)
 ;
"RTN","IBCONS2",194,0)
 I +IBX S ^TMP($J,"PATIENT INCLUDE",DFN)=""
"RTN","IBCONS2",195,0)
 I 'IBX S ^TMP($J,"PATIENT EXCLUDE",DFN)=""
"RTN","IBCONS2",196,0)
PATQ Q IBX
"RTN","IBCONS2",197,0)
 ;
"RTN","IBCONS2",198,0)
PTINS(DFN) ; check if patients ins is within selected range  ** PATCH 66
"RTN","IBCONS2",199,0)
 N IBY,IBX,IBAR,IBI S IBX=1
"RTN","IBCONS2",200,0)
 I $D(^TMP($J,"PATIENT INCLUDE",DFN)) S IBX=1 G PTINSQ
"RTN","IBCONS2",201,0)
 I $D(^TMP($J,"PATIENT EXCLUDE",DFN)) S IBX=0 G PTINSQ
"RTN","IBCONS2",202,0)
 ;
"RTN","IBCONS2",203,0)
 I $G(IBSELRNG)=3 D ALL^IBCNS1(DFN,"IBAR",1,IBBEG),ALL^IBCNS1(DFN,"IBAR",1,IBEND) S IBX=0
"RTN","IBCONS2",204,0)
 S IBI=0 F  S IBI=$O(IBAR(IBI)) Q:'IBI  S IBY=+$G(IBAR(IBI,0)),IBY=$P($G(^DIC(36,+IBY,0)),U,1) I +$$STGRNG(IBY) S IBX=1 Q
"RTN","IBCONS2",205,0)
 ;
"RTN","IBCONS2",206,0)
 I +IBX S ^TMP($J,"PATIENT INCLUDE",DFN)=""
"RTN","IBCONS2",207,0)
 I 'IBX S ^TMP($J,"PATIENT EXCLUDE",DFN)=""
"RTN","IBCONS2",208,0)
PTINSQ Q IBX
"RTN","IBCONS2",209,0)
 ;
"RTN","IBCONS2",210,0)
STGRNG(STRNG) ; check if the string passed in is contained within the selected ASCII range  ** PATCH 66
"RTN","IBCONS2",211,0)
 N IBSB,IBSE,IBI,IBY,IBX S IBX=1,STRNG=$$ASCII($G(STRNG))
"RTN","IBCONS2",212,0)
 F IBI=1:1 S IBSB=$P($G(IBSELSR1),",",IBI),IBY=$P(STRNG,",",IBI) Q:'IBSB  Q:IBSB<IBY  I IBSB>IBY S IBX=0 Q
"RTN","IBCONS2",213,0)
 F IBI=1:1 S IBSE=$P($G(IBSELSR2),",",IBI),IBY=$P(STRNG,",",IBI) Q:'IBSE  Q:IBSE>IBY  I IBSE<IBY S IBX=0 Q
"RTN","IBCONS2",214,0)
 Q IBX
"RTN","IBCONS2",215,0)
 ;
"RTN","IBCONS2",216,0)
ASCII(STRNG) ; returns string in ASCII ** PATCH 66
"RTN","IBCONS2",217,0)
 N IBI,IBX,IBY S IBX=""
"RTN","IBCONS2",218,0)
 I $G(STRNG)'="" F IBI=1:1 S IBY=$E(STRNG,IBI) Q:IBY=""  S IBX=IBX_$A(IBY)_"," Q:$L(IBX)>196
"RTN","IBCONS2",219,0)
 Q IBX
"RTN","IBCONS2",220,0)
 ;
"RTN","IBCONS2",221,0)
TERMDG(DFN) ; returns a patients terminal digit  ** PATCH 66
"RTN","IBCONS2",222,0)
 N TERMD,DPT0,SSN S TERMD="",DPT0=$G(^DPT(+DFN,0)),SSN=$P(DPT0,"^",9)
"RTN","IBCONS2",223,0)
 S TERMD=$E(SSN,8,9)_$E(SSN,6,7)_$E(SSN,4,5)_$E(SSN,1,3)
"RTN","IBCONS2",224,0)
 Q TERMD
"RTN","IBCONS2",225,0)
 ;
"RTN","IBCONS2",226,0)
RNBOE(IBOE) ; return a Reason Not Billable for the encounter if one can be found
"RTN","IBCONS2",227,0)
 N IBX,IBR S IBR="" I +$G(IBOE) S IBX=+$O(^IBT(356,"ASCE",+IBOE,0)) I +IBX S IBR=$P($G(^IBT(356,IBX,0)),U,19)
"RTN","IBCONS2",228,0)
 Q IBR
"RTN","IBCRBC11")
0^84^B9906582
"RTN","IBCRBC11",1,0)
IBCRBC11 ;ALB/ARH - RATES: BILL CALCULATION BILLABLE EVENTS ;10-OCT-1998
"RTN","IBCRBC11",2,0)
 ;;2.0;INTEGRATED BILLING;**106,245,155**;21-MAR-94
"RTN","IBCRBC11",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBC11",4,0)
 ;
"RTN","IBCRBC11",5,0)
 ; continuation of IBCRBC1
"RTN","IBCRBC11",6,0)
 ;
"RTN","IBCRBC11",7,0)
INPTDRG(IBIFN,RS,CS) ; Determine charges for INPATIENT DRG billable events
"RTN","IBCRBC11",8,0)
 ; - the billable events are DRG's, the Transfer DRG of the patient treating specialties movements,
"RTN","IBCRBC11",9,0)
 ;   pulled from the PTF record each time the charges are calculated (INPTPTF^IBCRCG)
"RTN","IBCRBC11",10,0)
 ; - each day of billable care is calculated separately in case a rate becomes in/active
"RTN","IBCRBC11",11,0)
 ; - if bedsection is ICU then allow ICU Charge Set only
"RTN","IBCRBC11",12,0)
 ;
"RTN","IBCRBC11",13,0)
 N IBX,IBBLITEM,IBCHGMTH,IBEVDT,IBIDRC,IBBS,IBITM,IBTYPE,IBCMPNT,IBSAVE I '$G(IBIFN)!'$G(CS) Q
"RTN","IBCRBC11",14,0)
 ;
"RTN","IBCRBC11",15,0)
 D INPTPTF^IBCRBG(IBIFN,CS)
"RTN","IBCRBC11",16,0)
 ;
"RTN","IBCRBC11",17,0)
 S IBTYPE=6,IBCMPNT=$P($G(^IBE(363.1,+CS,0)),U,4),IBX=$$CSBR^IBCRU3(CS),IBBLITEM=$P(IBX,U,4),IBCHGMTH=$P(IBX,U,5)
"RTN","IBCRBC11",18,0)
 S IBIDRC=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBC11",19,0)
 I 'IBIDRC,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBIDRC=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBC11",20,0)
 S IBIDRC=$G(^DIC(36,+IBIDRC,0)),IBIDRC=$P(IBIDRC,U,7)
"RTN","IBCRBC11",21,0)
 ;
"RTN","IBCRBC11",22,0)
 S IBBDIV=$P($G(^DGCR(399,+IBIFN,0)),U,22) ; bill's default division
"RTN","IBCRBC11",23,0)
 ;
"RTN","IBCRBC11",24,0)
 I IBBLITEM=4,IBCHGMTH=1 D  ; inpt/DRG/per diem
"RTN","IBCRBC11",25,0)
 . S IBEVDT="" F  S IBEVDT=$O(^TMP($J,"IBCRC-INDT",IBEVDT)) Q:IBEVDT=""  D
"RTN","IBCRBC11",26,0)
 .. ;
"RTN","IBCRBC11",27,0)
 .. S IBX=$G(^TMP($J,"IBCRC-INDT",IBEVDT)),IBITM=$P(IBX,U,4),IBBS=$P(IBX,U,2),IBDIV=$P(IBX,U,5) Q:'IBITM
"RTN","IBCRBC11",28,0)
 .. ;
"RTN","IBCRBC11",29,0)
 .. I '$$CHGICU^IBCRBC2(CS,IBBS) Q  ; check icu charges are applied to icu bedsection
"RTN","IBCRBC11",30,0)
 .. ;
"RTN","IBCRBC11",31,0)
 .. I $$CSDV^IBCRU3(CS,IBDIV,IBBDIV)<0 Q  ; check division
"RTN","IBCRBC11",32,0)
 .. ;
"RTN","IBCRBC11",33,0)
 .. S IBSAVE="1^^"_IBDIV_"^"_IBTYPE_"^"_IBITM_"^"_IBCMPNT_"^"_IBBS
"RTN","IBCRBC11",34,0)
 .. D BITMCHG^IBCRBC2(RS,CS,IBITM,IBEVDT,1,"","",IBIDRC,IBSAVE)
"RTN","IBCRBC11",35,0)
 K ^TMP($J,"IBCRC-INDT")
"RTN","IBCRBC11",36,0)
 Q
"RTN","IBCRBC11",37,0)
 ;
"RTN","IBCRBC11",38,0)
UNASSOC(IBIFN,RS,CS,IBMIARR) ; Determine charges for UNASSOCIATED billable events
"RTN","IBCRBC11",39,0)
 ; - the billable event is not associated with any data element on the bill
"RTN","IBCRBC11",40,0)
 ; - the item to charge is selected by the user from the list of billing items (363.21)
"RTN","IBCRBC11",41,0)
 ; - the items the user selected to add charges to the bill for are passed in in array IBMIARR
"RTN","IBCRBC11",42,0)
 ; - if the charge set is limited by region then either the items division or if no item division then the bill's
"RTN","IBCRBC11",43,0)
 ;   Default Division must be contained in the sets region
"RTN","IBCRBC11",44,0)
 ;
"RTN","IBCRBC11",45,0)
 N IBX,IBBLITEM,IBCHGMTH,IBIDRC,IBBDIV,IBI,IBITM,IBEVDT,IBTUNITS,IBDIV,IBRVCD,IBTYPE,IBCMPNT,IBSAVE
"RTN","IBCRBC11",46,0)
 I '$G(IBIFN)!'$G(CS)!'$G(IBMIARR) Q
"RTN","IBCRBC11",47,0)
 ;
"RTN","IBCRBC11",48,0)
 S IBTYPE=9,IBCMPNT=$P($G(^IBE(363.1,+CS,0)),U,4),IBX=$$CSBR^IBCRU3(CS),IBBLITEM=$P(IBX,U,4),IBCHGMTH=$P(IBX,U,5)
"RTN","IBCRBC11",49,0)
 S IBIDRC=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBC11",50,0)
 I 'IBIDRC,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBIDRC=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBC11",51,0)
 S IBIDRC=$G(^DIC(36,+IBIDRC,0)),IBIDRC=$P(IBIDRC,U,7)
"RTN","IBCRBC11",52,0)
 ;
"RTN","IBCRBC11",53,0)
 S IBBDIV=$P($G(^DGCR(399,+IBIFN,0)),U,22) ; bill's default division
"RTN","IBCRBC11",54,0)
 ;
"RTN","IBCRBC11",55,0)
 I IBBLITEM=9,IBCHGMTH=1 D  ; charge per item
"RTN","IBCRBC11",56,0)
 . S IBI=0 F  S IBI=$O(IBMIARR(RS,CS,IBI)) Q:'IBI  D
"RTN","IBCRBC11",57,0)
 .. S IBX=IBMIARR(RS,CS,IBI),IBITM=+$P(IBX,U,1),IBEVDT=$P(IBX,U,2)
"RTN","IBCRBC11",58,0)
 .. S IBTUNITS=$P(IBX,U,3),IBDIV=$P(IBX,U,4),IBRVCD=$P(IBX,U,5)
"RTN","IBCRBC11",59,0)
 .. ;
"RTN","IBCRBC11",60,0)
 .. I $$CSDV^IBCRU3(CS,IBDIV,IBBDIV)<0 Q  ; check division
"RTN","IBCRBC11",61,0)
 .. ;
"RTN","IBCRBC11",62,0)
 .. S IBSAVE=IBTUNITS_"^^"_IBDIV_"^"_IBTYPE_"^"_IBITM_"^"_IBCMPNT
"RTN","IBCRBC11",63,0)
 .. D BITMCHG^IBCRBC2(RS,CS,IBITM,IBEVDT,1,"",IBRVCD,IBIDRC,IBSAVE)
"RTN","IBCRBC11",64,0)
 Q
"RTN","IBCSC4")
0^75^B23272927
"RTN","IBCSC4",1,0)
IBCSC4 ;ALB/MJB - MCCR SCREEN 4 (INPT. EOC) ;27 MAY 88 10:17
"RTN","IBCSC4",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,210,245,155**;21-MAR-94
"RTN","IBCSC4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC4",4,0)
 ;
"RTN","IBCSC4",5,0)
 ;MAP TO DGCRSC4
"RTN","IBCSC4",6,0)
 ;
"RTN","IBCSC4",7,0)
EN I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC5
"RTN","IBCSC4",8,0)
 I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7 I $$BILLCPT^IBCRU4(IBIFN) S DGRVRCAL=1
"RTN","IBCSC4",9,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC4",10,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCSC4",11,0)
 D ^IBCSCU S IBSR=4,IBSR1="",IBV1="0000000"_$S($$FT^IBCEF(IBIFN)'=2:0,1:1),IBUC="UNSPECIFIED CODE"
"RTN","IBCSC4",12,0)
 S:IBV IBV1="11111111"
"RTN","IBCSC4",13,0)
 D H^IBCSCU F I=1:1:4 S Y="Q"_I_"^IBCVA" D @Y
"RTN","IBCSC4",14,0)
 D INP
"RTN","IBCSC4",15,0)
 S IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
"RTN","IBCSC4",16,0)
 D:DGPT(0)]"" DX^IBCSC4A D OCC^IBCVA1
"RTN","IBCSC4",17,0)
 I '$P(DGPT(0),U,6) W !?26,$S('DGPT(0):"No PTF record for this ADMISSION",1:"PTF record status: OPEN")
"RTN","IBCSC4",18,0)
 S J=$P(IB("U"),U,20),J=$S(J=99:"",J="":"",$L(J)=1:".0"_J,1:"."_J)
"RTN","IBCSC4",19,0)
 S Z=1 X IBWW W " Admission  : " S I=$S($P(DGPT(0),U,2)]"":$P(DGPT(0),U,2),1:$P(IBIP,U,2)_J) S:$P(I,".",2)=""&I $P(I,".",2)="2400"
"RTN","IBCSC4",20,0)
 S Y=$$FMTE^XLFDT(I,"1P")
"RTN","IBCSC4",21,0)
 W Y,?49,"Accident Hour: ",$S($P(IB("U"),U,10)=99:IBU,$P(IB("U"),U,10)'="":$P(IB("U"),U,10),1:IBU)
"RTN","IBCSC4",22,0)
 W !?4,"Source     : " S I=$P(^DD(399,159,0),U,3),I=$P($P(I,";",($P(IB("U"),U,9))),":",2) W I
"RTN","IBCSC4",23,0)
 W ?58,"Type: ",$S($P(IB("U"),U,8)=3:"ELECTIVE",$P(IB("U"),U,8)=1:"EMERGENCY",$P(IB("U"),U,8)=2:"URGENT",1:IBU)
"RTN","IBCSC4",24,0)
 D OT
"RTN","IBCSC4",25,0)
 S Z=2 X IBWW
"RTN","IBCSC4",26,0)
 W " Discharge  : " S Y=$S($P(IBIP,U,6)>0:$P(IBIP,U,6),1:"") X ^DD("DD") W $S(Y]"":Y,1:IBU)
"RTN","IBCSC4",27,0)
 W !?4,"Status     : ",$S($P(IB("U"),U,12)]""&($D(^DGCR(399.1,(+$P(IB("U"),"^",12)),0))):$P(^(0),"^",1),1:IBU)
"RTN","IBCSC4",28,0)
 N IBPOARR,IBDATE
"RTN","IBCSC4",29,0)
 D SET^IBCSC4D(IBIFN,"",.IBPOARR)
"RTN","IBCSC4",30,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The EVENT DATE of the bill
"RTN","IBCSC4",31,0)
 S Z=3,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX(0,IBDATE) W $S(Y'="":$P(Y,U,4)_" - "_$P(Y,U,2),$$DXREQ(IBIFN):IBU,1:IBUN)
"RTN","IBCSC4",32,0)
 F I=1:1:4 S Y=$$DX(+Y,IBDATE) Q:Y=""  W !?4,"Other Diag.: ",$P(Y,U,4)_" - "_$P(Y,U,2)
"RTN","IBCSC4",33,0)
 I +Y S Y=$$DX(+Y,IBDATE) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
"RTN","IBCSC4",34,0)
 ;F I=15:1:18 I $P(IB("C"),U,I)]"" W !?4,"Other Diag.: ",$S($D(^ICD9($P(IB("C"),U,I),0)):$P(^(0),U,3)_" - "_$P(^(0),U,1),1:IBU)
"RTN","IBCSC4",35,0)
 S Z=4,IBW=1,DGPCM=$P(IB(0),U,9) X IBWW W " Cod. Method: ",$S(DGPCM="":IBUN,DGPCM=9:"ICD-9-CM",DGPCM=4:"CPT-4",1:"HCPCS")
"RTN","IBCSC4",36,0)
 D:$D(IBPROC) WRT^IBCSC5
"RTN","IBCSC4",37,0)
 ;I DGPCM="" W !?4,"Pro. Code  : ",IBUN G OCC
"RTN","IBCSC4",38,0)
 ;I $D(IBCPT),DGPCM=4 F I=1:1:3 I $D(IBCPT(I)) W !?4,"CPT Code   : ",$P(^ICPT(IBCPT(I),0),U,2)," - ",$P(^(0),U),?55,"Date: " S Y=$P(IB("C"),U,(I+10)) D DT^DIQ
"RTN","IBCSC4",39,0)
 ;I DGPCM=4 W:'$D(IBCPT) !?4,"Pro. Code  : ",IBUN G OCC
"RTN","IBCSC4",40,0)
 ;I $D(IBICD),DGPCM=9 F I=4:1:6 I $D(IBICD(I)) W !?4,"ICD Code   : ",$S($D(^ICD0(IBICD(I),0)):$E($P(^(0),U,4),1,20)_" - "_$P(^(0),U,1),1:IBUC),?55,"Date: " S Y=$P(IB("C"),U,(I+7)) D DT^DIQ
"RTN","IBCSC4",41,0)
 ;I DGPCM=9 W:'$D(IBICD) !?4,"Pro. Code  : ",IBUN G OCC
"RTN","IBCSC4",42,0)
 ;I $D(IBHC),DGPCM=5 F I=7:1:9 I $D(IBHC(I)) W !?4,"HCFA Code  : ",$P(^ICPT(IBHC(I),0),U,2)," - ",IBHCN(I),?55,"Date: " S Y=$P(IB("C"),U,(I+4)) D DT^DIQ
"RTN","IBCSC4",43,0)
 ;I DGPCM=5 W:'$D(IBHC) !?4,"Pro. Code  : ",IBUN
"RTN","IBCSC4",44,0)
OCC ;I $O(^DGCR(399,IBIFN,"CP",0)) S I=0 F I1=1:1 S I=$O(^DGCR(399,IBIFN,"CP",I)) D:I1>9 MORE Q:'I  W !,?17 S Y=$P(^(I,0),"^",2) D:+Y D^DIQ D OCC1
"RTN","IBCSC4",45,0)
 S Z=$S($P(IB(0),U,5)<3:5,1:6)
"RTN","IBCSC4",46,0)
 S IBW=1 X IBWW W " Pros. Items: " S Y=$$PD^IBCSC5 I 'Y W IBUN
"RTN","IBCSC4",47,0)
 S Z=$S($P(IB(0),U,5)<3:6,1:7) X IBWW
"RTN","IBCSC4",48,0)
 W " Occ. Code  : " F I=1:1:5 I $D(IBO(I)) W:I>1 !?4,"Occ. Code  : ",$E(IBOCN(I),1,27) W:I=1 $E(IBOCN(I),1,27) S Y=IBOCD(I) X ^DD("DD") W ?55,Y S Y=IBOCD2(I) I +Y X ^DD("DD") W " - ",Y
"RTN","IBCSC4",49,0)
 I '$D(IBO) W IBUN
"RTN","IBCSC4",50,0)
 I $D(IBO)=1,IBO="" W IBUN
"RTN","IBCSC4",51,0)
 S Z=$S($P(IB(0),U,5)<3:7,1:8) X IBWW
"RTN","IBCSC4",52,0)
 W " Cond. Code : " F I=1:1:5 I $D(IBCC(I)) W:I>1 !?4,"Cond. Code : ",IBCCN(I) W:I=1 IBCCN(I)
"RTN","IBCSC4",53,0)
 I '$D(IBCC) W IBUN
"RTN","IBCSC4",54,0)
 I $D(IBCC)=1,IBCC="" W IBUN
"RTN","IBCSC4",55,0)
 S Z=$S($P(IB(0),U,5)<3:8,1:9)
"RTN","IBCSC4",56,0)
 X IBWW W " Value Code : " S IBVC=0
"RTN","IBCSC4",57,0)
 I $$FT^IBCEF(IBIFN)'=2 D
"RTN","IBCSC4",58,0)
 . D VC^IBCVA1 I +IBVC S J=1,I=0 F  S I=$O(IBVC(I)) Q:'I  W:J>1 !,?3," Value Code : " W ?17,$E($P(IBVC(I),U,2),1,40),?58,$P(IBVC(I),U,3) S J=J+1
"RTN","IBCSC4",59,0)
 W:'IBVC IBUN K IBVC
"RTN","IBCSC4",60,0)
 D Q^IBCSC4B G ^IBCSCP
"RTN","IBCSC4",61,0)
 Q
"RTN","IBCSC4",62,0)
OCC1 W $P(^DGCR(399,IBIFN,"CP",I,0),"^",3)_" - "_$P($$PRCD^IBCEF1($P(^DGCR(399,IBIFN,"CP",I,0),U)),U),?55,"Date: ",Y
"RTN","IBCSC4",63,0)
 Q
"RTN","IBCSC4",64,0)
 ;IBIP= PTF ptr (399,.08) ^ PTF admiss dt (45,2) or Event dt (399,.03)^ accident hour (399,160) 
"RTN","IBCSC4",65,0)
 ; ^ source of addmis (399,159) ^ typ of addmiss (399,158)
"RTN","IBCSC4",66,0)
 ; ^ PTF disch dt (45,70) or Non-VA disch dt (399,.16) ^ disch status (399,162)
"RTN","IBCSC4",67,0)
 ; ^ dxls (45,79) ^ disch bedsection (399,161)
"RTN","IBCSC4",68,0)
INP F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",69,0)
 S IBPTF=$P(IB(0),U,8) F I=0,70 S DGPT(I)=$S(IBPTF="":"",$D(^DGPT(IBPTF,I)):^(I),1:"")
"RTN","IBCSC4",70,0)
 F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",71,0)
 S IBIP=IBPTF_"^"_$S($P(DGPT(0),"^",2)]"":$P(DGPT(0),"^",2),1:$P(IB(0),"^",3))_"^"_$P(IB("U"),"^",10)_"^"_$P(IB("U"),"^",9)_"^"_$P(IB("U"),"^",8)_"^"_$S(+DGPT(70)>0:+DGPT(70),1:$P(IB(0),"^",16))_"^"
"RTN","IBCSC4",72,0)
 S IBIP=IBIP_$P(IB("U"),"^",12)_"^"_$S($D(DGPT(70)):$P(DGPT(70),"^",10),1:"")_"^"_$P(IB("U"),"^",11)
"RTN","IBCSC4",73,0)
 Q
"RTN","IBCSC4",74,0)
SET ;S ^DD(399.0304,0,"ID","WRITE")="N X S X=^(0) W ""   "",$E($P($G(@(U_$P($P(X,U),"";"",2)_+X_"",0)"")),U,$S($P(X,U,1)[""CPT"":2,1:4)),1,30)"
"RTN","IBCSC4",75,0)
 Q
"RTN","IBCSC4",76,0)
 ;
"RTN","IBCSC4",77,0)
DX(ORDER,IBDATE) ; Get next diagnosis data
"RTN","IBCSC4",78,0)
 N IBX
"RTN","IBCSC4",79,0)
 S IBX=""
"RTN","IBCSC4",80,0)
 S ORDER=$O(IBPOARR(ORDER))
"RTN","IBCSC4",81,0)
 I ORDER S IBX=ORDER_U_$$ICD9^IBACSV(+IBPOARR(ORDER),$G(IBDATE))
"RTN","IBCSC4",82,0)
 Q IBX
"RTN","IBCSC4",83,0)
 ;
"RTN","IBCSC4",84,0)
OT ; print Other Care (SNF) multiple
"RTN","IBCSC4",85,0)
 N IBX,IBY,IBN I '$O(^DGCR(399,IBIFN,"OT",0)) W !,?4,"SNF Care   : UNSPECIFIED [NOT REQUIRED]"
"RTN","IBCSC4",86,0)
 S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"OT",IBX)) Q:'IBX  D
"RTN","IBCSC4",87,0)
 . S IBY=$G(^DGCR(399,IBIFN,"OT",IBX,0)) Q:'IBY
"RTN","IBCSC4",88,0)
 . S IBN=$P($G(^DGCR(399.1,+IBY,0)),U,1),IBN=$S(IBN["SKILLED":"SNF Care ",IBN["SUB-ACUTE":"Sub-Acute",1:"Unknown  ")
"RTN","IBCSC4",89,0)
 . W !,?4,IBN,"  : ",$$FMTE^XLFDT(+$P(IBY,U,2))," - ",$$FMTE^XLFDT(+$P(IBY,U,3))
"RTN","IBCSC4",90,0)
 Q
"RTN","IBCSC4",91,0)
 ;
"RTN","IBCSC4",92,0)
DXREQ(IBIFN) ; Is the principle diagnosis code required or not?
"RTN","IBCSC4",93,0)
 ; Function returns true (1) if DX is required for this bill, otherwise 0
"RTN","IBCSC4",94,0)
 NEW REQ,IBFT
"RTN","IBCSC4",95,0)
 S REQ=0,IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCSC4",96,0)
 I IBFT=2 S REQ=1 G DXREQX                            ; required for HCFA-1500
"RTN","IBCSC4",97,0)
 I IBFT=3,$$WNRBILL^IBEFUNC(IBIFN) S REQ=1 G DXREQX   ; UB92 with Medicare (WNR) current payer
"RTN","IBCSC4",98,0)
DXREQX ;
"RTN","IBCSC4",99,0)
 Q REQ
"RTN","IBCSC4",100,0)
 ;
"RTN","IBCSC4",101,0)
 ;IBCSC4
"RTN","IBCSC82")
0^102^B16576811
"RTN","IBCSC82",1,0)
IBCSC82 ;ALB/MJB - MCCR SCREEN 8 (UB-92 BILL SPECIFIC INFO) ;27 MAY 88 10:20
"RTN","IBCSC82",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,232,155**;21-MAR-94
"RTN","IBCSC82",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC82",4,0)
 ;
"RTN","IBCSC82",5,0)
EN S IBCUBFT=$$FT^IBCU3(IBIFN) I IBCUBFT=2 K IBCUBFT G ^IBCSC8H ;hcfa 1500
"RTN","IBCSC82",6,0)
 ;
"RTN","IBCSC82",7,0)
 N I,IB,IBX,Z
"RTN","IBCSC82",8,0)
 D ^IBCSCU S IBSR=8,IBSR1=2,IBV1="000000" S:IBV IBV1="111111" F I="U","U1",0,"UF3","UF31","U2","TX" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC82",9,0)
 N IBZ,IBPRV,IBREQ,IBMRASEC
"RTN","IBCSC82",10,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC82",11,0)
 K IB("PRV")
"RTN","IBCSC82",12,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC82",13,0)
 ;
"RTN","IBCSC82",14,0)
 D H^IBCSCU
"RTN","IBCSC82",15,0)
 S Z=1,IBW=1 X IBWW W " Bill Remark       : ",$S($P(IB("U1"),U,8)]"":$P(IB("U1"),U,8),1:IBUN)
"RTN","IBCSC82",16,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC82",17,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC82",18,0)
 W !,?3," ICN/DCN(s)        : ",IBZ
"RTN","IBCSC82",19,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC82",20,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC82",21,0)
 W !,?3," Tx Auth. Code(s)  : ",IBZ
"RTN","IBCSC82",22,0)
 W !,?3," Admitting Dx      : " S IBX=$$ICD9^IBACSV(+IB("U2"),$$BDATE^IBACSV(IBIFN)) W $S(IBX'="":$P(IBX,U)_" - "_$P(IBX,U,3),'$$INPAT^IBCEF(IBIFN):IBUN,1:IBU)
"RTN","IBCSC82",23,0)
 I $P(IB(0),U,5)>2 W !,?3," Admission Source  : " S IBX=$$EXTERNAL^DILFD(399,159,,$P(IB("U"),U,9)) W $S(IBX'="":IBX,1:IBU) ;Outpatient only
"RTN","IBCSC82",24,0)
 S Z=2,IBW=1 X IBWW
"RTN","IBCSC82",25,0)
 W " Providers         : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC82",26,0)
 I $D(IB("PRV")) D
"RTN","IBCSC82",27,0)
 . N Z,IBT,IBQ,IBARR
"RTN","IBCSC82",28,0)
 . S IBZ=0
"RTN","IBCSC82",29,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC82",30,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC82",31,0)
 .. N A,A1
"RTN","IBCSC82",32,0)
 .. S IBQ=""
"RTN","IBCSC82",33,0)
 .. W !,?5,"- "
"RTN","IBCSC82",34,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC82",35,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,15-$L(A1))_A1
"RTN","IBCSC82",36,0)
 .. W $E(A_$J("",15),1,15),": "
"RTN","IBCSC82",37,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC82",38,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",20),1,20) W:$G(IB("PRV",IBZ)) "(OLD PROV DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC82",39,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",20),1,20)
"RTN","IBCSC82",40,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC82",41,0)
 .. I $L(IBQ) W $E(IBQ,1,36)
"RTN","IBCSC82",42,0)
 ;
"RTN","IBCSC82",43,0)
 K IB("PRV")
"RTN","IBCSC82",44,0)
 S Z=3,IBW=1 X IBWW W " Form Locator 2    : ",$S($P(IB("UF3"),U,1)]"":$P(IB("UF3"),U,1),1:IBUN)
"RTN","IBCSC82",45,0)
 W !,?3," Form Locator 11   : ",$S($P(IB("UF3"),U,2)]"":$P(IB("UF3"),U,2),1:IBUN)
"RTN","IBCSC82",46,0)
 S Z=4,IBW=1 X IBWW W " Form Locator 31   : ",$S($P(IB("UF3"),U,3)]"":$P(IB("UF3"),U,3),1:IBUN)
"RTN","IBCSC82",47,0)
 S Z=5,IBW=1 X IBWW W " Form Locator 56   : ",$S($P(IB("UF3"),U,7)]"":$P(IB("UF3"),U,7),1:IBUN)
"RTN","IBCSC82",48,0)
 W !,?3," Form Locator 78   : ",$S($P(IB("UF31"),U,2)]"":$P(IB("UF31"),U,2),1:IBUN)
"RTN","IBCSC82",49,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC82",50,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC82",51,0)
 S Z=6,IBW=1 X IBWW W " ",$S('IBREQ:"Force To Print?    : ",1:"Force MRA Sec Prt?: ")
"RTN","IBCSC82",52,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC82",53,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC82",54,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC82",55,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC82",56,0)
 W " Provider ID Maint  : (Edit Provider ID information)"
"RTN","IBCSC82",57,0)
 S Z=8,IBW=1 X IBWW
"RTN","IBCSC82",58,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC82",59,0)
 W $S(IBZ'="":IBZ,$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC82",60,0)
 G ^IBCSCP
"RTN","IBCSC82",61,0)
Q Q
"RTN","IBCSC82",62,0)
 ;IBCSC8
"RTN","IBCSC8H")
0^103^B22724982
"RTN","IBCSC8H",1,0)
IBCSC8H ;ALB/ARH - MCCR SCREEN 8 (BILL SPECIFIC INFO) HCFA 1500 ;4/21/92
"RTN","IBCSC8H",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,207,210,232,155**;21-MAR-94
"RTN","IBCSC8H",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC8H",4,0)
 ; HCFA 1500 screen 8
"RTN","IBCSC8H",5,0)
 ;
"RTN","IBCSC8H",6,0)
 ; MAP TO DGCRSC8H
"RTN","IBCSC8H",7,0)
 ;
"RTN","IBCSC8H",8,0)
EN N I,IB,Y,Z
"RTN","IBCSC8H",9,0)
 D ^IBCSCU S IBSR=8,IBSR1="H",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1","UF2","UF3","U2","M","TX",0 S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC8H",10,0)
 N IBZ,IBPRV,IBDATE,IBREQ,IBMRASEC
"RTN","IBCSC8H",11,0)
 ;
"RTN","IBCSC8H",12,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Date of service for the bill
"RTN","IBCSC8H",13,0)
 S IBPRV=""
"RTN","IBCSC8H",14,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC8H",15,0)
 K IB("PRV")
"RTN","IBCSC8H",16,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC8H",17,0)
 ;
"RTN","IBCSC8H",18,0)
 D H^IBCSCU
"RTN","IBCSC8H",19,0)
 S Z=1,IBW=1 X IBWW W " Unable To Work From: " S Y=$P(IB("U"),U,16) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",20,0)
 W !?4,"Unable To Work To  : " S Y=$P(IB("U"),U,17) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",21,0)
 S Z=2,IBW=1 X IBWW W " Admitting Dx       : " S IBZ=$$ICD9^IBACSV(+IB("U2"),IBDATE) W $S(IBZ'="":$P(IBZ,U)_" - "_$P(IBZ,U,3),1:IBUN)
"RTN","IBCSC8H",22,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC8H",23,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",24,0)
 W !,?4,"ICN/DCN(s)         : ",IBZ
"RTN","IBCSC8H",25,0)
 S IBZ=$$CKPROV^IBCEU(IBIFN,3)
"RTN","IBCSC8H",26,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC8H",27,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",28,0)
 W !?4,"Tx Auth. Code(s)   : ",IBZ
"RTN","IBCSC8H",29,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC8H",30,0)
 W " Providers          : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC8H",31,0)
 I $D(IB("PRV")) D  ; at least 1 provider found
"RTN","IBCSC8H",32,0)
 . N IBQ,A,A1,IBARR
"RTN","IBCSC8H",33,0)
 . S IBZ=0
"RTN","IBCSC8H",34,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC8H",35,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC8H",36,0)
 .. S IBQ=""
"RTN","IBCSC8H",37,0)
 .. W !,?5,"- "
"RTN","IBCSC8H",38,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC8H",39,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,16-$L(A1))_A1
"RTN","IBCSC8H",40,0)
 .. W $E(A_$J("",16),1,16),": "
"RTN","IBCSC8H",41,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC8H",42,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",16),1,16) W:$G(IB("PRV",IBZ)) "(OLD BOX 31 DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC8H",43,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",16),1,16)
"RTN","IBCSC8H",44,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC8H",45,0)
 .. I $L(IBQ) W $E(IBQ,1,39)
"RTN","IBCSC8H",46,0)
 ;
"RTN","IBCSC8H",47,0)
 K IB("PRV")
"RTN","IBCSC8H",48,0)
 ;
"RTN","IBCSC8H",49,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC8H",50,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC8H",51,0)
 W $S(IBZ'="":IBZ,$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC8H",52,0)
 W !,?4,"Lab CLIA #         : ",$S($P(IB("U2"),U,13)="":IBU,1:$P(IB("U2"),U,13))
"RTN","IBCSC8H",53,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC8H",54,0)
 W " Form Locator 19    : " S IBZ=$P($G(^DGCR(399,IBIFN,"UF31")),U,3) W $S(IBZ'="":IBZ,1:IBUN)
"RTN","IBCSC8H",55,0)
 I $P(IB("U2"),U,14)'="" W !,?4,"Homebound          : ",$$EXPAND^IBTRE(399,236,$P(IB("U2"),U,14))
"RTN","IBCSC8H",56,0)
 I $P(IB("U2"),U,15)'="" W !,?4,"Date Last Seen     : ",$$EXPAND^IBTRE(399,237,$P(IB("U2"),U,15))
"RTN","IBCSC8H",57,0)
 I $P(IB("U2"),U,16)'="" W !,?4,"Spec Prog Indicator: " S IBZ=$$EXPAND^IBTRE(399,238,$P(IB("U2"),U,16)) W $S(IBZ'="":IBZ,$$WNRBILL^IBEFUNC(IBIFN):"31",1:"")
"RTN","IBCSC8H",58,0)
 S Z=6,IBW=1 X IBWW
"RTN","IBCSC8H",59,0)
 W " Print Main Facility Box 32: ",$S($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(IB(0),U,22),0)),U,7):"[DOES NOT APPLY]",$P(IB("UF2"),U,2):$$EXPAND^IBTRE(399,401,$P(IB("UF2"),U,2)),1:IBUN)
"RTN","IBCSC8H",60,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC8H",61,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC8H",62,0)
 W !,?4,$S('IBREQ:"Force To Print?    : ",1:"Force MRA Sec Prt? : ")
"RTN","IBCSC8H",63,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC8H",64,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC8H",65,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC8H",66,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC8H",67,0)
 W " Provider ID Maint  : (Edit Provider ID information)"
"RTN","IBCSC8H",68,0)
 G ^IBCSCP
"RTN","IBCSC8H",69,0)
Q Q
"RTN","IBCSC8H",70,0)
 ;
"RTN","IBCSC8H",71,0)
WRT1(IBCRED) ; Write credentials mismatch
"RTN","IBCSC8H",72,0)
 W !,*7,"  **Warning** Credentials differ from those found in NEW PERSON or IB NON VA",!,$J("",14),"BILLING PROVIDER file (",$S(IBCRED="":"none",1:IBCRED),")"
"RTN","IBCSC8H",73,0)
 W !,$J("",14),"Changes will print local, but only credentials on file transmit"
"RTN","IBCSC8H",74,0)
 Q
"RTN","IBCSC8H",75,0)
 ;
"RTN","IBCSC8H",76,0)
NSAME(DA) ; Returns 1 if div on bill is not the default billing facility
"RTN","IBCSC8H",77,0)
 Q ($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(^DGCR(399,DA,0),U,22),0)),U,7))
"RTN","IBCSC8H",78,0)
 ;
"RTN","IBCSC8H",79,0)
 ;IBCSC8H
"RTN","IBCU6")
0^62^B19309919
"RTN","IBCU6",1,0)
IBCU6 ;ALB/AAS - UTILITY ROUTINE TO SET BEDSECTIONS/REVENUE CODES FROM PTF DATA ;25 MAY 90
"RTN","IBCU6",2,0)
 ;;2.0;INTEGRATED BILLING;**14,52,138,245,155**;21-MAR-94
"RTN","IBCU6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU6",4,0)
 ;
"RTN","IBCU6",5,0)
 ;MAP TO DGCRU6
"RTN","IBCU6",6,0)
 ;
"RTN","IBCU6",7,0)
% ;setup variables - needs IBifn
"RTN","IBCU6",8,0)
 ;K IBRSARR D BILL^IBCRBC(IBIFN,.IBRSARR)
"RTN","IBCU6",9,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=1 Q  ; Do not calculate bill charges if bill not in Entered/Not Reviewed status
"RTN","IBCU6",10,0)
 N X S X=$$PRCDIV^IBCU71(IBIFN) I '$D(ZTQUEUED),+X W !,$P(X,U,2) ; update bill default division
"RTN","IBCU6",11,0)
 S X=$$DVTYP^IBCU71(IBIFN) I '$D(ZTQUEUED),$P(X,U,2)'="" W !,$P(X,U,2) ; update bill charge type
"RTN","IBCU6",12,0)
 ;
"RTN","IBCU6",13,0)
 D BILL^IBCRBC(IBIFN) ;   calculate bill charges
"RTN","IBCU6",14,0)
 ;
"RTN","IBCU6",15,0)
 D CPTMOD26^IBCU73(IBIFN) ; add cpt modifier 26 to professional bill
"RTN","IBCU6",16,0)
 Q
"RTN","IBCU6",17,0)
 ;
"RTN","IBCU6",18,0)
 Q:'$D(^DGCR(399,IBIFN,0))  N IBQUIT S IBQUIT=0 K ^UTILITY($J) D GVAR^IBCU61 Q:IBQUIT
"RTN","IBCU6",19,0)
 I '$D(DFN) S DFN=$P(^DGCR(399,IBIFN,0),"^",2)
"RTN","IBCU6",20,0)
 I IBIDS(.05)<3 S PTF=$P(^DGCR(399,IBIFN,0),"^",8) Q:PTF']""  Q:'$D(^DGPT(PTF,0))  I '$P(^DGPT(PTF,0),"^",6),'$P(^(0),"^",4),'$D(DGPTUPDT) D UPDT^DGPTUTL S DGPTUPDT=""
"RTN","IBCU6",21,0)
 S DGADM=IBIDS(.03),DGPMCA=$O(^DGPM("AMV1",DGADM,DFN,0)) ;find corresponding admission
"RTN","IBCU6",22,0)
 D:$O(^DGCR(399,IBIFN,"RC",0)) ALL^IBCU61
"RTN","IBCU6",23,0)
 ;
"RTN","IBCU6",24,0)
OPT ;I IBIDS(.05)>2 S DGBILLBS="OUTPATIENT VISIT",DGVISCNT=$S($D(^DGCR(399,IBIFN,"OP",0)):$P(^(0),U,4),1:""),^UTILITY($J,"IB-BS",DGBILLBS)=DGVISCNT G END:DGVISCNT<1 D  G END:IBQUIT,3
"RTN","IBCU6",25,0)
 ;.I $D(^DGCR(399,IBIFN,"CP","ASC",1)) D ^IBCU63
"RTN","IBCU6",26,0)
 ;.;I $D(^UTILITY($J,"IB-ASC")) S IBQUIT=1
"RTN","IBCU6",27,0)
 I IBIDS(.05)>2 D  G END:(DGVISCNT<1)!IBQUIT,3
"RTN","IBCU6",28,0)
 . S DGBILLBS="OUTPATIENT VISIT",DGVISCNT=$S($D(^DGCR(399,IBIFN,"OP",0)):$P(^(0),U,4),1:""),^UTILITY($J,"IB-BS",DGBILLBS)=DGVISCNT ; visit
"RTN","IBCU6",29,0)
 . I DGVISCNT>0,$D(^DGCR(399,IBIFN,"CP","ASC",1)) D ^IBCU63 ; basc
"RTN","IBCU6",30,0)
 . D SET^IBCSC5A(IBIFN,.IBX) S IBCNT=+$P(IBX,U,2) K IBX I +IBCNT D RX^IBCU63 ; rx refills
"RTN","IBCU6",31,0)
 ;
"RTN","IBCU6",32,0)
1 ;build array of movement dates, billable bedsections
"RTN","IBCU6",33,0)
 S DGMOVE=0 F DGII=0:0 S DGMOVE=$O(^DGPT(PTF,"M",DGMOVE)) Q:'DGMOVE  D SETU
"RTN","IBCU6",34,0)
 ;
"RTN","IBCU6",35,0)
2 ;build array of billable bedsections = los in bedsection
"RTN","IBCU6",36,0)
 ;start with statement covers from date, end with statement covers to date
"RTN","IBCU6",37,0)
 S (DGMVDT,DGMVDTP)=$S($D(IBIDS(151)):IBIDS(151),1:IBIDS(.03)),(DGBS,DGBS1)=""
"RTN","IBCU6",38,0)
 ;
"RTN","IBCU6",39,0)
 S DGMVDT=DGMVDT+.3,IBMVDTE=IBIDS(152)\1
"RTN","IBCU6",40,0)
 I ",2,3,"'[IBIDS(.06) S IBMVDTE=IBMVDTE-.01 I IBIDS(151)=IBIDS(152) S DGMVDT=IBIDS(151)
"RTN","IBCU6",41,0)
 I +DGPMCA S DGII=$$AD^IBCU64(DGPMCA) I ($P(DGII,U,1)\1)=($P(DGII,U,2)\1) S DGMVDT=IBIDS(151),IBMVDTE=IBIDS(152)
"RTN","IBCU6",42,0)
 ;
"RTN","IBCU6",43,0)
 S DGMVDT=DGMVDT-.01 F DGII=0:0 S DGMVDT=$O(^UTILITY($J,"IB-PTF",DGMVDT)) Q:'DGMVDT!(DGMVDTP\1>IBIDS(152))  D SETU1 S DGMVDTP=DGMVDT Q:(DGMVDTP\1)>IBMVDTE
"RTN","IBCU6",44,0)
 ;
"RTN","IBCU6",45,0)
3 ;find revenue codes and set up in file.
"RTN","IBCU6",46,0)
 S DGBS=0 I '$D(^DGCR(399,IBIFN,"RC",0)) S ^DGCR(399,IBIFN,"RC",0)="^399.042PA"
"RTN","IBCU6",47,0)
 F DGII=0:0 S DGBS=$O(^UTILITY($J,"IB-BS",DGBS)) Q:DGBS']""!(IBQUIT)  S DGBSLOS=^(DGBS),DGBSI=$O(^DGCR(399.1,"B",DGBS,0)) I DGBSI,$D(^DGCR(399.1,DGBSI,0)) D SETREV^IBCU62
"RTN","IBCU6",48,0)
 G END
"RTN","IBCU6",49,0)
 ;
"RTN","IBCU6",50,0)
SETU ;utility array of all movements by date, billing bedsection
"RTN","IBCU6",51,0)
 ;non-billable bs's must be added to array so their days will not be added to a billable bs
"RTN","IBCU6",52,0)
 S X=^DGPT(PTF,"M",DGMOVE,0)
"RTN","IBCU6",53,0)
 S DGBILLBS=$P($G(^DIC(42.4,+$P(X,U,2),0)),U,5) I DGBILLBS="" S DGBILLBS="UNKNOWN"
"RTN","IBCU6",54,0)
 ;S DGBILLBS=$S('$P(X,U,2):"UNKNOWN",$D(^DIC(42.4,$P(X,U,2),0)):$P(^(0),U,5),1:"UNKNOWN") Q:DGBILLBS=""
"RTN","IBCU6",55,0)
 S ^UTILITY($J,"IB-PTF",$S($P(X,U,10)]"":$P(X,U,10),1:DT),DGBILLBS)=($P(X,U,3)+$P(X,U,4))_"^"_$P(X,U,18)
"RTN","IBCU6",56,0)
 Q
"RTN","IBCU6",57,0)
 ;
"RTN","IBCU6",58,0)
SETU1 ;determine los - set utility=los
"RTN","IBCU6",59,0)
 S DGBS=$O(^UTILITY($J,"IB-PTF",DGMVDT,0)) Q:DGBS="UNKNOWN"  S:DGBS1="" DGBS1=DGBS
"RTN","IBCU6",60,0)
 S DGEDT=$S(DGMVDT<IBIDS(152):DGMVDT,1:IBIDS(152)),DGBDT=$S(IBIDS(151)>DGMVDTP:IBIDS(151),1:DGMVDTP)
"RTN","IBCU6",61,0)
 S IBTF=$S(IBIDS(152)<(DGMVDT\1):IBIDS(.06),1:1)
"RTN","IBCU6",62,0)
 S X=$$LOS^IBCU64(DGBDT,DGEDT,IBTF,DGPMCA) Q:'X
"RTN","IBCU6",63,0)
 I $D(DGINPAR),$P(DGINPAR,"^")=0,(DGBS1'=DGBS) Q  ;only one bedsection allowed by ins co
"RTN","IBCU6",64,0)
 I IBIDS(.11)="c",(DGBS1'=DGBS) Q
"RTN","IBCU6",65,0)
 I $P(^UTILITY($J,"IB-PTF",DGMVDT,DGBS),U,2)=1 Q  ;treatment for sc condition
"RTN","IBCU6",66,0)
 S ^UTILITY($J,"IB-BS",DGBS)=+$G(^UTILITY($J,"IB-BS",DGBS))+X
"RTN","IBCU6",67,0)
 Q
"RTN","IBCU6",68,0)
END I IBIDS(.11)="c" S IBIDS(.11)="p"
"RTN","IBCU6",69,0)
 K ^UTILITY($J),DGMOVE,DGMVDT,DGMVDTP,DGBS,DGBSLOS,DGBSI,DGBILLBS,DGBR,DGREC,DGII,DGJJ,DGKK,DGREVHDR,DGAMNT,DGREV,DGBS1,X,X1,X2,Y,Z,DGINPAR,DR,DIK,DGVISCNT,DGBRN,DGFUNC,DGACTDT,DGRVRCAL,DA,IBIDS,DGREV00
"RTN","IBCU6",70,0)
 K DGLL,DGFND,IBND0,IBNDU,DGPMCA,DGADM,DGEDT,DGBDT,DGMVTP,DGMVT,DGDC,DGNEXT,DGX,DGIFN,IBTF,IBCNT,IBCHK,IBMVDTE
"RTN","IBCU6",71,0)
 Q
"RTN","IBEFUNC")
0^93^B46009797
"RTN","IBEFUNC",1,0)
IBEFUNC ;ALB/RLW - EXTRINSIC FUNCTIONS ;12-JUN-92
"RTN","IBEFUNC",2,0)
 ;;2.0;INTEGRATED BILLING;**55,91,106,139,51,153,232,155**;21-MAR-94
"RTN","IBEFUNC",3,0)
 ;
"RTN","IBEFUNC",4,0)
ETXT(X) ; -- output error text from 350.8
"RTN","IBEFUNC",5,0)
 ; -- input error code
"RTN","IBEFUNC",6,0)
 N Y S Y=X
"RTN","IBEFUNC",7,0)
 I X="" G ETXTQ
"RTN","IBEFUNC",8,0)
 S Y=$P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",X,0)),0)),U,2)
"RTN","IBEFUNC",9,0)
ETXTQ Q Y
"RTN","IBEFUNC",10,0)
 ;
"RTN","IBEFUNC",11,0)
IGN(X,Y) ; ignore means test? for appt type on dates
"RTN","IBEFUNC",12,0)
 ; -- input x = mas appt type
"RTN","IBEFUNC",13,0)
 ;          y = appt date
"RTN","IBEFUNC",14,0)
 ;    output  = true if this appt type should not be billed for
"RTN","IBEFUNC",15,0)
 ;              Means Test billing (352.1,.04) for given date
"RTN","IBEFUNC",16,0)
 ;
"RTN","IBEFUNC",17,0)
 I '$G(X)!('$G(Y)) Q 1
"RTN","IBEFUNC",18,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,4)
"RTN","IBEFUNC",19,0)
 ;
"RTN","IBEFUNC",20,0)
DSP(X,Y) ; display on input screen?
"RTN","IBEFUNC",21,0)
 ; --    input X = mas appt type (P409.1)
"RTN","IBEFUNC",22,0)
 ;             Y = date
"RTN","IBEFUNC",23,0)
 ;       output  = true if appt type X (352.1,.02) should be displayed as
"RTN","IBEFUNC",24,0)
 ;          a potential billable visit (352.1,.06) on given date Y (352.1,.03)
"RTN","IBEFUNC",25,0)
 ;
"RTN","IBEFUNC",26,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",27,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",28,0)
 ;
"RTN","IBEFUNC",29,0)
RPT(X,Y) ; print on report?
"RTN","IBEFUNC",30,0)
 ; -- input X = mas appt type (P409.1)
"RTN","IBEFUNC",31,0)
 ;          Y = date
"RTN","IBEFUNC",32,0)
 ;    output  = true if appt type X (352.1,.02) should be printed on 'Vets w/ Ins and Opt
"RTN","IBEFUNC",33,0)
 ;               Visits' report (352.1,.05) on given date Y (352.1,.06)
"RTN","IBEFUNC",34,0)
 ;
"RTN","IBEFUNC",35,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",36,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",37,0)
 ;
"RTN","IBEFUNC",38,0)
NBDIS(X,Y) ; Is disposition non-billable?
"RTN","IBEFUNC",39,0)
 ; -- input X = disposition (P37)
"RTN","IBEFUNC",40,0)
 ;          Y = date of appt
"RTN","IBEFUNC",41,0)
 ;    output  = true (1) if disposition should be ignored for
"RTN","IBEFUNC",42,0)
 ;              Means test billing (352.2,.03) for given date
"RTN","IBEFUNC",43,0)
 ;
"RTN","IBEFUNC",44,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",45,0)
 Q +$P($G(^IBE(352.2,+$O(^(+$O(^IBE(352.2,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",46,0)
 ;
"RTN","IBEFUNC",47,0)
NBCSC(X,Y) ; Is clinic stop code non-billable?
"RTN","IBEFUNC",48,0)
 ; -- input X = clinic stop code (P40.7)
"RTN","IBEFUNC",49,0)
 ;          Y = date of appt
"RTN","IBEFUNC",50,0)
 ;    output  = true (1) if clinic stop code should be ignored for
"RTN","IBEFUNC",51,0)
 ;              Means test billing (352.3,.03) for given date
"RTN","IBEFUNC",52,0)
 ;
"RTN","IBEFUNC",53,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",54,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",55,0)
 ;
"RTN","IBEFUNC",56,0)
NBCL(X,Y) ; Is clinic non-billable?
"RTN","IBEFUNC",57,0)
 ; -- input X = clinic (P44)
"RTN","IBEFUNC",58,0)
 ;          Y = date of appt
"RTN","IBEFUNC",59,0)
 ;    output  = true (1) if clinic should be ignored for
"RTN","IBEFUNC",60,0)
 ;              Means test billing (352.4,.03) for given date
"RTN","IBEFUNC",61,0)
 ;
"RTN","IBEFUNC",62,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",63,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",64,0)
 ;
"RTN","IBEFUNC",65,0)
NBST(X,Y) ; Is clinic stop code non-billable for Third Party?
"RTN","IBEFUNC",66,0)
 ; -- input X = clinic stop code (P40.7), Y = appt date
"RTN","IBEFUNC",67,0)
 ;    output  = true (1) if stop non-billable for Third Party (352.3,.05) for given dt
"RTN","IBEFUNC",68,0)
 ;
"RTN","IBEFUNC",69,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",70,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",71,0)
 ;
"RTN","IBEFUNC",72,0)
NBCT(X,Y) ; Is clinic non-billable for Third Party?
"RTN","IBEFUNC",73,0)
 ; -- input X = clinic (P44), Y = appt dt
"RTN","IBEFUNC",74,0)
 ;    output  = true (1) if clinic non-billable for Third Party (352.4,.05) for given date
"RTN","IBEFUNC",75,0)
 ;
"RTN","IBEFUNC",76,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",77,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",78,0)
 ;
"RTN","IBEFUNC",79,0)
NABST(X,Y) ; Returns true (1) if stop code flagged to be ignored by Third Party auto biller (use DT)
"RTN","IBEFUNC",80,0)
 S:'$G(Y) Y=DT I '$G(X) Q 0
"RTN","IBEFUNC",81,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",82,0)
 ;
"RTN","IBEFUNC",83,0)
NABCT(X,Y) ; Returns true (1) if clinic is flagged to be ignored by Third Party auto biller (use DT)
"RTN","IBEFUNC",84,0)
 S:'$G(Y) Y=DT I '$G(X) Q 0
"RTN","IBEFUNC",85,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",86,0)
 ;
"RTN","IBEFUNC",87,0)
PT(DFN) ;returns (patient name^long pat id^short pat id) or null if not found
"RTN","IBEFUNC",88,0)
 N X,IBX S X="" I $D(DFN) S X=$G(^DPT(+DFN,0)) I X'="" S X=$P(X,U,1)_U_$P($G(^DPT(DFN,.36)),U,3,4) D
"RTN","IBEFUNC",89,0)
 . S IBX=$P(^DPT(+DFN,0),U,9)
"RTN","IBEFUNC",90,0)
 . I $P(X,U,2)="" S $P(X,U,2)=$E(IBX,1,3)_"-"_$E(IBX,4,5)_"-"_$E(IBX,6,10)
"RTN","IBEFUNC",91,0)
 . I $P(X,U,3)="" S $P(X,U,3)=$E(IBX,6,10)
"RTN","IBEFUNC",92,0)
 Q X
"RTN","IBEFUNC",93,0)
 ;
"RTN","IBEFUNC",94,0)
EXSET(X,D0,D1) ;returns external value of a set in file D0, field D1
"RTN","IBEFUNC",95,0)
 Q $$EXPAND^IBTRE($G(D0),$G(D1),$G(X))
"RTN","IBEFUNC",96,0)
 ;
"RTN","IBEFUNC",97,0)
BABCSC(DFN,IBDT) ; -- any billable Third Party visits in encounter file for patient
"RTN","IBEFUNC",98,0)
 ;  -- Input  dfn = patient,  ibdt = date
"RTN","IBEFUNC",99,0)
 ;     output     = 1 if any billable stop on date OR 0 if none
"RTN","IBEFUNC",100,0)
 ;
"RTN","IBEFUNC",101,0)
 N IBX,IBVAL,IBCBK,IBFILTER
"RTN","IBEFUNC",102,0)
 S IBX=0
"RTN","IBEFUNC",103,0)
 I '$G(DFN)!('$G(IBDT)) G BABQ
"RTN","IBEFUNC",104,0)
 ;
"RTN","IBEFUNC",105,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=IBDT\1,IBVAL("EDT")=IBDT\1+.24
"RTN","IBEFUNC",106,0)
 ;Ignore if not chkd out, no stop, non-billable stop, non-billable clinic
"RTN","IBEFUNC",107,0)
 S IBFILTER=""
"RTN","IBEFUNC",108,0)
 S IBCBK="I $P(Y0,U,12)=2,$P(Y0,U,3),'$$NBST^IBEFUNC($P(Y0,U,3),+Y0),'$$NBCT^IBEFUNC(+$P(Y0,U,4),+Y0) S (IBX,SDSTOP)=1"
"RTN","IBEFUNC",109,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBEFUNC",110,0)
 ;
"RTN","IBEFUNC",111,0)
BABQ Q IBX
"RTN","IBEFUNC",112,0)
 ;
"RTN","IBEFUNC",113,0)
APPTCT(IBOE0) ; Determine if appt encounter/appt has valid status for billing
"RTN","IBEFUNC",114,0)
 ; Returns 1 if valid, 0 if not
"RTN","IBEFUNC",115,0)
 ; IBOE0 = the encounter's 0-node (input)
"RTN","IBEFUNC",116,0)
 N STAT
"RTN","IBEFUNC",117,0)
 S STAT=$P(IBOE0,U,12) ;Encounter stat
"RTN","IBEFUNC",118,0)
 I STAT=14,$$DPTSND^IBSDU(+$P(IBOE0,U,2),+IBOE0,2)="" S STAT=2
"RTN","IBEFUNC",119,0)
 ; Assume 1,2 (and 14 sometimes) are valid, 8 = INPATIENT
"RTN","IBEFUNC",120,0)
 Q STAT<3
"RTN","IBEFUNC",121,0)
 ;
"RTN","IBEFUNC",122,0)
NCTCL(IBOE0) ; Determine if a clinic for an outpt encounter is non-count
"RTN","IBEFUNC",123,0)
 ; IBOE0 = the 0-node of the encounter
"RTN","IBEFUNC",124,0)
 Q ($P($G(^SC(+$P(IBOE0,U,4),0)),U,17)="Y")
"RTN","IBEFUNC",125,0)
 ;
"RTN","IBEFUNC",126,0)
DISCT(IBOE,IBOE0) ; Determine if disposition has valid status for billing
"RTN","IBEFUNC",127,0)
 ; Returns 1 if valid, 0 if not valid
"RTN","IBEFUNC",128,0)
 ; IBOE = encounter ien
"RTN","IBEFUNC",129,0)
 ; IBOE0 = 0-node of encounter (optional)
"RTN","IBEFUNC",130,0)
 N IBX
"RTN","IBEFUNC",131,0)
 S IBX=$$DISND^IBSDU(IBOE,$G(IBOE0),2)
"RTN","IBEFUNC",132,0)
 Q (IBX<2)
"RTN","IBEFUNC",133,0)
 ;
"RTN","IBEFUNC",134,0)
NEEDMRA(IBIFN) ; Returns MRA NEEDED STATUS for bill
"RTN","IBEFUNC",135,0)
 Q $P($G(^DGCR(399,+IBIFN,"TX")),U,5)
"RTN","IBEFUNC",136,0)
 ;
"RTN","IBEFUNC",137,0)
REQMRA(IBIFN) ; Determine from site parameter, ins assigned to bill and txmn
"RTN","IBEFUNC",138,0)
 ;   rules if request for MRA is needed (MCRWNR must be current ins co)
"RTN","IBEFUNC",139,0)
 ; "R" = not needed due to next carrier not requiring it (txmn rules),
"RTN","IBEFUNC",140,0)
 ; "R1" = not needed due to MRA turned off at site
"RTN","IBEFUNC",141,0)
 ;  0 = not needed,  1 = needed
"RTN","IBEFUNC",142,0)
 N IB0,COBINS,COBSEQ,IBOK,Z1,Z0,IBDA,IB00,IB0
"RTN","IBEFUNC",143,0)
 ;
"RTN","IBEFUNC",144,0)
 I $$COB^IBCEF(IBIFN)="A" S IBOK=0 G REQMRAQ    ; payer sequence = patient not allowed for MRA
"RTN","IBEFUNC",145,0)
 S COBSEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",146,0)
 S COBINS=$P($G(^DGCR(399,IBIFN,"M")),U,COBSEQ)
"RTN","IBEFUNC",147,0)
 ;Curr ins must = MEDICARE WNR
"RTN","IBEFUNC",148,0)
 S IBOK=+$$MCRWNR(COBINS)
"RTN","IBEFUNC",149,0)
 I 'IBOK G REQMRAQ
"RTN","IBEFUNC",150,0)
 ;
"RTN","IBEFUNC",151,0)
 I '$$EDIACTV^IBCEF4(2) S IBOK="R1" G REQMRAQ ; Site param=NO
"RTN","IBEFUNC",152,0)
 ;
"RTN","IBEFUNC",153,0)
 ; Check next ins for MRA needed
"RTN","IBEFUNC",154,0)
 I COBSEQ'<3 S IBOK=0 G REQMRAQ
"RTN","IBEFUNC",155,0)
 ;
"RTN","IBEFUNC",156,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBEFUNC",157,0)
 S COBINS=+$P($G(^DGCR(399,IBIFN,"M")),U,COBSEQ+1)
"RTN","IBEFUNC",158,0)
 I 'COBINS S IBOK=0 G REQMRAQ ;No next ins
"RTN","IBEFUNC",159,0)
 ;
"RTN","IBEFUNC",160,0)
 ; Check only rules with rule type = 2 (MRA REQUEST RESTRICTIONS)
"RTN","IBEFUNC",161,0)
 S IBDA=0 F  S IBDA=$O(^IBE(364.4,"AC",2,IBDA)) Q:'IBDA  S IB00=$G(^IBE(364.4,IBDA,0)) D  Q:'IBOK
"RTN","IBEFUNC",162,0)
 . I $P(IB00,U,2)>DT Q  ; Inactive
"RTN","IBEFUNC",163,0)
 . I $P(IB00,U,6),$P(IB00,U,6)'>DT Q  ; Expired
"RTN","IBEFUNC",164,0)
 . S Z0=$$INPAT^IBCEF(IBIFN,1),Z0=$S(Z0=1:2,1:1)
"RTN","IBEFUNC",165,0)
 . S Z1=$$FT^IBCEF(IBIFN),Z1=$S(Z1=3:1,1:2)
"RTN","IBEFUNC",166,0)
 . I $S($P(IB00,U,4)=3:1,1:$P(IB00,U,4)=Z0),$S($P(IB00,U,5)=3:1,1:$P(IB00,U,5)=Z1) S Z0=$D(^IBE(364.4,IBDA,3,"B",COBINS)) I Z0>0 S IBOK="R"
"RTN","IBEFUNC",167,0)
 ;
"RTN","IBEFUNC",168,0)
REQMRAQ Q IBOK
"RTN","IBEFUNC",169,0)
 ;
"RTN","IBEFUNC",170,0)
MCRWNR(IBINS) ;Returns whether the ins co IBINS is MEDICARE WNR (Will
"RTN","IBEFUNC",171,0)
 ;           NOT Reimburse) 0=NO, 1=YES
"RTN","IBEFUNC",172,0)
 N Z,Z0
"RTN","IBEFUNC",173,0)
 S Z=0,Z0=$G(^DIC(36,+IBINS,0))
"RTN","IBEFUNC",174,0)
 I $P(Z0,U,2)="N",$P($G(^IBE(355.2,+$P(Z0,U,13),0)),U)="MEDICARE" S Z=1
"RTN","IBEFUNC",175,0)
 Q Z
"RTN","IBEFUNC",176,0)
 ;
"RTN","IBEFUNC",177,0)
WNRBILL(IBIFN,IBCOB) ; Returns whether the ins for COB seq IBCOB
"RTN","IBEFUNC",178,0)
 ;  is MEDICARE will not reimburse
"RTN","IBEFUNC",179,0)
 ;
"RTN","IBEFUNC",180,0)
 I $G(IBCOB)="" S IBCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",181,0)
 S IBCOB=$TR(IBCOB,"PST","123")
"RTN","IBEFUNC",182,0)
 Q $$MCRWNR(+$G(^DGCR(399,IBIFN,"I"_IBCOB)))
"RTN","IBEFUNC",183,0)
 ;
"RTN","IBEFUNC",184,0)
MCR(IBINS) ;Returns whether the ins co IBINS is MCR Will Reimburse
"RTN","IBEFUNC",185,0)
 ;          0=NO , 1=YES
"RTN","IBEFUNC",186,0)
 N Z,Z0
"RTN","IBEFUNC",187,0)
 S Z=0,Z0=$G(^DIC(36,+IBINS,0))
"RTN","IBEFUNC",188,0)
 I $P(Z0,U,2)'="N",$P($G(^IBE(355.2,+$P(Z0,U,13),0)),U)="MEDICARE" S Z=1
"RTN","IBEFUNC",189,0)
 Q Z
"RTN","IBEFUNC",190,0)
 ;
"RTN","IBEFUNC",191,0)
MRATYPE(IBIEN,IBVAR) ; Returns: A = MEDICARE A   B = MEDICARE B
"RTN","IBEFUNC",192,0)
 ;  C = MEDICARE OTHER    null = NOT MEDICARE
"RTN","IBEFUNC",193,0)
 ; for the plan associated with bill ien IBIEN OR grp plan IBIEN
"RTN","IBEFUNC",194,0)
 ; If IBVAR = "" or 'C', the data is from bill ien in IBIEN
"RTN","IBEFUNC",195,0)
 ;          = 'P', the data is from grp policy ien in IBIEN
"RTN","IBEFUNC",196,0)
 ; 
"RTN","IBEFUNC",197,0)
 N IBPLAN
"RTN","IBEFUNC",198,0)
 S IBPLAN=$S($G(IBVAR)'="P":+$$POLICY^IBCEF(IBIEN,18),1:IBIEN)
"RTN","IBEFUNC",199,0)
 Q $P($G(^IBA(355.3,+IBPLAN,0)),U,14)
"RTN","IBEFUNC",200,0)
 ;
"RTN","IBEFUNC",201,0)
MCRONBIL(IBIFN,IBFLG) ; Returns 0 if MCR WNR not on bill IBIFN
"RTN","IBEFUNC",202,0)
 ;  1 if on bill, is on or before current ins
"RTN","IBEFUNC",203,0)
 ;  2 if on bill, but after current ins
"RTN","IBEFUNC",204,0)
 ; IBFLG = a COB number if second "^" piece of return data should be
"RTN","IBEFUNC",205,0)
 ;         1 if MCRWNR is the insurance at that COB sequence (optional)
"RTN","IBEFUNC",206,0)
 N Z,IBON,Q
"RTN","IBEFUNC",207,0)
 S IBON=0,Q=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",208,0)
 F Z=1:1:3 I $$WNRBILL(IBIFN,Z) S IBON=$S(Q'<Z:1,1:2)_$S('$G(IBFLG):"",Z'=IBFLG:"",1:"^1") Q
"RTN","IBEFUNC",209,0)
 Q IBON
"RTN","IBEFUNC",210,0)
 ;
"RTN","IBEFUNC",211,0)
PROFEE(IBIFN) ; Returns whether any rev codes for prof fees
"RTN","IBEFUNC",212,0)
 ;  included on bill IBIFN  0 = not included,  1 = included,
"RTN","IBEFUNC",213,0)
 ;  2 = both inst and prof are included
"RTN","IBEFUNC",214,0)
 ;
"RTN","IBEFUNC",215,0)
 N IBPRO,Z
"RTN","IBEFUNC",216,0)
 S IBPRO=0,Z=$O(^DGCR(399,IBIFN,"RC","B",959)) ; Rev cds 960-989 are prof
"RTN","IBEFUNC",217,0)
 I Z,Z<990 D
"RTN","IBEFUNC",218,0)
 . S IBPRO=1
"RTN","IBEFUNC",219,0)
 . S Z=$O(^DGCR(399,IBIFN,"RC","B",0))
"RTN","IBEFUNC",220,0)
 . I $S(Z:Z<960,1:0)!($O(^DGCR(399,IBIFN,"RC","B",1000),-1)'<990) S IBPRO=2
"RTN","IBEFUNC",221,0)
 Q IBPRO
"RTN","IBEFUNC",222,0)
 ;
"RTN","IBEFUNC",223,0)
GETMOD(IBIFN,IBCPT,EXT) ; Returns 'list' of modifiers for file 399
"RTN","IBEFUNC",224,0)
 ;   procedure for bill IBIFN and proc ien IBCPT
"RTN","IBEFUNC",225,0)
 ;   in modifier seq order, separated by ','
"RTN","IBEFUNC",226,0)
 ;  If EXT = 1, return the actual modifier, not the ptr
"RTN","IBEFUNC",227,0)
 N IBMOD,IBZ,IBZ0,IB0,Z
"RTN","IBEFUNC",228,0)
 S IBZ=0,IBMOD=""
"RTN","IBEFUNC",229,0)
 F  S IBZ=$O(^DGCR(399,IBIFN,"CP",IBCPT,"MOD","B",IBZ)) Q:'IBZ  S IBZ0=0 F  S IBZ0=$O(^DGCR(399,IBIFN,"CP",IBCPT,"MOD","B",IBZ,IBZ0)) Q:'IBZ0  I $D(^DGCR(399,IBIFN,"CP",IBCPT,"MOD",IBZ0,0)) S IB0=$G(^(0)) D
"RTN","IBEFUNC",230,0)
 . I '$G(EXT) S Z=$P(IB0,U,2)
"RTN","IBEFUNC",231,0)
 . I $G(EXT) S Z=$$MOD^ICPTMOD($P(IB0,U,2),"I"),Z=$S($P(Z,U)=-1:"",1:$P(Z,U,2))
"RTN","IBEFUNC",232,0)
 . Q:Z=""
"RTN","IBEFUNC",233,0)
 . S IBMOD=IBMOD_$S(IBMOD="":"",1:",")_Z
"RTN","IBEFUNC",234,0)
 Q IBMOD
"RTN","IBEFUNC",235,0)
 ;
"RTN","IBEFUNC",236,0)
MODLST(MODS,DESC,IBMOD) ; Returns string of actual mods
"RTN","IBEFUNC",237,0)
 ; MOVED
"RTN","IBEFUNC",238,0)
 Q $$MODLST^IBEFUNC2(MODS,$G(DESC),.IBMOD)
"RTN","IBEFUNC",239,0)
 ;
"RTN","IBEFUNC",240,0)
GETSPEC(FILE,FIELD) ; Get fld specifier for FIELD # in FILE
"RTN","IBEFUNC",241,0)
 ; Use to set DIC("P") for FILE^DICN
"RTN","IBEFUNC",242,0)
 N IBZ
"RTN","IBEFUNC",243,0)
 D FIELD^DID(FILE,FIELD,"","SPECIFIER","IBZ")
"RTN","IBEFUNC",244,0)
 Q $G(IBZ("SPECIFIER"))
"RTN","IBEFUNC",245,0)
 ;
"RTN","IBJPS")
0^60^B5742162
"RTN","IBJPS",1,0)
IBJPS ;ALB/MAF,ARH - IBSP IB SITE PARAMETER SCREEN ;22-DEC-1995
"RTN","IBJPS",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,70,115,143,51,137,161,155**;21-MAR-94
"RTN","IBJPS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJPS",4,0)
 ;
"RTN","IBJPS",5,0)
EN ; -- main entry point for IBJP IB SITE PARAMETERS, display IB site parameters
"RTN","IBJPS",6,0)
 D EN^VALM("IBJP IB SITE PARAMETERS")
"RTN","IBJPS",7,0)
 Q
"RTN","IBJPS",8,0)
 ;
"RTN","IBJPS",9,0)
HDR ; -- header code
"RTN","IBJPS",10,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPS",11,0)
 Q
"RTN","IBJPS",12,0)
 ;
"RTN","IBJPS",13,0)
INIT ; -- init variables and list array
"RTN","IBJPS",14,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",15,0)
 D BLD^IBJPS1
"RTN","IBJPS",16,0)
 Q
"RTN","IBJPS",17,0)
 ;
"RTN","IBJPS",18,0)
HELP ; -- help code
"RTN","IBJPS",19,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS",20,0)
 Q
"RTN","IBJPS",21,0)
 ;
"RTN","IBJPS",22,0)
EXIT ; -- exit code
"RTN","IBJPS",23,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",24,0)
 D CLEAR^VALM1
"RTN","IBJPS",25,0)
 Q
"RTN","IBJPS",26,0)
 ;
"RTN","IBJPS",27,0)
NXEDIT ; -- IBJP IB SITE PARAMETER EDIT ACTION (EP): Select data set to edit, do edit
"RTN","IBJPS",28,0)
 N VALMY,IBSELN,IBSET
"RTN","IBJPS",29,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBJPS",30,0)
 I $D(VALMY) S IBSELN=0 F  S IBSELN=$O(VALMY(IBSELN)) Q:'IBSELN  D
"RTN","IBJPS",31,0)
 . S IBSET=$P($G(^TMP("IBJPSAX",$J,IBSELN)),U,1) Q:'IBSET
"RTN","IBJPS",32,0)
 . D EDIT(IBSET)
"RTN","IBJPS",33,0)
 S VALMBCK="R"
"RTN","IBJPS",34,0)
 Q
"RTN","IBJPS",35,0)
 ;
"RTN","IBJPS",36,0)
EDIT(IBSET) ; edit IB Site Parameters
"RTN","IBJPS",37,0)
 D FULL^VALM1
"RTN","IBJPS",38,0)
 I IBSET'="" S DR=$P($T(@IBSET),";;",2,999)
"RTN","IBJPS",39,0)
 I DR'="",$P(DR,";")'="PROVID" S DIE="^IBE(350.9,",DA=1 D ^DIE K DA,DR,DIE,DIC,X,Y
"RTN","IBJPS",40,0)
 I $D(DR),$P(DR,";")="PROVID" D @$P(DR,";",2)
"RTN","IBJPS",41,0)
 D INIT^IBJPS S VALMBCK="R"
"RTN","IBJPS",42,0)
 Q
"RTN","IBJPS",43,0)
 ;
"RTN","IBJPS",44,0)
1 ;;.09;.13;.14
"RTN","IBJPS",45,0)
2 ;;1.2;.15;.11;.12;7.04
"RTN","IBJPS",46,0)
3 ;;1.09;1.07;2.07
"RTN","IBJPS",47,0)
4 ;;4.04;6.25;6.24
"RTN","IBJPS",48,0)
5 ;;.02;1.14;1.25;1.08
"RTN","IBJPS",49,0)
6 ;;1.23;1.16;1.22;1.19;1.15;1.17
"RTN","IBJPS",50,0)
7 ;;1.26;1.1;1.31;1.27
"RTN","IBJPS",51,0)
8 ;;1.29;1.3;1.18;1.28
"RTN","IBJPS",52,0)
9 ;;1.01;1.02;1.05;1.04
"RTN","IBJPS",53,0)
10 ;;2.12;2.1;2.02;2.03;2.04;2.05;2.06;2.01
"RTN","IBJPS",54,0)
11 ;;2.08;2.09
"RTN","IBJPS",55,0)
12 ;;9.01;9.02;9.03;9.11;9.12;9.13;9.14;9.15
"RTN","IBJPS",56,0)
13 ;;10.02;10.03;10.04;10.05;D INIT^IBATFILE
"RTN","IBJPS",57,0)
14 ;;PROVID;EN^IBCEP7
"RTN","IBJPS",58,0)
15 ;;2.11;8.01;8.09;8.03;8.06;8.04;8.07;8.02;8.12T;8.11T
"RTN","IBJPS",59,0)
16 ;;50.01;50.02;50.05;50.06;50.03;50.04;50.07
"RTN","IBJPS",60,0)
 ;
"RTN","IBJPS",61,0)
 ;
"RTN","IBJPS",62,0)
ADD(IBLN,LNG,ARR) ; output array of address in X, line length=LNG
"RTN","IBJPS",63,0)
 N IBCNT,IBI,IBY,IBX,IBZ K ARR S IBCNT=1
"RTN","IBJPS",64,0)
 F IBI=2:1:4 S IBY=$P(IBLN,U,IBI) I IBY'="" D  S ARR(IBCNT)=IBY
"RTN","IBJPS",65,0)
 . S IBX=$G(ARR(IBCNT)) I IBI=4 S IBY=$P($G(^DIC(5,+IBY,0)),U,2)_" "_$P(IBLN,U,5)
"RTN","IBJPS",66,0)
 . S IBZ=$S(IBX'="":IBX_", ",1:"")_IBY I $L(IBZ)'>LNG S IBY=IBZ Q
"RTN","IBJPS",67,0)
 . S IBCNT=IBCNT+1
"RTN","IBJPS",68,0)
 Q
"RTN","IBJPS2")
0^61^B51439573
"RTN","IBJPS2",1,0)
IBJPS2 ;ALB/MAF,ARH - IBSP IB SITE PARAMETER BUILD (cont) ;22-DEC-1995
"RTN","IBJPS2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,115,143,51,137,161,155**;21-MAR-94
"RTN","IBJPS2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJPS2",4,0)
 ;
"RTN","IBJPS2",5,0)
BLD2 ; - continue build screen array for IB parameters
"RTN","IBJPS2",6,0)
 ;
"RTN","IBJPS2",7,0)
 N Z,Z0
"RTN","IBJPS2",8,0)
 D RIGHT(1,1,1) ; - facility/med center  (new line for each)
"RTN","IBJPS2",9,0)
 S IBLN=$$SET("Medical Center",$$EXSET^IBJU1($P(IBPD0,U,2),350.9,.02),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",10,0)
 S IBLN=$$SET("MAS Service",$$EXSET^IBJU1($P(IBPD1,U,14),350.9,1.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",11,0)
 ;
"RTN","IBJPS2",12,0)
 D LEFT(2)
"RTN","IBJPS2",13,0)
 S IBLN=$$SET("Default Division",$$EXSET^IBJU1($P(IBPD1,U,25),350.9,1.25),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",14,0)
 S IBLN=$$SET("Billing Supervisor",$$EXSET^IBJU1($P(IBPD1,U,8),350.9,1.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",15,0)
 ;
"RTN","IBJPS2",16,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",17,0)
 S IBLN=$$SET("Initiator Authorize",$$YN(+$P(IBPD1,U,23)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",18,0)
 S IBLN=$$SET("Ask HINQ in MCCR",$$YN(+$P(IBPD1,U,16)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",19,0)
 S IBLN=$$SET("Multiple Form Types",$$YN(+$P(IBPD1,U,22)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",20,0)
 ;
"RTN","IBJPS2",21,0)
 D LEFT(2)
"RTN","IBJPS2",22,0)
 S IBLN=$$SET("Xfer Proc to Sched",$$YN(+$P(IBPD1,U,19)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",23,0)
 S IBLN=$$SET("Use Non-PTF Codes",$$YN(+$P(IBPD1,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",24,0)
 S IBLN=$$SET("Use OP CPT screen",$$YN(+$P(IBPD1,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",25,0)
 ;
"RTN","IBJPS2",26,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",27,0)
 S IBLN=$$SET("Default Form Type",$$EXSET^IBJU1($P(IBPD1,U,26),350.9,1.26),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",28,0)
 S IBLN=$$SET("'001' for Total",$$YN(+$P(IBPD1,U,10)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",29,0)
 ;
"RTN","IBJPS2",30,0)
 D LEFT(2)
"RTN","IBJPS2",31,0)
 S IBLN=$$SET("UB-92 Address Col",$P(IBPD1,U,31),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",32,0)
 S IBLN=$$SET("HCFA 1500 Addr Col",$P(IBPD1,U,27),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",33,0)
 ;
"RTN","IBJPS2",34,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",35,0)
 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD1,U,29),350.9,1.29),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",36,0)
 S IBLN=$$SET("Default RX CPT Cd",$$EXSET^IBJU1($P(IBPD1,U,30),350.9,1.30),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",37,0)
 ;
"RTN","IBJPS2",38,0)
 D LEFT(2)
"RTN","IBJPS2",39,0)
 S IBLN=$$SET("Default ASC Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,18),350.9,1.18),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",40,0)
 S IBLN=$$SET("Default RX Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,28),350.9,1.28),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",41,0)
 ;
"RTN","IBJPS2",42,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",43,0)
 S IBLN=$$SET("Bill Signer Name","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",44,0)
 S IBLN=$$SET("Bill Signer Title","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",45,0)
 ;
"RTN","IBJPS2",46,0)
 D LEFT(2)
"RTN","IBJPS2",47,0)
 S IBLN=$$SET("Federal Tax #",$P(IBPD1,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",48,0)
 ;
"RTN","IBJPS2",49,0)
 D RIGHT(3,"","")
"RTN","IBJPS2",50,0)
 S IBLN=$$SET("Remark on Each Bill",$P(IBPD1,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",51,0)
 ;
"RTN","IBJPS2",52,0)
 D RIGHT(3,1,1) ; - Remittance/Agent Cashier Address
"RTN","IBJPS2",53,0)
 S IBLN=$$SET("Billing Facility is Another Facility",$$EXPAND^IBTRE(350.9,2.12,+$P(IBPD2,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",54,0)
 S IBLN=$$SET("Billing Facility Name",$P(IBPD2,U,10),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",55,0)
 D ADD^IBJPS(IBPD2,IBSW(3),.IBX) D  K IBX
"RTN","IBJPS2",56,0)
 . S IBT="Remittance Address",IBX=0 F  S IBX=$O(IBX(IBX)) Q:'IBX  D
"RTN","IBJPS2",57,0)
 .. S IBLN=$$SET(IBT,IBX(IBX),IBLN,IBLR,IBSEL),IBT=""
"RTN","IBJPS2",58,0)
 S IBLN=$$SET("Phone",$P(IBPD2,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",59,0)
 ;
"RTN","IBJPS2",60,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",61,0)
 S IBLN=$$SET("Inpt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,8),350.9,2.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",62,0)
 S IBLN=$$SET("Opt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,9),350.9,2.09),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",63,0)
 ;
"RTN","IBJPS2",64,0)
 D RIGHT(5,1,1)
"RTN","IBJPS2",65,0)
 S IBLN=$$SET("Rx Billing Port",$P(IBPD9,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",66,0)
 S IBLN=$$SET("AWP Update Port",$P(IBPD9,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",67,0)
 S IBLN=$$SET("TCP/IP Address",$P(IBPD9,U,3),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",68,0)
 S IBLN=$$SET("Task UCI/VOL",$P(IBPD9,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",69,0)
 S IBLN=$$SET("AWP Charge Set",$$EXSET^IBJU1($P(IBPD9,U,12),350.9,9.12),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",70,0)
 S IBLN=$$SET("Prescriber ID",$P(IBPD9,U,13),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",71,0)
 S IBLN=$$SET("DEA vs Presc.ID",$$YN($P(IBPD9,U,14)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",72,0)
 S IBLN=$$SET("Calc comp code",$$YN($P(IBPD9,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",73,0)
 ;
"RTN","IBJPS2",74,0)
 D LEFT(6)
"RTN","IBJPS2",75,0)
 S IBLN=$$SET("Prim Billing Task",$P(IBPD9,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",76,0)
 S IBLN=$$SET("Sec Billing Task",$P(IBPD9,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",77,0)
 S IBLN=$$SET("Prim AWP Upd Task",$P(IBPD9,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",78,0)
 S IBLN=$$SET("Sec AWP Upd Task",$P(IBPD9,U,7),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",79,0)
 S IBLN=$$SET("Task Started",$$DAT1^IBOUTL($P(IBPD9,U,8),1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",80,0)
 S IBLN=$$SET("Task Last Ran",$$DAT1^IBOUTL($P(IBPD9,U,9),1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",81,0)
 S IBLN=$$SET("Shutdown Tasks?",$$YN($P(IBPD9,U,10)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",82,0)
 ;
"RTN","IBJPS2",83,0)
 ; transfer pricing
"RTN","IBJPS2",84,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",85,0)
 S IBLN=$$SET("Inpatient TP Active ",$$YN(+$P(IBPD10,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",86,0)
 S IBLN=$$SET("Outpatient TP Active",$$YN(+$P(IBPD10,U,3)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",87,0)
 S IBLN=$$SET("Pharmacy TP Active  ",$$YN(+$P(IBPD10,U,4)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",88,0)
 S IBLN=$$SET("Prosthetic TP Active",$$YN(+$P(IBPD10,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",89,0)
 ;
"RTN","IBJPS2",90,0)
 ; provider ids
"RTN","IBJPS2",91,0)
 D RIGHT(8,1,1)
"RTN","IBJPS2",92,0)
 S IBLN=$$SET(" FACILITY LEVEL DEFAULT ID's ","",IBLN,IBLR,IBSEL,1)
"RTN","IBJPS2",93,0)
 S Z=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="",+$P(Z0,U,2)=0!($P(Z0,U,2)=2) D
"RTN","IBJPS2",94,0)
 . I $P($G(^IBE(355.97,Z,1)),U,4) S $P(Z0,U,4)=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBJPS2",95,0)
 . S IBLN=$$SET("  "_$P(Z0,U),$P(Z0,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",96,0)
 ;
"RTN","IBJPS2",97,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",98,0)
 N IBZ S IBZ=$P(IBPD8,U,3)
"RTN","IBJPS2",99,0)
 S IBLN=$$SET(" EDI/MRA Activated",$$EXSET^IBJU1(+$P(IBPD8,U,10),350.9,8.1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",100,0)
 S IBLN=$$SET(" EDI Contact Phone",$P(IBPD2,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",101,0)
 S IBLN=$$SET(" EDI 837 Live Transmit Queue",$P(IBPD8,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",102,0)
 S IBLN=$$SET(" EDI 837 Test Transmit Queue",$P(IBPD8,U,9),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",103,0)
 S IBLN=$$SET(" Auto-Txmt Bill Frequency",$S(IBZ:"Every"_$S(IBZ>1:" "_$P(IBPD8,U,3),1:""),1:"")_$S(IBZ:" Day"_$S(IBZ=1:"",1:"s"),1:"Never Run"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",104,0)
 S IBLN=$$SET(" Hours To Auto-Transmit",$P(IBPD8,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",105,0)
 S IBLN=$$SET(" Max # Bills Per Batch",$P(IBPD8,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",106,0)
 S IBLN=$$SET(" Only Allow 1 Ins Co/Claim Batch?",$$EXPAND^IBTRE(350.9,8.07,+$P(IBPD8,U,7)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",107,0)
 S IBLN=$$SET(" Last Auto-Txmt Run Date",$$DATE^IBJU1($P(IBPD8,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",108,0)
 S IBLN=$$SET(" Days To Wait To Purge Msgs",$P(IBPD8,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",109,0)
 S IBLN=$$SET(" Allow MRA Processing?",$$YN(+$P(IBPD8,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",110,0)
 S IBLN=$$SET(" Enable Automatic MRA Processing?",$$YN(+$P(IBPD8,U,11)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",111,0)
 ;
"RTN","IBJPS2",112,0)
 ; Set 16:  Ingenix ClaimsManager Information
"RTN","IBJPS2",113,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",114,0)
 S IBLN=$$SET("Are we using ClaimsManager?",$$YN(+$P(IBPD50,U,1)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",115,0)
 S IBLN=$$SET("Is ClaimsManager working OK?",$$YN(+$P(IBPD50,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",116,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Address",$P(IBPD50,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",117,0)
 S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",""))
"RTN","IBJPS2",118,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Ports",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",119,0)
 F  S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",IBCISOCK)) Q:IBCISOCK=""  D
"RTN","IBJPS2",120,0)
 . S IBLN=$$SET("",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",121,0)
 . Q
"RTN","IBJPS2",122,0)
 S IBLN=$$SET("General Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,3),350.9,50.03),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",123,0)
 S IBLN=$$SET("Communication Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,4),350.9,50.04),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",124,0)
 S IBCIMFLG=$$EXTERNAL^DILFD(350.9,50.07,"",$P(IBPD50,U,7))
"RTN","IBJPS2",125,0)
 I IBCIMFLG="" S IBCIMFLG="PRIORITY"
"RTN","IBJPS2",126,0)
 S IBLN=$$SET("MailMan Messages",IBCIMFLG,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",127,0)
 ;
"RTN","IBJPS2",128,0)
 Q
"RTN","IBJPS2",129,0)
 ;
"RTN","IBJPS2",130,0)
SET(TTL,DATA,LN,LR,SEL,HDR) ;
"RTN","IBJPS2",131,0)
 N IBY,IBX,IBC S IBC=": " I TTL="" S IBC="  "
"RTN","IBJPS2",132,0)
 S IBY=TTL_$J("",(IBTW(LR)-$L(TTL)-2))_$S('$G(HDR):IBC_DATA,1:""),IBX=$G(^TMP("IBJPS",$J,LN,0))
"RTN","IBJPS2",133,0)
 S IBX=$$SETSTR^VALM1(IBY,IBX,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPS2",134,0)
 D SET1(IBX,LN,SEL)
"RTN","IBJPS2",135,0)
 S LN=LN+1
"RTN","IBJPS2",136,0)
 Q LN
"RTN","IBJPS2",137,0)
 ;
"RTN","IBJPS2",138,0)
SET1(STR,LN,SEL,HI) ; set up TMP array with screen data
"RTN","IBJPS2",139,0)
 S ^TMP("IBJPS",$J,LN,0)=STR
"RTN","IBJPS2",140,0)
 S ^TMP("IBJPS",$J,"IDX",LN,SEL)=""
"RTN","IBJPS2",141,0)
 S ^TMP("IBJPSAX",$J,SEL)=SEL
"RTN","IBJPS2",142,0)
 I $G(HI)'="" D CNTRL^VALM10(LN,1,4,IOINHI,IOINORM)
"RTN","IBJPS2",143,0)
 ;I $G(RV) D CNTRL^VALM10(LN,6,19,IOUON,IOUOFF)
"RTN","IBJPS2",144,0)
 Q
"RTN","IBJPS2",145,0)
 ;
"RTN","IBJPS2",146,0)
YN(X) Q $S(+X:"YES",1:"NO")
"RTN","IBJPS2",147,0)
 ;
"RTN","IBJPS2",148,0)
RIGHT(LR,SEL,BL) ; - reset control variables for right side of screen
"RTN","IBJPS2",149,0)
 S IBLN=$S(IBLN>IBGRPE:IBLN,1:IBGRPE) I $G(BL) S IBLN=$$SET("","",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",150,0)
 S IBLR=$G(LR),IBGRPB=IBLN I +$G(SEL) S IBSEL=IBSEL+1 D SET1("["_IBSEL_"]",IBLN,IBSEL,1)
"RTN","IBJPS2",151,0)
 Q
"RTN","IBJPS2",152,0)
 ;
"RTN","IBJPS2",153,0)
LEFT(LR) ; - reset control variables for left side of screen
"RTN","IBJPS2",154,0)
 S IBLR=$G(LR),IBGRPE=IBLN,IBLN=IBGRPB
"RTN","IBJPS2",155,0)
 Q
"RTN","IBJTBA1")
0^59^B26882169
"RTN","IBJTBA1",1,0)
IBJTBA1 ;ALB/TMK - TPJI BILL CHARGE INFO SCREEN ;01-MAR-1995
"RTN","IBJTBA1",2,0)
 ;;2.0;INTEGRATED BILLING;**135,265,155**;21-MAR-94
"RTN","IBJTBA1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJTBA1",4,0)
 ;
"RTN","IBJTBA1",5,0)
SHEOB(IBI,IBSPL,IBEOBCT,IBCTOF) ; Format EOB called from IBJTBA
"RTN","IBJTBA1",6,0)
 ; IBSPL = 0 if EOB represents one bill's payment
"RTN","IBJTBA1",7,0)
 ;       =  1 if AR had to split the EOB between multiple bills
"RTN","IBJTBA1",8,0)
 ; Assumes IBLN is defined and returns it with line count
"RTN","IBJTBA1",9,0)
 ; Assumes IBEOBDET may be defined as a flag to control detail level of print
"RTN","IBJTBA1",10,0)
 N X,IBPT,IBCN,IBM,IBM1,IBM2,IBTY,IBPY,IBPR,IBST,IBSTR,IBCA,IBTS,IBTA,Z,Z0
"RTN","IBJTBA1",11,0)
 S X="0.00"
"RTN","IBJTBA1",12,0)
 S IBM=$G(^IBM(361.1,IBI,0))
"RTN","IBJTBA1",13,0)
 S IBTY=$P(IBM,U,4),IBTY=$S(IBTY:"MEDICARE MRA",1:"NORMAL EOB")
"RTN","IBJTBA1",14,0)
 I IBTY'["MRA",IBSPL S IBTY="A/R SPLIT/COVERS MORE THAN 1 BILL"
"RTN","IBJTBA1",15,0)
 I $P(IBM,U,13)>1,$P(IBM,U,13)<5 S IBTY=IBTY_" ("_$$EXTERNAL^DILFD(361.1,.13,,$P(IBM,U,13))_")"
"RTN","IBJTBA1",16,0)
 S IBCN=$P(IBM,U,14),IBPY=$P(IBM,U,2)
"RTN","IBJTBA1",17,0)
 S:IBPY IBPY=$P($G(^DIC(36,IBPY,0)),U)
"RTN","IBJTBA1",18,0)
 S IBPR=$$FMTE^XLFDT($P(IBM,U,6)),IBST=$P(IBM,U,16)
"RTN","IBJTBA1",19,0)
 S IBST=$$EXPAND^IBTRE(361.1,.16,+IBST)
"RTN","IBJTBA1",20,0)
 S IBM1=$G(^IBM(361.1,IBI,1))
"RTN","IBJTBA1",21,0)
 ;
"RTN","IBJTBA1",22,0)
 S IBPT=$P(IBM1,U,2)   ; patient responsibility 1.02 field
"RTN","IBJTBA1",23,0)
 ; If MRA & UB92, then calculate patient responsiblity value
"RTN","IBJTBA1",24,0)
 I $P(IBM,U,4),$$FT^IBCEF(+$P(IBM,U,1))=3 S IBPT=$$PTRESPI^IBCECOB1(IBI)
"RTN","IBJTBA1",25,0)
 ;
"RTN","IBJTBA1",26,0)
 S IBCA=$P(IBM1,U)
"RTN","IBJTBA1",27,0)
 S IBM2=$G(^IBM(361.1,IBI,2)),IBTA=$P(IBM2,U,3)
"RTN","IBJTBA1",28,0)
 ; if no Total Allowed Amount, sum up amounts on Line Level Adjustment
"RTN","IBJTBA1",29,0)
 I IBTA="" S IBTA=$$ALLOWED^IBCEMU2(IBI)
"RTN","IBJTBA1",30,0)
 S IBTS=$P(IBM2,U,4)
"RTN","IBJTBA1",31,0)
 D MRA2
"RTN","IBJTBA1",32,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",33,0)
 I '$G(IBEOBDET),IBSPL D
"RTN","IBJTBA1",34,0)
 . S IBSTR=$$SETLN^IBJTBA("    **A/R CORRECTED PAYMENT DATA:","",1,50),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",35,0)
 . S IBSTR=$$SETLN^IBJTBA("     TOTAL AMT PD: "_$J(+$P($G(^IBM(361.1,IBI,1)),U,1),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",36,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IBI,8,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBJTBA1",37,0)
 .. S IBSTR=$$SETLN^IBJTBA($E($J("",8)_$S($P(Z0,U,3):$$BN1^PRCAFN(+$P(Z0,U,3)),1:"[suspense]"_$P(Z0,U))_$J("",25),1,25)_"  "_$J(+$P(Z0,U,2),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",38,0)
 ;
"RTN","IBJTBA1",39,0)
 I $G(IBEOBDET) D
"RTN","IBJTBA1",40,0)
 . I $P($G(^IBM(361.1,IBI,0)),U,4) D  Q     ; Medicare MRA processing
"RTN","IBJTBA1",41,0)
 .. N VALMCNT
"RTN","IBJTBA1",42,0)
 .. K ^TMP("IBCECSD",$J)
"RTN","IBJTBA1",43,0)
 .. D GETEOB^IBCECSA6(IBI,0,,+$G(IBLN)-1)
"RTN","IBJTBA1",44,0)
 .. S Z=0 F  S Z=$O(^TMP("IBCECSD",$J,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("IBCECSD",$J,Z,0)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",45,0)
 .. K ^TMP("IBCECSD",$J)
"RTN","IBJTBA1",46,0)
 .. D EOBERR
"RTN","IBJTBA1",47,0)
 .. Q
"RTN","IBJTBA1",48,0)
 . ;
"RTN","IBJTBA1",49,0)
 . ; Normal EOB processing
"RTN","IBJTBA1",50,0)
 . N VALMCNT
"RTN","IBJTBA1",51,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",52,0)
 . D GETEOB^IBCECSA6(IBI,1)
"RTN","IBJTBA1",53,0)
 . S Z=0 F  S Z=$O(^TMP("PRCA_EOB",$J,IBI,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("PRCA_EOB",$J,IBI,Z)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",54,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",55,0)
 . D EOBERR
"RTN","IBJTBA1",56,0)
 . Q
"RTN","IBJTBA1",57,0)
 ;
"RTN","IBJTBA1",58,0)
 Q
"RTN","IBJTBA1",59,0)
 ;
"RTN","IBJTBA1",60,0)
MRA2 ;
"RTN","IBJTBA1",61,0)
 N IBD
"RTN","IBJTBA1",62,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",63,0)
 S IBD="EOB/MRA Information"_$S($D(IBCTOF):" ("_$G(IBEOBCT)_" OF "_IBCTOF_")",1:"")
"RTN","IBJTBA1",64,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",30,45),$E(IBSTR,1,2)=">>",IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",65,0)
 S IBD="EOB Type: "_IBTY,IBSTR=$$SETLN^IBJTBA(IBD,"",5,59)
"RTN","IBJTBA1",66,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",67,0)
 S IBD="ICN: "_IBCN,IBSTR=$$SETLN^IBJTBA(IBD,"",10,30)
"RTN","IBJTBA1",68,0)
 S IBD="Patient Resp Amount: "_$S('IBPT:X,1:IBPT)
"RTN","IBJTBA1",69,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,44,35)
"RTN","IBJTBA1",70,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",71,0)
 S IBD="Payer Name: "_IBPY,IBSTR=$$SETLN^IBJTBA(IBD,"",3,40)
"RTN","IBJTBA1",72,0)
 S IBD="Total Allowed Amount: "_$S('IBTA:X,1:IBTA)
"RTN","IBJTBA1",73,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,43,36)
"RTN","IBJTBA1",74,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",75,0)
 S IBD="EOB Date: "_IBPR,IBSTR=$$SETLN^IBJTBA(IBD,"",5,35)
"RTN","IBJTBA1",76,0)
 S IBD="Total Submitted Charges: "_$S('IBTS:X,1:IBTS)
"RTN","IBJTBA1",77,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",78,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",79,0)
 S IBD="Svc From Dt: "_$$DAT1^IBOUTL($P(IBM1,U,10))
"RTN","IBJTBA1",80,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",81,0)
 S IBD="Svc To Dt: "_$$DAT1^IBOUTL($P(IBM1,U,11))
"RTN","IBJTBA1",82,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,54,25)
"RTN","IBJTBA1",83,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",84,0)
 S IBSTR=""
"RTN","IBJTBA1",85,0)
 I IBTY["MRA" S IBD="MRA Review Status: "_IBST,IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",86,0)
 S IBD=$S('$G(IBSPL):"  ",1:"**")_"Reported Payment Amt: "_$S('IBCA:$J(X,"",2),1:$J(+IBCA,"",2))
"RTN","IBJTBA1",87,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,41,37)
"RTN","IBJTBA1",88,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",89,0)
 ;
"RTN","IBJTBA1",90,0)
 I IBTY["MRA",$D(^IBM(361.1,IBI,21)) D
"RTN","IBJTBA1",91,0)
 . S IBD=$TR($J("",35)," ","-")_"Review"_$TR($J("",38)," ","-")
"RTN","IBJTBA1",92,0)
 . S IBSTR=$$SETLN^IBJTBA(IBD,"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",93,0)
 . S (IBST,IBCN)=0 F  S IBCN=$O(^IBM(361.1,IBI,21,IBCN)) Q:'IBCN  S X=$G(^(IBCN,0)) D
"RTN","IBJTBA1",94,0)
 .. S IBST=0
"RTN","IBJTBA1",95,0)
 .. S IBD="Review Date: "_$$DAT1^IBOUTL($P(X,U))
"RTN","IBJTBA1",96,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,"",1,30)
"RTN","IBJTBA1",97,0)
 .. S IBD="Reviewed By: "_$P($G(^VA(200,+$P(X,U,2),0)),U)
"RTN","IBJTBA1",98,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",99,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",100,0)
 .. S IBD=0 F  S IBD=$O(^IBM(361.1,IBI,21,IBCN,1,IBD)) Q:'IBD  S IBSTR=$$SETLN^IBJTBA($S('IBST:"Comments: ",1:"")_$G(^(IBD,0)),"",1,$S('IBST:69,1:79)),IBST=1,IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",101,0)
 . I 'IBST D
"RTN","IBJTBA1",102,0)
 .. S IBSTR=$$SETLN^IBJTBA("None","",1,10)
"RTN","IBJTBA1",103,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",104,0)
 Q
"RTN","IBJTBA1",105,0)
 ;
"RTN","IBJTBA1",106,0)
EOBERR ; Display information about any 361.1 message storage or filing errors
"RTN","IBJTBA1",107,0)
 I '$O(^IBM(361.1,IBI,"ERR",0)) Q
"RTN","IBJTBA1",108,0)
 S IBSTR=$$SETLN^IBJTBA(" ** MESSAGE STORAGE ERRORS  **","",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",109,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBI,"ERR",Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^(Z,0)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",110,0)
 Q
"RTN","IBJTBA1",111,0)
 ;
"RTN","IBJTCA2")
0^68^B15221038
"RTN","IBJTCA2",1,0)
IBJTCA2 ;ALB/ARH - TPI CLAIMS INFO BUILD (CONT) ;16-FEB-1995
"RTN","IBJTCA2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,155**;21-MAR-94
"RTN","IBJTCA2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJTCA2",4,0)
 ;
"RTN","IBJTCA2",5,0)
CONT ; Continuation of Claim Information Screen Build
"RTN","IBJTCA2",6,0)
 ; reason cancelled
"RTN","IBJTCA2",7,0)
 I $P(IBD0,U,13)=7 D
"RTN","IBJTCA2",8,0)
 . S (IBNC(1),IBTC(1))=2,(IBNC(2),IBTC(2))=0,IBNC(3)=28,IBTW(1)=29,IBTW(2)=0,IBSW(1)=49,IBSW(2)=0
"RTN","IBJTCA2",9,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",10,0)
 . ;
"RTN","IBJTCA2",11,0)
 . S IBGRPB=IBLN,IBLR=1
"RTN","IBJTCA2",12,0)
 . K IBY D RCANC^IBJTU2(IBIFN,.IBY,50)
"RTN","IBJTCA2",13,0)
 . S IBT="Reason Cancelled by ("_$P(IBY,U,3)_"): "
"RTN","IBJTCA2",14,0)
 . S IBI=0 F  S IBI=$O(IBY(IBI)) Q:'IBI  S IBD=IBY(IBI) S IBLN=$$SET(IBT,IBD,IBLN,IBLR),IBT=""
"RTN","IBJTCA2",15,0)
 ;
"RTN","IBJTCA2",16,0)
 S (IBLN,VALMCNT)=$S(IBLN>IBGRPE:IBLN,1:IBGRPE)
"RTN","IBJTCA2",17,0)
 S (IBNC(1),IBTC(1))=2,IBTW(1)=16,IBSW(1)=50
"RTN","IBJTCA2",18,0)
 S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",19,0)
 ;
"RTN","IBJTCA2",20,0)
 S IBGRPB=IBLN,IBLR=1
"RTN","IBJTCA2",21,0)
 ;
"RTN","IBJTCA2",22,0)
 I +$P(IBDS,U,1) S IBT="Entered: ",IBD=$$EXT(IBDS,1,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",23,0)
 I +$P(IBDS,U,4) S IBT="Initial Review: ",IBD=$$EXT(IBDS,4,5) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",24,0)
 I +$P(IBDS,U,7) S IBT="Second Review: ",IBD=$$EXT(IBDS,7,8) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",25,0)
 I +$P(IBDS,U,10) S IBT="Authorized: ",IBD=$$EXT(IBDS,10,11) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",26,0)
 I +$P(IBDS,U,12) S IBT="First Printed: ",IBD=$$EXT(IBDS,12,13) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",27,0)
 I $P(IBDS,U,14)>$P(IBDS,U,12) S IBT="Last Printed: ",IBD=$$EXT(IBDS,14,15) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",28,0)
 I +$P(IBDS,U,17) S IBT="Cancelled: ",IBD=$$EXT(IBDS,17,18) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",29,0)
 ;
"RTN","IBJTCA2",30,0)
 I $D(^DGCR(399,IBIFN,"R","AC",1)) S IBT="Returned to AR: ",X=0 F  S X=$O(^DGCR(399,IBIFN,"R","AC",1,X)) Q:'X  D
"RTN","IBJTCA2",31,0)
 . S IBY=$G(^DGCR(399,IBIFN,"R",X,0)),IBD=$$EXT(IBY,1,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",32,0)
 ;
"RTN","IBJTCA2",33,0)
 N IBCOB,IBX,IBY,IBI,IBJ,IBK D BCOB^IBCU3(IBIFN,.IBCOB) I $O(IBCOB(0)) D
"RTN","IBJTCA2",34,0)
 . S IBTC(1)=2,IBTW(1)=12,IBSW(1)=68,IBLR=1,IBNC(1)=26
"RTN","IBJTCA2",35,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",36,0)
 . S IBT="Payers and Related Bills" S IBLN=$$SETN^IBJTCA1(IBT,IBLN,IBLR,1)
"RTN","IBJTCA2",37,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",38,0)
 . S IBT="",IBD="Insurance Co.    Bill #     Status   Original  Collected    Balance"
"RTN","IBJTCA2",39,0)
 . S IBLN=$$SET(IBT,IBD,IBLN,IBLR) D CNTRL^VALM10(IBLN-1,(IBTC(1)+IBTW(1)),IBSW(1),IOUON,IOUOFF)
"RTN","IBJTCA2",40,0)
 . S IBI=0 F  S IBI=$O(IBCOB(IBI)) Q:'IBI  D
"RTN","IBJTCA2",41,0)
 .. S IBT=$S(IBI=1:"Primary",IBI=2:"Secondary",IBI=3:"Tertiary",1:"Other")_":  "
"RTN","IBJTCA2",42,0)
 .. S IBJ=0 F  S IBJ=$O(IBCOB(IBI,IBJ)) Q:'IBJ  S IBK="" F  S IBK=$O(IBCOB(IBI,IBJ,IBK)) Q:IBK=""  D
"RTN","IBJTCA2",43,0)
 ... S IBD="",IBY=$$BILL^RCJIBFN2(IBK)
"RTN","IBJTCA2",44,0)
 ... S IBX=$P($G(^DIC(36,+IBJ,0)),U,1) S IBD=$$SLINE(IBD,IBX,0,15)
"RTN","IBJTCA2",45,0)
 ... I +IBK D
"RTN","IBJTCA2",46,0)
 .... S IBX=$P($G(^DGCR(399,+IBK,0)),U,1) S IBD=$$SLINE(IBD,IBX,17,10)
"RTN","IBJTCA2",47,0)
 .... S IBX=$P($$STNO^RCJIBFN2(+$P(IBY,U,2)),U,2) ;bill status
"RTN","IBJTCA2",48,0)
 .... ; if MRA active & bill pyr seq >1 & dsply'g prmry & prmry ins is WNR
"RTN","IBJTCA2",49,0)
 .... I $$EDIACTV^IBCEF4(2),$$COBN^IBCEF(+IBK)>1,IBI=1,$$MCRWNR^IBEFUNC(+IBJ) D
"RTN","IBJTCA2",50,0)
 ..... S IBX=" ",IBY="0^^0^0^0" ;blank out status & reset WNR amounts
"RTN","IBJTCA2",51,0)
 .... S IBD=$$SLINE(IBD,IBX,30,3)
"RTN","IBJTCA2",52,0)
 .... S IBX=$J($P(IBY,U,1),10,2) S IBD=$$SLINE(IBD,IBX,35,10)
"RTN","IBJTCA2",53,0)
 .... S IBX=$J($P(IBY,U,4),10,2) S IBD=$$SLINE(IBD,IBX,46,10)
"RTN","IBJTCA2",54,0)
 .... S IBX=$J($P(IBY,U,3),10,2) S IBD=$$SLINE(IBD,IBX,57,10)
"RTN","IBJTCA2",55,0)
 ... S IBLN=$$SET(IBT,IBD,IBLN,IBLR),IBT=""
"RTN","IBJTCA2",56,0)
 Q
"RTN","IBJTCA2",57,0)
 ;
"RTN","IBJTCA2",58,0)
EXT(STR,DT,USER) ; returns external form of user and date, given their position in the string
"RTN","IBJTCA2",59,0)
 N X,Y S Y="",STR=$G(STR),DT=+$G(DT),USER=+$G(USER)
"RTN","IBJTCA2",60,0)
 S X=$P(STR,U,DT),DT="" I +X S DT=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBJTCA2",61,0)
 S X=$P(STR,U,USER),USER="" I +X S USER=$P($G(^VA(200,+X,0)),U,1)
"RTN","IBJTCA2",62,0)
 S Y=DT_"  by  "_$S(USER="":"UNKNOWN",1:USER)
"RTN","IBJTCA2",63,0)
 Q Y
"RTN","IBJTCA2",64,0)
 ;
"RTN","IBJTCA2",65,0)
SET(IBT,IBD,IBLN,IBLR) ;
"RTN","IBJTCA2",66,0)
 N LN S LN=$$SET^IBJTCA1(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",67,0)
 Q LN
"RTN","IBJTCA2",68,0)
 ;
"RTN","IBJTCA2",69,0)
SLINE(IBD,DATA,COL,WD) ; format a single line with multiple data fields
"RTN","IBJTCA2",70,0)
 S IBD=$E(IBD,1,(COL-1)),IBD=IBD_$J("",(COL-$L(IBD))),IBD=IBD_$E(DATA,1,WD)
"RTN","IBJTCA2",71,0)
 Q IBD
"RTN","IBOCPD")
0^65^B14496211
"RTN","IBOCPD",1,0)
IBOCPD ;ALB/ARH - CLERK PRODUCTIVITY REPORTS ;10/8/91
"RTN","IBOCPD",2,0)
 ;;2.0;INTEGRATED BILLING;**44,63,118,155**;21-MAR-94
"RTN","IBOCPD",3,0)
 ;
"RTN","IBOCPD",4,0)
EN ;***
"RTN","IBOCPD",5,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPD" D T1^%ZOSV ;stop rt clock
"RTN","IBOCPD",6,0)
 ;S XRTL=$ZU(0),XRTN="IBOCPD-1" D T0^%ZOSV ;start rt clock
"RTN","IBOCPD",7,0)
 S DIR(0)="SO^F:FULL CLERK PRODUCTIVITY REPORT;S:SUMMARY OF CLERK PRODUCTIVITY REPORT;"
"RTN","IBOCPD",8,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT I Y="F" D FULL G EXIT
"RTN","IBOCPD",9,0)
 I Y="S" D ^IBOCPDS
"RTN","IBOCPD",10,0)
EXIT K X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIOEND
"RTN","IBOCPD",11,0)
 ;***
"RTN","IBOCPD",12,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPD" D T1^%ZOSV ;stop rt clock
"RTN","IBOCPD",13,0)
 Q
"RTN","IBOCPD",14,0)
 ;
"RTN","IBOCPD",15,0)
FULL D ORDER G:IBQUIT ENDF
"RTN","IBOCPD",16,0)
 D HOME^%ZIS S IBHDR="CLERK PRODUCTIVITY REPORT"
"RTN","IBOCPD",17,0)
 W @IOF,?27,IBHDR,!!,"Report requires 132 columns."
"RTN","IBOCPD",18,0)
 S IBFLD="Date "_$S(Y="E":"Entered",Y="A":"Authorized",1:"First Printed")
"RTN","IBOCPD",19,0)
 D RANGE I IBQUIT G ENDF
"RTN","IBOCPD",20,0)
 ;
"RTN","IBOCPD",21,0)
PRINTF ; - Print report.
"RTN","IBOCPD",22,0)
 ;***
"RTN","IBOCPD",23,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPD" D T1^%ZOSV ;stop rt clock
"RTN","IBOCPD",24,0)
 ;S XRTL=$ZU(0),XRTN="IBOCPD-2" D T0^%ZOSV ;start rt clock
"RTN","IBOCPD",25,0)
 S DIOEND="D PAUSE^IBOCPDS"
"RTN","IBOCPD",26,0)
 S FR=IBBEG_",?,?,",TO=IBEND_",?,?,",L=0,DIC="^DGCR(399,"
"RTN","IBOCPD",27,0)
 ;
"RTN","IBOCPD",28,0)
 S IBF1=$S(IBORDER="E":"ENTERED/EDITED BY",IBORDER="A":"AUTHORIZER",1:"FIRST PRINTED BY")
"RTN","IBOCPD",29,0)
 S IBF2=$S(IBORDER="E":"DATE ENTERED",IBORDER="A":"AUTHORIZATION DATE",1:"DATE FIRST PRINTED")
"RTN","IBOCPD",30,0)
 S IBNOW=$P($$FMTE^XLFDT($$NOW^XLFDT),":",1,2)
"RTN","IBOCPD",31,0)
 S IBNOW=$P(IBNOW,"@")_"  "_$P(IBNOW,"@",2)
"RTN","IBOCPD",32,0)
 S IBNOW=$P(IBNOW,", ")_","_$P(IBNOW,", ",2)
"RTN","IBOCPD",33,0)
 S IBNOW=$TR(IBNOW,"abceglnoprtuvy","ABCEGLNOPRTUVY")
"RTN","IBOCPD",34,0)
 ;
"RTN","IBOCPD",35,0)
 S BY="'@"_IBF2_";""Date "_$S(IBORDER="E":"Enter",IBORDER="A":"Authoriz",1:"First Print")_"ed"",+@"_IBF1_";"""_$S(IBORDER="E":"Clerk Enter",IBORDER="A":"Authoriz",1:"First Print")_"ed By"";S1,@RATE TYPE;""Rate Type"",@"_IBF2
"RTN","IBOCPD",36,0)
 ;
"RTN","IBOCPD",37,0)
 S FLDS="[IB CLK PROD]" D EN1^DIP
"RTN","IBOCPD",38,0)
 ;
"RTN","IBOCPD",39,0)
ENDF K DIC,L,BY,FR,TO,FLDS,IBHDR,IBBEG,IBEND,IBBEGE,IBENDE,IBFLD,IBORDER
"RTN","IBOCPD",40,0)
 K IBQUIT,IBF1,IBF2,IBNOW,X,Y,DIRUT,DIROUT
"RTN","IBOCPD",41,0)
 Q
"RTN","IBOCPD",42,0)
 ;
"RTN","IBOCPD",43,0)
ORDER ; - Selection of order in which to print report.
"RTN","IBOCPD",44,0)
 S DIR("A")="REPORT BY WHICH CLERK FUNCTION",DIR(0)="SO^E:WHO ENTERED BILL;A:WHO AUTHORIZED BILL;P:WHO FIRST PRINTED BILL;"
"RTN","IBOCPD",45,0)
 S DIR("?")="Choose the clerk's function that will determine who gets 'credit' for a bill on this report"
"RTN","IBOCPD",46,0)
 S DIR("B")="A"
"RTN","IBOCPD",47,0)
 D ^DIR K DIR I $D(DIRUT)!(X="") S IBQUIT=1 Q
"RTN","IBOCPD",48,0)
 S IBORDER=Y,IBQUIT=0
"RTN","IBOCPD",49,0)
 Q
"RTN","IBOCPD",50,0)
 ;
"RTN","IBOCPD",51,0)
RANGE ; - Get date range.
"RTN","IBOCPD",52,0)
 S DIR(0)="D^:NOW:EX",DIR("A")="START WITH "_IBFLD
"RTN","IBOCPD",53,0)
 D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBOCPD",54,0)
 S IBBEG=Y X ^DD("DD") S IBBEGE=Y
"RTN","IBOCPD",55,0)
 S DIR(0)="D^"_IBBEG_":NOW:EX",DIR("A")="GO TO "_IBFLD,DIR("B")="TODAY"
"RTN","IBOCPD",56,0)
 D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBOCPD",57,0)
 S IBEND=Y X ^DD("DD") S IBENDE=Y,IBQUIT=0
"RTN","IBOCPD",58,0)
 Q
"RTN","IBOCPD",59,0)
 ;
"RTN","IBOCPD",60,0)
NOTE N IBH1,IBH2
"RTN","IBOCPD",61,0)
 S IBH1=$S(IBORDER="E":"ENTERED",IBORDER="A":"AUTHORIZED",1:"PRINTED"),IBH2=$S(IBORDER'="P":IBH1,1:"FIRST PRINTED")
"RTN","IBOCPD",62,0)
 W !!,"NOTE: ** TOTAL ",IBH1," COLUMN INCLUDES TOTALS OF ALL BILLS THAT WERE ",IBH2," IN THE SELECTED DATE RANGE REGARDLESS OF THE",!,?13,"BILLS' CURRENT STATUS"
"RTN","IBOCPD",63,0)
 W !,?9,IBH1," CANCELLED COLUMN INCLUDES TOTALS OF ONLY THOSE BILLS THAT WERE ",IBH2," IN THE SELECTED DATE RANGE AND HAVE",!,?13,"A CURRENT STATUS OF CANCELLED"
"RTN","IBOCPD",64,0)
 W !?9,"MRA REQUESTS COLUMN INCLUDES TOTALS OF ALL BILLS THAT HAD AN MRA REQUEST PERFORMED IN THE SELECTED DATE RANGE"
"RTN","IBOCPD",65,0)
 Q
"RTN","IBOCPDS")
0^66^B59686442
"RTN","IBOCPDS",1,0)
IBOCPDS ;ALB/ARH - CLERK PRODUCTIVITY REPORT (SUMMARY) ;10/8/91
"RTN","IBOCPDS",2,0)
 ;;2.0;INTEGRATED BILLING;**44,118,155**;21-MAR-94
"RTN","IBOCPDS",3,0)
 ;
"RTN","IBOCPDS",4,0)
EN ; - Get parameters then run the report.
"RTN","IBOCPDS",5,0)
 D ORDER^IBOCPD I IBQUIT G EXIT
"RTN","IBOCPDS",6,0)
 D HOME^%ZIS
"RTN","IBOCPDS",7,0)
 S IBHDR="CLERK PRODUCTIVITY SUMMARY REPORT" W @IOF,?22,IBHDR,!!
"RTN","IBOCPDS",8,0)
 S IBFLD="Date "_$S(IBORDER="E":"Entered",IBORDER="A":"Authorized",1:"First Printed")
"RTN","IBOCPDS",9,0)
 D RANGE^IBOCPD I IBQUIT G EXIT
"RTN","IBOCPDS",10,0)
 ;
"RTN","IBOCPDS",11,0)
 ; - Print without clerks' names?
"RTN","IBOCPDS",12,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("?")="^D HLP^IBOCPDS" W !
"RTN","IBOCPDS",13,0)
 S DIR("A")="Do you want to print the summary without the clerks' names"
"RTN","IBOCPDS",14,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G EXIT
"RTN","IBOCPDS",15,0)
 S IBNCLK=+Y K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBOCPDS",16,0)
 ;
"RTN","IBOCPDS",17,0)
DEV ; - Get the device.
"RTN","IBOCPDS",18,0)
 W !!,"Report requires 132 columns."
"RTN","IBOCPDS",19,0)
 S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
"RTN","IBOCPDS",20,0)
 I $D(IO("Q")) S ZTRTN="ENT^IBOCPDS",ZTDESC="Clerk Productivity Summary Report",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") G EXIT
"RTN","IBOCPDS",21,0)
 U IO
"RTN","IBOCPDS",22,0)
 ;***
"RTN","IBOCPDS",23,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPDS" D T1^%ZOSV ;stop rt clock
"RTN","IBOCPDS",24,0)
 ;
"RTN","IBOCPDS",25,0)
ENT ; - Find, save, and print the data that satisfies the search parameters
"RTN","IBOCPDS",26,0)
 ;   entry for tasked jobs.
"RTN","IBOCPDS",27,0)
 ;***
"RTN","IBOCPDS",28,0)
 ;S XRTL=$ZU(0),XRTN="IBOCPDS-2" D T0^%ZOSV ;start rt clock
"RTN","IBOCPDS",29,0)
 K ^TMP("IB",$J),IBMRAUSR
"RTN","IBOCPDS",30,0)
 S IBCDT=IBBEG-.001,IBE=IBEND+.3,U="^",IBQUIT=0
"RTN","IBOCPDS",31,0)
 S IBINDX=$S(IBORDER="E":"APD",IBORDER="A":"APD3",1:"AP")
"RTN","IBOCPDS",32,0)
 F  S IBCDT=$O(^DGCR(399,IBINDX,IBCDT)) Q:IBCDT=""!(IBCDT>IBE)!IBQUIT  S IFN=0 D  S IBQUIT=$$STOP
"RTN","IBOCPDS",33,0)
 .F  S IFN=$O(^DGCR(399,IBINDX,IBCDT,IFN)) Q:'IFN  D FILE
"RTN","IBOCPDS",34,0)
 ;
"RTN","IBOCPDS",35,0)
 ; 5/28/04 - esg - MRA project - patch 155 - get MRA request data
"RTN","IBOCPDS",36,0)
 ;
"RTN","IBOCPDS",37,0)
 S IBCDT=IBBEG-.001,IBE=IBEND+.3
"RTN","IBOCPDS",38,0)
 F  S IBCDT=$O(^DGCR(399,"APM",IBCDT)) Q:'IBCDT!(IBCDT>IBE)!IBQUIT  D
"RTN","IBOCPDS",39,0)
 . S IBQUIT=$$STOP Q:IBQUIT
"RTN","IBOCPDS",40,0)
 . S IFN=0
"RTN","IBOCPDS",41,0)
 . F  S IFN=$O(^DGCR(399,"APM",IBCDT,IFN)) Q:'IFN  D FILEMRA
"RTN","IBOCPDS",42,0)
 . Q
"RTN","IBOCPDS",43,0)
 ;
"RTN","IBOCPDS",44,0)
 I $D(^TMP("IB",$J)),'IBQUIT D PRINT
"RTN","IBOCPDS",45,0)
 ;
"RTN","IBOCPDS",46,0)
EXIT ; - Clean up and quit.
"RTN","IBOCPDS",47,0)
 K ^TMP("IB",$J)
"RTN","IBOCPDS",48,0)
 ;***
"RTN","IBOCPDS",49,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPDS" D T1^%ZOSV ;stop rt clock
"RTN","IBOCPDS",50,0)
 I $D(ZTQUEUED) Q
"RTN","IBOCPDS",51,0)
 K IBE,IBBEG,IBBEGE,IBCANC,IBEND,IBENDE,IBCDT,IFN,IBRT,IBCLK,IBNCLK,IBCT
"RTN","IBOCPDS",52,0)
 K IBTD,IBNODE,IBPGN,IBLN,IBHDR,IBINDX,IBFLD,IBQUIT,IBORDER,IBI,X,Y
"RTN","IBOCPDS",53,0)
 K DTOUT,DUOUT,DIRUT,DIROUT,IBMRAUSR
"RTN","IBOCPDS",54,0)
 D ^%ZISC
"RTN","IBOCPDS",55,0)
 Q
"RTN","IBOCPDS",56,0)
 ;
"RTN","IBOCPDS",57,0)
FILE ; - Save the data in sorted order in a temporary file.
"RTN","IBOCPDS",58,0)
 S IBRT=$P($G(^DGCR(399,IFN,0)),U,7) I 'IBRT Q
"RTN","IBOCPDS",59,0)
 S IBCLK=$P($G(^VA(200,+$P($G(^DGCR(399,IFN,"S")),U,$S(IBORDER="E":2,IBORDER="A":11,IBORDER="P":13,1:0)),0)),U) I IBCLK="" Q
"RTN","IBOCPDS",60,0)
 S IBTD=$P($G(^DGCR(399,IFN,"U1")),U,1)-$P($G(^DGCR(399,IFN,"U1")),U,2)
"RTN","IBOCPDS",61,0)
 S IBCANC=($P(^DGCR(399,IFN,0),U,13)=7)
"RTN","IBOCPDS",62,0)
 S IBNODE=$G(^TMP("IB",$J)),$P(^($J),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",63,0)
 S IBNODE=$G(^TMP("IB",$J,IBCLK)),$P(^(IBCLK),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",64,0)
 S IBNODE=$G(^TMP("IB",$J,IBCLK,IBRT)),$P(^(IBRT),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",65,0)
 S IBNODE=$G(^TMP("IB",$J,"~~")),$P(^("~~"),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",66,0)
 S IBNODE=$G(^TMP("IB",$J,"~~",IBRT)),$P(^(IBRT),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",67,0)
 ;
"RTN","IBOCPDS",68,0)
 ; 7/26/04 - ESG - MRA Project - Capture division data for MRA authorizer user
"RTN","IBOCPDS",69,0)
 I IBCLK["AUTHORIZER,IB MRA" D
"RTN","IBOCPDS",70,0)
 . N DIV
"RTN","IBOCPDS",71,0)
 . S DIV=+$P($G(^DGCR(399,IFN,0)),U,22)    ; division pointer
"RTN","IBOCPDS",72,0)
 . S DIV=$P($G(^DG(40.8,DIV,0)),U,1)       ; division name
"RTN","IBOCPDS",73,0)
 . I DIV="" S DIV="~UNKNOWN"
"RTN","IBOCPDS",74,0)
 . S IBNODE=$G(IBMRAUSR(IBCLK,IBRT,DIV))
"RTN","IBOCPDS",75,0)
 . S $P(IBMRAUSR(IBCLK,IBRT,DIV),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",76,0)
 . Q
"RTN","IBOCPDS",77,0)
 Q
"RTN","IBOCPDS",78,0)
 ;
"RTN","IBOCPDS",79,0)
FILEMRA ; Capture and file MRA data into the scratch global
"RTN","IBOCPDS",80,0)
 ; 9/9/03 - ESG - MRA Project
"RTN","IBOCPDS",81,0)
 NEW IBRT,IBTD,MRAUSR,IBNODE
"RTN","IBOCPDS",82,0)
 S IBRT=$P($G(^DGCR(399,IFN,0)),U,7) I 'IBRT G FMX
"RTN","IBOCPDS",83,0)
 S IBTD=$P($G(^DGCR(399,IFN,"U1")),U,1)-$P($G(^DGCR(399,IFN,"U1")),U,2)
"RTN","IBOCPDS",84,0)
 S MRAUSR=+$P($G(^DGCR(399,IFN,"S")),U,8)
"RTN","IBOCPDS",85,0)
 I 'MRAUSR G FMX
"RTN","IBOCPDS",86,0)
 S MRAUSR=$P($G(^VA(200,MRAUSR,0)),U,1)
"RTN","IBOCPDS",87,0)
 I MRAUSR="" G FMX
"RTN","IBOCPDS",88,0)
 S IBNODE=$G(^TMP("IB",$J)),$P(^($J),U,5,6)=($P(IBNODE,U,5)+1)_U_($P(IBNODE,U,6)+IBTD)
"RTN","IBOCPDS",89,0)
 S IBNODE=$G(^TMP("IB",$J,MRAUSR)),$P(^(MRAUSR),U,5,6)=($P(IBNODE,U,5)+1)_U_($P(IBNODE,U,6)+IBTD)
"RTN","IBOCPDS",90,0)
 S IBNODE=$G(^TMP("IB",$J,MRAUSR,IBRT)),$P(^(IBRT),U,5,6)=($P(IBNODE,U,5)+1)_U_($P(IBNODE,U,6)+IBTD)
"RTN","IBOCPDS",91,0)
 S IBNODE=$G(^TMP("IB",$J,"~~")),$P(^("~~"),U,5,6)=($P(IBNODE,U,5)+1)_U_($P(IBNODE,U,6)+IBTD)
"RTN","IBOCPDS",92,0)
 S IBNODE=$G(^TMP("IB",$J,"~~",IBRT)),$P(^(IBRT),U,5,6)=($P(IBNODE,U,5)+1)_U_($P(IBNODE,U,6)+IBTD)
"RTN","IBOCPDS",93,0)
 ;
"RTN","IBOCPDS",94,0)
FMX ;
"RTN","IBOCPDS",95,0)
 Q
"RTN","IBOCPDS",96,0)
 ;
"RTN","IBOCPDS",97,0)
 ;
"RTN","IBOCPDS",98,0)
PRINT ; - Print the report from the temp sort file to the appropriate device.
"RTN","IBOCPDS",99,0)
 N IBT,IBH1,L1,L2,T1,T2,T3,T4,T5,T6
"RTN","IBOCPDS",100,0)
 S IBCLK="",IBPGN=0
"RTN","IBOCPDS",101,0)
 S L1=7        ; length of count fields
"RTN","IBOCPDS",102,0)
 S L2=13       ; length of dollar amount fields
"RTN","IBOCPDS",103,0)
 S T1=50       ; tab stop 1 - total count
"RTN","IBOCPDS",104,0)
 S T2=59       ; tab stop 2 - total dollar amount
"RTN","IBOCPDS",105,0)
 S T3=78       ; tab stop 3 - cancelled count
"RTN","IBOCPDS",106,0)
 S T4=87       ; tab stop 4 - cancelled dollar amount
"RTN","IBOCPDS",107,0)
 S T5=106      ; tab stop 5 - MRA request count
"RTN","IBOCPDS",108,0)
 S T6=115      ; tab stop 6 - MRA request dollar amount
"RTN","IBOCPDS",109,0)
 D HDR F  S IBCLK=$O(^TMP("IB",$J,IBCLK)) Q:IBCLK=""!(IBQUIT)  D LINE
"RTN","IBOCPDS",110,0)
 S IBT=$G(^TMP("IB",$J)) I IBQUIT Q
"RTN","IBOCPDS",111,0)
 W !!,"TOTAL:",?T1,$J(+$P(IBT,U,1),L1),?T2,$J($P(IBT,U,2),L2,2),?T3,$J(+$P(IBT,U,3),L1),?T4,$J($P(IBT,U,4),L2,2),?T5,$J(+$P(IBT,U,5),L1),?T6,$J($P(IBT,U,6),L2,2),!
"RTN","IBOCPDS",112,0)
 D NOTE^IBOCPD,PAUSE
"RTN","IBOCPDS",113,0)
 Q
"RTN","IBOCPDS",114,0)
 ;
"RTN","IBOCPDS",115,0)
LINE ; - Print all data for a particular clerk.
"RTN","IBOCPDS",116,0)
 N IBT,DIV
"RTN","IBOCPDS",117,0)
 S IBLN=IBLN+1 I IBNCLK S IBCT=$G(IBCT)+1
"RTN","IBOCPDS",118,0)
 I IBCLK'="~~" W !,$S(IBNCLK:"CLERK #"_IBCT,1:$E(IBCLK,1,25))
"RTN","IBOCPDS",119,0)
 E  W !,"RATE TYPE TOTALS"
"RTN","IBOCPDS",120,0)
 S IBRT="" F  S IBRT=$O(^TMP("IB",$J,IBCLK,IBRT)) Q:IBRT=""!(IBQUIT)  D  Q:IBQUIT  S IBLN=IBLN+1 I IBLN>(IOSL-7) D PAUSE,HDR:'IBQUIT
"RTN","IBOCPDS",121,0)
 . S IBT=$G(^TMP("IB",$J,IBCLK,IBRT))
"RTN","IBOCPDS",122,0)
 . W ?30,$E($P(^DGCR(399.3,IBRT,0),U,1),1,20),?T1,$J(+$P(IBT,U,1),L1),?T2,$J($P(IBT,U,2),L2,2),?T3,$J(+$P(IBT,U,3),L1),?T4,$J($P(IBT,U,4),L2,2)
"RTN","IBOCPDS",123,0)
 . W ?T5,$J(+$P(IBT,U,5),L1),?T6,$J($P(IBT,U,6),L2,2),!
"RTN","IBOCPDS",124,0)
 . ; divisional display
"RTN","IBOCPDS",125,0)
 . I '$D(IBMRAUSR(IBCLK,IBRT)) Q
"RTN","IBOCPDS",126,0)
 . W ?T1,"  -----",?T2,"  -----------",?T3,"  -----",?T4,"  -----------",?T5,"  -----",?T6,"  -----------"
"RTN","IBOCPDS",127,0)
 . S DIV=""
"RTN","IBOCPDS",128,0)
 . F  S DIV=$O(IBMRAUSR(IBCLK,IBRT,DIV)) Q:DIV=""!IBQUIT  D
"RTN","IBOCPDS",129,0)
 .. S IBLN=IBLN+1 I IBLN>(IOSL-7) D PAUSE,HDR:'IBQUIT
"RTN","IBOCPDS",130,0)
 .. I IBQUIT Q
"RTN","IBOCPDS",131,0)
 .. S IBT=$G(IBMRAUSR(IBCLK,IBRT,DIV))
"RTN","IBOCPDS",132,0)
 .. W !?7,DIV,?T1,$J(+$P(IBT,U,1),L1),?T2,$J($P(IBT,U,2),L2,2),?T3,$J(+$P(IBT,U,3),L1),?T4,$J($P(IBT,U,4),L2,2),?T5,$J(+$P(IBT,U,5),L1),?T6,$J($P(IBT,U,6),L2,2)
"RTN","IBOCPDS",133,0)
 .. Q
"RTN","IBOCPDS",134,0)
 . I IBQUIT Q
"RTN","IBOCPDS",135,0)
 . W !
"RTN","IBOCPDS",136,0)
 . Q
"RTN","IBOCPDS",137,0)
 ;
"RTN","IBOCPDS",138,0)
 I IBQUIT Q
"RTN","IBOCPDS",139,0)
 W ?T1,"  -----",?T2,"  -----------",?T3,"  -----",?T4,"  -----------"
"RTN","IBOCPDS",140,0)
 W ?T5,"  -----",?T6,"  -----------"
"RTN","IBOCPDS",141,0)
 S IBT=$G(^TMP("IB",$J,IBCLK))
"RTN","IBOCPDS",142,0)
 W !,?30,"SUBTOTAL:",?T1,$J(+$P(IBT,U,1),L1),?T2,$J($P(IBT,U,2),L2,2),?T3,$J(+$P(IBT,U,3),L1),?T4,$J($P(IBT,U,4),L2,2)
"RTN","IBOCPDS",143,0)
 W ?T5,$J(+$P(IBT,U,5),L1),?T6,$J($P(IBT,U,6),L2,2),!
"RTN","IBOCPDS",144,0)
 S IBLN=IBLN+2
"RTN","IBOCPDS",145,0)
 Q
"RTN","IBOCPDS",146,0)
 ;
"RTN","IBOCPDS",147,0)
HDR ; - Print the report header.
"RTN","IBOCPDS",148,0)
 N IBH1,IBH2
"RTN","IBOCPDS",149,0)
 S IBQUIT=$$STOP Q:IBQUIT  S IBPGN=IBPGN+1,IBLN=7
"RTN","IBOCPDS",150,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S IBCDT=$P(Y,"@",1)_"  "_$P(Y,"@",2)
"RTN","IBOCPDS",151,0)
 I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
"RTN","IBOCPDS",152,0)
 S IBH1=$S(IBORDER="E":"ENTERED",IBORDER="A":"AUTHORIZED",1:"FIRST PRINTED")
"RTN","IBOCPDS",153,0)
 W "CLERK PRODUCTIVITY SUMMARY FOR BILLS ",IBH1," ",IBBEGE," - ",IBENDE I IOM<85 W !
"RTN","IBOCPDS",154,0)
 S IBH2=$S(IBORDER'="P":IBH1,1:"PRINTED") S:IBORDER="E" IBH1="ENTERED/EDITED"
"RTN","IBOCPDS",155,0)
 W ?(IOM-30),IBCDT,?(IOM-8),"PAGE ",IBPGN,!
"RTN","IBOCPDS",156,0)
 W !,?T1,"---",$S(IBORDER'="A":"-",1:""),"TOTAL ",IBH2,"---",$S(IBORDER'="A":"--",1:""),?T3,"-",$S(IBORDER'="A":"-",1:""),IBH2," CANCELLED-",$S(IBORDER'="A":"--",1:"")
"RTN","IBOCPDS",157,0)
 W ?T5,"-----MRA REQUESTS-----"
"RTN","IBOCPDS",158,0)
 W !,IBH1," BY",?30,"RATE TYPE",?T1,$J("COUNT",L1),?T2,$J("AMOUNT",L2),?T3,$J("COUNT",L1),?T4,$J("AMOUNT",L2)
"RTN","IBOCPDS",159,0)
 W ?T5,$J("COUNT",L1),?T6,$J("AMOUNT",L2),!
"RTN","IBOCPDS",160,0)
 S IBI="",$P(IBI,"-",IOM+1)="" W IBI,!
"RTN","IBOCPDS",161,0)
 Q
"RTN","IBOCPDS",162,0)
 ;
"RTN","IBOCPDS",163,0)
PAUSE ; - Pause at end of screen if beeing displayed on a terminal.
"RTN","IBOCPDS",164,0)
 Q:$E(IOST,1,2)'["C-"
"RTN","IBOCPDS",165,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBOCPDS",166,0)
 I $D(DUOUT)!($D(DIRUT)) S IBQUIT=1
"RTN","IBOCPDS",167,0)
 Q
"RTN","IBOCPDS",168,0)
 ;
"RTN","IBOCPDS",169,0)
STOP() ; - Determine if user has requested the queued report to stop.
"RTN","IBOCPDS",170,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBOCPDS",171,0)
 Q +$G(ZTSTOP)
"RTN","IBOCPDS",172,0)
 ;
"RTN","IBOCPDS",173,0)
HLP ; - "Do you want to print..." prompt.
"RTN","IBOCPDS",174,0)
 W !!,"Select: '<CR>' to print the summary with the clerks' actual names"
"RTN","IBOCPDS",175,0)
 W !?11,"'Y' to print the summary with an identifier ('CLERK #xxx')"
"RTN","IBOCPDS",176,0)
 W !?15,"in place of the clerks' names",!?11,"'^' to quit"
"RTN","IBOCPDS",177,0)
 Q
"RTN","IBOSTUS")
0^46^B23718386
"RTN","IBOSTUS",1,0)
IBOSTUS ;ALB/SGD - MCCR BILL STATUS REPORT ;25 MAY 88 14:19
"RTN","IBOSTUS",2,0)
 ;;2.0;INTEGRATED BILLING;**118,128,137,161,155**;21-MAR-94
"RTN","IBOSTUS",3,0)
 ;
"RTN","IBOSTUS",4,0)
 ;MAP TO DGCROST
"RTN","IBOSTUS",5,0)
 ;
"RTN","IBOSTUS",6,0)
EN I '$D(DT) D DT^DICRW
"RTN","IBOSTUS",7,0)
 ;
"RTN","IBOSTUS",8,0)
 S IBNOEOB=0  ;init.
"RTN","IBOSTUS",9,0)
 ;
"RTN","IBOSTUS",10,0)
 ; - Choose bill status, if necessary.
"RTN","IBOSTUS",11,0)
 S DIR(0)="Y",DIR("A")="Do you want to print the status of ALL bills"
"RTN","IBOSTUS",12,0)
 S DIR("B")="YES",DIR("?")="Choose (Y)es or (N)o" W !
"RTN","IBOSTUS",13,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G Q
"RTN","IBOSTUS",14,0)
 I Y S IBBST="ALL" G SORT
"RTN","IBOSTUS",15,0)
 ;
"RTN","IBOSTUS",16,0)
 S DIR(0)="399,.13AO^^I X[""*""!(X=5) W !,*7,""THIS STATUS IS NOT USED"" K X",DIR("A")="CHOOSE BILL STATUS: " D
"RTN","IBOSTUS",17,0)
 . N DA
"RTN","IBOSTUS",18,0)
 . W ! D ^DIR W ! K DIR
"RTN","IBOSTUS",19,0)
 I $D(DIRUT) G Q
"RTN","IBOSTUS",20,0)
 S IBBST=$E(Y(0)),IBHD=Y(0)
"RTN","IBOSTUS",21,0)
 ;
"RTN","IBOSTUS",22,0)
MRA ; If user chose MRA Request status, check if user wants to only print Bills with No MRA Received
"RTN","IBOSTUS",23,0)
 I IBBST'="R" G SORT
"RTN","IBOSTUS",24,0)
 S DIR(0)="Y",DIR("A")="Print ONLY Bills with No MRA Received and No CSA Rejection messages"
"RTN","IBOSTUS",25,0)
 S DIR("B")="No",DIR("?")="Enter (Y)es or (N)o"
"RTN","IBOSTUS",26,0)
 S DIR("??")="^D HELP4^IBOSTUS"
"RTN","IBOSTUS",27,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G Q
"RTN","IBOSTUS",28,0)
 S IBNOEOB=Y
"RTN","IBOSTUS",29,0)
 ;
"RTN","IBOSTUS",30,0)
SORT ; - Choose the date type to sort on.
"RTN","IBOSTUS",31,0)
 S DIR(0)="S^1:EVENT DATE;2:BILL DATE;3:ENTERED DATE;4:MRA REQUEST DATE"
"RTN","IBOSTUS",32,0)
 S DIR("A")="SORT BY",DIR("B")=1,DIR("?")="^D HELP2^IBOSTUS"
"RTN","IBOSTUS",33,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G Q
"RTN","IBOSTUS",34,0)
 S IBDTP=$S(Y=1:"Event",Y=2:"Bill",Y=3:"Entered",Y=4:"MRA Request",1:"") Q:IBDTP=""
"RTN","IBOSTUS",35,0)
DATE W ! S %DT="AEPX",%DT("A")="Start with "_IBDTP_" DATE: ",%DT(0)=-DT
"RTN","IBOSTUS",36,0)
 D ^%DT G Q:Y<0 S IBBEG=Y
"RTN","IBOSTUS",37,0)
DATE1 S %DT="EPX" W !,"Go to "_IBDTP_" DATE: TODAY// " R X:DTIME
"RTN","IBOSTUS",38,0)
 S:X=" " X=IBBEG G Q:(X["^") S:X="" X="TODAY" D ^%DT I Y<0 G DATE1
"RTN","IBOSTUS",39,0)
 S IBEND=Y I IBEND<IBBEG W *7," ??",!,"ENDING DATE must follow BEGINNING DATE." G DATE1
"RTN","IBOSTUS",40,0)
 I IBEND>DT W *7," ??" G DATE1
"RTN","IBOSTUS",41,0)
 ;
"RTN","IBOSTUS",42,0)
PS ; - Print summary, if necessary.
"RTN","IBOSTUS",43,0)
 S DIR(0)="Y",DIR("A")="Do you want to print the summary ONLY"
"RTN","IBOSTUS",44,0)
 S DIR("B")="NO",DIR("?")="^D HELP3^IBOSTUS" W !
"RTN","IBOSTUS",45,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G Q
"RTN","IBOSTUS",46,0)
 S IBSUM=+Y
"RTN","IBOSTUS",47,0)
 ;
"RTN","IBOSTUS",48,0)
 ; If the user wants both the detail and summary reports AND
"RTN","IBOSTUS",49,0)
 ; if ClaimsManager is currently running, then ask the user if he
"RTN","IBOSTUS",50,0)
 ; or she wishes to display the Comments from the ClaimsManager
"RTN","IBOSTUS",51,0)
 ; file (#351.9).
"RTN","IBOSTUS",52,0)
 ;
"RTN","IBOSTUS",53,0)
 S IBCICOMM=0
"RTN","IBOSTUS",54,0)
 I 'IBSUM,$$CK0^IBCIUT1() D  I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G Q
"RTN","IBOSTUS",55,0)
 . W !
"RTN","IBOSTUS",56,0)
 . S DIR(0)="Y"
"RTN","IBOSTUS",57,0)
 . S DIR("A")="Do you want to see ClaimsManager comments associated with these bills"
"RTN","IBOSTUS",58,0)
 . S DIR("B")="NO"
"RTN","IBOSTUS",59,0)
 . S DIR("?",1)="  Enter YES if you would like to see the comments which are stored in the"
"RTN","IBOSTUS",60,0)
 . S DIR("?",2)="    ClaimsManager file (#351.9) for each bill on this report."
"RTN","IBOSTUS",61,0)
 . S DIR("?")="  Enter NO if you do not want to see these comments."
"RTN","IBOSTUS",62,0)
 . D ^DIR K DIR
"RTN","IBOSTUS",63,0)
 . S IBCICOMM=+Y
"RTN","IBOSTUS",64,0)
 . Q
"RTN","IBOSTUS",65,0)
 ;
"RTN","IBOSTUS",66,0)
 W !!,*7,"*** Margin width of this output is ",$S(IBSUM:80,1:132)," ***"
"RTN","IBOSTUS",67,0)
 S %ZIS="QM" D ^%ZIS G:POP Q
"RTN","IBOSTUS",68,0)
 I $D(IO("Q")) K IO("Q") D  G Q
"RTN","IBOSTUS",69,0)
 .S ZTRTN="DQ^IBOSTUS",ZTDESC="IB - Bill Status Report",ZTSAVE("IB*")=""
"RTN","IBOSTUS",70,0)
 .D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBOSTUS",71,0)
 ;
"RTN","IBOSTUS",72,0)
 U IO
"RTN","IBOSTUS",73,0)
 ;
"RTN","IBOSTUS",74,0)
DQ ; - Tasked entry point.
"RTN","IBOSTUS",75,0)
 D EN^IBOSTUS1
"RTN","IBOSTUS",76,0)
 ;
"RTN","IBOSTUS",77,0)
Q D ^%ZISC
"RTN","IBOSTUS",78,0)
 K %,I,J,X,X1,X2,Y,Z,IBIFN,%DT,IBAPP,POP,IBPAGE,DGPGM,DGVAR,IBNEX,IBBEG
"RTN","IBOSTUS",79,0)
 K IBF,IBEND,IBHD,IBL,IBBST,IBBS,IBBSBY,IBBSDT,IB0,IBS,IBRUN,IBSUM,IBU1
"RTN","IBOSTUS",80,0)
 K IBDTP,IBBY,VAERR,DIRUT,DUOUT,DTOUT,DIROUT,IBCICOMM,IBNOEOB
"RTN","IBOSTUS",81,0)
 Q
"RTN","IBOSTUS",82,0)
 ;
"RTN","IBOSTUS",83,0)
HELP2 ; - Help for Sort By prompt.
"RTN","IBOSTUS",84,0)
 W !!,"   EVENT DATE is the date beginning the bill's episode of care"
"RTN","IBOSTUS",85,0)
 W !!,"   BILL DATE is the date the bill was initially printed"
"RTN","IBOSTUS",86,0)
 W !!,"   ENTERED DATE is the date the bill was first entered"
"RTN","IBOSTUS",87,0)
 W !!,"   MRA REQUEST DATE is the date the MRA request bill was sent to Medicare"
"RTN","IBOSTUS",88,0)
 Q
"RTN","IBOSTUS",89,0)
 ;
"RTN","IBOSTUS",90,0)
HELP3 ; - Help for Summary Only prompt.
"RTN","IBOSTUS",91,0)
 W !!,"Select (Y)ES to just print the bill status summary, or (N)O"
"RTN","IBOSTUS",92,0)
 W !," to print the BOTH the detail and summary reports."
"RTN","IBOSTUS",93,0)
 Q
"RTN","IBOSTUS",94,0)
 ;
"RTN","IBOSTUS",95,0)
HELP4 ; Help for No MRA on file prompt.
"RTN","IBOSTUS",96,0)
 W !,"Enter YES if you would like to see bills that are in a Request MRA status"
"RTN","IBOSTUS",97,0)
 W !,"with no MRAs and no CSA rejection messages on file."
"RTN","IBOSTUS",98,0)
 W !!,"Enter NO if you would like to see ALL bills that are in a Request MRA status."
"RTN","IBOSTUS",99,0)
 Q
"RTN","IBOSTUS",100,0)
 ;
"RTN","IBOSTUS",101,0)
SUM ; - Print summary.
"RTN","IBOSTUS",102,0)
 S:'IBSUM IBSUM=1 D HEAD^IBOSTUS1
"RTN","IBOSTUS",103,0)
 S IBST1="RATE TYPE  : ",IBST2="BILL STATUS: "
"RTN","IBOSTUS",104,0)
 F I="IBST1","IBST2" N IBTOT D
"RTN","IBOSTUS",105,0)
 .S IBCAT="" F  S IBCAT=$O(@I@(IBCAT)) Q:IBCAT=""  D
"RTN","IBOSTUS",106,0)
 ..I IBCRT,($Y>(IOSL-2)) D HEAD^IBOSTUS1
"RTN","IBOSTUS",107,0)
 ..S X=@I@(IBCAT,"$"),X2="2$" D COMMA^%DTC
"RTN","IBOSTUS",108,0)
 ..W !,IBCAT,?18,".................... ",?42,$J(X,15),?60,$J(@I@(IBCAT,"C"),6),?67," BILLS"
"RTN","IBOSTUS",109,0)
 ..S IBTOT("C")=$G(IBTOT("C"))+@I@(IBCAT,"C")
"RTN","IBOSTUS",110,0)
 ..S IBTOT("$")=$G(IBTOT("$"))+@I@(IBCAT,"$")
"RTN","IBOSTUS",111,0)
 .W !,?40,"-----------------",?60,"-------------"
"RTN","IBOSTUS",112,0)
 .S X=$G(IBTOT("$")),X2="2$" D COMMA^%DTC
"RTN","IBOSTUS",113,0)
 .W !?42,$J(X,15),?60,$J($G(IBTOT("C")),6),?67," BILLS",!
"RTN","IBOSTUS",114,0)
 ;
"RTN","IBOSTUS",115,0)
 Q
"RTN","IBOSTUS1")
0^47^B28202831
"RTN","IBOSTUS1",1,0)
IBOSTUS1 ;ALB/SGD-MCCR BILL STATUS REPORT ;25 MAY 88 14:19
"RTN","IBOSTUS1",2,0)
 ;;2.0;INTEGRATED BILLING;**31,118,128,153,137,161,183,155**;21-MAR-94
"RTN","IBOSTUS1",3,0)
 ;
"RTN","IBOSTUS1",4,0)
 ;MAP TO DGCROST1
"RTN","IBOSTUS1",5,0)
 ;
"RTN","IBOSTUS1",6,0)
EN ; - Entry point from IBOSTUS.
"RTN","IBOSTUS1",7,0)
 N IBSUB,IBHDR,IBST1,IBST2,IBCAT,IBAMT,IBBEF,IBCRT,IBQUIT,IBMTCT,DFN,REJFLG
"RTN","IBOSTUS1",8,0)
 S IBBEF="",IBQUIT=0,IBCRT=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","IBOSTUS1",9,0)
 I IBDTP="Entered" S IBSUB="APD",IBHDR=1
"RTN","IBOSTUS1",10,0)
 I IBDTP="Bill" S IBSUB="AP",IBHDR=1
"RTN","IBOSTUS1",11,0)
 I IBDTP="Event" S IBSUB="D",IBHDR=0
"RTN","IBOSTUS1",12,0)
 I IBDTP="MRA Request" S IBSUB="APM",IBHDR=0
"RTN","IBOSTUS1",13,0)
 I 'IBSUM D HEAD
"RTN","IBOSTUS1",14,0)
 ;
"RTN","IBOSTUS1",15,0)
PROC ; - Get data for report(s).
"RTN","IBOSTUS1",16,0)
 S X1=IBBEG\1,X2=-1 D C^%DTC S IBNEX=X_.2359,X=132 X ^%ZOSF("RM")
"RTN","IBOSTUS1",17,0)
 F  S IBNEX=$O(^DGCR(399,IBSUB,IBNEX)) Q:'IBNEX!(IBNEX>(IBEND\1_.2359))!(IBQUIT)  D  Q:IBQUIT
"RTN","IBOSTUS1",18,0)
 .I $Y>$S($D(IOSL):(IOSL-$S(IBCRT:4,1:9)),1:20) D HEAD Q:IBQUIT
"RTN","IBOSTUS1",19,0)
 .I IBHDR,'IBSUM D SUBHDR
"RTN","IBOSTUS1",20,0)
 .S IBIFN="" F J=0:0 S IBIFN=$O(^DGCR(399,IBSUB,IBNEX,IBIFN)) Q:'IBIFN!IBQUIT  D SET S IBBEF=IBNEX
"RTN","IBOSTUS1",21,0)
 I 'IBQUIT D
"RTN","IBOSTUS1",22,0)
 .I '$D(IBF) W !!,?10,"*** No matches found ***"
"RTN","IBOSTUS1",23,0)
 .E  D SUM^IBOSTUS
"RTN","IBOSTUS1",24,0)
 ;
"RTN","IBOSTUS1",25,0)
Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBOSTUS1",26,0)
 Q
"RTN","IBOSTUS1",27,0)
 ;
"RTN","IBOSTUS1",28,0)
SET ; This section is called for a single bill - IBIFN
"RTN","IBOSTUS1",29,0)
 S IBS=$G(^DGCR(399,IBIFN,"S")),IBAPP=1
"RTN","IBOSTUS1",30,0)
 I $P(IBS,U,17)'="" S IBBS="  CANCELLED",IBBSDT=$P(IBS,U,17),IBBSBY=$P(IBS,U,18) D:IBBST="C" PRINT G ALL
"RTN","IBOSTUS1",31,0)
 I $P(IBS,U,14)'="" S IBBS="  PRNT/TXMT",IBBSDT=$P(IBS,U,12),IBBSBY=$P(IBS,U,13) D:IBBST="P" PRINT G ALL
"RTN","IBOSTUS1",32,0)
 I $P(IBS,U,10)'="" S IBBS="* AUTHORIZED",IBAPP=$P(IBS,U,9),IBBSDT=$P(IBS,U,10),IBBSBY=$P(IBS,U,11) D:IBBST="A" PRINT G ALL
"RTN","IBOSTUS1",33,0)
 I $P(IBS,U,7)'="" S IBBS="* REQUEST MRA",IBBSDT=$P(IBS,U,7),IBBSBY=$P(IBS,U,8) D:IBBST="R"  G ALL
"RTN","IBOSTUS1",34,0)
 . ; if user answered No to 'print Bills with No MRA Received and No Rejection messages', print report as usual
"RTN","IBOSTUS1",35,0)
 . I 'IBNOEOB D PRINT Q
"RTN","IBOSTUS1",36,0)
 . ; if user answered Yes (IBNOEOB=1), check two things before printing:
"RTN","IBOSTUS1",37,0)
 . ;     1) if MRA on file, don't print
"RTN","IBOSTUS1",38,0)
 . I $$CHK^IBCEMU1(IBIFN) Q
"RTN","IBOSTUS1",39,0)
 . ;     2) if the most recent transmission for this claim was rejected, don't print
"RTN","IBOSTUS1",40,0)
 . D TXSTS^IBCEMU2(IBIFN,,.REJFLG)
"RTN","IBOSTUS1",41,0)
 . I REJFLG Q
"RTN","IBOSTUS1",42,0)
 . ;
"RTN","IBOSTUS1",43,0)
 . ; otherwise, print bill
"RTN","IBOSTUS1",44,0)
 . D PRINT
"RTN","IBOSTUS1",45,0)
 ;
"RTN","IBOSTUS1",46,0)
 S IBBS="* ENTERED",IBBSDT=$P(IBS,U),IBBSBY=$P(IBS,U,2) D:IBBST="E" PRINT
"RTN","IBOSTUS1",47,0)
ALL Q:IBQUIT  I IBBST="ALL" D PRINT
"RTN","IBOSTUS1",48,0)
 Q
"RTN","IBOSTUS1",49,0)
 ;
"RTN","IBOSTUS1",50,0)
PRINT ; - Print detail report, if necessary.
"RTN","IBOSTUS1",51,0)
 NEW LINE
"RTN","IBOSTUS1",52,0)
 I $Y>$S($D(IOSL):(IOSL-$S(IBCRT:4,1:6)),1:6) D HEAD Q:IBQUIT  D SUBHDR:(IBBEF=IBNEX)&IBHDR
"RTN","IBOSTUS1",53,0)
 S IBF=1,IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBOSTUS1",54,0)
 S IBCAT=$S($D(^DGCR(399.3,+$P(IB0,U,7),0)):$P(^(0),U,4),1:"UNSPECIFIED")_$S($P(IB0,U,5)>2:"-OPT",1:"-INPT")
"RTN","IBOSTUS1",55,0)
 S IBU1=$G(^DGCR(399,IBIFN,"U1")),IBAMT=$S(IBU1="":0,$P(IBU1,U,2)]"":$P(IBU1,U)-$P(IBU1,U,2),1:$P(IBU1,U))
"RTN","IBOSTUS1",56,0)
 I IBSUM D ADD Q  ; Printing summary ONLY.
"RTN","IBOSTUS1",57,0)
 ;
"RTN","IBOSTUS1",58,0)
 S DFN=$P(IB0,U,2) D PID^VADPT6 W !,$P(IB0,U),?10,$E($P(^DPT($P(IB0,U,2),0),U),1,20),?31,VA("BID"),?39,$E($P(IB0,U,3),4,5),"/",$E($P(IB0,U,3),6,7),"/",$E($P(IB0,U,3),2,3)
"RTN","IBOSTUS1",59,0)
 S IBBY=$P(IBS,U,2) W:IBBY ?50,$E($S($D(^VA(200,IBBY,0)):$P(^(0),U,2),1:"UNKN"),1,4) W ?57,IBCAT
"RTN","IBOSTUS1",60,0)
 ;
"RTN","IBOSTUS1",61,0)
 ; - MT status as of event date.
"RTN","IBOSTUS1",62,0)
 S IBMTCT=$P($$LST^DGMTU(DFN,$P(IB0,U,3)),U,4)
"RTN","IBOSTUS1",63,0)
 S IBMTCT=$S(IBMTCT="C":"YES",IBMTCT="P":"PEN",IBMTCT="R":"REQ",IBMTCT="G":"GMT",1:"NO")
"RTN","IBOSTUS1",64,0)
 W ?72,IBMTCT
"RTN","IBOSTUS1",65,0)
 ;
"RTN","IBOSTUS1",66,0)
 S X=IBAMT,X2="2$" D COMMA^%DTC W ?77,$J(X,10)
"RTN","IBOSTUS1",67,0)
 W ?90,IBBS,$S('IBAPP:"/DISAPP",1:"")," ",$E(IBBSDT,4,5),"/",$E(IBBSDT,6,7),"/",$E(IBBSDT,2,3)," (",$S($D(^VA(200,+IBBSBY,0)):$P(^(0),U,2),1:"UNKN USER"),"/",IBBSBY,")" K VA("BID"),VA("PID")
"RTN","IBOSTUS1",68,0)
 ;
"RTN","IBOSTUS1",69,0)
 ; If the user chose to print the ClaimsManager comments, then show
"RTN","IBOSTUS1",70,0)
 ; them all here.  Also do the appropriate $Y checks for the next page.
"RTN","IBOSTUS1",71,0)
 ;
"RTN","IBOSTUS1",72,0)
 I 'IBCICOMM G SKPCMM                     ; user doesn't want comments
"RTN","IBOSTUS1",73,0)
 I '$D(^IBA(351.9,IBIFN,2)) G SKPCMM      ; no comments exist
"RTN","IBOSTUS1",74,0)
 ;
"RTN","IBOSTUS1",75,0)
 W !!?8,$$CMTINFO^IBCIUT5(IBIFN)
"RTN","IBOSTUS1",76,0)
 S LINE=0
"RTN","IBOSTUS1",77,0)
 F  S LINE=$O(^IBA(351.9,IBIFN,2,LINE)) Q:'LINE  D  Q:IBQUIT
"RTN","IBOSTUS1",78,0)
 . I $Y>(IOSL-$S(IBCRT:4,1:6)) D HEAD Q:IBQUIT
"RTN","IBOSTUS1",79,0)
 . W !?10,$G(^IBA(351.9,IBIFN,2,LINE,0))
"RTN","IBOSTUS1",80,0)
 . Q
"RTN","IBOSTUS1",81,0)
 Q:IBQUIT
"RTN","IBOSTUS1",82,0)
 W !
"RTN","IBOSTUS1",83,0)
 ;
"RTN","IBOSTUS1",84,0)
SKPCMM ; skip to here if we're not printing ClaimsManager comments
"RTN","IBOSTUS1",85,0)
 ;
"RTN","IBOSTUS1",86,0)
 D ADD
"RTN","IBOSTUS1",87,0)
 Q
"RTN","IBOSTUS1",88,0)
 ;
"RTN","IBOSTUS1",89,0)
HEAD ; - Print report header.
"RTN","IBOSTUS1",90,0)
 I $G(IBPAGE)>0,IBCRT S DIR(0)="E" D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBOSTUS1",91,0)
 S IBPAGE=$G(IBPAGE)+1,$P(IBL,"=",IOM)="",Y=IBBEG X ^DD("DD")
"RTN","IBOSTUS1",92,0)
 W @IOF,!,"MCCR Bill Status ",$S(IBSUM:"Statistics",1:"Report")," for ",$S(IBBEG'=IBEND:"period covering ",1:"")_Y
"RTN","IBOSTUS1",93,0)
 I IBBEG<IBEND S Y=IBEND X ^DD("DD") W " thru "_Y
"RTN","IBOSTUS1",94,0)
 I '$D(IBRUN) D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S IBRUN=Y
"RTN","IBOSTUS1",95,0)
 I 'IBSUM W ?100,IBRUN,?123,"Page ",$J(IBPAGE,3)
"RTN","IBOSTUS1",96,0)
 W ! I $D(IBHD) W "Bill Status: ",IBHD,"     "
"RTN","IBOSTUS1",97,0)
 I 'IBSUM W:IBBST'="C"&(IBBST'="P") "* Denotes that the bill status is not Printed or Cancelled" W:IBCICOMM ?106,"ClaimsManager Comments ON"
"RTN","IBOSTUS1",98,0)
 E  W "Run Date: ",IBRUN
"RTN","IBOSTUS1",99,0)
 ; if user answered Yes to 'No MRA Received and No Rejection messages' question, print this line in header
"RTN","IBOSTUS1",100,0)
 I IBNOEOB W !,"**** Bills with No MRA Received and No current CSA Rejection messages ****"
"RTN","IBOSTUS1",101,0)
 I 'IBSUM D
"RTN","IBOSTUS1",102,0)
 .W !!?39,"EVENT",?49,"ENTRD",?73,"MT",!,"BILL NO.",?10,"PATIENT NAME"
"RTN","IBOSTUS1",103,0)
 .W ?31,"PT.ID",?39,"DATE",?50,"BY",?57,"RATE TYPE",?70,"STATUS"
"RTN","IBOSTUS1",104,0)
 .W ?81,"CHARGES",?94,"BILL STATUS"
"RTN","IBOSTUS1",105,0)
 ;
"RTN","IBOSTUS1",106,0)
 W !,IBL W:IBSUM ! K IBL
"RTN","IBOSTUS1",107,0)
 Q
"RTN","IBOSTUS1",108,0)
 ;
"RTN","IBOSTUS1",109,0)
SUBHDR W !!?3,IBDTP_" Date: "_$$DAT1^IBOUTL(IBNEX)
"RTN","IBOSTUS1",110,0)
 Q
"RTN","IBOSTUS1",111,0)
 ;
"RTN","IBOSTUS1",112,0)
ADD ; - For summary statistics.
"RTN","IBOSTUS1",113,0)
 S IBST1(IBCAT,"C")=1+$G(IBST1(IBCAT,"C"))
"RTN","IBOSTUS1",114,0)
 S IBST1(IBCAT,"$")=IBAMT+$G(IBST1(IBCAT,"$"))
"RTN","IBOSTUS1",115,0)
 S:IBBS["* " IBBS=$P(IBBS,"* ",2)
"RTN","IBOSTUS1",116,0)
 S:IBBS["  " IBBS=$P(IBBS,"  ",2)
"RTN","IBOSTUS1",117,0)
 S:IBBS="" IBBS="UNKNOWN"
"RTN","IBOSTUS1",118,0)
 S IBST2(IBBS,"C")=1+$G(IBST2(IBBS,"C"))
"RTN","IBOSTUS1",119,0)
 S IBST2(IBBS,"$")=IBAMT+$G(IBST2(IBBS,"$"))
"RTN","IBOSTUS1",120,0)
 Q
"RTN","IBTUBO")
0^86^B25696439
"RTN","IBTUBO",1,0)
IBTUBO ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;29-SEP-94
"RTN","IBTUBO",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,192,235,248,155**;21-MAR-94
"RTN","IBTUBO",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUBO",4,0)
 ;
"RTN","IBTUBO",5,0)
% ; - Entry point for manual option.
"RTN","IBTUBO",6,0)
 N IBBDT,IBCOMP,IBDET,IBEDT,IBOPT,IBPRT,IBTIMON,IBQUIT,IBSEL
"RTN","IBTUBO",7,0)
 S IBQUIT=0 D:'$D(DT) DT^DICRW
"RTN","IBTUBO",8,0)
 W !!,"Re-Generate Unbilled Amounts Report",!
"RTN","IBTUBO",9,0)
 ;
"RTN","IBTUBO",10,0)
 ; - Ask to re-compile Unbilled Amounts data.
"RTN","IBTUBO",11,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBTUBO",12,0)
 S DIR("A")="Do you want to store Unbilled Amounts figures"
"RTN","IBTUBO",13,0)
 S DIR("?",1)="Enter 'YES' if you wish to store the Unbilled Amounts summary"
"RTN","IBTUBO",14,0)
 S DIR("?",2)="figures in your system for a specific month/year in the past."
"RTN","IBTUBO",15,0)
 S DIR("?",3)="Once stored, these figures will be available for inquiry through"
"RTN","IBTUBO",16,0)
 S DIR("?",4)="the View Unbilled Amounts option [IBT VIEW UNBILLED AMOUNTS]."
"RTN","IBTUBO",17,0)
 S DIR("?",5)="These summary figures are normally calculated and stored"
"RTN","IBTUBO",18,0)
 S DIR("?",6)="automatically by the system at the beginning of each month for"
"RTN","IBTUBO",19,0)
 S DIR("?",7)="the previous month."
"RTN","IBTUBO",20,0)
 S DIR("?",8)=" "
"RTN","IBTUBO",21,0)
 S DIR("?",9)="If you enter 'NO', the Unbilled Amounts summary figures will"
"RTN","IBTUBO",22,0)
 S DIR("?",10)="NOT be stored in your system, and the report may be run for"
"RTN","IBTUBO",23,0)
 S DIR("?")="any date range."
"RTN","IBTUBO",24,0)
 D ^DIR K DIR G:$D(DIRUT) END S IBCOMP=Y
"RTN","IBTUBO",25,0)
 I IBCOMP G RDATE
"RTN","IBTUBO",26,0)
 ;
"RTN","IBTUBO",27,0)
 ; - Select date(s) to build report.
"RTN","IBTUBO",28,0)
 W ! D DT1^IBTUBOU G:IBBDT="^" END
"RTN","IBTUBO",29,0)
 ;
"RTN","IBTUBO",30,0)
 ; - Select report(s).
"RTN","IBTUBO",31,0)
 S IBPRT="Choose report type(s) to print:"
"RTN","IBTUBO",32,0)
 S IBOPT(1)="INPATIENT UNBILLED"
"RTN","IBTUBO",33,0)
 S IBOPT(2)="OUTPATIENT UNBILLED"
"RTN","IBTUBO",34,0)
 S IBOPT(3)="PRESCRIPTION UNBILLED"
"RTN","IBTUBO",35,0)
 S IBOPT(4)="ALL OF THE ABOVE"
"RTN","IBTUBO",36,0)
 S IBSEL=$$MLTP^IBJD(IBPRT,.IBOPT,1) I 'IBSEL G END
"RTN","IBTUBO",37,0)
 S $E(IBSEL,$L(IBSEL))=""
"RTN","IBTUBO",38,0)
 ;
"RTN","IBTUBO",39,0)
RDATE ; - Select re-compile date, if necessary.
"RTN","IBTUBO",40,0)
 I IBCOMP D  G END:IBTIMON="^",DET
"RTN","IBTUBO",41,0)
 . W ! D DT2("Unbilled Amounts") Q:IBTIMON="^"
"RTN","IBTUBO",42,0)
 . W !!,"NOTE: Just a reminder that by entering the above month/year this"
"RTN","IBTUBO",43,0)
 . W !,"      report will re-calculate and update the Unbilled Amounts"
"RTN","IBTUBO",44,0)
 . W !,"      data on file in your system.",*7
"RTN","IBTUBO",45,0)
 . ;
"RTN","IBTUBO",46,0)
 . ; - Initialize variables
"RTN","IBTUBO",47,0)
 . I IBTIMON<3030900 N X S X=$$M2^IBJDE(IBTIMON,11,11) D 
"RTN","IBTUBO",48,0)
 .. S IBBDT=+X,IBEDT=$P(X,U,2)+.9,IBSEL="1,2,3"
"RTN","IBTUBO",49,0)
 . I IBTIMON'<3030900 S IBBDT=$$M3^IBJDE($$LDATE^IBJDE(IBTIMON)+1),IBEDT=$$LDATE^IBJDE(IBTIMON)+.9,IBSEL="1,2,3"
"RTN","IBTUBO",50,0)
 . D MSG W !
"RTN","IBTUBO",51,0)
 ;
"RTN","IBTUBO",52,0)
 S IBTIMON=IBEDT\100*100
"RTN","IBTUBO",53,0)
 ;
"RTN","IBTUBO",54,0)
DET ; - Ask to print detail report.
"RTN","IBTUBO",55,0)
 S DIR(0)="Y",DIR("B")="NO" W !
"RTN","IBTUBO",56,0)
 S DIR("A")="Print detail report with the Unbilled Amounts summary"
"RTN","IBTUBO",57,0)
 S DIR("?",1)="Answer YES if you want a detailed listing of the patients"
"RTN","IBTUBO",58,0)
 S DIR("?",2)="and events that are unbilled. Answer NO if you just want"
"RTN","IBTUBO",59,0)
 S DIR("?")="the summary, or '^' to quit this option."
"RTN","IBTUBO",60,0)
 D ^DIR K DIR G:$D(DIRUT) END S IBDET=Y G:'IBDET QUE
"RTN","IBTUBO",61,0)
 ;
"RTN","IBTUBO",62,0)
 ; Ask to include REQUEST MRA Status
"RTN","IBTUBO",63,0)
 S DIR(0)="YA",DIR("A")="Do you want to include MRA claims?: ",DIR("B")="NO" W ! D ^DIR K DIR G:$D(DIRUT) END
"RTN","IBTUBO",64,0)
 S IBINMRA=+Y
"RTN","IBTUBO",65,0)
 ;
"RTN","IBTUBO",66,0)
 ; - Select device to print.
"RTN","IBTUBO",67,0)
 W !!,"This report takes a while to run, so you should queue it to run"
"RTN","IBTUBO",68,0)
 W !,"after normal business hours."
"RTN","IBTUBO",69,0)
 W !!,"You will need a 132 column printer for this report!",!
"RTN","IBTUBO",70,0)
 S %ZIS="QM" D ^%ZIS G END:POP,QUE:$D(IO("Q"))
"RTN","IBTUBO",71,0)
 ;
"RTN","IBTUBO",72,0)
 U IO G STR
"RTN","IBTUBO",73,0)
 ;
"RTN","IBTUBO",74,0)
QUE ; - Queue report/summary, if necessary.
"RTN","IBTUBO",75,0)
 W ! I 'IBDET S ZTIO=""
"RTN","IBTUBO",76,0)
 S ZTRTN="IBTUBOA",ZTSAVE("IB*")=""
"RTN","IBTUBO",77,0)
 S ZTDESC="IB - Unbilled Amounts Report"
"RTN","IBTUBO",78,0)
 D ^%ZTLOAD K IO("Q"),ZTSK
"RTN","IBTUBO",79,0)
 D HOME^%ZIS G END
"RTN","IBTUBO",80,0)
 ;
"RTN","IBTUBO",81,0)
AUTO ; - Entry point for scheduled option.
"RTN","IBTUBO",82,0)
 Q  ;;**NO LONGER USED**
"RTN","IBTUBO",83,0)
 ;
"RTN","IBTUBO",84,0)
DQ ; - Entry point for DM extract.
"RTN","IBTUBO",85,0)
 ; - If AUTO PRINT UNBILLED LIST=yes and default report printer then
"RTN","IBTUBO",86,0)
 ;   automatically requeue to device.
"RTN","IBTUBO",87,0)
 I $P(^IBE(350.9,1,6),U,24) D  G END:'$G(IBXTRACT)
"RTN","IBTUBO",88,0)
 . N X S X=$O(^IBE(353,"B","IB REPORTS",0))
"RTN","IBTUBO",89,0)
 . S ZTIO=$P($G(^IBE(353,+X,0)),U,2) Q:ZTIO=""
"RTN","IBTUBO",90,0)
 . S IBDET=1,IBXTRACT=0,ZTDTH=$H,ZTRTN="IBTUBOA",ZTSAVE("IB*")=""
"RTN","IBTUBO",91,0)
 . S ZTDESC="IB - Unbilled Amounts Report" D ^%ZTLOAD
"RTN","IBTUBO",92,0)
 . S IBDET=0,IBXTRACT=1
"RTN","IBTUBO",93,0)
 . K ZTDESC,ZTDTH,ZTRTN,ZTSAVE,ZTSK
"RTN","IBTUBO",94,0)
 ;
"RTN","IBTUBO",95,0)
STR D ^IBTUBOA ; Start report.
"RTN","IBTUBO",96,0)
 ;
"RTN","IBTUBO",97,0)
END K DIRUT Q
"RTN","IBTUBO",98,0)
 ;
"RTN","IBTUBO",99,0)
MSG ; - Compile message.
"RTN","IBTUBO",100,0)
 W !!,"NOTE: After this report is run, the Unbilled Amounts totals for"
"RTN","IBTUBO",101,0)
 W !?6,"the month of "_$$DAT2^IBOUTL(IBTIMON)_" will be updated."
"RTN","IBTUBO",102,0)
 Q
"RTN","IBTUBO",103,0)
DT2(STR) ; - Select re-compile date (returns variable IBTIMON).
"RTN","IBTUBO",104,0)
 ; Input: STR - String that describe the type of data that will be 
"RTN","IBTUBO",105,0)
 ;        re-compiled: "Unbilled Amounts", "Average Bill Amounts", etc...
"RTN","IBTUBO",106,0)
 ;
"RTN","IBTUBO",107,0)
 ; This code is very the same code as is in DT2^IBTUBOU... that is
"RTN","IBTUBO",108,0)
 ; a utility routine, so code was copied and altered to accommodate
"RTN","IBTUBO",109,0)
 ; EOAM changes. 
"RTN","IBTUBO",110,0)
 N DIRUT,DT0,DT1,DT2,Y
"RTN","IBTUBO",111,0)
 ; - AUG 1993 is the first month on file with Unbilled Amounts data
"RTN","IBTUBO",112,0)
 S DT0=2930800,DT1=$$DAT2^IBOUTL(DT0)
"RTN","IBTUBO",113,0)
 I $E(DT,6,7)'>$E($$LDATE^IBJDE(DT),6,7) S DT2=DT
"RTN","IBTUBO",114,0)
 I $E(DT,6,7)>$E($$LDATE^IBJDE(DT),6,7) S DT2=DT+100 I $E(DT2,4,5)=13 S DT2=DT+8900
"RTN","IBTUBO",115,0)
 S DT2=$$M1^IBJDE(DT2,1),DIR("B")=$$DAT2^IBOUTL(DT2)
"RTN","IBTUBO",116,0)
 S DIR(0)="DA^"_$E(DT0,1,5)_"00:"_DT2_":AE^K:$E(Y,6,7)'=""00"" X"
"RTN","IBTUBO",117,0)
 S DIR("A")="Re-compile "_$G(STR)_" through MONTH/YEAR: "
"RTN","IBTUBO",118,0)
 S DIR("?",1)="Enter a past month/year (ex. Oct 2000).",DIR("?",2)=""
"RTN","IBTUBO",119,0)
 S DIR("?",3)="NOTE: The earliest month/year that can be entered is "_DT1_", and"
"RTN","IBTUBO",120,0)
 S DIR("?")="      it is NOT possible to enter the current or a future month/year."
"RTN","IBTUBO",121,0)
 D ^DIR K DIR I $D(DIRUT) S IBTIMON="^" G DT2Q
"RTN","IBTUBO",122,0)
 I $E(Y,6,7)'="00"!($E(Y,4,7)="0000") W "  ??" G DT2
"RTN","IBTUBO",123,0)
 S IBTIMON=Y
"RTN","IBTUBO",124,0)
 ;
"RTN","IBTUBO",125,0)
DT2Q Q
"RTN","IBTUBO1")
0^87^B45521783
"RTN","IBTUBO1",1,0)
IBTUBO1 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;29-SEP-94
"RTN","IBTUBO1",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,247,155**;21-MAR-94
"RTN","IBTUBO1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUBO1",4,0)
 ;
"RTN","IBTUBO1",5,0)
OPT(IBOE,IBQUERY) ; - Has the outpatient encounter been billed?
"RTN","IBTUBO1",6,0)
 ;   Input: IBOE=pointer to outpatient encounter in file #409.68
"RTN","IBTUBO1",7,0)
 ;               (NOTE: this value may be null)
"RTN","IBTUBO1",8,0)
 ;          IBQUERY (Passed by reference)=flag that is incremented when
"RTN","IBTUBO1",9,0)
 ;                  the Scheduling query API is invoked
"RTN","IBTUBO1",10,0)
 ;  *Pre-set variables: DFN=patient IEN, IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO1",11,0)
 ;                      IBEDT=End of reporting period date.
"RTN","IBTUBO1",12,0)
 ;                      IBX=ien of CLAIMS TRACKING entry file 356
"RTN","IBTUBO1",13,0)
 ;
"RTN","IBTUBO1",14,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!'$G(IBX) G OPTQ
"RTN","IBTUBO1",15,0)
 N IBCN,IBCPT,IBCT,IBDATA,IBDAY,IBDIV,IBFL,IBNAME,IBQUIT,IBNCF,IBXX,IBYD,IBYY,IBZ,IBMRA
"RTN","IBTUBO1",16,0)
 ;
"RTN","IBTUBO1",17,0)
 ; - Check to be sure the the encounter is billable.
"RTN","IBTUBO1",18,0)
 I $$INPT^IBAMTS1(DFN,IBDT\1_.2359) G OPTQ ;  Became inpatient same day.
"RTN","IBTUBO1",19,0)
 I $G(IBOE),$$ENCL^IBAMTS2(IBOE)["1" G OPTQ ; "ao^ir^sc^ec^mst^hnc^cv" encounter.
"RTN","IBTUBO1",20,0)
 S IBDAY=$E(IBDT,1,7),IBNAME=$P($G(^DPT(DFN,0)),U),IBQUIT="",IBNCF=0
"RTN","IBTUBO1",21,0)
 ;
"RTN","IBTUBO1",22,0)
 ; - If no encounter, see if add/edits or registrations are not billable.
"RTN","IBTUBO1",23,0)
 I '$G(IBOE) D NOOE G:IBQUIT OPTQ
"RTN","IBTUBO1",24,0)
 ;
"RTN","IBTUBO1",25,0)
 ; - If encounter was dated prior to Reasonable Charges (9/1/99) and
"RTN","IBTUBO1",26,0)
 ;   the claim was not authorized before end of reporting period, add
"RTN","IBTUBO1",27,0)
 ;   encounter Tort Rate to Unbilled Outpatient Amount
"RTN","IBTUBO1",28,0)
 I IBDAY<2990901 D PRERC,SETUB:'IBQUIT G OPTQ
"RTN","IBTUBO1",29,0)
 I '$G(IBOE) G OPTQ ; If still no encounter, quit.
"RTN","IBTUBO1",30,0)
 ;
"RTN","IBTUBO1",31,0)
 ; - If encounter was made after start of Reasonable Charges (9/1/99)
"RTN","IBTUBO1",32,0)
 ;   and any of the encounter's procedure codes have no corresponding
"RTN","IBTUBO1",33,0)
 ;   inst. or prof. claims that were not authorized before end of the
"RTN","IBTUBO1",34,0)
 ;   reporting period, add the charges for the procedures to the
"RTN","IBTUBO1",35,0)
 ;   Unbilled Outpatient Amount.
"RTN","IBTUBO1",36,0)
 ;
"RTN","IBTUBO1",37,0)
 ; - Gather all procedures associated with the encounter.
"RTN","IBTUBO1",38,0)
 D GETCPT^SDOE(IBOE,"IBYY") G:'$G(IBYY) OPTQ ; Check CPT qty.
"RTN","IBTUBO1",39,0)
 ;
"RTN","IBTUBO1",40,0)
 ; - Determine the encounter division.
"RTN","IBTUBO1",41,0)
 S IBDIV=+$P($$GETOE^SDOE(IBOE),U,11) S:'IBDIV IBDIV=+$$PRIM^VASITE()
"RTN","IBTUBO1",42,0)
 ;
"RTN","IBTUBO1",43,0)
 ; - Build array of all billable encounter procedures.
"RTN","IBTUBO1",44,0)
 S IBXX=0 F  S IBXX=$O(IBYY(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",45,0)
 . ;
"RTN","IBTUBO1",46,0)
 . ; - Get procedure pointer and code.
"RTN","IBTUBO1",47,0)
 . S IBZ=+IBYY(IBXX),IBCN=$P($$CPT^ICPTCOD(IBZ),"^",2)
"RTN","IBTUBO1",48,0)
 . ;
"RTN","IBTUBO1",49,0)
 . ; - Ignore LAB services for vets with Medicare Supplemental coverage.
"RTN","IBTUBO1",50,0)
 . I IBCN>79999,IBCN<90000 Q
"RTN","IBTUBO1",51,0)
 . ;
"RTN","IBTUBO1",52,0)
 . ; - Get the institutional/professional charge components.
"RTN","IBTUBO1",53,0)
 . S IBCPT(IBZ,1)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",1)
"RTN","IBTUBO1",54,0)
 . S IBCPT(IBZ,2)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",2)
"RTN","IBTUBO1",55,0)
 . ;
"RTN","IBTUBO1",56,0)
 . ; - Eliminate components without a charge.
"RTN","IBTUBO1",57,0)
 . I 'IBCPT(IBZ,1) K IBCPT(IBZ,1)
"RTN","IBTUBO1",58,0)
 . I 'IBCPT(IBZ,2) K IBCPT(IBZ,2)
"RTN","IBTUBO1",59,0)
 ;
"RTN","IBTUBO1",60,0)
 I '$D(IBCPT) G OPTQ ; Quit if no billable procedures remain.
"RTN","IBTUBO1",61,0)
 ;
"RTN","IBTUBO1",62,0)
 ; - Look at all of the vet's bills for the day and eliminate
"RTN","IBTUBO1",63,0)
 ;   from the array those procedures that have been billed.
"RTN","IBTUBO1",64,0)
 S IBXX=0
"RTN","IBTUBO1",65,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",66,0)
 . ;
"RTN","IBTUBO1",67,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",68,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""
"RTN","IBTUBO1",69,0)
 . I $P(IBDATA,U,2)=2 S IBMRA(IBXX)=IBDATA ; MRA request
"RTN","IBTUBO1",70,0)
 . S IBNCF=IBNCF+1
"RTN","IBTUBO1",71,0)
 . ;
"RTN","IBTUBO1",72,0)
 . ; If Compile/Store & Not authorized/MRA requested before reporting period - Quit.
"RTN","IBTUBO1",73,0)
 . I $G(IBCOMP),$S('$G(IBMRA(IBXX)):$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO1",74,0)
 . ;
"RTN","IBTUBO1",75,0)
 . ; - The episode has been billed. Check the revenue code multiple for
"RTN","IBTUBO1",76,0)
 . ;   all procedures billed on the claim.
"RTN","IBTUBO1",77,0)
 . S IBYY=0
"RTN","IBTUBO1",78,0)
 . F  S IBYY=$O(^DGCR(399,IBXX,"RC",IBYY)) Q:'IBYY  S IBYD=^(IBYY,0) D
"RTN","IBTUBO1",79,0)
 . . ;
"RTN","IBTUBO1",80,0)
 . . ; - Get the procedure code and charge type for the revenue code.
"RTN","IBTUBO1",81,0)
 . . S IBZ=$P(IBYD,U,6)
"RTN","IBTUBO1",82,0)
 . . S IBCT=$S($P(IBYD,U,12):$P(IBYD,U,12),1:$P(IBDATA,U,4))
"RTN","IBTUBO1",83,0)
 . . I 'IBZ!('IBCT) Q  ; Can't determine code/charge type for procedure.
"RTN","IBTUBO1",84,0)
 . . I $G(IBMRA(IBXX))'="" S:$D(IBCPT(IBZ)) IBCPT("MRA",IBZ,IBCT)=1 Q
"RTN","IBTUBO1",85,0)
 . . ; Delete procedure from unbilled procedures array.
"RTN","IBTUBO1",86,0)
 . . I $D(IBCPT(IBZ,IBCT)) K IBCPT(IBZ,IBCT) Q
"RTN","IBTUBO1",87,0)
 . . K IBCPT(IBZ)
"RTN","IBTUBO1",88,0)
 ;
"RTN","IBTUBO1",89,0)
 ; - Again, quit if no billable procedures remain.
"RTN","IBTUBO1",90,0)
 I '$D(IBCPT) G OPTQ
"RTN","IBTUBO1",91,0)
 ;
"RTN","IBTUBO1",92,0)
 ; - The encounter has unbilled procedure codes. Increment the counters
"RTN","IBTUBO1",93,0)
 ;   as per the extract specification.
"RTN","IBTUBO1",94,0)
 ;
"RTN","IBTUBO1",95,0)
 ; - Count the encounter (element 37N).
"RTN","IBTUBO1",96,0)
 S IBMRA=$S($D(IBCPT("MRA")):1,1:0)
"RTN","IBTUBO1",97,0)
 S:'IBMRA IBUNB("ENCNTRS")=IBUNB("ENCNTRS")+1
"RTN","IBTUBO1",98,0)
 S:$G(IBXTRACT) IB(14)=IB(14)+1
"RTN","IBTUBO1",99,0)
 ;
"RTN","IBTUBO1",100,0)
 ; - Look at all the unbilled procedures.
"RTN","IBTUBO1",101,0)
 S IBZ=0 F  S IBZ=$O(IBCPT(IBZ)) Q:'IBZ  D
"RTN","IBTUBO1",102,0)
 . ;
"RTN","IBTUBO1",103,0)
 . S IBMRA=$S($D(IBCPT("MRA",IBZ)):1,1:0)
"RTN","IBTUBO1",104,0)
 . ; - Count the procedure (element 37M).
"RTN","IBTUBO1",105,0)
 . I $G(IBXTRACT) S IB(13)=IB(13)+1
"RTN","IBTUBO1",106,0)
 . ;
"RTN","IBTUBO1",107,0)
 . ; - Count the institutional component (element 37I) and its
"RTN","IBTUBO1",108,0)
 . ;   corresponding charge amount (element 37J).
"RTN","IBTUBO1",109,0)
 . I $G(IBCPT(IBZ,1)) D
"RTN","IBTUBO1",110,0)
 . . S:'IBMRA IBUNB("CPTMS-I")=IBUNB("CPTMS-I")+1
"RTN","IBTUBO1",111,0)
 . . S:'IBMRA IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBCPT(IBZ,1)
"RTN","IBTUBO1",112,0)
 . . S:IBMRA IBUNB("CPTMS-I-MRA")=IBUNB("CPTMS-I-MRA")+1
"RTN","IBTUBO1",113,0)
 . . S:IBMRA IBUNB("UNBILOP-MRA")=IBUNB("UNBILOP-MRA")+IBCPT(IBZ,1)
"RTN","IBTUBO1",114,0)
 . . I $G(IBXTRACT) S IB(9)=IB(9)+1,IB(10)=IB(10)+IBCPT(IBZ,1)
"RTN","IBTUBO1",115,0)
 . ;
"RTN","IBTUBO1",116,0)
 . ; - Count the professional component (element 37K) and its
"RTN","IBTUBO1",117,0)
 . ;   corresponding charge amount (element 37L).
"RTN","IBTUBO1",118,0)
 . I $G(IBCPT(IBZ,2)) D
"RTN","IBTUBO1",119,0)
 . . S:'IBMRA IBUNB("CPTMS-P")=IBUNB("CPTMS-P")+1
"RTN","IBTUBO1",120,0)
 . . S:'IBMRA IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBCPT(IBZ,2)
"RTN","IBTUBO1",121,0)
 . . S:IBMRA IBUNB("CPTMS-P-MRA")=IBUNB("CPTMS-P-MRA")+1
"RTN","IBTUBO1",122,0)
 . . S:IBMRA IBUNB("UNBILOP-MRA")=IBUNB("UNBILOP-MRA")+IBCPT(IBZ,2)
"RTN","IBTUBO1",123,0)
 . . I $G(IBXTRACT) S IB(11)=IB(11)+1,IB(12)=IB(12)+IBCPT(IBZ,2)
"RTN","IBTUBO1",124,0)
 ;
"RTN","IBTUBO1",125,0)
 D SETUB
"RTN","IBTUBO1",126,0)
 ;
"RTN","IBTUBO1",127,0)
OPTQ Q
"RTN","IBTUBO1",128,0)
 ;
"RTN","IBTUBO1",129,0)
PRERC ; - Determine if a pre-9/1/99 visit has been billed.
"RTN","IBTUBO1",130,0)
 ;   Output: IBQUIT will be set to 1 if the visit has been billed.
"RTN","IBTUBO1",131,0)
 ;   *Pre-set variables DFN,IBDAY,IBDET,IBNAME,IBNCF,IBQUIT,IBRT,IBEDT
"RTN","IBTUBO1",132,0)
 ;    and IB/IBUNB arrays required.
"RTN","IBTUBO1",133,0)
 ; NO MRA Extract code needed for pre-RC processes
"RTN","IBTUBO1",134,0)
 I $D(^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY)) S IBQUIT=1 G PRCQ
"RTN","IBTUBO1",135,0)
 ;
"RTN","IBTUBO1",136,0)
 ; - Check all outpatient claims on event date.
"RTN","IBTUBO1",137,0)
 N IBXX S IBXX=0
"RTN","IBTUBO1",138,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D  Q:IBQUIT
"RTN","IBTUBO1",139,0)
 . ;
"RTN","IBTUBO1",140,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",141,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""  S IBNCF=IBNCF+1
"RTN","IBTUBO1",142,0)
 . ;
"RTN","IBTUBO1",143,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO1",144,0)
 . I $G(IBCOMP),$P(IBDATA,U,3)>IBEDT Q
"RTN","IBTUBO1",145,0)
 . ;
"RTN","IBTUBO1",146,0)
 . S IBQUIT=1 ; Episode has been billed-set flag.
"RTN","IBTUBO1",147,0)
 ;
"RTN","IBTUBO1",148,0)
 I IBQUIT G PRCQ ; Epsiode was billed.
"RTN","IBTUBO1",149,0)
 ;
"RTN","IBTUBO1",150,0)
 ; - The episode was not billed; determine the tort rate for a visit
"RTN","IBTUBO1",151,0)
 ;   and increment the number and amount of unbilled pre-9/1/99 visits.
"RTN","IBTUBO1",152,0)
 S IBXX=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"OUTPATIENT VISIT DATE")
"RTN","IBTUBO1",153,0)
 S IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBXX
"RTN","IBTUBO1",154,0)
 S IBUNB("ENCNTRS")=IBUNB("ENCNTRS")+1
"RTN","IBTUBO1",155,0)
 ;
"RTN","IBTUBO1",156,0)
 I $G(IBXTRACT) S IB(7)=IB(7)+1,IB(8)=IB(8)+IBXX ; For DM extract.
"RTN","IBTUBO1",157,0)
 ;
"RTN","IBTUBO1",158,0)
PRCQ Q
"RTN","IBTUBO1",159,0)
 ;
"RTN","IBTUBO1",160,0)
NOOE ; - If there is no encounter, look for add/edits or registrations.
"RTN","IBTUBO1",161,0)
 ;   Output: IBQUIT will be set to 1 if the visit is non-billable.
"RTN","IBTUBO1",162,0)
 ;   *Pre-set variable IBQUIT required.
"RTN","IBTUBO1",163,0)
 N IBDATA,IBSC,IBSDV,IBXX,IBZERR
"RTN","IBTUBO1",164,0)
 ;
"RTN","IBTUBO1",165,0)
 ; - Check if for a visit at the visit date/time.
"RTN","IBTUBO1",166,0)
 S IBXX=$$EXOE^SDOE(DFN,IBDT,IBDT,"","IBZERR")
"RTN","IBTUBO1",167,0)
 I IBXX D CKENC^IBTUBOU(IBXX,"",.IBQUIT) G NOOEQ
"RTN","IBTUBO1",168,0)
 ;
"RTN","IBTUBO1",169,0)
 ; - Find next add/edit stop code encounter after IBDT.
"RTN","IBTUBO1",170,0)
 D SCAN^IBTUBOU(DFN,IBDT,.IBQUERY)
"RTN","IBTUBO1",171,0)
 ;
"RTN","IBTUBO1",172,0)
NOOEQ Q
"RTN","IBTUBO1",173,0)
 ;
"RTN","IBTUBO1",174,0)
SETUB ; Set array elements for the detail report.
"RTN","IBTUBO1",175,0)
 ; Array element format:
"RTN","IBTUBO1",176,0)
 ; NON-MRA:
"RTN","IBTUBO1",177,0)
 ;  ^TMP($J,"IBTUB-OPT",NAME@@DFN,DATE,IBX)=bill status^claim type
"RTN","IBTUBO1",178,0)
 ;  ^TMP($J,"IBTUB-OPT",NAME@@DFN,DATE,IBX,CPT no)=inst rate^prof rate
"RTN","IBTUBO1",179,0)
 ; MRA:
"RTN","IBTUBO1",180,0)
 ;  ^TMP($J,"IBTUB-OPT_MRA",NAME@@DFN,DATE,IBX,CPT no)=1 if MRA req
"RTN","IBTUBO1",181,0)
 ;
"RTN","IBTUBO1",182,0)
 N IBCTF,IBCPTNM
"RTN","IBTUBO1",183,0)
 I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY,IBX)=IBNCF
"RTN","IBTUBO1",184,0)
 I $G(IBINMRA),$O(IBCPT("MRA","")) S ^TMP($J,"IBTUB-OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX)=1
"RTN","IBTUBO1",185,0)
 G:'IBDET SETUBQ
"RTN","IBTUBO1",186,0)
 I $D(IBCPT) S IBXX=0 F  S IBXX=$O(IBCPT(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",187,0)
 . S IBCPTNM=$$CODEC^ICPTCOD(IBXX) I IBCPTNM=-1 S IBCPTNM="UNK"
"RTN","IBTUBO1",188,0)
 . S IBCTF=$S($G(IBCPT(IBXX,1)):"I",1:"")
"RTN","IBTUBO1",189,0)
 . S IBCTF=$S($G(IBCPT(IBXX,2)):$S(IBCTF="I":"I,P",1:"P"),1:IBCTF)
"RTN","IBTUBO1",190,0)
 . I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY,IBX,IBXX)=+$G(IBCPT(IBXX,1))_U_+$G(IBCPT(IBXX,2))_U_IBCTF
"RTN","IBTUBO1",191,0)
 . I $G(IBINMRA) S:$G(IBCPT("MRA",IBXX)) ^TMP($J,"IBTUB-OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX,IBXX)=1
"RTN","IBTUBO1",192,0)
 ;
"RTN","IBTUBO1",193,0)
SETUBQ Q
"RTN","IBTUBO2")
0^88^B25602045
"RTN","IBTUBO2",1,0)
IBTUBO2 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;03 Aug 2004  8:21 AM
"RTN","IBTUBO2",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,192,155**;21-MAR-94
"RTN","IBTUBO2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUBO2",4,0)
 ;
"RTN","IBTUBO2",5,0)
INPT(DGPM) ; - Check if inpatient episode has bills or final bill; if not,
"RTN","IBTUBO2",6,0)
 ;   ^TMP($J,"IBTUB-INPT",NAME@@DFN,DATE,IBX)=bill status
"RTN","IBTUBO2",7,0)
 ;   ^TMP($J,"IBTUB-INPT_MRA",NAME@@DFN,DATE,IBX)=1 if MRA request
"RTN","IBTUBO2",8,0)
 ;   *Pre-set variables: DFN=patient IEN, DGPM=pointer to file #405,
"RTN","IBTUBO2",9,0)
 ;                       IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO2",10,0)
 ;                       IBEDT=reporting period date
"RTN","IBTUBO2",11,0)
 I '$G(DFN)!('$G(DGPM))!('$G(IBDT))!('$G(IBRT)) G INPTQ
"RTN","IBTUBO2",12,0)
 N IBIP,IBDATA,IBNAME,IBNCF,IBXX,X,Y,IBMRA
"RTN","IBTUBO2",13,0)
 S IBNAME=$P($G(^DPT(DFN,0)),U)
"RTN","IBTUBO2",14,0)
 I $D(^TMP($J,"IBTUB-INPT",IBNAME_"@@"_DFN,IBDT)) G INPTQ
"RTN","IBTUBO2",15,0)
 I $P($G(^DGPM(DGPM,0)),U,11) G INPTQ ;      Admitted for SC condition.
"RTN","IBTUBO2",16,0)
 I $$SC^IBTUBOU($P($G(^DGPM(DGPM,0)),U,16)) G INPTQ ; Check PTF for SC.
"RTN","IBTUBO2",17,0)
 S (IBIP(1),IBIP(2))=0 ; Set claim flags.
"RTN","IBTUBO2",18,0)
 ;
"RTN","IBTUBO2",19,0)
 ; - Check patient's claims.
"RTN","IBTUBO2",20,0)
 S (IBNCF,X)=0
"RTN","IBTUBO2",21,0)
 F  S X=$O(^DGCR(399,"C",DFN,X)) Q:'X  D  Q:IBIP(1)&(IBIP(2))
"RTN","IBTUBO2",22,0)
 . S IBDATA=$$CKBIL^IBTUBOU(X,1) Q:IBDATA=""
"RTN","IBTUBO2",23,0)
 . ;
"RTN","IBTUBO2",24,0)
 . ; The admission date on the bill is different from the Event date.
"RTN","IBTUBO2",25,0)
 . I $P(IBDATA,U,5)'=$P(IBDT,".") Q
"RTN","IBTUBO2",26,0)
 . S IBNCF=IBNCF+1 ; Increment the number of bills on file for episode
"RTN","IBTUBO2",27,0)
 . ;
"RTN","IBTUBO2",28,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO2",29,0)
 . I $G(IBCOMP),$S($P(IBDATA,U,2)'=2:$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO2",30,0)
 . ;
"RTN","IBTUBO2",31,0)
 . S IBIP($P(IBDATA,U,4))=$S($P(IBDATA,U,2)'=2:1,1:2) ;   Episode billed for inst/prof bill type
"RTN","IBTUBO2",32,0)
 ;
"RTN","IBTUBO2",33,0)
 I IBIP(1)=1 G:IBIP(2)=1!(IBDT<2990901) INPTQ ; Episode is billed.
"RTN","IBTUBO2",34,0)
 ;
"RTN","IBTUBO2",35,0)
 ; - Add to episodes missing inst./prof. bills.
"RTN","IBTUBO2",36,0)
 S (IBXX,IBMRA)=""
"RTN","IBTUBO2",37,0)
 ;
"RTN","IBTUBO2",38,0)
 I IBIP(1)'=1 D
"RTN","IBTUBO2",39,0)
 . I 'IBIP(1) S IBUNB("EPISM-I")=IBUNB("EPISM-I")+1 S:IBDET IBXX="I"
"RTN","IBTUBO2",40,0)
 . I $G(IBXTRACT) S IB(1)=IB(1)+1 ; For DM extract.
"RTN","IBTUBO2",41,0)
 . I IBIP(1)=2 S IBUNB("EPISM-I-MRA")=IBUNB("EPISM-I-MRA")+1 S:IBDET IBMRA="I"
"RTN","IBTUBO2",42,0)
 ;
"RTN","IBTUBO2",43,0)
 I IBIP(2)'=1,IBDT'<2990901 D
"RTN","IBTUBO2",44,0)
 . I 'IBIP(2) S IBUNB("EPISM-P")=IBUNB("EPISM-P")+1 S:IBDET IBXX=$S(IBXX="I":"I,P",1:"P")
"RTN","IBTUBO2",45,0)
 . I $G(IBXTRACT) S IB(3)=IB(3)+1 ; For DM extract.
"RTN","IBTUBO2",46,0)
 . I IBIP(2)=2 S IBUNB("EPISM-P-MRA")=IBUNB("EPISM-P-MRA")+1 S:IBDET IBMRA=$S(IBMRA="I":"I,P",1:"P")
"RTN","IBTUBO2",47,0)
 ;
"RTN","IBTUBO2",48,0)
 I $S('IBIP(1):1,'IBIP(2):1,1:0) S IBUNB("EPISM-A")=IBUNB("EPISM-A")+1  ; Number of Admissions missing claims
"RTN","IBTUBO2",49,0)
 S:IBIP(1)=2!(IBIP(2)=2) IBUNB("EPISM-A-MRA")=IBUNB("EPISM-A-MRA")+1
"RTN","IBTUBO2",50,0)
 I $G(IBXTRACT) S IB(5)=IB(5)+1 ; For DM extract.
"RTN","IBTUBO2",51,0)
 ;
"RTN","IBTUBO2",52,0)
 I '$G(IBINMRA),IBIP(1)=2 G:IBIP(2)=1 INPTQ
"RTN","IBTUBO2",53,0)
 I '$G(IBINMRA),IBIP(2)=2 G:IBIP(1)=1 INPTQ
"RTN","IBTUBO2",54,0)
 ;
"RTN","IBTUBO2",55,0)
 ; - Set global for report.
"RTN","IBTUBO2",56,0)
 I $S($G(IBINMRA):1,1:IBXX'="") S ^TMP($J,"IBTUB-INPT",IBNAME_"@@"_DFN,IBDT,IBX)=IBNCF_U_IBXX_U_U_U_$$HOSP^IBTUBOU(DGPM)
"RTN","IBTUBO2",57,0)
 I IBMRA'="",$G(IBINMRA) S ^TMP($J,"IBTUB-INPT_MRA",IBNAME_"@@"_DFN,IBDT,IBX)=1_U_IBMRA
"RTN","IBTUBO2",58,0)
 ;
"RTN","IBTUBO2",59,0)
INPTQ Q
"RTN","IBTUBO2",60,0)
 ;
"RTN","IBTUBO2",61,0)
RX(IBRX) ; - Check if prescription has been billed; if not,
"RTN","IBTUBO2",62,0)
 ;   ^TMP($J,"IBTUB-RX",NAME@@DFN,DATE@RX#,IBX)=bill status^drug name^
"RTN","IBTUBO2",63,0)
 ;                                            original fill date
"RTN","IBTUBO2",64,0)
 ;   ^TMP($J,"IBTUB-RX_MRA",NAME@@DFN,DATE@RX#,IBX)=1 if req MRA
"RTN","IBTUBO2",65,0)
 ;
"RTN","IBTUBO2",66,0)
 ;   *Pre-set variables: DFN=patient IEN, IBDT=refill date,
"RTN","IBTUBO2",67,0)
 ;                       IBRT=bill rate, IBRX=pointer to file #52,
"RTN","IBTUBO2",68,0)
 ;                       IBEDT=reporting period date
"RTN","IBTUBO2",69,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!('$G(IBRX)) G RXQ
"RTN","IBTUBO2",70,0)
 N IBDATA,IBDAY,IBDRX,IBFL,IBFLG,IBOFD,IBNAME,IBND,IBNO,IBNCF,RX,X,RXDT,IBMRA,IBCO
"RTN","IBTUBO2",71,0)
 ;
"RTN","IBTUBO2",72,0)
 ; - Be sure prescription has an RX#.
"RTN","IBTUBO2",73,0)
 S IBND=$G(^PSRX(IBRX,0)),IBNO=$P(IBND,U) G:IBNO="" RXQ
"RTN","IBTUBO2",74,0)
 ;
"RTN","IBTUBO2",75,0)
 ; - Retrieve the Prescription Original Fill Date
"RTN","IBTUBO2",76,0)
 S IBOFD=$P($G(^PSRX(IBRX,2)),"^",2)\1
"RTN","IBTUBO2",77,0)
 ;
"RTN","IBTUBO2",78,0)
 S IBDAY=$E(IBDT,1,7),IBDRX=IBDAY_"@@"_IBNO,IBNAME=$P($G(^DPT(DFN,0)),U)
"RTN","IBTUBO2",79,0)
 ;
"RTN","IBTUBO2",80,0)
 ; - Be sure that this fill was not already marked as unbilled.
"RTN","IBTUBO2",81,0)
 I $D(^TMP($J,"IBTUB-RX",IBNAME_"@@"_DFN,IBDRX,IBX)) G RXQ
"RTN","IBTUBO2",82,0)
 ;
"RTN","IBTUBO2",83,0)
 ; - Look at all fills of the prescription that are on a claim.
"RTN","IBTUBO2",84,0)
 S (IBFL,X)="",(IBFLG,IBNCF,IBNCF(0),IBMRA)=0
"RTN","IBTUBO2",85,0)
 F  S X=$O(^IBA(362.4,"B",IBNO,X)) Q:'X  D  Q:IBFL
"RTN","IBTUBO2",86,0)
 . S RX=$G(^IBA(362.4,X,0)),RXDT=$P(RX,U,3)\1
"RTN","IBTUBO2",87,0)
 . I RXDT=IBOFD S IBFLG=1  ; Original Fill Date Billed?
"RTN","IBTUBO2",88,0)
 . I RXDT'=IBDAY Q  ; RX refill and claim refill dates not the same.
"RTN","IBTUBO2",89,0)
 . ;
"RTN","IBTUBO2",90,0)
 . ; - Skip bill if not authorized (and not meeting other criteria).
"RTN","IBTUBO2",91,0)
 . S IBDATA=$$CKBIL^IBTUBOU($P(RX,U,2)) Q:IBDATA=""
"RTN","IBTUBO2",92,0)
 . S IBNCF=IBNCF+1 ; Increment the number of bills on file for the episode
"RTN","IBTUBO2",93,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO2",94,0)
 . I $G(IBCOMP),$S($P(IBDATA,U,2)'=2:$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT S IBNONMRA=0 Q
"RTN","IBTUBO2",95,0)
 . S:$P(IBDATA,U,2)'=2 IBFL=1,IBMRA=0 ; at least 1 non-MRA bill exists
"RTN","IBTUBO2",96,0)
 . S:$P(IBDATA,U,2)=2 IBMRA=1 ; at least 1 MRA bill exists
"RTN","IBTUBO2",97,0)
 . ;
"RTN","IBTUBO2",98,0)
 ;
"RTN","IBTUBO2",99,0)
 I IBFL G RXQ ; Refill has been billed.
"RTN","IBTUBO2",100,0)
 ;
"RTN","IBTUBO2",101,0)
RX1 ; - Calculate unbilled amounts.
"RTN","IBTUBO2",102,0)
 S:'IBMRA IBUNB("PRESCRP")=IBUNB("PRESCRP")+1
"RTN","IBTUBO2",103,0)
 I IBMRA S IBUNB("PRESCRP-MRA")=IBUNB("PRESCRP-MRA")+1
"RTN","IBTUBO2",104,0)
 S IBCO=$$BICOST^IBCRCI(IBRT,3,IBDAY,"PRESCRIPTION FILL")
"RTN","IBTUBO2",105,0)
 S:'IBMRA IBUNB("UNBILRX")=IBUNB("UNBILRX")+IBCO
"RTN","IBTUBO2",106,0)
 I IBMRA S IBUNB("UNBILRX-MRA")=IBUNB("UNBILRX-MRA")+IBCO
"RTN","IBTUBO2",107,0)
 I $G(IBXTRACT) D  ; For DM extract.
"RTN","IBTUBO2",108,0)
 . S IB(17)=IB(17)+1
"RTN","IBTUBO2",109,0)
 . S IB(18)=IB(18)+IBCO
"RTN","IBTUBO2",110,0)
 ;
"RTN","IBTUBO2",111,0)
 ; - Set global for report.
"RTN","IBTUBO2",112,0)
 I $S($G(IBINMRA):1,1:'IBMRA) S ^TMP($J,"IBTUB-RX",IBNAME_"@@"_DFN,IBDRX,IBX)=IBNCF_U_$P($G(^VA(200,+$P(IBND,U,4),0)),U)_U_$P($G(^PSRX(IBRX,2)),U,2)_U_U_IBFLG_U_$P($G(^PSDRUG(+$P(IBND,U,6),0)),U)
"RTN","IBTUBO2",113,0)
 I IBMRA,$G(IBINMRA) S ^TMP($J,"IBTUB-RX_MRA",IBNAME_"@@"_DFN,IBDRX,IBX)=1
"RTN","IBTUBO2",114,0)
 ;
"RTN","IBTUBO2",115,0)
RXQ Q
"RTN","IBTUBO3")
0^89^B23248932
"RTN","IBTUBO3",1,0)
IBTUBO3 ;ALB/RB - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;03 Aug 2004  9:12 AM
"RTN","IBTUBO3",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,192,155**;21-MAR-94
"RTN","IBTUBO3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUBO3",4,0)
 ;
"RTN","IBTUBO3",5,0)
REPORT ; - Prepare report if requested, send summary bulletin.
"RTN","IBTUBO3",6,0)
 N IBRUN,IBN,IBPAG,IBQ,DFN,DTE,FL,PT,X0,X1
"RTN","IBTUBO3",7,0)
 S IBRUN=$$HTE^XLFDT($H,1)
"RTN","IBTUBO3",8,0)
 D BULL^IBTUBUL G:'IBDET REPRTQ
"RTN","IBTUBO3",9,0)
 ;
"RTN","IBTUBO3",10,0)
REPRT1 S (IBPAG,IBQ,IBX)=0
"RTN","IBTUBO3",11,0)
 I '$D(^TMP($J)) S X0="" D HDR,NIM D:'IBQ PAUSE G REPRTQ
"RTN","IBTUBO3",12,0)
 F X0=1,2,3 I IBSEL[X0 D  Q:IBQ
"RTN","IBTUBO3",13,0)
 . S X1="IBTUB-"_$S(X0=2:"OPT",X0=3:"RX",1:"INPT")
"RTN","IBTUBO3",14,0)
 . D HDR Q:IBQ  I '$D(^TMP($J,X1)) D NIM Q
"RTN","IBTUBO3",15,0)
 . S PT="" F  S PT=$O(^TMP($J,X1,PT)) Q:PT=""  D  Q:IBQ
"RTN","IBTUBO3",16,0)
 . . S DFN=+$P(PT,"@@",2) Q:'DFN
"RTN","IBTUBO3",17,0)
 . . S (DTE,FL)="" F  S DTE=$O(^TMP($J,X1,PT,DTE)) Q:DTE=""  D  Q:IBQ
"RTN","IBTUBO3",18,0)
 . . . S IBX="" F  S IBX=$O(^TMP($J,X1,PT,DTE,IBX)) Q:IBX=""  D  Q:IBQ
"RTN","IBTUBO3",19,0)
 . . . . S IBN=^TMP($J,X1,PT,DTE,IBX) D LINE Q:IBQ  I X1["OPT" D CPTS Q:IBQ
"RTN","IBTUBO3",20,0)
 ;
"RTN","IBTUBO3",21,0)
 D:'IBQ PAUSE
"RTN","IBTUBO3",22,0)
 ;
"RTN","IBTUBO3",23,0)
REPRTQ Q
"RTN","IBTUBO3",24,0)
 ;
"RTN","IBTUBO3",25,0)
HDR ; - Output header.
"RTN","IBTUBO3",26,0)
 N I,X,XTP
"RTN","IBTUBO3",27,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE G HDRQ:IBQ
"RTN","IBTUBO3",28,0)
 W:'$G(IBPAG) ! I $E(IOST,1,2)="C-"!$G(IBPAG) W @IOF,*13
"RTN","IBTUBO3",29,0)
 S IBPAG=$G(IBPAG)+1 W !,"Unbilled Amounts Report"
"RTN","IBTUBO3",30,0)
 W ?60,"Run Date: ",IBRUN,?124,"Page ",$J(IBPAG,3)
"RTN","IBTUBO3",31,0)
 S XTP=$S(X0=1:"INPATIENT",X0=2:"OUTPATIENT",X0=3:"PRESCRIPTIONS",1:"")
"RTN","IBTUBO3",32,0)
 S:X0'=3 XTP=XTP_" EPISODES" S X="ALL "_XTP_" FROM "
"RTN","IBTUBO3",33,0)
 S X=X_$$DTE(IBBDT)_" TO "_$$DTE(IBEDT\1)
"RTN","IBTUBO3",34,0)
 I $G(IBCOMP) D
"RTN","IBTUBO3",35,0)
 .S X=X_" / DATA RECOMPILED/STORED FOR "_$$DAT2^IBOUTL(IBTIMON)
"RTN","IBTUBO3",36,0)
 S X=X_" / '*' AFTER THE PATIENT NAME = USUALLY BILLED MEANS TEST COPAYMENT"
"RTN","IBTUBO3",37,0)
 I X0=1 S X=X_" / 'H' AFTER THE ADMISSION DATE = PATIENT CURRENTLY HOSPITALIZED"
"RTN","IBTUBO3",38,0)
 I X0=3 S X=X_" / '$' AFTER THE ORIGINAL FILL DATE = ORIGINAL FILL DATE HAS BEEN BILLED"
"RTN","IBTUBO3",39,0)
 S X=X_" / 'CF' COLUMN = NUMBER OF CLAIMS ON FILE FOR THE EPISODE"
"RTN","IBTUBO3",40,0)
 I X0'=3 D
"RTN","IBTUBO3",41,0)
 .S X=X_" / 'I/P' COLUMN = 'I' - INSTUTIONAL CLAIM MISSING,"
"RTN","IBTUBO3",42,0)
 .S X=X_" 'P' - PROFESSIONAL CLAIM MISSING"
"RTN","IBTUBO3",43,0)
 F I=1:1 W !,$E(X,1,132) S X=$E(X,133,999) Q:X=""
"RTN","IBTUBO3",44,0)
 ;
"RTN","IBTUBO3",45,0)
 I 'X0 W !,$TR($J(" ",IOM)," ","-"),! G HDRQ
"RTN","IBTUBO3",46,0)
 W !!?29,"Last Prim.  Claims" W:X0=3 ?52,"Fill",?123,"Original"
"RTN","IBTUBO3",47,0)
 W !,"Name",?29,"4SSN Elig.  Track.ID#"
"RTN","IBTUBO3",48,0)
 I X0=1 W ?52,"Admission CF Insurance Carrier(s)",?98,"I/P",?102,"MRA"
"RTN","IBTUBO3",49,0)
 I X0=2 W ?52,"Care Dt.  CF Insurance Carrier(s)",?98,"I/P",?102,"MRA",?106,"CPT     I. Rate   P. Rate"
"RTN","IBTUBO3",50,0)
 I X0=3 W ?52,"Date     CF Ins. Carrier(s)     MRA Drug Name        Physician",?123,"Fill Dt."
"RTN","IBTUBO3",51,0)
 W !,$TR($J(" ",IOM)," ","-"),!
"RTN","IBTUBO3",52,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D
"RTN","IBTUBO3",53,0)
 . W !!,"...Task stoped at user request" S (IBQ,ZTSTOP)=1
"RTN","IBTUBO3",54,0)
 ;
"RTN","IBTUBO3",55,0)
HDRQ Q
"RTN","IBTUBO3",56,0)
 ;
"RTN","IBTUBO3",57,0)
CPTS ; - Outpatient Only (CPTs and Rates)
"RTN","IBTUBO3",58,0)
 N CPT,IBN1
"RTN","IBTUBO3",59,0)
 I '$O(^TMP($J,X1,PT,DTE,IBX,0)) W ?98,"I",?103,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:"") W ! Q
"RTN","IBTUBO3",60,0)
 S CPT=0 F  S CPT=$O(^TMP($J,X1,PT,DTE,IBX,CPT)) Q:'CPT  D  Q:IBQ
"RTN","IBTUBO3",61,0)
 . S IBN1=^TMP($J,X1,PT,DTE,IBX,CPT)
"RTN","IBTUBO3",62,0)
 . I $Y>(IOSL-5) D HDR Q:IBQ  S FL=0 D LINE
"RTN","IBTUBO3",63,0)
 . W ?98,$P(IBN1,U,3),?103,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:""),?106,CPT,?113,$J(+IBN1,8,2)
"RTN","IBTUBO3",64,0)
 . W ?124,$J($P(IBN1,U,2),8,2),!
"RTN","IBTUBO3",65,0)
 Q
"RTN","IBTUBO3",66,0)
 ;
"RTN","IBTUBO3",67,0)
LINE ; - Print detail line.
"RTN","IBTUBO3",68,0)
 I $Y>(IOSL-6) D HDR G:IBQ LINQ S FL=0
"RTN","IBTUBO3",69,0)
 I 'FL D
"RTN","IBTUBO3",70,0)
 . W $E($P(PT,"@@"),1,26) I $$BIL^DGMTUB(DFN,+DTE) W " *"
"RTN","IBTUBO3",71,0)
 . W ?29,$$SSN(DFN),?34,$E($$ELIG(DFN),1,5) S FL=1
"RTN","IBTUBO3",72,0)
 ;
"RTN","IBTUBO3",73,0)
 W ?39,$J(IBX,11)
"RTN","IBTUBO3",74,0)
 ; - Inpatient and Outpatient Only
"RTN","IBTUBO3",75,0)
 I X1'["RX" D
"RTN","IBTUBO3",76,0)
 . W ?52,$$DTE(+DTE) W:X1["INPT" $S($P(IBN,U,5):"H",1:"")
"RTN","IBTUBO3",77,0)
 . W ?62,$J($P(IBN,U),2),?65,$$INS(DFN,+DTE,34)
"RTN","IBTUBO3",78,0)
 . I X1["INPT" D
"RTN","IBTUBO3",79,0)
 .. I $P(IBN,U,2)'="" W ?98,$E($P(IBN,U,2),1,3),!
"RTN","IBTUBO3",80,0)
 .. I '$G(^TMP($J,X1_"_MRA",PT,DTE,IBX))!'$G(IBINMRA) W:$P(IBN,U,2)="" ! Q
"RTN","IBTUBO3",81,0)
 .. W ?98,$E($P(^TMP($J,X1_"_MRA",PT,DTE,IBX),U,2),1,3),?103,"M",!
"RTN","IBTUBO3",82,0)
 ;
"RTN","IBTUBO3",83,0)
 ; - Pharmacy Only
"RTN","IBTUBO3",84,0)
 I X1["RX" D  G LINQ
"RTN","IBTUBO3",85,0)
 . W ?52,$$DTE(+DTE),?61,$J($P(IBN,U),2),?64,$$INS(DFN,+DTE,19),?85,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:"")
"RTN","IBTUBO3",86,0)
 . W ?88,$E($P(IBN,U,6),1,15),?105,$E($P(IBN,U,2),1,14)
"RTN","IBTUBO3",87,0)
 . W ?123,$$DTE($P(IBN,U,3)) W:$P(IBN,"^",5) "$" W !
"RTN","IBTUBO3",88,0)
 ;
"RTN","IBTUBO3",89,0)
LINQ Q
"RTN","IBTUBO3",90,0)
 ;
"RTN","IBTUBO3",91,0)
SSN(DFN) ; - Return last 4 of patient's SSN.
"RTN","IBTUBO3",92,0)
 N SSN,VADM
"RTN","IBTUBO3",93,0)
 D DEM^VADPT S SSN=$P(VADM(2),"^"),SSN=$E(SSN,6,9) D KVA^VADPT
"RTN","IBTUBO3",94,0)
 Q SSN
"RTN","IBTUBO3",95,0)
 ;
"RTN","IBTUBO3",96,0)
ELIG(DFN) ; - Return patient's primary eligibility (1st 10 characters).
"RTN","IBTUBO3",97,0)
 N ELIG,VAEL
"RTN","IBTUBO3",98,0)
 D ELIG^VADPT S ELIG=$E($P(VAEL(1),"^",2),1,10) D KVAR^VADPT
"RTN","IBTUBO3",99,0)
 Q ELIG
"RTN","IBTUBO3",100,0)
 ;
"RTN","IBTUBO3",101,0)
DTE(D) ; - Format date (MM/DD/YY or MM/YY).
"RTN","IBTUBO3",102,0)
 Q $S('$G(D):"",1:$E(D,4,5)_"/"_$S($E(D,6,7)'="00":$E(D,6,7)_"/",1:"")_$E(D,2,3))
"RTN","IBTUBO3",103,0)
 ;
"RTN","IBTUBO3",104,0)
INS(P,D,C) ; - Return patient's insurance carrier(s).
"RTN","IBTUBO3",105,0)
 ;   Input: P=patient IEN, D=event date, C=Size of the Ins.Carrier column
"RTN","IBTUBO3",106,0)
 ;  Output: List of Providers
"RTN","IBTUBO3",107,0)
 ;
"RTN","IBTUBO3",108,0)
 I '$G(P)!('$G(D)) Q ""
"RTN","IBTUBO3",109,0)
 ;
"RTN","IBTUBO3",110,0)
 N INSC,INSL,INSN,LST,TMP,X
"RTN","IBTUBO3",111,0)
 ;
"RTN","IBTUBO3",112,0)
 S INSL="" D ALL^IBCNS1(P,"LST",1,D)
"RTN","IBTUBO3",113,0)
 S X=0 F  S X=$O(LST(X)) Q:'X  D
"RTN","IBTUBO3",114,0)
 . S INSC=+$G(LST(X,0)) Q:$D(TMP(INSC))!'INSC
"RTN","IBTUBO3",115,0)
 . S INSN=$P($G(^DIC(36,INSC,0)),U)
"RTN","IBTUBO3",116,0)
 . I $G(LST(0))>1 S INSN=$E(INSN,1,C\2)
"RTN","IBTUBO3",117,0)
 . S INSL=INSL_","_INSN
"RTN","IBTUBO3",118,0)
 . S TMP(INSC)=""
"RTN","IBTUBO3",119,0)
 ;
"RTN","IBTUBO3",120,0)
 S $E(INSL)=""
"RTN","IBTUBO3",121,0)
 I $L(INSL,",")>1,$L(INSL)>C D
"RTN","IBTUBO3",122,0)
 . S INSL=$E(INSL,1,C-3),$P(INSL,",",$L(INSL,","))="..."
"RTN","IBTUBO3",123,0)
 S INSL=$E(INSL,1,C)
"RTN","IBTUBO3",124,0)
 ;
"RTN","IBTUBO3",125,0)
 Q INSL
"RTN","IBTUBO3",126,0)
 ;
"RTN","IBTUBO3",127,0)
NIM ; - Print 'no info' message.
"RTN","IBTUBO3",128,0)
 W !?3,"No information available for the period specified."
"RTN","IBTUBO3",129,0)
 Q
"RTN","IBTUBO3",130,0)
 ;
"RTN","IBTUBO3",131,0)
PAUSE ; - Page break.
"RTN","IBTUBO3",132,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBTUBO3",133,0)
 N IBI,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBTUBO3",134,0)
 F IBI=$Y:1:(IOSL-3) W !
"RTN","IBTUBO3",135,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT)!($D(DUOUT)) IBQ=1
"RTN","IBTUBO3",136,0)
 Q
"RTN","IBTUBOA")
0^90^B27828043
"RTN","IBTUBOA",1,0)
IBTUBOA ;ALB/RB - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;01-JAN-01
"RTN","IBTUBOA",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,192,155**;21-MAR-94
"RTN","IBTUBOA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUBOA",4,0)
 ;
"RTN","IBTUBOA",5,0)
% ; - Entry point from Taskman.
"RTN","IBTUBOA",6,0)
 ;ARRAY VARIABLES:
"RTN","IBTUBOA",7,0)
 ;   IBAVG("BILLS-I")=number of inpatient institutional claims
"RTN","IBTUBOA",8,0)
 ;   IBAVG("BILLS-P")=number of inpatient professional claims
"RTN","IBTUBOA",9,0)
 ;   IBAVG("EPISD-I")=number of inpt. episodes for institutional claims
"RTN","IBTUBOA",10,0)
 ;   IBAVG("EPISD-P")=number of inpt. episodes for professional claims
"RTN","IBTUBOA",11,0)
 ;   IBAVG("$AMNT-I")=inpatient institutional amount billed
"RTN","IBTUBOA",12,0)
 ;   IBAVG("$AMNT-P")=inpatient professional amount billed
"RTN","IBTUBOA",13,0)
 ;   IBUNB("EPISM-I")=number of inpatient episodes missing inst. claims
"RTN","IBTUBOA",14,0)
 ;   IBUNB("EPISM-P")=number of inpatient episodes missing prof. claims
"RTN","IBTUBOA",15,0)
 ;   IBUNB("EPISM-I-MRA")=number of MRA req inpat institutional claims
"RTN","IBTUBOA",16,0)
 ;   IBUNB("EPISM-P-MRA")=number of MRA req inpat professional claims
"RTN","IBTUBOA",17,0)
 ;   IBUNB("EPISM-A")=number of inpatient admissions missing claims
"RTN","IBTUBOA",18,0)
 ;                   (any type: Prof,Inst or both)
"RTN","IBTUBOA",19,0)
 ;   IBUNB("EPISM-A-MRA")=number inpt MRA req admissions missing claims
"RTN","IBTUBOA",20,0)
 ;                   (any type: Prof,Inst or both)
"RTN","IBTUBOA",21,0)
 ;   IBUNB("ENCNTRS")=number of outpatient encounters missing claims
"RTN","IBTUBOA",22,0)
 ;   IBUNB("CPTMS-I")=number of CPT codes missing institutional claims
"RTN","IBTUBOA",23,0)
 ;   IBUNB("CPTMS-I-MRA")=number of MRA req CPT codes missing inst claims
"RTN","IBTUBOA",24,0)
 ;   IBUNB("CPTMS-P")=number of CPT codes missing professional claims
"RTN","IBTUBOA",25,0)
 ;   IBUNB("CPTMS-P-MRA")=number of MRA req CPT codes missing prof claims
"RTN","IBTUBOA",26,0)
 ;   IBUNB("PRESCRP")=number of unbilled prescriptions
"RTN","IBTUBOA",27,0)
 ;   IBUNB("PRESCRP-MRA")=number of MRA req prescriptions
"RTN","IBTUBOA",28,0)
 ;   IBUNB("UNBILIP")=unbilled inpatient amount
"RTN","IBTUBOA",29,0)
 ;   IBUNB("UNBILIP-MRA")=MRA req inpatient amount
"RTN","IBTUBOA",30,0)
 ;   IBUNB("UNBILOP")=unbilled outpatient amount
"RTN","IBTUBOA",31,0)
 ;   IBUNB("UNBILOP-MRA")=MRA req outpatient amount
"RTN","IBTUBOA",32,0)
 ;   IBUNB("UNBILRX")=unbilled prescription amount
"RTN","IBTUBOA",33,0)
 ;   IBUNB("UNBILRX-MRA")=MRA req prescription amount
"RTN","IBTUBOA",34,0)
 ;   IBUNB("UNBILTL")=total unbilled amount
"RTN","IBTUBOA",35,0)
 ;   IBUNB("UNBILTL-MRA")=total MRA req amount
"RTN","IBTUBOA",36,0)
 ; 
"RTN","IBTUBOA",37,0)
 ;ARRAY VARIABLES FOR DM EXTRACT:
"RTN","IBTUBOA",38,0)
 ;   IB(1)=Number of inpatient episodes missing institutional claims
"RTN","IBTUBOA",39,0)
 ;   IB(2)=Amount of inpatient episodes missing institutional claims
"RTN","IBTUBOA",40,0)
 ;   IB(3)=Number of inpatient episodes missing professional claims
"RTN","IBTUBOA",41,0)
 ;   IB(4)=Amount of inpatient episodes missing professional claims
"RTN","IBTUBOA",42,0)
 ;   IB(5)=Number of all inpatient episodes missing claims
"RTN","IBTUBOA",43,0)
 ;   IB(6)=Amount of all inpatient episodes missing claims
"RTN","IBTUBOA",44,0)
 ;   IB(7)=Number of unbilled outpatient encounters prior to 9/1/99
"RTN","IBTUBOA",45,0)
 ;   IB(8)=Amount of unbilled outpatient encounters prior to 9/1/99
"RTN","IBTUBOA",46,0)
 ;   IB(9)=Number of procedures without an institutional charge
"RTN","IBTUBOA",47,0)
 ;   IB(10)=Amount of procedures without an institutional charge
"RTN","IBTUBOA",48,0)
 ;   IB(11)=Number of procedures without a professional charge
"RTN","IBTUBOA",49,0)
 ;   IB(12)=Amount of procedures without a professional charge
"RTN","IBTUBOA",50,0)
 ;   IB(13)=Number of all procedures without a charge
"RTN","IBTUBOA",51,0)
 ;   IB(14)=Number of encounters associated with all procedures without
"RTN","IBTUBOA",52,0)
 ;          a charge
"RTN","IBTUBOA",53,0)
 ;   IB(15)=Number of all encounters missing claims
"RTN","IBTUBOA",54,0)
 ;   IB(16)=Amount of all encounters missing claims
"RTN","IBTUBOA",55,0)
 ;   IB(17)=Number of unbilled prescriptions and refills
"RTN","IBTUBOA",56,0)
 ;   IB(18)=Amount of unbilled prescriptions and refills
"RTN","IBTUBOA",57,0)
 ;   IB(19)=Amount of all unbilled episodes of care
"RTN","IBTUBOA",58,0)
 ;
"RTN","IBTUBOA",59,0)
 N IB,IBAMTI,IBAMTP,IBIAV,IBIA,IBNODE,IBOE,IBPA,IBQUERY,IBRX,IBSAV,IBT
"RTN","IBTUBOA",60,0)
 N IBAMTIM,IBAMTPM,IBTYP,IBX,IBY,DFN,DGPM,I,J
"RTN","IBTUBOA",61,0)
 ;
"RTN","IBTUBOA",62,0)
 K ^TMP($J,"IBTUB-INPT"),^TMP($J,"IBTUB-OPT"),^TMP($J,"IBTUB-RX")
"RTN","IBTUBOA",63,0)
 K ^TMP($J,"IBTUB-INPT_MRA"),^TMP($J,"IBTUB-OPT_MRA"),^TMP($J,"IBTUB-RX_MRA")
"RTN","IBTUBOA",64,0)
 ;
"RTN","IBTUBOA",65,0)
 ; - Initialize DM extract variables, if necessary.
"RTN","IBTUBOA",66,0)
 I $G(IBXTRACT) D E^IBJDE(37,1) F IBX=1:1:19 S IB(IBX)=0
"RTN","IBTUBOA",67,0)
 ;
"RTN","IBTUBOA",68,0)
 ; - Initialize Unbilled Amounts variables.
"RTN","IBTUBOA",69,0)
 S (IBUNB("ENCNTRS"),IBUNB("PRESCRP"),IBUNB("PRESCRP-MRA"))=0
"RTN","IBTUBOA",70,0)
 F IBX="IP","OP","RX" S IBUNB("UNBIL"_IBX)=0,IBUNB("UNBIL"_IBX_"-MRA")=0
"RTN","IBTUBOA",71,0)
 F IBX="I","P" S (IBUNB("EPISM-"_IBX),IBUNB("EPISM-"_IBX_"-MRA"),IBUNB("CPTMS-"_IBX),IBUNB("CPTMS-"_IBX_"-MRA"))=0
"RTN","IBTUBOA",72,0)
 S (IBUNB("EPISM-A"),IBUNB("EPISM-A-MRA"))=0
"RTN","IBTUBOA",73,0)
 ;
"RTN","IBTUBOA",74,0)
 ; - Retrieve the Rate Type code for Reimbursable Insurance
"RTN","IBTUBOA",75,0)
 S IBRT=$S($O(^DGCR(399.3,"B","REIMBURSABLE INS.",0)):$O(^(0)),1:8)
"RTN","IBTUBOA",76,0)
 ;
"RTN","IBTUBOA",77,0)
 ; - If Compile/Store - Checks if the Average Bill Amounts exists for
"RTN","IBTUBOA",78,0)
 ;   IBTIMON. If it does not, calls IBTUBAV to calculate/updated it.
"RTN","IBTUBOA",79,0)
 I $G(IBCOMP) D
"RTN","IBTUBOA",80,0)
 . I $P($G(^IBE(356.19,IBTIMON,1)),"^",14)'="" Q
"RTN","IBTUBOA",81,0)
 . ;
"RTN","IBTUBOA",82,0)
 . ; - DQ^IBTUBAV will kill the variables IBTIMON and IBCOMP - That's why
"RTN","IBTUBOA",83,0)
 . ;   they are being set again after this call.
"RTN","IBTUBOA",84,0)
 . S IBSAV=IBTIMON D DQ^IBTUBAV S IBTIMON=IBSAV,IBCOMP=1
"RTN","IBTUBOA",85,0)
 ;
"RTN","IBTUBOA",86,0)
PROC ; - Loops through all the entries in the Claims Tracking file for the
"RTN","IBTUBOA",87,0)
 ;   period selected and calculate the Unbilled Amounts
"RTN","IBTUBOA",88,0)
 S IBDT=IBBDT-.1
"RTN","IBTUBOA",89,0)
 ;
"RTN","IBTUBOA",90,0)
 F  S IBDT=$O(^IBT(356,"D",IBDT)) Q:'IBDT!(IBDT>IBEDT)  D
"RTN","IBTUBOA",91,0)
 . S IBX=0 F  S IBX=$O(^IBT(356,"D",IBDT,IBX)) Q:'IBX  D
"RTN","IBTUBOA",92,0)
 . . S IBNODE=$G(^IBT(356,IBX,0)) Q:IBNODE=""
"RTN","IBTUBOA",93,0)
 . . I $P(IBNODE,U,12) Q  ; Tort-Feasor,Workman's Comp,No-fault Auto Acc.
"RTN","IBTUBOA",94,0)
 . . I $P(IBNODE,U,19) Q  ;  Reason not billable assigned.
"RTN","IBTUBOA",95,0)
 . . I '$P(IBNODE,U,20) Q  ; Inactive.
"RTN","IBTUBOA",96,0)
 . . S DFN=+$P(IBNODE,U,2)
"RTN","IBTUBOA",97,0)
 . . I '$$PTCHK^IBTUBOU(DFN,IBNODE) Q  ; Has a non-veteran eligibility.
"RTN","IBTUBOA",98,0)
 . . I '$$INSURED^IBCNS1(DFN,IBDT) Q  ;  Not insured during care.
"RTN","IBTUBOA",99,0)
 . . I $P(IBNODE,U,5),IBSEL[1,$$COV^IBTUBOU(DFN,IBDT,1) D  Q  ;Inpatient
"RTN","IBTUBOA",100,0)
 . . . S DGPM=+$P(IBNODE,U,5) D INPT^IBTUBO2(DGPM)
"RTN","IBTUBOA",101,0)
 . . I $P(IBNODE,U,4),IBSEL[2,$$COV^IBTUBOU(DFN,IBDT,2) D  Q  ;Outpatient
"RTN","IBTUBOA",102,0)
 . . . S IBOE=+$P(IBNODE,U,4) I $$NCCL^IBTUBOU(IBOE) Q  ; Non-Count Clinic
"RTN","IBTUBOA",103,0)
 . . . D OPT^IBTUBO1(IBOE,.IBQUERY)
"RTN","IBTUBOA",104,0)
 . . I $P(IBNODE,U,8),IBSEL[3,$$COV^IBTUBOU(DFN,IBDT,3) D  Q  ;Prescription
"RTN","IBTUBOA",105,0)
 . . . S IBRX=+$P(IBNODE,U,8) D RX^IBTUBO2(IBRX)
"RTN","IBTUBOA",106,0)
 . . ;
"RTN","IBTUBOA",107,0)
 . . ; - Check CT entry event type to get unbilled amounts, if necessary.
"RTN","IBTUBOA",108,0)
 . . S IBTYP=$P($G(^IBE(356.6,+$P(IBNODE,U,18),0)),U,8)
"RTN","IBTUBOA",109,0)
 . . I IBTYP=1,IBSEL[1,$$COV^IBTUBOU(DFN,IBDT,1) D
"RTN","IBTUBOA",110,0)
 . . . D INPT^IBTUBO2(+$O(^DGPM("APTT1",DFN,IBDT,0)))
"RTN","IBTUBOA",111,0)
 . . I IBTYP=2,IBSEL[2,$$COV^IBTUBOU(DFN,IBDT,2) D
"RTN","IBTUBOA",112,0)
 . . . D OPT^IBTUBO1("",.IBQUERY)
"RTN","IBTUBOA",113,0)
 ;
"RTN","IBTUBOA",114,0)
 I $G(IBXTRACT) D XTRACT^IBTUBOU ; Load extract file, if necessary.
"RTN","IBTUBOA",115,0)
 ;
"RTN","IBTUBOA",116,0)
 ; - Calculate the Amount Inpatient INST. & PROF. Unbilled Amounts,
"RTN","IBTUBOA",117,0)
 ;   based on average amounts of Billed Amounts
"RTN","IBTUBOA",118,0)
 S IBIAV=$$INPAVG^IBTUBOU(IBTIMON)
"RTN","IBTUBOA",119,0)
 S IBAMTI=$P(IBIAV,"^")*IBUNB("EPISM-I") ; Inst
"RTN","IBTUBOA",120,0)
 S IBAMTIM=$P(IBIAV,"^")*IBUNB("EPISM-I-MRA") ; Inst
"RTN","IBTUBOA",121,0)
 S IBAMTP=$P(IBIAV,"^",2)*IBUNB("EPISM-P") ; Prof
"RTN","IBTUBOA",122,0)
 S IBAMTPM=$P(IBIAV,"^",2)*IBUNB("EPISM-P-MRA") ; Prof
"RTN","IBTUBOA",123,0)
 ;
"RTN","IBTUBOA",124,0)
 ; - Calculate Unbilled Amounts Totals
"RTN","IBTUBOA",125,0)
 S IBUNB("UNBILIP")=$J(IBAMTI+IBAMTP,0,2)
"RTN","IBTUBOA",126,0)
 S IBUNB("UNBILIP-MRA")=$J(IBAMTIM+IBAMTPM,0,2)
"RTN","IBTUBOA",127,0)
 S IBUNB("UNBILOP")=$J(IBUNB("UNBILOP"),0,2)
"RTN","IBTUBOA",128,0)
 S IBUNB("UNBILOP-MRA")=$J(IBUNB("UNBILOP-MRA"),0,2)
"RTN","IBTUBOA",129,0)
 S IBUNB("UNBILRX")=$J(IBUNB("UNBILRX"),0,2)
"RTN","IBTUBOA",130,0)
 S IBUNB("UNBILRX-MRA")=$J(IBUNB("UNBILRX-MRA"),0,2)
"RTN","IBTUBOA",131,0)
 S IBUNB("UNBILTL")=$J(IBUNB("UNBILIP")+IBUNB("UNBILOP")+IBUNB("UNBILRX"),0,2)
"RTN","IBTUBOA",132,0)
 S IBUNB("UNBILTL-MRA")=$J(IBUNB("UNBILIP-MRA")+IBUNB("UNBILOP-MRA")+IBUNB("UNBILRX-MRA"),0,2)
"RTN","IBTUBOA",133,0)
 ;
"RTN","IBTUBOA",134,0)
 ; - If Compile/Store - update Unbilled Amounts data on file #356.19
"RTN","IBTUBOA",135,0)
 I $G(IBCOMP) D LD^IBTUBOU(3,IBTIMON)
"RTN","IBTUBOA",136,0)
 ;
"RTN","IBTUBOA",137,0)
PRT ; - Print report(s).
"RTN","IBTUBOA",138,0)
 I $G(IBQUERY) D CLOSE^IBSDU(.IBQUERY)
"RTN","IBTUBOA",139,0)
 D REPORT^IBTUBO3
"RTN","IBTUBOA",140,0)
 ;
"RTN","IBTUBOA",141,0)
END K ^TMP($J,"IBTUB-INPT"),^TMP($J,"IBTUB-OPT"),^TMP($J,"IBTUB-RX")
"RTN","IBTUBOA",142,0)
 K IBDT,IBRT,IBUNB
"RTN","IBTUBOA",143,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBTUBOA",144,0)
 D ^%ZISC K IBTEMON,IBXTRACT,D,D0,DA,DIC,DIE
"RTN","IBTUBOA",145,0)
 Q
"RTN","IBTUBOU")
0^91^B38728907
"RTN","IBTUBOU",1,0)
IBTUBOU ;ALB/RB - UNBILLED AMOUNTS (UTILITIES) ;03 Aug 2004  7:21 AM
"RTN","IBTUBOU",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,155**;21-MAR-94
"RTN","IBTUBOU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUBOU",4,0)
 ;
"RTN","IBTUBOU",5,0)
DT1 ; - Select date range (returns variables IBBDT and IBEDT).
"RTN","IBTUBOU",6,0)
 N DT0,DT1,DTOUT,DUOUT,Y
"RTN","IBTUBOU",7,0)
 S DT0=$O(^IBT(356,"D",""))\1,DT1=""
"RTN","IBTUBOU",8,0)
 I DT0 S DT1=$$DAT3^IBOUTL(DT0),DIR("B")=DT1
"RTN","IBTUBOU",9,0)
 S DIR(0)="DA^"_DT0_":"_DT_":AEX",DIR("A")="Start with DATE: "
"RTN","IBTUBOU",10,0)
 S DIR("?",1)="If you enter a start date here, the report will look for"
"RTN","IBTUBOU",11,0)
 S DIR("?",2)="events ON or AFTER this date. Press <CR> if you want to"
"RTN","IBTUBOU",12,0)
 S DIR("?",3)="skip this prompt and have the report look thru ALL events"
"RTN","IBTUBOU",13,0)
 S DIR("?",4)="or enter '^' to exit.",DIR("?",5)=""
"RTN","IBTUBOU",14,0)
 S DIR("?",6)="NOTE: The earliest date that can be entered is "_DT1_","
"RTN","IBTUBOU",15,0)
 S DIR("?",7)="      which is the date of the first event on file, and"
"RTN","IBTUBOU",16,0)
 S DIR("?")="      it is NOT possible to enter a future date."
"RTN","IBTUBOU",17,0)
 D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S IBBDT="^" G DT1Q
"RTN","IBTUBOU",18,0)
 S IBBDT=Y,DT1=$$DAT3^IBOUTL(IBBDT)
"RTN","IBTUBOU",19,0)
 ;
"RTN","IBTUBOU",20,0)
 S DIR("B")=$$DAT3^IBOUTL(DT)
"RTN","IBTUBOU",21,0)
 S DIR(0)="DA^"_IBBDT_":"_DT_":AEX",DIR("A")="     Go to DATE: "
"RTN","IBTUBOU",22,0)
 S DIR("?",1)="If you enter a end date here, the report will look for"
"RTN","IBTUBOU",23,0)
 S DIR("?",2)="events from "_DT1_" to this date. Press <CR> to have"
"RTN","IBTUBOU",24,0)
 S DIR("?",3)="the report look at all events from "_DT1_" to today,"
"RTN","IBTUBOU",25,0)
 S DIR("?",4)="or enter '^' to exit."
"RTN","IBTUBOU",26,0)
 S DIR("?",5)=""
"RTN","IBTUBOU",27,0)
 S DIR("?",6)="NOTE: This date MUST NOT be earlier than "_DT1_" neither"
"RTN","IBTUBOU",28,0)
 S DIR("?")="      later than today."
"RTN","IBTUBOU",29,0)
 D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S IBBDT="^" G DT1Q
"RTN","IBTUBOU",30,0)
 S IBEDT=Y+.9
"RTN","IBTUBOU",31,0)
 ;
"RTN","IBTUBOU",32,0)
DT1Q Q
"RTN","IBTUBOU",33,0)
 ;
"RTN","IBTUBOU",34,0)
DT2(STR) ; - Select re-compile date (returns variable IBTIMON).
"RTN","IBTUBOU",35,0)
 ; Input: STR - String that describe the type of data that will be 
"RTN","IBTUBOU",36,0)
 ;        re-compiled: "Unbilled Amounts", "Average Bill Amounts", etc...
"RTN","IBTUBOU",37,0)
 ;
"RTN","IBTUBOU",38,0)
 N DIRUT,DT0,DT1,DT2,Y
"RTN","IBTUBOU",39,0)
 ; - AUG 1993 is the first month on file with Unbilled Amounts data
"RTN","IBTUBOU",40,0)
 S DT0=2930800,DT1=$$DAT2^IBOUTL(DT0)
"RTN","IBTUBOU",41,0)
 S DT2=$$M1^IBJDE(DT,1),DIR("B")=$$DAT2^IBOUTL(DT2)
"RTN","IBTUBOU",42,0)
 S DIR(0)="DA^"_$E(DT0,1,5)_"00:"_DT2_":AE^K:$E(Y,6,7)'=""00"" X"
"RTN","IBTUBOU",43,0)
 S DIR("A")="Re-compile "_$G(STR)_" through MONTH/YEAR: "
"RTN","IBTUBOU",44,0)
 S DIR("?",1)="Enter a past month/year (ex. Oct 2000).",DIR("?",2)=""
"RTN","IBTUBOU",45,0)
 S DIR("?",3)="NOTE: The earliest month/year that can be entered is "_DT1_", and"
"RTN","IBTUBOU",46,0)
 S DIR("?")="      it is NOT possible to enter the current or a future month/year."
"RTN","IBTUBOU",47,0)
 D ^DIR K DIR I $D(DIRUT) S IBTIMON="^" G DT2Q
"RTN","IBTUBOU",48,0)
 I $E(Y,6,7)'="00"!($E(Y,4,7)="0000") W "  ??" G DT2
"RTN","IBTUBOU",49,0)
 S IBTIMON=Y
"RTN","IBTUBOU",50,0)
 ;
"RTN","IBTUBOU",51,0)
DT2Q Q
"RTN","IBTUBOU",52,0)
 ;
"RTN","IBTUBOU",53,0)
YR2(D) ; - Return a date two years from date D.
"RTN","IBTUBOU",54,0)
 N X,X1,X2 S X="" G:'$G(D) YR2Q S X1=D,X2=-730 D C^%DTC
"RTN","IBTUBOU",55,0)
 ;
"RTN","IBTUBOU",56,0)
YR2Q Q X
"RTN","IBTUBOU",57,0)
 ;
"RTN","IBTUBOU",58,0)
COV(P,E,T) ; - Check if patient has insurance coverage.
"RTN","IBTUBOU",59,0)
 ;    Input: P=patient IEN, E=event date,
"RTN","IBTUBOU",60,0)
 ;           T=1-inpatient/2-outpatient/3-pharmacy
"RTN","IBTUBOU",61,0)
 ;   Output: Y=1-patient has coverage/0-no coverage or unknown
"RTN","IBTUBOU",62,0)
 N X,XY,Y S Y=0 G:'$G(P)!('$G(E))!('$G(T)) COVQ
"RTN","IBTUBOU",63,0)
 S X=$S(T=1:"INPATIENT",T=2:"OUTPATIENT",1:"PHARMACY")
"RTN","IBTUBOU",64,0)
 S Y=$$PTCOV^IBCNSU3(P,E,X,.XY)
"RTN","IBTUBOU",65,0)
 ;
"RTN","IBTUBOU",66,0)
COVQ Q Y
"RTN","IBTUBOU",67,0)
 ;
"RTN","IBTUBOU",68,0)
PTCHK(DFN,IBNODE) ; - See if patient has a non-veteran eligibility.
"RTN","IBTUBOU",69,0)
 ;    Input: DFN=patient IEN
"RTN","IBTUBOU",70,0)
 ;           IBNODE=zero node to CT entry
"RTN","IBTUBOU",71,0)
 ;   Output: IBFLAG=0-nonbillable, 1-billable 
"RTN","IBTUBOU",72,0)
 N IBFLAG S IBFLAG=0 G:'$G(DFN) PTCKQ
"RTN","IBTUBOU",73,0)
 I $D(^DPT(+DFN,.312)),$G(^("VET"))="Y" S IBFLAG=1
"RTN","IBTUBOU",74,0)
 I $P(IBNODE,U,4),$P($G(^DIC(8,+$$SCE^IBSDU(+$P(IBNODE,U,4),13),0)),U,5)="N" S IBFLAG=0
"RTN","IBTUBOU",75,0)
 ;
"RTN","IBTUBOU",76,0)
PTCKQ Q IBFLAG
"RTN","IBTUBOU",77,0)
 ;
"RTN","IBTUBOU",78,0)
NCCL(ENC) ; - Check if Encounter is NON-COUNT CLINIC
"RTN","IBTUBOU",79,0)
 ;    Input: ENC = Pointer to the ENCOUNTER file (#409.69)
"RTN","IBTUBOU",80,0)
 ;   Output: NCCL= 1 - NON-COUNT CLINIC / 0 - NO NON-COUNT CLINIC
"RTN","IBTUBOU",81,0)
 N NCCL,HLOC
"RTN","IBTUBOU",82,0)
 S NCCL=0,HLOC=$$SCE^IBSDU(+ENC,4)
"RTN","IBTUBOU",83,0)
 I HLOC,$P($G(^SC(+HLOC,0)),"^",17)="Y" S NCCL=1
"RTN","IBTUBOU",84,0)
 ;
"RTN","IBTUBOU",85,0)
 Q NCCL
"RTN","IBTUBOU",86,0)
 ;
"RTN","IBTUBOU",87,0)
HOSP(ADM) ; Is the patient still hospitalized (not discharged)?
"RTN","IBTUBOU",88,0)
 ; Input: ADM  = Pointer to the PATIENT MOVEMENT file (#405)
"RTN","IBTUBOU",89,0)
 ;Output: HOSP = 1 - Hospitalized / 0 - Discharged
"RTN","IBTUBOU",90,0)
 ;
"RTN","IBTUBOU",91,0)
 N HOSP,X
"RTN","IBTUBOU",92,0)
 S HOSP=1,X=$G(^DGPM(+ADM,0)) I $P(X,"^",17) S HOSP=0
"RTN","IBTUBOU",93,0)
 ;
"RTN","IBTUBOU",94,0)
 Q HOSP
"RTN","IBTUBOU",95,0)
 ;
"RTN","IBTUBOU",96,0)
CKBIL(X,Y) ; - Return valid claim data.
"RTN","IBTUBOU",97,0)
 ;    Input: X=IEN from file #399, Y=0-outpatient, 1-inpatient
"RTN","IBTUBOU",98,0)
 ;   Output: Z=rate^status^auth date^1-inst claim/2-prof claim^
"RTN","IBTUBOU",99,0)
 ;             event date (if Y=1), or null^req MRA date
"RTN","IBTUBOU",100,0)
 N X1,X2,Y1,Z S Z="" G:'$G(X) CKBLQ S:'$G(Y) Y=0
"RTN","IBTUBOU",101,0)
 S X1=$G(^DGCR(399,X,0)) G:X1="" CKBLQ
"RTN","IBTUBOU",102,0)
 I $G(DFN),$P(X1,U,2)'=DFN G CKBLQ ;              Invalid patient IEN.
"RTN","IBTUBOU",103,0)
 I '$G(IBRX),'Y,'$$NOTRX(X) G CKBLQ ;             Bill has RX rev codes.
"RTN","IBTUBOU",104,0)
 I $P(X1,U,5)<3,'Y G CKBLQ ;                      Not inpatient bill.
"RTN","IBTUBOU",105,0)
 I $P(X1,U,5)>2,Y G CKBLQ ;                       Not outpatient bill.
"RTN","IBTUBOU",106,0)
 I $P(X1,U,11)'="i" G CKBLQ ;                     Not an insurance bill.
"RTN","IBTUBOU",107,0)
 S X2=$P($G(^DGCR(399,X,"S")),U,10)
"RTN","IBTUBOU",108,0)
 I 'X2 G:$P(X1,U,13)'=2 CKBLQ ; No authorization date, not MRA req
"RTN","IBTUBOU",109,0)
 I $P(X1,U,13)<2!($P(X1,U,13)>5) G CKBLQ ; Status not auth, prin, trans.
"RTN","IBTUBOU",110,0)
 S Z=$P(X1,U,7)_U_$P(X1,U,13)_U_X2,Y1=$P($P(X1,U,3),".")
"RTN","IBTUBOU",111,0)
 S:$P(X1,U,13)=2 $P(Z,U,6)=$P($G(^DGCR(399,X,"S")),U,7)
"RTN","IBTUBOU",112,0)
 I $P(X1,U,27)=1!($P(X1,U,19)=3)!(Y1<2990901) S $P(Z,U,4)=1 G CKBL1
"RTN","IBTUBOU",113,0)
 I $P(X1,U,27)=2!($P(X1,U,19)=2) S $P(Z,U,4)=2
"RTN","IBTUBOU",114,0)
 I '$P(Z,U,4) S Z="" G CKBLQ ; Not institutional or professional bill.
"RTN","IBTUBOU",115,0)
CKBL1 I Y S $P(Z,U,5)=Y1
"RTN","IBTUBOU",116,0)
 ;
"RTN","IBTUBOU",117,0)
CKBLQ Q Z
"RTN","IBTUBOU",118,0)
 ;
"RTN","IBTUBOU",119,0)
CKENC(IBOE,IBOE0,IBQUIT) ; - Check outpatient encounters.
"RTN","IBTUBOU",120,0)
 N IBCK,IBZ,IBPB,IBZERR
"RTN","IBTUBOU",121,0)
 I $G(IBOE0)="" D GETGEN^SDOE(IBOE,"IBZ","IBZERR") S IBOE0=$G(IBZ(0))
"RTN","IBTUBOU",122,0)
 F IBZ=9,13,14 S IBCK(IBZ)=""
"RTN","IBTUBOU",123,0)
 I '$$BILLCK^IBAMTEDU(IBOE,IBOE0) S IBQUIT=1 ; Not billable.
"RTN","IBTUBOU",124,0)
 Q
"RTN","IBTUBOU",125,0)
 ;
"RTN","IBTUBOU",126,0)
SCAN(DFN,IBDT,IBQUERY) ; - Look at all visits for a day.
"RTN","IBTUBOU",127,0)
 N IBNDT,IBVAL,IBFILTER,IBCBK
"RTN","IBTUBOU",128,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=IBDT,IBVAL("EDT")=IBDT,IBFILTER=""
"RTN","IBTUBOU",129,0)
 S IBCBK="I $P(Y0,U,8)=3,Y0>IBDT S:'IBNDT IBNDT=+Y0 D:IBNDT=+Y0 CKENC^IBTUBOU(Y,Y0,.IBQUIT) S:$S('$G(IBQUIT):1,1:Y0>IBNDT) SDSTOP=1"
"RTN","IBTUBOU",130,0)
 S IBNDT=0 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,IBCBK,0,.IBQUERY)
"RTN","IBTUBOU",131,0)
 Q
"RTN","IBTUBOU",132,0)
 ;
"RTN","IBTUBOU",133,0)
SC(PTF) ; - If patient is SC, are movements for SC care.
"RTN","IBTUBOU",134,0)
 ;    Input: PTF=PTF record
"RTN","IBTUBOU",135,0)
 ;   Output: IBM=1-all movements PTF, 0-one or more not flagged as SC
"RTN","IBTUBOU",136,0)
 N M,IBM S IBM=1,M=0 G:$G(^DGPT(+$G(PTF),0))="" SCQ
"RTN","IBTUBOU",137,0)
 F  S M=$O(^DGPT(PTF,"M",M)) Q:'M  D  Q:'IBM
"RTN","IBTUBOU",138,0)
 .I $P($G(^DGPT(PTF,"M",M,0)),U,18)'=1 S IBM=0
"RTN","IBTUBOU",139,0)
 ;
"RTN","IBTUBOU",140,0)
SCQ Q IBM
"RTN","IBTUBOU",141,0)
 ;
"RTN","IBTUBOU",142,0)
LD(L,M) ; - Load average/unbilled totals into file #356.19
"RTN","IBTUBOU",143,0)
 ;   Input: L=1-average (mon), 2-average (12m), 3-unbilled
"RTN","IBTUBOU",144,0)
 ;          M=file #356.19 IEN
"RTN","IBTUBOU",145,0)
 I '$G(L)!('$G(M)) G LDQ
"RTN","IBTUBOU",146,0)
 S DA=M,DIE="^IBE(356.19,"
"RTN","IBTUBOU",147,0)
 S DR=$S(L=3:"[IBT UNBILLED AMOUNTS]",L=2:"[IBT AVERAGE BILL AMOUNTS (12M)]",1:"[IBT AVERAGE BILL AMOUNTS (MON)]")
"RTN","IBTUBOU",148,0)
 D ^DIE K DA,DIE,DR
"RTN","IBTUBOU",149,0)
 ;
"RTN","IBTUBOU",150,0)
LDQ Q
"RTN","IBTUBOU",151,0)
 ;
"RTN","IBTUBOU",152,0)
XTRACT ; - Calculate remaining extract totals and load into file #351.71
"RTN","IBTUBOU",153,0)
 ; - Set IB with the average and total amounts and call E^IBJDE
"RTN","IBTUBOU",154,0)
 N X,AVGS
"RTN","IBTUBOU",155,0)
 S AVGS=$$INPAVG(IBTIMON)
"RTN","IBTUBOU",156,0)
 S IB(2)=$J(IB(1)*$P(AVGS,"^"),0,2)
"RTN","IBTUBOU",157,0)
 S IB(4)=$J(IB(3)*$P(AVGS,"^",2),0,2)
"RTN","IBTUBOU",158,0)
 S IB(6)=$J(IB(2)+IB(4),0,2)
"RTN","IBTUBOU",159,0)
 S IB(13)=IB(9)+IB(11),IB(15)=IB(7)+IB(14)
"RTN","IBTUBOU",160,0)
 F X=8,10,12,18 S IB(X)=$J(IB(X),0,2)
"RTN","IBTUBOU",161,0)
 S IB(16)=$J(IB(8)+IB(10)+IB(12),0,2)
"RTN","IBTUBOU",162,0)
 S IB(19)=$J(IB(6)+IB(16)+IB(18),0,2)
"RTN","IBTUBOU",163,0)
 D E^IBJDE(37,0)
"RTN","IBTUBOU",164,0)
 Q
"RTN","IBTUBOU",165,0)
 ;
"RTN","IBTUBOU",166,0)
INPAVG(IBYRMO) ; - Calculate the Average Inpatient INST. & PROF. Billed Amounts
"RTN","IBTUBOU",167,0)
 ; Input: IBYRMO - YEAR/MONTH (YYYMM00) being calculated/updated
"RTN","IBTUBOU",168,0)
 ; Output: Avg.Inpt.Inst.Bill Amount ^ Avg.Inpt.Prof. Bill Amount
"RTN","IBTUBOU",169,0)
 ;
"RTN","IBTUBOU",170,0)
 N AVGI,AVGP,ND I '$G(IBYRMO) Q ""
"RTN","IBTUBOU",171,0)
 F  Q:$P($G(^IBE(356.19,IBYRMO,1)),"^",14)'=""!'IBYRMO  D
"RTN","IBTUBOU",172,0)
 . S IBYRMO=$O(^IBE(356.19,IBYRMO),-1)
"RTN","IBTUBOU",173,0)
 S (AVGI,AVGP)=0 I 'IBYRMO Q ""
"RTN","IBTUBOU",174,0)
 S ND=$G(^IBE(356.19,IBYRMO,1))
"RTN","IBTUBOU",175,0)
 I $P(ND,"^",9) S AVGI=$J($P(ND,"^",8)/$P(ND,"^",9),0,2)
"RTN","IBTUBOU",176,0)
 I $P(ND,"^",12) S AVGP=$J($P(ND,"^",11)/$P(ND,"^",12),0,2)
"RTN","IBTUBOU",177,0)
 Q (AVGI_"^"_AVGP)
"RTN","IBTUBOU",178,0)
 ;
"RTN","IBTUBOU",179,0)
NOTRX(BILL) ; - Determine if bill contains outpatient visit (use this check
"RTN","IBTUBOU",180,0)
 ;   to make sure not just rx bill returns one if contains a revenue
"RTN","IBTUBOU",181,0)
 ;   code for outpatient visit or a zero if no outpatient visit code
"RTN","IBTUBOU",182,0)
 ;   on bill).
"RTN","IBTUBOU",183,0)
 N IBRX,RC,X
"RTN","IBTUBOU",184,0)
 S (IBRX,RC)=0 G:'$O(^DGCR(399,BILL,"OP",0)) NOTRXQ
"RTN","IBTUBOU",185,0)
 F  S RC=$O(^DGCR(399,BILL,"RC",RC)) Q:'RC  I $P($G(^DGCR(399.1,+$P($G(^DGCR(399,BILL,"RC",RC,0)),U,5),0)),U)'="PRESCRIPTION" S IBRX=1 Q
"RTN","IBTUBOU",186,0)
 ;
"RTN","IBTUBOU",187,0)
NOTRXQ Q IBRX
"RTN","IBTUBUL")
0^92^B20146388
"RTN","IBTUBUL",1,0)
IBTUBUL ;ALB/AAS - UNBILLED AMOUNTS ;29-SEP-94
"RTN","IBTUBUL",2,0)
 ;;2.0;INTEGRATED BILLING;**19,123,159,217,155**;21-MAR-94
"RTN","IBTUBUL",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUBUL",4,0)
 ;
"RTN","IBTUBUL",5,0)
TEST ; - Create and send test bulletin.
"RTN","IBTUBUL",6,0)
 N IBBDT,IBEDT,IBSEL,IBTEST
"RTN","IBTUBUL",7,0)
 S IBBDT=DT,IBEDT=DT,IBSEL="1,2,3",IBTEST=1
"RTN","IBTUBUL",8,0)
 ;
"RTN","IBTUBUL",9,0)
BULL ; - Create and send bulletin.
"RTN","IBTUBUL",10,0)
 N IBGRP,IBT,IBX,XMDUZ,XMSUB,XMTEXT,XMN,XMY,XMZ,I,IDX,X,Y
"RTN","IBTUBUL",11,0)
 ;
"RTN","IBTUBUL",12,0)
 S XMSUB="UNBILLED AMOUNTS SUMMARY REPORT"_$S($G(IBTEST):" (TEST)",1:"")
"RTN","IBTUBUL",13,0)
 S IBX=$P($$SITE^VASITE,U,2,3)
"RTN","IBTUBUL",14,0)
 S IBT(1)="SUMMARY UNBILLED AMOUNTS FOR "_$P(IBX,U)_" ("_$P(IBX,U,2)_")."
"RTN","IBTUBUL",15,0)
 S IBT(2)="PERIOD: FROM "_$$DAT1^IBOUTL(IBBDT)_" TO "_$$DAT1^IBOUTL(IBEDT)
"RTN","IBTUBUL",16,0)
 S IDX=3
"RTN","IBTUBUL",17,0)
 I $G(IBDET) S IBT(3)="DETAILED REPORT PRINTED TO '"_IO_"'",IDX=4
"RTN","IBTUBUL",18,0)
 I $G(IBCOMP) D
"RTN","IBTUBUL",19,0)
 . S IBT(IDX)="UNBILLED AMOUNTS FIGURES STORED FOR "_$$DAT2^IBOUTL(IBTIMON)
"RTN","IBTUBUL",20,0)
 . S IDX=IDX+1
"RTN","IBTUBUL",21,0)
 ;
"RTN","IBTUBUL",22,0)
 S IBT(IDX)="",IDX=IDX+1
"RTN","IBTUBUL",23,0)
 I $G(IBTEST) D  G BULL1
"RTN","IBTUBUL",24,0)
 .S IBT(IDX)="*** TEST DATA, TEST DATA ***",IDX=IDX+1 D TESTV
"RTN","IBTUBUL",25,0)
 ;
"RTN","IBTUBUL",26,0)
BULL1 ; - Create bulletin.
"RTN","IBTUBUL",27,0)
 I IBSEL[1 D
"RTN","IBTUBUL",28,0)
 . S X=$$INPAVG^IBTUBOU(IBTIMON)
"RTN","IBTUBUL",29,0)
 . S IBT(IDX+1)="Inpatient Care:"
"RTN","IBTUBUL",30,0)
 . S IBT(IDX+2)="   Number of Unbilled Inpatient Admissions : "_$J(IBUNB("EPISM-A"),11)
"RTN","IBTUBUL",31,0)
 . S IBT(IDX+3)="   Number of MRA Unbilled Inpt Admissions  : "_$J(IBUNB("EPISM-A-MRA"),11)
"RTN","IBTUBUL",32,0)
 . S IBT(IDX+4)="   Number of Inpt. Institutional Cases     : "_$J(IBUNB("EPISM-I"),11)
"RTN","IBTUBUL",33,0)
 . S IBT(IDX+5)="   Average Inpt. Institutional Bill Amount : "_$J($P(X,"^"),11,2)
"RTN","IBTUBUL",34,0)
 . S IBT(IDX+6)="   Number of Inpt. Professional Cases      : "_$J(IBUNB("EPISM-P"),11)
"RTN","IBTUBUL",35,0)
 . S IBT(IDX+7)="   Average Inpt. Professional Bill Amount  : "_$J($P(X,"^",2),11,2)
"RTN","IBTUBUL",36,0)
 . S IBT(IDX+8)="   Total Unbilled Inpatient Care           : "_$J(IBUNB("UNBILIP"),11,2)
"RTN","IBTUBUL",37,0)
 . S IBT(IDX+9)="   Total MRA Unbilled Inpatient Care       : "_$J(IBUNB("UNBILIP-MRA"),11,2)
"RTN","IBTUBUL",38,0)
 . S IBT(IDX+10)="",IDX=IDX+10
"RTN","IBTUBUL",39,0)
 ;
"RTN","IBTUBUL",40,0)
 I IBSEL[2 D
"RTN","IBTUBUL",41,0)
 .S IBT(IDX+1)="Outpatient Care:"
"RTN","IBTUBUL",42,0)
 .S IBT(IDX+2)="   Number of Unbilled Outpatient Cases     : "_$J(IBUNB("ENCNTRS"),11)
"RTN","IBTUBUL",43,0)
 .S IBT(IDX+3)="   Number of Unbilled CPT Codes            : "_$J(IBUNB("CPTMS-I")+IBUNB("CPTMS-P"),11)
"RTN","IBTUBUL",44,0)
 .S IBT(IDX+4)="   Number of MRA Unbilled CPT Codes        : "_$J(IBUNB("CPTMS-I-MRA")+IBUNB("CPTMS-P-MRA"),11)
"RTN","IBTUBUL",45,0)
 .S IBT(IDX+5)="   Total Unbilled Outpatient Care          : "_$J(IBUNB("UNBILOP"),11,2)
"RTN","IBTUBUL",46,0)
 .S IBT(IDX+6)="   Total MRA Unbilled Outpatient Care      : "_$J(IBUNB("UNBILOP-MRA"),11,2)
"RTN","IBTUBUL",47,0)
 .S IBT(IDX+7)="",IDX=IDX+7
"RTN","IBTUBUL",48,0)
 ;
"RTN","IBTUBUL",49,0)
 I IBSEL[3 D
"RTN","IBTUBUL",50,0)
 .S IBT(IDX+1)="Prescriptions:"
"RTN","IBTUBUL",51,0)
 .S IBT(IDX+2)="   Number of Unbilled Prescriptions        : "_$J(IBUNB("PRESCRP"),11)
"RTN","IBTUBUL",52,0)
 .S IBT(IDX+3)="   Number of MRA Unbilled Prescriptions    : "_$J(IBUNB("PRESCRP-MRA"),11)
"RTN","IBTUBUL",53,0)
 .S IBT(IDX+4)="   Total Unbilled Prescriptions            : "_$J(IBUNB("UNBILRX"),11,2)
"RTN","IBTUBUL",54,0)
 .S IBT(IDX+5)="   Total MRA Unbilled Prescriptions        : "_$J(IBUNB("UNBILRX-MRA"),11,2)
"RTN","IBTUBUL",55,0)
 .S IBT(IDX+6)="",IDX=IDX+6
"RTN","IBTUBUL",56,0)
 ;
"RTN","IBTUBUL",57,0)
 I IBSEL="1,2,3" D
"RTN","IBTUBUL",58,0)
 .S IBT(IDX+1)="Total Unbilled Amount (all care)           : "_$J(IBUNB("UNBILTL"),11,2)
"RTN","IBTUBUL",59,0)
 .S IBT(IDX+2)="Total MRA Unbilled Amount (all care)       : "_$J(IBUNB("UNBILTL-MRA"),11,2)
"RTN","IBTUBUL",60,0)
 .S IDX(IDX+3)="",IDX=IDX+3
"RTN","IBTUBUL",61,0)
 ;
"RTN","IBTUBUL",62,0)
 S IBT(IDX+1)="",IDX=IDX+1
"RTN","IBTUBUL",63,0)
 I IBSEL[1 D
"RTN","IBTUBUL",64,0)
 . S IBT(IDX+1)="Note:  Average bill Amount is based on Bills Authorized during the 12"
"RTN","IBTUBUL",65,0)
 . S IBT(IDX+2)="       months preceding the month of this report."
"RTN","IBTUBUL",66,0)
 . S IDX=IDX+2
"RTN","IBTUBUL",67,0)
 ;
"RTN","IBTUBUL",68,0)
 S IBT(IDX+1)="Note:  Number of cases is insured cases in Claims Tracking that are"
"RTN","IBTUBUL",69,0)
 S IBT(IDX+2)="       not billed (or bill not authorized/req MRA) but appear to be billable."
"RTN","IBTUBUL",70,0)
 D SEND
"RTN","IBTUBUL",71,0)
 ;
"RTN","IBTUBUL",72,0)
BULLQ Q
"RTN","IBTUBUL",73,0)
 ;
"RTN","IBTUBUL",74,0)
SEND ; - Send bulletin.
"RTN","IBTUBUL",75,0)
 K XMY S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBTUBUL",76,0)
 S XMN=0,IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,6)),"^",25),0)),"^")
"RTN","IBTUBUL",77,0)
 I $G(IBCOMP),IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBTUBUL",78,0)
 I '$G(IBCOMP) S XMY(DUZ)=""
"RTN","IBTUBUL",79,0)
 D ^XMD
"RTN","IBTUBUL",80,0)
 Q
"RTN","IBTUBUL",81,0)
 ;
"RTN","IBTUBUL",82,0)
TESTV ; - Set up test variables.
"RTN","IBTUBUL",83,0)
 S IBTIMON=9999999
"RTN","IBTUBUL",84,0)
 S IBUNB("EPISM-A")=11111
"RTN","IBTUBUL",85,0)
 S IBUNB("EPISM-I")=11111
"RTN","IBTUBUL",86,0)
 S IBUNB("EPISM-P")=0
"RTN","IBTUBUL",87,0)
 S IBUNB("UNBILIP")=99999.99
"RTN","IBTUBUL",88,0)
 S IBUNB("ENCNTRS")=11111
"RTN","IBTUBUL",89,0)
 S IBUNB("CPTMS-I")=11111
"RTN","IBTUBUL",90,0)
 S IBUNB("CPTMS-P")=0
"RTN","IBTUBUL",91,0)
 S IBUNB("UNBILOP")=99999.99
"RTN","IBTUBUL",92,0)
 S IBUNB("PRESCRP")=11111
"RTN","IBTUBUL",93,0)
 S IBUNB("UNBILRX")=11111
"RTN","IBTUBUL",94,0)
 S IBUNB("UNBILTL")=99999.99
"RTN","IBTUBUL",95,0)
 Q
"RTN","IBTUBV")
0^104^B16655729
"RTN","IBTUBV",1,0)
IBTUBV ;ALB/AAS - UNBILLED AMOUNTS - VIEW UNBILLED DATA ;29-SEP-94
"RTN","IBTUBV",2,0)
 ;;2.0;INTEGRATED BILLING;**19,123,155**;21-MAR-94
"RTN","IBTUBV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUBV",4,0)
 ;
"RTN","IBTUBV",5,0)
% ; - View unbilled amounts for the month.
"RTN","IBTUBV",6,0)
 I '$D(IOF) D HOME^%ZIS
"RTN","IBTUBV",7,0)
 W !!,"View unbilled amounts",!
"RTN","IBTUBV",8,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBTUBV",9,0)
 I $D(IO("Q")) D  G END
"RTN","IBTUBV",10,0)
 .S ZTRTN="DQ^IBTUBV",ZTSAVE("IB*")=""
"RTN","IBTUBV",11,0)
 .S ZTDESC="IB - Unbilled View Unbilled Amounts"
"RTN","IBTUBV",12,0)
 .D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS
"RTN","IBTUBV",13,0)
 ;
"RTN","IBTUBV",14,0)
 U IO D DQ
"RTN","IBTUBV",15,0)
 ;
"RTN","IBTUBV",16,0)
END W ! I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBTUBV",17,0)
 D ^%ZISC
"RTN","IBTUBV",18,0)
 Q
"RTN","IBTUBV",19,0)
 ;
"RTN","IBTUBV",20,0)
DQ ; - Entry point when queued.
"RTN","IBTUBV",21,0)
 N IBAVGI,IBAVGP,IBFL,IBHDT,IBPAG,IBQUIT,IBTMON,DA,ND,ND3,TAB,X,Y
"RTN","IBTUBV",22,0)
 S IBHDT=$$HTE^XLFDT($H,1),(IBPAG,IBQUIT)=0
"RTN","IBTUBV",23,0)
 D HDR S IBTMON="",TAB=40
"RTN","IBTUBV",24,0)
 F  S IBTMON=$O(^IBE(356.19,"AIVDT",IBTMON)) Q:'IBTMON  D  Q:IBQUIT
"RTN","IBTUBV",25,0)
 .S DA=-IBTMON,IBFL=1
"RTN","IBTUBV",26,0)
 .I '$D(^IBE(356.19,DA,1)) D OLDV(DA) Q  ; No '1' node-print old report.
"RTN","IBTUBV",27,0)
 .S ND=$P($G(^IBE(356.19,DA,1)),U,1,6)
"RTN","IBTUBV",28,0)
 .;
"RTN","IBTUBV",29,0)
 .; - Get average instutional amount.
"RTN","IBTUBV",30,0)
 .S X1=$S('$P(ND,U,3):0,1:+ND/$P(ND,U,3))
"RTN","IBTUBV",31,0)
 .S X2=$S('$P(ND,U):0,1:+$P(ND,U,2)/+ND),IBAVGI=$J(X1*X2,0,2)
"RTN","IBTUBV",32,0)
 .;
"RTN","IBTUBV",33,0)
 .; - Get average professional amount.
"RTN","IBTUBV",34,0)
 .S X1=$S('$P(ND,U,6):0,1:+$P(ND,U,4)/$P(ND,U,6))
"RTN","IBTUBV",35,0)
 .S X2=$S('$P(ND,U,4):0,1:+$P(ND,U,5)/$P(ND,U,4)),IBAVGP=$J(X1*X2,0,2)
"RTN","IBTUBV",36,0)
 .;
"RTN","IBTUBV",37,0)
 .S ND=$G(^IBE(356.19,DA,2))
"RTN","IBTUBV",38,0)
 .S ND3=$G(^IBE(356.19,DA,3))
"RTN","IBTUBV",39,0)
 .I $Y>(IOSL-7) D HDR Q:IBQUIT
"RTN","IBTUBV",40,0)
 .W !?22,"Inpatient Care: ",$$MYR(DA)
"RTN","IBTUBV",41,0)
 .W !?9,"Number of Unbilled Inpatient Cases: ",$J($P(ND,U,2)+ND,11)
"RTN","IBTUBV",42,0)
 .W !?10,"Number of Unbilled MRA Admissions: ",$J($P(ND3,U,2)+ND3,11)
"RTN","IBTUBV",43,0)
 .W !?4,"Average Inpt. Institutional Bill Amount: ",$J(IBAVGI,11,2)
"RTN","IBTUBV",44,0)
 .W !?5,"Average Inpt. Professional Bill Amount: ",$J(IBAVGP,11,2)
"RTN","IBTUBV",45,0)
 .W !?14,"Total Unbilled Inpatient Care: ",$J($P(ND,U,7),11,2)
"RTN","IBTUBV",46,0)
 .W !?10,"Total MRA Unbilled Inpatient Care: ",$J($P(ND3,U,7),11,2),!
"RTN","IBTUBV",47,0)
 .;
"RTN","IBTUBV",48,0)
 .I $Y>(IOSL-7) D HDR Q:IBQUIT
"RTN","IBTUBV",49,0)
 .W !?21,"Outpatient Care: ",$$MYR(DA)
"RTN","IBTUBV",50,0)
 .W !?8,"Number of Unbilled Outpatient Cases: ",$J($P(ND,U,3),11)
"RTN","IBTUBV",51,0)
 .W !?15,"Number of Unbilled CPT Codes: ",$J($P(ND,U,4)+$P(ND,U,5),11)
"RTN","IBTUBV",52,0)
 .W !?11,"Number of MRA Unbilled CPT Codes: ",$J($P(ND3,U,4)+$P(ND3,U,5),11)
"RTN","IBTUBV",53,0)
 .W !?13,"Total Unbilled Outpatient Care: ",$J($P(ND,U,8),11,2)
"RTN","IBTUBV",54,0)
 .W !?9,"Total MRA Unbilled Outpatient Care: ",$J($P(ND3,U,8),11,2),!
"RTN","IBTUBV",55,0)
 .;
"RTN","IBTUBV",56,0)
 .I $Y>(IOSL-7) D HDR Q:IBQUIT
"RTN","IBTUBV",57,0)
 .W !?23,"Prescriptions: ",$$MYR(DA)
"RTN","IBTUBV",58,0)
 .W !?11,"Number of Unbilled Prescriptions: ",$J($P(ND,U,6),11)
"RTN","IBTUBV",59,0)
 .W !?7,"Number of MRA Unbilled Prescriptions: ",$J($P(ND3,U,6),11)
"RTN","IBTUBV",60,0)
 .W !?15,"Total Unbilled Prescriptions: ",$J($P(ND,U,9),11,2)
"RTN","IBTUBV",61,0)
 .W !?11,"Total MRA Unbilled Prescriptions: ",$J($P(ND3,U,9),11,2),!
"RTN","IBTUBV",62,0)
 ;
"RTN","IBTUBV",63,0)
 I '$G(IBFL) W !!,"No Unbilled Amount information found."
"RTN","IBTUBV",64,0)
 Q
"RTN","IBTUBV",65,0)
 ;
"RTN","IBTUBV",66,0)
OLDV(X) ; - Print old version of report if no '1' node of file #356.19 entry.
"RTN","IBTUBV",67,0)
 S ND=$G(^IBE(356.19,X,0)) G:'$P(ND,U,16) OLDVQ
"RTN","IBTUBV",68,0)
 I $Y>(IOSL-7) D HDR
"RTN","IBTUBV",69,0)
 W !!?11,"Inpatient Care: ",$$MYR(X)
"RTN","IBTUBV",70,0)
 W !?3,"Number of Unbilled Inpt. Cases: ",$J($P(ND,U,12),11)
"RTN","IBTUBV",71,0)
 W !?8,"Average Inpt. Bill Amount: ",$J($P(ND,U,13),11,2)
"RTN","IBTUBV",72,0)
 W !?9,"Total Inpatient Unbilled: ",$J($P(ND,U,12)*$P(ND,U,13),11,2)
"RTN","IBTUBV",73,0)
 ;
"RTN","IBTUBV",74,0)
 I $Y>(IOSL-7) D HDR
"RTN","IBTUBV",75,0)
 W !!?11,"Outpatient Care: ",$$MYR(X)
"RTN","IBTUBV",76,0)
 W !?3,"Number of Unbilled Opt. Cases: ",$J($P(ND,U,14),11)
"RTN","IBTUBV",77,0)
 W !?9,"Average Opt. Bill Amount: ",$J($P(ND,U,15),11,2)
"RTN","IBTUBV",78,0)
 W !?8,"Total Outpatient Unbilled: ",$J($P(ND,U,14)*$P(ND,U,15),11,2)
"RTN","IBTUBV",79,0)
 ;
"RTN","IBTUBV",80,0)
OLDVQ Q
"RTN","IBTUBV",81,0)
 ;
"RTN","IBTUBV",82,0)
HDR ; - Output header.
"RTN","IBTUBV",83,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 G HDRQ
"RTN","IBTUBV",84,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBTUBV",85,0)
 S IBPAG=IBPAG+1
"RTN","IBTUBV",86,0)
 W !,"Unbilled Amounts Report",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
"RTN","IBTUBV",87,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBTUBV",88,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D
"RTN","IBTUBV",89,0)
 .S (IBQUIT,ZTSTOP)=1 W !!,"...task stopped at user request"
"RTN","IBTUBV",90,0)
 ;
"RTN","IBTUBV",91,0)
HDRQ Q
"RTN","IBTUBV",92,0)
 ;
"RTN","IBTUBV",93,0)
MYR(X) ; - Format month/year (MM/YY).
"RTN","IBTUBV",94,0)
 Q $S('$G(X):"",1:$E(X,4,5)_"/"_$E(X,2,3))
"RTN","IBY155NV")
0^^B1681365
"RTN","IBY155NV",1,0)
IBY155NV ;ALB/ESG - IB*2*155 Environment Check ;8-Jun-2004
"RTN","IBY155NV",2,0)
 ;;2.0;INTEGRATED BILLING;**155**; 21-MAR-94
"RTN","IBY155NV",3,0)
 ;
"RTN","IBY155NV",4,0)
 ; Check to make sure that IB patch 232 is really installed.
"RTN","IBY155NV",5,0)
 ;
"RTN","IBY155NV",6,0)
 I '$D(^IBA(364.7,1015)) S XPDQUIT=1       ; X12 version# field
"RTN","IBY155NV",7,0)
 I $T(IBCEF2+1^IBCEF2)'[232 S XPDQUIT=1    ; output formatter rtn
"RTN","IBY155NV",8,0)
 ;
"RTN","IBY155NV",9,0)
 ; Display a message to the user if we can't install
"RTN","IBY155NV",10,0)
 I $D(XPDQUIT) D
"RTN","IBY155NV",11,0)
 . W !!,"The EDI enhancements patch - IB*2.0*232 - is not currently installed.  It may"
"RTN","IBY155NV",12,0)
 . W !,"have been installed previously and then manually backed out."
"RTN","IBY155NV",13,0)
 . W !!,"Patch 232 is required for the MRA functionality.  The installation of the MRA"
"RTN","IBY155NV",14,0)
 . W !,"patch will now be terminated."
"RTN","IBY155NV",15,0)
 . W !!
"RTN","IBY155NV",16,0)
 . N DIR S DIR(0)="E" D ^DIR
"RTN","IBY155NV",17,0)
 . Q
"RTN","IBY155NV",18,0)
 ;
"RTN","IBY155NV",19,0)
 Q
"RTN","IBY155NV",20,0)
 ;
"RTN","IBY155PO")
0^^B38296586
"RTN","IBY155PO",1,0)
IBY155PO ;ALB/DSM - IB*2*155 POST INIT ROUTINE ;25-MAR-2003
"RTN","IBY155PO",2,0)
 ;;2.0;INTEGRATED BILLING;**155**; 21-MAR-94
"RTN","IBY155PO",3,0)
 ;
"RTN","IBY155PO",4,0)
POST ; Set up check points for post-init
"RTN","IBY155PO",5,0)
 S %=$$NEWCP^XPDUTL("ADDUSR","ADDUSR^IBY155PO")
"RTN","IBY155PO",6,0)
 ;
"RTN","IBY155PO",7,0)
 ; default a No in the automatic MRA process parameter if undefined
"RTN","IBY155PO",8,0)
 I $P($G(^IBE(350.9,1,8)),U,11)="" D
"RTN","IBY155PO",9,0)
 . NEW D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","IBY155PO",10,0)
 . S DIE=350.9,DA=1,DR="8.11////0" D ^DIE
"RTN","IBY155PO",11,0)
 . Q
"RTN","IBY155PO",12,0)
 ;
"RTN","IBY155PO",13,0)
 ; default a Yes in the allow MRA processing parameter if undefined
"RTN","IBY155PO",14,0)
 I $P($G(^IBE(350.9,1,8)),U,12)="" D
"RTN","IBY155PO",15,0)
 . NEW D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","IBY155PO",16,0)
 . S DIE=350.9,DA=1,DR="8.12////1" D ^DIE
"RTN","IBY155PO",17,0)
 . Q
"RTN","IBY155PO",18,0)
 ;
"RTN","IBY155PO",19,0)
 ; Add new Claims Tracking non-billable reasons (File 356.8)
"RTN","IBY155PO",20,0)
 D
"RTN","IBY155PO",21,0)
 . NEW DA,DIC,DO,X,Y
"RTN","IBY155PO",22,0)
 . F X="MRA REC'D. NO SEC RESP EXISTS","MRA REC'D. SEC NOT BILLED" D
"RTN","IBY155PO",23,0)
 .. I $D(^IBE(356.8,"B",X)) Q            ; already on file
"RTN","IBY155PO",24,0)
 .. S DIC="^IBE(356.8,",DIC(0)="F"
"RTN","IBY155PO",25,0)
 .. D FILE^DICN
"RTN","IBY155PO",26,0)
 .. Q
"RTN","IBY155PO",27,0)
 . Q
"RTN","IBY155PO",28,0)
 ;
"RTN","IBY155PO",29,0)
 ; Add a new Bill Form Type for MRA reports
"RTN","IBY155PO",30,0)
 D BFT^IBY155PR
"RTN","IBY155PO",31,0)
 ;
"RTN","IBY155PO",32,0)
 ; Modify the Medicare entries in the IB PROVIDER ID # TYPE file (355.97)
"RTN","IBY155PO",33,0)
 D
"RTN","IBY155PO",34,0)
 . NEW P,NAME,CODE,DA,DIE,DR
"RTN","IBY155PO",35,0)
 . F P="A","B" D
"RTN","IBY155PO",36,0)
 .. S NAME="MEDICARE PART "_P
"RTN","IBY155PO",37,0)
 .. I P="A" S CODE=670899
"RTN","IBY155PO",38,0)
 .. I P="B" S CODE="VA0"_+$$SITE^VASITE()
"RTN","IBY155PO",39,0)
 .. S DA=$O(^IBE(355.97,"B",NAME,"")) Q:'DA
"RTN","IBY155PO",40,0)
 .. S DIE=355.97,DR=".03///1C;.04///"_CODE
"RTN","IBY155PO",41,0)
 .. D ^DIE
"RTN","IBY155PO",42,0)
 .. Q
"RTN","IBY155PO",43,0)
 . Q
"RTN","IBY155PO",44,0)
 ;
"RTN","IBY155PO",45,0)
 ; Update Short Description field for IEN #964 in File 364.6
"RTN","IBY155PO",46,0)
 N IBDESC,DA,DIE,DR
"RTN","IBY155PO",47,0)
 D BMES^XPDUTL("Updating Short Description field for IEN #964 in the IB FORM SKELETON DEFINITION FILE")
"RTN","IBY155PO",48,0)
 S IBDESC="COB COVERED DAYS"
"RTN","IBY155PO",49,0)
 S DA=964,DIE="^IBA(364.6,",DR=".1///^S X=IBDESC" D ^DIE
"RTN","IBY155PO",50,0)
 D COMPLETE
"RTN","IBY155PO",51,0)
 ;
"RTN","IBY155PO",52,0)
 ; Delete 3 action protocols from the CSA screen menu protocol
"RTN","IBY155PO",53,0)
 D BMES^XPDUTL("Removing actions from the CSA screen")
"RTN","IBY155PO",54,0)
 D CSA
"RTN","IBY155PO",55,0)
 D COMPLETE
"RTN","IBY155PO",56,0)
 ;
"RTN","IBY155PO",57,0)
 ; Build the new "AMRA" index for file 361.1
"RTN","IBY155PO",58,0)
 D BMES^XPDUTL("A new index will now be created for file 361.1.")
"RTN","IBY155PO",59,0)
 D AMRA,COMPLETE
"RTN","IBY155PO",60,0)
 ;
"RTN","IBY155PO",61,0)
 ; Delete old remark codes fields
"RTN","IBY155PO",62,0)
 D BMES^XPDUTL("Deleting old line item remarks code fields from EOB file 361.1")
"RTN","IBY155PO",63,0)
 S DIK="^DD(361.115,",DA(1)=361.115,DA=3.01 D ^DIK
"RTN","IBY155PO",64,0)
 S DIK="^DD(361.115,",DA(1)=361.115,DA=3.02 D ^DIK
"RTN","IBY155PO",65,0)
 D COMPLETE
"RTN","IBY155PO",66,0)
 ;
"RTN","IBY155PO",67,0)
 ; Check the insurance company file for fake Medicare WNR entries
"RTN","IBY155PO",68,0)
 D BMES^XPDUTL("Scanning Insurance Company File for Medicare WNR Entries ...")
"RTN","IBY155PO",69,0)
 D INSCHK^IBCEMU3,COMPLETE
"RTN","IBY155PO",70,0)
 ;
"RTN","IBY155PO",71,0)
 ;
"RTN","IBY155PO",72,0)
 Q     ; IBY155PO
"RTN","IBY155PO",73,0)
 ;
"RTN","IBY155PO",74,0)
 ;
"RTN","IBY155PO",75,0)
 ;
"RTN","IBY155PO",76,0)
 ;
"RTN","IBY155PO",77,0)
ADDUSR ; Add the Bill Authorizer for acceptable MRA secondary claims
"RTN","IBY155PO",78,0)
 ; to the New Person file (#200)
"RTN","IBY155PO",79,0)
 ;
"RTN","IBY155PO",80,0)
 N DIC,X,Y,DO,DD,DLAYGO
"RTN","IBY155PO",81,0)
 S DIC(0)="",DIC="^VA(200,",X="AUTHORIZER,IB MRA" D ^DIC
"RTN","IBY155PO",82,0)
 I Y>0 D  Q
"RTN","IBY155PO",83,0)
 . D BMES^XPDUTL("User, AUTHORIZER,IB MRA, already exists in the NEW PERSON file - not added")
"RTN","IBY155PO",84,0)
 . D COMPLETE
"RTN","IBY155PO",85,0)
 D BMES^XPDUTL("Adding new user, AUTHORIZER,IB MRA, to the NEW PERSON file")
"RTN","IBY155PO",86,0)
 S DLAYGO=200,DIC(0)="L",DIC="^VA(200,",DIC("DR")="1////MRA",X="AUTHORIZER,IB MRA" D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBY155PO",87,0)
 I Y'>0 D
"RTN","IBY155PO",88,0)
 . D BMES^XPDUTL("A problem was encountered trying to add user, AUTHORIZER,IB MRA")
"RTN","IBY155PO",89,0)
 . D BMES^XPDUTL("The entry must be added manually to the NEW PERSON file")
"RTN","IBY155PO",90,0)
 E  D
"RTN","IBY155PO",91,0)
 .D BMES^XPDUTL("User, AUTHORIZER,IB MRA, was successfully added to the NEW PERSON file")
"RTN","IBY155PO",92,0)
 D COMPLETE
"RTN","IBY155PO",93,0)
 Q
"RTN","IBY155PO",94,0)
 ;
"RTN","IBY155PO",95,0)
INCLUDE(Y) ; Code executed by build to determine which entries from file 364.7 should be included
"RTN","IBY155PO",96,0)
 NEW IBOUT,LINE S IBOUT=0
"RTN","IBY155PO",97,0)
 F LINE=2:1:5 I $P($T(ENT7+LINE),";;",2)[(U_+Y_U) S IBOUT=1 Q
"RTN","IBY155PO",98,0)
INCX ;
"RTN","IBY155PO",99,0)
 Q IBOUT
"RTN","IBY155PO",100,0)
 ;
"RTN","IBY155PO",101,0)
ENT7 ; changed and new entries for file 364.7 to be included in build
"RTN","IBY155PO",102,0)
 ;
"RTN","IBY155PO",103,0)
 ;;^115^176^181^182^188^268^270^275^293^296^297^305^306^308^309^310^322^344^346^353^493^503^504^
"RTN","IBY155PO",104,0)
 ;;^623^630^631^633^635^717^728^729^736^809^814^815^816^822^823^824^832^839^842^846^851^
"RTN","IBY155PO",105,0)
 ;;^852^853^854^855^856^857^858^859^860^861^862^864^865^870^871^872^875^876^882^883^886^890^947^951^956^957^
"RTN","IBY155PO",106,0)
 ;;^958^959^960^961^962^963^964^965^966^967^975^978^980^982^983^985^1013^1014^
"RTN","IBY155PO",107,0)
 Q
"RTN","IBY155PO",108,0)
ENT6 ; new entry for file 364.6
"RTN","IBY155PO",109,0)
 ;;^716^964^
"RTN","IBY155PO",110,0)
 Q
"RTN","IBY155PO",111,0)
 ;
"RTN","IBY155PO",112,0)
CSA ; Remove 3 actions from the CSA screen menu protocol
"RTN","IBY155PO",113,0)
 NEW AP,MPI,DA,DIK,API,APNM
"RTN","IBY155PO",114,0)
 S AP("IBCEM CSA EDIT BILL")=""
"RTN","IBY155PO",115,0)
 S AP("IBCEM CSA COB MANAGEMENT")=""
"RTN","IBY155PO",116,0)
 S AP("IBCEM CSA VIEW EOB")=""
"RTN","IBY155PO",117,0)
 S MPI=$O(^ORD(101,"B","IBCEM CSA MSG MENU",""))   ; menu protocol ien
"RTN","IBY155PO",118,0)
 I 'MPI G CSAX
"RTN","IBY155PO",119,0)
 S DA(1)=MPI
"RTN","IBY155PO",120,0)
 S DIK="^ORD(101,"_MPI_",10,"
"RTN","IBY155PO",121,0)
 S DA=0 F  S DA=$O(^ORD(101,MPI,10,DA)) Q:'DA  D
"RTN","IBY155PO",122,0)
 . S API=+$G(^ORD(101,MPI,10,DA,0))
"RTN","IBY155PO",123,0)
 . S APNM=$P($G(^ORD(101,API,0)),U,1)
"RTN","IBY155PO",124,0)
 . I APNM="" Q
"RTN","IBY155PO",125,0)
 . I '$D(AP(APNM)) Q
"RTN","IBY155PO",126,0)
 . D ^DIK
"RTN","IBY155PO",127,0)
 . Q
"RTN","IBY155PO",128,0)
CSAX ;
"RTN","IBY155PO",129,0)
 Q
"RTN","IBY155PO",130,0)
 ;
"RTN","IBY155PO",131,0)
AMRA ; Build the new index
"RTN","IBY155PO",132,0)
 N MRAXR,MRARES,MRAOUT
"RTN","IBY155PO",133,0)
 S MRAXR("FILE")=361.1
"RTN","IBY155PO",134,0)
 S MRAXR("NAME")="AMRA"
"RTN","IBY155PO",135,0)
 S MRAXR("TYPE")="R"
"RTN","IBY155PO",136,0)
 S MRAXR("USE")="S"
"RTN","IBY155PO",137,0)
 S MRAXR("EXECUTION")="R"
"RTN","IBY155PO",138,0)
 S MRAXR("ACTIVITY")="IR"
"RTN","IBY155PO",139,0)
 S MRAXR("SHORT DESCR")="Index by EOB type and Review Status"
"RTN","IBY155PO",140,0)
 S MRAXR("VAL",1)=.04
"RTN","IBY155PO",141,0)
 S MRAXR("VAL",1,"SUBSCRIPT")=1
"RTN","IBY155PO",142,0)
 S MRAXR("VAL",1,"COLLATION")="F"
"RTN","IBY155PO",143,0)
 S MRAXR("VAL",2)=.16
"RTN","IBY155PO",144,0)
 S MRAXR("VAL",2,"SUBSCRIPT")=2
"RTN","IBY155PO",145,0)
 S MRAXR("VAL",2,"COLLATION")="F"
"RTN","IBY155PO",146,0)
 D CREIXN^DDMOD(.MRAXR,"SW",.MRARES,"MRAOUT")
"RTN","IBY155PO",147,0)
 I +$G(MRARES) D MES^XPDUTL("Index successfully created!") G AMRAX
"RTN","IBY155PO",148,0)
 ;
"RTN","IBY155PO",149,0)
 ; Index file failure.  Not created for some reason
"RTN","IBY155PO",150,0)
 ;
"RTN","IBY155PO",151,0)
 D MES^XPDUTL("A PROBLEM WAS ENCOUNTERED.  INDEX FILE NOT CREATED!!!")
"RTN","IBY155PO",152,0)
 D MES^XPDUTL("SENDING MAILMAN MESSAGE...")
"RTN","IBY155PO",153,0)
 D MES^XPDUTL("PLACING THE MRA MANAGEMENT SCREEN OUT-OF-ORDER.")
"RTN","IBY155PO",154,0)
 NEW XMDUZ,XMSUBJ,XMBODY,MSG,XMTO,DA,DIE,DR
"RTN","IBY155PO",155,0)
 S XMDUZ=DUZ,XMSUBJ="IB*2*155 Error:  AMRA index not built",XMBODY="MSG"
"RTN","IBY155PO",156,0)
 S MSG(1)="The new ""AMRA"" index for file 361.1 was not created at"
"RTN","IBY155PO",157,0)
 S MSG(2)=" "
"RTN","IBY155PO",158,0)
 S MSG(3)="     "_$$SITE^VASITE
"RTN","IBY155PO",159,0)
 S MSG(4)=" "
"RTN","IBY155PO",160,0)
 S MSG(5)="The MRA management worklist has been placed out of order."
"RTN","IBY155PO",161,0)
 ;
"RTN","IBY155PO",162,0)
 ; recipients of message
"RTN","IBY155PO",163,0)
 S XMTO(DUZ)=""
"RTN","IBY155PO",164,0)
 S XMTO("eric.gustafson@daou.com")=""
"RTN","IBY155PO",165,0)
 S XMTO("michael.f.pida@us.pwc.com")=""
"RTN","IBY155PO",166,0)
 S XMTO("Janet.Harris2@med.va.gov")=""
"RTN","IBY155PO",167,0)
 S XMTO("Loretta.Gulley2@med.va.gov")=""
"RTN","IBY155PO",168,0)
 S XMTO("G.PATCHES")=""
"RTN","IBY155PO",169,0)
 S XMTO("G.IB EDI")=""
"RTN","IBY155PO",170,0)
 S XMTO("G.IB EDI SUPERVISOR")=""
"RTN","IBY155PO",171,0)
 ;
"RTN","IBY155PO",172,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO)
"RTN","IBY155PO",173,0)
 ;
"RTN","IBY155PO",174,0)
 ; place MRA management worklist screen out of order
"RTN","IBY155PO",175,0)
 S DA=$O(^DIC(19,"B","IBCE MRA MANAGEMENT",""))
"RTN","IBY155PO",176,0)
 I DA S DIE=19,DR="2////IB Patch 155 Installation Failure" D ^DIE
"RTN","IBY155PO",177,0)
 ;
"RTN","IBY155PO",178,0)
AMRAX ;
"RTN","IBY155PO",179,0)
 Q
"RTN","IBY155PO",180,0)
 ;
"RTN","IBY155PO",181,0)
COMPLETE ;
"RTN","IBY155PO",182,0)
 D BMES^XPDUTL("Step complete.")
"RTN","IBY155PO",183,0)
 Q
"RTN","IBY155PO",184,0)
 ;
"RTN","IBY155PR")
0^^B6928537
"RTN","IBY155PR",1,0)
IBY155PR ;ALB/TMP - IB*2*155 PRE-INSTALL ;11-APR-02
"RTN","IBY155PR",2,0)
 ;;2.0;INTEGRATED BILLING;**155**;21-MAR-94
"RTN","IBY155PR",3,0)
 ;
"RTN","IBY155PR",4,0)
 ;
"RTN","IBY155PR",5,0)
 D BMES^XPDUTL("    Pre-Installation Updates")
"RTN","IBY155PR",6,0)
 D BMES^XPDUTL("    Delete output formatter data that will be updated during install")
"RTN","IBY155PR",7,0)
 N Z,DA,DIK
"RTN","IBY155PR",8,0)
 F Z=3,26,27,127 K ^IBA(364.5,Z,3)
"RTN","IBY155PR",9,0)
 S DA=353,DIK="^IBA(364.7,"
"RTN","IBY155PR",10,0)
 D ^DIK   ; remove entry 353 because the .03 field changed
"RTN","IBY155PR",11,0)
 S DA=964,DIK="^IBA(364.6,"
"RTN","IBY155PR",12,0)
 D ^DIK   ; remove entry 964 because the .1 field changed
"RTN","IBY155PR",13,0)
 ;
"RTN","IBY155PR",14,0)
 D BMES^XPDUTL("    Delete fields in file 361.1 that will be updated during install")
"RTN","IBY155PR",15,0)
 ; Remove selective Data Dictionay Elements related to this build
"RTN","IBY155PR",16,0)
 ;
"RTN","IBY155PR",17,0)
 ; Remove the Multiple 361.13 (File 361.1, Field 2.1 - Original Modifiers)
"RTN","IBY155PR",18,0)
 N DIU
"RTN","IBY155PR",19,0)
 S DIU=361.13,DIU(0)="S" D EN^DIU2
"RTN","IBY155PR",20,0)
 K DIU
"RTN","IBY155PR",21,0)
 ;
"RTN","IBY155PR",22,0)
 ; Remove field .16 of File 361.1 - REVIEW STATUS
"RTN","IBY155PR",23,0)
 N DIK,DA
"RTN","IBY155PR",24,0)
 S DIK="^DD(361.1,",DA=.16,DA(1)=361.1 D ^DIK
"RTN","IBY155PR",25,0)
 ; Remove Field .2 of File 361.1 - FINAL REVIEW ACTION
"RTN","IBY155PR",26,0)
 S DA=.2 D ^DIK
"RTN","IBY155PR",27,0)
 ; Remove Field 2.1 of File 361.1 - ORIGINAL MODIFIERS
"RTN","IBY155PR",28,0)
 S DA=2.1 D ^DIK
"RTN","IBY155PR",29,0)
 ;
"RTN","IBY155PR",30,0)
 ; Remove Field 9 of File 399 - AUTHORIZE BILL GENERATION?
"RTN","IBY155PR",31,0)
 S DIK="^DD(399,",DA=9,DA(1)=399 D ^DIK
"RTN","IBY155PR",32,0)
 ; Remove Field 25 of File 399 - REQUEST AN MRA?
"RTN","IBY155PR",33,0)
 S DA=25 D ^DIK
"RTN","IBY155PR",34,0)
 ;
"RTN","IBY155PR",35,0)
 D BMES^XPDUTL("    Delete list templates which will be updated during install")
"RTN","IBY155PR",36,0)
 D LSTDEL("IBCEM MRA DETAIL")
"RTN","IBY155PR",37,0)
 ;
"RTN","IBY155PR",38,0)
 D BMES^XPDUTL("    Pre-install complete")
"RTN","IBY155PR",39,0)
 Q
"RTN","IBY155PR",40,0)
 ;
"RTN","IBY155PR",41,0)
INCLUDE(Y) ; Code to execute to decide if the data element definition 
"RTN","IBY155PR",42,0)
 ;  should be sent with this patch ... it must exist in the list at
"RTN","IBY155PR",43,0)
 ;  line ENT5+2 below
"RTN","IBY155PR",44,0)
 N IBOUT,Z,Z0
"RTN","IBY155PR",45,0)
 I Y>9999 S IBOUT=0 G INCQ1
"RTN","IBY155PR",46,0)
 I $P($T(ENT5+2),";;",2)[(U_+Y_U) S IBOUT=1 G INCQ1
"RTN","IBY155PR",47,0)
INCQ1 Q +$G(IBOUT)
"RTN","IBY155PR",48,0)
 ;
"RTN","IBY155PR",49,0)
ENT5 ; Changed entries from 364.5 that should be in the build
"RTN","IBY155PR",50,0)
 ;
"RTN","IBY155PR",51,0)
 ;;^3^26^27^55^127^177^248^249^251^225^257^
"RTN","IBY155PR",52,0)
 Q
"RTN","IBY155PR",53,0)
 ;
"RTN","IBY155PR",54,0)
LSTDEL(LSTNM) ; Delete list templates from file 409.61 before installation
"RTN","IBY155PR",55,0)
 I $G(LSTNM)="" G LSTDELX
"RTN","IBY155PR",56,0)
 S DA=$O(^SD(409.61,"B",LSTNM,""))
"RTN","IBY155PR",57,0)
 I 'DA G LSTDELX
"RTN","IBY155PR",58,0)
 S DIK="^SD(409.61,"
"RTN","IBY155PR",59,0)
 D ^DIK
"RTN","IBY155PR",60,0)
LSTDELX ;
"RTN","IBY155PR",61,0)
 Q
"RTN","IBY155PR",62,0)
 ;
"RTN","IBY155PR",63,0)
BFT ; Add new Bill Form Type for MRA reports;
"RTN","IBY155PR",64,0)
 ; Called by the post-install routine IBY155PO;
"RTN","IBY155PR",65,0)
 ; File 353, new internal entry number 6;
"RTN","IBY155PR",66,0)
 ; Default the printer defined for the Bill Addendum entry
"RTN","IBY155PR",67,0)
 ;
"RTN","IBY155PR",68,0)
 NEW DA,DIC,DO,X,Y,DD,DLAYGO,DINUM,DG,DICR,DIW,BAPRT
"RTN","IBY155PR",69,0)
 I $P($G(^IBE(353,6,0)),U,1)="MRA" G BFTX     ; already on file
"RTN","IBY155PR",70,0)
 I $D(^IBE(353,6)) D
"RTN","IBY155PR",71,0)
 . ; some other entry is defined at ien=6, so get rid of it
"RTN","IBY155PR",72,0)
 . S DA=6,DIK="^IBE(353," D ^DIK
"RTN","IBY155PR",73,0)
 . Q
"RTN","IBY155PR",74,0)
 ;
"RTN","IBY155PR",75,0)
 S DIC="^IBE(353,",DIC(0)="F"
"RTN","IBY155PR",76,0)
 S X="MRA"
"RTN","IBY155PR",77,0)
 S DINUM=6
"RTN","IBY155PR",78,0)
 S DIC("DR")="2.02////P"   ; format type
"RTN","IBY155PR",79,0)
 S BAPRT=$P($G(^IBE(353,4,0)),U,2)  ; bill addendum default printer
"RTN","IBY155PR",80,0)
 I BAPRT'="" S DIC("DR")=DIC("DR")_";.02////"_BAPRT
"RTN","IBY155PR",81,0)
 D FILE^DICN
"RTN","IBY155PR",82,0)
BFTX ;
"RTN","IBY155PR",83,0)
 Q
"RTN","IBY155PR",84,0)
 ;
"UP",361.1,361.111,-2)
361.1^10
"UP",361.1,361.111,-1)
361.11^1
"UP",361.1,361.111,0)
361.111
"UP",361.1,361.115,-1)
361.1^15
"UP",361.1,361.115,0)
361.115
"UP",361.1,361.1151,-2)
361.1^15
"UP",361.1,361.1151,-1)
361.115^1
"UP",361.1,361.1151,0)
361.1151
"UP",361.1,361.11511,-3)
361.1^15
"UP",361.1,361.11511,-2)
361.115^1
"UP",361.1,361.11511,-1)
361.1151^1
"UP",361.1,361.11511,0)
361.11511
"UP",361.1,361.1154,-2)
361.1^15
"UP",361.1,361.1154,-1)
361.115^4
"UP",361.1,361.1154,0)
361.1154
"VER")
8.0^22.0
"^DD",350.8,350.8,0)
FIELD^^10^7
"^DD",350.8,350.8,0,"DDA")
N
"^DD",350.8,350.8,0,"DT")
2930322
"^DD",350.8,350.8,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",350.8,350.8,0,"IX","AC",350.8,.03)

"^DD",350.8,350.8,0,"IX","B",350.8,.01)

"^DD",350.8,350.8,0,"IX","C",350.8,.03)

"^DD",350.8,350.8,0,"NM","IB ERROR")

"^DD",350.8,350.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",350.8,350.8,.01,1,0)
^.1
"^DD",350.8,350.8,.01,1,1,0)
350.8^B
"^DD",350.8,350.8,.01,1,1,1)
S ^IBE(350.8,"B",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.01,1,1,2)
K ^IBE(350.8,"B",$E(X,1,30),DA)
"^DD",350.8,350.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",350.8,350.8,.01,21,0)
^^2^2^2910305^^
"^DD",350.8,350.8,.01,21,1,0)
This is a free text name of the entry.  It should be namespaced with
"^DD",350.8,350.8,.01,21,2,0)
the namespace of the package reporting the error.
"^DD",350.8,350.8,.02,0)
ERROR MESSAGE^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",350.8,350.8,.02,3)
Answer must be 3-80 characters in length.
"^DD",350.8,350.8,.02,21,0)
^^3^3^2940209^^^^
"^DD",350.8,350.8,.02,21,1,0)
This is the text of the message as it will be displayed to a user or
"^DD",350.8,350.8,.02,21,2,0)
posted in a bulletin.  It should be as meaningful as possible to the
"^DD",350.8,350.8,.02,21,3,0)
person seeing the message.
"^DD",350.8,350.8,.03,0)
ERROR CODE^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>9!($L(X)<1) X
"^DD",350.8,350.8,.03,1,0)
^.1
"^DD",350.8,350.8,.03,1,1,0)
350.8^AC
"^DD",350.8,350.8,.03,1,1,1)
S ^IBE(350.8,"AC",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,1,2)
K ^IBE(350.8,"AC",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,1,2,0)
350.8^C
"^DD",350.8,350.8,.03,1,2,1)
S ^IBE(350.8,"C",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,2,2)
K ^IBE(350.8,"C",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,3)
Answer must be 1-9 characters in length.
"^DD",350.8,350.8,.03,21,0)
^^9^9^2920219^^^^
"^DD",350.8,350.8,.03,21,1,0)
This is the error code that will be passed to or determined by
"^DD",350.8,350.8,.03,21,2,0)
Integrated Billing.  The format for the Error Code should be
"^DD",350.8,350.8,.03,21,3,0)
nnxxx, where nn is the reporting package namespace and xxx are numeric
"^DD",350.8,350.8,.03,21,4,0)
values.
"^DD",350.8,350.8,.03,21,5,0)
 
"^DD",350.8,350.8,.03,21,6,0)
This is the error code that will be passed as the second piece of
"^DD",350.8,350.8,.03,21,7,0)
the variable Y to IB when +Y=-1.  More than one error code can be
"^DD",350.8,350.8,.03,21,8,0)
placed in the second ^ piece of Y delimited by semi-colons.  Applications
"^DD",350.8,350.8,.03,21,9,0)
may call ^IBAERR to display the error message(s).
"^DD",350.8,350.8,.03,"DT")
2920219
"^DD",350.8,350.8,.04,0)
PACKAGE REPORTING ERROR^S^1:INTEGRATED BILLING;2:ACCOUNTS RECEIVABLE;3:PHARMACY;^0;4^Q
"^DD",350.8,350.8,.04,21,0)
^^2^2^2920415^^^
"^DD",350.8,350.8,.04,21,1,0)
This is the package that requested this entry in this file and will
"^DD",350.8,350.8,.04,21,2,0)
report it to IB as an error if the conditions are detected.
"^DD",350.8,350.8,.05,0)
ERROR ACTION^S^1:DISPLAY MESSAGE;2:SEND BULLETIN;3:EDIT FILE;^0;5^Q
"^DD",350.8,350.8,.05,21,0)
^^6^6^2910227^
"^DD",350.8,350.8,.05,21,1,0)
This is the type of action that should be taken when this error is
"^DD",350.8,350.8,.05,21,2,0)
reported to IB.  If action other than displaying a message is indicated
"^DD",350.8,350.8,.05,21,3,0)
then the MUMPS code in the ERROR ACTION field will be executed.
"^DD",350.8,350.8,.05,21,4,0)
 
"^DD",350.8,350.8,.05,21,5,0)
Currently only display actions are implemented.  Please contact the 
"^DD",350.8,350.8,.05,21,6,0)
developing ISC if other action types are desired.
"^DD",350.8,350.8,.06,0)
CORRESPONDING ALERT^P354.5'^IBE(354.5,^0;6^Q
"^DD",350.8,350.8,.06,21,0)
^^1^1^2940209^
"^DD",350.8,350.8,.06,21,1,0)
This is the type of alert that should be sent when this error occurs.
"^DD",350.8,350.8,.06,"DT")
2930322
"^DD",350.8,350.8,10,0)
EXECUTABLE LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",350.8,350.8,10,3)
This is Standard MUMPS code.
"^DD",350.8,350.8,10,21,0)
^^2^2^2910227^
"^DD",350.8,350.8,10,21,1,0)
This is the MUMPS code that will be executed if an error is reported
"^DD",350.8,350.8,10,21,2,0)
with an ERROR ACTION of other than to display a message.
"^DD",350.9,350.9,8.1,0)
EDI/MRA ACTIVATED^S^0:NOT EDI OR MRA;1:EDI ONLY;2:MRA ONLY;3:BOTH EDI AND MRA;^8;10^Q
"^DD",350.9,350.9,8.1,1,0)
^.1
"^DD",350.9,350.9,8.1,1,1,0)
^^TRIGGER^350.9^8.13
"^DD",350.9,350.9,8.1,1,1,1)
X ^DD(350.9,8.1,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^IBE(350.9,D0,8)):^(8),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=DT S DIH=$G(^IBE(350.9,DIV(0),8)),DIV=X S $P(^(8),U,13)=DIV,DIH=350.9,DIG=8.13 D ^DICR
"^DD",350.9,350.9,8.1,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBE(350.9,D0,8)):^(8),1:"") S X=$P(Y(1),U,13)="",Y(2)=$G(X),Y(3)=$G(X) S X=Y(0),X=X S X=X>1,Y=X,X=Y(2),X=X&Y
"^DD",350.9,350.9,8.1,1,1,2)
Q
"^DD",350.9,350.9,8.1,1,1,"CREATE CONDITION")
(DATE MRA FIRST ACTIVATED="")&(INTERNAL(EDI/MRA ACTIVATED)>1)
"^DD",350.9,350.9,8.1,1,1,"CREATE VALUE")
TODAY
"^DD",350.9,350.9,8.1,1,1,"DELETE VALUE")
NO EFFECT
"^DD",350.9,350.9,8.1,1,1,"DT")
3031204
"^DD",350.9,350.9,8.1,1,1,"FIELD")
`8.13
"^DD",350.9,350.9,8.1,3)
Enter the status of EDI/MRA you want to exist at your site
"^DD",350.9,350.9,8.1,21,0)
^^2^2^2990913^^
"^DD",350.9,350.9,8.1,21,1,0)
This parameter controls whether EDI and/or requests for MRA are available
"^DD",350.9,350.9,8.1,21,2,0)
functions for your site.
"^DD",350.9,350.9,8.1,"DT")
3031204
"^DD",350.9,350.9,8.11,0)
AUTOMATIC MRA EOB PROCESS?^S^0:NO;1:YES;^8;11^Q
"^DD",350.9,350.9,8.11,.1)
Enable Automatic MRA Processing?
"^DD",350.9,350.9,8.11,3)
Enter Yes or No
"^DD",350.9,350.9,8.11,21,0)
^^8^8^3030428^
"^DD",350.9,350.9,8.11,21,1,0)
This field controls whether or not incoming Medicare Remittance
"^DD",350.9,350.9,8.11,21,2,0)
Advice (MRA) EOB's can be automatically processed so that the
"^DD",350.9,350.9,8.11,21,3,0)
secondary bill is automatically generated and automatically
"^DD",350.9,350.9,8.11,21,4,0)
authorized and sent to the secondary payer.
"^DD",350.9,350.9,8.11,21,5,0)
 
"^DD",350.9,350.9,8.11,21,6,0)
If this field is NO, then all incoming MRA EOB's will remain
"^DD",350.9,350.9,8.11,21,7,0)
on the MRA management worklist and manual processing of the
"^DD",350.9,350.9,8.11,21,8,0)
MRA EOB's will be necessary.
"^DD",350.9,350.9,8.11,"DT")
3030828
"^DD",350.9,350.9,8.12,0)
ALLOW MRA EOB PROCESSING?^S^0:NO;1:YES;^8;12^Q
"^DD",350.9,350.9,8.12,.1)
Allow MRA Processing?
"^DD",350.9,350.9,8.12,3)
Enter Yes or No
"^DD",350.9,350.9,8.12,21,0)
^^6^6^3030828^
"^DD",350.9,350.9,8.12,21,1,0)
This field controls whether or not Medicare Remittance Advice
"^DD",350.9,350.9,8.12,21,2,0)
(MRA) EOB's are allowed to be processed so that a bill can become
"^DD",350.9,350.9,8.12,21,3,0)
a secondary bill and be authorized to the secondary payer.
"^DD",350.9,350.9,8.12,21,4,0)
 
"^DD",350.9,350.9,8.12,21,5,0)
This field is checked by both the manual Process COB action from
"^DD",350.9,350.9,8.12,21,6,0)
the MRA management worklist and also by the automatic MRA process.
"^DD",350.9,350.9,8.12,"DT")
3030828
"^DD",350.9,350.9,8.13,0)
DATE MRA FIRST ACTIVATED^D^^8;13^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",350.9,350.9,8.13,3)
(No range limit on date)
"^DD",350.9,350.9,8.13,5,1,0)
350.9^8.1^1
"^DD",350.9,350.9,8.13,21,0)
^^1^1^3040604^
"^DD",350.9,350.9,8.13,21,1,0)
This is the date Medicare Remittance Advice (MRA) was activated at site.
"^DD",350.9,350.9,8.13,"DT")
3040604
"^DD",356.19,356.19,3.01,0)
NO. MRA INPT INST CLAIMS^NJ9,0^^3;1^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.19,356.19,3.01,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",356.19,356.19,3.01,21,0)
^.001^2^2^3040928^^^
"^DD",356.19,356.19,3.01,21,1,0)
The number of admissions with an inpatient institutional bill in MRA req
"^DD",356.19,356.19,3.01,21,2,0)
status.
"^DD",356.19,356.19,3.01,"DT")
3040928
"^DD",356.19,356.19,3.02,0)
NO. MRA INPT PROF CLAIMS^NJ9,0^^3;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.19,356.19,3.02,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",356.19,356.19,3.02,21,0)
^.001^2^2^3040928^^
"^DD",356.19,356.19,3.02,21,1,0)
The number of admissions with an inpatient professional bill in MRA req
"^DD",356.19,356.19,3.02,21,2,0)
status.
"^DD",356.19,356.19,3.02,"DT")
3040928
"^DD",356.19,356.19,3.04,0)
MRA CPT CODES ON INST CLAIMS^NJ9,0^^3;4^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.19,356.19,3.04,3)
Type a Number between 0 and 999999999.
"^DD",356.19,356.19,3.04,21,0)
^^2^2^3040928^
"^DD",356.19,356.19,3.04,21,1,0)
The number of CPT codes found on institutional claims in a REQUEST MRA
"^DD",356.19,356.19,3.04,21,2,0)
status.
"^DD",356.19,356.19,3.04,"DT")
3040928
"^DD",356.19,356.19,3.05,0)
MRA CPT CODES ON PROF CLAIMS^NJ9,0^^3;5^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.19,356.19,3.05,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",356.19,356.19,3.05,21,0)
^^2^2^3040928^
"^DD",356.19,356.19,3.05,21,1,0)
The number of CPT codes found on professional claims in a REQUEST MRA
"^DD",356.19,356.19,3.05,21,2,0)
status.
"^DD",356.19,356.19,3.05,"DT")
3040928
"^DD",356.19,356.19,3.06,0)
NUMBER OF MRA UNBILLED RX'S^NJ9,0^^3;6^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.19,356.19,3.06,3)
Type a Number between 0 and 999999999.
"^DD",356.19,356.19,3.06,21,0)
^^1^1^3040928^
"^DD",356.19,356.19,3.06,21,1,0)
The # of prescriptions on claims in REQUEST MRA status.
"^DD",356.19,356.19,3.06,"DT")
3040928
"^DD",356.19,356.19,3.07,0)
MRA UNBILLED INPATIENT AMOUNT^NJ12,2^^3;7^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999)!(X<0) X
"^DD",356.19,356.19,3.07,3)
Type a Dollar Amount between 0 and 999999999, 2 Decimal Digits
"^DD",356.19,356.19,3.07,21,0)
^^1^1^3040928^
"^DD",356.19,356.19,3.07,21,1,0)
The total amount of inpatient charges for bills in MRA request status.
"^DD",356.19,356.19,3.07,"DT")
3040928
"^DD",356.19,356.19,3.08,0)
MRA UNBILLED OUTPATIENT AMOUNT^NJ12,2^^3;8^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999)!(X<0) X
"^DD",356.19,356.19,3.08,3)
Type a Dollar Amount between 0 and 999999999, 2 Decimal Digits
"^DD",356.19,356.19,3.08,21,0)
^^1^1^3040928^
"^DD",356.19,356.19,3.08,21,1,0)
The total amount of outpatient charges for bills in MRA request status.
"^DD",356.19,356.19,3.08,"DT")
3040928
"^DD",356.19,356.19,3.09,0)
MRA UNBILLED PRESCRIPTION AMT^NJ12,2^^3;9^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999)!(X<0) X
"^DD",356.19,356.19,3.09,3)
Type a Dollar Amount between 0 and 999999999, 2 Decimal Digits
"^DD",356.19,356.19,3.09,21,0)
^.001^1^1^3040928^^
"^DD",356.19,356.19,3.09,21,1,0)
The total amount of prescription charges for bills in MRA request status.
"^DD",356.19,356.19,3.09,"DT")
3040928
"^DD",356.19,356.19,3.1,0)
TOTAL MRA UNBILLED AMOUNT^NJ12,2^^3;10^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999)!(X<0) X
"^DD",356.19,356.19,3.1,3)
Type a Dollar Amount between 0 and 999999999, 2 Decimal Digits
"^DD",356.19,356.19,3.1,21,0)
^.001^2^2^3040928^^^
"^DD",356.19,356.19,3.1,21,1,0)
The total amount of unbilled inpatient, outpatient and Rx on MRA request
"^DD",356.19,356.19,3.1,21,2,0)
claims.
"^DD",356.19,356.19,3.1,"DT")
3040928
"^DD",361.1,361.1,.06,0)
EOB PAID DATE^D^^0;6^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",361.1,361.1,.06,1,0)
^.1^^0
"^DD",361.1,361.1,.06,3)
Enter the date the payer paid the claim
"^DD",361.1,361.1,.06,21,0)
^^2^2^3031014^
"^DD",361.1,361.1,.06,21,1,0)
This is the effective date of money movement (paid date) from the
"^DD",361.1,361.1,.06,21,2,0)
payer, as indicated in the 835 transmission.
"^DD",361.1,361.1,.06,"DT")
3031014
"^DD",361.1,361.1,.16,0)
REVIEW STATUS^S^0:NOT REVIEWED;1:REVIEW IN PROCESS;1.5:COB PROCESSED, NOT AUTHORIZED;2:ACCEPTED-INTERIM EOB;3:ACCEPTED-COMPLETE EOB;4:REJECTED;9:CLAIM CANCELLED;^0;16^Q
"^DD",361.1,361.1,.16,1,0)
^.1
"^DD",361.1,361.1,.16,1,1,0)
361.1^AREV
"^DD",361.1,361.1,.16,1,1,1)
S ^IBM(361.1,"AREV",$E(X,1,30),DA)=""
"^DD",361.1,361.1,.16,1,1,2)
K ^IBM(361.1,"AREV",$E(X,1,30),DA)
"^DD",361.1,361.1,.16,1,1,3)
Do not delete
"^DD",361.1,361.1,.16,1,1,"%D",0)
^^1^1^3030929^
"^DD",361.1,361.1,.16,1,1,"%D",1,0)
This xref is used to pull out EOB's that are in various stages of review.
"^DD",361.1,361.1,.16,1,1,"DT")
3030929
"^DD",361.1,361.1,.16,1,2,0)
^^TRIGGER^361.1^100.03
"^DD",361.1,361.1,.16,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBM(361.1,D0,100)):^(100),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$G(DUZ) S DIH=$G(^IBM(361.1,DIV(0),100)),DIV=X S $P(^(100),U,3)=DIV,DIH=361.1,DIG=100.03 D ^DICR
"^DD",361.1,361.1,.16,1,2,2)
Q
"^DD",361.1,361.1,.16,1,2,"CREATE VALUE")
S X=$G(DUZ)
"^DD",361.1,361.1,.16,1,2,"DELETE VALUE")
NO EFFECT
"^DD",361.1,361.1,.16,1,2,"DT")
3030520
"^DD",361.1,361.1,.16,1,2,"FIELD")
LAST EDITED BY
"^DD",361.1,361.1,.16,1,3,0)
^^TRIGGER^361.1^100.04
"^DD",361.1,361.1,.16,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBM(361.1,D0,100)):^(100),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=$$NOW^XLFDT() S DIH=$G(^IBM(361.1,DIV(0),100)),DIV=X S $P(^(100),U,4)=DIV,DIH=361.1,DIG=100.04 D ^DICR
"^DD",361.1,361.1,.16,1,3,2)
Q
"^DD",361.1,361.1,.16,1,3,"CREATE VALUE")
S X=$$NOW^XLFDT()
"^DD",361.1,361.1,.16,1,3,"DELETE VALUE")
NO EFFECT
"^DD",361.1,361.1,.16,1,3,"DT")
3030520
"^DD",361.1,361.1,.16,1,3,"FIELD")
LAST EDITED DATE
"^DD",361.1,361.1,.16,21,0)
^.001^2^2^3030520^^^
"^DD",361.1,361.1,.16,21,1,0)
This is the current processing status of the EOB/MRA.  Only MRA claims can
"^DD",361.1,361.1,.16,21,2,0)
be in a REJECTED status.
"^DD",361.1,361.1,.16,"DT")
3040915
"^DD",361.1,361.1,.2,0)
FINAL REVIEW ACTION^S^C:BILL CANCELLED - NO FURTHER ACTION;F:FILED - NO ACTION;R:CORRECTED/RESUBMITTED;P:COB PROCESSED;O:OTHER ACTION;^0;20^Q
"^DD",361.1,361.1,.2,3)
Enter the final review action for this EOB
"^DD",361.1,361.1,.2,21,0)
^^1^1^3030703^
"^DD",361.1,361.1,.2,21,1,0)
This is the action that was taken to complete the review of this EOB.
"^DD",361.1,361.1,.2,"DT")
3030703
"^DD",361.1,361.1,2.05,0)
NEGATIVE REIMBURSEMENT AMT^NJ13,2^^2;5^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999)!(X<-9999999999)!(X?.E1"."3.N) X
"^DD",361.1,361.1,2.05,3)
Type a Dollar amount between -9999999999 and 9999999999, 2 Decimal Digits
"^DD",361.1,361.1,2.05,21,0)
^^2^2^2990202^^
"^DD",361.1,361.1,2.05,21,1,0)
This is the amount of negative reimbursement on a claim as reported by
"^DD",361.1,361.1,2.05,21,2,0)
MEDICARE.
"^DD",361.1,361.1,2.05,23,0)
^^2^2^2990202^^
"^DD",361.1,361.1,2.05,23,1,0)
This data can be found on the electronic EOB (835) in the AMT-02 (qualifier
"^DD",361.1,361.1,2.05,23,2,0)
'NL') data element.
"^DD",361.1,361.1,2.05,"DT")
3030815
"^DD",361.1,361.1,3.01,0)
M-CARE OUTP REIMBURS. RATE^NJ6,4^^3;1^K:+X'=X!(X>1)!(X<0)!(X?.E1"."5.N) X
"^DD",361.1,361.1,3.01,3)
Type a number between 0 and 1, 4 Decimal Digits
"^DD",361.1,361.1,3.01,21,0)
^^1^1^3030625^
"^DD",361.1,361.1,3.01,21,1,0)
This is a data element from a MEDICARE electronic remittance advice.
"^DD",361.1,361.1,3.01,23,0)
^^1^1^3030625^
"^DD",361.1,361.1,3.01,23,1,0)
This is the amount from the 835 data field (MOA-01)
"^DD",361.1,361.1,3.01,"DT")
3030625
"^DD",361.1,361.1,30.01,0)
AUTO BILL MESSAGE^F^^30;1^K:$L(X)>200!($L(X)<2) X
"^DD",361.1,361.1,30.01,3)
Answer must be 2-200 characters in length
"^DD",361.1,361.1,30.01,21,0)
^^3^3^3030515^
"^DD",361.1,361.1,30.01,21,1,0)
This field contains reason messages or error messages that
"^DD",361.1,361.1,30.01,21,2,0)
describe why this EOB record was not automatically turned into
"^DD",361.1,361.1,30.01,21,3,0)
a secondary or tertiary bill.
"^DD",361.1,361.1,30.01,"DT")
3030515
"^DD",361.1,361.1,30.02,0)
AUTO BILL MESSAGE DATE/TIME^D^^30;2^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",361.1,361.1,30.02,21,0)
^^2^2^3030515^
"^DD",361.1,361.1,30.02,21,1,0)
This is the date/time that the automatic bill generation
"^DD",361.1,361.1,30.02,21,2,0)
failure message was filed.
"^DD",361.1,361.1,30.02,"DT")
3030515
"^DD",361.1,361.1,100.03,0)
LAST EDITED BY^P200'^VA(200,^100;3^Q
"^DD",361.1,361.1,100.03,3)
Enter the name of the person who last edited this EOB record.
"^DD",361.1,361.1,100.03,5,1,0)
361.1^.16^2
"^DD",361.1,361.1,100.03,21,0)
^^1^1^2990528^
"^DD",361.1,361.1,100.03,21,1,0)
This is the name of the person who last edited this EOB record.
"^DD",361.1,361.1,100.03,"DT")
2990528
"^DD",361.1,361.1,100.04,0)
LAST EDITED DATE^D^^100;4^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",361.1,361.1,100.04,3)
Enter the last date/time this EOB record was edited.
"^DD",361.1,361.1,100.04,5,1,0)
361.1^.16^3
"^DD",361.1,361.1,100.04,21,0)
^^1^1^2990528^
"^DD",361.1,361.1,100.04,21,1,0)
This is the last date/time this EOB record was edited.
"^DD",361.1,361.1,100.04,"DT")
2990528
"^DD",361.1,361.111,.02,0)
AMOUNT^NJ13,2^^0;2^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>9999999999)!(X<-9999999999)!(X?.E1"."3.N) X
"^DD",361.1,361.111,.02,3)
Type a Dollar amount between -9999999999 and 9999999999, 2 Decimal Digits
"^DD",361.1,361.111,.02,21,0)
^^1^1^2990202^^^^
"^DD",361.1,361.111,.02,21,1,0)
This is the adjusted amount for the reason code
"^DD",361.1,361.111,.02,23,0)
^^2^2^2990202^^^
"^DD",361.1,361.111,.02,23,1,0)
This data is found in the electronic eob (835) in the data elements
"^DD",361.1,361.111,.02,23,2,0)
CAS-03,6,9,12,15,18
"^DD",361.1,361.111,.02,"DT")
3031014
"^DD",361.1,361.111,.03,0)
QUANTITY^NJ5,0^^0;3^K:+X'=X!(X>99999)!(X<-99999)!(X?.E1"."1.N) X
"^DD",361.1,361.111,.03,3)
Type a number between -99999 and 99999, 0 Decimal Digits
"^DD",361.1,361.111,.03,21,0)
^^1^1^2990202^^
"^DD",361.1,361.111,.03,21,1,0)
This is the quantity for the item adjusted
"^DD",361.1,361.111,.03,23,0)
^^2^2^2990202^
"^DD",361.1,361.111,.03,23,1,0)
This data is found in the electronic eob (835) in the data elements
"^DD",361.1,361.111,.03,23,2,0)
CAS-04,7,10,13,16,19
"^DD",361.1,361.111,.03,"DT")
3030822
"^DD",361.1,361.115,.11,0)
PAID UNITS OF SERVICE^RNJ10,1^^0;11^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."2.N) X
"^DD",361.1,361.115,.11,3)
Type a number between 0 and 99999999, 1 Decimal Digit
"^DD",361.1,361.115,.11,21,0)
^^1^1^3040823^
"^DD",361.1,361.115,.11,21,1,0)
This is the number of units of service that were actually reimbursed.
"^DD",361.1,361.115,.11,23,0)
^^1^1^3040823^
"^DD",361.1,361.115,.11,23,1,0)
This data is found in the electronic 835 at the SVC05 data element.
"^DD",361.1,361.115,.11,"DT")
3040823
"^DD",361.1,361.115,1,0)
ADJUSTMENTS^361.1151SA^^1;0
"^DD",361.1,361.115,1,21,0)
^^2^2^3030408^
"^DD",361.1,361.115,1,21,1,0)
This is the list of line level adjustments, including general category
"^DD",361.1,361.115,1,21,2,0)
of adjustment, reason code, amount and quantity.
"^DD",361.1,361.115,4,0)
LINE ITEM REMARK^361.1154A^^4;0
"^DD",361.1,361.1151,0)
ADJUSTMENTS SUB-FIELD^^1^2
"^DD",361.1,361.1151,0,"NM","ADJUSTMENTS")

"^DD",361.1,361.1151,.01,0)
GROUP CODE^MS^CO:Contractual Obligations;CR:Corrections and Reversals;OA:Other Adjustments;PI:Payor Initiated Reductions;PR:Patient Responsibility;LQ:Line Item Remark Code WebMD Kludge;^0;1^Q
"^DD",361.1,361.1151,.01,1,0)
^.1
"^DD",361.1,361.1151,.01,1,1,0)
361.1151^B
"^DD",361.1,361.1151,.01,1,1,1)
S ^IBM(361.1,DA(2),15,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",361.1,361.1151,.01,1,1,2)
K ^IBM(361.1,DA(2),15,DA(1),1,"B",$E(X,1,30),DA)
"^DD",361.1,361.1151,.01,"DT")
3031030
"^DD",361.1,361.11511,.03,0)
QUANTITY^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<-9999999)!(X?.E1"."1.N) X
"^DD",361.1,361.11511,.03,3)
Type a number between -9999999 and 9999999, 0 Decimal Digits
"^DD",361.1,361.11511,.03,21,0)
^^1^1^2990202^^
"^DD",361.1,361.11511,.03,21,1,0)
This is the quantity for the item adjusted
"^DD",361.1,361.11511,.03,23,0)
^^2^2^2990202^^^
"^DD",361.1,361.11511,.03,23,1,0)
This data is found in the electronic eob (835) in the data elements
"^DD",361.1,361.11511,.03,23,2,0)
CAS-04,7,10,13,16,19
"^DD",361.1,361.11511,.03,"DT")
3030822
"^DD",361.1,361.1154,0)
LINE ITEM REMARK SUB-FIELD^^.03^3
"^DD",361.1,361.1154,0,"DT")
3040817
"^DD",361.1,361.1154,0,"IX","B",361.1154,.01)

"^DD",361.1,361.1154,0,"NM","LINE ITEM REMARK")

"^DD",361.1,361.1154,0,"UP")
361.115
"^DD",361.1,361.1154,.01,0)
LINE ITEM REMARK^NJ5,0^^0;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",361.1,361.1154,.01,1,0)
^.1
"^DD",361.1,361.1154,.01,1,1,0)
361.1154^B
"^DD",361.1,361.1154,.01,1,1,1)
S ^IBM(361.1,DA(2),15,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",361.1,361.1154,.01,1,1,2)
K ^IBM(361.1,DA(2),15,DA(1),4,"B",$E(X,1,30),DA)
"^DD",361.1,361.1154,.01,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",361.1,361.1154,.01,21,0)
^^2^2^3040817^
"^DD",361.1,361.1154,.01,21,1,0)
This is the sequential number used to enumerate the line item remarks in 
"^DD",361.1,361.1154,.01,21,2,0)
the ERA.
"^DD",361.1,361.1154,.01,"DT")
3040817
"^DD",361.1,361.1154,.02,0)
LINE ITEM REMARK CODE^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",361.1,361.1154,.02,3)
Answer must be 1-10 characters in length.
"^DD",361.1,361.1154,.02,21,0)
^^1^1^3040817^
"^DD",361.1,361.1154,.02,21,1,0)
This is the remark code provided by MEDICARE for this line item.
"^DD",361.1,361.1154,.02,"DT")
3040817
"^DD",361.1,361.1154,.03,0)
LINE ITEM REMARK CODE TEXT^F^^0;3^K:$L(X)>190!($L(X)<1) X
"^DD",361.1,361.1154,.03,3)
Answer must be 1-190 characters in length.
"^DD",361.1,361.1154,.03,21,0)
^^1^1^3040817^
"^DD",361.1,361.1154,.03,21,1,0)
This is the free text explanation of the remark code in this record.
"^DD",361.1,361.1154,.03,"DT")
3040817
"^DD",364.5,364.5,0)
FIELD^^3^11
"^DD",364.5,364.5,0,"DDA")
N
"^DD",364.5,364.5,0,"DT")
2960311
"^DD",364.5,364.5,0,"ID",.05)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.5,364.5,0,"IX","B",364.5,.01)

"^DD",364.5,364.5,0,"NM","IB DATA ELEMENT DEFINITION")

"^DD",364.5,364.5,0,"PT",364.7,.03)

"^DD",364.5,364.5,0,"VRPK")
IB
"^DD",364.5,364.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",364.5,364.5,.01,1,0)
^.1
"^DD",364.5,364.5,.01,1,1,0)
364.5^B
"^DD",364.5,364.5,.01,1,1,1)
S ^IBA(364.5,"B",$E(X,1,30),DA)=""
"^DD",364.5,364.5,.01,1,1,2)
K ^IBA(364.5,"B",$E(X,1,30),DA)
"^DD",364.5,364.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",364.5,364.5,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.01,21,1,0)
The name to be used to uniquely identify this data element.
"^DD",364.5,364.5,.01,"DT")
2951219
"^DD",364.5,364.5,.02,0)
SECURITY LEVEL^RS^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.5,364.5,.02,21,0)
^^2^2^2960215^^^^
"^DD",364.5,364.5,.02,21,1,0)
If this field is set to N (NATIONAL,NO EDIT), this is a secured data
"^DD",364.5,364.5,.02,21,2,0)
element and will not be allowed to be edited or deleted.
"^DD",364.5,364.5,.02,"DT")
2960215
"^DD",364.5,364.5,.03,0)
TYPE OF ELEMENT^RS^F:NON-MULTIPLE FILEMAN FIELD;E:EXTRACTED VIA CODE;C:CONSTANT VALUE;^0;3^Q
"^DD",364.5,364.5,.03,1,0)
^.1
"^DD",364.5,364.5,.03,1,1,0)
^^TRIGGER^364.5^.04
"^DD",364.5,364.5,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X="FC",Y(1)=X S X=Y(0),X=X S Y=X,X=Y(1),X=X S X=X[Y I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="I" X ^DD(364.5,.03,1,1,1.4)
"^DD",364.5,364.5,.03,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.5,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,1,2)
Q
"^DD",364.5,364.5,.03,1,1,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,1,"%D",0)
^^1^1^2960215^
"^DD",364.5,364.5,.03,1,1,"%D",1,0)
If TYPE OF ELEMENT is 'F' or 'C' then ELEMENT CATEGORY must be 'I'. 
"^DD",364.5,364.5,.03,1,1,"CREATE CONDITION")
"FC"[INTERNAL(TYPE OF ELEMENT)
"^DD",364.5,364.5,.03,1,1,"CREATE VALUE")
S X="I"
"^DD",364.5,364.5,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,1,"DT")
2960215
"^DD",364.5,364.5,.03,1,1,"FIELD")
ELEMENT CATEGORY
"^DD",364.5,364.5,.03,1,2,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="F" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,2,1.4)
"^DD",364.5,364.5,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,2,2)
Q
"^DD",364.5,364.5,.03,1,2,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,2,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,2,"%D",1,0)
This triggers the FILEMAN FIELD REFERENCE field to null if the element type
"^DD",364.5,364.5,.03,1,2,"%D",2,0)
is not FILEMAN field type of element.
"^DD",364.5,364.5,.03,1,2,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="F"
"^DD",364.5,364.5,.03,1,2,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,2,"DT")
2960215
"^DD",364.5,364.5,.03,1,2,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.03,1,3,0)
^^TRIGGER^364.5^.08
"^DD",364.5,364.5,.03,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="C" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,3,1.4)
"^DD",364.5,364.5,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.5,DIG=.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,3,2)
Q
"^DD",364.5,364.5,.03,1,3,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,3,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,3,"%D",1,0)
This triggers the CONSTANT VALUE field to null if the element type is not
"^DD",364.5,364.5,.03,1,3,"%D",2,0)
CONSTANT type of element.
"^DD",364.5,364.5,.03,1,3,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="C"
"^DD",364.5,364.5,.03,1,3,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,3,"DT")
2960215
"^DD",364.5,364.5,.03,1,3,"FIELD")
CONSTANT VALUE
"^DD",364.5,364.5,.03,1,4,0)
^^TRIGGER^364.5^1
"^DD",364.5,364.5,.03,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="E" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,1)):^(1),1:"") S X=$E(Y(1),1,245),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,4,1.4)
"^DD",364.5,364.5,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),1)):^(1),1:""),DIV=X S DE=0-$L(DIH),DIU=$E(DIH,1,245),Y=$E(DIH,246,999),^(1)=$J("",$S(DE>0:DE,1:0))_DIV_$S(Y?." ":"",1:$J("",245-$L(DIV))_Y),DIH=364.5,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,4,2)
Q
"^DD",364.5,364.5,.03,1,4,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,4,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,4,"%D",1,0)
This triggers the EXTRACT CODE field to null if the element type is not an
"^DD",364.5,364.5,.03,1,4,"%D",2,0)
EXTRACTED VIA CODE type of element.
"^DD",364.5,364.5,.03,1,4,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="E"
"^DD",364.5,364.5,.03,1,4,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,4,"DT")
2960215
"^DD",364.5,364.5,.03,1,4,"FIELD")
EXTRACT CODE
"^DD",364.5,364.5,.03,21,0)
^^3^3^2951207^^
"^DD",364.5,364.5,.03,21,1,0)
The type of data element being defined as needed by one or more forms.  This
"^DD",364.5,364.5,.03,21,2,0)
field determines the type of retrieval needed to get the actual data element's
"^DD",364.5,364.5,.03,21,3,0)
value for a given bill.
"^DD",364.5,364.5,.03,"DT")
2960215
"^DD",364.5,364.5,.04,0)
ELEMENT CATEGORY^RSX^I:INDIVIDUAL ELEMENT;G:GROUP ELEMENT;^0;4^I $P($G(^IBA(364.5,DA,0)),U,3)="F",$G(X)="G" K X
"^DD",364.5,364.5,.04,1,0)
^.1
"^DD",364.5,364.5,.04,1,1,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="G" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.04,1,1,1.4)
"^DD",364.5,364.5,.04,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.04,1,1,2)
Q
"^DD",364.5,364.5,.04,1,1,"CREATE CONDITION")
INTERNAL(ELEMENT CATEGORY)="G"
"^DD",364.5,364.5,.04,1,1,"CREATE VALUE")
""
"^DD",364.5,364.5,.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.04,1,1,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.04,3)
This indicates an INDIVIDUAL or GROUP of elements will be returned.  Group is not valid for Fileman type elements.
"^DD",364.5,364.5,.04,5,1,0)
364.5^.03^1
"^DD",364.5,364.5,.04,21,0)
^^3^3^2951205^
"^DD",364.5,364.5,.04,21,1,0)
This defines whether the data element to be extracted is a single piece of data
"^DD",364.5,364.5,.04,21,2,0)
or is a string of related data.  Fileman field references must be designated as
"^DD",364.5,364.5,.04,21,3,0)
individual elements.
"^DD",364.5,364.5,.04,"DT")
2960215
"^DD",364.5,364.5,.05,0)
BASE FILE^P1'^DIC(^0;5^Q
"^DD",364.5,364.5,.05,3)
Enter the Fileman file to be used as a 'base' to extract the data from.
"^DD",364.5,364.5,.05,21,0)
^^2^2^2960311^
"^DD",364.5,364.5,.05,21,1,0)
This is the number of the Fileman file to be used as a 'base' to extract
"^DD",364.5,364.5,.05,21,2,0)
data for this field.
"^DD",364.5,364.5,.05,"DT")
2960311
"^DD",364.5,364.5,.06,0)
FILEMAN FIELD REFERENCE^FX^^0;6^K:$L(X)>65!($L(X)<1) X I $D(X),$P($G(^IBA(364.5,DA,0)),U,4)="G" K X
"^DD",364.5,364.5,.06,1,0)
^.1
"^DD",364.5,364.5,.06,1,1,0)
^^TRIGGER^364.5^.07
"^DD",364.5,364.5,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)="" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,1.4)
"^DD",364.5,364.5,.06,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,2.4)
"^DD",364.5,364.5,.06,1,1,2.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,"CREATE CONDITION")
FILEMAN FIELD REFERENCE=""
"^DD",364.5,364.5,.06,1,1,"CREATE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"DELETE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"FIELD")
#.07
"^DD",364.5,364.5,.06,3)
Must be a valid Fileman reference and ELEMENT CATEGORY must not be GROUP.
"^DD",364.5,364.5,.06,5,1,0)
364.5^.04^1
"^DD",364.5,364.5,.06,5,2,0)
364.5^.03^2
"^DD",364.5,364.5,.06,21,0)
^^6^6^2951221^^^
"^DD",364.5,364.5,.06,21,1,0)
The valid Fileman field reference or simple Fileman navigation to be used
"^DD",364.5,364.5,.06,21,2,0)
to extract using the $$GET^DIQ utility. Note this will not return true
"^DD",364.5,364.5,.06,21,3,0)
multiple entries.  Word-processing type fields are able to be retrieved,
"^DD",364.5,364.5,.06,21,4,0)
however.  No syntax check is made on this field so the user must be careful
"^DD",364.5,364.5,.06,21,5,0)
to type a valid Fileman expression.  This must be designated as an
"^DD",364.5,364.5,.06,21,6,0)
INDIVIDUAL element, not a group element.
"^DD",364.5,364.5,.06,"DT")
2951221
"^DD",364.5,364.5,.07,0)
FILEMAN RETURN FORMAT^S^I:INTERNAL;E:EXTERNAL;^0;7^Q
"^DD",364.5,364.5,.07,5,1,0)
364.5^.06^1
"^DD",364.5,364.5,.07,21,0)
^^5^5^2951205^
"^DD",364.5,364.5,.07,21,1,0)
This is the format for the retrieved data for Fileman-type data elements.  It
"^DD",364.5,364.5,.07,21,2,0)
is recommended to use Internal format whenever possible to keep the data
"^DD",364.5,364.5,.07,21,3,0)
element definitions in this file as generic as possible to avoid duplication.  
"^DD",364.5,364.5,.07,21,4,0)
The format capabilities of the forms generator should be used to interpret and
"^DD",364.5,364.5,.07,21,5,0)
reformat the data element when needed.
"^DD",364.5,364.5,.07,"DT")
2951205
"^DD",364.5,364.5,.08,0)
CONSTANT VALUE^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",364.5,364.5,.08,3)
Answer must be 1-80 characters in length.
"^DD",364.5,364.5,.08,5,1,0)
364.5^.03^3
"^DD",364.5,364.5,.08,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.08,21,1,0)
The specific value that this data element should return for this data element.
"^DD",364.5,364.5,.08,"DT")
2951205
"^DD",364.5,364.5,1,0)
EXTRACT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.5,364.5,1,3)
This is Standard MUMPS code.
"^DD",364.5,364.5,1,5,1,0)
364.5^.03^4
"^DD",364.5,364.5,1,9)
@
"^DD",364.5,364.5,1,21,0)
^^7^7^2951207^^^
"^DD",364.5,364.5,1,21,1,0)
The code to be executed by the forms generator to return the value(s) of the
"^DD",364.5,364.5,1,21,2,0)
data element.  If no ARRAY ROOT field is completed for this data element, the
"^DD",364.5,364.5,1,21,3,0)
code should set the variable IBXDATA or the array IBXDATA(1) through IBXDATA(n)
"^DD",364.5,364.5,1,21,4,0)
where n=the total # of iterations of the data element retrieved.  If the ARRAY 
"^DD",364.5,364.5,1,21,5,0)
ROOT field has been completed for this data element, this code should set the
"^DD",364.5,364.5,1,21,6,0)
variable referenced there.  IBXIEN is assumed to be the internal entry number
"^DD",364.5,364.5,1,21,7,0)
of the  file (referenced by the variable IBXFILE) entry.
"^DD",364.5,364.5,1,"DT")
2951205
"^DD",364.5,364.5,2,0)
ARRAY ROOT^F^^2;E1,50^K:$L(X)>50!($L(X)<1) X
"^DD",364.5,364.5,2,3)
Answer must be a valid array root name.
"^DD",364.5,364.5,2,21,0)
^^3^3^2960117^^
"^DD",364.5,364.5,2,21,1,0)
 The local or global base root where multiple-valued output or word processing
"^DD",364.5,364.5,2,21,2,0)
data is to be stored for this data element.  IBXDATA is the default if there
"^DD",364.5,364.5,2,21,3,0)
is no data in this field.  Example of a global array: ^TMP($J)
"^DD",364.5,364.5,2,"DT")
2960117
"^DD",364.5,364.5,3,0)
DESCRIPTION^364.53^^3;0
"^DD",364.5,364.53,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.5,364.53,0,"DT")
2951205
"^DD",364.5,364.53,0,"NM","DESCRIPTION")

"^DD",364.5,364.53,0,"UP")
364.5
"^DD",364.5,364.53,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",364.5,364.53,.01,3)
Enter a description of the data element being defined.
"^DD",364.5,364.53,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.53,.01,21,1,0)
This is a free text description of the data that this data element represents.
"^DD",364.5,364.53,.01,"DT")
2951205
"^DD",364.6,364.6,0)
FIELD^^.13^13
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3000216
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"IX","C",364.6,.1)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")

"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>30!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1
"^DD",364.6,364.6,.1,1,1,0)
364.6^C
"^DD",364.6,364.6,.1,1,1,1)
S ^IBA(364.6,"C",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.1,1,1,2)
K ^IBA(364.6,"C",$E(X,1,30),DA)
"^DD",364.6,364.6,.1,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.1,1,1,"%D",0)
^^1^1^2960123^
"^DD",364.6,364.6,.1,1,1,"%D",1,0)
Field name lookup
"^DD",364.6,364.6,.1,1,1,"DT")
2960123
"^DD",364.6,364.6,.1,3)
Answer must be 1-30 characters in length.
"^DD",364.6,364.6,.1,21,0)
^^2^2^2951207^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
2960123
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")

"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")

"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399,399,7,0)
MRA REQUESTED DATE^D^^S;7^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",399,399,7,1,0)
^.1
"^DD",399,399,7,1,1,0)
399^APM
"^DD",399,399,7,1,1,1)
S ^DGCR(399,"APM",$E(X,1,30),DA)=""
"^DD",399,399,7,1,1,2)
K ^DGCR(399,"APM",$E(X,1,30),DA)
"^DD",399,399,7,1,1,"%D",0)
^^2^2^3040528^
"^DD",399,399,7,1,1,"%D",1,0)
Regular cross-reference on the date the MRA was requested.
"^DD",399,399,7,1,1,"%D",2,0)
Used to speed up reports.
"^DD",399,399,7,1,1,"DT")
3040528
"^DD",399,399,7,3)
Enter the date on which the last request for an MRA was performed.
"^DD",399,399,7,5,1,0)
399^25^3
"^DD",399,399,7,9)
^
"^DD",399,399,7,21,0)
^^1^1^2990628^^^
"^DD",399,399,7,21,1,0)
This is the last date for which this record requested an MRA.
"^DD",399,399,7,23,0)
^^2^2^2990628^^
"^DD",399,399,7,23,1,0)
This field used to contain the SECONDARY REVIEW DATE data, but is being
"^DD",399,399,7,23,2,0)
recycled for requesting MRA date data.
"^DD",399,399,7,"DT")
3040528
"^DD",399,399,9,0)
AUTHORIZE BILL GENERATION?^FOX^^S;9^I $D(X) D YN^IBCU
"^DD",399,399,9,1,0)
^.1
"^DD",399,399,9,1,1,0)
^^TRIGGER^399^10
"^DD",399,399,9,1,1,1)
X ^DD(399,9,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(399,9,1,1,1.4)
"^DD",399,399,9,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,10)="",Y(2)=X,Y(3)=X,Y=Y(0) X:$D(^DD(399,9,2)) ^(2) S X=Y="YES",Y=X,X=Y(2),X=X&Y
"^DD",399,399,9,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,10)=DIV,DIH=399,DIG=10 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,9,1,1,2)
Q
"^DD",399,399,9,1,1,"CREATE CONDITION")
AUTHORIZATION DATE=""&(#9="YES")
"^DD",399,399,9,1,1,"CREATE VALUE")
TODAY
"^DD",399,399,9,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,9,1,1,"DT")
2960909
"^DD",399,399,9,1,1,"FIELD")
AUTHORIZATION DATE
"^DD",399,399,9,1,2,0)
^^TRIGGER^399^11
"^DD",399,399,9,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(399,9,1,2,69.2) S X=X="YES",Y=X,X=Y(2),X=X&Y I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(399,9,1,2,1.4)
"^DD",399,399,9,1,2,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,11)=DIV,DIH=399,DIG=11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,9,1,2,2)
Q
"^DD",399,399,9,1,2,69.2)
S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,11),0)):"",1:$P(^(0),U,1))="",Y(2)=X,Y(3)=X,Y=Y(0) X:$D(^DD(399,9,2)) ^(2) S X=Y
"^DD",399,399,9,1,2,"CREATE CONDITION")
AUTHORIZER=""&(#9="YES")
"^DD",399,399,9,1,2,"CREATE VALUE")
S X=DUZ
"^DD",399,399,9,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,9,1,2,"DT")
2960909
"^DD",399,399,9,1,2,"FIELD")
AUTHORIZER
"^DD",399,399,9,1,3,0)
^^TRIGGER^399^.13
"^DD",399,399,9,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y=Y(0) X:$D(^DD(399,9,2)) ^(2) S X=Y="YES" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=3 X ^DD(399,9,1,3,1.4)
"^DD",399,399,9,1,3,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,13)=DIV,DIH=399,DIG=.13 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,9,1,3,2)
Q
"^DD",399,399,9,1,3,"CREATE CONDITION")
#9="YES"
"^DD",399,399,9,1,3,"CREATE VALUE")
S X=3
"^DD",399,399,9,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,9,1,3,"DT")
3000124
"^DD",399,399,9,1,3,"FIELD")
STATUS
"^DD",399,399,9,1,4,0)
^^TRIGGER^399^25
"^DD",399,399,9,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$EXTERNAL^DIDU(399,9,"",Y(0))="YES" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(399,9,1,4,1.4)
"^DD",399,399,9,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,6)=DIV,DIH=399,DIG=25 D ^DICR
"^DD",399,399,9,1,4,2)
Q
"^DD",399,399,9,1,4,"%D",0)
^^1^1^3030620^
"^DD",399,399,9,1,4,"%D",1,0)
If Authorize Bill Generation? (Fld #9) is answered with Yes, then the value in Request an MRA? (Fld #25) gets removed (set to null).
"^DD",399,399,9,1,4,"CREATE CONDITION")
#9="YES"
"^DD",399,399,9,1,4,"CREATE VALUE")
@
"^DD",399,399,9,1,4,"DELETE VALUE")
NO EFFECT
"^DD",399,399,9,1,4,"DT")
3030620
"^DD",399,399,9,1,4,"FIELD")
REQUEST
"^DD",399,399,9,2)
S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
"^DD",399,399,9,2.1)
S Y=$S(Y:"YES",Y=0:"NO",1:"")
"^DD",399,399,9,3)
Enter 'Yes' or '1' if the billing record has been reviewed and is ready for authorization, or 'No' or '0' if the billing record is not ready to be authorized.
"^DD",399,399,9,21,0)
^^1^1^2960410^^
"^DD",399,399,9,21,1,0)
This allows the user to authorize the printing/transmitting of this bill.
"^DD",399,399,9,"DT")
3030620
"^DD",399,399,25,0)
REQUEST AN MRA?^FXO^^TX;6^I $D(Y) D YN^IBCU
"^DD",399,399,25,1,0)
^.1
"^DD",399,399,25,1,1,0)
^^TRIGGER^399^.13
"^DD",399,399,25,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X=1 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=2 X ^DD(399,25,1,1,1.4)
"^DD",399,399,25,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,13)=DIV,DIH=399,DIG=.13 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,25,1,1,2)
Q
"^DD",399,399,25,1,1,3)
Do not delete
"^DD",399,399,25,1,1,"%D",0)
^.101^2^2^3030611^^
"^DD",399,399,25,1,1,"%D",1,0)
This triggers the status of the bill to indicate an MRA is ready to be
"^DD",399,399,25,1,1,"%D",2,0)
requested.
"^DD",399,399,25,1,1,"CREATE CONDITION")
INTERNAL(REQUEST AN MRA)=1
"^DD",399,399,25,1,1,"CREATE VALUE")
S X=2
"^DD",399,399,25,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,25,1,1,"DT")
2980625
"^DD",399,399,25,1,1,"FIELD")
STATUS
"^DD",399,399,25,1,2,0)
^^TRIGGER^399^8
"^DD",399,399,25,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(399,25,1,2,69.2) S X=X S X=X="",Y=X,X=Y(2),X=X&Y I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(399,25,1,2,1.4)
"^DD",399,399,25,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"S")),DIV=X S $P(^("S"),U,8)=DIV,DIH=399,DIG=8 D ^DICR
"^DD",399,399,25,1,2,2)
Q
"^DD",399,399,25,1,2,69.2)
S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:""),Y(4)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,13),X=X S X=X=2,Y(2)=$G(X),Y(3)=$G(X) S X=$P(Y(4),U,8)
"^DD",399,399,25,1,2,"CREATE CONDITION")
(INTERNAL(#.13)=2)&(INTERNAL(#8)="")
"^DD",399,399,25,1,2,"CREATE VALUE")
S X=DUZ
"^DD",399,399,25,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,25,1,2,"DT")
3030725
"^DD",399,399,25,1,2,"FIELD")
MRA REQUESTOR
"^DD",399,399,25,1,3,0)
^^TRIGGER^399^7
"^DD",399,399,25,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(399,25,1,3,69.2) S X=X S X=X="",Y=X,X=Y(2),X=X&Y I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(399,25,1,3,1.4)
"^DD",399,399,25,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"S")),DIV=X S $P(^("S"),U,7)=DIV,DIH=399,DIG=7 D ^DICR
"^DD",399,399,25,1,3,2)
Q
"^DD",399,399,25,1,3,69.2)
S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:""),Y(4)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,13),X=X S X=X=2,Y(2)=$G(X),Y(3)=$G(X) S X=$P(Y(4),U,7)
"^DD",399,399,25,1,3,"CREATE CONDITION")
(INTERNAL(#.13)=2)&(INTERNAL(#7)="")
"^DD",399,399,25,1,3,"CREATE VALUE")
S X=DT
"^DD",399,399,25,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,25,1,3,"DT")
3030725
"^DD",399,399,25,1,3,"FIELD")
MRA REQUESTED DATE
"^DD",399,399,25,2)
S Y(0)=Y S Y=$P("NO^YES",U,Y+1)
"^DD",399,399,25,2.1)
S Y=$P("NO^YES",U,Y+1)
"^DD",399,399,25,3)
Enter 'Yes' (1) if the bill has been reviewed and is ready for submission to MEDICARE for an MRA, or 'No' (0) if the billing record is not ready to be submitted.
"^DD",399,399,25,5,1,0)
399^9^4
"^DD",399,399,25,21,0)
^^1^1^2980625^^^
"^DD",399,399,25,21,1,0)
This field indicates that the bill is ready to send to MEDICARE for an MRA.
"^DD",399,399,25,"DT")
3030725
"^DD",399,399,28,0)
FORCE PRINT MRA SECONDARY^S^0:NO FORCED PRINT;1:MEDICARE SECONDARY FORCE LOCAL PRINT;^TX;9^Q
"^DD",399,399,28,3)
Enter a 1 to force print locally the subsequent MRA claim
"^DD",399,399,28,21,0)
^^11^11^3040618^
"^DD",399,399,28,21,1,0)
Once the MRA is received from Medicare, the payer sequence on
"^DD",399,399,28,21,2,0)
this claim will be incremented and this claim will become the
"^DD",399,399,28,21,3,0)
subsequent MRA claim.
"^DD",399,399,28,21,4,0)
 
"^DD",399,399,28,21,5,0)
If this field is set to FORCE LOCAL PRINT, then the subsequent
"^DD",399,399,28,21,6,0)
MRA claim cannot be electronically transmitted and must be
"^DD",399,399,28,21,7,0)
printed locally.
"^DD",399,399,28,21,8,0)
 
"^DD",399,399,28,21,9,0)
If this field is set to NO FORCED PRINT (Default), then the
"^DD",399,399,28,21,10,0)
subsequent MRA claim may be sent electronically to the next
"^DD",399,399,28,21,11,0)
payer.
"^DD",399,399,28,"DT")
3040916
"^DIC",350.8,350.8,0)
IB ERROR
"^DIC",350.8,350.8,0,"GL")
^IBE(350.8,
"^DIC",350.8,350.8,"%D",0)
^^11^11^2940214^^^^
"^DIC",350.8,350.8,"%D",1,0)
This file contains errors for billing functions.  It may be used by
"^DIC",350.8,350.8,"%D",2,0)
applications, IB or AR.  The normal format for a routine to return
"^DIC",350.8,350.8,"%D",3,0)
an error is to return the variable:
"^DIC",350.8,350.8,"%D",4,0)
  Y=1^... a successful event occured
"^DIC",350.8,350.8,"%D",5,0)
  Y=-1^error code[;error code;error code...]^additional text
"^DIC",350.8,350.8,"%D",6,0)
The error messages can be displayed by calling routine ^IBAERR.  If
"^DIC",350.8,350.8,"%D",7,0)
the error occurs in a tasked job ($D(ZTQUEUED)'=0) the routine will
"^DIC",350.8,350.8,"%D",8,0)
put the error message in a bulletin and post it to the group defined
"^DIC",350.8,350.8,"%D",9,0)
in the IB SITE PARAMETER FILE.
"^DIC",350.8,350.8,"%D",10,0)
 
"^DIC",350.8,350.8,"%D",11,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",350.8,"B","IB ERROR",350.8)

"^DIC",364.5,364.5,0)
IB DATA ELEMENT DEFINITION^364.5
"^DIC",364.5,364.5,0,"GL")
^IBA(364.5,
"^DIC",364.5,364.5,"%D",0)
^^8^8^2970606^^^^
"^DIC",364.5,364.5,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.5,364.5,"%D",2,0)
 
"^DIC",364.5,364.5,"%D",3,0)
This file contains the definition of all data elements that are needed for
"^DIC",364.5,364.5,"%D",4,0)
various forms throughout the MCCR DHCP system.  It contains the 'blueprint'
"^DIC",364.5,364.5,"%D",5,0)
for how to extract the data for each data element entry.
"^DIC",364.5,364.5,"%D",6,0)
 
"^DIC",364.5,364.5,"%D",7,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.5,364.5,"%D",8,0)
NATIONAL should not be deleted or edited.
"^DIC",364.5,"B","IB DATA ELEMENT DEFINITION",364.5)

"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

**INSTALL NAME**
PRCA*4.5*138
"BLD",832,0)
PRCA*4.5*138^ACCOUNTS RECEIVABLE^0^3041008^y
"BLD",832,1,0)
^^6^6^3040923^
"BLD",832,1,1,0)
Medicare Remittance Advice (MRA) - AR patch.
"BLD",832,1,2,0)
This patch defines two new data elements in file PRCA(430,D0,13). Field 
"BLD",832,1,3,0)
131: Medicare Contractual Adjustment and field 132: Medicare 
"BLD",832,1,4,0)
Unreimbursable Expense. 
"BLD",832,1,5,0)
In addition this patch makes changes to the Bad Debt Report and to the 
"BLD",832,1,6,0)
FMS SV document.
"BLD",832,4,0)
^9.64PA^348.1^2
"BLD",832,4,348.1,0)
348.1
"BLD",832,4,348.1,2,0)
^9.641^348.1^1
"BLD",832,4,348.1,2,348.1,0)
BAD DEBT ALLOWANCE  (File-top level)
"BLD",832,4,348.1,2,348.1,1,0)
^9.6411^.01^1
"BLD",832,4,348.1,2,348.1,1,.01,0)
SGL ACCOUNT
"BLD",832,4,348.1,222)
y^n^p^^^^n^^n
"BLD",832,4,348.1,224)

"BLD",832,4,430,0)
430
"BLD",832,4,430,2,0)
^9.641^430^1
"BLD",832,4,430,2,430,0)
ACCOUNTS RECEIVABLE  (File-top level)
"BLD",832,4,430,2,430,1,0)
^9.6411^132^2
"BLD",832,4,430,2,430,1,131,0)
MEDICARE CONT. ADJUSTMENT
"BLD",832,4,430,2,430,1,132,0)
MEDICARE UNREIMBURSABLE
"BLD",832,4,430,222)
y^n^p^^^^n^^n
"BLD",832,4,430,224)

"BLD",832,4,"APDD",348.1,348.1)

"BLD",832,4,"APDD",348.1,348.1,.01)

"BLD",832,4,"APDD",430,430)

"BLD",832,4,"APDD",430,430,131)

"BLD",832,4,"APDD",430,430,132)

"BLD",832,4,"B",348.1,348.1)

"BLD",832,4,"B",430,430)

"BLD",832,"ABPKG")
n
"BLD",832,"KRN",0)
^9.67PA^8989.52^19
"BLD",832,"KRN",.4,0)
.4
"BLD",832,"KRN",.401,0)
.401
"BLD",832,"KRN",.402,0)
.402
"BLD",832,"KRN",.403,0)
.403
"BLD",832,"KRN",.5,0)
.5
"BLD",832,"KRN",.84,0)
.84
"BLD",832,"KRN",3.6,0)
3.6
"BLD",832,"KRN",3.8,0)
3.8
"BLD",832,"KRN",9.2,0)
9.2
"BLD",832,"KRN",9.8,0)
9.8
"BLD",832,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",832,"KRN",9.8,"NM",1,0)
PRCADR1^^0^B19001295
"BLD",832,"KRN",9.8,"NM",2,0)
PRCASVC^^0^B9280061
"BLD",832,"KRN",9.8,"NM",3,0)
PRCAATR^^0^B16843547
"BLD",832,"KRN",9.8,"NM",4,0)
RCRJRCOC^^0^B59061042
"BLD",832,"KRN",9.8,"NM",5,0)
RCRJRBD^^0^B65206172
"BLD",832,"KRN",9.8,"NM",6,0)
RCRJRBDT^^0^B25318421
"BLD",832,"KRN",9.8,"NM",7,0)
RCRJRBDR^^0^B73367814
"BLD",832,"KRN",9.8,"NM",8,0)
RCXFMSSV^^0^B52906959
"BLD",832,"KRN",9.8,"NM",9,0)
RCRJRCOR^^0^B67310039
"BLD",832,"KRN",9.8,"NM",10,0)
RCDPEV^^0^B37749611
"BLD",832,"KRN",9.8,"NM","B","PRCAATR",3)

"BLD",832,"KRN",9.8,"NM","B","PRCADR1",1)

"BLD",832,"KRN",9.8,"NM","B","PRCASVC",2)

"BLD",832,"KRN",9.8,"NM","B","RCDPEV",10)

"BLD",832,"KRN",9.8,"NM","B","RCRJRBD",5)

"BLD",832,"KRN",9.8,"NM","B","RCRJRBDR",7)

"BLD",832,"KRN",9.8,"NM","B","RCRJRBDT",6)

"BLD",832,"KRN",9.8,"NM","B","RCRJRCOC",4)

"BLD",832,"KRN",9.8,"NM","B","RCRJRCOR",9)

"BLD",832,"KRN",9.8,"NM","B","RCXFMSSV",8)

"BLD",832,"KRN",19,0)
19
"BLD",832,"KRN",19.1,0)
19.1
"BLD",832,"KRN",101,0)
101
"BLD",832,"KRN",409.61,0)
409.61
"BLD",832,"KRN",771,0)
771
"BLD",832,"KRN",870,0)
870
"BLD",832,"KRN",8989.51,0)
8989.51
"BLD",832,"KRN",8989.52,0)
8989.52
"BLD",832,"KRN",8994,0)
8994
"BLD",832,"KRN","B",.4,.4)

"BLD",832,"KRN","B",.401,.401)

"BLD",832,"KRN","B",.402,.402)

"BLD",832,"KRN","B",.403,.403)

"BLD",832,"KRN","B",.5,.5)

"BLD",832,"KRN","B",.84,.84)

"BLD",832,"KRN","B",3.6,3.6)

"BLD",832,"KRN","B",3.8,3.8)

"BLD",832,"KRN","B",9.2,9.2)

"BLD",832,"KRN","B",9.8,9.8)

"BLD",832,"KRN","B",19,19)

"BLD",832,"KRN","B",19.1,19.1)

"BLD",832,"KRN","B",101,101)

"BLD",832,"KRN","B",409.61,409.61)

"BLD",832,"KRN","B",771,771)

"BLD",832,"KRN","B",870,870)

"BLD",832,"KRN","B",8989.51,8989.51)

"BLD",832,"KRN","B",8989.52,8989.52)

"BLD",832,"KRN","B",8994,8994)

"BLD",832,"QUES",0)
^9.62^^
"BLD",832,"REQB",0)
^9.611^8^5
"BLD",832,"REQB",2,0)
PRCA*4.5*136^2
"BLD",832,"REQB",3,0)
PRCA*4.5*172^2
"BLD",832,"REQB",4,0)
PRCA*4.5*49^2
"BLD",832,"REQB",7,0)
PRCA*4.5*220^2
"BLD",832,"REQB",8,0)
PRCA*4.5*208^2
"BLD",832,"REQB","B","PRCA*4.5*136",2)

"BLD",832,"REQB","B","PRCA*4.5*172",3)

"BLD",832,"REQB","B","PRCA*4.5*208",8)

"BLD",832,"REQB","B","PRCA*4.5*220",7)

"BLD",832,"REQB","B","PRCA*4.5*49",4)

"FIA",348.1)
BAD DEBT ALLOWANCE
"FIA",348.1,0)
^RC(348.1,
"FIA",348.1,0,0)
348.1
"FIA",348.1,0,1)
y^n^p^^^^n^^n
"FIA",348.1,0,10)

"FIA",348.1,0,11)

"FIA",348.1,0,"RLRO")

"FIA",348.1,0,"VR")
4.5^PRCA
"FIA",348.1,348.1)
1
"FIA",348.1,348.1,.01)

"FIA",430)
ACCOUNTS RECEIVABLE
"FIA",430,0)
^PRCA(430,
"FIA",430,0,0)
430I
"FIA",430,0,1)
y^n^p^^^^n^^n
"FIA",430,0,10)

"FIA",430,0,11)

"FIA",430,0,"RLRO")

"FIA",430,0,"VR")
4.5^PRCA
"FIA",430,430)
1
"FIA",430,430,131)

"FIA",430,430,132)

"MBREQ")
0
"PKG",142,-1)
1^1
"PKG",142,0)
ACCOUNTS RECEIVABLE^PRCA^BILL COLLECTIONS
"PKG",142,20,0)
^9.402P^1^1
"PKG",142,20,1,0)
2^^PRCAMRG
"PKG",142,20,1,1)

"PKG",142,20,"B",2,1)

"PKG",142,22,0)
^9.49I^1^1
"PKG",142,22,1,0)
4.5^3040809^3040812^8
"PKG",142,22,1,"PAH",1,0)
138^3041008^101001
"PKG",142,22,1,"PAH",1,1,0)
^^6^6^3041008
"PKG",142,22,1,"PAH",1,1,1,0)
Medicare Remittance Advice (MRA) - AR patch.
"PKG",142,22,1,"PAH",1,1,2,0)
This patch defines two new data elements in file PRCA(430,D0,13). Field 
"PKG",142,22,1,"PAH",1,1,3,0)
131: Medicare Contractual Adjustment and field 132: Medicare 
"PKG",142,22,1,"PAH",1,1,4,0)
Unreimbursable Expense. 
"PKG",142,22,1,"PAH",1,1,5,0)
In addition this patch makes changes to the Bad Debt Report and to the 
"PKG",142,22,1,"PAH",1,1,6,0)
FMS SV document.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","PRCAATR")
0^3^B16843547
"RTN","PRCAATR",1,0)
PRCAATR ;WASH-ISC@ALTOONA,PA/RGY-VIEW TRANSACTION FOR BILLS ;2/14/96  2:46 PM
"RTN","PRCAATR",2,0)
V ;;4.5;Accounts Receivable;**36,104,172,138**;Mar 20, 1995
"RTN","PRCAATR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCAATR",4,0)
EN1(BILL) ;ENTRY POINT FROM PRCAAPR
"RTN","PRCAATR",5,0)
 NEW X,COUNT,OUT,TRAN,SEL,PRCAATRX,PRCAIO,PRCAIOS,D0,PRCAQUE,POP,PRCAPRT,Y,ZTSK
"RTN","PRCAATR",6,0)
 I '$D(BILL) G Q
"RTN","PRCAATR",7,0)
 I BILL'?1N.N!'$D(^PRCA(430,+BILL,0)) G Q
"RTN","PRCAATR",8,0)
 S PRCAPRT=1,PRCAIO=IO(0),PRCAIO(0)=IO(0),COUNT=0 K ^TMP("PRCAATR",$J)
"RTN","PRCAATR",9,0)
 D HDR,DIS,^%ZISC
"RTN","PRCAATR",10,0)
Q K ^TMP("PRCAATR",$J),IO("Q") Q
"RTN","PRCAATR",11,0)
HDR ;Header
"RTN","PRCAATR",12,0)
 D HDR^PRCAAPR1
"RTN","PRCAATR",13,0)
 I $P($G(^PRCA(430,BILL,13)),"^") W !,"MEDICARE CONTRACTUAL ADJUSTMENT: ",$J($P($G(^PRCA(430,BILL,13)),"^"),0,2)
"RTN","PRCAATR",14,0)
 I $P($G(^PRCA(430,BILL,13)),"^",2) W !,"UNREIMBURSED MEDICARE EXPENSE: ",$J($P($G(^PRCA(430,BILL,13)),"^",2),0,2)
"RTN","PRCAATR",15,0)
 W !,"Bill #: ",$P(^PRCA(430,BILL,0),"^") D:$P(^(0),"^",9)'=+DEBT DEB W !!,"#",?8,"Tr #",?17,"Type",?52,"Date",?68,"Amount"
"RTN","PRCAATR",16,0)
 S X="",$P(X,"-",IOM)="" W !,X
"RTN","PRCAATR",17,0)
 Q
"RTN","PRCAATR",18,0)
DIS ;Display transactions
"RTN","PRCAATR",19,0)
 W !,?17,"Original Amount",?52,$$SLH^RCFN01($P(^PRCA(430,BILL,0),"^",10)),?65,$J($P(^(0),"^",3),9,2)
"RTN","PRCAATR",20,0)
 I '$O(^PRCA(433,"C",BILL,0)) D
"RTN","PRCAATR",21,0)
 . S X="",$P(X,"*",20)="" W !!,X,"  NO TRANSACTION INFORMATION AVAILABLE  ",X
"RTN","PRCAATR",22,0)
RD . R !!,"Press return to continue: ",X:DTIME S:'$T DTOUT=1 S OUT=1
"RTN","PRCAATR",23,0)
 . I X["?" W !!,"Press the return key to return to menu." G RD
"RTN","PRCAATR",24,0)
 . Q
"RTN","PRCAATR",25,0)
 F TRAN=0:0 S TRAN=$O(^PRCA(433,"C",BILL,TRAN)) Q:'TRAN!$D(OUT)  D TLN
"RTN","PRCAATR",26,0)
 S X=$G(^PRCA(430,BILL,7))
"RTN","PRCAATR",27,0)
 I '$D(OUT) W !?65,"------",!,?64,"$",$J($P(X,"^")+$P(X,"^",2)+$P(X,"^",3)+$P(X,"^",4)+$P(X,"^",5),9,2) D READ
"RTN","PRCAATR",28,0)
 Q
"RTN","PRCAATR",29,0)
TLN ;Display a transaction
"RTN","PRCAATR",30,0)
 N YR
"RTN","PRCAATR",31,0)
 I $Y+5>IOSL,COUNT D READ G:$D(DTOUT)!$D(OUT) Q1 D HDR
"RTN","PRCAATR",32,0)
 S COUNT=COUNT+1,X=$G(^PRCA(433,TRAN,1)),^TMP("PRCAATR",$J,COUNT)=TRAN
"RTN","PRCAATR",33,0)
 W !,COUNT,$S($P(^PRCA(433,TRAN,0),"^",4)=1!$P(^(0),"^",10):"(I)",1:""),?8,TRAN,?17
"RTN","PRCAATR",34,0)
 W $S($P($G(^PRCA(430.3,+$P(X,"^",2),0)),"^",3)=17:$P($G(^PRCA(433,TRAN,5)),"^",2),1:$P($G(^(0)),"^"))
"RTN","PRCAATR",35,0)
 ;  show decrease adjustments as negative (patch 4.5*172)
"RTN","PRCAATR",36,0)
 I $P(X,"^",2)=35 S:$P(X,"^",5)>0 $P(X,"^",5)=-$P(X,"^",5)
"RTN","PRCAATR",37,0)
 W ?52,$S(+X:$$SLH^RCFN01(+X),1:""),?65,$J($P(X,"^",5),9,2)
"RTN","PRCAATR",38,0)
Q1 Q
"RTN","PRCAATR",39,0)
READ ;Read a trans number
"RTN","PRCAATR",40,0)
 I IO'=IO(0) G Q2
"RTN","PRCAATR",41,0)
ASK W !!,"Select 1-",COUNT,$S(PRCAPRT:" or 'P' to Print",1:" to print") W:TRAN " or return to continue" R ": ",X:DTIME I X["^"!'$T S:'$T DTOUT=1 S OUT=1 G Q2
"RTN","PRCAATR",42,0)
 I PRCAPRT,X="P" S %ZIS="MQ" D ^%ZIS D  S PRCAPRT=0,PRCAIO=IO,PRCAIO(0)=IO(0) G:'POP ASK K POP S OUT=1 G Q2
"RTN","PRCAATR",43,0)
 . I $D(IO("S")) S PRCAIOS=ION D ^%ZISC
"RTN","PRCAATR",44,0)
 . Q
"RTN","PRCAATR",45,0)
 I X["?" W !!,"To see detailed information for a transaction number, enter the corresponding '#'",!,"next to the transaction.  (Ex: 1 or 1,3)" G ASK
"RTN","PRCAATR",46,0)
 I X="" S:TRAN="" OUT=1 G Q2
"RTN","PRCAATR",47,0)
 S SEL=X
"RTN","PRCAATR",48,0)
 F X=1:1:$L(SEL,",") S Y=$P(SEL,",",X) I Y'?1N.N!'$D(^TMP("PRCAATR",$J,+Y)) W *7," ??" G READ
"RTN","PRCAATR",49,0)
 F PRCAATRX=1:1:$L(SEL,",") S Y=$P(SEL,",",PRCAATRX) D VT Q:$D(OUT)
"RTN","PRCAATR",50,0)
 S OUT=1
"RTN","PRCAATR",51,0)
Q2 Q
"RTN","PRCAATR",52,0)
VT ;View a transaction
"RTN","PRCAATR",53,0)
 N IOP,%ZIS,ZTRTN,ZTDESC,ZTSAVE,ZTDTH
"RTN","PRCAATR",54,0)
 S D0=$G(^TMP("PRCAATR",$J,+Y)) G:'D0 Q3
"RTN","PRCAATR",55,0)
 I $D(IO("Q")) S ZTSAVE("D0")="",ZTSAVE("PRCAIO")=IO,ZTSAVE("PRCAIO(0)")=IO(0),ZTRTN="DQ^PRCAATR",ZTDESC="AR TRANS PROFILE",ZTDTH=$H D ^%ZTLOAD W !,"*** Trans # ",D0," REQUEST QUEUED ***" G Q3
"RTN","PRCAATR",56,0)
 I IO'=IO(0) W !,"OK, Printing Transaction # ",D0," ..."
"RTN","PRCAATR",57,0)
 I $D(PRCAIOS) S IOP=PRCAIOS D ^%ZIS
"RTN","PRCAATR",58,0)
 U IO D DQ U IO(0)
"RTN","PRCAATR",59,0)
Q3 Q
"RTN","PRCAATR",60,0)
DQ ;
"RTN","PRCAATR",61,0)
 W @IOF S X="",$P(X,"=",30)="" W !,X," TRANSACTION PROFILE ",X,!!
"RTN","PRCAATR",62,0)
 K DXS D ^PRCATR3 K DXS S X=D0 D ENF^IBOLK
"RTN","PRCAATR",63,0)
RD1 I $E(IOST)="C" R !!,"PRESS <RETURN> TO CONTINUE: ",X:DTIME S:'$T DTOUT=1,OUT=1 I X["?" W !!,"Press return to view next transaction or to continue" G RD1
"RTN","PRCAATR",64,0)
 Q
"RTN","PRCAATR",65,0)
DEB ;View debtor
"RTN","PRCAATR",66,0)
 NEW PRCA
"RTN","PRCAATR",67,0)
 S PRCA=$P(^PRCA(430,BILL,0),"^",9) I PRCA S PRCA=$P(^RCD(340,PRCA,0),"^") W "   ",$P($G(@("^"_$P(PRCA,";",2)_+PRCA_",0)")),"^")
"RTN","PRCAATR",68,0)
 Q
"RTN","PRCADR1")
0^1^B19001295
"RTN","PRCADR1",1,0)
PRCADR1 ;SF-ISC/YJK-PRINT ADDRESS,APPROPR.CDS ;8/16/96  1:02 PM
"RTN","PRCADR1",2,0)
V ;;4.5;Accounts Receivable;**49,138**;Mar 20, 1995
"RTN","PRCADR1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCADR1",4,0)
 ;print debtor's /vendor address,multiple appropriations,list of other bills.
"RTN","PRCADR1",5,0)
EN1 ;print the appropriation,pat ref #. (multiple) and amount.
"RTN","PRCADR1",6,0)
 W !,"ORIGINAL AMOUNT: ",$J($P(^PRCA(430,D0,0),U,3),0,2)
"RTN","PRCADR1",7,0)
 I $P($G(^PRCA(430,D0,13)),"^") W !,"MEDICARE CONTRACTUAL ADJUSTMENT: ",$J($P($G(^PRCA(430,D0,13)),"^"),0,2)
"RTN","PRCADR1",8,0)
 I $P($G(^PRCA(430,D0,13)),"^",2) W !,"UNREIMBURSED MEDICARE EXPENSE: ",$J($P($G(^PRCA(430,D0,13)),"^",2),0,2)
"RTN","PRCADR1",9,0)
 W !!,"FISCAL YEAR",?15,"APPROP. CODE",?38,"PAT REFERENCE #",?63,"AMOUNT"
"RTN","PRCADR1",10,0)
 W !,"-----------",?15,"------------",?38,"---------------",?63,"------"
"RTN","PRCADR1",11,0)
 S PRCAFN=0 F PRCAE1=0:0 S PRCAFN=$O(^PRCA(430,D0,2,PRCAFN)) Q:PRCAFN'>0  D WRPAT
"RTN","PRCADR1",12,0)
END1 K PRCAE1,PRCAFN Q  ;end of EN1
"RTN","PRCADR1",13,0)
WRPAT Q:'$D(^PRCA(430,D0,2,PRCAFN,0))  S PRCAFY=$P(^(0),U,1),PRCAMT=$P(^(0),U,2)
"RTN","PRCADR1",14,0)
 S PRCAPAT="" I $P(^PRCA(430,D0,2,PRCAFN,0),U,3)'="" S PRCAPAT=$S($D(^PRC(442,$P(^(0),U,3),0)):$P(^(0),U,1),1:"")
"RTN","PRCADR1",15,0)
 S PRCAPPR=$P($G(^PRCA(430,D0,11)),U,17)
"RTN","PRCADR1",16,0)
 W !,?5,PRCAFY,?18,$E(PRCAPPR,1,10),?40,PRCAPAT,?60,$J(PRCAMT,9,2)
"RTN","PRCADR1",17,0)
 K PRCAPAT,PRCAPPR,PRCAFY,PRCAMT Q
"RTN","PRCADR1",18,0)
EN2 ;PRINT DEBTOR'S ADDRESS - VENDOR
"RTN","PRCADR1",19,0)
 Q:'$D(D0)  S PRCADBPT=$S($P(^PRCA(430,D0,0),U,9)'="":$P(^(0),U,9),1:"") G:PRCADBPT="" END2 S PRCADB=$P(^RCD(340,PRCADBPT,0),"^") N X S X=$$DADD^RCAMADD(PRCADB) S $P(PRCAGL,"^",1,6)=$P(X,"^",1,6),$P(PRCAGL,"^",9)=$P(X,"^",7) K PRCADB
"RTN","PRCADR1",20,0)
 S PRCASTE=$P(PRCAGL,U,5),PRCALN=$S($D(PRCALN):PRCALN,1:0)
"RTN","PRCADR1",21,0)
WR W:PRCALN<1 ! W !,?PRCALN,$P(PRCAGL,U,1)
"RTN","PRCADR1",22,0)
 F I=2,3,4 W:$P(PRCAGL,U,I)'="" !,?PRCALN,$P(PRCAGL,U,I)
"RTN","PRCADR1",23,0)
 I PRCASTE'="",PRCASTE'[" " W ", ",PRCASTE," ",$P(PRCAGL,U,6)
"RTN","PRCADR1",24,0)
 W "        PHONE NO.:",$P(PRCAGL,U,9)
"RTN","PRCADR1",25,0)
END2 K %,PRCASTE,PRCAGL,PRCADBPT,PRCALN Q
"RTN","PRCADR1",26,0)
 ;
"RTN","PRCADR1",27,0)
EN4 ;Print the debtor's other bills.
"RTN","PRCADR1",28,0)
 D PRCOMM^PRCAUT3 Q:'$D(D0)  S PRCAT1=$P(^PRCA(430,D0,0),U,2) G:PRCAT1="" END4 S PRCAT1=$P(^PRCA(430.2,PRCAT1,0),U,6) G:PRCAT1["T" END4
"RTN","PRCADR1",29,0)
 S PRCADBPT=$S($P(^PRCA(430,D0,0),U,9)'="":$P(^(0),U,9),1:"")
"RTN","PRCADR1",30,0)
 G:PRCADBPT="" END4 S X=$P(^RCD(340,PRCADBPT,0),"^",3)
"RTN","PRCADR1",31,0)
 W !,"Statement date: " N %DT,Y S %DT="F",X=$S($E(DT,6,7)>X:$S($E(DT,4,5)+1>12:1,1:$E(DT,4,5)+1),1:$E(DT,4,5))_"-"_$P(^RCD(340,PRCADBPT,0),"^",3) D ^%DT X ^DD("DD") W $S($L(Y)>4:Y,1:"N/A")
"RTN","PRCADR1",32,0)
 S PRCABNT="",PRCACT=0 W !,"OTHER BILLS:",!?2
"RTN","PRCADR1",33,0)
 F I=0:0 S PRCABNT=$O(^PRCA(430,"C",PRCADBPT,PRCABNT)) Q:PRCABNT=""  I PRCABNT'=D0,$D(^PRCA(430,PRCABNT,0)) S PRCACT=PRCACT+1,X="" D:$Y+5>IOSL&($E(IOST)="C")  Q:X["^"  D EN41
"RTN","PRCADR1",34,0)
 .W *7 R X:DTIME I '$T S X="^" Q
"RTN","PRCADR1",35,0)
 .W @IOF,!?2
"RTN","PRCADR1",36,0)
 .Q
"RTN","PRCADR1",37,0)
END4 K PRCAT1,PRCADBPT,PRCABNT,I,PRCACT Q  ;end of EN4
"RTN","PRCADR1",38,0)
EN41 S PRCAT11=$P(^PRCA(430,PRCABNT,0),U,2) G:PRCAT11="" END41 S PRCAT11=^PRCA(430.2,PRCAT11,0)
"RTN","PRCADR1",39,0)
 S PRCABTY=" ("_$E(PRCAT11,1,4)_"/"_$S($D(^PRCA(430.3,+$P(^PRCA(430,PRCABNT,0),"^",8),0)):$E($P(^(0),"^"),1,4),1:"")_")  " W $P(^PRCA(430,PRCABNT,0),U,1),PRCABTY W:'(PRCACT#3) !?2
"RTN","PRCADR1",40,0)
END41 K PRCABTY,PRCAT11 Q  ;end of EN41
"RTN","PRCADR1",41,0)
EN5 ;Print interest/admin rate date and rate.
"RTN","PRCADR1",42,0)
 Q:'$D(PRCABN)  S (PRCA("INTD"),PRCA("INTR"),PRCA("ADMD"),PRCA("ADMR"))=""
"RTN","PRCADR1",43,0)
 S PRCAIDT=X,X=$$INT^RCMSFN01($P(^PRCA(430,PRCABN,0),"^",10)),PRCA("INTR")=+X
"RTN","PRCADR1",44,0)
 S Y=$P(X,"^",2) X ^DD("DD") S PRCA("INTD")=Y
"RTN","PRCADR1",45,0)
EN51 ;
"RTN","PRCADR1",46,0)
 S X=$$ADM^RCMSFN01($P(^PRCA(430,PRCABN,0),"^",10)),PRCA("ADMR")=+X,Y=$P(X,"^",2) X ^DD("DD") S PRCA("ADMD")=Y
"RTN","PRCADR1",47,0)
W5 W !!,"INTEREST EFFECTIVE RATE DATE:  ",PRCA("INTD"),?45,"ANNUAL INTEREST RATE:  ",PRCA("INTR")
"RTN","PRCADR1",48,0)
 W !,"ADMIN EFFECTIVE RATE DATE:     ",PRCA("ADMD"),?45,"MONTHLY ADMIN RATE: ",PRCA("ADMR")
"RTN","PRCADR1",49,0)
 S X=$S($D(PRCAIDT):PRCAIDT,1:"") K PRCA("INTD"),PRCA("ADMR"),PRCA("ADMD"),PRCA("INTR"),PRCAIDT Q
"RTN","PRCADR1",50,0)
PATNM ;write a patient name for the 3rd party
"RTN","PRCADR1",51,0)
 Q:('$D(PRCAT))!('$D(PRCABN))  Q:PRCAT'["T"
"RTN","PRCADR1",52,0)
 S DFN=$P(^PRCA(430,PRCABN,0),U,7) I DFN D DEM^VADPT
"RTN","PRCADR1",53,0)
 W !,"PATIENT: ",$S($D(VADM):VADM(1),1:""),?45,"SSN: ",$S($D(VADM):$P(VADM(2),U,2),1:""),! K DFN,VADM,VAERR Q  ;end of PATNM
"RTN","PRCADR1",54,0)
EN6 ;Insurance insured's information
"RTN","PRCADR1",55,0)
 Q:('$D(PRCAT))!('$D(PRCABN))  Q:PRCAT'["T"  S Z=$S($D(^PRCA(430,PRCABN,202)):^(202),1:"")
"RTN","PRCADR1",56,0)
 W !!,"INSURED'S NAME",?28,"ID NO.",?45,"GROUP NAME",?62,"GROUP NO."
"RTN","PRCADR1",57,0)
 W !,?2,$P(Z,U,1),?29,$P(Z,U,4),?46,$P(Z,U,5),?63,$P(Z,U,6)
"RTN","PRCADR1",58,0)
 S %=^PRCA(430,PRCABN,0) W:$P(%,U,19)>0 !!,"SECONDARY INSURANCE CARRIER:  ",$S($D(^DIC(36,+$P(%,U,19),0)):$P(^(0),U,1),1:"")
"RTN","PRCADR1",59,0)
 W:$P(%,U,20)>0 !,"TERTIARY INSURANCE CARRIER:  ",$S($D(^DIC(36,+$P(%,U,20),0)):$P(^(0),U,1),1:"") K %,Z Q
"RTN","PRCASVC")
0^2^B9280061
"RTN","PRCASVC",1,0)
PRCASVC ;SF-ISC/YJK-ACCEPT, AMMEND AND CANCEL AR BILL ;9/6/95  2:09 PM
"RTN","PRCASVC",2,0)
V ;;4.5;Accounts Receivable;**1,21,48,90,136,138**;Mar 20, 1995
"RTN","PRCASVC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCASVC",4,0)
REL ;Accept bill into AR
"RTN","PRCASVC",5,0)
 N X,Y
"RTN","PRCASVC",6,0)
 D ^PRCASVC6 G:$D(PRCAERR) Q3 S PRCADEBT=$O(^RCD(340,"B",PRCASV("DEBTOR"),0)) I 'PRCADEBT K DD,DO S DIC="^RCD(340,",DIC(0)="QL",X=PRCASV("DEBTOR"),DLAYGO=340 D FILE^DICN K DIC,DLAYGO,DO Q:Y<0  S PRCADEBT=+Y
"RTN","PRCASVC",7,0)
 D FY S PRCAT=$P(^PRCA(430.2,PRCASV("CAT"),0),"^",6) F Y="IDNO^4","GPNO^6","GPNM^5","INPA^1" S:$D(PRCASV($P(Y,"^"))) $P(^PRCA(430,PRCASV("ARREC"),202),"^",$P(Y,"^",2))=PRCASV($P(Y,"^"))
"RTN","PRCASVC",8,0)
 S DIE="^PRCA(430,",DR="[PRCASV REL]",DA=PRCASV("ARREC") D ^DIE
"RTN","PRCASVC",9,0)
Q3 K PRCAT,PRCAORA,PRCADEBT,DIE,DR,%
"RTN","PRCASVC",10,0)
 ;  set the fund for the bill (set in routine rcxfmsuf)
"RTN","PRCASVC",11,0)
 S %=$$GETFUNDB^RCXFMSUF(DA)
"RTN","PRCASVC",12,0)
 I "^27^28^"[("^"_PRCASV("CAT")_"^") D
"RTN","PRCASVC",13,0)
 .N P
"RTN","PRCASVC",14,0)
 .F P=6,8,10,15 S $P(^PRCA(430,DA,11),"^",P)=$S(P=6:1000,P=8:$G(PRCASV("SITE")),P=10:9,1:$P($G(PRCASV("FY")),"^"))
"RTN","PRCASVC",15,0)
 .S $P(^PRCA(430,DA,11),"^",18,999)=""
"RTN","PRCASVC",16,0)
 I PRCASV("CAT")=27 S $P(^PRCA(430,+PRCASV("ARREC"),0),"^",5)=$O(^PRCA(430.6,"B","CHMPV",0))
"RTN","PRCASVC",17,0)
 I PRCASV("CAT")=29 S $P(^PRCA(430,DA,11),"^",18,999)=""
"RTN","PRCASVC",18,0)
 I "^30^31^32^"[("^"_PRCASV("CAT")_"^") D
"RTN","PRCASVC",19,0)
 .N RCCARE,P
"RTN","PRCASVC",20,0)
 .F P=8,9,10,15 S $P(^PRCA(430,DA,11),"^",P)=$S(P=8:$P(^PRCA(430,DA,0),"^",12),P=9:1,P=10:"02",1:$P($G(PRCASV("FY")),"^"))
"RTN","PRCASVC",21,0)
 .S $P(^PRCA(430,DA,11),"^",18)=""
"RTN","PRCASVC",22,0)
 .S RCCARE=$$TYP^IBRFN(DA),RCCARE(1)=$S(RCCARE="I":8028,RCCARE="O":8029,1:8030),$P(^PRCA(430,DA,11),"^",6)=RCCARE(1)
"RTN","PRCASVC",23,0)
 I $G(PRCASV("MEDCA"))!$G(PRCASV("MEDURE")) D MEDICARE
"RTN","PRCASVC",24,0)
 K DA
"RTN","PRCASVC",25,0)
 Q
"RTN","PRCASVC",26,0)
 ;
"RTN","PRCASVC",27,0)
 ;
"RTN","PRCASVC",28,0)
FY K:$D(^PRCA(430,PRCASV("ARREC"),2)) ^(2) S PRCAK1=1,PRCAORA=0,^PRCA(430,PRCASV("ARREC"),2,0)="^430.01IA^^"
"RTN","PRCASVC",29,0)
 F J=1:1 S X=$P(PRCASV("FY"),U,PRCAK1),PRCAMT=+$P(PRCASV("FY"),U,PRCAK1+1) D FY1 S PRCAK1=PRCAK1+2 Q:$P(PRCASV("FY"),U,PRCAK1)=""
"RTN","PRCASVC",30,0)
EXITFY K PRCAK1,J,PRCAMT Q
"RTN","PRCASVC",31,0)
FY1 S DA(1)=PRCASV("ARREC"),DIC="^PRCA(430,"_DA(1)_",2,",DIC(0)="QL",DLAYGO=430 D ^DIC K DIC,DLAYGO Q:Y<0  S DA=+Y
"RTN","PRCASVC",32,0)
 S PRCAORA=PRCAORA+PRCAMT,$P(^PRCA(430,PRCASV("ARREC"),0),"^",3)=PRCAORA,$P(^(7),"^")=PRCAORA,$P(^(2,DA,0),U,2)=PRCAMT,$P(^(0),"^",8)=PRCAMT
"RTN","PRCASVC",33,0)
 K DA Q
"RTN","PRCASVC",34,0)
 ;
"RTN","PRCASVC",35,0)
MEDICARE ;Setup Medicare Supplemental amounts
"RTN","PRCASVC",36,0)
 N DR,DIE
"RTN","PRCASVC",37,0)
 I $G(PRCASV("MEDCA")) S DIE="^PRCA(430,",DR="131////"_PRCASV("MEDCA") D ^DIE
"RTN","PRCASVC",38,0)
 I $G(PRCASV("MEDURE")) S DIE="^PRCA(430,",DR="132////"_PRCASV("MEDURE") D ^DIE
"RTN","PRCASVC",39,0)
 K PRCASV("MEDCA"),PRCASV("MEDURE")
"RTN","PRCASVC",40,0)
 Q  ;MEDICARE
"RTN","PRCASVC",41,0)
 ;
"RTN","RCDPEV")
0^10^B37749611
"RTN","RCDPEV",1,0)
RCDPEV ;ALB/TMK - EDI LOCKBOX WORKLIST VERIFY PAYMENTS ;28-JAN-04
"RTN","RCDPEV",2,0)
 ;;4.5;Accounts Receivable;**208,138**;Mar 20, 1995
"RTN","RCDPEV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEV",4,0)
 Q
"RTN","RCDPEV",5,0)
 ;
"RTN","RCDPEV",6,0)
AUTOVER(RCSCR) ; Entrypoint to auto-verify an ERA worklist
"RTN","RCDPEV",7,0)
 ; RCSCR = ien of the ERA worklist entry in file 344.49
"RTN","RCDPEV",8,0)
 N Z,Z0,Z00,RC399,RC430,RC3444,RC36112,X,X1,X2,X12,DA,DR,DIE
"RTN","RCDPEV",9,0)
 S Z=0 F  S Z=$O(^RCY(344.49,Z)) Q:'Z  S Z0=0 F  S Z0=$O(^RCY(344.49,Z,1,Z0)) Q:'Z0  I $P($G(^(Z0,0)),U,7) S Z00=$G(^(0)) D
"RTN","RCDPEV",10,0)
 . I $$VER(RCSCR,+$P(Z00,U,7),+$P(Z00,U,9)) S DA(1)=RCSCR,DA=Z0,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".13////1" D ^DIE
"RTN","RCDPEV",11,0)
 ;
"RTN","RCDPEV",12,0)
 Q
"RTN","RCDPEV",13,0)
 ;
"RTN","RCDPEV",14,0)
VER(RCSCR,RCBILL,RCREF,F1) ; Run verif for WL entry RCSCR in file 344.49
"RTN","RCDPEV",15,0)
 ;  RCBILL = ien of claim in file 430
"RTN","RCDPEV",16,0)
 ;  RCREF = the entry referenced in subfile file 344.41
"RTN","RCDPEV",17,0)
 ;  F1 = flag if set = 1 will return all data, regardless of if it
"RTN","RCDPEV",18,0)
 ;        matches or not.  If flag is set to 1 and data doesn't match,
"RTN","RCDPEV",19,0)
 ;        an asterisk (*) will preceed the actual data value in the
"RTN","RCDPEV",20,0)
 ;        corresponding piece
"RTN","RCDPEV",21,0)
 ; Function returns the following data:
"RTN","RCDPEV",22,0)
 ;   '^' piece 1: 1 if verfied OK   0 if not
"RTN","RCDPEV",23,0)
 ;   '^' piece 2: patient name from VistA if mismatch
"RTN","RCDPEV",24,0)
 ;   '^' piece 3: patient name from EEOB if mismatch
"RTN","RCDPEV",25,0)
 ;   '^' piece 4: amt billed from VistA if mismatch
"RTN","RCDPEV",26,0)
 ;   '^' piece 5: amt billed from EEOB if mismatch
"RTN","RCDPEV",27,0)
 ;   '^' piece 6: date of service 'from' from VistA if mismatch
"RTN","RCDPEV",28,0)
 ;   '^' piece 7: date of service 'from' from EEOB if mismatch
"RTN","RCDPEV",29,0)
 ;   '^' piece 8: date of service 'to' from VistA if mismatch
"RTN","RCDPEV",30,0)
 ;   '^' piece 9: date of service 'to' from EEOB if mismatch
"RTN","RCDPEV",31,0)
 ;   '^' piece 10: patient SSN from VistA
"RTN","RCDPEV",32,0)
 ;
"RTN","RCDPEV",33,0)
 N RESULT,SETF1,RC430,RC399,RC3444,RC36112,X,X1,X2,X12,NM,NM1,DTOK,SSN,RC43013
"RTN","RCDPEV",34,0)
 S RESULT=1,SETF1=$S($G(F1):"*",1:"")
"RTN","RCDPEV",35,0)
 S RC430=$G(^PRCA(430,RCBILL,0)),RC43013=$G(^(13))
"RTN","RCDPEV",36,0)
 S RC399=$G(^DGCR(399,RCBILL,0))
"RTN","RCDPEV",37,0)
 S RC3444=$G(^RCY(344.4,RCSCR,1,RCREF,0))
"RTN","RCDPEV",38,0)
 S RC36112=$G(^IBM(361.1,+$P(RC3444,U,2),2))
"RTN","RCDPEV",39,0)
 ;
"RTN","RCDPEV",40,0)
 S NM=$P($G(^DPT(+$P(RC399,U,2),0)),U),X=$E($P(NM,","),1,5) ; Name from VistA
"RTN","RCDPEV",41,0)
 S SSN=$P($G(^DPT(+$P(RC399,U,2),0)),U,9)
"RTN","RCDPEV",42,0)
 S NM1=$P(RC3444,U,15),X1=$E($P(NM1,","),1,5) ; from EEOB
"RTN","RCDPEV",43,0)
 I $G(F1),X1=X S $P(RESULT,U,2)=NM,$P(RESULT,U,3)=NM1
"RTN","RCDPEV",44,0)
 I X1'=X S $P(RESULT,U)=0,$P(RESULT,U,2)=SETF1_NM,$P(RESULT,U,3)=SETF1_NM1
"RTN","RCDPEV",45,0)
 ;
"RTN","RCDPEV",46,0)
 S X=$P(RC430,U,3)+$P(RC43013,U)+$P(RC43013,U,2) ; Amount billed from VistA (including MRA totals)
"RTN","RCDPEV",47,0)
 S X1=$P(RC36112,U,4) ; from EEOB
"RTN","RCDPEV",48,0)
 I $G(F1),+X=+X1 S $P(RESULT,U,4)=X,$P(RESULT,U,5)=X1
"RTN","RCDPEV",49,0)
 I +X'=+X1 S $P(RESULT,U)=0,$P(RESULT,U,4)=SETF1_X,$P(RESULT,U,5)=SETF1_X1
"RTN","RCDPEV",50,0)
 ;
"RTN","RCDPEV",51,0)
 S X=$P($G(^DGCR(399,+RCBILL,"U")),U) ; Date of service from VistA
"RTN","RCDPEV",52,0)
 S X2=$P($G(^DGCR(399,+RCBILL,"U")),U,2)
"RTN","RCDPEV",53,0)
 S X1=$P($G(^IBM(361.1,+$P(RC3444,U,2),1)),U,10) ; from EEOB
"RTN","RCDPEV",54,0)
 S X12=$P($G(^IBM(361.1,+$P(RC3444,U,2),1)),U,11)
"RTN","RCDPEV",55,0)
 ; if no date of service on EEOB, skip the check
"RTN","RCDPEV",56,0)
 ; Date of svc on EEOB must fall into date range for svc dates in VistA
"RTN","RCDPEV",57,0)
 S DTOK=0
"RTN","RCDPEV",58,0)
 I X1 D
"RTN","RCDPEV",59,0)
 . I X1=X S DTOK=1
"RTN","RCDPEV",60,0)
 . I 'DTOK,X1>X S:X1'>X2 DTOK=1
"RTN","RCDPEV",61,0)
 . I 'DTOK,X1<X S:X12'<X DTOK=1
"RTN","RCDPEV",62,0)
 . I 'DTOK S $P(RESULT,U)=0,$P(RESULT,U,6)=SETF1_X,$P(RESULT,U,7)=SETF1_X1,$P(RESULT,U,8)=SETF1_X2,$P(RESULT,U,9)=SETF1_X12 Q
"RTN","RCDPEV",63,0)
 I DTOK,$G(F1) S $P(RESULT,U,6)=X,$P(RESULT,U,7)=X1,$P(RESULT,U,8)=X2,$P(RESULT,U,9)=X12
"RTN","RCDPEV",64,0)
 S $P(RESULT,U,10)=SSN
"RTN","RCDPEV",65,0)
 ;
"RTN","RCDPEV",66,0)
VERQ Q RESULT
"RTN","RCDPEV",67,0)
 ;
"RTN","RCDPEV",68,0)
MVER(RCERA) ; Manually mark an EEOB as verified
"RTN","RCDPEV",69,0)
 N A,CT,DA,DIE,DR,DTOUT,DUOUT,Z,Z0,Z1,RCT,RCY,RCY0,RCZ0,RCLINE,RCYNUM,DIR,X,Y,RESULT,SPLIT,Q,Q0,DT1,DT2
"RTN","RCDPEV",70,0)
 S RCT=0,CT=1
"RTN","RCDPEV",71,0)
 F Z1=1:1 S Z=$G(^TMP("RCDPE-EOB_WLDX",$J,Z1)) Q:Z=""  Q:CT'<100  S Z0=$G(^RCY(344.49,RCERA,1,+$P(Z,U,2),0)) I Z0'="",'$P(Z0,U,13) S RCT=RCT+1 D  Q:CT'<100
"RTN","RCDPEV",72,0)
 . S CT=CT+1 I CT<100 D  Q
"RTN","RCDPEV",73,0)
 .. S:RCT=1 RCT(1)=Z1
"RTN","RCDPEV",74,0)
 .. S DIR("?",CT)="  "_$G(^TMP("RCDPE-EOB_WL",$J,+Z,0)),CT=CT+1,DIR("?",CT)=$J("",10)_$P(Z0,U,2)
"RTN","RCDPEV",75,0)
 .. S Q=+Z0
"RTN","RCDPEV",76,0)
 .. I $O(^RCY(344.49,RCERA,1,"B",Q_".9999"),-1)'=(Q_".001")
"RTN","RCDPEV",77,0)
 .. I $O(^RCY(344.49,RCERA,1,"B",Q_".9999"),-1)'=(Q_".001") S DIR("?",CT)=DIR("?",CT)_" (LINE HAS BEEN SPLIT)"
"RTN","RCDPEV",78,0)
 . K DIR("?")
"RTN","RCDPEV",79,0)
 ;
"RTN","RCDPEV",80,0)
 I 'RCT D  Q
"RTN","RCDPEV",81,0)
 . S DIR(0)="EA",DIR("A",1)="ALL EEOBS HAVE ALREADY BEEN VERIFIED IN THIS "_$S($G(^TMP("RCBATCH_SELECTED",$J)):"BATCH",1:"ERA"),DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEV",82,0)
 ;
"RTN","RCDPEV",83,0)
 I RCT<100 S DIR("?",1)="THE FOLLOWING EEOB LINE(S) "_$S($G(^TMP("RCBATCH_SELECTED",$J)):"IN THIS BATCH ",1:"")_"ARE NOT VERIFIED"
"RTN","RCDPEV",84,0)
 I RCT'<100 S DIR("?",1)="THERE ARE TOO MANY EEOB ENTRIES NOT VERIFIED TO LIST",DIR("?",2)="PRINT THE UNVERIFIED DISCREPANCY REPORT TO GET A LIST OF POSSIBLE CHOICES"
"RTN","RCDPEV",85,0)
 S DIR("?")=" "
"RTN","RCDPEV",86,0)
 S DIR(0)="NA^1:"_($O(^TMP("RCDPE-EOB_WLDX",$J,""),-1)\1),DIR("A")="SELECT AN EEOB LINE TO MARK AS VERIFIED: "
"RTN","RCDPEV",87,0)
 I RCT=1 S DIR("B")=RCT(1)
"RTN","RCDPEV",88,0)
 W ! D ^DIR K DIR
"RTN","RCDPEV",89,0)
 I $D(DUOUT)!$D(DTOUT)!(Y="") Q
"RTN","RCDPEV",90,0)
 I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !,"THIS LINE DOES NOT EXIST FOR THIS ERA" W ! Q
"RTN","RCDPEV",91,0)
 S RCY=+$P($G(^TMP("RCDPE-EOB_WLDX",$J,Y)),U,2),RCLINE=+^(Y),RCYNUM=+Y
"RTN","RCDPEV",92,0)
 S RCY0=$G(^RCY(344.49,RCERA,1,RCY,0))
"RTN","RCDPEV",93,0)
 I $P(RCY0,U,13) D  Q
"RTN","RCDPEV",94,0)
 . S DIR(0)="EA",DIR("A",1)="THIS LINE IS ALREADY VERIFIED",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEV",95,0)
 S RCZ0=$G(^RCY(344.4,RCERA,1,+$P(RCY0,U,9),0))
"RTN","RCDPEV",96,0)
 I '$P(RCZ0,U,2) D
"RTN","RCDPEV",97,0)
 . W !!,"THIS LINE DOES NOT REFERENCE A VALID BILL"
"RTN","RCDPEV",98,0)
 E  D
"RTN","RCDPEV",99,0)
 . S RESULT=$$VER(RCERA,+$G(^IBM(361.1,+$P(RCZ0,U,2),0)),+$P(RCY0,U,9),1)
"RTN","RCDPEV",100,0)
 . F Z=2:1:9 I $E($P(RESULT,U,Z))="*" S Q=$P(RESULT,U,Z),$E(Q,1)="",$P(RESULT,U,Z)=Q
"RTN","RCDPEV",101,0)
 . S SPLIT=$O(^RCY(344.49,RCERA,1,"B",+RCY0_".9999"),-1)'=(+RCY0_".0001")
"RTN","RCDPEV",102,0)
 . S Z=$S(SPLIT:"CLAIM #'s: ",1:"  CLAIM #: ")
"RTN","RCDPEV",103,0)
 . S Z=Z_$P(RCY0,U,2)_$S('SPLIT:"",1:" (ORIGINAL ERA DATA)")
"RTN","RCDPEV",104,0)
 . I SPLIT D
"RTN","RCDPEV",105,0)
 .. S Q=+RCY0 F  S Q=$O(^RCY(344.49,RCERA,1,"B",Q)) Q:(Q\1)'=+RCY0  S Q0=+$O(^RCY(344.49,RCERA,1,"B",Q,0)),Q0=$G(^RCY(344.49,RCERA,1,Q0,0)) I $P(Q0,U,2)'="" S Z=Z_" "_$P(Q0,U,2)
"RTN","RCDPEV",106,0)
 . W !!!,Z
"RTN","RCDPEV",107,0)
 . W !,?13,"PATIENT NAME"_$J("",18)_"  SUBMITTED AMT    SVC DATE(S)"
"RTN","RCDPEV",108,0)
 . W !,?13,"------------------------------  ---------------  -----------------"
"RTN","RCDPEV",109,0)
 . S DT1=$E($S($P(RESULT,U,7):$$FMTE^XLFDT($P(RESULT,U,7),"2D"),1:"NOTFOUND")_$J("",8),1,8)
"RTN","RCDPEV",110,0)
 . S DT2=$E($S($P(RESULT,U,9):"-"_$$FMTE^XLFDT($P(RESULT,U,9),"2D"),1:"-NOTFOUND")_$J("",9),1,9)
"RTN","RCDPEV",111,0)
 . W !,"   ERA DATA: ",$E($P(RESULT,U,3)_$J("",30),1,30),"  ",$E($J($P(RESULT,U,5),"",2)_$J("",15),1,15)_"  "_DT1_DT2
"RTN","RCDPEV",112,0)
 . W !,?15,$P($G(^RCY(344,RCERA,0)),U,6)
"RTN","RCDPEV",113,0)
 . S DT1=$E($S($P(RESULT,U,6):$$FMTE^XLFDT($P(RESULT,U,6),"2D"),1:"NOTFOUND")_$J("",8),1,8)
"RTN","RCDPEV",114,0)
 . S DT2=$E($S($P(RESULT,U,8):"-"_$$FMTE^XLFDT($P(RESULT,U,8),"2D"),1:"-NOTFOUND")_$J("",9),1,9)
"RTN","RCDPEV",115,0)
 . W !,"  BILL DATA: "_$E($P(RESULT,U,2)_$J("",30),1,30)_"  "_$E($J($P(RESULT,U,4),"",2)_$J("",15),1,15)_"  "_DT1_DT2
"RTN","RCDPEV",116,0)
 . W !,?15,$P($G(^DIC(36,+$P(RCZ0,U,4),0)),U),!
"RTN","RCDPEV",117,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO MARK THIS LINE VERIFIED?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEV",118,0)
 I Y'=1 Q
"RTN","RCDPEV",119,0)
 S DA(1)=RCERA,DA=+RCY,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".13////1" D ^DIE
"RTN","RCDPEV",120,0)
 S A=$$TOPLINE^RCDPEWL1($G(^RCY(344.49,RCERA,1,+RCY,0)),RCYNUM)
"RTN","RCDPEV",121,0)
 S ^TMP("RCDPE-EOB_WL",$J,RCLINE,0)=A
"RTN","RCDPEV",122,0)
 Q
"RTN","RCDPEV",123,0)
 ;
"RTN","RCRJRBD")
0^5^B65206172
"RTN","RCRJRBD",1,0)
RCRJRBD ;WISC/RFJ,TJK-bad debt extractor and report ;1 Feb 98
"RTN","RCRJRBD",2,0)
 ;;4.5;Accounts Receivable;**101,139,170,193,203,215,220,138**;Mar 20, 1995
"RTN","RCRJRBD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRBD",4,0)
 ; IA 4385 for calls to $$MRATYPE^IBCEMU2 and $$MRADTACT^IBCEMU2
"RTN","RCRJRBD",5,0)
 Q
"RTN","RCRJRBD",6,0)
 ;
"RTN","RCRJRBD",7,0)
 ;
"RTN","RCRJRBD",8,0)
START(DATEEND) ;  run bad debt report
"RTN","RCRJRBD",9,0)
 ;  the DATEEND is the last day of the month being run
"RTN","RCRJRBD",10,0)
 ;  from the routine RCRJRCOL which is the data extractor.  The
"RTN","RCRJRBD",11,0)
 ;  current receivable dollars is stored in ^TMP($J,"RCRJRBD",SGL)
"RTN","RCRJRBD",12,0)
 ;  where SGL is the standard general ledger 1319, 1338, or 1339.
"RTN","RCRJRBD",13,0)
 ;
"RTN","RCRJRBD",14,0)
 N ACTDATE,ACTUALCA,ACTUALWO,BEGDATE,BILLDA,CATEGORY
"RTN","RCRJRBD",15,0)
 N COLLECT,CONTRACT,DR,ENDDATE,FUND,PAY,PAYMENT,PRIN,PRINCPAL
"RTN","RCRJRBD",16,0)
 N RCRJFMM,RCRJDATE,SGL,TRANDA,TRANDATE,TRANTYPE,VALUE,WRITEOFF
"RTN","RCRJRBD",17,0)
 N RCPRIN,RCTOMCCF,RCVALUE,RSC,MRATYPE,ARACTDT
"RTN","RCRJRBD",18,0)
 ;
"RTN","RCRJRBD",19,0)
 ;  lock the bad debt file for storing data, lock cannot fail
"RTN","RCRJRBD",20,0)
 ;  this lock can be used to monitor if the report is running
"RTN","RCRJRBD",21,0)
 L +^RC(348.1)
"RTN","RCRJRBD",22,0)
 ;
"RTN","RCRJRBD",23,0)
 ;  calculate the base percentages from past data
"RTN","RCRJRBD",24,0)
 ;  example:  DATEEND=2980331  => BEGDATE=2970300
"RTN","RCRJRBD",25,0)
 ;                             => ENDDATE=2980229
"RTN","RCRJRBD",26,0)
 ;   add one day to ending date to go to next month
"RTN","RCRJRBD",27,0)
 S BEGDATE=($E(DATEEND,1,3)-1)_$E(DATEEND,4,5)_"00"
"RTN","RCRJRBD",28,0)
 S ENDDATE=($$FMADD^XLFDT($E(DATEEND,1,5)_"00",-1))+1
"RTN","RCRJRBD",29,0)
 ;  loop bills activated between these dates
"RTN","RCRJRBD",30,0)
 S ACTDATE=BEGDATE
"RTN","RCRJRBD",31,0)
 F  S ACTDATE=$O(^PRCA(430,"ACTDT",ACTDATE)) Q:'ACTDATE!(ACTDATE>ENDDATE)  D
"RTN","RCRJRBD",32,0)
 . S BILLDA=0 F  S BILLDA=$O(^PRCA(430,"ACTDT",ACTDATE,BILLDA)) Q:'BILLDA  D
"RTN","RCRJRBD",33,0)
 . . S CATEGORY=+$P($G(^PRCA(430,BILLDA,0)),"^",2)
"RTN","RCRJRBD",34,0)
 . . ;  do not look at prepayments
"RTN","RCRJRBD",35,0)
 . . I 'CATEGORY!(CATEGORY=26) Q
"RTN","RCRJRBD",36,0)
 . . ;
"RTN","RCRJRBD",37,0)
 . . ;  only look at bills with a 0 principal balance
"RTN","RCRJRBD",38,0)
 . . I $P($G(^PRCA(430,BILLDA,7)),"^") Q
"RTN","RCRJRBD",39,0)
 . . ;
"RTN","RCRJRBD",40,0)
 . . ;  only report fund 528701,03,04, and 4032/528709 bills
"RTN","RCRJRBD",41,0)
 . . S FUND=$$GETFUNDB^RCXFMSUF(BILLDA,1)
"RTN","RCRJRBD",42,0)
 . . I '$$PTACCT^PRCAACC(FUND),$E(FUND,1,4)'=4032 Q
"RTN","RCRJRBD",43,0)
 . . ;
"RTN","RCRJRBD",44,0)
 . . ;  derive standard general ledger (SGL) from category and fund
"RTN","RCRJRBD",45,0)
 . . S SGL=$$SGL(CATEGORY,FUND)
"RTN","RCRJRBD",46,0)
 . . ;
"RTN","RCRJRBD",47,0)
 . . ;  determine MRA type of bill, given bill# and bill active date
"RTN","RCRJRBD",48,0)
 . . ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRBD",49,0)
 . . S MRATYPE=$$MRATYPE^IBCEMU2(BILLDA,ACTDATE)
"RTN","RCRJRBD",50,0)
 . . ;  use the appropriate 3rd party contract adjustment SGL for
"RTN","RCRJRBD",51,0)
 . . ;  post-MRA non-Medicare
"RTN","RCRJRBD",52,0)
 . . I SGL=1339,MRATYPE>1 S SGL=$S(MRATYPE=2:"133H",1:"133N")
"RTN","RCRJRBD",53,0)
 . . ;
"RTN","RCRJRBD",54,0)
 . . ;  determine the original amount of the bill (add increase
"RTN","RCRJRBD",55,0)
 . . ;  adjustments below)
"RTN","RCRJRBD",56,0)
 . . S PRIN=$P($G(^PRCA(430,BILLDA,0)),"^",3)
"RTN","RCRJRBD",57,0)
 . . S PAY=0
"RTN","RCRJRBD",58,0)
 . . ;
"RTN","RCRJRBD",59,0)
 . . ;  get the $ transations for bills
"RTN","RCRJRBD",60,0)
 . . S TRANDA=0
"RTN","RCRJRBD",61,0)
 . . F  S TRANDA=$O(^PRCA(433,"C",BILLDA,TRANDA)) Q:'TRANDA  D
"RTN","RCRJRBD",62,0)
 . . . S TRANTYPE=$P($G(^PRCA(433,TRANDA,1)),"^",2)
"RTN","RCRJRBD",63,0)
 . . . I "^1^2^34^43^"'[("^"_TRANTYPE_"^") Q
"RTN","RCRJRBD",64,0)
 . . . S VALUE=$$TRANBAL^RCRJRCOT(TRANDA) I VALUE="" Q
"RTN","RCRJRBD",65,0)
 . . . ;  increase adjustments or re-establish
"RTN","RCRJRBD",66,0)
 . . . I TRANTYPE=1!(TRANTYPE=43) S PRIN=PRIN+$P(VALUE,"^") Q
"RTN","RCRJRBD",67,0)
 . . . ;  payments
"RTN","RCRJRBD",68,0)
 . . . I TRANTYPE=2!(TRANTYPE=34) S PAY=PAY+$P(VALUE,"^") Q
"RTN","RCRJRBD",69,0)
 . . ;
"RTN","RCRJRBD",70,0)
 . . ;  payment cannot be greater than principle
"RTN","RCRJRBD",71,0)
 . . I PAY>PRIN S PAY=PRIN
"RTN","RCRJRBD",72,0)
 . . ;
"RTN","RCRJRBD",73,0)
 . . ;  store the data
"RTN","RCRJRBD",74,0)
 . . S PRINCPAL(SGL)=$G(PRINCPAL(SGL))+PRIN
"RTN","RCRJRBD",75,0)
 . . S PAYMENT(SGL)=$G(PAYMENT(SGL))+PAY
"RTN","RCRJRBD",76,0)
 . . ;
"RTN","RCRJRBD",77,0)
 ;
"RTN","RCRJRBD",78,0)
 ;  calculate the writeoffs from 2/0/98
"RTN","RCRJRBD",79,0)
 ;  2/0/98 is when fms cleared out actual writeoffs and contract adj
"RTN","RCRJRBD",80,0)
 K ^XTMP("PRCABDET")
"RTN","RCRJRBD",81,0)
 S ^XTMP("PRCABDET",0)=$$FMADD^XLFDT(DT,10)_"^"_DT_"^BAD DEBT REPORT AUDIT"
"RTN","RCRJRBD",82,0)
 F TRANTYPE=8,9,10,11,35 D
"RTN","RCRJRBD",83,0)
 . S TRANDATE=2980200
"RTN","RCRJRBD",84,0)
 . ;  do not pick up transactions after the end date
"RTN","RCRJRBD",85,0)
 . F  S TRANDATE=$O(^PRCA(433,"AT",TRANTYPE,TRANDATE)) Q:'TRANDATE!($P(TRANDATE,".")>DATEEND)  D
"RTN","RCRJRBD",86,0)
 . . S TRANDA=0 F  S TRANDA=$O(^PRCA(433,"AT",TRANTYPE,TRANDATE,TRANDA)) Q:'TRANDA  D
"RTN","RCRJRBD",87,0)
 . . . ;  do not look at decrease adj which are not contract adj
"RTN","RCRJRBD",88,0)
 . . . I TRANTYPE=35,'$P($G(^PRCA(433,TRANDA,8)),"^",8) Q
"RTN","RCRJRBD",89,0)
 . . . ;
"RTN","RCRJRBD",90,0)
 . . . S BILLDA=$P($G(^PRCA(433,TRANDA,0)),"^",2)
"RTN","RCRJRBD",91,0)
 . . . I 'BILLDA Q
"RTN","RCRJRBD",92,0)
 . . . S CATEGORY=+$P($G(^PRCA(430,BILLDA,0)),"^",2)
"RTN","RCRJRBD",93,0)
 . . . ;  do not look at prepayments
"RTN","RCRJRBD",94,0)
 . . . I 'CATEGORY!(CATEGORY=26) Q
"RTN","RCRJRBD",95,0)
 . . . ;
"RTN","RCRJRBD",96,0)
 . . . ;  only report fund 528701,03,04 and 4032/528709 (ltc) bills
"RTN","RCRJRBD",97,0)
 . . . S FUND=$$GETFUNDB^RCXFMSUF(BILLDA,1)
"RTN","RCRJRBD",98,0)
 . . . I '$$PTACCT^PRCAACC(FUND),$E(FUND,1,4)'=4032 Q
"RTN","RCRJRBD",99,0)
 . . . ;
"RTN","RCRJRBD",100,0)
 . . . ; derive standard general ledger (SGL) from category and fund
"RTN","RCRJRBD",101,0)
 . . . S SGL=$$SGL(CATEGORY,FUND)
"RTN","RCRJRBD",102,0)
 . . . ;
"RTN","RCRJRBD",103,0)
 . . . ;  get bill active date
"RTN","RCRJRBD",104,0)
 . . . S ARACTDT=+$P($P($G(^PRCA(430,BILLDA,6)),"^",21),".")
"RTN","RCRJRBD",105,0)
 . . . ;  determine MRA type of bill, given bill# and bill active date
"RTN","RCRJRBD",106,0)
 . . . ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRBD",107,0)
 . . . S MRATYPE=$$MRATYPE^IBCEMU2(BILLDA,ARACTDT)
"RTN","RCRJRBD",108,0)
 . . . ;  use the appropriate 3rd party contract adjustment SGL for
"RTN","RCRJRBD",109,0)
 . . . ;  post-MRA Medicare (133H) and post-MRA non-Medicare (133N)
"RTN","RCRJRBD",110,0)
 . . . I SGL=1339,MRATYPE>1 S SGL=$S(MRATYPE=2:"133H",1:"133N")
"RTN","RCRJRBD",111,0)
 . . . ;
"RTN","RCRJRBD",112,0)
 . . . ;  get the principal transaction value
"RTN","RCRJRBD",113,0)
 . . . S RCVALUE=+$P($$TRANBAL^RCRJRCOT(TRANDA),"^")
"RTN","RCRJRBD",114,0)
 . . . ;  temp variable for value (used below)
"RTN","RCRJRBD",115,0)
 . . . S RCPRIN=RCVALUE
"RTN","RCRJRBD",116,0)
 . . . ;
"RTN","RCRJRBD",117,0)
 . . . ;  add actual writeoff amount for fiscal year
"RTN","RCRJRBD",118,0)
 . . . I TRANTYPE'=35 S ACTUALWO(SGL)=$G(ACTUALWO(SGL))+RCVALUE
"RTN","RCRJRBD",119,0)
 . . . ;  add actual contract adjustments for fiscal year
"RTN","RCRJRBD",120,0)
 . . . I TRANTYPE=35 S ACTUALCA(SGL)=$G(ACTUALCA(SGL))+RCVALUE
"RTN","RCRJRBD",121,0)
 . . . S RSC=$$CALCRSC^RCXFMSUR(BILLDA)
"RTN","RCRJRBD",122,0)
 . . . S ^XTMP("PRCABDET",BILLDA,CATEGORY,FUND,RSC,SGL,TRANDA,TRANDATE,TRANTYPE,RCPRIN,RCVALUE,0,0)=""
"RTN","RCRJRBD",123,0)
 ;
"RTN","RCRJRBD",124,0)
 ;  remove all the entries from the bad debt file
"RTN","RCRJRBD",125,0)
 D DELETALL
"RTN","RCRJRBD",126,0)
 ;
"RTN","RCRJRBD",127,0)
 ;  calculate percentages and store them
"RTN","RCRJRBD",128,0)
 F SGL=1319,1319.2,1338,1339,"133N" D
"RTN","RCRJRBD",129,0)
 . ;  collection %
"RTN","RCRJRBD",130,0)
 . S COLLECT=0 I $G(PRINCPAL(SGL)) S COLLECT=$J($G(PAYMENT(SGL))/PRINCPAL(SGL)*100,0,2)
"RTN","RCRJRBD",131,0)
 . ;  patch PRCA*4.5*138: for the first year from when MRA is activated at a site, there is no collection
"RTN","RCRJRBD",132,0)
 . ;  history for post-MRA non-Medicare bills(SGL 133N). So, to calculate the percentage for SGL 133N, the
"RTN","RCRJRBD",133,0)
 . ;  payment and the principal for SGL 1339 are used in the first year.
"RTN","RCRJRBD",134,0)
 . ;  override the collection value for SGL=133N for the first year from MRA activation.
"RTN","RCRJRBD",135,0)
 . ;;  Re-evaluate the calc. of the percentage for 133N as well as 1339.
"RTN","RCRJRBD",136,0)
 . ;;I SGL="133N",$G(PRINCIPAL(1339)) D  ;
"RTN","RCRJRBD",137,0)
 . ;;. N X1,X2,X,%Y
"RTN","RCRJRBD",138,0)
 . ;;. ;  X2=MRA Activation Date, X1=Today, X=diff in days, %Y=0 invalid dates
"RTN","RCRJRBD",139,0)
 . ;;. ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRBD",140,0)
 . ;;. S X2=$$MRADTACT^IBCEMU2,X1=$$DT^XLFDT D ^%DTC
"RTN","RCRJRBD",141,0)
 . ;;. I %Y,X'>364.25 S COLLECT=$J($G(PAYMENT(1339))/PRINCPAL(1339)*100,0,2)
"RTN","RCRJRBD",142,0)
 . S DR=".02////"_+COLLECT_";"
"RTN","RCRJRBD",143,0)
 . ;
"RTN","RCRJRBD",144,0)
 . ;  current month receivable (this is built in the routine
"RTN","RCRJRBD",145,0)
 . ;  RCRJRCO1 and is stored in ^TMP($J,"RCRJRBD",SGL))
"RTN","RCRJRBD",146,0)
 . S DR=DR_".07////"_+$G(^TMP($J,"RCRJRBD",SGL))_";"
"RTN","RCRJRBD",147,0)
 . ;
"RTN","RCRJRBD",148,0)
 . ;  calculate allowance estimate for 1319 and 1338
"RTN","RCRJRBD",149,0)
 . ;  .08 allowance estimate = (writeoff % * current receivables)
"RTN","RCRJRBD",150,0)
 . ;  .09 actual writeoffs fytd
"RTN","RCRJRBD",151,0)
 . I SGL=1319!(SGL=1319.2)!(SGL=1338) D
"RTN","RCRJRBD",152,0)
 . . S WRITEOFF=100-COLLECT
"RTN","RCRJRBD",153,0)
 . . S DR=DR_".03////"_WRITEOFF_";"
"RTN","RCRJRBD",154,0)
 . . S DR=DR_".08////"_$J((WRITEOFF/100)*$G(^TMP($J,"RCRJRBD",SGL)),0,2)_";"
"RTN","RCRJRBD",155,0)
 . . S DR=DR_".09////"_+$G(ACTUALWO(SGL))_";"
"RTN","RCRJRBD",156,0)
 . ;  calculate allowance estimate for 1339
"RTN","RCRJRBD",157,0)
 . ;  .08 allowance estimate = (contract % * current receivables)
"RTN","RCRJRBD",158,0)
 . ;  .09 actual contract adjustments fytd
"RTN","RCRJRBD",159,0)
 . I SGL=1339!(SGL="133N") D
"RTN","RCRJRBD",160,0)
 . . S CONTRACT=100-COLLECT
"RTN","RCRJRBD",161,0)
 . . S DR=DR_".04////"_CONTRACT_";"
"RTN","RCRJRBD",162,0)
 . . S DR=DR_".08////"_$J((CONTRACT/100)*$G(^TMP($J,"RCRJRBD",SGL)),0,2)_";"
"RTN","RCRJRBD",163,0)
 . . S DR=DR_".09////"_+$G(ACTUALCA(SGL))_";"
"RTN","RCRJRBD",164,0)
 . ;
"RTN","RCRJRBD",165,0)
 . ;  set changed locally flag to no
"RTN","RCRJRBD",166,0)
 . S DR=DR_".1////0;"
"RTN","RCRJRBD",167,0)
 . D STORE(SGL,DR)
"RTN","RCRJRBD",168,0)
 ;
"RTN","RCRJRBD",169,0)
 L -^RC(348.1)
"RTN","RCRJRBD",170,0)
 ;
"RTN","RCRJRBD",171,0)
 ;  put the report in a mail message (rcrjfmm=1)
"RTN","RCRJRBD",172,0)
 S RCRJFMM=1
"RTN","RCRJRBD",173,0)
 S RCRJDATE=DATEEND
"RTN","RCRJRBD",174,0)
 D DQ^RCRJRBDR
"RTN","RCRJRBD",175,0)
 Q
"RTN","RCRJRBD",176,0)
 ;
"RTN","RCRJRBD",177,0)
 ;
"RTN","RCRJRBD",178,0)
STORE(SGL,DR) ;  store data for Standard Ledger Account
"RTN","RCRJRBD",179,0)
 N D0,DA,DD,DI,DIC,DIE,DINUM,DO,DQ,X,Y
"RTN","RCRJRBD",180,0)
 S DIC="^RC(348.1,",DIC(0)="L",X=SGL,DIC("DR")=DR
"RTN","RCRJRBD",181,0)
 D FILE^DICN
"RTN","RCRJRBD",182,0)
 Q
"RTN","RCRJRBD",183,0)
 ;
"RTN","RCRJRBD",184,0)
 ;
"RTN","RCRJRBD",185,0)
DELETALL ;  delete all the entries from the bad debt file
"RTN","RCRJRBD",186,0)
 N %,DA,DIC,DIK,X,Y
"RTN","RCRJRBD",187,0)
 S DIK="^RC(348.1,"
"RTN","RCRJRBD",188,0)
 S DA=0 F  S DA=$O(^RC(348.1,DA)) Q:'DA  D ^DIK
"RTN","RCRJRBD",189,0)
 Q
"RTN","RCRJRBD",190,0)
 ;
"RTN","RCRJRBD",191,0)
 ;
"RTN","RCRJRBD",192,0)
WD3() ;  return the third work day of the month
"RTN","RCRJRBD",193,0)
 N J,P,V,X
"RTN","RCRJRBD",194,0)
 S J=0 F P=$E(DT,1,5)_"01":1 S V=$$DOW^XLFDT(P,1) I V,V<6,'$D(^HOLIDAY("B",P)) S J=J+1 Q:J=3
"RTN","RCRJRBD",195,0)
 S X=+$E(P,6,7)
"RTN","RCRJRBD",196,0)
 Q X
"RTN","RCRJRBD",197,0)
 ;
"RTN","RCRJRBD",198,0)
 ;
"RTN","RCRJRBD",199,0)
PREVMONT(FORDATE) ; return the previous month's date
"RTN","RCRJRBD",200,0)
 N PREVDATE
"RTN","RCRJRBD",201,0)
 S PREVDATE=$E(FORDATE,1,5)-1
"RTN","RCRJRBD",202,0)
 I $E(PREVDATE,4,5)="00" S PREVDATE=($E(PREVDATE,1,3)-1)_12
"RTN","RCRJRBD",203,0)
 Q PREVDATE_"00"
"RTN","RCRJRBD",204,0)
 ;
"RTN","RCRJRBD",205,0)
 ; derive standard general ledger (SGL) from category and fund
"RTN","RCRJRBD",206,0)
SGL(CATEGORY,FUND) ;
"RTN","RCRJRBD",207,0)
 I $G(FUND)=528709 Q 1319.2 ;new long term care fund
"RTN","RCRJRBD",208,0)
 I $E($G(FUND),1,4)=4032 Q 1319.2 ; breakout long term care as a subset
"RTN","RCRJRBD",209,0)
 I CATEGORY=8 Q 1339   ; crime or per. vio.
"RTN","RCRJRBD",210,0)
 I CATEGORY=9 Q 1339   ; reimbursable health insurance
"RTN","RCRJRBD",211,0)
 I CATEGORY=10 Q 1338  ; tort feasor
"RTN","RCRJRBD",212,0)
 I CATEGORY=21 Q 1339  ; medicare
"RTN","RCRJRBD",213,0)
 Q 1319
"RTN","RCRJRBDR")
0^7^B73367814
"RTN","RCRJRBDR",1,0)
RCRJRBDR ;WISC/RFJ,TJK-bad debt report generator ;1 Feb 98
"RTN","RCRJRBDR",2,0)
 ;;4.5;Accounts Receivable;**101,139,170,191,203,215,220,138**;Mar 20, 1995
"RTN","RCRJRBDR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRBDR",4,0)
 Q
"RTN","RCRJRBDR",5,0)
 ;
"RTN","RCRJRBDR",6,0)
 ;
"RTN","RCRJRBDR",7,0)
PRINT ;  print report on printer, called from menu option
"RTN","RCRJRBDR",8,0)
 N RCRJDATE
"RTN","RCRJRBDR",9,0)
 W !!,"This option will print the Bad Debt Report.  This report is automatically"
"RTN","RCRJRBDR",10,0)
 W !,"generated on the day after the EOAM.  The estimated value can be locally"
"RTN","RCRJRBDR",11,0)
 W !,"changed on the first workday after the EOAM."
"RTN","RCRJRBDR",12,0)
 W !,"On the next to last workday of the month, the report is transmitted to FMS.",!
"RTN","RCRJRBDR",13,0)
 N %ZIS,POP,ZTRTN,ZTDESC S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCRJRBDR",14,0)
 I $D(IO("Q")) D  Q
"RTN","RCRJRBDR",15,0)
 . S ZTRTN="DQ^RCRJRBDR",ZTDESC="Bad Debt Report"
"RTN","RCRJRBDR",16,0)
 . D ^%ZTLOAD
"RTN","RCRJRBDR",17,0)
 ;
"RTN","RCRJRBDR",18,0)
 W !,"please wait"
"RTN","RCRJRBDR",19,0)
 D DQ
"RTN","RCRJRBDR",20,0)
 Q
"RTN","RCRJRBDR",21,0)
 ;
"RTN","RCRJRBDR",22,0)
 ;
"RTN","RCRJRBDR",23,0)
DQ ;  generate the report
"RTN","RCRJRBDR",24,0)
 ;  rcrjfmm = flag to put in mail message (if $g(rcrjfmm)) (optional)
"RTN","RCRJRBDR",25,0)
 ;  rcrjdate = date month and year for report (optional)
"RTN","RCRJRBDR",26,0)
 ;  rcrjfxsv = fms document id number if sent to fms (optional)
"RTN","RCRJRBDR",27,0)
 ;             (newed and set by rcxfmssv, label Q)
"RTN","RCRJRBDR",28,0)
 ;
"RTN","RCRJRBDR",29,0)
 N %,%I,CHANGED,DATA,DATA1319,DATA1338,DATA1339,DATALTC,DATEREPT,ENDDATE,X
"RTN","RCRJRBDR",30,0)
 N LINE,RCRJFLAG,SCREEN,SPACE,Y,DATA133N
"RTN","RCRJRBDR",31,0)
 ;
"RTN","RCRJRBDR",32,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRBDR",33,0)
 S SPACE="",$P(SPACE," ",81)=""
"RTN","RCRJRBDR",34,0)
 ;  the date of the report is for previous month if the DT is before the EOAM date of the current month,  it is for the current month if the date is after the EOAM cut-off date.
"RTN","RCRJRBDR",35,0)
 I $G(RCRJDATE) S RCRJDATE=$E($$LDATE^RCRJR(RCRJDATE),1,5)_"00"
"RTN","RCRJRBDR",36,0)
 I '$G(RCRJDATE) D
"RTN","RCRJRBDR",37,0)
 .I $E(DT,6,7)'>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$$PREVMONT^RCRJRBD(DT)
"RTN","RCRJRBDR",38,0)
 .I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$E($$LDATE^RCRJR(DT),1,5)_"00"
"RTN","RCRJRBDR",39,0)
 S Y=$E(RCRJDATE,1,5)_"00" D DD^%DT S DATEREPT=Y
"RTN","RCRJRBDR",40,0)
 S LINE=0
"RTN","RCRJRBDR",41,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",42,0)
 D SETLINE($E(SPACE,1,32)_"Bad Debt Report")
"RTN","RCRJRBDR",43,0)
 D SETLINE($E(SPACE,1,13)_"Allowance for Bad Debt and Contract Adjustment Report")
"RTN","RCRJRBDR",44,0)
 D SETLINE($E(SPACE,1,27)_"for the month of "_DATEREPT)
"RTN","RCRJRBDR",45,0)
 I $D(RCRJFXSV) D
"RTN","RCRJRBDR",46,0)
 . D SETLINE(" ")
"RTN","RCRJRBDR",47,0)
 . I $E(RCRJFXSV,1,2)="SV" D SETLINE($E(SPACE,1,13)_"***** Report sent to FMS, doc id: "_RCRJFXSV_" *****") Q
"RTN","RCRJRBDR",48,0)
 . ;  report errored out or did not get generated to fms
"RTN","RCRJRBDR",49,0)
 . D SETLINE($E(SPACE,1,10)_"***** NOTICE:  Report was NOT sent to FMS, the message is *****")
"RTN","RCRJRBDR",50,0)
 . D SETLINE($E(SPACE,1,10)_"***** "_RCRJFXSV_" *****")
"RTN","RCRJRBDR",51,0)
 ;
"RTN","RCRJRBDR",52,0)
 ;  show mccf
"RTN","RCRJRBDR",53,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",54,0)
 D SETLINE($E(SPACE,1,26)_"Medical Care Collection Fund")
"RTN","RCRJRBDR",55,0)
 I $E($G(RCRJDATE),2,5)'<"0410" D SETLINE($E(SPACE,1,26)_" Funds 528701, 528703, & 528704")
"RTN","RCRJRBDR",56,0)
 I $E($G(RCRJDATE),2,5)<"0410" D SETLINE($E(SPACE,1,26)_" Funds 5287.1, 5287.3, & 5287.4")
"RTN","RCRJRBDR",57,0)
 D SETLINE($E(SPACE,1,26)_"----------------------------")
"RTN","RCRJRBDR",58,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",59,0)
 D SETLINE("Calculated           "_$J("            ",14)_$J(" Third Party",14)_$J(" Third Party",14))
"RTN","RCRJRBDR",60,0)
 D SETLINE("Percentages          "_$J(" First Party",14)_$J("    Cont Adj",14)_$J("    Cont Adj",14)_$J("Tort Feasors",14))
"RTN","RCRJRBDR",61,0)
 D SETLINE("For                  "_$J("    SGL 1319",14)_$J("    SGL 1339",14)_$J("    SGL 133N",14)_$J("    SGL 1338",14))
"RTN","RCRJRBDR",62,0)
 D SETLINE("---------------------"_$J("------------",14)_$J("------------",14)_$J("------------",14)_$J("------------",14))
"RTN","RCRJRBDR",63,0)
 S DATA1319=$G(^RC(348.1,+$O(^RC(348.1,"B",1319,0)),0))
"RTN","RCRJRBDR",64,0)
 S DATA1338=$G(^RC(348.1,+$O(^RC(348.1,"B",1338,0)),0))
"RTN","RCRJRBDR",65,0)
 S DATA1339=$G(^RC(348.1,+$O(^RC(348.1,"B",1339,0)),0))
"RTN","RCRJRBDR",66,0)
 S DATA133N=$G(^RC(348.1,+$O(^RC(348.1,"B","133N",0)),0))
"RTN","RCRJRBDR",67,0)
 D SETLINE("Collection          %"_$J($P(DATA1319,"^",2),14,2)_$J($P(DATA1339,"^",2),14,2)_$J($P(DATA133N,"^",2),14,2)_$J($P(DATA1338,"^",2),14,2))
"RTN","RCRJRBDR",68,0)
 D SETLINE("Write-Off           %"_$J($P(DATA1319,"^",3),14,2)_$J($P(DATA1339,"^",3),14,2)_$J($P(DATA133N,"^",3),14,2)_$J($P(DATA1338,"^",3),14,2))
"RTN","RCRJRBDR",69,0)
 D SETLINE("Contract Adjustment %"_$J($P(DATA1319,"^",4),14,2)_$J($P(DATA1339,"^",4),14,2)_$J($P(DATA133N,"^",4),14,2)_$J($P(DATA1338,"^",4),14,2))
"RTN","RCRJRBDR",70,0)
 D SETLINE("---------------------"_$J("------------",14)_$J("------------",14)_$J("------------",14)_$J("------------",14))
"RTN","RCRJRBDR",71,0)
 D SETLINE("TOTAL               %"_$J(100,14,2)_$J(100,14,2)_$J(100,14,2)_$J(100,14,2))
"RTN","RCRJRBDR",72,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",73,0)
 ;
"RTN","RCRJRBDR",74,0)
 S DATALTC=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.2,0)),0))
"RTN","RCRJRBDR",75,0)
 I $E($G(RCRJDATE),2,5)'<"0410" D SETLINE($E(SPACE,1,26)_"  Extended (LTC) Care Fund 528709")
"RTN","RCRJRBDR",76,0)
 I $E($G(RCRJDATE),2,5)<"0410" D SETLINE($E(SPACE,1,26)_"  Extended (LTC) Care Fund 4032")
"RTN","RCRJRBDR",77,0)
 D SETLINE($E(SPACE,1,26)_"---------------------------------")
"RTN","RCRJRBDR",78,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",79,0)
 I $E($G(RCRJDATE),2,5)'<"0410" D SETLINE("Calculated           "_$J("   Fund 528709",18))
"RTN","RCRJRBDR",80,0)
 I $E($G(RCRJDATE),2,5)<"0410" D SETLINE("Calculated           "_$J("   Fund 4032",18))
"RTN","RCRJRBDR",81,0)
 D SETLINE("Percentages          "_$J(" First Party",18))
"RTN","RCRJRBDR",82,0)
 D SETLINE("For                  "_$J("    SGL 1319",18))
"RTN","RCRJRBDR",83,0)
 D SETLINE("---------------------"_$J("------------",18))
"RTN","RCRJRBDR",84,0)
 D SETLINE("Collection          %"_$J($P(DATALTC,"^",2),18,2))
"RTN","RCRJRBDR",85,0)
 D SETLINE("Write-Off           %"_$J($P(DATALTC,"^",3),18,2))
"RTN","RCRJRBDR",86,0)
 D SETLINE("Contract Adjustment %"_$J($P(DATALTC,"^",4),18,2))
"RTN","RCRJRBDR",87,0)
 D SETLINE("---------------------"_$J("------------",18))
"RTN","RCRJRBDR",88,0)
 D SETLINE("TOTAL               %"_$J(100,18,2))
"RTN","RCRJRBDR",89,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",90,0)
 ;
"RTN","RCRJRBDR",91,0)
 ;  show totals
"RTN","RCRJRBDR",92,0)
 ;  1319 mccf allowance
"RTN","RCRJRBDR",93,0)
 D SETLINE("Allowance for Bad Debt - First Party (SGL 1319 MCCF):")
"RTN","RCRJRBDR",94,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",95,0)
 S CHANGED="  " I $P(DATA1319,"^",10) S CHANGED="**"
"RTN","RCRJRBDR",96,0)
 D SETLINE($E("Allowance Estimate for "_DATEREPT_SPACE,1,35)_":"_$J($P(DATA1319,"^",8),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",97,0)
 D SETLINE($E("Bad Debt Write-Off (Plus)  "_SPACE,1,35)_":"_$J($P(DATA1319,"^",9),16,2)_"    (Normally Debit Value )")
"RTN","RCRJRBDR",98,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",99,0)
 D SETLINE($E("Transmitted Amount to FMS for Month"_SPACE,1,35)_":"_$J($P(DATA1319,"^",8)+$P(DATA1319,"^",9),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",100,0)
 I $P(DATA1319,"^",10) D SETLINE($E(SPACE,1,53)_"**  Changed Locally")
"RTN","RCRJRBDR",101,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",102,0)
 ;
"RTN","RCRJRBDR",103,0)
 ;  1319 ltc allowance
"RTN","RCRJRBDR",104,0)
 D SETLINE("Allowance for Bad Debt - First Party (SGL 1319 LTC 528709):")
"RTN","RCRJRBDR",105,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",106,0)
 S CHANGED="  " I $P(DATALTC,"^",10) S CHANGED="**"
"RTN","RCRJRBDR",107,0)
 D SETLINE($E("Allowance Estimate for "_DATEREPT_SPACE,1,35)_":"_$J($P(DATALTC,"^",8),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",108,0)
 D SETLINE($E("Bad Debt Write-Off (Plus)  "_SPACE,1,35)_":"_$J($P(DATALTC,"^",9),16,2)_"    (Normally Debit Value )")
"RTN","RCRJRBDR",109,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",110,0)
 D SETLINE($E("Transmitted Amount to FMS for Month"_SPACE,1,35)_":"_$J($P(DATALTC,"^",8)+$P(DATALTC,"^",9),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",111,0)
 I $P(DATALTC,"^",10) D SETLINE($E(SPACE,1,53)_"**  Changed Locally")
"RTN","RCRJRBDR",112,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",113,0)
 ;
"RTN","RCRJRBDR",114,0)
 ;  1339 allowance
"RTN","RCRJRBDR",115,0)
 D SETLINE("Allowance for Contract Adj - Third Party (SGL 1339):")
"RTN","RCRJRBDR",116,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",117,0)
 S CHANGED="  " I $P(DATA1339,"^",10) S CHANGED="**"
"RTN","RCRJRBDR",118,0)
 D SETLINE($E("Allowance Estimate for "_DATEREPT_SPACE,1,35)_":"_$J($P(DATA1339,"^",8),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",119,0)
 D SETLINE($E("Bad Debt Contract Adj (Plus)  "_SPACE,1,35)_":"_$J($P(DATA1339,"^",9),16,2)_"    (Normally Debit Value )")
"RTN","RCRJRBDR",120,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",121,0)
 D SETLINE($E("Transmitted Amount to FMS for Month"_SPACE,1,35)_":"_$J($P(DATA1339,"^",8)+$P(DATA1339,"^",9),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",122,0)
 I $P(DATA1339,"^",10) D SETLINE($E(SPACE,1,53)_"**  Changed Locally")
"RTN","RCRJRBDR",123,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",124,0)
 ;
"RTN","RCRJRBDR",125,0)
 ;  133N allowance - Post-MRA non-Medicare
"RTN","RCRJRBDR",126,0)
 D SETLINE("Allowance for Contract Adj - Third Party (SGL 133N):")
"RTN","RCRJRBDR",127,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",128,0)
 S CHANGED="  " I $P(DATA133N,"^",10) S CHANGED="**"
"RTN","RCRJRBDR",129,0)
 D SETLINE($E("Allowance Estimate for "_DATEREPT_SPACE,1,35)_":"_$J($P(DATA133N,"^",8),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",130,0)
 D SETLINE($E("Bad Debt Contract Adj (Plus)  "_SPACE,1,35)_":"_$J($P(DATA133N,"^",9),16,2)_"    (Normally Debit Value )")
"RTN","RCRJRBDR",131,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",132,0)
 D SETLINE($E("Transmitted Amount to FMS for Month"_SPACE,1,35)_":"_$J($P(DATA133N,"^",8)+$P(DATA133N,"^",9),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",133,0)
 I $P(DATA133N,"^",10) D SETLINE($E(SPACE,1,53)_"**  Changed Locally")
"RTN","RCRJRBDR",134,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",135,0)
 ;
"RTN","RCRJRBDR",136,0)
 ;  1338 allowance
"RTN","RCRJRBDR",137,0)
 D SETLINE("Allowance for Bad Debt - Tort Feasors (SGL 1338):")
"RTN","RCRJRBDR",138,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",139,0)
 S CHANGED="  " I $P(DATA1338,"^",10) S CHANGED="**"
"RTN","RCRJRBDR",140,0)
 D SETLINE($E("Allowance Estimate for "_DATEREPT_SPACE,1,35)_":"_$J($P(DATA1338,"^",8),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",141,0)
 D SETLINE($E("Bad Debt Write-Off (Plus)  "_SPACE,1,35)_":"_$J($P(DATA1338,"^",9),16,2)_"    (Normally Debit Value )")
"RTN","RCRJRBDR",142,0)
 D SETLINE("----------------------------------------------------")
"RTN","RCRJRBDR",143,0)
 D SETLINE($E("Transmitted Amount to FMS for Month"_SPACE,1,35)_":"_$J($P(DATA1338,"^",8)+$P(DATA1338,"^",9),16,2)_" "_CHANGED_" (Normally Credit Value)")
"RTN","RCRJRBDR",144,0)
 I $P(DATA1338,"^",10) D SETLINE($E(SPACE,1,53)_"**  Changed Locally")
"RTN","RCRJRBDR",145,0)
 D SETLINE(" ")
"RTN","RCRJRBDR",146,0)
 D SETLINE("Report Footnotes:")
"RTN","RCRJRBDR",147,0)
 D SETLINE("-----------------")
"RTN","RCRJRBDR",148,0)
 ;
"RTN","RCRJRBDR",149,0)
 D ENDOFREP^RCRJRBDT
"RTN","RCRJRBDR",150,0)
 ;
"RTN","RCRJRBDR",151,0)
 ;  put report in mailman
"RTN","RCRJRBDR",152,0)
 I $G(RCRJFMM) D  D Q Q
"RTN","RCRJRBDR",153,0)
 . N XMY
"RTN","RCRJRBDR",154,0)
 . S XMY("G.RC AR DATA COLLECTOR")=""
"RTN","RCRJRBDR",155,0)
 . S %=$$SENDMSG^RCRJRCOR("BAD DEBT REPORT",.XMY)
"RTN","RCRJRBDR",156,0)
 ;
"RTN","RCRJRBDR",157,0)
 ;  print report
"RTN","RCRJRBDR",158,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCRJRBDR",159,0)
 U IO W @IOF
"RTN","RCRJRBDR",160,0)
 S LINE=1 F  S LINE=$O(^TMP($J,"RCRJRCORMM",LINE)) Q:'LINE!($G(RCRJFLAG))  D
"RTN","RCRJRBDR",161,0)
 . I $Y>(IOSL-5) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  W @IOF F %=2:1:5 W !,^TMP($J,"RCRJRCORMM",%)
"RTN","RCRJRBDR",162,0)
 . W !,^TMP($J,"RCRJRCORMM",LINE)
"RTN","RCRJRBDR",163,0)
 I '$G(RCRJFLAG),SCREEN R !!,"<end of report, press return to continue>",X:DTIME
"RTN","RCRJRBDR",164,0)
 D ^%ZISC
"RTN","RCRJRBDR",165,0)
 ;
"RTN","RCRJRBDR",166,0)
Q K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRBDR",167,0)
 Q
"RTN","RCRJRBDR",168,0)
 ;
"RTN","RCRJRBDR",169,0)
 ;
"RTN","RCRJRBDR",170,0)
SETLINE(DATA) ;  build the line for the report
"RTN","RCRJRBDR",171,0)
 S LINE=LINE+1,^TMP($J,"RCRJRCORMM",LINE)=DATA
"RTN","RCRJRBDR",172,0)
 Q
"RTN","RCRJRBDT")
0^6^B25318421
"RTN","RCRJRBDT",1,0)
RCRJRBDT ;WISC/RFJ-bad debt retransmit ;1 Feb 98
"RTN","RCRJRBDT",2,0)
 ;;4.5;Accounts Receivable;**101,170,191,138**;Mar 20, 1995
"RTN","RCRJRBDT",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRBDT",4,0)
 ;
"RTN","RCRJRBDT",5,0)
 N DA347,DATEMOYR,FMSDOCNO,GECSDATA,RCRJFSV
"RTN","RCRJRBDT",6,0)
 ;  the date of the report is for previous month if the DT is before the EOAM date of the current month,  it is for the current month if the date is after the EOAM cut-off date.
"RTN","RCRJRBDT",7,0)
 I $E(DT,6,7)'>$E($$LDATE^RCRJR(DT),6,7) S DATEMOYR=$$PREVMONT^RCRJRBD(DT)
"RTN","RCRJRBDT",8,0)
 I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S DATEMOYR=$E($$LDATE^RCRJR(DT),1,5)_"00"
"RTN","RCRJRBDT",9,0)
 ;S DATEMOYR=$$PREVMONT^RCRJRBD(DT)
"RTN","RCRJRBDT",10,0)
 W !!,"This option will retransmit the Bad Debt documents to FMS (SV23, SV27, SV2B)."
"RTN","RCRJRBDT",11,0)
 ;
"RTN","RCRJRBDT",12,0)
 ;I +$E(DT,6,7)<$$WD3^RCRJRBD D  Q
"RTN","RCRJRBDT",13,0)
 I $E(DT,6,7)<$E($$LDATE^RCRJR(DT),6,7)!($E(DT,6,7)'<$E($$LDAY^RCRJR(DT),6,7)) D  Q
"RTN","RCRJRBDT",14,0)
 .  W !,"The FMS documents will be automatically sent to FMS on the second to last ",!,"workday of this month."
"RTN","RCRJRBDT",15,0)
 ;  try and find SV document to see if its accepted
"RTN","RCRJRBDT",16,0)
 S FMSDOCNO=""
"RTN","RCRJRBDT",17,0)
 K GECSDATA
"RTN","RCRJRBDT",18,0)
 S DA347=$O(^RC(347,"D","SV-"_$E(DATEMOYR,1,5)_"01",0))
"RTN","RCRJRBDT",19,0)
 I DA347 S FMSDOCNO=$P($G(^RC(347,DA347,0)),"^",9)
"RTN","RCRJRBDT",20,0)
 ;  if there is an entry, find the code sheet in gcs to rebuild
"RTN","RCRJRBDT",21,0)
 ;  gecsdata will be the ien for file 2100.1
"RTN","RCRJRBDT",22,0)
 I FMSDOCNO'="" D DATA^GECSSGET(FMSDOCNO,0)
"RTN","RCRJRBDT",23,0)
 I $G(GECSDATA) D
"RTN","RCRJRBDT",24,0)
 .   W !!,"The SV document has been transmitted to fms, document number: "_FMSDOCNO
"RTN","RCRJRBDT",25,0)
 .   I $E($G(GECSDATA(2100.1,GECSDATA,3,"E")))="A" D  Q
"RTN","RCRJRBDT",26,0)
 .   .   W !,"The SV document has been ACCEPTED in FMS and will not be resent."
"RTN","RCRJRBDT",27,0)
 .   .   S RCRJFSV=1
"RTN","RCRJRBDT",28,0)
 .   W !,"The SV document has NOT been ACCEPTED and will be RETRANSMITTED."
"RTN","RCRJRBDT",29,0)
 I $G(RCRJFSV) Q
"RTN","RCRJRBDT",30,0)
 ;
"RTN","RCRJRBDT",31,0)
 I $$ASKOKAY(DATEMOYR)'=1 Q
"RTN","RCRJRBDT",32,0)
 ;
"RTN","RCRJRBDT",33,0)
 W !!,"Re-sending the documents to FMS ..."
"RTN","RCRJRBDT",34,0)
 D BADDEBT^RCXFMSSV
"RTN","RCRJRBDT",35,0)
 W " Done.",!,"The Bad Debt Report will be sent to the G.FMS mail group."
"RTN","RCRJRBDT",36,0)
 Q
"RTN","RCRJRBDT",37,0)
 ;
"RTN","RCRJRBDT",38,0)
 ;
"RTN","RCRJRBDT",39,0)
ASKOKAY(DATEMOYR) ;  ask if its okay
"RTN","RCRJRBDT",40,0)
 ;  1 is yes, otherwise no
"RTN","RCRJRBDT",41,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCRJRBDT",42,0)
 S Y=DATEMOYR D DD^%DT
"RTN","RCRJRBDT",43,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCRJRBDT",44,0)
 S DIR("A")="  Are you SURE you want to resend the Bad Debt Report for "_Y
"RTN","RCRJRBDT",45,0)
 W ! D ^DIR
"RTN","RCRJRBDT",46,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCRJRBDT",47,0)
 Q Y
"RTN","RCRJRBDT",48,0)
 ;
"RTN","RCRJRBDT",49,0)
 ;
"RTN","RCRJRBDT",50,0)
ENDOFREP ;  print end of bad debt report footnotes
"RTN","RCRJRBDT",51,0)
 ;  called from rcrjrbdr
"RTN","RCRJRBDT",52,0)
 ;
"RTN","RCRJRBDT",53,0)
 ;  print footnote
"RTN","RCRJRBDT",54,0)
 S Y=RCRJDATE D DD^%DT S ENDDATE=Y
"RTN","RCRJRBDT",55,0)
 F %=1:1 S DATA=$P($T(FOOTNOTE+%),";",3,99) Q:DATA=""  D
"RTN","RCRJRBDT",56,0)
 .   I DATA["DATEREPT" S DATA=$P(DATA,"DATEREPT")_DATEREPT_$P(DATA,"DATEREPT",2)
"RTN","RCRJRBDT",57,0)
 .   I DATA["ENDDATE" S DATA=$P(DATA,"ENDDATE")_ENDDATE_$P(DATA,"ENDDATE",2)
"RTN","RCRJRBDT",58,0)
 .   D SETLINE^RCRJRBDR(DATA)
"RTN","RCRJRBDT",59,0)
 Q
"RTN","RCRJRBDT",60,0)
 ;
"RTN","RCRJRBDT",61,0)
 ;
"RTN","RCRJRBDT",62,0)
FOOTNOTE ;  report footnotes (from rcrjrbdr)
"RTN","RCRJRBDT",63,0)
 ;;(1) Calculated Percentages and the Allowance for Contract Adj - Third Party
"RTN","RCRJRBDT",64,0)
 ;;    for SGL 1339 are based on bills created prior to the activation of the
"RTN","RCRJRBDT",65,0)
 ;;    Medicare Remittance Advice software.  Over time, there will no longer be
"RTN","RCRJRBDT",66,0)
 ;;    any bills in this category.
"RTN","RCRJRBDT",67,0)
 ;; 
"RTN","RCRJRBDT",68,0)
 ;;(2) Calculated Percentages and the Allowance for Contract Adj - Third Party
"RTN","RCRJRBDT",69,0)
 ;;    for SGL 133N are based on non-Medicare WNR bills created after the
"RTN","RCRJRBDT",70,0)
 ;;    activation of the Medicare Remittance Advice software.
"RTN","RCRJRBDT",71,0)
 ;; 
"RTN","RCRJRBDT",72,0)
 ;;(3) The "Allowance Estimate for DATEREPT" is the dollar value estimated
"RTN","RCRJRBDT",73,0)
 ;;    as the Allowance for Bad Debt or Contract Adjustment for the month.
"RTN","RCRJRBDT",74,0)
 ;; 
"RTN","RCRJRBDT",75,0)
 ;;(4) The "Bad Debt Write-Off (Plus)" is the actual write-offs or contract
"RTN","RCRJRBDT",76,0)
 ;;    adjustments accomplished from FEB 1,1998 thru ENDDATE.
"RTN","RCRJRBDT",77,0)
 ;; 
"RTN","RCRJRBDT",78,0)
 ;;(5) The "Transmitted Amount to FMS for Month" is the sum of (3) and (4).
"RTN","RCRJRBDT",79,0)
 ;;    The transmitted dollar value is normally a credit value.
"RTN","RCRJRBDT",80,0)
 ;; 
"RTN","RCRJRBDT",81,0)
 ;;(6) Facilities are responsible for reporting monthly accrued unbilled
"RTN","RCRJRBDT",82,0)
 ;;    amounts.  When such amounts are identified and reported, a portion of
"RTN","RCRJRBDT",83,0)
 ;;    those dollars should be reported as uncollectable.  The estimated
"RTN","RCRJRBDT",84,0)
 ;;    uncollectable value of the unbilled amounts should be included as part
"RTN","RCRJRBDT",85,0)
 ;;    of the facility's monthly allowance for bad debt or contract adjustments.
"RTN","RCRJRBDT",86,0)
 ;;    The AR Override Option should be used to adjust the value provided to
"RTN","RCRJRBDT",87,0)
 ;;    report the estimated uncollectable accrued unbilled amounts for the
"RTN","RCRJRBDT",88,0)
 ;;    month.  Facilities may wish to consider using the allowance percentages
"RTN","RCRJRBDT",89,0)
 ;;    provided with this report, if no other means of determining the
"RTN","RCRJRBDT",90,0)
 ;;    estimated allowance for the accrued unbilled amount is acceptable.
"RTN","RCRJRBDT",91,0)
 ;; 
"RTN","RCRJRBDT",92,0)
 ;;(7) Only members in the facility's local RC AR DATA COLLECTOR mail group
"RTN","RCRJRBDT",93,0)
 ;;    will receive this report.
"RTN","RCRJRCOC")
0^4^B59061042
"RTN","RCRJRCOC",1,0)
RCRJRCOC ;WISC/RFJ/BGJ-count current receivables ;1 Aug 00
"RTN","RCRJRCOC",2,0)
 ;;4.5;Accounts Receivable;**156,170,182,203,220,138**;Mar 20, 1995
"RTN","RCRJRCOC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRCOC",4,0)
 ; IA 4385 for call to $$MRATYPE^IBCEMU2
"RTN","RCRJRCOC",5,0)
 Q
"RTN","RCRJRCOC",6,0)
 ;
"RTN","RCRJRCOC",7,0)
 ;
"RTN","RCRJRCOC",8,0)
CURRENT(RCBILLDA,RCVALUE) ;  count current bills balance
"RTN","RCRJRCOC",9,0)
 ;  rcvalue = prin ^ int ^ admin ^ mf ^ cc
"RTN","RCRJRCOC",10,0)
 ;
"RTN","RCRJRCOC",11,0)
 N %,RCFUND,RCRSC,RCTOHSIF,RCTOMCCF,SGL,TYPE,MRATYPE,ARACTDT
"RTN","RCRJRCOC",12,0)
 ;
"RTN","RCRJRCOC",13,0)
 ;  calculate the rsc for the bill.  the rsc is only used for
"RTN","RCRJRCOC",14,0)
 ;  mccf bills
"RTN","RCRJRCOC",15,0)
 S RCRSC=""
"RTN","RCRJRCOC",16,0)
 I $$ACCK^PRCAACC(RCBILLDA) S RCRSC=$$CALCRSC^RCXFMSUR(RCBILLDA)
"RTN","RCRJRCOC",17,0)
 ;
"RTN","RCRJRCOC",18,0)
 ;  calculate the amount that goes to mccf and hsif
"RTN","RCRJRCOC",19,0)
 D MCCFHSIF(RCBILLDA,RCVALUE,RCRSC,DATEEND+1)
"RTN","RCRJRCOC",20,0)
 ;
"RTN","RCRJRCOC",21,0)
 ;  store the data for the ndb, if a 0 is returned by the function,
"RTN","RCRJRCOC",22,0)
 ;  then the bill has already been counted as a current receivable,quit
"RTN","RCRJRCOC",23,0)
 I '$$NDBSTORE(RCBILLDA,RCVALUE,1) Q
"RTN","RCRJRCOC",24,0)
 ;
"RTN","RCRJRCOC",25,0)
 ;  store results for FMS SV document for accrued bills only
"RTN","RCRJRCOC",26,0)
 ;  do not include prepayments (26)
"RTN","RCRJRCOC",27,0)
 I $$ACCK^PRCAACC(RCBILLDA),$P($G(^PRCA(430,RCBILLDA,0)),"^",2)'=26 D
"RTN","RCRJRCOC",28,0)
 .   ;  get the bills fund
"RTN","RCRJRCOC",29,0)
 .   S RCFUND=$$GETFUNDB^RCXFMSUF(RCBILLDA)
"RTN","RCRJRCOC",30,0)
 .   S RCFUND=$$ADJFUND^RCRJRCO(RCFUND) ; may remove the line after 10/1/03
"RTN","RCRJRCOC",31,0)
 .   ;
"RTN","RCRJRCOC",32,0)
 .   ;  ----- this code is used to set up the SV code sheet -----
"RTN","RCRJRCOC",33,0)
 .   S TYPE=21
"RTN","RCRJRCOC",34,0)
 .   ;  special type for tort feasor
"RTN","RCRJRCOC",35,0)
 .   I $E(RCRSC,1,2)=86 S TYPE="2A"
"RTN","RCRJRCOC",36,0)
 .   ;
"RTN","RCRJRCOC",37,0)
 .   ;  Get ARACTDT=AR Date Active for bill
"RTN","RCRJRCOC",38,0)
 .   S ARACTDT=+$P($P($G(^PRCA(430,RCBILLDA,6)),"^",21),".")
"RTN","RCRJRCOC",39,0)
 .   ;  determine Receivable Type: 1=pre-MRA, 2=post-MRA Medicre, 3=post-MRA non-Medicare
"RTN","RCRJRCOC",40,0)
 .   ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRCOC",41,0)
 .   S MRATYPE=$$MRATYPE^IBCEMU2(RCBILLDA,ARACTDT)
"RTN","RCRJRCOC",42,0)
 .   ;  set TYPE to 2F for post-MRA Medicare bills or to 2L for post-MRA non-Medicare bills
"RTN","RCRJRCOC",43,0)
 .   I MRATYPE>1 S TYPE=$S(MRATYPE=2:"2F",1:"2L")
"RTN","RCRJRCOC",44,0)
 .   ;
"RTN","RCRJRCOC",45,0)
 .   ;  store dollars to mccf and hsif
"RTN","RCRJRCOC",46,0)
 .   I RCTOMCCF S ^TMP($J,"RCRJRCOLSV",TYPE,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLSV",TYPE,RCFUND,RCRSC))+RCTOMCCF
"RTN","RCRJRCOC",47,0)
 .   I RCTOHSIF S ^TMP($J,"RCRJRCOLSV",21,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z"))=$G(^TMP($J,"RCRJRCOLSV",21,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z")))+RCTOHSIF
"RTN","RCRJRCOC",48,0)
 .   ;
"RTN","RCRJRCOC",49,0)
 .   ;  ----- this code is used to build the user report
"RTN","RCRJRCOC",50,0)
 .   S %=+$P($P($G(^PRCA(430,RCBILLDA,6)),"^",21),".")
"RTN","RCRJRCOC",51,0)
 .   S ^TMP($J,"RCRJRCOLREPORT",%,RCBILLDA)=$P(RCVALUE,"^")_"^"_($P(RCVALUE,"^",2)+$P(RCVALUE,"^",3)+$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5))_"^SV"_TYPE
"RTN","RCRJRCOC",52,0)
 .   ;
"RTN","RCRJRCOC",53,0)
 .   ;  ----- this code is used to build the OIG extract, piece 3 = GL acct
"RTN","RCRJRCOC",54,0)
 .   S ^TMP($J,"RCRJROIG",RCBILLDA)=$P(RCVALUE,"^")_"^"_($P(RCVALUE,"^",2)+$P(RCVALUE,"^",3)+$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5))_"^"_$S(TYPE=21:1315,1:1333)
"RTN","RCRJRCOC",55,0)
 .   ;
"RTN","RCRJRCOC",56,0)
 .   ;  ----- this code is used to set up medicare supplemental SVs
"RTN","RCRJRCOC",57,0)
 .   S %=$G(^PRCA(430,RCBILLDA,13))
"RTN","RCRJRCOC",58,0)
 .   ;  medicare contract adjustment field 131 for bills activated in AR during the month the ARDC is running
"RTN","RCRJRCOC",59,0)
 .   I $P(%,"^",1),ARACTDT'<DATEBEG D  ;
"RTN","RCRJRCOC",60,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",17)=$G(^TMP($J,"RCRJRCOLSV",17))+$P(%,"^",1)
"RTN","RCRJRCOC",61,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",17,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLSV",17,RCFUND,RCRSC))+$P(%,"^",1)
"RTN","RCRJRCOC",62,0)
 .   ;  medicare unreimbursable medicare expense field 132 for bills activated in AR during the month the ARDC is running
"RTN","RCRJRCOC",63,0)
 .   I $P(%,"^",2),ARACTDT'<DATEBEG D  ;
"RTN","RCRJRCOC",64,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",18)=$G(^TMP($J,"RCRJRCOLSV",18))+$P(%,"^",2)
"RTN","RCRJRCOC",65,0)
 .   .   S ^TMP($J,"RCRJRCOLSV",18,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLSV",18,RCFUND,RCRSC))+$P(%,"^",2)
"RTN","RCRJRCOC",66,0)
 .   ;
"RTN","RCRJRCOC",67,0)
 .   ;  ----- this code is used to set up the bad debt report -----
"RTN","RCRJRCOC",68,0)
 .   S SGL=1319
"RTN","RCRJRCOC",69,0)
 .   I $E(RCRSC,1,2)=85 S SGL=$S(MRATYPE=1:1339,MRATYPE=2:"133H",1:"133N")  ; reimbursable health insurance
"RTN","RCRJRCOC",70,0)
 .   I $E(RCRSC,1,2)=86 S SGL=1338  ;  tort feasor
"RTN","RCRJRCOC",71,0)
 .   ;  store dollars to mccf and hsif.  both are sgl 1319 so 1319.1 is
"RTN","RCRJRCOC",72,0)
 .   ;  used to put hsif in a subset of 1319
"RTN","RCRJRCOC",73,0)
 .   I RCTOMCCF D
"RTN","RCRJRCOC",74,0)
 .   .   ;  long term care fund 4032(old), 528709 (new)
"RTN","RCRJRCOC",75,0)
 .   .   I (RCFUND=4032)!(RCFUND=528709) S ^TMP($J,"RCRJRBD",1319.2)=$G(^TMP($J,"RCRJRBD",1319.2))+RCTOMCCF Q
"RTN","RCRJRCOC",76,0)
 .   .   ;  fund 528701,528703,528704
"RTN","RCRJRCOC",77,0)
 .   .   S ^TMP($J,"RCRJRBD",SGL)=$G(^TMP($J,"RCRJRBD",SGL))+RCTOMCCF
"RTN","RCRJRCOC",78,0)
 .   I RCTOHSIF S ^TMP($J,"RCRJRBD",1319.1)=$G(^TMP($J,"RCRJRBD",1319.1))+RCTOHSIF
"RTN","RCRJRCOC",79,0)
 ;
"RTN","RCRJRCOC",80,0)
 ;  store the interest, admin, mf, cc on the SV code sheet
"RTN","RCRJRCOC",81,0)
 ;  interest (type P2; fund 1435; rsc 8047)
"RTN","RCRJRCOC",82,0)
 I $P(RCVALUE,"^",2) S ^TMP($J,"RCRJRCOLSV","P2",1435,8047)=$G(^TMP($J,"RCRJRCOLSV","P2",1435,8047))+$P(RCVALUE,"^",2)
"RTN","RCRJRCOC",83,0)
 ;  admin (type P2; fund 3220; rsc 8046)
"RTN","RCRJRCOC",84,0)
 I $P(RCVALUE,"^",3) S ^TMP($J,"RCRJRCOLSV","P2",3220,8046)=$G(^TMP($J,"RCRJRCOLSV","P2",3220,8046))+$P(RCVALUE,"^",3)
"RTN","RCRJRCOC",85,0)
 ;  mf + cc (type P2; fund 0869; rsc 8048)
"RTN","RCRJRCOC",86,0)
 S %=$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5)
"RTN","RCRJRCOC",87,0)
 I % S ^TMP($J,"RCRJRCOLSV","P2","0869",8048)=$G(^TMP($J,"RCRJRCOLSV","P2","0869",8048))+%
"RTN","RCRJRCOC",88,0)
 Q
"RTN","RCRJRCOC",89,0)
 ;
"RTN","RCRJRCOC",90,0)
 ;
"RTN","RCRJRCOC",91,0)
WRITEOFF(RCBILLDA,RCVALUE,RCRITER2) ;  count write offs
"RTN","RCRJRCOC",92,0)
 ;  rcvalue = prin ^ int ^ admin ^ mf ^ cc
"RTN","RCRJRCOC",93,0)
 ;  rcriter2 = write off criteria tracked in ndb
"RTN","RCRJRCOC",94,0)
 ;
"RTN","RCRJRCOC",95,0)
 N %,RCFUND,RCRSC,RCTOHSIF,RCTOMCCF,TYPE,MRATYPE,ARACTDT
"RTN","RCRJRCOC",96,0)
 ;
"RTN","RCRJRCOC",97,0)
 ;  calculate the rsc for the bill.  the rsc is only used for
"RTN","RCRJRCOC",98,0)
 ;  mccf bills
"RTN","RCRJRCOC",99,0)
 S RCRSC=""
"RTN","RCRJRCOC",100,0)
 I $$ACCK^PRCAACC(RCBILLDA) S RCRSC=$$CALCRSC^RCXFMSUR(RCBILLDA)
"RTN","RCRJRCOC",101,0)
 ;
"RTN","RCRJRCOC",102,0)
 ;  calculate the amount that goes to mccf and hsif
"RTN","RCRJRCOC",103,0)
 D MCCFHSIF(RCBILLDA,RCVALUE,RCRSC,DATEEND+1)
"RTN","RCRJRCOC",104,0)
 ;
"RTN","RCRJRCOC",105,0)
 ;  store the data for the ndb, if a 0 is returned by the function,
"RTN","RCRJRCOC",106,0)
 ;  then the bill has already been counted as a current receivable,quit
"RTN","RCRJRCOC",107,0)
 I '$$NDBSTORE(RCBILLDA,RCVALUE,RCRITER2) Q
"RTN","RCRJRCOC",108,0)
 ;
"RTN","RCRJRCOC",109,0)
 ;  store results for FMS WR document
"RTN","RCRJRCOC",110,0)
 ;  do not include prepayments (26)
"RTN","RCRJRCOC",111,0)
 I $$ACCK^PRCAACC(RCBILLDA),$P($G(^PRCA(430,RCBILLDA,0)),"^",2)'=26 D
"RTN","RCRJRCOC",112,0)
 .   ;  get the bills fund
"RTN","RCRJRCOC",113,0)
 .   S RCFUND=$$GETFUNDB^RCXFMSUF(RCBILLDA)
"RTN","RCRJRCOC",114,0)
 .   S RCFUND=$$ADJFUND^RCRJRCO(RCFUND) ; may remove the line after 10/1/03
"RTN","RCRJRCOC",115,0)
 .   ;
"RTN","RCRJRCOC",116,0)
 .   S TYPE="04"
"RTN","RCRJRCOC",117,0)
 .   ;  special type for tort feasor
"RTN","RCRJRCOC",118,0)
 .   I $E(RCRSC,1,2)=86 S TYPE=23
"RTN","RCRJRCOC",119,0)
 .   S ARACTDT=+$P($P($G(^PRCA(430,RCBILLDA,6)),"^",21),".")
"RTN","RCRJRCOC",120,0)
 .   ;  DBIA #4385 activated on 31-Mar-2004
"RTN","RCRJRCOC",121,0)
 .   S MRATYPE=$$MRATYPE^IBCEMU2(RCBILLDA,ARACTDT)
"RTN","RCRJRCOC",122,0)
 .   ;  for contract adjustments (criter2=20), the type is 06 for pre-MRA,
"RTN","RCRJRCOC",123,0)
 .   ;  07 for post-MRA non-Medicare and 08 for post-MRA Medicare
"RTN","RCRJRCOC",124,0)
 .   I RCRITER2=20 S TYPE=$S(MRATYPE=1:"06",MRATYPE=2:"08",1:"07")
"RTN","RCRJRCOC",125,0)
 .   ;  store dollars to mccf and hsif
"RTN","RCRJRCOC",126,0)
 .   I RCTOMCCF S ^TMP($J,"RCRJRCOLWR",TYPE,RCFUND,RCRSC)=$G(^TMP($J,"RCRJRCOLWR",TYPE,RCFUND,RCRSC))+RCTOMCCF
"RTN","RCRJRCOC",127,0)
 .   I RCTOHSIF S ^TMP($J,"RCRJRCOLWR",TYPE,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z"))=$G(^TMP($J,"RCRJRCOLWR",TYPE,5358.1,$S(RCRSC="8BZZ":"8B1Z",1:"8C1Z")))+RCTOHSIF
"RTN","RCRJRCOC",128,0)
 ;
"RTN","RCRJRCOC",129,0)
 ;  store the interest, admin, mf, cc on the WR code sheet
"RTN","RCRJRCOC",130,0)
 ;  interest (type P4; fund 1435; rsc 8047)
"RTN","RCRJRCOC",131,0)
 I $P(RCVALUE,"^",2) S ^TMP($J,"RCRJRCOLWR","P4",1435,8047)=$G(^TMP($J,"RCRJRCOLWR","P4",1435,8047))+$P(RCVALUE,"^",2)
"RTN","RCRJRCOC",132,0)
 ;  admin (type P4; fund 3220; rsc 8046)
"RTN","RCRJRCOC",133,0)
 I $P(RCVALUE,"^",3) S ^TMP($J,"RCRJRCOLWR","P4",3220,8046)=$G(^TMP($J,"RCRJRCOLWR","P4",3220,8046))+$P(RCVALUE,"^",3)
"RTN","RCRJRCOC",134,0)
 ;  mf + cc (type P4; fund 0869; rsc 8048)
"RTN","RCRJRCOC",135,0)
 S %=$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5)
"RTN","RCRJRCOC",136,0)
 I % S ^TMP($J,"RCRJRCOLWR","P4","0869",8048)=$G(^TMP($J,"RCRJRCOLWR","P4","0869",8048))+%
"RTN","RCRJRCOC",137,0)
 Q
"RTN","RCRJRCOC",138,0)
 ;
"RTN","RCRJRCOC",139,0)
 ;
"RTN","RCRJRCOC",140,0)
NDBSTORE(RCBILLDA,RCVALUE,RCRITER2) ;  store the data for the NDB
"RTN","RCRJRCOC",141,0)
 ;  returns a 1 if the bill has not been counted
"RTN","RCRJRCOC",142,0)
 ;  returns a 0 if the bill has been counted
"RTN","RCRJRCOC",143,0)
 N %,CRITERIA
"RTN","RCRJRCOC",144,0)
 ;
"RTN","RCRJRCOC",145,0)
 ;  this line of code will prevent duplicate counts if a sites cross
"RTN","RCRJRCOC",146,0)
 ;  references in file 430 (actdt and asdt) are duplicated (incorrect)
"RTN","RCRJRCOC",147,0)
 I RCRITER2<13,$D(^TMP($J,"RCRJRCOL","COUNT",RCBILLDA,RCRITER2)) Q 0
"RTN","RCRJRCOC",148,0)
 ;
"RTN","RCRJRCOC",149,0)
 ;  get a bills criteria 1,3,4,5
"RTN","RCRJRCOC",150,0)
 S CRITERIA=$G(^TMP($J,"RCRJRCOL","CRITERIA",RCBILLDA))
"RTN","RCRJRCOC",151,0)
 I CRITERIA="" S CRITERIA=$$CRITERIA^RCRJRCOL(RCBILLDA),^TMP($J,"RCRJRCOL","CRITERIA",RCBILLDA)=CRITERIA
"RTN","RCRJRCOC",152,0)
 S $P(CRITERIA,"-",2)=RCRITER2
"RTN","RCRJRCOC",153,0)
 ;
"RTN","RCRJRCOC",154,0)
 ;  store results for ndb
"RTN","RCRJRCOC",155,0)
 S %=$G(@DATASTOR)
"RTN","RCRJRCOC",156,0)
 S $P(%,"^")=$P(%,"^")+1
"RTN","RCRJRCOC",157,0)
 S $P(%,"^",2)=$P(%,"^",2)+$P(RCVALUE,"^")
"RTN","RCRJRCOC",158,0)
 S $P(%,"^",3)=$P(%,"^",3)+$P(RCVALUE,"^",2)+$P(RCVALUE,"^",3)+$P(RCVALUE,"^",4)+$P(RCVALUE,"^",5)
"RTN","RCRJRCOC",159,0)
 S @DATASTOR=%
"RTN","RCRJRCOC",160,0)
 ;
"RTN","RCRJRCOC",161,0)
 ;  keep a count of current receivables counted
"RTN","RCRJRCOC",162,0)
 S ^TMP($J,"RCRJRCOL","COUNT",RCBILLDA,RCRITER2)=""
"RTN","RCRJRCOC",163,0)
 S ^TMP($J,"RCRJRCOL","CRIT2",RCRITER2,RCBILLDA)=""
"RTN","RCRJRCOC",164,0)
 Q 1
"RTN","RCRJRCOC",165,0)
 ;
"RTN","RCRJRCOC",166,0)
 ;
"RTN","RCRJRCOC",167,0)
MCCFHSIF(RCBILLDA,RCVALUE,RCRSC,ASOFDATE) ;  calculate the amount that goes
"RTN","RCRJRCOC",168,0)
 ;
"RTN","RCRJRCOC",169,0)
 ;  to mccf and hsif
"RTN","RCRJRCOC",170,0)
 ;
"RTN","RCRJRCOC",171,0)
 ;  returns RCTOMCCF and RCTOHSIF as the outstanding balance to mccf
"RTN","RCRJRCOC",172,0)
 ;  and the outstanding balance to hsif
"RTN","RCRJRCOC",173,0)
 N MCCFHSIF
"RTN","RCRJRCOC",174,0)
 ;
"RTN","RCRJRCOC",175,0)
 S RCTOMCCF=$P(RCVALUE,"^"),RCTOHSIF=0
"RTN","RCRJRCOC",176,0)
 ;
"RTN","RCRJRCOC",177,0)
 I $$NOHSIF^RCRJRCO() Q  ; disabled HSIF
"RTN","RCRJRCOC",178,0)
 ;
"RTN","RCRJRCOC",179,0)
 ; if revenue source code is not 8BZZ or 8CZZ then it all goes to mccf
"RTN","RCRJRCOC",180,0)
 I RCRSC="8BZZ"!(RCRSC="8CZZ") D
"RTN","RCRJRCOC",181,0)
 .   ;  get the amount for each fund mccf and hsif
"RTN","RCRJRCOC",182,0)
 .   ;  this call returns the total amount owed to mccf (piece 1),
"RTN","RCRJRCOC",183,0)
 .   ;  total amount owed to hsif (piece 2), total amount paid
"RTN","RCRJRCOC",184,0)
 .   ;  to mccf (piece 3), total amount paid to hsif (piece 4).
"RTN","RCRJRCOC",185,0)
 .   ;  for outstanding balance you must subtract the payment in
"RTN","RCRJRCOC",186,0)
 .   ;  pieces 3 and 4 which are returned as negative amounts.
"RTN","RCRJRCOC",187,0)
 .   S MCCFHSIF=$$BILLFUND^RCBMILLC(RCBILLDA,ASOFDATE)
"RTN","RCRJRCOC",188,0)
 .   S RCTOMCCF=$P(MCCFHSIF,"^",1)+$P(MCCFHSIF,"^",3)
"RTN","RCRJRCOC",189,0)
 .   S RCTOHSIF=$P(MCCFHSIF,"^",2)+$P(MCCFHSIF,"^",4)
"RTN","RCRJRCOC",190,0)
 Q
"RTN","RCRJRCOR")
0^9^B67310039
"RTN","RCRJRCOR",1,0)
RCRJRCOR ;WISC/RFJ-ar data collector summary report ;1 Mar 97
"RTN","RCRJRCOR",2,0)
 ;;4.5;Accounts Receivable;**68,96,139,103,156,170,174,191,220,138**;Mar 20, 1995
"RTN","RCRJRCOR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCRJRCOR",4,0)
 Q
"RTN","RCRJRCOR",5,0)
 ;
"RTN","RCRJRCOR",6,0)
 ;
"RTN","RCRJRCOR",7,0)
SEND ;  send data to ndb and data to FMS
"RTN","RCRJRCOR",8,0)
 N %,AMOUNT,DATEMOYR,FUND,LINE,RSC,SPACE,TOTAL,TOTALFUN,TOTALTYP,TYPE,X,XMY,Y
"RTN","RCRJRCOR",9,0)
 ;
"RTN","RCRJRCOR",10,0)
 ;  ---------- send to ndb ----------
"RTN","RCRJRCOR",11,0)
 ;  data stored in tmp($j,rcrjrcolndb)
"RTN","RCRJRCOR",12,0)
 I '$G(RCRJFAR1) D NDB(PRCASITE,DATEBEG,DATEEND)
"RTN","RCRJRCOR",13,0)
 ;
"RTN","RCRJRCOR",14,0)
 ;
"RTN","RCRJRCOR",15,0)
 ;  ---------- send sv to fms ----------
"RTN","RCRJRCOR",16,0)
 ;  data stored in tmp($j,rcrjrcolsv)
"RTN","RCRJRCOR",17,0)
 ;  rcrjfsv is a flag set in the routine rcrjrco for retransmission
"RTN","RCRJRCOR",18,0)
 ;  to prevent accepted fms documents from being resent
"RTN","RCRJRCOR",19,0)
 I '$G(RCRJFSV) D STARTSV^RCXFMSSV(DATEEND)
"RTN","RCRJRCOR",20,0)
 ;
"RTN","RCRJRCOR",21,0)
 ;
"RTN","RCRJRCOR",22,0)
 ;  ---------- send wr to fms ----------
"RTN","RCRJRCOR",23,0)
 ;  data stored in tmp($j,rcrjrcolwr)
"RTN","RCRJRCOR",24,0)
 ;  rcrjfwr is a flag set in the routine rcrjrco for retransmission
"RTN","RCRJRCOR",25,0)
 ;  to prevent accepted fms documents from being resent
"RTN","RCRJRCOR",26,0)
 I '$G(RCRJFWR) D STARTWR^RCXFMSWR(DATEEND)
"RTN","RCRJRCOR",27,0)
 ;
"RTN","RCRJRCOR",28,0)
 ;  ---------- send tr to fms ----------
"RTN","RCRJRCOR",29,0)
 N RCTRANS
"RTN","RCRJRCOR",30,0)
 ;  this call returns rctrans array (see rcxfmstx for description)
"RTN","RCRJRCOR",31,0)
 ;  rcrjftr is a flag set in the routine rcrjrco for retransmission
"RTN","RCRJRCOR",32,0)
 ;  to prevent accepted fms documents from being resent
"RTN","RCRJRCOR",33,0)
 I '$G(RCRJFTR) D STARTTR^RCXFMSTX(DATEEND)
"RTN","RCRJRCOR",34,0)
 ;
"RTN","RCRJRCOR",35,0)
 ;  ---------- send oig extract ----------
"RTN","RCRJRCOR",36,0)
 ;  data stored in tmp(j,rcrjroig)
"RTN","RCRJRCOR",37,0)
 ;  get non-mccf bills for extract and user report
"RTN","RCRJRCOR",38,0)
 D NONMCCF^RCRJROIG(DATEEND)
"RTN","RCRJRCOR",39,0)
 ;  rcrjfoig is a flag set in the routine rcrjrco for retransmission
"RTN","RCRJRCOR",40,0)
 ;  to prevent the oig extract from being resent
"RTN","RCRJRCOR",41,0)
 I '$G(RCRJFOIG) D OIG^RCRJROIG(DATEEND)
"RTN","RCRJRCOR",42,0)
 ;
"RTN","RCRJRCOR",43,0)
 ;  generate a mailman message to the group showing the data
"RTN","RCRJRCOR",44,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRCOR",45,0)
 S Y=$E(DATEEND,1,5)_"00" D DD^%DT S DATEMOYR=Y
"RTN","RCRJRCOR",46,0)
 S LINE=0,SPACE="",$P(SPACE," ",80)=""
"RTN","RCRJRCOR",47,0)
 D SET("Data has been collected for the month "_DATEMOYR_".  The data has been")
"RTN","RCRJRCOR",48,0)
 D SET("transmitted to the following systems:")
"RTN","RCRJRCOR",49,0)
 D SET(" ")
"RTN","RCRJRCOR",50,0)
 ;
"RTN","RCRJRCOR",51,0)
 I '$G(RCRJFAR1) D
"RTN","RCRJRCOR",52,0)
 .   D SET("NATIONAL DATABASE DATA")
"RTN","RCRJRCOR",53,0)
 .   D SET("----------------------")
"RTN","RCRJRCOR",54,0)
 .   D SET("The data has been sent to the National Database.  For a detail list")
"RTN","RCRJRCOR",55,0)
 .   D SET("of the data sent, please review the Return Reports which are sent")
"RTN","RCRJRCOR",56,0)
 .   D SET("from the National Database.")
"RTN","RCRJRCOR",57,0)
 .   D SET(" ")
"RTN","RCRJRCOR",58,0)
 ;
"RTN","RCRJRCOR",59,0)
 I '$G(RCRJFSV) D
"RTN","RCRJRCOR",60,0)
 .   D SET("FMS, STANDARD VOUCHER (SV) DOCUMENT")
"RTN","RCRJRCOR",61,0)
 .   D SET("-----------------------------------")
"RTN","RCRJRCOR",62,0)
 .   D SET("The following data has been transmitted to FMS in the SV document:")
"RTN","RCRJRCOR",63,0)
 .   D SET("  Revenue Source Code                                        Type       Amount")
"RTN","RCRJRCOR",64,0)
 .   D SET("  -------------------                                        ----       ------")
"RTN","RCRJRCOR",65,0)
 .   S TOTAL=0
"RTN","RCRJRCOR",66,0)
 .   S TYPE="" F  S TYPE=$O(^TMP($J,"RCRJRCOLSV",TYPE)) Q:TYPE=""  D
"RTN","RCRJRCOR",67,0)
 .   .   I TYPE=17!(TYPE=18) Q    ; display the Medicare totals later
"RTN","RCRJRCOR",68,0)
 .   .   S TOTALTYP=0
"RTN","RCRJRCOR",69,0)
 .   .   S FUND="" F  S FUND=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND)) Q:FUND=""  D
"RTN","RCRJRCOR",70,0)
 .   .   .   S TOTALFUN=0
"RTN","RCRJRCOR",71,0)
 .   .   .   S RSC="" F  S RSC=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND,RSC)) Q:RSC=""  S AMOUNT=^(RSC) D
"RTN","RCRJRCOR",72,0)
 .   .   .   .   D SET("  "_RSC_" "_$E($$GETDESC^RCXFMSPR(RSC)_SPACE,1,54)_"  "_TYPE_$J(AMOUNT,13,2))
"RTN","RCRJRCOR",73,0)
 .   .   .   .   S TOTALFUN=TOTALFUN+AMOUNT
"RTN","RCRJRCOR",74,0)
 .   .   .   .   S TOTALTYP=TOTALTYP+AMOUNT
"RTN","RCRJRCOR",75,0)
 .   .   .   .   S TOTAL=TOTAL+AMOUNT
"RTN","RCRJRCOR",76,0)
 .   .   .   ;
"RTN","RCRJRCOR",77,0)
 .   .   .   N RCFUND S RCFUND=$S($E(DATEEND,2,5)<"0410":$E(FUND,1,4)_"."_$E(FUND,6),1:$E(FUND,1,4)_"0"_$E(FUND,6))
"RTN","RCRJRCOR",78,0)
 .   .   .   I TYPE=21 D SET($E("            Sub-Total by Fund "_RCFUND_":"_SPACE,1,38)_$J(TOTALFUN,12,2))
"RTN","RCRJRCOR",79,0)
 .   .   ;
"RTN","RCRJRCOR",80,0)
 .   .   D SET("                                                                    ----------")
"RTN","RCRJRCOR",81,0)
 .   .   D SET("                                                    TOTAL TYPE "_TYPE_$J(TOTALTYP,13,2))
"RTN","RCRJRCOR",82,0)
 .   .   D SET(" ")
"RTN","RCRJRCOR",83,0)
 .   ;
"RTN","RCRJRCOR",84,0)
 .   ; Display Medicare totals and update the SV total
"RTN","RCRJRCOR",85,0)
 .   S AMOUNT=+$G(^TMP($J,"RCRJRCOLSV",17)),TOTAL=TOTAL+AMOUNT
"RTN","RCRJRCOR",86,0)
 .   D SET("       Medicare Contractual Adjustment              TOTAL TYPE 17"_$J(AMOUNT,13,2))
"RTN","RCRJRCOR",87,0)
 .   S AMOUNT=+$G(^TMP($J,"RCRJRCOLSV",18)),TOTAL=TOTAL+AMOUNT
"RTN","RCRJRCOR",88,0)
 .   D SET("       Unreimbursable Medicare Expense              TOTAL TYPE 18"_$J(AMOUNT,13,2))
"RTN","RCRJRCOR",89,0)
 .   D SET(" ")
"RTN","RCRJRCOR",90,0)
 .   ;
"RTN","RCRJRCOR",91,0)
 .   D SET("                                                                    ----------")
"RTN","RCRJRCOR",92,0)
 .   D SET("                                                         TOTAL SV"_$J(TOTAL,13,2))
"RTN","RCRJRCOR",93,0)
 .   D SET(" ")
"RTN","RCRJRCOR",94,0)
 ;
"RTN","RCRJRCOR",95,0)
 I '$G(RCRJFWR) D
"RTN","RCRJRCOR",96,0)
 .   D SET("FMS, WRITEOFFS/CONTRACT ADJUSTMENTS (WR) DOCUMENT")
"RTN","RCRJRCOR",97,0)
 .   D SET("-------------------------------------------------")
"RTN","RCRJRCOR",98,0)
 .   D SET("The following data has been transmitted to FMS in the WR document:")
"RTN","RCRJRCOR",99,0)
 .   D SET("  Revenue Source Code                                        Type       Amount")
"RTN","RCRJRCOR",100,0)
 .   D SET("  -------------------                                        ----       ------")
"RTN","RCRJRCOR",101,0)
 .   S TOTAL=0
"RTN","RCRJRCOR",102,0)
 .   S TYPE="" F  S TYPE=$O(^TMP($J,"RCRJRCOLWR",TYPE)) Q:TYPE=""  D
"RTN","RCRJRCOR",103,0)
 .   .   S TOTALTYP=0
"RTN","RCRJRCOR",104,0)
 .   .   S FUND="" F  S FUND=$O(^TMP($J,"RCRJRCOLWR",TYPE,FUND)) Q:FUND=""  D
"RTN","RCRJRCOR",105,0)
 .   .   .   S TOTALFUN=0
"RTN","RCRJRCOR",106,0)
 .   .   .   S RSC="" F  S RSC=$O(^TMP($J,"RCRJRCOLWR",TYPE,FUND,RSC)) Q:RSC=""  S AMOUNT=^(RSC) D
"RTN","RCRJRCOR",107,0)
 .   .   .   .   D SET("  "_RSC_" "_$E($$GETDESC^RCXFMSPR(RSC)_SPACE,1,54)_"  "_TYPE_$J(AMOUNT,13,2))
"RTN","RCRJRCOR",108,0)
 .   .   .   .   S TOTALFUN=TOTALFUN+AMOUNT
"RTN","RCRJRCOR",109,0)
 .   .   .   .   S TOTALTYP=TOTALTYP+AMOUNT
"RTN","RCRJRCOR",110,0)
 .   .   .   .   S TOTAL=TOTAL+AMOUNT
"RTN","RCRJRCOR",111,0)
 .   .   .   ;
"RTN","RCRJRCOR",112,0)
 .   .   .   N RCFUND S RCFUND=$S($E(DATEEND,2,5)<"0410":$E(FUND,1,4)_"."_$E(FUND,6),1:$E(FUND,1,4)_"0"_$E(FUND,6))
"RTN","RCRJRCOR",113,0)
 .   .   .   I TYPE="04" D SET($E("            Sub-Total by Fund "_RCFUND_":"_SPACE,1,38)_$J(TOTALFUN,12,2))
"RTN","RCRJRCOR",114,0)
 .   .   ;
"RTN","RCRJRCOR",115,0)
 .   .   D SET("                                                                    ----------")
"RTN","RCRJRCOR",116,0)
 .   .   D SET("                                                    TOTAL TYPE "_TYPE_$J(TOTALTYP,13,2))
"RTN","RCRJRCOR",117,0)
 .   .   D SET(" ")
"RTN","RCRJRCOR",118,0)
 .   D SET("                                                                    ----------")
"RTN","RCRJRCOR",119,0)
 .   D SET("                                                         TOTAL WR"_$J(TOTAL,13,2))
"RTN","RCRJRCOR",120,0)
 .   D SET(" ")
"RTN","RCRJRCOR",121,0)
 ;
"RTN","RCRJRCOR",122,0)
 I '$G(RCRJFTR) D
"RTN","RCRJRCOR",123,0)
 .   D SET("FMS, TRANSFER FROM MCCF TO HSIF (TR) DOCUMENT")
"RTN","RCRJRCOR",124,0)
 .   D SET("-------------------------------------------------")
"RTN","RCRJRCOR",125,0)
 .   D SET("The following data has been transmitted to FMS in the TR document:")
"RTN","RCRJRCOR",126,0)
 .   D SET("  From Fund    From RSC       To Fund    To RSC                         Amount")
"RTN","RCRJRCOR",127,0)
 .   D SET("  ---------    --------       -------    ------                     ----------")
"RTN","RCRJRCOR",128,0)
 .   I $O(RCTRANS(""))="" D SET("  No Dollars to Transfer.") Q
"RTN","RCRJRCOR",129,0)
 .   ;
"RTN","RCRJRCOR",130,0)
 .   S FUND="" F  S FUND=$O(RCTRANS(FUND)) Q:FUND=""  D
"RTN","RCRJRCOR",131,0)
 .   .   S RSC="" F  S RSC=$O(RCTRANS(FUND,RSC)) Q:RSC=""  D
"RTN","RCRJRCOR",132,0)
 .   .   .   ;  rctrans(fromfund,fromrsc) = tofund ^ torsc ^ amount
"RTN","RCRJRCOR",133,0)
 .   .   .   S AMOUNT=RCTRANS(FUND,RSC)
"RTN","RCRJRCOR",134,0)
 .   .   .   D SET($J(FUND,11)_$J(RSC,12)_$J($P(AMOUNT,"^"),14)_$J($P(AMOUNT,"^",2),10)_$J($P(AMOUNT,"^",3),31,2))
"RTN","RCRJRCOR",135,0)
 ;
"RTN","RCRJRCOR",136,0)
 S XMY("G.RC AR DATA COLLECTOR")=""
"RTN","RCRJRCOR",137,0)
 S %=$$SENDMSG("AR Data Collector for "_DATEMOYR_" Station "_PRCASITE,.XMY)
"RTN","RCRJRCOR",138,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRCOR",139,0)
 ;
"RTN","RCRJRCOR",140,0)
 ;  send users detail report
"RTN","RCRJRCOR",141,0)
 D USERREPT^RCRJRCOU(DATEMOYR)
"RTN","RCRJRCOR",142,0)
 Q
"RTN","RCRJRCOR",143,0)
 ;
"RTN","RCRJRCOR",144,0)
 ;
"RTN","RCRJRCOR",145,0)
NDB(PRCASITE,DATEBEG,DATEEND) ;  send data to the national database
"RTN","RCRJRCOR",146,0)
 N %,BATCNAME,COUNT,CRITERIA,DATA,LINE,XMY,X,Y
"RTN","RCRJRCOR",147,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRCOR",148,0)
 S LINE=2,DATA="D$ "
"RTN","RCRJRCOR",149,0)
 S CRITERIA="" F COUNT=1:1 S CRITERIA=$O(^TMP($J,"RCRJRCOLNDB",CRITERIA)) Q:CRITERIA=""  D
"RTN","RCRJRCOR",150,0)
 .   S DATA=DATA_":"_COUNT_"/"_CRITERIA_"/"_^TMP($J,"RCRJRCOLNDB",CRITERIA)
"RTN","RCRJRCOR",151,0)
 .   I $L(DATA)>200 D SET(DATA) S DATA="D$ "
"RTN","RCRJRCOR",152,0)
 I DATA'="D$ " D SET(DATA)
"RTN","RCRJRCOR",153,0)
 ;
"RTN","RCRJRCOR",154,0)
 ;  build the first two control lines in mail message
"RTN","RCRJRCOR",155,0)
 S Y=DATEBEG D DD^%DT
"RTN","RCRJRCOR",156,0)
 S BATCNAME="AR1-"_$E(Y,1,3)_$E(DATEBEG,6,7)_$TR($P(Y,",",2)," ")
"RTN","RCRJRCOR",157,0)
 S Y=DATEEND D DD^%DT
"RTN","RCRJRCOR",158,0)
 S BATCNAME=BATCNAME_"-"_$E(Y,1,3)_$E(DATEEND,6,7)_$TR($P(Y,",",2)," ")
"RTN","RCRJRCOR",159,0)
 S ^TMP($J,"RCRJRCORMM",1)="T$ "_PRCASITE_"$"_BATCNAME_"$$$$$*"
"RTN","RCRJRCOR",160,0)
 ;  get end time (in %)
"RTN","RCRJRCOR",161,0)
 D NOW^%DTC
"RTN","RCRJRCOR",162,0)
 S ^TMP($J,"RCRJRCORMM",2)="S$ "_STRTTIME_"^"_%_"$0$"_(COUNT-1)
"RTN","RCRJRCOR",163,0)
 ;
"RTN","RCRJRCOR",164,0)
 S XMY("S.PRQN DATA COLLECTION MONITOR@FO-ALBANY.MED.VA.GOV")=""
"RTN","RCRJRCOR",165,0)
 S %=$$SENDMSG("AR1 "_$E(DATEEND,4,5)_"/"_$E(DATEEND,2,3)_" NDB DATA FOR SITE "_PRCASITE,.XMY)
"RTN","RCRJRCOR",166,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRCOR",167,0)
 Q
"RTN","RCRJRCOR",168,0)
 ;
"RTN","RCRJRCOR",169,0)
 ;
"RTN","RCRJRCOR",170,0)
SUMMARY ;  print summary report in mailman bulletin
"RTN","RCRJRCOR",171,0)
 N %,BILLDA,CRITER2,CRITERIA,DATA0,DFN,LINE,STAT,TOTAL,VA,XMY
"RTN","RCRJRCOR",172,0)
 K ^TMP($J,"RCRJRCOR")   ; used to identify test patients
"RTN","RCRJRCOR",173,0)
 K ^TMP($J,"RCRJRCORMM") ; used to build mailman message
"RTN","RCRJRCOR",174,0)
 ;
"RTN","RCRJRCOR",175,0)
 ;  print any test patient bills which have not been closed
"RTN","RCRJRCOR",176,0)
 S BILLDA=0 F  S BILLDA=$O(^TMP($J,"RCRJRCOL","CRIT2",1,BILLDA)) Q:'BILLDA  I $D(^(BILLDA,1)) D
"RTN","RCRJRCOR",177,0)
 .   S DATA0=$G(^PRCA(430,BILLDA,0)),STAT=$P(DATA0,"^",8)
"RTN","RCRJRCOR",178,0)
 .   I STAT'=16,STAT='42 Q  ; bill not currently open
"RTN","RCRJRCOR",179,0)
 .   S DFN=+$P(DATA0,"^",7) I 'DFN Q
"RTN","RCRJRCOR",180,0)
 .   D PID^VADPT
"RTN","RCRJRCOR",181,0)
 .   I $E($TR($G(VA("PID")),"-"),1,5)="00000" S ^TMP($J,"RCRJRCOR","TEST",BILLDA)=""
"RTN","RCRJRCOR",182,0)
 ;
"RTN","RCRJRCOR",183,0)
 I '$D(^TMP($J,"RCRJRCOR","TEST")) Q
"RTN","RCRJRCOR",184,0)
 ;
"RTN","RCRJRCOR",185,0)
 ;  print data
"RTN","RCRJRCOR",186,0)
 S LINE=0
"RTN","RCRJRCOR",187,0)
 D SET(" ")
"RTN","RCRJRCOR",188,0)
 D SET("The following bills are active and linked to test patients:")
"RTN","RCRJRCOR",189,0)
 S BILLDA=0 F  S BILLDA=$O(^TMP($J,"RCRJRCOR","TEST",BILLDA)) Q:'BILLDA  D SET("  "_$P($G(^PRCA(430,BILLDA,0)),"^")_" (#",BILLDA_")")
"RTN","RCRJRCOR",190,0)
 ;
"RTN","RCRJRCOR",191,0)
 S XMY("G.RC AR DATA COLLECTOR")=""
"RTN","RCRJRCOR",192,0)
 S %=$$SENDMSG("MCCR DATA COLLECTOR INFORMATION",.XMY)
"RTN","RCRJRCOR",193,0)
 K ^TMP($J,"RCRJRCOR")
"RTN","RCRJRCOR",194,0)
 K ^TMP($J,"RCRJRCORMM")
"RTN","RCRJRCOR",195,0)
 Q
"RTN","RCRJRCOR",196,0)
 ;
"RTN","RCRJRCOR",197,0)
 ;
"RTN","RCRJRCOR",198,0)
SET(DATA)          ;  store report
"RTN","RCRJRCOR",199,0)
 S LINE=LINE+1,^TMP($J,"RCRJRCORMM",LINE)=DATA
"RTN","RCRJRCOR",200,0)
 Q
"RTN","RCRJRCOR",201,0)
 ;
"RTN","RCRJRCOR",202,0)
 ;
"RTN","RCRJRCOR",203,0)
SENDMSG(XMSUB,XMY) ;  send message with subject and recipients
"RTN","RCRJRCOR",204,0)
 N %X,D0,D1,D2,DIC,DICR,DIW,X,XCNP,XMDISPI,XMDUN,XMDUZ,XMTEXT,XMZ,ZTPAR
"RTN","RCRJRCOR",205,0)
 S XMDUZ="AR PACKAGE",XMTEXT="^TMP($J,""RCRJRCORMM"","
"RTN","RCRJRCOR",206,0)
 D ^XMD
"RTN","RCRJRCOR",207,0)
 Q +$G(XMZ)
"RTN","RCXFMSSV")
0^8^B52906959
"RTN","RCXFMSSV",1,0)
RCXFMSSV ;WISC/RFJ-fms standard voucher (sv) code sheet generator ;1 Nov 97
"RTN","RCXFMSSV",2,0)
 ;;4.5;Accounts Receivable;**96,101,135,139,98,156,170,191,203,220,138**;Mar 20, 1995
"RTN","RCXFMSSV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCXFMSSV",4,0)
 Q
"RTN","RCXFMSSV",5,0)
 ;
"RTN","RCXFMSSV",6,0)
 ;
"RTN","RCXFMSSV",7,0)
STARTSV(RCDATEND) ;  top entry point to generate a sv code sheet
"RTN","RCXFMSSV",8,0)
 ;
"RTN","RCXFMSSV",9,0)
 ;  rcdatend is the ending date of the period.
"RTN","RCXFMSSV",10,0)
 ;  This date is the 3rd work day from the end of the month.
"RTN","RCXFMSSV",11,0)
 ;  The utility $$LDATE^RCRJR is used to figure it out. It will
"RTN","RCXFMSSV",12,0)
 ;  change from month to month and figures in holidays also.
"RTN","RCXFMSSV",13,0)
 ;  For example,  if running the ARDC for the month of June 2003
"RTN","RCXFMSSV",14,0)
 ;  the EOAM will calculate out to be June 25, 2003.
"RTN","RCXFMSSV",15,0)
 ;  This is called by the background monthly data collector
"RTN","RCXFMSSV",16,0)
 ;
"RTN","RCXFMSSV",17,0)
 ;  data stored in tmp($j,rcrjrcolsv,type,fund,revsourcecode)
"RTN","RCXFMSSV",18,0)
 ;  this is called by the background monthly data collector
"RTN","RCXFMSSV",19,0)
 ;
"RTN","RCXFMSSV",20,0)
 N GECSDATA,RCTRANID,RESULT
"RTN","RCXFMSSV",21,0)
 ;  lookup fms document number to see if the monthly sv has been sent
"RTN","RCXFMSSV",22,0)
 ;  example rcdatend=3010531, lookup on 3010500
"RTN","RCXFMSSV",23,0)
 D KEYLOOK^GECSSGET("SV-"_$E(RCDATEND,1,5)_"00",1)
"RTN","RCXFMSSV",24,0)
 ;
"RTN","RCXFMSSV",25,0)
 ;  get the transacion id for the fms document
"RTN","RCXFMSSV",26,0)
 ;  if it is not sent, get the next number available
"RTN","RCXFMSSV",27,0)
 I $G(GECSDATA) S RCTRANID=$E($P(GECSDATA("2100.1",GECSDATA,".01","E"),"-",2),1,11)
"RTN","RCXFMSSV",28,0)
 I $G(RCTRANID)="" S RCTRANID=$$ENUM^RCMSNUM
"RTN","RCXFMSSV",29,0)
 I RCTRANID<0 Q  ;unable to retrieve the next number
"RTN","RCXFMSSV",30,0)
 ;  remove dash (example 460-K1A05HY)
"RTN","RCXFMSSV",31,0)
 S RCTRANID=$TR(RCTRANID,"-")
"RTN","RCXFMSSV",32,0)
 ;
"RTN","RCXFMSSV",33,0)
 ;  build and send the sv document to fms
"RTN","RCXFMSSV",34,0)
 S RESULT=$$BUILDSV(RCDATEND,+$G(GECSDATA),RCTRANID)
"RTN","RCXFMSSV",35,0)
 ;  error in building code sheet
"RTN","RCXFMSSV",36,0)
 I 'RESULT Q
"RTN","RCXFMSSV",37,0)
 ;
"RTN","RCXFMSSV",38,0)
 ;  add/update entry in file 347 for reports
"RTN","RCXFMSSV",39,0)
 N %DT,%X,D,D0,DA347,DI,DQ,DIC,ERROR
"RTN","RCXFMSSV",40,0)
 S DA347=$O(^RC(347,"C",$P(RESULT,"^",2),0))
"RTN","RCXFMSSV",41,0)
 ;  if not in the file, addit   fmsdocid   sv   id
"RTN","RCXFMSSV",42,0)
 I 'DA347 D OPEN^RCFMDRV1($P(RESULT,"^",2),4,"SV-"_$E(RCDATEND,1,5)_"00",.DA347,.ERROR)
"RTN","RCXFMSSV",43,0)
 I DA347 D SSTAT^RCFMFN02($P(RESULT,"^",2),1)
"RTN","RCXFMSSV",44,0)
 Q
"RTN","RCXFMSSV",45,0)
 ;
"RTN","RCXFMSSV",46,0)
 ;
"RTN","RCXFMSSV",47,0)
BUILDSV(RCDATEND,RCGECSDA,RCTRANID) ;  generate a wr code sheet for monthly data
"RTN","RCXFMSSV",48,0)
 ;  rcgecsda is the ien for the gcs stack file 2100.1 for rebuilds
"RTN","RCXFMSSV",49,0)
 ;  data stored in tmp($j,rcrjrcolsv)
"RTN","RCXFMSSV",50,0)
 ;
"RTN","RCXFMSSV",51,0)
 N AMOUNT,COUNT,DESCRIP,DOCTOTAL,FISCALYR,FMSLINE,FUND,FY,GECSFMS,MONTH,REVDATE,REVFY,REVMONTH,RSC,SV2,TYPE
"RTN","RCXFMSSV",52,0)
 ;
"RTN","RCXFMSSV",53,0)
 S FISCALYR=$$FY^RCFN01(RCDATEND)
"RTN","RCXFMSSV",54,0)
 ;
"RTN","RCXFMSSV",55,0)
 S COUNT=0,DOCTOTAL=0
"RTN","RCXFMSSV",56,0)
 S TYPE="" F  S TYPE=$O(^TMP($J,"RCRJRCOLSV",TYPE)) Q:TYPE=""  D
"RTN","RCXFMSSV",57,0)
 . S FUND="" F  S FUND=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND)) Q:FUND=""  D
"RTN","RCXFMSSV",58,0)
 . . S RSC="" F  S RSC=$O(^TMP($J,"RCRJRCOLSV",TYPE,FUND,RSC)) Q:RSC=""  D
"RTN","RCXFMSSV",59,0)
 . . . S AMOUNT=^TMP($J,"RCRJRCOLSV",TYPE,FUND,RSC),DOCTOTAL=DOCTOTAL+AMOUNT
"RTN","RCXFMSSV",60,0)
 . . . I AMOUNT=0 Q
"RTN","RCXFMSSV",61,0)
 . . . S COUNT=COUNT+1
"RTN","RCXFMSSV",62,0)
 . . . S FMSLINE(COUNT)="LIN^~SVA^"_$S($L(COUNT)=1:"00",$L(COUNT)=2:"0",1:"")_COUNT
"RTN","RCXFMSSV",63,0)
 . . . S $P(FMSLINE(COUNT),"^",4)=TYPE
"RTN","RCXFMSSV",64,0)
 . . . S $P(FMSLINE(COUNT),"^",5)=FISCALYR ;begin fy
"RTN","RCXFMSSV",65,0)
 . . . S $P(FMSLINE(COUNT),"^",7)=FUND
"RTN","RCXFMSSV",66,0)
 . . . S $P(FMSLINE(COUNT),"^",9)=$E(RCTRANID,1,3)  ;site number
"RTN","RCXFMSSV",67,0)
 . . . ;  for transaction types 23,27,2B the RSC is 0, send null
"RTN","RCXFMSSV",68,0)
 . . . S $P(FMSLINE(COUNT),"^",14)=$S(RSC=0:"",1:RSC)
"RTN","RCXFMSSV",69,0)
 . . . ;
"RTN","RCXFMSSV",70,0)
 . . . ;  vendor id
"RTN","RCXFMSSV",71,0)
 . . . S $P(FMSLINE(COUNT),"^",18)="MCCFVALUE"
"RTN","RCXFMSSV",72,0)
 . . . ;  for transaction type P2, send vendorid of PERSONOTH
"RTN","RCXFMSSV",73,0)
 . . . I TYPE="P2" S $P(FMSLINE(COUNT),"^",18)="PERSONOTH"
"RTN","RCXFMSSV",74,0)
 . . . ;  if it is hsif fund 5358.1, send vendorid of HSIFVALUE
"RTN","RCXFMSSV",75,0)
 . . . I FUND=5358.1 S $P(FMSLINE(COUNT),"^",18)="HSIFVALUE"
"RTN","RCXFMSSV",76,0)
 . . . ;  if it is ltc fund 4032 or 528709, send vendorid of EXCFVALUE
"RTN","RCXFMSSV",77,0)
 . . . I FUND=4032!(FUND=528709) D
"RTN","RCXFMSSV",78,0)
 . . . . S $P(FMSLINE(COUNT),"^",18)="EXCFVALUE"
"RTN","RCXFMSSV",79,0)
 . . . . S:FUND=4032 $P(FMSLINE(COUNT),"^",5)="03" ; FY
"RTN","RCXFMSSV",80,0)
 . . . ;
"RTN","RCXFMSSV",81,0)
 . . . S $P(FMSLINE(COUNT),"^",19)="~SVB"
"RTN","RCXFMSSV",82,0)
 . . . S $P(FMSLINE(COUNT),"^",20)=$J(AMOUNT,0,2)
"RTN","RCXFMSSV",83,0)
 . . . S $P(FMSLINE(COUNT),"^",21)="I"
"RTN","RCXFMSSV",84,0)
 . . . ;  for transaction types 23,27,2B the RSC is 0, send G
"RTN","RCXFMSSV",85,0)
 . . . S $P(FMSLINE(COUNT),"^",23)=$S(RSC=0:"G",1:"R")
"RTN","RCXFMSSV",86,0)
 . . . S $P(FMSLINE(COUNT),"^",25)=$E(RCDATEND,2,3)
"RTN","RCXFMSSV",87,0)
 . . . S $P(FMSLINE(COUNT),"^",26)=$E(RCDATEND,4,5)
"RTN","RCXFMSSV",88,0)
 . . . S $P(FMSLINE(COUNT),"^",27)=$E(RCDATEND,6,7)
"RTN","RCXFMSSV",89,0)
 . . . S $P(FMSLINE(COUNT),"^",28)="~"
"RTN","RCXFMSSV",90,0)
 ;
"RTN","RCXFMSSV",91,0)
 ;  no code sheets to send
"RTN","RCXFMSSV",92,0)
 I COUNT=0 Q "0^No sv code sheets to send for this month"
"RTN","RCXFMSSV",93,0)
 ;
"RTN","RCXFMSSV",94,0)
 ;  calculate the accounting month and fy
"RTN","RCXFMSSV",95,0)
 S FY=$E(RCDATEND,2,3) I $E(RCDATEND,4,5)>9 S FY=FY+1 I FY=100 S FY="00"
"RTN","RCXFMSSV",96,0)
 I $L(FY)=1 S FY="0"_FY
"RTN","RCXFMSSV",97,0)
 S MONTH=$P("04^05^06^07^08^09^10^11^12^01^02^03","^",$E(RCDATEND,4,5))
"RTN","RCXFMSSV",98,0)
 ;  calculate the reversal month and fy (next month, add 1 day)
"RTN","RCXFMSSV",99,0)
 S REVDATE=$$FMADD^XLFDT(RCDATEND,7)
"RTN","RCXFMSSV",100,0)
 S REVFY=$E(REVDATE,2,3) I $E(REVDATE,4,5)>9 S REVFY=REVFY+1 I REVFY=100 S REVFY="00"
"RTN","RCXFMSSV",101,0)
 I $L(REVFY)=1 S REVFY="0"_REVFY
"RTN","RCXFMSSV",102,0)
 S REVMONTH=$P("04^05^06^07^08^09^10^11^12^01^02^03","^",$E(REVDATE,4,5))
"RTN","RCXFMSSV",103,0)
 ;
"RTN","RCXFMSSV",104,0)
 S SV2="SV2^"_$E(RCDATEND,2,3)_"^"_$E(RCDATEND,4,5)_"^"_$E(RCDATEND,6,7)
"RTN","RCXFMSSV",105,0)
 S $P(SV2,"^",5)=MONTH         ;accounting period month
"RTN","RCXFMSSV",106,0)
 S $P(SV2,"^",6)=FY            ;accounting period year
"RTN","RCXFMSSV",107,0)
 S $P(SV2,"^",7)="E"
"RTN","RCXFMSSV",108,0)
 S $P(SV2,"^",12)=REVFY        ;reversal period year
"RTN","RCXFMSSV",109,0)
 S $P(SV2,"^",13)=REVMONTH     ;reversal period month
"RTN","RCXFMSSV",110,0)
 S $P(SV2,"^",16)=$J(DOCTOTAL,0,2)_"^~"
"RTN","RCXFMSSV",111,0)
 ;
"RTN","RCXFMSSV",112,0)
 ;  put together document in gcs
"RTN","RCXFMSSV",113,0)
 N %DT,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCXFMSSV",114,0)
 S Y=$E(RCDATEND,1,5)_"00" D DD^%DT
"RTN","RCXFMSSV",115,0)
 S DESCRIP="Monthly Standard Voucher for "_Y
"RTN","RCXFMSSV",116,0)
 I 'RCGECSDA D CONTROL^GECSUFMS("A",$E(RCTRANID,1,3),RCTRANID,"SV",10,0,"",DESCRIP)
"RTN","RCXFMSSV",117,0)
 I RCGECSDA D REBUILD^GECSUFM1(RCGECSDA,"A",10,"","Rebuild "_DESCRIP) S GECSFMS("DA")=RCGECSDA
"RTN","RCXFMSSV",118,0)
 ;
"RTN","RCXFMSSV",119,0)
 ;  store document in gcs
"RTN","RCXFMSSV",120,0)
 D SETCS^GECSSTAA(GECSFMS("DA"),SV2)
"RTN","RCXFMSSV",121,0)
 F COUNT=1:1 Q:'$D(FMSLINE(COUNT))  D SETCS^GECSSTAA(GECSFMS("DA"),FMSLINE(COUNT))
"RTN","RCXFMSSV",122,0)
 D SETCODE^GECSSDCT(GECSFMS("DA"),"D RETN^RCFMFN02")
"RTN","RCXFMSSV",123,0)
 D SETSTAT^GECSSTAA(GECSFMS("DA"),"Q")
"RTN","RCXFMSSV",124,0)
 ;  set the key for lookup
"RTN","RCXFMSSV",125,0)
 D SETKEY^GECSSTAA(GECSFMS("DA"),"SV-"_$E(RCDATEND,1,5)_"00")
"RTN","RCXFMSSV",126,0)
 ;
"RTN","RCXFMSSV",127,0)
 ;  return 1 for success ^ fms document transaction number
"RTN","RCXFMSSV",128,0)
 Q "1^SV-"_$P(GECSFMS("CTL"),"^",9)
"RTN","RCXFMSSV",129,0)
 ;
"RTN","RCXFMSSV",130,0)
 ;
"RTN","RCXFMSSV",131,0)
BADDEBT ;  top entry point to generate a sv code sheet
"RTN","RCXFMSSV",132,0)
 ;  for the bad debt report, transaction types 23, 27, 2B and 2J.
"RTN","RCXFMSSV",133,0)
 ;  The fms document number in file 347 is SV-$e(dateend,1,5)_"01"
"RTN","RCXFMSSV",134,0)
 ;
"RTN","RCXFMSSV",135,0)
 N DATA1319,DATA1338,DATA1339,DATA4032,DATAHSIF,GECSDATA,RCRJDATE,RESULT,RCRJFMM,RCRJFXSV,RCTRANID,X,RCNOHSIF,LTCFUND
"RTN","RCXFMSSV",136,0)
 N DATA133N
"RTN","RCXFMSSV",137,0)
 ;
"RTN","RCXFMSSV",138,0)
 S RCNOHSIF=$$NOHSIF^RCRJRCO() ; disabled HSIF
"RTN","RCXFMSSV",139,0)
 ;
"RTN","RCXFMSSV",140,0)
 ;  lock cannot fail
"RTN","RCXFMSSV",141,0)
 L +^RC(348.1)
"RTN","RCXFMSSV",142,0)
 ;
"RTN","RCXFMSSV",143,0)
 ;  get the data from the bad debt allowance file 348.1
"RTN","RCXFMSSV",144,0)
 K ^TMP($J,"RCRJRCOLSV")
"RTN","RCXFMSSV",145,0)
 S DATA1319=$G(^RC(348.1,+$O(^RC(348.1,"B",1319,0)),0))
"RTN","RCXFMSSV",146,0)
 S DATA1338=$G(^RC(348.1,+$O(^RC(348.1,"B",1338,0)),0))
"RTN","RCXFMSSV",147,0)
 S DATA1339=$G(^RC(348.1,+$O(^RC(348.1,"B",1339,0)),0))
"RTN","RCXFMSSV",148,0)
 S DATA133N=$G(^RC(348.1,+$O(^RC(348.1,"B","133N",0)),0))
"RTN","RCXFMSSV",149,0)
 I 'RCNOHSIF S DATAHSIF=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.1,0)),0))
"RTN","RCXFMSSV",150,0)
 S DATA4032=$G(^RC(348.1,+$O(^RC(348.1,"B",1319.2,0)),0))
"RTN","RCXFMSSV",151,0)
 ; the revenue source code here is a 0
"RTN","RCXFMSSV",152,0)
 S ^TMP($J,"RCRJRCOLSV","23",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.3,1:528703)),0)=$P(DATA1319,"^",8)+$P(DATA1319,"^",9)
"RTN","RCXFMSSV",153,0)
 I 'RCNOHSIF S ^TMP($J,"RCRJRCOLSV","23",5358.1,0)=$P(DATAHSIF,"^",8)+$P(DATAHSIF,"^",9)
"RTN","RCXFMSSV",154,0)
 ;patch 220 replaces 4032 fund with 528709
"RTN","RCXFMSSV",155,0)
 S LTCFUND=$S(DT'<$$ADDPTEDT^PRCAACC():528709,1:4032)
"RTN","RCXFMSSV",156,0)
 S ^TMP($J,"RCRJRCOLSV","23",LTCFUND,0)=$P(DATA4032,"^",8)+$P(DATA4032,"^",9)
"RTN","RCXFMSSV",157,0)
 S ^TMP($J,"RCRJRCOLSV","2B",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA1338,"^",8)+$P(DATA1338,"^",9)
"RTN","RCXFMSSV",158,0)
 S ^TMP($J,"RCRJRCOLSV","27",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA1339,"^",8)+$P(DATA1339,"^",9)
"RTN","RCXFMSSV",159,0)
 ; post-MRA non-Medicare bills
"RTN","RCXFMSSV",160,0)
 S ^TMP($J,"RCRJRCOLSV","2J",$$ADJFUND^RCRJRCO($S(DT<$$ADDPTEDT^PRCAACC():5287.4,1:528704)),0)=$P(DATA133N,"^",8)+$P(DATA133N,"^",9)
"RTN","RCXFMSSV",161,0)
 ;
"RTN","RCXFMSSV",162,0)
 ;  the date is for previous month
"RTN","RCXFMSSV",163,0)
 ;S RCRJDATE=$$PREVMONT^RCRJRBD(DT)
"RTN","RCXFMSSV",164,0)
 I $E(DT,6,7)<$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$$PREVMONT^RCRJRBD(DT)
"RTN","RCXFMSSV",165,0)
 ;I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$E($$LDATE^RCRJR(DT),1,5)_"00"
"RTN","RCXFMSSV",166,0)
 I $E(DT,6,7)>$E($$LDATE^RCRJR(DT),6,7) S RCRJDATE=$$LDATE^RCRJR(DT)
"RTN","RCXFMSSV",167,0)
 ;  find the last day of the month for the end date
"RTN","RCXFMSSV",168,0)
 ;S RCRJDATE=$E(RCRJDATE,1,5)_$P("31^28^31^30^31^30^31^31^30^31^30^31","^",+$E(RCRJDATE,4,5))
"RTN","RCXFMSSV",169,0)
 ;I $E(RCRJDATE,6,7)=28,$E(RCRJDATE,2,3)#4=0 S RCRJDATE=$E(RCRJDATE,1,5)_"29"
"RTN","RCXFMSSV",170,0)
 ;
"RTN","RCXFMSSV",171,0)
 ;  lookup fms document number to see if the monthly sv has been sent
"RTN","RCXFMSSV",172,0)
 ;  example rcdatend=3010531, lookup on 3010501
"RTN","RCXFMSSV",173,0)
 D KEYLOOK^GECSSGET("SV-"_$E(RCRJDATE,1,5)_"01",1)
"RTN","RCXFMSSV",174,0)
 ;
"RTN","RCXFMSSV",175,0)
 ;  get the transacion id for the fms document
"RTN","RCXFMSSV",176,0)
 ;  if it is not sent, get the next number available
"RTN","RCXFMSSV",177,0)
 I $G(GECSDATA) S RCTRANID=$E($P(GECSDATA("2100.1",GECSDATA,".01","E"),"-",2),1,11)
"RTN","RCXFMSSV",178,0)
 I $G(RCTRANID)="" S RCTRANID=$$ENUM^RCMSNUM
"RTN","RCXFMSSV",179,0)
 I RCTRANID<0 Q  ;unable to retrieve the next number
"RTN","RCXFMSSV",180,0)
 ;  remove dash (example 460-K1A05HY)
"RTN","RCXFMSSV",181,0)
 S RCTRANID=$TR(RCTRANID,"-")
"RTN","RCXFMSSV",182,0)
 ;
"RTN","RCXFMSSV",183,0)
 ;  build and send the sv document to fms
"RTN","RCXFMSSV",184,0)
 S RESULT=$$BUILDSV(RCRJDATE,+$G(GECSDATA),RCTRANID)
"RTN","RCXFMSSV",185,0)
 K ^TMP($J,"RCRJRCOLSV")
"RTN","RCXFMSSV",186,0)
 ;  error in building code sheet
"RTN","RCXFMSSV",187,0)
 I 'RESULT D Q Q
"RTN","RCXFMSSV",188,0)
 ;
"RTN","RCXFMSSV",189,0)
 ;  add/update entry in file 347 for reports
"RTN","RCXFMSSV",190,0)
 N %DT,%X,D,D0,DA347,DI,DQ,DIC,ERROR
"RTN","RCXFMSSV",191,0)
 S DA347=$O(^RC(347,"D","SV-"_$E(RCRJDATE,1,5)_"01",0))
"RTN","RCXFMSSV",192,0)
 ;  if not in the file, addit   fmsdocid   sv   id
"RTN","RCXFMSSV",193,0)
 I 'DA347 D OPEN^RCFMDRV1($P(RESULT,"^",2),4,"SV-"_$E(RCRJDATE,1,5)_"01",.DA347,.ERROR)
"RTN","RCXFMSSV",194,0)
 I DA347 D SSTAT^RCFMFN02($P(RESULT,"^",2),1)
"RTN","RCXFMSSV",195,0)
 ;
"RTN","RCXFMSSV",196,0)
Q ;  jump here to finish
"RTN","RCXFMSSV",197,0)
 ;  generate bad debt report
"RTN","RCXFMSSV",198,0)
 S RCRJFXSV=$P(RESULT,"^",2),RCRJFMM=1 D DQ^RCRJRBDR
"RTN","RCXFMSSV",199,0)
 L -^RC(348.1)
"RTN","RCXFMSSV",200,0)
 Q
"VER")
8.0^22.0
"^DD",348.1,348.1,.01,0)
SGL ACCOUNT^RF^^0;1^K:$L(X)>4!($L(X)<4)!'(X?4AN) X
"^DD",348.1,348.1,.01,1,0)
^.1
"^DD",348.1,348.1,.01,1,1,0)
348.1^B
"^DD",348.1,348.1,.01,1,1,1)
S ^RC(348.1,"B",$E(X,1,30),DA)=""
"^DD",348.1,348.1,.01,1,1,2)
K ^RC(348.1,"B",$E(X,1,30),DA)
"^DD",348.1,348.1,.01,3)
Answer must be 4 alpha-numeric characters in length.
"^DD",348.1,348.1,.01,21,0)
^.001^1^1^3040319^^^^
"^DD",348.1,348.1,.01,21,1,0)
This is the Standard General Ledger (SGL) Account.
"^DD",348.1,348.1,.01,"DT")
3040319
"^DD",430,430,131,0)
MEDICARE CONT. ADJUSTMENT^NJ11,2^^13;1^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999999.99)!(X<0) X
"^DD",430,430,131,3)
Type a Dollar Amount between 0 and 99999999.99, 2 Decimal Digits
"^DD",430,430,131,21,0)
^.001^1^1^3040324^^
"^DD",430,430,131,21,1,0)
This field will reflect the Medicare contractual adjustment for a bill.
"^DD",430,430,131,"DT")
3040324
"^DD",430,430,132,0)
MEDICARE UNREIMBURSABLE^NJ11,2^^13;2^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999999.99)!(X<0) X
"^DD",430,430,132,3)
Type a Dollar Amount between 0 and 99999999.99, 2 Decimal Digits
"^DD",430,430,132,21,0)
^.001^1^1^3040324^^^
"^DD",430,430,132,21,1,0)
This field will reflect the Medicare Unreimbursable Expense for a bill.
"^DD",430,430,132,"DT")
3040324
**END**
**END**
