KIDS Distribution saved on Oct 09, 2003@11:54:42
Patch FB*3.5*61
**KIDS**:FB*3.5*61^

**INSTALL NAME**
FB*3.5*61
"BLD",4837,0)
FB*3.5*61^FEE BASIS^0^3031009^y
"BLD",4837,1,0)
^^4^4^3030812^
"BLD",4837,1,1,0)
This patch contains enhancements for Fee Basis related to VA compliance
"BLD",4837,1,2,0)
with the HIPAA transaction and code set final rule.  This patch will
"BLD",4837,1,3,0)
support the new Fee Payment Processing System (FPPS) located at the Health
"BLD",4837,1,4,0)
Administration Center (HAC) in Denver.
"BLD",4837,4,0)
^9.64PA^163.5^10
"BLD",4837,4,161.91,0)
161.91
"BLD",4837,4,161.91,222)
y^y^f^^n^^y^o^n
"BLD",4837,4,161.92,0)
161.92
"BLD",4837,4,161.92,222)
y^y^f^^n^^y^o^n
"BLD",4837,4,161.93,0)
161.93
"BLD",4837,4,161.93,222)
y^y^f^^n^^y^o^n
"BLD",4837,4,162,0)
162
"BLD",4837,4,162,2,0)
^9.641^162.08^3
"BLD",4837,4,162,2,162.03,0)
SERVICE PROVIDED  (sub-file)
"BLD",4837,4,162,2,162.03,1,0)
^9.6411^51^5
"BLD",4837,4,162,2,162.03,1,47,0)
UNITS PAID
"BLD",4837,4,162,2,162.03,1,48,0)
REVENUE CODE
"BLD",4837,4,162,2,162.03,1,49,0)
PATIENT ACCOUNT NUMBER
"BLD",4837,4,162,2,162.03,1,50,0)
FPPS CLAIM ID
"BLD",4837,4,162,2,162.03,1,51,0)
FPPS LINE ITEM
"BLD",4837,4,162,2,162.07,0)
ADJUSTMENT  (sub-file)
"BLD",4837,4,162,2,162.07,1,0)
^9.6411^^
"BLD",4837,4,162,2,162.08,0)
REMITTANCE REMARK  (sub-file)
"BLD",4837,4,162,2,162.08,1,0)
^9.6411^^
"BLD",4837,4,162,222)
y^n^p^^^^n^^n
"BLD",4837,4,162,224)

"BLD",4837,4,162.1,0)
162.1
"BLD",4837,4,162.1,2,0)
^9.641^162.15^4
"BLD",4837,4,162.1,2,162.1,0)
FEE BASIS PHARMACY INVOICE  (File-top level)
"BLD",4837,4,162.1,2,162.1,1,0)
^9.6411^13^1
"BLD",4837,4,162.1,2,162.1,1,13,0)
FPPS CLAIM ID
"BLD",4837,4,162.1,2,162.11,0)
PRESCRIPTION NUMBER  (sub-file)
"BLD",4837,4,162.1,2,162.11,1,0)
^9.6411^36^1
"BLD",4837,4,162.1,2,162.11,1,36,0)
FPPS LINE ITEM
"BLD",4837,4,162.1,2,162.14,0)
ADJUSTMENT  (sub-file)
"BLD",4837,4,162.1,2,162.14,1,0)
^9.6411^^
"BLD",4837,4,162.1,2,162.15,0)
REMITTANCE REMARK  (sub-file)
"BLD",4837,4,162.1,2,162.15,1,0)
^9.6411^^
"BLD",4837,4,162.1,222)
y^n^p^^^^n^^n
"BLD",4837,4,162.1,224)

"BLD",4837,4,162.5,0)
162.5
"BLD",4837,4,162.5,2,0)
^9.641^162.559^3
"BLD",4837,4,162.5,2,162.5,0)
FEE BASIS INVOICE  (File-top level)
"BLD",4837,4,162.5,2,162.5,1,0)
^9.6411^8^6
"BLD",4837,4,162.5,2,162.5,1,8,0)
AMOUNT PAID
"BLD",4837,4,162.5,2,162.5,1,24.5,0)
DRG WEIGHT
"BLD",4837,4,162.5,2,162.5,1,54,0)
COVERED DAYS
"BLD",4837,4,162.5,2,162.5,1,55,0)
PATIENT CONTROL NUMBER
"BLD",4837,4,162.5,2,162.5,1,56,0)
FPPS CLAIM ID
"BLD",4837,4,162.5,2,162.5,1,57,0)
FPPS LINE ITEM
"BLD",4837,4,162.5,2,162.558,0)
ADJUSTMENT  (sub-file)
"BLD",4837,4,162.5,2,162.558,1,0)
^9.6411^^
"BLD",4837,4,162.5,2,162.559,0)
REMITTANCE REMARK  (sub-file)
"BLD",4837,4,162.5,2,162.559,1,0)
^9.6411^^
"BLD",4837,4,162.5,222)
y^n^p^^^^n^^n
"BLD",4837,4,162.5,224)

"BLD",4837,4,162.7,0)
162.7
"BLD",4837,4,162.7,2,0)
^9.641^162.7^1
"BLD",4837,4,162.7,2,162.7,0)
FEE BASIS UNAUTHORIZED CLAIMS  (File-top level)
"BLD",4837,4,162.7,2,162.7,1,0)
^9.6411^32^1
"BLD",4837,4,162.7,2,162.7,1,32,0)
FPPS CLAIM ID
"BLD",4837,4,162.7,222)
y^n^p^^^^n^^n
"BLD",4837,4,162.7,224)

"BLD",4837,4,163.5,0)
163.5
"BLD",4837,4,163.5,222)
y^y^f^^^^n
"BLD",4837,4,163.7,0)
163.7
"BLD",4837,4,163.7,222)
y^y^f^^^^n
"BLD",4837,4,163.99,0)
163.99
"BLD",4837,4,163.99,2,0)
^9.641^163.991^1
"BLD",4837,4,163.99,2,163.991,0)
FISCAL YEAR  (sub-file)
"BLD",4837,4,163.99,2,163.991,1,0)
^9.6411^4^1
"BLD",4837,4,163.99,2,163.991,1,4,0)
SEVENTY-FIFTH PERCENTILE
"BLD",4837,4,163.99,222)
y^n^p^^^^n^^n
"BLD",4837,4,163.99,224)

"BLD",4837,4,"APDD",162,162.03)

"BLD",4837,4,"APDD",162,162.03,47)

"BLD",4837,4,"APDD",162,162.03,48)

"BLD",4837,4,"APDD",162,162.03,49)

"BLD",4837,4,"APDD",162,162.03,50)

"BLD",4837,4,"APDD",162,162.03,51)

"BLD",4837,4,"APDD",162,162.07)

"BLD",4837,4,"APDD",162,162.08)

"BLD",4837,4,"APDD",162.1,162.1)

"BLD",4837,4,"APDD",162.1,162.1,13)

"BLD",4837,4,"APDD",162.1,162.11)

"BLD",4837,4,"APDD",162.1,162.11,36)

"BLD",4837,4,"APDD",162.1,162.14)

"BLD",4837,4,"APDD",162.1,162.15)

"BLD",4837,4,"APDD",162.5,162.5)

"BLD",4837,4,"APDD",162.5,162.5,8)

"BLD",4837,4,"APDD",162.5,162.5,24.5)

"BLD",4837,4,"APDD",162.5,162.5,54)

"BLD",4837,4,"APDD",162.5,162.5,55)

"BLD",4837,4,"APDD",162.5,162.5,56)

"BLD",4837,4,"APDD",162.5,162.5,57)

"BLD",4837,4,"APDD",162.5,162.558)

"BLD",4837,4,"APDD",162.5,162.559)

"BLD",4837,4,"APDD",162.7,162.7)

"BLD",4837,4,"APDD",162.7,162.7,32)

"BLD",4837,4,"APDD",163.99,163.991)

"BLD",4837,4,"APDD",163.99,163.991,4)

"BLD",4837,4,"B",161.91,161.91)

"BLD",4837,4,"B",161.92,161.92)

"BLD",4837,4,"B",161.93,161.93)

"BLD",4837,4,"B",162,162)

"BLD",4837,4,"B",162.1,162.1)

"BLD",4837,4,"B",162.5,162.5)

"BLD",4837,4,"B",162.7,162.7)

"BLD",4837,4,"B",163.5,163.5)

"BLD",4837,4,"B",163.7,163.7)

"BLD",4837,4,"B",163.99,163.99)

"BLD",4837,"INI")
PR^FBXIP61
"BLD",4837,"KRN",0)
^9.67PA^8989.52^19
"BLD",4837,"KRN",.4,0)
.4
"BLD",4837,"KRN",.4,"NM",0)
^9.68A^^
"BLD",4837,"KRN",.401,0)
.401
"BLD",4837,"KRN",.402,0)
.402
"BLD",4837,"KRN",.402,"NM",0)
^9.68A^6^6
"BLD",4837,"KRN",.402,"NM",1,0)
FB UNAUTHORIZED ENTER    FILE #162.7^162.7^0
"BLD",4837,"KRN",.402,"NM",2,0)
FB UNAUTHORIZED EDIT    FILE #162.7^162.7^0
"BLD",4837,"KRN",.402,"NM",3,0)
FBCH ENTER PAYMENT    FILE #162.5^162.5^0
"BLD",4837,"KRN",.402,"NM",4,0)
FB ADD RX    FILE #162.1^162.1^0
"BLD",4837,"KRN",.402,"NM",5,0)
FBCH EDIT PAYMENT    FILE #162.5^162.5^0
"BLD",4837,"KRN",.402,"NM",6,0)
FBNH EDIT PAYMENT    FILE #162.5^162.5^0
"BLD",4837,"KRN",.402,"NM","B","FB ADD RX    FILE #162.1",4)

"BLD",4837,"KRN",.402,"NM","B","FB UNAUTHORIZED EDIT    FILE #162.7",2)

"BLD",4837,"KRN",.402,"NM","B","FB UNAUTHORIZED ENTER    FILE #162.7",1)

"BLD",4837,"KRN",.402,"NM","B","FBCH EDIT PAYMENT    FILE #162.5",5)

"BLD",4837,"KRN",.402,"NM","B","FBCH ENTER PAYMENT    FILE #162.5",3)

"BLD",4837,"KRN",.402,"NM","B","FBNH EDIT PAYMENT    FILE #162.5",6)

"BLD",4837,"KRN",.403,0)
.403
"BLD",4837,"KRN",.5,0)
.5
"BLD",4837,"KRN",.84,0)
.84
"BLD",4837,"KRN",3.6,0)
3.6
"BLD",4837,"KRN",3.8,0)
3.8
"BLD",4837,"KRN",9.2,0)
9.2
"BLD",4837,"KRN",9.8,0)
9.8
"BLD",4837,"KRN",9.8,"NM",0)
^9.68A^71^65
"BLD",4837,"KRN",9.8,"NM",1,0)
FBUTL1^^0^B14646555
"BLD",4837,"KRN",9.8,"NM",2,0)
FBUTL2^^0^B53327965
"BLD",4837,"KRN",9.8,"NM",3,0)
FBUTL3^^0^B3110311
"BLD",4837,"KRN",9.8,"NM",4,0)
FBUTL4^^0^B23579110
"BLD",4837,"KRN",9.8,"NM",5,0)
FBUCEN^^0^B26051535
"BLD",4837,"KRN",9.8,"NM",6,0)
FBUTL5^^0^B18887718
"BLD",4837,"KRN",9.8,"NM",7,0)
FBAACO^^0^B31788257
"BLD",4837,"KRN",9.8,"NM",8,0)
FBAACO2^^0^B12823251
"BLD",4837,"KRN",9.8,"NM",9,0)
FBAAFA^^0^B10837053
"BLD",4837,"KRN",9.8,"NM",10,0)
FBAAPET^^0^B33464708
"BLD",4837,"KRN",9.8,"NM",11,0)
FBAAFR^^0^B2615408
"BLD",4837,"KRN",9.8,"NM",12,0)
FBAAPET1^^0^B9459481
"BLD",4837,"KRN",9.8,"NM",13,0)
FBAACP^^0^B33435662
"BLD",4837,"KRN",9.8,"NM",14,0)
FBAACP1^^0^B6734409
"BLD",4837,"KRN",9.8,"NM",15,0)
FBAAMP^^0^B63717451
"BLD",4837,"KRN",9.8,"NM",16,0)
FBAAMP1^^0^B7229193
"BLD",4837,"KRN",9.8,"NM",17,0)
FBAACO3^^0^B47823377
"BLD",4837,"KRN",9.8,"NM",18,0)
FBCHPET^^0^B31141487
"BLD",4837,"KRN",9.8,"NM",19,0)
FBCHEP^^0^B31293930
"BLD",4837,"KRN",9.8,"NM",20,0)
FBCHFA^^0^B10497327
"BLD",4837,"KRN",9.8,"NM",21,0)
FBCHFR^^0^B2637264
"BLD",4837,"KRN",9.8,"NM",22,0)
FBCHEP1^^0^B11099974
"BLD",4837,"KRN",9.8,"NM",23,0)
FBCHRR^^0^B9913941
"BLD",4837,"KRN",9.8,"NM",24,0)
FBCHEAP^^0^B16379485
"BLD",4837,"KRN",9.8,"NM",25,0)
FBNHEP1^^0^B9319871
"BLD",4837,"KRN",9.8,"NM",26,0)
FBNHEDPA^^0^B9054785
"BLD",4837,"KRN",9.8,"NM",27,0)
FBAAPIE^^0^B21766218
"BLD",4837,"KRN",9.8,"NM",28,0)
FBAAPP^^0^B26126548
"BLD",4837,"KRN",9.8,"NM",29,0)
FBAAPP0^^0^B4545088
"BLD",4837,"KRN",9.8,"NM",30,0)
FBRXFA^^0^B10460181
"BLD",4837,"KRN",9.8,"NM",31,0)
FBRXFR^^0^B2618713
"BLD",4837,"KRN",9.8,"NM",32,0)
FBAACIE^^0^B15364626
"BLD",4837,"KRN",9.8,"NM",33,0)
FBAAEPI^^0^B14319298
"BLD",4837,"KRN",9.8,"NM",34,0)
FBAAEPI1^^0^B6187955
"BLD",4837,"KRN",9.8,"NM",35,0)
FBAARR^^0^B32814537
"BLD",4837,"KRN",9.8,"NM",36,0)
FBAARR1^^0^B21041788
"BLD",4837,"KRN",9.8,"NM",37,0)
FBAACO0^^0^B33451289
"BLD",4837,"KRN",9.8,"NM",38,0)
FBAAPIN^^0^B23332246
"BLD",4837,"KRN",9.8,"NM",39,0)
FBCHVH^^0^B17108073
"BLD",4837,"KRN",9.8,"NM",40,0)
FBAACCB^^0^B27997398
"BLD",4837,"KRN",9.8,"NM",41,0)
FBAAVS^^0^B14761630
"BLD",4837,"KRN",9.8,"NM",42,0)
FBAAPPH^^0^B17311518
"BLD",4837,"KRN",9.8,"NM",43,0)
FBCKDIS^^0^B45506524
"BLD",4837,"KRN",9.8,"NM",44,0)
FBAACO1^^0^B27562566
"BLD",4837,"KRN",9.8,"NM",45,0)
FBAAFED^^0^B27873786
"BLD",4837,"KRN",9.8,"NM",46,0)
FBCHFED^^0^B11304560
"BLD",4837,"KRN",9.8,"NM",47,0)
FBRXFED^^0^B16142590
"BLD",4837,"KRN",9.8,"NM",48,0)
FBFPAR^^0^B18873258
"BLD",4837,"KRN",9.8,"NM",49,0)
FBFPCI^^0^B14521265
"BLD",4837,"KRN",9.8,"NM",50,0)
FBAACCB1^^0^B22926738
"BLD",4837,"KRN",9.8,"NM",56,0)
FBFHLL^^0^B13383117
"BLD",4837,"KRN",9.8,"NM",58,0)
FBPAID^^0^B26862172
"BLD",4837,"KRN",9.8,"NM",59,0)
FBAASCB^^0^B23905595
"BLD",4837,"KRN",9.8,"NM",60,0)
FBAAPH^^0^B28099424
"BLD",4837,"KRN",9.8,"NM",61,0)
FBAAVLU^^0^B17786372
"BLD",4837,"KRN",9.8,"NM",62,0)
FBFHLD3^^0^B16935419
"BLD",4837,"KRN",9.8,"NM",63,0)
FBFHLD5^^0^B15629441
"BLD",4837,"KRN",9.8,"NM",64,0)
FBFHLD9^^0^B9980518
"BLD",4837,"KRN",9.8,"NM",65,0)
FBFHLS^^0^B56586501
"BLD",4837,"KRN",9.8,"NM",66,0)
FBFHLX^^0^B54858004
"BLD",4837,"KRN",9.8,"NM",67,0)
FBFHLX1^^0^B29142920
"BLD",4837,"KRN",9.8,"NM",68,0)
FBFHLS1^^0^B3570826
"BLD",4837,"KRN",9.8,"NM",69,0)
FBFHLU^^0^B2790286
"BLD",4837,"KRN",9.8,"NM",70,0)
FBFPTR^^0^B32914521
"BLD",4837,"KRN",9.8,"NM",71,0)
FBFHLP^^0^B14125531
"BLD",4837,"KRN",9.8,"NM","B","FBAACCB",40)

"BLD",4837,"KRN",9.8,"NM","B","FBAACCB1",50)

"BLD",4837,"KRN",9.8,"NM","B","FBAACIE",32)

"BLD",4837,"KRN",9.8,"NM","B","FBAACO",7)

"BLD",4837,"KRN",9.8,"NM","B","FBAACO0",37)

"BLD",4837,"KRN",9.8,"NM","B","FBAACO1",44)

"BLD",4837,"KRN",9.8,"NM","B","FBAACO2",8)

"BLD",4837,"KRN",9.8,"NM","B","FBAACO3",17)

"BLD",4837,"KRN",9.8,"NM","B","FBAACP",13)

"BLD",4837,"KRN",9.8,"NM","B","FBAACP1",14)

"BLD",4837,"KRN",9.8,"NM","B","FBAAEPI",33)

"BLD",4837,"KRN",9.8,"NM","B","FBAAEPI1",34)

"BLD",4837,"KRN",9.8,"NM","B","FBAAFA",9)

"BLD",4837,"KRN",9.8,"NM","B","FBAAFED",45)

"BLD",4837,"KRN",9.8,"NM","B","FBAAFR",11)

"BLD",4837,"KRN",9.8,"NM","B","FBAAMP",15)

"BLD",4837,"KRN",9.8,"NM","B","FBAAMP1",16)

"BLD",4837,"KRN",9.8,"NM","B","FBAAPET",10)

"BLD",4837,"KRN",9.8,"NM","B","FBAAPET1",12)

"BLD",4837,"KRN",9.8,"NM","B","FBAAPH",60)

"BLD",4837,"KRN",9.8,"NM","B","FBAAPIE",27)

"BLD",4837,"KRN",9.8,"NM","B","FBAAPIN",38)

"BLD",4837,"KRN",9.8,"NM","B","FBAAPP",28)

"BLD",4837,"KRN",9.8,"NM","B","FBAAPP0",29)

"BLD",4837,"KRN",9.8,"NM","B","FBAAPPH",42)

"BLD",4837,"KRN",9.8,"NM","B","FBAARR",35)

"BLD",4837,"KRN",9.8,"NM","B","FBAARR1",36)

"BLD",4837,"KRN",9.8,"NM","B","FBAASCB",59)

"BLD",4837,"KRN",9.8,"NM","B","FBAAVLU",61)

"BLD",4837,"KRN",9.8,"NM","B","FBAAVS",41)

"BLD",4837,"KRN",9.8,"NM","B","FBCHEAP",24)

"BLD",4837,"KRN",9.8,"NM","B","FBCHEP",19)

"BLD",4837,"KRN",9.8,"NM","B","FBCHEP1",22)

"BLD",4837,"KRN",9.8,"NM","B","FBCHFA",20)

"BLD",4837,"KRN",9.8,"NM","B","FBCHFED",46)

"BLD",4837,"KRN",9.8,"NM","B","FBCHFR",21)

"BLD",4837,"KRN",9.8,"NM","B","FBCHPET",18)

"BLD",4837,"KRN",9.8,"NM","B","FBCHRR",23)

"BLD",4837,"KRN",9.8,"NM","B","FBCHVH",39)

"BLD",4837,"KRN",9.8,"NM","B","FBCKDIS",43)

"BLD",4837,"KRN",9.8,"NM","B","FBFHLD3",62)

"BLD",4837,"KRN",9.8,"NM","B","FBFHLD5",63)

"BLD",4837,"KRN",9.8,"NM","B","FBFHLD9",64)

"BLD",4837,"KRN",9.8,"NM","B","FBFHLL",56)

"BLD",4837,"KRN",9.8,"NM","B","FBFHLP",71)

"BLD",4837,"KRN",9.8,"NM","B","FBFHLS",65)

"BLD",4837,"KRN",9.8,"NM","B","FBFHLS1",68)

"BLD",4837,"KRN",9.8,"NM","B","FBFHLU",69)

"BLD",4837,"KRN",9.8,"NM","B","FBFHLX",66)

"BLD",4837,"KRN",9.8,"NM","B","FBFHLX1",67)

"BLD",4837,"KRN",9.8,"NM","B","FBFPAR",48)

"BLD",4837,"KRN",9.8,"NM","B","FBFPCI",49)

"BLD",4837,"KRN",9.8,"NM","B","FBFPTR",70)

"BLD",4837,"KRN",9.8,"NM","B","FBNHEDPA",26)

"BLD",4837,"KRN",9.8,"NM","B","FBNHEP1",25)

"BLD",4837,"KRN",9.8,"NM","B","FBPAID",58)

"BLD",4837,"KRN",9.8,"NM","B","FBRXFA",30)

"BLD",4837,"KRN",9.8,"NM","B","FBRXFED",47)

"BLD",4837,"KRN",9.8,"NM","B","FBRXFR",31)

"BLD",4837,"KRN",9.8,"NM","B","FBUCEN",5)

"BLD",4837,"KRN",9.8,"NM","B","FBUTL1",1)

"BLD",4837,"KRN",9.8,"NM","B","FBUTL2",2)

"BLD",4837,"KRN",9.8,"NM","B","FBUTL3",3)

"BLD",4837,"KRN",9.8,"NM","B","FBUTL4",4)

"BLD",4837,"KRN",9.8,"NM","B","FBUTL5",6)

"BLD",4837,"KRN",19,0)
19
"BLD",4837,"KRN",19,"NM",0)
^9.68A^15^15
"BLD",4837,"KRN",19,"NM",1,0)
FBAA FPPS EDIT INVOICE^^0
"BLD",4837,"KRN",19,"NM",2,0)
FBCH FPPS EDIT INVOICE^^0
"BLD",4837,"KRN",19,"NM",3,0)
FBRX FPPS EDIT INVOICE^^0
"BLD",4837,"KRN",19,"NM",4,0)
FB FPPS UPDATE MENU^^0
"BLD",4837,"KRN",19,"NM",5,0)
FBAA SUPERVISOR OPTIONS^^2
"BLD",4837,"KRN",19,"NM",6,0)
FB FPPS AUDIT REPORT^^0
"BLD",4837,"KRN",19,"NM",7,0)
FB FPPS CLAIM INQ^^0
"BLD",4837,"KRN",19,"NM",8,0)
FBAA OUTPUTS MENU^^2
"BLD",4837,"KRN",19,"NM",9,0)
FBAA PHARMACY MAIN MENU^^2
"BLD",4837,"KRN",19,"NM",10,0)
FBCH OUTPUT MENU^^2
"BLD",4837,"KRN",19,"NM",11,0)
FBCNH OUTPUTS MAIN MENU^^2
"BLD",4837,"KRN",19,"NM",12,0)
FBUC OUTPUTS^^2
"BLD",4837,"KRN",19,"NM",13,0)
FB FPPS TRANSMIT^^0
"BLD",4837,"KRN",19,"NM",14,0)
FB FPPS TRANSMIT REPORT^^0
"BLD",4837,"KRN",19,"NM",15,0)
FB FPPS PURGE^^0
"BLD",4837,"KRN",19,"NM","B","FB FPPS AUDIT REPORT",6)

"BLD",4837,"KRN",19,"NM","B","FB FPPS CLAIM INQ",7)

"BLD",4837,"KRN",19,"NM","B","FB FPPS PURGE",15)

"BLD",4837,"KRN",19,"NM","B","FB FPPS TRANSMIT",13)

"BLD",4837,"KRN",19,"NM","B","FB FPPS TRANSMIT REPORT",14)

"BLD",4837,"KRN",19,"NM","B","FB FPPS UPDATE MENU",4)

"BLD",4837,"KRN",19,"NM","B","FBAA FPPS EDIT INVOICE",1)

"BLD",4837,"KRN",19,"NM","B","FBAA OUTPUTS MENU",8)

"BLD",4837,"KRN",19,"NM","B","FBAA PHARMACY MAIN MENU",9)

"BLD",4837,"KRN",19,"NM","B","FBAA SUPERVISOR OPTIONS",5)

"BLD",4837,"KRN",19,"NM","B","FBCH FPPS EDIT INVOICE",2)

"BLD",4837,"KRN",19,"NM","B","FBCH OUTPUT MENU",10)

"BLD",4837,"KRN",19,"NM","B","FBCNH OUTPUTS MAIN MENU",11)

"BLD",4837,"KRN",19,"NM","B","FBRX FPPS EDIT INVOICE",3)

"BLD",4837,"KRN",19,"NM","B","FBUC OUTPUTS",12)

"BLD",4837,"KRN",19.1,0)
19.1
"BLD",4837,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",4837,"KRN",101,0)
101
"BLD",4837,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",4837,"KRN",101,"NM",1,0)
FB FEE TO FPPS EVENT^^0
"BLD",4837,"KRN",101,"NM",2,0)
FB FEE TO FPPS SUBSCRIBER^^0
"BLD",4837,"KRN",101,"NM","B","FB FEE TO FPPS EVENT",1)

"BLD",4837,"KRN",101,"NM","B","FB FEE TO FPPS SUBSCRIBER",2)

"BLD",4837,"KRN",409.61,0)
409.61
"BLD",4837,"KRN",771,0)
771
"BLD",4837,"KRN",771,"NM",0)
^9.68A^2^2
"BLD",4837,"KRN",771,"NM",1,0)
FB CPE FPPS^^0
"BLD",4837,"KRN",771,"NM",2,0)
FB FEE-FPPS^^0
"BLD",4837,"KRN",771,"NM","B","FB CPE FPPS",1)

"BLD",4837,"KRN",771,"NM","B","FB FEE-FPPS",2)

"BLD",4837,"KRN",870,0)
870
"BLD",4837,"KRN",870,"NM",0)
^9.68A^1^1
"BLD",4837,"KRN",870,"NM",1,0)
FBFEE-FPPS^^0
"BLD",4837,"KRN",870,"NM","B","FBFEE-FPPS",1)

"BLD",4837,"KRN",8989.51,0)
8989.51
"BLD",4837,"KRN",8989.52,0)
8989.52
"BLD",4837,"KRN",8994,0)
8994
"BLD",4837,"KRN","B",.4,.4)

"BLD",4837,"KRN","B",.401,.401)

"BLD",4837,"KRN","B",.402,.402)

"BLD",4837,"KRN","B",.403,.403)

"BLD",4837,"KRN","B",.5,.5)

"BLD",4837,"KRN","B",.84,.84)

"BLD",4837,"KRN","B",3.6,3.6)

"BLD",4837,"KRN","B",3.8,3.8)

"BLD",4837,"KRN","B",9.2,9.2)

"BLD",4837,"KRN","B",9.8,9.8)

"BLD",4837,"KRN","B",19,19)

"BLD",4837,"KRN","B",19.1,19.1)

"BLD",4837,"KRN","B",101,101)

"BLD",4837,"KRN","B",409.61,409.61)

"BLD",4837,"KRN","B",771,771)

"BLD",4837,"KRN","B",870,870)

"BLD",4837,"KRN","B",8989.51,8989.51)

"BLD",4837,"KRN","B",8989.52,8989.52)

"BLD",4837,"KRN","B",8994,8994)

"BLD",4837,"QUES",0)
^9.62^^
"BLD",4837,"REQB",0)
^9.611^5^4
"BLD",4837,"REQB",2,0)
FB*3.5*12^2
"BLD",4837,"REQB",3,0)
FB*3.5*32^2
"BLD",4837,"REQB",4,0)
FB*3.5*55^2
"BLD",4837,"REQB",5,0)
FB*3.5*57^2
"BLD",4837,"REQB","B","FB*3.5*12",2)

"BLD",4837,"REQB","B","FB*3.5*32",3)

"BLD",4837,"REQB","B","FB*3.5*55",4)

"BLD",4837,"REQB","B","FB*3.5*57",5)

"DATA",161.91,1,0)
4^4
"DATA",161.91,1,1,0)
^161.911D^1^1
"DATA",161.91,1,1,1,0)
3030601^1^1
"DATA",161.91,1,2,0)
^161.912D^1^1
"DATA",161.91,1,2,1,0)
3030601
"DATA",161.91,1,2,1,"D",0)
^^2^2^3030915^
"DATA",161.91,1,2,1,"D",1,0)
The procedure code is inconsistent with the modifier used or a required
"DATA",161.91,1,2,1,"D",2,0)
modifier is missing.
"DATA",161.91,1,4,0)
^161.914^2^2^3030915^^^
"DATA",161.91,1,4,1,0)
The procedure code is inconsistent with the modifier used or a required
"DATA",161.91,1,4,2,0)
modifier is missing.
"DATA",161.91,2,0)
1
"DATA",161.91,2,1,0)
^161.911D^1^1
"DATA",161.91,2,1,1,0)
3030601^1^0
"DATA",161.91,2,2,0)
^161.912D^1^1
"DATA",161.91,2,2,1,0)
3030601
"DATA",161.91,2,2,1,"D",0)
^^1^1^3030616^
"DATA",161.91,2,2,1,"D",1,0)
Deductible Amount.
"DATA",161.91,3,0)
2
"DATA",161.91,3,1,0)
^161.911D^1^1
"DATA",161.91,3,1,1,0)
3030601^1^0
"DATA",161.91,3,2,0)
^161.912D^1^1
"DATA",161.91,3,2,1,0)
3030601
"DATA",161.91,3,2,1,"D",0)
^^1^1^3030616^
"DATA",161.91,3,2,1,"D",1,0)
Coinsurance Amount.
"DATA",161.91,4,0)
3
"DATA",161.91,4,1,0)
^161.911D^1^1
"DATA",161.91,4,1,1,0)
3030601^1^0
"DATA",161.91,4,2,0)
^161.912D^1^1
"DATA",161.91,4,2,1,0)
3030601
"DATA",161.91,4,2,1,"D",0)
^^1^1^3030616^
"DATA",161.91,4,2,1,"D",1,0)
Co-payment Amount.
"DATA",161.91,5,0)
5
"DATA",161.91,5,1,0)
^161.911D^1^1
"DATA",161.91,5,1,1,0)
3030601^1^0
"DATA",161.91,5,2,0)
^161.912D^1^1
"DATA",161.91,5,2,1,0)
3030601
"DATA",161.91,5,2,1,"D",0)
^^1^1^3030616^
"DATA",161.91,5,2,1,"D",1,0)
The procedure code/bill type is inconsistent with the place of service.
"DATA",161.91,6,0)
6^4
"DATA",161.91,6,1,0)
^161.911D^1^1
"DATA",161.91,6,1,1,0)
3030601^1^1
"DATA",161.91,6,2,0)
^161.912D^1^1
"DATA",161.91,6,2,1,0)
3030601
"DATA",161.91,6,2,1,"D",0)
^^1^1^3030616^
"DATA",161.91,6,2,1,"D",1,0)
The procedure/revenue code is inconsistent with the patient's age.
"DATA",161.91,6,4,0)
^^1^1^3030616^
"DATA",161.91,6,4,1,0)
The procedure/revenue code is inconsistent with the patient's age.
"DATA",161.91,7,0)
7^4
"DATA",161.91,7,1,0)
^161.911D^1^1
"DATA",161.91,7,1,1,0)
3030601^1^1
"DATA",161.91,7,2,0)
^161.912D^1^1
"DATA",161.91,7,2,1,0)
3030601
"DATA",161.91,7,2,1,"D",0)
^^1^1^3030616^
"DATA",161.91,7,2,1,"D",1,0)
The procedure/revenue code is inconsistent with the patient's gender.
"DATA",161.91,7,4,0)
^^1^1^3030616^
"DATA",161.91,7,4,1,0)
The procedure/revenue code is inconsistent with the patient's gender.
"DATA",161.91,8,0)
28
"DATA",161.91,8,1,0)
^161.911D^1^1
"DATA",161.91,8,1,1,0)
3030601^0^0
"DATA",161.91,8,2,0)
^161.912D^1^1
"DATA",161.91,8,2,1,0)
3030601
"DATA",161.91,8,2,1,"D",0)
^^1^1^3030616^
"DATA",161.91,8,2,1,"D",1,0)
The procedure/revenue code is inconsistent with the patient's gender.
"DATA",161.91,9,0)
29^4
"DATA",161.91,9,1,0)
^161.911D^1^1
"DATA",161.91,9,1,1,0)
3030601^1^1
"DATA",161.91,9,2,0)
^161.912D^1^1
"DATA",161.91,9,2,1,0)
3030601
"DATA",161.91,9,2,1,"D",0)
^^1^1^3030616^
"DATA",161.91,9,2,1,"D",1,0)
The time limit for filing has expired.
"DATA",161.91,9,4,0)
^^1^1^3030616^
"DATA",161.91,9,4,1,0)
The time limit for filing has expired.
"DATA",161.91,10,0)
B13^5
"DATA",161.91,10,1,0)
^161.911D^1^1
"DATA",161.91,10,1,1,0)
3030601^1^1
"DATA",161.91,10,2,0)
^161.912D^1^1
"DATA",161.91,10,2,1,0)
3030601
"DATA",161.91,10,2,1,"D",0)
^161.9121^2^2^3030718^^^
"DATA",161.91,10,2,1,"D",1,0)
Previously paid. Payment for this claim/service may have been provided in 
"DATA",161.91,10,2,1,"D",2,0)
a previous payment.
"DATA",161.91,11,0)
125
"DATA",161.91,11,1,0)
^161.911D^1^1
"DATA",161.91,11,1,1,0)
3030601^1^0
"DATA",161.91,11,2,0)
^161.912D^1^1
"DATA",161.91,11,2,1,0)
3030601
"DATA",161.91,11,2,1,"D",0)
^161.9121^3^3^3030618^^
"DATA",161.91,11,2,1,"D",1,0)
Payment adjusted due to a submission/billing error(s). Additional 
"DATA",161.91,11,2,1,"D",2,0)
information is supplied using the remittance advice remarks codes 
"DATA",161.91,11,2,1,"D",3,0)
whenever appropriate.
"DATA",161.91,12,0)
148^4
"DATA",161.91,12,1,0)
^161.911D^1^1
"DATA",161.91,12,1,1,0)
3030601^1^1
"DATA",161.91,12,2,0)
^161.912D^1^1
"DATA",161.91,12,2,1,0)
3030601
"DATA",161.91,12,2,1,"D",0)
^^2^2^3030618^
"DATA",161.91,12,2,1,"D",1,0)
Claim/service rejected at this time because information from another 
"DATA",161.91,12,2,1,"D",2,0)
provider was not provided or was insufficient/incomplete.
"DATA",161.91,12,4,0)
^^2^2^3030618^
"DATA",161.91,12,4,1,0)
Claim/service rejected at this time because information from another 
"DATA",161.91,12,4,2,0)
provider was not provided or was insufficient/incomplete.
"DATA",161.91,13,0)
8^4
"DATA",161.91,13,1,0)
^161.911D^1^1
"DATA",161.91,13,1,1,0)
3030601^1^1
"DATA",161.91,13,2,0)
^161.912D^1^1
"DATA",161.91,13,2,1,0)
3030601
"DATA",161.91,13,2,1,"D",0)
^^2^2^3030717^
"DATA",161.91,13,2,1,"D",1,0)
The procedure code is inconsistent with the provider type/specialty 
"DATA",161.91,13,2,1,"D",2,0)
(taxonomy).
"DATA",161.91,13,4,0)
^^2^2^3030717^
"DATA",161.91,13,4,1,0)
The procedure code is inconsistent with the provider type/specialty 
"DATA",161.91,13,4,2,0)
(taxonomy).
"DATA",161.91,14,0)
13^4
"DATA",161.91,14,1,0)
^161.911D^1^1
"DATA",161.91,14,1,1,0)
3030601^1^1
"DATA",161.91,14,2,0)
^161.912D^1^1
"DATA",161.91,14,2,1,0)
3030601
"DATA",161.91,14,2,1,"D",0)
^161.9121^1^1^3030717^^
"DATA",161.91,14,2,1,"D",1,0)
The date of death precedes the date of service.
"DATA",161.91,14,4,0)
^161.914^1^1^3030717^^
"DATA",161.91,14,4,1,0)
The date of death precedes the date of service.
"DATA",161.91,15,0)
16^4
"DATA",161.91,15,1,0)
^161.911D^1^1
"DATA",161.91,15,1,1,0)
3030601^1^1
"DATA",161.91,15,2,0)
^161.912D^1^1
"DATA",161.91,15,2,1,0)
3030601
"DATA",161.91,15,2,1,"D",0)
^^4^4^3030718^
"DATA",161.91,15,2,1,"D",1,0)
Claim/service lacks information which is needed for adjudication. Addi
"DATA",161.91,15,2,1,"D",2,0)
tional information is supplied using remittance advice remarks codes 
"DATA",161.91,15,2,1,"D",3,0)
whenever ap
"DATA",161.91,15,2,1,"D",4,0)
propriate.
"DATA",161.91,15,4,0)
^161.914^3^3^3030718^^
"DATA",161.91,15,4,1,0)
Claim/service lacks information which is needed for adjudication. Addi
"DATA",161.91,15,4,2,0)
tional information is supplied using remittance advice remarks codes 
"DATA",161.91,15,4,3,0)
whenever appropriate.
"DATA",161.91,16,0)
18^4
"DATA",161.91,16,1,0)
^161.911D^1^1
"DATA",161.91,16,1,1,0)
3030601^1^1
"DATA",161.91,16,2,0)
^161.912D^1^1
"DATA",161.91,16,2,1,0)
3030601
"DATA",161.91,16,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,16,2,1,"D",1,0)
Duplicate claim/service.
"DATA",161.91,16,4,0)
^^1^1^3030718^
"DATA",161.91,16,4,1,0)
Duplicate claim/service.
"DATA",161.91,17,0)
19^4
"DATA",161.91,17,1,0)
^161.911D^1^1
"DATA",161.91,17,1,1,0)
3030601^1^1
"DATA",161.91,17,2,0)
^161.912D^1^1
"DATA",161.91,17,2,1,0)
3030601
"DATA",161.91,17,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,17,2,1,"D",1,0)
Claim denied because this is a work-related injury/illness and thus the 
"DATA",161.91,17,2,1,"D",2,0)
liability of the Worker's Compensation Carrier.
"DATA",161.91,17,4,0)
^^2^2^3030718^
"DATA",161.91,17,4,1,0)
Claim denied because this is a work-related injury/illness and thus the 
"DATA",161.91,17,4,2,0)
liability of the Worker's Compensation Carrier.
"DATA",161.91,18,0)
20^4
"DATA",161.91,18,1,0)
^161.911D^1^1
"DATA",161.91,18,1,1,0)
3030601^1^1
"DATA",161.91,18,2,0)
^161.912D^1^1
"DATA",161.91,18,2,1,0)
3030601
"DATA",161.91,18,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,18,2,1,"D",1,0)
Claim denied because this injury/illness is covered by the liability 
"DATA",161.91,18,2,1,"D",2,0)
carrier.
"DATA",161.91,18,4,0)
^^2^2^3030718^
"DATA",161.91,18,4,1,0)
Claim denied because this injury/illness is covered by the liability 
"DATA",161.91,18,4,2,0)
carrier.
"DATA",161.91,19,0)
26^4
"DATA",161.91,19,1,0)
^161.911D^1^1
"DATA",161.91,19,1,1,0)
3030601^1^1
"DATA",161.91,19,2,0)
^161.912D^1^1
"DATA",161.91,19,2,1,0)
3030601
"DATA",161.91,19,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,19,2,1,"D",1,0)
Expenses incurred prior to coverage.
"DATA",161.91,19,4,0)
^^1^1^3030718^
"DATA",161.91,19,4,1,0)
Expenses incurred prior to coverage.
"DATA",161.91,20,0)
30^4
"DATA",161.91,20,1,0)
^161.911D^1^1
"DATA",161.91,20,1,1,0)
3030601^1^1
"DATA",161.91,20,2,0)
^161.912D^1^1
"DATA",161.91,20,2,1,0)
3030601
"DATA",161.91,20,2,1,"D",0)
^161.9121^2^2^3030718^^
"DATA",161.91,20,2,1,"D",1,0)
Payment adjusted because the patient has not met the required 
"DATA",161.91,20,2,1,"D",2,0)
eligibility, spend down, waiting, or residency requirements.
"DATA",161.91,20,4,0)
^161.914^2^2^3030718^^
"DATA",161.91,20,4,1,0)
Payment adjusted because the patient has not met the required 
"DATA",161.91,20,4,2,0)
eligibility, spend down, waiting, or residency requirements.
"DATA",161.91,21,0)
31^4
"DATA",161.91,21,1,0)
^161.911D^1^1
"DATA",161.91,21,1,1,0)
3030601^1^1
"DATA",161.91,21,2,0)
^161.912D^1^1
"DATA",161.91,21,2,1,0)
3030601
"DATA",161.91,21,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,21,2,1,"D",1,0)
Claim denied as patient cannot be identified as our insured.
"DATA",161.91,21,4,0)
^^1^1^3030718^
"DATA",161.91,21,4,1,0)
Claim denied as patient cannot be identified as our insured.
"DATA",161.91,22,0)
34^4
"DATA",161.91,22,1,0)
^161.911D^1^1
"DATA",161.91,22,1,1,0)
3030601^1^1
"DATA",161.91,22,2,0)
^161.912D^1^1
"DATA",161.91,22,2,1,0)
3030601
"DATA",161.91,22,2,1,"D",0)
^161.9121^1^1^3030718^^
"DATA",161.91,22,2,1,"D",1,0)
Claim denied. Insured has no coverage for newborns.
"DATA",161.91,22,4,0)
^161.914^1^1^3030718^^
"DATA",161.91,22,4,1,0)
Claim denied. Insured has no coverage for newborns.
"DATA",161.91,23,0)
35^4
"DATA",161.91,23,1,0)
^161.911D^1^1
"DATA",161.91,23,1,1,0)
3030601^1^1
"DATA",161.91,23,2,0)
^161.912D^1^1
"DATA",161.91,23,2,1,0)
3030601
"DATA",161.91,23,2,1,"D",0)
^161.9121^1^1^3030718^^
"DATA",161.91,23,2,1,"D",1,0)
Benefit maximum has been reached.
"DATA",161.91,23,4,0)
^161.914^1^1^3030718^^
"DATA",161.91,23,4,1,0)
Benefit maximum has been reached.
"DATA",161.91,24,0)
40^4
"DATA",161.91,24,1,0)
^161.911D^1^1
"DATA",161.91,24,1,1,0)
3030601^1^1
"DATA",161.91,24,2,0)
^161.912D^1^1
"DATA",161.91,24,2,1,0)
3030601
"DATA",161.91,24,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,24,2,1,"D",1,0)
Charges do not meet qualifications for emergent/urgent care.
"DATA",161.91,24,4,0)
^^1^1^3030718^
"DATA",161.91,24,4,1,0)
Charges do not meet qualifications for emergent/urgent care.
"DATA",161.91,25,0)
42^4
"DATA",161.91,25,1,0)
^161.911D^1^1
"DATA",161.91,25,1,1,0)
3030601^1^1
"DATA",161.91,25,2,0)
^161.912D^1^1
"DATA",161.91,25,2,1,0)
3030601
"DATA",161.91,25,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,25,2,1,"D",1,0)
Charges exceed our fee schedule or maximum allowable amount.
"DATA",161.91,25,4,0)
^^1^1^3030718^
"DATA",161.91,25,4,1,0)
Charges exceed our fee schedule or maximum allowable amount.
"DATA",161.91,26,0)
45^4
"DATA",161.91,26,1,0)
^161.911D^1^1
"DATA",161.91,26,1,1,0)
3030601^1^1
"DATA",161.91,26,2,0)
^161.912D^1^1
"DATA",161.91,26,2,1,0)
3030601
"DATA",161.91,26,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,26,2,1,"D",1,0)
Charges exceed your contracted/ legislated fee arrangement.
"DATA",161.91,26,4,0)
^^1^1^3030718^
"DATA",161.91,26,4,1,0)
Charges exceed your contracted/ legislated fee arrangement.
"DATA",161.91,27,0)
47^4
"DATA",161.91,27,1,0)
^161.911D^1^1
"DATA",161.91,27,1,1,0)
3030601^1^1
"DATA",161.91,27,2,0)
^161.912D^1^1
"DATA",161.91,27,2,1,0)
3030601
"DATA",161.91,27,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,27,2,1,"D",1,0)
This (these) diagnosis(es) is (are) not covered, missing, or are invalid.
"DATA",161.91,27,4,0)
^^1^1^3030718^
"DATA",161.91,27,4,1,0)
This (these) diagnosis(es) is (are) not covered, missing, or are invalid.
"DATA",161.91,28,0)
49^4
"DATA",161.91,28,1,0)
^161.911D^1^1
"DATA",161.91,28,1,1,0)
3030601^1^1
"DATA",161.91,28,2,0)
^161.912D^1^1
"DATA",161.91,28,2,1,0)
3030601
"DATA",161.91,28,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,28,2,1,"D",1,0)
These are non-covered services because this is a routine exam or 
"DATA",161.91,28,2,1,"D",2,0)
screening procedure done in conjunction with a routine exam.
"DATA",161.91,28,4,0)
^^2^2^3030718^
"DATA",161.91,28,4,1,0)
These are non-covered services because this is a routine exam or 
"DATA",161.91,28,4,2,0)
screening procedure done in conjunction with a routine exam.
"DATA",161.91,29,0)
50^4
"DATA",161.91,29,1,0)
^161.911D^1^1
"DATA",161.91,29,1,1,0)
3030601^1^1
"DATA",161.91,29,2,0)
^161.912D^1^1
"DATA",161.91,29,2,1,0)
3030601
"DATA",161.91,29,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,29,2,1,"D",1,0)
These are non-covered services because this is not deemed a `medical 
"DATA",161.91,29,2,1,"D",2,0)
necessity' by the payer.
"DATA",161.91,29,4,0)
^^2^2^3030718^
"DATA",161.91,29,4,1,0)
These are non-covered services because this is not deemed a `medical 
"DATA",161.91,29,4,2,0)
necessity' by the payer.
"DATA",161.91,30,0)
52^4
"DATA",161.91,30,1,0)
^161.911D^1^1
"DATA",161.91,30,1,1,0)
3030601^1^1
"DATA",161.91,30,2,0)
^161.912D^1^1
"DATA",161.91,30,2,1,0)
3030601
"DATA",161.91,30,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,30,2,1,"D",1,0)
The referring/prescribing/rendering provider is not eligible to 
"DATA",161.91,30,2,1,"D",2,0)
refer/prescribe/order/perform the service billed.
"DATA",161.91,30,4,0)
^^2^2^3030718^
"DATA",161.91,30,4,1,0)
The referring/prescribing/rendering provider is not eligible to 
"DATA",161.91,30,4,2,0)
refer/prescribe/order/perform the service billed.
"DATA",161.91,31,0)
54^4
"DATA",161.91,31,1,0)
^161.911D^1^1
"DATA",161.91,31,1,1,0)
3030601^1^1
"DATA",161.91,31,2,0)
^161.912D^1^1
"DATA",161.91,31,2,1,0)
3030601
"DATA",161.91,31,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,31,2,1,"D",1,0)
Multiple physicians/assistants are not covered in this case .
"DATA",161.91,31,4,0)
^^1^1^3030718^
"DATA",161.91,31,4,1,0)
Multiple physicians/assistants are not covered in this case .
"DATA",161.91,32,0)
55^4
"DATA",161.91,32,1,0)
^161.911D^1^1
"DATA",161.91,32,1,1,0)
3030601^1^1
"DATA",161.91,32,2,0)
^161.912D^1^1
"DATA",161.91,32,2,1,0)
3030601
"DATA",161.91,32,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,32,2,1,"D",1,0)
Claim/service denied because procedure/treatment is deemed 
"DATA",161.91,32,2,1,"D",2,0)
experimental/investigational by the payer.
"DATA",161.91,32,4,0)
^^2^2^3030718^
"DATA",161.91,32,4,1,0)
Claim/service denied because procedure/treatment is deemed 
"DATA",161.91,32,4,2,0)
experimental/investigational by the payer.
"DATA",161.91,33,0)
57^4
"DATA",161.91,33,1,0)
^161.911D^1^1
"DATA",161.91,33,1,1,0)
3030601^1^1
"DATA",161.91,33,2,0)
^161.912D^1^1
"DATA",161.91,33,2,1,0)
3030601
"DATA",161.91,33,2,1,"D",0)
^^3^3^3030718^
"DATA",161.91,33,2,1,"D",1,0)
Payment denied/reduced because the payer deems the information submitted 
"DATA",161.91,33,2,1,"D",2,0)
does not support this level of service, this many services, this length 
"DATA",161.91,33,2,1,"D",3,0)
of service, this dosage, or this day's supply.
"DATA",161.91,33,4,0)
^^3^3^3030718^
"DATA",161.91,33,4,1,0)
Payment denied/reduced because the payer deems the information submitted 
"DATA",161.91,33,4,2,0)
does not support this level of service, this many services, this length 
"DATA",161.91,33,4,3,0)
of service, this dosage, or this day's supply.
"DATA",161.91,34,0)
58^4
"DATA",161.91,34,1,0)
^161.911D^1^1
"DATA",161.91,34,1,1,0)
3030601^1^1
"DATA",161.91,34,2,0)
^161.912D^1^1
"DATA",161.91,34,2,1,0)
3030601
"DATA",161.91,34,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,34,2,1,"D",1,0)
Payment adjusted because treatment was deemed by the payer to have been 
"DATA",161.91,34,2,1,"D",2,0)
rendered in an inappropriate or invalid place of service.
"DATA",161.91,34,4,0)
^^2^2^3030718^
"DATA",161.91,34,4,1,0)
Payment adjusted because treatment was deemed by the payer to have been 
"DATA",161.91,34,4,2,0)
rendered in an inappropriate or invalid place of service.
"DATA",161.91,35,0)
59^4
"DATA",161.91,35,1,0)
^161.911D^1^1
"DATA",161.91,35,1,1,0)
3030601^1^1
"DATA",161.91,35,2,0)
^161.912D^1^1
"DATA",161.91,35,2,1,0)
3030601
"DATA",161.91,35,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,35,2,1,"D",1,0)
Charges are adjusted based on multiple surgery rules or concurrent 
"DATA",161.91,35,2,1,"D",2,0)
anesthesia rules.
"DATA",161.91,35,4,0)
^^2^2^3030718^
"DATA",161.91,35,4,1,0)
Charges are adjusted based on multiple surgery rules or concurrent 
"DATA",161.91,35,4,2,0)
anesthesia rules.
"DATA",161.91,36,0)
62^4
"DATA",161.91,36,1,0)
^161.911D^1^1
"DATA",161.91,36,1,1,0)
3030601^1^1
"DATA",161.91,36,2,0)
^161.912D^1^1
"DATA",161.91,36,2,1,0)
3030601
"DATA",161.91,36,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,36,2,1,"D",1,0)
Payment denied/reduced for absence of, or exceeded, 
"DATA",161.91,36,2,1,"D",2,0)
pre-certification/authorization.
"DATA",161.91,36,4,0)
^^2^2^3030718^
"DATA",161.91,36,4,1,0)
Payment denied/reduced for absence of, or exceeded, 
"DATA",161.91,36,4,2,0)
pre-certification/authorization.
"DATA",161.91,37,0)
66^4
"DATA",161.91,37,1,0)
^161.911D^1^1
"DATA",161.91,37,1,1,0)
3030601^1^1
"DATA",161.91,37,2,0)
^161.912D^1^1
"DATA",161.91,37,2,1,0)
3030601
"DATA",161.91,37,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,37,2,1,"D",1,0)
Blood Deductible.
"DATA",161.91,37,4,0)
^^1^1^3030718^
"DATA",161.91,37,4,1,0)
Blood Deductible.
"DATA",161.91,38,0)
85^4
"DATA",161.91,38,1,0)
^161.911D^1^1
"DATA",161.91,38,1,1,0)
3030601^1^1
"DATA",161.91,38,2,0)
^161.912D^1^1
"DATA",161.91,38,2,1,0)
3030601
"DATA",161.91,38,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,38,2,1,"D",1,0)
Interest amount.
"DATA",161.91,38,4,0)
^^1^1^3030718^
"DATA",161.91,38,4,1,0)
Interest amount.
"DATA",161.91,39,0)
88^4
"DATA",161.91,39,1,0)
^161.911D^1^1
"DATA",161.91,39,1,1,0)
3030601^1^1
"DATA",161.91,39,2,0)
^161.912D^1^1
"DATA",161.91,39,2,1,0)
3030601
"DATA",161.91,39,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,39,2,1,"D",1,0)
Adjustment amount represents collection against receivable created in 
"DATA",161.91,39,2,1,"D",2,0)
prior overpayment.
"DATA",161.91,39,4,0)
^^2^2^3030718^
"DATA",161.91,39,4,1,0)
Adjustment amount represents collection against receivable created in 
"DATA",161.91,39,4,2,0)
prior overpayment.
"DATA",161.91,40,0)
89^4
"DATA",161.91,40,1,0)
^161.911D^1^1
"DATA",161.91,40,1,1,0)
3030601^1^1
"DATA",161.91,40,2,0)
^161.912D^1^1
"DATA",161.91,40,2,1,0)
3030601
"DATA",161.91,40,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,40,2,1,"D",1,0)
Professional fees removed from charges.
"DATA",161.91,40,4,0)
^^1^1^3030718^
"DATA",161.91,40,4,1,0)
Professional fees removed from charges.
"DATA",161.91,41,0)
94^4
"DATA",161.91,41,1,0)
^161.911D^1^1
"DATA",161.91,41,1,1,0)
3030601^1^1
"DATA",161.91,41,2,0)
^161.912D^1^1
"DATA",161.91,41,2,1,0)
3030601
"DATA",161.91,41,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,41,2,1,"D",1,0)
Processed in Excess of charges.
"DATA",161.91,41,4,0)
^^1^1^3030718^
"DATA",161.91,41,4,1,0)
Processed in Excess of charges.
"DATA",161.91,42,0)
96^4
"DATA",161.91,42,1,0)
^161.911D^1^1
"DATA",161.91,42,1,1,0)
3030601^1^1
"DATA",161.91,42,2,0)
^161.912D^1^1
"DATA",161.91,42,2,1,0)
3030601
"DATA",161.91,42,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,42,2,1,"D",1,0)
Non-covered charge(s).
"DATA",161.91,42,4,0)
^^1^1^3030718^
"DATA",161.91,42,4,1,0)
Non-covered charge(s).
"DATA",161.91,43,0)
97^4
"DATA",161.91,43,1,0)
^161.911D^1^1
"DATA",161.91,43,1,1,0)
3030601^1^1
"DATA",161.91,43,2,0)
^161.912D^1^1
"DATA",161.91,43,2,1,0)
3030601
"DATA",161.91,43,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,43,2,1,"D",1,0)
Payment is included in the allowance for another service/procedure.
"DATA",161.91,43,4,0)
^^1^1^3030718^
"DATA",161.91,43,4,1,0)
Payment is included in the allowance for another service/procedure.
"DATA",161.91,44,0)
100^4
"DATA",161.91,44,1,0)
^161.911D^1^1
"DATA",161.91,44,1,1,0)
3030601^1^1
"DATA",161.91,44,2,0)
^161.912D^1^1
"DATA",161.91,44,2,1,0)
3030601
"DATA",161.91,44,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,44,2,1,"D",1,0)
Payment made to patient/insured/responsible party.
"DATA",161.91,44,4,0)
^^1^1^3030718^
"DATA",161.91,44,4,1,0)
Payment made to patient/insured/responsible party.
"DATA",161.91,45,0)
109^4
"DATA",161.91,45,1,0)
^161.911D^1^1
"DATA",161.91,45,1,1,0)
3030601^1^1
"DATA",161.91,45,2,0)
^161.912D^1^1
"DATA",161.91,45,2,1,0)
3030601
"DATA",161.91,45,2,1,"D",0)
^161.9121^2^2^3030718^^
"DATA",161.91,45,2,1,"D",1,0)
Claim not covered by this payer/contractor. You must send the claim to 
"DATA",161.91,45,2,1,"D",2,0)
the correct payer/contractor.
"DATA",161.91,45,4,0)
^^2^2^3030718^
"DATA",161.91,45,4,1,0)
Claim not covered by this payer/contractor. You must send the claim to 
"DATA",161.91,45,4,2,0)
the correct payer/contractor.
"DATA",161.91,46,0)
114^4
"DATA",161.91,46,1,0)
^161.911D^1^1
"DATA",161.91,46,1,1,0)
3030601^1^1
"DATA",161.91,46,2,0)
^161.912D^1^1
"DATA",161.91,46,2,1,0)
3030601
"DATA",161.91,46,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,46,2,1,"D",1,0)
Procedure/product not approved by the Food and Drug Administration.
"DATA",161.91,46,4,0)
^^1^1^3030718^
"DATA",161.91,46,4,1,0)
Procedure/product not approved by the Food and Drug Administration.
"DATA",161.91,47,0)
119^4
"DATA",161.91,47,1,0)
^161.911D^1^1
"DATA",161.91,47,1,1,0)
3030601^1^1
"DATA",161.91,47,2,0)
^161.912D^1^1
"DATA",161.91,47,2,1,0)
3030601
"DATA",161.91,47,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,47,2,1,"D",1,0)
Benefit maximum for this time period has been reached.
"DATA",161.91,47,4,0)
^^1^1^3030718^
"DATA",161.91,47,4,1,0)
Benefit maximum for this time period has been reached.
"DATA",161.91,48,0)
122^4
"DATA",161.91,48,1,0)
^161.911D^1^1
"DATA",161.91,48,1,1,0)
3030601^1^1
"DATA",161.91,48,2,0)
^161.912D^1^1
"DATA",161.91,48,2,1,0)
3030601
"DATA",161.91,48,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,48,2,1,"D",1,0)
Psychiatric reduction.
"DATA",161.91,48,4,0)
^^1^1^3030718^
"DATA",161.91,48,4,1,0)
Psychiatric reduction.
"DATA",161.91,49,0)
131^4
"DATA",161.91,49,1,0)
^161.911D^1^1
"DATA",161.91,49,1,1,0)
3030601^1^1
"DATA",161.91,49,2,0)
^161.912D^1^1
"DATA",161.91,49,2,1,0)
3030601
"DATA",161.91,49,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,49,2,1,"D",1,0)
Claim specific negotiated discount.
"DATA",161.91,49,4,0)
^^1^1^3030718^
"DATA",161.91,49,4,1,0)
Claim specific negotiated discount.
"DATA",161.91,50,0)
132^4
"DATA",161.91,50,1,0)
^161.911D^1^1
"DATA",161.91,50,1,1,0)
3030601^1^1
"DATA",161.91,50,2,0)
^161.912D^1^1
"DATA",161.91,50,2,1,0)
3030601
"DATA",161.91,50,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,50,2,1,"D",1,0)
Prearranged demonstration project adjustment.
"DATA",161.91,50,4,0)
^^1^1^3030718^
"DATA",161.91,50,4,1,0)
Prearranged demonstration project adjustment.
"DATA",161.91,51,0)
135^4
"DATA",161.91,51,1,0)
^161.911D^1^1
"DATA",161.91,51,1,1,0)
3030601^1^1
"DATA",161.91,51,2,0)
^161.912D^1^1
"DATA",161.91,51,2,1,0)
3030601
"DATA",161.91,51,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,51,2,1,"D",1,0)
Claim denied. Interim bills cannot be processed.
"DATA",161.91,51,4,0)
^^1^1^3030718^
"DATA",161.91,51,4,1,0)
Claim denied. Interim bills cannot be processed.
"DATA",161.91,52,0)
138^4
"DATA",161.91,52,1,0)
^161.911D^1^1
"DATA",161.91,52,1,1,0)
3030601^1^1
"DATA",161.91,52,2,0)
^161.912D^1^1
"DATA",161.91,52,2,1,0)
3030601
"DATA",161.91,52,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,52,2,1,"D",1,0)
Claim/service denied. Appeal procedures not followed or time limits not 
"DATA",161.91,52,2,1,"D",2,0)
met.
"DATA",161.91,52,4,0)
^^2^2^3030718^
"DATA",161.91,52,4,1,0)
Claim/service denied. Appeal procedures not followed or time limits not 
"DATA",161.91,52,4,2,0)
met.
"DATA",161.91,53,0)
140^4
"DATA",161.91,53,1,0)
^161.911D^1^1
"DATA",161.91,53,1,1,0)
3030601^1^1
"DATA",161.91,53,2,0)
^161.912D^1^1
"DATA",161.91,53,2,1,0)
3030601
"DATA",161.91,53,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,53,2,1,"D",1,0)
Patient/Insured health identification number and name do not match.
"DATA",161.91,53,4,0)
^^1^1^3030718^
"DATA",161.91,53,4,1,0)
Patient/Insured health identification number and name do not match.
"DATA",161.91,54,0)
141^4
"DATA",161.91,54,1,0)
^161.911D^1^1
"DATA",161.91,54,1,1,0)
3030601^1^1
"DATA",161.91,54,2,0)
^161.912D^1^1
"DATA",161.91,54,2,1,0)
3030601
"DATA",161.91,54,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,54,2,1,"D",1,0)
Claim adjustment because the claim spans eligible and ineligible periods 
"DATA",161.91,54,2,1,"D",2,0)
of coverage.
"DATA",161.91,54,4,0)
^^2^2^3030718^
"DATA",161.91,54,4,1,0)
Claim adjustment because the claim spans eligible and ineligible periods 
"DATA",161.91,54,4,2,0)
of coverage.
"DATA",161.91,55,0)
142^4
"DATA",161.91,55,1,0)
^161.911D^1^1
"DATA",161.91,55,1,1,0)
3030601^1^1
"DATA",161.91,55,2,0)
^161.912D^1^1
"DATA",161.91,55,2,1,0)
3030601
"DATA",161.91,55,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,55,2,1,"D",1,0)
Claim adjusted by the monthly Medicaid patient liability amount.
"DATA",161.91,55,4,0)
^^1^1^3030718^
"DATA",161.91,55,4,1,0)
Claim adjusted by the monthly Medicaid patient liability amount.
"DATA",161.91,56,0)
143^4
"DATA",161.91,56,1,0)
^161.911D^1^1
"DATA",161.91,56,1,1,0)
3030601^1^1
"DATA",161.91,56,2,0)
^161.912D^1^1
"DATA",161.91,56,2,1,0)
3030601
"DATA",161.91,56,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,56,2,1,"D",1,0)
Portion of payment deferred.
"DATA",161.91,56,4,0)
^^1^1^3030718^
"DATA",161.91,56,4,1,0)
Portion of payment deferred.
"DATA",161.91,57,0)
146^4
"DATA",161.91,57,1,0)
^161.911D^1^1
"DATA",161.91,57,1,1,0)
3030601^1^1
"DATA",161.91,57,2,0)
^161.912D^1^1
"DATA",161.91,57,2,1,0)
3030601
"DATA",161.91,57,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,57,2,1,"D",1,0)
Payment denied because the diagnosis was invalid for the date(s) of 
"DATA",161.91,57,2,1,"D",2,0)
service reported.
"DATA",161.91,57,4,0)
^^2^2^3030718^
"DATA",161.91,57,4,1,0)
Payment denied because the diagnosis was invalid for the date(s) of 
"DATA",161.91,57,4,2,0)
service reported.
"DATA",161.91,58,0)
147^4
"DATA",161.91,58,1,0)
^161.911D^1^1
"DATA",161.91,58,1,1,0)
3030601^1^1
"DATA",161.91,58,2,0)
^161.912D^1^1
"DATA",161.91,58,2,1,0)
3030601
"DATA",161.91,58,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,58,2,1,"D",1,0)
Provider contracted/negotiated rate expired or not on file.
"DATA",161.91,58,4,0)
^^1^1^3030718^
"DATA",161.91,58,4,1,0)
Provider contracted/negotiated rate expired or not on file.
"DATA",161.91,59,0)
A1^4
"DATA",161.91,59,1,0)
^161.911D^1^1
"DATA",161.91,59,1,1,0)
3030601^1^1
"DATA",161.91,59,2,0)
^161.912D^1^1
"DATA",161.91,59,2,1,0)
3030601
"DATA",161.91,59,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,59,2,1,"D",1,0)
Claim denied charges.
"DATA",161.91,59,4,0)
^^1^1^3030718^
"DATA",161.91,59,4,1,0)
Claim denied charges.
"DATA",161.91,60,0)
A2^4
"DATA",161.91,60,1,0)
^161.911D^1^1
"DATA",161.91,60,1,1,0)
3030601^1^1
"DATA",161.91,60,2,0)
^161.912D^1^1
"DATA",161.91,60,2,1,0)
3030601
"DATA",161.91,60,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,60,2,1,"D",1,0)
Contractual adjustment.
"DATA",161.91,60,4,0)
^^1^1^3030718^
"DATA",161.91,60,4,1,0)
Contractual adjustment.
"DATA",161.91,61,0)
B12^4
"DATA",161.91,61,1,0)
^161.911D^1^1
"DATA",161.91,61,1,1,0)
3030601^1^1
"DATA",161.91,61,2,0)
^161.912D^1^1
"DATA",161.91,61,2,1,0)
3030601
"DATA",161.91,61,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,61,2,1,"D",1,0)
Services not documented in patients' medical records.
"DATA",161.91,61,4,0)
^^1^1^3030718^
"DATA",161.91,61,4,1,0)
Services not documented in patients' medical records.
"DATA",161.91,62,0)
B7^4
"DATA",161.91,62,1,0)
^161.911D^1^1
"DATA",161.91,62,1,1,0)
3030601^1^1
"DATA",161.91,62,2,0)
^161.912D^1^1
"DATA",161.91,62,2,1,0)
3030601
"DATA",161.91,62,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,62,2,1,"D",1,0)
This provider was not certified/eligible to be paid for this 
"DATA",161.91,62,2,1,"D",2,0)
procedure/service on this date of service.
"DATA",161.91,62,4,0)
^^2^2^3030718^
"DATA",161.91,62,4,1,0)
This provider was not certified/eligible to be paid for this 
"DATA",161.91,62,4,2,0)
procedure/service on this date of service.
"DATA",161.91,63,0)
B8^4
"DATA",161.91,63,1,0)
^161.911D^1^1
"DATA",161.91,63,1,1,0)
3030601^1^1
"DATA",161.91,63,2,0)
^161.912D^1^1
"DATA",161.91,63,2,1,0)
3030601
"DATA",161.91,63,2,1,"D",0)
^^2^2^3030718^
"DATA",161.91,63,2,1,"D",1,0)
Claim/service not covered/reduced because alternative services were 
"DATA",161.91,63,2,1,"D",2,0)
available, and should have been utilized.
"DATA",161.91,63,4,0)
^^2^2^3030718^
"DATA",161.91,63,4,1,0)
Claim/service not covered/reduced because alternative services were 
"DATA",161.91,63,4,2,0)
available, and should have been utilized.
"DATA",161.91,64,0)
B1 ^4
"DATA",161.91,64,1,0)
^161.911D^1^1
"DATA",161.91,64,1,1,0)
3030601^1^1
"DATA",161.91,64,2,0)
^161.912D^1^1
"DATA",161.91,64,2,1,0)
3030601
"DATA",161.91,64,2,1,"D",0)
^^1^1^3030718^
"DATA",161.91,64,2,1,"D",1,0)
Non-covered visits.
"DATA",161.91,64,4,0)
^^1^1^3030718^
"DATA",161.91,64,4,1,0)
Non-covered visits.
"DATA",161.92,1,0)
CO
"DATA",161.92,1,1,0)
^161.921D^1^1
"DATA",161.92,1,1,1,0)
3030601^1^1
"DATA",161.92,1,2,0)
^161.922D^1^1
"DATA",161.92,1,2,1,0)
3030601^Contractual Obligations
"DATA",161.92,1,2,1,"D",0)
^^2^2^3030618^
"DATA",161.92,1,2,1,"D",1,0)
Use this code when a joint payer/payee contractual agreement or a
"DATA",161.92,1,2,1,"D",2,0)
regulatory requirement resulted in an adjustment.
"DATA",161.92,2,0)
CR
"DATA",161.92,2,1,0)
^161.921D^1^1
"DATA",161.92,2,1,1,0)
3030601^1^1
"DATA",161.92,2,2,0)
^161.922D^1^1
"DATA",161.92,2,2,1,0)
3030601^Correction and Reversals
"DATA",161.92,2,2,1,"D",0)
^^1^1^3030618^
"DATA",161.92,2,2,1,"D",1,0)
Use this code for corrections and reversals to PRIOR claims.
"DATA",161.92,3,0)
OA
"DATA",161.92,3,1,0)
^161.921D^1^1
"DATA",161.92,3,1,1,0)
3030601^1^1
"DATA",161.92,3,2,0)
^161.922D^1^1
"DATA",161.92,3,2,1,0)
3030601^Other adjustments
"DATA",161.92,4,0)
PI
"DATA",161.92,4,1,0)
^161.921D^1^1
"DATA",161.92,4,1,1,0)
3030601^1^1
"DATA",161.92,4,2,0)
^161.922D^1^1
"DATA",161.92,4,2,1,0)
3030601^Payor Initiated Reductions
"DATA",161.92,4,2,1,"D",0)
^^4^4^3030618^
"DATA",161.92,4,2,1,"D",1,0)
Use this code when, in the opinion of the payer, the adjustment is not the
"DATA",161.92,4,2,1,"D",2,0)
responsibility of the patient, but there is no supporting contract between
"DATA",161.92,4,2,1,"D",3,0)
the provider and the payer (i.e., medical review or professional review
"DATA",161.92,4,2,1,"D",4,0)
organization adjustments).
"DATA",161.92,5,0)
PR
"DATA",161.92,5,1,0)
^161.921D^1^1
"DATA",161.92,5,1,1,0)
3030601^1^1
"DATA",161.92,5,2,0)
^161.922D^1^1
"DATA",161.92,5,2,1,0)
3030601^Patient Responsibility
"DATA",161.93,1,0)
M1
"DATA",161.93,1,1,0)
^161.931D^1^1
"DATA",161.93,1,1,1,0)
3030601^1^1
"DATA",161.93,1,2,0)
^161.932D^1^1
"DATA",161.93,1,2,1,0)
3030601
"DATA",161.93,1,2,1,"D",0)
^^2^2^3030618^
"DATA",161.93,1,2,1,"D",1,0)
X-ray not taken within the past 12 months or near enough to the start of 
"DATA",161.93,1,2,1,"D",2,0)
treatment.
"DATA",161.93,2,0)
M2
"DATA",161.93,2,1,0)
^161.931D^1^1
"DATA",161.93,2,1,1,0)
3030601^1^1
"DATA",161.93,2,2,0)
^161.932D^1^1
"DATA",161.93,2,2,1,0)
3030601
"DATA",161.93,2,2,1,"D",0)
^^1^1^3030618^
"DATA",161.93,2,2,1,"D",1,0)
Not paid separately when the patient is an inpatient.
"DATA",161.93,3,0)
M3
"DATA",161.93,3,1,0)
^161.931D^1^1
"DATA",161.93,3,1,1,0)
3030601^1^0
"DATA",161.93,3,2,0)
^161.932D^1^1
"DATA",161.93,3,2,1,0)
3030601
"DATA",161.93,3,2,1,"D",0)
^^1^1^3030618^
"DATA",161.93,3,2,1,"D",1,0)
Equipment is the same or similar to equipment already being used.
"DATA",161.93,4,0)
M4
"DATA",161.93,4,1,0)
^161.931D^1^1
"DATA",161.93,4,1,1,0)
3030601^1^0
"DATA",161.93,4,2,0)
^161.932D^1^1
"DATA",161.93,4,2,1,0)
3030601
"DATA",161.93,4,2,1,"D",0)
^^2^2^3030618^
"DATA",161.93,4,2,1,"D",1,0)
This is the last monthly installment payment for this durable medical 
"DATA",161.93,4,2,1,"D",2,0)
equipment.
"DATA",161.93,5,0)
MA125
"DATA",161.93,5,1,0)
^161.931D^1^1
"DATA",161.93,5,1,1,0)
3030601^1^1
"DATA",161.93,5,2,0)
^161.932D^1^1
"DATA",161.93,5,2,1,0)
3030601
"DATA",161.93,5,2,1,"D",0)
^^2^2^3030618^
"DATA",161.93,5,2,1,"D",1,0)
Per legislation governing this program, payment constitutes payment in 
"DATA",161.93,5,2,1,"D",2,0)
full.
"DATA",161.93,6,0)
N45
"DATA",161.93,6,1,0)
^161.931D^1^1
"DATA",161.93,6,1,1,0)
3030601^1^1
"DATA",161.93,6,2,0)
^161.932D^1^1
"DATA",161.93,6,2,1,0)
3030601
"DATA",161.93,6,2,1,"D",0)
^^1^1^3030618^
"DATA",161.93,6,2,1,"D",1,0)
Payment based on authorized amount.
"DATA",161.93,7,0)
M17
"DATA",161.93,7,1,0)
^161.931D^1^1
"DATA",161.93,7,1,1,0)
3030601^1^1
"DATA",161.93,7,2,0)
^161.932D^1^1
"DATA",161.93,7,2,1,0)
3030601
"DATA",161.93,7,2,1,"D",0)
^^4^4^3030915^
"DATA",161.93,7,2,1,"D",1,0)
Payment approved as you did not know, and could not reasonably have been 
"DATA",161.93,7,2,1,"D",2,0)
expected to know, that this would not normally have been covered for this 
"DATA",161.93,7,2,1,"D",3,0)
patient. In the future, you will be liable for charges for the same 
"DATA",161.93,7,2,1,"D",4,0)
service(s) under the same or similar conditions.
"DATA",161.93,8,0)
M8
"DATA",161.93,8,1,0)
^161.931D^1^1
"DATA",161.93,8,1,1,0)
3030601^1^1
"DATA",161.93,8,2,0)
^161.932D^1^1
"DATA",161.93,8,2,1,0)
3030601
"DATA",161.93,8,2,1,"D",0)
^^2^2^3030717^
"DATA",161.93,8,2,1,"D",1,0)
We do not accept blood gas tests results when the test was conducted by a 
"DATA",161.93,8,2,1,"D",2,0)
medical supplier or taken while the patient is on oxygen.
"DATA",161.93,9,0)
M13
"DATA",161.93,9,1,0)
^161.931D^1^1
"DATA",161.93,9,1,1,0)
3030601^1^1
"DATA",161.93,9,2,0)
^161.932D^1^1
"DATA",161.93,9,2,1,0)
3030601
"DATA",161.93,9,2,1,"D",0)
^^2^2^3030718^
"DATA",161.93,9,2,1,"D",1,0)
No more than one initial visit may be covered per specialty per medical 
"DATA",161.93,9,2,1,"D",2,0)
group. Visit may be rebilled with an established visit code.
"DATA",161.93,10,0)
M14
"DATA",161.93,10,1,0)
^161.931D^1^1
"DATA",161.93,10,1,1,0)
3030601^1^1
"DATA",161.93,10,2,0)
^161.932D^1^1
"DATA",161.93,10,2,1,0)
3030601
"DATA",161.93,10,2,1,"D",0)
^^3^3^3030915^
"DATA",161.93,10,2,1,"D",1,0)
No separate payment for an injection administered during an office visit, 
"DATA",161.93,10,2,1,"D",2,0)
and no payment for a full office visit if the patient only received an 
"DATA",161.93,10,2,1,"D",3,0)
injection.
"DATA",161.93,11,0)
M15
"DATA",161.93,11,1,0)
^161.931D^1^1
"DATA",161.93,11,1,1,0)
3030601^1^1
"DATA",161.93,11,2,0)
^161.932D^1^1
"DATA",161.93,11,2,1,0)
3030601
"DATA",161.93,11,2,1,"D",0)
^^2^2^3030718^
"DATA",161.93,11,2,1,"D",1,0)
Separately billed services/tests have been bundled as they are considered 
"DATA",161.93,11,2,1,"D",2,0)
components of the same procedure. Separate payment is not allowed.
"DATA",161.93,12,0)
M19
"DATA",161.93,12,1,0)
^161.931D^1^1
"DATA",161.93,12,1,1,0)
3030601^1^1
"DATA",161.93,12,2,0)
^161.932D^1^1
"DATA",161.93,12,2,1,0)
3030601
"DATA",161.93,12,2,1,"D",0)
^^1^1^3030915^
"DATA",161.93,12,2,1,"D",1,0)
Missing/incomplete/invalid oxygen certification/re-certification.
"DATA",161.93,13,0)
M24
"DATA",161.93,13,1,0)
^161.931D^1^1
"DATA",161.93,13,1,1,0)
3030601^1^1
"DATA",161.93,13,2,0)
^161.932D^1^1
"DATA",161.93,13,2,1,0)
3030601
"DATA",161.93,13,2,1,"D",0)
^^1^1^3030915^
"DATA",161.93,13,2,1,"D",1,0)
Missing/incomplete/invalid number of doses per vial.
"DATA",161.93,14,0)
M38
"DATA",161.93,14,1,0)
^161.931D^1^1
"DATA",161.93,14,1,1,0)
3030601^1^1
"DATA",161.93,14,2,0)
^161.932D^1^1
"DATA",161.93,14,2,1,0)
3030601
"DATA",161.93,14,2,1,"D",0)
^161.9321^3^3^3030915^^
"DATA",161.93,14,2,1,"D",1,0)
The patient is liable for the charges for this service as you informed 
"DATA",161.93,14,2,1,"D",2,0)
the patient in writing before the service was furnished that we would not 
"DATA",161.93,14,2,1,"D",3,0)
pay for it, and the patient agreed to pay.
"DATA",161.93,15,0)
M41
"DATA",161.93,15,1,0)
^161.931D^1^1
"DATA",161.93,15,1,1,0)
3030601^1^1
"DATA",161.93,15,2,0)
^161.932D^1^1
"DATA",161.93,15,2,1,0)
3030601
"DATA",161.93,15,2,1,"D",0)
^^2^2^3030718^
"DATA",161.93,15,2,1,"D",1,0)
We do not pay for this as the patient has no legal obligation to pay for 
"DATA",161.93,15,2,1,"D",2,0)
this. 
"DATA",161.93,16,0)
M63
"DATA",161.93,16,1,0)
^161.931D^1^1
"DATA",161.93,16,1,1,0)
3030601^1^1
"DATA",161.93,16,2,0)
^161.932D^1^1
"DATA",161.93,16,2,1,0)
3030601
"DATA",161.93,16,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,16,2,1,"D",1,0)
We do not pay for more than one of these on the same day.
"DATA",161.93,17,0)
M80
"DATA",161.93,17,1,0)
^161.931D^1^1
"DATA",161.93,17,1,1,0)
3030601^1^1
"DATA",161.93,17,2,0)
^161.932D^1^1
"DATA",161.93,17,2,1,0)
3030601
"DATA",161.93,17,2,1,"D",0)
^^2^2^3030915^
"DATA",161.93,17,2,1,"D",1,0)
Not covered when performed during the same session/date as a previously 
"DATA",161.93,17,2,1,"D",2,0)
processed service for the patient.
"DATA",161.93,18,0)
M118
"DATA",161.93,18,1,0)
^161.931D^1^1
"DATA",161.93,18,1,1,0)
3030601^1^1
"DATA",161.93,18,2,0)
^161.932D^1^1
"DATA",161.93,18,2,1,0)
3030601
"DATA",161.93,18,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,18,2,1,"D",1,0)
Letter to follow containing further information.
"DATA",161.93,19,0)
M127
"DATA",161.93,19,1,0)
^161.931D^1^1
"DATA",161.93,19,1,1,0)
3030601^1^1
"DATA",161.93,19,2,0)
^161.932D^1^1
"DATA",161.93,19,2,1,0)
3030601
"DATA",161.93,19,2,1,"D",0)
^^1^1^3030915^
"DATA",161.93,19,2,1,"D",1,0)
Missing/incomplete/invalid patient medical record for this service.
"DATA",161.93,20,0)
M141
"DATA",161.93,20,1,0)
^161.931D^1^1
"DATA",161.93,20,1,1,0)
3030601^1^1
"DATA",161.93,20,2,0)
^161.932D^1^1
"DATA",161.93,20,2,1,0)
3030601
"DATA",161.93,20,2,1,"D",0)
^^1^1^3030915^
"DATA",161.93,20,2,1,"D",1,0)
Missing/incomplete/invalid physician certified plan of care.
"DATA",161.93,21,0)
M144
"DATA",161.93,21,1,0)
^161.931D^1^1
"DATA",161.93,21,1,1,0)
3030601^1^1
"DATA",161.93,21,2,0)
^161.932D^1^1
"DATA",161.93,21,2,1,0)
3030601
"DATA",161.93,21,2,1,"D",0)
^^2^2^3030718^
"DATA",161.93,21,2,1,"D",1,0)
Pre-/post-operative care payment is included in the allowance for the 
"DATA",161.93,21,2,1,"D",2,0)
surgery/procedure.
"DATA",161.93,22,0)
MA10
"DATA",161.93,22,1,0)
^161.931D^1^1
"DATA",161.93,22,1,1,0)
3030601^1^1
"DATA",161.93,22,2,0)
^161.932D^1^1
"DATA",161.93,22,2,1,0)
3030601
"DATA",161.93,22,2,1,"D",0)
^^2^2^3030915^
"DATA",161.93,22,2,1,"D",1,0)
The patient's payment was in excess of the amount owed.  You must refund 
"DATA",161.93,22,2,1,"D",2,0)
the overpayment to the patient.
"DATA",161.93,23,0)
MA11
"DATA",161.93,23,1,0)
^161.931D^1^1
"DATA",161.93,23,1,1,0)
3030601^1^1
"DATA",161.93,23,2,0)
^161.932D^1^1
"DATA",161.93,23,2,1,0)
3030601
"DATA",161.93,23,2,1,"D",0)
^^5^5^3030718^
"DATA",161.93,23,2,1,"D",1,0)
Payment is being issued on a conditional basis.  If no-fault    
"DATA",161.93,23,2,1,"D",2,0)
insurance, liability insurance, Workers' Compensation, Department of 
"DATA",161.93,23,2,1,"D",3,0)
Veterans Affairs, or a group health plan for employees and dependents 
"DATA",161.93,23,2,1,"D",4,0)
also covers this claim, a refund may be due us.  Please contact us if the 
"DATA",161.93,23,2,1,"D",5,0)
patient is covered by any of these sources.
"DATA",161.93,24,0)
MA17
"DATA",161.93,24,1,0)
^161.931D^1^1
"DATA",161.93,24,1,1,0)
3030601^1^1
"DATA",161.93,24,2,0)
^161.932D^1^1
"DATA",161.93,24,2,1,0)
3030601
"DATA",161.93,24,2,1,"D",0)
^^3^3^3030915^
"DATA",161.93,24,2,1,"D",1,0)
We are the primary payer and have paid at the primary rate.  You must 
"DATA",161.93,24,2,1,"D",2,0)
contact the patient's other insurer to refund any excess it may have paid 
"DATA",161.93,24,2,1,"D",3,0)
due to its erroneous primary payment.
"DATA",161.93,25,0)
MA26
"DATA",161.93,25,1,0)
^161.931D^1^1
"DATA",161.93,25,1,1,0)
3030601^1^1
"DATA",161.93,25,2,0)
^161.932D^1^1
"DATA",161.93,25,2,1,0)
3030601
"DATA",161.93,25,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,25,2,1,"D",1,0)
Our records indicate that you were previously informed of this rule.
"DATA",161.93,26,0)
MA44
"DATA",161.93,26,1,0)
^161.931D^1^1
"DATA",161.93,26,1,1,0)
3030601^1^1
"DATA",161.93,26,2,0)
^161.932D^1^1
"DATA",161.93,26,2,1,0)
3030601
"DATA",161.93,26,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,26,2,1,"D",1,0)
No appeal rights. Adjudicative decision based on law.
"DATA",161.93,27,0)
MA91
"DATA",161.93,27,1,0)
^161.931D^1^1
"DATA",161.93,27,1,1,0)
3030601^1^1
"DATA",161.93,27,2,0)
^161.932D^1^1
"DATA",161.93,27,2,1,0)
3030601
"DATA",161.93,27,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,27,2,1,"D",1,0)
This determination is the result of the appeal you filed.
"DATA",161.93,28,0)
MA109
"DATA",161.93,28,1,0)
^161.931D^1^1
"DATA",161.93,28,1,1,0)
3030601^1^1
"DATA",161.93,28,2,0)
^161.932D^1^1
"DATA",161.93,28,2,1,0)
3030601
"DATA",161.93,28,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,28,2,1,"D",1,0)
Claim processed in accordance with ambulatory surgical guidelines.
"DATA",161.93,29,0)
N1
"DATA",161.93,29,1,0)
^161.931D^1^1
"DATA",161.93,29,1,1,0)
3030601^1^1
"DATA",161.93,29,2,0)
^161.932D^1^1
"DATA",161.93,29,2,1,0)
3030601
"DATA",161.93,29,2,1,"D",0)
^^3^3^3030915^
"DATA",161.93,29,2,1,"D",1,0)
You may appeal this decision in writing within the required time 
"DATA",161.93,29,2,1,"D",2,0)
limits following receipt of this notice by following the instructions 
"DATA",161.93,29,2,1,"D",3,0)
included in your contract or plan benefit documents.
"DATA",161.93,30,0)
N11
"DATA",161.93,30,1,0)
^161.931D^1^1
"DATA",161.93,30,1,1,0)
3030601^1^1
"DATA",161.93,30,2,0)
^161.932D^1^1
"DATA",161.93,30,2,1,0)
3030601
"DATA",161.93,30,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,30,2,1,"D",1,0)
Denial reversed because of medical review.
"DATA",161.93,31,0)
N14
"DATA",161.93,31,1,0)
^161.931D^1^1
"DATA",161.93,31,1,1,0)
3030601^1^1
"DATA",161.93,31,2,0)
^161.932D^1^1
"DATA",161.93,31,2,1,0)
3030601
"DATA",161.93,31,2,1,"D",0)
^^2^2^3030718^
"DATA",161.93,31,2,1,"D",1,0)
Payment based on a contractual amount or agreement, fee schedule, or 
"DATA",161.93,31,2,1,"D",2,0)
maximum allowable amount.
"DATA",161.93,32,0)
N18
"DATA",161.93,32,1,0)
^161.931D^1^1
"DATA",161.93,32,1,1,0)
3030601^1^1
"DATA",161.93,32,2,0)
^161.932D^1^1
"DATA",161.93,32,2,1,0)
3030601
"DATA",161.93,32,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,32,2,1,"D",1,0)
Payment based on the Medicare allowed amount.
"DATA",161.93,33,0)
N19
"DATA",161.93,33,1,0)
^161.931D^1^1
"DATA",161.93,33,1,1,0)
3030601^1^1
"DATA",161.93,33,2,0)
^161.932D^1^1
"DATA",161.93,33,2,1,0)
3030601
"DATA",161.93,33,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,33,2,1,"D",1,0)
Procedure code incidental to primary procedure.
"DATA",161.93,34,0)
N29
"DATA",161.93,34,1,0)
^161.931D^1^1
"DATA",161.93,34,1,1,0)
3030601^1^1
"DATA",161.93,34,2,0)
^161.932D^1^1
"DATA",161.93,34,2,1,0)
3030601
"DATA",161.93,34,2,1,"D",0)
^^2^2^3030915^
"DATA",161.93,34,2,1,"D",1,0)
Missing/incomplete/invalid documentation/orders/notes/summary/report/
"DATA",161.93,34,2,1,"D",2,0)
invoice.
"DATA",161.93,35,0)
N30
"DATA",161.93,35,1,0)
^161.931D^1^1
"DATA",161.93,35,1,1,0)
3030601^1^1
"DATA",161.93,35,2,0)
^161.932D^1^1
"DATA",161.93,35,2,1,0)
3030601
"DATA",161.93,35,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,35,2,1,"D",1,0)
Recipient ineligible for this service.
"DATA",161.93,36,0)
N43
"DATA",161.93,36,1,0)
^161.931D^1^1
"DATA",161.93,36,1,1,0)
3030601^1^1
"DATA",161.93,36,2,0)
^161.932D^1^1
"DATA",161.93,36,2,1,0)
3030601
"DATA",161.93,36,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,36,2,1,"D",1,0)
Bed hold or leave days exceeded.
"DATA",161.93,37,0)
N54
"DATA",161.93,37,1,0)
^161.931D^1^1
"DATA",161.93,37,1,1,0)
3030601^1^1
"DATA",161.93,37,2,0)
^161.932D^1^1
"DATA",161.93,37,2,1,0)
3030601
"DATA",161.93,37,2,1,"D",0)
^^1^1^3030718^
"DATA",161.93,37,2,1,"D",1,0)
Claim information is inconsistent with pre-certified/authorized services.
"DATA",161.93,38,0)
N102
"DATA",161.93,38,1,0)
^161.931D^1^1
"DATA",161.93,38,1,1,0)
3030601^1^1
"DATA",161.93,38,2,0)
^161.932D^1^1
"DATA",161.93,38,2,1,0)
3030601
"DATA",161.93,38,2,1,"D",0)
^^2^2^3030718^
"DATA",161.93,38,2,1,"D",1,0)
This claim has been denied without reviewing the medical record because 
"DATA",161.93,38,2,1,"D",2,0)
the requested records were not received or were not received timely
"DATA",161.93,39,0)
MA74
"DATA",161.93,39,1,0)
^161.931D^1^1
"DATA",161.93,39,1,1,0)
3030601^1^1
"DATA",161.93,39,2,0)
^161.932D^1^1
"DATA",161.93,39,2,1,0)
3030601
"DATA",161.93,39,2,1,"D",0)
^161.9321^2^2^3030915^^
"DATA",161.93,39,2,1,"D",1,0)
This payment replaces an earlier payment for this claim that was either 
"DATA",161.93,39,2,1,"D",2,0)
lost, damaged, or returned.
"DATA",161.93,41,0)
N157
"DATA",161.93,41,1,0)
^161.931D^1^1
"DATA",161.93,41,1,1,0)
3030601^1^1
"DATA",161.93,41,2,0)
^161.932D^1^1
"DATA",161.93,41,2,1,0)
3030601
"DATA",161.93,41,2,1,"D",0)
^^1^1^3030915^
"DATA",161.93,41,2,1,"D",1,0)
Transportation to and from this destination is not covered.
"DATA",161.93,42,0)
N184
"DATA",161.93,42,1,0)
^161.931D^1^1
"DATA",161.93,42,1,1,0)
3030601^1^1
"DATA",161.93,42,2,0)
^161.932D^1^1
"DATA",161.93,42,2,1,0)
3030601
"DATA",161.93,42,2,1,"D",0)
^^1^1^3030915^
"DATA",161.93,42,2,1,"D",1,0)
Rebill technical and professional components separately.
"DATA",161.93,43,0)
N188
"DATA",161.93,43,1,0)
^161.931D^1^1
"DATA",161.93,43,1,1,0)
3030601^1^1
"DATA",161.93,43,2,0)
^161.932D^1^1
"DATA",161.93,43,2,1,0)
3030601
"DATA",161.93,43,2,1,"D",0)
^^1^1^3030915^
"DATA",161.93,43,2,1,"D",1,0)
The approved level of care does not match the procedure code submitted.
"DATA",161.93,44,0)
N195
"DATA",161.93,44,1,0)
^161.931D^1^1
"DATA",161.93,44,1,1,0)
3030601^1^1
"DATA",161.93,44,2,0)
^161.932D^1^1
"DATA",161.93,44,2,1,0)
3030601
"DATA",161.93,44,2,1,"D",0)
^161.9321^1^1^3030915^^
"DATA",161.93,44,2,1,"D",1,0)
The technical component must be billed separately.
"DATA",161.93,45,0)
N200
"DATA",161.93,45,1,0)
^161.931D^1^1
"DATA",161.93,45,1,1,0)
3030601^1^1
"DATA",161.93,45,2,0)
^161.932D^1^1
"DATA",161.93,45,2,1,0)
3030601
"DATA",161.93,45,2,1,"D",0)
^^1^1^3030915^
"DATA",161.93,45,2,1,"D",1,0)
The professional component must be billed separately.
"FIA",161.91)
ADJUSTMENT REASON
"FIA",161.91,0)
^FB(161.91,
"FIA",161.91,0,0)
161.91I
"FIA",161.91,0,1)
y^y^f^^n^^y^o^n
"FIA",161.91,0,10)

"FIA",161.91,0,11)

"FIA",161.91,0,"RLRO")

"FIA",161.91,0,"VR")
3.5^FB
"FIA",161.91,161.91)
0
"FIA",161.91,161.911)
0
"FIA",161.91,161.912)
0
"FIA",161.91,161.9121)
0
"FIA",161.91,161.914)
0
"FIA",161.92)
ADJUSTMENT GROUP
"FIA",161.92,0)
^FB(161.92,
"FIA",161.92,0,0)
161.92I
"FIA",161.92,0,1)
y^y^f^^n^^y^o^n
"FIA",161.92,0,10)

"FIA",161.92,0,11)

"FIA",161.92,0,"RLRO")

"FIA",161.92,0,"VR")
3.5^FB
"FIA",161.92,161.92)
0
"FIA",161.92,161.921)
0
"FIA",161.92,161.922)
0
"FIA",161.92,161.9221)
0
"FIA",161.93)
REMITTANCE REMARK
"FIA",161.93,0)
^FB(161.93,
"FIA",161.93,0,0)
161.93I
"FIA",161.93,0,1)
y^y^f^^n^^y^o^n
"FIA",161.93,0,10)

"FIA",161.93,0,11)

"FIA",161.93,0,"RLRO")

"FIA",161.93,0,"VR")
3.5^FB
"FIA",161.93,161.93)
0
"FIA",161.93,161.931)
0
"FIA",161.93,161.932)
0
"FIA",161.93,161.9321)
0
"FIA",162)
FEE BASIS PAYMENT
"FIA",162,0)
^FBAAC(
"FIA",162,0,0)
162P
"FIA",162,0,1)
y^n^p^^^^n^^n
"FIA",162,0,10)

"FIA",162,0,11)

"FIA",162,0,"RLRO")

"FIA",162,0,"VR")
3.5^FB
"FIA",162,162)
1
"FIA",162,162.03)
1
"FIA",162,162.03,47)

"FIA",162,162.03,48)

"FIA",162,162.03,49)

"FIA",162,162.03,50)

"FIA",162,162.03,51)

"FIA",162,162.03,52)

"FIA",162,162.03,53)

"FIA",162,162.07)
0
"FIA",162,162.08)
0
"FIA",162.1)
FEE BASIS PHARMACY INVOICE
"FIA",162.1,0)
^FBAA(162.1,
"FIA",162.1,0,0)
162.1
"FIA",162.1,0,1)
y^n^p^^^^n^^n
"FIA",162.1,0,10)

"FIA",162.1,0,11)

"FIA",162.1,0,"RLRO")

"FIA",162.1,0,"VR")
3.5^FB
"FIA",162.1,162.1)
1
"FIA",162.1,162.1,13)

"FIA",162.1,162.11)
1
"FIA",162.1,162.11,36)

"FIA",162.1,162.11,37)

"FIA",162.1,162.11,38)

"FIA",162.1,162.14)
0
"FIA",162.1,162.15)
0
"FIA",162.5)
FEE BASIS INVOICE
"FIA",162.5,0)
^FBAAI(
"FIA",162.5,0,0)
162.5
"FIA",162.5,0,1)
y^n^p^^^^n^^n
"FIA",162.5,0,10)

"FIA",162.5,0,11)

"FIA",162.5,0,"RLRO")

"FIA",162.5,0,"VR")
3.5^FB
"FIA",162.5,162.5)
1
"FIA",162.5,162.5,8)

"FIA",162.5,162.5,24.5)

"FIA",162.5,162.5,54)

"FIA",162.5,162.5,55)

"FIA",162.5,162.5,56)

"FIA",162.5,162.5,57)

"FIA",162.5,162.5,58)

"FIA",162.5,162.5,59)

"FIA",162.5,162.558)
0
"FIA",162.5,162.559)
0
"FIA",162.7)
FEE BASIS UNAUTHORIZED CLAIMS
"FIA",162.7,0)
^FB583(
"FIA",162.7,0,0)
162.7ID
"FIA",162.7,0,1)
y^n^p^^^^n^^n
"FIA",162.7,0,10)

"FIA",162.7,0,11)

"FIA",162.7,0,"RLRO")

"FIA",162.7,0,"VR")
3.5^FB
"FIA",162.7,162.7)
1
"FIA",162.7,162.7,32)

"FIA",163.5)
FPPS QUEUED INVOICES
"FIA",163.5,0)
^FBHL(163.5,
"FIA",163.5,0,0)
163.5I
"FIA",163.5,0,1)
y^y^f^^^^n
"FIA",163.5,0,10)

"FIA",163.5,0,11)

"FIA",163.5,0,"RLRO")

"FIA",163.5,0,"VR")
3.5^FB
"FIA",163.5,163.5)
0
"FIA",163.5,163.511)
0
"FIA",163.5,163.57)
0
"FIA",163.7)
FEE BASIS FPPS AUDIT
"FIA",163.7,0)
^FB(163.7,
"FIA",163.7,0,0)
163.7I
"FIA",163.7,0,1)
y^y^f^^^^n
"FIA",163.7,0,10)

"FIA",163.7,0,11)

"FIA",163.7,0,"RLRO")

"FIA",163.7,0,"VR")
3.5^FB
"FIA",163.7,163.7)
0
"FIA",163.99)
FEE BASIS FEE SCHEDULE
"FIA",163.99,0)
^FBAA(163.99,
"FIA",163.99,0,0)
163.99I
"FIA",163.99,0,1)
y^n^p^^^^n^^n
"FIA",163.99,0,10)

"FIA",163.99,0,11)

"FIA",163.99,0,"RLRO")

"FIA",163.99,0,"VR")
3.5^FB
"FIA",163.99,163.99)
1
"FIA",163.99,163.991)
1
"FIA",163.99,163.991,4)

"INI")
PR^FBXIP61
"IX",162,162,"AFC",0)
162^AFC^Whole file cross-reference on FPPS CLAIM ID.^R^^F^IR^W^162.03^^^^^S
"IX",162,162,"AFC",.1,0)
^^1^1^3030618^
"IX",162,162,"AFC",.1,1,0)
Regular, whole-file cross-reference on the FPPS CLAIM ID field.
"IX",162,162,"AFC",1)
S ^FBAAC("AFC",$E(X,1,32),DA(3),DA(2),DA(1),DA)=""
"IX",162,162,"AFC",2)
K ^FBAAC("AFC",$E(X,1,32),DA(3),DA(2),DA(1),DA)
"IX",162,162,"AFC",2.5)
K ^FBAAC("AFC")
"IX",162,162,"AFC",11.1,0)
^.114IA^1^1
"IX",162,162,"AFC",11.1,1,0)
1^F^162.03^50^32^1^F
"IX",162,162,"AFC",11.1,1,3)

"IX",162.1,162.1,"AFC",0)
162.1^AFC^Whole file cross-reference on FPPS CLAIM ID.^R^^F^IR^I^162.1^^^^^S
"IX",162.1,162.1,"AFC",.1,0)
^^1^1^3030618^
"IX",162.1,162.1,"AFC",.1,1,0)
Regular cross-reference on the FPPS CLAIM ID.
"IX",162.1,162.1,"AFC",1)
S ^FBAA(162.1,"AFC",$E(X,1,32),DA)=""
"IX",162.1,162.1,"AFC",2)
K ^FBAA(162.1,"AFC",$E(X,1,32),DA)
"IX",162.1,162.1,"AFC",2.5)
K ^FBAA(162.1,"AFC")
"IX",162.1,162.1,"AFC",11.1,0)
^.114IA^1^1
"IX",162.1,162.1,"AFC",11.1,1,0)
1^F^162.1^13^32^1^F
"IX",162.1,162.1,"AFC",11.1,1,3)

"IX",162.5,162.5,"AFC",0)
162.5^AFC^Cross-reference on FPPS CLAIM ID.^R^^F^IR^I^162.5^^^^^S
"IX",162.5,162.5,"AFC",.1,0)
^^1^1^3030618^
"IX",162.5,162.5,"AFC",.1,1,0)
Regular cross-reference on the FPPS CLAIM ID.
"IX",162.5,162.5,"AFC",1)
S ^FBAAI("AFC",$E(X,1,32),DA)=""
"IX",162.5,162.5,"AFC",2)
K ^FBAAI("AFC",$E(X,1,32),DA)
"IX",162.5,162.5,"AFC",2.5)
K ^FBAAI("AFC")
"IX",162.5,162.5,"AFC",11.1,0)
^.114IA^1^1
"IX",162.5,162.5,"AFC",11.1,1,0)
1^F^162.5^56^32^1^F
"IX",162.5,162.5,"AFC",11.1,1,3)

"IX",162.7,162.7,"AFC",0)
162.7^AFC^Cross-reference on FPPS CLAIM ID.^R^^F^IR^I^162.7^^^^^S
"IX",162.7,162.7,"AFC",.1,0)
^^2^2^3030618^
"IX",162.7,162.7,"AFC",.1,1,0)
This is a regular cross-reference on the FPPS CLAIM ID (1-32 
"IX",162.7,162.7,"AFC",.1,2,0)
characters long).
"IX",162.7,162.7,"AFC",1)
S ^FB583("AFC",$E(X,1,32),DA)=""
"IX",162.7,162.7,"AFC",2)
K ^FB583("AFC",$E(X,1,32),DA)
"IX",162.7,162.7,"AFC",2.5)
K ^FB583("AFC")
"IX",162.7,162.7,"AFC",11.1,0)
^.114IA^1^1
"IX",162.7,162.7,"AFC",11.1,1,0)
1^F^162.7^32^32^1^F
"KRN",.402,362,-1)
0^3
"KRN",.402,362,0)
FBCH ENTER PAYMENT^3031008.1348^^162.5^^^3031009
"KRN",.402,362,"DR",1,162.5)
1////^S X=FBAAID;46////^S X=FBAAVID;55///^S X=FBCSID;56///^S X=$G(FBFPPSC);57///^S X=$G(FBFPPSL);47////^S X=FBAAMM1;2////^S X=FBVEN;3////^S X=FBVET;4////^S X=FBI7078;5////^S X=FBAABDT;6////^S X=FBAAEDT;23////^S X=FBPSA;
"KRN",.402,362,"DR",1,162.5,1)
21////^S X=FBPOV;22////^S X=FBPT;11////^S X=FBTYPE;12////^S X=FBAAPTC;20////^S X=FBAABE;W !;6.5;54//^S X=$G(FBCDAYS);6.6;I 1;7;S FBAMTC=X;I $G(FBEXMPT)'="Y" S Y="@25";S:FBI7078'["FB583" Y=8;S:'$P($G(^FB583(+FBI7078,0)),U,28) Y=8;
"KRN",.402,362,"DR",1,162.5,2)
W !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725.";8;S FBAMTP=X;I FBAMTC=FBAMTP S Y="@25";S FBX=$$ADJ^FBUTL2(FBAMTC-FBAMTP,.FBADJ,1,,,1);@20;I $G(FBEXMPT)="Y" S Y="@25";@26;24;
"KRN",.402,362,"DR",1,162.5,3)
I $$INPICD^FBCSV1(X,$G(DA),FBAABDT) S Y="@26";@25;6.7;I 1;@30;30;I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@30";@35;31;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@35";@40;32;S:X="" Y=40;
"KRN",.402,362,"DR",1,162.5,4)
I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@40";@45;33;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@45";@50;34;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA),FBAABDT) S Y="@50";@55;40;S:X="" Y="@99";
"KRN",.402,362,"DR",1,162.5,5)
I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@55";@60;41;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@60";@65;42;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@65";@70;43;S:X="" Y="@99";
"KRN",.402,362,"DR",1,162.5,6)
I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@70";@75;44;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA),FBAABDT) S Y="@75";@99;I $D(^FBAAI(DA,"DX")),$P(^("DX"),U)="" W !!,*7,"The 'ICD1' field is a manditory field!",! S Y="@30";
"KRN",.402,362,"DR",1,162.5,7)
I $G(FBEXMPT)'="Y" S Y="@992";S FBX=$$RR^FBUTL4(.FBRRMK,2);@992;25////^S X=FBRESUB;
"KRN",.402,363,-1)
0^5
"KRN",.402,363,0)
FBCH EDIT PAYMENT^3031008.1345^^162.5^^^3031009
"KRN",.402,363,"DIAB",5,0,162.5,3)
24;REQ
"KRN",.402,363,"DIAB",7,0,162.5,3)
24.5;REQ
"KRN",.402,363,"DR",1,162.5)
1;Q;Q;I 1;46;55;S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);S:FBX=-1 Y=0;S:FBX="" Y="@10";56///^S X=FBX;S FBFPPSC=X;S FBX=$$FPPSL^FBUTL5(FBFPPSL,1);S:FBX=-1 Y=0;57///^S X=FBX;S FBFPPSL=X;S Y="@14";@10;56///@;S FBFPPSC="";57///@;S FBFPPSL="";
"KRN",.402,363,"DR",1,162.5,1)
@14;S FBAAMM=1;D PPT^FBAACO1();47////@;47///^S X=FBAAMM1;6.5;54;6.6;I 1;6.7;S DIE("NO^")="NO QUIT";7;S:$D(FBPRICE) Y="@25";S FBJJ=X;I $G(FBEXMPT)="Y" S Y="@20";26;S FBPAMT=X;@20;
"KRN",.402,363,"DR",1,162.5,2)
W:FB1725 !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725.";W:FB1725&($G(FBPAMT)>0) !?2,"  70% of Pricer Amount = "_$J(.7*FBPAMT,0,2);8;S FBKK=X;K FBADJD;M FBADJD=FBADJ;
"KRN",.402,363,"DR",1,162.5,3)
S FBX=$$ADJ^FBUTL2(FBJJ-FBKK,.FBADJ,1,,.FBADJD,1);K FBADJD;I $G(FBEXMPT)="Y" S Y=30;@26;24R~;I $$INPICD^FBCSV1(X,$G(DA)) S Y="@26";24.5R~;@25;30;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@25";@30;31;S:X="" Y=40;
"KRN",.402,363,"DR",1,162.5,4)
I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@30";@35;32;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@35";@40;33;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@40";@45;34;S:X="" Y=40;I $$INPICD9^FBCSV1(X,$G(DA)) S Y="@45";@50;40;
"KRN",.402,363,"DR",1,162.5,5)
S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA)) S Y="@50";@55;41;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA)) S Y="@55";@60;42;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA)) S Y="@60";@65;43;S:X="" Y="@99";
"KRN",.402,363,"DR",1,162.5,6)
I $$INPICD0^FBCSV1(X,$G(DA)) S Y="@65";@70;44;S:X="" Y="@99";I $$INPICD0^FBCSV1(X,$G(DA)) S Y="@70";@99;S:$D(FBPRICE) Y="@992";K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD);K FBRRMKD;@992;
"KRN",.402,363,"DR",1,162.5,7)
K FBJJ,FBKK,DIE("NO^"),FBX;
"KRN",.402,690,-1)
0^6
"KRN",.402,690,0)
FBNH EDIT PAYMENT^3030708.1638^^162.5^^^3030708
"KRN",.402,690,"DIAB",3,0,162.5,0)
1;"(whichever is later)"
"KRN",.402,690,"DIAB",4,0,162.5,4)
20;REQ
"KRN",.402,690,"DIAB",5,0,162.5,4)
21;REQ
"KRN",.402,690,"DIAB",6,0,162.5,4)
22;REQ
"KRN",.402,690,"DIAB",7,0,162.5,4)
23;REQ
"KRN",.402,690,"DR",1,162.5)
@1;W !!,"Enter Date Correct Invoice Received or Last Date of Service";1(whichever is later)~;I $P(^FBAAI(DA,0),U,7)>X W !?4,"Invoice date cannot be before Treatment To Date.",! S Y="@1";46;55;S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);
"KRN",.402,690,"DR",1,162.5,1)
S:FBX=-1 Y="@11";S:FBX="" Y="@10";56///^S X=FBX;S FBFPPSC=X;S FBX=$$FPPSL^FBUTL5(FBFPPSL,1,1);57///^S X=FBX;S FBFPPSL=X;S Y="@11";@10;56///@;S FBFPPSC="";57///@;S FBFPPSL="";@11;2;3;5;6;
"KRN",.402,690,"DR",1,162.5,2)
I $P(^FBAAI(DA,0),U,6)>X W !,*7,"To date cannot be before from date.",! S Y=5;54;@12;S FBHAC=$P(^FBAAI(DA,0),U,8);7;S FBAC=X;S FBHAP=$P(^FBAAI(DA,0),U,9);8;S FBAP=X;
"KRN",.402,690,"DR",1,162.5,3)
I FBAP>FBAC S $P(^FBAAI(DA,0),U,9)=FBHAP,$P(^(0),U,8)=FBHAC W !,*7,"Amount Paid cannot be greater than the Amount Claimed" S Y="@12";S FBBAL=FBAC-FBAP;Q;K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(FBAC-FBAP,.FBADJ,1,,.FBADJD,1);
"KRN",.402,690,"DR",1,162.5,4)
K FBADJD;12////^S X="V";S DIE("NO^")="OUTOK";20R~;21R~;22R~;23R~;K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD);K FBRRMKD;
"KRN",.402,1179,-1)
0^1
"KRN",.402,1179,0)
FB UNAUTHORIZED ENTER^3030625.1826^^162.7^^^3030911
"KRN",.402,1179,"%D",0)
^^1^1^2931012^^
"KRN",.402,1179,"%D",1,0)
Enter unauthorized claim
"KRN",.402,1179,"DIAB",1,1,162.715,0)
ALL
"KRN",.402,1179,"DIAB",4,0,162.7,3)
6;REQ
"KRN",.402,1179,"DIAB",5,0,162.7,4)
12//^S X=FBX;REQ
"KRN",.402,1179,"DIAB",6,0,162.7,3)
9;T;DUP
"KRN",.402,1179,"DIAB",7,0,162.7,4)
13//^S X=$S(FBDISP=1:FBTTO,1:"");REQ
"KRN",.402,1179,"DR",1,162.7)
S:'$D(FBVET)!('$D(FBVEN))!('$D(FBMASTER))!('$D(FBORDER))!('$D(FBTFROM))!('$D(FBTTO))!('$D(FBOK))!('$D(FBPR))!('$D(FBDA))!('$D(FBUC))!('$D(FBINENT)) Y="@999";2////^S X=FBVET;S:'FBVEN&(FBINENT) Y="@51";1////^S X=FBVEN;@51;
"KRN",.402,1179,"DR",1,162.7,1)
.5////^S X=FBPR;S:$G(FBFPPSC)="" Y="@513";32///^S X=FBFPPSC;@513;S:FB1725'=1 Y="@515";31////^S X=FB1725;@515;3///^S X=FBTFROM;S:'FBTTO&(FBINENT) Y="@52";4///^S X=FBTTO;@52;24////^S X=$$STATUS^FBUCUTL(FBORDER);20////^S X=FBMASTER;
"KRN",.402,1179,"DR",1,162.7,2)
27////^S X=DUZ;28///^S X=DT;S:'FBOK Y="@1";7///^S X=DT;@1;S:'FBVEN&(FBINENT) Y="@53";23;@53;.01;W:$$DTC^FBUCUTL(X,FBTTO)>90&FB1725 !!,"Warning: Claim > 90 days",!;S:FBPR=7 FBX=3,Y="@4";
"KRN",.402,1179,"DR",1,162.7,3)
S:$$DTC^FBUCUTL(DT,$S(FBPR=6!(FBPR=7):DT,1:FBTFROM))>730&'FB1725 FBX=6,Y="@4";S:$P(FBUC,U,7) Y="@999";5;6R~;8;9d~T~;S:'FBOK!($D(^FBAA(162.8,"ACD",FBDA))) Y="@99";10;S FBDISP=X;10.5;S:FBDISP FBORDER=40;
"KRN",.402,1179,"DR",1,162.7,4)
S Y=$S(FBDISP=1!(FBDISP=4):"@2",FBDISP=2:"@3",1:"@99");@2;S FBZDAYS=$$CDTC^FBUCUTL(+$G(^FB583(DA,0)),-731);S FBX=$S(FBTTO>FBZDAYS&(FBTFROM<FBZDAYS):FBZDAYS,1:FBTFROM);12R~//^S X=FBX;K FBX,FBZDAYS;13R~//^S X=$S(FBDISP=1:FBTTO,1:"");
"KRN",.402,1179,"DR",1,162.7,5)
S Y="@99";@3;15;S Y="@99";@4;D UNTIME^FBUCUTL(FBX);10////^S X=2;D DISAP^FBUCUTL(DA,FBX);S FBORDER=40;@99;S:FBORDER'=40 Y="@999";24////^S X=$$STATUS^FBUCUTL(FBORDER);@999;K FBDISP,FBX;
"KRN",.402,1179,"DR",2,162.715)
.01
"KRN",.402,1190,-1)
0^2
"KRN",.402,1190,0)
FB UNAUTHORIZED EDIT^3030626.1133^@^162.7^^@^3030909
"KRN",.402,1190,"%D",0)
^^1^1^2931012^^
"KRN",.402,1190,"%D",1,0)
Modify/reopen an unauthorized claim
"KRN",.402,1190,"DIAB",1,0,162.7,6)
13;REQ
"KRN",.402,1190,"DIAB",1,1,162.715,0)
ALL
"KRN",.402,1190,"DIAB",2,0,162.7,4)
12;REQ
"KRN",.402,1190,"DR",1,162.7)
S:'$$EDOK^FBUCUTL3(DA,1) Y="@89";S:'$D(FBUCP)!('$D(FBACT)) Y="@99";S DIE("NO^")="BACKOUTOK";S:FBACT'="REO" Y=.01;21///^S X=DT;.01;S Y=$S(FBACT'="REO":"@51",$$PAY^FBUCUTL(DA,"FB583("):"@55",1:"@51");@51;.5;
"KRN",.402,1190,"DR",1,162.7,1)
S FBX=$P($G(^FB583(DA,5)),U);S FBX=$$FPPSC^FBUTL5(1,FBX);S:FBX=-1 Y=0;S:FBX="" Y="@514";32///^S X=FBX;S Y="@516";@514;32///@;@516;K FBX;31;1;S:FBACT="REO" Y="@53";2;@53;23;S DIE("NO^")="BACK";3;4;5;6;8;9;@55;S DIE("NO^")="BACK";
"KRN",.402,1190,"DR",1,162.7,2)
S:$$ORDER^FBUCUTL(+$P(FBUCP,U,24))=5 Y="@99";S FBDISP(0)=$G(^FB583(DA,0)),FBDISP("FRTO")=$P(FBDISP(0),U,5,6),FBDISP("FR")=$P(FBDISP("FRTO"),U),FBDISP("TO")=$P(FBDISP("FRTO"),U,2);10;S FBDISP=X;
"KRN",.402,1190,"DR",1,162.7,3)
S Y=$S(FBDISP="":"@99",'(FBDISP=1!(FBDISP=4)):"@1",1:"@10");@10;10.5;S FBZDAYS=$$CDTC^FBUCUTL($P(FBDISP(0),U),-731);S FBX=$S(FBDISP("TO")>FBZDAYS&(FBDISP("FR")<FBZDAYS):FBZDAYS,1:FBDISP("FR"));
"KRN",.402,1190,"DR",1,162.7,4)
12///^S X=$S($P(FBUCP,U,13)&($P(FBUCP,U,13)'>FBDISP("FR")):$P(FBUCP,U,13),1:FBX);12R~;K FBX,FBZDAYS;S Y=$S('$P(FBUCP,U,14):"@13",FBDISP=4&(FBDISP'=$P(FBUCP,U,11)):"@12",FBDISP=4:"@13",1:"@11");@11;
"KRN",.402,1190,"DR",1,162.7,5)
13///^S X=$S($P(FBUCP,U,14)&($P(FBUCP,U,14)'>FBDISP("TO")):$P(FBUCP,U,14),1:FBDISP("TO"));S Y="@13";@12;13///@;@13;13///^S X=$S(FBDISP=1&($P(FBUCP,U,14))&($P(FBUCP,U,14)'>FBDISP("TO")):$P(FBUCP,U,14),FBDISP=1:FBDISP("TO"),1:"");
"KRN",.402,1190,"DR",1,162.7,6)
13R~;@89;S Y="@99";@1;10.5;15;12///@;13///@;14///@;@99;K FBDISP,DIE("NO^");
"KRN",.402,1190,"DR",2,162.715)
.01
"KRN",.402,1219,-1)
0^4
"KRN",.402,1219,0)
FB ADD RX^3030708.1829^^162.1^^^3030827
"KRN",.402,1219,"%D",0)
^^1^1^2931012^
"KRN",.402,1219,"%D",1,0)
Add pharmacy prescription
"KRN",.402,1219,"DR",1,162.1)
S:'$D(FBDA)!('$D(DATEF))!('$D(DFN))!('$D(FBPSA))!('$D(FB7078))!('$D(FBASSOC))!('$D(FBAAPTC)) Y="";K FBUP;4///^S X="`"_+FBDA;@99;
"KRN",.402,1219,"DR",2,162.11)
S:$G(FBFPPSL)="" Y="@20";36///^S X=FBFPPSL;@20;2///^S X=DATEF;4////^S X=DFN;25////^S X=FBPSA;S Y=$S($D(FBV583):"@1",1:"@2");@1;S:FBV583']"" Y="@3";26////^S X=FBV583;S Y="@3";@2;S:FB7078']"" Y="@3";26////^S X=FB7078;@3;
"KRN",.402,1219,"DR",2,162.11,1)
27///^S X=FBASSOC;16///^S X=FBAAPTC;3;S AC=X;1;1.4;1.5;1.6;8///^S X=1;S FBUP=1;
"KRN",19,441,-1)
2^5
"KRN",19,441,0)
FBAA SUPERVISOR OPTIONS^Supervisor Main Menu^^M^.5^FBAASUPERVISOR^^^^^^
"KRN",19,441,10,0)
^19.01IP^28^28
"KRN",19,441,10,28,0)
11757
"KRN",19,441,10,28,"^")
FB FPPS UPDATE MENU
"KRN",19,441,"U")
SUPERVISOR MAIN MENU
"KRN",19,463,-1)
2^9
"KRN",19,463,0)
FBAA PHARMACY MAIN MENU^Pharmacy Fee Main Menu^^M^.5^^^^^^^^^1
"KRN",19,463,10,0)
^19.01IP^18^18
"KRN",19,463,10,18,0)
11778
"KRN",19,463,10,18,"^")
FB FPPS CLAIM INQ
"KRN",19,463,"U")
PHARMACY FEE MAIN MENU
"KRN",19,624,-1)
2^8
"KRN",19,624,0)
FBAA OUTPUTS MENU^Outputs Main Menu^^M^.5^^^^^^^
"KRN",19,624,10,0)
^19.01IP^22^22
"KRN",19,624,10,22,0)
11778
"KRN",19,624,10,22,"^")
FB FPPS CLAIM INQ
"KRN",19,624,"U")
OUTPUTS MAIN MENU
"KRN",19,1300,-1)
2^10
"KRN",19,1300,0)
FBCH OUTPUT MENU^Output Menu^^M^.5^^^^^^^
"KRN",19,1300,10,0)
^19.01IP^20^20
"KRN",19,1300,10,20,0)
11778
"KRN",19,1300,10,20,"^")
FB FPPS CLAIM INQ
"KRN",19,1300,"U")
OUTPUT MENU
"KRN",19,2289,-1)
2^11
"KRN",19,2289,0)
FBCNH OUTPUTS MAIN MENU^Output Main Menu - CNH^^M^.5^^^^^^^
"KRN",19,2289,10,0)
^19.01IP^26^26
"KRN",19,2289,10,26,0)
11778
"KRN",19,2289,10,26,"^")
FB FPPS CLAIM INQ
"KRN",19,2289,"U")
OUTPUT MAIN MENU - CNH
"KRN",19,4040,-1)
2^12
"KRN",19,4040,0)
FBUC OUTPUTS^Outputs for Unauthorized Claims^^M^.5^^^^^^^
"KRN",19,4040,10,0)
^19.01IP^11^11
"KRN",19,4040,10,11,0)
11778
"KRN",19,4040,10,11,"^")
FB FPPS CLAIM INQ
"KRN",19,4040,"U")
OUTPUTS FOR UNAUTHORIZED CLAIM
"KRN",19,11757,-1)
0^4
"KRN",19,11757,0)
FB FPPS UPDATE MENU^FPPS Update & Transmit Menu^^M^^^^^^^^FEE BASIS
"KRN",19,11757,1,0)
^19.06^2^2^3030825^^^^
"KRN",19,11757,1,1,0)
Menu for fee supervisor options that are related to the interface with the
"KRN",19,11757,1,2,0)
FPPS system.
"KRN",19,11757,10,0)
^19.01IP^7^7
"KRN",19,11757,10,1,0)
11758^^1
"KRN",19,11757,10,1,"^")
FBAA FPPS EDIT INVOICE
"KRN",19,11757,10,2,0)
11759^^3
"KRN",19,11757,10,2,"^")
FBCH FPPS EDIT INVOICE
"KRN",19,11757,10,3,0)
11760^^2
"KRN",19,11757,10,3,"^")
FBRX FPPS EDIT INVOICE
"KRN",19,11757,10,4,0)
11761^^4
"KRN",19,11757,10,4,"^")
FB FPPS AUDIT REPORT
"KRN",19,11757,10,5,0)
11794^^5
"KRN",19,11757,10,5,"^")
FB FPPS TRANSMIT
"KRN",19,11757,10,6,0)
11826^^6
"KRN",19,11757,10,6,"^")
FB FPPS TRANSMIT REPORT
"KRN",19,11757,10,7,0)
11827^^7
"KRN",19,11757,10,7,"^")
FB FPPS PURGE
"KRN",19,11757,99)
59441,58839
"KRN",19,11757,"U")
FPPS UPDATE & TRANSMIT MENU
"KRN",19,11758,-1)
0^1
"KRN",19,11758,0)
FBAA FPPS EDIT INVOICE^Outpatient/Ancillary Invoice Edit^^R^^FBAASUPERVISOR^^^^^^FEE BASIS
"KRN",19,11758,1,0)
^19.06^3^3^3030731^^
"KRN",19,11758,1,1,0)
This option is used to edit an outpatient or ancillary invoice that has
"KRN",19,11758,1,2,0)
previously been transmitted to FPPS.  If changes are made, the invoice
"KRN",19,11758,1,3,0)
will be queued to be resent to FPPS.
"KRN",19,11758,25)
FBAAFED
"KRN",19,11758,"U")
OUTPATIENT/ANCILLARY INVOICE E
"KRN",19,11759,-1)
0^2
"KRN",19,11759,0)
FBCH FPPS EDIT INVOICE^Inpatient Invoice Edit^^R^^FBAASUPERVISOR^^^^^^FEE BASIS
"KRN",19,11759,1,0)
^^3^3^3030718^
"KRN",19,11759,1,1,0)
This option is used to edit an inpatient (civil hospital or community 
"KRN",19,11759,1,2,0)
nursing home) invoice that has previously been transmitted to FPPS.  If
"KRN",19,11759,1,3,0)
changes are made, the invoice will be queued to be resent to FPPS.
"KRN",19,11759,25)
FBCHFED
"KRN",19,11759,"U")
INPATIENT INVOICE EDIT
"KRN",19,11760,-1)
0^3
"KRN",19,11760,0)
FBRX FPPS EDIT INVOICE^Pharmacy Invoice Edit^^R^^FBAASUPERVISOR^^^^^^FEE BASIS
"KRN",19,11760,1,0)
^19.06^3^3^3030808^^
"KRN",19,11760,1,1,0)
This option is used to edit a pharmacy invoice that has previously been
"KRN",19,11760,1,2,0)
transmitted to FPPS.  If changes are made, the invoice will be queued to
"KRN",19,11760,1,3,0)
be resent to FPPS.
"KRN",19,11760,25)
FBRXFED
"KRN",19,11760,"U")
PHARMACY INVOICE EDIT
"KRN",19,11761,-1)
0^6
"KRN",19,11761,0)
FB FPPS AUDIT REPORT^Audit Report for FPPS Data^^R^^^^^^^^FEE BASIS
"KRN",19,11761,1,0)
^^4^4^3030718^
"KRN",19,11761,1,1,0)
This option generates a report from the FEE BASIS FPPS AUDIT file.  This 
"KRN",19,11761,1,2,0)
file contains an audit log of changes made to an invoice using special
"KRN",19,11761,1,3,0)
edit options.  The options allow editing of selected data after the
"KRN",19,11761,1,4,0)
invoice has been transmitted to FPPS to resolve exceptions.
"KRN",19,11761,25)
FBFPAR
"KRN",19,11761,"U")
AUDIT REPORT FOR FPPS DATA
"KRN",19,11778,-1)
0^7
"KRN",19,11778,0)
FB FPPS CLAIM INQ^FPPS Claim Inquiry^^R^^^^^^^^FEE BASIS
"KRN",19,11778,1,0)
^19.06^2^2^3030807^^
"KRN",19,11778,1,1,0)
This option lists VistA invoices and unauthorized claims that are 
"KRN",19,11778,1,2,0)
associated with a user-specified FPPS Claim ID.
"KRN",19,11778,25)
FBFPCI
"KRN",19,11778,"U")
FPPS CLAIM INQUIRY
"KRN",19,11794,-1)
0^13
"KRN",19,11794,0)
FB FPPS TRANSMIT^Transmit Invoices to FPPS^^R^^FBAASUPERVISOR^^^^^^FEE BASIS^y
"KRN",19,11794,1,0)
^^12^12^3030825^
"KRN",19,11794,1,1,0)
This option transmits invoice data to the Fee Payment Processing System 
"KRN",19,11794,1,2,0)
(FPPS) located at the Health Administration Center (HAC) so FPPS can 
"KRN",19,11794,1,3,0)
send electronic remittance advice to the vendor for claims that were 
"KRN",19,11794,1,4,0)
electronically submitted to VA.
"KRN",19,11794,1,5,0)
 
"KRN",19,11794,1,6,0)
This option can be scheduled (with no output device needed) or it can be
"KRN",19,11794,1,7,0)
run interactively from a menu. If scheduled, it will transmit all pending
"KRN",19,11794,1,8,0)
invoices. If run interactively, the user is given an option to transmit a
"KRN",19,11794,1,9,0)
selected invoice or all pending invoices.  If necessary, an invoice that
"KRN",19,11794,1,10,0)
has been previously sent to FPPS can be re-transmitted by selecting it.  
"KRN",19,11794,1,11,0)
When all pending invoices are sent, a summary message will be mailed to
"KRN",19,11794,1,12,0)
the FEE mail group.
"KRN",19,11794,25)
EN^FBFHLX
"KRN",19,11794,200.9)
y
"KRN",19,11794,"U")
TRANSMIT INVOICES TO FPPS
"KRN",19,11826,-1)
0^14
"KRN",19,11826,0)
FB FPPS TRANSMIT REPORT^Report of Transmissions to FPPS^^R^^^^^^^^FEE BASIS
"KRN",19,11826,1,0)
^^14^14^3030910^
"KRN",19,11826,1,1,0)
This option generates a report of fee invoices transmitted to the VistA
"KRN",19,11826,1,2,0)
HL7 package for delivery to the Fee Payment Processing System (FPPS) at
"KRN",19,11826,1,3,0)
the Health Administration Center (HAC).
"KRN",19,11826,1,4,0)
 
"KRN",19,11826,1,5,0)
Note that the count displayed under the Accepted By Interface Engine
"KRN",19,11826,1,6,0)
column will only reflect acknowledgements received prior to the most
"KRN",19,11826,1,7,0)
recent transmit of all pending invoices.  This is because the check for
"KRN",19,11826,1,8,0)
acknowledgements is performed at the beginning of the transmit all pending
"KRN",19,11826,1,9,0)
process.  Therefore, if the user-specified period includes the date of the
"KRN",19,11826,1,10,0)
most recent transmit, the recently transmitted invoices will be included
"KRN",19,11826,1,11,0)
in the counts under the Payment Confirm and Payment Cancelled columns, but
"KRN",19,11826,1,12,0)
not under the Accepted By Interface Engine column.  This is because VistA
"KRN",19,11826,1,13,0)
Fee Basis will not yet have checked to see if those invoices were
"KRN",19,11826,1,14,0)
acknowledged.
"KRN",19,11826,25)
FBFPTR
"KRN",19,11826,"U")
REPORT OF TRANSMISSIONS TO FPP
"KRN",19,11827,-1)
0^15
"KRN",19,11827,0)
FB FPPS PURGE^Purge Message Text^^R^^FBAASUPERVISOR^^^^^^FEE BASIS
"KRN",19,11827,1,0)
^19.06^7^7^3030909^^
"KRN",19,11827,1,1,0)
When an invoice is transmitted to FPPS via the HL7 package, a copy of the 
"KRN",19,11827,1,2,0)
HL7 message text is saved in the FPPS QUEUED INVOICES (#163.5) file.
"KRN",19,11827,1,3,0)
 
"KRN",19,11827,1,4,0)
This option purges the message text for invoices transmitted prior to a
"KRN",19,11827,1,5,0)
specified date.  Messages that have not been accepted by the VistA 
"KRN",19,11827,1,6,0)
Interface Engine will not be purged unless there is a later message for
"KRN",19,11827,1,7,0)
the same invoice number that has been accepted.
"KRN",19,11827,25)
FBFHLP
"KRN",19,11827,"U")
PURGE MESSAGE TEXT
"KRN",101,3510,-1)
0^1
"KRN",101,3510,0)
FB FEE TO FPPS EVENT^^^E^^^^^^^^
"KRN",101,3510,770)
FB FEE-FPPS^^ORM^O01^^^^AL^NE^2.4^
"KRN",101,3510,772)
QUIT
"KRN",101,3510,775,0)
^101.0775PA^1^1
"KRN",101,3510,775,1,0)
3511
"KRN",101,3510,775,1,"^")
FB FEE TO FPPS SUBSCRIBER
"KRN",101,3511,-1)
0^2
"KRN",101,3511,0)
FB FEE TO FPPS SUBSCRIBER^^^S^^^^^^^^
"KRN",101,3511,770)
^FB CPE FPPS^^^^^FBFEE-FPPS^^^^ACK
"KRN",101,3511,771)
Q
"KRN",101,3511,773)
1
"KRN",771,87,-1)
0^2
"KRN",771,87,0)
FB FEE-FPPS^a^^^^^USA
"KRN",771,87,"EC")
^~\&
"KRN",771,87,"FS")
|
"KRN",771,87,"MSG",0)
^771.06P^1^1
"KRN",771,87,"MSG",1,0)
MSA
"KRN",771,87,"SEG",0)
^771.05P^2^2
"KRN",771,87,"SEG",1,0)
ORC
"KRN",771,87,"SEG",1,"F")
5,7,9,13,15
"KRN",771,87,"SEG",2,0)
FT1
"KRN",771,87,"SEG",2,"F")
2,3,4,6,7,10,11,13,19,23,25,26
"KRN",771,88,-1)
0^1
"KRN",771,88,0)
FB CPE FPPS^a^^^^^USA
"KRN",771,88,"EC")
^~\&
"KRN",771,88,"FS")
|
"KRN",870,58,-1)
0^1
"KRN",870,58,0)
FBFEE-FPPS^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,58,200)
^^^^^^^^^R
"KRN",870,58,400)
^9257^C^N^^
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",60,-1)
1^1
"PKG",60,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",60,20,0)
^9.402P^1^1
"PKG",60,20,1,0)
2^^FBPMRG
"PKG",60,20,1,1)

"PKG",60,20,"B",2,1)

"PKG",60,22,0)
^9.49I^1^1
"PKG",60,22,1,0)
3.5^2950130^2950313
"PKG",60,22,1,"PAH",1,0)
61^3031009^12222
"PKG",60,22,1,"PAH",1,1,0)
^^4^4^3031009
"PKG",60,22,1,"PAH",1,1,1,0)
This patch contains enhancements for Fee Basis related to VA compliance
"PKG",60,22,1,"PAH",1,1,2,0)
with the HIPAA transaction and code set final rule.  This patch will
"PKG",60,22,1,"PAH",1,1,3,0)
support the new Fee Payment Processing System (FPPS) located at the Health
"PKG",60,22,1,"PAH",1,1,4,0)
Administration Center (HAC) in Denver.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
66
"RTN","FBAACCB")
0^40^B27997398
"RTN","FBAACCB",1,0)
FBAACCB ;AISC/GRR-CLERK CLOSE BATCH ;8/7/2003
"RTN","FBAACCB",2,0)
 ;;3.5;FEE BASIS;**4,61**;JAN 30, 1995
"RTN","FBAACCB",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACCB",4,0)
 K QQ D DT^DICRW
"RTN","FBAACCB",5,0)
BT W !! S DIC="^FBAA(161.7,",DIC(0)="AEQ",DIC("S")=$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):"I $G(^(""ST""))=""O""",1:"I $P(^(0),U,5)=DUZ&($G(^(""ST""))=""O"")") D ^DIC K DIC("S")
"RTN","FBAACCB",6,0)
 G Q^FBAACCB0:X="^"!(X=""),BT:Y<0 S B=+Y,FZ=^FBAA(161.7,B,0),FBTYPE=$P(FZ,"^",3)
"RTN","FBAACCB",7,0)
 I FBTYPE="B3",'$D(^FBAAC("AC",B)) W !!,*7,"No payments in Batch yet!",! G BT
"RTN","FBAACCB",8,0)
 I FBTYPE="B2",'$D(^FBAAC("AD",B)) W !!,*7,"No Payments in Batch yet!",! G BT
"RTN","FBAACCB",9,0)
 I FBTYPE="B5",'$D(^FBAA(162.1,"AE",B)) W !!,*7,"No Payments in Batch yet!",! G BT
"RTN","FBAACCB",10,0)
 I FBTYPE="B9",'$D(^FBAAI("AC",B)) W !!,*7,"No Payments in Batch yet!",! G BT
"RTN","FBAACCB",11,0)
RDD S DIR(0)="Y",DIR("A")="Want to review batch",DIR("B")="NO",DIR("?")="If you want a detail list of each payment line, answer ""Yes"" otherwise press Return key" D ^DIR K DIR
"RTN","FBAACCB",12,0)
 G BT:$D(DIRUT) W:Y @IOF D:Y LIST:FBTYPE="B3",LISTP:FBTYPE="B5",LISTT^FBAACCB0:FBTYPE="B2",LISTC^FBAACCB1:FBTYPE="B9"
"RTN","FBAACCB",13,0)
RDD1 S DIR(0)="Y",DIR("A")="Do you still want to close Batch",DIR("B")="YES" D ^DIR K DIR G BT:'Y!$D(DIRUT)
"RTN","FBAACCB",14,0)
 S C=0,T=0 G PHARM^FBAACCB1:FBTYPE="B5",TRAV^FBAACCB1:FBTYPE="B2",CHNH^FBAACCB1:FBTYPE="B9"
"RTN","FBAACCB",15,0)
 F J=0:0 S J=$O(^FBAAC("AC",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AC",B,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AC",B,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AC",B,J,K,L,M)) Q:M'>0  D GOT
"RTN","FBAACCB",16,0)
FIN S $P(FZ,"^",9)=T,$P(FZ,"^",11)=C
"RTN","FBAACCB",17,0)
 S $P(FZ,"^",13)=DT,^FBAA(161.7,B,0)=FZ,^FBAA(161.7,B,"ST")="C",^FBAA(161.7,"AC","C",B)="",DA=B,DR="0;ST" K ^FBAA(161.7,"AC","O",B),^FBAA(161.7,"AB","O",$P(^FBAA(161.7,B,0),"^",5),B) W !! D EN^DIQ W !!,"Batch Closed" G BT
"RTN","FBAACCB",18,0)
GOT S Y(0)=$G(^FBAAC(J,1,K,1,L,1,M,0)),FBIN=$P(Y(0),"^",16)
"RTN","FBAACCB",19,0)
 I $P(Y(0),"^",3)>0 S T=T+$P(Y(0),"^",3),C=C+1
"RTN","FBAACCB",20,0)
 Q
"RTN","FBAACCB",21,0)
LIST S Q="",$P(Q,"=",80)="="
"RTN","FBAACCB",22,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBAACCB",23,0)
ENM D HED S (FBIN,FBINOLD)="",(FBAAOUT,FBINTOT)=0 F XY=0:0 S FBIN=$O(^FBAAC("AJ",B,FBIN)) Q:FBIN=""!($G(FBAAOUT))  D INTOT^FBAACCB0 F J=0:0 S J=$O(^FBAAC("AJ",B,FBIN,J)) Q:J'>0!($G(FBAAOUT))  D GMORE^FBAACCB0
"RTN","FBAACCB",24,0)
 I '$G(FBAAOUT) S FBIN=0 D INTOT^FBAACCB0
"RTN","FBAACCB",25,0)
 Q
"RTN","FBAACCB",26,0)
SET ;
"RTN","FBAACCB",27,0)
 N FBADJLA,FBADJLR,FBFPPSC,FBFPPSL,FBX,FBY3,TAMT
"RTN","FBAACCB",28,0)
 S N=$S($D(^DPT(J,0)):$P(^DPT(J,0),"^",1),1:""),S=$S(N]"":$P(^DPT(J,0),"^",9),1:""),V=$S($D(^FBAAV(K,0)):$P(^FBAAV(K,0),"^",1),1:""),VID=$S(V]"":$P(^(0),"^",2),1:"")
"RTN","FBAACCB",29,0)
 S D=+$G(^FBAAC(J,1,K,1,L,0)) Q:'D
"RTN","FBAACCB",30,0)
 S Y=$G(^FBAAC(J,1,K,1,L,1,M,0)) Q:Y']""
"RTN","FBAACCB",31,0)
 S FBY3=$G(^FBAAC(J,1,K,1,L,1,M,3))
"RTN","FBAACCB",32,0)
 S FBFPPSC=$P(FBY3,U)
"RTN","FBAACCB",33,0)
 S FBFPPSL=$P(FBY3,U,2)
"RTN","FBAACCB",34,0)
 S FBX=$$ADJLRA^FBAAFA(M_","_L_","_K_","_J_",")
"RTN","FBAACCB",35,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBAACCB",36,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBAACCB",37,0)
 S T=$P(Y,"^",5),FBIN=$P(Y,"^",16),ZS=$P(Y,"^",20)
"RTN","FBAACCB",38,0)
 S TAMT=$FN($P(Y,"^",4),"",2)
"RTN","FBAACCB",39,0)
 S FBVP=$S($P(Y,"^",21)="VP":"#",1:"")
"RTN","FBAACCB",40,0)
 S FBAACPT=$$CPT^FBAAUTL4($P(Y,U))
"RTN","FBAACCB",41,0)
 S CPTDESC=$$CPT^FBAAUTL4($P(Y,U),1)
"RTN","FBAACCB",42,0)
 S FBVCHDT=$P(Y,"^",6),FBIN(1)=$P(Y,"^",15) D FBCKO^FBAACCB2(J,K,L,M)
"RTN","FBAACCB",43,0)
 S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",""M"")","E")
"RTN","FBAACCB",44,0)
GO S A1=$P(Y,"^",2)+.0001,A2=$P(Y,"^",3)+.0001,A1=$P(A1,".",1)_"."_$E($P(A1,".",2),1,2),A2=$P(A2,".",1)_"."_$E($P(A2,".",2),1,2),FBINTOT=FBINTOT+A2
"RTN","FBAACCB",45,0)
 D WRT:FBTYPE'="B2",WRTT^FBAACCB0:FBTYPE="B2"
"RTN","FBAACCB",46,0)
 Q
"RTN","FBAACCB",47,0)
WRT I $Y+8>IOSL D ASKH^FBAACCB0:$E(IOST,1,2)["C-" Q:FBAAOUT  W @IOF D HED
"RTN","FBAACCB",48,0)
 S B(1617)=$S(B="":"",$D(^FBAA(161.7,B,0)):$P(^(0),"^"),1:"")
"RTN","FBAACCB",49,0)
 W !!,N,?35,$$SSN^FBAAUTL(J),?58,B(1617),?67,$$DATX^FBAAUTL($G(FBVCHDT)),!,?3,V,?42,VID,?55,FBIN,?67,$$DATX^FBAAUTL(FBIN(1))
"RTN","FBAACCB",50,0)
 W !,$S($D(QQ):QQ_")",1:""),$S(ZS="R":"*",1:""),$S(FBTYPE="B3":FBVP,1:""),$S(FBTYPE="B5":FBPV,1:""),$S($G(FBCAN)]"":"+",1:"")
"RTN","FBAACCB",51,0)
 I FBTYPE="B3" W ?4,$$DATX^FBAAUTL(D),?14,FBAACPT_$S($G(FBMODLE)]"":"-"_$P(FBMODLE,","),1:""),?24,CPTDESC,?54,FBFPPSC,?66,FBFPPSL
"RTN","FBAACCB",52,0)
 I FBTYPE="B5" W ?4,$$DATX^FBAAUTL(D),?14,FBAACPT_$S($G(FBMODLE)]"":"-"_$P(FBMODLE,","),1:""),?24,CPTDESC,?56,FBFPPSC,?68,FBFPPSL
"RTN","FBAACCB",53,0)
 I $P($G(FBMODLE),",",2)]"" D  Q:FBAAOUT
"RTN","FBAACCB",54,0)
 . N FBI,FBMOD
"RTN","FBAACCB",55,0)
 . F FBI=2:1 S FBMOD=$P(FBMODLE,",",FBI) Q:FBMOD=""  D  Q:FBAAOUT
"RTN","FBAACCB",56,0)
 . . I $Y+5>IOSL D  Q:FBAAOUT
"RTN","FBAACCB",57,0)
 . . . I $E(IOST,1,2)="C-" D ASKH^FBAACCB0 Q:FBAAOUT
"RTN","FBAACCB",58,0)
 . . . W @IOF D HED W !,"(continued)"
"RTN","FBAACCB",59,0)
 . . W !,?19,"-",FBMOD
"RTN","FBAACCB",60,0)
 W !?4,$J(A1,6),?17,$J(A2,6)
"RTN","FBAACCB",61,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBAACCB",62,0)
 W ?30,$S(FBADJLR]"":FBADJLR,1:T)
"RTN","FBAACCB",63,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBAACCB",64,0)
 W ?41,$S(FBADJLA]"":FBADJLA,1:TAMT)
"RTN","FBAACCB",65,0)
 D PMNT^FBAACCB2 S FBINOLD=FBIN
"RTN","FBAACCB",66,0)
 Q
"RTN","FBAACCB",67,0)
HED W "Patient Name",?20,"('*' Reimbursement to Patient   '+' Cancellation Activity)",!,?13,"('#' Voided Payment)",?58,"Batch #",?67,"Voucher Date"
"RTN","FBAACCB",68,0)
 W !,?3,"Vendor Name",?42,"Vendor ID",?53,"Invoice #",?67,"Date Rec'd."
"RTN","FBAACCB",69,0)
 I FBTYPE="B3" D
"RTN","FBAACCB",70,0)
 . W !,?4,"SVC DATE",?14,"CPT-MOD",?24,"SERVICE PROVIDED",?54,"FPPS CLAIM",?66,"FPPS LINE"
"RTN","FBAACCB",71,0)
 . W !,?4,"CLAIMED",?17,"PAID",?30,"ADJ CODE",?41,"ADJ AMOUNT"
"RTN","FBAACCB",72,0)
 I FBTYPE="B5" D
"RTN","FBAACCB",73,0)
 . W !,?4,"RX  DATE",?14,"RX #",?24,"DRUG NAME",?56,"FPPS CLAIM",?68,"FPPS LINE"
"RTN","FBAACCB",74,0)
 . W !,?4,"CLAIMED",?17,"PAID",?30,"ADJ CODE",?41,"ADJ AMOUNT"
"RTN","FBAACCB",75,0)
 W !,Q,!
"RTN","FBAACCB",76,0)
 Q
"RTN","FBAACCB",77,0)
LISTP S Q="",$P(Q,"=",80)="="
"RTN","FBAACCB",78,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBAACCB",79,0)
ENP D HED S (FBAAOUT,FBINTOT)=0,FBINOLD=""
"RTN","FBAACCB",80,0)
 F A=0:0 S A=$O(^FBAA(162.1,"AE",B,A)) Q:A'>0!($G(FBAAOUT))  S FBIN=A D SETV^FBAACCB0 F B2=0:0 S B2=$O(^FBAA(162.1,"AE",B,A,B2)) Q:B2'>0!($G(FBAAOUT))  D INTOT^FBAACCB0 I $D(^FBAA(162.1,A,"RX",B2,0)) S Z(0)=^(0) D MORE^FBAACCB1
"RTN","FBAACCB",81,0)
 I '$G(FBAAOUT) S FBIN=0 D INTOT^FBAACCB0
"RTN","FBAACCB",82,0)
 Q
"RTN","FBAACCB1")
0^50^B22926738
"RTN","FBAACCB1",1,0)
FBAACCB1 ;AISC/GRR-CLERK CLOSE BATCH CONTINUED ;8/7/2003
"RTN","FBAACCB1",2,0)
 ;;3.5;FEE BASIS;**55,61**;JAN 30, 1995
"RTN","FBAACCB1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACCB1",4,0)
PHARM ;ENTRY FOR PHARMACY BATCH CALCULATE TOTAL DOLLARS AND LINE COUNT
"RTN","FBAACCB1",5,0)
 F A=0:0 S A=$O(^FBAA(162.1,"AE",B,A)) Q:A'>0  F B2=0:0 S B2=$O(^FBAA(162.1,"AE",B,A,B2)) Q:B2'>0  I $D(^FBAA(162.1,A,"RX",B2,0)) S Z(0)=^(0) D:$P(Z(0),"^",16)>0 MOREP
"RTN","FBAACCB1",6,0)
 G FIN^FBAACCB
"RTN","FBAACCB1",7,0)
MOREP S T=T+$P(Z(0),"^",16),C=C+1 Q
"RTN","FBAACCB1",8,0)
TRAV ;ENTRY FOR TRAVEL BATCH CALCULATE TOTAL DOLLARS AND LINE COUNT
"RTN","FBAACCB1",9,0)
 F J=0:0 S J=$O(^FBAAC("AD",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AD",B,J,K)) Q:K'>0  I $D(^FBAAC(J,3,K,0)) S Z(0)=^(0) D:$P(Z(0),"^",3)>0 MORET
"RTN","FBAACCB1",10,0)
 G FIN^FBAACCB
"RTN","FBAACCB1",11,0)
MORET S T=T+$P(Z(0),"^",3),C=C+1 Q
"RTN","FBAACCB1",12,0)
LISTC S Q="",$P(Q,"=",80)="=",(FBAAOUT,FBLISTC)=0,IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBAACCB1",13,0)
PRTC D HEDC
"RTN","FBAACCB1",14,0)
 F I=0:0 S I=$O(^FBAAI("AC",B,I)) Q:I'>0!(FBAAOUT)  I $D(^FBAAI(I,0)) S Z(0)=^(0) D CMORE
"RTN","FBAACCB1",15,0)
 Q
"RTN","FBAACCB1",16,0)
CMORE N FBADJLR,FBFPPSC,FBFPPSL,FBX,FBY3
"RTN","FBAACCB1",17,0)
 S K=$P(Z(0),"^",3),J=$P(Z(0),"^",4) D ENV^FBAACCB0 S N=$$NAME^FBCHREQ2(J),S=$$SSN^FBAAUTL(J),FBIN=I,FBAC=$P(Z(0),"^",8)+.0001,FBAP=$P(Z(0),"^",9)+.0001,FBVP=$P(Z(0),"^",14),ZS=$P(Z(0),"^",13)
"RTN","FBAACCB1",18,0)
 S FBAC=$P(FBAC,".",1)_"."_$E($P(FBAC,".",2),1,2),FBAP=$P(FBAP,".",1)_"."_$E($P(FBAP,".",2),1,2)
"RTN","FBAACCB1",19,0)
 S FBSC=$P(Z(0),"^",11),FBSC=$S(FBSC="":"",$D(^FBAA(161.27,FBSC,0)):$P(^(0),"^",1),1:""),FBFD=$P(Z(0),"^",6),FBTD=$P(Z(0),"^",7) S FBPDT=FBFD D CDAT S FBFD=FBPDT,FBPDT=FBTD D CDAT S FBTD=FBPDT
"RTN","FBAACCB1",20,0)
 S FBY3=$G(^FBAAI(I,3))
"RTN","FBAACCB1",21,0)
 S FBFPPSC=$P(FBY3,U)
"RTN","FBAACCB1",22,0)
 S FBFPPSL=$P(FBY3,U,2)
"RTN","FBAACCB1",23,0)
 S FBX=$$ADJLRA^FBCHFA(I_",")
"RTN","FBAACCB1",24,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBAACCB1",25,0)
 D FBCKI(I)
"RTN","FBAACCB1",26,0)
 S B(1617)=$S(B="":"",$D(^FBAA(161.7,B,0)):$P(^(0),"^"),1:"")
"RTN","FBAACCB1",27,0)
 S FBIN(1)=$P(Z(0),"^",2)
"RTN","FBAACCB1",28,0)
 D WRITC
"RTN","FBAACCB1",29,0)
 Q
"RTN","FBAACCB1",30,0)
WRITC I $Y+7>IOSL D ASKH^FBAACCB0:$E(IOST,1,2)["C-" Q:FBAAOUT  W @IOF D HEDC
"RTN","FBAACCB1",31,0)
 W !!,$S('$D(ZS):"",ZS="R":"*",1:"")
"RTN","FBAACCB1",32,0)
 W N,?35,S,?60,B(1617)
"RTN","FBAACCB1",33,0)
 W !,?3,V,?45,VID,?58,FBIN,?70,$$DATX^FBAAUTL($E(FBIN(1),1,7))
"RTN","FBAACCB1",34,0)
 I FBFPPSC]"" W !,?4,"FPPS Claim ID: ",FBFPPSC,"   FPPS Line: ",FBFPPSL
"RTN","FBAACCB1",35,0)
 W !,$S($D(QQ):QQ_")",1:""),FBVP,$S(FBCAN]"":"+",1:""),?4,FBFD,?13,FBTD,?22,$J(FBAC,6),?32,$J(FBAP,6),?45,$S(FBADJLR]"":FBADJLR,1:FBSC)
"RTN","FBAACCB1",36,0)
 W:$P(Z(0),"^",24) ?56,"Discharge ",$$ICD^FBCSV1(+$P(Z(0),"^",24),$P(Z(0),"^",6)) W ! ;CSV
"RTN","FBAACCB1",37,0)
 I $D(^FBAAI(I,"DX")) S FBDX=^("DX") F FBK=1:1:5 Q:$P(FBDX,"^",FBK)=""  D WRTDX
"RTN","FBAACCB1",38,0)
 I $D(^FBAAI(I,"PROC")) S FBPROC=^("PROC") W ! F FBL=1:1:5 Q:$P(FBPROC,"^",FBL)=""  D WRTPC
"RTN","FBAACCB1",39,0)
 S A2=FBAP D PMNT^FBAACCB2 K A2
"RTN","FBAACCB1",40,0)
 Q
"RTN","FBAACCB1",41,0)
CDAT S FBPDT=$E(FBPDT,4,5)_"/"_$S($E(FBPDT,6,7)="00":$E(FBPDT,2,3),1:$E(FBPDT,6,7)_"/"_$E(FBPDT,2,3))
"RTN","FBAACCB1",42,0)
 Q
"RTN","FBAACCB1",43,0)
HEDC W "Patient Name",?20,"('*' Reimbursement to Veteran   '+' Cancellation Activity)",!,?13,"('#' Voided Payment)",?60,"Batch Number"
"RTN","FBAACCB1",44,0)
 W !,?3,"Vendor Name",?45,"Vendor ID",?57,"Invoice #",?68,"Dt Inv Rec'd",!,?3,"FR DATE",?14,"TO DATE  CLAIMED   PAID",?41,"ADJ CODE",!,Q,!
"RTN","FBAACCB1",45,0)
 Q
"RTN","FBAACCB1",46,0)
CHNH S (J,FZ("CNT"))=0 F  S J=$O(^FBAAI("AC",B,J)) Q:J'>0  I $D(^FBAAI(J,0)) S Z(0)=^(0) D:$P(Z(0),"^",9)>0!($P(FZ,"^",15)="Y") MORECH D:$P(FZ,U,15)'="Y" INVCNT
"RTN","FBAACCB1",47,0)
 S:$G(FZ("CNT")) $P(FZ,U,10)=FZ("CNT") K FZ("CNT") G FIN^FBAACCB
"RTN","FBAACCB1",48,0)
MORECH S T=T+$P(Z(0),"^",9),C=C+1 Q
"RTN","FBAACCB1",49,0)
WRTDX W ?4,"Dx: ",$$ICD9^FBCSV1($P(FBDX,"^",FBK),$P($G(Z(0)),"^",6)),"  " Q  ;CSV
"RTN","FBAACCB1",50,0)
WRTPC W ?4,"Proc: ",$$ICD0^FBCSV1($P(FBPROC,"^",FBL),$P($G(Z(0)),"^",6)),"  " Q  ;CSV
"RTN","FBAACCB1",51,0)
MORE ;
"RTN","FBAACCB1",52,0)
 N FBADJLA,FBADJLR,FBFPPSC,FBFPPSL,FBX,TAMT
"RTN","FBAACCB1",53,0)
 S J=$P(Z(0),"^",5),D=$P(Z(0),"^",3),FBAACPT=$P(Z(0),"^",1),N=$S($D(^DPT(J,0)):$P(^(0),"^",1),1:""),S=$S(N]"":$P(^DPT(J,0),"^",9),1:""),FBIN=A,CPTDESC=$P(Z(0),"^",2)
"RTN","FBAACCB1",54,0)
 S Y="",$P(Y,"^",2)=$P(Z(0),"^",4),$P(Y,"^",3)=$P(Z(0),"^",16),$P(Y,"^",12)=0,T=$P(Z(0),"^",8),T=$S(T="":"",$D(^FBAA(161.27,T,0)):^(0),1:""),$P(Y,"^",9)=$P(Z(0),"^",1),ZS=$P(Z(0),"^",20),FBPV=""
"RTN","FBAACCB1",55,0)
 ;
"RTN","FBAACCB1",56,0)
 S FBFPPSC=$P($G(^FBAA(162.1,A,0)),U,13)
"RTN","FBAACCB1",57,0)
 S FBFPPSL=$P($G(^FBAA(162.1,A,"RX",B2,3)),U)
"RTN","FBAACCB1",58,0)
 S FBX=$$ADJLRA^FBRXFA(B2_","_A_",")
"RTN","FBAACCB1",59,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBAACCB1",60,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBAACCB1",61,0)
 S TAMT=$FN($P(Z(0),"^",7),"",2)
"RTN","FBAACCB1",62,0)
 ;
"RTN","FBAACCB1",63,0)
 D FBCKP(A,B2)
"RTN","FBAACCB1",64,0)
 S FBIN(1)=$P($G(^FBAA(162.1,+A,0)),"^",2)
"RTN","FBAACCB1",65,0)
 G GO^FBAACCB
"RTN","FBAACCB1",66,0)
INVCNT ;set invoice count for cnh batch
"RTN","FBAACCB1",67,0)
 S FZ("CNT")=FZ("CNT")+1
"RTN","FBAACCB1",68,0)
 Q
"RTN","FBAACCB1",69,0)
FBCKI(FBI) ;set inpatient check variables
"RTN","FBAACCB1",70,0)
 ;fbi=DA
"RTN","FBAACCB1",71,0)
 I '$G(FBI) S (FBCKDT,FBCK,FBCANDT,FBCANR,FBCAN,FBDIS,FBCKINT)="" Q
"RTN","FBAACCB1",72,0)
 S FBCKIN=$G(^FBAAI(FBI,2))
"RTN","FBAACCB1",73,0)
 S U="^",FBCKDT=+FBCKIN,FBCK=$P(FBCKIN,U,4),FBCANDT=$P(FBCKIN,U,5),FBCANR=$P(FBCKIN,U,6),FBCAN=$P(FBCKIN,U,7),FBDIS=$P(FBCKIN,U,8),FBCKINT=$P(FBCKIN,U,9) K FBCKIN
"RTN","FBAACCB1",74,0)
 Q
"RTN","FBAACCB1",75,0)
FBCKP(J,K) ;set pharmacy check variables
"RTN","FBAACCB1",76,0)
 ;j,k required input variables to = da(1) and da respectively (162.1)
"RTN","FBAACCB1",77,0)
 I '$G(J)!('$G(K)) Q
"RTN","FBAACCB1",78,0)
 S FBCKIN=$G(^FBAA(162.1,J,"RX",K,2))
"RTN","FBAACCB1",79,0)
 S U="^",FBCKDT=$P(FBCKIN,U,8),FBCK=$P(FBCKIN,U,10),FBCANDT=$P(FBCKIN,U,11),FBCANR=$P(FBCKIN,U,12),FBCAN=$P(FBCKIN,U,13),FBDIS=$P(FBCKIN,U,14),FBCKINT=$P(FBCKIN,U,15) K FBCKIN
"RTN","FBAACCB1",80,0)
 Q
"RTN","FBAACIE")
0^32^B15364626
"RTN","FBAACIE",1,0)
FBAACIE ;AISC/GRR-COMPLETE PHARMACY INVOICE ;7/17/2003
"RTN","FBAACIE",2,0)
 ;;3.5;FEE BASIS;**38,61**;JAN 30, 1995
"RTN","FBAACIE",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACIE",4,0)
 D DT^DICRW,HOME^%ZIS I '$D(^FBAA(162.1,"AC",2)) W !!,*7,"There are no Invoices Pending completion!",!! Q
"RTN","FBAACIE",5,0)
 D SITEP^FBAAUTL I FBPOP W !,*7,"Fee Site Parameters must be Initialized!" K FBPOP Q
"RTN","FBAACIE",6,0)
 S FBAAOUT=1,FBMDF=$P(FBSITE(0),"^",10),UL="",$P(UL,"=",79)="="
"RTN","FBAACIE",7,0)
RINV W ! S FBINTOT=0,DIC="^FBAA(162.1,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U,5)=2&($D(^(""RX"",""AC"",2)))" D ^DIC K DIC("S") G END:X="^"!(X=""),RINV:Y<0 S FBIN=+Y,FBINTOT=+$P(^(0),"^",7)
"RTN","FBAACIE",8,0)
 I '$D(^FBAA(162.1,FBIN,"RX","AC",2)) G RINV
"RTN","FBAACIE",9,0)
 S J=0 F  S J=$O(^FBAA(162.1,FBIN,"RX","AC",2,J)) Q:'J  I $D(^FBAA(162.1,FBIN,"RX",J,0)) S Y(0)=^(0) D GOT
"RTN","FBAACIE",10,0)
 I '$D(^FBAA(162.1,FBIN,"RX","AC",2)) K ^FBAA(162.1,"AC",2,FBIN) S ^FBAA(162.1,"AC",3,FBIN)="",$P(^FBAA(162.1,FBIN,0),"^",5)=3
"RTN","FBAACIE",11,0)
 I $D(^FBAA(162.1,"AC",3,FBIN)) W !!,"Invoice is Complete",?30,"Totals: $ "_$J(FBINTOT,1,2)
"RTN","FBAACIE",12,0)
 G RINV
"RTN","FBAACIE",13,0)
END K FBAAOUT,FBIN,FBRX,FBSITE,FBDATEF,FBDRUG,FBPATN,FBPID,FBVNAME,FBVID,FBAC,FBAAPR,DA,X,Y,D0,D1,DI,DIC,DIE,DIRUT,DIV,DQ,DR,FBAP,FBGEN,FBGENSUB,FBINTOT,FBMDF,FBQTY,FBRBC,FBSTR,FBVEN,S,UL,ULL,POP,J,DFN,Z,ZZ,FBSW,FBPOP,FB1725
"RTN","FBAACIE",14,0)
 K FBADJ,FBFPPSC,FBFPPSL,FBRRMK
"RTN","FBAACIE",15,0)
 Q
"RTN","FBAACIE",16,0)
GOT S FBDRUG=$P(Y(0),"^",2),FBGEN=$P(Y(0),"^",10),FBGENSUB=$P(^(0),"^",21),FBRX=$P(Y(0),"^"),FBDATEF=$P(Y(0),"^",3),FBAC=$P(Y(0),"^",4),DFN=+$P(Y(0),"^",5),FBPATN=$$VET^FBUCUTL(DFN),FBPID=$$SSN^FBAAUTL(DFN)
"RTN","FBAACIE",17,0)
 S FBSTR=$P(Y(0),"^",12),FBQTY=$P(Y(0),"^",13),FBAAPR=$P(Y(0),"^",22)
"RTN","FBAACIE",18,0)
 S Y=$S($D(^FBAA(162.1,FBIN,0)):^(0),1:"")
"RTN","FBAACIE",19,0)
 S FBFPPSC=$P(Y,U,13)
"RTN","FBAACIE",20,0)
 S FBFPPSL=$P($G(^FBAA(162.1,FBIN,"RX",J,3)),U)
"RTN","FBAACIE",21,0)
 S FBVEN=+$P(Y,"^",4),FBVNAME=$$VEN^FBUCUTL(FBVEN),FBVID=$P($G(^FBAAV(FBVEN,0)),"^",2)
"RTN","FBAACIE",22,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAACIE",23,0)
 S Y(2)=$G(^FBAA(162.1,FBIN,"RX",J,2))
"RTN","FBAACIE",24,0)
 S FB1725=$S($P(Y(2),U,6)["FB583":+$P($G(^FB583(+$P(Y(2),U,6),0)),U,28),1:0)
"RTN","FBAACIE",25,0)
 W @IOF,"Vendor: ",FBVNAME,"   Vendor ID: ",FBVID
"RTN","FBAACIE",26,0)
 W !!,"Patient: ",FBPATN,"   Patient ID: ",FBPID
"RTN","FBAACIE",27,0)
 W !,"FPPS Claim ID: ",$S(FBFPPSC="":"N/A",1:FBFPPSC)
"RTN","FBAACIE",28,0)
 W ?28,"FPPS Line Item: ",$S(FBFPPSL="":"N/A",1:FBFPPSL)
"RTN","FBAACIE",29,0)
 W !!,"Drug Name",?32,"   RX #  "," Strength  ","  Qty","   Amt Claimed   ",!,UL
"RTN","FBAACIE",30,0)
 W !,FBDRUG,?34,FBRX,?43,FBSTR,?54,FBQTY,?63,FBAC
"RTN","FBAACIE",31,0)
 W:FBGENSUB="Y" !!,*7,*7,?4,"Generic Drug Substituted: ",$S($D(^PSDRUG(+FBGEN,0)):$P(^(0),"^"),1:"Unknown")
"RTN","FBAACIE",32,0)
 W:FBAAPR]"" !!,?5,"Pharmacy Remarks: ",FBAAPR
"RTN","FBAACIE",33,0)
FEE S DIR(0)="161.4,9",DIR("B")=FBMDF,DIR("?")="Hit Return to accept default dispensing fee or enter a dollar amount between .01 and 20" D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBAACIE",34,0)
 W:FB1725 !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAACIE",35,0)
 W !! S FBMDF=+Y K FBAP
"RTN","FBAACIE",36,0)
 S DA(1)=FBIN,DIE="^FBAA(162.1,"_FBIN_",""RX"",",DA=J,DIC=DIE,DR="5;S FBRBC=X;6.5//^S X=$S(FBRBC+FBMDF>FBAC:FBAC,1:FBRBC+FBMDF);S FBAP=X"
"RTN","FBAACIE",37,0)
 S DR(1,162.11,1)="I FBAP>FBAC S $P(^FBAA(162.1,DA(1),""RX"",DA,0),U,16)="""" W !,*7,""Amount Paid cannot be greater than the Amount Claimed"" S Y=6.5"
"RTN","FBAACIE",38,0)
 ;S DR(1,162.11,2)="S:(FBAC-FBAP)'>0 Y=8;6///^S X=FBAC-FBAP;Q;6R;7R;S:X'=4 Y=8;20;8////^S X=3"
"RTN","FBAACIE",39,0)
 S DR(1,162.11,2)="S FBX=$$ADJ^FBUTL2(FBAC-FBAP,.FBADJ,2,,,1)"
"RTN","FBAACIE",40,0)
 S DR(1,162.11,3)="S FBX=$$RR^FBUTL4(.FBRRMK,2);8////^S X=3"
"RTN","FBAACIE",41,0)
 D ^DIE K DIE Q:$D(Y)'=0
"RTN","FBAACIE",42,0)
 S:$D(FBAP) FBINTOT=FBINTOT+FBAP
"RTN","FBAACIE",43,0)
 S $P(^FBAA(162.1,FBIN,0),"^",7)=FBINTOT
"RTN","FBAACIE",44,0)
 G:$D(DTOUT) H^XUS
"RTN","FBAACIE",45,0)
 ; file adjustments
"RTN","FBAACIE",46,0)
 D FILEADJ^FBRXFA(DA_","_FBIN_",",.FBADJ)
"RTN","FBAACIE",47,0)
 ; file remittance remarks
"RTN","FBAACIE",48,0)
 D FILERR^FBRXFR(DA_","_FBIN_",",.FBRRMK)
"RTN","FBAACIE",49,0)
 Q
"RTN","FBAACO")
0^7^B31788257
"RTN","FBAACO",1,0)
FBAACO ;AISC/GRR-ENTER MEDICAL PAYMENT ;7/13/2003
"RTN","FBAACO",2,0)
 ;;3.5;FEE BASIS;**4,61**;JAN 30, 1995
"RTN","FBAACO",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACO",4,0)
EN583 ;driver for opt payments (entry point for uc)
"RTN","FBAACO",5,0)
 K FBAAOUT,FBPOP
"RTN","FBAACO",6,0)
 D SITE G Q:$G(FBPOP) D BT G Q:$G(FBAAOUT)
"RTN","FBAACO",7,0)
1 K FBAAID,FBAAVID,FBAAOUT,FBDL,FBAAMM D SITE G Q:$G(FBPOP) S FBINTOT=0 W !!
"RTN","FBAACO",8,0)
 I '$D(FB583) K FBDL,FBAR D GETVET^FBAAUTL1 G EN583:'DFN K FBAAOUT,FBDMRA D GETAUTH^FBAAUTL1 G 1:FTP']""
"RTN","FBAACO",9,0)
 K FBAAOUT
"RTN","FBAACO",10,0)
 I $G(FBCHCO) S FB7078=$S($G(FB7078):FB7078_";FB7078(",$D(FB583):FB583_";FB583(",1:"")
"RTN","FBAACO",11,0)
 D:FBAAPTC="R" ^FBAACO0
"RTN","FBAACO",12,0)
 D ^FBAAEAR:$P(FBSITE(1),"^",4)="Y"
"RTN","FBAACO",13,0)
 D PAT,GETVEN1^FBAACO1:$D(FB583),GETVEN^FBAACO1:'$D(FB583) I $G(FBAAOUT) G Q:$D(FB583),1
"RTN","FBAACO",14,0)
 W !! D FILEV^FBAACO5(DFN,FBV) I $G(FBAAOUT) G Q:$D(FB583),1
"RTN","FBAACO",15,0)
 ;check for payments against all linked vendors
"RTN","FBAACO",16,0)
 S DA=+Y D CHK^FBAACO4 K FBAACK1,FBAAOUT,DA,X,Y
"RTN","FBAACO",17,0)
 K FBAAID,FBAAVID D GETINV^FBAACO1 I $G(FBAAOUT) Q:$D(FBCHCO)  G Q:$D(FB583),1
"RTN","FBAACO",18,0)
 I '$D(FBAAID)!('$D(FBAAVID)) D GETINDT^FBAACO1 I $G(FBAAOUT) D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",19,0)
 ; ask patient account number
"RTN","FBAACO",20,0)
 S FBCSID=$$ASKPAN^FBUTL5() I FBCSID="^" K FBCSID S FBAAOUT=1 D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",21,0)
 ; if U/C then get FPPS Claim ID else ask user
"RTN","FBAACO",22,0)
 I $D(FB583) S FBFPPSC=$P($G(^FB583(FB583,5)),U) W !,"FPPS CLAIM ID: ",$S(FBFPPSC="":"N/A",1:FBFPPSC)
"RTN","FBAACO",23,0)
 E  S FBFPPSC=$$FPPSC^FBUTL5() I FBFPPSC=-1 K FBFPPSC S FBAAOUT=1 D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",24,0)
 G 1^FBAAMP:$G(FBMP) D MM G Q:$G(FBAAOUT)
"RTN","FBAACO",25,0)
SVDT K FBAAOUT W !! D GETSVDT^FBAACO5(DFN,FBV,FBASSOC,1) I $G(FBAAOUT) K FBAADT,FBX,FBAACP W:FBINTOT>0 !!,"Invoice: "_FBAAIN_" Totals $ "_$J(FBINTOT,1,2) G Q:$D(FB583)!($G(FBCHCO)),1
"RTN","FBAACO",26,0)
 D SETO^FBAACO3,DISPINV^FBAACO1
"RTN","FBAACO",27,0)
 W ! D ASKZIP^FBAAFS($G(FBV),$G(FBAADT))
"RTN","FBAACO",28,0)
 I $G(FBAAOUT)!(FBZIP']"") D DEL^FBAACO3 G SVDT
"RTN","FBAACO",29,0)
CPT K FBAAOUT W !
"RTN","FBAACO",30,0)
 D CPTM^FBAALU($G(FBAADT),$G(DFN)) I 'FBGOT D DEL^FBAACO3 G SVDT
"RTN","FBAACO",31,0)
 D CHK2^FBAACO4 I FBJ']"" G SVPR
"RTN","FBAACO",32,0)
CHKE ;determines what action to take on duplicate services entered
"RTN","FBAACO",33,0)
 K FBAAOUT W !!,*7,"Service selected for that date already in system."
"RTN","FBAACO",34,0)
 S DIR(0)="Y",DIR("A")="Do you want to add another service for the SAME DATE",DIR("B")="No" D ^DIR K DIR G Q:$D(DIRUT),SVPR:Y
"RTN","FBAACO",35,0)
 I FBJ]"",FBJ'=FBV W !!,*7,"You must use the 'EDIT PAYMENT' option to edit the service previously",!,"entered for that date." D DEL^FBAACO3 G SVDT
"RTN","FBAACO",36,0)
 S DIR(0)="Y",DIR("A")="Want to edit it",DIR("B")="No" D ^DIR K DIR G Q:$D(DIRUT) I Y D DOEDIT^FBAACO3 G SVDT:'$D(FBDL)!($G(FBAAOUT)),Q:$D(FB583),1
"RTN","FBAACO",37,0)
 D ^FBAACO2 G CPT:'$G(FBDEN)
"RTN","FBAACO",38,0)
SVPR K FBAAOUT
"RTN","FBAACO",39,0)
 I $$ANES^FBAAFS($$CPT^FBAAUTL4($G(FBAACP))) D ASKTIME^FBAAFS I $G(FBAAOUT)!'$G(FBTIME) G CPT
"RTN","FBAACO",40,0)
 D SVCPR^FBAACO1 G CPT:$G(FBAAOUT)
"RTN","FBAACO",41,0)
 S FBAMTPD=0 D FILE^FBAACO2 I $D(FBAAOUT) G Q:$D(FB583),1:$D(FBDL),Q
"RTN","FBAACO",42,0)
 D OUT^FBAACO3 W:Z1>(FBAAMPI-20) !,*7,"Warning, you can only enter ",(FBAAMPI-Z1)," more line(s)!" G CPT:Z1'>(FBAAMPI-1) D WARN^FBAACO3 G EN583
"RTN","FBAACO",43,0)
 G 1
"RTN","FBAACO",44,0)
 ;
"RTN","FBAACO",45,0)
Q ;exit point for outpatient payment routines
"RTN","FBAACO",46,0)
 K FBAAPTC,DIC,Y,A,I,DFN,BO,DA,DI,DQ,DR,E,FBAABDT,FBAABE,FBFY,FBDL,FBAAID,FBAAIN,FBAAMPI,FBAAOPA,FBAAPN,FBCONT,FBDX,FBGOT,FBPOV,FBPT,DLAYGO,FBPSA,FBASSOC,FBZBN,FBZBS,FBDEN,FBV,FBSDI,FBAACPI,FBAACP,FBX,FBLOCK
"RTN","FBAACO",47,0)
 K FBSP,FBTPD,FBTT,FBTYPE,FTP,FBDEL,FY,FBINTOT,G,H,MAJN,NO,PI,Q,R,SUB,SUBN,TA,TP,UL,W,X1,Z,Z1,ZZ,FBAADT,K,L,J,FBTOV,FBPARCD,FBT,FEEO,Z2,FBSITE,FBAUT,T,FBLOC,FBSSN,FBVEN,FBD1,Z0,FB583
"RTN","FBAACO",48,0)
 K A1,A2,B1,B2,DAT,DIE,FBAACPT,FBAMTPD,FBAAEDT,FBAAOUT,FBAAPD,FBI,FBIN,FBPROG,FBRR,FBXX,PTYPE,S,VAL,X,V,ZS,FB7078,FBFDC,FBCOUNTY,FBMST,FBTTYPE,FBTV,HY,FBDMRA,DIRUT,FBPOP,FBJ,FBAACK1,FBAR,FBDA,FBST
"RTN","FBAACO",49,0)
 K FBMP,FBK,FBAAAS,%DT,FBDT,FBMAX,FBAMFS,FBAASC,FBHCFA,FBSI,FBCNP,FBAAAMT,FBAAVID,FBAAMM,FBAAMM1,VAPA,FBZX,FBTST,HOLDY,FBAOT
"RTN","FBAACO",50,0)
 K FBCSID,FBFPPSC,FBFPPSL,FBADJ,FBADJD,FBADJL,FBRRMK,FBRRMKD,FBRRMKL,FBUNITS
"RTN","FBAACO",51,0)
AUTHQ K DIC,DFN,CNT,FB7078,FBAABDT,FBAAEDT,FBAAOUT,FBASSOC,FBAUT,FBPOV,FBPROG,FBPSA,FBPT,FBTT,FBTYPE,FBVEN,FBTP,PI,TA,FBMOD,FBMODA,FBZIP,FBTIME,FBFSAMT,FBFSUSD
"RTN","FBAACO",52,0)
 Q
"RTN","FBAACO",53,0)
 ;
"RTN","FBAACO",54,0)
SITE ;set up site variables
"RTN","FBAACO",55,0)
 D:'$D(FBSITE(0)) SITEP^FBAAUTL Q:$G(FBPOP)  I '$G(FBPROG) D
"RTN","FBAACO",56,0)
 .I $G(FBCHCO) S FBPROG="I ($P(^(0),""^"",3)=6!($P(^(0),""^"",3)=7))&($P(^(0),U,9)'[""FB583"")" Q
"RTN","FBAACO",57,0)
 .S FBPROG=$S($P(FBSITE(1),"^",6)="":"I $P(^(0),""^"",9)'[""FB583""",1:"I $P(^(0),""^"",3)=2,($P(^(0),""^"",9)'[""FB583"")")
"RTN","FBAACO",58,0)
 S:'$D(FBAAPTC) FBAAPTC="V"
"RTN","FBAACO",59,0)
 S FBAAMPI=$P($G(^FBAA(161.4,1,"FBNUM")),"^",3),FBAAMPI=$S(FBAAMPI]"":FBAAMPI,1:100)
"RTN","FBAACO",60,0)
 Q
"RTN","FBAACO",61,0)
 ;
"RTN","FBAACO",62,0)
BT ;select batch
"RTN","FBAACO",63,0)
 S DIC="^FBAA(161.7,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U,3)=""B3""&($G(^(""ST""))=""O"")&(($P(^(0),U,5)=DUZ)!($D(^XUSEC(""FBAASUPERVISOR"",DUZ))))",DIC("W")="W !,""  Obligation #: "",$P(^(0),U,2)" W !! D ^DIC K DIC I X["^"!(X="") S FBAAOUT=1 Q
"RTN","FBAACO",64,0)
 G BT:Y<0 S (DA,FBAABE)=+Y,Y(0)=^FBAA(161.7,DA,0)
"RTN","FBAACO",65,0)
 I $P(Y(0),"^",11)>(FBAAMPI-1) W !!,"This Batch already has the maximum number of Payments!" G BT
"RTN","FBAACO",66,0)
 S Z1=$P(Y(0),"^",11),FB7078="",BO=$P(^FBAA(161.7,DA,0),"^",2)
"RTN","FBAACO",67,0)
 Q
"RTN","FBAACO",68,0)
PAT ;set up patient in patient file
"RTN","FBAACO",69,0)
 ;required input variable DFN
"RTN","FBAACO",70,0)
 I '$D(^FBAAC(DFN,0)) K DD,DO S (X,DINUM)=DFN,DIC(0)="L",DLAYGO=162,DIC="^FBAAC(" D FILE^DICN K DLAYGO,DIC,DINUM,DD,DO,DA
"RTN","FBAACO",71,0)
 Q
"RTN","FBAACO",72,0)
MM ;check for money management of entire invoice
"RTN","FBAACO",73,0)
 I FBAAPTC="R" S FBAAMM="" Q
"RTN","FBAACO",74,0)
 W ! S DIR(0)="Y",DIR("A")="Will any line items in this invoice be for contracted services",DIR("B")="No",DIR("?")="Answering no indicates interest will not be paid for any line items." D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACO",75,0)
 S FBAAMM=$S(Y=1:1,1:"")
"RTN","FBAACO",76,0)
 Q
"RTN","FBAACO",77,0)
OUT K FBAADT,FBX,FBAACP W:FBINTOT>0 !!,"Invoice: "_FBAAIN_" Totals $ "_$J(FBINTOT,1,2) Q
"RTN","FBAACO0")
0^37^B33451289
"RTN","FBAACO0",1,0)
FBAACO0 ;AISC/GRR-DISPLAY PATIENT ADDRESS DATA AND EDIT ;7/13/2003
"RTN","FBAACO0",2,0)
 ;;3.5;FEE BASIS;**4,38,52,57,61**;JAN 30, 1995
"RTN","FBAACO0",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACO0",4,0)
 S FBMST=$S(FBTT=1:"Y",1:""),FBTTYPE="A",FBFDC=""
"RTN","FBAACO0",5,0)
 N FBEDPTAD S (FBEDPTAD(1),FBEDPTAD(2))=0
"RTN","FBAACO0",6,0)
 W @IOF,"Patient:  ",$P(^DPT(DFN,0),"^") S (Y(0),HY(0))=$G(^DPT(DFN,.11)) I Y(0)="" W !,*7,"No Address information for this patient!" G EDIT
"RTN","FBAACO0",7,0)
 S VAPA("P")="" D ADD^VADPT
"RTN","FBAACO0",8,0)
 S FBEDPTAD(1)=$$ISCCADR()
"RTN","FBAACO0",9,0)
 S FBEDPTAD(2)="N"
"RTN","FBAACO0",10,0)
 I $$CCADR(2)
"RTN","FBAACO0",11,0)
 W !!,"Patient's Permanent address:"
"RTN","FBAACO0",12,0)
 F Z=1:1:3 I VAPA(Z)]"" W !?2,"Address Line ",Z,":",?18,VAPA(Z)
"RTN","FBAACO0",13,0)
 W !?2,"City:",?18,VAPA(4),!?2,"State:",?18,$P(VAPA(5),U,2)
"RTN","FBAACO0",14,0)
 W !?2,"Zip:",?18,$S(+$G(VAPA(11)):$P(VAPA(11),U,2),1:VAPA(6)),!?2,"County",?18,$P(VAPA(7),U,2)
"RTN","FBAACO0",15,0)
 K VAPA,VAERR
"RTN","FBAACO0",16,0)
RD W ! S DIR("A")="Want to edit Permanent Address data",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR  S:Y&('$D(DIRUT)) FBEDPTAD(2)="Y" G EDIT
"RTN","FBAACO0",17,0)
 Q
"RTN","FBAACO0",18,0)
EDIT I $G(FBEDPTAD(2))'="N" W !! S HY(0)=$G(^DPT(DFN,.11)),DA=DFN,DIC="^DPT(",DIE=DIC,DR="[FBAA ADDRESS EDIT]" D LOCK^FBUCUTL("^DPT(",DFN) G:'FBLOCK RD D ^DIE L -^DPT(DFN)
"RTN","FBAACO0",19,0)
 Q:FBEDPTAD(2)="N"&($$EDTCCADR()=0)
"RTN","FBAACO0",20,0)
MRA I FBTT=1!($G(^DPT(DFN,.11))'=$G(HY(0))) S FBD1=FTP D ENT^FBAAAUT K FBD1
"RTN","FBAACO0",21,0)
 Q
"RTN","FBAACO0",22,0)
FEE ;calculates amount paid based on fee schedule
"RTN","FBAACO0",23,0)
 N FB1725
"RTN","FBAACO0",24,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAACO0",25,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAACO0",26,0)
 S FBFY=FY-1
"RTN","FBAACO0",27,0)
 S (FBFSAMT,FBFSUSD)="",FBAMTPD=$S($G(FBAMTPD)>0:FBAMTPD,1:"")
"RTN","FBAACO0",28,0)
 ; if amount not passed then use fee schedule
"RTN","FBAACO0",29,0)
 I '$G(FBAMTPD) D
"RTN","FBAACO0",30,0)
 . N FBX
"RTN","FBAACO0",31,0)
 . S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBAADT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME))
"RTN","FBAACO0",32,0)
 . ;
"RTN","FBAACO0",33,0)
 . I '$G(FBAAMM1) D
"RTN","FBAACO0",34,0)
 . . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAACO0",35,0)
 . E  W !?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAACO0",36,0)
 . ;
"RTN","FBAACO0",37,0)
 . I $P($G(FBX),U)]"" D
"RTN","FBAACO0",38,0)
 . . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAACO0",39,0)
 . . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAACO0",40,0)
 . . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAACO0",41,0)
 . . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAACO0",42,0)
 . E  W !?2,"Unable to determine a FEE schedule amount."
"RTN","FBAACO0",43,0)
 . ;
"RTN","FBAACO0",44,0)
 . I FB1725 D
"RTN","FBAACO0",45,0)
 . . W !!?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAACO0",46,0)
 . . I FBFSAMT D
"RTN","FBAACO0",47,0)
 . . . S FBFSAMT=$J(FBFSAMT*.7,0,2)
"RTN","FBAACO0",48,0)
 . . . W !?2,"  Therefore, fee schedule amount reduced to $",FBFSAMT," (70%)."
"RTN","FBAACO0",49,0)
 . ;
"RTN","FBAACO0",50,0)
 . I $G(FBUNITS)>1 D
"RTN","FBAACO0",51,0)
 . . W !!?2,"Units Paid = ",FBUNITS
"RTN","FBAACO0",52,0)
 . . Q:FBFSAMT'>0
"RTN","FBAACO0",53,0)
 . . N FBFSUNIT
"RTN","FBAACO0",54,0)
 . . ; determine if fee schedule can be multipled by units
"RTN","FBAACO0",55,0)
 . . S FBFSUNIT=$S(FBFSUSD="R":1,FBFSUSD="F"&(FBAADT>3040930):1,1:0)
"RTN","FBAACO0",56,0)
 . . I FBFSUNIT D
"RTN","FBAACO0",57,0)
 . . . S FBFSAMT=$J(FBFSAMT*FBUNITS,0,2)
"RTN","FBAACO0",58,0)
 . . . W !?2,"  Therefore, fee schedule amount increased to $",FBFSAMT
"RTN","FBAACO0",59,0)
 . . E  D
"RTN","FBAACO0",60,0)
 . . . W !?2,"  Fee schedule not complied on per unit basis so amount not adjusted for units."
"RTN","FBAACO0",61,0)
 . ;
"RTN","FBAACO0",62,0)
 . I '$G(FBAAMM1) D
"RTN","FBAACO0",63,0)
 . . ; set default amount paid to lesser of amt claimed (J) or fee sched.
"RTN","FBAACO0",64,0)
 . . S FBAMTPD=$S(FBFSAMT>J:J,FBFSAMT>0:FBFSAMT,1:"")
"RTN","FBAACO0",65,0)
 . ;
"RTN","FBAACO0",66,0)
 . W !
"RTN","FBAACO0",67,0)
 ;
"RTN","FBAACO0",68,0)
AMTPD W !,"AMOUNT PAID: "_$S(FBAMTPD]"":FBAMTPD_"//",1:"") R X:DTIME S:X="" X=FBAMTPD G KILL:$E(X)="^",HELP1:$E(X)="?" S:X["$" X=$P(X,"$",2) I +X'=X&(X'?.N.1".".2N)!(+X>+J)!(+X<0) G HELPPD
"RTN","FBAACO0",69,0)
 I FBAMTPD]"",X>FBAMTPD&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) D  G AMTPD
"RTN","FBAACO0",70,0)
 .W !!,*7,"You must be a holder of the 'FBAASUPERVISOR' key to",!,"exceed the Fee Schedule. Entering an up-arrow ('^') will",!,"delete the payment or you can accept the default.",!
"RTN","FBAACO0",71,0)
 S FBAMTPD=X Q
"RTN","FBAACO0",72,0)
KILL W !!,*7,"Entering an '^' will delete this payment!" R !,?5,"Do you want to delete? No//",X:DTIME S:X="" X="N" D VALCK^FBAAUTL1 G KILL:'VAL,AMTPD:"Nn"[$E(X)
"RTN","FBAACO0",73,0)
 S DIK="^FBAAC("_DA(3)_",1,"_DA(2)_",1,"_DA(1)_",1," D WAIT^DICD,^DIK W !,?3,"<DELETED>" K DA,J,K,DIC,DIK,FBAACP,FBAADT,FBX S Y=0,FBDL=1 Q
"RTN","FBAACO0",74,0)
HELP1 W !!,"Enter a dollar amount that does not exceed the amount claimed.",!,"Entering an '^' will delete the payment.",!
"RTN","FBAACO0",75,0)
 I FBAMTPD>0 W !,"Only the holder of the 'FBAASUPERVISOR' key may exceed the",!,"Fee Schedule.",!
"RTN","FBAACO0",76,0)
 G AMTPD
"RTN","FBAACO0",77,0)
HELPPD W !!,*7,"Enter a dollar amount that does not exceed the amount claimed.",! G AMTPD
"RTN","FBAACO0",78,0)
 Q
"RTN","FBAACO0",79,0)
 ;print Confidential Communication address
"RTN","FBAACO0",80,0)
 ;ADD^VADPT must be invoked before this call
"RTN","FBAACO0",81,0)
 ;FBDFN -patient's DFN
"RTN","FBAACO0",82,0)
 ;FBSTPOS - position to start print
"RTN","FBAACO0",83,0)
 ;returns 0 if there is no active CC address
"RTN","FBAACO0",84,0)
 ;returns 1 if active
"RTN","FBAACO0",85,0)
CCADR(FBSTPOS) ;
"RTN","FBAACO0",86,0)
 N FBACT
"RTN","FBAACO0",87,0)
 S FBACT=0
"RTN","FBAACO0",88,0)
 I '$D(VAPA(12)) Q 0  ;if D ADD^VADPT was not invoked before
"RTN","FBAACO0",89,0)
 I 'VAERR D
"RTN","FBAACO0",90,0)
 . S FBACT=$$ACTIVECC()
"RTN","FBAACO0",91,0)
 . Q:'FBACT
"RTN","FBAACO0",92,0)
 . W !!,"Confidential Communication address until: "_$P($G(VAPA(21)),U,2)
"RTN","FBAACO0",93,0)
 . I $G(VAPA(13))]"" W !?FBSTPOS,"Line 1: ",$G(VAPA(13))
"RTN","FBAACO0",94,0)
 . I $G(VAPA(14))]"" W " Line 2: ",$G(VAPA(14))
"RTN","FBAACO0",95,0)
 . I $G(VAPA(15))]"" W !?FBSTPOS,"Line 3: ",$G(VAPA(15))
"RTN","FBAACO0",96,0)
 . W !?FBSTPOS,"City:",?9,$S($G(VAPA(16))]"":$G(VAPA(16)),1:"     ")
"RTN","FBAACO0",97,0)
 . W ?40,"State:",?47,$S($P($G(VAPA(17)),U,2)]"":$P($G(VAPA(17)),U,2),1:"  ")
"RTN","FBAACO0",98,0)
 . W !?FBSTPOS,"Zip:",?9,$P($G(VAPA(18)),U,2)
"RTN","FBAACO0",99,0)
 . W ?20,"County:",?28,$P($G(VAPA(19)),U,2)
"RTN","FBAACO0",100,0)
 Q $G(FBACT)
"RTN","FBAACO0",101,0)
 ;
"RTN","FBAACO0",102,0)
 ;is called after ADD^VADPT to verify whether confidential address is 
"RTN","FBAACO0",103,0)
 ;active or not to encapsulate the logic related to status of CC address
"RTN","FBAACO0",104,0)
 ;input:  VAPA
"RTN","FBAACO0",105,0)
ACTIVECC() ;
"RTN","FBAACO0",106,0)
 Q (+$G(VAPA(12))=1)&($P($G(VAPA(22,3)),"^",3)="Y")
"RTN","FBAACO0",107,0)
 ;
"RTN","FBAACO0",108,0)
 ;edit confidential address
"RTN","FBAACO0",109,0)
 ;returns 1 if CC address has been edited
"RTN","FBAACO0",110,0)
 ;otherwise - 0
"RTN","FBAACO0",111,0)
EDTCCADR() ;
"RTN","FBAACO0",112,0)
 Q:'$G(DFN) 0
"RTN","FBAACO0",113,0)
 I FBEDPTAD(1)=0 D
"RTN","FBAACO0",114,0)
 . N VAPA S VAPA("P")="" D ADD^VADPT S FBEDPTAD(1)=$$ISCCADR()
"RTN","FBAACO0",115,0)
 I FBEDPTAD(1)'="N" D
"RTN","FBAACO0",116,0)
 . W:FBEDPTAD(1)'="B" !!,"WARNING: The Confidential address is NOT active for the Billing Category."
"RTN","FBAACO0",117,0)
 . S DIR("A")="Want to edit Confidential Address data"
"RTN","FBAACO0",118,0)
 E  S DIR("A")="Want to add Confidential Address data"
"RTN","FBAACO0",119,0)
 W ! S DIR("B")="No",DIR(0)="Y"
"RTN","FBAACO0",120,0)
 D ^DIR K DIR
"RTN","FBAACO0",121,0)
 Q:($D(DIRUT)) 0
"RTN","FBAACO0",122,0)
 ;Registration API
"RTN","FBAACO0",123,0)
 I Y D QUES^DGRPU1(+DFN,"ADD4") Q 1
"RTN","FBAACO0",124,0)
 Q 0
"RTN","FBAACO0",125,0)
 ;
"RTN","FBAACO0",126,0)
 ;returns "B" if patient has any (active or inactive) CC address and billing category
"RTN","FBAACO0",127,0)
 ;returns "Y" if patient has any (active or inactive) CC address with another category
"RTN","FBAACO0",128,0)
 ;otherwise returns "N"
"RTN","FBAACO0",129,0)
ISCCADR() ;
"RTN","FBAACO0",130,0)
 Q:($P($G(VAPA(22,3)),"^",3)="Y") "B"
"RTN","FBAACO0",131,0)
 Q:'$O(VAPA(22,0)) "N"
"RTN","FBAACO0",132,0)
 Q "Y"
"RTN","FBAACO0",133,0)
 ;
"RTN","FBAACO0",134,0)
 ;FBAACO0
"RTN","FBAACO1")
0^44^B27562566
"RTN","FBAACO1",1,0)
FBAACO1 ;AISC/GRR-ENTER PAYMENT CONTINUED ;7/17/2003
"RTN","FBAACO1",2,0)
 ;;3.5;FEE BASIS;**4,61**;JAN 30, 1995
"RTN","FBAACO1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACO1",4,0)
SVCPR ;set up service provided multiple
"RTN","FBAACO1",5,0)
 I '$D(^FBAAC(DFN,1,FBV,1,FBSDI,1,0)) S ^FBAAC(DFN,1,FBV,1,FBSDI,1,0)="^162.03A^0^0"
"RTN","FBAACO1",6,0)
 W ! S DLAYGO=162,DIC="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",DIC(0)=$S($G(FBCNP):"QL",1:"EQL"),X=""""_FBX_"""",DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI D ^DIC K DIC,DLAYGO,DA I Y<0 S FBAAOUT=1 Q
"RTN","FBAACO1",7,0)
 S (FBAACPI,DA)=+Y
"RTN","FBAACO1",8,0)
 ;
"RTN","FBAACO1",9,0)
 ; update zip code and anesthesia time
"RTN","FBAACO1",10,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAACO1",11,0)
 K DA S DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI,DA=FBAACPI
"RTN","FBAACO1",12,0)
 S DR="42////^S X=$G(FBZIP);43////^S X=$G(FBTIME)"
"RTN","FBAACO1",13,0)
 D ^DIE K DIE,DA,DR
"RTN","FBAACO1",14,0)
 ;
"RTN","FBAACO1",15,0)
 ; create CPT MODIFIER entries from data in array FBMODA
"RTN","FBAACO1",16,0)
 D REPMOD^FBAAUTL4(DFN,FBV,FBSDI,FBAACPI)
"RTN","FBAACO1",17,0)
 ;
"RTN","FBAACO1",18,0)
 Q
"RTN","FBAACO1",19,0)
 ;
"RTN","FBAACO1",20,0)
PPT(FBDEF) ;establishes prompt pay type for entry
"RTN","FBAACO1",21,0)
 ;fbaamm=ppt if 1 ask for each line item; if 0 don't ask
"RTN","FBAACO1",22,0)
 ;fbaamm1=the ppt for each line item
"RTN","FBAACO1",23,0)
 ;FBDEF=(optional) default for DIR prompt: =1 for yes, otherwise no
"RTN","FBAACO1",24,0)
 N Y I FBAAMM="" S FBAAMM1="" Q
"RTN","FBAACO1",25,0)
 I FBAAMM=1 F  D  Q:Y]""
"RTN","FBAACO1",26,0)
 . S DIR(0)="Y",DIR("A")="Is this line item for a contracted service"
"RTN","FBAACO1",27,0)
 . S DIR("B")=$S($G(FBDEF)=1:"Yes",1:"No")
"RTN","FBAACO1",28,0)
 . S DIR("?")="Answering no indicates that interest will not be paid for this line item."
"RTN","FBAACO1",29,0)
 . D ^DIR K DIR I $D(DIRUT) W !,$C(7),"Required Response!" S Y=""
"RTN","FBAACO1",30,0)
 S FBAAMM1=$S(Y=1:1,1:"")
"RTN","FBAACO1",31,0)
 Q
"RTN","FBAACO1",32,0)
Q K FBAADT,FBX,FBAACP W:FBINTOT>0 !!,"Invoice: "_FBAAIN_"  Totals $ "_$J(FBINTOT,1,2) G Q^FBAACO:$D(FB583),1^FBAACO:'$D(FBCHCO) Q
"RTN","FBAACO1",33,0)
 ;
"RTN","FBAACO1",34,0)
POS ; prompt for place of service
"RTN","FBAACO1",35,0)
 ; output
"RTN","FBAACO1",36,0)
 ;   FBHCFA(30) = place of service (internal)
"RTN","FBAACO1",37,0)
 N Y
"RTN","FBAACO1",38,0)
 S FBHCFA(30)=""
"RTN","FBAACO1",39,0)
 S DIR(0)="P^353.1:EMZ"
"RTN","FBAACO1",40,0)
 D ^DIR K DIR I $D(DIRUT) Q
"RTN","FBAACO1",41,0)
 S FBHCFA(30)=$P(Y,U)
"RTN","FBAACO1",42,0)
 Q
"RTN","FBAACO1",43,0)
 ;
"RTN","FBAACO1",44,0)
GETVEN ;select vendor from vendor file
"RTN","FBAACO1",45,0)
 W !! S DLAYGO=161.2,DIC="^FBAAV(",DIC(0)="AEQLM" D ^DIC K DLAYGO I X="^"!(X="") S FBAAOUT=1 Q
"RTN","FBAACO1",46,0)
 ;if new vendor, call in to new vendor setup routine
"RTN","FBAACO1",47,0)
 G GETVEN:Y<0 S DA=+Y,DIE=DIC D:$P(Y,"^",3)=1 NEW^FBAAVD K DIE,DIC,DR,X,DLAYGO
"RTN","FBAACO1",48,0)
GETVEN1 I $D(FB583) S DA=FBVEN
"RTN","FBAACO1",49,0)
 I $D(^FBAAV(DA,0)),$P($G(^("ADEL")),U)="Y" W !!,$C(7),"Vendor has been flagged for Austin deletion!" G GETVEN:'$D(FB583) S FBAAOUT=1 Q
"RTN","FBAACO1",50,0)
 D:$P(FBSITE(0),"^",11)="Y" EN1^FBAAVD
"RTN","FBAACO1",51,0)
GETVEN2 I $P(FBSITE(0),"^",11)="Y",$D(^XUSEC("FBAA ESTABLISH VENDOR",DUZ)) S DIR(0)="Y",DIR("A")="Want to Edit data",DIR("B")="NO" D ^DIR K DIR S:$D(DIRUT) FBAAOUT=1 Q:$D(DIRUT)  D:Y EDITV^FBAAVD
"RTN","FBAACO1",52,0)
 I $P(FBSITE(0),"^",11)'="Y"!('$D(^XUSEC("FBAA ESTABLISH VENDOR",DUZ))) S DIR(0)="E" D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACO1",53,0)
 S FBV=DA,FBAR(DA)="" D ^FBAACO4
"RTN","FBAACO1",54,0)
 Q
"RTN","FBAACO1",55,0)
 ;
"RTN","FBAACO1",56,0)
GETINV ;assign invoice number or select existing invoice number
"RTN","FBAACO1",57,0)
 K FBAAOUT S FBINTOT=0 S DIR(0)="Y",DIR("A")="Want a new Invoice number assigned",DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACO1",58,0)
 I Y D GETNXI^FBAAUTL W !!,"Invoice # ",FBAAIN," assigned to this Invoice" Q
"RTN","FBAACO1",59,0)
GETINV1 ;selects existing invoice if user does not choose to assign new number
"RTN","FBAACO1",60,0)
 S DIR(0)="N",DIR("A")="Select Invoice number",DIR("?")="Select one of the previously entered Invoice #'s" D ^DIR K DIR I $D(DIRUT)!(X="") G GETINV:'$G(FB583) S FBAAOUT=1 Q
"RTN","FBAACO1",61,0)
 D CHK1^FBAACO4 G GETINV1:'$G(FBAACK1) K FBAACK1
"RTN","FBAACO1",62,0)
 I '$D(^FBAAC("AJ",FBAABE,X)) D  G GETINV1
"RTN","FBAACO1",63,0)
 . W !,$C(7),"Only previously entered invoices in the same batch may be selected!"
"RTN","FBAACO1",64,0)
 S FBAAIN=X D CALC^FBAACO3 W:FBINTOT>0 ?33,"Current Total: $ "_$J(FBINTOT,1,2)
"RTN","FBAACO1",65,0)
 Q
"RTN","FBAACO1",66,0)
 ;
"RTN","FBAACO1",67,0)
GETINDT ;get invoice dates
"RTN","FBAACO1",68,0)
 ;input requires FBAABDT (authorization from date)
"RTN","FBAACO1",69,0)
 K FBAAOUT W !,"Enter Date Correct Invoice Received or Last Date of Service" S %DT("A")="(whichever is later): " S:$G(FBAAID) %DT("B")=$$DATX^FBAAUTL(FBAAID) I $G(FBCNH) S %DT(0)=$G(FBENDDT)
"RTN","FBAACO1",70,0)
 S %DT="AEXP" D ^%DT K %DT I X="^"!(X="") S FBAAOUT=1 Q
"RTN","FBAACO1",71,0)
 S FBAAID=Y I '$G(FBCNP) I FBAAID<FBAABDT W !!,$C(7),"Invoice date is earlier than Patient's Authorization date!!" K FBAAID G GETINDT
"RTN","FBAACO1",72,0)
GETIND1 W ! S %DT("A")="Enter Vendor Invoice Date: ",%DT="AEXP" S:$G(FBAAVID) %DT("B")=$$DATX^FBAAUTL(FBAAVID) D ^%DT K %DT G GETINDT:X="" I X="^" S FBAAOUT=1 Q
"RTN","FBAACO1",73,0)
 S FBAAVID=Y I FBAAVID>FBAAID W !!,$C(7),"Vendor's invoice date is later than the date you received it!!" K FBAAVID G GETIND1
"RTN","FBAACO1",74,0)
 Q
"RTN","FBAACO1",75,0)
 ;
"RTN","FBAACO1",76,0)
DISPINV ;display invoice totals
"RTN","FBAACO1",77,0)
 ;required inputs FBAADT (auth dt),DFN
"RTN","FBAACO1",78,0)
 S H=$E(FBAADT,1,5)_"00",R=9999999.9999-H,S=$E(FBAADT,1,5)_31,S=9999999.9999-S,G=+$E(FBAADT,4,5)_+$E(FBAADT,2,3) D CKMAX^FBAACO3
"RTN","FBAACO1",79,0)
 S FBTPD=0 I $D(^FBAAC(DFN,3,"AB",FBAADT)) S FBZX=$O(^FBAAC(DFN,3,"AB",FBAADT,0)) I $D(^FBAAC(DFN,3,FBZX,0)) W !!,"$ ",$P(^(0),"^",3)," for travel already entered for this date of service" S FBTPD=1
"RTN","FBAACO1",80,0)
 W:'$D(FBCHCO) !!,"Total already paid on ID Card for month:   $ ",A,"   Maximum allowed: $ ",$P(FBSITE(1),"^",9),!,"Total already paid on All/Other for month: $ ",FBAOT
"RTN","FBAACO1",81,0)
 Q
"RTN","FBAACO2")
0^8^B12823251
"RTN","FBAACO2",1,0)
FBAACO2 ;AISC/GRR-PAYMENT PROCESS FOR DUPLICATE ;7/13/2003
"RTN","FBAACO2",2,0)
 ;;3.5;FEE BASIS;**4,55,61**;JAN 30, 1995
"RTN","FBAACO2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACO2",4,0)
RD S DIR(0)="Y",DIR("A")="Want this payment stored as a Medical Denial",DIR("B")="YES",DIR("?")="Enter 'Yes' to store payment entry as a denial and send a Suspension letter.  Enter 'No' to have nothing happen." D ^DIR K DIR Q:$D(DIRUT)!('Y)
"RTN","FBAACO2",5,0)
 S FBDEN=1 Q
"RTN","FBAACO2",6,0)
FILE ;files sp multiple entry
"RTN","FBAACO2",7,0)
 K DR S TP="" I $G(FBDEN) S FBAMTPD=0
"RTN","FBAACO2",8,0)
 S DR="49///^S X=$G(FBCSID);50///^S X=$G(FBFPPSC);I $G(FBDEN) S Y=1;48;47//1;S FBUNITS=X;S:$G(FBFPPSC)="""" Y=""@11"";S FBX=$$FPPSL^FBUTL5();S:FBX=-1 Y=0;51///^S X=FBX;@11"
"RTN","FBAACO2",9,0)
 S DR(1,162.03,1)="D PPT^FBAACO1();34///^S X=$G(FBAAMM1);D POS^FBAACO1;S:'$G(FBHCFA(30)) Y=0;1;S J=X;I $G(FBDEN) S Y=2;D FEE^FBAACO0;44////^S X=FBFSAMT;45///^S X=FBFSUSD;2///^S X=FBAMTPD;S K=X"
"RTN","FBAACO2",10,0)
 ;S DR(1,162.03,2)="S:J-K=0 Y=6;3//^S X=$S(J-K:J-K,1:"""");S:'X Y=6;3.5///^S X=DT;@4;4;I X']"""" D SC^FBAACO3;S:X'=4 Y=6;22;6////^S X=DUZ"
"RTN","FBAACO2",11,0)
 S DR(1,162.03,2)="S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2);S:FBX=0 Y=0;6////^S X=DUZ"
"RTN","FBAACO2",12,0)
 S DR(1,162.03,3)="7////^S X=FBAABE;8////^S X=BO;13///^S X=FBAAID;14///^S X=FBAAIN;33///^S X=FBAAVID;I $G(FBDEN) S FBTST=1"
"RTN","FBAACO2",13,0)
 I '$G(FBDEN) D
"RTN","FBAACO2",14,0)
 .N FBCSVSTR S FBCSVSTR="I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@1"";"
"RTN","FBAACO2",15,0)
 .S DR(1,162.03,4)="S:$$EXTPV^FBAAUTL5(FBPOV)=""01"" Y=""@1"";S:FB7078]""""!($D(FB583)) Y=30;@5;28R;S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@5"";30////^S X=FBHCFA(30);31;32R;S Y=15;@1;28;"_FBCSVSTR_"30////^S X=FBHCFA(30);31"
"RTN","FBAACO2",16,0)
 .S DR(1,162.03,5)="15///^S X=FBPT;S FBX=$$RR^FBUTL4(.FBRRMK,2);S:FBX=0 Y=0"
"RTN","FBAACO2",17,0)
 .S DR(1,162.03,6)="16////^S X=FBPOV;17///^S X=FBTT;18///^S X=FBAAPTC;23////^S X=FBTYPE;26////^S X=FBPSA;S:$D(FBV583) Y=""@2"";27////^S X=FB7078;S Y=""@99"";@2;27////^S X=FBV583;@99;S FBTST=1"
"RTN","FBAACO2",18,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAACO2",19,0)
 S DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI,DA=FBAACPI
"RTN","FBAACO2",20,0)
 D LOCK^FBUCUTL("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",FBAACPI,1)
"RTN","FBAACO2",21,0)
 D ^DIE
"RTN","FBAACO2",22,0)
 I '$D(DTOUT),$G(FBTST) D
"RTN","FBAACO2",23,0)
 . D FILEADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAACO2",24,0)
 . D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACO2",25,0)
 L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI)
"RTN","FBAACO2",26,0)
 I $D(DTOUT) D KILL Q
"RTN","FBAACO2",27,0)
 I '$G(FBTST),$G(DA) S DIR(0)="YA",DIR("A")="Entering an '^' will delete "_$S($G(FBDEN):"denial",1:"payment")_".  Are you sure you want to delete? ",DIR("B")="No" D ^DIR K DIR G FILE:'$D(DIRUT)&('Y) D KILL Q
"RTN","FBAACO2",28,0)
 K FBTST,FBDEN,FBAAMM1,DIE,DR,DA,FBX
"RTN","FBAACO2",29,0)
 I $D(FBDL) S FBAAOUT=1 Q
"RTN","FBAACO2",30,0)
 Q
"RTN","FBAACO2",31,0)
KILL S DIK=DIE D ^DIK K DIE,DIK I '$G(FBCNP) D Q^FBAACO S FBAAOUT=1
"RTN","FBAACO2",32,0)
 W !,"Deleted" Q
"RTN","FBAACO3")
0^17^B47823377
"RTN","FBAACO3",1,0)
FBAACO3 ;AISC/GRR-ENTER PAYMENT CONTINUED ;7/7/2003
"RTN","FBAACO3",2,0)
 ;;3.5;FEE BASIS;**4,38,55,61**;JAN 30, 1995
"RTN","FBAACO3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACO3",4,0)
DOEDIT ;
"RTN","FBAACO3",5,0)
 N FB1725,FBFPPSC
"RTN","FBAACO3",6,0)
 W ! S FBAACP(0)=FBAACP
"RTN","FBAACO3",7,0)
 S DIC="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAACO3",8,0)
 S DIC(0)="EQMZ",DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI
"RTN","FBAACO3",9,0)
 S X=$$CPT^FBAAUTL4(FBAACP)
"RTN","FBAACO3",10,0)
 D ^DIC I Y<0 S FBAAOUT=1 Q
"RTN","FBAACO3",11,0)
 S (DA,FBAACPI)=+Y,K=$P(Y(0),U,3),FBZBN=$P(Y(0),U,8),FBZBS=$S(FBZBN]"":$P($G(^FBAA(161.7,FBZBN,"ST")),U),1:""),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBAACO3",12,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBAACO3",13,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBAACO3",14,0)
 S FBAAMM1=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,2)),U,2)
"RTN","FBAACO3",15,0)
 S FBFSAMT(0)=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,2)),U,12)
"RTN","FBAACO3",16,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBAACO3",17,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBAACO3",18,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"_FBAACPI_",""M"")")
"RTN","FBAACO3",19,0)
 ; load current adjustment data
"RTN","FBAACO3",20,0)
 D LOADADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAACO3",21,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBAACO3",22,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBAACO3",23,0)
 ; load current remittance remark data
"RTN","FBAACO3",24,0)
 D LOADRR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACO3",25,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBAACO3",26,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBAACO3",27,0)
 ; load FPPS data
"RTN","FBAACO3",28,0)
 S FBFPPSC=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,3)),U)
"RTN","FBAACO3",29,0)
 S FBFPPSL=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,3)),U,2)
"RTN","FBAACO3",30,0)
 I FBZBS=""!(FBZBS="V") D NOGO S FBAAOUT=1 Q
"RTN","FBAACO3",31,0)
 ; first edit CPT code and modifiers
"RTN","FBAACO3",32,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) S FBAAOUT=1 Q
"RTN","FBAACO3",33,0)
 ; if CPT was changed then update file
"RTN","FBAACO3",34,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" S FBAAOUT=1 Q
"RTN","FBAACO3",35,0)
 . N FBIENS,FBFDA
"RTN","FBAACO3",36,0)
 . S FBIENS=FBAACPI_","_FBSDI_","_FBV_","_DFN_","
"RTN","FBAACO3",37,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBAACO3",38,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAACO3",39,0)
 ; if modifiers changed then update file
"RTN","FBAACO3",40,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(DFN,FBV,FBSDI,FBAACPI)
"RTN","FBAACO3",41,0)
 ; now edit remaining fields
"RTN","FBAACO3",42,0)
 D SETO K DR
"RTN","FBAACO3",43,0)
 S DR="48;47;S FBUNITS=X;42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBAACO3",44,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1);34///@;34////^S X=FBAAMM1;30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAACO3",45,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBAACO3",46,0)
 ;S DR(1,162.03,3)="3//^S X=$S(J-K:J-K,1:"""");4;S:X'=4 Y=6;22;6////^S X=DUZ;13;33"
"RTN","FBAACO3",47,0)
 S DR(1,162.03,3)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBAACO3",48,0)
 S DR(1,162.03,4)="S:FBFPPSC="""" Y=13;W !,""FPPS CLAIM ID: ""_FBFPPSC;S FBX=$$FPPSL^FBUTL5(FBFPPSL,,1);51///^S X=FBX;S FBFPPSL=X;13;33"
"RTN","FBAACO3",49,0)
 S DR(1,162.03,5)="S:$$EXTPV^FBAAUTL5(FBPOV)=""01"" Y=""@1"";S Y=$S('$D(FB7078):28,FB7078]"""":31,1:28);@5;28R;S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@5"";31;32R;S Y=""@7"";@1;28;I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@1"";31"
"RTN","FBAACO3",50,0)
 S DR(1,162.03,6)="@7;K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD)"
"RTN","FBAACO3",51,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",DIE("NO^")="",FBOT=1
"RTN","FBAACO3",52,0)
 D LOCK^FBUCUTL("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",FBAACPI) I 'FBLOCK S FBAAOUT=1 Q
"RTN","FBAACO3",53,0)
 D ^DIE
"RTN","FBAACO3",54,0)
 ; if adjustment data changed then file
"RTN","FBAACO3",55,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAACO3",56,0)
 ; if remit remark data changed then file
"RTN","FBAACO3",57,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACO3",58,0)
 L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI) K FBOT,DIE,DR,DA
"RTN","FBAACO3",59,0)
 Q:$D(FBDL)
"RTN","FBAACO3",60,0)
 I $G(FBAAIN) S FBINTOT=0 D CALC
"RTN","FBAACO3",61,0)
 Q
"RTN","FBAACO3",62,0)
SETO S FY=$E(FBAADT,1,3)+1700+$S($E(FBAADT,4,5)>9:1,1:0)
"RTN","FBAACO3",63,0)
 Q
"RTN","FBAACO3",64,0)
OUT I K>0 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1,FBINTOT=FBINTOT+K
"RTN","FBAACO3",65,0)
 Q
"RTN","FBAACO3",66,0)
CKMAX S (FBAOT,A)=0,O="" F Z=S-.1:0 S Z=$O(^FBAAC(DFN,"AB",Z)) Q:Z'>0!(Z>R)  F Q=0:0 S Q=$O(^FBAAC(DFN,"AB",Z,Q)) Q:Q'>0  S W=$O(^FBAAC(DFN,"AB",Z,Q,0)) I $D(^FBAAC(DFN,1,Q,1,W,0)) D SMORE
"RTN","FBAACO3",67,0)
 I A>$P(FBSITE(1),"^",9) G NO
"RTN","FBAACO3",68,0)
 Q
"RTN","FBAACO3",69,0)
SMORE N FBA,FBB S FBB=$P($G(^FBAAC(+DFN,1,+Q,1,+W,0)),U,4),E=0
"RTN","FBAACO3",70,0)
 F  S E=$O(^FBAAC(DFN,1,Q,1,W,1,E)) Q:'E  S FBA=$G(^(E,0)) I $P(FBA,"^",9)=2,$P(FBA,"^",18)'=1 D
"RTN","FBAACO3",71,0)
 .I $$IDCHK^FBAAUTL3(DFN,FBB) S A=A+$P(FBA,"^",3) Q
"RTN","FBAACO3",72,0)
 .S FBAOT=FBAOT+$P(FBA,U,3)
"RTN","FBAACO3",73,0)
 Q
"RTN","FBAACO3",74,0)
NO W !!,*7,"Warning Patient already at maximum allowed for month of service",! Q
"RTN","FBAACO3",75,0)
WARN W !!,*7,"You have reached the maximum number of payments for a Batch!",!,"You must select another Batch for entering Payments!"
"RTN","FBAACO3",76,0)
CALC ;Calculate Current Invoice Total
"RTN","FBAACO3",77,0)
 F J=0:0 S J=$O(^FBAAC("C",FBAAIN,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("C",FBAAIN,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("C",FBAAIN,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("C",FBAAIN,J,K,L,M)) Q:M'>0  D CALC1
"RTN","FBAACO3",78,0)
 K J,K,L,M,FZNODE Q
"RTN","FBAACO3",79,0)
CALC1 S FZNODE=^FBAAC(J,1,K,1,L,1,M,0),A2=$P(FZNODE,"^",3),FBINTOT=FBINTOT+A2,FBAAID=$P(FZNODE,"^",15),FBAAVID=$P($G(^FBAAC(J,1,K,1,L,1,M,2)),"^")
"RTN","FBAACO3",80,0)
 Q
"RTN","FBAACO3",81,0)
FEEDT ;
"RTN","FBAACO3",82,0)
 ; input FB1725 - true (=1) when edited payment is for a Mill Bill claim
"RTN","FBAACO3",83,0)
 N FBX
"RTN","FBAACO3",84,0)
 D SETO:'$G(FY) S FBFY=FY-1
"RTN","FBAACO3",85,0)
 S (FBFSAMT,FBFSUSD)="",FBAMTPD=$G(FBAMTPD)
"RTN","FBAACO3",86,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBAADT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME))
"RTN","FBAACO3",87,0)
 I '$G(FBAAMM1) D
"RTN","FBAACO3",88,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAACO3",89,0)
 E  D
"RTN","FBAACO3",90,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAACO3",91,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAACO3",92,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAACO3",93,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAACO3",94,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAACO3",95,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAACO3",96,0)
 E  W !?2,"Unable to determine a FEE schedule amount."
"RTN","FBAACO3",97,0)
 ;
"RTN","FBAACO3",98,0)
 I FB1725 D
"RTN","FBAACO3",99,0)
 . W !!?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAACO3",100,0)
 . I FBFSAMT D
"RTN","FBAACO3",101,0)
 . . S FBFSAMT=$J(FBFSAMT*.7,0,2)
"RTN","FBAACO3",102,0)
 . . W !?2,"  Therefore, fee schedule amount reduced to $",FBFSAMT," (70%)."
"RTN","FBAACO3",103,0)
 ;
"RTN","FBAACO3",104,0)
 I $G(FBUNITS)>1 D
"RTN","FBAACO3",105,0)
 . W !!?2,"Units Paid = ",FBUNITS
"RTN","FBAACO3",106,0)
 . Q:FBFSAMT'>0
"RTN","FBAACO3",107,0)
 . N FBFSUNIT
"RTN","FBAACO3",108,0)
 . ; determine if fee schedule can be multipled by units
"RTN","FBAACO3",109,0)
 . S FBFSUNIT=$S(FBFSUSD="R":1,FBFSUSD="F"&(FBAADT>3040930):1,1:0)
"RTN","FBAACO3",110,0)
 . I FBFSUNIT D
"RTN","FBAACO3",111,0)
 . . S FBFSAMT=$J(FBFSAMT*FBUNITS,0,2)
"RTN","FBAACO3",112,0)
 . . W !?2,"  Therefore, fee schedule amount increased to $",FBFSAMT
"RTN","FBAACO3",113,0)
 . E  D
"RTN","FBAACO3",114,0)
 . . W !?2,"  Fee schedule not complied on per unit basis so amount not adjusted by units."
"RTN","FBAACO3",115,0)
 ;
"RTN","FBAACO3",116,0)
 I '$G(FBAAMM1) D
"RTN","FBAACO3",117,0)
 . ; set default amount paid to lesser of amt claimed (J) or fee sched.
"RTN","FBAACO3",118,0)
 . S FBAMTPD=$S(FBFSAMT'>0:J,FBFSAMT>J:J,1:FBFSAMT)
"RTN","FBAACO3",119,0)
 W !
"RTN","FBAACO3",120,0)
 Q
"RTN","FBAACO3",121,0)
CHKIT I X>FBAMTPD&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,"You must be a holder of the 'FBAASUPERVISOR' security key in order to",!,"exceed the Fee Schedule.",! S $P(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,0),"^",3)=K,Y=2 Q
"RTN","FBAACO3",122,0)
 Q
"RTN","FBAACO3",123,0)
NOGO W !!,*7,"This payment CANNOT be edited.  The batch the payment is in",!,"has been Vouchered.  You may void the payment with the Void Payment option.",!
"RTN","FBAACO3",124,0)
 Q
"RTN","FBAACO3",125,0)
 ;
"RTN","FBAACO3",126,0)
SC W *7,!?4,"Suspense code is required!",! S Y="@4" Q
"RTN","FBAACO3",127,0)
 ;
"RTN","FBAACO3",128,0)
DEL ;delete date of service if no service provided entered
"RTN","FBAACO3",129,0)
 I '$O(^FBAAC(DFN,1,FBV,1,FBSDI,1,0)) D
"RTN","FBAACO3",130,0)
 .S DIK="^FBAAC(DFN,1,FBV,1,",DA(2)=DFN,DA(1)=FBV,DA=FBSDI D ^DIK W !!?5,*7,"Incomplete payment entry deleted.",!
"RTN","FBAACO3",131,0)
 K DIK,DA Q
"RTN","FBAACP")
0^13^B33435662
"RTN","FBAACP",1,0)
FBAACP ;AISC/CMR-C&P PAYMENT DRIVER ;7/13/2003
"RTN","FBAACP",2,0)
 ;;3.5;FEE BASIS;**4,38,55,61**;JAN 30, 1995
"RTN","FBAACP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACP",4,0)
 K FBAAOUT,FBPOP S FBCNP=1 ;C&P flag
"RTN","FBAACP",5,0)
 D SITE^FBAACO G Q:$G(FBPOP) D BT^FBAACO G Q:$G(FBAAOUT)
"RTN","FBAACP",6,0)
1 K FBAR,FBAAOUT,FBDL,FBAAMM D GETVEN1^FBAACO1:$D(FB583),GETVEN^FBAACO1:'$D(FB583) G CLN:$G(FBAAOUT)
"RTN","FBAACP",7,0)
 D GETINV^FBAACO1 G CLN:$G(FBAAOUT)
"RTN","FBAACP",8,0)
 D GETINDT^FBAACO1 G CLN:$G(FBAAOUT)
"RTN","FBAACP",9,0)
 D MMPPT^FBAACP G CLN:$G(FBAAOUT)
"RTN","FBAACP",10,0)
SVDT W !! S %DT="AEXP",%DT("A")="Date of Service: " D ^%DT I X="^" G CLN
"RTN","FBAACP",11,0)
 I Y<0!(Y>FBAAID) W *7,!!,"Enter the date the Vendor provided the service to the Patient.",!,"The date must be prior to the date the invoice is received.",! G SVDT
"RTN","FBAACP",12,0)
 S FBAADT=Y D SETO^FBAACO3,CPTM^FBAALU(FBAADT) I 'FBGOT G CLN
"RTN","FBAACP",13,0)
 ; prompt revenue code
"RTN","FBAACP",14,0)
 S FBAARC=$$ASKREVC^FBUTL5() I FBAARC="^" S FBAAOUT=1 G CLN
"RTN","FBAACP",15,0)
 ; prompt units paid
"RTN","FBAACP",16,0)
 S FBUNITS=$$ASKUNITS^FBUTL5() I FBUNITS="^" S FBAAOUT=1 G CLN
"RTN","FBAACP",17,0)
 D ASKZIP^FBAAFS($G(FBV),$G(FBAADT)) I $G(FBAAOUT)!($G(FBZIP)']"") G CLN
"RTN","FBAACP",18,0)
 I $$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) D ASKTIME^FBAAFS I $G(FBAAOUT)!('$G(FBTIME)) G CLN
"RTN","FBAACP",19,0)
 D HCFA G CLN:$G(FBAAOUT)
"RTN","FBAACP",20,0)
 S FBAAAMT=0 D AMTPD I $G(FBAAOUT)!('$G(FBAAAMT)) G CLN
"RTN","FBAACP",21,0)
 ; prompt for remittance remarks
"RTN","FBAACP",22,0)
 I $$RR^FBUTL4(.FBRRMK,2)=0 S FBAAOUT=1 G CLN
"RTN","FBAACP",23,0)
MULT ;begin unique patient entry
"RTN","FBAACP",24,0)
 W:FBINTOT>0 !,"Invoice: "_FBAAIN_" Totals: $ "_FBINTOT
"RTN","FBAACP",25,0)
 K FBAAOUT,FBDL S (DFN,FTP)="" D SITE^FBAACO G Q:$G(FBPOP) W !!
"RTN","FBAACP",26,0)
 I '$D(FB583) K FBDL D GETVET^FBAAUTL1 G CLN:'DFN K FBDMRA D GETAUTH^FBAAUTL1 G MULT:FTP']""
"RTN","FBAACP",27,0)
 K FBAAOUT D  G Q:$G(FBAAOUT)
"RTN","FBAACP",28,0)
 . F  D  Q:$G(FBAAOUT)  Q:($$INPICD9^FBCSV1(+$G(Y),"",$G(FBAADT))=0)
"RTN","FBAACP",29,0)
 . . S I=28,DIR(0)="PO^80:EMQZ",DIR("A")="PRIMARY DIAGNOSIS" D DIR
"RTN","FBAACP",30,0)
 D PAT^FBAACO W !! D FILEV^FBAACO5(DFN,FBV) I $G(FBAAOUT) G Q:$D(FB583),CLN
"RTN","FBAACP",31,0)
 ;check for payments against all linked vendors
"RTN","FBAACP",32,0)
 S DA=+Y D CHK^FBAACO4 K FBAACK1,FBAAOUT,DA,X,Y
"RTN","FBAACP",33,0)
 W !! D GETSVDT^FBAACO5(DFN,FBV,FBASSOC,0,FBAADT) I $G(FBAAOUT) D AUTHQ^FBAACO G MULT
"RTN","FBAACP",34,0)
 D SETO^FBAACO3,CHK2^FBAACO4 I FBJ']"" G SVPR
"RTN","FBAACP",35,0)
CHKE ;determines what action to take on duplicate services entered
"RTN","FBAACP",36,0)
 K FBAAOUT W !!,*7,"Service selected for that date already in system."
"RTN","FBAACP",37,0)
 S DIR(0)="Y",DIR("A")="Do you want to add another service for the SAME DATE",DIR("B")="No" D ^DIR K DIR G SVPR:Y I $D(DIRUT) D DEL^FBAACO3 G Q
"RTN","FBAACP",38,0)
 W !!,*7,"You must use the 'EDIT PAYMENT' option to edit the service previously",!,"entered for that date." D DEL^FBAACO3
"RTN","FBAACP",39,0)
 G MULT
"RTN","FBAACP",40,0)
SVPR K FBAAOUT D SVCPR^FBAACO1 G CHKE:$G(FBAAOUT)
"RTN","FBAACP",41,0)
 D FILE^FBAACP1 I Z1>(FBAAMPI-1) W !!,*7,"You have reached the maximum number of payments for a batch!",!,"You must select another Batch for entering Payments!" G CLN
"RTN","FBAACP",42,0)
 G MULT
"RTN","FBAACP",43,0)
Q ;kill variables and exit
"RTN","FBAACP",44,0)
 D Q^FBAACO
"RTN","FBAACP",45,0)
 Q
"RTN","FBAACP",46,0)
AMTPD ;get amount paid
"RTN","FBAACP",47,0)
 N FBX
"RTN","FBAACP",48,0)
 S FBFY=FY-1
"RTN","FBAACP",49,0)
 S (FBAMTPD,FBFSAMT,FBFSUSD)=""
"RTN","FBAACP",50,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBAADT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME))
"RTN","FBAACP",51,0)
 ;
"RTN","FBAACP",52,0)
 I '$G(FBAAMM1) D
"RTN","FBAACP",53,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAACP",54,0)
 E  D
"RTN","FBAACP",55,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAACP",56,0)
 ;
"RTN","FBAACP",57,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAACP",58,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAACP",59,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAACP",60,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAACP",61,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAACP",62,0)
 E  W !?2,"Unable to determine a FEE schedule amount."
"RTN","FBAACP",63,0)
 ;
"RTN","FBAACP",64,0)
 I $G(FBUNITS)>1 D
"RTN","FBAACP",65,0)
 . W !!?2,"Units Paid = ",FBUNITS
"RTN","FBAACP",66,0)
 . Q:FBFSAMT'>0
"RTN","FBAACP",67,0)
 . N FBFSUNIT
"RTN","FBAACP",68,0)
 . ; determine if fee schedule can be multipled by units
"RTN","FBAACP",69,0)
 . S FBFSUNIT=$S(FBFSUSD="R":1,FBFSUSD="F"&(FBAADT>3040930):1,1:0)
"RTN","FBAACP",70,0)
 . I FBFSUNIT D
"RTN","FBAACP",71,0)
 . . S FBFSAMT=$J(FBFSAMT*FBUNITS,0,2)
"RTN","FBAACP",72,0)
 . . W !?2,"  Therefore, fee schedule amount increased to $",FBFSAMT
"RTN","FBAACP",73,0)
 . E  D
"RTN","FBAACP",74,0)
 . . W !?2,"  Fee schedule not complied on per unit basis so amount not adjusted by units."
"RTN","FBAACP",75,0)
 ;
"RTN","FBAACP",76,0)
 I '$G(FBAAMM1) S FBAMTPD=FBFSAMT
"RTN","FBAACP",77,0)
 ;
"RTN","FBAACP",78,0)
 I FBAMTPD=0 D  Q:$G(FBAAOUT)
"RTN","FBAACP",79,0)
 . ;if fee schedule = 0 write message and quit
"RTN","FBAACP",80,0)
 . W !,"You must use the Enter Payment option for CPT codes that have a",!,"Fee Schedule set equal to zero."
"RTN","FBAACP",81,0)
 . S FBAAOUT=1
"RTN","FBAACP",82,0)
 W !
"RTN","FBAACP",83,0)
 S DIR(0)="162.03,1",DIR("A")="Enter Amount Paid:  $",DIR("?")="Enter a dollar amount that does not exceed the FEE Schedule" S:FBAMTPD'="" DIR("B")=FBAMTPD D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACP",84,0)
 I $G(FBAMTPD),+Y>FBAMTPD&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"You must be a holder of the 'FBAASUPERVISOR' security key to",!,"exceed the FEE Schedule.  Enter an '^' to quit or accept the default.",! G AMTPD
"RTN","FBAACP",85,0)
 S FBAAAMT=+Y
"RTN","FBAACP",86,0)
 Q
"RTN","FBAACP",87,0)
HCFA ;get HCFA fields
"RTN","FBAACP",88,0)
 F I=28,30,31 S FBHCFA(I)=""
"RTN","FBAACP",89,0)
 W ! F I=30,31 S DIR(0)="P"_$S(I=30:"^353.1",I=31:"O^353.2")_":EMQZ" D DIR Q:$G(FBAAOUT)
"RTN","FBAACP",90,0)
 K DIR Q
"RTN","FBAACP",91,0)
DIR ;generic DIR call for HCFA
"RTN","FBAACP",92,0)
 D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S FBAAOUT=1 Q
"RTN","FBAACP",93,0)
 S:Y'=-1 FBHCFA(I)=$P(Y,"^")
"RTN","FBAACP",94,0)
 Q
"RTN","FBAACP",95,0)
CLN G Q:$D(FB583)
"RTN","FBAACP",96,0)
 D Q G FBAACP
"RTN","FBAACP",97,0)
 Q
"RTN","FBAACP",98,0)
MMPPT ;money management/prompt pay type for multiple payment entry
"RTN","FBAACP",99,0)
 ; input
"RTN","FBAACP",100,0)
 ;   FBAAPTC
"RTN","FBAACP",101,0)
 ; output
"RTN","FBAACP",102,0)
 ;   FBAAMM
"RTN","FBAACP",103,0)
 ;   FBAAMM1
"RTN","FBAACP",104,0)
 ;   FBAAOUT
"RTN","FBAACP",105,0)
 ;
"RTN","FBAACP",106,0)
 S (FBAAMM,FBAAMM1)=""
"RTN","FBAACP",107,0)
 I $G(FBAAPTC)'="R" D
"RTN","FBAACP",108,0)
 . W !,"The answer to the following will apply to all payments entered via this option."
"RTN","FBAACP",109,0)
 . S DIR(0)="Y"
"RTN","FBAACP",110,0)
 . S DIR("A")="Are payments for contracted services"
"RTN","FBAACP",111,0)
 . S DIR("B")="No"
"RTN","FBAACP",112,0)
 . S DIR("?",1)="Answering no indicates interest will not be paid for any line items."
"RTN","FBAACP",113,0)
 . S DIR("?",2)="Answering yes indicates interest will be paid."
"RTN","FBAACP",114,0)
 . S DIR("?",3)="A fee schedule is not used for contracted services."
"RTN","FBAACP",115,0)
 . S DIR("?")="Enter either 'Y' or 'N'."
"RTN","FBAACP",116,0)
 . D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACP",117,0)
 . S (FBAAMM,FBAAMM1)=$S(Y:1,1:"")
"RTN","FBAACP",118,0)
 Q
"RTN","FBAACP1")
0^14^B6734409
"RTN","FBAACP1",1,0)
FBAACP1 ;AISC/CMR-C&P PAYMENT DRIVER ;7/17/2003
"RTN","FBAACP1",2,0)
 ;;3.5;FEE BASIS;**4,61**;JAN 30, 1995
"RTN","FBAACP1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAACP1",4,0)
 ;
"RTN","FBAACP1",5,0)
FILE ;files sp multiple entry
"RTN","FBAACP1",6,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI,DA=FBAACPI
"RTN","FBAACP1",7,0)
 S TP="",DR="1///^S X=FBAAAMT;Q;2///^S X="_$S($G(FBDEN):0,1:FBAAAMT)_";I '$G(FBDEN) S Y=6;3//^S X=FBAAAMT;3.5///^S X=DT;@4;4;I X']"""" D SC^FBAACO3;S:X'=4 Y=6;22;6////^S X=DUZ;7////^S X=FBAABE"
"RTN","FBAACP1",8,0)
 S DR=DR_";8////^S X=BO;13///^S X=FBAAID;14///^S X=FBAAIN;15///^S X=FBPT;23////^S X=2;33///^S X=FBAAVID;16////^S X=FBPOV;17///^S X=FBTT;18///^S X=FBAAPTC;26////^S X=FBPSA"
"RTN","FBAACP1",9,0)
 S DR(1,162.03,1)="34///^S X=$G(FBAAMM1);28////^S X=FBHCFA(28);30///^S X=FBHCFA(30);31////^S X=FBHCFA(31);44///^S X=FBFSAMT;45////^S X=FBFSUSD;48///^S X=FBAARC;47///^S X=FBUNITS;S FBTST=1"
"RTN","FBAACP1",10,0)
 D LOCK^FBUCUTL("^FBAAC(",DFN,1)
"RTN","FBAACP1",11,0)
 D ^DIE
"RTN","FBAACP1",12,0)
 I $G(FBTST) D
"RTN","FBAACP1",13,0)
 . D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACP1",14,0)
 L -^FBAAC(DFN)
"RTN","FBAACP1",15,0)
 I '$G(FBTST),$G(DA) S DIR(0)="YA",DIR("A")="Entering an '^' will delete "_$S($G(FBDEN):"denial",1:"payment")_".  Are you sure you want to delete? ",DIR("B")="No" D ^DIR K DIR G FILE:'$D(DIRUT)&('Y) D KILL^FBAACO2 Q
"RTN","FBAACP1",16,0)
 S FBINTOT=FBINTOT+FBAAAMT
"RTN","FBAACP1",17,0)
 I FBAAAMT>0 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1
"RTN","FBAACP1",18,0)
 W !,$S($G(FBDEN):"Denial",1:"Payment")," Data Entered for Patient"
"RTN","FBAACP1",19,0)
 K FBDEN,FBAAMM1,FBTST,DIE,DR,DA
"RTN","FBAACP1",20,0)
 Q
"RTN","FBAACP1",21,0)
 ;
"RTN","FBAACP1",22,0)
PAID ;called from fbaacp to reset fee schedule if user opts to edit
"RTN","FBAACP1",23,0)
 ;a service.  If fee schedule of new cpt_modifier=0 tell user
"RTN","FBAACP1",24,0)
 ;not allowed in this option and refer to edit payment option.
"RTN","FBAACP1",25,0)
 ;
"RTN","FBAAEPI")
0^33^B14319298
"RTN","FBAAEPI",1,0)
FBAAEPI ;AISC/GRR-EDIT PREVIOUSLY ENTERED PHARMACY INVOICE ;7/16/2003
"RTN","FBAAEPI",2,0)
 ;;3.5;FEE BASIS;**38,61**;JAN 30, 1995
"RTN","FBAAEPI",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAEPI",4,0)
RD W ! S DIC="^FBAA(162.1,",DIC(0)="AEQM",DIC("A")="Select Invoice #: ",DIC("S")="I $P(^(0),U,5)'=4!($P(^(0),U,5)=4&$D(^XUSEC(""FBAASUPERVISOR"",DUZ)))" D ^DIC K DIC("S") G END:X=""!(X="^"),RD:Y<0
"RTN","FBAAEPI",5,0)
 S (DA,FBDA)=+Y,DIE=DIC
"RTN","FBAAEPI",6,0)
 ; save FPPS data prior to edit session
"RTN","FBAAEPI",7,0)
 S (FBFPPSC,FBFPPSC(0))=$P($G(^FBAA(162.1,FBDA,0)),U,13)
"RTN","FBAAEPI",8,0)
 S DR="1;Q;12;S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);S:FBX=-1 Y=0;S:FBX="""" Y=""@10"";13///^S X=FBX;S FBFPPSC=X;S Y=""@15"";@10;13///@;S FBFPPSC="""";@15;3;5"
"RTN","FBAAEPI",9,0)
 D ^DIE K DIC
"RTN","FBAAEPI",10,0)
 ; if FPPS CLAIM ID changed, then update Rx's
"RTN","FBAAEPI",11,0)
 I FBFPPSC'=FBFPPSC(0) D CKINVEDI^FBAAEPI1(FBFPPSC(0),FBFPPSC,FBDA)
"RTN","FBAAEPI",12,0)
 S DIC="^FBAA(162.1,DA,""RX"",",DIC(0)="AEQM",DIC("W")="W ?30,""DATE RX FILLED: "",$E($P(^(0),U,3),4,5)_""/""_$E($P(^(0),U,3),6,7)_""/""_$E($P(^(0),U,3),2,3)" D ^DIC G END:X=""!(X="^"),RD:Y<0 W !
"RTN","FBAAEPI",13,0)
 S (FBJ,FBK)=0
"RTN","FBAAEPI",14,0)
 ;check status of batch rx is in.
"RTN","FBAAEPI",15,0)
 S DA=+Y,DA(1)=FBDA S FBSTAT=$P($G(^FBAA(161.7,+$P($G(^FBAA(162.1,+FBDA,"RX",+DA,0)),U,17),"ST")),U) I FBSTAT]"" D
"RTN","FBAAEPI",16,0)
 .I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) D
"RTN","FBAAEPI",17,0)
 .. I $S(FBSTAT="O":0,FBSTAT="C":0,1:1) D
"RTN","FBAAEPI",18,0)
 ... W !,*7,"You cannot edit a payment once released by a supervisor.",! S FBOUT=1 Q
"RTN","FBAAEPI",19,0)
 .I $S(FBSTAT="T":1,FBSTAT="V":1,1:0) D
"RTN","FBAAEPI",20,0)
 .. W !,*7,"You cannot edit an invoice when the batch has a status of transmitted",!,"or vouchered.",! S FBOUT=1
"RTN","FBAAEPI",21,0)
 I $G(FBOUT) D END G FBAAEPI
"RTN","FBAAEPI",22,0)
 S DIE="^FBAA(162.1,FBDA,""RX"","
"RTN","FBAAEPI",23,0)
 ; get current value of FPPS LINE ITEM to use as default
"RTN","FBAAEPI",24,0)
 S FBFPPSL=$P($G(^FBAA(162.1,FBDA,"RX",DA,3)),U)
"RTN","FBAAEPI",25,0)
 ; load current adjustment data
"RTN","FBAAEPI",26,0)
 D LOADADJ^FBRXFA(DA_","_FBDA_",",.FBADJ)
"RTN","FBAAEPI",27,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBAAEPI",28,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBAAEPI",29,0)
 ; load current remittance remark data
"RTN","FBAAEPI",30,0)
 D LOADRR^FBRXFR(DA_","_FBDA_",",.FBRRMK)
"RTN","FBAAEPI",31,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBAAEPI",32,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBAAEPI",33,0)
 S DR=".01;S:FBFPPSC="""" Y=1;S FBX=$$FPPSL^FBUTL5(FBFPPSL);S:FBX=-1 Y=0;36///^S X=FBX;S FBFPPSL=X;1;1.5;1.6;3;S FBJ=X;I $P(^FBAA(162.1,DA(1),""RX"",DA,0),U,9)=1 S Y="""";I 1;5"
"RTN","FBAAEPI",34,0)
 S DR(1,162.11,1)="S FBA=$P($G(^FBAA(162.1,DA(1),""RX"",DA,2)),U,6);S FB1725=$S(FBA[""FB583"":+$P($G(^FB583(+FBA,0)),U,28),1:0);W:FB1725 !?2,""**Payment is for emergency treatment under 38 U.S.C. 1725."""
"RTN","FBAAEPI",35,0)
 S DR(1,162.11,2)="@12;S FBHAP=$P(^FBAA(162.1,DA(1),""RX"",DA,0),U,16);6.5;S FBK=X;S:FBK]"""" Y=""@20"";K FBADJ,FBRRMK;S Y=8"
"RTN","FBAAEPI",36,0)
 S DR(1,162.11,3)="@20;I FBK>FBJ S $P(^FBAA(162.1,DA(1),""RX"",DA,0),U,16)=FBHAP W !,*7,""Amount Paid cannot be greater than the Amount Claimed"" S Y=""@12"""
"RTN","FBAAEPI",37,0)
 ;S DR(1,162.11,4)="S:FBJ=FBK Y=""@5"";6////^S X=FBJ-FBK;Q;6R;7R;S:X'=4 Y=""@6"";20;S Y=""@6"";@5;6///@;7///@;20///@;@6;8"
"RTN","FBAAEPI",38,0)
 S DR(1,162.11,4)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(FBJ-FBK,.FBADJ,2,,.FBADJD,1);K FBADJD"
"RTN","FBAAEPI",39,0)
 S DR(1,162.11,5)="K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD);K FBRRMKD;S:FBX=-1 Y=0;8"
"RTN","FBAAEPI",40,0)
 D ^DIE
"RTN","FBAAEPI",41,0)
 ; if adjustment data changed then file
"RTN","FBAAEPI",42,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBRXFA(DA_","_FBDA_",",.FBADJ)
"RTN","FBAAEPI",43,0)
 ; if remit remark data changed then file
"RTN","FBAAEPI",44,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBRXFR(DA_","_FBDA_",",.FBRRMK)
"RTN","FBAAEPI",45,0)
END K D,DA,DIC,DIE,DR,FBJ,FBK,FBDA,FBOUT,FBSTAT,FBHAP,X,Y,FBA,FB1725
"RTN","FBAAEPI",46,0)
 K FBADJ,FBADJD,FBADJL,FBFPPSC,FBFPPSL,FBRRMK,FBRRMKD,FBRRMKL
"RTN","FBAAEPI",47,0)
 Q
"RTN","FBAAEPI1")
0^34^B6187955
"RTN","FBAAEPI1",1,0)
FBAAEPI1 ;WOIFO/SAB-EDIT PREVIOUSLY ENTERED PHARMACY INVOICE (cont) ;7/9/2003
"RTN","FBAAEPI1",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBAAEPI1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAEPI1",4,0)
 ;
"RTN","FBAAEPI1",5,0)
CKINVEDI(FBFPPSC0,FBFPPSC1,FBDA1) ; Check Invoice for EDI
"RTN","FBAAEPI1",6,0)
 ; Input
"RTN","FBAAEPI1",7,0)
 ;  FBFPPSC0 - old FPPS CLAIM ID
"RTN","FBAAEPI1",8,0)
 ;  FBFPPSC1 - new FPPS CLAIM ID
"RTN","FBAAEPI1",9,0)
 ;  FBDA1    - invoice (internal entry number)
"RTN","FBAAEPI1",10,0)
 ; Result
"RTN","FBAAEPI1",11,0)
 ;  Prescriptions on invoice may be updated (FPPS LINE ITEM)
"RTN","FBAAEPI1",12,0)
 ;
"RTN","FBAAEPI1",13,0)
 ; If FBFPPSC0]"",FBFPPSC1="" then EDI changed from YES to NO
"RTN","FBAAEPI1",14,0)
 ;   need to delete FPPS LINE ITEM
"RTN","FBAAEPI1",15,0)
 ; If FBFPPSC0="",FBFPPSC1]"" then EDI changed from NO to YES
"RTN","FBAAEPI1",16,0)
 ;   need to prompt FPPS LINE ITEM
"RTN","FBAAEPI1",17,0)
 ; If FBFPPSC0]"",FBFPPSC1]"",FBFPPSC0'=FBFPPSC1 then
"RTN","FBAAEPI1",18,0)
 ;   EDI stayed YES, but FPPS CLAIM ID was changed
"RTN","FBAAEPI1",19,0)
 ;   prescriptions do not need to be updated
"RTN","FBAAEPI1",20,0)
 ;
"RTN","FBAAEPI1",21,0)
 N FBASKLN,FBDA,FBFDA,FBFPPSL,FBIENS,FBUPDLN
"RTN","FBAAEPI1",22,0)
 ;
"RTN","FBAAEPI1",23,0)
 I FBFPPSC0=FBFPPSC1 Q  ; FPPS CLAIM ID was not changed
"RTN","FBAAEPI1",24,0)
 I FBFPPSC0]"",FBFPPSC1]"" Q  ; EDI status not changed
"RTN","FBAAEPI1",25,0)
 ; 
"RTN","FBAAEPI1",26,0)
 S (FBASKLN,FBUPDLN)=0
"RTN","FBAAEPI1",27,0)
 I FBFPPSC0]"",FBFPPSC1="" S FBFPPSL="@",FBUPDLN=1
"RTN","FBAAEPI1",28,0)
 I FBFPPSC0="",FBFPPSC1]"" S (FBASKLN,FBUPDLN)=1
"RTN","FBAAEPI1",29,0)
 ;
"RTN","FBAAEPI1",30,0)
 W !!,"EDI Claim from FPPS was changed.  Updating each Rx on invoice..."
"RTN","FBAAEPI1",31,0)
 I FBASKLN D
"RTN","FBAAEPI1",32,0)
 . W !,"Since EDI Claim from FPPS was changed from NO to YES, the"
"RTN","FBAAEPI1",33,0)
 . W !,"FPPS LINE ITEM must be entered for each Rx on the invoice."
"RTN","FBAAEPI1",34,0)
 ;
"RTN","FBAAEPI1",35,0)
 ; loop thru Rx on invoice
"RTN","FBAAEPI1",36,0)
 S FBDA=0 F  S FBDA=$O(^FBAA(162.1,FBDA1,"RX",FBDA)) Q:'FBDA  D
"RTN","FBAAEPI1",37,0)
 . S FBIENS=FBDA_","_FBDA1_","
"RTN","FBAAEPI1",38,0)
 . I FBASKLN D DSPLIL(FBDA1,FBDA) S FBFPPSL=$$FPPSL^FBUTL5(,,1)
"RTN","FBAAEPI1",39,0)
 . I FBUPDLN,$G(FBFPPSL)]"" S FBFDA(162.11,FBIENS,36)=FBFPPSL
"RTN","FBAAEPI1",40,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAEPI1",41,0)
 ;
"RTN","FBAAEPI1",42,0)
 W !,"Finished updating FPPS LINE ITEM on each Rx.",!
"RTN","FBAAEPI1",43,0)
 Q
"RTN","FBAAEPI1",44,0)
 ;
"RTN","FBAAEPI1",45,0)
DSPLIL(FBDA1,FBDA) ; Display Invoice Line (Rx)
"RTN","FBAAEPI1",46,0)
 ; input
"RTN","FBAAEPI1",47,0)
 ;   FBDA1 - invoice ien
"RTN","FBAAEPI1",48,0)
 ;   FBDA  - prescription ien
"RTN","FBAAEPI1",49,0)
 N DFN,FBAC,FBDRUG,FBPATN,FBPID,FBQTY,FBRX,FBSTR,FBY
"RTN","FBAAEPI1",50,0)
 S FBY=$G(^FBAA(162.1,FBDA1,"RX",FBDA,0))
"RTN","FBAAEPI1",51,0)
 S DFN=+$P(FBY,"^",5)
"RTN","FBAAEPI1",52,0)
 S FBPATN=$$VET^FBUCUTL(DFN)
"RTN","FBAAEPI1",53,0)
 S FBPID=$$SSN^FBAAUTL(DFN)
"RTN","FBAAEPI1",54,0)
 S FBDRUG=$P(FBY,"^",2)
"RTN","FBAAEPI1",55,0)
 S FBRX=$P(FBY,"^")
"RTN","FBAAEPI1",56,0)
 S FBSTR=$P(FBY,"^",12)
"RTN","FBAAEPI1",57,0)
 S FBQTY=$P(FBY,"^",13)
"RTN","FBAAEPI1",58,0)
 S FBAC=$P(FBY,"^",4)
"RTN","FBAAEPI1",59,0)
 W !!,"Patient: ",FBPATN,"   Patient ID: ",FBPID
"RTN","FBAAEPI1",60,0)
 W !,"Drug Name",?32,"   RX #  "," Strength  ","  Qty","   Amt Claimed   ",!,$$REPEAT^XLFSTR("-",78)
"RTN","FBAAEPI1",61,0)
 W !,FBDRUG,?34,FBRX,?43,FBSTR,?54,FBQTY,?63,FBAC
"RTN","FBAAEPI1",62,0)
 Q
"RTN","FBAAEPI1",63,0)
 ;
"RTN","FBAAEPI1",64,0)
 ;FBAAEPI
"RTN","FBAAFA")
0^9^B10837053
"RTN","FBAAFA",1,0)
FBAAFA ;WOIFO/SAB-FILE ADJUSTMENTS FOR MEDICAL/ANC PAYMENT ;9/9/2003
"RTN","FBAAFA",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBAAFA",3,0)
 Q
"RTN","FBAAFA",4,0)
FILEADJ(FBIENS,FBADJ) ; File Adjustments
"RTN","FBAAFA",5,0)
 ;
"RTN","FBAAFA",6,0)
 ; Input
"RTN","FBAAFA",7,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.03
"RTN","FBAAFA",8,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBAAFA",9,0)
 ;   FBADJ   - required, array passed by reference
"RTN","FBAAFA",10,0)
 ;             array of adjustments to file
"RTN","FBAAFA",11,0)
 ;             array does not have to contain any data or be defined
"RTN","FBAAFA",12,0)
 ;             format
"RTN","FBAAFA",13,0)
 ;               FBADJ(#)=FBADJR^FBADJG^FBADJA
"RTN","FBAAFA",14,0)
 ;             where
"RTN","FBAAFA",15,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBAAFA",16,0)
 ;               FBADJR = adjustment reason (internal value file 162.91)
"RTN","FBAAFA",17,0)
 ;               FBADJG = adjustment group (internal value file 162.92)
"RTN","FBAAFA",18,0)
 ;               FBADJA = adjustment amount (dollar value)
"RTN","FBAAFA",19,0)
 ; Output
"RTN","FBAAFA",20,0)
 ;   Data in File 162.03 will be modified
"RTN","FBAAFA",21,0)
 ;
"RTN","FBAAFA",22,0)
 N FB,FBFDA,FBHIGH,FBI,FBMSR,FBSC,FBSIENS,FBTAS
"RTN","FBAAFA",23,0)
 ;
"RTN","FBAAFA",24,0)
 ; delete adjustment reasons currently on file
"RTN","FBAAFA",25,0)
 D GETS^DIQ(162.03,FBIENS,"52*","","FB")
"RTN","FBAAFA",26,0)
 K FBFDA
"RTN","FBAAFA",27,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.07,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBAAFA",28,0)
 . S FBFDA(162.07,FBSIENS,.01)="@"
"RTN","FBAAFA",29,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBAAFA",30,0)
 ;
"RTN","FBAAFA",31,0)
 ; delete suspend data currently on file
"RTN","FBAAFA",32,0)
 K FBFDA
"RTN","FBAAFA",33,0)
 S FBFDA(162.03,FBIENS,3)="@"
"RTN","FBAAFA",34,0)
 S FBFDA(162.03,FBIENS,3.5)="@"
"RTN","FBAAFA",35,0)
 S FBFDA(162.03,FBIENS,4)="@"
"RTN","FBAAFA",36,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBAAFA",37,0)
 ;
"RTN","FBAAFA",38,0)
 ; delete description of suspension currently on file
"RTN","FBAAFA",39,0)
 D WP^DIE(162.03,FBIENS,22,,"@")
"RTN","FBAAFA",40,0)
 ;
"RTN","FBAAFA",41,0)
 ; compute total amount suspended and determine most significant reason
"RTN","FBAAFA",42,0)
 ; loop thru reasons
"RTN","FBAAFA",43,0)
 S (FBTAS,FBI,FBHIGH)=0,FBMSR=""
"RTN","FBAAFA",44,0)
 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBAAFA",45,0)
 . N FBADJA
"RTN","FBAAFA",46,0)
 . ; get adjustment amount for reason
"RTN","FBAAFA",47,0)
 . S FBADJA=$P(FBADJ(FBI),U,3)
"RTN","FBAAFA",48,0)
 . ; add amount to total
"RTN","FBAAFA",49,0)
 . S FBTAS=FBTAS+FBADJA
"RTN","FBAAFA",50,0)
 . ; check if reason has largest absolute $ impact
"RTN","FBAAFA",51,0)
 . I $FN(FBADJA,"-")>$G(FBHIGH) S FBMSR=FBI,FBHIGH=$FN(FBADJA,"-")
"RTN","FBAAFA",52,0)
 ;
"RTN","FBAAFA",53,0)
 I +FBTAS=0 Q  ; quit since total amount suspended is 0
"RTN","FBAAFA",54,0)
 ;
"RTN","FBAAFA",55,0)
 ; file adjustments from input array
"RTN","FBAAFA",56,0)
 K FBFDA
"RTN","FBAAFA",57,0)
 S FBI=0 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBAAFA",58,0)
 . S FBFDA(162.07,"+"_FBI_","_FBIENS,.01)=$P(FBADJ(FBI),U)
"RTN","FBAAFA",59,0)
 . S FBFDA(162.07,"+"_FBI_","_FBIENS,1)=$P(FBADJ(FBI),U,2)
"RTN","FBAAFA",60,0)
 . S FBFDA(162.07,"+"_FBI_","_FBIENS,2)=+$P(FBADJ(FBI),U,3)
"RTN","FBAAFA",61,0)
 I $D(FBFDA) D UPDATE^DIE("","FBFDA")
"RTN","FBAAFA",62,0)
 ;
"RTN","FBAAFA",63,0)
 ; file derived suspend data
"RTN","FBAAFA",64,0)
 K FBFDA
"RTN","FBAAFA",65,0)
 S FBFDA(162.03,FBIENS,3)=FBTAS
"RTN","FBAAFA",66,0)
 S FBFDA(162.03,FBIENS,3.5)=DT
"RTN","FBAAFA",67,0)
 I FBMSR,$P(FBADJ(FBMSR),U) S FBSC=$$GET1^DIQ(161.91,$P(FBADJ(FBMSR),U),3)
"RTN","FBAAFA",68,0)
 I '$G(FBSC) S FBSC=4
"RTN","FBAAFA",69,0)
 S FBFDA(162.03,FBIENS,4)=FBSC
"RTN","FBAAFA",70,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBAAFA",71,0)
 ;
"RTN","FBAAFA",72,0)
 ; if suspend code = 4 (other) then file description of suspension
"RTN","FBAAFA",73,0)
 I FBSC=4,FBMSR,$P(FBADJ(FBMSR),U) D WP^DIE(162.03,FBIENS,22,,"^FB(161.91,"_$P(FBADJ(FBMSR),U)_",4)")
"RTN","FBAAFA",74,0)
 D MSG^DIALOG()
"RTN","FBAAFA",75,0)
 ;
"RTN","FBAAFA",76,0)
 Q
"RTN","FBAAFA",77,0)
 ;
"RTN","FBAAFA",78,0)
LOADADJ(FBIENS,FBADJ) ; Load Adjustments
"RTN","FBAAFA",79,0)
 ; Input
"RTN","FBAAFA",80,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.03
"RTN","FBAAFA",81,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBAAFA",82,0)
 ;   FBADJ   - required, array passed by reference
"RTN","FBAAFA",83,0)
 ;             array to load adjustments into
"RTN","FBAAFA",84,0)
 ; Output
"RTN","FBAAFA",85,0)
 ;   FBADJ   - the FBADJ input array passed by reference will be modified
"RTN","FBAAFA",86,0)
 ;             format
"RTN","FBAAFA",87,0)
 ;               FBADJ(#)=FBADJR^FBADJG^FBADJA
"RTN","FBAAFA",88,0)
 ;             where
"RTN","FBAAFA",89,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBAAFA",90,0)
 ;               FBADJR = adjustment reason (internal value file 162.91)
"RTN","FBAAFA",91,0)
 ;               FBADJG = adjustment group (internal value file 162.92)
"RTN","FBAAFA",92,0)
 ;               FBADJA = adjustment amount (dollar value)
"RTN","FBAAFA",93,0)
 ;             if no adjustments are on file then the array will be
"RTN","FBAAFA",94,0)
 ;               undefined
"RTN","FBAAFA",95,0)
 N FB,FBC,FBI,FBSIENS
"RTN","FBAAFA",96,0)
 ;
"RTN","FBAAFA",97,0)
 K FBADJ
"RTN","FBAAFA",98,0)
 ;
"RTN","FBAAFA",99,0)
 S FBC=0
"RTN","FBAAFA",100,0)
 D GETS^DIQ(162.03,FBIENS,"52*","I","FB")
"RTN","FBAAFA",101,0)
 D MSG^DIALOG()
"RTN","FBAAFA",102,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.07,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBAAFA",103,0)
 . S FBC=FBC+1
"RTN","FBAAFA",104,0)
 . S FBADJ(FBC)=FB(162.07,FBSIENS,.01,"I")
"RTN","FBAAFA",105,0)
 . S FBADJ(FBC)=FBADJ(FBC)_U_FB(162.07,FBSIENS,1,"I")
"RTN","FBAAFA",106,0)
 . S FBADJ(FBC)=FBADJ(FBC)_U_FB(162.07,FBSIENS,2,"I")
"RTN","FBAAFA",107,0)
 ;
"RTN","FBAAFA",108,0)
 Q
"RTN","FBAAFA",109,0)
 ;
"RTN","FBAAFA",110,0)
ADJLRA(FBIENS) ; Adjustment Reason^Amount List Extrinsic Function
"RTN","FBAAFA",111,0)
 ; Input
"RTN","FBAAFA",112,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.03
"RTN","FBAAFA",113,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBAAFA",114,0)
 ; Result
"RTN","FBAAFA",115,0)
 ;   string containing sorted list (by external code) of reason^amounts
"RTN","FBAAFA",116,0)
 ;   format
"RTN","FBAAFA",117,0)
 ;      FBADJE 1, FBADJE 2^FBADJA 1,FBADJA2
"RTN","FBAAFA",118,0)
 ;   where
"RTN","FBAAFA",119,0)
 ;      FBADJE = adjustment reason code (external value)
"RTN","FBAAFA",120,0)
 ;      FBADJA = adjustment amount
"RTN","FBAAFA",121,0)
 N FBRET,FBADJ,FBADJL,FBADJLA,FBADJLR
"RTN","FBAAFA",122,0)
 D LOADADJ^FBAAFA(FBIENS,.FBADJ)
"RTN","FBAAFA",123,0)
 S FBADJL=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBAAFA",124,0)
 S FBADJLR=$$ADJLR^FBUTL2(FBADJL)
"RTN","FBAAFA",125,0)
 S FBADJLA=$$ADJLA^FBUTL2(FBADJL)
"RTN","FBAAFA",126,0)
 S FBRET=FBADJLR_U_FBADJLA
"RTN","FBAAFA",127,0)
 Q FBRET
"RTN","FBAAFA",128,0)
 ;
"RTN","FBAAFA",129,0)
 ;FBAAFA
"RTN","FBAAFED")
0^45^B27873786
"RTN","FBAAFED",1,0)
FBAAFED ;WOIFO/SAB-FPPS DATA EDIT OUTPATIENT/ANCILLARY INVOICE ;8/6/2003
"RTN","FBAAFED",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBAAFED",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAFED",4,0)
 ;
"RTN","FBAAFED",5,0)
 I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) D  Q
"RTN","FBAAFED",6,0)
 . W $C(7),!,"You must hold the FBAASUPERVISOR security key to use this option!"
"RTN","FBAAFED",7,0)
 ;
"RTN","FBAAFED",8,0)
 S FBAAOUT=0
"RTN","FBAAFED",9,0)
 F  D INVED Q:FBAAOUT
"RTN","FBAAFED",10,0)
 D CLEAN
"RTN","FBAAFED",11,0)
 Q
"RTN","FBAAFED",12,0)
 ;
"RTN","FBAAFED",13,0)
INVED ; Invoice Edit
"RTN","FBAAFED",14,0)
 ;
"RTN","FBAAFED",15,0)
ASKINV ; Select Invoice to Edit
"RTN","FBAAFED",16,0)
 W !
"RTN","FBAAFED",17,0)
 S DIR(0)="NO",DIR("A")="Select Invoice Number"
"RTN","FBAAFED",18,0)
 S DIR("?")="^D HELP^FBAAPIN1"
"RTN","FBAAFED",19,0)
 D ^DIR K DIR I $D(DIRUT)!(Y="") S FBAAOUT=1 Q
"RTN","FBAAFED",20,0)
 I '$D(^FBAAC("C",Y)) W !,$C(7),"Invalid selection.",! G ASKINV
"RTN","FBAAFED",21,0)
 S FBAAIN=Y
"RTN","FBAAFED",22,0)
 ;
"RTN","FBAAFED",23,0)
 I $$CKFPPS^FBFHLL(FBAAIN)'=1 D  G ASKINV
"RTN","FBAAFED",24,0)
 . W !?5,"Invoice ",FBAAIN," has not been transmitted to FPPS."
"RTN","FBAAFED",25,0)
 ;
"RTN","FBAAFED",26,0)
 ; Get Lines on Invoice
"RTN","FBAAFED",27,0)
 D MILL^FBAAPET1(FBAAIN,.FBMILL)
"RTN","FBAAFED",28,0)
 ;
"RTN","FBAAFED",29,0)
 ; Determine Vendor and FPPS CLAIM ID based on first line on invoice
"RTN","FBAAFED",30,0)
 S FBIENS=FBMILL($O(FBMILL(0)))
"RTN","FBAAFED",31,0)
 S FBV=$P(FBIENS,",",3)
"RTN","FBAAFED",32,0)
 S (FBFPPSC,FBFPPSC(0))=$$GET1^DIQ(162.03,FBIENS,50)
"RTN","FBAAFED",33,0)
 ;
"RTN","FBAAFED",34,0)
 I FBFPPSC="" D  G ASKINV
"RTN","FBAAFED",35,0)
 . W !,$C(7),"Only EDI Claims can be selected!"
"RTN","FBAAFED",36,0)
 ;
"RTN","FBAAFED",37,0)
 S FBINVCHG=0 ; initialize invoice changed flag
"RTN","FBAAFED",38,0)
 ;
"RTN","FBAAFED",39,0)
EDITFC ; edit FPPS CLAIM ID
"RTN","FBAAFED",40,0)
 S FBX=$$FPPSC^FBUTL5(1,FBFPPSC)
"RTN","FBAAFED",41,0)
 I FBX=-1 S FBAAOUT=1 G INVEDX
"RTN","FBAAFED",42,0)
 ; need to verify if following restriction is appropriate
"RTN","FBAAFED",43,0)
 I FBX="" D  G EDITFC
"RTN","FBAAFED",44,0)
 . W !,$C(7),"Can not change EDI from YES to NO on invoice that has been sent to FPPS!"
"RTN","FBAAFED",45,0)
 S FBFPPSC=FBX
"RTN","FBAAFED",46,0)
 ;
"RTN","FBAAFED",47,0)
 ; if FPPS CLAIM ID changed, then update file, audit log, and lines
"RTN","FBAAFED",48,0)
 I FBFPPSC'=FBFPPSC(0) D
"RTN","FBAAFED",49,0)
 . ; set invoice changed flag
"RTN","FBAAFED",50,0)
 . S FBINVCHG=1
"RTN","FBAAFED",51,0)
 . ;
"RTN","FBAAFED",52,0)
 . K FBFDA
"RTN","FBAAFED",53,0)
 . ; loop thru lines on invoice
"RTN","FBAAFED",54,0)
 . S FBI=0 F  S FBI=$O(FBMILL(FBI)) Q:'FBI  D
"RTN","FBAAFED",55,0)
 . . S FBIENS=FBMILL(FBI)
"RTN","FBAAFED",56,0)
 . . ; file data in 162.03 for each line
"RTN","FBAAFED",57,0)
 . . S FBFDA(162.03,FBIENS,50)=$S(FBFPPSC="":"@",1:FBFPPSC)
"RTN","FBAAFED",58,0)
 . . ;
"RTN","FBAAFED",59,0)
 . . ; add record to audit log
"RTN","FBAAFED",60,0)
 . . K FBFDAA
"RTN","FBAAFED",61,0)
 . . S FBFDAA(163.7,"+1,",.01)=FBAAIN ; invoice number
"RTN","FBAAFED",62,0)
 . . S FBFDAA(163.7,"+1,",1)=$$NOW^XLFDT() ; date/time changed
"RTN","FBAAFED",63,0)
 . . S FBFDAA(163.7,"+1,",2)=162.03 ; file #
"RTN","FBAAFED",64,0)
 . . S FBFDAA(163.7,"+1,",3)=FBIENS ; iens
"RTN","FBAAFED",65,0)
 . . S FBFDAA(163.7,"+1,",4)=50 ; field #
"RTN","FBAAFED",66,0)
 . . S FBFDAA(163.7,"+1,",5)=FBFPPSC(0) ; old value
"RTN","FBAAFED",67,0)
 . . S FBFDAA(163.7,"+1,",6)=FBFPPSC ; new value
"RTN","FBAAFED",68,0)
 . . S FBFDAA(163.7,"+1,",7)=DUZ ; user
"RTN","FBAAFED",69,0)
 . . I $D(FBFDAA) D UPDATE^DIE("","FBFDAA") D MSG^DIALOG()
"RTN","FBAAFED",70,0)
 . . ;
"RTN","FBAAFED",71,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAFED",72,0)
 ;
"RTN","FBAAFED",73,0)
ASKLINE ; Select Line to Edit
"RTN","FBAAFED",74,0)
 ;
"RTN","FBAAFED",75,0)
ASKPT ; Select Patient
"RTN","FBAAFED",76,0)
 W !
"RTN","FBAAFED",77,0)
 S DIC="^FBAAC(",DIC(0)="AEQM"
"RTN","FBAAFED",78,0)
 D ^DIC K DIC I $D(DTOUT)!$D(DUOUT) G INVEDX
"RTN","FBAAFED",79,0)
 I Y'>0 D  G:$D(DIRUT) INVEDX G:'Y ASKPT G INVEDX
"RTN","FBAAFED",80,0)
 . S DIR(0)="Y"
"RTN","FBAAFED",81,0)
 . S DIR("A")="Are you finished entering patients for this invoice"
"RTN","FBAAFED",82,0)
 . D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1
"RTN","FBAAFED",83,0)
 S FBDA(3)=+Y
"RTN","FBAAFED",84,0)
 ;
"RTN","FBAAFED",85,0)
ASKVEN ; Select Vendor
"RTN","FBAAFED",86,0)
 W !
"RTN","FBAAFED",87,0)
 ;S DIC(0)="AEQM"
"RTN","FBAAFED",88,0)
 ;S DIC="^FBAAC("_FBDA(3)_",1,"
"RTN","FBAAFED",89,0)
 ;D ^DIC K DIC I $D(DTOUT)!$D(DUOUT) G INVEDX
"RTN","FBAAFED",90,0)
 ;I Y'>0 D  G:$D(DIRUT) INVEDX G:'Y ASKVEN G ASKPT
"RTN","FBAAFED",91,0)
 ;. S DIR(0)="Y"
"RTN","FBAAFED",92,0)
 ;. S DIR("A")="Are you finished entering vendors for this patient"
"RTN","FBAAFED",93,0)
 ;. D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1
"RTN","FBAAFED",94,0)
 ;S FBDA(2)=+Y
"RTN","FBAAFED",95,0)
 S FBDA(2)=FBV
"RTN","FBAAFED",96,0)
 W !,"Vendor = ",$P($G(^FBAAV(FBV,0)),U)
"RTN","FBAAFED",97,0)
 ;
"RTN","FBAAFED",98,0)
ASKDOS ; Select Date of Service
"RTN","FBAAFED",99,0)
 W !
"RTN","FBAAFED",100,0)
 S DIC(0)="AEQM"
"RTN","FBAAFED",101,0)
 S DIC="^FBAAC("_FBDA(3)_",1,"_FBDA(2)_",1,"
"RTN","FBAAFED",102,0)
 S DIC("A")="Select DATE OF SERVICE: "
"RTN","FBAAFED",103,0)
 D ^DIC K DIC I $D(DTOUT)!$D(DUOUT) G INVEDX
"RTN","FBAAFED",104,0)
 I Y'>0 D  G:$D(DIRUT) INVEDX G:'Y ASKDOS G ASKPT
"RTN","FBAAFED",105,0)
 . S DIR(0)="Y"
"RTN","FBAAFED",106,0)
 . S DIR("A")="Are you finished entering dates for this patient"
"RTN","FBAAFED",107,0)
 . D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1
"RTN","FBAAFED",108,0)
 S FBDA(1)=+Y
"RTN","FBAAFED",109,0)
 ;
"RTN","FBAAFED",110,0)
ASKSVC ; Select Service Provided
"RTN","FBAAFED",111,0)
 W !
"RTN","FBAAFED",112,0)
 S DIC(0)="AEQM"
"RTN","FBAAFED",113,0)
 S DIC="^FBAAC("_FBDA(3)_",1,"_FBDA(2)_",1,"_FBDA(1)_",1,"
"RTN","FBAAFED",114,0)
 D ^DIC K DIC I $D(DTOUT)!$D(DUOUT) G INVEDX
"RTN","FBAAFED",115,0)
 I Y'>0 D  G:$D(DIRUT) INVEDX G:'Y ASKSVC G ASKDOS
"RTN","FBAAFED",116,0)
 . S DIR(0)="Y"
"RTN","FBAAFED",117,0)
 . S DIR("A")="Are you finished entering services for this date"
"RTN","FBAAFED",118,0)
 . D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1
"RTN","FBAAFED",119,0)
 S FBDA=+Y
"RTN","FBAAFED",120,0)
 ;
"RTN","FBAAFED",121,0)
 S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBAAFED",122,0)
 ;
"RTN","FBAAFED",123,0)
 ; check if line is on invoice
"RTN","FBAAFED",124,0)
 I $$GET1^DIQ(162.03,FBIENS,14)'=FBAAIN D  G ASKSVC
"RTN","FBAAFED",125,0)
 . W $C(7),!,"Line is not on invoice ",FBAAIN,"!"
"RTN","FBAAFED",126,0)
 ;
"RTN","FBAAFED",127,0)
 ; get current value of FPPS LINE ITEM to use as default
"RTN","FBAAFED",128,0)
 S (FBFPPSL(0),FBFPPSL)=$$GET1^DIQ(162.03,FBIENS,51)
"RTN","FBAAFED",129,0)
 ;
"RTN","FBAAFED",130,0)
EDITFL ; edit FPPS Line Item
"RTN","FBAAFED",131,0)
 S FBX=$$FPPSL^FBUTL5(FBFPPSL)
"RTN","FBAAFED",132,0)
 I FBX=-1 S FBAAOUT=1 G INVEDX
"RTN","FBAAFED",133,0)
 ; need to verify if following restriction is appropriate
"RTN","FBAAFED",134,0)
 S FBFPPSL=FBX
"RTN","FBAAFED",135,0)
 ;
"RTN","FBAAFED",136,0)
 ; if FPPS LINE ITEM changed, then update file and audit log
"RTN","FBAAFED",137,0)
 I FBFPPSL'=FBFPPSL(0) D
"RTN","FBAAFED",138,0)
 . ; set invoice changed flag
"RTN","FBAAFED",139,0)
 . S FBINVCHG=1
"RTN","FBAAFED",140,0)
 . ;
"RTN","FBAAFED",141,0)
 . ; file data in 162.03
"RTN","FBAAFED",142,0)
 . K FBFDA
"RTN","FBAAFED",143,0)
 . S FBFDA(162.03,FBIENS,51)=FBFPPSL
"RTN","FBAAFED",144,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAFED",145,0)
 . ;
"RTN","FBAAFED",146,0)
 . ; add record to audit log
"RTN","FBAAFED",147,0)
 . K FBFDA
"RTN","FBAAFED",148,0)
 . S FBFDA(163.7,"+1,",.01)=FBAAIN ; invoice number
"RTN","FBAAFED",149,0)
 . S FBFDA(163.7,"+1,",1)=$$NOW^XLFDT() ; date/time changed
"RTN","FBAAFED",150,0)
 . S FBFDA(163.7,"+1,",2)=162.03 ; file #
"RTN","FBAAFED",151,0)
 . S FBFDA(163.7,"+1,",3)=FBIENS ; iens
"RTN","FBAAFED",152,0)
 . S FBFDA(163.7,"+1,",4)=51 ; field #
"RTN","FBAAFED",153,0)
 . S FBFDA(163.7,"+1,",5)=FBFPPSL(0) ; old value
"RTN","FBAAFED",154,0)
 . S FBFDA(163.7,"+1,",6)=FBFPPSL ; new value
"RTN","FBAAFED",155,0)
 . S FBFDA(163.7,"+1,",7)=DUZ ; user
"RTN","FBAAFED",156,0)
 . I $D(FBFDA) D UPDATE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAFED",157,0)
 ;
"RTN","FBAAFED",158,0)
 G ASKSVC
"RTN","FBAAFED",159,0)
 ;
"RTN","FBAAFED",160,0)
INVEDX ; Invoice Edit Exit
"RTN","FBAAFED",161,0)
 ; if invoice changed then queue for retransmit to FPPS
"RTN","FBAAFED",162,0)
 I FBINVCHG D FILEQUE^FBFHLL(FBAAIN,3)
"RTN","FBAAFED",163,0)
 Q
"RTN","FBAAFED",164,0)
 ;
"RTN","FBAAFED",165,0)
CLEAN K D,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBAAFED",166,0)
 K FBAAIN,FBAAOUT,FBDA,FBFDA,FBFDAA,FBIENS,FBFPPSC,FBFPPSL,FBINVCHG
"RTN","FBAAFED",167,0)
 K FBMILL,FBV,FBX
"RTN","FBAAFED",168,0)
 Q
"RTN","FBAAFED",169,0)
 ;FBAAFED
"RTN","FBAAFR")
0^11^B2615408
"RTN","FBAAFR",1,0)
FBAAFR ;WOIFO/SAB-FILE REMITTANCE REMARKS FOR MEDICAL/ANC PAYMENT ;7/16/2003
"RTN","FBAAFR",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBAAFR",3,0)
 Q
"RTN","FBAAFR",4,0)
FILERR(FBIENS,FBRRMK) ; File Remittance Remakrs
"RTN","FBAAFR",5,0)
 ;
"RTN","FBAAFR",6,0)
 ; Input
"RTN","FBAAFR",7,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.03
"RTN","FBAAFR",8,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBAAFR",9,0)
 ;   FBRRMK -  required, array passed by reference
"RTN","FBAAFR",10,0)
 ;             array of remittance remarks to file
"RTN","FBAAFR",11,0)
 ;             array does not have to contain any data or be defined
"RTN","FBAAFR",12,0)
 ;             format
"RTN","FBAAFR",13,0)
 ;               FBRRMK(#)=FBRRMKC
"RTN","FBAAFR",14,0)
 ;             where
"RTN","FBAAFR",15,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBAAFR",16,0)
 ;               FBRRMKC = remittance remark (internal value file 162.93)
"RTN","FBAAFR",17,0)
 ; Output
"RTN","FBAAFR",18,0)
 ;   Data in File 162.03 will be modified
"RTN","FBAAFR",19,0)
 ;
"RTN","FBAAFR",20,0)
 N FB,FBFDA,FBI,FBSIENS
"RTN","FBAAFR",21,0)
 ;
"RTN","FBAAFR",22,0)
 ; delete remitance remarks currently on file
"RTN","FBAAFR",23,0)
 D GETS^DIQ(162.03,FBIENS,"53*","","FB")
"RTN","FBAAFR",24,0)
 K FBFDA
"RTN","FBAAFR",25,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.08,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBAAFR",26,0)
 . S FBFDA(162.08,FBSIENS,.01)="@"
"RTN","FBAAFR",27,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBAAFR",28,0)
 ;
"RTN","FBAAFR",29,0)
 ; file remarks from input array
"RTN","FBAAFR",30,0)
 K FBFDA
"RTN","FBAAFR",31,0)
 S FBI=0 F  S FBI=$O(FBRRMK(FBI)) Q:'FBI  D
"RTN","FBAAFR",32,0)
 . S FBFDA(162.08,"+"_FBI_","_FBIENS,.01)=$P(FBRRMK(FBI),U)
"RTN","FBAAFR",33,0)
 I $D(FBFDA) D UPDATE^DIE("","FBFDA")
"RTN","FBAAFR",34,0)
 ;
"RTN","FBAAFR",35,0)
 Q
"RTN","FBAAFR",36,0)
 ;
"RTN","FBAAFR",37,0)
LOADRR(FBIENS,FBRRMK) ; Load Remittance Remarks
"RTN","FBAAFR",38,0)
 ; Input
"RTN","FBAAFR",39,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.03
"RTN","FBAAFR",40,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBAAFR",41,0)
 ;   FBRRMK - required, array passed by reference
"RTN","FBAAFR",42,0)
 ;             array to load adjustments into
"RTN","FBAAFR",43,0)
 ; Output
"RTN","FBAAFR",44,0)
 ;   FBRRMK - the FBRRMK input array passed by reference will be modified
"RTN","FBAAFR",45,0)
 ;             format
"RTN","FBAAFR",46,0)
 ;               FBRRMK(#)=FBRRMKC
"RTN","FBAAFR",47,0)
 ;             where
"RTN","FBAAFR",48,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBAAFR",49,0)
 ;               FBRRMKC = remittance remark (internal value file 162.93)
"RTN","FBAAFR",50,0)
 ;             if no remarks are on file then the array will be undefined
"RTN","FBAAFR",51,0)
 N FB,FBC,FBI,FBSIENS
"RTN","FBAAFR",52,0)
 ;
"RTN","FBAAFR",53,0)
 K FBRRMK
"RTN","FBAAFR",54,0)
 ;
"RTN","FBAAFR",55,0)
 S FBC=0
"RTN","FBAAFR",56,0)
 D GETS^DIQ(162.03,FBIENS,"53*","I","FB")
"RTN","FBAAFR",57,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.08,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBAAFR",58,0)
 . S FBC=FBC+1
"RTN","FBAAFR",59,0)
 . S FBRRMK(FBC)=FB(162.08,FBSIENS,.01,"I")
"RTN","FBAAFR",60,0)
 ;
"RTN","FBAAFR",61,0)
 Q
"RTN","FBAAFR",62,0)
 ;
"RTN","FBAAFR",63,0)
RRL(FBIENS) ; Remittance Remarks List Extrinsic Function
"RTN","FBAAFR",64,0)
 ; Input
"RTN","FBAAFR",65,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.03
"RTN","FBAAFR",66,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBAAFR",67,0)
 ; Result
"RTN","FBAAFR",68,0)
 ;   string containing sorted list (by external code) of remarks
"RTN","FBAAFR",69,0)
 ;   format
"RTN","FBAAFR",70,0)
 ;      FBRRMKCE 1, FBRRMKCE 2
"RTN","FBAAFR",71,0)
 ;   where
"RTN","FBAAFR",72,0)
 ;      FBRRMKCE = remittance remark code (external value)
"RTN","FBAAFR",73,0)
 N FBRET,FBRRMK
"RTN","FBAAFR",74,0)
 D LOADRR^FBAAFR(FBIENS,.FBRRMK)
"RTN","FBAAFR",75,0)
 S FBRET=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBAAFR",76,0)
 Q FBRET
"RTN","FBAAFR",77,0)
 ;
"RTN","FBAAFR",78,0)
 ;FBAAFR
"RTN","FBAAMP")
0^15^B63717451
"RTN","FBAAMP",1,0)
FBAAMP ;AISC/CMR-MULTIPLE PAYMENT ENTRY ;9/29/2003
"RTN","FBAAMP",2,0)
 ;;3.5;FEE BASIS;**4,21,38,55,61**;JAN 30, 1995
"RTN","FBAAMP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAMP",4,0)
 S FBMP=1 ;multiple payment flag
"RTN","FBAAMP",5,0)
 G ^FBAACO
"RTN","FBAAMP",6,0)
1 ;return from FBAACO
"RTN","FBAAMP",7,0)
 D MMPPT^FBAACP G:$G(FBAAOUT) Q1
"RTN","FBAAMP",8,0)
 D MPDT I 'FBMPDT G Q1
"RTN","FBAAMP",9,0)
 K FBAAOUT W ! D CPTM^FBAALU(FBMPDT,DFN) I 'FBGOT G Q1
"RTN","FBAAMP",10,0)
 ; prompt revenue code
"RTN","FBAAMP",11,0)
 S FBAARC=$$ASKREVC^FBUTL5() I FBAARC="^" S FBAAOUT=1 G Q1
"RTN","FBAAMP",12,0)
 ; prompt units paid
"RTN","FBAAMP",13,0)
 S FBUNITS=$$ASKUNITS^FBUTL5() I FBUNITS="^" S FBAAOUT=1 G Q1
"RTN","FBAAMP",14,0)
 S FY=$E(DT,1,3)+1700+$S($E(DT,4,5)>9:1,1:0)
"RTN","FBAAMP",15,0)
 D ASKZIP^FBAAFS($G(FBV)) I $G(FBAAOUT)!($G(FBZIP)']"") G Q1
"RTN","FBAAMP",16,0)
 I $$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) D ASKTIME^FBAAFS I $G(FBAAOUT)!('$G(FBTIME)) G Q1
"RTN","FBAAMP",17,0)
 D HCFA^FBAAMP1 G Q1:$G(FBAAOUT)
"RTN","FBAAMP",18,0)
AMTCL S DIR(0)="162.03,1",DIR("A")="Amount Claimed:  $",DIR("?")="Enter the amount being claimed by the vendor" D ^DIR K DIR G Q:$D(DIRUT) S FBJ=+Y
"RTN","FBAAMP",19,0)
 W ! S DIR("A")="Is $"_FBJ_" correct for Amount Claimed",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G Q:$D(DIRUT),AMTCL:'Y
"RTN","FBAAMP",20,0)
RDAP D FEE G Q:$G(FBAAOUT) S FBK=FBAMTPD
"RTN","FBAAMP",21,0)
 W ! S DIR("A")="Is $"_FBK_" correct for Amount Paid",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G Q:$D(DIRUT),RDAP:'Y
"RTN","FBAAMP",22,0)
 S FBAAAS=0 I FBJ-FBK D SUSP^FBAAMP1 I $G(FBAAOUT) G Q:$D(DUOUT),Q1
"RTN","FBAAMP",23,0)
 S FBJ=+FBJ,FBK=+FBK,FBAAAS=+FBAAAS
"RTN","FBAAMP",24,0)
 ; prompt for remittance remarks
"RTN","FBAAMP",25,0)
 I $$RR^FBUTL4(.FBRRMK,2)=0 S FBAAOUT=1 G Q1
"RTN","FBAAMP",26,0)
MULT W:FBINTOT>0 !,"Invoice: "_FBAAIN_" Totals: $ "_FBINTOT
"RTN","FBAAMP",27,0)
 W !! S %DT("A")="Date of Service: ",%DT="AEPX" D ^%DT G Q1:X=""!(X="^")
"RTN","FBAAMP",28,0)
 D DATCK^FBAAUTL G MULT:'$D(X)!(Y<0)
"RTN","FBAAMP",29,0)
 S FBDT=Y
"RTN","FBAAMP",30,0)
 I '$$CHKCPT() W !,$C(7),"Invalid Date of Service." G MULT
"RTN","FBAAMP",31,0)
 I '$$CHKICD9^FBCSV1(+$G(FBHCFA(28)),$G(FBDT)) G MULT
"RTN","FBAAMP",32,0)
 I '$G(FBAAMM1),'$$CHKFS() W !,$C(7),"Invalid Date of Service." G MULT
"RTN","FBAAMP",33,0)
 S DIR(0)="Y",DIR("A")="Is "_($$DATX^FBAAUTL(FBDT))_" correct",DIR("B")="Yes" D ^DIR K DIR G MULT:$D(DIRUT)!('Y)
"RTN","FBAAMP",34,0)
 S FBAADT=FBDT
"RTN","FBAAMP",35,0)
 S FBMODL=$$MODL^FBAAUTL4("FBMODA","I")
"RTN","FBAAMP",36,0)
 I $D(^FBAAC("AE",DFN,FBV,FBAADT,FBAACP_$S($G(FBMODL)]"":"-"_FBMODL,1:""))) S DIR(0)="Y",DIR("A")="Code already exists for that date!  Want to add another service for the SAME DATE",DIR("B")="No" D ^DIR K DIR G MULT:$D(DIRUT)!('Y)
"RTN","FBAAMP",37,0)
 I FBFPPSC]"" S FBFPPSL=$$FPPSL^FBUTL5() I FBFPPSL=-1 G Q1
"RTN","FBAAMP",38,0)
 W !! D GETSVDT^FBAACO5(DFN,FBV,FBASSOC,0,FBAADT) G Q:$G(FBAAOUT)
"RTN","FBAAMP",39,0)
 D SETO^FBAACO3,SVCPR^FBAACO1 G Q:$G(FBAAOUT)
"RTN","FBAAMP",40,0)
FILE S TP="",DR="1///^S X=FBJ;Q;2///^S X=FBK;47///^S X=FBUNITS"
"RTN","FBAAMP",41,0)
 I FBCSID]"" S DR=DR_";49///^S X=FBCSID"
"RTN","FBAAMP",42,0)
 I FBFPPSC]"" S DR=DR_";50///^S X=FBFPPSC;51///^S X=FBFPPSL"
"RTN","FBAAMP",43,0)
 I FBAARC]"" S DR=DR_";48////^S X=FBAARC"
"RTN","FBAAMP",44,0)
 ;S DR=DR_$S(FBJ-FBK:";3///^S X=FBAAAS;3.5////^S X=DT;4////^S X=FBAASC;D DESC^FBAAMP1",1:"")
"RTN","FBAAMP",45,0)
 S DR(1,162.03,1)="6////^S X=DUZ;7////^S X=FBAABE;8////^S X=BO;13///^S X=FBAAID;14///^S X=FBAAIN;15///^S X=FBPT;16////^S X=FBPOV;17///^S X=FBTT;18///^S X=FBAAPTC;23////^S X=2;26////^S X=FBPSA"
"RTN","FBAAMP",46,0)
 S DR(1,162.03,2)="34///^S X=$G(FBAAMM1);28////^S X=FBHCFA(28);30////^S X=FBHCFA(30);31////^S X=FBHCFA(31);32////^S X=FBHCFA(32);33///^S X=FBAAVID;44///^S X=FBFSAMT;45////^S X=FBFSUSD"
"RTN","FBAAMP",47,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAAMP",48,0)
 S DA=FBAACPI,DA(1)=FBSDI,DA(2)=FBV,DA(3)=DFN
"RTN","FBAAMP",49,0)
 D LOCK^FBUCUTL(DIE,FBAACPI,1)
"RTN","FBAAMP",50,0)
 D ^DIE
"RTN","FBAAMP",51,0)
 D FILEADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAAMP",52,0)
 D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAAMP",53,0)
 L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI)
"RTN","FBAAMP",54,0)
 S FBINTOT=FBINTOT+FBK
"RTN","FBAAMP",55,0)
 W " ....OK, DONE...."
"RTN","FBAAMP",56,0)
 I FBK>0 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1
"RTN","FBAAMP",57,0)
 W:Z1>(FBAAMPI-20) !,*7,"Warning, you can only enter ",(FBAAMPI-Z1)," more line items!" I Z1>(FBAAMPI-1) D  S FBMAX=1 G Q1
"RTN","FBAAMP",58,0)
 .W !!,*7,"You have reached the maximum number of payments for a Batch!",!,"You must select another Batch for entering Payments!"
"RTN","FBAAMP",59,0)
 G MULT
"RTN","FBAAMP",60,0)
Q1 K FBAADT,FBX,FBAACP,DIC,DIE,X,Y,DIRUT,DUOUT,DTOUT,FBOUT,FBSI,FBMPDT G ^FBAACO:$D(FBMAX),1^FBAACO
"RTN","FBAAMP",61,0)
 ;
"RTN","FBAAMP",62,0)
Q ;kill variables and exit
"RTN","FBAAMP",63,0)
 D Q^FBAACO
"RTN","FBAAMP",64,0)
 Q
"RTN","FBAAMP",65,0)
 ;
"RTN","FBAAMP",66,0)
MPDT ;
"RTN","FBAAMP",67,0)
 S FBMPDT=""
"RTN","FBAAMP",68,0)
 S DIR(0)="D^::EX"
"RTN","FBAAMP",69,0)
 S DIR("A")="Enter date to use for CPT/ICD checks and fee schedule calc"
"RTN","FBAAMP",70,0)
 S DIR("B")="TODAY"
"RTN","FBAAMP",71,0)
 S DIR("?",1)="Enter a date. This date will be used when checking for"
"RTN","FBAAMP",72,0)
 S DIR("?",2)="an active CPT/Modifier/ICD code. Also, the fee schedule"
"RTN","FBAAMP",73,0)
 S DIR("?",3)="amount will be computed based on this date."
"RTN","FBAAMP",74,0)
 S DIR("?")="Enter '^' to exit."
"RTN","FBAAMP",75,0)
 W !
"RTN","FBAAMP",76,0)
 D ^DIR K DIR S:'$D(DIRUT) FBMPDT=Y
"RTN","FBAAMP",77,0)
 Q
"RTN","FBAAMP",78,0)
 ;
"RTN","FBAAMP",79,0)
FEE N FBX,FB1725
"RTN","FBAAMP",80,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAAMP",81,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAAMP",82,0)
 S FBFY=FY-1
"RTN","FBAAMP",83,0)
 S (FBFSAMT,FBFSUSD,FBAMFS)=""
"RTN","FBAAMP",84,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBMPDT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME))
"RTN","FBAAMP",85,0)
 ;
"RTN","FBAAMP",86,0)
 I '$G(FBAAMM1) D
"RTN","FBAAMP",87,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAAMP",88,0)
 E  D
"RTN","FBAAMP",89,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAAMP",90,0)
 ;
"RTN","FBAAMP",91,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAAMP",92,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAAMP",93,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAAMP",94,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAAMP",95,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAAMP",96,0)
 E  W !?2,"Unable to determine a FEE schedule amount."
"RTN","FBAAMP",97,0)
 ;
"RTN","FBAAMP",98,0)
 I FB1725 D
"RTN","FBAAMP",99,0)
 . W !!?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAAMP",100,0)
 . I FBFSAMT D
"RTN","FBAAMP",101,0)
 . . S FBFSAMT=$J(FBFSAMT*.7,0,2)
"RTN","FBAAMP",102,0)
 . . W !?2,"  Therefore, fee schedule amount reduced to $",FBFSAMT," (70%)."
"RTN","FBAAMP",103,0)
 ;
"RTN","FBAAMP",104,0)
 I $G(FBUNITS)>1 D
"RTN","FBAAMP",105,0)
 . W !!?2,"Units Paid = ",FBUNITS
"RTN","FBAAMP",106,0)
 . Q:FBFSAMT'>0
"RTN","FBAAMP",107,0)
 . N FBFSUNIT
"RTN","FBAAMP",108,0)
 . ; determine if fee schedule can be multipled by units
"RTN","FBAAMP",109,0)
 . S FBFSUNIT=$S(FBFSUSD="R":1,FBFSUSD="F"&(FBMPDT>3040930):1,1:0)
"RTN","FBAAMP",110,0)
 . I FBFSUNIT D
"RTN","FBAAMP",111,0)
 . . S FBFSAMT=$J(FBFSAMT*FBUNITS,0,2)
"RTN","FBAAMP",112,0)
 . . W !?2,"  Therefore, fee schedule amount increased to $",FBFSAMT
"RTN","FBAAMP",113,0)
 . E  D
"RTN","FBAAMP",114,0)
 . . W !?2,"  Fee schedule not complied on per unit basis so amount not adjusted by units."
"RTN","FBAAMP",115,0)
 ;
"RTN","FBAAMP",116,0)
 I '$G(FBAAMM1) D
"RTN","FBAAMP",117,0)
 . ; set default amount paid to lesser of amt claimed (J) or fee sched.
"RTN","FBAAMP",118,0)
 . S FBAMFS=$S(FBFSAMT>$G(FBJ):$G(FBJ),1:FBFSAMT)
"RTN","FBAAMP",119,0)
 ;
"RTN","FBAAMP",120,0)
 W !
"RTN","FBAAMP",121,0)
 ;
"RTN","FBAAMP",122,0)
AMTPD S DIR(0)="162.5,9",DIR("A")="Amount Paid: $",DIR("B")=$G(FBAMFS),DIR("?")="^D HELP1^FBAAMP" K:$G(FBAMFS)="" DIR("B") D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAAMP",123,0)
 I +Y>FBJ W !!,*7,"Amount paid cannot be greater than the amount claimed." G AMTPD
"RTN","FBAAMP",124,0)
 I FBAMFS]"" I +Y>FBAMFS&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"You must be a holder of the 'FBAASUPERVISOR' key in order to",!,"exceed the Fee Schedule.",! G AMTPD
"RTN","FBAAMP",125,0)
 S FBAMTPD=+Y K FBAMFS Q
"RTN","FBAAMP",126,0)
HELP1 W !!,"Enter a dollar amount that does not exceed the amount claimed.",!
"RTN","FBAAMP",127,0)
 I FBAMFS>0 W "Only the holder of the 'FBAASUPERVISOR' key may exceed the",!,"Fee Schedule.",!
"RTN","FBAAMP",128,0)
 Q
"RTN","FBAAMP",129,0)
 ;
"RTN","FBAAMP",130,0)
CHKCPT() ; check if CPT/Modifer active on date of service
"RTN","FBAAMP",131,0)
 N FBCPTX,FBI,FBMOD,FBMODX,FBRET
"RTN","FBAAMP",132,0)
 S FBRET=1
"RTN","FBAAMP",133,0)
 S FBCPTX=$$CPT^ICPTCOD(FBAACP,FBDT,1)
"RTN","FBAAMP",134,0)
 I '$P(FBCPTX,U,7) S FBRET=0 W !,"  CPT Code ",$P(FBCPTX,U,2)," inactive on date of service."
"RTN","FBAAMP",135,0)
 I $O(FBMODA(0)) D
"RTN","FBAAMP",136,0)
 . S FBI=0 F  S FBI=$O(FBMODA(FBI)) Q:'FBI  D
"RTN","FBAAMP",137,0)
 . . S FBMODX=$$MOD^ICPTMOD(FBMODA(FBI),"I",FBDT,1)
"RTN","FBAAMP",138,0)
 . . I '$P(FBMODX,U,7) S FBRET=0 W !,"  CPT Modifier ",$P(FBMODX,U,2)," inactive on date of service."
"RTN","FBAAMP",139,0)
 Q FBRET
"RTN","FBAAMP",140,0)
 ;
"RTN","FBAAMP",141,0)
CHKFS() ; check if fee schedule amount is different on date of service
"RTN","FBAAMP",142,0)
 N FBX,FBRET,FB1725
"RTN","FBAAMP",143,0)
 S FBRET=1 ; return value - true if date of service allowed
"RTN","FBAAMP",144,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAAMP",145,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAAMP",146,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBDT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME))
"RTN","FBAAMP",147,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAAMP",148,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAAMP",149,0)
 ; adjust amount if mill bill
"RTN","FBAAMP",150,0)
 I FB1725 S $P(FBX,U)=$J($P(FBX,U)*.7,0,2)
"RTN","FBAAMP",151,0)
 ; adjust amount if units > 1
"RTN","FBAAMP",152,0)
 I $G(FBUNITS) D
"RTN","FBAAMP",153,0)
 . N FBFSUNIT
"RTN","FBAAMP",154,0)
 . ; determine if fee schedule can be multipled by units
"RTN","FBAAMP",155,0)
 . S FBFSUNIT=$S($P(FBX,U,2)="R":1,$P(FBX,U,2)="F"&(FBDT>3040930):1,1:0)
"RTN","FBAAMP",156,0)
 . I FBFSUNIT S $P(FBX,U)=$J($P(FBX,U)*FBUNITS,0,2)
"RTN","FBAAMP",157,0)
 ; issue warning if lesser of claim and fee schedule amount different
"RTN","FBAAMP",158,0)
 I +$S($P(FBX,U)>$G(FBJ):$G(FBJ),1:$P(FBX,U))'=+$S(FBFSAMT>$G(FBJ):$G(FBJ),1:FBFSAMT) D
"RTN","FBAAMP",159,0)
 . W !,"  Warning: The fee schedule amount (",$P(FBX,U),") for this date of service "
"RTN","FBAAMP",160,0)
 . W !,"  differs from the initial fee schedule amount (",FBFSAMT,")."
"RTN","FBAAMP",161,0)
 . I $P(FBX,U)>0,FBK>$P(FBX,U) D
"RTN","FBAAMP",162,0)
 . . W !,"  Amount paid (",FBK,") exceeds the fee schedule amount."
"RTN","FBAAMP",163,0)
 . . I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) D
"RTN","FBAAMP",164,0)
 . . . W !,"  You must be a holder of the 'FBAASUPERVISOR' key in order"
"RTN","FBAAMP",165,0)
 . . . W !,"  to exceed the Fee Schedule."
"RTN","FBAAMP",166,0)
 . . . S FBRET=0
"RTN","FBAAMP",167,0)
 . W:FBRET !,"  You may want to separately process this date of service."
"RTN","FBAAMP",168,0)
 Q FBRET
"RTN","FBAAMP",169,0)
 ;
"RTN","FBAAMP",170,0)
ANCIL ;ENTRY POINT FOR mutiple ancillary payment option
"RTN","FBAAMP",171,0)
 S FBCHCO=1 D ^FBAAMP
"RTN","FBAAMP",172,0)
 K FBCHCO Q
"RTN","FBAAMP1")
0^16^B7229193
"RTN","FBAAMP1",1,0)
FBAAMP1 ;AISC/CMR-MULTIPLE PAYMENT ENTRY ;7/6/2003
"RTN","FBAAMP1",2,0)
 ;;3.5;FEE BASIS;**4,55,61**;JAN 30, 1995
"RTN","FBAAMP1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAMP1",4,0)
SUSP ;enter suspense data
"RTN","FBAAMP1",5,0)
 N FBX
"RTN","FBAAMP1",6,0)
 ;S DIR(0)="162.5,9",DIR("A")="Amount Suspended: $",DIR("B")=FBJ-FBK,DIR("?")="Press Return if $ "_(FBJ-FBK)_" is Amount Suspended, otherwise enter correct suspension amount" D ^DIR K DIR
"RTN","FBAAMP1",7,0)
 ;I $D(DIRUT) W !!,"Invalid entry, enter a number between .01 and 999999" G SUSP
"RTN","FBAAMP1",8,0)
 ;S FBAAAS=+Y
"RTN","FBAAMP1",9,0)
 ;I +Y'=(FBJ-FBK) S FBAAAS=+Y W ! S DIR("A")="Is $"_FBAAAS_" correct for Amount Suspended",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAAMP1",10,0)
 ;G SUSP:'Y
"RTN","FBAAMP1",11,0)
 ;W !! S DIC="^FBAA(161.27,",DIC(0)="AEQ" D ^DIC I X["^" S FBAAOUT=1 Q
"RTN","FBAAMP1",12,0)
 ;S FBAASC=+Y
"RTN","FBAAMP1",13,0)
 S FBX=$$ADJ^FBUTL2(FBJ-FBK,.FBADJ,2)
"RTN","FBAAMP1",14,0)
 I FBX=0 S FBAAOUT=1
"RTN","FBAAMP1",15,0)
 Q
"RTN","FBAAMP1",16,0)
SUSP1 I FBAASC=4 K ^TMP($J,"FBWP") W !!,"Suspension Description: " S DIC="^TMP($J,""FBWP"",",DWLW=80,DWPK=1 D EN^DIWE K DIC,DWLW,DWPK I '$O(^TMP($J,"FBWP",0)) W !!,*7,"Description of Suspense is required." G SUSP1
"RTN","FBAAMP1",17,0)
 Q
"RTN","FBAAMP1",18,0)
HCFA F FBSI=28,30,31,32 S FBHCFA(FBSI)=""
"RTN","FBAAMP1",19,0)
 W ! F FBSI=28,30,31 D  Q:$G(FBAAOUT)
"RTN","FBAAMP1",20,0)
 . F  S DIR(0)="P"_$S(FBSI=28&($$EXTPV^FBAAUTL5(FBPOV)="01"):"O^80",FBSI=28&($$EXTPV^FBAAUTL5(FBPOV)'="01"):"^80",FBSI=30:"^353.1",FBSI=31:"O^353.2")_":EMZ" D HCFA1 Q:$G(FBAAOUT)  Q:FBSI'=28  Q:$$CHKICD9^FBCSV1(+Y,$G(FBMPDT))]""
"RTN","FBAAMP1",21,0)
 Q:$G(FBAAOUT)
"RTN","FBAAMP1",22,0)
 W !
"RTN","FBAAMP1",23,0)
 I $$EXTPV^FBAAUTL5(FBPOV)'="01" D
"RTN","FBAAMP1",24,0)
 . S FBSI=32,DIR(0)="Y",DIR("A")="Service connected condition"
"RTN","FBAAMP1",25,0)
 . S DIR("?")="^W !!,""Respond by answering 'Yes' or 'No'."",! I $G(DFN) W !?1,*7,""Patient:  "",$$NAME^FBCHREQ2(DFN) D DIS^DGRPDB W !!"
"RTN","FBAAMP1",26,0)
 . D HCFA1 I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAAMP1",27,0)
 Q
"RTN","FBAAMP1",28,0)
HCFA1 D ^DIR I $D(DTOUT)!($D(DUOUT)) S FBAAOUT=1 Q
"RTN","FBAAMP1",29,0)
 I Y'=-1 D
"RTN","FBAAMP1",30,0)
 .I DIR(0)["P" S FBHCFA(FBSI)=$P(Y,"^")
"RTN","FBAAMP1",31,0)
 .I DIR(0)="Y" S FBHCFA(FBSI)=$S(Y=1:"Y",1:"N")
"RTN","FBAAMP1",32,0)
 K DIR Q
"RTN","FBAAMP1",33,0)
DESC N FBJ
"RTN","FBAAMP1",34,0)
 I FBAASC=4,$D(^TMP($J,"FBWP",0)) S ^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,1,0)=^(0) F FBJ=1:1 Q:'$D(^TMP($J,"FBWP",FBJ,0))  S ^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,1,FBJ,0)=^(0)
"RTN","FBAAMP1",35,0)
 Q
"RTN","FBAAPET")
0^10^B33464708
"RTN","FBAAPET",1,0)
FBAAPET ;AISC/DMK-EDIT PAYMENT ;7/13/2003
"RTN","FBAAPET",2,0)
 ;;3.5;FEE BASIS;**4,38,55,61**;JAN 30, 1995
"RTN","FBAAPET",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPET",4,0)
 S FBOT=1
"RTN","FBAAPET",5,0)
GETPT I $G(BAT) D
"RTN","FBAAPET",6,0)
 .I '$D(^FBAAC("AC",+BAT)) F I=9,10,11 S $P(^FBAA(161.7,+BAT,0),U,I)=""
"RTN","FBAAPET",7,0)
 .I $D(^FBAAC("AC",+BAT)) D  S $P(^FBAA(161.7,+BAT,0),U,11)=I,$P(^(0),U,9)=$G(FBTOT) K I,FBTOT
"RTN","FBAAPET",8,0)
 ..N J,K,L,M S (I,J,K,L,M,FBTOT)=0
"RTN","FBAAPET",9,0)
 ..F  S J=$O(^FBAAC("AC",+BAT,J)) Q:'J  F  S K=$O(^FBAAC("AC",+BAT,J,K)) Q:'K  F  S L=$O(^FBAAC("AC",+BAT,J,K,L)) Q:'L  F  S M=$O(^FBAAC("AC",+BAT,J,K,L,M)) Q:'M  I $D(^FBAAC(J,1,K,1,L,1,M,0)) S I=I+1,FBTOT=FBTOT+$P(^(0),U,3)
"RTN","FBAAPET",10,0)
 W !! S DIC="^FBAAC(",DIC(0)="AEQM" D ^DIC G END:X="^"!(X=""),GETPT:Y<0 S (DFN,FBDA(3))=+Y
"RTN","FBAAPET",11,0)
 S:'$D(^FBAAC(DFN,1,0)) ^FBAAC(DFN,1,0)="^162.01P^0^0"
"RTN","FBAAPET",12,0)
 S DIC=DIC_DFN_",1,"
"RTN","FBAAPET",13,0)
GETVD W !! S DIC(0)="AEQM" D ^DIC G GETPT:X="^"!(X=""),GETVD:Y<0 S (FBV,FBVD,FBDA(2))=+Y
"RTN","FBAAPET",14,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,0)) ^FBAAC(DFN,1,FBDA(2),1,0)="^162.02DA^0^0"
"RTN","FBAAPET",15,0)
 S DIC=DIC_FBVD_",1,"
"RTN","FBAAPET",16,0)
GETDT S DIC(0)="AEQM",DIC("A")="Date of Service: " D ^DIC K DIC("A") G GETPT:X="^"!(X=""),GETDT:Y<0 S (FBSD,FBSDI,FBDA(1))=+Y,FBAADT=$P(Y,U,2)
"RTN","FBAAPET",17,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)) ^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)="^162.03A^0^0"
"RTN","FBAAPET",18,0)
 S FBZ=DIC_FBSD_",1,"
"RTN","FBAAPET",19,0)
SERV S DA(3)=FBDA(3),DA(2)=FBDA(2),DA(1)=FBDA(1)
"RTN","FBAAPET",20,0)
 S DIC("W")="N FBX S FBX=$$MODL^FBAAUTL4(""^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,+Y,""""M"""")"",""E"") W:FBX]"""" ""    CPT Modifier(s): "",FBX Q"
"RTN","FBAAPET",21,0)
 S DIC=FBZ,DIC(0)="AEQMZ" D ^DIC G GETPT:X="^"!(X=""),SERV:Y<0 S (FBSV,FBAACPI,FBDA)=+Y,BAT=$P(Y(0),U,8),FBDUZ=$P(Y(0),U,7),(FBAACP,FBAACP(0))=$P(Y,U,2),K=$P(Y(0),U,3),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBAAPET",22,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBAAPET",23,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBAAPET",24,0)
 I FBDUZ'=DUZ&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"Sorry,only the clerk who entered the payment ",!," or a supervisor can edit this payment." G GETPT
"RTN","FBAAPET",25,0)
 S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBAAPET",26,0)
 S FBFSAMT(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,12)
"RTN","FBAAPET",27,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBAAPET",28,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBAAPET",29,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_FBDA(3)_",1,"_FBDA(2)_",1,"_FBDA(1)_",1,"_FBDA_",""M"")")
"RTN","FBAAPET",30,0)
 ; load current adjustment data
"RTN","FBAAPET",31,0)
 D LOADADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBAAPET",32,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBAAPET",33,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBAAPET",34,0)
 ; load current remittance remark data
"RTN","FBAAPET",35,0)
 D LOADRR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBAAPET",36,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBAAPET",37,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBAAPET",38,0)
 ; save FPPS data prior to edit session
"RTN","FBAAPET",39,0)
 S FBFPPSC(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U)
"RTN","FBAAPET",40,0)
 S FBFPPSC=FBFPPSC(0)
"RTN","FBAAPET",41,0)
 S FBFPPSL(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U,2)
"RTN","FBAAPET",42,0)
 S FBFPPSL=FBFPPSL(0)
"RTN","FBAAPET",43,0)
 G:BAT']"" EDIT
"RTN","FBAAPET",44,0)
 I $G(^FBAA(161.7,BAT,"ST"))]"",$P(^FBAA(161.7,BAT,"ST"),"^")="S"!($P(^FBAA(161.7,BAT,"ST"),"^")="T")&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"Sorry, only the Supervisor can edit a payment once the batch has been released." G GETPT
"RTN","FBAAPET",45,0)
 I $G(^FBAA(161.7,BAT,"ST"))]"",$P(^FBAA(161.7,BAT,"ST"),"^")="V" W !!,*7,"Sorry,you cannot edit a payment once the batch has been Finalized." G GETPT
"RTN","FBAAPET",46,0)
EDIT S DA=FBSV
"RTN","FBAAPET",47,0)
 ;
"RTN","FBAAPET",48,0)
 ; first edit CPT code and modifiers
"RTN","FBAAPET",49,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) G GETPT
"RTN","FBAAPET",50,0)
 ; if CPT was changed then update file
"RTN","FBAAPET",51,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" G GETPT
"RTN","FBAAPET",52,0)
 . N FBIENS,FBFDA
"RTN","FBAAPET",53,0)
 . S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBAAPET",54,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBAAPET",55,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAPET",56,0)
 ; if modifiers changed then update file
"RTN","FBAAPET",57,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(FBDA(3),FBDA(2),FBDA(1),FBDA)
"RTN","FBAAPET",58,0)
 ;
"RTN","FBAAPET",59,0)
 ; now edit remaining fields
"RTN","FBAAPET",60,0)
 S DIE("NO^")=""
"RTN","FBAAPET",61,0)
 S DR="48;47;S FBUNITS=X;42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBAAPET",62,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1);34///@;34////^S X=FBAAMM1;30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAAPET",63,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBAAPET",64,0)
 ;S DR(1,162.03,3)="3////^S X=$S(J-K:J-K,1:"""");I X S Y=""@11"";4////@;S Y=""@5"";@11;3R;4R;S:X'=4 Y=""@5"";22"
"RTN","FBAAPET",65,0)
 S DR(1,162.03,3)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBAAPET",66,0)
 S DR(1,162.03,4)="S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);S:FBX=-1 Y=0;S:FBX="""" Y=""@5"";50///^S X=FBX;S FBFPPSC=X;S FBX=$$FPPSL^FBUTL5(FBFPPSL);S:FBX=-1 Y=0;51///^S X=FBX;S FBFPPCL=X;S Y=""@55"";@5;50///@;S FBFPPSC="""";51///@;S FBFPPSL="""";@55"
"RTN","FBAAPET",67,0)
 S DR(1,162.03,5)="K DIE(""NO^"");W !,""Exit ('^') allowed now"";26;S PRC(""SITE"")=X;8;13;Q;33;49"
"RTN","FBAAPET",68,0)
 S DR(1,162.03,6)="15;17;16;S:X=1 Y=""@1"";@6;28R;S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@6"";31;32R;S Y=""@7"";@1;28;I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@1"";31"
"RTN","FBAAPET",69,0)
 S DR(1,162.03,7)="@7;K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD)"
"RTN","FBAAPET",70,0)
 S DIE=FBZ D ^DIE
"RTN","FBAAPET",71,0)
 ; if adjustment data changed then file
"RTN","FBAAPET",72,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBAAPET",73,0)
 ; if remit remark data changed then file
"RTN","FBAAPET",74,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBAAPET",75,0)
 ; if FPPS CLAIM ID changed, update other line items on invoice
"RTN","FBAAPET",76,0)
 I FBFPPSC'=FBFPPSC(0) D
"RTN","FBAAPET",77,0)
 . N FBAAIN
"RTN","FBAAPET",78,0)
 . S FBAAIN=$$GET1^DIQ(162.03,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",14)
"RTN","FBAAPET",79,0)
 . D CKINVEDI^FBAAPET1(FBFPPSC(0),FBFPPSC,FBAAIN,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",")
"RTN","FBAAPET",80,0)
 K FBSV W !! G SERV
"RTN","FBAAPET",81,0)
END K DR,DIC,DIE,X,DFN,FBOT,FBVD,FBSD,BAT,FBAADT,FBSV,DA,FBDA,FBZ,FBDUZ,FBAACP,FBFY,FY,FBAMTPD,J,K,Y,ZZ,PRC,FBHOLDX,FBV,FBSDI,FBAACPI
"RTN","FBAAPET",82,0)
 K FBFSAMT,FBFSUSD,FBMODA,FBZIP,FBTIME,FBHCFA(30),FBAAPTC,FB1725,FBADJ,FBADJD,FBADJL(0),FBRRMK,FBRRMKD,FBRRMKL(0),FBX,FBUNITS
"RTN","FBAAPET",83,0)
 Q
"RTN","FBAAPET1")
0^12^B9459481
"RTN","FBAAPET1",1,0)
FBAAPET1 ;WOIFO/SAB-EDIT PAYMENT ;7/10/2003
"RTN","FBAAPET1",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBAAPET1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPET1",4,0)
CKINVEDI(FBFPPSC0,FBFPPSC1,FBAAIN,FBIENSE) ; Check Invoice for EDI
"RTN","FBAAPET1",5,0)
 ; Input
"RTN","FBAAPET1",6,0)
 ;  FBFPPSC0 - old FPPS CLAIM ID
"RTN","FBAAPET1",7,0)
 ;  FBFPPSC1 - new FPPS CLAIM ID
"RTN","FBAAPET1",8,0)
 ;  FBAAIN   - invoice number
"RTN","FBAAPET1",9,0)
 ;  FBIENSE   - optional, iens of line on invoice that was already edited
"RTN","FBAAPET1",10,0)
 ; Result
"RTN","FBAAPET1",11,0)
 ;  Lines on invoice may be updated (FPPS CLAIM ID, FPPS LINE ITEM)
"RTN","FBAAPET1",12,0)
 ;
"RTN","FBAAPET1",13,0)
 ; If FBFPPSC0]"",FBFPPSC1="" then EDI changed from YES to NO
"RTN","FBAAPET1",14,0)
 ;   need to delete FPPS CLAIM ID and FPPS LINE ITEM
"RTN","FBAAPET1",15,0)
 ; If FBFPPSC0="",FBFPPSC1]"" then EDI changed from NO to YES
"RTN","FBAAPET1",16,0)
 ;   need to update FPPS CLAIM ID and prompt FPPS LINE ITEM
"RTN","FBAAPET1",17,0)
 ; If FBFPPSC0]"",FBFPPSC1]"",FBFPPSC0'=FBFPPSC1 then
"RTN","FBAAPET1",18,0)
 ;   EDI stayed YES, but FPPS CLAIM ID was changed
"RTN","FBAAPET1",19,0)
 ;   need to update FPPS CLAIM ID
"RTN","FBAAPET1",20,0)
 ;
"RTN","FBAAPET1",21,0)
 N FBASKLN,FBFDA,FBFPPSC,FBFPPSL,FBI,FBIENS,FBMILL,FBUPDLN
"RTN","FBAAPET1",22,0)
 ;
"RTN","FBAAPET1",23,0)
 S FBIENSE=$G(FBIENSE)
"RTN","FBAAPET1",24,0)
 ;
"RTN","FBAAPET1",25,0)
 I FBFPPSC0=FBFPPSC1 Q  ; FPPS CLAIM ID was not changed
"RTN","FBAAPET1",26,0)
 ; 
"RTN","FBAAPET1",27,0)
 ; Get Lines on Invoice
"RTN","FBAAPET1",28,0)
 D MILL(FBAAIN,.FBMILL)
"RTN","FBAAPET1",29,0)
 ;
"RTN","FBAAPET1",30,0)
 I FBIENSE]"",FBMILL(0)=1 Q  ; only 1 line and it has been updated
"RTN","FBAAPET1",31,0)
 ;
"RTN","FBAAPET1",32,0)
 S (FBASKLN,FBUPDLN)=0
"RTN","FBAAPET1",33,0)
 I FBFPPSC0]"",FBFPPSC1="" S (FBFPPSC,FBFPPSL)="@",FBUPDLN=1
"RTN","FBAAPET1",34,0)
 I FBFPPSC0="",FBFPPSC1]"" S FBFPPSC=FBFPPSC1,(FBASKLN,FBUPDLN)=1
"RTN","FBAAPET1",35,0)
 I FBFPPSC0]"",FBFPPSC1]"" S FBFPPSC=FBFPPSC1
"RTN","FBAAPET1",36,0)
 ;
"RTN","FBAAPET1",37,0)
 W !,"FPPS CLAIM ID was changed.  Updating lines on invoice..."
"RTN","FBAAPET1",38,0)
 I FBASKLN D
"RTN","FBAAPET1",39,0)
 . W !,"Since EDI Claim from FPPS was changed from NO to YES, the"
"RTN","FBAAPET1",40,0)
 . W !,"FPPS LINE ITEM must be entered for each line on the invoice."
"RTN","FBAAPET1",41,0)
 ;
"RTN","FBAAPET1",42,0)
 ; loop thru lines
"RTN","FBAAPET1",43,0)
 S FBI=0 F  S FBI=$O(FBMILL(FBI)) Q:'FBI  D
"RTN","FBAAPET1",44,0)
 . S FBIENS=FBMILL(FBI)
"RTN","FBAAPET1",45,0)
 . I FBIENS=FBIENSE Q  ; already updated
"RTN","FBAAPET1",46,0)
 . S FBFDA(162.03,FBIENS,50)=FBFPPSC
"RTN","FBAAPET1",47,0)
 . I FBASKLN D DSPLIL S FBFPPSL=$$FPPSL^FBUTL5(,,1)
"RTN","FBAAPET1",48,0)
 . I FBUPDLN,$G(FBFPPSL)]"" S FBFDA(162.03,FBIENS,51)=FBFPPSL
"RTN","FBAAPET1",49,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAPET1",50,0)
 ; 
"RTN","FBAAPET1",51,0)
 Q
"RTN","FBAAPET1",52,0)
 ;
"RTN","FBAAPET1",53,0)
MILL(FBAAIN,FBMILL) ; Medical Invoice Line List
"RTN","FBAAPET1",54,0)
 ; Input
"RTN","FBAAPET1",55,0)
 ;   FBAAIN - invoice #
"RTN","FBAAPET1",56,0)
 ;   FBMILL - array, passed by reference
"RTN","FBAAPET1",57,0)
 ; Result
"RTN","FBAAPET1",58,0)
 ;   
"RTN","FBAAPET1",59,0)
 ; Output
"RTN","FBAAPET1",60,0)
 ;   FBMILL - input array will be updated to contain
"RTN","FBAAPET1",61,0)
 ;     FBMILL(0)=FBC
"RTN","FBAAPET1",62,0)
 ;     FBMILL(FBI)=FBIENS
"RTN","FBAAPET1",63,0)
 ;   Where
"RTN","FBAAPET1",64,0)
 ;     FBC = number of lines on invoice
"RTN","FBAAPET1",65,0)
 ;     FBI = integer number
"RTN","FBAAPET1",66,0)
 ;     FBIENS = internal entry number of line item (subfile 162.03),
"RTN","FBAAPET1",67,0)
 ;              fileman DBS format
"RTN","FBAAPET1",68,0)
 ;   
"RTN","FBAAPET1",69,0)
 N DA,FBC
"RTN","FBAAPET1",70,0)
 ; initialize
"RTN","FBAAPET1",71,0)
 K FBMILL
"RTN","FBAAPET1",72,0)
 S FBC=0 ; count
"RTN","FBAAPET1",73,0)
 ; loop thru x-ref
"RTN","FBAAPET1",74,0)
 S DA(3)=0
"RTN","FBAAPET1",75,0)
 F  S DA(3)=$O(^FBAAC("C",FBAAIN,DA(3))) Q:'DA(3)  D
"RTN","FBAAPET1",76,0)
 .S DA(2)=0
"RTN","FBAAPET1",77,0)
 .F  S DA(2)=$O(^FBAAC("C",FBAAIN,DA(3),DA(2))) Q:'DA(2)  D
"RTN","FBAAPET1",78,0)
 ..S DA(1)=0
"RTN","FBAAPET1",79,0)
 ..F  S DA(1)=$O(^FBAAC("C",FBAAIN,DA(3),DA(2),DA(1))) Q:'DA(1)  D
"RTN","FBAAPET1",80,0)
 ...S DA=0
"RTN","FBAAPET1",81,0)
 ...F  S DA=$O(^FBAAC("C",FBAAIN,DA(3),DA(2),DA(1),DA)) Q:'DA  D
"RTN","FBAAPET1",82,0)
 ....S FBC=FBC+1
"RTN","FBAAPET1",83,0)
 ....S FBMILL(FBC)=DA_","_DA(1)_","_DA(2)_","_DA(3)_","
"RTN","FBAAPET1",84,0)
 ; save count of lines
"RTN","FBAAPET1",85,0)
 S FBMILL(0)=FBC
"RTN","FBAAPET1",86,0)
 Q
"RTN","FBAAPET1",87,0)
 ;
"RTN","FBAAPET1",88,0)
DSPLIL ; Display Invoice Line
"RTN","FBAAPET1",89,0)
 ; Input
"RTN","FBAAPET1",90,0)
 ;   FBIENS - iens of line to display
"RTN","FBAAPET1",91,0)
 N DA,FBMODA,FBMODL
"RTN","FBAAPET1",92,0)
 D DA^DILF(FBIENS,.DA)
"RTN","FBAAPET1",93,0)
 D MODDATA^FBAAUTL4(DA(3),DA(2),DA(1),DA)
"RTN","FBAAPET1",94,0)
 S FBMODL=$$MODL^FBAAUTL4("FBMODA","E")
"RTN","FBAAPET1",95,0)
 W !!
"RTN","FBAAPET1",96,0)
 W "SVC DATE: ",$$GET1^DIQ(162.02,DA(1)_","_DA(2)_","_DA(3)_",",.01)
"RTN","FBAAPET1",97,0)
 W ?23,"CPT-MOD: ",$$GET1^DIQ(162.03,FBIENS,.01)
"RTN","FBAAPET1",98,0)
 I FBMODL]"" W "-",FBMODL
"RTN","FBAAPET1",99,0)
 W ?43,"REV. CODE: ",$$GET1^DIQ(162.03,FBIENS,48)
"RTN","FBAAPET1",100,0)
 W ?63,"AMT CLAIMED: ",$$GET1^DIQ(162.03,FBIENS,1)
"RTN","FBAAPET1",101,0)
 Q
"RTN","FBAAPET1",102,0)
 ;
"RTN","FBAAPET1",103,0)
 ;FBAAPET1
"RTN","FBAAPH")
0^60^B28099424
"RTN","FBAAPH",1,0)
FBAAPH ;AISC/DMK,GRR-LIST PAYMENT HISTORY ;8/10/2003
"RTN","FBAAPH",2,0)
 ;;3.5;FEE BASIS;**2,4,32,61**;JAN 30, 1995
"RTN","FBAAPH",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPH",4,0)
 D DT^DICRW
"RTN","FBAAPH",5,0)
RD K FBAANQ,FB,FBTRX W !! S FBAAOUT=0,DIC="^FBAAC(",DIC(0)="AEQMNZ",DIC("A")="Select Fee Patient: " D ^DIC K DIC("A") G Q:X="^"!(X=""),RD:Y<0 S DFN=+Y,FBNAME=Y(0,0)
"RTN","FBAAPH",6,0)
 I '$D(^FBAAC(DFN,"AB")) W !!,"No payments for this patient!",! G RD
"RTN","FBAAPH",7,0)
 S FBSSN=$$SSN^FBAAUTL(DFN)
"RTN","FBAAPH",8,0)
 D HOME^%ZIS ;S VAR="FBNAME^DFN",VAL=FBNAME_"^"_DFN,PGM="LIST^FBAAPH" D ZIS^FBAAUTL G:FBPOP Q S:IO=IO(0) FBAANQ=1
"RTN","FBAAPH",9,0)
LIST S:'$D(FBNAME) FBNAME=$P($G(^DPT(+DFN,0)),"^")
"RTN","FBAAPH",10,0)
 S FBPHOUT=1
"RTN","FBAAPH",11,0)
 U IO S FBAAOUT=0 D ^FBAADEM I FBAAOUT'=1,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR G Q:$D(DIRUT)
"RTN","FBAAPH",12,0)
 K Q S $P(Q,"=",80)="="
"RTN","FBAAPH",13,0)
 S FBAAOUT=0 W:$E(IOST,1,2)["C-" @IOF D HED S J=DFN
"RTN","FBAAPH",14,0)
 F I=0:0 S I=$O(^FBAAC(J,"AB",I)) Q:I=""!(FBAAOUT)  F K=0:0 S K=$O(^FBAAC(J,"AB",I,K)) Q:K=""!(FBAAOUT)  F L=0:0 S L=$O(^FBAAC(J,"AB",I,K,L)) Q:L=""!(FBAAOUT)  D SETTR F M=0:0 S M=$O(^FBAAC(J,1,K,1,L,1,M)) Q:'M  D SET Q:FBAAOUT
"RTN","FBAAPH",15,0)
 G RD:FBAAOUT!('$D(FB)) S FBTRCK=1,D=0 F  S D=$O(FB(D)) Q:'D  S FBTRX=0 F  S FBTRX=$O(FB(D,FBTRX)) Q:'FBTRX  D WRTCK Q:FBAAOUT  W:$G(FBTRCK) !!,?5,"TRAVEL PAYMENTS: " D  K FBTRCK
"RTN","FBAAPH",16,0)
 .W ?22,$$DATX^FBAAUTL(D),?35,$P(FB(D,FBTRX),"^") I $P(FB(D,FBTRX),"^",3)]"" W ?44,"Check #: ",$P(FB(D,FBTRX),"^",2),?63,"Paid: ",$$DATX^FBAAUTL($P(FB(D,FBTRX),"^",3))
"RTN","FBAAPH",17,0)
 G RD
"RTN","FBAAPH",18,0)
 W !! D CLOSE^FBAAUTL K FBNAME,DFN,J,FBAANQ,FBAAOUT,DIC,VAL,VAR,PGM Q
"RTN","FBAAPH",19,0)
SET ;
"RTN","FBAAPH",20,0)
 N FBAARCE,FBADJLA,FBADJLR,FBCSID,FBFPPSC,FBFPPSL,FBRRMKL,FBUNITS
"RTN","FBAAPH",21,0)
 N FBX,FBY2,FBY3,TAMT
"RTN","FBAAPH",22,0)
 S V=$P($G(^FBAAV(K,0)),"^"),FBVID=$S(V]"":$P(^(0),"^",2),1:"")
"RTN","FBAAPH",23,0)
 S Y=^FBAAC(J,1,K,1,L,1,M,0),T=$P(Y,"^",5),D2=$P(Y,"^",6),FBDOS=D2,D2=$S(D2="":"",1:$E(D2,4,5)_"/"_$E(D2,6,7)_"/"_$E(D2,2,3)),FBCP=$P(Y,"^",18),FBCP=$S(FBCP=1:"(C&P)",1:"")
"RTN","FBAAPH",24,0)
 S FBAACPTC=$$CPT^FBAAUTL4(+Y)
"RTN","FBAAPH",25,0)
 S FBOB=$P(Y,"^",10)
"RTN","FBAAPH",26,0)
 I T]"" S T=$P($G(^FBAA(161.27,+T,0)),"^")
"RTN","FBAAPH",27,0)
 S A1=$P(Y,"^",2)+.0001,A2=$P(Y,"^",3)+.0001,A1=$P(A1,".",1)_"."_$E($P(A1,".",2),1,2),A2=$P(A2,".",1)_"."_$E($P(A2,".",2),1,2)
"RTN","FBAAPH",28,0)
 S FBAPS=$$APS^FBAAUTL4(J,K,L,M)
"RTN","FBAAPH",29,0)
 S FBTYPE=$P(Y,"^",20),FBVP=$P(Y,"^",21),FBIN=$P(Y,"^",16),FBBN=$P(Y,"^",8),FBBN=$S(FBBN']"":"",$D(^FBAA(161.7,FBBN,0)):$P(^(0),"^"),1:""),FBBN=$S(FBBN="":"",1:$E("00000",$L(FBBN)+1,5)_FBBN)
"RTN","FBAAPH",30,0)
 S FBY3=$G(^FBAAC(J,1,K,1,L,1,M,3))
"RTN","FBAAPH",31,0)
 S FBFPPSC=$P(FBY3,U)
"RTN","FBAAPH",32,0)
 S FBFPPSL=$P(FBY3,U,2)
"RTN","FBAAPH",33,0)
 S FBX=$$ADJLRA^FBAAFA(M_","_L_","_K_","_J_",")
"RTN","FBAAPH",34,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBAAPH",35,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBAAPH",36,0)
 S TAMT=$FN($P(Y,"^",4),"",2)
"RTN","FBAAPH",37,0)
 S FBAARCE=$$GET1^DIQ(162.03,M_","_L_","_K_","_J_",",48)
"RTN","FBAAPH",38,0)
 S FBY2=$G(^FBAAC(J,1,K,1,L,1,M,2))
"RTN","FBAAPH",39,0)
 S FBUNITS=$P(FBY2,U,14)
"RTN","FBAAPH",40,0)
 S FBCSID=$P(FBY2,U,16)
"RTN","FBAAPH",41,0)
 S FBRRMKL=$$RRL^FBAAFR(M_","_L_","_K_","_J_",")
"RTN","FBAAPH",42,0)
 D FBCKO^FBAACCB2(J,K,L,M)
"RTN","FBAAPH",43,0)
 S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",""M"")","E")
"RTN","FBAAPH",44,0)
 D WRT
"RTN","FBAAPH",45,0)
 Q
"RTN","FBAAPH",46,0)
WRT D WRTCK Q:FBAAOUT
"RTN","FBAAPH",47,0)
 W !!,"Vendor: ",$E(V,1,33),"     Vendor ID: ",FBVID,?66," Obl.#: "_FBOB
"RTN","FBAAPH",48,0)
 W !,$S(FBTYPE="R":"*",1:" "),$S(FBVP="VP":"#",1:""),$S($G(FBCAN)]"":"+",1:""),?2,$$DATX^FBAAUTL(D),?12,FBAACPTC,FBCP_$S($G(FBMODLE)]"":"-"_$P(FBMODLE,","),1:""),?22,FBAARCE,?31,FBUNITS,?38,FBCSID,?60,$J(FBIN,7),?71,FBBN
"RTN","FBAAPH",49,0)
 I $P($G(FBMODLE),",",2)]"" D  Q:FBAAOUT
"RTN","FBAAPH",50,0)
 . N FBI
"RTN","FBAAPH",51,0)
 . F FBI=2:1 S FBMOD=$P(FBMODLE,",",FBI) Q:FBMOD=""  D  Q:FBAAOUT
"RTN","FBAAPH",52,0)
 . . I $Y+5>IOSL D WRTCK Q:FBAAOUT  W !,"(continued)"
"RTN","FBAAPH",53,0)
 . . W !,?17,"-",FBMOD
"RTN","FBAAPH",54,0)
 W !?5,$J(A1,6),?18,$J(A2,6),FBAPS
"RTN","FBAAPH",55,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBAAPH",56,0)
 W ?32,$S(FBADJLR]"":FBADJLR,1:T)
"RTN","FBAAPH",57,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBAAPH",58,0)
 W ?42,$S(FBADJLA]"":FBADJLA,1:TAMT)
"RTN","FBAAPH",59,0)
 W ?58,FBRRMKL,?71,D2
"RTN","FBAAPH",60,0)
 I FBFPPSC]"" W !,?5,"FPPS Claim ID: ",FBFPPSC,?32,"FPPS Line Item: ",FBFPPSL
"RTN","FBAAPH",61,0)
 D PMNT^FBAACCB2
"RTN","FBAAPH",62,0)
 Q
"RTN","FBAAPH",63,0)
WRTCK I ($Y+5)>IOSL,$E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR  S:'Y FBAAOUT=1 Q:FBAAOUT
"RTN","FBAAPH",64,0)
 I ($Y+5)>IOSL W @IOF D HED
"RTN","FBAAPH",65,0)
 Q
"RTN","FBAAPH",66,0)
HED I $E(IOST,1,2)'="C-" W !?24,"MEDICAL PAYMENT HISTORY",!?23,$E(Q,1,25)
"RTN","FBAAPH",67,0)
 W !,"Patient: ",FBNAME,?40,"SSN: ",$$SSN^FBAAUTL(DFN),!,?10,"('*' Reimb. to Patient  '+' Cancel. Activity  '#' Voided Payment)"
"RTN","FBAAPH",68,0)
 W !,?4,"(paid symbol: 'R' RBRVS  'F' 75th percentile  'C' contract  'M' Mill Bill"
"RTN","FBAAPH",69,0)
 W !,?4,"              'U' U&C)"
"RTN","FBAAPH",70,0)
 W !,?2,"Svc Date",?12,"CPT-MOD",?22,"Rev.Code",?31,"Units",?38,"Patient Account No.",?60,"Invoice #",?71,"Batch #"
"RTN","FBAAPH",71,0)
 W !?5,"Amt Claimed",?18,"Amt Paid",?32,"Adj Code",?42,"Adj Amount",?58,"Remit Remark",?71,"VoucherDt"
"RTN","FBAAPH",72,0)
 W !,Q,!
"RTN","FBAAPH",73,0)
 Q
"RTN","FBAAPH",74,0)
Q K D,D2,J,K,L,M,DIC,T,Y,Q,I,A1,A2,A3,C,DAT,DIYS,F,FBAACPTC,FBAANQ,FBAAOUT,FBBN,FBCOUNTY,FBCP,FBOB,FBDOS,FBDX,FBIN,FBTA,FBTYPE,FBVID,FBNAME,PGM,PI,V,VAL,VAR,Z,ZZ,A,A1,A2,BE,CPTDESC,FBVP,PSA,FBPHOUT,FBAUT
"RTN","FBAAPH",75,0)
 K B1AUT,B2,DFN,FBAADOD,PTYPE,FBI,FBRR,FBPROG,FBXX,FBSSN,X1,FBAACPT,FBAADT,FBAAPD,FBIN,I,K,L,Q,Y,Z,ZS,FB,FBTRX,FBMOD,FBMODLE,FBAPS
"RTN","FBAAPH",76,0)
 D CLOSE^FBAAUTL Q
"RTN","FBAAPH",77,0)
SETTR S D=$S($D(^FBAAC(J,1,K,1,L,0)):$P(^(0),"^",1),1:""),A3=""
"RTN","FBAAPH",78,0)
 I D]"",$D(^FBAAC(J,3,"AB",D)) S (FBTA,FBCTR)=0 F  S FBTA=$O(^FBAAC(J,3,"AB",D,FBTA)) Q:'FBTA  S B3=$G(^FBAAC(J,3,FBTA,0)),A3=$P(B3,"^",3) I A3>0 S FBCTR=FBCTR+1,FB(D,FBCTR)=$J(A3,6,2)_"^"_$P(B3,"^",7)_"^"_$P(B3,"^",6)
"RTN","FBAAPH",79,0)
 K A3,B3,FBTA,FBCTR Q
"RTN","FBAAPIE")
0^27^B21766218
"RTN","FBAAPIE",1,0)
FBAAPIE ;AISC/GRR-ENTER FEE PHARMACY INVOICE ;7/8/2003
"RTN","FBAAPIE",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBAAPIE",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPIE",4,0)
 D SITEP^FBAAUTL W:FBPOP !!,*7,"Fee site parameters must be initialized!!" Q:FBPOP  S FBMDF=$P(FBSITE(0),"^",10),FBAAPTC=$S($D(FBAAPTC):FBAAPTC,1:"V")
"RTN","FBAAPIE",5,0)
RD1 W ! S DIR("A")="Are you sure you want to enter a new invoice",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G Q^FBAAPIE1:$D(DIRUT),RDM^FBAAPIE1:'Y
"RTN","FBAAPIE",6,0)
ENTER S (LCNT,TAC,FBINTOT)=0,STAT(0)="",FBAAOUT=1 K FBTOUT
"RTN","FBAAPIE",7,0)
 D GETNXI^FBAAUTL S X=FBAAIN
"RTN","FBAAPIE",8,0)
 S DLAYGO=162.1,DIC="^FBAA(162.1,",DIC(0)="LQ" D ^DIC K DLAYGO G:Y<0 PROB^FBAAPIE1 W !!,"Invoice # assigned is: ",X S IN=X,DA(1)=IN
"RTN","FBAAPIE",9,0)
RDV I '$D(FB583) W !! S DLAYGO=161.2,(DIE,DIC)="^FBAAV(",DIC(0)="AEQLM" D ^DIC K DLAYGO G CHK:Y<0 S DA=+Y D NEW^FBAAVD:$P(Y,"^",3)=1
"RTN","FBAAPIE",10,0)
 I $D(FB583) S DA=FBVEN
"RTN","FBAAPIE",11,0)
 I $D(^FBAAV(DA,0)),$P($G(^("ADEL")),"^")="Y" W !!,"Vendor is flagged for Austin deletion!" G RDV:'$D(FB583),Q^FBAAPIE1
"RTN","FBAAPIE",12,0)
 D EN1^FBAAVD:$P(FBSITE(0),"^",12)="Y" S VIN=DA
"RTN","FBAAPIE",13,0)
RDV1 I $D(^XUSEC("FBAA ESTABLISH VENDOR",DUZ)) W ! S DIR("A")="Want to edit Vendor data",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR G CHK:$D(DIRUT) D:Y EDITV^FBAAVD S VIN=DA
"RTN","FBAAPIE",14,0)
 S FBAR(DA)="" D ^FBAACO4
"RTN","FBAAPIE",15,0)
 W !! S %DT="AEQXP",%DT(0)=-DT,%DT("A")="Date Correct Invoice Received: " D ^%DT K %DT(0),%DT("A") G CHK:Y<0 S INVDATE=Y
"RTN","FBAAPIE",16,0)
 W !! S %DT="AEQXP",%DT(0)=-INVDATE,%DT("A")="Vendor Invoice Date:  " D ^%DT K %DT(0),%DT("A") G CHK:Y<0 S FBVINVDT=Y
"RTN","FBAAPIE",17,0)
 ; if U/C then get FPPS Claim ID else ask user
"RTN","FBAAPIE",18,0)
 I $D(FB583) S FBFPPSC=$P($G(^FB583(FB583,5)),U) W !,"FPPS CLAIM ID: ",$S(FBFPPSC="":"N/A",1:FBFPPSC)
"RTN","FBAAPIE",19,0)
 E  S FBFPPSC=$$FPPSC^FBUTL5() I FBFPPSC=-1 K FBFPPSC G CHK
"RTN","FBAAPIE",20,0)
 S (DIE,DIC)="^FBAA(162.1,",DA=IN
"RTN","FBAAPIE",21,0)
 S DR="1////^S X=INVDATE;1.5////^S X=DT;2////^S X=DUZ;3////^S X=VIN;5////^S X=1;12////^S X=FBVINVDT;13///^S X=FBFPPSC"
"RTN","FBAAPIE",22,0)
 D ^DIE
"RTN","FBAAPIE",23,0)
 I '$D(^FBAA(162.1,IN,"RX",0)) S ^FBAA(162.1,IN,"RX",0)="^162.11A^^"
"RTN","FBAAPIE",24,0)
RDP S FBPHARM=1 W:FBINTOT>0 !,?15,"Pharmacy Invoice #: "_IN_"  Totals: $ "_$J(FBINTOT,1,2)
"RTN","FBAAPIE",25,0)
 ; if EDI then ask FPPS Line Item
"RTN","FBAAPIE",26,0)
 I FBFPPSC]"" W !!! S FBFPPSL=$$FPPSL^FBUTL5() I FBFPPSL=-1 K FBFPPSL G CHK
"RTN","FBAAPIE",27,0)
 D ^FBAASAP K FBPHARM I 'DFN K DFN G CHK
"RTN","FBAAPIE",28,0)
 I FBTT=1 S FBMST="Y",FBTTYPE="A",FBFDC="",FBD1=FTP D ENT^FBAAAUT
"RTN","FBAAPIE",29,0)
 D HOME^%ZIS,FBPH^FBAAUTL2 I $D(DIRUT),$D(FB583) G CHK
"RTN","FBAAPIE",30,0)
RDD W !! S %DT(0)=-DT,%DT="AEXP",%DT("A")="DATE PRESCRIPTION FILLED: " D ^%DT K %DT G:X["^"!(X="") RDP G RDD:Y<0 S DATEF=Y
"RTN","FBAAPIE",31,0)
 I DATEF<FBAABDT!(DATEF>FBAAEDT) W !!,*7,"Date Prescription Filled is ",$S(DATEF<FBAABDT:" prior to ",1:"later than "),"authorization period!!" G RDD
"RTN","FBAAPIE",32,0)
 I '$D(^FBAA(162.1,IN,"RX",0)) S ^FBAA(162.1,IN,"RX",0)="^162.11A^^"
"RTN","FBAAPIE",33,0)
RDRX S DIR(0)="162.11,.01",DIR("A")="Select PRESCRIPTION NUMBER" D ^DIR K DIR G CHK:Y="^"!(Y="") S PSRX=Y,AC=0
"RTN","FBAAPIE",34,0)
 I $D(^FBAA(162.1,IN,"RX","B",PSRX)) G RX2^FBAAPIE1
"RTN","FBAAPIE",35,0)
 D CHK2^FBAAPIE1 I FBJ]"" K FBJ G CHKK^FBAAPIE1
"RTN","FBAAPIE",36,0)
RXADD K DA S DLAYGO=162.1,DA(1)=IN,DIC="^FBAA(162.1,"_IN_",""RX"",",DIC(0)="EQL",X=""""_PSRX_"""" D ^DIC K DLAYGO G:Y<0 RDRX S FBDA=+Y
"RTN","FBAAPIE",37,0)
 S DIE="^FBAA(162.1,",DA=IN,DR="[FB ADD RX]" D ^DIE I $D(DTOUT)!('$G(FBUP)) G DELRX
"RTN","FBAAPIE",38,0)
 S LCNT=LCNT+1,TAC=TAC+AC K FBUP
"RTN","FBAAPIE",39,0)
RDDER W !!,*7,"Prescription referred to Pharmacy Service for determination.",! S X="Y"
"RTN","FBAAPIE",40,0)
 S STAT(1)="" G RDP:'$D(FB583),Q^FBAAPIE1
"RTN","FBAAPIE",41,0)
 S $P(^FBAA(162.1,IN,"RX",DA,2),"^")="P",^FBAA(162.1,"AH","P",IN,DA)="",$P(^FBAA(162.1,IN,0),"^",10)="P"
"RTN","FBAAPIE",42,0)
 S DA(1)=IN,DIE=DIC
"RTN","FBAAPIE",43,0)
HERE S:$D(FBAP) FBINTOT=FBINTOT+FBAP S:$D(DTOUT) FBTOUT="" G OVR:$D(DTOUT),RDD
"RTN","FBAAPIE",44,0)
CHK I LCNT'>0 W !!,"Since you didn't enter any line items",!,"Invoice # ",IN," has been Deleted!!",*7 D KILL G Q^FBAAPIE1:$D(FBTOUT),MORE:'$D(FB583),Q^FBAAPIE1
"RTN","FBAAPIE",45,0)
OVR K DTOUT,DR,DQ,DG
"RTN","FBAAPIE",46,0)
 K STAT(2)
"RTN","FBAAPIE",47,0)
 S (DIE,DIC)="^FBAA(162.1,",DA=IN,STAT=$O(STAT(0)),DR="5////^S X=STAT;6///^S X=TAC;7///^S X=FBINTOT;8///^S X=LCNT" D ^DIE G:$D(FBTOUT) Q^FBAAPIE1 W !!,"Invoice No.: ",IN," Completed!" W:FBINTOT>0 ?45,"Invoice Total: $ ",$J(FBINTOT,1,2)
"RTN","FBAAPIE",48,0)
MORE K STAT,FBHX W ! S DIR("A")="Want to enter another Invoice",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR G Q^FBAAPIE1:$D(DIRUT)!('Y),ENTER
"RTN","FBAAPIE",49,0)
 Q
"RTN","FBAAPIE",50,0)
KILL S DIK="^FBAA(162.1,",DA=IN D ^DIK K DIK Q
"RTN","FBAAPIE",51,0)
DELRX S DIK="^FBAA(162.1,"_DA(1)_",""RX"",",DA=FBDA D ^DIK K DTOUT,DQ,DR,DG S FBTOUT="" W !,"Incomplete prescription entry.  Deleted.",! G CHK
"RTN","FBAAPIN")
0^38^B23332246
"RTN","FBAAPIN",1,0)
FBAAPIN ;AISC/GRR-INVOICE DISPLAY ;7/17/2003
"RTN","FBAAPIN",2,0)
 ;;3.5;FEE BASIS;**4,61**;JAN 30, 1995
"RTN","FBAAPIN",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPIN",4,0)
 D DT^DICRW
"RTN","FBAAPIN",5,0)
RD1 W ! S (FBHDONE,FBAAOUT,FBINTOT)=0,FBSW=0 K FBHED S DIR(0)="NO",DIR("A")="Select Invoice Number",DIR("?")="^D HELP^FBAAPIN1" D ^DIR K DIR G Q:$D(DIRUT)!'Y
"RTN","FBAAPIN",6,0)
 I '$D(^FBAAC("C",X)) W !,*7,"Invalid selection.",! G RD1
"RTN","FBAAPIN",7,0)
 S HX=X,FBAAIN=X D LIST S X=HX G RD1
"RTN","FBAAPIN",8,0)
LIST S Q="",$P(Q,"=",80)="="
"RTN","FBAAPIN",9,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBAAPIN",10,0)
 F J=0:0 S J=$O(^FBAAC("C",FBAAIN,J)) Q:J'>0!(FBAAOUT)  D MMORE
"RTN","FBAAPIN",11,0)
 Q
"RTN","FBAAPIN",12,0)
SET S FBFILE="^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",1,",D=$P($G(^FBAAC(J,1,K,1,L,0)),"^",1),FBYY=$G(^FBAAC(J,1,K,1,L,1,M,0)),FBYY("REJ")=$S($D(^FBAAC(J,1,K,1,L,1,M,"FBREJ")):^("FBREJ"),1:""),FBY=$G(^FBAAC(J,1,K,1,L,1,M,2))
"RTN","FBAAPIN",13,0)
 S FBY3=$G(^FBAAC(J,1,K,1,L,1,M,3))
"RTN","FBAAPIN",14,0)
 S FBAARCE=$$GET1^DIQ(162.03,M_","_L_","_K_","_J_",",48)
"RTN","FBAAPIN",15,0)
 D SET2
"RTN","FBAAPIN",16,0)
 Q
"RTN","FBAAPIN",17,0)
SET2 ;
"RTN","FBAAPIN",18,0)
 N FBX
"RTN","FBAAPIN",19,0)
 S N=$S($D(^DPT(J,0)):$P(^(0),"^",1),1:""),S=$S(N]"":$P(^DPT(J,0),"^",9),1:""),V=$S($D(^FBAAV(K,0)):$P(^FBAAV(K,0),"^",1),1:"")
"RTN","FBAAPIN",20,0)
 S T=$P(FBYY,"^",5),D2=$P(FBYY,"^",6),ZS=$P(FBYY,"^",20),VP=$P(FBYY,"^",21)
"RTN","FBAAPIN",21,0)
 S T=$P($G(^FBAA(161.27,+T,0)),U)
"RTN","FBAAPIN",22,0)
 S TAMT=$FN($P(FBYY,U,4),"",2)
"RTN","FBAAPIN",23,0)
 S FBAACPT=$P(FBYY,"^",1) I FBAACPT]"" S FBAACPT=$$CPT^FBAAUTL4(FBAACPT)
"RTN","FBAAPIN",24,0)
 S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",""M"")","E")
"RTN","FBAAPIN",25,0)
 S FBUNITS=$P(FBY,U,14)
"RTN","FBAAPIN",26,0)
 S FBFPPSL=$P(FBY3,U,2)
"RTN","FBAAPIN",27,0)
 S FBX=$$ADJLRA^FBAAFA(M_","_L_","_K_","_J_",")
"RTN","FBAAPIN",28,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBAAPIN",29,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBAAPIN",30,0)
 S FBRRMKL=$$RRL^FBAAFR(M_","_L_","_K_","_J_",")
"RTN","FBAAPIN",31,0)
 S A1=$P(FBYY,"^",2)+.0001,A2=$P(FBYY,"^",3)+.0001,A3=$P(FBYY,"^",12)+.0001,A1=$P(A1,".",1)_"."_$E($P(A1,".",2),1,2),A2=$P(A2,".",1)_"."_$E($P(A2,".",2),1,2),A3=$P(A3,".",1)_"."_$E($P(A3,".",2),1,2),FBINTOT=FBINTOT+A2+.0001
"RTN","FBAAPIN",32,0)
 S FBINTOT=$P(FBINTOT,".")_"."_$E($P(FBINTOT,".",2),1,2)
"RTN","FBAAPIN",33,0)
 S FBBN=$S($P(FBYY,"^",8)]"":$S($D(^FBAA(161.7,$P(FBYY,"^",8),0)):$P(^(0),"^",1),1:""),$P(FBYY("REJ"),"^",3)]"":$S($D(^FBAA(161.7,$P(FBYY("REJ"),"^",3),0)):$P(^(0),"^",1),1:""),1:"")
"RTN","FBAAPIN",34,0)
 D FBCKO^FBAACCB2(J,K,L,M)
"RTN","FBAAPIN",35,0)
 I '$D(FBHED) D HED
"RTN","FBAAPIN",36,0)
 D WRT S FBHED=1
"RTN","FBAAPIN",37,0)
 Q
"RTN","FBAAPIN",38,0)
WRT I ($Y+5)>IOSL S DIR(0)="E" D ^DIR K DIR S:'Y FBAAOUT=1 Q:FBAAOUT  D HED
"RTN","FBAAPIN",39,0)
 W !!,N,?33,$$DATX^FBAAUTL(D),?43,FBAACPT_$S($G(FBMODLE)]"":"-"_$P(FBMODLE,","),1:"")
"RTN","FBAAPIN",40,0)
 I FBAARCE]"" W ?51,"/",FBAARCE
"RTN","FBAAPIN",41,0)
 W ?57,FBBN,?67,$S(FBYY("REJ")]"":"Rejected",1:$$DATX^FBAAUTL(D2))
"RTN","FBAAPIN",42,0)
 I $P($G(FBMODLE),",",2)]"" D  Q:FBAAOUT
"RTN","FBAAPIN",43,0)
 . N FBI
"RTN","FBAAPIN",44,0)
 . F FBI=2:1 S FBMOD=$P(FBMODLE,",",FBI) Q:FBMOD=""  D  Q:FBAAOUT
"RTN","FBAAPIN",45,0)
 . . I $Y+5>IOSL D  Q:FBAAOUT  W !,"(continued)"
"RTN","FBAAPIN",46,0)
 . . . S DIR(0)="E" D ^DIR K DIR S:'Y FBAAOUT=1 Q:FBAAOUT  D HED
"RTN","FBAAPIN",47,0)
 . . W !,?48,"-",FBMOD
"RTN","FBAAPIN",48,0)
 W !,$S(ZS="R":"*",1:""),$S(VP="VP":"#",1:""),$S($G(FBCAN)]"":"+",1:"")
"RTN","FBAAPIN",49,0)
 W ?3,FBFPPSL,?14,"$",$J(A1,8),?26,"$",$J(A2,8),?37,FBUNITS
"RTN","FBAAPIN",50,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBAAPIN",51,0)
 W ?43,$S(FBADJLR]"":FBADJLR,1:T)
"RTN","FBAAPIN",52,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBAAPIN",53,0)
 W ?53,"$",$S(FBADJLA]"":FBADJLA,1:TAMT)
"RTN","FBAAPIN",54,0)
 W ?69,FBRRMKL
"RTN","FBAAPIN",55,0)
 ; if adjustment reasons null and suspend code = other then write desc.
"RTN","FBAAPIN",56,0)
 I FBADJLR="",T=4 D ^FBAAPIN1
"RTN","FBAAPIN",57,0)
 D PMNT^FBAACCB2
"RTN","FBAAPIN",58,0)
 Q
"RTN","FBAAPIN",59,0)
HED W @IOF,!,"Invoice Number: ",FBAAIN,?30,"Vendor Name: ",V,!,?2,"Date Received: ",FBINDAT
"RTN","FBAAPIN",60,0)
 I +$G(FBY) W ?33,"Invoice Date: ",$$DATX^FBAAUTL(+FBY)
"RTN","FBAAPIN",61,0)
 W !?2,"FPPS Claim ID: ",$S(FBFPPSC]"":FBFPPSC,1:"N/A")
"RTN","FBAAPIN",62,0)
 W ?33,"Patient Account #: ",FBCSID
"RTN","FBAAPIN",63,0)
 W !?10,"('*' Reimb. to Patient  '+' Cancel. Activity  '#' Voided Payment)"
"RTN","FBAAPIN",64,0)
 ;W !,"SVC DATE"," CPT-MOD ","   AMT CLAIMED",?35,"AMT PAID",?47,"CODE",?57,"BATCH NO.",?67,"VOUCHER DATE",!,?5,"Other Suspension Description",!,$$REPEAT^XLFSTR("=",79),!
"RTN","FBAAPIN",65,0)
 W !,"PATIENT",?33,"SVC DATE",?43,"CPT-MOD",?51,"/REV",?57,"BATCH NO.",?67,"VOUCHER DATE"
"RTN","FBAAPIN",66,0)
 W !,?3,"FPPS LINE",?14,"AMT CLAIMED",?26,"AMT PAID",?36,"UNITS",?43,"ADJ CODE",?53,"ADJ AMT",?69,"REMIT RMK"
"RTN","FBAAPIN",67,0)
 W !,$$REPEAT^XLFSTR("=",79)
"RTN","FBAAPIN",68,0)
 Q
"RTN","FBAAPIN",69,0)
Q K D,N,V,D2,J,K,L,M,DIC,T,FBYY,Q,I,A1,A2,A3,C,DIYS,FBAACPT,FBAAIN,FBAAOUT,FBBN,FBINTOT,FBINDAT,FBSW,FBHDONE,HX,S,VP,Z,ZS,FBHED,FBFILE,DIRUT,FBY,FBMOD
"RTN","FBAAPIN",70,0)
 K FBMODLE
"RTN","FBAAPIN",71,0)
 K FBAARCE,FBADJLA,FBADJLR,FBCSID,FBFPPSC,FBFPPSL,FBRRMKL,FBUNITS,TAMT
"RTN","FBAAPIN",72,0)
 Q
"RTN","FBAAPIN",73,0)
ERR W !,*7,"Please enter a whole number! Alpha characters and puctuation are invalid" G RD1
"RTN","FBAAPIN",74,0)
SETHD S V=$S($D(^FBAAV(K,0)):$P(^(0),"^",1),1:"") D INDAT:FBSW S FBHDONE=1 Q
"RTN","FBAAPIN",75,0)
MMORE S FBSW=1 F K=0:0 S K=$O(^FBAAC("C",FBAAIN,J,K)) Q:K=""!(FBAAOUT)  D SETHD F L=0:0 S L=$O(^FBAAC("C",FBAAIN,J,K,L)) Q:L=""!(FBAAOUT)  F M=0:0 S M=$O(^FBAAC("C",FBAAIN,J,K,L,M)) Q:M'>0  D SET Q:FBAAOUT
"RTN","FBAAPIN",76,0)
 Q
"RTN","FBAAPIN",77,0)
INDAT S L=$O(^FBAAC("C",FBAAIN,J,K,"")),M=$O(^FBAAC("C",FBAAIN,J,K,L,""))
"RTN","FBAAPIN",78,0)
 S FBINDAT=$P($G(^FBAAC(J,1,K,1,L,1,M,0)),"^",15)
"RTN","FBAAPIN",79,0)
 S FBINDAT=$S(FBINDAT="":"Unknown",1:$E(FBINDAT,4,5)_"/"_$E(FBINDAT,6,7)_"/"_$E(FBINDAT,2,3))
"RTN","FBAAPIN",80,0)
 S FBFPPSC=$P($G(^FBAAC(J,1,K,1,L,1,M,3)),U,1)
"RTN","FBAAPIN",81,0)
 S FBCSID=$P($G(^FBAAC(J,1,K,1,L,1,M,2)),U,16)
"RTN","FBAAPIN",82,0)
 S FBSW=0 K L,M Q
"RTN","FBAAPIN",83,0)
 Q
"RTN","FBAAPP")
0^28^B26126548
"RTN","FBAAPP",1,0)
FBAAPP ;AISC/GRR-ENTER FEE PHARMACY DETERMINATION ;7/9/03
"RTN","FBAAPP",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBAAPP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPP",4,0)
 N FBADJ,FBRRMK
"RTN","FBAAPP",5,0)
 D HOME^%ZIS S FBAAOUT=0 K ^TMP($J,"FBWP") D DT^DICRW
"RTN","FBAAPP",6,0)
 I '$D(^FBAA(162.1,"AC",1)) W !!,"There are no Fee Basis prescriptions Pending Pharmacy review" G END
"RTN","FBAAPP",7,0)
 D WAIT^DICD S (CNT,L,M)=0 F  S L=$O(^FBAA(162.1,"AC",1,L)) Q:L'>0  I $D(^FBAA(162.1,L,"RX","AC",1)) F  S M=$O(^FBAA(162.1,L,"RX","AC",1,M)) Q:M'>0  S CNT=CNT+1
"RTN","FBAAPP",8,0)
 W !!,*7,"There are ",CNT," Fee Prescription(s) Pending Pharmacy review"
"RTN","FBAAPP",9,0)
ASKRV Q:CNT'>0  W ! S DIR("A")="Want to review some now",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G END:$D(DIRUT)!('Y)
"RTN","FBAAPP",10,0)
RDIN W ! S FBAAOUT=0,DIC="^FBAA(162.1,",DIC(0)="AEQ",DIC("S")="S ZZ=^(0) I $P(ZZ,U,5)=1&($D(^FBAA(162.1,+ZZ,""RX"",""AC"",1))) K ZZ" D ^DIC K DIC G END:X=""!(X="^"),HELPI^FBAAPP0:X["?" S FBJ=+Y
"RTN","FBAAPP",11,0)
 L +^FBAA(162.1,"AC",1,FBJ):1 G:'$T ALRDY^FBAAPP0 I $D(^FBAA(162.1,FBJ,"RX","AC",1)) S FBK=0 F  S FBK=$O(^FBAA(162.1,FBJ,"RX","AC",1,FBK)) Q:FBK'>0!(FBAAOUT)  I $D(^FBAA(162.1,FBJ,"RX",FBK,0)) S FBY(0)=^(0) D GOT,CHK:$D(^FBAA(162.1,"AC",1))
"RTN","FBAAPP",12,0)
 L -^FBAA(162.1,"AC",1,FBJ) I '$D(^FBAA(162.1,"AC",1)) W !,*7,"No more prescriptions pending review!" G END
"RTN","FBAAPP",13,0)
 G RDIN
"RTN","FBAAPP",14,0)
END K DFN,FBJ,FBK,Y,X,FBAAOUT,L,CNT,STAT,DA,DAT,DIC,FBAAGP,FBAAPR,FBDX,FDT,SSN,HY,I,T,VIFN,Z,ZZ,VAL,FBAASC,M,W,FBY,FBASSOC,FB583,FB7078,FBPROG,FBTYPE,FBDMRA,FBAUT,^TMP($J,"FBWP")
"RTN","FBAAPP",15,0)
 K FBNO1,FBNO2,FBDA,FBDRUG
"RTN","FBAAPP",16,0)
 Q
"RTN","FBAAPP",17,0)
GOT S STAT=2,DFN=$P(FBY(0),"^",5) Q:'$D(^DPT(+DFN,0))
"RTN","FBAAPP",18,0)
 S FBPROG=$P($G(^FBAA(162.1,FBJ,"RX",FBK,2)),"^",7),FBPROG=$S(FBPROG:"I FBI="_FBPROG,1:"")
"RTN","FBAAPP",19,0)
 S HY=Y,PI="" D ^FBAADEM
"RTN","FBAAPP",20,0)
 D FBPH^FBAAUTL2 W ! F X=1:1:IOM-1 W "-"
"RTN","FBAAPP",21,0)
 I $Y+5>IOSL,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR Q:'Y  W @IOF
"RTN","FBAAPP",22,0)
 S Y=HY,VIFN=$P(^FBAA(162.1,FBJ,0),"^",4)
"RTN","FBAAPP",23,0)
 W !!,"Vendor: ",$P($G(^FBAAV(+VIFN,0)),"^"),!
"RTN","FBAAPP",24,0)
 I $P(FBY(0),"^",20)="R" W *7,!?20,">> PATIENT REIMBURSEMENT <<",!
"RTN","FBAAPP",25,0)
 S FDT=$P(FBY(0),"^",3) W !,"Prescription #: ",$P(FBY(0),"^"),"    Drug: ",$P(FBY(0),"^",2),!!,"Fill Date: ",$E(FDT,4,5),"/",$E(FDT,6,7),"/",$E(FDT,2,3),"    Strength: ",$P(FBY(0),"^",12)
"RTN","FBAAPP",26,0)
 W "  Qty: ",$P(FBY(0),"^",13)
"RTN","FBAAPP",27,0)
DIR ; DISPLAY FOR PHARMACY EDIT
"RTN","FBAAPP",28,0)
 S (FBAAGP,FBNO1,FBNO2)="Yes",FBAAPR="" K FBADJ,FBRRMK
"RTN","FBAAPP",29,0)
 I '$D(IOM) D HOME^%ZIS
"RTN","FBAAPP",30,0)
DIR1 S DIR("A")="Is Prescription for an Authorized Condition",DIR("B")=FBNO1,DIR(0)="Y",DIR("?")="A 'No' answer will deny payment." D ^DIR K DIR Q:$D(DIRUT)  I 'Y S FBNO1="No" S (FBNO2,FBAAGP)="" D NO1^FBAAPP0 Q:'$D(FBADJ)  G REVIEW
"RTN","FBAAPP",31,0)
 S:FBAAGP]"" DIR("B")=FBAAGP S DIR("A")="Was a Generic Drug issued to patient",DIR(0)="Y",DIR("?")="A 'No' answer alerts FEE to pay the generic equivalent, if one exists." D ^DIR K DIR Q:$D(DIRUT)  S:'Y FBAAGP="No"
"RTN","FBAAPP",32,0)
 S DIR("A")="Enter VA Generic Drug equivalent",DIR("?")="Match the drug entered by FEE to an entry in the VA Drug file.",DIR(0)="P^50:EM" D ^DIR K DIR Q:$D(DIRUT)!('Y)  S FBDA=+Y,FBDRUG=$P(Y,"^",2)
"RTN","FBAAPP",33,0)
 S:FBNO2]"" DIR("B")=FBNO2 S DIR("A")="Is this an emergency medication",DIR("?")="A 'No' answer will DENY payment.",DIR(0)="Y" D ^DIR K DIR Q:$D(DIRUT)  I 'Y S FBNO2="No" D NO1^FBAAPP0 Q:'$D(FBADJ)
"RTN","FBAAPP",34,0)
REVIEW W ! S:FBAAPR]"" DIR("B")=FBAAPR S DIR("A")="Optional Pharmacy Remarks ",DIR(0)="162.11,22" D ^DIR K DIR Q:$D(DUOUT)!($D(DTOUT))  S FBAAPR=Y
"RTN","FBAAPP",35,0)
 W ! F I=1:1:IOM-2 W "-"
"RTN","FBAAPP",36,0)
 W !!?22,">>>  PRESCRIPTION REVIEW  <<<",!
"RTN","FBAAPP",37,0)
 W !,"Rx for Authorized condition: ",$S(FBNO1="No":"No",1:"Yes")
"RTN","FBAAPP",38,0)
 W ?36,"Emergency Medication: ",$S(FBNO2="":"",FBNO2="No":"No",1:"Yes")
"RTN","FBAAPP",39,0)
 W !,"Generic Drug Issued: ",$S('$D(FBAAGP):"",1:FBAAGP)
"RTN","FBAAPP",40,0)
 W ?36,"Generic Drug Name: ",$S($D(FBDRUG):$E(FBDRUG,1,25),1:"")
"RTN","FBAAPP",41,0)
 I $D(FBADJ) D
"RTN","FBAAPP",42,0)
 . N FBI
"RTN","FBAAPP",43,0)
 . W !!,"Current list of Adjustments: "
"RTN","FBAAPP",44,0)
 . I '$O(FBADJ(0)) W "none"
"RTN","FBAAPP",45,0)
 . S FBI=0 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBAAPP",46,0)
 . . W ?30,"Code: "
"RTN","FBAAPP",47,0)
 . . W:$P(FBADJ(FBI),U)]"" $P($G(^FB(161.91,$P(FBADJ(FBI),U),0)),U)
"RTN","FBAAPP",48,0)
 . . W ?44,"Group: "
"RTN","FBAAPP",49,0)
 . . W:$P(FBADJ(FBI),U,2)]"" $P($G(^FB(161.92,$P(FBADJ(FBI),U,2),0)),U)
"RTN","FBAAPP",50,0)
 . . W ?56,"Amount: "
"RTN","FBAAPP",51,0)
 . . W "$",$FN($P(FBADJ(FBI),U,3),"",2),!
"RTN","FBAAPP",52,0)
 . W !!,"Current list of Remittance Remarks: "
"RTN","FBAAPP",53,0)
 . I '$O(FBRRMK(0)) W "none"
"RTN","FBAAPP",54,0)
 . S FBI=0 F  S FBI=$O(FBRRMK(FBI)) Q:'FBI  D
"RTN","FBAAPP",55,0)
 . . W:$P(FBRRMK(FBI),U)]"" $P($G(^FB(161.93,$P(FBRRMK(FBI),U),0)),U),", "
"RTN","FBAAPP",56,0)
 W !!,"Optional Pharmacy Remarks: ",FBAAPR
"RTN","FBAAPP",57,0)
 W ! S DIR("A")="Want to edit prior to release",DIR(0)="Y",DIR("B")="No" D ^DIR K DIR Q:$D(DIRUT)  G DIR1:Y
"RTN","FBAAPP",58,0)
 I $D(FBADJ) G GOON^FBAAPP0
"RTN","FBAAPP",59,0)
 S $P(FBY(0),"^",10)=FBDA
"RTN","FBAAPP",60,0)
OVR S $P(FBY(0),"^",11)=1,$P(FBY(0),"^",14)=DUZ,$P(FBY(0),"^",15)=DT,$P(FBY(0),"^",9)=2
"RTN","FBAAPP",61,0)
 G RSET^FBAAPP0
"RTN","FBAAPP",62,0)
 ;
"RTN","FBAAPP",63,0)
CHK S FBAAOUT=0 W ! S DIR("A")="Want to review another Prescription",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR S:'Y FBAAOUT=1 K ^TMP($J,"FBWP")
"RTN","FBAAPP",64,0)
 Q
"RTN","FBAAPP0")
0^29^B4545088
"RTN","FBAAPP0",1,0)
FBAAPP0 ;AISC/GRR-ENTER FEE PHARMACY DETERMINATION CONT ;7/9/03
"RTN","FBAAPP0",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBAAPP0",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPP0",4,0)
HELPI W !!,"Enter Invoice number you wish to make a determination on.  Must",!,"be an invoice which is 'Pending Determination' status." G RDIN^FBAAPP
"RTN","FBAAPP0",5,0)
ALRDY W !,*7,"Someone is editing that invoice now!" G RDIN^FBAAPP
"RTN","FBAAPP0",6,0)
 ;
"RTN","FBAAPP0",7,0)
NO1 ;ASK PHARMACIST TO SELECT SUSPENSE CODE
"RTN","FBAAPP0",8,0)
 ;S FBAASC=""
"RTN","FBAAPP0",9,0)
 ;S DIR(0)="P^161.27:EQM",DIR("A")="Select Suspense Code" D ^DIR K DIR Q:$D(DIRUT)!(Y=-1)  S FBAASC=+Y D:FBAASC=4 SUSP
"RTN","FBAAPP0",10,0)
 N FBX
"RTN","FBAAPP0",11,0)
 ; prompt for adjustments
"RTN","FBAAPP0",12,0)
 S FBX=$$ADJ^FBUTL2($P(FBY(0),U,4),.FBADJ,2) Q:FBX=0
"RTN","FBAAPP0",13,0)
 ; prompt for remittance remarks
"RTN","FBAAPP0",14,0)
 S FBX=$$RR^FBUTL4(.FBRRMK,2) Q:FBX=0
"RTN","FBAAPP0",15,0)
 Q
"RTN","FBAAPP0",16,0)
SUSP ;ASK TO ENTER SUSPENSION DESCRIPTION
"RTN","FBAAPP0",17,0)
 ;I $D(^TMP($J,"FBWP",0)) G SUSP1
"RTN","FBAAPP0",18,0)
 ;I $D(^FBAA(162.1,FBJ,"RX",FBK,1)) S:$D(^(0)) ^TMP($J,"FBWP",0)=^(0) F FBI=1:1 Q:'$D(^FBAA(162.1,FBJ,"RX",FBK,1,FBI,0))  S ^TMP($J,"FBWP",FBI,0)=^(0)
"RTN","FBAAPP0",19,0)
SUSP1 ;S DIC="^TMP("_$J_",""FBWP"",",DWPK=1 W !,"Suspension Description" D EN^DIWE I '$O(^TMP($J,"FBWP",0)) W !!,*7,"Suspension description is required for a suspense code of 'OTHER'." G SUSP
"RTN","FBAAPP0",20,0)
 Q
"RTN","FBAAPP0",21,0)
 ;
"RTN","FBAAPP0",22,0)
GOON ;S ^FBAA(162.1,"AG",VIFN,DT,DFN,FBAASC,FBJ,FBK)=""
"RTN","FBAAPP0",23,0)
 S STAT=3,$P(FBY(0),"^",11)=0,$P(FBY(0),"^",14)=DUZ,$P(FBY(0),"^",15)=DT,$P(FBY(0),"^",9)=3,$P(FBY(0),"^",16)=0
"RTN","FBAAPP0",24,0)
RSET S $P(FBY(0),"^",21)=FBAAGP,$P(FBY(0),"^",22)=FBAAPR,^FBAA(162.1,FBJ,"RX",FBK,0)=FBY(0)
"RTN","FBAAPP0",25,0)
 K ^FBAA(162.1,FBJ,"RX","AC",1,FBK) S ^FBAA(162.1,FBJ,"RX","AC",STAT,FBK)="",$P(^FBAA(162.1,FBJ,0),"^",5)=$S($D(^FBAA(162.1,FBJ,"RX","AC",1)):1,$D(^(2)):2,$D(^(3)):3,1:0)
"RTN","FBAAPP0",26,0)
 I '$D(^FBAA(162.1,FBJ,"RX","AC",1)) K ^FBAA(162.1,"AC",1,FBJ) S ^FBAA(162.1,"AC",2,FBJ)=""
"RTN","FBAAPP0",27,0)
 ;I $O(^TMP($J,"FBWP",0)) S ^FBAA(162.1,FBJ,"RX",FBK,1,0)=^(0) F FBI=1:1 Q:'$D(^TMP($J,"FBWP",FBI,0))  S ^FBAA(162.1,FBJ,"RX",FBK,1,FBI,0)=^(0)
"RTN","FBAAPP0",28,0)
 I $D(FBADJ) D
"RTN","FBAAPP0",29,0)
 . D FILEADJ^FBRXFA(FBK_","_FBJ_",",.FBADJ) ; file adjustments
"RTN","FBAAPP0",30,0)
 . D FILERR^FBRXFR(FBK_","_FBJ_",",.FBRRMK) ; file remittance remarks
"RTN","FBAAPP0",31,0)
 Q
"RTN","FBAAPPH")
0^42^B17311518
"RTN","FBAAPPH",1,0)
FBAAPPH ;AISC/GRR-PHARMACY HISTORY LIST FOR PATIENT ;7/17/2003
"RTN","FBAAPPH",2,0)
 ;;3.5;FEE BASIS;**12,61**;JAN 30, 1995
"RTN","FBAAPPH",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAPPH",4,0)
 D DT^DICRW S FBAAOUT=0
"RTN","FBAAPPH",5,0)
RD K FBAANQ W !! S FBAAOUT=0,DIC="^FBAAA(",DIC(0)="AEQM" D ^DIC G Q:X=""!(X="^"),RD:Y<0 S DFN=+Y
"RTN","FBAAPPH",6,0)
 I '$D(^FBAA(162.1,"AD",DFN)) W !!,*7,"No payments for this patient!" G RD
"RTN","FBAAPPH",7,0)
 S VAR="DFN",VAL=DFN,PGM="LIST^FBAAPPH" D ZIS^FBAAUTL G:FBPOP Q S:IO=IO(0) FBAANQ=1
"RTN","FBAAPPH",8,0)
LIST ; list prescriptions for patient (DFN)
"RTN","FBAAPPH",9,0)
 N FBADJLA,FBADJLR,FBFPPSC,FBFPPSL,FBRRMKL,FBSUSPA,FBX
"RTN","FBAAPPH",10,0)
 S Q="" S $P(Q,"=",80)="="
"RTN","FBAAPPH",11,0)
 S FSW=1 U IO I $E(IOST,1,2)="C-" W @IOF
"RTN","FBAAPPH",12,0)
 S (FBAAOUT,J,K,L)=0
"RTN","FBAAPPH",13,0)
 I '$O(^FBAA(162.1,"AD",DFN,0)) W !,"Patient has no Pharmacy payment history.",! Q
"RTN","FBAAPPH",14,0)
 F  S J=$O(^FBAA(162.1,"AD",DFN,J)) Q:J'>0!(FBAAOUT)  F  S K=$O(^FBAA(162.1,"AD",DFN,J,K)) Q:K'>0!(FBAAOUT)  F  S L=$O(^FBAA(162.1,"AD",DFN,J,K,L)) Q:L'>0!(FBAAOUT)  D GOT Q:FBAAOUT
"RTN","FBAAPPH",15,0)
 I FBAAOUT,$E(IOST,1,2)="C-" W @IOF
"RTN","FBAAPPH",16,0)
 G:$D(FBAANQ) RD
"RTN","FBAAPPH",17,0)
Q K DIC,DOB,J,K,L,DFN,FBAANQ,FBRX,FBFD,FBAC,FBAP,A1,A2,FBPV,FBSUSP,FBSTR,FBQTY,FBAAOUT,FSW,FID,CHN,FBBATCH,FBDRUG,FBINVN,FBPD,FBREIM,N,NAME,Q,FBSSN,VAL,VAR,VID,PGM,VNAM,X,Y,I,FBSAR,FBI
"RTN","FBAAPPH",18,0)
 W:$E(IOST,1,2)'="C-" @IOF D CLOSE^FBAAUTL Q
"RTN","FBAAPPH",19,0)
 ;
"RTN","FBAAPPH",20,0)
GOT S FBSSN=$$SSN^FBAAUTL(DFN),N=$G(^DPT(+DFN,0)),NAME=$P(N,"^"),DOB=$P(N,"^",3),DOB=$S(DOB]"":$$FMTE^XLFDT(DOB),1:"")
"RTN","FBAAPPH",21,0)
 Q:'$D(^FBAA(162.1,K,0))&('$D(^FBAA(162.1,K,"RX",L,0)))
"RTN","FBAAPPH",22,0)
 S Y(0)=$G(^FBAA(162.1,K,"RX",L,0))
"RTN","FBAAPPH",23,0)
 S Y(2)=$G(^FBAA(162.1,+K,0))
"RTN","FBAAPPH",24,0)
 I $D(^FBAA(162.1,K,"RX",L,2)) S Y(1)=^(2)
"RTN","FBAAPPH",25,0)
 S FBFPPSL=$P($G(^FBAA(162.1,K,"RX",L,3)),U)
"RTN","FBAAPPH",26,0)
 S FBX=$$ADJLRA^FBRXFA(L_","_K_",")
"RTN","FBAAPPH",27,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBAAPPH",28,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBAAPPH",29,0)
 S FBRRMKL=$$RRL^FBRXFR(L_","_K_",")
"RTN","FBAAPPH",30,0)
 S FBINVN=$P(Y(2),"^"),VID=$P(Y(2),"^",4),CHN=$G(^FBAAV(+VID,0)),VNAM=$P(CHN,"^"),FID=$P(CHN,"^",2),CHN=$P(CHN,"^",10)
"RTN","FBAAPPH",31,0)
 S FBFPPSC=$P(Y(2),U,13)
"RTN","FBAAPPH",32,0)
 S FBRX=$P(Y(0),"^",1),FBDRUG=$P(Y(0),"^",2),FBFD=$P(Y(0),"^",3),FBAC=$P(Y(0),"^",4),FBAP=$P(Y(0),"^",16),FBSUSP=$P(Y(0),"^",8),FBPD=$P(Y(0),"^",19),FBBATCH=$P(Y(0),"^",17),FBBATCH=$P($G(^FBAA(161.7,+FBBATCH,0)),"^")
"RTN","FBAAPPH",33,0)
 S FBSUSPA=$FN($P(Y(0),U,7),"",2)
"RTN","FBAAPPH",34,0)
 I FBSUSP=4,FBADJLR="" S FBI=0 F  S FBI=$O(^FBAA(162.1,K,"RX",L,1,FBI)) Q:'FBI  S FBSAR(FBI)=^(FBI,0)
"RTN","FBAAPPH",35,0)
 I FBSUSP]"" S FBSUSP=$P($G(^FBAA(161.27,+FBSUSP,0)),"^")
"RTN","FBAAPPH",36,0)
 S FBREIM=$S($P(Y(0),"^",20)="R":"*",1:""),FBSTR=$P(Y(0),"^",12),FBQTY=$P(Y(0),"^",13),A1=FBAC+.00001,A2=FBAP+.00001,A1=$P(A1,".",1)_"."_$E($P(A1,".",2),1,2),A2=$P(A2,".",1)_"."_$E($P(A2,".",2),1,2),FBPV=""
"RTN","FBAAPPH",37,0)
 I $D(Y(1)) S FBPV=$S($P(Y(1),"^",3)="V":"#",1:"")
"RTN","FBAAPPH",38,0)
 D FBCKP^FBAACCB1(K,L)
"RTN","FBAAPPH",39,0)
WRT I FSW S FSW=0 D HED
"RTN","FBAAPPH",40,0)
 I $E(IOST,1,2)="C-",$Y+7>IOSL S DIR(0)="E" D ^DIR K DIR S:'Y FBAAOUT=1 Q:FBAAOUT  W @IOF D HED
"RTN","FBAAPPH",41,0)
 I $Y+6>IOSL W @IOF D HED
"RTN","FBAAPPH",42,0)
 W !!,VNAM,?48,FID,?60,CHN
"RTN","FBAAPPH",43,0)
 W !,FBREIM,FBPV,?3,$E(FBFD,4,5),"/",$E(FBFD,6,7),"/",$E(FBFD,2,3),?64,$S(FBPD="":"",1:$E(FBPD,4,5)_"/"_$E(FBPD,6,7)_"/"_$E(FBPD,2,3))
"RTN","FBAAPPH",44,0)
 W !," Rx: "_FBRX,?15,FBDRUG,?45,FBSTR,?63,FBQTY
"RTN","FBAAPPH",45,0)
 W !,?4,$J(A1,6),?13,$J(A2,6)
"RTN","FBAAPPH",46,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBAAPPH",47,0)
 W ?22,$S(FBADJLR]"":FBADJLR,1:FBSUSP)
"RTN","FBAAPPH",48,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBAAPPH",49,0)
 W ?32,$S(FBADJLA]"":FBADJLA,1:FBSUSPA)
"RTN","FBAAPPH",50,0)
 W ?47,FBINVN,?58,FBBATCH,?67,FBRRMKL
"RTN","FBAAPPH",51,0)
 I FBFPPSC]"" W !,?5,"FPPS Claim ID: ",FBFPPSC,"   FPPS Line Item: ",FBFPPSL
"RTN","FBAAPPH",52,0)
 I $D(FBSAR) W !?5,"Suspension Description: " S FBI=0 F  S FBI=$O(FBSAR(FBI)) Q:'FBI  W " ",FBSAR(FBI)
"RTN","FBAAPPH",53,0)
 D PMNT^FBAACCB2
"RTN","FBAAPPH",54,0)
 K FBSAR Q
"RTN","FBAAPPH",55,0)
HED W:$E(IOST,1,2)'="C-" !?25,"PHARMACY PAYMENT HISTORY",!?24,$E(Q,1,26)
"RTN","FBAAPPH",56,0)
 W !,"Patient: ",NAME,?41,"Pt ID: ",FBSSN,?60,"DOB: ",DOB
"RTN","FBAAPPH",57,0)
 W !,"('*' Reimbursement to Patient   '+' Cancellation Activity)   '#' Voided Payment)"
"RTN","FBAAPPH",58,0)
 W !,"Vendor Name",?48,"ID #",?60,"Chain #"
"RTN","FBAAPPH",59,0)
 W !,?3,"Fill Date",?64,"Date Certified"
"RTN","FBAAPPH",60,0)
 W !,?15,"Drug Name",?43,"Strength",?61,"Quantity"
"RTN","FBAAPPH",61,0)
 W !,?3,"Claimed",?15,"Paid",?22,"Adj Code",?32,"Adj Amount",?47,"Invoice #",?58,"Batch #",?67,"Remit Remark"
"RTN","FBAAPPH",62,0)
 W !,Q
"RTN","FBAAPPH",63,0)
 Q
"RTN","FBAARR")
0^35^B32814537
"RTN","FBAARR",1,0)
FBAARR ;AISC/GRR-RE-INITIATE REJECTED LINE ITEMS ;9/9/2003
"RTN","FBAARR",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBAARR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAARR",4,0)
 N FBILM
"RTN","FBAARR",5,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBAARR",6,0)
 S Q="",$P(Q,"=",80)="=",UL="",$P(UL,"-",80)="-",(FBAAOUT,CNT,FBINTOT)=0
"RTN","FBAARR",7,0)
 D DT^DICRW
"RTN","FBAARR",8,0)
BT K QQ W !!
"RTN","FBAARR",9,0)
 S DIC="^FBAA(161.7,",DIC(0)="AEQMN",DIC("A")="Select Batch with Rejects: ",DIC("S")="I $G(^(""ST""))=""V""&($P(^(0),U,17)]"""")" D ^DIC K DIC("S"),DIC("A") G Q:X="^"!(X=""),BT:Y<0 S FBN=+Y,B=FBN,FZ=^FBAA(161.7,FBN,0),FBTYPE=$P(FZ,"^",3)
"RTN","FBAARR",10,0)
 S FBOB=$P(FZ,"^",2),FBEXMPT=$S($P(FZ,"^",18)]"":$P(FZ,"^",18),1:"N")
"RTN","FBAARR",11,0)
 I '$S(FBTYPE="B3":$D(^FBAAC("AH",B)),FBTYPE="B2":$D(^FBAAC("AG",B)),FBTYPE="B5":$D(^FBAA(162.1,"AF",B)),FBTYPE="B9":$D(^FBAAI("AH",B)),1:0) W !!,*7,"No items rejected in this batch!" D  G BT
"RTN","FBAARR",12,0)
 .S $P(^FBAA(161.7,B,0),U,17)=""
"RTN","FBAARR",13,0)
 I FBTYPE="B9",$P(FZ,"^",15)="Y" D NEWBT^FBAARR0 G ASKLL
"RTN","FBAARR",14,0)
BTN W !! S DIC("A")="Select New Batch number: ",DIC("S")="I $P(^(0),U,3)=FBTYPE&($P(^(0),U,5)=DUZ)&($G(^(""ST""))=""O"")" D ^DIC K DIC("A"),DIC("S") G BT:X=""!(X="^"),HELP^FBAARR0:X["?",BTN:Y<0 S FBNB=+Y
"RTN","FBAARR",15,0)
 D BATCNT^FBAARR1 I '$D(FBNB) D KILL^FBAARR1 G BT
"RTN","FBAARR",16,0)
 S FBNUM=$P(^FBAA(161.7,B,0),"^",1),FBVD=$P(^(0),"^",12),FBVDUZ=$P(^(0),"^",16),FBNOB=$P(^FBAA(161.7,FBNB,0),"^",2) G:FBNOB'=FBOB CHKOB^FBAARR0
"RTN","FBAARR",17,0)
ASKLL S B=FBN,FBNNP=1 S DIR(0)="Y",DIR("A")="Want line items listed",DIR("B")="NO" D ^DIR K DIR W:Y @IOF D:Y MORE^FBAARJP:FBTYPE="B3",PMORE^FBAARJP:FBTYPE="B5",TMORE^FBAARJP:FBTYPE="B2",CMORE^FBAARJP:FBTYPE="B9" K FBNNP
"RTN","FBAARR",18,0)
RD0 S DIR(0)="Y",DIR("A")="Want to re-initiate all rejected items in the Batch",DIR("B")="NO",DIR("?")="'Yes' will re-initiate all rejected payment items for this batch, 'No' will prompt for re-initiation of specific line items"
"RTN","FBAARR",19,0)
 D ^DIR K DIR G:Y ^FBAARR1
"RTN","FBAARR",20,0)
RD1 S DIR(0)="Y",DIR("A")="Want to re-initiate any line items",DIR("B")="NO" D ^DIR K DIR Q:$D(DIRUT)!'Y  D DELT^FBAARR2:FBTYPE="B2",DELM:FBTYPE="B3",DELP^FBAARR2:FBTYPE="B5",DELC^FBAARR0:FBTYPE="B9"
"RTN","FBAARR",21,0)
RDD ;
"RTN","FBAARR",22,0)
FIN S $P(FZ,"^",12)=DT,$P(FZ,"^",16)=DUZ,^FBAA(161.7,FBN,0)=FZ,^FBAA(161.7,FBN,"ST")="V",^FBAA(161.7,"AC","V",FBN)="",^FBAA(161.7,"AF",DT,FBN)="" K ^FBAA(161.7,"AC","T",FBN)
"RTN","FBAARR",23,0)
 S DIC="^FBAA(161.7,",DA=FBN,DR="0;ST" W !! D EN^DIQ G BT
"RTN","FBAARR",24,0)
Q D KILL^FBAARR1
"RTN","FBAARR",25,0)
 Q
"RTN","FBAARR",26,0)
GET W !! S DIC="^FBAAA(",DIC(0)="AEQ" D ^DIC G RDD:X="^"!(X=""),GET:Y<0 S DA=+Y,J=DA Q
"RTN","FBAARR",27,0)
DELM K QQ W !! S DIC="^FBAAA(",DIC(0)="AEQM" D ^DIC G END:X="^"!(X=""),DELM:Y<0 S DA=+Y,J=DA I '$D(^FBAAC("AH",B,J)) W !!,*7,"No payments in this batch for that patient!" G DELM
"RTN","FBAARR",28,0)
 S QQ=0 W @IOF D HED^FBAACCB
"RTN","FBAARR",29,0)
 F K=0:0 S K=$O(^FBAAC("AH",B,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AH",B,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AH",B,J,K,L,M)) Q:M'>0  D WRITM
"RTN","FBAARR",30,0)
RL S ERR=0 S DIR(0)="N^1:"_QQ,DIR("A")="Re-initiate which line item" D ^DIR K DIR G:$D(DIRUT) END S HX=X
"RTN","FBAARR",31,0)
 I '$D(QQ(HX)) W !,*7,"You already did that one!!" G RL
"RTN","FBAARR",32,0)
ASKSU S DIR(0)="Y",DIR("A")="Are you sure you want to re-initiate line item number "_HX,DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!'Y RL
"RTN","FBAARR",33,0)
 S J=$P(QQ(HX),"^",1),K=$P(QQ(HX),"^",2),L=$P(QQ(HX),"^",3),M=$P(QQ(HX),"^",4)
"RTN","FBAARR",34,0)
STUFF I $P(^FBAAC(J,1,K,1,L,1,M,0),"^",21)="VP" S FBIN=+$P(^(0),"^",16) D VOID^FBAARR1 G END
"RTN","FBAARR",35,0)
 S $P(^FBAAC(J,1,K,1,L,1,M,0),"^",8)=FBNB,FBAAAP=+$P(^(0),"^",3),FBIN=+$P(^(0),"^",16)
"RTN","FBAARR",36,0)
 S ^FBAAC("AC",FBNB,J,K,L,M)="",^FBAAC("AJ",FBNB,FBIN,J,K,L,M)="" K ^FBAAC("AH",B,J,K,L,M)
"RTN","FBAARR",37,0)
 S $P(^FBAA(161.7,FBNB,0),"^",9)=($P(^FBAA(161.7,FBNB,0),"^",9)+FBAAAP),$P(^(0),"^",11)=($P(^(0),"^",11)+1) K ^FBAAC(J,1,K,1,L,1,M,"FBREJ")
"RTN","FBAARR",38,0)
 ; update list of invoice lines that were moved to the new batch
"RTN","FBAARR",39,0)
 S FBILM(FBIN,M_","_L_","_K_","_J_",")=""
"RTN","FBAARR",40,0)
ASKRI S DIR(0)="Y",DIR("A")=$S($G(FBERR):"",1:"Item Re-initiated.  ")_"Want to re-initiate another",DIR("B")="YES" D ^DIR K DIR G ASKRI:$D(DIRUT),DELM:Y,END
"RTN","FBAARR",41,0)
WRITM S QQ=QQ+1,QQ(QQ)=J_"^"_K_"^"_L_"^"_M D SET^FBAACCB Q
"RTN","FBAARR",42,0)
END I '$D(^FBAAC("AH",B)) S $P(^FBAA(161.7,B,0),"^",17)=""
"RTN","FBAARR",43,0)
 ; Assign new invoice number to moved lines if invoice was split
"RTN","FBAARR",44,0)
 I $$CKSPLIT(B,.FBILM) S DIR(0)="E" D ^DIR K DIR
"RTN","FBAARR",45,0)
 Q
"RTN","FBAARR",46,0)
CKSPLIT(B,FBILM) ; Check for/Update split invoice
"RTN","FBAARR",47,0)
 ; Input
"RTN","FBAARR",48,0)
 ;   B      - ien of original batch before item moved
"RTN","FBAARR",49,0)
 ;   FBILM( - array of invoice lines that were moved to a new batch
"RTN","FBAARR",50,0)
 ;     passed by reference
"RTN","FBAARR",51,0)
 ;     format FBILM(invoice number,iens)=""
"RTN","FBAARR",52,0)
 ;     where
"RTN","FBAARR",53,0)
 ;       invoice number = invoice number
"RTN","FBAARR",54,0)
 ;       iens           = iens of subfile 162.03 (a line item)
"RTN","FBAARR",55,0)
 ; Result (0 or 1)
"RTN","FBAARR",56,0)
 ;   =0 if no lines were assigned a new invoice number
"RTN","FBAARR",57,0)
 ;   =1 if some lines assigned a new invoice number
"RTN","FBAARR",58,0)
 ;   May change invoice number of line items in subfile 162.03
"RTN","FBAARR",59,0)
 ;   and inform user
"RTN","FBAARR",60,0)
 N FBAAIN,FBFDA,FBIENS,FBIN,FBINL,FBJ,FBK,FBL,FBM,FBRET,FBSPLT
"RTN","FBAARR",61,0)
 S FBRET=0
"RTN","FBAARR",62,0)
 ; loop thru invoice numbers in input array
"RTN","FBAARR",63,0)
 S FBIN="" F  S FBIN=$O(FBILM(FBIN)) Q:FBIN=""  D
"RTN","FBAARR",64,0)
 . S FBSPLT=0 ; initialize split flag to false
"RTN","FBAARR",65,0)
 . ; check if any unrejected invoice lines still in original batch
"RTN","FBAARR",66,0)
 . I $D(^FBAAC("AJ",B,FBIN)) S FBSPLT=1
"RTN","FBAARR",67,0)
 . ; check if any rejected invoice lines still in original batch
"RTN","FBAARR",68,0)
 . I 'FBSPLT S FBJ=0 F  S FBJ=$O(^FBAAC("AH",B,FBJ)) Q:'FBJ  D  Q:FBSPLT
"RTN","FBAARR",69,0)
 . . S FBK=0
"RTN","FBAARR",70,0)
 . . F  S FBK=$O(^FBAAC("AH",B,FBJ,FBK)) Q:'FBK  D  Q:FBSPLT
"RTN","FBAARR",71,0)
 . . . S FBL=0
"RTN","FBAARR",72,0)
 . . . F  S FBL=$O(^FBAAC("AH",B,FBJ,FBK,FBL)) Q:'FBL  D  Q:FBSPLT
"RTN","FBAARR",73,0)
 . . . . S FBM=0
"RTN","FBAARR",74,0)
 . . . . F  S FBM=$O(^FBAAC("AH",B,FBJ,FBK,FBL,FBM)) Q:'FBM  D  Q:FBSPLT
"RTN","FBAARR",75,0)
 . . . . . S FBINL=$P($G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,0)),U,16)
"RTN","FBAARR",76,0)
 . . . . . I FBINL=FBIN S FBSPLT=1
"RTN","FBAARR",77,0)
 . Q:FBSPLT=0  ; invoice was not split
"RTN","FBAARR",78,0)
 . S FBRET=1
"RTN","FBAARR",79,0)
 . ; assign new invoice number to lines moved to the new batch
"RTN","FBAARR",80,0)
 . ; get a new invoice number (FBAAIN)
"RTN","FBAARR",81,0)
 . D GETNXI^FBAAUTL
"RTN","FBAARR",82,0)
 . ; loop thru the moved line items and assign the new invoice number
"RTN","FBAARR",83,0)
 . K FBFDA
"RTN","FBAARR",84,0)
 . S FBIENS="" F  S FBIENS=$O(FBILM(FBIN,FBIENS)) Q:FBIENS=""  D
"RTN","FBAARR",85,0)
 . . S FBFDA(162.03,FBIENS,14)=FBAAIN
"RTN","FBAARR",86,0)
 . W !!,"FYI: Invoice ",FBIN," was split since entire invoice did not move to the new batch."
"RTN","FBAARR",87,0)
 . W !,"Re-initiated lines are being assigned a new invoice number of ",FBAAIN,"."
"RTN","FBAARR",88,0)
 . ; update the file
"RTN","FBAARR",89,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA"),MSG^DIALOG()
"RTN","FBAARR",90,0)
 Q FBRET
"RTN","FBAARR",91,0)
 ;
"RTN","FBAARR",92,0)
 ;FBAARR
"RTN","FBAARR1")
0^36^B21041788
"RTN","FBAARR1",1,0)
FBAARR1 ;AISC/GRR-FEE BASIS RE-INITIATE ENTIRE BATCH ;7/12/2003
"RTN","FBAARR1",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBAARR1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAARR1",4,0)
RD S DIR(0)="Y",DIR("A")="Are you sure you want to re-initiate all line items in this batch",DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT)!'Y RD1^FBAARR
"RTN","FBAARR1",5,0)
 S FZ=^FBAA(161.7,FBNB,0) D WAIT^DICD,ALLM:FBTYPE="B3",ALLT:FBTYPE="B2",ALLP:FBTYPE="B5",ALLC:FBTYPE="B9"
"RTN","FBAARR1",6,0)
 K FBRJV G BT^FBAARR
"RTN","FBAARR1",7,0)
ALLM ; re-initiate all rejected line items in medical (B3) type batch
"RTN","FBAARR1",8,0)
 K FBILM
"RTN","FBAARR1",9,0)
 S (TM1,TM2)=0 F J=0:0 S J=$O(^FBAAC("AH",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AH",B,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AH",B,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AH",B,J,K,L,M)) Q:M'>0  D REJM
"RTN","FBAARR1",10,0)
 ; Assign new invoice number to moved lines if medical invoice was split
"RTN","FBAARR1",11,0)
 I $$CKSPLIT^FBAARR(B,.FBILM) S DIR(0)="E" D ^DIR K DIR
"RTN","FBAARR1",12,0)
ADONE S $P(FZ,"^",9)=($P(FZ,"^",9)+TM1),$P(FZ,"^",11)=($P(FZ,"^",11)+TM2),^FBAA(161.7,FBNB,0)=FZ I '$G(FBRJV) S $P(^FBAA(161.7,B,0),"^",17)="" W !!,"All rejected items have been re-initiated!" Q
"RTN","FBAARR1",13,0)
 I $G(FBRJV) W !!,"All rejected items (except for voided payments) have been re-initiated!" Q
"RTN","FBAARR1",14,0)
REJM I $P(^FBAAC(J,1,K,1,L,1,M,0),"^",21)="VP" S FBIN=+$P(^(0),"^",16) D VOID S FBRJV=1 Q
"RTN","FBAARR1",15,0)
 S $P(^FBAAC(J,1,K,1,L,1,M,0),"^",8)=FBNB,FBIN=+$P(^(0),"^",16),^FBAAC("AC",FBNB,J,K,L,M)="" K ^FBAAC("AH",B,J,K,L,M),^FBAAC(J,1,K,1,L,1,M,"FBREJ")
"RTN","FBAARR1",16,0)
 ; update list of invoice lines that were moved to the new batch
"RTN","FBAARR1",17,0)
 S FBILM(FBIN,M_","_L_","_K_","_J_",")=""
"RTN","FBAARR1",18,0)
 S TM1=TM1+$P(^FBAAC(J,1,K,1,L,1,M,0),"^",3),TM2=TM2+1
"RTN","FBAARR1",19,0)
 S ^FBAAC("AJ",FBNB,FBIN,J,K,L,M)="" Q
"RTN","FBAARR1",20,0)
ALLT S (TM1,TM2)=0 F J=0:0 S J=$O(^FBAAC("AG",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("AG",B,J,K)) Q:K'>0  D REJT
"RTN","FBAARR1",21,0)
 G ADONE
"RTN","FBAARR1",22,0)
REJT ;SETUP REJECT FIELDS FOR TRAVEL
"RTN","FBAARR1",23,0)
 S $P(^FBAAC(J,3,K,0),"^",2)=FBNB K ^FBAAC("AG",B,J,K) S ^FBAAC("AD",FBNB,J,K)="" K ^FBAAC(J,3,K,"FBREJ") S TM1=TM1+$P(^FBAAC(J,3,K,0),"^",3),TM2=TM2+1
"RTN","FBAARR1",24,0)
 Q
"RTN","FBAARR1",25,0)
ALLP S (TM1,TM2)=0 F J=0:0 S J=$O(^FBAA(162.1,"AF",B,J)) Q:J'>0  F K=0:0 S K=$O(^FBAA(162.1,"AF",B,J,K)) Q:K'>0  D REJP
"RTN","FBAARR1",26,0)
 G ADONE
"RTN","FBAARR1",27,0)
REJP I $P($G(^FBAA(162.1,J,"RX",K,2)),"^",3)="V" S FBIN=J D VOID S FBRJV=1 Q
"RTN","FBAARR1",28,0)
 S FBPID=$P(^FBAA(162.1,J,"RX",K,0),"^",5),$P(^(0),"^",17)=FBNB,TM1=TM1+$P(^(0),"^",16),^FBAA(162.1,"AE",FBNB,J,K)="",^FBAA(162.1,"AJ",FBNB,FBPID,J,K)="",TM2=TM2+1 K ^FBAA(162.1,"AF",B,J,K),^FBAA(162.1,J,"RX",K,"FBREJ")
"RTN","FBAARR1",29,0)
 Q
"RTN","FBAARR1",30,0)
ALLC S (TM1,TM2,TM3)=0 F J=0:0 S J=$O(^FBAAI("AH",B,J)) Q:J'>0  I $D(^FBAAI(J,0)) D REJC
"RTN","FBAARR1",31,0)
 S $P(FZ,"^",10)=$P(FZ,"^",10)+TM3 G ADONE
"RTN","FBAARR1",32,0)
REJC I $P(^FBAAI(J,0),"^",14)="VP" S FBIN=J D VOID S FBRJV=1 Q
"RTN","FBAARR1",33,0)
 S $P(^FBAAI(J,0),"^",17)=FBNB,$P(^(0),"^",16)="",^FBAAI("AC",FBNB,J)="",^FBAAI("AE",FBNB,$P(^FBAAI(J,0),"^",4),J)="" K ^FBAAI("AH",B,J),^FBAAI(J,"FBREJ") S TM1=TM1+$P(^FBAAI(J,0),"^",9),TM2=TM2+1,TM3=TM3+1 Q
"RTN","FBAARR1",34,0)
 Q
"RTN","FBAARR1",35,0)
KILL K A,A1,A2,B,CPTDESC,D0,DA,FBAACPT,FBAAOUT,FBVP,J,K,L,M,X,Y,Z,DIC,ERR,FBIN,FBNB,FBNUM,FBPV,FBRR,FBTYPE,FBVD,FBVDUZ,FZ,I,POP,DR,IOP,V,VID,ZS,FBN,FBOB,FBNOB,CNT,Q,UL,VAL,FBINTOT,PRCS,PRCSI,FBFDC,FBMST,FBTTYPE,FBSTN,FBDCB,FBBN
"RTN","FBAARR1",36,0)
 K FBAAAP,FBAC,FBAP,FBDX,FBFD,FBK,FBL,FBPDT,FBPROC,FBSC,FBINOLD,FBTD,TM1,TM2,TM3,N,S,FBCNT,FBNBCNT,I,DIRUT,FBEXMPT
"RTN","FBAARR1",37,0)
 Q
"RTN","FBAARR1",38,0)
BATCNT ;GET NUMBER OF REJECTS IN OLD BATCH
"RTN","FBAARR1",39,0)
 S:'$D(FBAAMPI) FBAAMPI=$S($D(^FBAA(161.4,1,"FBNUM")):$P(^("FBNUM"),"^",3),1:100),FBAAMPI=$S(FBAAMPI]"":FBAAMPI,1:100)
"RTN","FBAARR1",40,0)
 Q:'$D(FBN)  S FBCNT=0
"RTN","FBAARR1",41,0)
 F I=0:0 S I=$O(^FBAAC("AH",FBN,I)) Q:'I  F J=0:0 S J=$O(^FBAAC("AH",FBN,I,J)) Q:'J  F K=0:0 S K=$O(^FBAAC("AH",FBN,I,J,K)) Q:'K  F L=0:0 S L=$O(^FBAAC("AH",FBN,I,J,K,L)) Q:'L  I $D(^FBAAC(I,1,J,1,K,1,L,"FBREJ")) S FBCNT=FBCNT+1
"RTN","FBAARR1",42,0)
 Q:'$D(FBNB)
"RTN","FBAARR1",43,0)
 S FBNBCT=$S($D(^FBAA(161.7,FBNB,0)):(FBAAMPI-$P(^(0),"^",11)),1:0)
"RTN","FBAARR1",44,0)
 I FBCNT>FBNBCT W !!,*7,"New Batch selected does not have enough room to fit the",!,FBCNT," rejects pending from batch ",$P(FZ,"^")," !",!! K FBNB Q
"RTN","FBAARR1",45,0)
 Q
"RTN","FBAARR1",46,0)
VOID W !!,*7,"Invoice #: ",FBIN," has a status of VOID.  Please delete the VOID",!,"before re-initiating this rejected payment."
"RTN","FBAARR1",47,0)
 Q
"RTN","FBAASCB")
0^59^B23905595
"RTN","FBAASCB",1,0)
FBAASCB ;AISC/GRR-SUPERVISOR RELEASE ;8/6/2003
"RTN","FBAASCB",2,0)
 ;;3.5;FEE BASIS;**38,61**;JAN 30, 1995
"RTN","FBAASCB",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAASCB",4,0)
 S FBERR=0 D DT^DICRW
"RTN","FBAASCB",5,0)
 I '$D(^FBAA(161.7,"AC","C"))&('$D(^FBAA(161.7,"AC","A"))) W !!,*7,"There are no batches Pending Release!" Q
"RTN","FBAASCB",6,0)
BT W !! S DIC="^FBAA(161.7,",DIC(0)="AEQ",DIC("S")="I ($G(^(""ST""))=""C""!($G(^(""ST""))=""A""))&('$G(^XTMP(""FBAASCB"",+Y)))" D ^DIC K DIC("S") G Q:X="^"!(X=""),BT:Y<0 S FBN=+Y,^XTMP("FBAASCB",FBN)=1
"RTN","FBAASCB",7,0)
 D LOCK^FBUCUTL("^FBAA(161.7,",FBN) I 'FBLOCK W !!,*7,"Try releasing batch at another time." D Q G FBAASCB
"RTN","FBAASCB",8,0)
 S FZ=^FBAA(161.7,FBN,0),FBTYPE=$P(FZ,"^",3),FBAAON=$P(FZ,"^",2),FBAAB=$P(FZ,"^")
"RTN","FBAASCB",9,0)
 I $G(FBTYPE)="B9",$P(FZ,"^",15)="Y",$P(^FBAA(161.7,FBN,"ST"),"^")="C",$P(FZ,"^",18)'="Y" W !!,*7,"Batch needs to be released to Pricer first.",! G Q
"RTN","FBAASCB",10,0)
 I $G(FBTYPE)="B9",$P(FZ,"^",15)="" S FBCNH=1
"RTN","FBAASCB",11,0)
 S FBSTAT=^FBAA(161.7,FBN,"ST"),FBSTAT=$S(FBSTAT="C":"S",FBSTAT="A":"R",1:FBSTAT)
"RTN","FBAASCB",12,0)
 S FBAAOB=$P(FZ,"^",8)_"-"_FBAAON,FBAAMT=$P(FZ,"^",9),FBCOMM="Release of batch "_FBAAB
"RTN","FBAASCB",13,0)
 I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) W !!,*7,"Sorry, only Supervisor can Release batch!" D Q G FBAASCB
"RTN","FBAASCB",14,0)
 S DA=FBN,DR="0;ST" W !! D EN^DIQ
"RTN","FBAASCB",15,0)
RD S B=FBN S DIR(0)="Y",DIR("A")="Want line items listed",DIR("B")="NO" D ^DIR K DIR G Q:$D(DIRUT) W:Y @IOF D:Y LIST^FBAACCB:FBTYPE="B3",LISTP^FBAACCB:FBTYPE="B5",LISTT^FBAACCB0:FBTYPE="B2",LISTC^FBAACCB1:FBTYPE="B9"
"RTN","FBAASCB",16,0)
RDD S DIR(0)="Y",DIR("A")="Do you want to Release Batch as Correct",DIR("B")="NO" D ^DIR K DIR G Q:$D(DIRUT) I 'Y W !!,"Batch has NOT been Released!",*7 D Q G FBAASCB
"RTN","FBAASCB",17,0)
 D WAIT^DICD I FBTYPE="B9" D ^FBAASCB0 G SHORT:$D(FBERR),FIN
"RTN","FBAASCB",18,0)
 D POST I $D(FBERR) G SHORT
"RTN","FBAASCB",19,0)
 G:FBTYPE="B5" FIN
"RTN","FBAASCB",20,0)
 G:FBTYPE="B9" FIN
"RTN","FBAASCB",21,0)
FIN S $P(FZ,"^",6)=DT,$P(FZ,"^",7)=DUZ,^FBAA(161.7,FBN,0)=FZ
"RTN","FBAASCB",22,0)
 S DA=FBN,(DIC,DIE)="^FBAA(161.7,",DIC(0)="LQ",DR="11////"_FBSTAT,DLAYGO=161.7 D ^DIE K DA,DIE,DIC,DR,DLAYGO
"RTN","FBAASCB",23,0)
 D UCAUTOP
"RTN","FBAASCB",24,0)
 ;S DA=FBN,DR="0;ST",DIC="^FBAA(161.7," W !! D EN^DIQ W !!," Batch has been Released!" D Q G FBAASCB
"RTN","FBAASCB",25,0)
 S DA=FBN,DR="0;ST",DIC="^FBAA(161.7," W !! D EN^DIQ W !!," Batch has been Released!"
"RTN","FBAASCB",26,0)
 ; process batch to queue 0.00 paid EDI invoices for FPPS, patch *61
"RTN","FBAASCB",27,0)
 D LOG^FBFHLL(FBN,FBTYPE)
"RTN","FBAASCB",28,0)
 D Q G FBAASCB
"RTN","FBAASCB",29,0)
Q I $G(FBN) K ^XTMP("FBAASCB",FBN) L -^FBAA(161.7,FBN)
"RTN","FBAASCB",30,0)
 K B,J,K,L,M,X,Y,Z,DIC,FBN,A,A1,A2,BE,CPTDESC,D0,DA,DL,DR,DRX,DX,FBAACB,FBAACPT,FBAAON,FBAAOUT,FBVP,FBIN,DK,N,XY,FBINOLD,FBINTOT,FBTYPE,FZ,P3,P4,Q,S,T,V,VID,ZS,FBAAB,FBAAMT,FBAAOB,FBCOMM,FBAUT,FBSITE,I,X,Y,Z,FBERR,DIRUT,FBSTAT,FBLOCK
"RTN","FBAASCB",31,0)
 K FBAC,FBAP,FBCNH,FBFD,FBI,FBLISTC,FBPDT,FBSC,FBTD,PRCSCPAN,DFN
"RTN","FBAASCB",32,0)
 Q
"RTN","FBAASCB",33,0)
SHORT W !!,*7,"This batch CANNOT be released. Check your 1358.",! L -^FBAA(161.7,FBN) D Q G FBAASCB
"RTN","FBAASCB",34,0)
POST ;FBAAOB=FULL OBLIGATION NUMBER(STA-CXXXXX)
"RTN","FBAASCB",35,0)
 ;FBCOMM=COMMENT FOR 1358
"RTN","FBAASCB",36,0)
 ;FBAAMT=TOTAL AMOUNT OF BATCH
"RTN","FBAASCB",37,0)
 ;FBAAB=BATCH NUMBER
"RTN","FBAASCB",38,0)
 ;IF CALL FAILS FBERR RETURNED=1
"RTN","FBAASCB",39,0)
 ;FBN added as 7th peice of 'X'. It is the interface ID
"RTN","FBAASCB",40,0)
 K FBERR
"RTN","FBAASCB",41,0)
 S PRCS("X")=FBAAOB,PRCS("TYPE")="FB" D EN3^PRCS58 I Y=-1 W !!,*7,?5,"1358 not available for posting!",! S FBERR=1 Q
"RTN","FBAASCB",42,0)
 D NOW^%DTC S X=FBAAOB_"^"_%_"^^"_FBAAMT_"^"_$S($L(FBAAB)<3:$$PADZ^FBAAV01(FBAAB,4),1:FBAAB)_"^"_FBCOMM_"^"_FBN_"^"_1,PRCS("TYPE")="FB" D EN2^PRCS58 I +Y=0 W !!,*7,Y,! S FBERR=1 Q
"RTN","FBAASCB",43,0)
 K PRCS("SITE"),PRCSI Q
"RTN","FBAASCB",44,0)
UCAUTOP ; Unauthorized Claims Autoprint
"RTN","FBAASCB",45,0)
 ; If unauthorized claims autoprint feature is enabled then check items
"RTN","FBAASCB",46,0)
 ; in batch and print an unauthorized claim disposition letter if all
"RTN","FBAASCB",47,0)
 ; payments for a claim have been released
"RTN","FBAASCB",48,0)
 ; input FBN    - batch ien
"RTN","FBAASCB",49,0)
 ;       FBTYPE - batch type
"RTN","FBAASCB",50,0)
 ;       FBCNH  - (opt) equals 1 if batch is for community nursing home
"RTN","FBAASCB",51,0)
 N DA,FBDA,FBORDER,FBUC,FBUCA,FBX
"RTN","FBAASCB",52,0)
 Q:"^B3^B5^B9^"'[(U_FBTYPE_U)  ; not an applicable batch type
"RTN","FBAASCB",53,0)
 Q:$G(FBCNH)=1  ; CNH batch won't have associated unauth claims
"RTN","FBAASCB",54,0)
 S FBUC=$$FBUC^FBUCUTL2(1)
"RTN","FBAASCB",55,0)
 Q:'$$PARAM^FBUCLET(FBUC)  ; autoprint feature not enabled
"RTN","FBAASCB",56,0)
 ;
"RTN","FBAASCB",57,0)
 ; loop thru items in batch to build list of unauthorized claims
"RTN","FBAASCB",58,0)
 K ^TMP("FBUC",$J)
"RTN","FBAASCB",59,0)
 I FBTYPE="B3" D  ; if outpatient/ancillary batch
"RTN","FBAASCB",60,0)
 . S DA(3)=0 F  S DA(3)=$O(^FBAAC("AC",FBN,DA(3))) Q:'DA(3)  D
"RTN","FBAASCB",61,0)
 . . S DA(2)=0 F  S DA(2)=$O(^FBAAC("AC",FBN,DA(3),DA(2))) Q:'DA(2)  D
"RTN","FBAASCB",62,0)
 . . . S DA(1)=0
"RTN","FBAASCB",63,0)
 . . . F  S DA(1)=$O(^FBAAC("AC",FBN,DA(3),DA(2),DA(1))) Q:'DA(1)  D
"RTN","FBAASCB",64,0)
 . . . . S DA=0
"RTN","FBAASCB",65,0)
 . . . . F  S DA=$O(^FBAAC("AC",FBN,DA(3),DA(2),DA(1),DA)) Q:'DA  D
"RTN","FBAASCB",66,0)
 . . . . . S FBX=$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,0)),U,13)
"RTN","FBAASCB",67,0)
 . . . . . I FBX["FB583" S ^TMP("FBUC",$J,+FBX)=""
"RTN","FBAASCB",68,0)
 I FBTYPE="B5" D  ; if pharmacy batch
"RTN","FBAASCB",69,0)
 . S DA(1)=0 F  S DA(1)=$O(^FBAA(162.1,"AE",FBN,DA(1))) Q:'DA(1)  D
"RTN","FBAASCB",70,0)
 . . S DA=0 F  S DA=$O(^FBAA(162.1,"AE",FBN,DA(1),DA)) Q:'DA  D
"RTN","FBAASCB",71,0)
 . . . S FBX=$P($G(^FBAA(162.1,DA(1),"RX",DA,2)),U,6)
"RTN","FBAASCB",72,0)
 . . . I FBX["FB583" S ^TMP("FBUC",$J,+FBX)=""
"RTN","FBAASCB",73,0)
 I FBTYPE="B9" D  ; if inpatient batch
"RTN","FBAASCB",74,0)
 . S DA=0 F  S DA=$O(^FBAAI("AC",FBN,DA)) Q:'DA  D
"RTN","FBAASCB",75,0)
 . . S FBX=$P($G(^FBAAI(DA,0)),U,5)
"RTN","FBAASCB",76,0)
 . . I FBX["FB583" S ^TMP("FBUC",$J,+FBX)=""
"RTN","FBAASCB",77,0)
 ;
"RTN","FBAASCB",78,0)
 ; loop thru unauthorized claim list and print letter when appropriate
"RTN","FBAASCB",79,0)
 S FBDA=0 F  S FBDA=$O(^TMP("FBUC",$J,FBDA)) Q:'FBDA  D
"RTN","FBAASCB",80,0)
 . Q:'$$PAYST^FBUCUTL(FBDA)  ; not all payments for claim released yet
"RTN","FBAASCB",81,0)
 . S FBUCA=$G(^FB583(FBDA,0))
"RTN","FBAASCB",82,0)
 . Q:$P(FBUCA,U,16)'=1  ; claim not flagged for printing
"RTN","FBAASCB",83,0)
 . S FBORDER=$$ORDER^FBUCUTL($P(FBUCA,U,24))
"RTN","FBAASCB",84,0)
 . D AUTO^FBUCLET(FBDA,FBORDER,FBUCA,FBUC) ; autoprint letter
"RTN","FBAASCB",85,0)
 ;
"RTN","FBAASCB",86,0)
 K ^TMP("FBUC",$J)
"RTN","FBAASCB",87,0)
 Q
"RTN","FBAAVLU")
0^61^B17786372
"RTN","FBAAVLU",1,0)
FBAAVLU ;AISC/DMK-LOOK UP VENDOR FOR TIME FRAME ;8/10/2003
"RTN","FBAAVLU",2,0)
 ;;3.5;FEE BASIS;**4,61**;JAN 30, 1995
"RTN","FBAAVLU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAVLU",4,0)
 D DT^DICRW
"RTN","FBAAVLU",5,0)
RDV S FBAAOUT=0 K FBAANQ W !! S DIC="^FBAAV(",DIC(0)="AEQM",DIC("A")="Select Medical Vendor: ",DIC("S")="I $P(^(0),""^"",7)'=3" D ^DIC K DIC("S"),DIC("A") G Q:X="^"!(X=""),RDV:Y<0 S DA=+Y
"RTN","FBAAVLU",6,0)
 D DATE^FBAAUTL G:FBPOP RDV S ZZ=9999999.9999,BEG=ZZ-ENDDATE,END=ZZ-BEGDATE
"RTN","FBAAVLU",7,0)
 S VAR="DA^BEG^END",VAL=DA_"^"_BEG_"^"_END,PGM="START^FBAAVLU" D ZIS^FBAAUTL G:FBPOP Q S:IO=IO(0) FBAANQ=1
"RTN","FBAAVLU",8,0)
START S Q="",$P(Q,"-",80)="-",HNAM="",FBDEL=$S($P($G(^FBAAV(DA,"ADEL")),"^")="Y":1,1:0) U IO W:$E(IOST,1,2)["C-" @IOF D HED
"RTN","FBAAVLU",9,0)
 F J=0:0 S J=$O(^FBAAC("AB",DA,J)) Q:J'>0!(FBAAOUT)  F FBK=BEG-1:0 S FBK=$O(^FBAAC(J,DA,"AD",FBK)) Q:FBK>END!(FBK'>0)!(FBAAOUT)  S K=DA D MORE
"RTN","FBAAVLU",10,0)
 G:$D(FBAANQ) RDV
"RTN","FBAAVLU",11,0)
Q D CLOSE^FBAAUTL K DA,%DT,M,HNAM,J,BEG,BEGDATE,V,DIC,END,ENDDATE,A1,A2,B,B1,B2,PI,T,FBAACPT,FBAADT,FBAAPD,FBIN,FBAANQ,FBAAOUT,K,L,PTNAM,ZS,PGM,Q,VAL,VAR,X,Y,ZZ,FBDEL,FBMOD,FBMODLE Q
"RTN","FBAAVLU",12,0)
MORE F L=0:0 S L=$O(^FBAAC(J,DA,"AD",FBK,L)) Q:L'>0!(FBAAOUT)  F M=0:0 S M=$O(^FBAAC(J,1,DA,1,L,1,M)) Q:M'>0!(FBAAOUT)  S B=^(M,0) I $P(B,"^",6)]""  S T=$P(B,"^",5),FBAAPD=$P(B,"^",14),ZS=$P(B,"^",20),V=$P(B,"^",21) D
"RTN","FBAAVLU",13,0)
 .D FBCKO^FBAACCB2(J,K,L,M),WRT
"RTN","FBAAVLU",14,0)
 Q
"RTN","FBAAVLU",15,0)
WRT ;
"RTN","FBAAVLU",16,0)
 N FBAARCE,FBADJLA,FBADJLR,FBCSID,FBFPPSC,FBFPPSL,FBRRMKL,FBUNITS
"RTN","FBAAVLU",17,0)
 N FBX,FBY2,FBY3,TAMT
"RTN","FBAAVLU",18,0)
 I $E(IOST,1,2)["C-",$Y+4>IOSL S DIR(0)="E" D ^DIR K DIR S:'Y FBAAOUT=1 Q:FBAAOUT  W @IOF D HED
"RTN","FBAAVLU",19,0)
 E  I $Y+4>IOSL W @IOF D HED
"RTN","FBAAVLU",20,0)
 S FBAADT=$P(^FBAAC(J,1,DA,1,L,0),"^",1),FBAADT=$E(FBAADT,4,5)_"/"_$E(FBAADT,6,7)_"/"_$E(FBAADT,2,3),B1=$P(B,"^",8),B2=$S(B1="":"",$D(^FBAA(161.7,B1,0)):$P(^FBAA(161.7,B1,0),"^",1),1:""),PTNAM=$S($D(^DPT(J,0)):$P(^DPT(J,0),"^"),1:"")
"RTN","FBAAVLU",21,0)
 S FBAAPD=$S(FBAAPD]"":$E(FBAAPD,4,5)_"/"_$E(FBAAPD,6,7)_"/"_$E(FBAAPD,2,3),1:"NOT PAID")
"RTN","FBAAVLU",22,0)
 S A1=$P(B,"^",2)+.0001,A2=$P(B,"^",3)+.0001,A1=$P(A1,".",1)_"."_$E($P(A1,".",2),1,2),A2=$P(A2,".",1)_"."_$E($P(A2,".",2),1,2),FBIN=$P(B,"^",16)
"RTN","FBAAVLU",23,0)
 S FBAACPT=$$CPT^FBAAUTL4($P(B,"^",1))
"RTN","FBAAVLU",24,0)
 S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",""M"")","E")
"RTN","FBAAVLU",25,0)
 S FBY3=$G(^FBAAC(J,1,K,1,L,1,M,3))
"RTN","FBAAVLU",26,0)
 S FBFPPSC=$P(FBY3,U)
"RTN","FBAAVLU",27,0)
 S FBFPPSL=$P(FBY3,U,2)
"RTN","FBAAVLU",28,0)
 S FBX=$$ADJLRA^FBAAFA(M_","_L_","_K_","_J_",")
"RTN","FBAAVLU",29,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBAAVLU",30,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBAAVLU",31,0)
 S TAMT=$FN($P(B,"^",4),"",2)
"RTN","FBAAVLU",32,0)
 S FBAARCE=$$GET1^DIQ(162.03,M_","_L_","_K_","_J_",",48)
"RTN","FBAAVLU",33,0)
 S FBY2=$G(^FBAAC(J,1,K,1,L,1,M,2))
"RTN","FBAAVLU",34,0)
 S FBUNITS=$P(FBY2,U,14)
"RTN","FBAAVLU",35,0)
 S FBCSID=$P(FBY2,U,16)
"RTN","FBAAVLU",36,0)
 S FBRRMKL=$$RRL^FBAAFR(M_","_L_","_K_","_J_",")
"RTN","FBAAVLU",37,0)
 W:PTNAM'=HNAM !,PTNAM
"RTN","FBAAVLU",38,0)
 W !,$S(ZS="R":"*",1:""),$S(V="VP":"#",1:""),$S($G(FBCAN)]"":"+",1:""),?2,FBAADT,?12,FBAACPT_$S($G(FBMODLE)]"":"-"_$P(FBMODLE,","),1:""),?22,FBAARCE,?31,FBUNITS,?38,FBCSID,?60,FBIN,?71,B2
"RTN","FBAAVLU",39,0)
 I $P($G(FBMODLE),",",2)]"" D  Q:FBAAOUT
"RTN","FBAAVLU",40,0)
 . N FBI
"RTN","FBAAVLU",41,0)
 . F FBI=2:1 S FBMOD=$P(FBMODLE,",",FBI) Q:FBMOD=""  D  Q:FBAAOUT
"RTN","FBAAVLU",42,0)
 . . I $Y+4>IOSL D  Q:FBAAOUT
"RTN","FBAAVLU",43,0)
 . . . I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S FBAAOUT=1 Q
"RTN","FBAAVLU",44,0)
 . . . W @IOF D HED W !,"(continued)"
"RTN","FBAAVLU",45,0)
 . . W !,?17,"-",FBMOD
"RTN","FBAAVLU",46,0)
 W !?4,"$",$J(A1,8),?17,"$",$J(A2,8)
"RTN","FBAAVLU",47,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBAAVLU",48,0)
 W ?30,$S(FBADJLR]"":FBADJLR,1:T)
"RTN","FBAAVLU",49,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBAAVLU",50,0)
 W ?40,"$",$S(FBADJLA]"":FBADJLA,1:TAMT)
"RTN","FBAAVLU",51,0)
 W ?56,FBRRMKL,?70,FBAAPD
"RTN","FBAAVLU",52,0)
 I FBFPPSC]"" W !,?5,"FPPS Claim ID: ",FBFPPSC,?32,"FPPS Line Item: ",FBFPPSL
"RTN","FBAAVLU",53,0)
 D PMNT^FBAACCB2
"RTN","FBAAVLU",54,0)
 S HNAM=PTNAM
"RTN","FBAAVLU",55,0)
 Q
"RTN","FBAAVLU",56,0)
HED S FBAAOUT=0 W ?26,"** VENDOR LOOK-UP **",!,!,?23,"Vendor: ",$P(^FBAAV(DA,0),"^",1),!,?14,"('*' Reimb. to Patient  '+' Cancel. Activity)",!,"PATIENT",?14,"('#' Voided Payment)"
"RTN","FBAAVLU",57,0)
 W !?2,"SVC DATE",?12,"CPT-MOD",?22,"REV.CODE",?31,"UNITS",?38,"PATIENT ACCOUNT NO.",?60,"INVOICE #",?71,"BATCH #"
"RTN","FBAAVLU",58,0)
 W !?4,"AMT CLAIMED",?17,"AMT PAID",?30,"ADJ CODE",?40,"ADJ AMOUNT",?56,"REMIT REMARK",?70,"DATE PAID"
"RTN","FBAAVLU",59,0)
 W !,Q,!
"RTN","FBAAVLU",60,0)
 Q
"RTN","FBAAVS")
0^41^B14761630
"RTN","FBAAVS",1,0)
FBAAVS ;AISC/GRR-DISPLAY VENDOR PAYMENT RECORDS ;7/17/2003
"RTN","FBAAVS",2,0)
 ;;3.5;FEE BASIS;**4,61**;JAN 30, 1995
"RTN","FBAAVS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAVS",4,0)
RDP W !! S DIC="^FBAAC(",DIC(0)="AEQM",DIC("A")="Select Patient: " D ^DIC K DIC("A") G Q:X="^"!(X=""),RDP:Y<0 S DFN=+Y
"RTN","FBAAVS",5,0)
 S:'$D(^FBAAC(DFN,1,0)) ^FBAAC(DFN,1,0)="^162.01P^0^0"
"RTN","FBAAVS",6,0)
RDV W !! S DIC="^FBAAV(",DIC(0)="AEQM",DA(1)=DFN D ^DIC G RDP:X="^"!(X=""),RDV:Y<0 S DA=+Y G:'$D(^FBAAC(DFN,DA,"AD")) NOCL D EN1
"RTN","FBAAVS",7,0)
 G RDV
"RTN","FBAAVS",8,0)
EN1 ; display payments for veteran (DFN) and vendor (DA)
"RTN","FBAAVS",9,0)
 N FBAARCE,FBADJLA,FBADJLR,FBCSID,FBFPPSC,FBFPPSL,FBRRMKL,FBUNITS
"RTN","FBAAVS",10,0)
 N FBY2,FBY3,TAMT
"RTN","FBAAVS",11,0)
 S Q="" F A=1:1:79 S Q=Q_"-",FBAAOUT=0
"RTN","FBAAVS",12,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP D HED
"RTN","FBAAVS",13,0)
 F D=0:0 S D=$O(^FBAAC(DFN,DA,"AD",D)) Q:D'>0!(FBAAOUT)  F B=0:0 S B=$O(^FBAAC(DFN,DA,"AD",D,B)) Q:B'>0!(FBAAOUT)  F K=0:0 S K=$O(^FBAAC(DFN,1,DA,1,B,1,K)) Q:K'>0!(FBAAOUT)  S L=^(K,0) D MORE,WRT
"RTN","FBAAVS",14,0)
 W ! K B,C,D,T
"RTN","FBAAVS",15,0)
 Q
"RTN","FBAAVS",16,0)
HED W @IOF,"Patient Name: ",$P(^DPT(DFN,0),"^",1),?50,"SSN: ",$P(^(0),"^",9),!!,?2,"VENDOR: ",$P(^FBAAV(DA,0),"^",1),!?5,$P(^FBAAV(DA,0),"^",3) S FBST=$P(^FBAAV(DA,0),"^",5)
"RTN","FBAAVS",17,0)
 W !?5,$P(^FBAAV(DA,0),"^",4)_", "_$P($G(^DIC(5,+FBST,0)),U)_"   "_$P(^FBAAV(DA,0),"^",6)
"RTN","FBAAVS",18,0)
 W !,?10,"('*' Reimb. to Patient  '+' Cancel. Activity   '#' Voided Payment)"
"RTN","FBAAVS",19,0)
 W !,?2,"SVC DATE",?12,"CPT-MOD",?22,"REV.CODE",?32,"UNITS",?39,"PATIENT ACCOUNT NO.",?61,"INVOICE #",?72,"BATCH #"
"RTN","FBAAVS",20,0)
 W !,?12,"AMT CLAIMED",?25,"AMT PAID",?38,"ADJ CODE",?48,"ADJ AMOUNT",?65,"REMIT REMARK"
"RTN","FBAAVS",21,0)
 W !,Q,!
"RTN","FBAAVS",22,0)
 Q
"RTN","FBAAVS",23,0)
WRT I $E(IOST,1,2)["C-",$Y+3>IOSL S DIR(0)="E" D ^DIR K DIR S:'Y FBAAOUT=1 Q:FBAAOUT  D HED
"RTN","FBAAVS",24,0)
 S FBAADT=$P(^FBAAC(DFN,1,DA,1,B,0),"^",1),FBAADT=$E(FBAADT,4,5)_"/"_$E(FBAADT,6,7)_"/"_$E(FBAADT,2,3),B1=$P(L,"^",8),B2=$S(B1="":"",$D(^FBAA(161.7,B1,0)):$P(^FBAA(161.7,B1,0),"^",1),1:"")
"RTN","FBAAVS",25,0)
 S TAMT=$FN($P(L,U,4),"",2)
"RTN","FBAAVS",26,0)
 S A1=$P(L,"^",2)+.0001,A2=$P(L,"^",3)+.0001,A1=$P(A1,".",1)_"."_$E($P(A1,".",2),1,2),A2=$P(A2,".",1)_"."_$E($P(A2,".",2),1,2),FBIN=$P(L,"^",16)
"RTN","FBAAVS",27,0)
 S FBAACPT=$$CPT^FBAAUTL4($P(L,"^",1))
"RTN","FBAAVS",28,0)
 S FBUNITS=$P(FBY2,U,14)
"RTN","FBAAVS",29,0)
 S FBCSID=$P(FBY2,U,16)
"RTN","FBAAVS",30,0)
 S FBFPPSC=$P(FBY3,U)
"RTN","FBAAVS",31,0)
 S FBFPPSL=$P(FBY3,U,2)
"RTN","FBAAVS",32,0)
 D FBCKO^FBAACCB2(DFN,DA,B,K)
"RTN","FBAAVS",33,0)
 W !,$S(ZS="R":"*",1:""),$S(V="VP":"#",1:""),$S($G(FBCAN)]"":"+",1:"")
"RTN","FBAAVS",34,0)
 W ?2,FBAADT,?12,FBAACPT_$S($G(FBMODLE)]"":"-"_$P(FBMODLE,","),1:""),?22,FBAARCE,?32,FBUNITS,?39,FBCSID,?61,FBIN,?72,B2
"RTN","FBAAVS",35,0)
 ; write additional modifiers (if any)
"RTN","FBAAVS",36,0)
 I $P($G(FBMODLE),",",2)]"" D  Q:FBAAOUT
"RTN","FBAAVS",37,0)
 . N FBI,FBMOD
"RTN","FBAAVS",38,0)
 . F FBI=2:1 S FBMOD=$P(FBMODLE,",",FBI) Q:FBMOD=""  D  Q:FBAAOUT
"RTN","FBAAVS",39,0)
 . . I $Y+4>IOSL D  Q:FBAAOUT
"RTN","FBAAVS",40,0)
 . . . I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S FBAAOUT=1 Q
"RTN","FBAAVS",41,0)
 . . . D HED W !,"(continued)"
"RTN","FBAAVS",42,0)
 . . W !,?17,"-",FBMOD
"RTN","FBAAVS",43,0)
 W !?12,"$",$J(A1,8),?25,"$",$J(A2,8)
"RTN","FBAAVS",44,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBAAVS",45,0)
 W ?38,$S(FBADJLR]"":FBADJLR,1:T)
"RTN","FBAAVS",46,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBAAVS",47,0)
 W ?48,"$",$S(FBADJLA]"":FBADJLA,1:TAMT)
"RTN","FBAAVS",48,0)
 W ?65,FBRRMKL
"RTN","FBAAVS",49,0)
 I FBFPPSC]"" W !,?12,"FPPS Claim ID: ",FBFPPSC,?40,"FPPS Line Item: ",FBFPPSL
"RTN","FBAAVS",50,0)
 D PMNT^FBAACCB2
"RTN","FBAAVS",51,0)
 Q
"RTN","FBAAVS",52,0)
Q K DIC,DIE,DA,DF,DA(1),FBAAOUT,A,A1,A2,B1,B2,D1,FBAACPT,FBAADT,FBAAPD,FBIN,K,L,Q,X,Y,ZS,V,FBST,FBMODLE
"RTN","FBAAVS",53,0)
 Q
"RTN","FBAAVS",54,0)
MORE N FBX
"RTN","FBAAVS",55,0)
 S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_DFN_",1,"_DA_",1,"_B_",1,"_K_",""M"")","E")
"RTN","FBAAVS",56,0)
 S T=$P(L,"^",5),T=$S(T>9:$P(^FBAA(161.27,T,0),"^"),1:T),ZS=$P(L,"^",20),V=$P(L,"^",21)
"RTN","FBAAVS",57,0)
 S FBY2=$G(^FBAAC(DFN,1,DA,1,B,1,K,2))
"RTN","FBAAVS",58,0)
 S FBY3=$G(^FBAAC(DFN,1,DA,1,B,1,K,3))
"RTN","FBAAVS",59,0)
 S FBX=$$ADJLRA^FBAAFA(K_","_B_","_DA_","_DFN_",")
"RTN","FBAAVS",60,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBAAVS",61,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBAAVS",62,0)
 S FBRRMKL=$$RRL^FBAAFR(K_","_B_","_DA_","_DFN_",")
"RTN","FBAAVS",63,0)
 S FBAARCE=$$GET1^DIQ(162.03,K_","_B_","_DA_","_DFN_",",48)
"RTN","FBAAVS",64,0)
 Q
"RTN","FBAAVS",65,0)
NOCL W !,"Vendor has no Payment data for this Patient!",! G RDV
"RTN","FBCHEAP")
0^24^B16379485
"RTN","FBCHEAP",1,0)
FBCHEAP ;AISC/DMK-ENTER AMOUNT PAID FROM PRICER ;7/8/2003
"RTN","FBCHEAP",2,0)
 ;;3.5;FEE BASIS;**38,55,61**;JAN 30, 1995
"RTN","FBCHEAP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHEAP",4,0)
DIC W ! S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,15)=""Y""&($G(^(""ST""))=""P"")"_$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):"",1:"&($P(^(0),U,5)=DUZ)") D ^DIC
"RTN","FBCHEAP",5,0)
 G END:X="^"!(X=""),DIC:Y<0 S FBN=+Y,FBN(0)=Y(0)
"RTN","FBCHEAP",6,0)
ASK S DIR(0)="Y",DIR("A")="Would you like to reject any invoices from the pricer",DIR("B")="NO" D ^DIR K DIR G END:$D(DIRUT),REJECT:Y
"RTN","FBCHEAP",7,0)
DIC1 W !! S DIC="^FBAAI(",DIC(0)="AEQMZ",DIC("A")="Select Patient: ",D="D",DIC("S")="I $P(^(0),U,17)=FBN",DIC("W")="W ?25,$S($D(^DPT($P(^(0),U,4),0)):$P(^(0),U),1:"""")" D ^DIC S DIE=DIC K DIC,D G END:X="^",DIC:X=""!(Y<0)
"RTN","FBCHEAP",8,0)
 S (DA,FBI)=+Y,FBI(0)=Y(0) G END:'$D(^FBAAI(FBI,0))
"RTN","FBCHEAP",9,0)
DISP S FBLISTC="" D HOME^%ZIS,START^FBCHDI2
"RTN","FBCHEAP",10,0)
 W !! S FBJ=$P(FBI(0),"^",8)
"RTN","FBCHEAP",11,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBCHEAP",12,0)
 S FB1725=$S($P(FBI(0),U,5)["FB583":+$P($G(^FB583(+$P(FBI(0),U,5),0)),U,28),1:0)
"RTN","FBCHEAP",13,0)
 S DR="26;S FBPAMT=X;W:FB1725 !?2,""**Payment is for emergency treatment under 38 U.S.C. 1725."";W:FB1725&($G(FBPAMT)>0) !?2,""  70% of Pricer Amount = ""_$J(.7*FBPAMT,0,2);8;S FBK=X"
"RTN","FBCHEAP",14,0)
 ;S DR(1,162.5,1)="S:(FBJ-FBK)'>0 Y=24;9//^S X=$S(FBJ-FBK:FBJ-FBK,1:"""");S:'X Y=24;10;S:X'=4 Y=24;18"
"RTN","FBCHEAP",15,0)
 S DR(1,162.5,1)="S FBX=$$ADJ^FBUTL2(FBJ-FBK,.FBADJ,1,,,1)"
"RTN","FBCHEAP",16,0)
 S DR(1,162.5,2)="@20;24R;S:$$INPICD^FBCSV1(X,$G(DA),$P($G(FBIN),""^"",6)) Y=""@20"";24.5R"
"RTN","FBCHEAP",17,0)
 S DR(1,162.5,3)="S FBX=$$RR^FBUTL4(.FBRRMK,2)"
"RTN","FBCHEAP",18,0)
 S DIE("NO^")="" D ^DIE K DIE("NO^") G END:$D(DTOUT)
"RTN","FBCHEAP",19,0)
 ; file adjustment reasons
"RTN","FBCHEAP",20,0)
 D FILEADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHEAP",21,0)
 ; file remittance remarks
"RTN","FBCHEAP",22,0)
 D FILERR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHEAP",23,0)
 D TOT S $P(FBN(0),"^",9)=FBK(1),^FBAA(161.7,FBN,0)=FBN(0)
"RTN","FBCHEAP",24,0)
 D CHK I $D(FBCHSW) K FBCHSW G DIC1
"RTN","FBCHEAP",25,0)
 I '$D(FBCHSW) S DA=FBN,(DIC,DIE)="^FBAA(161.7,",DIC(0)="LQ",DR="11////^S X=""A""",DLAYGO=161.7 D ^DIE G DIC
"RTN","FBCHEAP",26,0)
 G DIC1:$O(^FBAAI("AC",FBN,FBI))
"RTN","FBCHEAP",27,0)
END K DA,DFN,DIC,DIE,DR,FBAAOUT,FBDX,FBI,FBIN,FBJ,FBK,FBLISTC,FBN,FBPROC,FBVEN,FBVID,I,J,K,L,POP,Q,VA,VADM,X,POP,YS,VAL,ZZ,Y,FBRR,FBTYPE,FBCHSW,DIRUT,FB1725,FBPAMT
"RTN","FBCHEAP",28,0)
 K FBADJ,FBRRMK
"RTN","FBCHEAP",29,0)
 D END^FBCHDI
"RTN","FBCHEAP",30,0)
 Q
"RTN","FBCHEAP",31,0)
REJECT S FBTYPE="B9"
"RTN","FBCHEAP",32,0)
 W ! S DIC="^FBAAI(",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,17)=FBN&($P(^(0),U,9)="""")",DIC("W")="W ?25,$S($D(^DPT($P(^(0),U,4),0)):$P(^(0),U),1:"""")" D ^DIC G END:X=""!(X="^"),REJECT:Y<0 S FBI=+Y,FBI(0)=Y(0)
"RTN","FBCHEAP",33,0)
 S FBLISTC="" D HOME^%ZIS,START^FBCHDI2
"RTN","FBCHEAP",34,0)
RASK S DIR(0)="F^2:40",DIR("A")="Enter reason for rejecting (2-40 characters)",DIR("?")="Enter a reason for rejecting payment from Austin Pricer" D ^DIR K DIR G END:$D(DIRUT) S FBRR=X
"RTN","FBCHEAP",35,0)
ASKSU S DIR(0)="Y",DIR("A")="Are you sure you want to reject this item",DIR("B")="NO" D ^DIR K DIR G END:$D(DIRUT),DIC:'Y
"RTN","FBCHEAP",36,0)
 S (DLAYGO,DIDEL)=162.5,DIC(0)="AEQLM"
"RTN","FBCHEAP",37,0)
 S (DIC,DIE)="^FBAAI(",DA=FBI,DR="13////^S X=""P"";14////^S X=FBRR;15////^S X=FBN;20///^S X=""@""" D ^DIE
"RTN","FBCHEAP",38,0)
 S $P(FBN(0),"^",10)=$P(FBN(0),"^",10)-1,$P(FBN(0),"^",11)=$P(FBN(0),"^",11)-1,$P(FBN(0),"^",17)="Y",^FBAA(161.7,FBN,0)=FBN(0)
"RTN","FBCHEAP",39,0)
RASKSU I $O(^FBAAI("AC",FBN,FBI)) S DIR(0)="Y",DIR("A")="Reject another",DIR("B")="NO" D ^DIR K DIR G END:$D(DIRUT),REJECT:Y
"RTN","FBCHEAP",40,0)
 I $P(^FBAA(161.7,FBN,0),"^",11)=0 S (DIC,DIE)="^FBAA(161.7,",DIC(0)="AEQM",DA=FBN,DR="11////^S X=""V"";12////^S X=DT" D ^DIE G DIC
"RTN","FBCHEAP",41,0)
 G END
"RTN","FBCHEAP",42,0)
CHK F I=0:0 S I=$O(^FBAAI("AC",FBN,I)) Q:I'>0  I $D(^FBAAI(I,0)),$P(^(0),"^",9)="" S FBCHSW=1
"RTN","FBCHEAP",43,0)
 Q
"RTN","FBCHEAP",44,0)
TOT S FBK(1)=0 F I=0:0 S I=$O(^FBAAI("AC",FBN,I)) Q:'I  S FBK(1)=FBK(1)+$P($G(^FBAAI(I,0)),"^",9)
"RTN","FBCHEAP",45,0)
 Q
"RTN","FBCHEP")
0^19^B31293930
"RTN","FBCHEP",1,0)
FBCHEP ;AISC/DMK-ENTER PAYMENT FOR CONTRACT HOSPITAL ;7/7/2003
"RTN","FBCHEP",2,0)
 ;;3.5;FEE BASIS;**4,61**;JAN 30, 1995
"RTN","FBCHEP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHEP",4,0)
 S FBAAPTC="V",FBAAOUT=0
"RTN","FBCHEP",5,0)
RD K FBAAID,FBAAVID S FBRESUB="" D GETVET^FBAAUTL1 G:DFN']"" Q
"RTN","FBCHEP",6,0)
 S FBPROG="I $P(^(0),U,3)=6,($P(^(0),U,9)'[""FB583"")" D GETAUTH^FBAAUTL1 G RD:$D(DUOUT),RD:FTP']""
"RTN","FBCHEP",7,0)
 ;W !!,?25,"<  ASSOCIATED 7078  >",!!
"RTN","FBCHEP",8,0)
 ;S DIC="^FB7078(",DA=FB7078,DR="0;1" D EN^DIQ
"RTN","FBCHEP",9,0)
 I FB7078="" W !,*7,"No 7078 on file for this authorization." G RD
"RTN","FBCHEP",10,0)
 S FBI7078=FB7078_";FB7078("
"RTN","FBCHEP",11,0)
 I $D(^FBAAI("E",FBI7078)) S FBAAIN=$O(^FBAAI("E",FBI7078,0)) G OUT
"RTN","FBCHEP",12,0)
SETINV S FBZ(0)=^FB7078(FB7078,0),FBVET=$P(FBZ(0),"^",3),FBVEN=$P(FBZ(0),"^",2),FBVEN=$P(FBVEN,";",1)
"RTN","FBCHEP",13,0)
 ;
"RTN","FBCHEP",14,0)
EN583 ;Entry from 583 enter payment
"RTN","FBCHEP",15,0)
 I FBAAPTC="R" D ^FBAACO0
"RTN","FBCHEP",16,0)
 S DA=FBVEN D EN1^FBAAVD
"RTN","FBCHEP",17,0)
 I $P($G(^FBAAV(FBVEN,"ADEL")),U)="Y" W !!,*7,"Vendor is flagged for Austin deletion!" G Q
"RTN","FBCHEP",18,0)
 D SITEP^FBAAUTL G Q:FBPOP
"RTN","FBCHEP",19,0)
 ;
"RTN","FBCHEP",20,0)
RDV S FBVE="" S:$D(^FBAAV(DA,"AMS")) FBVE=$P(^("AMS"),"^",2) S:$G(FBVE)'="Y" FBVE="N"
"RTN","FBCHEP",21,0)
 I FBVE="Y" W *7,!!,"Vendor is listed as 'exempt from the pricer'." S DIR(0)="Y",DIR("A")="Do you wish to keep this invoice exempt from the pricer",DIR("B")="Yes" D ^DIR K DIR G Q:$D(DIRUT) S FBVE=$S(Y=1:"Y",1:"N")
"RTN","FBCHEP",22,0)
 I $G(FBVE)'="Y",($P($G(^FBAAV(FBVEN,0)),"^",17)']"") W !!,*7,"Medicare ID Number is needed for this Vendor!" S DIE="^FBAAV(",DR=22 D ^DIE K DIE G Q:$D(DTOUT)!('$L(X))
"RTN","FBCHEP",23,0)
 ;
"RTN","FBCHEP",24,0)
BAT S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,3)=""B9""&($P(^(0),U,5)=DUZ)&($P(^(0),U,15)=""Y"")&($G(^(""ST""))=""O"")" W ! D ^DIC K DIC
"RTN","FBCHEP",25,0)
 G Q:X="^"!(X=""),BAT:Y<0 S FBAABE=+Y,FBY(0)=Y(0),Z1=$P(FBY(0),"^",11),BO=$P(FBY(0),"^",2),Z2=$P(FBY(0),"^",10),FBSTN=$P(FBY(0),"^",8),FBCHOB=FBSTN_"-"_$P(FBY(0),"^",2),FBEXMPT=$P(FBY(0),"^",18) S FBAAOUT=0 D CHK I FBAAOUT K Y,Y(0),FBAABE G BAT
"RTN","FBCHEP",26,0)
 I FBI7078["FB7078(",BO'=$P($P(FBZ(0),U),".") W !,*7,"Obligation number on batch does not match 1358.",!,"Obligation number on batch must be ",$P($P(FBZ(0),U),"."),".",! G BAT
"RTN","FBCHEP",27,0)
 S FBINC=$S($P(FBY(0),"^",10)="":0,1:$P(FBY(0),"^",10)),FBLN=$S($P(FBY(0),"^",11)="":0,1:$P(FBY(0),"^",11))
"RTN","FBCHEP",28,0)
GETNXI D GETNXI^FBAAUTL
"RTN","FBCHEP",29,0)
 W !!,"Invoice # ",FBAAIN," assigned to this Invoice"
"RTN","FBCHEP",30,0)
RIN D GETINDT^FBAACO1 G Q:$G(FBAAOUT)
"RTN","FBCHEP",31,0)
 ; ask patient control number
"RTN","FBCHEP",32,0)
 S FBCSID=$$ASKPCN^FBUTL5() I FBCSID="^" G Q
"RTN","FBCHEP",33,0)
 ; if U/C then get FPPS Claim ID else ask user
"RTN","FBCHEP",34,0)
 I $D(FB583) S FBFPPSC=$P($G(^FB583(FB583,5)),U) W !,"FPPS CLAIM ID: ",$S(FBFPPSC="":"N/A",1:FBFPPSC)
"RTN","FBCHEP",35,0)
 E  S FBFPPSC=$$FPPSC^FBUTL5() I FBFPPSC=-1 G Q
"RTN","FBCHEP",36,0)
 ; if EDI claim then ask FPPS line item
"RTN","FBCHEP",37,0)
 I FBFPPSC]"" S FBFPPSL=$$FPPSL^FBUTL5(,1) I FBFPPSL=-1 G Q
"RTN","FBCHEP",38,0)
 ; compute default Covered Days
"RTN","FBCHEP",39,0)
 S FBCDAYS=$$FMDIFF^XLFDT(FBAAEDT,FBAABDT)
"RTN","FBCHEP",40,0)
 I FBCDAYS=0 S FBCDAYS=1
"RTN","FBCHEP",41,0)
 S FBAAMM=$S(FBAAPTC="R":"",1:1) D PPT^FBAACO1()
"RTN","FBCHEP",42,0)
DIC S DIC="^FBAAI(",DIC(0)="LQ",DLAYGO=162.5,X=FBAAIN D ^DIC G Q:Y<0
"RTN","FBCHEP",43,0)
 S DA=+Y,DIE=DIC,DR="[FBCH ENTER PAYMENT]",DIE("NO^")="" D ^DIE
"RTN","FBCHEP",44,0)
 ; file adjustment reasons
"RTN","FBCHEP",45,0)
 D FILEADJ^FBCHFA(DA_",",.FBADJ)
"RTN","FBCHEP",46,0)
 ; file remittance remarks
"RTN","FBCHEP",47,0)
 D FILERR^FBCHFR(DA_",",.FBRRMK)
"RTN","FBCHEP",48,0)
 K DIE,DIC,D,DA,DR
"RTN","FBCHEP",49,0)
 S $P(FBY(0),"^",10)=FBINC+1,$P(FBY(0),"^",11)=FBLN+1,$P(FBY(0),"^",18)=FBEXMPT,^FBAA(161.7,FBAABE,0)=FBY(0) D:'$D(FBNOPTF) PTF G Q:$D(FB583),RD
"RTN","FBCHEP",50,0)
OUT W !!,*7,?3,"Invoice number ",FBAAIN," has already been entered for this authorization.",!,?3,"Use the Contract Hospital 'Invoice Edit' option if needed.",!
"RTN","FBCHEP",51,0)
 ;check if user wants to add a second invoice for this 7078
"RTN","FBCHEP",52,0)
 W ! S DIR("A")="Want to add another invoice for this episode of care",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR I Y S (FBNOPTF,FBRESUB)=1 G SETINV
"RTN","FBCHEP",53,0)
Q K BO,CNT,D,DA,DAT,DIC,DIE,DLAYGO,DR,FB7078,FBAABDT,FBAABE,FBAAEDT,FBAAID,FBAAIN,FBAAOUT,FBAAPTC,FBDX,FBTT,FBTYPE,FBVEN,FBVET,FBXX,FTP,I,J,FBK,PI,FBPOP,PTYPE,S,FBZ,Z1,FBI,FBPROG,FBRR,FBSW,FBPOV,FBPT,FBY,T,Y,Z1,Z2,ZZ,FBPSA,A,FBI7078
"RTN","FBCHEP",54,0)
 K FBCHOB,FBAUT,FBSEQ,X,FBSITE,F,FBSTN,FBASSOC,FBLOC,DUOUT,PSA,FBCOUNTY,DFN,FBNOPTF,DIRUT,FBVE,FBAAOUT,FBEXMPT,FBAAPN,FBAMTC,FBDEL,FBINC,FBLN,FBRESUB
"RTN","FBCHEP",55,0)
 K FBD1,FBFDC,FBMST,FBTTYPE,FB583
"RTN","FBCHEP",56,0)
 K FBCSID,FBFPPSC,FBFPPSL,FBCDAYS,FBAMTP,FBADJ,FBRRMK
"RTN","FBCHEP",57,0)
 Q
"RTN","FBCHEP",58,0)
PTF I $G(FBVET),$G(FBI7078)["FB583" S:'$G(DFN) DFN=FBVET S Y=$P(FBZ(0),"^",4)_"^"_1 D WAIT^DICD,CREATE^DGPTFCR W !,*7,$S(Y>0:"Non-VA PTF Record Created.",1:"Unable to create Non VA PTF Record."),!
"RTN","FBCHEP",59,0)
 Q
"RTN","FBCHEP",60,0)
PRBT ;Entry point for patient reimbursement option
"RTN","FBCHEP",61,0)
 ;
"RTN","FBCHEP",62,0)
 S FBAAPTC="R"
"RTN","FBCHEP",63,0)
 G RD
"RTN","FBCHEP",64,0)
CHK ;Check for vendor and batch being exempt from pricer
"RTN","FBCHEP",65,0)
 I $G(FBVE)'="Y"&($G(FBVE)'="N") S FBVE="N"
"RTN","FBCHEP",66,0)
 I $G(FBEXMPT)="Y" Q:FBVE="Y"  G OPEN:FBVE="N"
"RTN","FBCHEP",67,0)
 I $G(FBEXMPT)="N" Q:FBVE="N"  G OPEN:FBVE="Y"
"RTN","FBCHEP",68,0)
 I '$G(FBEXMPT)&($G(Z2)'>0) S FBEXMPT=FBVE Q
"RTN","FBCHEP",69,0)
 I '$G(FBEXMPT)&($G(Z2)>0) S $P(^FBAA(161.7,FBAABE,0),"^",18)="N",FBEXMPT="N" G CHK
"RTN","FBCHEP",70,0)
 Q
"RTN","FBCHEP",71,0)
OPEN W *7,!!,"This Invoice may not be added to Batch # ",+FBY(0),".",!,"***You may not add a ",$S(FBVE="Y":"pricer exempt",1:"non-exempt")," invoice to a ",$S(FBVE="Y":"non-exempt",1:"pricer exempt")," batch.***"
"RTN","FBCHEP",72,0)
 S DIR(0)="Y",DIR("A")="Do you want to open a new batch at this time",DIR("B")="Y" D ^DIR K DIR S:$D(DIRUT)!('Y) FBAAOUT=1 Q:FBAAOUT  D RCHOP^FBAAOB S FBEXMPT=FBVE D
"RTN","FBCHEP",73,0)
 .S FBY(0)=$G(^FBAA(161.7,FBAABE,0)),Z1=$P(FBY(0),"^",11),BO=$P(FBY(0),"^",2),Z2=$P(FBY(0),"^",10),FBSTN=$P(FBY(0),"^",8),FBCHOB=FBSTN_"-"_$P(FBY(0),"^",2)
"RTN","FBCHEP",74,0)
 Q
"RTN","FBCHEP1")
0^22^B11099974
"RTN","FBCHEP1",1,0)
FBCHEP1 ;AISC/DMK-EDIT PAYMENT FOR CONTRACT HOSPITAL ;7/8/2003
"RTN","FBCHEP1",2,0)
 ;;3.5;FEE BASIS;**38,61**;JAN 30, 1995
"RTN","FBCHEP1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHEP1",4,0)
EDIT ;ENTRY POINT TO EDIT PAYMENT
"RTN","FBCHEP1",5,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBCHEP1",6,0)
BT W ! S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,3)=""B9""&($P(^(0),U,15)=""Y"")",DIC("S")=$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):DIC("S"),1:DIC("S")_"&($P(^(0),U,5)=DUZ)") D ^DIC
"RTN","FBCHEP1",7,0)
 G END:X=""!(X="^"),BT:Y<0 S FBN=+Y,FBN(0)=Y(0)
"RTN","FBCHEP1",8,0)
 S FBEXMPT=$P(FBN(0),"^",18)
"RTN","FBCHEP1",9,0)
 S FBSTAT=^FBAA(161.7,FBN,"ST"),FBBAMT=$S($P(FBN(0),"^",9)="":0,1:$P(FBN(0),"^",9))
"RTN","FBCHEP1",10,0)
 I FBSTAT="C"&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,?3,"You must Reopen the batch prior to editting the invoice.",! G END
"RTN","FBCHEP1",11,0)
 I FBSTAT="S"!(FBSTAT="P")!(FBSTAT="R")&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,?3,"You must be a holder of the 'FBAASUPERVISOR' security key",!,?3,"to edit this invoice.",! G END
"RTN","FBCHEP1",12,0)
 I FBSTAT="T"!(FBSTAT="V") W !!,?3,"Batch has already been sent to Austin for payment.",! G END
"RTN","FBCHEP1",13,0)
INV W ! S DIC="^FBAAI(",DIC(0)="AEQZ",DIC("S")="I $P(^(0),U,17)=FBN" D ^DIC K DIC("S") G BT:X=""!(X="^"),INV:Y<0 S FBI=+Y
"RTN","FBCHEP1",14,0)
 S FBK=$S($P(^FBAAI(FBI,0),"^",9)="":0,1:$P(^(0),"^",9))
"RTN","FBCHEP1",15,0)
 S FBLISTC="",FBAAI=FBI W @IOF D START^FBCHDI2 S FBI=FBAAI I $P(^FBAAI(FBI,0),"^",9)="" S FBPRICE=""
"RTN","FBCHEP1",16,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBCHEP1",17,0)
 D
"RTN","FBCHEP1",18,0)
 . N FBY
"RTN","FBCHEP1",19,0)
 . S FBY=$G(^FBAAI(FBI,0))
"RTN","FBCHEP1",20,0)
 . S FB1725=$S($P(FBY,U,5)["FB583":+$P($G(^FB583(+$P(FBY,U,5),0)),U,28),1:0)
"RTN","FBCHEP1",21,0)
 ; get values of FPPS Claim ID and Line Item
"RTN","FBCHEP1",22,0)
 S FBFPPSC=$P($G(^FBAAI(FBI,3)),U)
"RTN","FBCHEP1",23,0)
 S FBFPPSL=$P($G(^FBAAI(FBI,3)),U,2)
"RTN","FBCHEP1",24,0)
 ; load current adjustment data
"RTN","FBCHEP1",25,0)
 D LOADADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHEP1",26,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBCHEP1",27,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBCHEP1",28,0)
 ; load current remittance remark data
"RTN","FBCHEP1",29,0)
 D LOADRR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHEP1",30,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBCHEP1",31,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBCHEP1",32,0)
 S (DIE,DIC)="^FBAAI(",DIC(0)="AEQM",DA=FBI,DR="[FBCH EDIT PAYMENT]" W ! D ^DIE
"RTN","FBCHEP1",33,0)
 ; if adjustment data changed then file
"RTN","FBCHEP1",34,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHEP1",35,0)
 ; if remit remark data changed then file
"RTN","FBCHEP1",36,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHEP1",37,0)
 K FBAAMM,FBAAMM1
"RTN","FBCHEP1",38,0)
 S FBNK=$P(^FBAAI(FBI,0),"^",9)
"RTN","FBCHEP1",39,0)
 I FBNK-FBK S $P(^FBAA(161.7,FBN,0),"^",9)=FBBAMT+(FBNK-FBK)
"RTN","FBCHEP1",40,0)
END K DA,DFN,DIC,DIE,DR,FBAAOUT,FBDX,FBI,FBIN,FBLISTC,FBN,FBPROC,FBSTAT,FBVEN,FBVID,J,K,L,POP,Q,VA,VADM,X,FBIFN,Y,FBPRICE,FBK,FBNK,FB583,FBAAPN,FBASSOC,FBDEL,FBLOC,DAT
"RTN","FBCHEP1",41,0)
 K CNT,D0,FB7078,FBAABDT,FBAAEDT,FBASSOC,FBAUT,FBLOC,FBPROG,FBPSA,FBPT,FBRR,FBTT,FBTYPE,FBXX,FTP,PI,PTYPE,T,Z,ZZ,F,FBPOV,I,TA,VAL,DUOUT,FBVET,FBBAMT,FBAAI,FBEXMPT,FB1725,FBPAMT
"RTN","FBCHEP1",42,0)
 K FBFPPSC,FBFPPSL,FBADJ,FBADJD,FBRRMK,FBRRMKD
"RTN","FBCHEP1",43,0)
 D END^FBCHDI
"RTN","FBCHEP1",44,0)
 Q
"RTN","FBCHFA")
0^20^B10497327
"RTN","FBCHFA",1,0)
FBCHFA ;WOIFO/SAB-FILE ADJUSTMENTS FOR CH/CNH PAYMENT ;9/9/2003
"RTN","FBCHFA",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBCHFA",3,0)
 Q
"RTN","FBCHFA",4,0)
FILEADJ(FBIENS,FBADJ) ; File Adjustments
"RTN","FBCHFA",5,0)
 ;
"RTN","FBCHFA",6,0)
 ; Input
"RTN","FBCHFA",7,0)
 ;   FBIENS -  required, internal entry numbers for file 162.5
"RTN","FBCHFA",8,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBCHFA",9,0)
 ;   FBADJ   - required, array passed by reference
"RTN","FBCHFA",10,0)
 ;             array of adjustments to file
"RTN","FBCHFA",11,0)
 ;             array does not have to contain any data or be defined
"RTN","FBCHFA",12,0)
 ;             format
"RTN","FBCHFA",13,0)
 ;               FBADJ(#)=FBADJR^FBADJG^FBADJA
"RTN","FBCHFA",14,0)
 ;             where
"RTN","FBCHFA",15,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBCHFA",16,0)
 ;               FBADJR = adjustment reason (internal value file 162.91)
"RTN","FBCHFA",17,0)
 ;               FBADJG = adjustment group (internal value file 162.92)
"RTN","FBCHFA",18,0)
 ;               FBADJA = adjustment amount (dollar value)
"RTN","FBCHFA",19,0)
 ; Output
"RTN","FBCHFA",20,0)
 ;   Data in File 162.5 will be modified
"RTN","FBCHFA",21,0)
 ;
"RTN","FBCHFA",22,0)
 N FB,FBFDA,FBHIGH,FBI,FBMSR,FBSC,FBSIENS,FBTAS
"RTN","FBCHFA",23,0)
 ;
"RTN","FBCHFA",24,0)
 ; delete adjustment reasons currently on file
"RTN","FBCHFA",25,0)
 D GETS^DIQ(162.5,FBIENS,"58*","","FB")
"RTN","FBCHFA",26,0)
 K FBFDA
"RTN","FBCHFA",27,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.558,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBCHFA",28,0)
 . S FBFDA(162.558,FBSIENS,.01)="@"
"RTN","FBCHFA",29,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBCHFA",30,0)
 ;
"RTN","FBCHFA",31,0)
 ; delete suspend data currently on file
"RTN","FBCHFA",32,0)
 K FBFDA
"RTN","FBCHFA",33,0)
 S FBFDA(162.5,FBIENS,9)="@"
"RTN","FBCHFA",34,0)
 S FBFDA(162.5,FBIENS,10)="@"
"RTN","FBCHFA",35,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBCHFA",36,0)
 ;
"RTN","FBCHFA",37,0)
 ; delete description of suspension currently on file
"RTN","FBCHFA",38,0)
 D WP^DIE(162.5,FBIENS,18,,"@")
"RTN","FBCHFA",39,0)
 ;
"RTN","FBCHFA",40,0)
 ; compute total amount suspended and determine most significant reason
"RTN","FBCHFA",41,0)
 ; loop thru reasons
"RTN","FBCHFA",42,0)
 S (FBTAS,FBI,FBHIGH)=0,FBMSR=""
"RTN","FBCHFA",43,0)
 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBCHFA",44,0)
 . N FBADJA
"RTN","FBCHFA",45,0)
 . ; get adjustment amount for reason
"RTN","FBCHFA",46,0)
 . S FBADJA=$P(FBADJ(FBI),U,3)
"RTN","FBCHFA",47,0)
 . ; add amount to total
"RTN","FBCHFA",48,0)
 . S FBTAS=FBTAS+FBADJA
"RTN","FBCHFA",49,0)
 . ; check if reason has largest absolute $ impact
"RTN","FBCHFA",50,0)
 . I $FN(FBADJA,"-")>$G(FBHIGH) S FBMSR=FBI,FBHIGH=$FN(FBADJA,"-")
"RTN","FBCHFA",51,0)
 ;
"RTN","FBCHFA",52,0)
 I +FBTAS=0 Q  ; quit since total amount suspended is 0
"RTN","FBCHFA",53,0)
 ;
"RTN","FBCHFA",54,0)
 ; file adjustments from input array
"RTN","FBCHFA",55,0)
 K FBFDA
"RTN","FBCHFA",56,0)
 S FBI=0 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBCHFA",57,0)
 . S FBFDA(162.558,"+"_FBI_","_FBIENS,.01)=$P(FBADJ(FBI),U)
"RTN","FBCHFA",58,0)
 . S FBFDA(162.558,"+"_FBI_","_FBIENS,1)=$P(FBADJ(FBI),U,2)
"RTN","FBCHFA",59,0)
 . S FBFDA(162.558,"+"_FBI_","_FBIENS,2)=+$P(FBADJ(FBI),U,3)
"RTN","FBCHFA",60,0)
 I $D(FBFDA) D UPDATE^DIE("","FBFDA")
"RTN","FBCHFA",61,0)
 ;
"RTN","FBCHFA",62,0)
 ; file derived suspend data
"RTN","FBCHFA",63,0)
 K FBFDA
"RTN","FBCHFA",64,0)
 S FBFDA(162.5,FBIENS,9)=FBTAS
"RTN","FBCHFA",65,0)
 I FBMSR,$P(FBADJ(FBMSR),U) S FBSC=$$GET1^DIQ(161.91,$P(FBADJ(FBMSR),U),3)
"RTN","FBCHFA",66,0)
 I '$G(FBSC) S FBSC=4
"RTN","FBCHFA",67,0)
 S FBFDA(162.5,FBIENS,10)=FBSC
"RTN","FBCHFA",68,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBCHFA",69,0)
 ;
"RTN","FBCHFA",70,0)
 ; if suspend code = 4 (other) then file description of suspension
"RTN","FBCHFA",71,0)
 I FBSC=4,FBMSR,$P(FBADJ(FBMSR),U) D WP^DIE(162.5,FBIENS,18,,"^FB(161.91,"_$P(FBADJ(FBMSR),U)_",4)")
"RTN","FBCHFA",72,0)
 D MSG^DIALOG()
"RTN","FBCHFA",73,0)
 ;
"RTN","FBCHFA",74,0)
 Q
"RTN","FBCHFA",75,0)
 ;
"RTN","FBCHFA",76,0)
LOADADJ(FBIENS,FBADJ) ; Load Adjustments
"RTN","FBCHFA",77,0)
 ; Input
"RTN","FBCHFA",78,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.5
"RTN","FBCHFA",79,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBCHFA",80,0)
 ;   FBADJ   - required, array passed by reference
"RTN","FBCHFA",81,0)
 ;             array to load adjustments into
"RTN","FBCHFA",82,0)
 ; Output
"RTN","FBCHFA",83,0)
 ;   FBADJ   - the FBADJ input array passed by reference will be modified
"RTN","FBCHFA",84,0)
 ;             format
"RTN","FBCHFA",85,0)
 ;               FBADJ(#)=FBADJR^FBADJG^FBADJA
"RTN","FBCHFA",86,0)
 ;             where
"RTN","FBCHFA",87,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBCHFA",88,0)
 ;               FBADJR = adjustment reason (internal value file 162.91)
"RTN","FBCHFA",89,0)
 ;               FBADJG = adjustment group (internal value file 162.92)
"RTN","FBCHFA",90,0)
 ;               FBADJA = adjustment amount (dollar value)
"RTN","FBCHFA",91,0)
 ;             if no adjustments are on file then the array will be
"RTN","FBCHFA",92,0)
 ;               undefined
"RTN","FBCHFA",93,0)
 N FB,FBC,FBI,FBSIENS
"RTN","FBCHFA",94,0)
 ;
"RTN","FBCHFA",95,0)
 K FBADJ
"RTN","FBCHFA",96,0)
 ;
"RTN","FBCHFA",97,0)
 S FBC=0
"RTN","FBCHFA",98,0)
 D GETS^DIQ(162.5,FBIENS,"58*","I","FB")
"RTN","FBCHFA",99,0)
 D MSG^DIALOG()
"RTN","FBCHFA",100,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.558,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBCHFA",101,0)
 . S FBC=FBC+1
"RTN","FBCHFA",102,0)
 . S FBADJ(FBC)=FB(162.558,FBSIENS,.01,"I")
"RTN","FBCHFA",103,0)
 . S FBADJ(FBC)=FBADJ(FBC)_U_FB(162.558,FBSIENS,1,"I")
"RTN","FBCHFA",104,0)
 . S FBADJ(FBC)=FBADJ(FBC)_U_FB(162.558,FBSIENS,2,"I")
"RTN","FBCHFA",105,0)
 ;
"RTN","FBCHFA",106,0)
 Q
"RTN","FBCHFA",107,0)
 ;
"RTN","FBCHFA",108,0)
ADJLRA(FBIENS) ; Adjustment Reason^Amount List Extrinsic Function
"RTN","FBCHFA",109,0)
 ; Input
"RTN","FBCHFA",110,0)
 ;   FBIENS -  required, internal entry number for file 162.5
"RTN","FBCHFA",111,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBCHFA",112,0)
 ; Result
"RTN","FBCHFA",113,0)
 ;   string containing sorted list (by external code) of reason^amounts
"RTN","FBCHFA",114,0)
 ;   format
"RTN","FBCHFA",115,0)
 ;      FBADJE 1, FBADJE 2^FBADJA 1,FBADJA2
"RTN","FBCHFA",116,0)
 ;   where
"RTN","FBCHFA",117,0)
 ;      FBADJE = adjustment reason code (external value)
"RTN","FBCHFA",118,0)
 ;      FBADJA = adjustment amount
"RTN","FBCHFA",119,0)
 N FBRET,FBADJ,FBADJL,FBADJLA,FBADJLR
"RTN","FBCHFA",120,0)
 D LOADADJ^FBCHFA(FBIENS,.FBADJ)
"RTN","FBCHFA",121,0)
 S FBADJL=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBCHFA",122,0)
 S FBADJLR=$$ADJLR^FBUTL2(FBADJL)
"RTN","FBCHFA",123,0)
 S FBADJLA=$$ADJLA^FBUTL2(FBADJL)
"RTN","FBCHFA",124,0)
 S FBRET=FBADJLR_U_FBADJLA
"RTN","FBCHFA",125,0)
 Q FBRET
"RTN","FBCHFA",126,0)
 ;
"RTN","FBCHFA",127,0)
 ;FBCHFA
"RTN","FBCHFED")
0^46^B11304560
"RTN","FBCHFED",1,0)
FBCHFED ;WOIFO/SAB-FPPS DATA EDIT INPATIENT INVOICE ;8/12/2003
"RTN","FBCHFED",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBCHFED",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHFED",4,0)
 ;
"RTN","FBCHFED",5,0)
 I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) D  Q
"RTN","FBCHFED",6,0)
 . W $C(7),!,"You must hold the FBAASUPERVISOR security key to use this option!"
"RTN","FBCHFED",7,0)
 ;
"RTN","FBCHFED",8,0)
 S FBAAOUT=0
"RTN","FBCHFED",9,0)
 F  D INVED Q:FBAAOUT
"RTN","FBCHFED",10,0)
 D CLEAN
"RTN","FBCHFED",11,0)
 Q
"RTN","FBCHFED",12,0)
 ;
"RTN","FBCHFED",13,0)
INVED ; Invoice Edit
"RTN","FBCHFED",14,0)
 ;
"RTN","FBCHFED",15,0)
ASKINV ; Select Invoice to Edit
"RTN","FBCHFED",16,0)
 W ! S DIC="^FBAAI(",DIC(0)="AEQZ"
"RTN","FBCHFED",17,0)
 S DIC("S")="I $P($G(^(3)),U)]""""" ; screen on EDI claim
"RTN","FBCHFED",18,0)
 D ^DIC K DIC I Y'>0 S FBAAOUT=1 Q
"RTN","FBCHFED",19,0)
 S FBDA=+Y
"RTN","FBCHFED",20,0)
 ;
"RTN","FBCHFED",21,0)
 I $$CKFPPS^FBFHLL(FBDA)'=1 D  G ASKINV
"RTN","FBCHFED",22,0)
 . W !?5,"Invoice ",FBDA," has not been transmitted to FPPS."
"RTN","FBCHFED",23,0)
 ;
"RTN","FBCHFED",24,0)
 ; save FPPS Claim ID and Line Item data prior to edit session
"RTN","FBCHFED",25,0)
 S (FBFPPSC,FBFPPSC(0))=$P($G(^FBAAI(FBDA,3)),U)
"RTN","FBCHFED",26,0)
 S (FBFPPSL,FBFPPSL(0))=$P($G(^FBAAI(FBDA,3)),U,2)
"RTN","FBCHFED",27,0)
 S FBINVCHG=0 ; initialize invoice changed flag
"RTN","FBCHFED",28,0)
 ;
"RTN","FBCHFED",29,0)
EDITFC ; edit FPPS CLAIM ID
"RTN","FBCHFED",30,0)
 S FBX=$$FPPSC^FBUTL5(1,FBFPPSC)
"RTN","FBCHFED",31,0)
 I FBX=-1 S FBAAOUT=1 G INVEDX
"RTN","FBCHFED",32,0)
 ; need to verify if following restriction is appropriate
"RTN","FBCHFED",33,0)
 I FBX="" D  G EDITFC
"RTN","FBCHFED",34,0)
 . W !,$C(7),"Can not change EDI from YES to NO on invoice that has been sent to FPPS!"
"RTN","FBCHFED",35,0)
 S FBFPPSC=FBX
"RTN","FBCHFED",36,0)
 ;
"RTN","FBCHFED",37,0)
 ; if FPPS CLAIM ID changed, then update file and audit log
"RTN","FBCHFED",38,0)
 I FBFPPSC'=FBFPPSC(0) D
"RTN","FBCHFED",39,0)
 . ; set invoice changed flag
"RTN","FBCHFED",40,0)
 . S FBINVCHG=1
"RTN","FBCHFED",41,0)
 . ;
"RTN","FBCHFED",42,0)
 . ; file data in 162.5
"RTN","FBCHFED",43,0)
 . K FBFDA
"RTN","FBCHFED",44,0)
 . S FBFDA(162.5,FBDA_",",56)=$S(FBFPPSC="":"@",1:FBFPPSC)
"RTN","FBCHFED",45,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBCHFED",46,0)
 . ;
"RTN","FBCHFED",47,0)
 . ; add record to audit log
"RTN","FBCHFED",48,0)
 . K FBFDA
"RTN","FBCHFED",49,0)
 . S FBFDA(163.7,"+1,",.01)=FBDA ; invoice number
"RTN","FBCHFED",50,0)
 . S FBFDA(163.7,"+1,",1)=$$NOW^XLFDT() ; date/time changed
"RTN","FBCHFED",51,0)
 . S FBFDA(163.7,"+1,",2)=162.5 ; file #
"RTN","FBCHFED",52,0)
 . S FBFDA(163.7,"+1,",3)=FBDA_"," ; iens
"RTN","FBCHFED",53,0)
 . S FBFDA(163.7,"+1,",4)=56 ; field #
"RTN","FBCHFED",54,0)
 . S FBFDA(163.7,"+1,",5)=FBFPPSC(0) ; old value
"RTN","FBCHFED",55,0)
 . S FBFDA(163.7,"+1,",6)=FBFPPSC ; new value
"RTN","FBCHFED",56,0)
 . S FBFDA(163.7,"+1,",7)=DUZ ; user
"RTN","FBCHFED",57,0)
 . I $D(FBFDA) D UPDATE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBCHFED",58,0)
 ;
"RTN","FBCHFED",59,0)
 ;
"RTN","FBCHFED",60,0)
EDITFL ; edit FPPS Line Item
"RTN","FBCHFED",61,0)
 W !
"RTN","FBCHFED",62,0)
 S FBX=$$FPPSL^FBUTL5(FBFPPSL,1)
"RTN","FBCHFED",63,0)
 I FBX=-1 S FBAAOUT=1 G INVEDX
"RTN","FBCHFED",64,0)
 S FBFPPSL=FBX
"RTN","FBCHFED",65,0)
 ;
"RTN","FBCHFED",66,0)
 ; if FPPS LINE ITEM changed, then update file and audit log
"RTN","FBCHFED",67,0)
 I FBFPPSL'=FBFPPSL(0) D
"RTN","FBCHFED",68,0)
 . ; set invoice changed flag
"RTN","FBCHFED",69,0)
 . S FBINVCHG=1
"RTN","FBCHFED",70,0)
 . ;
"RTN","FBCHFED",71,0)
 . ; file data in 162.5
"RTN","FBCHFED",72,0)
 . K FBFDA
"RTN","FBCHFED",73,0)
 . S FBFDA(162.5,FBDA_",",57)=FBFPPSL
"RTN","FBCHFED",74,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBCHFED",75,0)
 . ;
"RTN","FBCHFED",76,0)
 . ; add record to audit log
"RTN","FBCHFED",77,0)
 . K FBFDA
"RTN","FBCHFED",78,0)
 . S FBFDA(163.7,"+1,",.01)=FBDA ; invoice number
"RTN","FBCHFED",79,0)
 . S FBFDA(163.7,"+1,",1)=$$NOW^XLFDT() ; date/time changed
"RTN","FBCHFED",80,0)
 . S FBFDA(163.7,"+1,",2)=162.5 ; file #
"RTN","FBCHFED",81,0)
 . S FBFDA(163.7,"+1,",3)=FBDA_"," ; iens
"RTN","FBCHFED",82,0)
 . S FBFDA(163.7,"+1,",4)=57 ; field #
"RTN","FBCHFED",83,0)
 . S FBFDA(163.7,"+1,",5)=FBFPPSL(0) ; old value
"RTN","FBCHFED",84,0)
 . S FBFDA(163.7,"+1,",6)=FBFPPSL ; new value
"RTN","FBCHFED",85,0)
 . S FBFDA(163.7,"+1,",7)=DUZ ; user
"RTN","FBCHFED",86,0)
 . I $D(FBFDA) D UPDATE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBCHFED",87,0)
 ;
"RTN","FBCHFED",88,0)
INVEDX ; Invoice Edit Exit
"RTN","FBCHFED",89,0)
 ; if invoice changed then queue for retransmit to FPPS
"RTN","FBCHFED",90,0)
 I FBINVCHG D FILEQUE^FBFHLL(FBDA,9)
"RTN","FBCHFED",91,0)
 Q
"RTN","FBCHFED",92,0)
 ;
"RTN","FBCHFED",93,0)
CLEAN K DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBCHFED",94,0)
 K FBAAOUT,FBDA,FBFDA,FBFPPSC,FBFPPSL,FBINVCHG,FBX
"RTN","FBCHFED",95,0)
 Q
"RTN","FBCHFED",96,0)
 ;FBCHFED
"RTN","FBCHFR")
0^21^B2637264
"RTN","FBCHFR",1,0)
FBCHFR ;WOIFO/SAB-FILE REMITTANCE REMARKS FOR CH/CNH PAYMENT ;7/17/2003
"RTN","FBCHFR",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBCHFR",3,0)
 Q
"RTN","FBCHFR",4,0)
FILERR(FBIENS,FBRRMK) ; File Remittance Remarks
"RTN","FBCHFR",5,0)
 ;
"RTN","FBCHFR",6,0)
 ; Input
"RTN","FBCHFR",7,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.5
"RTN","FBCHFR",8,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBCHFR",9,0)
 ;   FBRRMK -  required, array passed by reference
"RTN","FBCHFR",10,0)
 ;             array of remittance remarks to file
"RTN","FBCHFR",11,0)
 ;             array does not have to contain any data or be defined
"RTN","FBCHFR",12,0)
 ;             format
"RTN","FBCHFR",13,0)
 ;               FBRRMK(#)=FBRRMKC
"RTN","FBCHFR",14,0)
 ;             where
"RTN","FBCHFR",15,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBCHFR",16,0)
 ;               FBRRMKC = remittance remark (internal value file 162.93)
"RTN","FBCHFR",17,0)
 ; Output
"RTN","FBCHFR",18,0)
 ;   Data in File 162.5 will be modified
"RTN","FBCHFR",19,0)
 ;
"RTN","FBCHFR",20,0)
 N FB,FBFDA,FBI,FBSIENS
"RTN","FBCHFR",21,0)
 ;
"RTN","FBCHFR",22,0)
 ; delete remitance remarks currently on file
"RTN","FBCHFR",23,0)
 D GETS^DIQ(162.5,FBIENS,"59*","","FB")
"RTN","FBCHFR",24,0)
 K FBFDA
"RTN","FBCHFR",25,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.559,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBCHFR",26,0)
 . S FBFDA(162.559,FBSIENS,.01)="@"
"RTN","FBCHFR",27,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBCHFR",28,0)
 ;
"RTN","FBCHFR",29,0)
 ; file remarks from input array
"RTN","FBCHFR",30,0)
 K FBFDA
"RTN","FBCHFR",31,0)
 S FBI=0 F  S FBI=$O(FBRRMK(FBI)) Q:'FBI  D
"RTN","FBCHFR",32,0)
 . S FBFDA(162.559,"+"_FBI_","_FBIENS,.01)=$P(FBRRMK(FBI),U)
"RTN","FBCHFR",33,0)
 I $D(FBFDA) D UPDATE^DIE("","FBFDA")
"RTN","FBCHFR",34,0)
 ;
"RTN","FBCHFR",35,0)
 Q
"RTN","FBCHFR",36,0)
 ;
"RTN","FBCHFR",37,0)
LOADRR(FBIENS,FBRRMK) ; Load Remittance Remarks
"RTN","FBCHFR",38,0)
 ; Input
"RTN","FBCHFR",39,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.5
"RTN","FBCHFR",40,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBCHFR",41,0)
 ;   FBRRMK - required, array passed by reference
"RTN","FBCHFR",42,0)
 ;             array to load adjustments into
"RTN","FBCHFR",43,0)
 ; Output
"RTN","FBCHFR",44,0)
 ;   FBRRMK - the FBRRMK input array passed by reference will be modified
"RTN","FBCHFR",45,0)
 ;             format
"RTN","FBCHFR",46,0)
 ;               FBRRMK(#)=FBRRMKC
"RTN","FBCHFR",47,0)
 ;             where
"RTN","FBCHFR",48,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBCHFR",49,0)
 ;               FBRRMKC = remittance remark (internal value file 162.93)
"RTN","FBCHFR",50,0)
 ;             if no remarks are on file then the array will be undefined
"RTN","FBCHFR",51,0)
 N FB,FBC,FBI,FBSIENS
"RTN","FBCHFR",52,0)
 ;
"RTN","FBCHFR",53,0)
 K FBRRMK
"RTN","FBCHFR",54,0)
 ;
"RTN","FBCHFR",55,0)
 S FBC=0
"RTN","FBCHFR",56,0)
 D GETS^DIQ(162.5,FBIENS,"59*","I","FB")
"RTN","FBCHFR",57,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.559,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBCHFR",58,0)
 . S FBC=FBC+1
"RTN","FBCHFR",59,0)
 . S FBRRMK(FBC)=FB(162.559,FBSIENS,.01,"I")
"RTN","FBCHFR",60,0)
 ;
"RTN","FBCHFR",61,0)
 Q
"RTN","FBCHFR",62,0)
 ;
"RTN","FBCHFR",63,0)
RRL(FBIENS) ; Remittance Remarks List Extrinsic Function
"RTN","FBCHFR",64,0)
 ; Input
"RTN","FBCHFR",65,0)
 ;   FBIENS -  required, internal entry number for file 162.5
"RTN","FBCHFR",66,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBCHFR",67,0)
 ; Result
"RTN","FBCHFR",68,0)
 ;   string containing sorted list (by external code) of remarks
"RTN","FBCHFR",69,0)
 ;   format
"RTN","FBCHFR",70,0)
 ;      FBRRMKCE 1, FBRRMKCE 2
"RTN","FBCHFR",71,0)
 ;   where
"RTN","FBCHFR",72,0)
 ;      FBRRMKCE = remittance remark code (external value)
"RTN","FBCHFR",73,0)
 N FBRET,FBRRMK
"RTN","FBCHFR",74,0)
 D LOADRR^FBCHFR(FBIENS,.FBRRMK)
"RTN","FBCHFR",75,0)
 S FBRET=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBCHFR",76,0)
 Q FBRET
"RTN","FBCHFR",77,0)
 ;
"RTN","FBCHFR",78,0)
 ;FBCHFR
"RTN","FBCHPET")
0^18^B31141487
"RTN","FBCHPET",1,0)
FBCHPET ;AISC/DMK-EDIT ANCILLARY PAYMENT ;7/13/2003
"RTN","FBCHPET",2,0)
 ;;3.5;FEE BASIS;**4,38,61**;JAN 30, 1995
"RTN","FBCHPET",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHPET",4,0)
 S FY=$E(DT,1,3)+1700+$S($E(4,5)>9:1,1:0)
"RTN","FBCHPET",5,0)
GETPT I $G(BAT) D
"RTN","FBCHPET",6,0)
 .I '$D(^FBAAC("AC",+BAT)) F I=9,10,11 S $P(^FBAA(161.7,+BAT,0),U,I)=""
"RTN","FBCHPET",7,0)
 .I $D(^FBAAC("AC",+BAT)) D  S $P(^FBAA(161.7,+BAT,0),U,11)=I,$P(^(0),U,9)=$G(FBTOT) K I,FBTOT
"RTN","FBCHPET",8,0)
 ..N J,K,L,M S (I,J,K,L,M,FBTOT)=0
"RTN","FBCHPET",9,0)
 ..F  S J=$O(^FBAAC("AC",+BAT,J)) Q:'J  F  S K=$O(^FBAAC("AC",+BAT,J,K)) Q:'K  F  S L=$O(^FBAAC("AC",+BAT,J,K,L)) Q:'L  F  S M=$O(^FBAAC("AC",+BAT,J,K,L,M)) Q:'M  I $D(^FBAAC(J,1,K,1,L,1,M,0)) S I=I+1,FBTOT=FBTOT+$P(^(0),U,3)
"RTN","FBCHPET",10,0)
 W !! S DIC="^FBAAC(",DIC(0)="AEQM" D ^DIC G END:X="^"!(X=""),GETPT:Y<0 S (DFN,FBDA(3))=+Y
"RTN","FBCHPET",11,0)
 S:'$D(^FBAAC(DFN,1,0)) ^FBAAC(DFN,1,0)="^162.01P^0^0"
"RTN","FBCHPET",12,0)
 S DIC=DIC_DFN_",1,"
"RTN","FBCHPET",13,0)
GETVD W !! S DIC(0)="AEQM" D ^DIC G GETPT:X="^"!(X=""),GETVD:Y<0 S (FBV,FBVD,FBDA(2))=+Y
"RTN","FBCHPET",14,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,0)) ^FBAAC(DFN,1,FBDA(2),1,0)="^162.02DA^0^0"
"RTN","FBCHPET",15,0)
 S DIC=DIC_FBVD_",1,"
"RTN","FBCHPET",16,0)
GETDT S DIC(0)="AEQM",DIC("A")="Date of Service: " D ^DIC K DIC("A") G GETPT:X="^"!(X=""),GETDT:Y<0 S (FBSD,FBSDI,FBDA(1))=+Y,FBAADT=$P(Y,U,2)
"RTN","FBCHPET",17,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)) ^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)="^162.03A^0^0"
"RTN","FBCHPET",18,0)
 S FBZ=DIC_FBSD_",1,"
"RTN","FBCHPET",19,0)
SERV S DA(3)=FBDA(3),DA(2)=FBDA(2),DA(1)=FBDA(1)
"RTN","FBCHPET",20,0)
 S DIC("W")="N FBX S FBX=$$MODL^FBAAUTL4(""^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,+Y,""""M"""")"",""E"") W:FBX]"""" ""    CPT Modifier(s): "",FBX Q"
"RTN","FBCHPET",21,0)
 S DIC=FBZ,DIC(0)="AEQMZ" D ^DIC G GETPT:X="^"!(X=""),SERV:Y<0 S (FBSV,FBAACPI,FBDA)=+Y,BAT=$P(Y(0),U,8),FBDUZ=$P(Y(0),U,7),(FBAACP,FBAACP(0))=$P(Y,U,2),K=$P(Y(0),U,3),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBCHPET",22,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBCHPET",23,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBCHPET",24,0)
 I FBDUZ'=DUZ&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"Sorry,only the clerk who entered the payment ",!," or a supervisor can edit this payment." G GETPT
"RTN","FBCHPET",25,0)
 S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBCHPET",26,0)
 S FBFSAMT(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,12)
"RTN","FBCHPET",27,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBCHPET",28,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBCHPET",29,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_FBDA(3)_",1,"_FBDA(2)_",1,"_FBDA(1)_",1,"_FBDA_",""M"")")
"RTN","FBCHPET",30,0)
 ; load current adjustment data
"RTN","FBCHPET",31,0)
 D LOADADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBCHPET",32,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBCHPET",33,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBCHPET",34,0)
 ; load current remittance remark data
"RTN","FBCHPET",35,0)
 D LOADRR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBCHPET",36,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBCHPET",37,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBCHPET",38,0)
 S FBFPPSC(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U)
"RTN","FBCHPET",39,0)
 S FBFPPSC=FBFPPSC(0)
"RTN","FBCHPET",40,0)
 S FBFPPSL(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U,2)
"RTN","FBCHPET",41,0)
 S FBFPPSL=FBFPPSL(0)
"RTN","FBCHPET",42,0)
 G:BAT']"" EDIT
"RTN","FBCHPET",43,0)
 I $P($G(^FBAA(161.7,BAT,"ST")),"^",1)="S"!($P($G(^FBAA(161.7,BAT,"ST")),"^",1)="T")&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"Sorry, only the Supervisor can edit a payment once the batch has been released." G GETPT
"RTN","FBCHPET",44,0)
 I $P($G(^FBAA(161.7,BAT,"ST")),"^",1)="V" W !!,*7,"Sorry,you cannot edit a payment once the batch has been Finalized." G GETPT
"RTN","FBCHPET",45,0)
EDIT S DA=FBSV
"RTN","FBCHPET",46,0)
 ;
"RTN","FBCHPET",47,0)
 ; first edit CPT code and modifiers
"RTN","FBCHPET",48,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) G GETPT
"RTN","FBCHPET",49,0)
 ; if CPT was changed then update file
"RTN","FBCHPET",50,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" G GETPT
"RTN","FBCHPET",51,0)
 . N FBIENS,FBFDA
"RTN","FBCHPET",52,0)
 . S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBCHPET",53,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBCHPET",54,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBCHPET",55,0)
 ; if modifiers changed then update file
"RTN","FBCHPET",56,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(FBDA(3),FBDA(2),FBDA(1),FBDA)
"RTN","FBCHPET",57,0)
 ;
"RTN","FBCHPET",58,0)
 ; now edit remaining fields
"RTN","FBCHPET",59,0)
 S DIE("NO^")=""
"RTN","FBCHPET",60,0)
 S DR="48;47;S FBUNITS=X;42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBCHPET",61,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1);34///@;34////^S X=FBAAMM1;30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBCHPET",62,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBCHPET",63,0)
 ;S DR(1,162.03,3)="3////^S X=$S(J-K:J-K,1:"""");I X S Y=""@11"";4////@;S Y=""@5"";@11;3R;4R;S:X'=4 Y=""@5"";22"
"RTN","FBCHPET",64,0)
 S DR(1,162.03,3)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBCHPET",65,0)
 S DR(1,162.03,4)="S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);S:FBX=-1 Y=0;S:FBX="""" Y=""@5"";50///^S X=FBX;S FBFPPSC=X;S FBX=$$FPPSL^FBUTL5(FBFPPSL);S:FBX=-1 Y=0;51///^S X=FBX;S FBFPPCL=X;S Y=""@55"";@5;50///@;S FBFPPSC="""";51///@;S FBFPPCL="""";@55"
"RTN","FBCHPET",66,0)
 S DR(1,162.03,5)="@5;K DIE(""NO^"");W !,""Exit ('^') allowed now"";26;S PRC(""SITE"")=X;8;13;Q;33;49"
"RTN","FBCHPET",67,0)
 S DR(1,162.03,6)="15;16;17////^S X=1"
"RTN","FBCHPET",68,0)
 S DR(1,162.03,7)="@7;K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD)"
"RTN","FBCHPET",69,0)
 S DIE=FBZ
"RTN","FBCHPET",70,0)
 D ^DIE
"RTN","FBCHPET",71,0)
 ; if adjustment data changed then file
"RTN","FBCHPET",72,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBCHPET",73,0)
 ; if remit remark data changed then file
"RTN","FBCHPET",74,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBCHPET",75,0)
 ; if FPPS CLAIM ID changed, update other line items on invoice
"RTN","FBCHPET",76,0)
 I FBFPPSC'=FBFPPSC(0) D
"RTN","FBCHPET",77,0)
 . N FBAAIN
"RTN","FBCHPET",78,0)
 . S FBAAIN=$$GET1^DIQ(162.03,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",14)
"RTN","FBCHPET",79,0)
 . D CKINVEDI^FBAAPET1(FBFPPSC(0),FBFPPSC,FBAAIN,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",")
"RTN","FBCHPET",80,0)
 K FBSV W !! G SERV
"RTN","FBCHPET",81,0)
END K DR,DIC,DIE,X,DFN,FBVD,FBSD,BAT,FBSV,DA,FBDA,FBZ,FBDUZ,FBAACP,FBFY,FY,FBAMTPD,J,K,Y,PRC,FBHOLDX,ZZ,FBAADT,FBV,FBSDI,FBAACPI
"RTN","FBCHPET",82,0)
 K FBAAMM,FBAAMM1,FBFSAMT,FBFSUSD,FBMODA,FBZIP,FBTIME,FBHCFA(30)
"RTN","FBCHPET",83,0)
 K FBAAPTC,FB1725
"RTN","FBCHPET",84,0)
 K FBADJ,FBADJD,FBADJL,FBRRMK,FBRRMKD,FBRRMKL,FBX,FBUNITS
"RTN","FBCHPET",85,0)
 Q
"RTN","FBCHRR")
0^23^B9913941
"RTN","FBCHRR",1,0)
FBCHRR ;AISC/DMK-RE-INITIATE REJECTS FROM PRICER ;7/17/2003
"RTN","FBCHRR",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBCHRR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHRR",4,0)
DIC S FBTYPE="B9"
"RTN","FBCHRR",5,0)
 W ! S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,15)=""Y""&($P(^(0),U,17)]"""")"_$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):"",1:"&($P(^(0),U,5)=DUZ)"),DIC("A")="Select Batch with Pricer Rejects: " D ^DIC
"RTN","FBCHRR",6,0)
 G END:X="^"!(X=""),DIC:Y<0 S FBN=+Y,FBN(0)=Y(0)
"RTN","FBCHRR",7,0)
 I '$D(^FBAAI("AH",FBN)) W !!,*7,"No items rejected for this batch!",! G DIC
"RTN","FBCHRR",8,0)
DIC1 W !! S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("A")="Select New Batch Number: ",DIC("S")="I $P(^(0),U,3)=FBTYPE&($P(^(0),U,5)=DUZ)&($P(^(0),U,15)=""Y"")&($G(^(""ST""))=""O"")&($P(^(0),U,18)'[""Y"")"
"RTN","FBCHRR",9,0)
 D ^DIC K DIC G DIC:$E(X)="^"!(X=""),DIC1:Y<0 S FBNB=+Y,FBNB(0)=Y(0)
"RTN","FBCHRR",10,0)
DIC2 W ! S DIC="^FBAAI(",DIC(0)="AEQMZ",DIC("A")="Select Patient: ",D="D",DIC("S")="I $D(^(""FBREJ"")),$P(^(""FBREJ""),U,3)=FBN" D IX^DIC G DIC:$E(X)="^"!(X=""),DIC2:Y<0 S FBI=+Y,FBI(0)=Y(0) G END:'$D(^FBAAI(FBI,0))
"RTN","FBCHRR",11,0)
 S FBLISTC="" D HOME^%ZIS,START^FBCHDI2
"RTN","FBCHRR",12,0)
ASK S DIR(0)="Y",DIR("A")="Want to re-initiate this payment",DIR("B")="NO" D ^DIR K DIR G END:$D(DIRUT),DIC:'Y
"RTN","FBCHRR",13,0)
 S (DIC,DIE)="^FBAAI(",DIC(0)="AEQM",DA=FBI,DR="20////^S X=FBNB" D ^DIE
"RTN","FBCHRR",14,0)
 K ^FBAAI(FBI,"FBREJ"),^FBAAI("AH",FBN,FBI) S $P(FBNB(0),"^",10)=$P(FBNB(0),"^",10)+1,$P(FBNB(0),"^",11)=$P(FBNB(0),"^",11)+1,$P(FBNB(0),"^",18)="N",^FBAA(161.7,FBNB,0)=FBNB(0)
"RTN","FBCHRR",15,0)
 I '$D(^FBAAI("AH",FBN)) S $P(FBN(0),"^",17)="",^FBAA(161.7,FBN,0)=FBN(0)
"RTN","FBCHRR",16,0)
 I $D(^FBAAI("AH",FBN)) G DIC2
"RTN","FBCHRR",17,0)
EDIT S DIR(0)="Y",DIR("A")="Want to edit payment now",DIR("B")="YES" D ^DIR K DIR G END:$D(DIRUT)!'Y
"RTN","FBCHRR",18,0)
 S FBPRICE=""
"RTN","FBCHRR",19,0)
 ; get values of FPPS Claim ID and Line Item
"RTN","FBCHRR",20,0)
 S FBFPPSC=$P($G(^FBAAI(FBI,3)),U)
"RTN","FBCHRR",21,0)
 S FBFPPSL=$P($G(^FBAAI(FBI,3)),U,2)
"RTN","FBCHRR",22,0)
 ; load current adjustment data
"RTN","FBCHRR",23,0)
 D LOADADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHRR",24,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBCHRR",25,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBCHRR",26,0)
 ; load current remittance remark data
"RTN","FBCHRR",27,0)
 D LOADRR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHRR",28,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBCHRR",29,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBCHRR",30,0)
 S (DIC,DIE)="^FBAAI(",DA=FBI,DR="[FBCH EDIT PAYMENT]"
"RTN","FBCHRR",31,0)
 D ^DIE G H^XUS:$D(DTOUT)
"RTN","FBCHRR",32,0)
 ; if adjustment data changed then file
"RTN","FBCHRR",33,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHRR",34,0)
 ; if remit remark data changed then file
"RTN","FBCHRR",35,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHRR",36,0)
END K DIC,D,DA,DIRUT,DR,DTOUT,DUOUT,FBPRICE,VAL,DIE,FBI,FBN,FBNB,FBTYPE,I,POP,X,Y,FBLISTC
"RTN","FBCHRR",37,0)
 K FBFPPSC,FBFPPSL,FBADJ,FBADJL,FBRRMK,FBRRMKL
"RTN","FBCHRR",38,0)
 D END^FBCHDI
"RTN","FBCHRR",39,0)
 Q
"RTN","FBCHVH")
0^39^B17108073
"RTN","FBCHVH",1,0)
FBCHVH ;AISC/DMK-VENDOR PAYMENT HISTORY ;7/17/2003
"RTN","FBCHVH",2,0)
 ;;3.5;FEE BASIS;**55,61**;JAN 30, 1995
"RTN","FBCHVH",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCHVH",4,0)
GETVEN K FBAANQ D GETVEN^FBAAUTL1 G END:IFN']""
"RTN","FBCHVH",5,0)
 D DATE^FBAAUTL G:FBPOP GETVEN S ZZ=9999999.9999,FBBEG=ZZ-ENDDATE,FBEND=ZZ-BEGDATE
"RTN","FBCHVH",6,0)
 I '$D(^FBAAI("AF",IFN)) W !,*7,"No invoices on line for this vendor." G GETVEN
"RTN","FBCHVH",7,0)
 S VAR="IFN^FBBEG^FBEND^BEGDATE^ENDDATE"_$S($D(FBPROG):"^FBPROG",1:""),VAL=IFN_"^"_FBBEG_"^"_FBEND_"^"_BEGDATE_"^"_ENDDATE_$S($D(FBPROG):"^"_FBPROG,1:""),PGM="START^FBCHVH" D ZIS^FBAAUTL G:FBPOP END S:IO=IO(0) FBAANQ=1
"RTN","FBCHVH",8,0)
START S:'$D(FBPROG) FBPROG=6 S FBHEAD="VENDOR",Q="",$P(Q,"=",80)="=",FBAAOUT=0 U IO D GETDAT S:$E(IOST,1,2)'["C-" FBPG=1 D HEDC
"RTN","FBCHVH",9,0)
 F FBM=FBBEG-.1:0 S FBM=$O(^FBAAI("AF",IFN,FBM)) Q:FBM'>0!(FBM>FBEND)  F FBI=0:0 S FBI=$O(^FBAAI("AF",IFN,FBM,FBI)) Q:FBI'>0!(FBAAOUT)  I $D(^FBAAI(FBI,0)),$P(^(0),"^",12)=FBPROG,'$D(^("FBREJ")) D GETINV
"RTN","FBCHVH",10,0)
 G:$D(FBAANQ) GETVEN
"RTN","FBCHVH",11,0)
END K DA,DFN,BEGDATE,ENDDATE,FBBEG,FBEND,DIC,FBAANQ,FBAAOUT,FBDX,FBI,FBIN,FBPROC,FBVEN,FBVID,IFN,J,K,L,PGM,Q,VADM,VAERR,VAL,VAR,X,Y,VA,ZZ,FBM,FBHEAD,FBPROG,FBPG,FBVINDT
"RTN","FBCHVH",12,0)
 D CLOSE^FBAAUTL Q
"RTN","FBCHVH",13,0)
GETINV ;
"RTN","FBCHVH",14,0)
 N FBADJLA,FBADJLR,FBCDAYS,FBCSID,FBFPPSC,FBFPPSL,FBRRMKL,FBY2,FBY3
"RTN","FBCHVH",15,0)
 S FBIN=^FBAAI(FBI,0)
"RTN","FBCHVH",16,0)
 S FBY2=$G(^FBAAI(FBI,2))
"RTN","FBCHVH",17,0)
 S FBY3=$G(^FBAAI(FBI,3))
"RTN","FBCHVH",18,0)
 F J=1,2,3,4,6,7,8,9,10,11,13,14 S FBIN(J)=$P(FBIN,"^",J)
"RTN","FBCHVH",19,0)
 S FBVINDT=$P(FBY2,"^",2) D FBCKI^FBAACCB1(FBI)
"RTN","FBCHVH",20,0)
 S FBVEN=$S($D(^FBAAV(+FBIN(3),0)):$P(^(0),"^",1),1:"") I FBVEN]"" S FBVID=$P(^(0),"^",2)
"RTN","FBCHVH",21,0)
 S DFN=FBIN(4) Q:'DFN  D DEM^VADPT
"RTN","FBCHVH",22,0)
 S Y=FBIN(2) D CDAT S FBIN(2)=Y
"RTN","FBCHVH",23,0)
 S Y=FBIN(6) D CDAT S FBIN(6)=Y,Y=FBIN(7) D CDAT S FBIN(7)=Y
"RTN","FBCHVH",24,0)
 S FBCDAYS=$P(FBY2,U,10) ; covered days
"RTN","FBCHVH",25,0)
 S FBCSID=$P(FBY2,U,11) ; patient control number
"RTN","FBCHVH",26,0)
 S FBFPPSC=$P(FBY3,U) ; fpps claim id
"RTN","FBCHVH",27,0)
 S FBFPPSL=$P(FBY3,U,2) ; fpps line item
"RTN","FBCHVH",28,0)
 S FBX=$$ADJLRA^FBCHFA(FBI_",")
"RTN","FBCHVH",29,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBCHVH",30,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBCHVH",31,0)
 S FBRRMKL=$$RRL^FBCHFR(FBI_",")
"RTN","FBCHVH",32,0)
WRT I $Y+6>IOSL D HANG^FBAAUTL1:$E(IOST,1,2)["C-" Q:FBAAOUT  D HEDC
"RTN","FBCHVH",33,0)
 W !,$S('$D(FBIN(13)):"",FBIN(13)="R":"*",1:""),$S($G(FBCAN)]"":"+",1:"")
"RTN","FBCHVH",34,0)
 W VADM(1)_"  "_$P(VADM(2),"^",2),?48,FBCSID
"RTN","FBCHVH",35,0)
 W !,?4,FBVEN,?45,FBVID,?62,FBIN(1)
"RTN","FBCHVH",36,0)
 W !,$S(FBIN(13)["R":"*",1:""),$S(FBIN(14)]"":"#",1:"")
"RTN","FBCHVH",37,0)
 W ?4,FBFPPSC,?18,FBFPPSL,?35,FBIN(2),?46,$$DATX^FBAAUTL(FBVINDT),?57,FBIN(6),?68,FBIN(7)
"RTN","FBCHVH",38,0)
 W !?4,$J(FBIN(8),1,2),?17,$J(FBIN(9),1,2),?29,FBCDAYS
"RTN","FBCHVH",39,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBCHVH",40,0)
 W ?39,$S(FBADJLR]"":FBADJLR,1:FBIN(11))
"RTN","FBCHVH",41,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBCHVH",42,0)
 W ?49,$S(FBADJLA]"":FBADJLA,1:$J(FBIN(10),1,2))
"RTN","FBCHVH",43,0)
 W ?64,FBRRMKL
"RTN","FBCHVH",44,0)
 W !
"RTN","FBCHVH",45,0)
 I $D(^FBAAI(FBI,"DX")) S FBDX=^("DX") F K=1:1:5 D WRTDX
"RTN","FBCHVH",46,0)
 I $D(^FBAAI(FBI,"PROC")) S FBPROC=^("PROC") W ! F L=1:1:5 D WRTPC
"RTN","FBCHVH",47,0)
 N A2 S A2=FBIN(9) D PMNT^FBAACCB2
"RTN","FBCHVH",48,0)
 Q
"RTN","FBCHVH",49,0)
WRTDX I $P(FBDX,"^",K)]"" W ?4,"Dx: ",$$ICD9^FBCSV1(+$P(FBDX,"^",K),$P($G(FBIN),"^",6)),"  " Q
"RTN","FBCHVH",50,0)
 Q
"RTN","FBCHVH",51,0)
WRTPC I $P(FBPROC,"^",L)]"" W ?4,"Proc: ",$$ICD0^FBCSV1(+$P(FBPROC,"^",L),$P($G(FBIN),"^",6)),"   " Q
"RTN","FBCHVH",52,0)
 Q
"RTN","FBCHVH",53,0)
HEDC I $D(FBHEAD) W:'$G(FBPG) @IOF K:$G(FBPG) FBPG W ?25,FBHEAD_" PAYMENT HISTORY",!,?24,$E(Q,1,24),!?48,"Date Range: ",BEGDATE_" to "_ENDDATE
"RTN","FBCHVH",54,0)
 I '$D(FBHEAD) W:'$G(FBPG) @IOF K:$G(FBPG) FBPG W !?32,"INVOICE DISPLAY",!,?31,$E(Q,1,17),!
"RTN","FBCHVH",55,0)
 W !,"Veteran's Name",?48,"Patient Control Number"
"RTN","FBCHVH",56,0)
 W !,"('*'Reimbursement to Veteran   '+' Cancellation Activity)   '#' Voided Payment)"
"RTN","FBCHVH",57,0)
 W !,?4,"Vendor Name",?45,"Vendor ID",?59,"Invoice #"
"RTN","FBCHVH",58,0)
 ;W !,?3,"Fr Date",?14,"To Date  Claimed   Paid",?41,"Sus Code",?59,"Dt. Rec.",?69,"Inv. Date"
"RTN","FBCHVH",59,0)
 W !,?4,"FPPS Claim ID",?18,"FPPS Line Item",?35,"Date Rec.",?46,"Inv. Date",?57,"Fr Date",?68,"To Date"
"RTN","FBCHVH",60,0)
 W !,?4,"Amt Claimed",?17,"Amt Paid",?29,"Cov.Days",?39,"Adj Code",?49,"Adj Amount",?64,"Remit Remark"
"RTN","FBCHVH",61,0)
 W !,Q,!
"RTN","FBCHVH",62,0)
 Q
"RTN","FBCHVH",63,0)
CDAT S Y=$E(Y,4,5)_"/"_$S($E(Y,6,7)="00":$E(Y,2,3),1:$E(Y,6,7)_"/"_$E(Y,2,3)) Q
"RTN","FBCHVH",64,0)
GETDAT S Y=BEGDATE D PDF^FBAAUTL S BEGDATE=Y,Y=ENDDATE D PDF^FBAAUTL S ENDDATE=Y
"RTN","FBCHVH",65,0)
 Q
"RTN","FBCKDIS")
0^43^B45506524
"RTN","FBCKDIS",1,0)
FBCKDIS ;AISC/CMR-OUTPUT BY CHECK # ;8/7/2003
"RTN","FBCKDIS",2,0)
 ;;3.5;FEE BASIS;**4,61**;JAN 30, 1995
"RTN","FBCKDIS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBCKDIS",4,0)
 ;FBCN=Check Number               FBPROG=Fee payment type
"RTN","FBCKDIS",5,0)
 ;FBPR is set if called from the phone menu.  If this variable exists,
"RTN","FBCKDIS",6,0)
 ;     the user will not be returned to the TOP to select another ck #.
"RTN","FBCKDIS",7,0)
TOP W ! S DIR(0)="FO^1:8",DIR("A")="Select Check Number" D ^DIR K DIR Q:Y=""!(Y="^")  S FBCN=Y
"RTN","FBCKDIS",8,0)
 I '$D(^FBAAC("ACK",FBCN)),('$D(^FBAAC("ACKT",FBCN))),('$D(^FBAAI("ACK",FBCN))),('$D(^FBAA(162.1,"ACK",FBCN))) W !!,*7,"There is no record of that check number." G TOP
"RTN","FBCKDIS",9,0)
 S VAR="FBCN",VAL=FBCN,PGM="START^FBCKDIS" D ZIS^FBAAUTL G END:FBPOP
"RTN","FBCKDIS",10,0)
START S Q="-",$P(Q,"-",80)="-",QQ="=",$P(QQ,"=",80)="=",FBPG=1 K ^TMP($J,"FBCK")
"RTN","FBCKDIS",11,0)
 N FBV,DFN D ^FBCKDIS1
"RTN","FBCKDIS",12,0)
 U IO W:$E(IOST,1,2)["C-" @IOF
"RTN","FBCKDIS",13,0)
 F FBPROG="OPT","CH","CNH","PHAR","TRAV" I $D(^TMP($J,"FBCK",FBPROG)) D PGCHK D  Q:$G(FBAAOUT)
"RTN","FBCKDIS",14,0)
 .S FBV=0 F  S FBV=$O(^TMP($J,"FBCK",FBPROG,FBV)) Q:FBV']""!($G(FBAAOUT))  W:FBPROG'="TRAV" !!,"VENDOR:  ",$$VNAME^FBNHEXP(FBV),?40,"  VENDOR ID:  ",$$VID^FBNHEXP(FBV) D
"RTN","FBCKDIS",15,0)
 ..S DFN=0 F  S DFN=$O(^TMP($J,"FBCK",FBPROG,FBV,DFN)) Q:'DFN!($G(FBAAOUT))  D:$Y+8>IOSL PGCHK Q:$G(FBAAOUT)  W !!,"Patient:  ",$$NAME^FBCHREQ2(DFN),?40,"Patient ID:  ",$$SSN^FBAAUTL(DFN) D
"RTN","FBCKDIS",16,0)
 ...N FBAARC,FBADJLA,FBADJLR,FBC,FBFPPSC,FBFPPSL,FBSUSPA,FBX
"RTN","FBCKDIS",17,0)
 ...S FBCNT=0 F  S FBCNT=$O(^TMP($J,"FBCK",FBPROG,FBV,DFN,FBCNT)) Q:'FBCNT!($G(FBAAOUT))  S FBDA=^(FBCNT) D @FBPROG,OUTPUT,CLEAN
"RTN","FBCKDIS",18,0)
END K FBCN,FBCNT,DFN,FBV,FBPROG,FBPG,DIRUT,DTOUT,DUOUT,Q,QQ,^TMP($J,"FBCK")
"RTN","FBCKDIS",19,0)
 D CLOSE^FBAAUTL
"RTN","FBCKDIS",20,0)
 I $G(FBAAOUT) K FBAAOUT Q
"RTN","FBCKDIS",21,0)
 Q:$G(FBPR)]""!($G(ZTQUEUED))
"RTN","FBCKDIS",22,0)
 W !! S DIR(0)="E" D ^DIR K DIR Q:'Y  G TOP
"RTN","FBCKDIS",23,0)
OPT ;gather payment line item for outpatient
"RTN","FBCKDIS",24,0)
 F I=1:1:4 S FB(I)=+$P(FBDA,U,I)
"RTN","FBCKDIS",25,0)
 S FBA=^FBAAC(FB(1),1,FB(2),1,FB(3),1,FB(4),0),FBB=^(2),FBC=$G(^(3))
"RTN","FBCKDIS",26,0)
 S FBDOS=+^FBAAC(FB(1),1,FB(2),1,FB(3),0)
"RTN","FBCKDIS",27,0)
 S FBSRV=$$CPT^FBAAUTL4($P(FBA,U))
"RTN","FBCKDIS",28,0)
 S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_FB(1)_",1,"_FB(2)_",1,"_FB(3)_",1,"_FB(4)_",""M"")","E")
"RTN","FBCKDIS",29,0)
 S FBSRV=FBSRV_$S($G(FBMODLE)]"":"-"_FBMODLE,1:"")
"RTN","FBCKDIS",30,0)
 S FBAMCL=$P(FBA,U,2),FBAMPD=$P(FBA,U,3)
"RTN","FBCKDIS",31,0)
 S FBSUSP=$P(FBA,U,5) D SUSP^FBCKDIS1
"RTN","FBCKDIS",32,0)
 S FBSUSPA=$FN($P(FBA,U,4),"",2)
"RTN","FBCKDIS",33,0)
 S FBFPPSC=$P(FBC,U)
"RTN","FBCKDIS",34,0)
 S FBFPPSL=$P(FBC,U,2)
"RTN","FBCKDIS",35,0)
 S FBAARCE=$$GET1^DIQ(162.03,FB(4)_","_FB(3)_","_FB(2)_","_FB(1)_",",48)
"RTN","FBCKDIS",36,0)
 S FBX=$$ADJLRA^FBAAFA(FB(4)_","_FB(3)_","_FB(2)_","_FB(1)_",")
"RTN","FBCKDIS",37,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBCKDIS",38,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBCKDIS",39,0)
 S FBVP=$P(FBA,U,21),FBREIM=$P(FBA,U,20),FBBAT=$P(FBA,U,8),FBINV=$P(FBA,U,16)
"RTN","FBCKDIS",40,0)
 D FBCKO^FBAACCB2(FB(1),FB(2),FB(3),FB(4))
"RTN","FBCKDIS",41,0)
 Q
"RTN","FBCKDIS",42,0)
CH ;gather payment line item for ch
"RTN","FBCKDIS",43,0)
CNH ;gather payment line item for cnh
"RTN","FBCKDIS",44,0)
 S FBA=^FBAAI(FBDA,0),FBB=^(2),FBC=$G(^(3)),FBDOS=$P(FBA,U,6)_"-"_$P(FBA,U,7),FBAMCL=$P(FBA,U,8),FBAMPD=$P(FBA,U,9),FBSUSP=$P(FBA,U,11) D SUSP^FBCKDIS1
"RTN","FBCKDIS",45,0)
 S FBVP=$P(FBA,U,14),FBREIM=$P(FBA,U,13),FBBAT=$P(FBA,U,17),FBINV=+FBA
"RTN","FBCKDIS",46,0)
 S FBSUSPA=$FN($P(FBA,U,10),"",2)
"RTN","FBCKDIS",47,0)
 S FBFPPSC=$P(FBC,U)
"RTN","FBCKDIS",48,0)
 S FBFPPSL=$P(FBC,U,2)
"RTN","FBCKDIS",49,0)
 S FBX=$$ADJLRA^FBCHFA(FBDA_",")
"RTN","FBCKDIS",50,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBCKDIS",51,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBCKDIS",52,0)
 D FBCKI^FBAACCB1(FBDA)
"RTN","FBCKDIS",53,0)
 Q
"RTN","FBCKDIS",54,0)
PHAR ;gather payment line item for pharmacy
"RTN","FBCKDIS",55,0)
 F I=1,2 S FB(I)=$P(FBDA,U,I)
"RTN","FBCKDIS",56,0)
 S FBA=^FBAA(162.1,FB(1),"RX",FB(2),0),FBB=^(2),FBC=$G(^(3)),FBDOS=$P(FBA,U,3),FBSRV=$P(FBA,"^"),FBAMCL=$P(FBA,U,4),FBAMPD=$P(FBA,U,16),FBSUSP=$P(FBA,U,8) D SUSP^FBCKDIS1
"RTN","FBCKDIS",57,0)
 S FBVP=$P(FBB,U,3),FBREIM=$P(FBA,U,20),FBBAT=$P($G(FBA),U,17),FBINV=+$G(^FBAA(162.1,FB(1),0))
"RTN","FBCKDIS",58,0)
 S FBSUSPA=$FN($P(FBA,U,7),"",2)
"RTN","FBCKDIS",59,0)
 S FBFPPSC=$P($G(^FBAA(162.1,FB(1),0)),U,13)
"RTN","FBCKDIS",60,0)
 S FBFPPSL=$P(FBC,U)
"RTN","FBCKDIS",61,0)
 S FBX=$$ADJLRA^FBRXFA(FB(2)_","_FB(1)_",")
"RTN","FBCKDIS",62,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBCKDIS",63,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBCKDIS",64,0)
 D FBCKP^FBAACCB1(FB(1),FB(2))
"RTN","FBCKDIS",65,0)
 Q
"RTN","FBCKDIS",66,0)
TRAV ;gather payment line item for travel
"RTN","FBCKDIS",67,0)
 F I=1,2 S FB(I)=$P(FBDA,U,I)
"RTN","FBCKDIS",68,0)
 S FBA=^FBAAC(FB(1),3,FB(2),0),FBDOS=+FBA,FBAMCL=$P(FBA,U,3),FBAMPD=FBAMCL,FBVP="",FBREIM="R",FBBAT=$P(FBA,U,2),FBINV=""
"RTN","FBCKDIS",69,0)
 D FBCKT^FBAACCB0(FB(1),FB(2))
"RTN","FBCKDIS",70,0)
 Q
"RTN","FBCKDIS",71,0)
CLEAN ;clean up variables
"RTN","FBCKDIS",72,0)
 K I,FB,FBA,FBB,FBDOS,FBSRV,FBMOD,FBAMCL,FBAMPD,FBSUSP,FBVP,FBREIM,FBBAT,FBINV,FBDA,FBMODLE
"RTN","FBCKDIS",73,0)
 Q
"RTN","FBCKDIS",74,0)
OUTPUT ;display line items for check number
"RTN","FBCKDIS",75,0)
 I $Y+5>IOSL D PGCHK Q:$G(FBAAOUT)
"RTN","FBCKDIS",76,0)
 W ! W:FBVP="VP" "#" W:FBREIM="R" "*" W:FBCAN]"" "+" D  Q:$G(FBAAOUT)
"RTN","FBCKDIS",77,0)
 . I FBPROG["C" D  Q
"RTN","FBCKDIS",78,0)
 . . W ?3,$$DATX^FBAAUTL($P(FBDOS,"-")),?15,$$DATX^FBAAUTL($P(FBDOS,"-",2)),?59,+$G(^FBAA(161.7,+FBBAT,0)),?68,FBINV
"RTN","FBCKDIS",79,0)
 . . W !?3,$J($FN(FBAMCL,",",2),10),?15,$J($FN(FBAMPD,",",2),10)
"RTN","FBCKDIS",80,0)
 . . ; write adjustment reasons, if null then write suspend code
"RTN","FBCKDIS",81,0)
 . . W ?28,$S(FBADJLR]"":FBADJLR,1:FBSUSP)
"RTN","FBCKDIS",82,0)
 . . ; write adjustment amounts, if null then write amount suspended
"RTN","FBCKDIS",83,0)
 . . W ?38,$S(FBADJLA]"":FBADJLA,1:FBSUSPA)
"RTN","FBCKDIS",84,0)
 . . I FBFPPSC]"" W !,?12,"FPPS Claim ID: ",FBFPPSC,?40,"FPPS Line Item: ",FBFPPSL
"RTN","FBCKDIS",85,0)
 . I FBPROG="OPT" D  Q
"RTN","FBCKDIS",86,0)
 . . W ?3,$$DATX^FBAAUTL(FBDOS),?13,$P(FBSRV,","),?23,FBAARCE
"RTN","FBCKDIS",87,0)
 . . W ?59,+$G(^FBAA(161.7,+FBBAT,0)),?68,FBINV
"RTN","FBCKDIS",88,0)
 . . I $P(FBSRV,",",2)]"" D  Q:$G(FBAAOUT)
"RTN","FBCKDIS",89,0)
 . . . N FBI,FBMOD
"RTN","FBCKDIS",90,0)
 . . . F FBI=2:1 S FBMOD=$P(FBSRV,",",FBI) Q:FBMOD=""  D  Q:$G(FBAAOUT)
"RTN","FBCKDIS",91,0)
 . . . . I $Y+5>IOSL D PGCHK Q:$G(FBAAOUT)  W !,"  (continued)"
"RTN","FBCKDIS",92,0)
 . . . . W !,?18,"-",FBMOD
"RTN","FBCKDIS",93,0)
 . . W !?3,$J($FN(FBAMCL,",",2),10),?15,$J($FN(FBAMPD,",",2),10)
"RTN","FBCKDIS",94,0)
 . . ; write adjustment reasons, if null then write suspend code
"RTN","FBCKDIS",95,0)
 . . W ?28,$S(FBADJLR]"":FBADJLR,1:FBSUSP)
"RTN","FBCKDIS",96,0)
 . . ; write adjustment amounts, if null then write amount suspended
"RTN","FBCKDIS",97,0)
 . . W ?38,$S(FBADJLA]"":FBADJLA,1:FBSUSPA)
"RTN","FBCKDIS",98,0)
 . . I FBFPPSC]"" W !,?12,"FPPS Claim ID: ",FBFPPSC,?40,"FPPS Line Item: ",FBFPPSL
"RTN","FBCKDIS",99,0)
 . I FBPROG="PHAR" D  Q
"RTN","FBCKDIS",100,0)
 . . W ?3,$$DATX^FBAAUTL(FBDOS),?13,FBSRV,?59,+$G(^FBAA(161.7,+FBBAT,0)),?68,FBINV
"RTN","FBCKDIS",101,0)
 . . W !?3,$J($FN(FBAMCL,",",2),10),?15,$J($FN(FBAMPD,",",2),10)
"RTN","FBCKDIS",102,0)
 . . ; write adjustment reasons, if null then write suspend code
"RTN","FBCKDIS",103,0)
 . . W ?28,$S(FBADJLR]"":FBADJLR,1:FBSUSP)
"RTN","FBCKDIS",104,0)
 . . ; write adjustment amounts, if null then write amount suspended
"RTN","FBCKDIS",105,0)
 . . W ?38,$S(FBADJLA]"":FBADJLA,1:FBSUSPA)
"RTN","FBCKDIS",106,0)
 . . I FBFPPSC]"" W !,?12,"FPPS Claim ID: ",FBFPPSC,?40,"FPPS Line Item: ",FBFPPSL
"RTN","FBCKDIS",107,0)
 . W ?3,$$DATX^FBAAUTL(FBDOS) W:FBPROG'="TRAV" ?13,FBSRV W ?20,$J($FN(FBAMCL,",",2),10),?32,$J($FN(FBAMPD,",",2),10) W:FBPROG'="TRAV" ?47,FBSUSP W ?53,+$G(^FBAA(161.7,+FBBAT,0)),?65,FBINV
"RTN","FBCKDIS",108,0)
 S A2=FBAMPD D PMNT^FBAACCB2 K A2
"RTN","FBCKDIS",109,0)
 Q
"RTN","FBCKDIS",110,0)
HED W !?20,"PAYMENT HISTORY FOR CHECK # ",FBCN,!,?20,$E(Q,1,(28+$L(FBCN))),?70,"Page: ",FBPG
"RTN","FBCKDIS",111,0)
 W !!,?22,"FEE PROGRAM:  ",$S(FBPROG="OPT":"OUTPATIENT",FBPROG="CH":"CIVIL HOSPITAL",FBPROG="CNH":"COMMUNITY NURSING HOME",FBPROG="PHAR":"PHARMACY",FBPROG="TRAV":"TRAVEL",1:"")
"RTN","FBCKDIS",112,0)
 W !?1,"('*' Reimbursement to Patient  '#' Voided Payment  '+' Cancellation Activity)"
"RTN","FBCKDIS",113,0)
 I FBPROG["C" D  Q
"RTN","FBCKDIS",114,0)
 . W !?3,"From Date",?15,"To Date",?59,"Batch #",?68,"Invoice #"
"RTN","FBCKDIS",115,0)
 . W !?3,"Amt Claimed",?17,"Amt Paid",?28,"Adj Code",?38,"Adj Amount"
"RTN","FBCKDIS",116,0)
 . W !,QQ
"RTN","FBCKDIS",117,0)
 I FBPROG="TRAV" W !?3,"Travel Dt",?21,"Amount",?33,"Amount",?50,"Batch",?62,"Invoice",!,?21,"Claimed",?34,"Paid",?50,"Number",?62,"Number",!,QQ Q
"RTN","FBCKDIS",118,0)
 I FBPROG="OPT" D  Q
"RTN","FBCKDIS",119,0)
 . W !?3,"Svc Date",?13,"CPT-MOD",?23,"Rev.Code",?59,"Batch #",?68,"Invoice #"
"RTN","FBCKDIS",120,0)
 . W !?3,"Amt Claimed",?17,"Amt Paid",?28,"Adj Code",?38,"Adj Amount"
"RTN","FBCKDIS",121,0)
 . W !,QQ
"RTN","FBCKDIS",122,0)
 I FBPROG="PHAR" D  Q
"RTN","FBCKDIS",123,0)
 . W !?3,"Fill Dt",?13,"RX #",?56,"Batch #",?68,"Invoice #"
"RTN","FBCKDIS",124,0)
 . W !?3,"Amt Claimed",?17,"Amt Paid",?28,"Adj Code",?38,"Adj Amount"
"RTN","FBCKDIS",125,0)
 . W !,QQ
"RTN","FBCKDIS",126,0)
 Q
"RTN","FBCKDIS",127,0)
PGCHK I FBPG>1,($E(IOST,1,2)["C-") W !! S DIR(0)="E" D ^DIR K DIR I 'Y S FBAAOUT=1 Q
"RTN","FBCKDIS",128,0)
 W:FBPG>1 @IOF D HED
"RTN","FBCKDIS",129,0)
 S FBPG=FBPG+1 Q
"RTN","FBFHLD3")
0^62^B16935419
"RTN","FBFHLD3",1,0)
FBFHLD3 ;OIFO/SAB-GET DATA FOR OUT/ANC INVOICE ;9/9/2003
"RTN","FBFHLD3",2,0)
 ;;3.5;FEE BASIS;**61**;JULY 18, 2003
"RTN","FBFHLD3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLD3",4,0)
 Q
"RTN","FBFHLD3",5,0)
 ;
"RTN","FBFHLD3",6,0)
EN ;
"RTN","FBFHLD3",7,0)
 ; input
"RTN","FBFHLD3",8,0)
 ;   FBAAIN - invoice number
"RTN","FBFHLD3",9,0)
 ; output
"RTN","FBFHLD3",10,0)
 ;   If transaction type = "X" then only * items are output
"RTN","FBFHLD3",11,0)
 ;   Claim Level Data
"RTN","FBFHLD3",12,0)
 ;   FBD(0,"AMT") = Amount Disbursed^Amount Interest 
"RTN","FBFHLD3",13,0)
 ;  *FBD(0,"CAN") = Cancel Date^Cancel Reason^Cancel Activity
"RTN","FBFHLD3",14,0)
 ;   FBD(0,"DT") = Invoice Date
"RTN","FBFHLD3",15,0)
 ;  *FBD(0,"FPPS") = FPPS Claim ID
"RTN","FBFHLD3",16,0)
 ;  *FBD(0,"INV") = Invoice #^Transaction Type^Station #
"RTN","FBFHLD3",17,0)
 ;
"RTN","FBFHLD3",18,0)
 ;   Line Level Data (# is a sequential number)
"RTN","FBFHLD3",19,0)
 ;   FBD(#,"ADJ") = AdjReason1^AdjGrp1^AdjAmt1^AdjReason2^AdjGrp2^AdjAmt2
"RTN","FBFHLD3",20,0)
 ;   FBD(#,"AMT") = Amount Claimed^Amount Paid
"RTN","FBFHLD3",21,0)
 ;   FBD(#,"CK") = Check Number^Check Date^Payment Method
"RTN","FBFHLD3",22,0)
 ;   FBD(#,"DT") = Date of Service
"RTN","FBFHLD3",23,0)
 ;   FBD(#,"FPPS") = FPPS Line Item
"RTN","FBFHLD3",24,0)
 ;   FBD(#,"RMK") = Remittance Remark1,Remittance Remark2
"RTN","FBFHLD3",25,0)
 ;   FBD(#,"SVC") = Service Code^Qualifier^Mod1,Mod2,Mod3,Mod4^Units
"RTN","FBFHLD3",26,0)
 ;
"RTN","FBFHLD3",27,0)
 ;   If exceptions for invoice
"RTN","FBFHLD3",28,0)
 ;   ^TMP($J,"FBE",FBAAIN,seq number)=message
"RTN","FBFHLD3",29,0)
 ;   If warnings for invoice
"RTN","FBFHLD3",30,0)
 ;   ^TMP($J,"FBW",FBAAIN,seq number)=message
"RTN","FBFHLD3",31,0)
 ;
"RTN","FBFHLD3",32,0)
 ; initialize variables
"RTN","FBFHLD3",33,0)
 N DA,FBC,FBI,FBIENS,FBSTA,FBTTYP,FBY
"RTN","FBFHLD3",34,0)
 K FBD
"RTN","FBFHLD3",35,0)
 S FBC=0 ; line count
"RTN","FBFHLD3",36,0)
 ;
"RTN","FBFHLD3",37,0)
 ; loop thru lines on invoice
"RTN","FBFHLD3",38,0)
 S DA(3)=0
"RTN","FBFHLD3",39,0)
 F  S DA(3)=$O(^FBAAC("C",FBAAIN,DA(3))) Q:'DA(3)  D
"RTN","FBFHLD3",40,0)
 .S DA(2)=0
"RTN","FBFHLD3",41,0)
 .F  S DA(2)=$O(^FBAAC("C",FBAAIN,DA(3),DA(2))) Q:'DA(2)  D
"RTN","FBFHLD3",42,0)
 ..S DA(1)=0
"RTN","FBFHLD3",43,0)
 ..F  S DA(1)=$O(^FBAAC("C",FBAAIN,DA(3),DA(2),DA(1))) Q:'DA(1)  D
"RTN","FBFHLD3",44,0)
 ...S DA=0
"RTN","FBFHLD3",45,0)
 ...F  S DA=$O(^FBAAC("C",FBAAIN,DA(3),DA(2),DA(1),DA)) Q:'DA  D
"RTN","FBFHLD3",46,0)
 ....S FBIENS=DA_","_DA(1)_","_DA(2)_","_DA(3)_","
"RTN","FBFHLD3",47,0)
 ....F FBI=0,2,3,"FBREJ" S FBY(FBI)=$G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,FBI))
"RTN","FBFHLD3",48,0)
 ....Q:'$$CKLNST()  ; skip line if status not OK to transmit
"RTN","FBFHLD3",49,0)
 ....S FBC=FBC+1
"RTN","FBFHLD3",50,0)
 ....; if 1st line then get invoice level data
"RTN","FBFHLD3",51,0)
 ....I FBC=1 D INVOICE
"RTN","FBFHLD3",52,0)
 ....I FBTTYP="L" D LINE
"RTN","FBFHLD3",53,0)
 Q
"RTN","FBFHLD3",54,0)
 ;
"RTN","FBFHLD3",55,0)
INVOICE ; determine invoice data from 1st line item
"RTN","FBFHLD3",56,0)
 ;   FBD(0,"AMT") = Amount Disbursed^Amount Interest 
"RTN","FBFHLD3",57,0)
 ;   FBD(0,"CAN") = Cancel Date^Cancel Reason^Cancel Activity
"RTN","FBFHLD3",58,0)
 ;   FBD(0,"DT") = Invoice Date
"RTN","FBFHLD3",59,0)
 ;   FBD(0,"FPPS") = FPPS Claim ID
"RTN","FBFHLD3",60,0)
 ;   FBD(0,"INV") = Invoice #^Transaction Type^Station #
"RTN","FBFHLD3",61,0)
 ;   FBSTA = station number
"RTN","FBFHLD3",62,0)
 ;   FBTTYP = transaction type (L or X)
"RTN","FBFHLD3",63,0)
 ;
"RTN","FBFHLD3",64,0)
 N FBDT,FBOB,FBX
"RTN","FBFHLD3",65,0)
 ; determine Transaction Type (based on CANCELLATION DATE)
"RTN","FBFHLD3",66,0)
 S FBTTYP=$S($P(FBY(2),U,4)]"":"X",1:"L")
"RTN","FBFHLD3",67,0)
 ;
"RTN","FBFHLD3",68,0)
 ; determine station number
"RTN","FBFHLD3",69,0)
 S FBSTA=$$STANO^FBFHLU($P(FBY(0),U,8))
"RTN","FBFHLD3",70,0)
 ;
"RTN","FBFHLD3",71,0)
 ;INV
"RTN","FBFHLD3",72,0)
 S FBD(0,"INV")=FBAAIN_U_FBTTYP_U_FBSTA
"RTN","FBFHLD3",73,0)
 ;
"RTN","FBFHLD3",74,0)
 ;FPPS
"RTN","FBFHLD3",75,0)
 S FBD(0,"FPPS")=$P(FBY(3),U)
"RTN","FBFHLD3",76,0)
 ;
"RTN","FBFHLD3",77,0)
 ;CAN
"RTN","FBFHLD3",78,0)
 ; if cancel then get cancel data
"RTN","FBFHLD3",79,0)
 I FBTTYP="X" D  Q
"RTN","FBFHLD3",80,0)
 . S FBD(0,"CAN")=$P(FBY(2),U,4)_U_$$GET1^DIQ(162.03,FBIENS,"37:1")_U_$P(FBY(2),U,6)
"RTN","FBFHLD3",81,0)
 ;
"RTN","FBFHLD3",82,0)
 ;AMT
"RTN","FBFHLD3",83,0)
 S FBD(0,"AMT")="0^0" ; initialize sums
"RTN","FBFHLD3",84,0)
 ;
"RTN","FBFHLD3",85,0)
 ;DT
"RTN","FBFHLD3",86,0)
 ; determine invoice date
"RTN","FBFHLD3",87,0)
 ;   (date finalized or date paid or date supervisor closed batch)
"RTN","FBFHLD3",88,0)
 S FBDT=$P(FBY(0),U,6) ; date finalized
"RTN","FBFHLD3",89,0)
 I FBDT="" S FBDT=$P(FBY(0),U,14) ; date paid
"RTN","FBFHLD3",90,0)
 I FBDT="",$P(FBY(0),U,8) S FBDT=$P(^FBAA(161.7,$P(FBY(0),U,8),0),U,6) ; date supv closed batch (for 0.00 invoices)
"RTN","FBFHLD3",91,0)
 S FBD(0,"DT")=FBDT
"RTN","FBFHLD3",92,0)
 ;
"RTN","FBFHLD3",93,0)
 Q
"RTN","FBFHLD3",94,0)
 ;
"RTN","FBFHLD3",95,0)
LINE ; FBC
"RTN","FBFHLD3",96,0)
 ;   FBD(#,"ADJ") = AdjReason1^AdjGrp1^AdjAmt1^AdjReason2^AdjGrp2^AdjAmt2
"RTN","FBFHLD3",97,0)
 ;   FBD(#,"AMT") = Amount Claimed^Amount Paid
"RTN","FBFHLD3",98,0)
 ;   FBD(#,"CK") = Check Number^Check Date^Payment Method
"RTN","FBFHLD3",99,0)
 ;   FBD(#,"DT") = Date of Service
"RTN","FBFHLD3",100,0)
 ;   FBD(#,"FPPS") = FPPS Line Item
"RTN","FBFHLD3",101,0)
 ;   FBD(#,"RMK") = Remittance Remark1^Remittance Remark2
"RTN","FBFHLD3",102,0)
 ;   FBD(#,"SVC") = Service Code^Qualifier^Mod1,Mod2,Mod3,Mod4^Units
"RTN","FBFHLD3",103,0)
 ;
"RTN","FBFHLD3",104,0)
 N FBAARCE,FBADJ,FBMODLE
"RTN","FBFHLD3",105,0)
 ; compare invoice transaction type (L,X) with line cancel status
"RTN","FBFHLD3",106,0)
 I ((FBTTYP="X")&($P(FBY(2),U,4)=""))!((FBTTYP="L")&($P(FBY(2),U,4)]"")) D POST^FBFHLU(FBAAIN,"E","ALL LINES DO NOT HAVE SAME CANCEL STATUS") Q
"RTN","FBFHLD3",107,0)
 ;
"RTN","FBFHLD3",108,0)
 ; SVC
"RTN","FBFHLD3",109,0)
 S FBAARCE=$$GET1^DIQ(162.03,FBIENS,48)
"RTN","FBFHLD3",110,0)
 I FBAARCE]"" S FBD(FBC,"SVC")=FBAARCE_U_"NU"
"RTN","FBFHLD3",111,0)
 E  D
"RTN","FBFHLD3",112,0)
 . S FBD(FBC,"SVC")=$$GET1^DIQ(162.03,FBIENS,.01)_U_"HC"
"RTN","FBFHLD3",113,0)
 . S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_DA(3)_",1,"_DA(2)_",1,"_DA(1)_",1,"_DA_",""M"")","E")
"RTN","FBFHLD3",114,0)
 . I $L(FBMODLE,",")>4 S FBMODLE=$P(FBMODLE,",",1,4)
"RTN","FBFHLD3",115,0)
 . S $P(FBD(FBC,"SVC"),U,3)=FBMODLE
"RTN","FBFHLD3",116,0)
 S $P(FBD(FBC,"SVC"),U,4)=$P(FBY(2),U,14) ; units paid
"RTN","FBFHLD3",117,0)
 ;
"RTN","FBFHLD3",118,0)
 ;FPPS
"RTN","FBFHLD3",119,0)
 S FBD(FBC,"FPPS")=$P(FBY(3),U,2)
"RTN","FBFHLD3",120,0)
 ;
"RTN","FBFHLD3",121,0)
 ;DT
"RTN","FBFHLD3",122,0)
 S FBD(FBC,"DT")=$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),0)),U)
"RTN","FBFHLD3",123,0)
 ;
"RTN","FBFHLD3",124,0)
 ;AMT
"RTN","FBFHLD3",125,0)
 S FBD(FBC,"AMT")=$P(FBY(0),U,2)_U_$P(FBY(0),U,3)
"RTN","FBFHLD3",126,0)
 ;
"RTN","FBFHLD3",127,0)
 ;ADJ
"RTN","FBFHLD3",128,0)
 D LOADADJ^FBAAFA(FBIENS,.FBADJ)
"RTN","FBFHLD3",129,0)
 I $D(FBADJ) S FBD(FBC,"ADJ")=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBFHLD3",130,0)
 ;
"RTN","FBFHLD3",131,0)
 ;RMK
"RTN","FBFHLD3",132,0)
 S FBD(FBC,"RMK")=$$RRL^FBAAFR(FBIENS)
"RTN","FBFHLD3",133,0)
 ;
"RTN","FBFHLD3",134,0)
 ;CK
"RTN","FBFHLD3",135,0)
 S FBD(FBC,"CK")=$P(FBY(2),U,3)_U_$P(FBY(0),U,14)_U_$$PAYMETH^FBFHLU($P(FBY(2),U,3))
"RTN","FBFHLD3",136,0)
 ;
"RTN","FBFHLD3",137,0)
 ;CAMT ; add disbursed and interest amounts to claim (0) level
"RTN","FBFHLD3",138,0)
 ; note - disbursed amount on file includes the interest
"RTN","FBFHLD3",139,0)
 ;        since FPPS wants it w/o interest - interest is subtracted
"RTN","FBFHLD3",140,0)
 S $P(FBD(0,"AMT"),U)=$P(FBD(0,"AMT"),U)+($P(FBY(2),U,8)-$P(FBY(2),U,9))
"RTN","FBFHLD3",141,0)
 S $P(FBD(0,"AMT"),U,2)=$P(FBD(0,"AMT"),U,2)+$P(FBY(2),U,9)
"RTN","FBFHLD3",142,0)
 Q
"RTN","FBFHLD3",143,0)
 ;
"RTN","FBFHLD3",144,0)
CKLNST() ; check line status extrinsic function
"RTN","FBFHLD3",145,0)
 ; result (0 or 1)
"RTN","FBFHLD3",146,0)
 ;   0 when line should not be sent to FPPS
"RTN","FBFHLD3",147,0)
 ;   1 when line should be sent to FPPS
"RTN","FBFHLD3",148,0)
 N FBRET
"RTN","FBFHLD3",149,0)
 S FBRET=1
"RTN","FBFHLD3",150,0)
 ;
"RTN","FBFHLD3",151,0)
 ; check if rejected line
"RTN","FBFHLD3",152,0)
 I $P(FBY("FBREJ"),U)]"" S FBRET=0
"RTN","FBFHLD3",153,0)
 ;
"RTN","FBFHLD3",154,0)
 Q FBRET
"RTN","FBFHLD3",155,0)
 ;
"RTN","FBFHLD3",156,0)
 ;FBFHLD3
"RTN","FBFHLD5")
0^63^B15629441
"RTN","FBFHLD5",1,0)
FBFHLD5 ;OIFO/SAB-GET DATA FOR PHARMACY INVOICE ;10/9/2003
"RTN","FBFHLD5",2,0)
 ;;3.5;FEE BASIS;**61**;JULY 18, 2003
"RTN","FBFHLD5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLD5",4,0)
 Q
"RTN","FBFHLD5",5,0)
 ;
"RTN","FBFHLD5",6,0)
EN ;
"RTN","FBFHLD5",7,0)
 ; input
"RTN","FBFHLD5",8,0)
 ;   FBAAIN - invoice number
"RTN","FBFHLD5",9,0)
 ; output
"RTN","FBFHLD5",10,0)
 ;   If transaction type = "X" then only * items are output
"RTN","FBFHLD5",11,0)
 ;   Claim Level Data
"RTN","FBFHLD5",12,0)
 ;   FBD(0,"AMT") = Amount Disbursed^Amount Interest 
"RTN","FBFHLD5",13,0)
 ;  *FBD(0,"CAN") = Cancel Date^Cancel Reason^Cancel Activity
"RTN","FBFHLD5",14,0)
 ;   FBD(0,"DT") = Invoice Date
"RTN","FBFHLD5",15,0)
 ;  *FBD(0,"FPPS") = FPPS Claim ID
"RTN","FBFHLD5",16,0)
 ;  *FBD(0,"INV") = Invoice #^Transaction Type^Station #
"RTN","FBFHLD5",17,0)
 ;
"RTN","FBFHLD5",18,0)
 ;   Line Level Data (# is a sequential number)
"RTN","FBFHLD5",19,0)
 ;   FBD(#,"ADJ") = AdjReason1^AdjGrp1^AdjAmt1^AdjReason2^AdjGrp2^AdjAmt2
"RTN","FBFHLD5",20,0)
 ;   FBD(#,"AMT") = Amount Claimed^Amount Paid
"RTN","FBFHLD5",21,0)
 ;   FBD(#,"CK") = Check Number^Check Date^Payment Method
"RTN","FBFHLD5",22,0)
 ;   FBD(#,"DT") = Date Prescription Filled
"RTN","FBFHLD5",23,0)
 ;   FBD(#,"FPPS") = FPPS Line Item
"RTN","FBFHLD5",24,0)
 ;   FBD(#,"RMK") = Remittance Remark1,Remittance Remark2
"RTN","FBFHLD5",25,0)
 ;
"RTN","FBFHLD5",26,0)
 ;   If exceptions for invoice
"RTN","FBFHLD5",27,0)
 ;   ^TMP($J,"FBE",FBAAIN,seq number)=message
"RTN","FBFHLD5",28,0)
 ;   If warnings for invoice
"RTN","FBFHLD5",29,0)
 ;   ^TMP($J,"FBW",FBAAIN,seq number)=message
"RTN","FBFHLD5",30,0)
 ;
"RTN","FBFHLD5",31,0)
 ; initialize variables
"RTN","FBFHLD5",32,0)
 N DA,FBC,FBI,FBIENS,FBRXY,FBSTA,FBTTYP,FBY
"RTN","FBFHLD5",33,0)
 K FBD
"RTN","FBFHLD5",34,0)
 S FBC=0 ; line count
"RTN","FBFHLD5",35,0)
 ;
"RTN","FBFHLD5",36,0)
 S DA(1)=FBAAIN
"RTN","FBFHLD5",37,0)
 S FBY(0)=$G(^FBAA(162.1,DA(1),0))
"RTN","FBFHLD5",38,0)
 ; loop thru prescriptions on invoice
"RTN","FBFHLD5",39,0)
 S DA=0 F  S DA=$O(^FBAA(162.1,DA(1),"RX",DA)) Q:'DA  D
"RTN","FBFHLD5",40,0)
 . S FBIENS=DA_","_DA(1)_","
"RTN","FBFHLD5",41,0)
 . F FBI=0,2,3,"FBREJ" S FBRXY(FBI)=$G(^FBAA(162.1,DA(1),"RX",DA,FBI))
"RTN","FBFHLD5",42,0)
 . Q:'$$CKLNST()  ; skip line if status not OK to transmit
"RTN","FBFHLD5",43,0)
 . S FBC=FBC+1
"RTN","FBFHLD5",44,0)
 . ; if 1st line then get invoice level data
"RTN","FBFHLD5",45,0)
 . I FBC=1 D INVOICE
"RTN","FBFHLD5",46,0)
 . I FBTTYP="L" D LINE
"RTN","FBFHLD5",47,0)
 Q
"RTN","FBFHLD5",48,0)
 ;
"RTN","FBFHLD5",49,0)
INVOICE ; determine invoice data from 1st line item
"RTN","FBFHLD5",50,0)
 ;   FBD(0,"AMT") = Amount Disbursed^Amount Interest 
"RTN","FBFHLD5",51,0)
 ;   FBD(0,"CAN") = Cancel Date^Cancel Reason^Cancel Activity
"RTN","FBFHLD5",52,0)
 ;   FBD(0,"DT") = Invoice Date
"RTN","FBFHLD5",53,0)
 ;   FBD(0,"FPPS") = FPPS Claim ID
"RTN","FBFHLD5",54,0)
 ;   FBD(0,"INV") = Invoice #^Transaction Type^Station #
"RTN","FBFHLD5",55,0)
 ;   FBSTA = station number
"RTN","FBFHLD5",56,0)
 ;   FBTTYP = transaction type (L or X)
"RTN","FBFHLD5",57,0)
 ;
"RTN","FBFHLD5",58,0)
 N FBDT,FBOB,FBX
"RTN","FBFHLD5",59,0)
 ; determine Transaction Type (based on CANCELLATION DATE)
"RTN","FBFHLD5",60,0)
 S FBTTYP=$S($P(FBRXY(2),U,11)]"":"X",1:"L")
"RTN","FBFHLD5",61,0)
 ;
"RTN","FBFHLD5",62,0)
 ; determine station number
"RTN","FBFHLD5",63,0)
 S FBSTA=$$RXSTA(FBAAIN,$P(FBRXY(0),U,17))
"RTN","FBFHLD5",64,0)
 ;
"RTN","FBFHLD5",65,0)
 ;INV
"RTN","FBFHLD5",66,0)
 S FBD(0,"INV")=FBAAIN_U_FBTTYP_U_FBSTA
"RTN","FBFHLD5",67,0)
 ;
"RTN","FBFHLD5",68,0)
 ;FPPS
"RTN","FBFHLD5",69,0)
 S FBD(0,"FPPS")=$P(FBY(0),U,13)
"RTN","FBFHLD5",70,0)
 ;
"RTN","FBFHLD5",71,0)
 ;CAN
"RTN","FBFHLD5",72,0)
 ; if cancel then get cancel data
"RTN","FBFHLD5",73,0)
 I FBTTYP="X" D  Q
"RTN","FBFHLD5",74,0)
 . S FBD(0,"CAN")=$P(FBRXY(2),U,11)_U_$$GET1^DIQ(162.11,FBIENS,"32:1")_U_$P(FBRXY(2),U,13)
"RTN","FBFHLD5",75,0)
 ;
"RTN","FBFHLD5",76,0)
 ;AMT
"RTN","FBFHLD5",77,0)
 S FBD(0,"AMT")="0^0" ; initialize sums
"RTN","FBFHLD5",78,0)
 ;
"RTN","FBFHLD5",79,0)
 ;DT
"RTN","FBFHLD5",80,0)
 ; determine invoice date
"RTN","FBFHLD5",81,0)
 ;   (date certified or date paid or date supervisor closed batch)
"RTN","FBFHLD5",82,0)
 S FBDT=$P(FBRXY(0),U,19) ; date certified for payment (lines may differ)
"RTN","FBFHLD5",83,0)
 I FBDT="" S FBDT=$P(FBRXY(2),U,8) ; date paid
"RTN","FBFHLD5",84,0)
 I FBDT="",$P(FBRXY(0),U,17) S FBDT=$P(^FBAA(161.7,$P(FBRXY(0),U,17),0),U,6) ; date supv closed batch (for 0.00 lines)
"RTN","FBFHLD5",85,0)
 S FBD(0,"DT")=FBDT
"RTN","FBFHLD5",86,0)
 ;
"RTN","FBFHLD5",87,0)
 Q
"RTN","FBFHLD5",88,0)
 ;
"RTN","FBFHLD5",89,0)
LINE ; FBC
"RTN","FBFHLD5",90,0)
 ;   FBD(#,"ADJ") = AdjReason1^AdjGrp1^AdjAmt1^AdjReason2^AdjGrp2^AdjAmt2
"RTN","FBFHLD5",91,0)
 ;   FBD(#,"AMT") = Amount Claimed^Amount Paid
"RTN","FBFHLD5",92,0)
 ;   FBD(#,"CK") = Check Number^Check Date^Payment Method
"RTN","FBFHLD5",93,0)
 ;   FBD(#,"DT") = Date of Service
"RTN","FBFHLD5",94,0)
 ;   FBD(#,"FPPS") = FPPS Line Item
"RTN","FBFHLD5",95,0)
 ;   FBD(#,"RMK") = Remittance Remark1^Remittance Remark2
"RTN","FBFHLD5",96,0)
 ;   FBD(#,"SVC") = Service Code^Qualifier^Mod1,Mod2,Mod3,Mod4^Units
"RTN","FBFHLD5",97,0)
 ;
"RTN","FBFHLD5",98,0)
 N FBADJ
"RTN","FBFHLD5",99,0)
 ; compare invoice transaction type (L,X) with line cancel status
"RTN","FBFHLD5",100,0)
 I ((FBTTYP="X")&($P(FBRXY(2),U,11)=""))!((FBTTYP="L")&($P(FBRXY(2),U,11)]"")) D POST^FBFHLU(FBAAIN,"E","ALL LINES DO NOT HAVE SAME CANCEL STATUS") Q
"RTN","FBFHLD5",101,0)
 ;
"RTN","FBFHLD5",102,0)
 ;FPPS
"RTN","FBFHLD5",103,0)
 S FBD(FBC,"FPPS")=$P(FBRXY(3),U)
"RTN","FBFHLD5",104,0)
 ;
"RTN","FBFHLD5",105,0)
 ;DT
"RTN","FBFHLD5",106,0)
 S FBD(FBC,"DT")=$P(FBRXY(0),U,3)
"RTN","FBFHLD5",107,0)
 ;
"RTN","FBFHLD5",108,0)
 ;AMT
"RTN","FBFHLD5",109,0)
 S FBD(FBC,"AMT")=$P(FBRXY(0),U,4)_U_$P(FBRXY(0),U,16)
"RTN","FBFHLD5",110,0)
 ;
"RTN","FBFHLD5",111,0)
 ;ADJ
"RTN","FBFHLD5",112,0)
 D LOADADJ^FBRXFA(FBIENS,.FBADJ)
"RTN","FBFHLD5",113,0)
 I $D(FBADJ) S FBD(FBC,"ADJ")=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBFHLD5",114,0)
 ;
"RTN","FBFHLD5",115,0)
 ;RMK
"RTN","FBFHLD5",116,0)
 S FBD(FBC,"RMK")=$$RRL^FBRXFR(FBIENS)
"RTN","FBFHLD5",117,0)
 ;
"RTN","FBFHLD5",118,0)
 ;CK
"RTN","FBFHLD5",119,0)
 S FBD(FBC,"CK")=$P(FBRXY(2),U,10)_U_$P(FBRXY(2),U,8)_U_$$PAYMETH^FBFHLU($P(FBRXY(2),U,10))
"RTN","FBFHLD5",120,0)
 ;
"RTN","FBFHLD5",121,0)
 ;CAMT ; add disbursed and interest amounts to claim (0) level
"RTN","FBFHLD5",122,0)
 ; note - disbursed amount on file includes the interest
"RTN","FBFHLD5",123,0)
 ;        since FPPS wants it w/o interest - interest is subtracted
"RTN","FBFHLD5",124,0)
 S $P(FBD(0,"AMT"),U)=$P(FBD(0,"AMT"),U)+($P(FBRXY(2),U,14)-$P(FBRXY(2),U,15))
"RTN","FBFHLD5",125,0)
 S $P(FBD(0,"AMT"),U,2)=$P(FBD(0,"AMT"),U,2)+$P(FBRXY(2),U,15)
"RTN","FBFHLD5",126,0)
 Q
"RTN","FBFHLD5",127,0)
 ;
"RTN","FBFHLD5",128,0)
CKLNST() ; check line status extrinsic function
"RTN","FBFHLD5",129,0)
 ; result (0 or 1)
"RTN","FBFHLD5",130,0)
 ;   0 when line should not be sent to FPPS
"RTN","FBFHLD5",131,0)
 ;   1 when line should be sent to FPPS
"RTN","FBFHLD5",132,0)
 N FBRET
"RTN","FBFHLD5",133,0)
 S FBRET=1
"RTN","FBFHLD5",134,0)
 ;
"RTN","FBFHLD5",135,0)
 ; check if rejected line
"RTN","FBFHLD5",136,0)
 I $P(FBRXY("FBREJ"),U)]"" S FBRET=0
"RTN","FBFHLD5",137,0)
 ;
"RTN","FBFHLD5",138,0)
 Q FBRET
"RTN","FBFHLD5",139,0)
 ;
"RTN","FBFHLD5",140,0)
RXSTA(FBAAIN,FBBATCH) ; determine station number for pharmacy
"RTN","FBFHLD5",141,0)
 ; input
"RTN","FBFHLD5",142,0)
 ;   FBAAIN - invoice number in FEE BASIS PHARMACY INVOICE file
"RTN","FBFHLD5",143,0)
 ;   FBBATCH - ien of entry in FEE BASIS BATCH (#161.7) file
"RTN","FBFHLD5",144,0)
 ; returns station number or NULL value
"RTN","FBFHLD5",145,0)
 N FBRET
"RTN","FBFHLD5",146,0)
 ; if batch not input then check all line items for a batch
"RTN","FBFHLD5",147,0)
 I 'FBBATCH D
"RTN","FBFHLD5",148,0)
 . N DA
"RTN","FBFHLD5",149,0)
 . S DA(1)=FBAAIN
"RTN","FBFHLD5",150,0)
 . S DA=0 F  S DA=$O(^FBAA(162.1,DA(1),"RX",DA)) Q:'DA  D  Q:FBBATCH
"RTN","FBFHLD5",151,0)
 . . S FBBATCH=$P($G(^FBAA(162.1,DA(1),"RX",DA,0)),U,17)
"RTN","FBFHLD5",152,0)
 ;
"RTN","FBFHLD5",153,0)
 ; if batch known then call API to get station number
"RTN","FBFHLD5",154,0)
 I FBBATCH S FBRET=$$STANO^FBFHLU(FBBATCH)
"RTN","FBFHLD5",155,0)
 ; if batch not known then get station number based on fee site param.
"RTN","FBFHLD5",156,0)
 I 'FBBATCH S FBRET=$$GET1^DIQ(161.4,"1,","27:99")
"RTN","FBFHLD5",157,0)
 ;
"RTN","FBFHLD5",158,0)
 Q FBRET
"RTN","FBFHLD5",159,0)
 ;
"RTN","FBFHLD5",160,0)
 ;FBFHLD5
"RTN","FBFHLD9")
0^64^B9980518
"RTN","FBFHLD9",1,0)
FBFHLD9 ;OIFO/SAB-GET DATA FOR INPATIENT INVOICE ;9/9/2003
"RTN","FBFHLD9",2,0)
 ;;3.5;FEE BASIS;**61**;JULY 18, 2003
"RTN","FBFHLD9",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLD9",4,0)
 Q
"RTN","FBFHLD9",5,0)
 ;
"RTN","FBFHLD9",6,0)
EN ;
"RTN","FBFHLD9",7,0)
 ; input
"RTN","FBFHLD9",8,0)
 ;   FBAAIN - invoice number
"RTN","FBFHLD9",9,0)
 ; output
"RTN","FBFHLD9",10,0)
 ;   If transaction type = "X" then only * items are output
"RTN","FBFHLD9",11,0)
 ;   Claim Level Data
"RTN","FBFHLD9",12,0)
 ;   FBD(0,"AMT") = Amount Disbursed^Amount Interest 
"RTN","FBFHLD9",13,0)
 ;  *FBD(0,"CAN") = Cancel Date^Cancel Reason^Cancel Activity
"RTN","FBFHLD9",14,0)
 ;   FBD(0,"DAYS) = Covered Days
"RTN","FBFHLD9",15,0)
 ;   FBD(0,"DRG") = DRG^DRG Weight
"RTN","FBFHLD9",16,0)
 ;   FBD(0,"DT") = Invoice Date
"RTN","FBFHLD9",17,0)
 ;  *FBD(0,"FPPS") = FPPS Claim ID
"RTN","FBFHLD9",18,0)
 ;  *FBD(0,"INV") = Invoice #^Transaction Type^Station #
"RTN","FBFHLD9",19,0)
 ;
"RTN","FBFHLD9",20,0)
 ;   Line Level Data
"RTN","FBFHLD9",21,0)
 ;   FBD(1,"ADJ") = AdjReason1^AdjGrp1^AdjAmt1
"RTN","FBFHLD9",22,0)
 ;   FBD(1,"AMT") = Amount Claimed^Amount Paid
"RTN","FBFHLD9",23,0)
 ;   FBD(1,"CK") = Check Number^Check Date^Payment Method
"RTN","FBFHLD9",24,0)
 ;   FBD(1,"DT") = Start Date^End Date
"RTN","FBFHLD9",25,0)
 ;   FBD(1,"FPPS") = FPPS Line Item
"RTN","FBFHLD9",26,0)
 ;   FBD(1,"RMK") = Remittance Remark1,Remittance Remark2
"RTN","FBFHLD9",27,0)
 ;
"RTN","FBFHLD9",28,0)
 ;   If exceptions for invoice
"RTN","FBFHLD9",29,0)
 ;   ^TMP($J,"FBE",FBAAIN,seq number)=message
"RTN","FBFHLD9",30,0)
 ;   If warnings for invoice
"RTN","FBFHLD9",31,0)
 ;   ^TMP($J,"FBW",FBAAIN,seq number)=message
"RTN","FBFHLD9",32,0)
 ;
"RTN","FBFHLD9",33,0)
 ; initialize variables
"RTN","FBFHLD9",34,0)
 N DA,FBC,FBI,FBIENS,FBSTA,FBTTYP,FBY
"RTN","FBFHLD9",35,0)
 K FBD
"RTN","FBFHLD9",36,0)
 ;
"RTN","FBFHLD9",37,0)
 S DA=FBAAIN
"RTN","FBFHLD9",38,0)
 S FBIENS=DA_","
"RTN","FBFHLD9",39,0)
 F FBI=0,2,3,"FBREJ" S FBY(FBI)=$G(^FBAAI(DA,FBI))
"RTN","FBFHLD9",40,0)
 Q:'$$CKLNST()  ; skip line if status not OK to transmit
"RTN","FBFHLD9",41,0)
 S FBC=1
"RTN","FBFHLD9",42,0)
 D INVOICE
"RTN","FBFHLD9",43,0)
 I FBTTYP="C" D LINE
"RTN","FBFHLD9",44,0)
 Q
"RTN","FBFHLD9",45,0)
 ;
"RTN","FBFHLD9",46,0)
INVOICE ; determine invoice data
"RTN","FBFHLD9",47,0)
 ;   FBD(0,"AMT") = Amount Disbursed^Amount Interest 
"RTN","FBFHLD9",48,0)
 ;   FBD(0,"CAN") = Cancel Date^Cancel Reason^Cancel Activity
"RTN","FBFHLD9",49,0)
 ;   FBD(0,"DAYS")
"RTN","FBFHLD9",50,0)
 ;   FBD(0,"DRG")
"RTN","FBFHLD9",51,0)
 ;   FBD(0,"DT") = Invoice Date
"RTN","FBFHLD9",52,0)
 ;   FBD(0,"FPPS") = FPPS Claim ID
"RTN","FBFHLD9",53,0)
 ;   FBD(0,"INV") = Invoice #^Transaction Type^Station #
"RTN","FBFHLD9",54,0)
 ;   FBSTA = station number
"RTN","FBFHLD9",55,0)
 ;   FBTTYP = transaction type (C or X)
"RTN","FBFHLD9",56,0)
 ;
"RTN","FBFHLD9",57,0)
 N FBDT,FBOB,FBX
"RTN","FBFHLD9",58,0)
 ; determine Transaction Type (based on CANCELLATION DATE)
"RTN","FBFHLD9",59,0)
 S FBTTYP=$S($P(FBY(2),U,5)]"":"X",1:"C")
"RTN","FBFHLD9",60,0)
 ;
"RTN","FBFHLD9",61,0)
 ; determine station number
"RTN","FBFHLD9",62,0)
 S FBSTA=$$STANO^FBFHLU($P(FBY(0),U,17))
"RTN","FBFHLD9",63,0)
 ;
"RTN","FBFHLD9",64,0)
 ;INV
"RTN","FBFHLD9",65,0)
 S FBD(0,"INV")=FBAAIN_U_FBTTYP_U_FBSTA
"RTN","FBFHLD9",66,0)
 ;
"RTN","FBFHLD9",67,0)
 ;FPPS
"RTN","FBFHLD9",68,0)
 S FBD(0,"FPPS")=$P(FBY(3),U)
"RTN","FBFHLD9",69,0)
 ;
"RTN","FBFHLD9",70,0)
 ;CAN
"RTN","FBFHLD9",71,0)
 ; if cancel then get cancel data
"RTN","FBFHLD9",72,0)
 I FBTTYP="X" D  Q
"RTN","FBFHLD9",73,0)
 . S FBD(0,"CAN")=$P(FBY(2),U,5)_U_$$GET1^DIQ(162.5,FBIENS,"50:1")_U_$P(FBY(2),U,7)
"RTN","FBFHLD9",74,0)
 ;
"RTN","FBFHLD9",75,0)
 ;AMT
"RTN","FBFHLD9",76,0)
 S FBD(0,"AMT")="0^0" ; initialize sums
"RTN","FBFHLD9",77,0)
 ;
"RTN","FBFHLD9",78,0)
 ;DT
"RTN","FBFHLD9",79,0)
 ; determine invoice date
"RTN","FBFHLD9",80,0)
 ;   (date finalized or date paid or date supervisor closed batch)
"RTN","FBFHLD9",81,0)
 S FBDT=$P(FBY(0),U,16) ; date finalized
"RTN","FBFHLD9",82,0)
 I FBDT="" S FBDT=$P(FBY(2),U) ; date paid
"RTN","FBFHLD9",83,0)
 I FBDT="",$P(FBY(0),U,17) S FBDT=$P(^FBAA(161.7,$P(FBY(0),U,17),0),U,6) ; date supv closed
"RTN","FBFHLD9",84,0)
 S FBD(0,"DT")=FBDT
"RTN","FBFHLD9",85,0)
 ;
"RTN","FBFHLD9",86,0)
 ;DAYS
"RTN","FBFHLD9",87,0)
 S FBD(0,"DAYS")=+$P(FBY(2),U,10)
"RTN","FBFHLD9",88,0)
 ;
"RTN","FBFHLD9",89,0)
 ;DRG
"RTN","FBFHLD9",90,0)
 S FBX=$$GET1^DIQ(162.5,FBIENS,24)
"RTN","FBFHLD9",91,0)
 I $E(FBX,1,3)="DRG" S FBX=$E(FBX,4,999)
"RTN","FBFHLD9",92,0)
 S FBD(0,"DRG")=FBX_U_$P(FBY(2),U,12)
"RTN","FBFHLD9",93,0)
 ;
"RTN","FBFHLD9",94,0)
 Q
"RTN","FBFHLD9",95,0)
 ;
"RTN","FBFHLD9",96,0)
LINE ;   FBC
"RTN","FBFHLD9",97,0)
 ;   FBD(#,"ADJ") = AdjReason1^AdjGrp1^AdjAmt1
"RTN","FBFHLD9",98,0)
 ;   FBD(#,"AMT") = Amount Claimed^Amount Paid
"RTN","FBFHLD9",99,0)
 ;   FBD(#,"CK") = Check Number^Check Date^Payment Method
"RTN","FBFHLD9",100,0)
 ;   FBD(#,"DT") = Start Date^End Date
"RTN","FBFHLD9",101,0)
 ;   FBD(#,"FPPS") = FPPS Line Item
"RTN","FBFHLD9",102,0)
 ;   FBD(#,"RMK") = Remittance Remark1^Remittance Remark2
"RTN","FBFHLD9",103,0)
 ;
"RTN","FBFHLD9",104,0)
 N FBADJ
"RTN","FBFHLD9",105,0)
 ;
"RTN","FBFHLD9",106,0)
 ;FPPS
"RTN","FBFHLD9",107,0)
 S FBD(FBC,"FPPS")=$P(FBY(3),U,2)
"RTN","FBFHLD9",108,0)
 ;
"RTN","FBFHLD9",109,0)
 ;DT
"RTN","FBFHLD9",110,0)
 S FBD(FBC,"DT")=$P(FBY(0),U,6)_U_$P(FBY(0),U,7)
"RTN","FBFHLD9",111,0)
 ;
"RTN","FBFHLD9",112,0)
 ;AMT
"RTN","FBFHLD9",113,0)
 S FBD(FBC,"AMT")=$P(FBY(0),U,8)_U_$P(FBY(0),U,9)
"RTN","FBFHLD9",114,0)
 ;
"RTN","FBFHLD9",115,0)
 ;ADJ
"RTN","FBFHLD9",116,0)
 D LOADADJ^FBCHFA(FBIENS,.FBADJ)
"RTN","FBFHLD9",117,0)
 I $D(FBADJ) S FBD(FBC,"ADJ")=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBFHLD9",118,0)
 ;
"RTN","FBFHLD9",119,0)
 ;RMK
"RTN","FBFHLD9",120,0)
 S FBD(FBC,"RMK")=$$RRL^FBCHFR(FBIENS)
"RTN","FBFHLD9",121,0)
 ;
"RTN","FBFHLD9",122,0)
 ;CK
"RTN","FBFHLD9",123,0)
 S FBD(FBC,"CK")=$P(FBY(2),U,4)_U_$P(FBY(2),U)_U_$$PAYMETH^FBFHLU($P(FBY(2),U,4))
"RTN","FBFHLD9",124,0)
 ;
"RTN","FBFHLD9",125,0)
 ;CAMT ; add disbursed and interest amounts to claim (0) level
"RTN","FBFHLD9",126,0)
 ; note - disbursed amount on file includes the interest
"RTN","FBFHLD9",127,0)
 ;        since FPPS wants it w/o interest - interest is subtracted
"RTN","FBFHLD9",128,0)
 S $P(FBD(0,"AMT"),U)=$P(FBD(0,"AMT"),U)+($P(FBY(2),U,8)-$P(FBY(2),U,9))
"RTN","FBFHLD9",129,0)
 S $P(FBD(0,"AMT"),U,2)=$P(FBD(0,"AMT"),U,2)+$P(FBY(2),U,9)
"RTN","FBFHLD9",130,0)
 Q
"RTN","FBFHLD9",131,0)
 ;
"RTN","FBFHLD9",132,0)
CKLNST() ; check line status extrinsic function
"RTN","FBFHLD9",133,0)
 ; result (0 or 1)
"RTN","FBFHLD9",134,0)
 ;   0 when line should not be sent to FPPS
"RTN","FBFHLD9",135,0)
 ;   1 when line should be sent to FPPS
"RTN","FBFHLD9",136,0)
 N FBRET
"RTN","FBFHLD9",137,0)
 S FBRET=1
"RTN","FBFHLD9",138,0)
 ;
"RTN","FBFHLD9",139,0)
 ; check if rejected line
"RTN","FBFHLD9",140,0)
 I $P(FBY("FBREJ"),U)]"" S FBRET=0
"RTN","FBFHLD9",141,0)
 ;
"RTN","FBFHLD9",142,0)
 Q FBRET
"RTN","FBFHLD9",143,0)
 ;
"RTN","FBFHLD9",144,0)
 ;FBFHLD9
"RTN","FBFHLL")
0^56^B13383117
"RTN","FBFHLL",1,0)
FBFHLL ;AISC/LEG-FPPS QUEUED INVOICE FILE ;9/10/2003
"RTN","FBFHLL",2,0)
 ;;3.5;FEE BASIS;**61**;JULY 18, 2003
"RTN","FBFHLL",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLL",4,0)
 ;
"RTN","FBFHLL",5,0)
 Q
"RTN","FBFHLL",6,0)
 ;
"RTN","FBFHLL",7,0)
LOG(FBN,FBTYPE) ; processes batch and logs 0.00 invoices to FILE #163.5
"RTN","FBFHLL",8,0)
 ; input
"RTN","FBFHLL",9,0)
 ;   FBN - pointer to FEE BASIS BATCH file
"RTN","FBFHLL",10,0)
 ;   FBTYPE - batch type (B3,B5,B9,BT)
"RTN","FBFHLL",11,0)
 N FBX,FBERR
"RTN","FBFHLL",12,0)
 S FBERR=""
"RTN","FBFHLL",13,0)
 F FBX="FBN","FBTYPE" S:'$L(@FBX) FBERR=FBX_":0 LENGTH"
"RTN","FBFHLL",14,0)
 I $L(FBERR) W FBERR Q
"RTN","FBFHLL",15,0)
 I "B3,B5,B9"[FBTYPE D @FBTYPE ;either B3, B5, B9
"RTN","FBFHLL",16,0)
 Q
"RTN","FBFHLL",17,0)
 ;
"RTN","FBFHLL",18,0)
B3 ; process outpatient/ancillary batch
"RTN","FBFHLL",19,0)
 Q:FBTYPE'="B3"
"RTN","FBFHLL",20,0)
 N DA,FBAAIN,FBAMTPD,FBINV,FBY0
"RTN","FBFHLL",21,0)
 ;
"RTN","FBFHLL",22,0)
 ; loop thru items in batch and build list of EDI invoices and their $
"RTN","FBFHLL",23,0)
 S DA(3)=0 F  S DA(3)=$O(^FBAAC("AC",FBN,DA(3))) Q:'DA(3)  D
"RTN","FBFHLL",24,0)
 . S DA(2)=0 F  S DA(2)=$O(^FBAAC("AC",FBN,DA(3),DA(2))) Q:'DA(2)  D
"RTN","FBFHLL",25,0)
 . . S DA(1)=0
"RTN","FBFHLL",26,0)
 . . F  S DA(1)=$O(^FBAAC("AC",FBN,DA(3),DA(2),DA(1))) Q:'DA(1)  D
"RTN","FBFHLL",27,0)
 . . . S DA=0
"RTN","FBFHLL",28,0)
 . . . F  S DA=$O(^FBAAC("AC",FBN,DA(3),DA(2),DA(1),DA)) Q:'DA  D
"RTN","FBFHLL",29,0)
 . . . . Q:$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,3)),U)=""  ; not EDI
"RTN","FBFHLL",30,0)
 . . . . S FBY0=$G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,0))
"RTN","FBFHLL",31,0)
 . . . . S FBAAIN=$P(FBY0,U,16)
"RTN","FBFHLL",32,0)
 . . . . S FBAMTPD=$P(FBY0,U,3)
"RTN","FBFHLL",33,0)
 . . . . I FBAAIN]"" S FBINV(FBAAIN)=$G(FBINV(FBAAIN))+FBAMTPD
"RTN","FBFHLL",34,0)
 ;
"RTN","FBFHLL",35,0)
 ; loop thru EDI invoices and queue invoices with 0.00 payment
"RTN","FBFHLL",36,0)
 S FBAAIN="" F  S FBAAIN=$O(FBINV(FBAAIN)) Q:FBAAIN=""  D
"RTN","FBFHLL",37,0)
 . Q:$G(FBINV(FBAAIN))>0  ; not zero dollar invoice
"RTN","FBFHLL",38,0)
 . D FILEQUE(FBAAIN,3)
"RTN","FBFHLL",39,0)
 Q
"RTN","FBFHLL",40,0)
 ;
"RTN","FBFHLL",41,0)
B5 ; processes pharmacy batch
"RTN","FBFHLL",42,0)
 Q:FBTYPE'="B5"
"RTN","FBFHLL",43,0)
 N DA,FBAAIN,FBAMTPD,FBINV,FBRXY0,FBY0
"RTN","FBFHLL",44,0)
 ;
"RTN","FBFHLL",45,0)
 ; loop thru items in batch and build list of EDI invoices and their $
"RTN","FBFHLL",46,0)
 S DA(1)=0 F  S DA(1)=$O(^FBAA(162.1,"AE",FBN,DA(1))) Q:'DA(1)  D
"RTN","FBFHLL",47,0)
 . S DA=0 F  S DA=$O(^FBAA(162.1,"AE",FBN,DA(1),DA)) Q:'DA  D
"RTN","FBFHLL",48,0)
 . . S FBY0=$G(^FBAA(162.1,DA(1),0))
"RTN","FBFHLL",49,0)
 . . S FBRXY0=$G(^FBAA(162.1,DA(1),"RX",DA,0))
"RTN","FBFHLL",50,0)
 . . Q:$P(FBY0,U,13)=""  ; not EDI
"RTN","FBFHLL",51,0)
 . . S FBAAIN=$P(FBY0,U)
"RTN","FBFHLL",52,0)
 . . S FBAMTPD=$P(FBRXY0,U,16)
"RTN","FBFHLL",53,0)
 . . I FBAAIN]"" S FBINV(FBAAIN)=$G(FBINV(FBAAIN))+FBAMTPD
"RTN","FBFHLL",54,0)
 ;
"RTN","FBFHLL",55,0)
 ; loop thru EDI invoices and queue invoices with 0.00 payment
"RTN","FBFHLL",56,0)
 S FBAAIN="" F  S FBAAIN=$O(FBINV(FBAAIN)) Q:FBAAIN=""  D
"RTN","FBFHLL",57,0)
 . Q:$G(FBINV(FBAAIN))>0  ; not zero dollar invoice
"RTN","FBFHLL",58,0)
 . D FILEQUE(FBAAIN,5)
"RTN","FBFHLL",59,0)
 Q
"RTN","FBFHLL",60,0)
 ;
"RTN","FBFHLL",61,0)
B9 ; processes inpatient batch
"RTN","FBFHLL",62,0)
 Q:FBTYPE'="B9"
"RTN","FBFHLL",63,0)
 N DA,FBAAIN,FBAMTPD,FBY0
"RTN","FBFHLL",64,0)
 ;
"RTN","FBFHLL",65,0)
 ; loop thru items in batch and log 0.00 EDI invoices
"RTN","FBFHLL",66,0)
 S DA=0 F  S DA=$O(^FBAAI("AC",FBN,DA)) Q:'DA  D
"RTN","FBFHLL",67,0)
 . Q:$P($G(^FBAAI(DA,3)),U)=""  ; not EDI
"RTN","FBFHLL",68,0)
 . S FBY0=$G(^FBAAI(DA,0))
"RTN","FBFHLL",69,0)
 . S FBAAIN=$P(FBY0,U)
"RTN","FBFHLL",70,0)
 . S FBAMTPD=$P(FBY0,U,9)
"RTN","FBFHLL",71,0)
 . Q:FBAMTPD>0  ; not 0.00 invoice
"RTN","FBFHLL",72,0)
 . D FILEQUE(FBAAIN,9)
"RTN","FBFHLL",73,0)
 Q
"RTN","FBFHLL",74,0)
 ;
"RTN","FBFHLL",75,0)
PAIDLOG(FBINV) ; process EDI invoices from payment conf/canc message
"RTN","FBFHLL",76,0)
 ; input FBINV array, passed by reference
"RTN","FBFHLL",77,0)
 ;   format FBINV(fbtype,fbaain)=""
"RTN","FBFHLL",78,0)
 ;   where fbtype = 3, 5, or 9
"RTN","FBFHLL",79,0)
 ;         fbaain = invoice number
"RTN","FBFHLL",80,0)
 ;
"RTN","FBFHLL",81,0)
 N FBAAIN,FBTYPE
"RTN","FBFHLL",82,0)
 ; loop thru type
"RTN","FBFHLL",83,0)
 F FBTYPE=3,5,9 D
"RTN","FBFHLL",84,0)
 . ; loop thru invoices
"RTN","FBFHLL",85,0)
 . S FBAAIN="" F  S FBAAIN=$O(FBINV(FBTYPE,FBAAIN)) Q:FBAAIN=""  D
"RTN","FBFHLL",86,0)
 . . ; queue invoice
"RTN","FBFHLL",87,0)
 . . D FILEQUE(FBAAIN,FBTYPE)
"RTN","FBFHLL",88,0)
 Q
"RTN","FBFHLL",89,0)
 ;
"RTN","FBFHLL",90,0)
FILEQUE(FBAAIN,FBTYPE) ; file invoice into FPPS Queue
"RTN","FBFHLL",91,0)
 ; input
"RTN","FBFHLL",92,0)
 ;   FBAAIN - invoice number
"RTN","FBFHLL",93,0)
 ;   FBTYPE - type (3, 5, or 9)
"RTN","FBFHLL",94,0)
 ;     where 3 = outpatient/ancillary - file 162
"RTN","FBFHLL",95,0)
 ;           5 = pharmacy - file 162.1
"RTN","FBFHLL",96,0)
 ;           9 = inpatient - file 162.5
"RTN","FBFHLL",97,0)
 ;
"RTN","FBFHLL",98,0)
 N FBDA,FBFDA
"RTN","FBFHLL",99,0)
 ;
"RTN","FBFHLL",100,0)
 ;
"RTN","FBFHLL",101,0)
 S FBDA=$O(^FBHL(163.5,"B",FBAAIN,""),-1) ; last entry for invoice
"RTN","FBFHLL",102,0)
 I FBDA,$D(^FBHL(163.5,"AC",0,FBDA)) Q  ; already queued to be sent
"RTN","FBFHLL",103,0)
 ;
"RTN","FBFHLL",104,0)
 S FBFDA(163.5,"+1,",.01)=FBAAIN
"RTN","FBFHLL",105,0)
 S FBFDA(163.5,"+1,",1)=FBTYPE
"RTN","FBFHLL",106,0)
 S FBFDA(163.5,"+1,",2)=0
"RTN","FBFHLL",107,0)
 D UPDATE^DIE("","FBFDA")
"RTN","FBFHLL",108,0)
 Q
"RTN","FBFHLL",109,0)
 ;
"RTN","FBFHLL",110,0)
CKFPPS(FBAAIN) ; checks if invoice was previously sent to FPPS
"RTN","FBFHLL",111,0)
 ; input
"RTN","FBFHLL",112,0)
 ;   FBAAIN - invoice number
"RTN","FBFHLL",113,0)
 ; result
"RTN","FBFHLL",114,0)
 ;   status (0,1,X) of 1st entry for invoice in file 163.5
"RTN","FBFHLL",115,0)
 ;    where 0 = waiting to be transmitted
"RTN","FBFHLL",116,0)
 ;          1 = transmitted
"RTN","FBFHLL",117,0)
 ;          X = not logged
"RTN","FBFHLL",118,0)
 N FBDA,FBRET,FBSTAT
"RTN","FBFHLL",119,0)
 S FBRET=""
"RTN","FBFHLL",120,0)
 ;
"RTN","FBFHLL",121,0)
 ; loop thru entries for invoice (look until end or return value is true)
"RTN","FBFHLL",122,0)
 S FBDA=0 F  S FBDA=$O(^FBHL(163.5,"B",FBAAIN,FBDA)) Q:'FBDA  D  Q:FBRET
"RTN","FBFHLL",123,0)
 . S FBSTAT=$P($G(^FBHL(163.5,FBDA,0)),U,3)
"RTN","FBFHLL",124,0)
 . I "^1^2^"[(U_FBSTAT_U) S FBRET=1 ; status=transmitted or acknowledged
"RTN","FBFHLL",125,0)
 . I "^0^"[(U_FBSTAT_U) S FBRET=0 ; status=pending
"RTN","FBFHLL",126,0)
 ;
"RTN","FBFHLL",127,0)
 ; if no status found for invoice then return X for not logged
"RTN","FBFHLL",128,0)
 I FBRET="" S FBRET="X"
"RTN","FBFHLL",129,0)
 Q FBRET
"RTN","FBFHLL",130,0)
 ;
"RTN","FBFHLL",131,0)
 ;FBFHLL
"RTN","FBFHLP")
0^71^B14125531
"RTN","FBFHLP",1,0)
FBFHLP ;WOIFO/SAB-FPPS MESSAGE PURGE ;9/9/2003
"RTN","FBFHLP",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBFHLP",3,0)
 ;
"RTN","FBFHLP",4,0)
 W !,"When an invoice is transmitted to FPPS via the HL7 package, a copy of the HL7"
"RTN","FBFHLP",5,0)
 W !,"message text is saved in the FPPS QUEUED INVOICES (#163.5) file."
"RTN","FBFHLP",6,0)
 W !!,"This option purges the message text for invoices transmitted prior to a"
"RTN","FBFHLP",7,0)
 W !,"specified date.  Messages that have not been accepted by the VistA Interface"
"RTN","FBFHLP",8,0)
 W !,"Engine will not be purged unless there is a later message for the same"
"RTN","FBFHLP",9,0)
 W !,"invoice number that has been accepted.",!
"RTN","FBFHLP",10,0)
 ;
"RTN","FBFHLP",11,0)
 ; ask date
"RTN","FBFHLP",12,0)
 S DIR(0)="D^:"_$$FMADD^XLFDT(DT,-30)_":EX"
"RTN","FBFHLP",13,0)
 S DIR("A")="Purge text of messages transmitted prior to"
"RTN","FBFHLP",14,0)
 S DIR("B")=$$FMTE^XLFDT($$FMADD^XLFDT(DT,-60),2)
"RTN","FBFHLP",15,0)
 S DIR("?",1)="The purge date must be at least 30 days ago."
"RTN","FBFHLP",16,0)
 S DIR("?")="This response must be a date. Enter '^' to quit."
"RTN","FBFHLP",17,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT
"RTN","FBFHLP",18,0)
 S FBDTP=Y
"RTN","FBFHLP",19,0)
 ;
"RTN","FBFHLP",20,0)
 ; ask device
"RTN","FBFHLP",21,0)
 S %ZIS="QM" D ^%ZIS G:POP EXIT
"RTN","FBFHLP",22,0)
 I $D(IO("Q")) D  G EXIT
"RTN","FBFHLP",23,0)
 . S ZTRTN="QEN^FBFHLP",ZTDESC="FB FPPS Message Text Purge"
"RTN","FBFHLP",24,0)
 . F FBX="FBDTP" S ZTSAVE(FBX)=""
"RTN","FBFHLP",25,0)
 . D ^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","FBFHLP",26,0)
 ;
"RTN","FBFHLP",27,0)
QEN ; queued entry
"RTN","FBFHLP",28,0)
 U IO
"RTN","FBFHLP",29,0)
 ;
"RTN","FBFHLP",30,0)
PURGE ; Start Purge
"RTN","FBFHLP",31,0)
 S FBPG=0 D NOW^%DTC S Y=% D DD^%DT S FBDTR=Y
"RTN","FBFHLP",32,0)
 K FBDL S FBDL="",$P(FBDL,"-",IOM)=""
"RTN","FBFHLP",33,0)
 ;
"RTN","FBFHLP",34,0)
 ; build page header text for selection criteria
"RTN","FBFHLP",35,0)
 S FBHDT(1)="  For Messages Transmitted Prior To "_$$FMTE^XLFDT(FBDTP)
"RTN","FBFHLP",36,0)
 ;
"RTN","FBFHLP",37,0)
 D HD
"RTN","FBFHLP",38,0)
 ;
"RTN","FBFHLP",39,0)
 S FBQUIT=0
"RTN","FBFHLP",40,0)
 ;
"RTN","FBFHLP",41,0)
 ; initialize counters
"RTN","FBFHLP",42,0)
 S FBC=0 ; count of messages processed
"RTN","FBFHLP",43,0)
 S FBC("PRG")=0 ; count of message text purged
"RTN","FBFHLP",44,0)
 ;
"RTN","FBFHLP",45,0)
 W !,"Starting Purge..."
"RTN","FBFHLP",46,0)
 ;
"RTN","FBFHLP",47,0)
 ; loop thru entries by MESSAGE DATE/TIME x-ref by date
"RTN","FBFHLP",48,0)
 S FBDT=0
"RTN","FBFHLP",49,0)
 F  S FBDT=$O(^FBHL(163.5,"AMD",FBDT)) Q:FBDT=""!($P(FBDT,".")>FBDTP)  D  Q:FBQUIT
"RTN","FBFHLP",50,0)
 . S FBDA=0 F  S FBDA=$O(^FBHL(163.5,"AMD",FBDT,FBDA)) Q:'FBDA  D  Q:FBQUIT
"RTN","FBFHLP",51,0)
 . . S FBC=FBC+1 ; increment count of records processed
"RTN","FBFHLP",52,0)
 . . ; if tasked then check for stop request
"RTN","FBFHLP",53,0)
 . . I $D(ZTQUEUED),FBC\1000,$$S^%ZTLOAD S ZTSTOP=1,FBQUIT=1 Q
"RTN","FBFHLP",54,0)
 . . Q:$O(^FBHL(163.5,FBDA,1,0))'>0  ; quit if no data in message text
"RTN","FBFHLP",55,0)
 . . ;
"RTN","FBFHLP",56,0)
 . . ; check if OK to purge
"RTN","FBFHLP",57,0)
 . . S FBPRG=0 ; init as NO
"RTN","FBFHLP",58,0)
 . . S FBY=$G(^FBHL(163.5,FBDA,0))
"RTN","FBFHLP",59,0)
 . . I $P(FBY,U,8)="A" S FBPRG=1 ; was accepted
"RTN","FBFHLP",60,0)
 . . I 'FBPRG D
"RTN","FBFHLP",61,0)
 . . . ; check if last entry for invoice was accepted
"RTN","FBFHLP",62,0)
 . . . N FBLDA
"RTN","FBFHLP",63,0)
 . . . S FBLDA=$$LAST^FBFHLU($P(FBY,U))
"RTN","FBFHLP",64,0)
 . . . I FBLDA,FBLDA'=FBDA,$P($G(^FBHL(163.5,FBLDA,0)),U,8)="A" S FBPRG=1
"RTN","FBFHLP",65,0)
 . . ;
"RTN","FBFHLP",66,0)
 . . ; if OK then purge
"RTN","FBFHLP",67,0)
 . . I FBPRG D WP^DIE(163.5,FBDA_",",7,"","@") S FBC("PRG")=FBC("PRG")+1
"RTN","FBFHLP",68,0)
 ;
"RTN","FBFHLP",69,0)
 I 'FBQUIT W !,"Purge Completed."
"RTN","FBFHLP",70,0)
 ;
"RTN","FBFHLP",71,0)
 W !!,"The message text was purged from ",FBC("PRG")," entr",$S(FBC("PRG")=1:"y",1:"ies")," in file 163.5."
"RTN","FBFHLP",72,0)
 ;
"RTN","FBFHLP",73,0)
 I FBQUIT W !!,"REPORT STOPPED AT USER REQUEST"
"RTN","FBFHLP",74,0)
 ;
"RTN","FBFHLP",75,0)
 I 'FBQUIT,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR
"RTN","FBFHLP",76,0)
 D ^%ZISC
"RTN","FBFHLP",77,0)
 ;
"RTN","FBFHLP",78,0)
EXIT ;
"RTN","FBFHLP",79,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","FBFHLP",80,0)
 K FBC,FBDA,FBDL,FBDT,FBDTP,FBDTR,FBHDT,FBPG,FBPRG,FBQUIT,FBX,FBY
"RTN","FBFHLP",81,0)
 K %,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,J,POP,X,Y
"RTN","FBFHLP",82,0)
 Q
"RTN","FBFHLP",83,0)
 ;
"RTN","FBFHLP",84,0)
HD ; page header
"RTN","FBFHLP",85,0)
 N FBI
"RTN","FBFHLP",86,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,FBQUIT=1 Q
"RTN","FBFHLP",87,0)
 I $E(IOST,1,2)="C-",FBPG S DIR(0)="E" D ^DIR K DIR I 'Y S FBQUIT=1 Q
"RTN","FBFHLP",88,0)
 I $E(IOST,1,2)="C-"!FBPG W @IOF
"RTN","FBFHLP",89,0)
 S FBPG=FBPG+1
"RTN","FBFHLP",90,0)
 W !,"FPPS Message Text Purge",?49,FBDTR,?72,"page ",FBPG
"RTN","FBFHLP",91,0)
 S FBI=0 F  S FBI=$O(FBHDT(FBI)) Q:'FBI  W !,FBHDT(FBI)
"RTN","FBFHLP",92,0)
 W !,FBDL
"RTN","FBFHLP",93,0)
 Q
"RTN","FBFHLP",94,0)
 ;
"RTN","FBFHLP",95,0)
 ;FBFHLP
"RTN","FBFHLS")
0^65^B56586501
"RTN","FBFHLS",1,0)
FBFHLS ;OIFO/SAB-BUILD HL7 MESSAGE SEGMENTS ;9/18/2003
"RTN","FBFHLS",2,0)
 ;;3.5;FEE BASIS;**61**;JULY 18, 2003
"RTN","FBFHLS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLS",4,0)
 Q
"RTN","FBFHLS",5,0)
 ;
"RTN","FBFHLS",6,0)
EN ;
"RTN","FBFHLS",7,0)
 ; input
"RTN","FBFHLS",8,0)
 ; HLFS  - HL7 field separator
"RTN","FBFHLS",9,0)
 ; HLECH - HL7 encoding characters
"RTN","FBFHLS",10,0)
 ; FBAAIN - invoice number
"RTN","FBFHLS",11,0)
 ; FBD( array containing the invoice data
"RTN","FBFHLS",12,0)
 ;  Applicablity of a FBD node for a given transaction type (C,L, or X)
"RTN","FBFHLS",13,0)
 ;  is indicated by the presence of the transaction type code at the
"RTN","FBFHLS",14,0)
 ;  beginning of the line in the following table.
"RTN","FBFHLS",15,0)
 ;
"RTN","FBFHLS",16,0)
 ;   Claim Level Data
"RTN","FBFHLS",17,0)
 ; CL   FBD(0,"AMT")  = Amount Disbursed^Amount Interest 
"RTN","FBFHLS",18,0)
 ;   X  FBD(0,"CAN")  = Cancel Date^Cancel Reason^Cancel Activity
"RTN","FBFHLS",19,0)
 ; C    FBD(0,"DAYS") = Covered Days
"RTN","FBFHLS",20,0)
 ; C    FBD(0,"DRG")  = DRG Code^DRG Weight
"RTN","FBFHLS",21,0)
 ; CL   FBD(0,"DT")   = Invoice Date
"RTN","FBFHLS",22,0)
 ; CLX  FBD(0,"FPPS") = FPPS Claim ID
"RTN","FBFHLS",23,0)
 ; CLX  FBD(0,"INV")  = Invoice #^Transaction Type^Station #
"RTN","FBFHLS",24,0)
 ;
"RTN","FBFHLS",25,0)
 ;   Line Level Data (# is a sequential number)
"RTN","FBFHLS",26,0)
 ; CL   FBD(#,"ADJ")  = AdjReas1^AdjGrp1^AdjAmt1^AdjReas2^AdjGrp2^AdjAmt2
"RTN","FBFHLS",27,0)
 ;       note: ADJ node is only defined when there is an adjustment
"RTN","FBFHLS",28,0)
 ;       note: only 1 adjustment for C type
"RTN","FBFHLS",29,0)
 ; CL   FBD(#,"AMT")  = Amount Claimed^Amount Paid
"RTN","FBFHLS",30,0)
 ; CL   FBD(#,"CK")   = Check Number^Check Date^Payment Method
"RTN","FBFHLS",31,0)
 ; CL   FBD(#,"DT")   = Date of Service/Start Date^End Date
"RTN","FBFHLS",32,0)
 ;       note: End Date only applicable for C type
"RTN","FBFHLS",33,0)
 ; CL   FBD(#,"FPPS") = FPPS Line Item
"RTN","FBFHLS",34,0)
 ; CL   FBD(#,"RMK")  = Remittance Remark1,Remittance Remark2
"RTN","FBFHLS",35,0)
 ;  L   FBD(#,"SVC")  = Service Code^Qualifier^Mod1,Mod2,Mod3,Mod4^Units
"RTN","FBFHLS",36,0)
 ;       note: SVC node is not defined for pharmacy invoices
"RTN","FBFHLS",37,0)
 ;
"RTN","FBFHLS",38,0)
 ; If existing exceptions for invoice
"RTN","FBFHLS",39,0)
 ;   ^TMP($J,"FBE",FBAAIN,seq number)=message
"RTN","FBFHLS",40,0)
 ; If existing warnings for invoice
"RTN","FBFHLS",41,0)
 ;   ^TMP($J,"FBW",FBAAIN,seq number)=message
"RTN","FBFHLS",42,0)
 ;
"RTN","FBFHLS",43,0)
 ; output
"RTN","FBFHLS",44,0)
 ;   ^TMP("HLS",$J) = HL global array for invoice
"RTN","FBFHLS",45,0)
 ;   If new exceptions for invoice
"RTN","FBFHLS",46,0)
 ;     ^TMP($J,"FBE",FBAAIN,seq number)=message
"RTN","FBFHLS",47,0)
 ;   If new warnings for invoice
"RTN","FBFHLS",48,0)
 ;     ^TMP($J,"FBW",FBAAIN,seq number)=message
"RTN","FBFHLS",49,0)
 ;
"RTN","FBFHLS",50,0)
 ; initialize variables
"RTN","FBFHLS",51,0)
 N FBTTYP
"RTN","FBFHLS",52,0)
 K ^TMP("HLS",$J)
"RTN","FBFHLS",53,0)
 ;
"RTN","FBFHLS",54,0)
 ; determine transaction type
"RTN","FBFHLS",55,0)
 S FBTTYP=$P($G(FBD(0,"INV")),U,2)
"RTN","FBFHLS",56,0)
 ;
"RTN","FBFHLS",57,0)
 I '$D(HLFS) D  I '$D(HLFS) Q
"RTN","FBFHLS",58,0)
 . N FBHL
"RTN","FBFHLS",59,0)
 . D INIT^HLFNC2("FB FEE TO FPPS EVENT",.FBHL)
"RTN","FBFHLS",60,0)
 . I $G(FBHL) Q
"RTN","FBFHLS",61,0)
 . S HLFS=FBHL("FS")
"RTN","FBFHLS",62,0)
 . S HLECH=FBHL("ECH")
"RTN","FBFHLS",63,0)
 ;
"RTN","FBFHLS",64,0)
 ; check for required fields
"RTN","FBFHLS",65,0)
 D CHKREQ^FBFHLS1
"RTN","FBFHLS",66,0)
 ;
"RTN","FBFHLS",67,0)
 ; quit if exceptions
"RTN","FBFHLS",68,0)
 Q:$D(^TMP($J,"FBE",FBAAIN))
"RTN","FBFHLS",69,0)
 ;
"RTN","FBFHLS",70,0)
 ; build segments for invoice in ^TMP("HLS",$J,
"RTN","FBFHLS",71,0)
 I FBTTYP="C" D CL
"RTN","FBFHLS",72,0)
 I FBTTYP="L" D CL
"RTN","FBFHLS",73,0)
 I FBTTYP="X" D X
"RTN","FBFHLS",74,0)
 ;
"RTN","FBFHLS",75,0)
 Q
"RTN","FBFHLS",76,0)
 ;
"RTN","FBFHLS",77,0)
CL ; Claim or Line Transaction
"RTN","FBFHLS",78,0)
 N FBCOMP,FBFLD,FBFT1,FBI,FBL,FBORC,FBX
"RTN","FBFHLS",79,0)
 S FBL=0 ; line counter for HL7 lines in ^TMP("HLS",$J,line
"RTN","FBFHLS",80,0)
 ; loop thru line items (Claim Transaction must have just 1 line)
"RTN","FBFHLS",81,0)
 S FBI=0 F  S FBI=$O(FBD(FBI)) Q:'FBI  D
"RTN","FBFHLS",82,0)
 . S FBORC="ORC"
"RTN","FBFHLS",83,0)
 . ; transaction type (005)
"RTN","FBFHLS",84,0)
 . S $P(FBORC,HLFS,6)=$P(FBD(0,"INV"),U,2)
"RTN","FBFHLS",85,0)
 . ;
"RTN","FBFHLS",86,0)
 . I FBTTYP="C" D
"RTN","FBFHLS",87,0)
 . . ; covered days (007.3)
"RTN","FBFHLS",88,0)
 . . S FBFLD=$P(FBORC,HLFS,8)
"RTN","FBFHLS",89,0)
 . . S $P(FBFLD,$E(HLECH,1),3)=$P(FBD(0,"DAYS"),U)
"RTN","FBFHLS",90,0)
 . . S $P(FBORC,HLFS,8)=FBFLD
"RTN","FBFHLS",91,0)
 . ;
"RTN","FBFHLS",92,0)
 . ; date of service/start date (007.4.1)
"RTN","FBFHLS",93,0)
 . S FBFLD=$P(FBORC,HLFS,8)
"RTN","FBFHLS",94,0)
 . S FBCOMP=$P(FBFLD,$E(HLECH,1),4)
"RTN","FBFHLS",95,0)
 . S $P(FBCOMP,$E(HLECH,2),1)=$$FMTHL7^XLFDT($P(FBD(FBI,"DT"),U))
"RTN","FBFHLS",96,0)
 . S $P(FBFLD,$E(HLECH,1),4)=FBCOMP
"RTN","FBFHLS",97,0)
 . S $P(FBORC,HLFS,8)=FBFLD
"RTN","FBFHLS",98,0)
 . ;
"RTN","FBFHLS",99,0)
 . I FBTTYP="C" D
"RTN","FBFHLS",100,0)
 . . ; end date (007.5.1)
"RTN","FBFHLS",101,0)
 . . S FBFLD=$P(FBORC,HLFS,8)
"RTN","FBFHLS",102,0)
 . . S FBCOMP=$P(FBFLD,$E(HLECH,1),5)
"RTN","FBFHLS",103,0)
 . . S $P(FBCOMP,$E(HLECH,2),1)=$$FMTHL7^XLFDT($P(FBD(FBI,"DT"),U,2))
"RTN","FBFHLS",104,0)
 . . S $P(FBFLD,$E(HLECH,1),5)=FBCOMP
"RTN","FBFHLS",105,0)
 . . S $P(FBORC,HLFS,8)=FBFLD
"RTN","FBFHLS",106,0)
 . ;
"RTN","FBFHLS",107,0)
 . ; invoice date (009.1)
"RTN","FBFHLS",108,0)
 . S FBFLD=$P(FBORC,HLFS,10)
"RTN","FBFHLS",109,0)
 . S $P(FBFLD,$E(HLECH,1),1)=$$FMTHL7^XLFDT($P(FBD(0,"DT"),U))
"RTN","FBFHLS",110,0)
 . S $P(FBORC,HLFS,10)=FBFLD
"RTN","FBFHLS",111,0)
 . ;
"RTN","FBFHLS",112,0)
 . ; station number (013.4.2)
"RTN","FBFHLS",113,0)
 . S FBFLD=$P(FBORC,HLFS,14)
"RTN","FBFHLS",114,0)
 . S FBCOMP=$P(FBFLD,$E(HLECH,1),4)
"RTN","FBFHLS",115,0)
 . S $P(FBCOMP,$E(HLECH,2),2)=$P(FBD(0,"INV"),U,3)
"RTN","FBFHLS",116,0)
 . S $P(FBFLD,$E(HLECH,1),4)=FBCOMP
"RTN","FBFHLS",117,0)
 . S $P(FBORC,HLFS,14)=FBFLD
"RTN","FBFHLS",118,0)
 . ;
"RTN","FBFHLS",119,0)
 . ; store HL ORC segment for the line item
"RTN","FBFHLS",120,0)
 . S FBX=FBORC D TMPHL
"RTN","FBFHLS",121,0)
 . ;
"RTN","FBFHLS",122,0)
 . S FBFT1="FT1"
"RTN","FBFHLS",123,0)
 . ;
"RTN","FBFHLS",124,0)
 . ; FPPS CLAIM-LINE (002)
"RTN","FBFHLS",125,0)
 . S $P(FBFT1,HLFS,3)=$P(FBD(0,"FPPS"),U)_"-"_$$EXPLIST($P(FBD(FBI,"FPPS"),U))
"RTN","FBFHLS",126,0)
 . ;
"RTN","FBFHLS",127,0)
 . ; INVOICE # (003)
"RTN","FBFHLS",128,0)
 . S $P(FBFT1,HLFS,4)=$P(FBD(0,"INV"),U)
"RTN","FBFHLS",129,0)
 . ;
"RTN","FBFHLS",130,0)
 . ; CHECK DATE (004)
"RTN","FBFHLS",131,0)
 . S $P(FBFT1,HLFS,5)=$$FMTHL7^XLFDT($P(FBD(FBI,"CK"),U,2))
"RTN","FBFHLS",132,0)
 . ;
"RTN","FBFHLS",133,0)
 . ; PAYMENT METHOD (006)
"RTN","FBFHLS",134,0)
 . S $P(FBFT1,HLFS,7)=$P(FBD(FBI,"CK"),U,3)
"RTN","FBFHLS",135,0)
 . ;
"RTN","FBFHLS",136,0)
 . I FBTTYP="L" D
"RTN","FBFHLS",137,0)
 . . ; UNITS PAID (010)
"RTN","FBFHLS",138,0)
 . . S $P(FBFT1,HLFS,11)=$P($G(FBD(FBI,"SVC")),U,4)
"RTN","FBFHLS",139,0)
 . ;
"RTN","FBFHLS",140,0)
 . ; REMITTANCE REMARKS (013)
"RTN","FBFHLS",141,0)
 . S $P(FBFT1,HLFS,14)=$P(FBD(FBI,"RMK"),U)
"RTN","FBFHLS",142,0)
 . ;
"RTN","FBFHLS",143,0)
 . I FBTTYP="L" D
"RTN","FBFHLS",144,0)
 . . ; SERVICE QUALIFIER (019)
"RTN","FBFHLS",145,0)
 . . S $P(FBFT1,HLFS,20)=$P($G(FBD(FBI,"SVC")),U,2)
"RTN","FBFHLS",146,0)
 . ;
"RTN","FBFHLS",147,0)
 . ; CHECK NUMBER (023)
"RTN","FBFHLS",148,0)
 . S $P(FBFT1,HLFS,24)=$P(FBD(FBI,"CK"),U)
"RTN","FBFHLS",149,0)
 . ;
"RTN","FBFHLS",150,0)
 . I FBTTYP="L" D
"RTN","FBFHLS",151,0)
 . . ; SERVICE PROVIDED (025)
"RTN","FBFHLS",152,0)
 . . S $P(FBFT1,HLFS,26)=$P($G(FBD(FBI,"SVC")),U)
"RTN","FBFHLS",153,0)
 . ;
"RTN","FBFHLS",154,0)
 . I FBTTYP="C" D
"RTN","FBFHLS",155,0)
 . . ; DRG (025)
"RTN","FBFHLS",156,0)
 . . S $P(FBFT1,HLFS,26)=$P(FBD(0,"DRG"),U)
"RTN","FBFHLS",157,0)
 . ;
"RTN","FBFHLS",158,0)
 . I FBTTYP="L" D
"RTN","FBFHLS",159,0)
 . . ; MODIFIERS (026)
"RTN","FBFHLS",160,0)
 . . S $P(FBFT1,HLFS,27)=$P($G(FBD(FBI,"SVC")),U,3)
"RTN","FBFHLS",161,0)
 . ;
"RTN","FBFHLS",162,0)
 . I FBTTYP="C" D
"RTN","FBFHLS",163,0)
 . . ; DRG WEIGHT (026)
"RTN","FBFHLS",164,0)
 . . S $P(FBFT1,HLFS,27)=$P(FBD(0,"DRG"),U,2)
"RTN","FBFHLS",165,0)
 . ;
"RTN","FBFHLS",166,0)
 . ; generate and store FT1s for each of the different $ amounts
"RTN","FBFHLS",167,0)
 . ; amount claimed
"RTN","FBFHLS",168,0)
 . S FBX=$$FT1(1,$P(FBD(FBI,"AMT"),U)) D TMPHL
"RTN","FBFHLS",169,0)
 . ; amount paid
"RTN","FBFHLS",170,0)
 . S FBX=$$FT1(2,$P(FBD(FBI,"AMT"),U,2)) D TMPHL
"RTN","FBFHLS",171,0)
 . ; interest amount (conditional)
"RTN","FBFHLS",172,0)
 . I $P(FBD(0,"AMT"),U,2)>0 S FBX=$$FT1(3,$P(FBD(0,"AMT"),U,2)) D TMPHL
"RTN","FBFHLS",173,0)
 . ; disbursed amount
"RTN","FBFHLS",174,0)
 . S FBX=$$FT1(4,$P(FBD(0,"AMT"),U)) D TMPHL
"RTN","FBFHLS",175,0)
 . ; adjustment amount 1 (conditional)
"RTN","FBFHLS",176,0)
 . I $P($G(FBD(FBI,"ADJ")),U,3)>0 S FBX=$$FT1(5,$P(FBD(FBI,"ADJ"),U,1,3)) D TMPHL
"RTN","FBFHLS",177,0)
 . I FBTTYP="L" D
"RTN","FBFHLS",178,0)
 . . ; adjustment amount 2 (conditional)
"RTN","FBFHLS",179,0)
 . . I $P($G(FBD(FBI,"ADJ")),U,6)>0 S FBX=$$FT1(5,$P(FBD(FBI,"ADJ"),U,4,6)) D TMPHL
"RTN","FBFHLS",180,0)
 ;
"RTN","FBFHLS",181,0)
 Q
"RTN","FBFHLS",182,0)
 ;
"RTN","FBFHLS",183,0)
X ; Cancel Transaction
"RTN","FBFHLS",184,0)
 N FBCOMP,FBFLD,FBFT1,FBL,FBORC
"RTN","FBFHLS",185,0)
 S FBL=0 ; line counter for HL7 lines in ^TMP("HLS",$J,line
"RTN","FBFHLS",186,0)
 S FBORC="ORC"
"RTN","FBFHLS",187,0)
 ; transaction type (005)
"RTN","FBFHLS",188,0)
 S $P(FBORC,HLFS,6)=$P(FBD(0,"INV"),U,2)
"RTN","FBFHLS",189,0)
 ;
"RTN","FBFHLS",190,0)
 ; cancel date (009.1)
"RTN","FBFHLS",191,0)
 S FBFLD=$P(FBORC,HLFS,10)
"RTN","FBFHLS",192,0)
 S $P(FBFLD,$E(HLECH,1),1)=$$FMTHL7^XLFDT($P(FBD(0,"CAN"),U))
"RTN","FBFHLS",193,0)
 S $P(FBORC,HLFS,10)=FBFLD
"RTN","FBFHLS",194,0)
 ;
"RTN","FBFHLS",195,0)
 ; station number (013.4.2)
"RTN","FBFHLS",196,0)
 S FBFLD=$P(FBORC,HLFS,14)
"RTN","FBFHLS",197,0)
 S FBCOMP=$P(FBFLD,$E(HLECH,1),4)
"RTN","FBFHLS",198,0)
 S $P(FBCOMP,$E(HLECH,2),2)=$P(FBD(0,"INV"),U,3)
"RTN","FBFHLS",199,0)
 S $P(FBFLD,$E(HLECH,1),4)=FBCOMP
"RTN","FBFHLS",200,0)
 S $P(FBORC,HLFS,14)=FBFLD
"RTN","FBFHLS",201,0)
 ;
"RTN","FBFHLS",202,0)
 S FBFT1="FT1"
"RTN","FBFHLS",203,0)
 ;
"RTN","FBFHLS",204,0)
 ; FPPS CLAIM (002)
"RTN","FBFHLS",205,0)
 S $P(FBFT1,HLFS,3)=$P(FBD(0,"FPPS"),U)
"RTN","FBFHLS",206,0)
 ;
"RTN","FBFHLS",207,0)
 ; INVOICE # (003)
"RTN","FBFHLS",208,0)
 S $P(FBFT1,HLFS,4)=$P(FBD(0,"INV"),U)
"RTN","FBFHLS",209,0)
 ;
"RTN","FBFHLS",210,0)
 ; CANCEL ACTIVITY CODE (006)
"RTN","FBFHLS",211,0)
 S $P(FBFT1,HLFS,7)="F"_$P(FBD(0,"CAN"),U,3)
"RTN","FBFHLS",212,0)
 ;
"RTN","FBFHLS",213,0)
 ; CANCEL REASON (017)
"RTN","FBFHLS",214,0)
 S $P(FBFT1,HLFS,18)=$P(FBD(0,"CAN"),U,2)
"RTN","FBFHLS",215,0)
 ;
"RTN","FBFHLS",216,0)
 ; store HL segments for line item
"RTN","FBFHLS",217,0)
 S FBX=FBORC D TMPHL
"RTN","FBFHLS",218,0)
 S FBX=FBFT1 D TMPHL
"RTN","FBFHLS",219,0)
 ;
"RTN","FBFHLS",220,0)
 Q
"RTN","FBFHLS",221,0)
 ;
"RTN","FBFHLS",222,0)
EXPLIST(FBLIST) ; expand ranges in a list
"RTN","FBFHLS",223,0)
 ; input FBIST - list or range or "ALL"
"RTN","FBFHLS",224,0)
 ; result expanded list (e.g. "1-3" returned as "1,2,3")
"RTN","FBFHLS",225,0)
 ;
"RTN","FBFHLS",226,0)
 N FBER,FBRET,FBLIST2,FBI,FBX,FBY
"RTN","FBFHLS",227,0)
 S FBRET=$G(FBLIST)
"RTN","FBFHLS",228,0)
 I FBRET["-" D
"RTN","FBFHLS",229,0)
 . S FBLIST2="" ; init new list
"RTN","FBFHLS",230,0)
 . ; loop thru comma pieces in original list
"RTN","FBFHLS",231,0)
 . F FBI=1:1 S FBX=$P(FBLIST,",",FBI) Q:FBX=""  D
"RTN","FBFHLS",232,0)
 . . I FBX'["-" S FBLIST2=FBLIST2_FBX_"," Q  ; not range - put in new
"RTN","FBFHLS",233,0)
 . . ; expand range then put in new
"RTN","FBFHLS",234,0)
 . . S FBER=""
"RTN","FBFHLS",235,0)
 . . F FBY=$P(FBX,"-"):1:$P(FBX,"-",2) S FBER=FBER_FBY_","
"RTN","FBFHLS",236,0)
 . . ; append expanded range to new list
"RTN","FBFHLS",237,0)
 . . S FBLIST2=FBLIST2_FBER
"RTN","FBFHLS",238,0)
 . ; replace return value with expanded list
"RTN","FBFHLS",239,0)
 . S FBRET=FBLIST2
"RTN","FBFHLS",240,0)
 ;
"RTN","FBFHLS",241,0)
 ; remove trailing comma
"RTN","FBFHLS",242,0)
 I $E(FBRET,$L(FBRET))="," S FBRET=$E(FBRET,1,$L(FBRET)-1)
"RTN","FBFHLS",243,0)
 ;
"RTN","FBFHLS",244,0)
 Q FBRET
"RTN","FBFHLS",245,0)
 ;
"RTN","FBFHLS",246,0)
FT1(FBTYAMT,FBX) ; add amount to FT1 segment
"RTN","FBFHLS",247,0)
 ; input
"RTN","FBFHLS",248,0)
 ;   FBTYAMT - type of amount (1,2,3,4,5)
"RTN","FBFHLS",249,0)
 ;   FBX - if type 1-4 then amount
"RTN","FBFHLS",250,0)
 ;       - if type 5 then adj reason^adjustment group^adj amount
"RTN","FBFHLS",251,0)
 ;   FBFT1 - FT1 segment without an amount
"RTN","FBFHLS",252,0)
 ; result (string)
"RTN","FBFHLS",253,0)
 ;   FT1 segment with amount (and reason, group) inserted
"RTN","FBFHLS",254,0)
 N FBRET
"RTN","FBFHLS",255,0)
 S FBRET=FBFT1
"RTN","FBFHLS",256,0)
 ;
"RTN","FBFHLS",257,0)
 ; TYPE AMOUNT (007)
"RTN","FBFHLS",258,0)
 S $P(FBRET,HLFS,8)=FBTYAMT
"RTN","FBFHLS",259,0)
 ;
"RTN","FBFHLS",260,0)
 ; AMOUNT (011)
"RTN","FBFHLS",261,0)
 I FBTYAMT<5 S $P(FBRET,HLFS,12)=$FN($P(FBX,U),"",2)
"RTN","FBFHLS",262,0)
 I FBTYAMT=5 S $P(FBRET,HLFS,12)=$FN($P(FBX,U,3),"",2)
"RTN","FBFHLS",263,0)
 ;
"RTN","FBFHLS",264,0)
 ; ADJUSTMENT REASON (017)
"RTN","FBFHLS",265,0)
 I FBTYAMT=5 S $P(FBRET,HLFS,18)=$P(FBX,U)
"RTN","FBFHLS",266,0)
 ;
"RTN","FBFHLS",267,0)
 ; ADJUSTMENT GROUP (018)
"RTN","FBFHLS",268,0)
 I FBTYAMT=5 S $P(FBRET,HLFS,19)=$P(FBX,U,2)
"RTN","FBFHLS",269,0)
 ;
"RTN","FBFHLS",270,0)
 Q FBRET
"RTN","FBFHLS",271,0)
 ;
"RTN","FBFHLS",272,0)
TMPHL ; Place HL7 segment in ^TMP
"RTN","FBFHLS",273,0)
 ; input
"RTN","FBFHLS",274,0)
 ;   FBL - last line written to ^TMP
"RTN","FBFHLS",275,0)
 ;   FBX - HL7 segment
"RTN","FBFHLS",276,0)
 ; output
"RTN","FBFHLS",277,0)
 ;   FBL - will be incremented by 1
"RTN","FBFHLS",278,0)
 ;   stores FBX in ^TMP("HLS",$J,FBL+1)
"RTN","FBFHLS",279,0)
 ;   if length of FBX exceeds 244 then continuation lines will be used
"RTN","FBFHLS",280,0)
 ;     example ^TMP($J,"HLS",$J,FBL+1,1)
"RTN","FBFHLS",281,0)
 N FBLS
"RTN","FBFHLS",282,0)
 S FBL=FBL+1
"RTN","FBFHLS",283,0)
 I $L(FBX)<245 S ^TMP("HLS",$J,FBL)=FBX Q
"RTN","FBFHLS",284,0)
 S ^TMP("HLS",$J,FBL)=$E(FBX,1,244)
"RTN","FBFHLS",285,0)
 F FBLS=1:1 Q:$E(FBX,(FBLS*244)+1,(FBLS*244)+244)=""  D
"RTN","FBFHLS",286,0)
 . S ^TMP("HLS",$J,FBL,FBLS)=$E(FBX,(FBLS*244)+1,(FBLS*244)+244)
"RTN","FBFHLS",287,0)
 Q
"RTN","FBFHLS",288,0)
 ;
"RTN","FBFHLS",289,0)
 ;FBFHLS
"RTN","FBFHLS1")
0^68^B3570826
"RTN","FBFHLS1",1,0)
FBFHLS1 ;OIFO/SAB-BUILD HL7 MESSAGE SEGMENTS (CONTINUED) ;9/9/2003
"RTN","FBFHLS1",2,0)
 ;;3.5;FEE BASIS;**61**;JULY 18, 2003
"RTN","FBFHLS1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLS1",4,0)
 Q
"RTN","FBFHLS1",5,0)
 ;
"RTN","FBFHLS1",6,0)
CHKREQ ; Check for required fields
"RTN","FBFHLS1",7,0)
 ; input
"RTN","FBFHLS1",8,0)
 ;   FBAAIN - invoice number (or 0 if number not known)
"RTN","FBFHLS1",9,0)
 ;   FBTTYP - transaction type (C,L, or X)
"RTN","FBFHLS1",10,0)
 ;   FBD( array of invoice data - see FBFHLS for more info
"RTN","FBFHLS1",11,0)
 ; output
"RTN","FBFHLS1",12,0)
 ;   if problems found
"RTN","FBFHLS1",13,0)
 ;   ^TMP($J,"FBE",invoice number,seq number)=error text
"RTN","FBFHLS1",14,0)
 ;
"RTN","FBFHLS1",15,0)
 ; CLX  transaction type
"RTN","FBFHLS1",16,0)
 ; CLX  station number
"RTN","FBFHLS1",17,0)
 ; CLX  FPPS claim
"RTN","FBFHLS1",18,0)
 ; CL   invoice date
"RTN","FBFHLS1",19,0)
 ;   X  cancellation date
"RTN","FBFHLS1",20,0)
 ; CL   FPPS line
"RTN","FBFHLS1",21,0)
 ;
"RTN","FBFHLS1",22,0)
 N FBI
"RTN","FBFHLS1",23,0)
 ;
"RTN","FBFHLS1",24,0)
 ; check for required claim level data
"RTN","FBFHLS1",25,0)
 I "^C^L^X^"'[(U_$P($G(FBD(0,"INV")),U,2)_U) D POST^FBFHLU(FBAAIN,"E","INVALID TRANSACTION TYPE")
"RTN","FBFHLS1",26,0)
 I $P($G(FBD(0,"INV")),U)="" D POST^FBFHLU(FBAAIN,"E","MISSING INVOICE NUMBER")
"RTN","FBFHLS1",27,0)
 I $P($G(FBD(0,"FPPS")),U)="" D POST^FBFHLU(FBAAIN,"E","MISSING FPPS CLAIM ID")
"RTN","FBFHLS1",28,0)
 I "^C^L^"[(U_FBTTYP_U),$P($G(FBD(0,"DT")),U)="" D POST^FBFHLU(FBAAIN,"E","MISSING INVOICE DATE")
"RTN","FBFHLS1",29,0)
 I "^X^"[(U_FBTTYP_U),$P($G(FBD(0,"CAN")),U)="" D POST^FBFHLU(FBAAIN,"E","MISSING CANCELLATION DATE")
"RTN","FBFHLS1",30,0)
 ;
"RTN","FBFHLS1",31,0)
 ; check for required line level data
"RTN","FBFHLS1",32,0)
 I "^C^L^"[(U_FBTTYP_U) D
"RTN","FBFHLS1",33,0)
 . S FBI=0 F  S FBI=$O(FBD(FBI)) Q:'FBI  D
"RTN","FBFHLS1",34,0)
 . . I $P($G(FBD(FBI,"FPPS")),U)="" D POST^FBFHLU(FBAAIN,"E","MISSING FPPS LINE ITEM")
"RTN","FBFHLS1",35,0)
 . . I $P($G(FBD(FBI,"AMT")),U,2)>0,$P($G(FBD(FBI,"CK")),U)="" D POST^FBFHLU(FBAAIN,"E","MISSING CHECK NUMBER")
"RTN","FBFHLS1",36,0)
 ;
"RTN","FBFHLS1",37,0)
 Q
"RTN","FBFHLS1",38,0)
 ;
"RTN","FBFHLS1",39,0)
 ;FBFHLS1
"RTN","FBFHLU")
0^69^B2790286
"RTN","FBFHLU",1,0)
FBFHLU ;OIFO/SAB-FPPS HL UTILITIES ;08/24/2003
"RTN","FBFHLU",2,0)
 ;;3.5;FEE BASIS;**61**;JULY 18, 2003
"RTN","FBFHLU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLU",4,0)
 Q
"RTN","FBFHLU",5,0)
 ;
"RTN","FBFHLU",6,0)
PAYMETH(FBCKNO) ; payment method extrinsic function
"RTN","FBFHLU",7,0)
 ; input
"RTN","FBFHLU",8,0)
 ;   FBCHNO - check number
"RTN","FBFHLU",9,0)
 ; result is string value
"RTN","FBFHLU",10,0)
 ;   CC, EFT, CHK
"RTN","FBFHLU",11,0)
 ;   
"RTN","FBFHLU",12,0)
 I $G(FBCKNO)="" Q "" ; no check number
"RTN","FBFHLU",13,0)
 I $E(FBCKNO,1,2)="CC" Q "CC" ; credit card payment
"RTN","FBFHLU",14,0)
 I $L(FBCKNO)<8 Q "EFT" ; electronic funds transfer
"RTN","FBFHLU",15,0)
 Q "CHK" ; all other are paper check
"RTN","FBFHLU",16,0)
 ;
"RTN","FBFHLU",17,0)
POST(FBAAIN,FBFLAG,FBMSG) ; Post Exception/Warning
"RTN","FBFHLU",18,0)
 ; input
"RTN","FBFHLU",19,0)
 ;   FBAAIN - invoice number
"RTN","FBFHLU",20,0)
 ;   FBFLAG - flag (E or W) for (E)xception or (W)arning
"RTN","FBFHLU",21,0)
 ;            exceptions will prevent transmit of invoice to FPPS
"RTN","FBFHLU",22,0)
 ;            warnings will not prevent transmit 
"RTN","FBFHLU",23,0)
 ;   FBMSG  - text of message
"RTN","FBFHLU",24,0)
 ;
"RTN","FBFHLU",25,0)
 N FBI
"RTN","FBFHLU",26,0)
 ; determine last seq number used for invoice
"RTN","FBFHLU",27,0)
 S FBI=$O(^TMP($J,"FB"_FBFLAG,FBAAIN," "),-1)
"RTN","FBFHLU",28,0)
 ; post new message
"RTN","FBFHLU",29,0)
 S ^TMP($J,"FB"_FBFLAG,FBAAIN,FBI+1)=FBMSG
"RTN","FBFHLU",30,0)
 Q
"RTN","FBFHLU",31,0)
 ;
"RTN","FBFHLU",32,0)
STANO(FBBATCH) ; station number extrinsic function
"RTN","FBFHLU",33,0)
 ; Input
"RTN","FBFHLU",34,0)
 ;   FBBATCH - ien of entry in FEE BASIS BATCH (#161.7) file
"RTN","FBFHLU",35,0)
 ; Returns station number or NULL value
"RTN","FBFHLU",36,0)
 ;
"RTN","FBFHLU",37,0)
 N FBRET,FBY
"RTN","FBFHLU",38,0)
 S FBRET=""
"RTN","FBFHLU",39,0)
 I $G(FBBATCH) D
"RTN","FBFHLU",40,0)
 . S FBY=$G(^FBAA(161.7,FBBATCH,0))
"RTN","FBFHLU",41,0)
 . S FBRET=$$SUB^FBAAUTL5(+$P(FBY,U,8)_"-"_$P(FBY,U,2))
"RTN","FBFHLU",42,0)
 . Q:FBRET]""  ; have value from IFCAP API
"RTN","FBFHLU",43,0)
 . ; else get from Institution file based on fee site parameters
"RTN","FBFHLU",44,0)
 . S FBRET=$$GET1^DIQ(161.4,"1,","27:99")
"RTN","FBFHLU",45,0)
 Q FBRET
"RTN","FBFHLU",46,0)
 ;
"RTN","FBFHLU",47,0)
LAST(FBAAIN) ; function to return last entry in file 163.5 for invoice
"RTN","FBFHLU",48,0)
 ; input
"RTN","FBFHLU",49,0)
 ;   FBAAIN - invoice number
"RTN","FBFHLU",50,0)
 ; result is string with ien of last entry in file or null
"RTN","FBFHLU",51,0)
 N FBRET
"RTN","FBFHLU",52,0)
 S FBRET=""
"RTN","FBFHLU",53,0)
 I $G(FBAAIN) S FBRET=$O(^FBHL(163.5,"B",FBAAIN," "),-1)
"RTN","FBFHLU",54,0)
 Q FBRET
"RTN","FBFHLU",55,0)
 ;
"RTN","FBFHLU",56,0)
 ;FBFHLU
"RTN","FBFHLX")
0^66^B54858004
"RTN","FBFHLX",1,0)
FBFHLX ;WOIFO/SAB-TRANSMIT HL7 MESSAGES TO FPPS ;10/8/2003
"RTN","FBFHLX",2,0)
 ;;3.5;FEE BASIS;**61**;JULY 18, 2003
"RTN","FBFHLX",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLX",4,0)
 Q
"RTN","FBFHLX",5,0)
 ;
"RTN","FBFHLX",6,0)
EN ; Entry Point
"RTN","FBFHLX",7,0)
 ;   may be called by scheduled option as non-interactive task
"RTN","FBFHLX",8,0)
 ;   may be called by user menu option as interactive task
"RTN","FBFHLX",9,0)
 ;
"RTN","FBFHLX",10,0)
 N FBMODE,FBQUIT
"RTN","FBFHLX",11,0)
 S FBQUIT=0
"RTN","FBFHLX",12,0)
 ;
"RTN","FBFHLX",13,0)
 ; Determine Mode - (A)LL PENDING or BY SELECTED (I)NVOICE
"RTN","FBFHLX",14,0)
 I $E(IOST,1,2)'="C-" S FBMODE="A" ; non-interactive is always ALL
"RTN","FBFHLX",15,0)
 I $E(IOST,1,2)="C-" D
"RTN","FBFHLX",16,0)
 . ; ask mode
"RTN","FBFHLX",17,0)
 . W !,"This option transmits HL7 messages to FPPS for EDI invoices."
"RTN","FBFHLX",18,0)
 . S DIR(0)="S^I:By Specified Invoice;A:All Pending Invoices"
"RTN","FBFHLX",19,0)
 . S DIR("A")="Select Transmission Option"
"RTN","FBFHLX",20,0)
 . S DIR("?",1)="Enter I to transmit a single invoice or A to transmit"
"RTN","FBFHLX",21,0)
 . S DIR("?",2)="all pending invoices.  If I is entered then you will be"
"RTN","FBFHLX",22,0)
 . S DIR("?",3)="asked to select the invoice."
"RTN","FBFHLX",23,0)
 . S DIR("?",4)=""
"RTN","FBFHLX",24,0)
 . S DIR("?")="Enter a code from the list."
"RTN","FBFHLX",25,0)
 . D ^DIR K DIR I $D(DIRUT) S FBQUIT=1 Q
"RTN","FBFHLX",26,0)
 . S FBMODE=Y
"RTN","FBFHLX",27,0)
 . ; confirm all
"RTN","FBFHLX",28,0)
 . I FBMODE="A" D
"RTN","FBFHLX",29,0)
 . . S DIR(0)="Y",DIR("A")="Transmit all pending invoices now"
"RTN","FBFHLX",30,0)
 . . D ^DIR K DIR I 'Y!$D(DIRUT) S FBQUIT=1 Q
"RTN","FBFHLX",31,0)
 Q:FBQUIT
"RTN","FBFHLX",32,0)
 ;
"RTN","FBFHLX",33,0)
 I FBMODE="A" D ALL
"RTN","FBFHLX",34,0)
 I FBMODE="I" D BYINV
"RTN","FBFHLX",35,0)
 ;
"RTN","FBFHLX",36,0)
 Q
"RTN","FBFHLX",37,0)
 ;
"RTN","FBFHLX",38,0)
ALL ; Transmit All Pending Invoices (interactive and non-interactive)
"RTN","FBFHLX",39,0)
 ; input
"RTN","FBFHLX",40,0)
 ;   FBQUIT - boolean value (0 or 1), true if process should stop
"RTN","FBFHLX",41,0)
 ; output
"RTN","FBFHLX",42,0)
 ;   FBQUIT - may change value
"RTN","FBFHLX",43,0)
 ;
"RTN","FBFHLX",44,0)
 N FBCNT,FBERR,FBHL,FBQDA,FBSTA,FBTTYP,FBXL,FBXMIT,HLFS,HLECH
"RTN","FBFHLX",45,0)
 ;
"RTN","FBFHLX",46,0)
 ; init
"RTN","FBFHLX",47,0)
 S FBXL=20 ; last line used for message text (save 20 lines for header)
"RTN","FBFHLX",48,0)
 S FBCNT("PENDT")=0 ; count of pending invoices that were transmitted
"RTN","FBFHLX",49,0)
 S FBCNT("PENDE")=0 ; count of pending invoices that had exception
"RTN","FBFHLX",50,0)
 ;
"RTN","FBFHLX",51,0)
 ; save time that process started
"RTN","FBFHLX",52,0)
 S FBXMIT("START")=$$NOW^XLFDT()
"RTN","FBFHLX",53,0)
 I $E(IOST,1,2)="C-" W !!,"Starting Process..."
"RTN","FBFHLX",54,0)
 ;
"RTN","FBFHLX",55,0)
 ; initialize HL variables
"RTN","FBFHLX",56,0)
 D INIT^HLFNC2("FB FEE TO FPPS EVENT",.FBHL)
"RTN","FBFHLX",57,0)
 I $G(FBHL) D
"RTN","FBFHLX",58,0)
 . S FBQUIT=1
"RTN","FBFHLX",59,0)
 . D PTXT^FBFHLX1(.FBXL,"Error: Unable to initialize HL variables.")
"RTN","FBFHLX",60,0)
 . D PTXT^FBFHLX1(.FBXL,FBHL)
"RTN","FBFHLX",61,0)
 E  D
"RTN","FBFHLX",62,0)
 . S HLFS=FBHL("FS")
"RTN","FBFHLX",63,0)
 . S HLECH=FBHL("ECH")
"RTN","FBFHLX",64,0)
 ;
"RTN","FBFHLX",65,0)
 ; check for transmitted invoices w/o commit ACK
"RTN","FBFHLX",66,0)
 S FBXMIT("ACK")=$$NOW^XLFDT()
"RTN","FBFHLX",67,0)
 I 'FBQUIT,$E(IOST,1,2)="C-" W !!,"Checking for acknowledgements..."
"RTN","FBFHLX",68,0)
 I 'FBQUIT D CHKACK^FBFHLX1
"RTN","FBFHLX",69,0)
 ;
"RTN","FBFHLX",70,0)
 S FBXMIT("SEND")=$$NOW^XLFDT()
"RTN","FBFHLX",71,0)
 I 'FBQUIT,$E(IOST,1,2)="C-" W !!,"Transmitting Pending Invoices..."
"RTN","FBFHLX",72,0)
 ; loop thru pending invoices and transmit
"RTN","FBFHLX",73,0)
 S FBQDA=0 F  S FBQDA=$O(^FBHL(163.5,"AC",0,FBQDA)) Q:'FBQDA!FBQUIT  D
"RTN","FBFHLX",74,0)
 . ; check for taskman quit request
"RTN","FBFHLX",75,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,FBQUIT=1 Q
"RTN","FBFHLX",76,0)
 . ; try to transmit invoice
"RTN","FBFHLX",77,0)
 . D INVOICE
"RTN","FBFHLX",78,0)
 . ; update counters based on result
"RTN","FBFHLX",79,0)
 . I FBERR S FBCNT("PENDE")=FBCNT("PENDE")+1
"RTN","FBFHLX",80,0)
 . E  S FBCNT("PENDT")=FBCNT("PENDT")+1
"RTN","FBFHLX",81,0)
 ;
"RTN","FBFHLX",82,0)
 ; save time that process ended
"RTN","FBFHLX",83,0)
 S FBXMIT("END")=$$NOW^XLFDT()
"RTN","FBFHLX",84,0)
 I $E(IOST,1,2)="C-" W !!,"Process complete. Sending Summary Message to G.FEE..."
"RTN","FBFHLX",85,0)
 ;
"RTN","FBFHLX",86,0)
 ; build and send summary mail message to G.FEE
"RTN","FBFHLX",87,0)
 D SUMMSG^FBFHLX1
"RTN","FBFHLX",88,0)
 ;
"RTN","FBFHLX",89,0)
 ; clean-up
"RTN","FBFHLX",90,0)
 K ^TMP($J,"FBE"),^TMP($J,"FBNA"),^TMP($J,"FBW"),^TMP($J,"FBX")
"RTN","FBFHLX",91,0)
 ;
"RTN","FBFHLX",92,0)
 Q
"RTN","FBFHLX",93,0)
 ;
"RTN","FBFHLX",94,0)
BYINV ; Transmit Selected Invoices (interactive)
"RTN","FBFHLX",95,0)
 ;
"RTN","FBFHLX",96,0)
 N FBAAIN,FBERR,FBHL,FBQDA,FBSTA,FBTTYP,FBX,HLFS,HLECH
"RTN","FBFHLX",97,0)
 ;
"RTN","FBFHLX",98,0)
 ; initialize HL variables
"RTN","FBFHLX",99,0)
 D INIT^HLFNC2("FB FEE TO FPPS EVENT",.FBHL)
"RTN","FBFHLX",100,0)
 I $G(FBHL) D  Q
"RTN","FBFHLX",101,0)
 . W !,$C(7),"ERROR: Couldn't initialize HL variables!"
"RTN","FBFHLX",102,0)
 . W !,FBHL
"RTN","FBFHLX",103,0)
 S HLFS=FBHL("FS")
"RTN","FBFHLX",104,0)
 S HLECH=FBHL("ECH")
"RTN","FBFHLX",105,0)
 ;
"RTN","FBFHLX",106,0)
 ; select invoice
"RTN","FBFHLX",107,0)
 F  Q:FBQUIT  D
"RTN","FBFHLX",108,0)
 . S DIC="^FBHL(163.5,",DIC(0)="AEQM"
"RTN","FBFHLX",109,0)
 . D ^DIC I Y'>0 S FBQUIT=1 Q
"RTN","FBFHLX",110,0)
 . S FBQDA=+Y
"RTN","FBFHLX",111,0)
 . ;
"RTN","FBFHLX",112,0)
 . ; get invoice number and switch to last entry for invoice
"RTN","FBFHLX",113,0)
 . S FBAAIN=$P($G(^FBHL(163.5,FBQDA,0)),U)
"RTN","FBFHLX",114,0)
 . S FBQDA=$$LAST^FBFHLU(FBAAIN)
"RTN","FBFHLX",115,0)
 . I 'FBQDA W !,"Error, invalid data for invoice ",FBAAIN," in file 163.5" Q
"RTN","FBFHLX",116,0)
 . S FBQY=$G(^FBHL(163.5,FBQDA,0))
"RTN","FBFHLX",117,0)
 . ;
"RTN","FBFHLX",118,0)
 . ; confirm
"RTN","FBFHLX",119,0)
 . S FBX=$S($P(FBQY,U,3)=0:"",1:"re-")
"RTN","FBFHLX",120,0)
 . S DIR(0)="Y"
"RTN","FBFHLX",121,0)
 . S DIR("A")="Do you want to "_FBX_"transmit invoice "_FBAAIN
"RTN","FBFHLX",122,0)
 . D ^DIR K DIR S:$D(DIRUT) FBQUIT=1 I 'Y Q
"RTN","FBFHLX",123,0)
 . ;
"RTN","FBFHLX",124,0)
 . ; if re-transmit then create a new pending entry for invoice
"RTN","FBFHLX",125,0)
 . I FBX="re-" D
"RTN","FBFHLX",126,0)
 . . D FILEQUE^FBFHLL(FBAAIN,$P(FBQY,U,2))
"RTN","FBFHLX",127,0)
 . . S FBQDA=$$LAST^FBFHLU(FBAAIN)
"RTN","FBFHLX",128,0)
 . . I FBQDA S FBQY=$G(^FBHL(163.5,FBQDA,0))
"RTN","FBFHLX",129,0)
 . . E  S FBQY=""
"RTN","FBFHLX",130,0)
 . ;
"RTN","FBFHLX",131,0)
 . ; check that pending entry was added
"RTN","FBFHLX",132,0)
 . I FBX="re-",$P(FBQY,U,3)'=0 D  Q
"RTN","FBFHLX",133,0)
 . . W !,"Error adding entry to file 163.5. Can't re-transmit invoice."
"RTN","FBFHLX",134,0)
 . ;
"RTN","FBFHLX",135,0)
 . ; transmit specified invoice
"RTN","FBFHLX",136,0)
 . D INVOICE
"RTN","FBFHLX",137,0)
 . ;
"RTN","FBFHLX",138,0)
 . ; report success or failure of transmit
"RTN","FBFHLX",139,0)
 . I FBERR=0 W !,"Invoice has been transmitted to the HL7 package.",!!
"RTN","FBFHLX",140,0)
 . I FBERR=1 D
"RTN","FBFHLX",141,0)
 . . N FBL
"RTN","FBFHLX",142,0)
 . . W $C(7),!,"Problems prevented transmission of the invoice."
"RTN","FBFHLX",143,0)
 . . S FBL=0 F  S FBL=$O(^TMP($J,"FBE",FBAAIN,FBL)) Q:'FBL  D
"RTN","FBFHLX",144,0)
 . . . W !,"  ",$G(^TMP($J,"FBE",FBAAIN,FBL))
"RTN","FBFHLX",145,0)
 . . W !
"RTN","FBFHLX",146,0)
 . ;
"RTN","FBFHLX",147,0)
 . ; clean up after transmit
"RTN","FBFHLX",148,0)
 . K ^TMP($J,"FBE",FBAAIN)
"RTN","FBFHLX",149,0)
 . K ^TMP($J,"FBW",FBAAIN)
"RTN","FBFHLX",150,0)
 ;
"RTN","FBFHLX",151,0)
 Q
"RTN","FBFHLX",152,0)
 ;
"RTN","FBFHLX",153,0)
INVOICE ; transmit invoice
"RTN","FBFHLX",154,0)
 ; input
"RTN","FBFHLX",155,0)
 ;   FBQDA - ien of entry in file 163.5 to transmit, required
"RTN","FBFHLX",156,0)
 ; output
"RTN","FBFHLX",157,0)
 ;   FBERR - error flag (0 or 1), true if error prevented transmit
"RTN","FBFHLX",158,0)
 ;   FBSTA  - station number in transmitted message (may be null if err)
"RTN","FBFHLX",159,0)
 ;   FBTTYP - transaction type in transmitted message (may be null)
"RTN","FBFHLX",160,0)
 ;   ^TMP($J,"FBE",invoice number,#) - any exceptions
"RTN","FBFHLX",161,0)
 ;   ^TMP($J,"FBW",invoice number,#) - any warnings
"RTN","FBFHLX",162,0)
 ;
"RTN","FBFHLX",163,0)
 ; N FBAAIN,FBD,FBFILE,FBRESULT,FBQY
"RTN","FBFHLX",164,0)
 ;
"RTN","FBFHLX",165,0)
 ; initialize
"RTN","FBFHLX",166,0)
 S FBERR=0
"RTN","FBFHLX",167,0)
 S FBSTA=""
"RTN","FBFHLX",168,0)
 S FBTTYP=""
"RTN","FBFHLX",169,0)
 ;
"RTN","FBFHLX",170,0)
 ; check for required input
"RTN","FBFHLX",171,0)
 I '$G(FBQDA) S FBERR=1 Q
"RTN","FBFHLX",172,0)
 ;
"RTN","FBFHLX",173,0)
 ; lock record
"RTN","FBFHLX",174,0)
 L +^FBHL(163.5,FBQDA):10
"RTN","FBFHLX",175,0)
 I '$T D  Q
"RTN","FBFHLX",176,0)
 . S FBERR=1
"RTN","FBFHLX",177,0)
 . S FBAAIN=+$P($G(^FBHL(163.5,FBQDA,0)),U)
"RTN","FBFHLX",178,0)
 . I FBAAIN D POST^FBFHLU(FBAAIN,"E","Couldn't Lock Entry "_FBQDA_" in File 163.5.")
"RTN","FBFHLX",179,0)
 ;
"RTN","FBFHLX",180,0)
 ; get invoice number and file number
"RTN","FBFHLX",181,0)
 I 'FBERR D
"RTN","FBFHLX",182,0)
 . N FBQY
"RTN","FBFHLX",183,0)
 . S FBQY=$G(^FBHL(163.5,FBQDA,0))
"RTN","FBFHLX",184,0)
 . S FBAAIN=+$P(FBQY,U)
"RTN","FBFHLX",185,0)
 . I 'FBAAIN D
"RTN","FBFHLX",186,0)
 . . S FBERR=1
"RTN","FBFHLX",187,0)
 . . D POST^FBFHLU(0,"E","Couldn't determine invoice # for entry "_FBQDA_" in file 163.5.")
"RTN","FBFHLX",188,0)
 . Q:FBERR
"RTN","FBFHLX",189,0)
 . S FBFILE=$P(FBQY,U,2)
"RTN","FBFHLX",190,0)
 . I "^3^5^9^"'[(U_FBFILE_U) D
"RTN","FBFHLX",191,0)
 . . S FBERR=1
"RTN","FBFHLX",192,0)
 . . D POST^FBFHLU(FBAAIN,"E","Invalid File # for entry "_FBQDA_" in file 163.5.")
"RTN","FBFHLX",193,0)
 ;
"RTN","FBFHLX",194,0)
 ; gather invoice data
"RTN","FBFHLX",195,0)
 I 'FBERR D @("EN^FBFHLD"_FBFILE) I $D(^TMP($J,"FBE",FBAAIN)) S FBERR=1
"RTN","FBFHLX",196,0)
 S FBTTYP=$P($G(FBD(0,"INV")),U,2)
"RTN","FBFHLX",197,0)
 S FBSTA=$P($G(FBD(0,"INV")),U,3)
"RTN","FBFHLX",198,0)
 ;
"RTN","FBFHLX",199,0)
 ; build HL segments
"RTN","FBFHLX",200,0)
 I 'FBERR D EN^FBFHLS I $D(^TMP($J,"FBE",FBAAIN)) S FBERR=1
"RTN","FBFHLX",201,0)
 ;
"RTN","FBFHLX",202,0)
 ; generate HL message
"RTN","FBFHLX",203,0)
 I 'FBERR D
"RTN","FBFHLX",204,0)
 . K FBRESULT
"RTN","FBFHLX",205,0)
 . D GENERATE^HLMA("FB FEE TO FPPS EVENT","GM",1,.FBRESULT)
"RTN","FBFHLX",206,0)
 . I +$P(FBRESULT,U,2) D
"RTN","FBFHLX",207,0)
 . . S FBERR=1
"RTN","FBFHLX",208,0)
 . . D POST^FBFHLU(FBAAIN,"E","HL ERR:"_$P(FBRESULT,U,3))
"RTN","FBFHLX",209,0)
 ;
"RTN","FBFHLX",210,0)
 ; update file 163.5
"RTN","FBFHLX",211,0)
 I 'FBERR D
"RTN","FBFHLX",212,0)
 . N FBFDA
"RTN","FBFHLX",213,0)
 . S FBFDA(163.5,FBQDA_",",2)="1" ; set status = transmitted
"RTN","FBFHLX",214,0)
 . S FBFDA(163.5,FBQDA_",",3)=$P(FBRESULT,U) ; message ID
"RTN","FBFHLX",215,0)
 . S FBFDA(163.5,FBQDA_",",4)=$$NOW^XLFDT() ; message date/time
"RTN","FBFHLX",216,0)
 . S FBFDA(163.5,FBQDA_",",5)=FBTTYP ; transaction type
"RTN","FBFHLX",217,0)
 . S FBFDA(163.5,FBQDA_",",6)=FBSTA ; station number
"RTN","FBFHLX",218,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBFHLX",219,0)
 . ;
"RTN","FBFHLX",220,0)
 . ; store HL segments in word-processing field
"RTN","FBFHLX",221,0)
 . D MOVEHL
"RTN","FBFHLX",222,0)
 . D WP^DIE(163.5,FBQDA_",",7,"","^TMP($J,""FBHLSEG"")")
"RTN","FBFHLX",223,0)
 . K ^TMP($J,"FBHLSEG")
"RTN","FBFHLX",224,0)
 ;
"RTN","FBFHLX",225,0)
 ; unlock record
"RTN","FBFHLX",226,0)
 L -^FBHL(163.5,FBQDA)
"RTN","FBFHLX",227,0)
 ;
"RTN","FBFHLX",228,0)
 ; clean-up
"RTN","FBFHLX",229,0)
 K ^TMP("HLS",$J)
"RTN","FBFHLX",230,0)
 Q
"RTN","FBFHLX",231,0)
 ;
"RTN","FBFHLX",232,0)
MOVEHL ; Copy HL segment data into word-processing style array
"RTN","FBFHLX",233,0)
 ; input
"RTN","FBFHLX",234,0)
 ; ^TMP("HLS",$J, array
"RTN","FBFHLX",235,0)
 ; output
"RTN","FBFHLX",236,0)
 ; ^TMP($J,"HLSEG",#)=line of text
"RTN","FBFHLX",237,0)
 ;  there will be a blank line after each segment
"RTN","FBFHLX",238,0)
 ;
"RTN","FBFHLX",239,0)
 N FBI,FBII,FBL
"RTN","FBFHLX",240,0)
 K ^TMP($J,"FBHLSEG")
"RTN","FBFHLX",241,0)
 S FBL=0
"RTN","FBFHLX",242,0)
 S FBI=0 F  S FBI=$O(^TMP("HLS",$J,FBI)) Q:'FBI  D
"RTN","FBFHLX",243,0)
 . S FBL=FBL+1,^TMP($J,"FBHLSEG",FBL)=$G(^TMP("HLS",$J,FBI))
"RTN","FBFHLX",244,0)
 . S FBII=0 F  S FBII=$O(^TMP("HLS",$J,FBI,FBII)) Q:'FBII  D
"RTN","FBFHLX",245,0)
 . . S FBL=FBL+1,^TMP($J,"FBHLSEG",FBL)=$G(^TMP("HLS",$J,FBI,FBII))
"RTN","FBFHLX",246,0)
 . S FBL=FBL+1,^TMP($J,"FBHLSEG",FBL)=""
"RTN","FBFHLX",247,0)
 Q
"RTN","FBFHLX",248,0)
 ;
"RTN","FBFHLX",249,0)
 ;FBFHLX
"RTN","FBFHLX1")
0^67^B29142920
"RTN","FBFHLX1",1,0)
FBFHLX1 ;WOIFO/SAB-TRANSMIT HL7 MESSAGES TO FPPS (CON'T) ;9/9/2003
"RTN","FBFHLX1",2,0)
 ;;3.5;FEE BASIS;**61**;JULY 18, 2003
"RTN","FBFHLX1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBFHLX1",4,0)
 Q
"RTN","FBFHLX1",5,0)
 ;
"RTN","FBFHLX1",6,0)
CHKACK ; check for acknowledgements
"RTN","FBFHLX1",7,0)
 ; input  - none
"RTN","FBFHLX1",8,0)
 ; output
"RTN","FBFHLX1",9,0)
 ;   FBCNT("ACKT") - count of previously transmitted invoices w/o ack
"RTN","FBFHLX1",10,0)
 ;   FBCNT("ACKA") - count of these that were accepted
"RTN","FBFHLX1",11,0)
 ;   FBCNT("ACKR") - count of these that were rejected
"RTN","FBFHLX1",12,0)
 ;   FBCNT("ACKW") - count of these that are still waiting for ack
"RTN","FBFHLX1",13,0)
 ;   ^TMP($J,"FBNA",invoice number)="" - list waiting for ack
"RTN","FBFHLX1",14,0)
 ;   update file 163.5
"RTN","FBFHLX1",15,0)
 N FBAAIN,FBMSGID,FBQDA,FBQY,FBSTATUS,FBX
"RTN","FBFHLX1",16,0)
 ;
"RTN","FBFHLX1",17,0)
 ; initialize
"RTN","FBFHLX1",18,0)
 K ^TMP($J,"FBNA")
"RTN","FBFHLX1",19,0)
 F FBX="ACKA","ACKR","ACKW" S FBCNT(FBX)=0
"RTN","FBFHLX1",20,0)
 ;
"RTN","FBFHLX1",21,0)
 ; loop thru transmitted (not yet acknowledged entries)
"RTN","FBFHLX1",22,0)
 S FBQDA=0  F  S FBQDA=$O(^FBHL(163.5,"AC",1,FBQDA)) Q:'FBQDA  D
"RTN","FBFHLX1",23,0)
 . S FBQY=$G(^FBHL(163.5,FBQDA,0))
"RTN","FBFHLX1",24,0)
 . S FBAAIN=$P(FBQY,U)
"RTN","FBFHLX1",25,0)
 . Q:FBAAIN=""  ; invalid invoice number
"RTN","FBFHLX1",26,0)
 . S FBMSGID=$P(FBQY,U,4)
"RTN","FBFHLX1",27,0)
 . Q:FBMSGID=""
"RTN","FBFHLX1",28,0)
 . ;
"RTN","FBFHLX1",29,0)
 . S FBSTATUS=$$MSGSTAT^HLUTIL(FBMSGID)
"RTN","FBFHLX1",30,0)
 . ;
"RTN","FBFHLX1",31,0)
 . I $P(FBSTATUS,U)=3 D  Q
"RTN","FBFHLX1",32,0)
 . . N FBFDA
"RTN","FBFHLX1",33,0)
 . . S FBFDA(163.5,FBQDA_",",2)="2" ; set status = acknowledged
"RTN","FBFHLX1",34,0)
 . . S FBFDA(163.5,FBQDA_",",8)="A" ; set ACK FLAG = ACCEPTED
"RTN","FBFHLX1",35,0)
 . . S FBFDA(163.5,FBQDA_",",9)=$P(FBSTATUS,U,2) ; set ACK DATE/TIME
"RTN","FBFHLX1",36,0)
 . . I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBFHLX1",37,0)
 . . S FBCNT("ACKA")=FBCNT("ACKA")+1
"RTN","FBFHLX1",38,0)
 . ;
"RTN","FBFHLX1",39,0)
 . I $P(FBSTATUS,U)=4 D  Q
"RTN","FBFHLX1",40,0)
 . . N FBFDA,FBTXT
"RTN","FBFHLX1",41,0)
 . . S FBFDA(163.5,FBQDA_",",2)="2" ; set status = acknowledged
"RTN","FBFHLX1",42,0)
 . . S FBFDA(163.5,FBQDA_",",8)="R" ; set ACK FLAG = rejected
"RTN","FBFHLX1",43,0)
 . . S FBFDA(163.5,FBQDA_",",9)=$P(FBSTATUS,U,2) ; set ACK DATE/TIME
"RTN","FBFHLX1",44,0)
 . . S FBFDA(163.5,FBQDA_",",10)="N" ; rej status = not reported
"RTN","FBFHLX1",45,0)
 . . I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBFHLX1",46,0)
 . . S FBTXT(1)=$P(FBSTATUS,U,3)
"RTN","FBFHLX1",47,0)
 . . I FBTXT(1)]"" D WP^DIE(163.5,FBQDA_",",11,"","FBTXT") ; error msg
"RTN","FBFHLX1",48,0)
 . . S FBCNT("ACKR")=FBCNT("ACKR")+1
"RTN","FBFHLX1",49,0)
 . ;
"RTN","FBFHLX1",50,0)
 . ; don't report not acknowledged unless it is last entry for invoice
"RTN","FBFHLX1",51,0)
 . Q:$$LAST^FBFHLU($P(FBQY,U))'=FBQDA
"RTN","FBFHLX1",52,0)
 . ;
"RTN","FBFHLX1",53,0)
 . ; last entry for invoice was not acknowledged yet
"RTN","FBFHLX1",54,0)
 . S ^TMP($J,"FBNA",FBAAIN)=""
"RTN","FBFHLX1",55,0)
 . S FBCNT("ACKW")=FBCNT("ACKW")+1
"RTN","FBFHLX1",56,0)
 ;
"RTN","FBFHLX1",57,0)
 S FBCNT("ACKT")=FBCNT("ACKA")+FBCNT("ACKR")+FBCNT("ACKW")
"RTN","FBFHLX1",58,0)
 ;
"RTN","FBFHLX1",59,0)
 Q
"RTN","FBFHLX1",60,0)
 ;
"RTN","FBFHLX1",61,0)
SUMMSG ; Summary Message (build and send)
"RTN","FBFHLX1",62,0)
 ; input
"RTN","FBFHLX1",63,0)
 ;   ^TMP($J,"FBE",invoice number,seq number)=error text
"RTN","FBFHLX1",64,0)
 ;   ^TMP($J,"FBW",invoice number,seq number)=warning text
"RTN","FBFHLX1",65,0)
 ;   ^TMP($J,"FBNA",invoice number)="" for invoices not acknowledged
"RTN","FBFHLX1",66,0)
 ;   ^TMP($J,"FBX",seq number)=message text so far
"RTN","FBFHLX1",67,0)
 ;   FBXL = last line used in ^TMP($J,"FBX",seq number)
"RTN","FBFHLX1",68,0)
 ;   FBXMIT("START") = start process, FileMan date/time
"RTN","FBFHLX1",69,0)
 ;   FBXMIT("ACK") = start check for acks, FileMan date/time
"RTN","FBFHLX1",70,0)
 ;   FBXMIT("SEND") = start transmit, FileMan date/time
"RTN","FBFHLX1",71,0)
 ;   FBXMIT("END") = end process, FileMan date/time
"RTN","FBFHLX1",72,0)
 ;   FBCNT("PENDT")= count of pending invoices that were transmitted
"RTN","FBFHLX1",73,0)
 ;   FBCNT("PENDE")= count of pending invoices that had exception
"RTN","FBFHLX1",74,0)
 ;   FBCNT("ACKT") = count of previously transmitted invoices w/o ack
"RTN","FBFHLX1",75,0)
 ;   FBCNT("ACKA") = count of these that were accepted
"RTN","FBFHLX1",76,0)
 ;   FBCNT("ACKR") = count of these that were rejected
"RTN","FBFHLX1",77,0)
 ;   FBCNT("ACKW") = count of these that are still waiting for ack
"RTN","FBFHLX1",78,0)
 ; output
"RTN","FBFHLX1",79,0)
 ;   ^TMP($J,"FBX",
"RTN","FBFHLX1",80,0)
 ;   mail message
"RTN","FBFHLX1",81,0)
 ;
"RTN","FBFHLX1",82,0)
 N XMDUZ,XMSUB,XMTEXT,XMY,XMZ
"RTN","FBFHLX1",83,0)
 ;
"RTN","FBFHLX1",84,0)
 ; add header text
"RTN","FBFHLX1",85,0)
 S ^TMP($J,"FBX",1)=$$FMTE^XLFDT(FBXMIT("START"))_"  Process Started."
"RTN","FBFHLX1",86,0)
 S ^TMP($J,"FBX",2)=$$FMTE^XLFDT(FBXMIT("ACK"))_"  Check transmitted messages for acknowledgement..."
"RTN","FBFHLX1",87,0)
 S ^TMP($J,"FBX",3)="                       "_FBCNT("ACKT")_" previously transmitted messages w/o ack."
"RTN","FBFHLX1",88,0)
 S ^TMP($J,"FBX",4)="                       "_FBCNT("ACKA")_" of these were accepted."
"RTN","FBFHLX1",89,0)
 S ^TMP($J,"FBX",5)="                       "_FBCNT("ACKR")_" of these were rejected."
"RTN","FBFHLX1",90,0)
 S ^TMP($J,"FBX",6)="                       "_FBCNT("ACKW")_" of these still waiting for ack."
"RTN","FBFHLX1",91,0)
 S ^TMP($J,"FBX",7)=$$FMTE^XLFDT(FBXMIT("SEND"))_"  Transmit pending invoices..."
"RTN","FBFHLX1",92,0)
 S ^TMP($J,"FBX",8)="                       "_FBCNT("PENDT")_" transmitted."
"RTN","FBFHLX1",93,0)
 S ^TMP($J,"FBX",9)="                       "_FBCNT("PENDE")_" not transmitted due to exception."
"RTN","FBFHLX1",94,0)
 S ^TMP($J,"FBX",10)=$$FMTE^XLFDT(FBXMIT("END"))_"  Process Complete."
"RTN","FBFHLX1",95,0)
 I $D(ZTSTOP) S ^TMP($J,"FBX",11)="  Process (task) stopped due to user request."
"RTN","FBFHLX1",96,0)
 ;
"RTN","FBFHLX1",97,0)
 ; List Exceptions
"RTN","FBFHLX1",98,0)
 I FBCNT("PENDE")>0 D
"RTN","FBFHLX1",99,0)
 . N FBAAIN,FBL,FBX
"RTN","FBFHLX1",100,0)
 . D PTXT(.FBXL," ")
"RTN","FBFHLX1",101,0)
 . D PTXT(.FBXL,"List of Exceptions during Transmit of Pending Invoices")
"RTN","FBFHLX1",102,0)
 . S FBAAIN="" F  S FBAAIN=$O(^TMP($J,"FBE",FBAAIN)) Q:FBAAIN=""  D
"RTN","FBFHLX1",103,0)
 . . D PTXT(.FBXL,"Invoice: "_FBAAIN)
"RTN","FBFHLX1",104,0)
 . . S FBL=0 F  S FBL=$O(^TMP($J,"FBE",FBAAIN,FBL)) Q:'FBL  D
"RTN","FBFHLX1",105,0)
 . . . S FBX=$G(^TMP($J,"FBE",FBAAIN,FBL))
"RTN","FBFHLX1",106,0)
 . . . I FBX]"" D PTXT(.FBXL,"  "_FBX)
"RTN","FBFHLX1",107,0)
 ;
"RTN","FBFHLX1",108,0)
 ; List Invoices Waiting for Ack
"RTN","FBFHLX1",109,0)
 I FBCNT("ACKW")>0 D
"RTN","FBFHLX1",110,0)
 . N FBAAIN
"RTN","FBFHLX1",111,0)
 . D PTXT(.FBXL," ")
"RTN","FBFHLX1",112,0)
 . D PTXT(.FBXL,"List of Invoices Waiting for Acknowledgement")
"RTN","FBFHLX1",113,0)
 . S FBAAIN="" F  S FBAAIN=$O(^TMP($J,"FBW",FBAAIN)) Q:FBAAIN=""  D
"RTN","FBFHLX1",114,0)
 . . D PTXT(.FBXL,"Invoice: "_FBAAIN)
"RTN","FBFHLX1",115,0)
 ;
"RTN","FBFHLX1",116,0)
 ; Report Rejected Acks
"RTN","FBFHLX1",117,0)
 I $D(^FBHL(163.5,"ARS","N")) D
"RTN","FBFHLX1",118,0)
 . N FBAAIN,FBFDA,FBI,FBQDA,FBTXT,FBWP,FBX
"RTN","FBFHLX1",119,0)
 . D PTXT(.FBXL," ")
"RTN","FBFHLX1",120,0)
 . D PTXT(.FBXL,"List of Rejected Invoices that have not been reported.")
"RTN","FBFHLX1",121,0)
 . S FBQDA=0 F  S FBQDA=$O(^FBHL(163.5,"ARS","N",FBQDA)) Q:'FBQDA  D
"RTN","FBFHLX1",122,0)
 . . S FBQY=$G(^FBHL(163.5,FBQDA,0))
"RTN","FBFHLX1",123,0)
 . . S FBAAIN=$P(FBQY,U)
"RTN","FBFHLX1",124,0)
 . . D PTXT(.FBXL,"Invoice: "_FBAAIN)
"RTN","FBFHLX1",125,0)
 . . ;
"RTN","FBFHLX1",126,0)
 . . K FBWP
"RTN","FBFHLX1",127,0)
 . . S FBX=$$GET1^DIQ(163.5,FBQDA_",",11,"","FBWP")
"RTN","FBFHLX1",128,0)
 . . S FBI=0 F  S FBI=$O(FBWP(FBI)) Q:'FBI  D
"RTN","FBFHLX1",129,0)
 . . . S FBTXT=FBWP(FBI)
"RTN","FBFHLX1",130,0)
 . . . D PTXT(.FBXL,"  "_FBTXT)
"RTN","FBFHLX1",131,0)
 . . ;
"RTN","FBFHLX1",132,0)
 . . K FBFDA
"RTN","FBFHLX1",133,0)
 . . S FBFDA(163,FBQDA_",",10)="R" ; set reject status = reported
"RTN","FBFHLX1",134,0)
 . . I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBFHLX1",135,0)
 ;
"RTN","FBFHLX1",136,0)
 D PTXT(.FBXL," ")
"RTN","FBFHLX1",137,0)
 D PTXT(.FBXL,"END OF SUMMARY MESSAGE")
"RTN","FBFHLX1",138,0)
 ;
"RTN","FBFHLX1",139,0)
 ; send message
"RTN","FBFHLX1",140,0)
 S XMSUB="FEE BASIS FPPS Transmit "_$$FMTE^XLFDT(FBXMIT("START"),"DF")
"RTN","FBFHLX1",141,0)
 S XMDUZ="FEE BASIS"
"RTN","FBFHLX1",142,0)
 S XMY("G.FEE")=""
"RTN","FBFHLX1",143,0)
 S XMTEXT="^TMP($J,""FBX"","
"RTN","FBFHLX1",144,0)
 D ^XMD
"RTN","FBFHLX1",145,0)
 Q
"RTN","FBFHLX1",146,0)
 ;
"RTN","FBFHLX1",147,0)
PTXT(FBXL,FBTXT) ; Post line of text in global array for summary message
"RTN","FBFHLX1",148,0)
 ; input
"RTN","FBFHLX1",149,0)
 ;   FBXL  - last line number used, passed by reference
"RTN","FBFHLX1",150,0)
 ;   FBTXT - line of text
"RTN","FBFHLX1",151,0)
 ; output
"RTN","FBFHLX1",152,0)
 ;   FBXL -  increments value by 1
"RTN","FBFHLX1",153,0)
 ;   ^TMP($J,"FBX",input line+1)=text
"RTN","FBFHLX1",154,0)
 ;
"RTN","FBFHLX1",155,0)
 S FBXL=FBXL+1
"RTN","FBFHLX1",156,0)
 S ^TMP($J,"FBX",FBXL)=FBTXT
"RTN","FBFHLX1",157,0)
 ;
"RTN","FBFHLX1",158,0)
 Q
"RTN","FBFHLX1",159,0)
 ;
"RTN","FBFHLX1",160,0)
 ;FBFHLX1
"RTN","FBFPAR")
0^48^B18873258
"RTN","FBFPAR",1,0)
FBFPAR ;WOIFO/SAB-FPPS AUDIT REPORT ;7/18/2003
"RTN","FBFPAR",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBFPAR",3,0)
 ;
"RTN","FBFPAR",4,0)
 ; ask if BY INVOICE or BY DATE RANGE
"RTN","FBFPAR",5,0)
 S DIR(0)="S^I:Invoice;D:Date Range"
"RTN","FBFPAR",6,0)
 S DIR("A")="Report one invoice or report by Date Range"
"RTN","FBFPAR",7,0)
 S DIR("B")="Date Range"
"RTN","FBFPAR",8,0)
 S DIR("?",1)="Enter I to print the audit data for one invoice."
"RTN","FBFPAR",9,0)
 S DIR("?",2)="Enter D to print all audit data for a date range."
"RTN","FBFPAR",10,0)
 S DIR("?")="Enter a code from the list."
"RTN","FBFPAR",11,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT
"RTN","FBFPAR",12,0)
 S FBRANGE=$S(Y="D":1,1:0)
"RTN","FBFPAR",13,0)
 ;
"RTN","FBFPAR",14,0)
 I FBRANGE D  G:$D(DIRUT) EXIT
"RTN","FBFPAR",15,0)
 . ; ask dates
"RTN","FBFPAR",16,0)
 . S DIR(0)="D^::EX",DIR("A")="From Date"
"RTN","FBFPAR",17,0)
 . ;   default from date is first day of current month
"RTN","FBFPAR",18,0)
 . S DIR("B")=$$FMTE^XLFDT($E(DT,1,5)_"01")
"RTN","FBFPAR",19,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBFPAR",20,0)
 . S FBDT1=Y
"RTN","FBFPAR",21,0)
 . S DIR(0)="DA^"_FBDT1_"::EX",DIR("A")="To Date: "
"RTN","FBFPAR",22,0)
 . ;   default to date is last day of specified month
"RTN","FBFPAR",23,0)
 . S X=FBDT1 D DAYS^FBAAUTL1
"RTN","FBFPAR",24,0)
 . S DIR("B")=$$FMTE^XLFDT($E(FBDT1,1,5)_X)
"RTN","FBFPAR",25,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBFPAR",26,0)
 . S FBDT2=Y
"RTN","FBFPAR",27,0)
 ;
"RTN","FBFPAR",28,0)
 ; If not date range then ask invoice
"RTN","FBFPAR",29,0)
 I 'FBRANGE D  G:$D(DIRUT) EXIT
"RTN","FBFPAR",30,0)
 . S DIR(0)="N",DIR("A")="Invoice Number: "
"RTN","FBFPAR",31,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBFPAR",32,0)
 . S FBAAIN=Y
"RTN","FBFPAR",33,0)
 ;
"RTN","FBFPAR",34,0)
 ; ask device
"RTN","FBFPAR",35,0)
 S %ZIS="QM" D ^%ZIS G:POP EXIT
"RTN","FBFPAR",36,0)
 I $D(IO("Q")) D  G EXIT
"RTN","FBFPAR",37,0)
 . S ZTRTN="QEN^FBFPAR",ZTDESC="FPPS Audit Report"
"RTN","FBFPAR",38,0)
 . F FBX="FBAAIN","FBDT*","FBRANGE" S ZTSAVE(FBX)=""
"RTN","FBFPAR",39,0)
 . D ^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","FBFPAR",40,0)
 ;
"RTN","FBFPAR",41,0)
QEN ; queued entry
"RTN","FBFPAR",42,0)
 U IO
"RTN","FBFPAR",43,0)
 ;
"RTN","FBFPAR",44,0)
GATHER ; collect and sort data
"RTN","FBFPAR",45,0)
 S FBQUIT=0
"RTN","FBFPAR",46,0)
 ;
"RTN","FBFPAR",47,0)
PRINT ; report data
"RTN","FBFPAR",48,0)
 S FBPG=0 D NOW^%DTC S Y=% D DD^%DT S FBDTR=Y
"RTN","FBFPAR",49,0)
 K FBDL S FBDL="",$P(FBDL,"-",IOM)=""
"RTN","FBFPAR",50,0)
 ;
"RTN","FBFPAR",51,0)
 ; build page header text for selection criteria
"RTN","FBFPAR",52,0)
 S:FBRANGE FBHDT(1)="  For "_$$FMTE^XLFDT(FBDT1)_" through "_$$FMTE^XLFDT(FBDT2)
"RTN","FBFPAR",53,0)
 ;
"RTN","FBFPAR",54,0)
 D HD
"RTN","FBFPAR",55,0)
 ;
"RTN","FBFPAR",56,0)
 ; Initialize Counter
"RTN","FBFPAR",57,0)
 S FBC=0
"RTN","FBFPAR",58,0)
 ;
"RTN","FBFPAR",59,0)
 ; if by date range
"RTN","FBFPAR",60,0)
 I FBRANGE D
"RTN","FBFPAR",61,0)
 . S FBDT=FBDT1-.0000001
"RTN","FBFPAR",62,0)
 . F  S FBDT=$O(^FB(163.7,"C",FBDT)) Q:'FBDT!(FBDT>(FBDT2_".999999"))  D  Q:FBQUIT
"RTN","FBFPAR",63,0)
 . . S FBDA=0 F  S FBDA=$O(^FB(163.7,"C",FBDT,FBDA)) Q:'FBDA  D  Q:FBQUIT
"RTN","FBFPAR",64,0)
 . . . D PRINT1
"RTN","FBFPAR",65,0)
 ;
"RTN","FBFPAR",66,0)
 ; if by invoice
"RTN","FBFPAR",67,0)
 I 'FBRANGE D
"RTN","FBFPAR",68,0)
 . S FBDA=0 F  S FBDA=$O(^FB(163.7,"B",FBAAIN,FBDA)) Q:'FBDA  D  Q:FBQUIT
"RTN","FBFPAR",69,0)
 . . D PRINT1
"RTN","FBFPAR",70,0)
 ;
"RTN","FBFPAR",71,0)
 I FBC=0 W !,"no Audit entries found."
"RTN","FBFPAR",72,0)
 ;
"RTN","FBFPAR",73,0)
 I FBQUIT W !!,"REPORT STOPPED AT USER REQUEST"
"RTN","FBFPAR",74,0)
 ;
"RTN","FBFPAR",75,0)
 I 'FBQUIT,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR
"RTN","FBFPAR",76,0)
 D ^%ZISC
"RTN","FBFPAR",77,0)
 ;
"RTN","FBFPAR",78,0)
EXIT ;
"RTN","FBFPAR",79,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","FBFPAR",80,0)
 K FBAAIN,FBC,FBDT,FBDT1,FBDT2,FBDTR,FBHDT,FBIENS,FBRANGE,FBPG,FBQUIT,FBX
"RTN","FBFPAR",81,0)
 K %,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,J,POP,X,Y
"RTN","FBFPAR",82,0)
 Q
"RTN","FBFPAR",83,0)
HD ; page header
"RTN","FBFPAR",84,0)
 N FBI
"RTN","FBFPAR",85,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,FBQUIT=1 Q
"RTN","FBFPAR",86,0)
 I $E(IOST,1,2)="C-",FBPG S DIR(0)="E" D ^DIR K DIR I 'Y S FBQUIT=1 Q
"RTN","FBFPAR",87,0)
 I $E(IOST,1,2)="C-"!FBPG W @IOF
"RTN","FBFPAR",88,0)
 S FBPG=FBPG+1
"RTN","FBFPAR",89,0)
 W !,"FPPS Data Audit Report "
"RTN","FBFPAR",90,0)
 I FBRANGE W "by Date Range"
"RTN","FBFPAR",91,0)
 E  W "for Invoice: ",FBAAIN
"RTN","FBFPAR",92,0)
 W ?49,FBDTR,?72,"page ",FBPG
"RTN","FBFPAR",93,0)
 S FBI=0 F  S FBI=$O(FBHDT(FBI)) Q:'FBI  W !,FBHDT(FBI)
"RTN","FBFPAR",94,0)
 W !!,"Date/Time Changed",?19,"File",?27,"IENS",?58,"User"
"RTN","FBFPAR",95,0)
 W !,FBDL
"RTN","FBFPAR",96,0)
 Q
"RTN","FBFPAR",97,0)
 ;
"RTN","FBFPAR",98,0)
PRINT1 ; Print one audit record (FBDA)
"RTN","FBFPAR",99,0)
 N FB,FBADT
"RTN","FBFPAR",100,0)
 S FBC=FBC+1
"RTN","FBFPAR",101,0)
 I $Y+9>IOSL D HD Q:FBQUIT
"RTN","FBFPAR",102,0)
 W !
"RTN","FBFPAR",103,0)
 ;
"RTN","FBFPAR",104,0)
 S FBIENS=FBDA_","
"RTN","FBFPAR",105,0)
 D GETS^DIQ(163.7,FBIENS,"*","","FB")
"RTN","FBFPAR",106,0)
 S FBADT=$$FMTE^XLFDT($$GET1^DIQ(163.7,FBIENS,1,"I"),"2F")
"RTN","FBFPAR",107,0)
 W !,FBADT,?19,FB(163.7,FBIENS,2),?27,FB(163.7,FBIENS,3)
"RTN","FBFPAR",108,0)
 W ?58,$E(FB(163.7,FBIENS,7),1,20)
"RTN","FBFPAR",109,0)
 W !?4,"Field: "
"RTN","FBFPAR",110,0)
 W $$GET1^DID(FB(163.7,FBIENS,2),FB(163.7,FBIENS,4),"","LABEL")
"RTN","FBFPAR",111,0)
 W ?27,"Old Field Value: ",FB(163.7,FBIENS,5)
"RTN","FBFPAR",112,0)
 W !
"RTN","FBFPAR",113,0)
 I FBRANGE W ?4,"Invoice: ",FB(163.7,FBIENS,.01)
"RTN","FBFPAR",114,0)
 W ?27,"New Field Value: ",FB(163.7,FBIENS,6)
"RTN","FBFPAR",115,0)
 ;
"RTN","FBFPAR",116,0)
 ; if prescription subfile then write more info to identify
"RTN","FBFPAR",117,0)
 I FB(163.7,FBIENS,2)="162.11" D
"RTN","FBFPAR",118,0)
 . W !,?4,"Prescription: "
"RTN","FBFPAR",119,0)
 . W $$GET1^DIQ(162.11,FB(163.7,FBIENS,3),.01)
"RTN","FBFPAR",120,0)
 ;
"RTN","FBFPAR",121,0)
 ; if service provided subfile then write more info to identify
"RTN","FBFPAR",122,0)
 I FB(163.7,FBIENS,2)="162.03" D
"RTN","FBFPAR",123,0)
 . N FBDA
"RTN","FBFPAR",124,0)
 . D DA^DILF(FB(163.7,FBIENS,3),.FBDA)
"RTN","FBFPAR",125,0)
 . W !,?4,"Patient: "
"RTN","FBFPAR",126,0)
 . W $$GET1^DIQ(162,FBDA(3)_",",.01)
"RTN","FBFPAR",127,0)
 . W ?40,"Vendor: "
"RTN","FBFPAR",128,0)
 . W $E($$GET1^DIQ(162.01,FBDA(2)_","_FBDA(3)_",",.01),1,30)
"RTN","FBFPAR",129,0)
 . W !,?4,"Date of Service: "
"RTN","FBFPAR",130,0)
 . W $$GET1^DIQ(162.02,FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.01)
"RTN","FBFPAR",131,0)
 . W ?36,"Service Provided: "
"RTN","FBFPAR",132,0)
 . W $$GET1^DIQ(162.03,FB(163.7,FBIENS,3),.01)
"RTN","FBFPAR",133,0)
 Q
"RTN","FBFPAR",134,0)
 ;
"RTN","FBFPAR",135,0)
 ;FBFPAR
"RTN","FBFPCI")
0^49^B14521265
"RTN","FBFPCI",1,0)
FBFPCI ;WOIFO/SAB-FPPS AUDIT REPORT ;8/6/2003
"RTN","FBFPCI",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBFPCI",3,0)
 ;
"RTN","FBFPCI",4,0)
ASKCI ; ask FPPS CLAIM ID
"RTN","FBFPCI",5,0)
 K DA
"RTN","FBFPCI",6,0)
 S DIR(0)="162.7,32"
"RTN","FBFPCI",7,0)
 D ^DIR K DIR I $D(DIRUT) S FBQUIT=1 G EXIT
"RTN","FBFPCI",8,0)
 S FBFPPSC=Y
"RTN","FBFPCI",9,0)
 ;
"RTN","FBFPCI",10,0)
 ; ask device
"RTN","FBFPCI",11,0)
 S %ZIS="QM" D ^%ZIS I POP S FBQUIT=1 G EXIT
"RTN","FBFPCI",12,0)
 I $D(IO("Q")) D  S FBQUIT=0 G EXIT
"RTN","FBFPCI",13,0)
 . S ZTRTN="QEN^FBFPCI",ZTDESC="FPPS Claim Inquiry"
"RTN","FBFPCI",14,0)
 . F FBX="FBFPPSC" S ZTSAVE(FBX)=""
"RTN","FBFPCI",15,0)
 . D ^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","FBFPCI",16,0)
 ;
"RTN","FBFPCI",17,0)
QEN ; queued entry
"RTN","FBFPCI",18,0)
 U IO
"RTN","FBFPCI",19,0)
 ;
"RTN","FBFPCI",20,0)
GATHER ; collect and sort data
"RTN","FBFPCI",21,0)
 S FBQUIT=0
"RTN","FBFPCI",22,0)
 K ^TMP($J)
"RTN","FBFPCI",23,0)
 ;
"RTN","FBFPCI",24,0)
 ; check inpatient invoices
"RTN","FBFPCI",25,0)
 F FBDA=0 F  S FBDA=$O(^FBAAI("AFC",FBFPPSC,FBDA)) Q:'FBDA  D
"RTN","FBFPCI",26,0)
 . S FBY0=$G(^FBAAI(FBDA,0))
"RTN","FBFPCI",27,0)
 . S FBAAIN=$P(FBY0,U)
"RTN","FBFPCI",28,0)
 . S FBPROG=$P(FBY0,U,12)
"RTN","FBFPCI",29,0)
 . I FBAAIN]"" S ^TMP($J,162.5,FBAAIN)=FBPROG
"RTN","FBFPCI",30,0)
 ;
"RTN","FBFPCI",31,0)
 ; check outpatient/ancillary invoices
"RTN","FBFPCI",32,0)
 S FBDA3=0
"RTN","FBFPCI",33,0)
 F  S FBDA3=$O(^FBAAC("AFC",FBFPPSC,FBDA3)) Q:'FBDA3  D
"RTN","FBFPCI",34,0)
 .S FBDA2=0
"RTN","FBFPCI",35,0)
 .F  S FBDA2=$O(^FBAAC("AFC",FBFPPSC,FBDA3,FBDA2)) Q:'FBDA2  D
"RTN","FBFPCI",36,0)
 ..S FBDA1=0
"RTN","FBFPCI",37,0)
 ..F  S FBDA1=$O(^FBAAC("AFC",FBFPPSC,FBDA3,FBDA2,FBDA1)) Q:'FBDA1  D
"RTN","FBFPCI",38,0)
 ...S FBDA=0
"RTN","FBFPCI",39,0)
 ...F  S FBDA=$O(^FBAAC("AFC",FBFPPSC,FBDA3,FBDA2,FBDA1,FBDA)) Q:'FBDA  D
"RTN","FBFPCI",40,0)
 ....S FBY0=$G(^FBAAC(FBDA3,1,FBDA2,1,FBDA1,1,FBDA,0))
"RTN","FBFPCI",41,0)
 ....S FBAAIN=$P(FBY0,U,16)
"RTN","FBFPCI",42,0)
 ....I FBAAIN]"" S ^TMP($J,162.03,FBAAIN,FBDA3,FBDA2,FBDA1,FBDA)=""
"RTN","FBFPCI",43,0)
 ;
"RTN","FBFPCI",44,0)
 ; check pharmacy invoices
"RTN","FBFPCI",45,0)
 S FBDA=0 F  S FBDA=$O(^FBAA(162.1,"AFC",FBFPPSC,FBDA)) Q:'FBDA  D
"RTN","FBFPCI",46,0)
 . S FBY0=$G(^FBAA(162.1,FBDA,0))
"RTN","FBFPCI",47,0)
 . S FBAAIN=$P(FBY0,U)
"RTN","FBFPCI",48,0)
 . I FBAAIN]"" S ^TMP($J,162.1,FBAAIN)=""
"RTN","FBFPCI",49,0)
 ;
"RTN","FBFPCI",50,0)
 ; check unauthorized claims
"RTN","FBFPCI",51,0)
 S FBDA=0 F  S FBDA=$O(^FB583("AFC",FBFPPSC,FBDA)) Q:'FBDA  D
"RTN","FBFPCI",52,0)
 . S FBY0=$G(^FB583(FBDA,0))
"RTN","FBFPCI",53,0)
 . S FBPN=$$GET1^DIQ(162.7,FBDA_",",2)
"RTN","FBFPCI",54,0)
 . S FBVN=$$GET1^DIQ(162.7,FBDA_",",1)
"RTN","FBFPCI",55,0)
 . S FBDT=$$GET1^DIQ(162.7,FBDA_",",.01)
"RTN","FBFPCI",56,0)
 . S ^TMP($J,162.7,FBDT,FBDA)=FBPN_U_FBVN
"RTN","FBFPCI",57,0)
 ;
"RTN","FBFPCI",58,0)
PRINT ; report data
"RTN","FBFPCI",59,0)
 S FBPG=0 D NOW^%DTC S Y=% D DD^%DT S FBDTR=Y
"RTN","FBFPCI",60,0)
 K FBDL S FBDL="",$P(FBDL,"-",IOM)=""
"RTN","FBFPCI",61,0)
 ;
"RTN","FBFPCI",62,0)
 D HD
"RTN","FBFPCI",63,0)
 ;
"RTN","FBFPCI",64,0)
 ; show invoices
"RTN","FBFPCI",65,0)
 F FBFILE=162.5,162.03,162.1 D
"RTN","FBFPCI",66,0)
 . S FBAAIN="" F  S FBAAIN=$O(^TMP($J,FBFILE,FBAAIN)) Q:FBAAIN=""  D
"RTN","FBFPCI",67,0)
 . . I $Y+7>IOSL D HD Q:FBQUIT
"RTN","FBFPCI",68,0)
 . . I FBFILE=162.5 D
"RTN","FBFPCI",69,0)
 . . . S FBPROG=$P($G(^TMP($J,FBFILE,FBAAIN)),U)
"RTN","FBFPCI",70,0)
 . . . W !,"Inpatient ("
"RTN","FBFPCI",71,0)
 . . . W $S(FBPROG=6:"CH",FBPROG=7:"CNH",1:"")
"RTN","FBFPCI",72,0)
 . . . W ") Invoice: ",FBAAIN
"RTN","FBFPCI",73,0)
 . . I FBFILE=162.03 W !,"Outpatient/Ancillary Invoice: ",FBAAIN
"RTN","FBFPCI",74,0)
 . . I FBFILE=162.1 W !,"Pharmacy Invoice: ",FBAAIN
"RTN","FBFPCI",75,0)
 ;
"RTN","FBFPCI",76,0)
 ; show unauthorized claims
"RTN","FBFPCI",77,0)
 S FBDT="" F  S FBDT=$O(^TMP($J,162.7,FBDT)) Q:FBDT=""  D
"RTN","FBFPCI",78,0)
 . S FBDA=0 F  S FBDA=$O(^TMP($J,162.7,FBDT,FBDA)) Q:'FBDA  D
"RTN","FBFPCI",79,0)
 . . I $Y+7>IOSL D HD Q:FBQUIT
"RTN","FBFPCI",80,0)
 . . S FBX=$G(^TMP($J,162.7,FBDT,FBDA))
"RTN","FBFPCI",81,0)
 . . W !,"Unauthorized Claim: ",$P(FBX,U),"   ",$P(FBX,U,2),"   ",FBDT
"RTN","FBFPCI",82,0)
 ;
"RTN","FBFPCI",83,0)
 I '$D(^TMP($J)) W !,"No VistA invoices found with specified FPPS CLAIM ID."
"RTN","FBFPCI",84,0)
 ;
"RTN","FBFPCI",85,0)
 I FBQUIT W !!,"REPORT STOPPED AT USER REQUEST"
"RTN","FBFPCI",86,0)
 ;
"RTN","FBFPCI",87,0)
 I 'FBQUIT,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S FBQUIT=1
"RTN","FBFPCI",88,0)
 D ^%ZISC
"RTN","FBFPCI",89,0)
 ;
"RTN","FBFPCI",90,0)
EXIT ;
"RTN","FBFPCI",91,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","FBFPCI",92,0)
 K ^TMP($J)
"RTN","FBFPCI",93,0)
 K FBAAIN,FBDA,FBDA1,FBDA2,FBDA3,FBDL,FBDT,FBDTR,FBFILE
"RTN","FBFPCI",94,0)
 K FBPN,FBFPPSC,FBPG,FBPROG,FBVN,FBX,FBY0
"RTN","FBFPCI",95,0)
 K %,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,J,POP,X,Y
"RTN","FBFPCI",96,0)
 I 'FBQUIT,$E(IOST,1,2)="C-" W ! G ASKCI
"RTN","FBFPCI",97,0)
 K FBQUIT
"RTN","FBFPCI",98,0)
 Q
"RTN","FBFPCI",99,0)
HD ; page header
"RTN","FBFPCI",100,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,FBQUIT=1 Q
"RTN","FBFPCI",101,0)
 I $E(IOST,1,2)="C-",FBPG S DIR(0)="E" D ^DIR K DIR I 'Y S FBQUIT=1 Q
"RTN","FBFPCI",102,0)
 I $E(IOST,1,2)="C-"!FBPG W @IOF
"RTN","FBFPCI",103,0)
 S FBPG=FBPG+1
"RTN","FBFPCI",104,0)
 W !,"FPPS Claim Inquiry for ID: ",FBFPPSC,?49,FBDTR,?72,"page ",FBPG
"RTN","FBFPCI",105,0)
 W !,FBDL
"RTN","FBFPCI",106,0)
 Q
"RTN","FBFPCI",107,0)
 ;
"RTN","FBFPCI",108,0)
 ;FBFPCI
"RTN","FBFPTR")
0^70^B32914521
"RTN","FBFPTR",1,0)
FBFPTR ;WOIFO/SAB-FPPS TRANSMIT REPORT ;9/8/2003
"RTN","FBFPTR",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBFPTR",3,0)
 ;
"RTN","FBFPTR",4,0)
 W !,"This option generates a report of transmissions to FPPS for a date range.",!
"RTN","FBFPTR",5,0)
 ; ask start date
"RTN","FBFPTR",6,0)
 S DIR(0)="D^::EX",DIR("A")="From Date"
"RTN","FBFPTR",7,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT
"RTN","FBFPTR",8,0)
 S FBDT1=Y
"RTN","FBFPTR",9,0)
 ;
"RTN","FBFPTR",10,0)
 ; ask end date
"RTN","FBFPTR",11,0)
 S DIR(0)="DA^"_FBDT1_":"_DT_":EX",DIR("A")="To Date: "
"RTN","FBFPTR",12,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT
"RTN","FBFPTR",13,0)
 S FBDT2=Y
"RTN","FBFPTR",14,0)
 ;
"RTN","FBFPTR",15,0)
 ; ask device
"RTN","FBFPTR",16,0)
 S %ZIS="QM" D ^%ZIS G:POP EXIT
"RTN","FBFPTR",17,0)
 I $D(IO("Q")) D  G EXIT
"RTN","FBFPTR",18,0)
 . S ZTRTN="QEN^FBFPTR",ZTDESC="FPPS Transmit Report"
"RTN","FBFPTR",19,0)
 . F FBX="FBDT*" S ZTSAVE(FBX)=""
"RTN","FBFPTR",20,0)
 . D ^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","FBFPTR",21,0)
 ;
"RTN","FBFPTR",22,0)
QEN ; queued entry
"RTN","FBFPTR",23,0)
 U IO
"RTN","FBFPTR",24,0)
 ;
"RTN","FBFPTR",25,0)
GATHER ; collect and sort data
"RTN","FBFPTR",26,0)
 S FBQUIT=0
"RTN","FBFPTR",27,0)
 ; initialize totals array
"RTN","FBFPTR",28,0)
 K FBT
"RTN","FBFPTR",29,0)
 ;
"RTN","FBFPTR",30,0)
 ; loop thru MESSAGE DATE/TIME x-ref by date and process transmissions
"RTN","FBFPTR",31,0)
 S FBC=0 ; initialize count of records processed
"RTN","FBFPTR",32,0)
 S FBDT=FBDT1
"RTN","FBFPTR",33,0)
 F  S FBDT=$O(^FBHL(163.5,"AMD",FBDT)) Q:FBDT=""!($P(FBDT,".")>FBDT2)  D  Q:FBQUIT
"RTN","FBFPTR",34,0)
 . S FBDA=0 F  S FBDA=$O(^FBHL(163.5,"AMD",FBDT,FBDA)) Q:'FBDA  D  Q:FBQUIT
"RTN","FBFPTR",35,0)
 . . S FBC=FBC+1 ; increment count of records processed
"RTN","FBFPTR",36,0)
 . . ; if tasked then check for stop request
"RTN","FBFPTR",37,0)
 . . I $D(ZTQUEUED),FBC\1000,$$S^%ZTLOAD S ZTSTOP=1,FBQUIT=1 Q
"RTN","FBFPTR",38,0)
 . . ; get data
"RTN","FBFPTR",39,0)
 . . S FBY=$G(^FBHL(163.5,FBDA,0))
"RTN","FBFPTR",40,0)
 . . S FBFILE=$P(FBY,U,2) ; invoice file number
"RTN","FBFPTR",41,0)
 . . I FBFILE="" S FBFILE="U"
"RTN","FBFPTR",42,0)
 . . S FBTTYP=$P(FBY,U,6) ; transaction type
"RTN","FBFPTR",43,0)
 . . I FBTTYP="" S FBTTYP="U"
"RTN","FBFPTR",44,0)
 . . S FBSTA=" "_$P(FBY,U,7) ; station number
"RTN","FBFPTR",45,0)
 . . I FBSTA=" " S FBSTA=" UNK"
"RTN","FBFPTR",46,0)
 . . ; add to transmitted total
"RTN","FBFPTR",47,0)
 . . S $P(FBT(FBSTA,FBFILE,FBTTYP),U)=$P($G(FBT(FBSTA,FBFILE,FBTTYP)),U)+1
"RTN","FBFPTR",48,0)
 . . ; if accepted by interface engine then add to accepted total
"RTN","FBFPTR",49,0)
 . . I $P(FBY,U,8)="A" S $P(FBT(FBSTA,FBFILE,FBTTYP),U,2)=$P($G(FBT(FBSTA,FBFILE,FBTTYP)),U,2)+1
"RTN","FBFPTR",50,0)
 ;
"RTN","FBFPTR",51,0)
PRINT ; report data
"RTN","FBFPTR",52,0)
 S FBPG=0 D NOW^%DTC S Y=% D DD^%DT S FBDTR=Y
"RTN","FBFPTR",53,0)
 K FBDL S FBDL="",$P(FBDL,"-",IOM)=""
"RTN","FBFPTR",54,0)
 ;
"RTN","FBFPTR",55,0)
 ; build page header text for selection criteria
"RTN","FBFPTR",56,0)
 S FBHDT(1)="  For "_$$FMTE^XLFDT(FBDT1)_" through "_$$FMTE^XLFDT(FBDT2)
"RTN","FBFPTR",57,0)
 ;
"RTN","FBFPTR",58,0)
 D HD
"RTN","FBFPTR",59,0)
 ;
"RTN","FBFPTR",60,0)
 I 'FBQUIT,'$D(FBT) W !,"No invoices were transmitted during specified period."
"RTN","FBFPTR",61,0)
 ;
"RTN","FBFPTR",62,0)
 I 'FBQUIT,$D(FBT) D RSUM
"RTN","FBFPTR",63,0)
 ;
"RTN","FBFPTR",64,0)
 I FBQUIT W !!,"REPORT STOPPED AT USER REQUEST"
"RTN","FBFPTR",65,0)
 ;
"RTN","FBFPTR",66,0)
 I 'FBQUIT,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR
"RTN","FBFPTR",67,0)
 D ^%ZISC
"RTN","FBFPTR",68,0)
 ;
"RTN","FBFPTR",69,0)
EXIT ;
"RTN","FBFPTR",70,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","FBFPTR",71,0)
 K FBC,FBDA,FBDL,FBDT,FBDT1,FBDT2,FBDTR,FBFILE,FBHDT,FBPG,FBQUIT
"RTN","FBFPTR",72,0)
 K FBSTA,FBT,FBTTYP,FBX,FBY
"RTN","FBFPTR",73,0)
 K %,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,J,POP,X,Y
"RTN","FBFPTR",74,0)
 Q
"RTN","FBFPTR",75,0)
 ;
"RTN","FBFPTR",76,0)
RSUM ; report summary
"RTN","FBFPTR",77,0)
 N FBCC,FBCL,FBCX
"RTN","FBFPTR",78,0)
 ;
"RTN","FBFPTR",79,0)
 W !!,"SUMMARY OF EDI INVOICES TRANSMITTED TO FPPS"
"RTN","FBFPTR",80,0)
 ;
"RTN","FBFPTR",81,0)
 ; summary header
"RTN","FBFPTR",82,0)
 D HDSUM
"RTN","FBFPTR",83,0)
 ;
"RTN","FBFPTR",84,0)
 ; init grand total
"RTN","FBFPTR",85,0)
 S FBT="0^0^0" ; confirm^cancel^accepted
"RTN","FBFPTR",86,0)
 ;
"RTN","FBFPTR",87,0)
 ; loop thru station
"RTN","FBFPTR",88,0)
 S FBSTA="" F  S FBSTA=$O(FBT(FBSTA)) Q:FBSTA=""  D  Q:FBQUIT
"RTN","FBFPTR",89,0)
 . I $Y+9>IOSL D HD Q:FBQUIT  D HDSUM
"RTN","FBFPTR",90,0)
 . ; init station totals
"RTN","FBFPTR",91,0)
 . S FBT(FBSTA)="0^0^0" ; confirm^cancel^accepted
"RTN","FBFPTR",92,0)
 . ;
"RTN","FBFPTR",93,0)
 . W !
"RTN","FBFPTR",94,0)
 . ;
"RTN","FBFPTR",95,0)
 . ; loop thru file type
"RTN","FBFPTR",96,0)
 . S FBFILE="" F  S FBFILE=$O(FBT(FBSTA,FBFILE)) Q:FBFILE=""  D  Q:FBQUIT
"RTN","FBFPTR",97,0)
 . . ;
"RTN","FBFPTR",98,0)
 . . ; get counts for each transaction types
"RTN","FBFPTR",99,0)
 . . S FBCC=$P($G(FBT(FBSTA,FBFILE,"C")),U) ; claim
"RTN","FBFPTR",100,0)
 . . S FBCL=$P($G(FBT(FBSTA,FBFILE,"L")),U) ; line
"RTN","FBFPTR",101,0)
 . . S FBCX=$P($G(FBT(FBSTA,FBFILE,"X")),U) ; cancel
"RTN","FBFPTR",102,0)
 . . S FBCA=$P($G(FBT(FBSTA,FBFILE,"C")),U,2)+$P($G(FBT(FBSTA,FBFILE,"L")),U,2)+$P($G(FBT(FBSTA,FBFILE,"X")),U,2) ; accepted
"RTN","FBFPTR",103,0)
 . . ;
"RTN","FBFPTR",104,0)
 . . ; write the line for the file type
"RTN","FBFPTR",105,0)
 . . W !,FBSTA
"RTN","FBFPTR",106,0)
 . . W ?9,$S(FBFILE=3:"Outpatient/Ancillary",FBFILE=5:"Pharmacy",FBFILE=9:"Inpatient",1:"Unknown")
"RTN","FBFPTR",107,0)
 . . W ?31,$J($FN(FBCL+FBCC,","),9)
"RTN","FBFPTR",108,0)
 . . W ?42,$J($FN(FBCX,","),9)
"RTN","FBFPTR",109,0)
 . . W ?53,$J($FN(FBCL+FBCC+FBCX,","),9)
"RTN","FBFPTR",110,0)
 . . W ?64,$J($FN(FBCA,","),14)
"RTN","FBFPTR",111,0)
 . . ;
"RTN","FBFPTR",112,0)
 . . ; add file type counts to station totals
"RTN","FBFPTR",113,0)
 . . S $P(FBT(FBSTA),U)=$P(FBT(FBSTA),U)+FBCL+FBCC
"RTN","FBFPTR",114,0)
 . . S $P(FBT(FBSTA),U,2)=$P(FBT(FBSTA),U,2)+FBCX
"RTN","FBFPTR",115,0)
 . . S $P(FBT(FBSTA),U,3)=$P(FBT(FBSTA),U,3)+FBCA
"RTN","FBFPTR",116,0)
 . ;
"RTN","FBFPTR",117,0)
 . ; write station total
"RTN","FBFPTR",118,0)
 . W !,?31,"---------",?42,"---------",?53,"---------",?64,"--------------"
"RTN","FBFPTR",119,0)
 . W !,FBSTA," Station Totals",?31,$J($FN($P(FBT(FBSTA),U),","),9)
"RTN","FBFPTR",120,0)
 . W ?42,$J($FN($P(FBT(FBSTA),U,2),","),9)
"RTN","FBFPTR",121,0)
 . W ?53,$J($FN($P(FBT(FBSTA),U)+$P(FBT(FBSTA),U,2),","),9)
"RTN","FBFPTR",122,0)
 . W ?64,$J($FN($P(FBT(FBSTA),U,3),","),14)
"RTN","FBFPTR",123,0)
 . ;
"RTN","FBFPTR",124,0)
 . ; add station totals to grand total
"RTN","FBFPTR",125,0)
 . S $P(FBT,U)=$P(FBT,U)+$P(FBT(FBSTA),U)
"RTN","FBFPTR",126,0)
 . S $P(FBT,U,2)=$P(FBT,U,2)+$P(FBT(FBSTA),U,2)
"RTN","FBFPTR",127,0)
 . S $P(FBT,U,3)=$P(FBT,U,3)+$P(FBT(FBSTA),U,3)
"RTN","FBFPTR",128,0)
 ;
"RTN","FBFPTR",129,0)
 Q:FBQUIT
"RTN","FBFPTR",130,0)
 ;
"RTN","FBFPTR",131,0)
 ; write report totals
"RTN","FBFPTR",132,0)
 W !!,?31,"=========",?42,"=========",?53,"=========",?64,"=============="
"RTN","FBFPTR",133,0)
 W !,"Report Totals",?31,$J($FN($P(FBT,U),","),9)
"RTN","FBFPTR",134,0)
 W ?42,$J($FN($P(FBT,U,2),","),9)
"RTN","FBFPTR",135,0)
 W ?53,$J($FN($P(FBT,U)+$P(FBT,U,2),","),9)
"RTN","FBFPTR",136,0)
 W ?64,$J($FN($P(FBT,U,3),","),14)
"RTN","FBFPTR",137,0)
 Q
"RTN","FBFPTR",138,0)
 ;
"RTN","FBFPTR",139,0)
HD ; page header
"RTN","FBFPTR",140,0)
 N FBI
"RTN","FBFPTR",141,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,FBQUIT=1 Q
"RTN","FBFPTR",142,0)
 I $E(IOST,1,2)="C-",FBPG S DIR(0)="E" D ^DIR K DIR I 'Y S FBQUIT=1 Q
"RTN","FBFPTR",143,0)
 I $E(IOST,1,2)="C-"!FBPG W @IOF
"RTN","FBFPTR",144,0)
 S FBPG=FBPG+1
"RTN","FBFPTR",145,0)
 W !,"FPPS Transmission Report ",?49,FBDTR,?72,"page ",FBPG
"RTN","FBFPTR",146,0)
 S FBI=0 F  S FBI=$O(FBHDT(FBI)) Q:'FBI  W !,FBHDT(FBI)
"RTN","FBFPTR",147,0)
 W !,FBDL
"RTN","FBFPTR",148,0)
 Q
"RTN","FBFPTR",149,0)
 ;
"RTN","FBFPTR",150,0)
HDSUM ; report summary header
"RTN","FBFPTR",151,0)
 W !!,?31,"------------- Transmission Counts -------------"
"RTN","FBFPTR",152,0)
 W !,?31,"Payment",?42,"Payment",?64,"Accepted by"
"RTN","FBFPTR",153,0)
 W !,"Station",?9,"Invoice Type",?31,"Confirmed",?42,"Cancelled",?53,"Total",?64,"Interface Eng."
"RTN","FBFPTR",154,0)
 W !,"-------",?9,"------------",?31,"---------",?42,"---------",?53,"---------",?64,"--------------"
"RTN","FBFPTR",155,0)
 Q
"RTN","FBFPTR",156,0)
 ;
"RTN","FBFPTR",157,0)
 ;FBFPTR
"RTN","FBNHEDPA")
0^26^B9054785
"RTN","FBNHEDPA",1,0)
FBNHEDPA ;AISC/GRR-EDIT PAYMENT FOR COMMUNITY NURSING HOME ;7/8/2003
"RTN","FBNHEDPA",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBNHEDPA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBNHEDPA",4,0)
EDIT ;ENTRY POINT TO EDIT PAYMENT
"RTN","FBNHEDPA",5,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBNHEDPA",6,0)
BT S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,3)=""B9""",DIC("S")=$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):DIC("S"),1:DIC("S")_"&($P(^(0),U,5)=DUZ)") D ^DIC
"RTN","FBNHEDPA",7,0)
 G END:X=""!(X="^"),BT:Y<0 S FBN=+Y,FBN(0)=Y(0)
"RTN","FBNHEDPA",8,0)
 S FBSTAT=^FBAA(161.7,FBN,"ST")
"RTN","FBNHEDPA",9,0)
 I FBSTAT="C"&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,?3,"You must Reopen the batch prior to editting the invoice.",! G END
"RTN","FBNHEDPA",10,0)
 I FBSTAT="S"!(FBSTAT="P")!(FBSTAT="R")&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,?3,"You must be a holder of the 'FBAASUPERVISOR' security key",!,?3,"to edit this invoice.",! G END
"RTN","FBNHEDPA",11,0)
 I FBSTAT="T"!(FBSTAT="V") W !!,?3,"Batch has already been sent to Austin for payment.",! G END
"RTN","FBNHEDPA",12,0)
INV W ! S DIC("A")="Select Invoice Number: ",DIC="^FBAAI(",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,17)=FBN" D ^DIC K DIC G BT:X=""!(X="^"),INV:Y<0 S FBI=+Y,FBOLD(0)=Y(0)
"RTN","FBNHEDPA",13,0)
 S FBLISTC="",FBHDI=FBI W @IOF D START^FBCHDI S FBI=FBHDI K FBHDI
"RTN","FBNHEDPA",14,0)
 K FBHAP,FBAP
"RTN","FBNHEDPA",15,0)
 S (DIE,DIC)="^FBAAI(",DIC(0)="AEQM",DA=FBI,DR="[FBNH EDIT PAYMENT]",DIE("NO^")=""
"RTN","FBNHEDPA",16,0)
 W !
"RTN","FBNHEDPA",17,0)
 N FBHAC
"RTN","FBNHEDPA",18,0)
 ; get values of FPPS Claim ID and Line Item
"RTN","FBNHEDPA",19,0)
 S FBFPPSC=$P($G(^FBAAI(FBI,3)),U)
"RTN","FBNHEDPA",20,0)
 S FBFPPSL=$P($G(^FBAAI(FBI,3)),U,2)
"RTN","FBNHEDPA",21,0)
 ; load current adjustment data
"RTN","FBNHEDPA",22,0)
 D LOADADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBNHEDPA",23,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBNHEDPA",24,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBNHEDPA",25,0)
 ; load current remittance remark data
"RTN","FBNHEDPA",26,0)
 D LOADRR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBNHEDPA",27,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBNHEDPA",28,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBNHEDPA",29,0)
 D ^DIE K DIE("NO^")
"RTN","FBNHEDPA",30,0)
 I $D(DTOUT) S DR="5///^S X="_$P(FBOLD(0),U,6)_";6///^S X="_$P(FBOLD(0),U,7) D ^DIE
"RTN","FBNHEDPA",31,0)
 ; if adjustment data changed then file
"RTN","FBNHEDPA",32,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBNHEDPA",33,0)
 ; if remit remark data changed then file
"RTN","FBNHEDPA",34,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBNHEDPA",35,0)
 I $D(FBHAP),$D(FBAP),FBAP-FBHAP S FBDIF=FBAP-FBHAP,$P(^FBAA(161.7,FBN,0),"^",9)=$P(^FBAA(161.7,FBN,0),"^",9)+FBDIF
"RTN","FBNHEDPA",36,0)
END K DA,DFN,DIC,DIE,DR,FBAAOUT,FBDX,FBI,FBIN,FBLISTC,FBN,FBPROC,FBSTAT,FBVEN,FBVID,J,K,L,POP,Q,VA,VADM,X,Y,FBAC,FBAP,FBBAL,FBHAP,FBDIF
"RTN","FBNHEDPA",37,0)
 K FBADJ,FBADJL,FBRRMK,FBRRMKL,FBFPPSC,FBFPPSL
"RTN","FBNHEDPA",38,0)
 D KILL^FBPAY K FBOLD,FBINODE,FBPAT,FBPRGNAM
"RTN","FBNHEDPA",39,0)
 Q
"RTN","FBNHEP1")
0^25^B9319871
"RTN","FBNHEP1",1,0)
FBNHEP1 ;AISC/GRR-PAYMENT PROCESS CONTINUED ;7/8/2003
"RTN","FBNHEP1",2,0)
 ;;3.5;FEE BASIS;**12,61**;JAN 30, 1995
"RTN","FBNHEP1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBNHEP1",4,0)
 N FBADJ,FBRRMK,FBX,FBFPPSC,FBFPPSL
"RTN","FBNHEP1",5,0)
 K FBAAID,FBAAVID D GETNXI^FBAAUTL W !!,"Invoice # ",FBAAIN," assigned to this invoice"
"RTN","FBNHEP1",6,0)
 S DIC="^FBAAI(",X=FBAAIN,DIC(0)="L",DLAYGO=162.5 D ^DIC S DA=+Y K DLAYGO
"RTN","FBNHEP1",7,0)
RID D GETINDT^FBAACO1 G DEL:$G(FBAAOUT)
"RTN","FBNHEP1",8,0)
 S DIE=DIC,FBNL=""
"RTN","FBNHEP1",9,0)
 S FBI7078=FB7078_";FB7078("
"RTN","FBNHEP1",10,0)
 S DR="1////^S X=FBAAID;46////^S X=FBAAVID;47////^S X=1;2////^S X=IFN;3////^S X=DFN;20////^S X=FBBAT;55"
"RTN","FBNHEP1",11,0)
 S DR(1,162.5,1)="S FBFPPSC=$$FPPSC^FBUTL5();S:FBFPPSC=-1 Y=0;S:FBFPPSC="""" Y=""@20"";56///^S X=FBFPPSC;S FBFPPSL=$$FPPSL^FBUTL5(,1);S:FBFPPSL=-1 Y=0;57///^S X=FBFPPSL;@20;54//^S X=$G(FBTRDYS)"
"RTN","FBNHEP1",12,0)
 S DR(1,162.5,2)="7;S FBNHAC=X;5////^S X=$S(FBPAYDT>FBAABDT:(FBPAYDT+1),1:FBAABDT);6////^S X=FBENDDT;8//^S X=$S(FBNHAC>FBDEFP:FBDEFP,1:FBNHAC);S FBAMTP=X"
"RTN","FBNHEP1",13,0)
 S DR(1,162.5,3)="S FBX=$$ADJ^FBUTL2(FBNHAC-FBAMTP,.FBADJ,1);S:FBX=0 Y=0"
"RTN","FBNHEP1",14,0)
 S DR(1,162.5,4)="S FBX=$$RR^FBUTL4(.FBRRMK,2);S:FBX=0 Y=0"
"RTN","FBNHEP1",15,0)
 S DR(1,162.5,5)="11////^S X=7;12////^S X=FBAAPTC;23////^S X=FBPSA;4////^S X=FBI7078;21////^S X=FBPOV;22////^S X=FBPT;S FBTST=1"
"RTN","FBNHEP1",16,0)
 D ^DIE I '$G(FBTST) W !,*7,"Entering an '^' will delete this payment" S DIR(0)="Y",DIR("A")="Shall I delete",DIR("B")="No" D ^DIR G DEL:$D(DIRUT)!(Y),RID
"RTN","FBNHEP1",17,0)
 ; file adjustment reasons
"RTN","FBNHEP1",18,0)
 D FILEADJ^FBCHFA(DA_",",.FBADJ)
"RTN","FBNHEP1",19,0)
 ; file remittance remarks
"RTN","FBNHEP1",20,0)
 D FILERR^FBCHFR(DA_",",.FBRRMK)
"RTN","FBNHEP1",21,0)
 K FBTST G GETVET^FBNHEP
"RTN","FBNHEP1",22,0)
DEL S DIK="^FBAAI(" W !!,"Deleting Invoice !" D ^DIK K DIK G GETVET^FBNHEP
"RTN","FBNHEP1",23,0)
 Q
"RTN","FBNHEP1",24,0)
PROB W !,*7,"The patient was not in this vendor's facility for the month and year selected!",!,"Use the Display Episode of Care option to review this veteran's activity!" S FBERR=1
"RTN","FBNHEP1",25,0)
 Q
"RTN","FBNHEP1",26,0)
 ;
"RTN","FBNHEP1",27,0)
TRUB W !!,*7,"Check Contract data for Community Nursing Home: ",$P(^FBAAV(IFN,0),"^",1),!,"It is not complete",!! S FBERR=1 Q
"RTN","FBNHEP1",28,0)
 ;
"RTN","FBNHEP1",29,0)
DAYS(X) ;CALCULATES THE NUMBER OF DAYS IN MONTH
"RTN","FBNHEP1",30,0)
 N X1
"RTN","FBNHEP1",31,0)
 S X1=X,X=+$E(X,4,5),X=$S("^1^3^5^7^8^10^12^"[("^"_X_"^"):31,X=2:28,1:30)
"RTN","FBNHEP1",32,0)
 I X=28 D
"RTN","FBNHEP1",33,0)
 . N YEAR
"RTN","FBNHEP1",34,0)
 . S YEAR=$E(X1,1,3)+1700
"RTN","FBNHEP1",35,0)
 . I $S(YEAR#400=0:1,YEAR#4=0&'(YEAR#100=0):1,1:0) S X=29
"RTN","FBNHEP1",36,0)
 Q X
"RTN","FBPAID")
0^58^B26862172
"RTN","FBPAID",1,0)
FBPAID ;WOIFO/SAB-SERVER ROUTINE TO UPDATE PAYMENTS ;9/9/2003
"RTN","FBPAID",2,0)
 ;;3.5;FEE BASIS;**5,61**;JAN 30, 1995
"RTN","FBPAID",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBPAID",4,0)
 ;incoming record from AAC will contain the following data
"RTN","FBPAID",5,0)
 ;   - Fee Program  - from Fee Basis Program  (161.8)
"RTN","FBPAID",6,0)
 ;   - Activity Code    (C - confirmed)
"RTN","FBPAID",7,0)
 ;                      (B - backout)
"RTN","FBPAID",8,0)
 ;                      (X - cancelled)
"RTN","FBPAID",9,0)
 ;   - Internal Control Number   - IEN of payment record
"RTN","FBPAID",10,0)
 ;   - Check Number
"RTN","FBPAID",11,0)
 ;   - Check Date
"RTN","FBPAID",12,0)
 ;   - Interest Amount
"RTN","FBPAID",13,0)
 ;   - Cancellation Date
"RTN","FBPAID",14,0)
 ;   - Reason Code  (File # 162.95)
"RTN","FBPAID",15,0)
 ;   - Cancellation Code (R - C - X)
"RTN","FBPAID",16,0)
 ;   - Disbursed Amount   (this amount minus interest amount = amt pd)
"RTN","FBPAID",17,0)
 ;   variable 'FBPAID' is defined and passed to TRAP^FBMRASVR2
"RTN","FBPAID",18,0)
 ;
"RTN","FBPAID",19,0)
 N FBINV
"RTN","FBPAID",20,0)
 S U="^",FBPAID=1,FBMCNT=0
"RTN","FBPAID",21,0)
 S X="TRAP^FBMRASV2" S @^%ZOSF("TRAP")
"RTN","FBPAID",22,0)
 ;K XMY S XMY("G.FEE")="" D ENT1^XMD
"RTN","FBPAID",23,0)
 K ^TMP("FBPAID",$J),^TMP("FBERR",$J)
"RTN","FBPAID",24,0)
 D STATION^FBAAUTL I $S($G(FB("ERROR")):1,'$G(FBAASN):1,1:0) Q
"RTN","FBPAID",25,0)
 K FB
"RTN","FBPAID",26,0)
 ;start to read in message from central fee
"RTN","FBPAID",27,0)
 ;edits are:
"RTN","FBPAID",28,0)
 ;          1. invalid station number
"RTN","FBPAID",29,0)
 ;          2. invalid record length
"RTN","FBPAID",30,0)
 ;          3. unable to locate payment record
"RTN","FBPAID",31,0)
 ;          4. disbursed amount '= amt paid+interest
"RTN","FBPAID",32,0)
 ;          5. cancellations
"RTN","FBPAID",33,0)
 ; XMRG=record received in mail message from Austin
"RTN","FBPAID",34,0)
 F I=1:1 X XMREC Q:XMER<0  I XMRG]"",$E(XMRG,1,3)=FBAASN D
"RTN","FBPAID",35,0)
 .S ^TMP("FBREC",$J,I)=XMRG
"RTN","FBPAID",36,0)
 .K FBERR
"RTN","FBPAID",37,0)
 .I $L(XMRG)'=77 S FBERR=1,^TMP("FBERR",$J,2,I)=""
"RTN","FBPAID",38,0)
 .D PARSE^FBPAID1 Q:$G(FBERR)  S FBMCNT=FBMCNT+1 D @FBPROG
"RTN","FBPAID",39,0)
 D ^FBPAID2:$D(^TMP("FBERR",$J))
"RTN","FBPAID",40,0)
 D BUL^FBPAID1
"RTN","FBPAID",41,0)
 ; if any EDI invoices then add to FPPS queue
"RTN","FBPAID",42,0)
 I $D(FBINV) D PAIDLOG^FBFHLL(.FBINV)
"RTN","FBPAID",43,0)
 G END
"RTN","FBPAID",44,0)
 ;
"RTN","FBPAID",45,0)
3 ;update outpatient payment record
"RTN","FBPAID",46,0)
 Q:'$D(^FBAAC(+FBIEN(3),1,+FBIEN(2),1,FBIEN(1),1,FBIEN,0))  S FBAMT=+$P(^(0),U,3) D
"RTN","FBPAID",47,0)
 .I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN(3)_U_+FBIEN(2)_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",48,0)
 N JJ F JJ=1:1:3 S DA(JJ)=+FBIEN(JJ)
"RTN","FBPAID",49,0)
 S DA=+FBIEN
"RTN","FBPAID",50,0)
 S DR=""
"RTN","FBPAID",51,0)
 I FBACT="C" S DR="12////^S X=$G(FBCKDT);35///^S X=FBCKNUM;40///^S X=FBDAMT;41///^S X=FBINAMT;36///@;37///@"
"RTN","FBPAID",52,0)
 I FBACT="B" S DR="12///@;35///@;36///@;37///@;40///@;41///@"
"RTN","FBPAID",53,0)
 I FBACT="X" S DR="12///@;40///@;41///@;36////^S X=FBXDT;37////^S X=$G(FBRCOD);38///^S X=FBXCOD" D
"RTN","FBPAID",54,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN(3)_U_+FBIEN(2)_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",55,0)
 .I FBXCOD="R" S DR=DR_";35///@"
"RTN","FBPAID",56,0)
 S DIE="^FBAAC("_DA(3)_",1,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","FBPAID",57,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA)
"RTN","FBPAID",58,0)
 ; if EDI then add invoice to list in FBINV(, patch *61
"RTN","FBPAID",59,0)
 I FBACT'="B",$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,3)),U)]"" D
"RTN","FBPAID",60,0)
 . N FBAAIN
"RTN","FBPAID",61,0)
 . S FBAAIN=$P($G(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,0)),U,16)
"RTN","FBPAID",62,0)
 . I FBAAIN]"" S FBINV(3,FBAAIN)=""
"RTN","FBPAID",63,0)
 D KILL
"RTN","FBPAID",64,0)
 Q
"RTN","FBPAID",65,0)
 ;
"RTN","FBPAID",66,0)
5 ;update pharmacy payment record
"RTN","FBPAID",67,0)
 Q:'$D(^FBAA(162.1,+FBIEN(1),"RX",+FBIEN,0))  S FBAMT=+$P(^(0),U,16) D
"RTN","FBPAID",68,0)
 . I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",69,0)
 S DA(1)=+FBIEN(1),DA=+FBIEN
"RTN","FBPAID",70,0)
 S DR=""
"RTN","FBPAID",71,0)
 I FBACT="C" S DR="28////^S X=FBCKDT;30///^S X=FBCKNUM;34///^S X=FBDAMT;35///^S X=FBINAMT;31///@;32///@"
"RTN","FBPAID",72,0)
 I FBACT="B" S DR="28///@;30///@;31///@;32///@;34///@;35///@"
"RTN","FBPAID",73,0)
 I FBACT="X" S DR="28///@;34///@;35///@;31////^S X=FBXDT;32////^S X=$G(FBRCOD);33///^S X=FBXCOD" D
"RTN","FBPAID",74,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",75,0)
 .I FBXCOD="R" S DR=DR_";30///@"
"RTN","FBPAID",76,0)
 S DIE="^FBAA(162.1,"_DA(1)_",""RX"","
"RTN","FBPAID",77,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAA(162.1,DA(1),"RX",DA)
"RTN","FBPAID",78,0)
 ; if EDI then add invoice to list in FBINV(, patch *61
"RTN","FBPAID",79,0)
 I FBACT'="B",$P($G(^FBAA(162.1,DA(1),0)),U,13)]"" D
"RTN","FBPAID",80,0)
 . N FBAAIN
"RTN","FBPAID",81,0)
 . S FBAAIN=$P($G(^FBAA(162.1,DA(1),0)),U)
"RTN","FBPAID",82,0)
 . I FBAAIN]"" S FBINV(5,FBAAIN)=""
"RTN","FBPAID",83,0)
 D KILL
"RTN","FBPAID",84,0)
 Q
"RTN","FBPAID",85,0)
 ;
"RTN","FBPAID",86,0)
9 ;update inpatient payment record
"RTN","FBPAID",87,0)
 Q:'$D(^FBAAI(+FBIEN,0))  S FBAMT=+$P(^(0),U,9) D
"RTN","FBPAID",88,0)
 .I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN
"RTN","FBPAID",89,0)
 S DA=+FBIEN
"RTN","FBPAID",90,0)
 S DR=""
"RTN","FBPAID",91,0)
 I FBACT="C" S DR="45////^S X=FBCKDT;48///^S X=FBCKNUM;52///^S X=FBDAMT;53///^S X=FBINAMT;49///@;50///@"
"RTN","FBPAID",92,0)
 I FBACT="B" S DR="45///@;48///@;49///@;50///@;52///@;53///@"
"RTN","FBPAID",93,0)
 I FBACT="X" S DR="45///@;52///@;53///@;49////^S X=FBXDT;50////^S X=$G(FBRCOD);51///^S X=FBXCOD" D
"RTN","FBPAID",94,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN
"RTN","FBPAID",95,0)
 .I FBXCOD="R" S DR=DR_";48///@"
"RTN","FBPAID",96,0)
 S DIE="^FBAAI("
"RTN","FBPAID",97,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAAI(DA)
"RTN","FBPAID",98,0)
 ; if EDI then add invoice to list in FBINV(, patch *61
"RTN","FBPAID",99,0)
 I FBACT'="B",$P($G(^FBAAI(DA,3)),U)]"" D
"RTN","FBPAID",100,0)
 . N FBAAIN
"RTN","FBPAID",101,0)
 . S FBAAIN=$P($G(^FBAAI(DA,0)),U)
"RTN","FBPAID",102,0)
 . I FBAAIN]"" S FBINV(9,FBAAIN)=""
"RTN","FBPAID",103,0)
 D KILL
"RTN","FBPAID",104,0)
 Q
"RTN","FBPAID",105,0)
 ;
"RTN","FBPAID",106,0)
T ;update travel payment record
"RTN","FBPAID",107,0)
 Q:'$D(^FBAAC(+FBIEN(1),3,+FBIEN,0))  S FBAMT=+$P(^(0),U,3) D
"RTN","FBPAID",108,0)
 . I FBDAMT-FBINAMT'=FBAMT,$G(FBACT)="C" S ^TMP("FBERR",$J,4,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",109,0)
 S DA(1)=+FBIEN(1),DA=+FBIEN
"RTN","FBPAID",110,0)
 S DR=""
"RTN","FBPAID",111,0)
 I FBACT="C" S DR="8////^S X=FBCKDT;9///^S X=FBCKNUM;13///^S X=FBDAMT;14///^S X=FBINAMT;10///@;11///@"
"RTN","FBPAID",112,0)
 I FBACT="B" S DR="8///@;9///@;10///@;11///@;13///@;14///@"
"RTN","FBPAID",113,0)
 I FBACT="X" S DR="8///@;13///@;14///@;10////^S X=FBXDT;11////^S X=$G(FBRCOD);12///^S X=FBXCOD" D
"RTN","FBPAID",114,0)
 .I FBXCOD'="R" S ^TMP("FBERR",$J,5,I)=""_U_FBPROG_U_+FBIEN(1)_U_+FBIEN
"RTN","FBPAID",115,0)
 .I FBXCOD="R" S DR=DR_";9///@"
"RTN","FBPAID",116,0)
 S DIE="^FBAAC("_+FBIEN(1)_",3,"
"RTN","FBPAID",117,0)
 D LOCK^FBUCUTL(DIE,DA,1) I FBLOCK D ^DIE L -^FBAAC(DA(1),3,DA)
"RTN","FBPAID",118,0)
 D KILL
"RTN","FBPAID",119,0)
 Q
"RTN","FBPAID",120,0)
 ;
"RTN","FBPAID",121,0)
END ;clean and exit
"RTN","FBPAID",122,0)
 S XMSER="S."_XQSOP,XMZ=XQMSG D REMSBMSG^XMA1C
"RTN","FBPAID",123,0)
 K FB,FBPAID,FBSITE,FBAASN,FBSN,FBMCNT,I,XMER,XMSER,XMREC,XMRG,XMY,^TMP("FBERR",$J),^TMP("FBPAID",$J),^TMP("FBREC",$J)
"RTN","FBPAID",124,0)
KILL K FBLOCK,DIE,DA,DR,FBIEN,FBACT,FBCKNUM,FBRCOD,FBPROG,FBCKDT,FBXDT,FBXCOD,FBINAMT,FBDAMT,FBAMT,FBERR
"RTN","FBPAID",125,0)
 Q
"RTN","FBRXFA")
0^30^B10460181
"RTN","FBRXFA",1,0)
FBRXFA ;WOIFO/SAB-FILE ADJUSTMENTS FOR PHARMACY PAYMENT ;9/9/2003
"RTN","FBRXFA",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBRXFA",3,0)
 Q
"RTN","FBRXFA",4,0)
FILEADJ(FBIENS,FBADJ) ; File Adjustments
"RTN","FBRXFA",5,0)
 ;
"RTN","FBRXFA",6,0)
 ; Input
"RTN","FBRXFA",7,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.11
"RTN","FBRXFA",8,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBRXFA",9,0)
 ;   FBADJ   - required, array passed by reference
"RTN","FBRXFA",10,0)
 ;             array of adjustments to file
"RTN","FBRXFA",11,0)
 ;             array does not have to contain any data or be defined
"RTN","FBRXFA",12,0)
 ;             format
"RTN","FBRXFA",13,0)
 ;               FBADJ(#)=FBADJR^FBADJG^FBADJA
"RTN","FBRXFA",14,0)
 ;             where
"RTN","FBRXFA",15,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBRXFA",16,0)
 ;               FBADJR = adjustment reason (internal value file 162.91)
"RTN","FBRXFA",17,0)
 ;               FBADJG = adjustment group (internal value file 162.92)
"RTN","FBRXFA",18,0)
 ;               FBADJA = adjustment amount (dollar value)
"RTN","FBRXFA",19,0)
 ; Output
"RTN","FBRXFA",20,0)
 ;   Data in File 162.11 will be modified
"RTN","FBRXFA",21,0)
 ;
"RTN","FBRXFA",22,0)
 N FB,FBFDA,FBHIGH,FBI,FBMSR,FBSC,FBSIENS,FBTAS
"RTN","FBRXFA",23,0)
 ;
"RTN","FBRXFA",24,0)
 ; delete adjustment reasons currently on file
"RTN","FBRXFA",25,0)
 D GETS^DIQ(162.11,FBIENS,"37*","","FB")
"RTN","FBRXFA",26,0)
 K FBFDA
"RTN","FBRXFA",27,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.14,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBRXFA",28,0)
 . S FBFDA(162.14,FBSIENS,.01)="@"
"RTN","FBRXFA",29,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBRXFA",30,0)
 ;
"RTN","FBRXFA",31,0)
 ; delete suspend data currently on file
"RTN","FBRXFA",32,0)
 K FBFDA
"RTN","FBRXFA",33,0)
 S FBFDA(162.11,FBIENS,6)="@"
"RTN","FBRXFA",34,0)
 S FBFDA(162.11,FBIENS,7)="@"
"RTN","FBRXFA",35,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBRXFA",36,0)
 ;
"RTN","FBRXFA",37,0)
 ; delete suspension description currently on file
"RTN","FBRXFA",38,0)
 D WP^DIE(162.11,FBIENS,20,,"@")
"RTN","FBRXFA",39,0)
 ;
"RTN","FBRXFA",40,0)
 ; compute total amount suspended and determine most significant reason
"RTN","FBRXFA",41,0)
 ; loop thru reasons
"RTN","FBRXFA",42,0)
 S (FBTAS,FBI,FBHIGH)=0,FBMSR=""
"RTN","FBRXFA",43,0)
 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBRXFA",44,0)
 . N FBADJA
"RTN","FBRXFA",45,0)
 . ; get adjustment amount for reason
"RTN","FBRXFA",46,0)
 . S FBADJA=$P(FBADJ(FBI),U,3)
"RTN","FBRXFA",47,0)
 . ; add amount to total
"RTN","FBRXFA",48,0)
 . S FBTAS=FBTAS+FBADJA
"RTN","FBRXFA",49,0)
 . ; check if reason has largest absolute $ impact
"RTN","FBRXFA",50,0)
 . I $FN(FBADJA,"-")>$G(FBHIGH) S FBMSR=FBI,FBHIGH=$FN(FBADJA,"-")
"RTN","FBRXFA",51,0)
 ;
"RTN","FBRXFA",52,0)
 I +FBTAS=0 Q  ; quit since total amount suspended is 0
"RTN","FBRXFA",53,0)
 ;
"RTN","FBRXFA",54,0)
 ; file adjustments from input array
"RTN","FBRXFA",55,0)
 K FBFDA
"RTN","FBRXFA",56,0)
 S FBI=0 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBRXFA",57,0)
 . S FBFDA(162.14,"+"_FBI_","_FBIENS,.01)=$P(FBADJ(FBI),U)
"RTN","FBRXFA",58,0)
 . S FBFDA(162.14,"+"_FBI_","_FBIENS,1)=$P(FBADJ(FBI),U,2)
"RTN","FBRXFA",59,0)
 . S FBFDA(162.14,"+"_FBI_","_FBIENS,2)=+$P(FBADJ(FBI),U,3)
"RTN","FBRXFA",60,0)
 I $D(FBFDA) D UPDATE^DIE("","FBFDA")
"RTN","FBRXFA",61,0)
 ;
"RTN","FBRXFA",62,0)
 ; file derived suspend data
"RTN","FBRXFA",63,0)
 K FBFDA
"RTN","FBRXFA",64,0)
 S FBFDA(162.11,FBIENS,6)=FBTAS
"RTN","FBRXFA",65,0)
 I FBMSR,$P(FBADJ(FBMSR),U) S FBSC=$$GET1^DIQ(161.91,$P(FBADJ(FBMSR),U),3)
"RTN","FBRXFA",66,0)
 I '$G(FBSC) S FBSC=4
"RTN","FBRXFA",67,0)
 S FBFDA(162.11,FBIENS,7)=FBSC
"RTN","FBRXFA",68,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBRXFA",69,0)
 ;
"RTN","FBRXFA",70,0)
 ; if suspend code = 4 (other) then file suspension description
"RTN","FBRXFA",71,0)
 I FBSC=4,FBMSR,$P(FBADJ(FBMSR),U) D WP^DIE(162.11,FBIENS,20,,"^FB(161.91,"_$P(FBADJ(FBMSR),U)_",4)")
"RTN","FBRXFA",72,0)
 D MSG^DIALOG()
"RTN","FBRXFA",73,0)
 ;
"RTN","FBRXFA",74,0)
 Q
"RTN","FBRXFA",75,0)
 ;
"RTN","FBRXFA",76,0)
LOADADJ(FBIENS,FBADJ) ; Load Adjustments
"RTN","FBRXFA",77,0)
 ; Input
"RTN","FBRXFA",78,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.11
"RTN","FBRXFA",79,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBRXFA",80,0)
 ;   FBADJ   - required, array passed by reference
"RTN","FBRXFA",81,0)
 ;             array to load adjustments into
"RTN","FBRXFA",82,0)
 ; Output
"RTN","FBRXFA",83,0)
 ;   FBADJ   - the FBADJ input array passed by reference will be modified
"RTN","FBRXFA",84,0)
 ;             format
"RTN","FBRXFA",85,0)
 ;               FBADJ(#)=FBADJR^FBADJG^FBADJA
"RTN","FBRXFA",86,0)
 ;             where
"RTN","FBRXFA",87,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBRXFA",88,0)
 ;               FBADJR = adjustment reason (internal value file 162.91)
"RTN","FBRXFA",89,0)
 ;               FBADJG = adjustment group (internal value file 162.92)
"RTN","FBRXFA",90,0)
 ;               FBADJA = adjustment amount (dollar value)
"RTN","FBRXFA",91,0)
 ;             if no adjustments are on file then the array will be
"RTN","FBRXFA",92,0)
 ;               undefined
"RTN","FBRXFA",93,0)
 N FB,FBC,FBI,FBSIENS
"RTN","FBRXFA",94,0)
 ;
"RTN","FBRXFA",95,0)
 K FBADJ
"RTN","FBRXFA",96,0)
 ;
"RTN","FBRXFA",97,0)
 S FBC=0
"RTN","FBRXFA",98,0)
 D GETS^DIQ(162.11,FBIENS,"37*","I","FB")
"RTN","FBRXFA",99,0)
 D MSG^DIALOG()
"RTN","FBRXFA",100,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.14,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBRXFA",101,0)
 . S FBC=FBC+1
"RTN","FBRXFA",102,0)
 . S FBADJ(FBC)=FB(162.14,FBSIENS,.01,"I")
"RTN","FBRXFA",103,0)
 . S FBADJ(FBC)=FBADJ(FBC)_U_FB(162.14,FBSIENS,1,"I")
"RTN","FBRXFA",104,0)
 . S FBADJ(FBC)=FBADJ(FBC)_U_FB(162.14,FBSIENS,2,"I")
"RTN","FBRXFA",105,0)
 ;
"RTN","FBRXFA",106,0)
 Q
"RTN","FBRXFA",107,0)
 ;
"RTN","FBRXFA",108,0)
ADJLRA(FBIENS) ; Adjustment Reason^Amount List Extrinsic Function
"RTN","FBRXFA",109,0)
 ; Input
"RTN","FBRXFA",110,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.11
"RTN","FBRXFA",111,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBRXFA",112,0)
 ; Result
"RTN","FBRXFA",113,0)
 ;   string containing sorted list (by external code) of reason^amounts
"RTN","FBRXFA",114,0)
 ;   format
"RTN","FBRXFA",115,0)
 ;      FBADJE 1, FBADJE 2^FBADJA 1,FBADJA2
"RTN","FBRXFA",116,0)
 ;   where
"RTN","FBRXFA",117,0)
 ;      FBADJE = adjustment reason code (external value)
"RTN","FBRXFA",118,0)
 ;      FBADJA = adjustment amount
"RTN","FBRXFA",119,0)
 N FBRET,FBADJ,FBADJL,FBADJLA,FBADJLR
"RTN","FBRXFA",120,0)
 D LOADADJ^FBRXFA(FBIENS,.FBADJ)
"RTN","FBRXFA",121,0)
 S FBADJL=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBRXFA",122,0)
 S FBADJLR=$$ADJLR^FBUTL2(FBADJL)
"RTN","FBRXFA",123,0)
 S FBADJLA=$$ADJLA^FBUTL2(FBADJL)
"RTN","FBRXFA",124,0)
 S FBRET=FBADJLR_U_FBADJLA
"RTN","FBRXFA",125,0)
 Q FBRET
"RTN","FBRXFA",126,0)
 ;
"RTN","FBRXFA",127,0)
 ;FBRXFA
"RTN","FBRXFED")
0^47^B16142590
"RTN","FBRXFED",1,0)
FBRXFED ;WOIFO/SAB-FPPS DATA EDIT PHARMACY INVOICE ;8/12/2003
"RTN","FBRXFED",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBRXFED",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBRXFED",4,0)
 ;
"RTN","FBRXFED",5,0)
 I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) D  Q
"RTN","FBRXFED",6,0)
 . W $C(7),!,"You must hold the FBAASUPERVISOR security key to use this option!"
"RTN","FBRXFED",7,0)
 ;
"RTN","FBRXFED",8,0)
 S FBAAOUT=0
"RTN","FBRXFED",9,0)
 F  D INVED Q:FBAAOUT
"RTN","FBRXFED",10,0)
 D CLEAN
"RTN","FBRXFED",11,0)
 Q
"RTN","FBRXFED",12,0)
 ;
"RTN","FBRXFED",13,0)
INVED ; Invoice Edit
"RTN","FBRXFED",14,0)
 ;
"RTN","FBRXFED",15,0)
ASKINV ; Select Invoice to Edit
"RTN","FBRXFED",16,0)
 W ! S DIC="^FBAA(162.1,",DIC(0)="AEQM",DIC("A")="Select Invoice #: "
"RTN","FBRXFED",17,0)
 ; screen on invoices with completed status and EDI
"RTN","FBRXFED",18,0)
 S DIC("S")="I $P(^(0),U,5)=4&($P(^(0),U,13)]"""")"
"RTN","FBRXFED",19,0)
 D ^DIC K DIC I Y'>0 S FBAAOUT=1 Q
"RTN","FBRXFED",20,0)
 S FBDA=+Y
"RTN","FBRXFED",21,0)
 ;
"RTN","FBRXFED",22,0)
 I $$CKFPPS^FBFHLL(FBDA)'=1 D  G ASKINV
"RTN","FBRXFED",23,0)
 . W !?5,"Invoice ",FBDA," has not been transmitted to FPPS."
"RTN","FBRXFED",24,0)
 ;
"RTN","FBRXFED",25,0)
 ; save FPPS Claim ID data prior to edit session
"RTN","FBRXFED",26,0)
 S (FBFPPSC,FBFPPSC(0))=$P($G(^FBAA(162.1,FBDA,0)),U,13)
"RTN","FBRXFED",27,0)
 S FBINVCHG=0 ; initialize invoice changed flag
"RTN","FBRXFED",28,0)
 ;
"RTN","FBRXFED",29,0)
EDITFC ; edit FPPS CLAIM ID
"RTN","FBRXFED",30,0)
 S FBX=$$FPPSC^FBUTL5(1,FBFPPSC)
"RTN","FBRXFED",31,0)
 I FBX=-1 S FBAAOUT=1 G INVEDX
"RTN","FBRXFED",32,0)
 ; need to verify if following restriction is appropriate
"RTN","FBRXFED",33,0)
 I FBX="" D  G EDITFC
"RTN","FBRXFED",34,0)
 . W !,$C(7),"Can not change EDI from YES to NO on invoice that has been sent to FPPS!"
"RTN","FBRXFED",35,0)
 S FBFPPSC=FBX
"RTN","FBRXFED",36,0)
 ;
"RTN","FBRXFED",37,0)
 ; if FPPS CLAIM ID changed, then update file, audit log, and Rx's
"RTN","FBRXFED",38,0)
 I FBFPPSC'=FBFPPSC(0) D
"RTN","FBRXFED",39,0)
 . ; set invoice changed flag
"RTN","FBRXFED",40,0)
 . S FBINVCHG=1
"RTN","FBRXFED",41,0)
 . ;
"RTN","FBRXFED",42,0)
 . ; file data in 162.1
"RTN","FBRXFED",43,0)
 . K FBFDA
"RTN","FBRXFED",44,0)
 . S FBFDA(162.1,FBDA_",",13)=$S(FBFPPSC="":"@",1:FBFPPSC)
"RTN","FBRXFED",45,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBRXFED",46,0)
 . ;
"RTN","FBRXFED",47,0)
 . ; add record to audit log
"RTN","FBRXFED",48,0)
 . K FBFDA
"RTN","FBRXFED",49,0)
 . S FBFDA(163.7,"+1,",.01)=FBDA ; invoice number
"RTN","FBRXFED",50,0)
 . S FBFDA(163.7,"+1,",1)=$$NOW^XLFDT() ; date/time changed
"RTN","FBRXFED",51,0)
 . S FBFDA(163.7,"+1,",2)=162.1 ; file #
"RTN","FBRXFED",52,0)
 . S FBFDA(163.7,"+1,",3)=FBDA_"," ; iens
"RTN","FBRXFED",53,0)
 . S FBFDA(163.7,"+1,",4)=13 ; field #
"RTN","FBRXFED",54,0)
 . S FBFDA(163.7,"+1,",5)=FBFPPSC(0) ; old value
"RTN","FBRXFED",55,0)
 . S FBFDA(163.7,"+1,",6)=FBFPPSC ; new value
"RTN","FBRXFED",56,0)
 . S FBFDA(163.7,"+1,",7)=DUZ ; user
"RTN","FBRXFED",57,0)
 . I $D(FBFDA) D UPDATE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBRXFED",58,0)
 . ;
"RTN","FBRXFED",59,0)
 . ; update Rx's (would only apply if EDI status can change)
"RTN","FBRXFED",60,0)
 . D CKINVEDI^FBAAEPI1(FBFPPSC(0),FBFPPSC,FBDA)
"RTN","FBRXFED",61,0)
 ;
"RTN","FBRXFED",62,0)
ASKRX ; Select Prescription to Edit
"RTN","FBRXFED",63,0)
 W !
"RTN","FBRXFED",64,0)
 S DIC="^FBAA(162.1,"_FBDA_",""RX"",",DIC(0)="AEQM"
"RTN","FBRXFED",65,0)
 S DIC("W")="W ?30,""DATE RX FILLED: "",$E($P(^(0),U,3),4,5)_""/""_$E($P(^(0),U,3),6,7)_""/""_$E($P(^(0),U,3),2,3)"
"RTN","FBRXFED",66,0)
 D ^DIC I $D(DUOUT) S FBAAOUT=1 G INVEDX
"RTN","FBRXFED",67,0)
 I Y'>0 D  G:$D(DIRUT)!(Y=1) INVEDX G ASKRX
"RTN","FBRXFED",68,0)
 . S DIR(0)="Y"
"RTN","FBRXFED",69,0)
 . S DIR("A")="Are you finished editing prescriptions on invoice "_FBDA
"RTN","FBRXFED",70,0)
 . D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1
"RTN","FBRXFED",71,0)
 S FBRXDA=+Y
"RTN","FBRXFED",72,0)
 ;
"RTN","FBRXFED",73,0)
 ; get current value of FPPS LINE ITEM to use as default
"RTN","FBRXFED",74,0)
 S (FBFPPSL(0),FBFPPSL)=$P($G(^FBAA(162.1,FBDA,"RX",FBRXDA,3)),U)
"RTN","FBRXFED",75,0)
 ;
"RTN","FBRXFED",76,0)
EDITFL ; edit FPPS Line Item
"RTN","FBRXFED",77,0)
 S FBX=$$FPPSL^FBUTL5(FBFPPSL)
"RTN","FBRXFED",78,0)
 I FBX=-1 S FBAAOUT=1 G INVEDX
"RTN","FBRXFED",79,0)
 ; need to verify if following restriction is appropriate
"RTN","FBRXFED",80,0)
 S FBFPPSL=FBX
"RTN","FBRXFED",81,0)
 ;
"RTN","FBRXFED",82,0)
 ; if FPPS LINE ITEM changed, then update file and audit log
"RTN","FBRXFED",83,0)
 I FBFPPSL'=FBFPPSL(0) D
"RTN","FBRXFED",84,0)
 . ; set invoice changed flag
"RTN","FBRXFED",85,0)
 . S FBINVCHG=1
"RTN","FBRXFED",86,0)
 . ;
"RTN","FBRXFED",87,0)
 . ; file data in 162.11
"RTN","FBRXFED",88,0)
 . K FBFDA
"RTN","FBRXFED",89,0)
 . S FBFDA(162.11,FBRXDA_","_FBDA_",",36)=FBFPPSL
"RTN","FBRXFED",90,0)
 . I $D(FBFDA) D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBRXFED",91,0)
 . ;
"RTN","FBRXFED",92,0)
 . ; add record to audit log
"RTN","FBRXFED",93,0)
 . K FBFDA
"RTN","FBRXFED",94,0)
 . S FBFDA(163.7,"+1,",.01)=FBDA ; invoice number
"RTN","FBRXFED",95,0)
 . S FBFDA(163.7,"+1,",1)=$$NOW^XLFDT() ; date/time changed
"RTN","FBRXFED",96,0)
 . S FBFDA(163.7,"+1,",2)=162.11 ; file #
"RTN","FBRXFED",97,0)
 . S FBFDA(163.7,"+1,",3)=FBRXDA_","_FBDA_"," ; iens
"RTN","FBRXFED",98,0)
 . S FBFDA(163.7,"+1,",4)=36 ; field #
"RTN","FBRXFED",99,0)
 . S FBFDA(163.7,"+1,",5)=FBFPPSL(0) ; old value
"RTN","FBRXFED",100,0)
 . S FBFDA(163.7,"+1,",6)=FBFPPSL ; new value
"RTN","FBRXFED",101,0)
 . S FBFDA(163.7,"+1,",7)=DUZ ; user
"RTN","FBRXFED",102,0)
 . I $D(FBFDA) D UPDATE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBRXFED",103,0)
 ;
"RTN","FBRXFED",104,0)
 G ASKRX
"RTN","FBRXFED",105,0)
 ;
"RTN","FBRXFED",106,0)
INVEDX ; Invoice Edit Exit
"RTN","FBRXFED",107,0)
 ; if invoice changed then queue for retransmit to FPPS
"RTN","FBRXFED",108,0)
 I FBINVCHG D FILEQUE^FBFHLL(FBDA,5)
"RTN","FBRXFED",109,0)
 Q
"RTN","FBRXFED",110,0)
 ;
"RTN","FBRXFED",111,0)
CLEAN K DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBRXFED",112,0)
 K FBAAOUT,FBDA,FBFDA,FBFPPSC,FBFPPSL,FBINVCHG,FBRXDA,FBX
"RTN","FBRXFED",113,0)
 Q
"RTN","FBRXFED",114,0)
 ;FBRXFED
"RTN","FBRXFR")
0^31^B2618713
"RTN","FBRXFR",1,0)
FBRXFR ;WOIFO/SAB-FILE REMITTANCE REMARKS FOR PHARMACY PAYMENT ;7/17/2003
"RTN","FBRXFR",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBRXFR",3,0)
 Q
"RTN","FBRXFR",4,0)
FILERR(FBIENS,FBRRMK) ; File Remittance Remakrs
"RTN","FBRXFR",5,0)
 ;
"RTN","FBRXFR",6,0)
 ; Input
"RTN","FBRXFR",7,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.11
"RTN","FBRXFR",8,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBRXFR",9,0)
 ;   FBRRMK -  required, array passed by reference
"RTN","FBRXFR",10,0)
 ;             array of remittance remarks to file
"RTN","FBRXFR",11,0)
 ;             array does not have to contain any data or be defined
"RTN","FBRXFR",12,0)
 ;             format
"RTN","FBRXFR",13,0)
 ;               FBRRMK(#)=FBRRMKC
"RTN","FBRXFR",14,0)
 ;             where
"RTN","FBRXFR",15,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBRXFR",16,0)
 ;               FBRRMKC = remittance remark (internal value file 162.93)
"RTN","FBRXFR",17,0)
 ; Output
"RTN","FBRXFR",18,0)
 ;   Data in File 162.11 will be modified
"RTN","FBRXFR",19,0)
 ;
"RTN","FBRXFR",20,0)
 N FB,FBFDA,FBI,FBSIENS
"RTN","FBRXFR",21,0)
 ;
"RTN","FBRXFR",22,0)
 ; delete remitance remarks currently on file
"RTN","FBRXFR",23,0)
 D GETS^DIQ(162.11,FBIENS,"38*","","FB")
"RTN","FBRXFR",24,0)
 K FBFDA
"RTN","FBRXFR",25,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.15,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBRXFR",26,0)
 . S FBFDA(162.15,FBSIENS,.01)="@"
"RTN","FBRXFR",27,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA")
"RTN","FBRXFR",28,0)
 ;
"RTN","FBRXFR",29,0)
 ; file remarks from input array
"RTN","FBRXFR",30,0)
 K FBFDA
"RTN","FBRXFR",31,0)
 S FBI=0 F  S FBI=$O(FBRRMK(FBI)) Q:'FBI  D
"RTN","FBRXFR",32,0)
 . S FBFDA(162.15,"+"_FBI_","_FBIENS,.01)=$P(FBRRMK(FBI),U)
"RTN","FBRXFR",33,0)
 I $D(FBFDA) D UPDATE^DIE("","FBFDA")
"RTN","FBRXFR",34,0)
 ;
"RTN","FBRXFR",35,0)
 Q
"RTN","FBRXFR",36,0)
 ;
"RTN","FBRXFR",37,0)
LOADRR(FBIENS,FBRRMK) ; Load Remittance Remarks
"RTN","FBRXFR",38,0)
 ; Input
"RTN","FBRXFR",39,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.11
"RTN","FBRXFR",40,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBRXFR",41,0)
 ;   FBRRMK - required, array passed by reference
"RTN","FBRXFR",42,0)
 ;             array to load adjustments into
"RTN","FBRXFR",43,0)
 ; Output
"RTN","FBRXFR",44,0)
 ;   FBRRMK - the FBRRMK input array passed by reference will be modified
"RTN","FBRXFR",45,0)
 ;             format
"RTN","FBRXFR",46,0)
 ;               FBRRMK(#)=FBRRMKC
"RTN","FBRXFR",47,0)
 ;             where
"RTN","FBRXFR",48,0)
 ;               # = sequentially assigned number starting with 1
"RTN","FBRXFR",49,0)
 ;               FBRRMKC = remittance remark (internal value file 162.93)
"RTN","FBRXFR",50,0)
 ;             if no remarks are on file then the array will be undefined
"RTN","FBRXFR",51,0)
 N FB,FBC,FBI,FBSIENS
"RTN","FBRXFR",52,0)
 ;
"RTN","FBRXFR",53,0)
 K FBRRMK
"RTN","FBRXFR",54,0)
 ;
"RTN","FBRXFR",55,0)
 S FBC=0
"RTN","FBRXFR",56,0)
 D GETS^DIQ(162.11,FBIENS,"38*","I","FB")
"RTN","FBRXFR",57,0)
 S FBSIENS="" F  S FBSIENS=$O(FB(162.15,FBSIENS)) Q:FBSIENS=""  D
"RTN","FBRXFR",58,0)
 . S FBC=FBC+1
"RTN","FBRXFR",59,0)
 . S FBRRMK(FBC)=FB(162.15,FBSIENS,.01,"I")
"RTN","FBRXFR",60,0)
 ;
"RTN","FBRXFR",61,0)
 Q
"RTN","FBRXFR",62,0)
 ;
"RTN","FBRXFR",63,0)
RRL(FBIENS) ; Remittance Remarks List Extrinsic Function
"RTN","FBRXFR",64,0)
 ; Input
"RTN","FBRXFR",65,0)
 ;   FBIENS -  required, internal entry numbers for subfile 162.11
"RTN","FBRXFR",66,0)
 ;             in standard format as specified for FileMan DBS calls
"RTN","FBRXFR",67,0)
 ; Result
"RTN","FBRXFR",68,0)
 ;   string containing sorted list (by external code) of remarks
"RTN","FBRXFR",69,0)
 ;   format
"RTN","FBRXFR",70,0)
 ;      FBRRMKCE 1, FBRRMKCE 2
"RTN","FBRXFR",71,0)
 ;   where
"RTN","FBRXFR",72,0)
 ;      FBRRMKCE = remittance remark code (external value)
"RTN","FBRXFR",73,0)
 N FBRET,FBRRMK
"RTN","FBRXFR",74,0)
 D LOADRR^FBRXFR(FBIENS,.FBRRMK)
"RTN","FBRXFR",75,0)
 S FBRET=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBRXFR",76,0)
 Q FBRET
"RTN","FBRXFR",77,0)
 ;
"RTN","FBRXFR",78,0)
 ;FBRXFR
"RTN","FBUCEN")
0^5^B26051535
"RTN","FBUCEN",1,0)
FBUCEN ;ALBISC/TET - ENTER UNAUTHORIZED CLAIM ;7/17/03
"RTN","FBUCEN",2,0)
 ;;3.5;FEE BASIS;**32,61**;JAN 30, 1995
"RTN","FBUCEN",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBUCEN",4,0)
 ;FBUC - unauthorized claims site parameter node
"RTN","FBUCEN",5,0)
 ;FBTRACK - 1 to track incomplete claims, 0 to track complete claims only
"RTN","FBUCEN",6,0)
 ;FBUCP - 0 to not automatically print letters, otherwise default device
"RTN","FBUCEN",7,0)
 ;FBOK - 0 if claim is incomplete, 1 if claim is complete.
"RTN","FBUCEN",8,0)
 ;FBACT - ENT for enter (fbact represents action type)
"RTN","FBUCEN",9,0)
 ;FBINENT = initial entry parameter: 1 if using, 0 if not
"RTN","FBUCEN",10,0)
 S FBOUT=0,FBUC=$$FBUC^FBUCUTL2(1),FBTRACK=+$P(FBUC,U),FBOK=$S('FBTRACK:1,1:0),FBACT="ENT",FBINENT=+$P(FBUC,U,7)
"RTN","FBUCEN",11,0)
GET ;get info on new claim entry
"RTN","FBUCEN",12,0)
 K FBVEN,FBVET
"RTN","FBUCEN",13,0)
VET ;get vet info
"RTN","FBUCEN",14,0)
 K DIR W !! S DIR(0)="162.7,2O",DIR("A")="Select VETERAN" D ^DIR K DIR G END:$D(DIRUT),VET:+Y'>0 S FBVET=+Y
"RTN","FBUCEN",15,0)
VEN ;get vendor info
"RTN","FBUCEN",16,0)
 S DIR(0)="162.7,1O",DIR("A")="Select FEE VENDOR" D ^DIR K DIR G VET:$D(DUOUT)!($D(DTOUT)),VEN:+Y<0,VEN:+Y=0&('FBINENT) S FBVEN=+Y
"RTN","FBUCEN",17,0)
PROG S DIC="^FBAA(161.8,",DIC(0)="AEQMZ",DIC("S")="I +$P(^(0),U,3)" D ^DIC K DIC S:$D(DTOUT)!($D(DUOUT)) FBOUT=1 G END:FBOUT,GET:Y<0 S FBPR=+Y D  S:FBOUT FBOUT=0 G VET
"RTN","FBUCEN",18,0)
 .N FBDA,FBMASTER,FBORDER,FBTFROM,FBTTO,FB1725,FBFPPSC
"RTN","FBUCEN",19,0)
 .; ask if claim is an EDI claim (patch *61)
"RTN","FBUCEN",20,0)
 .S FBFPPSC=$$FPPSC^FBUTL5() I FBFPPSC=-1 S FBFPPSC="",FBOUT=1 Q
"RTN","FBUCEN",21,0)
 .; ask if claim is a mill bill emergency care claim (patch *32)
"RTN","FBUCEN",22,0)
 .S DIR(0)="Y"
"RTN","FBUCEN",23,0)
 .S DIR("A")="Is this claim being considered under Millennium Act 38 U.S.C. 1725 (Y/N)"
"RTN","FBUCEN",24,0)
 .D ^DIR K DIR I $D(DIRUT) S FBOUT=1 Q
"RTN","FBUCEN",25,0)
 .S FB1725=$S(Y:1,1:"")
"RTN","FBUCEN",26,0)
 .D ASKDT Q:FBOUT  I FBTRACK,'FBINENT D  Q:FBOUT
"RTN","FBUCEN",27,0)
 ..S DIR(0)="Y",DIR("A")="Is the unauthorized claim complete for the FEE PROGRAM" D DIRQ,^DIR K DIR S:$D(DIRUT) FBOUT=1 S:'FBOUT FBOK=Y Q:FBOUT!(FBOK)
"RTN","FBUCEN",28,0)
 ..D REQ^FBUCPEND Q:FBOUT  S FBORDER=10 ;display/select pending information,set status order to incomplete if selected pending items
"RTN","FBUCEN",29,0)
 .;check for duplicates
"RTN","FBUCEN",30,0)
 .I 'FBINENT W !,"Checking for potential duplicates...",! H 1 D ^FBUCDUP
"RTN","FBUCEN",31,0)
 .W !!,"Checking eligibility...",! H 1 S DFN=FBVET D ELIG^VADPT W:VAEL(4)'=1 !,"Patient is not a veteran.",*7 D ELIG^FBAADEM K VAEL,VAERR
"RTN","FBUCEN",32,0)
 .W ! S DIR("A")="Are you sure you wish to enter a new unauthorized claim",DIR(0)="Y" D ^DIR K DIR S:'Y!($D(DIRUT)) FBOUT=1 Q:FBOUT
"RTN","FBUCEN",33,0)
 .;file new claim
"RTN","FBUCEN",34,0)
 .S DIC="^FB583(",DIC(0)="Z",X=DT K DD,DO D FILE^DICN S FBOUT=$S($P(Y,U,3):0,1:1) Q:FBOUT  S FBDA=+Y D PRIOR^FBUCEVT(FBDA,FBACT) D
"RTN","FBUCEN",35,0)
 ..S FBMASTER=FBDA,FBORDER=$S(+$G(FBORDER)=10:10,'FBINENT:30,1:5)
"RTN","FBUCEN",36,0)
 ..S DIE=DIC,DIE("NO^")="BACKOUTOK",DR="[FB UNAUTHORIZED ENTER]",DA=FBDA
"RTN","FBUCEN",37,0)
 ..D LOCK^FBUCUTL(DIE,DA,1) S:'FBLOCK FBOUT=1 Q:FBOUT  D ^DIE L -^FB583(FBDA) K DA,DIE,DQ,DR,FBLOCK I $D(Y)!($D(DTOUT)) S DIK=DIC,DA=FBDA D ^DIK K DIK W !,"... Deleting incomplete record.",*7 S FBOUT=1 Q
"RTN","FBUCEN",38,0)
 ..I FBORDER=10 D FREQ^FBUCPEND ;file requested info
"RTN","FBUCEN",39,0)
 ..K ^TMP("FBARY",$J),^TMP("FBAR",$J)
"RTN","FBUCEN",40,0)
 .D AFTER^FBUCEVT(FBDA,FBACT)
"RTN","FBUCEN",41,0)
 .K FBARY,FBLOCK Q:FBOUT  D ENTER^FBUCLNK1(FBDA,FBUCA,1) K FBARY,^TMP("FBARY",$J),^TMP("FBAR",$J)
"RTN","FBUCEN",42,0)
 .I FBORDER'=10,+$G(FBVEN)>0,+$G(FBTTO)>0 D AFTER^FBUCEVT(FBDA,FBACT),EN^FBUCEN1(FBUCA,FBDA) ;if claim complete, check if group, any in group dispositioned
"RTN","FBUCEN",43,0)
 .;do update
"RTN","FBUCEN",44,0)
 .D AFTER^FBUCEVT(FBDA,FBACT),^FBUCUPD(FBUCP,FBUCPA,FBUCA,FBUCAA,FBDA,FBACT)
"RTN","FBUCEN",45,0)
 ;
"RTN","FBUCEN",46,0)
END ;kill and quit
"RTN","FBUCEN",47,0)
 K DA,DFN,DIC,DIE,DIR,DIRUT,DQ,DR,DTOUT,DUOUT,FBACT,FBARY,FBDA,FBDISP,FBINENT,FBLOCK,FBMASTER,FBOK,FBORDER,FBOUT,FBPEND,FBPI,FBPR,FBPROG
"RTN","FBUCEN",48,0)
 K FBSTATUS,FBTFROM,FBTRACK,FBTTO,FBUC,FBUCA,FBUCP,FBUCAA,FBUCP,FBUCPA,FBVEN,FBVET,X,Y,^TMP("FBAR",$J),^TMP("FBARY",$J)
"RTN","FBUCEN",49,0)
 Q
"RTN","FBUCEN",50,0)
ASKDT ;ask treatment from/to dates
"RTN","FBUCEN",51,0)
 S DIR(0)="162.7,3" S:FBPR=6 DIR("A")="ADMISSION DATE" D ^DIR K DIR S:'+Y DIRUT="^" S:$D(DIRUT) FBOUT=1 S:'FBOUT FBTFROM=Y
"RTN","FBUCEN",52,0)
 I 'FBOUT S DIR(0)="162.7,4O" S:FBPR=6 DIR("A")="DISCHARGE DATE" S:FBPR'=6&(FBPR'=7) DIR("B")=$$DATX^FBAAUTL(FBTFROM) D ^DIR K DIR S:$D(DUOUT)!($D(DTOUT)) FBOUT=1 I 'FBOUT,'FBINENT G:+Y'>0!(FBTFROM>Y) ASKDT S FBTTO=Y
"RTN","FBUCEN",53,0)
 I 'FBOUT S FBTTO=+Y
"RTN","FBUCEN",54,0)
 Q
"RTN","FBUCEN",55,0)
HELP ;help text for complete claim question - ??
"RTN","FBUCEN",56,0)
 W !?10,"An unauthorized claim is considered complete (or valid)"
"RTN","FBUCEN",57,0)
 W !?10,"if all the necessary information has been received."
"RTN","FBUCEN",58,0)
 W !?10,"A claim can never be considered complete if it is missing"
"RTN","FBUCEN",59,0)
 W !?10,"form 10-583 or form 10-583 is incomplete."
"RTN","FBUCEN",60,0)
 W !?10,"Some examples of other items which are needed are:"
"RTN","FBUCEN",61,0)
 W !?20,"Copies of actual bills",!?20,"Original paid receipt"
"RTN","FBUCEN",62,0)
 W !?20,"Itemized invoice/UB82",!?20,"Medical records or signature for release"
"RTN","FBUCEN",63,0)
 W !?20,"Diagnostic/Procedure code(s)",!
"RTN","FBUCEN",64,0)
 Q
"RTN","FBUCEN",65,0)
DIRQ ;set dir(?,#)
"RTN","FBUCEN",66,0)
 S DIR("?")="Enter Y(es) if complete, N(o) if incomplete."
"RTN","FBUCEN",67,0)
 S DIR("??")="^D HELP^FBUCEN"
"RTN","FBUCEN",68,0)
 S DIR("?",1)="Enter Y(es) if all required information has been submitted,"
"RTN","FBUCEN",69,0)
 S DIR("?",2)="      N(o)  if the claim is incomplete."
"RTN","FBUCEN",70,0)
 S DIR("?",3)=""
"RTN","FBUCEN",71,0)
 Q
"RTN","FBUTL1")
0^1^B14646555
"RTN","FBUTL1",1,0)
FBUTL1 ;WOIFO/SAB-FEE BASIS UTILITY ;6/17/2003
"RTN","FBUTL1",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBUTL1",3,0)
 Q
"RTN","FBUTL1",4,0)
 ;Extrinsic functions AR, AG, and RR have similar inputs and outputs
"RTN","FBUTL1",5,0)
 ; input
"RTN","FBUTL1",6,0)
 ;   FBCI - Internal entry number of code.
"RTN","FBUTL1",7,0)
 ;          Not required if external value is passed.
"RTN","FBUTL1",8,0)
 ;   FBCE - External value of code.
"RTN","FBUTL1",9,0)
 ;          Not required if internal value is passed.
"RTN","FBUTL1",10,0)
 ;          If both the internal and external values are passed
"RTN","FBUTL1",11,0)
 ;          then the external value will be ignored.
"RTN","FBUTL1",12,0)
 ;   FBDT - Effective date.
"RTN","FBUTL1",13,0)
 ;          Optional - DT (Today) will be used if a value is not passed.
"RTN","FBUTL1",14,0)
 ;          An input date prior to 6/1/03 will be changed to be 6/1/03.
"RTN","FBUTL1",15,0)
 ;   FBAR - Root of local or global array in which the description
"RTN","FBUTL1",16,0)
 ;          word processing field will be returned.
"RTN","FBUTL1",17,0)
 ;          Optional - description will not be returned if an array root
"RTN","FBUTL1",18,0)
 ;          is not passed.  The root should be in closed format
"RTN","FBUTL1",19,0)
 ;          such as FBAR or FBAR(2) or ^TMP($J,"DESC").
"RTN","FBUTL1",20,0)
 ;          The root should not be a variable name already used in FBUTL1
"RTN","FBUTL1",21,0)
 ; Returns a string value
"RTN","FBUTL1",22,0)
 ;     Internal code ^ External code ^ HIPAA status ^ FEE status ^ name
"RTN","FBUTL1",23,0)
 ;   OR if there is an error
"RTN","FBUTL1",24,0)
 ;     -1^-1^^^error message text
"RTN","FBUTL1",25,0)
 ;   where
"RTN","FBUTL1",26,0)
 ;     internal code = internal entry number of code in file
"RTN","FBUTL1",27,0)
 ;     external code = external value of code
"RTN","FBUTL1",28,0)
 ;     HIPAA status = 1 (active) or 0 (inactive) as of effective date
"RTN","FBUTL1",29,0)
 ;     FEE status = 1 (applicable) or 0 (not applicable) for fee claim
"RTN","FBUTL1",30,0)
 ;                  adjudication as of the effective date
"RTN","FBUTL1",31,0)
 ;     name = a short descriptive name for the code as of the eff. date
"RTN","FBUTL1",32,0)
 ;            name is only returned by AG (not returned by AR and RR)
"RTN","FBUTL1",33,0)
 ;     error message text = an error message
"RTN","FBUTL1",34,0)
 ; Output
"RTN","FBUTL1",35,0)
 ;   fbarr( - Array containing the description as of the effective date.
"RTN","FBUTL1",36,0)
 ;            For example, if "FBTXT" was passed in parameter FBAR then
"RTN","FBUTL1",37,0)
 ;            the output might be
"RTN","FBUTL1",38,0)
 ;              FBTXT(1)=1st line of description
"RTN","FBUTL1",39,0)
 ;              FBTXT(2)=2nd line of description
"RTN","FBUTL1",40,0)
 ;            The array will be undefined if there is not a description
"RTN","FBUTL1",41,0)
 ;
"RTN","FBUTL1",42,0)
AR(FBCI,FBCE,FBDT,FBAR) ; ADJUSTMENT REASON extrinsic function
"RTN","FBUTL1",43,0)
 ; Provides status and description for an adjustment reason code
"RTN","FBUTL1",44,0)
 ; stored in the ADJUSTMENT REASON (#161.91) file.
"RTN","FBUTL1",45,0)
 ; see top of routine for additional documentation
"RTN","FBUTL1",46,0)
 N FBC,FBDT1,FBERR,FBRET
"RTN","FBUTL1",47,0)
 S FBRET="",FBERR=""
"RTN","FBUTL1",48,0)
 I $G(FBAR)]"" K @FBAR
"RTN","FBUTL1",49,0)
 ;
"RTN","FBUTL1",50,0)
 ; find code in file
"RTN","FBUTL1",51,0)
 D FNDCDE(161.91)
"RTN","FBUTL1",52,0)
 ;
"RTN","FBUTL1",53,0)
 ; set effective date for search
"RTN","FBUTL1",54,0)
 D SETDT
"RTN","FBUTL1",55,0)
 ;
"RTN","FBUTL1",56,0)
 ; determine status of code
"RTN","FBUTL1",57,0)
 I FBCI,FBERR="" D GETSTAT(161.91)
"RTN","FBUTL1",58,0)
 ;
"RTN","FBUTL1",59,0)
 ; if array root passed then determine description of code
"RTN","FBUTL1",60,0)
 I $G(FBAR)]"",FBCI,FBERR="" D GETDESC(161.91)
"RTN","FBUTL1",61,0)
 ;
"RTN","FBUTL1",62,0)
 I FBERR]"" S FBRET="-1^-1^^^"_FBERR
"RTN","FBUTL1",63,0)
 Q FBRET
"RTN","FBUTL1",64,0)
 ;
"RTN","FBUTL1",65,0)
AG(FBCI,FBCE,FBDT,FBAR) ; ADJUSTMENT GROUP extrinsic function
"RTN","FBUTL1",66,0)
 ; Provides status and description for an adjustment group code
"RTN","FBUTL1",67,0)
 ; stored in the ADJUSTMENT GROUP (#161.92) file.
"RTN","FBUTL1",68,0)
 ; see top of routine for additional documentation
"RTN","FBUTL1",69,0)
 N FBC,FBDT1,FBERR,FBRET
"RTN","FBUTL1",70,0)
 S FBRET="",FBERR=""
"RTN","FBUTL1",71,0)
 I $G(FBAR)]"" K @FBAR
"RTN","FBUTL1",72,0)
 ;
"RTN","FBUTL1",73,0)
 ; find code in file
"RTN","FBUTL1",74,0)
 D FNDCDE(161.92)
"RTN","FBUTL1",75,0)
 ;
"RTN","FBUTL1",76,0)
 ; set effective date for search
"RTN","FBUTL1",77,0)
 D SETDT
"RTN","FBUTL1",78,0)
 ;
"RTN","FBUTL1",79,0)
 ; determine status of code
"RTN","FBUTL1",80,0)
 I FBCI,FBERR="" D GETSTAT(161.92)
"RTN","FBUTL1",81,0)
 ;
"RTN","FBUTL1",82,0)
 ; determine name, description of code
"RTN","FBUTL1",83,0)
 I FBCI,FBERR="" D GETDESC(161.92)
"RTN","FBUTL1",84,0)
 ;
"RTN","FBUTL1",85,0)
 I FBERR]"" S FBRET="-1^-1^^^"_FBERR
"RTN","FBUTL1",86,0)
 Q FBRET
"RTN","FBUTL1",87,0)
 ;
"RTN","FBUTL1",88,0)
RR(FBCI,FBCE,FBDT,FBAR) ; REMITTANCE REMARK extrinsic function
"RTN","FBUTL1",89,0)
 ; Provides status and description for an adjustment reason code
"RTN","FBUTL1",90,0)
 ; stored in the REMITTANCE REMARK (#161.93) file.
"RTN","FBUTL1",91,0)
 ; see top of routine for additional documentation
"RTN","FBUTL1",92,0)
 N FBC,FBDT1,FBERR,FBRET
"RTN","FBUTL1",93,0)
 S FBRET="",FBERR=""
"RTN","FBUTL1",94,0)
 I $G(FBAR)]"" K @FBAR
"RTN","FBUTL1",95,0)
 ;
"RTN","FBUTL1",96,0)
 ; find code in file
"RTN","FBUTL1",97,0)
 D FNDCDE(161.93)
"RTN","FBUTL1",98,0)
 ;
"RTN","FBUTL1",99,0)
 ; set effective date for search
"RTN","FBUTL1",100,0)
 D SETDT
"RTN","FBUTL1",101,0)
 ;
"RTN","FBUTL1",102,0)
 ; determine status of code
"RTN","FBUTL1",103,0)
 I FBCI,FBERR="" D GETSTAT(161.93)
"RTN","FBUTL1",104,0)
 ;
"RTN","FBUTL1",105,0)
 ; if array root passed then determine description of code
"RTN","FBUTL1",106,0)
 I $G(FBAR)]"",FBCI,FBERR="" D GETDESC(161.93)
"RTN","FBUTL1",107,0)
 ;
"RTN","FBUTL1",108,0)
 I FBERR]"" S FBRET="-1^-1^^^"_FBERR
"RTN","FBUTL1",109,0)
 Q FBRET
"RTN","FBUTL1",110,0)
 ;
"RTN","FBUTL1",111,0)
FNDCDE(FBFILE) ; find code
"RTN","FBUTL1",112,0)
 ;   determine ien if not passed
"RTN","FBUTL1",113,0)
 I $G(FBCI)="",$G(FBCE)]"" S FBCI=$O(^FB(FBFILE,"B",FBCE,0))
"RTN","FBUTL1",114,0)
 ;   get data
"RTN","FBUTL1",115,0)
 I $G(FBCI) S FBC=$P($G(^FB(FBFILE,FBCI,0)),U)
"RTN","FBUTL1",116,0)
 I $G(FBC)="" S FBERR="CODE NOT FOUND IN FILE"
"RTN","FBUTL1",117,0)
 E  S FBRET=FBCI_U_FBC
"RTN","FBUTL1",118,0)
 Q
"RTN","FBUTL1",119,0)
 ;
"RTN","FBUTL1",120,0)
SETDT ; set date
"RTN","FBUTL1",121,0)
 I $G(FBDT)'?7N S FBDT=DT ; if date not passed then set as Today
"RTN","FBUTL1",122,0)
 I FBDT<3030601 S FBDT=3030601 ; if date prior to 6/1/03 then set
"RTN","FBUTL1",123,0)
 S FBDT1=$$FMADD^XLFDT(FBDT,1) ; use date + 1 in reverse $Orders
"RTN","FBUTL1",124,0)
 Q
"RTN","FBUTL1",125,0)
 ;
"RTN","FBUTL1",126,0)
GETSTAT(FBFILE) ; get status
"RTN","FBUTL1",127,0)
 N FBFEEU,FBSEDT,FBSI,FBSTAT,FBSY
"RTN","FBUTL1",128,0)
 ; find most recent status effective date prior to the input date 
"RTN","FBUTL1",129,0)
 S FBSEDT=$O(^FB(FBFILE,FBCI,1,"B",FBDT1),-1)
"RTN","FBUTL1",130,0)
 S:FBSEDT]"" FBSI=$O(^FB(FBFILE,FBCI,1,"B",FBSEDT,0))
"RTN","FBUTL1",131,0)
 S:$G(FBSI) FBSY=$G(^FB(FBFILE,FBCI,1,FBSI,0))
"RTN","FBUTL1",132,0)
 S:$G(FBSY)]"" FBSTAT=$P(FBSY,U,2),FBFEEU=$S('FBSTAT:0,1:+$P(FBSY,U,3))
"RTN","FBUTL1",133,0)
 I $G(FBSTAT)="" S FBERR="STATUS NOT AVAILABLE FOR SPECIFIED DATE" Q
"RTN","FBUTL1",134,0)
 S FBRET=FBRET_U_FBSTAT_U_FBFEEU
"RTN","FBUTL1",135,0)
 Q
"RTN","FBUTL1",136,0)
 ;
"RTN","FBUTL1",137,0)
GETDESC(FBFILE) ; get description
"RTN","FBUTL1",138,0)
 N FBDEDT,FBDI,FBDN,FBX
"RTN","FBUTL1",139,0)
 ; find most recent description effective date prior to input date
"RTN","FBUTL1",140,0)
 S FBDEDT=$O(^FB(FBFILE,FBCI,2,"B",FBDT1),-1)
"RTN","FBUTL1",141,0)
 S:FBDEDT]"" FBDI=$O(^FB(FBFILE,FBCI,2,"B",FBDEDT,0))
"RTN","FBUTL1",142,0)
 ; if file 161.92 then get short descriptive name
"RTN","FBUTL1",143,0)
 I FBFILE=161.92 D
"RTN","FBUTL1",144,0)
 . S:$G(FBDI) FBDN=$P($G(^FB(FBFILE,FBCI,2,FBDI,0)),U,2)
"RTN","FBUTL1",145,0)
 . S FBRET=FBRET_U_$G(FBDN)
"RTN","FBUTL1",146,0)
 ; if array root passed then get full description
"RTN","FBUTL1",147,0)
 I $G(FBAR)]"",$G(FBDI) S FBX=$$GET1^DIQ(FBFILE_"2",FBDI_","_FBCI_",",1,,FBAR)
"RTN","FBUTL1",148,0)
 Q
"RTN","FBUTL1",149,0)
 ;
"RTN","FBUTL1",150,0)
 ;FBUTL1
"RTN","FBUTL2")
0^2^B53327965
"RTN","FBUTL2",1,0)
FBUTL2 ;WOIFO/SAB-FEE BASIS UTILITY ;7/1/2003
"RTN","FBUTL2",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBUTL2",3,0)
 Q
"RTN","FBUTL2",4,0)
ADJ(FBTAS,FBADJ,FBMAX,FBDT,FBADJD,FBNOOUT) ; Prompt for adjustments
"RTN","FBUTL2",5,0)
 ;
"RTN","FBUTL2",6,0)
 ; Input
"RTN","FBUTL2",7,0)
 ;   FBTAS  - required, total amount suspended, number, may be negative
"RTN","FBUTL2",8,0)
 ;            the sum of all adjustment amounts must equal this value
"RTN","FBUTL2",9,0)
 ;   FBADJ  - required, array passed by reference
"RTN","FBUTL2",10,0)
 ;            will be initialized (killed)
"RTN","FBUTL2",11,0)
 ;            array of any entered adjustments
"RTN","FBUTL2",12,0)
 ;            format
"RTN","FBUTL2",13,0)
 ;              FBADJ(#)=FBADJR^FBADJG^FBADJA
"RTN","FBUTL2",14,0)
 ;            where
"RTN","FBUTL2",15,0)
 ;              # = sequentially assigned number starting with 1
"RTN","FBUTL2",16,0)
 ;              FBADJR = adjustment reason (internal value file 162.91)
"RTN","FBUTL2",17,0)
 ;              FBADJG = adjustment group (inernal value file 162.92)
"RTN","FBUTL2",18,0)
 ;              FBADJA = adjustment amount (dollar value)
"RTN","FBUTL2",19,0)
 ;   FBMAX  -  optional, number, default to 1
"RTN","FBUTL2",20,0)
 ;             maximum number of adjustments that may be entered by user
"RTN","FBUTL2",21,0)
 ;   FBDT   -  optional, effective date, FileMan internal format
"RTN","FBUTL2",22,0)
 ;             default to current date, used to determine available codes
"RTN","FBUTL2",23,0)
 ;   FBADJD -  optional, array passed by reference
"RTN","FBUTL2",24,0)
 ;             same format as FBADJ
"RTN","FBUTL2",25,0)
 ;             if passed, it will be used to supply default values
"RTN","FBUTL2",26,0)
 ;             normally only used when editing an existing payment 
"RTN","FBUTL2",27,0)
 ;   FBNOOUT-  optional, boolean value, default 0, set =1 if user
"RTN","FBUTL2",28,0)
 ;             should not be allowed to exit using an uparrow
"RTN","FBUTL2",29,0)
 ; Result (value of $$ADJ extrinsic function)
"RTN","FBUTL2",30,0)
 ;   FBRET  - boulean value (0 or 1)
"RTN","FBUTL2",31,0)
 ;             = 1 when valid adjustments entered
"RTN","FBUTL2",32,0)
 ;             = 0 when processed ended due to time-out or entry of '^'
"RTN","FBUTL2",33,0)
 ; Output
"RTN","FBUTL2",34,0)
 ;   FBADJ  - the FBADJ input array passed by reference will be modified
"RTN","FBUTL2",35,0)
 ;            if the result = 1 then it will contain entered adjustments
"RTN","FBUTL2",36,0)
 ;            if the result = 0 then it will be undefined
"RTN","FBUTL2",37,0)
 ;
"RTN","FBUTL2",38,0)
 N FBADJR,FBCAS,FBCNT,FBEDIT,FBERR,FBI,FBNEW,FBRET
"RTN","FBUTL2",39,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL2",40,0)
 S FBRET=1
"RTN","FBUTL2",41,0)
 S FBMAX=$G(FBMAX,1)
"RTN","FBUTL2",42,0)
 S FBDT=$G(FBDT,DT)
"RTN","FBUTL2",43,0)
 S FBNOOUT=$G(FBNOOUT,0)
"RTN","FBUTL2",44,0)
 K FBADJ
"RTN","FBUTL2",45,0)
 ;
"RTN","FBUTL2",46,0)
 I +FBTAS=0 G EXIT ; no adjustment since total amount susp. is 0
"RTN","FBUTL2",47,0)
 ;
"RTN","FBUTL2",48,0)
 ; if default adjustments exist then load them into array
"RTN","FBUTL2",49,0)
 I $D(FBADJD) M FBADJ=FBADJD
"RTN","FBUTL2",50,0)
 S (FBCNT,FBCAS)=0
"RTN","FBUTL2",51,0)
 I $D(FBADJ) S FBI=0 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBUTL2",52,0)
 . S FBCNT=FBCNT+1
"RTN","FBUTL2",53,0)
 . S FBCAS=FBCAS+$P(FBADJ(FBI),U,3)
"RTN","FBUTL2",54,0)
 ;
"RTN","FBUTL2",55,0)
 ; if more than one adjustment can be entered then display number
"RTN","FBUTL2",56,0)
 ;
"RTN","FBUTL2",57,0)
 ;
"RTN","FBUTL2",58,0)
ASKADJ ; multiply prompt for adjustments
"RTN","FBUTL2",59,0)
 ;
"RTN","FBUTL2",60,0)
 ; display current list of adjustments when more than 1 allowed
"RTN","FBUTL2",61,0)
 I FBMAX>1!(FBCNT>1) D
"RTN","FBUTL2",62,0)
 . W !!,"Current list of Adjustments: "
"RTN","FBUTL2",63,0)
 . I '$O(FBADJ(0)) W "none"
"RTN","FBUTL2",64,0)
 . S FBI=0 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBUTL2",65,0)
 . . W ?30,"Code: "
"RTN","FBUTL2",66,0)
 . . W:$P(FBADJ(FBI),U)]"" $P($G(^FB(161.91,$P(FBADJ(FBI),U),0)),U)
"RTN","FBUTL2",67,0)
 . . W ?44,"Group: "
"RTN","FBUTL2",68,0)
 . . W:$P(FBADJ(FBI),U,2)]"" $P($G(^FB(161.92,$P(FBADJ(FBI),U,2),0)),U)
"RTN","FBUTL2",69,0)
 . . W ?56,"Amount: "
"RTN","FBUTL2",70,0)
 . . W "$",$FN($P(FBADJ(FBI),U,3),"",2),!
"RTN","FBUTL2",71,0)
 ;
"RTN","FBUTL2",72,0)
 ; prompt for adjustment reason
"RTN","FBUTL2",73,0)
 ;   if max is 1 and reason already on list then automatically select it
"RTN","FBUTL2",74,0)
 I FBMAX=1,FBCNT=1 D
"RTN","FBUTL2",75,0)
 . N FBI,FBADJR
"RTN","FBUTL2",76,0)
 . S FBI=$O(FBADJ(0))
"RTN","FBUTL2",77,0)
 . S:FBI FBADJR=$P(FBADJ(FBI),U)
"RTN","FBUTL2",78,0)
 . I FBADJR S Y=FBADJR_U_$P($G(^FB(161.91,FBADJR,0)),U)
"RTN","FBUTL2",79,0)
 E  D  I $D(DTOUT)!$D(DUOUT) S FBRET=0 G EXIT  ; prompt user
"RTN","FBUTL2",80,0)
 . S DIR(0)="PO^161.91:EMZ"
"RTN","FBUTL2",81,0)
 . S DIR("A")="Select ADJUSTMENT REASON"
"RTN","FBUTL2",82,0)
 . S DIR("S")="I $P($$AR^FBUTL1(Y,,FBDT),U,4)=1"
"RTN","FBUTL2",83,0)
 . S DIR("?")="Select a HIPAA Adjustment (suspense) Reason Code"
"RTN","FBUTL2",84,0)
 . S DIR("?",1)="Adjustment reason codes explain why the amount paid differs"
"RTN","FBUTL2",85,0)
 . S DIR("?",2)="from the amount claimed."
"RTN","FBUTL2",86,0)
 . D ^DIR K DIR
"RTN","FBUTL2",87,0)
 ; if value was entered then process it and ask another if not max and
"RTN","FBUTL2",88,0)
 ;   total amount suspended has not been accounted for
"RTN","FBUTL2",89,0)
 I +Y>0 D  G:FBRET=0 EXIT I FBCNT<FBMAX,FBCAS'=FBTAS G ASKADJ
"RTN","FBUTL2",90,0)
 . S FBADJR=+Y
"RTN","FBUTL2",91,0)
 . ; if specified adj. reason already in list set FBEDIT = it's number
"RTN","FBUTL2",92,0)
 . S (FBI,FBEDIT)=0 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D  Q:FBEDIT
"RTN","FBUTL2",93,0)
 . . I $P(FBADJ(FBI),U)=FBADJR S FBEDIT=FBI
"RTN","FBUTL2",94,0)
 . S FBNEW=$S(FBEDIT:0,1:1) ; flag as new if not on list
"RTN","FBUTL2",95,0)
 . ; if in list then edit the existing adj. reason
"RTN","FBUTL2",96,0)
 . I FBEDIT D  Q:$D(DIRUT)  Q:FBADJR=""
"RTN","FBUTL2",97,0)
 . . S DIR(0)="162.558,.01"
"RTN","FBUTL2",98,0)
 . . ;S DIR(0)="PO^161.91:EMZ"
"RTN","FBUTL2",99,0)
 . . ;S DIR("S")="I $P($$AR^FBUTL1(Y,,FBDT),U,4)=1"
"RTN","FBUTL2",100,0)
 . . ;S DIR("A")="  ADJUSTMENT REASON"
"RTN","FBUTL2",101,0)
 . . S DIR("B")=$P($G(^FB(161.91,FBADJR,0)),U)
"RTN","FBUTL2",102,0)
 . . ;S DIR("?")="Enter a HIPAA Adjustment (suspense) Reason Code"
"RTN","FBUTL2",103,0)
 . . ;S DIR("?",1)="Adjustment reason codes explain why the amount paid differs"
"RTN","FBUTL2",104,0)
 . . ;S DIR("?",2)="from the amount claimed."
"RTN","FBUTL2",105,0)
 . . D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S:FBMAX=1 FBRET=0 Q
"RTN","FBUTL2",106,0)
 . . I X="@" D  Q  ; "@" removes from list
"RTN","FBUTL2",107,0)
 . . . D DEL(FBEDIT)
"RTN","FBUTL2",108,0)
 . . . S FBADJR=""
"RTN","FBUTL2",109,0)
 . . . W "   (deleted)"
"RTN","FBUTL2",110,0)
 . . I +Y>0 S FBADJR=+Y
"RTN","FBUTL2",111,0)
 . . ; ensure new value of edited reason is not already on list
"RTN","FBUTL2",112,0)
 . . S FBI=0 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D  Q:FBADJR=""
"RTN","FBUTL2",113,0)
 . . . I $P(FBADJ(FBI),U)=FBADJR,FBI'=FBEDIT S FBADJR="" W !,$C(7),"     Change was not accepted because the new value is already on the list."
"RTN","FBUTL2",114,0)
 . . Q:FBADJR=""
"RTN","FBUTL2",115,0)
 . . ; upate the existing reason
"RTN","FBUTL2",116,0)
 . . S $P(FBADJ(FBEDIT),U)=FBADJR
"RTN","FBUTL2",117,0)
 . ;
"RTN","FBUTL2",118,0)
 . ; if new reason then add to list
"RTN","FBUTL2",119,0)
 . I 'FBEDIT D  Q:FBADJR=""
"RTN","FBUTL2",120,0)
 . . I (FBCNT+1)>FBMAX D  Q
"RTN","FBUTL2",121,0)
 . . . S FBADJR=""
"RTN","FBUTL2",122,0)
 . . . W !,$C(7),"ERROR: A new reason would exceed maximum number (",FBMAX,") allowed for this invoice."
"RTN","FBUTL2",123,0)
 . . . W !,"   Select a reason code on the current list instead."
"RTN","FBUTL2",124,0)
 . . S FBEDIT=$O(FBADJ(" "),-1)+1
"RTN","FBUTL2",125,0)
 . . S $P(FBADJ(FBEDIT),U)=FBADJR,FBCNT=FBCNT+1
"RTN","FBUTL2",126,0)
 . ;
"RTN","FBUTL2",127,0)
 . ; ask for adjustment group
"RTN","FBUTL2",128,0)
 . S DIR(0)="162.558,1"
"RTN","FBUTL2",129,0)
 . ;S DIR(0)="P^161.92:EMZ"
"RTN","FBUTL2",130,0)
 . ;S DIR("S")="I $P($$AG^FBUTL1(Y,,FBDT),U,4)=1"
"RTN","FBUTL2",131,0)
 . ;S DIR("A")="  ADJUSTMENT GROUP"
"RTN","FBUTL2",132,0)
 . I $P(FBADJ(FBEDIT),U,2)]"" S DIR("B")=$P($G(^FB(161.92,$P(FBADJ(FBEDIT),U,2),0)),U)
"RTN","FBUTL2",133,0)
 . D ^DIR K DIR I $D(DIRUT) D:FBNEW DEL(FBEDIT) Q
"RTN","FBUTL2",134,0)
 . S $P(FBADJ(FBEDIT),U,2)=+Y
"RTN","FBUTL2",135,0)
 . ;
"RTN","FBUTL2",136,0)
 . ; ask for adjustment amount
"RTN","FBUTL2",137,0)
 . S DIR(0)="162.558,2"
"RTN","FBUTL2",138,0)
 . ;S DIR(0)="NA^-9999999.99:9999999.99:2^K:+X=0 X"
"RTN","FBUTL2",139,0)
 . ;S DIR("A")="  ADJUSTMENT AMOUNT: "
"RTN","FBUTL2",140,0)
 . S DIR("B")=$FN(FBTAS-FBCAS+$P(FBADJ(FBEDIT),U,3),"",2)
"RTN","FBUTL2",141,0)
 . D ^DIR K DIR I $D(DIRUT) D:FBNEW DEL(FBEDIT) Q
"RTN","FBUTL2",142,0)
 . S FBCAS=FBCAS-$P($G(FBADJ(FBEDIT)),U,3)+Y
"RTN","FBUTL2",143,0)
 . S $P(FBADJ(FBEDIT),U,3)=+Y
"RTN","FBUTL2",144,0)
 ;
"RTN","FBUTL2",145,0)
VAL ; validate
"RTN","FBUTL2",146,0)
 S FBERR=0
"RTN","FBUTL2",147,0)
 I FBCAS'=FBTAS D
"RTN","FBUTL2",148,0)
 . S FBERR=1
"RTN","FBUTL2",149,0)
 . W !,$C(7),"ERROR: Must account for $",$FN(FBTAS-FBCAS,"",2)," more to cover the total amount suspended."
"RTN","FBUTL2",150,0)
 . W !,"   The current sum of adjustments is $",$FN(FBCAS,"",2),"."
"RTN","FBUTL2",151,0)
 . W !,"   The total amount suspended is $",$FN(FBTAS,"",2),"."
"RTN","FBUTL2",152,0)
 I FBCNT>FBMAX D
"RTN","FBUTL2",153,0)
 . S FBERR=1
"RTN","FBUTL2",154,0)
 . W !,$C(7),"ERROR: Maximum number of adjustment reasons (",FBMAX,") have been exceeded."
"RTN","FBUTL2",155,0)
 I FBERR G ASKADJ
"RTN","FBUTL2",156,0)
 ;
"RTN","FBUTL2",157,0)
EXIT ;
"RTN","FBUTL2",158,0)
 ; if time-out or uparrow and total amount not covered then check if
"RTN","FBUTL2",159,0)
 ; exit is allowed by the calling routine. (not allowed during edit)
"RTN","FBUTL2",160,0)
 I FBRET=0,FBNOOUT S FBRET=1 I FBTAS'=FBCAS G VAL
"RTN","FBUTL2",161,0)
 I FBRET=0 K FBADJ
"RTN","FBUTL2",162,0)
 ;
"RTN","FBUTL2",163,0)
 Q FBRET
"RTN","FBUTL2",164,0)
 ;
"RTN","FBUTL2",165,0)
DEL(FBI) ; delete adjustment reason from list
"RTN","FBUTL2",166,0)
 S FBCAS=FBCAS-$P($G(FBADJ(FBI)),U,3)
"RTN","FBUTL2",167,0)
 S FBCNT=FBCNT-1
"RTN","FBUTL2",168,0)
 K FBADJ(FBI)
"RTN","FBUTL2",169,0)
 S FBADJR=""
"RTN","FBUTL2",170,0)
 W "   (reason deleted)"
"RTN","FBUTL2",171,0)
 Q
"RTN","FBUTL2",172,0)
 ;
"RTN","FBUTL2",173,0)
ADJL(FBADJ) ; build list of adjustments extrinsic function
"RTN","FBUTL2",174,0)
 ; Input
"RTN","FBUTL2",175,0)
 ;   FBADJ  - required, array passed by reference
"RTN","FBUTL2",176,0)
 ;            array adjustments
"RTN","FBUTL2",177,0)
 ;            format
"RTN","FBUTL2",178,0)
 ;              FBADJ(#)=FBADJR^FBADJG^FBADJA
"RTN","FBUTL2",179,0)
 ;            where
"RTN","FBUTL2",180,0)
 ;              # = integer number greater than 0
"RTN","FBUTL2",181,0)
 ;              FBADJR = adjustment reason (internal value file 162.91)
"RTN","FBUTL2",182,0)
 ;              FBADJG = adjustment group (inernal value file 162.92)
"RTN","FBUTL2",183,0)
 ;              FBADJA = adjustment amount (dollar value)
"RTN","FBUTL2",184,0)
 ; Result
"RTN","FBUTL2",185,0)
 ;   string containing sorted list (by external reason) of adjustments
"RTN","FBUTL2",186,0)
 ;   format
"RTN","FBUTL2",187,0)
 ;      FBADJRE 1^FBADJGE 1^FBADJAE 1^FBADJRE 2^FBADJGE 2^FBADJAE 2
"RTN","FBUTL2",188,0)
 ;   where
"RTN","FBUTL2",189,0)
 ;      FBADJRE = adjustment reason (external value)
"RTN","FBUTL2",190,0)
 ;      FBADJGE = adjustment group (external value)
"RTN","FBUTL2",191,0)
 ;      FBADJAE = adjustment amount (with cents)
"RTN","FBUTL2",192,0)
 N FBRET
"RTN","FBUTL2",193,0)
 N FBARJR,FBADJRE,FBADJG,FBADJGE,FBADJA,FBADJAE
"RTN","FBUTL2",194,0)
 N FBI,FBADJS
"RTN","FBUTL2",195,0)
 S FBRET=""
"RTN","FBUTL2",196,0)
 ;
"RTN","FBUTL2",197,0)
 ; build sorted array containing external values
"RTN","FBUTL2",198,0)
 S FBI=0 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBUTL2",199,0)
 . ; obtain internal values
"RTN","FBUTL2",200,0)
 . S FBADJR=$P(FBADJ(FBI),U)
"RTN","FBUTL2",201,0)
 . S FBADJG=$P(FBADJ(FBI),U,2)
"RTN","FBUTL2",202,0)
 . S FBADJA=$P(FBADJ(FBI),U,3)
"RTN","FBUTL2",203,0)
 . ; convert to external values
"RTN","FBUTL2",204,0)
 . S FBADJRE=$S(FBADJR:$P($G(^FB(161.91,FBADJR,0)),U),1:"")
"RTN","FBUTL2",205,0)
 . S FBADJGE=$S(FBADJG:$P($G(^FB(161.92,FBADJG,0)),U),1:"")
"RTN","FBUTL2",206,0)
 . S FBADJAE=$FN(FBADJA,"",2)
"RTN","FBUTL2",207,0)
 . ; store in sorted array
"RTN","FBUTL2",208,0)
 . S FBADJS(FBADJRE_U_FBI)=FBADJRE_U_FBADJGE_U_FBADJAE_U
"RTN","FBUTL2",209,0)
 ;
"RTN","FBUTL2",210,0)
 ; build list from sorted array
"RTN","FBUTL2",211,0)
 S FBI="" F  S FBI=$O(FBADJS(FBI)) Q:FBI=""  D
"RTN","FBUTL2",212,0)
 . S FBRET=FBRET_FBADJS(FBI)
"RTN","FBUTL2",213,0)
 ; strip trailing "^" from list
"RTN","FBUTL2",214,0)
 I $E(FBRET,$L(FBRET))="^" S FBRET=$E(FBRET,1,$L(FBRET)-1)
"RTN","FBUTL2",215,0)
 ;
"RTN","FBUTL2",216,0)
 Q FBRET
"RTN","FBUTL2",217,0)
 ;
"RTN","FBUTL2",218,0)
ADJLR(FBADJL) ; build list of adjustment reasons extrinsic function
"RTN","FBUTL2",219,0)
 ; Input
"RTN","FBUTL2",220,0)
 ;   FBADJL - required, string containing sorted list
"RTN","FBUTL2",221,0)
 ;           (by external reason) of adjustments (see $$ADJL result)
"RTN","FBUTL2",222,0)
 ; Result
"RTN","FBUTL2",223,0)
 ;   sting of adjustment reasons delimited by commas
"RTN","FBUTL2",224,0)
 ;
"RTN","FBUTL2",225,0)
 N FBRET,FBADJRE
"RTN","FBUTL2",226,0)
 N FBI
"RTN","FBUTL2",227,0)
 S FBRET=""
"RTN","FBUTL2",228,0)
 F FBI=1:3 S FBADJRE=$P(FBADJL,U,FBI) Q:FBADJRE=""  S FBRET=FBRET_FBADJRE_","
"RTN","FBUTL2",229,0)
 ; strip trailing "," from list
"RTN","FBUTL2",230,0)
 I $E(FBRET,$L(FBRET))="," S FBRET=$E(FBRET,1,$L(FBRET)-1)
"RTN","FBUTL2",231,0)
 ;
"RTN","FBUTL2",232,0)
 Q FBRET
"RTN","FBUTL2",233,0)
 ;
"RTN","FBUTL2",234,0)
ADJLA(FBADJL) ; build list of adjustment amounts extrinsic function
"RTN","FBUTL2",235,0)
 ; Input
"RTN","FBUTL2",236,0)
 ;   FBADJL - required, string containing sorted list
"RTN","FBUTL2",237,0)
 ;           (by external reason) of adjustments (see $$ADJL result)
"RTN","FBUTL2",238,0)
 ; Result
"RTN","FBUTL2",239,0)
 ;   sting of adjustment reasons delimited by commas
"RTN","FBUTL2",240,0)
 ;
"RTN","FBUTL2",241,0)
 N FBRET,FBADJRE
"RTN","FBUTL2",242,0)
 N FBI
"RTN","FBUTL2",243,0)
 S FBRET=""
"RTN","FBUTL2",244,0)
 F FBI=3:3 S FBADJRE=$P(FBADJL,U,FBI) Q:FBADJRE=""  S FBRET=FBRET_FBADJRE_","
"RTN","FBUTL2",245,0)
 ; strip trailing "," from list
"RTN","FBUTL2",246,0)
 I $E(FBRET,$L(FBRET))="," S FBRET=$E(FBRET,1,$L(FBRET)-1)
"RTN","FBUTL2",247,0)
 ;
"RTN","FBUTL2",248,0)
 Q FBRET
"RTN","FBUTL2",249,0)
 ;
"RTN","FBUTL2",250,0)
 ;FBUTL2
"RTN","FBUTL3")
0^3^B3110311
"RTN","FBUTL3",1,0)
FBUTL3 ;WOIFO/SAB-FEE BASIS UTILITY ;6/19/2003
"RTN","FBUTL3",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBUTL3",3,0)
 Q
"RTN","FBUTL3",4,0)
ARCDES ; Adjustment Reason Current Description Identifier
"RTN","FBUTL3",5,0)
 ; Called by File 161.91 "CDES" Write Identifier
"RTN","FBUTL3",6,0)
 N FBFMT,FBI,FBARTXT,FBX
"RTN","FBUTL3",7,0)
 N DIWF,DIWL,DIWR,X
"RTN","FBUTL3",8,0)
 ;
"RTN","FBUTL3",9,0)
 ; get current description
"RTN","FBUTL3",10,0)
 S FBX=$$AR^FBUTL1(Y,,,"FBARTXT")
"RTN","FBUTL3",11,0)
 I '$O(FBARTXT(0)) Q  ; no description found
"RTN","FBUTL3",12,0)
 ;
"RTN","FBUTL3",13,0)
 ; reformat text into 50 character width
"RTN","FBUTL3",14,0)
 K ^UTILITY($J,"W")
"RTN","FBUTL3",15,0)
 S DIWL=1,DIWR=50,DIWF=""
"RTN","FBUTL3",16,0)
 S FBI=0 F  S FBI=$O(FBARTXT(FBI)) Q:'FBI  S X=FBARTXT(FBI) D ^DIWP
"RTN","FBUTL3",17,0)
 ;
"RTN","FBUTL3",18,0)
 ;  'display' idenitifer using EN^DDIOL
"RTN","FBUTL3",19,0)
 S FBI=0 F  S FBI=$O(^UTILITY($J,"W",DIWL,FBI)) Q:'FBI  D
"RTN","FBUTL3",20,0)
 . S FBFMT=$S(FBI=1:"?15",1:"!?15")
"RTN","FBUTL3",21,0)
 . S FBX=$G(^UTILITY($J,"W",DIWL,FBI,0))
"RTN","FBUTL3",22,0)
 . D EN^DDIOL(FBX,,FBFMT)
"RTN","FBUTL3",23,0)
 ;
"RTN","FBUTL3",24,0)
 ; cleanup
"RTN","FBUTL3",25,0)
 K ^UTILITY($J,"W")
"RTN","FBUTL3",26,0)
 Q
"RTN","FBUTL3",27,0)
 ;
"RTN","FBUTL3",28,0)
AGCDN ; Adjustment Group Current Descriptive Name Identifier
"RTN","FBUTL3",29,0)
 ; Called by File 161.92 "CDN" Write Identifier
"RTN","FBUTL3",30,0)
 N FBX
"RTN","FBUTL3",31,0)
 ;
"RTN","FBUTL3",32,0)
 ; get current descriptive name
"RTN","FBUTL3",33,0)
 S FBX=$$AG^FBUTL1(Y)
"RTN","FBUTL3",34,0)
 ;
"RTN","FBUTL3",35,0)
 ; 'display' using EN^DDIOL
"RTN","FBUTL3",36,0)
 I $P(FBX,U,5)]"" D EN^DDIOL($P(FBX,U,5),,"?15")
"RTN","FBUTL3",37,0)
 ;
"RTN","FBUTL3",38,0)
 Q
"RTN","FBUTL3",39,0)
 ;
"RTN","FBUTL3",40,0)
RRCDES ; Remittance Remarks Current Description Identifier
"RTN","FBUTL3",41,0)
 ; Called by File 161.93 "CDES" Write Identifier
"RTN","FBUTL3",42,0)
 N FBFMT,FBI,FBRRTXT,FBX
"RTN","FBUTL3",43,0)
 N DIWF,DIWL,DIWR,X
"RTN","FBUTL3",44,0)
 ;
"RTN","FBUTL3",45,0)
 ; get current description
"RTN","FBUTL3",46,0)
 S FBX=$$RR^FBUTL1(Y,,,"FBRRTXT")
"RTN","FBUTL3",47,0)
 I '$O(FBRRTXT(0)) Q  ; no description found
"RTN","FBUTL3",48,0)
 ;
"RTN","FBUTL3",49,0)
 ; reformat text into 50 character width
"RTN","FBUTL3",50,0)
 K ^UTILITY($J,"W")
"RTN","FBUTL3",51,0)
 S DIWL=1,DIWR=50,DIWF=""
"RTN","FBUTL3",52,0)
 S FBI=0 F  S FBI=$O(FBRRTXT(FBI)) Q:'FBI  S X=FBRRTXT(FBI) D ^DIWP
"RTN","FBUTL3",53,0)
 ;
"RTN","FBUTL3",54,0)
 ;  'display' idenitifer using EN^DDIOL
"RTN","FBUTL3",55,0)
 S FBI=0 F  S FBI=$O(^UTILITY($J,"W",DIWL,FBI)) Q:'FBI  D
"RTN","FBUTL3",56,0)
 . S FBFMT=$S(FBI=1:"?15",1:"!?15")
"RTN","FBUTL3",57,0)
 . S FBX=$G(^UTILITY($J,"W",DIWL,FBI,0))
"RTN","FBUTL3",58,0)
 . D EN^DDIOL(FBX,,FBFMT)
"RTN","FBUTL3",59,0)
 ;
"RTN","FBUTL3",60,0)
 ; cleanup
"RTN","FBUTL3",61,0)
 K ^UTILITY($J,"W")
"RTN","FBUTL3",62,0)
 Q
"RTN","FBUTL3",63,0)
 ;
"RTN","FBUTL3",64,0)
 ;FBUTL3
"RTN","FBUTL4")
0^4^B23579110
"RTN","FBUTL4",1,0)
FBUTL4 ;WOIFO/SAB-FEE BASIS UTILITY ;7/6/2003
"RTN","FBUTL4",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBUTL4",3,0)
 Q
"RTN","FBUTL4",4,0)
RR(FBRRMK,FBMAX,FBDT,FBRRMKD) ; Prompt for Remittance Remarks
"RTN","FBUTL4",5,0)
 ;
"RTN","FBUTL4",6,0)
 ; Input
"RTN","FBUTL4",7,0)
 ;   FBRRMK - required, array passed by reference
"RTN","FBUTL4",8,0)
 ;            will be initialized (killed)
"RTN","FBUTL4",9,0)
 ;            array of any entered remark codes
"RTN","FBUTL4",10,0)
 ;            format
"RTN","FBUTL4",11,0)
 ;              FBRRMK(#)=FBRRMKC
"RTN","FBUTL4",12,0)
 ;            where
"RTN","FBUTL4",13,0)
 ;              # = sequentially assigned number starting with 1
"RTN","FBUTL4",14,0)
 ;              FBRRMKC = remittance remark (internal value file 162.93)
"RTN","FBUTL4",15,0)
 ;   FBMAX  -  optional, number, default to 2
"RTN","FBUTL4",16,0)
 ;             maximum number of remarks that may be entered by user
"RTN","FBUTL4",17,0)
 ;   FBDT   -  optional, effective date, FileMan internal format
"RTN","FBUTL4",18,0)
 ;             default to current date, used to determine available codes
"RTN","FBUTL4",19,0)
 ;   FBRRMKD-  optional, array passed by reference
"RTN","FBUTL4",20,0)
 ;             same format as FBRRMK
"RTN","FBUTL4",21,0)
 ;             if passed, it will be used to supply default values
"RTN","FBUTL4",22,0)
 ;             normally only used when editing an existing payment 
"RTN","FBUTL4",23,0)
 ; Result (value of $$RR extrinsic function)
"RTN","FBUTL4",24,0)
 ;   FBRET  - boulean value (0 or 1)
"RTN","FBUTL4",25,0)
 ;             = 1 when process did not end due to time-out or "^"
"RTN","FBUTL4",26,0)
 ;             = 0 when process ended due to time-out OR "^"
"RTN","FBUTL4",27,0)
 ; Output
"RTN","FBUTL4",28,0)
 ;   FBRRMK-  the FBRRMK input array passed by reference will be modified
"RTN","FBUTL4",29,0)
 ;            it will contain any entered remarks
"RTN","FBUTL4",30,0)
 ;
"RTN","FBUTL4",31,0)
 N FBRRMKC,FBCNT,FBEDIT,FBERR,FBI,FBNEW,FBRET
"RTN","FBUTL4",32,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL4",33,0)
 S FBRET=1
"RTN","FBUTL4",34,0)
 S FBMAX=$G(FBMAX,2)
"RTN","FBUTL4",35,0)
 S FBDT=$G(FBDT,DT)
"RTN","FBUTL4",36,0)
 K FBRRMK
"RTN","FBUTL4",37,0)
 ;
"RTN","FBUTL4",38,0)
 ; if default remarks exist then load them into array
"RTN","FBUTL4",39,0)
 I $D(FBRRMKD) M FBRRMK=FBRRMKD
"RTN","FBUTL4",40,0)
 S FBCNT=0
"RTN","FBUTL4",41,0)
 I $D(FBRRMK) S FBI=0 F  S FBI=$O(FBRRMK(FBI)) Q:'FBI  S FBCNT=FBCNT+1
"RTN","FBUTL4",42,0)
 ;
"RTN","FBUTL4",43,0)
ASKRR ; multiply prompt for remarks
"RTN","FBUTL4",44,0)
 ;
"RTN","FBUTL4",45,0)
 ; display current list of remarks when more than 1 allowed
"RTN","FBUTL4",46,0)
 I FBMAX>1!(FBCNT>1) D
"RTN","FBUTL4",47,0)
 . W !!,"Current list of Remittance Remarks: "
"RTN","FBUTL4",48,0)
 . I '$O(FBRRMK(0)) W "none"
"RTN","FBUTL4",49,0)
 . S FBI=0 F  S FBI=$O(FBRRMK(FBI)) Q:'FBI  D
"RTN","FBUTL4",50,0)
 . . W:$P(FBRRMK(FBI),U)]"" $P($G(^FB(161.93,$P(FBRRMK(FBI),U),0)),U),", "
"RTN","FBUTL4",51,0)
 . W !
"RTN","FBUTL4",52,0)
 ;
"RTN","FBUTL4",53,0)
 ; prompt for remark
"RTN","FBUTL4",54,0)
 ;   if max is 1 and reason already on list then automatically select it
"RTN","FBUTL4",55,0)
 I FBMAX=1,FBCNT=1 D
"RTN","FBUTL4",56,0)
 . N FBI,FBRRMKC
"RTN","FBUTL4",57,0)
 . S FBI=$O(FBRRMK(0))
"RTN","FBUTL4",58,0)
 . S:FBI FBRRMKC=$P(FBRRMK(FBI),U)
"RTN","FBUTL4",59,0)
 . I FBRRMKC S Y=FBRRMKC_U_$P($G(^FB(161.93,FBRRMKC,0)),U)
"RTN","FBUTL4",60,0)
 E  D  I $D(DTOUT)!$D(DUOUT) S FBRET=0 G EXIT  ; prompt user
"RTN","FBUTL4",61,0)
 . S DIR(0)="PO^161.93:EMZ"
"RTN","FBUTL4",62,0)
 . S DIR("A")="Select REMITTANCE REMARK"
"RTN","FBUTL4",63,0)
 . S DIR("S")="I $P($$RR^FBUTL1(Y,,FBDT),U,4)=1"
"RTN","FBUTL4",64,0)
 . S DIR("?")="Select a HIPAA Remittance Remark Code."
"RTN","FBUTL4",65,0)
 . S DIR("?",1)="Select a remittance remark code to provide non-financial"
"RTN","FBUTL4",66,0)
 . S DIR("?",2)="information critical to understanding the adjudication of the claim."
"RTN","FBUTL4",67,0)
 . D ^DIR K DIR
"RTN","FBUTL4",68,0)
 ;
"RTN","FBUTL4",69,0)
 ; if value was entered then process it and ask another if not max
"RTN","FBUTL4",70,0)
 ;I +Y>0 D  G:FBRET=0 EXIT I FBCNT<FBMAX!(FBRRMKC="") G ASKRR
"RTN","FBUTL4",71,0)
 I +Y>0 D  G:FBRET=0 EXIT G ASKRR
"RTN","FBUTL4",72,0)
 . S FBRRMKC=+Y
"RTN","FBUTL4",73,0)
 . ; if specified remark already in list set FBEDIT = it's number
"RTN","FBUTL4",74,0)
 . S (FBI,FBEDIT)=0 F  S FBI=$O(FBRRMK(FBI)) Q:'FBI  D  Q:FBEDIT
"RTN","FBUTL4",75,0)
 . . I $P(FBRRMK(FBI),U)=FBRRMKC S FBEDIT=FBI
"RTN","FBUTL4",76,0)
 . S FBNEW=$S(FBEDIT:0,1:1) ; flag as new if not on list
"RTN","FBUTL4",77,0)
 . ; if in list then edit the existing remark
"RTN","FBUTL4",78,0)
 . I FBEDIT D  Q:$D(DIRUT)  Q:FBRRMKC=""
"RTN","FBUTL4",79,0)
 . . S DIR(0)="162.559,.01"
"RTN","FBUTL4",80,0)
 . . S DIR("B")=$P($G(^FB(161.93,FBRRMKC,0)),U)
"RTN","FBUTL4",81,0)
 . . D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S:FBMAX=1 FBRET=0 Q
"RTN","FBUTL4",82,0)
 . . I X="@" D  Q  ; "@" removes from list
"RTN","FBUTL4",83,0)
 . . . D DEL(FBEDIT)
"RTN","FBUTL4",84,0)
 . . I +Y>0 S FBRRMKC=+Y
"RTN","FBUTL4",85,0)
 . . ; ensure new value of edited remark is not already on list
"RTN","FBUTL4",86,0)
 . . S FBI=0 F  S FBI=$O(FBRRMK(FBI)) Q:'FBI  D  Q:FBRRMKC=""
"RTN","FBUTL4",87,0)
 . . . I $P(FBRRMK(FBI),U)=FBRRMKC,FBI'=FBEDIT S FBRRMKC="" W !,$C(7),"     Change was not accepted because the new value is already on the list."
"RTN","FBUTL4",88,0)
 . . Q:FBRRMKC=""
"RTN","FBUTL4",89,0)
 . . ; upate the existing reason
"RTN","FBUTL4",90,0)
 . . S $P(FBRRMK(FBEDIT),U)=FBRRMKC
"RTN","FBUTL4",91,0)
 . ;
"RTN","FBUTL4",92,0)
 . ; if new reason then add to list
"RTN","FBUTL4",93,0)
 . I 'FBEDIT D  Q:FBRRMKC=""
"RTN","FBUTL4",94,0)
 . . I (FBCNT+1)>FBMAX D  Q
"RTN","FBUTL4",95,0)
 . . . S FBRRMKC=""
"RTN","FBUTL4",96,0)
 . . . W !!,$C(7),"ERROR: A new reason would exceed maximum number (",FBMAX,") allowed for this invoice."
"RTN","FBUTL4",97,0)
 . . . W !,"  If necessary, a code on the current list can be selected and changed."
"RTN","FBUTL4",98,0)
 . . S FBEDIT=$O(FBRRMK(" "),-1)+1
"RTN","FBUTL4",99,0)
 . . S $P(FBRRMK(FBEDIT),U)=FBRRMKC,FBCNT=FBCNT+1
"RTN","FBUTL4",100,0)
 ;
"RTN","FBUTL4",101,0)
 ; validate
"RTN","FBUTL4",102,0)
 I FBCNT>FBMAX D  G ASKRR
"RTN","FBUTL4",103,0)
 . W !!,$C(7),"ERROR: Maximum number of remittance remark codes (",FBMAX,") have been exceeded."
"RTN","FBUTL4",104,0)
 ;
"RTN","FBUTL4",105,0)
EXIT ;
"RTN","FBUTL4",106,0)
 Q FBRET
"RTN","FBUTL4",107,0)
 ;
"RTN","FBUTL4",108,0)
DEL(FBI) ; delete remark from list
"RTN","FBUTL4",109,0)
 S FBCNT=FBCNT-1
"RTN","FBUTL4",110,0)
 K FBRRMK(FBI)
"RTN","FBUTL4",111,0)
 S FBRRMKC=""
"RTN","FBUTL4",112,0)
 W "   (deleted)"
"RTN","FBUTL4",113,0)
 Q
"RTN","FBUTL4",114,0)
 ;
"RTN","FBUTL4",115,0)
RRL(FBRRMK) ; build list of remittance remarks extrinsic function
"RTN","FBUTL4",116,0)
 ; Input
"RTN","FBUTL4",117,0)
 ;   FBRRMK- required, array passed by reference
"RTN","FBUTL4",118,0)
 ;           array of remittance remarks
"RTN","FBUTL4",119,0)
 ;            format
"RTN","FBUTL4",120,0)
 ;              FBRRMK(#)=FBRRMKC
"RTN","FBUTL4",121,0)
 ;            where
"RTN","FBUTL4",122,0)
 ;              # = integer number greater than 0
"RTN","FBUTL4",123,0)
 ;              FBRRMKC = remittance remark (internal value file 162.93)
"RTN","FBUTL4",124,0)
 ; Result
"RTN","FBUTL4",125,0)
 ;   string containing sorted list (by external code) of remarks
"RTN","FBUTL4",126,0)
 ;   format
"RTN","FBUTL4",127,0)
 ;      FBRRMKCE 1, FBRRMKCE 2
"RTN","FBUTL4",128,0)
 ;   where
"RTN","FBUTL4",129,0)
 ;      FBRRMKCE = remittance remark code (external value)
"RTN","FBUTL4",130,0)
 N FBRET
"RTN","FBUTL4",131,0)
 N FBRRMKC,FBRRMKCE
"RTN","FBUTL4",132,0)
 N FBRRMKS,FBI
"RTN","FBUTL4",133,0)
 S FBRET=""
"RTN","FBUTL4",134,0)
 ;
"RTN","FBUTL4",135,0)
 ; build sorted array containing external values
"RTN","FBUTL4",136,0)
 S FBI=0 F  S FBI=$O(FBRRMK(FBI)) Q:'FBI  D
"RTN","FBUTL4",137,0)
 . ; obtain internal values
"RTN","FBUTL4",138,0)
 . S FBRRMKC=$P(FBRRMK(FBI),U)
"RTN","FBUTL4",139,0)
 . ; convert to external values
"RTN","FBUTL4",140,0)
 . S FBRRMKCE=$S(FBRRMKC:$P($G(^FB(161.93,FBRRMKC,0)),U),1:"")
"RTN","FBUTL4",141,0)
 . ; store in sorted array
"RTN","FBUTL4",142,0)
 . S FBRRMKS(FBRRMKCE_U_FBI)=FBRRMKCE_","
"RTN","FBUTL4",143,0)
 ;
"RTN","FBUTL4",144,0)
 ; build list from sorted array
"RTN","FBUTL4",145,0)
 S FBI="" F  S FBI=$O(FBRRMKS(FBI)) Q:FBI=""  D
"RTN","FBUTL4",146,0)
 . S FBRET=FBRET_FBRRMKS(FBI)
"RTN","FBUTL4",147,0)
 ; strip trailing "," from list
"RTN","FBUTL4",148,0)
 I $E(FBRET,$L(FBRET))="," S FBRET=$E(FBRET,1,$L(FBRET)-1)
"RTN","FBUTL4",149,0)
 ;
"RTN","FBUTL4",150,0)
 Q FBRET
"RTN","FBUTL4",151,0)
 ;
"RTN","FBUTL4",152,0)
 ;FBUTL4
"RTN","FBUTL5")
0^6^B18887718
"RTN","FBUTL5",1,0)
FBUTL5 ;WOIFO/SAB-FEE BASIS UTILITY ;7/6/2003
"RTN","FBUTL5",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBUTL5",3,0)
 Q
"RTN","FBUTL5",4,0)
FPPSC(FBEDIT,FBFPPSC) ; Prompt EDI Claim and FPPS Claim ID Extrinsic Function
"RTN","FBUTL5",5,0)
 ; Input
"RTN","FBUTL5",6,0)
 ;   FBEDIT  - optional, true (=1) when editing an existing item
"RTN","FBUTL5",7,0)
 ;   FBFPPSC - optional, current value of FPPS CLAIM ID
"RTN","FBUTL5",8,0)
 ;             only passed when editing an existing item
"RTN","FBUTL5",9,0)
 ; Return value (FBRET)
"RTN","FBUTL5",10,0)
 ;   = FPPS CLAIM ID if EDI Claim
"RTN","FBUTL5",11,0)
 ;   = null if not EDI Claim
"RTN","FBUTL5",12,0)
 ;   = -1 if time-out or '^'
"RTN","FBUTL5",13,0)
 ;
"RTN","FBUTL5",14,0)
 N FBEDI,FBRET
"RTN","FBUTL5",15,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",16,0)
 S FBRET=""
"RTN","FBUTL5",17,0)
 ;
"RTN","FBUTL5",18,0)
ASKEDI ; ask if claim is an EDI claim
"RTN","FBUTL5",19,0)
 S DIR(0)="Y"
"RTN","FBUTL5",20,0)
 S DIR("A")="Is this an EDI Claim from the FPPS system"
"RTN","FBUTL5",21,0)
 I $G(FBEDIT) S DIR("B")=$S($G(FBFPPSC)]"":"YES",1:"NO")
"RTN","FBUTL5",22,0)
 D ^DIR K DIR I $D(DIRUT) S FBRET=-1 G FPPSCX
"RTN","FBUTL5",23,0)
 S FBEDI=Y
"RTN","FBUTL5",24,0)
 ;
"RTN","FBUTL5",25,0)
ASKID ; If EDI then ask claim ID
"RTN","FBUTL5",26,0)
 I FBEDI D  I $D(DTOUT)!$D(DUOUT) S FBRET=-1 G FPPSCX
"RTN","FBUTL5",27,0)
 . N DA
"RTN","FBUTL5",28,0)
 . S DIR(0)="162.7,32"
"RTN","FBUTL5",29,0)
 . I $G(FBFPPSC)]"" S DIR("B")=FBFPPSC
"RTN","FBUTL5",30,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBUTL5",31,0)
 . S FBRET=Y
"RTN","FBUTL5",32,0)
 ;
"RTN","FBUTL5",33,0)
 ; If EDI and claim ID not entered then reask
"RTN","FBUTL5",34,0)
 I FBEDI,FBRET="" D  G ASKEDI
"RTN","FBUTL5",35,0)
 . W $C(7),!,"  The FPPS CLAIM ID must be entered for EDI claims!"
"RTN","FBUTL5",36,0)
 ;
"RTN","FBUTL5",37,0)
FPPSCX ; FPPSC Exit
"RTN","FBUTL5",38,0)
 Q FBRET
"RTN","FBUTL5",39,0)
 ;
"RTN","FBUTL5",40,0)
FPPSL(FBFPPSL,FBALL,FBNOOUT) ; Prompt FPPS Line Item Extrinsic Function
"RTN","FBUTL5",41,0)
 ; Input
"RTN","FBUTL5",42,0)
 ;   FBFPPSL -  optional, current value of FPPS LINE ITEM
"RTN","FBUTL5",43,0)
 ;              only passed when editing an existing item
"RTN","FBUTL5",44,0)
 ;   FBALL   -  optional, true (=1) if ALL allowed as input value,
"RTN","FBUTL5",45,0)
 ;              default is false
"RTN","FBUTL5",46,0)
 ;   FBNOOUT -  optional, boolean value, default 0, set =1 if user
"RTN","FBUTL5",47,0)
 ;              should not be allowed to exit using an uparrow
"RTN","FBUTL5",48,0)
 ; Return value (FBRET)
"RTN","FBUTL5",49,0)
 ;   = FPPS LINE ITEM
"RTN","FBUTL5",50,0)
 ;   = -1 if time-out or '^'
"RTN","FBUTL5",51,0)
 ;
"RTN","FBUTL5",52,0)
 N FBRET
"RTN","FBUTL5",53,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",54,0)
 S FBRET=""
"RTN","FBUTL5",55,0)
 S FBNOOUT=$G(FBNOOUT,0)
"RTN","FBUTL5",56,0)
 S FBALL=$G(FBALL,0)
"RTN","FBUTL5",57,0)
 ;
"RTN","FBUTL5",58,0)
ASKLI ; ask line item
"RTN","FBUTL5",59,0)
 I FBALL D  G:FBRET]"" FPPSLX I $D(DIRUT) S FBRET=-1 G FPPSLX
"RTN","FBUTL5",60,0)
 . S FBRET=""
"RTN","FBUTL5",61,0)
 . S DIR(0)="Y"
"RTN","FBUTL5",62,0)
 . S DIR("A")="Does this VistA invoice cover all line items on the FPPS Claim"
"RTN","FBUTL5",63,0)
 . I $G(FBFPPSL)]"" S DIR("B")=$S(FBFPPSL="ALL":"YES",1:"NO")
"RTN","FBUTL5",64,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBUTL5",65,0)
 . I Y S FBRET="ALL"
"RTN","FBUTL5",66,0)
 ;
"RTN","FBUTL5",67,0)
 S DIR(0)="LCA^1:999:0"
"RTN","FBUTL5",68,0)
 S DIR("A")="FPPS LINE ITEM: "
"RTN","FBUTL5",69,0)
 S DIR("?")="This response must be a number or a list or range, e.g., 1,3,5 or 2-4,8."
"RTN","FBUTL5",70,0)
 S DIR("??")="^D LIHLP^FBUTL5"
"RTN","FBUTL5",71,0)
 I $G(FBFPPSL)]"",FBFPPSL'="ALL" S DIR("B")=FBFPPSL
"RTN","FBUTL5",72,0)
 D ^DIR K DIR
"RTN","FBUTL5",73,0)
 I $D(DTOUT)!$D(DUOUT) S FBRET=-1 G FPPSLX
"RTN","FBUTL5",74,0)
 S FBRET=Y
"RTN","FBUTL5",75,0)
 ;
"RTN","FBUTL5",76,0)
FPPSLX ; FPPSL Exit
"RTN","FBUTL5",77,0)
 I FBNOOUT,FBRET=-1 D  G ASKLI
"RTN","FBUTL5",78,0)
 . W !,"'^' NOT ALLOWED"
"RTN","FBUTL5",79,0)
 ; strip trailing comma if any
"RTN","FBUTL5",80,0)
 I $E(FBRET,$L(FBRET))="," S FBRET=$E(FBRET,1,$L(FBRET)-1)
"RTN","FBUTL5",81,0)
 Q FBRET
"RTN","FBUTL5",82,0)
 ;
"RTN","FBUTL5",83,0)
LIHLP ; Line Item ?? Help
"RTN","FBUTL5",84,0)
 W !,"Enter the line item sequence number associated with this charge.  Each"
"RTN","FBUTL5",85,0)
 W !,"charge on the FPPS invoice document will have a line item sequence number"
"RTN","FBUTL5",86,0)
 W !,"associated with it.  A line item can be entered individually or a group of"
"RTN","FBUTL5",87,0)
 W !,"charges from multiple lines can be entered.  If all line items in a group"
"RTN","FBUTL5",88,0)
 W !,"are in numerical sequence, you may enter the first line item sequence"
"RTN","FBUTL5",89,0)
 W !,"number followed by a hyphen and the last line item sequence number.  If"
"RTN","FBUTL5",90,0)
 W !,"the grouped charges are not in sequential order, each line item must be"
"RTN","FBUTL5",91,0)
 W !,"entered individually, followed by a comma."
"RTN","FBUTL5",92,0)
 W !
"RTN","FBUTL5",93,0)
 Q
"RTN","FBUTL5",94,0)
ASKPAN() ; Ask Patient Account Number Extrinsic Function
"RTN","FBUTL5",95,0)
 ; Return value (FBRET)
"RTN","FBUTL5",96,0)
 ;   = PATIENT ACCOUNT NUMBER (if entered)
"RTN","FBUTL5",97,0)
 ;   = null if value not entered
"RTN","FBUTL5",98,0)
 ;   = '^' if time-out or '^'
"RTN","FBUTL5",99,0)
 N FBRET
"RTN","FBUTL5",100,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",101,0)
 S FBRET=""
"RTN","FBUTL5",102,0)
 S DIR(0)="162.03,49"
"RTN","FBUTL5",103,0)
 D ^DIR K DIR
"RTN","FBUTL5",104,0)
 I $D(DTOUT)!$D(DUOUT) S FBRET="^"
"RTN","FBUTL5",105,0)
 I '$D(DIRUT) S FBRET=Y
"RTN","FBUTL5",106,0)
 Q FBRET
"RTN","FBUTL5",107,0)
 ;
"RTN","FBUTL5",108,0)
ASKREVC() ; Ask Revenue Code Extrinsic Function
"RTN","FBUTL5",109,0)
 ; Return value (FBRET)
"RTN","FBUTL5",110,0)
 ;   = REVENUE CODE, internal pointer value (if entered)
"RTN","FBUTL5",111,0)
 ;   = null if value not entered
"RTN","FBUTL5",112,0)
 ;   = '^' if time-out or '^'
"RTN","FBUTL5",113,0)
 N FBRET
"RTN","FBUTL5",114,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",115,0)
 S FBRET=""
"RTN","FBUTL5",116,0)
 S DIR(0)="162.03,48"
"RTN","FBUTL5",117,0)
 D ^DIR K DIR
"RTN","FBUTL5",118,0)
 I $D(DTOUT)!$D(DUOUT) S FBRET="^"
"RTN","FBUTL5",119,0)
 I '$D(DIRUT) S FBRET=+Y
"RTN","FBUTL5",120,0)
 Q FBRET
"RTN","FBUTL5",121,0)
 ;
"RTN","FBUTL5",122,0)
ASKUNITS() ; Ask Units Paid Extrinsic Function
"RTN","FBUTL5",123,0)
 ; Return value (FBRET)
"RTN","FBUTL5",124,0)
 ;   = UNITS PAID (if entered)
"RTN","FBUTL5",125,0)
 ;   = null if value not entered
"RTN","FBUTL5",126,0)
 ;   = '^' if time-out or '^'
"RTN","FBUTL5",127,0)
 N FBRET
"RTN","FBUTL5",128,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",129,0)
 S FBRET=""
"RTN","FBUTL5",130,0)
 S DIR(0)="162.03,47"
"RTN","FBUTL5",131,0)
 S DIR("B")=1
"RTN","FBUTL5",132,0)
 D ^DIR K DIR
"RTN","FBUTL5",133,0)
 I $D(DTOUT)!$D(DUOUT) S FBRET="^"
"RTN","FBUTL5",134,0)
 I '$D(DIRUT) S FBRET=Y
"RTN","FBUTL5",135,0)
 Q FBRET
"RTN","FBUTL5",136,0)
 ;
"RTN","FBUTL5",137,0)
ASKPCN() ; Ask Patient Control Number Extrinsic Function
"RTN","FBUTL5",138,0)
 ; Return value (FBRET)
"RTN","FBUTL5",139,0)
 ;   = PATIENT ACCOUNT NUMBER (if entered)
"RTN","FBUTL5",140,0)
 ;   = null if value not entered
"RTN","FBUTL5",141,0)
 ;   = '^' if time-out or '^'
"RTN","FBUTL5",142,0)
 N FBRET
"RTN","FBUTL5",143,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBUTL5",144,0)
 S FBRET=""
"RTN","FBUTL5",145,0)
 S DIR(0)="162.5,55"
"RTN","FBUTL5",146,0)
 D ^DIR K DIR
"RTN","FBUTL5",147,0)
 I $D(DTOUT)!$D(DUOUT) S FBRET="^"
"RTN","FBUTL5",148,0)
 I '$D(DIRUT) S FBRET=Y
"RTN","FBUTL5",149,0)
 Q FBRET
"RTN","FBUTL5",150,0)
 ;
"RTN","FBUTL5",151,0)
 ;FBUTL5
"RTN","FBXIP61")
0^^B738976
"RTN","FBXIP61",1,0)
FBXIP61 ;WCIOFO/SAB-PATCH INSTALL ROUTINE ;11/25/2003
"RTN","FBXIP61",2,0)
 ;;3.5;FEE BASIS;**61**;JAN 30, 1995
"RTN","FBXIP61",3,0)
 Q
"RTN","FBXIP61",4,0)
 ; THIS INIT ROUTINE IS ONLY NEEDED FOR SITES THAT HAVE INSTALLED
"RTN","FBXIP61",5,0)
 ; TEST v1 of PATCH FB*3.5*61.  IT WILL BE INCLUDED WITH TEST v2.
"RTN","FBXIP61",6,0)
 ; IT WILL NOT BE INCLUDED IN LATER VERSIONS OF THE PATCH
"RTN","FBXIP61",7,0)
 ;
"RTN","FBXIP61",8,0)
PR ; pre-install entry point
"RTN","FBXIP61",9,0)
 ; create KIDS checkpoints with call backs
"RTN","FBXIP61",10,0)
 N FBX,Y
"RTN","FBXIP61",11,0)
 F FBX="KDD" D
"RTN","FBXIP61",12,0)
 . S Y=$$NEWCP^XPDUTL(FBX,FBX_"^FBXIP61")
"RTN","FBXIP61",13,0)
 . I 'Y D BMES^XPDUTL("ERROR Creating "_FBX_" Checkpoint.")
"RTN","FBXIP61",14,0)
 Q
"RTN","FBXIP61",15,0)
 ;
"RTN","FBXIP61",16,0)
KDD ; Kill DD (but leave any data) for File 163.5
"RTN","FBXIP61",17,0)
 N DIU
"RTN","FBXIP61",18,0)
 D BMES^XPDUTL("  Removing current DD definition for file 163.5...")
"RTN","FBXIP61",19,0)
 ;
"RTN","FBXIP61",20,0)
 S DIU="^FBHL(163.5,"
"RTN","FBXIP61",21,0)
 S DIU(0)=""
"RTN","FBXIP61",22,0)
 D EN^DIU2
"RTN","FBXIP61",23,0)
 ;
"RTN","FBXIP61",24,0)
 D MES^XPDUTL("  Done.")
"RTN","FBXIP61",25,0)
 Q
"RTN","FBXIP61",26,0)
 ;
"RTN","FBXIP61",27,0)
 ;FBXIP61
"SEC","^DIC",161.91,161.91,0,"AUDIT")
@
"SEC","^DIC",161.91,161.91,0,"DD")
@
"SEC","^DIC",161.91,161.91,0,"DEL")
@
"SEC","^DIC",161.91,161.91,0,"LAYGO")
@
"SEC","^DIC",161.91,161.91,0,"WR")
@
"SEC","^DIC",161.92,161.92,0,"AUDIT")
@
"SEC","^DIC",161.92,161.92,0,"DD")
@
"SEC","^DIC",161.92,161.92,0,"DEL")
@
"SEC","^DIC",161.92,161.92,0,"LAYGO")
@
"SEC","^DIC",161.92,161.92,0,"RD")

"SEC","^DIC",161.92,161.92,0,"WR")
@
"SEC","^DIC",161.93,161.93,0,"AUDIT")
@
"SEC","^DIC",161.93,161.93,0,"DD")
@
"SEC","^DIC",161.93,161.93,0,"DEL")
@
"SEC","^DIC",161.93,161.93,0,"LAYGO")
@
"SEC","^DIC",161.93,161.93,0,"WR")
@
"SEC","^DIC",163.5,163.5,0,"AUDIT")
@
"SEC","^DIC",163.5,163.5,0,"DD")
@
"SEC","^DIC",163.5,163.5,0,"DEL")
@
"SEC","^DIC",163.5,163.5,0,"LAYGO")
@
"SEC","^DIC",163.5,163.5,0,"WR")
@
"SEC","^DIC",163.7,163.7,0,"AUDIT")
@
"SEC","^DIC",163.7,163.7,0,"DD")
@
"SEC","^DIC",163.7,163.7,0,"DEL")
@
"SEC","^DIC",163.7,163.7,0,"LAYGO")
@
"SEC","^DIC",163.7,163.7,0,"WR")
@
"UP",162,162.03,-3)
162^1
"UP",162,162.03,-2)
162.01^1
"UP",162,162.03,-1)
162.02^1
"UP",162,162.03,0)
162.03
"UP",162,162.07,-4)
162^1
"UP",162,162.07,-3)
162.01^1
"UP",162,162.07,-2)
162.02^1
"UP",162,162.07,-1)
162.03^7
"UP",162,162.07,0)
162.07
"UP",162,162.08,-4)
162^1
"UP",162,162.08,-3)
162.01^1
"UP",162,162.08,-2)
162.02^1
"UP",162,162.08,-1)
162.03^8
"UP",162,162.08,0)
162.08
"UP",162.1,162.11,-1)
162.1^RX
"UP",162.1,162.11,0)
162.11
"UP",162.1,162.14,-2)
162.1^RX
"UP",162.1,162.14,-1)
162.11^4
"UP",162.1,162.14,0)
162.14
"UP",162.1,162.15,-2)
162.1^RX
"UP",162.1,162.15,-1)
162.11^5
"UP",162.1,162.15,0)
162.15
"UP",162.5,162.558,-1)
162.5^8
"UP",162.5,162.558,0)
162.558
"UP",162.5,162.559,-1)
162.5^9
"UP",162.5,162.559,0)
162.559
"UP",163.99,163.991,-1)
163.99^FY
"UP",163.99,163.991,0)
163.991
"VER")
8.0^22
"^DD",161.91,161.91,0)
FIELD^^4^5
"^DD",161.91,161.91,0,"DDA")
N
"^DD",161.91,161.91,0,"DT")
3030618
"^DD",161.91,161.91,0,"ID","CDES")
D ARCDES^FBUTL3
"^DD",161.91,161.91,0,"IX","B",161.91,.01)

"^DD",161.91,161.91,0,"NM","ADJUSTMENT REASON")

"^DD",161.91,161.91,0,"PT",162.07,.01)

"^DD",161.91,161.91,0,"PT",162.14,.01)

"^DD",161.91,161.91,0,"PT",162.558,.01)

"^DD",161.91,161.91,0,"VRPK")
FB
"^DD",161.91,161.91,.01,0)
CODE^RF^^0;1^K:$L(X)>5!($L(X)<1)!'(X'?1P.E) X
"^DD",161.91,161.91,.01,1,0)
^.1
"^DD",161.91,161.91,.01,1,1,0)
161.91^B
"^DD",161.91,161.91,.01,1,1,1)
S ^FB(161.91,"B",$E(X,1,30),DA)=""
"^DD",161.91,161.91,.01,1,1,2)
K ^FB(161.91,"B",$E(X,1,30),DA)
"^DD",161.91,161.91,.01,3)
Answer must be 1-5 characters in length.
"^DD",161.91,161.91,.01,21,0)
^^1^1^3030616^
"^DD",161.91,161.91,.01,21,1,0)
Code value.
"^DD",161.91,161.91,.01,"DT")
3030616
"^DD",161.91,161.91,1,0)
STATUS EFFECTIVE DATE^161.911D^^1;0
"^DD",161.91,161.91,2,0)
DESCRIPTION EFFECTIVE DATE^161.912D^^2;0
"^DD",161.91,161.91,3,0)
ASSOCIATED SUSPEND CODE^P161.27'^FBAA(161.27,^0;2^Q
"^DD",161.91,161.91,3,3)
Select a suspend code that is associated with the adjustment code.
"^DD",161.91,161.91,3,21,0)
^^6^6^3030616^
"^DD",161.91,161.91,3,21,1,0)
This field should be populated for every adjustment code that is currently
"^DD",161.91,161.91,3,21,2,0)
applicable for use on fee claims.  The software will automatically copy
"^DD",161.91,161.91,3,21,3,0)
this value to the SUSPEND CODE field in an invoice file after the 
"^DD",161.91,161.91,3,21,4,0)
adjustment reason code is specified for the invoice.  If more than one 
"^DD",161.91,161.91,3,21,5,0)
adjustment reason is specified, the one with the largest dollar impact
"^DD",161.91,161.91,3,21,6,0)
will be used to determine the suspend code.
"^DD",161.91,161.91,3,"DT")
3030616
"^DD",161.91,161.91,4,0)
SUSPENSION DESCRIPTION^161.914^^4;0
"^DD",161.91,161.911,0)
STATUS EFFECTIVE DATE SUB-FIELD^^2^3
"^DD",161.91,161.911,0,"DT")
3030618
"^DD",161.91,161.911,0,"IX","B",161.911,.01)

"^DD",161.91,161.911,0,"NM","STATUS EFFECTIVE DATE")

"^DD",161.91,161.911,0,"UP")
161.91
"^DD",161.91,161.911,.01,0)
STATUS EFFECTIVE DATE^D^^0;1^S %DT="EX" D ^%DT S X=Y K:3991231<X!(3030601>X) X
"^DD",161.91,161.911,.01,1,0)
^.1
"^DD",161.91,161.911,.01,1,1,0)
161.911^B
"^DD",161.91,161.911,.01,1,1,1)
S ^FB(161.91,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",161.91,161.911,.01,1,1,2)
K ^FB(161.91,DA(1),1,"B",$E(X,1,30),DA)
"^DD",161.91,161.911,.01,3)
TYPE A DATE BETWEEN 6/1/2003 AND 12/31/2099
"^DD",161.91,161.911,.01,21,0)
^.001^1^1^3030618^^^
"^DD",161.91,161.911,.01,21,1,0)
Effective date of status.
"^DD",161.91,161.911,.01,"DT")
3030618
"^DD",161.91,161.911,1,0)
STATUS^S^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",161.91,161.911,1,3)
Specify the status of the code as of the effective date.
"^DD",161.91,161.911,1,21,0)
^^3^3^3030616^
"^DD",161.91,161.911,1,21,1,0)
The status of the claim adjustment reason code as of the effective date.  
"^DD",161.91,161.911,1,21,2,0)
It will be used to prevent inactive codes from being specified during 
"^DD",161.91,161.911,1,21,3,0)
adjudication of a claim.
"^DD",161.91,161.911,1,"DT")
3030616
"^DD",161.91,161.911,2,0)
FEE USE^S^0:NOT APPLICABLE;1:APPLICABLE;^0;3^Q
"^DD",161.91,161.911,2,3)
Specify applicability of use with fee claims as of effective date.
"^DD",161.91,161.911,2,21,0)
^.001^3^3^3030616^^^
"^DD",161.91,161.911,2,21,1,0)
Indicates if code is applicable for use on fee claims as of effective 
"^DD",161.91,161.911,2,21,2,0)
date. (1 applicable or 0 not applicable)  It will be used to prevent 
"^DD",161.91,161.911,2,21,3,0)
inappropriate codes from being specified during adjudication of a claim.
"^DD",161.91,161.911,2,"DT")
3030616
"^DD",161.91,161.912,0)
DESCRIPTION EFFECTIVE DATE SUB-FIELD^^1^2
"^DD",161.91,161.912,0,"DT")
3030618
"^DD",161.91,161.912,0,"IX","B",161.912,.01)

"^DD",161.91,161.912,0,"NM","DESCRIPTION EFFECTIVE DATE")

"^DD",161.91,161.912,0,"UP")
161.91
"^DD",161.91,161.912,.01,0)
DESCRIPTION EFFECTIVE DATE^D^^0;1^S %DT="EX" D ^%DT S X=Y K:3991231<X!(3030601>X) X
"^DD",161.91,161.912,.01,1,0)
^.1
"^DD",161.91,161.912,.01,1,1,0)
161.912^B
"^DD",161.91,161.912,.01,1,1,1)
S ^FB(161.91,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",161.91,161.912,.01,1,1,2)
K ^FB(161.91,DA(1),2,"B",$E(X,1,30),DA)
"^DD",161.91,161.912,.01,3)
TYPE A DATE BETWEEN 6/1/2003 AND 12/31/2099
"^DD",161.91,161.912,.01,21,0)
^.001^1^1^3030618^^
"^DD",161.91,161.912,.01,21,1,0)
Effective date of description.
"^DD",161.91,161.912,.01,"DT")
3030618
"^DD",161.91,161.912,1,0)
DESCRIPTION^161.9121^^D;0
"^DD",161.91,161.9121,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",161.91,161.9121,0,"DT")
3030616
"^DD",161.91,161.9121,0,"NM","DESCRIPTION")

"^DD",161.91,161.9121,0,"UP")
161.912
"^DD",161.91,161.9121,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",161.91,161.9121,.01,3)
Enter the description of the adjustment reason code as of the effective date.
"^DD",161.91,161.9121,.01,21,0)
^^2^2^3030616^
"^DD",161.91,161.9121,.01,21,1,0)
The description of the adjustment reason code as of the effective date.  
"^DD",161.91,161.9121,.01,21,2,0)
It will be used to display a description of the code.
"^DD",161.91,161.9121,.01,"DT")
3030616
"^DD",161.91,161.914,0)
SUSPENSION DESCRIPTION SUB-FIELD^^.01^1
"^DD",161.91,161.914,0,"DT")
3030616
"^DD",161.91,161.914,0,"NM","SUSPENSION DESCRIPTION")

"^DD",161.91,161.914,0,"UP")
161.91
"^DD",161.91,161.914,.01,0)
SUSPENSION DESCRIPTION^W^^0;1^Q
"^DD",161.91,161.914,.01,3)
Enter description of suspension when associated suspend code is Other.
"^DD",161.91,161.914,.01,21,0)
^^3^3^3030616^
"^DD",161.91,161.914,.01,21,1,0)
This field should be populated with a description of the adjustment reason
"^DD",161.91,161.914,.01,21,2,0)
when the associated suspend code is Other.  The system will automatically
"^DD",161.91,161.914,.01,21,3,0)
copy this text to the DESCRIPTION OF SUSPENSION field in an invoice file.
"^DD",161.91,161.914,.01,"DT")
3030616
"^DD",161.92,161.92,0)
FIELD^^2^3
"^DD",161.92,161.92,0,"DDA")
N
"^DD",161.92,161.92,0,"DT")
3030618
"^DD",161.92,161.92,0,"ID","CDN")
D AGCDN^FBUTL3
"^DD",161.92,161.92,0,"IX","B",161.92,.01)

"^DD",161.92,161.92,0,"NM","ADJUSTMENT GROUP")

"^DD",161.92,161.92,0,"PT",162.07,1)

"^DD",161.92,161.92,0,"PT",162.14,1)

"^DD",161.92,161.92,0,"PT",162.558,1)

"^DD",161.92,161.92,0,"VRPK")
FB
"^DD",161.92,161.92,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<1)!'(X'?1P.E) X
"^DD",161.92,161.92,.01,1,0)
^.1
"^DD",161.92,161.92,.01,1,1,0)
161.92^B
"^DD",161.92,161.92,.01,1,1,1)
S ^FB(161.92,"B",$E(X,1,30),DA)=""
"^DD",161.92,161.92,.01,1,1,2)
K ^FB(161.92,"B",$E(X,1,30),DA)
"^DD",161.92,161.92,.01,3)
Answer must be 1-2 characters in length.
"^DD",161.92,161.92,.01,21,0)
^^1^1^3030617^
"^DD",161.92,161.92,.01,21,1,0)
Code value.
"^DD",161.92,161.92,.01,"DT")
3030617
"^DD",161.92,161.92,1,0)
STATUS EFFECTIVE DATE^161.921D^^1;0
"^DD",161.92,161.92,2,0)
DESCRIPTION EFFECTIVE DATE^161.922D^^2;0
"^DD",161.92,161.921,0)
STATUS EFFECTIVE DATE SUB-FIELD^^2^3
"^DD",161.92,161.921,0,"DT")
3030617
"^DD",161.92,161.921,0,"IX","B",161.921,.01)

"^DD",161.92,161.921,0,"NM","STATUS EFFECTIVE DATE")

"^DD",161.92,161.921,0,"UP")
161.92
"^DD",161.92,161.921,.01,0)
STATUS EFFECTIVE DATE^D^^0;1^S %DT="EX" D ^%DT S X=Y K:3991231<X!(3030601>X) X
"^DD",161.92,161.921,.01,1,0)
^.1
"^DD",161.92,161.921,.01,1,1,0)
161.921^B
"^DD",161.92,161.921,.01,1,1,1)
S ^FB(161.92,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",161.92,161.921,.01,1,1,2)
K ^FB(161.92,DA(1),1,"B",$E(X,1,30),DA)
"^DD",161.92,161.921,.01,3)
TYPE A DATE BETWEEN 6/1/2003 AND 12/31/2099
"^DD",161.92,161.921,.01,21,0)
^^1^1^3030617^
"^DD",161.92,161.921,.01,21,1,0)
Effective date of status.
"^DD",161.92,161.921,.01,"DT")
3030617
"^DD",161.92,161.921,1,0)
STATUS^S^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",161.92,161.921,1,3)
Specify the status of the code as of the effective date.
"^DD",161.92,161.921,1,21,0)
^^3^3^3030617^
"^DD",161.92,161.921,1,21,1,0)
The status of the claim adjustment group code as of the effective date.  
"^DD",161.92,161.921,1,21,2,0)
It will be used to prevent inactive codes from being specified during
"^DD",161.92,161.921,1,21,3,0)
adjudication of a claim.
"^DD",161.92,161.921,1,"DT")
3030617
"^DD",161.92,161.921,2,0)
FEE USE^S^0:NOT APPLICABLE;1:APPLICABLE;^0;3^Q
"^DD",161.92,161.921,2,3)
Specify applicability of use with fee claims as of effective date.
"^DD",161.92,161.921,2,21,0)
^^3^3^3030617^
"^DD",161.92,161.921,2,21,1,0)
Indicates if code is applicable for use on fee claims as of effective
"^DD",161.92,161.921,2,21,2,0)
date. (1 applicable or 0 not applicable)  It will be used to prevent
"^DD",161.92,161.921,2,21,3,0)
inappropriate codes from being specified during adjudication of a claim.
"^DD",161.92,161.921,2,"DT")
3030617
"^DD",161.92,161.922,0)
DESCRIPTION EFFECTIVE DATE SUB-FIELD^^1^3
"^DD",161.92,161.922,0,"DT")
3030618
"^DD",161.92,161.922,0,"IX","B",161.922,.01)

"^DD",161.92,161.922,0,"NM","DESCRIPTION EFFECTIVE DATE")

"^DD",161.92,161.922,0,"UP")
161.92
"^DD",161.92,161.922,.01,0)
DESCRIPTION EFFECTIVE DATE^D^^0;1^S %DT="EX" D ^%DT S X=Y K:3991231<X!(3030601>X) X
"^DD",161.92,161.922,.01,1,0)
^.1
"^DD",161.92,161.922,.01,1,1,0)
161.922^B
"^DD",161.92,161.922,.01,1,1,1)
S ^FB(161.92,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",161.92,161.922,.01,1,1,2)
K ^FB(161.92,DA(1),2,"B",$E(X,1,30),DA)
"^DD",161.92,161.922,.01,3)
TYPE A DATE BETWEEN 6/1/2003 AND 12/31/2099
"^DD",161.92,161.922,.01,21,0)
^^1^1^3030617^
"^DD",161.92,161.922,.01,21,1,0)
Effective date of description.
"^DD",161.92,161.922,.01,"DT")
3030617
"^DD",161.92,161.922,.02,0)
SHORT DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",161.92,161.922,.02,3)
Answer must be 1-30 characters in length.
"^DD",161.92,161.922,.02,21,0)
^^1^1^3030618^
"^DD",161.92,161.922,.02,21,1,0)
Short description of adjustment group.
"^DD",161.92,161.922,.02,"DT")
3030618
"^DD",161.92,161.922,1,0)
DESCRIPTION^161.9221^^D;0
"^DD",161.92,161.9221,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",161.92,161.9221,0,"DT")
3030617
"^DD",161.92,161.9221,0,"NM","DESCRIPTION")

"^DD",161.92,161.9221,0,"UP")
161.922
"^DD",161.92,161.9221,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",161.92,161.9221,.01,3)
Description of code as of effective date.
"^DD",161.92,161.9221,.01,21,0)
^^2^2^3030617^
"^DD",161.92,161.9221,.01,21,1,0)
The description of the adjustment group code as of the effective date.  
"^DD",161.92,161.9221,.01,21,2,0)
It will be used to display a description of the code.
"^DD",161.92,161.9221,.01,"DT")
3030617
"^DD",161.93,161.93,0)
FIELD^^2^3
"^DD",161.93,161.93,0,"DDA")
N
"^DD",161.93,161.93,0,"DT")
3030617
"^DD",161.93,161.93,0,"ID","CDES")
D RRCDES^FBUTL3
"^DD",161.93,161.93,0,"IX","B",161.93,.01)

"^DD",161.93,161.93,0,"NM","REMITTANCE REMARK")

"^DD",161.93,161.93,0,"PT",162.08,.01)

"^DD",161.93,161.93,0,"PT",162.15,.01)

"^DD",161.93,161.93,0,"PT",162.559,.01)

"^DD",161.93,161.93,0,"VRPK")
FB
"^DD",161.93,161.93,.01,0)
CODE^RF^^0;1^K:$L(X)>5!($L(X)<1)!'(X'?1P.E) X
"^DD",161.93,161.93,.01,1,0)
^.1
"^DD",161.93,161.93,.01,1,1,0)
161.93^B
"^DD",161.93,161.93,.01,1,1,1)
S ^FB(161.93,"B",$E(X,1,30),DA)=""
"^DD",161.93,161.93,.01,1,1,2)
K ^FB(161.93,"B",$E(X,1,30),DA)
"^DD",161.93,161.93,.01,3)
Answer must be 1-5 characters in length.
"^DD",161.93,161.93,.01,21,0)
^^1^1^3030617^
"^DD",161.93,161.93,.01,21,1,0)
Code value.
"^DD",161.93,161.93,.01,"DT")
3030617
"^DD",161.93,161.93,1,0)
STATUS EFFECTIVE DATE^161.931D^^1;0
"^DD",161.93,161.93,2,0)
DESCRIPTION EFFECTIVE DATE^161.932D^^2;0
"^DD",161.93,161.931,0)
STATUS EFFECTIVE DATE SUB-FIELD^^2^3
"^DD",161.93,161.931,0,"DT")
3030617
"^DD",161.93,161.931,0,"IX","B",161.931,.01)

"^DD",161.93,161.931,0,"NM","STATUS EFFECTIVE DATE")

"^DD",161.93,161.931,0,"UP")
161.93
"^DD",161.93,161.931,.01,0)
STATUS EFFECTIVE DATE^D^^0;1^S %DT="EX" D ^%DT S X=Y K:3991231<X!(3030601>X) X
"^DD",161.93,161.931,.01,1,0)
^.1
"^DD",161.93,161.931,.01,1,1,0)
161.931^B
"^DD",161.93,161.931,.01,1,1,1)
S ^FB(161.93,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",161.93,161.931,.01,1,1,2)
K ^FB(161.93,DA(1),1,"B",$E(X,1,30),DA)
"^DD",161.93,161.931,.01,3)
TYPE A DATE BETWEEN 6/1/2003 AND 12/31/2099
"^DD",161.93,161.931,.01,21,0)
^^1^1^3030617^
"^DD",161.93,161.931,.01,21,1,0)
Effective date of status.
"^DD",161.93,161.931,.01,"DT")
3030617
"^DD",161.93,161.931,1,0)
STATUS^S^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",161.93,161.931,1,3)
Specify the status of the code as of the effective date.
"^DD",161.93,161.931,1,21,0)
^^3^3^3030617^
"^DD",161.93,161.931,1,21,1,0)
The status of the remittance remark code as of the effective date.  It
"^DD",161.93,161.931,1,21,2,0)
will be used to prevent inactive codes from being specified during
"^DD",161.93,161.931,1,21,3,0)
adjudication of a claim.
"^DD",161.93,161.931,1,"DT")
3030617
"^DD",161.93,161.931,2,0)
FEE USE^S^0:NOT APPLICABLE;1:APPLICABLE;^0;3^Q
"^DD",161.93,161.931,2,3)
Specify applicability of use with fee claims as of effective date.
"^DD",161.93,161.931,2,21,0)
^^3^3^3030617^
"^DD",161.93,161.931,2,21,1,0)
Indicates if code is applicable for use on fee claims as of effective
"^DD",161.93,161.931,2,21,2,0)
date. (1 applicable or 0 not applicable)  It will be used to prevent
"^DD",161.93,161.931,2,21,3,0)
inappropriate codes from being specified during adjudication of a claim.
"^DD",161.93,161.931,2,"DT")
3030617
"^DD",161.93,161.932,0)
DESCRIPTION EFFECTIVE DATE SUB-FIELD^^1^2
"^DD",161.93,161.932,0,"DT")
3030617
"^DD",161.93,161.932,0,"IX","B",161.932,.01)

"^DD",161.93,161.932,0,"NM","DESCRIPTION EFFECTIVE DATE")

"^DD",161.93,161.932,0,"UP")
161.93
"^DD",161.93,161.932,.01,0)
DESCRIPTION EFFECTIVE DATE^D^^0;1^S %DT="EX" D ^%DT S X=Y K:3991231<X!(3030601>X) X
"^DD",161.93,161.932,.01,1,0)
^.1
"^DD",161.93,161.932,.01,1,1,0)
161.932^B
"^DD",161.93,161.932,.01,1,1,1)
S ^FB(161.93,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",161.93,161.932,.01,1,1,2)
K ^FB(161.93,DA(1),2,"B",$E(X,1,30),DA)
"^DD",161.93,161.932,.01,3)
TYPE A DATE BETWEEN 6/1/2003 AND 12/31/2099
"^DD",161.93,161.932,.01,21,0)
^^1^1^3030617^
"^DD",161.93,161.932,.01,21,1,0)
Effective date of description.
"^DD",161.93,161.932,.01,"DT")
3030617
"^DD",161.93,161.932,1,0)
DESCRIPTION^161.9321^^D;0
"^DD",161.93,161.9321,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",161.93,161.9321,0,"DT")
3030617
"^DD",161.93,161.9321,0,"NM","DESCRIPTION")

"^DD",161.93,161.9321,0,"UP")
161.932
"^DD",161.93,161.9321,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",161.93,161.9321,.01,3)
Enter the description of the adjustment reason code as of the effective date.
"^DD",161.93,161.9321,.01,21,0)
^^2^2^3030617^
"^DD",161.93,161.9321,.01,21,1,0)
The description of the remittance remark code as of the effective date.  
"^DD",161.93,161.9321,.01,21,2,0)
It will be used to display a description of the code.
"^DD",161.93,161.9321,.01,"DT")
3030617
"^DD",162,162.03,47,0)
UNITS PAID^RNJ5,0^^2;14^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",162,162.03,47,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",162,162.03,47,21,0)
^^3^3^3030617^
"^DD",162,162.03,47,21,1,0)
Units of service being paid for this line item if any payment is being 
"^DD",162,162.03,47,21,2,0)
made for the line item.  If payment disapproved for the line item then 
"^DD",162,162.03,47,21,3,0)
enter the units of service that were billed.
"^DD",162,162.03,47,"DT")
3030626
"^DD",162,162.03,48,0)
REVENUE CODE^P399.2'^DGCR(399.2,^2;15^Q
"^DD",162,162.03,48,3)
Answer with the revenue code associated with this charge.
"^DD",162,162.03,48,21,0)
^.001^5^5^3030619^^
"^DD",162,162.03,48,21,1,0)
Revenue code is a 3-digit code associated with itemized charges on a UB92 
"^DD",162,162.03,48,21,2,0)
billing invoice.  A revenue code should be entered if a CPT/HCPCS code was
"^DD",162,162.03,48,21,3,0)
not specified for the line item.  If both revenue code and a CPT/HCPCS
"^DD",162,162.03,48,21,4,0)
code have been entered for a line item, the revenue code will be
"^DD",162,162.03,48,21,5,0)
considered the more accurate description of the service.
"^DD",162,162.03,48,23,0)
^^1^1^3030619^
"^DD",162,162.03,48,23,1,0)
IA #4128 allows Fee Basis to point to the REVENUE CODE (#399.2) file.
"^DD",162,162.03,48,"DT")
3030617
"^DD",162,162.03,49,0)
PATIENT ACCOUNT NUMBER^F^^2;16^K:$L(X)>20!($L(X)<1) X
"^DD",162,162.03,49,3)
Answer must be 1-20 characters in length.
"^DD",162,162.03,49,21,0)
^^2^2^3030617^
"^DD",162,162.03,49,21,1,0)
Please enter the Patient control number.  This could be either the Patient
"^DD",162,162.03,49,21,2,0)
Identification Number or Patient Account Number from the vendor's invoice.
"^DD",162,162.03,49,"DT")
3030617
"^DD",162,162.03,50,0)
FPPS CLAIM ID^F^^3;1^K:$L(X)>32!($L(X)<1)!'(X?1.32N) X
"^DD",162,162.03,50,3)
Enter a non-zero number from 1 to 32 digits long, 0 decimal digits.
"^DD",162,162.03,50,21,0)
^^2^2^3030617^
"^DD",162,162.03,50,21,1,0)
Enter the entire FPPS Claim ID as shown on the invoice document.  (1-32 
"^DD",162,162.03,50,21,2,0)
character text ID created by FPPS system).
"^DD",162,162.03,50,"DT")
3030618
"^DD",162,162.03,51,0)
FPPS LINE ITEM^F^^3;2^K:$L(X)>40!($L(X)<1) X
"^DD",162,162.03,51,3)
This response must be a number or a list or range, e.g., 1,3,5 or 2-4,8.
"^DD",162,162.03,51,21,0)
^^8^8^3030617^
"^DD",162,162.03,51,21,1,0)
Enter the line item sequence number associated with this charge.  Each 
"^DD",162,162.03,51,21,2,0)
charge on the FPPS invoice document will have a line item sequence number 
"^DD",162,162.03,51,21,3,0)
associated with it.  A line item can be entered individually or a group of
"^DD",162,162.03,51,21,4,0)
charges from multiple lines can be entered.  If all line items in a group
"^DD",162,162.03,51,21,5,0)
are in numerical sequence, you may enter the first line item sequence
"^DD",162,162.03,51,21,6,0)
number followed by a hyphen and the last line item sequence number.  If
"^DD",162,162.03,51,21,7,0)
the grouped charges are not in sequential order, each line item must be
"^DD",162,162.03,51,21,8,0)
entered individually, followed by a comma.
"^DD",162,162.03,51,"DT")
3030617
"^DD",162,162.03,52,0)
ADJUSTMENT^162.07PA^^7;0
"^DD",162,162.03,53,0)
REMITTANCE REMARK^162.08P^^8;0
"^DD",162,162.07,0)
ADJUSTMENT SUB-FIELD^^2^3
"^DD",162,162.07,0,"DT")
3030618
"^DD",162,162.07,0,"IX","B",162.07,.01)

"^DD",162,162.07,0,"NM","ADJUSTMENT")

"^DD",162,162.07,0,"UP")
162.03
"^DD",162,162.07,.01,0)
ADJUSTMENT REASON^M*P161.91'^FB(161.91,^0;1^S DIC("S")="I $P($$AR^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162,162.07,.01,1,0)
^.1
"^DD",162,162.07,.01,1,1,0)
162.07^B
"^DD",162,162.07,.01,1,1,1)
S ^FBAAC(DA(4),1,DA(3),1,DA(2),1,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",162,162.07,.01,1,1,2)
K ^FBAAC(DA(4),1,DA(3),1,DA(2),1,DA(1),7,"B",$E(X,1,30),DA)
"^DD",162,162.07,.01,3)
Select a HIPAA Adjustment (suspense) Reason Code.
"^DD",162,162.07,.01,12)
Only adjustment reasons that are applicable for Fee use can be selected.
"^DD",162,162.07,.01,12.1)
S DIC("S")="I $P($$AR^FBUTL1(Y),U,4)=1"
"^DD",162,162.07,.01,21,0)
^.001^2^2^3030617^^
"^DD",162,162.07,.01,21,1,0)
Adjustment reason codes explain why the amount paid differs from the 
"^DD",162,162.07,.01,21,2,0)
amount claimed.
"^DD",162,162.07,.01,"DT")
3030618
"^DD",162,162.07,1,0)
ADJUSTMENT GROUP^*P161.92'^FB(161.92,^0;2^S DIC("S")="I $P($$AG^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162,162.07,1,3)
Select a HIPAA Adjustment Group Code.
"^DD",162,162.07,1,12)
Only adjustment groups that are applicable for Fee use can be selected.
"^DD",162,162.07,1,12.1)
S DIC("S")="I $P($$AG^FBUTL1(Y),U,4)=1"
"^DD",162,162.07,1,21,0)
^^2^2^3030617^
"^DD",162,162.07,1,21,1,0)
The Adjustment Group Code pertains to the previously entered adjustment 
"^DD",162,162.07,1,21,2,0)
reason code.
"^DD",162,162.07,1,"DT")
3030618
"^DD",162,162.07,2,0)
ADJUSTMENT AMOUNT^NJ9,2^^0;3^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<.01) X
"^DD",162,162.07,2,3)
Type a Dollar Amount between .01 and 999999, 2 Decimal Digits
"^DD",162,162.07,2,21,0)
^^2^2^3030617^
"^DD",162,162.07,2,21,1,0)
Enter the dollar amount that is not being paid for this charge per the 
"^DD",162,162.07,2,21,2,0)
adjustment reason.
"^DD",162,162.07,2,"DT")
3030617
"^DD",162,162.08,0)
REMITTANCE REMARK SUB-FIELD^^.01^1
"^DD",162,162.08,0,"DT")
3030618
"^DD",162,162.08,0,"IX","B",162.08,.01)

"^DD",162,162.08,0,"NM","REMITTANCE REMARK")

"^DD",162,162.08,0,"UP")
162.03
"^DD",162,162.08,.01,0)
REMITTANCE REMARK^M*P161.93'^FB(161.93,^0;1^S DIC("S")="I $P($$RR^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162,162.08,.01,1,0)
^.1
"^DD",162,162.08,.01,1,1,0)
162.08^B
"^DD",162,162.08,.01,1,1,1)
S ^FBAAC(DA(4),1,DA(3),1,DA(2),1,DA(1),8,"B",$E(X,1,30),DA)=""
"^DD",162,162.08,.01,1,1,2)
K ^FBAAC(DA(4),1,DA(3),1,DA(2),1,DA(1),8,"B",$E(X,1,30),DA)
"^DD",162,162.08,.01,3)
Select a HIPAA Remittance Remark Code.
"^DD",162,162.08,.01,12)
Only remittance remarks that are applicable for Fee use can be selected.
"^DD",162,162.08,.01,12.1)
S DIC("S")="I $P($$RR^FBUTL1(Y),U,4)=1"
"^DD",162,162.08,.01,21,0)
^^2^2^3030617^
"^DD",162,162.08,.01,21,1,0)
Select a remittance remark code to provide non-financial information 
"^DD",162,162.08,.01,21,2,0)
critical to understanding the adjudication of the claim.
"^DD",162,162.08,.01,"DT")
3030618
"^DD",162.1,162.1,13,0)
FPPS CLAIM ID^F^^0;13^K:$L(X)>32!($L(X)<1)!'(X?1.32N) X
"^DD",162.1,162.1,13,3)
Enter a non-zero number from 1 to 32 digits long, 0 decimal digits.
"^DD",162.1,162.1,13,21,0)
^.001^2^2^3030617^^^
"^DD",162.1,162.1,13,21,1,0)
Enter the entire FPPS Claim ID as shown on the invoice document.  (1-32 
"^DD",162.1,162.1,13,21,2,0)
character text ID created by FPPS system).
"^DD",162.1,162.1,13,"DT")
3030618
"^DD",162.1,162.11,36,0)
FPPS LINE ITEM^F^^3;1^K:$L(X)>40!($L(X)<1) X
"^DD",162.1,162.11,36,3)
This response must be a number or a list or range, e.g., 1,3,5 or 2-4,8.
"^DD",162.1,162.11,36,21,0)
^^8^8^3030617^
"^DD",162.1,162.11,36,21,1,0)
Enter the line item sequence number associated with this charge.  Each 
"^DD",162.1,162.11,36,21,2,0)
charge on the FPPS invoice document will have a line item sequence number 
"^DD",162.1,162.11,36,21,3,0)
associated with it.  A line item can be entered individually or a group of
"^DD",162.1,162.11,36,21,4,0)
charges from multiple lines can be entered.  If all line items in a group
"^DD",162.1,162.11,36,21,5,0)
are in numerical sequence, you may enter the first line item sequence
"^DD",162.1,162.11,36,21,6,0)
number followed by a hyphen and the last line item sequence number.  If
"^DD",162.1,162.11,36,21,7,0)
the grouped charges are not in sequential order, each line item must be
"^DD",162.1,162.11,36,21,8,0)
entered individually, followed by a comma.
"^DD",162.1,162.11,36,"DT")
3030617
"^DD",162.1,162.11,37,0)
ADJUSTMENT^162.14P^^4;0
"^DD",162.1,162.11,38,0)
REMITTANCE REMARK^162.15P^^5;0
"^DD",162.1,162.14,0)
ADJUSTMENT SUB-FIELD^^2^3
"^DD",162.1,162.14,0,"DT")
3030618
"^DD",162.1,162.14,0,"IX","B",162.14,.01)

"^DD",162.1,162.14,0,"NM","ADJUSTMENT")

"^DD",162.1,162.14,0,"UP")
162.11
"^DD",162.1,162.14,.01,0)
ADJUSTMENT REASON^M*P161.91'^FB(161.91,^0;1^S DIC("S")="I $P($$AR^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.1,162.14,.01,1,0)
^.1
"^DD",162.1,162.14,.01,1,1,0)
162.14^B
"^DD",162.1,162.14,.01,1,1,1)
S ^FBAA(162.1,DA(2),"RX",DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",162.1,162.14,.01,1,1,2)
K ^FBAA(162.1,DA(2),"RX",DA(1),4,"B",$E(X,1,30),DA)
"^DD",162.1,162.14,.01,3)
Select a HIPAA Adjustment (suspense) Reason Code.
"^DD",162.1,162.14,.01,12)
Only adjustment reasons that are applicable for Fee use can be selected.
"^DD",162.1,162.14,.01,12.1)
S DIC("S")="I $P($$AR^FBUTL1(Y),U,4)=1"
"^DD",162.1,162.14,.01,21,0)
^.001^2^2^3030618^^^
"^DD",162.1,162.14,.01,21,1,0)
Adjustment reason codes explain why the amount paid differs from the 
"^DD",162.1,162.14,.01,21,2,0)
amount claimed.
"^DD",162.1,162.14,.01,"DT")
3030618
"^DD",162.1,162.14,1,0)
ADJUSTMENT GROUP^*P161.92'^FB(161.92,^0;2^S DIC("S")="I $P($$AG^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.1,162.14,1,3)
Select a HIPAA Adjustment Group Code.
"^DD",162.1,162.14,1,12)
Only adjustment groups that are applicable for Fee use can be selected.
"^DD",162.1,162.14,1,12.1)
S DIC("S")="I $P($$AG^FBUTL1(Y),U,4)=1"
"^DD",162.1,162.14,1,21,0)
^^2^2^3030617^
"^DD",162.1,162.14,1,21,1,0)
The Adjustment Group Code pertains to the previously entered adjustment 
"^DD",162.1,162.14,1,21,2,0)
reason code.
"^DD",162.1,162.14,1,"DT")
3030618
"^DD",162.1,162.14,2,0)
ADJUSTMENT AMOUNT^NJ9,2^^0;3^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<.01) X
"^DD",162.1,162.14,2,3)
Type a Dollar Amount between .01 and 999999, 2 Decimal Digits
"^DD",162.1,162.14,2,21,0)
^^2^2^3030617^
"^DD",162.1,162.14,2,21,1,0)
Enter the dollar amount that is not being paid for this charge per the 
"^DD",162.1,162.14,2,21,2,0)
adjustment reason.
"^DD",162.1,162.14,2,"DT")
3030617
"^DD",162.1,162.15,0)
REMITTANCE REMARK SUB-FIELD^^.01^1
"^DD",162.1,162.15,0,"DT")
3030618
"^DD",162.1,162.15,0,"IX","B",162.15,.01)

"^DD",162.1,162.15,0,"NM","REMITTANCE REMARK")

"^DD",162.1,162.15,0,"UP")
162.11
"^DD",162.1,162.15,.01,0)
REMITTANCE REMARK^M*P161.93'^FB(161.93,^0;1^S DIC("S")="I $P($$RR^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.1,162.15,.01,1,0)
^.1
"^DD",162.1,162.15,.01,1,1,0)
162.15^B
"^DD",162.1,162.15,.01,1,1,1)
S ^FBAA(162.1,DA(2),"RX",DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",162.1,162.15,.01,1,1,2)
K ^FBAA(162.1,DA(2),"RX",DA(1),5,"B",$E(X,1,30),DA)
"^DD",162.1,162.15,.01,3)
Select a HIPAA Remittance Remark Code.
"^DD",162.1,162.15,.01,12)
Only remittance remarks that are applicable for Fee use can be selected.
"^DD",162.1,162.15,.01,12.1)
S DIC("S")="I $P($$RR^FBUTL1(Y),U,4)=1"
"^DD",162.1,162.15,.01,21,0)
^.001^2^2^3030618^^^
"^DD",162.1,162.15,.01,21,1,0)
Select a remittance remark code to provide non-financial information 
"^DD",162.1,162.15,.01,21,2,0)
critical to understanding the adjudication of the claim.
"^DD",162.1,162.15,.01,"DT")
3030618
"^DD",162.5,162.5,8,0)
AMOUNT PAID^RNJ9,2X^^0;9^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X I $D(X),$P(^FBAAI(DA,0),U,12)'=6,$P(^FBAAI(DA,0),U,8)<X W !,*7,"Amount Paid cannot be greater than Amount Claimed !",! K X
"^DD",162.5,162.5,8,1,0)
^.1^^0
"^DD",162.5,162.5,8,3)
Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
"^DD",162.5,162.5,8,21,0)
^^2^2^2930514^
"^DD",162.5,162.5,8,21,1,0)
The dollar amount that was actually paid to the vendor for the service
"^DD",162.5,162.5,8,21,2,0)
provided.
"^DD",162.5,162.5,8,"DT")
3030807
"^DD",162.5,162.5,24.5,0)
DRG WEIGHT^NJ8,4^^2;12^K:+X'=X!(X>999.9999)!(X<0)!(X?.E1"."5N.N) X
"^DD",162.5,162.5,24.5,3)
Type a Number between 0 and 999.9999, 4 Decimal Digits
"^DD",162.5,162.5,24.5,21,0)
^.001^1^1^3030922^^
"^DD",162.5,162.5,24.5,21,1,0)
Enter the DRG weight as reported by the Austin Pricer.
"^DD",162.5,162.5,24.5,"DT")
3030922
"^DD",162.5,162.5,54,0)
COVERED DAYS^RNJ5,0^^2;10^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",162.5,162.5,54,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",162.5,162.5,54,21,0)
^^2^2^3030617^
"^DD",162.5,162.5,54,21,1,0)
This is the number of total number of Inpatient days that the Fee Staff 
"^DD",162.5,162.5,54,21,2,0)
has determined will be paid.  Enter number of inpatient days to be paid.
"^DD",162.5,162.5,54,"DT")
3030707
"^DD",162.5,162.5,55,0)
PATIENT CONTROL NUMBER^F^^2;11^K:$L(X)>20!($L(X)<1) X
"^DD",162.5,162.5,55,3)
Answer must be 1-20 characters in length.
"^DD",162.5,162.5,55,21,0)
^^2^2^3030617^
"^DD",162.5,162.5,55,21,1,0)
Please enter the Patient control number.  This could be either the Patient
"^DD",162.5,162.5,55,21,2,0)
Identification Number or Patient Account Number from the vendor's invoice.
"^DD",162.5,162.5,55,"DT")
3030617
"^DD",162.5,162.5,56,0)
FPPS CLAIM ID^F^^3;1^K:$L(X)>32!($L(X)<1)!'(X?1.32N) X
"^DD",162.5,162.5,56,3)
Enter a non-zero number from 1 to 32 digits long, 0 decimal digits.
"^DD",162.5,162.5,56,21,0)
^.001^2^2^3030710^^^
"^DD",162.5,162.5,56,21,1,0)
Enter the entire FPPS Claim ID as shown on the invoice document.  (1-32 
"^DD",162.5,162.5,56,21,2,0)
character text ID created by FPPS system).
"^DD",162.5,162.5,56,"DT")
3030618
"^DD",162.5,162.5,57,0)
FPPS LINE ITEM^F^^3;2^K:$L(X)>40!($L(X)<1) X
"^DD",162.5,162.5,57,3)
This response must be a number or a list or range or ALL, e.g., 1,3,5 or 2-4,8.
"^DD",162.5,162.5,57,21,0)
^^8^8^3030617^
"^DD",162.5,162.5,57,21,1,0)
Enter the line item sequence number associated with this charge.  Each 
"^DD",162.5,162.5,57,21,2,0)
charge on the FPPS invoice document will have a line item sequence number 
"^DD",162.5,162.5,57,21,3,0)
associated with it.  A line item can be entered individually or a group of
"^DD",162.5,162.5,57,21,4,0)
charges from multiple lines can be entered.  If all line items in a group
"^DD",162.5,162.5,57,21,5,0)
are in numerical sequence, you may enter the first line item sequence
"^DD",162.5,162.5,57,21,6,0)
number followed by a hyphen and the last line item sequence number.  If
"^DD",162.5,162.5,57,21,7,0)
the grouped charges are not in sequential order, each line item must be
"^DD",162.5,162.5,57,21,8,0)
entered individually, followed by a comma.
"^DD",162.5,162.5,57,"DT")
3030617
"^DD",162.5,162.5,58,0)
ADJUSTMENT^162.558P^^8;0
"^DD",162.5,162.5,59,0)
REMITTANCE REMARK^162.559P^^9;0
"^DD",162.5,162.558,0)
ADJUSTMENT SUB-FIELD^^2^3
"^DD",162.5,162.558,0,"DT")
3030625
"^DD",162.5,162.558,0,"IX","B",162.558,.01)

"^DD",162.5,162.558,0,"NM","ADJUSTMENT")

"^DD",162.5,162.558,0,"UP")
162.5
"^DD",162.5,162.558,.01,0)
ADJUSTMENT REASON^*P161.91'^FB(161.91,^0;1^S DIC("S")="I $P($$AR^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.5,162.558,.01,1,0)
^.1
"^DD",162.5,162.558,.01,1,1,0)
162.558^B
"^DD",162.5,162.558,.01,1,1,1)
S ^FBAAI(DA(1),8,"B",$E(X,1,30),DA)=""
"^DD",162.5,162.558,.01,1,1,2)
K ^FBAAI(DA(1),8,"B",$E(X,1,30),DA)
"^DD",162.5,162.558,.01,3)
Select a HIPAA Adjustment (suspense) Reason Code.
"^DD",162.5,162.558,.01,12)
Only adjustment reasons that are applicable for Fee use can be selected.
"^DD",162.5,162.558,.01,12.1)
S DIC("S")="I $P($$AR^FBUTL1(Y),U,4)=1"
"^DD",162.5,162.558,.01,21,0)
^.001^2^2^3030625^^^^
"^DD",162.5,162.558,.01,21,1,0)
Adjustment reason codes explain why the amount paid differs from the 
"^DD",162.5,162.558,.01,21,2,0)
amount claimed.
"^DD",162.5,162.558,.01,"DT")
3030625
"^DD",162.5,162.558,1,0)
ADJUSTMENT GROUP^R*P161.92'^FB(161.92,^0;2^S DIC("S")="I $P($$AG^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.5,162.558,1,3)
Select a HIPAA Adjustment Group Code.
"^DD",162.5,162.558,1,12)
Only adjustment groups that are applicable for Fee use can be selected.
"^DD",162.5,162.558,1,12.1)
S DIC("S")="I $P($$AG^FBUTL1(Y),U,4)=1"
"^DD",162.5,162.558,1,21,0)
^.001^2^2^3030625^^^^
"^DD",162.5,162.558,1,21,1,0)
The Adjustment Group Code pertains to the previously entered adjustment 
"^DD",162.5,162.558,1,21,2,0)
reason code.
"^DD",162.5,162.558,1,"DT")
3030625
"^DD",162.5,162.558,2,0)
ADJUSTMENT AMOUNT^RNJ9,2X^^0;3^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>999999.99)!(X<-999999.99) X I $D(X) K:+X=0 X
"^DD",162.5,162.558,2,3)
Type a non-zero Dollar Amount between -999999.99 and 999999.99, 2 Decimal Digits
"^DD",162.5,162.558,2,21,0)
^.001^2^2^3030625^^
"^DD",162.5,162.558,2,21,1,0)
Enter the dollar amount that is not being paid for this charge per the 
"^DD",162.5,162.558,2,21,2,0)
adjustment reason.
"^DD",162.5,162.558,2,"DT")
3030625
"^DD",162.5,162.559,0)
REMITTANCE REMARK SUB-FIELD^^.01^1
"^DD",162.5,162.559,0,"DT")
3030618
"^DD",162.5,162.559,0,"IX","B",162.559,.01)

"^DD",162.5,162.559,0,"NM","REMITTANCE REMARK")

"^DD",162.5,162.559,0,"UP")
162.5
"^DD",162.5,162.559,.01,0)
REMITTANCE REMARK^M*P161.93'^FB(161.93,^0;1^S DIC("S")="I $P($$RR^FBUTL1(Y),U,4)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",162.5,162.559,.01,1,0)
^.1
"^DD",162.5,162.559,.01,1,1,0)
162.559^B
"^DD",162.5,162.559,.01,1,1,1)
S ^FBAAI(DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",162.5,162.559,.01,1,1,2)
K ^FBAAI(DA(1),9,"B",$E(X,1,30),DA)
"^DD",162.5,162.559,.01,3)
Select a HIPAA Remittance Remark Code.
"^DD",162.5,162.559,.01,12)
Only remittance remarks applicable for Fee use can be selected.
"^DD",162.5,162.559,.01,12.1)
S DIC("S")="I $P($$RR^FBUTL1(Y),U,4)=1"
"^DD",162.5,162.559,.01,21,0)
^.001^2^2^3030717^^^
"^DD",162.5,162.559,.01,21,1,0)
Select a remittance remark code to provide non-financial information 
"^DD",162.5,162.559,.01,21,2,0)
critical to understanding the adjudication of the claim.
"^DD",162.5,162.559,.01,"DT")
3030717
"^DD",162.7,162.7,32,0)
FPPS CLAIM ID^F^^5;1^K:$L(X)>32!($L(X)<1)!'(X?1(1"1",1"2",1"3",1"4",1"5",1"6",1"7",1"8",1"9").31N) X
"^DD",162.7,162.7,32,3)
Enter a non-zero number from 1 to 32 digits long, 0 decimal digits.
"^DD",162.7,162.7,32,21,0)
^.001^2^2^3030617^^
"^DD",162.7,162.7,32,21,1,0)
Enter the entire FPPS Claim ID as shown on the invoice document.  (1-32 
"^DD",162.7,162.7,32,21,2,0)
character text ID created by FPPS system).
"^DD",162.7,162.7,32,"DT")
3030626
"^DD",163.5,163.5,0)
FIELD^^11^12
"^DD",163.5,163.5,0,"DDA")
N
"^DD",163.5,163.5,0,"DT")
3030826
"^DD",163.5,163.5,0,"ID",1)
W "   ",@("$P($P($C(59)_$S($D(^DD(163.5,1,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",163.5,163.5,0,"ID",2)
W "   ",@("$P($P($C(59)_$S($D(^DD(163.5,2,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
"^DD",163.5,163.5,0,"IX","AC",163.5,2)

"^DD",163.5,163.5,0,"IX","AMD",163.5,4)

"^DD",163.5,163.5,0,"IX","AMI",163.5,3)

"^DD",163.5,163.5,0,"IX","ARS",163.5,10)

"^DD",163.5,163.5,0,"IX","B",163.5,.01)

"^DD",163.5,163.5,0,"NM","FPPS QUEUED INVOICES")

"^DD",163.5,163.5,0,"VRPK")
FB
"^DD",163.5,163.5,.01,0)
INVOICE NUMBER^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",163.5,163.5,.01,1,0)
^.1
"^DD",163.5,163.5,.01,1,1,0)
163.5^B
"^DD",163.5,163.5,.01,1,1,1)
S ^FBHL(163.5,"B",$E(X,1,30),DA)=""
"^DD",163.5,163.5,.01,1,1,2)
K ^FBHL(163.5,"B",$E(X,1,30),DA)
"^DD",163.5,163.5,.01,3)
Answer must be 1-30 characters in length
"^DD",163.5,163.5,.01,21,0)
^.001^1^1^3030821^^
"^DD",163.5,163.5,.01,21,1,0)
The invoice number as represented throughout the system.
"^DD",163.5,163.5,.01,"DT")
3030619
"^DD",163.5,163.5,1,0)
INVOICE FILE NUMBER^RS^3:162 (OUTP);5:162.1 (PHARM);9:162.5 (INP);^0;2^Q
"^DD",163.5,163.5,1,3)
Enter the code associated with the appropriate invoice File.
"^DD",163.5,163.5,1,21,0)
^.001^2^2^3030821^^
"^DD",163.5,163.5,1,21,1,0)
This field represents the invoice file associated with this invoice (i.e. 
"^DD",163.5,163.5,1,21,2,0)
FEE BASIS INVOICE, FEE BASIS PHARMACY INVOICE, etc.)
"^DD",163.5,163.5,1,"DT")
3030821
"^DD",163.5,163.5,2,0)
STATUS^RS^0:PENDING;1:TRANSMITTED;2:ACKNOWLEDGED;^0;3^Q
"^DD",163.5,163.5,2,1,0)
^.1
"^DD",163.5,163.5,2,1,1,0)
163.5^AC
"^DD",163.5,163.5,2,1,1,1)
S ^FBHL(163.5,"AC",$E(X,1,30),DA)=""
"^DD",163.5,163.5,2,1,1,2)
K ^FBHL(163.5,"AC",$E(X,1,30),DA)
"^DD",163.5,163.5,2,1,1,"%D",0)
^^3^3^3030619^
"^DD",163.5,163.5,2,1,1,"%D",1,0)
This cross reference represents the breakout between those invoices that 
"^DD",163.5,163.5,2,1,1,"%D",2,0)
are pending to be transmitted vs. those that have already been 
"^DD",163.5,163.5,2,1,1,"%D",3,0)
transmitted.
"^DD",163.5,163.5,2,1,1,"DT")
3030619
"^DD",163.5,163.5,2,3)

"^DD",163.5,163.5,2,21,0)
^^1^1^3030821^
"^DD",163.5,163.5,2,21,1,0)
This field represents the status of this entry.
"^DD",163.5,163.5,2,"DT")
3030821
"^DD",163.5,163.5,3,0)
MESSAGE ID^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",163.5,163.5,3,1,0)
^.1
"^DD",163.5,163.5,3,1,1,0)
163.5^AMI
"^DD",163.5,163.5,3,1,1,1)
S ^FBHL(163.5,"AMI",$E(X,1,30),DA)=""
"^DD",163.5,163.5,3,1,1,2)
K ^FBHL(163.5,"AMI",$E(X,1,30),DA)
"^DD",163.5,163.5,3,1,1,"%D",0)
^^1^1^3030821^
"^DD",163.5,163.5,3,1,1,"%D",1,0)
Regular cross-reference of assigned HL7 message ID.
"^DD",163.5,163.5,3,1,1,"DT")
3030821
"^DD",163.5,163.5,3,3)
Answer must be 1-20 characters in length.
"^DD",163.5,163.5,3,21,0)
^.001^1^1^3030826^^
"^DD",163.5,163.5,3,21,1,0)
Message ID as assigned by the HL7 package.
"^DD",163.5,163.5,3,"DT")
3030826
"^DD",163.5,163.5,4,0)
MESSAGE DATE/TIME^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",163.5,163.5,4,1,0)
^.1
"^DD",163.5,163.5,4,1,1,0)
163.5^AMD
"^DD",163.5,163.5,4,1,1,1)
S ^FBHL(163.5,"AMD",$E(X,1,30),DA)=""
"^DD",163.5,163.5,4,1,1,2)
K ^FBHL(163.5,"AMD",$E(X,1,30),DA)
"^DD",163.5,163.5,4,1,1,"%D",0)
^^2^2^3030821^
"^DD",163.5,163.5,4,1,1,"%D",1,0)
Regular cross-reference of date/time that the message was accepted by the
"^DD",163.5,163.5,4,1,1,"%D",2,0)
HL7 package.
"^DD",163.5,163.5,4,1,1,"DT")
3030821
"^DD",163.5,163.5,4,3)
Enter time that message was sent to HL7 package.
"^DD",163.5,163.5,4,21,0)
^^2^2^3030821^
"^DD",163.5,163.5,4,21,1,0)
This field contains the date/time that Fee Basis submitted the message to
"^DD",163.5,163.5,4,21,2,0)
the HL7 package.
"^DD",163.5,163.5,4,"DT")
3030821
"^DD",163.5,163.5,5,0)
TRANSACTION TYPE^S^C:CLAIM LEVEL;L:LINE LEVEL;X:CANCELLATION;^0;6^Q
"^DD",163.5,163.5,5,3)
Enter Transaction Code that was included in the HL message.
"^DD",163.5,163.5,5,21,0)
^^2^2^3030821^
"^DD",163.5,163.5,5,21,1,0)
This field contains the transaction code that was included in the HL 
"^DD",163.5,163.5,5,21,2,0)
message.
"^DD",163.5,163.5,5,"DT")
3030821
"^DD",163.5,163.5,6,0)
STATION NUMBER^F^^0;7^K:$L(X)>7!($L(X)<3) X
"^DD",163.5,163.5,6,3)
Answer must be 3-7 characters in length.
"^DD",163.5,163.5,6,21,0)
^^2^2^3030821^
"^DD",163.5,163.5,6,21,1,0)
This field contains the station number that was included in the HL 
"^DD",163.5,163.5,6,21,2,0)
message.
"^DD",163.5,163.5,6,"DT")
3030821
"^DD",163.5,163.5,7,0)
MESSAGE TEXT^163.57^^1;0
"^DD",163.5,163.5,8,0)
ACK FLAG^S^A:ACCEPTED;R:REJECTED;^0;8^Q
"^DD",163.5,163.5,8,21,0)
^^2^2^3030826^
"^DD",163.5,163.5,8,21,1,0)
This field contains the result of the commit acknowledgement from the
"^DD",163.5,163.5,8,21,2,0)
VistA Interface Engine.
"^DD",163.5,163.5,8,"DT")
3030824
"^DD",163.5,163.5,9,0)
ACK DATE/TIME^D^^0;9^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",163.5,163.5,9,21,0)
^^1^1^3030824^
"^DD",163.5,163.5,9,21,1,0)
This field contains the date/time that the HL message status was updated.
"^DD",163.5,163.5,9,"DT")
3030824
"^DD",163.5,163.5,10,0)
REJECT STATUS^S^N:NOT REPORTED;R:REPORTED;^0;10^Q
"^DD",163.5,163.5,10,1,0)
^.1
"^DD",163.5,163.5,10,1,1,0)
163.5^ARS
"^DD",163.5,163.5,10,1,1,1)
S ^FBHL(163.5,"ARS",$E(X,1,30),DA)=""
"^DD",163.5,163.5,10,1,1,2)
K ^FBHL(163.5,"ARS",$E(X,1,30),DA)
"^DD",163.5,163.5,10,1,1,"%D",0)
^^2^2^3030826^
"^DD",163.5,163.5,10,1,1,"%D",1,0)
This regular cross-reference is used to find reject messages that have not
"^DD",163.5,163.5,10,1,1,"%D",2,0)
been reported to users yet.
"^DD",163.5,163.5,10,1,1,"DT")
3030824
"^DD",163.5,163.5,10,21,0)
^^2^2^3030824^
"^DD",163.5,163.5,10,21,1,0)
This field will only be populated when the HL message is rejected.  It 
"^DD",163.5,163.5,10,21,2,0)
indicates if the rejection has been reported to users yet.
"^DD",163.5,163.5,10,"DT")
3030824
"^DD",163.5,163.5,11,0)
REJECT TEXT^163.511^^2;0
"^DD",163.5,163.5,11,"DT")
3030826
"^DD",163.5,163.511,0)
REJECT TEXT SUB-FIELD^^.01^1
"^DD",163.5,163.511,0,"DT")
3030824
"^DD",163.5,163.511,0,"NM","REJECT TEXT")

"^DD",163.5,163.511,0,"UP")
163.5
"^DD",163.5,163.511,.01,0)
REJECT TEXT^WL^^0;1^Q
"^DD",163.5,163.511,.01,21,0)
^.001^1^1^3030826^^
"^DD",163.5,163.511,.01,21,1,0)
This field contains the error message for a reject.
"^DD",163.5,163.511,.01,"DT")
3030826
"^DD",163.5,163.57,0)
MESSAGE TEXT SUB-FIELD^^.01^1
"^DD",163.5,163.57,0,"DT")
3030821
"^DD",163.5,163.57,0,"NM","MESSAGE TEXT")

"^DD",163.5,163.57,0,"UP")
163.5
"^DD",163.5,163.57,.01,0)
MESSAGE TEXT^WL^^0;1^Q
"^DD",163.5,163.57,.01,3)
Enter the HL segments that were submitted to the HL7 package.
"^DD",163.5,163.57,.01,21,0)
^^2^2^3030821^
"^DD",163.5,163.57,.01,21,1,0)
This field contains the HL segments that were submitted to the HL7 
"^DD",163.5,163.57,.01,21,2,0)
package.  The contents of this field may be purged.
"^DD",163.5,163.57,.01,"DT")
3030821
"^DD",163.7,163.7,0)
FIELD^^7^8
"^DD",163.7,163.7,0,"DDA")
N
"^DD",163.7,163.7,0,"DT")
3030718
"^DD",163.7,163.7,0,"ID",1)
W "   ",$$FMTE^DILIBF($P(^(0),U,2),6)
"^DD",163.7,163.7,0,"IX","B",163.7,.01)

"^DD",163.7,163.7,0,"IX","C",163.7,1)

"^DD",163.7,163.7,0,"NM","FEE BASIS FPPS AUDIT")

"^DD",163.7,163.7,0,"VRPK")
FB
"^DD",163.7,163.7,.01,0)
INVOICE NUMBER^RNJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",163.7,163.7,.01,1,0)
^.1
"^DD",163.7,163.7,.01,1,1,0)
163.7^B
"^DD",163.7,163.7,.01,1,1,1)
S ^FB(163.7,"B",$E(X,1,30),DA)=""
"^DD",163.7,163.7,.01,1,1,2)
K ^FB(163.7,"B",$E(X,1,30),DA)
"^DD",163.7,163.7,.01,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",163.7,163.7,.01,21,0)
^^1^1^3030718^
"^DD",163.7,163.7,.01,21,1,0)
Number of invoice that was modified.
"^DD",163.7,163.7,.01,"DT")
3030718
"^DD",163.7,163.7,1,0)
DATE/TIME CHANGED^RD^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",163.7,163.7,1,1,0)
^.1
"^DD",163.7,163.7,1,1,1,0)
163.7^C
"^DD",163.7,163.7,1,1,1,1)
S ^FB(163.7,"C",$E(X,1,30),DA)=""
"^DD",163.7,163.7,1,1,1,2)
K ^FB(163.7,"C",$E(X,1,30),DA)
"^DD",163.7,163.7,1,1,1,"%D",0)
^^1^1^3030718^
"^DD",163.7,163.7,1,1,1,"%D",1,0)
Cross-reference by date/time of change.
"^DD",163.7,163.7,1,1,1,"DT")
3030718
"^DD",163.7,163.7,1,3)
Enter date and time that the item was changed.
"^DD",163.7,163.7,1,21,0)
^^1^1^3030718^
"^DD",163.7,163.7,1,21,1,0)
Date/time the change was made.
"^DD",163.7,163.7,1,"DT")
3030718
"^DD",163.7,163.7,2,0)
FILE #^RF^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",163.7,163.7,2,3)
Answer must be 1-10 characters in length.
"^DD",163.7,163.7,2,21,0)
^^2^2^3030903^
"^DD",163.7,163.7,2,21,1,0)
Identifies the file (or subfile) number where the changed entry is stored.
"^DD",163.7,163.7,2,21,2,0)
For example, subfile 162.03 contains medical payments.
"^DD",163.7,163.7,2,"DT")
3030718
"^DD",163.7,163.7,3,0)
IENS^RF^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",163.7,163.7,3,3)
Answer must be 1-30 characters in length.
"^DD",163.7,163.7,3,21,0)
^^4^4^3030718^
"^DD",163.7,163.7,3,21,1,0)
The internal entry numbers (iens) that identify the entry that was 
"^DD",163.7,163.7,3,21,2,0)
changed.  The iens are delimited by commas(,) beginning with the ien of 
"^DD",163.7,163.7,3,21,3,0)
the lowest level subentry. For example, a prescription (subfile 162.11)
"^DD",163.7,163.7,3,21,4,0)
with iens "1,2000," would be located at ^FBAA(162.1,2000,"RX",1,0).
"^DD",163.7,163.7,3,"DT")
3030718
"^DD",163.7,163.7,4,0)
FIELD #^RF^^0;5^K:$L(X)>10!($L(X)<1) X
"^DD",163.7,163.7,4,3)
Answer must be 1-10 characters in length.
"^DD",163.7,163.7,4,21,0)
^.001^1^1^3030718^^
"^DD",163.7,163.7,4,21,1,0)
Number of the field whose value was changed. 
"^DD",163.7,163.7,4,"DT")
3030718
"^DD",163.7,163.7,5,0)
OLD VALUE^F^^0;6^K:$L(X)>32!($L(X)<1) X
"^DD",163.7,163.7,5,3)
Answer must be 1-32 characters in length.
"^DD",163.7,163.7,5,21,0)
^.001^1^1^3030718^^
"^DD",163.7,163.7,5,21,1,0)
Value of field before it was changed.
"^DD",163.7,163.7,5,"DT")
3030718
"^DD",163.7,163.7,6,0)
NEW VALUE^F^^0;7^K:$L(X)>32!($L(X)<1) X
"^DD",163.7,163.7,6,3)
Answer must be 1-32 characters in length.
"^DD",163.7,163.7,6,21,0)
^^1^1^3030718^
"^DD",163.7,163.7,6,21,1,0)
Value of field after the change was made.
"^DD",163.7,163.7,6,"DT")
3030718
"^DD",163.7,163.7,7,0)
USER^RP200'^VA(200,^0;8^Q
"^DD",163.7,163.7,7,21,0)
^.001^1^1^3030718^^
"^DD",163.7,163.7,7,21,1,0)
User that changed the value of the field.
"^DD",163.7,163.7,7,"DT")
3030718
"^DD",163.99,163.991,4,0)
SEVENTY-FIFTH PERCENTILE^RNJ10,2^^0;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999.99)!(X<0) X
"^DD",163.99,163.991,4,3)
Type a Dollar Amount between 0 and 9999999.99, 2 Decimal Digits
"^DD",163.99,163.991,4,21,0)
^^3^3^3030617^
"^DD",163.99,163.991,4,21,1,0)
This is internally calculated and stores the 75th percentile dollar amount
"^DD",163.99,163.991,4,21,2,0)
based on amount claimed by the vendor for the CPT code.  Amounts are per
"^DD",163.99,163.991,4,21,3,0)
unit of service when BEGINNING DATE is on or after October 2004.
"^DD",163.99,163.991,4,"DT")
2910930
"^DIC",161.91,161.91,0)
ADJUSTMENT REASON^161.91
"^DIC",161.91,161.91,0,"GL")
^FB(161.91,
"^DIC",161.91,161.91,"%D",0)
^1.001^11^11^3030617^^
"^DIC",161.91,161.91,"%D",1,0)
This file contains a list of claim adjustment reason codes.  These codes
"^DIC",161.91,161.91,"%D",2,0)
are used to indicate why the amount paid is different from the amount
"^DIC",161.91,161.91,"%D",3,0)
billed on a health care claim.  The source of the codes is the National
"^DIC",161.91,161.91,"%D",4,0)
Health Care Claim Payment/Committee Bulletins.  It is available from
"^DIC",161.91,161.91,"%D",5,0)
Washington Publishing Company.  The associated suspend code, suspension
"^DIC",161.91,161.91,"%D",6,0)
description, and applicability for use by VA on fee claims is provided by
"^DIC",161.91,161.91,"%D",7,0)
the Fee Replacement Project Management Office in Denver which represents
"^DIC",161.91,161.91,"%D",8,0)
the VA Chief Business Office.
"^DIC",161.91,161.91,"%D",9,0)
 
"^DIC",161.91,161.91,"%D",10,0)
This file is exported with data and the contents should not be locally
"^DIC",161.91,161.91,"%D",11,0)
modified.
"^DIC",161.91,"B","ADJUSTMENT REASON",161.91)

"^DIC",161.92,161.92,0)
ADJUSTMENT GROUP^161.92
"^DIC",161.92,161.92,0,"GL")
^FB(161.92,
"^DIC",161.92,161.92,"%D",0)
^1.001^11^11^3030617^^^^
"^DIC",161.92,161.92,"%D",1,0)
This file contains a list of claim adjustment group codes.  The codes in 
"^DIC",161.92,161.92,"%D",2,0)
this file are used to identify the general category of payment adjustment.
"^DIC",161.92,161.92,"%D",3,0)
The source of the codes is the National Electronic Data Interchange 
"^DIC",161.92,161.92,"%D",4,0)
Transaction Set Implementation Guide for the Health Care Claim Payment 
"^DIC",161.92,161.92,"%D",5,0)
Advice (ASC X12N 835).  It is available from Washington Publishing 
"^DIC",161.92,161.92,"%D",6,0)
Company.  The applicability for use by VA on fee claims is provided by the
"^DIC",161.92,161.92,"%D",7,0)
Fee Replacement Project Management Office in Denver which represents the
"^DIC",161.92,161.92,"%D",8,0)
VA Chief Business Office.
"^DIC",161.92,161.92,"%D",9,0)
 
"^DIC",161.92,161.92,"%D",10,0)
This file is exported with data and the contents should not be locally 
"^DIC",161.92,161.92,"%D",11,0)
modified.
"^DIC",161.92,"B","ADJUSTMENT GROUP",161.92)

"^DIC",161.93,161.93,0)
REMITTANCE REMARK^161.93
"^DIC",161.93,161.93,0,"GL")
^FB(161.93,
"^DIC",161.93,161.93,"%D",0)
^^10^10^3030617^
"^DIC",161.93,161.93,"%D",1,0)
This file contains a list of remittance remark codes.  The codes in this
"^DIC",161.93,161.93,"%D",2,0)
file represent non-financial information critical to understanding the
"^DIC",161.93,161.93,"%D",3,0)
adjudication of a health insurance claim. The source of the codes is the
"^DIC",161.93,161.93,"%D",4,0)
National Standard Format Electronic Remittance Advice.  It is available
"^DIC",161.93,161.93,"%D",5,0)
from Washington Publishing Company.  The applicability for use by VA on
"^DIC",161.93,161.93,"%D",6,0)
fee claims is provided by the Fee Replacement Project Management Office in
"^DIC",161.93,161.93,"%D",7,0)
Denver which represents the VA Chief Business Office.
"^DIC",161.93,161.93,"%D",8,0)
 
"^DIC",161.93,161.93,"%D",9,0)
This file is exported with data and the contents should not be locally 
"^DIC",161.93,161.93,"%D",10,0)
modified.
"^DIC",161.93,"B","REMITTANCE REMARK",161.93)

"^DIC",163.5,163.5,0)
FPPS QUEUED INVOICES^163.5
"^DIC",163.5,163.5,0,"GL")
^FBHL(163.5,
"^DIC",163.5,163.5,"%",0)
^1.005^^0
"^DIC",163.5,163.5,"%D",0)
^^13^13^3030826^
"^DIC",163.5,163.5,"%D",1,0)
This file contains the list of VistA Fee Basis invoices that are pending 
"^DIC",163.5,163.5,"%D",2,0)
transmission or have already been transmitted to the Fee Payment
"^DIC",163.5,163.5,"%D",3,0)
Processing System (FPPS) hosted at the Health Administration Center (HAC).
"^DIC",163.5,163.5,"%D",4,0)
 
"^DIC",163.5,163.5,"%D",5,0)
VistA invoice data must be transmitted to FPPS for invoices that are 
"^DIC",163.5,163.5,"%D",6,0)
associated with an electronically submitted health care claim.  FPPS can
"^DIC",163.5,163.5,"%D",7,0)
then generate the electronic remittance advice to the vendor as required
"^DIC",163.5,163.5,"%D",8,0)
by HIPAA.
"^DIC",163.5,163.5,"%D",9,0)
 
"^DIC",163.5,163.5,"%D",10,0)
Invoices are automatically added to this file when various trigger events 
"^DIC",163.5,163.5,"%D",11,0)
occur such as receipt of a payment confirmation message.  The interface 
"^DIC",163.5,163.5,"%D",12,0)
software uses this file to identify invoices that should be transmitted 
"^DIC",163.5,163.5,"%D",13,0)
to FPPS and to maintain a record of transmissions and acknowledgements.
"^DIC",163.5,"B","FPPS QUEUED INVOICES",163.5)

"^DIC",163.7,163.7,0)
FEE BASIS FPPS AUDIT^163.7
"^DIC",163.7,163.7,0,"GL")
^FB(163.7,
"^DIC",163.7,163.7,"%D",0)
^^5^5^3030903^
"^DIC",163.7,163.7,"%D",1,0)
This file contains an audit log of changes made to a VistA Fee Basis
"^DIC",163.7,163.7,"%D",2,0)
invoice after the invoice has been initially transmitted to the Fee
"^DIC",163.7,163.7,"%D",3,0)
Payment Processing System (FPPS) located at the Health Administration
"^DIC",163.7,163.7,"%D",4,0)
Center (HAC).  Such changes are made using special edit options that
"^DIC",163.7,163.7,"%D",5,0)
automatically populate this audit log file.
"^DIC",163.7,"B","FEE BASIS FPPS AUDIT",163.7)

**END**
**END**
