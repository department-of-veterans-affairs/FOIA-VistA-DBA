Released XU*8*64 SEQ #50
Extracted from mail message
**KIDS**:XU*8.0*64^

**INSTALL NAME**
XU*8.0*64
"BLD",5,0)
XU*8.0*64^KERNEL^0^^n
"BLD",5,1,0)
^^2^2^2970606^
"BLD",5,1,1,0)
Numerous Kernel fixes.
"BLD",5,1,2,0)

"BLD",5,4,0)
^9.64PA^^
"BLD",5,"ABPKG")
n
"BLD",5,"KRN",0)
^9.67PA^19^12
"BLD",5,"KRN",.4,0)
.4
"BLD",5,"KRN",.401,0)
.401
"BLD",5,"KRN",.402,0)
.402
"BLD",5,"KRN",.403,0)
.403
"BLD",5,"KRN",.5,0)
.5
"BLD",5,"KRN",.84,0)
.84
"BLD",5,"KRN",3.6,0)
3.6
"BLD",5,"KRN",3.8,0)
3.8
"BLD",5,"KRN",9.2,0)
9.2
"BLD",5,"KRN",9.8,0)
9.8
"BLD",5,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",5,"KRN",9.8,"NM",2,0)
XQSMD3^^0^B19469925
"BLD",5,"KRN",9.8,"NM",3,0)
ZTM^^0^B22577633
"BLD",5,"KRN",9.8,"NM",4,0)
ZTMS3^^0^B21527618
"BLD",5,"KRN",9.8,"NM","B","XQSMD3",2)

"BLD",5,"KRN",9.8,"NM","B","ZTM",3)

"BLD",5,"KRN",9.8,"NM","B","ZTMS3",4)

"BLD",5,"KRN",19,0)
19
"BLD",5,"KRN",19.1,0)
19.1
"BLD",5,"KRN","B",.4,.4)

"BLD",5,"KRN","B",.401,.401)

"BLD",5,"KRN","B",.402,.402)

"BLD",5,"KRN","B",.403,.403)

"BLD",5,"KRN","B",.5,.5)

"BLD",5,"KRN","B",.84,.84)

"BLD",5,"KRN","B",3.6,3.6)

"BLD",5,"KRN","B",3.8,3.8)

"BLD",5,"KRN","B",9.2,9.2)

"BLD",5,"KRN","B",9.8,9.8)

"BLD",5,"KRN","B",19,19)

"BLD",5,"KRN","B",19.1,19.1)

"BLD",5,"QUES",0)
^9.62^^
"BLD",5,"REQB",0)
^9.611^^
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2970507^.5
"PKG",3,22,1,"PAH",1,0)
64
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^2970702
"PKG",3,22,1,"PAH",1,1,1,0)
Numerous Kernel fixes.
"PKG",3,22,1,"PAH",1,1,2,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","XQSMD3")
0^2^B19469925
"RTN","XQSMD3",1,0)
XQSMD3 ; SEA/MJM - Secure MenuMan Delegation utilities; 5/3/88  3:34 PM ;06/01/95  12:03
"RTN","XQSMD3",2,0)
 ;;8.0;KERNEL;**64**;Jul 10, 1995
"RTN","XQSMD3",3,0)
INIT S U="^",XQNGO=1,XQLEV="" S (XQDOP,XQDEL,XQPRO)=0 S:DUZ(0)="@"!($D(^XUSEC("XUMGR",DUZ))) XQPRO=1
"RTN","XQSMD3",4,0)
 I $S('$D(IOM):1,IOM=0:1,'$D(IOSL):1,'$L(IOSL):1,'$D(IOF):1,'$L(IOF):1,'$D(IO):1,1:0) S IOP="HOME" D ^%ZIS I POP W !!,"*** DEVICE ERROR ***",!,?5,"-exiting-" G OUT
"RTN","XQSMD3",5,0)
 S:'$D(DTIME)#2 DTIME=60
"RTN","XQSMD3",6,0)
 S %DT="",X="T" D ^%DT S XQDT=Y X ^DD("DD") S XQDATE=Y K %DT
"RTN","XQSMD3",7,0)
 S DIC=200,DIC(0)="FMNZ",X="`"_DUZ D ^DIC K DIC G:+Y<0 OUT S XQMGR=$P(Y(0,0),",",2)_" "_$P(Y(0,0),",",1)
"RTN","XQSMD3",8,0)
 S:XQPRO XQLEV=0 S:'$L(XQLEV)&($D(^VA(200,DUZ,19))#2) XQLEV=$P(^(19),U,3) W:'$L(XQLEV) !,"Level problem. No action permitted." G:'$L(XQLEV) OUT
"RTN","XQSMD3",9,0)
 ;
"RTN","XQSMD3",10,0)
USER1 ;Find the user who's delegated options will be transfered.
"RTN","XQSMD3",11,0)
 R !!,"Please enter the user currently holding the options :",XQ:DTIME S:'$T XQ=U G:XQ=U OUT I '$L(XQ)!(XQ="?") W !!,"Enter delegate's name,'^' to quit,'??' for User list, or '???' for help.",! G USER1
"RTN","XQSMD3",12,0)
 I XQ="??" S X="?",DIC=200,DIC(0)="Q" D ^DIC K DIC G USER1
"RTN","XQSMD3",13,0)
 I XQ="???" S XQH="XQSMD-REPLICATE" D EN^XQH G USER1
"RTN","XQSMD3",14,0)
 S X=XQ,DIC(0)="QMENZ",DIC=200 D ^DIC I +Y<1 W !!,"Not a know user.  Try again or enter a '^' to quit." G USER1
"RTN","XQSMD3",15,0)
 I '$D(^VA(200,+Y,19.5,0))!($O(^(0))="") W !!,Y(0,0)," has not been delegated any menu options to transfer." G USER1
"RTN","XQSMD3",16,0)
 S XQPERX="^VA(200,"_+Y_",19.5,",XQU1=$P(Y(0,0),",",2)_" "_$P(Y(0,0),",",1),XQU1Y=+Y
"RTN","XQSMD3",17,0)
 S XQU1L=$P(^VA(200,+XQU1Y,19),U,3) I XQLEV>XQU1L W !!,"You may not, in this case, remove the options of ",XQU1 S XQDEL=0 G USER2
"RTN","XQSMD3",18,0)
 ;
"RTN","XQSMD3",19,0)
RPLC W !!,"Should ALL delegated options be removed from ",XQU1,!,"   after they have been transferred? N// " R XQ:DTIME S:'$T XQ=U G:XQ=U OUT S:'$L(XQ) XQ="N" I XQ="?" W !!,"Please enter 'Y' or 'N', '^' to quit, or '??' for help.",! G RPLC
"RTN","XQSMD3",20,0)
 I XQ="??" S XQH="XQSMD-REMOVE" D EN^XQH G RPLC
"RTN","XQSMD3",21,0)
 I "YyNn"'[XQ W !,"Please answer 'Y' or 'N' " G RPLC
"RTN","XQSMD3",22,0)
 S:XQ["Y"!(XQ["y") XQDEL=1
"RTN","XQSMD3",23,0)
 ;
"RTN","XQSMD3",24,0)
USER2 ;Get the name of the person to whom these options will be transfered
"RTN","XQSMD3",25,0)
 W !!,"Please enter the user who will get the same options as ",XQU1,!,"   now has: " R XQ:DTIME S:'$T XQ=U G:XQ=U OUT I XQ="?"!('$L(XQ)) W !!,"Enter User's name,'^' to quit,'??' for User list, or '???'for help.",! G USER2
"RTN","XQSMD3",26,0)
 I XQ="??" S DIC=200,X="?",DIC(0)="Q" D ^DIC K DIC G USER2
"RTN","XQSMD3",27,0)
 I XQ="???" S XQH="XQSMD-REPLACEMENT" D EN^XQH G USER2
"RTN","XQSMD3",28,0)
 S X=XQ,DIC=200,DIC(0)="EFMQZ" D ^DIC I +Y<1 W !!,"Sorry, this person is not in the User File.  Try again or enter '^' to quit." G USER2
"RTN","XQSMD3",29,0)
 I $D(^VA(200,+Y,0)),'$L($P(^(.1),U,2)) W !!,"Sorry, this person is not a current user.  Try again or enter '^' to quit." G USER2
"RTN","XQSMD3",30,0)
 S XQHOLD(+Y)=Y(0,0),XQU2=$P(Y(0,0),",",2)_" "_$P(Y(0,0),",",1)
"RTN","XQSMD3",31,0)
 I +XQU1Y=+Y W !!,"Sorry, this is illogical: it's the same person!" G USER2
"RTN","XQSMD3",32,0)
 I +Y=+DUZ W !!,"Sorry, you can't be your own delegate." G OUT
"RTN","XQSMD3",33,0)
 ;
"RTN","XQSMD3",34,0)
ASK ;See if we all understand eachother.
"RTN","XQSMD3",35,0)
 W !!!,"You want to assign the options currently held by ",XQU1,!,?5,"to ",XQU2
"RTN","XQSMD3",36,0)
 W:XQDEL " and remove them from ",XQU1
"RTN","XQSMD3",37,0)
 W !!,"Is this correct? Y/N " R XQ:DTIME S:'$T XQ=U G:XQ=U OUT G:XQ["N"!(XQ["n") INIT S XQH="XQSMD-OK" I XQ["?" D EN^XQH G ASK
"RTN","XQSMD3",38,0)
 I XQ'["Y"&(XQ'["y") W !!,*7,"Please answer 'Y' or 'N'." G ASK
"RTN","XQSMD3",39,0)
 I XQDEL W !!,"Request to remove delegated options from ",XQU1," will be queued. "
"RTN","XQSMD3",40,0)
 ;
"RTN","XQSMD3",41,0)
 G ^XQSMD31
"RTN","XQSMD3",42,0)
 ;
"RTN","XQSMD3",43,0)
OUT K DIC,DIK,DA,DISYS,DINUM,POP,XQ,XQD,XQH,XQI,XQJ,XQK,XQL,XQM,XQN,XQT,XQON,XQON0,XQAL,XQDATE,XQDEL,XQDT,XQDUZ,XQLEV,XQLK,XQMG,XQMGR,XQNAM,XQNGO,XQUF,XQPRO,XQSTART,XQEND,XQHOLD,XQKEY,X,Y,XY,%,^TMP($J),XQDOP,C
"RTN","XQSMD3",44,0)
 Q
"RTN","ZTM")
0^3^B22577633
"RTN","ZTM",1,0)
%ZTM ;SEA/RDS-TaskMan: Manager, Part 1 (Main Loop) ;05/01/97  15:09
"RTN","ZTM",2,0)
 ;;8.0;KERNEL;**24,36,64**;JUL 10, 1995
"RTN","ZTM",3,0)
 ;
"RTN","ZTM",4,0)
LOOP ;Taskman's Main Loop
"RTN","ZTM",5,0)
 F %ZTLOOP=0:1 S %ZTLOOP=%ZTLOOP#8 D CHECK,SCHQ,IDLE:%ZTCHK
"RTN","ZTM",6,0)
 S %ZTFALL="" G LOOP
"RTN","ZTM",7,0)
 ;
"RTN","ZTM",8,0)
CHECK ;LOOP--Check Status And Update Loop Data
"RTN","ZTM",9,0)
 Q:%ZTLOOP&$G(%ZTCHK)
"RTN","ZTM",10,0)
 I $D(^%ZTSCH("RUN"))[0 K ^%ZTSCH("STATUS",$J) H
"RTN","ZTM",11,0)
 S ^%ZTSCH("RUN")=$H
"RTN","ZTM",12,0)
 I $D(^%ZTSCH("WAIT"))#2 D STATUS("WAIT^Taskman Waiting") H 5 G CHECK
"RTN","ZTM",13,0)
 ;
"RTN","ZTM",14,0)
 I $D(^%ZTSCH("UPDATE",$J))[0 D UPDATE^%ZTM5 D
"RTN","ZTM",15,0)
 . Q:"GP"[%ZTYPE
"RTN","ZTM",16,0)
 . K ^%ZTSCH("STATUS")
"RTN","ZTM",17,0)
 . S ^%ZTSCH("RUN")=%ZTNODE_" is the wrong type of volume set for TaskMan."
"RTN","ZTM",18,0)
 . H
"RTN","ZTM",19,0)
 I %ZTVLI D STATUS("PAUSE^Logons Inhibited") H 60 G CHECK ;Set in %ZTM5
"RTN","ZTM",20,0)
 I @%ZTNLG D INHIBIT^%ZTM5(1),STATUS("PAUSE^No Signons Allowed") H 60 G CHECK
"RTN","ZTM",21,0)
 I $G(^%ZIS(14.5,"LOGON",%ZTVOL)) D INHIBIT^%ZTM5(0) ;Check field
"RTN","ZTM",22,0)
 I $D(ZTREQUIR)#2 D STATUS("PAUSE^Required link to "_ZTREQUIR_" is down.") H 60 D REQUIR^%ZTM5 G CHECK
"RTN","ZTM",23,0)
 ;
"RTN","ZTM",24,0)
 I $D(^%ZTSCH("LINK"))#2,$$DIFF($H,^("LINK"))>900 D LINK^%ZTM3
"RTN","ZTM",25,0)
 ;
"RTN","ZTM",26,0)
 X ^%ZOSF("ACTJ") S %ZTRUN=%ZTVMJ>Y
"RTN","ZTM",27,0)
 I %ZTRUN,%ZTPFLG("BAL")]"" D BALANCE^%ZTM6 I $D(ZTOVERLD)#2 D STATUS("BALANCE^This cpu ("_%ZTPAIR_") is waiting to balance the load.") H 5 G CHECK
"RTN","ZTM",28,0)
 I %ZTRUN D STATUS("RUN^Main Loop")
"RTN","ZTM",29,0)
 E  D STATUS("RUN^Taskman Job Limit Reached")
"RTN","ZTM",30,0)
 Q
"RTN","ZTM",31,0)
 ;
"RTN","ZTM",32,0)
STATUS(MSG) ;Record TM status
"RTN","ZTM",33,0)
 S ^%ZTSCH("STATUS",$J)=$H_"^"_MSG Q
"RTN","ZTM",34,0)
 ;
"RTN","ZTM",35,0)
SCHQ ;LOOP--Check Schedule List
"RTN","ZTM",36,0)
 S %ZTIME=$$H3($H),ZTDTH=0,%ZTCHK=1,IO=""
"RTN","ZTM",37,0)
S1 S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:(ZTDTH>%ZTIME)  Q:('ZTDTH)!(ZTDTH'?6.N)  I +ZTDTH<0 K ^%ZTSCH(ZTDTH) G S1
"RTN","ZTM",38,0)
 S ZTSK=0
"RTN","ZTM",39,0)
S2 L  S ZTSK=$O(^%ZTSCH(ZTDTH,ZTSK)) G S1:ZTSK="" S ZTST=$G(^%ZTSCH(ZTDTH,ZTSK))
"RTN","ZTM",40,0)
 L ^%ZTSK(ZTSK):1 G S2:'$T K ^%ZTSCH(ZTDTH,ZTSK)
"RTN","ZTM",41,0)
 I $D(^%ZTSK(ZTSK,0))[0 S:$D(^%ZTSK(ZTSK)) $P(^(ZTSK,.1),U,1,3)="I^"_$H_U_1 G S2
"RTN","ZTM",42,0)
 I $D(^%ZTSK(ZTSK,.1))#2,$P(^(.1),U,10)]"" S $P(^(.1),U,1,3)="D^"_$H_"^1" G S2
"RTN","ZTM",43,0)
 D ^%ZTM1 G S2:%ZTREJCT
"RTN","ZTM",44,0)
 ;
"RTN","ZTM",45,0)
SEND ;Send Task To Submanager
"RTN","ZTM",46,0)
 S %ZTCHK=0,ZTPAIR=""
"RTN","ZTM",47,0)
 I ZTDVOL'=%ZTVOL D XLINK^%ZTM2 G:'ZTJOBIT SCHX
"RTN","ZTM",48,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,2)=$S(ZTYPE="C":"M",1:3)_U_$H
"RTN","ZTM",49,0)
 ;See that the Lock doesn't change $T with the 'I 1' at end.
"RTN","ZTM",50,0)
 I (ZTYPE'="C")&(%ZTNODE[ZTNODE) L +^%ZTSCH("JOB"):10 S ^%ZTSCH("JOB",ZTDTH,ZTSK)=IO I 1
"RTN","ZTM",51,0)
 E  L +^%ZTSCH("C"):10 S ZTPAIR=ZTDVOL_$S(ZTNODE]"":":"_ZTNODE,1:""),^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK)=IO
"RTN","ZTM",52,0)
 I '$D(^%ZTSCH("STOP")),(ZTYPE="C"!(%ZTRUN&$$NEWSUB)),'$$OOS(ZTPAIR) D
"RTN","ZTM",53,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",54,0)
 . Q
"RTN","ZTM",55,0)
SCHX L  K ZTREP Q
"RTN","ZTM",56,0)
 ;
"RTN","ZTM",57,0)
IDLE ;LOOP--DEV Node Maintenance; Backup JOB Commands
"RTN","ZTM",58,0)
 ;only proceed with idle work if 15 seconds since last check
"RTN","ZTM",59,0)
 S (ZTREC,ZTCVOL)="" H 2 Q:%ZTLOOP
"RTN","ZTM",60,0)
 L ^%ZTSCH("IDLE")
"RTN","ZTM",61,0)
 I $$DIFF(%ZTIME,^%ZTSCH("IDLE"),1)<15 L  Q
"RTN","ZTM",62,0)
 S ^%ZTSCH("IDLE")=%ZTIME L
"RTN","ZTM",63,0)
I1 ;
"RTN","ZTM",64,0)
 ;clear out old DEV nodes
"RTN","ZTM",65,0)
 I $D(^%ZTSCH("DEV")) S %ZTIO="" F  S %ZTIO=$O(^%ZTSCH("DEV",%ZTIO)) Q:%ZTIO=""  D
"RTN","ZTM",66,0)
 . L ^%ZTSCH("DEV",%ZTIO):5 I '$T Q
"RTN","ZTM",67,0)
 . N X S X=$G(^%ZTSCH("DEV",%ZTIO)) Q:'$L(X)
"RTN","ZTM",68,0)
 . I $$DIFF(%ZTIME,X,1)>120 K ^%ZTSCH("DEV",%ZTIO)
"RTN","ZTM",69,0)
 . Q
"RTN","ZTM",70,0)
 L  ;clear all locks.
"RTN","ZTM",71,0)
I2 ;
"RTN","ZTM",72,0)
 I $D(^%ZTSCH("STOP")) Q
"RTN","ZTM",73,0)
 ;job new submanagers cross-volume for each unfinished C list
"RTN","ZTM",74,0)
 I $D(^%ZTSCH("C")) D
"RTN","ZTM",75,0)
 . S X="ERCL^%ZTM2",@^%ZOSF("TRAP")
"RTN","ZTM",76,0)
 . S ZTVOL="" F  S ZTVOL=$O(^%ZTSCH("C",ZTVOL)) Q:ZTVOL=""  D
"RTN","ZTM",77,0)
 .. S ZTNODE="",ZTDVOL=ZTVOL S:ZTDVOL[":" ZTNODE=$P(ZTDVOL,":",2),ZTDVOL=$P(ZTDVOL,":")
"RTN","ZTM",78,0)
 .. S X=$G(^%ZTSCH("C",ZTVOL))
"RTN","ZTM",79,0)
 .. I $D(^%ZTSCH("LINK",ZTDVOL))!(X>9)!$$OOS(ZTVOL) Q
"RTN","ZTM",80,0)
 .. S ^%ZTSCH("C",ZTVOL)=X+1
"RTN","ZTM",81,0)
 .. S %ZTCHK=0,ZTUCI=$O(^%ZIS(14.6,"AV",ZTDVOL,""))
"RTN","ZTM",82,0)
 .. I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",83,0)
 .. Q
"RTN","ZTM",84,0)
 . Q
"RTN","ZTM",85,0)
I3 ;job off a new submanager if none are tending the Device List
"RTN","ZTM",86,0)
 I '%ZTRUN Q
"RTN","ZTM",87,0)
 I $$NEWSUB,$O(^%ZTSCH("IO",""))]"" D  Q
"RTN","ZTM",88,0)
 . Q:'$$SUBOK()
"RTN","ZTM",89,0)
 . S %ZTCHK=0,ZTUCI=%ZTUCI,ZTDVOL=%ZTVOL,ZTNODE=""
"RTN","ZTM",90,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",91,0)
 . Q
"RTN","ZTM",92,0)
I4 ;job off a new submanager if the Job List still has tasks
"RTN","ZTM",93,0)
 I $D(^%ZTSCH("JOB")) D
"RTN","ZTM",94,0)
 . ;D SUB^%ZTMS1(-1)
"RTN","ZTM",95,0)
 . Q:'$$SUBOK()  S %ZTCHK=0,ZTUCI=%ZTUCI,ZTDVOL=%ZTVOL,ZTNODE=""
"RTN","ZTM",96,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",97,0)
 . Q
"RTN","ZTM",98,0)
I5 ;Clean up %ZTSCH
"RTN","ZTM",99,0)
 S ZTDTH="0,0" F  S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:ZTDTH'[","  D
"RTN","ZTM",100,0)
 . N ZTSK,X L +^%ZTSCH(ZTDTH)
"RTN","ZTM",101,0)
 . S ZTSK=$O(^%ZTSCH(ZTDTH,0)) I ZTSK>0 S X=^(ZTSK),^%ZTSCH($$H3(ZTDTH),ZTSK)=X K ^%ZTSCH(ZTDTH,ZTSK)
"RTN","ZTM",102,0)
 . L -^%ZTSCH(ZTDTH)
"RTN","ZTM",103,0)
 . Q
"RTN","ZTM",104,0)
I9 K %ZTVS Q
"RTN","ZTM",105,0)
 ;
"RTN","ZTM",106,0)
DIFF(N,O,T) ;Diff in sec.
"RTN","ZTM",107,0)
 Q:$G(T) N-O ;For new seconds times
"RTN","ZTM",108,0)
 Q N-O*86400-$P(O,",",2)+$P(N,",",2)
"RTN","ZTM",109,0)
 ;
"RTN","ZTM",110,0)
OOS(BV) ;Check if Box-Volume is Out Of Service, Return 1 if OOS.
"RTN","ZTM",111,0)
 Q:BV="" 0 N %
"RTN","ZTM",112,0)
 S %=$O(^%ZIS(14.7,"B",BV,0)),%=$G(^%ZIS(14.7,+%,0))
"RTN","ZTM",113,0)
 Q:%="" 1 Q $P(%,U,11)=1
"RTN","ZTM",114,0)
 ;
"RTN","ZTM",115,0)
H3(%) ;Convert $H to seconds.
"RTN","ZTM",116,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTM",117,0)
H0(%) ;Covert from seconds to $H
"RTN","ZTM",118,0)
 Q (%\86400)_","_(%#86400)
"RTN","ZTM",119,0)
SUBOK() ;Check if sub's are starting, return 1 if OK
"RTN","ZTM",120,0)
 S ^%ZTSCH("SUB",%ZTPAIR,0)=$G(^%ZTSCH("SUB",%ZTPAIR,0))+1
"RTN","ZTM",121,0)
 Q ^%ZTSCH("SUB",%ZTPAIR,0)<10
"RTN","ZTM",122,0)
 ;
"RTN","ZTM",123,0)
NEWSUB() ;See if we need a new submanager
"RTN","ZTM",124,0)
 N JOBCNT,SUBS,%1,%2
"RTN","ZTM",125,0)
 S SUBS=^%ZTSCH("SUB",%ZTPAIR),JOBCNT=0,%1=$NA(^%ZTSCH("JOB"))
"RTN","ZTM",126,0)
 I SUBS<%ZTPFLG("MINSUB") Q 1
"RTN","ZTM",127,0)
 F  S %1=$Q(@%1) Q:%1'["JOB"  S JOBCNT=JOBCNT+1 Q:JOBCNT>SUBS
"RTN","ZTM",128,0)
 I SUBS<JOBCNT Q 1
"RTN","ZTM",129,0)
 Q 0
"RTN","ZTMS3")
0^4^B21527618
"RTN","ZTMS3",1,0)
%ZTMS3 ;SEA/RDS-TaskMan: Submanager, Part 5 (Run Task) ;06/26/97  13:25
"RTN","ZTMS3",2,0)
 ;;8.0;KERNEL;**1,18,36,49,64**;Jul 03, 1995
"RTN","ZTMS3",3,0)
 ;
"RTN","ZTMS3",4,0)
TASK ;SUBMGR--prepare and run task; cleanup after
"RTN","ZTMS3",5,0)
 ;
"RTN","ZTMS3",6,0)
BEFORE ;prepare task
"RTN","ZTMS3",7,0)
 ;submanager's variables
"RTN","ZTMS3",8,0)
 S ZTDEF=""
"RTN","ZTMS3",9,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,""))
"RTN","ZTMS3",10,0)
 I X]"",$D(^%ZIS(14.7,X,0))#2 S ZTDEF=^(0)
"RTN","ZTMS3",11,0)
 S DUZ=+$P(ZTREC,U,3)
"RTN","ZTMS3",12,0)
 S %ZTTV=ZTUCI_U_IOS_U_U_ZTSK_U_IO_U_IOT_U_ZTCPU_U_ZTNODE_U_DUZ_U_U_IOF_U_IOST_U_ZTPAIR_U_ZTYPE_U
"RTN","ZTMS3",13,0)
 S %ZTTV(0)=ZTRTN_U_$P(ZTREC,U,8,9)_U_$P(ZTREC,U,6)_U_ION_U_ZTUCI_U_$P(ZTREC,U,5)_U_$S($P(ZTREC,U,10)]"":$P(ZTREC,U,10),1:$P(ZTREC,U,3))_U_$J_U_ZTSYNCFL_U
"RTN","ZTMS3",14,0)
 S %ZTTV(2)=ZTPFLG("HOME")_U_ZTPFLG("MIN")_U_ZTPFLG("RT")
"RTN","ZTMS3",15,0)
 I $D(^%ZTSCH("LOGRSRC")) D
"RTN","ZTMS3",16,0)
 .S %ZTTV(1)="!"_$P(ZTREC,U,9)
"RTN","ZTMS3",17,0)
 .I %ZTTV(1)="!" S %ZTTV(1)="!"_$P(ZTRTN,U,2)
"RTN","ZTMS3",18,0)
 ;
"RTN","ZTMS3",19,0)
 ;external calls
"RTN","ZTMS3",20,0)
 D NOW^%DTC S DT=% ;DT is Date.time at this point.
"RTN","ZTMS3",21,0)
1 D SETNM^%ZOSV($E("BTask ",(ZTIO]"")+1,6)_(ZTSK#100000000))
"RTN","ZTMS3",22,0)
 ;
"RTN","ZTMS3",23,0)
 ;priority
"RTN","ZTMS3",24,0)
 S X=$P(ZTREC,U,15)
"RTN","ZTMS3",25,0)
 S X=$S(+X'=X:0,X'<1&(X'>10):X\1,1:0)
"RTN","ZTMS3",26,0)
 S Y=$S(IOS="":0,$D(^%ZIS(1,+IOS,0))[0:0,1:+$P(^(0),U,5))
"RTN","ZTMS3",27,0)
 S Y=$S(Y'<1&(Y'>10):Y\1,1:0)
"RTN","ZTMS3",28,0)
 S X=$S(Y:Y,X:X,$P(ZTDEF,U,4):$P(ZTDEF,U,4),1:10)
"RTN","ZTMS3",29,0)
 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",30,0)
 ;
"RTN","ZTMS3",31,0)
2 ;restore saved variables
"RTN","ZTMS3",32,0)
 S X=$O(^XTV(8989.3,1,4,"B",ZTCPU,0)) S:$P($G(^XTV(8989.3,1,4,+X,0)),U,6)="y" XRTL=ZTUCI
"RTN","ZTMS3",33,0)
 K %,%H,%I,%ZTI,%ZTIO,IO("C"),IO("T"),X,Y,ZTCPU,ZTDEF,ZTIOST,ZTIOT,ZTNODE,ZTPAIR,ZTPFLG,ZTREC,ZTREC2,ZTREC21,ZTREC25,ZTUCI,^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS3",34,0)
 S DUZ(0)="" D RESTORE^%ZTMS4
"RTN","ZTMS3",35,0)
 ;
"RTN","ZTMS3",36,0)
 ;force values
"RTN","ZTMS3",37,0)
 S DUZ=+DUZ,DTIME=0,ZTDESC=$G(^%ZTSK(ZTSK,.03)),ZTDTH=$H
"RTN","ZTMS3",38,0)
 I DUZ(0)="" S DUZ(0)=$S($D(^VA(200,DUZ,0))#2:$P(^(0),U,4),1:"")
"RTN","ZTMS3",39,0)
 I $D(DUZ(2))[0 S DUZ(2)=$S($D(^VA(200,DUZ,2,0)):$O(^(0)),1:0)
"RTN","ZTMS3",40,0)
 S ^XUTL("XQ",$J,0)=DT,^("ZTSK")=ZTDESC
"RTN","ZTMS3",41,0)
 S X="DUZ" F  S X=$Q(@X) Q:X=""  I $D(@X) S ^XUTL("XQ",$J,$TR(X,""""))=@X
"RTN","ZTMS3",42,0)
 F X="DUZ","IO","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY","XQVOL" I $D(@X) S ^XUTL("XQ",$J,X)=@X
"RTN","ZTMS3",43,0)
3 ;
"RTN","ZTMS3",44,0)
 ;final checks & sets
"RTN","ZTMS3",45,0)
 I '$D(^%ZTSK(ZTSK)) S ZTTASK=0 D AFTER Q
"RTN","ZTMS3",46,0)
 I $S($D(^%ZTSK(ZTSK,.1))[0:0,1:$P(^(.1),U,10)]"") S $P(^%ZTSK(ZTSK,.1),U,1,3)="D^"_$H_"^4",ZTTASK=0 D AFTER Q
"RTN","ZTMS3",47,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=5_U_$H_U
"RTN","ZTMS3",48,0)
 S ZTQUEUED=ZTSK,ZTSTAT="1 General error"
"RTN","ZTMS3",49,0)
 S ^%ZTSCH("TASK",ZTSK)=%ZTTV(0)_$H
"RTN","ZTMS3",50,0)
 ;
"RTN","ZTMS3",51,0)
RUN ;run task
"RTN","ZTMS3",52,0)
 I ^%ZOSF("OS")["MSM" D
"RTN","ZTMS3",53,0)
 . I $P($ZV,"Version ",2)]]"4.3.0" D PURGELST^%MSMOPS Q
"RTN","ZTMS3",54,0)
 . I ^%ZOSF("OS")["MSM-PC/PLUS",$P($ZV,"Version ",2)]]"4.0.11D" V 360:$J:2**$V($V(58,-5)+8,-3,2)-1:4 ZSYNC  Q
"RTN","ZTMS3",55,0)
 . Q
"RTN","ZTMS3",56,0)
 L
"RTN","ZTMS3",57,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,U,13),"")),0),U,3)="Y" D LOGIN^%ZTMS4
"RTN","ZTMS3",58,0)
 I $D(%ZTTV(1)) D LOGRSRC^%ZOSV(%ZTTV(1))
"RTN","ZTMS3",59,0)
 S DT=DT\1 S:ZTRTN="ZTSK^XQ1" ZTREQ="@"
"RTN","ZTMS3",60,0)
 X "N %ZTTV D @ZTRTN"
"RTN","ZTMS3",61,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$AFTR ZTMS")
"RTN","ZTMS3",62,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,"^",13),"")),0),"^",3)="Y" D LOGOUT^%ZTMS4
"RTN","ZTMS3",63,0)
 L  ;Clear all user locks.
"RTN","ZTMS3",64,0)
 ;
"RTN","ZTMS3",65,0)
AFTER ;cleanup after task; reset partition
"RTN","ZTMS3",66,0)
 S U="^",ZTSK=$P(%ZTTV,U,4) L +^%ZTSK(ZTSK)
"RTN","ZTMS3",67,0)
 I $D(ZTTASK)[0 K ^%ZTSCH("TASK",ZTSK) S ZTQUEUED=.6,ZTTASK=1
"RTN","ZTMS3",68,0)
 S X=10 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",69,0)
 D SETNM^%ZOSV("Sub "_$J) ;Change name back
"RTN","ZTMS3",70,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J) I $T(XUTL^XUSCLEAN)]"" D XUTL^XUSCLEAN
"RTN","ZTMS3",71,0)
 S ZTUCI=$P(%ZTTV,U),IOS=$P(%ZTTV,U,2),(IO,IO(0),%ZTIO)=$P(%ZTTV,U,5),IOT=$P(%ZTTV,U,6),ZTCPU=$P(%ZTTV,U,7),ZTNODE=$P(%ZTTV,U,8)
"RTN","ZTMS3",72,0)
 S IOF=$P(%ZTTV,U,11),IOST=$P(%ZTTV,U,12),ZTPAIR=$P(%ZTTV,U,13),ZTYPE=$P(%ZTTV,U,14),ZTSYNCFL=$P(%ZTTV(0),U,11)
"RTN","ZTMS3",73,0)
 S ZTPFLG("HOME")=$P(%ZTTV(2),U,1),ZTPFLG("MIN")=$P(%ZTTV(2),U,2),ZTPFLG("RT")=$P(%ZTTV(2),U,3)
"RTN","ZTMS3",74,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2($S($G(ZTSTAT):"S",1:"D"),ZTSYNCFL,IO,$G(ZTSTAT)) D SCHSYNC^%ZTMS2(ZTSYNCFL,IO):'$G(ZTSTAT)
"RTN","ZTMS3",75,0)
 D POST^%ZTMS4:ZTTASK,CLOSE
"RTN","ZTMS3",76,0)
 K (%ZTIO,%ZTTV,IO,IOF,IOS,IOST,IOT,U,ZTCPU,ZTNODE,ZTNONEXT,ZTPAIR,ZTPFLG,ZTQUEUED,ZTREQ,ZTSTOP,ZTUCI,ZTYPE),IO("C"),IO("T"),IO("ERROR"),IO("LASTERR")
"RTN","ZTMS3",77,0)
 S DUZ=0,DUZ(0)="@",ZTQUEUED=0
"RTN","ZTMS3",78,0)
 L  ;Clear all locks, -^%ZTSK(ZTSK)
"RTN","ZTMS3",79,0)
 Q
"RTN","ZTMS3",80,0)
 ;
"RTN","ZTMS3",81,0)
CLOSE ;RUN--close &/or close execute
"RTN","ZTMS3",82,0)
 I %ZTIO="" S ZTNONEXT=1 G CLX
"RTN","ZTMS3",83,0)
 N ZTUCI,ZTCPU,ZTNODE,IOCPU,%IO
"RTN","ZTMS3",84,0)
 I IOT="HFS"!(IOT="SPL") S ZTNONEXT=1
"RTN","ZTMS3",85,0)
 K IO("C") S:IOT'="TRM" IO("C")=1
"RTN","ZTMS3",86,0)
 S:$D(IO("CLOSE")) IO("T")=1
"RTN","ZTMS3",87,0)
 ;Here is the Lock and hang to allow IDCU ports to reset. See %ZTMS2.
"RTN","ZTMS3",88,0)
 I IOST["MINIOUT" S IO("C")=1 L +^%ZTSCH("NETMAIL",%ZTIO):60
"RTN","ZTMS3",89,0)
 I $D(IO(1,IO))#2 D ^%ZISC
"RTN","ZTMS3",90,0)
 I IOST["MINIOUT" H 6 ;Wait for terminal server to reset.
"RTN","ZTMS3",91,0)
 ;Unlock of all locks is done in clean
"RTN","ZTMS3",92,0)
 ;See that all devices are closed.
"RTN","ZTMS3",93,0)
CLX S %IO="" F  S %IO=$O(IO(1,%IO)) Q:%IO=""  I %IO'=IO K IO(1,%IO) C %IO
"RTN","ZTMS3",94,0)
 Q
"RTN","ZTMS3",95,0)
 ;
"VER")
8.0^21.0
**END**
**END**
