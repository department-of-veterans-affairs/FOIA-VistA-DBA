Released IB*2*359 SEQ #341
Extracted from mail message
**KIDS**:IB*2.0*359^

**INSTALL NAME**
IB*2.0*359
"BLD",7025,0)
IB*2.0*359^INTEGRATED BILLING^0^3061108^y
"BLD",7025,1,0)
^^9^9^3061108^
"BLD",7025,1,1,0)
This patch insures that while navigating in the Claims
"BLD",7025,1,2,0)
Tracking Edit Option after the user switches patients 
"BLD",7025,1,3,0)
while in the View Patient (VP) menu and returns to the 
"BLD",7025,1,4,0)
list of the patients claims that the claims that are 
"BLD",7025,1,5,0)
listed are actually the indicated patients claims.  It
"BLD",7025,1,6,0)
also adds adjustment code CO 194 to the list of codes
"BLD",7025,1,7,0)
automatically processed and modifies function call
"BLD",7025,1,8,0)
GETWNR^IBCNSMM1 to return only Part A or Part B
"BLD",7025,1,9,0)
Medicare plans like it is supposed to.
"BLD",7025,4,0)
^9.64PA^^
"BLD",7025,6)
2^
"BLD",7025,6.3)
9
"BLD",7025,"INID")
^n
"BLD",7025,"INIT")
EN^IB20P359
"BLD",7025,"KRN",0)
^9.67PA^8989.52^19
"BLD",7025,"KRN",.4,0)
.4
"BLD",7025,"KRN",.401,0)
.401
"BLD",7025,"KRN",.402,0)
.402
"BLD",7025,"KRN",.403,0)
.403
"BLD",7025,"KRN",.5,0)
.5
"BLD",7025,"KRN",.84,0)
.84
"BLD",7025,"KRN",3.6,0)
3.6
"BLD",7025,"KRN",3.8,0)
3.8
"BLD",7025,"KRN",9.2,0)
9.2
"BLD",7025,"KRN",9.8,0)
9.8
"BLD",7025,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7025,"KRN",9.8,"NM",1,0)
IBTRCD1^^0^B26162223
"BLD",7025,"KRN",9.8,"NM",2,0)
IBCEMQC^^0^B29878168
"BLD",7025,"KRN",9.8,"NM",3,0)
IBCNSMM1^^0^B25964261
"BLD",7025,"KRN",9.8,"NM","B","IBCEMQC",2)

"BLD",7025,"KRN",9.8,"NM","B","IBCNSMM1",3)

"BLD",7025,"KRN",9.8,"NM","B","IBTRCD1",1)

"BLD",7025,"KRN",19,0)
19
"BLD",7025,"KRN",19,"NM",0)
^9.68A^^
"BLD",7025,"KRN",19.1,0)
19.1
"BLD",7025,"KRN",101,0)
101
"BLD",7025,"KRN",409.61,0)
409.61
"BLD",7025,"KRN",771,0)
771
"BLD",7025,"KRN",870,0)
870
"BLD",7025,"KRN",8989.51,0)
8989.51
"BLD",7025,"KRN",8989.52,0)
8989.52
"BLD",7025,"KRN",8994,0)
8994
"BLD",7025,"KRN","B",.4,.4)

"BLD",7025,"KRN","B",.401,.401)

"BLD",7025,"KRN","B",.402,.402)

"BLD",7025,"KRN","B",.403,.403)

"BLD",7025,"KRN","B",.5,.5)

"BLD",7025,"KRN","B",.84,.84)

"BLD",7025,"KRN","B",3.6,3.6)

"BLD",7025,"KRN","B",3.8,3.8)

"BLD",7025,"KRN","B",9.2,9.2)

"BLD",7025,"KRN","B",9.8,9.8)

"BLD",7025,"KRN","B",19,19)

"BLD",7025,"KRN","B",19.1,19.1)

"BLD",7025,"KRN","B",101,101)

"BLD",7025,"KRN","B",409.61,409.61)

"BLD",7025,"KRN","B",771,771)

"BLD",7025,"KRN","B",870,870)

"BLD",7025,"KRN","B",8989.51,8989.51)

"BLD",7025,"KRN","B",8989.52,8989.52)

"BLD",7025,"KRN","B",8994,8994)

"BLD",7025,"QUES",0)
^9.62^^
"BLD",7025,"REQB",0)
^9.611^2^2
"BLD",7025,"REQB",1,0)
IB*2.0*103^1
"BLD",7025,"REQB",2,0)
IB*2.0*350^1
"BLD",7025,"REQB","B","IB*2.0*103",1)

"BLD",7025,"REQB","B","IB*2.0*350",2)

"INIT")
EN^IB20P359
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
359^3061108^123457090
"PKG",200,22,1,"PAH",1,1,0)
^^9^9^3061108
"PKG",200,22,1,"PAH",1,1,1,0)
This patch insures that while navigating in the Claims
"PKG",200,22,1,"PAH",1,1,2,0)
Tracking Edit Option after the user switches patients 
"PKG",200,22,1,"PAH",1,1,3,0)
while in the View Patient (VP) menu and returns to the 
"PKG",200,22,1,"PAH",1,1,4,0)
list of the patients claims that the claims that are 
"PKG",200,22,1,"PAH",1,1,5,0)
listed are actually the indicated patients claims.  It
"PKG",200,22,1,"PAH",1,1,6,0)
also adds adjustment code CO 194 to the list of codes
"PKG",200,22,1,"PAH",1,1,7,0)
automatically processed and modifies function call
"PKG",200,22,1,"PAH",1,1,8,0)
GETWNR^IBCNSMM1 to return only Part A or Part B
"PKG",200,22,1,"PAH",1,1,9,0)
Medicare plans like it is supposed to.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","IB20P359")
0^^B18924771^n/a
"RTN","IB20P359",1,0)
IB20P359 ;ISP/RRA - Post-Init routine for IB*2.0*359 ; 11/8/06 3:14pm
"RTN","IB20P359",2,0)
 ;;2.0;INTEGRATED BILLING;**359**;21-MAR-94;Build 9
"RTN","IB20P359",3,0)
POST ; This routine makes a call to GETWNR^IBCNSMM1 to verify that what
"RTN","IB20P359",4,0)
 ; is returned by this function is actually what the user wants.
"RTN","IB20P359",5,0)
 ; Since this patch relies on a free text field to be entered 
"RTN","IB20P359",6,0)
 ; according to site/plan standardization any site that does not
"RTN","IB20P359",7,0)
 ; comply with this standardization may experience error or
"RTN","IB20P359",8,0)
 ; incorrect data.
"RTN","IB20P359",9,0)
 ;
"RTN","IB20P359",10,0)
 ;
"RTN","IB20P359",11,0)
 Q
"RTN","IB20P359",12,0)
EN ;Call the function and store the results
"RTN","IB20P359",13,0)
 K IBWNRPL,IBPRTA,IBPRTB,IBERR,IBERCTR,IBPRTAGN,IBPRTBGN
"RTN","IB20P359",14,0)
 S IBERCTR=9 ;FIRST 9 LINES OF IBERR() ARE USED IN FORMATTING THE REPORT SENT TO IB EDI SUPERVISORS
"RTN","IB20P359",15,0)
 D MES^XPDUTL("CHECKING FOR PROBLEMATIC ENTRIES IN THE GROUP INSURANCE PLAN FILE...")
"RTN","IB20P359",16,0)
 D MES^XPDUTL("")
"RTN","IB20P359",17,0)
 S IBWNRPL=$$GETWNR^IBCNSMM1
"RTN","IB20P359",18,0)
 S IBPRTA=$P(IBWNRPL,"^",3),IBPRTB=$P(IBWNRPL,"^",5)
"RTN","IB20P359",19,0)
 D IBPRTA,IBPRTB
"RTN","IB20P359",20,0)
 I IBERCTR=9 D MES^XPDUTL("NO POTENTIAL ISSUES WITH GROUP INSURANCE PLAN FILE FOUND")
"RTN","IB20P359",21,0)
 I IBERCTR>9 D MES^XPDUTL("POTENTIAL ISSUES FOUND - MESSAGE WILL BE SENT TO IB EDI SUPERVISOR MAIL GROUP"),IBSNDMSG
"RTN","IB20P359",22,0)
 Q
"RTN","IB20P359",23,0)
 ;
"RTN","IB20P359",24,0)
 ;
"RTN","IB20P359",25,0)
IBPRTA ;PROCESS THE RETURNED IBPRTA FOR POTENTIAL ERRORS
"RTN","IB20P359",26,0)
 I '$G(IBPRTA) S IBERCTR=IBERCTR+1,IBERR(IBERCTR)="-0 Results found for Standard Medicare (WNR) plan PART A." D  Q   ;NO PART A PLAN FOUND
"RTN","IB20P359",27,0)
 .S IBERCTR=IBERCTR+1,IBERR(IBERCTR)="Please verify Standard Medicare (WNR) plan PART A is setup properly"
"RTN","IB20P359",28,0)
 .S IBERCTR=IBERCTR+1,IBERR(IBERCTR)=""
"RTN","IB20P359",29,0)
 S IBPRTA=$G(^IBA(355.3,IBPRTA,0))
"RTN","IB20P359",30,0)
 S IBPRTAGN=$P(IBPRTA,"^",4)
"RTN","IB20P359",31,0)
 S IBPRTAGN=$TR(IBPRTAGN,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","IB20P359",32,0)
 I IBPRTAGN["RR"!(IBPRTAGN["RAIL") S IBERCTR=IBERCTR+1,IBERR(IBERCTR)="-The GROUP NUMBER for Plan A has characteristics of a Railroad plan." D
"RTN","IB20P359",33,0)
 .S IBERCTR=IBERCTR+1,IBERR(IBERCTR)="GROUP NUMBER = "_IBPRTAGN
"RTN","IB20P359",34,0)
 .S IBERCTR=IBERCTR+1,IBERR(IBERCTR)="Please verify this plan is in fact a standard Part A plan - (ien = "_+IBPRTA_")"
"RTN","IB20P359",35,0)
 .S IBERCTR=IBERCTR+1,IBERR(IBERCTR)=""
"RTN","IB20P359",36,0)
 Q
"RTN","IB20P359",37,0)
 ;
"RTN","IB20P359",38,0)
 ;
"RTN","IB20P359",39,0)
IBPRTB ;PROCESS THE RETURNED IBPRTB FOR POTENTIAL ERRORS
"RTN","IB20P359",40,0)
 I '$G(IBPRTB) S IBERCTR=IBERCTR+1,IBERR(IBERCTR)="-0 Results found for Standard Medicare (WNR) plan PART B." D  Q   ;NO PART B PLAN FOUND
"RTN","IB20P359",41,0)
 .S IBERCTR=IBERCTR+1,IBERR(IBERCTR)="Please verify Standard Medicare (WNR) plan PART B is setup properly."
"RTN","IB20P359",42,0)
 .S IBERCTR=IBERCTR+1,IBERR(IBERCTR)=""
"RTN","IB20P359",43,0)
 S IBPRTB=$G(^IBA(355.3,IBPRTB,0))
"RTN","IB20P359",44,0)
 S IBPRTBGN=$P(IBPRTB,"^",4)
"RTN","IB20P359",45,0)
 S IBPRTBGN=$TR(IBPRTBGN,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","IB20P359",46,0)
 I IBPRTBGN["RR"!(IBPRTBGN["RAIL") S IBERCTR=IBERCTR+1,IBERR(IBERCTR)="-The GROUP NUMBER for Plan B has characteristics of a Railroad plan." D
"RTN","IB20P359",47,0)
 .S IBERCTR=IBERCTR+1,IBERR(IBERCTR)="GROUP NUMBER = "_IBPRTBGN
"RTN","IB20P359",48,0)
 .S IBERCTR=IBERCTR+1,IBERR(IBERCTR)="Please verify this plan is in fact a standard Part B plan - (ien = "_+IBPRTB_")"
"RTN","IB20P359",49,0)
 .S IBERCTR=IBERCTR+1,IBERR(IBERCTR)=""
"RTN","IB20P359",50,0)
 Q
"RTN","IB20P359",51,0)
 ;
"RTN","IB20P359",52,0)
 ;
"RTN","IB20P359",53,0)
IBSNDMSG ;SEND MESSAGE TO IB EDI SUPERVISOR MAIL GROUP
"RTN","IB20P359",54,0)
 N IBPARAM,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","IB20P359",55,0)
 S XMSUB="Potential issues with the GROUP INSURANCE PLAN (355.3) file"
"RTN","IB20P359",56,0)
 S XMDUZ=DUZ,XMTEXT="IBERR"
"RTN","IB20P359",57,0)
 S IBPARAM("FROM")="PATCH IB*2.0*359 POST INSTALL"
"RTN","IB20P359",58,0)
 S XMY("G.IB EDI SUPERVISOR")=""
"RTN","IB20P359",59,0)
 S IBERR(1)="This report is designed to find inconsistencies in the GROUP INSURANCE"
"RTN","IB20P359",60,0)
 S IBERR(2)="PLAN (355.3) file.  There are functions in IB that rely on standard naming"
"RTN","IB20P359",61,0)
 S IBERR(3)="conventions when fields are entered for the Medicare (WNR) Plans A and B."
"RTN","IB20P359",62,0)
 S IBERR(4)="These functions operate under the premise that Part A and Part B plans"
"RTN","IB20P359",63,0)
 S IBERR(5)="use GROUP NAME (.03) fields of ""PART A"" and ""PART B"" respectively."
"RTN","IB20P359",64,0)
 S IBERR(6)=""
"RTN","IB20P359",65,0)
 S IBERR(7)=""
"RTN","IB20P359",66,0)
 S IBERR(8)="POSSIBLE ERRORS-"
"RTN","IB20P359",67,0)
 S IBERR(9)="-------------------------------------------------------------------------"
"RTN","IB20P359",68,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUB,XMTEXT,.XMY,.IBPARAM,"","")
"RTN","IB20P359",69,0)
 D MES^XPDUTL("MESSAGE SENT")
"RTN","IB20P359",70,0)
 Q
"RTN","IBCEMQC")
0^2^B29878168^B29836641
"RTN","IBCEMQC",1,0)
IBCEMQC ;ALB/ESG - MRA EOB CRITERIA FOR AUTO-AUTHORIZE ; 11/1/06 10:34am
"RTN","IBCEMQC",2,0)
 ;;2.0;INTEGRATED BILLING;**155,323,302,350,359**;21-MAR-94;Build 9
"RTN","IBCEMQC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMQC",4,0)
 ;
"RTN","IBCEMQC",5,0)
 Q   ; must be called at proper entry point
"RTN","IBCEMQC",6,0)
 ;
"RTN","IBCEMQC",7,0)
CRIT(IBEOB) ; Function to determine if EOB entry meets the criteria for
"RTN","IBCEMQC",8,0)
 ; auto-authorization and secondary claim submission
"RTN","IBCEMQC",9,0)
 ;
"RTN","IBCEMQC",10,0)
 ; Input:  IBEOB - internal entry number for an entry in 361.1
"RTN","IBCEMQC",11,0)
 ;
"RTN","IBCEMQC",12,0)
 ; Output:  This function returns a pieced string
"RTN","IBCEMQC",13,0)
 ;          [1] 0 or 1, EOB meets criteria
"RTN","IBCEMQC",14,0)
 ;          [2] error message if the first piece is 0
"RTN","IBCEMQC",15,0)
 ;
"RTN","IBCEMQC",16,0)
 NEW IBM,IBM3,IBM5,IBIFN,PCE,REMC,Z,OK,REASON,STOP,IBPTRESP
"RTN","IBCEMQC",17,0)
 ;
"RTN","IBCEMQC",18,0)
 S OK=0,REASON="Unknown",IBEOB=+$G(IBEOB)
"RTN","IBCEMQC",19,0)
 ;
"RTN","IBCEMQC",20,0)
 S IBM=$G(^IBM(361.1,IBEOB,0)) I IBM="" S REASON="No EOB Data Found" G CRITX
"RTN","IBCEMQC",21,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) S REASON="Filing Errors" G CRITX
"RTN","IBCEMQC",22,0)
 I $P(IBM,U,13)'=1 S REASON="Claim Status is "_$$GET1^DIQ(361.1,IBEOB_",",.13)_".  It must be PROCESSED." G CRITX
"RTN","IBCEMQC",23,0)
 ;
"RTN","IBCEMQC",24,0)
 I $P(IBM,U,4)'=1 S REASON="The EOB Type is not Medicare MRA" G CRITX
"RTN","IBCEMQC",25,0)
 ;
"RTN","IBCEMQC",26,0)
 ; If any other MRA's on file for this bill failed the auto-generation
"RTN","IBCEMQC",27,0)
 ; check, then this MRA must also fail the check
"RTN","IBCEMQC",28,0)
 S IBIFN=+IBM,Z=0,STOP=0
"RTN","IBCEMQC",29,0)
 F  S Z=$O(^IBM(361.1,"B",IBIFN,Z)) Q:'Z  D  Q:STOP
"RTN","IBCEMQC",30,0)
 . I Z=IBEOB Q             ; check different EOB records if they exist
"RTN","IBCEMQC",31,0)
 . I $P($G(^IBM(361.1,Z,0)),U,4)'=1 Q     ; must be an MRA
"RTN","IBCEMQC",32,0)
 . I $P($G(^IBM(361.1,Z,30)),U,1)="" Q    ; no problems recorded
"RTN","IBCEMQC",33,0)
 . S REASON="Another MRA for this bill (ien="_Z_") failed the auto-generation criteria check."
"RTN","IBCEMQC",34,0)
 . S STOP=1
"RTN","IBCEMQC",35,0)
 . Q
"RTN","IBCEMQC",36,0)
 I STOP G CRITX
"RTN","IBCEMQC",37,0)
 ;
"RTN","IBCEMQC",38,0)
 ; If this EOB is a split EOB, then don't allow it
"RTN","IBCEMQC",39,0)
 I $$SPLIT^IBCEMU1(IBEOB) S REASON="Claim level remark code MA15 received.  Multiple MRA's" G CRITX
"RTN","IBCEMQC",40,0)
 ;
"RTN","IBCEMQC",41,0)
 ; Call the function that checks the claim level and/or line level
"RTN","IBCEMQC",42,0)
 ; adjustments for this EOB
"RTN","IBCEMQC",43,0)
 I '$$CAS(IBEOB,"B",.REASON) G CRITX      ; "B" for both
"RTN","IBCEMQC",44,0)
 ;
"RTN","IBCEMQC",45,0)
 ; Make sure the patient responsibility amount for this MRA is greater than $0
"RTN","IBCEMQC",46,0)
 S IBPTRESP=$P($G(^IBM(361.1,IBEOB,1)),U,2)      ; Pt Resp Amt 1.02 field
"RTN","IBCEMQC",47,0)
 I $$FT^IBCEF(IBIFN)=3 S IBPTRESP=$$PTRESPI^IBCECOB1(IBEOB)
"RTN","IBCEMQC",48,0)
 I IBPTRESP'>0 S REASON="Patient responsibility dollar amount is less than or equal to $0" G CRITX
"RTN","IBCEMQC",49,0)
 ;
"RTN","IBCEMQC",50,0)
 ; Check the parameter values last of all
"RTN","IBCEMQC",51,0)
 I '$P($G(^IBE(350.9,1,8)),U,11) S REASON="Automatic MRA Processing parameter is turned off.  File 350.9, Field 8.11." G CRITX
"RTN","IBCEMQC",52,0)
 I '$P($G(^IBE(350.9,1,8)),U,12) S REASON="Allow MRA Processing parameter is turned off.  File 350.9, Field 8.12." G CRITX
"RTN","IBCEMQC",53,0)
 ;
"RTN","IBCEMQC",54,0)
 ; At this point, we're OK
"RTN","IBCEMQC",55,0)
 S OK=1,REASON=""
"RTN","IBCEMQC",56,0)
 ;
"RTN","IBCEMQC",57,0)
CRITX ;
"RTN","IBCEMQC",58,0)
 Q OK_U_REASON
"RTN","IBCEMQC",59,0)
 ;
"RTN","IBCEMQC",60,0)
 ;
"RTN","IBCEMQC",61,0)
CAS(IBEOB,ADJFLAG,REASON) ; This function determines if the EOB
"RTN","IBCEMQC",62,0)
 ; adjustment group codes and reason codes from file 361.1 (either
"RTN","IBCEMQC",63,0)
 ; claim level or line level or both) meet the criteria for auto-
"RTN","IBCEMQC",64,0)
 ; authorization and secondary claim submission.
"RTN","IBCEMQC",65,0)
 ;
"RTN","IBCEMQC",66,0)
 ; Input Parameters
"RTN","IBCEMQC",67,0)
 ;        IBEOB    - ien of entry in file 361.1
"RTN","IBCEMQC",68,0)
 ;      ADJFLAG    - adjustment flag
"RTN","IBCEMQC",69,0)
 ;                   "C" - look at claim level adjustments only
"RTN","IBCEMQC",70,0)
 ;                   "L" - look at line level adjustments only
"RTN","IBCEMQC",71,0)
 ;                   "B" - look at both claim and line level adjustments
"RTN","IBCEMQC",72,0)
 ; Output Parameter
"RTN","IBCEMQC",73,0)
 ;       REASON    - error message describing why it failed
"RTN","IBCEMQC",74,0)
 ;
"RTN","IBCEMQC",75,0)
 ; Function Value is either 0 or 1, indicating if it passed the criteria
"RTN","IBCEMQC",76,0)
 ;
"RTN","IBCEMQC",77,0)
 NEW EOBADJ,OK,OKCOMBO,PATRESP,STOP,LNIEN
"RTN","IBCEMQC",78,0)
 ;
"RTN","IBCEMQC",79,0)
 S IBEOB=+$G(IBEOB)
"RTN","IBCEMQC",80,0)
 S ADJFLAG=$G(ADJFLAG,"B")     ; default is "B" if not passed in
"RTN","IBCEMQC",81,0)
 D BUILD           ; build the array of OK group/reason combinations
"RTN","IBCEMQC",82,0)
 S PATRESP=0       ; patient responsibility flag (default false)
"RTN","IBCEMQC",83,0)
 S STOP=0          ; Stop flag
"RTN","IBCEMQC",84,0)
 S OK=0            ; OK flag (function value)
"RTN","IBCEMQC",85,0)
 S REASON=""       ; error reason text
"RTN","IBCEMQC",86,0)
 ;
"RTN","IBCEMQC",87,0)
 ; claim level adjustments
"RTN","IBCEMQC",88,0)
 I $F(".C.B.","."_ADJFLAG_".") D
"RTN","IBCEMQC",89,0)
 . KILL EOBADJ
"RTN","IBCEMQC",90,0)
 . M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCEMQC",91,0)
 . D ADJCHK
"RTN","IBCEMQC",92,0)
 . Q
"RTN","IBCEMQC",93,0)
 ;
"RTN","IBCEMQC",94,0)
 ; Get out if the claim level adjustments failed
"RTN","IBCEMQC",95,0)
 I STOP G CASX
"RTN","IBCEMQC",96,0)
 ;
"RTN","IBCEMQC",97,0)
 ; line level adjustments
"RTN","IBCEMQC",98,0)
 I $F(".L.B.","."_ADJFLAG_".") D
"RTN","IBCEMQC",99,0)
 . S LNIEN=0
"RTN","IBCEMQC",100,0)
 . F  S LNIEN=$O(^IBM(361.1,IBEOB,15,LNIEN)) Q:'LNIEN  D  Q:STOP
"RTN","IBCEMQC",101,0)
 .. KILL EOBADJ
"RTN","IBCEMQC",102,0)
 .. M EOBADJ=^IBM(361.1,IBEOB,15,LNIEN,1)
"RTN","IBCEMQC",103,0)
 .. D ADJCHK
"RTN","IBCEMQC",104,0)
 .. Q
"RTN","IBCEMQC",105,0)
 . Q
"RTN","IBCEMQC",106,0)
 ;
"RTN","IBCEMQC",107,0)
 ; Get out if the line level adjustments failed
"RTN","IBCEMQC",108,0)
 I STOP G CASX
"RTN","IBCEMQC",109,0)
 ;
"RTN","IBCEMQC",110,0)
 ; Get out if there was no patient responsibility adjustments found
"RTN","IBCEMQC",111,0)
 I 'PATRESP S REASON="No Patient Responsibility Adjustments found" G CASX
"RTN","IBCEMQC",112,0)
 ;
"RTN","IBCEMQC",113,0)
 ; At this point, we're OK
"RTN","IBCEMQC",114,0)
 S OK=1,REASON=""
"RTN","IBCEMQC",115,0)
CASX ;
"RTN","IBCEMQC",116,0)
 Q OK
"RTN","IBCEMQC",117,0)
 ;
"RTN","IBCEMQC",118,0)
 ;
"RTN","IBCEMQC",119,0)
ADJCHK ; This procedure checks the adjustments for this EOB.  The group codes
"RTN","IBCEMQC",120,0)
 ; and reason codes are in the EOBADJ array structures from file 361.1.
"RTN","IBCEMQC",121,0)
 ;
"RTN","IBCEMQC",122,0)
 ;   Variables STOP and REASON will be returned on an error
"RTN","IBCEMQC",123,0)
 ;   Variable PATRESP will be returned if a valid PR adjustment found
"RTN","IBCEMQC",124,0)
 ;
"RTN","IBCEMQC",125,0)
 NEW ADJIEN,GROUP,RSNIEN,RSNCODE
"RTN","IBCEMQC",126,0)
 S ADJIEN=0
"RTN","IBCEMQC",127,0)
 F  S ADJIEN=$O(EOBADJ(ADJIEN)) Q:'ADJIEN  D  Q:STOP
"RTN","IBCEMQC",128,0)
 . S GROUP=$P($G(EOBADJ(ADJIEN,0)),U,1)
"RTN","IBCEMQC",129,0)
 . I GROUP="LQ" Q      ; line level remark code kludge: 42 rec [3]
"RTN","IBCEMQC",130,0)
 . I GROUP="" S GROUP="<Undefined>"
"RTN","IBCEMQC",131,0)
 . I '$D(OKCOMBO(GROUP)) S STOP=1,REASON="Unacceptable Claim Adjustment Group Code: "_GROUP Q
"RTN","IBCEMQC",132,0)
 . S RSNIEN=0
"RTN","IBCEMQC",133,0)
 . F  S RSNIEN=$O(EOBADJ(ADJIEN,1,RSNIEN)) Q:'RSNIEN  D  Q:STOP
"RTN","IBCEMQC",134,0)
 .. S RSNCODE=$P($G(EOBADJ(ADJIEN,1,RSNIEN,0)),U,1)
"RTN","IBCEMQC",135,0)
 .. ;
"RTN","IBCEMQC",136,0)
 .. ; Ignore some special adjustment data that is filed with the MRA
"RTN","IBCEMQC",137,0)
 .. I GROUP="PR",RSNCODE="AAA" Q    ; Allowed Amount: 41 rec [3]
"RTN","IBCEMQC",138,0)
 .. I GROUP="OA",RSNCODE="AB3" Q    ; Covered Amount: 15 rec [3]
"RTN","IBCEMQC",139,0)
 .. ;
"RTN","IBCEMQC",140,0)
 .. I RSNCODE="" S RSNCODE="<Undefined>"
"RTN","IBCEMQC",141,0)
 .. I '$D(OKCOMBO(GROUP,RSNCODE)) S STOP=1,REASON="Unacceptable Reason Code ("_RSNCODE_") for Claim Adjustment Group Code ("_GROUP_")" Q
"RTN","IBCEMQC",142,0)
 .. ;
"RTN","IBCEMQC",143,0)
 .. ; Set the flag if the group is PR
"RTN","IBCEMQC",144,0)
 .. I GROUP="PR" S PATRESP=1
"RTN","IBCEMQC",145,0)
 .. Q
"RTN","IBCEMQC",146,0)
 . Q
"RTN","IBCEMQC",147,0)
ADJCHKX ;
"RTN","IBCEMQC",148,0)
 Q
"RTN","IBCEMQC",149,0)
 ;
"RTN","IBCEMQC",150,0)
 ;
"RTN","IBCEMQC",151,0)
BUILD ; This procedure builds the OKCOMBO array which identifies which
"RTN","IBCEMQC",152,0)
 ; combinations of group codes and reason codes are acceptable
"RTN","IBCEMQC",153,0)
 ;
"RTN","IBCEMQC",154,0)
 NEW LN,LINE,GROUP,RSNLST,R,RSN
"RTN","IBCEMQC",155,0)
 KILL OKCOMBO
"RTN","IBCEMQC",156,0)
 F LN=1:1 D  Q:$P(LINE,";",4)=""&$D(OKCOMBO)
"RTN","IBCEMQC",157,0)
 . S LINE=$T(OKCOMBO+LN)
"RTN","IBCEMQC",158,0)
 . S GROUP=$P(LINE,";",3) Q:GROUP=""
"RTN","IBCEMQC",159,0)
 . S RSNLST=$P(LINE,";",4) Q:RSNLST=""
"RTN","IBCEMQC",160,0)
 . F R=1:1:$L(RSNLST,",") D
"RTN","IBCEMQC",161,0)
 .. S RSN=$P(RSNLST,",",R) Q:RSN=""
"RTN","IBCEMQC",162,0)
 .. S OKCOMBO(GROUP,RSN)=""
"RTN","IBCEMQC",163,0)
 .. Q
"RTN","IBCEMQC",164,0)
 . Q
"RTN","IBCEMQC",165,0)
BUILDX ;
"RTN","IBCEMQC",166,0)
 Q
"RTN","IBCEMQC",167,0)
 ;
"RTN","IBCEMQC",168,0)
 ;
"RTN","IBCEMQC",169,0)
OKCOMBO ; This section lists OK combinations of adjustment category group codes
"RTN","IBCEMQC",170,0)
 ; and associated reason codes.
"RTN","IBCEMQC",171,0)
 ; The format is as follows - semi-colon delimiter
"RTN","IBCEMQC",172,0)
 ;     [3] Adjustment category (group code)
"RTN","IBCEMQC",173,0)
 ;     [4] List of acceptable reason codes - comma delimiter
"RTN","IBCEMQC",174,0)
 ;
"RTN","IBCEMQC",175,0)
 ; PR-AAA is created by VistA for the Allowed Amount
"RTN","IBCEMQC",176,0)
 ; OA-AB3 is created by VistA for the Covered Amount
"RTN","IBCEMQC",177,0)
 ; LQ-zzz is created by VistA for the Line Level remark
"RTN","IBCEMQC",178,0)
 ;
"RTN","IBCEMQC",179,0)
 ;;CO;A2,B6,42,45,172,94,194
"RTN","IBCEMQC",180,0)
 ;;PR;1,2,66,122,AAA
"RTN","IBCEMQC",181,0)
 ;;OA;AB3
"RTN","IBCEMQC",182,0)
 ;
"RTN","IBCNSMM1")
0^3^B25964261^B23739699
"RTN","IBCNSMM1",1,0)
IBCNSMM1 ;ALB/CMS -MEDICARE INSURANCE INTAKE (CONT) ; 11/8/06 9:32am
"RTN","IBCNSMM1",2,0)
 ;;2.0;INTEGRATED BILLING;**103,359**;21-MAR-94;Build 9
"RTN","IBCNSMM1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNSMM1",4,0)
 Q
"RTN","IBCNSMM1",5,0)
 ;
"RTN","IBCNSMM1",6,0)
SETP(IBP) ; -- Stuff data fields in patient policy
"RTN","IBCNSMM1",7,0)
 ;  Required Input:
"RTN","IBCNSMM1",8,0)
 ;  IBP =A for Part A, B for Part B
"RTN","IBCNSMM1",9,0)
 ;  DFN =pt. ien
"RTN","IBCNSMM1",10,0)
 ;  IBCDFN =patient policy ien
"RTN","IBCNSMM1",11,0)
 ;  IBNAME =Name of Insured
"RTN","IBCNSMM1",12,0)
 ;  IBHICN =Subscriber ID
"RTN","IBCNSMM1",13,0)
 ;  IBAEFF =Effective Date of Plan A
"RTN","IBCNSMM1",14,0)
 ;  IBBEFF =Effective Date of Plan B
"RTN","IBCNSMM1",15,0)
 ;  IBCNSP =Medicare (WNR) ien ^Part A ien ^Part B ien
"RTN","IBCNSMM1",16,0)
 ;  IBCOBI =Coordination of Benefits (Internal value)
"RTN","IBCNSMM1",17,0)
 ;
"RTN","IBCNSMM1",18,0)
 N D,DA,DIE,DR,IBBDA,X,Y
"RTN","IBCNSMM1",19,0)
 I '$D(^DPT(DFN,.312,+IBCDFN,0)) G SETPQ
"RTN","IBCNSMM1",20,0)
 ;
"RTN","IBCNSMM1",21,0)
 ; -- Stuff the pt. policy fields
"RTN","IBCNSMM1",22,0)
 ;   #2  *Group Number              #.18  Group Plan
"RTN","IBCNSMM1",23,0)
 ;   #6  Whose Ins.                 #.2   COB
"RTN","IBCNSMM1",24,0)
 ;   #8  Effective Date of Policy   #1    Sub. ID
"RTN","IBCNSMM1",25,0)
 ;   #15 *Group Name                #17   Name of Insured
"RTN","IBCNSMM1",26,0)
 ;   #16 Pt. Relationship to Insured
"RTN","IBCNSMM1",27,0)
 ;
"RTN","IBCNSMM1",28,0)
 S DIE="^DPT("_DFN_",.312,",DA=+IBCDFN,DA(1)=DFN
"RTN","IBCNSMM1",29,0)
 S DR="2///"_$S(IBP="A":$P(IBCNSP,U,4),IBP="B":$P(IBCNSP,U,6),1:"")
"RTN","IBCNSMM1",30,0)
 S DR=DR_";17///"_IBNAME_";1///"_IBHICN
"RTN","IBCNSMM1",31,0)
 S DR=DR_";6///v;8///"_$S(IBP="A":$G(IBAEFF),IBP="B":$G(IBBEFF),1:"")
"RTN","IBCNSMM1",32,0)
 S DR=DR_";.2////"_IBCOBI_";15///"_$S(IBP="A":"PART A",IBP="B":"PART B",1:"")
"RTN","IBCNSMM1",33,0)
 S DR=DR_";16///01;.18////"_$S(IBP="A":+$P(IBCNSP,U,3),IBP="B":+$P(IBCNSP,U,5),1:"")
"RTN","IBCNSMM1",34,0)
 D ^DIE
"RTN","IBCNSMM1",35,0)
 ;
"RTN","IBCNSMM1",36,0)
 ;  -- Update Insurance Event
"RTN","IBCNSMM1",37,0)
 S IBCOVP=$P($G(^DPT(DFN,.31)),U,11)
"RTN","IBCNSMM1",38,0)
 D BEFORE^IBCNSEVT S IBNEW=1
"RTN","IBCNSMM1",39,0)
 ;
"RTN","IBCNSMM1",40,0)
 ; -- Ask to Verify at this time
"RTN","IBCNSMM1",41,0)
 K DIR S DIR("A")="Verify Medicare (WNR) Part "_IBP_" Coverage Now"
"RTN","IBCNSMM1",42,0)
 S DIR("?")="Enter 'No' to not Verify Coverage at this time."
"RTN","IBCNSMM1",43,0)
 W ! S IBOK=0 D OK I 'IBOK G SETEV
"RTN","IBCNSMM1",44,0)
 ;
"RTN","IBCNSMM1",45,0)
 ; -- Check to see if Pt. Name = name of Insured
"RTN","IBCNSMM1",46,0)
 I IBNAME'=$P($G(^DPT(DFN,0)),U,1) D
"RTN","IBCNSMM1",47,0)
 .W !!,"WARNING: Patient Name: '"_$P($G(^DPT(DFN,0)),U,1)_"'  DOES NOT MATCH"
"RTN","IBCNSMM1",48,0)
 .W !,"      Name of Insured: '"_IBNAME_"'.",!
"RTN","IBCNSMM1",49,0)
 ;
"RTN","IBCNSMM1",50,0)
 ; -- verify policy
"RTN","IBCNSMM1",51,0)
 S DIE="^DPT("_DFN_",.312,",DA=IBCDFN,DA(1)=DFN
"RTN","IBCNSMM1",52,0)
 S DR="1.03///NOW;1.04////"_DUZ D ^DIE
"RTN","IBCNSMM1",53,0)
 W !,"  PART "_IBP_" COVERAGE VERIFIED."
"RTN","IBCNSMM1",54,0)
 ;
"RTN","IBCNSMM1",55,0)
SETEV ; -- Update Insurance event
"RTN","IBCNSMM1",56,0)
 N X,Y
"RTN","IBCNSMM1",57,0)
 D COVERED^IBCNSM31(DFN,IBCOVP)
"RTN","IBCNSMM1",58,0)
 I $G(IBCDFN)>0,IBNEW=1 D AFTER^IBCNSEVT,^IBCNSEVT
"RTN","IBCNSMM1",59,0)
 ;
"RTN","IBCNSMM1",60,0)
SETPQ Q
"RTN","IBCNSMM1",61,0)
 ;
"RTN","IBCNSMM1",62,0)
 ;
"RTN","IBCNSMM1",63,0)
BUFF(IBP) ; -- Set IBBUF array with policy info for Buffer File
"RTN","IBCNSMM1",64,0)
 ; Return: IBBUF array
"RTN","IBCNSMM1",65,0)
 ;    IBBUF(355.33 field #s)=corresponding policy, plan and company data
"RTN","IBCNSMM1",66,0)
 ;    i.e.  IBBUF(20.01)=Insurance Company Name
"RTN","IBCNSMM1",67,0)
 ;          IBBUF(40.02)=Group Name
"RTN","IBCNSMM1",68,0)
 ;          IBBUF(60.01)=DFN
"RTN","IBCNSMM1",69,0)
 ;
"RTN","IBCNSMM1",70,0)
 ; Input: DFN, IBCNSP, IBNAME, IBHICN, IBAEFF, IBBEFF, IBCOBI
"RTN","IBCNSMM1",71,0)
 ;           
"RTN","IBCNSMM1",72,0)
 ; Auto stuff other fields
"RTN","IBCNSMM1",73,0)
 ;
"RTN","IBCNSMM1",74,0)
 N IBP0 K IBBUF S IBBUF=""
"RTN","IBCNSMM1",75,0)
 S IBBUF(.03)=$G(IBSOUR)
"RTN","IBCNSMM1",76,0)
 S IBBUF(20.01)=$P(IBCNSP,U,2)
"RTN","IBCNSMM1",77,0)
 S IBBUF(40.02)=$S(IBP="A":$P(IBCNSP,U,4),IBP="B":$P(IBCNSP,U,6),1:"")
"RTN","IBCNSMM1",78,0)
 S IBBUF(40.03)=IBBUF(40.02)
"RTN","IBCNSMM1",79,0)
 S IBBUF(60.01)=+DFN
"RTN","IBCNSMM1",80,0)
 S IBBUF(60.02)=$S(IBP="A":IBAEFF,IBP="B":IBBEFF,1:"")
"RTN","IBCNSMM1",81,0)
 S IBBUF(60.04)=IBHICN
"RTN","IBCNSMM1",82,0)
 S IBBUF(60.05)="v"
"RTN","IBCNSMM1",83,0)
 S IBBUF(60.06)="01"
"RTN","IBCNSMM1",84,0)
 S IBBUF(60.07)=IBNAME
"RTN","IBCNSMM1",85,0)
 S IBBUF(60.12)=IBCOBI
"RTN","IBCNSMM1",86,0)
 S IBBDA=$$ADDSTF^IBCNBES(1,DFN,.IBBUF)
"RTN","IBCNSMM1",87,0)
 I +IBBDA W !,?3,$P(IBCNSP,U,2)," PART "_IBP_" entry #"_+IBBDA_" added to Insurance Buffer File."
"RTN","IBCNSMM1",88,0)
 I 'IBBDA W !,*7,?3,"Warning: Could not add new policy Part "_IBP_" in Buffer File.",!,?13,"("_$P(IBBDA,U,2)_")",!
"RTN","IBCNSMM1",89,0)
 Q
"RTN","IBCNSMM1",90,0)
 ;
"RTN","IBCNSMM1",91,0)
OK ; -- ask okay
"RTN","IBCNSMM1",92,0)
 N DTOUT,DIROUT,DIRUT,DUOUT,X,Y
"RTN","IBCNSMM1",93,0)
 ; Returns:
"RTN","IBCNSMM1",94,0)
 ; IBQUIT=1 Exit user timedout
"RTN","IBCNSMM1",95,0)
 ;   IBOK=1 Yes
"RTN","IBCNSMM1",96,0)
 ;   IBOK=0 No
"RTN","IBCNSMM1",97,0)
 S IBQUIT=0,DIR(0)="Y",DIR("B")="YES" W !
"RTN","IBCNSMM1",98,0)
 I $G(DIR("A"))="" S DIR("A")="Is this Data Correct"
"RTN","IBCNSMM1",99,0)
 I $G(DIR("?"))="" S DIR("?")="Enter 'No' to edit Medicare Card information"
"RTN","IBCNSMM1",100,0)
 D ^DIR K DIR
"RTN","IBCNSMM1",101,0)
 I $D(DTOUT) S IBQUIT=1
"RTN","IBCNSMM1",102,0)
 S IBOK=$G(Y) I IBOK["^" S IBQUIT=1
"RTN","IBCNSMM1",103,0)
 Q
"RTN","IBCNSMM1",104,0)
 ;
"RTN","IBCNSMM1",105,0)
GETWNR() ; -- Find and return the MEDICARE (WNR) ien
"RTN","IBCNSMM1",106,0)
 ;         -- Returns Error message or
"RTN","IBCNSMM1",107,0)
 ;            DIC(36 IEN ^"MEDICARE (WNR)"^IBA(355.3 PART A IEN ^"PART A"^ IBA(355.3 PART B IEN ^"PART B"
"RTN","IBCNSMM1",108,0)
 ;
"RTN","IBCNSMM1",109,0)
 N IBWNR,IB0,IBP0,IBQ,IBPQ,IBPX,IBX,IBY,IBPGN
"RTN","IBCNSMM1",110,0)
 S IBY="MEDICARE (WNR)",IBQ=0
"RTN","IBCNSMM1",111,0)
 S IBX=0 F  S IBX=$O(^DIC(36,"B",IBY,IBX)) Q:('IBX)  D  Q:IBQ
"RTN","IBCNSMM1",112,0)
 .S IB0=$G(^DIC(36,IBX,0))
"RTN","IBCNSMM1",113,0)
 .K IBWNR("INS")
"RTN","IBCNSMM1",114,0)
 .I $P(IB0,U,1)'=IBY Q  ;name
"RTN","IBCNSMM1",115,0)
 .I $P(IB0,U,2)'="N" Q  ;Reimb?
"RTN","IBCNSMM1",116,0)
 .;I '$P(IB0,U,3) Q  ;Sig Req.  --> removed edit, cm, 5/18/99
"RTN","IBCNSMM1",117,0)
 .I $P(IB0,U,5) Q  ;Inactive
"RTN","IBCNSMM1",118,0)
 .I $P($G(^IBE(355.2,+$P(IB0,U,13),0)),U)'="MEDICARE" Q  ;Major Cat.
"RTN","IBCNSMM1",119,0)
 .S IBWNR("INS")=IBX_U_IBY
"RTN","IBCNSMM1",120,0)
 .;
"RTN","IBCNSMM1",121,0)
 .; -- Must have Active Group Plan Category Medicare Part A and B
"RTN","IBCNSMM1",122,0)
 .;
"RTN","IBCNSMM1",123,0)
 .K IBWNR("A"),IBWNR("B")
"RTN","IBCNSMM1",124,0)
 .S IBPX=0 F  S IBPX=$O(^IBA(355.3,"B",IBX,IBPX)) Q:('IBPX)!(IBQ)  D
"RTN","IBCNSMM1",125,0)
 ..S IBP0=$G(^IBA(355.3,IBPX,0))
"RTN","IBCNSMM1",126,0)
 ..I $P(IBP0,U,11) Q  ;Inactive
"RTN","IBCNSMM1",127,0)
 ..I $P(IBP0,U,14)'="A",$P(IBP0,U,14)'="B" Q  ;Not Plan Category Part A or B 
"RTN","IBCNSMM1",128,0)
 ..S IBPGN=$TR($P(IBP0,U,3),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","IBCNSMM1",129,0)
 ..I IBPGN'="PART A",IBPGN'="PART B" Q  ;excludes non PART A and PART B plans
"RTN","IBCNSMM1",130,0)
 ..S IBWNR($P(IBP0,U,14))=IBPX_U_$P(IBP0,U,3)
"RTN","IBCNSMM1",131,0)
 ..I $G(IBWNR("A")),$G(IBWNR("B")) S IBQ=1
"RTN","IBCNSMM1",132,0)
 ;
"RTN","IBCNSMM1",133,0)
 S IBX=$G(IBWNR("INS"))_U_$G(IBWNR("A"))_U_$G(IBWNR("B"))
"RTN","IBCNSMM1",134,0)
 I 'IBX S IBX="Error: Standard Medicare (WNR) Insurance Company not setup properly." G GETWNRQ
"RTN","IBCNSMM1",135,0)
 I '$P(IBX,U,3) S IBX="Error: Standard Medicare (WNR) plan PART A not setup properly." G GETWNRQ
"RTN","IBCNSMM1",136,0)
 I '$G(IBWNR("B")) S IBX="Error: Standard Medicare (WNR) plan PART B not setup properly."
"RTN","IBCNSMM1",137,0)
GETWNRQ Q IBX
"RTN","IBTRCD1")
0^1^B26162223^B25718348
"RTN","IBTRCD1",1,0)
IBTRCD1 ;ALB/AAS/BGA - CLAIMS TRACKING INS ACTION EDIT ; 11/8/06 9:34am
"RTN","IBTRCD1",2,0)
 ;;2.0;INTEGRATED BILLING;**10,359**;21-MAR-94;Build 9
"RTN","IBTRCD1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRCD1",4,0)
 ;
"RTN","IBTRCD1",5,0)
% G ^IBTRC
"RTN","IBTRCD1",6,0)
 ;
"RTN","IBTRCD1",7,0)
QE ; -- Quick edit
"RTN","IBTRCD1",8,0)
 N IBXX,VALMY,DA,DR,DIC,DIE
"RTN","IBTRCD1",9,0)
 D QE1^IBTRC1
"RTN","IBTRCD1",10,0)
 D BLD^IBTRCD
"RTN","IBTRCD1",11,0)
 S VALMBCK="R"
"RTN","IBTRCD1",12,0)
 Q
"RTN","IBTRCD1",13,0)
 ;
"RTN","IBTRCD1",14,0)
NX(IBTMPNM,BLD) ; -- edit next template
"RTN","IBTRCD1",15,0)
 N IBXX,VALMY
"RTN","IBTRCD1",16,0)
 D EN^VALM(IBTMPNM)
"RTN","IBTRCD1",17,0)
 I '$D(IBFASTXT) D:'$G(BLD) BLD^IBTRCD
"RTN","IBTRCD1",18,0)
 I IBTMPNM="IBCNS VIEW PAT INS" D:$G(BLD)=1 BLD^IBTRE ;REBUILD LIST
"RTN","IBTRCD1",19,0)
 S VALMBCK="R"
"RTN","IBTRCD1",20,0)
 Q
"RTN","IBTRCD1",21,0)
 ;
"RTN","IBTRCD1",22,0)
EDIT(DR,BLD) ; -- edit entry point for claims tracking reviews
"RTN","IBTRCD1",23,0)
 ; -- Input   IBTEMP = template name or dr string
"RTN","IBTRCD1",24,0)
 ;               BLD = any non-zero value if calling routine is doing own
"RTN","IBTRCD1",25,0)
 ;                      rebuild
"RTN","IBTRCD1",26,0)
 ;
"RTN","IBTRCD1",27,0)
 N IBDIF,DA,DIC,DIE,DIR,X,Y,IBTLST
"RTN","IBTRCD1",28,0)
 D FULL^VALM1 W !
"RTN","IBTRCD1",29,0)
 D SAVE
"RTN","IBTRCD1",30,0)
 S DIE="^IBT(356.2,",DA=IBTRC
"RTN","IBTRCD1",31,0)
 L +^IBT(356.2,+IBTRC):5 I '$T D LOCKED G EDITQ
"RTN","IBTRCD1",32,0)
 D ^DIE K DA,DR,DIC,DIE
"RTN","IBTRCD1",33,0)
 I '$D(IBCON) D CON K IBCON
"RTN","IBTRCD1",34,0)
 D COMP
"RTN","IBTRCD1",35,0)
 I IBDIF=1 D UPDATE
"RTN","IBTRCD1",36,0)
 L -^IBT(356.2,+IBTRC)
"RTN","IBTRCD1",37,0)
 D BLD^IBTRCD:'$G(BLD)
"RTN","IBTRCD1",38,0)
EDITQ K ^TMP($J,"IBT")
"RTN","IBTRCD1",39,0)
 S VALMBCK="R"
"RTN","IBTRCD1",40,0)
 Q
"RTN","IBTRCD1",41,0)
 ;
"RTN","IBTRCD1",42,0)
SAVE ; -- Save the global before editing
"RTN","IBTRCD1",43,0)
 K ^TMP($J,"IBT")
"RTN","IBTRCD1",44,0)
 S ^TMP($J,"IBT",356.2,IBTRC,0)=$G(^IBT(356.2,IBTRC,0))
"RTN","IBTRCD1",45,0)
 S ^TMP($J,"IBT",356.2,IBTRC,1)=$G(^IBT(356.2,IBTRC,1))
"RTN","IBTRCD1",46,0)
 S ^TMP($J,"IBT",356.2,IBTRC,11,0)=$G(^IBT(356.2,IBTRC,11,0))
"RTN","IBTRCD1",47,0)
 S ^TMP($J,"IBT",356.2,IBTRC,12,0)=$G(^IBT(356.2,IBTRC,12,0))
"RTN","IBTRCD1",48,0)
 S ^TMP($J,"IBT",356.2,IBTRC,13,0)=$G(^IBT(356.2,IBTRC,13,0))
"RTN","IBTRCD1",49,0)
 Q
"RTN","IBTRCD1",50,0)
 ;
"RTN","IBTRCD1",51,0)
COMP ; -- Compare before editing with globals
"RTN","IBTRCD1",52,0)
 S IBDIF=0
"RTN","IBTRCD1",53,0)
 I $G(^IBT(356.2,IBTRC,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,0)) S IBDIF=1 Q
"RTN","IBTRCD1",54,0)
 I $G(^IBT(356.2,IBTRC,1))'=$G(^TMP($J,"IBT",356.2,IBTRC,1)) S IBDIF=1 Q
"RTN","IBTRCD1",55,0)
 I $G(^IBT(356.2,IBTRC,11,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,11,0)) S IBDIF=1 Q
"RTN","IBTRCD1",56,0)
 I $G(^IBT(356.2,IBTRC,12,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,12,0)) S IBDIF=1 Q
"RTN","IBTRCD1",57,0)
 I $G(^IBT(356.2,IBTRC,13,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,13,0)) S IBDIF=1 Q
"RTN","IBTRCD1",58,0)
 Q
"RTN","IBTRCD1",59,0)
 ;
"RTN","IBTRCD1",60,0)
UPDATE ; -- enter date and user if editing has taken place
"RTN","IBTRCD1",61,0)
 ;    entry locked during edit lock not needed here
"RTN","IBTRCD1",62,0)
 S DIE="^IBT(356.2,",DA=IBTRC
"RTN","IBTRCD1",63,0)
 S DR="1.03///NOW;1.04////"_DUZ
"RTN","IBTRCD1",64,0)
 D ^DIE K DA,DR,DIC,DIE
"RTN","IBTRCD1",65,0)
 Q
"RTN","IBTRCD1",66,0)
 ;
"RTN","IBTRCD1",67,0)
LOCKED ; -- write locked message
"RTN","IBTRCD1",68,0)
 Q:$D(ZTQUEUED)
"RTN","IBTRCD1",69,0)
 W !!,"Sorry, another user currently editing this entry."
"RTN","IBTRCD1",70,0)
 W !,"Try again later."
"RTN","IBTRCD1",71,0)
 D PAUSE^VALM1
"RTN","IBTRCD1",72,0)
 Q
"RTN","IBTRCD1",73,0)
 ;
"RTN","IBTRCD1",74,0)
CON ; -- consistency checker for insurance reviews
"RTN","IBTRCD1",75,0)
 N I,J,X,Y,DA,DR,DIC,DIE,IBI,IBDEL,IBACTION
"RTN","IBTRCD1",76,0)
 S IBCON=1 Q:'$D(^IBT(356.2,IBTRC,0))
"RTN","IBTRCD1",77,0)
 S IBACTION=$P($G(^IBE(356.7,+$P(^IBT(356.2,IBTRC,0),"^",11),0)),"^",3)
"RTN","IBTRCD1",78,0)
 I $G(IBACTION)="" S IBACTION=99
"RTN","IBTRCD1",79,0)
 ;
"RTN","IBTRCD1",80,0)
 ; -- if action and type the same okay, check nxt rv. dates
"RTN","IBTRCD1",81,0)
 I $P($G(^IBT(356.2,IBTRC,0)),"^",4)=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",4),$P($G(^IBT(356.2,IBTRC,0)),"^",11)=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11) G NXRV
"RTN","IBTRCD1",82,0)
 ;
"RTN","IBTRCD1",83,0)
 ; -- if action different
"RTN","IBTRCD1",84,0)
 I $P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11)="" Q  ; no previous action
"RTN","IBTRCD1",85,0)
 I $P($G(^IBT(356.2,IBTRC,0)),"^",11)'=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11) D
"RTN","IBTRCD1",86,0)
 .S DR=$P($T(@(IBACTION)),";;",2,99)
"RTN","IBTRCD1",87,0)
 .I DR'="" D EDIT(DR,1)
"RTN","IBTRCD1",88,0)
 .I IBACTION'=10 S $P(^IBT(356.2,IBTRC,0),"^",12,13)="^"
"RTN","IBTRCD1",89,0)
 .I IBACTION'=20 S $P(^IBT(356.2,IBTRC,0),"^",15,16)="^"
"RTN","IBTRCD1",90,0)
 .W !,"WARNING: I detected you changed the Action on this review and deleted",!,"data associated with the previous action." H 3
"RTN","IBTRCD1",91,0)
 .Q
"RTN","IBTRCD1",92,0)
 ; -- if not denial and denial reasons delete
"RTN","IBTRCD1",93,0)
 I $O(^IBT(356.2,IBTRC,12,0)),$G(IBACTION)'=20 D
"RTN","IBTRCD1",94,0)
 .S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,12,IBI)) Q:'IBI  S DA=IBI,DA(1)=IBTRC,DIK="^IBT(356.2,"_IBTRC_",12," D ^DIK
"RTN","IBTRCD1",95,0)
 ;
"RTN","IBTRCD1",96,0)
 ; -- if not penalty and penalty reasons delete
"RTN","IBTRCD1",97,0)
 I $O(^IBT(356.2,IBTRC,13,0)),$G(IBACTION)'=30 D
"RTN","IBTRCD1",98,0)
 .S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,13,IBI)) Q:'IBI  S DA=IBI,DA(1)=IBTRC,DIK="^IBT(356.2,"_IBTRC_",13," D ^DIK
"RTN","IBTRCD1",99,0)
 .Q
"RTN","IBTRCD1",100,0)
 ;
"RTN","IBTRCD1",101,0)
NXRV ; -- check Next Review Dates
"RTN","IBTRCD1",102,0)
 N IBI0,IBIX
"RTN","IBTRCD1",103,0)
 I '$D(IBTRN) N IBTRN S IBTRN=$P($G(^IBT(356.2,+$G(IBTRC),0)),"^",2)
"RTN","IBTRCD1",104,0)
 Q:'$G(IBTRN)
"RTN","IBTRCD1",105,0)
 S IBI=0 F  S IBI=$O(^IBT(356.2,"C",IBTRN,IBI)) Q:'IBI  D
"RTN","IBTRCD1",106,0)
 .I $P($G(^IBT(356.2,IBI,0)),"^",24) D
"RTN","IBTRCD1",107,0)
 ..S IBI0=$G(^(0))
"RTN","IBTRCD1",108,0)
 ..S IBI(IBI)=$$DAT1^IBOUTL($P(IBI0,U,24))_"^"_$P($G(^DIC(36,+$P(IBI0,U,8),0)),U,1)_"^"_$P($G(^IBE(356.11,+$P(IBI0,U,4),0)),U,3)
"RTN","IBTRCD1",109,0)
 ..Q
"RTN","IBTRCD1",110,0)
 .Q
"RTN","IBTRCD1",111,0)
 I $O(IBI(0)) D ASKDEL I IBDEL D
"RTN","IBTRCD1",112,0)
 .I $P(^IBT(356.2,IBTRC,0),U,24)!$O(IBI(+$O(IBI(0)))) D
"RTN","IBTRCD1",113,0)
 ..W !!,?3,"WARNING: This patient has the following multiple Next Review Dates: "
"RTN","IBTRCD1",114,0)
 ..W !!!,?5,"REVIEW",?18,"INSURANCE COMPANY",?45,"TYPE OF CONTACT",?65,"NEXT REV. DATE"
"RTN","IBTRCD1",115,0)
 ..W !,?5,$TR($J(" ",IOM-5)," ","=")
"RTN","IBTRCD1",116,0)
 ..S IBIX=0 F  S IBIX=$O(IBI(IBIX)) Q:'IBIX  D
"RTN","IBTRCD1",117,0)
 ...W !,?5,$$DAT1^IBOUTL(+^IBT(356.2,IBIX,0)),?18,$E($P(IBI(IBIX),U,2),1,23),?45,$P(IBI(IBIX),U,3),?65,$P(IBI(IBIX),U,1)
"RTN","IBTRCD1",118,0)
 ...Q
"RTN","IBTRCD1",119,0)
 ..W !,?5,$TR($J(" ",IOM-5)," ","=") S DIR("A")="Press RETURN to continue" D PAUSE^IBOUTL Q
"RTN","IBTRCD1",120,0)
 Q
"RTN","IBTRCD1",121,0)
 ;
"RTN","IBTRCD1",122,0)
ASKDEL ; -- ask if okay to delete next review dates
"RTN","IBTRCD1",123,0)
 S IBDEL=1
"RTN","IBTRCD1",124,0)
 Q
"RTN","IBTRCD1",125,0)
 ;
"RTN","IBTRCD1",126,0)
10 ;;1.07///@;.2///@;.21///@
"RTN","IBTRCD1",127,0)
20 ;;.14///@;1.08///@;.2///@;21///@;.28///@
"RTN","IBTRCD1",128,0)
30 ;;.14///@;1.07///@;1.08///@;.2///@;21///@;.28///@
"RTN","IBTRCD1",129,0)
40 ;;.14///@;1.07///@;1.08///@;21///@;.28///@
"RTN","IBTRCD1",130,0)
50 ;;.14///@;1.07///@;1.08///@;.2///@;.28///@
"RTN","IBTRCD1",131,0)
99 ;;.14///@;1.07///@;1.08///@;.2///@;21///@;.28///@
"VER")
8.0^22.0
"BLD",7025,6)
^341
**END**
**END**
