Released XM*7.1*37 SEQ #32
Extracted from mail message
**KIDS**:XM*7.1*37^

**INSTALL NAME**
XM*7.1*37
"BLD",16,0)
XM*7.1*37^MAILMAN^0^2970212^n
"BLD",16,1,0)
^^147^147^2970212^^^^
"BLD",16,1,1,0)
We recommend that you run option XMAUTOPURGE daily to purge your system of
"BLD",16,1,2,0)
unreferenced messages.  It runs approximately 40 minutes per 100,000 messages.
"BLD",16,1,3,0)
Your mileage may vary.
"BLD",16,1,4,0)

"BLD",16,1,5,0)
Option XMSTAT will show you the results of the last 20 purges: purge type,
"BLD",16,1,6,0)
when they were run and how long they took, and how many messages were purged.
"BLD",16,1,7,0)

"BLD",16,1,8,0)
MailMan patch XM*7.1*37 contains the following enhancements and bug fixes:
"BLD",16,1,9,0)

"BLD",16,1,10,0)
NOIS:  LAK-0396-31177
"BLD",16,1,11,0)
Rtns:  ^XMA32,^XMA32A
"BLD",16,1,12,0)
These "date purge" routines have been changed to
"BLD",16,1,13,0)
- improve efficiency
"BLD",16,1,14,0)
- make the coding clearer
"BLD",16,1,15,0)
- recognize more internet date formats
"BLD",16,1,16,0)
- purge messages which think they are responses but really aren't
"BLD",16,1,17,0)
- purge responses which think they are original messages but really aren't
"BLD",16,1,18,0)
- recognize and comply with a task stop request
"BLD",16,1,19,0)

"BLD",16,1,20,0)
NOIS:  NYN-0996-10302
"BLD",16,1,21,0)
Rtns:  ^XMA3
"BLD",16,1,22,0)
DD:    file 4.3, field #4.304, 'MESSAGES NOT TO PURGE WEEKDAYS'
"BLD",16,1,23,0)
Makes the documentation in the routine and DD match the code in the routine.
"BLD",16,1,24,0)

"BLD",16,1,25,0)
NOIS:  MIN-0195-40075
"BLD",16,1,26,0)
Rtns:  ^XMA3,^XMA30,^XMA31
"BLD",16,1,27,0)
Make sure that messages within the no-purge-days buffer aren't deleted.
"BLD",16,1,28,0)

"BLD",16,1,29,0)
NOIS:  WBP-0996-22202
"BLD",16,1,30,0)
Rtns:  ^XMA3,^XMA30,^XMA31
"BLD",16,1,31,0)
DD:    file 4.3, new field #142, 'NO-PURGE DAYS BUFFER'
"BLD",16,1,32,0)
Lets the site specify the no-purge number of days.
"BLD",16,1,33,0)
Routines are modified to improve efficiency and clarity.
"BLD",16,1,34,0)

"BLD",16,1,35,0)
STANDARD DATA DICTIONARY #4.3 -- KERNEL SITE PARAMETERS FILE   11/1/96  PAGE 127
"BLD",16,1,36,0)
STORED IN ^XMB(1,  (1 ENTRY)   SITE: MAILMAN RELEASED   UCI: REL,NMM (VERSION 7.
"BLD",16,1,37,0)
1)   
"BLD",16,1,38,0)

"BLD",16,1,39,0)
DATA          NAME                  GLOBAL        DATA
"BLD",16,1,40,0)
ELEMENT       TITLE                 LOCATION      TYPE
"BLD",16,1,41,0)
-------------------------------------------------------------------------------
"BLD",16,1,42,0)
4.3,142       NO-PURGE DAYS BUFFER   .14;2 NUMBER
"BLD",16,1,43,0)

"BLD",16,1,44,0)
              INPUT TRANSFORM:  K:+X'=X!(X>10)!(X<1)!(X?.E1"."1N.N) X
"BLD",16,1,45,0)

"BLD",16,1,46,0)
              LAST EDITED:      OCT 08, 1996 
"BLD",16,1,47,0)
              HELP-PROMPT:      Type a Number between 1 and 10, 0 Decimal 
"BLD",16,1,48,0)
                                Digits 
"BLD",16,1,49,0)
              DESCRIPTION:      This field is used during the
"BLD",16,1,50,0)
                                un-referenced-messages purge to avoid purging
"BLD",16,1,51,0)
                                the last few messages in the message file,
"BLD",16,1,52,0)
                                according to their send date.
"BLD",16,1,53,0)
                                We subtract the NO-PURGE DAYS BUFFER from
"BLD",16,1,54,0)
                                today's date, giving a 'no-purge date'.  Local
"BLD",16,1,55,0)
                                messages which were created on or after that
"BLD",16,1,56,0)
                                date are not subject to purge.  Messages from
"BLD",16,1,57,0)
                                other sites are not affected by this buffer.  
"BLD",16,1,58,0)
                                If this field is not filled in, it defaults to
"BLD",16,1,59,0)
                                7 days.  One day is probably all that is
"BLD",16,1,60,0)
                                needed, however.  
"BLD",16,1,61,0)
                                One situation in which this buffer may be
"BLD",16,1,62,0)
                                useful is in the case of a message sent only to
"BLD",16,1,63,0)
                                a remote site.  Such a message is unreferenced
"BLD",16,1,64,0)
                                and would otherwise be subject to purge.  If a
"BLD",16,1,65,0)
                                reply came from the remote site after the
"BLD",16,1,66,0)
                                original message had been purged, the sender
"BLD",16,1,67,0)
                                would have access only to the reply and not to
"BLD",16,1,68,0)
                                the original message.  The NO-PURGE DAYS BUFFER
"BLD",16,1,69,0)
                                could be set to a reasonable number of days to
"BLD",16,1,70,0)
                                allow for a reply.
"BLD",16,1,71,0)

"BLD",16,1,72,0)
NOIS:  WBP-0596-21011
"BLD",16,1,73,0)
Rtns:  ^XMDIRSND,^XMDIRRCV
"BLD",16,1,74,0)
Delete Server messages from Postmaster's Mailbox after processing them.
"BLD",16,1,75,0)

"BLD",16,1,76,0)
NOIS:  MCM-1295-51144
"BLD",16,1,77,0)
Rtns:  ^XMA3
"BLD",16,1,78,0)
While cleaning out Postmaster's ARRIVING basket, deletes any message which
"BLD",16,1,79,0)
is still arriving after 'NO-PURGE DAYS BUFFER' number of days.
"BLD",16,1,80,0)

"BLD",16,1,81,0)
NOIS:  None
"BLD",16,1,82,0)
Rtns:  ^XMADJF1B,^XMYPOST7
"BLD",16,1,83,0)
This problem was revealed during testing of this patch.  MailMan does not
"BLD",16,1,84,0)
use FileMan to add messages to a user's basket; he does it himself, and that
"BLD",16,1,85,0)
includes updating the zero node.  Up 'til now, when MM delivered a message to
"BLD",16,1,86,0)
a user's basket, he put the message number (not the number of messages) into
"BLD",16,1,87,0)
piece 4 of the zero node of the message multiple.  This patch corrects that
"BLD",16,1,88,0)
mistake.  ^XMYPOST7 goes through all message multiples of everyone's mailbox
"BLD",16,1,89,0)
and corrects the message multiple zero nodes.
"BLD",16,1,90,0)

"BLD",16,1,91,0)
NOIS:  DAY-0196-41801
"BLD",16,1,92,0)
Rtns:  ^XMA30
"BLD",16,1,93,0)
The user status report now includes 'last sign on', as well as 'last mail use'.
"BLD",16,1,94,0)

"BLD",16,1,95,0)
===========================================================================
"BLD",16,1,96,0)
This patch should be installed after hours, when user activity is at a
"BLD",16,1,97,0)
minimum.  You should put the XMUSER Option out of order.  No one should be
"BLD",16,1,98,0)
using MailMan.  The filers (mail delivery tasks) should not be running.
"BLD",16,1,99,0)

"BLD",16,1,100,0)
The post-install routine, ^XMYPOST7, will run about 3 minutes per
"BLD",16,1,101,0)
1000 mailboxes.  See the description above about what it will be doing.
"BLD",16,1,102,0)
*NOTE*:  It will try to lock ^XMB(3.7).  If it cannot lock it, it will not
"BLD",16,1,103,0)
run, and you will have to run it manually at a future time.  So if you see
"BLD",16,1,104,0)
that ^XMYPOST7 stopped running as soon as it started, then you know it could
"BLD",16,1,105,0)
not get a lock. 
"BLD",16,1,106,0)

"BLD",16,1,107,0)
^XMYPOST8 will not run.  Do not run it.
"BLD",16,1,108,0)
===========================================================================
"BLD",16,1,109,0)
 
"BLD",16,1,110,0)
INSTALLATION:
"BLD",16,1,111,0)
1.  This routine is usually mapped on systems that allow mapping,
"BLD",16,1,112,0)
    so you will need to disable mapping for the affected routine.
"BLD",16,1,113,0)
2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",16,1,114,0)
    option will load the KIDS package onto your system.
"BLD",16,1,115,0)
3.  The patch has now been loaded into a Transport global on your
"BLD",16,1,116,0)
    system. You now need to use KIDS to install the Transport global.
"BLD",16,1,117,0)
4.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",16,1,118,0)
    options:
"BLD",16,1,119,0)
       Verify Checksums in Transport Global
"BLD",16,1,120,0)
       Print Transport Global
"BLD",16,1,121,0)
       Compare Transport Global to Current System
"BLD",16,1,122,0)
       Backup a Transport Global
"BLD",16,1,123,0)
       Install Package(s)
"BLD",16,1,124,0)
5.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"BLD",16,1,125,0)
    other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",16,1,126,0)
6.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",16,1,127,0)
============================================================================ 
"BLD",16,1,128,0)
  
"BLD",16,1,129,0)
ROUTINES:
"BLD",16,1,130,0)
The second line of the routine now looks like:
"BLD",16,1,131,0)
       ;;7.1;MailMan;**[patch list]**;Jun 02, 1994
"BLD",16,1,132,0)
 
"BLD",16,1,133,0)
              Before          After
"BLD",16,1,134,0)
Name          Checksum        Checksum        Patch List
"BLD",16,1,135,0)
----------------------------------------------------------
"BLD",16,1,136,0)
XMA3          11195689        14547045         37
"BLD",16,1,137,0)
XMA30          5617809         7561526         37
"BLD",16,1,138,0)
XMA31          2140577            1080         27,37
"BLD",16,1,139,0)
XMA32         13342847        12437801         37
"BLD",16,1,140,0)
XMA32A        11841830         9601895         27,37
"BLD",16,1,141,0)
XMADJF1B       4665477         4754529         10,16,37
"BLD",16,1,142,0)
XMDIRRCV       1862431         1909690         37
"BLD",16,1,143,0)
XMDIRSND       1508027         1583505         37
"BLD",16,1,144,0)
XMYPOST7       **new**          959425         37
"BLD",16,1,145,0)
XMYPOST8       **new**          649189         37
"BLD",16,1,146,0)

"BLD",16,1,147,0)
============================================================================
"BLD",16,4,0)
^9.64PA^4.3^1
"BLD",16,4,4.3,0)
4.3
"BLD",16,4,4.3,2,0)
^9.641^4.3^1
"BLD",16,4,4.3,2,4.3,0)
KERNEL SITE PARAMETERS  (File-top level)
"BLD",16,4,4.3,2,4.3,1,0)
^9.6411^142^2
"BLD",16,4,4.3,2,4.3,1,4.304,0)
MESSAGES NOT TO PURGE WEEKDAYS
"BLD",16,4,4.3,2,4.3,1,142,0)
NO-PURGE DAYS BUFFER
"BLD",16,4,4.3,222)
y^y^p^^^^n
"BLD",16,4,"APDD",4.3,4.3)

"BLD",16,4,"APDD",4.3,4.3,4.304)

"BLD",16,4,"APDD",4.3,4.3,142)

"BLD",16,4,"B",4.3,4.3)

"BLD",16,"INIT")
XMYPOST7
"BLD",16,"KRN",0)
^9.67PA^19^12
"BLD",16,"KRN",.4,0)
.4
"BLD",16,"KRN",.401,0)
.401
"BLD",16,"KRN",.402,0)
.402
"BLD",16,"KRN",.403,0)
.403
"BLD",16,"KRN",.5,0)
.5
"BLD",16,"KRN",.84,0)
.84
"BLD",16,"KRN",3.6,0)
3.6
"BLD",16,"KRN",3.8,0)
3.8
"BLD",16,"KRN",9.2,0)
9.2
"BLD",16,"KRN",9.8,0)
9.8
"BLD",16,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",16,"KRN",9.8,"NM",1,0)
XMA32^^0^B43821626
"BLD",16,"KRN",9.8,"NM",2,0)
XMA32A^^0^B38905746
"BLD",16,"KRN",9.8,"NM",3,0)
XMA30^^0^B19951204
"BLD",16,"KRN",9.8,"NM",4,0)
XMA31^^0^B1749
"BLD",16,"KRN",9.8,"NM",5,0)
XMA3^^0^B78530667
"BLD",16,"KRN",9.8,"NM",6,0)
XMDIRRCV^^0^B3057108
"BLD",16,"KRN",9.8,"NM",7,0)
XMDIRSND^^0^B2507228
"BLD",16,"KRN",9.8,"NM",8,0)
XMADJF1B^^0^B9889040
"BLD",16,"KRN",9.8,"NM",9,0)
XMYPOST7^^0^B1371686
"BLD",16,"KRN",9.8,"NM",10,0)
XMYPOST8^^0^B892272
"BLD",16,"KRN",9.8,"NM","B","XMA3",5)

"BLD",16,"KRN",9.8,"NM","B","XMA30",3)

"BLD",16,"KRN",9.8,"NM","B","XMA31",4)

"BLD",16,"KRN",9.8,"NM","B","XMA32",1)

"BLD",16,"KRN",9.8,"NM","B","XMA32A",2)

"BLD",16,"KRN",9.8,"NM","B","XMADJF1B",8)

"BLD",16,"KRN",9.8,"NM","B","XMDIRRCV",6)

"BLD",16,"KRN",9.8,"NM","B","XMDIRSND",7)

"BLD",16,"KRN",9.8,"NM","B","XMYPOST7",9)

"BLD",16,"KRN",9.8,"NM","B","XMYPOST8",10)

"BLD",16,"KRN",19,0)
19
"BLD",16,"KRN",19,"NM",0)
^9.68A^^
"BLD",16,"KRN",19.1,0)
19.1
"BLD",16,"KRN","B",.4,.4)

"BLD",16,"KRN","B",.401,.401)

"BLD",16,"KRN","B",.402,.402)

"BLD",16,"KRN","B",.403,.403)

"BLD",16,"KRN","B",.5,.5)

"BLD",16,"KRN","B",.84,.84)

"BLD",16,"KRN","B",3.6,3.6)

"BLD",16,"KRN","B",3.8,3.8)

"BLD",16,"KRN","B",9.2,9.2)

"BLD",16,"KRN","B",9.8,9.8)

"BLD",16,"KRN","B",19,19)

"BLD",16,"KRN","B",19.1,19.1)

"BLD",16,"QUES",0)
^9.62^^
"FIA",4.3)
KERNEL SITE PARAMETERS
"FIA",4.3,0)
^XMB(1,
"FIA",4.3,0,0)
4.3P
"FIA",4.3,0,1)
y^y^p^^^^n
"FIA",4.3,0,10)

"FIA",4.3,0,11)

"FIA",4.3,0,"RLRO")

"FIA",4.3,0,"VR")
7.1^XM
"FIA",4.3,4.3)
1
"FIA",4.3,4.3,4.304)

"FIA",4.3,4.3,142)

"INIT")
XMYPOST7
"PKG",6,-1)
1^1
"PKG",6,0)
MAILMAN^XM^Electronic Mail, both local and networked
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
7.1^2940602^2950925
"PKG",6,22,1,"PAH",1,0)
37^2970212
"PKG",6,22,1,"PAH",1,1,0)
^^147^147^2970212
"PKG",6,22,1,"PAH",1,1,1,0)
We recommend that you run option XMAUTOPURGE daily to purge your system of
"PKG",6,22,1,"PAH",1,1,2,0)
unreferenced messages.  It runs approximately 40 minutes per 100,000 messages.
"PKG",6,22,1,"PAH",1,1,3,0)
Your mileage may vary.
"PKG",6,22,1,"PAH",1,1,4,0)

"PKG",6,22,1,"PAH",1,1,5,0)
Option XMSTAT will show you the results of the last 20 purges: purge type,
"PKG",6,22,1,"PAH",1,1,6,0)
when they were run and how long they took, and how many messages were purged.
"PKG",6,22,1,"PAH",1,1,7,0)

"PKG",6,22,1,"PAH",1,1,8,0)
MailMan patch XM*7.1*37 contains the following enhancements and bug fixes:
"PKG",6,22,1,"PAH",1,1,9,0)

"PKG",6,22,1,"PAH",1,1,10,0)
NOIS:  LAK-0396-31177
"PKG",6,22,1,"PAH",1,1,11,0)
Rtns:  ^XMA32,^XMA32A
"PKG",6,22,1,"PAH",1,1,12,0)
These "date purge" routines have been changed to
"PKG",6,22,1,"PAH",1,1,13,0)
- improve efficiency
"PKG",6,22,1,"PAH",1,1,14,0)
- make the coding clearer
"PKG",6,22,1,"PAH",1,1,15,0)
- recognize more internet date formats
"PKG",6,22,1,"PAH",1,1,16,0)
- purge messages which think they are responses but really aren't
"PKG",6,22,1,"PAH",1,1,17,0)
- purge responses which think they are original messages but really aren't
"PKG",6,22,1,"PAH",1,1,18,0)
- recognize and comply with a task stop request
"PKG",6,22,1,"PAH",1,1,19,0)

"PKG",6,22,1,"PAH",1,1,20,0)
NOIS:  NYN-0996-10302
"PKG",6,22,1,"PAH",1,1,21,0)
Rtns:  ^XMA3
"PKG",6,22,1,"PAH",1,1,22,0)
DD:    file 4.3, field #4.304, 'MESSAGES NOT TO PURGE WEEKDAYS'
"PKG",6,22,1,"PAH",1,1,23,0)
Makes the documentation in the routine and DD match the code in the routine.
"PKG",6,22,1,"PAH",1,1,24,0)

"PKG",6,22,1,"PAH",1,1,25,0)
NOIS:  MIN-0195-40075
"PKG",6,22,1,"PAH",1,1,26,0)
Rtns:  ^XMA3,^XMA30,^XMA31
"PKG",6,22,1,"PAH",1,1,27,0)
Make sure that messages within the no-purge-days buffer aren't deleted.
"PKG",6,22,1,"PAH",1,1,28,0)

"PKG",6,22,1,"PAH",1,1,29,0)
NOIS:  WBP-0996-22202
"PKG",6,22,1,"PAH",1,1,30,0)
Rtns:  ^XMA3,^XMA30,^XMA31
"PKG",6,22,1,"PAH",1,1,31,0)
DD:    file 4.3, new field #142, 'NO-PURGE DAYS BUFFER'
"PKG",6,22,1,"PAH",1,1,32,0)
Lets the site specify the no-purge number of days.
"PKG",6,22,1,"PAH",1,1,33,0)
Routines are modified to improve efficiency and clarity.
"PKG",6,22,1,"PAH",1,1,34,0)

"PKG",6,22,1,"PAH",1,1,35,0)
STANDARD DATA DICTIONARY #4.3 -- KERNEL SITE PARAMETERS FILE   11/1/96  PAGE 127
"PKG",6,22,1,"PAH",1,1,36,0)
STORED IN ^XMB(1,  (1 ENTRY)   SITE: MAILMAN RELEASED   UCI: REL,NMM (VERSION 7.
"PKG",6,22,1,"PAH",1,1,37,0)
1)   
"PKG",6,22,1,"PAH",1,1,38,0)

"PKG",6,22,1,"PAH",1,1,39,0)
DATA          NAME                  GLOBAL        DATA
"PKG",6,22,1,"PAH",1,1,40,0)
ELEMENT       TITLE                 LOCATION      TYPE
"PKG",6,22,1,"PAH",1,1,41,0)
-------------------------------------------------------------------------------
"PKG",6,22,1,"PAH",1,1,42,0)
4.3,142       NO-PURGE DAYS BUFFER   .14;2 NUMBER
"PKG",6,22,1,"PAH",1,1,43,0)

"PKG",6,22,1,"PAH",1,1,44,0)
              INPUT TRANSFORM:  K:+X'=X!(X>10)!(X<1)!(X?.E1"."1N.N) X
"PKG",6,22,1,"PAH",1,1,45,0)

"PKG",6,22,1,"PAH",1,1,46,0)
              LAST EDITED:      OCT 08, 1996 
"PKG",6,22,1,"PAH",1,1,47,0)
              HELP-PROMPT:      Type a Number between 1 and 10, 0 Decimal 
"PKG",6,22,1,"PAH",1,1,48,0)
                                Digits 
"PKG",6,22,1,"PAH",1,1,49,0)
              DESCRIPTION:      This field is used during the
"PKG",6,22,1,"PAH",1,1,50,0)
                                un-referenced-messages purge to avoid purging
"PKG",6,22,1,"PAH",1,1,51,0)
                                the last few messages in the message file,
"PKG",6,22,1,"PAH",1,1,52,0)
                                according to their send date.
"PKG",6,22,1,"PAH",1,1,53,0)
                                We subtract the NO-PURGE DAYS BUFFER from
"PKG",6,22,1,"PAH",1,1,54,0)
                                today's date, giving a 'no-purge date'.  Local
"PKG",6,22,1,"PAH",1,1,55,0)
                                messages which were created on or after that
"PKG",6,22,1,"PAH",1,1,56,0)
                                date are not subject to purge.  Messages from
"PKG",6,22,1,"PAH",1,1,57,0)
                                other sites are not affected by this buffer.  
"PKG",6,22,1,"PAH",1,1,58,0)
                                If this field is not filled in, it defaults to
"PKG",6,22,1,"PAH",1,1,59,0)
                                7 days.  One day is probably all that is
"PKG",6,22,1,"PAH",1,1,60,0)
                                needed, however.  
"PKG",6,22,1,"PAH",1,1,61,0)
                                One situation in which this buffer may be
"PKG",6,22,1,"PAH",1,1,62,0)
                                useful is in the case of a message sent only to
"PKG",6,22,1,"PAH",1,1,63,0)
                                a remote site.  Such a message is unreferenced
"PKG",6,22,1,"PAH",1,1,64,0)
                                and would otherwise be subject to purge.  If a
"PKG",6,22,1,"PAH",1,1,65,0)
                                reply came from the remote site after the
"PKG",6,22,1,"PAH",1,1,66,0)
                                original message had been purged, the sender
"PKG",6,22,1,"PAH",1,1,67,0)
                                would have access only to the reply and not to
"PKG",6,22,1,"PAH",1,1,68,0)
                                the original message.  The NO-PURGE DAYS BUFFER
"PKG",6,22,1,"PAH",1,1,69,0)
                                could be set to a reasonable number of days to
"PKG",6,22,1,"PAH",1,1,70,0)
                                allow for a reply.
"PKG",6,22,1,"PAH",1,1,71,0)

"PKG",6,22,1,"PAH",1,1,72,0)
NOIS:  WBP-0596-21011
"PKG",6,22,1,"PAH",1,1,73,0)
Rtns:  ^XMDIRSND,^XMDIRRCV
"PKG",6,22,1,"PAH",1,1,74,0)
Delete Server messages from Postmaster's Mailbox after processing them.
"PKG",6,22,1,"PAH",1,1,75,0)

"PKG",6,22,1,"PAH",1,1,76,0)
NOIS:  MCM-1295-51144
"PKG",6,22,1,"PAH",1,1,77,0)
Rtns:  ^XMA3
"PKG",6,22,1,"PAH",1,1,78,0)
While cleaning out Postmaster's ARRIVING basket, deletes any message which
"PKG",6,22,1,"PAH",1,1,79,0)
is still arriving after 'NO-PURGE DAYS BUFFER' number of days.
"PKG",6,22,1,"PAH",1,1,80,0)

"PKG",6,22,1,"PAH",1,1,81,0)
NOIS:  None
"PKG",6,22,1,"PAH",1,1,82,0)
Rtns:  ^XMADJF1B,^XMYPOST7
"PKG",6,22,1,"PAH",1,1,83,0)
This problem was revealed during testing of this patch.  MailMan does not
"PKG",6,22,1,"PAH",1,1,84,0)
use FileMan to add messages to a user's basket; he does it himself, and that
"PKG",6,22,1,"PAH",1,1,85,0)
includes updating the zero node.  Up 'til now, when MM delivered a message to
"PKG",6,22,1,"PAH",1,1,86,0)
a user's basket, he put the message number (not the number of messages) into
"PKG",6,22,1,"PAH",1,1,87,0)
piece 4 of the zero node of the message multiple.  This patch corrects that
"PKG",6,22,1,"PAH",1,1,88,0)
mistake.  ^XMYPOST7 goes through all message multiples of everyone's mailbox
"PKG",6,22,1,"PAH",1,1,89,0)
and corrects the message multiple zero nodes.
"PKG",6,22,1,"PAH",1,1,90,0)

"PKG",6,22,1,"PAH",1,1,91,0)
NOIS:  DAY-0196-41801
"PKG",6,22,1,"PAH",1,1,92,0)
Rtns:  ^XMA30
"PKG",6,22,1,"PAH",1,1,93,0)
The user status report now includes 'last sign on', as well as 'last mail use'.
"PKG",6,22,1,"PAH",1,1,94,0)

"PKG",6,22,1,"PAH",1,1,95,0)
===========================================================================
"PKG",6,22,1,"PAH",1,1,96,0)
This patch should be installed after hours, when user activity is at a
"PKG",6,22,1,"PAH",1,1,97,0)
minimum.  You should put the XMUSER Option out of order.  No one should be
"PKG",6,22,1,"PAH",1,1,98,0)
using MailMan.  The filers (mail delivery tasks) should not be running.
"PKG",6,22,1,"PAH",1,1,99,0)

"PKG",6,22,1,"PAH",1,1,100,0)
The post-install routine, ^XMYPOST7, will run about 3 minutes per
"PKG",6,22,1,"PAH",1,1,101,0)
1000 mailboxes.  See the description above about what it will be doing.
"PKG",6,22,1,"PAH",1,1,102,0)
*NOTE*:  It will try to lock ^XMB(3.7).  If it cannot lock it, it will not
"PKG",6,22,1,"PAH",1,1,103,0)
run, and you will have to run it manually at a future time.  So if you see
"PKG",6,22,1,"PAH",1,1,104,0)
that ^XMYPOST7 stopped running as soon as it started, then you know it could
"PKG",6,22,1,"PAH",1,1,105,0)
not get a lock. 
"PKG",6,22,1,"PAH",1,1,106,0)

"PKG",6,22,1,"PAH",1,1,107,0)
^XMYPOST8 will not run.  Do not run it.
"PKG",6,22,1,"PAH",1,1,108,0)
===========================================================================
"PKG",6,22,1,"PAH",1,1,109,0)
 
"PKG",6,22,1,"PAH",1,1,110,0)
INSTALLATION:
"PKG",6,22,1,"PAH",1,1,111,0)
1.  This routine is usually mapped on systems that allow mapping,
"PKG",6,22,1,"PAH",1,1,112,0)
    so you will need to disable mapping for the affected routine.
"PKG",6,22,1,"PAH",1,1,113,0)
2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",6,22,1,"PAH",1,1,114,0)
    option will load the KIDS package onto your system.
"PKG",6,22,1,"PAH",1,1,115,0)
3.  The patch has now been loaded into a Transport global on your
"PKG",6,22,1,"PAH",1,1,116,0)
    system. You now need to use KIDS to install the Transport global.
"PKG",6,22,1,"PAH",1,1,117,0)
4.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",6,22,1,"PAH",1,1,118,0)
    options:
"PKG",6,22,1,"PAH",1,1,119,0)
       Verify Checksums in Transport Global
"PKG",6,22,1,"PAH",1,1,120,0)
       Print Transport Global
"PKG",6,22,1,"PAH",1,1,121,0)
       Compare Transport Global to Current System
"PKG",6,22,1,"PAH",1,1,122,0)
       Backup a Transport Global
"PKG",6,22,1,"PAH",1,1,123,0)
       Install Package(s)
"PKG",6,22,1,"PAH",1,1,124,0)
5.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"PKG",6,22,1,"PAH",1,1,125,0)
    other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",6,22,1,"PAH",1,1,126,0)
6.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",6,22,1,"PAH",1,1,127,0)
============================================================================ 
"PKG",6,22,1,"PAH",1,1,128,0)
  
"PKG",6,22,1,"PAH",1,1,129,0)
ROUTINES:
"PKG",6,22,1,"PAH",1,1,130,0)
The second line of the routine now looks like:
"PKG",6,22,1,"PAH",1,1,131,0)
       ;;7.1;MailMan;**[patch list]**;Jun 02, 1994
"PKG",6,22,1,"PAH",1,1,132,0)
 
"PKG",6,22,1,"PAH",1,1,133,0)
              Before          After
"PKG",6,22,1,"PAH",1,1,134,0)
Name          Checksum        Checksum        Patch List
"PKG",6,22,1,"PAH",1,1,135,0)
----------------------------------------------------------
"PKG",6,22,1,"PAH",1,1,136,0)
XMA3          11195689        14547045         37
"PKG",6,22,1,"PAH",1,1,137,0)
XMA30          5617809         7561526         37
"PKG",6,22,1,"PAH",1,1,138,0)
XMA31          2140577            1080         27,37
"PKG",6,22,1,"PAH",1,1,139,0)
XMA32         13342847        12437801         37
"PKG",6,22,1,"PAH",1,1,140,0)
XMA32A        11841830         9601895         27,37
"PKG",6,22,1,"PAH",1,1,141,0)
XMADJF1B       4665477         4754529         10,16,37
"PKG",6,22,1,"PAH",1,1,142,0)
XMDIRRCV       1862431         1909690         37
"PKG",6,22,1,"PAH",1,1,143,0)
XMDIRSND       1508027         1583505         37
"PKG",6,22,1,"PAH",1,1,144,0)
XMYPOST7       **new**          959425         37
"PKG",6,22,1,"PAH",1,1,145,0)
XMYPOST8       **new**          649189         37
"PKG",6,22,1,"PAH",1,1,146,0)

"PKG",6,22,1,"PAH",1,1,147,0)
============================================================================
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","XMA3")
0^5^B78530667
"RTN","XMA3",1,0)
XMA3 ;(WASH ISC)/CAP-XMCLEAN, XMAUTOPURGE ;01/07/97  13:05
"RTN","XMA3",2,0)
 ;;7.1;MailMan;**37**;Jun 02, 1994
"RTN","XMA3",3,0)
 ; Supported entry points:
"RTN","XMA3",4,0)
 ; STAT       Option: XMSTAT  - Message Statistics
"RTN","XMA3",5,0)
 ; SCAN       Option: XMPURGE - Purge Unreferenced Messages, then STAT
"RTN","XMA3",6,0)
 ; CLEAN      Option: XMCLEAN - Clean out waste baskets
"RTN","XMA3",7,0)
 ; EN         Option: XMAUTOPURGE - Purge Unreferenced Messages
"RTN","XMA3",8,0)
 Q
"RTN","XMA3",9,0)
EN ;
"RTN","XMA3",10,0)
 N XMPARM
"RTN","XMA3",11,0)
 D PURGEIT
"RTN","XMA3",12,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMA3",13,0)
 Q
"RTN","XMA3",14,0)
STAT ;
"RTN","XMA3",15,0)
 D AUDIT^XMA30 ; Show purge audit records
"RTN","XMA3",16,0)
 D USERSTAT^XMA30 ; Show user mailbox info
"RTN","XMA3",17,0)
 Q
"RTN","XMA3",18,0)
SCAN ; PURGE MESSAGES
"RTN","XMA3",19,0)
 N DIR,XMPARM
"RTN","XMA3",20,0)
 I $D(ZTQUEUED) D  Q
"RTN","XMA3",21,0)
 . D PURGEIT
"RTN","XMA3",22,0)
 . S ZTREQ="@"
"RTN","XMA3",23,0)
 W !!,"Checking / correcting Mail-boxes",!!
"RTN","XMA3",24,0)
 D AUDIT^XMA30 ; Show purge audit records
"RTN","XMA3",25,0)
 S DIR(0)="E" D ^DIR Q:$D(DIRUT)  K DIR
"RTN","XMA3",26,0)
 W !!,"I will purge messages which are not in anybody's Mailbox."
"RTN","XMA3",27,0)
 W !,"This will be done by comparing the message numbers in the MESSAGE file (3.9)"
"RTN","XMA3",28,0)
 W !,"against the 'M' cross reference of the MAILBOX file (3.7)."
"RTN","XMA3",29,0)
 W !!,"Because this is a real-time dynamic cross reference, it is"
"RTN","XMA3",30,0)
 W !,"RECOMMENDED that you run the INTEGRITY CHECKER with some"
"RTN","XMA3",31,0)
 W !,"frequency, and CORRECT problems (TYPE 6 & 25 especially), if any."
"RTN","XMA3",32,0)
 W !!,"Also do a BACK-UP just before this runs.  An INTEGRITY CHECK"
"RTN","XMA3",33,0)
 W !,"will run after the PURGE.  You may want to go back to the BACK-UP"
"RTN","XMA3",34,0)
 W !,"if many problems are discovered.",!
"RTN","XMA3",35,0)
 D GETPARMS
"RTN","XMA3",36,0)
 S DIR("A")="Do you really want to purge all unreferenced messages"
"RTN","XMA3",37,0)
 S DIR("B")="NO"
"RTN","XMA3",38,0)
 S DIR(0)="Y"
"RTN","XMA3",39,0)
 D ^DIR I Y=0!$D(DIRUT) Q
"RTN","XMA3",40,0)
 D WAIT^DICD
"RTN","XMA3",41,0)
 D PURGEIT
"RTN","XMA3",42,0)
 K DIR S DIR(0)="E" D ^DIR Q:$D(DIRUT)  K DIR
"RTN","XMA3",43,0)
 D STAT
"RTN","XMA3",44,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMA3",45,0)
 Q
"RTN","XMA3",46,0)
PURGEIT ;
"RTN","XMA3",47,0)
 N XMKILL,XMIEN,XMCNT,XMZ
"RTN","XMA3",48,0)
 D INIT
"RTN","XMA3",49,0)
 D MPURGE
"RTN","XMA3",50,0)
 D FINISH
"RTN","XMA3",51,0)
 Q
"RTN","XMA3",52,0)
INIT ;
"RTN","XMA3",53,0)
 D:'$D(XMPARM) GETPARMS
"RTN","XMA3",54,0)
 D ENT^XMUT4A:'$P($G(^XMB(1,1,.12)),U) ; Integrity check
"RTN","XMA3",55,0)
 S (XMCNT,XMKILL("MSG"),XMKILL("RESP"))=0
"RTN","XMA3",56,0)
 D AUDTPURG^XMA32 ; purge audit records
"RTN","XMA3",57,0)
 D DONTPURG ; Note all messages which shouldn't be purged
"RTN","XMA3",58,0)
 D INITAUDT^XMA32A(.XMPARM,.XMIEN)
"RTN","XMA3",59,0)
 Q
"RTN","XMA3",60,0)
GETPARMS ;
"RTN","XMA3",61,0)
 N XMBUFZ,XMZLAST,XMSBUF,XMBUFREC
"RTN","XMA3",62,0)
 S XMZLAST=+$P(^XMB(3.9,0),U,3) ; Last msg number in msg file
"RTN","XMA3",63,0)
 S (XMPARM("TYPE"),XMPARM("START"))=0
"RTN","XMA3",64,0)
 ; Set up a message number buffer, beyond which we won't purge
"RTN","XMA3",65,0)
 S XMBUFREC=$G(^XMB(1,1,.14))
"RTN","XMA3",66,0)
 S XMBUFZ=+XMBUFREC ; msg number buffer size
"RTN","XMA3",67,0)
 S XMPARM("END")=XMZLAST-$S(XMBUFZ:XMBUFZ,1:1000) ; default is 1000
"RTN","XMA3",68,0)
 S:XMPARM("END")<0 XMPARM("END")=0
"RTN","XMA3",69,0)
 ; Set up a date buffer, beyond which we won't purge
"RTN","XMA3",70,0)
 S XMPARM("PDATE")=$$PDATE(+$P(XMBUFREC,U,2)) ; local send days buffer size
"RTN","XMA3",71,0)
 ; If today is Saturday, start purge at beginning.
"RTN","XMA3",72,0)
 ; If not Saturday, check MailMan Site Parameter file for field 4.304 ...
"RTN","XMA3",73,0)
 I $$DOW^XLFDT(DT,1)'=6 D
"RTN","XMA3",74,0)
 . S XMSBUF=+$P($G(^XMB(1,1,"NOTOPURGE")),U)
"RTN","XMA3",75,0)
 . I $G(^XMB("NETNAME"))="FORUM.VA.GOV",XMSBUF=0 S XMSBUF=300000
"RTN","XMA3",76,0)
 . Q:XMSBUF=0
"RTN","XMA3",77,0)
 . S XMPARM("START")=XMZLAST-XMSBUF
"RTN","XMA3",78,0)
 . S:XMPARM("START")<0 XMPARM("START")=0
"RTN","XMA3",79,0)
 Q:$D(ZTQUEUED)
"RTN","XMA3",80,0)
 W !,"Unreferenced messages will be purged if the message number"
"RTN","XMA3",81,0)
 W !,"is between ",XMPARM("START")," and ",XMPARM("END"),"."
"RTN","XMA3",82,0)
 W !,"However, locally generated messages will not be purged"
"RTN","XMA3",83,0)
 W !,"if they were sent on or after ",$$FMDT^XMA30(XMPARM("PDATE")),"."
"RTN","XMA3",84,0)
 W !!,"The following messages are considered 'referenced' and will not be purged:"
"RTN","XMA3",85,0)
 W !,"- Messages in users' baskets"
"RTN","XMA3",86,0)
 W !,"- Messages in transit (arriving or being sent)"
"RTN","XMA3",87,0)
 W !,"- Server messages"
"RTN","XMA3",88,0)
 W !,"- Messages being edited (includes aborted edits)"
"RTN","XMA3",89,0)
 W !,"- Later'd messages"
"RTN","XMA3",90,0)
 Q
"RTN","XMA3",91,0)
PDATE(XMBUFD) ; Get date buffer, beyond which we won't purge
"RTN","XMA3",92,0)
 S:XMBUFD=0 XMBUFD=7 ; default is 7 days
"RTN","XMA3",93,0)
 Q $$FMADD^XLFDT(DT,-XMBUFD)
"RTN","XMA3",94,0)
FINISH ;
"RTN","XMA3",95,0)
 K ^TMP("XM",$J)
"RTN","XMA3",96,0)
 S XMKILL("TOTAL")=XMKILL("MSG")+XMKILL("RESP")
"RTN","XMA3",97,0)
 W:'$D(ZTQUEUED) !!,XMCNT," messages processed, ",$P(^XMB(3.9,0),U,4)-XMKILL("TOTAL")," messages kept, ",XMKILL("TOTAL")," messages purged."
"RTN","XMA3",98,0)
 D CHKAUDT^XMA32A(XMIEN,XMZ,.XMKILL)
"RTN","XMA3",99,0)
 S $P(^(0),U,4)=$P(^XMB(3.9,0),U,4)-XMKILL("TOTAL")
"RTN","XMA3",100,0)
 Q
"RTN","XMA3",101,0)
DONTPURG ; Find all messages which might not be in someone's mailbox,
"RTN","XMA3",102,0)
 ; but which shouldn't be purged anyway.
"RTN","XMA3",103,0)
 N XMDUZ,XMZ,XMZR,XMID,XMQ,XMT,XMD,XMINST
"RTN","XMA3",104,0)
 K ^TMP("XM",$J)
"RTN","XMA3",105,0)
 ;
"RTN","XMA3",106,0)
 ; DON'T PURGE LOCAL MESSAGES AND REPLIES WHICH ARE ABOUT TO BE DELIVERED
"RTN","XMA3",107,0)
 ;
"RTN","XMA3",108,0)
 S XMZ=0 ; Original new msgs
"RTN","XMA3",109,0)
 F  S XMZ=$O(^XMBPOST("POST",XMZ)) Q:XMZ'>0  S ^TMP("XM",$J,"NOP",XMZ)=""
"RTN","XMA3",110,0)
 ;
"RTN","XMA3",111,0)
 S XMZ="R"
"RTN","XMA3",112,0)
 F  S XMZ=$O(^XMBPOST("POST",XMZ)) Q:XMZ=""  D
"RTN","XMA3",113,0)
 . S ^TMP("XM",$J,"NOP",$E(XMZ,2,99))="" ; Original msg to new replies
"RTN","XMA3",114,0)
 . S XMID=""
"RTN","XMA3",115,0)
 . F  S XMID=$O(^XMBPOST("POST",XMZ,XMID)) Q:XMID=""  D
"RTN","XMA3",116,0)
 . . S XMZR=$P(^XMBPOST("POST",XMZ,XMID),U,5)
"RTN","XMA3",117,0)
 . . S ^TMP("XM",$J,"NOP",XMZR)="" ; Reply
"RTN","XMA3",118,0)
 ;
"RTN","XMA3",119,0)
 S (XMQ,XMT,XMZ)="" ; Queue number, Timestamp, Message IEN
"RTN","XMA3",120,0)
 F  S XMQ=$O(^XMBPOST("PGROUPM",XMQ)) Q:XMQ=""  D
"RTN","XMA3",121,0)
 . F  S XMT=$O(^XMBPOST("PGROUPM",XMQ,XMT)) Q:XMT=""  D
"RTN","XMA3",122,0)
 . . F  S XMZ=$O(^XMBPOST("PGROUPM",XMQ,XMT,XMZ)) Q:XMZ=""  D
"RTN","XMA3",123,0)
 . . . S ^TMP("XM",$J,"NOP",XMZ)="" ; Original msg
"RTN","XMA3",124,0)
 ;
"RTN","XMA3",125,0)
 S (XMQ,XMT,XMZ,XMID)="" ; Queue number, Timestamp, Message IEN, Unique ID
"RTN","XMA3",126,0)
 F  S XMQ=$O(^XMBPOST("PGROUPR",XMQ)) Q:XMQ'>0  D
"RTN","XMA3",127,0)
 . F  S XMT=$O(^XMBPOST("PGROUPR",XMQ,XMT)) Q:XMT=""  D
"RTN","XMA3",128,0)
 . . F  S XMZ=$O(^XMBPOST("PGROUPR",XMQ,XMT,XMZ)) Q:XMZ=""  D
"RTN","XMA3",129,0)
 . . . S ^TMP("XM",$J,"NOP",$E(XMZ,2,99))="" ; Original msg to new replies
"RTN","XMA3",130,0)
 . . . F  S XMID=$O(^XMBPOST("PGROUPR",XMQ,XMT,XMZ,XMID)) Q:XMID=""  D
"RTN","XMA3",131,0)
 . . . . S XMZR=$P(^XMBPOST("POST",XMZ,XMID),U,5)
"RTN","XMA3",132,0)
 . . . . S ^TMP("XM",$J,"NOP",XMZR)="" ; Reply
"RTN","XMA3",133,0)
 ;
"RTN","XMA3",134,0)
 ; DON'T PURGE MESSAGES QUEUED TO BE DELIVERED REMOTELY
"RTN","XMA3",135,0)
 S XMINST=999 ; Institution
"RTN","XMA3",136,0)
 F  S XMINST=$O(^XMB(3.7,.5,2,XMINST)) Q:XMINST'>0  D
"RTN","XMA3",137,0)
 . S XMZ=0
"RTN","XMA3",138,0)
 . F  S XMZ=$O(^XMB(3.7,.5,2,XMINST,1,XMZ)) Q:XMZ'>0  S ^TMP("XM",$J,"NOP",XMZ)=""
"RTN","XMA3",139,0)
 ;
"RTN","XMA3",140,0)
 ; DON'T PURGE LATER'D MESSAGES
"RTN","XMA3",141,0)
 S XMD=0 ; Date to be later'd
"RTN","XMA3",142,0)
 F  S XMD=$O(^XMB(3.73,XMD)) Q:XMD'>0  D
"RTN","XMA3",143,0)
 . S XMZ=$P(^XMB(3.73,XMD,0),U,3)
"RTN","XMA3",144,0)
 . S:XMZ ^TMP("XM",$J,"NOP",XMZ)="" ; Msg to be later'd
"RTN","XMA3",145,0)
 ;
"RTN","XMA3",146,0)
 ; DON'T PURGE MESSAGES WHICH ARE BEING EDITED
"RTN","XMA3",147,0)
 S (XMDUZ,XMZ)=""
"RTN","XMA3",148,0)
 F  S XMDUZ=$O(^XMB(3.7,"AD",XMDUZ)) Q:XMDUZ=""  D
"RTN","XMA3",149,0)
 . F  S XMZ=$O(^XMB(3.7,"AD",XMDUZ,XMZ)) Q:XMZ=""  S ^TMP("XM",$J,"NOP",XMZ)=""
"RTN","XMA3",150,0)
 Q
"RTN","XMA3",151,0)
MPURGE ;
"RTN","XMA3",152,0)
 N XMR,XMSEND,XMZO
"RTN","XMA3",153,0)
 S XMZ=XMPARM("START")
"RTN","XMA3",154,0)
 F  S XMZ=$O(^XMB(3.9,XMZ)) Q:XMZ'>0!(XMZ>XMPARM("END"))  D
"RTN","XMA3",155,0)
 . S XMCNT=XMCNT+1
"RTN","XMA3",156,0)
 . I '$D(ZTQUEUED),XMCNT#5000=0 W !,XMCNT
"RTN","XMA3",157,0)
 . Q:$D(^XMB(3.7,"M",XMZ))       ; Msg is in someone's basket
"RTN","XMA3",158,0)
 . Q:$D(^TMP("XM",$J,"NOP",XMZ))  ; Msg is one of "do not purge"
"RTN","XMA3",159,0)
 . S XMR=$G(^XMB(3.9,XMZ,0))
"RTN","XMA3",160,0)
 . S XMSEND=$P(XMR,U,3)
"RTN","XMA3",161,0)
 . I XMSEND="" S $P(^XMB(3.9,XMZ,0),U,3)=DT Q
"RTN","XMA3",162,0)
 . I $P(XMSEND,".")?7N,XMSEND>XMPARM("PDATE") Q
"RTN","XMA3",163,0)
 . S XMZO=$S($P(XMR,U,8):$P(XMR,U,8),$P(XMR,U)?1"R"1.N:+$E(XMR,2,99),1:"")
"RTN","XMA3",164,0)
 . I XMZO,XMZO<XMZ,$D(^XMB(3.9,XMZO,0)) Q  ; Response attached to its original msg
"RTN","XMA3",165,0)
 . D PURGE(XMZ,$P(XMR,U))
"RTN","XMA3",166,0)
 Q
"RTN","XMA3",167,0)
PURGE(XMZO,XMZOSUBJ) ; Purge message and responses
"RTN","XMA3",168,0)
 N XMZR,I
"RTN","XMA3",169,0)
 S I=0
"RTN","XMA3",170,0)
 F  S I=$O(^XMB(3.9,XMZO,3,I)) Q:I'>0  D
"RTN","XMA3",171,0)
 . S XMZR=$P($G(^XMB(3.9,XMZO,3,I,0)),U) Q:'XMZR
"RTN","XMA3",172,0)
 . D KILLRESP(XMZR,.XMKILL)
"RTN","XMA3",173,0)
 D KILLMSG(XMZO,XMZOSUBJ,.XMKILL)
"RTN","XMA3",174,0)
 Q
"RTN","XMA3",175,0)
KILLRESP(XMZ,XMKILL) ; Kill response
"RTN","XMA3",176,0)
 N XMSUBJ
"RTN","XMA3",177,0)
 Q:'$D(^XMB(3.9,XMZ))      ; Response does not exist
"RTN","XMA3",178,0)
 Q:$D(^XMB(3.7,"M",XMZ))   ; Someone has response in mailbox
"RTN","XMA3",179,0)
 S XMSUBJ=$P($G(^XMB(3.9,XMZ,0)),U)
"RTN","XMA3",180,0)
 K:XMSUBJ'="" ^XMB(3.9,"B",$E(XMSUBJ,1,30),XMZ)
"RTN","XMA3",181,0)
 K ^XMB(3.9,XMZ)
"RTN","XMA3",182,0)
 S XMKILL("RESP")=XMKILL("RESP")+1
"RTN","XMA3",183,0)
 Q
"RTN","XMA3",184,0)
KILLMSG(XMZ,XMSUBJ,XMKILL) ; Kill message
"RTN","XMA3",185,0)
 K:XMSUBJ'="" ^XMB(3.9,"B",$E(XMSUBJ,1,30),XMZ)
"RTN","XMA3",186,0)
 K ^XMB(3.9,XMZ)
"RTN","XMA3",187,0)
 S XMKILL("MSG")=XMKILL("MSG")+1
"RTN","XMA3",188,0)
 Q
"RTN","XMA3",189,0)
KILL ;FROM ALL OVER TO KILL OFF MESSAGE
"RTN","XMA3",190,0)
 I $D(^XMB(3.9,XMZ,0))#2 S X=$P(^(0),U) I X?1ANP.ANP,$D(^XMB(3.9,"B",$E(X,1,30),XMZ)) K ^(XMZ)
"RTN","XMA3",191,0)
 K:XMZ ^XMB(3.9,XMZ) S X=U
"RTN","XMA3",192,0)
 Q
"RTN","XMA3",193,0)
CLEAN ; Clean various files
"RTN","XMA3",194,0)
 D CSTAT ; Clean Message Statistics file
"RTN","XMA3",195,0)
 D CMBOX ; Clean out WASTE baskets and Postmaster's ARRIVING basket
"RTN","XMA3",196,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMA3",197,0)
 Q
"RTN","XMA3",198,0)
CSTAT ; Clean Statistics file audits - delete records more than 2 years old
"RTN","XMA3",199,0)
 N XMINST,XMAUDT,XMCUTOFF,DA,DIK
"RTN","XMA3",200,0)
 S XMCUTOFF=DT\100-200   ; 2 years ago, in yyymm format
"RTN","XMA3",201,0)
 S XMINST=0
"RTN","XMA3",202,0)
 F  S XMINST=$O(^XMBS(4.2999,XMINST)) Q:XMINST'>0  D
"RTN","XMA3",203,0)
 . S DA(1)=XMINST,DIK="^XMBS(4.2999,"_DA(1)_",100,"
"RTN","XMA3",204,0)
 . S XMAUDT=0
"RTN","XMA3",205,0)
 . F  S XMAUDT=$O(^XMBS(4.2999,XMINST,100,XMAUDT)) Q:XMAUDT'>0!(XMAUDT>XMCUTOFF)  D
"RTN","XMA3",206,0)
 . . S DA=XMAUDT D ^DIK
"RTN","XMA3",207,0)
 Q
"RTN","XMA3",208,0)
CMBOX ; Clean the mailbox file
"RTN","XMA3",209,0)
 N XMDUZ,XMCNT
"RTN","XMA3",210,0)
 D CARRIVE
"RTN","XMA3",211,0)
 S (XMDUZ,XMCNT)=0
"RTN","XMA3",212,0)
 F  S XMDUZ=$O(^XMB(3.7,XMDUZ)) Q:XMDUZ'>0  D CWASTE(XMDUZ)
"RTN","XMA3",213,0)
 W:'$D(ZTQUEUED) !,"Waste & Arriving Baskets Cleaned !"
"RTN","XMA3",214,0)
 Q
"RTN","XMA3",215,0)
CWASTE(XMDUZ) ; Clean a user's WASTE basket
"RTN","XMA3",216,0)
 N XMZ
"RTN","XMA3",217,0)
 L +^XMB(3.7,XMDUZ)
"RTN","XMA3",218,0)
 I '$D(ZTQUEUED) S XMCNT=XMCNT+1 I XMCNT#500=0 W !,XMCNT
"RTN","XMA3",219,0)
 S XMZ=0
"RTN","XMA3",220,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,2,.5,1,XMZ)) Q:XMZ'>0  K ^XMB(3.7,"M",XMZ,XMDUZ,.5)
"RTN","XMA3",221,0)
 K ^XMB(3.7,XMDUZ,2,.5)
"RTN","XMA3",222,0)
 S ^XMB(3.7,XMDUZ,2,.5,0)="WASTE",^(1,0)="^3.702P^0^0"
"RTN","XMA3",223,0)
 L -^XMB(3.7,XMDUZ)
"RTN","XMA3",224,0)
 Q
"RTN","XMA3",225,0)
CARRIVE ; Clean the postmaster's ARRIVING basket
"RTN","XMA3",226,0)
 N XMZ,XMKZ,XMCNT,XMZLAST,XMKEEP,XMDT,XMPARM
"RTN","XMA3",227,0)
 L +^XMB(3.7,.5)
"RTN","XMA3",228,0)
 S (XMZ,XMCNT,XMZLAST)=0
"RTN","XMA3",229,0)
 F  S XMZ=$O(^XMB(3.7,.5,2,.95,1,XMZ)) Q:XMZ'>0  D
"RTN","XMA3",230,0)
 . I $D(^XMB(3.9,XMZ,0)) D  Q:XMKEEP
"RTN","XMA3",231,0)
 . . S XMKEEP=1 ; could be still arriving
"RTN","XMA3",232,0)
 . . S XMDT=$P(^XMB(3.9,XMZ,0),U,3)
"RTN","XMA3",233,0)
 . . I XMDT?7N1".".N D  Q:'XMKEEP
"RTN","XMA3",234,0)
 . . . S:'$D(XMPARM("PDATE")) XMPARM("PDATE")=$$PDATE($P($G(^XMB(1,1,.14)),U,2))
"RTN","XMA3",235,0)
 . . . S:XMDT<XMPARM("PDATE") XMKEEP=0 ; been arriving for over 24 hours
"RTN","XMA3",236,0)
 . . S XMCNT=XMCNT+1,XMZLAST=XMZ
"RTN","XMA3",237,0)
 . K ^XMB(3.7,"M",XMZ,.5,.95,XMZ)
"RTN","XMA3",238,0)
 . S XMKZ=$P($G(^XMB(3.7,.5,2,.95,1,XMZ,0)),U,2) K ^(0)
"RTN","XMA3",239,0)
 . K:XMKZ ^XMB(3.7,.5,2,.95,1,"C",XMKZ)
"RTN","XMA3",240,0)
 S ^XMB(3.7,.5,2,.95,0)="ARRIVING",^(1,0)="^3.702P^"_XMZLAST_U_XMCNT
"RTN","XMA3",241,0)
 L -^XMB(3.7,.5)
"RTN","XMA3",242,0)
 ; The following way is preferable:
"RTN","XMA3",243,0)
 ; S DA=XMZ,DA(1)=.95,DA(2)=.5,DIK="^XMB(3.7,.5,2,.95,1," D ^DIK
"RTN","XMA3",244,0)
 Q
"RTN","XMA30")
0^3^B19951204
"RTN","XMA30",1,0)
XMA30 ;(WASH ISC)/CAP-XMCLEAN, XMAUTOPURGE ;12/12/96  14:17
"RTN","XMA30",2,0)
 ;;7.1;MailMan;**37**;Jun 02, 1994
"RTN","XMA30",3,0)
AUDIT ; Lists data from previous purges
"RTN","XMA30",4,0)
 N DIR,DIRUT,XMLIEN,XMREC,XMSTART,XMEND,XMLEFT,XMPURGE,XMTYPE,XMABORT
"RTN","XMA30",5,0)
 S XMABORT=0,DIR(0)="E"
"RTN","XMA30",6,0)
 W @IOF,"It's really a good idea to look these over."
"RTN","XMA30",7,0)
 W !!,"Look for multiple purges running concurrently, missing purge dates,"
"RTN","XMA30",8,0)
 W !,"and check the times the purge ended (Do they conflict with user activity?).",!!
"RTN","XMA30",9,0)
 D AHDR
"RTN","XMA30",10,0)
 S XMLIEN=0
"RTN","XMA30",11,0)
 F  S XMLIEN=$O(^XMB(1,1,.1,XMLIEN)) Q:XMLIEN'>0  D  Q:XMABORT
"RTN","XMA30",12,0)
 . I $Y+3>IOSL D  Q:XMABORT
"RTN","XMA30",13,0)
 . . I IOST["C-" D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA30",14,0)
 . . W @IOF D AHDR
"RTN","XMA30",15,0)
 . S XMREC=^XMB(1,1,.1,XMLIEN,0)
"RTN","XMA30",16,0)
 . S XMSTART=$P(XMREC,U)
"RTN","XMA30",17,0)
 . S XMLEFT=$P(XMREC,U,2)
"RTN","XMA30",18,0)
 . S XMPURGE=$P(XMREC,U,3)
"RTN","XMA30",19,0)
 . S XMTYPE=$P(XMREC,U,6)
"RTN","XMA30",20,0)
 . S XMEND=$P(XMREC,U,8)
"RTN","XMA30",21,0)
 . I XMTYPE="",'XMEND D  ; To handle old data before XM*7.1*37
"RTN","XMA30",22,0)
 . . S XMEND=XMSTART
"RTN","XMA30",23,0)
 . . K XMSTART
"RTN","XMA30",24,0)
 . W !,$S(+XMTYPE=0:"Unref Msg",XMTYPE=1:"Date",1:"Test Date")
"RTN","XMA30",25,0)
 . W ?12,$S($D(XMSTART):$$FMDT(XMSTART),1:""),?30,$$FMDT(XMEND)
"RTN","XMA30",26,0)
 . I $D(XMSTART),XMEND>XMSTART W $J($$FMDIFF^XLFDT(XMEND,XMSTART,3),10)
"RTN","XMA30",27,0)
 . W ?60,$J(XMLEFT,10),$J(XMPURGE,10)
"RTN","XMA30",28,0)
 Q
"RTN","XMA30",29,0)
AHDR ;
"RTN","XMA30",30,0)
 W "MailMan Purge"
"RTN","XMA30",31,0)
 W !,"Type             Start             End         Duration           Kept    Purged",!
"RTN","XMA30",32,0)
 Q
"RTN","XMA30",33,0)
FMDT(XMDT) ; Return FM date/time as 'dd mmm yy hh:mm'
"RTN","XMA30",34,0)
 N XMTIME
"RTN","XMA30",35,0)
 S XMTIME=$P(XMDT,".",2)
"RTN","XMA30",36,0)
 I XMTIME'="" D
"RTN","XMA30",37,0)
 . S XMTIME=XMTIME_"0000"
"RTN","XMA30",38,0)
 . S XMTIME=" "_$E(XMTIME,1,2)_":"_$E(XMTIME,3,4)
"RTN","XMA30",39,0)
 Q $E(XMDT,6,7)_" "_$P("Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec",U,$E(XMDT,4,5))_" "_$E(XMDT,2,3)_XMTIME
"RTN","XMA30",40,0)
USERSTAT ; Display statistics
"RTN","XMA30",41,0)
 N XMR,DIR,Y,XMTYPE,ZTSAVE,ZTDESC,ZTRTN
"RTN","XMA30",42,0)
 S XMR=^XMB(3.9,0) W !!,"Highest numbered message: ",$P(XMR,U,3),!,"Number of active messages: ",$P(XMR,U,4)
"RTN","XMA30",43,0)
 S DIR("A")="Scan Option"
"RTN","XMA30",44,0)
 S DIR(0)="S^A:ACTIVE mailboxes;I:INACTIVE mailboxes;B:BOTH"
"RTN","XMA30",45,0)
 S DIR("B")="A"
"RTN","XMA30",46,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMA30",47,0)
 S XMTYPE=Y
"RTN","XMA30",48,0)
 S ZTSAVE("XMTYPE")=""
"RTN","XMA30",49,0)
 S ZTDESC="MailMan User Mailbox Statistics"
"RTN","XMA30",50,0)
 S ZTRTN="DOSTATS^XMA30"
"RTN","XMA30",51,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","XMA30",52,0)
 Q
"RTN","XMA30",53,0)
DOSTATS ;
"RTN","XMA30",54,0)
 N XMTODAY,XMPAGE,XMABORT,XMDUZ,XMK,XMINCNT,XMZCNT,XMKCNT,XMBOXCNT,XMLMAIL,XMNAME,XMREC,XMSTAT,DIR,XMLSIGN
"RTN","XMA30",55,0)
 S XMTODAY=$$FMDT(DT),(XMPAGE,XMABORT,XMBOXCNT)=0,DIR(0)="E"
"RTN","XMA30",56,0)
 W:IOST["C-" @IOF D SHDR
"RTN","XMA30",57,0)
 S XMNAME=""
"RTN","XMA30",58,0)
 F  S XMNAME=$O(^VA(200,"B",XMNAME)) Q:XMNAME=""  D  Q:XMABORT
"RTN","XMA30",59,0)
 . S XMDUZ=0
"RTN","XMA30",60,0)
 . F  S XMDUZ=$O(^VA(200,"B",XMNAME,XMDUZ)) Q:XMDUZ=""  D  Q:XMABORT
"RTN","XMA30",61,0)
 . . Q:'$D(^XMB(3.7,XMDUZ))
"RTN","XMA30",62,0)
 . . S XMREC=$G(^VA(200,XMDUZ,0))
"RTN","XMA30",63,0)
 . . I $P(XMREC,U,3)="" Q:XMTYPE="A"  S XMSTAT="Inactive"
"RTN","XMA30",64,0)
 . . E  I XMTYPE="I" Q
"RTN","XMA30",65,0)
 . . E  S XMSTAT=""
"RTN","XMA30",66,0)
 . . I $Y+3>IOSL D  Q:XMABORT
"RTN","XMA30",67,0)
 . . . I IOST["C-" D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA30",68,0)
 . . . W @IOF D SHDR
"RTN","XMA30",69,0)
 . . S XMBOXCNT=XMBOXCNT+1
"RTN","XMA30",70,0)
 . . W !,$S(XMNAME="":"User #"_XMDUZ,1:XMNAME)
"RTN","XMA30",71,0)
 . . S XMK=.9,(XMINCNT,XMZCNT)=0
"RTN","XMA30",72,0)
 . . F XMKCNT=1:1 S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:XMK'>0  D
"RTN","XMA30",73,0)
 . . . D:'$D(^XMB(3.7,XMDUZ,2,XMK,1,0)) MAKENODE
"RTN","XMA30",74,0)
 . . . I XMK=1 S XMINCNT=+$P($G(^XMB(3.7,XMDUZ,2,XMK,1,0)),U,4),XMZCNT=XMINCNT Q
"RTN","XMA30",75,0)
 . . . S XMZCNT=XMZCNT+$P($G(^XMB(3.7,XMDUZ,2,XMK,1,0)),U,4)
"RTN","XMA30",76,0)
 . . S XMLMAIL=$P($P($G(^XMB(3.7,XMDUZ,"L")),U)," ",1,3)
"RTN","XMA30",77,0)
 . . S XMLSIGN=$P($G(^VA(200,XMDUZ,1.1)),U)
"RTN","XMA30",78,0)
 . . S XMLSIGN=$S(XMSTAT'="":XMSTAT,'XMLSIGN:"No Sign on",1:$$FMDT($P(XMLSIGN,".")))
"RTN","XMA30",79,0)
 . . W ?30,$J(XMKCNT,4),$J(XMZCNT,7),$J(XMINCNT,8),?53,XMLSIGN,?67,$S($L(XMLMAIL):XMLMAIL,1:"None")
"RTN","XMA30",80,0)
 W !!,"Total",$S(XMTYPE="I":" Inactive",XMTYPE="A":" Active",1:"")," Mailboxes",$S(XMABORT:" Displayed",1:""),": ",XMBOXCNT
"RTN","XMA30",81,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XMA30",82,0)
 Q
"RTN","XMA30",83,0)
MAKENODE ; Create the zero node for the message multiple
"RTN","XMA30",84,0)
 N XMCNT,XMZ
"RTN","XMA30",85,0)
 Q:'$O(^XMB(3.7,XMDUZ,2,XMK,1,0))
"RTN","XMA30",86,0)
 S (XMZ,XMCNT)=0
"RTN","XMA30",87,0)
 F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ)) Q:XMZ'>0  S XMCNT=XMCNT+1
"RTN","XMA30",88,0)
 S ^XMB(3.7,XMDUZ,2,XMK,1,0)="^3.702P^"_+$O(^XMB(3.7,XMDUZ,2,XMK,1,"C"),-1)_U_XMCNT
"RTN","XMA30",89,0)
 Q
"RTN","XMA30",90,0)
SHDR ; Header for MailBox Statistics Report
"RTN","XMA30",91,0)
 S XMPAGE=XMPAGE+1
"RTN","XMA30",92,0)
 W "Printed: ",XMTODAY,?65,$J("Page "_XMPAGE,15)
"RTN","XMA30",93,0)
 W !,"User",?30,"Bskts  Msgs  IN Bskt  Last Sign on  Last Mail Use",!
"RTN","XMA30",94,0)
 Q
"RTN","XMA30",95,0)
ENT ;
"RTN","XMA30",96,0)
 K %ZIS S %ZIS="Q"
"RTN","XMA30",97,0)
 D ^%ZIS I POP S IO=IO(0) Q
"RTN","XMA30",98,0)
 I $S('$D(IO("Q")):1,'IO("Q"):1,1:0) K XMLROU U IO Q
"RTN","XMA30",99,0)
 D GETTIME^XMA02 G Q:X=U
"RTN","XMA30",100,0)
 D QUE^XMA02,EXIT^XMA02
"RTN","XMA30",101,0)
Q D ^%ZISC S POP=1 K XMLROU
"RTN","XMA30",102,0)
 Q
"RTN","XMA31")
0^4^B1749
"RTN","XMA31",1,0)
XMA31 ;(WASH ISC)/CAP-***OBSOLETE***XMCLEAN, XMAUTOPURGE (MISC) ;10/07/96  09:42
"RTN","XMA31",2,0)
 ;;7.1;MailMan;**27,37**;Jun 02, 1994
"RTN","XMA31",3,0)
 Q
"RTN","XMA32")
0^1^B43821626
"RTN","XMA32",1,0)
XMA32 ;(WASH ISC)/CAP- MESSAGE PURGE BY DATE ;11/07/96  09:06
"RTN","XMA32",2,0)
 ;;7.1;MailMan;**37**;Jun 02, 1994
"RTN","XMA32",3,0)
ENTRY ;
"RTN","XMA32",4,0)
 N XMABORT,XMPARM
"RTN","XMA32",5,0)
 S XMABORT=0
"RTN","XMA32",6,0)
 D INIT Q:XMABORT
"RTN","XMA32",7,0)
 D SETUP Q:XMABORT
"RTN","XMA32",8,0)
 D PROCESS
"RTN","XMA32",9,0)
 Q
"RTN","XMA32",10,0)
INIT ;
"RTN","XMA32",11,0)
 ;I '$D(^XUSEC("XMMGR",DUZ)) D  Q
"RTN","XMA32",12,0)
 ;. W !!,*7,"You may not run this option.  You do not hold the 'XMMGR' security key !"
"RTN","XMA32",13,0)
 ;. S XMABORT=1
"RTN","XMA32",14,0)
 I $G(^DD(3.7,0,"VR"))<7.1 D  Q
"RTN","XMA32",15,0)
 . W !!,*7,"This routine only works with Kernel versions 7.1 or later.",!
"RTN","XMA32",16,0)
 . S XMABORT=1
"RTN","XMA32",17,0)
 S X="ERR^ZU" X ^%ZOSF("ETRP")
"RTN","XMA32",18,0)
 W !!,"This process REMOVES MESSAGES PERMANENTLY from the system."
"RTN","XMA32",19,0)
 W !,"             ***** BE VERY CAREFUL *****"
"RTN","XMA32",20,0)
 I $D(^XMB(1,1,.1,0)) D LAST
"RTN","XMA32",21,0)
 D AUDTPURG
"RTN","XMA32",22,0)
 Q
"RTN","XMA32",23,0)
LAST ; Find the audit record for the last date purge
"RTN","XMA32",24,0)
 N XMLIEN,XMREC,Y,XMDIFF
"RTN","XMA32",25,0)
 S XMLIEN=$P(^XMB(1,1,.1,0),U,3)+1
"RTN","XMA32",26,0)
 F  S XMLIEN=$O(^XMB(1,1,.1,XMLIEN),-1) Q:+XMLIEN=0  Q:$P(^(XMLIEN,0),U,6)
"RTN","XMA32",27,0)
 Q:'XMLIEN
"RTN","XMA32",28,0)
 S XMREC=^XMB(1,1,.1,XMLIEN,0)
"RTN","XMA32",29,0)
 S XMPARM("START")=$P(XMREC,U,4)
"RTN","XMA32",30,0)
 S XMPARM("END")=$P(XMREC,U,5)
"RTN","XMA32",31,0)
 S Y=$P(XMREC,U)
"RTN","XMA32",32,0)
 W !!,"This process was last run on ",$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3)_$S($P(XMREC,U,6)["TEST":" in TEST MODE !",1:"."),!,"The last message processed was "_$P(XMREC,U,9)_"."
"RTN","XMA32",33,0)
 S Y=$P(XMREC,U,7)
"RTN","XMA32",34,0)
 S XMPARM("PDATE")=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3)
"RTN","XMA32",35,0)
 W !,"The PURGE DATE used was ",XMPARM("PDATE"),".",!
"RTN","XMA32",36,0)
 S XMDIFF=$$FMDIFF^XLFDT($P(XMREC,U,7),$P(XMREC,U,1),1) ; difference in days
"RTN","XMA32",37,0)
 S XMPARM("PDATE")=$$FMTE^XLFDT($$FMADD^XLFDT(DT,XMDIFF),"2D")
"RTN","XMA32",38,0)
 Q
"RTN","XMA32",39,0)
AUDTPURG ; Kill off the earliest purge entries, so that only a certain # remain.
"RTN","XMA32",40,0)
 N XMREC,XMCNT,DA,DIK,XMMAX
"RTN","XMA32",41,0)
 S XMMAX=20
"RTN","XMA32",42,0)
 S XMREC=$G(^XMB(1,1,.1,0))
"RTN","XMA32",43,0)
 S XMCNT=$P(XMREC,U,4)
"RTN","XMA32",44,0)
 Q:XMCNT'>XMMAX
"RTN","XMA32",45,0)
 S DA=0
"RTN","XMA32",46,0)
 F  S DA=$O(^XMB(1,1,.1,0)) Q:DA'>0  D  Q:XMCNT'>XMMAX
"RTN","XMA32",47,0)
 . S XMCNT=XMCNT-1
"RTN","XMA32",48,0)
 . S DA(1)=1,DIK="^XMB(1,1,.1,"
"RTN","XMA32",49,0)
 . D ^DIK
"RTN","XMA32",50,0)
 Q
"RTN","XMA32",51,0)
SETUP ;
"RTN","XMA32",52,0)
 N XMZL
"RTN","XMA32",53,0)
 S XMZL=$P(^XMB(3.9,0),U,3)-1000  ; Last XMZ permitted to be considered for purge
"RTN","XMA32",54,0)
 D PDATE    Q:XMABORT  ; Purge date
"RTN","XMA32",55,0)
 D STARTXMZ Q:XMABORT  ; Start at msg #
"RTN","XMA32",56,0)
 D ENDXMZ   Q:XMABORT  ; End at msg #
"RTN","XMA32",57,0)
 D TESTMODE            ; Test mode?
"RTN","XMA32",58,0)
 Q
"RTN","XMA32",59,0)
PDATE ;
"RTN","XMA32",60,0)
 N DIR,XMOK
"RTN","XMA32",61,0)
 S XMOK=0
"RTN","XMA32",62,0)
 F  D  Q:XMOK!XMABORT
"RTN","XMA32",63,0)
 . S DIR(0)="D^2800101:DT:E"
"RTN","XMA32",64,0)
 . S DIR("A")="Purge all messages originating before"
"RTN","XMA32",65,0)
 . S DIR("B")=$S($D(XMPARM("PDATE")):XMPARM("PDATE"),1:$$FMTE^XLFDT(DT-20000,"2D"))
"RTN","XMA32",66,0)
 . S DIR("?",1)="All messages whose 'date sent' is prior to the"
"RTN","XMA32",67,0)
 . S DIR("?",2)="'purge date' you enter will be deleted from the system,"
"RTN","XMA32",68,0)
 . S DIR("?")="except those which are in one of SHARED,MAIL's baskets."
"RTN","XMA32",69,0)
 . S DIR("??")="^N %DT S %DT=0 D HELP^%DTC"
"RTN","XMA32",70,0)
 . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA32",71,0)
 . S XMPARM("PDATE")=Y
"RTN","XMA32",72,0)
 . I DT-Y>10000 S XMOK=1 Q
"RTN","XMA32",73,0)
 . D ZIS^XMAH1
"RTN","XMA32",74,0)
 . W !!,$S($D(IORVON):IORVON,1:"")_$S($D(IOBON):IOBON,1:"")_"The date you entered is less than 1 year old !!",$S($D(IOBOFF):IOBOFF,1:""),$C(7),$S($D(IORVOFF):IORVOFF,1:"")
"RTN","XMA32",75,0)
 . K DIR
"RTN","XMA32",76,0)
 . S DIR(0)="Y"
"RTN","XMA32",77,0)
 . S DIR("A")="Are you sure about this date"
"RTN","XMA32",78,0)
 . S DIR("B")="No"
"RTN","XMA32",79,0)
 . D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA32",80,0)
 . S XMOK=Y
"RTN","XMA32",81,0)
 . K DIR
"RTN","XMA32",82,0)
 Q
"RTN","XMA32",83,0)
STARTXMZ ;
"RTN","XMA32",84,0)
 N XMFIRST,DIR,X,Y
"RTN","XMA32",85,0)
 S XMFIRST=$O(^XMB(3.9,0))
"RTN","XMA32",86,0)
 S XMPARM("START")=$S('$D(XMPARM("START")):XMFIRST,XMFIRST<XMPARM("START"):XMPARM("START"),1:XMFIRST)
"RTN","XMA32",87,0)
 S DIR(0)="N^"_XMFIRST_":"_XMZL
"RTN","XMA32",88,0)
 S DIR("A")="START at MESSAGE number"
"RTN","XMA32",89,0)
 S DIR("B")=XMPARM("START")
"RTN","XMA32",90,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA32",91,0)
 S XMPARM("START")=X
"RTN","XMA32",92,0)
 Q
"RTN","XMA32",93,0)
ENDXMZ ;
"RTN","XMA32",94,0)
 N DIR,X,Y
"RTN","XMA32",95,0)
 S DIR(0)="S^1:Stop when we come to a message with a date >= the purge date;2:Stop when we come to a message number to be specified"
"RTN","XMA32",96,0)
 S DIR("A")="When should the purge stop"
"RTN","XMA32",97,0)
 S DIR("B")=2
"RTN","XMA32",98,0)
 S DIR("??")="^D Q1ENDXMZ^XMA32"
"RTN","XMA32",99,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA32",100,0)
 S XMPARM("STOP ON DATE")=$S(Y=1:1,1:0)
"RTN","XMA32",101,0)
 I XMPARM("STOP ON DATE") S XMPARM("END")=XMZL Q
"RTN","XMA32",102,0)
 K DIR,X,Y
"RTN","XMA32",103,0)
 W !
"RTN","XMA32",104,0)
 S XMPARM("END")=$G(XMPARM("END"),XMZL)
"RTN","XMA32",105,0)
 S DIR(0)="N^"_XMPARM("START")_":"_XMZL
"RTN","XMA32",106,0)
 S DIR("A")="END at MESSAGE number"
"RTN","XMA32",107,0)
 S DIR("B")=XMPARM("END")
"RTN","XMA32",108,0)
 S DIR("??")="^D Q2ENDXMZ^XMA32"
"RTN","XMA32",109,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA32",110,0)
 S XMPARM("END")=X
"RTN","XMA32",111,0)
 Q
"RTN","XMA32",112,0)
Q1ENDXMZ ;
"RTN","XMA32",113,0)
 W !,"Option 1 takes less time, and we will ensure that the purge does not go past"
"RTN","XMA32",114,0)
 W !,"message number ",XMZL,", which is 1000 from the end."
"RTN","XMA32",115,0)
 W !!,"However, there are several reasons you may wish to choose option 2."
"RTN","XMA32",116,0)
 W !!,"a) The date stored with remote messages is the date they were created, not the"
"RTN","XMA32",117,0)
 W !,"date they were received.  So a remote message forwarded to this site could"
"RTN","XMA32",118,0)
 W !,"conceivably have quite an old date, compared to the local messages around it."
"RTN","XMA32",119,0)
 W !,"With option 1, such messages would not be purged until their local neighbor"
"RTN","XMA32",120,0)
 W !,"messages are."
"RTN","XMA32",121,0)
 W !!,"b) A remote message may, for whatever reason, have a date in error, which is"
"RTN","XMA32",122,0)
 W !,"far in the future compared to the local messages around it."
"RTN","XMA32",123,0)
 W !,"Such a message would cause option 1 to stop prematurely."
"RTN","XMA32",124,0)
 W !!,"If you choose option 2, you will be asked for the 'ending message number'."
"RTN","XMA32",125,0)
 Q
"RTN","XMA32",126,0)
Q2ENDXMZ ;
"RTN","XMA32",127,0)
 W !,XMPARM("START")_" is the starting message number you selected;"
"RTN","XMA32",128,0)
 W !,XMZL_" is 1000 from the end."
"RTN","XMA32",129,0)
 W !!,"The purge will not stop when it hits the first message with a date >="
"RTN","XMA32",130,0)
 W !,"the 'purge date'.  Rather, it will continue through the message number"
"RTN","XMA32",131,0)
 W !,"you specify here."
"RTN","XMA32",132,0)
 Q
"RTN","XMA32",133,0)
TESTMODE ;
"RTN","XMA32",134,0)
 N DIR
"RTN","XMA32",135,0)
 S DIR(0)="Y",DIR("A")="TEST mode",DIR("B")="YES"
"RTN","XMA32",136,0)
 S DIR("?",1)="Test mode will not kill off messages."
"RTN","XMA32",137,0)
 S DIR("?",2)="Test mode gives you a list of what would happen in 'real' mode."
"RTN","XMA32",138,0)
 S DIR("?",3)="If you do not run in test mode, messages will be KILLED!"
"RTN","XMA32",139,0)
 S DIR("?",4)=""
"RTN","XMA32",140,0)
 S DIR("?")="Enter 'yes' to run in 'test' mode; 'no', 'real' mode."
"RTN","XMA32",141,0)
 D ^DIR I $D(DIRUT) S XMABORT=1 Q
"RTN","XMA32",142,0)
 S XMPARM("TEST")=Y
"RTN","XMA32",143,0)
 S XMPARM("TYPE")=$S(XMPARM("TEST"):2,1:1)
"RTN","XMA32",144,0)
 Q
"RTN","XMA32",145,0)
PROCESS ;
"RTN","XMA32",146,0)
 N ZTSAVE,ZTRTN,ZTDESC
"RTN","XMA32",147,0)
 S ZTSAVE("XMPARM*")=""
"RTN","XMA32",148,0)
 S ZTDESC="MailMan MESSAGE PURGE by DATE",ZTRTN="ENT^XMA32A"
"RTN","XMA32",149,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","XMA32",150,0)
 Q
"RTN","XMA32A")
0^2^B38905746
"RTN","XMA32A",1,0)
XMA32A ;(WASH ISC)/CAP - PURGE MESSAGES BY DATE ;11/07/96  08:41
"RTN","XMA32A",2,0)
 ;;7.1;MailMan;**27,37**;Jun 02, 1994
"RTN","XMA32A",3,0)
 ; XMPARM("PDATE") Purge all messages older than this date
"RTN","XMA32A",4,0)
 ; XMPARM("START") First message to process
"RTN","XMA32A",5,0)
 ; XMPARM("END")   Last message to process
"RTN","XMA32A",6,0)
 ; XMPARM("STOP ON DATE") =0 Don't stop when we hit the first message
"RTN","XMA32A",7,0)
 ;                           with a date greater than XMPARM("PDATE");
"RTN","XMA32A",8,0)
 ;                           Rather, continue through message number
"RTN","XMA32A",9,0)
 ;                           XMPARM("END")
"RTN","XMA32A",10,0)
 ;                        =1 Stop when we hit the first message with a
"RTN","XMA32A",11,0)
 ;                           date greater than XMPARM("PDATE").
"RTN","XMA32A",12,0)
 ;                           But, don't go past message number XMPARM("END")
"RTN","XMA32A",13,0)
 ; XMCNT           Total messages processed
"RTN","XMA32A",14,0)
 ; XMKILL("MSG")   Messages purged
"RTN","XMA32A",15,0)
 ; XMKILL("RESP")  Responses killed
"RTN","XMA32A",16,0)
 ; XMDUZ           Pointer to mailbox
"RTN","XMA32A",17,0)
 ; XMZTMP          Holder for XMZ
"RTN","XMA32A",18,0)
 ; XMZ             Current message being processed
"RTN","XMA32A",19,0)
 ; XMDATERR        Count of messages with bad dates
"RTN","XMA32A",20,0)
ENT ;
"RTN","XMA32A",21,0)
 N XMIEN,XMPDATE,XMCNT,XMKILL,XMZ,XMNOW,XMABORT,XMFDA,XMPAGE,XMDATERR
"RTN","XMA32A",22,0)
 D INIT
"RTN","XMA32A",23,0)
 D PROCESS
"RTN","XMA32A",24,0)
 D FINISH
"RTN","XMA32A",25,0)
 Q
"RTN","XMA32A",26,0)
INIT ;
"RTN","XMA32A",27,0)
 S (XMPAGE,XMCNT,XMKILL("MSG"),XMKILL("RESP"),XMDATERR,XMABORT)=0
"RTN","XMA32A",28,0)
 D INITAUDT(.XMPARM,.XMIEN,.XMNOW)
"RTN","XMA32A",29,0)
 S XMPDATE=$E(XMPARM("PDATE"),4,5)_"/"_$E(XMPARM("PDATE"),6,7)_"/"_$E(XMPARM("PDATE"),2,3)
"RTN","XMA32A",30,0)
 S XMNOW=$$DOW^XLFDT(XMNOW)_", "_$$FMTE^XLFDT(XMNOW,1)
"RTN","XMA32A",31,0)
 W:IOST["C-" @IOF D PRTHDR
"RTN","XMA32A",32,0)
 Q
"RTN","XMA32A",33,0)
INITAUDT(XMPARM,XMIEN,XMNOW) ;
"RTN","XMA32A",34,0)
 S XMNOW=$$NOW^XLFDT
"RTN","XMA32A",35,0)
 S XMFDA(4.302,"+1,1,",.01)=XMNOW
"RTN","XMA32A",36,0)
 S XMFDA(4.302,"+1,1,",3)=XMPARM("START")
"RTN","XMA32A",37,0)
 S XMFDA(4.302,"+1,1,",4)=XMPARM("END")
"RTN","XMA32A",38,0)
 S XMFDA(4.302,"+1,1,",5)=$S(XMPARM("TYPE")=2:"1TEST",1:XMPARM("TYPE"))
"RTN","XMA32A",39,0)
 S XMFDA(4.302,"+1,1,",6)=XMPARM("PDATE")
"RTN","XMA32A",40,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMA32A",41,0)
 S XMIEN=XMIEN(1)
"RTN","XMA32A",42,0)
 Q
"RTN","XMA32A",43,0)
PROCESS ;
"RTN","XMA32A",44,0)
 N XMDATE,XMR,XMZO
"RTN","XMA32A",45,0)
 S XMDATE=0
"RTN","XMA32A",46,0)
 S XMZ=XMPARM("START")-1
"RTN","XMA32A",47,0)
 F  S XMZ=$O(^XMB(3.9,XMZ)) Q:XMZ'>0!(XMZ>XMPARM("END"))!XMABORT  D  I XMPARM("STOP ON DATE"),XMDATE'<XMPARM("PDATE") Q
"RTN","XMA32A",48,0)
 . S XMCNT=XMCNT+1 I XMCNT#5000=0 D CHK
"RTN","XMA32A",49,0)
 . S XMR=$G(^XMB(3.9,XMZ,0)) I XMR="" D KILL Q
"RTN","XMA32A",50,0)
 . Q:$D(^XMB(3.7,"M",XMZ,.6))  ; Do nothing if owned by SHARED,MAIL
"RTN","XMA32A",51,0)
 . S XMDATE=$P(XMR,U,3) ; Date sent
"RTN","XMA32A",52,0)
 . I XMDATE'?7N1".".N,XMDATE'?7N S XMDATE=$$CONVERT(XMDATE)
"RTN","XMA32A",53,0)
 . I XMDATE<2000000 D  Q
"RTN","XMA32A",54,0)
 . . S XMDATERR=XMDATERR+1
"RTN","XMA32A",55,0)
 . . D HDR(2) Q:XMABORT
"RTN","XMA32A",56,0)
 . . W !,XMZ,?15,"*** Bad date: ",$P(XMR,U,3),?79
"RTN","XMA32A",57,0)
 . ;S XMDATE=$P(XMDATE,".")
"RTN","XMA32A",58,0)
 . Q:XMDATE'<XMPARM("PDATE")
"RTN","XMA32A",59,0)
 . S XMZO=$S($P(XMR,U,8):$P(XMR,U,8),$P(XMR,U)?1"R"1.N:+$E(XMR,2,99),1:"")
"RTN","XMA32A",60,0)
 . I XMZO,XMZO<XMZ,$D(^XMB(3.9,XMZO,0)) Q  ; Response with existing original msg
"RTN","XMA32A",61,0)
 . D KILL  ; Old msg; old response without original msg; old msg which thinks it's also a response; old response which thinks it's also the original msg.
"RTN","XMA32A",62,0)
 Q
"RTN","XMA32A",63,0)
KILL ;
"RTN","XMA32A",64,0)
 I XMPARM("TEST") D  Q:XMABORT
"RTN","XMA32A",65,0)
 . D HDR(2) Q:XMABORT
"RTN","XMA32A",66,0)
 . N X
"RTN","XMA32A",67,0)
 . S X=$P($P(XMR,U,3),".")
"RTN","XMA32A",68,0)
 . W !,XMZ,?20," <<< Purge!  Date = ",$S(X?7N.E:$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3),1:X)
"RTN","XMA32A",69,0)
 D KBASKETS Q:XMABORT
"RTN","XMA32A",70,0)
 D KMSG
"RTN","XMA32A",71,0)
 Q
"RTN","XMA32A",72,0)
KBASKETS ;
"RTN","XMA32A",73,0)
 N XMDUZ,XMK
"RTN","XMA32A",74,0)
 S XMDUZ="",XMKILL("MSG")=XMKILL("MSG")+1
"RTN","XMA32A",75,0)
 F  S XMDUZ=$O(^XMB(3.7,"M",XMZ,XMDUZ)) Q:XMDUZ=""!XMABORT  D
"RTN","XMA32A",76,0)
 . S XMK=$O(^XMB(3.7,"M",XMZ,XMDUZ,0))
"RTN","XMA32A",77,0)
 . Q:'XMK
"RTN","XMA32A",78,0)
 . ;I 'XMK D  Q
"RTN","XMA32A",79,0)
 . ;. Q:'XMPARM("TEST")
"RTN","XMA32A",80,0)
 . ;. D HDR(2) Q:XMABORT
"RTN","XMA32A",81,0)
 . ;. W !?5,XMDUZ,?15,"... DUZ doesn't have msg in basket."
"RTN","XMA32A",82,0)
 . Q:'$D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ))
"RTN","XMA32A",83,0)
 . I XMPARM("TEST") D  Q
"RTN","XMA32A",84,0)
 . . D HDR(2) Q:XMABORT
"RTN","XMA32A",85,0)
 . . W !?25,"Message deleted for DUZ:",?50,$J(XMDUZ,12),?79
"RTN","XMA32A",86,0)
 . D KL^XMA1B ; Delete from user's basket
"RTN","XMA32A",87,0)
 Q
"RTN","XMA32A",88,0)
KMSG ;
"RTN","XMA32A",89,0)
 N XMZTMP,XMZO,X
"RTN","XMA32A",90,0)
 S XMZTMP=XMZ,XMZO=0
"RTN","XMA32A",91,0)
 F  S XMZO=$O(^XMB(3.9,XMZTMP,3,XMZO)) Q:XMZO'>0!XMABORT  D
"RTN","XMA32A",92,0)
 . S XMZ=$P($G(^XMB(3.9,XMZTMP,3,XMZO,0)),U)
"RTN","XMA32A",93,0)
 . S XMKILL("RESP")=XMKILL("RESP")+1
"RTN","XMA32A",94,0)
 . I XMPARM("TEST") D  Q
"RTN","XMA32A",95,0)
 . . D HDR(2) Q:XMABORT
"RTN","XMA32A",96,0)
 . . W !?25,"Response deleted:",?50,$J(XMZ,12),?79
"RTN","XMA32A",97,0)
 . D KILL^XMA3  ; Kill response
"RTN","XMA32A",98,0)
 S XMZ=XMZTMP
"RTN","XMA32A",99,0)
 D:'XMPARM("TEST") KILL^XMA3  ; Kill original message
"RTN","XMA32A",100,0)
 Q
"RTN","XMA32A",101,0)
HDR(XMLINES) ;
"RTN","XMA32A",102,0)
 Q:$Y+XMLINES<IOSL
"RTN","XMA32A",103,0)
 I IOST["C-" D  Q:XMABORT
"RTN","XMA32A",104,0)
 . N DIR
"RTN","XMA32A",105,0)
 . S DIR(0)="E"
"RTN","XMA32A",106,0)
 . D ^DIR S:$D(DIRUT) XMABORT=1
"RTN","XMA32A",107,0)
 W @IOF D PRTHDR
"RTN","XMA32A",108,0)
 Q
"RTN","XMA32A",109,0)
PRTHDR ;
"RTN","XMA32A",110,0)
 S XMPAGE=XMPAGE+1
"RTN","XMA32A",111,0)
 W "Message purge, Origination date < ",XMPDATE
"RTN","XMA32A",112,0)
 W "      From: ",$J(XMPARM("START"),$L(XMPARM("END"))),"   Page: ",XMPAGE
"RTN","XMA32A",113,0)
 W !,"Started: ",XMNOW,?50,"To: ",XMPARM("END"),$S(XMPARM("TEST"):"  *TEST RUN*",1:""),!
"RTN","XMA32A",114,0)
 Q
"RTN","XMA32A",115,0)
FINISH ;
"RTN","XMA32A",116,0)
 I XMABORT W @IOF D PRTHDR
"RTN","XMA32A",117,0)
 D CHK
"RTN","XMA32A",118,0)
 D HDR(5+(2*$G(ZTSTOP)))
"RTN","XMA32A",119,0)
 Q:'XMCNT
"RTN","XMA32A",120,0)
 I $G(ZTSTOP) W !!,"*** Stopping prematurely per user request ***"
"RTN","XMA32A",121,0)
 W !!,"Message purge finished on ",$$FMTE^XLFDT($$NOW^XLFDT,1)
"RTN","XMA32A",122,0)
 W !,XMCNT," messages processed."
"RTN","XMA32A",123,0)
 W !,XMKILL("MSG")," original messages and ",XMKILL("RESP")," responses purged."
"RTN","XMA32A",124,0)
 W !,XMDATERR," messages had indecipherable dates."
"RTN","XMA32A",125,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","XMA32A",126,0)
 Q:XMPARM("TEST")
"RTN","XMA32A",127,0)
 S $P(^(0),U,4)=$P(^XMB(3.9,0),U,4)-XMKILL("MSG")-XMKILL("RESP")
"RTN","XMA32A",128,0)
 Q
"RTN","XMA32A",129,0)
CHK ;
"RTN","XMA32A",130,0)
 D CHKAUDT(XMIEN,XMZ,.XMKILL)
"RTN","XMA32A",131,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (XMABORT,ZTSTOP)=1  Q  ; User has asked the task to stop
"RTN","XMA32A",132,0)
 Q:IOST'["C-"
"RTN","XMA32A",133,0)
 I $X+$L(XMCNT)+1>IOM D
"RTN","XMA32A",134,0)
 . D HDR(2)
"RTN","XMA32A",135,0)
 . W !
"RTN","XMA32A",136,0)
 E  W " "
"RTN","XMA32A",137,0)
 W XMCNT
"RTN","XMA32A",138,0)
 Q
"RTN","XMA32A",139,0)
CHKAUDT(XMIEN,XMZ,XMKILL) ;
"RTN","XMA32A",140,0)
 S XMFDA(4.302,XMIEN_",1,",1)=$P(^XMB(3.9,0),U,4)-XMKILL("MSG")-XMKILL("RESP")
"RTN","XMA32A",141,0)
 S XMFDA(4.302,XMIEN_",1,",2)=XMKILL("MSG")+XMKILL("RESP")
"RTN","XMA32A",142,0)
 S XMFDA(4.302,XMIEN_",1,",7)=$$NOW^XLFDT
"RTN","XMA32A",143,0)
 S XMFDA(4.302,XMIEN_",1,",8)=XMZ-1
"RTN","XMA32A",144,0)
 D FILE^DIE("","XMFDA")
"RTN","XMA32A",145,0)
 Q
"RTN","XMA32A",146,0)
 ; Formats:  Tuesday, 28 June 1955 17:30:45 PDT
"RTN","XMA32A",147,0)
 ;           Tue, 28 Jun 1955 17:30:45 PDT
"RTN","XMA32A",148,0)
 ;           Tue 28 Jun 1955 17:30:45 PDT
"RTN","XMA32A",149,0)
 ;           28 Jun 55 17:30 PST  <== MailMan standard
"RTN","XMA32A",150,0)
 ;           Tue Jun 28 17:30:45 PDT 1955
"RTN","XMA32A",151,0)
CONVERT(X) ; Convert Internet dates, ignoring time.
"RTN","XMA32A",152,0)
 N %DT,Y
"RTN","XMA32A",153,0)
 I $E(X)=" "!($E(X)=$C(9)) F  S X=$E(X,2,99) Q:$E(X)'=$C(9)&($E(X)'=" ")  ; remove leading blanks or tabs
"RTN","XMA32A",154,0)
 I X?.E2" ".E D  ; reduce all consecutive blanks to 1 blank
"RTN","XMA32A",155,0)
 . N I S I=1
"RTN","XMA32A",156,0)
 . F  S I=$F(X,"  ",I) Q:I=0  S X=$E(X,1,I-2)_$E(X,I,99),I=I-1
"RTN","XMA32A",157,0)
 I X?3.A.E D
"RTN","XMA32A",158,0)
 . I X?3.A1", ".E!(X?3.A1" "3.A.E)!(X?3.A1" "1.2N1" "3.A.E) S X=$P(X," ",2,99) ; remove leading day of week
"RTN","XMA32A",159,0)
 I $P(X," ",3)[":" S X=$P(X," ",1,2)_" "_$P(X," ",$L(X," ")) ; time is before year
"RTN","XMA32A",160,0)
 E  S X=$P(X," ",1,3) ; year is before time
"RTN","XMA32A",161,0)
 S:X[":" X=$P(X," ",1) ; "28-JUN-1955 17:30:45 -0400" or "6/28/55 17:30"
"RTN","XMA32A",162,0)
 S %DT="P" D ^%DT
"RTN","XMA32A",163,0)
 Q Y
"RTN","XMA32A",164,0)
 ; *****************************************************
"RTN","XMA32A",165,0)
 ; Add this to CONVERT, if you want to convert time, too:
"RTN","XMA32A",166,0)
 ; Let's say XMT contains all the time stuff.  Then,
"RTN","XMA32A",167,0)
 S:$P(XMT,":")=0 XMT="0"_XMT
"RTN","XMA32A",168,0)
 S XMT=$E(XMT,1,5)  ; FM will only handle hh:mm, not :ss
"RTN","XMA32A",169,0)
 S XMT=$E(XMT,1,5)
"RTN","XMA32A",170,0)
 S:$E(XMT,1,5)="00:00" XMT="00:01" ; if midnight, add a minute
"RTN","XMA32A",171,0)
 S X=X_"@"_XMT
"RTN","XMA32A",172,0)
 ; Also, remember, FM will not handle a 1-digit year
"RTN","XMA32A",173,0)
 ; If this becomes a problem:
"RTN","XMA32A",174,0)
 I $L($P(X," ",3))=1 S $P(X," ",3)="0"_$P(X," ",3)
"RTN","XMA32A",175,0)
 ; *****************************************************
"RTN","XMADJF1B")
0^8^B9889040
"RTN","XMADJF1B",1,0)
XMADJF1B ;(WASH ISC)/CAP-MailMan Deliver into MAILBOX ;12/10/96  08:23
"RTN","XMADJF1B",2,0)
 ;;7.1;MailMan;**10,16,37**;Jun 02, 1994
"RTN","XMADJF1B",3,0)
 ;
"RTN","XMADJF1B",4,0)
 ;Deliver Y=RECIPIENT DUZ
"RTN","XMADJF1B",5,0)
 ;
"RTN","XMADJF1B",6,0)
 ;Do not deliver if invalid mail box
"RTN","XMADJF1B",7,0)
OK Q:$S(+Y'>0:1,'$D(^XMB(3.7,Y,2)):1,1:0)
"RTN","XMADJF1B",8,0)
 ;
"RTN","XMADJF1B",9,0)
 ;Do not deliver response to Shared,Mail
"RTN","XMADJF1B",10,0)
 I Y=.6 Q:$E(Z)="R"
"RTN","XMADJF1B",11,0)
 I $G(XMK),$S(XMK=1:1,XMK=.5:0,XMK<1:1,1:0) K XMK
"RTN","XMADJF1B",12,0)
 I $D(XMF0(Y)),$O(XMF0(0))=Y,'$O(XMF0(Y)) Q
"RTN","XMADJF1B",13,0)
 ;Lock Mailbox
"RTN","XMADJF1B",14,0)
 L +^XMB(3.7,Y)
"RTN","XMADJF1B",15,0)
 ;
"RTN","XMADJF1B",16,0)
 ;If already new, no need to deliver
"RTN","XMADJF1B",17,0)
 ;Get basket it is in
"RTN","XMADJF1B",18,0)
 S J=$O(^XMB(3.7,"M",XMZ,+Y,0))
"RTN","XMADJF1B",19,0)
 ;
"RTN","XMADJF1B",20,0)
 ;If it is in a basket, no or same basket to deliver - quit
"RTN","XMADJF1B",21,0)
 I J,$S('$G(XMK):1,XMK=J:1,1:0) G OKQ:$D(^XMB(3.7,+Y,"N0",J,XMZ))
"RTN","XMADJF1B",22,0)
 ;
"RTN","XMADJF1B",23,0)
 ;Otherwise remove from current basket, then continue to deliver
"RTN","XMADJF1B",24,0)
 I J,$G(XMK),J'<1,J-XMK'=0 D REMOVE
"RTN","XMADJF1B",25,0)
 ;
"RTN","XMADJF1B",26,0)
 ;Deliver
"RTN","XMADJF1B",27,0)
 D Z
"RTN","XMADJF1B",28,0)
 ;
"RTN","XMADJF1B",29,0)
 ;Unlock mail box, quit
"RTN","XMADJF1B",30,0)
OKQ L -^XMB(3.7,Y) Q
"RTN","XMADJF1B",31,0)
 ;
"RTN","XMADJF1B",32,0)
Z S J=0 I $S(Y=XMDUZ:1,Y=.6:1,1:0),$D(XMK)#2,$L(XMK) S J=XMK,J=$S(J'=.5:J,J?.N&'$D(^XMB(3.7,Y,2,J)):1,1:J) I +J'=J,J'=1 S J=$O(^XMB(3.7,Y,2,"B",J,0)) I J="" S J=$$BSKT^XMAD2(XMK,Y)
"RTN","XMADJF1B",33,0)
 ;
"RTN","XMADJF1B",34,0)
EN I J=0 S J=$O(^XMB(3.7,"M",XMZ,Y,0)) I J'=.5 S:+J<1 J=1 G D
"RTN","XMADJF1B",35,0)
 ;
"RTN","XMADJF1B",36,0)
 ;-WASTE BASKET
"RTN","XMADJF1B",37,0)
 I J=.5,Y'=XMDUZ,J'=$S($D(XMK):XMK,1:1) S J=1
"RTN","XMADJF1B",38,0)
 G D:J=.5,D:'$D(^XMB(3.7,Y,2,.5,1,XMZ))
"RTN","XMADJF1B",39,0)
 S X=^XMB(3.7,Y,2,.5,0),%3=$P(^(1,XMZ,0),U,2),%1=$P(X,U,5)-1
"RTN","XMADJF1B",40,0)
 I %1<1 S %1=""
"RTN","XMADJF1B",41,0)
 S $P(X,U,5)=%1,^XMB(3.7,Y,2,.5,0)=X,^(1,0)="^3.702P^"_XMZ_"^"_%1 K ^(1,XMZ),^("C",%3)
"RTN","XMADJF1B",42,0)
 K ^XMB(3.7,"M",XMZ,Y,.5)
"RTN","XMADJF1B",43,0)
D S XME0=$S($D(^XMB(3.7,Y,0)):^(0),1:Y) I J,$D(^(2,J,1,XMZ,0)) S %2=^(0) G F
"RTN","XMADJF1B",44,0)
 S K=$P(XME0,U,7) G:K?1N.N TERM^XMAD2:K>XMZ&'XMADF S K=$S($D(^XMB(3.7,Y,2,J,0)):^(0),1:"") I '$L(K) Q:'$D(^XMB(3.7,Y,2,1,0))  S J=1,K=^(0)
"RTN","XMADJF1B",45,0)
 ;
"RTN","XMADJF1B",46,0)
 ;FILE
"RTN","XMADJF1B",47,0)
 S ^XMB(3.7,"M",XMZ,Y,J,XMZ)="",%1=$P(K,U,4),%=%1+1
"RTN","XMADJF1B",48,0)
 S:+%<1 %=1 F %=+%:1 I '$D(^XMB(3.7,Y,2,J,1,"C",%)) S ^(%,XMZ)="" Q
"RTN","XMADJF1B",49,0)
 S:%>%1 %1=%
"RTN","XMADJF1B",50,0)
 S $P(K,U,3,5)=%_U_%1_U_($P(K,U,5)+1),^XMB(3.7,Y,2,J,0)=K,%2=XMZ_U_%,^(1,0)="^3.702P^"_XMZ_U_$P(K,U,5)
"RTN","XMADJF1B",51,0)
 ;
"RTN","XMADJF1B",52,0)
 ;MAKE NEW
"RTN","XMADJF1B",53,0)
F I Z?1N.N,XMDUZ=Y G CQ
"RTN","XMADJF1B",54,0)
 ; G CQ:$S($E(Z)'="R":0,'$D(XMF0(Y)):0,1:1),CQ:$D(^XMB(3.7,Y,"N0",J,XMZ)),CQ:Y=.6
"RTN","XMADJF1B",55,0)
 I XMA0'?1N.N S %1=$P(XMB0,U,3) I %1>0 S %=$O(^XMB(3.9,XMZ,1,"C",Y,0)) I %,$O(^XMB(3.9,XMZ,1,%,""))=0,$P(^(0),U,2)'<%1 G E
"RTN","XMADJF1B",56,0)
 S %=XME0,$P(%,U,6)=$P(%,U,6)+1,^XMB(3.7,Y,"N0",0)=%DT,^(J,XMZ)="",^XMB(3.7,Y,0)=%,%=^(2,J,0),$P(%,U,2)=$P(%,U,2)+1,^(0)=%,$P(%2,U,3)=1
"RTN","XMADJF1B",57,0)
 I $P(XMR,U,7)["P" D PRIO
"RTN","XMADJF1B",58,0)
CQ S $P(^XMB(3.7,Y,2,J,1,XMZ,0),U,1,4)=$P(%2_"^^^^",U,1,4)
"RTN","XMADJF1B",59,0)
 D S:$D(XMADEL)
"RTN","XMADJF1B",60,0)
 G G
"RTN","XMADJF1B",61,0)
 ;
"RTN","XMADJF1B",62,0)
S N XMDUZ S XMDUZ=Y N XMK,Y S Y=XMADEL,XMK=J K XMADEL G SET^XMA11A
"RTN","XMADJF1B",63,0)
 ;
"RTN","XMADJF1B",64,0)
 ;Priority Delivery ?
"RTN","XMADJF1B",65,0)
PRIO ;Yes if original message or forward
"RTN","XMADJF1B",66,0)
 G PQ:+Z
"RTN","XMADJF1B",67,0)
 ;
"RTN","XMADJF1B",68,0)
 ;Responses
"RTN","XMADJF1B",69,0)
 N % S %=$O(^XMB(3.9,XMZ,1,"C",Y,0)),%=$P(^XMB(3.9,XMZ,1,%,0),U,9)
"RTN","XMADJF1B",70,0)
 Q:%
"RTN","XMADJF1B",71,0)
PQ S ^XMB(3.7,Y,"N",J,XMZ)=""
"RTN","XMADJF1B",72,0)
 Q
"RTN","XMADJF1B",73,0)
E K %,%1 K:$E(Z)'="R" ^XMBPOST("PGROUP"_$E(XMSTATT),$E(XMSTATT,2),XMTSTAMP,Z) S X=0
"RTN","XMADJF1B",74,0)
G Q
"RTN","XMADJF1B",75,0)
 ;
"RTN","XMADJF1B",76,0)
 ;Remove from current basket so we can deliver it to another
"RTN","XMADJF1B",77,0)
REMOVE N XMDUZ S XMDUZ=Y N XMK,V,W,Z,Y D KLQ^XMA1B
"RTN","XMADJF1B",78,0)
 Q
"RTN","XMDIRRCV")
0^6^B3057108
"RTN","XMDIRRCV",1,0)
XMDIRRCV ;(WASH ISC)/CWU - EMAIL DIRECTORY RECEIVER; 3/22/93 ;10/09/96  09:32
"RTN","XMDIRRCV",2,0)
 ;;7.1;MailMan;**37**;Jun 02, 1994
"RTN","XMDIRRCV",3,0)
 ;;
"RTN","XMDIRRCV",4,0)
 S XMA=0
"RTN","XMDIRRCV",5,0)
 ;
"RTN","XMDIRRCV",6,0)
 ;Get pointer to domain data is coming from
"RTN","XMDIRRCV",7,0)
 S %=$P($P($P(^XMB(3.9,XMZ,0),U,2),"@",2),">")
"RTN","XMDIRRCV",8,0)
 S XMDIR1A("CODE")=$S(%="":^XMB("NAME"),1:%)
"RTN","XMDIRRCV",9,0)
 N DIK S DA=0,DIK="^XMD(4.2997,"
"RTN","XMDIRRCV",10,0)
 F  S DA=$O(^XMD(4.2997,"E",XMDIR1A("CODE"),DA)) Q:+DA'=DA  D ^DIK
"RTN","XMDIRRCV",11,0)
 ;
"RTN","XMDIRRCV",12,0)
 ;Begin main loop
"RTN","XMDIRRCV",13,0)
 ;
"RTN","XMDIRRCV",14,0)
A ;X XMREC
"RTN","XMDIRRCV",15,0)
 ;I $D(XMER) G Q:XMER<0
"RTN","XMDIRRCV",16,0)
 ;S XMA=XMA+1
"RTN","XMDIRRCV",17,0)
 ;S XMTXT(XMA)=XMRG
"RTN","XMDIRRCV",18,0)
 ;G A
"RTN","XMDIRRCV",19,0)
Q ; SET UP FOR RECEIVING EMAIL DIRECTORY
"RTN","XMDIRRCV",20,0)
 N %,%1,%5,%6
"RTN","XMDIRRCV",21,0)
 S XMDIR1=$E(DT,1,5)-200
"RTN","XMDIRRCV",22,0)
 S %=.999
"RTN","XMDIRRCV",23,0)
 F  S %=$O(^XMB(3.9,XMZ,2,%)) Q:%=""  S %1=$G(^XMB(3.9,XMZ,2,%,0)) D
"RTN","XMDIRRCV",24,0)
 . Q:%1=""
"RTN","XMDIRRCV",25,0)
 . S X("LN")=$P(%1,U),X("FN")=$P(%1,U,2),X("RN")=$P(%1,U,3),X("MC")=$P(%1,U,4),X("EMC")=$P(%1,U,5),X("L")=$P(%1,U,6),X("NET")=$P(%1,U,7)
"RTN","XMDIRRCV",26,0)
 . Q:X("LN")=""
"RTN","XMDIRRCV",27,0)
 . I $D(^XMD(4.2997,"B",X("LN"))) S %5="" F  S %5=$O(^XMD(4.2997,"B",X("LN"),%5)) Q:%5=""  I $D(^XMD(4.2997,%5,0)) S %6=^XMD(4.2997,%5,0) Q:X("NET")=$P(%6,U,7)
"RTN","XMDIRRCV",28,0)
 . D FILE^XMDIR1A(.X)
"RTN","XMDIRRCV",29,0)
 ;
"RTN","XMDIRRCV",30,0)
 ;FINISH UP
"RTN","XMDIRRCV",31,0)
 ;
"RTN","XMDIRRCV",32,0)
 ;Set up for call to MailMan programmer interface
"RTN","XMDIRRCV",33,0)
 S XMTEXT="XMTXT(",^TMP("XMY",$J,.5)=""
"RTN","XMDIRRCV",34,0)
 S XMTXT(XMA+1)=" "
"RTN","XMDIRRCV",35,0)
 S XMTXT(XMA+2)="This message arrived through a server routine."
"RTN","XMDIRRCV",36,0)
 ;
"RTN","XMDIRRCV",37,0)
 ;Call MailMan programmer interface
"RTN","XMDIRRCV",38,0)
 D ^XMD
"RTN","XMDIRRCV",39,0)
 D DELETE^XMDIRSND("S."_XQSOP,XQMSG)
"RTN","XMDIRRCV",40,0)
 QUIT
"RTN","XMDIRSND")
0^7^B2507228
"RTN","XMDIRSND",1,0)
XMDIRSND ;(WASH ISC)/CMW - SEND USER DIRECTORY TO REQUESTING SITE; 3/18/93  ;10/09/96  09:29
"RTN","XMDIRSND",2,0)
 ;;7.1;MailMan;**37**;Jun 02, 1994
"RTN","XMDIRSND",3,0)
CHK I $G(^XMB(1,1,8.4))=0!($G(^XMB(1,1,8.4))="") D  Q
"RTN","XMDIRSND",4,0)
 .N A,B,C,D,E,F
"RTN","XMDIRSND",5,0)
 .S A=XMZ,B="Reply to Directory Request",D="",E=.5
"RTN","XMDIRSND",6,0)
 .S C(1)="User directory request at Domain "_^XMB("NETNAME")
"RTN","XMDIRSND",7,0)
 .S C(2)="is not granted.  "
"RTN","XMDIRSND",8,0)
 .S F=$$ENTA^XMA2R(A,B,.C,D,E)
"RTN","XMDIRSND",9,0)
 .D DELETE("S."_XQSOP,XQMSG)
"RTN","XMDIRSND",10,0)
 N %,%1,I,XMRTN
"RTN","XMDIRSND",11,0)
 S XMRTN=$TR($P($P(^XMB(3.9,XMZ,0),U,2),"@",2),"<>") I XMRTN="" S XMRTN=^XMB("NETNAME")
"RTN","XMDIRSND",12,0)
 S XMSUB="Collect network user address",XMDUZ=.5
"RTN","XMDIRSND",13,0)
 D XMZ^XMA2
"RTN","XMDIRSND",14,0)
INFO S I=1,%=0
"RTN","XMDIRSND",15,0)
 F  S %=$O(^XMB(3.7,%)) Q:'%  D
"RTN","XMDIRSND",16,0)
 . S %1=$G(^VA(200,%,0)) Q:'$L($P(%1,U,3))
"RTN","XMDIRSND",17,0)
 . S %1=$P(%1,U) Q:%1=""  S:%1["," %1=$TR(%1,", .","._+")
"RTN","XMDIRSND",18,0)
 . S X("LN")=$P(%1,"."),X("FN")=$P(%1,".",2)
"RTN","XMDIRSND",19,0)
 . S X("NET")=%1_"@"_^XMB("NETNAME")
"RTN","XMDIRSND",20,0)
 . ;Lname^Fname^Room#^MailCode^MailCode+^Location^Netname^Phone#^Phone_Ext
"RTN","XMDIRSND",21,0)
 . S ^XMB(3.9,XMZ,2,I,0)=X("LN")_U_X("FN")_"^^^^^"_X("NET"),I=I+1
"RTN","XMDIRSND",22,0)
 . Q
"RTN","XMDIRSND",23,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92A^"_(I-1)_"^"_(I-1)
"RTN","XMDIRSND",24,0)
 S XMY("S.XMMGR-DIRECTORY-RECV@"_XMRTN)=""
"RTN","XMDIRSND",25,0)
 D ENT1^XMD
"RTN","XMDIRSND",26,0)
 D DELETE("S."_XQSOP,XQMSG)
"RTN","XMDIRSND",27,0)
 Q
"RTN","XMDIRSND",28,0)
DELETE(XMSER,XMZ) ; Delete Server Message
"RTN","XMDIRSND",29,0)
 D REMSBMSG^XMA1C
"RTN","XMDIRSND",30,0)
 Q
"RTN","XMYPOST7")
0^9^B1371686
"RTN","XMYPOST7",1,0)
XMYPOST7 ;SFISC/GMB - Correct message multipe zero nodes ;02/11/97  15:04
"RTN","XMYPOST7",2,0)
 ;;7.1;MailMan;**37**;Jun 02, 1994
"RTN","XMYPOST7",3,0)
 N XMDUZ,XMK,XMZ,XMCNT
"RTN","XMYPOST7",4,0)
 L +^XMB(3.7):0 E  Q
"RTN","XMYPOST7",5,0)
 S XMDUZ=0
"RTN","XMYPOST7",6,0)
 F  S XMDUZ=$O(^XMB(3.7,XMDUZ)) Q:XMDUZ'>0  D
"RTN","XMYPOST7",7,0)
 . ;W !,"User ",XMDUZ
"RTN","XMYPOST7",8,0)
 . ;L +^XMB(3.7,XMDUZ)
"RTN","XMYPOST7",9,0)
 . S XMK=0
"RTN","XMYPOST7",10,0)
 . F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:XMK'>0  D
"RTN","XMYPOST7",11,0)
 . . Q:'$O(^XMB(3.7,XMDUZ,2,XMK,1,0))
"RTN","XMYPOST7",12,0)
 . . S (XMZ,XMCNT)=0
"RTN","XMYPOST7",13,0)
 . . F  S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,XMZ)) Q:XMZ'>0  S XMCNT=XMCNT+1
"RTN","XMYPOST7",14,0)
 . . ;W !," Basket ",XMK," from ",$P(^XMB(3.7,XMDUZ,2,XMK,1,0),U,4)," to ",XMCNT
"RTN","XMYPOST7",15,0)
 . . S $P(^XMB(3.7,XMDUZ,2,XMK,0),U,5)=XMCNT
"RTN","XMYPOST7",16,0)
 . . S ^XMB(3.7,XMDUZ,2,XMK,1,0)="^3.702P^"_+$O(^XMB(3.7,XMDUZ,2,XMK,1,"C"),-1)_U_XMCNT
"RTN","XMYPOST7",17,0)
 . ;L -^XMB(3.7,XMDUZ)
"RTN","XMYPOST7",18,0)
 L -^XMB(3.7)
"RTN","XMYPOST7",19,0)
 Q
"RTN","XMYPOST8")
0^10^B892272
"RTN","XMYPOST8",1,0)
XMYPOST8 ;SFISC/GMB - Correct message basket numbers ;12/10/96  16:14
"RTN","XMYPOST8",2,0)
 ;;7.1;MailMan;**37**;Jun 02, 1994
"RTN","XMYPOST8",3,0)
 N XMDUZ,XMK,XMZ,XMKZ
"RTN","XMYPOST8",4,0)
 S XMDUZ=0
"RTN","XMYPOST8",5,0)
 F  S XMDUZ=$O(^XMB(3.7,XMDUZ)) Q:XMDUZ'>0  D
"RTN","XMYPOST8",6,0)
 . L +^XMB(3.7,XMDUZ)
"RTN","XMYPOST8",7,0)
 . S XMK=0
"RTN","XMYPOST8",8,0)
 . F  S XMK=$O(^XMB(3.7,XMDUZ,2,XMK)) Q:XMK'>0  D
"RTN","XMYPOST8",9,0)
 . . Q:'$O(^XMB(3.7,XMDUZ,2,XMK,1,0))
"RTN","XMYPOST8",10,0)
 . . S XMKZ=0
"RTN","XMYPOST8",11,0)
 . . F  S XMKZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ)) Q:XMKZ'>0  D
"RTN","XMYPOST8",12,0)
 . . . S XMZ=$O(^XMB(3.7,XMDUZ,2,XMK,1,"C",XMKZ,0))
"RTN","XMYPOST8",13,0)
 . . . I $D(^XMB(3.7,XMDUZ,2,XMK,1,XMZ,0)),$P(^(0),U,2)'=XMKZ S $P(^(0),U,2)=XMKZ
"RTN","XMYPOST8",14,0)
 . L -^XMB(3.7,XMDUZ)
"RTN","XMYPOST8",15,0)
 Q
"VER")
8.0^21.0
"^DD",4.3,4.3,4.304,0)
MESSAGES NOT TO PURGE WEEKDAYS^NJ8,0^^NOTOPURGE;1^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,4.304,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",4.3,4.3,4.304,21,0)
^^13^13^2961008^^^^
"^DD",4.3,4.3,4.304,21,1,0)
When the option XMAUTOPURGE runs, it purges messages from the message file,
"^DD",4.3,4.3,4.304,21,2,0)
^XMB(3.9, which are no longer referenced (they aren't in anyone's mailbox).
"^DD",4.3,4.3,4.304,21,3,0)

"^DD",4.3,4.3,4.304,21,4,0)
If this field is null or zero, OR if the option is run on Saturday, the purge
"^DD",4.3,4.3,4.304,21,5,0)
starts at the beginning of the message file. 
"^DD",4.3,4.3,4.304,21,6,0)

"^DD",4.3,4.3,4.304,21,7,0)
If this field has a value greater than zero, AND the option is run on Sunday
"^DD",4.3,4.3,4.304,21,8,0)
through Friday, the purge starts at the message number calculated by
"^DD",4.3,4.3,4.304,21,9,0)
subtracting the value from the last message number in the file. 
"^DD",4.3,4.3,4.304,21,10,0)
 
"^DD",4.3,4.3,4.304,21,11,0)
e.g.:  Last Message number assigned    3,345,542
"^DD",4.3,4.3,4.304,21,12,0)
       Value of this field               500,000
"^DD",4.3,4.3,4.304,21,13,0)
       First message number processed  2,845,542
"^DD",4.3,4.3,4.304,"DT")
2931218
"^DD",4.3,4.3,142,0)
NO-PURGE DAYS BUFFER^NJ2,0^^.14;2^K:+X'=X!(X>10)!(X<1)!(X?.E1"."1N.N) X
"^DD",4.3,4.3,142,3)
Type a Number between 1 and 10, 0 Decimal Digits
"^DD",4.3,4.3,142,21,0)
16^^16^16^2961101^
"^DD",4.3,4.3,142,21,1,0)
This field is used during the un-referenced-messages purge to avoid purging the
"^DD",4.3,4.3,142,21,2,0)
last few messages in the message file, according to their send date. 
"^DD",4.3,4.3,142,21,3,0)

"^DD",4.3,4.3,142,21,4,0)
We subtract the NO-PURGE DAYS BUFFER from today's date, giving a 'no-purge
"^DD",4.3,4.3,142,21,5,0)
date'.  Local messages which were created on or after that date are not subject
"^DD",4.3,4.3,142,21,6,0)
to purge.  Messages from other sites are not affected by this buffer.
"^DD",4.3,4.3,142,21,7,0)

"^DD",4.3,4.3,142,21,8,0)
If this field is not filled in, it defaults to 7 days.  One day is probably
"^DD",4.3,4.3,142,21,9,0)
all that is needed, however.
"^DD",4.3,4.3,142,21,10,0)

"^DD",4.3,4.3,142,21,11,0)
One situation in which this buffer may be useful is in the case of a message
"^DD",4.3,4.3,142,21,12,0)
sent only to a remote site.  Such a message is unreferenced and would otherwise
"^DD",4.3,4.3,142,21,13,0)
be subject to purge.  If a reply came from the remote site after the original
"^DD",4.3,4.3,142,21,14,0)
message had been purged, the sender would have access only to the reply and not
"^DD",4.3,4.3,142,21,15,0)
to the original message.  The NO-PURGE DAYS BUFFER could be set to a reasonable
"^DD",4.3,4.3,142,21,16,0)
number of days to allow for a reply.
"^DD",4.3,4.3,142,"DT")
2961008
**END**
**END**
