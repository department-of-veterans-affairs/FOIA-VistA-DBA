Released XU*8*392 SEQ #326
Extracted from mail message
**KIDS**:XU*8.0*392^

**INSTALL NAME**
XU*8.0*392
"BLD",881,0)
XU*8.0*392^KERNEL^0^3051219^y
"BLD",881,1,0)
^^2^2^3050707^
"BLD",881,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",881,1,2,0)
XU*8*392  Error trap adds quotes to arrays.
"BLD",881,4,0)
^9.64PA^^
"BLD",881,6.3)
5
"BLD",881,"KRN",0)
^9.67PA^8989.52^19
"BLD",881,"KRN",.4,0)
.4
"BLD",881,"KRN",.401,0)
.401
"BLD",881,"KRN",.402,0)
.402
"BLD",881,"KRN",.403,0)
.403
"BLD",881,"KRN",.5,0)
.5
"BLD",881,"KRN",.84,0)
.84
"BLD",881,"KRN",3.6,0)
3.6
"BLD",881,"KRN",3.8,0)
3.8
"BLD",881,"KRN",9.2,0)
9.2
"BLD",881,"KRN",9.8,0)
9.8
"BLD",881,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",881,"KRN",9.8,"NM",1,0)
ZTER^^0^39240684
"BLD",881,"KRN",9.8,"NM",2,0)
XTER1^^0^27359936
"BLD",881,"KRN",9.8,"NM",3,0)
ZTER1^^0^4892576
"BLD",881,"KRN",9.8,"NM","B","XTER1",2)

"BLD",881,"KRN",9.8,"NM","B","ZTER",1)

"BLD",881,"KRN",9.8,"NM","B","ZTER1",3)

"BLD",881,"KRN",19,0)
19
"BLD",881,"KRN",19.1,0)
19.1
"BLD",881,"KRN",101,0)
101
"BLD",881,"KRN",409.61,0)
409.61
"BLD",881,"KRN",771,0)
771
"BLD",881,"KRN",870,0)
870
"BLD",881,"KRN",8989.51,0)
8989.51
"BLD",881,"KRN",8989.52,0)
8989.52
"BLD",881,"KRN",8994,0)
8994
"BLD",881,"KRN","B",.4,.4)

"BLD",881,"KRN","B",.401,.401)

"BLD",881,"KRN","B",.402,.402)

"BLD",881,"KRN","B",.403,.403)

"BLD",881,"KRN","B",.5,.5)

"BLD",881,"KRN","B",.84,.84)

"BLD",881,"KRN","B",3.6,3.6)

"BLD",881,"KRN","B",3.8,3.8)

"BLD",881,"KRN","B",9.2,9.2)

"BLD",881,"KRN","B",9.8,9.8)

"BLD",881,"KRN","B",19,19)

"BLD",881,"KRN","B",19.1,19.1)

"BLD",881,"KRN","B",101,101)

"BLD",881,"KRN","B",409.61,409.61)

"BLD",881,"KRN","B",771,771)

"BLD",881,"KRN","B",870,870)

"BLD",881,"KRN","B",8989.51,8989.51)

"BLD",881,"KRN","B",8989.52,8989.52)

"BLD",881,"KRN","B",8994,8994)

"BLD",881,"QUES",0)
^9.62^^
"BLD",881,"REQB",0)
^9.611^1^1
"BLD",881,"REQB",1,0)
XU*8.0*275^2
"BLD",881,"REQB","B","XU*8.0*275",1)

"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
392^3051219
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3051219
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*392  Error trap adds quotes to arrays.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","XTER1")
0^2^B27359936
"RTN","XTER1",1,0)
XTER1 ;ISC-SF.SEA/JLI - Kernel Error Trap Display ;10/18/2005  
"RTN","XTER1",2,0)
 ;;8.0;KERNEL;**8,392**;Jul 10, 1995;Build 5
"RTN","XTER1",3,0)
 S XTDV1=0
"RTN","XTER1",4,0)
WRT S XTOUT=0 S:'$D(XTBLNK) $P(XTBLNK," ",133)=" " S:'$D(C) C=0 K:C=0 ^TMP($J,"XTER")
"RTN","XTER1",5,0)
 D DV
"RTN","XTER1",6,0)
 I '$D(%XTZLIN) S %XTY=$P(%XTZE,","),%XTX=$P(%XTY,"^") S:%XTX[">" %XTX=$P(%XTX,">",2)
"RTN","XTER1",7,0)
 I '$D(%XTZLIN),%XTX'="" S X=$P($P(%XTY,"^",2),":") I X'="" X ^%ZOSF("TEST") I $T D
"RTN","XTER1",8,0)
 . N XCNP,DIF,%XTX,%XTY
"RTN","XTER1",9,0)
 . S XCNP=0,DIF="^TMP($J,""XTER1""," X ^%ZOSF("LOAD") S %XTY=$P(%XTX,"+",1) D
"RTN","XTER1",10,0)
 . . I %XTY'="" F X=0:0 S X=$O(^TMP($J,"XTER1",X)) Q:X'>0  I $P(^(X,0)," ")=%XTY S X=X+$P(%XTX,"+",2),%XTZLIN=^TMP($J,"XTER1",X,0) Q
"RTN","XTER1",11,0)
 . . I %XTY="" S X=+$P(%XTX,"+",2) Q:X'>0  S %XTZLIN=^TMP($J,"XTER1",X,0)
"RTN","XTER1",12,0)
 S:'$D(%XTZLIN) %XTZLIN="" K ^TMP($J,"XTER1")
"RTN","XTER1",13,0)
 I %XTZLIN'="" D ADD(""),ADD(%XTZLIN)
"RTN","XTER1",14,0)
 I '$D(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV","B")) F XTI=0:0 S XTI=$O(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV",XTI)) Q:XTI'>0  S XTSYM=^(XTI,0),^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV","B",XTSYM,XTI)=""
"RTN","XTER1",15,0)
 I IO'=IO(0) S XTDV1=0 D DV
"RTN","XTER1",16,0)
 D:%XTZGR'="" ADD(""),ADD("Last Global Ref: "_%XTZGR) D:'$G(XTMES)&'$G(XTPRNT) WRITER^XTER1A I IO'="",IO'=IO(0)!$G(XTPRNT) U IO W @IOF S X="^L" G WRTA
"RTN","XTER1",17,0)
 I $G(XTMES) S X="^L" G WRTA
"RTN","XTER1",18,0)
 ;
"RTN","XTER1",19,0)
 K ^TMP($J,"XTER") S C=0
"RTN","XTER1",20,0)
 R !!,"Which symbol? > ",XTX:DTIME S:'$T!(XTX="") XTX="^"
"RTN","XTER1",21,0)
 S:$E(XTX,1)="^" XTX=$TR(XTX,"ilmpqr","ILMPQR") ;uppercase
"RTN","XTER1",22,0)
 G XTERR^XTER:XTX>0!(XTX="^"),END^XTER:XTX="^Q",MESG^XTER1A:XTX="^M",PRNT^XTER1A:XTX="^P" S X=XTX,XTX="",XTOUT=0
"RTN","XTER1",23,0)
 I X="^I" D EN^XTER1B G WRT
"RTN","XTER1",24,0)
 I X["?" S XTF="1,2,10,7,13,14,15,8,9" D HELP^XTER G WRT
"RTN","XTER1",25,0)
 I X="$" S XTDV1=0 D DV G WRT
"RTN","XTER1",26,0)
 I X="^R" G RESTOR^XTER2
"RTN","XTER1",27,0)
 ;
"RTN","XTER1",28,0)
WRTA ;Show All (^L)
"RTN","XTER1",29,0)
 D WRT1 S:'$D(XTX) XTX=""
"RTN","XTER1",30,0)
 Q:$G(XTMES)!$G(XTPRNT)  G:IO=IO(0)&(XTX'="^Q")&(XTX'="^q") WRT
"RTN","XTER1",31,0)
 U IO(0) G END^XTER:XTX="^Q"!(XTX="^q"),XTERR^XTER
"RTN","XTER1",32,0)
 ;
"RTN","XTER1",33,0)
WRT1 ;
"RTN","XTER1",34,0)
 S:'$D(IOSL) IOSL=24 D ADD(""),ADD("")
"RTN","XTER1",35,0)
 S XTSYM=$S(X="^L":"",1:X),%XTYL=IOSL-4,XTI=0,XTC=1,X="",XTA=XTSYM,XTA=$S(XTA="":"",1:$E(XTA,1,$L(XTA)-1)_$C($A($E(XTA,$L(XTA)))-1)_"z")
"RTN","XTER1",36,0)
 ;Find start by order thru B X-ref for Symbols, XTA=var name, XTB=var value
"RTN","XTER1",37,0)
WF S:'%XTYL %XTYL=IOSL-4
"RTN","XTER1",38,0)
 S (XTA,XTA1)=$O(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV","B",XTA)) S XTI=$S(XTSYM="":1,XTA'="":$O(^(XTA,0)),1:0)
"RTN","XTER1",39,0)
 I XTA=""!(XTSYM'=""&($E(XTA,1,$L(XTSYM))'=XTSYM)) D:XTSYM'=""&XTC ADD("No such symbol") D:'$G(XTPRNT) MORE^XTER1A Q
"RTN","XTER1",40,0)
 D WV
"RTN","XTER1",41,0)
 ;Show the rest in order
"RTN","XTER1",42,0)
 F  S XTI=$O(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV",XTI)) Q:'XTI!(XTOUT)  S (XTA,XTA1)=^(XTI,0) Q:$E(XTA,1,$L(XTSYM))'=XTSYM  D WV
"RTN","XTER1",43,0)
 Q
"RTN","XTER1",44,0)
WV ;Write a variable
"RTN","XTER1",45,0)
 S:'%XTYL %XTYL=IOSL-4
"RTN","XTER1",46,0)
 S XTB=$S($D(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV",XTI,"D")):^("D"),1:"***  WARNING: this value was NOT recorded due to an ERROR WITHIN the TRAP ***")
"RTN","XTER1",47,0)
 ;Check for long variables
"RTN","XTER1",48,0)
 S XTL=$G(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZV",XTI,"L")) I XTL>255 D ADD("**The following variables length is "_XTL_", only displaying first 255.**")
"RTN","XTER1",49,0)
 S XTC=0 S:'$G(XTMES)&'$G(XTPRNT) %XTYL=%XTYL-1
"RTN","XTER1",50,0)
 D:'%XTYL MORE^XTER1A Q:XTOUT  D:'%XTYL ADD("")
"RTN","XTER1",51,0)
 S XTA1=XTA1_"=" K XTC1 I XTB?.PUNL,XTB'["\" S XTA1=XTA1_XTB,XTC1=""
"RTN","XTER1",52,0)
 ;Change control char to \027 format
"RTN","XTER1",53,0)
 I '$D(XTC1) S XTC1="" I $P(XTA1," ",2)="" F XTK=1:1 S XTZ=$E(XTB,XTK) Q:XTZ=""  S XTC1=XTC1_$S(XTZ'?1C:XTZ,1:"\"_$E($A(XTZ)+1000,2,4)) I XTZ="\" S XTC1=XTC1_"\"
"RTN","XTER1",54,0)
 D SET D:XTL>255 ADD("**")
"RTN","XTER1",55,0)
 Q
"RTN","XTER1",56,0)
 ;
"RTN","XTER1",57,0)
SET ;
"RTN","XTER1",58,0)
 I ($L(XTA1)+$L(XTC1))<246 S XTA1=XTA1_XTC1,XTC1="" D ADD(XTA1) Q
"RTN","XTER1",59,0)
 I $L(XTA1)>245 D ADD($E(XTA1,1,245)) S XTA1=$E(XTA1,246,$L(XTA1)) G SET
"RTN","XTER1",60,0)
 I $L(XTA1)>0 D ADD(XTA1_$E(XTC1,1,(245-$L(XTA1)))) S XTC1=$E(XTC1,(245-$L(XTA1)+1),$L(XTC1)) G SET
"RTN","XTER1",61,0)
 D ADD($E(XTC1,1,245)) S XTC1=$E(XTC1,246,$L(XTC1)) G SET
"RTN","XTER1",62,0)
 Q
"RTN","XTER1",63,0)
 ;
"RTN","XTER1",64,0)
ADD(STR) ;Add STR to TMP global
"RTN","XTER1",65,0)
 S C=C+1,^TMP($J,"XTER",C)=STR
"RTN","XTER1",66,0)
 Q
"RTN","XTER1",67,0)
 ;Header info
"RTN","XTER1",68,0)
DV I $D(XTDV1),XTDV1=1 G DV1
"RTN","XTER1",69,0)
 K %XTZLIN
"RTN","XTER1",70,0)
 S %XTZE=^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZE"),%XTJOB=$G(^("J")),%XTIO=$G(^("I")),%XTZH=$G(^("ZH")),%XTZH1=$G(^("H")),%XTZGR=$G(^("GR")) S:$D(^("LINE")) %XTZLIN=^("LINE")
"RTN","XTER1",71,0)
 I %XTZH1>0 S %H=%XTZH1 D YMD^%DTC S Y=X_% D DD^%DT S $P(%XTZH1,"^",2)=$P(Y,"@",1)_" "_$P(Y,"@",2)
"RTN","XTER1",72,0)
 F %XTI=1:1:9 S %XTZH(%XTI)=$P(%XTZH,"^",%XTI)
"RTN","XTER1",73,0)
 S %XTZH(3)=$P(%XTZH1,U,2)
"RTN","XTER1",74,0)
 S %XTUCI=$P(%XTJOB,U,4)
"RTN","XTER1",75,0)
 ;Build output
"RTN","XTER1",76,0)
 S X="Process ID:  "_$P(%XTJOB,U,5)_"  ("_$P(%XTJOB,U)_")",X=X_$E(XTBLNK,1,40-$L(X))_%XTZH(3)
"RTN","XTER1",77,0)
 D ADD(""),ADD(X)
"RTN","XTER1",78,0)
 S %XTZ="Username\Process Name\UCI/VOL\\$ZA\$ZB\Current $IO\Current $ZIO\CPU time\Page Faults\Direct I/O\Buffered I/O"
"RTN","XTER1",79,0)
 S %XTZ(1)=$P(%XTJOB,U,3),%XTZ(2)=$P(%XTJOB,U,2),%XTZ(3)=$S(%XTUCI]"":"["_%XTUCI_"]",1:"")
"RTN","XTER1",80,0)
 S %XTZ(4)="",%XTZ(5)=$J($P(%XTIO,U,2),3),%XTZ(6)=$J($P(%XTIO,U,3),3)
"RTN","XTER1",81,0)
 S %XTZ(7)=$P(%XTIO,U),%XTZ(8)=$P(%XTIO,U,4,99),%XTZ(9)=$J(%XTZH(1),6)
"RTN","XTER1",82,0)
 S %XTZ(10)=$J(%XTZH(4),10),%XTZ(11)=$J(%XTZH(7),10),%XTZ(12)=$J(%XTZH(8),10)
"RTN","XTER1",83,0)
 F %XTI=1:1:12 D
"RTN","XTER1",84,0)
 . I %XTI#2 S X=""
"RTN","XTER1",85,0)
 . S:%XTZ(%XTI)'?." " X=X_$P(%XTZ,"\",%XTI)_": "_%XTZ(%XTI) S:%XTI#2 X=$E(X_$E(XTBLNK,1,40),1,40)
"RTN","XTER1",86,0)
 . I '(%XTI#2),X'?." " D ADD(""),ADD(X)
"RTN","XTER1",87,0)
 . Q
"RTN","XTER1",88,0)
DV1 S XTDV1=1 D ADD(""),ADD("$ZE= "_%XTZE)
"RTN","XTER1",89,0)
 K X I $D(^%ZTER(1,%XTZDAT,1,%XTZNUM,"ZE2")) S X=^("ZE2")
"RTN","XTER1",90,0)
 I $D(X) D ADD(""),ADD("%ZTER encountered an error while logging this error -- "),ADD("This may have caused some LOCAL VARIABLES to be lost."),ADD("This error was: "_X)
"RTN","XTER1",91,0)
 Q
"RTN","XTER1",92,0)
 ;
"RTN","ZTER")
0^1^B39240684
"RTN","ZTER",1,0)
%ZTER ; ISC-SF.SEA/JLI - KERNEL ERROR TRAP TO LOG ERRORS ;11/23/2005
"RTN","ZTER",2,0)
 ;;8.0;KERNEL;**8,18,32,24,36,63,73,79,86,112,118,162,275,392**;JUL 10, 1995;Build 5
"RTN","ZTER",3,0)
 S ^TMP("$ZE",$J,1)=$$LGR^%ZOSV
"RTN","ZTER",4,0)
 S ^TMP("$ZE",$J,0)=$$EC^%ZOSV ;$S(^%ZOSF("OS")["GT.M":$ZS,1:$ZE)
"RTN","ZTER",5,0)
 S ^TMP("$ZE",$J,2)=$ETRAP,$ETRAP="D ERR^%ZTER"
"RTN","ZTER",6,0)
 I (^TMP("$ZE",$J,0)["-ALLOC,")!(^TMP("$ZE",$J,0)["<STORE>")!(^TMP("$ZE",$J,0)["-MEMORY") D
"RTN","ZTER",7,0)
 . I '$D(XUALLOC) D
"RTN","ZTER",8,0)
 . . K (%ZTERLGR,DUZ,DT,DISYS,IO,IOBS,IOF,IOM,ION,IOSL,IOST,IOT,IOS,IOXY,U,XRTL,XQVOL,XQY,XQY0,XQDIC,XQPSM,XQPT,XQAUDIT,XQXFLG,ZTSTOP,ZTQUEUED,ZTREQ,DA,D0,DI,DIC,DIE)
"RTN","ZTER",9,0)
 . S %ZTER12A="ALLOC"
"RTN","ZTER",10,0)
 K XUALLOC
"RTN","ZTER",11,0)
 S %ZTERZE=^TMP("$ZE",$J,0),%ZT("^XUTL(""XQ"",$J)")="" S:'$D(%ZTERLGR) %ZTERLGR=^TMP("$ZE",$J,1)
"RTN","ZTER",12,0)
 G:$$SCREEN(%ZTERZE,1) EXIT ;Let site screen errors, count don't show
"RTN","ZTER",13,0)
 ;Get a record.
"RTN","ZTER",14,0)
 S %ZTERH1=+$H L +^%ZTER(1,%ZTERH1,0):15
"RTN","ZTER",15,0)
 S %ZTER11N=$P($G(^%ZTER(1,%ZTERH1,0)),"^",2)+1,^%ZTER(1,%ZTERH1,0)=%ZTERH1_"^"_%ZTER11N,^(1,0)="^3.0751^"_%ZTER11N_"^"_%ZTER11N
"RTN","ZTER",16,0)
 I %ZTER11N=1 S ^%ZTER(1,0)=$P(^%ZTER(1,0),"^",1,2)_"^"_%ZTERH1_"^"_($P(^%ZTER(1,0),"^",4)+1)
"RTN","ZTER",17,0)
 L -^%ZTER(1,%ZTERH1,0)
"RTN","ZTER",18,0)
 S %ZTERRT=$NA(^%ZTER(1,%ZTERH1,1,%ZTER11N))
"RTN","ZTER",19,0)
 S @%ZTERRT@(0)=%ZTER11N,^("ZE")=%ZTERZE S:$D(%ZTERLGR) ^("GR")=%ZTERLGR K %ZTERLGR
"RTN","ZTER",20,0)
 K %ZTER11B
"RTN","ZTER",21,0)
 ;Get $ZB
"RTN","ZTER",22,0)
 I ^%ZOSF("OS")["DSM"!(^%ZOSF("OS")["GT.M") D
"RTN","ZTER",23,0)
 . F %ZTER11I=1:1:$L($ZB) S %ZTER11A=$E($ZB,%ZTER11I),%ZTER11B=$G(%ZTER11B)_$S(%ZTER11A?1C:$A(%ZTER11A),1:%ZTER11A)_","
"RTN","ZTER",24,0)
 . S %ZTER11B=$E(%ZTER11B,1,$L(%ZTER11B)-1)
"RTN","ZTER",25,0)
 . Q
"RTN","ZTER",26,0)
 S:'$D(%ZTER11B) %ZTER11B=$ZB
"RTN","ZTER",27,0)
 S %ZTER11I="" I $D(^%ZOSF("UCI")) K %ZTER11A S:$D(Y) %ZTER11A="" S:($D(Y)#2) %ZTER11A=Y X ^%ZOSF("UCI") S %ZTER11I=Y K:'$D(%ZTER11A) Y S:$D(%ZTER11A) Y=%ZTER11A
"RTN","ZTER",28,0)
 S @%ZTERRT@("H")=$H,^("J")=$J_"^^^"_%ZTER11I_"^"_$J
"RTN","ZTER",29,0)
 S @%ZTERRT@("I")=$I_"^"_$ZA_"^"_%ZTER11B_"^"_$G(IO("ZIO"))_"^"_$X_"^"_$Y_"^"_$P
"RTN","ZTER",30,0)
 S %ZTERROR=$$ETXT
"RTN","ZTER",31,0)
 S %ZTERCNT=0
"RTN","ZTER",32,0)
 D STACK^%ZTER1 ;Save Special Variables
"RTN","ZTER",33,0)
 D SAVE("$X $Y",$X_" "_$Y)
"RTN","ZTER",34,0)
 I ^%ZOSF("OS")["OpenM" D
"RTN","ZTER",35,0)
 . D SAVE("$ZU(56,2)",$ZU(56,2))
"RTN","ZTER",36,0)
 . I $ZV["VMS" S $P(@%ZTERRT@("J"),"^",2,3)=$ZF("GETJPI",$J,"PRCNAM")_"^"_$ZF("GETJPI",$J,"USERNAME")
"RTN","ZTER",37,0)
 D SAVE("$ZV",$ZV)
"RTN","ZTER",38,0)
 ;End Special Variables
"RTN","ZTER",39,0)
 I ^%ZOSF("OS")["VAX DSM" K %ZTER11A,%ZTER11B D VXD^%ZTER1 I 1
"RTN","ZTER",40,0)
 E  D
"RTN","ZTER",41,0)
 . S %ZTERVAR="%" D:$D(%) VAR:$D(%)#2,SUBS:$D(%)>9
"RTN","ZTER",42,0)
 . F %ZTER11Z=0:0 S %ZTERVAR=$O(@%ZTERVAR) Q:%ZTERVAR=""  D VAR:$D(@%ZTERVAR)#2,SUBS:$D(@%ZTERVAR)>9
"RTN","ZTER",43,0)
 D GLOB
"RTN","ZTER",44,0)
 S:%ZTERCNT>0 @%ZTERRT@("ZV",0)="^3.0752^"_%ZTERCNT_"^"_%ZTERCNT
"RTN","ZTER",45,0)
 S:'$D(^%ZTER(1,"B",%ZTERH1)) ^(%ZTERH1,%ZTERH1)=""
"RTN","ZTER",46,0)
 S ^%ZTER(1,%ZTERH1,1,"B",%ZTER11N,%ZTER11N)=""
"RTN","ZTER",47,0)
LIN ;Find the line of the error
"RTN","ZTER",48,0)
 S %ZTERY=$P(%ZTERZE,","),%ZTERX=$P(%ZTERY,"^") S:%ZTERX[">" %ZTERX=$P(%ZTERX,">",2)
"RTN","ZTER",49,0)
 I %ZTERX'="" D
"RTN","ZTER",50,0)
 . N X,XCNP,DIF K ^TMP($J,"XTER1")
"RTN","ZTER",51,0)
 . S X=$P($P(%ZTERY,"^",2),":") Q:X=""  X ^%ZOSF("TEST") Q:'$T
"RTN","ZTER",52,0)
 . S XCNP=0,DIF="^TMP($J,""XTER1""," X ^%ZOSF("LOAD") S %ZTERY=$P(%ZTERX,"+",1)
"RTN","ZTER",53,0)
 . I %ZTERY'="" F X=0:0 S X=$O(^TMP($J,"XTER1",X)) Q:X'>0  I $P(^(X,0)," ")=%ZTERY S X=X+$P(%ZTERX,"+",2),%ZTZLIN=$G(^TMP($J,"XTER1",X,0)) Q
"RTN","ZTER",54,0)
 . I %ZTERY="" S X=+$P(%ZTERX,"+",2) Q:X'>0  S %ZTZLIN=$G(^TMP($J,"XTER1",X,0))
"RTN","ZTER",55,0)
 K ^TMP($J,"XTER1")
"RTN","ZTER",56,0)
 S:$D(%ZTZLIN) @%ZTERRT@("LINE")=%ZTZLIN K %ZTZLIN
"RTN","ZTER",57,0)
 I %ZTERROR'="",$D(^%ZTER(2,"B",%ZTERROR)) S %ZTERROR=%ZTERROR_"^"_$P(^%ZTER(2,+$O(^(%ZTERROR,0)),0),"^",2)
"RTN","ZTER",58,0)
EXIT ;
"RTN","ZTER",59,0)
 I $G(%ZTER12A)["ALLOC" HALT  ;Don't allow job to go on.
"RTN","ZTER",60,0)
 S $EC="",$ET=$G(^TMP("$ZE",$J,2))
"RTN","ZTER",61,0)
 K ^TMP("$ZE",$J)
"RTN","ZTER",62,0)
 K %ZTER11A,%ZTER11B,%ZTERCNT,%ZTER11S,%ZTER11Z,%ZTERVAP,%ZTERVAR,%ZTERSUB,%ZTER11I,%ZTER11D,%ZTER11L,%ZTER11Q,%,%ZTER111,%ZTER112,%ZTER11N
"RTN","ZTER",63,0)
 K %ZTERRT,%ZTERH1
"RTN","ZTER",64,0)
 Q
"RTN","ZTER",65,0)
 ;
"RTN","ZTER",66,0)
VAR I "%ZTER"'=$E(%ZTERVAR,1,5) D SAVE(%ZTERVAR,@%ZTERVAR) Q
"RTN","ZTER",67,0)
 S %ZTERCNT=%ZTERCNT+1,@%ZTERRT@("ZV",%ZTERCNT,0)=%ZTERVAR D
"RTN","ZTER",68,0)
 . I $L(@%ZTERVAR)'>255 S @%ZTERRT@("ZV",%ZTERCNT,"D")=@%ZTERVAR Q
"RTN","ZTER",69,0)
 . S @%ZTERRT@("ZV",%ZTERCNT,"D")=" **** VALUE IS GREATER THAN 255 CHARACTERS (SEE SUBNODES FOR DATA) *** "
"RTN","ZTER",70,0)
 . N %ZTER11,%ZTER12
"RTN","ZTER",71,0)
 . F %ZTER11=1:1 S %ZTER12=$E(@%ZTERVAR,1,245) Q:%ZTER12=""  S @%ZTERVAR=$E(@%ZTERVAR,246,$L(@%ZTERVAR)),@%ZTERRT@("ZV",%ZTERCNT,"D",%ZTER11)=%ZTER12
"RTN","ZTER",72,0)
 . Q
"RTN","ZTER",73,0)
 Q
"RTN","ZTER",74,0)
 ;
"RTN","ZTER",75,0)
SAVE(%n,%v) ;Save name and value into global, use special variables
"RTN","ZTER",76,0)
 S %ZTERCNT=%ZTERCNT+1,@%ZTERRT@("ZV",%ZTERCNT,0)=%n
"RTN","ZTER",77,0)
 I $L(%v)<256 S @%ZTERRT@("ZV",%ZTERCNT,"D")=%v Q
"RTN","ZTER",78,0)
 ;Variable too long for global node
"RTN","ZTER",79,0)
 S @%ZTERRT@("ZV",%ZTERCNT,"D")=$E(%v,1,255),^("L")=$L(%v)
"RTN","ZTER",80,0)
 N %i S %v=$E(%v,256,$L(%v))
"RTN","ZTER",81,0)
 F %i=1:1 Q:'$L(%v)  S @%ZTERRT@("ZV",%ZTERCNT,"D",%i)=$E(%v,1,255),%v=$E(%v,256,$L(%v))
"RTN","ZTER",82,0)
 Q
"RTN","ZTER",83,0)
 ;
"RTN","ZTER",84,0)
SUBS S %ZTER11S="" Q:"%ZT("=$E(%ZTERVAR,1,4)  Q:",%ZTER11S,%ZTER11L,"[(","_%ZTERVAR_",")  S %ZTERVAP=%ZTERVAR_"(",%ZTERSUB="%ZTER11S)"
"RTN","ZTER",85,0)
 ;
"RTN","ZTER",86,0)
 S %ZTER11S=%ZTERVAR
"RTN","ZTER",87,0)
 F  S %ZTER11S=$Q(@%ZTER11S) Q:%ZTER11S=""  D SAVE(%ZTER11S,@%ZTER11S)
"RTN","ZTER",88,0)
 Q
"RTN","ZTER",89,0)
 ;
"RTN","ZTER",90,0)
GLOB ; save off a list of global subtrees, %ZT is passed in subscripted by name
"RTN","ZTER",91,0)
 ; %ZTERCNT passed in to count the nodes we traverse
"RTN","ZTER",92,0)
 ; %ZTERNOD the nodes through which we $QUERY
"RTN","ZTER",93,0)
 ; %ZTERNAM the names of the global subtrees we're saving
"RTN","ZTER",94,0)
 ; %ZTEROPN is %ZTERNAM, evaluated, without close paren for $PIECEing
"RTN","ZTER",95,0)
 N %ZTERNOD,%ZTERNAM,%ZTEROPN
"RTN","ZTER",96,0)
 S %ZTERNAM="" ; the names of the global subtrees we're saving
"RTN","ZTER",97,0)
 F  S %ZTERNAM=$O(%ZT(%ZTERNAM)) Q:%ZTERNAM=""  D
"RTN","ZTER",98,0)
 . S %ZTERNOD=$NA(@%ZTERNAM) ; fully evaluate all the subscripts (incl. $J)
"RTN","ZTER",99,0)
 . S %ZTEROPN=$E(%ZTERNOD,1,$L(%ZTERNOD)-1) ; save %ZTERNOD w/o close paren
"RTN","ZTER",100,0)
 . ;S %ZTERSUB=$QL(%ZTERNOD) ; how many subscripts in the subtree root's name
"RTN","ZTER",101,0)
 . F  S %ZTERNOD=$Q(@%ZTERNOD) Q:%ZTERNOD=""  Q:%ZTERNOD'[%ZTEROPN  D  ; traverse subtree
"RTN","ZTER",102,0)
 . . S %ZTERCNT=%ZTERCNT+1 ; count each node
"RTN","ZTER",103,0)
 . . S @%ZTERRT@("ZV",%ZTERCNT,0)=$P(%ZTERNAM,")")_$P(%ZTERNOD,%ZTEROPN,2) ; unevaluated name
"RTN","ZTER",104,0)
 . . S @%ZTERRT@("ZV",%ZTERCNT,"D")=$G(@%ZTERNOD) ; value of node
"RTN","ZTER",105,0)
 Q
"RTN","ZTER",106,0)
 ;
"RTN","ZTER",107,0)
ETXT() ;Return the Text of the error
"RTN","ZTER",108,0)
 Q $S(%ZTERZE["%DSM-E":$P($P(%ZTERZE,"%DSM-E-",2),","),1:$P($P(%ZTERZE,"<",2),">"))
"RTN","ZTER",109,0)
 ;
"RTN","ZTER",110,0)
ERR ;Handle an error in %ZTER
"RTN","ZTER",111,0)
 I $D(%ZTERH1),$D(%ZTER11N) S ^%ZTER(1,%ZTERH1,1,%ZTER11N,"ZE2")="%ZTER error: "_$ECODE
"RTN","ZTER",112,0)
 ;Should ^TMP("$ZE",$J) be killed here
"RTN","ZTER",113,0)
 HALT
"RTN","ZTER",114,0)
 ;
"RTN","ZTER",115,0)
SCREEN(ERR,%ZT3) ;Screen out certain errors.
"RTN","ZTER",116,0)
 N %ZTE,%ZTI,%ZTJ S:'$D(ERR) ERR=$$EC^%ZOSV
"RTN","ZTER",117,0)
 S %ZTE="",%ZTI=0
"RTN","ZTER",118,0)
 F %ZTJ=2,1 D  Q:%ZTI>0
"RTN","ZTER",119,0)
 . F %ZTI=0:0 S %ZTI=$O(^%ZTER(2,"AC",%ZTJ,%ZTI)) Q:%ZTI=""  S %ZTE=$S($G(^%ZTER(2,%ZTI,2))]"":^(2),1:$P(^(0),"^")) Q:ERR[%ZTE
"RTN","ZTER",120,0)
 . Q
"RTN","ZTER",121,0)
 ;Next see if we should count the error
"RTN","ZTER",122,0)
 I %ZTI>0 S %ZTE=$G(^%ZTER(2,%ZTI,0)) D  Q $P(%ZTE,"^",3)=2 ;See if we skip the recording of the error.
"RTN","ZTER",123,0)
 . Q:(%ZTJ=1)&('$G(%ZT3))
"RTN","ZTER",124,0)
 . I $P(%ZTE,"^",4) L +^%ZTER(2,%ZTI) S ^(3)=$G(^%ZTER(2,%ZTI,3))+1 L -^%ZTER(2,%ZTI)
"RTN","ZTER",125,0)
 . Q
"RTN","ZTER",126,0)
 Q 0 ;record error
"RTN","ZTER",127,0)
 ;
"RTN","ZTER",128,0)
UNWIND ;Unwind stack for new error trap. Called by app code.
"RTN","ZTER",129,0)
 S $ECODE="" S $ETRAP="D UNW^%ZTER Q:'$QUIT  Q -9" S $ECODE=",U1,"
"RTN","ZTER",130,0)
UNW Q:$ESTACK>1  S $ECODE="" Q
"RTN","ZTER",131,0)
 ;
"RTN","ZTER",132,0)
NEWERR() ;Does this OS support the M95 error trapping
"RTN","ZTER",133,0)
 Q 1 ;All current M system now support 95 error trapping
"RTN","ZTER",134,0)
 N % S %=$G(^%ZOSF("OS")) Q:%="" 0
"RTN","ZTER",135,0)
 I %["VAX DSM" Q 1
"RTN","ZTER",136,0)
 I %["GT.M" Q 1
"RTN","ZTER",137,0)
 I %["MSM",$P($ZV,"Version ",2)'<4.3 Q 1
"RTN","ZTER",138,0)
 I %["OpenM" Q 1 ;For version >7.0 or NexGen or Cache
"RTN","ZTER",139,0)
 Q 0
"RTN","ZTER",140,0)
ABORT ;Pop the stack all the way.
"RTN","ZTER",141,0)
 S $ETRAP="Q:$ST>1  S $ECODE="""" Q"
"RTN","ZTER",142,0)
 Q
"RTN","ZTER1")
0^3^B4892576
"RTN","ZTER1",1,0)
%ZTER1 ;ISC-SF.SEA/JLI - ERROR TRAP TO LOG ERRORS (VAX LOCAL SYMBOL TABLE) ;11/23/2005
"RTN","ZTER1",2,0)
 ;;8.0;KERNEL;**18,24,36,49,112,162,275,392**;JUL 10, 1995;Build 5
"RTN","ZTER1",3,0)
VXD ;Record VAX DSM variables
"RTN","ZTER1",4,0)
 S @%ZTERRT@("J")=$J_"^"_$ZC(%GETJPI,0,"PRCNAM")_"^"_$ZC(%GETJPI,0,"USERNAME")_"^"_%ZTER11I_"^"_$ZC(%SYSFAO,"!XL",$J),@%ZTERRT@("I")=$IO_"^"_$ZA_"^"_$ZB_"^"_$ZIO K %ZTER11I
"RTN","ZTER1",5,0)
 S @%ZTERRT@("ZH")=$TR($ZH,",","^")
"RTN","ZTER1",6,0)
 S %ZTER111="%" F  D  S %ZTER111=$ZSORT(@%ZTER111) Q:%ZTER111=""  ;Code from DEC
"RTN","ZTER1",7,0)
 . Q:$E(%ZTER111,1,5)="%ZTER"
"RTN","ZTER1",8,0)
 . I $D(@%ZTER111)#2 D VNXT2
"RTN","ZTER1",9,0)
 . I $D(@%ZTER111)>9 D VNXT3
"RTN","ZTER1",10,0)
 . Q
"RTN","ZTER1",11,0)
 Q
"RTN","ZTER1",12,0)
 ;
"RTN","ZTER1",13,0)
VNXT2 S %ZTERCNT=%ZTERCNT+1,@%ZTERRT@("ZV",%ZTERCNT,0)=%ZTER111,^("D")=$E(@%ZTER111,1,255)
"RTN","ZTER1",14,0)
 Q
"RTN","ZTER1",15,0)
VNXT3 S %ZTER11Q=%ZTER111
"RTN","ZTER1",16,0)
 F  S %ZTER11Q=$Q(@%ZTER11Q) Q:%ZTER11Q=""  S %ZTERCNT=%ZTERCNT+1,@%ZTERRT@("ZV",%ZTERCNT,0)=%ZTER11Q,^("D")=$E(@%ZTER11Q,1,255)
"RTN","ZTER1",17,0)
 Q
"RTN","ZTER1",18,0)
 ;
"RTN","ZTER1",19,0)
STACK ;Record the new $STACK variable
"RTN","ZTER1",20,0)
 I $ECODE]"" S $ZE=""
"RTN","ZTER1",21,0)
 N %ZTER35 S %ZTER35=$S($D(^TMP("$ZE",$J,2)):^(2),1:$ETRAP)
"RTN","ZTER1",22,0)
 D SAVE("$DEVICE",$DEVICE)
"RTN","ZTER1",23,0)
 D SAVE("$ECODE",$E($ECODE,1,255))
"RTN","ZTER1",24,0)
 D SAVE("$ESTACK",$ESTACK)
"RTN","ZTER1",25,0)
 D SAVE("$ETRAP",%ZTER35)
"RTN","ZTER1",26,0)
 D SAVE("$QUIT",$QUIT)
"RTN","ZTER1",27,0)
 D SAVE("$STACK",$STACK)
"RTN","ZTER1",28,0)
 N %,%1,%2 S %2=$ST
"RTN","ZTER1",29,0)
 F %=0:1:$ST S %1=$E(1000+%,2,4) Q:$ST(%,"PLACE")["^%ZTER"  D
"RTN","ZTER1",30,0)
 . D SAVE("$STACK("_%1_")",$STACK(%))
"RTN","ZTER1",31,0)
 . D SAVE("$STACK("_%1_",""ECODE"")",$STACK(%,"ECODE"))
"RTN","ZTER1",32,0)
 . D SAVE("$STACK("_%1_",""PLACE"")",$STACK(%,"PLACE"))
"RTN","ZTER1",33,0)
 . D SAVE("$STACK("_%1_",""MCODE"")",$STACK(%,"MCODE"))
"RTN","ZTER1",34,0)
 . S:$STACK(%,"ECODE")]"" %2=%
"RTN","ZTER1",35,0)
 S @%ZTERRT@("LINE")=$STACK(%2,"MCODE")
"RTN","ZTER1",36,0)
 S $ECODE=""
"RTN","ZTER1",37,0)
 Q
"RTN","ZTER1",38,0)
 ;
"RTN","ZTER1",39,0)
SAVE(%n,%v) ;Save name and value into global, use special variables
"RTN","ZTER1",40,0)
 S %ZTERCNT=%ZTERCNT+1,@%ZTERRT@("ZV",%ZTERCNT,0)=%n
"RTN","ZTER1",41,0)
 S @%ZTERRT@("ZV",%ZTERCNT,"D")=%v
"RTN","ZTER1",42,0)
 Q
"RTN","ZTER1",43,0)
 ;
"RTN","ZTER1",44,0)
VERR ;
"RTN","ZTER1",45,0)
 S @%ZTERRT@("ZE2")="%DSM-E-ET, Error occurred in %ZTER, "_$ECODE
"RTN","ZTER1",46,0)
 HALT
"VER")
8.0^22.0
"BLD",881,6)
^326
**END**
**END**
