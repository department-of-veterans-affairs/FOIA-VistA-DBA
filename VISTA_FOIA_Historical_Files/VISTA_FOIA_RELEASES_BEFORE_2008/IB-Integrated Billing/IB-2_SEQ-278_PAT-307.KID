Released IB*2*307 SEQ #278
Extracted from mail message
**KIDS**:IB*2.0*307^

**INSTALL NAME**
IB*2.0*307
"BLD",5547,0)
IB*2.0*307^INTEGRATED BILLING^0^3050606^y
"BLD",5547,1,0)
^^1^1^3050601^
"BLD",5547,1,1,0)
CMAC 2005
"BLD",5547,4,0)
^9.64PA^^
"BLD",5547,"ABPKG")
n
"BLD",5547,"INIT")
POST^IBYPPL
"BLD",5547,"KRN",0)
^9.67PA^8989.52^19
"BLD",5547,"KRN",.4,0)
.4
"BLD",5547,"KRN",.401,0)
.401
"BLD",5547,"KRN",.402,0)
.402
"BLD",5547,"KRN",.403,0)
.403
"BLD",5547,"KRN",.5,0)
.5
"BLD",5547,"KRN",.84,0)
.84
"BLD",5547,"KRN",3.6,0)
3.6
"BLD",5547,"KRN",3.8,0)
3.8
"BLD",5547,"KRN",9.2,0)
9.2
"BLD",5547,"KRN",9.8,0)
9.8
"BLD",5547,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",5547,"KRN",9.8,"NM",1,0)
IBCRED^^0^B33324179
"BLD",5547,"KRN",9.8,"NM",2,0)
IBCRHBC^^0^B35525545
"BLD",5547,"KRN",9.8,"NM",3,0)
IBCRHBC3^^0^B24573051
"BLD",5547,"KRN",9.8,"NM",4,0)
IBCRHO^^0^B24988216
"BLD",5547,"KRN",9.8,"NM",5,0)
IBCRHU2^^0^B51490441
"BLD",5547,"KRN",9.8,"NM",6,0)
IBYPPL^^0^B8216782
"BLD",5547,"KRN",9.8,"NM","B","IBCRED",1)

"BLD",5547,"KRN",9.8,"NM","B","IBCRHBC",2)

"BLD",5547,"KRN",9.8,"NM","B","IBCRHBC3",3)

"BLD",5547,"KRN",9.8,"NM","B","IBCRHO",4)

"BLD",5547,"KRN",9.8,"NM","B","IBCRHU2",5)

"BLD",5547,"KRN",9.8,"NM","B","IBYPPL",6)

"BLD",5547,"KRN",19,0)
19
"BLD",5547,"KRN",19.1,0)
19.1
"BLD",5547,"KRN",101,0)
101
"BLD",5547,"KRN",409.61,0)
409.61
"BLD",5547,"KRN",771,0)
771
"BLD",5547,"KRN",870,0)
870
"BLD",5547,"KRN",8989.51,0)
8989.51
"BLD",5547,"KRN",8989.52,0)
8989.52
"BLD",5547,"KRN",8994,0)
8994
"BLD",5547,"KRN","B",.4,.4)

"BLD",5547,"KRN","B",.401,.401)

"BLD",5547,"KRN","B",.402,.402)

"BLD",5547,"KRN","B",.403,.403)

"BLD",5547,"KRN","B",.5,.5)

"BLD",5547,"KRN","B",.84,.84)

"BLD",5547,"KRN","B",3.6,3.6)

"BLD",5547,"KRN","B",3.8,3.8)

"BLD",5547,"KRN","B",9.2,9.2)

"BLD",5547,"KRN","B",9.8,9.8)

"BLD",5547,"KRN","B",19,19)

"BLD",5547,"KRN","B",19.1,19.1)

"BLD",5547,"KRN","B",101,101)

"BLD",5547,"KRN","B",409.61,409.61)

"BLD",5547,"KRN","B",771,771)

"BLD",5547,"KRN","B",870,870)

"BLD",5547,"KRN","B",8989.51,8989.51)

"BLD",5547,"KRN","B",8989.52,8989.52)

"BLD",5547,"KRN","B",8994,8994)

"BLD",5547,"QUES",0)
^9.62^^
"BLD",5547,"REQB",0)
^9.611^2^2
"BLD",5547,"REQB",1,0)
IB*2.0*175^1
"BLD",5547,"REQB",2,0)
IB*2.0*148^1
"BLD",5547,"REQB","B","IB*2.0*148",2)

"BLD",5547,"REQB","B","IB*2.0*175",1)

"INIT")
POST^IBYPPL
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
307^3050606
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3050606
"PKG",200,22,1,"PAH",1,1,1,0)
CMAC 2005
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","IBCRED")
0^1^B33324179
"RTN","IBCRED",1,0)
IBCRED ;ALB/ARH - RATES: CM DELETE CHARGE ITEMS OPTION ; 22-MAY-1996
"RTN","IBCRED",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,148,307**;21-MAR-94
"RTN","IBCRED",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRED",4,0)
 ;
"RTN","IBCRED",5,0)
 ;
"RTN","IBCRED",6,0)
ENTER ; OPTION ENTRY POINT:  delete charge items for a specific charge set, may be inactive by a date or all
"RTN","IBCRED",7,0)
 ;
"RTN","IBCRED",8,0)
 W @IOF W !,?12,"**** DELETE INACTIVE CHARGE ITEMS FROM A CHARGE SET ****"
"RTN","IBCRED",9,0)
 W !!,?5,"For a given Charge Set, this option allows deletion of all chargeable items",!,?5,"that have been inactivated or replaced before a certain date.",!
"RTN","IBCRED",10,0)
 W !,?5,"Since all charges for a billing rate and date range may be deleted with",!,?5,"this option, caution is advised.",!
"RTN","IBCRED",11,0)
 ;
"RTN","IBCRED",12,0)
 N IBCS,IBDT,IBCSDEL,IBQUIT,DIR,DTOUT,DUOUT,DIRUT,X,Y S IBDT=0,IBCSDEL=0 K ^TMP($J,"IBCRED")
"RTN","IBCRED",13,0)
 ;
"RTN","IBCRED",14,0)
 W !!,"The Charge Set to delete Charge items from:" S IBCS=$$GETCS^IBCRU1 I +IBCS<1 Q
"RTN","IBCRED",15,0)
 ;
"RTN","IBCRED",16,0)
 W ! S DIR(0)="YO",DIR("A")="Delete ALL charges for this Charge Set" D ^DIR K DIR Q:$D(DIRUT)  I Y=1 S IBDT="ALL"
"RTN","IBCRED",17,0)
 I IBDT="ALL" I IBCS>999!($P(IBCS,U,2)["RC-")!($P(IBCS,U,2)["CMAC") D
"RTN","IBCRED",18,0)
 . S DIR("?")="Enter Yes to delete the Charge Set and it's links with Rate Schedules and Special Groups.  The sets Region will also be deleted if not associated with another set."
"RTN","IBCRED",19,0)
 . S DIR(0)="YO",DIR("A")="Also delete the Charge Set "_$P(IBCS,U,2) D ^DIR K DIR Q:$D(DIRUT)  I Y=1 S IBCSDEL=1
"RTN","IBCRED",20,0)
 ;
"RTN","IBCRED",21,0)
 I IBDT'="ALL" W !!,"All charges inactive before this date will be deleted:" S IBDT=$$GETDT^IBCRU1(,"Select INACTIVE DATE") I IBDT'?7N W !,"No deletions",! Q
"RTN","IBCRED",22,0)
 ;
"RTN","IBCRED",23,0)
 S DIR(0)="SO^1:Print List of Charges that will be Deleted;2:Delete Charges" D ^DIR K DIR I +Y<1!$D(DIRUT) Q
"RTN","IBCRED",24,0)
 I +Y=1 D DEV Q:+$G(IBQUIT)  G RPT
"RTN","IBCRED",25,0)
 ;
"RTN","IBCRED",26,0)
 W !!!,"All charges",$S('IBDT:"",1:" inactive before "_$$DATE(IBDT))," for ",$P(IBCS,U,2)," will be deleted.",!
"RTN","IBCRED",27,0)
 ;
"RTN","IBCRED",28,0)
 S DIR(0)="YO",DIR("A")="Is this correct, do you want to continue" D ^DIR K DIR I Y'=1 W !,"No deletions",!
"RTN","IBCRED",29,0)
 ;
"RTN","IBCRED",30,0)
 I Y=1 D
"RTN","IBCRED",31,0)
 . W !,"Beginning Deletions" W !,$$DELETE(IBCS,IBDT)," charges deleted."
"RTN","IBCRED",32,0)
 . I +IBCSDEL W !!,$P(IBCS,U,2)," ",$P($$CSDELETE(+IBCS),U,2)
"RTN","IBCRED",33,0)
 Q
"RTN","IBCRED",34,0)
 ;
"RTN","IBCRED",35,0)
DELETE(CS,INDT,SAVE) ; delete all charge items in a set inactive before a certain date
"RTN","IBCRED",36,0)
 ; Input:   CS   - set to delete charges from, 
"RTN","IBCRED",37,0)
 ;          INDT - charges not active on this date will be deleted, if ALL- all charges will be deleted from set
"RTN","IBCRED",38,0)
 ;          SAVE - if true, charge items that would be deleted are entered into TMP array for printing instead
"RTN","IBCRED",39,0)
 ; Output:  returns the count of the charge items deleted
"RTN","IBCRED",40,0)
 ;
"RTN","IBCRED",41,0)
 N IBXRF,IBCNT,IBSUB2,IBEFDT,IBITM,IBCIFN,IBINDTCI
"RTN","IBCRED",42,0)
 S IBXRF="AIVDTS"_+$G(CS),IBCNT=0,INDT=$G(INDT),IBSUB2="" I INDT="ALL" S INDT=9999999
"RTN","IBCRED",43,0)
 I +$G(SAVE) S IBSUB2=$$TMPHDR($G(CS),INDT)
"RTN","IBCRED",44,0)
 ;
"RTN","IBCRED",45,0)
 S IBITM=0 F  S IBITM=$O(^IBA(363.2,IBXRF,IBITM)) Q:'IBITM  D
"RTN","IBCRED",46,0)
 . S IBEFDT=0 F  S IBEFDT=$O(^IBA(363.2,IBXRF,IBITM,IBEFDT),-1) Q:'IBEFDT!(IBEFDT'>-INDT)  D
"RTN","IBCRED",47,0)
 .. S IBCIFN=0 F  S IBCIFN=$O(^IBA(363.2,IBXRF,IBITM,IBEFDT,IBCIFN)) Q:'IBCIFN  D
"RTN","IBCRED",48,0)
 ... ;
"RTN","IBCRED",49,0)
 ... S IBINDTCI=$$INACTCI^IBCRU4(IBCIFN)
"RTN","IBCRED",50,0)
 ... I INDT=9999999 D DELCI(IBCIFN,IBSUB2) S IBCNT=IBCNT+1 Q
"RTN","IBCRED",51,0)
 ... I +IBINDTCI,IBINDTCI<INDT D DELCI(IBCIFN,IBSUB2) S IBCNT=IBCNT+1
"RTN","IBCRED",52,0)
 ;
"RTN","IBCRED",53,0)
 Q IBCNT
"RTN","IBCRED",54,0)
 ;
"RTN","IBCRED",55,0)
DELCI(CI,SUB2) ; either save in TMP arry to print or delete
"RTN","IBCRED",56,0)
 I $G(SUB2)'="" D TMPLN^IBCROI1(CI,"IBCRED",SUB2,1) Q
"RTN","IBCRED",57,0)
 I $G(^IBA(363.2,+$G(CI),0)) S DA=CI,DIK="^IBA(363.2," D ^DIK K DA,DIK
"RTN","IBCRED",58,0)
 Q
"RTN","IBCRED",59,0)
 ;
"RTN","IBCRED",60,0)
DATE(X) ;
"RTN","IBCRED",61,0)
 Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCRED",62,0)
 ;
"RTN","IBCRED",63,0)
TMPHDR(CS,INDT) ; set up array header for printed report
"RTN","IBCRED",64,0)
 N IBHDR,IBHDR2,IBDT,SUB2 S SUB2=$P($G(^IBE(363.1,+CS,0)),U,1)
"RTN","IBCRED",65,0)
 S IBHDR="Charges (to be deleted) in "_SUB2_" set"
"RTN","IBCRED",66,0)
 S IBHDR2=" inactive before",IBDT=INDT I IBDT=9999999 S IBHDR2=" (ALL CHARGES IN SET)",IBDT=""
"RTN","IBCRED",67,0)
 D TMPHDR^IBCROI1("IBCRED",SUB2,+CS,IBHDR_IBHDR2,"2^1",IBDT)
"RTN","IBCRED",68,0)
 Q SUB2
"RTN","IBCRED",69,0)
 ;
"RTN","IBCRED",70,0)
 ;
"RTN","IBCRED",71,0)
DEV ; get device for printed report
"RTN","IBCRED",72,0)
 S IBQUIT=0 S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBCRED",73,0)
 I $D(IO("Q")) S ZTRTN="RPT^IBCRED",ZTDESC="Delete Charges Report",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") S IBQUIT=1
"RTN","IBCRED",74,0)
 Q
"RTN","IBCRED",75,0)
 ;
"RTN","IBCRED",76,0)
RPT ; print report - entry point for tasked jobs
"RTN","IBCRED",77,0)
 N IBSCRPT,IBCNT S IBSCRPT="IBCRED" K ^TMP($J,"IBCRED")
"RTN","IBCRED",78,0)
 S IBCNT=$$DELETE(IBCS,IBDT,1)
"RTN","IBCRED",79,0)
 I $D(^TMP($J,"IBCRED")) S $P(^TMP($J,"IBCRED"),U,4)=IBCNT_" Charges to be deleted"
"RTN","IBCRED",80,0)
 G RPT^IBCROI
"RTN","IBCRED",81,0)
 Q
"RTN","IBCRED",82,0)
 ;
"RTN","IBCRED",83,0)
CSDELETE(IBCS) ; delete a Charge Set, including all pointers to it, also delete region if not assigned to another set
"RTN","IBCRED",84,0)
 N IBFN,IB11,IBRG,IBER,DA,DIC,DIE,DIK,X,Y S IBER="0^Charge Set not deleted"
"RTN","IBCRED",85,0)
 I '$D(^IBE(363.1,+$G(IBCS),0)) G CSDELQ
"RTN","IBCRED",86,0)
 I $O(^IBA(363.2,"AIVDTS"_+IBCS,"")) S IBER="0^Charge Set has associated Charge Items, can not delete." G CSDELQ
"RTN","IBCRED",87,0)
 I $P($G(^IBE(350.9,1,9)),U,12)=+IBCS S IBER="0^Charge Set pointed to by AWP CHARGE SET Site Parameter, can not delete." G CSDELQ
"RTN","IBCRED",88,0)
 ;
"RTN","IBCRED",89,0)
 ; remove from Rate Schedule
"RTN","IBCRED",90,0)
 S IBFN=0 F  S IBFN=$O(^IBE(363,"C",+IBCS,IBFN)) Q:'IBFN  D
"RTN","IBCRED",91,0)
 . S IB11="" F  S IB11=$O(^IBE(363,"C",+IBCS,IBFN,IB11)) Q:'IB11  D
"RTN","IBCRED",92,0)
 .. I +$G(^IBE(363,+IBFN,11,+IB11,0))=+IBCS S DA(1)=+IBFN,DA=+IB11,DIK="^IBE(363,"_DA(1)_",11," D ^DIK K DIK
"RTN","IBCRED",93,0)
 ;
"RTN","IBCRED",94,0)
 ; remove from Special Groups
"RTN","IBCRED",95,0)
 S IBFN=0 F  S IBFN=$O(^IBE(363.32,IBFN)) Q:'IBFN  D
"RTN","IBCRED",96,0)
 . S IB11=0 F  S IB11=$O(^IBE(363.32,IBFN,11,IB11)) Q:'IB11  D
"RTN","IBCRED",97,0)
 .. I +$P($G(^IBE(363.32,IBFN,11,IB11,0)),U,2)=+IBCS S DA(1)=+IBFN,DA=+IB11,DIK="^IBE(363.32,"_DA(1)_",11," D ^DIK K DIK
"RTN","IBCRED",98,0)
 ;
"RTN","IBCRED",99,0)
 ; delete region if not assigned to another Charge Set
"RTN","IBCRED",100,0)
 S IBRG=$P($G(^IBE(363.1,+IBCS,0)),U,7)
"RTN","IBCRED",101,0)
 I +IBRG S IBFN=0 F  S IBFN=$O(^IBE(363.1,IBFN)) Q:'IBFN  D
"RTN","IBCRED",102,0)
 . I +IBFN'=+IBCS,$P($G(^IBE(363.1,+IBFN,0)),U,7)=IBRG S IBRG=0
"RTN","IBCRED",103,0)
 I +IBRG S DA=+IBRG,DIK="^IBE(363.31," D ^DIK K DA,DIK
"RTN","IBCRED",104,0)
 ;
"RTN","IBCRED",105,0)
 ; delete Charge Set
"RTN","IBCRED",106,0)
 S DA=+IBCS,DIK="^IBE(363.1," D ^DIK K DA,DIK
"RTN","IBCRED",107,0)
 S IBER="1^Charge Set Deleted"_$S(+IBRG:", Region Deleted",1:"")_"."
"RTN","IBCRED",108,0)
CSDELQ Q IBER
"RTN","IBCRED",109,0)
 ;
"RTN","IBCRED",110,0)
CSEMPTY(BR) ; delete Charge Sets that have no associated Charges (except VA Cost)
"RTN","IBCRED",111,0)
 ; Input: BR may be passed to limit the check for empty Charge Sets to specific Billing Rates
"RTN","IBCRED",112,0)
 ;        only CS's of the passed Billing Rate will be checked and deleted if it has no charges
"RTN","IBCRED",113,0)
 ;           - pointer to the Billing Rate (363.3) to check
"RTN","IBCRED",114,0)
 ;           - first two characters of the Billing Rate Name (363.3,.01) to check
"RTN","IBCRED",115,0)
 ;           - if no BR passed then all Charge Sets/Billing Rates are checked
"RTN","IBCRED",116,0)
 ; Returns: count of Charge Sets deleted
"RTN","IBCRED",117,0)
 N IBCS,IBCS0,IBBR,IBBR0,IBX,IBCNT,X,Y S IBCNT=0
"RTN","IBCRED",118,0)
 S IBCS=0 F  S IBCS=$O(^IBE(363.1,IBCS)) Q:'IBCS  D
"RTN","IBCRED",119,0)
 . S IBCS0=$G(^IBE(363.1,IBCS,0)),IBBR=+$P(IBCS0,U,2),IBBR0=$G(^IBE(363.3,+IBBR,0))
"RTN","IBCRED",120,0)
 . I '$P(IBBR0,U,4)!($P(IBBR0,U,5)=2) Q  ; VA Cost
"RTN","IBCRED",121,0)
 . I +$G(BR),IBBR'=BR Q  ; selected Billing Rates
"RTN","IBCRED",122,0)
 . I '$G(BR),$G(BR)'="",$E(IBBR0,1,2)'=BR Q  ; selected Billing Rate names/types
"RTN","IBCRED",123,0)
 . I '$O(^IBA(363.2,"AIVDTS"_+IBCS,"")) S IBX=$$CSDELETE(IBCS) I +IBX S IBCNT=IBCNT+1
"RTN","IBCRED",124,0)
 Q IBCNT
"RTN","IBCRHBC")
0^2^B35525545
"RTN","IBCRHBC",1,0)
IBCRHBC ;ALB/ARH - RATES: UPLOAD HOST FILES (CMAC DRIVER) ; 22-MAY-1996
"RTN","IBCRHBC",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,124,307**;21-MAR-94
"RTN","IBCRHBC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBC",4,0)
 ;
"RTN","IBCRHBC",5,0)
 ; USER SELECT FILE, DETERMINE FILE TYPE/FORMAT, CALL LOAD ROUTINE
"RTN","IBCRHBC",6,0)
 ;
"RTN","IBCRHBC",7,0)
CMAC ; OPTION: upload a CMAC file from a VMS file into ^XTMP
"RTN","IBCRHBC",8,0)
 N IBPATH,IBFILE,IBNAME,IBMODP,IBMODT,IBFLINE,IBFORM,IBDONE,IBGLBEFF S IBDONE=""
"RTN","IBCRHBC",9,0)
 ;
"RTN","IBCRHBC",10,0)
 S IBNAME="IBCR UPLOAD " I '$$CONT(IBNAME) Q
"RTN","IBCRHBC",11,0)
 ;
"RTN","IBCRHBC",12,0)
 W !!,"Upload CMAC Host File:  'CMACxxx.TXT' or 'yyyyCMACxxx.TXT'  w/xxx = locality",!
"RTN","IBCRHBC",13,0)
 ;
"RTN","IBCRHBC",14,0)
 S IBPATH=$$PATH I IBPATH<0 Q
"RTN","IBCRHBC",15,0)
 I '$$FNDHOST(IBPATH) Q
"RTN","IBCRHBC",16,0)
 ;
"RTN","IBCRHBC",17,0)
 S IBFILE=$$FILE Q:IBFILE=""
"RTN","IBCRHBC",18,0)
 ;
"RTN","IBCRHBC",19,0)
 S IBMODP=$$MOD("","Professional") I IBMODP<0 Q
"RTN","IBCRHBC",20,0)
 S IBMODT=$$MOD("","Technical") I IBMODT<0 Q
"RTN","IBCRHBC",21,0)
 ;
"RTN","IBCRHBC",22,0)
 D OPEN^%ZISH("CMAC UPLOAD",IBPATH,IBFILE,"R") I POP W !!,"**** Unable to open ",IBPATH,IBFILE,! Q
"RTN","IBCRHBC",23,0)
 ;
"RTN","IBCRHBC",24,0)
 U IO R IBFLINE:5
"RTN","IBCRHBC",25,0)
 ;
"RTN","IBCRHBC",26,0)
 D CLOSE^%ZISH("CMAC UPLOAD")
"RTN","IBCRHBC",27,0)
 ;
"RTN","IBCRHBC",28,0)
 S IBFORM=$$CHKF(IBFLINE,IBFILE) Q:'IBFORM
"RTN","IBCRHBC",29,0)
 ;
"RTN","IBCRHBC",30,0)
 W !!,?14,"File: ",IBFILE,?40,"Effective: ",$$DATE(IBFORM,IBFLINE)
"RTN","IBCRHBC",31,0)
 I '$$CONT1 Q
"RTN","IBCRHBC",32,0)
 ;
"RTN","IBCRHBC",33,0)
 I IBFORM=1 S IBDONE=$$CMAC^IBCRHBC1(IBPATH,IBFILE,IBNAME,IBMODP,IBMODT)
"RTN","IBCRHBC",34,0)
 I IBFORM=2 S IBDONE=$$CMAC^IBCRHBC2(IBPATH,IBFILE,IBNAME,IBMODP,IBMODT)
"RTN","IBCRHBC",35,0)
 I IBFORM=3 S IBDONE=$$CMAC^IBCRHBC3(IBPATH,IBFILE,IBNAME,IBMODP,IBMODT)
"RTN","IBCRHBC",36,0)
 ;
"RTN","IBCRHBC",37,0)
 W !!,"Done. ",$P(IBDONE,U,1)," lines processed."
"RTN","IBCRHBC",38,0)
 W !,"The following files were created, they will be purged in 2 days:" D DISP1^IBCRHU1($P(IBDONE,U,2))
"RTN","IBCRHBC",39,0)
 Q
"RTN","IBCRHBC",40,0)
 ;
"RTN","IBCRHBC",41,0)
CHKF(LINE,FILE) ; check that first line of file fits one of the three formats, if it does return the format type, otherwise 0
"RTN","IBCRHBC",42,0)
 N IBX,IBY S LINE=$G(LINE),FILE=$G(FILE),IBX=0
"RTN","IBCRHBC",43,0)
 S IBY="**** Error reading file: not expected format (85, 91 or 98 numeric characters):"
"RTN","IBCRHBC",44,0)
 ;
"RTN","IBCRHBC",45,0)
 I (FILE'?1"CMAC"3N1".TXT"),(FILE'?4N1"CMAC"3N1".TXT") W !!,IBY,!!,"Bad file name, can not continue!" G CHKFQ
"RTN","IBCRHBC",46,0)
 I LINE="" W !!,IBY,!!,"First line of file is null, can not continue!" G CHKFQ
"RTN","IBCRHBC",47,0)
 ; 
"RTN","IBCRHBC",48,0)
 I $$LNFORM^IBCRHBC1(LINE) S IBX=1 G CHKFQ
"RTN","IBCRHBC",49,0)
 I $$LNFORM^IBCRHBC2(LINE) S IBX=2 G CHKFQ
"RTN","IBCRHBC",50,0)
 I $$LNFORM^IBCRHBC3(LINE) S IBX=3 G CHKFQ
"RTN","IBCRHBC",51,0)
 ;
"RTN","IBCRHBC",52,0)
 W !!,IBY,!,"Line Length=",$L(LINE)," characters",!!,"LINE='",LINE,"'",!!,"Can not Continue!"
"RTN","IBCRHBC",53,0)
 ;
"RTN","IBCRHBC",54,0)
CHKFQ Q IBX
"RTN","IBCRHBC",55,0)
 ;
"RTN","IBCRHBC",56,0)
CONT(XREF) ; check for existing files stored in XREF with same host file name
"RTN","IBCRHBC",57,0)
 ; returns true if user wants to continue and these files are deleted
"RTN","IBCRHBC",58,0)
 ;
"RTN","IBCRHBC",59,0)
 N ARR,IBX,IBY,IBZ,DIR,DIRUT,DUOUT,X,Y S XREF=$G(XREF),ARR=0,IBZ=1 W !
"RTN","IBCRHBC",60,0)
 ;
"RTN","IBCRHBC",61,0)
 D DISP1^IBCRHU1(XREF,.ARR)
"RTN","IBCRHBC",62,0)
 ;
"RTN","IBCRHBC",63,0)
 I +ARR S IBZ=0 D  W !
"RTN","IBCRHBC",64,0)
 . W !!,"The above files already exist in XTMP." S DIR("?")="Enter either 'Y' or 'N'.  These files use the same names as the new upload would use, and therefore must be deleted before the upload can proceed."
"RTN","IBCRHBC",65,0)
 . S DIR("A")="Delete the above files and continue with upload",DIR(0)="Y" D ^DIR K DIR
"RTN","IBCRHBC",66,0)
 . ;
"RTN","IBCRHBC",67,0)
 . I Y=1 S IBZ=1,IBX="" F  S IBX=$O(ARR(IBX)) Q:IBX=""  K ^XTMP(IBX) W "."
"RTN","IBCRHBC",68,0)
 ;
"RTN","IBCRHBC",69,0)
 Q IBZ
"RTN","IBCRHBC",70,0)
 ;
"RTN","IBCRHBC",71,0)
MOD(DEFAULT,NAME) ; get the modifiers to use with the professional and technical component charges
"RTN","IBCRHBC",72,0)
 ;
"RTN","IBCRHBC",73,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,X,Y S IBX=""
"RTN","IBCRHBC",74,0)
 S DIR("?",1)="Some procedures have charges broken into professional and technical components."
"RTN","IBCRHBC",75,0)
 S DIR("?",2)="To bill these components a CPT Modifier must be added with the CPT."
"RTN","IBCRHBC",76,0)
 S DIR("?",3)="If no modifier is entered the "_NAME_" Component charges will not be uploaded."
"RTN","IBCRHBC",77,0)
 S DIR("?")="Enter the CPT Modifier that should be used for every "_NAME_" component charge.",DIR("?",4)=""
"RTN","IBCRHBC",78,0)
 ;
"RTN","IBCRHBC",79,0)
 S DIR("A")=NAME_" Component Modifier",DIR("B")=$G(DEFAULT)
"RTN","IBCRHBC",80,0)
 S DIR(0)="PO^DIC(81.3," D ^DIR K DIR I Y>0 S IBX=+Y
"RTN","IBCRHBC",81,0)
 I $D(DUOUT)!$D(DTOUT) S IBX=-1
"RTN","IBCRHBC",82,0)
 I 'IBX W !!,?7,NAME," Component charges will not be uploaded.",!
"RTN","IBCRHBC",83,0)
 ;
"RTN","IBCRHBC",84,0)
 Q IBX
"RTN","IBCRHBC",85,0)
 ;
"RTN","IBCRHBC",86,0)
CONT1() ; get final OK to start upload
"RTN","IBCRHBC",87,0)
 N IBZ,DIR,DIRUT,DUOUT,X,Y S IBZ=0 W !
"RTN","IBCRHBC",88,0)
 S DIR("A")="Proceed with upload now",DIR(0)="Y" D ^DIR K DIR I Y=1 S IBZ=1
"RTN","IBCRHBC",89,0)
 Q IBZ
"RTN","IBCRHBC",90,0)
 ;
"RTN","IBCRHBC",91,0)
PATH() ; return directory or -1
"RTN","IBCRHBC",92,0)
 N IBPATH,DIR,DIRUT,DUOUT,X,Y S IBPATH=""
"RTN","IBCRHBC",93,0)
 S DIR("?",1)="Enter the full path specification where the host files may be found"
"RTN","IBCRHBC",94,0)
 S DIR("?")="or press return for the default directory "_$$PWD^%ZISH
"RTN","IBCRHBC",95,0)
 S DIR(0)="FO^3:60",DIR("A")="Enter the file path",DIR("B")=$$PWD^%ZISH D ^DIR K DIR
"RTN","IBCRHBC",96,0)
 S IBPATH=$S($D(DUOUT)!$D(DTOUT):-1,1:Y)
"RTN","IBCRHBC",97,0)
 Q IBPATH
"RTN","IBCRHBC",98,0)
 ;
"RTN","IBCRHBC",99,0)
FNDHOST(IBPATH) ; find and display any host files available for upload: 1 if some, 0 none found
"RTN","IBCRHBC",100,0)
 N IBX,IBY,IBZ,IBI,IBCYR,X,Y S IBPATH=$G(IBPATH),IBZ=0
"RTN","IBCRHBC",101,0)
 ;
"RTN","IBCRHBC",102,0)
 S IBX("CMAC*")="",IBCYR=$S($E(DT)=2:19,1:20)_$E(DT,2,3) F IBI=IBCYR:-1:(IBCYR-10) S IBX(IBI_"CMAC*")=""
"RTN","IBCRHBC",103,0)
 ;
"RTN","IBCRHBC",104,0)
 W !,"CMAC Host files available for upload in: ",IBPATH,!!
"RTN","IBCRHBC",105,0)
 S IBZ=$$LIST^%ZISH(IBPATH,"IBX","IBY")
"RTN","IBCRHBC",106,0)
 I 'IBZ W "**** No CMAC files found ",IBPATH,"CMACxxx.TXT or yyyyCMACxxx.TXT, can not continue.",!
"RTN","IBCRHBC",107,0)
 I +IBZ S IBX="" F  S IBX=$O(IBY(IBX)) Q:IBX=""  W ?30,$P(IBX,";",1),!
"RTN","IBCRHBC",108,0)
 Q IBZ
"RTN","IBCRHBC",109,0)
 ;
"RTN","IBCRHBC",110,0)
FILE() ; get name of file to be loaded, returns null or file name in 'CMACxxx.TXT' or 'yyyyCMACxxx.TXT' format
"RTN","IBCRHBC",111,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y,IBX,IBY S (IBY,IBX)=""
"RTN","IBCRHBC",112,0)
 S DIR("?")="Enter a CMAC Host File Name of format: 'CMACxxx.TXT' or 'yyyyCMACxxx.TXT'  w/xxx = locality and w/yyyy = year charges effective"
"RTN","IBCRHBC",113,0)
 S DIR(0)="FO^3:60",DIR("A")="Enter a Host File Name" D ^DIR K DIR I '$D(DIRUT) S IBY=Y
"RTN","IBCRHBC",114,0)
 ;
"RTN","IBCRHBC",115,0)
 I IBY'="",($E(IBY,1,4)="CMAC"),($E(IBY,5,7)?3N),($E(IBY,8,999)=".TXT") S IBX=IBY
"RTN","IBCRHBC",116,0)
 I IBY'="",($E(IBY,1,4)?4N),($E(IBY,5,8)="CMAC"),($E(IBY,9,11)?3N),($E(IBY,12,999)=".TXT") S IBX=IBY
"RTN","IBCRHBC",117,0)
 ;
"RTN","IBCRHBC",118,0)
 I IBY'="",IBX="" W !!,"**** File not a CMAC file: must be 'CMACxxx.TXT' or 'yyyyCMACxxx.TXT'.",!
"RTN","IBCRHBC",119,0)
 ;
"RTN","IBCRHBC",120,0)
 Q IBX
"RTN","IBCRHBC",121,0)
 ;
"RTN","IBCRHBC",122,0)
DATE(FORM,LINE) ; return file formated date in FM format, returns null or file date in FM format
"RTN","IBCRHBC",123,0)
 N IBX S LINE=$G(LINE),FORM=$G(FORM),(IBGLBEFF,IBX)=""
"RTN","IBCRHBC",124,0)
 I FORM=1 S IBX=$$LNDT^IBCRHBC1(LINE)
"RTN","IBCRHBC",125,0)
 I FORM=2 S IBX=$$LNDT^IBCRHBC2(LINE)
"RTN","IBCRHBC",126,0)
 I FORM=3 S IBX=$$LNDT^IBCRHBC3(LINE)
"RTN","IBCRHBC",127,0)
 I IBX'="" S IBGLBEFF=IBX,IBX=$$FMTE^XLFDT(IBX)
"RTN","IBCRHBC",128,0)
 Q IBX
"RTN","IBCRHBC3")
0^3^B24573051
"RTN","IBCRHBC3",1,0)
IBCRHBC3 ;ALB/ARH - RATES: UPLOAD HOST FILES (CMAC 2005+) ; 10-MAY-2005
"RTN","IBCRHBC3",2,0)
 ;;2.0;INTEGRATED BILLING;**307**;21-MAR-94
"RTN","IBCRHBC3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBC3",4,0)
 ;
"RTN","IBCRHBC3",5,0)
 ; ROUTINE SPECIFIC FOR FORMAT OF YEAR 2005+ CMAC FILES
"RTN","IBCRHBC3",6,0)
 ;
"RTN","IBCRHBC3",7,0)
CMAC(IBPATH,IBFILE,IBNAME,IBMODP,IBMODT) ; upload CMAC file from a VMS file into ^XTMP
"RTN","IBCRHBC3",8,0)
 N X,Y,IBI,IBXRF,IBDONE,IBXRF1,IBXRF2,IBFLINE,IBINACT,IBMOD,IBCHG
"RTN","IBCRHBC3",9,0)
 N IBLOC,IBCPT,IBNFP,IBFP,IBNFNP,IBFNP,IBEFDT,IBTRDT,IBPPC,IBPTC,IBNPPC,IBNPTC
"RTN","IBCRHBC3",10,0)
 ;
"RTN","IBCRHBC3",11,0)
 D SETUP(IBFILE,IBNAME)
"RTN","IBCRHBC3",12,0)
 ;
"RTN","IBCRHBC3",13,0)
 S IBXRF=IBNAME_IBFILE,IBLOC="",IBDONE=""
"RTN","IBCRHBC3",14,0)
 ;
"RTN","IBCRHBC3",15,0)
 D OPEN^%ZISH("CMAC UPLOAD",IBPATH,IBFILE,"R") I POP W !!,"**** Unable to open ",IBPATH,IBFILE,! G CMACQ
"RTN","IBCRHBC3",16,0)
 ;
"RTN","IBCRHBC3",17,0)
 U IO(0) W !!,"Loading ",IBFILE," into ^XTMP "
"RTN","IBCRHBC3",18,0)
 ;
"RTN","IBCRHBC3",19,0)
 S IBI=0 F  S IBI=IBI+1 U IO R IBFLINE:5 Q:$$ENDF  D PARSE,STORE I '(IBI#100) U IO(0) W "."
"RTN","IBCRHBC3",20,0)
 ;
"RTN","IBCRHBC3",21,0)
 D CLOSE^%ZISH("CMAC UPLOAD")
"RTN","IBCRHBC3",22,0)
 ;
"RTN","IBCRHBC3",23,0)
 S IBDONE=(IBI-1)_U_IBXRF
"RTN","IBCRHBC3",24,0)
 ;
"RTN","IBCRHBC3",25,0)
CMACQ Q IBDONE
"RTN","IBCRHBC3",26,0)
 ;
"RTN","IBCRHBC3",27,0)
ENDF() N IBX S IBX=1 I $T,IBFLINE'="" S IBX=0
"RTN","IBCRHBC3",28,0)
 I $$STATUS^%ZISH S IBX=1
"RTN","IBCRHBC3",29,0)
 I 'IBX,'$$LNFORM(IBFLINE) D
"RTN","IBCRHBC3",30,0)
 . U IO(0)
"RTN","IBCRHBC3",31,0)
 . W !!,"**** Error while reading file: line not expected format (98 numeric characters):"
"RTN","IBCRHBC3",32,0)
 . W !!,"Line Length=",$L(IBFLINE)," characters" W:IBFLINE="" ?40,"Line read is null"
"RTN","IBCRHBC3",33,0)
 . W !,"LINE='",IBFLINE,"'",!!,"Upload Aborted!"
"RTN","IBCRHBC3",34,0)
 . S IBX=1 H 7 U IO
"RTN","IBCRHBC3",35,0)
 I IBI=1,IBFLINE="" U IO(0) W !!,"First line of file has no data, can not continue!" S IBX=1 H 7 U IO
"RTN","IBCRHBC3",36,0)
 Q IBX
"RTN","IBCRHBC3",37,0)
 ;
"RTN","IBCRHBC3",38,0)
LNFORM(LINE) ; check an individual line of the file for proper format (length=98 characters)
"RTN","IBCRHBC3",39,0)
 N IBX S IBX=0,LINE=$G(LINE) I (LINE?98N)!(LINE?3N5AN90N) S IBX=1
"RTN","IBCRHBC3",40,0)
 Q IBX
"RTN","IBCRHBC3",41,0)
 ;
"RTN","IBCRHBC3",42,0)
PARSE ; process a single line from a CMAC file: parse out into individual fields and store the line in XTMP
"RTN","IBCRHBC3",43,0)
 ;
"RTN","IBCRHBC3",44,0)
 S IBLOC=$E(IBFLINE,1,3) ; locality
"RTN","IBCRHBC3",45,0)
 S IBCPT=$E(IBFLINE,4,8) ; CPT procedure
"RTN","IBCRHBC3",46,0)
 S IBNFP=$E(IBFLINE,9,16) ;   category 2 Non-Facility Physician charge
"RTN","IBCRHBC3",47,0)
 S IBFP=$E(IBFLINE,17,24) ;   category 1 Facility Physician charge
"RTN","IBCRHBC3",48,0)
 S IBNFNP=$E(IBFLINE,25,32) ; category 4 Non-Facility Non-Physician charge
"RTN","IBCRHBC3",49,0)
 S IBFNP=$E(IBFLINE,33,40) ;  category 3 Facility Non-Physician charge
"RTN","IBCRHBC3",50,0)
 S IBEFDT=$E(IBFLINE,41,48) ; effective date
"RTN","IBCRHBC3",51,0)
 S IBTRDT=$E(IBFLINE,57,64) ; termination date
"RTN","IBCRHBC3",52,0)
 S IBPPC=$E(IBFLINE,65,72) ;  Physician professional component
"RTN","IBCRHBC3",53,0)
 S IBPTC=$E(IBFLINE,73,80) ;  Physician technical component
"RTN","IBCRHBC3",54,0)
 S IBNPPC=$E(IBFLINE,81,88) ; Non-Physician professional component
"RTN","IBCRHBC3",55,0)
 S IBNPTC=$E(IBFLINE,89,96) ; Non-Physician technical component
"RTN","IBCRHBC3",56,0)
 Q
"RTN","IBCRHBC3",57,0)
 ;
"RTN","IBCRHBC3",58,0)
STORE ;
"RTN","IBCRHBC3",59,0)
 S IBXRF1=IBXRF_"  "_IBLOC
"RTN","IBCRHBC3",60,0)
 ;
"RTN","IBCRHBC3",61,0)
 S IBMOD="",IBEFDT=$$DATE(IBEFDT),IBINACT="" I IBTRDT'=99999999,+IBTRDT S IBINACT=$$DATE(IBTRDT)
"RTN","IBCRHBC3",62,0)
 ;
"RTN","IBCRHBC3",63,0)
 I +IBFP S IBXRF2="CAT 1 FAC/PHYS",IBCHG=$E(IBFP,1,6)_"."_$E(IBFP,7,8) D SET
"RTN","IBCRHBC3",64,0)
 I +IBFNP S IBXRF2="CAT 3 FAC/NONPHYS",IBCHG=$E(IBFNP,1,6)_"."_$E(IBFNP,7,8) D SET
"RTN","IBCRHBC3",65,0)
 ;
"RTN","IBCRHBC3",66,0)
 I +IBMODP,+IBPPC S IBXRF2="PHYS PROF",IBCHG=$E(IBPPC,1,6)_"."_$E(IBPPC,7,8),IBMOD=IBMODP D SET
"RTN","IBCRHBC3",67,0)
 I +IBMODT,+IBPTC S IBXRF2="PHYS TECH",IBCHG=$E(IBPTC,1,6)_"."_$E(IBPTC,7,8),IBMOD=IBMODT D SET
"RTN","IBCRHBC3",68,0)
 ;
"RTN","IBCRHBC3",69,0)
 I +IBMODP,+IBNPPC S IBXRF2="NONPHYS PROF",IBCHG=$E(IBNPPC,1,6)_"."_$E(IBNPPC,7,8),IBMOD=IBMODP D SET
"RTN","IBCRHBC3",70,0)
 I +IBMODT,+IBNPTC S IBXRF2="NONPHYS TECH",IBCHG=$E(IBNPTC,1,6)_"."_$E(IBNPTC,7,8),IBMOD=IBMODT D SET
"RTN","IBCRHBC3",71,0)
 ;
"RTN","IBCRHBC3",72,0)
 Q
"RTN","IBCRHBC3",73,0)
 ;
"RTN","IBCRHBC3",74,0)
SET ;
"RTN","IBCRHBC3",75,0)
 N IBX S IBX=$G(^XTMP(IBXRF1,0)) I IBX="" D SETHDR
"RTN","IBCRHBC3",76,0)
 S $P(^XTMP(IBXRF1,0),U,4)=+$P(IBX,U,4)+1
"RTN","IBCRHBC3",77,0)
 S $P(^XTMP(IBXRF1,IBXRF2),U,1)=+$G(^XTMP(IBXRF1,IBXRF2))+1
"RTN","IBCRHBC3",78,0)
 S ^XTMP(IBXRF1,IBXRF2,IBI)=IBCPT_U_IBEFDT_U_IBINACT_U_+IBCHG_U_IBMOD
"RTN","IBCRHBC3",79,0)
 Q
"RTN","IBCRHBC3",80,0)
 ;
"RTN","IBCRHBC3",81,0)
SETHDR ;
"RTN","IBCRHBC3",82,0)
 N IBX S IBX="IB upload of Host file "_IBFILE_", on "_$$HTE^XLFDT($H,2)_" by "_$P($G(^VA(200,+$G(DUZ),0)),U,1)
"RTN","IBCRHBC3",83,0)
 S ^XTMP(IBXRF1,0)=$$FMADD^XLFDT(DT,2)_U_DT_U_IBX
"RTN","IBCRHBC3",84,0)
 ;
"RTN","IBCRHBC3",85,0)
 S ^XTMP(IBXRF1,IBXRF2)=0_U_2_U_$G(IBCS)
"RTN","IBCRHBC3",86,0)
 Q
"RTN","IBCRHBC3",87,0)
 ;
"RTN","IBCRHBC3",88,0)
 ;
"RTN","IBCRHBC3",89,0)
DATE(DATE) ; return yymmdd in FM format
"RTN","IBCRHBC3",90,0)
 N IBX S IBX="" I $G(DATE)?8N S IBX=$S($E(DATE,1,2)<20:"2",1:"3")_$E(DATE,3,8)
"RTN","IBCRHBC3",91,0)
 Q IBX
"RTN","IBCRHBC3",92,0)
 ;
"RTN","IBCRHBC3",93,0)
 ;
"RTN","IBCRHBC3",94,0)
LNDT(LINE) ; return the date of an individual line, in FM format
"RTN","IBCRHBC3",95,0)
 N IBX S IBX=$E($G(LINE),41,48) S IBX=$$DATE(IBX)
"RTN","IBCRHBC3",96,0)
 Q IBX
"RTN","IBCRHBC3",97,0)
 ;
"RTN","IBCRHBC3",98,0)
 ;
"RTN","IBCRHBC3",99,0)
 ;
"RTN","IBCRHBC3",100,0)
SETUP(IBFILE,IBNAME) ; set up Charge Sets, Billing Regions, Rate Schedule links for new charges
"RTN","IBCRHBC3",101,0)
 ; if new region entered, asks user for divisions
"RTN","IBCRHBC3",102,0)
 N IBLOC,IBXRF1,IBXRF2,IBEVENT,IBCT,IBBS,IBRV,IBRG,IBCS
"RTN","IBCRHBC3",103,0)
 ;
"RTN","IBCRHBC3",104,0)
 S IBLOC=$P($P($G(IBFILE),"CMAC",2),".",1),IBXRF1=$G(IBNAME)_IBFILE_"  "_IBLOC
"RTN","IBCRHBC3",105,0)
 S IBEVENT="PROCEDURE",IBCT="PROF",IBBS="OUTPATIENT VISIT",IBRV=510
"RTN","IBCRHBC3",106,0)
 ;
"RTN","IBCRHBC3",107,0)
 ;
"RTN","IBCRHBC3",108,0)
 ; Find/Create Billing Region
"RTN","IBCRHBC3",109,0)
 S IBRG=$$RG^IBCRHU2("CMAC "_IBLOC,,IBLOC)
"RTN","IBCRHBC3",110,0)
 ;
"RTN","IBCRHBC3",111,0)
 ;
"RTN","IBCRHBC3",112,0)
 ; Facility Physician Charges
"RTN","IBCRHBC3",113,0)
 S IBCS=$$CS^IBCRHU2("CMAC "_IBLOC_" FAC/PHYS","CMAC",IBEVENT,$P(IBRG,U,2),IBCT,IBRV,IBBS)
"RTN","IBCRHBC3",114,0)
 D RSBR^IBCRHU2(IBCS,1,$G(IBGLBEFF))
"RTN","IBCRHBC3",115,0)
 F IBXRF2="CAT 1 FAC/PHYS","PHYS PROF","PHYS TECH" D SETHDR
"RTN","IBCRHBC3",116,0)
 ;
"RTN","IBCRHBC3",117,0)
 ;
"RTN","IBCRHBC3",118,0)
 ; Facility Non-Physician Charges
"RTN","IBCRHBC3",119,0)
 S IBCS=$$CS^IBCRHU2("CMAC "_IBLOC_" FAC/NONPHYS","CMAC",IBEVENT,$P(IBRG,U,2),IBCT,IBRV,IBBS)
"RTN","IBCRHBC3",120,0)
 D RSBR^IBCRHU2(IBCS,0,$G(IBGLBEFF))
"RTN","IBCRHBC3",121,0)
 F IBXRF2="CAT 3 FAC/NONPHYS","NONPHYS PROF","NONPHYS TECH" D SETHDR
"RTN","IBCRHBC3",122,0)
 ;
"RTN","IBCRHBC3",123,0)
 ;
"RTN","IBCRHBC3",124,0)
 ; get divisions added to new Billing Region
"RTN","IBCRHBC3",125,0)
 I +$P(IBRG,U,3) D GETDIV^IBCRHU2(+IBRG)
"RTN","IBCRHBC3",126,0)
 Q
"RTN","IBCRHO")
0^4^B24988216
"RTN","IBCRHO",1,0)
IBCRHO ;ALB/ARH - RATES: UPLOAD CHECK & ADD TO CM REPORT ; 22-MAY-1996
"RTN","IBCRHO",2,0)
 ;;2.0;INTEGRATED BILLING;**52,138,148,307**;21-MAR-94
"RTN","IBCRHO",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHO",4,0)
 ;
"RTN","IBCRHO",5,0)
ENTRY(ADD) ; OPTION:  check validity of data in uploaded files and add to Charge Master
"RTN","IBCRHO",6,0)
 ;
"RTN","IBCRHO",7,0)
 W !!,"Check files waiting to be loaded into the Charge Master for data validity."
"RTN","IBCRHO",8,0)
 D DISP1^IBCRHU1("",.IBA1,"",1) I 'IBA1 W !,"No files in XTMP." G EXIT
"RTN","IBCRHO",9,0)
 ;
"RTN","IBCRHO",10,0)
 I +$G(ADD),'$$CONT G EXIT
"RTN","IBCRHO",11,0)
 ;
"RTN","IBCRHO",12,0)
 ;get the device
"RTN","IBCRHO",13,0)
 W !!,"Report requires 120 columns"
"RTN","IBCRHO",14,0)
 S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
"RTN","IBCRHO",15,0)
 I $D(IO("Q")) S ZTRTN="RPT^IBCRHO",ZTDESC="IBCR UPLOAD REPORT",ZTSAVE("ADD")=+$G(ADD) D ^%ZTLOAD K IO("Q") G EXIT
"RTN","IBCRHO",16,0)
 ;
"RTN","IBCRHO",17,0)
 ;
"RTN","IBCRHO",18,0)
RPT N IBX,IBQUIT S IBQUIT=0 K ^TMP($J)
"RTN","IBCRHO",19,0)
 D GETXTMP^IBCRHU1("",.IBA1,"",1)
"RTN","IBCRHO",20,0)
 S IBX="" F  S IBX=$O(IBA1(IBX)) Q:IBX=""  D SRCH^IBCRHL(IBX,+$G(ADD))  S IBQUIT=$$STOP Q:IBQUIT
"RTN","IBCRHO",21,0)
 ;
"RTN","IBCRHO",22,0)
 I 'IBQUIT,+$G(ADD) S IBX=$O(IBA1("")) I IBX'="" S IBX=$G(IBA1(IBX)) I IBX["RC v1 " D CPT2000^IBCRHBRA
"RTN","IBCRHO",23,0)
 I 'IBQUIT,+$G(ADD) S IBX=$O(IBA1("")) I IBX'="" S IBX=$G(IBA1(IBX)) I IBX["RC " S IBX=$$CSEMPTY^IBCRED("RC")
"RTN","IBCRHO",24,0)
 I 'IBQUIT,+$G(ADD) S IBX=$O(IBA1("")) I IBX'="" S IBX=$G(IBA1(IBX)) I IBX["CMAC" S IBX=$$CSEMPTY^IBCRED("CM")
"RTN","IBCRHO",25,0)
 ;
"RTN","IBCRHO",26,0)
 I 'IBQUIT D PRNT
"RTN","IBCRHO",27,0)
 ;
"RTN","IBCRHO",28,0)
EXIT ;clean up and quit
"RTN","IBCRHO",29,0)
 K ^TMP($J),IBA1 Q:$D(ZTQUEUED)  D ^%ZISC
"RTN","IBCRHO",30,0)
 Q
"RTN","IBCRHO",31,0)
 ;
"RTN","IBCRHO",32,0)
PRNT ; print report
"RTN","IBCRHO",33,0)
 N IBFILE,IBSUB,IBX,IBY,IBLN,IBCNT,IBPG,IBTIME,IBQUIT,DIR,DIRUT,X,Y S IBTIME=$H
"RTN","IBCRHO",34,0)
 U IO
"RTN","IBCRHO",35,0)
 Q:$$HDR
"RTN","IBCRHO",36,0)
 S IBFILE="" F  S IBFILE=$O(^TMP($J,IBFILE)) Q:IBFILE=""  D  Q:IBQUIT
"RTN","IBCRHO",37,0)
 . W !!,?15,IBFILE S IBCNT=IBCNT+2
"RTN","IBCRHO",38,0)
 . S IBSUB="" F  S IBSUB=$O(^TMP($J,IBFILE,IBSUB)) Q:IBSUB=""  D  S:IBCNT>(IOSL-5) IBQUIT=$$HDR Q:IBQUIT
"RTN","IBCRHO",39,0)
 .. S IBLN=$G(^TMP($J,IBFILE,IBSUB))
"RTN","IBCRHO",40,0)
 .. W !!,IBSUB,?20,$P(IBLN,U,2),! S IBCNT=IBCNT+4
"RTN","IBCRHO",41,0)
 .. I $P(IBLN,U,3)'="" W ?20,$P(IBLN,U,3),! S IBCNT=IBCNT+1
"RTN","IBCRHO",42,0)
 .. I $P(IBLN,U,4)'="" W ?20,$P(IBLN,U,4),! S IBCNT=IBCNT+1
"RTN","IBCRHO",43,0)
 .. ;
"RTN","IBCRHO",44,0)
 .. S IBX=0 F  S IBX=$O(^TMP($J,IBFILE,IBSUB,IBX)) Q:'IBX  D  S:IBCNT>(IOSL-5) IBQUIT=$$HDR Q:IBQUIT
"RTN","IBCRHO",45,0)
 ... S IBY=$P(^TMP($J,IBFILE,IBSUB,IBX),U,2)
"RTN","IBCRHO",46,0)
 ... W !,?5,IBX,?10," = ",$G(^XTMP(IBFILE,IBSUB,IBX)),?50,$E(IBY,1,69) S IBCNT=IBCNT+1
"RTN","IBCRHO",47,0)
 ... S IBY=$E(IBY,70,999) I IBY'="" W !,?70,IBY S IBCNT=IBCNT+1
"RTN","IBCRHO",48,0)
 ;
"RTN","IBCRHO",49,0)
 I 'IBQUIT,IBCNT>(IOSL-12) S IBQUIT=$$HDR
"RTN","IBCRHO",50,0)
 I 'IBQUIT D
"RTN","IBCRHO",51,0)
 . W !!,"SUBFILE/SET ERROR:",?20,"This error results when a problem is found in the definition of the subfile that has been uploaded",!,"or the Charge Set that has been assigned to it.  All processing of the subfile"
"RTN","IBCRHO",52,0)
 . W " is stopped, no part of the subfile will",!,"be loaded into the Charge Master."
"RTN","IBCRHO",53,0)
 . W !!,"LINE/DATA ERROR:",?20,"A data error in a required field has been found in a line read from the file.  The chargeable item",!,"defined by that line will be ignored, it will NOT be added to the Charge Master."
"RTN","IBCRHO",54,0)
 . W !!,"LINE/DATA WARNING:",?20,"A data error in a non-required field has been found in a line read from the file.  The chargeable",!,"item defined by that line will be ignored, it will NOT be added to the Charge Master."
"RTN","IBCRHO",55,0)
 . W !!,"Records found that are duplicates of existing charge entries or have a 0 charge are NOT added nor reported individually."
"RTN","IBCRHO",56,0)
 Q
"RTN","IBCRHO",57,0)
 ;
"RTN","IBCRHO",58,0)
PAUSE ;pause at end of screen if being displayed on a terminal
"RTN","IBCRHO",59,0)
 Q:$E(IOST,1,2)'["C-"  S DIR(0)="E" D ^DIR K DIR I $D(DUOUT)!($D(DIRUT)) S IBQUIT=1
"RTN","IBCRHO",60,0)
 Q
"RTN","IBCRHO",61,0)
 ;
"RTN","IBCRHO",62,0)
CONT() ; returns true if user wants to add the files to the Charge Master
"RTN","IBCRHO",63,0)
 N IBZ,DIR,DIRUT,DUOUT,X,Y S IBZ=0
"RTN","IBCRHO",64,0)
 S DIR("A")="Load the above files into the Charge Master",DIR(0)="Y" D ^DIR K DIR I Y=1 S IBZ=1
"RTN","IBCRHO",65,0)
 I +IBZ W !,"A summary report of the results will be printed.",!
"RTN","IBCRHO",66,0)
 Q IBZ
"RTN","IBCRHO",67,0)
 ;
"RTN","IBCRHO",68,0)
HDR() ;print the report header
"RTN","IBCRHO",69,0)
 S IBQUIT=0,IBPG=$G(IBPG)+1,IBCNT=3
"RTN","IBCRHO",70,0)
 S IBQUIT=$$STOP G:IBQUIT HDRQ I IBPG>1 D PAUSE G:IBQUIT HDRQ
"RTN","IBCRHO",71,0)
 W @IOF
"RTN","IBCRHO",72,0)
 I +$G(ADD) W !,"IB Upload Summary Report of Charge Items Loaded into the Charge Master"
"RTN","IBCRHO",73,0)
 I '$G(ADD) W !,"IB Upload Data Validity Check on Temporary files"
"RTN","IBCRHO",74,0)
 W ?75,$$HTE^XLFDT(IBTIME,2)_"  Page ",IBPG
"RTN","IBCRHO",75,0)
 W !,"---------------------------------------------------------------------------------------------------"
"RTN","IBCRHO",76,0)
HDRQ Q IBQUIT
"RTN","IBCRHO",77,0)
 ;
"RTN","IBCRHO",78,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCRHO",79,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPG) W !,"***TASK STOPPED BY USER***"
"RTN","IBCRHO",80,0)
 Q +$G(ZTSTOP)
"RTN","IBCRHU2")
0^5^B51490441
"RTN","IBCRHU2",1,0)
IBCRHU2 ;ALB/ARH - RATES: UPLOAD UTILITIES (ADD CM ELEMENTS) ; 10-OCT-1998
"RTN","IBCRHU2",2,0)
 ;;2.0;INTEGRATED BILLING;**106,138,245,175,307**;21-MAR-94
"RTN","IBCRHU2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHU2",4,0)
 ;
"RTN","IBCRHU2",5,0)
RG(NAME,DIV,ID,TY) ; add a new Billing Region for Reasonable Charges (363.31), input region name, MC division site #
"RTN","IBCRHU2",6,0)
 ; returns IFN of billing region (new or existing) ^ region name, null otherwise
"RTN","IBCRHU2",7,0)
 ; the part of the name before a dash is used to attempt a match with existing regions
"RTN","IBCRHU2",8,0)
 N IBA,IBDV,IBFN,IBNEW,IBX,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S DIV=$G(DIV),IBDV="",(IBFN,IBNEW)=0
"RTN","IBCRHU2",9,0)
 I $G(NAME)="" G RGQ
"RTN","IBCRHU2",10,0)
 I NAME[" (DIV)" S NAME=$P(NAME," (DIV)",1)_$P(NAME," (DIV)",2)
"RTN","IBCRHU2",11,0)
 I NAME[" (2)" S NAME=$P(NAME," (2)",1)_$P(NAME," (2)",2)
"RTN","IBCRHU2",12,0)
 I NAME[" (3)" S NAME=$P(NAME," (2)",1)_$P(NAME," (3)",2)
"RTN","IBCRHU2",13,0)
 ;
"RTN","IBCRHU2",14,0)
 S IBX="" F  S IBX=$O(^IBE(363.31,"B",IBX)) Q:IBX=""  I $P(IBX,"-",1)=$P(NAME,"-",1) S IBFN=$O(^IBE(363.31,"B",IBX,0)) Q
"RTN","IBCRHU2",15,0)
 I +IBFN S IBFN=IBFN_U_$E(IBX,1,30),IBNEW=0 G RGQ
"RTN","IBCRHU2",16,0)
 ;
"RTN","IBCRHU2",17,0)
 S IBDV=$$DIV(DIV) I 'IBDV D MSG("     *** Warning: No MC division "_DIV_" defined, no division added to Region")
"RTN","IBCRHU2",18,0)
 ;
"RTN","IBCRHU2",19,0)
 I $G(ID)'="" S DIC("DR")=".02////"_$E(ID,1,10)_";"
"RTN","IBCRHU2",20,0)
 I $G(TY)'="" S DIC("DR")=$G(DIC("DR"))_".03////"_$E(TY,1,10)
"RTN","IBCRHU2",21,0)
 K DD,DO S DLAYGO=363.31,DIC="^IBE(363.31,",DIC(0)="L",X=$E(NAME,1,30) D FILE^DICN K DIC,DD,DO I Y<1 K X,Y Q
"RTN","IBCRHU2",22,0)
 S IBFN=Y,IBNEW=1
"RTN","IBCRHU2",23,0)
 ;
"RTN","IBCRHU2",24,0)
 I +IBDV S DLAYGO=363.31,DA(1)=+IBFN,DIC="^IBE(363.31,"_DA(1)_",11,",DIC(0)="L",X=+IBDV,DIC("P")="363.3111P" D ^DIC K DIC,DIE,DLAYGO
"RTN","IBCRHU2",25,0)
 ;
"RTN","IBCRHU2",26,0)
RGQ I +IBNEW!($D(IBA)) S IBA(1)="  >> "_$E(NAME,1,30)_" Billing Region "_$S('$G(IBFN):"NOT ",1:"")_"added "_$S(+IBDV:"for MCD "_$P(IBDV,U,3)_" "_$P(IBDV,U,2),1:"") D MSGP
"RTN","IBCRHU2",27,0)
 Q $G(IBFN)
"RTN","IBCRHU2",28,0)
 ;
"RTN","IBCRHU2",29,0)
CS(NAME,RATE,EVENT,RG,CT,RV,BS) ; add Charge Set for Reasonable Charges (363.1), all input in external form
"RTN","IBCRHU2",30,0)
 ; returns IFN of new charge set, 0 otherwise
"RTN","IBCRHU2",31,0)
 N IBA,IBBR,IBBE,IBRG,IBRV,IBBS,IBCT,IBOK,IBFN,IBCSN,IBJ,DD,DO,DLAYGO,DINUM,DIC,DIE,DA,DR,X,Y,IBFND S IBOK=1
"RTN","IBCRHU2",32,0)
 S NAME=$G(NAME),RATE=$G(RATE),EVENT=$G(EVENT),RG=$G(RG),CT=$G(CT),RV=$G(RV),BS=$G(BS) I NAME=""!(RATE="") G CSQ
"RTN","IBCRHU2",33,0)
 ;
"RTN","IBCRHU2",34,0)
 S IBFND=+$O(^IBE(363.1,"B",$E(NAME,1,30),0)) I +IBFND S IBFN=IBFND,IBCSN=NAME G CSQ
"RTN","IBCRHU2",35,0)
 ;
"RTN","IBCRHU2",36,0)
 S IBBR=$O(^IBE(363.3,"B",RATE,0)) I 'IBBR S IBOK=0 D MSG("     *** Error: "_RATE_" Billing Rate does not exist")
"RTN","IBCRHU2",37,0)
 S IBBE=$$MCCRUTL(EVENT,14) I 'IBBE S IBOK=0 D MSG("     *** Error: "_EVENT_" Billable Event undefined")
"RTN","IBCRHU2",38,0)
 S IBRG="" I RG'="" S IBRG=$O(^IBE(363.31,"B",$E(RG,1,30),0))
"RTN","IBCRHU2",39,0)
 I 'IBRG,RG'="" S IBOK=0 D MSG("     *** Error: "_$E(RG,1,30)_" Billing Region does not exist")
"RTN","IBCRHU2",40,0)
 I '$G(IBOK) G CSQ
"RTN","IBCRHU2",41,0)
 S IBRV=$$RVCD(RV) I 'IBRV D MSG("     *** Warning: No default revenue code added for Charge Set")
"RTN","IBCRHU2",42,0)
 S IBBS=$$MCCRUTL(BS,5) I 'IBBS D MSG("     *** Warning: No default bedsection added for Charge Set")
"RTN","IBCRHU2",43,0)
 S IBCT=$S($E(CT)="I":1,$E(CT)="P":2,1:"")
"RTN","IBCRHU2",44,0)
 ;
"RTN","IBCRHU2",45,0)
 F IBJ=1:1 S IBFN=$G(^IBE(363.1,IBJ,0)) I IBFN="" S DINUM=IBJ Q
"RTN","IBCRHU2",46,0)
 ;
"RTN","IBCRHU2",47,0)
 K DD,DO S DLAYGO=363.1,DIC="^IBE(363.1,",DIC(0)="L",X=$E(NAME,1,30) D FILE^DICN K DIC K DIC,DINUM,DLAYGO,DD,DO I Y<1 K X,Y Q
"RTN","IBCRHU2",48,0)
 S IBFN=+Y,IBCSN=$P(Y,U,2)
"RTN","IBCRHU2",49,0)
 ;
"RTN","IBCRHU2",50,0)
 S DR=".02////"_IBBR_";.03////"_IBBE_";.04////"_IBCT_";.07////"_IBRG
"RTN","IBCRHU2",51,0)
 I +IBRV S DR=DR_";.05////"_IBRV
"RTN","IBCRHU2",52,0)
 I +IBBS S DR=DR_";.06////"_IBBS
"RTN","IBCRHU2",53,0)
 S DIE="^IBE(363.1,",DA=+IBFN D ^DIE K DIE,DA,DR,X,Y
"RTN","IBCRHU2",54,0)
 ;
"RTN","IBCRHU2",55,0)
 ;
"RTN","IBCRHU2",56,0)
CSQ I +$G(IBFN),$G(IBCSN)'="" D RS(IBCSN)
"RTN","IBCRHU2",57,0)
 ;
"RTN","IBCRHU2",58,0)
 S IBA(1)="  >> "_$E(NAME,1,30)_" Charge Set "_$S('$G(IBFN):"NOT ",1:"")_$S(+$G(IBFND):"used",1:"added") D MSGP
"RTN","IBCRHU2",59,0)
 Q +$G(IBFN)
"RTN","IBCRHU2",60,0)
 ;
"RTN","IBCRHU2",61,0)
USECS(CSN) ; return an existing CS for a set of RC charges, given the name to look for, or write an error message
"RTN","IBCRHU2",62,0)
 N IBCS S IBCS=0
"RTN","IBCRHU2",63,0)
 I $G(CSN)'="" S IBCS=$O(^IBE(363.1,"B",$E(CSN,1,30),0))
"RTN","IBCRHU2",64,0)
 I 'IBCS W !,"     *** Warning:  No Charge Set found for these charges"
"RTN","IBCRHU2",65,0)
 I +IBCS W !,"  >> "_$E(CSN,1,30)_" Charge Set used"
"RTN","IBCRHU2",66,0)
 Q IBCS
"RTN","IBCRHU2",67,0)
 ;
"RTN","IBCRHU2",68,0)
MCCRUTL(X,P) ; returns IFN of item in 399.1 if Name is found and piece P is true
"RTN","IBCRHU2",69,0)
 N IBX,IBY S IBY=""
"RTN","IBCRHU2",70,0)
 I $G(X)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"B",X,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(P)) S IBY=IBX
"RTN","IBCRHU2",71,0)
 Q IBY
"RTN","IBCRHU2",72,0)
 ;
"RTN","IBCRHU2",73,0)
RVCD(RVCD) ; check for valid revenue code (#399.2), input either revenue code or revenue code IFN
"RTN","IBCRHU2",74,0)
 ; returns IFN if revenue code is valid and active, null otherwise
"RTN","IBCRHU2",75,0)
 N IBX,IBY S IBY=""
"RTN","IBCRHU2",76,0)
 I +$G(RVCD) S IBX=$G(^DGCR(399.2,+RVCD,0)) I +$P(IBX,U,3) S IBY=+RVCD
"RTN","IBCRHU2",77,0)
 Q IBY
"RTN","IBCRHU2",78,0)
 ;
"RTN","IBCRHU2",79,0)
DIV(DIV) ; check for valid medical center division (#40.8), input facility/site number
"RTN","IBCRHU2",80,0)
 ; returns 'IFN ^ name ^ #' of division if it exists in Medical Center Division file (40.8), 0 otherwise
"RTN","IBCRHU2",81,0)
 N IBX,IBY S IBX=0
"RTN","IBCRHU2",82,0)
 I $G(DIV)'="" S DIV=+$O(^DG(40.8,"C",DIV,0))
"RTN","IBCRHU2",83,0)
 I +$G(DIV) S IBY=$G(^DG(40.8,+DIV,0)) I IBY'="" S IBX=DIV_U_$P(IBY,U,1,2)
"RTN","IBCRHU2",84,0)
 Q IBX
"RTN","IBCRHU2",85,0)
 ;
"RTN","IBCRHU2",86,0)
MSG(X) ; add message to end of message list, reserves IBA(1) for primary message
"RTN","IBCRHU2",87,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IBCRHU2",88,0)
 S IBA(IBX)=$G(X)
"RTN","IBCRHU2",89,0)
 Q
"RTN","IBCRHU2",90,0)
MSGP ; print error messages in IBA
"RTN","IBCRHU2",91,0)
 N IBX S IBX="" F  S IBX=$O(IBA(IBX)) Q:'IBX  W !,IBA(IBX)
"RTN","IBCRHU2",92,0)
 Q
"RTN","IBCRHU2",93,0)
 ;
"RTN","IBCRHU2",94,0)
 ;
"RTN","IBCRHU2",95,0)
RS(CSN) ; add new Reasonable Charges Charge Sets to Rate Schedules, input Charge Set Name
"RTN","IBCRHU2",96,0)
 ; finds the RS to add the CS to based on the effective/inactive dates of the RS and version being loaded
"RTN","IBCRHU2",97,0)
 ; for RC 1.x only adds physician to inpt if there was also inpatient facility charges
"RTN","IBCRHU2",98,0)
 ; Tort Feasor began using Reasonable Charges on 01/07/04
"RTN","IBCRHU2",99,0)
 N IBCSFN,IBRSN,IBRS,IBRS0,IBRSLST,IBVBEG,IBVEND,IBVERS,IBAUTO,IBFND,IBSITE,IBI,DINUM,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y
"RTN","IBCRHU2",100,0)
 ;
"RTN","IBCRHU2",101,0)
 I $G(CSN)="" Q
"RTN","IBCRHU2",102,0)
 I $E(CSN,1,2)'="RC" Q
"RTN","IBCRHU2",103,0)
 S IBCSFN=$O(^IBE(363.1,"B",$E(CSN,1,30),0)) I 'IBCSFN Q
"RTN","IBCRHU2",104,0)
 S IBAUTO=1 I $P($G(^IBE(363.3,+$P($G(^IBE(363.1,+IBCSFN,0)),U,2),0)),U,4)=9 S IBAUTO=""
"RTN","IBCRHU2",105,0)
 S IBVERS=$$VERSION^IBCRHBRV,IBVBEG=$$VERSDT^IBCRHBRV,IBVEND=$$VERSEDT^IBCRHBRV,IBFND=1
"RTN","IBCRHU2",106,0)
 S IBI=$L(CSN," "),IBSITE=$P(CSN," ",IBI)
"RTN","IBCRHU2",107,0)
 ;
"RTN","IBCRHU2",108,0)
 I IBVERS<2 D
"RTN","IBCRHU2",109,0)
 . I CSN["INPT " S IBRSLST="RI-INPT,NF-INPT,WC-INPT"
"RTN","IBCRHU2",110,0)
 . I CSN["SNF " S IBRSLST="RI-INPT,NF-INPT,WC-INPT"
"RTN","IBCRHU2",111,0)
 . I CSN["OPT " S IBRSLST="RI-OPT,NF-OPT,WC-OPT"
"RTN","IBCRHU2",112,0)
 . I CSN["PHYS" S IBRSLST="RI-OPT,NF-OPT,WC-OPT"
"RTN","IBCRHU2",113,0)
 . I CSN["PHYS",$O(^IBE(363.1,"B","RC-INPT ANC "_IBSITE,0)) S IBRSLST=IBRSLST_",RI-INPT,NF-INPT,WC-INPT"
"RTN","IBCRHU2",114,0)
 ;
"RTN","IBCRHU2",115,0)
 I IBVERS'<2 D
"RTN","IBCRHU2",116,0)
 . I CSN["INPT " S IBRSLST="RI-INPT,NF-INPT,WC-INPT,TF-INPT"
"RTN","IBCRHU2",117,0)
 . I CSN["SNF " S IBRSLST="RI-SNF,NF-SNF,WC-SNF,TF-SNF"
"RTN","IBCRHU2",118,0)
 . I CSN["OPT " S IBRSLST="RI-OPT,NF-OPT,WC-OPT,TF-OPT"
"RTN","IBCRHU2",119,0)
 . I CSN[" FS " S IBRSLST="RI-OPT,NF-OPT,WC-OPT,TF-OPT"
"RTN","IBCRHU2",120,0)
 I $G(IBRSLST)="" Q
"RTN","IBCRHU2",121,0)
 ;
"RTN","IBCRHU2",122,0)
 F IBI=1:1 S IBRSN=$P(IBRSLST,",",IBI) Q:IBRSN=""  D
"RTN","IBCRHU2",123,0)
 . S IBRS=0 F  S IBRS=$O(^IBE(363,"B",IBRSN,IBRS)) Q:'IBRS  D  Q:+IBFND
"RTN","IBCRHU2",124,0)
 .. S IBRS0=$G(^IBE(363,IBRS,0))
"RTN","IBCRHU2",125,0)
 .. I $E(IBRSN,1,3)="TF-",+$P(IBRS0,U,6),$P(IBRS0,U,6)<3040107 S IBFND=0 Q
"RTN","IBCRHU2",126,0)
 .. I +$P(IBRS0,U,6),$P(IBRS0,U,6)<IBVBEG S IBFND=0 Q
"RTN","IBCRHU2",127,0)
 .. I +IBVEND,+$P(IBRS0,U,5),$P(IBRS0,U,5)>IBVEND S IBFND=0 Q
"RTN","IBCRHU2",128,0)
 .. S IBFND=1 I $O(^IBE(363,+IBRS,11,"B",+IBCSFN,0)) Q
"RTN","IBCRHU2",129,0)
 .. I +IBAUTO S DIC("DR")=".02////"_1
"RTN","IBCRHU2",130,0)
 .. S DLAYGO=363,DA(1)=+IBRS,DIC="^IBE(363,"_DA(1)_",11,",DIC(0)="LX",X=CSN,DIC("P")="363.0011P" D ^DIC K DIC,DIE
"RTN","IBCRHU2",131,0)
 Q
"RTN","IBCRHU2",132,0)
 ;
"RTN","IBCRHU2",133,0)
 ;
"RTN","IBCRHU2",134,0)
 ;
"RTN","IBCRHU2",135,0)
GETDIV(RGFN) ; ask the user for the divisions for a Billing Region
"RTN","IBCRHU2",136,0)
 N IBX,DIC,DIE,DA,DR,X,Y,DIDEL,DLAYGO Q:'$G(RGFN)  S IBX=$G(^IBE(363.31,+RGFN,0)) Q:IBX=""
"RTN","IBCRHU2",137,0)
 W !!,"Enter the Divisions associated with these charges: ",$P(IBX,U,1)
"RTN","IBCRHU2",138,0)
 S (DLAYGO,DIDEL)=363.31,DIE="^IBE(363.31,",DA=+RGFN,DR=11 D ^DIE K DIE,DR,X,Y,DIDEL,DLAYGO
"RTN","IBCRHU2",139,0)
 Q
"RTN","IBCRHU2",140,0)
 ;
"RTN","IBCRHU2",141,0)
RSBR(CSFN,AUTO,EFFDT) ; add the charge set to any Rate Schedule that already has charge sets of this Billing Rate assigned
"RTN","IBCRHU2",142,0)
 ; CSFN - IFN of Charge Set to add, AUTO - 1 if charges should be auto added, EFFDT - effective date of charges
"RTN","IBCRHU2",143,0)
 ; will add the Charge Set to any Rate Schedule that already has a Set of same Billing Rate and is not inactive
"RTN","IBCRHU2",144,0)
 N IBCS0,IBCSN,IBBRFN,IBRS,IBRSIA,IBCSE,IBNEW,IBFND,DINUM,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S DLAYGO=363,IBNEW=0
"RTN","IBCRHU2",145,0)
 ;
"RTN","IBCRHU2",146,0)
 S CSFN=+$G(CSFN) I 'CSFN Q
"RTN","IBCRHU2",147,0)
 I $G(^IBE(363.1,CSFN,0))="" Q
"RTN","IBCRHU2",148,0)
 I +$O(^IBE(363,"C",CSFN,0)) Q  ; charge set already assigned to rate schedules
"RTN","IBCRHU2",149,0)
 ;
"RTN","IBCRHU2",150,0)
 S IBCS0=$G(^IBE(363.1,CSFN,0)),IBCSN=$P(IBCS0,U,1),IBBRFN=$P(IBCS0,U,2) Q:'IBBRFN
"RTN","IBCRHU2",151,0)
 ;
"RTN","IBCRHU2",152,0)
 S IBRS=0 F  S IBRS=$O(^IBE(363,IBRS)) Q:'IBRS  S IBFND=0 D
"RTN","IBCRHU2",153,0)
 . I $O(^IBE(363,IBRS,11,"B",CSFN,0)) Q  ; charge set already assigned to RS
"RTN","IBCRHU2",154,0)
 . I +$G(EFFDT) S IBRSIA=$P($G(^IBE(363,IBRS,0)),U,6) I +IBRSIA,EFFDT>IBRSIA Q  ; RS inactive before CS active
"RTN","IBCRHU2",155,0)
 . ;
"RTN","IBCRHU2",156,0)
 . S IBCSE=0 F  S IBCSE=$O(^IBE(363,IBRS,11,"B",IBCSE)) Q:'IBCSE  D  Q:IBFND
"RTN","IBCRHU2",157,0)
 .. I $D(^IBE(363.1,"C",IBBRFN,IBCSE)) D  S IBFND=1,IBNEW=1 ; schedule has charge sets of same billing rate
"RTN","IBCRHU2",158,0)
 ... ;
"RTN","IBCRHU2",159,0)
 ... I +$G(AUTO) S DIC("DR")=".02////"_1
"RTN","IBCRHU2",160,0)
 ... S DA(1)=+IBRS,DIC="^IBE(363,"_DA(1)_",11,",DIC(0)="LX",X=IBCSN,DIC("P")="363.0011P" D ^DIC K DIC,DIE
"RTN","IBCRHU2",161,0)
 ... W !,"     Charge Set added to Rate Schedule ",$P($G(^IBE(363,+IBRS,0)),U,1)
"RTN","IBCRHU2",162,0)
 ;
"RTN","IBCRHU2",163,0)
 I 'IBNEW W !,"     *** Warning: ",IBCSN," not added to any Rate Schedule,",!,"         set manually using Enter/Edit Charge Master option."
"RTN","IBCRHU2",164,0)
 Q
"RTN","IBYPPL")
0^6^B8216782
"RTN","IBYPPL",1,0)
IBYPPL ;ALB/ARH - IB*2*307 POST INIT: CMAC 2005, INACTIVATE OLD CHARGES ; 06-JUN-2005
"RTN","IBYPPL",2,0)
 ;;2.0;INTEGRATED BILLING;**307**;21-MAR-94
"RTN","IBYPPL",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBYPPL",4,0)
 ;
"RTN","IBYPPL",5,0)
 Q
"RTN","IBYPPL",6,0)
POST ;
"RTN","IBYPPL",7,0)
 N IBA S IBA(1)="",IBA(2)="    IB*2*307 CMAC 2005 Post-Install .....",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IBYPPL",8,0)
 ;
"RTN","IBYPPL",9,0)
 D CHGINA("CMAC",3050401) ; inactivate all CMAC charges effective before 04/01/05 in #363.2
"RTN","IBYPPL",10,0)
 ;
"RTN","IBYPPL",11,0)
 S IBA(1)="",IBA(2)="    IB*2*307 CMAC 2005 Post-Install Complete",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IBYPPL",12,0)
 Q
"RTN","IBYPPL",13,0)
 ;
"RTN","IBYPPL",14,0)
CHGINA(BRATE,NEXT) ; inactivate charges for a particular Billing Rate
"RTN","IBYPPL",15,0)
 ; For procedure charges of requested Billing Rate, inactivate all charges effective before the date passed in.
"RTN","IBYPPL",16,0)
 ; -  For each charge the inactive date used is one day before the procedures next charge effective date.
"RTN","IBYPPL",17,0)
 ; -  If no date is passed in then the last charge is left active.
"RTN","IBYPPL",18,0)
 ; -  If a date is passed in it is used as the default in case no 'next' date is found.
"RTN","IBYPPL",19,0)
 ; BRATE - Billing Rate, any charges whose billing rate contain BRATE will be inactivated
"RTN","IBYPPL",20,0)
 ; NEXT - if set, beginning effective date of charges that should not be inactivated
"RTN","IBYPPL",21,0)
 ;
"RTN","IBYPPL",22,0)
 N IBA,IBI,IBX,IBCS,IBCS0,IBBR0,IBXRF,IBITM,IBNEF,IBCI,IBCI0,IBCIEF,IBCIIA,IBNEWIA
"RTN","IBYPPL",23,0)
 N DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y,IBCNT S IBCNT=0 Q:$G(BRATE)=""  S NEXT=$G(NEXT) I NEXT'="",NEXT'?7N Q
"RTN","IBYPPL",24,0)
 ;
"RTN","IBYPPL",25,0)
 S IBA(1)="      >> Inactivating Existing "_BRATE_" Charges, Please Wait..." D MES^XPDUTL(.IBA) K IBA
"RTN","IBYPPL",26,0)
 ;
"RTN","IBYPPL",27,0)
 S IBCS=0 F  S IBCS=$O(^IBE(363.1,IBCS)) Q:'IBCS  D
"RTN","IBYPPL",28,0)
 . S IBCS0=$G(^IBE(363.1,IBCS,0)) Q:IBCS0=""
"RTN","IBYPPL",29,0)
 . S IBBR0=$G(^IBE(363.3,+$P(IBCS0,U,2),0))
"RTN","IBYPPL",30,0)
 . ;
"RTN","IBYPPL",31,0)
 . I $P(IBBR0,U,1)'[BRATE Q
"RTN","IBYPPL",32,0)
 . ;
"RTN","IBYPPL",33,0)
 . S IBXRF="AIVDTS"_IBCS
"RTN","IBYPPL",34,0)
 . S IBITM=0 F  S IBITM=$O(^IBA(363.2,IBXRF,IBITM)) Q:'IBITM  D
"RTN","IBYPPL",35,0)
 .. S IBNEF="" F  S IBNEF=$O(^IBA(363.2,IBXRF,IBITM,IBNEF)) Q:IBNEF=""  D
"RTN","IBYPPL",36,0)
 ... ;
"RTN","IBYPPL",37,0)
 ... S IBCI=0 F  S IBCI=$O(^IBA(363.2,IBXRF,IBITM,IBNEF,IBCI)) Q:'IBCI  D
"RTN","IBYPPL",38,0)
 .... S IBCI0=$G(^IBA(363.2,IBCI,0)) Q:IBCI0=""
"RTN","IBYPPL",39,0)
 .... S IBCIEF=$P(IBCI0,U,3),IBCIIA=$P(IBCI0,U,4),IBNEWIA=""
"RTN","IBYPPL",40,0)
 .... ;
"RTN","IBYPPL",41,0)
 .... I +NEXT,IBCIEF'<NEXT Q
"RTN","IBYPPL",42,0)
 .... ;
"RTN","IBYPPL",43,0)
 .... S IBNEWIA=-$O(^IBA(363.2,IBXRF,IBITM,-IBCIEF),-1) I 'IBNEWIA S IBNEWIA=NEXT
"RTN","IBYPPL",44,0)
 .... ;
"RTN","IBYPPL",45,0)
 .... I 'IBNEWIA Q
"RTN","IBYPPL",46,0)
 .... I +IBCIIA,IBCIIA'>IBNEWIA Q
"RTN","IBYPPL",47,0)
 .... ;
"RTN","IBYPPL",48,0)
 .... S IBNEWIA=$$FMADD^XLFDT(IBNEWIA,-1)
"RTN","IBYPPL",49,0)
 .... ;
"RTN","IBYPPL",50,0)
 .... S DR=".04////"_+IBNEWIA,DIE="^IBA(363.2,",DA=+IBCI D ^DIE K DIE,DIC,DA,DR,X,Y S IBCNT=IBCNT+1
"RTN","IBYPPL",51,0)
 ;
"RTN","IBYPPL",52,0)
 S IBA(1)="         Done.  "_IBCNT_" existing charges inactivated " D MES^XPDUTL(.IBA) K IBA
"RTN","IBYPPL",53,0)
 Q
"RTN","IBYPPL",54,0)
 ;
"RTN","IBYPPL",55,0)
 ;
"RTN","IBYPPL",56,0)
 ;
"RTN","IBYPPL",57,0)
MCCRUTL(X,P) ; returns IFN of item in 399.1 if Name is found and piece P is true
"RTN","IBYPPL",58,0)
 N IBX,IBY S IBY=""
"RTN","IBYPPL",59,0)
 I $G(X)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"B",X,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(P)) S IBY=IBX
"RTN","IBYPPL",60,0)
 Q IBY
"RTN","IBYPPL",61,0)
 ;
"RTN","IBYPPL",62,0)
MSG(X) ;
"RTN","IBYPPL",63,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IBYPPL",64,0)
 S IBA(IBX)=$G(X)
"RTN","IBYPPL",65,0)
 Q
"VER")
8.0^22.0
"BLD",5547,6)
^SEQ #278
**END**
**END**
