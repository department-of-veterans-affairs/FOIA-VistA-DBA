Released WV*1*9 SEQ #9
Extracted from mail message
**KIDS**:WV*1.0*9^

**INSTALL NAME**
WV*1.0*9
"BLD",2202,0)
WV*1.0*9^WOMEN'S HEALTH^0^3000128^y
"BLD",2202,1,0)
^^2^2^3000126^^
"BLD",2202,1,1,0)
Please read the WV*1*9 patch description on FORUM for an explanation of
"BLD",2202,1,2,0)
what this patch does.
"BLD",2202,4,0)
^9.64PA^790^1
"BLD",2202,4,790,0)
790
"BLD",2202,4,790,2,0)
^9.641^790.12^1
"BLD",2202,4,790,2,790.12,0)
COMPLETE ADDRESS  (sub-file)
"BLD",2202,4,790,2,790.12,1,0)
^9.6411^^
"BLD",2202,4,790,222)
y^n^p^^^^n
"BLD",2202,4,"APDD",790,790.12)

"BLD",2202,4,"B",790,790)

"BLD",2202,"INIT")
WV9PST
"BLD",2202,"KRN",0)
^9.67PA^19^18
"BLD",2202,"KRN",.4,0)
.4
"BLD",2202,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",2202,"KRN",.4,"NM",1,0)
WV PRINT NOTIF PURPOSE&LETTER    FILE #790.404^790.404^1^
"BLD",2202,"KRN",.4,"NM","B","WV PRINT NOTIF PURPOSE&LETTER    FILE #790.404",1)

"BLD",2202,"KRN",.401,0)
.401
"BLD",2202,"KRN",.402,0)
.402
"BLD",2202,"KRN",.403,0)
.403
"BLD",2202,"KRN",.5,0)
.5
"BLD",2202,"KRN",.84,0)
.84
"BLD",2202,"KRN",3.6,0)
3.6
"BLD",2202,"KRN",3.8,0)
3.8
"BLD",2202,"KRN",9.2,0)
9.2
"BLD",2202,"KRN",9.8,0)
9.8
"BLD",2202,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",2202,"KRN",9.8,"NM",1,0)
WVUTL9^^0^B9783142
"BLD",2202,"KRN",9.8,"NM",2,0)
WVLETPR^^0^B37821689
"BLD",2202,"KRN",9.8,"NM",3,0)
WV9PST^^0^B17069618
"BLD",2202,"KRN",9.8,"NM",4,0)
WVRALINK^^0^B42882686
"BLD",2202,"KRN",9.8,"NM",5,0)
WVPURP^^0^B24803199
"BLD",2202,"KRN",9.8,"NM","B","WV9PST",3)

"BLD",2202,"KRN",9.8,"NM","B","WVLETPR",2)

"BLD",2202,"KRN",9.8,"NM","B","WVPURP",5)

"BLD",2202,"KRN",9.8,"NM","B","WVRALINK",4)

"BLD",2202,"KRN",9.8,"NM","B","WVUTL9",1)

"BLD",2202,"KRN",19,0)
19
"BLD",2202,"KRN",19.1,0)
19.1
"BLD",2202,"KRN",101,0)
101
"BLD",2202,"KRN",409.61,0)
409.61
"BLD",2202,"KRN",771,0)
771
"BLD",2202,"KRN",869.2,0)
869.2
"BLD",2202,"KRN",870,0)
870
"BLD",2202,"KRN",8994,0)
8994
"BLD",2202,"KRN","B",.4,.4)

"BLD",2202,"KRN","B",.401,.401)

"BLD",2202,"KRN","B",.402,.402)

"BLD",2202,"KRN","B",.403,.403)

"BLD",2202,"KRN","B",.5,.5)

"BLD",2202,"KRN","B",.84,.84)

"BLD",2202,"KRN","B",3.6,3.6)

"BLD",2202,"KRN","B",3.8,3.8)

"BLD",2202,"KRN","B",9.2,9.2)

"BLD",2202,"KRN","B",9.8,9.8)

"BLD",2202,"KRN","B",19,19)

"BLD",2202,"KRN","B",19.1,19.1)

"BLD",2202,"KRN","B",101,101)

"BLD",2202,"KRN","B",409.61,409.61)

"BLD",2202,"KRN","B",771,771)

"BLD",2202,"KRN","B",869.2,869.2)

"BLD",2202,"KRN","B",870,870)

"BLD",2202,"KRN","B",8994,8994)

"BLD",2202,"QUES",0)
^9.62^^
"BLD",2202,"REQB",0)
^9.611^2^2
"BLD",2202,"REQB",1,0)
WV*1.0*7^2
"BLD",2202,"REQB",2,0)
WV*1.0*4^2
"BLD",2202,"REQB","B","WV*1.0*4",2)

"BLD",2202,"REQB","B","WV*1.0*7",1)

"FIA",790)
WV PATIENT
"FIA",790,0)
^WV(790,
"FIA",790,0,0)
790IP
"FIA",790,0,1)
y^n^p^^^^n
"FIA",790,0,10)

"FIA",790,0,11)

"FIA",790,0,"RLRO")

"FIA",790,0,"VR")
1.0^WV
"FIA",790,790)
1
"FIA",790,790,3)

"FIA",790,790.12)
0
"INIT")
WV9PST
"KRN",.4,2102,-1)
1^1
"KRN",.4,2102,0)
WV PRINT NOTIF PURPOSE&LETTER    FILE #790.404
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"PKG",364,-1)
1^1
"PKG",364,0)
WOMEN'S HEALTH^WV^Tracks health issues specific to female patients.
"PKG",364,20,0)
^9.402P^^
"PKG",364,22,0)
^9.49I^1^1
"PKG",364,22,1,0)
1.0^2980925^2980508^547
"PKG",364,22,1,"PAH",1,0)
9^3000128
"PKG",364,22,1,"PAH",1,1,0)
^^2^2^3000128
"PKG",364,22,1,"PAH",1,1,1,0)
Please read the WV*1*9 patch description on FORUM for an explanation of
"PKG",364,22,1,"PAH",1,1,2,0)
what this patch does.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","WV9PST")
0^3^B17069618
"RTN","WV9PST",1,0)
WV9PST ;HCIOFO/DS-Patch 9 Post-Installation Routine ;1/26/00  16:18
"RTN","WV9PST",2,0)
 ;;1.0;WOMEN'S HEALTH;**9**;Jan 10, 2000
"RTN","WV9PST",3,0)
 ; Routine converts multiple address lines in WV(790.404 & WV(790.6
"RTN","WV9PST",4,0)
 ; to a single COMPLETE ADDRESS entry
"RTN","WV9PST",5,0)
 D PROC(790.404)
"RTN","WV9PST",6,0)
 D PROC(790.6)
"RTN","WV9PST",7,0)
 D QMAIL
"RTN","WV9PST",8,0)
 Q
"RTN","WV9PST",9,0)
 ;
"RTN","WV9PST",10,0)
PROC(WVFILE) ; Replace mailing address placeholders with |COMPLETE ADDRESS|
"RTN","WV9PST",11,0)
 N WVNODE,WVSUB1,WVSUB2,WVX
"RTN","WV9PST",12,0)
 S WVSUB1=0
"RTN","WV9PST",13,0)
 F  S WVSUB1=$O(^WV(WVFILE,WVSUB1)) Q:'WVSUB1  D
"RTN","WV9PST",14,0)
 . S WVSUB2=0
"RTN","WV9PST",15,0)
 . F  S WVSUB2=$O(^WV(WVFILE,WVSUB1,1,WVSUB2)) Q:'WVSUB2  D
"RTN","WV9PST",16,0)
 . . S WVNODE=$G(^WV(WVFILE,WVSUB1,1,WVSUB2,0))
"RTN","WV9PST",17,0)
 . . Q:WVNODE=""
"RTN","WV9PST",18,0)
 . . I WVNODE["|MAILING ADDRESS-STREET|" D
"RTN","WV9PST",19,0)
 . . . S WVX=$F(WVNODE,"|"),WVX=WVX-2
"RTN","WV9PST",20,0)
 . . . S ^WV(WVFILE,WVSUB1,1,WVSUB2,0)=$$REPEAT^XLFSTR(" ",WVX)_"|COMPLETE ADDRESS|"
"RTN","WV9PST",21,0)
 . . . I $G(^WV(WVFILE,WVSUB1,1,(WVSUB2+1),0))["|MAILING ADDRESS-CITY|" D
"RTN","WV9PST",22,0)
 . . . . S ^WV(WVFILE,WVSUB1,1,(WVSUB2+1),0)=" "
"RTN","WV9PST",23,0)
 . . . . Q
"RTN","WV9PST",24,0)
 . . . Q
"RTN","WV9PST",25,0)
 . . Q
"RTN","WV9PST",26,0)
 . Q
"RTN","WV9PST",27,0)
 Q
"RTN","WV9PST",28,0)
QMAIL ; Queue mail message
"RTN","WV9PST",29,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","WV9PST",30,0)
 S ZTRTN="MAIL^WV9PST",ZTDESC="WV*1*9 INSTALLED"
"RTN","WV9PST",31,0)
 S ZTIO="",ZTDTH=$H
"RTN","WV9PST",32,0)
 D ^%ZTLOAD
"RTN","WV9PST",33,0)
 Q
"RTN","WV9PST",34,0)
MAIL ; Send message to default case managers to inform them of the changes
"RTN","WV9PST",35,0)
 ; made to the address placeholders of the form letters (790.404 & 790.6)
"RTN","WV9PST",36,0)
 N XMDUZ,XMSUB,XMTEXT,XMY,WVSITE,WVIEN,WVLINE,WVMSG
"RTN","WV9PST",37,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","WV9PST",38,0)
 S (WVLINE,WVSITE)=0
"RTN","WV9PST",39,0)
 F  S WVSITE=$O(^WV(790.02,WVSITE)) Q:'WVSITE  D
"RTN","WV9PST",40,0)
 .S WVIEN=$P($G(^WV(790.02,WVSITE,0)),U,2) ;default case manager
"RTN","WV9PST",41,0)
 .Q:'WVIEN
"RTN","WV9PST",42,0)
 .S XMY(WVIEN)=""
"RTN","WV9PST",43,0)
 .Q
"RTN","WV9PST",44,0)
 I '$O(XMY(0)) Q
"RTN","WV9PST",45,0)
SEND ; Create and send mail message
"RTN","WV9PST",46,0)
 S XMDUZ=.5 ;message sender
"RTN","WV9PST",47,0)
 S XMSUB="Women's Health patch #9 installed"
"RTN","WV9PST",48,0)
 S WVMSG(+$$LINE())="Patch #9 for the Women's Health package was installed. This patch changes"
"RTN","WV9PST",49,0)
 S WVMSG(+$$LINE())="the '|placeholder|' text used in the notification form letter templates to"
"RTN","WV9PST",50,0)
 S WVMSG(+$$LINE())="determine the patient's mailing address. Specifically, it replaces:"
"RTN","WV9PST",51,0)
 S WVMSG(+$$LINE())=" "
"RTN","WV9PST",52,0)
 S WVMSG(+$$LINE())="|MAILING ADDRESS-STREET|"
"RTN","WV9PST",53,0)
 S WVMSG(+$$LINE())="|MAILING ADDRESS-CITY|, |MAILING ADDRESS-STATE| |MAILING ADDRESS-ZIP|"
"RTN","WV9PST",54,0)
 S WVMSG(+$$LINE())=" "
"RTN","WV9PST",55,0)
 S WVMSG(+$$LINE())="with |COMPLETE ADDRESS|."
"RTN","WV9PST",56,0)
 S WVMSG(+$$LINE())=" "
"RTN","WV9PST",57,0)
 S WVMSG(+$$LINE())="This change will allow the form letter to print mailing addresses that"
"RTN","WV9PST",58,0)
 S WVMSG(+$$LINE())="have more than one line for the street address portion."
"RTN","WV9PST",59,0)
 S WVMSG(+$$LINE())=" "
"RTN","WV9PST",60,0)
 S WVMSG(+$$LINE())="Recommendation: Run the 'Print Notification Purpose & Letter File'"
"RTN","WV9PST",61,0)
 S WVMSG(+$$LINE())="                option on the Maintenance Menu."
"RTN","WV9PST",62,0)
 S WVMSG(+$$LINE())="                Send the output to a printer."
"RTN","WV9PST",63,0)
 S WVMSG(+$$LINE())="                Review the name and address portion of the form letter"
"RTN","WV9PST",64,0)
 S WVMSG(+$$LINE())=" "
"RTN","WV9PST",65,0)
 S WVMSG(+$$LINE())="The name and address portion should appear as:"
"RTN","WV9PST",66,0)
 S WVMSG(+$$LINE())=" "
"RTN","WV9PST",67,0)
 S WVMSG(+$$LINE())="|$P(NAME,"","",2)| |$P(NAME,"","")|"
"RTN","WV9PST",68,0)
 S WVMSG(+$$LINE())="|COMPLETE ADDRESS|"
"RTN","WV9PST",69,0)
 S WVMSG(+$$LINE())=" "
"RTN","WV9PST",70,0)
 S WVMSG(+$$LINE())="If not, use the 'Add/Edit a Notification Purpose & Letter option on the"
"RTN","WV9PST",71,0)
 S WVMSG(+$$LINE())="Maintenance Menu to edit the form letter text."
"RTN","WV9PST",72,0)
 S WVMSG(+$$LINE())=" "
"RTN","WV9PST",73,0)
 S WVMSG(+$$LINE())=" "
"RTN","WV9PST",74,0)
 S WVMSG(+$$LINE())="Also, the generic form letter template used to create new form letters"
"RTN","WV9PST",75,0)
 S WVMSG(+$$LINE())="was modified to use the |COMPLETE ADDRESS| placeholder to generate the"
"RTN","WV9PST",76,0)
 S WVMSG(+$$LINE())="patient's mailing address."
"RTN","WV9PST",77,0)
 S XMTEXT="WVMSG("
"RTN","WV9PST",78,0)
 D ^XMD
"RTN","WV9PST",79,0)
 Q
"RTN","WV9PST",80,0)
LINE() ; Increment line counter by 1
"RTN","WV9PST",81,0)
 S WVLINE=+$G(WVLINE)+1
"RTN","WV9PST",82,0)
 Q WVLINE
"RTN","WV9PST",83,0)
 ;
"RTN","WVLETPR")
0^2^B37821689
"RTN","WVLETPR",1,0)
WVLETPR ;HCIOFO/FT,JR-WV PRINT LETTERS.  ;1/10/00  16:45
"RTN","WVLETPR",2,0)
 ;;1.0;WOMEN'S HEALTH;**7,9**;Sep 30, 1998
"RTN","WVLETPR",3,0)
 ;;  Original routine created by IHS/ANMC/MWR
"RTN","WVLETPR",4,0)
 ;;* MICHAEL REMILLARD, DDS * ALASKA NATIVE MEDICAL CENTER *
"RTN","WVLETPR",5,0)
 ;;  CALLED BY OPTION: "WV PRINT INDIVIDUAL LETTERS" TO PRINT A
"RTN","WVLETPR",6,0)
 ;;  LETTER FOR A SINGLE INDIVIDUAL (AS OPPOSED TO ALL THOSE QUEUED).
"RTN","WVLETPR",7,0)
 ;
"RTN","WVLETPR",8,0)
 D SETVARS^WVUTL5 S (WVPOP1,WVPOP)=0
"RTN","WVLETPR",9,0)
 N WVDA,WVTITLE
"RTN","WVLETPR",10,0)
 F  S WVPOP=0 D  Q:WVPOP1
"RTN","WVLETPR",11,0)
 .D SELECT Q:WVPOP
"RTN","WVLETPR",12,0)
 .D DEVICE Q:WVPOP
"RTN","WVLETPR",13,0)
 .S WVCRT=$S($E(IOST)="C":1,1:0)
"RTN","WVLETPR",14,0)
 .D PRINT
"RTN","WVLETPR",15,0)
 D ^%ZISC
"RTN","WVLETPR",16,0)
 ;
"RTN","WVLETPR",17,0)
EXIT ;EP
"RTN","WVLETPR",18,0)
 D KILLALL^WVUTL8
"RTN","WVLETPR",19,0)
 Q
"RTN","WVLETPR",20,0)
 ;
"RTN","WVLETPR",21,0)
SELECT ;EP
"RTN","WVLETPR",22,0)
 ;---> SELECT PATIENT, THEN SELECT NOTIFICATION.
"RTN","WVLETPR",23,0)
 N DIC,X,Y
"RTN","WVLETPR",24,0)
 D TITLE^WVUTL5("PRINT INDIVIDUAL PATIENT LETTERS")
"RTN","WVLETPR",25,0)
 D PATLKUP^WVUTL8(.Y)
"RTN","WVLETPR",26,0)
 I Y<0 S (WVPOP,WVPOP1)=1 Q
"RTN","WVLETPR",27,0)
 S WVDFN=+Y,X=$$NAME^WVUTL1(WVDFN)
"RTN","WVLETPR",28,0)
 D DIC^WVFMAN(790.4,"EM",.Y,"","","",X,.WVPOP)
"RTN","WVLETPR",29,0)
 I $D(DUOUT)!($D(DTOUT)) S WVPOP=1 Q
"RTN","WVLETPR",30,0)
 I Y<0 D NONE S WVPOP=1 Q
"RTN","WVLETPR",31,0)
 S WVDA=+Y
"RTN","WVLETPR",32,0)
 ;
"RTN","WVLETPR",33,0)
 ;---> IF FACILITIES OF LETTER AND USER DON'T MATCH, QUIT.
"RTN","WVLETPR",34,0)
 N WVFACIL S WVFACIL=$P(^WV(790.4,WVDA,0),U,7)
"RTN","WVLETPR",35,0)
 I ((WVFACIL'=DUZ(2))&(WVFACIL)) D TEXT1,DIRZ^WVUTL3 S WVPOP=1 Q
"RTN","WVLETPR",36,0)
 ;
"RTN","WVLETPR",37,0)
 S WVPURP=$P(^WV(790.4,WVDA,0),U,4)
"RTN","WVLETPR",38,0)
 S WVTYPE=$P(^WV(790.4,WVDA,0),U,3)
"RTN","WVLETPR",39,0)
 ;
"RTN","WVLETPR",40,0)
 ;---> CHECK IF PURPOSE HAS BEEN ENTERED.
"RTN","WVLETPR",41,0)
 I 'WVPURP D  Q
"RTN","WVLETPR",42,0)
 .W !!?5,"No Purpose has been entered for this Notification."
"RTN","WVLETPR",43,0)
 .D DIRZ^WVUTL3 S WVPOP=1 Q
"RTN","WVLETPR",44,0)
 ;
"RTN","WVLETPR",45,0)
 ;---> CHECK IF THIS PURPOSE OF NOTIFICATION HAS A LETTER.
"RTN","WVLETPR",46,0)
 I '$D(^WV(790.404,WVPURP,1,0)) D  Q
"RTN","WVLETPR",47,0)
 .W !!!?5,"No letter has been entered for this Purpose of Notification."
"RTN","WVLETPR",48,0)
 .W !?5,"Programmer information: Notification=^WV(790.4,"_WVDA_",0)."
"RTN","WVLETPR",49,0)
 .W !?5,"                         Purpose IEN=",WVPURP
"RTN","WVLETPR",50,0)
 .W !?5,"                         Patient IEN=",WVDFN
"RTN","WVLETPR",51,0)
 .D DIRZ^WVUTL3 S WVPOP=1 Q
"RTN","WVLETPR",52,0)
 ;
"RTN","WVLETPR",53,0)
 ;---> CHECK IF TYPE OF NOTIFICATION FOR THIS NOTIFICATION IS PRINTABLE.
"RTN","WVLETPR",54,0)
 I 'WVTYPE D CANTPRT Q
"RTN","WVLETPR",55,0)
 I '$P(^WV(790.403,WVTYPE,0),U,2) D CANTPRT Q
"RTN","WVLETPR",56,0)
 Q
"RTN","WVLETPR",57,0)
 ;
"RTN","WVLETPR",58,0)
CANTPRT ;EP
"RTN","WVLETPR",59,0)
 ;---> CAN'T PRINT THIS NOTIFICATION.
"RTN","WVLETPR",60,0)
 W !!?5,"This Type of Notification"
"RTN","WVLETPR",61,0)
 W:WVTYPE ", ",$P(^WV(790.403,WVTYPE,0),U),"," W " is not printable."
"RTN","WVLETPR",62,0)
 D DIRZ^WVUTL3 S WVPOP=1
"RTN","WVLETPR",63,0)
 Q
"RTN","WVLETPR",64,0)
 ;
"RTN","WVLETPR",65,0)
DEVICE ;EP
"RTN","WVLETPR",66,0)
 ;---> GET DEVICE AND POSSIBLY QUEUE TO TASKMAN.
"RTN","WVLETPR",67,0)
 K %ZIS,IOP
"RTN","WVLETPR",68,0)
 S ZTRTN="PRINT^WVLETPR",ZTSAVE("WVDA")=""
"RTN","WVLETPR",69,0)
 D ZIS^WVUTL2(.WVPOP,1)
"RTN","WVLETPR",70,0)
 Q
"RTN","WVLETPR",71,0)
 ;
"RTN","WVLETPR",72,0)
PRINT ;EP
"RTN","WVLETPR",73,0)
 ;---> REQUIRED VARIABLE: WVDA=IEN IN ^WV(790.4, ION=DEVICE
"RTN","WVLETPR",74,0)
 ;---> NEXT LINE: IOP WILL INHIBIT ^DIWF FROM PROMPTING FOR DEVICE.
"RTN","WVLETPR",75,0)
 D SETVARS^WVUTL5
"RTN","WVLETPR",76,0)
 N WVDFN,WVPURP,IOP
"RTN","WVLETPR",77,0)
 S IOP=ION
"RTN","WVLETPR",78,0)
 ;---> IF FACILITIES OF LETTER AND USER DON'T MATCH, QUIT (IF NULL, OK).
"RTN","WVLETPR",79,0)
 N WVFACIL S WVFACIL=$P(^WV(790.4,WVDA,0),U,7)
"RTN","WVLETPR",80,0)
 I ((WVFACIL'=DUZ(2))&(WVFACIL)) D TEXT1 H 5 S WVPOP=1 Q
"RTN","WVLETPR",81,0)
 ;
"RTN","WVLETPR",82,0)
 S WVDFN=$P(^WV(790.4,WVDA,0),U)
"RTN","WVLETPR",83,0)
 S WVPURP=$P(^WV(790.4,WVDA,0),U,4)
"RTN","WVLETPR",84,0)
 ;---> WVN=DATE OF "PRINT DATE", USE TO KILL "APRT" XREF BELOW.
"RTN","WVLETPR",85,0)
 S:'$D(WVKDT) WVKDT=$P(^WV(790.4,WVDA,0),U,11)
"RTN","WVLETPR",86,0)
 ;---> IF NO PURPOSE (DELETED), KILL "APRT" XREF AND QUIT.
"RTN","WVLETPR",87,0)
 I 'WVPURP D  Q
"RTN","WVLETPR",88,0)
 .W !!?5,"No Purpose of Notification has been chosen; therefore, this"
"RTN","WVLETPR",89,0)
 .W !?5,"notification cannot be printed."
"RTN","WVLETPR",90,0)
 .D KILLXREF(WVDA,WVKDT)
"RTN","WVLETPR",91,0)
 ;---> IF QUEUED AND WVCRT IS NOT SET, THEN SET IT.
"RTN","WVLETPR",92,0)
 S:'$D(WVCRT) WVCRT=$S($E(IOST)="C":1,1:0)
"RTN","WVLETPR",93,0)
 S DIWF="^WV(790.404,WVPURP,1,"
"RTN","WVLETPR",94,0)
 S DIWF(1)=790
"RTN","WVLETPR",95,0)
 S BY="INTERNAL(#.01)="_WVDFN
"RTN","WVLETPR",96,0)
 ;---> IF LOCKED, PROMPT DEVICE, QUIT AND LEAVE IN THE QUEUE.
"RTN","WVLETPR",97,0)
 L +^WV(790.4,WVDA):0 I '$T U IO D  D PROMPT Q
"RTN","WVLETPR",98,0)
 .W !!?5,"The selected Notification is being edited by another user."
"RTN","WVLETPR",99,0)
 .W !?5,"Programmer information: Notification=^WV(790.4,"_WVDA_",0)."
"RTN","WVLETPR",100,0)
 .W:'WVCRT @IOF
"RTN","WVLETPR",101,0)
 ;
"RTN","WVLETPR",102,0)
 ;---> IF PATIENT IS DECEASED, DON'T PRINT LETTER; PRINT EXPLANATION,
"RTN","WVLETPR",103,0)
 ;---> CHANGE THE STATUS OF THE NOTIFICATION TO "CLOSED", AND GIVE
"RTN","WVLETPR",104,0)
 ;---> THE OUTCOME OF "PATIENT DECEASED".
"RTN","WVLETPR",105,0)
 I $$DECEASED^WVUTL1(WVDFN) D DECEASED Q
"RTN","WVLETPR",106,0)
 ;---> Compute future appointments
"RTN","WVLETPR",107,0)
 D KAPPT^WVUTL9(WVDFN) ;kill off old computed appts.
"RTN","WVLETPR",108,0)
 D GAPPT^WVUTL9(WVDFN) ;get future appts
"RTN","WVLETPR",109,0)
 D SAPPT^WVUTL9(WVDFN) ;set appts in File 790
"RTN","WVLETPR",110,0)
 D KILLUG^WVUTL9 ;kill off Utility global off future appts
"RTN","WVLETPR",111,0)
 D KADD^WVUTL9(WVDFN) ;kill off old computed address
"RTN","WVLETPR",112,0)
 D GADD^WVUTL9(WVDFN) ;get current complete address
"RTN","WVLETPR",113,0)
 D SADD^WVUTL9(WVDFN) ;set complete address in File 790
"RTN","WVLETPR",114,0)
 D KVAR^WVUTL9 ;clean-up VADPT variables used
"RTN","WVLETPR",115,0)
 ;---> PRINT IT TO IOP, PRESERVE WVPOP.
"RTN","WVLETPR",116,0)
 D EN2^DIWF
"RTN","WVLETPR",117,0)
 D PROMPT
"RTN","WVLETPR",118,0)
 ;---> DON'T STUFF "DATE PRINTED" IF IT ALREADY HAS A "DATE PRINTED".
"RTN","WVLETPR",119,0)
 I $P(^WV(790.4,WVDA,0),U,10)]"" D KILLXREF(WVDA,WVKDT) L -^WV(790.4,WVDA) Q
"RTN","WVLETPR",120,0)
 ;
"RTN","WVLETPR",121,0)
 ;---> DON'T STUFF "DATE PRINTED" IF IT'S JUST TO THE SCREEN.
"RTN","WVLETPR",122,0)
 I WVCRT D  Q
"RTN","WVLETPR",123,0)
 .W !!?3,"NOTE: Because this letter was only displayed on a screen and"
"RTN","WVLETPR",124,0)
 .W !?9,"not printed on a printer, it will NOT yet be logged by the"
"RTN","WVLETPR",125,0)
 .W !?9,"program as having been ""PRINTED"".",!
"RTN","WVLETPR",126,0)
 .L -^WV(790.4,WVDA) D DIRZ^WVUTL3
"RTN","WVLETPR",127,0)
 ;
"RTN","WVLETPR",128,0)
 ;---> NEXT LINES KILL "APRT" XREF AND SET "DATE PRINTED"=TODAY.
"RTN","WVLETPR",129,0)
 ;---> ("APRT" XREF INDICATE A NOTIFICATION IS QUEUED TO BE PRINTED.)
"RTN","WVLETPR",130,0)
 D KILLXREF(WVDA,WVKDT)
"RTN","WVLETPR",131,0)
 D DIE^WVFMAN(790.4,".1////"_DT,WVDA)
"RTN","WVLETPR",132,0)
 L -^WV(790.4,WVDA) Q
"RTN","WVLETPR",133,0)
 Q
"RTN","WVLETPR",134,0)
 ;
"RTN","WVLETPR",135,0)
KILLXREF(WVDA,WVKDT) ;EP
"RTN","WVLETPR",136,0)
 ;---> KILL "APRT" XREF (REMOVE LETTER FROM QUEUE).
"RTN","WVLETPR",137,0)
 Q:'$G(WVDA)  Q:'$G(WVKDT)
"RTN","WVLETPR",138,0)
 K ^WV(790.4,"APRT",WVKDT,WVDA)
"RTN","WVLETPR",139,0)
 Q
"RTN","WVLETPR",140,0)
 ;
"RTN","WVLETPR",141,0)
DECEASED ;EP
"RTN","WVLETPR",142,0)
 ;---> IF THE PATIENT IS DECEASED.
"RTN","WVLETPR",143,0)
 ;---> DON'T STUFF "DATE PRINTED" IF IT'S JUST TO THE SCREEN.
"RTN","WVLETPR",144,0)
 W !!?3,"NOTE: Because this patient, ",$$NAME^WVUTL1(WVDFN)," #"
"RTN","WVLETPR",145,0)
 W $$SSN^WVUTL1(WVDFN),", is now"
"RTN","WVLETPR",146,0)
 W !?9,"registered as deceased, the letter will NOT be printed."
"RTN","WVLETPR",147,0)
 W !?9,"Instead, this notification will be given a status of CLOSED"
"RTN","WVLETPR",148,0)
 W !?9,"and an outcome of ""Patient Deceased""."
"RTN","WVLETPR",149,0)
 D:WVCRT&('$D(IO("S"))) DIRZ^WVUTL3
"RTN","WVLETPR",150,0)
 W:'WVCRT @IOF
"RTN","WVLETPR",151,0)
 S DR=".14////c;.05///Patient Deceased"
"RTN","WVLETPR",152,0)
 D DIE^WVFMAN(790.4,DR,WVDA)
"RTN","WVLETPR",153,0)
 ;---> KILL "APRT" XREF (FLAGS NOTIFICATION AS QUEUED TO BE PRINTED).
"RTN","WVLETPR",154,0)
 D KILLXREF(WVDA,WVKDT)
"RTN","WVLETPR",155,0)
 L -^WV(790.4,WVDA)
"RTN","WVLETPR",156,0)
 Q
"RTN","WVLETPR",157,0)
 ;
"RTN","WVLETPR",158,0)
PROMPT ;EP
"RTN","WVLETPR",159,0)
 ;---> PROMPT IF NECESSARY, PROMPT DEVICE.
"RTN","WVLETPR",160,0)
 D:WVCRT DIRZ^WVUTL3
"RTN","WVLETPR",161,0)
 Q
"RTN","WVLETPR",162,0)
 ;
"RTN","WVLETPR",163,0)
NONE ;EP
"RTN","WVLETPR",164,0)
 S WVTITLE="* No letters selected for printing. *"
"RTN","WVLETPR",165,0)
 D CENTERT^WVUTL5(.WVTITLE)
"RTN","WVLETPR",166,0)
 W !!!!,WVTITLE,!!
"RTN","WVLETPR",167,0)
 D DIRZ^WVUTL3
"RTN","WVLETPR",168,0)
 Q
"RTN","WVLETPR",169,0)
 ;
"RTN","WVLETPR",170,0)
TEXT1 ;EP
"RTN","WVLETPR",171,0)
 ;;
"RTN","WVLETPR",172,0)
 ;;* NOTE: The Facility with which this letter is associated does not
"RTN","WVLETPR",173,0)
 ;;        match the Facility under which you are currently logged on.
"RTN","WVLETPR",174,0)
 ;;        To print this Notification, you must either edit the Facility
"RTN","WVLETPR",175,0)
 ;;        for this Notification, or log off and log back in under the
"RTN","WVLETPR",176,0)
 ;;        same Facility with which the Notification is associated.
"RTN","WVLETPR",177,0)
 S WVTAB=5,WVLINL="TEXT1" D PRINTX
"RTN","WVLETPR",178,0)
 Q
"RTN","WVLETPR",179,0)
 ;
"RTN","WVLETPR",180,0)
PRINTX ;EP
"RTN","WVLETPR",181,0)
 N I,T,X S T=$$REPEAT^XLFSTR(" ",WVTAB)
"RTN","WVLETPR",182,0)
 F I=1:1 S X=$T(@WVLINL+I) Q:X'[";;"  W !,T,$P(X,";;",2)
"RTN","WVLETPR",183,0)
 Q
"RTN","WVPURP")
0^5^B24803199
"RTN","WVPURP",1,0)
WVPURP ;HCIOFO/FT,JR-NOTIFICATION TABLES MAINTENANC; ;1/26/00  14:18
"RTN","WVPURP",2,0)
 ;;1.0;WOMEN'S HEALTH;**4,9**;Sep 30, 1998
"RTN","WVPURP",3,0)
 ;;  Original routine created by IHS/ANMC/MWR
"RTN","WVPURP",4,0)
 ;;* MICHAEL REMILLARD, DDS * ALASKA NATIVE MEDICAL CENTER *
"RTN","WVPURP",5,0)
 ;;  ADD/EDIT/PRINT NOTIFICATION PURPOSE FILE ENTRIES, EDIT PCD DAYS,
"RTN","WVPURP",6,0)
 ;;  EDIT NOTIFICATION TYPE SYNONYMS, ADD/EDIT NOTIFICATION OUTCOMES.
"RTN","WVPURP",7,0)
 ;;
"RTN","WVPURP",8,0)
PRINTPUR ; Called by option "WV PRINT NOTIF PURPOSE&LETTER"
"RTN","WVPURP",9,0)
 D SETVARS^WVUTL5
"RTN","WVPURP",10,0)
 D DEVICE
"RTN","WVPURP",11,0)
 I WVPOP D KILL Q
"RTN","WVPURP",12,0)
PRINT ; Print purpose and letter entries
"RTN","WVPURP",13,0)
 U IO
"RTN","WVPURP",14,0)
 S WVNAME="",(WVPAGE,WVPOP)=0
"RTN","WVPURP",15,0)
 S WVDATE=$$FMTE^XLFDT($$NOW^XLFDT(),"1P") ;current date/time
"RTN","WVPURP",16,0)
 S WVDASH=$$REPEAT^XLFSTR("-",79) ;line of dashes
"RTN","WVPURP",17,0)
 ; loop thru File 790.404 (B x-ref)
"RTN","WVPURP",18,0)
 F  S WVNAME=$O(^WV(790.404,"B",WVNAME)) Q:WVNAME=""!(WVPOP)  S WVIEN=0 F  S WVIEN=$O(^WV(790.404,"B",WVNAME,WVIEN)) Q:'WVIEN!(WVPOP)  D
"RTN","WVPURP",19,0)
 .S WVNODE=$G(^WV(790.404,WVIEN,0)) Q:WVNODE=""
"RTN","WVPURP",20,0)
 .D HEADER
"RTN","WVPURP",21,0)
 .D RESOLVE
"RTN","WVPURP",22,0)
 .W !!?1,"PURPOSE: "_$P(WVNODE,U,1),?55,"SYNONYM: "_$P(WVNODE,U,3)
"RTN","WVPURP",23,0)
 .W !,"PRIORITY: "_$G(WVARRAY(790.404,WVIEN_",",.02,"E")),?56,"ACTIVE: "_$G(WVARRAY(790.404,WVIEN_",",.04,"E"))
"RTN","WVPURP",24,0)
 .W !,"BR or CX: "_$G(WVARRAY(790.404,WVIEN_",",.05,"E"))
"RTN","WVPURP",25,0)
 .W !?2,"LETTER: "_$G(WVARRAY(790.404,WVIEN_",",.06,"E")),!!
"RTN","WVPURP",26,0)
 .S WVLINE=0
"RTN","WVPURP",27,0)
 .F  S WVLINE=$O(^WV(790.404,WVIEN,1,WVLINE)) Q:'WVLINE!(WVPOP)  D
"RTN","WVPURP",28,0)
 ..I ($Y+4)>IOSL D:$E(IOST)="C" DIRZ^WVUTL3 Q:WVPOP  D HEADER
"RTN","WVPURP",29,0)
 ..W !,$G(^WV(790.404,WVIEN,1,WVLINE,0))
"RTN","WVPURP",30,0)
 ..Q
"RTN","WVPURP",31,0)
 .Q:WVPOP
"RTN","WVPURP",32,0)
 .I $E(IOST)="C" D DIRZ^WVUTL3
"RTN","WVPURP",33,0)
 .Q
"RTN","WVPURP",34,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","WVPURP",35,0)
KILL ; Kill variables
"RTN","WVPURP",36,0)
 K WVARRAY,WVDASH,WVDATE,WVIEN,WVLINE,WVNAME,WVNODE,WVPAGE,WVPOP,X,Y
"RTN","WVPURP",37,0)
 D ^%ZISC
"RTN","WVPURP",38,0)
 Q
"RTN","WVPURP",39,0)
HEADER ; Report header
"RTN","WVPURP",40,0)
 W:$Y>0 @IOF
"RTN","WVPURP",41,0)
 S WVPAGE=WVPAGE+1
"RTN","WVPURP",42,0)
 W "NOTIFICATION PURPOSE & LETTER LIST",?45,WVDATE,?70,"PAGE: "_WVPAGE
"RTN","WVPURP",43,0)
 W !,WVDASH
"RTN","WVPURP",44,0)
 Q
"RTN","WVPURP",45,0)
RESOLVE ; Resolve data to external values
"RTN","WVPURP",46,0)
 K WVARRAY
"RTN","WVPURP",47,0)
 D GETS^DIQ(790.404,WVIEN_",",".02;.04;.05;.06","E","WVARRAY")
"RTN","WVPURP",48,0)
 Q
"RTN","WVPURP",49,0)
DEVICE ; Get device and possibly queue to taskman
"RTN","WVPURP",50,0)
 S ZTRTN="DEQUEUE^WVPURP"
"RTN","WVPURP",51,0)
 D ZIS^WVUTL2(.WVPOP,1,"HOME")
"RTN","WVPURP",52,0)
 Q
"RTN","WVPURP",53,0)
DEQUEUE ; Taskman queue of printout
"RTN","WVPURP",54,0)
 D PRINT
"RTN","WVPURP",55,0)
 Q
"RTN","WVPURP",56,0)
 ;
"RTN","WVPURP",57,0)
EDITPUR ;EP
"RTN","WVPURP",58,0)
 ;---> CALLED BY OPTION "WV EDIT NOTIF PURPOSE&LETTER".
"RTN","WVPURP",59,0)
 D SETVARS^WVUTL5
"RTN","WVPURP",60,0)
 ;---> DISPLAY MENU TITLE FROM WV MENU OPTIONS.
"RTN","WVPURP",61,0)
 F  D  Q:$G(Y)<0
"RTN","WVPURP",62,0)
 .D TITLE^WVUTL5("EDIT NOTIFICATION PURPOSE & LETTER FILE")
"RTN","WVPURP",63,0)
 .D DIC^WVFMAN(790.404,"QEMAL",.Y)
"RTN","WVPURP",64,0)
 .Q:Y<0
"RTN","WVPURP",65,0)
 .S DA=+Y
"RTN","WVPURP",66,0)
 .D:$P(Y,U,3) ADDLET
"RTN","WVPURP",67,0)
 .D:'$P(Y,U,3) REPLACE
"RTN","WVPURP",68,0)
 .Q:WVPOP
"RTN","WVPURP",69,0)
 .;---> EDIT WITH SCREENMAN.
"RTN","WVPURP",70,0)
 .S DR="[WV NOTIFPURPOSE-FORM-1]"
"RTN","WVPURP",71,0)
 .D DDS^WVFMAN(790.404,DR,DA,"","",.WVPOP)
"RTN","WVPURP",72,0)
 D KILLALL^WVUTL8
"RTN","WVPURP",73,0)
 Q
"RTN","WVPURP",74,0)
 ;
"RTN","WVPURP",75,0)
 ;
"RTN","WVPURP",76,0)
ADDLET ;EP
"RTN","WVPURP",77,0)
 ;---> CALLED BY OPTION "WV ADD NOTIF PURPOSE&LETTER".
"RTN","WVPURP",78,0)
 K ^WV(790.404,DA,1)
"RTN","WVPURP",79,0)
 N N S N=0
"RTN","WVPURP",80,0)
 F  S N=$O(^WV(790.6,1,1,N)) Q:'N  D
"RTN","WVPURP",81,0)
 .S ^WV(790.404,DA,1,N,0)=^WV(790.6,1,1,N,0)
"RTN","WVPURP",82,0)
 S ^WV(790.404,DA,1,0)=^WV(790.6,1,1,0)
"RTN","WVPURP",83,0)
 Q
"RTN","WVPURP",84,0)
 ;
"RTN","WVPURP",85,0)
REPLACE ;EP
"RTN","WVPURP",86,0)
 ;---> REPLACE OLD LETTER FOR THIS NOTIF PURPOSE WITH GENERIC SAMPLE.
"RTN","WVPURP",87,0)
 N DIR,DIRUT,Y
"RTN","WVPURP",88,0)
 W !!?3,"Do you wish to delete the old letter for this Purpose of "
"RTN","WVPURP",89,0)
 W "Notification",!?3,"and replace it with the generic sample letter?"
"RTN","WVPURP",90,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","WVPURP",91,0)
 S DIR("A")="   Enter Yes or No: " D HELP1
"RTN","WVPURP",92,0)
 D ^DIR W !
"RTN","WVPURP",93,0)
 S:$D(DIRUT) WVPOP=1
"RTN","WVPURP",94,0)
 I Y D ADDLET
"RTN","WVPURP",95,0)
 Q
"RTN","WVPURP",96,0)
 ;
"RTN","WVPURP",97,0)
HELP1 ;EP
"RTN","WVPURP",98,0)
 ;;Enter YES to delete the old letter for this Purpose of Notification
"RTN","WVPURP",99,0)
 ;;and to begin with a fresh copy of the generic sample letter.
"RTN","WVPURP",100,0)
 S WVTAB=5,WVLINL="HELP1" D HELPTX
"RTN","WVPURP",101,0)
 Q
"RTN","WVPURP",102,0)
 ;
"RTN","WVPURP",103,0)
HELPTX ;EP
"RTN","WVPURP",104,0)
 N I,T,X S T=$$REPEAT^XLFSTR(" ",WVTAB)
"RTN","WVPURP",105,0)
 F I=1:1 S X=$T(@WVLINL+I) Q:X'[";;"  S DIR("?",I)=T_$P(X,";;",2)
"RTN","WVPURP",106,0)
 S DIR("?")=DIR("?",I-1) K DIR("?",I-1)
"RTN","WVPURP",107,0)
 Q
"RTN","WVPURP",108,0)
 ;
"RTN","WVPURP",109,0)
TYPE ;EP
"RTN","WVPURP",110,0)
 ;---> EDIT SYNONYMS FOR NOTIFICATION TYPES.
"RTN","WVPURP",111,0)
 D SETVARS^WVUTL5
"RTN","WVPURP",112,0)
 F  D  Q:$G(Y)<0
"RTN","WVPURP",113,0)
 .D TITLE^WVUTL5("EDIT SYNONYMS FOR NOTIFICATION TYPES") D TEXT1
"RTN","WVPURP",114,0)
 .N A S A="   Select NOTIFICATION TYPE: "
"RTN","WVPURP",115,0)
 .D DIC^WVFMAN(790.403,"QEMA",.Y,A)
"RTN","WVPURP",116,0)
 .Q:Y<0
"RTN","WVPURP",117,0)
 .D DIE^WVFMAN(790.403,.03,+Y,.WVPOP)
"RTN","WVPURP",118,0)
 W @IOF
"RTN","WVPURP",119,0)
 D KILLALL^WVUTL8
"RTN","WVPURP",120,0)
 Q
"RTN","WVPURP",121,0)
 ;
"RTN","WVPURP",122,0)
OUTCOME ;EP
"RTN","WVPURP",123,0)
 ;---> ADD/EDIT NOTIFICATION OUTCOME FILE.
"RTN","WVPURP",124,0)
 D SETVARS^WVUTL5
"RTN","WVPURP",125,0)
 F  D  Q:$G(Y)<0
"RTN","WVPURP",126,0)
 .D TITLE^WVUTL5("ADD/EDIT NOTIFICATION OUTCOME FILE")
"RTN","WVPURP",127,0)
 .D DIC^WVFMAN(790.405,"QEMAL",.Y,"   Select OUTCOME: ")
"RTN","WVPURP",128,0)
 .Q:Y<0
"RTN","WVPURP",129,0)
 .D DIE^WVFMAN(790.405,.02,+Y,.WVPOP)
"RTN","WVPURP",130,0)
 W @IOF
"RTN","WVPURP",131,0)
 D KILLALL^WVUTL8
"RTN","WVPURP",132,0)
 Q
"RTN","WVPURP",133,0)
 ;
"RTN","WVPURP",134,0)
TEXT1 ;EP
"RTN","WVPURP",135,0)
 ;;You may enter a synonym for each Notification Type.  The synonym will
"RTN","WVPURP",136,0)
 ;;allow the Notification Type to be called up by typing only a few
"RTN","WVPURP",137,0)
 ;;characters.  Synonyms should be unique and less than 4 characters.
"RTN","WVPURP",138,0)
 ;;
"RTN","WVPURP",139,0)
 ;;For example, "L1" might be used for LETTER,FIRST; "L2" for
"RTN","WVPURP",140,0)
 ;;LETTER,SECOND; "L3" for LETTER,THIRD, and so on.
"RTN","WVPURP",141,0)
 ;;
"RTN","WVPURP",142,0)
 ;;
"RTN","WVPURP",143,0)
 S WVTAB=5,WVLINL="TEXT1" D PRINTX
"RTN","WVPURP",144,0)
 Q
"RTN","WVPURP",145,0)
 ;
"RTN","WVPURP",146,0)
PRINTX ;EP
"RTN","WVPURP",147,0)
 N I,T,X S T=$$REPEAT^XLFSTR(" ",WVTAB)
"RTN","WVPURP",148,0)
 F I=1:1 S X=$T(@WVLINL+I) Q:X'[";;"  W !,T,$P(X,";;",2)
"RTN","WVPURP",149,0)
 Q
"RTN","WVPURP",150,0)
 ;
"RTN","WVPURP",151,0)
GENSTUFF ;EP
"RTN","WVPURP",152,0)
 ;---> STUFF THE GENERIC SAMPLE LETTER INTO ALL PURPOSES OF NOTIF.
"RTN","WVPURP",153,0)
 N DA
"RTN","WVPURP",154,0)
 S DA=0
"RTN","WVPURP",155,0)
 F  S DA=$O(^WV(790.404,DA)) Q:'DA  W !,DA  D ADDLET^WVPURP
"RTN","WVPURP",156,0)
 Q
"RTN","WVRALINK")
0^4^B42882686
"RTN","WVRALINK",1,0)
WVRALINK ;HCIOFO/FT-RAD/NM-WOMEN'S HEALTH LINK  ;1/11/00  11:42
"RTN","WVRALINK",2,0)
 ;;1.0;WOMEN'S HEALTH;**3,5,7,9**;Sep 30, 1998
"RTN","WVRALINK",3,0)
 ;;  Original routine created by IHS/ANMC/MWR
"RTN","WVRALINK",4,0)
 ;;* MICHAEL REMILLARD, DDS * ALASKA NATIVE MEDICAL CENTER *
"RTN","WVRALINK",5,0)
 ;;  CREATE MAMMOGRAM PROCEDURE IN WOMEN'S HEALTH FOR THIS PATIENT.
"RTN","WVRALINK",6,0)
 ;;  CALLED BY ^RART WHEN A RADIOLOGY REPORT IS VERIFIED.
"RTN","WVRALINK",7,0)
 ;;  CALLED BY ^RARTE1 WHEN A RADIOLOGY REPORT IS UNVERIFIED.
"RTN","WVRALINK",8,0)
 ;;  CALLED BY ^WVEXPTRA WHEN EXPORTING HISTORICAL MAMS TO WOMEN'S HEALTH
"RTN","WVRALINK",9,0)
 ;
"RTN","WVRALINK",10,0)
 ;---> REQUIRED VARIABLES: DFN  = DFN OF RADIOLOGY PATIENT.
"RTN","WVRALINK",11,0)
 ;--->                     DATE = INVERSE DATE/TIME OF VISIT.
"RTN","WVRALINK",12,0)
 ;--->                     CASE = IEN OF RADIOLOGY EXAM (CASE).
"RTN","WVRALINK",13,0)
 ;
"RTN","WVRALINK",14,0)
 ;---> OPTIONAL VARIABLE:  WVNEWP = TOTAL NEW WH PATIENTS ADDED.
"RTN","WVRALINK",15,0)
 ;--->                     WVMCNT = TOTAL NEW MAMS PROCEDURES ADDED.
"RTN","WVRALINK",16,0)
 ;--->                     THESE IF CALLED FROM ^WVEXPTRA ROUTINE.
"RTN","WVRALINK",17,0)
 ;
"RTN","WVRALINK",18,0)
 ;---> GENERATED VARIBLES:
"RTN","WVRALINK",19,0)
 ;---> WVPROC = IEN OF RADIOLOGY PROCEDURE (FILE #71), THEN IT
"RTN","WVRALINK",20,0)
 ;--->          GETS CHANGED TO WOMEN'S HEALTH PROCEDURE TYPE
"RTN","WVRALINK",21,0)
 ;--->                                   (FILE #790.2).
"RTN","WVRALINK",22,0)
 ;---> WVLOC  = WARD/CLINIC/LOCATION (FILE #44).
"RTN","WVRALINK",23,0)
 ;---> WVDATE = DATE OF THE PROCEDURE.
"RTN","WVRALINK",24,0)
 ;---> WVPROV = ORDERING PROVIDER.
"RTN","WVRALINK",25,0)
 ;---> WVMOD  = LEFT OR RIGHT, IF IT'S A UNILATERAL MAMMOGRAM.
"RTN","WVRALINK",26,0)
 ;---> WVDX   = RADIOLOGY DIAGNOSTIC CODE.
"RTN","WVRALINK",27,0)
 ;---> WVBWDX = WOMEN'S HEALTH RESULT/DIAGNOSIS.
"RTN","WVRALINK",28,0)
 ;
"RTN","WVRALINK",29,0)
CREATE(DFN,DATE,CASE) ;
"RTN","WVRALINK",30,0)
 Q:'+$$VERSION^XPDUTL("WV")
"RTN","WVRALINK",31,0)
 Q:($G(DFN)']"")!($G(DATE)']"")!($G(CASE)']"")
"RTN","WVRALINK",32,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","WVRALINK",33,0)
 S ZTRTN="CREATEQ^WVRALINK",ZTDESC="WV CREATE MAMMOGRAM ENTRY"
"RTN","WVRALINK",34,0)
 S ZTSAVE("DFN")="",ZTSAVE("DATE")="",ZTSAVE("CASE")=""
"RTN","WVRALINK",35,0)
 S ZTIO="",ZTDTH=$H
"RTN","WVRALINK",36,0)
 D ^%ZTLOAD
"RTN","WVRALINK",37,0)
 Q
"RTN","WVRALINK",38,0)
CREATEH(DFN,DATE,CASE,STATUS) ; Entry from ^WVEXPTRA which looks for exams
"RTN","WVRALINK",39,0)
 ; created before the WH package was installed.
"RTN","WVRALINK",40,0)
 Q:($G(DFN)']"")!($G(DATE)']"")!($G(CASE)']"")!($G(STATUS)']"")
"RTN","WVRALINK",41,0)
 ; 
"RTN","WVRALINK",42,0)
CREATEQ ; Queue data entry creation. Called from CREATE above
"RTN","WVRALINK",43,0)
 N WVPROC,WVLOC,WVDATE,WVPROV,WVMOD,WVDX,WVBWDX,WVLEFT,WVRIGHT
"RTN","WVRALINK",44,0)
 N WVCASE,WVCPT,WVERR,WVCREDIT ;,WVEXAM0
"RTN","WVRALINK",45,0)
 ;---> QUIT IF RADIOLOGY DATA IS NOT DEFINED OR ="".
"RTN","WVRALINK",46,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","WVRALINK",47,0)
 Q:'$D(^RADPT(DFN,"DT",DATE,"P",CASE,0))
"RTN","WVRALINK",48,0)
 ;
"RTN","WVRALINK",49,0)
 ;---> QUIT IF THIS PROCEDURE DOES NOT HAVE A MAM CPT CODE.
"RTN","WVRALINK",50,0)
 ;---> QUIT IF THIS PROCEDURE DOES NOT HAVE AN ULTRASOUND CPT CODE.
"RTN","WVRALINK",51,0)
 ;---> WVEXAM0=ZERO NODE OF RADIOLOGY EXAM.
"RTN","WVRALINK",52,0)
 S WVEXAM0=^RADPT(DFN,"DT",DATE,"P",CASE,0)
"RTN","WVRALINK",53,0)
 S WVCPT=$P(^RAMIS(71,$P(WVEXAM0,U,2),0),U,9) Q:WVCPT=""
"RTN","WVRALINK",54,0)
 S WVPROC=$O(^WV(790.2,"AC",WVCPT,0)) ;cpt code x-ref to get 790.2 ien
"RTN","WVRALINK",55,0)
 Q:'WVPROC  ;cpt code is not tracked in 790.2
"RTN","WVRALINK",56,0)
 Q:$P($G(^WV(790.2,+WVPROC,0)),U,5)'="R"  ;cpt is not rad/nm procedure
"RTN","WVRALINK",57,0)
 Q:$P($G(^DPT(DFN,0)),U,2)'="F"  ;not female
"RTN","WVRALINK",58,0)
 ;
"RTN","WVRALINK",59,0)
 ;---> QUIT IF NO WOMEN'S HEALTH SITE PARAMETER FILE ON THIS MACHINE.
"RTN","WVRALINK",60,0)
 ;     OR NO DEFAULT CASE MANAGER
"RTN","WVRALINK",61,0)
 Q:'$D(^WV(790.02,DUZ(2)))
"RTN","WVRALINK",62,0)
 Q:'$P($G(^WV(790.02,+$G(DUZ(2)),0)),U,2)
"RTN","WVRALINK",63,0)
 ;
"RTN","WVRALINK",64,0)
 ;---> IF NOT CALLED FROM ^WVEXPTRA (i.e., STATUS is undefined) CHECK
"RTN","WVRALINK",65,0)
 ;---> SITE PARAMETER AND QUIT IF "IMPORT MAMMOGRAMS FROM RADIOLOGY"
"RTN","WVRALINK",66,0)
 ;---> IS NOT SET TO "YES".
"RTN","WVRALINK",67,0)
 N Y S Y=^WV(790.02,DUZ(2),0)
"RTN","WVRALINK",68,0)
 I '$D(STATUS) Q:'$P(Y,U,10)
"RTN","WVRALINK",69,0)
 ;
"RTN","WVRALINK",70,0)
 ;---> SET WVZSTAT =THE STATUS (OPEN OR CLOSED) IN WOMEN'S HEALTH.
"RTN","WVRALINK",71,0)
 ;---> THAT MAMMOGRAMS SHOULD RECEIVE WHEN COPIED OVER FROM RADIOLOGY.
"RTN","WVRALINK",72,0)
 S WVZSTAT=$P(Y,U,23) S:WVZSTAT="" WVZSTAT="o"
"RTN","WVRALINK",73,0)
 I $G(STATUS)]"" S WVZSTAT=$G(STATUS) ;status selected in ^WVEXPTRA
"RTN","WVRALINK",74,0)
 ;
"RTN","WVRALINK",75,0)
 D COPY(WVEXAM0)
"RTN","WVRALINK",76,0)
 ;
"RTN","WVRALINK",77,0)
EXIT ;EP
"RTN","WVRALINK",78,0)
 K I,N,X
"RTN","WVRALINK",79,0)
 Q
"RTN","WVRALINK",80,0)
 ;
"RTN","WVRALINK",81,0)
COPY(Y) ;EP
"RTN","WVRALINK",82,0)
 ;---> COPY MAM PROCEDURE DATA FROM RADIOLOGY TO WOMEN'S HEALTH.
"RTN","WVRALINK",83,0)
 ;---> VARIABLE DFN=PATIENT
"RTN","WVRALINK",84,0)
 ;---> LOCATION=DUZ(2)
"RTN","WVRALINK",85,0)
 ;---> WARD/CLINIC/LOCATION
"RTN","WVRALINK",86,0)
 N X
"RTN","WVRALINK",87,0)
 S WVLOC=$P(Y,U,8)
"RTN","WVRALINK",88,0)
 ;
"RTN","WVRALINK",89,0)
 ;---> WVDATE=DATE OF THE PROCEDURE.
"RTN","WVRALINK",90,0)
 S WVDATE=$P($P(^RADPT(DFN,"DT",DATE,0),U),".")
"RTN","WVRALINK",91,0)
 ;
"RTN","WVRALINK",92,0)
 ;---> RECONSTRUCT THE FULL CASE# FOR THIS RAD PROCEDURE.
"RTN","WVRALINK",93,0)
 ;---> THIS IS USED AS A LINK (XREF) BETWEEN THE RADIOLOGY PROCEDURE
"RTN","WVRALINK",94,0)
 ;---> AND THE WOMEN'S HEALTH PROCEDURE.
"RTN","WVRALINK",95,0)
 S WVCASE=$E(WVDATE,4,7)_$E(WVDATE,2,3)_"-"_$P(Y,U)
"RTN","WVRALINK",96,0)
 ;---> CHECK TO BE SURE THE CASE# XREF IS REALLY DOWN THERE.
"RTN","WVRALINK",97,0)
 S:'$D(^RADPT("ADC",WVCASE,DFN,DATE,CASE)) WVCASE="UNKNOWN"
"RTN","WVRALINK",98,0)
 ;
"RTN","WVRALINK",99,0)
 ;---> QUIT IF THIS PROCEDURE HAS ALREADY BEEN SENT TO WOMEN'S HEALTH.
"RTN","WVRALINK",100,0)
 Q:$D(^WV(790.1,"E",WVCASE))
"RTN","WVRALINK",101,0)
 ;
"RTN","WVRALINK",102,0)
 ;---> REQUESTING PROVIDER/ORDERING PROVIDER
"RTN","WVRALINK",103,0)
 S WVPROV=$P(Y,U,14)
"RTN","WVRALINK",104,0)
 ;
"RTN","WVRALINK",105,0)
 ;---> IF UNILATERAL, ATTEMPT TO PICK UP LEFT OR RIGHT MODIFIER.
"RTN","WVRALINK",106,0)
 I WVPROC=26 D
"RTN","WVRALINK",107,0)
 .I $D(^RADPT(DFN,"DT",DATE,"P",CASE,"M",0)) D
"RTN","WVRALINK",108,0)
 ..N N S N=0
"RTN","WVRALINK",109,0)
 ..F  S N=$O(^RADPT(DFN,"DT",DATE,"P",CASE,"M",N)) Q:'N  D
"RTN","WVRALINK",110,0)
 ...S WVMOD=$P(^RADPT(DFN,"DT",DATE,"P",CASE,"M",N,0),U)
"RTN","WVRALINK",111,0)
 ...S WVMOD=$P(^RAMIS(71.2,WVMOD,0),U)
"RTN","WVRALINK",112,0)
 ...I "LEFTleft"[WVMOD S WVLEFT=1
"RTN","WVRALINK",113,0)
 ...I "RIGHTright"[WVMOD S WVRIGHT=1
"RTN","WVRALINK",114,0)
 ..Q:$D(WVLEFT)&($D(WVRIGHT))
"RTN","WVRALINK",115,0)
 ..I $D(WVLEFT) S WVMOD="l" Q
"RTN","WVRALINK",116,0)
 ..I $D(WVRIGHT) S WVMOD="r" Q
"RTN","WVRALINK",117,0)
 ;
"RTN","WVRALINK",118,0)
 ;---> IF THERE'S A DIAGNOSTIC CODE, ATTEMPT TO PICK UP DIAGNOSIS.
"RTN","WVRALINK",119,0)
 ;---> USE "WV DIAGNOSTIC CODE TRANSLATION" FILE #790.32.
"RTN","WVRALINK",120,0)
 S WVDX=$P(Y,U,13)
"RTN","WVRALINK",121,0)
 I +WVDX I $D(^WV(790.32,"C",WVDX)) S WVBWDX=$O(^WV(790.32,"C",WVDX,0))
"RTN","WVRALINK",122,0)
 ;
"RTN","WVRALINK",123,0)
 ;---> GET CREDIT METHOD.
"RTN","WVRALINK",124,0)
 S WVCREDIT=$P(Y,U,26)
"RTN","WVRALINK",125,0)
 ;
"RTN","WVRALINK",126,0)
PATIENT ;---> IF PATIENT ISN'T IN WOMEN'S HEALTH DATABASE, ADD HER.
"RTN","WVRALINK",127,0)
 S WVERR=1
"RTN","WVRALINK",128,0)
 I '$D(^WV(790,DFN,0)) D
"RTN","WVRALINK",129,0)
 .D AUTOADD^WVPATE(DFN,DUZ(2),.WVERR)
"RTN","WVRALINK",130,0)
 .I $D(WVNEWP) S:WVERR WVNEWP=WVNEWP+1
"RTN","WVRALINK",131,0)
 Q:WVERR<0
"RTN","WVRALINK",132,0)
 D FIND^WVRALIN1 ;check for 'unlinked' entry in File 790.1
"RTN","WVRALINK",133,0)
 Q:$D(^WV(790.1,"E",WVCASE))  ;quit if link was made in WVRALIN1
"RTN","WVRALINK",134,0)
PROC ;---> CREATE MAMMOGRAM PROCEDURE IN WV PROCEDURE FILE #790.1.
"RTN","WVRALINK",135,0)
 S WVDR=".02////"_DFN_";.04////"_WVPROC
"RTN","WVRALINK",136,0)
 S WVDR=WVDR_";.05////"_$G(WVBWDX)_";.07////"_WVPROV
"RTN","WVRALINK",137,0)
 S WVDR=WVDR_";.09////"_$G(WVMOD)_";.1////"_DUZ(2)_";.11////"_WVLOC
"RTN","WVRALINK",138,0)
 S WVDR=WVDR_";.12////"_WVDATE_";.14////"_WVZSTAT_";.15////"_WVCASE
"RTN","WVRALINK",139,0)
 S WVDR=WVDR_";.18////.5;.19////"_DT_";.34////"_$G(DUZ(2))_";.35////"_WVCREDIT
"RTN","WVRALINK",140,0)
 ;
"RTN","WVRALINK",141,0)
 D NEW2^WVPROC(DFN,WVPROC,WVDATE,WVDR,"","",.WVERR)
"RTN","WVRALINK",142,0)
 I $D(WVMCNT) S:WVERR>-1 WVMCNT=WVMCNT+1
"RTN","WVRALINK",143,0)
 Q:WVERR<0  ;procedure not added
"RTN","WVRALINK",144,0)
 Q:$D(WVMCNT)  ;mass import of Rad/NM exams
"RTN","WVRALINK",145,0)
 ;Q:$P($G(^WV(790.02,+DUZ(2),0)),U,23)="c"  ;Status=closed
"RTN","WVRALINK",146,0)
 D MAIL^WVRADWP(DFN,+Y,WVPROC,WVPROV) ;iens for patient, accession, procedure, provider/requestor
"RTN","WVRALINK",147,0)
 Q
"RTN","WVRALINK",148,0)
 ;
"RTN","WVRALINK",149,0)
 ;
"RTN","WVRALINK",150,0)
DELETE(DFN,DATE,CASE) ;EP
"RTN","WVRALINK",151,0)
 ;---> MODIFY WOMEN'S HEALTH PROCEDURE TO REFLECT CHANGE.
"RTN","WVRALINK",152,0)
 ;---> CALLED FROM RARTE1 (DELETE A REPORT AND UNVERIFY A REPORT).
"RTN","WVRALINK",153,0)
 ;
"RTN","WVRALINK",154,0)
 Q:'+$$VERSION^XPDUTL("WV")
"RTN","WVRALINK",155,0)
 Q:'$D(DFN)!('$D(DATE))!('$D(CASE))
"RTN","WVRALINK",156,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","WVRALINK",157,0)
 S ZTRTN="DELETEQ^WVRALINK",ZTDESC="WV MAMMOGRAM RPT CHANGE"
"RTN","WVRALINK",158,0)
 S ZTSAVE("DFN")="",ZTSAVE("DATE")="",ZTSAVE("CASE")=""
"RTN","WVRALINK",159,0)
 S ZTIO="",ZTDTH=$H
"RTN","WVRALINK",160,0)
 D ^%ZTLOAD
"RTN","WVRALINK",161,0)
 Q
"RTN","WVRALINK",162,0)
DELETEQ ; Modify WV entry when mammogram report is unverified or deleted
"RTN","WVRALINK",163,0)
 Q:'$D(^RADPT(DFN,"DT",DATE,"P",CASE,0))
"RTN","WVRALINK",164,0)
 N WVIEN,WVDATE,WVCASE,WVCMGR,WVLOOP,WVMSG,WVPROV
"RTN","WVRALINK",165,0)
 N XMDUZ,XMSUB,XMTEXT,XMY ;send mail message to case manager
"RTN","WVRALINK",166,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","WVRALINK",167,0)
 ;
"RTN","WVRALINK",168,0)
 ;---> WVDATE=DATE OF PROCEDURE.
"RTN","WVRALINK",169,0)
 S WVDATE=$P($P(^RADPT(DFN,"DT",DATE,0),U),".")
"RTN","WVRALINK",170,0)
 S WVCASE=$P(^RADPT(DFN,"DT",DATE,"P",CASE,0),U)
"RTN","WVRALINK",171,0)
 ;
"RTN","WVRALINK",172,0)
 ;---> WVCASE=RECONSTRUCTED CASE# OF PROCEDURE.
"RTN","WVRALINK",173,0)
 S WVCASE=$E(WVDATE,4,7)_$E(WVDATE,2,3)_"-"_WVCASE
"RTN","WVRALINK",174,0)
 ;---> QUIT IF NO CASE# XREF IN WOMEN'S HEALTH PROCEDURE FILE.
"RTN","WVRALINK",175,0)
 Q:'$D(^WV(790.1,"E",WVCASE))
"RTN","WVRALINK",176,0)
 ;
"RTN","WVRALINK",177,0)
 S WVIEN=$O(^WV(790.1,"E",WVCASE,0))
"RTN","WVRALINK",178,0)
 Q:'$D(^WV(790.1,WVIEN,0))
"RTN","WVRALINK",179,0)
 D RADMOD^WVPROC(WVIEN) ;update wh status to "open"
"RTN","WVRALINK",180,0)
 S WVPROV=+$$GET1^DIQ(790.1,WVIEN,.07,"I") ;get provider/requestor
"RTN","WVRALINK",181,0)
 S WVCMGR=+$$GET1^DIQ(790,DFN,.1,"I") ;get case manager
"RTN","WVRALINK",182,0)
 S:WVCMGR XMY(WVCMGR)=""
"RTN","WVRALINK",183,0)
 ; if no case manager, then get default case manager(s)
"RTN","WVRALINK",184,0)
 I 'WVCMGR S WVLOOP=0 F  S WVLOOP=$O(^WV(790.02,WVLOOP)) Q:'WVLOOP  D
"RTN","WVRALINK",185,0)
 .S WVCMGR=$$GET1^DIQ(790.02,WVLOOP,.02,"I")
"RTN","WVRALINK",186,0)
 .S:WVCMGR XMY(WVCMGR)=""
"RTN","WVRALINK",187,0)
 .Q
"RTN","WVRALINK",188,0)
 Q:$O(XMY(0))'>0  ;no case manager(s)
"RTN","WVRALINK",189,0)
 S:WVPROV XMY(WVPROV)=""
"RTN","WVRALINK",190,0)
 S XMDUZ=.5 ;message sender
"RTN","WVRALINK",191,0)
 S XMSUB="RAD/NM Rpt for WH patient is UNVERIFIED/DELETED"
"RTN","WVRALINK",192,0)
 S WVMSG(1)="        Patient: "_$P($G(^DPT(DFN,0)),U,1)_" (SSN: "_$$SSN^WVUTL1(DFN)_")"
"RTN","WVRALINK",193,0)
 S WVMSG(2)=" WH Accession #: "_$P($G(^WV(790.1,+WVIEN,0)),U,1)
"RTN","WVRALINK",194,0)
 S WVMSG(3)="  RAD/NM Case #: "_WVCASE
"RTN","WVRALINK",195,0)
 S WVMSG(4)=" "
"RTN","WVRALINK",196,0)
 S WVMSG(5)="NOTE: THIS PROCEDURE HAS BEEN ALTERED IN RADIOLOGY/NM."
"RTN","WVRALINK",197,0)
 S WVMSG(6)="Follow-up is required in the WOMEN'S HEALTH package!"
"RTN","WVRALINK",198,0)
 S XMTEXT="WVMSG("
"RTN","WVRALINK",199,0)
 D ^XMD
"RTN","WVRALINK",200,0)
 Q
"RTN","WVUTL9")
0^1^B9783142
"RTN","WVUTL9",1,0)
WVUTL9 ;HCIOFO/FT-Women's Health Utility Routine; ;1/14/00  14:40
"RTN","WVUTL9",2,0)
 ;;1.0;WOMEN'S HEALTH;**3,7,9**;Sep 30, 1998
"RTN","WVUTL9",3,0)
 ;
"RTN","WVUTL9",4,0)
DCM(SITE) ; Default case manager check
"RTN","WVUTL9",5,0)
 ; If there is a default case manager return 1 else 0.
"RTN","WVUTL9",6,0)
 I 'SITE Q 0
"RTN","WVUTL9",7,0)
 I $P($G(^WV(790.02,SITE,0)),U,2) Q 1
"RTN","WVUTL9",8,0)
 Q 0
"RTN","WVUTL9",9,0)
 ;
"RTN","WVUTL9",10,0)
NODCM ; No Default Case Manager message
"RTN","WVUTL9",11,0)
 W !,"Sorry, but a DEFAULT CASE MANAGER must be assigned for your facility"
"RTN","WVUTL9",12,0)
 W !,"before a patient can be entered into the Women's Health database.",!
"RTN","WVUTL9",13,0)
 W !,"Please use the EDIT SITE PARAMETERS option on the FILE MAINTENANCE"
"RTN","WVUTL9",14,0)
 W !,"menu to designate a DEFAULT CASE MANAGER.",!
"RTN","WVUTL9",15,0)
 D DIRZ^WVUTL3
"RTN","WVUTL9",16,0)
 Q
"RTN","WVUTL9",17,0)
 ;
"RTN","WVUTL9",18,0)
AGE(DFN) ;EP
"RTN","WVUTL9",19,0)
 ;---> YIELD PATIENT'S AGE IN YEARS.
"RTN","WVUTL9",20,0)
 ;---> REQUIRED VARIABLE: DFN=IEN PATIENT FILE
"RTN","WVUTL9",21,0)
 ; Different from AGE^WVUTL1. This EP returns age at date of death.
"RTN","WVUTL9",22,0)
 N X,X1,X2
"RTN","WVUTL9",23,0)
 Q:'$G(DFN) "NO PATIENT"
"RTN","WVUTL9",24,0)
 S X2=$$DOB^WVUTL1(DFN)
"RTN","WVUTL9",25,0)
 Q:'+X2 "UNKNOWN"
"RTN","WVUTL9",26,0)
 S X1=DT
"RTN","WVUTL9",27,0)
 I $$DECEASED^WVUTL1(DFN) S X1=+^DPT(DFN,.35)
"RTN","WVUTL9",28,0)
 D ^%DTC
"RTN","WVUTL9",29,0)
 Q $P(X/365.25,".")_"y/o"
"RTN","WVUTL9",30,0)
 ;
"RTN","WVUTL9",31,0)
GAPPT(DFN) ; Get future appointments from SDA^VADPT
"RTN","WVUTL9",32,0)
 ; Returns ^UTILITY("VASD",$J,#,"I") <-internal values
"RTN","WVUTL9",33,0)
 ;         ^UTILITY("VASD",$J,#,"E") <-external vlaues
"RTN","WVUTL9",34,0)
 ; piece 1: appointment date/time
"RTN","WVUTL9",35,0)
 ;       2: clinic
"RTN","WVUTL9",36,0)
 ;       3: status
"RTN","WVUTL9",37,0)
 ;       4: type
"RTN","WVUTL9",38,0)
 Q:'$G(DFN)
"RTN","WVUTL9",39,0)
 N VASD,VAERR
"RTN","WVUTL9",40,0)
 S VASD("F")=$$NOW^XLFDT,VASD("W")=1 ;get active/kept appts 
"RTN","WVUTL9",41,0)
 D SDA^VADPT
"RTN","WVUTL9",42,0)
 Q
"RTN","WVUTL9",43,0)
KAPPT(DFN) ; Kill APPOINTMENTS multiple
"RTN","WVUTL9",44,0)
 Q:'$G(DFN)
"RTN","WVUTL9",45,0)
 N DA,DIK
"RTN","WVUTL9",46,0)
 S DA=0,DA(1)=DFN
"RTN","WVUTL9",47,0)
 F  S DA=$O(^WV(790,DFN,2,DA)) Q:'DA  D
"RTN","WVUTL9",48,0)
 .S DIK="^WV(790,"_DFN_",2,"
"RTN","WVUTL9",49,0)
 .D ^DIK
"RTN","WVUTL9",50,0)
 .Q
"RTN","WVUTL9",51,0)
 Q
"RTN","WVUTL9",52,0)
SAPPT(DFN) ; Set APPOINTMENTS multiple
"RTN","WVUTL9",53,0)
 Q:'$G(DFN)
"RTN","WVUTL9",54,0)
 Q:'$D(^WV(790,DFN))
"RTN","WVUTL9",55,0)
 N DA,DIC,DLAYGO,LOOP,X
"RTN","WVUTL9",56,0)
 S LOOP=0,DIC="^WV(790,"_DFN_",2,",DIC(0)="L",DA(1)=DFN,DLAYGO=790
"RTN","WVUTL9",57,0)
 S DIC("P")=$P(^DD(790,2,0),U,2)
"RTN","WVUTL9",58,0)
 I '$D(^UTILITY("VASD",$J))  D  Q  ;no appts passed from SDA^VADPT
"RTN","WVUTL9",59,0)
 .S X="No Future Appointments"
"RTN","WVUTL9",60,0)
 .D ^DIC
"RTN","WVUTL9",61,0)
 .Q
"RTN","WVUTL9",62,0)
 F  S LOOP=$O(^UTILITY("VASD",$J,LOOP)) Q:'LOOP  D
"RTN","WVUTL9",63,0)
 .S X=$G(^UTILITY("VASD",$J,LOOP,"E"))
"RTN","WVUTL9",64,0)
 .Q:X=""
"RTN","WVUTL9",65,0)
 .S X=$P(X,U,1)_"   Clinic: "_$P(X,U,2)
"RTN","WVUTL9",66,0)
 .D ^DIC
"RTN","WVUTL9",67,0)
 .Q
"RTN","WVUTL9",68,0)
 Q
"RTN","WVUTL9",69,0)
KILLUG ; Kill Utility Global created by SDA^VADPT call
"RTN","WVUTL9",70,0)
 K ^UTILITY("VASD",$J)
"RTN","WVUTL9",71,0)
 Q
"RTN","WVUTL9",72,0)
IEN(WVFILE,WVALUE) ; Return ien of entry
"RTN","WVUTL9",73,0)
 ; input: WVFILE - File number
"RTN","WVUTL9",74,0)
 ;        WVALUE - value of the .01 field
"RTN","WVUTL9",75,0)
 I 'WVFILE!(WVALUE="") Q 0
"RTN","WVUTL9",76,0)
 Q +$O(^WV(WVFILE,"B",WVALUE,0))
"RTN","WVUTL9",77,0)
 ;
"RTN","WVUTL9",78,0)
GADD(DFN) ; Get COMPLETE ADDRESS with ADD^VADPT
"RTN","WVUTL9",79,0)
 ; Returns VAPA array
"RTN","WVUTL9",80,0)
 ; VAPA(1): street address-line 1
"RTN","WVUTL9",81,0)
 ; VAPA(2): street address-line 2
"RTN","WVUTL9",82,0)
 ; VAPA(3): street address-line 3
"RTN","WVUTL9",83,0)
 ; VAPA(4): city
"RTN","WVUTL9",84,0)
 ; VAPA(5): state file ien^state name
"RTN","WVUTL9",85,0)
 ; VAPA(6): zip code
"RTN","WVUTL9",86,0)
 Q:'$G(DFN)
"RTN","WVUTL9",87,0)
 D ADD^VADPT
"RTN","WVUTL9",88,0)
 Q
"RTN","WVUTL9",89,0)
KADD(DFN) ; Kill COMPLETE ADDRESS multiple
"RTN","WVUTL9",90,0)
 Q:'$G(DFN)
"RTN","WVUTL9",91,0)
 N DA,DIK
"RTN","WVUTL9",92,0)
 S DA=0,DA(1)=DFN
"RTN","WVUTL9",93,0)
 F  S DA=$O(^WV(790,DFN,3,DA)) Q:'DA  D
"RTN","WVUTL9",94,0)
 .S DIK="^WV(790,"_DFN_",3,"
"RTN","WVUTL9",95,0)
 .D ^DIK
"RTN","WVUTL9",96,0)
 .Q
"RTN","WVUTL9",97,0)
 Q
"RTN","WVUTL9",98,0)
SADD(DFN) ; Set COMPLETE ADDRESS multiple
"RTN","WVUTL9",99,0)
 Q:'$G(DFN)
"RTN","WVUTL9",100,0)
 Q:'$D(^WV(790,DFN))
"RTN","WVUTL9",101,0)
 N DA,DIC,DLAYGO,LOOP,WVSTATE,X
"RTN","WVUTL9",102,0)
 S LOOP=0,DIC="^WV(790,"_DFN_",3,",DIC(0)="L",DA(1)=DFN,DLAYGO=790
"RTN","WVUTL9",103,0)
 S DIC("P")=$P(^DD(790,3,0),U,2)
"RTN","WVUTL9",104,0)
 I '$D(VAPA)  D  Q  ;no address passed from ADD^VADPT
"RTN","WVUTL9",105,0)
 .S X="No Address on file"
"RTN","WVUTL9",106,0)
 .D ^DIC
"RTN","WVUTL9",107,0)
 .Q
"RTN","WVUTL9",108,0)
 F LOOP=1,2,3 D
"RTN","WVUTL9",109,0)
 .S X=$G(VAPA(LOOP))
"RTN","WVUTL9",110,0)
 .Q:X=""
"RTN","WVUTL9",111,0)
 .D ^DIC
"RTN","WVUTL9",112,0)
 .Q
"RTN","WVUTL9",113,0)
 S WVSTATE=""
"RTN","WVUTL9",114,0)
 I $P(VAPA(5),U,1) D
"RTN","WVUTL9",115,0)
 .S WVSTATE=$$GET1^DIQ(5,$P(VAPA(5),U,1),1,"E")
"RTN","WVUTL9",116,0)
 .Q
"RTN","WVUTL9",117,0)
 S X=VAPA(4)_", "_WVSTATE_"  "_VAPA(6)
"RTN","WVUTL9",118,0)
 D ^DIC
"RTN","WVUTL9",119,0)
 Q
"RTN","WVUTL9",120,0)
KVAR ; Kill off VADPT variables used
"RTN","WVUTL9",121,0)
 D KVAR^VADPT
"RTN","WVUTL9",122,0)
 Q
"UP",790,790.12,-1)
790^3
"UP",790,790.12,0)
790.12
"VER")
8.0^22
"^DD",790,790,3,0)
COMPLETE ADDRESS^790.12A^^3;0
"^DD",790,790,3,21,0)
^^1^1^3000114^
"^DD",790,790,3,21,1,0)
This multiple field contains the patient's complete mailing address.
"^DD",790,790,3,23,0)
^^2^2^3000114^^^^
"^DD",790,790,3,23,1,0)
The value for this field is created by calling the ADD^VADPT supported
"^DD",790,790,3,23,2,0)
API from the WVUTL9 routine.
"^DD",790,790,3,"DT")
3000114
"^DD",790,790.12,0)
COMPLETE ADDRESS SUB-FIELD^^.01^1
"^DD",790,790.12,0,"DT")
2991101
"^DD",790,790.12,0,"IX","B",790.12,.01)

"^DD",790,790.12,0,"NM","COMPLETE ADDRESS")

"^DD",790,790.12,0,"UP")
790
"^DD",790,790.12,.01,0)
COMPLETE ADDRESS^F^^0;1^K:$L(X)>50!($L(X)<3) X
"^DD",790,790.12,.01,1,0)
^.1
"^DD",790,790.12,.01,1,1,0)
790.12^B
"^DD",790,790.12,.01,1,1,1)
S ^WV(790,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",790,790.12,.01,1,1,2)
K ^WV(790,DA(1),3,"B",$E(X,1,30),DA)
"^DD",790,790.12,.01,3)
Answer must be 3-50 characters in length.
"^DD",790,790.12,.01,21,0)
^^15^15^3000114^
"^DD",790,790.12,.01,21,1,0)
This field contains the patient's complete address (street, city, state
"^DD",790,790.12,.01,21,2,0)
and zip code). This information is computed by a call to the ADD^VADPT API
"^DD",790,790.12,.01,21,3,0)
and stuffed into this multiple field whenever a notification letter is
"^DD",790,790.12,.01,21,4,0)
printed.
"^DD",790,790.12,.01,21,5,0)
 
"^DD",790,790.12,.01,21,6,0)
This address information is displayed in the text of the letter only when
"^DD",790,790.12,.01,21,7,0)
"|COMPLETE ADDRESS|" (without the quotes) appears in the form letter
"^DD",790,790.12,.01,21,8,0)
template.
"^DD",790,790.12,.01,21,9,0)
 
"^DD",790,790.12,.01,21,10,0)
 Example:
"^DD",790,790.12,.01,21,11,0)
 
"^DD",790,790.12,.01,21,12,0)
 STREET ADDRESS [LINE 1] <---if there is a value
"^DD",790,790.12,.01,21,13,0)
 STREET ADDRESS [LINE 2] <---if there is a value
"^DD",790,790.12,.01,21,14,0)
 STREET ADDRESS [LINE 3] <---if there is a value
"^DD",790,790.12,.01,21,15,0)
 CITY, STATE  ZIP CODE
"^DD",790,790.12,.01,"DT")
3000114
**END**
**END**
