EMERGENCY Released MPIF*1*45 SEQ #42
Extracted from mail message
**KIDS**:MPIF*1.0*45^

**INSTALL NAME**
MPIF*1.0*45
"BLD",2368,0)
MPIF*1.0*45^MASTER PATIENT INDEX VISTA^0^3060523^y
"BLD",2368,1,0)
^^3^3^3060518^
"BLD",2368,1,1,0)
ICN CHECKSUM ISSUE
"BLD",2368,1,2,0)
Refer to patch MPIF*1*45 in the FORUM Patch Module for a complete
"BLD",2368,1,3,0)
description.
"BLD",2368,4,0)
^9.64PA^^
"BLD",2368,"ABNS",0)
^9.66A^^
"BLD",2368,"ABPKG")
^^
"BLD",2368,"KRN",0)
^9.67PA^8989.52^19
"BLD",2368,"KRN",.4,0)
.4
"BLD",2368,"KRN",.401,0)
.401
"BLD",2368,"KRN",.402,0)
.402
"BLD",2368,"KRN",.403,0)
.403
"BLD",2368,"KRN",.5,0)
.5
"BLD",2368,"KRN",.84,0)
.84
"BLD",2368,"KRN",3.6,0)
3.6
"BLD",2368,"KRN",3.8,0)
3.8
"BLD",2368,"KRN",9.2,0)
9.2
"BLD",2368,"KRN",9.8,0)
9.8
"BLD",2368,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",2368,"KRN",9.8,"NM",1,0)
MPIFAPI^^0^B31723970
"BLD",2368,"KRN",9.8,"NM",2,0)
MPIF001^^0^B53646904
"BLD",2368,"KRN",9.8,"NM","B","MPIF001",2)

"BLD",2368,"KRN",9.8,"NM","B","MPIFAPI",1)

"BLD",2368,"KRN",19,0)
19
"BLD",2368,"KRN",19.1,0)
19.1
"BLD",2368,"KRN",101,0)
101
"BLD",2368,"KRN",409.61,0)
409.61
"BLD",2368,"KRN",771,0)
771
"BLD",2368,"KRN",870,0)
870
"BLD",2368,"KRN",8989.51,0)
8989.51
"BLD",2368,"KRN",8989.52,0)
8989.52
"BLD",2368,"KRN",8994,0)
8994
"BLD",2368,"KRN","B",.4,.4)

"BLD",2368,"KRN","B",.401,.401)

"BLD",2368,"KRN","B",.402,.402)

"BLD",2368,"KRN","B",.403,.403)

"BLD",2368,"KRN","B",.5,.5)

"BLD",2368,"KRN","B",.84,.84)

"BLD",2368,"KRN","B",3.6,3.6)

"BLD",2368,"KRN","B",3.8,3.8)

"BLD",2368,"KRN","B",9.2,9.2)

"BLD",2368,"KRN","B",9.8,9.8)

"BLD",2368,"KRN","B",19,19)

"BLD",2368,"KRN","B",19.1,19.1)

"BLD",2368,"KRN","B",101,101)

"BLD",2368,"KRN","B",409.61,409.61)

"BLD",2368,"KRN","B",771,771)

"BLD",2368,"KRN","B",870,870)

"BLD",2368,"KRN","B",8989.51,8989.51)

"BLD",2368,"KRN","B",8989.52,8989.52)

"BLD",2368,"KRN","B",8994,8994)

"BLD",2368,"QUES",0)
^9.62^^
"BLD",2368,"REQB",0)
^9.611^3^3
"BLD",2368,"REQB",1,0)
DG*5.3*711^1
"BLD",2368,"REQB",2,0)
MPIF*1.0*43^1
"BLD",2368,"REQB",3,0)
MPIF*1.0*41^1
"BLD",2368,"REQB","B","DG*5.3*711",1)

"BLD",2368,"REQB","B","MPIF*1.0*41",3)

"BLD",2368,"REQB","B","MPIF*1.0*43",2)

"MBREQ")
0
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
45^3060523^12564
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3060523
"PKG",282,22,1,"PAH",1,1,1,0)
ICN CHECKSUM ISSUE
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1*45 in the FORUM Patch Module for a complete
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","MPIF001")
0^2^B53646904^B51371245
"RTN","MPIF001",1,0)
MPIF001 ;ALB/RJS/CMC-UTILITY ROUTINE OF APIS ;JUL 12, 1996
"RTN","MPIF001",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,9,16,18,21,27,33,35,41,45**;30 Apr 99
"RTN","MPIF001",3,0)
 ;
"RTN","MPIF001",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIF001",5,0)
 ;  ^DPT( - #2070
"RTN","MPIF001",6,0)
 ; ^DPT("AICN" - #2070
"RTN","MPIF001",7,0)
 ; ^DPT("AMPIMIS" - #2070
"RTN","MPIF001",8,0)
 ; EXC^RGHLLOG - #2796
"RTN","MPIF001",9,0)
 ; START^RGHLLOG - #2796
"RTN","MPIF001",10,0)
 ; STOP^RGHLLOG - #2796
"RTN","MPIF001",11,0)
 ;
"RTN","MPIF001",12,0)
GETICN(DFN) ; This function returns the ICN, including checksum for a given
"RTN","MPIF001",13,0)
 ; DFN or -1^error message
"RTN","MPIF001",14,0)
 ; INPUT: DFN - ien in Patient file
"RTN","MPIF001",15,0)
 ;
"RTN","MPIF001",16,0)
 N RETURN,NODE
"RTN","MPIF001",17,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT1
"RTN","MPIF001",18,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT1
"RTN","MPIF001",19,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G EXIT1
"RTN","MPIF001",20,0)
 S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIF001",21,0)
 I $P(NODE,"^",1)'>0 S RETURN="-1^NO ICN" G EXIT1
"RTN","MPIF001",22,0)
 S RETURN=$P(NODE,"^",1)_"V"_$P(NODE,"^",2)
"RTN","MPIF001",23,0)
 I '$D(^DPT("AICN",$P(NODE,"^"),DFN)) S ^DPT("AICN",$P(NODE,"^"),DFN)=""
"RTN","MPIF001",24,0)
 ; ^ set AICN x-ref if missing one
"RTN","MPIF001",25,0)
EXIT1 ;
"RTN","MPIF001",26,0)
 Q RETURN
"RTN","MPIF001",27,0)
 ;
"RTN","MPIF001",28,0)
GETDFN(ICN) ; Returns DFN (ien Patient file) or -1^error message for a given ICN
"RTN","MPIF001",29,0)
 ; ICN - ICN for a given Patient in the Patient file
"RTN","MPIF001",30,0)
 N RETURN,DFN
"RTN","MPIF001",31,0)
 I $G(ICN)'>0 S RETURN="-1^NO ICN" G EXIT2
"RTN","MPIF001",32,0)
 I ICN["V" S ICN=+ICN
"RTN","MPIF001",33,0)
 I '$D(^DPT("AICN",ICN)) S RETURN="-1^ICN NOT IN DATABASE" G EXIT2
"RTN","MPIF001",34,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIF001",35,0)
 I $G(DFN)'>0 S RETURN="-1^BAD ICN CROSS-REFERENCE" G EXIT2
"RTN","MPIF001",36,0)
 I '$D(^DPT(DFN)) K ^DPT("AICN",ICN) S RETURN="-1^ICN NOT IN DATABASE" G EXIT2
"RTN","MPIF001",37,0)
 ;^ **41 - CHECK IF THE DFN HOLDING THIS ICN IS RELATED TO BOGUS XREF
"RTN","MPIF001",38,0)
 S RETURN=DFN
"RTN","MPIF001",39,0)
EXIT2 ;
"RTN","MPIF001",40,0)
 Q RETURN
"RTN","MPIF001",41,0)
 ;
"RTN","MPIF001",42,0)
ICNLC(DFN) ;This API will return an ICN if one exists or create and return
"RTN","MPIF001",43,0)
 ; a Local ICN and update the appropriate fields if a Local was created
"RTN","MPIF001",44,0)
 ; DFN= Patient IEN
"RTN","MPIF001",45,0)
 ; Returns ICN (local or National including checksum) or -1^error msg
"RTN","MPIF001",46,0)
 N ICN,TMP,CHKSUM,ICNX
"RTN","MPIF001",47,0)
 I $G(DFN)'>0 Q "-1^No DFN Passed"
"RTN","MPIF001",48,0)
 D LOCK
"RTN","MPIF001",49,0)
 S ICN=$$GETICN(DFN)
"RTN","MPIF001",50,0)
 I +ICN=-1 D
"RTN","MPIF001",51,0)
 .;no icn create a Local ICN
"RTN","MPIF001",52,0)
 .S ICN=$$EN2^MPIFAPI()
"RTN","MPIF001",53,0)
 .S CHKSUM=$P(ICN,"V",2),ICNX=$P(ICN,"V")
"RTN","MPIF001",54,0)
 .S NOLOCK=""
"RTN","MPIF001",55,0)
 .I ICNX="" K NOLOCK S ICN="-1^PROBLEM CREATING LOCAL ICN" Q
"RTN","MPIF001",56,0)
 .S TMP=$$SETICN(DFN,ICNX,CHKSUM)
"RTN","MPIF001",57,0)
 .I +TMP=-1 K NOLOCK Q
"RTN","MPIF001",58,0)
 .S TMP=$$SETLOC(DFN,1)
"RTN","MPIF001",59,0)
 .S TMP=$$CHANGE(DFN,$P($$SITE^VASITE(),"^"))
"RTN","MPIF001",60,0)
 .K NOLOCK
"RTN","MPIF001",61,0)
 D UNLOCK
"RTN","MPIF001",62,0)
 Q ICN
"RTN","MPIF001",63,0)
 ;
"RTN","MPIF001",64,0)
CMOR2(DFN) ; Returns CMOR Site Name or -1^error message
"RTN","MPIF001",65,0)
 ; DFN = Patient IEN
"RTN","MPIF001",66,0)
 I $G(DFN)'>0 Q "-1^No DFN Passed"
"RTN","MPIF001",67,0)
 N NODE
"RTN","MPIF001",68,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",69,0)
 Q:$P(NODE,"^",3)="" "-1^No CMOR"
"RTN","MPIF001",70,0)
 Q $$CMORNAME($P(NODE,"^",3))
"RTN","MPIF001",71,0)
 ;
"RTN","MPIF001",72,0)
CMORNAME(CIEN) ; Returns CMOR site name or -1^error message
"RTN","MPIF001",73,0)
 ; CIEN - ien from Institution file
"RTN","MPIF001",74,0)
 ;
"RTN","MPIF001",75,0)
 Q:CIEN="" "-1^No Institution parameter"
"RTN","MPIF001",76,0)
 N INST
"RTN","MPIF001",77,0)
 S INST=$$NNT^XUAF4(CIEN)
"RTN","MPIF001",78,0)
 Q:INST="" "-1^No Institution for that IEN"
"RTN","MPIF001",79,0)
 Q:$P(INST,"^")="" "-1^No Name for this Institution"
"RTN","MPIF001",80,0)
 Q $P(INST,"^")
"RTN","MPIF001",81,0)
 ;
"RTN","MPIF001",82,0)
GETVCCI(DFN) ; Returns CMOR or -1^error message for a given patient
"RTN","MPIF001",83,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",84,0)
 N RETURN,NODE,PTR,STANUM
"RTN","MPIF001",85,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT3
"RTN","MPIF001",86,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT3
"RTN","MPIF001",87,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G EXIT3
"RTN","MPIF001",88,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",89,0)
 S PTR=$P(NODE,"^",3)
"RTN","MPIF001",90,0)
 I PTR'>0 S RETURN="-1^NO CMOR DEFINED FOR PT" G EXIT3
"RTN","MPIF001",91,0)
 S STANUM=$P($$NNT^XUAF4(PTR),"^",2)
"RTN","MPIF001",92,0)
 I STANUM'>0 S RETURN="-1^PTS CMOR IS DANGLING PTR" G EXIT3
"RTN","MPIF001",93,0)
 S RETURN=STANUM
"RTN","MPIF001",94,0)
EXIT3 ;
"RTN","MPIF001",95,0)
 Q RETURN
"RTN","MPIF001",96,0)
 ;
"RTN","MPIF001",97,0)
CHANGE(DFN,VCCI) ;
"RTN","MPIF001",98,0)
 ; ** This function is only to be used by approved packages **
"RTN","MPIF001",99,0)
 ;
"RTN","MPIF001",100,0)
 ; This function updates the CMOR field in the Patient file
"RTN","MPIF001",101,0)
 ; DFN = ien in Patient file
"RTN","MPIF001",102,0)
 ; VCCI = CMOR ien from the institution file
"RTN","MPIF001",103,0)
 ; returned:  -1^error message - problem
"RTN","MPIF001",104,0)
 ;             1 - successful
"RTN","MPIF001",105,0)
 ; Exception will be generated if Update to File Fails only
"RTN","MPIF001",106,0)
 N RETURN,DIQUIET,DIE,DA,DR,Y,X,DIC
"RTN","MPIF001",107,0)
 S (RETURN,DIQUIET)=1
"RTN","MPIF001",108,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT4
"RTN","MPIF001",109,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT4
"RTN","MPIF001",110,0)
 I $G(VCCI)="" S RETURN="-1^NO CMOR PASSED" G EXIT4
"RTN","MPIF001",111,0)
 N CNT,TIEN S DIQUIET=1,CNT=0
"RTN","MPIF001",112,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",113,0)
 ; moved to here to fix problem with timing
"RTN","MPIF001",114,0)
 I $E($$GETICN(DFN),1,3)=$P($$SITE^VASITE(),"^",3) S VCCI=$P($$SITE^VASITE(),"^")
"RTN","MPIF001",115,0)
 ; ^ to be sure site is self for a local icn
"RTN","MPIF001",116,0)
 S VCCI="`"_VCCI
"RTN","MPIF001",117,0)
 ; ^ Have ien stuff added to use ien instead of station number
"RTN","MPIF001",118,0)
REP S DIE="^DPT(",DA=DFN,DR="991.03///^S X=VCCI"
"RTN","MPIF001",119,0)
 D ^DIE
"RTN","MPIF001",120,0)
 S CNT=CNT+1
"RTN","MPIF001",121,0)
 S TIEN=$P($$MPINODE^MPIFAPI(DFN),"^",3)
"RTN","MPIF001",122,0)
 I "`"_TIEN'=VCCI&(CNT<4) G REP
"RTN","MPIF001",123,0)
 I "`"_TIEN'=VCCI&(CNT>3) D
"RTN","MPIF001",124,0)
 .S RETURN="-1^Couldn't Update CMOR"
"RTN","MPIF001",125,0)
 .D START^RGHLLOG(0)
"RTN","MPIF001",126,0)
 .D EXC^RGHLLOG(221,"Unable to update CMOR to "_$$STA^XUAF4(TIEN)_" for patient DFN= "_DFN,DFN)
"RTN","MPIF001",127,0)
 .D STOP^RGHLLOG(0)
"RTN","MPIF001",128,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",129,0)
EXIT4 ;
"RTN","MPIF001",130,0)
 Q RETURN
"RTN","MPIF001",131,0)
 ;
"RTN","MPIF001",132,0)
SETICN(DFN,ICN,CHKSUM) ;
"RTN","MPIF001",133,0)
 ; ** this function is to only be used by approved packages **
"RTN","MPIF001",134,0)
 ;
"RTN","MPIF001",135,0)
 ; This function updates the ICN and ICN Checksum fields in the Patient 
"RTN","MPIF001",136,0)
 ; file for a given patient.
"RTN","MPIF001",137,0)
 ; DFN - ien in the Patient file to be updated
"RTN","MPIF001",138,0)
 ; ICN - ICN (without checksum) to be updated
"RTN","MPIF001",139,0)
 ; CHKSUM - ICN checksum
"RTN","MPIF001",140,0)
 ; return:  -1^error message - problem
"RTN","MPIF001",141,0)
 ;          1 - successful
"RTN","MPIF001",142,0)
 N RETURN,DIQUIET,DIE,DA,DR,RGRSICN,Y,ERR
"RTN","MPIF001",143,0)
 S (RETURN,DIQUIET,RGRSICN)=1
"RTN","MPIF001",144,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT5
"RTN","MPIF001",145,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT5
"RTN","MPIF001",146,0)
 I $G(ICN)="" S RETURN="-1^NO ICN PASSED" G EXIT5
"RTN","MPIF001",147,0)
 I $G(CHKSUM)="" S RETURN="-1^NO CHKSUM PASSED" G EXIT5
"RTN","MPIF001",148,0)
 I +$$GETICN(DFN)>0 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3),$E($$GETICN(DFN),1,3)'=$E(ICN,1,3) S RETURN="-1^Don't overwrite national with local" G EXIT5
"RTN","MPIF001",149,0)
 ; ^ stop local from overwriting a national ICN
"RTN","MPIF001",150,0)
 I +$$GETICN(DFN)>0 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3),$E($$GETICN(DFN),1,3)=$P($$SITE^VASITE(),"^",3) S RETURN="-1^Don't overwrite local ICN with another Local ICN" G EXIT5
"RTN","MPIF001",151,0)
 ; ^ STOP LOCAL FROM OVERWRITING ANOTHER LOCAL ICN
"RTN","MPIF001",152,0)
 I $D(^DPT("AICN",ICN)) D
"RTN","MPIF001",153,0)
 .Q:DFN=$O(^DPT("AICN",ICN,""))
"RTN","MPIF001",154,0)
 .I DFN'=($O(^DPT("AICN",ICN,""))) D
"RTN","MPIF001",155,0)
 ..N DFN2 S DFN2=$O(^DPT("AICN",ICN,""))
"RTN","MPIF001",156,0)
 ..I '$D(TWODFN) D TWODFNS^MPIF002(DFN2,DFN,ICN)
"RTN","MPIF001",157,0)
 .S RETURN="-1^ICN ALREADY IN USE"
"RTN","MPIF001",158,0)
 G:+RETURN=-1 EXIT5
"RTN","MPIF001",159,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",160,0)
 S DIQUIET=1
"RTN","MPIF001",161,0)
 S CHKSUM=$$CHECKDG^MPIFSPC(ICN) ;**45 calculate checksum based upon what's passed for ICN and use that to update 991.02
"RTN","MPIF001",162,0)
 S DIE="^DPT(",DA=DFN,DR="991.01///^S X=ICN;991.02///^S X=CHKSUM"
"RTN","MPIF001",163,0)
 D ^DIE
"RTN","MPIF001",164,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",165,0)
 I +RETURN>0 D
"RTN","MPIF001",166,0)
 .K ^DPT("AMPIMIS",DFN)
"RTN","MPIF001",167,0)
 .I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3) S ERR=$$SETLOC(DFN,1)
"RTN","MPIF001",168,0)
 .I $E(ICN,1,3)'=$P($$SITE^VASITE(),"^",3) S ERR=$$SETLOC(DFN,0)
"RTN","MPIF001",169,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",170,0)
EXIT5 ;
"RTN","MPIF001",171,0)
 Q RETURN
"RTN","MPIF001",172,0)
 ;
"RTN","MPIF001",173,0)
SETLOC(DFN,DELFLAG) ;
"RTN","MPIF001",174,0)
 ; ** This function should be only used by approved packages **
"RTN","MPIF001",175,0)
 ;
"RTN","MPIF001",176,0)
 ; This function updates the LOCALLY ASSIGNED ICN field in the Patient
"RTN","MPIF001",177,0)
 ; for the given patient
"RTN","MPIF001",178,0)
 ;DFN - ien from Patient file of patient to be updated
"RTN","MPIF001",179,0)
 ;DELFLAG - 1 is to turn the flag on
"RTN","MPIF001",180,0)
 ;        - 0 is to turn off the flag
"RTN","MPIF001",181,0)
 ;
"RTN","MPIF001",182,0)
 N RETURN,DIQUIET,DIE,DA,DR,VALUE,Y
"RTN","MPIF001",183,0)
 S (RETURN,DIQUIET)=1
"RTN","MPIF001",184,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT6
"RTN","MPIF001",185,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT6
"RTN","MPIF001",186,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",187,0)
 S DIQUIET=1,VALUE=$S($G(DELFLAG)=0:"@",1:1)
"RTN","MPIF001",188,0)
 S DIE="^DPT(",DA=DFN,DR="991.04///^S X=VALUE"
"RTN","MPIF001",189,0)
 D ^DIE
"RTN","MPIF001",190,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",191,0)
 I +RETURN>0 K ^DPT("AMPIMIS",DFN)
"RTN","MPIF001",192,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",193,0)
EXIT6 ;
"RTN","MPIF001",194,0)
 Q RETURN
"RTN","MPIF001",195,0)
 ;
"RTN","MPIF001",196,0)
IFLOCAL(DFN) ; This function is used to see if a patient has a local ICN
"RTN","MPIF001",197,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",198,0)
 ; returned:  0 = patient does not exist, dfn is not defined or no MPI node OR Patient does not have a local ICN
"RTN","MPIF001",199,0)
 ;            1 = patient has a Local ICN assigned
"RTN","MPIF001",200,0)
 Q:$G(DFN)="" 0
"RTN","MPIF001",201,0)
 Q:$G(^DPT(DFN,0))="" 0
"RTN","MPIF001",202,0)
 Q:'$D(^DPT(DFN,"MPI")) 0
"RTN","MPIF001",203,0)
 Q:$E($$GETICN(DFN),1,3)=$P($$SITE^VASITE,"^",3) 1
"RTN","MPIF001",204,0)
 Q 0
"RTN","MPIF001",205,0)
 ;
"RTN","MPIF001",206,0)
IFVCCI(DFN) ; this function returns 1 if your facility is the CMOR for the given pt
"RTN","MPIF001",207,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",208,0)
 ; returns: 1 = your site in the CMOR for this patient
"RTN","MPIF001",209,0)
 ;          -1 = your site is not the CMOR for this patient
"RTN","MPIF001",210,0)
 ;          0^ERROR MSG
"RTN","MPIF001",211,0)
 N VCCI,SITE
"RTN","MPIF001",212,0)
 I $G(DFN)'>0 Q "0^No DFN Passed"
"RTN","MPIF001",213,0)
 S VCCI=$P($$GETVCCI(DFN),"^",1)
"RTN","MPIF001",214,0)
 S SITE=$P($$SITE^VASITE,"^",3)\1
"RTN","MPIF001",215,0)
 I $P(VCCI,"^",1)=-1 Q -1
"RTN","MPIF001",216,0)
 I VCCI'=SITE Q -1
"RTN","MPIF001",217,0)
 Q 1
"RTN","MPIF001",218,0)
 ;
"RTN","MPIF001",219,0)
HL7CMOR(DFN,SEP) ; This function returns the CMOR station number and institution name for
"RTN","MPIF001",220,0)
 ; the given patient.
"RTN","MPIF001",221,0)
 ; DFN = ien for patient in Patient file
"RTN","MPIF001",222,0)
 ; SEP = delimiter to separate station number and name
"RTN","MPIF001",223,0)
 ; returned:  Station Number <sep> Institution name
"RTN","MPIF001",224,0)
 ;            -1^error message
"RTN","MPIF001",225,0)
 N RETURN,NODE,PTR,STAT
"RTN","MPIF001",226,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT7
"RTN","MPIF001",227,0)
 I $G(SEP)="" S RETURN="-1^NO FIELD SEPERATOR" G EXIT7
"RTN","MPIF001",228,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT7
"RTN","MPIF001",229,0)
 I $$MPINODE^MPIFAPI(DFN)<1 S RETURN="-1^NO MPI NODE" G EXIT7
"RTN","MPIF001",230,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",231,0)
 S PTR=$P(NODE,"^",3)
"RTN","MPIF001",232,0)
 I PTR'>0 S RETURN="-1^NO CMOR DEFINED FOR PT" G EXIT7
"RTN","MPIF001",233,0)
 S STAT=$$NNT^XUAF4(PTR)
"RTN","MPIF001",234,0)
 I STAT="" S RETURN="-1^PTS CMOR IS DANGLING PTR" G EXIT7
"RTN","MPIF001",235,0)
 I $P(STAT,"^")="" S RETURN="-1^NO INSTITUTION NAME" G EXIT7
"RTN","MPIF001",236,0)
 S RETURN=$P(STAT,"^",2)_SEP_$P(STAT,"^")
"RTN","MPIF001",237,0)
EXIT7 ;
"RTN","MPIF001",238,0)
 Q RETURN
"RTN","MPIF001",239,0)
 ;
"RTN","MPIF001",240,0)
LOCK ;
"RTN","MPIF001",241,0)
 F  L +^DPT(DFN,"MPI"):10 Q:$T
"RTN","MPIF001",242,0)
 Q
"RTN","MPIF001",243,0)
 ;
"RTN","MPIF001",244,0)
UNLOCK ;
"RTN","MPIF001",245,0)
 L -^DPT(DFN,"MPI")
"RTN","MPIF001",246,0)
 Q
"RTN","MPIFAPI")
0^1^B31723970^B28137088
"RTN","MPIFAPI",1,0)
MPIFAPI ;CMC/BP-APIS FOR MPI ;DEC 21, 1998
"RTN","MPIFAPI",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,14,16,17,21,27,28,33,35,37,43,45**;30 Apr 99
"RTN","MPIFAPI",3,0)
 ; Integration Agreements Utilized:
"RTN","MPIFAPI",4,0)
 ;   ^DPT( - #2070 and #4079
"RTN","MPIFAPI",5,0)
 ;   ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFAPI",6,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFAPI",7,0)
 ;
"RTN","MPIFAPI",8,0)
EN2() ;NEW ENTRY POINT FOR LOCALS
"RTN","MPIFAPI",9,0)
 N MPIOUT,DIC,MPICHK,MPINCK,MPINNM,MPINUM1,DA,MPINUM
"RTN","MPIFAPI",10,0)
 I $O(^MPIF(984.1,0))="" G SETUP
"RTN","MPIFAPI",11,0)
AGN2 L +^MPIF(984.1):1 E  H 3 G AGN2
"RTN","MPIFAPI",12,0)
 S MPINUM=0,X=$$SITE^VASITE,X=$P(X,"^",3),X=X\1
"RTN","MPIFAPI",13,0)
 S DIC="^MPIF(984.1,",DIC(0)="XZ" D ^DIC
"RTN","MPIFAPI",14,0)
 S MPINUM1=$P(Y(0),"^",4),MPICHK=$P(Y(0),"^",5),MPINNM=MPINUM1+1
"RTN","MPIFAPI",15,0)
 S MPINUM=MPINUM1_"V"_MPICHK,MPINCK=$$CHECKDG^MPIFSPC(MPINNM)
"RTN","MPIFAPI",16,0)
 S DA=1,DIE="^MPIF(984.1,",DR="1////^S X=MPINUM1;2////^S X=MPICHK;3////^S X=MPINNM;5////"_MPINCK
"RTN","MPIFAPI",17,0)
 D ^DIE
"RTN","MPIFAPI",18,0)
 K DIE,DR,X,Y
"RTN","MPIFAPI",19,0)
 L -^MPIF(984.1)
"RTN","MPIFAPI",20,0)
 Q MPINUM
"RTN","MPIFAPI",21,0)
SETUP ;
"RTN","MPIFAPI",22,0)
 N CHK,NUM,NXTCHK,NXTNUM,SITE,DA
"RTN","MPIFAPI",23,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFAPI",24,0)
 S DIC="^MPIF(984.1,",DA=1,DIC(0)="",X=SITE
"RTN","MPIFAPI",25,0)
 S NUM=SITE_"0000000",CHK=$$CHECKDG^MPIFSPC(NUM),MPINUM=NUM_"V"_CHK
"RTN","MPIFAPI",26,0)
 S NXTNUM=NUM+1,NXTCHK=$$CHECKDG^MPIFSPC(NXTNUM)
"RTN","MPIFAPI",27,0)
 S DIC("DR")="1////^S X=NUM;2////^S X=CHK;3////^S X=NXTNUM;5////"_NXTCHK
"RTN","MPIFAPI",28,0)
 K DD,D0
"RTN","MPIFAPI",29,0)
 D FILE^DICN
"RTN","MPIFAPI",30,0)
 K DIC,X,Y
"RTN","MPIFAPI",31,0)
 Q MPINUM
"RTN","MPIFAPI",32,0)
 ;
"RTN","MPIFAPI",33,0)
MPILINK() ;returns MPI logical Link
"RTN","MPIFAPI",34,0)
 N MPIL,MPILINK
"RTN","MPIFAPI",35,0)
 D LINK^HLUTIL3("MPI",.MPIL)
"RTN","MPIFAPI",36,0)
 I '$D(MPIL) Q "-1^NOT DEFINED"
"RTN","MPIFAPI",37,0)
 S MPILINK=$O(MPIL(0))
"RTN","MPIFAPI",38,0)
 I MPILINK="" Q "-1^NOT DEFINED"
"RTN","MPIFAPI",39,0)
 S MPILINK=$G(MPIL(MPILINK))
"RTN","MPIFAPI",40,0)
 Q MPILINK
"RTN","MPIFAPI",41,0)
 ;
"RTN","MPIFAPI",42,0)
SUBNUM(DFN) ; returns SCN from MPI node for given DFN
"RTN","MPIFAPI",43,0)
 ; DFN - ien of patient file
"RTN","MPIFAPI",44,0)
 ; returns:  -1^error message << always returns.
"RTN","MPIFAPI",45,0)
 ;*** Subscription control numbers no longer exist
"RTN","MPIFAPI",46,0)
 Q "-1^No Subscription Control Number for DFN "_DFN
"RTN","MPIFAPI",47,0)
 ;
"RTN","MPIFAPI",48,0)
MPINODE(DFN) ; returns MPI node for given DFN
"RTN","MPIFAPI",49,0)
 ;DFN - patient file ien
"RTN","MPIFAPI",50,0)
 ; returns:  -1^error message or MPI node from patient file
"RTN","MPIFAPI",51,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",52,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",53,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",54,0)
 L +^DPT("MPI",DFN):10 ;**45 added lock check for getting ICN data back
"RTN","MPIFAPI",55,0)
 N NODE S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIFAPI",56,0)
 I NODE=""!(NODE?."^") S NODE="-1^No MPI data for DFN "_DFN
"RTN","MPIFAPI",57,0)
 I +NODE>0 D
"RTN","MPIFAPI",58,0)
 .;**45 checking if checksum for ICN is correct, if not update the 991.02 field
"RTN","MPIFAPI",59,0)
 .; and include new value in NODE returned.
"RTN","MPIFAPI",60,0)
 .N CHK S CHK=$$CHECKDG^MPIFSPC($P(NODE,"^"))
"RTN","MPIFAPI",61,0)
 .I CHK'=$P(NODE,"^",2) D SETICN^MPIF001(DFN,$P(NODE,"^"),CHK) S $P(NODE,"^",2)=CHK
"RTN","MPIFAPI",62,0)
 L -^DPT("MPI",DFN)
"RTN","MPIFAPI",63,0)
 Q NODE
"RTN","MPIFAPI",64,0)
 ;
"RTN","MPIFAPI",65,0)
GETADFN(ICN) ; return DFN ONLY if ICN is the active ICN
"RTN","MPIFAPI",66,0)
 ; ICN - Integration Control Number for patient to be returned
"RTN","MPIFAPI",67,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",68,0)
 ;           DFN - IEN for the patient entry in the Patient file (#2)
"RTN","MPIFAPI",69,0)
 N RETURN,DFN
"RTN","MPIFAPI",70,0)
 I $G(ICN)'>0 Q "-1^NO ICN"
"RTN","MPIFAPI",71,0)
 I '$D(^DPT("AICN",ICN)) Q "-1^ICN NOT IN DATABASE"
"RTN","MPIFAPI",72,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIFAPI",73,0)
 I $G(DFN)'>0 Q "-1^BAD AICN CROSS-REFERENCE"
"RTN","MPIFAPI",74,0)
 I $P($G(^DPT(DFN,"MPI")),"^")'=ICN Q "-1^ICN is not Active one"
"RTN","MPIFAPI",75,0)
 Q DFN
"RTN","MPIFAPI",76,0)
 ;
"RTN","MPIFAPI",77,0)
UPDATE(DFN,ARR,MPISILNT,REMOVE) ;api to edit 'mpi','mpifhis' and 'mpicmor' nodes
"RTN","MPIFAPI",78,0)
 ;**37 UPDATE module moved 3/30/05 from MPIFAPI into MPIFAPI1.
"RTN","MPIFAPI",79,0)
 ;Linetag must remain due to DBIA #2706.
"RTN","MPIFAPI",80,0)
 Q $$UPDATE^MPIFAPI1(DFN,ARR,.MPISILNT,.REMOVE)
"RTN","MPIFAPI",81,0)
 ;
"RTN","MPIFAPI",82,0)
MPIQ(DFN) ;MPI QUERY
"RTN","MPIFAPI",83,0)
 L +^DPT(DFN):2 I '$T,'$D(MPIFS) W $C(7),!!,"Patient is being edited. No attempt will be made to connect to the MPI." H 2 Q
"RTN","MPIFAPI",84,0)
 I '$D(MPIFS) D  ;Not from SmartCard background job
"RTN","MPIFAPI",85,0)
 .;**37 mods to L -^DPT
"RTN","MPIFAPI",86,0)
 .I $G(DGNEW)=1 D  ;New patient, fields always blank, ask
"RTN","MPIFAPI",87,0)
 ..D WRTLN
"RTN","MPIFAPI",88,0)
 ..S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",89,0)
 ..S DR=".2403;.092;.093;1",DR(2,2.01)=".01" D ^DIE K DA,DIE,DR Q
"RTN","MPIFAPI",90,0)
 .I $G(DGNEW)="" D  ;Existing patient, get current values
"RTN","MPIFAPI",91,0)
 ..K MPIFARR N MPIDOB,IMPRS,MPIMMN,MPICTY,MPIST
"RTN","MPIFAPI",92,0)
 ..S DIC=2,DR=".02;.03;.09;.092;.093;.2403;994;1",DR(2.01)=".01"
"RTN","MPIFAPI",93,0)
 ..S DA=DFN,DA(2.01)=1,DIQ(0)="EI",DIQ="MPIFARR"
"RTN","MPIFAPI",94,0)
 ..D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",95,0)
 ..;build DR from blank fields / imprecise DOB / pseudo SSN
"RTN","MPIFAPI",96,0)
 ..S DR=""
"RTN","MPIFAPI",97,0)
 ..S MPIDOB=$G(MPIFARR(2,DFN,.03,"I")) ;DATE OF BIRTH
"RTN","MPIFAPI",98,0)
 ..I MPIDOB="" S DR=DR_".03;" ;DOB null
"RTN","MPIFAPI",99,0)
 ..;Is DOB imprecise?
"RTN","MPIFAPI",100,0)
 ..I MPIDOB'="" S IMPRS=0 D
"RTN","MPIFAPI",101,0)
 ...I $E(MPIDOB,4,7)="0000" S IMPRS=1 ;Year only; no month/day
"RTN","MPIFAPI",102,0)
 ...I ($E(MPIDOB,6,7)="00")&($E(MPIDOB,4,5)'="00") S IMPRS=1 ;Year/month only; no day
"RTN","MPIFAPI",103,0)
 ...I IMPRS=1 S DR=DR_".03;" ;DOB imprecise
"RTN","MPIFAPI",104,0)
 ..I $G(MPIFARR(2,DFN,.02,"I"))="" S DR=DR_".02;" ;SEX
"RTN","MPIFAPI",105,0)
 ..I ($G(MPIFARR(2,DFN,.09,"E"))="")!($G(MPIFARR(2,DFN,.09,"E"))["P") S DR=DR_".09;" ;SOCIAL SECURITY NUMBER
"RTN","MPIFAPI",106,0)
 ..I $G(MPIFARR(2,DFN,994,"I"))="" S DR=DR_"994;" ;MULTIPLE BIRTH INDICATOR
"RTN","MPIFAPI",107,0)
 ..S MPIMMN=$G(MPIFARR(2,DFN,.2403,"E")) ;MOTHER'S MAIDEN NAME
"RTN","MPIFAPI",108,0)
 ..I $$VALDT(MPIMMN) S DR=DR_".2403;" ;Validate MMN value
"RTN","MPIFAPI",109,0)
 ..S MPICTY=$G(MPIFARR(2,DFN,.092,"E")) ;PLACE OF BIRTH [CITY]
"RTN","MPIFAPI",110,0)
 ..S MPIST=$G(MPIFARR(2,DFN,.093,"E")) ;PLACE OF BIRTH [STATE]
"RTN","MPIFAPI",111,0)
 ..I $S($$VALDT(MPICTY):1,$$VALDT(MPIST):1,1:0) S DR=DR_".092;.093;" ;Validate POB [CITY] & [STATE] value
"RTN","MPIFAPI",112,0)
 ..I $G(MPIFARR(2.01,1,.01,"E"))="" S DR=DR_"1",DR(2,2.01)=".01" ;ALIAS
"RTN","MPIFAPI",113,0)
 ..K MPIFARR
"RTN","MPIFAPI",114,0)
 ..I DR'="" D
"RTN","MPIFAPI",115,0)
 ...D WRTLN
"RTN","MPIFAPI",116,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",117,0)
 ...D ^DIE K DA,DIE,DR
"RTN","MPIFAPI",118,0)
 L -^DPT(DFN)
"RTN","MPIFAPI",119,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFAPI",120,0)
 K MPIFRTN D VTQ^MPIFQ0
"RTN","MPIFAPI",121,0)
 ;**43 No longer get list of potential matches to pick from
"RTN","MPIFAPI",122,0)
 ;I $G(MPIFRTN)="" D
"RTN","MPIFAPI",123,0)
 ;. ^ Quit at LM screen when presented with a list of possible matches
"RTN","MPIFAPI",124,0)
 ;. \/ setup Local ICN and proceed
"RTN","MPIFAPI",125,0)
 ;.N ICN,ERR
"RTN","MPIFAPI",126,0)
 ;.S ICN=$$EN2^MPIFAPI()
"RTN","MPIFAPI",127,0)
 ;.Q:ICN=""!(+ICN=-1)
"RTN","MPIFAPI",128,0)
 ;.S ERR=$$SETICN^MPIF001(DFN,+ICN,$P(ICN,"V",2))
"RTN","MPIFAPI",129,0)
 ;.Q:+ERR=-1
"RTN","MPIFAPI",130,0)
 ;. ^ couldn't set ICN don't set other fields
"RTN","MPIFAPI",131,0)
 ;.S ERR=$$SETLOC^MPIF001(DFN,1),ERR=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFAPI",132,0)
 K MPIFRTN,ZTREQ
"RTN","MPIFAPI",133,0)
 Q
"RTN","MPIFAPI",134,0)
 ;
"RTN","MPIFAPI",135,0)
MPIQQ(PDFN) ; Entry point for queuing d/c
"RTN","MPIFAPI",136,0)
 ; Returned is -1^error message OR Task #
"RTN","MPIFAPI",137,0)
 Q:'$D(PDFN) "-1^No DFN passed"
"RTN","MPIFAPI",138,0)
 S ZTRTN="MPIQ^MPIFAPI(PDFN)"
"RTN","MPIFAPI",139,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFAPI",140,0)
 S ZTSAVE("PDFN")=PDFN,ZTSAVE("MPIFS")=1
"RTN","MPIFAPI",141,0)
 ; ^ silent flag
"RTN","MPIFAPI",142,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFAPI",143,0)
 D ^%ZTLOAD
"RTN","MPIFAPI",144,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFAPI",145,0)
 N TSK S TSK=ZTSK
"RTN","MPIFAPI",146,0)
 K ZTSAVE,ZTRTN,ZTIO,ZTDTH,ZTSK
"RTN","MPIFAPI",147,0)
 Q TSK
"RTN","MPIFAPI",148,0)
 ;
"RTN","MPIFAPI",149,0)
WRTLN ;**37 Write intro text ONLY if there are fields to ask
"RTN","MPIFAPI",150,0)
 W !!,"Please verify or update the following information:",!
"RTN","MPIFAPI",151,0)
 Q
"RTN","MPIFAPI",152,0)
 ;
"RTN","MPIFAPI",153,0)
VALDT(VAL) ;**37 Validate value passed in.
"RTN","MPIFAPI",154,0)
 ;Prompt if field contains invalid data (e.g., UNKNOWN, NOT KNOWN, etc.)
"RTN","MPIFAPI",155,0)
 ;Returns 0 if not found
"RTN","MPIFAPI",156,0)
 ;Returns 1 if found
"RTN","MPIFAPI",157,0)
 I VAL="" Q 1
"RTN","MPIFAPI",158,0)
 I $E($$UP^XLFSTR(VAL),1,3)="UNK" Q 1
"RTN","MPIFAPI",159,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NONE" Q 1
"RTN","MPIFAPI",160,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NOT " Q 1
"RTN","MPIFAPI",161,0)
 I $$UP^XLFSTR(VAL)["UNAVAILABLE" Q 1
"RTN","MPIFAPI",162,0)
 I $$UP^XLFSTR(VAL)["DECEASED" Q 1
"RTN","MPIFAPI",163,0)
 I $E($$UP^XLFSTR(VAL),1,2)="DC" Q 1
"RTN","MPIFAPI",164,0)
 Q 0
"RTN","MPIFAPI",165,0)
 ;
"VER")
8.0^22.0
"BLD",2368,6)
^42
**END**
**END**
