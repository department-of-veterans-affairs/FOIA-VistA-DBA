Released IVM*2*116 SEQ #98
Extracted from mail message
**KIDS**:IVM*2.0*116^

**INSTALL NAME**
IVM*2.0*116
"BLD",6089,0)
IVM*2.0*116^INCOME VERIFICATION MATCH^0^3060418^y
"BLD",6089,4,0)
^9.64PA^^
"BLD",6089,"KRN",0)
^9.67PA^8989.52^19
"BLD",6089,"KRN",.4,0)
.4
"BLD",6089,"KRN",.401,0)
.401
"BLD",6089,"KRN",.402,0)
.402
"BLD",6089,"KRN",.403,0)
.403
"BLD",6089,"KRN",.5,0)
.5
"BLD",6089,"KRN",.84,0)
.84
"BLD",6089,"KRN",3.6,0)
3.6
"BLD",6089,"KRN",3.8,0)
3.8
"BLD",6089,"KRN",9.2,0)
9.2
"BLD",6089,"KRN",9.8,0)
9.8
"BLD",6089,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",6089,"KRN",9.8,"NM",1,0)
IVMPTRN9^^0^B32694345
"BLD",6089,"KRN",9.8,"NM","B","IVMPTRN9",1)
 
"BLD",6089,"KRN",19,0)
19
"BLD",6089,"KRN",19.1,0)
19.1
"BLD",6089,"KRN",101,0)
101
"BLD",6089,"KRN",409.61,0)
409.61
"BLD",6089,"KRN",771,0)
771
"BLD",6089,"KRN",870,0)
870
"BLD",6089,"KRN",8989.51,0)
8989.51
"BLD",6089,"KRN",8989.52,0)
8989.52
"BLD",6089,"KRN",8994,0)
8994
"BLD",6089,"KRN","B",.4,.4)
 
"BLD",6089,"KRN","B",.401,.401)
 
"BLD",6089,"KRN","B",.402,.402)
 
"BLD",6089,"KRN","B",.403,.403)
 
"BLD",6089,"KRN","B",.5,.5)
 
"BLD",6089,"KRN","B",.84,.84)
 
"BLD",6089,"KRN","B",3.6,3.6)
 
"BLD",6089,"KRN","B",3.8,3.8)
 
"BLD",6089,"KRN","B",9.2,9.2)
 
"BLD",6089,"KRN","B",9.8,9.8)
 
"BLD",6089,"KRN","B",19,19)
 
"BLD",6089,"KRN","B",19.1,19.1)
 
"BLD",6089,"KRN","B",101,101)
 
"BLD",6089,"KRN","B",409.61,409.61)
 
"BLD",6089,"KRN","B",771,771)
 
"BLD",6089,"KRN","B",870,870)
 
"BLD",6089,"KRN","B",8989.51,8989.51)
 
"BLD",6089,"KRN","B",8989.52,8989.52)
 
"BLD",6089,"KRN","B",8994,8994)
 
"BLD",6089,"QUES",0)
^9.62^^
"BLD",6089,"REQB",0)
^9.611^1^1
"BLD",6089,"REQB",1,0)
IVM*2.0*99^2
"BLD",6089,"REQB","B","IVM*2.0*99",1)
 
"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
116^3060418
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMPTRN9")
0^1^B32694345^B27173973
"RTN","IVMPTRN9",1,0)
IVMPTRN9 ;ALB/KCL/CN/BRM/TDM,EG - HL7 FULL DATA TRANSMISSION (Z07) BUILDER (CONTINUED) ; 04/11/2006
"RTN","IVMPTRN9",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,19,12,21,17,46,50,53,34,49,58,79,99,116**; 21-OCT-94
"RTN","IVMPTRN9",3,0)
 ;
"RTN","IVMPTRN9",4,0)
 ;
"RTN","IVMPTRN9",5,0)
GOTO ; place to break up the routine
"RTN","IVMPTRN9",6,0)
 ;
"RTN","IVMPTRN9",7,0)
 ;find if the deletion flags were set in the IVM Patient file, and if so, should the deletion indicators be sent?
"RTN","IVMPTRN9",8,0)
 F I="RX","MT","HARDSHIP","DATE OF TEST","LTC" S DELETE(I)=""
"RTN","IVMPTRN9",9,0)
 S IVMPIEN=$$FIND^IVMPLOG(DFN,($E(IVMMTDT,1,3)-1))
"RTN","IVMPTRN9",10,0)
 I IVMPIEN D
"RTN","IVMPTRN9",11,0)
 .S IVMPNODE=$G(^IVM(301.5,IVMPIEN,0))
"RTN","IVMPTRN9",12,0)
 .I $P(IVMPNODE,"^",8)!$P(IVMPNODE,"^",9)!$P(IVMPNODE,"^",10)!$P(IVMPNODE,"^",11) S DELETE("SET")=1
"RTN","IVMPTRN9",13,0)
 .;was the MT deletion flag set, and if so verify that there is no completed MT
"RTN","IVMPTRN9",14,0)
 .I $P(IVMPNODE,"^",8),(TESTTYPE'=1)!(TESTCODE="")!("ACGP"'[TESTCODE) S DELETE("DATE OF TEST")=$P(IVMPNODE,"^",8),DELETE("MT")=1
"RTN","IVMPTRN9",15,0)
 .;
"RTN","IVMPTRN9",16,0)
 .;was the hardship deletion flag set, and if so verify that there is no completed hardship
"RTN","IVMPTRN9",17,0)
 .I $P(IVMPNODE,"^",10),'HARDSHIP D
"RTN","IVMPTRN9",18,0)
 ..S:('DELETE("DATE OF TEST")) DELETE("DATE OF TEST")=$P(IVMPNODE,"^",10)
"RTN","IVMPTRN9",19,0)
 ..S DELETE("HARDSHIP")=1
"RTN","IVMPTRN9",20,0)
 ;
"RTN","IVMPTRN9",21,0)
 ; create (ZMT) Means Test segment 
"RTN","IVMPTRN9",22,0)
 ;
"RTN","IVMPTRN9",23,0)
 S SEQS=$S(TESTTYPE=1:"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,28,29",1:"1,17")
"RTN","IVMPTRN9",24,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^IVMCZMT(DFN,SEQS,IVMMTDT,1,1,.DELETE,1)
"RTN","IVMPTRN9",25,0)
 ;
"RTN","IVMPTRN9",26,0)
 ; create (ZMT) Rx-Copay Test segment
"RTN","IVMPTRN9",27,0)
 I IVMPIEN D
"RTN","IVMPTRN9",28,0)
 .;was the RX deletion flag set, and if so verify that there is no completed test
"RTN","IVMPTRN9",29,0)
 .I $P(IVMPNODE,"^",9),(TESTTYPE'=2)!(TESTCODE="")!("EM"'[TESTCODE) S DELETE("DATE OF TEST")=$P(IVMPNODE,"^",9),DELETE("RX")=1
"RTN","IVMPTRN9",30,0)
 ;
"RTN","IVMPTRN9",31,0)
 N IVMCPDT,CPTST,LINK,CPDATE
"RTN","IVMPTRN9",32,0)
 ;should be ok to get the last co-pay test for this year vs. looking from the IVMMTDT backwards
"RTN","IVMPTRN9",33,0)
 ;as long as the means test date is in the current year
"RTN","IVMPTRN9",34,0)
 S CPTST=$$LST^DGMTU(DFN,$E(IVMIY,1,3)+1_1231,2)
"RTN","IVMPTRN9",35,0)
 I CPTST D
"RTN","IVMPTRN9",36,0)
 . S CPDATE=$P(CPTST,U,2)
"RTN","IVMPTRN9",37,0)
 . S LINK=$P($G(^DGMT(408.31,+CPTST,2)),U,6)
"RTN","IVMPTRN9",38,0)
 . I TESTTYPE=1,$E(CPDATE,1,3)=$E(IVMMTDT,1,3) D
"RTN","IVMPTRN9",39,0)
 . . ;if you have a means test and a linked co-pay test then send both (the means test
"RTN","IVMPTRN9",40,0)
 . . ;was already sent from above)
"RTN","IVMPTRN9",41,0)
 . . ;if means and copay are not linked, don't send the co-pay test (the means test
"RTN","IVMPTRN9",42,0)
 . . ;was already sent from above)
"RTN","IVMPTRN9",43,0)
 . . I LINK=+$$LST^DGMTU(DFN,IVMMTDT,1) S TESTTYPE=2,(IVMCPDT,IVMMTDT)=CPDATE
"RTN","IVMPTRN9",44,0)
 . . Q
"RTN","IVMPTRN9",45,0)
 . Q
"RTN","IVMPTRN9",46,0)
 ;always send the 2nd ZMT segment
"RTN","IVMPTRN9",47,0)
 S SEQS="1,17"
"RTN","IVMPTRN9",48,0)
 ;can also send a co-pay test if there is no means test (see module GETTYPE)
"RTN","IVMPTRN9",49,0)
 I TESTTYPE=2 D
"RTN","IVMPTRN9",50,0)
 . S SEQS="1,2,3,4,5,6,7,9,10,12,15,16,17,18,21,22,25,26"
"RTN","IVMPTRN9",51,0)
 . Q
"RTN","IVMPTRN9",52,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^IVMCZMT(DFN,SEQS,IVMMTDT,2,2,.DELETE,1)
"RTN","IVMPTRN9",53,0)
 ;
"RTN","IVMPTRN9",54,0)
 ; create (ZMT) Long Term Care Copay Exemption Test segment
"RTN","IVMPTRN9",55,0)
 I IVMPIEN D
"RTN","IVMPTRN9",56,0)
 .; set deletion indicators if LTC test deletion should be transmitted
"RTN","IVMPTRN9",57,0)
 .I $P(IVMPNODE,"^",11) S DELETE("LTC")=1 S:('DELETE("DATE OF TEST")) DELETE("DATE OF TEST")=$P(IVMPNODE,"^",11)
"RTN","IVMPTRN9",58,0)
 ;
"RTN","IVMPTRN9",59,0)
 S SEQS="1,2,3,4,5,7,9,10,12,16,17,18,22,25"
"RTN","IVMPTRN9",60,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^IVMCZMT(DFN,SEQS,IVMMTDT,4,4,.DELETE,1)
"RTN","IVMPTRN9",61,0)
 ;
"RTN","IVMPTRN9",62,0)
 ;if the deletion flags were set in the IVM Patient file, unset them
"RTN","IVMPTRN9",63,0)
 I $G(DELETE("SET")) D
"RTN","IVMPTRN9",64,0)
 .N DATA
"RTN","IVMPTRN9",65,0)
 .S DATA(.08)="",DATA(.09)="",DATA(.1)="",DATA(.11)=""
"RTN","IVMPTRN9",66,0)
 .I $$UPD^DGENDBS(301.5,IVMPIEN,.DATA)
"RTN","IVMPTRN9",67,0)
 ;
"RTN","IVMPTRN9",68,0)
 ; create (ZBT) Beneficiary Travel segment based on last BT Claim
"RTN","IVMPTRN9",69,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZBT($$BTCLM^IVMUFNC4(DFN),"1,2,3,4,7")
"RTN","IVMPTRN9",70,0)
 ;
"RTN","IVMPTRN9",71,0)
 ; create (ZFE) Fee Basis segment(s)
"RTN","IVMPTRN9",72,0)
 D EN^FBHLZFE(DFN,"1,2,3,4,5")
"RTN","IVMPTRN9",73,0)
 F IVMSUB=0:0 S IVMSUB=+$O(FBZFE(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN9",74,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(FBZFE(+IVMSUB))
"RTN","IVMPTRN9",75,0)
 ;
"RTN","IVMPTRN9",76,0)
 ; create (ZSP) Service Period segment
"RTN","IVMPTRN9",77,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZSP(DFN,1,1)
"RTN","IVMPTRN9",78,0)
 ;
"RTN","IVMPTRN9",79,0)
 ; create (OBX) segment for NTR
"RTN","IVMPTRN9",80,0)
 ; CALL PIMS API TO GET NTRARRY OF NTR DATA
"RTN","IVMPTRN9",81,0)
 S GETCUR=$$ENRGET^DGNTAPI1(DFN)
"RTN","IVMPTRN9",82,0)
 I GETCUR D NTROBX^IVMPTRNA(.DGNTARR)
"RTN","IVMPTRN9",83,0)
 I $D(NTROBX) D
"RTN","IVMPTRN9",84,0)
 . S IVMCT=IVMCT+1
"RTN","IVMPTRN9",85,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLOBX(.NTROBX,,"2,3,5,11,12,14,15,16,17")
"RTN","IVMPTRN9",86,0)
 . I $G(NTROBX(16))'="" S $P(^TMP("HLS",$J,IVMCT),"^",17)=$G(NTROBX(16))
"RTN","IVMPTRN9",87,0)
 . K NTROBX
"RTN","IVMPTRN9",88,0)
 ;
"RTN","IVMPTRN9",89,0)
 ; create (RF1) segment
"RTN","IVMPTRN9",90,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$RF1^IVMPTRNA(DFN)
"RTN","IVMPTRN9",91,0)
 ;
"RTN","IVMPTRN9",92,0)
 Q
"RTN","IVMPTRN9",93,0)
 ;
"RTN","IVMPTRN9",94,0)
GETTYPE(DFN,IVMMTDT,CODE,HARDSHIP,ACTVIEN) ;
"RTN","IVMPTRN9",95,0)
 ;Determines the type of test to include in the Z10.  HEC wants only the
"RTN","IVMPTRN9",96,0)
 ;test that they would consider primary,i.e., preference given to a comptleted means test, even if not currently in effect.
"RTN","IVMPTRN9",97,0)
 ;
"RTN","IVMPTRN9",98,0)
 ;Input:
"RTN","IVMPTRN9",99,0)
 ;  DFN
"RTN","IVMPTRN9",100,0)
 ;  IVMMTDT -date to be the search for the test
"RTN","IVMPTRN9",101,0)
 ;Output:
"RTN","IVMPTRN9",102,0)
 ;  Function value - type of test to send in Z10
"RTN","IVMPTRN9",103,0)
 ;  CODE - status code of test (pass by reference)
"RTN","IVMPTRN9",104,0)
 ;  HARDSHIP - hardship indicator (pass by reference)
"RTN","IVMPTRN9",105,0)
 ;  ACTVIEN - ien of test that should have the associated Income Relations (pass by reference)
"RTN","IVMPTRN9",106,0)
 ;
"RTN","IVMPTRN9",107,0)
 N TESTTYPE,MTNODE,RXNODE,NODE0,NODE2
"RTN","IVMPTRN9",108,0)
 S TESTTYPE=1
"RTN","IVMPTRN9",109,0)
 S (HARDSHIP,CODE,ACTVIEN)=""
"RTN","IVMPTRN9",110,0)
 Q:'$G(IVMMTDT) TESTTYPE
"RTN","IVMPTRN9",111,0)
 Q:'$G(DFN) TESTTYPE
"RTN","IVMPTRN9",112,0)
 ;
"RTN","IVMPTRN9",113,0)
 S MTNODE=$$LST^DGMTU(DFN,IVMMTDT,1) I $E($P(MTNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S MTNODE=""
"RTN","IVMPTRN9",114,0)
 S RXNODE=$$LST^DGMTU(DFN,IVMMTDT,2) I $E($P(RXNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S RXNODE=""
"RTN","IVMPTRN9",115,0)
 ;
"RTN","IVMPTRN9",116,0)
 I MTNODE="" S MTNODE=$$FUT^DGMTU(DFN,"",1) I $E($P(MTNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S MTNODE=""
"RTN","IVMPTRN9",117,0)
 I RXNODE="" S RXNODE=$$FUT^DGMTU(DFN,"",2) I $E($P(RXNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S RXNODE=""
"RTN","IVMPTRN9",118,0)
 D
"RTN","IVMPTRN9",119,0)
 .;determine which test has the associated income relations
"RTN","IVMPTRN9",120,0)
 .;
"RTN","IVMPTRN9",121,0)
 .I +MTNODE S CODE=$P(MTNODE,"^",4) I CODE'="",("ACGPR"[CODE) S ACTVIEN=+MTNODE Q
"RTN","IVMPTRN9",122,0)
 .I +RXNODE S CODE=$P(RXNODE,"^",4) I CODE'="",("EMI"[CODE) S ACTVIEN=+RXNODE Q
"RTN","IVMPTRN9",123,0)
 .I +MTNODE S ACTVIEN=+MTNODE Q
"RTN","IVMPTRN9",124,0)
 .I +RXNODE S ACTVIEN=+RXNODE Q
"RTN","IVMPTRN9",125,0)
 I ACTVIEN,+MTNODE,+RXNODE D TRANSFER^DGMTU4(DFN,$S((ACTVIEN=+MTNODE):+RXNODE,1:+MTNODE),ACTVIEN)
"RTN","IVMPTRN9",126,0)
 ;
"RTN","IVMPTRN9",127,0)
 ;now find the primary test
"RTN","IVMPTRN9",128,0)
 I '(+MTNODE) G CHKCOPAY
"RTN","IVMPTRN9",129,0)
 S CODE=$P(MTNODE,"^",4)
"RTN","IVMPTRN9",130,0)
 S HARDSHIP=$P($G(^DGMT(408.31,+MTNODE,0)),"^",20)
"RTN","IVMPTRN9",131,0)
 I (CODE="")!("ACGP"'[CODE) S NODE2=$G(^DGMT(408.31,+MTNODE,2)),CODE=$$GETCODE^DGMTH($P(NODE2,"^",3)) I (CODE="")!("ACGP"'[CODE) G CHKCOPAY
"RTN","IVMPTRN9",132,0)
 ;
"RTN","IVMPTRN9",133,0)
 G QGETTYPE
"RTN","IVMPTRN9",134,0)
 ;
"RTN","IVMPTRN9",135,0)
CHKCOPAY ;
"RTN","IVMPTRN9",136,0)
 I '(+RXNODE) G QGETTYPE
"RTN","IVMPTRN9",137,0)
 S CODE=$P(RXNODE,"^",4)
"RTN","IVMPTRN9",138,0)
 I (CODE="")!("EM"'[CODE) S NODE2=$G(^DGMT(408.31,+RXNODE,2)),CODE=$$GETCODE^DGMTH($P(NODE2,"^",3)) I (CODE="")!("EM"'[CODE) G QGETTYPE
"RTN","IVMPTRN9",139,0)
 S TESTTYPE=2
"RTN","IVMPTRN9",140,0)
 ;
"RTN","IVMPTRN9",141,0)
QGETTYPE ;
"RTN","IVMPTRN9",142,0)
 Q TESTTYPE
"RTN","IVMPTRN9",143,0)
 ;
"RTN","IVMPTRN9",144,0)
FILTER(DFN) ; address transmission filter
"RTN","IVMPTRN9",145,0)
 ; Check Bad Address Indicator for a known bad address and
"RTN","IVMPTRN9",146,0)
 ; Scrutinize the Street Address line 1 field for known bad address
"RTN","IVMPTRN9",147,0)
 ; strings based on functionality currently in place in HEC Legacy.
"RTN","IVMPTRN9",148,0)
 ;
"RTN","IVMPTRN9",149,0)
 ;  Input: DFN - ien of the Patient (#2) file
"RTN","IVMPTRN9",150,0)
 ; Output:   0 - filter passed (ok to transmit address)
"RTN","IVMPTRN9",151,0)
 ;           1 - filter failed (do not transmit address)
"RTN","IVMPTRN9",152,0)
 ;
"RTN","IVMPTRN9",153,0)
 N VAPA
"RTN","IVMPTRN9",154,0)
 Q:'$G(DFN) 1  ;DFN missing
"RTN","IVMPTRN9",155,0)
 Q:$$BADADR^DGUTL3(DFN) 1  ;check Bad Address Indicator
"RTN","IVMPTRN9",156,0)
 D ADD^VADPT  ;get patient address
"RTN","IVMPTRN9",157,0)
 ; Street Address Line 1 or Zip Code is <null>
"RTN","IVMPTRN9",158,0)
 Q:($G(VAPA(1))="")!($P($G(VAPA(11)),"^")="") 1
"RTN","IVMPTRN9",159,0)
 ; St Addr Line 1 contains 'UNKNOWN', 'HOMELESS', or 'ADDRESS'
"RTN","IVMPTRN9",160,0)
 Q:(VAPA(1)["UNKNOWN")!(VAPA(1)["HOMELESS")!(VAPA(1)["ADDRESS") 1
"RTN","IVMPTRN9",161,0)
 ; The first two characters of the address is equal to '**'
"RTN","IVMPTRN9",162,0)
 Q:$E(VAPA(1),1,2)="**" 1
"RTN","IVMPTRN9",163,0)
 ; passed all address filters - ok to send
"RTN","IVMPTRN9",164,0)
 Q 0
"VER")
8.0^22.0
"BLD",6089,6)
^98
**END**
**END**
