Released XU*8*51 SEQ #40
Extracted from mail message
**KIDS**:XU*8.0*51^

**INSTALL NAME**
XU*8.0*51
"BLD",137,0)
XU*8.0*51^KERNEL^0^2961202^n
"BLD",137,1,0)
^^60^60^2961202^^^^
"BLD",137,1,1,0)
 ** You need to install Kernel Patch XU*8*50 before installing this patch **
"BLD",137,1,2,0)
=============================================================================
"BLD",137,1,3,0)
 -This patch now allows you to transport a Global Package correctly. This bug
"BLD",137,1,4,0)
  was introduced with patch 44.
"BLD",137,1,5,0)
 -The input transform for the Name field in the Build file has been changed
"BLD",137,1,6,0)
  to allow sites to create local patches. It now allows 6 digit patch numbers
"BLD",137,1,7,0)
   i.e.  XU*8.0*662001
"BLD",137,1,8,0)
 -Kernel 8 patches will now contain the sequence number in the Patch
"BLD",137,1,9,0)
  Application History multiple of the Package file.
"BLD",137,1,10,0)
 -HL LOGICAL LINK entries were not being cross-referenced.
"BLD",137,1,11,0)
 -The post-install routine XQP50 will update the Patch Application History
"BLD",137,1,12,0)
  multiple with the information about patch 50. The DATE APPLIED and APPLIED
"BLD",137,1,13,0)
  BY fields will be the same as this patch. 
"BLD",137,1,14,0)

"BLD",137,1,15,0)
=============================================================================
"BLD",137,1,16,0)
                    **** INSTALL INSTRUCTIONS ****
"BLD",137,1,17,0)
=============================================================================
"BLD",137,1,18,0)

"BLD",137,1,19,0)
 This patch can be installed with users on the system, but no other users
"BLD",137,1,20,0)
 should be using KIDS while you install this patch.
"BLD",137,1,21,0)
 Since this patch is an update to KIDS, no other patches should be installed
"BLD",137,1,22,0)
 during the installation of this patch.
"BLD",137,1,23,0)
=============================================================================
"BLD",137,1,24,0)
  
"BLD",137,1,25,0)
INSTALLATION:
"BLD",137,1,26,0)
  1.  These routines are usually mapped on systems that allow mapping,
"BLD",137,1,27,0)
      so you will need to disable mapping for the effected routines.
"BLD",137,1,28,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",137,1,29,0)
      option will load the KIDS Distribution onto your system.
"BLD",137,1,30,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",137,1,31,0)
      system. You now need to use KIDS to install the patch in the Transport
"BLD",137,1,32,0)
      global.
"BLD",137,1,33,0)
  4.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",137,1,34,0)
      options:
"BLD",137,1,35,0)
         2  Verify Checksums in Transport Global
"BLD",137,1,36,0)
         3  Print Transport Global
"BLD",137,1,37,0)
         4  Compare Transport Global to Current System
"BLD",137,1,38,0)
         5  Backup a Transport Global
"BLD",137,1,39,0)
         6  Install Package(s)
"BLD",137,1,40,0)
  5.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"BLD",137,1,41,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",137,1,42,0)
  6.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",137,1,43,0)
===========================================================================
"BLD",137,1,44,0)
  
"BLD",137,1,45,0)
ROUTINES:
"BLD",137,1,46,0)
   The second line of the routine now looks like:
"BLD",137,1,47,0)
       ;;8.0;KERNEL;**[patch list]**;Jul 10, 1995
"BLD",137,1,48,0)

"BLD",137,1,49,0)
                Before          After 
"BLD",137,1,50,0)
 Name           Checksum        Checksum       Patch List
"BLD",137,1,51,0)
 -----------------------------------------------------------
"BLD",137,1,52,0)
 XPDE           15036235        15041471       2,15,21,44,51
"BLD",137,1,53,0)
 XPDET           5054183         5054366       15,39,41,44,51
"BLD",137,1,54,0)
 XPDIA1          7754922         7766653       2,44,51
"BLD",137,1,55,0)
 XPDIP           9737651         9751058       15,21,28,30,41,44,51
"BLD",137,1,56,0)
 XPDIU           7734016         7856776       15,41,44,51
"BLD",137,1,57,0)
 XPDT           19190604        19179554       2,10,28,41,44,51
"BLD",137,1,58,0)
 XQP50            NEW            4073107       51
"BLD",137,1,59,0)
===========================================================================
"BLD",137,1,60,0)

"BLD",137,4,0)
^9.64PA^^
"BLD",137,"INIT")
XQP50
"BLD",137,"KRN",0)
^9.67PA^19^18
"BLD",137,"KRN",.4,0)
.4
"BLD",137,"KRN",.401,0)
.401
"BLD",137,"KRN",.402,0)
.402
"BLD",137,"KRN",.403,0)
.403
"BLD",137,"KRN",.5,0)
.5
"BLD",137,"KRN",.84,0)
.84
"BLD",137,"KRN",3.6,0)
3.6
"BLD",137,"KRN",3.8,0)
3.8
"BLD",137,"KRN",9.2,0)
9.2
"BLD",137,"KRN",9.8,0)
9.8
"BLD",137,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",137,"KRN",9.8,"NM",1,0)
XPDT^^0^B55743170
"BLD",137,"KRN",9.8,"NM",2,0)
XPDIP^^0^B35874633
"BLD",137,"KRN",9.8,"NM",3,0)
XPDET^^0^B26193980
"BLD",137,"KRN",9.8,"NM",4,0)
XQP50^^0^B7614914
"BLD",137,"KRN",9.8,"NM",5,0)
XPDIU^^0^B12097569
"BLD",137,"KRN",9.8,"NM",6,0)
XPDE^^0^B38793189
"BLD",137,"KRN",9.8,"NM",7,0)
XPDIA1^^0^B28193433
"BLD",137,"KRN",9.8,"NM","B","XPDE",6)

"BLD",137,"KRN",9.8,"NM","B","XPDET",3)

"BLD",137,"KRN",9.8,"NM","B","XPDIA1",7)

"BLD",137,"KRN",9.8,"NM","B","XPDIP",2)

"BLD",137,"KRN",9.8,"NM","B","XPDIU",5)

"BLD",137,"KRN",9.8,"NM","B","XPDT",1)

"BLD",137,"KRN",9.8,"NM","B","XQP50",4)

"BLD",137,"KRN",19,0)
19
"BLD",137,"KRN",19.1,0)
19.1
"BLD",137,"KRN",101,0)
101
"BLD",137,"KRN",409.61,0)
409.61
"BLD",137,"KRN",771,0)
771
"BLD",137,"KRN",869.2,0)
869.2
"BLD",137,"KRN",870,0)
870
"BLD",137,"KRN",8994,0)
8994
"BLD",137,"KRN","B",.4,.4)

"BLD",137,"KRN","B",.401,.401)

"BLD",137,"KRN","B",.402,.402)

"BLD",137,"KRN","B",.403,.403)

"BLD",137,"KRN","B",.5,.5)

"BLD",137,"KRN","B",.84,.84)

"BLD",137,"KRN","B",3.6,3.6)

"BLD",137,"KRN","B",3.8,3.8)

"BLD",137,"KRN","B",9.2,9.2)

"BLD",137,"KRN","B",9.8,9.8)

"BLD",137,"KRN","B",19,19)

"BLD",137,"KRN","B",19.1,19.1)

"BLD",137,"KRN","B",101,101)

"BLD",137,"KRN","B",409.61,409.61)

"BLD",137,"KRN","B",771,771)

"BLD",137,"KRN","B",869.2,869.2)

"BLD",137,"KRN","B",870,870)

"BLD",137,"KRN","B",8994,8994)

"BLD",137,"QUES",0)
^9.62^^
"INIT")
XQP50
"PKG",283,-1)
1^1
"PKG",283,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",283,22,0)
^9.49I^1^1
"PKG",283,22,1,0)
8.0^2950729^2950729^6
"PKG",283,22,1,"PAH",1,0)
51^2961202
"PKG",283,22,1,"PAH",1,1,0)
^^60^60^2961202
"PKG",283,22,1,"PAH",1,1,1,0)
 ** You need to install Kernel Patch XU*8*50 before installing this patch **
"PKG",283,22,1,"PAH",1,1,2,0)
=============================================================================
"PKG",283,22,1,"PAH",1,1,3,0)
 -This patch now allows you to transport a Global Package correctly. This bug
"PKG",283,22,1,"PAH",1,1,4,0)
  was introduced with patch 44.
"PKG",283,22,1,"PAH",1,1,5,0)
 -The input transform for the Name field in the Build file has been changed
"PKG",283,22,1,"PAH",1,1,6,0)
  to allow sites to create local patches. It now allows 6 digit patch numbers
"PKG",283,22,1,"PAH",1,1,7,0)
   i.e.  XU*8.0*662001
"PKG",283,22,1,"PAH",1,1,8,0)
 -Kernel 8 patches will now contain the sequence number in the Patch
"PKG",283,22,1,"PAH",1,1,9,0)
  Application History multiple of the Package file.
"PKG",283,22,1,"PAH",1,1,10,0)
 -HL LOGICAL LINK entries were not being cross-referenced.
"PKG",283,22,1,"PAH",1,1,11,0)
 -The post-install routine XQP50 will update the Patch Application History
"PKG",283,22,1,"PAH",1,1,12,0)
  multiple with the information about patch 50. The DATE APPLIED and APPLIED
"PKG",283,22,1,"PAH",1,1,13,0)
  BY fields will be the same as this patch. 
"PKG",283,22,1,"PAH",1,1,14,0)

"PKG",283,22,1,"PAH",1,1,15,0)
=============================================================================
"PKG",283,22,1,"PAH",1,1,16,0)
                    **** INSTALL INSTRUCTIONS ****
"PKG",283,22,1,"PAH",1,1,17,0)
=============================================================================
"PKG",283,22,1,"PAH",1,1,18,0)

"PKG",283,22,1,"PAH",1,1,19,0)
 This patch can be installed with users on the system, but no other users
"PKG",283,22,1,"PAH",1,1,20,0)
 should be using KIDS while you install this patch.
"PKG",283,22,1,"PAH",1,1,21,0)
 Since this patch is an update to KIDS, no other patches should be installed
"PKG",283,22,1,"PAH",1,1,22,0)
 during the installation of this patch.
"PKG",283,22,1,"PAH",1,1,23,0)
=============================================================================
"PKG",283,22,1,"PAH",1,1,24,0)
  
"PKG",283,22,1,"PAH",1,1,25,0)
INSTALLATION:
"PKG",283,22,1,"PAH",1,1,26,0)
  1.  These routines are usually mapped on systems that allow mapping,
"PKG",283,22,1,"PAH",1,1,27,0)
      so you will need to disable mapping for the effected routines.
"PKG",283,22,1,"PAH",1,1,28,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",283,22,1,"PAH",1,1,29,0)
      option will load the KIDS Distribution onto your system.
"PKG",283,22,1,"PAH",1,1,30,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",283,22,1,"PAH",1,1,31,0)
      system. You now need to use KIDS to install the patch in the Transport
"PKG",283,22,1,"PAH",1,1,32,0)
      global.
"PKG",283,22,1,"PAH",1,1,33,0)
  4.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",283,22,1,"PAH",1,1,34,0)
      options:
"PKG",283,22,1,"PAH",1,1,35,0)
         2  Verify Checksums in Transport Global
"PKG",283,22,1,"PAH",1,1,36,0)
         3  Print Transport Global
"PKG",283,22,1,"PAH",1,1,37,0)
         4  Compare Transport Global to Current System
"PKG",283,22,1,"PAH",1,1,38,0)
         5  Backup a Transport Global
"PKG",283,22,1,"PAH",1,1,39,0)
         6  Install Package(s)
"PKG",283,22,1,"PAH",1,1,40,0)
  5.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"PKG",283,22,1,"PAH",1,1,41,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",283,22,1,"PAH",1,1,42,0)
  6.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",283,22,1,"PAH",1,1,43,0)
===========================================================================
"PKG",283,22,1,"PAH",1,1,44,0)
  
"PKG",283,22,1,"PAH",1,1,45,0)
ROUTINES:
"PKG",283,22,1,"PAH",1,1,46,0)
   The second line of the routine now looks like:
"PKG",283,22,1,"PAH",1,1,47,0)
       ;;8.0;KERNEL;**[patch list]**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,48,0)

"PKG",283,22,1,"PAH",1,1,49,0)
                Before          After 
"PKG",283,22,1,"PAH",1,1,50,0)
 Name           Checksum        Checksum       Patch List
"PKG",283,22,1,"PAH",1,1,51,0)
 -----------------------------------------------------------
"PKG",283,22,1,"PAH",1,1,52,0)
 XPDE           15036235        15041471       2,15,21,44,51
"PKG",283,22,1,"PAH",1,1,53,0)
 XPDET           5054183         5054366       15,39,41,44,51
"PKG",283,22,1,"PAH",1,1,54,0)
 XPDIA1          7754922         7766653       2,44,51
"PKG",283,22,1,"PAH",1,1,55,0)
 XPDIP           9737651         9751058       15,21,28,30,41,44,51
"PKG",283,22,1,"PAH",1,1,56,0)
 XPDIU           7734016         7856776       15,41,44,51
"PKG",283,22,1,"PAH",1,1,57,0)
 XPDT           19190604        19179554       2,10,28,41,44,51
"PKG",283,22,1,"PAH",1,1,58,0)
 XQP50            NEW            4073107       51
"PKG",283,22,1,"PAH",1,1,59,0)
===========================================================================
"PKG",283,22,1,"PAH",1,1,60,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","XPDE")
0^6^B38793189
"RTN","XPDE",1,0)
XPDE ;SFISC/RSD - Package Edit ;12/02/96  15:12
"RTN","XPDE",2,0)
 ;;8.0;KERNEL;**2,15,21,44,51**;Jul 10, 1995
"RTN","XPDE",3,0)
 Q
"RTN","XPDE",4,0)
 ;these tags are called from options.
"RTN","XPDE",5,0)
EDIT ;edit Build file package
"RTN","XPDE",6,0)
 N DA,DIR,DDSFILE,DR,Y,Z
"RTN","XPDE",7,0)
 Q:'$$DIC("AEMQLZ","",1)  S DA=+Y
"RTN","XPDE",8,0)
 I $P(Y,U,3) D NEW(DA)
"RTN","XPDE",9,0)
 S Z=$P(^XPD(9.6,DA,0),U,3)+1,DR="["_$P("XPD EDIT BUILD^XPD EDIT MP^XPD EDIT GP",U,Z)_"]",DDSFILE="^XPD(9.6,"
"RTN","XPDE",10,0)
 D ^DDS Q:'$G(DA)
"RTN","XPDE",11,0)
 ;if full DD, kill multiple for partial DD
"RTN","XPDE",12,0)
 S Y=0 F  S Y=$O(^XPD(9.6,DA,4,Y)) Q:'Y  S Z=$G(^(Y,222)) D
"RTN","XPDE",13,0)
 .K:$P(Z,U,3)="f" ^XPD(9.6,DA,4,Y,2),^XPD(9.6,DA,4,"APDD",Y)
"RTN","XPDE",14,0)
 D QUIT(DA)
"RTN","XPDE",15,0)
 Q
"RTN","XPDE",16,0)
COPY ;copy a Build file package
"RTN","XPDE",17,0)
 N DA,DIK,DIR,FR,FR0,TO,TO0,X,Y,Z W !
"RTN","XPDE",18,0)
 Q:'$$DIC("QEAMZ","Copy FROM what Package: ")
"RTN","XPDE",19,0)
 S FR=+Y,FR0=Y(0),Z="QEAMZL",Z("S")="I Y'="_FR
"RTN","XPDE",20,0)
 I '$$DIC(.Z,"Copy TO what Package: ") D QUIT(FR) Q
"RTN","XPDE",21,0)
 S TO=Y,TO0=Y(0)
"RTN","XPDE",22,0)
 ;if this is not new, then it will be purged before copy.
"RTN","XPDE",23,0)
 I '$P(TO,U,3) W !,$P(TO0,U)," package will be PURGED before the copy."
"RTN","XPDE",24,0)
 W ! S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="YES" D ^DIR
"RTN","XPDE",25,0)
 S DIK="^XPD(9.6,",DA=+TO
"RTN","XPDE",26,0)
 I 'Y!$D(DIRUT) D  W ! Q
"RTN","XPDE",27,0)
 .;they didn't want to continue, kill if it was a new package.
"RTN","XPDE",28,0)
 .I $P(TO,U,3) D ^DIK W $P(TO0,U)," being deleted!"
"RTN","XPDE",29,0)
 .;unlock both packages
"RTN","XPDE",30,0)
 .D QUIT(FR),QUIT(TO)
"RTN","XPDE",31,0)
 D WAIT^DICD
"RTN","XPDE",32,0)
 ;if not new, kill old data
"RTN","XPDE",33,0)
 K:'$P(TO,U,3) ^XPD(9.6,DA)
"RTN","XPDE",34,0)
 M ^XPD(9.6,DA)=^XPD(9.6,FR) S $P(^(DA,0),U)=$P(TO0,U)
"RTN","XPDE",35,0)
 D NEW(+TO)
"RTN","XPDE",36,0)
 ;if new National Package name, then kill x-ref
"RTN","XPDE",37,0)
 I $P(TO0,U,2)]"",$P(FR0,U,2)'=$P(TO0,U,2) K ^XPD(9.6,"C",$E($P(TO0,U,2),1,30),DA) S DIK(1)=1 D EN1^DIK
"RTN","XPDE",38,0)
 D QUIT(FR),QUIT(TO)
"RTN","XPDE",39,0)
 W "...Done.",!
"RTN","XPDE",40,0)
 Q
"RTN","XPDE",41,0)
BUILD ;build package from a namespace
"RTN","XPDE",42,0)
 N DIR,DIRUT,XPDA,XPDI,XPDF,XPDN,XPDX,X,X1,Y,Y1 W !
"RTN","XPDE",43,0)
 Q:'$$DIC("QEAML")
"RTN","XPDE",44,0)
 S XPDA=+Y W !
"RTN","XPDE",45,0)
 I $P(^XPD(9.6,XPDA,0),U,3) W !,"The Build Type must be SINGLE PACKAGE!!",! Q
"RTN","XPDE",46,0)
 ;if not a new package
"RTN","XPDE",47,0)
 I '$P(Y,U,3) D  I $D(DIRUT) D QUIT(XPDA) Q
"RTN","XPDE",48,0)
 .S DIR(0)="Y",DIR("A")="Package already exists, Want to PURGE the existing data",DIR("B")="NO",DIR("?")="YES will delete all the KERNEL FILE information for this package in the BUILD file."
"RTN","XPDE",49,0)
 .D ^DIR K DIR Q:'Y
"RTN","XPDE",50,0)
 .S Y=0 F  S Y=$O(^XPD(9.6,XPDA,"KRN",Y)) Q:'Y  K ^(Y,"NM")
"RTN","XPDE",51,0)
 E  D NEW(XPDA)
"RTN","XPDE",52,0)
 ;XPDN(0=excluded names or 1=include names, namespace)=""
"RTN","XPDE",53,0)
 W ! S DIR(0)="FO^1:15^K:X'?.1""-""1U.15UNP X",DIR("A")="Namespace",DIR("?")="Enter 1 to 15 characters, preceed with ""-"" to exclude namespace"
"RTN","XPDE",54,0)
 F  D ^DIR Q:$D(DIRUT)  S X=$E(Y,$L(Y))="*",%=$E(Y)="-",XPDN('%,$E(Y,%+1,$L(Y)-X))=""
"RTN","XPDE",55,0)
 I '$D(XPDN)!$D(DTOUT)!$D(DUOUT) D QUIT(XPDA) Q
"RTN","XPDE",56,0)
 W !!,"NAMESPACE  INCLUDE",?35,"EXCLUDE",!,?11,"-------",?35,"-------"
"RTN","XPDE",57,0)
 S (X,Y)="",(X1,Y1)=1
"RTN","XPDE",58,0)
 F  D  W !?11,X,?35,Y Q:'X1&'Y1
"RTN","XPDE",59,0)
 .S:X1 X=$O(XPDN(1,X)),X1=X]"" S:Y1 Y=$O(XPDN(0,Y)),Y1=Y]""
"RTN","XPDE",60,0)
 S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="YES" D ^DIR
"RTN","XPDE",61,0)
 I 'Y!$D(DIRUT) D QUIT(XPDA) Q
"RTN","XPDE",62,0)
 D WAIT^DICD S XPDX="",XPDI("IEN")=0
"RTN","XPDE",63,0)
 F  S XPDX=$O(XPDN(1,XPDX)),XPDF=0 Q:XPDX=""  D
"RTN","XPDE",64,0)
 .F  S XPDF=$O(^XPD(9.6,XPDA,"KRN",XPDF)) Q:'XPDF  D
"RTN","XPDE",65,0)
 ..N XPD,XPDIC,XPDJ W "."
"RTN","XPDE",66,0)
 ..;XPDIC is used in $$SCR1^XPDET
"RTN","XPDE",67,0)
 ..S XPDIC="^XPD(9.6,"_XPDA_",""KRN"","_XPDF_",""NM"","
"RTN","XPDE",68,0)
 ..D LIST^DIC(XPDF,"","","","*",.XPDI,XPDX,"","I $$SCR1^XPDET(Y)")
"RTN","XPDE",69,0)
 ..F XPDJ=1:1 S X=$G(^TMP("DILIST",$J,1,XPDJ)) Q:X=""  D
"RTN","XPDE",70,0)
 ...S:XPDF<.404 %=^TMP("DILIST",$J,2,XPDJ)_",",X=$$TX^XPDET(X,$$GET1^DIQ(XPDF,%,$$TF^XPDET(XPDF),"I"))
"RTN","XPDE",71,0)
 ...S Y="+"_XPDJ_","_XPDF_","_XPDA_",",XPD(9.68,Y,.01)=X,XPD(9.68,Y,.03)=0
"RTN","XPDE",72,0)
 ..Q:'$D(XPD)  D UPDATE^DIE("","XPD")
"RTN","XPDE",73,0)
 D QUIT(XPDA)
"RTN","XPDE",74,0)
 W "...Done.",!
"RTN","XPDE",75,0)
 Q
"RTN","XPDE",76,0)
VER ;verify a Build file package
"RTN","XPDE",77,0)
 N XPDA,Y
"RTN","XPDE",78,0)
 Q:'$$DIC("AEMQZ")  S XPDA=+Y
"RTN","XPDE",79,0)
 D EN^XPDV
"RTN","XPDE",80,0)
 Q
"RTN","XPDE",81,0)
DIC(DIC,A,XPDL) ;DIC lookup to Build file, 9.6
"RTN","XPDE",82,0)
 N DLAYGO
"RTN","XPDE",83,0)
 S DIC(0)=$G(DIC),DIC="^XPD(9.6," S:$G(A)]"" DIC("A")=A
"RTN","XPDE",84,0)
 S:DIC(0)["L" DLAYGO=9.6,DIC("DR")="1;2//SINGLE PACKAGE"
"RTN","XPDE",85,0)
 D ^DIC Q:Y<0 0
"RTN","XPDE",86,0)
 I '$G(XPDL) L +^XPD(9.6,+Y):0 E  W !,"Being accessed by another user" Q 0
"RTN","XPDE",87,0)
 Q +Y
"RTN","XPDE",88,0)
 ;
"RTN","XPDE",89,0)
NEW(DA) ;create Kernel Files multiple for package DA
"RTN","XPDE",90,0)
 N I,J,X,XPDNEWF,XPD,XPDI
"RTN","XPDE",91,0)
 S:'$D(^XPD(9.6,DA,"KRN",0)) ^XPD(9.6,DA,"KRN",0)=U_$P(^DD(9.6,7,0),U,2)
"RTN","XPDE",92,0)
 S I=0
"RTN","XPDE",93,0)
 F J=1:1 S X=+$P($T(FILES+J),";;",2) Q:'X  S:$D(^DD(X))&'$D(^XPD(9.6,DA,"KRN",X)) I=I+1,(XPDI(I),XPD(9.67,"+"_I_","_DA_",",.01))=X
"RTN","XPDE",94,0)
 Q:'$D(XPD)
"RTN","XPDE",95,0)
 ;XPDNEWF is a flag in INPUT transform of BUILD COMPONENT multiple
"RTN","XPDE",96,0)
 S XPDNEWF=1
"RTN","XPDE",97,0)
 D UPDATE^DIE("","XPD","XPDI")
"RTN","XPDE",98,0)
 Q
"RTN","XPDE",99,0)
QUIT(Y) ;unlock Y
"RTN","XPDE",100,0)
 L -^XPD(9.6,Y)
"RTN","XPDE",101,0)
 Q
"RTN","XPDE",102,0)
 ;
"RTN","XPDE",103,0)
 ;;file;install order;x-ref;file build;entry build;file pre;entry pre;file post;entry post;delete
"RTN","XPDE",104,0)
FILES ;kernel files for field 7 in file 9.6
"RTN","XPDE",105,0)
 ;;9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"RTN","XPDE",106,0)
 ;;9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"RTN","XPDE",107,0)
 ;;3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"RTN","XPDE",108,0)
 ;;19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"RTN","XPDE",109,0)
 ;;.5;4;;;EDEOUT^DIFROMSO(.5,DA,"",XPDA);FPRE^DIFROMSI(.5,"",XPDA);EPRE^DIFROMSI(.5,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.5,DA,"",XPDA)
"RTN","XPDE",110,0)
 ;;.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"RTN","XPDE",111,0)
 ;;.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"RTN","XPDE",112,0)
 ;;.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"RTN","XPDE",113,0)
 ;;.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"RTN","XPDE",114,0)
 ;;.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"RTN","XPDE",115,0)
 ;;3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1
"RTN","XPDE",116,0)
 ;;869.2;12;1;;HLLLP^XPDTA1;;HLLLPE^XPDIA1
"RTN","XPDE",117,0)
 ;;870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1
"RTN","XPDE",118,0)
 ;;771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1
"RTN","XPDE",119,0)
 ;;101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"RTN","XPDE",120,0)
 ;;8994;16;1;;;;;;;RPCDEL^XPDIA1
"RTN","XPDE",121,0)
 ;;409.61;17;1;;;;;;;LMDEL^XPDIA1
"RTN","XPDE",122,0)
 ;;19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"RTN","XPDET")
0^3^B26193980
"RTN","XPDET",1,0)
XPDET ;SFISC/RSD - Input tranforms & help for file 9.6 & 9.7 ;11/19/96  09:28
"RTN","XPDET",2,0)
 ;;8.0;KERNEL;**15,39,41,44,51**;Jul 10, 1995
"RTN","XPDET",3,0)
 Q
"RTN","XPDET",4,0)
INPUTB(X) ;input tranfrom for NAME in BUILD file
"RTN","XPDET",5,0)
 ;X=user input
"RTN","XPDET",6,0)
 ;name must be unique
"RTN","XPDET",7,0)
 I $L(X)>50!($L(X)<3)!$D(^XPD(9.6,"B",X)) K X Q
"RTN","XPDET",8,0)
 I X["*" K:$P(X,"*",2,3)'?1.2N1"."1.2N.1(1"V",1"T").2N1"*"1.6N X Q
"RTN","XPDET",9,0)
 S %=$L(X," ") I %<2 K X Q
"RTN","XPDET",10,0)
 S %=$P(X," ",%) K:%'?1.2N1"."1.2N.1(1"V",1"T").2N X
"RTN","XPDET",11,0)
 Q
"RTN","XPDET",12,0)
INPUTE(X) ;input transform for ENTRIES in KERNEL FILES multiple
"RTN","XPDET",13,0)
 ;X=user input
"RTN","XPDET",14,0)
 N D,DD,DIC,DICR,DIX,DIY,DS,DO,XPDLK,Y
"RTN","XPDET",15,0)
 S XPDLK=$$GR(D1)
"RTN","XPDET",16,0)
 I XPDLK=""!X["*" K X Q
"RTN","XPDET",17,0)
 S DIC(0)="QEMZ",DIC=XPDLK
"RTN","XPDET",18,0)
 S:D1=9.8 DIC("S")="I $T(^@$P(^(0),U))]"""""
"RTN","XPDET",19,0)
 D ^DIC K:Y<0 X Q:'$D(X)
"RTN","XPDET",20,0)
 S X=Y(0,0)
"RTN","XPDET",21,0)
 ;check that this doesn't exist already
"RTN","XPDET",22,0)
 I $D(^XPD(9.6,D0,"KRN",D1,"NM","B",X)) K X Q
"RTN","XPDET",23,0)
 ;if fm file, change X to contain file # of template
"RTN","XPDET",24,0)
 I D1<.404 S X=$$TX(X,$P(Y(0),U,$S(D1=.403:8,1:4)))
"RTN","XPDET",25,0)
 Q
"RTN","XPDET",26,0)
GLOBALE(X) ;input transform for GLOBAL multiple .01 field in file 9.6
"RTN","XPDET",27,0)
 I $L(X)>30!($L(X)<2) K X Q
"RTN","XPDET",28,0)
 I X["(",X'[")" K X Q
"RTN","XPDET",29,0)
 ;change ' back to " for subscripts, they were changed in the Pre-Lookup node of the DD, 7.5. This was done to trick FM, which doesn't allow " in .01 fields
"RTN","XPDET",30,0)
 S X=$TR(X,"'","""")
"RTN","XPDET",31,0)
 I '$D(@("^"_X)) K X
"RTN","XPDET",32,0)
 Q
"RTN","XPDET",33,0)
INPUTMB(X) ;input transform for field 10 and 11 in file 9.6
"RTN","XPDET",34,0)
 ;X=user input
"RTN","XPDET",35,0)
 N D,DD,DIC,DICR,DIX,DIY,DS,DO,Y
"RTN","XPDET",36,0)
 ;can't select a global or multi package or itself (D0)
"RTN","XPDET",37,0)
 S DIC(0)="QEMZ",DIC="^XPD(9.6,",DIC("S")="I '$P(^(0),U,3),Y'="_D0
"RTN","XPDET",38,0)
 D ^DIC K:Y<0 X Q:'$D(X)
"RTN","XPDET",39,0)
 S X=Y(0,0)
"RTN","XPDET",40,0)
 Q
"RTN","XPDET",41,0)
LOOKE(X) ;special lookup for ENTRIES in KERNEL FILES multiple
"RTN","XPDET",42,0)
 Q:X'?1.E1"*"
"RTN","XPDET",43,0)
 N %,XPD,XPDI,XPDIC,XPDF,XPDLK,XPDX,Y
"RTN","XPDET",44,0)
 S XPDLK=$$GR(D1),XPDIC=DIC,XPDF=D1
"RTN","XPDET",45,0)
 I XPDLK="" K X Q
"RTN","XPDET",46,0)
 G:$E(X)="-" DEL
"RTN","XPDET",47,0)
 S XPDX=$P(X,"*"),XPDI("IEN")=0
"RTN","XPDET",48,0)
 D LIST^DIC(D1,"","","","*",.XPDI,XPDX,"","I $$SCR^XPDET(Y)")
"RTN","XPDET",49,0)
 I '$G(^TMP("DILIST",$J,0)) K X Q
"RTN","XPDET",50,0)
 K ^TMP("XPDX",$J)
"RTN","XPDET",51,0)
 ;loop thru list from lister and file using UPDATE^DIE
"RTN","XPDET",52,0)
 F XPDI=1:1 S X=$G(^TMP("DILIST",$J,1,XPDI)) Q:X=""  D
"RTN","XPDET",53,0)
 .S:D1<.404 %=^TMP("DILIST",$J,2,XPDI)_",",X=$$TX(X,$$GET1^DIQ(D1,%,$$TF(D1),"I"))
"RTN","XPDET",54,0)
 .S Y="+"_XPDI_","_D1_","_D0_",",^TMP("XPDX",$J,9.68,Y,.01)=X,^(.03)=0
"RTN","XPDET",55,0)
 I $D(^TMP("XPDX",$J)) D UPDATE^DIE("","^TMP(""XPDX"",$J)","^TMP(""XPD"",$J)")
"RTN","XPDET",56,0)
 ;if in Screenman then call MLOAD to update screen
"RTN","XPDET",57,0)
 I $D(DDS),$D(^TMP("XPD",$J)) D MLOAD^DDSUTL("^TMP(""XPD"",$J)")
"RTN","XPDET",58,0)
 S X=""
"RTN","XPDET",59,0)
 K ^TMP("XPDX",$J),^TMP("XPD",$J)
"RTN","XPDET",60,0)
 Q
"RTN","XPDET",61,0)
DEL ;delete using wild card
"RTN","XPDET",62,0)
 I X'?1"-"1.E1"*" K X Q
"RTN","XPDET",63,0)
 S X=$E(X,2,$L(X)-1),XPDX=X S:$L(X) XPDI("IEN")=0
"RTN","XPDET",64,0)
 D LIST^DIC(9.68,","_D1_","_D0_",","","","*",.XPDI,XPDX)
"RTN","XPDET",65,0)
 I '$G(^TMP("DILIST",$J,0)) K X Q
"RTN","XPDET",66,0)
 N DIK,DA,D2
"RTN","XPDET",67,0)
 S DIK=XPDIC,DA(1)=D1,DA(2)=D0
"RTN","XPDET",68,0)
 F XPDI=1:1 S (DA,D2)=$G(^TMP("DILIST",$J,2,XPDI)) Q:'DA  D
"RTN","XPDET",69,0)
 .D ^DIK
"RTN","XPDET",70,0)
 I $D(DDS) D MDEL^DDSUTL("^TMP(""DILIST"",$J,2)")
"RTN","XPDET",71,0)
 S X=""
"RTN","XPDET",72,0)
 K ^TMP("DILIST",$J)
"RTN","XPDET",73,0)
 Q
"RTN","XPDET",74,0)
HELP ;executable help of ENTRIES in KERNEL FILE multiple
"RTN","XPDET",75,0)
 N D,DIC,DIE,DIX,DIY,DO,DZ,DS,X,Y
"RTN","XPDET",76,0)
 ;file 9.8 is routine file, check that routine exists
"RTN","XPDET",77,0)
 S DIC=$$GR(D1),DIC(0)="M",X="??" Q:DIC=""  S:D1=9.8 DIC("S")="I $T(^@$P(^(0),U))]"""""
"RTN","XPDET",78,0)
 D ^DIC Q
"RTN","XPDET",79,0)
 ;
"RTN","XPDET",80,0)
HELPO ;executable help of INSTALL ORDER in KERNEL FILES multiple
"RTN","XPDET",81,0)
 N Y
"RTN","XPDET",82,0)
 W !,"Numbers in use:  ORDER     FILE#" S Y=0
"RTN","XPDET",83,0)
 F  S Y=$O(^XPD(9.6,D0,"KRN","AC",Y)) Q:'Y  W !,?18,$J(Y,2),?28,$O(^(Y,0))
"RTN","XPDET",84,0)
 W ! Q
"RTN","XPDET",85,0)
 ;
"RTN","XPDET",86,0)
HELPMB ;executable help of fields 10 & 11 in file 9.6
"RTN","XPDET",87,0)
 N D,DIC,DIE,DIX,DIY,DO,DZ,DS,X,Y
"RTN","XPDET",88,0)
 S DIC="^XPD(9.6,",DIC(0)="M",X="??",DIC("S")="I '$P(^(0),U,3),Y'="_D0
"RTN","XPDET",89,0)
 D ^DIC Q
"RTN","XPDET",90,0)
 ;
"RTN","XPDET",91,0)
SCRA(Y) ;screen of ACTION field in ENTRIES multiple in KERNEL FILES multiple, Y=action
"RTN","XPDET",92,0)
 ;Y=0 - send, 1 - delete, 2 - link, 3 - merge
"RTN","XPDET",93,0)
 ;all files can send to site
"RTN","XPDET",94,0)
 Q:'Y 1
"RTN","XPDET",95,0)
 ;.5=function file, can't delete, all others can
"RTN","XPDET",96,0)
 I Y=1 Q (D1'=.5)
"RTN","XPDET",97,0)
 ;then rest of code check if it is a Option or Protocal and can have MENU ITEMS
"RTN","XPDET",98,0)
 Q:D1'=19&(D1'=101) 0
"RTN","XPDET",99,0)
 N FGR,X
"RTN","XPDET",100,0)
 S X=$P(^XPD(9.6,D0,"KRN",D1,"NM",D2,0),U),FGR=$$FILE^XPDV(D1)
"RTN","XPDET",101,0)
 Q:X="" 0
"RTN","XPDET",102,0)
 S X=+$O(@FGR@("B",X,0))
"RTN","XPDET",103,0)
 ;if it has ITEMs, node 10 then ok
"RTN","XPDET",104,0)
 I $O(@FGR@(X,10,0)) Q 1
"RTN","XPDET",105,0)
 ;if type is menu,potocol,protocol menu,limited,extended,window suite
"RTN","XPDET",106,0)
 I "MOQLXZ"[$P($G(@FGR@(X,0)),U,4) Q 1
"RTN","XPDET",107,0)
 Q 0
"RTN","XPDET",108,0)
 ;
"RTN","XPDET",109,0)
 ;only Fileman templates need to know what file they are associated with.
"RTN","XPDET",110,0)
 ;this value is also triggered to field .02 in the DD.
"RTN","XPDET",111,0)
TX(X,Y) ;X=template name, Y=file #
"RTN","XPDET",112,0)
 Q X_"    FILE #"_Y
"RTN","XPDET",113,0)
 ;
"RTN","XPDET",114,0)
TF(F) ;F=file, return field of file# for templates
"RTN","XPDET",115,0)
 Q $S(F>.403:"",F<.403:4,1:7)
"RTN","XPDET",116,0)
 ;
"RTN","XPDET",117,0)
GR(X) Q $G(^DIC(X,0,"GL"))
"RTN","XPDET",118,0)
 ;
"RTN","XPDET",119,0)
 ;screens checks that X is not already in the ENTRIES multiple
"RTN","XPDET",120,0)
SCR(Y) ;screen logic for ENTRIES multiple in file 9.6
"RTN","XPDET",121,0)
 N %,X,Z
"RTN","XPDET",122,0)
 S Z=^(0),X=$P(Z,U)
"RTN","XPDET",123,0)
 ;FM files are less than .44
"RTN","XPDET",124,0)
 I XPDF<.44 D  Q:X="" 0
"RTN","XPDET",125,0)
 .S %=$S(XPDF=.403:$P(Z,U,8),1:$P(Z,U,4)),X=X_"    FILE #"_%
"RTN","XPDET",126,0)
 .S:XPDF'=.403&($P(Z,U,8)>2) %=0 S:'% X=""
"RTN","XPDET",127,0)
 ;routine must exist and must be type 'R'
"RTN","XPDET",128,0)
 I XPDF=9.8 Q:$T(^@X)=""!($P(Z,U,2)'="R") 0
"RTN","XPDET",129,0)
 Q '$D(@(XPDIC_"""B"",X)"))
"RTN","XPDET",130,0)
 ;
"RTN","XPDET",131,0)
 ;screen checks that X is not in the exclude list, XPDN(0)
"RTN","XPDET",132,0)
SCR1(Y) ;screen logic for exclude list
"RTN","XPDET",133,0)
 N %,X
"RTN","XPDET",134,0)
 ;if name X is in the exclude list, XPDN(0,X), then fail
"RTN","XPDET",135,0)
 S Y(0)=^(0),X=$P(Y(0),U) Q:$D(XPDN(0,X)) 0
"RTN","XPDET",136,0)
 ;check if X is refered in the namespace by check the subscript
"RTN","XPDET",137,0)
 ;before X, if sub exist and $P(X,sub)="" then it is part of the
"RTN","XPDET",138,0)
 ;namespace, fail and return 0
"RTN","XPDET",139,0)
 S %=$O(XPDN(0,X),-1) I $L(%) Q:$P(X,%)="" 0
"RTN","XPDET",140,0)
 Q $$SCR(.Y)
"RTN","XPDET",141,0)
 ;
"RTN","XPDET",142,0)
 ;screen on PACKAGE LINK field in file 9.6,
"RTN","XPDET",143,0)
PCK(Y) ;check Package File name, Y=ien in package file
"RTN","XPDET",144,0)
 N %,Y,Z
"RTN","XPDET",145,0)
 S Z=^(0)
"RTN","XPDET",146,0)
 ;DA is undef when you are adding a new Build without a version number
"RTN","XPDET",147,0)
 Q:'$D(^XPD(9.6,+$G(DA),0)) 1
"RTN","XPDET",148,0)
 S Y=$L($P(Z,U)),%=$P(^XPD(9.6,DA,0),U),%=$$PKG^XPDUTL(%)
"RTN","XPDET",149,0)
 Q $P(Z,U)=$E(%,1,Y)!($P(Z,U,2)=%)
"RTN","XPDET",150,0)
VOLE(X) ;input transform for VOLUME SET multiple in INSTALL file
"RTN","XPDET",151,0)
 ;X=user input
"RTN","XPDET",152,0)
 N D,DD,DIC,DICR,DIX,DIY,DO,DS,XPD,Y,%
"RTN","XPDET",153,0)
 ;(0;11)=SIGNON/PRODUCTION
"RTN","XPDET",154,0)
 S DIC(0)="QEMZ",DIC="^%ZIS(14.5,",DIC("S")="I $P(^(0),U,11)"
"RTN","XPDET",155,0)
 D ^DIC K:Y<0 X Q:'$D(X)
"RTN","XPDET",156,0)
 S X=Y(0,0)
"RTN","XPDET",157,0)
 Q
"RTN","XPDET",158,0)
VOLH ;executable help for VOLUME SET multiple in INSTALL file
"RTN","XPDET",159,0)
 N D,DD,DIC,DIE,DIX,DIY,DO,DS,DZ,X,Y,%
"RTN","XPDET",160,0)
 S X="??",DIC(0)="QEMZ",DIC="^%ZIS(14.5,",DIC("S")="I $P(^(0),U,11)"
"RTN","XPDET",161,0)
 D ^DIC
"RTN","XPDET",162,0)
 Q
"RTN","XPDET",163,0)
ID97 ;identifier for Install file
"RTN","XPDET",164,0)
 N XPDET,XPD,XPD0,XPD1,XPD2,XPD9
"RTN","XPDET",165,0)
 S XPD0=$G(^(0)),XPD1=$G(^(1)),XPD2=$G(^(2)),XPD9=$P(XPD0,U,9),XPD="" Q:XPD9=""
"RTN","XPDET",166,0)
 D
"RTN","XPDET",167,0)
 .;Loaded, get DATE LOADED
"RTN","XPDET",168,0)
 .I 'XPD9 S XPD=$$FMTE^XLFDT($P(XPD0,U,3),2) Q
"RTN","XPDET",169,0)
 .Q:XPD9>3
"RTN","XPDET",170,0)
 .;Started, get INSTALL START TIME
"RTN","XPDET",171,0)
 .I XPD9=2 S XPD=$$FMTE^XLFDT($P(XPD1,U),2) Q
"RTN","XPDET",172,0)
 .;Completed, get INSTALL COMPLETE TIME
"RTN","XPDET",173,0)
 .I XPD9=3 S XPD=$$FMTE^XLFDT($P(XPD1,U,3),2) Q
"RTN","XPDET",174,0)
 .;Queued, get QUEUED TASK NUMBER
"RTN","XPDET",175,0)
 .I XPD9=1 S XPD="#"_$P(XPD0,U,6) Q
"RTN","XPDET",176,0)
 S XPDET(1)="   "_$$EXTERNAL^DILFD(9.7,.02,"",XPD9)_"  "_XPD,XPDET(1,"F")="?0"
"RTN","XPDET",177,0)
 S:XPD2]"" XPDET(2)="=> "_$E(XPD2,1,70),XPDET(2,"F")="!?5"
"RTN","XPDET",178,0)
 D EN^DDIOL(.XPDET)
"RTN","XPDET",179,0)
 Q
"RTN","XPDET",180,0)
 ;not being used right now,
"RTN","XPDET",181,0)
DEL(Y) ;delete access to file 9.7, 0-can't delete, 1-can
"RTN","XPDET",182,0)
 N %
"RTN","XPDET",183,0)
 S %=$P(^XPD(9.7,Y,0),U,9)
"RTN","XPDET",184,0)
 Q $S(%=3:1,%=2:0,$D(^XPD(9.7,"ASP",Y,1,Y)):1,1:0)
"RTN","XPDIA1")
0^7^B28193433
"RTN","XPDIA1",1,0)
XPDIA1 ;SFISC/RSD - Install Pre/Post Actions for Kernel files cont. ;12/02/96  15:18
"RTN","XPDIA1",2,0)
 ;;8.0;KERNEL;**2,44,51**;Jul 10, 1995
"RTN","XPDIA1",3,0)
 Q
"RTN","XPDIA1",4,0)
HLPF1 ;help frames file pre
"RTN","XPDIA1",5,0)
 K ^TMP($J,"XPD")
"RTN","XPDIA1",6,0)
 Q
"RTN","XPDIA1",7,0)
HLPE1 ;entry pre
"RTN","XPDIA1",8,0)
 S ^TMP($J,"XPD",DA)="" K ^DIC(9.2,DA,1),^(2),^(3),^(10)
"RTN","XPDIA1",9,0)
 Q
"RTN","XPDIA1",10,0)
HLPF2 ;file post
"RTN","XPDIA1",11,0)
 N DA,DIK,I,X,Y,Y0
"RTN","XPDIA1",12,0)
 ;need to send error message, need to setup message
"RTN","XPDIA1",13,0)
 S DA=0,DIK=DIC F  S DA=$O(^TMP($J,"XPD",DA)) Q:'DA  D
"RTN","XPDIA1",14,0)
 .;repoint Related Frame (2;0)
"RTN","XPDIA1",15,0)
 .S I=0 F  S I=$O(^DIC(9.2,DA,2,I)) Q:'I  S Y0=$G(^(I,0)),Y=$$LK^XPDIA("^DIC(9.2)",$P(Y0,U,2)),$P(^DIC(9.2,DA,2,I,0),U,2)=Y
"RTN","XPDIA1",16,0)
 .;repoint OBJECT (10;0)
"RTN","XPDIA1",17,0)
 .S (I,X)=0 F  S I=$O(^DIC(9.2,DA,10,I)) Q:'I  S Y0=$G(^(I,0)) D
"RTN","XPDIA1",18,0)
 ..S Y=$$LK^XPDIA("^MAG",$P(Y0,U)) S:Y $P(^DIC(9.2,DA,10,I,0),U)=Y,X=X+1_U_I
"RTN","XPDIA1",19,0)
 ..K:'Y ^DIC(9.2,DA,10,I)
"RTN","XPDIA1",20,0)
 .I X S $P(^DIC(9.2,DA,10,0),U,3,4)=$P(X,U,2)_U_+X
"RTN","XPDIA1",21,0)
 .D IX1^DIK
"RTN","XPDIA1",22,0)
 K ^TMP($J,"XPD")
"RTN","XPDIA1",23,0)
 Q
"RTN","XPDIA1",24,0)
HLPDEL ;help frame delete
"RTN","XPDIA1",25,0)
 N DA,DIK,XPDI,XPDJ
"RTN","XPDIA1",26,0)
 S XPDI=0
"RTN","XPDIA1",27,0)
 F  S XPDI=$O(^TMP($J,"XPDEL",XPDI)),XPDJ=0 Q:'XPDI  D
"RTN","XPDIA1",28,0)
 .S DIK="^DIC(9.2,XPDJ,2,"
"RTN","XPDIA1",29,0)
 .;check other frames that point to this one
"RTN","XPDIA1",30,0)
 .F  S XPDJ=$O(^DIC(9.2,"AE",XPDI,XPDJ)) Q:'XPDJ  S Z=$O(^(XPDJ,0)) D:Z
"RTN","XPDIA1",31,0)
 ..K DA S DA=Z,DA(1)=XPDJ D ^DIK
"RTN","XPDIA1",32,0)
 .;delete this frame
"RTN","XPDIA1",33,0)
 .K DA S DA=XPDI,DIK="^DIC(9.2," D ^DIK
"RTN","XPDIA1",34,0)
 Q
"RTN","XPDIA1",35,0)
BULE1 ;bulletin entry pre
"RTN","XPDIA1",36,0)
 N X,I S I=0
"RTN","XPDIA1",37,0)
 ;save current Mail Groups (2)
"RTN","XPDIA1",38,0)
 I $G(^XMB(3.6,DA,2,0))]"" S X(0)=^(0) F  S I=$O(^XMB(3.6,DA,2,I)) Q:'I  S X(I)=$G(^(I,0))
"RTN","XPDIA1",39,0)
 K ^XMB(3.6,DA)
"RTN","XPDIA1",40,0)
 ;after killing data, put back Mail Groups before data merge
"RTN","XPDIA1",41,0)
 I $D(X) S ^XMB(3.6,DA,2,0)=X(0),I=0 F  S I=$O(X(I)) Q:'I  S ^XMB(3.6,DA,2,I,0)=X(I)
"RTN","XPDIA1",42,0)
 Q
"RTN","XPDIA1",43,0)
BULDEL ;del bulletins
"RTN","XPDIA1",44,0)
 N DA,DIK,XPDI
"RTN","XPDIA1",45,0)
 S XPDI=0,DIK="^XMB(3.6,"
"RTN","XPDIA1",46,0)
 F  S XPDI=$O(^TMP($J,"XPDEL",XPDI)) Q:'XPDI  S DA=XPDI D ^DIK
"RTN","XPDIA1",47,0)
 Q
"RTN","XPDIA1",48,0)
MAILGF1 ;mail groups file pre
"RTN","XPDIA1",49,0)
 K ^TMP($J,"XPD")
"RTN","XPDIA1",50,0)
 Q
"RTN","XPDIA1",51,0)
MAILGE1 ;mail group entry pre
"RTN","XPDIA1",52,0)
 N I,J
"RTN","XPDIA1",53,0)
 S ^TMP($J,"XPD",DA)=""
"RTN","XPDIA1",54,0)
 ;save MEMBER GROUPS (5;0)
"RTN","XPDIA1",55,0)
 I $O(^XTMP("XPDI",XPDA,"KRN",3.8,OLDA,5,0)) M ^TMP($J,"XPD",DA,5)=^XTMP("XPDI",XPDA,"KRN",3.8,OLDA,5) K ^XTMP("XPDI",XPDA,"KRN",3.8,OLDA,5)
"RTN","XPDIA1",56,0)
 ;save MEMBER - REMOTE (6;0)
"RTN","XPDIA1",57,0)
 I $O(^XTMP("XPDI",XPDA,"KRN",3.8,OLDA,6,0)) M ^TMP($J,"XPD",DA,6)=^XTMP("XPDI",XPDA,"KRN",3.8,OLDA,6) K ^XTMP("XPDI",XPDA,"KRN",3.8,OLDA,6)
"RTN","XPDIA1",58,0)
 ;if there is a new Description, kill the old Description
"RTN","XPDIA1",59,0)
 K:$O(^XTMP("XPDI",XPDA,"KRN",3.8,OLDA,2,0)) ^XMB(3.8,DA,2)
"RTN","XPDIA1",60,0)
 S I=^XMB(3.8,DA,0),J=^XTMP("XPDI",XPDA,"KRN",3.8,OLDA,0)
"RTN","XPDIA1",61,0)
 ;save REFERENCE COUNT (0;4) & LAST REFERENCED (0;5)
"RTN","XPDIA1",62,0)
 S:$P(I,U,4) $P(J,U,4)=$P(I,U,4) S:$P(I,U,5) $P(J,U,5)=$P(I,U,5)
"RTN","XPDIA1",63,0)
 ;save COORDINATOR (0;7)
"RTN","XPDIA1",64,0)
 S:$P(I,U,7) $P(J,U,7)=$P(I,U,7)
"RTN","XPDIA1",65,0)
 S ^XTMP("XPDI",XPDA,"KRN",3.8,OLDA,0)=J,I=$G(^XMB(3.8,DA,3))
"RTN","XPDIA1",66,0)
 ;save ORGANIZER (3;1)
"RTN","XPDIA1",67,0)
 I $P(I,U) S $P(^XTMP("XPDI",XPDA,"KRN",3.8,OLDA,3),U)=$P(I,U)
"RTN","XPDIA1",68,0)
 Q
"RTN","XPDIA1",69,0)
MAILGF2 ;mail group file post
"RTN","XPDIA1",70,0)
 N DA,DIK,XPDMDA,XPDI,Y
"RTN","XPDIA1",71,0)
 S XPDMDA=0,DIK="^XMB(3.8,"
"RTN","XPDIA1",72,0)
 F  S XPDMDA=$O(^TMP($J,"XPD",XPDMDA)) Q:'XPDMDA  D
"RTN","XPDIA1",73,0)
 .;merge & repoint MEMBER GROUP (5;0)
"RTN","XPDIA1",74,0)
 .S XPDI=0
"RTN","XPDIA1",75,0)
 .F  S XPDI=$O(^TMP($J,"XPD",XPDMDA,5,XPDI)) Q:'XPDI  S Y=$P($G(^(XPDI,0)),U) D:Y]"" ADD^XPDIA(3.811,XPDMDA,Y)
"RTN","XPDIA1",76,0)
 .;merge & repoint MEMBER - REMOTE (6;0)
"RTN","XPDIA1",77,0)
 .S XPDI=0
"RTN","XPDIA1",78,0)
 .F  S XPDI=$O(^TMP($J,"XPD",XPDMDA,6,XPDI)) Q:'XPDI  S Y=$P($G(^(XPDI,0)),U) D:Y]"" ADD^XPDIA(3.812,XPDMDA,Y)
"RTN","XPDIA1",79,0)
 .S DA=XPDMDA D IX1^DIK
"RTN","XPDIA1",80,0)
 K ^TMP($J,"XPD")
"RTN","XPDIA1",81,0)
 Q
"RTN","XPDIA1",82,0)
HLAPF1 ;HL7 application parameter #771 file pre
"RTN","XPDIA1",83,0)
 K ^TMP($J,"XPD")
"RTN","XPDIA1",84,0)
 Q
"RTN","XPDIA1",85,0)
HLAPE1 ;HL7 application parameter #771 entry pre
"RTN","XPDIA1",86,0)
 N I,J
"RTN","XPDIA1",87,0)
 S ^TMP($J,"XPD",DA)=""
"RTN","XPDIA1",88,0)
 S I=^HL(771,DA,0),J=^XTMP("XPDI",XPDA,"KRN",771,OLDA,0)
"RTN","XPDIA1",89,0)
 ;save FACILITY NAME (0;3)
"RTN","XPDIA1",90,0)
 S:$P(I,U,3)]"" $P(J,U,3)=$P(I,U,3)
"RTN","XPDIA1",91,0)
 ;repoint MAIL GROUP (0;4)
"RTN","XPDIA1",92,0)
 S:$P(J,U,4)]"" $P(J,U,4)=$$LK^XPDIA("^XMB(3.8)",$P(J,U,4))
"RTN","XPDIA1",93,0)
 ;repoint COUNTRY CODE (0;7)
"RTN","XPDIA1",94,0)
 S:$P(J,U,7)]"" $P(J,U,7)=$$LK^XPDIA("^HL(779.004)",$P(J,U,7))
"RTN","XPDIA1",95,0)
 S ^XTMP("XPDI",XPDA,"KRN",771,OLDA,0)=J
"RTN","XPDIA1",96,0)
 ;remove HL7 SEGMENT (SEG;0), HL7 MESSAGE (MSG;0)
"RTN","XPDIA1",97,0)
 K ^HL(771,DA,"SEG"),^("MSG")
"RTN","XPDIA1",98,0)
 Q
"RTN","XPDIA1",99,0)
HLAPF2 ;HL7 application parameter #771 file post
"RTN","XPDIA1",100,0)
 N DA,DIK,XPDI,X,Y
"RTN","XPDIA1",101,0)
 S DA=0,DIK="^HL(771,"
"RTN","XPDIA1",102,0)
 F  S DA=$O(^TMP($J,"XPD",DA)) Q:'DA  D
"RTN","XPDIA1",103,0)
 .;repoint HL7 SEGMENT (SEG;0)
"RTN","XPDIA1",104,0)
 .S XPDI=0
"RTN","XPDIA1",105,0)
 .F  S XPDI=$O(^HL(771,DA,"SEG",XPDI)) Q:'XPDI  S Y=$P($G(^(XPDI,0)),U) D
"RTN","XPDIA1",106,0)
 ..S X=$$LK^XPDIA("^HL(771.3)",$P(Y,U))
"RTN","XPDIA1",107,0)
 ..I X]"" S $P(^HL(771,DA,"SEG",XPDI,0),U)=X Q
"RTN","XPDIA1",108,0)
 ..K ^HL(771,DA,"SEG",XPDI)
"RTN","XPDIA1",109,0)
 .;repoint HL7 MESSAGE (MSG;0)
"RTN","XPDIA1",110,0)
 .S XPDI=0
"RTN","XPDIA1",111,0)
 .F  S XPDI=$O(^HL(771,DA,"MSG",XPDI)) Q:'XPDI  S Y=$P($G(^(XPDI,0)),U) D
"RTN","XPDIA1",112,0)
 ..S X=$$LK^XPDIA("^HL(771.3)",$P(Y,U))
"RTN","XPDIA1",113,0)
 ..I X]"" S $P(^HL(771,DA,"MSG",XPDI,0),U)=X Q
"RTN","XPDIA1",114,0)
 ..K ^HL(771,DA,"MSG",XPDI)
"RTN","XPDIA1",115,0)
 .D IX1^DIK
"RTN","XPDIA1",116,0)
 K ^TMP($J,"XPD")
"RTN","XPDIA1",117,0)
 Q
"RTN","XPDIA1",118,0)
HLLLPE ;HL7 lower level protocol #869.2 entry pre
"RTN","XPDIA1",119,0)
 N I
"RTN","XPDIA1",120,0)
 S I=$P(^XTMP("XPDI",XPDA,"KRN",869.2,OLDA,0),U,2)
"RTN","XPDIA1",121,0)
 ;repoint LLP TYPE (0;2)
"RTN","XPDIA1",122,0)
 S:I]"" $P(^XTMP("XPDI",XPDA,"KRN",869.2,OLDA,0),U,2)=$$LK^XPDIA("^HLCS(869.1)",I)
"RTN","XPDIA1",123,0)
 S I=$P($G(^XTMP("XPDI",XPDA,"KRN",869.2,OLDA,100)),U)
"RTN","XPDIA1",124,0)
 ;repoint MAIL GROUP (100;1)
"RTN","XPDIA1",125,0)
 S:I]"" $P(^XTMP("XPDI",XPDA,"KRN",869.2,OLDA,100),U)=$$LK^XPDIA("^XMB(3.8)",I)
"RTN","XPDIA1",126,0)
 ;save HLLP DEVICE (200;1)
"RTN","XPDIA1",127,0)
 S I=$G(^HLCS(869.2,DA,200))
"RTN","XPDIA1",128,0)
 S:I $P(^XTMP("XPDI",XPDA,"KRN",869.2,OLDA,200),U)=$P(I,U)
"RTN","XPDIA1",129,0)
 ;save X3.28 DEVICE (300;1)
"RTN","XPDIA1",130,0)
 S I=$G(^HLCS(869.2,DA,300))
"RTN","XPDIA1",131,0)
 S:I $P(^XTMP("XPDI",XPDA,"KRN",869.2,OLDA,300),U)=$P(I,U)
"RTN","XPDIA1",132,0)
 Q
"RTN","XPDIA1",133,0)
HLLLE ;HL7 logical link #870 entry pre
"RTN","XPDIA1",134,0)
 N I,J
"RTN","XPDIA1",135,0)
 S I=^HLCS(870,DA,0),J=^XTMP("XPDI",XPDA,"KRN",870,OLDA,0)
"RTN","XPDIA1",136,0)
 ;repoint INSTITUTION (0;2)
"RTN","XPDIA1",137,0)
 S:$P(J,U,2)]"" $P(J,U,2)=$$LK^XPDIA("^DIC(4)",$P(J,U,2))
"RTN","XPDIA1",138,0)
 ;repoint LLP PARAMETER (0;3)
"RTN","XPDIA1",139,0)
 S:$P(J,U,3)]"" $P(J,U,3)=$$LK^XPDIA("^HLCS(869.2)",$P(J,U,3))
"RTN","XPDIA1",140,0)
 ;save QUEUE SIZE (0;21)
"RTN","XPDIA1",141,0)
 S:$P(I,U,21)]"" $P(J,U,21)=$P(I,U,21)
"RTN","XPDIA1",142,0)
 S ^XTMP("XPDI",XPDA,"KRN",870,OLDA,0)=J
"RTN","XPDIA1",143,0)
 Q
"RTN","XPDIA1",144,0)
KEYDEL ;del security keys
"RTN","XPDIA1",145,0)
 N XPDI S XPDI=0
"RTN","XPDIA1",146,0)
 F  S XPDI=$O(^TMP($J,"XPDEL",XPDI)) Q:'XPDI  D DEL^XPDKEY(XPDI)
"RTN","XPDIA1",147,0)
 Q
"RTN","XPDIA1",148,0)
LMDEL ;del list manager templates
"RTN","XPDIA1",149,0)
 N DA,DIK,XPDI
"RTN","XPDIA1",150,0)
 S XPDI=0,DIK="^SD(409.61,"
"RTN","XPDIA1",151,0)
 F  S XPDI=$O(^TMP($J,"XPDEL",XPDI)) Q:'XPDI  S DA=XPDI D ^DIK
"RTN","XPDIA1",152,0)
 Q
"RTN","XPDIA1",153,0)
RPCDEL ;del Kernel RPCs
"RTN","XPDIA1",154,0)
 N DA,DIK,XPDI
"RTN","XPDIA1",155,0)
 S XPDI=0,DIK="^XWB(8994,"
"RTN","XPDIA1",156,0)
 F  S XPDI=$O(^TMP($J,"XPDEL",XPDI)) Q:'XPDI  S DA=XPDI D ^DIK
"RTN","XPDIA1",157,0)
 Q
"RTN","XPDIP")
0^2^B35874633
"RTN","XPDIP",1,0)
XPDIP ;SFISC/RSD - Install Package & Routine file ;11/25/96  11:12
"RTN","XPDIP",2,0)
 ;;8.0;KERNEL;**15,21,28,30,41,44,51**;Jul 10, 1995
"RTN","XPDIP",3,0)
 Q
"RTN","XPDIP",4,0)
PKG ;
"RTN","XPDIP",5,0)
 N %,OLDA,DA,DIK,XPD,XPDFIL,XPDPKG,XPDBLDA,Y
"RTN","XPDIP",6,0)
 ;update variable for graphic display
"RTN","XPDIP",7,0)
 I $D(XPDIDVT) S XPDIDTOT=10,XPDIDMOD=1,XPDIDCNT=0 D:XPDIDVT UPDATE^XPDID(0)
"RTN","XPDIP",8,0)
 ;XPDPKG=ien of Package file, OLDA=old Package ien
"RTN","XPDIP",9,0)
 S Y=$$PKGADD,XPDPKG=$P(Y,U),OLDA=$P(Y,U,2)
"RTN","XPDIP",10,0)
 ;Package file entry not sent, XPDPKG=0
"RTN","XPDIP",11,0)
 G:'XPDPKG PKGEND
"RTN","XPDIP",12,0)
 ;update version multiple
"RTN","XPDIP",13,0)
 S DA=XPDPKG D PKGV
"RTN","XPDIP",14,0)
PKGH I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+2 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",15,0)
 S %=$P(^DIC(9.4,XPDPKG,0),U,4)
"RTN","XPDIP",16,0)
 ;repoint Help Frame (0;4)
"RTN","XPDIP",17,0)
 I $L(%),'% S $P(^DIC(9.4,XPDPKG,0),U,4)=$$LK^XPDIA("^DIC(9.2)",%),DIK="^DIC(9.4," D IX1^DIK
"RTN","XPDIP",18,0)
 ;OERR Package Parameter multiple in file 100.99
"RTN","XPDIP",19,0)
 D:$D(^ORD(100.99))&$D(^XTMP("XPDI",XPDA,"OER",OLDA))
"RTN","XPDIP",20,0)
 .S DA=XPDPKG,DA(1)=1,DIK="^ORD(100.99,1,5," D:$D(^ORD(100.99,1,5,DA)) ^DIK
"RTN","XPDIP",21,0)
 .S:'$D(^ORD(100.99,1,5,0)) ^ORD(100.99,1,5,0)=U_$P(^DD(100.99,5,0),U,2) S $P(^(0),U,3,4)=DA_U_($P(^(0),U,3)+1)
"RTN","XPDIP",22,0)
 .M ^ORD(100.99,1,5,DA)=^XTMP("XPDI",XPDA,"OER",OLDA) S $P(^(DA,0),U)=DA,%=$P(^(0),U,4)
"RTN","XPDIP",23,0)
 .S:$L(%) $P(^ORD(100.99,1,5,DA,0),U,4)=$$LK^XPDIA("^ORD(100.98)",%)
"RTN","XPDIP",24,0)
 .D IX1^DIK
"RTN","XPDIP",25,0)
PKGEND S XPDBLDA=$$BLD(XPDBLD) Q:'XPDBLDA
"RTN","XPDIP",26,0)
 ;move Alpha/Beta testing info to Kernel site para file
"RTN","XPDIP",27,0)
 I XPDPKG S %=$G(^XPD(9.6,XPDBLDA,"ABPKG")) D
"RTN","XPDIP",28,0)
 .;Install message and they have an address, set flag in XPDIST
"RTN","XPDIP",29,0)
 .I $P(%,U)="y",$P(%,U,2)="y",$L($P(%,U,3)) S $P(XPDIST,U,2)=$P(%,U,3)
"RTN","XPDIP",30,0)
 .D EN^XQABLOAD(XPDBLDA)
"RTN","XPDIP",31,0)
 Q
"RTN","XPDIP",32,0)
PKGADD() ;check Package file, add if not there
"RTN","XPDIP",33,0)
 ;return new Package file ien^old ien
"RTN","XPDIP",34,0)
 N DA,DIK,XPD,XPDFIL,XPDO,X,Y
"RTN","XPDIP",35,0)
 S DA=+$P(^XPD(9.7,XPDA,0),U,2),XPDO=+$O(^XTMP("XPDI",XPDA,"PKG",0)),X=$P($G(^(XPDO,0)),U)
"RTN","XPDIP",36,0)
 I DA,$D(^DIC(9.4,DA,0)) Q DA_U_XPDO
"RTN","XPDIP",37,0)
 ;quit if there was no package entry sent
"RTN","XPDIP",38,0)
 Q:'XPDO "0^0"
"RTN","XPDIP",39,0)
 S XPDFIL=9.4,Y=$$DIC^XPDIK(9.4,X) Q:'Y "0^0"
"RTN","XPDIP",40,0)
 S DA=+Y
"RTN","XPDIP",41,0)
 ;if new entry in package file, bring in everything
"RTN","XPDIP",42,0)
 I $P(Y,U,3) D
"RTN","XPDIP",43,0)
 .M ^DIC(9.4,DA)=^XTMP("XPDI",XPDA,"PKG",XPDO)
"RTN","XPDIP",44,0)
 .;kill the -1 flag node first
"RTN","XPDIP",45,0)
 .K ^DIC(9.4,DA,-1)
"RTN","XPDIP",46,0)
 .;re-cross ref after adding a new package
"RTN","XPDIP",47,0)
 .S DIK="^DIC(9.4," D IX1^DIK
"RTN","XPDIP",48,0)
 ;add package to file 9.7
"RTN","XPDIP",49,0)
 S XPD(9.7,XPDA_",",1)=DA D FILE^DIE("","XPD")
"RTN","XPDIP",50,0)
 Q DA_U_XPDO
"RTN","XPDIP",51,0)
 ;
"RTN","XPDIP",52,0)
BLD(XPDBLD) ;add Build entry, XPDBLD=Build ien in ^XTMP("XPDI",XPDA,"BLD",
"RTN","XPDIP",53,0)
 N %,DA,DIK,XPDFIL,Y
"RTN","XPDIP",54,0)
 I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+4 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",55,0)
 ;XPDBLD=Build ien in ^XTMP, set in XPDIJ
"RTN","XPDIP",56,0)
 S XPDFIL=9.6,Y=$$DIC^XPDIK(9.6,XPDNM) Q:'Y ""
"RTN","XPDIP",57,0)
 S DA=+Y
"RTN","XPDIP",58,0)
 ;Build entry not new, remove old data
"RTN","XPDIP",59,0)
 I '$P(Y,U,3) S %=$P(^XPD(9.6,DA,0),U,2) K ^XPD(9.6,DA) K:% ^XPD(9.6,"C",%,DA)
"RTN","XPDIP",60,0)
 M ^XPD(9.6,DA)=^XTMP("XPDI",XPDA,"BLD",XPDBLD)
"RTN","XPDIP",61,0)
 ;reset Package File Link (0;2)
"RTN","XPDIP",62,0)
 ;XPDIST = national site tracking^A/B install message address
"RTN","XPDIP",63,0)
 S $P(^XPD(9.6,DA,0),U,2)=$S(XPDPKG:XPDPKG,1:"") S:$P(^(0),U,5)="y" XPDIST=1
"RTN","XPDIP",64,0)
 ;re-index cross-ref. on fields .01 and 1
"RTN","XPDIP",65,0)
 S DIK="^XPD(9.6," F Y=.01,1 S DIK(1)=Y D EN1^DIK
"RTN","XPDIP",66,0)
 I $D(XPDIDVT) D UPDATE^XPDID(XPDIDTOT)
"RTN","XPDIP",67,0)
 Q DA
"RTN","XPDIP",68,0)
 ;
"RTN","XPDIP",69,0)
 ;update the version multiple in the package file
"RTN","XPDIP",70,0)
PKGV N %
"RTN","XPDIP",71,0)
 I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+2 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",72,0)
 ;%=ien in the Version multiple_U_ien in Patch multiple in ^XTMP
"RTN","XPDIP",73,0)
 S %=$G(^XTMP("XPDI",XPDA,"PKG",OLDA,-1))
"RTN","XPDIP",74,0)
 I XPDNM'["*" D  Q
"RTN","XPDIP",75,0)
 .S %=+% Q:'$D(^XTMP("XPDI",XPDA,"PKG",OLDA,22,%,0))  S %=^(0) S:$D(^(1)) %(1)=$NA(^(1))
"RTN","XPDIP",76,0)
 .S $P(%,U,3,4)=DT_U_DUZ,%=$$PKGVER(DA,.%)
"RTN","XPDIP",77,0)
 ;update patch history multiple
"RTN","XPDIP",78,0)
 Q:'$D(^XTMP("XPDI",XPDA,"PKG",OLDA,22,+%,"PAH",+$P(%,U,2),0))  S %=$P(^(0),U) S:$D(^(1)) %(1)=$NA(^(1))
"RTN","XPDIP",79,0)
 ;check File Comment, %=patch number
"RTN","XPDIP",80,0)
 S:$P(^XPD(9.7,XPDA,2),%,2)?1" SEQ #"1.3N %=%_$P(^(2),%,2)
"RTN","XPDIP",81,0)
 S $P(%,U,2,3)=DT_U_DUZ,%=$$PKGPAT(DA,$$VER^XPDUTL(XPDNM),.%)
"RTN","XPDIP",82,0)
 Q
"RTN","XPDIP",83,0)
 ;
"RTN","XPDIP",84,0)
PKGVER(XPDPDA,XPDI) ;update version in package file, XPDPDA=Package file ien, return ien
"RTN","XPDIP",85,0)
 ;XPDI=version^date distr.^date installed^install by
"RTN","XPDIP",86,0)
 ;XPDI(1)=root of description field
"RTN","XPDIP",87,0)
 N I,X,XPD,XPDIEN,XPDJ,XPDV
"RTN","XPDIP",88,0)
 S XPDIEN=","_XPDPDA_",",XPDV=$$MDIC(9.49,XPDIEN,$P(XPDI,U)) Q:'XPDV 0
"RTN","XPDIP",89,0)
 S XPD(9.4,XPDPDA_",",13)=$P(XPDI,U),X="XPD(9.49,"""_XPDV_XPDIEN_""")"
"RTN","XPDIP",90,0)
 F I=1:1:3 S:$P(XPDI,U,I+1)]"" @X@(I)=$P(XPDI,U,I+1)
"RTN","XPDIP",91,0)
 S:$D(XPDI(1)) @X@(41)=XPDI(1)
"RTN","XPDIP",92,0)
 D FILE^DIE("","XPD")
"RTN","XPDIP",93,0)
 Q XPDV
"RTN","XPDIP",94,0)
 ;
"RTN","XPDIP",95,0)
PKGPAT(XPDPDA,XPDV,XPDI) ;update patch history
"RTN","XPDIP",96,0)
 ;INPUT: XPDPDA=Package file ien, XPDV=version
"RTN","XPDIP",97,0)
 ;XPDI=patch^date installed^install by,   returns version ien^patch ien
"RTN","XPDIP",98,0)
 N I,X,XPD,XPDP
"RTN","XPDIP",99,0)
 ;quit if we can't find the version multiple, resets XPDV=ien of version
"RTN","XPDIP",100,0)
 S XPDIEN=","_XPDPDA_",",XPDV=$$MDIC(9.49,XPDIEN,XPDV) Q:'XPDV 0
"RTN","XPDIP",101,0)
 S XPDIEN=","_XPDV_XPDIEN,XPDP=$$MDIC(9.4901,XPDIEN,$P(XPDI,U)) Q:'XPDP 0
"RTN","XPDIP",102,0)
 S X="XPD(9.4901,"""_XPDP_XPDIEN_""")"
"RTN","XPDIP",103,0)
 F I=.02,.03 S:$P(XPDI,U,I*100)]"" @X@(I)=$P(XPDI,U,I*100)
"RTN","XPDIP",104,0)
 S:$D(XPDI(1)) @X@(1)=XPDI(1)
"RTN","XPDIP",105,0)
 D FILE^DIE("","XPD")
"RTN","XPDIP",106,0)
 Q XPDV_U_XPDP
"RTN","XPDIP",107,0)
 ;
"RTN","XPDIP",108,0)
 ;XPDF=subfile #,XPDIEN=ien string, X=input
"RTN","XPDIP",109,0)
MDIC(XPDF,XPDIEN,XPDX) ;
"RTN","XPDIP",110,0)
 N DIERR,XPD,XPDN
"RTN","XPDIP",111,0)
 D FIND^DIC(XPDF,XPDIEN,"","XQf",XPDX,5,"","","","XPD")
"RTN","XPDIP",112,0)
 ;one or more matches, just return first one
"RTN","XPDIP",113,0)
 I $G(XPD(0)) D:XPD(0)>1  Q XPD(1)
"RTN","XPDIP",114,0)
 .N %
"RTN","XPDIP",115,0)
 .S %(1)=$P(^DD(XPDF,.01,0),U)_"  "_XPDX_"  is Duplicated,",%(2)=" only ien #"_XPD(1)_" was updated."
"RTN","XPDIP",116,0)
 .D MES^XPDUTL(.%)
"RTN","XPDIP",117,0)
 ;add a new entry
"RTN","XPDIP",118,0)
 S XPDN(XPDF,"+1"_XPDIEN,.01)=XPDX K XPD
"RTN","XPDIP",119,0)
 D UPDATE^DIE("","XPDN","XPD")
"RTN","XPDIP",120,0)
 I '$G(XPD(1)) D BMES^XPDUTL(" "_$P(^DD(XPDF,.01,0),U)_" "_XPDX_" **Couldn't Add to file**") Q 0
"RTN","XPDIP",121,0)
 Q XPD(1)
"RTN","XPDIP",122,0)
 ;
"RTN","XPDIP",123,0)
RTN ;move rtns to install file
"RTN","XPDIP",124,0)
 N XPD,XPDC,XPDCR,XPDI,XPDJ,XPDK,XPDL,XPDM,XPDR,XPDRH,X
"RTN","XPDIP",125,0)
 K ^XPD(9.7,XPDA,"RTN"),^TMP($J)
"RTN","XPDIP",126,0)
 S (XPDC,XPDCR,XPDRH)=0,XPDJ=""
"RTN","XPDIP",127,0)
 ;get all routines that were loaded, XPDM=action
"RTN","XPDIP",128,0)
 ;actions are 0=load, 1=delete, 2=skip
"RTN","XPDIP",129,0)
 F  S XPDJ=$O(^XTMP("XPDI",XPDA,"RTN",XPDJ)) Q:XPDJ=""  S XPDM=^(XPDJ) D:'XPDM
"RTN","XPDIP",130,0)
 .;XPD, build array to update ROUTINE multiple in INSTALL file
"RTN","XPDIP",131,0)
 .S XPDC=XPDC+1,^TMP($J,"XPDL",XPDC)=XPDC,^TMP($J,"XPD",9.704,"+"_XPDC_","_XPDA_",",.01)=XPDJ
"RTN","XPDIP",132,0)
 .;XPDR, build array to update ROUTINE file
"RTN","XPDIP",133,0)
 .S:'$D(^DIC(9.8,"B",XPDJ)) XPDCR=XPDCR+1,^TMP($J,"XPDR",9.8,"?+"_XPDCR_",",.01)=XPDJ,^(1)="R"
"RTN","XPDIP",134,0)
 ;if we are doing VT graphic display, update only 40%
"RTN","XPDIP",135,0)
 I $D(XPDIDVT) S XPDIDCNT=XPDIDTOT*.4 D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",136,0)
 F XPDK="DIKZ","DIEZ","DIPZ" D
"RTN","XPDIP",137,0)
 .S XPDI=0
"RTN","XPDIP",138,0)
 .;loop thru list of compile template routines
"RTN","XPDIP",139,0)
 .;XTMP("XPDI",XPDA,"DIKZ",ien,routine name)
"RTN","XPDIP",140,0)
 .F  S XPDI=$O(^XTMP("XPDI",XPDA,XPDK,XPDI)),XPDJ="" Q:'XPDI  D
"RTN","XPDIP",141,0)
 ..I 'XPDRH D BMES^XPDUTL(" The following Routines were created during this install:") S XPDRH=1
"RTN","XPDIP",142,0)
 ..F  S XPDJ=$O(^XTMP("XPDI",XPDA,XPDK,XPDI,XPDJ)) Q:XPDJ=""  D:'$D(^XTMP("XPDI",XPDA,"RTN",XPDJ))
"RTN","XPDIP",143,0)
 ...S XPDC=XPDC+1,^TMP($J,"XPDL",XPDC)=XPDC,^TMP($J,"XPD",9.704,"+"_XPDC_","_XPDA_",",.01)=XPDJ
"RTN","XPDIP",144,0)
 ...D MES^XPDUTL("     "_XPDJ)
"RTN","XPDIP",145,0)
 ;update routine multiple in Install file with routines and
"RTN","XPDIP",146,0)
 ;compile template routines
"RTN","XPDIP",147,0)
 I $D(^TMP($J,"XPD"))>9 D
"RTN","XPDIP",148,0)
 .D UPDATE^DIE("","^TMP($J,""XPD"")","^TMP($J,""XPDL"")")
"RTN","XPDIP",149,0)
 .;if we are doing VT graphic display, update only 40%
"RTN","XPDIP",150,0)
 .I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+(XPDIDTOT*.40) D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIP",151,0)
 ;update Routine file
"RTN","XPDIP",152,0)
 D:$D(^TMP($J,"XPDR"))>9 UPDATE^DIE("","^TMP($J,""XPDR"")")
"RTN","XPDIP",153,0)
 ;if we are doing VT graphic display, update 100%
"RTN","XPDIP",154,0)
 I $D(XPDIDVT) D UPDATE^XPDID(XPDIDTOT)
"RTN","XPDIP",155,0)
 Q
"RTN","XPDIU")
0^5^B12097569
"RTN","XPDIU",1,0)
XPDIU ;SFISC/RSD - UNload/Convert/Rollup Distribution Global ;11/25/96  09:45
"RTN","XPDIU",2,0)
 ;;8.0;KERNEL;**15,41,44,51**;Jul 10, 1995
"RTN","XPDIU",3,0)
EN1 ;unload
"RTN","XPDIU",4,0)
 N %,DA,DIK,DIR,DIRUT,X,XPD,XPDT,XPDQ,XPDQUIT,Y
"RTN","XPDIU",5,0)
 S DA=0 F  S DA=$O(^XTMP("XPDI",DA)) Q:'DA  I '$D(^XPD(9.7,DA)) K ^XTMP("XPDI",DA)
"RTN","XPDIU",6,0)
 ;must be Loaded or Queued and be the starting package
"RTN","XPDIU",7,0)
 S DA=$$LOOK^XPDI("I $P(^(0),U,9)<2,$D(^XPD(9.7,""ASP"",Y,1,Y))") Q:'DA
"RTN","XPDIU",8,0)
 S XPDQ=^XPD(9.7,DA,0),DIR(0)="Y",DIR("A")="Want to continue with the Unload of this Distribution",DIR("B")="NO"
"RTN","XPDIU",9,0)
 S DIR("?")="YES will delete the Transport Global and the entry in the Install file for these Packages."
"RTN","XPDIU",10,0)
 I $P(XPDQ,U,9)=1,$P(XPDQ,U,6) W !,"This Distribution is Queued for Install with task number ",$P(XPDQ,U,6),!,"Don't forget to delete Taskman Task."
"RTN","XPDIU",11,0)
 D ^DIR Q:'Y!$D(DIRUT)
"RTN","XPDIU",12,0)
 S XPD=0,DIK="^XPD(9.7,"
"RTN","XPDIU",13,0)
 F  S XPD=$O(XPDT(XPD)) Q:'XPD  S DA=+XPDT(XPD) D ^DIK K ^XTMP("XPDI",DA)
"RTN","XPDIU",14,0)
 ;check if Out-Of-Order setname is defined, kill it
"RTN","XPDIU",15,0)
 I $D(^XTMP("XQOO",$P(XPDQ,U))) K ^($P(XPDQ,U))
"RTN","XPDIU",16,0)
 Q
"RTN","XPDIU",17,0)
EN2 ;convert
"RTN","XPDIU",18,0)
 N %,DA,DIK,DIR,DIRUT,X,XPD,XPDBLD,XPDI,XPDNM,XPDPKG,XPDPMT,XPDT,XPDQUIT,Y
"RTN","XPDIU",19,0)
 S XPDI=$$LOOK^XPDI("I '$P(^(0),U,9),$D(^XPD(9.7,""ASP"",Y,1,Y))") Q:'XPDI
"RTN","XPDIU",20,0)
 K XPDT("DA"),XPDT("NM")
"RTN","XPDIU",21,0)
 S XPDT=0 F  S XPDT=$O(XPDT(XPDT)) Q:'XPDT  D
"RTN","XPDIU",22,0)
 .S Y=+XPDT(XPDT) Q:$D(^XTMP("XPDI",Y))
"RTN","XPDIU",23,0)
 .W !,$P(XPDT(XPDT),U,2),"   ** Transport Global doesn't exist **",$C(7)
"RTN","XPDIU",24,0)
 .K XPDT(XPDT) S XPDQUIT=1
"RTN","XPDIU",25,0)
 Q:$D(XPDT)'>9!$D(XPDQUIT)
"RTN","XPDIU",26,0)
 S DIR(0)="Y",DIR("A")="Want to make the Transport Globals Permanet",DIR("B")="NO"
"RTN","XPDIU",27,0)
 S DIR("?",1)="YES will leave the Transport Global so you can transport this TG in mulitple Distributions."
"RTN","XPDIU",28,0)
 S DIR("?")="NO will remove the Transport Global after you transport this TG in the next Distribution."
"RTN","XPDIU",29,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XPDIU",30,0)
 S XPDPMT=Y,DIR("A")="Want to continue with the Conversion of the Package(s)",DIR("B")="NO"
"RTN","XPDIU",31,0)
 S DIR("?",1)="YES will convert the Packages to globals that can be transported.",DIR("?")="An entry will be added to the Build file and the entry in the Install file will be deleted."
"RTN","XPDIU",32,0)
 D ^DIR Q:'Y!$D(DIRUT)
"RTN","XPDIU",33,0)
 S XPDT=0,DIK="^XPD(9.7,"
"RTN","XPDIU",34,0)
 F  S XPDT=$O(XPDT(XPDT)) Q:'XPDT  D  Q:$D(XPDQUIT)
"RTN","XPDIU",35,0)
 .S XPDA=+XPDT(XPDT),XPDNM=$P(XPDT(XPDT),U,2),XPDBLD=$O(^XTMP("XPDI",XPDA,"BLD",0)),XPDPKG=+$O(^XTMP("XPDI",XPDA,"PKG",0))
"RTN","XPDIU",36,0)
 .;resolve the Package file link
"RTN","XPDIU",37,0)
 .D:XPDPKG
"RTN","XPDIU",38,0)
 ..N DIC,X,Y
"RTN","XPDIU",39,0)
 ..S DIC="^DIC(9.4,",DIC(0)="X",X=$P(^XTMP("XPDI",XPDA,"PKG",XPDPKG,0),U)
"RTN","XPDIU",40,0)
 ..D ^DIC I Y<0 S XPDPKG=0 Q
"RTN","XPDIU",41,0)
 ..S XPDPKG=+Y
"RTN","XPDIU",42,0)
 .S DA=$$BLD^XPDIP(XPDBLD) D:DA
"RTN","XPDIU",43,0)
 ..S ^XTMP("XPDT",DA)=XPDPMT M ^XTMP("XPDT",DA)=^XTMP("XPDI",XPDA)
"RTN","XPDIU",44,0)
 .I 'DA W !,XPDNM,"   ** Couldn't add to Build file **" S XPDQUIT=1 Q
"RTN","XPDIU",45,0)
 .;kill Install file entry
"RTN","XPDIU",46,0)
 .S DA=XPDA D ^DIK
"RTN","XPDIU",47,0)
 .K ^XTMP("XPDI",XPDA)
"RTN","XPDIU",48,0)
 ;set expiration date to 1 year if global should be permanent, else 30
"RTN","XPDIU",49,0)
 S ^XTMP("XPDT",0)=$$FMADD^XLFDT(DT,$S(XPDPMT:365,1:30))_U_DT
"RTN","XPDIU",50,0)
 W !,"  ** DONE **",!
"RTN","XPDIU",51,0)
 Q
"RTN","XPDT")
0^1^B55743170
"RTN","XPDT",1,0)
XPDT ;SFISC/RSD - Transport a package; 15 Apr 96 10:15 ;11/19/96  09:18
"RTN","XPDT",2,0)
 ;;8.0;KERNEL;**2,10,28,41,44,51**;Jul 10, 1995
"RTN","XPDT",3,0)
EN ;build XTMP("XPDT",ien, XPDA=ien,XPDNM=name
"RTN","XPDT",4,0)
 ;XPDT(seq #)=ien^name^1=use current transport global on system
"RTN","XPDT",5,0)
 ;XPDT("DA",ien)=seq #
"RTN","XPDT",6,0)
 ;XPDVER=version number^package name
"RTN","XPDT",7,0)
 ;XPDGP=flag;global^flag;global^...  flag=1 replace global at site
"RTN","XPDT",8,0)
 N DIR,DIRUT,I,POP,XPD,XPDA,XPDERR,XPDGP,XPDGREF,XPDH,XPDHD,XPDI,XPDNM,XPDSEQ,XPDSIZ,XPDSIZA,XPDT,XPDTP,XPDVER,X,Y,Z
"RTN","XPDT",9,0)
 K ^TMP($J,"XPD")
"RTN","XPDT",10,0)
 S XPD="First Package Name: ",DIR(0)="Y",DIR("A")="   Use this Transport Global",DIR("?")="Yes, will use the current Transport Global on your system. No, will create a new one.",XPDT=0
"RTN","XPDT",11,0)
 W !!,"Enter the Package Names to be transported. The order in which",!,"they are entered will be the order in which they are installed.",!!
"RTN","XPDT",12,0)
 F  S XPDA=$$DIC^XPDE("AEMQZ",XPD) Q:'XPDA  D  Q:$D(DIRUT)!$D(XPDERR)
"RTN","XPDT",13,0)
 .S:'XPDT XPD="Another Package Name: "
"RTN","XPDT",14,0)
 .;XPDI=name^1=use current transport global
"RTN","XPDT",15,0)
 .S XPDI=$P(Y(0),U)_"^"
"RTN","XPDT",16,0)
 .I $D(XPDT("DA",XPDA)) W "   ",$P(Y(0),U)," already listed",! Q
"RTN","XPDT",17,0)
 .;if type is Global Package, set DIRUT if there is other packages
"RTN","XPDT",18,0)
 .I $P(Y(0),U,3)=2 W "   GLOBAL PACKAGE" D  Q
"RTN","XPDT",19,0)
 ..;if there is already a package in distribution, abort
"RTN","XPDT",20,0)
 ..I XPDT S DIRUT=1 W !,"A GLOBAL PACKAGE cannot be sent with any other packages" Q
"RTN","XPDT",21,0)
 ..I $D(^XTMP("XPDT",XPDA)) W "  **Cannot have a pre-existing Transport Global**" S DIRUT=1 Q
"RTN","XPDT",22,0)
 ..W !?10,"will transport the following globals:",! S X=0,XPDGP=""
"RTN","XPDT",23,0)
 ..F  S X=$O(^XPD(9.6,XPDA,"GLO",X)) Q:'X  S Z=$G(^(X,0)) I $P(Z,U)]"" S XPDGP=XPDGP_($P(Z,U,2)="y")_";"_$P(Z,U)_"^" W ?12,$P(Z,U),!
"RTN","XPDT",24,0)
 ..;XPDERR is set to quit loop, so no other packages can be added
"RTN","XPDT",25,0)
 ..S XPDERR=1,XPDT=XPDT+1,XPDT(XPDT)=XPDA_U_XPDI,XPDT("DA",XPDA)=XPDT
"RTN","XPDT",26,0)
 .Q:$D(XPDERR)
"RTN","XPDT",27,0)
 .;multi-package
"RTN","XPDT",28,0)
 .I $P(Y(0),U,3)=1 D  Q
"RTN","XPDT",29,0)
 ..W "   (Multi-Package)" S X=0
"RTN","XPDT",30,0)
 ..F  S X=$O(^XPD(9.6,XPDA,10,X)) Q:'X  S Z=$P($G(^(X,0)),U) D:Z]""
"RTN","XPDT",31,0)
 ...N XPDA,X
"RTN","XPDT",32,0)
 ...W !?3,Z S XPDA=$O(^XPD(9.6,"B",Z,0))
"RTN","XPDT",33,0)
 ...I 'XPDA W "  **Can't find definition in Build file**" Q
"RTN","XPDT",34,0)
 ...I $D(XPDT("DA",XPDA)) W "  already listed" Q
"RTN","XPDT",35,0)
 ...S XPDT=XPDT+1,XPDT(XPDT)=XPDA_U_Z_U,XPDT("DA",XPDA)=XPDT
"RTN","XPDT",36,0)
 ...I $D(^XTMP("XPDT",XPDA)) W "   **Transport Global exists**"
"RTN","XPDT",37,0)
 .S XPDT=XPDT+1,XPDT(XPDT)=XPDA_U_XPDI,XPDT("DA",XPDA)=XPDT
"RTN","XPDT",38,0)
 .I $D(^XTMP("XPDT",XPDA)) W "     **Transport Global exists**" D
"RTN","XPDT",39,0)
 ..;if TG is permanet then quit
"RTN","XPDT",40,0)
 ..I $G(^XTMP("XPDT",XPDA)) S $P(XPDT(XPDT),U,3)=1 Q
"RTN","XPDT",41,0)
 ..;ask if they want to use TG
"RTN","XPDT",42,0)
 ..D ^DIR S $P(XPDT(XPDT),U,3)=Y
"RTN","XPDT",43,0)
 G:'XPDT!$D(DIRUT) QUIT K XPDERR
"RTN","XPDT",44,0)
 W !!,"ORDER   PACKAGE",!
"RTN","XPDT",45,0)
 F XPDT=1:1:XPDT S Y=$P(XPDT(XPDT),U,2) W ?2,XPDT,?7,Y D  W !
"RTN","XPDT",46,0)
 .W:$P(XPDT(XPDT),U,3) "     **will use current Transport Global**"
"RTN","XPDT",47,0)
 S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="NO",XPDH=""
"RTN","XPDT",48,0)
 W !! D ^DIR G:$D(DIRUT)!'Y QUIT K DIR
"RTN","XPDT",49,0)
 S DIR(0)="SAO^HF:Host File;PM:PackMan",DIR("A")="Transport through (HF)Host File or (PM)PackMan: ",DIR("?")="Enter the method of transport for the package(s)."
"RTN","XPDT",50,0)
 D ^DIR G:$D(DTOUT)!$D(DUOUT) QUIT K DIR
"RTN","XPDT",51,0)
 I Y="" W !,"No Transport Method selected, will only write Transport Global to ^XTMP." S XPDH=""
"RTN","XPDT",52,0)
 ;XPDTP = transports using Packman
"RTN","XPDT",53,0)
 S:Y="PM" XPDTP=1
"RTN","XPDT",54,0)
 I $D(XPDGP),Y'="HF" W !,"**Global Package can only be sent with a Host File, Transport ABORTED**" Q
"RTN","XPDT",55,0)
 I Y="HF" D DEV G:POP QUIT
"RTN","XPDT",56,0)
 I $G(XPDTP),XPDT>1 W !!,"You cannot send multiple Builds through PackMan." G QUIT
"RTN","XPDT",57,0)
 W !!
"RTN","XPDT",58,0)
 F XPDT=1:1:XPDT S XPDA=XPDT(XPDT),XPDNM=$P(XPDA,U,2) D  G:$D(XPDERR) ABORT
"RTN","XPDT",59,0)
 .W !?5,XPDNM,"..." S XPDGREF="^XTMP(""XPDT"","_+XPDA_",""TEMP"")"
"RTN","XPDT",60,0)
 .;if using current transport global, run pre-transp routine and quit
"RTN","XPDT",61,0)
 .I $P(XPDA,U,3) S XPDA=+XPDA D PRET Q
"RTN","XPDT",62,0)
 .;if package file link then set XPDVER=version number^package name
"RTN","XPDT",63,0)
 .S XPDA=+XPDA,XPDVER=$S($P(^XPD(9.6,XPDA,0),U,2):$$VER^XPDUTL(XPDNM)_U_$$PKG^XPDUTL(XPDNM),1:"")
"RTN","XPDT",64,0)
 .K ^XTMP("XPDT",XPDA)
"RTN","XPDT",65,0)
 .;GLOBAL PACKAGE
"RTN","XPDT",66,0)
 .I $D(XPDGP) D  S XPDT=1 Q
"RTN","XPDT",67,0)
 ..;can't send global package in packman message
"RTN","XPDT",68,0)
 ..I $G(XPDTP) S XPDERR=1 Q
"RTN","XPDT",69,0)
 ..;verify global package
"RTN","XPDT",70,0)
 ..I '$$GLOPKG^XPDV(XPDA) S XPDERR=1 Q
"RTN","XPDT",71,0)
 ..;get Environment check and Post Install routines
"RTN","XPDT",72,0)
 ..F Y="PRE","INIT" I $G(^XPD(9.6,XPDA,Y))]"" S X=^(Y) D
"RTN","XPDT",73,0)
 ...S ^XTMP("XPDT",XPDA,Y)=X,X=$P(X,U,$L(X,U)),%=$$LOAD^XPDTA(X,"0^")
"RTN","XPDT",74,0)
 ..D BLD^XPDTC,PRET
"RTN","XPDT",75,0)
 .F X="DD^XPDTC","KRN^XPDTC","QUES^XPDTC","INT^XPDTC","BLD^XPDTC" D @X Q:$D(XPDERR)
"RTN","XPDT",76,0)
 .D:'$D(XPDERR) PRET
"RTN","XPDT",77,0)
 ;XPDTP - call ^XPDTP to build Packman message
"RTN","XPDT",78,0)
 I $G(XPDTP) S XPDA=+XPDT(XPDT) D ^XPDTP G QUIT
"RTN","XPDT",79,0)
 I $L(XPDH) D GO G QUIT
"RTN","XPDT",80,0)
 ;if no device then just create transport global
"RTN","XPDT",81,0)
 W !! F XPDT=1:1:XPDT W "Transport Global ^XTMP(""XPDT"","_+XPDT(XPDT)_") created for ",$P(XPDT(XPDT),U,2),!
"RTN","XPDT",82,0)
 Q
"RTN","XPDT",83,0)
DEV N FIL,DIR,IOP,X,Y,%ZIS W !
"RTN","XPDT",84,0)
 D HOME^%ZIS
"RTN","XPDT",85,0)
 S DIR(0)="F^3:45",DIR("A")="Enter a Host File",DIR("?")="Enter a filename and/or path to output package(s).",POP=0
"RTN","XPDT",86,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S POP=1 Q
"RTN","XPDT",87,0)
 ;if no file, then quit
"RTN","XPDT",88,0)
 Q:Y=""  S FIL=Y
"RTN","XPDT",89,0)
 S DIR(0)="F^3:80",DIR("A")="Header Comment"
"RTN","XPDT",90,0)
 D ^DIR I $D(DIRUT) S POP=1 Q
"RTN","XPDT",91,0)
 S XPDH=Y,%ZIS="",%ZIS("HFSNAME")=FIL,%ZIS("HFSMODE")="W",IOP="HFS",(XPDSIZ,XPDSIZA)=0,XPDSEQ=1
"RTN","XPDT",92,0)
 ;if MSM and HFS file is on device A or B, then get size for floppy disk
"RTN","XPDT",93,0)
 ;XPDSIZ=disk size, XPDSIZA=accummulated size,XPDSEQ=disk sequence number
"RTN","XPDT",94,0)
 I ^%ZOSF("OS")["MSM",FIL?1(1"A",1"B")1":"1.E D  Q:POP
"RTN","XPDT",95,0)
 .S DIR(0)="N^0:5000",DIR("A")="Size of Diskette (1K blocks)",DIR("B")=1400,DIR("?")="Enter the number of 1K blocks which each diskette will hold, 0 means unlimited space"
"RTN","XPDT",96,0)
 .D ^DIR I $D(DIRUT) S POP=1 Q
"RTN","XPDT",97,0)
 .S XPDSIZ=$S(Y:Y*1024,1:0)
"RTN","XPDT",98,0)
 D ^%ZIS I POP W !!,"**Incorrect Host File name**",!,$C(7) Q
"RTN","XPDT",99,0)
 ;write date and comment header
"RTN","XPDT",100,0)
 S XPDHD="KIDS Distribution saved on "_$$HTE^XLFDT($H)
"RTN","XPDT",101,0)
 U IO W $$SUM(XPDHD),!,$$SUM(XPDH),!
"RTN","XPDT",102,0)
 ;U IO(0) is to insure I am writing to the terminal
"RTN","XPDT",103,0)
 U IO(0) Q
"RTN","XPDT",104,0)
 ;
"RTN","XPDT",105,0)
GO S I=1,Y="" U IO
"RTN","XPDT",106,0)
 ;Global Package, header is different and there is only 1 package
"RTN","XPDT",107,0)
 I $D(XPDGP) W $$SUM("**KIDS**GLOBALS:"_$P(XPDT(1),U,2)_U_XPDGP),! G GO1
"RTN","XPDT",108,0)
 ;write header that maintains package list, keep less than 255 char
"RTN","XPDT",109,0)
 E  F  D  W $$SUM("**KIDS**:"_Y),! Q:I=XPDT  S Y="",I=I+1
"RTN","XPDT",110,0)
 .F I=I:1 S Y=Y_$P(XPDT(I),U,2)_"^" Q:$L(Y)>200!(I=XPDT)
"RTN","XPDT",111,0)
 ;after the package list write an extra line feed
"RTN","XPDT",112,0)
GO1 W ! S XPDSIZA=XPDSIZA+2
"RTN","XPDT",113,0)
 ;loop thru & write global, don't kill if set to permanent, set in XPDIU
"RTN","XPDT",114,0)
 F XPDT=1:1:XPDT S XPDA=+XPDT(XPDT),XPDNM=$P(XPDT(XPDT),U,2) D GW K:'$G(^XTMP("XPDT",XPDA)) ^(XPDA)
"RTN","XPDT",115,0)
 W "**END**",!
"RTN","XPDT",116,0)
 ;GLOBAL PACKAGE there could only be one package, write globals
"RTN","XPDT",117,0)
 I $D(XPDGP) D GPW W "**END**",!
"RTN","XPDT",118,0)
 ;we're done with device, close it
"RTN","XPDT",119,0)
 W "**END**",! D ^%ZISC
"RTN","XPDT",120,0)
 W !!,"Package Transported Successfully",!
"RTN","XPDT",121,0)
 Q
"RTN","XPDT",122,0)
GW ;global write
"RTN","XPDT",123,0)
 N GR,GCK,GL
"RTN","XPDT",124,0)
 S GCK="^XTMP(""XPDT"","_XPDA,GR=GCK_")",GCK=GCK_",",GL=$L(GCK)
"RTN","XPDT",125,0)
 ;INSTALL NAME line will mark the begining of global for all lines until
"RTN","XPDT",126,0)
 ;the next INSTALL NAME
"RTN","XPDT",127,0)
 W $$SUM("**INSTALL NAME**",1),!,$$SUM(XPDNM),!
"RTN","XPDT",128,0)
 F  Q:$D(DIRUT)  S GR=$Q(@GR) Q:GR=""!($E(GR,1,GL)'=GCK)  W $$SUM($P(GR,GCK,2),1),!,$$SUM(@GR),!
"RTN","XPDT",129,0)
 Q
"RTN","XPDT",130,0)
GPW ;global package write
"RTN","XPDT",131,0)
 N I,G,GR,GCK,GL
"RTN","XPDT",132,0)
 W !
"RTN","XPDT",133,0)
 F I=1:1 S G=$P(XPDGP,U,I) Q:G=""  D
"RTN","XPDT",134,0)
 .S GR="^"_$P(G,";",2),GCK=$S(GR[")":$E(GR,1,$L(GR)-1)_",",1:GR_"("),GL=$L(GCK)
"RTN","XPDT",135,0)
 .;GLOBAL line will mark the begining of global for all lines until
"RTN","XPDT",136,0)
 .;the next GLOBAL
"RTN","XPDT",137,0)
 .W $$SUM("**GLOBAL**",1),!,$$SUM(GR),!
"RTN","XPDT",138,0)
 .F  Q:$D(DIRUT)  S GR=$Q(@GR) Q:GR=""!($E(GR,1,GL)'=GCK)  W $$SUM($P(GR,GCK,2),1),!,$$SUM(@GR),!
"RTN","XPDT",139,0)
 Q
"RTN","XPDT",140,0)
QUIT F XPDT=1:1:XPDT L -^XPD(9.6,+XPDT(XPDT))
"RTN","XPDT",141,0)
 Q
"RTN","XPDT",142,0)
ABORT W !!,"**TRANSPORT ABORTED**",*7
"RTN","XPDT",143,0)
 D QUIT
"RTN","XPDT",144,0)
 F XPDT=1:1:XPDT K ^XTMP("XPDT",+XPDT(XPDT))
"RTN","XPDT",145,0)
 D ^%ZISC
"RTN","XPDT",146,0)
 Q
"RTN","XPDT",147,0)
SUM(X,Z) ;X=string to write, Z 0=don't check size
"RTN","XPDT",148,0)
 S XPDSIZA=XPDSIZA+$L(X)+2
"RTN","XPDT",149,0)
 ;ask for next disk
"RTN","XPDT",150,0)
 ;this code is for MSM system only
"RTN","XPDT",151,0)
 I $G(Z),XPDSIZ,XPDSIZ-XPDSIZA<1024 D
"RTN","XPDT",152,0)
 .;write continue flag at end of this file
"RTN","XPDT",153,0)
 .W "**CONTINUE**",!,"**END**",!
"RTN","XPDT",154,0)
 .;should call %ZIS HFS utilities to close and open file
"RTN","XPDT",155,0)
 .C IO U IO(0)
"RTN","XPDT",156,0)
 .N DIR,G,GR,GCK,GL,I,X,Y
"RTN","XPDT",157,0)
 .W !!,"Diskette #",XPDSEQ," is full."
"RTN","XPDT",158,0)
 .S DIR(0)="E",DIR("A")="Insert the next diskette and Press the return key",DIR("?")="The current diskette is full, insert a new diskette to continue."
"RTN","XPDT",159,0)
 .;$D(DIRUT)=the user aborted the distribution
"RTN","XPDT",160,0)
 .D ^DIR I $D(DIRUT) D ABORT Q
"RTN","XPDT",161,0)
 .W ! S XPDSEQ=XPDSEQ+1,XPDSIZA=0
"RTN","XPDT",162,0)
 .;MSM specific code to open HFS
"RTN","XPDT",163,0)
 .O @(""""_IO_""":"_IOPAR) U IO
"RTN","XPDT",164,0)
 .W $$SUM("Continuation #"_XPDSEQ_" of "_XPDHD),!,$$SUM(XPDH),!,$$SUM("**SEQ**:"_XPDSEQ),!!
"RTN","XPDT",165,0)
 .S XPDSIZA=XPDSIZA+2
"RTN","XPDT",166,0)
 Q X
"RTN","XPDT",167,0)
 ;
"RTN","XPDT",168,0)
PRET ;Pre-Transport Routine
"RTN","XPDT",169,0)
 N Y S Y=$G(^XPD(9.6,XPDA,"PRET")) Q:Y=""
"RTN","XPDT",170,0)
 I '$$RTN^XPDV(Y) W !!,"Pre-Transportation Routine DOESN'T EXIST!!",*7 Q
"RTN","XPDT",171,0)
 S Y=$S(Y["^":Y,1:"^"_Y) W !,"Running Pre-Transportation Routine ",Y
"RTN","XPDT",172,0)
 D @Y Q
"RTN","XQP50")
0^4^B7614914
"RTN","XQP50",1,0)
XQP50 ;Luke&Ron/SEA - Update Patch 50 Application History ;11/27/96  09:42
"RTN","XQP50",2,0)
 ;;8.0;KERNEL;**51**;Nov 21, 1996
"RTN","XQP50",3,0)
 ;
"RTN","XQP50",4,0)
 ;This routine, a post init routine for patch XU*8*51, updates
"RTN","XQP50",5,0)
 ;the Patch Application History of patch XU*8*50 which was 
"RTN","XQP50",6,0)
 ;released without a link to the Package File.
"RTN","XQP50",7,0)
 ;
"RTN","XQP50",8,0)
 ;38 is the Patch Module Sequence Number, X1 is the Kernel
"RTN","XQP50",9,0)
 ;IEN in the Package File [^DIC(9.4)], 8.0 is the Version #,
"RTN","XQP50",10,0)
 ;DT and DUZ record who and when it was installed.
"RTN","XQP50",11,0)
 ;
"RTN","XQP50",12,0)
 ;
"RTN","XQP50",13,0)
 ;
"RTN","XQP50",14,0)
DESC ;<Patch description to be placed in Package File>
"RTN","XQP50",15,0)
 ;;     This patch contains a routine, and input template, and a change to
"RTN","XQP50",16,0)
 ;;the data dictionary of the Option File [^DIC(19)].  It corrects 3 problems
"RTN","XQP50",17,0)
 ;;with servers:
"RTN","XQP50",18,0)
 ;;  
"RTN","XQP50",19,0)
 ;;1.  [CML-0296-N1840 and LIT-0496-71332 ]  Server tasks were retained for
"RTN","XQP50",20,0)
 ;;30 days in ^ZTSK, and several sites complained that this was too long and
"RTN","XQP50",21,0)
 ;;therefore a waste of disk space.  The default task retention time was
"RTN","XQP50",22,0)
 ;;lowered to 14 days, and a field was added to the Option File (ZTSK
"RTN","XQP50",23,0)
 ;;RETENTION DAYS) to allow the site to set the retention time for each
"RTN","XQP50",24,0)
 ;;server on the system from 1 to 365 days.
"RTN","XQP50",25,0)
 ;;   
"RTN","XQP50",26,0)
 ;;2.  [MCM-1096-51188]  A site complained that the edit template XUEDITOPT
"RTN","XQP50",27,0)
 ;;did not allow them to edit the field SERVER DEVICE when working with a
"RTN","XQP50",28,0)
 ;;server-type option.  This was corrected when the new field was added to
"RTN","XQP50",29,0)
 ;;the template.
"RTN","XQP50",30,0)
 ;;  
"RTN","XQP50",31,0)
 ;;3.  [SLC-1096-50407]  Under certain circumstances, servers that were
"RTN","XQP50",32,0)
 ;;designated as "Run Immediately" in the SERVER ACTION field were not
"RTN","XQP50",33,0)
 ;;running at all but being queued because of a logic error.  This problem
"RTN","XQP50",34,0)
 ;;was also noted by IHS.
"RTN","XQP50",35,0)
 ;;  
"RTN","XQP50",36,0)
 ;;=============================================================
"RTN","XQP50",37,0)
 ;;  
"RTN","XQP50",38,0)
 ;;               CHECKSUMS WITH PATCH LIST
"RTN","XQP50",39,0)
 ;;  
"RTN","XQP50",40,0)
 ;;Program                Before                    After
"RTN","XQP50",41,0)
 ;;  
"RTN","XQP50",42,0)
 ;; XQSRV1                8538091                8877273  **50**
"RTN","XQP50",43,0)
 ;;
"RTN","XQP50",44,0)
 ;
"RTN","XQP50",45,0)
 N %,X,X1
"RTN","XQP50",46,0)
 ;
"RTN","XQP50",47,0)
 S X=28
"RTN","XQP50",48,0)
 F %=1:1:X S ^XTMP($J,"P50",%)=$E($T(DESC+%),4,99)
"RTN","XQP50",49,0)
 ;
"RTN","XQP50",50,0)
 S X="50 SEQ #38^"_DT_"^"_DUZ,X(1)="^XTMP($J,""P50"")"
"RTN","XQP50",51,0)
 S X1=$P(^XPD(9.7,XPDA,0),U,2)
"RTN","XQP50",52,0)
 I 'X1 D BMES^XPDUTL("Couldn't update Patch information for patch 50.") Q
"RTN","XQP50",53,0)
 S %=$$PKGPAT^XPDIP(X1,"8.0",.X)
"RTN","XQP50",54,0)
 Q
"VER")
8.0^21.0
**END**
**END**
