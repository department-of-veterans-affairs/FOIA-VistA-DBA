KIDS Distribution saved on Nov 13, 2003@16:05:39
SD*5.3*290
**KIDS**:SD*5.3*290^

**INSTALL NAME**
SD*5.3*290
"BLD",3741,0)
SD*5.3*290^SCHEDULING^0^3031113^y
"BLD",3741,1,0)
^^6^6^3030728^
"BLD",3741,1,1,0)
This patch will provide patient appointment wait time statistics to the
"BLD",3741,1,2,0)
National Database in Austin, Tx.  An initial seeding routine will scan
"BLD",3741,1,3,0)
patient appointments from 9.01.2002 to present and appointment data
"BLD",3741,1,4,0)
meeting specified criteria will be wrapped in a HL7 batch message and
"BLD",3741,1,5,0)
transmitted to AAC.  Subsequent, bi-weekly, transmissions will update the 
"BLD",3741,1,6,0)
National Database.
"BLD",3741,4,0)
^9.64PA^409.6^1
"BLD",3741,4,409.6,0)
409.6
"BLD",3741,4,409.6,222)
y^y^f^^^^n
"BLD",3741,4,"B",409.6,409.6)

"BLD",3741,"ABPKG")
n
"BLD",3741,"INID")
^
"BLD",3741,"INIT")
SD290P
"BLD",3741,"KRN",0)
^9.67PA^8989.52^19
"BLD",3741,"KRN",.4,0)
.4
"BLD",3741,"KRN",.4,"NM",0)
^9.68A^2^2
"BLD",3741,"KRN",.4,"NM",1,0)
PATIENT PENDING APPT    FILE #409.6^409.6^0
"BLD",3741,"KRN",.4,"NM",2,0)
REJECTED APPT LIST    FILE #409.6^409.6^0
"BLD",3741,"KRN",.4,"NM","B","PATIENT PENDING APPT    FILE #409.6",1)

"BLD",3741,"KRN",.4,"NM","B","REJECTED APPT LIST    FILE #409.6",2)

"BLD",3741,"KRN",.401,0)
.401
"BLD",3741,"KRN",.401,"NM",0)
^9.68A^2^2
"BLD",3741,"KRN",.401,"NM",1,0)
PENDING APPT EXCLUDING FUTURE    FILE #409.6^409.6^0
"BLD",3741,"KRN",.401,"NM",2,0)
REJECTED APPT    FILE #409.6^409.6^0
"BLD",3741,"KRN",.401,"NM","B","PENDING APPT EXCLUDING FUTURE    FILE #409.6",1)

"BLD",3741,"KRN",.401,"NM","B","REJECTED APPT    FILE #409.6",2)

"BLD",3741,"KRN",.402,0)
.402
"BLD",3741,"KRN",.403,0)
.403
"BLD",3741,"KRN",.5,0)
.5
"BLD",3741,"KRN",.84,0)
.84
"BLD",3741,"KRN",3.6,0)
3.6
"BLD",3741,"KRN",3.8,0)
3.8
"BLD",3741,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",3741,"KRN",3.8,"NM",1,0)
SD-PAIT^^0
"BLD",3741,"KRN",3.8,"NM","B","SD-PAIT",1)

"BLD",3741,"KRN",9.2,0)
9.2
"BLD",3741,"KRN",9.8,0)
9.8
"BLD",3741,"KRN",9.8,"NM",0)
^9.68A^7^6
"BLD",3741,"KRN",9.8,"NM",1,0)
SDRPA00^^0^B66568993
"BLD",3741,"KRN",9.8,"NM",3,0)
SDRPA06^^0^B25183327
"BLD",3741,"KRN",9.8,"NM",4,0)
SDRPA07^^0^B38641421
"BLD",3741,"KRN",9.8,"NM",5,0)
SDRPA05^^0^B15714435
"BLD",3741,"KRN",9.8,"NM",6,0)
SD290P^^0^B730828
"BLD",3741,"KRN",9.8,"NM",7,0)
SDRPA08^^0^B17755378
"BLD",3741,"KRN",9.8,"NM","B","SD290P",6)

"BLD",3741,"KRN",9.8,"NM","B","SDRPA00",1)

"BLD",3741,"KRN",9.8,"NM","B","SDRPA05",5)

"BLD",3741,"KRN",9.8,"NM","B","SDRPA06",3)

"BLD",3741,"KRN",9.8,"NM","B","SDRPA07",4)

"BLD",3741,"KRN",9.8,"NM","B","SDRPA08",7)

"BLD",3741,"KRN",19,0)
19
"BLD",3741,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",3741,"KRN",19,"NM",1,0)
SD-PAIT MANUAL TRANSMISSION^^0
"BLD",3741,"KRN",19,"NM",2,0)
SD-PAIT PENDING^^0
"BLD",3741,"KRN",19,"NM",3,0)
SD-PAIT REPORTS^^0
"BLD",3741,"KRN",19,"NM",4,0)
SD-PAIT TASKED TRANSMISSION^^0
"BLD",3741,"KRN",19,"NM",5,0)
SD-PAIT REJECTED^^0
"BLD",3741,"KRN",19,"NM","B","SD-PAIT MANUAL TRANSMISSION",1)

"BLD",3741,"KRN",19,"NM","B","SD-PAIT PENDING",2)

"BLD",3741,"KRN",19,"NM","B","SD-PAIT REJECTED",5)

"BLD",3741,"KRN",19,"NM","B","SD-PAIT REPORTS",3)

"BLD",3741,"KRN",19,"NM","B","SD-PAIT TASKED TRANSMISSION",4)

"BLD",3741,"KRN",19.1,0)
19.1
"BLD",3741,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",3741,"KRN",101,0)
101
"BLD",3741,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",3741,"KRN",101,"NM",1,0)
SD-PAIT-EVENT^^0
"BLD",3741,"KRN",101,"NM",2,0)
SD-PAIT-SUBS^^0
"BLD",3741,"KRN",101,"NM","B","SD-PAIT-EVENT",1)

"BLD",3741,"KRN",101,"NM","B","SD-PAIT-SUBS",2)

"BLD",3741,"KRN",409.61,0)
409.61
"BLD",3741,"KRN",771,0)
771
"BLD",3741,"KRN",771,"NM",0)
^9.68A^3^2
"BLD",3741,"KRN",771,"NM",2,0)
SD-SITE-PAIT^^0
"BLD",3741,"KRN",771,"NM",3,0)
SD-AAC-PAIT^^0
"BLD",3741,"KRN",771,"NM","B","SD-AAC-PAIT",3)

"BLD",3741,"KRN",771,"NM","B","SD-SITE-PAIT",2)

"BLD",3741,"KRN",870,0)
870
"BLD",3741,"KRN",870,"NM",0)
^9.68A^1^1
"BLD",3741,"KRN",870,"NM",1,0)
SD-PAIT^^0
"BLD",3741,"KRN",870,"NM","B","SD-PAIT",1)

"BLD",3741,"KRN",8989.51,0)
8989.51
"BLD",3741,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",3741,"KRN",8989.52,0)
8989.52
"BLD",3741,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",3741,"KRN",8994,0)
8994
"BLD",3741,"KRN","B",.4,.4)

"BLD",3741,"KRN","B",.401,.401)

"BLD",3741,"KRN","B",.402,.402)

"BLD",3741,"KRN","B",.403,.403)

"BLD",3741,"KRN","B",.5,.5)

"BLD",3741,"KRN","B",.84,.84)

"BLD",3741,"KRN","B",3.6,3.6)

"BLD",3741,"KRN","B",3.8,3.8)

"BLD",3741,"KRN","B",9.2,9.2)

"BLD",3741,"KRN","B",9.8,9.8)

"BLD",3741,"KRN","B",19,19)

"BLD",3741,"KRN","B",19.1,19.1)

"BLD",3741,"KRN","B",101,101)

"BLD",3741,"KRN","B",409.61,409.61)

"BLD",3741,"KRN","B",771,771)

"BLD",3741,"KRN","B",870,870)

"BLD",3741,"KRN","B",8989.51,8989.51)

"BLD",3741,"KRN","B",8989.52,8989.52)

"BLD",3741,"KRN","B",8994,8994)

"BLD",3741,"QUES",0)
^9.62^^
"BLD",3741,"REQB",0)
^9.611^^
"FIA",409.6)
PATIENT APPOINTMENT INFO LOG
"FIA",409.6,0)
^SDWL(409.6,
"FIA",409.6,0,0)
409.6D
"FIA",409.6,0,1)
y^y^f^^^^n
"FIA",409.6,0,10)

"FIA",409.6,0,11)

"FIA",409.6,0,"RLRO")

"FIA",409.6,0,"VR")
5.3^SD
"FIA",409.6,409.6)
0
"FIA",409.6,409.69)
0
"INIT")
SD290P
"IX",409.6,409.6,"AC",0)
409.6^AC^XREF^R^^R^IR^W^409.69^^^^^S
"IX",409.6,409.6,"AC",1)
S ^SDWL(409.6,"AC",X(1),X(2),DA(1),DA)=""
"IX",409.6,409.6,"AC",2)
K ^SDWL(409.6,"AC",X(1),X(2),DA(1),DA)
"IX",409.6,409.6,"AC",2.5)
K ^SDWL(409.6,"AC")
"IX",409.6,409.6,"AC",11.1,0)
^.114IA^2^2
"IX",409.6,409.6,"AC",11.1,1,0)
1^F^409.69^.01^^1^F
"IX",409.6,409.6,"AC",11.1,1,3)

"IX",409.6,409.6,"AC",11.1,2,0)
2^F^409.69^1^^2^F
"IX",409.6,409.6,"AC",11.1,2,3)

"IX",409.6,409.6,"AE",0)
409.6^AE^RETENTION FLAGE XREF^R^^F^IR^W^409.69^^^^^S
"IX",409.6,409.6,"AE",1)
S ^SDWL(409.6,"AE",$E(X,1,1),DA(1),DA)=""
"IX",409.6,409.6,"AE",2)
K ^SDWL(409.6,"AE",$E(X,1,1),DA(1),DA)
"IX",409.6,409.6,"AE",2.5)
K ^SDWL(409.6,"AE")
"IX",409.6,409.6,"AE",11.1,0)
^.114IA^1^1
"IX",409.6,409.6,"AE",11.1,1,0)
1^F^409.69^4^1^1^F
"IX",409.6,409.6,"AE",11.1,1,3)

"IX",409.6,409.6,"AMSG",0)
409.6^AMSG^Message xref^R^^R^IR^W^409.69^^^^^S
"IX",409.6,409.6,"AMSG",1)
S ^SDWL(409.6,"AMSG",$E(X(1),1,30),$E(X(2),1,30),DA(1),DA)=""
"IX",409.6,409.6,"AMSG",2)
K ^SDWL(409.6,"AMSG",$E(X(1),1,30),$E(X(2),1,30),DA(1),DA)
"IX",409.6,409.6,"AMSG",2.5)
K ^SDWL(409.6,"AMSG")
"IX",409.6,409.6,"AMSG",11.1,0)
^.114IA^2^2
"IX",409.6,409.6,"AMSG",11.1,1,0)
1^F^409.69^2^30^1^F
"IX",409.6,409.6,"AMSG",11.1,1,3)

"IX",409.6,409.6,"AMSG",11.1,2,0)
2^F^409.69^3^30^2^F
"IX",409.6,409.6,"AMSG",11.1,2,3)

"KRN",.4,2394,-1)
0^1
"KRN",.4,2394,0)
PATIENT PENDING APPT^3030929.1012^@^409.6^^@^3031002
"KRN",.4,2394,"F",2)
2,.01~2,1~2,5~2,8~
"KRN",.4,2394,"H")
PATIENT PENDING APPOINTMENT LOG
"KRN",.4,2395,-1)
0^2
"KRN",.4,2395,0)
REJECTED APPT LIST^3030929.1502^@^409.6^^@^3031002
"KRN",.4,2395,"F",2)
2,.01~2,1~2,5~2,8~2,7~
"KRN",.4,2395,"H")
REJECTED TRANSMITTED APPOINTMENTS
"KRN",.401,1667,-1)
0^1
"KRN",.401,1667,0)
PENDING APPT EXCLUDING FUTURE^3030929.1003^@^409.6^^@^3031002
"KRN",.401,1667,2,0)
^.4014^4^4
"KRN",.401,1667,2,1,0)
409.69^4^RETENTION FLAG^^^^^^^3
"KRN",.401,1667,2,1,1,0)
^.40141^1^1
"KRN",.401,1667,2,1,1,1,0)
409.6^1
"KRN",.401,1667,2,1,1,"B",409.6,1)

"KRN",.401,1667,2,1,"F")
Xz^Y^Y (YES - to be sent when 'Final')
"KRN",.401,1667,2,1,"GET")
S DISX(1)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,5)
"KRN",.401,1667,2,1,"IX")
^SDWL(409.6,"AE",^SDWL(409.6,^2
"KRN",.401,1667,2,1,"QCON")
I DISX(1)="Y"
"KRN",.401,1667,2,1,"T")
Y^Y^Y (YES - to be sent when 'Final')
"KRN",.401,1667,2,1,"TXT")
RETENTION FLAG equals Y (YES - to be sent when 'Final')
"KRN",.401,1667,2,2,0)
409.69^1^APPT DATE^^^^^^^1
"KRN",.401,1667,2,2,1,0)
^.40141^1^1
"KRN",.401,1667,2,2,1,1,0)
409.6^1
"KRN",.401,1667,2,2,1,"B",409.6,1)

"KRN",.401,1667,2,2,"ASK")
1
"KRN",.401,1667,2,2,"F")
3020900.999999^Sep 1,2002^Sep 1,2002
"KRN",.401,1667,2,2,"GET")
S DISX(2)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,2)
"KRN",.401,1667,2,2,"QCON")
I (DISX(2)]]3020900.999999)&(DISX(2)']]3030929.24)
"KRN",.401,1667,2,2,"T")
3030929.24^Sep 29,2003@2400^Sep 29,2003@24:00
"KRN",.401,1667,2,2,"TXT")
APPT DATE from Sep 1,2002 to Sep 29,2003@24:00
"KRN",.401,1667,2,3,0)
409.69^8^APPOINTMENT TYPE^^^^^^^3
"KRN",.401,1667,2,3,1,0)
^.40141^1^1
"KRN",.401,1667,2,3,1,1,0)
409.6^1
"KRN",.401,1667,2,3,1,"B",409.6,1)

"KRN",.401,1667,2,3,"F")
?z^@
"KRN",.401,1667,2,3,"GET")
S DISX(3)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,9)
"KRN",.401,1667,2,3,"QCON")
I 1
"KRN",.401,1667,2,3,"T")
z^
"KRN",.401,1667,2,3,"TXT")
All APPOINTMENT TYPE (includes nulls)
"KRN",.401,1667,2,4,0)
409.69^5^EVENT REASON^^^^^^^3
"KRN",.401,1667,2,4,1,0)
^.40141^1^1
"KRN",.401,1667,2,4,1,1,0)
409.6^1
"KRN",.401,1667,2,4,1,"B",409.6,1)

"KRN",.401,1667,2,4,"F")
?z^@
"KRN",.401,1667,2,4,"GET")
S DISX(4)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,6)
"KRN",.401,1667,2,4,"QCON")
I 1
"KRN",.401,1667,2,4,"T")
z^
"KRN",.401,1667,2,4,"TXT")
All EVENT REASON (includes nulls)
"KRN",.401,1667,2,"B",409.69,1)

"KRN",.401,1667,2,"B",409.69,2)

"KRN",.401,1667,2,"B",409.69,3)

"KRN",.401,1667,2,"B",409.69,4)

"KRN",.401,1667,"%D",0)
^^2^2^3030929^
"KRN",.401,1667,"%D",1,0)
This template allows to print a list of pending appointments in the APPT 
"KRN",.401,1667,"%D",2,0)
DATE order, to be evaluated for possible finalizing.
"KRN",.401,1668,-1)
0^2
"KRN",.401,1668,0)
REJECTED APPT^3030929.1459^@^409.6^^@^3031002
"KRN",.401,1668,2,0)
^.4014^4^4
"KRN",.401,1668,2,1,0)
409.69^7^ERROR MESSAGE^^^^^^^3
"KRN",.401,1668,2,1,1,0)
^.40141^1^1
"KRN",.401,1668,2,1,1,1,0)
409.6^1
"KRN",.401,1668,2,1,1,"B",409.6,1)

"KRN",.401,1668,2,1,"GET")
S DISX(1)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,8)
"KRN",.401,1668,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1668,2,1,"TXT")
ERROR MESSAGE not null
"KRN",.401,1668,2,2,0)
409.69^4^RETENTION FLAG^^^^^^^3
"KRN",.401,1668,2,2,1,0)
^.40141^1^1
"KRN",.401,1668,2,2,1,1,0)
409.6^1
"KRN",.401,1668,2,2,1,"B",409.6,1)

"KRN",.401,1668,2,2,"F")
Xz^Y^Y (YES - to be sent when 'Final')
"KRN",.401,1668,2,2,"GET")
S DISX(2)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,5)
"KRN",.401,1668,2,2,"IX")
^SDWL(409.6,"AE",^SDWL(409.6,^2
"KRN",.401,1668,2,2,"QCON")
I DISX(2)="Y"
"KRN",.401,1668,2,2,"T")
Y^Y^Y (YES - to be sent when 'Final')
"KRN",.401,1668,2,2,"TXT")
RETENTION FLAG equals Y (YES - to be sent when 'Final')
"KRN",.401,1668,2,3,0)
409.69^^PATIENT^".01^^^^^^4
"KRN",.401,1668,2,3,1,0)
^.40141^1^1
"KRN",.401,1668,2,3,1,1,0)
409.6^1
"KRN",.401,1668,2,3,1,"B",409.6,1)

"KRN",.401,1668,2,3,"CM")
S Y(1)=$S($D(^SDWL(409.6,D0,1,D1,0)):^(0),1:"") S X=$P($G(^DPT(+$P(Y(1),U,1),0)),U) I D1>0 S DISX(3)=X
"KRN",.401,1668,2,3,"GET")
S Y(1)=$S($D(^SDWL(409.6,D0,1,D1,0)):^(0),1:"") S X=$P($G(^DPT(+$P(Y(1),U,1),0)),U) I D1>0 S DISX(3)=X
"KRN",.401,1668,2,3,"QCON")
I DISX(3)'=""
"KRN",.401,1668,2,3,"TXT")
PATIENT not null
"KRN",.401,1668,2,4,0)
409.69^1^APPT DATE^^^^^^^1
"KRN",.401,1668,2,4,1,0)
^.40141^1^1
"KRN",.401,1668,2,4,1,1,0)
409.6^1
"KRN",.401,1668,2,4,1,"B",409.6,1)

"KRN",.401,1668,2,4,"GET")
S DISX(4)=$P($G(^SDWL(409.6,D0,1,D1,0)),U,2)
"KRN",.401,1668,2,4,"QCON")
I DISX(4)'=""
"KRN",.401,1668,2,4,"TXT")
APPT DATE not null
"KRN",.401,1668,2,"B",409.69,1)

"KRN",.401,1668,2,"B",409.69,2)

"KRN",.401,1668,2,"B",409.69,3)

"KRN",.401,1668,2,"B",409.69,4)

"KRN",.401,1668,"%D",0)
^^2^2^3031103^
"KRN",.401,1668,"%D",1,0)
This template will generate rejected appointments that are still in 
"KRN",.401,1668,"%D",2,0)
pending status, ready to be transmitted.
"KRN",3.8,269,-1)
0^1
"KRN",3.8,269,0)
SD-PAIT^PU^^^^^
"KRN",3.8,269,2,0)
^3.801^1^1^3030729^^^^
"KRN",3.8,269,2,1,0)
Mail group to receive PAIT HL7 messages
"KRN",19,12117,-1)
0^4
"KRN",19,12117,0)
SD-PAIT TASKED TRANSMISSION^Taskman PAIT Transmission^^R^^^^^^^^
"KRN",19,12117,25)
START^SDRPA00
"KRN",19,12117,200.9)
y
"KRN",19,12117,"U")
TASKMAN PAIT TRANSMISSION
"KRN",19,12118,-1)
0^1
"KRN",19,12118,0)
SD-PAIT MANUAL TRANSMISSION^Manual Startup PAIT Transmission^^R^^^^^^^^
"KRN",19,12118,25)
EN^SDRPA00
"KRN",19,12118,99)
59371,35194
"KRN",19,12118,"U")
MANUAL STARTUP PAIT TRANSMISSI
"KRN",19,12186,-1)
0^3
"KRN",19,12186,0)
SD-PAIT REPORTS^PAIT Reports Menu^^M^^^^^^^y^SCHEDULING
"KRN",19,12186,10,0)
^19.01IP^2^2
"KRN",19,12186,10,1,0)
12187
"KRN",19,12186,10,1,"^")
SD-PAIT PENDING
"KRN",19,12186,10,2,0)
12188
"KRN",19,12186,10,2,"^")
SD-PAIT REJECTED
"KRN",19,12186,99)
59441,55116
"KRN",19,12186,"U")
PAIT REPORTS MENU
"KRN",19,12187,-1)
0^2
"KRN",19,12187,0)
SD-PAIT PENDING^Pending Transmissions^^P^^^^^^^^
"KRN",19,12187,30)
SDWL(409.6,
"KRN",19,12187,60)
SDWL(409.6,
"KRN",19,12187,63)
[PATIENT PENDING APPT]
"KRN",19,12187,64)
[PENDING APPT EXCLUDING FUTURE]
"KRN",19,12187,"U")
PENDING TRANSMISSIONS
"KRN",19,12188,-1)
0^5
"KRN",19,12188,0)
SD-PAIT REJECTED^Rejected Transmissions^^P^^^^^^^y^SCHEDULING
"KRN",19,12188,1,0)
^^3^3^3030929^
"KRN",19,12188,1,1,0)
This menu allows to print all currently rejected appointments with their 
"KRN",19,12188,1,2,0)
related error codes. If 'R' is printed intead of an error code then it 
"KRN",19,12188,1,3,0)
means that the whole batch was rejected.
"KRN",19,12188,30)
SDWL(409.6,
"KRN",19,12188,60)
SDWL(409.6,
"KRN",19,12188,63)
[REJECTED APPT LIST]
"KRN",19,12188,64)
[REJECTED APPT]
"KRN",19,12188,99)
59441,54754
"KRN",19,12188,"U")
REJECTED TRANSMISSIONS
"KRN",101,4867,-1)
0^1
"KRN",101,4867,0)
SD-PAIT-EVENT^PAIT TRANSMISSION EVENT^^E^^^^^^^^
"KRN",101,4867,99)
59276,35601
"KRN",101,4867,770)
SD-SITE-PAIT^SD-AAC-PAIT^SIU^S12^^D^SD-PAIT^AL^AL^2.4^ACK
"KRN",101,4867,771)

"KRN",101,4867,772)
D ACK^SDRPA06
"KRN",101,4867,773)
0^0
"KRN",101,4867,775,0)
^101.0775PA^1^1
"KRN",101,4867,775,1,0)
4868
"KRN",101,4867,775,1,"^")
SD-PAIT-SUBS
"KRN",101,4868,-1)
0^2
"KRN",101,4868,0)
SD-PAIT-SUBS^SC PAIT SUBSCRIBERS^^S^^^^^^^^
"KRN",101,4868,99)
59276,35964
"KRN",101,4868,770)
^SD-AAC-PAIT^^S12^^^SD-PAIT^^^^ACK
"KRN",101,4868,773)
1^1^0
"KRN",101,4868,774)

"KRN",771,88,-1)
0^2
"KRN",771,88,0)
SD-SITE-PAIT^a^500^^^^USA
"KRN",771,88,"EC")

"KRN",771,89,-1)
0^3
"KRN",771,89,0)
SD-AAC-PAIT^a^200^^^^USA
"KRN",771,89,"EC")

"KRN",870,197,-1)
0^1
"KRN",870,197,0)
SD-PAIT^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,197,100)

"KRN",870,197,200)
^3
"KRN",870,197,400)
^^C^^^^N
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930824^10000000057
"PKG",16,22,1,"PAH",1,0)
290^3031113
"PKG",16,22,1,"PAH",1,1,0)
^^6^6^3031113
"PKG",16,22,1,"PAH",1,1,1,0)
This patch will provide patient appointment wait time statistics to the
"PKG",16,22,1,"PAH",1,1,2,0)
National Database in Austin, Tx.  An initial seeding routine will scan
"PKG",16,22,1,"PAH",1,1,3,0)
patient appointments from 9.01.2002 to present and appointment data
"PKG",16,22,1,"PAH",1,1,4,0)
meeting specified criteria will be wrapped in a HL7 batch message and
"PKG",16,22,1,"PAH",1,1,5,0)
transmitted to AAC.  Subsequent, bi-weekly, transmissions will update the 
"PKG",16,22,1,"PAH",1,1,6,0)
National Database.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","SD290P")
0^6^B730828
"RTN","SD290P",1,0)
SD290P ;bpiofo/swo - 290 post init; OCT 20 2003
"RTN","SD290P",2,0)
 ;;5.3;Scheduling;**290**;AUG 13, 1993
"RTN","SD290P",3,0)
 N SDIEN
"RTN","SD290P",4,0)
 S SDIEN=$O(^HL(771,"B","SD-SITE-PAIT",""))
"RTN","SD290P",5,0)
 I SDIEN="" D  Q
"RTN","SD290P",6,0)
 . D BMES^XPDUTL(" Unable to update FACILITY NAME field of file 771")
"RTN","SD290P",7,0)
 . D BMES^XPDUTL(" Edit entry SD-SITE-PAIT manually")
"RTN","SD290P",8,0)
 S $P(^HL(771,SDIEN,0),"^",3)=$P($$SITE^VASITE(),"^",3)
"RTN","SD290P",9,0)
 D BMES^XPDUTL(" HL7 Parameters Updated Successfully")
"RTN","SD290P",10,0)
 Q
"RTN","SDRPA00")
0^1^B66568993
"RTN","SDRPA00",1,0)
SDRPA00 ;BP-OIFO/OWAIN,ESW - Patient Appointment Information Transmission  ; 9/9/03 3:58pm
"RTN","SDRPA00",2,0)
 ;;5.3;Scheduling;**290**;Aug 13, 1993
"RTN","SDRPA00",3,0)
EN ;manual entry point
"RTN","SDRPA00",4,0)
 N SDI,Y,ZTSK,ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSAVE,RUNID,REC
"RTN","SDRPA00",5,0)
 ; Insert checks that the run is not already underway and so on ...
"RTN","SDRPA00",6,0)
 ; If the job is queued or running, enforce changes via TASKMAN.
"RTN","SDRPA00",7,0)
 S RUNID=$O(^SDWL(409.6,":"),-1)
"RTN","SDRPA00",8,0)
 I RUNID S ZTSK=$P(^SDWL(409.6,RUNID,0),"^",2) D STAT^%ZTLOAD I ZTSK(1)=1!(ZTSK(1)=2) W !,"A task is currently active." Q
"RTN","SDRPA00",9,0)
 K ZTSK
"RTN","SDRPA00",10,0)
 S %DT("A")="Queue to run:  "
"RTN","SDRPA00",11,0)
 S %DT="AEFXR" W ! D ^%DT S DT=Y D:Y'=-1
"RTN","SDRPA00",12,0)
 .S ZTDTH=Y,ZTRTN="START^SDRPA00",ZTIO=""
"RTN","SDRPA00",13,0)
 .S ZTDESC="Patient Appointment Information Transmission."
"RTN","SDRPA00",14,0)
 .I RUNID I $P(^SDWL(409.6,RUNID,0),U,3)=""!($P(^SDWL(409.6,RUNID,0),U,4)="") W !!,"The previous task has not finished....check TASKMAN. ",! Q
"RTN","SDRPA00",15,0)
 .F SDI=1:1:20 D ^%ZTLOAD Q:$G(ZTSK)
"RTN","SDRPA00",16,0)
 .Q
"RTN","SDRPA00",17,0)
 I '$G(ZTSK) W !!,"Extract not queued.",! Q
"RTN","SDRPA00",18,0)
 W !!,"Task number: ",ZTSK,!
"RTN","SDRPA00",19,0)
 Q
"RTN","SDRPA00",20,0)
START ;Tasked entry point.
"RTN","SDRPA00",21,0)
 N SDOUT,DFN,DFNEND,SDCNT,SDCNT0,RUNID,RUNDT,PREVDT,FIRST,SDDAM,TODAY,SD6A,SD8A,SD68,RUNIDP
"RTN","SDRPA00",22,0)
 I $G(ZTSK)="" D  Q
"RTN","SDRPA00",23,0)
 . W !,"NOT AN INTERACTIVE OPTION...schedule through TaskMan",!!
"RTN","SDRPA00",24,0)
 S RUNIDP=$O(^SDWL(409.6,":"),-1)
"RTN","SDRPA00",25,0)
 I RUNIDP I $P(^SDWL(409.6,RUNIDP,0),U,3)=""!($P(^SDWL(409.6,RUNIDP,0),U,4)="") Q
"RTN","SDRPA00",26,0)
 S DIC=409.6,DIC(0)="X"
"RTN","SDRPA00",27,0)
 D NOW^%DTC S TODAY=X
"RTN","SDRPA00",28,0)
 D FILE^DICN
"RTN","SDRPA00",29,0)
 S DA=+Y,DIE=DIC,DR="1///"_ZTSK D ^DIE
"RTN","SDRPA00",30,0)
 S (SDOUT,SDCNT)=0
"RTN","SDRPA00",31,0)
 K ^TMP("SDDPT",$J)
"RTN","SDRPA00",32,0)
 N CRUNID S CRUNID=$O(^SDWL(409.6,"AD",ZTSK,""))
"RTN","SDRPA00",33,0)
 N SDFIN,SDPEN,SDF S (RUNID,SDFIN,SDPEN,SDF)=0,PREVDT=""
"RTN","SDRPA00",34,0)
 N SDTR S SDTR=0 ; initiate to count generated appointments
"RTN","SDRPA00",35,0)
 F  S RUNID=$O(^SDWL(409.6,RUNID)) Q:+RUNID=CRUNID!SDOUT  D
"RTN","SDRPA00",36,0)
 .N APPTID,MSGID,REC
"RTN","SDRPA00",37,0)
 .S APPTID=0
"RTN","SDRPA00",38,0)
 .;scanning only appointments that were sent as 'pending'
"RTN","SDRPA00",39,0)
 .F  S APPTID=$O(^SDWL(409.6,"AE","Y",RUNID,APPTID)) Q:APPTID=""!SDOUT  S REC=^SDWL(409.6,RUNID,1,APPTID,0),DFN=$P(REC,"^"),MSGID=$P(REC,"^",3) D
"RTN","SDRPA00",40,0)
 ..; Check for 'stop task' request
"RTN","SDRPA00",41,0)
 ..;S SDCNT=SDCNT+1 I SDCNT#1000=0 S SDOUT=$$S^%ZTLOAD Q:SDOUT  ;disabled at this point
"RTN","SDRPA00",42,0)
 ..N SDADT,SDCL,SDCE,SDSTAT,SDREJ
"RTN","SDRPA00",43,0)
 ..S SDADT=$P(REC,"^",2),SDREJ=$P(REC,"^",8),SDDAM=$P(REC,"^",7)
"RTN","SDRPA00",44,0)
 ..S SDCL=$$GET1^DIQ(2.98,SDADT_","_DFN_",",.01,"I")
"RTN","SDRPA00",45,0)
 ..Q:SDCL=""  ; If this happens, there's something wrong. Do we need to handle exceptions like this?
"RTN","SDRPA00",46,0)
 ..; Check status. If it is a termination, continue.
"RTN","SDRPA00",47,0)
 ..S SDSTAT=$$STATUS^SDRPA05(DFN,SDADT,SDCL,TODAY,0)
"RTN","SDRPA00",48,0)
 ..I $P(SDSTAT,"^")=0 Q
"RTN","SDRPA00",49,0)
 ..N SDCLL S SDCLL=$P(SDSTAT,U,6) I SDCLL'="" S SDCL=SDCLL
"RTN","SDRPA00",50,0)
 ..S SDSTTY=$P(SDSTAT,U,2)
"RTN","SDRPA00",51,0)
 ..;Q:SDSTTY="P"  ; do not send 'pending', already was sent with the pending status
"RTN","SDRPA00",52,0)
 ..I SDSTTY="P"&(SDREJ="") Q  ;do not send in pending status if not rejected
"RTN","SDRPA00",53,0)
 ..N SDCE Q:'$$DPT(DFN,.SDCE)  ; Create demographic node of ^TMP file. Quit if this failed.
"RTN","SDRPA00",54,0)
 ..N SDCOA,SDMSHA S SDCOA=$P(SDSTAT,U,5) S SDMSHA=$P(SDSTAT,U),SD6A=$P(SDSTAT,U,3),SD8A=$P(SDSTAT,U,4)
"RTN","SDRPA00",55,0)
 ..N DIC,DA,X D
"RTN","SDRPA00",56,0)
 ...N SDRET S SDRET=$S(SDSTTY="F":"N",1:"Y")
"RTN","SDRPA00",57,0)
 ...S DIC="^SDWL(409.6,"_CRUNID_",1,",DA(1)=CRUNID,DIC("P")=409.69,DIC(0)="X"
"RTN","SDRPA00",58,0)
 ...S X=DFN D FILE^DICN
"RTN","SDRPA00",59,0)
 ...S DA=+Y,DIE=DIC,DA=+Y,DR="1///"_SDADT_";4///"_SDRET_";5///"_SD6A_";6///"_SDDAM_";8///"_SD8A D ^DIE
"RTN","SDRPA00",60,0)
 ...Q
"RTN","SDRPA00",61,0)
 ..N DIC,DA D
"RTN","SDRPA00",62,0)
 ...N SDRET S SDRET=$S(SDREJ'="":"R",1:"S") ; indicates that it was: R - sent as rejected, S - sent as final
"RTN","SDRPA00",63,0)
 ...S DIC="^SDWL(409.6,"_RUNID_",1,",DA(1)=RUNID
"RTN","SDRPA00",64,0)
 ...S DA=APPTID,DIE=DIC,DR="4////"_SDRET D ^DIE
"RTN","SDRPA00",65,0)
 ...Q
"RTN","SDRPA00",66,0)
 ..D APPT^SDRPA08(DFN,SDADT,SDDAM,SDCL,SDSTAT)
"RTN","SDRPA00",67,0)
 ..S SDFF=$P(SDSTAT,"^",4) D STAT(SDSTTY,SDFF,.SDFIN,.SDPEN,.SDF)
"RTN","SDRPA00",68,0)
 ..S SDTR=SDTR+1 I SDTR=5000 D SNDS19^SDRPA07(ZTSK) K ^TMP("SDDPT",$J) S SDTR=0
"RTN","SDRPA00",69,0)
 ..Q
"RTN","SDRPA00",70,0)
 .Q
"RTN","SDRPA00",71,0)
 ;Q:SDOUT
"RTN","SDRPA00",72,0)
 S RUNDT=$P(^SDWL(409.6,CRUNID,0),"^")
"RTN","SDRPA00",73,0)
 N PRUNID S PRUNID=$O(^SDWL(409.6,CRUNID),-1) S PREVDT=$P($G(^SDWL(409.6,PRUNID,0)),U,4),FIRST=0 I PREVDT="" D
"RTN","SDRPA00",74,0)
 .S PREVDT=3020901,FIRST=1  ; Default start date 09/01/2002.
"RTN","SDRPA00",75,0)
 S SDDAM=$O(^DPT("ASADM",PREVDT),-1)
"RTN","SDRPA00",76,0)
 S SDTR=+$G(SDTR)
"RTN","SDRPA00",77,0)
 F  S SDDAM=$O(^DPT("ASADM",SDDAM)) Q:+SDDAM'=SDDAM!SDOUT  D
"RTN","SDRPA00",78,0)
 .N DFN S DFN=0
"RTN","SDRPA00",79,0)
 .F  S DFN=$O(^DPT("ASADM",SDDAM,DFN)) Q:+DFN'=DFN!SDOUT  D
"RTN","SDRPA00",80,0)
 ..N SDADT
"RTN","SDRPA00",81,0)
 ..S SDADT=0
"RTN","SDRPA00",82,0)
 ..F  S SDADT=$O(^DPT("ASADM",SDDAM,DFN,SDADT)) Q:+SDADT'=SDADT!SDOUT  D
"RTN","SDRPA00",83,0)
 ...;Q:$D(^TMP("SDDPT",$J,DFN,SDADT))  ; quit if alredy created from log, not needed when cleaned
"RTN","SDRPA00",84,0)
 ...Q:$D(^SDWL(409.6,"AC",DFN,SDADT,CRUNID))  ;processed in log
"RTN","SDRPA00",85,0)
 ...; Check for 'stop task' request
"RTN","SDRPA00",86,0)
 ...S SDCNT=SDCNT+1 I SDCNT#1000=0 S SDOUT=$$S^%ZTLOAD I SDOUT D  N MSGR D SNDS19^SDRPA07(ZTSK,.MSGR) D MSG K ^TMP("SDDPT") Q
"RTN","SDRPA00",87,0)
 ....N DA,DIE,DR D
"RTN","SDRPA00",88,0)
 ....I '$D(^TMP("SDDPT",$J)) D NOW^%DTC S SDDAM=X
"RTN","SDRPA00",89,0)
 ....S DA=CRUNID,DIE=409.6,DR="1.2///"_SDDAM D ^DIE
"RTN","SDRPA00",90,0)
 ...N SDCL,SDSTAT,SDSTTY
"RTN","SDRPA00",91,0)
 ...S SDCL=$$GET1^DIQ(2.98,SDADT_","_DFN_",",.01,"I")
"RTN","SDRPA00",92,0)
 ...Q:SDCL=""  ; If this happens, there's something wrong. Do we need to handle exceptions like this?
"RTN","SDRPA00",93,0)
 ...;
"RTN","SDRPA00",94,0)
 ...; Check status.
"RTN","SDRPA00",95,0)
 ...; If the appointment is terminated and it is the first run, do not send if the date apoinment made is more than 90 days old.
"RTN","SDRPA00",96,0)
 ...; If it is not the first run, send but don't create a pending file
"RTN","SDRPA00",97,0)
 ...; Otherwise add to pending file.
"RTN","SDRPA00",98,0)
 ...S SDSTAT=$$STATUS^SDRPA05(DFN,SDADT,SDCL,TODAY,1)
"RTN","SDRPA00",99,0)
 ...I $P(SDSTAT,"^")=0 Q
"RTN","SDRPA00",100,0)
 ...N SDCLL S SDCLL=$P(SDSTAT,U,6) I SDCLL'="" S SDCL=SDCLL
"RTN","SDRPA00",101,0)
 ...S SDSTTY=$P(SDSTAT,U,2),SD6A=$P(SDSTAT,U,3),SD8A=$P(SDSTAT,U,4)
"RTN","SDRPA00",102,0)
 ...I SDSTTY="F",SD6A="NM",SD8A="NC" Q  ; skip non-count if not matching count and scheduled date already expired
"RTN","SDRPA00",103,0)
 ...N SDCOA,SDMSHA S SDCOA=$P(SDSTAT,U,5) S SDMSHA=$P(SDSTAT,U)
"RTN","SDRPA00",104,0)
 ...I SDSTTY="F" Q:FIRST&$$GT90DAYS(TODAY,SDDAM)
"RTN","SDRPA00",105,0)
 ...N SDCE Q:'$$DPT(DFN,.SDCE)  ; Create demographic node of ^TMP file. Quit if this failed.
"RTN","SDRPA00",106,0)
 ...N DIC,DA,X,SDRET D
"RTN","SDRPA00",107,0)
 ....N SDRET S SDRET=$S(SDSTTY="F":"N",1:"Y")
"RTN","SDRPA00",108,0)
 ....S DIC="^SDWL(409.6,"_CRUNID_",1,",DA(1)=CRUNID,DIC("P")=409.69,DIC(0)="X"
"RTN","SDRPA00",109,0)
 ....S X=DFN D FILE^DICN
"RTN","SDRPA00",110,0)
 ....S DA=+Y,DIE=DIC,DA=+Y,DR="1///"_SDADT_";4///"_SDRET_";5///"_SD6A_";6///"_SDDAM_";8///"_SD8A D ^DIE
"RTN","SDRPA00",111,0)
 ....Q
"RTN","SDRPA00",112,0)
 ...D APPT^SDRPA08(DFN,SDADT,$$DTCONV(SDDAM),SDCL,SDSTAT)
"RTN","SDRPA00",113,0)
 ...S SDFF=$P(SDSTAT,"^",4) D STAT(SDSTTY,SDFF,.SDFIN,.SDPEN,.SDF)
"RTN","SDRPA00",114,0)
 ...S SDTR=SDTR+1 I SDTR=5000 D SNDS19^SDRPA07(ZTSK) K ^TMP("SDDPT",$J) S SDTR=0
"RTN","SDRPA00",115,0)
 ...Q
"RTN","SDRPA00",116,0)
 ..Q
"RTN","SDRPA00",117,0)
 .Q
"RTN","SDRPA00",118,0)
 Q:SDOUT
"RTN","SDRPA00",119,0)
 N DA,DIE,DR D
"RTN","SDRPA00",120,0)
 .N TODAY D NOW^%DTC S TODAY=X
"RTN","SDRPA00",121,0)
 .S DA=CRUNID,DIE=409.6,DR="1.2///"_TODAY D ^DIE
"RTN","SDRPA00",122,0)
 N MSGR D SNDS19^SDRPA07(ZTSK,.MSGR)
"RTN","SDRPA00",123,0)
MSG ;send mail message
"RTN","SDRPA00",124,0)
 N SDAMX,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDRPA00",125,0)
 S XMSUB="PAIT BACKGROUND JOB"
"RTN","SDRPA00",126,0)
 S XMY("G.SD-PAIT")=""
"RTN","SDRPA00",127,0)
 S XMTEXT="SDAMX("
"RTN","SDRPA00",128,0)
 S XMDUZ="POSTMASTER"
"RTN","SDRPA00",129,0)
 S SDAMX(1)=""
"RTN","SDRPA00",130,0)
 S SDAMX(2)="The PAIT Background job has completed - TASK #: "_ZTSK_" Log #: "_CRUNID_"."
"RTN","SDRPA00",131,0)
 S SDAMX(3)=""
"RTN","SDRPA00",132,0)
 S SDAMX(4)="Pending appointments: "_SDPEN
"RTN","SDRPA00",133,0)
 S SDAMX(5)="     Future included: "_SDF
"RTN","SDRPA00",134,0)
 S SDAMX(6)=""
"RTN","SDRPA00",135,0)
 S SDAMX(7)="Final appointments:   "_SDFIN
"RTN","SDRPA00",136,0)
 S SDAMX(8)=""
"RTN","SDRPA00",137,0)
 S SDAMX(9)="You may monitor HL7 message transmission using option Systems Link Monitor"
"RTN","SDRPA00",138,0)
 S SDAMX(10)="from the HL7 Main Menu and viewing link SD-PAIT"
"RTN","SDRPA00",139,0)
 D ^XMD
"RTN","SDRPA00",140,0)
 K ^TMP("SDDPT",$J)
"RTN","SDRPA00",141,0)
 Q
"RTN","SDRPA00",142,0)
DPT(DFN,SDCE) ;
"RTN","SDRPA00",143,0)
 ; Extrinsic. Returns boolean, 0: ^TMP("SDDPT",$J,DFN) not created; 1: created.
"RTN","SDRPA00",144,0)
 ;
"RTN","SDRPA00",145,0)
 N SDNAMEL,SDNAMEF,SDNAMEM,SDNAMES,SDNAME,NAME,DOB,SSN,SSNP,SDSC,ICN,SDADT,SDSCP,ARRAY,SDDCE
"RTN","SDRPA00",146,0)
 S SDDCE=$$GET1^DIQ(2,DFN_",",27.01,"I")  ; Current enrollment. Required elsewhere.
"RTN","SDRPA00",147,0)
 S:SDDCE="" SDCE="" I SDDCE>0 S SDCE=$$GET1^DIQ(27.11,SDDCE_",",.07,"I") ; Enrollment priority
"RTN","SDRPA00",148,0)
 Q:$D(^TMP("SDDPT",$J,DFN)) 1
"RTN","SDRPA00",149,0)
 D GETS^DIQ(2,DFN_",",".301;.302;991.01","I","ARRAY")  ; GETS called to try to improve efficiency.
"RTN","SDRPA00",150,0)
 S SDSC=$G(ARRAY(2,DFN_",",.301,"I"))  ; Service connected.
"RTN","SDRPA00",151,0)
 S SDSCP=$G(ARRAY(2,DFN_",",.302,"I"))  ; Service connected percentage.
"RTN","SDRPA00",152,0)
 S ICN=$$GETICN^MPIF001(DFN)  ; Integration Control Number.
"RTN","SDRPA00",153,0)
 I +ICN<0 S ICN="" ; 
"RTN","SDRPA00",154,0)
 D DEM^VADPT
"RTN","SDRPA00",155,0)
 S (SDNAMEL,SDNAMEF,SDNAMEM,SDNAMES,SDNAME,NAME(1))=""
"RTN","SDRPA00",156,0)
 S NAME=$$GETNAME(DFN)
"RTN","SDRPA00",157,0)
 S DOB=$$DTCONV($P($G(VADM(3)),"^"))  ; Date of birth.
"RTN","SDRPA00",158,0)
 S (SSN,SSNP)="" S SSN=$P($G(VADM(2)),"^") I SSN["P" S SSNP="P",SSN=$E(SSN,1,9)  ; Social security number.
"RTN","SDRPA00",159,0)
 Q:$E(SSN,1,5)="00000" 0  ; Exclude test patients.
"RTN","SDRPA00",160,0)
 ;
"RTN","SDRPA00",161,0)
 S ^TMP("SDDPT",$J,DFN)=ICN_"^"_SSN_SSNP_"^"_NAME_"^"_DOB_"^"_$E(SDSC)_"^"_SDSCP_"^"_SDCE
"RTN","SDRPA00",162,0)
 Q 1
"RTN","SDRPA00",163,0)
 ;
"RTN","SDRPA00",164,0)
GETNAME(NMID) ; Name in HL7 format.
"RTN","SDRPA00",165,0)
 N SDNAME,NAME,SDNAMEL,SDNAMF,SDNAMEM,SDNAMES
"RTN","SDRPA00",166,0)
 S SDNAME("FILE")=2,SDNAME("IENS")=NMID,SDNAME("FIELD")=.01
"RTN","SDRPA00",167,0)
 S NAME(1)=$$HLNAME^XLFNAME(.SDNAME,"","^")
"RTN","SDRPA00",168,0)
 S SDNAMEL=$P($G(NAME(1)),"^"),SDNAMEF=$P($G(NAME(1)),"^",2),SDNAMEM=$P($G(NAME(1)),"^",3),SDNAMES=$P($G(NAME(1)),"^",4)
"RTN","SDRPA00",169,0)
 Q SDNAMEL_"^"_SDNAMEF_"^"_SDNAMEM_" "_SDNAMES
"RTN","SDRPA00",170,0)
 ;
"RTN","SDRPA00",171,0)
GT90DAYS(X1,X2) ; Date is more than 90 days ag, see specs.
"RTN","SDRPA00",172,0)
 ; X1 - today. More efficient to have it set at the top instead of every time this subroutine is called.
"RTN","SDRPA00",173,0)
 ; X2 - comparison date, both in Vista format cyymmdd
"RTN","SDRPA00",174,0)
 D ^%DTC
"RTN","SDRPA00",175,0)
 Q X>90  ;
"RTN","SDRPA00",176,0)
 ;
"RTN","SDRPA00",177,0)
DTCONV(DT) ; Date convertion.
"RTN","SDRPA00",178,0)
 ; CYYMMDD -> CCYYMMDD
"RTN","SDRPA00",179,0)
 ; CYYMMDD.H{HMMSS} -> CCYYMMDDHHMM
"RTN","SDRPA00",180,0)
 I DT?7N Q DT+17E6
"RTN","SDRPA00",181,0)
 Q:DT?7N1"."1.6N DT\1+17E6_$E(DT#1+1*1E4,2,5)
"RTN","SDRPA00",182,0)
 Q ""
"RTN","SDRPA00",183,0)
STAT(SDSTTY,SDFF,SDFIN,SDPEN,SDF) ;summarize pending and finals
"RTN","SDRPA00",184,0)
 I SDSTTY="F" S SDFIN=SDFIN+1 Q
"RTN","SDRPA00",185,0)
 I SDSTTY="P" S SDPEN=SDPEN+1 I SDFF="F" S SDF=SDF+1
"RTN","SDRPA00",186,0)
 Q
"RTN","SDRPA05")
0^5^B15714435
"RTN","SDRPA05",1,0)
SDRPA05 ;BP-OIFO/ESW - Evaluate appointment status for HL7  ; 10/15/03 8:19am
"RTN","SDRPA05",2,0)
 ;;5.3;Scheduling;**290**;AUG 13, 2003
"RTN","SDRPA05",3,0)
 ;Evaluation of the appointment status is done from the computed field to match the displayed/printed status in the appointment management
"RTN","SDRPA05",4,0)
 Q
"RTN","SDRPA05",5,0)
 ;
"RTN","SDRPA05",6,0)
STATUS(DFN,SDADT,SDCL,TODAY,SDF) ;
"RTN","SDRPA05",7,0)
 N SD0,SDST,SD6,SD8,SD25,SDMSH,SDCO,SDSTAT
"RTN","SDRPA05",8,0)
 S SDST=$$GET1^DIQ(2.98,SDADT_","_DFN_",",3,"I")
"RTN","SDRPA05",9,0)
 I SDST'="" I SDST'="NT"&(SDST'="I") D  Q SDSTAT
"RTN","SDRPA05",10,0)
 .S SD25="F",SDCO=""
"RTN","SDRPA05",11,0)
 .I SDST="C" S SD6="CC",SD8="",SDMSH="S15" D  ;cancel by clinic
"RTN","SDRPA05",12,0)
 ..S SD8=$$SCHEDULE(DFN,SDCL,SDADT)
"RTN","SDRPA05",13,0)
 .I SDST="CA" S SD6="CC",SD8="ABK",SDMSH="S15" ;cancel bt clinic and auto rebook
"RTN","SDRPA05",14,0)
 .I SDST="PC" S SD6="CP",SD8="",SDMSH="S15" D  ; cancal by patient
"RTN","SDRPA05",15,0)
 ..S SD8=$$SCHEDULE(DFN,SDCL,SDADT)
"RTN","SDRPA05",16,0)
 .I SDST="PCA" S SD6="CP",SD8="ABK",SDMSH="S15" ;cancel by patient and auto rebook
"RTN","SDRPA05",17,0)
 .I SDST="NA" S SD6="NS",SD8="ABK",SDMSH="S26" ;no show and auto rebook
"RTN","SDRPA05",18,0)
 .I SDST="N" S SD6="NS",SD8="",SDMSH="S26" ;no show
"RTN","SDRPA05",19,0)
 .S SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO
"RTN","SDRPA05",20,0)
 ;process all others
"RTN","SDRPA05",21,0)
 S SD0=^DPT(DFN,"S",SDADT,0)
"RTN","SDRPA05",22,0)
 N SDSTATX,SDX3
"RTN","SDRPA05",23,0)
 S SDSTATX=$$STATUS^SDAM1(DFN,SDADT,SDCL,SD0) ;call to compute the status (VistA)
"RTN","SDRPA05",24,0)
 ;SDSTATX=Appt status IFN in 409.63 ; status name ; print status ; check in ; check out 
"RTN","SDRPA05",25,0)
 S SDCO=$P(SDSTATX,";",5) ; check out
"RTN","SDRPA05",26,0)
 I SDCO'=""&(+SDSTATX'=12) D  Q SDSTAT
"RTN","SDRPA05",27,0)
 .S SD6="CO",SD25="F",SD8="",SDMSH=$S(SDF=0:"S14",1:"S12")
"RTN","SDRPA05",28,0)
 .I +SDSTATX=3 S SD8="AR" ; action required
"RTN","SDRPA05",29,0)
 .I +SDSTATX=8 S SD8="I" ;inpatient
"RTN","SDRPA05",30,0)
 .;I +SDSTATX=12 S SD8="NC" ;non-count excluded to be compared to possible encounter does not matter if check out
"RTN","SDRPA05",31,0)
 .I +SDSTATX=2 S SD8="O" ;outpatient 
"RTN","SDRPA05",32,0)
 .S SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO
"RTN","SDRPA05",33,0)
 I +SDSTATX=3 D  Q SDSTAT
"RTN","SDRPA05",34,0)
 .S SD25="P",SDMSH="S12",SDCO=""
"RTN","SDRPA05",35,0)
 .I $P(SDSTATX,";",4)'="" S SD6="CI",SD8="AR" ;check in/action required
"RTN","SDRPA05",36,0)
 .E  S SD6="",SD8="NAT" ;no action taken
"RTN","SDRPA05",37,0)
 .S SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO
"RTN","SDRPA05",38,0)
 I +SDSTATX=8!(+SDSTATX=11) S SD25="P" D  Q SDSTAT
"RTN","SDRPA05",39,0)
 .I +SDSTATX=8 S SD6="",SD8="I",SDCO="",SDMSH="S12" ;inpatient
"RTN","SDRPA05",40,0)
 .I +SDSTATX=11 S SD6="",SD8="F",SDCO="",SDMSH="S12" ;future
"RTN","SDRPA05",41,0)
 .S SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO
"RTN","SDRPA05",42,0)
 ;
"RTN","SDRPA05",43,0)
 ;process non-count (not checked out)
"RTN","SDRPA05",44,0)
 I +SDSTATX=12 N SDCLL S SDCLL="" D  S:SD6'="COE" SDCLL=SDCL S SDSTAT=SDMSH_U_SD25_U_SD6_U_SD8_U_SDCO_U_SDCLL Q SDSTAT
"RTN","SDRPA05",45,0)
 .S SD6="",SD8="NC",SDCO="",SDMSH="S12",SD25="P"
"RTN","SDRPA05",46,0)
 .I (SDADT\1)-(TODAY\1)>0 S SD6="",SD8="NCF",SD25="P" Q
"RTN","SDRPA05",47,0)
 .N SDADTC,SDSCE,SDADTCK S SDADTC=(SDADT\1)-1+.99,SDADTCK=SDADTC+1 F  D  Q:'SDSCE!(SD6="COE")
"RTN","SDRPA05",48,0)
 ..S SDSCE=$$EXAE^SDOE(DFN,SDADTC,SDADTCK)
"RTN","SDRPA05",49,0)
 ..I SDSCE>1 N SDDATA D GETGEN^SDOE(SDSCE,"SDDATA") D
"RTN","SDRPA05",50,0)
 ...N SDCL0,SDCL1,SDCL2
"RTN","SDRPA05",51,0)
 ...S SDCLL=$P(SDDATA(0),"^",4) I $P(^SC(SDCLL,0),"^",17)="Y" D  Q
"RTN","SDRPA05",52,0)
 ....S SDADTC=$P(^SCE(SDSCE,0),"^")+.000001 ;
"RTN","SDRPA05",53,0)
 ...S SDCL0=$P(^SC(SDCL,0),"^",7)_$P(^SC(SDCL,0),"^",18)
"RTN","SDRPA05",54,0)
 ...S SDCL2=$P(^SC(SDCLL,0),"^",7)_$P(^SC(SDCLL,0),"^",18)
"RTN","SDRPA05",55,0)
 ...I SDCL0'=SDCL2 S SDADTC=$P(^SCE(SDSCE,0),"^")+.000001 Q
"RTN","SDRPA05",56,0)
 ...; proceed if the same DSS IDs pairs
"RTN","SDRPA05",57,0)
 ...S SDCO=$P(SDDATA(0),"^",7)
"RTN","SDRPA05",58,0)
 ...I SDCO'="" S SD6="COE",SD25="F",SDMSH=$S(SDF=0:"S14",1:"S12") Q
"RTN","SDRPA05",59,0)
 ...;encounter exists but not in final (chek out) status
"RTN","SDRPA05",60,0)
 ...S SDADTC=$P(^SCE(SDSCE,0),"^")+.000001
"RTN","SDRPA05",61,0)
 .I SD6="COE" Q
"RTN","SDRPA05",62,0)
 .;check out by matching encounter
"RTN","SDRPA05",63,0)
 .E  I ((TODAY\1)-(SDADT\1))>2 D   ;give 2 days to update
"RTN","SDRPA05",64,0)
 ..S SD6="NM",SD25="F",SDMSH=$S(SDF=0:"S14",1:0) ;no match, to be skipped
"RTN","SDRPA05",65,0)
 Q 0
"RTN","SDRPA05",66,0)
 ;
"RTN","SDRPA05",67,0)
SCHEDULE(DFN,SDCL,SDADT) ; Scheduling flag
"RTN","SDRPA05",68,0)
 ; If the patient has another appointment created on the same day as the cancellation date of the calceled appt, and that
"RTN","SDRPA05",69,0)
 ; appointment is created for a clinic with the same stop code then return "RS".
"RTN","SDRPA05",70,0)
 ; If there is not another appointment made on the same day, return "".
"RTN","SDRPA05",71,0)
 N SDCDT,SDCLN S SDCDT=$$GET1^DIQ(2.98,SDADT_","_DFN_",",15,"I")
"RTN","SDRPA05",72,0)
 Q:'SDCDT ""
"RTN","SDRPA05",73,0)
 N SDCDTI S SDCDTI=SDCDT\1
"RTN","SDRPA05",74,0)
 N SDRESCH S SDRESCH=""
"RTN","SDRPA05",75,0)
 N SDAPDT S SDAPDT="" F  S SDAPDT=$O(^DPT("ASADM",SDCDTI,DFN,SDAPDT)) Q:SDAPDT=""  D  Q:SDRESCH
"RTN","SDRPA05",76,0)
 .S SDCLN=+$P(^DPT(DFN,"S",SDAPDT,0),U) I $P(^SC(SDCLN,0),"^",7)=$P(^SC(SDCL,0),"^",7) S SDRESCH=1 ;compare stop code pointers
"RTN","SDRPA05",77,0)
 Q $S(SDRESCH=1:"RS",1:"")
"RTN","SDRPA06")
0^3^B25183327
"RTN","SDRPA06",1,0)
SDRPA06 ;bp-oifo/swo pait hl7 ack handling
"RTN","SDRPA06",2,0)
 ;;5.3;Scheduling;**290**;AUG 13, 1993
"RTN","SDRPA06",3,0)
 ;routine is called from Vista HL7 when ack messages are received in response
"RTN","SDRPA06",4,0)
 ;to an out going HL7 message generated by protocol SC-PAIT-EVENT
"RTN","SDRPA06",5,0)
ACK ;entry point from Vista HL7
"RTN","SDRPA06",6,0)
 ;ACKDATE   :  date/time ack received
"RTN","SDRPA06",7,0)
 ;FLDSEP    :  field seperator
"RTN","SDRPA06",8,0)
 ;CMPNTSEP  :  component seperator
"RTN","SDRPA06",9,0)
 ;REPTNSEP  :  repetition seperator
"RTN","SDRPA06",10,0)
 ;ACKCODE   :  acknowledgement code
"RTN","SDRPA06",11,0)
 ;ERROR     :  reject reason
"RTN","SDRPA06",12,0)
 ;BATCHID   :  batch control ID
"RTN","SDRPA06",13,0)
 N ACKCODE,ACKDATE,BATCHID,CMPNTSEP,ERROR,FLDSEP,REPTNSEP
"RTN","SDRPA06",14,0)
 K ^TMP("SDRPA06",$J)
"RTN","SDRPA06",15,0)
 S ACKDATE=$$NOW^XLFDT()
"RTN","SDRPA06",16,0)
 S FLDSEP=HL("FS")
"RTN","SDRPA06",17,0)
 S CMPNTSEP=$E(HL("ECH"),1)
"RTN","SDRPA06",18,0)
 S REPTNSEP=$E(HL("ECH"),2)
"RTN","SDRPA06",19,0)
 S ACKCODE=$P(HLMSA,FLDSEP)
"RTN","SDRPA06",20,0)
 S ERROR=$P(HLMSA,FLDSEP,4)
"RTN","SDRPA06",21,0)
 S BATCHID=$P(HLMSA,FLDSEP,2)
"RTN","SDRPA06",22,0)
 S BATCHID=$$OURB(BATCHID) ;convert to our batch id
"RTN","SDRPA06",23,0)
 Q:BATCHID=""  ;error needs to be handled
"RTN","SDRPA06",24,0)
 S ^XTMP("SDRPA-"_BATCHID,0)=$$FMADD^XLFDT($$DT^XLFDT(),3)_"^"_$$DT^XLFDT() ;set xtmp global for diagnostics
"RTN","SDRPA06",25,0)
 ;I $E(ACKCODE,1,2)="AR" D AR(BATCHID),MSG(BATCHID) Q  ;whole batch rejection
"RTN","SDRPA06",26,0)
 ;Q:($E(ACKCODE,1,2)'="AA")  ;quit if not a application ack
"RTN","SDRPA06",27,0)
 ;will only be 2 ACKCODEs AA and AE so don't have to screen anymore
"RTN","SDRPA06",28,0)
 F  X HLNEXT Q:(HLQUIT'>0)  D  ;start looping the msg text
"RTN","SDRPA06",29,0)
 . Q:($E(HLNODE,1,3)'="MSA")  ;skip if not a MSA segment
"RTN","SDRPA06",30,0)
 . I $P(HLNODE,FLDSEP,2)="AE" D  ;it's an error
"RTN","SDRPA06",31,0)
 .. Q:($P($P(HLNODE,FLDSEP,3),"-",2))=""  ;no message number
"RTN","SDRPA06",32,0)
 .. S ^TMP("SDRPA06",$J,$P($P(HLNODE,FLDSEP,3),"-",2))=$P(HLMSA,"^",3) ;set xref with message #
"RTN","SDRPA06",33,0)
 I '$D(^TMP("SDRPA06",$J)) D AA(BATCHID),MSG(BATCHID,2) Q  ;whole batch accept
"RTN","SDRPA06",34,0)
 D AAAR(BATCHID),MSG(BATCHID,1) ;batch accept with errors   
"RTN","SDRPA06",35,0)
 Q
"RTN","SDRPA06",36,0)
AR(BATCH) ;whole batch rejection **looks like we won't need this bit of code**
"RTN","SDRPA06",37,0)
 ;BATCH  :  originating batch number
"RTN","SDRPA06",38,0)
 ;V1     :  sequence #  (individual message number in batch)
"RTN","SDRPA06",39,0)
 ;V2     :  run #       (ien of multiple entry)
"RTN","SDRPA06",40,0)
 ;V3     :  ien         (ien in multiple)
"RTN","SDRPA06",41,0)
 Q:($G(BATCH)="")
"RTN","SDRPA06",42,0)
 N DA,DIE,DR,V1,V2,V3,ZNODE
"RTN","SDRPA06",43,0)
 S V1=0
"RTN","SDRPA06",44,0)
 F  S V1=$O(^SDWL(409.6,"AMSG",BATCH,V1)) Q:'V1  D
"RTN","SDRPA06",45,0)
 . S V2=$O(^SDWL(409.6,"AMSG",BATCH,V1,"")) Q:'V2
"RTN","SDRPA06",46,0)
 . S V3=0 F  S V3=$O(^SDWL(409.6,"AMSG",BATCH,V1,V2,V3)) Q:'V3  D
"RTN","SDRPA06",47,0)
 .. S ZNODE=$G(^SDWL(409.6,V2,1,V3,0)) Q:ZNODE=""
"RTN","SDRPA06",48,0)
 .. ;4TH PIECE IS MESSAGE NUMBER
"RTN","SDRPA06",49,0)
 .. S DA=V3,DA(1)=V2,DIE="^SDWL(409.6,"_V2_",1,"
"RTN","SDRPA06",50,0)
 .. S DR="7///R" D ^DIE
"RTN","SDRPA06",51,0)
 .. I $D(^SDWL(409.6,"AE","Y",V2,V3)) Q
"RTN","SDRPA06",52,0)
 .. I $D(^SDWL(409.6,"AE","N",V2,V3)) D
"RTN","SDRPA06",53,0)
 ... S DR="4///Y" D ^DIE
"RTN","SDRPA06",54,0)
 D:+$G(V2) CLEAN(V2)
"RTN","SDRPA06",55,0)
 Q
"RTN","SDRPA06",56,0)
AA(BATCH) ;whole batch accept
"RTN","SDRPA06",57,0)
 ;if the batch is accepted and no rejections then get the run # sequence #
"RTN","SDRPA06",58,0)
 ;from AMSG xref.  If no "AE","Y" xref then call DIK to delete the entry
"RTN","SDRPA06",59,0)
 ;BATCH  :  originating batch number
"RTN","SDRPA06",60,0)
 ;V1     :  sequence #  (individual message number in batch)
"RTN","SDRPA06",61,0)
 ;V2     :  run #       (ien of multiple entry)
"RTN","SDRPA06",62,0)
 ;V3     :  ien         (ien in multiple)
"RTN","SDRPA06",63,0)
 Q:($G(BATCH)="")
"RTN","SDRPA06",64,0)
 N DA,DIK,V1,V2,V3,ZNODE
"RTN","SDRPA06",65,0)
 S V1=0
"RTN","SDRPA06",66,0)
 F  S V1=$O(^SDWL(409.6,"AMSG",BATCH,V1)) Q:'V1  D
"RTN","SDRPA06",67,0)
 . S V2=$O(^SDWL(409.6,"AMSG",BATCH,V1,"")) Q:'V2
"RTN","SDRPA06",68,0)
 . S V3=0 F  S V3=$O(^SDWL(409.6,"AMSG",BATCH,V1,V2,V3)) Q:'V3  D
"RTN","SDRPA06",69,0)
 .. S ZNODE=$G(^SDWL(409.6,V2,1,V3,0)) Q:ZNODE=""
"RTN","SDRPA06",70,0)
 .. ;4th piece is the message #
"RTN","SDRPA06",71,0)
 .. I '$D(^SDWL(409.6,"AE","Y",V2,V3)) D
"RTN","SDRPA06",72,0)
 ... S DIK="^SDWL(409.6,"_V2_",1,"
"RTN","SDRPA06",73,0)
 ... S DA(1)=V2,DA=V3 D ^DIK
"RTN","SDRPA06",74,0)
 ... S ^XTMP("SDRPA-"_BATCH,+$P(ZNODE,"^",4),0)=ZNODE ;diagnostics
"RTN","SDRPA06",75,0)
 D:+$G(V2) CLEAN(V2)
"RTN","SDRPA06",76,0)
 Q
"RTN","SDRPA06",77,0)
AAAR(BATCH) ;batch accept with errors
"RTN","SDRPA06",78,0)
 ;BATCH  :  originating batch number
"RTN","SDRPA06",79,0)
 ;V1     :  sequence #  (individual message number in batch)
"RTN","SDRPA06",80,0)
 ;V2     :  run #       (ien of multiple entry)
"RTN","SDRPA06",81,0)
 ;V3     :  ien         (ien in multiple)
"RTN","SDRPA06",82,0)
 Q:($G(BATCH)="")
"RTN","SDRPA06",83,0)
 N DA,DIK,V1,V2,V3,ZNODE
"RTN","SDRPA06",84,0)
 S V1=0
"RTN","SDRPA06",85,0)
 F  S V1=$O(^SDWL(409.6,"AMSG",BATCH,V1)) Q:'V1  D
"RTN","SDRPA06",86,0)
 . S V2=$O(^SDWL(409.6,"AMSG",BATCH,V1,"")) Q:'V2
"RTN","SDRPA06",87,0)
 . S V3=0 F  S V3=$O(^SDWL(409.6,"AMSG",BATCH,V1,V2,V3)) Q:'V3  D
"RTN","SDRPA06",88,0)
 .. S ZNODE=$G(^SDWL(409.6,V2,1,V3,0)) Q:ZNODE=""
"RTN","SDRPA06",89,0)
 .. ;4th piece is the message #
"RTN","SDRPA06",90,0)
 .. ;next line screens for accepted batch + accepted message + status final and can be deleted
"RTN","SDRPA06",91,0)
 .. I '$D(^SDWL(409.6,"AE","Y",V2,V3))&('$D(^TMP("SDRPA06",$J,$P(ZNODE,"^",4)))) D
"RTN","SDRPA06",92,0)
 ... S DIK="^SDWL(409.6,"_V2_",1,"
"RTN","SDRPA06",93,0)
 ... S DA(1)=V2,DA=V3 D ^DIK
"RTN","SDRPA06",94,0)
 ... S ^XTMP("SDRPA-"_BATCH,+$P(ZNODE,"^",4),0)=ZNODE ;diagnostics
"RTN","SDRPA06",95,0)
 .. ;next line screens for accepted batch + error message
"RTN","SDRPA06",96,0)
 .. I $D(^TMP("SDRPA06",$J,$P(ZNODE,"^",4))) D
"RTN","SDRPA06",97,0)
 ... S DA=V3,DA(1)=V2,DIE="^SDWL(409.6,"_V2_",1,"
"RTN","SDRPA06",98,0)
 ... S DR="7///"_$G(^TMP("SDRPA06",$J,$P(ZNODE,"^",4))) D ^DIE
"RTN","SDRPA06",99,0)
 ... I $D(^SDWL(409.6,"AE","Y",V2,V3)) Q
"RTN","SDRPA06",100,0)
 ... I $D(^SDWL(409.6,"AE","N",V2,V3)) D
"RTN","SDRPA06",101,0)
 .... S DR="4///Y" D ^DIE
"RTN","SDRPA06",102,0)
 D:+$G(V2) CLEAN(V2)
"RTN","SDRPA06",103,0)
 Q
"RTN","SDRPA06",104,0)
CLEAN(RUN) ;housekeeping
"RTN","SDRPA06",105,0)
 ;clean up batch previous to current one by checking for "AE",("S" or "R") xref and
"RTN","SDRPA06",106,0)
 ;deleting if entry in xref exists
"RTN","SDRPA06",107,0)
 ;RUN  :  run #           (ien of multiple entry)
"RTN","SDRPA06",108,0)
 ;V1   :  previous run #  (ien of multiple entry)  
"RTN","SDRPA06",109,0)
 ;V2   :  ien           (ien in multiple)
"RTN","SDRPA06",110,0)
 Q:($G(RUN)="")
"RTN","SDRPA06",111,0)
 N V1,V2,V3
"RTN","SDRPA06",112,0)
 S V1=$O(^SDWL(409.6,RUN),-1) Q:'V1
"RTN","SDRPA06",113,0)
 F V3="R","S" S V2=0 F  S V2=$O(^SDWL(409.6,"AE",V3,V1,V2)) Q:'V2  D
"RTN","SDRPA06",114,0)
 . S ZNODE=$G(^SDWL(409.6,V1,1,V2,0))
"RTN","SDRPA06",115,0)
 . S DIK="^SDWL(409.6,"_V1_",1,"
"RTN","SDRPA06",116,0)
 . S DA(1)=V1,DA=V2 D ^DIK
"RTN","SDRPA06",117,0)
 . S ^XTMP("SDRPA-"_BATCHID,+$P(ZNODE,"^",4),0)=ZNODE ;diagnostics
"RTN","SDRPA06",118,0)
 Q
"RTN","SDRPA06",119,0)
MSG(BATCH,TYPE) ;acknowlegement notification to mail group
"RTN","SDRPA06",120,0)
 ;BATCH   :  originating batch number
"RTN","SDRPA06",121,0)
 ;TYPE    :  type of message (accept with rejects - 1, whole accept 2)
"RTN","SDRPA06",122,0)
 ;SDAMX   :  message text array
"RTN","SDRPA06",123,0)
 ;XMSUB   :  subject
"RTN","SDRPA06",124,0)
 ;XMY     :  addressee
"RTN","SDRPA06",125,0)
 ;XMTEXT  :  location of text array
"RTN","SDRPA06",126,0)
 ;XMDUZ   :  sender of the message
"RTN","SDRPA06",127,0)
 N SDAMX,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SDRPA06",128,0)
 Q:BATCH=""
"RTN","SDRPA06",129,0)
 S XMSUB="PAIT BATCH ACKNOWLEGEMENT"
"RTN","SDRPA06",130,0)
 S XMY("G.SD-PAIT")=""
"RTN","SDRPA06",131,0)
 S XMTEXT="SDAMX("
"RTN","SDRPA06",132,0)
 S XMDUZ="POSTMASTER"
"RTN","SDRPA06",133,0)
 I TYPE=1 D
"RTN","SDRPA06",134,0)
 . S SDAMX(1)="Batch "_BATCH_" has been acknowledged, but has rejections. Use option"
"RTN","SDRPA06",135,0)
 . S SDAMX(2)="SD-PAIT REJECTED  Rejected Transmissions to view the rejections."
"RTN","SDRPA06",136,0)
 I TYPE=2 D
"RTN","SDRPA06",137,0)
 . S SDAMX(1)="Batch "_BATCH_" has been acknowledged.  There were no rejections."
"RTN","SDRPA06",138,0)
 D ^XMD
"RTN","SDRPA06",139,0)
 Q
"RTN","SDRPA06",140,0)
OURB(CONID) ;match control id to batch id
"RTN","SDRPA06",141,0)
 ;CONID  :  the batch control id of the original message
"RTN","SDRPA06",142,0)
 ;V1     :  ien of related message in message admin file
"RTN","SDRPA06",143,0)
 ;V2     :  pointer to related entry in message text file
"RTN","SDRPA06",144,0)
 ;V3     :  our batch #
"RTN","SDRPA06",145,0)
 N V1,V2,V3
"RTN","SDRPA06",146,0)
 S CONID=$G(CONID,"")
"RTN","SDRPA06",147,0)
 S V3=""
"RTN","SDRPA06",148,0)
 ;integration reference 4070 and 4069
"RTN","SDRPA06",149,0)
 S V1=$O(^HLMA("C",+CONID,"")) I 'V1 Q V3
"RTN","SDRPA06",150,0)
 S V2=$P($G(^HLMA(V1,0)),"^") I 'V2 Q V3
"RTN","SDRPA06",151,0)
 S V3=$P($G(^HL(772,V2,0)),"^",6)
"RTN","SDRPA06",152,0)
 Q V3
"RTN","SDRPA07")
0^4^B38641421
"RTN","SDRPA07",1,0)
SDRPA07 ;BP-OIFO/ESW - APPOINTMENT BATCH TRANSMISSION BUILDER; ; 10/8/03 9:28pm
"RTN","SDRPA07",2,0)
 ;;5.3;Scheduling;**290**;AUG 13 1993
"RTN","SDRPA07",3,0)
 ;
"RTN","SDRPA07",4,0)
 ;
"RTN","SDRPA07",5,0)
SNDS19(ZTSK,MSGR) ;Main entry point for the sending of SIU-S19 batch messages to
"RTN","SDRPA07",6,0)
 ; the National Patient Care Database
"RTN","SDRPA07",7,0)
 ;
"RTN","SDRPA07",8,0)
 ;Input  : None
"RTN","SDRPA07",9,0)
 ;Output : None
"RTN","SDRPA07",10,0)
 ;
"RTN","SDRPA07",11,0)
 ;
"RTN","SDRPA07",12,0)
 ;Declare variables
"RTN","SDRPA07",13,0)
 N X,X1,X2,%H
"RTN","SDRPA07",14,0)
 N BATCHC,MSGN,CURLINE
"RTN","SDRPA07",15,0)
 N LINEN,MSHLINE,XMITERR,HL7XMIT,ERROR,ORIGENT,ORIGMNT
"RTN","SDRPA07",16,0)
 N HLEID,HL,HLECH,HLFS,HLQ,HLMID,HLMTIEN,HLDT,HLDT1,MSGID,HLRESLT,HLP
"RTN","SDRPA07",17,0)
 ;Set message count limit for batch message
"RTN","SDRPA07",18,0)
 ;Initialize global locations
"RTN","SDRPA07",19,0)
 S XMITERR="^TMP(""SD-PAIT-BLD"","_$J_",""ERRORS"")"
"RTN","SDRPA07",20,0)
 S HL7XMIT="^TMP(""HLS"","_$J_")"
"RTN","SDRPA07",21,0)
 K @XMITERR,@HL7XMIT
"RTN","SDRPA07",22,0)
 ;Initiate
"RTN","SDRPA07",23,0)
 D INIT^HLFNC2("SD-PAIT-EVENT",.HL)
"RTN","SDRPA07",24,0)
 ;Unable to initiate HL7 varable - send error bulletin - done
"RTN","SDRPA07",25,0)
 ;I ($O(HL(""))="") D ERRBUL($P(HL,U,2)) Q  ; create ERRBUL later
"RTN","SDRPA07",26,0)
 ;Create batch message
"RTN","SDRPA07",27,0)
 D CREATE^HLTF(.HLMID,.HLMTIEN,.HLDT,.HLDT1)
"RTN","SDRPA07",28,0)
 ;HLMID - value of batch ID
"RTN","SDRPA07",29,0)
 ;HLMTIEN - IEN of Message Text file entry
"RTN","SDRPA07",30,0)
 ;HLDT - current date/time in FM internal format
"RTN","SDRPA07",31,0)
 ;HLDT1 - current date/time in HL7 format
"RTN","SDRPA07",32,0)
 ;Unable to create batch message - send error bulletin - done
"RTN","SDRPA07",33,0)
 ;I ('HLMTIEN) D ERRBUL("Unable to create batch HL7 message") Q
"RTN","SDRPA07",34,0)
 ;Initialize message count
"RTN","SDRPA07",35,0)
 S BATCHC=0
"RTN","SDRPA07",36,0)
 ;Initialize message number
"RTN","SDRPA07",37,0)
 S MSGN=0
"RTN","SDRPA07",38,0)
 ;Initialize line count
"RTN","SDRPA07",39,0)
 S LINEN=1
"RTN","SDRPA07",40,0)
 S CURLINE=LINEN
"RTN","SDRPA07",41,0)
 ;Loop through list of appointments requiring transmission
"RTN","SDRPA07",42,0)
 N RUNID S RUNID=$O(^SDWL(409.6,"AD",ZTSK,""))
"RTN","SDRPA07",43,0)
 N DFN,SD25,SD6,SD8,SD7,SDPATCL S DFN="" F  S DFN=$O(^TMP("SDDPT",$J,DFN)) Q:DFN=""  D
"RTN","SDRPA07",44,0)
 .N SDP,ICN,SSN,SNM,FNM,MNM,DOB,SDSC,SDSCP,SDENRO,SDAPPT S SDP=^TMP("SDDPT",$J,DFN)
"RTN","SDRPA07",45,0)
 .S ICN=$P(SDP,U),SSN=$P(SDP,U,2),SNM=$P(SDP,U,3),FNM=$P(SDP,U,4)
"RTN","SDRPA07",46,0)
 .S MNM=$P(SDP,U,5),DOB=$P(SDP,U,6),SDSC=$P(SDP,U,7),SDSCP=$P(SDP,U,8),SDENRO=$P(SDP,U,9)
"RTN","SDRPA07",47,0)
 .N SDADT S SDADT="" F  S SDADT=$O(^TMP("SDDPT",$J,DFN,SDADT)) Q:SDADT=""  D
"RTN","SDRPA07",48,0)
 ..N SDPT,SDADID,SDSDDT,SDSTAT,SDNAVA,SDCHKOUT,SDCDT,SDARF,SDARDT,SDNEW,SDCL,SDCLNUM,SDSTOP,SDCSTOP,SDFAC,SDDAM,SDCLNM,SDSTOPD,SDCSTOPD
"RTN","SDRPA07",49,0)
 ..N SDSTOPDD
"RTN","SDRPA07",50,0)
 ..S SDPT=^TMP("SDDPT",$J,DFN,SDADT),SDADID=$P(SDPT,U),SDDAM=$P(SDPT,U,2),SDSDDT=$P(SDPT,U,3),SDNAVA=$P(SDPT,U,5)
"RTN","SDRPA07",51,0)
 ..S SDCHKOUT=$P(SDPT,U,6),SDCDT=$P(SDPT,U,7),SDARF=$P(SDPT,U,8),SDARDT=$P(SDPT,U,9),SDNEW=$P(SDPT,U,10),SDCL=$P(SDPT,U,12),SDCLNM=$P(SDPT,U,13)
"RTN","SDRPA07",52,0)
 ..S SDSTOP=$P(SDPT,U,14),SDCSTOP=$P(SDPT,U,15),SDFAC=$P(SDPT,U,16),SDPATCL=$P(SDPT,U,4)
"RTN","SDRPA07",53,0)
 ..S SDAPPT=^TMP("SDDPT",$J,DFN,SDADT,"SCH"),SD25=$P(SDAPPT,"^",2),SD6=$P(SDAPPT,"^",3),SD8=$P(SDAPPT,"^",4)
"RTN","SDRPA07",54,0)
 ..S SDSTOPDD=^TMP("SDDPT",$J,DFN,SDADT,"STDC"),SDSTOPD=$P(SDSTOPDD,"^"),SDCSTOPD=$P(SDSTOPDD,"^",2)
"RTN","SDRPA07",55,0)
 ..;Calculate message control ID
"RTN","SDRPA07",56,0)
 ..S MSGN=MSGN+1
"RTN","SDRPA07",57,0)
 ..S MSGID=HLMID_"-"_MSGN
"RTN","SDRPA07",58,0)
 ..;Build MSG segment
"RTN","SDRPA07",59,0)
 ..I (MSGID'="") D
"RTN","SDRPA07",60,0)
 ...;remember orig message and event type
"RTN","SDRPA07",61,0)
 ...S ORIGMNT="SIU"
"RTN","SDRPA07",62,0)
 ...S ORIGENT="S12"
"RTN","SDRPA07",63,0)
 ...S HL("MNT")="SIU",HL("ETN")=$P(SDAPPT,"^")
"RTN","SDRPA07",64,0)
 ...;build MSH segment
"RTN","SDRPA07",65,0)
 ...K RESULT D MSH^HLFNC2(.HL,MSGID,.RESULT)
"RTN","SDRPA07",66,0)
 ...;reset message & event type to its orig values
"RTN","SDRPA07",67,0)
 ...S HL("MNT")=ORIGMNT
"RTN","SDRPA07",68,0)
 ...S HL("ETN")=ORIGENT
"RTN","SDRPA07",69,0)
 ...;copy MSH segment into HL7 message
"RTN","SDRPA07",70,0)
 ...S @HL7XMIT@(CURLINE)=RESULT
"RTN","SDRPA07",71,0)
 ...N SDFACL S SDFACL=$P($$SITE^VASITE(),"^",3)
"RTN","SDRPA07",72,0)
 ...S $P(@HL7XMIT@(CURLINE),U,4)=SDFACL ;sending facility station #
"RTN","SDRPA07",73,0)
 ...S $P(@HL7XMIT@(CURLINE),U,5)="SD-AAC-PAIT" ;Receiving Application
"RTN","SDRPA07",74,0)
 ...S $P(@HL7XMIT@(CURLINE),U,6)=200 ; Receiving Facility
"RTN","SDRPA07",75,0)
 ...I ($D(RESULT(1))) D
"RTN","SDRPA07",76,0)
 ....S @HL7XMIT@(CURLINE,1)=RESULT(1)
"RTN","SDRPA07",77,0)
 ....S CURLINE=CURLINE+1
"RTN","SDRPA07",78,0)
 ...E  S CURLINE=CURLINE+1
"RTN","SDRPA07",79,0)
 ..;get list of segments
"RTN","SDRPA07",80,0)
 ..N SDSCH S SDSCH="SCH"_HLFS_1_"^^^^^"
"RTN","SDRPA07",81,0)
 ..S SD7="" D
"RTN","SDRPA07",82,0)
 ...I SDARF'="" S SD7=SDARF
"RTN","SDRPA07",83,0)
 ...I SDNAVA'="" S SD7=SDNAVA
"RTN","SDRPA07",84,0)
 ..;S ^TMP("HLS",$J,CURLINE)
"RTN","SDRPA07",85,0)
 ..S @HL7XMIT@(CURLINE)=SDSCH_SD6_"^"_SD7_"^"_SD8_"^^^"
"RTN","SDRPA07",86,0)
 ..N SDDAT S SDDAT="~~~"_SDDAM_"~~~"_"Date Appt Created|~~~"_SDSDDT_"~~~"_"Desired Appt Date|~~~"_SDADID_"~~~"_"Appt Date"
"RTN","SDRPA07",87,0)
 ..S SDDAT=SDDAT_"|~~~"_SDCHKOUT_"~~~"_"Check Out Date"
"RTN","SDRPA07",88,0)
 ..S SDDAT=SDDAT_"|~~~"_SDCDT_"~~~"_"Cancelation Date"
"RTN","SDRPA07",89,0)
 ..S SDDAT=SDDAT_"|~~~"_SDARDT_"~~~"_"Auto-rebook Date"
"RTN","SDRPA07",90,0)
 ..;S $P(SDSCH,U,12)=SDDAT,$P(SDSCH,U,26)=SDSTAT
"RTN","SDRPA07",91,0)
 ..S @HL7XMIT@(CURLINE,1)=SDDAT_"^^^^^^^^^^^^^^"_SD25
"RTN","SDRPA07",92,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",93,0)
 ..S @HL7XMIT@(CURLINE)=$$EN^VAFHLPID(DFN,"1,3,5,7,11,19",1,1)
"RTN","SDRPA07",94,0)
 ..N SDCDFN S SDCDFN=$P(@HL7XMIT@(CURLINE),"^",4),SDCDFN=SDCDFN_"|"_DFN_"~~~USVHA&&L~PI" I $P(SDCDFN,"~")["V" S $P(SDCDFN,"~",2)=""
"RTN","SDRPA07",95,0)
 ..S $P(@HL7XMIT@(CURLINE),"^",4)=SDCDFN
"RTN","SDRPA07",96,0)
 ..N SDZIP S SDZIP=$P(@HL7XMIT@(CURLINE),U,12),SDZIP=$P(SDZIP,"~",5) S $P(@HL7XMIT@(CURLINE),U,12)="~~~~"_SDZIP
"RTN","SDRPA07",97,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",98,0)
 ..S @HL7XMIT@(CURLINE)="PV1^1^"_SDPATCL_"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"_SDFAC
"RTN","SDRPA07",99,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",100,0)
 ..S SDNEW=$S(SDNEW="Y":"NTF",SDNEW="N":"SHB")
"RTN","SDRPA07",101,0)
 ..S @HL7XMIT@(CURLINE)="PV2^^^^^^^^^^^^^^^^^^^^^^^^"_SDNEW
"RTN","SDRPA07",102,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",103,0)
 ..I $D(^TMP("SDDPT",$J,DFN,SDADT,"ROL")) D
"RTN","SDRPA07",104,0)
 ...N SDCNT,SDAIP S SDAIP="AIP^" S SDCNT="" F  S SDCNT=$O(^TMP("SDDPT",$J,DFN,SDADT,"ROL",SDCNT)) Q:SDCNT=""  D
"RTN","SDRPA07",105,0)
 ....N SDPOVID,SDPROVNM,SDROLS
"RTN","SDRPA07",106,0)
 ....S SDROLS=^TMP("SDDPT",$J,DFN,SDADT,"ROL",SDCNT)
"RTN","SDRPA07",107,0)
 ....S SDPOVID=$P(SDROLS,U,3),SDPROVNM=$P(SDROLS,U,4),SDPROVNM=$TR(SDPROVNM,",","~")
"RTN","SDRPA07",108,0)
 ....S SDPROVNM=$TR(SDPROVNM," ","~")
"RTN","SDRPA07",109,0)
 ....S @HL7XMIT@(CURLINE)=SDAIP_SDCNT_"^^"_SDPOVID_"~"_SDPROVNM_"^"_"Provider"
"RTN","SDRPA07",110,0)
 ....S CURLINE=CURLINE+1
"RTN","SDRPA07",111,0)
 ..S @HL7XMIT@(CURLINE)="AIL^1^^"_SDCL_"~~~~~~~~"_SDCLNM_"^"_SDSTOP_"~"_SDSTOPD_"~DSS Clinic ID^"_SDCSTOP_"~"_SDCSTOPD_"~DSS Credit Stop"
"RTN","SDRPA07",112,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",113,0)
 ..N SDCNT S SDCNT="" F  S SDCNT=$O(^TMP("SDDPT",$J,DFN,SDADT,"ZCL",SDCNT)) Q:SDCNT=""  D
"RTN","SDRPA07",114,0)
 ...S @HL7XMIT@(CURLINE)=^TMP("SDDPT",$J,DFN,SDADT,"ZCL",SDCNT,0)
"RTN","SDRPA07",115,0)
 ...S CURLINE=CURLINE+1
"RTN","SDRPA07",116,0)
 ..;create ZEN only if enrollment was retrieved
"RTN","SDRPA07",117,0)
 ..I SDENRO>0 S @HL7XMIT@(CURLINE)="ZEN^1^^^^^^^^"_SDENRO,CURLINE=CURLINE+1
"RTN","SDRPA07",118,0)
 ..S @HL7XMIT@(CURLINE)="ZSP^1^"_SDSC_"^"_SDSCP
"RTN","SDRPA07",119,0)
 ..S CURLINE=CURLINE+1
"RTN","SDRPA07",120,0)
 ..;file MSGID into 409.69 serarately as batch # and ID # 
"RTN","SDRPA07",121,0)
 ..N DIE,DA D
"RTN","SDRPA07",122,0)
 ...S DIE="^SDWL(409.6,"_RUNID_",1,",DA(1)=RUNID
"RTN","SDRPA07",123,0)
 ...S DA=$O(^SDWL(409.6,"AC",DFN,SDADT,RUNID,"")),DR="2///"_+MSGID_";3///"_$P(MSGID,"-",2) D ^DIE
"RTN","SDRPA07",124,0)
 D GENERATE^HLMA("SD-PAIT-EVENT","GB",1,.HLRESLT,HLMTIEN,.HLP) K @HL7XMIT
"RTN","SDRPA07",125,0)
 N DA,DIE,DR S DA=RUNID,DIE=409.6,DR="1.1///"_+$G(MSGID) D ^DIE
"RTN","SDRPA07",126,0)
 S MSGR=+$G(MSGID)
"RTN","SDRPA07",127,0)
 Q
"RTN","SDRPA08")
0^7^B17755378
"RTN","SDRPA08",1,0)
SDRPA08 ;BP-OIFO/OWAIN,ESW - Patient Appointment Data Compilation  ; 9/9/03 2:05pm
"RTN","SDRPA08",2,0)
 ;;5.3;Scheduling;**290**;AUG 13, 1993
"RTN","SDRPA08",3,0)
 ;This program generates appointment data into ^TMP("SDDPT",$J to be used by HL7 builder
"RTN","SDRPA08",4,0)
 Q
"RTN","SDRPA08",5,0)
 ;
"RTN","SDRPA08",6,0)
APPT(DFN,SDADT,SDDAM,SDCL,SDSTAT) ;
"RTN","SDRPA08",7,0)
 N ARRAY,SDCLNM,SDSTOP,SDSTOP1,SDCSTOP,SDCSTOP1,SDINST,SDFAC,SDSDDT,SDCDT,SDARF,SDARDT,SDENRO,SDNAVA,SD6A,SD8A
"RTN","SDRPA08",8,0)
 N SDNEW,SDSCHED,SDCHKOUT,SDPRVSEQ,SDCNT,SDSCE,SDSTOPD,SDCSTOPD
"RTN","SDRPA08",9,0)
 D GETS^DIQ(44,SDCL_",",".01;3;8;99;2503","I","ARRAY")  ; GETS called to try to improve efficiency.
"RTN","SDRPA08",10,0)
 S SDCLNM=$G(ARRAY(44,SDCL_",",.01,"I"))  ; Clinic name.
"RTN","SDRPA08",11,0)
 S SDSTOP1=$G(ARRAY(44,SDCL_",",8,"I"))  ; DSS identifier of clinic.
"RTN","SDRPA08",12,0)
 S SDSTOP=$$GET1^DIQ(40.7,SDSTOP1_",",1,"I")
"RTN","SDRPA08",13,0)
 S SDSTOPD=$$GET1^DIQ(40.7,SDSTOP1_",",.01,"I") ;description
"RTN","SDRPA08",14,0)
 S SDCSTOP1=$G(ARRAY(44,SDCL_",",2503,"I"))  ; DSS credit stop of clinic.
"RTN","SDRPA08",15,0)
 S SDCSTOP="",SDCSTOPD=""
"RTN","SDRPA08",16,0)
 I SDCSTOP1>0 S SDCSTOP=$$GET1^DIQ(40.7,SDCSTOP1_",",1,"I"),SDCSTOPD=$$GET1^DIQ(40.7,SDCSTOP1_",",.01,"I")
"RTN","SDRPA08",17,0)
 S SDINST=$G(ARRAY(44,SDCL_",",3,"I"))  ; Institution
"RTN","SDRPA08",18,0)
 S SDFAC=$S(SDINST="":"",1:$$GET1^DIQ(4,SDINST_",",99,"I"))  ; Facility.
"RTN","SDRPA08",19,0)
 I SDFAC="" S SDDIV=$$GET1^DIQ(44,SDCL_",",3.5,"I") D
"RTN","SDRPA08",20,0)
 .S SDFAC=$P($$SITE^VASITE(,SDDIV),"^",3)
"RTN","SDRPA08",21,0)
 ;N SEQ S SEQ=0 F  S SEQ=$O(^SC(SDCL,"S",SDADT,1,SEQ)) Q:+SEQ'=SEQ  I $P(^SC(SDCL,"S",SDADT,1,SEQ,0),"^")=DFN Q
"RTN","SDRPA08",22,0)
 ;S SDCHKOUT=$$DTCONV^SDRPA00($$GET1^DIQ(44.003,SEQ_","_SDADT_","_SDCL_",",303,"I"))  ; Checked out date.
"RTN","SDRPA08",23,0)
 S SDCHKOUT=""
"RTN","SDRPA08",24,0)
 I $P(SDSTAT,"^",5)'="" S SDCHKOUT=$$DTCONV^SDRPA00($P(SDSTAT,"^",5))
"RTN","SDRPA08",25,0)
 S SDSDDT=$$DTCONV^SDRPA00($$GET1^DIQ(2.98,SDADT_","_DFN_",",27,"I"))  ; desired date 
"RTN","SDRPA08",26,0)
 S SDCDT=$$GET1^DIQ(2.98,SDADT_","_DFN_",",15,"I")  ; Cancellation date.
"RTN","SDRPA08",27,0)
 S SDARF=$S($$GET1^DIQ(2.98,SDADT_","_DFN_",",25,"I")="A":"A",1:"")  ; Auto-rebook flag.
"RTN","SDRPA08",28,0)
 S SDARDT=$$DTCONV^SDRPA00($$GET1^DIQ(2.98,SDADT_","_DFN_",",12,"I"))  ; Auto-rebook date.
"RTN","SDRPA08",29,0)
 S SDNAVA=$S($$GET1^DIQ(2.98,SDADT_","_DFN_",",26,"I"):"N",1:"")  ; Next available appointment indicator.
"RTN","SDRPA08",30,0)
 S SDNEW=$$NEWAT(DFN,SDADT,SDSTOP1,SDCSTOP1,SDFAC)  ; New to facility/clinic flag.
"RTN","SDRPA08",31,0)
 ;
"RTN","SDRPA08",32,0)
 S SD6A=$P(SDSTAT,"^",3) S SD8A=$P(SDSTAT,"^",4)
"RTN","SDRPA08",33,0)
 ;get patient class
"RTN","SDRPA08",34,0)
 D GETAPPT^SDAMA201(DFN,"12",,SDADT,SDADT) N SDPATCL D  K ^TMP($J,"SDAMA201")
"RTN","SDRPA08",35,0)
 .S SDPATCL=$G(^TMP($J,"SDAMA201","GETAPPT",1,12)) I SDPATCL="" S SDPATCL="U"
"RTN","SDRPA08",36,0)
 S ^TMP("SDDPT",$J,DFN,SDADT)=$$DTCONV^SDRPA00(SDADT)_"^"_SDDAM_"^"_SDSDDT_"^"_SDPATCL_"^"_SDNAVA_"^"_SDCHKOUT_"^"_$$DTCONV^SDRPA00(SDCDT)_"^"_SDARF_"^"_SDARDT
"RTN","SDRPA08",37,0)
 S ^TMP("SDDPT",$J,DFN,SDADT)=^TMP("SDDPT",$J,DFN,SDADT)_"^"_SDNEW_"^^"_SDCL_"^"_SDCLNM_"^"_SDSTOP_"^"_SDCSTOP_"^"_SDFAC
"RTN","SDRPA08",38,0)
 S ^TMP("SDDPT",$J,DFN,SDADT,"SCH")=SDSTAT
"RTN","SDRPA08",39,0)
 S ^TMP("SDDPT",$J,DFN,SDADT,"STDC")=SDSTOPD_"^"_SDCSTOPD
"RTN","SDRPA08",40,0)
 ; Outpatient classification.
"RTN","SDRPA08",41,0)
 S SDSCE=$$GET1^DIQ(2.98,SDADT_","_DFN_",",21,"I")
"RTN","SDRPA08",42,0)
 I SDSCE'="" D EN^VAFHLZCL(DFN,SDSCE,"1,2,3,4,5,6","","^","^TMP(""SDDPT"",$J,DFN,SDADT,""ZCL"")")
"RTN","SDRPA08",43,0)
 ; Get providers for clinic.
"RTN","SDRPA08",44,0)
 N SDPROV S (SDPRVSEQ,SDCNT)=0,SDPROV=""
"RTN","SDRPA08",45,0)
 N PROVID
"RTN","SDRPA08",46,0)
 F  S SDPRVSEQ=$O(^SC(SDCL,"PR",SDPRVSEQ)) Q:+SDPRVSEQ'=SDPRVSEQ!(SDCNT>10)  D
"RTN","SDRPA08",47,0)
 .S SDCNT=SDCNT+1,PROVID=$$GET1^DIQ(44.1,SDPRVSEQ_","_SDCL_",",.01,"I")
"RTN","SDRPA08",48,0)
 .S ^TMP("SDDPT",$J,DFN,SDADT,"ROL",SDCNT)="ROL^"_SDCNT_"^"_PROVID_"^"_$$GET1^DIQ(200,PROVID_",",.01,"I")
"RTN","SDRPA08",49,0)
 .Q
"RTN","SDRPA08",50,0)
 Q
"RTN","SDRPA08",51,0)
NEWAT(DFN,SDADT,SDSTOP1,SDCSTOP1,SDFAC) ; New to facility/clinic flag.
"RTN","SDRPA08",52,0)
 N OK,SDADT0,SDFAC1,SDDIV
"RTN","SDRPA08",53,0)
 S OK=0,SDADT0=SDADT
"RTN","SDRPA08",54,0)
 F  S SDADT=$O(^DPT(DFN,"S",SDADT),-1) Q:'SDADT  Q:$$GT24(SDADT,SDADT0)  D  Q:OK
"RTN","SDRPA08",55,0)
 .N SDCL,SDDIV
"RTN","SDRPA08",56,0)
 .S SDCL=$$GET1^DIQ(2.98,SDADT_","_DFN_",",.01,"I")
"RTN","SDRPA08",57,0)
 .Q:$$GET1^DIQ(44,SDCL_",",8,"I")'=SDSTOP1
"RTN","SDRPA08",58,0)
 .Q:$$GET1^DIQ(44,SDCL_",",2503,"I")'=SDCSTOP1
"RTN","SDRPA08",59,0)
 .S SDINST=$G(ARRAY(44,SDCL_",",3,"I"))  ; Institution
"RTN","SDRPA08",60,0)
 .S SDFAC1=$S(SDINST="":"",1:$$GET1^DIQ(4,SDINST_",",99,"I"))  ; Facility.
"RTN","SDRPA08",61,0)
 .I SDFAC1="" S SDDIV=$$GET1^DIQ(44,SDCL_",",3.5,"I") I SDDIV'="" D
"RTN","SDRPA08",62,0)
 ..S SDFAC1=$P($$SITE^VASITE(,SDDIV),"^",3)
"RTN","SDRPA08",63,0)
 .I SDFAC1=SDFAC S OK=1
"RTN","SDRPA08",64,0)
 .Q
"RTN","SDRPA08",65,0)
 Q $S(OK:"N",1:"Y")
"RTN","SDRPA08",66,0)
 ;
"RTN","SDRPA08",67,0)
SCHEDULE(DFN,SDCL,SDCDT) ; Scheduling flag
"RTN","SDRPA08",68,0)
 ; If the patient has another appointment created on the same day as the cancellation date of the calceled appt, return "RS".
"RTN","SDRPA08",69,0)
 ; If there is not another appointment made on the same day, return "".
"RTN","SDRPA08",70,0)
 Q:'SDCDT ""
"RTN","SDRPA08",71,0)
 N SDCDTI S SDCDTI=SDCDT\1
"RTN","SDRPA08",72,0)
 N SDRESCH S SDRESCH=""
"RTN","SDRPA08",73,0)
 N SDAPDT S SDAPDT="" F  S SDAPDT=$O(^DPT("ASADM",SDCDTI,DFN,SDAPDT)) Q:SDAPDT=""  D  Q:SDRESCH
"RTN","SDRPA08",74,0)
 .I +$P(^DPT(DFN,"S",SDAPDT,0),U)=SDCL S SDRESCH=1
"RTN","SDRPA08",75,0)
 Q $S(SDRESCH=1:"RS",1:"")
"RTN","SDRPA08",76,0)
 ;
"RTN","SDRPA08",77,0)
GT24(DATE1,DATE2) ; Are two dates greater than 24 months apart?
"RTN","SDRPA08",78,0)
 ; DATE1 should be before DATE2.
"RTN","SDRPA08",79,0)
 ; If they are not in that order, they are swapped anyway.
"RTN","SDRPA08",80,0)
 N MONTHS,TEMP
"RTN","SDRPA08",81,0)
 I DATE1>DATE2 S TEMP=DATE1,DATE1=DATE2,DATE2=TEMP
"RTN","SDRPA08",82,0)
 S MONTHS=$E(DATE2,2,3)-$E(DATE1,2,3)*12+$E(DATE2,4,5)-$E(DATE1,4,5)
"RTN","SDRPA08",83,0)
 Q MONTHS>24
"SEC","^DIC",409.6,409.6,0,"AUDIT")
@
"SEC","^DIC",409.6,409.6,0,"DD")
@
"SEC","^DIC",409.6,409.6,0,"DEL")
@
"SEC","^DIC",409.6,409.6,0,"LAYGO")
@
"SEC","^DIC",409.6,409.6,0,"RD")

"SEC","^DIC",409.6,409.6,0,"WR")
@
"VER")
8.0^22.0
"^DD",409.6,409.6,0)
FIELD^^1.2^5
"^DD",409.6,409.6,0,"DDA")
N
"^DD",409.6,409.6,0,"DT")
3030925
"^DD",409.6,409.6,0,"IX","AD",409.6,1)

"^DD",409.6,409.6,0,"IX","B",409.6,.01)

"^DD",409.6,409.6,0,"NM","PATIENT APPOINTMENT INFO LOG")

"^DD",409.6,409.6,.01,0)
RUN DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.6,409.6,.01,1,0)
^.1
"^DD",409.6,409.6,.01,1,1,0)
409.6^B
"^DD",409.6,409.6,.01,1,1,1)
S ^SDWL(409.6,"B",$E(X,1,30),DA)=""
"^DD",409.6,409.6,.01,1,1,2)
K ^SDWL(409.6,"B",$E(X,1,30),DA)
"^DD",409.6,409.6,.01,3)
Date the extract is run
"^DD",409.6,409.6,.01,21,0)
^^2^2^3030924^
"^DD",409.6,409.6,.01,21,1,0)
The date the extract is run at the site.  Extracts are run as Taskman 
"^DD",409.6,409.6,.01,21,2,0)
background jobs.
"^DD",409.6,409.6,.01,23,0)
^^1^1^3030717^
"^DD",409.6,409.6,.01,23,1,0)
This field is populated by the run routine.
"^DD",409.6,409.6,.01,"DT")
3030924
"^DD",409.6,409.6,1,0)
TASK ID^F^^0;2^K:$L(X)>15!($L(X)<1) X
"^DD",409.6,409.6,1,1,0)
^.1
"^DD",409.6,409.6,1,1,1,0)
409.6^AD
"^DD",409.6,409.6,1,1,1,1)
S ^SDWL(409.6,"AD",$E(X,1,30),DA)=""
"^DD",409.6,409.6,1,1,1,2)
K ^SDWL(409.6,"AD",$E(X,1,30),DA)
"^DD",409.6,409.6,1,1,1,"DT")
3030717
"^DD",409.6,409.6,1,3)
Taskman Task ID
"^DD",409.6,409.6,1,21,0)
^^2^2^3030924^
"^DD",409.6,409.6,1,21,1,0)
The Taskman task ID number.  When the extract is run the Taskman ID of 
"^DD",409.6,409.6,1,21,2,0)
the process is stored in this field.
"^DD",409.6,409.6,1,"DT")
3030924
"^DD",409.6,409.6,1.1,0)
LAST BATCH # OF THIS RUN^RF^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",409.6,409.6,1.1,3)
Answer must be 1-20 characters in length.
"^DD",409.6,409.6,1.1,21,0)
^^4^4^3030924^
"^DD",409.6,409.6,1.1,21,1,0)
This is the HL7 batch number.  When the extract is run an HL7 batch is 
"^DD",409.6,409.6,1.1,21,2,0)
created that may contain up to 1000 individual messages.  This field 
"^DD",409.6,409.6,1.1,21,3,0)
records the number of the last batch messages created by the extract 
"^DD",409.6,409.6,1.1,21,4,0)
process.
"^DD",409.6,409.6,1.1,"DT")
3030924
"^DD",409.6,409.6,1.2,0)
LAST SCANNED DATE^D^^0;4^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",409.6,409.6,1.2,3)
(No range limit on date)
"^DD",409.6,409.6,1.2,21,0)
^^3^3^3030924^
"^DD",409.6,409.6,1.2,21,1,0)
This field records the date the last temporary global transmission file 
"^DD",409.6,409.6,1.2,21,2,0)
was created.  It is used internally to coordinate subsequent 
"^DD",409.6,409.6,1.2,21,3,0)
transmissions.
"^DD",409.6,409.6,1.2,"DT")
3030924
"^DD",409.6,409.6,2,0)
PATIENT^409.69PA^^1;0
"^DD",409.6,409.6,2,21,0)
^.001^2^2^3031021^^
"^DD",409.6,409.6,2,21,1,0)
The multiple field that records key elements of the patient appointment
"^DD",409.6,409.6,2,21,2,0)
extract.
"^DD",409.6,409.6,2,"DT")
3031021
"^DD",409.6,409.69,0)
PATIENT SUB-FIELD^^8^9
"^DD",409.6,409.69,0,"DT")
3030925
"^DD",409.6,409.69,0,"IX","B",409.69,.01)

"^DD",409.6,409.69,0,"NM","PATIENT")

"^DD",409.6,409.69,0,"UP")
409.6
"^DD",409.6,409.69,.01,0)
PATIENT^P2'^DPT(^0;1^Q
"^DD",409.6,409.69,.01,1,0)
^.1
"^DD",409.6,409.69,.01,1,1,0)
409.69^B
"^DD",409.6,409.69,.01,1,1,1)
S ^SDWL(409.6,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",409.6,409.69,.01,1,1,2)
K ^SDWL(409.6,DA(1),1,"B",$E(X,1,30),DA)
"^DD",409.6,409.69,.01,3)
The patient whose appoinment is being transmitted
"^DD",409.6,409.69,.01,21,0)
^^2^2^3030929^
"^DD",409.6,409.69,.01,21,1,0)
This subfield will hold the pointer to the Patient file to identify a name
"^DD",409.6,409.69,.01,21,2,0)
of each patient whose appointment information is being transmitted.
"^DD",409.6,409.69,.01,"DT")
3030929
"^DD",409.6,409.69,1,0)
APPT DATE^D^^0;2^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",409.6,409.69,1,3)
The creation date of the transmitted appointment
"^DD",409.6,409.69,1,21,0)
^^3^3^3030924^
"^DD",409.6,409.69,1,21,1,0)
This is the date when the appointment was created by the scheduling 
"^DD",409.6,409.69,1,21,2,0)
package.  Appointment creation date is used in the paitient wait time 
"^DD",409.6,409.69,1,21,3,0)
calculations.
"^DD",409.6,409.69,1,"DT")
3030924
"^DD",409.6,409.69,2,0)
HL7 BATCH #^F^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",409.6,409.69,2,3)
The HL7 batch number.
"^DD",409.6,409.69,2,21,0)
^^3^3^3030924^
"^DD",409.6,409.69,2,21,1,0)
This field records the HL7 batch number.  The batch number is used in
"^DD",409.6,409.69,2,21,2,0)
conjunction with incoming HL7 acknowledgement messages to identify the 
"^DD",409.6,409.69,2,21,3,0)
original extract message.
"^DD",409.6,409.69,2,"DT")
3030924
"^DD",409.6,409.69,3,0)
HL7 MESSAGE ID^RF^^0;4^K:$L(X)>50!($L(X)<1) X
"^DD",409.6,409.69,3,3)
Application specific error message
"^DD",409.6,409.69,3,21,0)
^^3^3^3030924^
"^DD",409.6,409.69,3,21,1,0)
This field records the HL7 message number.  The message number is used in
"^DD",409.6,409.69,3,21,2,0)
conjunction with incoming HL7 acknowledgement messages to identify the 
"^DD",409.6,409.69,3,21,3,0)
original extract message.
"^DD",409.6,409.69,3,"DT")
3030924
"^DD",409.6,409.69,4,0)
RETENTION FLAG^RS^Y:YES - to be sent when 'Final';N:NO - was sent as 'Final';S:SENT as 'Final' with another entry;R:RESENT - because of rejection;^0;5^Q
"^DD",409.6,409.69,4,.1)
RETENTION FLAG INDICATING STATUS OF RECORD
"^DD",409.6,409.69,4,3)
Will the entry be retained for next transmission
"^DD",409.6,409.69,4,21,0)
^^4^4^3030919^
"^DD",409.6,409.69,4,21,1,0)
This flag will determine if the entry is to remain in the file to be 
"^DD",409.6,409.69,4,21,2,0)
transmitted on the subsequent run. Also it may indicate that another 
"^DD",409.6,409.69,4,21,3,0)
entry was created because of 'S' - sending as final or 'R' - resending 
"^DD",409.6,409.69,4,21,4,0)
because of rejection.
"^DD",409.6,409.69,4,"DT")
3030919
"^DD",409.6,409.69,5,0)
EVENT REASON^S^CI:Check-in;NS:No Show;CC:Canceled by Clinic;CP:Canceled by Patient;COE:Checked out by Encounter;NM:No Match;CO:Checked-out;^0;6^Q
"^DD",409.6,409.69,5,3)

"^DD",409.6,409.69,5,21,0)
^.001^1^1^3030904^^^
"^DD",409.6,409.69,5,21,1,0)
Event reason code as it is files into SCH.6 segment of HL7 message.
"^DD",409.6,409.69,5,"DT")
3030827
"^DD",409.6,409.69,6,0)
DATE APPT MADE^RD^^0;7^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",409.6,409.69,6,3)
(No range limit on date)
"^DD",409.6,409.69,6,"DT")
3030808
"^DD",409.6,409.69,7,0)
ERROR MESSAGE^S^R:R -Rejected;100:Patient DFN is not greater than zero or numeric;200:Invalid Station Number;300:Desired Appointment Date is not valid;400:Clinic IEN is not numeric;500:Not used at this time;600:Not used at this time;^0;8^Q
"^DD",409.6,409.69,7,.1)
Optional Error Flag or Error Code indicating rejection
"^DD",409.6,409.69,7,3)

"^DD",409.6,409.69,7,21,0)
^.001^3^3^3031014^^^
"^DD",409.6,409.69,7,21,1,0)
If the Error Flag as 'R' or numeric error code is
"^DD",409.6,409.69,7,21,2,0)
entered it means that that appointment has to
"^DD",409.6,409.69,7,21,3,0)
be resent with its current status. A new entry will be created.
"^DD",409.6,409.69,7,"DT")
3030924
"^DD",409.6,409.69,8,0)
APPOINTMENT TYPE^S^AR:Action Required;NAT:No Action Taken;F:Future;NC:Non Count;I:Inpatient;NCF:Non Count Future;ABK:Auto Rebook;RS:Rescheduled;O:Outpatient;^0;9^Q
"^DD",409.6,409.69,8,3)

"^DD",409.6,409.69,8,21,0)
^^1^1^3031021^
"^DD",409.6,409.69,8,21,1,0)
This field records a descriptive code of the appointment type.
"^DD",409.6,409.69,8,"DT")
3030925
"^DIC",409.6,409.6,0)
PATIENT APPOINTMENT INFO LOG^409.6
"^DIC",409.6,409.6,0,"GL")
^SDWL(409.6,
"^DIC",409.6,409.6,"%",0)
^1.005^^
"^DIC",409.6,409.6,"%D",0)
^^4^4^3030924^
"^DIC",409.6,409.6,"%D",1,0)
The Patient Appointment Information Transmission (PAIT) log is maintained 
"^DIC",409.6,409.6,"%D",2,0)
in this file.  Log entries are added when appointment information is 
"^DIC",409.6,409.6,"%D",3,0)
transmitted to the Austin Automation Center via HL7 messages.  File 
"^DIC",409.6,409.6,"%D",4,0)
entries are deleted automatically when HL7 acknowledgments are received.
"^DIC",409.6,"B","PATIENT APPOINTMENT INFO LOG",409.6)

**END**
**END**
