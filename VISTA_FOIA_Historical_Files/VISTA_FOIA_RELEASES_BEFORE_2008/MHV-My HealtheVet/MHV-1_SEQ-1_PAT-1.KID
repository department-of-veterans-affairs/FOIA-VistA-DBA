Released MHV*1*1 SEQ #1
Extracted from mail message
**KIDS**:MHV*1.0*1^

**INSTALL NAME**
MHV*1.0*1
"BLD",5842,0)
MHV*1.0*1^My HealtheVet^0^3060718^y
"BLD",5842,1,0)
^^172^172^3060718^
"BLD",5842,1,1,0)
DESCRIPTION:
"BLD",5842,1,2,0)
============
"BLD",5842,1,3,0)
 
"BLD",5842,1,4,0)
The MHV 1.0 release for MHV Rx Refill went to the field with logging to a
"BLD",5842,1,5,0)
TMP global left on.  The non-standard use of TMP by the MHV log causes
"BLD",5842,1,6,0)
the TMP entries to not be cleaned up automatically.
"BLD",5842,1,7,0)
This patch will turn off logging in the HL7 receiver routines allowing it
"BLD",5842,1,8,0)
to be switched on and off externally as designed.  An XTMP global will be
"BLD",5842,1,9,0)
used instead of TMP.  Options will be added to control logging and to
"BLD",5842,1,10,0)
facilitate automatically purging the log.  A post-init will run to clean
"BLD",5842,1,11,0)
up any existing TMP("MHV7LOG") entries.
"BLD",5842,1,12,0)
 
"BLD",5842,1,13,0)
A new menu, MHV LOG MENU, has been added.  The log provides information 
"BLD",5842,1,14,0)
of use to MHV developers, and should only be used by IRM staff in the 
"BLD",5842,1,15,0)
event troubleshooting an MHV interface becomes necessary.  The MHV user 
"BLD",5842,1,16,0)
manual provides information on how to use these options.
"BLD",5842,1,17,0)
Included options are:
"BLD",5842,1,18,0)
        MHV LOG CONFIG     Configure Logging Parameters
"BLD",5842,1,19,0)
        MHV LOG INFO       Display Log Information
"BLD",5842,1,20,0)
        MHV LOG OFF        Turn Off Logging
"BLD",5842,1,21,0)
        MHV LOG ON         Turn On Logging
"BLD",5842,1,22,0)
        MHV LOG PURGE      Purge Log
"BLD",5842,1,23,0)
        MHV LOG SIZE       Display Log Size
"BLD",5842,1,24,0)
        MHV LOG VIEW       View Log Entries
"BLD",5842,1,25,0)
 
"BLD",5842,1,26,0)
A new option has been added, MHV CLIENT, as a broker context for a future 
"BLD",5842,1,27,0)
MHV GUI client.  The following remote procedures are also included:
"BLD",5842,1,28,0)
        MHV LOG INFO
"BLD",5842,1,29,0)
        MHV LOG OFF
"BLD",5842,1,30,0)
        MHV LOG ON
"BLD",5842,1,31,0)
        MHV LOG PURGE
"BLD",5842,1,32,0)
        MHV LOG SIZE
"BLD",5842,1,33,0)
        MHV LOG CONFIG
"BLD",5842,1,34,0)
        MHV LOG SUMMARY
"BLD",5842,1,35,0)
        MHV LOG DETAIL
"BLD",5842,1,36,0)
 
"BLD",5842,1,37,0)
The MHV 1.0 release went to the field with two HL7 protocols having the
"BLD",5842,1,38,0)
"debug" flag set.  These event driver protocols will be released with the 
"BLD",5842,1,39,0)
flag turned off.  The following protocols are being shipped:
"BLD",5842,1,40,0)
        MHV OMP-O09 Event Driver
"BLD",5842,1,41,0)
        MHV OMP-O09 Subscriber
"BLD",5842,1,42,0)
        MHV QBP-Q13 Event Driver
"BLD",5842,1,43,0)
        MHV QBP-Q13 Subscriber
"BLD",5842,1,44,0)
 
"BLD",5842,1,45,0)
 
"BLD",5842,1,46,0)
Associated Remedy Ticket
"BLD",5842,1,47,0)
====================
"BLD",5842,1,48,0)
HD 131029
"BLD",5842,1,49,0)
 
"BLD",5842,1,50,0)
Test Sites
"BLD",5842,1,51,0)
==========
"BLD",5842,1,52,0)
Tampa VAMC
"BLD",5842,1,53,0)
Bay Pines VAMC
"BLD",5842,1,54,0)
Baltimore VAMC
"BLD",5842,1,55,0)
VISN 2 
"BLD",5842,1,56,0)
 
"BLD",5842,1,57,0)
 
"BLD",5842,1,58,0)
INSTALLATION INSTRUCTIONS
"BLD",5842,1,59,0)
==========================
"BLD",5842,1,60,0)
The patch is distributed in KIDS format in a PackMan message.
"BLD",5842,1,61,0)
 
"BLD",5842,1,62,0)
This patch requires MHV 1.0
"BLD",5842,1,63,0)
 
"BLD",5842,1,64,0)
 
"BLD",5842,1,65,0)
                       **WARNING**
"BLD",5842,1,66,0)
 
"BLD",5842,1,67,0)
Inbound HL7 messages for MHV should not be processed during installation
"BLD",5842,1,68,0)
of this patch. All incoming filers should be stopped before installation.
"BLD",5842,1,69,0)
  
"BLD",5842,1,70,0)
Before you install this patch in production, please identify all the
"BLD",5842,1,71,0)
production node(s) that have the TMP("MHV7LOG") global.  This should be
"BLD",5842,1,72,0)
the same node(s) running the HL7 Listener.  You will need to log on to
"BLD",5842,1,73,0)
each of these node(s) and run the post-init routine CLEANLOG^MHV1P1 will
"BLD",5842,1,74,0)
delete the global entries since TMP is not translated.  The
"BLD",5842,1,75,0)
TMP("MHV7LOG") global should have many entries.
"BLD",5842,1,76,0)
 
"BLD",5842,1,77,0)
                           ****
"BLD",5842,1,78,0)
 
"BLD",5842,1,79,0)
 
"BLD",5842,1,80,0)
                       **Notice**
"BLD",5842,1,81,0)
This patch includes new options.
"BLD",5842,1,82,0)
When an option is included in the patch build, the question REBUILD MENUS
"BLD",5842,1,83,0)
is asked as a PRE-INSTALL question. If you choose to have KIDs rebuild
"BLD",5842,1,84,0)
the menus it will happen at the end of the build installation and may
"BLD",5842,1,85,0)
take several hours.
"BLD",5842,1,86,0)
 
"BLD",5842,1,87,0)
Note: Most sites have a nightly batch job that rebuilds the menus so if
"BLD",5842,1,88,0)
you queued the installations ensure that it will complete prior to the
"BLD",5842,1,89,0)
batch job.  Or, if you are installing several builds, wait until the
"BLD",5842,1,90,0)
last one to use the KIDs rebuild functionality.
"BLD",5842,1,91,0)
 
"BLD",5842,1,92,0)
                          ****
"BLD",5842,1,93,0)
 
"BLD",5842,1,94,0)
The install time for this patch is less than 5 minutes. This patch can be
"BLD",5842,1,95,0)
installed with users on the system.
"BLD",5842,1,96,0)
 
"BLD",5842,1,97,0)
 
"BLD",5842,1,98,0)
 
"BLD",5842,1,99,0)
 1.  These routines should not be mapped.
"BLD",5842,1,100,0)
 
"BLD",5842,1,101,0)
 2.  Unload the distribution
"BLD",5842,1,102,0)
     Use the INSTALL/CHECK MESSAGE option on the PackMan menu to unload
"BLD",5842,1,103,0)
     the KIDS distribution included with this message.
"BLD",5842,1,104,0)
 
"BLD",5842,1,105,0)
 3.  Stop all incoming filers.
"BLD",5842,1,106,0)
     On the 'Filer and Link Management Options' menu, select the
"BLD",5842,1,107,0)
     'Monitor, Start, Stop Filers' option.  At that menu level, choose
"BLD",5842,1,108,0)
     the action 'Stop incoming filer' to stop each incoming filer.
"BLD",5842,1,109,0)
 
"BLD",5842,1,110,0)
 4.  Install the transport global.
"BLD",5842,1,111,0)
     From the Kernel Installation and Distribution System Menu,
"BLD",5842,1,112,0)
     select the Installation menu.
"BLD",5842,1,113,0)
 
"BLD",5842,1,114,0)
 5.  From this menu, you may elect to use the following options
"BLD",5842,1,115,0)
     (when prompted for INSTALL NAME, enter MHV*1.0*1):
"BLD",5842,1,116,0)
     a.  Backup a Transport Global - this option will create a backup
"BLD",5842,1,117,0)
         message of any routines exported with the patch.  It will NOT
"BLD",5842,1,118,0)
         backup any other changes such as DDs or templates.
"BLD",5842,1,119,0)
     b.  Compare Transport Global to Current System  - this option will
"BLD",5842,1,120,0)
         allow you to view all changes that will be made when the patch
"BLD",5842,1,121,0)
         is installed.  It compares all components of the patch
"BLD",5842,1,122,0)
         (routines, DDs, templates, etc.).
"BLD",5842,1,123,0)
     c.  Verify Checksums in Transport Global - this option will
"BLD",5842,1,124,0)
         allow you to ensure the integrity of the routines that are in
"BLD",5842,1,125,0)
         the transport global.
"BLD",5842,1,126,0)
     d.  Print Transport Global - this option will allow you to view the
"BLD",5842,1,127,0)
         components of the KIDS build.
"BLD",5842,1,128,0)
 
"BLD",5842,1,129,0)
 6.  Use the 'Install Package(s)' option under the 'Installation' menu
"BLD",5842,1,130,0)
     and select the package 'MHV*1.0*1'.
"BLD",5842,1,131,0)
 
"BLD",5842,1,132,0)
 7.  When prompted 'Want KIDS to Rebuild Menu Trees Upon Completion of
"BLD",5842,1,133,0)
     Install? YES//',  Respond as fits your situation, see note above.
"BLD",5842,1,134,0)
 
"BLD",5842,1,135,0)
 8.  When prompted 'Want KIDS to INHIBIT LOGONs during the install?
"BLD",5842,1,136,0)
     YES//',  respond NO.
"BLD",5842,1,137,0)
 
"BLD",5842,1,138,0)
 9.  When prompted 'Want to DISABLE Scheduled Options, Menu Options, and
"BLD",5842,1,139,0)
     Protocols? YES//', choose 'NO'.
"BLD",5842,1,140,0)
 
"BLD",5842,1,141,0)
10.  At the DEVICE prompt, you can send your output to any printer or
"BLD",5842,1,142,0)
     HFS file, display it on the terminal screen, or queue it to run
"BLD",5842,1,143,0)
     at a scheduled time.
"BLD",5842,1,144,0)
 
"BLD",5842,1,145,0)
11.  After the install, restart the incoming filers.
"BLD",5842,1,146,0)
     On the 'Filer and Link Management Options' menu, select the
"BLD",5842,1,147,0)
     'Monitor, Start, Stop Filers' option.  At that menu level, choose
"BLD",5842,1,148,0)
     the action 'Start incoming filer' to start the default number of
"BLD",5842,1,149,0)
     incoming filers.
"BLD",5842,1,150,0)
 
"BLD",5842,1,151,0)
12.  Log on to each node running the HL7 listener and run the post init
"BLD",5842,1,152,0)
     Routine CLEANLOG^MHV1P1.
"BLD",5842,1,153,0)
 
"BLD",5842,1,154,0)
 
"BLD",5842,1,155,0)
  
"BLD",5842,1,156,0)
ROUTINE SUMMARY:
"BLD",5842,1,157,0)
================
"BLD",5842,1,158,0)
The following is a list of the routine(s) included in this patch.  The
"BLD",5842,1,159,0)
second line of each of these routine(s) will look like:
"BLD",5842,1,160,0)
 
"BLD",5842,1,161,0)
     <tab> ;;1.0;My HealtheVet;**1**;Aug 23, 2005
"BLD",5842,1,162,0)
 
"BLD",5842,1,163,0)
                            CHECK^XTSUMBLD results
"BLD",5842,1,164,0)
Routine name      Before Patch          After Patch         Patch List
"BLD",5842,1,165,0)
============      ============          ===========         ==========
"BLD",5842,1,166,0)
MHV1P1            N/A                   674288                1
"BLD",5842,1,167,0)
MHV7R1            7907937               7704915               1
"BLD",5842,1,168,0)
MHV7R2            8857636               8693511               1
"BLD",5842,1,169,0)
MHV7U             6547453               7067072               1
"BLD",5842,1,170,0)
MHVUL1            N/A                   5527922               1
"BLD",5842,1,171,0)
MHVUL2            N/A                   5279644               1
"BLD",5842,1,172,0)
MHVUL3            N/A                   10342175              1
"BLD",5842,4,0)
^9.64PA^^
"BLD",5842,"INID")
^n
"BLD",5842,"INIT")
POST^MHV1P1
"BLD",5842,"KRN",0)
^9.67PA^8989.52^19
"BLD",5842,"KRN",.4,0)
.4
"BLD",5842,"KRN",.401,0)
.401
"BLD",5842,"KRN",.402,0)
.402
"BLD",5842,"KRN",.403,0)
.403
"BLD",5842,"KRN",.5,0)
.5
"BLD",5842,"KRN",.84,0)
.84
"BLD",5842,"KRN",3.6,0)
3.6
"BLD",5842,"KRN",3.8,0)
3.8
"BLD",5842,"KRN",9.2,0)
9.2
"BLD",5842,"KRN",9.8,0)
9.8
"BLD",5842,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",5842,"KRN",9.8,"NM",1,0)
MHVUL1^^0^B38158397
"BLD",5842,"KRN",9.8,"NM",2,0)
MHVUL2^^0^B24353171
"BLD",5842,"KRN",9.8,"NM",3,0)
MHVUL3^^0^B77590189
"BLD",5842,"KRN",9.8,"NM",4,0)
MHV7R1^^0^B39557430
"BLD",5842,"KRN",9.8,"NM",5,0)
MHV7R2^^0^B43834803
"BLD",5842,"KRN",9.8,"NM",6,0)
MHV7U^^0^B80060951
"BLD",5842,"KRN",9.8,"NM",7,0)
MHV1P1^^0^B1114062
"BLD",5842,"KRN",9.8,"NM","B","MHV1P1",7)

"BLD",5842,"KRN",9.8,"NM","B","MHV7R1",4)

"BLD",5842,"KRN",9.8,"NM","B","MHV7R2",5)

"BLD",5842,"KRN",9.8,"NM","B","MHV7U",6)

"BLD",5842,"KRN",9.8,"NM","B","MHVUL1",1)

"BLD",5842,"KRN",9.8,"NM","B","MHVUL2",2)

"BLD",5842,"KRN",9.8,"NM","B","MHVUL3",3)

"BLD",5842,"KRN",19,0)
19
"BLD",5842,"KRN",19,"NM",0)
^9.68A^10^9
"BLD",5842,"KRN",19,"NM",1,0)
MHV CLIENT^^0
"BLD",5842,"KRN",19,"NM",3,0)
MHV LOG ON^^0
"BLD",5842,"KRN",19,"NM",4,0)
MHV LOG OFF^^0
"BLD",5842,"KRN",19,"NM",5,0)
MHV LOG INFO^^0
"BLD",5842,"KRN",19,"NM",6,0)
MHV LOG MENU^^0
"BLD",5842,"KRN",19,"NM",7,0)
MHV LOG VIEW^^0
"BLD",5842,"KRN",19,"NM",8,0)
MHV LOG PURGE^^0
"BLD",5842,"KRN",19,"NM",9,0)
MHV LOG CONFIG^^0
"BLD",5842,"KRN",19,"NM",10,0)
MHV LOG SIZE^^0
"BLD",5842,"KRN",19,"NM","B","MHV CLIENT",1)

"BLD",5842,"KRN",19,"NM","B","MHV LOG CONFIG",9)

"BLD",5842,"KRN",19,"NM","B","MHV LOG INFO",5)

"BLD",5842,"KRN",19,"NM","B","MHV LOG MENU",6)

"BLD",5842,"KRN",19,"NM","B","MHV LOG OFF",4)

"BLD",5842,"KRN",19,"NM","B","MHV LOG ON",3)

"BLD",5842,"KRN",19,"NM","B","MHV LOG PURGE",8)

"BLD",5842,"KRN",19,"NM","B","MHV LOG SIZE",10)

"BLD",5842,"KRN",19,"NM","B","MHV LOG VIEW",7)

"BLD",5842,"KRN",19.1,0)
19.1
"BLD",5842,"KRN",101,0)
101
"BLD",5842,"KRN",101,"NM",0)
^9.68A^4^4
"BLD",5842,"KRN",101,"NM",1,0)
MHV OMP-O09 Event Driver^^0
"BLD",5842,"KRN",101,"NM",2,0)
MHV QBP-Q13 Event Driver^^0
"BLD",5842,"KRN",101,"NM",3,0)
MHV OMP-O09 Subscriber^^0
"BLD",5842,"KRN",101,"NM",4,0)
MHV QBP-Q13 Subscriber^^0
"BLD",5842,"KRN",101,"NM","B","MHV OMP-O09 Event Driver",1)

"BLD",5842,"KRN",101,"NM","B","MHV OMP-O09 Subscriber",3)

"BLD",5842,"KRN",101,"NM","B","MHV QBP-Q13 Event Driver",2)

"BLD",5842,"KRN",101,"NM","B","MHV QBP-Q13 Subscriber",4)

"BLD",5842,"KRN",409.61,0)
409.61
"BLD",5842,"KRN",771,0)
771
"BLD",5842,"KRN",870,0)
870
"BLD",5842,"KRN",8989.51,0)
8989.51
"BLD",5842,"KRN",8989.52,0)
8989.52
"BLD",5842,"KRN",8994,0)
8994
"BLD",5842,"KRN",8994,"NM",0)
^9.68A^8^8
"BLD",5842,"KRN",8994,"NM",1,0)
MHV LOG ON^^0
"BLD",5842,"KRN",8994,"NM",2,0)
MHV LOG OFF^^0
"BLD",5842,"KRN",8994,"NM",3,0)
MHV LOG INFO^^0
"BLD",5842,"KRN",8994,"NM",4,0)
MHV LOG PURGE^^0
"BLD",5842,"KRN",8994,"NM",5,0)
MHV LOG SUMMARY^^0
"BLD",5842,"KRN",8994,"NM",6,0)
MHV LOG DETAIL^^0
"BLD",5842,"KRN",8994,"NM",7,0)
MHV LOG SIZE^^0
"BLD",5842,"KRN",8994,"NM",8,0)
MHV LOG CONFIG^^0
"BLD",5842,"KRN",8994,"NM","B","MHV LOG CONFIG",8)

"BLD",5842,"KRN",8994,"NM","B","MHV LOG DETAIL",6)

"BLD",5842,"KRN",8994,"NM","B","MHV LOG INFO",3)

"BLD",5842,"KRN",8994,"NM","B","MHV LOG OFF",2)

"BLD",5842,"KRN",8994,"NM","B","MHV LOG ON",1)

"BLD",5842,"KRN",8994,"NM","B","MHV LOG PURGE",4)

"BLD",5842,"KRN",8994,"NM","B","MHV LOG SIZE",7)

"BLD",5842,"KRN",8994,"NM","B","MHV LOG SUMMARY",5)

"BLD",5842,"KRN","B",.4,.4)

"BLD",5842,"KRN","B",.401,.401)

"BLD",5842,"KRN","B",.402,.402)

"BLD",5842,"KRN","B",.403,.403)

"BLD",5842,"KRN","B",.5,.5)

"BLD",5842,"KRN","B",.84,.84)

"BLD",5842,"KRN","B",3.6,3.6)

"BLD",5842,"KRN","B",3.8,3.8)

"BLD",5842,"KRN","B",9.2,9.2)

"BLD",5842,"KRN","B",9.8,9.8)

"BLD",5842,"KRN","B",19,19)

"BLD",5842,"KRN","B",19.1,19.1)

"BLD",5842,"KRN","B",101,101)

"BLD",5842,"KRN","B",409.61,409.61)

"BLD",5842,"KRN","B",771,771)

"BLD",5842,"KRN","B",870,870)

"BLD",5842,"KRN","B",8989.51,8989.51)

"BLD",5842,"KRN","B",8989.52,8989.52)

"BLD",5842,"KRN","B",8994,8994)

"BLD",5842,"QUES",0)
^9.62^^
"BLD",5842,"REQB",0)
^9.611^1^1
"BLD",5842,"REQB",1,0)
My HealtheVet 1.0^2
"BLD",5842,"REQB","B","My HealtheVet 1.0",1)

"INIT")
POST^MHV1P1
"KRN",19,16071,-1)
0^6
"KRN",19,16071,0)
MHV LOG MENU^MHV Application Log Menu^^M^^^^^^^^My HealtheVet^y
"KRN",19,16071,1,0)
^^1^1^3060301^
"KRN",19,16071,1,1,0)
Menu supporting access to the MHV application logging features.
"KRN",19,16071,10,0)
^19.01IP^9^9
"KRN",19,16071,10,1,0)
16072^ON^1
"KRN",19,16071,10,1,"^")
MHV LOG ON
"KRN",19,16071,10,2,0)
16073^OFF^2
"KRN",19,16071,10,2,"^")
MHV LOG OFF
"KRN",19,16071,10,4,0)
16075^INFO^3
"KRN",19,16071,10,4,"^")
MHV LOG INFO
"KRN",19,16071,10,6,0)
16077^VIEW^5
"KRN",19,16071,10,6,"^")
MHV LOG VIEW
"KRN",19,16071,10,7,0)
16074^^6
"KRN",19,16071,10,7,"^")
MHV LOG PURGE
"KRN",19,16071,10,8,0)
16078^SIZE^4
"KRN",19,16071,10,8,"^")
MHV LOG SIZE
"KRN",19,16071,10,9,0)
16079^^7
"KRN",19,16071,10,9,"^")
MHV LOG CONFIG
"KRN",19,16071,99)
60430,37411
"KRN",19,16071,99.1)
60430,37427
"KRN",19,16071,"U")
MHV APPLICATION LOG MENU
"KRN",19,16072,-1)
0^3
"KRN",19,16072,0)
MHV LOG ON^Turn On Logging^^R^^^^^^^^My HealtheVet^y
"KRN",19,16072,1,0)
^^1^1^3060301^
"KRN",19,16072,1,1,0)
Switch MHV application logging on.
"KRN",19,16072,25)
LOGONO^MHVUL3
"KRN",19,16072,"U")
TURN ON LOGGING
"KRN",19,16073,-1)
0^4
"KRN",19,16073,0)
MHV LOG OFF^Turn Off Logging^^R^^^^^^^^My HealtheVet^y
"KRN",19,16073,1,0)
^^1^1^3060301^
"KRN",19,16073,1,1,0)
Switch MHV application logging off.
"KRN",19,16073,25)
LOGOFFO^MHVUL3
"KRN",19,16073,"U")
TURN OFF LOGGING
"KRN",19,16074,-1)
0^8
"KRN",19,16074,0)
MHV LOG PURGE^Purge Log^^R^^^^^^^^My HealtheVet^y
"KRN",19,16074,1,0)
^^1^1^3060302^
"KRN",19,16074,1,1,0)
Purge MHV application log
"KRN",19,16074,25)
LOGPRGO^MHVUL3
"KRN",19,16074,"U")
PURGE LOG
"KRN",19,16075,-1)
0^5
"KRN",19,16075,0)
MHV LOG INFO^Display Log Information^^R^^^^^^^^My HealtheVet^y
"KRN",19,16075,1,0)
^^1^1^3060302^
"KRN",19,16075,1,1,0)
MHV application log information
"KRN",19,16075,25)
LOGINFOO^MHVUL3
"KRN",19,16075,"U")
DISPLAY LOG INFORMATION
"KRN",19,16076,-1)
0^1
"KRN",19,16076,0)
MHV CLIENT^MHV Client^^B^^^^^^^^My HealtheVet^y
"KRN",19,16076,1,0)
^^1^1^3060302^
"KRN",19,16076,1,1,0)
Context for MHV RPC based Client.
"KRN",19,16076,"RPC",0)
^19.05P^8^8
"KRN",19,16076,"RPC",1,0)
MHV LOG INFO
"KRN",19,16076,"RPC",2,0)
MHV LOG OFF
"KRN",19,16076,"RPC",3,0)
MHV LOG ON
"KRN",19,16076,"RPC",4,0)
MHV LOG PURGE
"KRN",19,16076,"RPC",5,0)
MHV LOG SIZE
"KRN",19,16076,"RPC",6,0)
MHV LOG CONFIG
"KRN",19,16076,"RPC",7,0)
MHV LOG SUMMARY
"KRN",19,16076,"RPC",8,0)
MHV LOG DETAIL
"KRN",19,16076,"U")
MHV CLIENT
"KRN",19,16077,-1)
0^7
"KRN",19,16077,0)
MHV LOG VIEW^View Log Entries^^R^^^^^^^^My HealtheVet^y
"KRN",19,16077,1,0)
^^1^1^3060306^
"KRN",19,16077,1,1,0)
View Entries in the MHV application log.
"KRN",19,16077,25)
LOGVIEWO^MHVUL3
"KRN",19,16077,"U")
VIEW LOG ENTRIES
"KRN",19,16078,-1)
0^10
"KRN",19,16078,0)
MHV LOG SIZE^Display Log Size^^R^^^^^^^^My HealtheVet^y
"KRN",19,16078,1,0)
^^1^1^3060307^
"KRN",19,16078,1,1,0)
Display size of MHV application log.
"KRN",19,16078,25)
LOGSIZEO^MHVUL3
"KRN",19,16078,"U")
DISPLAY LOG SIZE
"KRN",19,16079,-1)
0^9
"KRN",19,16079,0)
MHV LOG CONFIG^Configure Logging Parameters^^R^^^^^^^^My HealtheVet^y
"KRN",19,16079,1,0)
^^1^1^3060313^
"KRN",19,16079,1,1,0)
Set parameters for MHV application logging.
"KRN",19,16079,25)
LOGSETO^MHVUL3
"KRN",19,16079,"U")
CONFIGURE LOGGING PARAMETERS
"KRN",101,6741,-1)
0^2
"KRN",101,6741,0)
MHV QBP-Q13 Event Driver^^^E^^^^^^^^
"KRN",101,6741,770)
MHV EVAULT^^QBP^Q13^165^^^^^2.4^
"KRN",101,6741,775,0)
^101.0775PA^1^1
"KRN",101,6741,775,1,0)
6742
"KRN",101,6741,775,1,"^")
MHV QBP-Q13 Subscriber
"KRN",101,6742,-1)
0^4
"KRN",101,6742,0)
MHV QBP-Q13 Subscriber^^^S^^^^^^^^
"KRN",101,6742,770)
^MHV VISTA^^K13^^^^^^^RTB
"KRN",101,6742,771)
D QBPQ13^MHV7R1
"KRN",101,6742,773)
1^1^0
"KRN",101,6743,-1)
0^1
"KRN",101,6743,0)
MHV OMP-O09 Event Driver^^^E^^^^^^^^
"KRN",101,6743,770)
MHV EVAULT^^OMP^O09^154^^^^^2.4^
"KRN",101,6743,775,0)
^101.0775PA^1^1
"KRN",101,6743,775,1,0)
6744
"KRN",101,6743,775,1,"^")
MHV OMP-O09 Subscriber
"KRN",101,6744,-1)
0^3
"KRN",101,6744,0)
MHV OMP-O09 Subscriber^^^S^^^^^^^^
"KRN",101,6744,770)
^MHV VISTA^^O10^^^^^^^ORP
"KRN",101,6744,771)
D OMPO09^MHV7R2
"KRN",101,6744,773)
1^1^0
"KRN",8994,2459,-1)
0^1
"KRN",8994,2459,0)
MHV LOG ON^LOGON^MHVUL1^1^R^^^^1
"KRN",8994,2459,1,0)
^8994.01^1^1^3060318^^^^
"KRN",8994,2459,1,1,0)
Turns on MHV application logging.
"KRN",8994,2459,2,0)
^8994.02A^1^1
"KRN",8994,2459,2,1,0)
DTM^1^15^0^1
"KRN",8994,2459,2,1,1,0)
^8994.021^2^2^3060318^^^^
"KRN",8994,2459,2,1,1,1,0)
Purge Date/Time.
"KRN",8994,2459,2,1,1,2,0)
Defaults to Today + 30.
"KRN",8994,2459,2,"B","DTM",1)

"KRN",8994,2459,2,"PARAMSEQ",1,1)

"KRN",8994,2459,3,0)
^^1^1^3060318^
"KRN",8994,2459,3,1,0)
Success flag ^ Purge Date/Time ^ Created Date/Time
"KRN",8994,2460,-1)
0^2
"KRN",8994,2460,0)
MHV LOG OFF^LOGOFF^MHVUL1^1^R^^^^1
"KRN",8994,2460,1,0)
^8994.01^1^1^3060318^^
"KRN",8994,2460,1,1,0)
Turns off MHV application logging.
"KRN",8994,2460,3,0)
^8994.03^1^1^3060318^^
"KRN",8994,2460,3,1,0)
Success Flag ^ Purge Date/Time
"KRN",8994,2461,-1)
0^4
"KRN",8994,2461,0)
MHV LOG PURGE^LOGPRG^MHVUL1^1^R^^^^1
"KRN",8994,2461,1,0)
^8994.01^1^1^3060318^^
"KRN",8994,2461,1,1,0)
Purge MHV application log.
"KRN",8994,2461,2,0)
^8994.02A^1^1
"KRN",8994,2461,2,1,0)
DTM^1^15^0^1
"KRN",8994,2461,2,1,1,0)
^8994.021^2^2^3060318^^
"KRN",8994,2461,2,1,1,1,0)
Purge Date/Time.
"KRN",8994,2461,2,1,1,2,0)
Default is Today - 7.
"KRN",8994,2461,2,"B","DTM",1)

"KRN",8994,2461,2,"PARAMSEQ",1,1)

"KRN",8994,2461,3,0)
^8994.03^1^1^3060318^^
"KRN",8994,2461,3,1,0)
Success Flag ^ Purge Date/Time
"KRN",8994,2462,-1)
0^3
"KRN",8994,2462,0)
MHV LOG INFO^LOGINFO^MHVUL1^2^R^^^^1
"KRN",8994,2462,1,0)
^8994.01^1^1^3060318^^
"KRN",8994,2462,1,1,0)
Returns information on MHV application logging settings.
"KRN",8994,2462,3,0)
^^11^11^3060318^
"KRN",8994,2462,3,1,0)
RESULT("HEAD") - Zero node of log XTMP
"KRN",8994,2462,3,2,0)
RESULT("PURGE") - Purge Date/Time
"KRN",8994,2462,3,3,0)
RESULT("CREATED") - Created Date/Time
"KRN",8994,2462,3,4,0)
RESULT("TITLE") - Title of Log
"KRN",8994,2462,3,5,0)
RESULT("STATE") - Logging State ON/OFF
"KRN",8994,2462,3,6,0)
RESULT("LEVEL") - Logging Level
"KRN",8994,2462,3,7,0)
RESULT("NAMES") - List of names to log, caret delimited
"KRN",8994,2462,3,8,0)
RESULT("OLDEST") - Date/Time of oldest entry - Fileman internal format
"KRN",8994,2462,3,9,0)
RESULT("NEWEST") - Date/Time of newest entry - Fileman internal format
"KRN",8994,2462,3,10,0)
RESULT("AUTOPURGE") - Auto Purge ON/OFF
"KRN",8994,2462,3,11,0)
RESULT("DAYS") - Number of days to keep
"KRN",8994,2463,-1)
0^7
"KRN",8994,2463,0)
MHV LOG SIZE^LOGSIZE^MHVUL1^1^R^^^^1
"KRN",8994,2463,1,0)
^8994.01^1^1^3060318^^
"KRN",8994,2463,1,1,0)
Returns information on size of MHV application log.
"KRN",8994,2463,3,0)
^^3^3^3060318^
"KRN",8994,2463,3,1,0)
RESULT("ENTRY COUNT") - number of entries in the log
"KRN",8994,2463,3,2,0)
RESULT("NODE COUNT") - number of nodes in the log
"KRN",8994,2463,3,3,0)
RESULT("BYTE COUNT") - approx. number of bytes consumed by log
"KRN",8994,2463,3,4,0)
RESULT("BYTE COUNT") - approx. number of bytes consumed by log
"KRN",8994,2464,-1)
0^5
"KRN",8994,2464,0)
MHV LOG SUMMARY^LOGSUM^MHVUL2^4^R^^^^1
"KRN",8994,2464,1,0)
^8994.01^1^1^3060318^^^^
"KRN",8994,2464,1,1,0)
Retrieve MHV application log summary.
"KRN",8994,2464,3,0)
^^3^3^3060318^
"KRN",8994,2464,3,1,0)
RESULT - Global Root of Result Array
"KRN",8994,2464,3,2,0)
         @RESULT - success flag ^ message or entry count ^ name
"KRN",8994,2464,3,3,0)
         @RESULT@(n)=nth entry of log
"KRN",8994,2465,-1)
0^6
"KRN",8994,2465,0)
MHV LOG DETAIL^LOGDET^MHVUL2^4^R^^^^1
"KRN",8994,2465,1,0)
^8994.01^1^1^3060318^^^
"KRN",8994,2465,1,1,0)
Retrieve an MHV application log entry.
"KRN",8994,2465,2,0)
^8994.02A^2^2
"KRN",8994,2465,2,1,0)
DTM^1^15^1^1
"KRN",8994,2465,2,1,1,0)
^^1^1^3060306^
"KRN",8994,2465,2,1,1,1,0)
Negative Date/Time of entry in Fileman format.
"KRN",8994,2465,2,2,0)
JOB^1^15^1^2
"KRN",8994,2465,2,2,1,0)
^8994.021^1^1^3060318^^^
"KRN",8994,2465,2,2,1,1,0)
Job number of log entry.
"KRN",8994,2465,2,"B","DTM",1)

"KRN",8994,2465,2,"B","JOB",2)

"KRN",8994,2465,2,"PARAMSEQ",1,1)

"KRN",8994,2465,2,"PARAMSEQ",2,2)

"KRN",8994,2465,3,0)
^^4^4^3060318^
"KRN",8994,2465,3,1,0)
RESULT - Global Root of Result Array
"KRN",8994,2465,3,2,0)
         @RESULT - success flag ^ message or node count
"KRN",8994,2465,3,3,0)
         @RESULT@(0)= log entry header
"KRN",8994,2465,3,4,0)
         @RESULT@(n)=nth node of entry
"KRN",8994,2466,-1)
0^8
"KRN",8994,2466,0)
MHV LOG CONFIG^LOGSET^MHVUL1^1^R^^^^1
"KRN",8994,2466,1,0)
^8994.01^1^1^3060318^^^^
"KRN",8994,2466,1,1,0)
Configure MHV application logging parameters.
"KRN",8994,2466,2,0)
^8994.02A^1^1
"KRN",8994,2466,2,1,0)
UPDATE^2^32000^1^1
"KRN",8994,2466,2,1,1,0)
^^14^14^3060318^
"KRN",8994,2466,2,1,1,1,0)
Configuration parameters to update
"KRN",8994,2466,2,1,1,2,0)
 
"KRN",8994,2466,2,1,1,3,0)
    UPDATE("STATE") - Flag 0/1
"KRN",8994,2466,2,1,1,4,0)
                      On or Off
"KRN",8994,2466,2,1,1,5,0)
    UPDATE("PURGE") - Purge Date/Time
"KRN",8994,2466,2,1,1,6,0)
                      Fileman date/time
"KRN",8994,2466,2,1,1,7,0)
                      Default 30 days from Today
"KRN",8994,2466,2,1,1,8,0)
    UPDATE("LEVEL") - Logging level
"KRN",8994,2466,2,1,1,9,0)
                      Error, Trace, Debug, Name
"KRN",8994,2466,2,1,1,10,0)
                      Default - Trace
"KRN",8994,2466,2,1,1,11,0)
    UPDATE("NAMES") - Caret delimited list of log entry names
"KRN",8994,2466,2,1,1,12,0)
UPDATE("AUTOPURGE") - Flag 0/1
"KRN",8994,2466,2,1,1,13,0)
                      Default - 0 Off
"KRN",8994,2466,2,1,1,14,0)
     UPDATE("DAYS") - Number of Days to keep
"KRN",8994,2466,2,"B","UPDATE",1)

"KRN",8994,2466,2,"PARAMSEQ",1,1)

"KRN",8994,2466,3,0)
^8994.03^2^2^3060318^^^
"KRN",8994,2466,3,1,0)
RESULT - success flag ^ state ^ purge date/time ^ created date/time ^ 
"KRN",8994,2466,3,2,0)
level ^ names ^ autopurge ^ days
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",593,-1)
1^1
"PKG",593,0)
My HealtheVet^MHV^Support for My HealtheVet web site.
"PKG",593,20,0)
^9.402P^^
"PKG",593,22,0)
^9.49I^1^1
"PKG",593,22,1,0)
1.0^3050823^3060315^29387
"PKG",593,22,1,"PAH",1,0)
1^3060718^29387
"PKG",593,22,1,"PAH",1,1,0)
^^172^172^3060718
"PKG",593,22,1,"PAH",1,1,1,0)
DESCRIPTION:
"PKG",593,22,1,"PAH",1,1,2,0)
============
"PKG",593,22,1,"PAH",1,1,3,0)
 
"PKG",593,22,1,"PAH",1,1,4,0)
The MHV 1.0 release for MHV Rx Refill went to the field with logging to a
"PKG",593,22,1,"PAH",1,1,5,0)
TMP global left on.  The non-standard use of TMP by the MHV log causes
"PKG",593,22,1,"PAH",1,1,6,0)
the TMP entries to not be cleaned up automatically.
"PKG",593,22,1,"PAH",1,1,7,0)
This patch will turn off logging in the HL7 receiver routines allowing it
"PKG",593,22,1,"PAH",1,1,8,0)
to be switched on and off externally as designed.  An XTMP global will be
"PKG",593,22,1,"PAH",1,1,9,0)
used instead of TMP.  Options will be added to control logging and to
"PKG",593,22,1,"PAH",1,1,10,0)
facilitate automatically purging the log.  A post-init will run to clean
"PKG",593,22,1,"PAH",1,1,11,0)
up any existing TMP("MHV7LOG") entries.
"PKG",593,22,1,"PAH",1,1,12,0)
 
"PKG",593,22,1,"PAH",1,1,13,0)
A new menu, MHV LOG MENU, has been added.  The log provides information 
"PKG",593,22,1,"PAH",1,1,14,0)
of use to MHV developers, and should only be used by IRM staff in the 
"PKG",593,22,1,"PAH",1,1,15,0)
event troubleshooting an MHV interface becomes necessary.  The MHV user 
"PKG",593,22,1,"PAH",1,1,16,0)
manual provides information on how to use these options.
"PKG",593,22,1,"PAH",1,1,17,0)
Included options are:
"PKG",593,22,1,"PAH",1,1,18,0)
        MHV LOG CONFIG     Configure Logging Parameters
"PKG",593,22,1,"PAH",1,1,19,0)
        MHV LOG INFO       Display Log Information
"PKG",593,22,1,"PAH",1,1,20,0)
        MHV LOG OFF        Turn Off Logging
"PKG",593,22,1,"PAH",1,1,21,0)
        MHV LOG ON         Turn On Logging
"PKG",593,22,1,"PAH",1,1,22,0)
        MHV LOG PURGE      Purge Log
"PKG",593,22,1,"PAH",1,1,23,0)
        MHV LOG SIZE       Display Log Size
"PKG",593,22,1,"PAH",1,1,24,0)
        MHV LOG VIEW       View Log Entries
"PKG",593,22,1,"PAH",1,1,25,0)
 
"PKG",593,22,1,"PAH",1,1,26,0)
A new option has been added, MHV CLIENT, as a broker context for a future 
"PKG",593,22,1,"PAH",1,1,27,0)
MHV GUI client.  The following remote procedures are also included:
"PKG",593,22,1,"PAH",1,1,28,0)
        MHV LOG INFO
"PKG",593,22,1,"PAH",1,1,29,0)
        MHV LOG OFF
"PKG",593,22,1,"PAH",1,1,30,0)
        MHV LOG ON
"PKG",593,22,1,"PAH",1,1,31,0)
        MHV LOG PURGE
"PKG",593,22,1,"PAH",1,1,32,0)
        MHV LOG SIZE
"PKG",593,22,1,"PAH",1,1,33,0)
        MHV LOG CONFIG
"PKG",593,22,1,"PAH",1,1,34,0)
        MHV LOG SUMMARY
"PKG",593,22,1,"PAH",1,1,35,0)
        MHV LOG DETAIL
"PKG",593,22,1,"PAH",1,1,36,0)
 
"PKG",593,22,1,"PAH",1,1,37,0)
The MHV 1.0 release went to the field with two HL7 protocols having the
"PKG",593,22,1,"PAH",1,1,38,0)
"debug" flag set.  These event driver protocols will be released with the 
"PKG",593,22,1,"PAH",1,1,39,0)
flag turned off.  The following protocols are being shipped:
"PKG",593,22,1,"PAH",1,1,40,0)
        MHV OMP-O09 Event Driver
"PKG",593,22,1,"PAH",1,1,41,0)
        MHV OMP-O09 Subscriber
"PKG",593,22,1,"PAH",1,1,42,0)
        MHV QBP-Q13 Event Driver
"PKG",593,22,1,"PAH",1,1,43,0)
        MHV QBP-Q13 Subscriber
"PKG",593,22,1,"PAH",1,1,44,0)
 
"PKG",593,22,1,"PAH",1,1,45,0)
 
"PKG",593,22,1,"PAH",1,1,46,0)
Associated Remedy Ticket
"PKG",593,22,1,"PAH",1,1,47,0)
====================
"PKG",593,22,1,"PAH",1,1,48,0)
HD 131029
"PKG",593,22,1,"PAH",1,1,49,0)
 
"PKG",593,22,1,"PAH",1,1,50,0)
Test Sites
"PKG",593,22,1,"PAH",1,1,51,0)
==========
"PKG",593,22,1,"PAH",1,1,52,0)
Tampa VAMC
"PKG",593,22,1,"PAH",1,1,53,0)
Bay Pines VAMC
"PKG",593,22,1,"PAH",1,1,54,0)
Baltimore VAMC
"PKG",593,22,1,"PAH",1,1,55,0)
VISN 2 
"PKG",593,22,1,"PAH",1,1,56,0)
 
"PKG",593,22,1,"PAH",1,1,57,0)
 
"PKG",593,22,1,"PAH",1,1,58,0)
INSTALLATION INSTRUCTIONS
"PKG",593,22,1,"PAH",1,1,59,0)
==========================
"PKG",593,22,1,"PAH",1,1,60,0)
The patch is distributed in KIDS format in a PackMan message.
"PKG",593,22,1,"PAH",1,1,61,0)
 
"PKG",593,22,1,"PAH",1,1,62,0)
This patch requires MHV 1.0
"PKG",593,22,1,"PAH",1,1,63,0)
 
"PKG",593,22,1,"PAH",1,1,64,0)
 
"PKG",593,22,1,"PAH",1,1,65,0)
                       **WARNING**
"PKG",593,22,1,"PAH",1,1,66,0)
 
"PKG",593,22,1,"PAH",1,1,67,0)
Inbound HL7 messages for MHV should not be processed during installation
"PKG",593,22,1,"PAH",1,1,68,0)
of this patch. All incoming filers should be stopped before installation.
"PKG",593,22,1,"PAH",1,1,69,0)
  
"PKG",593,22,1,"PAH",1,1,70,0)
Before you install this patch in production, please identify all the
"PKG",593,22,1,"PAH",1,1,71,0)
production node(s) that have the TMP("MHV7LOG") global.  This should be
"PKG",593,22,1,"PAH",1,1,72,0)
the same node(s) running the HL7 Listener.  You will need to log on to
"PKG",593,22,1,"PAH",1,1,73,0)
each of these node(s) and run the post-init routine CLEANLOG^MHV1P1 will
"PKG",593,22,1,"PAH",1,1,74,0)
delete the global entries since TMP is not translated.  The
"PKG",593,22,1,"PAH",1,1,75,0)
TMP("MHV7LOG") global should have many entries.
"PKG",593,22,1,"PAH",1,1,76,0)
 
"PKG",593,22,1,"PAH",1,1,77,0)
                           ****
"PKG",593,22,1,"PAH",1,1,78,0)
 
"PKG",593,22,1,"PAH",1,1,79,0)
 
"PKG",593,22,1,"PAH",1,1,80,0)
                       **Notice**
"PKG",593,22,1,"PAH",1,1,81,0)
This patch includes new options.
"PKG",593,22,1,"PAH",1,1,82,0)
When an option is included in the patch build, the question REBUILD MENUS
"PKG",593,22,1,"PAH",1,1,83,0)
is asked as a PRE-INSTALL question. If you choose to have KIDs rebuild
"PKG",593,22,1,"PAH",1,1,84,0)
the menus it will happen at the end of the build installation and may
"PKG",593,22,1,"PAH",1,1,85,0)
take several hours.
"PKG",593,22,1,"PAH",1,1,86,0)
 
"PKG",593,22,1,"PAH",1,1,87,0)
Note: Most sites have a nightly batch job that rebuilds the menus so if
"PKG",593,22,1,"PAH",1,1,88,0)
you queued the installations ensure that it will complete prior to the
"PKG",593,22,1,"PAH",1,1,89,0)
batch job.  Or, if you are installing several builds, wait until the
"PKG",593,22,1,"PAH",1,1,90,0)
last one to use the KIDs rebuild functionality.
"PKG",593,22,1,"PAH",1,1,91,0)
 
"PKG",593,22,1,"PAH",1,1,92,0)
                          ****
"PKG",593,22,1,"PAH",1,1,93,0)
 
"PKG",593,22,1,"PAH",1,1,94,0)
The install time for this patch is less than 5 minutes. This patch can be
"PKG",593,22,1,"PAH",1,1,95,0)
installed with users on the system.
"PKG",593,22,1,"PAH",1,1,96,0)
 
"PKG",593,22,1,"PAH",1,1,97,0)
 
"PKG",593,22,1,"PAH",1,1,98,0)
 
"PKG",593,22,1,"PAH",1,1,99,0)
 1.  These routines should not be mapped.
"PKG",593,22,1,"PAH",1,1,100,0)
 
"PKG",593,22,1,"PAH",1,1,101,0)
 2.  Unload the distribution
"PKG",593,22,1,"PAH",1,1,102,0)
     Use the INSTALL/CHECK MESSAGE option on the PackMan menu to unload
"PKG",593,22,1,"PAH",1,1,103,0)
     the KIDS distribution included with this message.
"PKG",593,22,1,"PAH",1,1,104,0)
 
"PKG",593,22,1,"PAH",1,1,105,0)
 3.  Stop all incoming filers.
"PKG",593,22,1,"PAH",1,1,106,0)
     On the 'Filer and Link Management Options' menu, select the
"PKG",593,22,1,"PAH",1,1,107,0)
     'Monitor, Start, Stop Filers' option.  At that menu level, choose
"PKG",593,22,1,"PAH",1,1,108,0)
     the action 'Stop incoming filer' to stop each incoming filer.
"PKG",593,22,1,"PAH",1,1,109,0)
 
"PKG",593,22,1,"PAH",1,1,110,0)
 4.  Install the transport global.
"PKG",593,22,1,"PAH",1,1,111,0)
     From the Kernel Installation and Distribution System Menu,
"PKG",593,22,1,"PAH",1,1,112,0)
     select the Installation menu.
"PKG",593,22,1,"PAH",1,1,113,0)
 
"PKG",593,22,1,"PAH",1,1,114,0)
 5.  From this menu, you may elect to use the following options
"PKG",593,22,1,"PAH",1,1,115,0)
     (when prompted for INSTALL NAME, enter MHV*1.0*1):
"PKG",593,22,1,"PAH",1,1,116,0)
     a.  Backup a Transport Global - this option will create a backup
"PKG",593,22,1,"PAH",1,1,117,0)
         message of any routines exported with the patch.  It will NOT
"PKG",593,22,1,"PAH",1,1,118,0)
         backup any other changes such as DDs or templates.
"PKG",593,22,1,"PAH",1,1,119,0)
     b.  Compare Transport Global to Current System  - this option will
"PKG",593,22,1,"PAH",1,1,120,0)
         allow you to view all changes that will be made when the patch
"PKG",593,22,1,"PAH",1,1,121,0)
         is installed.  It compares all components of the patch
"PKG",593,22,1,"PAH",1,1,122,0)
         (routines, DDs, templates, etc.).
"PKG",593,22,1,"PAH",1,1,123,0)
     c.  Verify Checksums in Transport Global - this option will
"PKG",593,22,1,"PAH",1,1,124,0)
         allow you to ensure the integrity of the routines that are in
"PKG",593,22,1,"PAH",1,1,125,0)
         the transport global.
"PKG",593,22,1,"PAH",1,1,126,0)
     d.  Print Transport Global - this option will allow you to view the
"PKG",593,22,1,"PAH",1,1,127,0)
         components of the KIDS build.
"PKG",593,22,1,"PAH",1,1,128,0)
 
"PKG",593,22,1,"PAH",1,1,129,0)
 6.  Use the 'Install Package(s)' option under the 'Installation' menu
"PKG",593,22,1,"PAH",1,1,130,0)
     and select the package 'MHV*1.0*1'.
"PKG",593,22,1,"PAH",1,1,131,0)
 
"PKG",593,22,1,"PAH",1,1,132,0)
 7.  When prompted 'Want KIDS to Rebuild Menu Trees Upon Completion of
"PKG",593,22,1,"PAH",1,1,133,0)
     Install? YES//',  Respond as fits your situation, see note above.
"PKG",593,22,1,"PAH",1,1,134,0)
 
"PKG",593,22,1,"PAH",1,1,135,0)
 8.  When prompted 'Want KIDS to INHIBIT LOGONs during the install?
"PKG",593,22,1,"PAH",1,1,136,0)
     YES//',  respond NO.
"PKG",593,22,1,"PAH",1,1,137,0)
 
"PKG",593,22,1,"PAH",1,1,138,0)
 9.  When prompted 'Want to DISABLE Scheduled Options, Menu Options, and
"PKG",593,22,1,"PAH",1,1,139,0)
     Protocols? YES//', choose 'NO'.
"PKG",593,22,1,"PAH",1,1,140,0)
 
"PKG",593,22,1,"PAH",1,1,141,0)
10.  At the DEVICE prompt, you can send your output to any printer or
"PKG",593,22,1,"PAH",1,1,142,0)
     HFS file, display it on the terminal screen, or queue it to run
"PKG",593,22,1,"PAH",1,1,143,0)
     at a scheduled time.
"PKG",593,22,1,"PAH",1,1,144,0)
 
"PKG",593,22,1,"PAH",1,1,145,0)
11.  After the install, restart the incoming filers.
"PKG",593,22,1,"PAH",1,1,146,0)
     On the 'Filer and Link Management Options' menu, select the
"PKG",593,22,1,"PAH",1,1,147,0)
     'Monitor, Start, Stop Filers' option.  At that menu level, choose
"PKG",593,22,1,"PAH",1,1,148,0)
     the action 'Start incoming filer' to start the default number of
"PKG",593,22,1,"PAH",1,1,149,0)
     incoming filers.
"PKG",593,22,1,"PAH",1,1,150,0)
 
"PKG",593,22,1,"PAH",1,1,151,0)
12.  Log on to each node running the HL7 listener and run the post init
"PKG",593,22,1,"PAH",1,1,152,0)
     Routine CLEANLOG^MHV1P1.
"PKG",593,22,1,"PAH",1,1,153,0)
 
"PKG",593,22,1,"PAH",1,1,154,0)
 
"PKG",593,22,1,"PAH",1,1,155,0)
  
"PKG",593,22,1,"PAH",1,1,156,0)
ROUTINE SUMMARY:
"PKG",593,22,1,"PAH",1,1,157,0)
================
"PKG",593,22,1,"PAH",1,1,158,0)
The following is a list of the routine(s) included in this patch.  The
"PKG",593,22,1,"PAH",1,1,159,0)
second line of each of these routine(s) will look like:
"PKG",593,22,1,"PAH",1,1,160,0)
 
"PKG",593,22,1,"PAH",1,1,161,0)
     <tab> ;;1.0;My HealtheVet;**1**;Aug 23, 2005
"PKG",593,22,1,"PAH",1,1,162,0)
 
"PKG",593,22,1,"PAH",1,1,163,0)
                            CHECK^XTSUMBLD results
"PKG",593,22,1,"PAH",1,1,164,0)
Routine name      Before Patch          After Patch         Patch List
"PKG",593,22,1,"PAH",1,1,165,0)
============      ============          ===========         ==========
"PKG",593,22,1,"PAH",1,1,166,0)
MHV1P1            N/A                   674288                1
"PKG",593,22,1,"PAH",1,1,167,0)
MHV7R1            7907937               7704915               1
"PKG",593,22,1,"PAH",1,1,168,0)
MHV7R2            8857636               8693511               1
"PKG",593,22,1,"PAH",1,1,169,0)
MHV7U             6547453               7067072               1
"PKG",593,22,1,"PAH",1,1,170,0)
MHVUL1            N/A                   5527922               1
"PKG",593,22,1,"PAH",1,1,171,0)
MHVUL2            N/A                   5279644               1
"PKG",593,22,1,"PAH",1,1,172,0)
MHVUL3            N/A                   10342175              1
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","MHV1P1")
0^7^B1114062^n/a
"RTN","MHV1P1",1,0)
MHV1P1 ;WAS/GPM - My HealtheVet Install Utility Routine ; [3/28/06 4:55pm]
"RTN","MHV1P1",2,0)
 ;;1.0;My HealtheVet;**1**;Aug 23, 2005
"RTN","MHV1P1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHV1P1",4,0)
 ;
"RTN","MHV1P1",5,0)
 ;  Integration Agreements:
"RTN","MHV1P1",6,0)
 ;        10141 : BMES^XPDUTL
"RTN","MHV1P1",7,0)
 ;
"RTN","MHV1P1",8,0)
ENV ;
"RTN","MHV1P1",9,0)
 Q
"RTN","MHV1P1",10,0)
 ;
"RTN","MHV1P1",11,0)
POST ;
"RTN","MHV1P1",12,0)
 D CLEANLOG
"RTN","MHV1P1",13,0)
 D NOTIFY
"RTN","MHV1P1",14,0)
 Q
"RTN","MHV1P1",15,0)
 ;
"RTN","MHV1P1",16,0)
CLEANLOG ; Cleanup log entries
"RTN","MHV1P1",17,0)
 D BMES^XPDUTL("  *** Cleaning up MHV application log. ***")
"RTN","MHV1P1",18,0)
 K ^TMP("MHV7LOG")
"RTN","MHV1P1",19,0)
 Q
"RTN","MHV1P1",20,0)
 ;
"RTN","MHV1P1",21,0)
NOTIFY ; Send notification message
"RTN","MHV1P1",22,0)
 N ADM
"RTN","MHV1P1",23,0)
 D SETADM^MHVU1(.ADM)
"RTN","MHV1P1",24,0)
 I ADM("SYSTEM TYPE")'="P" Q
"RTN","MHV1P1",25,0)
 D NOTIFY^MHVU1(.ADM)
"RTN","MHV1P1",26,0)
 D BMES^XPDUTL("  *** Installation message sent to My HealtheVet Server ***")
"RTN","MHV1P1",27,0)
 Q
"RTN","MHV1P1",28,0)
 ;
"RTN","MHV7R1")
0^4^B39557430^B39959689
"RTN","MHV7R1",1,0)
MHV7R1 ;WAS/GPM - HL7 RECEIVER FOR QBP^Q13 ; [5/24/06 10:19am]
"RTN","MHV7R1",2,0)
 ;;1.0;My HealtheVet;**1**;Aug 23, 2005
"RTN","MHV7R1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHV7R1",4,0)
 ;
"RTN","MHV7R1",5,0)
QBPQ13 ;Process QBP^Q13 messages from the MHV QBP-Q13 Subscriber protocol
"RTN","MHV7R1",6,0)
 ;
"RTN","MHV7R1",7,0)
 ; This routine and subroutines assume that all VistA HL7 environment
"RTN","MHV7R1",8,0)
 ; variables are properly initialized and will produce a fatal error
"RTN","MHV7R1",9,0)
 ; if they are missing.
"RTN","MHV7R1",10,0)
 ;
"RTN","MHV7R1",11,0)
 ;  The message will be checked to see if it is a valid QBP^Q13 query.
"RTN","MHV7R1",12,0)
 ; If not a negative acknowledgement will be sent.  If the query is an
"RTN","MHV7R1",13,0)
 ; immediate mode or synchronous query, the realtime request manager
"RTN","MHV7R1",14,0)
 ; is called to handle the query.
"RTN","MHV7R1",15,0)
 ; In the future deferred mode queries may be filed in a database for 
"RTN","MHV7R1",16,0)
 ; later processing, or transmission.
"RTN","MHV7R1",17,0)
 ;
"RTN","MHV7R1",18,0)
 ;  Integration Agreements:
"RTN","MHV7R1",19,0)
 ;        10103 : $$HL7TFM^XLFDT
"RTN","MHV7R1",20,0)
 ;
"RTN","MHV7R1",21,0)
 ;  Input:
"RTN","MHV7R1",22,0)
 ;          HL7 environment variables
"RTN","MHV7R1",23,0)
 ;
"RTN","MHV7R1",24,0)
 ; Output:
"RTN","MHV7R1",25,0)
 ;          Processed query or negative acknowledgement
"RTN","MHV7R1",26,0)
 ;
"RTN","MHV7R1",27,0)
 N MSGROOT,QRY,XMT,ERR
"RTN","MHV7R1",28,0)
 S (QRY,XMT,ERR)=""
"RTN","MHV7R1",29,0)
 ;S MSGROOT="^TMP(""MHV7"",$J)"
"RTN","MHV7R1",30,0)
 S MSGROOT="MHV7MSG"
"RTN","MHV7R1",31,0)
 N MHV7MSG
"RTN","MHV7R1",32,0)
 D LOG^MHV7U("QBP-Q13 RECEIVER","","S",1)
"RTN","MHV7R1",33,0)
 ;
"RTN","MHV7R1",34,0)
 D LOADMSG^MHV7U(MSGROOT)
"RTN","MHV7R1",35,0)
 D LOG^MHV7U("LOAD",MSGROOT,"I",0)
"RTN","MHV7R1",36,0)
 ;
"RTN","MHV7R1",37,0)
 D PARSEMSG^MHV7U(MSGROOT,.HL)
"RTN","MHV7R1",38,0)
 ;D LOG^MHV7U("PARSE",MSGROOT,"I",0)
"RTN","MHV7R1",39,0)
 ;
"RTN","MHV7R1",40,0)
 I '$$VALIDQ13(MSGROOT,.QRY,.XMT,.ERR) D  Q
"RTN","MHV7R1",41,0)
 . D LOG^MHV7U("MSG CHECK","INVALID^"_ERR,"S",0)
"RTN","MHV7R1",42,0)
 . D XMIT^MHV7T(.QRY,.XMT,ERR,"",.HL)
"RTN","MHV7R1",43,0)
 D LOG^MHV7U("MSG CHECK","VALID","S",0)
"RTN","MHV7R1",44,0)
 ;
"RTN","MHV7R1",45,0)
 ; Immediate Mode
"RTN","MHV7R1",46,0)
 ; Only real time synchronous calls are supported at this time.
"RTN","MHV7R1",47,0)
 I QRY("PRI")="I" D REALTIME^MHVRQI(.QRY,.XMT,.HL)
"RTN","MHV7R1",48,0)
 K ^TMP("MHV7LOG",$J)
"RTN","MHV7R1",49,0)
 ;
"RTN","MHV7R1",50,0)
 Q
"RTN","MHV7R1",51,0)
 ;
"RTN","MHV7R1",52,0)
VALIDQ13(MSG,QRY,XMT,ERR) ;Parse and Validate message
"RTN","MHV7R1",53,0)
 ;
"RTN","MHV7R1",54,0)
 ;  QBP^Q13 messages must contain QPD and RCP segments
"RTN","MHV7R1",55,0)
 ;          RDF segments are optional but not processed
"RTN","MHV7R1",56,0)
 ;  The following sequences are required
"RTN","MHV7R1",57,0)
 ;     PID(3) - Patient ID
"RTN","MHV7R1",58,0)
 ;     QPD(3) - Request ID
"RTN","MHV7R1",59,0)
 ;     QPD(4) - Subject Area
"RTN","MHV7R1",60,0)
 ;     RCP(1) - priority
"RTN","MHV7R1",61,0)
 ;  The following sequences are optional
"RTN","MHV7R1",62,0)
 ;     QPD(5) - From Date
"RTN","MHV7R1",63,0)
 ;     QPD(6) - To Date
"RTN","MHV7R1",64,0)
 ;     QPD(7) - ICN
"RTN","MHV7R1",65,0)
 ;     QPD(8) - DFN
"RTN","MHV7R1",66,0)
 ;
"RTN","MHV7R1",67,0)
 ;  ERR = segment^sequence^field^code^ACK type^error text
"RTN","MHV7R1",68,0)
 ;
"RTN","MHV7R1",69,0)
 N MSH,PID,RDF,RXE,QPD,RCP,REQID,ICN,REQTYPE,FROMDT,TODT,DFN,PRI,REQTIEN,REQT0,QTAG,QNAME,SEGTYPE,CNT,SSN,FAMILY,GIVEN,MIDDLE,SUFFIX,SEGTYPE,CNT,OCNT,RXNUM,I,ID,TYPE
"RTN","MHV7R1",70,0)
 S ERR=""
"RTN","MHV7R1",71,0)
 K QRY,XMT
"RTN","MHV7R1",72,0)
 ;
"RTN","MHV7R1",73,0)
 ;Set response control defaults
"RTN","MHV7R1",74,0)
 S XMT("PROTOCOL")="MHV RTB-K13 Event Driver"   ;Response protocol
"RTN","MHV7R1",75,0)
 S XMT("BUILDER")="RTBK13^MHV7B1"               ;Response builder
"RTN","MHV7R1",76,0)
 S XMT("MODE")="D"                               ;Response mode
"RTN","MHV7R1",77,0)
 I $G(HL("APAT"))="" S XMT("MODE")="I"           ;Immediate mode
"RTN","MHV7R1",78,0)
 S XMT("HLMTIENS")=HLMTIENS                      ;Message IEN
"RTN","MHV7R1",79,0)
 S QRY("MID")=""                                 ;Message ID
"RTN","MHV7R1",80,0)
 S QRY("QPD")=""                                 ;QPD segment
"RTN","MHV7R1",81,0)
 ;
"RTN","MHV7R1",82,0)
 ;
"RTN","MHV7R1",83,0)
 ;Validate message is a well formed QBP^Q13 message
"RTN","MHV7R1",84,0)
 ;
"RTN","MHV7R1",85,0)
 ;Must have MSH first, followed by QPD,PID,RXE,RDF,RCP in any order
"RTN","MHV7R1",86,0)
 ;RDF is not required, any other segments are ignored
"RTN","MHV7R1",87,0)
 ;
"RTN","MHV7R1",88,0)
 I $G(@MSGROOT@(1,0))="MSH" M MSH=@MSGROOT@(1) S QRY("MID")=$G(MSH(9))
"RTN","MHV7R1",89,0)
 E  S ERR="MSH^1^^100^AE^Missing MSH segment" Q 0
"RTN","MHV7R1",90,0)
 S CNT=2,OCNT=0
"RTN","MHV7R1",91,0)
 F  Q:'$D(@MSGROOT@(CNT))  D  S CNT=CNT+1
"RTN","MHV7R1",92,0)
 . S SEGTYPE=$G(@MSGROOT@(CNT,0))
"RTN","MHV7R1",93,0)
 . I SEGTYPE="PID" M PID=@MSGROOT@(CNT),QRY("PID")=PID Q
"RTN","MHV7R1",94,0)
 . I SEGTYPE="QPD" M QPD=@MSGROOT@(CNT),QRY("QPD")=QPD Q
"RTN","MHV7R1",95,0)
 . I SEGTYPE="RDF" M RDF=@MSGROOT@(CNT) Q
"RTN","MHV7R1",96,0)
 . I SEGTYPE="RCP" M RCP=@MSGROOT@(CNT) Q
"RTN","MHV7R1",97,0)
 . I SEGTYPE="RXE" S OCNT=OCNT+1 M RXE(OCNT)=@MSGROOT@(CNT) Q
"RTN","MHV7R1",98,0)
 . Q
"RTN","MHV7R1",99,0)
 ;
"RTN","MHV7R1",100,0)
 I '$D(PID) S ERR="PID^1^^100^AE^Missing PID segment" Q 0
"RTN","MHV7R1",101,0)
 I '$D(QPD) S ERR="QPD^1^^100^AE^Missing QPD segment" Q 0
"RTN","MHV7R1",102,0)
 I '$D(RCP) S ERR="RCP^1^^100^AE^Missing RCP segment" Q 0
"RTN","MHV7R1",103,0)
 ;
"RTN","MHV7R1",104,0)
 ;
"RTN","MHV7R1",105,0)
 ;Validate required fields and query parameters
"RTN","MHV7R1",106,0)
 ;
"RTN","MHV7R1",107,0)
 S ICN="",DFN="",SSN=""
"RTN","MHV7R1",108,0)
 F I=1:1:3 Q:'$D(PID(3,I))  D  Q:ERR'=""
"RTN","MHV7R1",109,0)
 . S ID=$G(PID(3,I,1))
"RTN","MHV7R1",110,0)
 . S TYPE=$G(PID(3,I,5))
"RTN","MHV7R1",111,0)
 . I ID="" S ERR="PID^1^3^101^AE^Missing Patient ID" Q
"RTN","MHV7R1",112,0)
 . I TYPE="" S ERR="PID^1^3^101^AE^Missing Patient ID Type" Q
"RTN","MHV7R1",113,0)
 . I TYPE="NI" S ICN=ID
"RTN","MHV7R1",114,0)
 . I TYPE="PI" S DFN=ID
"RTN","MHV7R1",115,0)
 . I TYPE="SS" S SSN=ID
"RTN","MHV7R1",116,0)
 . Q
"RTN","MHV7R1",117,0)
 Q:ERR'="" 0
"RTN","MHV7R1",118,0)
 ;
"RTN","MHV7R1",119,0)
 S FAMILY=$G(PID(5,1,1))
"RTN","MHV7R1",120,0)
 S GIVEN=$G(PID(5,1,2))
"RTN","MHV7R1",121,0)
 S MIDDLE=$G(PID(5,1,3))
"RTN","MHV7R1",122,0)
 S SUFFIX=$G(PID(5,1,4))
"RTN","MHV7R1",123,0)
 ;
"RTN","MHV7R1",124,0)
 ; ID is validated from PID only,
"RTN","MHV7R1",125,0)
 ; May want to add fallback to use ID supplied in QPD
"RTN","MHV7R1",126,0)
 I '$$VALIDID^MHV7R2(.ICN,.DFN,.SSN,.ERR) S ERR="PID^1^3^"_ERR Q 0
"RTN","MHV7R1",127,0)
 ;
"RTN","MHV7R1",128,0)
 ; *** May need to add validation of name - compare against system
"RTN","MHV7R1",129,0)
 ;I FAMILY="" S ERR="PID^1^5^101^AE^Missing Patient Family Name" Q 0
"RTN","MHV7R1",130,0)
 ;I GIVEN="" S ERR="PID^1^5^101^AE^Missing Patient Given Name" Q 0
"RTN","MHV7R1",131,0)
 ;
"RTN","MHV7R1",132,0)
 ;
"RTN","MHV7R1",133,0)
 S QTAG=$G(QPD(2))            ;Query Tag
"RTN","MHV7R1",134,0)
 S REQID=$G(QPD(3))           ;Request ID
"RTN","MHV7R1",135,0)
 S REQTYPE=$G(QPD(4))         ;Request Type
"RTN","MHV7R1",136,0)
 S FROMDT=$G(QPD(5))          ;From Date
"RTN","MHV7R1",137,0)
 S TODT=$G(QPD(6))            ;To Date
"RTN","MHV7R1",138,0)
 ; Do not use ICN or DFN from QPD, get from PID
"RTN","MHV7R1",139,0)
 ;I ICN="" S ICN=$G(QPD(7))    ;ICN
"RTN","MHV7R1",140,0)
 ;I DFN="" S DFN=$G(QPD(8))    ;DFN
"RTN","MHV7R1",141,0)
 S PRI=$G(RCP(1))             ;Query Priority
"RTN","MHV7R1",142,0)
 ;
"RTN","MHV7R1",143,0)
 I '$D(QPD(1)) S ERR="QPD^1^1^101^AE^Missing Message Query Name" Q 0
"RTN","MHV7R1",144,0)
 M QNAME=QPD(1)  ;Message Query Name
"RTN","MHV7R1",145,0)
 ;
"RTN","MHV7R1",146,0)
 I QTAG="" S ERR="QPD^1^2^101^AE^Missing Query Tag" Q 0
"RTN","MHV7R1",147,0)
 ;
"RTN","MHV7R1",148,0)
 I REQID="" S ERR="QPD^1^3^101^AE^Missing Request ID" Q 0
"RTN","MHV7R1",149,0)
 ;
"RTN","MHV7R1",150,0)
 I REQTYPE="" S ERR="QPD^1^4^101^AE^Missing Request Type" Q 0
"RTN","MHV7R1",151,0)
 S REQTIEN=$O(^MHV(2275.3,"D",REQTYPE,0))
"RTN","MHV7R1",152,0)
 I 'REQTIEN S ERR="QPD^1^4^103^AE^Request Type Not Found" Q 0
"RTN","MHV7R1",153,0)
 S REQT0=$G(^MHV(2275.3,REQTIEN,0))
"RTN","MHV7R1",154,0)
 S REQTYPE=$P(REQT0,"^",2)
"RTN","MHV7R1",155,0)
 ;
"RTN","MHV7R1",156,0)
 I FROMDT'="" D  Q:ERR'="" 0
"RTN","MHV7R1",157,0)
 . I FROMDT'?8.16N S ERR="QPD^1^5^102^AE^Invalid From Date" Q
"RTN","MHV7R1",158,0)
 . ;***Check into Time Zone issue between MHV server and site
"RTN","MHV7R1",159,0)
 . S FROMDT=$$HL7TFM^XLFDT(FROMDT)\1
"RTN","MHV7R1",160,0)
 . I FROMDT'?7N S ERR="QPD^1^5^102^AE^Invalid From Date" Q
"RTN","MHV7R1",161,0)
 . Q
"RTN","MHV7R1",162,0)
 ;
"RTN","MHV7R1",163,0)
 I TODT'="" D  Q:ERR'="" 0
"RTN","MHV7R1",164,0)
 . I TODT'?8.16N S ERR="QPD^1^6^102^AE^Invalid To Date" Q
"RTN","MHV7R1",165,0)
 . ;***Check into Time Zone issue between MHV server and site
"RTN","MHV7R1",166,0)
 . S TODT=$$HL7TFM^XLFDT(TODT)\1
"RTN","MHV7R1",167,0)
 . I TODT'?7N S ERR="QPD^1^6^102^AE^Invalid To Date" Q
"RTN","MHV7R1",168,0)
 . Q
"RTN","MHV7R1",169,0)
 ;
"RTN","MHV7R1",170,0)
 I TODT'="",TODT<FROMDT S ERR="QPD^1^6^102^AE^To Date precedes From Date" Q 0
"RTN","MHV7R1",171,0)
 ;
"RTN","MHV7R1",172,0)
 I PRI="" S ERR="RCP^1^1^101^AE^Missing Query Priority" Q 0
"RTN","MHV7R1",173,0)
 I "D|I"'[PRI S ERR="RCP^1^1^102^AE^Invalid Query Priority" Q 0
"RTN","MHV7R1",174,0)
 ;
"RTN","MHV7R1",175,0)
 F CNT=1:1 Q:'$D(RXE(CNT))  D
"RTN","MHV7R1",176,0)
 . S RXNUM=$G(RXE(CNT,15))
"RTN","MHV7R1",177,0)
 . Q:RXNUM<1
"RTN","MHV7R1",178,0)
 . S QRY("RXLIST",RXNUM)=""
"RTN","MHV7R1",179,0)
 . Q
"RTN","MHV7R1",180,0)
 ;
"RTN","MHV7R1",181,0)
 S QRY("REQID")=REQID     ;Request ID
"RTN","MHV7R1",182,0)
 S QRY("ICN")=ICN         ;ICN
"RTN","MHV7R1",183,0)
 S QRY("TYPE")=REQTYPE    ;Request Data Type
"RTN","MHV7R1",184,0)
 S QRY("FROM")=FROMDT     ;From Date
"RTN","MHV7R1",185,0)
 S QRY("TO")=TODT         ;To Date
"RTN","MHV7R1",186,0)
 S QRY("DFN")=DFN         ;DFN
"RTN","MHV7R1",187,0)
 S QRY("SSN")=SSN         ;SSN
"RTN","MHV7R1",188,0)
 S QRY("PRI")=PRI         ;Priority
"RTN","MHV7R1",189,0)
 ;
"RTN","MHV7R1",190,0)
 S QRY("BLOCKED")=$P(REQT0,"^",3)
"RTN","MHV7R1",191,0)
 S QRY("REALTIME")=$P(REQT0,"^",4)
"RTN","MHV7R1",192,0)
 S QRY("EXECUTE")=$TR($P(REQT0,"^",5),"~","^")
"RTN","MHV7R1",193,0)
 ;
"RTN","MHV7R1",194,0)
 Q 1
"RTN","MHV7R1",195,0)
 ;
"RTN","MHV7R2")
0^5^B43834803^B44015238
"RTN","MHV7R2",1,0)
MHV7R2 ;WAS/GPM - HL7 RECEIVER FOR OMP^O09 ; [5/24/06 10:20am]
"RTN","MHV7R2",2,0)
 ;;1.0;My HealtheVet;**1**;Aug 23, 2005
"RTN","MHV7R2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHV7R2",4,0)
 ;
"RTN","MHV7R2",5,0)
OMPO09 ;Process OMP^O09 messages from the MHV OMP^O09 Subscriber protocol
"RTN","MHV7R2",6,0)
 ;
"RTN","MHV7R2",7,0)
 ; This routine and subroutines assume that all VistA HL7 environment
"RTN","MHV7R2",8,0)
 ; variables are properly initialized and will produce a fatal error
"RTN","MHV7R2",9,0)
 ; if they are missing.
"RTN","MHV7R2",10,0)
 ;
"RTN","MHV7R2",11,0)
 ;  The message will be checked to see if it is a valid OMP^O09 order
"RTN","MHV7R2",12,0)
 ; message.  If not, a negative acknowledgement will be sent.  If the ; order message is real time or synchronous, the realtime request
"RTN","MHV7R2",13,0)
 ; manager is called to handle it.
"RTN","MHV7R2",14,0)
 ;
"RTN","MHV7R2",15,0)
 ;  Input:
"RTN","MHV7R2",16,0)
 ;          HL7 environment variables
"RTN","MHV7R2",17,0)
 ;
"RTN","MHV7R2",18,0)
 ; Output:
"RTN","MHV7R2",19,0)
 ;          Processed query or negative acknowledgement
"RTN","MHV7R2",20,0)
 ;
"RTN","MHV7R2",21,0)
 N MSGROOT,REQ,XMT,ERR
"RTN","MHV7R2",22,0)
 S (REQ,XMT,ERR)=""
"RTN","MHV7R2",23,0)
 S MSGROOT="^TMP(""MHV7"",$J)"
"RTN","MHV7R2",24,0)
 D LOG^MHV7U("OMP-O09 RECEIVER","","S",1)
"RTN","MHV7R2",25,0)
 ;
"RTN","MHV7R2",26,0)
 D LOADMSG^MHV7U(MSGROOT)
"RTN","MHV7R2",27,0)
 D LOG^MHV7U("LOAD",MSGROOT,"I",0)
"RTN","MHV7R2",28,0)
 ;
"RTN","MHV7R2",29,0)
 D PARSEMSG^MHV7U(MSGROOT,.HL)
"RTN","MHV7R2",30,0)
 ;D LOG^MHV7U("PARSE",MSGROOT,"I",0)
"RTN","MHV7R2",31,0)
 ;
"RTN","MHV7R2",32,0)
 I '$$VALIDO09(MSGROOT,.REQ,.XMT,.ERR) D  Q
"RTN","MHV7R2",33,0)
 . D LOG^MHV7U("MSG CHECK","INVALID^"_ERR,"S",0)
"RTN","MHV7R2",34,0)
 . D XMIT^MHV7T(.REQ,.XMT,ERR,"",.HL)
"RTN","MHV7R2",35,0)
 D LOG^MHV7U("MSG CHECK","VALID","S",0)
"RTN","MHV7R2",36,0)
 ;
"RTN","MHV7R2",37,0)
 ; Immediate Mode
"RTN","MHV7R2",38,0)
 ; Only real time synchronous calls are supported at this time.
"RTN","MHV7R2",39,0)
 I REQ("PRI")="I" D REALTIME^MHVRQI(.REQ,.XMT,.HL)
"RTN","MHV7R2",40,0)
 K ^TMP("MHV7LOG",$J)
"RTN","MHV7R2",41,0)
 ;
"RTN","MHV7R2",42,0)
 Q
"RTN","MHV7R2",43,0)
 ;
"RTN","MHV7R2",44,0)
VALIDO09(MSGROOT,REQ,XMT,ERR) ;Parse and Validate message
"RTN","MHV7R2",45,0)
 ;
"RTN","MHV7R2",46,0)
 ;  OMP^O09 messages must contain PID, ORC, and RXE segments
"RTN","MHV7R2",47,0)
 ;  The following sequences are required
"RTN","MHV7R2",48,0)
 ;     PID(3)  - ICN/DFN
"RTN","MHV7R2",49,0)
 ;     ORC(2)  - Placer Order Number
"RTN","MHV7R2",50,0)
 ;     RXE(1).4- Order Start Time
"RTN","MHV7R2",51,0)
 ;     RXE(15) - Prescription Number
"RTN","MHV7R2",52,0)
 ;  The following sequences are optional
"RTN","MHV7R2",53,0)
 ;
"RTN","MHV7R2",54,0)
 ;  ERR = segment^sequence^field^code^ACK type^error text
"RTN","MHV7R2",55,0)
 ;
"RTN","MHV7R2",56,0)
 N MSH,PID,ORC,RXE,CNT,ICN,SSN,REQTYPE,DFN,PRI,REQTIEN,REQT0,TYPE,ID,I,ORDERCTL,PORDERN,ORDERQTY,GIVEID,GIVESYS,GIVEAMT,GIVEUNT,ORDERTM,RXNUM,FAMILY,GIVEN,MIDDLE,SUFFIX
"RTN","MHV7R2",57,0)
 S ERR=""
"RTN","MHV7R2",58,0)
 K REQ,XMT
"RTN","MHV7R2",59,0)
 ;
"RTN","MHV7R2",60,0)
 ;Set response control defaults
"RTN","MHV7R2",61,0)
 S XMT("PROTOCOL")="MHV ORP-O10 Event Driver"   ;Response protocol
"RTN","MHV7R2",62,0)
 S XMT("BUILDER")="ORPO10^MHV7B2"               ;Response builder
"RTN","MHV7R2",63,0)
 S XMT("MODE")="D"                               ;Response mode
"RTN","MHV7R2",64,0)
 I $G(HL("APAT"))="" S XMT("MODE")="I"           ;Immediate mode
"RTN","MHV7R2",65,0)
 S XMT("HLMTIENS")=HLMTIENS                      ;Message IEN
"RTN","MHV7R2",66,0)
 S REQ("MID")=""                                 ;Message ID
"RTN","MHV7R2",67,0)
 ;
"RTN","MHV7R2",68,0)
 ;Validate message is a well-formed OMP^O09 message
"RTN","MHV7R2",69,0)
 ;Must have MSH first followed by PID, then one or more ORC/RXE pairs
"RTN","MHV7R2",70,0)
 I $G(@MSGROOT@(1,0))="MSH" M MSH=@MSGROOT@(1) S REQ("MID")=$G(MSH(9))
"RTN","MHV7R2",71,0)
 E  S ERR="MSH^1^^100^AE^Missing MSH segment" Q 0
"RTN","MHV7R2",72,0)
 I $G(@MSGROOT@(2,0))="PID" M PID=@MSGROOT@(2),REQ("PID")=PID
"RTN","MHV7R2",73,0)
 E  S ERR="PID^1^^100^AE^Missing PID segment" Q 0
"RTN","MHV7R2",74,0)
 S CNT=3
"RTN","MHV7R2",75,0)
 F  Q:'$D(@MSGROOT@(CNT))  D  Q:ERR'=""
"RTN","MHV7R2",76,0)
 . I $G(@MSGROOT@(CNT,0))="ORC" M ORC(CNT\2)=@MSGROOT@(CNT)
"RTN","MHV7R2",77,0)
 . E  S ERR="ORC^1^^100^AE^Missing ORC segment" Q
"RTN","MHV7R2",78,0)
 . I $G(@MSGROOT@(CNT+1,0))="RXE" M RXE(CNT\2)=@MSGROOT@(CNT+1)
"RTN","MHV7R2",79,0)
 . E  S ERR="RXE^1^^100^AE^Missing RXE segment" Q
"RTN","MHV7R2",80,0)
 . S CNT=CNT+2
"RTN","MHV7R2",81,0)
 . Q
"RTN","MHV7R2",82,0)
 Q:ERR'="" 0
"RTN","MHV7R2",83,0)
 I '$D(ORC) S ERR="ORC^1^^100^AE^Missing ORC segment" Q 0
"RTN","MHV7R2",84,0)
 I '$D(RXE) S ERR="RXE^1^^100^AE^Missing RXE segment" Q 0
"RTN","MHV7R2",85,0)
 ;
"RTN","MHV7R2",86,0)
 ;
"RTN","MHV7R2",87,0)
 ;Validate required fields and refill request parameters
"RTN","MHV7R2",88,0)
 ;
"RTN","MHV7R2",89,0)
 S ICN="",DFN="",SSN=""
"RTN","MHV7R2",90,0)
 F I=1:1:3 Q:'$D(PID(3,I))  D  Q:ERR'=""
"RTN","MHV7R2",91,0)
 . S ID=$G(PID(3,I,1))
"RTN","MHV7R2",92,0)
 . S TYPE=$G(PID(3,I,5))
"RTN","MHV7R2",93,0)
 . I ID="" S ERR="PID^1^3^101^AE^Missing Patient ID" Q
"RTN","MHV7R2",94,0)
 . I TYPE="" S ERR="PID^1^3^101^AE^Missing Patient ID Type" Q
"RTN","MHV7R2",95,0)
 . I TYPE="NI" S ICN=ID
"RTN","MHV7R2",96,0)
 . I TYPE="PI" S DFN=ID
"RTN","MHV7R2",97,0)
 . I TYPE="SS" S SSN=ID
"RTN","MHV7R2",98,0)
 . Q
"RTN","MHV7R2",99,0)
 Q:ERR'="" 0
"RTN","MHV7R2",100,0)
 ;
"RTN","MHV7R2",101,0)
 S FAMILY=$G(PID(5,1,1))
"RTN","MHV7R2",102,0)
 S GIVEN=$G(PID(5,1,2))
"RTN","MHV7R2",103,0)
 S MIDDLE=$G(PID(5,1,3))
"RTN","MHV7R2",104,0)
 S SUFFIX=$G(PID(5,1,4))
"RTN","MHV7R2",105,0)
 ;
"RTN","MHV7R2",106,0)
 I '$$VALIDID(.ICN,.DFN,.SSN,.ERR) S ERR="PID^1^3^"_ERR Q 0
"RTN","MHV7R2",107,0)
 ;
"RTN","MHV7R2",108,0)
 ; *** May need to add validation of name - compare against system
"RTN","MHV7R2",109,0)
 ;I FAMILY="" S ERR="PID^1^5^101^AE^Missing Patient Family Name" Q 0
"RTN","MHV7R2",110,0)
 ;I GIVEN="" S ERR="PID^1^5^101^AE^Missing Patient Given Name" Q 0
"RTN","MHV7R2",111,0)
 ;
"RTN","MHV7R2",112,0)
 F I=1:1 Q:'$D(ORC(I))  D  Q:ERR'=""
"RTN","MHV7R2",113,0)
 . S ORDERCTL=$G(ORC(I,1))
"RTN","MHV7R2",114,0)
 . S PORDERN=$G(ORC(I,2))
"RTN","MHV7R2",115,0)
 . I ORDERCTL="" S ERR="ORC^"_I_"^2^101^AE^Missing Order Control" Q
"RTN","MHV7R2",116,0)
 . I PORDERN="" S ERR="ORC^"_I_"^2^101^AE^Missing Placer Order#" Q
"RTN","MHV7R2",117,0)
 . ;
"RTN","MHV7R2",118,0)
 . S ORDERQTY=$G(RXE(I,1,1,1))
"RTN","MHV7R2",119,0)
 . S ORDERTM=$G(RXE(I,1,1,4))
"RTN","MHV7R2",120,0)
 . S GIVEID=$G(RXE(I,2,1,1))
"RTN","MHV7R2",121,0)
 . S GIVESYS=$G(RXE(I,2,1,3))
"RTN","MHV7R2",122,0)
 . S GIVEAMT=$G(RXE(I,3))
"RTN","MHV7R2",123,0)
 . S GIVEUNT=$G(RXE(I,5))
"RTN","MHV7R2",124,0)
 . S RXNUM=$G(RXE(I,15))
"RTN","MHV7R2",125,0)
 . I ORDERQTY="" S ERR="RXE^"_I_"^1^101^AE^Missing Order Quantity" Q
"RTN","MHV7R2",126,0)
 . I ORDERTM="" S ERR="RXE^"_I_"^1^101^AE^Missing Order Start Time" Q
"RTN","MHV7R2",127,0)
 . I GIVEID="" S ERR="RXE^"_I_"^2^101^AE^Missign Give Code ID" Q
"RTN","MHV7R2",128,0)
 . I GIVESYS="" S ERR="RXE^"_I_"^2^101^AE^Missing Give Code System" Q
"RTN","MHV7R2",129,0)
 . I GIVEAMT="" S ERR="RXE^"_I_"^3^101^AE^Missing Give Amount" Q
"RTN","MHV7R2",130,0)
 . I GIVEUNT="" S ERR="RXE^"_I_"^5^101^AE^Missing Give Units" Q
"RTN","MHV7R2",131,0)
 . I RXNUM="" S ERR="RXE^"_I_"^15^101^AE^Missing Prescription#" Q
"RTN","MHV7R2",132,0)
 . I RXNUM'?1N.N0.1A S ERR="RXE^"_I_"^15^102^AE^Invalid Prescription#" Q
"RTN","MHV7R2",133,0)
 . S REQ("RX",I)=RXNUM_"^"_PORDERN_"^"_ORDERTM
"RTN","MHV7R2",134,0)
 . Q
"RTN","MHV7R2",135,0)
 Q:ERR'="" 0
"RTN","MHV7R2",136,0)
 ;
"RTN","MHV7R2",137,0)
 S PRI=XMT("MODE")
"RTN","MHV7R2",138,0)
 S REQTYPE="RxRefill"
"RTN","MHV7R2",139,0)
 S REQTIEN=$O(^MHV(2275.3,"D",REQTYPE,0))
"RTN","MHV7R2",140,0)
 I 'REQTIEN S ERR="MSH^1^9^103^AE^Request Type Not Found" Q 0
"RTN","MHV7R2",141,0)
 S REQT0=$G(^MHV(2275.3,REQTIEN,0))
"RTN","MHV7R2",142,0)
 S REQTYPE=$P(REQT0,"^",2)
"RTN","MHV7R2",143,0)
 ;
"RTN","MHV7R2",144,0)
 S REQ("ICN")=ICN         ;ICN
"RTN","MHV7R2",145,0)
 S REQ("DFN")=DFN         ;DFN
"RTN","MHV7R2",146,0)
 S REQ("SSN")=SSN         ;SSN
"RTN","MHV7R2",147,0)
 S REQ("TYPE")=REQTYPE    ;Request Data Type
"RTN","MHV7R2",148,0)
 S REQ("PRI")=PRI         ;Priority
"RTN","MHV7R2",149,0)
 ;
"RTN","MHV7R2",150,0)
 S REQ("BLOCKED")=$P(REQT0,"^",3)
"RTN","MHV7R2",151,0)
 S REQ("REALTIME")=$P(REQT0,"^",4)
"RTN","MHV7R2",152,0)
 S REQ("EXECUTE")=$TR($P(REQT0,"^",5),"~","^")
"RTN","MHV7R2",153,0)
 ;
"RTN","MHV7R2",154,0)
 Q 1
"RTN","MHV7R2",155,0)
 ;
"RTN","MHV7R2",156,0)
VALIDID(ICN,DFN,SSN,ERR) ;Validate patient identifiers
"RTN","MHV7R2",157,0)
 ; Will accept ICN, SSN, or DFN, but must have at least one.
"RTN","MHV7R2",158,0)
 ; Only validate one, in order of preference: ICN, SSN, DFN.
"RTN","MHV7R2",159,0)
 ;
"RTN","MHV7R2",160,0)
 ;  Integration Agreements:
"RTN","MHV7R2",161,0)
 ;         2701 : $$GETDFN^MPIF001, $$GETICN^MPIF001
"RTN","MHV7R2",162,0)
 ;        10035 : Direct reference of ^DPT(DFN,0);9
"RTN","MHV7R2",163,0)
 ;                and reference of ^DPT("SSN") x-ref
"RTN","MHV7R2",164,0)
 ; 
"RTN","MHV7R2",165,0)
 N XSSN,XDFN
"RTN","MHV7R2",166,0)
 S ERR=""
"RTN","MHV7R2",167,0)
 I ICN="",SSN="",DFN="" S ERR="101^AE^Missing Patient ID" Q 0
"RTN","MHV7R2",168,0)
 ;I ICN="" S ERR="101^AE^Missing ICN" Q 0
"RTN","MHV7R2",169,0)
 ;
"RTN","MHV7R2",170,0)
 I ICN'="" D  Q:ERR'="" 0 Q 1
"RTN","MHV7R2",171,0)
 . S ICN=$P(ICN,"V")
"RTN","MHV7R2",172,0)
 . I ICN'?9.10N S ERR="102^AE^Invalid ICN" Q
"RTN","MHV7R2",173,0)
 . S XDFN=$$GETDFN^MPIF001(ICN)
"RTN","MHV7R2",174,0)
 . I XDFN<1 S ERR="204^AR^Patient Not Found" Q
"RTN","MHV7R2",175,0)
 . S XSSN=$P($G(^DPT(XDFN,0)),"^",9)
"RTN","MHV7R2",176,0)
 . I SSN'="" D  Q:ERR'=""
"RTN","MHV7R2",177,0)
 .. I SSN'?9N S ERR="102^AE^Invalid SSN" Q
"RTN","MHV7R2",178,0)
 .. I SSN'=XSSN S ERR="204^AE^Patient SSN Mismatch" Q
"RTN","MHV7R2",179,0)
 . I DFN'="",DFN'=XDFN S ERR="204^AE^Patient DFN Mismatch" Q
"RTN","MHV7R2",180,0)
 . S DFN=XDFN,SSN=XSSN
"RTN","MHV7R2",181,0)
 . Q
"RTN","MHV7R2",182,0)
 ;
"RTN","MHV7R2",183,0)
 I SSN'="" D  Q:ERR'="" 0 Q 1
"RTN","MHV7R2",184,0)
 . I SSN'?9N S ERR="102^AE^Invalid SSN" Q
"RTN","MHV7R2",185,0)
 . S XDFN=$O(^DPT("SSN",SSN,""))
"RTN","MHV7R2",186,0)
 . I XDFN<1 S ERR="204^AR^Patient Not Found" Q
"RTN","MHV7R2",187,0)
 . S ICN=+$$GETICN^MPIF001(DFN)
"RTN","MHV7R2",188,0)
 . I ICN<1 S ICN=""
"RTN","MHV7R2",189,0)
 . I DFN'="",DFN'=XDFN S ERR="204^AE^Patient DFN Mismatch" Q
"RTN","MHV7R2",190,0)
 . S DFN=XDFN
"RTN","MHV7R2",191,0)
 . Q
"RTN","MHV7R2",192,0)
 ;
"RTN","MHV7R2",193,0)
 I DFN'="" D  Q:ERR'="" 0 Q 1
"RTN","MHV7R2",194,0)
 . I DFN'?1N.N  S ERR="102^AE^Invalid DFN" Q
"RTN","MHV7R2",195,0)
 . I DFN<1 S ERR="102^AE^Invalid DFN" Q
"RTN","MHV7R2",196,0)
 . I '$D(^DPT(DFN,0)) S ERR="204^AR^Patient Not Found" Q
"RTN","MHV7R2",197,0)
 . S ICN=+$$GETICN^MPIF001(DFN)
"RTN","MHV7R2",198,0)
 . I ICN<1 S ICN=""
"RTN","MHV7R2",199,0)
 . S SSN=$P($G(^DPT(DFN,0)),"^",9)
"RTN","MHV7R2",200,0)
 . Q
"RTN","MHV7R2",201,0)
 ;
"RTN","MHV7R2",202,0)
 S ERR="101^AE^Missing Patient ID" Q 0
"RTN","MHV7R2",203,0)
 ;
"RTN","MHV7U")
0^6^B80060951^B62743685
"RTN","MHV7U",1,0)
MHV7U ;WAS/GPM - HL7 UTILITIES ; [4/19/06 12:41pm]
"RTN","MHV7U",2,0)
 ;;1.0;My HealtheVet;**1**;Aug 23, 2005
"RTN","MHV7U",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHV7U",4,0)
 ;
"RTN","MHV7U",5,0)
 ;This routine contains generic utilities used when building
"RTN","MHV7U",6,0)
 ;or processing HL7 messages.
"RTN","MHV7U",7,0)
 ;
"RTN","MHV7U",8,0)
 Q  ;Direct entry not supported
"RTN","MHV7U",9,0)
 ;
"RTN","MHV7U",10,0)
LOADMSG(MSGROOT) ; Load HL7 message into temporary global for processing
"RTN","MHV7U",11,0)
 ;
"RTN","MHV7U",12,0)
 ;This subroutine assumes that all VistA HL7 environment variables are
"RTN","MHV7U",13,0)
 ;properly initialized and will produce a fatal error if they aren't.
"RTN","MHV7U",14,0)
 ;
"RTN","MHV7U",15,0)
 N CNT,SEG
"RTN","MHV7U",16,0)
 K @MSGROOT
"RTN","MHV7U",17,0)
 F SEG=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MHV7U",18,0)
 . S CNT=0
"RTN","MHV7U",19,0)
 . S @MSGROOT@(SEG,CNT)=HLNODE
"RTN","MHV7U",20,0)
 . F  S CNT=$O(HLNODE(CNT)) Q:'CNT  S @MSGROOT@(SEG,CNT)=HLNODE(CNT)
"RTN","MHV7U",21,0)
 Q
"RTN","MHV7U",22,0)
 ;
"RTN","MHV7U",23,0)
PARSEMSG(MSGROOT,HL) ; Message Parser
"RTN","MHV7U",24,0)
 ; Does not handle segments that span nodes
"RTN","MHV7U",25,0)
 ; Does not handle extremely long segments (uses a local)
"RTN","MHV7U",26,0)
 ; Does not handle long fields (segment parser doesn't)
"RTN","MHV7U",27,0)
 ;
"RTN","MHV7U",28,0)
 N SEG,CNT,DATA,MSG
"RTN","MHV7U",29,0)
 F CNT=1:1 Q:'$D(@MSGROOT@(CNT))  M SEG=@MSGROOT@(CNT) D
"RTN","MHV7U",30,0)
 . D PARSESEG(SEG(0),.DATA,.HL)
"RTN","MHV7U",31,0)
 . K @MSGROOT@(CNT)
"RTN","MHV7U",32,0)
 . I DATA(0)'="" M @MSGROOT@(CNT)=DATA
"RTN","MHV7U",33,0)
 . Q:'$D(SEG(1))
"RTN","MHV7U",34,0)
 . ;Add handler for segments that span nodes here.
"RTN","MHV7U",35,0)
 . Q
"RTN","MHV7U",36,0)
 Q
"RTN","MHV7U",37,0)
 ;
"RTN","MHV7U",38,0)
LOG(NAME,DATA,TYPE,NEW) ;Log to MHV application log
"RTN","MHV7U",39,0)
 ;
"RTN","MHV7U",40,0)
 ;  Input:
"RTN","MHV7U",41,0)
 ;    NAME - Name to identify log line
"RTN","MHV7U",42,0)
 ;    DATA - Value,Tree, or Name of structure to put in log
"RTN","MHV7U",43,0)
 ;    TYPE - Type of log entry
"RTN","MHV7U",44,0)
 ;              S:Set Single Value
"RTN","MHV7U",45,0)
 ;              M:Merge Tree 
"RTN","MHV7U",46,0)
 ;              I:Indirect Merge @
"RTN","MHV7U",47,0)
 ;     NEW - Flag to create new log entry
"RTN","MHV7U",48,0)
 ;
"RTN","MHV7U",49,0)
 ;  Output:
"RTN","MHV7U",50,0)
 ;    Updates log
"RTN","MHV7U",51,0)
 ;
"RTN","MHV7U",52,0)
 ; ^XTMP("MHV7LOG",0) - Head of log file
"RTN","MHV7U",53,0)
 ; ^XTMP("MHV7LOG",1) - if set indicates that logging is on
"RTN","MHV7U",54,0)
 ; ^XTMP("MHV7LOG",2) - contains the log
"RTN","MHV7U",55,0)
 ; ^XTMP("MHV7LOG",2,negated FM timestamp,$J,counter,NAME) - log entry
"RTN","MHV7U",56,0)
 ;
"RTN","MHV7U",57,0)
 ; ^TMP("MHV7LOG",$J) - Session current log entry (DTM)
"RTN","MHV7U",58,0)
 ;
"RTN","MHV7U",59,0)
 ;Quit if logging is not turned on
"RTN","MHV7U",60,0)
 Q:'$G(^XTMP("MHV7LOG",1))
"RTN","MHV7U",61,0)
 N DTM,CNT
"RTN","MHV7U",62,0)
 ;
"RTN","MHV7U",63,0)
 Q:'$D(DATA)
"RTN","MHV7U",64,0)
 Q:$G(TYPE)=""
"RTN","MHV7U",65,0)
 Q:$G(NAME)=""
"RTN","MHV7U",66,0)
 S NAME=$TR(NAME,"^","-")
"RTN","MHV7U",67,0)
 ;
"RTN","MHV7U",68,0)
 ; Check ^TMP("MHV7LOG",$J) If no current log node start a new node
"RTN","MHV7U",69,0)
 I '$G(^TMP("MHV7LOG",$J)) S NEW=1
"RTN","MHV7U",70,0)
 ;
"RTN","MHV7U",71,0)
 I $G(NEW) D
"RTN","MHV7U",72,0)
 . S DTM=-$$NOW^XLFDT()
"RTN","MHV7U",73,0)
 . K ^XTMP("MHV7LOG",2,DTM,$J)
"RTN","MHV7U",74,0)
 . S ^TMP("MHV7LOG",$J)=DTM
"RTN","MHV7U",75,0)
 . S CNT=1
"RTN","MHV7U",76,0)
 . S ^XTMP("MHV7LOG",2,DTM,$J)=CNT
"RTN","MHV7U",77,0)
 . D AUTOPRG
"RTN","MHV7U",78,0)
 . Q
"RTN","MHV7U",79,0)
 E  D
"RTN","MHV7U",80,0)
 . S DTM=^TMP("MHV7LOG",$J)
"RTN","MHV7U",81,0)
 . S CNT=$G(^XTMP("MHV7LOG",2,DTM,$J))+1
"RTN","MHV7U",82,0)
 . S ^XTMP("MHV7LOG",2,DTM,$J)=CNT
"RTN","MHV7U",83,0)
 . Q
"RTN","MHV7U",84,0)
 ;
"RTN","MHV7U",85,0)
 I TYPE="S" S ^XTMP("MHV7LOG",2,DTM,$J,CNT,NAME)=DATA Q
"RTN","MHV7U",86,0)
 I TYPE="M" M ^XTMP("MHV7LOG",2,DTM,$J,CNT,NAME)=DATA Q
"RTN","MHV7U",87,0)
 I TYPE="I" M ^XTMP("MHV7LOG",2,DTM,$J,CNT,NAME)=@DATA Q
"RTN","MHV7U",88,0)
 ;
"RTN","MHV7U",89,0)
 Q
"RTN","MHV7U",90,0)
 ;
"RTN","MHV7U",91,0)
AUTOPRG ;
"RTN","MHV7U",92,0)
 Q:'$G(^XTMP("MHV7LOG",1,"AUTOPURGE"))
"RTN","MHV7U",93,0)
 N DT,DAYS,RESULT
"RTN","MHV7U",94,0)
 ; Purge only once per day
"RTN","MHV7U",95,0)
 S DT=$$DT^XLFDT
"RTN","MHV7U",96,0)
 Q:$G(^XTMP("MHV7LOG",1,"AUTOPURGE","PURGE DATE"))=DT
"RTN","MHV7U",97,0)
 ;
"RTN","MHV7U",98,0)
 S DAYS=$G(^XTMP("MHV7LOG",1,"AUTOPURGE","DAYS"))
"RTN","MHV7U",99,0)
 I DAYS<1 S DAYS=7
"RTN","MHV7U",100,0)
 ;*** Consider tasking the purge
"RTN","MHV7U",101,0)
 D LOGPRG^MHVUL1(.RESULT,$$HTFM^XLFDT($H-DAYS,1))
"RTN","MHV7U",102,0)
 S ^XTMP("MHV7LOG",1,"AUTOPURGE","PURGE DATE")=DT
"RTN","MHV7U",103,0)
 Q
"RTN","MHV7U",104,0)
 ;
"RTN","MHV7U",105,0)
TRIMSPC(STR) ;Trim leading and trailing spaces from a text string
"RTN","MHV7U",106,0)
 ;
"RTN","MHV7U",107,0)
 ;  Input:
"RTN","MHV7U",108,0)
 ;    STR - Text string
"RTN","MHV7U",109,0)
 ;
"RTN","MHV7U",110,0)
 ;  Output:
"RTN","MHV7U",111,0)
 ;    Function Value - Input text string with leading and trailing
"RTN","MHV7U",112,0)
 ;                    spaces removed
"RTN","MHV7U",113,0)
 ;
"RTN","MHV7U",114,0)
 N SPACE,POS,LEN
"RTN","MHV7U",115,0)
 S SPACE=$C(32)
"RTN","MHV7U",116,0)
 S LEN=$L(STR)
"RTN","MHV7U",117,0)
 S POS=1
"RTN","MHV7U",118,0)
 F  Q:$E(STR,POS)'=SPACE!(POS>LEN)  S POS=POS+1
"RTN","MHV7U",119,0)
 S STR=$E(STR,POS,LEN)
"RTN","MHV7U",120,0)
 S POS=$L(STR)
"RTN","MHV7U",121,0)
 F  Q:$E(STR,POS)'=SPACE!(POS<1)  S POS=POS-1
"RTN","MHV7U",122,0)
 S STR=$E(STR,1,POS)
"RTN","MHV7U",123,0)
 Q STR
"RTN","MHV7U",124,0)
 ;
"RTN","MHV7U",125,0)
PARSESEG(SEG,DATA,HL) ;Generic segment parser
"RTN","MHV7U",126,0)
 ;This procedure parses a single HL7 segment and builds an array
"RTN","MHV7U",127,0)
 ;subscripted by the field number containing the data for that field.
"RTN","MHV7U",128,0)
 ; Does not handle segments that span nodes
"RTN","MHV7U",129,0)
 ;
"RTN","MHV7U",130,0)
 ;  Input:
"RTN","MHV7U",131,0)
 ;     SEG - HL7 segment to parse
"RTN","MHV7U",132,0)
 ;      HL - HL7 environment array
"RTN","MHV7U",133,0)
 ;
"RTN","MHV7U",134,0)
 ;  Output:
"RTN","MHV7U",135,0)
 ;    Function value - field data array [SUB1:field, SUB2:repetition,
"RTN","MHV7U",136,0)
 ;                                SUB3:component, SUB4:sub-component] 
"RTN","MHV7U",137,0)
 ;
"RTN","MHV7U",138,0)
 N CMP     ;component subscript
"RTN","MHV7U",139,0)
 N CMPVAL  ;component value
"RTN","MHV7U",140,0)
 N FLD     ;field subscript
"RTN","MHV7U",141,0)
 N FLDVAL  ;field value
"RTN","MHV7U",142,0)
 N REP     ;repetition subscript
"RTN","MHV7U",143,0)
 N REPVAL  ;repetition value
"RTN","MHV7U",144,0)
 N SUB     ;sub-component subscript
"RTN","MHV7U",145,0)
 N SUBVAL  ;sub-component value
"RTN","MHV7U",146,0)
 N FS      ;field separator
"RTN","MHV7U",147,0)
 N CS      ;component separator
"RTN","MHV7U",148,0)
 N RS      ;repetition separator
"RTN","MHV7U",149,0)
 N SS      ;sub-component separator
"RTN","MHV7U",150,0)
 ;
"RTN","MHV7U",151,0)
 K DATA
"RTN","MHV7U",152,0)
 S FS=HL("FS")
"RTN","MHV7U",153,0)
 S CS=$E(HL("ECH"))
"RTN","MHV7U",154,0)
 S RS=$E(HL("ECH"),2)
"RTN","MHV7U",155,0)
 S SS=$E(HL("ECH"),4)
"RTN","MHV7U",156,0)
 ;
"RTN","MHV7U",157,0)
 S DATA(0)=$P(SEG,FS)
"RTN","MHV7U",158,0)
 S SEG=$P(SEG,FS,2,9999)
"RTN","MHV7U",159,0)
 F FLD=1:1:$L(SEG,FS) D
"RTN","MHV7U",160,0)
 . S FLDVAL=$P(SEG,FS,FLD)
"RTN","MHV7U",161,0)
 . F REP=1:1:$L(FLDVAL,RS) D
"RTN","MHV7U",162,0)
 . . S REPVAL=$P(FLDVAL,RS,REP)
"RTN","MHV7U",163,0)
 . . I REPVAL[CS F CMP=1:1:$L(REPVAL,CS) D
"RTN","MHV7U",164,0)
 . . . S CMPVAL=$P(REPVAL,CS,CMP)
"RTN","MHV7U",165,0)
 . . . I CMPVAL[SS F SUB=1:1:$L(CMPVAL,SS) D
"RTN","MHV7U",166,0)
 . . . . S SUBVAL=$P(CMPVAL,SS,SUB)
"RTN","MHV7U",167,0)
 . . . . I SUBVAL'="" S DATA(FLD,REP,CMP,SUB)=SUBVAL
"RTN","MHV7U",168,0)
 . . . I '$D(DATA(FLD,REP,CMP)),CMPVAL'="" S DATA(FLD,REP,CMP)=CMPVAL
"RTN","MHV7U",169,0)
 . . I '$D(DATA(FLD,REP)),REPVAL'="",FLDVAL[RS S DATA(FLD,REP)=REPVAL
"RTN","MHV7U",170,0)
 . I '$D(DATA(FLD)),FLDVAL'="" S DATA(FLD)=FLDVAL
"RTN","MHV7U",171,0)
 Q
"RTN","MHV7U",172,0)
 ;
"RTN","MHV7U",173,0)
BLDSEG(DATA,HL) ;generic segment builder
"RTN","MHV7U",174,0)
 ;
"RTN","MHV7U",175,0)
 ;  Input:
"RTN","MHV7U",176,0)
 ;    DATA - field data array [SUB1:field, SUB2:repetition,
"RTN","MHV7U",177,0)
 ;                             SUB3:component, SUB4:sub-component]
"RTN","MHV7U",178,0)
 ;     HL - HL7 environment array
"RTN","MHV7U",179,0)
 ;
"RTN","MHV7U",180,0)
 ;  Output:
"RTN","MHV7U",181,0)
 ;   Function Value - Formatted HL7 segment on success, "" on failure
"RTN","MHV7U",182,0)
 ;
"RTN","MHV7U",183,0)
 N CMP     ;component subscript
"RTN","MHV7U",184,0)
 N CMPVAL  ;component value
"RTN","MHV7U",185,0)
 N FLD     ;field subscript
"RTN","MHV7U",186,0)
 N FLDVAL  ;field value
"RTN","MHV7U",187,0)
 N REP     ;repetition subscript
"RTN","MHV7U",188,0)
 N REPVAL  ;repetition value
"RTN","MHV7U",189,0)
 N SUB     ;sub-component subscript
"RTN","MHV7U",190,0)
 N SUBVAL  ;sub-component value
"RTN","MHV7U",191,0)
 N FS      ;field separator
"RTN","MHV7U",192,0)
 N CS      ;component separator
"RTN","MHV7U",193,0)
 N RS      ;repetition separator
"RTN","MHV7U",194,0)
 N ES      ;escape character
"RTN","MHV7U",195,0)
 N SS      ;sub-component separator
"RTN","MHV7U",196,0)
 N SEG,SEP
"RTN","MHV7U",197,0)
 ;
"RTN","MHV7U",198,0)
 S FS=HL("FS")
"RTN","MHV7U",199,0)
 S CS=$E(HL("ECH"))
"RTN","MHV7U",200,0)
 S RS=$E(HL("ECH"),2)
"RTN","MHV7U",201,0)
 S ES=$E(HL("ECH"),3)
"RTN","MHV7U",202,0)
 S SS=$E(HL("ECH"),4)
"RTN","MHV7U",203,0)
 ;
"RTN","MHV7U",204,0)
 S SEG=$G(DATA(0))
"RTN","MHV7U",205,0)
 F FLD=1:1:$O(DATA(""),-1) D
"RTN","MHV7U",206,0)
 . S FLDVAL=$G(DATA(FLD)),SEP=FS
"RTN","MHV7U",207,0)
 . S SEG=SEG_SEP_FLDVAL
"RTN","MHV7U",208,0)
 . F REP=1:1:$O(DATA(FLD,""),-1)  D
"RTN","MHV7U",209,0)
 . . S REPVAL=$G(DATA(FLD,REP))
"RTN","MHV7U",210,0)
 . . S SEP=$S(REP=1:"",1:RS)
"RTN","MHV7U",211,0)
 . . S SEG=SEG_SEP_REPVAL
"RTN","MHV7U",212,0)
 . . F CMP=1:1:$O(DATA(FLD,REP,""),-1) D
"RTN","MHV7U",213,0)
 . . . S CMPVAL=$G(DATA(FLD,REP,CMP))
"RTN","MHV7U",214,0)
 . . . S SEP=$S(CMP=1:"",1:CS)
"RTN","MHV7U",215,0)
 . . . S SEG=SEG_SEP_CMPVAL
"RTN","MHV7U",216,0)
 . . . F SUB=1:1:$O(DATA(FLD,REP,CMP,""),-1) D
"RTN","MHV7U",217,0)
 . . . . S SUBVAL=$G(DATA(FLD,REP,CMP,SUB))
"RTN","MHV7U",218,0)
 . . . . S SEP=$S(SUB=1:"",1:SS)
"RTN","MHV7U",219,0)
 . . . . S SEG=SEG_SEP_SUBVAL
"RTN","MHV7U",220,0)
 Q SEG
"RTN","MHV7U",221,0)
 ;
"RTN","MHV7U",222,0)
BLDWPSEG(WP,SEG,MAXLEN,HL) ;
"RTN","MHV7U",223,0)
 ;Builds segment nodes to add word processing fields to a segment
"RTN","MHV7U",224,0)
 N CNT,LINE,LAST,FS,RS,LENGTH
"RTN","MHV7U",225,0)
 I MAXLEN<1 S MAXLEN=999999999999
"RTN","MHV7U",226,0)
 S FS=HL("FS")         ;field separator
"RTN","MHV7U",227,0)
 S RS=$E(HL("ECH"),2)  ;repeat separator
"RTN","MHV7U",228,0)
 S CNT=$O(SEG(""),-1)+1
"RTN","MHV7U",229,0)
 S LINE=$O(WP(0))
"RTN","MHV7U",230,0)
 S LENGTH=$L(LINE)
"RTN","MHV7U",231,0)
 S SEG(CNT)=""
"RTN","MHV7U",232,0)
 S SEG(CNT)=FS_$$ESCAPE($G(WP(LINE,0)),.HL)
"RTN","MHV7U",233,0)
 F  S LINE=$O(WP(LINE)) Q:LINE=""  D  Q:LENGTH'<MAXLEN
"RTN","MHV7U",234,0)
 . S LENGTH=LENGTH+$L(LINE)
"RTN","MHV7U",235,0)
 . I LENGTH'<MAXLEN S LINE=$E(LINE,1,$L(LINE)-(LENGTH-MAXLEN))
"RTN","MHV7U",236,0)
 . S LAST=$E(SEG(CNT),$L(SEG(CNT)))
"RTN","MHV7U",237,0)
 . S CNT=CNT+1
"RTN","MHV7U",238,0)
 . S SEG(CNT)=$$ESCAPE($G(WP(LINE,0)),.HL)
"RTN","MHV7U",239,0)
 . I $E(SEG(CNT))'=" ",LAST'=" " S SEG(CNT)=RS_SEG(CNT)
"RTN","MHV7U",240,0)
 . Q
"RTN","MHV7U",241,0)
 Q
"RTN","MHV7U",242,0)
 ;
"RTN","MHV7U",243,0)
ADD(VAL,SEP,SEG) ;append a value onto segment
"RTN","MHV7U",244,0)
 ;
"RTN","MHV7U",245,0)
 ;  Input:
"RTN","MHV7U",246,0)
 ;    VAL - value to append
"RTN","MHV7U",247,0)
 ;    SEP - HL7 separator
"RTN","MHV7U",248,0)
 ;
"RTN","MHV7U",249,0)
 ;  Output:
"RTN","MHV7U",250,0)
 ;    SEG - segment passed by reference
"RTN","MHV7U",251,0)
 ;
"RTN","MHV7U",252,0)
 S SEP=$G(SEP)
"RTN","MHV7U",253,0)
 S VAL=$G(VAL)
"RTN","MHV7U",254,0)
 ; Escape VAL??
"RTN","MHV7U",255,0)
 ; If exceed 512 characters don't add
"RTN","MHV7U",256,0)
 S SEG=SEG_SEP_VAL
"RTN","MHV7U",257,0)
 Q
"RTN","MHV7U",258,0)
 ;
"RTN","MHV7U",259,0)
ESCAPE(VAL,HL) ;Escape any special characters
"RTN","MHV7U",260,0)
 ; *** Does not handle long strings of special characters ***
"RTN","MHV7U",261,0)
 ;
"RTN","MHV7U",262,0)
 ;  Input:
"RTN","MHV7U",263,0)
 ;    VAL - value to escape
"RTN","MHV7U",264,0)
 ;     HL - HL7 environment array
"RTN","MHV7U",265,0)
 ;
"RTN","MHV7U",266,0)
 ;  Output:
"RTN","MHV7U",267,0)
 ;    VAL - passed by reference
"RTN","MHV7U",268,0)
 ;
"RTN","MHV7U",269,0)
 N FS      ;field separator
"RTN","MHV7U",270,0)
 N CS      ;component separator
"RTN","MHV7U",271,0)
 N RS      ;repetition separator
"RTN","MHV7U",272,0)
 N ES      ;escape character
"RTN","MHV7U",273,0)
 N SS      ;sub-component separator
"RTN","MHV7U",274,0)
 N L,STR,I
"RTN","MHV7U",275,0)
 ;
"RTN","MHV7U",276,0)
 S FS=HL("FS")
"RTN","MHV7U",277,0)
 S CS=$E(HL("ECH"))
"RTN","MHV7U",278,0)
 S RS=$E(HL("ECH"),2)
"RTN","MHV7U",279,0)
 S ES=$E(HL("ECH"),3)
"RTN","MHV7U",280,0)
 S SS=$E(HL("ECH"),4)
"RTN","MHV7U",281,0)
 ;
"RTN","MHV7U",282,0)
 I VAL[ES D
"RTN","MHV7U",283,0)
 . S L=$L(VAL,ES),STR=""
"RTN","MHV7U",284,0)
 . F I=1:1:L S $P(STR,ES_"E"_ES,I)=$P(VAL,ES,I)
"RTN","MHV7U",285,0)
 . S VAL=STR
"RTN","MHV7U",286,0)
 I VAL[FS D
"RTN","MHV7U",287,0)
 . S L=$L(VAL,FS),STR=""
"RTN","MHV7U",288,0)
 . F I=1:1:L S $P(STR,ES_"F"_ES,I)=$P(VAL,FS,I)
"RTN","MHV7U",289,0)
 . S VAL=STR
"RTN","MHV7U",290,0)
 I VAL[RS D
"RTN","MHV7U",291,0)
 . S L=$L(VAL,RS),STR=""
"RTN","MHV7U",292,0)
 . F I=1:1:L S $P(STR,ES_"R"_ES,I)=$P(VAL,RS,I)
"RTN","MHV7U",293,0)
 . S VAL=STR
"RTN","MHV7U",294,0)
 I VAL[CS D
"RTN","MHV7U",295,0)
 . S L=$L(VAL,CS),STR=""
"RTN","MHV7U",296,0)
 . F I=1:1:L S $P(STR,ES_"S"_ES,I)=$P(VAL,CS,I)
"RTN","MHV7U",297,0)
 . S VAL=STR
"RTN","MHV7U",298,0)
 I VAL[SS D
"RTN","MHV7U",299,0)
 . S L=$L(VAL,SS),STR=""
"RTN","MHV7U",300,0)
 . F I=1:1:L S $P(STR,ES_"T"_ES,I)=$P(VAL,SS,I)
"RTN","MHV7U",301,0)
 . S VAL=STR
"RTN","MHV7U",302,0)
 Q VAL
"RTN","MHV7U",303,0)
 ;
"RTN","MHV7U",304,0)
UNESC(VAL,HL) ;Reconstitute any escaped characters
"RTN","MHV7U",305,0)
 ;
"RTN","MHV7U",306,0)
 ;  Input:
"RTN","MHV7U",307,0)
 ;    VAL - Value to reconstitute
"RTN","MHV7U",308,0)
 ;     HL - HL7 environment array
"RTN","MHV7U",309,0)
 ;
"RTN","MHV7U",310,0)
 ;  Output:
"RTN","MHV7U",311,0)
 ;    VAL - passed by reference
"RTN","MHV7U",312,0)
 ;
"RTN","MHV7U",313,0)
 N FS      ;field separator
"RTN","MHV7U",314,0)
 N CS      ;component separator
"RTN","MHV7U",315,0)
 N RS      ;repetition separator
"RTN","MHV7U",316,0)
 N ES      ;escape character
"RTN","MHV7U",317,0)
 N SS      ;sub-component separator
"RTN","MHV7U",318,0)
 N L,STR,I,FESC,CESC,RESC,EESC,SESC
"RTN","MHV7U",319,0)
 ;
"RTN","MHV7U",320,0)
 S FS=HL("FS")
"RTN","MHV7U",321,0)
 S CS=$E(HL("ECH"))
"RTN","MHV7U",322,0)
 S RS=$E(HL("ECH"),2)
"RTN","MHV7U",323,0)
 S ES=$E(HL("ECH"),3)
"RTN","MHV7U",324,0)
 S SS=$E(HL("ECH"),4)
"RTN","MHV7U",325,0)
 S FESC=ES_"F"_ES
"RTN","MHV7U",326,0)
 S CESC=ES_"S"_ES
"RTN","MHV7U",327,0)
 S RESC=ES_"R"_ES
"RTN","MHV7U",328,0)
 S EESC=ES_"E"_ES
"RTN","MHV7U",329,0)
 S SESC=ES_"T"_ES
"RTN","MHV7U",330,0)
 ;
"RTN","MHV7U",331,0)
 I VAL'[ES Q VAL
"RTN","MHV7U",332,0)
 I VAL[FESC D
"RTN","MHV7U",333,0)
 . S L=$L(VAL,FESC),STR=""
"RTN","MHV7U",334,0)
 . F I=1:1:L S $P(STR,FS,I)=$P(VAL,FESC,I)
"RTN","MHV7U",335,0)
 . S VAL=STR
"RTN","MHV7U",336,0)
 I VAL[CESC D
"RTN","MHV7U",337,0)
 . S L=$L(VAL,CESC),STR=""
"RTN","MHV7U",338,0)
 . F I=1:1:L S $P(STR,CS,I)=$P(VAL,CESC,I)
"RTN","MHV7U",339,0)
 . S VAL=STR
"RTN","MHV7U",340,0)
 I VAL[RESC D
"RTN","MHV7U",341,0)
 . S L=$L(VAL,RESC),STR=""
"RTN","MHV7U",342,0)
 . F I=1:1:L S $P(STR,RS,I)=$P(VAL,RESC,I)
"RTN","MHV7U",343,0)
 . S VAL=STR
"RTN","MHV7U",344,0)
 I VAL[SESC D
"RTN","MHV7U",345,0)
 . S L=$L(VAL,SESC),STR=""
"RTN","MHV7U",346,0)
 . F I=1:1:L S $P(STR,SS,I)=$P(VAL,SESC,I)
"RTN","MHV7U",347,0)
 . S VAL=STR
"RTN","MHV7U",348,0)
 I VAL[EESC D
"RTN","MHV7U",349,0)
 . S L=$L(VAL,EESC),STR=""
"RTN","MHV7U",350,0)
 . F I=1:1:L S $P(STR,ES,I)=$P(VAL,EESC,I)
"RTN","MHV7U",351,0)
 . S VAL=STR
"RTN","MHV7U",352,0)
 Q VAL
"RTN","MHV7U",353,0)
 ;
"RTN","MHVUL1")
0^1^B38158397^n/a
"RTN","MHVUL1",1,0)
MHVUL1 ;WAS/GPM - MHV UTILITIES - LOGGING  ; 3/16/06 10:44pm [4/20/06 11:48am]
"RTN","MHVUL1",2,0)
 ;;1.0;My HealtheVet;**1**;Aug 23, 2005
"RTN","MHVUL1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHVUL1",4,0)
 ;
"RTN","MHVUL1",5,0)
 Q
"RTN","MHVUL1",6,0)
 ; Utilities supporting options/rpcs for logging
"RTN","MHVUL1",7,0)
 ;
"RTN","MHVUL1",8,0)
LOGON(RESULT,DELETE) ;Turn on logging
"RTN","MHVUL1",9,0)
 ;
"RTN","MHVUL1",10,0)
 ;  Input:
"RTN","MHVUL1",11,0)
 ;    DELETE - Deletion Date/Time - optional
"RTN","MHVUL1",12,0)
 ;             Fileman date/time
"RTN","MHVUL1",13,0)
 ;             Default 30 days from Today
"RTN","MHVUL1",14,0)
 ;
"RTN","MHVUL1",15,0)
 ;  Output:
"RTN","MHVUL1",16,0)
 ;    RESULT - success flag ^ deletion date/time ^ created date/time
"RTN","MHVUL1",17,0)
 ;
"RTN","MHVUL1",18,0)
 N UPDATE
"RTN","MHVUL1",19,0)
 S UPDATE("STATE")=1
"RTN","MHVUL1",20,0)
 S UPDATE("DELETE")=$G(DELETE)
"RTN","MHVUL1",21,0)
 D LOGSET(.RESULT,.UPDATE)
"RTN","MHVUL1",22,0)
 S RESULT=$P(RESULT,"^",1)_"^"_$P(RESULT,"^",3,4)
"RTN","MHVUL1",23,0)
 Q
"RTN","MHVUL1",24,0)
 ;
"RTN","MHVUL1",25,0)
LOGSET(RESULT,UPDATE) ; Set logging parameters
"RTN","MHVUL1",26,0)
 ;
"RTN","MHVUL1",27,0)
 ;  Input:
"RTN","MHVUL1",28,0)
 ;      UPDATE("STATE") - Flag 0/1
"RTN","MHVUL1",29,0)
 ;                        On or Off
"RTN","MHVUL1",30,0)
 ;     UPDATE("DELETE") - Deletion Date/Time
"RTN","MHVUL1",31,0)
 ;                        Fileman date/time
"RTN","MHVUL1",32,0)
 ;                        Default 30 days from Today
"RTN","MHVUL1",33,0)
 ;      UPDATE("LEVEL") - Logging level
"RTN","MHVUL1",34,0)
 ;                        Error, Trace, Debug, Name
"RTN","MHVUL1",35,0)
 ;                        Default - Trace
"RTN","MHVUL1",36,0)
 ;      UPDATE("NAMES") - Caret delimited list of log entry names
"RTN","MHVUL1",37,0)
 ;  UPDATE("AUTOPURGE") - Flag 0/1
"RTN","MHVUL1",38,0)
 ;                        Default - 0 Off
"RTN","MHVUL1",39,0)
 ;       UPDATE("DAYS") - Number of Days to keep
"RTN","MHVUL1",40,0)
 ;
"RTN","MHVUL1",41,0)
 ;  Output:
"RTN","MHVUL1",42,0)
 ;    RESULT - success flag ^ state ^ deletion date/time ^
"RTN","MHVUL1",43,0)
 ;             created date/time ^ level ^ names ^ autopurge ^ days
"RTN","MHVUL1",44,0)
 ;
"RTN","MHVUL1",45,0)
 N I,J,N,%DT,X,Y,STATE,DELETE,CREATED,TITLE,LEVEL,NAMES,AUTOPRG,DAYS,CURRENT
"RTN","MHVUL1",46,0)
 D LOGINFO(.CURRENT)
"RTN","MHVUL1",47,0)
 S STATE=$G(UPDATE("STATE"))
"RTN","MHVUL1",48,0)
 S DELETE=$G(UPDATE("DELETE"))
"RTN","MHVUL1",49,0)
 S LEVEL=$G(UPDATE("LEVEL"))
"RTN","MHVUL1",50,0)
 S NAMES=$G(UPDATE("NAMES"))
"RTN","MHVUL1",51,0)
 S AUTOPRG=$G(UPDATE("AUTOPURGE"))
"RTN","MHVUL1",52,0)
 S DAYS=$G(UPDATE("DAYS"))
"RTN","MHVUL1",53,0)
 ;
"RTN","MHVUL1",54,0)
 ;Set defaults
"RTN","MHVUL1",55,0)
 I STATE="",CURRENT("STATE")="" S STATE=0
"RTN","MHVUL1",56,0)
 I DELETE="",CURRENT("DELETE")="" S DELETE="T+30"
"RTN","MHVUL1",57,0)
 I STATE,DELETE="" S DELETE="T+30"
"RTN","MHVUL1",58,0)
 I LEVEL="",CURRENT("LEVEL")="" S LEVEL="TRACE"
"RTN","MHVUL1",59,0)
 I AUTOPRG="",CURRENT("AUTOPURGE")="" S AUTOPRG=0
"RTN","MHVUL1",60,0)
 ;
"RTN","MHVUL1",61,0)
 I STATE'="" D
"RTN","MHVUL1",62,0)
 . S ^XTMP("MHV7LOG",1)=+STATE
"RTN","MHVUL1",63,0)
 . S $P(RESULT,"^",2)=+STATE
"RTN","MHVUL1",64,0)
 . Q
"RTN","MHVUL1",65,0)
 ;
"RTN","MHVUL1",66,0)
 I DELETE'="" D
"RTN","MHVUL1",67,0)
 . S X=DELETE,%DT="TX" D ^%DT S DELETE=Y
"RTN","MHVUL1",68,0)
 . I DELETE<0 S DELETE=$$HTFM^XLFDT($H+30,1)
"RTN","MHVUL1",69,0)
 . S CREATED=$G(CURRENT("CREATED"))
"RTN","MHVUL1",70,0)
 . I CREATED="" S CREATED=$$HTFM^XLFDT($H,1)
"RTN","MHVUL1",71,0)
 . S TITLE=$G(CURRENT("TITLE"))
"RTN","MHVUL1",72,0)
 . I TITLE="" S TITLE="MHV Application Log"
"RTN","MHVUL1",73,0)
 . S ^XTMP("MHV7LOG",0)=DELETE_"^"_CREATED_"^"_TITLE
"RTN","MHVUL1",74,0)
 . S $P(RESULT,"^",3)=DELETE
"RTN","MHVUL1",75,0)
 . S $P(RESULT,"^",4)=CREATED
"RTN","MHVUL1",76,0)
 . Q
"RTN","MHVUL1",77,0)
 ;
"RTN","MHVUL1",78,0)
 I LEVEL'="" D
"RTN","MHVUL1",79,0)
 . S ^XTMP("MHV7LOG",1,"LEVEL","ERROR")=1
"RTN","MHVUL1",80,0)
 . S ^XTMP("MHV7LOG",1,"LEVEL","TRACE")=2
"RTN","MHVUL1",81,0)
 . S ^XTMP("MHV7LOG",1,"LEVEL","NAMED")=3
"RTN","MHVUL1",82,0)
 . S ^XTMP("MHV7LOG",1,"LEVEL","DEBUG")=4
"RTN","MHVUL1",83,0)
 . I ",ERROR,TRACE,NAMED,DEBUG,"'[(","_LEVEL_",") S LEVEL="TRACE"
"RTN","MHVUL1",84,0)
 . S ^XTMP("MHV7LOG",1,"LEVEL")=LEVEL
"RTN","MHVUL1",85,0)
 . S $P(RESULT,"^",5)=LEVEL
"RTN","MHVUL1",86,0)
 . Q
"RTN","MHVUL1",87,0)
 ;
"RTN","MHVUL1",88,0)
 I NAMES'="" D
"RTN","MHVUL1",89,0)
 . K ^XTMP("MHV7LOG",1,"NAMES")
"RTN","MHVUL1",90,0)
 . S ^XTMP("MHV7LOG",1,"NAMES")=NAMES
"RTN","MHVUL1",91,0)
 . F I=1:1:$L(NAMES,"^") S N=$P(NAMES,"^",I) S:N'="" ^XTMP("MHV7LOG",1,"NAMES",N)=""
"RTN","MHVUL1",92,0)
 . S $P(RESULT,"^",6)=NAMES
"RTN","MHVUL1",93,0)
 . Q
"RTN","MHVUL1",94,0)
 ;
"RTN","MHVUL1",95,0)
 I AUTOPRG'="" D
"RTN","MHVUL1",96,0)
 . I DAYS<1 S DAYS=7
"RTN","MHVUL1",97,0)
 . S ^XTMP("MHV7LOG",1,"AUTOPURGE")=+AUTOPRG
"RTN","MHVUL1",98,0)
 . S ^XTMP("MHV7LOG",1,"AUTOPURGE","DAYS")=+DAYS
"RTN","MHVUL1",99,0)
 . S $P(RESULT,"^",7)=+AUTOPRG
"RTN","MHVUL1",100,0)
 . S $P(RESULT,"^",8)=+DAYS
"RTN","MHVUL1",101,0)
 . Q
"RTN","MHVUL1",102,0)
 ;
"RTN","MHVUL1",103,0)
 S $P(RESULT,"^",1)=1
"RTN","MHVUL1",104,0)
 Q
"RTN","MHVUL1",105,0)
 ;
"RTN","MHVUL1",106,0)
LOGOFF(RESULT) ; Turn off logging
"RTN","MHVUL1",107,0)
 ;
"RTN","MHVUL1",108,0)
 ;  Input: none
"RTN","MHVUL1",109,0)
 ;
"RTN","MHVUL1",110,0)
 ;  Output:
"RTN","MHVUL1",111,0)
 ;    RESULT - success flag ^ deletion date/time
"RTN","MHVUL1",112,0)
 ;
"RTN","MHVUL1",113,0)
 S ^XTMP("MHV7LOG",1)=0
"RTN","MHVUL1",114,0)
 S RESULT="1^"_$P($G(^XTMP("MHV7LOG",0)),"^")
"RTN","MHVUL1",115,0)
 Q
"RTN","MHVUL1",116,0)
 ;
"RTN","MHVUL1",117,0)
LOGPRG(RESULT,DTM) ;Purge MHV application log
"RTN","MHVUL1",118,0)
 ;
"RTN","MHVUL1",119,0)
 ;  Input:
"RTN","MHVUL1",120,0)
 ;    DTM - Purge Date/Time - optional
"RTN","MHVUL1",121,0)
 ;          Fileman date/time
"RTN","MHVUL1",122,0)
 ;          Default to older than a week
"RTN","MHVUL1",123,0)
 ;
"RTN","MHVUL1",124,0)
 ;  Output:
"RTN","MHVUL1",125,0)
 ;    RESULT - success flag ^ purge date/time
"RTN","MHVUL1",126,0)
 ;
"RTN","MHVUL1",127,0)
 N %DT,X,Y
"RTN","MHVUL1",128,0)
 S X=$G(DTM),%DT="TX" D ^%DT S DTM=Y
"RTN","MHVUL1",129,0)
 I DTM<0 S DTM=$$HTFM^XLFDT($H-7,1)
"RTN","MHVUL1",130,0)
 S RESULT=DTM
"RTN","MHVUL1",131,0)
 S DTM=-DTM
"RTN","MHVUL1",132,0)
 F  S DTM=$O(^XTMP("MHV7LOG",2,DTM)) Q:DTM=""  K ^XTMP("MHV7LOG",2,DTM)
"RTN","MHVUL1",133,0)
 S RESULT="1^"_RESULT
"RTN","MHVUL1",134,0)
 Q
"RTN","MHVUL1",135,0)
 ;
"RTN","MHVUL1",136,0)
LOGINFO(RESULT) ; Get information about log
"RTN","MHVUL1",137,0)
 ;
"RTN","MHVUL1",138,0)
 ;  Input: none
"RTN","MHVUL1",139,0)
 ;
"RTN","MHVUL1",140,0)
 ;  Output:
"RTN","MHVUL1",141,0)
 ;    RESULT - log information
"RTN","MHVUL1",142,0)
 ;
"RTN","MHVUL1",143,0)
 K RESULT
"RTN","MHVUL1",144,0)
 S RESULT("HEAD")=$G(^XTMP("MHV7LOG",0))
"RTN","MHVUL1",145,0)
 S RESULT("DELETE")=$P(RESULT("HEAD"),"^",1)
"RTN","MHVUL1",146,0)
 S RESULT("CREATED")=$P(RESULT("HEAD"),"^",2)
"RTN","MHVUL1",147,0)
 S RESULT("TITLE")=$P(RESULT("HEAD"),"^",3)
"RTN","MHVUL1",148,0)
 S RESULT("STATE")=$G(^XTMP("MHV7LOG",1))
"RTN","MHVUL1",149,0)
 S RESULT("LEVEL")=$G(^XTMP("MHV7LOG",1,"LEVEL"))
"RTN","MHVUL1",150,0)
 S RESULT("NAMES")=$G(^XTMP("MHV7LOG",1,"NAMES"))
"RTN","MHVUL1",151,0)
 S RESULT("NEWEST")=-$O(^XTMP("MHV7LOG",2,""))
"RTN","MHVUL1",152,0)
 S RESULT("OLDEST")=-$O(^XTMP("MHV7LOG",2,""),-1)
"RTN","MHVUL1",153,0)
 S RESULT("AUTOPURGE")=$G(^XTMP("MHV7LOG",1,"AUTOPURGE"))
"RTN","MHVUL1",154,0)
 S RESULT("DAYS")=$G(^XTMP("MHV7LOG",1,"AUTOPURGE","DAYS"))
"RTN","MHVUL1",155,0)
 Q
"RTN","MHVUL1",156,0)
 ;
"RTN","MHVUL1",157,0)
LOGSIZE(RESULT) ; Get log size information
"RTN","MHVUL1",158,0)
 ;
"RTN","MHVUL1",159,0)
 ;  Input: none
"RTN","MHVUL1",160,0)
 ;
"RTN","MHVUL1",161,0)
 ;  Output:
"RTN","MHVUL1",162,0)
 ;    RESULT - log size information
"RTN","MHVUL1",163,0)
 ;
"RTN","MHVUL1",164,0)
 K RESULT
"RTN","MHVUL1",165,0)
 S RESULT("ENTRY COUNT")=0
"RTN","MHVUL1",166,0)
 S RESULT("NODE COUNT")=0
"RTN","MHVUL1",167,0)
 S RESULT("BYTE COUNT")=0
"RTN","MHVUL1",168,0)
 N DTM,I,J,BASE,LBASE
"RTN","MHVUL1",169,0)
 S DTM="",J=""
"RTN","MHVUL1",170,0)
 F  S DTM=$O(^XTMP("MHV7LOG",2,DTM)) Q:DTM=""  D
"RTN","MHVUL1",171,0)
 . F  S J=$O(^XTMP("MHV7LOG",2,DTM,J)) Q:J=""  D
"RTN","MHVUL1",172,0)
 .. S RESULT("ENTRY COUNT")=RESULT("ENTRY COUNT")+1
"RTN","MHVUL1",173,0)
 .. S BASE="^XTMP(""MHV7LOG"",2,"_DTM_","_J
"RTN","MHVUL1",174,0)
 .. S I=BASE_")"
"RTN","MHVUL1",175,0)
 .. S LBASE=$L(BASE)
"RTN","MHVUL1",176,0)
 .. F  S I=$Q(@I) Q:$E(I,1,LBASE)'=BASE  D
"RTN","MHVUL1",177,0)
 ... S RESULT("NODE COUNT")=RESULT("NODE COUNT")+1
"RTN","MHVUL1",178,0)
 ... S RESULT("BYTE COUNT")=RESULT("BYTE COUNT")+$L(I)+$L(@I)-LBASE
"RTN","MHVUL1",179,0)
 ... Q
"RTN","MHVUL1",180,0)
 .. Q
"RTN","MHVUL1",181,0)
 . Q
"RTN","MHVUL1",182,0)
 Q
"RTN","MHVUL1",183,0)
 ;
"RTN","MHVUL1",184,0)
LOGSUM(RESULT) ; Retrieve log summary
"RTN","MHVUL1",185,0)
 ;
"RTN","MHVUL1",186,0)
 ;  Input: none
"RTN","MHVUL1",187,0)
 ;    
"RTN","MHVUL1",188,0)
 ;  Output:
"RTN","MHVUL1",189,0)
 ;    RESULT - Global Root of Result Array
"RTN","MHVUL1",190,0)
 ;             @RESULT - success flag ^ message or entry count ^ name
"RTN","MHVUL1",191,0)
 ;             @RESULT@(n)=nth entry of log
"RTN","MHVUL1",192,0)
 ;
"RTN","MHVUL1",193,0)
 N CNT,DTM,J,NAME,ENTRYCNT
"RTN","MHVUL1",194,0)
 S RESULT="^TMP(""MHV LOG SUMMARY"",$J)"
"RTN","MHVUL1",195,0)
 K @RESULT
"RTN","MHVUL1",196,0)
 S CNT=0,DTM="",J=""
"RTN","MHVUL1",197,0)
 F  S DTM=$O(^XTMP("MHV7LOG",2,DTM)) Q:DTM=""  D
"RTN","MHVUL1",198,0)
 . F  S J=$O(^XTMP("MHV7LOG",2,DTM,J)) Q:J=""  D
"RTN","MHVUL1",199,0)
 .. S CNT=CNT+1
"RTN","MHVUL1",200,0)
 .. S NAME=$O(^XTMP("MHV7LOG",2,DTM,J,1,""))
"RTN","MHVUL1",201,0)
 .. S ENTRYCNT=$G(^XTMP("MHV7LOG",2,DTM,J))
"RTN","MHVUL1",202,0)
 .. S @RESULT@(CNT)=DTM_"^"_J_"^"_ENTRYCNT_"^"_NAME
"RTN","MHVUL1",203,0)
 .. Q
"RTN","MHVUL1",204,0)
 . Q
"RTN","MHVUL1",205,0)
 S @RESULT="1^"_CNT_"^"
"RTN","MHVUL1",206,0)
 Q
"RTN","MHVUL1",207,0)
 ;
"RTN","MHVUL1",208,0)
LOGDET(RESULT,DTM,JOB) ; Retrieve log entry detail
"RTN","MHVUL1",209,0)
 ;
"RTN","MHVUL1",210,0)
 ;  Input:
"RTN","MHVUL1",211,0)
 ;        DTM - Log Entry Date/Time
"RTN","MHVUL1",212,0)
 ;              - Fileman date/time
"RTN","MHVUL1",213,0)
 ;        JOB - Job Number
"RTN","MHVUL1",214,0)
 ;
"RTN","MHVUL1",215,0)
 ;  Output:
"RTN","MHVUL1",216,0)
 ;    RESULT - Global Root of Result Array
"RTN","MHVUL1",217,0)
 ;             @RESULT - success flag ^ message or node count
"RTN","MHVUL1",218,0)
 ;             @RESULT@(0)= log entry header
"RTN","MHVUL1",219,0)
 ;             @RESULT@(n)=nth node of entry
"RTN","MHVUL1",220,0)
 ;
"RTN","MHVUL1",221,0)
 N CNT,BASE,I,LBASE
"RTN","MHVUL1",222,0)
 S RESULT="^TMP(""MHV LOG DETAIL"",$J)"
"RTN","MHVUL1",223,0)
 K @RESULT
"RTN","MHVUL1",224,0)
 I '$D(^XTMP("MHV7LOG",2,DTM)) S @RESULT="0^NO SUCH ENTRY"
"RTN","MHVUL1",225,0)
 I '$D(^XTMP("MHV7LOG",2,DTM,JOB)) S @RESULT="0^NO SUCH ENTRY"
"RTN","MHVUL1",226,0)
 ;
"RTN","MHVUL1",227,0)
 S BASE="^XTMP(""MHV7LOG"",2,"_DTM_","_JOB
"RTN","MHVUL1",228,0)
 S I=BASE_")"
"RTN","MHVUL1",229,0)
 S BASE=BASE_","
"RTN","MHVUL1",230,0)
 S LBASE=$L(BASE)
"RTN","MHVUL1",231,0)
 S CNT=0
"RTN","MHVUL1",232,0)
 S @RESULT@(0)=DTM_"^"_JOB_"^"_$G(^XTMP("MHV7LOG",2,DTM,JOB))
"RTN","MHVUL1",233,0)
 F  S I=$Q(@I) Q:$E(I,1,LBASE)'=BASE  D
"RTN","MHVUL1",234,0)
 . S CNT=CNT+1
"RTN","MHVUL1",235,0)
 . S @RESULT@(CNT)=$P(I,BASE,2)_" = "_@I
"RTN","MHVUL1",236,0)
 . Q
"RTN","MHVUL1",237,0)
 S @RESULT="1^"_CNT
"RTN","MHVUL1",238,0)
 Q
"RTN","MHVUL1",239,0)
 ;
"RTN","MHVUL2")
0^2^B24353171^n/a
"RTN","MHVUL2",1,0)
MHVUL2 ;WAS/GPM - MHV UTILITIES - LOGGING  ; 3/2/06 5:38pm [4/19/06 2:30pm]
"RTN","MHVUL2",2,0)
 ;;1.0;My HealtheVet;**1**;Aug 23, 2005
"RTN","MHVUL2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHVUL2",4,0)
 ;
"RTN","MHVUL2",5,0)
 Q
"RTN","MHVUL2",6,0)
 ;
"RTN","MHVUL2",7,0)
LOG(NAME,DATA,TYPE,LEVEL) ;Log to MHV application log
"RTN","MHVUL2",8,0)
 ;
"RTN","MHVUL2",9,0)
 ;  Input:
"RTN","MHVUL2",10,0)
 ;    NAME - Name to identify log entry
"RTN","MHVUL2",11,0)
 ;    DATA - Value,Tree, or Name of structure to put in log
"RTN","MHVUL2",12,0)
 ;    TYPE - Type of log entry
"RTN","MHVUL2",13,0)
 ;              S:Set Single Value
"RTN","MHVUL2",14,0)
 ;              M:Merge Tree 
"RTN","MHVUL2",15,0)
 ;              I:Indirect Merge @
"RTN","MHVUL2",16,0)
 ;   LEVEL - Level of log entry - ERROR,TRACE,NAMED,DEBUG
"RTN","MHVUL2",17,0)
 ;
"RTN","MHVUL2",18,0)
 ;  Output:
"RTN","MHVUL2",19,0)
 ;    Adds entry to log
"RTN","MHVUL2",20,0)
 ;
"RTN","MHVUL2",21,0)
 ; ^XTMP("MHV7LOG",0) - Head of log file
"RTN","MHVUL2",22,0)
 ; ^XTMP("MHV7LOG",1) - if set indicates that logging is on
"RTN","MHVUL2",23,0)
 ; ^XTMP("MHV7LOG",1,"LEVEL") - logging level
"RTN","MHVUL2",24,0)
 ; ^XTMP("MHV7LOG",1,"LEVEL",LEVEL) = rank
"RTN","MHVUL2",25,0)
 ; ^XTMP("MHV7LOG",1,"NAMES",) - names to log caret delimited string
"RTN","MHVUL2",26,0)
 ; ^XTMP("MHV7LOG",1,"NAMES",NAME) - name to log
"RTN","MHVUL2",27,0)
 ; ^XTMP("MHV7LOG",2) - contains the log
"RTN","MHVUL2",28,0)
 ; ^XTMP("MHV7LOG",2,negated FM timestamp,$J,counter,NAME) - log entry
"RTN","MHVUL2",29,0)
 ;
"RTN","MHVUL2",30,0)
 ; ^TMP("MHV7LOG",$J) - Session current log entry (DTM)
"RTN","MHVUL2",31,0)
 ;
"RTN","MHVUL2",32,0)
 ;Quit if logging is not turned on
"RTN","MHVUL2",33,0)
 Q:'$G(^XTMP("MHV7LOG",1))
"RTN","MHVUL2",34,0)
 N DTM,CNT,LOGLEVEL
"RTN","MHVUL2",35,0)
 ;
"RTN","MHVUL2",36,0)
 Q:'$D(DATA)
"RTN","MHVUL2",37,0)
 Q:$G(TYPE)=""
"RTN","MHVUL2",38,0)
 Q:$G(NAME)=""
"RTN","MHVUL2",39,0)
 S NAME=$TR(NAME,"^","-")
"RTN","MHVUL2",40,0)
 ;
"RTN","MHVUL2",41,0)
 ;If LEVEL is null or unknown default to DEBUG
"RTN","MHVUL2",42,0)
 I $G(LEVEL)="" S LEVEL="DEBUG"
"RTN","MHVUL2",43,0)
 I '$D(^XTMP("MHV7LOG",1,"LEVEL",LEVEL)) S LEVEL="DEBUG"
"RTN","MHVUL2",44,0)
 ;
"RTN","MHVUL2",45,0)
 ;Log entries at or lower than the current logging level set
"RTN","MHVUL2",46,0)
 ;Levels are ranked as follows:
"RTN","MHVUL2",47,0)
 ;  ^XTMP("MHV7LOG",1,"LEVEL","ERROR")=1
"RTN","MHVUL2",48,0)
 ;  ^XTMP("MHV7LOG",1,"LEVEL","TRACE")=2
"RTN","MHVUL2",49,0)
 ;  ^XTMP("MHV7LOG",1,"LEVEL","NAMED")=3
"RTN","MHVUL2",50,0)
 ;  ^XTMP("MHV7LOG",1,"LEVEL","DEBUG")=4
"RTN","MHVUL2",51,0)
 ;Named is like a filtered version of debug.
"RTN","MHVUL2",52,0)
 ;Additional levels may be added, and ranks changed without affecting
"RTN","MHVUL2",53,0)
 ;the LOG api.  Inserting a level between Named and Debug will require
"RTN","MHVUL2",54,0)
 ;a change to the conditional below.
"RTN","MHVUL2",55,0)
 S LOGLEVEL=$G(^XTMP("MHV7LOG",1,"LEVEL"))
"RTN","MHVUL2",56,0)
 I LOGLEVEL="" S LOGLEVEL="TRACE"
"RTN","MHVUL2",57,0)
 I $G(^XTMP("MHV7LOG",1,"LEVEL",LEVEL))>$G(^XTMP("MHV7LOG",1,"LEVEL",LOGLEVEL)) Q:LOGLEVEL'="NAMED"  Q:'$D(^XTMP("MHV7LOG",1,"NAMES",NAME))
"RTN","MHVUL2",58,0)
 ;
"RTN","MHVUL2",59,0)
 ; Check ^TMP("MHV7LOG",$J) If no current log node start a new node
"RTN","MHVUL2",60,0)
 I '$G(^TMP("MHV7LOG",$J)) D
"RTN","MHVUL2",61,0)
 . S DTM=-$$NOW^XLFDT()
"RTN","MHVUL2",62,0)
 . K ^XTMP("MHV7LOG",2,DTM,$J)
"RTN","MHVUL2",63,0)
 . S ^TMP("MHV7LOG",$J)=DTM
"RTN","MHVUL2",64,0)
 . S CNT=1
"RTN","MHVUL2",65,0)
 . S ^XTMP("MHV7LOG",2,DTM,$J)=CNT
"RTN","MHVUL2",66,0)
 . D AUTOPRG
"RTN","MHVUL2",67,0)
 . Q
"RTN","MHVUL2",68,0)
 E  D
"RTN","MHVUL2",69,0)
 . S DTM=^TMP("MHV7LOG",$J)
"RTN","MHVUL2",70,0)
 . S CNT=$G(^XTMP("MHV7LOG",2,DTM,$J))+1
"RTN","MHVUL2",71,0)
 . S ^XTMP("MHV7LOG",2,DTM,$J)=CNT
"RTN","MHVUL2",72,0)
 . Q
"RTN","MHVUL2",73,0)
 ;
"RTN","MHVUL2",74,0)
 I TYPE="S" S ^XTMP("MHV7LOG",2,DTM,$J,CNT,NAME)=DATA Q
"RTN","MHVUL2",75,0)
 I TYPE="M" M ^XTMP("MHV7LOG",2,DTM,$J,CNT,NAME)=DATA Q
"RTN","MHVUL2",76,0)
 I TYPE="I" M ^XTMP("MHV7LOG",2,DTM,$J,CNT,NAME)=@DATA Q
"RTN","MHVUL2",77,0)
 ;
"RTN","MHVUL2",78,0)
 Q
"RTN","MHVUL2",79,0)
 ;
"RTN","MHVUL2",80,0)
AUTOPRG ;
"RTN","MHVUL2",81,0)
 Q:'$G(^XTMP("MHV7LOG",1,"AUTOPURGE"))
"RTN","MHVUL2",82,0)
 N DT,DAYS,RESULT
"RTN","MHVUL2",83,0)
 ; Purge only once per day
"RTN","MHVUL2",84,0)
 S DT=$$DT^XLFDT
"RTN","MHVUL2",85,0)
 Q:$G(^XTMP("MHV7LOG",1,"AUTOPURGE","PURGE DATE"))=DT
"RTN","MHVUL2",86,0)
 ;
"RTN","MHVUL2",87,0)
 S DAYS=$G(^XTMP("MHV7LOG",1,"AUTOPURGE","DAYS"))
"RTN","MHVUL2",88,0)
 I DAYS<1 S DAYS=7
"RTN","MHVUL2",89,0)
 ;
"RTN","MHVUL2",90,0)
 D LOGPRG^MHVUL1(.RESULT,$$HTFM^XLFDT($H-DAYS,1))
"RTN","MHVUL2",91,0)
 S ^XTMP("MHV7LOG",1,"AUTOPURGE","PURGE DATE")=DT
"RTN","MHVUL2",92,0)
 Q
"RTN","MHVUL2",93,0)
 ;
"RTN","MHVUL2",94,0)
LOGBROWS ; Browser view of Log
"RTN","MHVUL2",95,0)
 N LOG,CNT,DTM,JOB,NUM,NAME,DIR,DIRUT,X,Y
"RTN","MHVUL2",96,0)
 K ^TMP("MHV LOG SUMMARY",$J)
"RTN","MHVUL2",97,0)
 K ^TMP("MHV LOG DETAIL",$J)
"RTN","MHVUL2",98,0)
 K ^TMP("MHV LOG BROWSE",$J)
"RTN","MHVUL2",99,0)
 K ^TMP("MHV LOG BROWSE DETAIL",$J)
"RTN","MHVUL2",100,0)
 D LOGSUM^MHVUL1(.LOG)
"RTN","MHVUL2",101,0)
 S CNT=$P(@LOG,"^",2)
"RTN","MHVUL2",102,0)
 I CNT<1 D  Q
"RTN","MHVUL2",103,0)
 . W !!,?12,"LOG IS EMPTY"
"RTN","MHVUL2",104,0)
 . K DIR,DIRUT,X,Y
"RTN","MHVUL2",105,0)
 . S DIR(0)="E"
"RTN","MHVUL2",106,0)
 . D ^DIR
"RTN","MHVUL2",107,0)
 . Q
"RTN","MHVUL2",108,0)
 F I=1:1:CNT D
"RTN","MHVUL2",109,0)
 . S DTM=$P(@LOG@(I),"^")
"RTN","MHVUL2",110,0)
 . S JOB=$P(@LOG@(I),"^",2)
"RTN","MHVUL2",111,0)
 . S NUM=$P(@LOG@(I),"^",3)
"RTN","MHVUL2",112,0)
 . S NAME=$E($P(@LOG@(I),"^",4)_$J("",20),1,20)
"RTN","MHVUL2",113,0)
 . S ^TMP("MHV LOG BROWSE",$J,I)="$.%$CREF$^TMP(""MHV LOG BROWSE DETAIL"",$J,"_I_")$CREF$^"_NAME_"$.%"_$J($$FMTE^XLFDT(-DTM),22)_$J(JOB,13)_"    "_NUM
"RTN","MHVUL2",114,0)
 . S ^TMP("MHV LOG BROWSE DETAIL",$J,I)="$XC$^D LOGBDET^MHVUL2("_I_","_DTM_","_JOB_")$XC$^"_NAME_"  "_$$FMTE^XLFDT(-DTM)_"  "_JOB
"RTN","MHVUL2",115,0)
 . Q
"RTN","MHVUL2",116,0)
 D LOGBTITL
"RTN","MHVUL2",117,0)
 S TITLE="Log Entry            Timestamp                Job Number   Items"
"RTN","MHVUL2",118,0)
 D BROWSE^DDBR("^TMP(""MHV LOG BROWSE"",$J)","NA",TITLE_$J("",80-$L(TITLE)),"","",3,24)
"RTN","MHVUL2",119,0)
 K ^TMP("MHV LOG SUMMARY",$J)
"RTN","MHVUL2",120,0)
 K ^TMP("MHV LOG DETAIL",$J)
"RTN","MHVUL2",121,0)
 K ^TMP("MHV LOG BROWSE",$J)
"RTN","MHVUL2",122,0)
 K ^TMP("MHV LOG BROWSE DETAIL",$J)
"RTN","MHVUL2",123,0)
 Q
"RTN","MHVUL2",124,0)
 ;
"RTN","MHVUL2",125,0)
LOGBTITL ; Build Titles for Browser
"RTN","MHVUL2",126,0)
 N TITLE,INFO,TLOG,TPRG,TAUT,TLEN
"RTN","MHVUL2",127,0)
 D LOGINFO^MHVUL1(.INFO)
"RTN","MHVUL2",128,0)
 S TLOG="Logging: "_$S(INFO("STATE"):"",1:"OFF")
"RTN","MHVUL2",129,0)
 I INFO("STATE") S TLOG=TLOG_INFO("LEVEL")
"RTN","MHVUL2",130,0)
 S TAUT="Auto Purge: "_$S(INFO("AUTOPURGE"):"",1:"OFF")
"RTN","MHVUL2",131,0)
 I INFO("AUTOPURGE") S TAUT=TAUT_+INFO("DAYS")_" days"
"RTN","MHVUL2",132,0)
 S TPRG="Delete: "_$$FMTE^XLFDT(INFO("DELETE"))
"RTN","MHVUL2",133,0)
 ;
"RTN","MHVUL2",134,0)
 S TITLE="MHV APPLICATION LOG"
"RTN","MHVUL2",135,0)
 S TLEN=$L(TITLE)
"RTN","MHVUL2",136,0)
 W @IOF,$J(TITLE,TLEN\2+40)_$J(TPRG,40-(TLEN\2))
"RTN","MHVUL2",137,0)
 S TITLE=$J(TLOG_"   ",15)_$J(TAUT,63)
"RTN","MHVUL2",138,0)
 W !,TITLE
"RTN","MHVUL2",139,0)
 Q
"RTN","MHVUL2",140,0)
 ;
"RTN","MHVUL2",141,0)
LOGBDET(NODE,DTM,JOB) ; Build document from entry for Browser
"RTN","MHVUL2",142,0)
 N I,CNT,LINE,ENTRY
"RTN","MHVUL2",143,0)
 D LOGDET^MHVUL1(.ENTRY,DTM,JOB)
"RTN","MHVUL2",144,0)
 S I=0
"RTN","MHVUL2",145,0)
 S CNT=0
"RTN","MHVUL2",146,0)
 F  S I=$O(@ENTRY@(I)) Q:I=""  D
"RTN","MHVUL2",147,0)
 . S LINE=@ENTRY@(I)
"RTN","MHVUL2",148,0)
 . S CNT=CNT+1
"RTN","MHVUL2",149,0)
 . S ^TMP("MHV LOG BROWSE DETAIL",$J,NODE,CNT)=$E(LINE,1,80)
"RTN","MHVUL2",150,0)
 . S LINE=$E(LINE,81,999999)
"RTN","MHVUL2",151,0)
 . F  Q:LINE=""  D
"RTN","MHVUL2",152,0)
 .. S CNT=CNT+1
"RTN","MHVUL2",153,0)
 .. S ^TMP("MHV LOG BROWSE DETAIL",$J,NODE,CNT)=$J("",9)_$E(LINE,1,71)
"RTN","MHVUL2",154,0)
 .. S LINE=$E(LINE,72,999999)
"RTN","MHVUL2",155,0)
 .. Q
"RTN","MHVUL2",156,0)
 . Q
"RTN","MHVUL2",157,0)
 Q
"RTN","MHVUL2",158,0)
 ;
"RTN","MHVUL3")
0^3^B77590189^n/a
"RTN","MHVUL3",1,0)
MHVUL3 ;WAS/GPM - MHV UTILITIES - LOGGING  ; 3/17/06 12:03am [5/24/06 10:18am]
"RTN","MHVUL3",2,0)
 ;;1.0;My HealtheVet;**1**;Aug 23, 2005
"RTN","MHVUL3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHVUL3",4,0)
 ;
"RTN","MHVUL3",5,0)
 Q
"RTN","MHVUL3",6,0)
 ; Utilities supporting user options for logging
"RTN","MHVUL3",7,0)
 ;
"RTN","MHVUL3",8,0)
LOGONO ; Turn on logging
"RTN","MHVUL3",9,0)
 N RESULT,DIR,DIRUT,DA,X,Y,DTM,%DT
"RTN","MHVUL3",10,0)
 D LOGINFOO
"RTN","MHVUL3",11,0)
 W !
"RTN","MHVUL3",12,0)
 D LOGINFO^MHVUL1(.RESULT)
"RTN","MHVUL3",13,0)
 I RESULT("DELETE")="" S RESULT("DELETE")=$$HTFM^XLFDT($H+30,1)
"RTN","MHVUL3",14,0)
 ;
"RTN","MHVUL3",15,0)
 ; If logging is already on prompt if want to change deletion date
"RTN","MHVUL3",16,0)
 I RESULT("STATE") D  Q:$D(DIRUT)!'Y
"RTN","MHVUL3",17,0)
 . S DIR(0)="Y"
"RTN","MHVUL3",18,0)
 . S DIR("A",1)="Logging is already turned on."
"RTN","MHVUL3",19,0)
 . S DIR("A")="Reset deletion date"
"RTN","MHVUL3",20,0)
 . S DIR("?",1)="MHV application logging is already active."
"RTN","MHVUL3",21,0)
 . S DIR("?")="You may enter a new deletion date for the log."
"RTN","MHVUL3",22,0)
 . S DIR("B")="NO"
"RTN","MHVUL3",23,0)
 . D ^DIR
"RTN","MHVUL3",24,0)
 . Q
"RTN","MHVUL3",25,0)
 ;
"RTN","MHVUL3",26,0)
 ; Prompt for deletion date
"RTN","MHVUL3",27,0)
 K DIR,DIRUT,DA,X,Y
"RTN","MHVUL3",28,0)
 S DIR(0)="DA^"_DT_"::TX"
"RTN","MHVUL3",29,0)
 S DIR("A")="Log Deletion Date: "
"RTN","MHVUL3",30,0)
 S DIR("?",1)="Enter a future date to delete MHV application log."
"RTN","MHVUL3",31,0)
 S DIR("?",2)="After this date logging will automatically be stopped,"
"RTN","MHVUL3",32,0)
 S DIR("?")="and all log entries permanently deleted."
"RTN","MHVUL3",33,0)
 S DIR("B")=$$FMTE^XLFDT(RESULT("DELETE"),1)
"RTN","MHVUL3",34,0)
 D ^DIR Q:$D(DIRUT)
"RTN","MHVUL3",35,0)
 ;
"RTN","MHVUL3",36,0)
 D LOGON^MHVUL1(.RESULT,Y)
"RTN","MHVUL3",37,0)
 W !!,"MHV application logging switched on."
"RTN","MHVUL3",38,0)
 W !,"Log will be deleted on "_$$FMTE^XLFDT($P(RESULT,"^",2),1)_"."
"RTN","MHVUL3",39,0)
 Q
"RTN","MHVUL3",40,0)
 ;
"RTN","MHVUL3",41,0)
LOGSETO ; Set logging parameters
"RTN","MHVUL3",42,0)
 N RESULT,UPDATE,DIR,DIRUT,DA,X,Y,DTM,%DT,N,I
"RTN","MHVUL3",43,0)
 D LOGINFOO
"RTN","MHVUL3",44,0)
 W !
"RTN","MHVUL3",45,0)
 D LOGINFO^MHVUL1(.UPDATE)
"RTN","MHVUL3",46,0)
 ;
"RTN","MHVUL3",47,0)
 ; State ON/OFF
"RTN","MHVUL3",48,0)
 K DIR,DIRUT,DA,X,Y
"RTN","MHVUL3",49,0)
 S DIR(0)="SA^1:ON;0:OFF"
"RTN","MHVUL3",50,0)
 S DIR("A")="Logging: "
"RTN","MHVUL3",51,0)
 S DIR("?")="Enter ON or OFF"
"RTN","MHVUL3",52,0)
 S DIR("B")=$S(UPDATE("STATE"):"ON",1:"OFF")
"RTN","MHVUL3",53,0)
 D ^DIR
"RTN","MHVUL3",54,0)
 Q:$D(DIRUT)
"RTN","MHVUL3",55,0)
 S UPDATE("STATE")=Y
"RTN","MHVUL3",56,0)
 ;
"RTN","MHVUL3",57,0)
 ; Deletion Date
"RTN","MHVUL3",58,0)
 K DIR,DIRUT,DA,X,Y
"RTN","MHVUL3",59,0)
 S DIR(0)="DA^"_DT_"::TX"
"RTN","MHVUL3",60,0)
 S DIR("A")="Log Deletion Date: "
"RTN","MHVUL3",61,0)
 S DIR("?",1)="Enter a future date to delete MHV application log."
"RTN","MHVUL3",62,0)
 S DIR("?",2)="After this date logging will automatically be stopped,"
"RTN","MHVUL3",63,0)
 S DIR("?")="and all log entries permanently deleted."
"RTN","MHVUL3",64,0)
 S DIR("B")=$$FMTE^XLFDT(UPDATE("DELETE"))
"RTN","MHVUL3",65,0)
 D ^DIR Q:$D(DIRUT)
"RTN","MHVUL3",66,0)
 S UPDATE("DELETE")=Y
"RTN","MHVUL3",67,0)
 ;
"RTN","MHVUL3",68,0)
 ; Logging Level
"RTN","MHVUL3",69,0)
 K DIR,DIRUT,DA,X,Y
"RTN","MHVUL3",70,0)
 S DIR(0)="SA^E:ERROR;T:TRACE;N:NAMED;D:DEBUG"
"RTN","MHVUL3",71,0)
 S DIR("A")="Logging Level? "
"RTN","MHVUL3",72,0)
 S DIR("?",1)="Set logging level"
"RTN","MHVUL3",73,0)
 S DIR("?",2)="ERROR - only errors logged"
"RTN","MHVUL3",74,0)
 S DIR("?",3)="TRACE - Trace and errors logged"
"RTN","MHVUL3",75,0)
 S DIR("?",4)="NAMED - Named entries, trace and errors logged"
"RTN","MHVUL3",76,0)
 S DIR("?")="DEBUG - All entries logged"
"RTN","MHVUL3",77,0)
 S DIR("B")=UPDATE("LEVEL")
"RTN","MHVUL3",78,0)
 D ^DIR
"RTN","MHVUL3",79,0)
 Q:$D(DIRUT)
"RTN","MHVUL3",80,0)
 S UPDATE("LEVEL")=Y(0)
"RTN","MHVUL3",81,0)
 ;
"RTN","MHVUL3",82,0)
 ; Names
"RTN","MHVUL3",83,0)
 I UPDATE("LEVEL")="NAMED" D
"RTN","MHVUL3",84,0)
 . S N=UPDATE("NAMES")
"RTN","MHVUL3",85,0)
 . F I=2:1:$L(N,"^") S:$P(N,"^",I)'="" UPDATE("NAMES",$P(N,"^",I))=""
"RTN","MHVUL3",86,0)
 . F  D  Q:$D(DIRUT)
"RTN","MHVUL3",87,0)
 .. K DIR,DIRUT,DA,X,Y
"RTN","MHVUL3",88,0)
 .. S DIR(0)="FO^"
"RTN","MHVUL3",89,0)
 .. S DIR("A")="Entry name"
"RTN","MHVUL3",90,0)
 .. S DIR("A",1)=UPDATE("NAMES")
"RTN","MHVUL3",91,0)
 .. S DIR("?",1)="Enter names of entries to log"
"RTN","MHVUL3",92,0)
 .. S DIR("?")="Remove entries by prefixing with @"
"RTN","MHVUL3",93,0)
 .. S DIR("B")=""
"RTN","MHVUL3",94,0)
 .. D ^DIR
"RTN","MHVUL3",95,0)
 .. Q:$D(DIRUT)
"RTN","MHVUL3",96,0)
 .. I $E(Y)="@" K UPDATE("NAMES",$E(Y,2,$L(Y)))
"RTN","MHVUL3",97,0)
 .. E  S UPDATE("NAMES",Y)=""
"RTN","MHVUL3",98,0)
 .. S UPDATE("NAMES")="^",N=""
"RTN","MHVUL3",99,0)
 .. F  S N=$O(UPDATE("NAMES",N)) Q:N=""  S UPDATE("NAMES")=UPDATE("NAMES")_N_"^"
"RTN","MHVUL3",100,0)
 .. Q
"RTN","MHVUL3",101,0)
 . Q
"RTN","MHVUL3",102,0)
 ;
"RTN","MHVUL3",103,0)
 ; Auto Purge ON/OFF
"RTN","MHVUL3",104,0)
 K DIR,DIRUT,DA,X,Y
"RTN","MHVUL3",105,0)
 S DIR(0)="SA^1:ON;0:OFF"
"RTN","MHVUL3",106,0)
 S DIR("A")="Auto Purge: "
"RTN","MHVUL3",107,0)
 S DIR("?")="Enter ON or OFF"
"RTN","MHVUL3",108,0)
 S DIR("B")=$S(UPDATE("AUTOPURGE"):"ON",1:"OFF")
"RTN","MHVUL3",109,0)
 D ^DIR
"RTN","MHVUL3",110,0)
 Q:$D(DIRUT)
"RTN","MHVUL3",111,0)
 S UPDATE("AUTOPURGE")=Y
"RTN","MHVUL3",112,0)
 ;
"RTN","MHVUL3",113,0)
 ; Days to Keep
"RTN","MHVUL3",114,0)
 I UPDATE("AUTOPURGE") D  Q:$D(DIRUT)
"RTN","MHVUL3",115,0)
 . I 'UPDATE("DAYS") S UPDATE("DAYS")=7
"RTN","MHVUL3",116,0)
 . K DIR,DIRUT,DA,X,Y
"RTN","MHVUL3",117,0)
 . S DIR(0)="N^1:365"
"RTN","MHVUL3",118,0)
 . S DIR("A")="Days to Keep"
"RTN","MHVUL3",119,0)
 . S DIR("?")="Enter number of days to keep log entries"
"RTN","MHVUL3",120,0)
 . S DIR("B")=UPDATE("DAYS")
"RTN","MHVUL3",121,0)
 . D ^DIR
"RTN","MHVUL3",122,0)
 . S UPDATE("DAYS")=Y
"RTN","MHVUL3",123,0)
 . Q
"RTN","MHVUL3",124,0)
 ;
"RTN","MHVUL3",125,0)
 W !!,"New MHV Application Log Settings:"
"RTN","MHVUL3",126,0)
 D LOGINFOD(.UPDATE)
"RTN","MHVUL3",127,0)
 W !
"RTN","MHVUL3",128,0)
 S DIR(0)="Y"
"RTN","MHVUL3",129,0)
 S DIR("A")="Ok to proceed with update"
"RTN","MHVUL3",130,0)
 S DIR("?")="Update logging parameters with those shown?"
"RTN","MHVUL3",131,0)
 S DIR("B")="NO"
"RTN","MHVUL3",132,0)
 D ^DIR Q:$D(DIRUT)
"RTN","MHVUL3",133,0)
 I 'Y Q
"RTN","MHVUL3",134,0)
 ;
"RTN","MHVUL3",135,0)
 D LOGSET^MHVUL1(.RESULT,.UPDATE)
"RTN","MHVUL3",136,0)
 W !!,"Logging parameters updated"
"RTN","MHVUL3",137,0)
 D LOGINFOO
"RTN","MHVUL3",138,0)
 Q
"RTN","MHVUL3",139,0)
 ;
"RTN","MHVUL3",140,0)
LOGOFFO ;Turn off logging
"RTN","MHVUL3",141,0)
 N RESULT,DIR,DIRUT,DA,X,Y
"RTN","MHVUL3",142,0)
 D LOGINFOO
"RTN","MHVUL3",143,0)
 W !
"RTN","MHVUL3",144,0)
 D LOGINFO^MHVUL1(.RESULT)
"RTN","MHVUL3",145,0)
 ; Quit if logging is already off
"RTN","MHVUL3",146,0)
 I 'RESULT("STATE") W !,"Logging is already turned off." Q
"RTN","MHVUL3",147,0)
 S DIR(0)="Y"
"RTN","MHVUL3",148,0)
 S DIR("A")="Turn off logging"
"RTN","MHVUL3",149,0)
 S DIR("?")="Turn off MHV application logging."
"RTN","MHVUL3",150,0)
 S DIR("B")="NO"
"RTN","MHVUL3",151,0)
 D ^DIR Q:$D(DIRUT)
"RTN","MHVUL3",152,0)
 I 'Y Q
"RTN","MHVUL3",153,0)
 ;
"RTN","MHVUL3",154,0)
 D LOGOFF^MHVUL1(.RESULT)
"RTN","MHVUL3",155,0)
 W !!,"MHV application logging switched off."
"RTN","MHVUL3",156,0)
 W !,"Log will be deleted on "_$$FMTE^XLFDT($P(RESULT,"^",2),1)_"."
"RTN","MHVUL3",157,0)
 Q
"RTN","MHVUL3",158,0)
 ;
"RTN","MHVUL3",159,0)
LOGPRGO ; Purge log
"RTN","MHVUL3",160,0)
 N RESULT,DIR,DIRUT,DA,X,Y,DTM,%DT
"RTN","MHVUL3",161,0)
 D LOGINFOO
"RTN","MHVUL3",162,0)
 W !
"RTN","MHVUL3",163,0)
 ; Purge from date
"RTN","MHVUL3",164,0)
 S DIR(0)="D^:"_DT_":TX"
"RTN","MHVUL3",165,0)
 S DIR("A")="Purge From Date"
"RTN","MHVUL3",166,0)
 S DIR("?",1)="Enter a past date to purge MHV application log."
"RTN","MHVUL3",167,0)
 S DIR("?")="All log entries older than this date will be removed."
"RTN","MHVUL3",168,0)
 S DIR("B")=$$HTE^XLFDT($H-7,1)
"RTN","MHVUL3",169,0)
 D ^DIR Q:$D(DIRUT)
"RTN","MHVUL3",170,0)
 S DTM=Y
"RTN","MHVUL3",171,0)
 ;
"RTN","MHVUL3",172,0)
 ; Confirm Purge
"RTN","MHVUL3",173,0)
 K DIR,DIRUT,DA,X,Y
"RTN","MHVUL3",174,0)
 S DIR(0)="Y"
"RTN","MHVUL3",175,0)
 S DIR("A",1)="Log will be purged from "_$$FMTE^XLFDT(DTM)_"."
"RTN","MHVUL3",176,0)
 S DIR("A")="OK to proceed"
"RTN","MHVUL3",177,0)
 S DIR("?")="All log entries older than this date will be removed."
"RTN","MHVUL3",178,0)
 S DIR("B")="NO"
"RTN","MHVUL3",179,0)
 D ^DIR Q:$D(DIRUT)
"RTN","MHVUL3",180,0)
 Q:'Y
"RTN","MHVUL3",181,0)
 ;
"RTN","MHVUL3",182,0)
 D LOGPRG^MHVUL1(.RESULT,DTM)
"RTN","MHVUL3",183,0)
 W !!,"Log purged from "_$$FMTE^XLFDT($P(RESULT,"^",2),1)_"."
"RTN","MHVUL3",184,0)
 Q
"RTN","MHVUL3",185,0)
 ;
"RTN","MHVUL3",186,0)
LOGINFOO ; Display log information
"RTN","MHVUL3",187,0)
 N RESULT
"RTN","MHVUL3",188,0)
 D LOGINFO^MHVUL1(.RESULT)
"RTN","MHVUL3",189,0)
 W !!,"MHV Application Log Settings:"
"RTN","MHVUL3",190,0)
 D LOGINFOD(.RESULT)
"RTN","MHVUL3",191,0)
 Q
"RTN","MHVUL3",192,0)
 ;
"RTN","MHVUL3",193,0)
LOGINFOD(RESULT) ; Display log
"RTN","MHVUL3",194,0)
 W !,"    Log Creation Date: ",$$FMTE^XLFDT(RESULT("CREATED"))
"RTN","MHVUL3",195,0)
 W !,"    Log Deletion Date: ",$$FMTE^XLFDT(RESULT("DELETE"))
"RTN","MHVUL3",196,0)
 W !,"         Oldest Entry: ",$$FMTE^XLFDT(RESULT("OLDEST"))
"RTN","MHVUL3",197,0)
 W !,"         Newest Entry: ",$$FMTE^XLFDT(RESULT("NEWEST"))
"RTN","MHVUL3",198,0)
 W !,"              Logging: ",$S(RESULT("STATE"):"",1:"OFF")
"RTN","MHVUL3",199,0)
 I RESULT("STATE") D
"RTN","MHVUL3",200,0)
 . W RESULT("LEVEL")_" mode"
"RTN","MHVUL3",201,0)
 . I RESULT("LEVEL")="NAMED" W !,?16,"Names: ",RESULT("NAMES")
"RTN","MHVUL3",202,0)
 . Q
"RTN","MHVUL3",203,0)
 W !,"           Auto Purge: ",$S(RESULT("AUTOPURGE"):"",1:"OFF")
"RTN","MHVUL3",204,0)
 I RESULT("AUTOPURGE") W +RESULT("DAYS")," days"
"RTN","MHVUL3",205,0)
 Q
"RTN","MHVUL3",206,0)
 ;
"RTN","MHVUL3",207,0)
LOGSIZEO ; Display log size information
"RTN","MHVUL3",208,0)
 N RESULT
"RTN","MHVUL3",209,0)
 D LOGSIZE^MHVUL1(.RESULT)
"RTN","MHVUL3",210,0)
 W !!,"MHV Application Log Size:"
"RTN","MHVUL3",211,0)
 D LOGSIZED(.RESULT)
"RTN","MHVUL3",212,0)
 Q
"RTN","MHVUL3",213,0)
 ;
"RTN","MHVUL3",214,0)
LOGSIZED(RESULT) ; Display log size
"RTN","MHVUL3",215,0)
 W !,"     Number of Entries: ",RESULT("ENTRY COUNT")
"RTN","MHVUL3",216,0)
 W !,"       Number of Nodes: ",RESULT("NODE COUNT")
"RTN","MHVUL3",217,0)
 W !,"    Approx. size in KB: ",RESULT("BYTE COUNT")\1024
"RTN","MHVUL3",218,0)
 Q
"RTN","MHVUL3",219,0)
 ;
"RTN","MHVUL3",220,0)
LOGVIEWO ; View log
"RTN","MHVUL3",221,0)
 N LOG,CNT,DTM,J,ENTRY,RESULT,DIR,DIRUT,DTOUT,DUOUT,DA,X,Y,DTM
"RTN","MHVUL3",222,0)
 ; Use the browser if supported by emulation
"RTN","MHVUL3",223,0)
 I $$TEST^DDBRT D LOGBROWS^MHVUL2 Q
"RTN","MHVUL3",224,0)
 K ^TMP("MHV LOG SUMMARY",$J)
"RTN","MHVUL3",225,0)
 K ^TMP("MHV LOG DETAIL",$J)
"RTN","MHVUL3",226,0)
 D LOGSUM^MHVUL1(.LOG)
"RTN","MHVUL3",227,0)
 S CNT=$P(@LOG,"^",2)
"RTN","MHVUL3",228,0)
 I CNT<1 D LOGSUMD(LOG) Q
"RTN","MHVUL3",229,0)
 F  D  Q:$D(DIRUT)
"RTN","MHVUL3",230,0)
 . D LOGSUMD(LOG) Q:$D(DTOUT)!$D(DUOUT)
"RTN","MHVUL3",231,0)
 . K DIR,X,DIRUT
"RTN","MHVUL3",232,0)
 . I 'Y D  Q:$D(DIRUT)
"RTN","MHVUL3",233,0)
 .. S DIR(0)="N^1:"_CNT
"RTN","MHVUL3",234,0)
 .. S DIR("A")="Select Entry"
"RTN","MHVUL3",235,0)
 .. S DIR("?")="Select an entry to display"
"RTN","MHVUL3",236,0)
 .. D ^DIR
"RTN","MHVUL3",237,0)
 .. Q
"RTN","MHVUL3",238,0)
 . ;
"RTN","MHVUL3",239,0)
 . S DTM=$P(@LOG@(Y),"^")
"RTN","MHVUL3",240,0)
 . S J=$P(@LOG@(Y),"^",2)
"RTN","MHVUL3",241,0)
 . D LOGDET^MHVUL1(.ENTRY,DTM,J)
"RTN","MHVUL3",242,0)
 . D LOGDETD(ENTRY)
"RTN","MHVUL3",243,0)
 . K @ENTRY
"RTN","MHVUL3",244,0)
 . Q
"RTN","MHVUL3",245,0)
 K ^TMP("MHV LOG SUMMARY",$J)
"RTN","MHVUL3",246,0)
 K ^TMP("MHV LOG DETAIL",$J)
"RTN","MHVUL3",247,0)
 Q
"RTN","MHVUL3",248,0)
 ;
"RTN","MHVUL3",249,0)
LOGSUMD(LOG) ; Display log summary
"RTN","MHVUL3",250,0)
 N CNT,DTM,J,N
"RTN","MHVUL3",251,0)
 W !!,"LOG SUMMARY"
"RTN","MHVUL3",252,0)
 W !,?5,"Entry",?12,"Timestamp",?37,"Job",?50,"Items"
"RTN","MHVUL3",253,0)
 S CNT=$P(@LOG,"^",2)
"RTN","MHVUL3",254,0)
 I CNT<1 W !!,?12,"EMPTY" Q
"RTN","MHVUL3",255,0)
 S Y=0
"RTN","MHVUL3",256,0)
 K DIRUT,DTOUT,DUOUT
"RTN","MHVUL3",257,0)
 F I=1:1:CNT D  Q:Y!$D(DTOUT)!$D(DUOUT)
"RTN","MHVUL3",258,0)
 . I I#22=0 D  Q:Y!$D(DTOUT)!$D(DUOUT)
"RTN","MHVUL3",259,0)
 .. K DIR,X,Y,DIRUT,DTOUT,DUOUT
"RTN","MHVUL3",260,0)
 .. S DIR(0)="NO^1:"_CNT
"RTN","MHVUL3",261,0)
 .. S DIR("A",1)="Press <RETURN> to see more, '^' to exit, OR"
"RTN","MHVUL3",262,0)
 .. S DIR("A")="Select Entry"
"RTN","MHVUL3",263,0)
 .. S DIR("?")="Select an entry to display"
"RTN","MHVUL3",264,0)
 .. D ^DIR
"RTN","MHVUL3",265,0)
 .. Q
"RTN","MHVUL3",266,0)
 . S DTM=$$FMTE^XLFDT(-$P(@LOG@(I),"^"))
"RTN","MHVUL3",267,0)
 . S J=$P(@LOG@(I),"^",2)
"RTN","MHVUL3",268,0)
 . S N=$P(@LOG@(I),"^",3)
"RTN","MHVUL3",269,0)
 . W !,?5,I,?12,DTM,?37,J,?50,N
"RTN","MHVUL3",270,0)
 . Q
"RTN","MHVUL3",271,0)
 Q
"RTN","MHVUL3",272,0)
 ;
"RTN","MHVUL3",273,0)
LOGDETD(ENTRY) ;Display log entry
"RTN","MHVUL3",274,0)
 N CNT,DTM,J,N
"RTN","MHVUL3",275,0)
 W !!,"LOG DETAIL"
"RTN","MHVUL3",276,0)
 S CNT=$P(@ENTRY,"^",2)
"RTN","MHVUL3",277,0)
 I CNT<1 W !,?12,"EMPTY" Q
"RTN","MHVUL3",278,0)
 W !,?12,"Timestamp",?37,"Job",?50,"Items",?60,"Nodes"
"RTN","MHVUL3",279,0)
 S DTM=$$FMTE^XLFDT(-$P(@ENTRY@(0),"^"))
"RTN","MHVUL3",280,0)
 S J=$P(@ENTRY@(0),"^",2)
"RTN","MHVUL3",281,0)
 S N=$P(@ENTRY@(0),"^",3)
"RTN","MHVUL3",282,0)
 W !,?12,DTM,?37,J,?50,N,?60,CNT
"RTN","MHVUL3",283,0)
 S J=3
"RTN","MHVUL3",284,0)
 F I=1:1:CNT D  Q:$D(DIRUT)
"RTN","MHVUL3",285,0)
 . S J=($L(@ENTRY@(I))+5)\80+1+J
"RTN","MHVUL3",286,0)
 . I J>23 D  Q:$D(DIRUT)
"RTN","MHVUL3",287,0)
 .. K DIR,X,Y,DIRUT
"RTN","MHVUL3",288,0)
 .. S DIR(0)="E"
"RTN","MHVUL3",289,0)
 .. D ^DIR
"RTN","MHVUL3",290,0)
 .. S J=($L(@ENTRY@(I))+5)\80+1
"RTN","MHVUL3",291,0)
 .. Q
"RTN","MHVUL3",292,0)
 . W !,?5,@ENTRY@(I)
"RTN","MHVUL3",293,0)
 . Q
"RTN","MHVUL3",294,0)
 ;
"RTN","MHVUL3",295,0)
 Q:$D(DIRUT)
"RTN","MHVUL3",296,0)
 K DIR,X,Y,DIRUT
"RTN","MHVUL3",297,0)
 S DIR(0)="E"
"RTN","MHVUL3",298,0)
 D ^DIR
"RTN","MHVUL3",299,0)
 Q
"RTN","MHVUL3",300,0)
 ;
"VER")
8.0^22.0
"BLD",5842,6)
^1
**END**
**END**
