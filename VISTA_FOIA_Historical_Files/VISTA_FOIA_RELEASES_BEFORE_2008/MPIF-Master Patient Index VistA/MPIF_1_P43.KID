KIDS Distribution saved on Apr 10, 2006@11:49:30
MPIF*1*43 & RG*1*43 - FINAL (4/10/06)
**KIDS**:MPIF*1.0*43^RG*1.0*43^

**INSTALL NAME**
MPIF*1.0*43
"BLD",2273,0)
MPIF*1.0*43^MASTER PATIENT INDEX VISTA^0^3060410^y
"BLD",2273,1,0)
^^3^3^3060410^
"BLD",2273,1,1,0)
ICN ASSIGNMENT CHANGE/REMOVE SINGLE PATIENT INITIALIZATION OPTION
"BLD",2273,1,2,0)
Refer to patch MPIF*1*43 in the FORUM Patch Module for a complete
"BLD",2273,1,3,0)
description.
"BLD",2273,4,0)
^9.64PA^^
"BLD",2273,"ABNS",0)
^9.66A^^
"BLD",2273,"ABPKG")
^^
"BLD",2273,"INID")
^y
"BLD",2273,"INIT")
MPIFP43
"BLD",2273,"KRN",0)
^9.67PA^8989.52^19
"BLD",2273,"KRN",.4,0)
.4
"BLD",2273,"KRN",.401,0)
.401
"BLD",2273,"KRN",.402,0)
.402
"BLD",2273,"KRN",.403,0)
.403
"BLD",2273,"KRN",.5,0)
.5
"BLD",2273,"KRN",.84,0)
.84
"BLD",2273,"KRN",3.6,0)
3.6
"BLD",2273,"KRN",3.8,0)
3.8
"BLD",2273,"KRN",9.2,0)
9.2
"BLD",2273,"KRN",9.8,0)
9.8
"BLD",2273,"KRN",9.8,"NM",0)
^9.68A^14^14
"BLD",2273,"KRN",9.8,"NM",1,0)
MPIFAPI^^0^B28137088
"BLD",2273,"KRN",9.8,"NM",2,0)
MPIFBT2^^0^B50661186
"BLD",2273,"KRN",9.8,"NM",3,0)
MPIFBT3^^0^B22745391
"BLD",2273,"KRN",9.8,"NM",4,0)
MPIFQ0^^0^B70311672
"BLD",2273,"KRN",9.8,"NM",5,0)
MPIFRES^^0^B21931451
"BLD",2273,"KRN",9.8,"NM",6,0)
MPIFRPC2^^0^B20174050
"BLD",2273,"KRN",9.8,"NM",7,0)
MPIFSA2^^0^B53121126
"BLD",2273,"KRN",9.8,"NM",8,0)
MPIFP43^^0^B958116
"BLD",2273,"KRN",9.8,"NM",9,0)
MPIFQ3^^0^B19268712
"BLD",2273,"KRN",9.8,"NM",10,0)
MPIFDUP^^0^B52696250
"BLD",2273,"KRN",9.8,"NM",11,0)
MPIFD1^^0^B49972281
"BLD",2273,"KRN",9.8,"NM",12,0)
MPIF002^^0^B28350773
"BLD",2273,"KRN",9.8,"NM",13,0)
MPIFA24B^^0^B7230667
"BLD",2273,"KRN",9.8,"NM",14,0)
MPIFSA3^^0^B25833370
"BLD",2273,"KRN",9.8,"NM","B","MPIF002",12)

"BLD",2273,"KRN",9.8,"NM","B","MPIFA24B",13)

"BLD",2273,"KRN",9.8,"NM","B","MPIFAPI",1)

"BLD",2273,"KRN",9.8,"NM","B","MPIFBT2",2)

"BLD",2273,"KRN",9.8,"NM","B","MPIFBT3",3)

"BLD",2273,"KRN",9.8,"NM","B","MPIFD1",11)

"BLD",2273,"KRN",9.8,"NM","B","MPIFDUP",10)

"BLD",2273,"KRN",9.8,"NM","B","MPIFP43",8)

"BLD",2273,"KRN",9.8,"NM","B","MPIFQ0",4)

"BLD",2273,"KRN",9.8,"NM","B","MPIFQ3",9)

"BLD",2273,"KRN",9.8,"NM","B","MPIFRES",5)

"BLD",2273,"KRN",9.8,"NM","B","MPIFRPC2",6)

"BLD",2273,"KRN",9.8,"NM","B","MPIFSA2",7)

"BLD",2273,"KRN",9.8,"NM","B","MPIFSA3",14)

"BLD",2273,"KRN",19,0)
19
"BLD",2273,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",2273,"KRN",19,"NM",1,0)
MPIF IND MPI LOAD^^1^
"BLD",2273,"KRN",19,"NM",2,0)
MPIF VISTA MENU^^1^
"BLD",2273,"KRN",19,"NM",3,0)
MPIF DISPLAY ONLY QUERY TO MPI^^0
"BLD",2273,"KRN",19,"NM",4,0)
RG ADMIN COORD MENU^^2
"BLD",2273,"KRN",19,"NM",5,0)
RG EXCEPTION MENU^^2
"BLD",2273,"KRN",19,"NM","B","MPIF DISPLAY ONLY QUERY TO MPI",3)

"BLD",2273,"KRN",19,"NM","B","MPIF IND MPI LOAD",1)

"BLD",2273,"KRN",19,"NM","B","MPIF VISTA MENU",2)

"BLD",2273,"KRN",19,"NM","B","RG ADMIN COORD MENU",4)

"BLD",2273,"KRN",19,"NM","B","RG EXCEPTION MENU",5)

"BLD",2273,"KRN",19.1,0)
19.1
"BLD",2273,"KRN",101,0)
101
"BLD",2273,"KRN",101,"NM",0)
^9.68A^5^5
"BLD",2273,"KRN",101,"NM",1,0)
MPIF POTENTIAL DUP (CMOR PDAT)^^0
"BLD",2273,"KRN",101,"NM",2,0)
MPIF POTENTIAL DUP (SELECT PATIENT)^^0
"BLD",2273,"KRN",101,"NM",3,0)
MPIF POTENTIAL DUP (MPI PDAT)^^0
"BLD",2273,"KRN",101,"NM",4,0)
MPIF POTENTIAL DUP (HELP)^^0
"BLD",2273,"KRN",101,"NM",5,0)
MPIF POTENTIAL DUP MENU^^0
"BLD",2273,"KRN",101,"NM","B","MPIF POTENTIAL DUP (CMOR PDAT)",1)

"BLD",2273,"KRN",101,"NM","B","MPIF POTENTIAL DUP (HELP)",4)

"BLD",2273,"KRN",101,"NM","B","MPIF POTENTIAL DUP (MPI PDAT)",3)

"BLD",2273,"KRN",101,"NM","B","MPIF POTENTIAL DUP (SELECT PATIENT)",2)

"BLD",2273,"KRN",101,"NM","B","MPIF POTENTIAL DUP MENU",5)

"BLD",2273,"KRN",409.61,0)
409.61
"BLD",2273,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",2273,"KRN",409.61,"NM",1,0)
MPIF POTENTIAL DUP^^0
"BLD",2273,"KRN",409.61,"NM","B","MPIF POTENTIAL DUP",1)

"BLD",2273,"KRN",771,0)
771
"BLD",2273,"KRN",870,0)
870
"BLD",2273,"KRN",8989.51,0)
8989.51
"BLD",2273,"KRN",8989.52,0)
8989.52
"BLD",2273,"KRN",8994,0)
8994
"BLD",2273,"KRN","B",.4,.4)

"BLD",2273,"KRN","B",.401,.401)

"BLD",2273,"KRN","B",.402,.402)

"BLD",2273,"KRN","B",.403,.403)

"BLD",2273,"KRN","B",.5,.5)

"BLD",2273,"KRN","B",.84,.84)

"BLD",2273,"KRN","B",3.6,3.6)

"BLD",2273,"KRN","B",3.8,3.8)

"BLD",2273,"KRN","B",9.2,9.2)

"BLD",2273,"KRN","B",9.8,9.8)

"BLD",2273,"KRN","B",19,19)

"BLD",2273,"KRN","B",19.1,19.1)

"BLD",2273,"KRN","B",101,101)

"BLD",2273,"KRN","B",409.61,409.61)

"BLD",2273,"KRN","B",771,771)

"BLD",2273,"KRN","B",870,870)

"BLD",2273,"KRN","B",8989.51,8989.51)

"BLD",2273,"KRN","B",8989.52,8989.52)

"BLD",2273,"KRN","B",8994,8994)

"BLD",2273,"QUES",0)
^9.62^^
"BLD",2273,"REQB",0)
^9.611^7^7
"BLD",2273,"REQB",1,0)
MPIF*1.0*37^2
"BLD",2273,"REQB",2,0)
MPIF*1.0*38^2
"BLD",2273,"REQB",3,0)
MPIF*1.0*33^1
"BLD",2273,"REQB",4,0)
MPIF*1.0*35^1
"BLD",2273,"REQB",5,0)
MPIF*1.0*31^1
"BLD",2273,"REQB",6,0)
MPIF*1.0*25^1
"BLD",2273,"REQB",7,0)
MPIF*1.0*28^1
"BLD",2273,"REQB","B","MPIF*1.0*25",6)

"BLD",2273,"REQB","B","MPIF*1.0*28",7)

"BLD",2273,"REQB","B","MPIF*1.0*31",5)

"BLD",2273,"REQB","B","MPIF*1.0*33",3)

"BLD",2273,"REQB","B","MPIF*1.0*35",4)

"BLD",2273,"REQB","B","MPIF*1.0*37",1)

"BLD",2273,"REQB","B","MPIF*1.0*38",2)

"INIT")
MPIFP43
"KRN",19,5663,-1)
2^4
"KRN",19,5663,0)
RG ADMIN COORD MENU^MPI/PD Patient Admin Coordinator Menu^^M^^^^^^^^272^^^
"KRN",19,5663,10,0)
^19.01IP^41^6
"KRN",19,5663,10,38,0)
6403^MSG^60
"KRN",19,5663,10,38,"^")
RG EXCEPTION MENU
"KRN",19,5663,"U")
MPI/PD PATIENT ADMIN COORDINAT
"KRN",19,5773,-1)
0^3
"KRN",19,5773,0)
MPIF DISPLAY ONLY QUERY TO MPI^Display Only Query^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5773,1,0)
^^5^5^2980123^^
"KRN",19,5773,1,1,0)
This option allows the user to query the MPI in Austin for all known data
"KRN",19,5773,1,2,0)
about a patient.  The patient may or may not be currently in the Patient
"KRN",19,5773,1,3,0)
file.  The MPI will return:  Patient Not Known at the MPI, a list of
"KRN",19,5773,1,4,0)
potential matches along with all known data, or an exact match along with
"KRN",19,5773,1,5,0)
all known data.  This will be for display purposes only.
"KRN",19,5773,10.1)
Query MPI
"KRN",19,5773,25)
INTACTV^MPIFSAQ
"KRN",19,5773,"U")
DISPLAY ONLY QUERY
"KRN",19,6403,-1)
2^5
"KRN",19,6403,0)
RG EXCEPTION MENU^Message Exception Menu^^M^^^^^^^^272
"KRN",19,6403,10,0)
^19.01IP^6^4
"KRN",19,6403,10,6,0)
5773^^30
"KRN",19,6403,10,6,"^")
MPIF DISPLAY ONLY QUERY TO MPI
"KRN",19,6403,"U")
MESSAGE EXCEPTION MENU
"KRN",19,7060,-1)
1^1
"KRN",19,7060,0)
MPIF IND MPI LOAD
"KRN",19,7061,-1)
1^2
"KRN",19,7061,0)
MPIF VISTA MENU
"KRN",101,2059,-1)
0^4
"KRN",101,2059,0)
MPIF POTENTIAL DUP (HELP)^HELP^^A^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,2059,1,0)
^^2^2^3051202^
"KRN",101,2059,1,1,0)
Help for List Manager screen actions during Potential duplication 
"KRN",101,2059,1,2,0)
resolution on the MPI.
"KRN",101,2059,4)
^^^HLP
"KRN",101,2059,20)
D HELP^MPIFD1
"KRN",101,2059,99)
60236,36041
"KRN",101,2060,-1)
0^1
"KRN",101,2060,0)
MPIF POTENTIAL DUP (CMOR PDAT)^CMORs Data View^^A^^^^^^^^
"KRN",101,2060,1,0)
^^1^1^3051202^
"KRN",101,2060,1,1,0)
This action will allow the user to request PDAT information from the CMOR.
"KRN",101,2060,4)
^^^CPDAT
"KRN",101,2060,20)
D CMOR^MPIFD1
"KRN",101,2060,99)
60236,36203
"KRN",101,2061,-1)
0^3
"KRN",101,2061,0)
MPIF POTENTIAL DUP (MPI PDAT)^MPI Data View^^A^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,2061,1,0)
^^1^1^3051202^
"KRN",101,2061,1,1,0)
This action will allow the user to request PDAT information from the MPI.
"KRN",101,2061,4)
^^^MPDAT
"KRN",101,2061,20)
D MPIPD^MPIFD1
"KRN",101,2061,99)
60236,36265
"KRN",101,2062,-1)
0^2
"KRN",101,2062,0)
MPIF POTENTIAL DUP (SELECT PATIENT)^Match With Existing Pt on List^^A^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,2062,1,0)
^^2^2^3051202^
"KRN",101,2062,1,1,0)
This action will allow the user to match to another patient on the MPI, 
"KRN",101,2062,1,2,0)
resolving the duplicate.
"KRN",101,2062,4)
^^^SE
"KRN",101,2062,20)
D SELECT^MPIFD1
"KRN",101,2062,99)
60236,36328
"KRN",101,2063,-1)
0^5
"KRN",101,2063,0)
MPIF POTENTIAL DUP MENU^Actions for Potential Duplication screen^^M^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,2063,1,0)
^^1^1^3051202^
"KRN",101,2063,1,1,0)
This menu is for the actions on the LM screen MPIF POTENTIAL DUP
"KRN",101,2063,4)
32^4
"KRN",101,2063,10,0)
^101.01PAI^4^4
"KRN",101,2063,10,1,0)
2061^MPI^22^
"KRN",101,2063,10,1,"^")
MPIF POTENTIAL DUP (MPI PDAT)
"KRN",101,2063,10,2,0)
2060^CMR^13^
"KRN",101,2063,10,2,"^")
MPIF POTENTIAL DUP (CMOR PDAT)
"KRN",101,2063,10,3,0)
2062^SE^11^
"KRN",101,2063,10,3,"^")
MPIF POTENTIAL DUP (SELECT PATIENT)
"KRN",101,2063,10,4,0)
2059^HLP^22^
"KRN",101,2063,10,4,"^")
MPIF POTENTIAL DUP (HELP)
"KRN",101,2063,26)
D SHOW^VALM
"KRN",101,2063,28)
Select Action:
"KRN",101,2063,99)
60236,36985
"KRN",409.61,275,-1)
0^1
"KRN",409.61,275,0)
MPIF POTENTIAL DUP^1^^80^8^16^1^1^^MPIF POTENTIAL DUP MENU^MPI QUERY RESULTS^1^^1
"KRN",409.61,275,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,275,"ARRAY")
 ^TMP("MPIFVQQ",$J)
"KRN",409.61,275,"COL",0)
^409.621^4^4
"KRN",409.61,275,"COL",1,0)
PATIENT^6^31^Patient
"KRN",409.61,275,"COL",2,0)
SSN^31^9^SSN^^0
"KRN",409.61,275,"COL",3,0)
Date of Birth^42^11^DOB
"KRN",409.61,275,"COL",4,0)
CMOR^55^20^CMOR
"KRN",409.61,275,"COL","AIDENT",0,2)

"KRN",409.61,275,"COL","B","CMOR",4)

"KRN",409.61,275,"COL","B","Date of Birth",3)

"KRN",409.61,275,"COL","B","PATIENT",1)

"KRN",409.61,275,"COL","B","SSN",2)

"KRN",409.61,275,"FNL")
D EXIT^MPIFD1
"KRN",409.61,275,"HDR")
D HDR^MPIFD1
"KRN",409.61,275,"INIT")
D INIT^MPIFD1
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
43^3060410
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3060410
"PKG",282,22,1,"PAH",1,1,1,0)
ICN ASSIGNMENT CHANGE/REMOVE SINGLE PATIENT INITIALIZATION OPTION
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1*43 in the FORUM Patch Module for a complete
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
14
"RTN","MPIF002")
0^12^B28350773
"RTN","MPIF002",1,0)
MPIF002 ;CIOFOSF/CMC-UTILITY ROUTINE OF APIS ;JUL 12, 1996
"RTN","MPIF002",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**20,27,33,43**;30 Apr 99
"RTN","MPIF002",3,0)
 ;
"RTN","MPIF002",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIF002",5,0)
 ;  ^DPT( - #2070
"RTN","MPIF002",6,0)
 ;
"RTN","MPIF002",7,0)
GETICNH(DFN,ICNHA) ;Return all ICNs (including checksum) in ICN History for patient DFN
"RTN","MPIF002",8,0)
 ; DFN = IEN of patient in the Patient (#2) file
"RTN","MPIF002",9,0)
 ; ICNHA - array where ICN History will be returned.
"RTN","MPIF002",10,0)
 N IEN,ICN,CNT,RET
"RTN","MPIF002",11,0)
 I '$D(^DPT(DFN)) S ICNHA="-1^NO SUCH DFN" Q
"RTN","MPIF002",12,0)
 I '$D(^DPT(DFN,"MPIFHIS")) S ICNHA="-1^NO ICN HISTORY" Q
"RTN","MPIF002",13,0)
 S (IEN,CNT)=0,RET=""
"RTN","MPIF002",14,0)
 F  S IEN=$O(^DPT(DFN,"MPIFHIS",IEN)) Q:IEN=""  D
"RTN","MPIF002",15,0)
 .S ICN=$P($G(^DPT(DFN,"MPIFHIS",IEN,0)),"^")_"V"_$P($G(^DPT(DFN,"MPIFHIS",IEN,0)),"^",2)
"RTN","MPIF002",16,0)
 .I ICN'="" S CNT=CNT+1,ICNHA(CNT)=""""_ICN_""""
"RTN","MPIF002",17,0)
 I CNT=0 S ICNHA="-1^NO ICN HISTORY" Q
"RTN","MPIF002",18,0)
 S ICNHA=CNT
"RTN","MPIF002",19,0)
 Q
"RTN","MPIF002",20,0)
GETCMORH(DFN,CMORHA) ;Return all CMORs in CMOR History for patient DFN
"RTN","MPIF002",21,0)
 ; DFN = IEN of patient in the Patient (#2) file
"RTN","MPIF002",22,0)
 ; CMORHA - array where CMOR history will be returned
"RTN","MPIF002",23,0)
 N IEN,CMOR,CNT,RET
"RTN","MPIF002",24,0)
 I '$D(^DPT(DFN)) S CMORHA="-1^NO SUCH DFN" Q
"RTN","MPIF002",25,0)
 I '$D(^DPT(DFN,"MPICMOR")) S CMORHA="-1^NO CMOR HISTORY" Q
"RTN","MPIF002",26,0)
 S (IEN,CNT)=0,RET=""
"RTN","MPIF002",27,0)
 F  S IEN=$O(^DPT(DFN,"MPICMOR",IEN)) Q:IEN=""  D
"RTN","MPIF002",28,0)
 .S CMOR=$P($G(^DPT(DFN,"MPICMOR",IEN,0)),"^")
"RTN","MPIF002",29,0)
 .I CMOR'="" S CMOR=$P($$NNT^XUAF4(CMOR),"^",2)
"RTN","MPIF002",30,0)
 .I CMOR'="" S CNT=CNT+1,CMORHA(CNT)=""""_CMOR_""""
"RTN","MPIF002",31,0)
 I CNT=0 S CMORHA="-1^NO CMOR HISTORY" Q
"RTN","MPIF002",32,0)
 S CMORHA=CNT
"RTN","MPIF002",33,0)
 Q
"RTN","MPIF002",34,0)
GETDFNS(SSN) ; Find DFN for a given SSN - all if there are more than one
"RTN","MPIF002",35,0)
 ; SSN - SSN for patient attempted to be found in the Patient file (#2)
"RTN","MPIF002",36,0)
 ; Return - list of DFNs or -1^error msg
"RTN","MPIF002",37,0)
 N DFN,LIST,CNT,NODE
"RTN","MPIF002",38,0)
 I '$D(^DPT("SSN",SSN)) Q "-1^No such SSN"
"RTN","MPIF002",39,0)
 S (DFN,LIST)="",CNT=0
"RTN","MPIF002",40,0)
 F  S DFN=$O(^DPT("SSN",SSN,DFN)) Q:DFN=""  D
"RTN","MPIF002",41,0)
 .I $D(^DPT(DFN)) D
"RTN","MPIF002",42,0)
 ..S LIST=LIST_DFN_"^",CNT=CNT+1
"RTN","MPIF002",43,0)
 ..S NODE=$$MPINODE^MPIFAPI(DFN),ICN=$P($G(^DPT(DFN,"MPI")),"^")
"RTN","MPIF002",44,0)
 ..I ICN'="",'$D(^DPT("AICN",ICN,DFN)) S ^DPT("AICN",ICN,DFN)=""
"RTN","MPIF002",45,0)
 ..; check if missing AICN x-ref and set if missing
"RTN","MPIF002",46,0)
 I CNT=0 Q "-1^No such SSN"
"RTN","MPIF002",47,0)
 Q LIST
"RTN","MPIF002",48,0)
GETICNS(SSN) ; Find all ICNs for a given SSN -- all if there are more than one
"RTN","MPIF002",49,0)
 ; patient with that SSN
"RTN","MPIF002",50,0)
 ; SSN - SSN for patient attempted to be found in the Patient file (#2)
"RTN","MPIF002",51,0)
 ; Returned is a list of ICNs for this SSN
"RTN","MPIF002",52,0)
 N XX,DFNS,DFN,LIST,ICN,NODE
"RTN","MPIF002",53,0)
 S LIST=""
"RTN","MPIF002",54,0)
 I $G(SSN)'="" S DFNS=$$GETDFNS(SSN)
"RTN","MPIF002",55,0)
 I +DFNS=-1 Q DFNS
"RTN","MPIF002",56,0)
 F XX=1:1 S DFN=$P(DFNS,"^",XX) Q:DFN=""  D
"RTN","MPIF002",57,0)
 .S ICN=$$GETICN^MPIF001(DFN)
"RTN","MPIF002",58,0)
 .I +ICN>0 S LIST=LIST_ICN_"^"
"RTN","MPIF002",59,0)
 .I +ICN<0 S NODE=$$MPINODE^MPIFAPI(DFN),ICN=$P(NODE,"^") I ICN'="",'$D(^DPT("AICN",ICN,DFN)) S ^DPT("AICN",ICN,DFN)=""
"RTN","MPIF002",60,0)
 Q LIST
"RTN","MPIF002",61,0)
TWODFNS(DFN1,DFN2,ICN) ;Logging Exceptions when there are two DFNs trying to have the same ICN, which isn't allowed.
"RTN","MPIF002",62,0)
 N ARR1,ARR2,NAME1,NAME2,SSN1,SSN2,TEXT
"RTN","MPIF002",63,0)
 I $G(DFN1)=""!($G(DFN2)="") Q
"RTN","MPIF002",64,0)
 I '$D(^DPT(DFN1))!('$D(^DPT(DFN2))) Q
"RTN","MPIF002",65,0)
 D GETDATA^MPIFQ0("^DPT(",DFN1,"MPIFD1",".01;.09","EI")
"RTN","MPIF002",66,0)
 S NAME1=$G(MPIFD1(2,DFN1,.01,"E")),SSN1=$G(MPIFD1(2,DFN1,.09,"E"))
"RTN","MPIF002",67,0)
 D GETDATA^MPIFQ0("^DPT(",DFN2,"MPIFD2",".01;.09","EI")
"RTN","MPIF002",68,0)
 S NAME2=$G(MPIFD2(2,DFN2,.01,"E")),SSN2=$G(MPIFD2(2,DFN2,.09,"E"))
"RTN","MPIF002",69,0)
 D START^RGHLLOG()
"RTN","MPIF002",70,0)
 D EXC^RGHLLOG(227,"Patient DFN="_DFN2_"is trying to be assigned ICN "_ICN_" which is already in use for DFN="_DFN1,DFN2)
"RTN","MPIF002",71,0)
 D STOP^RGHLLOG()
"RTN","MPIF002",72,0)
 ; send format e-mail to RG CIRN DEMOGRAPHICS MAIL GROUP
"RTN","MPIF002",73,0)
 N MPIF,XMDUZ,XMSUB,XMY,XMTEXT
"RTN","MPIF002",74,0)
 S MPIF(1,1)="Multiple ICN Conflict"
"RTN","MPIF002",75,0)
 S MPIF(1,2)=""
"RTN","MPIF002",76,0)
 S MPIF(1,3)="Record for Patient "_NAME2_" SSN= "_SSN2_" DFN= "_DFN2
"RTN","MPIF002",77,0)
 S MPIF(1,4)="returned ICN "_ICN_" which is already in use by Patient"
"RTN","MPIF002",78,0)
 S MPIF(1,5)=NAME1_" SSN= "_SSN1_" DFN= "_DFN1_". This may"
"RTN","MPIF002",79,0)
 S MPIF(1,6)="indicate duplicate patients on your system.  Check pair"
"RTN","MPIF002",80,0)
 S MPIF(1,7)="to determine if a duplicate record exists. If records are"
"RTN","MPIF002",81,0)
 S MPIF(1,8)="found to be duplicates they will need to be merged using"
"RTN","MPIF002",82,0)
 S MPIF(1,9)="the Duplicate Record Merge software."
"RTN","MPIF002",83,0)
 S MPIF(1,10)=""
"RTN","MPIF002",84,0)
 S MPIF(1,11)="Please log a NOIS or contact the MPI Data Quality Management"
"RTN","MPIF002",85,0)
 S MPIF(1,12)="Team if you are unable to resolve the conflict."
"RTN","MPIF002",86,0)
 S XMDUZ="MPI/PD VISTA PACKAGE"
"RTN","MPIF002",87,0)
 S XMSUB="MPI/PD Exception: Multiple ICNs"
"RTN","MPIF002",88,0)
 S XMY("G.RG CIRN DEMOGRAPHIC ISSUES")="",XMTEXT="MPIF(1,"
"RTN","MPIF002",89,0)
 D ^XMD
"RTN","MPIF002",90,0)
 K MPIFD1,MPIFD2
"RTN","MPIF002",91,0)
 Q
"RTN","MPIF002",92,0)
CLEAN(DFN,ARR,MPIRETN) ; clean up MPI data from DPT for "stub" records
"RTN","MPIF002",93,0)
 ; called from UPDATE^MPIFAPI
"RTN","MPIF002",94,0)
 N ICN,CMOR
"RTN","MPIF002",95,0)
 S ICN=+$$GETICN^MPIF001(DFN),CMOR=$$SITE^VASITE()
"RTN","MPIF002",96,0)
 I +ICN<0 S MPIRETN="-1^PT HAS NO ICN" Q
"RTN","MPIF002",97,0)
 I $E(ICN,1,3)'=$P(CMOR,"^",3) S MPIRETN="-1^not a local ICN not cleaned up" Q
"RTN","MPIF002",98,0)
 S CMOR=$P(CMOR,"^",1)
"RTN","MPIF002",99,0)
 S ^DPT(DFN,"MPI")=""
"RTN","MPIF002",100,0)
 K ^DPT("AICNL",1,ICN),^DPT("AICN",ICN),^DPT("ACMOR",CMOR,DFN)
"RTN","MPIF002",101,0)
 S MPIRETN=0
"RTN","MPIF002",102,0)
 Q
"RTN","MPIF002",103,0)
 ;**43 COMPARE AND MIMDQ ADDED in patch 43
"RTN","MPIF002",104,0)
COMPARE(DFN,INDEX,COMMON,MORE) ; Checking if TFs in common between CURRENT PT (DFN)
"RTN","MPIF002",105,0)
 ; and ^TMP("MPIFVQQ",$J,INDEX,"TF",ien) OR if patient is shared to exclude those with TYPE of OTHER
"RTN","MPIF002",106,0)
 ; INDEX is the selection entry
"RTN","MPIF002",107,0)
 ; COMMON is the value returned indicating if there are TFs in common
"RTN","MPIF002",108,0)
 N ARR,IEN,ST,TYPE S (MORE,COMMON)=0
"RTN","MPIF002",109,0)
 D TFL^VAFCTFU1(.ARR,DFN)
"RTN","MPIF002",110,0)
 S IEN=0 F  S IEN=$O(ARR(IEN)) Q:IEN=""!(IEN="ST#")  S ARR("ST#",$P(ARR(IEN),"^"))=$$GET1^DIQ(4,$$IEN^XUAF4($P(ARR(IEN),"^"))_",",13,"E")
"RTN","MPIF002",111,0)
 S IEN=0 F  S IEN=$O(ARR("ST#",IEN)) Q:IEN=""  D
"RTN","MPIF002",112,0)
 .Q:IEN=$P($$SITE^VASITE(),"^",3)!(IEN=200)
"RTN","MPIF002",113,0)
 .I $G(ARR("ST#",IEN))'="OTHER" S MORE=1
"RTN","MPIF002",114,0)
 S IEN=0
"RTN","MPIF002",115,0)
 F  S IEN=$O(^TMP("MPIFVQQ",$J,INDEX,"TF",IEN)) Q:IEN=""!(COMMON)  D
"RTN","MPIF002",116,0)
 .S ST=$P(^TMP("MPIFVQQ",$J,INDEX,"TF",IEN),"^")
"RTN","MPIF002",117,0)
 .Q:ST=200
"RTN","MPIF002",118,0)
 .I $D(ARR("ST#",ST)) I $P($G(ARR("ST#",ST)),"^")'="OTHER" S COMMON=1
"RTN","MPIF002",119,0)
 Q
"RTN","MPIF002",120,0)
MIMDQ(ICN,ICN2,DFN,MSG) ; while reviewing potential duplicates, site picked to link 2 patients together with TFs in common
"RTN","MPIF002",121,0)
 ; send exception to IMDQ team
"RTN","MPIF002",122,0)
 D START^RGHLLOG()
"RTN","MPIF002",123,0)
 D EXC^RGHLLOG(208,MSG,DFN)
"RTN","MPIF002",124,0)
 D STOP^RGHLLOG()
"RTN","MPIF002",125,0)
 W !,"Unable to match these ICNs together as"_$P(MSG,"-",2)
"RTN","MPIF002",126,0)
 W !,"Exception has been sent to IMDQ team for assistance in resolving this",!,"MPI Duplicate. Local Exception has been automatically marked as processed."
"RTN","MPIF002",127,0)
 Q
"RTN","MPIF002",128,0)
 Q
"RTN","MPIFA24B")
0^13^B7230667
"RTN","MPIFA24B",1,0)
MPIFA24B ;BP/CMC-BUILD A24 ADD ME MSGS ;JULY 22, 2002
"RTN","MPIFA24B",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22,28,31,25,43**;30 Apr 99
"RTN","MPIFA24B",3,0)
 ;
"RTN","MPIFA24B",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA24B",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA24B",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA24B",7,0)
 ;
"RTN","MPIFA24B",8,0)
A24(DFN,PID2) ;BUILD AND SEND A24 **43 added PID2 as a parameter - not required.
"RTN","MPIFA24B",9,0)
 ; if PID2 is defined it will contain the previous ICN data, passed by reference
"RTN","MPIFA24B",10,0)
 N RESLT,CNT,MPI,EVN,TCNT,ERR,PD1,PID
"RTN","MPIFA24B",11,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIFA24B",12,0)
 S CNT=1
"RTN","MPIFA24B",13,0)
 D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFA24B",14,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA24B",15,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA24B",16,0)
 S ERR="",TCNT=0
"RTN","MPIFA24B",17,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A24",.ERR)
"RTN","MPIFA24B",18,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",19,0)
 D BLDPID^VAFCQRY(DFN,1,"ALL",.PID,.HL,.ERR)
"RTN","MPIFA24B",20,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",21,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR)
"RTN","MPIFA24B",22,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",23,0)
 I '$D(PID2) D BLDPID^VAFCQRY(DFN,2,"ALL",.PID2,.HL,.ERR) ;**43 TO ONLY BUILD 2ND PID SEGMENT IF NOT PASSED
"RTN","MPIFA24B",24,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",25,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIFA24B",26,0)
 S HLA("HLS",3)=PD1(1)
"RTN","MPIFA24B",27,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA24B",28,0)
 .I CNT=1 S HLA("HLS",2)=PID(CNT)
"RTN","MPIFA24B",29,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=PID(CNT)
"RTN","MPIFA24B",30,0)
 S CNT=0 F  S CNT=$O(PID2(CNT)) Q:CNT=""  D
"RTN","MPIFA24B",31,0)
 .I CNT=1 S HLA("HLS",4)=PID2(CNT)
"RTN","MPIFA24B",32,0)
 .I CNT>1 S HLA("HLS",4,CNT-1)=PID2(CNT)
"RTN","MPIFA24B",33,0)
 S HLA("HLS",5)=$$EN1^VAFHLZPD(DFN,17) ;25
"RTN","MPIFA24B",34,0)
 K HLL("LINKS")
"RTN","MPIFA24B",35,0)
 D GENERATE^HLMA("MPIF ADT-A24 SERVER","LM",1,.MPIFRSLT,"","")
"RTN","MPIFA24B",36,0)
 S RESLT=$S(+MPIFRSLT:MPIFRSLT,1:$P(MPIFRSLT,"^",3))
"RTN","MPIFA24B",37,0)
 I '+RESLT S ^XTMP("MPIFA24%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"A24 message to MPI for DFN "_DFN,^XTMP("MPIFA24%"_DFN,"MPI",0)="A"
"RTN","MPIFA24B",38,0)
 K HLA,HLEID,HLL("LINKS"),COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS"),MPIFRSLT
"RTN","MPIFA24B",39,0)
 Q RESLT
"RTN","MPIFA24B",40,0)
 ;
"RTN","MPIFA24B",41,0)
RT ;
"RTN","MPIFA24B",42,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA24B",43,0)
 I $P($G(MPI),"^")=-1 D START^RGHLLOG(),EXC^RGHLLOG(224,"No logical link defined for the MPI",$G(DFN)),STOP^RGHLLOG() Q
"RTN","MPIFA24B",44,0)
 S HLL("LINKS",1)="MPIF ADT-A24 CLIENT^"_MPI
"RTN","MPIFA24B",45,0)
 Q
"RTN","MPIFA24B",46,0)
RES ;
"RTN","MPIFA24B",47,0)
 N NXT,DFN
"RTN","MPIFA24B",48,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA24B",49,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA24B",50,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA24B",51,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA24B",52,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA24B",53,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA24B",54,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA24B",55,0)
 K ^XTMP("MPIFA24%"_DFN)
"RTN","MPIFA24B",56,0)
 Q
"RTN","MPIFAPI")
0^1^B28137088
"RTN","MPIFAPI",1,0)
MPIFAPI ;CMC/BP-APIS FOR MPI ;DEC 21, 1998
"RTN","MPIFAPI",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,14,16,17,21,27,28,33,35,37,43**;30 Apr 99
"RTN","MPIFAPI",3,0)
 ; Integration Agreements Utilized:
"RTN","MPIFAPI",4,0)
 ;   ^DPT( - #2070 and #4079
"RTN","MPIFAPI",5,0)
 ;   ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFAPI",6,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFAPI",7,0)
 ;
"RTN","MPIFAPI",8,0)
EN2() ;NEW ENTRY POINT FOR LOCALS
"RTN","MPIFAPI",9,0)
 N MPIOUT,DIC,MPICHK,MPINCK,MPINNM,MPINUM1,DA,MPINUM
"RTN","MPIFAPI",10,0)
 I $O(^MPIF(984.1,0))="" G SETUP
"RTN","MPIFAPI",11,0)
AGN2 L +^MPIF(984.1):1 E  H 3 G AGN2
"RTN","MPIFAPI",12,0)
 S MPINUM=0,X=$$SITE^VASITE,X=$P(X,"^",3),X=X\1
"RTN","MPIFAPI",13,0)
 S DIC="^MPIF(984.1,",DIC(0)="XZ" D ^DIC
"RTN","MPIFAPI",14,0)
 S MPINUM1=$P(Y(0),"^",4),MPICHK=$P(Y(0),"^",5),MPINNM=MPINUM1+1
"RTN","MPIFAPI",15,0)
 S MPINUM=MPINUM1_"V"_MPICHK,MPINCK=$$CHECKDG^MPIFSPC(MPINNM)
"RTN","MPIFAPI",16,0)
 S DA=1,DIE="^MPIF(984.1,",DR="1////^S X=MPINUM1;2////^S X=MPICHK;3////^S X=MPINNM;5////"_MPINCK
"RTN","MPIFAPI",17,0)
 D ^DIE
"RTN","MPIFAPI",18,0)
 K DIE,DR,X,Y
"RTN","MPIFAPI",19,0)
 L -^MPIF(984.1)
"RTN","MPIFAPI",20,0)
 Q MPINUM
"RTN","MPIFAPI",21,0)
SETUP ;
"RTN","MPIFAPI",22,0)
 N CHK,NUM,NXTCHK,NXTNUM,SITE,DA
"RTN","MPIFAPI",23,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFAPI",24,0)
 S DIC="^MPIF(984.1,",DA=1,DIC(0)="",X=SITE
"RTN","MPIFAPI",25,0)
 S NUM=SITE_"0000000",CHK=$$CHECKDG^MPIFSPC(NUM),MPINUM=NUM_"V"_CHK
"RTN","MPIFAPI",26,0)
 S NXTNUM=NUM+1,NXTCHK=$$CHECKDG^MPIFSPC(NXTNUM)
"RTN","MPIFAPI",27,0)
 S DIC("DR")="1////^S X=NUM;2////^S X=CHK;3////^S X=NXTNUM;5////"_NXTCHK
"RTN","MPIFAPI",28,0)
 K DD,D0
"RTN","MPIFAPI",29,0)
 D FILE^DICN
"RTN","MPIFAPI",30,0)
 K DIC,X,Y
"RTN","MPIFAPI",31,0)
 Q MPINUM
"RTN","MPIFAPI",32,0)
 ;
"RTN","MPIFAPI",33,0)
MPILINK() ;returns MPI logical Link
"RTN","MPIFAPI",34,0)
 N MPIL,MPILINK
"RTN","MPIFAPI",35,0)
 D LINK^HLUTIL3("MPI",.MPIL)
"RTN","MPIFAPI",36,0)
 I '$D(MPIL) Q "-1^NOT DEFINED"
"RTN","MPIFAPI",37,0)
 S MPILINK=$O(MPIL(0))
"RTN","MPIFAPI",38,0)
 I MPILINK="" Q "-1^NOT DEFINED"
"RTN","MPIFAPI",39,0)
 S MPILINK=$G(MPIL(MPILINK))
"RTN","MPIFAPI",40,0)
 Q MPILINK
"RTN","MPIFAPI",41,0)
 ;
"RTN","MPIFAPI",42,0)
SUBNUM(DFN) ; returns SCN from MPI node for given DFN
"RTN","MPIFAPI",43,0)
 ; DFN - ien of patient file
"RTN","MPIFAPI",44,0)
 ; returns:  -1^error message << always returns.
"RTN","MPIFAPI",45,0)
 ;*** Subscription control numbers no longer exist
"RTN","MPIFAPI",46,0)
 Q "-1^No Subscription Control Number for DFN "_DFN
"RTN","MPIFAPI",47,0)
 ;
"RTN","MPIFAPI",48,0)
MPINODE(DFN) ; returns MPI node for given DFN
"RTN","MPIFAPI",49,0)
 ; DFN - patient file ien
"RTN","MPIFAPI",50,0)
 ; returns:  -1^error message or MPI node from patient file
"RTN","MPIFAPI",51,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",52,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",53,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",54,0)
 N NODE S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIFAPI",55,0)
 I NODE=""!(NODE?."^") S NODE="-1^No MPI data for DFN "_DFN
"RTN","MPIFAPI",56,0)
 Q NODE
"RTN","MPIFAPI",57,0)
 ;
"RTN","MPIFAPI",58,0)
GETADFN(ICN) ; return DFN ONLY if ICN is the active ICN
"RTN","MPIFAPI",59,0)
 ; ICN - Integration Control Number for patient to be returned
"RTN","MPIFAPI",60,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",61,0)
 ;           DFN - IEN for the patient entry in the Patient file (#2)
"RTN","MPIFAPI",62,0)
 N RETURN,DFN
"RTN","MPIFAPI",63,0)
 I $G(ICN)'>0 Q "-1^NO ICN"
"RTN","MPIFAPI",64,0)
 I '$D(^DPT("AICN",ICN)) Q "-1^ICN NOT IN DATABASE"
"RTN","MPIFAPI",65,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIFAPI",66,0)
 I $G(DFN)'>0 Q "-1^BAD AICN CROSS-REFERENCE"
"RTN","MPIFAPI",67,0)
 I $P($G(^DPT(DFN,"MPI")),"^")'=ICN Q "-1^ICN is not Active one"
"RTN","MPIFAPI",68,0)
 Q DFN
"RTN","MPIFAPI",69,0)
 ;
"RTN","MPIFAPI",70,0)
UPDATE(DFN,ARR,MPISILNT,REMOVE) ;api to edit 'mpi','mpifhis' and 'mpicmor' nodes
"RTN","MPIFAPI",71,0)
 ;**37 UPDATE module moved 3/30/05 from MPIFAPI into MPIFAPI1.
"RTN","MPIFAPI",72,0)
 ;Linetag must remain due to DBIA #2706.
"RTN","MPIFAPI",73,0)
 Q $$UPDATE^MPIFAPI1(DFN,ARR,.MPISILNT,.REMOVE)
"RTN","MPIFAPI",74,0)
 ;
"RTN","MPIFAPI",75,0)
MPIQ(DFN) ;MPI QUERY
"RTN","MPIFAPI",76,0)
 L +^DPT(DFN):2 I '$T,'$D(MPIFS) W $C(7),!!,"Patient is being edited. No attempt will be made to connect to the MPI." H 2 Q
"RTN","MPIFAPI",77,0)
 I '$D(MPIFS) D  ;Not from SmartCard background job
"RTN","MPIFAPI",78,0)
 .;**37 mods to L -^DPT
"RTN","MPIFAPI",79,0)
 .I $G(DGNEW)=1 D  ;New patient, fields always blank, ask
"RTN","MPIFAPI",80,0)
 ..D WRTLN
"RTN","MPIFAPI",81,0)
 ..S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",82,0)
 ..S DR=".2403;.092;.093;1",DR(2,2.01)=".01" D ^DIE K DA,DIE,DR Q
"RTN","MPIFAPI",83,0)
 .I $G(DGNEW)="" D  ;Existing patient, get current values
"RTN","MPIFAPI",84,0)
 ..K MPIFARR N MPIDOB,IMPRS,MPIMMN,MPICTY,MPIST
"RTN","MPIFAPI",85,0)
 ..S DIC=2,DR=".02;.03;.09;.092;.093;.2403;994;1",DR(2.01)=".01"
"RTN","MPIFAPI",86,0)
 ..S DA=DFN,DA(2.01)=1,DIQ(0)="EI",DIQ="MPIFARR"
"RTN","MPIFAPI",87,0)
 ..D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",88,0)
 ..;build DR from blank fields / imprecise DOB / pseudo SSN
"RTN","MPIFAPI",89,0)
 ..S DR=""
"RTN","MPIFAPI",90,0)
 ..S MPIDOB=$G(MPIFARR(2,DFN,.03,"I")) ;DATE OF BIRTH
"RTN","MPIFAPI",91,0)
 ..I MPIDOB="" S DR=DR_".03;" ;DOB null
"RTN","MPIFAPI",92,0)
 ..;Is DOB imprecise?
"RTN","MPIFAPI",93,0)
 ..I MPIDOB'="" S IMPRS=0 D
"RTN","MPIFAPI",94,0)
 ...I $E(MPIDOB,4,7)="0000" S IMPRS=1 ;Year only; no month/day
"RTN","MPIFAPI",95,0)
 ...I ($E(MPIDOB,6,7)="00")&($E(MPIDOB,4,5)'="00") S IMPRS=1 ;Year/month only; no day
"RTN","MPIFAPI",96,0)
 ...I IMPRS=1 S DR=DR_".03;" ;DOB imprecise
"RTN","MPIFAPI",97,0)
 ..I $G(MPIFARR(2,DFN,.02,"I"))="" S DR=DR_".02;" ;SEX
"RTN","MPIFAPI",98,0)
 ..I ($G(MPIFARR(2,DFN,.09,"E"))="")!($G(MPIFARR(2,DFN,.09,"E"))["P") S DR=DR_".09;" ;SOCIAL SECURITY NUMBER
"RTN","MPIFAPI",99,0)
 ..I $G(MPIFARR(2,DFN,994,"I"))="" S DR=DR_"994;" ;MULTIPLE BIRTH INDICATOR
"RTN","MPIFAPI",100,0)
 ..S MPIMMN=$G(MPIFARR(2,DFN,.2403,"E")) ;MOTHER'S MAIDEN NAME
"RTN","MPIFAPI",101,0)
 ..I $$VALDT(MPIMMN) S DR=DR_".2403;" ;Validate MMN value
"RTN","MPIFAPI",102,0)
 ..S MPICTY=$G(MPIFARR(2,DFN,.092,"E")) ;PLACE OF BIRTH [CITY]
"RTN","MPIFAPI",103,0)
 ..S MPIST=$G(MPIFARR(2,DFN,.093,"E")) ;PLACE OF BIRTH [STATE]
"RTN","MPIFAPI",104,0)
 ..I $S($$VALDT(MPICTY):1,$$VALDT(MPIST):1,1:0) S DR=DR_".092;.093;" ;Validate POB [CITY] & [STATE] value
"RTN","MPIFAPI",105,0)
 ..I $G(MPIFARR(2.01,1,.01,"E"))="" S DR=DR_"1",DR(2,2.01)=".01" ;ALIAS
"RTN","MPIFAPI",106,0)
 ..K MPIFARR
"RTN","MPIFAPI",107,0)
 ..I DR'="" D
"RTN","MPIFAPI",108,0)
 ...D WRTLN
"RTN","MPIFAPI",109,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",110,0)
 ...D ^DIE K DA,DIE,DR
"RTN","MPIFAPI",111,0)
 L -^DPT(DFN)
"RTN","MPIFAPI",112,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFAPI",113,0)
 K MPIFRTN D VTQ^MPIFQ0
"RTN","MPIFAPI",114,0)
 ;**43 No longer get list of potential matches to pick from
"RTN","MPIFAPI",115,0)
 ;I $G(MPIFRTN)="" D
"RTN","MPIFAPI",116,0)
 ;. ^ Quit at LM screen when presented with a list of possible matches
"RTN","MPIFAPI",117,0)
 ;. \/ setup Local ICN and proceed
"RTN","MPIFAPI",118,0)
 ;.N ICN,ERR
"RTN","MPIFAPI",119,0)
 ;.S ICN=$$EN2^MPIFAPI()
"RTN","MPIFAPI",120,0)
 ;.Q:ICN=""!(+ICN=-1)
"RTN","MPIFAPI",121,0)
 ;.S ERR=$$SETICN^MPIF001(DFN,+ICN,$P(ICN,"V",2))
"RTN","MPIFAPI",122,0)
 ;.Q:+ERR=-1
"RTN","MPIFAPI",123,0)
 ;. ^ couldn't set ICN don't set other fields
"RTN","MPIFAPI",124,0)
 ;.S ERR=$$SETLOC^MPIF001(DFN,1),ERR=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFAPI",125,0)
 K MPIFRTN,ZTREQ
"RTN","MPIFAPI",126,0)
 Q
"RTN","MPIFAPI",127,0)
 ;
"RTN","MPIFAPI",128,0)
MPIQQ(PDFN) ; Entry point for queuing d/c
"RTN","MPIFAPI",129,0)
 ; Returned is -1^error message OR Task #
"RTN","MPIFAPI",130,0)
 Q:'$D(PDFN) "-1^No DFN passed"
"RTN","MPIFAPI",131,0)
 S ZTRTN="MPIQ^MPIFAPI(PDFN)"
"RTN","MPIFAPI",132,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFAPI",133,0)
 S ZTSAVE("PDFN")=PDFN,ZTSAVE("MPIFS")=1
"RTN","MPIFAPI",134,0)
 ; ^ silent flag
"RTN","MPIFAPI",135,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFAPI",136,0)
 D ^%ZTLOAD
"RTN","MPIFAPI",137,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFAPI",138,0)
 N TSK S TSK=ZTSK
"RTN","MPIFAPI",139,0)
 K ZTSAVE,ZTRTN,ZTIO,ZTDTH,ZTSK
"RTN","MPIFAPI",140,0)
 Q TSK
"RTN","MPIFAPI",141,0)
 ;
"RTN","MPIFAPI",142,0)
WRTLN ;**37 Write intro text ONLY if there are fields to ask
"RTN","MPIFAPI",143,0)
 W !!,"Please verify or update the following information:",!
"RTN","MPIFAPI",144,0)
 Q
"RTN","MPIFAPI",145,0)
 ;
"RTN","MPIFAPI",146,0)
VALDT(VAL) ;**37 Validate value passed in.
"RTN","MPIFAPI",147,0)
 ;Prompt if field contains invalid data (e.g., UNKNOWN, NOT KNOWN, etc.)
"RTN","MPIFAPI",148,0)
 ;Returns 0 if not found
"RTN","MPIFAPI",149,0)
 ;Returns 1 if found
"RTN","MPIFAPI",150,0)
 I VAL="" Q 1
"RTN","MPIFAPI",151,0)
 I $E($$UP^XLFSTR(VAL),1,3)="UNK" Q 1
"RTN","MPIFAPI",152,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NONE" Q 1
"RTN","MPIFAPI",153,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NOT " Q 1
"RTN","MPIFAPI",154,0)
 I $$UP^XLFSTR(VAL)["UNAVAILABLE" Q 1
"RTN","MPIFAPI",155,0)
 I $$UP^XLFSTR(VAL)["DECEASED" Q 1
"RTN","MPIFAPI",156,0)
 I $E($$UP^XLFSTR(VAL),1,2)="DC" Q 1
"RTN","MPIFAPI",157,0)
 Q 0
"RTN","MPIFAPI",158,0)
 ;
"RTN","MPIFBT2")
0^2^B50661186
"RTN","MPIFBT2",1,0)
MPIFBT2 ;SLC/ARS-BATCH RESPONSE FROM MPI ;FEB 4, 1997
"RTN","MPIFBT2",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,10,17,21,31,43**;30 Apr 99
"RTN","MPIFBT2",3,0)
 ;
"RTN","MPIFBT2",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFBT2",5,0)
 ;   ^DGCN(391.91 - #2751
"RTN","MPIFBT2",6,0)
 ;   EXC, START, STOP ^RGHLLOG - #2796
"RTN","MPIFBT2",7,0)
 ;   XMITFLAG^VAFCDD01 - #3493
"RTN","MPIFBT2",8,0)
 ;   $$PIVNW^VAFHPIVT - #3494
"RTN","MPIFBT2",9,0)
 ;
"RTN","MPIFBT2",10,0)
ADDPAT ;Called when response from MPI is received for messages sent.
"RTN","MPIFBT2",11,0)
 K ^XTMP($J,"MPIF") D NOW^%DTC S ST=%,X1=ST,X2=20 D C^%DTC
"RTN","MPIFBT2",12,0)
 S STP=X,^XTMP($J,"MPIF","MPIIN",0)=STP_"^"_ST_"^"_"MPI BATCH JOB"
"RTN","MPIFBT2",13,0)
 K %,X,Y,X1,X2,ST,STP N RGLOG,MPIMSG S MPIMSG=HLMTIEN
"RTN","MPIFBT2",14,0)
 D START^RGHLLOG(HLMTIEN,"","ADDPAT^MPIFBT2")
"RTN","MPIFBT2",15,0)
 D PREPMSG,PROCESS(MPIMSG),STOP^RGHLLOG(0)
"RTN","MPIFBT2",16,0)
 K ACK1,ACK2,ACK3,ACK4,HDR,MPICKG,MPIIN,MPIIPPF,MPIIT,MPINUM,MPIPPF,DA
"RTN","MPIFBT2",17,0)
 K CNTR,COM,ENC,ESC,LOCAL,MSHDR,PATID,REP,SCOM,SEP,SITE,MPIDTH,VISTDTH,MPITMP,MPICNTR,MPIFOK,^XTMP($J,"MPIF"),DGSENFLG
"RTN","MPIFBT2",18,0)
 Q
"RTN","MPIFBT2",19,0)
PREPMSG ;prepare for response
"RTN","MPIFBT2",20,0)
 N I,J,X F I=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFBT2",21,0)
 .S ^XTMP($J,"MPIF","MPIIN",I)=HLNODE,J=0
"RTN","MPIFBT2",22,0)
 .F  S J=$O(HLNODE(J))  Q:'J  S ^XTMP($J,"MPIF","MPIIN",I,J)=HLNODE(J)
"RTN","MPIFBT2",23,0)
 Q
"RTN","MPIFBT2",24,0)
PROCESS(MPIMSG) ;Process mesage out of array
"RTN","MPIFBT2",25,0)
 N HDR,MPICNTR S MPICNTR=1,HDR=^XTMP($J,"MPIF","MPIIN",1) ;check hdr here
"RTN","MPIFBT2",26,0)
 D CHDR(HDR,.SEP,MPICNTR,MPIMSG)
"RTN","MPIFBT2",27,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",28,0)
 F  S MPICNTR=$O(^XTMP($J,"MPIF","MPIIN",MPICNTR)) Q:'MPICNTR  D LOOPS(.MPICNTR,SEP,MPIMSG)
"RTN","MPIFBT2",29,0)
 Q
"RTN","MPIFBT2",30,0)
LOOPS(CNTR,SEP,MPIMSG) ;Loop in the batch
"RTN","MPIFBT2",31,0)
 K ^XTMP($J,"MPIF","MSHERR") N MSHDR,ACK1,ACK2,ACK3,ACK4,ACK5,PATID,LOCAL,MPITMP,LICN
"RTN","MPIFBT2",32,0)
 S MSHDR=^XTMP($J,"MPIF","MPIIN",+CNTR)
"RTN","MPIFBT2",33,0)
 D CHKMSH(MSHDR,.SITE,SEP,MPIMSG)
"RTN","MPIFBT2",34,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",35,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",36,0)
 S ACK1=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",37,0)
 I $P(ACK1,SEP)'="MSA" S ^XTMP($J,"MPIF","MSHERR")="NOT AN MSA SEGMENT" D EXC^RGHLLOG(203,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",38,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",39,0)
 I ACK1["AR" S ^XTMP($J,"MPIF","MSHERR")="APP REJECT ERROR" D EXC^RGHLLOG(207,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",40,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",41,0)
 I ACK1["AE" S ^XTMP($J,"MPIF","MSHERR")="APP ERROR" D EXC^RGHLLOG(208,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",42,0)
 ;ACK1 must be an AA
"RTN","MPIFBT2",43,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",44,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",45,0)
 S ACK2=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",46,0)
 I $P(ACK2,SEP)'="QAK" S ^XTMP($J,"MPIF","MSHERR")="NOT A QAK SEGMENT" D EXC^RGHLLOG(202,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",47,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",48,0)
 I ACK2["NO DATA" D
"RTN","MPIFBT2",49,0)
 .S ^XTMP($J,"MPIF","MSHERR")="NO DATA in MPI "
"RTN","MPIFBT2",50,0)
 .;**43 NO DATA FOUND TRIGGER ADD
"RTN","MPIFBT2",51,0)
 .S MPIFRPC=1 D A28^MPIFQ3($P(ACK2,SEP,2)) K MPIFRPC
"RTN","MPIFBT2",52,0)
 .I ACK2["POTENTIAL MATCHES" D EXC^RGHLLOG(218,"Potential matches found, please review via MPI/PD Exception Handler",$P(ACK2,SEP,2))
"RTN","MPIFBT2",53,0)
 .;.;D EXC^RGHLLOG(218,"For Patient DFN="_$P(ACK2,SEP,2)_".  Use Single Patient Initialization to MPI option to manually process.",$P(ACK2,SEP,2))
"RTN","MPIFBT2",54,0)
 .;I $D(^DPT($P(ACK2,SEP,2),0)) S LICN=$$ICNLC^MPIF001($P(ACK2,SEP,2))
"RTN","MPIFBT2",55,0)
 .; ^ create a local ICN
"RTN","MPIFBT2",56,0)
 .;I ACK2'["POTENTIAL MATCHES" D
"RTN","MPIFBT2",57,0)
 .;D EXC^RGHLLOG(209,"For Patient DFN="_$P(ACK2,SEP,2)_".  Need required fields before patient can be processed again the MPI.",$P(ACK2,SEP,2))
"RTN","MPIFBT2",58,0)
 .;I $D(^DPT($P(ACK2,SEP,2),0)) S LICN=$$ICNLC^MPIF001($P(ACK2,SEP,2))
"RTN","MPIFBT2",59,0)
 .; ^ create a local ICN
"RTN","MPIFBT2",60,0)
 .N TACK,TCNTR S TCNTR=CNTR,CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)),TACK=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",61,0)
 .I $P(TACK,SEP)="MSH" S CNTR=TCNTR
"RTN","MPIFBT2",62,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",63,0)
 S PATID=$P(ACK2,SEP,2),LOCAL=$G(^DPT(PATID,0)) ;Verify patient is in database
"RTN","MPIFBT2",64,0)
 I LOCAL']"" S ^XTMP($J,"MPIF","MSHERR")="PATIENT DFN NOT IN DATABASE- BAD " D EXC^RGHLLOG(210,"Around line number "_(CNTR*2)_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT2",65,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",66,0)
 ; **43 MOVED CNTR INCREASE TO GET TO NEXT MSH
"RTN","MPIFBT2",67,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",68,0)
 S ACK3=^XTMP($J,"MPIF","MPIIN",CNTR) ;RDF DEFINITION SEGMENT NO-OP
"RTN","MPIFBT2",69,0)
 I $P(ACK3,SEP)'="RDF" S ^XTMP($J,"MPIF","MSHERR")="NOT RDF SEGMENT" D EXC^RGHLLOG(204,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".",PATID)
"RTN","MPIFBT2",70,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",71,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",72,0)
 S RDTSEQ=1
"RTN","MPIFBT2",73,0)
 S ACK4(RDTSEQ)=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",74,0)
 I $P(ACK4(RDTSEQ),SEP)'="RDT" S ^XTMP($J,"MPIF","MSHERR")="NOT RDT SEGMENT" D EXC^RGHLLOG(205,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".",PATID)
"RTN","MPIFBT2",75,0)
 ;
"RTN","MPIFBT2",76,0)
 N RDTSQ S RDTSQ=0
"RTN","MPIFBT2",77,0)
 F  S RDTSQ=$O(^XTMP($J,"MPIF","MPIIN",CNTR,RDTSQ)) Q:'RDTSQ  D
"RTN","MPIFBT2",78,0)
 .S ACK4(RDTSEQ+1)=^XTMP($J,"MPIF","MPIIN",CNTR,RDTSQ),RDTSEQ=RDTSEQ+1
"RTN","MPIFBT2",79,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",80,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR))
"RTN","MPIFBT2",81,0)
 I MPITMP'>0 S:$E($G(^XTMP($J,"MPIF","MPIIN",MPITMP)),1,3)="BTS" CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR))
"RTN","MPIFBT2",82,0)
 Q:CNTR'>0
"RTN","MPIFBT2",83,0)
 D VFYRDT^MPIFBT3(.ACK4,SEP,CNTR,PATID,SITE,MPIMSG)
"RTN","MPIFBT2",84,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR))
"RTN","MPIFBT2",85,0)
 Q:MPITMP'>0
"RTN","MPIFBT2",86,0)
 S ACK5=^XTMP($J,"MPIF","MPIIN",MPITMP)
"RTN","MPIFBT2",87,0)
 I $P(ACK5,SEP)="RDT" D MULT^MPIFBT3(.CNTR,ACK5,SEP,MPIMSG,PATID)
"RTN","MPIFBT2",88,0)
 K RDTSEQ
"RTN","MPIFBT2",89,0)
 Q
"RTN","MPIFBT2",90,0)
TFLIST(TFSITE,PATID) ;adding TFSITE site for patient to Treating Facility List (#391.91)
"RTN","MPIFBT2",91,0)
 I $G(TFSITE)="" S ^XTMP($J,"MPIF","MSHERR")="Treating Facility = null" D EXC^RGHLLOG(212,"DFN = "_PATID_" Treating Facility = Null",PATID) Q
"RTN","MPIFBT2",92,0)
 S TFSITE=$$LKUP^XUAF4(TFSITE)
"RTN","MPIFBT2",93,0)
 Q:+TFSITE'>0
"RTN","MPIFBT2",94,0)
 Q:$D(^DGCN(391.91,"APAT",PATID,TFSITE))
"RTN","MPIFBT2",95,0)
 K DD,DO N DIC,X,Y L +^DGCN(391.91,0):60
"RTN","MPIFBT2",96,0)
 I '$T D EXC^RGHLLOG(212,"Unable to Lock Treating Facility file to add patient DFN="_PATID_" Facility= "_TFSITE,PATID) Q
"RTN","MPIFBT2",97,0)
 S DIC="^DGCN(391.91,",DIC("DR")=".02///`"_TFSITE,X=PATID,DIC(0)="LQZ"
"RTN","MPIFBT2",98,0)
 I $D(^DGCN(391.91,"APAT",PATID,TFSITE)) L -^DGCN(391.91,0) Q
"RTN","MPIFBT2",99,0)
 D FILE^DICN L -^DGCN(391.91,0)
"RTN","MPIFBT2",100,0)
 I +Y=-1,'$D(^DGCN(391.91,"APAT",PATID,TFSITE)) S ^XTMP($J,"MPIF","MSHERR")="Treating Facility Add Failed" D EXC^RGHLLOG(212,"DFN= "_PATID_"  Treating Facility= "_TFSITE_"  failed when adding an entry to the Treating Facility file.",PATID)
"RTN","MPIFBT2",101,0)
 K DD,DO,DIC,X,Y
"RTN","MPIFBT2",102,0)
 Q
"RTN","MPIFBT2",103,0)
TFUPDT(PATID,MPIMSG,CNTR) ;treating facility update message to pivot file
"RTN","MPIFBT2",104,0)
 N ERR,TRANS,EVDT,X,Y,%
"RTN","MPIFBT2",105,0)
 D NOW^%DTC S EVDT=% K %,X,Y
"RTN","MPIFBT2",106,0)
 S ERR=$$PIVNW^VAFHPIVT(PATID,EVDT,5,PATID_";DPT(")
"RTN","MPIFBT2",107,0)
 I +ERR<1 D EXC^RGHLLOG(212,"When trying to add Patient (DFN)"_PATID_"   message# "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT2",108,0)
 Q:+ERR<1
"RTN","MPIFBT2",109,0)
 D XMITFLAG^VAFCDD01("",+ERR)
"RTN","MPIFBT2",110,0)
 Q
"RTN","MPIFBT2",111,0)
CHDR(HDR,SEP,CNTR,MPIMSG) ;Only process Batch message responses
"RTN","MPIFBT2",112,0)
 I $P(HDR,"^")'="BHS" S ^XTMP($J,"MPIF","MSHERR")="BHS SEGMENT MISSING" D EXC^RGHLLOG(200,"for message "_MPIMSG_".  The segment contains "_HDR)
"RTN","MPIFBT2",113,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",114,0)
 S SEP=$G(HL("FS")) ;get field sep, and encoding characters
"RTN","MPIFBT2",115,0)
 I SEP="" S ^XTMP($J,"MPIF","MSHERR")="Missing field seperator" D EXC^RGHLLOG(200,"Missing field seperator")
"RTN","MPIFBT2",116,0)
 Q
"RTN","MPIFBT2",117,0)
CHKMSH(MSHDR,SITE,SEP,MPIMSG) ;VERIFY MSH
"RTN","MPIFBT2",118,0)
 I $P(MSHDR,SEP)="BTS" S ^XTMP($J,"MPIF","MSHERR")="BTS FOUND" Q
"RTN","MPIFBT2",119,0)
 S:$P(MSHDR,SEP)'="MSH" ^XTMP($J,"MPIF","MSHERR")="NOT MSH HEADER   MESSAGE# "_MPIMSG
"RTN","MPIFBT2",120,0)
 S:$E(MSHDR,4)'=SEP ^XTMP($J,"MPIF","MSHERR")="FIELD SEPARATOR MISMATCH   MESSAGE# "_MPIMSG
"RTN","MPIFBT2",121,0)
 I $D(^XTMP($J,"MPIF","MSHERR")) D EXC^RGHLLOG(201,$G(^XTMP($J,"MPIF","MSHERR")))
"RTN","MPIFBT2",122,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",123,0)
 S SITE=$P(MSHDR,SEP,6)
"RTN","MPIFBT2",124,0)
 I SITE="" S ^XTMP($J,"MPIF","MSHERR")="SITE NOT IN MSH"
"RTN","MPIFBT2",125,0)
 I $D(^XTMP($J,"MPIF","MSHERR")) D EXC^RGHLLOG(8,"MSH Doesn't Have SITE as 6th piece.   MESSAGE# "_MPIMSG)
"RTN","MPIFBT2",126,0)
 Q
"RTN","MPIFBT3")
0^3^B22745391
"RTN","MPIFBT3",1,0)
MPIFBT3 ;SLC/ARS-BATCH RESPONSE FROM MPI ;FEB 4, 1997
"RTN","MPIFBT3",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,10,17,21,24,28,31,33,35,43**;30 Apr 99
"RTN","MPIFBT3",3,0)
 ;
"RTN","MPIFBT3",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFBT3",5,0)
 ;  ^DPT("AICN", ^DPT("AICNL", ^DPT("AMPIMIS" - #2070
"RTN","MPIFBT3",6,0)
 ;  EXC^RGHLLOG - #2796
"RTN","MPIFBT3",7,0)
 ;  FILE^VAFCTFU - #2988
"RTN","MPIFBT3",8,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFBT3",9,0)
 ;
"RTN","MPIFBT3",10,0)
MULT(CNTR,ACK5,SEP,MPIMSG,PATID) ;multiple RDT segments
"RTN","MPIFBT3",11,0)
 N NEXTTF,MPITMP S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)),NEXTTF=$P(ACK5,SEP,8)
"RTN","MPIFBT3",12,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:MPITMP'>0
"RTN","MPIFBT3",13,0)
 S ACK5=^XTMP($J,"MPIF","MPIIN",MPITMP) K NEXTTF,MPITMP
"RTN","MPIFBT3",14,0)
 I $P(ACK5,SEP)="RDT" D MULT(.CNTR,ACK5,SEP,MPIMSG,PATID) ; ^ add to treating facility list.  If not RDT continue on processing next msh
"RTN","MPIFBT3",15,0)
 Q
"RTN","MPIFBT3",16,0)
VFYRDT(ACK4,SEP,CNTR,PATID,SITE,MPIMSG) ;Here is the meat
"RTN","MPIFBT3",17,0)
 N MPIY,IEN,MPICMOR,MPICOMP S DGSENFLG=""
"RTN","MPIFBT3",18,0)
 S MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFBT3",19,0)
 D RDT^MPIFSA3(.CNTR,.HL,.ACK4)
"RTN","MPIFBT3",20,0)
 D FINDHM(PATID,SEP,.MPIY,MPIMSG,CNTR)
"RTN","MPIFBT3",21,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",22,0)
 N MPINUM,MPICKG,MPIIT,DR,DIE,X,MPIIPPF,MPIPPF,RESLT
"RTN","MPIFBT3",23,0)
 S MPINUM=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",6),MPICKG=$P(MPINUM,"V",2),MPINUM=$P(MPINUM,"V",1)
"RTN","MPIFBT3",24,0)
 ;check if ICN already in use in Patient file
"RTN","MPIFBT3",25,0)
 I $D(^DPT("AICN",MPINUM)) D
"RTN","MPIFBT3",26,0)
 .Q:PATID=$O(^DPT("AICN",MPINUM,""))   ; same patient
"RTN","MPIFBT3",27,0)
 .S ^XTMP($J,"MPIF","MSHERR")="ICN already in use"
"RTN","MPIFBT3",28,0)
 .N DFN2 S DFN2=$O(^DPT("AICN",MPINUM,""))
"RTN","MPIFBT3",29,0)
 .D TWODFNS^MPIF002(DFN2,PATID,MPINUM)
"RTN","MPIFBT3",30,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",31,0)
 S DIE="^DPT(",DA=$P(MPIY,"^",1),MPIIT=$P(MPIY,"^",1),DR="991.01////^S X=MPINUM;991.02////^S X=MPICKG" D ^DIE K DR,DIE,DA
"RTN","MPIFBT3",32,0)
 S IEN=$P(MPIY,"^") ; check if need to kill Local/MISSING ICN field
"RTN","MPIFBT3",33,0)
 I $D(^DPT("AMPIMIS",IEN)) K ^DPT("AMPIMIS",IEN)
"RTN","MPIFBT3",34,0)
 I $D(^DPT("AICNL",1,IEN)) D
"RTN","MPIFBT3",35,0)
 .S DIE="^DPT(",DA=IEN,DR="991.04///@" D ^DIE K DR,DIE,DA
"RTN","MPIFBT3",36,0)
 S MPIIPPF=""
"RTN","MPIFBT3",37,0)
 S MPIPPF=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",5),MPICMOR=$$LKUP^XUAF4(MPIPPF)
"RTN","MPIFBT3",38,0)
 I MPICMOR'="" S MPIIPPF=$$CHANGE^MPIF001(MPIIT,MPICMOR)
"RTN","MPIFBT3",39,0)
 I +MPIIPPF<0 D EXC^RGHLLOG(211,"Around line number "_(CNTR*2)_"  CMOR= "_MPIPPF_" DFN= "_MPIIT_"  MESSAGE# "_MPIMSG,MPIIT)
"RTN","MPIFBT3",40,0)
 Q:+MPIIPPF<0
"RTN","MPIFBT3",41,0)
 I $D(^TMP("MPIFVQQ",$J,CNTR,"TF")) D
"RTN","MPIFBT3",42,0)
 . N MPINTFI,MPINTF,TFSTRG,TFIEN
"RTN","MPIFBT3",43,0)
 . S MPINTFI=0,MPINTF="",TFIEN="",TFSTRG=""
"RTN","MPIFBT3",44,0)
 . F  S MPINTFI=$O(^TMP("MPIFVQQ",$J,CNTR,"TF",MPINTFI)) Q:'MPINTFI  D
"RTN","MPIFBT3",45,0)
 .. S MPINTF=^TMP("MPIFVQQ",$J,CNTR,"TF",MPINTFI)
"RTN","MPIFBT3",46,0)
 .. S TFIEN=$$IEN^XUAF4($P(MPINTF,MPICOMP,1))
"RTN","MPIFBT3",47,0)
 .. Q:'TFIEN
"RTN","MPIFBT3",48,0)
 .. S TFSTRG=TFIEN_"^"_$$FMDATE^HLFNC($P(MPINTF,MPICOMP,2))_"^"_$P(MPINTF,MPICOMP,3)
"RTN","MPIFBT3",49,0)
 .. D FILE^VAFCTFU(PATID,TFSTRG,1)
"RTN","MPIFBT3",50,0)
 S RESLT=$$A24^MPIFA24B(PATID)
"RTN","MPIFBT3",51,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_PATID,PATID)
"RTN","MPIFBT3",52,0)
 K RESLT N RESLT
"RTN","MPIFBT3",53,0)
 S RESLT=$$A31^MPIFA31B(PATID)
"RTN","MPIFBT3",54,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A31 for DFN= "_PATID,PATID)
"RTN","MPIFBT3",55,0)
 K ^TMP("MPIFVQQ",$J)
"RTN","MPIFBT3",56,0)
 Q
"RTN","MPIFBT3",57,0)
FINDHM(PATID,SEP,MPIY,MPIMSG,CNTR) ;LOOKUP
"RTN","MPIFBT3",58,0)
 N DIC,X,Y,NM,YTMP,MPIN,EXACT
"RTN","MPIFBT3",59,0)
 Q:'$D(^TMP("MPIFVQQ",$J,CNTR,"DATA"))
"RTN","MPIFBT3",60,0)
 ;added I to DIC(0) allow processing of sensitive patients when DUZ=0
"RTN","MPIFBT3",61,0)
 S DGSENFLG="",DIC="^DPT(",DIC(0)="OISZ",X="`"_PATID D ^DIC K DIC
"RTN","MPIFBT3",62,0)
 S YTMP=Y
"RTN","MPIFBT3",63,0)
 I YTMP=-1 S ^XTMP($J,"MPIF","MSHERR")="LOOKUP FAILED" D EXC^RGHLLOG(210,"SSN = "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3)_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",64,0)
 Q:YTMP=-1
"RTN","MPIFBT3",65,0)
 S NM=$P(Y(0),"^"),YTMP=$G(Y(0)),MPIY=Y ; check if ICN already populated
"RTN","MPIFBT3",66,0)
 N ICN S ICN=$$GETICN^MPIF001(PATID)
"RTN","MPIFBT3",67,0)
 I +ICN'=-1,$E(+ICN,1,3)'=$P($$SITE^VASITE,"^",3) S ^XTMP($J,"MPIF","MSHERR")="Patient "_PATID_" Already has an ICN"
"RTN","MPIFBT3",68,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",69,0)
 S Y(0)=$G(YTMP)
"RTN","MPIFBT3",70,0)
 ;**43 ONLY EXACT MATCHES BEING RETURNED NO LONGER MAKE THESE CHECKES IN VISTA
"RTN","MPIFBT3",71,0)
 ;Q:$P(Y(0),"^",9)["P"&($P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3)="")
"RTN","MPIFBT3",72,0)
 ;I $P(Y(0),"^",9)'=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3) D
"RTN","MPIFBT3",73,0)
 ;.S ^XTMP($J,"MPIF","MSHERR")="SSN MISMATCH"
"RTN","MPIFBT3",74,0)
 ;.D EXC^RGHLLOG(213,"SSN on File = "_$P(Y(0),"^",9)_" SSN in Message = "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3)_"    MESSAGE # "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",75,0)
 ;.N LICN S LICN=$$ICNLC^MPIF001(PATID) ; create local ICN
"RTN","MPIFBT3",76,0)
 ;Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",77,0)
 ;D NAME^VAFCPID2(0,.NM,0) ; reformat name in DG 149 fashion for comparison
"RTN","MPIFBT3",78,0)
 ;S MPIN=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",2)_","_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",7)
"RTN","MPIFBT3",79,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",10)'="" S MPIN=MPIN_" "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",10)
"RTN","MPIFBT3",80,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",15)'="" S MPIN=MPIN_" "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",15)
"RTN","MPIFBT3",81,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",14)'="" S MPIN=MPIN_" "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",14)
"RTN","MPIFBT3",82,0)
 ;D NAME^VAFCPID2(0,.MPIN,0)
"RTN","MPIFBT3",83,0)
 ; check if Last and First Match--yes-- then check if middle name vs initial
"RTN","MPIFBT3",84,0)
 ;I $P(NM,",")=$P(MPIN,",")&($P($P(MPIN,",",2)," ")=$P($P(NM,",",2)," ")) D
"RTN","MPIFBT3",85,0)
 ;.N MPIMID,NMMN S MPIMID=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",10)
"RTN","MPIFBT3",86,0)
 ;.S NMMN=$P($P(NM,",",2)," ",2)
"RTN","MPIFBT3",87,0)
 ;.I $L(NMMN)>1&($L(MPIMID)=1),($E(NMMN,1)=MPIMID) S EXACT=1
"RTN","MPIFBT3",88,0)
 ;.I $L(MPIMID)>1&($L(NMMN)=1),($E(MPIMID,1)=NMMN) S EXACT=1
"RTN","MPIFBT3",89,0)
 ;I NM'=MPIN,'$D(EXACT) D
"RTN","MPIFBT3",90,0)
 ;.S ^XTMP($J,"MPIF","MSHERR")="NAME MISMATCH"
"RTN","MPIFBT3",91,0)
 ;.D EXC^RGHLLOG(214,"Name on File = "_$P(Y(0),"^")_"  Name in Message = "_MPIN_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",92,0)
 ;.N LICN S LICN=$$ICNLC^MPIF001(PATID) ;create local ICN
"RTN","MPIFBT3",93,0)
 ;check to see if SEX on MPI and local site match - no exception
"RTN","MPIFBT3",94,0)
 ;I $P($G(^DPT(PATID,0)),"^",2)'=$P($G(^TMP("MPIFVQQ",$J,CNTR,"DATA")),"^",11) D
"RTN","MPIFBT3",95,0)
 ;.S ^XTMP($J,"MPIF","MSHERR")="SEX MISMATCH"
"RTN","MPIFBT3",96,0)
 ;.D EXC^RGHLLOG(209,"PT on MPI "_MPIN_" has gender as "_$P($G(^TMP("MPIFVQQ",$J,CNTR,"DATA")),"^",10)_" While the Patient DFN= "_PATID_" has "_$P($G(^DPT(PATID,0)),"^",2)_" msg # "_MPIMSG_" about line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",97,0)
 ;.N LICN S LICN=$$ICNLC^MPIF001(PATID) ;create local ICN
"RTN","MPIFBT3",98,0)
 ;
"RTN","MPIFBT3",99,0)
 ;check to see if MPI has Date of Death or if VistA has DOD
"RTN","MPIFBT3",100,0)
 N MPIDTH,VISTDTH K %DT
"RTN","MPIFBT3",101,0)
 I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",9)'="" S X=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",9) D ^%DT S MPIDTH=Y
"RTN","MPIFBT3",102,0)
 I $D(^DPT(PATID,.35)),$P($G(^DPT(PATID,.35)),"^")'="" S VISTDTH=$P($G(^DPT(PATID,.35)),"^")\1
"RTN","MPIFBT3",103,0)
 I $D(MPIDTH)&$D(VISTDTH),MPIDTH'=VISTDTH D
"RTN","MPIFBT3",104,0)
 .N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y,Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT3",105,0)
 .D EXC^RGHLLOG(217,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",106,0)
 ; ^ BOTH HAVE DOD BUT THEY DON'T MATCH
"RTN","MPIFBT3",107,0)
 I '$D(MPIDTH)&($D(VISTDTH)) D
"RTN","MPIFBT3",108,0)
 .N Y S Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT3",109,0)
 .D EXC^RGHLLOG(216,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",110,0)
 ; ^ VISTA HAS DOD BUT MPI DOESN'T
"RTN","MPIFBT3",111,0)
 I $D(MPIDTH)&('$D(VISTDTH)) D
"RTN","MPIFBT3",112,0)
 .N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y
"RTN","MPIFBT3",113,0)
 .D EXC^RGHLLOG(215,"Around line "_(CNTR*2)_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",114,0)
 ; ^ MPI HAS DOD BUT VISTA DOESN'T
"RTN","MPIFBT3",115,0)
 Q
"RTN","MPIFD1")
0^11^B49972281
"RTN","MPIFD1",1,0)
MPIFD1 ;BIRM/CMC-POTENTIAL DUP ON MPI ;DEC 2, 2005
"RTN","MPIFD1",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**43**;30 Apr 99
"RTN","MPIFD1",3,0)
 ;
"RTN","MPIFD1",4,0)
INIT ;Entry point for List Manager Template - MPIF POTENTIAL DUP
"RTN","MPIFD1",5,0)
 Q
"RTN","MPIFD1",6,0)
HDR ;Header code for List Manager Template - MPIF POTENTIAL DUP (CLONED FROM HDR^MPIFQ1)
"RTN","MPIFD1",7,0)
 N SSN,DOB,MPIFQ1,NAME1,SEX
"RTN","MPIFD1",8,0)
 D GETDATA^MPIFQ0("^DPT(",DFN,"MPIFQ1",".01;.03;.09;.02","EI")
"RTN","MPIFD1",9,0)
 S NAME1=$G(MPIFQ1(2,DFN,.01,"E")),SSN=$G(MPIFQ1(2,DFN,.09,"E"))
"RTN","MPIFD1",10,0)
 S DOB=$G(MPIFQ1(2,DFN,.03,"I")),SEX=$G(MPIFQ1(2,DFN,.02,"E"))
"RTN","MPIFD1",11,0)
 I DOB]"" S DOB=$TR($$FMTE^XLFDT(DOB,"5D"),"/","-")
"RTN","MPIFD1",12,0)
 S VALMHDR(1)=" Possible MPI Matches for Patient: "_IOINHI_NAME1_IOINORM
"RTN","MPIFD1",13,0)
 S VALMHDR(2)="                              SSN: "_IOINHI_SSN_IOINORM
"RTN","MPIFD1",14,0)
 S VALMHDR(3)="                              DOB: "_IOINHI_DOB_IOINORM
"RTN","MPIFD1",15,0)
 S VALMHDR(4)="                              SEX: "_IOINHI_SEX_IOINORM,VALMHDR(5)=" "
"RTN","MPIFD1",16,0)
 Q
"RTN","MPIFD1",17,0)
START(INDEX) ;Starting entry point for envoking the List Manager Template MPIF MPIF POTENTIAL DUP
"RTN","MPIFD1",18,0)
 S VALMCNT=INDEX
"RTN","MPIFD1",19,0)
 D EN^VALM("MPIF POTENTIAL DUP")
"RTN","MPIFD1",20,0)
 Q
"RTN","MPIFD1",21,0)
SELECT N VALMY
"RTN","MPIFD1",22,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIFD1",23,0)
 I '$D(VALMY) Q
"RTN","MPIFD1",24,0)
 N DATA,INDEX,ICN,CHKSUM,NODE2
"RTN","MPIFD1",25,0)
 S INDEX=$O(VALMY(0)),DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFD1",26,0)
 S NODE2=$G(^TMP("MPIFVQQ",$J,INDEX,"INDICATOR"))
"RTN","MPIFD1",27,0)
 S DATA(.01)=$P(DATA,"^",1) I $E(DATA(.01),$L(DATA(.01)))=" " S DATA(.01)=$E(DATA(.01),1,$L(DATA(.01))-1) ;NAME
"RTN","MPIFD1",28,0)
 S DATA(.03)=$P(DATA,"^",4),DATA(.09)=$P(DATA,"^",3),DATA(.02)=$P(DATA,"^",11) ;DOB, SSN, SEX
"RTN","MPIFD1",29,0)
 S ICN=$P(DATA,"^",6),CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),DATA(991.01)=ICN,DATA(991.02)=CHKSUM,DATA(991.03)=$$LKUP^XUAF4($P(DATA,"^",5))
"RTN","MPIFD1",30,0)
 ;If NODE2["*" we have a pt in our list whose ICN is already at this site
"RTN","MPIFD1",31,0)
 I NODE2["*",$O(^DPT("AICN",ICN,""))'=DFN D  Q
"RTN","MPIFD1",32,0)
 .D CLEAR^VALM1,MSG1^MPIFQ3
"RTN","MPIFD1",33,0)
 .N DFN2 S DFN2=$O(^DPT("AICN",ICN,""))
"RTN","MPIFD1",34,0)
 .D TWODFNS^MPIF002(DFN2,DFN,ICN)
"RTN","MPIFD1",35,0)
 .S MPIFRTN="CONTINUE"
"RTN","MPIFD1",36,0)
 ;Does your patient have other VISTA systems sharing this ICN?  If so, can't match -- message to IMDQ?
"RTN","MPIFD1",37,0)
 ;Are there other sites in common (VISTA)?  If so matching isn't allowed - message to IMDQ
"RTN","MPIFD1",38,0)
 S (MORE,COMMON)=0
"RTN","MPIFD1",39,0)
 D COMPARE^MPIF002(DFN,INDEX,.COMMON,.MORE)
"RTN","MPIFD1",40,0)
 I COMMON S MSG="Site attempted to resolve MPI duplicate for ICNs "_ICN_" and "_$$GETICN^MPIF001(DFN)_" - they have TFs in common."
"RTN","MPIFD1",41,0)
 I MORE S MSG="Site attempted to resolve MPI duplicate for ICNs "_ICN_" and "_$$GETICN^MPIF001(DFN)_" - the site patient is now shared."
"RTN","MPIFD1",42,0)
 I COMMON!(MORE) D MIMDQ^MPIF002(ICN,$$GETICN^MPIF001(DFN),DFN,MSG) S PROCESS=1 K COMMON,MORE S MPIFRTN="CONTINUE" Q
"RTN","MPIFD1",43,0)
 ;User selected from list, does SSN & Name match?  no-ask if sure
"RTN","MPIFD1",44,0)
 N SSN,NAME,SEX,BIR K COMMON
"RTN","MPIFD1",45,0)
 D GETDATA^MPIFQ0("^DPT(",DFN,"MPIFQ1",".01;.09;.02;.03","EI")
"RTN","MPIFD1",46,0)
 S SSN=$G(MPIFQ1(2,DFN,.09,"E")),NAME=$G(MPIFQ1(2,DFN,.01,"E")),SEX=$G(MPIFQ1(2,DFN,.02,"I"))
"RTN","MPIFD1",47,0)
 S BIR=$G(MPIFQ1(2,DFN,.03,"I")) I BIR]"" S BIR=$TR($$FMTE^XLFDT(BIR,"5D"),"/","-")
"RTN","MPIFD1",48,0)
 ; if sex doesn't match -- not allowed to update ICN
"RTN","MPIFD1",49,0)
 I DATA(.02)'=SEX W !!,"Sex for these two patients doesn't match -- Can't select this patient until",!,"Sex matches between the MPI and your site.  No action will be taken." D PROMPT^MPIFQ3 S VALMBCK="R" Q
"RTN","MPIFD1",50,0)
 I SSN["P" S SSN=""
"RTN","MPIFD1",51,0)
 I DATA(.09)'=SSN W !!,"SSN for these two patients doesn't match -- Can't select this patient until",!,"SSN matches between the MPI and your site.  No action will be taken." D PROMPT^MPIFQ3 S VALMBCK="R" Q
"RTN","MPIFD1",52,0)
 D NAME^VAFCPID2(0,.NAME,0) ;reformat name into DG 149 format
"RTN","MPIFD1",53,0)
 N NAME3 S NAME3=DATA(.01) D NAME^VAFCPID2(0,.NAME3,0) S DATA(.01)=NAME3 ;reformat name into DG 149 format
"RTN","MPIFD1",54,0)
 N EXACT
"RTN","MPIFD1",55,0)
 ; check if Last, First MATCH if so is it a middle name vs middle initial
"RTN","MPIFD1",56,0)
 I $P(DATA(.01),",")=$P(NAME,",")&($P($P(NAME,",",2)," ")=$P($P(DATA(.01),",",2)," ")) D
"RTN","MPIFD1",57,0)
 .N MPIMID,NMMN S MPIMID=$P($P(DATA(.01),",",2)," ",2)
"RTN","MPIFD1",58,0)
 .S NMMN=$P($P(NAME,",",2)," ",2)
"RTN","MPIFD1",59,0)
 .I $L(NMMN)>1&($L(MPIMID)=1),($E(NMMN,1)=MPIMID) S EXACT=1
"RTN","MPIFD1",60,0)
 .I $L(MPIMID)>1&($L(NMMN)=1),($E(MPIMID,1)=NMMN) S EXACT=1
"RTN","MPIFD1",61,0)
 .I $D(EXACT),BIR'=DATA(.03) K EXACT
"RTN","MPIFD1",62,0)
 I DATA(.01)=NAME!($D(EXACT)) I BIR=DATA(.03) D  Q
"RTN","MPIFD1",63,0)
 .N PID2,ERR
"RTN","MPIFD1",64,0)
 .K DATA(.09),DATA(.01),DATA(.03)
"RTN","MPIFD1",65,0)
 .D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFD1",66,0)
 .D BLDPID^VAFCQRY(DFN,2,"ALL",.PID2,.HL,.ERR)
"RTN","MPIFD1",67,0)
 .D EDIT^MPIFQED(DFN,"DATA"),MSG3^MPIFQ3,PROMPT^MPIFQ3
"RTN","MPIFD1",68,0)
 .S RESLT=$$A24^MPIFA24B(DFN,.PID2) ;send a24 link icns
"RTN","MPIFD1",69,0)
 .S PROCESS=1 Q
"RTN","MPIFD1",70,0)
 ; \/ Name doesn't match exactly - ask if sure
"RTN","MPIFD1",71,0)
 D CLEAR^VALM1,MSG2^MPIFQ3,MSG^MPIFQ3(SSN,NAME,DATA(.09),DATA(.01),DATA(.03),BIR)
"RTN","MPIFD1",72,0)
 N ANS S ANS=$$PROMPT1^MPIFQ3()
"RTN","MPIFD1",73,0)
 I ANS K DATA(.09),DATA(.01),DATA(.03) D  Q
"RTN","MPIFD1",74,0)
 .;build PID segment to be the "from" value
"RTN","MPIFD1",75,0)
 .N PID2,ERR
"RTN","MPIFD1",76,0)
 .D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFD1",77,0)
 .D BLDPID^VAFCQRY(DFN,2,"ALL",.PID2,.HL,.ERR)
"RTN","MPIFD1",78,0)
 .D EDIT^MPIFQED(DFN,"DATA") S MPIFRTN="CONTINUE" ;UPDATE ICN
"RTN","MPIFD1",79,0)
 .W !!,"ICN and CMOR Updated" D PROMPT^MPIFQ3
"RTN","MPIFD1",80,0)
 .S PROCESS=1 N RESLT
"RTN","MPIFD1",81,0)
 .;TRIGGER A24 TO MPI TO LINK ICNs together
"RTN","MPIFD1",82,0)
 .S RESLT=$$A24^MPIFA24B(DFN,.PID2) ;SEND A24 LINKING ICNS
"RTN","MPIFD1",83,0)
 D MSG5^MPIFQ3,PROMPT^MPIFQ3 S VALMBCK="R"
"RTN","MPIFD1",84,0)
 Q
"RTN","MPIFD1",85,0)
MPIPD ; MPI PDAT CALL (CLONED FROM MPIPD^MPIFQ1)
"RTN","MPIFD1",86,0)
 N VALMY,CNT,Y
"RTN","MPIFD1",87,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIFD1",88,0)
 I '$D(VALMY) Q
"RTN","MPIFD1",89,0)
 N DATA,INDEX,ICN,CHKSUM,CMOR,CASE,CMOR3,TTF,ALIAS,POW,TAL,TMP
"RTN","MPIFD1",90,0)
 S INDEX=$O(VALMY(0)),Y="" D CLEAR^VALM1
"RTN","MPIFD1",91,0)
 S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFD1",92,0)
 S CMOR=$P(DATA,"^",5),CMOR3=CMOR,CMOR=$P($$NS^XUAF4($$LKUP^XUAF4(CMOR)),"^")
"RTN","MPIFD1",93,0)
 W !,"MPI Data:",!!!,?3,"ICN: ",+$P(DATA,"^",6),?30,"CMOR: ",CMOR," (",CMOR3,")"
"RTN","MPIFD1",94,0)
 W !,?2,"NAME: ",$P(DATA,"^")
"RTN","MPIFD1",95,0)
 W !,?3,"SSN: ",$P(DATA,"^",3),?30,"SEX: ",$P(DATA,"^",11)
"RTN","MPIFD1",96,0)
 W !,?3,"DOB: ",$P(DATA,"^",4)
"RTN","MPIFD1",97,0)
 W ?30,"DOD: ",$P(DATA,"^",9)
"RTN","MPIFD1",98,0)
 I $P(DATA,"^",20)="Y" W !?3,"Multiple Birth Indicator:  Yes"
"RTN","MPIFD1",99,0)
 I ($P(DATA,"^",12)='"")&($P(DATA,"^",13)'="") W !,?2,"PLACE OF BIRTH: ",$P(DATA,"^",12),", ",$P(DATA,"^",13)
"RTN","MPIFD1",100,0)
 I $P(DATA,"^",12)=""!($P(DATA,"^",13)="") W !,?2,"PLACE OF BIRTH: ",$P(DATA,"^",12)," ",$P(DATA,"^",13)
"RTN","MPIFD1",101,0)
 W !,?2,"MOTHER'S MAIDEN NAME: ",$P(DATA,"^",16)
"RTN","MPIFD1",102,0)
 W !,?2,"CLAIM NUMBER: ",$P(DATA,"^",17)
"RTN","MPIFD1",103,0)
 S POW=$P(DATA,"^",19) I POW'="" W !,?2,"POW STATUS: ",POW
"RTN","MPIFD1",104,0)
 S CASE=$P(DATA,"^",18)
"RTN","MPIFD1",105,0)
 I CASE'="" W !,?2,"Open Data Management Case",!,?5,"CASE#: ",$P(CASE,"/")_"   NOIS#: ",$P(CASE,"/",2),!,?5,"CASE WORKER: ",$P(CASE,"/",3)
"RTN","MPIFD1",106,0)
 I $D(^TMP("MPIFVQQ",$J,INDEX,"ALIAS")) W !,?2,"Alias(es): " D
"RTN","MPIFD1",107,0)
 .N XX S XX=0 F  S XX=$O(^TMP("MPIFVQQ",$J,INDEX,"ALIAS",XX)) Q:'XX  W !?10,^(XX)
"RTN","MPIFD1",108,0)
 I $D(^TMP("MPIFVQQ",$J,INDEX,"TF"))&($O(^TMP("MPIFVQQ",$J,INDEX,"TF",1))'="") D
"RTN","MPIFD1",109,0)
 .W !,?2,"TREATING FACILITY LIST:"
"RTN","MPIFD1",110,0)
 .N XX S XX=0 F  S XX=$O(^TMP("MPIFVQQ",$J,INDEX,"TF",XX)) Q:'XX  S TMP=$P($G(^(XX)),MPICOMP) I TMP'=CMOR3 W !?10,"Treating Facility: ",$P($$NS^XUAF4($$LKUP^XUAF4(TMP)),"^")," (",TMP,")"
"RTN","MPIFD1",111,0)
 D PROMPT^MPIFQ3
"RTN","MPIFD1",112,0)
 S VALMBCK="R"
"RTN","MPIFD1",113,0)
 Q
"RTN","MPIFD1",114,0)
CMOR ; CMOR PDAT CALL (CLONED FROM CMOR^MPIFQ1)
"RTN","MPIFD1",115,0)
 N VALMY,DATA,INDEX,ICN,CHKSUM,CMOR
"RTN","MPIFD1",116,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIFD1",117,0)
 I '$D(VALMY) Q
"RTN","MPIFD1",118,0)
 S INDEX=$O(VALMY(0)),DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFD1",119,0)
 S ICN=$P(DATA,"^",6),CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),CMOR=$P(DATA,"^",5)
"RTN","MPIFD1",120,0)
 I CMOR=$P($$SITE^VASITE(),"^",3) W !!,"CMOR is your site" G END
"RTN","MPIFD1",121,0)
 W !,"Please be patient while the data is being retrieved from the CMOR."
"RTN","MPIFD1",122,0)
 D EN1^XWB2HL7(.RETURN,CMOR,"VAFC REMOTE PDAT",1,ICN,"")  ; Request 
"RTN","MPIFD1",123,0)
 S ^XTMP("MPIFPDAT"_ICN,0)=$$FMADD^XLFDT(DT,2)_"^"_DT_"^"_"REMOTE PDAT QUERY",^XTMP("MPIFPDAT"_ICN,1)=RETURN(0)_"^"_$$NOW^XLFDT
"RTN","MPIFD1",124,0)
 S CNT=0
"RTN","MPIFD1",125,0)
AGAIN1 H 2 K RES1 D RTNDATA^XWBDRPC(.RES1,RETURN(0)) S CNT=CNT+1
"RTN","MPIFD1",126,0)
 I +RES1(0)=-1&(RES1(0)["Not DONE") I CNT<11 G AGAIN1
"RTN","MPIFD1",127,0)
 I +RES1(0)=-1&(RES1(0)["Not DONE") I CNT>10 W !,"Unable to get data" G END
"RTN","MPIFD1",128,0)
 I RES1(0)="0^New" I CNT<11 G AGAIN1
"RTN","MPIFD1",129,0)
 I RES1(0)="0^New" I CNT>10 W !,"Unable to get data" G END
"RTN","MPIFD1",130,0)
 I +RES1(0)=-1 W !!,$P(RES1(0),"^",2) G END
"RTN","MPIFD1",131,0)
 I RES1'="" I CNT<11 G AGAIN1
"RTN","MPIFD1",132,0)
 I RES1'="" I CNT>10 W !,"Unable to get data" Q
"RTN","MPIFD1",133,0)
 D CLEAR^VALM1
"RTN","MPIFD1",134,0)
 N NUM S NUM="",CNT=0
"RTN","MPIFD1",135,0)
 F  S NUM=$O(RES1(NUM)) Q:NUM=""  D
"RTN","MPIFD1",136,0)
 .I CNT>20 D PROMPT^MPIFQ3,CLEAR^VALM1 S CNT=0
"RTN","MPIFD1",137,0)
 .I RES1(NUM)["Additional" W !! S CNT=CNT+2
"RTN","MPIFD1",138,0)
 .I CNT<21 W !,RES1(NUM) S CNT=CNT+1
"RTN","MPIFD1",139,0)
END D PROMPT^MPIFQ3 S VALMBCK="R" K CNT,RETURN,RES1
"RTN","MPIFD1",140,0)
 Q
"RTN","MPIFD1",141,0)
HELP ; Help List Manager Action (MPIF POTENTIAL DUP (HELP))
"RTN","MPIFD1",142,0)
 D CLEAR^VALM1
"RTN","MPIFD1",143,0)
 K MPIFDUP S MPIFDUP=1 D MSG4^MPIFQ3,PROMPT^MPIFQ3 S VALMBCK="R" K MPIFDUP
"RTN","MPIFD1",144,0)
 Q
"RTN","MPIFD1",145,0)
EXIT ;Exit for List Manager Template MPIF MPIF POTENTIAL DUP
"RTN","MPIFD1",146,0)
 K VALMBCK,VALMCNT,VALMHDR
"RTN","MPIFD1",147,0)
 Q
"RTN","MPIFDUP")
0^10^B52696250
"RTN","MPIFDUP",1,0)
MPIFDUP ;BIRM/CMC-RESOLVE DUP ACTION ;DEC 2, 2005
"RTN","MPIFDUP",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**43**;30 Apr 99
"RTN","MPIFDUP",3,0)
 ;
"RTN","MPIFDUP",4,0)
POT ;EXCEPTION HANDLER CALLS HERE
"RTN","MPIFDUP",5,0)
 ;Potential Match on MPI, Query MPI, resolve duplicate if needed. **43 Added this entry point
"RTN","MPIFDUP",6,0)
 ; Only available when Exception Being Reviewed is Potential Match
"RTN","MPIFDUP",7,0)
 N SUB,PTEN
"RTN","MPIFDUP",8,0)
 S PTEN=$P(DATA,"^",10)
"RTN","MPIFDUP",9,0)
 I '$D(^RGHL7(991.1,"ADFN",218,DFN)) W !,"Potential Match Review Option is Only Available for Potential Match Exceptions" H 5 S VALMBCK="R" Q
"RTN","MPIFDUP",10,0)
 I $D(^RGHL7(991.1,"ADFN",218,DFN,PTEN)) S SUB=$O(^RGHL7(991.1,"ADFN",218,DFN,PTEN,"")) I $P($G(^RGHL7(991.1,PTEN,SUB,1,0)),"^",5)=1 W !,"Potential Match Review is Only Available for Exceptions still pending." H 5 S VALMBCK="R" Q
"RTN","MPIFDUP",11,0)
 I $E($$GETICN^MPIF001(DFN),1,3)=$P($$SITE^VASITE,"^",3) W !,"Messaging outstanding please try again in a few minutes." H 5 Q
"RTN","MPIFDUP",12,0)
 S VALMBCK="",MPIFRES="",MPIFINT=""
"RTN","MPIFDUP",13,0)
 D FULL^VALM1
"RTN","MPIFDUP",14,0)
 D EXC
"RTN","MPIFDUP",15,0)
 D PAUSE^VALM1
"RTN","MPIFDUP",16,0)
 K MPIFRES,MPIFINT
"RTN","MPIFDUP",17,0)
 N X,Y,DIR,DIE,DA,DR,IEN,IEN2
"RTN","MPIFDUP",18,0)
 I '$D(PROCESS) D
"RTN","MPIFDUP",19,0)
 .S DIR("A")="Do you want to mark this exception as processed? ",DIR(0)="YA",DIR("B")="NO" D ^DIR K DIR(0),DIR("A")
"RTN","MPIFDUP",20,0)
 .I Y S PROCESS=1 K X,Y
"RTN","MPIFDUP",21,0)
 I $D(PROCESS) D
"RTN","MPIFDUP",22,0)
 .S IEN="",IEN2="",IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11)
"RTN","MPIFDUP",23,0)
 .L +^RGHL7(991.1,IEN):10
"RTN","MPIFDUP",24,0)
 .S DA(1)=IEN,DA=IEN2,DR="6///"_1,DIE="^RGHL7(991.1,"_DA(1)_",1," D ^DIE K DIE,DA,DR
"RTN","MPIFDUP",25,0)
 .L -^RGHL7(991.1,IEN)
"RTN","MPIFDUP",26,0)
 .S $P(DATA,"^",9)=1
"RTN","MPIFDUP",27,0)
 K PROCESS
"RTN","MPIFDUP",28,0)
 Q
"RTN","MPIFDUP",29,0)
EXC ; Exception Entry Point
"RTN","MPIFDUP",30,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFDUP",31,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFDUP",32,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFDUP",33,0)
 S HLP("ACKTIME")=300,MPIQRYNM="POTENTIAL_DUP_RES"
"RTN","MPIFDUP",34,0)
 N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFDUP",35,0)
 N HL,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,TEST,SITE,MPIDC,SSN
"RTN","MPIFDUP",36,0)
 S HL("ECH")="^~\&",HL("FS")="|"
"RTN","MPIFDUP",37,0)
 S MPIIN="",MPIMCNT=DFN,MPICNT=1,MPICS=$E(HL("ECH"),1),MPIFRES=1
"RTN","MPIFDUP",38,0)
 D VTQ1^MPIFVTQ(DFN,.MPIOUT,.HL,.MPIQRYNM)
"RTN","MPIFDUP",39,0)
 I +MPIOUT(0)=-1 D  G EXIT
"RTN","MPIFDUP",40,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=$G(MPIOUT(0)),MPIFRTN="CONTINUE"
"RTN","MPIFDUP",41,0)
 ;Create MSH
"RTN","MPIFDUP",42,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1,HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")
"RTN","MPIFDUP",43,0)
 S HEADER=HEADER_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VQQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;**38 changed VTQ to VQQ
"RTN","MPIFDUP",44,0)
 S MPIOUT(1)=HEADER K MPIOUT(0)
"RTN","MPIFDUP",45,0)
 W !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If no SSN or inexact DOB or common name, this request",!,"may take some time, please be patient...",!
"RTN","MPIFDUP",46,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFDUP",47,0)
 K HLP("ACKTIME") ;kill the HLP array set for the ack timeout
"RTN","MPIFDUP",48,0)
 I +TEST=-1 D  G EXIT
"RTN","MPIFDUP",49,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=TEST
"RTN","MPIFDUP",50,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Could not connect to MPI or Timed Out.  Try again later."
"RTN","MPIFDUP",51,0)
 K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) ;array data is parsed into for display in LM
"RTN","MPIFDUP",52,0)
INIPARS ;
"RTN","MPIFDUP",53,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFDUP",54,0)
 S INDEX=0 K CHECK
"RTN","MPIFDUP",55,0)
LOOP1 ;
"RTN","MPIFDUP",56,0)
 ;process in ADT type messages
"RTN","MPIFDUP",57,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFDUP",58,0)
 K TWODFN S MPIQUIT=0
"RTN","MPIFDUP",59,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFDUP",60,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFDUP",61,0)
 .. S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFDUP",62,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFDUP",63,0)
DECIDE ;If no data in ^TMP that means the patient was not found in the MPI w/VTQ Query. So we go to A28 to add the patient to the MPI.
"RTN","MPIFDUP",64,0)
 N EXC,TEXT,EXACT,EXACT2,DATA,NODE2,ICN,CHKSUM,MORE,COMMON
"RTN","MPIFDUP",65,0)
 I '$D(^TMP("MPIFVQQ",$J)) W !,"No Potential Matches Found.",!!,"Exception has been marked automatically as processed." S PROCESS=1 G EXIT
"RTN","MPIFDUP",66,0)
 I INDEX=1 D
"RTN","MPIFDUP",67,0)
 .;need to check if exact match was returned.
"RTN","MPIFDUP",68,0)
 .S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFDUP",69,0)
 .S NODE2=$G(^TMP("MPIFVQQ",$J,INDEX,"INDICATOR"))
"RTN","MPIFDUP",70,0)
 .S DATA(.01)=$P(DATA,"^",1) I $E(DATA(.01),$L(DATA(.01)))=" " S DATA(.01)=$E(DATA(.01),1,$L(DATA(.01))-1) ;NAME
"RTN","MPIFDUP",71,0)
 .S DATA(.03)=$P(DATA,"^",4),DATA(.09)=$P(DATA,"^",3),DATA(.02)=$P(DATA,"^",11) ;DOB, SSN, SEX
"RTN","MPIFDUP",72,0)
 .S ICN=$P(DATA,"^",6),CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),DATA(991.01)=ICN,DATA(991.02)=CHKSUM,DATA(991.03)=$$LKUP^XUAF4($P(DATA,"^",5))
"RTN","MPIFDUP",73,0)
 .Q:NODE2["*"
"RTN","MPIFDUP",74,0)
 .;^ ICN is already known at this site
"RTN","MPIFDUP",75,0)
 .;check if this patient has another VISTA site now OR tfs in common
"RTN","MPIFDUP",76,0)
 .S (MORE,COMMON)=0
"RTN","MPIFDUP",77,0)
 .D COMPARE^MPIF002(DFN,INDEX,.COMMON,.MORE)
"RTN","MPIFDUP",78,0)
 .Q:COMMON!(MORE)
"RTN","MPIFDUP",79,0)
 .; check that now have an exact match returned
"RTN","MPIFDUP",80,0)
 .N MPIFD,SSN,NAME,SEX,NAME3,BIR K COMMON,MORE
"RTN","MPIFDUP",81,0)
 .D GETDATA^MPIFQ0("^DPT(",DFN,"MPIFD",".01;.09;.02;.03","EI")
"RTN","MPIFDUP",82,0)
 .S SSN=$G(MPIFD(2,DFN,.09,"E")),NAME=$G(MPIFD(2,DFN,.01,"E")),SEX=$G(MPIFD(2,DFN,.02,"I"))
"RTN","MPIFDUP",83,0)
 .S BIR=$G(MPIFD(2,DFN,.03,"I")) I BIR]"" S BIR=$TR($$FMTE^XLFDT(BIR,"5D"),"/","-")
"RTN","MPIFDUP",84,0)
 .; if dob doesn't match -- not allowed to update ICN automatically
"RTN","MPIFDUP",85,0)
 .Q:DATA(.03)'=BIR
"RTN","MPIFDUP",86,0)
 .; if sex doesn't match -- not allowed to update ICN automatically
"RTN","MPIFDUP",87,0)
 .Q:DATA(.02)'=SEX
"RTN","MPIFDUP",88,0)
 .;if dob doesn't match -- not allowed to update ICN automatically
"RTN","MPIFDUP",89,0)
 .I SSN["P" S SSN=""
"RTN","MPIFDUP",90,0)
 .Q:DATA(.09)'=SSN
"RTN","MPIFDUP",91,0)
 .D NAME^VAFCPID2(0,.NAME,0) ;reformat name into DG 149 format
"RTN","MPIFDUP",92,0)
 .S NAME3=DATA(.01) D NAME^VAFCPID2(0,.NAME3,0) S DATA(.01)=NAME3 ;reformat name into DG 149 format
"RTN","MPIFDUP",93,0)
 .; check if Last, First MATCH if so is it a middle name vs middle initial
"RTN","MPIFDUP",94,0)
 .I $P(DATA(.01),",")=$P(NAME,",")&($P($P(NAME,",",2)," ")=$P($P(DATA(.01),",",2)," ")) D
"RTN","MPIFDUP",95,0)
 ..N MPIMID,NMMN S MPIMID=$P($P(DATA(.01),",",2)," ",2)
"RTN","MPIFDUP",96,0)
 ..S NMMN=$P($P(NAME,",",2)," ",2)
"RTN","MPIFDUP",97,0)
 ..I $L(NMMN)>1&($L(MPIMID)=1),($E(NMMN,1)=MPIMID) S EXACT=1
"RTN","MPIFDUP",98,0)
 ..I $L(MPIMID)>1&($L(NMMN)=1),($E(MPIMID,1)=NMMN) S EXACT=1
"RTN","MPIFDUP",99,0)
 .I DATA(.01)=NAME!($D(EXACT)) K DATA(.09),DATA(.01),DATA(.03) D  Q
"RTN","MPIFDUP",100,0)
 ..N PID2,ERR
"RTN","MPIFDUP",101,0)
 ..D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFDUP",102,0)
 ..D BLDPID^VAFCQRY(DFN,2,"ALL",.PID2,.HL,.ERR)
"RTN","MPIFDUP",103,0)
 ..D EDIT^MPIFQED(DFN,"DATA"),MSG3^MPIFQ3,PROMPT^MPIFQ3
"RTN","MPIFDUP",104,0)
 ..S RESLT=$$A24^MPIFA24B(DFN,.PID2) ;send a24 link icns
"RTN","MPIFDUP",105,0)
 ..S PROCESS=1
"RTN","MPIFDUP",106,0)
 I $G(PROCESS)=1 G END
"RTN","MPIFDUP",107,0)
 D START^MPIFD1(INDEX) G END
"RTN","MPIFDUP",108,0)
EXIT I $D(MPIFINT) K MPIFINT,MPIFRES,MPIQRYNM,TSSN,TWODFN,SDFN
"RTN","MPIFDUP",109,0)
 K VALMCNT,VALMLST,CCMOR,FICN H 3 W:'$D(MPIFRPC) !!
"RTN","MPIFDUP",110,0)
END K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) Q
"RTN","MPIFDUP",111,0)
 ;
"RTN","MPIFDUP",112,0)
GETDATA(DIC,DA,MPIFAR,DR,EI) ;
"RTN","MPIFDUP",113,0)
 ;This function returns the values stored in the fields via FM call DIQ1
"RTN","MPIFDUP",114,0)
 ;DIC=file reference, DA=IEN in file, ARRAY=array for the values to be stored in, DR=fields requested, EI=external/internal values
"RTN","MPIFDUP",115,0)
 N DIQ S DIQ=MPIFAR
"RTN","MPIFDUP",116,0)
 I $G(EI)]"" S DIQ(0)=EI
"RTN","MPIFDUP",117,0)
 D EN^DIQ1
"RTN","MPIFDUP",118,0)
 Q
"RTN","MPIFDUP",119,0)
LOOP2 ;
"RTN","MPIFDUP",120,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFDUP",121,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFDUP",122,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFDUP",123,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFDUP",124,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFDUP",125,0)
 Q
"RTN","MPIFDUP",126,0)
MSH ;
"RTN","MPIFDUP",127,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFDUP",128,0)
 Q
"RTN","MPIFDUP",129,0)
MSA ;
"RTN","MPIFDUP",130,0)
 Q
"RTN","MPIFDUP",131,0)
RDF ;
"RTN","MPIFDUP",132,0)
 Q
"RTN","MPIFDUP",133,0)
QAK ;**43 added check for potential matches
"RTN","MPIFDUP",134,0)
 K MPIPOT S MPIPOT=0
"RTN","MPIFDUP",135,0)
 I MSG(1)["POTENTIAL MATCHES" S MPIPOT=1
"RTN","MPIFDUP",136,0)
 S SDFN=$P(MSG(1),HL("FS"),2)
"RTN","MPIFDUP",137,0)
 Q
"RTN","MPIFDUP",138,0)
RDT ;
"RTN","MPIFDUP",139,0)
 N NAME,ICN,BIRTHDAY,CMOR,IEN,SEG,HEREICN,STRING,LASTNAME,FRSTNAME,MIDDLE,SUFF,SEX,THISGUY
"RTN","MPIFDUP",140,0)
 S STRING="",INDEX=$G(INDEX)+1
"RTN","MPIFDUP",141,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFDUP",142,0)
 S SEG=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFDUP",143,0)
 S FRSTNAME=$P(SEG,"^",7),LASTNAME=$P(SEG,"^",2),MIDDLE=$P(SEG,"^",10),SUFF=$P(SEG,"^",15)
"RTN","MPIFDUP",144,0)
 S SSN=$P(SEG,"^",3),NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFDUP",145,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFDUP",146,0)
 I SUFF'="" S NAME=NAME_" "_SUFF
"RTN","MPIFDUP",147,0)
 S SEX=$P(SEG,"^",11)
"RTN","MPIFDUP",148,0)
 S ICN=$P(SEG,"^",6)
"RTN","MPIFDUP",149,0)
 S THISGUY=$$GETDFN^MPIF001(+ICN) I THISGUY=DFN Q
"RTN","MPIFDUP",150,0)
 S BIRTHDAY=$P(SEG,"^",4)
"RTN","MPIFDUP",151,0)
 S CMOR=$P(SEG,"^",5),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFDUP",152,0)
 S CMOR=$P($$NS^XUAF4(IEN),"^")
"RTN","MPIFDUP",153,0)
 S HEREICN=$$HEREICN^MPIFQ3($P(ICN,"V",1))
"RTN","MPIFDUP",154,0)
 I HEREICN S STRING=$$SETSTR^VALM1("*",STRING,1,1),^TMP("MPIFVQQ",$J,INDEX,"INDICATOR")="*"_"^"_HEREICN
"RTN","MPIFDUP",155,0)
 S STRING=$$SETSTR^VALM1(INDEX,STRING,2,4),STRING=$$SETSTR^VALM1($E(NAME,1,23),STRING,6,23)
"RTN","MPIFDUP",156,0)
 S STRING=$$SETSTR^VALM1(SSN,STRING,30,9),STRING=$$SETSTR^VALM1(BIRTHDAY,STRING,41,10)
"RTN","MPIFDUP",157,0)
 S STRING=$$SETSTR^VALM1(CMOR,STRING,54,20)
"RTN","MPIFDUP",158,0)
 S ^TMP("MPIFVQQ",$J,INDEX,0)=STRING,^TMP("MPIFVQQ",$J,"IDX",INDEX,INDEX)=""
"RTN","MPIFDUP",159,0)
 Q
"RTN","MPIFP43")
0^8^B958116
"RTN","MPIFP43",1,0)
MPIFP43 ;BIR/PTD-MPIF*1*43 PATCH POST INSTALL ROUTINE ;10/12/05
"RTN","MPIFP43",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**43**;30 Apr 99
"RTN","MPIFP43",3,0)
 ;
"RTN","MPIFP43",4,0)
 ;Reference to ^DPT("AICNL", supported by IA #2070
"RTN","MPIFP43",5,0)
 ;
"RTN","MPIFP43",6,0)
POST ;Reset the "AICNL" cross-reference to null so that existing entries
"RTN","MPIFP43",7,0)
 ;will be reprocessed by the Local/Missing ICN Resolution job.
"RTN","MPIFP43",8,0)
 D BMES^XPDUTL("     >> Reviewing the 'AICNL' cross-reference.")
"RTN","MPIFP43",9,0)
 I '$D(^DPT("AICNL",1)) D MES^XPDUTL("     >> No 'AICNL' cross-reference to reset.") Q
"RTN","MPIFP43",10,0)
 N CNT,DFN
"RTN","MPIFP43",11,0)
 S (DFN,CNT)=0
"RTN","MPIFP43",12,0)
 F  S DFN=$O(^DPT("AICNL",1,DFN)) Q:DFN=""  D
"RTN","MPIFP43",13,0)
 .S ^DPT("AICNL",1,DFN)="",CNT=CNT+1
"RTN","MPIFP43",14,0)
 D MES^XPDUTL("     >> Reset "_CNT_" 'AICNL' cross-references.")
"RTN","MPIFP43",15,0)
 Q
"RTN","MPIFQ0")
0^4^B70311672
"RTN","MPIFQ0",1,0)
MPIFQ0 ;ALB/RJS-QUERY HANDLER TOP LEVEL ;JUL 11, 1997
"RTN","MPIFQ0",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,8,14,13,16,17,21,20,24,26,28,31,33,35,38,43**;30 Apr 99
"RTN","MPIFQ0",3,0)
 ;
"RTN","MPIFQ0",4,0)
 ; Integration Agreements utilized:
"RTN","MPIFQ0",5,0)
 ;  EXC, START and STOP^RGHLLOG - #2796
"RTN","MPIFQ0",6,0)
 ;  FILE^VAFCTFU - #2988
"RTN","MPIFQ0",7,0)
 ;  $$EN^HLCSAC - #3471
"RTN","MPIFQ0",8,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFQ0",9,0)
 ;
"RTN","MPIFQ0",10,0)
INTACTV ;Interactive standalone query
"RTN","MPIFQ0",11,0)
 N DFN,NAME1,MPIFLL
"RTN","MPIFQ0",12,0)
 K DTOUT,DUOUT,X,Y,DIC
"RTN","MPIFQ0",13,0)
 S MPIFRES="",MPIFINT="",DIC="^DPT(",DIC(0)="AEMQ" D ^DIC
"RTN","MPIFQ0",14,0)
 I ($D(DTOUT))!($D(DUOUT))!((+$G(Y))<0) W:'$D(MPIFRPC) !,"TRY AGAIN LATER" G END
"RTN","MPIFQ0",15,0)
 S DFN=+Y,HLP("ACKTIME")=300
"RTN","MPIFQ0",16,0)
 W:'$D(MPIFRPC) !
"RTN","MPIFQ0",17,0)
CIRNEXC ; Exception Entry Point
"RTN","MPIFQ0",18,0)
 I +$$GETICN^MPIF001(DFN)>0,$$IFLOCAL^MPIF001(DFN)'=1 W:'$D(MPIFRPC) !,"Patient already has an ICN" G END
"RTN","MPIFQ0",19,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",20,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",21,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFQ0",22,0)
 I $$IFLOCAL^MPIF001(DFN)=1 S MPIFLL=""
"RTN","MPIFQ0",23,0)
 I $G(LOCDATA(2,DFN,991.01))>0&('$D(MPIFLL)) W:'$D(MPIFRPC) !,"Patient already has an ICN" G END
"RTN","MPIFQ0",24,0)
 S HLP("ACKTIME")=300,MPIQRYNM="EXACT_MATCH_QUERY"
"RTN","MPIFQ0",25,0)
 ;MPIQRYNM="VTQ_PID_ICN_NO_LOAD" **43 CHANGING QUERY NAME
"RTN","MPIFQ0",26,0)
 G JUMP
"RTN","MPIFQ0",27,0)
VTQ G:$G(DFN)']"" END
"RTN","MPIFQ0",28,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",29,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",30,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFQ0",31,0)
 ;S MPIQRYNM="VTQ_PID_ICN_NO_LOAD" **43 CHANGING QUERY NAME
"RTN","MPIFQ0",32,0)
 S MPIQRYNM="EXACT_MATCH_QUERY"
"RTN","MPIFQ0",33,0)
 I $G(LOCDATA(2,DFN,991.01))>0 S MPIFRTN="ALREADY HAS ICN" G END ;If Pt already has ICN don't connect to MPI
"RTN","MPIFQ0",34,0)
JUMP N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFQ0",35,0)
 N HL,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,TEST,SITE,MPIDC,SSN
"RTN","MPIFQ0",36,0)
 I $G(HLP("ACKTIME"))="" S HLP("ACKTIME")=30 ;If the HLP("ACKTIME") is not already set for the D/C
"RTN","MPIFQ0",37,0)
 S HL("ECH")="^~\&",HL("FS")="|"
"RTN","MPIFQ0",38,0)
 I '$D(MPIQRYNM) S MPIQRYNM="VTQ_PID_ICN"
"RTN","MPIFQ0",39,0)
 S MPIIN="",MPIMCNT=DFN,MPICNT=1,MPICS=$E(HL("ECH"),1)
"RTN","MPIFQ0",40,0)
 D VTQ1^MPIFVTQ(DFN,.MPIOUT,.HL,.MPIQRYNM) ; **33 remove field list to get all now
"RTN","MPIFQ0",41,0)
 I +MPIOUT(0)=-1 D  G EXIT
"RTN","MPIFQ0",42,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=$G(MPIOUT(0)),MPIFRTN="CONTINUE"
"RTN","MPIFQ0",43,0)
 ;Create MSH
"RTN","MPIFQ0",44,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1,HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")
"RTN","MPIFQ0",45,0)
 S HEADER=HEADER_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VQQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;**38 changed VTQ to VQQ
"RTN","MPIFQ0",46,0)
 S MPIOUT(1)=HEADER K MPIOUT(0)
"RTN","MPIFQ0",47,0)
 I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If no SSN or inexact DOB or common name, this request",!,"may take some time, please be patient...",!
"RTN","MPIFQ0",48,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFQ0",49,0)
 K HLP("ACKTIME") ;kill the HLP array set for the ack timeout
"RTN","MPIFQ0",50,0)
 I +TEST=-1 D  G EXIT
"RTN","MPIFQ0",51,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=TEST
"RTN","MPIFQ0",52,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Could not connect to MPI or Timed Out, assigning local ICN (if not already assigned)..."
"RTN","MPIFQ0",53,0)
 .D LOCAL^MPIFQ3(DFN) S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",54,0)
 K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) ;array data is parsed into for display in LM
"RTN","MPIFQ0",55,0)
INIPARS ;
"RTN","MPIFQ0",56,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFQ0",57,0)
 S INDEX=0 K CHECK
"RTN","MPIFQ0",58,0)
LOOP1 ;
"RTN","MPIFQ0",59,0)
 ;process in ADT type messages
"RTN","MPIFQ0",60,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFQ0",61,0)
 K TWODFN S MPIQUIT=0
"RTN","MPIFQ0",62,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFQ0",63,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFQ0",64,0)
 .. S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFQ0",65,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFQ0",66,0)
DECIDE ;If no data in ^TMP that means the patient was not found in the MPI w/VTQ Query. So we go to A28 to add the patient to the MPI.
"RTN","MPIFQ0",67,0)
 N EXC,TEXT,EXACT,EXACT2
"RTN","MPIFQ0",68,0)
 I '$D(^TMP("MPIFVQQ",$J)) D  G EXIT
"RTN","MPIFQ0",69,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Exact match for Patient was not found in the MPI..."
"RTN","MPIFQ0",70,0)
 .D A28^MPIFQ3(DFN) S MPIFRTN="DID A28"
"RTN","MPIFQ0",71,0)
 .;**43 log potential match exception if exist
"RTN","MPIFQ0",72,0)
 .I MPIPOT=1 D
"RTN","MPIFQ0",73,0)
 ..D START^RGHLLOG(0),EXC^RGHLLOG(218,"Potential match(es) found, please review via MPI/PD Exception Handler",DFN),STOP^RGHLLOG(0)
"RTN","MPIFQ0",74,0)
 ..K MPIPOT
"RTN","MPIFQ0",75,0)
 ;If INDEX=1 it means we got 1 match check SSN see if definitely same pt
"RTN","MPIFQ0",76,0)
 I (INDEX=1) D  G EXIT
"RTN","MPIFQ0",77,0)
 .;**43 Removed &(TSSN=SSN) from line above as there will only be an exact match returned now
"RTN","MPIFQ0",78,0)
 .N CCMOR,ICN,DATA,TICN,SNM,SNM2,IEN
"RTN","MPIFQ0",79,0)
 .S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA"),CMOR=$P(DATA,"^",5),ICN=$P(DATA,"^",6),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFQ0",80,0)
 .D START^RGHLLOG(0)
"RTN","MPIFQ0",81,0)
 .S TICN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",82,0)
 .I TICN>0,DFN'=TICN D
"RTN","MPIFQ0",83,0)
 ..D TWODFNS^MPIF002(TICN,DFN,ICN) S TWODFN=1
"RTN","MPIFQ0",84,0)
 ..I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Exception logged, another patient has the ICN returned already, requesting new ICN for this patient..."
"RTN","MPIFQ0",85,0)
 ..D A28^MPIFQ3(DFN),STOP^RGHLLOG(0) S MPIFRTN="Did A28" Q
"RTN","MPIFQ0",86,0)
 .;I TICN>0&(DFN'=TICN)
"RTN","MPIFQ0",87,0)
 .; CHECK IF NAME IS SAME - IF NOT POTENTIAL MATCH EXCEPTION
"RTN","MPIFQ0",88,0)
 .; **43 remove checks here as only exact match will be returned from the MPI
"RTN","MPIFQ0",89,0)
 .;S SNM=LOCDATA(2,DFN,.01) D NAME^VAFCPID2(DFN,.SNM,0) ;reformat name to DG 149 standard
"RTN","MPIFQ0",90,0)
 .;S SNM2=$P(DATA,"^") D NAME^VAFCPID2(0,.SNM2,0) S $P(DATA,"^")=SNM2
"RTN","MPIFQ0",91,0)
 .;I $P(SNM,",")=$P(SNM2,",")&($P($P(SNM2,",",2)," ")=$P($P(SNM,",",2)," ")) D
"RTN","MPIFQ0",92,0)
 .; ^first and last match - check for middle name vs middle initial
"RTN","MPIFQ0",93,0)
 .;N SNMN,SNMN2
"RTN","MPIFQ0",94,0)
 .;S SNMN=$P($P(SNM,",",2)," ",2),SNMN2=$P($P(SNM2,",",2)," ",2)
"RTN","MPIFQ0",95,0)
 .;I $L(SNMN)>1&($L(SNMN2)=1),$E(SNMN,1)=SNMN2 S EXACT=1
"RTN","MPIFQ0",96,0)
 .;I $L(SNMN2)>1&($L(SNMN)=1),$E(SNMN2,1)=SNMN S EXACT=1
"RTN","MPIFQ0",97,0)
 .;I $P($G(^DPT(DFN,0)),"^",2)'=$P(DATA,"^",11) S EXC=209,TEXT="Gender fields don't match between site and MPI for DFN "_DFN S EXACT2=1
"RTN","MPIFQ0",98,0)
 .;I SNM2'=SNM&('$D(EXACT))!($D(EXACT2)) D  Q
"RTN","MPIFQ0",99,0)
 .;I '$D(EXC) S EXC=214,TEXT="Name fields don't match between site and MPI for DFN "_DFN
"RTN","MPIFQ0",100,0)
 .;I $D(MPIFINT) D START^MPIFQ1(INDEX) Q
"RTN","MPIFQ0",101,0)
 .;I '$D(MPIFINT) D LOC2^MPIFQ3(DFN) Q
"RTN","MPIFQ0",102,0)
 .I '$D(MPIFS)&('$D(TWODFN)) W:'$D(MPIFRPC) !!,"Found Patient "_$G(LOCDATA(2,DFN,.01))_" on MPI",!,"  Updating ICN to "_+ICN_" and CMOR to "_$P($$NS^XUAF4(IEN),"^")_" ("_CMOR_")  - just a minute..."
"RTN","MPIFQ0",103,0)
 .D STOP^RGHLLOG(0),UPDATE(DFN,ICN,CMOR) S MPIFRTN="GOT 1 HIT FROM MPI"
"RTN","MPIFQ0",104,0)
 ;I '$D(MPIFINT) D  G EXIT
"RTN","MPIFQ0",105,0)
 ;. came in via PIMS options to d/c with MPI
"RTN","MPIFQ0",106,0)
 ;.I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Potential Matches Found, Assigning Local ICN..."
"RTN","MPIFQ0",107,0)
 ;.I '$D(EXC) S EXC=218,TEXT="Potential matches found for patient DFN= "_DFN_" Use Single Patient Initialization to MPI option to manually process."
"RTN","MPIFQ0",108,0)
 ;.D START^RGHLLOG(0),EXC^RGHLLOG(EXC,TEXT,DFN),STOP^RGHLLOG(0)
"RTN","MPIFQ0",109,0)
 ;.D LOCAL^MPIFQ3(DFN) S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",110,0)
 ;D START^MPIFQ1(INDEX) G END
"RTN","MPIFQ0",111,0)
EXIT I $D(MPIFINT) K MPIFINT,MPIFRES,MPIQRYNM,TSSN,TWODFN
"RTN","MPIFQ0",112,0)
 K VALMCNT,VALMLST,CCMOR,FICN H 3 W:'$D(MPIFRPC) !!
"RTN","MPIFQ0",113,0)
END K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) Q
"RTN","MPIFQ0",114,0)
 ;
"RTN","MPIFQ0",115,0)
UPDATE(DFN,ICN,CMOR) ;
"RTN","MPIFQ0",116,0)
 N TICN,CHKSUM,SETICN,SETLOC,CHANGE,RGLOG,LOCAL
"RTN","MPIFQ0",117,0)
 S CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),TICN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",118,0)
 I TICN>0,TICN'=DFN,'$D(TWODFN) D TWODFNS^MPIF002(TICN,DFN,ICN) Q
"RTN","MPIFQ0",119,0)
 S SETICN=$$SETICN^MPIF001(DFN,ICN,CHKSUM)
"RTN","MPIFQ0",120,0)
 I +SETICN'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET ICN IN MPIFQ0" Q
"RTN","MPIFQ0",121,0)
 S SETLOC=1,LOCAL="N"
"RTN","MPIFQ0",122,0)
 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3) S LOCAL="Y"
"RTN","MPIFQ0",123,0)
 I $G(LOCAL)="Y" S SETLOC=$$SETLOC^MPIF001(DFN,1)
"RTN","MPIFQ0",124,0)
 I $G(LOCAL)'="Y" S SETLOC=$$SETLOC^MPIF001(DFN,0)
"RTN","MPIFQ0",125,0)
 I +SETLOC'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SETLOC IN MPIFQ0" Q
"RTN","MPIFQ0",126,0)
 N CMOR1 S CMOR1=$$LKUP^XUAF4(CMOR)
"RTN","MPIFQ0",127,0)
 I CMOR1'="" S CHANGE=$$CHANGE^MPIF001(DFN,CMOR1)
"RTN","MPIFQ0",128,0)
 I CMOR1="" S CHANGE=-1
"RTN","MPIFQ0",129,0)
 I $G(LOCAL)="Y" S CHANGE=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFQ0",130,0)
 I +CHANGE'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET CMOR IN MPIFQ0" Q
"RTN","MPIFQ0",131,0)
 Q:$G(LOCAL)="Y"
"RTN","MPIFQ0",132,0)
 N RESLT S RESLT=$$A24^MPIFA24B(DFN)
"RTN","MPIFQ0",133,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_DFN,DFN)
"RTN","MPIFQ0",134,0)
 ; Added for patch 31, create treating facility list
"RTN","MPIFQ0",135,0)
 I $D(^TMP("MPIFVQQ",$J,INDEX,"TF")) D
"RTN","MPIFQ0",136,0)
 . N MPINTFI,MPINTF,TFSTRG,TFIEN,MPIFMDT
"RTN","MPIFQ0",137,0)
 . S MPINTFI=0
"RTN","MPIFQ0",138,0)
 . F  S MPINTFI=$O(^TMP("MPIFVQQ",$J,INDEX,"TF",MPINTFI)) Q:'MPINTFI  D
"RTN","MPIFQ0",139,0)
 .. S MPINTF=^TMP("MPIFVQQ",$J,INDEX,"TF",MPINTFI)
"RTN","MPIFQ0",140,0)
 .. S TFIEN=$$IEN^XUAF4($P(MPINTF,"^",1))
"RTN","MPIFQ0",141,0)
 .. S MPIFMDT=$$HL7TFM^XLFDT($P(MPINTF,"^",2)) I MPIFMDT<0 S MPIFMDT=""
"RTN","MPIFQ0",142,0)
 .. S TFSTRG=TFIEN_"^"_$G(MPIFMDT)_"^"_$P(MPINTF,"^",3)
"RTN","MPIFQ0",143,0)
 .. D FILE^VAFCTFU(DFN,TFSTRG,1)
"RTN","MPIFQ0",144,0)
 Q
"RTN","MPIFQ0",145,0)
GETDATA(DIC,DA,MPIFAR,DR,EI) ;
"RTN","MPIFQ0",146,0)
 ;This function returns the values stored in the fields via FM call DIQ1
"RTN","MPIFQ0",147,0)
 ;DIC=file reference, DA=IEN in file, ARRAY=array for the values to be stored in, DR=fields requested, EI=external/internal values
"RTN","MPIFQ0",148,0)
 N DIQ S DIQ=MPIFAR
"RTN","MPIFQ0",149,0)
 I $G(EI)]"" S DIQ(0)=EI
"RTN","MPIFQ0",150,0)
 D EN^DIQ1
"RTN","MPIFQ0",151,0)
 Q
"RTN","MPIFQ0",152,0)
LOOP2 ;
"RTN","MPIFQ0",153,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFQ0",154,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFQ0",155,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFQ0",156,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFQ0",157,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFQ0",158,0)
 Q
"RTN","MPIFQ0",159,0)
MSH ;
"RTN","MPIFQ0",160,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFQ0",161,0)
 Q
"RTN","MPIFQ0",162,0)
MSA ;
"RTN","MPIFQ0",163,0)
 Q
"RTN","MPIFQ0",164,0)
RDF ;
"RTN","MPIFQ0",165,0)
 Q
"RTN","MPIFQ0",166,0)
QAK ;**43 added check for potential matches
"RTN","MPIFQ0",167,0)
 K MPIPOT S MPIPOT=0
"RTN","MPIFQ0",168,0)
 I MSG(1)["POTENTIAL MATCHES" S MPIPOT=1
"RTN","MPIFQ0",169,0)
 Q
"RTN","MPIFQ0",170,0)
RDT ;
"RTN","MPIFQ0",171,0)
 N NAME,ICN,BIRTHDAY,CMOR,IEN,SEG,HEREICN,STRING,LASTNAME,FRSTNAME,MIDDLE,SUFF,SEX
"RTN","MPIFQ0",172,0)
 S STRING="",INDEX=$G(INDEX)+1
"RTN","MPIFQ0",173,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFQ0",174,0)
 S SEG=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFQ0",175,0)
 S FRSTNAME=$P(SEG,"^",7),LASTNAME=$P(SEG,"^",2),MIDDLE=$P(SEG,"^",10),SUFF=$P(SEG,"^",15)
"RTN","MPIFQ0",176,0)
 S SSN=$P(SEG,"^",3),NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFQ0",177,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFQ0",178,0)
 I SUFF'="" S NAME=NAME_" "_SUFF
"RTN","MPIFQ0",179,0)
 S SEX=$P(SEG,"^",11)
"RTN","MPIFQ0",180,0)
 S ICN=$P(SEG,"^",6)
"RTN","MPIFQ0",181,0)
 S BIRTHDAY=$P(SEG,"^",4)
"RTN","MPIFQ0",182,0)
 S CMOR=$P(SEG,"^",5),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFQ0",183,0)
 S CMOR=$P($$NS^XUAF4(IEN),"^")
"RTN","MPIFQ0",184,0)
 S HEREICN=$$HEREICN^MPIFQ3($P(ICN,"V",1))
"RTN","MPIFQ0",185,0)
 I HEREICN S STRING=$$SETSTR^VALM1("*",STRING,1,1),^TMP("MPIFVQQ",$J,INDEX,"INDICATOR")="*"_"^"_HEREICN
"RTN","MPIFQ0",186,0)
 S STRING=$$SETSTR^VALM1(INDEX,STRING,2,4),STRING=$$SETSTR^VALM1($E(NAME,1,23),STRING,6,23)
"RTN","MPIFQ0",187,0)
 S STRING=$$SETSTR^VALM1(SSN,STRING,30,9),STRING=$$SETSTR^VALM1(BIRTHDAY,STRING,41,10)
"RTN","MPIFQ0",188,0)
 S STRING=$$SETSTR^VALM1(CMOR,STRING,54,20)
"RTN","MPIFQ0",189,0)
 S ^TMP("MPIFVQQ",$J,INDEX,0)=STRING,^TMP("MPIFVQQ",$J,"IDX",INDEX,INDEX)=""
"RTN","MPIFQ0",190,0)
 Q
"RTN","MPIFQ0",191,0)
 Q
"RTN","MPIFQ3")
0^9^B19268712
"RTN","MPIFQ3",1,0)
MPIFQ3 ;BIRM/CMC-QUERY LIST MANAGER FUNCTIONS ;APR 28, 2003
"RTN","MPIFQ3",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**28,43**;30 Apr 99
"RTN","MPIFQ3",3,0)
 ;
"RTN","MPIFQ3",4,0)
MSG(LOCSSN,LOCNAME,MPISSN,MPINAME,MPIDOB,LOCDOB) ;
"RTN","MPIFQ3",5,0)
 W !!!,"Local SSN = "_LOCSSN,?40,"MPI SSN = "_MPISSN
"RTN","MPIFQ3",6,0)
 W !,"Local NAME = "_LOCNAME,?40,"MPI NAME = "_MPINAME
"RTN","MPIFQ3",7,0)
 W !,"Local DATE OF BIRTH = "_LOCDOB,?40,"MPI DATE OF BIRTH = "_MPIDOB
"RTN","MPIFQ3",8,0)
 Q
"RTN","MPIFQ3",9,0)
MSG3 W !!,"Updating ICN and CMOR"
"RTN","MPIFQ3",10,0)
 Q
"RTN","MPIFQ3",11,0)
MSG1 W !!,"You are attempting to assign an ICN that has already been assigned",!,"to another patient in your Patient file."
"RTN","MPIFQ3",12,0)
 W !,"An exception will be recorded noting that these 2 patients ",!,"need to be reviewed to determine if they are duplicates."
"RTN","MPIFQ3",13,0)
 Q
"RTN","MPIFQ3",14,0)
MSG2 W !!,"You have selected a patient from the list of potential matches",!," where there is a difference found between your data and the MPI."
"RTN","MPIFQ3",15,0)
 W !," Are you sure this is the correct patient?"
"RTN","MPIFQ3",16,0)
 Q
"RTN","MPIFQ3",17,0)
MSG5 W !!,"No Action Taken"
"RTN","MPIFQ3",18,0)
 Q
"RTN","MPIFQ3",19,0)
MSG4 W !!,"When you reach the MPI QUERY RESULTS screen, the software has"
"RTN","MPIFQ3",20,0)
 W !,"queried the Master Patient Index, for possible matches to the patient"
"RTN","MPIFQ3",21,0)
 W !,"you are adding, or have selected (pre-existing record).",!!,"The MPI has returned a list of possible matches for that patient."
"RTN","MPIFQ3",22,0)
 W !,"An '*' indicates the Integration Control Number of a patient",!,"on the list already matches one in your PATIENT (#2) file."
"RTN","MPIFQ3",23,0)
 W !,"To select a patient from the list, choose SE."
"RTN","MPIFQ3",24,0)
 I '$D(MPIFDUP) W !,"If the patients listed as potential matches are not the same patient",!,"select NEW to create a new entry on the MPI for this patient."
"RTN","MPIFQ3",25,0)
 W !,"To view all data for a patient in the list of possible matches",!,"from the MPI, select MPI."
"RTN","MPIFQ3",26,0)
 W !,"To view additional data for a patient in the list of possible",!,"matches from the CMOR site, select CMR."
"RTN","MPIFQ3",27,0)
 I $D(MPIFDUP) D
"RTN","MPIFQ3",28,0)
 .W !,"If the patients listed as potential matches are not the same as"
"RTN","MPIFQ3",29,0)
 .W !,"your patient, there is nothing for you to do.  Therefore, you may",!,"wish to mark the exception as processed."
"RTN","MPIFQ3",30,0)
 Q
"RTN","MPIFQ3",31,0)
PROMPT ;
"RTN","MPIFQ3",32,0)
 W !!
"RTN","MPIFQ3",33,0)
 S DIR("A")="Hit the Enter key, to Continue ",DIR(0)="EA"
"RTN","MPIFQ3",34,0)
 D ^DIR K DIR(0),DIR("A")
"RTN","MPIFQ3",35,0)
 Q
"RTN","MPIFQ3",36,0)
PROMPT1() ;
"RTN","MPIFQ3",37,0)
 N DIR,X,Y
"RTN","MPIFQ3",38,0)
 W !
"RTN","MPIFQ3",39,0)
 S DIR("A")="Are you sure this is the correct patient? Enter YES or NO ",DIR(0)="YA"
"RTN","MPIFQ3",40,0)
 D ^DIR K DIR(0),DIR("A")
"RTN","MPIFQ3",41,0)
 Q Y
"RTN","MPIFQ3",42,0)
HERESSN(SSN) ;
"RTN","MPIFQ3",43,0)
 N DFN
"RTN","MPIFQ3",44,0)
 I $G(SSN)="" Q 0
"RTN","MPIFQ3",45,0)
 S DFN=$O(^DPT("SSN",SSN,0))
"RTN","MPIFQ3",46,0)
 Q:$G(DFN)']"" 0
"RTN","MPIFQ3",47,0)
 Q DFN
"RTN","MPIFQ3",48,0)
CHECK(DFN) ;
"RTN","MPIFQ3",49,0)
 N CHECK
"RTN","MPIFQ3",50,0)
 D GETDATA^MPIFQ0("^DPT(",DFN,"CHECK",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ3",51,0)
 I $G(CHECK(2,DFN,.01))']"" Q 0
"RTN","MPIFQ3",52,0)
 I $G(CHECK(2,DFN,.02))']"" Q 0
"RTN","MPIFQ3",53,0)
 I $G(CHECK(2,DFN,.03))']"" Q 0
"RTN","MPIFQ3",54,0)
 I $G(CHECK(2,DFN,.09))']"" Q 0
"RTN","MPIFQ3",55,0)
 I $G(CHECK(2,DFN,.301))']"" Q 0
"RTN","MPIFQ3",56,0)
 I $G(CHECK(2,DFN,391))']"" Q 0
"RTN","MPIFQ3",57,0)
 I $G(CHECK(2,DFN,1901))']"" Q 0
"RTN","MPIFQ3",58,0)
 Q 1
"RTN","MPIFQ3",59,0)
TF(DFN,ARR) ;Add you to TF list and trigger TF and Sub msgs
"RTN","MPIFQ3",60,0)
 I $$PATCH^XPDUTL("DG*5.3*261") D FILE^VAFCTFU(DFN,+$$SITE^VASITE,1)
"RTN","MPIFQ3",61,0)
 N RESLT
"RTN","MPIFQ3",62,0)
 S RESLT=$$A24^MPIFA24B(DFN)
"RTN","MPIFQ3",63,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_DFN,DFN)
"RTN","MPIFQ3",64,0)
 Q
"RTN","MPIFQ3",65,0)
 ;
"RTN","MPIFQ3",66,0)
A28(DFN) ;
"RTN","MPIFQ3",67,0)
 S ICN=$$A28^MPIFA28(DFN)
"RTN","MPIFQ3",68,0)
 I +ICN>0 I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Message sent to MPI requesting Patient to be added."
"RTN","MPIFQ3",69,0)
 Q
"RTN","MPIFQ3",70,0)
LOCAL(DFN) ;
"RTN","MPIFQ3",71,0)
 Q:+$$GETICN^MPIF001(DFN)>0
"RTN","MPIFQ3",72,0)
 N ICN S ICN=$$ICNLC^MPIF001(DFN) ;don't assign local if exists
"RTN","MPIFQ3",73,0)
 Q
"RTN","MPIFQ3",74,0)
HEREICN(ICN) ;
"RTN","MPIFQ3",75,0)
 Q:$G(ICN)="" 0
"RTN","MPIFQ3",76,0)
 N DFN S DFN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ3",77,0)
 Q:$G(DFN)'>0 0
"RTN","MPIFQ3",78,0)
 Q DFN
"RTN","MPIFQ3",79,0)
LOC2(DFN) ;
"RTN","MPIFQ3",80,0)
 W:'$D(MPIFRPC) !!,"Potential Match Found Assigning Local ICN"
"RTN","MPIFQ3",81,0)
 D START^RGHLLOG(),EXC^RGHLLOG(218,"For Patient DFN="_DFN_" Use Single Patient Initialization to MPI option to manually process",DFN),STOP^RGHLLOG()
"RTN","MPIFQ3",82,0)
 D LOCAL(DFN)
"RTN","MPIFQ3",83,0)
 Q
"RTN","MPIFQ3",84,0)
 D LOCAL(DFN)
"RTN","MPIFQ3",85,0)
 Q
"RTN","MPIFRES")
0^5^B21931451
"RTN","MPIFRES",1,0)
MPIFRES ;SF/CMC-LOCAL AND MISSING ICN RESOLUTION ;JUL 13, 1998
"RTN","MPIFRES",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,7,10,15,17,21,26,28,33,35,43**;30 Apr 99
"RTN","MPIFRES",3,0)
 ;
"RTN","MPIFRES",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFRES",5,0)
 ;  EXC, START and STOP^RGHLLOG - #2796
"RTN","MPIFRES",6,0)
 ;  ^DPT("AICNL", ^DPT("AMPIMIS" - #2070
"RTN","MPIFRES",7,0)
 ;  ^RGHL7(991.1 - #3259
"RTN","MPIFRES",8,0)
 ;  ^RGSITE - #2746
"RTN","MPIFRES",9,0)
 ;
"RTN","MPIFRES",10,0)
BKG ;
"RTN","MPIFRES",11,0)
 I $D(ZTQUEUED) D GO Q
"RTN","MPIFRES",12,0)
 S ZTRTN="GO^MPIFRES",ZTDESC="USE HL7 MSGS AND MAIL TO BUILD ICN"
"RTN","MPIFRES",13,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFRES",14,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFRES",15,0)
 D ^%ZTLOAD
"RTN","MPIFRES",16,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFRES",17,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,%
"RTN","MPIFRES",18,0)
 Q
"RTN","MPIFRES",19,0)
 ;
"RTN","MPIFRES",20,0)
GO ;ENTRY POINT
"RTN","MPIFRES",21,0)
 N MPIMORE,MPITOT
"RTN","MPIFRES",22,0)
 L +^XTMP("MPIF RESOLUTION"):3 E  Q
"RTN","MPIFRES",23,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFRES",24,0)
 ;
"RTN","MPIFRES",25,0)
 K ^TMP("HLS",$J),STOP
"RTN","MPIFRES",26,0)
 D START^RGHLLOG()
"RTN","MPIFRES",27,0)
 D HLRDF
"RTN","MPIFRES",28,0)
 I $D(STOP) K STOP Q  ;patch 7 added to quit if init returned an error
"RTN","MPIFRES",29,0)
 D LOOP
"RTN","MPIFRES",30,0)
 I $D(^TMP("HLS",$J)) D SEND
"RTN","MPIFRES",31,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFRES",32,0)
 K MPIIT,MPITOT,HLDT,HLDT1,MPICNT,MPIDNUM,MPIEROR,MPIMIDT,MPIMSH
"RTN","MPIFRES",33,0)
 K MPIOUT,MPIQRYNM,MPISEQ,QCNT,MPIMCNT,MPIMTX,ENDT,MPIFRES
"RTN","MPIFRES",34,0)
 L -^XTMP("MPIF RESOLUTION")
"RTN","MPIFRES",35,0)
 ; mark job completion date/time
"RTN","MPIFRES",36,0)
 S $P(^RGSITE(991.8,1,0),"^",4)=$$NOW^XLFDT
"RTN","MPIFRES",37,0)
 Q
"RTN","MPIFRES",38,0)
 ;
"RTN","MPIFRES",39,0)
HLRDF ;
"RTN","MPIFRES",40,0)
 S (MPIOUT,MPIMCNT)=""
"RTN","MPIFRES",41,0)
 S HL("ECH")="^~\&"
"RTN","MPIFRES",42,0)
 S HL("FS")="|"
"RTN","MPIFRES",43,0)
 D INIT^HLFNC2("MPIF ICN-Q02 SERVER",.HL)
"RTN","MPIFRES",44,0)
 I $O(HL("")) D EXC^RGHLLOG(220,"INIT^HLFNC2 call error returned") S STOP="" Q
"RTN","MPIFRES",45,0)
 D CREATE^HLTF(.MPIMCNT,.MPIMTX,.HLDT,.HLDT1)
"RTN","MPIFRES",46,0)
 Q
"RTN","MPIFRES",47,0)
LOOP ;
"RTN","MPIFRES",48,0)
 S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",49,0)
 D MAKE
"RTN","MPIFRES",50,0)
 Q
"RTN","MPIFRES",51,0)
SEND ;ready to send
"RTN","MPIFRES",52,0)
 D GENERATE^HLMA("MPIF ICN-Q02 SERVER","GB",1,.MPIMTX,.MPIEROR,.MPIMORE)
"RTN","MPIFRES",53,0)
 I +MPIEROR=0 D EXC^RGHLLOG(220,"GENERATE^HLMA call returned error") Q
"RTN","MPIFRES",54,0)
 K %,MPIMTX,MPIEROR,MPIMORE
"RTN","MPIFRES",55,0)
 K ^TMP("HLS",$J)
"RTN","MPIFRES",56,0)
 Q
"RTN","MPIFRES",57,0)
MAKE ;
"RTN","MPIFRES",58,0)
 N LOCAL,MPIIT,TICN,STOP,X,Y,%,%H,%I,TODAY,SITE,XX
"RTN","MPIFRES",59,0)
 S LOCAL="",MPIIT=0,MPIFRES="",SITE=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFRES",60,0)
 D NOW^%DTC S TODAY=X
"RTN","MPIFRES",61,0)
 ;local ICNs
"RTN","MPIFRES",62,0)
 F  S MPIIT=$O(^DPT("AICNL",1,MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",63,0)
 .; LINE BELOW ADDED FOR PATCH 26 TO CLEANUP AICNL X-REF WHEN LEFT AROUND
"RTN","MPIFRES",64,0)
 .I $E($$GETICN^MPIF001(MPIIT),1,3)'=SITE S XX=$$SETLOC^MPIF001(MPIIT,0) K ^DPT("AICNL",1,MPIIT) Q
"RTN","MPIFRES",65,0)
 .Q:+$G(^DPT("AICNL",1,MPIIT))=1
"RTN","MPIFRES",66,0)
 .; ^ only send patient to MPI for Local ICN resolution 1 time
"RTN","MPIFRES",67,0)
 .Q:+$G(^DPT("AICNL",1,MPIIT))=2&($P($G(^DPT("AICNL",1,MPIIT)),"^",2)=TODAY)
"RTN","MPIFRES",68,0)
 .; ^ check if A28 failed to get ICN back and should now be sent up
"RTN","MPIFRES",69,0)
 .; DON'T send if is the 2^today **35
"RTN","MPIFRES",70,0)
 .;I $D(^RGHL7(991.1,"ADFN",218,MPIIT)) S ^DPT("AICNL",1,MPIIT)="1^"_TODAY Q
"RTN","MPIFRES",71,0)
 .; ^ checking if potential match exception **43 REMOVE CHECK ON POTENTIAL MATCH EXCEPTIONS
"RTN","MPIFRES",72,0)
 .D MAKE3
"RTN","MPIFRES",73,0)
 ;missing ICNs
"RTN","MPIFRES",74,0)
 S MPIIT=0
"RTN","MPIFRES",75,0)
 F  S MPIIT=$O(^DPT("AMPIMIS",MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",76,0)
 .K STOP
"RTN","MPIFRES",77,0)
 .I $D(^DPT(MPIIT,-9)) K ^DPT("AMPIMIS",MPIIT) Q  ;**43 CHECK IF MERGED PATIENT AND CLEANUP CROSS REFERENCE
"RTN","MPIFRES",78,0)
 .S TICN=+$$GETICN^MPIF001(MPIIT)
"RTN","MPIFRES",79,0)
 .I TICN<0 L +^DPT(MPIIT):5 I '$T Q  ;**35
"RTN","MPIFRES",80,0)
 .L -^DPT(MPIIT,0) ;**35
"RTN","MPIFRES",81,0)
 .;**35 If don't have ICN yet, try to lock if can't get lock skip record - still creating patient.
"RTN","MPIFRES",82,0)
 .I TICN<0,'$D(STOP) D MAKE3
"RTN","MPIFRES",83,0)
 .I TICN>0 K ^DPT("AMPIMIS",MPIIT)
"RTN","MPIFRES",84,0)
 Q
"RTN","MPIFRES",85,0)
MAKE3 ;
"RTN","MPIFRES",86,0)
 K MPIOUT
"RTN","MPIFRES",87,0)
 S MPIFRES=""
"RTN","MPIFRES",88,0)
 S:$G(MPIQRYNM)="" MPIQRYNM="EXACT_MATCH_QUERY" ;**43 changed MPIQRYNM from VTQ_PID_ICN_LOAD_1 to stop automatic add pts on the MPI
"RTN","MPIFRES",89,0)
 D VTQ1^MPIFVTQ(MPIIT,.MPIOUT,.HL,.MPIQRYNM)
"RTN","MPIFRES",90,0)
 I $P(MPIOUT(0),"^")<0,$P(MPIOUT(0),"^",2)="invalid DFN"!($P(MPIOUT(0),"^",2)="no encoding characters") D EXC^RGHLLOG(206,"DFN = "_MPIIT_"  Problem with building VTQ was "_$P(MPIOUT(0),"^",2),MPIIT) Q
"RTN","MPIFRES",91,0)
 ;I $P(MPIOUT(0),"^")<0,$P(MPIOUT(0),"^",2)="Missing Required Field(s)" Q
"RTN","MPIFRES",92,0)
 ;Q:$P(MPIOUT(0),"^")<0
"RTN","MPIFRES",93,0)
 S ^DPT("AICNL",1,MPIIT)="1^"_TODAY
"RTN","MPIFRES",94,0)
 ; ^ mark Local ICN as having been sent to MPI for resolution
"RTN","MPIFRES",95,0)
 ;call for HL7 header
"RTN","MPIFRES",96,0)
 S MPIMIDT=MPIMCNT_"-"_MPIDNUM
"RTN","MPIFRES",97,0)
 D MSH^HLFNC2(.HL,MPIMIDT,.MPIMSH)
"RTN","MPIFRES",98,0)
 S MPIOUT(1)=MPIMSH
"RTN","MPIFRES",99,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(1)
"RTN","MPIFRES",100,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",101,0)
 ;MESSAGE BUILT
"RTN","MPIFRES",102,0)
 S MPISEQ=0
"RTN","MPIFRES",103,0)
 ;setup VTQ segment in HL array
"RTN","MPIFRES",104,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(2)
"RTN","MPIFRES",105,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",106,0)
 ;setup RDF segment in HL array
"RTN","MPIFRES",107,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(3)
"RTN","MPIFRES",108,0)
 ;loop through and add the additional RDF continuations
"RTN","MPIFRES",109,0)
 N SCNT,Y S Y=3,SCNT=1 F  S Y=$O(MPIOUT(Y)) Q:'Y  D
"RTN","MPIFRES",110,0)
 .S ^TMP("HLS",$J,MPICNT,SCNT)=MPIOUT(Y),SCNT=SCNT+1
"RTN","MPIFRES",111,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",112,0)
 S MPIDNUM=MPIDNUM+1
"RTN","MPIFRES",113,0)
 I MPIDNUM>100 D
"RTN","MPIFRES",114,0)
 .D SEND
"RTN","MPIFRES",115,0)
 .S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",116,0)
 .D HLRDF
"RTN","MPIFRES",117,0)
 Q
"RTN","MPIFRPC2")
0^6^B20174050
"RTN","MPIFRPC2",1,0)
MPIFRPC2 ;SFCIO/CMC-MPIF RPC APIS ;24 OCT 01
"RTN","MPIFRPC2",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**20,24,33,43**;30 Apr 99
"RTN","MPIFRPC2",3,0)
 ;
"RTN","MPIFRPC2",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIFRPC2",5,0)
 ;  ^DPT( - #2070
"RTN","MPIFRPC2",6,0)
 ;  FILE^VAFCTFU - #2988
"RTN","MPIFRPC2",7,0)
 ;  AVAFC^VAFCDD01 - #3493
"RTN","MPIFRPC2",8,0)
 ;  START, STOP, EXC^RGHLLOG - #2070
"RTN","MPIFRPC2",9,0)
 ;
"RTN","MPIFRPC2",10,0)
MULT(DFN,OLDFN) ; API to get "primary" dfn for a merged record
"RTN","MPIFRPC2",11,0)
 ;**43 api created
"RTN","MPIFRPC2",12,0)
 I $D(^DPT(DFN,-9)) S OLDFN=OLDFN_DFN_"^"
"RTN","MPIFRPC2",13,0)
 F  S DFN=$P($G(^DPT(DFN,-9)),"^") Q:'DFN!'$D(^DPT(DFN,-9))  S OLDFN=OLDFN_DFN_"^"
"RTN","MPIFRPC2",14,0)
 Q
"RTN","MPIFRPC2",15,0)
 ;
"RTN","MPIFRPC2",16,0)
SPI(RETURN,SSN,DFN1) ;
"RTN","MPIFRPC2",17,0)
 ;RPC to Single Patient Initialization on patient with SSN
"RTN","MPIFRPC2",18,0)
 ; RETURN - 1 for successful inactivation or -1^error msg
"RTN","MPIFRPC2",19,0)
 ; SSN = is the SSN for the patient that is to be SPI'd
"RTN","MPIFRPC2",20,0)
 ; DFN1 = is the IEN for the patient that is to be SPI'd
"RTN","MPIFRPC2",21,0)
 ;
"RTN","MPIFRPC2",22,0)
 N RES,XX,DFN,ICN,TICN,MPIFA,OLDC,DFNOLD
"RTN","MPIFRPC2",23,0)
 I SSN=""&($G(DFN1)="") S RETURN="-1^No SSN or DFN Passed" Q
"RTN","MPIFRPC2",24,0)
 I SSN'="",SSN'?9N S RETURN="-1^Invalid SSN" Q
"RTN","MPIFRPC2",25,0)
 I SSN'="",'$D(^DPT("SSN",SSN)) S RETURN="-1^No such SSN" Q
"RTN","MPIFRPC2",26,0)
 I SSN'="" D
"RTN","MPIFRPC2",27,0)
 .S RETURN(0)="SSN USED "_SSN
"RTN","MPIFRPC2",28,0)
 .S RES=$$GETDFNS^MPIF002(SSN)
"RTN","MPIFRPC2",29,0)
 I SSN="",DFN1'?1N.N S RETURN="-1^Invalid DFN" Q
"RTN","MPIFRPC2",30,0)
 I SSN="",'$D(^DPT(DFN1)) S RETURN="-1^No such DFN" Q
"RTN","MPIFRPC2",31,0)
 ;^ **43 Check only for DFN1 not DFN1,0 as not all merges have 0 nodes
"RTN","MPIFRPC2",32,0)
 I SSN="" D
"RTN","MPIFRPC2",33,0)
 .S RETURN(0)="DFN USED "_DFN1
"RTN","MPIFRPC2",34,0)
 .S RES=DFN1
"RTN","MPIFRPC2",35,0)
 I +RES=-1 S RETURN=RES Q
"RTN","MPIFRPC2",36,0)
 S DFNOLD=""
"RTN","MPIFRPC2",37,0)
 F XX=1:1 S DFN=$P(RES,"^",XX) Q:DFN=""  D
"RTN","MPIFRPC2",38,0)
 .;**43 check to see if DFN is a FROM record in a duplicate record merge pair
"RTN","MPIFRPC2",39,0)
 .I $D(^DPT(DFN,-9)) S DFNOLD=DFNOLD_DFN_"^" S DFN=$P($G(^DPT(DFN,-9)),"^") D
"RTN","MPIFRPC2",40,0)
 ..I $D(^DPT(DFN,-9)) D MULT(.DFN,.DFNOLD)
"RTN","MPIFRPC2",41,0)
 ..S RETURN(0)="DFN-"_DFN_"-was used to SPI patient because the DFN passed was a merged DFN.  The merged DFN(s) are: "_DFNOLD
"RTN","MPIFRPC2",42,0)
 .; a TO record of a merge can be the from record in another merge, need to find the final primary record
"RTN","MPIFRPC2",43,0)
 .; DFN is now the primary DFN
"RTN","MPIFRPC2",44,0)
 .; can be multiple entries with same SSN
"RTN","MPIFRPC2",45,0)
 .S TICN=$$GETICN^MPIF001(DFN)
"RTN","MPIFRPC2",46,0)
 .I +TICN'=-1&($P($$SITE^VASITE,"^",3)'=$E(TICN,1,3)) S RETURN(XX,0)="The DFN= "_DFN_" already has an ICN, ICN="_TICN Q
"RTN","MPIFRPC2",47,0)
 .S MPIFS=1,HLP("ACKTIME")=300,MPIFRES=1,MPIFRPC=1
"RTN","MPIFRPC2",48,0)
 .I '$D(^DPT(DFN)) S RETURN="-1^No such DFN" Q
"RTN","MPIFRPC2",49,0)
 .D GETS^DIQ(2,DFN_",",".01","IE","MPIFA")
"RTN","MPIFRPC2",50,0)
 .D CIRNEXC^MPIFQ0
"RTN","MPIFRPC2",51,0)
 .;**43 check to see if A28 message was requested to be sent to Add patient to MPI
"RTN","MPIFRPC2",52,0)
 .I MPIFRTN="DID A28" S RETURN(XX,0)="A28 Add Patient message has been triggered" K MPIFRTN,MPIFS,MPIFRES,MPIFRPC Q
"RTN","MPIFRPC2",53,0)
 .K MPIFRTN,MPIFS,MPIFRES,MPIFRPC
"RTN","MPIFRPC2",54,0)
 .S ICN=$$GETICN^MPIF001(DFN)
"RTN","MPIFRPC2",55,0)
 .I +ICN=-1 S RETURN(XX,0)="DFN "_DFN_" problem getting ICN assinged "_$P(ICN,"^",2),RETURN="-1^Unable to get ICN" Q
"RTN","MPIFRPC2",56,0)
 .K RET S RET=""
"RTN","MPIFRPC2",57,0)
 .;commented out in **43 as these exceptions shouldn't be happening any longer AND we want to SPI a local ICN
"RTN","MPIFRPC2",58,0)
 .;I $P($$SITE^VASITE,"^",3)=$E(+ICN,1,3) S RETURN="-1^Local ICN assigned" Q
"RTN","MPIFRPC2",59,0)
 .;D EXC^MPIFRPC(DFN,.RET,XX)
"RTN","MPIFRPC2",60,0)
 .;S RET(XX,"EXCEPTIONS")=$TR($G(RET(XX,"EXCEPTIONS")),"""","")
"RTN","MPIFRPC2",61,0)
 .;S RETURN(XX,0)="DFN "_DFN_" Local ICN assigned "_ICN_" EXCEPTIONS: "_$G(RET(XX,"EXCEPTIONS")),RETURN="-1^Local ICN assigned" Q
"RTN","MPIFRPC2",62,0)
 .S RETURN(XX)=ICN
"RTN","MPIFRPC2",63,0)
 Q
"RTN","MPIFRPC2",64,0)
 ;
"RTN","MPIFRPC2",65,0)
UPDATE(RET,SSN,ICN,CHK,CMOR,A08) ;
"RTN","MPIFRPC2",66,0)
 ; update fields 991.01,991.02 and 991.03 remotely
"RTN","MPIFRPC2",67,0)
 I SSN=""!(ICN="")!(CHK="")!(CMOR="") S RET="-1^Missing required parameter" Q
"RTN","MPIFRPC2",68,0)
 I '$D(^DPT("SSN",SSN)) S RET="-1^No patient has that SSN at this site" Q
"RTN","MPIFRPC2",69,0)
 N DFN,MPIFA,TMP,RESLT
"RTN","MPIFRPC2",70,0)
 S DFN=$O(^DPT("SSN",SSN,""))
"RTN","MPIFRPC2",71,0)
 I $O(^DPT("SSN",SSN,DFN))'="" S RET="-1^More than one patient has that SSN at this site" Q
"RTN","MPIFRPC2",72,0)
 S TMP=$P($$MPINODE^MPIFAPI(DFN),"^")
"RTN","MPIFRPC2",73,0)
 I +TMP'=-1,$E(TMP,1,3)'=$P($$SITE^VASITE(),"^",3) S RET="-1^Patient has a national ICN, ICN="_TMP Q
"RTN","MPIFRPC2",74,0)
 S MPIFA(991.01)=ICN,MPIFA(991.02)=CHK,MPIFA(991.03)=$$LKUP^XUAF4(CMOR)
"RTN","MPIFRPC2",75,0)
 S RET=$$UPDATE^MPIFAPI(DFN,"MPIFA")
"RTN","MPIFRPC2",76,0)
 S RESLT=$$A24^MPIFA24B(DFN)
"RTN","MPIFRPC2",77,0)
 I +RESLT<0 D START^RGHLLOG(),EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_DFN,DFN),STOP^RGHLLOG() S RET="-1^Problem building A24 (ADD TF) for Pt" Q
"RTN","MPIFRPC2",78,0)
 I A08=1 D AVAFC^VAFCDD01(DFN) ; trigger A08 msg
"RTN","MPIFRPC2",79,0)
 I A08=1 S RET=RET_"^and A08 triggered"
"RTN","MPIFRPC2",80,0)
 Q
"RTN","MPIFSA2")
0^7^B53121126
"RTN","MPIFSA2",1,0)
MPIFSA2 ;SF/CMC-STAND ALONE QUERY PART 2 ;APRIL 22, 2003
"RTN","MPIFSA2",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**28,29,35,38,43**;30 Apr 99
"RTN","MPIFSA2",3,0)
 ;
"RTN","MPIFSA2",4,0)
 ;Integration Agreements: $$EN^HLCSAC - #3471
"RTN","MPIFSA2",5,0)
 ;
"RTN","MPIFSA2",6,0)
FIELD ;
"RTN","MPIFSA2",7,0)
 ;;@00108.1;LAST NAME;ST;30
"RTN","MPIFSA2",8,0)
 ;;@00122;SSN;ST;9
"RTN","MPIFSA2",9,0)
 ;;@00110;DOB;TS;8
"RTN","MPIFSA2",10,0)
 ;;@00756;PRIMARY CARE SITE;ST;6
"RTN","MPIFSA2",11,0)
 ;;@00105;ICN;ST;19
"RTN","MPIFSA2",12,0)
 ;;@00108.2;FIRST NAME;ST;30
"RTN","MPIFSA2",13,0)
 ;;@00169;TREATING FACILITY (MULTIPLE--FILE 985.5);ST;999
"RTN","MPIFSA2",14,0)
 ;;@00740;DATE OF DEATH;TS;8
"RTN","MPIFSA2",15,0)
 ;;@00108.3;MIDDLE;ST;16
"RTN","MPIFSA2",16,0)
 ;;@00111;SEX;ST;1
"RTN","MPIFSA2",17,0)
 ;;@00126.1;BIRTH PLACE CITY;ST;30
"RTN","MPIFSA2",18,0)
 ;;@00126.2;BIRTH PLACE STATE;ST;3
"RTN","MPIFSA2",19,0)
 ;;@00108.5;NAME PREFIX;ST;15
"RTN","MPIFSA2",20,0)
 ;;@00108.4;NAME SUFFIX;ST;10
"RTN","MPIFSA2",21,0)
 ;;@00109.1;MOTHER'S MAIDEN NAME;ST;20
"RTN","MPIFSA2",22,0)
 ;;@ZEL6;CLAIM NUMBER;ST;9
"RTN","MPIFSA2",23,0)
 ;;@CASE#;MPI DUP CASE#;ST;69
"RTN","MPIFSA2",24,0)
 ;;@POW;POW STATUS;ST;1
"RTN","MPIFSA2",25,0)
 ;;@00127;MULTIPLE BIRTH INDICATOR;ST;1
"RTN","MPIFSA2",26,0)
 ;;@00112.1;ALIAS LAST NAME;ST;30
"RTN","MPIFSA2",27,0)
 ;;@00112.2;ALIAS FIRST NAME;ST;25
"RTN","MPIFSA2",28,0)
 ;;@00112.3;ALIAS MIDDLE NAME;ST;25
"RTN","MPIFSA2",29,0)
 ;;@00112.5;ALIAS PREFIX;ST;10
"RTN","MPIFSA2",30,0)
 ;;@00112.4;ALIAS SUFFIX;ST;10
"RTN","MPIFSA2",31,0)
 ;;
"RTN","MPIFSA2",32,0)
VTQ(MPIVAR) ;
"RTN","MPIFSA2",33,0)
 N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFSA2",34,0)
 W !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If DOB is inexact or if SSN is not passed or if common name,",!,"this could take some time - please be patient...."
"RTN","MPIFSA2",35,0)
 N HL,MPIQRYNM,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,RDF,QUERY,TEST,SITE,MPIDC,MPINM,MPI1NM,MPI2NM,MPIESC,MPIHDOB,MPIRS,MPISCS,QUEDDOB,MPIFLDV
"RTN","MPIFSA2",36,0)
 S HLP("ACKTIME")=300,HL("ECH")="^~\&",HL("FS")="|",MPIIN="",MPICNT=1,MPICS=$E(HL("ECH"),1)
"RTN","MPIFSA2",37,0)
 ;**43 CHANGING QUERY NAME FROM VTQ_PID_ICN_NO_LOAD TO VTQ_DISPLAY_ONLY_QUERY to enable the returning of potential matches and not just exact matches
"RTN","MPIFSA2",38,0)
 S MPIQRYNM="VTQ_DISPLAY_ONLY_QUERY"
"RTN","MPIFSA2",39,0)
 I '$D(MPIVAR("DFN")) S MPIVAR("DFN")=""
"RTN","MPIFSA2",40,0)
 S MPIMCNT=MPIVAR("DFN")
"RTN","MPIFSA2",41,0)
 ;SETUP VTQ
"RTN","MPIFSA2",42,0)
 S MPICS=$E(HL("ECH"),1),MPIRS=$E(HL("ECH"),2),MPISCS=$E(HL("ECH"),4),MPIESC=$E(HL("ECH"),3)
"RTN","MPIFSA2",43,0)
 D BLDRDF(.MPIOUT,3,MPIRS,MPICS)
"RTN","MPIFSA2",44,0)
 ; ^ fields to be returned in query response
"RTN","MPIFSA2",45,0)
 S QUERY="VTQ"_HL("FS")_$G(MPIVAR("DFN"))_HL("FS")_"T"_HL("FS")_MPIQRYNM_HL("FS")_"ICN"_HL("FS")
"RTN","MPIFSA2",46,0)
 S MPI2NM=$P($G(MPIVAR("NM")),",",1),QUERY=QUERY_"@00108.1"_MPICS_"EQ"_MPICS_MPI2NM ; ^ sending last name
"RTN","MPIFSA2",47,0)
 I MPIVAR("SSN")'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00122"_MPICS_"EQ"_MPICS_$G(MPIVAR("SSN")) ; ^ sending SSN
"RTN","MPIFSA2",48,0)
 S MPI1NM=$P($G(MPIVAR("NM")),",",2),MPI1NM=$P(MPI1NM," ",1) I MPI1NM'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.2"_MPICS_"EQ"_MPICS_MPI1NM ; ^ sending first name
"RTN","MPIFSA2",49,0)
 I $G(MPIVAR("DOB"))>0 D
"RTN","MPIFSA2",50,0)
 .S MPIHDOB=$$HLDATE^HLFNC(MPIVAR("DOB")) ; send date of birth (convert to hl7 date format)
"RTN","MPIFSA2",51,0)
 .S QUEDDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB,QUERY=QUERY_QUEDDOB ; ^ sending date of birth
"RTN","MPIFSA2",52,0)
 S MPI1NM=$P($G(MPIVAR("NM")),",",2),MPIMID=$P(MPI1NM," ",2) I MPIMID'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.3"_MPICS_"EQ"_MPICS_MPIMID ; sending middle name
"RTN","MPIFSA2",53,0)
 S MPISUF=$P(MPI1NM," ",3) I MPISUF'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.4"_MPICS_"EQ"_MPICS_MPISUF ; sending suffix
"RTN","MPIFSA2",54,0)
 S MPIPRE=$P(MPI1NM," ",4) I MPIPRE'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.5"_MPICS_"EQ"_MPICS_MPIPRE ; sending prefix
"RTN","MPIFSA2",55,0)
 I $G(MPIVAR("SEX"))'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00111"_MPICS_"EQ"_MPICS_$G(MPIVAR("SEX")) ;sending sex
"RTN","MPIFSA2",56,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3) ;**29
"RTN","MPIFSA2",57,0)
 S HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VQQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;create msh **38 changed VTQ to VQQ
"RTN","MPIFSA2",58,0)
 S MPIOUT(1)=HEADER K MPIOUT(0) S MPIOUT(2)=QUERY
"RTN","MPIFSA2",59,0)
 ;Attempt to connect to MPI and send message,receive message. Message is returned in MPIDC array
"RTN","MPIFSA2",60,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFSA2",61,0)
 K HLP("ACKTIME") ;Clean up the ack timeout HLP array variable
"RTN","MPIFSA2",62,0)
 I +TEST<0 W !!,"Could not connect to MPI or Time-out occured, try again later." G EXIT
"RTN","MPIFSA2",63,0)
 K ^TMP("MPIFVQQ",$J)
"RTN","MPIFSA2",64,0)
INIPARS ;
"RTN","MPIFSA2",65,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFSA2",66,0)
 S INDEX=0 K CHECK
"RTN","MPIFSA2",67,0)
LOOP1 ;
"RTN","MPIFSA2",68,0)
 ;process in ADT type messages
"RTN","MPIFSA2",69,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFSA2",70,0)
 S MPIQUIT=0
"RTN","MPIFSA2",71,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFSA2",72,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFSA2",73,0)
 ..  S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFSA2",74,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFSA2",75,0)
 I '$D(^TMP("MPIFVQQ",$J)) W !!,"Patient was not found in the MPI." G EXIT
"RTN","MPIFSA2",76,0)
DISPLAY ; display data found
"RTN","MPIFSA2",77,0)
 I INDEX>1 W !!,"Found potential matches"
"RTN","MPIFSA2",78,0)
 I INDEX=1 W !!,"Found One Match"
"RTN","MPIFSA2",79,0)
 N CNT1,CNT2,STOP,CNTR2,TTF,CNT3,DIR,X,Y,DATA,PREFIX,ANAME,APRE,ALN,AFN,NAME,SSN,BIRTHDAY,CMOR,TF,ICN,POBC,POBS,PAST,XXX,AMID,ASUF,MNAME,SUFFIX,SEX,IEN,CMOR2,TF2,CLAIM,CASE,NOIS,CUSER,TFN,CMOR3,POW,MBIRTH,TIEN,MIDDLE
"RTN","MPIFSA2",80,0)
 S (CNT1)=0
"RTN","MPIFSA2",81,0)
 F  S CNT1=$O(^TMP("MPIFVQQ",$J,CNT1)) Q:CNT1'>0!($D(STOP))  D
"RTN","MPIFSA2",82,0)
 . S CNTR2=0
"RTN","MPIFSA2",83,0)
 . I CNT1>1 D
"RTN","MPIFSA2",84,0)
 . . K DIR,X,Y S DIR(0)="Y",DIR("B")="YES",DIR("A")="Continue to next Patient? " D ^DIR
"RTN","MPIFSA2",85,0)
 . . I Y'=1 S STOP=""
"RTN","MPIFSA2",86,0)
 . Q:$D(STOP)
"RTN","MPIFSA2",87,0)
 . S CNTR2=CNTR2+1,DATA=$G(^TMP("MPIFVQQ",$J,CNT1,"DATA"))
"RTN","MPIFSA2",88,0)
 . Q:DATA=""
"RTN","MPIFSA2",89,0)
 . K CHECK S NAME=$P(DATA,"^"),SSN=$P(DATA,"^",3),BIRTHDAY=$P(DATA,"^",4),ICN=$P(DATA,"^",6),CMOR=$P(DATA,"^",5)
"RTN","MPIFSA2",90,0)
 . I $G(CMOR)'="" S TIEN=$$LKUP^XUAF4(CMOR) I TIEN'="" S CMOR2=$P($$NS^XUAF4(+TIEN),"^")
"RTN","MPIFSA2",91,0)
 . S SEX=$P(DATA,"^",11),SUFFIX=$P(DATA,"^",15),PREFIX=$P(DATA,"^",14),MIDDLE=$P(DATA,"^",10),POBC=$P(DATA,"^",12),POBS=$P(DATA,"^",13),MNAME=$P(DATA,"^",16)
"RTN","MPIFSA2",92,0)
 . S PAST=$P(DATA,"^",9),CLAIM=$P(DATA,"^",17),CASE=$P(DATA,"^",18),NOIS=$P(CASE,"/",2),CUSER=$P(CASE,"/",3),CASE=$P(CASE,"/")
"RTN","MPIFSA2",93,0)
 . S CMOR3=$P($$NS^XUAF4(CMOR),"^"),MBIRTH=$P(DATA,"^",20),POW=$P(DATA,"^",19)
"RTN","MPIFSA2",94,0)
 . W:$G(CASE)'="" !,"<<THIS ICN IS ACTIVELY BEING WORKED ON - CASE #",CASE
"RTN","MPIFSA2",95,0)
 . W:$G(NOIS)'="" " NOIS/REMEDY TICKET: ",NOIS ;**43 CHANGED DISPLAY TO BE NOIS/REMEDY TICKET
"RTN","MPIFSA2",96,0)
 . W:$G(CASE)'="" ">>"
"RTN","MPIFSA2",97,0)
 . W:$G(CUSER)'="" !,?3,"Case Worker: ",CUSER
"RTN","MPIFSA2",98,0)
 . W !!,"ICN      : ",$P(ICN,"V"),?30,"CMOR: ",CMOR2," (",CMOR,")"
"RTN","MPIFSA2",99,0)
 . W !,"Name     : ",NAME,!,"SSN      : ",SSN
"RTN","MPIFSA2",100,0)
 . W !,"DOB      : ",BIRTHDAY
"RTN","MPIFSA2",101,0)
 . W:$G(PAST)'="" ?30,"Date of Death: ",PAST
"RTN","MPIFSA2",102,0)
 . W:$G(MBIRTH)'=""&(MBIRTH'="N") !,"Multiple Birth Indicator: Yes"
"RTN","MPIFSA2",103,0)
 . W !,"Sex      : ",SEX
"RTN","MPIFSA2",104,0)
 . W:$G(CLAIM)'="" !,"Claim #  : ",CLAIM
"RTN","MPIFSA2",105,0)
 . W:$G(POBC)'="" !,"Place of Birth: ",POBC W:$G(POBS)'="" ", ",POBS
"RTN","MPIFSA2",106,0)
 . W:$G(MNAME)'="" !,"Mother's Maiden Name: ",MNAME
"RTN","MPIFSA2",107,0)
 . W:$G(POW)'="" !,"POW Status: ",POW
"RTN","MPIFSA2",108,0)
 . I $D(^TMP("MPIFVQQ",$J,CNT1,"ALIAS")) D
"RTN","MPIFSA2",109,0)
 . . W !!,"Alias(es): "
"RTN","MPIFSA2",110,0)
 . . S XXX=0 F  S XXX=$O(^TMP("MPIFVQQ",$J,CNT1,"ALIAS",XXX)) Q:XXX=""  D
"RTN","MPIFSA2",111,0)
 . . . W !?5,^TMP("MPIFVQQ",$J,CNT1,"ALIAS",XXX)
"RTN","MPIFSA2",112,0)
 . S CNT2=""
"RTN","MPIFSA2",113,0)
 . W ! N TMP S XXX=0 F  S XXX=$O(^TMP("MPIFVQQ",$J,CNT1,"TF",XXX)) Q:XXX=""  S TMP=$G(^TMP("MPIFVQQ",$J,CNT1,"TF",XXX)) Q:TMP=""  D
"RTN","MPIFSA2",114,0)
 .. S TMP=$P(TMP,MPICOMP,1) I TMP'=CMOR3 W !?10,"Treating Facility: ",$P($$NS^XUAF4($$LKUP^XUAF4(TMP)),"^")," (",TMP,")"
"RTN","MPIFSA2",115,0)
 .W !!
"RTN","MPIFSA2",116,0)
EXIT K DA,X,Y W !! Q
"RTN","MPIFSA2",117,0)
LOOP2 ;
"RTN","MPIFSA2",118,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFSA2",119,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFSA2",120,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFSA2",121,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFSA2",122,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFSA2",123,0)
 Q
"RTN","MPIFSA2",124,0)
MSH ;
"RTN","MPIFSA2",125,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFSA2",126,0)
 Q
"RTN","MPIFSA2",127,0)
MSA ;
"RTN","MPIFSA2",128,0)
 Q
"RTN","MPIFSA2",129,0)
RDF ;
"RTN","MPIFSA2",130,0)
 Q
"RTN","MPIFSA2",131,0)
QAK ;
"RTN","MPIFSA2",132,0)
 Q
"RTN","MPIFSA2",133,0)
RDT ;
"RTN","MPIFSA2",134,0)
 S INDEX=$G(INDEX)+1
"RTN","MPIFSA2",135,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFSA2",136,0)
 Q
"RTN","MPIFSA2",137,0)
BLDRDF(MPIOUT,MPICNT,MPIRS,MPICS) ;
"RTN","MPIFSA2",138,0)
 S MPIOUT(MPICNT)="RDF"_HL("FS")_24_HL("FS") N T,I F I=1:1 S T=$T(FIELD+I) Q:$P(T,";",3)=""  D
"RTN","MPIFSA2",139,0)
 . I I=1 S MPIFLDV=$P(T,";",3)_MPICS_$P(T,";",5)_MPICS_$P(T,";",6)
"RTN","MPIFSA2",140,0)
 . I I'=1 S MPIFLDV=MPIRS_$P(T,";",3)_MPICS_$P(T,";",5)_MPICS_$P(T,";",6)
"RTN","MPIFSA2",141,0)
  .N XLEN,TOTLEN
"RTN","MPIFSA2",142,0)
 . S TOTLEN=$L($G(MPIOUT(MPICNT)))+$L(MPIFLDV)
"RTN","MPIFSA2",143,0)
 . I TOTLEN'>245 S MPIOUT(MPICNT)=$G(MPIOUT(MPICNT))_MPIFLDV Q
"RTN","MPIFSA2",144,0)
 . I TOTLEN>245 D
"RTN","MPIFSA2",145,0)
 .. S XLEN=245-$L($G(MPIOUT(MPICNT)))
"RTN","MPIFSA2",146,0)
 .. S MPIOUT(MPICNT)=$G(MPIOUT(MPICNT))_$E(MPIFLDV,1,XLEN),MPICNT=MPICNT+1
"RTN","MPIFSA2",147,0)
 .. S MPIOUT(MPICNT)=$E(MPIFLDV,XLEN+1,245)
"RTN","MPIFSA2",148,0)
 Q
"RTN","MPIFSA3")
0^14^B25833370
"RTN","MPIFSA3",1,0)
MPIFSA3 ;SF/CMC,DLR-STAND ALONE QUERY PART 2 ;MAY 13, 2003
"RTN","MPIFSA3",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**28,31,35,43**;30 Apr 99
"RTN","MPIFSA3",3,0)
 ;
"RTN","MPIFSA3",4,0)
RDT(INDEX,HL,MSG) ;
"RTN","MPIFSA3",5,0)
 N LASTNAME,FRSTNAME,SSN,BIRTHDAY,CMOR,NAME,ICN,POBC,POBS,PAST,HEREICN,HERESSN,MIDDLE,MNAME,SUFFIX,PREFIX,SEX,IEN,CMOR2,CLAIM,CASE,NOIS,CUSER,TFN,CMOR3,XXX,POW,MBIRTH,Y,LNGTH,SEQ1,SEQ,RDT,NXT,LNGTH2,LNGTH1,MPIREP,MPICOMP,TCASE
"RTN","MPIFSA3",6,0)
 S MPICOMP=$E(HL("ECH"),1),MPIREP=$E(HL("ECH"),2)
"RTN","MPIFSA3",7,0)
 S SEQ1=1,SEQ=0,X=0 F  S X=$O(MSG(X)) Q:'X  S LNGTH=$L(MSG(X),HL("FS")) D
"RTN","MPIFSA3",8,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1 D
"RTN","MPIFSA3",9,0)
 .. S NXT=$P(MSG(X),HL("FS"),Y) D
"RTN","MPIFSA3",10,0)
 ... I $L($G(RDT(SEQ)))=245 D  Q
"RTN","MPIFSA3",11,0)
 .... I $L(NXT_$G(RDT(SEQ,SEQ1)))>245 S LNGTH1=$L(RDT(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,RDT(SEQ,SEQ1)=$G(RDT(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","MPIFSA3",12,0)
 .... I $L(NXT_$G(RDT(SEQ,SEQ1)))'>245 S RDT(SEQ,SEQ1)=$G(RDT(SEQ,SEQ1))_NXT
"RTN","MPIFSA3",13,0)
 ... I $L(NXT_$G(RDT(SEQ)))>245 S LNGTH1=$L($G(RDT(SEQ))) S LNGTH2=245-LNGTH1,RDT(SEQ)=$G(RDT(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S RDT(SEQ,SEQ1)=NXT
"RTN","MPIFSA3",14,0)
 ... I $L(NXT_$G(RDT(SEQ)))'>245 S RDT(SEQ)=$G(RDT(SEQ))_NXT Q
"RTN","MPIFSA3",15,0)
RDTAL ;
"RTN","MPIFSA3",16,0)
 S FRSTNAME=RDT(6),LASTNAME=RDT(1),MIDDLE=RDT(9),SSN=RDT(2)
"RTN","MPIFSA3",17,0)
 S SUFFIX=RDT(14),PREFIX=RDT(13)
"RTN","MPIFSA3",18,0)
 S NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFSA3",19,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFSA3",20,0)
 I SUFFIX'="" S NAME=NAME_" "_SUFFIX
"RTN","MPIFSA3",21,0)
 I PREFIX'="" S NAME=NAME_" "_PREFIX
"RTN","MPIFSA3",22,0)
 S ICN=RDT(5),CMOR=RDT(4),CMOR2=CMOR,CMOR3=CMOR
"RTN","MPIFSA3",23,0)
 I $G(CMOR)'="" S IEN=$$LKUP^XUAF4(CMOR) I IEN'="" S CMOR2=$P($$NS^XUAF4(+IEN),"^")
"RTN","MPIFSA3",24,0)
 I $G(SKIP)="Y" K SKIP Q
"RTN","MPIFSA3",25,0)
 S BIRTHDAY=RDT(3)
"RTN","MPIFSA3",26,0)
 I $G(LASTNAME)="" Q
"RTN","MPIFSA3",27,0)
 I $G(BIRTHDAY)]"" S BIRTHDAY=$$FMDATE^HLFNC(BIRTHDAY),BIRTHDAY=$TR($$FMTE^XLFDT(BIRTHDAY,"5D"),"/","-")
"RTN","MPIFSA3",28,0)
 S SEX=RDT(10),CLAIM=RDT(16),MNAME=RDT(15),POBC=RDT(11),POBS=RDT(12)
"RTN","MPIFSA3",29,0)
 S PAST=RDT(8) I $G(PAST)]"" S PAST=$$FMDATE^HLFNC(PAST),PAST=$TR($$FMTE^XLFDT(PAST,"5D"),"/","-")
"RTN","MPIFSA3",30,0)
 S CASE=RDT(17),NOIS=$P(CASE,"/",2),CUSER=$P(CASE,"/",3),TCASE=CASE,CASE=$P(CASE,"/")
"RTN","MPIFSA3",31,0)
 S MBIRTH=RDT(19),POW=RDT(18)
"RTN","MPIFSA3",32,0)
 I POW="N" S POW="No"
"RTN","MPIFSA3",33,0)
 I POW="Y" S POW="Yes"
"RTN","MPIFSA3",34,0)
TMP ;New pt. so incrementing index and resetting counter
"RTN","MPIFSA3",35,0)
 K ^TMP("MPIFVQQ",$J,INDEX)
"RTN","MPIFSA3",36,0)
 S ^TMP("MPIFVQQ",$J,INDEX,"DATA")=NAME_"^"_LASTNAME_"^"_SSN_"^"_BIRTHDAY_"^"_CMOR_"^"_ICN_"^"_FRSTNAME_"^^"_PAST_"^"_MIDDLE_"^"_SEX_"^"_POBC_"^"_POBS_"^"_PREFIX_"^"_SUFFIX_"^"_MNAME_"^"_CLAIM_"^"_TCASE_"^"_POW_"^"_MBIRTH
"RTN","MPIFSA3",37,0)
 ;loop on TF's
"RTN","MPIFSA3",38,0)
 ;I TF2'="" F XXX=1:1 S TTF2=$P(TF2,MPIREP,XXX) Q:TTF2=""  S TFLL(INDEX,XXX)=TTF2
"RTN","MPIFSA3",39,0)
 N LAST,SEQ,ORGLST,TFLL
"RTN","MPIFSA3",40,0)
 I $D(RDT(7)),(RDT(7)'="^^~") N LAST,LASTN S SEQ=1 S LAST=$L(RDT(7),MPIREP) S LASTN=LAST-1 D
"RTN","MPIFSA3",41,0)
 .N X F X=1:1:LAST-1 S TFLL(INDEX,X)=$P(RDT(7),MPIREP,X)
"RTN","MPIFSA3",42,0)
 .I '$D(RDT(7,SEQ)) I $P(RDT(7),MPIREP,LAST)'="" S TFLL(INDEX,LAST)=$P($P(RDT(7),MPIREP,LAST),MPICOMP)
"RTN","MPIFSA3",43,0)
 . N LOOP I $D(RDT(7,SEQ)) S LASTVAL=$P(RDT(7),MPIREP,LAST) S LOOP=LASTN+1 F  Q:'$D(RDT(7,SEQ))  N LAST S LAST=$L(RDT(7,SEQ),MPIREP) D
"RTN","MPIFSA3",44,0)
 ..N X F X=1:1:LAST-1 S TFLL(INDEX,(LOOP))=$S($D(LASTVAL):LASTVAL,1:"")_$P(RDT(7,SEQ),MPIREP,X) K LASTVAL S LOOP=LOOP+1
"RTN","MPIFSA3",45,0)
 ..I '$D(RDT(7,SEQ)) I $P(RDT(7),MPIREP,LAST)'="" S TFLL(INDEX,(LASTN+LAST))=$P($P(RDT(7),MPIREP,LAST),MPICOMP) S LOOP=LOOP+1
"RTN","MPIFSA3",46,0)
 ..I $D(RDT(7,SEQ)) S LASTVAL=$P(RDT(7,SEQ),MPIREP,LAST)
"RTN","MPIFSA3",47,0)
 ..S SEQ=SEQ+1
"RTN","MPIFSA3",48,0)
 ;loop on TFLL to build TF LIST nodes
"RTN","MPIFSA3",49,0)
 S X=0 F  S X=$O(TFLL(INDEX,X)) Q:'X  S ^TMP("MPIFVQQ",$J,INDEX,"TF",X)=TFLL(INDEX,X)
"RTN","MPIFSA3",50,0)
ALIAS ;loop on alias last name
"RTN","MPIFSA3",51,0)
 N LAST,SEQ,ORGLST,AL
"RTN","MPIFSA3",52,0)
 I $D(RDT(20)) N LAST S SEQ=1 S LAST=$L(RDT(20),MPIREP) D
"RTN","MPIFSA3",53,0)
 .N X F X=1:1:LAST-1 S AL(INDEX,X)=$P(RDT(20),MPIREP,X)_","_$P($G(RDT(21)),MPIREP,X)_" "_$P($G(RDT(22)),MPIREP,X)_" "_$P($G(RDT(23)),MPIREP,X)_" "_$P($G(RDT(24)),MPIREP,X)
"RTN","MPIFSA3",54,0)
 .I '$D(RDT(20,SEQ)) I $P(RDT(20),MPIREP,LAST)'="" S AL(INDEX,LAST)=$P(RDT(20),MPIREP,LAST)_","_$P($G(RDT(21)),MPIREP,LAST)_" "_$P($G(RDT(22)),MPIREP,LAST)_" "_$P($G(RDT(23)),MPIREP,LAST)_" "_$P($G(RDT(24)),MPIREP,LAST)
"RTN","MPIFSA3",55,0)
 . I $D(RDT(20,SEQ)) S LASTVAL=$P(RDT(20),MPIREP,LAST) F  Q:'$D(RDT(20,SEQ))  N LAST S LAST=$L(RDT(20,SEQ),MPIREP) D
"RTN","MPIFSA3",56,0)
 ..N X F X=1:1:LAST-1 S AL(INDEX,X)=$S($D(LASTVAL):LASTVAL,1:"")_$P(RDT(20,SEQ),MPIREP,X)_","_$P($G(RDT(21)),MPIREP,X)_" "_$P($G(RDT(22)),MPIREP,X)_" "_$P($G(RDT(23)),MPIREP,X)_" "_$P($G(RDT(24)),MPIREP,X) K LASTVAL
"RTN","MPIFSA3",57,0)
 ..I '$D(RDT(20,SEQ)) I $P(RDT(20),MPIREP,LAST)'="" S AL(INDEX,LAST)=$P($P(RDT(20),MPIREP,LAST),MPICOMP)_","_$P($G(RDT(21)),MPIREP,LAST)_" "_$P($G(RDT(22)),MPIREP,LAST)_" "_$P($G(RDT(23)),MPIREP,LAST)_" "_$P($G(RDT(24)),MPIREP,LAST)
"RTN","MPIFSA3",58,0)
 ..I $D(RDT(20,SEQ)) S LASTVAL=$P(RDT(20,SEQ),MPIREP,LAST)
"RTN","MPIFSA3",59,0)
 ..S SEQ=SEQ+1
"RTN","MPIFSA3",60,0)
 S X=0 F  S X=$O(AL(INDEX,X)) Q:'X  S ^TMP("MPIFVQQ",$J,INDEX,"ALIAS",X)=AL(INDEX,X)
"RTN","MPIFSA3",61,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
RG*1.0*43
"BLD",2270,0)
RG*1.0*43^CLINICAL INFO RESOURCE NETWORK^0^3060410^y
"BLD",2270,1,0)
^^3^3^3051219^
"BLD",2270,1,1,0)
REMOVE SINGLE PATIENT INITIALIZATION
"BLD",2270,1,2,0)
Refer to patch RG*1*43 in the FORUM Patch Module for a complete
"BLD",2270,1,3,0)
description.
"BLD",2270,4,0)
^9.64PA^^
"BLD",2270,"ABNS",0)
^9.66A^^
"BLD",2270,"ABPKG")
^^
"BLD",2270,"INID")
^y
"BLD",2270,"INIT")
RGP43PST
"BLD",2270,"KRN",0)
^9.67PA^8989.52^19
"BLD",2270,"KRN",.4,0)
.4
"BLD",2270,"KRN",.401,0)
.401
"BLD",2270,"KRN",.402,0)
.402
"BLD",2270,"KRN",.403,0)
.403
"BLD",2270,"KRN",.5,0)
.5
"BLD",2270,"KRN",.84,0)
.84
"BLD",2270,"KRN",3.6,0)
3.6
"BLD",2270,"KRN",3.8,0)
3.8
"BLD",2270,"KRN",9.2,0)
9.2
"BLD",2270,"KRN",9.8,0)
9.8
"BLD",2270,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",2270,"KRN",9.8,"NM",1,0)
RGP43PST^^0^B5800174
"BLD",2270,"KRN",9.8,"NM",2,0)
RGEX01^^0^B29834506
"BLD",2270,"KRN",9.8,"NM",3,0)
RGEVPRG^^0^B41034951
"BLD",2270,"KRN",9.8,"NM",4,0)
RGEXHND1^^0^B33320954
"BLD",2270,"KRN",9.8,"NM",5,0)
RGSYSTAT^^0^B16749126
"BLD",2270,"KRN",9.8,"NM",6,0)
RGEX03^^0^B68295667
"BLD",2270,"KRN",9.8,"NM",7,0)
RGMTETOT^^0^B39858170
"BLD",2270,"KRN",9.8,"NM","B","RGEVPRG",3)

"BLD",2270,"KRN",9.8,"NM","B","RGEX01",2)

"BLD",2270,"KRN",9.8,"NM","B","RGEX03",6)

"BLD",2270,"KRN",9.8,"NM","B","RGEXHND1",4)

"BLD",2270,"KRN",9.8,"NM","B","RGMTETOT",7)

"BLD",2270,"KRN",9.8,"NM","B","RGP43PST",1)

"BLD",2270,"KRN",9.8,"NM","B","RGSYSTAT",5)

"BLD",2270,"KRN",19,0)
19
"BLD",2270,"KRN",19,"NM",0)
^9.68A^6^1
"BLD",2270,"KRN",19,"NM",6,0)
RG EXCEPTION POTENTIAL MATCH^^1^
"BLD",2270,"KRN",19,"NM","B","RG EXCEPTION POTENTIAL MATCH",6)

"BLD",2270,"KRN",19.1,0)
19.1
"BLD",2270,"KRN",101,0)
101
"BLD",2270,"KRN",101,"NM",0)
^9.68A^22^21
"BLD",2270,"KRN",101,"NM",1,0)
RG EXCPT SING PATIENT INIT^^1^
"BLD",2270,"KRN",101,"NM",2,0)
RG EXCPT ACTION MENU^^0
"BLD",2270,"KRN",101,"NM",3,0)
RG EXCPT UPDATE STATUS^^0
"BLD",2270,"KRN",101,"NM",4,0)
RG EXCPT DISPLAY ONLY QUERY^^0
"BLD",2270,"KRN",101,"NM",5,0)
RG EXCPT EDIT PATIENT DATA^^0
"BLD",2270,"KRN",101,"NM",6,0)
RG EXCPT PATIENT INQUIRY^^0
"BLD",2270,"KRN",101,"NM",7,0)
RG EXCPT PATIENT AUDIT^^0
"BLD",2270,"KRN",101,"NM",8,0)
RG EXCPT HINQ INQUIRY^^0
"BLD",2270,"KRN",101,"NM",9,0)
RG EXCPT MPI/PD DATA^^0
"BLD",2270,"KRN",101,"NM",10,0)
RG EXCPT EDIT NOTE^^0
"BLD",2270,"KRN",101,"NM",11,0)
RG EXCPT DATE SORT^^0
"BLD",2270,"KRN",101,"NM",12,0)
RG EXCPT MAIN MENU^^0
"BLD",2270,"KRN",101,"NM",13,0)
RG EXCPT PATIENT SORT^^0
"BLD",2270,"KRN",101,"NM",14,0)
RG EXCPT PDAT MENU^^0
"BLD",2270,"KRN",101,"NM",15,0)
RG EXCPT RCHK^^0
"BLD",2270,"KRN",101,"NM",16,0)
RG EXCPT RDISP^^0
"BLD",2270,"KRN",101,"NM",17,0)
RG EXCPT RSEND^^0
"BLD",2270,"KRN",101,"NM",18,0)
RG EXCPT SELECT^^0
"BLD",2270,"KRN",101,"NM",19,0)
RG EXCPT SELECT TYPE^^0
"BLD",2270,"KRN",101,"NM",21,0)
RG EXCPT TYPE SORT^^0
"BLD",2270,"KRN",101,"NM",22,0)
RG EXCPT POT MATCH^^0
"BLD",2270,"KRN",101,"NM","B","RG EXCPT ACTION MENU",2)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT DATE SORT",11)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT DISPLAY ONLY QUERY",4)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT EDIT NOTE",10)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT EDIT PATIENT DATA",5)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT HINQ INQUIRY",8)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT MAIN MENU",12)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT MPI/PD DATA",9)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT PATIENT AUDIT",7)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT PATIENT INQUIRY",6)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT PATIENT SORT",13)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT PDAT MENU",14)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT POT MATCH",22)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT RCHK",15)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT RDISP",16)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT RSEND",17)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT SELECT",18)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT SELECT TYPE",19)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT SING PATIENT INIT",1)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT TYPE SORT",21)

"BLD",2270,"KRN",101,"NM","B","RG EXCPT UPDATE STATUS",3)

"BLD",2270,"KRN",409.61,0)
409.61
"BLD",2270,"KRN",409.61,"NM",0)
^9.68A^2^2
"BLD",2270,"KRN",409.61,"NM",1,0)
RG EXCPT SUMMARY^^0
"BLD",2270,"KRN",409.61,"NM",2,0)
RG EXCPT ACTION^^0
"BLD",2270,"KRN",409.61,"NM","B","RG EXCPT ACTION",2)

"BLD",2270,"KRN",409.61,"NM","B","RG EXCPT SUMMARY",1)

"BLD",2270,"KRN",771,0)
771
"BLD",2270,"KRN",870,0)
870
"BLD",2270,"KRN",8989.51,0)
8989.51
"BLD",2270,"KRN",8989.52,0)
8989.52
"BLD",2270,"KRN",8994,0)
8994
"BLD",2270,"KRN","B",.4,.4)

"BLD",2270,"KRN","B",.401,.401)

"BLD",2270,"KRN","B",.402,.402)

"BLD",2270,"KRN","B",.403,.403)

"BLD",2270,"KRN","B",.5,.5)

"BLD",2270,"KRN","B",.84,.84)

"BLD",2270,"KRN","B",3.6,3.6)

"BLD",2270,"KRN","B",3.8,3.8)

"BLD",2270,"KRN","B",9.2,9.2)

"BLD",2270,"KRN","B",9.8,9.8)

"BLD",2270,"KRN","B",19,19)

"BLD",2270,"KRN","B",19.1,19.1)

"BLD",2270,"KRN","B",101,101)

"BLD",2270,"KRN","B",409.61,409.61)

"BLD",2270,"KRN","B",771,771)

"BLD",2270,"KRN","B",870,870)

"BLD",2270,"KRN","B",8989.51,8989.51)

"BLD",2270,"KRN","B",8989.52,8989.52)

"BLD",2270,"KRN","B",8994,8994)

"BLD",2270,"QUES",0)
^9.62^^
"BLD",2270,"REQB",0)
^9.611^4^3
"BLD",2270,"REQB",1,0)
MPIF*1.0*43^2
"BLD",2270,"REQB",3,0)
RG*1.0*35^2
"BLD",2270,"REQB",4,0)
RG*1.0*39^2
"BLD",2270,"REQB","B","MPIF*1.0*43",1)

"BLD",2270,"REQB","B","RG*1.0*35",3)

"BLD",2270,"REQB","B","RG*1.0*39",4)

"INIT")
RGP43PST
"KRN",19,7060,-1)
1^6
"KRN",19,7060,0)
RG EXCEPTION POTENTIAL MATCH
"KRN",101,1692,-1)
0^12
"KRN",101,1692,0)
RG EXCPT MAIN MENU^MPI/PD EXCEPTION MENU^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1692,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1692,1,1,0)
This protocol serves as the main menu of exception handling options
"KRN",101,1692,1,2,0)
under the MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1692,4)
40^4
"KRN",101,1692,10,0)
^101.01PA^7^7
"KRN",101,1692,10,3,0)
1693^SE^15^^^Select Exception
"KRN",101,1692,10,3,"^")
RG EXCPT SELECT
"KRN",101,1692,10,4,0)
1699^ST^10^^^Sort by Exception Type
"KRN",101,1692,10,4,"^")
RG EXCPT TYPE SORT
"KRN",101,1692,10,5,0)
1700^SD^5^^^Sort Exceptions by Date
"KRN",101,1692,10,5,"^")
RG EXCPT DATE SORT
"KRN",101,1692,10,6,0)
1701^SN^7^^^Sort by Patient Name
"KRN",101,1692,10,6,"^")
RG EXCPT PATIENT SORT
"KRN",101,1692,10,7,0)
1702^VT^12^^^View Selected Exception Type
"KRN",101,1692,10,7,"^")
RG EXCPT SELECT TYPE
"KRN",101,1692,26)
D SHOW^VALM
"KRN",101,1692,28)
Select Action:
"KRN",101,1692,99)
58639,51005
"KRN",101,1693,-1)
0^18
"KRN",101,1693,0)
RG EXCPT SELECT^Select Exception^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1693,1,0)
^101.06^3^3^3010719^^^^
"KRN",101,1693,1,1,0)
This protocol allows the user to select an exception for processing
"KRN",101,1693,1,2,0)
from the MPI/PD Exceptions screen in the MPI/PD Exception Handling
"KRN",101,1693,1,3,0)
option [RG EXCEPTION HANDLING].
"KRN",101,1693,20)
D SELECT^RGEXHND1
"KRN",101,1693,99)
58043,62323
"KRN",101,1694,-1)
0^2
"KRN",101,1694,0)
RG EXCPT ACTION MENU^MPI/PD EXCEPTION HANDLING^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1694,1,0)
^101.06^4^4^3051212^^^^
"KRN",101,1694,1,1,0)
This protocol serves as the action menu and allows several
"KRN",101,1694,1,2,0)
actions to be taken for a patient selected from the MPI/PD
"KRN",101,1694,1,3,0)
Exception Menu [RG EXCPT MAIN MENU].  This is activated through
"KRN",101,1694,1,4,0)
the MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1694,4)
26^4
"KRN",101,1694,10,0)
^101.01PAI^12^11
"KRN",101,1694,10,3,0)
1695^UPD^50^^^Update to Processed
"KRN",101,1694,10,3,"^")
RG EXCPT UPDATE STATUS
"KRN",101,1694,10,4,0)
1696^DO^42^^^MPI Display Only Qry
"KRN",101,1694,10,4,"^")
RG EXCPT DISPLAY ONLY QUERY
"KRN",101,1694,10,6,0)
1698^ED^47^^^Edit Patient Data
"KRN",101,1694,10,6,"^")
RG EXCPT EDIT PATIENT DATA
"KRN",101,1694,10,7,0)
1703^PI^35^^^Patient Inquiry
"KRN",101,1694,10,7,"^")
RG EXCPT PATIENT INQUIRY
"KRN",101,1694,10,8,0)
1704^AUD^30^^^Patient Audit
"KRN",101,1694,10,8,"^")
RG EXCPT PATIENT AUDIT
"KRN",101,1694,10,9,0)
1705^HI^40^^^Hinq Inquiry
"KRN",101,1694,10,9,"^")
RG EXCPT HINQ INQUIRY
"KRN",101,1694,10,10,0)
1806^DI^80^^^MPI/PD Data Inquiry
"KRN",101,1694,10,10,"^")
RG EXCPT MPI/PD DATA
"KRN",101,1694,10,11,0)
1846^NT^90^^^Edit Note
"KRN",101,1694,10,11,"^")
RG EXCPT EDIT NOTE
"KRN",101,1694,10,12,0)
2064^PMR^45^^^Potential Match Rev
"KRN",101,1694,10,12,"^")
RG EXCPT POT MATCH
"KRN",101,1694,20)

"KRN",101,1694,26)
D SHOW^VALM
"KRN",101,1694,28)
Select Action:
"KRN",101,1694,99)
60246,54910
"KRN",101,1695,-1)
0^3
"KRN",101,1695,0)
RG EXCPT UPDATE STATUS^Update Status to Processed^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1695,1,0)
^101.06^3^3^3010719^^^^
"KRN",101,1695,1,1,0)
This protocol allows the user to update the exception status 
"KRN",101,1695,1,2,0)
to PROCESSED from the MPI/PD Exception Handling option [RG 
"KRN",101,1695,1,3,0)
EXCEPTION HANDLING].
"KRN",101,1695,2,0)
^101.02A^^0
"KRN",101,1695,4)
^^^
"KRN",101,1695,20)
D UPD^RGEX03
"KRN",101,1695,99)
58043,62323
"KRN",101,1696,-1)
0^4
"KRN",101,1696,0)
RG EXCPT DISPLAY ONLY QUERY^Display Only Query to MPI^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1696,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1696,1,1,0)
This protocol allows the user to perform a Display Only Query to the MPI
"KRN",101,1696,1,2,0)
from the MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1696,20)
D DISP^RGEX03
"KRN",101,1696,99)
58043,62323
"KRN",101,1698,-1)
0^5
"KRN",101,1698,0)
RG EXCPT EDIT PATIENT DATA^Edit Patient Data^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1698,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1698,1,1,0)
This protocol allows the user to edit patient data from the 
"KRN",101,1698,1,2,0)
MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1698,20)
D LOAD^RGEX03
"KRN",101,1698,99)
58043,62323
"KRN",101,1699,-1)
0^21
"KRN",101,1699,0)
RG EXCPT TYPE SORT^Sort by Exception Type^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1699,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1699,1,1,0)
This protocol allows the user to sort exceptions by type in the
"KRN",101,1699,1,2,0)
MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1699,20)
S RGSORT="ST" D SORT^RGEX01
"KRN",101,1699,99)
58043,62323
"KRN",101,1700,-1)
0^11
"KRN",101,1700,0)
RG EXCPT DATE SORT^Sort by Exception Date^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1700,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1700,1,1,0)
This protocol allows the user to sort exceptions by date in the
"KRN",101,1700,1,2,0)
MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1700,20)
S RGSORT="SD" D SORT^RGEX01
"KRN",101,1700,99)
58043,62323
"KRN",101,1701,-1)
0^13
"KRN",101,1701,0)
RG EXCPT PATIENT SORT^Sort by Patient ^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1701,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1701,1,1,0)
This protocol allows the user to sort exceptions by patient in
"KRN",101,1701,1,2,0)
the MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1701,20)
S RGSORT="SN" D SORT^RGEX01
"KRN",101,1701,99)
58043,62323
"KRN",101,1702,-1)
0^19
"KRN",101,1702,0)
RG EXCPT SELECT TYPE^View Selected Exception Type^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1702,1,0)
^101.06^4^4^3010719^^^^
"KRN",101,1702,1,1,0)
This protocol allows the user to select an exception type to 
"KRN",101,1702,1,2,0)
view, all others will be filtered out, for exception processing
"KRN",101,1702,1,3,0)
from the MPI/PD Exceptions screen in the MPI/PD Exception Handling
"KRN",101,1702,1,4,0)
option [RG EXCEPTION HANDLING].
"KRN",101,1702,20)
S RGSORT="VT" D SORT^RGEX01
"KRN",101,1702,27)

"KRN",101,1702,99)
58043,62323
"KRN",101,1703,-1)
0^6
"KRN",101,1703,0)
RG EXCPT PATIENT INQUIRY^Patient Inquiry^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1703,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1703,1,1,0)
This protocol allows the user to do a Patient Inquiry from the 
"KRN",101,1703,1,2,0)
MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1703,20)
D INQ^RGEX03
"KRN",101,1703,99)
58043,62323
"KRN",101,1704,-1)
0^7
"KRN",101,1704,0)
RG EXCPT PATIENT AUDIT^Patient Audit^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1704,1,0)
^101.06^2^2^3010719^^^^
"KRN",101,1704,1,1,0)
This protocol allows the user to audit the changes made in the
"KRN",101,1704,1,2,0)
MPI/PD Exception Handling option [RG EXCEPTION HANDLING].
"KRN",101,1704,20)
D PA^RGEX03
"KRN",101,1704,99)
58043,62323
"KRN",101,1705,-1)
0^8
"KRN",101,1705,0)
RG EXCPT HINQ INQUIRY^Hinq Inquiry^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1705,1,0)
^101.06^3^3^3010719^^^^
"KRN",101,1705,1,1,0)
This protocol allows the user to do a HINQ Inquiry for a 
"KRN",101,1705,1,2,0)
selected patient in the MPI/PD Exception Handling option 
"KRN",101,1705,1,3,0)
[RG EXCEPTION HANDLING].
"KRN",101,1705,20)
D HI^RGEX03
"KRN",101,1705,99)
58043,62323
"KRN",101,1806,-1)
0^9
"KRN",101,1806,0)
RG EXCPT MPI/PD DATA^MPI/PD Data Inquiry^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1806,1,0)
^101.06^2^2^3011022^^^^
"KRN",101,1806,1,1,0)
This protocol displays Master Patient Index/Patient Demographics 
"KRN",101,1806,1,2,0)
(MPI/PD) information for the selected patient.
"KRN",101,1806,2,0)
^101.02A^2^1
"KRN",101,1806,2,2,0)
DI
"KRN",101,1806,2,"B","DI",2)

"KRN",101,1806,20)
D PDAT^RGEX03
"KRN",101,1806,99)
58734,46469
"KRN",101,1842,-1)
0^17
"KRN",101,1842,0)
RG EXCPT RSEND^Send Remote Patient Data Query^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1842,1,0)
^^2^2^3011016^
"KRN",101,1842,1,1,0)
This protocol allows the user to send a remote patient data query to
"KRN",101,1842,1,2,0)
treating facility sites.
"KRN",101,1842,20)
D RSEND^RGEX04
"KRN",101,1842,99)
58728,59197
"KRN",101,1843,-1)
0^15
"KRN",101,1843,0)
RG EXCPT RCHK^Check Remote Patient Data Query^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1843,1,0)
^^2^2^3011016^
"KRN",101,1843,1,1,0)
This protocol allows the user to check the status of a remote patient data
"KRN",101,1843,1,2,0)
query.
"KRN",101,1843,20)
D RCHK^RGEX04
"KRN",101,1843,99)
58728,59359
"KRN",101,1844,-1)
0^16
"KRN",101,1844,0)
RG EXCPT RDISP^Display Patient Data Query^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1844,1,0)
^^2^2^3011016^
"KRN",101,1844,1,1,0)
This protocol allows the user to check the status of a remote patient data
"KRN",101,1844,1,2,0)
query.
"KRN",101,1844,20)
D RDISP^RGEX04
"KRN",101,1844,99)
58728,59436
"KRN",101,1845,-1)
0^14
"KRN",101,1845,0)
RG EXCPT PDAT MENU^MPI/PD PATIENT DATA ACTION MENU^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1845,1,0)
^^2^2^3011016^
"KRN",101,1845,1,1,0)
This protocol serves as the action menu for the MPI/PD Exception Handling
"KRN",101,1845,1,2,0)
Patient Data Query actions.
"KRN",101,1845,4)
40
"KRN",101,1845,10,0)
^101.01PA^3^3
"KRN",101,1845,10,1,0)
1842^SND^5^^^Send Remote Query
"KRN",101,1845,10,1,"^")
RG EXCPT RSEND
"KRN",101,1845,10,2,0)
1843^CHK^10^^^Check Remote Query
"KRN",101,1845,10,2,"^")
RG EXCPT RCHK
"KRN",101,1845,10,3,0)
1844^DSP^15^^^Display Query Data
"KRN",101,1845,10,3,"^")
RG EXCPT RDISP
"KRN",101,1845,26)
D SHOW^VALM
"KRN",101,1845,28)
Select Action:
"KRN",101,1845,99)
58728,59920
"KRN",101,1846,-1)
0^10
"KRN",101,1846,0)
RG EXCPT EDIT NOTE^Edit Notes^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1846,1,0)
^^1^1^3011030^
"KRN",101,1846,1,1,0)
This protocol allows the user to add/edit notes to the exception.
"KRN",101,1846,20)
D EDTNOT^RGEX03
"KRN",101,1846,99)
58742,35539
"KRN",101,2064,-1)
0^22
"KRN",101,2064,0)
RG EXCPT POT MATCH^Resolve Potential Match^^A^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,2064,1,0)
^101.06^2^2^3051212^^
"KRN",101,2064,1,1,0)
This action will allow the review of a potential match exception and 
"KRN",101,2064,1,2,0)
resolution even though the patient already has a National ICN.
"KRN",101,2064,20)
D POT^RGEX03
"KRN",101,2064,99)
60239,28567
"KRN",101,2084,-1)
1^1
"KRN",101,2084,0)
RG EXCPT SING PATIENT INIT
"KRN",409.61,230,-1)
0^1
"KRN",409.61,230,0)
RG EXCPT SUMMARY^1^^80^5^18^1^1^^RG EXCPT MAIN MENU^MPI/PD EXCEPTION HANDLING^1^^1
"KRN",409.61,230,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,230,"ARRAY")
 ^TMP("RGEXC",$J)
"KRN",409.61,230,"COL",0)
^409.621^4^4
"KRN",409.61,230,"COL",1,0)
Patient^6^21^Patient^H^0
"KRN",409.61,230,"COL",2,0)
SSN^28^9^SSN^H^0
"KRN",409.61,230,"COL",3,0)
Date^39^8^Dt Rec'd^^0
"KRN",409.61,230,"COL",4,0)
Exception Type^49^30^Exception Type^^0
"KRN",409.61,230,"COL","AIDENT",0,1)

"KRN",409.61,230,"COL","AIDENT",0,2)

"KRN",409.61,230,"COL","AIDENT",0,3)

"KRN",409.61,230,"COL","AIDENT",0,4)

"KRN",409.61,230,"COL","B","Date",3)

"KRN",409.61,230,"COL","B","Exception Type",4)

"KRN",409.61,230,"COL","B","Patient",1)

"KRN",409.61,230,"COL","B","SSN",2)

"KRN",409.61,230,"FNL")
D EXIT^RGEX01
"KRN",409.61,230,"HDR")
D HDR^RGEX01
"KRN",409.61,230,"HLP")
D HELP^RGEX01
"KRN",409.61,230,"INIT")
D INIT^RGEX01
"KRN",409.61,231,-1)
0^2
"KRN",409.61,231,0)
RG EXCPT ACTION^1^^80^5^18^1^1^^RG EXCPT ACTION MENU^MPI/PD EXCEPTION ACTIONS^1^^1
"KRN",409.61,231,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,231,"ARRAY")
 ^TMP("RGEXC2",$J)
"KRN",409.61,231,"COL",0)
^409.621^1^1
"KRN",409.61,231,"COL",1,0)
EXCEPTION^5^20^Exception Data^^0
"KRN",409.61,231,"COL","AIDENT",0,1)

"KRN",409.61,231,"COL","B","EXCEPTION",1)

"KRN",409.61,231,"FNL")
D EXIT^RGEX03
"KRN",409.61,231,"HDR")
D HDR^RGEX03
"KRN",409.61,231,"HLP")
D HELP^RGEX03
"KRN",409.61,231,"INIT")
D INIT^RGEX03
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",272,-1)
1^1
"PKG",272,0)
CLINICAL INFO RESOURCE NETWORK^RG^CIRN
"PKG",272,20,0)
^9.402P^^0
"PKG",272,22,0)
^9.49I^1^1
"PKG",272,22,1,0)
1.0^2990430^2990601^12555
"PKG",272,22,1,"PAH",1,0)
43^3060410
"PKG",272,22,1,"PAH",1,1,0)
^^3^3^3060410
"PKG",272,22,1,"PAH",1,1,1,0)
REMOVE SINGLE PATIENT INITIALIZATION
"PKG",272,22,1,"PAH",1,1,2,0)
Refer to patch RG*1*43 in the FORUM Patch Module for a complete
"PKG",272,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","RGEVPRG")
0^3^B41034951
"RTN","RGEVPRG",1,0)
RGEVPRG ;BAY/ALS-OPTIONS TO PURGE MPI/PD EXCEPTIONS ;08/23/99
"RTN","RGEVPRG",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**3,12,19,32,35,43**;30 Apr 99
"RTN","RGEVPRG",3,0)
 ;
"RTN","RGEVPRG",4,0)
MAIN ;
"RTN","RGEVPRG",5,0)
 ;Q:($D(^TMP("RGEXC")))!($D(^TMP("RGEXC2")))
"RTN","RGEVPRG",6,0)
 L +^RGHL7(991.1):0 I '$T Q
"RTN","RGEVPRG",7,0)
 L -^RGHL7(991.1)
"RTN","RGEVPRG",8,0)
 L +^RGHL7(991.1,"RG PURGE EXCEPTION"):5 E  Q
"RTN","RGEVPRG",9,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RGEVPRG",10,0)
 S $P(^RGSITE(991.8,1,"EXCPRG"),"^",1)=$$NOW^XLFDT
"RTN","RGEVPRG",11,0)
 S $P(^RGSITE(991.8,1,"EXCPRG"),"^",3)="R"
"RTN","RGEVPRG",12,0)
 D PROC
"RTN","RGEVPRG",13,0)
 D PRGDUP
"RTN","RGEVPRG",14,0)
 D PRG30
"RTN","RGEVPRG",15,0)
 D PRGZZ
"RTN","RGEVPRG",16,0)
 S $P(^RGSITE(991.8,1,"EXCPRG"),"^",2)=$$NOW^XLFDT
"RTN","RGEVPRG",17,0)
 S $P(^RGSITE(991.8,1,"EXCPRG"),"^",3)="C"
"RTN","RGEVPRG",18,0)
 L -^RGHL7(991.1,"RG PURGE EXCEPTION")
"RTN","RGEVPRG",19,0)
 Q
"RTN","RGEVPRG",20,0)
PRGPAT ;Purge by Patient
"RTN","RGEVPRG",21,0)
 W !
"RTN","RGEVPRG",22,0)
 S DIC="^DPT(",DIC(0)="QEAM",DIC("A")="Select PATIENT: "
"RTN","RGEVPRG",23,0)
 D ^DIC K DIC G:Y<0 QUIT  S RGDFN=+Y
"RTN","RGEVPRG",24,0)
 S EXCT="",FLAG=0
"RTN","RGEVPRG",25,0)
 F  S EXCT=$O(^RGHL7(991.1,"ADFN",EXCT)) Q:EXCT=""  D
"RTN","RGEVPRG",26,0)
 . I $D(^RGHL7(991.1,"ADFN",EXCT,RGDFN)) S FLAG=1 Q
"RTN","RGEVPRG",27,0)
 I FLAG=0 W !,"There are no exceptions on file for this patient." G PRGPAT
"RTN","RGEVPRG",28,0)
 I $$IFLOCAL^MPIF001(RGDFN) W !,"This patient does not have a national ICN assigned, do not purge." Q
"RTN","RGEVPRG",29,0)
 S DFN=RGDFN D DEM^VADPT
"RTN","RGEVPRG",30,0)
 S DIR(0)="YA",DIR("B")="YES"
"RTN","RGEVPRG",31,0)
 S DIR("A")="Are you sure you want to purge all exceptions on file for "_VADM(1)_"?   YES//  "
"RTN","RGEVPRG",32,0)
 D ^DIR Q:$D(DIRUT)  I Y>0 D
"RTN","RGEVPRG",33,0)
 . S EXCT="",CNT=0
"RTN","RGEVPRG",34,0)
 . F  S EXCT=$O(^RGHL7(991.1,"ADFN",EXCT)) Q:'EXCT  D
"RTN","RGEVPRG",35,0)
 .. S IEN=0
"RTN","RGEVPRG",36,0)
 .. F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCT,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEVPRG",37,0)
 ... S IEN2=0
"RTN","RGEVPRG",38,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCT,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",39,0)
 .... S NUM="" S NUM=$P(^RGHL7(991.1,IEN,1,0),"^",4)
"RTN","RGEVPRG",40,0)
 .... I NUM=1 S DIK="^RGHL7(991.1,",DA=IEN D ^DIK K DIK,DA S CNT=CNT+1
"RTN","RGEVPRG",41,0)
 .... E  I NUM>1 D DEL
"RTN","RGEVPRG",42,0)
 . W !,"All exceptions purged for "_VADM(1)_"   DFN: "_RGDFN
"RTN","RGEVPRG",43,0)
 K EXCT,DFN,FLAG,VADM,CNT,IEN,IEN2,NUM,RGDFN,Y
"RTN","RGEVPRG",44,0)
QUIT Q
"RTN","RGEVPRG",45,0)
 ;
"RTN","RGEVPRG",46,0)
PRGDT ; Purge by Date
"RTN","RGEVPRG",47,0)
 W !!,"Enter a date for the purge. All exceptions on file, on or before that date, will be deleted."
"RTN","RGEVPRG",48,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","RGEVPRG",49,0)
 S DIR(0)="DA^:DT:EPX",DIR("A")="Enter Date for Purge: "
"RTN","RGEVPRG",50,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","RGEVPRG",51,0)
 S PURDT=Y
"RTN","RGEVPRG",52,0)
 S PDATE=$$FMTE^XLFDT(PURDT)
"RTN","RGEVPRG",53,0)
 S DIR(0)="YA",DIR("B")="YES"
"RTN","RGEVPRG",54,0)
 S DIR("A")="Are you sure you want to purge all exceptions on file dated on or before "_PDATE_"?  YES//  "
"RTN","RGEVPRG",55,0)
 D ^DIR Q:$D(DIRUT)  I Y>0 D
"RTN","RGEVPRG",56,0)
 . S EXCDT="",CNT=0
"RTN","RGEVPRG",57,0)
 . F  S EXCDT=$O(^RGHL7(991.1,"AD",EXCDT)) Q:'EXCDT  D
"RTN","RGEVPRG",58,0)
 .. I ($P(EXCDT,".",1)=PURDT)!($P(EXCDT,".",1)<PURDT) D
"RTN","RGEVPRG",59,0)
 ... S IEN=0
"RTN","RGEVPRG",60,0)
 ... F  S IEN=$O(^RGHL7(991.1,"AD",EXCDT,IEN)) Q:'IEN  D
"RTN","RGEVPRG",61,0)
 .... S NUM="" S NUM=$P($G(^RGHL7(991.1,IEN,1,0)),"^",4) Q:NUM<1
"RTN","RGEVPRG",62,0)
 .... S CNT=CNT+NUM
"RTN","RGEVPRG",63,0)
 .... S DIK="^RGHL7(991.1,",DA=IEN
"RTN","RGEVPRG",64,0)
 .... D ^DIK K DIK,DA
"RTN","RGEVPRG",65,0)
 I CNT=0 W !,"There are no exceptions dated on or before "_PDATE_", no data to purge."
"RTN","RGEVPRG",66,0)
 E  I CNT>0 W !,CNT_" exceptions, dated on or before "_PDATE_" have been purged!"
"RTN","RGEVPRG",67,0)
 K PDATE,PURDT,EXCDT,CNT,IEN,NUM,Y
"RTN","RGEVPRG",68,0)
 Q
"RTN","RGEVPRG",69,0)
PRG30   ; Purge Exceptions over 30 days old
"RTN","RGEVPRG",70,0)
 S TODAY=""
"RTN","RGEVPRG",71,0)
 S TODAY=$$NOW^XLFDT D
"RTN","RGEVPRG",72,0)
 . S EXCDT="",CNT=0,DIFF=""
"RTN","RGEVPRG",73,0)
 . F  S EXCDT=$O(^RGHL7(991.1,"AD",EXCDT)) Q:'EXCDT  D
"RTN","RGEVPRG",74,0)
 .. S DIFF=$$FMDIFF^XLFDT(TODAY,EXCDT)
"RTN","RGEVPRG",75,0)
 .. I DIFF>30 D
"RTN","RGEVPRG",76,0)
 ... S IEN=0
"RTN","RGEVPRG",77,0)
 ... F  S IEN=$O(^RGHL7(991.1,"AD",EXCDT,IEN)) Q:'IEN  D
"RTN","RGEVPRG",78,0)
 .... S NUM="" S NUM=$P($G(^RGHL7(991.1,IEN,1,0)),"^",4) Q:'NUM
"RTN","RGEVPRG",79,0)
 .... S IEN2=0
"RTN","RGEVPRG",80,0)
 .... F  S IEN2=$O(^RGHL7(991.1,IEN,1,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",81,0)
 ..... S STAT=""
"RTN","RGEVPRG",82,0)
 ..... S STAT=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",5)
"RTN","RGEVPRG",83,0)
 ..... ; Only delete PROCESSED exceptions
"RTN","RGEVPRG",84,0)
 ..... I (STAT>0)!(STAT="") D
"RTN","RGEVPRG",85,0)
 ...... I NUM>1 D DEL
"RTN","RGEVPRG",86,0)
 ...... E  I NUM=1 D
"RTN","RGEVPRG",87,0)
 ....... S CNT=CNT+NUM
"RTN","RGEVPRG",88,0)
 ....... S DIK="^RGHL7(991.1,",DA=IEN
"RTN","RGEVPRG",89,0)
 ....... D ^DIK K DIK,DA
"RTN","RGEVPRG",90,0)
 K DIFF,TODAY,EXCDT,CNT,IEN,IEN2,NUM,STAT
"RTN","RGEVPRG",91,0)
 Q
"RTN","RGEVPRG",92,0)
PRGEXC ; Purge by Exception Type
"RTN","RGEVPRG",93,0)
 ;S DIC="^RGHL7(991.11,",DIC(0)="QEAM"
"RTN","RGEVPRG",94,0)
 ;S DIC("A")="Enter an exception type to purge: "
"RTN","RGEVPRG",95,0)
 ;D ^DIC K DIC G:Y<200 QUIT  S EXCTYP=+Y,ETYPE=X
"RTN","RGEVPRG",96,0)
 ;S DIR(0)="YA",DIR("B")="YES"
"RTN","RGEVPRG",97,0)
 ;S DIR("A")="*WARNING* This will permanently delete all "_ETYPE_" exceptions. Are you sure you want to do this?  YES//  "
"RTN","RGEVPRG",98,0)
 ;D ^DIR Q:$D(DIRUT)  I Y>0 D
"RTN","RGEVPRG",99,0)
 ;. S CNT=0,IEN=""
"RTN","RGEVPRG",100,0)
 ;. F  S IEN=$O(^RGHL7(991.1,"AC",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGEVPRG",101,0)
 ;.. S IEN2=0
"RTN","RGEVPRG",102,0)
 ;.. F  S IEN2=$O(^RGHL7(991.1,"AC",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",103,0)
 ;... S NUM="" S NUM=$P(^RGHL7(991.1,IEN,1,0),"^",4)
"RTN","RGEVPRG",104,0)
 ;... I NUM=1 S DIK="^RGHL7(991.1,",DA=IEN D ^DIK K DIK,DA S CNT=CNT+1
"RTN","RGEVPRG",105,0)
 ;... E  I NUM>1 D DEL
"RTN","RGEVPRG",106,0)
 ;I CNT=0 W !,"There are no "_ETYPE_" exceptions on file."
"RTN","RGEVPRG",107,0)
 ;E  I CNT>0 W !,CNT_" "_ETYPE_" Exceptions purged!"
"RTN","RGEVPRG",108,0)
 ;K ETYPE,CNT,IEN,IEN2,NUM,X,Y
"RTN","RGEVPRG",109,0)
 ;Q
"RTN","RGEVPRG",110,0)
PRGDUP ; Purge Duplicate Entries
"RTN","RGEVPRG",111,0)
 S EXCTYP="",CNT=0
"RTN","RGEVPRG",112,0)
 K ^TMP("RGEVDUP",$J)
"RTN","RGEVPRG",113,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ADFN",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEVPRG",114,0)
 . S RGDFN=""
"RTN","RGEVPRG",115,0)
 . F  S RGDFN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN)) Q:'RGDFN  D
"RTN","RGEVPRG",116,0)
 .. S IEN=0
"RTN","RGEVPRG",117,0)
 .. F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEVPRG",118,0)
 ... S IEN2=0
"RTN","RGEVPRG",119,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",120,0)
 .... S EXCDT=$P(^RGHL7(991.1,IEN,0),"^",3)
"RTN","RGEVPRG",121,0)
 .... I '$D(^TMP("RGEVDUP",$J,RGDFN,EXCTYP)) D  Q
"RTN","RGEVPRG",122,0)
 ..... S ^TMP("RGEVDUP",$J,RGDFN,EXCTYP)=EXCDT_"^"_IEN_"^"_IEN2
"RTN","RGEVPRG",123,0)
 .... I $D(^TMP("RGEVDUP",$J,RGDFN,EXCTYP)) D
"RTN","RGEVPRG",124,0)
 ..... S OLDNODE=^TMP("RGEVDUP",$J,RGDFN,EXCTYP)
"RTN","RGEVPRG",125,0)
 ..... S OLDDT=$P(OLDNODE,"^")
"RTN","RGEVPRG",126,0)
 ..... I EXCDT>OLDDT D  Q
"RTN","RGEVPRG",127,0)
 ...... S NUM="" S NUM=$P(^RGHL7(991.1,IEN,1,0),"^",4)
"RTN","RGEVPRG",128,0)
 ...... I NUM=1 S DIK="^RGHL7(991.1,",DA=$P(OLDNODE,"^",2) D ^DIK K DIK,DA
"RTN","RGEVPRG",129,0)
 ...... E  I NUM>1 D
"RTN","RGEVPRG",130,0)
 ....... S DA(1)=$P(OLDNODE,"^",2),DA=$P(OLDNODE,"^",3)
"RTN","RGEVPRG",131,0)
 ....... S DIK="^RGHL7(991.1,"_DA(1)_",1," D ^DIK K DIK,DA
"RTN","RGEVPRG",132,0)
 ...... S CNT=CNT+1
"RTN","RGEVPRG",133,0)
 ...... S ^TMP("RGEVDUP",$J,RGDFN,EXCTYP)=EXCDT_"^"_IEN_"^"_IEN2
"RTN","RGEVPRG",134,0)
 ..... I OLDDT>EXCDT!(OLDDT=EXCDT) D
"RTN","RGEVPRG",135,0)
 ...... S NUM="" S NUM=$P(^RGHL7(991.1,IEN,1,0),"^",4)
"RTN","RGEVPRG",136,0)
 ...... I NUM=1 S DIK="^RGHL7(991.1,",DA=IEN D ^DIK K DIK,DA S CNT=CNT+1
"RTN","RGEVPRG",137,0)
 ...... E  I NUM>1 D DEL
"RTN","RGEVPRG",138,0)
 ; W !,CNT_" Duplicate entries"
"RTN","RGEVPRG",139,0)
 K OLDDT,OLDNODE,EXCDT,CNT,IEN,IEN2,NUM,RGDFN
"RTN","RGEVPRG",140,0)
 Q
"RTN","RGEVPRG",141,0)
PRGZZ ;Purge if name field is null (incomplete record)
"RTN","RGEVPRG",142,0)
 ;Purge if -9 node exists, this indicates the record has been merged.
"RTN","RGEVPRG",143,0)
 S EXCTYP="",CNT=""
"RTN","RGEVPRG",144,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ADFN",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEVPRG",145,0)
 . S RGDFN=""
"RTN","RGEVPRG",146,0)
 . F  S RGDFN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN)) Q:'RGDFN  D
"RTN","RGEVPRG",147,0)
 .. S IEN=0
"RTN","RGEVPRG",148,0)
 .. F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEVPRG",149,0)
 ... S IEN2=0
"RTN","RGEVPRG",150,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",151,0)
 .... S DFN=RGDFN D DEM^VADPT
"RTN","RGEVPRG",152,0)
 .... I VADM(1)=""!($D(^DPT(RGDFN,-9))) D
"RTN","RGEVPRG",153,0)
 ..... S NUM="" S NUM=$P(^RGHL7(991.1,IEN,1,0),"^",4)
"RTN","RGEVPRG",154,0)
 ..... I NUM=1 S DIK="^RGHL7(991.1,",DA=IEN D ^DIK K DIK,DA
"RTN","RGEVPRG",155,0)
 ..... E  I NUM>1 D DEL
"RTN","RGEVPRG",156,0)
 K EXCTYP,RGDFN,DFN,IEN,IEN2,NUM,VADM
"RTN","RGEVPRG",157,0)
 Q
"RTN","RGEVPRG",158,0)
DEL ;
"RTN","RGEVPRG",159,0)
 S CNT=CNT+1
"RTN","RGEVPRG",160,0)
 S DA(1)=IEN,DA=IEN2
"RTN","RGEVPRG",161,0)
 S DIK="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGEVPRG",162,0)
 D ^DIK K DIK,DA
"RTN","RGEVPRG",163,0)
 Q
"RTN","RGEVPRG",164,0)
PROC ;Set these exception types to PROCESSED if they have a national ICN
"RTN","RGEVPRG",165,0)
 ;209 - Required field(s) missing for patient sent to MPI,
"RTN","RGEVPRG",166,0)
 ;227 - Multiple ICNs, 213 - SSN Match Failed, 214 - Name Doesn't Match
"RTN","RGEVPRG",167,0)
 S EXCTYP=""
"RTN","RGEVPRG",168,0)
 S HOME=$$SITE^VASITE()
"RTN","RGEVPRG",169,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"AC",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEVPRG",170,0)
 . I (EXCTYP=209)!(EXCTYP=227)!(EXCTYP=213)!(EXCTYP=214) D  ;**43
"RTN","RGEVPRG",171,0)
 .. S IEN=0
"RTN","RGEVPRG",172,0)
 .. F  S IEN=$O(^RGHL7(991.1,"AC",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGEVPRG",173,0)
 ... S IEN2=0,ICN="",RGDFN=""
"RTN","RGEVPRG",174,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"AC",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEVPRG",175,0)
 .... S RGDFN=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",4) Q:'RGDFN
"RTN","RGEVPRG",176,0)
 .... S ICN=+$$GETICN^MPIF001(RGDFN)
"RTN","RGEVPRG",177,0)
 .... I $E(ICN,1,3)'=$E($P(HOME,"^",3),1,3)&(ICN>0) D
"RTN","RGEVPRG",178,0)
 ..... L +^RGHL7(991.1,IEN):10
"RTN","RGEVPRG",179,0)
 ..... S DA(1)=IEN,DA=IEN2,DR="6///"_1,DIE="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGEVPRG",180,0)
 ..... D ^DIE K DIE,DA,DR
"RTN","RGEVPRG",181,0)
 ..... L -^RGHL7(991.1,IEN)
"RTN","RGEVPRG",182,0)
 K EXCTYP,HOME,ICN,IEN,IEN2,RGDFN
"RTN","RGEVPRG",183,0)
 Q
"RTN","RGEX01")
0^2^B29834506
"RTN","RGEX01",1,0)
RGEX01 ;BAY/ALS-LIST MANAGER FOR MPI/PD EXCEPTIONS ;10/07/99
"RTN","RGEX01",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**3,12,19,23,43**;30 Apr 99
"RTN","RGEX01",3,0)
 ;
"RTN","RGEX01",4,0)
 ;Reference to MAIN^VAFCPDAT supported by IA #3299
"RTN","RGEX01",5,0)
EN ; -- main entry point for RG EXCPT SUMMARY
"RTN","RGEX01",6,0)
 N STDT,ENDDT,PRGSTAT,XFLAG
"RTN","RGEX01",7,0)
 S XFLAG=0
"RTN","RGEX01",8,0)
 S STDT=$P($G(^RGSITE(991.8,1,"EXCPRG")),"^",1)
"RTN","RGEX01",9,0)
 I $D(STDT) S STDT=$$FMTE^XLFDT(STDT,1)
"RTN","RGEX01",10,0)
 S PRGSTAT=$P($G(^RGSITE(991.8,1,"EXCPRG")),"^",3)
"RTN","RGEX01",11,0)
 I PRGSTAT="" D
"RTN","RGEX01",12,0)
 . W $C(7)
"RTN","RGEX01",13,0)
 . W !!,"The MPI/PD Exception Purge process has not been run."
"RTN","RGEX01",14,0)
 . S DIR(0)="YA",DIR("B")="NO"
"RTN","RGEX01",15,0)
 . S DIR("??")="^D HLPPRG^RGEX01"
"RTN","RGEX01",16,0)
 . S DIR("A")="Do you want to run it now? "
"RTN","RGEX01",17,0)
 . D ^DIR K DIR
"RTN","RGEX01",18,0)
 . I $D(DIRUT)!$D(DUOUT) S XFLAG=1 Q
"RTN","RGEX01",19,0)
 . I Y>0 D
"RTN","RGEX01",20,0)
 .. W !!,"The MPI/PD Exception Purge process will now run."
"RTN","RGEX01",21,0)
 .. W !,"Please come back to this option in ten minutes."
"RTN","RGEX01",22,0)
 .. S XFLAG=1 D QUEPRG
"RTN","RGEX01",23,0)
 L +^RGHL7(991.1,"RG PURGE EXCEPTION"):0 I '$T W $C(7),!!,"The MPI/PD Exception Purge process is currently running.",!,"Please try this option again in ten minutes." S XFLAG=1 G EXIT
"RTN","RGEX01",24,0)
 L -^RGHL7(991.1,"RG PURGE EXCEPTION")
"RTN","RGEX01",25,0)
 I $G(PRGSTAT)="C" D
"RTN","RGEX01",26,0)
 . W !!,"The MPI/PD Exception Purge process last ran "_STDT_"."
"RTN","RGEX01",27,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("??")="^D HLPPRG^RGEX01"
"RTN","RGEX01",28,0)
 . S DIR("A")="Do you want to run the MPI/PD Exception Purge process now? "
"RTN","RGEX01",29,0)
 . D ^DIR K DIR,RGANS S RGANS=Y
"RTN","RGEX01",30,0)
 . I $D(DIRUT)!$D(DUOUT) S XFLAG=1 Q
"RTN","RGEX01",31,0)
 . Q:RGANS=0  ;**43
"RTN","RGEX01",32,0)
 . L +^RGHL7(991.1,"RG PURGE EXCEPTION"):0 I '$T S RGANS=0 Q  ;**43
"RTN","RGEX01",33,0)
 . L -^RGHL7(991.1,"RG PURGE EXCEPTION")
"RTN","RGEX01",34,0)
 . I RGANS>0 D
"RTN","RGEX01",35,0)
 .. W !!,"The MPI/PD Exception Purge process will now run."
"RTN","RGEX01",36,0)
 .. W !,"Please come back to this option in ten minutes."
"RTN","RGEX01",37,0)
 .. S XFLAG=1 D QUEPRG
"RTN","RGEX01",38,0)
 I XFLAG=1 G EXIT
"RTN","RGEX01",39,0)
 K RGANS
"RTN","RGEX01",40,0)
 D WAIT^DICD
"RTN","RGEX01",41,0)
 D EN^VALM("RG EXCPT SUMMARY")
"RTN","RGEX01",42,0)
 Q
"RTN","RGEX01",43,0)
 ;
"RTN","RGEX01",44,0)
HDR ; -- header code
"RTN","RGEX01",45,0)
 S VALMHDR(1)="MPI/PD Exception Handling"
"RTN","RGEX01",46,0)
 S VALMHDR(2)=""
"RTN","RGEX01",47,0)
 Q
"RTN","RGEX01",48,0)
 ;
"RTN","RGEX01",49,0)
INIT ; -- init variables and list array
"RTN","RGEX01",50,0)
 I '$D(RGSORT) S RGSORT="SD"
"RTN","RGEX01",51,0)
 K @VALMAR
"RTN","RGEX01",52,0)
 I RGSORT="SD" D DTLIST^RGEXHND1
"RTN","RGEX01",53,0)
 E  I RGSORT="ST" D EXCLST^RGEXHND1
"RTN","RGEX01",54,0)
 E  I RGSORT="SN" D PATLST^RGEXHND1
"RTN","RGEX01",55,0)
 E  I RGSORT="VT" D SELTYP^RGEXHND1
"RTN","RGEX01",56,0)
 Q
"RTN","RGEX01",57,0)
 ;
"RTN","RGEX01",58,0)
SORT ;
"RTN","RGEX01",59,0)
 D INIT
"RTN","RGEX01",60,0)
 S VALMBCK="R"
"RTN","RGEX01",61,0)
 Q
"RTN","RGEX01",62,0)
HELP ; -- help code
"RTN","RGEX01",63,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RGEX01",64,0)
 Q
"RTN","RGEX01",65,0)
HLPPRG ;
"RTN","RGEX01",66,0)
 W !,"Enter Y(YES) to run the MPI/PD Exception Purge process now."
"RTN","RGEX01",67,0)
 W !!,"Enter N(NO) to go directly into the MPI/PD Exception Handling option."
"RTN","RGEX01",68,0)
 Q
"RTN","RGEX01",69,0)
 ;
"RTN","RGEX01",70,0)
EXIT ; -- exit code
"RTN","RGEX01",71,0)
 K VADM,RGDFN,RGNM,RGSORT,RGSSN,STAT,STRING,NDX,NM,IEN,IEN2,X,DATA,CNT,EXCTYPE,ETYPE,^TMP("RGEXC",$J),^TMP("RGEX01",$J)
"RTN","RGEX01",72,0)
 Q
"RTN","RGEX01",73,0)
QUEPRG S ZTRTN="MAIN^RGEVPRG",ZTDESC="PURGE ZZ*, OVER 30 DAY AND DUPLICATE RECORDS FROM THE CIRN HL7 EXCEPTION LOG FILE"
"RTN","RGEX01",74,0)
 D NOW^%DTC
"RTN","RGEX01",75,0)
 S ZTIO="",ZTDTH=%
"RTN","RGEX01",76,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","RGEX01",77,0)
 D ^%ZTLOAD
"RTN","RGEX01",78,0)
 D HOME^%ZIS K IO("Q")
"RTN","RGEX01",79,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,%
"RTN","RGEX01",80,0)
 Q
"RTN","RGEX01",81,0)
 ;
"RTN","RGEX01",82,0)
EXPND ; -- expand code
"RTN","RGEX01",83,0)
 Q
"RTN","RGEX01",84,0)
CUREX() ;Call to check if there are any patients in the CIRN HL7 EXCEPTION
"RTN","RGEX01",85,0)
 ;LOG file (#991.1) that currently need to be resolved
"RTN","RGEX01",86,0)
 N STAT,EXCTYP,RGEX
"RTN","RGEX01",87,0)
 S STAT="",EXCTYP="",RGEX=0
"RTN","RGEX01",88,0)
 F  S STAT=$O(^RGHL7(991.1,"ASTAT",STAT)) Q:STAT=""!RGEX=1  D
"RTN","RGEX01",89,0)
 . F  S EXCTYP=$O(^RGHL7(991.1,"ASTAT",STAT,EXCTYP)) Q:'EXCTYP!RGEX=1  D
"RTN","RGEX01",90,0)
 .. I (EXCTYP=(209)!((EXCTYP>212)&(EXCTYP<219)))&(STAT=0) S RGEX=1
"RTN","RGEX01",91,0)
 Q RGEX
"RTN","RGEX01",92,0)
PROC ; For a given patient, set exceptions STATUS to PROCESSED.
"RTN","RGEX01",93,0)
 ; DFN must be defined
"RTN","RGEX01",94,0)
 Q:'$D(DFN)
"RTN","RGEX01",95,0)
 S EXCTYP=""
"RTN","RGEX01",96,0)
 S HOME=$$SITE^VASITE()
"RTN","RGEX01",97,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ADFN",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEX01",98,0)
 . S RGDFN="",ICN=""
"RTN","RGEX01",99,0)
 . F  S RGDFN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN)) Q:'RGDFN  D
"RTN","RGEX01",100,0)
 .. I DFN=RGDFN D
"RTN","RGEX01",101,0)
 ... S ICN=+$$GETICN^MPIF001(DFN)
"RTN","RGEX01",102,0)
 ... ;Only set to PROCESSED if patient has national ICN.
"RTN","RGEX01",103,0)
 ... I $E(ICN,1,3)'=$E($P(HOME,"^",3),1,3)&(ICN>0) D
"RTN","RGEX01",104,0)
 .... ;Exclude Death exceptions (215-217); they must be processed manually.
"RTN","RGEX01",105,0)
 .... ;Exclude 218 Potential Matches Returned exception **43
"RTN","RGEX01",106,0)
 .... I (EXCTYP>218)!(EXCTYP<215) D
"RTN","RGEX01",107,0)
 ..... S IEN=0
"RTN","RGEX01",108,0)
 ..... F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEX01",109,0)
 ...... S IEN2=0
"RTN","RGEX01",110,0)
 ...... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEX01",111,0)
 ....... L +^RGHL7(991.1,IEN):10
"RTN","RGEX01",112,0)
 ....... S DA(1)=IEN,DA=IEN2,DR="6///"_1,DIE="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGEX01",113,0)
 ....... D ^DIE K DIE,DA,DR
"RTN","RGEX01",114,0)
 ....... L -^RGHL7(991.1,IEN)
"RTN","RGEX01",115,0)
 K IEN,IEN2,RGDFN,EXCTYP,ICN
"RTN","RGEX01",116,0)
 Q
"RTN","RGEX01",117,0)
PDAT ;
"RTN","RGEX01",118,0)
 K DIRUT
"RTN","RGEX01",119,0)
 W !,"This report prints MPI/PD Data for a selected patient.  The"
"RTN","RGEX01",120,0)
 W !,"information displayed includes the Integration Control Number"
"RTN","RGEX01",121,0)
 W !,"(ICN), Coordinating Master of Record (CMOR), MPI/PD Activity"
"RTN","RGEX01",122,0)
 W !,"Score, Subscription Control Number, Treating Facility list,"
"RTN","RGEX01",123,0)
 W !,"CMOR History and CMOR Change Request History."
"RTN","RGEX01",124,0)
 W !!,"The information is pulled from the Patient (#2) file, Treating"
"RTN","RGEX01",125,0)
 W !,"Facility List (#391.91) file and MPIF CMOR Request (#984.9) file."
"RTN","RGEX01",126,0)
ASK ;Ask for PATIENT
"RTN","RGEX01",127,0)
 I $D(DIRUT) G QUIT
"RTN","RGEX01",128,0)
 W !!,"Patient lookup can be done by Patient Name/SSN or by ICN.",!
"RTN","RGEX01",129,0)
 N DFN,ICN
"RTN","RGEX01",130,0)
 S DIC="^DPT(",DIC(0)="QEAM",DIC("A")="Select PATIENT: ",D="SSN^AICN^B^BS^BS5"
"RTN","RGEX01",131,0)
 D MIX^DIC1 K DIC
"RTN","RGEX01",132,0)
 G:Y<0 QUIT
"RTN","RGEX01",133,0)
 S DFN=+Y
"RTN","RGEX01",134,0)
 D MAIN^VAFCPDAT
"RTN","RGEX01",135,0)
 G ASK
"RTN","RGEX01",136,0)
 Q
"RTN","RGEX01",137,0)
QUIT ;
"RTN","RGEX01",138,0)
 K DFN,ICN,D,Y,HOME
"RTN","RGEX03")
0^6^B68295667
"RTN","RGEX03",1,0)
RGEX03 ;BAY/ALS-LIST MANAGER FOR MPI/PD EXCEPTIONS ;10/13/99
"RTN","RGEX03",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**3,12,19,23,27,30,38,39,43**;30 Apr 99
"RTN","RGEX03",3,0)
 ;
"RTN","RGEX03",4,0)
 ;Reference to START^VAFCPDAT supported by IA #3299
"RTN","RGEX03",5,0)
 ;Reference to ^DIA(2 supported by IA #2097
"RTN","RGEX03",6,0)
 ;Reference to ^DPT( supported by IA #2969
"RTN","RGEX03",7,0)
 ;Reference to HINQ^DG10 supported by IA #2076
"RTN","RGEX03",8,0)
 ;Reference to CIRNEXC^MPIFQ0 supported by IA #2942
"RTN","RGEX03",9,0)
 ;Reference to VTQ^MPIFSAQ supported by IA #2941
"RTN","RGEX03",10,0)
 ;Reference to NOTICE^DGSEC4 and PTSEC^DGSEC4 supported by IA#3027
"RTN","RGEX03",11,0)
 ;Reference to POT^MPIFDUP supported by IA #4464
"RTN","RGEX03",12,0)
 ;
"RTN","RGEX03",13,0)
EN(DATA) ; -- main entry point for RG EXCPT ACTION
"RTN","RGEX03",14,0)
 D EN^VALM("RG EXCPT ACTION")
"RTN","RGEX03",15,0)
 Q
"RTN","RGEX03",16,0)
HDR ; -- header code
"RTN","RGEX03",17,0)
 S VALMHDR(1)="MPI/PD EXCEPTION HANDLING ACTIONS.",VALMHDR(2)=""
"RTN","RGEX03",18,0)
 Q
"RTN","RGEX03",19,0)
INIT ; -- init variables and list array
"RTN","RGEX03",20,0)
 K ^TMP("RGEXC2",$J)
"RTN","RGEX03",21,0)
 K @VALMAR
"RTN","RGEX03",22,0)
 I DATA="" Q
"RTN","RGEX03",23,0)
 S STR="",LIN=1,STATUS="",NAME="",DOB="",SSN=""
"RTN","RGEX03",24,0)
 S NAME=$P(DATA,"^",1),DOB=$P(DATA,"^",8),SSN=$P(DATA,"^",2)
"RTN","RGEX03",25,0)
 S STR=$$SETSTR^VALM1("Name:",STR,6,6),STR=$$SETSTR^VALM1(NAME,STR,14,30) D ADDTMP
"RTN","RGEX03",26,0)
 S STR=$$SETSTR^VALM1(" SSN:",STR,6,6),STR=$$SETSTR^VALM1(SSN,STR,14,12) D ADDTMP
"RTN","RGEX03",27,0)
 S STR=$$SETSTR^VALM1(" DOB:",STR,6,6),STR=$$SETSTR^VALM1(DOB,STR,14,20) D ADDTMP
"RTN","RGEX03",28,0)
 S STR=$$SETSTR^VALM1(" DFN:",STR,6,6),STR=$$SETSTR^VALM1($P(DATA,"^",5),STR,14,12) D ADDTMP
"RTN","RGEX03",29,0)
 S STR=$$SETSTR^VALM1(" ICN:",STR,6,6),ICN="" S ICN=$P(DATA,"^",6) I ICN<0 S ICN=""
"RTN","RGEX03",30,0)
 S STR=$$SETSTR^VALM1(ICN,STR,14,15) D ADDTMP
"RTN","RGEX03",31,0)
 S STR=$$SETSTR^VALM1("Date of Death:",STR,6,20),STR=$$SETSTR^VALM1($P(DATA,"^",13),STR,26,20) D ADDTMP
"RTN","RGEX03",32,0)
 S STR=$$SETSTR^VALM1("Exception Type:",STR,6,20),STR=$$SETSTR^VALM1($P(DATA,"^",4),STR,26,50) D ADDTMP
"RTN","RGEX03",33,0)
 S STR=$$SETSTR^VALM1("Exception Date:",STR,6,20),STR=$$SETSTR^VALM1($P(DATA,"^",3),STR,26,30) D ADDTMP
"RTN","RGEX03",34,0)
 S STATUS=$P(DATA,"^",9)
"RTN","RGEX03",35,0)
 I STATUS<1 S STATUS="NOT PROCESSED"
"RTN","RGEX03",36,0)
 E  S STATUS="PROCESSED"
"RTN","RGEX03",37,0)
 S STR=$$SETSTR^VALM1("Exception Status:",STR,6,20),STR=$$SETSTR^VALM1(STATUS,STR,26,15) D ADDTMP
"RTN","RGEX03",38,0)
 ;Added Exception Text to Exception Handler, patch 39
"RTN","RGEX03",39,0)
 N IEN,IEN2,X K ^UTILITY($J,"W") S IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11)
"RTN","RGEX03",40,0)
 I IEN'=""!(IEN2'="") D
"RTN","RGEX03",41,0)
 .S EXCTEXT=$P($G(^RGHL7(991.1,IEN,1,IEN2,10)),"^",1) Q:EXCTEXT=""
"RTN","RGEX03",42,0)
 .S STR=$$SETSTR^VALM1("Exception Text:",STR,6,20)
"RTN","RGEX03",43,0)
 .S X=EXCTEXT,DIWL=1,DIWR=50,DIWF="|" D ^DIWP
"RTN","RGEX03",44,0)
 .F N=1:1:$P($G(^UTILITY($J,"W",1)),1) D  Q:'N
"RTN","RGEX03",45,0)
 ..S STR=$$SETSTR^VALM1(^UTILITY($J,"W",1,(N),0),STR,26,76)
"RTN","RGEX03",46,0)
 ..D ADDTMP
"RTN","RGEX03",47,0)
ADDNOTE ;Display Exception Notes, Word Processing field
"RTN","RGEX03",48,0)
 S STR=$$SETSTR^VALM1("Exception Notes:",STR,6,20) D ADDTMP
"RTN","RGEX03",49,0)
 N IEN,IEN2,IENS,N,NOTE
"RTN","RGEX03",50,0)
 S IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11),IENS=IEN2_","_IEN_",",N=$$GET1^DIQ(991.12,IENS,11,"","NT")
"RTN","RGEX03",51,0)
 S L=0 F  S L=$O(NT(L)) Q:'L  S NOTE=NT(L),STR=$$SETSTR^VALM1(NOTE,STR,6,74) D ADDTMP
"RTN","RGEX03",52,0)
 S VALMCNT=LIN-1,DFN=$P(DATA,"^",5),VAFCDFN=DFN
"RTN","RGEX03",53,0)
 K L,NT
"RTN","RGEX03",54,0)
 Q
"RTN","RGEX03",55,0)
ADDTMP ;
"RTN","RGEX03",56,0)
 S ^TMP("RGEXC2",$J,LIN,0)=STR,^TMP("RGEXC2",$J,"IDX",LIN,LIN)="",LIN=LIN+1,STR=""
"RTN","RGEX03",57,0)
 Q
"RTN","RGEX03",58,0)
UPD ;
"RTN","RGEX03",59,0)
 W !,"This option updates the exception status to PROCESSED.",!,"After it is processed it will not be listed in the summary."
"RTN","RGEX03",60,0)
 S DIR("A")="Are you sure you want to change the status? ",DIR(0)="YA",DIR("B")="YES"
"RTN","RGEX03",61,0)
 D ^DIR Q:$D(DIRUT)  I Y>0 D
"RTN","RGEX03",62,0)
 .S IEN="",IEN2="",IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11) L +^RGHL7(991.1,IEN):10
"RTN","RGEX03",63,0)
 .S DA(1)=IEN,DA=IEN2,DR="6///"_1,DIE="^RGHL7(991.1,"_DA(1)_",1," D ^DIE K DIE,DA,DR
"RTN","RGEX03",64,0)
 .L -^RGHL7(991.1,IEN) S $P(DATA,"^",9)=1
"RTN","RGEX03",65,0)
 .D INIT
"RTN","RGEX03",66,0)
 K DIR,DIRUT S VALMBCK="R"
"RTN","RGEX03",67,0)
 Q
"RTN","RGEX03",68,0)
PA ;Patient Audit
"RTN","RGEX03",69,0)
 S PDFN=DFN
"RTN","RGEX03",70,0)
 I '$O(^DIA(2,"B",VAFCDFN,0)) S VALMSG="This patient has no audit data available.",VALMBCK="" G PAQ
"RTN","RGEX03",71,0)
 N IEN S DFN=VAFCDFN,QFLG=1 D FULL^VALM1 D:$T(ASK2^RGMTAUD)]"" ASK2^RGMTAUD S VALMBCK="R"
"RTN","RGEX03",72,0)
 S DFN=PDFN K QFLG,PDFN
"RTN","RGEX03",73,0)
PAQ Q
"RTN","RGEX03",74,0)
HI ;Hinq Inquiry
"RTN","RGEX03",75,0)
 S VALMBCK="" D HINQ^DG10 D PAUSE^VALM1 S VALMBCK="R"
"RTN","RGEX03",76,0)
 Q
"RTN","RGEX03",77,0)
DISP ; Display Only Query
"RTN","RGEX03",78,0)
 S VALMBCK="" D FULL^VALM1
"RTN","RGEX03",79,0)
 S MPIVAR("DFN")=DFN,MPIVAR("SSN")=SSN,MPIVAR("NM")=NAME,MPIVAR("DOB")=$P($P(DATA,"^",7),".",1)
"RTN","RGEX03",80,0)
 D VTQ^MPIFSAQ(.MPIVAR) D PAUSE^VALM1
"RTN","RGEX03",81,0)
 S VALMBCK="R" K MPIVAR
"RTN","RGEX03",82,0)
 Q
"RTN","RGEX03",83,0)
INTL ; Single Patient Initialization to MPI ; **43 THIS ENTRY POINT IS NO LONGER AVAILABLE
"RTN","RGEX03",84,0)
 Q
"RTN","RGEX03",85,0)
 S VALMBCK="",MPIFRES="",MPIFINT=""
"RTN","RGEX03",86,0)
 D FULL^VALM1 D CIRNEXC^MPIFQ0 D PAUSE^VALM1 K MPIFRES,MPIFINT
"RTN","RGEX03",87,0)
 S ICN=+$$GETICN^MPIF001(DFN),$P(DATA,"^",6)=$G(ICN),HOME=$$SITE^VASITE()
"RTN","RGEX03",88,0)
 ; If patient has a nation ICN, change status to processed
"RTN","RGEX03",89,0)
 I $E(ICN,1,3)'=$E($P(HOME,"^",3),1,3)&(ICN>0) D
"RTN","RGEX03",90,0)
 .S IEN="",IEN2="",IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11) L +^RGHL7(991.1,IEN):10
"RTN","RGEX03",91,0)
 .S DA(1)=IEN,DA=IEN2,DR="6///"_1,DIE="^RGHL7(991.1,"_DA(1)_",1," D ^DIE K DIE,DA,DR
"RTN","RGEX03",92,0)
 .L -^RGHL7(991.1,IEN) S $P(DATA,"^",9)=1
"RTN","RGEX03",93,0)
 D INIT S VALMBCK="R"
"RTN","RGEX03",94,0)
 Q
"RTN","RGEX03",95,0)
POT ;Potential Match on MPI, Query MPI, resolve duplicate if needed. **43 Added this entry point
"RTN","RGEX03",96,0)
 D POT^MPIFDUP
"RTN","RGEX03",97,0)
 D INIT S VALMBCK="R" K PROCESS
"RTN","RGEX03",98,0)
 Q
"RTN","RGEX03",99,0)
LOAD ; Edit Patient Data, if patient's eligibility is verified - check for DG ELIGIBILITY key for user
"RTN","RGEX03",100,0)
 S VALMBCK="",DATAOLD=""
"RTN","RGEX03",101,0)
 D FULL^VALM1 D ELIG^VADPT
"RTN","RGEX03",102,0)
 I $P(VAEL(8),"^",1)="V" D
"RTN","RGEX03",103,0)
 .I '$D(^XUSEC("DG ELIGIBILITY",DUZ)) D
"RTN","RGEX03",104,0)
 ..W !!,"Eligibility has been verified for this patient.",!!,"You do not have access to edit the Name, Date of ",!,"Birth or Social Security Number for this patient."
"RTN","RGEX03",105,0)
 ..D PAUSE^VALM1 S VALMBCK="R"
"RTN","RGEX03",106,0)
 .E  D SENS
"RTN","RGEX03",107,0)
 E  D SENS
"RTN","RGEX03",108,0)
 Q
"RTN","RGEX03",109,0)
SENS ; check for patient sensitivity and user security
"RTN","RGEX03",110,0)
 N RESULT,RGSEN
"RTN","RGEX03",111,0)
 D PTSEC^DGSEC4(.RESULT,DFN,0,"RG EXCEPTION HANDLING^MPI/PD Exception Handling")
"RTN","RGEX03",112,0)
 I RESULT(1)=-1 W !!,"Access denied: Required parameters not defined" D PAUSE^VALM1 S VALMBCK="R" Q
"RTN","RGEX03",113,0)
 I RESULT(1)>0 W !!?15,"***PATIENT MARKED SENSITIVE***"
"RTN","RGEX03",114,0)
 I RESULT(1)=3 W !!?15,"Access not allowed on your own PATIENT (#2) file entry" D PAUSE^VALM1 S VALMBCK="R" Q
"RTN","RGEX03",115,0)
 I RESULT(1)=4 W !!?15,"Access denied: Your SSN is not defined" D PAUSE^VALM1 S VALMBCK="R" Q
"RTN","RGEX03",116,0)
 I RESULT(1)<3 D
"RTN","RGEX03",117,0)
 .I RESULT(1)=1 D NOTICE^DGSEC4(.RGSEN,DFN,"RG EXCEPTION HANDLING^MPI/PD Exception Handling",2)
"RTN","RGEX03",118,0)
 .I RESULT(1)=2 D NOTICE^DGSEC4(.RGSEN,DFN,"RG EXCEPTION HANDLING^MPI/PD Exception Handling",3)
"RTN","RGEX03",119,0)
 D EDIT
"RTN","RGEX03",120,0)
 Q
"RTN","RGEX03",121,0)
EDIT ; edit patient data
"RTN","RGEX03",122,0)
 S ACCESS=0
"RTN","RGEX03",123,0)
 D REC
"RTN","RGEX03",124,0)
 Q:ACCESS=0
"RTN","RGEX03",125,0)
 S DIE="^DPT(",DA=DFN,DR=".01///^S X=$$NCEDIT^DPTNAME(DA);.03//^S X=DOB;.09//^S X=SSN"
"RTN","RGEX03",126,0)
 L +^DPT(DFN):10 D ^DIE K DIE,DA,DR L -^DPT(DFN)
"RTN","RGEX03",127,0)
 S DATAOLD=DATA
"RTN","RGEX03",128,0)
 D DEATH
"RTN","RGEX03",129,0)
 D DEM^VADPT
"RTN","RGEX03",130,0)
 S DATA=VADM(1)_"^"_$P($G(VADM(2)),"^",1)_"^"_$P(DATAOLD,"^",3)_"^"_$P(DATAOLD,"^",4)_"^"_DFN_"^"_$P(DATAOLD,"^",6)_"^"
"RTN","RGEX03",131,0)
 S DATA=DATA_$G(VADM(3))_"^"_$P(DATAOLD,"^",9)_"^"_$P(DATAOLD,"^",10)_"^"_$P(DATAOLD,"^",11)_"^"_$P(DATAOLD,"^",12)_"^"_$P($G(VADM(6)),"^",2)
"RTN","RGEX03",132,0)
 D INIT
"RTN","RGEX03",133,0)
 S VALMBCK="R"
"RTN","RGEX03",134,0)
 K DGNEW,DATAOLD,VAEL,ACCESS,DGNPSSN
"RTN","RGEX03",135,0)
QUIT Q
"RTN","RGEX03",136,0)
REC ; Check if user is attempting to access own record
"RTN","RGEX03",137,0)
 ; check for security key
"RTN","RGEX03",138,0)
 I $D(^XUSEC("DG RECORD ACCESS",+DUZ)) S ACCESS=1 Q
"RTN","RGEX03",139,0)
 S DGNPSSN=$$GET1^DIQ(200,+DUZ_",",9,"I","","DGNPERR")
"RTN","RGEX03",140,0)
 I 'DGNPSSN D  Q
"RTN","RGEX03",141,0)
 .W !!,"Your SSN is missing from the NEW PERSON file.",!,"Contact your ADP Coordinator."
"RTN","RGEX03",142,0)
 .D PAUSE^VALM1 S VALMBCK="R"
"RTN","RGEX03",143,0)
 I DGNPSSN=SSN D  Q
"RTN","RGEX03",144,0)
 .W !!,"Security regulations prohibit computer access to your",!,"own medical record."
"RTN","RGEX03",145,0)
 .D PAUSE^VALM1 S VALMBCK="R"
"RTN","RGEX03",146,0)
 E  S ACCESS=1
"RTN","RGEX03",147,0)
 Q
"RTN","RGEX03",148,0)
DEATH ; Check for access to edit date of death
"RTN","RGEX03",149,0)
 I $D(^XUSEC("DG DETAIL",+DUZ)) D
"RTN","RGEX03",150,0)
 .K VADM,DIE,DA,DR
"RTN","RGEX03",151,0)
 .S DOD=""
"RTN","RGEX03",152,0)
 .D DEM^VADPT
"RTN","RGEX03",153,0)
 .S DOD=$P($G(VADM(6)),"^",2)
"RTN","RGEX03",154,0)
 .S DIE="^DPT(",DA=DFN,DR=".351//^S X=DOD"
"RTN","RGEX03",155,0)
 .L +^DPT(DFN):10
"RTN","RGEX03",156,0)
 .D ^DIE
"RTN","RGEX03",157,0)
 .L -^DPT(DFN)
"RTN","RGEX03",158,0)
 E  W !!,"You do not have the proper security to edit date of death." D PAUSE^VALM1 D INIT S VALMBCK="R"
"RTN","RGEX03",159,0)
 K VADM,DIE,DA,DR,DOD
"RTN","RGEX03",160,0)
 Q
"RTN","RGEX03",161,0)
INQ ; Patient Inquiry
"RTN","RGEX03",162,0)
 S VALMBCK=""
"RTN","RGEX03",163,0)
 D FULL^VALM1 D EN^DGRPD D PAUSE^VALM1 D CLEAN^VALM10 D INIT
"RTN","RGEX03",164,0)
 S VALMBCK="R"
"RTN","RGEX03",165,0)
 Q
"RTN","RGEX03",166,0)
EDTNOT ; Edit Exception Notes
"RTN","RGEX03",167,0)
 S IEN=$P(DATA,"^",10),IEN2=$P(DATA,"^",11)
"RTN","RGEX03",168,0)
 L +^RGHL7(991.1,IEN):10 S DIE="^RGHL7(991.1,"_IEN_",1,",DA(1)=IEN,DA=IEN2,DR="11" D ^DIE L -^RGHL7(991.1,IEN)
"RTN","RGEX03",169,0)
 K DIE,DA,DR,IEN,IEN2
"RTN","RGEX03",170,0)
 D INIT
"RTN","RGEX03",171,0)
 S VALMBCK="R"
"RTN","RGEX03",172,0)
 Q
"RTN","RGEX03",173,0)
PDAT S VALMBCK="",PICN="",PSSN=""
"RTN","RGEX03",174,0)
 I $D(SSN) S PSSN=SSN
"RTN","RGEX03",175,0)
 S ARRAY="^TMP(""RGXHFS"","_$J_")",TYPE="I",REP=1,RGXDIR=$$GET^XPAR("SYS","RGX HFS SCRATCH"),RGXFILE="RGX"_DUZ_".DAT"
"RTN","RGEX03",176,0)
 S IOM=132,IOSL=99999,IOST="P-DUMMY",IOF=""""""
"RTN","RGEX03",177,0)
 D OPEN^%ZISH("RGX",RGXDIR,RGXFILE,"W") Q:POP
"RTN","RGEX03",178,0)
 U IO
"RTN","RGEX03",179,0)
 I ICN'="" S PICN=ICN D START^VAFCPDAT
"RTN","RGEX03",180,0)
 N RGXDEL
"RTN","RGEX03",181,0)
 D CLOSE^%ZISH("RGX")
"RTN","RGEX03",182,0)
 K ^TMP("RGPDAT",$J)
"RTN","RGEX03",183,0)
 S RGXDEL(RGXFILE)="",X=$$FTG^%ZISH(RGXDIR,RGXFILE,$NAME(^TMP("RGPDAT",$J,1)),3),X=$$DEL^%ZISH(RGXDIR,$NA(RGXDEL))
"RTN","RGEX03",184,0)
 I $D(^TMP("RGPDAT",$J)) D EN^RGEX04
"RTN","RGEX03",185,0)
 S ICN=PICN,SSN=PSSN
"RTN","RGEX03",186,0)
 D INIT
"RTN","RGEX03",187,0)
 S VALMBCK="R" K PICN,PSSN,ARRAY,REP,RGXDIR,RGXFILE,TYPE
"RTN","RGEX03",188,0)
 Q
"RTN","RGEX03",189,0)
GETEX(RETURN,DFN) ; Get array of pending exceptions for a patient
"RTN","RGEX03",190,0)
 K RETURN
"RTN","RGEX03",191,0)
 S CNT=0,RETURN(0)="0^No Pending Exceptions",TYP=""
"RTN","RGEX03",192,0)
 I 'DFN S RETURN(0)="-1^DFN not passed" G QGET
"RTN","RGEX03",193,0)
 F  S TYP=$O(^RGHL7(991.1,"ADFN",TYP)) Q:'TYP  D
"RTN","RGEX03",194,0)
 .I $D(^RGHL7(991.1,"ADFN",TYP,DFN)) D
"RTN","RGEX03",195,0)
 ..S IEN="" F  S IEN=$O(^RGHL7(991.1,"ADFN",TYP,DFN,IEN)) Q:'IEN  D
"RTN","RGEX03",196,0)
 ...S IEN2="",ETYP="" F  S IEN2=$O(^RGHL7(991.1,"ADFN",TYP,DFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEX03",197,0)
 ....I $P(^RGHL7(991.1,IEN,1,IEN2,0),"^",5)<1 D
"RTN","RGEX03",198,0)
 .....S CNT=CNT+1,ETYP=$P(^RGHL7(991.11,TYP,10),"^",1)
"RTN","RGEX03",199,0)
 .....S RETURN(CNT)=ETYP_"^"_IEN_"^"_IEN2
"RTN","RGEX03",200,0)
 I CNT>0 S RETURN(0)=CNT_"^Pending Exception(s)"
"RTN","RGEX03",201,0)
QGET ;
"RTN","RGEX03",202,0)
 K TYP,ETYP,IEN,IEN2,CNT
"RTN","RGEX03",203,0)
 Q
"RTN","RGEX03",204,0)
HELP ; -- help code
"RTN","RGEX03",205,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RGEX03",206,0)
 Q
"RTN","RGEX03",207,0)
EXIT ; -- exit code
"RTN","RGEX03",208,0)
 S VALMBCK="" K ^TMP("RGEXC2",$J),DFN,DIR,EXCTEXT,IEN,IEN2,NAME,DOB,SSN,LIN,STATUS,STR,VAFCDFN,X,Y
"RTN","RGEX03",209,0)
 S VALMBCK="R",RGBG=1
"RTN","RGEX03",210,0)
 Q
"RTN","RGEX03",211,0)
EXPND ; -- expand code
"RTN","RGEX03",212,0)
 Q
"RTN","RGEXHND1")
0^4^B33320954
"RTN","RGEXHND1",1,0)
RGEXHND1 ;BAY/ALS-MPI/PD EXCEPTION HANDLING UTILITY ;10/08/99
"RTN","RGEXHND1",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**3,12,19,23,43**;30 Apr 99
"RTN","RGEXHND1",3,0)
DTLIST ;List exceptions by date
"RTN","RGEXHND1",4,0)
 K ^TMP("RGEXC",$J)
"RTN","RGEXHND1",5,0)
 S EXCDT="",EXCTYP="",CNT=0
"RTN","RGEXHND1",6,0)
 I '$D(RGBG) S VALMBG=1
"RTN","RGEXHND1",7,0)
 F  S EXCDT=$O(^RGHL7(991.1,"AD",EXCDT)) Q:'EXCDT  D
"RTN","RGEXHND1",8,0)
 . S IEN=0
"RTN","RGEXHND1",9,0)
 . F  S IEN=$O(^RGHL7(991.1,"AD",EXCDT,IEN)) Q:'IEN  D
"RTN","RGEXHND1",10,0)
 .. S NUM="" S NUM=$P($G(^RGHL7(991.1,IEN,1,0)),"^",4) Q:NUM<1  D
"RTN","RGEXHND1",11,0)
 ... S IEN2=0
"RTN","RGEXHND1",12,0)
 ... F  S IEN2=$O(^RGHL7(991.1,IEN,1,IEN2)) Q:'IEN2  D
"RTN","RGEXHND1",13,0)
 .... S EXCTYP=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",3)
"RTN","RGEXHND1",14,0)
 .... I EXCTYP=(209)!((EXCTYP>212)&(EXCTYP<219)) D ADDREC
"RTN","RGEXHND1",15,0)
 K I,NUM,EXCDT,EXCTYP,RGBG
"RTN","RGEXHND1",16,0)
 IF CNT<1 D NDATA
"RTN","RGEXHND1",17,0)
 Q
"RTN","RGEXHND1",18,0)
NDATA ; There is no data matching the criteria
"RTN","RGEXHND1",19,0)
 S CNT=CNT+1,STRING=""
"RTN","RGEXHND1",20,0)
 S STRING=$$SETSTR^VALM1("There were no exceptions found.",STRING,5,35)
"RTN","RGEXHND1",21,0)
 S ^TMP("RGEXC",$J,CNT,0)=STRING
"RTN","RGEXHND1",22,0)
 S ^TMP("RGEXC",$J,"IDX",CNT,CNT)=""
"RTN","RGEXHND1",23,0)
 S VALMCNT=CNT
"RTN","RGEXHND1",24,0)
 Q
"RTN","RGEXHND1",25,0)
EXCLST ;List exceptions by type
"RTN","RGEXHND1",26,0)
 K ^TMP("RGEXC",$J)
"RTN","RGEXHND1",27,0)
 S CNT=0,EXCDT="",EXCTYP=""
"RTN","RGEXHND1",28,0)
 I '$D(RGBG) S VALMBG=1
"RTN","RGEXHND1",29,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"AC",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEXHND1",30,0)
 . I ((EXCTYP>214)&(EXCTYP<219)) D
"RTN","RGEXHND1",31,0)
 .. S IEN=0
"RTN","RGEXHND1",32,0)
 .. F  S IEN=$O(^RGHL7(991.1,"AC",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGEXHND1",33,0)
 ... S NUM="" S NUM=$P($G(^RGHL7(991.1,IEN,1,0)),"^",4) Q:NUM<1  D
"RTN","RGEXHND1",34,0)
 .... S IEN2=0
"RTN","RGEXHND1",35,0)
 .... F  S IEN2=$O(^RGHL7(991.1,"AC",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEXHND1",36,0)
 ..... S EXCDT=$P($G(^RGHL7(991.1,IEN,0)),"^",3) Q:'EXCDT
"RTN","RGEXHND1",37,0)
 ..... D ADDREC
"RTN","RGEXHND1",38,0)
 IF CNT<1 D NDATA
"RTN","RGEXHND1",39,0)
 K RGBG
"RTN","RGEXHND1",40,0)
 Q
"RTN","RGEXHND1",41,0)
PATLST ;List exceptions by patient
"RTN","RGEXHND1",42,0)
 K ^TMP("RGEXC",$J),^TMP("RGEX01",$J)
"RTN","RGEXHND1",43,0)
 S CNT=0,EXCDT="",EXCTYP="",NDX=0,NAME=""
"RTN","RGEXHND1",44,0)
 I '$D(RGBG) S VALMBG=1
"RTN","RGEXHND1",45,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ADFN",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEXHND1",46,0)
 . I ((EXCTYP>214)&(EXCTYP<219)) D
"RTN","RGEXHND1",47,0)
 .. S DFN=""
"RTN","RGEXHND1",48,0)
 .. F  S DFN=$O(^RGHL7(991.1,"ADFN",EXCTYP,DFN)) Q:'DFN  D
"RTN","RGEXHND1",49,0)
 ... S IEN=0
"RTN","RGEXHND1",50,0)
 ... F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCTYP,DFN,IEN)) Q:'IEN  D
"RTN","RGEXHND1",51,0)
 .... S IEN2=0
"RTN","RGEXHND1",52,0)
 .... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCTYP,DFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEXHND1",53,0)
 ..... S EXCDT=$P($G(^RGHL7(991.1,IEN,0)),"^",3) Q:'EXCDT
"RTN","RGEXHND1",54,0)
 ..... D DEM^VADPT S NAME=VADM(1) Q:NAME=""
"RTN","RGEXHND1",55,0)
 ..... S NDX=NDX+1
"RTN","RGEXHND1",56,0)
 ..... S ^TMP("RGEX01",$J,NAME,NDX)=$G(VADM(1))_"^"_IEN_"^"_IEN2_"^"_EXCTYP_"^"_EXCDT
"RTN","RGEXHND1",57,0)
 D PATTMP
"RTN","RGEXHND1",58,0)
 IF CNT<1 D NDATA
"RTN","RGEXHND1",59,0)
 K DFN,RGBG
"RTN","RGEXHND1",60,0)
 Q
"RTN","RGEXHND1",61,0)
PATTMP ;
"RTN","RGEXHND1",62,0)
 S NM=""
"RTN","RGEXHND1",63,0)
 F  S NM=$O(^TMP("RGEX01",$J,NM)) Q:NM=""  D
"RTN","RGEXHND1",64,0)
 . S NDX=0
"RTN","RGEXHND1",65,0)
 . F  S NDX=$O(^TMP("RGEX01",$J,NM,NDX)) Q:'NDX  D
"RTN","RGEXHND1",66,0)
 .. S IEN=$P(^TMP("RGEX01",$J,NM,NDX),"^",2)
"RTN","RGEXHND1",67,0)
 .. S IEN2=$P(^TMP("RGEX01",$J,NM,NDX),"^",3)
"RTN","RGEXHND1",68,0)
 .. S EXCTYP=$P(^TMP("RGEX01",$J,NM,NDX),"^",4)
"RTN","RGEXHND1",69,0)
 .. S EXCDT=$P(^TMP("RGEX01",$J,NM,NDX),"^",5)
"RTN","RGEXHND1",70,0)
 .. D ADDREC
"RTN","RGEXHND1",71,0)
 K NDX,NM,NAME
"RTN","RGEXHND1",72,0)
 Q
"RTN","RGEXHND1",73,0)
SELTYP ; List all exceptions of type selected by user
"RTN","RGEXHND1",74,0)
 S EXCTYPE="",FLAG=0,ETYPE=""
"RTN","RGEXHND1",75,0)
 I '$D(RGBG) S VALMBG=1
"RTN","RGEXHND1",76,0)
 K DIR,Y,DIC
"RTN","RGEXHND1",77,0)
 S DIR("A")="Enter an exception type to view: "
"RTN","RGEXHND1",78,0)
 S DIR(0)="SAM^215:Death Entry on MPI not VISTA;216:Death Entry on Vista not MPI;217:Death Entries on MPI and Vista DON'T MATCH;218:Potential Matches Returned" ;**43
"RTN","RGEXHND1",79,0)
 S DIR("?")="^D HLPSEL^RGEXHND1"
"RTN","RGEXHND1",80,0)
 D ^DIR
"RTN","RGEXHND1",81,0)
 I Y<1 S RGSORT="SD" D SORT^RGEX01  Q
"RTN","RGEXHND1",82,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","RGEXHND1",83,0)
 S EXCTYPE=+Y,ETYPE=$P(^RGHL7(991.11,EXCTYPE,10),"^",1)
"RTN","RGEXHND1",84,0)
 I ((EXCTYPE>214)&(EXCTYPE<219)) S FLAG=1 ;**43
"RTN","RGEXHND1",85,0)
 I FLAG=1 D ADDSEL
"RTN","RGEXHND1",86,0)
 E  I FLAG=0 D
"RTN","RGEXHND1",87,0)
 . W !,"Not a valid selection."
"RTN","RGEXHND1",88,0)
 . D SELTYP
"RTN","RGEXHND1",89,0)
 K FLAG,Y,DIR,DIC,DTOUT,DUOUT,RGBG
"RTN","RGEXHND1",90,0)
 Q
"RTN","RGEXHND1",91,0)
ADDSEL ;called by SELTYP
"RTN","RGEXHND1",92,0)
 K ^TMP("RGEXC",$J)
"RTN","RGEXHND1",93,0)
 S CNT=0,EXCDT="",EXCTYP=""
"RTN","RGEXHND1",94,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"AC",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEXHND1",95,0)
 . I EXCTYP=EXCTYPE D
"RTN","RGEXHND1",96,0)
 .. S IEN=0
"RTN","RGEXHND1",97,0)
 .. F  S IEN=$O(^RGHL7(991.1,"AC",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGEXHND1",98,0)
 ... S IEN2=0
"RTN","RGEXHND1",99,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"AC",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEXHND1",100,0)
 .... S EXCDT=$P($G(^RGHL7(991.1,IEN,0)),"^",3) Q:'EXCDT  ;**43
"RTN","RGEXHND1",101,0)
 .... D ADDREC
"RTN","RGEXHND1",102,0)
 I CNT<1 D
"RTN","RGEXHND1",103,0)
 . W !,"There are no "_ETYPE
"RTN","RGEXHND1",104,0)
 . W !,"exceptions that need processing."
"RTN","RGEXHND1",105,0)
 . D SELTYP
"RTN","RGEXHND1",106,0)
 Q
"RTN","RGEXHND1",107,0)
HLPSEL ;
"RTN","RGEXHND1",108,0)
 D FULL^VALM1
"RTN","RGEXHND1",109,0)
 ;W !,"The following exception types are handled by this option:"
"RTN","RGEXHND1",110,0)
 ;W !!,"Death Entry on MPI not in VISTA",?50,"(215)"
"RTN","RGEXHND1",111,0)
 ;W !,"Death Entry on Vista not in MPI",?50,"(216)"
"RTN","RGEXHND1",112,0)
 ;W !,"Death Entries on MPI and Vista DO NOT MATCH",?50,"(217)"
"RTN","RGEXHND1",113,0)
 ;W !,"Potential Matches Returned",?50,"(218)"
"RTN","RGEXHND1",114,0)
 S VALMBCK="R"
"RTN","RGEXHND1",115,0)
 Q
"RTN","RGEXHND1",116,0)
ADDREC ;
"RTN","RGEXHND1",117,0)
 S ETEXT="",RGDFN="",ICN="",RGNM="",STAT="",DOD=""
"RTN","RGEXHND1",118,0)
 S ETEXT=$P($G(^RGHL7(991.11,EXCTYP,10)),"^",1)
"RTN","RGEXHND1",119,0)
 S RGDFN=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",4) Q:'RGDFN
"RTN","RGEXHND1",120,0)
 S STAT=$P($G(^RGHL7(991.1,IEN,1,IEN2,0)),"^",5)
"RTN","RGEXHND1",121,0)
 S ICN=+$$GETICN^MPIF001(RGDFN)
"RTN","RGEXHND1",122,0)
 S HOME=$$SITE^VASITE()
"RTN","RGEXHND1",123,0)
 I (STAT<1)!(STAT="") D
"RTN","RGEXHND1",124,0)
 .;Only list exceptions that are Not Processed
"RTN","RGEXHND1",125,0)
 .; only list patients with local ICN, or for exceptions 215 - 218
"RTN","RGEXHND1",126,0)
 . I $E(ICN,1,3)=$E($P(HOME,"^",3),1,3)!(ICN<0)!((EXCTYP<219)&(EXCTYP>214)) D  ;**43
"RTN","RGEXHND1",127,0)
 .. S DFN=RGDFN D DEM^VADPT
"RTN","RGEXHND1",128,0)
 .. S RGNM=VADM(1)
"RTN","RGEXHND1",129,0)
 .. S RGSSN=$P($G(VADM(2)),"^",1)
"RTN","RGEXHND1",130,0)
 .. S DOB=$G(VADM(3)) I DOB="" S DOB="^"
"RTN","RGEXHND1",131,0)
 .. S DOD=$P($P($G(VADM(6)),"^",2),"@",1)
"RTN","RGEXHND1",132,0)
 .. S EXDATE=$P($$FMTE^XLFDT(EXCDT,2),"@",1)
"RTN","RGEXHND1",133,0)
 .. S CNT=CNT+1
"RTN","RGEXHND1",134,0)
 .. S STRING=""
"RTN","RGEXHND1",135,0)
 .. I ICN<0 S ICN=""
"RTN","RGEXHND1",136,0)
 .. S STRING=$$SETSTR^VALM1(CNT,STRING,1,4)
"RTN","RGEXHND1",137,0)
 .. S STRING=$$SETSTR^VALM1($E(RGNM,1,22),STRING,6,21)
"RTN","RGEXHND1",138,0)
 .. S STRING=$$SETSTR^VALM1(RGSSN,STRING,28,10)
"RTN","RGEXHND1",139,0)
 .. S STRING=$$SETSTR^VALM1(EXDATE,STRING,39,8)
"RTN","RGEXHND1",140,0)
 .. S STRING=$$SETSTR^VALM1(ETEXT,STRING,49,32)
"RTN","RGEXHND1",141,0)
 .. S ^TMP("RGEXC",$J,CNT,0)=STRING
"RTN","RGEXHND1",142,0)
 .. S ^TMP("RGEXC",$J,"IDX",CNT,CNT)=""
"RTN","RGEXHND1",143,0)
 .. S ^TMP("RGEXC",$J,CNT,"DATA")=RGNM_"^"_RGSSN_"^"_$P($$FMTE^XLFDT(EXCDT),"@",1)_"^"_ETEXT_"^"_DFN_"^"_ICN_"^"_DOB_"^"_STAT_"^"_IEN_"^"_IEN2_"^"_CNT_"^"_DOD
"RTN","RGEXHND1",144,0)
 S VALMCNT=CNT
"RTN","RGEXHND1",145,0)
 K RGDFN,RGNM,RGSSN,EXDATE,ETEXT,ICN,DOB,STAT,VADM,HOME,STRING,DOD
"RTN","RGEXHND1",146,0)
 Q
"RTN","RGEXHND1",147,0)
SELECT ;
"RTN","RGEXHND1",148,0)
 I $G(STRING)["no exceptions found" D SORT^RGEX01  Q
"RTN","RGEXHND1",149,0)
 N VALMY
"RTN","RGEXHND1",150,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","RGEXHND1",151,0)
 I '$D(VALMY) Q
"RTN","RGEXHND1",152,0)
 S VALMCNT=CNT
"RTN","RGEXHND1",153,0)
 S DATA="",CNT=""
"RTN","RGEXHND1",154,0)
 S CNT=$O(VALMY(0))
"RTN","RGEXHND1",155,0)
 S DATA=$G(^TMP("RGEXC",$J,CNT,"DATA"))
"RTN","RGEXHND1",156,0)
 I '$D(DATA) S CNT=0 Q
"RTN","RGEXHND1",157,0)
 D CLEAN^VALM10
"RTN","RGEXHND1",158,0)
 D EN^RGEX03(DATA)
"RTN","RGEXHND1",159,0)
 I RGSORT="VT" D
"RTN","RGEXHND1",160,0)
 . K @VALMAR
"RTN","RGEXHND1",161,0)
 . D ADDSEL
"RTN","RGEXHND1",162,0)
 E  I RGSORT'="VT" D SORT^RGEX01
"RTN","RGEXHND1",163,0)
 ;
"RTN","RGEXHND1",164,0)
 Q
"RTN","RGEXHND1",165,0)
QUIT ;
"RTN","RGMTETOT")
0^7^B39858170
"RTN","RGMTETOT",1,0)
RGMTETOT ;BIR/CML-Compile Totals for Site Exceptions ;11/15/01
"RTN","RGMTETOT",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**20,30,43**;30 Apr 99
"RTN","RGMTETOT",3,0)
 ;
"RTN","RGMTETOT",4,0)
 ;Reference to ^DPT("AICNL" supported by IA #2070
"RTN","RGMTETOT",5,0)
 ;
"RTN","RGMTETOT",6,0)
 ;Variable RGHLMQ cannot be killed in this routine, it is needed for the remote query
"RTN","RGMTETOT",7,0)
 ;
"RTN","RGMTETOT",8,0)
 ;Use this routine to compile totals of a site's exceptions in file #991.1
"RTN","RGMTETOT",9,0)
 S DUMP=0 G START
"RTN","RGMTETOT",10,0)
 ;
"RTN","RGMTETOT",11,0)
DUMP1 ;Use this call to dump all data in ascii format for table
"RTN","RGMTETOT",12,0)
 S DUMP=1 G START
"RTN","RGMTETOT",13,0)
 ;
"RTN","RGMTETOT",14,0)
DUMP2 ;Use this call to dump data in ascii format for table - just for exceptions sites have to deal with
"RTN","RGMTETOT",15,0)
 S DUMP=2
"RTN","RGMTETOT",16,0)
 ;
"RTN","RGMTETOT",17,0)
START ;
"RTN","RGMTETOT",18,0)
 ;do purge of any dups for POTENTIAL MATCH Exceptions
"RTN","RGMTETOT",19,0)
 K TYPEARR,^XTMP("RGMT","HLMQETOT")
"RTN","RGMTETOT",20,0)
 S ^XTMP("RGMT",0)=$$FMADD^XLFDT(DT,30)_"^"_$$NOW^XLFDT_"^MPI/PD Maintenance Data"
"RTN","RGMTETOT",21,0)
 D PURGE
"RTN","RGMTETOT",22,0)
 ;create type array from file 991.11
"RTN","RGMTETOT",23,0)
 S TYPE=199 F  S TYPE=$O(^RGHL7(991.11,TYPE)) Q:'TYPE  I TYPE'=218 S TYPEARR(TYPE)=0
"RTN","RGMTETOT",24,0)
 ;
"RTN","RGMTETOT",25,0)
 ;start loop
"RTN","RGMTETOT",26,0)
 S TYPE=199 F  S TYPE=$O(^RGHL7(991.1,"AC",TYPE)) Q:'TYPE  D
"RTN","RGMTETOT",27,0)
 .Q:TYPE=218
"RTN","RGMTETOT",28,0)
 .S IEN1=0 F  S IEN1=$O(^RGHL7(991.1,"AC",TYPE,IEN1)) Q:'IEN1  D
"RTN","RGMTETOT",29,0)
 ..S IEN2=0 F  S IEN2=$O(^RGHL7(991.1,"AC",TYPE,IEN1,IEN2)) Q:'IEN2  D
"RTN","RGMTETOT",30,0)
 ...I '$D(^RGHL7(991.1,IEN1,1,IEN2,0)) Q
"RTN","RGMTETOT",31,0)
 ...S STAT=$P(^RGHL7(991.1,IEN1,1,IEN2,0),"^",5) I STAT<1 S TYPEARR(TYPE)=TYPEARR(TYPE)+1
"RTN","RGMTETOT",32,0)
 ;
"RTN","RGMTETOT",33,0)
PRT ;
"RTN","RGMTETOT",34,0)
 S GRAND=0
"RTN","RGMTETOT",35,0)
 S SITENM=$P($$SITE^VASITE(),"^",2),$P(LN,"-",81)=""
"RTN","RGMTETOT",36,0)
 D NOW^%DTC S RUNDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","RGMTETOT",37,0)
 ;
"RTN","RGMTETOT",38,0)
PRT0 I 'DUMP D
"RTN","RGMTETOT",39,0)
 .W !!,"Exception Totals for ",SITENM
"RTN","RGMTETOT",40,0)
 .W !,"Printed ",RUNDT,!,LN
"RTN","RGMTETOT",41,0)
 .S TYPE=0 F  S TYPE=$O(TYPEARR(TYPE)) Q:'TYPE  I +TYPEARR(TYPE) D
"RTN","RGMTETOT",42,0)
 ..S GRAND=GRAND+TYPEARR(TYPE)
"RTN","RGMTETOT",43,0)
 ..W !!,"TYPE: ",TYPE,?12,$P($T(@TYPE),";;",2),?67,"TOTAL = ",$J(TYPEARR(TYPE),4)
"RTN","RGMTETOT",44,0)
 ..W !,"DESCRIPTION:"
"RTN","RGMTETOT",45,0)
 ..S TXT=0 F  S TXT=$O(^RGHL7(991.11,TYPE,99,TXT)) Q:'TXT  W !,^RGHL7(991.11,TYPE,99,TXT,0)
"RTN","RGMTETOT",46,0)
 .W !!?56,"TOTAL EXCEPTIONS: ",$J(GRAND,5)
"RTN","RGMTETOT",47,0)
 ;
"RTN","RGMTETOT",48,0)
PRT1 I DUMP=1 D
"RTN","RGMTETOT",49,0)
 .W !!,"At this point it is necessary for you to increase the right margin."
"RTN","RGMTETOT",50,0)
 .W !,"At the DEVICE prompt enter=> ;255"
"RTN","RGMTETOT",51,0)
 .W ! D ^%ZIS I POP W !,"DOWNLOAD ABORTED!" Q
"RTN","RGMTETOT",52,0)
 .W !!,"Data string=Site;Run Date;Date CIRN Installed;Exceptions 200-229"
"RTN","RGMTETOT",53,0)
 .S STR=SITENM_";"_RUNDT_";"
"RTN","RGMTETOT",54,0)
 .S TYPE=0 F  S TYPE=$O(TYPEARR(TYPE)) Q:'TYPE  D
"RTN","RGMTETOT",55,0)
 ..S STR=STR_";"_TYPEARR(TYPE)
"RTN","RGMTETOT",56,0)
 .W !!,STR
"RTN","RGMTETOT",57,0)
 ;
"RTN","RGMTETOT",58,0)
PRT2 I DUMP=2 D
"RTN","RGMTETOT",59,0)
 .S ICN=0,LOCCNT=0 F  S ICN=$O(^DPT("AICNL",1,ICN)) Q:'ICN  S LOCCNT=LOCCNT+1
"RTN","RGMTETOT",60,0)
 .S SITEIEN=+$$SITE^VASITE(),STANUM=$P($$SITE^VASITE(),"^",3)
"RTN","RGMTETOT",61,0)
 .I '$D(RGHLMQ) W !!,"Data string:"
"RTN","RGMTETOT",62,0)
 .I '$D(RGHLMQ) W !,"Site;Sta#;;;LocICNs,209,213,214,215,216,217,218,219,223,225,226,227,229"
"RTN","RGMTETOT",63,0)
 .S STR=SITENM_";"_STANUM_";;;"_LOCCNT
"RTN","RGMTETOT",64,0)
 .F TYPE=209,213,214,215,216,217,218,219,226,227,229,233 S STR=STR_";"_TYPEARR(TYPE)
"RTN","RGMTETOT",65,0)
 .I '$D(RGHLMQ) W !!,STR
"RTN","RGMTETOT",66,0)
 .I $D(RGHLMQ) S ^XTMP("RGMT","HLMQETOT",STANUM,1)=STR
"RTN","RGMTETOT",67,0)
 ;
"RTN","RGMTETOT",68,0)
QUIT ;
"RTN","RGMTETOT",69,0)
 K %,CIRNIEN,CNT,DA,DIK,DUMP,DUPCNT,EXCDT,GRAND,ICN,IEN,IEN1,IEN2,LN,LOCCNT,OLDDT,OLDNODE,PTNM
"RTN","RGMTETOT",70,0)
 K RGDFN,RUNDT,SITEIEN,SITENM,STANUM,STAT,STR,TXT,TYPE,XCNT,HOME,DFN,RCNT,VADM
"RTN","RGMTETOT",71,0)
 K ^XTMP("RGMT","ETOT")
"RTN","RGMTETOT",72,0)
 Q
"RTN","RGMTETOT",73,0)
 ;
"RTN","RGMTETOT",74,0)
PURGE ;
"RTN","RGMTETOT",75,0)
 I '$D(RGHLMQ) W !!,"...purging duplicate Potential Match Exceptions",!
"RTN","RGMTETOT",76,0)
 K ^XTMP("RGMT","ETOT")
"RTN","RGMTETOT",77,0)
 S (RGDFN,CNT,XCNT,DUPCNT)=0,HOME=$$SITE^VASITE()
"RTN","RGMTETOT",78,0)
 F  S RGDFN=$O(^RGHL7(991.1,"ADFN",218,RGDFN)) Q:'RGDFN  D
"RTN","RGMTETOT",79,0)
 .S IEN=0
"RTN","RGMTETOT",80,0)
 .F  S IEN=$O(^RGHL7(991.1,"ADFN",218,RGDFN,IEN)) Q:'IEN  D
"RTN","RGMTETOT",81,0)
 ..S IEN2=0
"RTN","RGMTETOT",82,0)
 ..F  S IEN2=$O(^RGHL7(991.1,"ADFN",218,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGMTETOT",83,0)
 ...I '$D(^RGHL7(991.1,IEN,0)) Q
"RTN","RGMTETOT",84,0)
 ...S CNT=CNT+1
"RTN","RGMTETOT",85,0)
 ...S EXCDT=$P(^RGHL7(991.1,IEN,0),"^",3)
"RTN","RGMTETOT",86,0)
 ...I '$D(^XTMP("RGMT","ETOT",RGDFN)) D  Q
"RTN","RGMTETOT",87,0)
 ....S XCNT=XCNT+1
"RTN","RGMTETOT",88,0)
 ....D SETTMP
"RTN","RGMTETOT",89,0)
 ...I $D(^XTMP("RGMT","ETOT",RGDFN))  D
"RTN","RGMTETOT",90,0)
 ....S OLDNODE=^XTMP("RGMT","ETOT",RGDFN)
"RTN","RGMTETOT",91,0)
 ....S OLDDT=$P(OLDNODE,"^")
"RTN","RGMTETOT",92,0)
 ....I EXCDT>OLDDT D  Q
"RTN","RGMTETOT",93,0)
 .....S DA(1)=$P(OLDNODE,"^",2),DA=$P(OLDNODE,"^",3)
"RTN","RGMTETOT",94,0)
 .....D DELDUP
"RTN","RGMTETOT",95,0)
 .....D SETTMP
"RTN","RGMTETOT",96,0)
 ....I OLDDT>EXCDT!(OLDDT=EXCDT) D
"RTN","RGMTETOT",97,0)
 .....S DA(1)=IEN,DA=IEN2
"RTN","RGMTETOT",98,0)
 .....D DELDUP
"RTN","RGMTETOT",99,0)
 I '$D(RGHLMQ) W !,DUPCNT," duplicate patient entries for POTENTIAL MATCH exceptions were identified"
"RTN","RGMTETOT",100,0)
 I '$D(RGHLMQ) W !,"and deleted from the CIRN HL7 EXCEPTION LOG file (#991.1)."
"RTN","RGMTETOT",101,0)
 ;
"RTN","RGMTETOT",102,0)
 K ^XTMP("RGMT","ETOT")
"RTN","RGMTETOT",103,0)
 S (RCNT,RGDFN)=0 N IEN,SUB
"RTN","RGMTETOT",104,0)
 F  S RGDFN=$O(^RGHL7(991.1,"ADFN",218,RGDFN)) Q:'RGDFN  D
"RTN","RGMTETOT",105,0)
 .;S ICN=+$$GETICN^MPIF001(RGDFN)
"RTN","RGMTETOT",106,0)
 .;I $E(ICN,1,3)=$P(HOME,"^",3)!(ICN<0) D
"RTN","RGMTETOT",107,0)
 .;**43 shouldn't check for locals or no ICN, check for processed/not processed
"RTN","RGMTETOT",108,0)
 .S IEN=0  F  S IEN=$O(^RGHL7(991.1,"ADFN",218,RGDFN,IEN)) Q:IEN=""  D
"RTN","RGMTETOT",109,0)
 ..S SUB=$O(^RGHL7(991.1,"ADFN",218,RGDFN,IEN,""))
"RTN","RGMTETOT",110,0)
 ..I $P($G(^RGHL7(991.1,IEN,1,SUB,0)),"^",5)=0 D
"RTN","RGMTETOT",111,0)
 ...S DFN=RGDFN D DEM^VADPT
"RTN","RGMTETOT",112,0)
 ...I VADM(1)=""!(VADM(2)="") Q
"RTN","RGMTETOT",113,0)
 ...S RCNT=RCNT+1
"RTN","RGMTETOT",114,0)
 ...S ^XTMP("RGMT","ETOT",VADM(1),RGDFN)=$P(VADM(2),"^")_"^"_$P(VADM(3),"^",2)
"RTN","RGMTETOT",115,0)
 ;
"RTN","RGMTETOT",116,0)
 ;count the number of patients who need to be resolved
"RTN","RGMTETOT",117,0)
 S PTNM="",CNT=0
"RTN","RGMTETOT",118,0)
 F  S PTNM=$O(^XTMP("RGMT","ETOT",PTNM)) Q:PTNM=""  D
"RTN","RGMTETOT",119,0)
 .S RGDFN=0
"RTN","RGMTETOT",120,0)
 .F  S RGDFN=$O(^XTMP("RGMT","ETOT",PTNM,RGDFN)) Q:'RGDFN  S CNT=CNT+1
"RTN","RGMTETOT",121,0)
 S TYPEARR(218)=CNT
"RTN","RGMTETOT",122,0)
 Q
"RTN","RGMTETOT",123,0)
 ;
"RTN","RGMTETOT",124,0)
SETTMP ;set TMP global for patient check
"RTN","RGMTETOT",125,0)
 S ^XTMP("RGMT","ETOT",RGDFN)=EXCDT_"^"_IEN_"^"_IEN2
"RTN","RGMTETOT",126,0)
 Q
"RTN","RGMTETOT",127,0)
 ;
"RTN","RGMTETOT",128,0)
DELDUP ;delete patient dups from file
"RTN","RGMTETOT",129,0)
 S DUPCNT=DUPCNT+1
"RTN","RGMTETOT",130,0)
 S DIK="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGMTETOT",131,0)
 D ^DIK K DIK,DA
"RTN","RGMTETOT",132,0)
 Q
"RTN","RGMTETOT",133,0)
 ;
"RTN","RGMTETOT",134,0)
200 ;;(Missing BHS Segment)
"RTN","RGMTETOT",135,0)
201 ;;(Missing MSH Segment
"RTN","RGMTETOT",136,0)
202 ;;(Missing QAK Segment)
"RTN","RGMTETOT",137,0)
203 ;;(Missing MSA Segment)
"RTN","RGMTETOT",138,0)
204 ;;(Missing RDF Segment)
"RTN","RGMTETOT",139,0)
205 ;;(Missing RDT Segment)
"RTN","RGMTETOT",140,0)
206 ;;(Could Not Create VTQ)
"RTN","RGMTETOT",141,0)
207 ;;(Application Reject Error)
"RTN","RGMTETOT",142,0)
208 ;;(Application Error)
"RTN","RGMTETOT",143,0)
209 ;;(Required field(s) Missing)
"RTN","RGMTETOT",144,0)
210 ;;(Patient DFN Failed)
"RTN","RGMTETOT",145,0)
211 ;;(CMOR Lookup Failed)
"RTN","RGMTETOT",146,0)
212 ;;(TF Update Failed in Pivot file)
"RTN","RGMTETOT",147,0)
213 ;;(SSN Match Failed)
"RTN","RGMTETOT",148,0)
214 ;;(Name Doesn't Match)
"RTN","RGMTETOT",149,0)
215 ;;(Death Entry on MPI not in VISTA)
"RTN","RGMTETOT",150,0)
216 ;;(Death Entry on Vista not in MPI)
"RTN","RGMTETOT",151,0)
217 ;;(Death Entries Mismatch)
"RTN","RGMTETOT",152,0)
218 ;;(Potential Matches Returned)
"RTN","RGMTETOT",153,0)
219 ;;(Missing ICN)
"RTN","RGMTETOT",154,0)
220 ;;(Error Setting Up HL7)
"RTN","RGMTETOT",155,0)
221 ;;(Missing Site/CMOR)
"RTN","RGMTETOT",156,0)
222 ;;(Invalid Event Type)
"RTN","RGMTETOT",157,0)
223 ;;(Missing Excepted Field)
"RTN","RGMTETOT",158,0)
224 ;;(Missing/Unable to get Logical Link)
"RTN","RGMTETOT",159,0)
225 ;;(Have Subscribers)
"RTN","RGMTETOT",160,0)
226 ;;(Not CMOR)
"RTN","RGMTETOT",161,0)
227 ;;(Multiple ICNs)
"RTN","RGMTETOT",162,0)
228 ;;(Patient Does Not Exist)
"RTN","RGMTETOT",163,0)
229 ;;(Duplicate Station Number)
"RTN","RGMTETOT",164,0)
230 ;;(Invalid Sender Of Facility Integration Message)
"RTN","RGMTETOT",165,0)
231 ;;(Treating Facility Not Known To CMOR)
"RTN","RGMTETOT",166,0)
232 ;;(Subscriber Not Known To CMOR)
"RTN","RGMTETOT",167,0)
233 ;;(Cannot Merge Duplicate Pair)
"RTN","RGP43PST")
0^1^B5800174
"RTN","RGP43PST",1,0)
RGP43PST ;BIR/PTD-POST-INIT TO RETIRE EXCEPTIONS #209, 213, 214, 218 ;10/05/05
"RTN","RGP43PST",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**43**;30 Apr 99
"RTN","RGP43PST",3,0)
 ;
"RTN","RGP43PST",4,0)
 ;Loop through the CIRN HL7 EXCEPTION LOG (#991.1) file.
"RTN","RGP43PST",5,0)
 ;Find exceptions with EXCEPTION STATUS of NOT PROCESSED ("0").
"RTN","RGP43PST",6,0)
 ;Get the TYPE which is a pointer to the CIRN HL7 EXCEPTION
"RTN","RGP43PST",7,0)
 ;TYPE (#991.11) file.  If the TYPE is 209, 213, 214, or 218,
"RTN","RGP43PST",8,0)
 ;mark the EXCEPTION STATUS to  PROCESSED ("1").  These exception
"RTN","RGP43PST",9,0)
 ;types will not be generated in the future.
"RTN","RGP43PST",10,0)
 ;
"RTN","RGP43PST",11,0)
EXLOG ;
"RTN","RGP43PST",12,0)
 ;If patch RG*1.0*43 has previously been installed, quit post-init.
"RTN","RGP43PST",13,0)
 I $$PATCH^XPDUTL("RG*1.0*43") D BMES^XPDUTL(" Post-install previously ran; no need to reprocess file 991.1.") Q
"RTN","RGP43PST",14,0)
 ;Else continue with post-init.
"RTN","RGP43PST",15,0)
 ;
"RTN","RGP43PST",16,0)
 D BMES^XPDUTL(" The post-init routine will retire selected exceptions in")
"RTN","RGP43PST",17,0)
 D MES^XPDUTL(" the CIRN HL7 EXCEPTION LOG (#991.1) file.")
"RTN","RGP43PST",18,0)
 ;
"RTN","RGP43PST",19,0)
 N COUNT,DA,DIC,DIE,DR,EXNUM,EXCTYP,LOGIEN,X,Y,ZNODE
"RTN","RGP43PST",20,0)
 S (LOGIEN,COUNT)=0
"RTN","RGP43PST",21,0)
 F  S LOGIEN=$O(^RGHL7(991.1,LOGIEN)) Q:'LOGIEN  D
"RTN","RGP43PST",22,0)
 .S EXNUM=0
"RTN","RGP43PST",23,0)
 .F  S EXNUM=$O(^RGHL7(991.1,LOGIEN,1,EXNUM)) Q:'EXNUM  S ZNODE=$G(^(EXNUM,0)) I $P(ZNODE,"^",5)'=1 D  ;Quit if EXCEPTION STATUS (#6) equals 1 for PROCESSED
"RTN","RGP43PST",24,0)
 ..S EXCTYP=$P(ZNODE,"^",3) ;Quit if TYPE is NOT one of these 4:
"RTN","RGP43PST",25,0)
 ..;209 - Required field(s) missing for patient sent to MPI
"RTN","RGP43PST",26,0)
 ..;213 - SSN Match Failed
"RTN","RGP43PST",27,0)
 ..;214 - Name Doesn't Match
"RTN","RGP43PST",28,0)
 ..;218 - Potential Matches Returned
"RTN","RGP43PST",29,0)
 ..I $S(EXCTYP=209:0,EXCTYP=213:0,EXCTYP=214:0,EXCTYP=218:0,1:1) Q  ;TYPE is one of the four we want to mark as PROCESSED
"RTN","RGP43PST",30,0)
 ..;
"RTN","RGP43PST",31,0)
DIE ..;Update the EXCEPTION STATUS (#6) field to '1'.
"RTN","RGP43PST",32,0)
 ..S DA(1)=LOGIEN,DA=EXNUM,DR="6///"_1
"RTN","RGP43PST",33,0)
 ..S DIE="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGP43PST",34,0)
 ..L +^RGHL7(991.1,LOGIEN):10
"RTN","RGP43PST",35,0)
 ..D ^DIE K DA,DIE,DR
"RTN","RGP43PST",36,0)
 ..L -^RGHL7(991.1,LOGIEN)
"RTN","RGP43PST",37,0)
 ..S COUNT=COUNT+1
"RTN","RGP43PST",38,0)
 ;
"RTN","RGP43PST",39,0)
 D BMES^XPDUTL(" A total of "_COUNT_" exceptions were retired.")
"RTN","RGP43PST",40,0)
 D MES^XPDUTL(" Post-install routine completed successfully.")
"RTN","RGP43PST",41,0)
 Q
"RTN","RGSYSTAT")
0^5^B16749126
"RTN","RGSYSTAT",1,0)
RGSYSTAT ;BAY/ALS-MPI/PD STATUS DISPLAY ;01/05/01
"RTN","RGSYSTAT",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**16,19,23,25,20,43**;30 Apr 99
"RTN","RGSYSTAT",3,0)
 ;Reference to ^DGCN(391.98,"AST" supported by IA #3303
"RTN","RGSYSTAT",4,0)
 ;Reference to ^DGCN(391.984 supported by IA #3304
"RTN","RGSYSTAT",5,0)
 ;Reference to ^MPIF(984.9 supported by IA #3298
"RTN","RGSYSTAT",6,0)
 ;Reference to OPTSTAT^XUTMOPT supported by IA #1472
"RTN","RGSYSTAT",7,0)
 ;Reference to ^DPT("ACMORS", ^DPT("AICN", and ^DPT("AICNL" supported by IA #2070
"RTN","RGSYSTAT",8,0)
 ;Reference to ^VAT(391.71 supported by IA #3422
"RTN","RGSYSTAT",9,0)
EN ;
"RTN","RGSYSTAT",10,0)
 ; Count exceptions on hand
"RTN","RGSYSTAT",11,0)
EXC ;
"RTN","RGSYSTAT",12,0)
 W @IOF,"Exception Handler Entries:",!,"--------------------------"
"RTN","RGSYSTAT",13,0)
 S CNT=0,EXCTYP="",NTYP="",TOTL=0,PCNT=0
"RTN","RGSYSTAT",14,0)
 N STAT,DFN,ICN
"RTN","RGSYSTAT",15,0)
 S HOME=$$SITE^VASITE()
"RTN","RGSYSTAT",16,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"AC",EXCTYP)) Q:'EXCTYP  D
"RTN","RGSYSTAT",17,0)
 . I (EXCTYP=209)!(EXCTYP=227)!((EXCTYP>212)&(EXCTYP<219)) D
"RTN","RGSYSTAT",18,0)
 .. I (EXCTYP'=NTYP)&(CNT>0) D
"RTN","RGSYSTAT",19,0)
 ... S ETEXT=$P($G(^RGHL7(991.11,NTYP,10)),"^",1)
"RTN","RGSYSTAT",20,0)
 ... W !,$E(ETEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT,CNT=0
"RTN","RGSYSTAT",21,0)
 .. S IEN=0,NTYP=EXCTYP
"RTN","RGSYSTAT",22,0)
 .. F  S IEN=$O(^RGHL7(991.1,"AC",EXCTYP,IEN)) Q:'IEN  D
"RTN","RGSYSTAT",23,0)
 ... S IEN2=0
"RTN","RGSYSTAT",24,0)
 ... F  S IEN2=$O(^RGHL7(991.1,"AC",EXCTYP,IEN,IEN2)) Q:'IEN2  D
"RTN","RGSYSTAT",25,0)
 .... S STAT=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",5) I STAT<1 D
"RTN","RGSYSTAT",26,0)
 ..... S DFN=$P(^RGHL7(991.1,IEN,1,IEN2,0),"^",4) Q:'DFN
"RTN","RGSYSTAT",27,0)
 ..... S ^XTMP("RGEXC",0)=$$FMADD^XLFDT(DT,2)_"^"_DT_"^"_"MPI/PD Status Display"
"RTN","RGSYSTAT",28,0)
 ..... S ^XTMP("RGEXC",DFN)=DFN
"RTN","RGSYSTAT",29,0)
 ..... S ICN=+$$GETICN^MPIF001(DFN)
"RTN","RGSYSTAT",30,0)
 ..... I $E(ICN,1,3)=$E($P(HOME,"^",3),1,3)!(ICN<0)!((EXCTYP<219)&(EXCTYP>214)) D  ;**43
"RTN","RGSYSTAT",31,0)
 ...... S CNT=CNT+1
"RTN","RGSYSTAT",32,0)
 I CNT>0 D
"RTN","RGSYSTAT",33,0)
 .S ETEXT=$P($G(^RGHL7(991.11,NTYP,10)),"^",1)
"RTN","RGSYSTAT",34,0)
 .W !,$E(ETEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT
"RTN","RGSYSTAT",35,0)
 I TOTL=0 W !,"There are no entries in the Exception Handler."
"RTN","RGSYSTAT",36,0)
 I TOTL>0 D
"RTN","RGSYSTAT",37,0)
 . W !!,"Total number of exceptions: ",?55,$J(TOTL,6)
"RTN","RGSYSTAT",38,0)
 . S PDFN=""
"RTN","RGSYSTAT",39,0)
 . F  S PDFN=$O(^XTMP("RGEXC",PDFN)) Q:'PDFN  D
"RTN","RGSYSTAT",40,0)
 .. S PCNT=PCNT+1
"RTN","RGSYSTAT",41,0)
 . W !,"Total unique patient exceptions: ",?55,$J(PCNT,6)
"RTN","RGSYSTAT",42,0)
 S STDT=$P($G(^RGSITE(991.8,1,"EXCPRG")),"^",1)
"RTN","RGSYSTAT",43,0)
 I $D(^RGSITE(991.8,1,"EXCPRG")) D
"RTN","RGSYSTAT",44,0)
 . S STDT=$$FMTE^XLFDT(STDT,1)
"RTN","RGSYSTAT",45,0)
 . W !!,"The MPI/PD Exception Purge process last ran "_STDT_"."
"RTN","RGSYSTAT",46,0)
 K CNT,EXCTYP,NTYP,ETEXT,TOTL,IEN,IEN2,HOME,PCNT,^XTMP("RGEXC"),PDFN,STDT
"RTN","RGSYSTAT",47,0)
 I $Y>21 D QUIT Q:X="^"
"RTN","RGSYSTAT",48,0)
PDR ;Count entries in Patient Data Review
"RTN","RGSYSTAT",49,0)
 W !!,"Patient Data Review Entries:",!,"----------------------------"
"RTN","RGSYSTAT",50,0)
 S CNT=0,PDRTYP="",NTYP="",TOTL=0
"RTN","RGSYSTAT",51,0)
 F  S PDRTYP=$O(^DGCN(391.98,"AST",PDRTYP)) Q:'PDRTYP  D
"RTN","RGSYSTAT",52,0)
 . I (PDRTYP'=NTYP)&(CNT>0) D
"RTN","RGSYSTAT",53,0)
 .. S DIC="^DGCN(391.984,",DR=".01",DA=NTYP,DIQ(0)="E",DIQ="RGPDR"
"RTN","RGSYSTAT",54,0)
 .. D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","RGSYSTAT",55,0)
 .. S PTEXT=$G(RGPDR(391.984,NTYP,.01,"E"))
"RTN","RGSYSTAT",56,0)
 .. W !,$E(PTEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT,CNT=0
"RTN","RGSYSTAT",57,0)
 . I (PDRTYP=1)!(PDRTYP=2)!(PDRTYP=5) D
"RTN","RGSYSTAT",58,0)
 .. S IEN=0,NTYP=PDRTYP
"RTN","RGSYSTAT",59,0)
 .. F  S IEN=$O(^DGCN(391.98,"AST",PDRTYP,IEN)) Q:'IEN  D
"RTN","RGSYSTAT",60,0)
 ... S CNT=CNT+1
"RTN","RGSYSTAT",61,0)
 I CNT>0 D
"RTN","RGSYSTAT",62,0)
 . S DIC="^DGCN(391.984,",DR=".01",DA=NTYP,DIQ(0)="E",DIQ="RGPDR"
"RTN","RGSYSTAT",63,0)
 . D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","RGSYSTAT",64,0)
 . S PTEXT=$G(RGPDR(391.984,NTYP,.01,"E"))
"RTN","RGSYSTAT",65,0)
 .W !,$E(PTEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT
"RTN","RGSYSTAT",66,0)
 I TOTL=0 W !,"There are no entries in Patient Data Review."
"RTN","RGSYSTAT",67,0)
 K CNT,PDRTYP,NTYP,TOTL,IEN,PTEXT,RGPDR
"RTN","RGSYSTAT",68,0)
 ;Q
"RTN","RGSYSTAT",69,0)
 I $Y>20 D QUIT Q:X="^"
"RTN","RGSYSTAT",70,0)
 ;
"RTN","RGSYSTAT",71,0)
CMOR ;CMOR Requests Status
"RTN","RGSYSTAT",72,0)
 W !!,"CMOR Requests Status:",!,"---------------------"
"RTN","RGSYSTAT",73,0)
 S CNT=0,STAT="",NSTAT="",TOTL=0
"RTN","RGSYSTAT",74,0)
 F  S STAT=$O(^MPIF(984.9,"AC",STAT)) Q:'STAT  D
"RTN","RGSYSTAT",75,0)
 . I (STAT'=NSTAT)&(CNT>0) D
"RTN","RGSYSTAT",76,0)
 .. S TEXT=$$EXTERNAL^DILFD(984.9,.06,,NSTAT)
"RTN","RGSYSTAT",77,0)
 .. W !,$E(TEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT,CNT=0
"RTN","RGSYSTAT",78,0)
 . S IEN=0,NSTAT=STAT
"RTN","RGSYSTAT",79,0)
 . F  S IEN=$O(^MPIF(984.9,"AC",STAT,IEN)) Q:'IEN  D
"RTN","RGSYSTAT",80,0)
 .. S CNT=CNT+1 S TOTL=TOTL+CNT
"RTN","RGSYSTAT",81,0)
 I CNT>0 S TEXT=$$EXTERNAL^DILFD(984.9,.06,,NSTAT) W !,$E(TEXT,1,47),?55,$J(CNT,6) S TOTL=TOTL+CNT,CNT=0
"RTN","RGSYSTAT",82,0)
 I TOTL=0 W !,"There are no outstanding CMOR Requests."
"RTN","RGSYSTAT",83,0)
 K CNT,STAT,NSTAT,TEXT,TOTL,IEN
"RTN","RGSYSTAT",84,0)
 I $Y>20 D QUIT Q:X="^"
"RTN","RGSYSTAT",85,0)
 ;
"RTN","RGSYSTAT",86,0)
 S HOME=$P($$SITE^VASITE(),"^",3)
"RTN","RGSYSTAT",87,0)
 S ICN=0,CNT=0
"RTN","RGSYSTAT",88,0)
 F  S ICN=$O(^DPT("AICN",ICN)) Q:'ICN  D
"RTN","RGSYSTAT",89,0)
 .Q:$E(ICN,1,3)=HOME
"RTN","RGSYSTAT",90,0)
 .S CNT=CNT+1
"RTN","RGSYSTAT",91,0)
 W !,"Current total number of National ICNs = ",CNT
"RTN","RGSYSTAT",92,0)
 S ICN=0,CNT=0
"RTN","RGSYSTAT",93,0)
 F  S ICN=$O(^DPT("AICNL",1,ICN)) Q:'ICN  S CNT=CNT+1
"RTN","RGSYSTAT",94,0)
 W !,"Current total number of Local ICNs = ",CNT
"RTN","RGSYSTAT",95,0)
 K CNT,DFN,ICN
"RTN","RGSYSTAT",96,0)
 Q
"RTN","RGSYSTAT",97,0)
QUIT S DIR(0)="E" D  D ^DIR K DIR
"RTN","RGSYSTAT",98,0)
 .S SS=21-$Y F JJ=1:1:SS W !
"RTN","RGSYSTAT",99,0)
 S $Y=0
"RTN","RGSYSTAT",100,0)
 K JJ,SS
"RTN","RGSYSTAT",101,0)
 Q
"VER")
8.0^22.0
**END**
**END**
