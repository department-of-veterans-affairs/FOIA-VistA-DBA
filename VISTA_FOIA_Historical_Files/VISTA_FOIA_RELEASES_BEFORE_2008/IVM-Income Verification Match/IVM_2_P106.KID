KIDS Distribution saved on Mar 30, 2006@09:36:52
IVM Address Update Project
**KIDS**:IVM*2.0*106^DG*5.3*695^

**INSTALL NAME**
IVM*2.0*106
"BLD",5927,0)
IVM*2.0*106^INCOME VERIFICATION MATCH^0^3060330^y
"BLD",5927,1,0)
^^1^1^3051005^
"BLD",5927,1,1,0)
IVM Address Update Project
"BLD",5927,4,0)
^9.64PA^^
"BLD",5927,6)
2^
"BLD",5927,"INID")
n^n^n
"BLD",5927,"INIT")

"BLD",5927,"KRN",0)
^9.67PA^8989.52^19
"BLD",5927,"KRN",.4,0)
.4
"BLD",5927,"KRN",.401,0)
.401
"BLD",5927,"KRN",.402,0)
.402
"BLD",5927,"KRN",.403,0)
.403
"BLD",5927,"KRN",.5,0)
.5
"BLD",5927,"KRN",.84,0)
.84
"BLD",5927,"KRN",3.6,0)
3.6
"BLD",5927,"KRN",3.8,0)
3.8
"BLD",5927,"KRN",9.2,0)
9.2
"BLD",5927,"KRN",9.8,0)
9.8
"BLD",5927,"KRN",9.8,"NM",0)
^9.68A^3^2
"BLD",5927,"KRN",9.8,"NM",1,0)
IVMLDEM6^^0^B60562553
"BLD",5927,"KRN",9.8,"NM",3,0)
IVMADDRP^^0^B53315162
"BLD",5927,"KRN",9.8,"NM","B","IVMADDRP",3)

"BLD",5927,"KRN",9.8,"NM","B","IVMLDEM6",1)

"BLD",5927,"KRN",19,0)
19
"BLD",5927,"KRN",19.1,0)
19.1
"BLD",5927,"KRN",101,0)
101
"BLD",5927,"KRN",409.61,0)
409.61
"BLD",5927,"KRN",771,0)
771
"BLD",5927,"KRN",870,0)
870
"BLD",5927,"KRN",8989.51,0)
8989.51
"BLD",5927,"KRN",8989.52,0)
8989.52
"BLD",5927,"KRN",8994,0)
8994
"BLD",5927,"KRN","B",.4,.4)

"BLD",5927,"KRN","B",.401,.401)

"BLD",5927,"KRN","B",.402,.402)

"BLD",5927,"KRN","B",.403,.403)

"BLD",5927,"KRN","B",.5,.5)

"BLD",5927,"KRN","B",.84,.84)

"BLD",5927,"KRN","B",3.6,3.6)

"BLD",5927,"KRN","B",3.8,3.8)

"BLD",5927,"KRN","B",9.2,9.2)

"BLD",5927,"KRN","B",9.8,9.8)

"BLD",5927,"KRN","B",19,19)

"BLD",5927,"KRN","B",19.1,19.1)

"BLD",5927,"KRN","B",101,101)

"BLD",5927,"KRN","B",409.61,409.61)

"BLD",5927,"KRN","B",771,771)

"BLD",5927,"KRN","B",870,870)

"BLD",5927,"KRN","B",8989.51,8989.51)

"BLD",5927,"KRN","B",8989.52,8989.52)

"BLD",5927,"KRN","B",8994,8994)

"BLD",5927,"QUES",0)
^9.62^^
"BLD",5927,"REQB",0)
^9.611^1^1
"BLD",5927,"REQB",1,0)
IVM*2.0*108^2
"BLD",5927,"REQB","B","IVM*2.0*108",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
106^3060330^123456813
"PKG",220,22,1,"PAH",1,1,0)
^^1^1^3060330
"PKG",220,22,1,"PAH",1,1,1,0)
IVM Address Update Project
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IVMADDRP")
0^3^B53315162
"RTN","IVMADDRP",1,0)
IVMADDRP ;ALB/PHH,EG - IVM ADDRESS UPLOAD LOG REPORT ; 03/29/2006
"RTN","IVMADDRP",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**108,106**; 21-OCT-94
"RTN","IVMADDRP",3,0)
 ;
"RTN","IVMADDRP",4,0)
 ; This routine list veterans who have had more than one address
"RTN","IVMADDRP",5,0)
 ; change in the past 90 days.
"RTN","IVMADDRP",6,0)
 ;
"RTN","IVMADDRP",7,0)
 N SDATE,EDATE,HDR,MSG,%ZIS,ZTRTN,ZTDESC,ZTSAVE,PAGE,ZTSK,ZTREQ,POP,X
"RTN","IVMADDRP",8,0)
 N BDT,U,DFN,SO
"RTN","IVMADDRP",9,0)
 S U="^",DFN="",SO=""
"RTN","IVMADDRP",10,0)
 S DOS=$$DOS
"RTN","IVMADDRP",11,0)
 I DOS="^" Q
"RTN","IVMADDRP",12,0)
 S X=$$ENDDATE
"RTN","IVMADDRP",13,0)
 I X="" Q
"RTN","IVMADDRP",14,0)
 S BDT=$P(X,"^",1)
"RTN","IVMADDRP",15,0)
 I DOS="D" D  I DFN="" Q
"RTN","IVMADDRP",16,0)
 . S DFN=$$GETPAT
"RTN","IVMADDRP",17,0)
 . Q
"RTN","IVMADDRP",18,0)
 I DOS="S" S SO=$$SORTORD I SO="^" Q
"RTN","IVMADDRP",19,0)
 S (SDATE,EDATE,HDR)=""
"RTN","IVMADDRP",20,0)
 S EDATE=$$FMADD^XLFDT(BDT) I EDATE="" Q
"RTN","IVMADDRP",21,0)
 S SDATE=$$FMADD^XLFDT(EDATE,-90)
"RTN","IVMADDRP",22,0)
 ;
"RTN","IVMADDRP",23,0)
 ; Get report device. Queue report if requested
"RTN","IVMADDRP",24,0)
 S MSG(1)=""
"RTN","IVMADDRP",25,0)
 S MSG(2)="This report may take a long time to generate.  It is recommended that the report"
"RTN","IVMADDRP",26,0)
 S MSG(3)="be queued to print."
"RTN","IVMADDRP",27,0)
 S MSG(4)=""
"RTN","IVMADDRP",28,0)
 D BMES^XPDUTL(.MSG)
"RTN","IVMADDRP",29,0)
 K IOP,%ZIS
"RTN","IVMADDRP",30,0)
 S %ZIS="MQ"
"RTN","IVMADDRP",31,0)
 D ^%ZIS I POP W !!,"Report Cancelled!" Q
"RTN","IVMADDRP",32,0)
 I $D(IO("Q")) D  Q
"RTN","IVMADDRP",33,0)
 . S ZTRTN="START^IVMADDRP"
"RTN","IVMADDRP",34,0)
 . S ZTDESC="IVM Address Change Log Report"
"RTN","IVMADDRP",35,0)
 . S (ZTSAVE("PAGE"),ZTSAVE("SDATE"),ZTSAVE("EDATE"))=""
"RTN","IVMADDRP",36,0)
 . S (ZTSAVE("DOS"),ZTSAVE("DFN"),ZTSAVE("SO"))=""
"RTN","IVMADDRP",37,0)
 . D ^%ZTLOAD
"RTN","IVMADDRP",38,0)
 . W !!,"Report "_$S($D(ZTSK):"Queued!",1:"Cancelled!")
"RTN","IVMADDRP",39,0)
 . D HOME^%ZIS
"RTN","IVMADDRP",40,0)
 . Q
"RTN","IVMADDRP",41,0)
 D START,^%ZISC
"RTN","IVMADDRP",42,0)
 Q
"RTN","IVMADDRP",43,0)
DOS() ;detail or summary
"RTN","IVMADDRP",44,0)
 N DIR,Y,X
"RTN","IVMADDRP",45,0)
 S DIR(0)="SA^D:Detail;S:Summary"
"RTN","IVMADDRP",46,0)
 S DIR("A")="Select Type of Report to Run: "
"RTN","IVMADDRP",47,0)
 D ^DIR
"RTN","IVMADDRP",48,0)
 Q Y
"RTN","IVMADDRP",49,0)
 ;
"RTN","IVMADDRP",50,0)
GETPAT() ;get a patient
"RTN","IVMADDRP",51,0)
 N DIC,Y,X,U
"RTN","IVMADDRP",52,0)
 S DIC="^DPT(",DIC(0)="AEQZM" D ^DIC
"RTN","IVMADDRP",53,0)
 Q $S($P(Y,U,1)>0:$P(Y,U,1),1:"")
"RTN","IVMADDRP",54,0)
 ;
"RTN","IVMADDRP",55,0)
ENDDATE() ;get an end date, default to TODAY
"RTN","IVMADDRP",56,0)
 N DIR,Y,X
"RTN","IVMADDRP",57,0)
 S DIR(0)="D^::EX",DIR("?")="^D HELP^%DTC",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","IVMADDRP",58,0)
 S DIR("A")="Enter End Date of 90 Day Window: "
"RTN","IVMADDRP",59,0)
 D ^DIR
"RTN","IVMADDRP",60,0)
 Q $S('Y:"",1:Y)
"RTN","IVMADDRP",61,0)
 ;
"RTN","IVMADDRP",62,0)
SORTORD() ;get sort order for summary
"RTN","IVMADDRP",63,0)
 N DIR,Y,X
"RTN","IVMADDRP",64,0)
 S DIR(0)="SA^S:Social Security Number;N:Name then SSN"
"RTN","IVMADDRP",65,0)
 S DIR("A")="What Order Do You Want to See Output: "
"RTN","IVMADDRP",66,0)
 D ^DIR
"RTN","IVMADDRP",67,0)
 Q Y
"RTN","IVMADDRP",68,0)
 ;
"RTN","IVMADDRP",69,0)
START ; Generate Report
"RTN","IVMADDRP",70,0)
 N CRT,X
"RTN","IVMADDRP",71,0)
 K ^XTMP("IVMADDRP",$J)
"RTN","IVMADDRP",72,0)
 S CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","IVMADDRP",73,0)
 S X=$$BUILD(SDATE,EDATE,DOS,DFN,SO)
"RTN","IVMADDRP",74,0)
 U IO W ! D REPORT W ! U 0
"RTN","IVMADDRP",75,0)
 K ^XTMP("IVMADDRP",$J)
"RTN","IVMADDRP",76,0)
 I $G(ZTSK) S ZTREQ="@"
"RTN","IVMADDRP",77,0)
 Q
"RTN","IVMADDRP",78,0)
BUILD(SDATE,EDATE,DOS,DFN,SO) ; Build the Report
"RTN","IVMADDRP",79,0)
 ;use C index if you are only looking for one DFN
"RTN","IVMADDRP",80,0)
 I $L(DFN) D C Q 1
"RTN","IVMADDRP",81,0)
 N CHDTTM
"RTN","IVMADDRP",82,0)
 S CHDTTM=SDATE
"RTN","IVMADDRP",83,0)
 F  S CHDTTM=$O(^IVM(301.7,"B",CHDTTM)) Q:CHDTTM=""!(CHDTTM>(EDATE+1))  D ADDIEN
"RTN","IVMADDRP",84,0)
 Q 1
"RTN","IVMADDRP",85,0)
ADDIEN ;
"RTN","IVMADDRP",86,0)
 N ADDIEN
"RTN","IVMADDRP",87,0)
 S ADDIEN=0
"RTN","IVMADDRP",88,0)
 F  S ADDIEN=$O(^IVM(301.7,"B",CHDTTM,ADDIEN)) Q:ADDIEN=""  D GETINF
"RTN","IVMADDRP",89,0)
 Q
"RTN","IVMADDRP",90,0)
C N ADDIEN,CHDTTM
"RTN","IVMADDRP",91,0)
 S ADDIEN=""
"RTN","IVMADDRP",92,0)
 F  S ADDIEN=$O(^IVM(301.7,"C",DFN,ADDIEN)) Q:ADDIEN=""  D
"RTN","IVMADDRP",93,0)
 . S CHDTTM=$P($G(^IVM(301.7,ADDIEN,0)),"^",1)
"RTN","IVMADDRP",94,0)
 . I (CHDTTM>SDATE),(CHDTTM<(EDATE+1)) D GETINF
"RTN","IVMADDRP",95,0)
 . Q
"RTN","IVMADDRP",96,0)
 Q
"RTN","IVMADDRP",97,0)
GETINF ; 
"RTN","IVMADDRP",98,0)
 N NODE0,NODE1,DFN,SSN,NAME,ADDR1,ADDR2,CITY,STATE,ZIP,SORT1,SORT2,U,SOURCE,SIEN,SITE
"RTN","IVMADDRP",99,0)
 S U="^",SITE=""
"RTN","IVMADDRP",100,0)
 S NODE0=$G(^IVM(301.7,ADDIEN,0))
"RTN","IVMADDRP",101,0)
 S NODE1=$G(^IVM(301.7,ADDIEN,1))
"RTN","IVMADDRP",102,0)
 S DFN=$P(NODE0,"^",2)
"RTN","IVMADDRP",103,0)
 Q:DFN=""
"RTN","IVMADDRP",104,0)
 Q:'$D(^DPT(DFN))
"RTN","IVMADDRP",105,0)
 S SSN=$P($G(^DPT(DFN,0)),"^",9)
"RTN","IVMADDRP",106,0)
 Q:SSN=""
"RTN","IVMADDRP",107,0)
 S NAME=$P($G(^DPT(DFN,0)),"^",1)
"RTN","IVMADDRP",108,0)
 S SOURCE=$P(NODE1,"^",4),SIEN=$P(NODE1,"^",3)
"RTN","IVMADDRP",109,0)
 I SIEN S SITE=$P($G(^DIC(4,SIEN,0)),"^",1)
"RTN","IVMADDRP",110,0)
 S ADDR1=$P(NODE1,"^",6)
"RTN","IVMADDRP",111,0)
 S ADDR2=$P(NODE1,"^",7)
"RTN","IVMADDRP",112,0)
 S CITY=$P(NODE1,"^",8)
"RTN","IVMADDRP",113,0)
 S STATE=$P(NODE1,"^",10)
"RTN","IVMADDRP",114,0)
 I STATE'="",$D(^DIC(5,STATE,0)) S STATE=$P(^DIC(5,STATE,0),"^",2)
"RTN","IVMADDRP",115,0)
 S ZIP=$P(NODE1,"^",11)
"RTN","IVMADDRP",116,0)
 I DOS="D" D  Q
"RTN","IVMADDRP",117,0)
 . S ^XTMP("IVMADDRP",$J,SSN,CHDTTM)=ADDIEN_"^"_DFN_"^"_NAME_"^"_ADDR1_"^"_ADDR2_"^"_CITY_"^"_STATE_"^"_ZIP_"^"_SOURCE_"^"_SITE
"RTN","IVMADDRP",118,0)
 . S ^XTMP("IVMADDRP",$J,SSN)=$G(^XTMP("IVMADDRP",$J,SSN))+1
"RTN","IVMADDRP",119,0)
 . Q
"RTN","IVMADDRP",120,0)
 I DOS="S" D
"RTN","IVMADDRP",121,0)
 . S SORT1=$S(SO="S":SSN,1:NAME) I NAME="" S SORT1="UNKNOWN"
"RTN","IVMADDRP",122,0)
 . S SORT2=$S(SO="S":0,1:SSN)
"RTN","IVMADDRP",123,0)
 . S ^XTMP("IVMADDRP",$J,SORT1,SORT2,"INF")=NAME_U_SSN
"RTN","IVMADDRP",124,0)
 . S ^XTMP("IVMADDRP",$J,SORT1,SORT2,"DATE",CHDTTM)=""
"RTN","IVMADDRP",125,0)
 . S ^XTMP("IVMADDRP",$J,SORT1,SORT2)=$G(^XTMP("IVMADDRP",$J,SORT1,SORT2))+1
"RTN","IVMADDRP",126,0)
 . Q
"RTN","IVMADDRP",127,0)
 Q
"RTN","IVMADDRP",128,0)
REPORT ; Display the Report
"RTN","IVMADDRP",129,0)
 D HEADER
"RTN","IVMADDRP",130,0)
 I '$D(^XTMP("IVMADDRP",$J)) D  Q
"RTN","IVMADDRP",131,0)
 . N X S X="****** NOTHING TO REPORT ******" W !?80-$L(X)\2,X,!
"RTN","IVMADDRP",132,0)
 . Q
"RTN","IVMADDRP",133,0)
 I DOS="S" D SUMMARY Q
"RTN","IVMADDRP",134,0)
 N SSN
"RTN","IVMADDRP",135,0)
 ;
"RTN","IVMADDRP",136,0)
 S SSN=""
"RTN","IVMADDRP",137,0)
 F  S SSN=$O(^XTMP("IVMADDRP",$J,SSN)) Q:SSN=""  D DETAIL
"RTN","IVMADDRP",138,0)
 Q
"RTN","IVMADDRP",139,0)
DETAIL N NAME,CHDTTM,ADDR,ADDR2,CITY,STATE,ZIP,CSZ
"RTN","IVMADDRP",140,0)
 N ADDR1,ADDR2,X,U,QUIT,CNT,SITE,SOURCE
"RTN","IVMADDRP",141,0)
 S CHDTTM="",U="^",QUIT=0,CNT=0
"RTN","IVMADDRP",142,0)
 I $G(^XTMP("IVMADDRP",$J,SSN))'>1 Q
"RTN","IVMADDRP",143,0)
 F  S CHDTTM=$O(^XTMP("IVMADDRP",$J,SSN,CHDTTM)) Q:CHDTTM=""!(QUIT)  D
"RTN","IVMADDRP",144,0)
 . S X=$G(^XTMP("IVMADDRP",$J,SSN,CHDTTM))
"RTN","IVMADDRP",145,0)
 . S NAME=$P(X,U,3)
"RTN","IVMADDRP",146,0)
 . S ADDR1=$P(X,U,4)
"RTN","IVMADDRP",147,0)
 . S ADDR2=$P(X,U,5)
"RTN","IVMADDRP",148,0)
 . S CITY=$P(X,U,6)
"RTN","IVMADDRP",149,0)
 . S STATE=$P(X,U,7)
"RTN","IVMADDRP",150,0)
 . S ZIP=$P(X,U,8)
"RTN","IVMADDRP",151,0)
 . S SOURCE=$P(X,U,9)
"RTN","IVMADDRP",152,0)
 . S SITE=$P(X,U,10)
"RTN","IVMADDRP",153,0)
 . I ($Y+6)>IOSL D HEADER I QUIT Q
"RTN","IVMADDRP",154,0)
 . W !,$$FSSN(SSN),?12,$E(NAME,1,20)
"RTN","IVMADDRP",155,0)
 . W ?35,$$FMTE^XLFDT($P(CHDTTM,".",1))
"RTN","IVMADDRP",156,0)
 . S CSZ=$$CSZ(CITY,STATE,ZIP)
"RTN","IVMADDRP",157,0)
 . W ?49,$E(ADDR1,1,30),!
"RTN","IVMADDRP",158,0)
 . I $L(ADDR2) W ?49,$E(ADDR2,1,30),!
"RTN","IVMADDRP",159,0)
 . I $L(CSZ) W ?49,$E(CSZ,1,30),!
"RTN","IVMADDRP",160,0)
 . I $L(SOURCE) W ?49,"SOURCE: ",SOURCE,!
"RTN","IVMADDRP",161,0)
 . I $L(SITE) W ?49,"SITE: ",SITE
"RTN","IVMADDRP",162,0)
 . S CNT=CNT+1
"RTN","IVMADDRP",163,0)
 . Q
"RTN","IVMADDRP",164,0)
 I 'QUIT D TOTAL(CNT)
"RTN","IVMADDRP",165,0)
 Q
"RTN","IVMADDRP",166,0)
SUMMARY N SORT1,QUIT,CNT
"RTN","IVMADDRP",167,0)
 S SORT1="",QUIT=0,CNT=0
"RTN","IVMADDRP",168,0)
 F  S SORT1=$O(^XTMP("IVMADDRP",$J,SORT1)) Q:SORT1=""!(QUIT)  D SORT2
"RTN","IVMADDRP",169,0)
 I 'QUIT D TOTAL(CNT)
"RTN","IVMADDRP",170,0)
 Q
"RTN","IVMADDRP",171,0)
SORT2 N NAME,SSN
"RTN","IVMADDRP",172,0)
 S SORT2=""
"RTN","IVMADDRP",173,0)
 F  S SORT2=$O(^XTMP("IVMADDRP",$J,SORT1,SORT2)) Q:SORT2=""!(QUIT)  D
"RTN","IVMADDRP",174,0)
 . I $G(^XTMP("IVMADDRP",$J,SORT1,SORT2))'>1 Q
"RTN","IVMADDRP",175,0)
 . D SUMPR S CNT=CNT+1
"RTN","IVMADDRP",176,0)
 . Q
"RTN","IVMADDRP",177,0)
 Q
"RTN","IVMADDRP",178,0)
SUMPR N X,U
"RTN","IVMADDRP",179,0)
 S U="^"
"RTN","IVMADDRP",180,0)
 S X=$G(^XTMP("IVMADDRP",$J,SORT1,SORT2,"INF"))
"RTN","IVMADDRP",181,0)
 S NAME=$P(X,U,1),SSN=$P(X,U,2)
"RTN","IVMADDRP",182,0)
 I ($Y+2)>IOSL D HEADER I QUIT Q
"RTN","IVMADDRP",183,0)
 W !,$$FSSN(SSN),?12,$E(NAME,1,20)
"RTN","IVMADDRP",184,0)
 W ?35,$$FMTE^XLFDT($O(^XTMP("IVMADDRP",$J,SORT1,SORT2,"DATE",""),-1))
"RTN","IVMADDRP",185,0)
 S X=$G(^XTMP("IVMADDRP",$J,SORT1,SORT2))
"RTN","IVMADDRP",186,0)
 W ?73,$J($FN(X,","),5)
"RTN","IVMADDRP",187,0)
 Q
"RTN","IVMADDRP",188,0)
TOTAL(CNT) ;
"RTN","IVMADDRP",189,0)
 I ($Y+2)>IOSL D HEADER
"RTN","IVMADDRP",190,0)
 W !!,"Total records found meeting criteria: ",CNT,!
"RTN","IVMADDRP",191,0)
 Q
"RTN","IVMADDRP",192,0)
CSZ(CITY,STATE,ZIP) ;format city, state and zip into one line
"RTN","IVMADDRP",193,0)
 N X
"RTN","IVMADDRP",194,0)
 S X=""
"RTN","IVMADDRP",195,0)
 I $L(CITY) S X=CITY
"RTN","IVMADDRP",196,0)
 I $L(STATE) D
"RTN","IVMADDRP",197,0)
 . I $L(X) S X=X_", "_STATE Q
"RTN","IVMADDRP",198,0)
 . S X=STATE
"RTN","IVMADDRP",199,0)
 . Q
"RTN","IVMADDRP",200,0)
 I $L(ZIP) D
"RTN","IVMADDRP",201,0)
 . I $L(X) S X=X_"  "_ZIP Q
"RTN","IVMADDRP",202,0)
 . S X=ZIP
"RTN","IVMADDRP",203,0)
 . Q
"RTN","IVMADDRP",204,0)
 Q X
"RTN","IVMADDRP",205,0)
FSSN(SSN) ; Format the SSN
"RTN","IVMADDRP",206,0)
 N FMTSSN
"RTN","IVMADDRP",207,0)
 I SSN="NO SSN" Q SSN
"RTN","IVMADDRP",208,0)
 I $L(SSN)=9 S FMTSSN=SSN
"RTN","IVMADDRP",209,0)
 I $L(SSN)>9 S FMTSSN=$E(SSN,1,10)  ; Account for pseudo-SSN
"RTN","IVMADDRP",210,0)
 I $L(SSN)<9 D
"RTN","IVMADDRP",211,0)
 . S FMTSSN=""
"RTN","IVMADDRP",212,0)
 . F FMTSSN=$L(SSN):1:9 S FMTSSN=FMTSSN_"0"
"RTN","IVMADDRP",213,0)
 . S FMTSSN=FMTSSN_SSN
"RTN","IVMADDRP",214,0)
 . Q
"RTN","IVMADDRP",215,0)
 Q FMTSSN
"RTN","IVMADDRP",216,0)
HEADER ; Print the header
"RTN","IVMADDRP",217,0)
 N IDX,PGHDR
"RTN","IVMADDRP",218,0)
 S QUIT=0
"RTN","IVMADDRP",219,0)
 I $G(CRT),($G(PAGE)>0) I $$PAUSE(0) S QUIT=1 Q
"RTN","IVMADDRP",220,0)
 S PAGE=$G(PAGE,0),PAGE=PAGE+1,PGHDR="Page: "_$J(PAGE,3)
"RTN","IVMADDRP",221,0)
 W #
"RTN","IVMADDRP",222,0)
 I $G(CRT) W $C(27,91,72,27,91,74)  ; Additional $C to clear screen in Cache'
"RTN","IVMADDRP",223,0)
 S IDX="",IDX=$O(HDR(IDX))
"RTN","IVMADDRP",224,0)
 W "IVM ADDRESS CHANGE LOG REPORT",?71,PGHDR
"RTN","IVMADDRP",225,0)
 W !,$$FMTE^XLFDT(SDATE)_" THRU "_$$FMTE^XLFDT(EDATE)
"RTN","IVMADDRP",226,0)
 I DOS="D" D
"RTN","IVMADDRP",227,0)
 . W !!,"SSN",?12,"NAME",?35,"CHANGE DATE",?49,"PRIOR ADDRESS"
"RTN","IVMADDRP",228,0)
 . W !,"---",?12,"----",?35,"-----------",?49,"--------------"
"RTN","IVMADDRP",229,0)
 . Q
"RTN","IVMADDRP",230,0)
 I DOS="S" D
"RTN","IVMADDRP",231,0)
 . W !!,"SSN",?12,"NAME",?35,"LAST UPDATED",?69,"# ENTRIES"
"RTN","IVMADDRP",232,0)
 . W !,"---",?12,"----",?35,"------------",?69,"---------"
"RTN","IVMADDRP",233,0)
 . Q
"RTN","IVMADDRP",234,0)
 Q
"RTN","IVMADDRP",235,0)
PAUSE(RESP) ; Prompt user for next page or quit
"RTN","IVMADDRP",236,0)
 N DIR,DIRUT,DUOUT,DTOUT,U,X,Y
"RTN","IVMADDRP",237,0)
 W !
"RTN","IVMADDRP",238,0)
 S DIR(0)="E"
"RTN","IVMADDRP",239,0)
 D ^DIR
"RTN","IVMADDRP",240,0)
 I 'Y S RESP=1
"RTN","IVMADDRP",241,0)
 Q RESP
"RTN","IVMLDEM6")
0^1^B60562553
"RTN","IVMLDEM6",1,0)
IVMLDEM6 ;ALB/KCL/BRM/PHH - IVM DEMOGRAPHIC UPLOAD FILE ADDRESS ; 03/17/2006
"RTN","IVMLDEM6",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**10,58,73,79,108,106**; 21-OCT-94
"RTN","IVMLDEM6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLDEM6",4,0)
 ;
"RTN","IVMLDEM6",5,0)
 ;
"RTN","IVMLDEM6",6,0)
ADDR(DFN,IVMDA2,IVMDA1,IVMDA,IVMPPICK) ; - function to check if uploadable field
"RTN","IVMLDEM6",7,0)
 ;                          is an address field and return a flag
"RTN","IVMLDEM6",8,0)
 ;
"RTN","IVMLDEM6",9,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEM6",10,0)
 ;           IVMDA2  -  pointer to case record in (#301.5) file
"RTN","IVMLDEM6",11,0)
 ;           IVMDA1  -  pointer to PID msg in (#301.501) sub-file
"RTN","IVMLDEM6",12,0)
 ;            IVMDA  -  pointer to record in (#301.511) sub-file
"RTN","IVMLDEM6",13,0)
 ;         IVMPPICK  -  residence phone number and/or another address
"RTN","IVMLDEM6",14,0)
 ;                        field selected
"RTN","IVMLDEM6",15,0)
 ;                      0 - phone or an address field not selected 
"RTN","IVMLDEM6",16,0)
 ;                      1 - address field(s) selected
"RTN","IVMLDEM6",17,0)
 ;                      2 - phone selected
"RTN","IVMLDEM6",18,0)
 ;                      3 - both address field(s) and phone selected
"RTN","IVMLDEM6",19,0)
 ;
"RTN","IVMLDEM6",20,0)
 ; Output: IVMFLAG   -  1 if address field
"RTN","IVMLDEM6",21,0)
 ;                      0 if not an address field
"RTN","IVMLDEM6",22,0)
 ;
"RTN","IVMLDEM6",23,0)
 ;
"RTN","IVMLDEM6",24,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y
"RTN","IVMLDEM6",25,0)
 ;
"RTN","IVMLDEM6",26,0)
 ; - initialize flags
"RTN","IVMLDEM6",27,0)
 S IVMFLAG=0
"RTN","IVMLDEM6",28,0)
 ;
"RTN","IVMLDEM6",29,0)
 ; - check for required parameters
"RTN","IVMLDEM6",30,0)
 I '$G(DFN)!('$G(IVMDA))!('$G(IVMDA1))!'($G(IVMDA2)) G ADDRQ
"RTN","IVMLDEM6",31,0)
 ;
"RTN","IVMLDEM6",32,0)
 ; - get pointer to (#301.92) file from (#301.511) sub-file
"RTN","IVMLDEM6",33,0)
 S IVMPTR=+$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMDA,0)) G ADDRQ:'IVMPTR
"RTN","IVMLDEM6",34,0)
 ;
"RTN","IVMLDEM6",35,0)
ASK I '$D(^IVM(301.92,"AD",+IVMPTR)) G ADDRQ
"RTN","IVMLDEM6",36,0)
 I IVMPPICK=2 G ASK1
"RTN","IVMLDEM6",37,0)
 W ! S DIR("A")="Do you wish to proceed with this action"
"RTN","IVMLDEM6",38,0)
 S DIR("A",1)="You have selected to update an address field."
"RTN","IVMLDEM6",39,0)
 S DIR("A",2)="You will be required to upload the entire address."
"RTN","IVMLDEM6",40,0)
 S DIR("?")="Enter 'YES' to continue or 'NO' to abort."
"RTN","IVMLDEM6",41,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEM6",42,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",43,0)
 S IVMFLAG=1 G ADDRQ:'Y
"RTN","IVMLDEM6",44,0)
 W ! S DIR("A")="Are you sure that you want to update the complete address"
"RTN","IVMLDEM6",45,0)
 S:$$PHARM(+$G(DFN)) DIR("A",1)="*** WARNING: This patient has ACTIVE PRESCRIPTIONS on file."
"RTN","IVMLDEM6",46,0)
 S DIR("A",2)=""
"RTN","IVMLDEM6",47,0)
 I $$ADRDTCK^IVMLDEM9(+$G(DFN),IVMDA2,IVMDA1) S DIR("A",2)="*** WARNING: The address that you are attempting to file is OLDER than",DIR("A",3)="             the address on file.",DIR("A",4)=""
"RTN","IVMLDEM6",48,0)
 S DIR("?",1)="Enter 'YES' to update the complete address that was received from"
"RTN","IVMLDEM6",49,0)
 S DIR("?")="HEC.  Enter 'NO' to quit."
"RTN","IVMLDEM6",50,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEM6",51,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",52,0)
 S IVMFLAG=1 G ADDRQ:'Y
"RTN","IVMLDEM6",53,0)
 W !,"Filing address fields... "
"RTN","IVMLDEM6",54,0)
 ;
"RTN","IVMLDEM6",55,0)
 ; determine correct address change date/time to use
"RTN","IVMLDEM6",56,0)
 D ADDRDT(DFN,IVMDA2,IVMDA1)
"RTN","IVMLDEM6",57,0)
 ;
"RTN","IVMLDEM6",58,0)
LOOP ;
"RTN","IVMLDEM6",59,0)
 N DGPRIOR D GETPRIOR^DGADDUTL(DFN,.DGPRIOR)
"RTN","IVMLDEM6",60,0)
 ;
"RTN","IVMLDEM6",61,0)
 ; - loop thru fields in ^IVM(301.92,"AD" x-ref
"RTN","IVMLDEM6",62,0)
 S IVMI=0 F  S IVMI=$O(^IVM(301.92,"AD",IVMI)) Q:IVMI']""  D
"RTN","IVMLDEM6",63,0)
 .S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,IVMJ)) Q:IVMJ']""  D
"RTN","IVMLDEM6",64,0)
 ..;
"RTN","IVMLDEM6",65,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEM6",66,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0)) Q:IVMNODE']""
"RTN","IVMLDEM6",67,0)
 ..Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEM6",68,0)
 ..;
"RTN","IVMLDEM6",69,0)
 ..; - check if residence phone number and not selected to upload
"RTN","IVMLDEM6",70,0)
 ..Q:(IVMPPICK=1&(+IVMNODE=$O(^IVM(301.92,"B","PHONE NUMBER [RESIDENCE]",0))))
"RTN","IVMLDEM6",71,0)
 ..; - check if not residence phone number and only phone selected to upload
"RTN","IVMLDEM6",72,0)
 ..Q:(IVMPPICK=2&(+IVMNODE'=$O(^IVM(301.92,"B","PHONE NUMBER [RESIDENCE]",0))))
"RTN","IVMLDEM6",73,0)
 ..;
"RTN","IVMLDEM6",74,0)
 ..; - perform any necessary address field manipulation and
"RTN","IVMLDEM6",75,0)
 ..;   load addr field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEM6",76,0)
 ..D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEM6",77,0)
 ..;
"RTN","IVMLDEM6",78,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEM6",79,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEM6",80,0)
 ;
"RTN","IVMLDEM6",81,0)
 I IVMFLAG W "completed.",! D
"RTN","IVMLDEM6",82,0)
 .N DGCURR
"RTN","IVMLDEM6",83,0)
 .D GETUPDTS^DGADDUTL(DFN,.DGCURR)
"RTN","IVMLDEM6",84,0)
 .D UPDADDLG^DGADDUTL(DFN,.DGPRIOR,.DGCURR)
"RTN","IVMLDEM6",85,0)
 ;
"RTN","IVMLDEM6",86,0)
 ; - if addr is uploaded and phone # is not - ask user delete phone
"RTN","IVMLDEM6",87,0)
 I IVMFLAG,$P($G(^DPT(+DFN,.13)),"^")]"",(2>IVMPPICK) D PHONE
"RTN","IVMLDEM6",88,0)
 S VALMBCK="R"
"RTN","IVMLDEM6",89,0)
 ;
"RTN","IVMLDEM6",90,0)
 ;
"RTN","IVMLDEM6",91,0)
ADDRQ ; - return  -->  1 if uploadable field is an address field
"RTN","IVMLDEM6",92,0)
 ;           -->  0 if uploadable field is not an address field
"RTN","IVMLDEM6",93,0)
 ;
"RTN","IVMLDEM6",94,0)
 I IVMFLAG D RESET^IVMLDEMU
"RTN","IVMLDEM6",95,0)
 Q IVMFLAG
"RTN","IVMLDEM6",96,0)
 ;
"RTN","IVMLDEM6",97,0)
 ;
"RTN","IVMLDEM6",98,0)
UPLOAD(DFN,IVMFIELD,IVMVALUE) ; - file address fields received from IVM
"RTN","IVMLDEM6",99,0)
 ;
"RTN","IVMLDEM6",100,0)
 ;  Input:       DFN  -  as patient IEN
"RTN","IVMLDEM6",101,0)
 ;          IVMFIELD  -  as the field number to be updated
"RTN","IVMLDEM6",102,0)
 ;          IVMVALUE  -  as the value of the field
"RTN","IVMLDEM6",103,0)
 ;
"RTN","IVMLDEM6",104,0)
 ; Output: None
"RTN","IVMLDEM6",105,0)
 ;
"RTN","IVMLDEM6",106,0)
 ;
"RTN","IVMLDEM6",107,0)
 ; - update specified address field in the Patient (#2) file
"RTN","IVMLDEM6",108,0)
 S DIE="^DPT(",DA=DFN,DR=IVMFIELD_"////^S X=IVMVALUE"
"RTN","IVMLDEM6",109,0)
 D ^DIE K DA,DIE,DR
"RTN","IVMLDEM6",110,0)
 ;
"RTN","IVMLDEM6",111,0)
 ; - delete inaccurate Addr Change Site data if Source is not VAMC
"RTN","IVMLDEM6",112,0)
 ;   (trigger x-ref does not fire with 4 slash stuff)
"RTN","IVMLDEM6",113,0)
 I IVMFIELD=.119,IVMVALUE'="VAMC" S FDA(2,+DFN_",",.12)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMLDEM6",114,0)
 ;
"RTN","IVMLDEM6",115,0)
 ; - delete the Bad Address Indicator field
"RTN","IVMLDEM6",116,0)
 I $$BADADR^DGUTL3(DFN) D DELBAI^DGUTL3(DFN)
"RTN","IVMLDEM6",117,0)
 Q
"RTN","IVMLDEM6",118,0)
 ;
"RTN","IVMLDEM6",119,0)
 ;
"RTN","IVMLDEM6",120,0)
PHONE ; - ask user to delete phone # [Residence] from Patient (#2) file
"RTN","IVMLDEM6",121,0)
 D FULL^VALM1
"RTN","IVMLDEM6",122,0)
 W ! S DIR("A")="Is it okay to delete the patient's Phone Number [Residence]"
"RTN","IVMLDEM6",123,0)
 W ! S DIR("A",1)="The patient's address has been updated and the phone number"
"RTN","IVMLDEM6",124,0)
 S DIR("A",2)="remains on file."
"RTN","IVMLDEM6",125,0)
 S DIR("A",3)=" "
"RTN","IVMLDEM6",126,0)
 S DIR("A",4)="Patient Name: "_$P($$PT^IVMUFNC4(+DFN),"^")_" ("_$P($$PT^IVMUFNC4(+DFN),"^",3)_")"
"RTN","IVMLDEM6",127,0)
 S DIR("A",5)="Phone Number [Residence]: "_$P($G(^DPT(+DFN,.13)),"^")
"RTN","IVMLDEM6",128,0)
 S DIR("A",6)=" "
"RTN","IVMLDEM6",129,0)
 S DIR("?",1)="Enter 'YES' to delete the patient's Phone Number [Residence] that is"
"RTN","IVMLDEM6",130,0)
 S DIR("?",2)="currently on file.  Enter 'NO' to quit without deleting the patient's"
"RTN","IVMLDEM6",131,0)
 S DIR("?")="Phone Number [Residence]."
"RTN","IVMLDEM6",132,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEM6",133,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",134,0)
 S:Y $P(^DPT(DFN,.13),"^")="" W !!,"Patient's Phone Number [Residence] has ",$S(Y:"",1:"not "),"been deleted."
"RTN","IVMLDEM6",135,0)
 Q
"RTN","IVMLDEM6",136,0)
 ;
"RTN","IVMLDEM6",137,0)
ASK1 ; - phone selected to be uploaded - address fields not selected
"RTN","IVMLDEM6",138,0)
 W ! S DIR("A")="Okay to update the PHONE NUMBER [RESIDENCE] field"
"RTN","IVMLDEM6",139,0)
 S DIR("?",1)="Enter 'YES' to update the patient's Phone Number [Residence] that was"
"RTN","IVMLDEM6",140,0)
 S DIR("?",2)="received from HEC.  Enter 'NO' to quit."
"RTN","IVMLDEM6",141,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","IVMLDEM6",142,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",143,0)
 S IVMFLAG=1 G ADDRQ:'Y
"RTN","IVMLDEM6",144,0)
 W !,"Updating PHONE NUMBER [RESIDENCE] field... "
"RTN","IVMLDEM6",145,0)
 G LOOP
"RTN","IVMLDEM6",146,0)
 ;
"RTN","IVMLDEM6",147,0)
AUTOADDR(DFN,IVMPPICK,NOUPDT) ;
"RTN","IVMLDEM6",148,0)
 ; this functionality is copied from above and modified to allow
"RTN","IVMLDEM6",149,0)
 ; an automated upload of patient address information as stipulated
"RTN","IVMLDEM6",150,0)
 ; in the business requirements for Address Indexing to support GMT
"RTN","IVMLDEM6",151,0)
 ;
"RTN","IVMLDEM6",152,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEM6",153,0)
 ;         IVMPPICK  -  residence phone number and/or another address
"RTN","IVMLDEM6",154,0)
 ;                        field selected
"RTN","IVMLDEM6",155,0)
 ;                      1 - address field(s) selected
"RTN","IVMLDEM6",156,0)
 ;                      3 - both address field(s) and phone selected
"RTN","IVMLDEM6",157,0)
 ;           NOUPDT  -  (optional) this flag is set when the incoming
"RTN","IVMLDEM6",158,0)
 ;                      address data is older than the existing
"RTN","IVMLDEM6",159,0)
 ;                      address in the Patient (#2) file
"RTN","IVMLDEM6",160,0)
 ;
"RTN","IVMLDEM6",161,0)
 ; Output: IVMFLAG   -  1 if address fields updated
"RTN","IVMLDEM6",162,0)
 ;                      0 if address fields not updated
"RTN","IVMLDEM6",163,0)
 ;
"RTN","IVMLDEM6",164,0)
 ;
"RTN","IVMLDEM6",165,0)
 ;
"RTN","IVMLDEM6",166,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y
"RTN","IVMLDEM6",167,0)
 ;
"RTN","IVMLDEM6",168,0)
 ; - initialize flags
"RTN","IVMLDEM6",169,0)
 S IVMFLAG=0
"RTN","IVMLDEM6",170,0)
 S:'$G(NOUPDT) NOUPDT=0
"RTN","IVMLDEM6",171,0)
 ;
"RTN","IVMLDEM6",172,0)
 ; - check for required parameters
"RTN","IVMLDEM6",173,0)
 Q:'$G(DFN) IVMFLAG
"RTN","IVMLDEM6",174,0)
 ;
"RTN","IVMLDEM6",175,0)
 N DGPRIOR D GETPRIOR^DGADDUTL(DFN,.DGPRIOR)
"RTN","IVMLDEM6",176,0)
 ;
"RTN","IVMLDEM6",177,0)
 S IVMDA2=$G(IVM3015)
"RTN","IVMLDEM6",178,0)
 Q:'$G(IVMDA2) IVMFLAG
"RTN","IVMLDEM6",179,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMLDEM6",180,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1)
"RTN","IVMLDEM6",181,0)
 Q:'IVMDA1 IVMFLAG
"RTN","IVMLDEM6",182,0)
 ;
"RTN","IVMLDEM6",183,0)
 S IVMI=0 F  S IVMI=$O(^IVM(301.92,"AD",IVMI)) Q:IVMI']""  D
"RTN","IVMLDEM6",184,0)
 .S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,IVMJ)) Q:IVMJ']""  D
"RTN","IVMLDEM6",185,0)
 ..;
"RTN","IVMLDEM6",186,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEM6",187,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEM6",188,0)
 ..I ('+IVMNODE)!($P(IVMNODE,"^",2)']"") Q
"RTN","IVMLDEM6",189,0)
 ..;
"RTN","IVMLDEM6",190,0)
 ..; - check if residence phone number -> do not auto-upload
"RTN","IVMLDEM6",191,0)
 ..I (IVMPPICK=1&(+IVMNODE=$O(^IVM(301.92,"B","PHONE NUMBER [RESIDENCE]",0)))) D DEMBULL^IVMPREC6 Q
"RTN","IVMLDEM6",192,0)
 ..;
"RTN","IVMLDEM6",193,0)
 ..; don't auto-update if there is an active Prescription record and
"RTN","IVMLDEM6",194,0)
 ..; the Bad Address Indicator is null
"RTN","IVMLDEM6",195,0)
 ..I ('NOUPDT),$$PHARM(+DFN),'$$BADADR^DGUTL3(+DFN) D DEMBULL^IVMPREC6 Q
"RTN","IVMLDEM6",196,0)
 ..;
"RTN","IVMLDEM6",197,0)
 ..; - load addr field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEM6",198,0)
 ..I 'NOUPDT D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEM6",199,0)
 ..;
"RTN","IVMLDEM6",200,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEM6",201,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEM6",202,0)
 ..; - if no display or uploadable fields left, then delete the PID
"RTN","IVMLDEM6",203,0)
 ..;   segment
"RTN","IVMLDEM6",204,0)
 ..I '$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,0),'$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,1) D
"RTN","IVMLDEM6",205,0)
 ...D DELETE^IVMLDEM5(IVMDA2,IVMDA1," ") ; Dummy up name parameter
"RTN","IVMLDEM6",206,0)
 I IVMFLAG D
"RTN","IVMLDEM6",207,0)
 .N DGCURR
"RTN","IVMLDEM6",208,0)
 .D GETUPDTS^DGADDUTL(DFN,.DGCURR)
"RTN","IVMLDEM6",209,0)
 .D UPDADDLG^DGADDUTL(DFN,.DGPRIOR,.DGCURR)
"RTN","IVMLDEM6",210,0)
 Q IVMFLAG
"RTN","IVMLDEM6",211,0)
 ;
"RTN","IVMLDEM6",212,0)
ADDRDT(DFN,IVMDA2,IVMDA1) ;
"RTN","IVMLDEM6",213,0)
 ; - validate Address Change Dt/Tm before filing
"RTN","IVMLDEM6",214,0)
 ;   if incoming address is accepted and the change date is older
"RTN","IVMLDEM6",215,0)
 ;   than what's on file, then use today's date for Addr Chg Dt/Tm
"RTN","IVMLDEM6",216,0)
 ;
"RTN","IVMLDEM6",217,0)
 Q:'$$ADRDTCK^IVMLDEM9(DFN,IVMDA2,IVMDA1)
"RTN","IVMLDEM6",218,0)
 N FDA,IEN92,IVMDA,IENS,ERR
"RTN","IVMLDEM6",219,0)
 S IEN92=$O(^IVM(301.92,"C","RF171","")) Q:'IEN92
"RTN","IVMLDEM6",220,0)
 Q:'$D(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IEN92))
"RTN","IVMLDEM6",221,0)
 S IVMDA=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IEN92,"")) Q:'IVMDA
"RTN","IVMLDEM6",222,0)
 S IENS=IVMDA_","_IVMDA1_","_IVMDA2_","
"RTN","IVMLDEM6",223,0)
 S FDA(301.511,IENS,.02)=$$NOW^XLFDT
"RTN","IVMLDEM6",224,0)
 D FILE^DIE("","FDA","ERR")
"RTN","IVMLDEM6",225,0)
 Q
"RTN","IVMLDEM6",226,0)
 ;
"RTN","IVMLDEM6",227,0)
PHARM(DFN) ;does this patient have active pharmacy prescriptions?
"RTN","IVMLDEM6",228,0)
 ;
"RTN","IVMLDEM6",229,0)
 ;External reference to $$EN^PSSRXACT supported by IA #4237
"RTN","IVMLDEM6",230,0)
 ;
"RTN","IVMLDEM6",231,0)
 Q $S('$G(DFN):0,1:$$EN^PSSRXACT(DFN))
"VER")
8.0^22.0
**INSTALL NAME**
DG*5.3*695
"BLD",6023,0)
DG*5.3*695^REGISTRATION^0^3060330^y
"BLD",6023,1,0)
^^1^1^3051207^
"BLD",6023,1,1,0)
 Permanent Address abort still updating DT/TM Stamp
"BLD",6023,4,0)
^9.64PA^^
"BLD",6023,6)
1^
"BLD",6023,"INID")
n^n^n
"BLD",6023,"INIT")
START^DG53695
"BLD",6023,"KRN",0)
^9.67PA^8989.52^19
"BLD",6023,"KRN",.4,0)
.4
"BLD",6023,"KRN",.401,0)
.401
"BLD",6023,"KRN",.402,0)
.402
"BLD",6023,"KRN",.403,0)
.403
"BLD",6023,"KRN",.5,0)
.5
"BLD",6023,"KRN",.84,0)
.84
"BLD",6023,"KRN",3.6,0)
3.6
"BLD",6023,"KRN",3.8,0)
3.8
"BLD",6023,"KRN",9.2,0)
9.2
"BLD",6023,"KRN",9.8,0)
9.8
"BLD",6023,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6023,"KRN",9.8,"NM",1,0)
DGADDUTL^^0^B43598540
"BLD",6023,"KRN",9.8,"NM",2,0)
DG53695^^0^B45551620
"BLD",6023,"KRN",9.8,"NM","B","DG53695",2)

"BLD",6023,"KRN",9.8,"NM","B","DGADDUTL",1)
 
"BLD",6023,"KRN",19,0)
19
"BLD",6023,"KRN",19.1,0)
19.1
"BLD",6023,"KRN",101,0)
101
"BLD",6023,"KRN",409.61,0)
409.61
"BLD",6023,"KRN",771,0)
771
"BLD",6023,"KRN",870,0)
870
"BLD",6023,"KRN",8989.51,0)
8989.51
"BLD",6023,"KRN",8989.52,0)
8989.52
"BLD",6023,"KRN",8994,0)
8994
"BLD",6023,"KRN","B",.4,.4)
 
"BLD",6023,"KRN","B",.401,.401)
 
"BLD",6023,"KRN","B",.402,.402)
 
"BLD",6023,"KRN","B",.403,.403)
 
"BLD",6023,"KRN","B",.5,.5)
 
"BLD",6023,"KRN","B",.84,.84)
 
"BLD",6023,"KRN","B",3.6,3.6)
 
"BLD",6023,"KRN","B",3.8,3.8)
 
"BLD",6023,"KRN","B",9.2,9.2)
 
"BLD",6023,"KRN","B",9.8,9.8)
 
"BLD",6023,"KRN","B",19,19)
 
"BLD",6023,"KRN","B",19.1,19.1)
 
"BLD",6023,"KRN","B",101,101)
 
"BLD",6023,"KRN","B",409.61,409.61)
 
"BLD",6023,"KRN","B",771,771)
 
"BLD",6023,"KRN","B",870,870)
 
"BLD",6023,"KRN","B",8989.51,8989.51)
 
"BLD",6023,"KRN","B",8989.52,8989.52)
 
"BLD",6023,"KRN","B",8994,8994)
 
"BLD",6023,"QUES",0)
^9.62^^
"BLD",6023,"REQB",0)
^9.611^1^1
"BLD",6023,"REQB",1,0)
DG*5.3*658^2
"BLD",6023,"REQB","B","DG*5.3*658",1)
 
"INIT")
START^DG53695
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
695^3060330^123456813
"PKG",5,22,1,"PAH",1,1,0)
^^1^1^3060330
"PKG",5,22,1,"PAH",1,1,1,0)
 Permanent Address abort still updating DT/TM Stamp
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DG53695")
0^2^B45551620
"RTN","DG53695",1,0)
DG53695 ;ALB/PHH - DG*5.3*695 Patient Cleanup ; 2/24/2006
"RTN","DG53695",2,0)
 ;;5.3;Registration;**695**;Aug 13, 1993
"RTN","DG53695",3,0)
 Q
"RTN","DG53695",4,0)
RESET ; Reset the data for the cleanup process
"RTN","DG53695",5,0)
 K ^XTMP($$NAMESPC)
"RTN","DG53695",6,0)
 Q
"RTN","DG53695",7,0)
TEST ; Simulate Live Run
"RTN","DG53695",8,0)
 N MODE
"RTN","DG53695",9,0)
 S MODE=0
"RTN","DG53695",10,0)
START ; Start Processor
"RTN","DG53695",11,0)
 N NAMESPC,QTIME
"RTN","DG53695",12,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53695",13,0)
 Q:$$RUNCHK(NAMESPC)   ; Quit if already running or has run to completion
"RTN","DG53695",14,0)
 Q:$$QTIME(.QTIME)
"RTN","DG53695",15,0)
 S:$D(^XTMP(NAMESPC,"CONFIG","RUN MODE")) MODE=^XTMP(NAMESPC,"CONFIG","RUN MODE")
"RTN","DG53695",16,0)
 S:'$D(^XTMP(NAMESPC,"CONFIG","RUN MODE")) ^XTMP(NAMESPC,"CONFIG","RUN MODE")=$S($G(MODE)=0:0,1:1)
"RTN","DG53695",17,0)
 S ^XTMP(NAMESPC,"CONFIG","USER")=$S($G(DUZ)'="":DUZ,1:"UNKNOWN")
"RTN","DG53695",18,0)
 S:'$$QUEUE(QTIME) ^XTMP(NAMESPC,"CONFIG","RUNNING")=""
"RTN","DG53695",19,0)
 Q
"RTN","DG53695",20,0)
NAMESPC() ; API returns the name space for this patch
"RTN","DG53695",21,0)
 Q "DG695"
"RTN","DG53695",22,0)
RUNCHK(NAMESPC) ; Check to see if clean up is already running
"RTN","DG53695",23,0)
 Q:NAMESPC="" 1                   ; Name Space must be defined
"RTN","DG53695",24,0)
 Q:$D(^XTMP(NAMESPC,"CONFIG","RUNNING")) 1
"RTN","DG53695",25,0)
 Q:$D(^XTMP(NAMESPC,"CONFIG","COMPLETE")) 1
"RTN","DG53695",26,0)
 Q 0
"RTN","DG53695",27,0)
QTIME(WHEN) ; Get the run time for queuing
"RTN","DG53695",28,0)
 N %,%H,%I,X
"RTN","DG53695",29,0)
 D NOW^%DTC
"RTN","DG53695",30,0)
 S WHEN=$P(%,".")_"."_$E($P(%,".",2),1,4)
"RTN","DG53695",31,0)
 Q 0
"RTN","DG53695",32,0)
QUEUE(ZTDTH) ; Queue the process
"RTN","DG53695",33,0)
 N NAMESPC,QUEERR,ZTDESC,ZTRTN,ZTSK,ZTIO
"RTN","DG53695",34,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53695",35,0)
 S QUEERR=0
"RTN","DG53695",36,0)
 S ZTRTN="CLEAN^DG53"_$P(NAMESPC,"DG",2)
"RTN","DG53695",37,0)
 S ZTDESC=NAMESPC_" - Patient Cleanup Process"
"RTN","DG53695",38,0)
 S ZTIO=""
"RTN","DG53695",39,0)
 D ^%ZTLOAD
"RTN","DG53695",40,0)
 K ^XTMP(NAMESPC,"CONFIG","ZTSK")
"RTN","DG53695",41,0)
 I '$D(ZTSK) S ^XTMP(NAMESPC,"CONFIG","ZTSK")="Unable to queue post-install process.",QUEERR=1
"RTN","DG53695",42,0)
 I $D(ZTSK) S ^XTMP(NAMESPC,"CONFIG","ZTSK")="Post-install queued. Task ID: "_$G(ZTSK)
"RTN","DG53695",43,0)
 D HOME^%ZIS
"RTN","DG53695",44,0)
 Q QUEERR
"RTN","DG53695",45,0)
CLEAN ; Actual cleanup process
"RTN","DG53695",46,0)
 N NAMESPC,MODE,USER,TASKID,%,%H,%I,X,X1,X2,CHKCNT,ZTSTOP,TMSWT,TOTDPT,DFN
"RTN","DG53695",47,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53695",48,0)
 K ^XTMP(NAMESPC,"CONFIG","ABORT TIME")
"RTN","DG53695",49,0)
 S MODE=$G(^XTMP(NAMESPC,"CONFIG","RUN MODE"),0)
"RTN","DG53695",50,0)
 S USER=$G(^XTMP(NAMESPC,"CONFIG","USER"),"UNKNOWN")
"RTN","DG53695",51,0)
 S TASKID=$G(^XTMP(NAMESPC,"CONFIG","ZTSK"),"UNKNOWN")
"RTN","DG53695",52,0)
 ;
"RTN","DG53695",53,0)
 I '$D(^XTMP(NAMESPC,0)) D
"RTN","DG53695",54,0)
 .K ^XTMP(NAMESPC)
"RTN","DG53695",55,0)
 .S ^XTMP(NAMESPC,"CONFIG","DFN")=0
"RTN","DG53695",56,0)
 .S ^XTMP(NAMESPC,"CONFIG","TOTPR")=0
"RTN","DG53695",57,0)
 .S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=0
"RTN","DG53695",58,0)
 .S ^XTMP(NAMESPC,"CONFIG","RUN MODE")=MODE
"RTN","DG53695",59,0)
 .S ^XTMP(NAMESPC,"CONFIG","USER")=USER
"RTN","DG53695",60,0)
 .S ^XTMP(NAMESPC,"CONFIG","ZTSK")=TASKID
"RTN","DG53695",61,0)
 .D NOW^%DTC
"RTN","DG53695",62,0)
 .S ^XTMP(NAMESPC,"CONFIG","START TIME")=%
"RTN","DG53695",63,0)
 .S X1=$$DT^XLFDT,X2=90
"RTN","DG53695",64,0)
 .D C^%DTC
"RTN","DG53695",65,0)
 .S ^XTMP(NAMESPC,0)=X_U_$$DT^XLFDT_U_NAMESPC_" - PATIENT CLEANUP"
"RTN","DG53695",66,0)
 ;
"RTN","DG53695",67,0)
 S CHKCNT=250,(ZTSTOP,TMSWT)=0,TOTDPT=+$P($G(^DPT(0)),"^",4)
"RTN","DG53695",68,0)
 S DFN=$G(^XTMP(NAMESPC,"CONFIG","DFN"))
"RTN","DG53695",69,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN!(TMSWT)  D
"RTN","DG53695",70,0)
 .D PROC(DFN,MODE)
"RTN","DG53695",71,0)
 .S ^XTMP(NAMESPC,"CONFIG","TOTPR")=$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))+1
"RTN","DG53695",72,0)
 .S ^XTMP(NAMESPC,"CONFIG","DFN")=DFN
"RTN","DG53695",73,0)
 .I TOTDPT D
"RTN","DG53695",74,0)
 ..S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=+$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))/TOTDPT
"RTN","DG53695",75,0)
 ..S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=+$P((^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")*100),".")
"RTN","DG53695",76,0)
 .I +$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))#CHKCNT=0 D
"RTN","DG53695",77,0)
 ..S TMSWT=$$STOPIT()
"RTN","DG53695",78,0)
 ..I TMSWT D
"RTN","DG53695",79,0)
 ...S ZTSTOP=1
"RTN","DG53695",80,0)
 ...N %,%H,%I,X
"RTN","DG53695",81,0)
 ...D NOW^%DTC
"RTN","DG53695",82,0)
 ...S ^XTMP(NAMESPC,"CONFIG","ABORT TIME")=%
"RTN","DG53695",83,0)
 ...D ABORTMSG
"RTN","DG53695",84,0)
 ;
"RTN","DG53695",85,0)
 I 'DFN,'TMSWT D
"RTN","DG53695",86,0)
 .N %,%H,%I,X
"RTN","DG53695",87,0)
 .D NOW^%DTC
"RTN","DG53695",88,0)
 .S ^XTMP(NAMESPC,"CONFIG","COMPLETE")=%
"RTN","DG53695",89,0)
 .S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=100
"RTN","DG53695",90,0)
 .D DONEMSG
"RTN","DG53695",91,0)
 ;
"RTN","DG53695",92,0)
 K ^XTMP(NAMESPC,"CONFIG","RUNNING")
"RTN","DG53695",93,0)
 Q
"RTN","DG53695",94,0)
PROC(DFN,MODE) ; Process the DFN
"RTN","DG53695",95,0)
 ; Check for orphan .3 and .11 nodes without the 0 node
"RTN","DG53695",96,0)
 N NAMESPC,FLAG,NODE,DA,DIK
"RTN","DG53695",97,0)
 Q:$D(^DPT(DFN,0))
"RTN","DG53695",98,0)
 S NAMESPC=$$NAMESPC,FLAG=1,NODE=0
"RTN","DG53695",99,0)
 F  S NODE=$O(^DPT(DFN,NODE)) Q:'NODE!('FLAG)  D
"RTN","DG53695",100,0)
 .I NODE'=.3,NODE'=.11 S FLAG=0
"RTN","DG53695",101,0)
 ;
"RTN","DG53695",102,0)
 ; If it's an orphan .3 and .11, clean it up
"RTN","DG53695",103,0)
 I FLAG D
"RTN","DG53695",104,0)
 .Q:'$D(^DPT(DFN,.11))
"RTN","DG53695",105,0)
 .Q:'$D(^DPT(DFN,.3))
"RTN","DG53695",106,0)
 .S DA=DFN,DIK="^DPT("
"RTN","DG53695",107,0)
 .S ^XTMP(NAMESPC,"DATA",DFN)=""
"RTN","DG53695",108,0)
 .S ^XTMP(NAMESPC,"CONFIG","ANOMALY")=$G(^XTMP(NAMESPC,"CONFIG","ANOMALY"))+1
"RTN","DG53695",109,0)
 .;
"RTN","DG53695",110,0)
 .; Save off old anomalies (just in case...)
"RTN","DG53695",111,0)
 .M ^XTMP(NAMESPC,"DATA",DFN,"PREVIOUS")=^DPT(DFN)
"RTN","DG53695",112,0)
 .;
"RTN","DG53695",113,0)
 .; Only delete if this is running in live mode
"RTN","DG53695",114,0)
 .I MODE D
"RTN","DG53695",115,0)
 ..D ^DIK
"RTN","DG53695",116,0)
 .S ^XTMP(NAMESPC,"CONFIG","SUCCESS")=$G(^XTMP(NAMESPC,"CONFIG","SUCCESS"))+1
"RTN","DG53695",117,0)
 Q
"RTN","DG53695",118,0)
STOPIT() ; Checks if user requested task to stop
"RTN","DG53695",119,0)
 N X,STOPIT
"RTN","DG53695",120,0)
 S STOPIT=0
"RTN","DG53695",121,0)
 S X=$$S^%ZTLOAD
"RTN","DG53695",122,0)
 I X D  ;
"RTN","DG53695",123,0)
 .S STOPIT=1
"RTN","DG53695",124,0)
 .I $G(ZTSK) S ZTSTOP=1
"RTN","DG53695",125,0)
 Q STOPIT
"RTN","DG53695",126,0)
ABORTMSG ; Send the user aborted message:
"RTN","DG53695",127,0)
 N NAMESPC,NAMESPCN,TMP,XMY,XMDUZ,XMTEXT,XMSUB
"RTN","DG53695",128,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53695",129,0)
 S NAMESPCN=$P(NAMESPC,"DG",2)
"RTN","DG53695",130,0)
 S XMY(DUZ)="",XMDUZ="DG PACKAGE",XMTEXT="TMP("_NAMESPCN_","
"RTN","DG53695",131,0)
 S XMSUB="DG*5.3*"_NAMESPCN_": PATIENT CLEANUP - PROCESS STOPPED BY USER"
"RTN","DG53695",132,0)
 S TMP(NAMESPCN,1)="CLEANUP PROCESSING"
"RTN","DG53695",133,0)
 S TMP(NAMESPCN,2)="------------------"
"RTN","DG53695",134,0)
 S TMP(NAMESPCN,3)=""
"RTN","DG53695",135,0)
 S TMP(NAMESPCN,4)="The cleanup process was aborted prematurely.  Here is the current status:"
"RTN","DG53695",136,0)
 S TMP(NAMESPCN,5)=""
"RTN","DG53695",137,0)
 S TMP(NAMESPCN,6)="  Start Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","START TIME")),"P")
"RTN","DG53695",138,0)
 S TMP(NAMESPCN,7)="    End Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","ABORT TIME")),"P")
"RTN","DG53695",139,0)
 S TMP(NAMESPCN,8)=""
"RTN","DG53695",140,0)
 S TMP(NAMESPCN,9)="Current Counts: "
"RTN","DG53695",141,0)
 S TMP(NAMESPCN,10)="       Total Patient Records Processed: "_+$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))
"RTN","DG53695",142,0)
 S TMP(NAMESPCN,11)="             Total Anomalies Corrected: "_+$G(^XTMP(NAMESPC,"CONFIG","SUCCESS"))
"RTN","DG53695",143,0)
 S TMP(NAMESPCN,12)="                  Percentage Completed: "_+$G(^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE"))_"%"
"RTN","DG53695",144,0)
 S TMP(NAMESPCN,13)=""
"RTN","DG53695",145,0)
 S TMP(NAMESPCN,14)=""
"RTN","DG53695",146,0)
 D ^XMD
"RTN","DG53695",147,0)
 Q
"RTN","DG53695",148,0)
DONEMSG ; Send the user aborted message:
"RTN","DG53695",149,0)
 N NAMESPC,NAMESPCN,TMP,XMY,XMDUZ,XMTEXT,XMSUB
"RTN","DG53695",150,0)
 S NAMESPC=$$NAMESPC
"RTN","DG53695",151,0)
 S NAMESPCN=$P(NAMESPC,"DG",2)
"RTN","DG53695",152,0)
 S XMY(DUZ)="",XMDUZ="DG PACKAGE",XMTEXT="TMP("_NAMESPCN_","
"RTN","DG53695",153,0)
 S XMSUB="DG*5.3*"_NAMESPCN_": PATIENT CLEANUP - SUMMARY REPORT"
"RTN","DG53695",154,0)
 S TMP(NAMESPCN,1)="CLEANUP PROCESSING"
"RTN","DG53695",155,0)
 S TMP(NAMESPCN,2)="------------------"
"RTN","DG53695",156,0)
 S TMP(NAMESPCN,3)=""
"RTN","DG53695",157,0)
 S TMP(NAMESPCN,4)="The cleanup has run to completion.  Here are the results:"
"RTN","DG53695",158,0)
 S TMP(NAMESPCN,5)=""
"RTN","DG53695",159,0)
 S TMP(NAMESPCN,6)="  Start Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","START TIME")),"P")
"RTN","DG53695",160,0)
 S TMP(NAMESPCN,7)="    End Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","COMPLETE")),"P")
"RTN","DG53695",161,0)
 S TMP(NAMESPCN,8)=""
"RTN","DG53695",162,0)
 S TMP(NAMESPCN,9)="Current Counts: "
"RTN","DG53695",163,0)
 S TMP(NAMESPCN,10)="       Total Patient Records Processed: "_+$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))
"RTN","DG53695",164,0)
 S TMP(NAMESPCN,11)="             Total Anomalies Corrected: "_+$G(^XTMP(NAMESPC,"CONFIG","SUCCESS"))
"RTN","DG53695",165,0)
 S TMP(NAMESPCN,12)="                  Percentage Completed: 100%"
"RTN","DG53695",166,0)
 S TMP(NAMESPCN,13)=""
"RTN","DG53695",167,0)
 S TMP(NAMESPCN,14)=""
"RTN","DG53695",168,0)
 D ^XMD
"RTN","DG53695",169,0)
 Q
"RTN","DGADDUTL")
0^1^B43598540
"RTN","DGADDUTL",1,0)
DGADDUTL ;ALB/PHH,EG-PATIENT ADDRESS; 12/06/2005
"RTN","DGADDUTL",2,0)
 ;;5.3;Registration;**658,695**;Aug 13, 1993
"RTN","DGADDUTL",3,0)
 Q
"RTN","DGADDUTL",4,0)
ADDR ; validate/edit Patient address (entry for DG ADDRESS UPDATE option)
"RTN","DGADDUTL",5,0)
 N %,QUIT,DIC,Y,DFN,USERSEL
"RTN","DGADDUTL",6,0)
ADDRLOOP ;
"RTN","DGADDUTL",7,0)
 W !!
"RTN","DGADDUTL",8,0)
 K DIC,Y,DFN,USERSEL
"RTN","DGADDUTL",9,0)
 S DIC="^DPT(",DIC(0)="AEMZQ",DIC("A")="Veteran Name/SSN: " D ^DIC
"RTN","DGADDUTL",10,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","DGADDUTL",11,0)
 Q:Y'>0
"RTN","DGADDUTL",12,0)
 ;
"RTN","DGADDUTL",13,0)
 S DFN=+Y,QUIT=0
"RTN","DGADDUTL",14,0)
 F  D  Q:QUIT
"RTN","DGADDUTL",15,0)
 .W !!,"Do you want to update the (P)ermanent Address, (T)emporary Address, or (B)oth? "
"RTN","DGADDUTL",16,0)
 .R USERSEL:300
"RTN","DGADDUTL",17,0)
 .I '$T S USERSEL="^"
"RTN","DGADDUTL",18,0)
 .I USERSEL["^"!(USERSEL="") S QUIT=1 Q
"RTN","DGADDUTL",19,0)
 .S USERSEL=$TR(USERSEL,"ptb","PTB")
"RTN","DGADDUTL",20,0)
 .I USERSEL'="P",USERSEL'="T",USERSEL'="B" D  Q
"RTN","DGADDUTL",21,0)
 ..W !,"Invalid selection!"
"RTN","DGADDUTL",22,0)
 .I USERSEL="P"!(USERSEL="B") W ! D UPDATE(DFN,"PERM")
"RTN","DGADDUTL",23,0)
 .I USERSEL="T"!(USERSEL="B") D UPDATE(DFN,"TEMP")
"RTN","DGADDUTL",24,0)
 .S QUIT=1
"RTN","DGADDUTL",25,0)
 G ADDRLOOP
"RTN","DGADDUTL",26,0)
ADD(DFN) ; validate/edit Patient address (entry point for routine DGREG)
"RTN","DGADDUTL",27,0)
 ;         Input  -- DFN
"RTN","DGADDUTL",28,0)
 ;
"RTN","DGADDUTL",29,0)
 N RETVAL,ADDYN
"RTN","DGADDUTL",30,0)
 S (RETVAL,ADDYN)=0
"RTN","DGADDUTL",31,0)
 F  D  Q:ADDYN
"RTN","DGADDUTL",32,0)
 .S ADDYN=$$ADDYN("Do you want to validate/edit the Patient's Address")
"RTN","DGADDUTL",33,0)
 .S RETVAL=ADDYN
"RTN","DGADDUTL",34,0)
 .I ADDYN'=1,ADDYN'=2 S (ADDYN,RETVAL)=0
"RTN","DGADDUTL",35,0)
 .I 'ADDYN W !?5,"Enter 'YES' to validate/edit Patient's Address or 'NO' to continue."
"RTN","DGADDUTL",36,0)
 I ADDYN=1,$G(DFN)'="",$D(^DPT(DFN,0)) D
"RTN","DGADDUTL",37,0)
 .D UPDATE(DFN,"PERM")
"RTN","DGADDUTL",38,0)
 .S RETVAL=1
"RTN","DGADDUTL",39,0)
 Q RETVAL
"RTN","DGADDUTL",40,0)
ADDYN(PROMPT) ; Yes/No Prompt to Edit/Validate Address
"RTN","DGADDUTL",41,0)
 ;         Input  -- None
"RTN","DGADDUTL",42,0)
 ;         Output --  1 = YES
"RTN","DGADDUTL",43,0)
 ;                    2 = NO
"RTN","DGADDUTL",44,0)
 ;                   -1 = Aborted
"RTN","DGADDUTL",45,0)
 ;
"RTN","DGADDUTL",46,0)
 N %
"RTN","DGADDUTL",47,0)
 W !,PROMPT
"RTN","DGADDUTL",48,0)
 D YN^DICN
"RTN","DGADDUTL",49,0)
 Q %
"RTN","DGADDUTL",50,0)
UPDATE(DFN,TYPE) ; Update the Address
"RTN","DGADDUTL",51,0)
 ;         Input  -- TYPE = "PERM" for Permanent Address
"RTN","DGADDUTL",52,0)
 ;                        = "TEMP" for Temporary Address
"RTN","DGADDUTL",53,0)
 ;         Output -- None
"RTN","DGADDUTL",54,0)
 ;         
"RTN","DGADDUTL",55,0)
 I TYPE'="PERM",TYPE'="TEMP" Q
"RTN","DGADDUTL",56,0)
 I TYPE="PERM" D
"RTN","DGADDUTL",57,0)
 .W !
"RTN","DGADDUTL",58,0)
 .N FLG S (FLG(1),FLG(2))=1
"RTN","DGADDUTL",59,0)
 .D ADDRED(DFN,.FLG)
"RTN","DGADDUTL",60,0)
 ;
"RTN","DGADDUTL",61,0)
 I TYPE="TEMP" D
"RTN","DGADDUTL",62,0)
 .D EDITTADR(DFN)
"RTN","DGADDUTL",63,0)
 Q
"RTN","DGADDUTL",64,0)
UPDDTTM(DFN,TYPE) ; Update the PATIENT file #2 with the current date and time
"RTN","DGADDUTL",65,0)
 ;
"RTN","DGADDUTL",66,0)
 N %H,%,X,%Y,%D,%M,%I,ADDDTTM,DIE,DA,DR
"RTN","DGADDUTL",67,0)
 D NOW^%DTC
"RTN","DGADDUTL",68,0)
 S ADDDTTM=%,DIE="^DPT(",DA=DFN
"RTN","DGADDUTL",69,0)
 ;
"RTN","DGADDUTL",70,0)
 ; If it's the Temporary Address, the field is .12113
"RTN","DGADDUTL",71,0)
 ; If not, it should be the Permanent Address and the default field is .118
"RTN","DGADDUTL",72,0)
 S DR=$S(TYPE="TEMP":".12113///^S X=ADDDTTM",1:".118///^S X=ADDDTTM")
"RTN","DGADDUTL",73,0)
 D ^DIE
"RTN","DGADDUTL",74,0)
 Q
"RTN","DGADDUTL",75,0)
ADDRED(DFN,FLG) ; Address Edit (Code copied from DGREGAED and modified)
"RTN","DGADDUTL",76,0)
 ;Input:
"RTN","DGADDUTL",77,0)
 ;  DFN (required) - Interal Entry # of Patient File (#2)
"RTN","DGADDUTL",78,0)
 ;  FLG (optional) - Flags of 1 or 0; if null, 0 is assumed. Details:
"RTN","DGADDUTL",79,0)
 ;    FLG(1) - if 1, let user edit phone numbers (field #.131 and #.132)
"RTN","DGADDUTL",80,0)
 ;    FLG(2) - if 1, display before & after address for user confirmation
"RTN","DGADDUTL",81,0)
 K EASZIPLK
"RTN","DGADDUTL",82,0)
 N DGINPUT,I,X,Y,%
"RTN","DGADDUTL",83,0)
 I $G(DFN)="" Q
"RTN","DGADDUTL",84,0)
 I ($G(DFN)'?.N) Q
"RTN","DGADDUTL",85,0)
 S FLG(1)=$G(FLG(1)),FLG(2)=$G(FLG(2))
"RTN","DGADDUTL",86,0)
 D INPUT^DGREGAED(.DGINPUT,DFN)
"RTN","DGADDUTL",87,0)
 I $G(DGINPUT)=-1 Q
"RTN","DGADDUTL",88,0)
 I $G(FLG(2))=1 D COMPARE^DGREGAED(.DGINPUT,DFN)
"RTN","DGADDUTL",89,0)
 I '$$CONFIRM^DGREGAED() W !,"Change aborted." D EOP^DGREGAED Q
"RTN","DGADDUTL",90,0)
 N DGPRIOR
"RTN","DGADDUTL",91,0)
 D GETPRIOR(DFN,.DGPRIOR)
"RTN","DGADDUTL",92,0)
 D SAVE^DGREGAED(.DGINPUT,DFN)
"RTN","DGADDUTL",93,0)
 Q:'$$FILEYN(.DGPRIOR,.DGINPUT)
"RTN","DGADDUTL",94,0)
 D GETUPDTS(DFN,.DGINPUT)
"RTN","DGADDUTL",95,0)
 D UPDADDLG(DFN,.DGPRIOR,.DGINPUT)
"RTN","DGADDUTL",96,0)
 ; Update the Date/Time Stamp
"RTN","DGADDUTL",97,0)
 D UPDDTTM(DFN,TYPE)
"RTN","DGADDUTL",98,0)
 Q
"RTN","DGADDUTL",99,0)
GETPRIOR(DFN,DGPRIOR) ; Get prior address fields.
"RTN","DGADDUTL",100,0)
 N DGCURR,DGN,DGARRY,DGCIEN,DGST,DGCNTY
"RTN","DGADDUTL",101,0)
 D GETS^DIQ(2,DFN_",",".111;.112;.113;.114;.115;.117;.1112;.131;.132;.121;.118;.119;.12;.122","I","DGCURR")
"RTN","DGADDUTL",102,0)
 F DGN=.111,.112,.113,.114,.115,.117,.1112,.131,.132,.121,.118,.119,.12,.122 D
"RTN","DGADDUTL",103,0)
 . S DGARRY("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",104,0)
 M DGPRIOR=DGARRY("OLD")
"RTN","DGADDUTL",105,0)
 Q
"RTN","DGADDUTL",106,0)
GETUPDTS(DFN,DGINPUT) ; Get current address fields.
"RTN","DGADDUTL",107,0)
 N DGCURR,DGN,DGARRY
"RTN","DGADDUTL",108,0)
 D GETS^DIQ(2,DFN_",",".118;.119;.12;.122","I","DGCURR")
"RTN","DGADDUTL",109,0)
 F DGN=.118,.119,.12,.122 D
"RTN","DGADDUTL",110,0)
 . S DGARRY("NEW",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",111,0)
 M DGINPUT=DGARRY("NEW")
"RTN","DGADDUTL",112,0)
 Q
"RTN","DGADDUTL",113,0)
FILEYN(DGOLD,DGNEW) ; Determine whether or not to file to #301.7
"RTN","DGADDUTL",114,0)
 N RETVAL
"RTN","DGADDUTL",115,0)
 S RETVAL=0
"RTN","DGADDUTL",116,0)
 D
"RTN","DGADDUTL",117,0)
 .I DGOLD(.111)'=$G(DGNEW(.111)) S RETVAL=1 Q
"RTN","DGADDUTL",118,0)
 .I DGOLD(.112)'=$G(DGNEW(.112)) S RETVAL=1 Q
"RTN","DGADDUTL",119,0)
 .I DGOLD(.114)'=$G(DGNEW(.114)) S RETVAL=1 Q
"RTN","DGADDUTL",120,0)
 .I DGOLD(.115)'=$P($G(DGNEW(.115)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",121,0)
 .I DGOLD(.1112)'=$G(DGNEW(.1112)) S RETVAL=1 Q
"RTN","DGADDUTL",122,0)
 .I DGOLD(.117)'=$P($G(DGNEW(.117)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",123,0)
 .I DGOLD(.131)'=$G(DGNEW(.131)) S RETVAL=1 Q
"RTN","DGADDUTL",124,0)
 Q RETVAL
"RTN","DGADDUTL",125,0)
UPDADDLG(DFN,DGPRIOR,DGINPUT) ; Update the IVM ADDRESS CHANGE LOG file #301.7
"RTN","DGADDUTL",126,0)
 ;
"RTN","DGADDUTL",127,0)
 N DGDATA
"RTN","DGADDUTL",128,0)
 ; Zero node:
"RTN","DGADDUTL",129,0)
 S DGDATA(.01)=DGINPUT(.118)
"RTN","DGADDUTL",130,0)
 S DGDATA(1)=DFN
"RTN","DGADDUTL",131,0)
 S DGDATA(2)=DGINPUT(.122)
"RTN","DGADDUTL",132,0)
 S DGDATA(3)=DGINPUT(.119)
"RTN","DGADDUTL",133,0)
 S DGDATA(3.5)=DGINPUT(.12)
"RTN","DGADDUTL",134,0)
 ;
"RTN","DGADDUTL",135,0)
 ; One node:
"RTN","DGADDUTL",136,0)
 S DGDATA(4)=DGPRIOR(.118)
"RTN","DGADDUTL",137,0)
 S DGDATA(5)=DGPRIOR(.122)
"RTN","DGADDUTL",138,0)
 S DGDATA(6)=DGPRIOR(.12)
"RTN","DGADDUTL",139,0)
 S DGDATA(7)=DGPRIOR(.119)
"RTN","DGADDUTL",140,0)
 S DGDATA(8)=DGPRIOR(.131)
"RTN","DGADDUTL",141,0)
 S DGDATA(9)=DGPRIOR(.111)
"RTN","DGADDUTL",142,0)
 S DGDATA(10)=DGPRIOR(.112)
"RTN","DGADDUTL",143,0)
 S DGDATA(11)=DGPRIOR(.114)
"RTN","DGADDUTL",144,0)
 S DGDATA(12)=DGPRIOR(.117)
"RTN","DGADDUTL",145,0)
 S DGDATA(13)=DGPRIOR(.115)
"RTN","DGADDUTL",146,0)
 S DGDATA(14)=DGPRIOR(.1112)
"RTN","DGADDUTL",147,0)
 ;
"RTN","DGADDUTL",148,0)
 I $$ADD^DGENDBS(301.7,,.DGDATA) ;
"RTN","DGADDUTL",149,0)
 Q
"RTN","DGADDUTL",150,0)
EDITTADR(DFN) ; Edit Temporary Address
"RTN","DGADDUTL",151,0)
 N DGPRIOR,DGCH,DGRPAN,DGDR,DGRPS
"RTN","DGADDUTL",152,0)
 I $G(DFN)="" Q
"RTN","DGADDUTL",153,0)
 I ($G(DFN)'?.N) Q
"RTN","DGADDUTL",154,0)
 ;
"RTN","DGADDUTL",155,0)
 ; Get the current Temporary Address and display it
"RTN","DGADDUTL",156,0)
 D GETTADR(DFN,.DGPRIOR)
"RTN","DGADDUTL",157,0)
 D DISPTADR(DFN,.DGPRIOR)
"RTN","DGADDUTL",158,0)
 W !!
"RTN","DGADDUTL",159,0)
 ;
"RTN","DGADDUTL",160,0)
 S DGCH=5,DGRPAN="1,2,3,4,5,",DGDR="",DGRPS=1
"RTN","DGADDUTL",161,0)
 D CHOICE^DGRPP
"RTN","DGADDUTL",162,0)
 D ^DGRPE
"RTN","DGADDUTL",163,0)
 ; Update the Date/Time Stamp
"RTN","DGADDUTL",164,0)
 D UPDDTTM(DFN,TYPE)
"RTN","DGADDUTL",165,0)
 Q
"RTN","DGADDUTL",166,0)
GETTADR(DFN,DGPRIOR) ; Get prior temporary address fields.
"RTN","DGADDUTL",167,0)
 N DGCURR,DGN,DGARRY,DGCIEN,DGST,DGCNTY
"RTN","DGADDUTL",168,0)
 D GETS^DIQ(2,DFN_",",".1211;.1212;.1213;.1214;.1215;.1216;.1217;.1218;.12105;.1219;.12111;.12112;.12113;.12114","I","DGCURR")
"RTN","DGADDUTL",169,0)
 F DGN=.1211,.1212,.1213,.1214,.1215,.1216,.1217,.1218,.12105,.1219,.12111,.12112,.12113,.12114 D
"RTN","DGADDUTL",170,0)
 .S DGARRY("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",171,0)
 M DGPRIOR=DGARRY("OLD")
"RTN","DGADDUTL",172,0)
 Q
"RTN","DGADDUTL",173,0)
DISPTADR(DFN,DGARRY) ; Display Temporary Address
"RTN","DGADDUTL",174,0)
 N DGADRACT,DGADR1,DGADR2,DGADR3,DGCITY,DGSTATE,DGZIP
"RTN","DGADDUTL",175,0)
 N DGCOUNTY,DGPHONE,DGFROMDT,DGTODT
"RTN","DGADDUTL",176,0)
 ;
"RTN","DGADDUTL",177,0)
 S DGADRACT=$G(DGARRY(.12105))
"RTN","DGADDUTL",178,0)
 S DGADR1=$G(DGARRY(.1211))
"RTN","DGADDUTL",179,0)
 S DGADR2=$G(DGARRY(.1212))
"RTN","DGADDUTL",180,0)
 S DGADR3=$G(DGARRY(.1213))
"RTN","DGADDUTL",181,0)
 S DGCITY=$G(DGARRY(.1214))
"RTN","DGADDUTL",182,0)
 S DGSTATE=$G(DGARRY(.1215))
"RTN","DGADDUTL",183,0)
 S DGZIP=$G(DGARRY(.1216))
"RTN","DGADDUTL",184,0)
 S DGCOUNTY=$G(DGARRY(.12111))
"RTN","DGADDUTL",185,0)
 I DGCOUNTY'="",DGSTATE'="",$D(^DIC(5,DGSTATE,1,DGCOUNTY,0)) D
"RTN","DGADDUTL",186,0)
 .S DGCOUNTY=$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^")_" ("_$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^",4)_")"
"RTN","DGADDUTL",187,0)
 I DGADRACT'="Y" S DGCOUNTY="NOT APPLICABLE"
"RTN","DGADDUTL",188,0)
 I DGSTATE'="",$D(^DIC(5,DGSTATE,0)) S DGSTATE=$P(^DIC(5,DGSTATE,0),"^",2)
"RTN","DGADDUTL",189,0)
 S DGPHONE=$G(DGARRY(.1219))
"RTN","DGADDUTL",190,0)
 S DGFROMDT=$$FMTE^XLFDT($G(DGARRY(.1217)))
"RTN","DGADDUTL",191,0)
 S DGTODT=$$FMTE^XLFDT($G(DGARRY(.1218)))
"RTN","DGADDUTL",192,0)
 ;
"RTN","DGADDUTL",193,0)
 W !!,"Temporary Address: "
"RTN","DGADDUTL",194,0)
 I DGADRACT="Y" D
"RTN","DGADDUTL",195,0)
 .W:DGADR1'="" !?9,DGADR1
"RTN","DGADDUTL",196,0)
 .W:DGADR2'="" !?9,DGADR2
"RTN","DGADDUTL",197,0)
 .W:DGADR3'="" !?9,DGADR3
"RTN","DGADDUTL",198,0)
 .W !?9,$S(DGCITY'="":DGCITY,1:"")_","_$S(DGSTATE'="":DGSTATE,1:"")_" "_$S(DGZIP'="":DGZIP,1:"")
"RTN","DGADDUTL",199,0)
 .W !," County: "_DGCOUNTY
"RTN","DGADDUTL",200,0)
 .W !,"  Phone: "_DGPHONE
"RTN","DGADDUTL",201,0)
 .W !,"From/To: "_$P(DGFROMDT,",")_","_$P(DGFROMDT,", ",2)_"-"_$P(DGTODT,",")_","_$P(DGTODT,", ",2)
"RTN","DGADDUTL",202,0)
 ;
"RTN","DGADDUTL",203,0)
 I $G(DGARRY(.12105))="N" D
"RTN","DGADDUTL",204,0)
 .W:$G(DGARRY(.1211))="" !?9,"NO TEMPORARY ADDRESS"
"RTN","DGADDUTL",205,0)
 .W:$G(DGARRY(.1212))="" !?9,""
"RTN","DGADDUTL",206,0)
 .W !," County: NOT APPLICABLE"
"RTN","DGADDUTL",207,0)
 .W !,"  Phone: NOT APPLICABLE"
"RTN","DGADDUTL",208,0)
 .W !,"From/To: NOT APPLICABLE"
"RTN","DGADDUTL",209,0)
 Q
"VER")
8.0^22.0
**END**
**END**
