Released GMRV*5*14 SEQ #9
Extracted from mail message
**KIDS**:GMRV*5.0*14^

**INSTALL NAME**
GMRV*5.0*14
"BLD",5739,0)
GMRV*5.0*14^GEN. MED. REC. - VITALS^0^3051102^y
"BLD",5739,1,0)
^^1^1^3050815^
"BLD",5739,1,1,0)
ERROR NOT TRAPPED IN GMRVPCE1
"BLD",5739,4,0)
^9.64PA^^
"BLD",5739,"INI")
GMRVP514
"BLD",5739,"INID")
^^y
"BLD",5739,"KRN",0)
^9.67PA^8989.52^19
"BLD",5739,"KRN",.4,0)
.4
"BLD",5739,"KRN",.401,0)
.401
"BLD",5739,"KRN",.402,0)
.402
"BLD",5739,"KRN",.403,0)
.403
"BLD",5739,"KRN",.5,0)
.5
"BLD",5739,"KRN",.84,0)
.84
"BLD",5739,"KRN",3.6,0)
3.6
"BLD",5739,"KRN",3.8,0)
3.8
"BLD",5739,"KRN",9.2,0)
9.2
"BLD",5739,"KRN",9.8,0)
9.8
"BLD",5739,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5739,"KRN",9.8,"NM",1,0)
GMRVPCE1^^0^B18749286
"BLD",5739,"KRN",9.8,"NM","B","GMRVPCE1",1)

"BLD",5739,"KRN",19,0)
19
"BLD",5739,"KRN",19.1,0)
19.1
"BLD",5739,"KRN",101,0)
101
"BLD",5739,"KRN",409.61,0)
409.61
"BLD",5739,"KRN",771,0)
771
"BLD",5739,"KRN",870,0)
870
"BLD",5739,"KRN",8989.51,0)
8989.51
"BLD",5739,"KRN",8989.52,0)
8989.52
"BLD",5739,"KRN",8994,0)
8994
"BLD",5739,"KRN","B",.4,.4)

"BLD",5739,"KRN","B",.401,.401)

"BLD",5739,"KRN","B",.402,.402)

"BLD",5739,"KRN","B",.403,.403)

"BLD",5739,"KRN","B",.5,.5)

"BLD",5739,"KRN","B",.84,.84)

"BLD",5739,"KRN","B",3.6,3.6)

"BLD",5739,"KRN","B",3.8,3.8)

"BLD",5739,"KRN","B",9.2,9.2)

"BLD",5739,"KRN","B",9.8,9.8)

"BLD",5739,"KRN","B",19,19)

"BLD",5739,"KRN","B",19.1,19.1)

"BLD",5739,"KRN","B",101,101)

"BLD",5739,"KRN","B",409.61,409.61)

"BLD",5739,"KRN","B",771,771)

"BLD",5739,"KRN","B",870,870)

"BLD",5739,"KRN","B",8989.51,8989.51)

"BLD",5739,"KRN","B",8989.52,8989.52)

"BLD",5739,"KRN","B",8994,8994)

"BLD",5739,"QUES",0)
^9.62^^
"BLD",5739,"REQB",0)
^9.611^^
"INI")
GMRVP514
"MBREQ")
0
"PKG",44,-1)
1^1
"PKG",44,0)
GEN. MED. REC. - VITALS^GMRV^Vitals/Measurements Module of General Medical Record.
"PKG",44,20,0)
^9.402P^^
"PKG",44,22,0)
^9.49I^1^1
"PKG",44,22,1,0)
5.0^3021029
"PKG",44,22,1,"PAH",1,0)
14^3051102
"PKG",44,22,1,"PAH",1,1,0)
^^1^1^3051102
"PKG",44,22,1,"PAH",1,1,1,0)
ERROR NOT TRAPPED IN GMRVPCE1
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","GMRVP514")
0^^B1473095
"RTN","GMRVP514",1,0)
GMRVP514 ;BAY/KAM-Patch GMRV*5*14 Install Utility Routine ;8/29/05 3:24pm
"RTN","GMRVP514",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**14**;Oct 31, 2002
"RTN","GMRVP514",3,0)
 ;
"RTN","GMRVP514",4,0)
PREINIT ; Remove a Data Dictionary Field
"RTN","GMRVP514",5,0)
 N VIEN,USED,VTIEN,X1,X2
"RTN","GMRVP514",6,0)
 K ^XTMP("GMRVP514")
"RTN","GMRVP514",7,0)
 I '$G(DT) S DT=$$DT^XLFDT
"RTN","GMRVP514",8,0)
 I '$D(^XTMP("GMRVP514")) S X1=DT,X2=+90 D C^%DTC S ^XTMP("GMRVP514",0)=$G(X)_"^"_DT
"RTN","GMRVP514",9,0)
 S (VIEN,USED)=0
"RTN","GMRVP514",10,0)
 F  S VIEN=$O(^GMRD(120.51,VIEN)) Q:VIEN'?1.N!(USED=1)  D
"RTN","GMRVP514",11,0)
 .  I $P(^GMRD(120.51,VIEN,0),"^",7)?1.N S USED=1
"RTN","GMRVP514",12,0)
 I USED D  Q
"RTN","GMRVP514",13,0)
 . W !,"^GMRD(120.51,"_VIEN_",0) CONTAINS A NUMERIC"
"RTN","GMRVP514",14,0)
 ; delete the field "ORDERABLE"
"RTN","GMRVP514",15,0)
 I $D(^DD(120.51,"B","ORDERABLE")) D
"RTN","GMRVP514",16,0)
 . S VTIEN=$O(^DD(120.51,"B","ORDERABLE",""))
"RTN","GMRVP514",17,0)
 . S ^XTMP("GMRVP514",$J,120.51,VTIEN)="^DD(120.51,"_VTIEN_" HAS BEEN DELETED" ; Deletion
"RTN","GMRVP514",18,0)
 . K DIK S DA=VTIEN,DA(1)=120.51,DIK="^DD(120.51," D ^DIK K DIK,DA
"RTN","GMRVP514",19,0)
 Q
"RTN","GMRVPCE1")
0^1^B18749286
"RTN","GMRVPCE1",1,0)
GMRVPCE1 ;HIRMFO/RM-PCE Interface code ;8/2/96
"RTN","GMRVPCE1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**14**;Oct 31, 2002
"RTN","GMRVPCE1",3,0)
PCE(GMRVSTOR) ; Called from VALIDATE^GMRVPCE0 to validate vitals data, or
"RTN","GMRVPCE1",4,0)
 ; STORE^GMRVPCE0 to store vitals data.  The variable GMRVSTOR (req.)
"RTN","GMRVPCE1",5,0)
 ; will determine if called from VALIDATE (0), or STORE (1).
"RTN","GMRVPCE1",6,0)
 ; 08/15/2005 KAM/BAY 107096 added 'Q' for error handling
"RTN","GMRVPCE1",7,0)
 ; 09/23/2005 KAM/BAY 113449 add check for invalid HOS/LOC type
"RTN","GMRVPCE1",8,0)
 ;
"RTN","GMRVPCE1",9,0)
 N GMRVDFN,GMRVDUZ,GMRVHLOC,GMRVPROV,GMRVX
"RTN","GMRVPCE1",10,0)
 S GMRVDFN=$P($G(GMRVDAT("ENCOUNTER")),"^",2)
"RTN","GMRVPCE1",11,0)
 I GMRVDFN'>0!'$D(^DPT(+GMRVDFN,0)) D ERROR(0,0,1,GMRVDFN) Q
"RTN","GMRVPCE1",12,0)
 S GMRVHLOC=$P($G(GMRVDAT("ENCOUNTER")),"^",3)
"RTN","GMRVPCE1",13,0)
 I GMRVHLOC'>0!'$D(^SC(+GMRVHLOC,0)) D ERROR(0,0,2,GMRVHLOC) Q
"RTN","GMRVPCE1",14,0)
 ; 09/26/2005 KAM/BAY 113449 added next line
"RTN","GMRVPCE1",15,0)
 I GMRVHLOC>0,"C,W"'[$P(^SC(+GMRVHLOC,0),"^",3) D ERROR(0,0,8,$$GET1^DIQ(44,GMRVHLOC,.01)_" = "_$$GET1^DIQ(44,GMRVHLOC,2)) Q
"RTN","GMRVPCE1",16,0)
 ;
"RTN","GMRVPCE1",17,0)
 S GMRVDUZ=$P(GMRVDAT("SOURCE"),"^",2) I 'GMRVDUZ S GMRVDUZ=$G(DUZ)
"RTN","GMRVPCE1",18,0)
 I GMRVDUZ'>0!'$D(^VA(200,+GMRVDUZ,0)) D ERROR(0,0,3,GMRVDUZ) Q
"RTN","GMRVPCE1",19,0)
 S GMRVPROV=0
"RTN","GMRVPCE1",20,0)
 F  S GMRVPROV=$O(GMRVDAT("VITALS",GMRVPROV)) Q:GMRVPROV'>0  D
"RTN","GMRVPCE1",21,0)
 .  S GMRVX=0
"RTN","GMRVPCE1",22,0)
 .  F  S GMRVX=$O(GMRVDAT("VITALS",GMRVPROV,GMRVX)) Q:GMRVX'>0  D
"RTN","GMRVPCE1",23,0)
 .  .  D DATA($G(GMRVDAT("VITALS",GMRVPROV,GMRVX)))
"RTN","GMRVPCE1",24,0)
 .  .  Q
"RTN","GMRVPCE1",25,0)
 .  Q
"RTN","GMRVPCE1",26,0)
 Q
"RTN","GMRVPCE1",27,0)
ERROR(PROVIDER,I,CODE,VALUE) ; Given Provider IEN (PROVIDER), subentry (I),
"RTN","GMRVPCE1",28,0)
 ; Error code (CODE) and Rejected value (VALUE), this procedure will
"RTN","GMRVPCE1",29,0)
 ; set the GMRVDAT("ERROR") array with error.
"RTN","GMRVPCE1",30,0)
 ;
"RTN","GMRVPCE1",31,0)
 Q:$G(GMRVSTOR)=1
"RTN","GMRVPCE1",32,0)
 N MSG,NODE,PIECE,X
"RTN","GMRVPCE1",33,0)
 S X=$T(ERRTXT+CODE),MSG=$P(X,";",3),NODE=$P(X,";",4),PIECE=$P(X,";",5)
"RTN","GMRVPCE1",34,0)
 S GMRVDAT("ERROR",NODE,PROVIDER,I,PIECE)=MSG_"^"_VALUE
"RTN","GMRVPCE1",35,0)
 Q
"RTN","GMRVPCE1",36,0)
ERRTXT ; Error messages and <NODE>/<PIECE> information for code passed.
"RTN","GMRVPCE1",37,0)
 ;;Vitals missing/invalid Patient;VITALS;0
"RTN","GMRVPCE1",38,0)
 ;;Vitals missing/invalid Hospital Location;VITALS;0
"RTN","GMRVPCE1",39,0)
 ;;Vitals missing/invalid Source;VITALS;0
"RTN","GMRVPCE1",40,0)
 ;;Vitals missing Data node;VITALS;0
"RTN","GMRVPCE1",41,0)
 ;;Vitals missing/invalid Measurement Type;VITALS;1
"RTN","GMRVPCE1",42,0)
 ;;Vitals missing/invalid Measurement Date;VITALS;4
"RTN","GMRVPCE1",43,0)
 ;;Vitals missing/invalid Measurement;VITALS;2
"RTN","GMRVPCE1",44,0)
 ;;Invalid Hospital Location Type;VITALS;0
"RTN","GMRVPCE1",45,0)
 Q
"RTN","GMRVPCE1",46,0)
DATA(VITALS) ; Process GMRVDAT("VITALS") node.  Data in in variable VITALS.
"RTN","GMRVPCE1",47,0)
 ; Present but not passed are GMRVPROV=Provider IEN, GMRVX=subentry
"RTN","GMRVPCE1",48,0)
 ; for GMRVPROV and GMRVSTOR=$S(1:Store data,0:Validate Data).
"RTN","GMRVPCE1",49,0)
 ;
"RTN","GMRVPCE1",50,0)
 N GMRVMTYP,GMRVRATE,GMRVUNIT,GMRVMDT
"RTN","GMRVPCE1",51,0)
 I $G(VITALS)="" D ERROR(GMRVPROV,GMRVX,4,VITALS) Q
"RTN","GMRVPCE1",52,0)
 N GMRVTYP,GMRVRATE,GMRVUNIT,GMRVMDT
"RTN","GMRVPCE1",53,0)
 S GMRVMTYP=$P(VITALS,"^")
"RTN","GMRVPCE1",54,0)
 I '$$VMTYPES^GMRVPCE0(GMRVMTYP) D ERROR(GMRVPROV,GMRVX,5,GMRVMTYP) Q
"RTN","GMRVPCE1",55,0)
 S X=$P(VITALS,"^",4),%DT="TS" D ^%DT K %DT S GMRVMDT=Y
"RTN","GMRVPCE1",56,0)
 I GMRVMDT'>0 D  I GMRVMDT'>0 D ERROR(GMRVPROV,GMRVX,6,GMRVMDT) Q
"RTN","GMRVPCE1",57,0)
 .  S X=$P($G(GMRVDAT("ENCOUNTER")),"^"),%DT="TSR"
"RTN","GMRVPCE1",58,0)
 .  D ^%DT K %DT S GMRVMDT=Y
"RTN","GMRVPCE1",59,0)
 .  Q
"RTN","GMRVPCE1",60,0)
 S GMRVRATE=$P(VITALS,"^",2)
"RTN","GMRVPCE1",61,0)
 S GMRVUNIT=$P(VITALS,"^",3) I GMRVUNIT="" D
"RTN","GMRVPCE1",62,0)
 .  I GMRVMTYP="HT" S GMRVUNIT="IN"
"RTN","GMRVPCE1",63,0)
 .  I GMRVMTYP="WT" S GMRVUNIT="LB"
"RTN","GMRVPCE1",64,0)
 .  I GMRVMTYP="TMP" S GMRVUNIT="F"
"RTN","GMRVPCE1",65,0)
 .  Q
"RTN","GMRVPCE1",66,0)
 I $S(GMRVRATE="":1,1:'$$RATECHK^GMRVPCE0(GMRVMTYP,GMRVRATE,GMRVUNIT)) D ERROR(GMRVPROV,GMRVX,7,GMRVRATE) Q
"RTN","GMRVPCE1",67,0)
 S GMRVMTYP=$O(^GMRD(120.51,"APCE",GMRVMTYP,""))
"RTN","GMRVPCE1",68,0)
 ; 08/15/2005 KAM 107096 Added 'Q' to next line
"RTN","GMRVPCE1",69,0)
 I GMRVMTYP'>0 D ERROR(GMRVPROV,GMRVX,5,$P(VITALS,"^")) Q
"RTN","GMRVPCE1",70,0)
 D DUPCHK I GMRVSTOR D
"RTN","GMRVPCE1",71,0)
 .  N GMRVFDA
"RTN","GMRVPCE1",72,0)
 .  S GMRVFDA(99,120.5,"+1,",.01)=GMRVMDT
"RTN","GMRVPCE1",73,0)
 .  S GMRVFDA(99,120.5,"+1,",.02)=GMRVDFN
"RTN","GMRVPCE1",74,0)
 .  S GMRVFDA(99,120.5,"+1,",.03)=GMRVMTYP
"RTN","GMRVPCE1",75,0)
 .  S GMRVFDA(99,120.5,"+1,",.04)=$$NOW^XLFDT()
"RTN","GMRVPCE1",76,0)
 .  S GMRVFDA(99,120.5,"+1,",.05)=GMRVHLOC
"RTN","GMRVPCE1",77,0)
 .  S GMRVFDA(99,120.5,"+1,",.06)=GMRVDUZ
"RTN","GMRVPCE1",78,0)
 .  S GMRVFDA(99,120.5,"+1,",1.2)=GMRVRATE
"RTN","GMRVPCE1",79,0)
 .  D UPDATE^DIE("","GMRVFDA(99)")
"RTN","GMRVPCE1",80,0)
 .  Q
"RTN","GMRVPCE1",81,0)
 Q
"RTN","GMRVPCE1",82,0)
DUPCHK ; This procedure checks for duplicate data.  If data is being
"RTN","GMRVPCE1",83,0)
 ; validated, a warning message will be sent, if data is being stored,
"RTN","GMRVPCE1",84,0)
 ; the old record that is duplicate will be entered in error and the
"RTN","GMRVPCE1",85,0)
 ; new data filed.
"RTN","GMRVPCE1",86,0)
 ;
"RTN","GMRVPCE1",87,0)
 N GMRVDA S GMRVDA=0
"RTN","GMRVPCE1",88,0)
 F  S GMRVDA=$O(^GMR(120.5,"AA",GMRVDFN,GMRVMTYP,9999999-GMRVMDT,GMRVDA)) Q:GMRVDA'>0  D:'+$G(^GMR(120.5,GMRVDA,2))
"RTN","GMRVPCE1",89,0)
 .  S %=$G(^GMR(120.5,GMRVDA,0))
"RTN","GMRVPCE1",90,0)
 .  I $P(%_"^","^",5,9)'=(GMRVHLOC_"^"_GMRVDUZ_"^^"_GMRVRATE_"^") D
"RTN","GMRVPCE1",91,0)
 .  .  I GMRVSTOR D
"RTN","GMRVPCE1",92,0)
 .  .  .  ;S DIE="^GMR(120.5,",DA=GMRVDA,DR="2////1;3////"_GMRVDUZ D ^DIE
"RTN","GMRVPCE1",93,0)
 .  .  .  N GMRVFDA
"RTN","GMRVPCE1",94,0)
 .  .  .  S GMRVFDA(88,120.5,GMRVDA_",",2)=1,GMRVFDA(88,120.5,GMRVDA_",",3)=GMRVDUZ D FILE^DIE("","GMRVFDA(88)")
"RTN","GMRVPCE1",95,0)
 .  .  .  S GMRVFDA(77,120.506,"?+1,"_GMRVDA_",",.01)=4 D UPDATE^DIE("","GMRVFDA(77)")
"RTN","GMRVPCE1",96,0)
 .  .  .  Q
"RTN","GMRVPCE1",97,0)
 .  .  I 'GMRVSTOR S GMRVDAT("WARNING","VITALS",GMRVPROV,GMRVX,0)="Duplicate measurement data exists in database!  That data was overwritten by this transaction."
"RTN","GMRVPCE1",98,0)
 .  Q
"RTN","GMRVPCE1",99,0)
 Q
"VER")
8.0^22.0
"BLD",5739,6)
^9
**END**
**END**
