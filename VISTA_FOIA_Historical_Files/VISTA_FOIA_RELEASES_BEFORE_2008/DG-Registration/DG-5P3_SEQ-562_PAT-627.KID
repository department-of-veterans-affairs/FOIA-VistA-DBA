Released DG*5.3*627 SEQ #562
Extracted from mail message
**KIDS**:DG*5.3*627^

**INSTALL NAME**
DG*5.3*627
"BLD",5881,0)
DG*5.3*627^REGISTRATION^0^3050118^y
"BLD",5881,1,0)
^^13^13^3050118^
"BLD",5881,1,1,0)
This patch concerns a situation where the patient record has a large 
"BLD",5881,1,2,0)
number of aliases. The  HL7 message to update the MPI was being built
"BLD",5881,1,3,0)
incorrectly and causing an exception on the MPI in cases where the patient
"BLD",5881,1,4,0)
record has several aliases.  The MPI was then not able to process the
"BLD",5881,1,5,0)
message and update the record.  
"BLD",5881,1,6,0)
                          AND
"BLD",5881,1,7,0)
The MPI DQ Team requests that the ALIAS SSN (2.01,1) field be added to 
"BLD",5881,1,8,0)
the Display Remote Patient Data Query [RG REMOTE PDAT DISPLAY] Option. 
"BLD",5881,1,9,0)
                          AND
"BLD",5881,1,10,0)
The VDEF / Standardized Messaging team request that when the APID build
"BLD",5881,1,11,0)
process is called from the VDEF process, any "HL7 special characters" that
"BLD",5881,1,12,0)
could be found in patient street address data, be encoded to HL7
"BLD",5881,1,13,0)
standards.
"BLD",5881,4,0)
^9.64PA^^
"BLD",5881,"KRN",0)
^9.67PA^8989.52^19
"BLD",5881,"KRN",.4,0)
.4
"BLD",5881,"KRN",.401,0)
.401
"BLD",5881,"KRN",.402,0)
.402
"BLD",5881,"KRN",.403,0)
.403
"BLD",5881,"KRN",.5,0)
.5
"BLD",5881,"KRN",.84,0)
.84
"BLD",5881,"KRN",3.6,0)
3.6
"BLD",5881,"KRN",3.8,0)
3.8
"BLD",5881,"KRN",9.2,0)
9.2
"BLD",5881,"KRN",9.8,0)
9.8
"BLD",5881,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",5881,"KRN",9.8,"NM",2,0)
VAFCPDT2^^0^B21671798
"BLD",5881,"KRN",9.8,"NM",3,0)
VAFCQRY^^0^B10987185
"BLD",5881,"KRN",9.8,"NM",4,0)
VAFCQRY1^^0^B57274916
"BLD",5881,"KRN",9.8,"NM","B","VAFCPDT2",2)

"BLD",5881,"KRN",9.8,"NM","B","VAFCQRY",3)

"BLD",5881,"KRN",9.8,"NM","B","VAFCQRY1",4)

"BLD",5881,"KRN",19,0)
19
"BLD",5881,"KRN",19.1,0)
19.1
"BLD",5881,"KRN",101,0)
101
"BLD",5881,"KRN",409.61,0)
409.61
"BLD",5881,"KRN",771,0)
771
"BLD",5881,"KRN",870,0)
870
"BLD",5881,"KRN",8989.51,0)
8989.51
"BLD",5881,"KRN",8989.52,0)
8989.52
"BLD",5881,"KRN",8994,0)
8994
"BLD",5881,"KRN","B",.4,.4)

"BLD",5881,"KRN","B",.401,.401)

"BLD",5881,"KRN","B",.402,.402)

"BLD",5881,"KRN","B",.403,.403)

"BLD",5881,"KRN","B",.5,.5)

"BLD",5881,"KRN","B",.84,.84)

"BLD",5881,"KRN","B",3.6,3.6)

"BLD",5881,"KRN","B",3.8,3.8)

"BLD",5881,"KRN","B",9.2,9.2)

"BLD",5881,"KRN","B",9.8,9.8)

"BLD",5881,"KRN","B",19,19)

"BLD",5881,"KRN","B",19.1,19.1)

"BLD",5881,"KRN","B",101,101)

"BLD",5881,"KRN","B",409.61,409.61)

"BLD",5881,"KRN","B",771,771)

"BLD",5881,"KRN","B",870,870)

"BLD",5881,"KRN","B",8989.51,8989.51)

"BLD",5881,"KRN","B",8989.52,8989.52)

"BLD",5881,"KRN","B",8994,8994)

"BLD",5881,"QUES",0)
^9.62^^
"BLD",5881,"REQB",0)
^9.611^2^2
"BLD",5881,"REQB",1,0)
DG*5.3*505^1
"BLD",5881,"REQB",2,0)
DG*5.3*575^1
"BLD",5881,"REQB","B","DG*5.3*505",1)

"BLD",5881,"REQB","B","DG*5.3*575",2)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
627^3050118^100850
"PKG",5,22,1,"PAH",1,1,0)
^^13^13^3050118
"PKG",5,22,1,"PAH",1,1,1,0)
This patch concerns a situation where the patient record has a large 
"PKG",5,22,1,"PAH",1,1,2,0)
number of aliases. The  HL7 message to update the MPI was being built
"PKG",5,22,1,"PAH",1,1,3,0)
incorrectly and causing an exception on the MPI in cases where the patient
"PKG",5,22,1,"PAH",1,1,4,0)
record has several aliases.  The MPI was then not able to process the
"PKG",5,22,1,"PAH",1,1,5,0)
message and update the record.  
"PKG",5,22,1,"PAH",1,1,6,0)
                          AND
"PKG",5,22,1,"PAH",1,1,7,0)
The MPI DQ Team requests that the ALIAS SSN (2.01,1) field be added to 
"PKG",5,22,1,"PAH",1,1,8,0)
the Display Remote Patient Data Query [RG REMOTE PDAT DISPLAY] Option. 
"PKG",5,22,1,"PAH",1,1,9,0)
                          AND
"PKG",5,22,1,"PAH",1,1,10,0)
The VDEF / Standardized Messaging team request that when the APID build
"PKG",5,22,1,"PAH",1,1,11,0)
process is called from the VDEF process, any "HL7 special characters" that
"PKG",5,22,1,"PAH",1,1,12,0)
could be found in patient street address data, be encoded to HL7
"PKG",5,22,1,"PAH",1,1,13,0)
standards.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","VAFCPDT2")
0^2^B21671798
"RTN","VAFCPDT2",1,0)
VAFCPDT2 ;BIR/CML/ALS-DISPLAY MPI/PD INFORMATION FOR SELECTED PATIENT ; 12/3/04 3:50pm
"RTN","VAFCPDT2",2,0)
 ;;5.3;Registration;**414,505,627**;Aug 13, 1993
"RTN","VAFCPDT2",3,0)
 ;Reference to ^MPIF(984.9,"C" supported by IA #3298
"RTN","VAFCPDT2",4,0)
 ;
"RTN","VAFCPDT2",5,0)
CMORHIS ;Find CMOR History
"RTN","VAFCPDT2",6,0)
 I '$O(^DPT(DFN,"MPICMOR",0)) G CMORCHG
"RTN","VAFCPDT2",7,0)
 I $Y+4>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDT2",8,0)
 .S LNQ=22 D SS^VAFCPDAT Q:QFLG
"RTN","VAFCPDT2",9,0)
 .W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2
"RTN","VAFCPDT2",10,0)
 D CHISHDR
"RTN","VAFCPDT2",11,0)
 S HIS=0 F  S HIS=$O(^DPT(DFN,"MPICMOR",HIS)) Q:'HIS  D  Q:QFLG
"RTN","VAFCPDT2",12,0)
 .S DIC=2,DR="993",DR(2.0993)=".01;3",DA=DFN,DA(2.0993)=HIS
"RTN","VAFCPDT2",13,0)
 .S DIQ(0)="E",DIQ="CMORNODE"
"RTN","VAFCPDT2",14,0)
 .D EN^DIQ1 K DIC,DR,DA,DIQ
"RTN","VAFCPDT2",15,0)
 .S HISCMOR=$G(CMORNODE(2.0993,HIS,.01,"E"))
"RTN","VAFCPDT2",16,0)
 .I +HISCMOR S HISCMOR=$$GET1^DIQ(4,HISCMOR,.01)
"RTN","VAFCPDT2",17,0)
 .S CHGDT=$G(CMORNODE(2.0993,HIS,3,"E"))
"RTN","VAFCPDT2",18,0)
 .I $Y+3>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDT2",19,0)
 ..S LNQ=22 D SS^VAFCPDAT Q:QFLG
"RTN","VAFCPDT2",20,0)
 ..W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2 D CHISHDR
"RTN","VAFCPDT2",21,0)
 .W !,$P(CHGDT,"@"),?12," - CMOR changed from ",HISCMOR
"RTN","VAFCPDT2",22,0)
 ;
"RTN","VAFCPDT2",23,0)
CMORCHG ;Find CMOR change request
"RTN","VAFCPDT2",24,0)
 I '$O(^MPIF(984.9,"C",DFN,0)) G EXT
"RTN","VAFCPDT2",25,0)
 I $Y+4>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDT2",26,0)
 .S LNQ=22 D SS^VAFCPDAT Q:QFLG
"RTN","VAFCPDT2",27,0)
 .W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2
"RTN","VAFCPDT2",28,0)
 D CCHGHDR
"RTN","VAFCPDT2",29,0)
 S CHG=0 F  S CHG=$O(^MPIF(984.9,"C",DFN,CHG)) Q:'CHG  D  Q:QFLG
"RTN","VAFCPDT2",30,0)
 .S DIC=984.9,DA=CHG,DR=".01;.03;.06;.07;.08;1.03",DIQ="CHGNODE"
"RTN","VAFCPDT2",31,0)
 .S DIQ(0)="EI" D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDT2",32,0)
 .S CHGNUM=$G(CHGNODE(984.9,CHG,.01,"E"))
"RTN","VAFCPDT2",33,0)
 .S CHGDT=$G(CHGNODE(984.9,CHG,.03,"E"))
"RTN","VAFCPDT2",34,0)
 .S TMSG=$G(CHGNODE(984.9,CHG,.08,"E"))
"RTN","VAFCPDT2",35,0)
 .S TREQ=$G(CHGNODE(984.9,CHG,1.03,"E"))
"RTN","VAFCPDT2",36,0)
 .S SITE=$G(CHGNODE(984.9,CHG,.07,"E"))
"RTN","VAFCPDT2",37,0)
 .S STATUS=$G(CHGNODE(984.9,CHG,.06,"E"))
"RTN","VAFCPDT2",38,0)
 .I $Y+4>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDT2",39,0)
 ..S LNQ=22 D SS^VAFCPDAT Q:QFLG
"RTN","VAFCPDT2",40,0)
 ..W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2 D CCHGHDR
"RTN","VAFCPDT2",41,0)
 .W !,"REQUEST #",CHGNUM," - ",TMSG," ",CHGDT
"RTN","VAFCPDT2",42,0)
 .W !?4,"Type of Request: ",TREQ," ",SITE
"RTN","VAFCPDT2",43,0)
 .W !?4,"Status : ",STATUS,!
"RTN","VAFCPDT2",44,0)
 ;
"RTN","VAFCPDT2",45,0)
EXT ;Extended patient demographic data
"RTN","VAFCPDT2",46,0)
 I $E(IOST,1,2)="C-" D  Q:QFLG
"RTN","VAFCPDT2",47,0)
 .S LNQ=22 D SS^VAFCPDAT Q:QFLG
"RTN","VAFCPDT2",48,0)
 .W @IOF
"RTN","VAFCPDT2",49,0)
 I QFLG=1 G QUIT^VAFCPDAT
"RTN","VAFCPDT2",50,0)
 W !!,"Additional DPT Data for: ",NAME,"  (DFN #",DFN,")",!,LN2
"RTN","VAFCPDT2",51,0)
 S DA=DFN,DIC=2,DIQ="XDATA",DIQ(0)="EI"
"RTN","VAFCPDT2",52,0)
 S DR=".05;.08;.092;.093;.219;.2401;.2402;.2403;.211;.302;.323;.341;.331;.361;1901;.325;.328;326;.327;.097;.525"
"RTN","VAFCPDT2",53,0)
 N COB,SOB,FNM,MNM,MMNM,NOK,NOKN,DESIG,EMER,ELIG,VET,SRVBR,SRVNUM,SRVEDT,SRVSDT,SRVCPCT,POSRVC,FILEDT,MARS,RELP,POW
"RTN","VAFCPDT2",54,0)
 D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDT2",55,0)
 S COB=$G(XDATA(2,DFN,.092,"E")),SOB=$G(XDATA(2,DFN,.093,"E"))
"RTN","VAFCPDT2",56,0)
 S FILEDT=$G(XDATA(2,DFN,.097,"E")),FNM=$G(XDATA(2,DFN,.2401,"E"))
"RTN","VAFCPDT2",57,0)
 S MNM=$G(XDATA(2,DFN,.2402,"E")),MMNM=$G(XDATA(2,DFN,.2403,"E"))
"RTN","VAFCPDT2",58,0)
 S NOK=$G(XDATA(2,DFN,.211,"E")),DESIG=$G(XDATA(2,DFN,.341,"E"))
"RTN","VAFCPDT2",59,0)
 S EMER=$G(XDATA(2,DFN,.331,"E"))
"RTN","VAFCPDT2",60,0)
 S ELIG=$G(XDATA(2,DFN,.361,"E")),VET=$G(XDATA(2,DFN,1901,"E"))
"RTN","VAFCPDT2",61,0)
 S SRVBR=$G(XDATA(2,DFN,.325,"E")),SRVNUM=$G(XDATA(2,DFN,.328,"E"))
"RTN","VAFCPDT2",62,0)
 S SRVEDT=$G(XDATA(2,DFN,.326,"E")),SRVSDT=$G(XDATA(2,DFN,.327,"E"))
"RTN","VAFCPDT2",63,0)
 S MARS=$G(XDATA(2,DFN,.05,"E")),RELP=$G(XDATA(2,DFN,.08,"E"))
"RTN","VAFCPDT2",64,0)
 S POSRVC=$G(XDATA(2,DFN,.323,"E")),SRVCPCT=$G(XDATA(2,DFN,.302,"E"))
"RTN","VAFCPDT2",65,0)
 S NOKN=$G(XDATA(2,DFN,.219,"E")),POW=$G(XDATA(2,DFN,.525,"E"))
"RTN","VAFCPDT2",66,0)
 ;
"RTN","VAFCPDT2",67,0)
 W !,"PLACE OF BIRTH [CITY]",?31,": ",COB
"RTN","VAFCPDT2",68,0)
 W !,"PLACE OF BIRTH [STATE]",?31,": ",SOB
"RTN","VAFCPDT2",69,0)
 W !,"FATHER'S NAME",?31,": ",FNM
"RTN","VAFCPDT2",70,0)
 W !,"MOTHER'S NAME",?31,": ",MNM
"RTN","VAFCPDT2",71,0)
 W !,"MOTHER'S MAIDEN NAME",?31,": ",MMNM
"RTN","VAFCPDT2",72,0)
 W !,"NAME OF PRIMARY NEXT OF KIN",?31,": ",NOK
"RTN","VAFCPDT2",73,0)
 W !,"NEXT OF KIN PHONE NUMBER",?31,": ",NOKN
"RTN","VAFCPDT2",74,0)
 W !,"NAME OF DESIGNEE",?31,": ",DESIG
"RTN","VAFCPDT2",75,0)
 W !,"EMERGENCY NAME",?31,": ",EMER
"RTN","VAFCPDT2",76,0)
 W !,"MARITAL STATUS",?31,": ",MARS
"RTN","VAFCPDT2",77,0)
 W !,"RELIGIOUS PREFERENCE",?31,": ",RELP
"RTN","VAFCPDT2",78,0)
 W !,"PRIMARY ELIGIBILITY CODE",?31,": ",ELIG
"RTN","VAFCPDT2",79,0)
 W !,"VETERAN (Y/N)?",?31,": ",VET
"RTN","VAFCPDT2",80,0)
 W !,"SERVICE BRANCH [LAST]",?31,": ",SRVBR
"RTN","VAFCPDT2",81,0)
 W !,"SERVICE NUMBER [LAST]",?31,": ",SRVNUM
"RTN","VAFCPDT2",82,0)
 W !,"SERVICE CONNECTED PERCENT",?31,": ",SRVCPCT
"RTN","VAFCPDT2",83,0)
 W !,"SERVICE ENTRY DATE [LAST]",?31,": ",SRVEDT
"RTN","VAFCPDT2",84,0)
 W !,"SERVICE SEPARATION DATE [LAST]",?31,": ",SRVSDT
"RTN","VAFCPDT2",85,0)
 W !,"PERIOD OF SERVICE",?31,": ",POSRVC
"RTN","VAFCPDT2",86,0)
 W !,"POW STATUS INDICATED?",?31,": ",POW
"RTN","VAFCPDT2",87,0)
 W !,"DATE ENTERED IN PATIENT FILE",?31,": ",FILEDT
"RTN","VAFCPDT2",88,0)
 ;
"RTN","VAFCPDT2",89,0)
 D DEM^VADPT
"RTN","VAFCPDT2",90,0)
 ;ETHNICITY info
"RTN","VAFCPDT2",91,0)
 I $G(VADM(11,1)) W !,"ETHNICITY INFORMATION",?31,": ",$P(VADM(11,1),"^",2)
"RTN","VAFCPDT2",92,0)
 ;
"RTN","VAFCPDT2",93,0)
 ;RACE multiple
"RTN","VAFCPDT2",94,0)
 I $O(VADM(12,0)) D
"RTN","VAFCPDT2",95,0)
 .W !,"RACE INFORMATION (multiple):"
"RTN","VAFCPDT2",96,0)
 .S RACEMUL=0 F  S RACEMUL=$O(VADM(12,RACEMUL)) Q:'RACEMUL  W !?3,$P(VADM(12,RACEMUL),"^",2)
"RTN","VAFCPDT2",97,0)
 ;
"RTN","VAFCPDT2",98,0)
 ;ALIAS multiple
"RTN","VAFCPDT2",99,0)
 I $O(^DPT(DFN,.01,0)) D 
"RTN","VAFCPDT2",100,0)
 .W !,"ALIAS (multiple):"
"RTN","VAFCPDT2",101,0)
 .S ALIAS=0 F  S ALIAS=$O(^DPT(DFN,.01,ALIAS)) Q:'ALIAS  W !?3,$E($P(^DPT(DFN,.01,ALIAS,0),"^"),1,30),?35,"SSN: "_$P($G(^DPT(DFN,.01,ALIAS,0)),"^",2)
"RTN","VAFCPDT2",102,0)
 ;
"RTN","VAFCPDT2",103,0)
 K ALIAS,XDATA,CHG,CHGNUM,CHGDT,TMSG,TREQ,SITE,STATUS,HIS,HISCMOR,CMORNODE,CHGNODE,RACEMUL,VADM
"RTN","VAFCPDT2",104,0)
 Q
"RTN","VAFCPDT2",105,0)
 ;
"RTN","VAFCPDT2",106,0)
CHISHDR W !!,"CMOR History:",!,"--------------"
"RTN","VAFCPDT2",107,0)
 Q
"RTN","VAFCPDT2",108,0)
CCHGHDR W !!,"CMOR Change Request History:",!,"----------------------------"
"RTN","VAFCPDT2",109,0)
 Q
"RTN","VAFCQRY")
0^3^B10987185
"RTN","VAFCQRY",1,0)
VAFCQRY ;BIR/DLR-Query for patient demographics ;10/18/2000
"RTN","VAFCQRY",2,0)
 ;;5.3;Registration;**428,575,627**;Aug 13, 1993
"RTN","VAFCQRY",3,0)
IN ;process in the patient query
"RTN","VAFCQRY",4,0)
 N IEN,HLA,VAFCCNT,ICN,CLAIM,SG,VAFCER,VAFC,DFN,STATE,CITY,SUBCOMP,COMP,REP,LVL,LVL2,VAFC,SSN
"RTN","VAFCQRY",5,0)
 S VAFCCNT=1,VAFCER=1
"RTN","VAFCQRY",6,0)
 F VAFC=1:1 X HLNEXT Q:HLQUIT'>0  S SG=$E(HLNODE,1,3) D:$T(@SG)]"" @SG
"RTN","VAFCQRY",7,0)
 D CHKID^VAFCQRY2(.ICN,.SSN,.DFN)
"RTN","VAFCQRY",8,0)
 I $G(DFN)'>0 S VAFCER="-1^Unknown ICN#"_$G(ICN)_" and SSN#"_$G(SSN)
"RTN","VAFCQRY",9,0)
 S ^TMP("HLA",$J,VAFCCNT)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(VAFCER)'>0:$P(VAFCER,"^",2),1:""),VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",10,0)
 S ^TMP("HLA",$J,VAFCCNT)=VAFCQRD,VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",11,0)
 I $G(VAFCER)>0 D BLDRSP(DFN,.VAFCCNT)
"RTN","VAFCQRY",12,0)
 D LINK^HLUTIL3(SITE,.VAFC) S IEN=$O(VAFC(0)) S HLL("LINKS",1)="^"_VAFC(IEN)
"RTN","VAFCQRY",13,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.HLRESLTA,"",.HL)
"RTN","VAFCQRY",14,0)
 K VAFCER,VAFCID,COMP,SITE,VAFCFS,VAFCRCV,VAFCQRD,^TMP("HLA",$J)
"RTN","VAFCQRY",15,0)
 Q
"RTN","VAFCQRY",16,0)
RESP ;Response processing initiated from the MPI.
"RTN","VAFCQRY",17,0)
 Q
"RTN","VAFCQRY",18,0)
ROUTE ;Routine logic initiated from the MPI.
"RTN","VAFCQRY",19,0)
 Q
"RTN","VAFCQRY",20,0)
BLDRSP(DFN,VAFCCNT) ;
"RTN","VAFCQRY",21,0)
 N EVN,PID,PD1,SEQ,ERR,CNT,X
"RTN","VAFCQRY",22,0)
 ;construct EVN (for TF Event Type AND Last Treatment Date)
"RTN","VAFCQRY",23,0)
 S SEQ="1,2" D BLDEVN(DFN,.SEQ,.EVN,.HL,"A19",.ERR) S ^TMP("HLA",$J,VAFCCNT)=EVN(1) S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",24,0)
 ;construct PID
"RTN","VAFCQRY",25,0)
 S SEQ="" D BLDPID(DFN,1,.SEQ,.PID,.HL,.ERR) S ^TMP("HLA",$J,VAFCCNT)=PID(1) S X=1,CNT=1 F  S X=$O(PID(X)) Q:'X  I $D(PID(X)) S ^TMP("HLA",$J,VAFCCNT,CNT)=PID(X),CNT=CNT+1
"RTN","VAFCQRY",26,0)
 S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",27,0)
 ;construct PD1 (for CMOR)
"RTN","VAFCQRY",28,0)
 S SEQ="3" D BLDPD1(DFN,.SEQ,.PD1,.HL,.ERR) S ^TMP("HLA",$J,VAFCCNT)=PD1(1)
"RTN","VAFCQRY",29,0)
 S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",30,0)
 ;** PATCH 575
"RTN","VAFCQRY",31,0)
 ;construct ZPD segment
"RTN","VAFCQRY",32,0)
 S SEQ="17"
"RTN","VAFCQRY",33,0)
 S ^TMP("HLA",$J,VAFCCNT)=$$EN1^VAFHLZPD(DFN,SEQ)
"RTN","VAFCQRY",34,0)
 S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",35,0)
 Q
"RTN","VAFCQRY",36,0)
MSH ;process MSH segment
"RTN","VAFCQRY",37,0)
 S VAFCFS=HL("FS")
"RTN","VAFCQRY",38,0)
 S HLQ=HL("Q"),HLFS=HL("FS"),HLECH=HL("ECH")
"RTN","VAFCQRY",39,0)
 S VAFCID=HL("MID")
"RTN","VAFCQRY",40,0)
 S COMP=$E(HL("ECH"),1)
"RTN","VAFCQRY",41,0)
 S REP=$E(HL("ECH"),2)
"RTN","VAFCQRY",42,0)
 S SUBCOMP=$E(HL("ECH"),4)
"RTN","VAFCQRY",43,0)
 S SITE=$$LKUP^XUAF4($P($P(HLNODE,HL("FS"),4),COMP))
"RTN","VAFCQRY",44,0)
 Q
"RTN","VAFCQRY",45,0)
QRD ;process QRD segment
"RTN","VAFCQRY",46,0)
 N QRD,X,IDS,WSF,ID,QRDAA,QRDNTC
"RTN","VAFCQRY",47,0)
 S VAFCQRD=HLNODE
"RTN","VAFCQRY",48,0)
 S VAFCRCV=$P(VAFCQRD,HL("FS"),5)
"RTN","VAFCQRY",49,0)
 S IDS=$P(VAFCQRD,HL("FS"),9)
"RTN","VAFCQRY",50,0)
 F X=1:1:$L(IDS,REP) S WSF=$P(IDS,REP,X) D
"RTN","VAFCQRY",51,0)
 . ;get id, assigning authority, and name type code
"RTN","VAFCQRY",52,0)
 . S ID=$P(WSF,COMP),QRDAA=$P($P(WSF,COMP,9),SUBCOMP),QRDNTC=$P(WSF,COMP,10)
"RTN","VAFCQRY",53,0)
 . ;check assigning authority(0363) AND name type code(0203)
"RTN","VAFCQRY",54,0)
 . I QRDAA="USVHA" D
"RTN","VAFCQRY",55,0)
 .. I QRDNTC="NI" S ICN=ID  ;National unique individual identifier
"RTN","VAFCQRY",56,0)
 .. I QRDNTC="PI" S DFN=ID  ;Patient internal identifier
"RTN","VAFCQRY",57,0)
 . I QRDAA="USSSA" D
"RTN","VAFCQRY",58,0)
 .. I QRDNTC="SS" S SSN=ID  ;Social Security number
"RTN","VAFCQRY",59,0)
 Q
"RTN","VAFCQRY",60,0)
BLDEVN(DFN,SEQ,EVN,HL,EVR,ERR) ;build EVN for TF last treatment date and event reason
"RTN","VAFCQRY",61,0)
 ; At this point only sequence one and two are supported
"RTN","VAFCQRY",62,0)
 ; Variable list
"RTN","VAFCQRY",63,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",64,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",65,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",66,0)
 ;  EVN (passed by reference) - array location to place EVN segment result, the array can have existing values when passed.
"RTN","VAFCQRY",67,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",68,0)
 ;  EVR - event reason that triggered this message
"RTN","VAFCQRY",69,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",70,0)
 ;
"RTN","VAFCQRY",71,0)
 D BLDEVN^VAFCQRY2(DFN,SEQ,.EVN,.HL,EVR,.ERR)
"RTN","VAFCQRY",72,0)
 Q
"RTN","VAFCQRY",73,0)
BLDPD1(DFN,SEQ,PD1,HL,ERR) ;
"RTN","VAFCQRY",74,0)
 ; At this point only sequence 3 is supported
"RTN","VAFCQRY",75,0)
 ; Variable list
"RTN","VAFCQRY",76,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",77,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",78,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",79,0)
 ;  PD1 (passed by reference) - array location to place PD1 segment result, the array can have existing values when passed.
"RTN","VAFCQRY",80,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",81,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",82,0)
 ;
"RTN","VAFCQRY",83,0)
 D BLDPD1^VAFCQRY2(DFN,SEQ,.PD1,.HL,.ERR)
"RTN","VAFCQRY",84,0)
 Q
"RTN","VAFCQRY",85,0)
BLDPID(DFN,CNT,SEQ,PID,HL,ERR) ;build PID from File #2
"RTN","VAFCQRY",86,0)
 ;The required sequences 3 and 5 will be returned and at this point
"RTN","VAFCQRY",87,0)
 ;sequences 1-3,5-8,10-14,16,17,19,22-24 and 29 are supported
"RTN","VAFCQRY",88,0)
 ;
"RTN","VAFCQRY",89,0)
 ; At this point only sequence one and two are supported
"RTN","VAFCQRY",90,0)
 ; Variable list
"RTN","VAFCQRY",91,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",92,0)
 ;  CNT - value to be place in PID seq#1 (SET ID)
"RTN","VAFCQRY",93,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",94,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",95,0)
 ;  PID (passed by reference) - array location to place PID segment
"RTN","VAFCQRY",96,0)
 ;        result, the array can have existing values when passed.
"RTN","VAFCQRY",97,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",98,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",99,0)
 ;
"RTN","VAFCQRY",100,0)
 ;if this is a mismatch a null or """" should be passed in, so that
"RTN","VAFCQRY",101,0)
 ;the ICN will be removed at the site
"RTN","VAFCQRY",102,0)
 ;
"RTN","VAFCQRY",103,0)
 N VADEFSW
"RTN","VAFCQRY",104,0)
 D BLDPID^VAFCQRY1(DFN,CNT,SEQ,.PID,.HL,.ERR)
"RTN","VAFCQRY",105,0)
 Q
"RTN","VAFCQRY",106,0)
VDFPID(DFN,CNT,SEQ,PID,HL,ERR) ;build PID from FilE #2 for Vitra.
"RTN","VAFCQRY",107,0)
 ;This is the same as above except the HL7 control char will be encoded 
"RTN","VAFCQRY",108,0)
 ;when the APID is built
"RTN","VAFCQRY",109,0)
 N VADEFSW
"RTN","VAFCQRY",110,0)
 S VADEFSW="HL7"
"RTN","VAFCQRY",111,0)
 D BLDPID^VAFCQRY1(DFN,CNT,SEQ,.PID,.HL,.ERR)
"RTN","VAFCQRY",112,0)
 Q
"RTN","VAFCQRY1")
0^4^B57274916
"RTN","VAFCQRY1",1,0)
VAFCQRY1 ;BIR/DLR-Query for patient demographics ;10/30/02  13:58
"RTN","VAFCQRY1",2,0)
 ;;5.3;Registration;**428,474,477,575,627**;Aug 13, 1993
"RTN","VAFCQRY1",3,0)
 ;
"RTN","VAFCQRY1",4,0)
 ;Reference to $$GETDFNS^MPIF002 supported by IA #3634.
"RTN","VAFCQRY1",5,0)
 ;
"RTN","VAFCQRY1",6,0)
BLDPID(DFN,CNT,SEQ,PID,HL,ERR)  ;build PID from File #2
"RTN","VAFCQRY1",7,0)
 ; Variable list
"RTN","VAFCQRY1",8,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY1",9,0)
 ;  CNT - value to be place in PID seq#1 (SET ID)
"RTN","VAFCQRY1",10,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY1",11,0)
 ;        that will be used to build the message (default is ALL)
"RTN","VAFCQRY1",12,0)
 ;  PID (passed by reference) - array location to place PID segment
"RTN","VAFCQRY1",13,0)
 ;        result, the array can have existing values when passed.
"RTN","VAFCQRY1",14,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY1",15,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY1",16,0)
 ;
"RTN","VAFCQRY1",17,0)
 N VAFCMN,VAFCMMN,SITE,VAFCZN,SSN,SITE,APID,HIST,HISTDT,VAFCHMN,NXT,NXTC,COMP,REP,SUBCOMP,STATE,CITY,CLAIM,HLECH,HLFS,HLQ,STATEIEN,SARY,LVL,LNGTH,X
"RTN","VAFCQRY1",18,0)
 I '$D(SEQ) S SEQ="ALL"
"RTN","VAFCQRY1",19,0)
 I SEQ="" S SEQ="ALL"
"RTN","VAFCQRY1",20,0)
 I SEQ'="ALL" D
"RTN","VAFCQRY1",21,0)
 .; setting up temp array to hold fields to be included in message
"RTN","VAFCQRY1",22,0)
 .N POS,EN S POS=1 F  S EN=$P(SEQ,",",POS) Q:EN=""  S SARY(EN)="",POS=POS+1
"RTN","VAFCQRY1",23,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),HLQ=HL("Q"),COMP=$E(HL("ECH"),1)
"RTN","VAFCQRY1",24,0)
 S SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2),VABSLSH=$E(HL("ECH"),3)
"RTN","VAFCQRY1",25,0)
 ;get Patient File MPI node
"RTN","VAFCQRY1",26,0)
 S VAFCMN=$$MPINODE^MPIFAPI(DFN)
"RTN","VAFCQRY1",27,0)
 I +VAFCMN<0 S VAFCMN=""
"RTN","VAFCQRY1",28,0)
 S VAFCZN=^DPT(DFN,0),SSN=$P(^DPT(DFN,0),"^",9)
"RTN","VAFCQRY1",29,0)
 S SITE=$$SITE^VASITE
"RTN","VAFCQRY1",30,0)
 N TMP F TMP=1:1:31 S APID(TMP)=""
"RTN","VAFCQRY1",31,0)
 S APID(2)=CNT
"RTN","VAFCQRY1",32,0)
 ;repeat patient ID list including ICN (NI),SSN (SS),CLAIM# (PN) AND DFN (PI)
"RTN","VAFCQRY1",33,0)
 I $D(SARY(3))!(SEQ="ALL") D
"RTN","VAFCQRY1",34,0)
 .S APID(4)=""
"RTN","VAFCQRY1",35,0)
 .;National Identifier (ICN)
"RTN","VAFCQRY1",36,0)
 .I VAFCMN'="" I +VAFCMN>0 S APID(4)=$P(VAFCMN,"^")_"V"_$P(VAFCMN,"^",2)_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L" D
"RTN","VAFCQRY1",37,0)
 ..;Assumption that if this is a local ICN at this point send the message with an expiration date of today, so that it will be treated as a deprecated ID and stored on the MPI as such
"RTN","VAFCQRY1",38,0)
 ..I $E($P(VAFCMN,"^"),1,3)=$P($$SITE^VASITE,"^",3) S APID(4)=APID(4)_COMP_COMP_$$HLDATE^HLFNC(DT)
"RTN","VAFCQRY1",39,0)
 .I $G(SSN)'="" S APID(4)=APID(4)_$S(APID(4)'="":REP,1:"")_SSN_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","VAFCQRY1",40,0)
 .I $G(DFN)'="" S APID(4)=APID(4)_$S(APID(4)'="":REP,1:"")_DFN_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L" D
"RTN","VAFCQRY1",41,0)
 ..;CLAIM#
"RTN","VAFCQRY1",42,0)
 ..I $D(^DPT(DFN,.31)) S CLAIM=$P(^DPT(DFN,.31),"^",3) I +CLAIM>0 S APID(4)=APID(4)_REP_CLAIM_COMP_COMP_COMP_"USVBA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PN"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","VAFCQRY1",43,0)
 .I $D(^DPT(DFN,"MPIFHIS")) N HIST S NXTC=0,LVL=0,HIST=0  F  S HIST=$O(^DPT(DFN,"MPIFHIS",HIST)) Q:'HIST  S VAFCHMN=^DPT(DFN,"MPIFHIS",HIST,0) S HISTDT=$P(VAFCHMN,"^",4) D
"RTN","VAFCQRY1",44,0)
 ..;**477 due to a timing issue if checksum and D/T of deprication of ICN is not present hang two seconds and try again if still not able to get ICN set D/T to DT
"RTN","VAFCQRY1",45,0)
 ..I $G(HISTDT)="" H 2 S VAFCHMN=^DPT(DFN,"MPIFHIS",HIST,0) S HISTDT=$P(VAFCHMN,"^",4) I HISTDT="" S HISTDT=DT
"RTN","VAFCQRY1",46,0)
 ..I APID(4)'="" D
"RTN","VAFCQRY1",47,0)
 ...S NXT=$P(VAFCHMN,"^")_"V"_$P(VAFCHMN,"^",2)_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(HISTDT)
"RTN","VAFCQRY1",48,0)
 ...I LVL=0 D
"RTN","VAFCQRY1",49,0)
 ....I $L(APID(4)_NXT)'>244 S APID(4)=APID(4)_REP_NXT Q
"RTN","VAFCQRY1",50,0)
 ....I $L(APID(4)_NXT)>244 S LVL=1 S LNGTH=244-$L(APID(4)),APID(4)=APID(4)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),NXTC=1
"RTN","VAFCQRY1",51,0)
 ...I LVL>0 D
"RTN","VAFCQRY1",52,0)
 ....I $L($G(APID(4,LVL))_NXT)'>245 S APID(4,LVL)=$G(APID(4,LVL))_$S(NXTC=0:REP,1:"")_NXT Q
"RTN","VAFCQRY1",53,0)
 ....I $L($G(APID(4,LVL))_NXT)>245 S LNGTH=244-$L(APID(4,LVL)),APID(4,LVL)=APID(4,LVL)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)) S LVL=LVL+1 S APID(4,LVL)=NXT
"RTN","VAFCQRY1",54,0)
 ..I NXTC=1 S NXTC=0
"RTN","VAFCQRY1",55,0)
 ..I APID(4)="" S APID(4)=$P(VAFCHMN,"^")_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(HISTDT)
"RTN","VAFCQRY1",56,0)
NAMEPID ;patient name (last^first^middle^suffix^prefix^^"L" for legal)
"RTN","VAFCQRY1",57,0)
 I $D(SARY(5))!(SEQ="ALL") D
"RTN","VAFCQRY1",58,0)
 .S APID(6)=$$HLNAME^XLFNAME($P(VAFCZN,"^"),"",$E(HL("ECH"),1)),$P(APID(6),$E(HL("ECH"),1),7)="L"_REP
"RTN","VAFCQRY1",59,0)
 .;patient alias (last^first^middle^suffice^prefix^^"A" for alias - can be multiple)
"RTN","VAFCQRY1",60,0)
 .N ALIAS,ALIEN,VAFCA,LVL6 D GETS^DIQ(2,DFN_",","1*","E","VAFCA")
"RTN","VAFCQRY1",61,0)
 .S LVL6=0
"RTN","VAFCQRY1",62,0)
 .I $O(VAFCA(2.01,0))'="" S ALIEN=0 F  S ALIEN=$O(VAFCA(2.01,ALIEN)) Q:'ALIEN  D
"RTN","VAFCQRY1",63,0)
 ..S ALIAS=$G(VAFCA(2.01,ALIEN,.01,"E"))
"RTN","VAFCQRY1",64,0)
 ..S ALIAS=$$HLNAME^XLFNAME(ALIAS,"",$E(HL("ECH"),1))
"RTN","VAFCQRY1",65,0)
 ..Q:ALIAS=""
"RTN","VAFCQRY1",66,0)
 ..S $P(ALIAS,$E(HL("ECH"),1),7)="A"
"RTN","VAFCQRY1",67,0)
 .. I LVL6=0 D
"RTN","VAFCQRY1",68,0)
 ... I $L(APID(6)_ALIAS)'>244 S APID(6)=APID(6)_ALIAS_REP Q
"RTN","VAFCQRY1",69,0)
MOTHER ... I $L(APID(6)_ALIAS)>244 S LVL6=1
"RTN","VAFCQRY1",70,0)
 .. I LVL6>0 D
"RTN","VAFCQRY1",71,0)
 ... I $L($G(APID(6,LVL6))_ALIAS)'>245 S APID(6,LVL6)=$G(APID(6,LVL6))_ALIAS_REP Q
"RTN","VAFCQRY1",72,0)
 ... I $L($G(APID(6,LVL6))_ALIAS)>245 S LVL6=LVL6+1,APID(6,LVL6)=ALIAS_REP
"RTN","VAFCQRY1",73,0)
 . I APID(6)="" S APID(6)=HL("Q")
"RTN","VAFCQRY1",74,0)
 ;mother's maiden name  (last^first^middle^suffix^prefix^^"M" for maiden name)
"RTN","VAFCQRY1",75,0)
 I $D(SARY(6))!(SEQ="ALL") D
"RTN","VAFCQRY1",76,0)
 .S APID(7)=HL("Q")
"RTN","VAFCQRY1",77,0)
 .I $D(^DPT(DFN,.24)) S VAFCMMN=$P(^DPT(DFN,.24),"^",3) D
"RTN","VAFCQRY1",78,0)
 ..S APID(7)=$$HLNAME^XLFNAME(VAFCMMN,"",$E(HL("ECH"),1)) I APID(7)="" S APID(7)=HL("Q")
"RTN","VAFCQRY1",79,0)
 ..I $P(APID(7),$E(HL("ECH"),1),7)'="M" S $P(APID(7),$E(HL("ECH"),1),7)="M"
"RTN","VAFCQRY1",80,0)
 .I APID(7)="" S APID(7)=HL("Q")
"RTN","VAFCQRY1",81,0)
 I $D(SARY(7))!(SEQ="ALL") S APID(8)=$$HLDATE^HLFNC($P(VAFCZN,"^",3)) I APID(8)="" S APID(8)=HL("Q") ;date/time of birth
"RTN","VAFCQRY1",82,0)
 I $D(SARY(8))!(SEQ="ALL") S APID(9)=$P(VAFCZN,"^",2) I APID(9)="" S APID(9)=HL("Q") ;sex
"RTN","VAFCQRY1",83,0)
 ;place of birth city and state
"RTN","VAFCQRY1",84,0)
ADDR ;
"RTN","VAFCQRY1",85,0)
 I $D(SARY(11))!(SEQ="ALL") S APID(12)="" D
"RTN","VAFCQRY1",86,0)
 .I $D(^DPT(DFN,0)) D
"RTN","VAFCQRY1",87,0)
 ..;address info
"RTN","VAFCQRY1",88,0)
 ..S HL7STRG=$$GET1^DIQ(2,DFN_",",.111) I $G(VADEFSW)="HL7" D HL7TXT
"RTN","VAFCQRY1",89,0)
 ..S $P(APID(12),COMP)=HL7STRG I $P(APID(12),COMP)="" S $P(APID(12),COMP)=HL("Q")
"RTN","VAFCQRY1",90,0)
 ..N LINE2 S LINE2=$$GET1^DIQ(2,DFN_",",.112) N LINE3 S LINE3=$$GET1^DIQ(2,DFN_",",.113)
"RTN","VAFCQRY1",91,0)
 ..S $P(APID(12),COMP,2)=LINE2 I $P(APID(12),COMP,2)="" S $P(APID(12),COMP,2)=HL("Q")
"RTN","VAFCQRY1",92,0)
 ..S $P(APID(12),COMP,8)=LINE3 I $P(APID(12),COMP,8)="" S $P(APID(12),COMP,8)=HL("Q")
"RTN","VAFCQRY1",93,0)
 ..S $P(APID(12),COMP,3)=$$GET1^DIQ(2,DFN_",",.114) I $P(APID(12),COMP,3)="" S $P(APID(12),COMP,3)=HL("Q")
"RTN","VAFCQRY1",94,0)
 ..S STATEIEN=$$GET1^DIQ(2,DFN_",",.115,"I") S STATE=$$GET1^DIQ(5,+STATEIEN_",",1) S $P(APID(12),COMP,4)=$G(STATE) I $P(APID(12),COMP,4)="" S $P(APID(12),COMP,4)=HL("Q")
"RTN","VAFCQRY1",95,0)
 ..S $P(APID(12),COMP,5)=$$GET1^DIQ(2,DFN_",",.1112) I $P(APID(12),COMP,5)="" S $P(APID(12),COMP,5)=HL("Q")
"RTN","VAFCQRY1",96,0)
 ..S $P(APID(12),COMP,7)="P"
"RTN","VAFCQRY1",97,0)
 ..;place of birth information
"RTN","VAFCQRY1",98,0)
 ..S CITY=$$GET1^DIQ(2,DFN_",",.092) D
"RTN","VAFCQRY1",99,0)
 ...I $G(CITY)'="" S $P(X,COMP,3)=CITY
"RTN","VAFCQRY1",100,0)
 ...I $G(CITY)="" S $P(X,COMP,3)=HL("Q")
"RTN","VAFCQRY1",101,0)
 ...S STATEIEN=$$GET1^DIQ(2,DFN_",",.093,"I") S STATE=$$GET1^DIQ(5,+STATEIEN_",",1) D
"RTN","VAFCQRY1",102,0)
 ....I $G(STATE)'="" S $P(X,COMP,4)=STATE
"RTN","VAFCQRY1",103,0)
 ....I $G(STATE)="" S $P(X,COMP,4)=HL("Q")
"RTN","VAFCQRY1",104,0)
 ... S $P(X,COMP,7)="N",APID(12)=$G(APID(12))_REP_X
"RTN","VAFCQRY1",105,0)
 I $D(SARY(12))!(SEQ="ALL") S APID(13)=$$GET1^DIQ(2,DFN_",",.117) I APID(13)="" S APID(13)=HL("Q")  ;county code
"RTN","VAFCQRY1",106,0)
 I $D(SARY(13))!($D(SARY(14)))!(SEQ="ALL") N PHONEN,HNUM,WNUM S PHONEN=$G(^DPT(DFN,.13)) S HNUM=$P(PHONEN,"^",1),WNUM=$P(PHONEN,"^",2)
"RTN","VAFCQRY1",107,0)
 I $D(SARY(13))!(SEQ="ALL") S APID(14)=$$HLPHONE^HLFNC(HNUM) I APID(14)="" S APID(14)=HL("Q")
"RTN","VAFCQRY1",108,0)
 I $D(SARY(14))!(SEQ="ALL") S APID(15)=$$HLPHONE^HLFNC(WNUM) I APID(15)="" S APID(15)=HL("Q")
"RTN","VAFCQRY1",109,0)
 I $D(SARY(19))!(SEQ="ALL") S APID(20)=SSN  ;ssn passed in PID-3
"RTN","VAFCQRY1",110,0)
 I $D(SARY(23))!(SEQ="ALL") D
"RTN","VAFCQRY1",111,0)
 .S CITY=$$GET1^DIQ(2,DFN_",",.092)
"RTN","VAFCQRY1",112,0)
 .S STATEIEN=$$GET1^DIQ(2,DFN_",",.093,"I") S STATE=$$GET1^DIQ(5,+STATEIEN_",",1) D
"RTN","VAFCQRY1",113,0)
 .I CITY'=""&(STATE'="") S APID(24)=CITY_" "_STATE  ;place of birth (not used) use PID-11 with an 'N' instead
"RTN","VAFCQRY1",114,0)
 .I CITY=""&(STATE="") S APID(24)=HL("Q")
"RTN","VAFCQRY1",115,0)
 ;list of fields used for backwards compatibility with HDR
"RTN","VAFCQRY1",116,0)
 I $D(SARY(2))!(SEQ="ALL") S APID(3)=$P(VAFCMN,"^")_"V"_$P(VAFCMN,"^",2)  ;Patient ID
"RTN","VAFCQRY1",117,0)
 D CONT^VAFCQRY3(DFN,.APID,.PID,.HL,.SARY,SEQ,.ERR,REP,COMP)
"RTN","VAFCQRY1",118,0)
 D KVA^VADPT
"RTN","VAFCQRY1",119,0)
 Q
"RTN","VAFCQRY1",120,0)
HL7TXT ; Replace occurrences of embedded HL7 delimiters with
"RTN","VAFCQRY1",121,0)
 ; HL7 escape sequence
"RTN","VAFCQRY1",122,0)
 ;
"RTN","VAFCQRY1",123,0)
 ; Inputs: HL7STRG - Data string to be checked
"RTN","VAFCQRY1",124,0)
 ;         HL("ECH") - HL7 delimiter string
"RTN","VAFCQRY1",125,0)
 ;             Delimiters MUST be in the following order,
"RTN","VAFCQRY1",126,0)
 ;               Escape, Field, Component, Repeat, Subcomponent
"RTN","VAFCQRY1",127,0)
 ;               Example: \^~|&
"RTN","VAFCQRY1",128,0)
 ;
"RTN","VAFCQRY1",129,0)
 ; Output: HL7XTRG - Data string with escape sequence added (if needed)
"RTN","VAFCQRY1",130,0)
 ;
"RTN","VAFCQRY1",131,0)
 N OCHR,RCHR,RCHRI,TYPE,I,HLES
"RTN","VAFCQRY1",132,0)
 ;
"RTN","VAFCQRY1",133,0)
 ; Set HL7 escape char
"RTN","VAFCQRY1",134,0)
 S HLES2=VABSLSH_HLFS_COMP_REP_SUBCOMP
"RTN","VAFCQRY1",135,0)
 S HLES=VABSLSH
"RTN","VAFCQRY1",136,0)
 ;
"RTN","VAFCQRY1",137,0)
 ; Search for occurrence of each delimiter and replace it with "\<type>\"
"RTN","VAFCQRY1",138,0)
 F TYPE="E","F","C","R","S" D
"RTN","VAFCQRY1",139,0)
 . S RCHRI=$S(TYPE="E":1,TYPE="F":2,TYPE="C":3,TYPE="R":4,TYPE="S":5)
"RTN","VAFCQRY1",140,0)
 . ;
"RTN","VAFCQRY1",141,0)
 . ; OCHR=original char, RCHR=replacement char
"RTN","VAFCQRY1",142,0)
 . S OCHR=$E(HLES2,RCHRI),RCHR=$E("EFSRT",RCHRI) Q:'$F(HL7STRG,OCHR)
"RTN","VAFCQRY1",143,0)
 . F I=1:1 Q:$E(HL7STRG,I)=""  I $E(HL7STRG,I)=OCHR S HL7STRG=$E(HL7STRG,1,I-1)_HLES_RCHR_HLES_$E(HL7STRG,I+1,999),I=I+2
"RTN","VAFCQRY1",144,0)
 Q 
"VER")
8.0^22.0
**END**
**END**
