KIDS Distribution saved on Jan 16, 2004@09:16:35
XT*7.3*84, OR*3*214, and TIU*1*181
**KIDS**:CPRS MONITOR 1.0^XT*7.3*84^OR*3.0*214^TIU*1.0*181^

**INSTALL NAME**
CPRS MONITOR 1.0
"BLD",896,0)
CPRS MONITOR 1.0^^1^3040116^y
"BLD",896,10,0)
^9.63^3^3
"BLD",896,10,1,0)
XT*7.3*84
"BLD",896,10,2,0)
OR*3.0*214
"BLD",896,10,3,0)
TIU*1.0*181
"BLD",896,10,"B","OR*3.0*214",2)

"BLD",896,10,"B","TIU*1.0*181",3)

"BLD",896,10,"B","XT*7.3*84",1)

"BLD",896,"KRN",0)
^9.67PA^8989.52^19
"BLD",896,"KRN",.4,0)
.4
"BLD",896,"KRN",.401,0)
.401
"BLD",896,"KRN",.402,0)
.402
"BLD",896,"KRN",.403,0)
.403
"BLD",896,"KRN",.5,0)
.5
"BLD",896,"KRN",.84,0)
.84
"BLD",896,"KRN",3.6,0)
3.6
"BLD",896,"KRN",3.8,0)
3.8
"BLD",896,"KRN",9.2,0)
9.2
"BLD",896,"KRN",9.8,0)
9.8
"BLD",896,"KRN",19,0)
19
"BLD",896,"KRN",19.1,0)
19.1
"BLD",896,"KRN",101,0)
101
"BLD",896,"KRN",409.61,0)
409.61
"BLD",896,"KRN",771,0)
771
"BLD",896,"KRN",870,0)
870
"BLD",896,"KRN",8989.51,0)
8989.51
"BLD",896,"KRN",8989.52,0)
8989.52
"BLD",896,"KRN",8994,0)
8994
"BLD",896,"KRN","B",.4,.4)

"BLD",896,"KRN","B",.401,.401)

"BLD",896,"KRN","B",.402,.402)

"BLD",896,"KRN","B",.403,.403)

"BLD",896,"KRN","B",.5,.5)

"BLD",896,"KRN","B",.84,.84)

"BLD",896,"KRN","B",3.6,3.6)

"BLD",896,"KRN","B",3.8,3.8)

"BLD",896,"KRN","B",9.2,9.2)

"BLD",896,"KRN","B",9.8,9.8)

"BLD",896,"KRN","B",19,19)

"BLD",896,"KRN","B",19.1,19.1)

"BLD",896,"KRN","B",101,101)

"BLD",896,"KRN","B",409.61,409.61)

"BLD",896,"KRN","B",771,771)

"BLD",896,"KRN","B",870,870)

"BLD",896,"KRN","B",8989.51,8989.51)

"BLD",896,"KRN","B",8989.52,8989.52)

"BLD",896,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0T20^22.0
**INSTALL NAME**
XT*7.3*84
"BLD",897,0)
XT*7.3*84^^0^3040116^y
"BLD",897,1,0)
^^1^1^3031231^
"BLD",897,1,1,0)
The National CPRS Monitor.
"BLD",897,4,0)
^9.64PA^177100.13^2
"BLD",897,4,177100.12,0)
177100.12
"BLD",897,4,177100.12,222)
y^n^f^^^^n
"BLD",897,4,177100.13,0)
177100.13
"BLD",897,4,177100.13,222)
y^n^f^^^^n
"BLD",897,4,"B",177100.12,177100.12)

"BLD",897,4,"B",177100.13,177100.13)

"BLD",897,"INID")
^n
"BLD",897,"INIT")
AWCMCPST
"BLD",897,"KRN",0)
^9.67PA^8989.52^19
"BLD",897,"KRN",.4,0)
.4
"BLD",897,"KRN",.4,"NM",0)
^9.68A^^
"BLD",897,"KRN",.401,0)
.401
"BLD",897,"KRN",.402,0)
.402
"BLD",897,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",897,"KRN",.402,"NM",1,0)
AWCM EDIT PARAM FILE    FILE #177100.12^177100.12^0
"BLD",897,"KRN",.402,"NM","B","AWCM EDIT PARAM FILE    FILE #177100.12",1)

"BLD",897,"KRN",.403,0)
.403
"BLD",897,"KRN",.5,0)
.5
"BLD",897,"KRN",.84,0)
.84
"BLD",897,"KRN",3.6,0)
3.6
"BLD",897,"KRN",3.8,0)
3.8
"BLD",897,"KRN",9.2,0)
9.2
"BLD",897,"KRN",9.8,0)
9.8
"BLD",897,"KRN",9.8,"NM",0)
^9.68A^10^8
"BLD",897,"KRN",9.8,"NM",3,0)
AWCMCPR1^^0^B76649854
"BLD",897,"KRN",9.8,"NM",4,0)
AWCMCPR2^^0^B22392223
"BLD",897,"KRN",9.8,"NM",5,0)
AWCMCPR3^^0^B32117194
"BLD",897,"KRN",9.8,"NM",6,0)
AWCMCPR4^^0^B3524379
"BLD",897,"KRN",9.8,"NM",7,0)
AWCMCPST^^0^B6260984
"BLD",897,"KRN",9.8,"NM",8,0)
AWCMFTP^^0^B29633164
"BLD",897,"KRN",9.8,"NM",9,0)
AWCMFTP1^^0^B19327079
"BLD",897,"KRN",9.8,"NM",10,0)
AWCMCPUR^^0^B2294987
"BLD",897,"KRN",9.8,"NM","B","AWCMCPR1",3)

"BLD",897,"KRN",9.8,"NM","B","AWCMCPR2",4)

"BLD",897,"KRN",9.8,"NM","B","AWCMCPR3",5)

"BLD",897,"KRN",9.8,"NM","B","AWCMCPR4",6)

"BLD",897,"KRN",9.8,"NM","B","AWCMCPST",7)

"BLD",897,"KRN",9.8,"NM","B","AWCMCPUR",10)

"BLD",897,"KRN",9.8,"NM","B","AWCMFTP",8)

"BLD",897,"KRN",9.8,"NM","B","AWCMFTP1",9)

"BLD",897,"KRN",19,0)
19
"BLD",897,"KRN",19,"NM",0)
^9.68A^7^7
"BLD",897,"KRN",19,"NM",1,0)
AWCM CPRS MONITOR^^0
"BLD",897,"KRN",19,"NM",2,0)
AWCM EDIT PARAM FILE^^0
"BLD",897,"KRN",19,"NM",3,0)
AWCM LOCAL ROLLUP^^0
"BLD",897,"KRN",19,"NM",4,0)
AWCM MAIN^^0
"BLD",897,"KRN",19,"NM",5,0)
AWCM MANUAL RESEND^^0
"BLD",897,"KRN",19,"NM",6,0)
AWCM PURGE CPRS MONITOR DATA^^0
"BLD",897,"KRN",19,"NM",7,0)
AWCM ROLL UP NATIONAL DATA^^0
"BLD",897,"KRN",19,"NM","B","AWCM CPRS MONITOR",1)

"BLD",897,"KRN",19,"NM","B","AWCM EDIT PARAM FILE",2)

"BLD",897,"KRN",19,"NM","B","AWCM LOCAL ROLLUP",3)

"BLD",897,"KRN",19,"NM","B","AWCM MAIN",4)

"BLD",897,"KRN",19,"NM","B","AWCM MANUAL RESEND",5)

"BLD",897,"KRN",19,"NM","B","AWCM PURGE CPRS MONITOR DATA",6)

"BLD",897,"KRN",19,"NM","B","AWCM ROLL UP NATIONAL DATA",7)

"BLD",897,"KRN",19.1,0)
19.1
"BLD",897,"KRN",101,0)
101
"BLD",897,"KRN",409.61,0)
409.61
"BLD",897,"KRN",771,0)
771
"BLD",897,"KRN",870,0)
870
"BLD",897,"KRN",8989.51,0)
8989.51
"BLD",897,"KRN",8989.52,0)
8989.52
"BLD",897,"KRN",8994,0)
8994
"BLD",897,"KRN","B",.4,.4)

"BLD",897,"KRN","B",.401,.401)

"BLD",897,"KRN","B",.402,.402)

"BLD",897,"KRN","B",.403,.403)

"BLD",897,"KRN","B",.5,.5)

"BLD",897,"KRN","B",.84,.84)

"BLD",897,"KRN","B",3.6,3.6)

"BLD",897,"KRN","B",3.8,3.8)

"BLD",897,"KRN","B",9.2,9.2)

"BLD",897,"KRN","B",9.8,9.8)

"BLD",897,"KRN","B",19,19)

"BLD",897,"KRN","B",19.1,19.1)

"BLD",897,"KRN","B",101,101)

"BLD",897,"KRN","B",409.61,409.61)

"BLD",897,"KRN","B",771,771)

"BLD",897,"KRN","B",870,870)

"BLD",897,"KRN","B",8989.51,8989.51)

"BLD",897,"KRN","B",8989.52,8989.52)

"BLD",897,"KRN","B",8994,8994)

"BLD",897,"QUES",0)
^9.62^^
"BLD",897,"REQB",0)
^9.611^^
"FIA",177100.12)
CPRS MONITOR
"FIA",177100.12,0)
^AWC(177100.12,
"FIA",177100.12,0,0)
177100.12P
"FIA",177100.12,0,1)
y^n^f^^^^n
"FIA",177100.12,0,10)

"FIA",177100.12,0,11)

"FIA",177100.12,0,"RLRO")

"FIA",177100.12,177100.12)
0
"FIA",177100.13)
CPRS MONITOR DATA
"FIA",177100.13,0)
^AWC(177100.13,
"FIA",177100.13,0,0)
177100.13
"FIA",177100.13,0,1)
y^n^f^^^^n
"FIA",177100.13,0,10)

"FIA",177100.13,0,11)

"FIA",177100.13,0,"RLRO")

"FIA",177100.13,177100.13)
0
"INIT")
AWCMCPST
"KRN",.402,2820996,-1)
0^1
"KRN",.402,2820996,0)
AWCM EDIT PARAM FILE^3031218.0727^^177100.12^^^3040107
"KRN",.402,2820996,"DR",1,177100.12)
1.2;1.5;1;2;3;4;5;6;7;8;9;10;11;12;13;14;17;18;19;20;21;22;23;24;
"KRN",19,3140,-1)
0^6
"KRN",19,3140,0)
AWCM PURGE CPRS MONITOR DATA^Purge CPRS Monitor Data^^R^^^^^^^^
"KRN",19,3140,1,0)
^^2^2^3031226^
"KRN",19,3140,1,1,0)
This option purges the CPRS monitor data.  It leaves thirty days on file 
"KRN",19,3140,1,2,0)
automatically if no parameter is set up for it.
"KRN",19,3140,25)
AWCMCPUR
"KRN",19,3140,200.9)
y
"KRN",19,3140,"U")
PURGE CPRS MONITOR DATA
"KRN",19,3141,-1)
0^1
"KRN",19,3141,0)
AWCM CPRS MONITOR^Generate CPRS Monitor Web Data^^R^^^^^^^^
"KRN",19,3141,1,0)
^19.06^3^3^3030712^^
"KRN",19,3141,1,1,0)
Generates web data for the CPRS Monitor.  It is suggested that this 
"KRN",19,3141,1,2,0)
option run every 10 minutes because the time increments on the graph are 
"KRN",19,3141,1,3,0)
10 minutes.
"KRN",19,3141,25)
PPAGE^AWCMCPR1
"KRN",19,3141,"U")
GENERATE CPRS MONITOR WEB DATA
"KRN",19,3142,-1)
0^2
"KRN",19,3142,0)
AWCM EDIT PARAM FILE^Edit CPRS Monitor Parameter File^^E^^^^^^^^^^1^1
"KRN",19,3142,1,0)
^19.06^2^2^3031230^^^^
"KRN",19,3142,1,1,0)
This option allows the editing of the VISN 7 CPRS Monitor parameter file, 
"KRN",19,3142,1,2,0)
177100.12 .
"KRN",19,3142,15)
W @IOF,!
"KRN",19,3142,20)
W @IOF,!,"Edit the CPRS Monitor Parameter File",!!
"KRN",19,3142,30)
AWC(177100.12,
"KRN",19,3142,31)
AEMQL
"KRN",19,3142,50)
AWC(177100.12,
"KRN",19,3142,51)
[AWCM EDIT PARAM FILE]
"KRN",19,3142,"U")
EDIT CPRS MONITOR PARAMETER FI
"KRN",19,3143,-1)
0^4
"KRN",19,3143,0)
AWCM MAIN^CPRS Monitor Main Menu^^M^^^^^^^^^^^1^^1
"KRN",19,3143,1,0)
^19.06^1^1^3030822^^
"KRN",19,3143,1,1,0)
The main menu for the CPRS Monitor parameter file.
"KRN",19,3143,10,0)
^19.01IP^5^5
"KRN",19,3143,10,1,0)
3141^2
"KRN",19,3143,10,1,"^")
AWCM CPRS MONITOR
"KRN",19,3143,10,2,0)
3142^1
"KRN",19,3143,10,2,"^")
AWCM EDIT PARAM FILE
"KRN",19,3143,10,3,0)
3140^3
"KRN",19,3143,10,3,"^")
AWCM PURGE CPRS MONITOR DATA
"KRN",19,3143,10,4,0)
3144^4
"KRN",19,3143,10,4,"^")
AWCM ROLL UP NATIONAL DATA
"KRN",19,3143,10,5,0)
3145^5
"KRN",19,3143,10,5,"^")
AWCM MANUAL RESEND
"KRN",19,3143,15)
W @IOF,!
"KRN",19,3143,26)
W @IOF,!!!!
"KRN",19,3143,99)
59550,33230
"KRN",19,3143,"U")
CPRS MONITOR MAIN MENU
"KRN",19,3144,-1)
0^7
"KRN",19,3144,0)
AWCM ROLL UP NATIONAL DATA^Roll Up Data to National Database^^R^^^^^^^^
"KRN",19,3144,1,0)
^19.06^3^3^3030822^^
"KRN",19,3144,1,1,0)
This option rolls up data to the National CPRS response time database in 
"KRN",19,3144,1,2,0)
Silver Springs, MD.  It should be run as a tasked job only, at 1205 
"KRN",19,3144,1,3,0)
am nightly.
"KRN",19,3144,25)
GENSTAT^AWCMCPR3
"KRN",19,3144,200.9)
y
"KRN",19,3144,"U")
ROLL UP DATA TO NATIONAL DATAB
"KRN",19,3145,-1)
0^5
"KRN",19,3145,0)
AWCM MANUAL RESEND^Re-send Data to National Server^^R^^^^^^^^
"KRN",19,3145,1,0)
^^2^2^3030829^
"KRN",19,3145,1,1,0)
This option will resend any day's data to the National CPRS Monitors 
"KRN",19,3145,1,2,0)
server, provided there is still data to send.
"KRN",19,3145,25)
MANUAL^AWCMCPR3
"KRN",19,3145,"U")
RE-SEND DATA TO NATIONAL SERVE
"KRN",19,3146,-1)
0^3
"KRN",19,3146,0)
AWCM LOCAL ROLLUP^Local Nightly Rollup^^R^^^^^^^^
"KRN",19,3146,1,0)
^^3^3^3031114^
"KRN",19,3146,1,1,0)
This option does a nightly rollup from the temporary holding global to 
"KRN",19,3146,1,2,0)
the regular file 177100.13.  The data is stored there for archival 
"KRN",19,3146,1,3,0)
purposes.
"KRN",19,3146,25)
AWCMCPR4
"KRN",19,3146,"U")
LOCAL NIGHTLY ROLLUP
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","AWCMCPR1")
0^3^B76649854
"RTN","AWCMCPR1",1,0)
AWCMCPR1        ;VISN 7/THM-CPRS MONITOR [2 JULY 2003 @ 12:12PM] ; 09 Jan 2004  3:43 PM
"RTN","AWCMCPR1",2,0)
 ;;7.3;TOOLKIT;**84**;Jan 9, 2004
"RTN","AWCMCPR1",3,0)
 ;
"RTN","AWCMCPR1",4,0)
 W !!,$C(7),"You cannot run this program directly.",!,"Application use only !!",!! H 2 Q  ;enter properly
"RTN","AWCMCPR1",5,0)
 ;
"RTN","AWCMCPR1",6,0)
STRT1 ; tiu
"RTN","AWCMCPR1",7,0)
 N AWCDTA S AWCDTA=$G(^AWC(177100.12,1,0))
"RTN","AWCMCPR1",8,0)
 I $P(AWCDTA,U,17)'=1 G ENDQ ;master switch
"RTN","AWCMCPR1",9,0)
 I $P(AWCDTA,U,2)'=1 G ENDQ ;tiu
"RTN","AWCMCPR1",10,0)
 S AWCTYPE=1,AWCSTRT=$H
"RTN","AWCMCPR1",11,0)
 Q
"RTN","AWCMCPR1",12,0)
 ;
"RTN","AWCMCPR1",13,0)
STRT2 ; lab
"RTN","AWCMCPR1",14,0)
 N AWCDTA S AWCDTA=$G(^AWC(177100.12,1,0))
"RTN","AWCMCPR1",15,0)
 I $P(AWCDTA,U,17)'=1 G ENDQ ;master switch
"RTN","AWCMCPR1",16,0)
 I $P(AWCDTA,U,3)'=1 G ENDQ ;lab
"RTN","AWCMCPR1",17,0)
 S AWCTYPE=2,AWCSTRT=$H
"RTN","AWCMCPR1",18,0)
 Q
"RTN","AWCMCPR1",19,0)
 ;
"RTN","AWCMCPR1",20,0)
STRT3 ; reminders
"RTN","AWCMCPR1",21,0)
 N AWCDTA S AWCDTA=$G(^AWC(177100.12,1,0))
"RTN","AWCMCPR1",22,0)
 I $P(AWCDTA,U,17)'=1 G ENDQ ;master switch
"RTN","AWCMCPR1",23,0)
 I $P(AWCDTA,U,4)'=1 G ENDQ ;reminders
"RTN","AWCMCPR1",24,0)
 S AWCTYPE=3,AWCSTRT=$H
"RTN","AWCMCPR1",25,0)
 K AWCDTA
"RTN","AWCMCPR1",26,0)
 Q
"RTN","AWCMCPR1",27,0)
 ;
"RTN","AWCMCPR1",28,0)
END ; record the data
"RTN","AWCMCPR1",29,0)
 S AWCDTA=$G(^AWC(177100.12,1,0))
"RTN","AWCMCPR1",30,0)
 I $P(AWCDTA,U,17)'=1 G ENDQ ;master switch
"RTN","AWCMCPR1",31,0)
 I $P(AWCDTA,U,2)'=1 G ENDQ  ;tiu
"RTN","AWCMCPR1",32,0)
 I $P(AWCDTA,U,3)'=1 G ENDQ  ;lab
"RTN","AWCMCPR1",33,0)
 I $P(AWCDTA,U,4)'=1 G ENDQ  ;reminder
"RTN","AWCMCPR1",34,0)
 S AWCEND=$H
"RTN","AWCMCPR1",35,0)
 ; AWCSTRT may be missing due to turn on/turn off of application
"RTN","AWCMCPR1",36,0)
 I '$D(AWCSTRT) S AWCSTRT=AWCEND
"RTN","AWCMCPR1",37,0)
 L +^XTMP("AWCCPRS",.5):1 G:'$T ENDQ
"RTN","AWCMCPR1",38,0)
 S AWCDA=+$G(^XTMP("AWCCPRS",.5)),AWCDA=AWCDA+1,^XTMP("AWCCPRS",.5)=AWCDA
"RTN","AWCMCPR1",39,0)
 L -^XTMP("AWCCPRS",.5)
"RTN","AWCMCPR1",40,0)
 S AWCFMDT=$$HTFM^XLFDT(AWCSTRT)
"RTN","AWCMCPR1",41,0)
 S ^XTMP("AWCCPRS",AWCFMDT,AWCDA,0)=AWCSTRT_U_AWCEND_U_DUZ_U_(+$G(DUZ(2)))_U_AWCTYPE
"RTN","AWCMCPR1",42,0)
 ;
"RTN","AWCMCPR1",43,0)
ENDQ K AWCDTA,AWCSEC,AWCFMDT,AWCTYPE,AWCSTRT,AWCEND,DO,DD,DIC,DIE,AWCDA
"RTN","AWCMCPR1",44,0)
 Q
"RTN","AWCMCPR1",45,0)
 ;
"RTN","AWCMCPR1",46,0)
PPAGE ; entry point to create updated .htm file
"RTN","AWCMCPR1",47,0)
 ; possible values for AWCX are VMS, VMSC, or NT
"RTN","AWCMCPR1",48,0)
 S AWCX="",AWCOS=$P(^%ZOSF("OS"),U)
"RTN","AWCMCPR1",49,0)
 I AWCOS["VAX DSM" S AWCX="VMS"
"RTN","AWCMCPR1",50,0)
 I AWCOS["OpenM-VMS" S AWCX="VMSC"
"RTN","AWCMCPR1",51,0)
 I AWCOS["OpenM" S AWCX="VMSC"
"RTN","AWCMCPR1",52,0)
 ; To double check for OS
"RTN","AWCMCPR1",53,0)
 I $T(OS^%ZOSV)'="" D
"RTN","AWCMCPR1",54,0)
 . I $$OS^%ZOSV()="VMS" S AWCX="VMSC"
"RTN","AWCMCPR1",55,0)
 . I $$OS^%ZOSV()="NT" S AWCX="NT"
"RTN","AWCMCPR1",56,0)
 ;
"RTN","AWCMCPR1",57,0)
 K TMP("AWC") D DT^DICRW
"RTN","AWCMCPR1",58,0)
 Q:'$D(^AWC(177100.12,1,0))  ;param file not set up
"RTN","AWCMCPR1",59,0)
 ; extract the parameters
"RTN","AWCMCPR1",60,0)
 S AWCDTA=$G(^AWC(177100.12,1,0))
"RTN","AWCMCPR1",61,0)
 S AWCDTA1=$G(^AWC(177100.12,1,1))
"RTN","AWCMCPR1",62,0)
 S AWCDHRS=$P(AWCDTA,U,7) I AWCDHRS="" S AWCDHRS=8  ;# hours to display
"RTN","AWCMCPR1",63,0)
 S X=$P(AWCDTA,U,8) S AWCMXSEC=$S(X]"":X,1:30) ;number of seconds to display
"RTN","AWCMCPR1",64,0)
 S X=$P(AWCDTA,U,9) S AWCTIULN=$S(X]"":X,1:"192,0,0") ;rgb code tiu line
"RTN","AWCMCPR1",65,0)
 S X=$P(AWCDTA,U,10) S AWCLABLN=$S(X]"":X,1:"0,192,0") ;rgb code lab line
"RTN","AWCMCPR1",66,0)
 S X=$P(AWCDTA,U,11) S AWCREMLN=$S(X]"":X,1:"0,0,192") ;rgb code reminder line
"RTN","AWCMCPR1",67,0)
 S X=$P(AWCDTA,U,12) S AWCGRDON=$S(X="y":"true",X="n":"false",1:"true")
"RTN","AWCMCPR1",68,0)
 S X=$P(AWCDTA,U,13) S AWCBKGRN=$S(X]"":X,1:"230,230,230") ;rgb code
"RTN","AWCMCPR1",69,0)
 S X=$P(AWCDTA1,U,3) S AWCMSRV=$S(X]"":X,1:"") ;server
"RTN","AWCMCPR1",70,0)
 S X=$P(AWCDTA1,U,4) S AWCMUSR=$S(X]"":X,1:"") ;user
"RTN","AWCMCPR1",71,0)
 S X=$P(AWCDTA1,U,5) S AWCMPW=$S(X]"":X,1:"")  ;passwd
"RTN","AWCMCPR1",72,0)
 ;
"RTN","AWCMCPR1",73,0)
 K AWCDTA D NOW^%DTC S (AWCENDDT,AWCCURTM)=%,AWCTSEC=3600*AWCDHRS
"RTN","AWCMCPR1",74,0)
 S AWCI1=$P(%H,",",1),AWCI2=$P(%H,",",2)
"RTN","AWCMCPR1",75,0)
 S AWCI2=(AWCI2-AWCTSEC) I AWCI2<0 S AWCI2=AWCI2+86400,AWCI1=AWCI1-1
"RTN","AWCMCPR1",76,0)
 S %H=AWCI1_","_AWCI2 D YMD^%DTC S AWCBEGDT=X_%
"RTN","AWCMCPR1",77,0)
 S X=$E(%,2,4),X=X_"0",X=$S($L(X)<4:X_"0",1:X) ;format to four digits, including any leading zeros
"RTN","AWCMCPR1",78,0)
 S AWCBEGTM=+X
"RTN","AWCMCPR1",79,0)
 S X=$P(AWCCURTM,".",2),X=($E(X,1,3)_"0"),X=$S($L(X)<4:X_"0",1:X) ;format to four digits as above
"RTN","AWCMCPR1",80,0)
 S AWCENDTM=+X K ^TMP("AWCTTIM",$J)
"RTN","AWCMCPR1",81,0)
 ; This loop skips 60 due to adding 10 to starting number. These two lines
"RTN","AWCMCPR1",82,0)
 ; cause it to print 0-50 min, skipping 60, like this: 210 220,230,240,250,300
"RTN","AWCMCPR1",83,0)
 I AWCBEGTM>AWCENDTM F X=AWCBEGTM:10:2350 S ^TMP("AWCTTIM",$J,(-9999+X))="" S:$E(X,($L(X)-1),$L(X))=50 X=X+40 S:X=2360 X="0" ;before midnight
"RTN","AWCMCPR1",84,0)
 I AWCBEGTM>AWCENDTM F X=0:10:AWCENDTM S ^TMP("AWCTTIM",$J,X)="" S:$E(X,($L(X)-1),$L(X))=50 X=X+40 ;after midnight
"RTN","AWCMCPR1",85,0)
 I AWCENDTM>AWCBEGTM F X=AWCBEGTM:10:AWCENDTM S ^TMP("AWCTTIM",$J,X)="" I $E(X,($L(X)-1),($L(X)))=50 S X=X+40 ;normal times
"RTN","AWCMCPR1",86,0)
 ;
"RTN","AWCMCPR1",87,0)
SORT ; sort the data into a TMP file
"RTN","AWCMCPR1",88,0)
 K ^TMP($J)
"RTN","AWCMCPR1",89,0)
 F AWCSRTDT=(AWCBEGDT-.000001):0 S AWCSRTDT=$O(^XTMP("AWCCPRS",AWCSRTDT)) Q:AWCSRTDT=""!(AWCSRTDT>AWCENDDT)  DO
"RTN","AWCMCPR1",90,0)
 .F DA=0:0 S DA=$O(^XTMP("AWCCPRS",AWCSRTDT,DA)) Q:DA=""  DO
"RTN","AWCMCPR1",91,0)
 ..S AWCDTA=$G(^XTMP("AWCCPRS",AWCSRTDT,DA,0)),AWCDIV=$P(AWCDTA,U,4),AWCTYPE=$P(AWCDTA,U,5)
"RTN","AWCMCPR1",92,0)
 ..I AWCDIV="" S AWCDIV=+$$SITE^VASITE ;for people without division assignments
"RTN","AWCMCPR1",93,0)
 ..S ^TMP($J,AWCDIV,AWCTYPE,AWCSRTDT,DA)=""
"RTN","AWCMCPR1",94,0)
 ;
"RTN","AWCMCPR1",95,0)
DIVS ; count the divisions for drop-down box on web page (used in AWCMCPR2)
"RTN","AWCMCPR1",96,0)
 I '$D(^TMP($J)) D NODATA G PPAGE ;no data yet for time frame being processed
"RTN","AWCMCPR1",97,0)
 S AWCDCNTR=0
"RTN","AWCMCPR1",98,0)
 F AWCDIV=0:0 S AWCDIV=$O(^TMP($J,AWCDIV)) Q:AWCDIV=""  DO
"RTN","AWCMCPR1",99,0)
 .S AWCFDIV(AWCDIV)=$P(^DIC(4,AWCDIV,0),U)_U_$P($G(^DIC(4,+AWCDIV,99)),U)_U
"RTN","AWCMCPR1",100,0)
 .S AWCDCNTR=AWCDCNTR+1
"RTN","AWCMCPR1",101,0)
 ; if only one division no drop-down box is needed
"RTN","AWCMCPR1",102,0)
 I AWCDCNTR=1 K AWCFDIV
"RTN","AWCMCPR1",103,0)
 ; generate one HTML page per facility
"RTN","AWCMCPR1",104,0)
DIVPG F AWCDIV=0:0 S AWCDIV=$O(^TMP($J,AWCDIV)) Q:AWCDIV=""  DO  G:POP EXIT
"RTN","AWCMCPR1",105,0)
 .S AWCDEV=$P($G(^AWC(177100.12,1,0)),U,5) I AWCDEV="" S POP=1 Q  ;no HFS device in param file
"RTN","AWCMCPR1",106,0)
 .S (AWCDIVNM,AWCDIVN1)=$P(^DIC(4,AWCDIV,0),U)
"RTN","AWCMCPR1",107,0)
 .S AWCDIVNM=$P($G(^DIC(4,+AWCDIV,99)),U) Q:AWCDIVNM=""
"RTN","AWCMCPR1",108,0)
 .S AWCFILE=$P(^AWC(177100.12,1,0),U,6)_"_"_AWCDIVNM_".htm" ;web page name with division number
"RTN","AWCMCPR1",109,0)
 .Q:AWCFILE=("_"_AWCDIV)!(AWCDEV="")  ;webpage or device is missing in parameter file
"RTN","AWCMCPR1",110,0)
 .; Check VMS or NT before you put the \ in the file name
"RTN","AWCMCPR1",111,0)
 .I AWCX="NT" D
"RTN","AWCMCPR1",112,0)
 ..S AWCZ=$L(AWCDEV) I $E(AWCDEV,AWCZ,AWCZ)'="\" S AWCDEV=AWCDEV_"\" ;add \ if missing
"RTN","AWCMCPR1",113,0)
 .D OPEN^%ZISH("AWCCPR1",AWCDEV,AWCFILE,"W") Q:POP
"RTN","AWCMCPR1",114,0)
 .S AWCHFIL1=AWCDEV_AWCFILE ;needed for AWCMFTP at end
"RTN","AWCMCPR1",115,0)
 .U IO D PART1^AWCMCPR2 ;part 1 of web page
"RTN","AWCMCPR1",116,0)
 .;
"RTN","AWCMCPR1",117,0)
TMPALL .; make the TMP("AWC", array with all possible hours, increments of ten, for all types 1,2,3, with zero values
"RTN","AWCMCPR1",118,0)
 .F T=1:1:3 F X=-99999:0 S X=$O(^TMP("AWCTTIM",$J,X)) Q:X=""  S TMP("AWC",T,X)="0^0"
"RTN","AWCMCPR1",119,0)
 .;
"RTN","AWCMCPR1",120,0)
DVALS .; count the number of data values to display on graph
"RTN","AWCMCPR1",121,0)
 .S AWCVCNTR=0 F X=0:0 S X=$O(TMP("AWC",X)) Q:X=""  F Y=0:0 S Y=$O(TMP("AWC",X,Y)) Q:Y=""  S AWCVCNTR=AWCVCNTR+1
"RTN","AWCMCPR1",122,0)
 .S AWCVCNTR=AWCVCNTR/3 ;divide by 3 graph lines
"RTN","AWCMCPR1",123,0)
 .; get the data by date range provided and sort the data
"RTN","AWCMCPR1",124,0)
 .F AWCTYPE=0:0 S AWCTYPE=$O(^TMP($J,AWCDIV,AWCTYPE)) Q:AWCTYPE=""  DO
"RTN","AWCMCPR1",125,0)
 ..F AWCDATE=(AWCBEGDT-.000001):0 S AWCDATE=$O(^TMP($J,AWCDIV,AWCTYPE,AWCDATE)) Q:AWCDATE=""!(AWCDATE>AWCENDDT)  DO
"RTN","AWCMCPR1",126,0)
 ...F DA=0:0 S DA=$O(^TMP($J,AWCDIV,AWCTYPE,AWCDATE,DA)) Q:DA=""  DO
"RTN","AWCMCPR1",127,0)
 ....S AWCDTA=$G(^XTMP("AWCCPRS",AWCDATE,DA,0)),AWCXSTRT=$P(AWCDTA,U),AWCXEND=$P(AWCDTA,U,2)
"RTN","AWCMCPR1",128,0)
 ....S AWCSEC=$$HDIFF^XLFDT(AWCXEND,AWCXSTRT,2)
"RTN","AWCMCPR1",129,0)
 ....S Y=AWCDATE X ^DD("DD") S X=$P(Y,"@",2),X=$TR(X,":","")
"RTN","AWCMCPR1",130,0)
 ....; sort the times ; AWCX1 is the hours ;AWCX3 is the minutes 
"RTN","AWCMCPR1",131,0)
 ....; use 10-minute intervals and put with interval
"RTN","AWCMCPR1",132,0)
 ....S AWCX1=$E(X,1,2),AWCX3=$E(X,3,4) ;strip hours and minutes, no seconds although they are there
"RTN","AWCMCPR1",133,0)
 ....I "^00^01^02^03^04^05^"[(U_AWCX3_U) S AWCX3="00"
"RTN","AWCMCPR1",134,0)
 ....I "^06^07^08^09^10^11^12^13^14^15^"[(U_AWCX3_U) S AWCX3="10"
"RTN","AWCMCPR1",135,0)
 ....I "^16^17^18^19^20^21^22^23^24^25^"[(U_AWCX3_U) S AWCX3="20"
"RTN","AWCMCPR1",136,0)
 ....I "^26^27^28^29^30^31^32^33^34^35^"[(U_AWCX3_U) S AWCX3="30"
"RTN","AWCMCPR1",137,0)
 ....I "^36^37^38^39^40^41^42^43^44^45^"[(U_AWCX3_U) S AWCX3="40"
"RTN","AWCMCPR1",138,0)
 ....I "^46^47^48^49^50^51^52^53^54^55^"[(U_AWCX3_U) S AWCX3="50"
"RTN","AWCMCPR1",139,0)
 ....I "^56^57^58^59^"[(U_AWCX3_U) S AWCX3="60"
"RTN","AWCMCPR1",140,0)
 ....I AWCX3=60 S AWCX3="00",AWCX1=AWCX1+1
"RTN","AWCMCPR1",141,0)
 ....I AWCX1=24 S AWCX1="00"
"RTN","AWCMCPR1",142,0)
 ....S AWCTIME=+(AWCX1_AWCX3)
"RTN","AWCMCPR1",143,0)
 ....;
"RTN","AWCMCPR1",144,0)
SETTMP ....; set in TMP("AWC", array ONLY if within our selected range
"RTN","AWCMCPR1",145,0)
 ....I $D(TMP("AWC",AWCTYPE,(-9999+AWCTIME))) DO
"RTN","AWCMCPR1",146,0)
 .....S $P(TMP("AWC",AWCTYPE,(-9999+(+AWCTIME))),U)=$P($G(TMP("AWC",AWCTYPE,-9999+(+AWCTIME))),U)+AWCSEC
"RTN","AWCMCPR1",147,0)
 .....S $P(TMP("AWC",AWCTYPE,(-9999+(+AWCTIME))),U,2)=$P($G(TMP("AWC",AWCTYPE,(-9999+(+AWCTIME)))),U,2)+1
"RTN","AWCMCPR1",148,0)
 ....I $D(TMP("AWC",AWCTYPE,+AWCTIME)) DO
"RTN","AWCMCPR1",149,0)
 .....S $P(TMP("AWC",AWCTYPE,+AWCTIME),U)=$P($G(TMP("AWC",AWCTYPE,+AWCTIME)),U)+AWCSEC
"RTN","AWCMCPR1",150,0)
 .....S $P(TMP("AWC",AWCTYPE,+AWCTIME),U,2)=$P($G(TMP("AWC",AWCTYPE,+AWCTIME)),U,2)+1
"RTN","AWCMCPR1",151,0)
 .;
"RTN","AWCMCPR1",152,0)
PART2 .D PART2^AWCMCPR2 ;part II of the HTML code
"RTN","AWCMCPR1",153,0)
 .; ftp the file
"RTN","AWCMCPR1",154,0)
 .D EN^AWCMFTP
"RTN","AWCMCPR1",155,0)
 I AWCX="NT" S CMD="S AWCVAR=$ZF(-1,"_"""erase ftpawc.txt"_""""_")" X CMD
"RTN","AWCMCPR1",156,0)
 I AWCX="VMS"!(AWCX="VMSC") D PURDEL^AWCMFTP
"RTN","AWCMCPR1",157,0)
 ;
"RTN","AWCMCPR1",158,0)
EXIT D ^%ZISC
"RTN","AWCMCPR1",159,0)
 K %,%H,AWCC,AWCAVG,AWCCNT,AWCDATE,AWCDEV,AWCDHRS,AWCDIV,AWCDT,AWCDTA,AWCEND,AWCFILE,AWCFMDT,AWCSEC,AWCY,AWCX
"RTN","AWCMCPR1",160,0)
 K AWCSTRT,AWCTIME,AWCTYPE,AWCZ,AWCBEGTM,DA,DD,DIC,DIE,DO,DR,AWCENDDT,AWCENDTM,AWCLBCNT,AWCPARAM,AWCPCNTR,AWCFDIVN
"RTN","AWCMCPR1",161,0)
 K POP,AWCTTIM,AWCVCNTR,X,AWCX1,AWCX3,Y,AWCBEGDT,AWCCURTM,AWCI1,AWCI2,T,AWCTSEC,Z,AWCDIVNM,AWCWL,AWCDVDTA
"RTN","AWCMCPR1",162,0)
 K AWCTIULN,AWCLABLN,AWCREMLN,AWCMXSEC,AWCGRDON,AWCBKGRN,AWCDIVN1,AWCFDIV,AWCDVNM,AWCDVNB,AWCWEBRT,AWCDCNTR,AWCFXDTA
"RTN","AWCMCPR1",163,0)
 K AWCOS,AWCDTA1,AWCHFIL1,AWCMPW,AWCMSRV,AWCMUSR,AWCMCP,AWCSITE,AWCSITEN,AWCVMSP,AWCOS,AWCSRTDT,AWCXDIV,YYY
"RTN","AWCMCPR1",164,0)
 K %I,%ZISHO,%ZISUB,%ZISHF,AWCWBFLD,CMD,AWC,AWCDIR,AWCDIRL,AWCHFILE,AWCHFILL,AWCOS,AWCVAR,Y,%SUBMIT,VMSC,AWCXDA
"RTN","AWCMCPR1",165,0)
 K ^TMP("AWCTTIM",$J),^TMP($J),TMP("AWC"),AWCXSTRT,AWCXEND,XDUZ,TMP
"RTN","AWCMCPR1",166,0)
 Q
"RTN","AWCMCPR1",167,0)
 ;
"RTN","AWCMCPR1",168,0)
NODATA ; handle no data for the day-create a zero, dummy record for the home facility.
"RTN","AWCMCPR1",169,0)
 ; this only occurs when a page is due to be run but no activity yet.
"RTN","AWCMCPR1",170,0)
 S (AWCSTRT,AWCEND)=$H
"RTN","AWCMCPR1",171,0)
 S AWCXDIV=$P($G(^AWC(177100.12,1,1)),U,2),AWCXDA=$O(^DIC(4,"D",AWCXDIV,0)) Q:AWCXDA=""
"RTN","AWCMCPR1",172,0)
 S AWCXDIV=$P($G(^DIC(4,AWCXDA,99)),U) Q:AWCXDIV=""
"RTN","AWCMCPR1",173,0)
 S XDUZ=.5,XDUZ(2)=AWCXDIV,AWCTYPE=1
"RTN","AWCMCPR1",174,0)
 L +^XTMP("AWCCPRS",.5):1 Q:'$T
"RTN","AWCMCPR1",175,0)
 S AWCDA=+$G(^XTMP("AWCCPRS",.5)),AWCDA=AWCDA+1,^XTMP("AWCCPRS",.5)=AWCDA
"RTN","AWCMCPR1",176,0)
 L -^XTMP("AWCCPRS",.5)
"RTN","AWCMCPR1",177,0)
 S AWCFMDT=$$HTFM^XLFDT(AWCSTRT)
"RTN","AWCMCPR1",178,0)
 S ^XTMP("AWCCPRS",AWCFMDT,AWCDA,0)=AWCSTRT_U_AWCEND_U_XDUZ_U_(+$G(XDUZ(2)))_U_AWCTYPE
"RTN","AWCMCPR1",179,0)
 Q
"RTN","AWCMCPR2")
0^4^B22392223
"RTN","AWCMCPR2",1,0)
AWCMCPR2        ;VISN7/THM-CPRS MONITOR HTML CODE [07-07-2003] ; 09 Jan 2004  3:43 PM
"RTN","AWCMCPR2",2,0)
 ;;7.3;TOOLKIT;**84**;Jan 9, 2004
"RTN","AWCMCPR2",3,0)
 ;
"RTN","AWCMCPR2",4,0)
PART1 ; HTML section that creates java applet data
"RTN","AWCMCPR2",5,0)
 ; Variables are killed in calling program
"RTN","AWCMCPR2",6,0)
 ;
"RTN","AWCMCPR2",7,0)
 W "<html><head>",!
"RTN","AWCMCPR2",8,0)
 W "<META HTTP-EQUIV=""Refresh"""," Content=""300; URL="_$P(^AWC(177100.12,1,0),U,6)_"_"_AWCDIVNM_".htm",""">",!
"RTN","AWCMCPR2",9,0)
 W "<title>CPRS Response Time Monitor - "_AWCDIVN1_"</title></head>",!
"RTN","AWCMCPR2",10,0)
 W "<body>",!
"RTN","AWCMCPR2",11,0)
 S AWCY99=$P(^AWC(177100.12,1,0),U),AWCY99=$P($G(^DIC(4,+AWCY99,0)),U)
"RTN","AWCMCPR2",12,0)
 W "<center><H2>"_AWCY99_"</H2>"
"RTN","AWCMCPR2",13,0)
 W "<H4>","CPRS Response Time Monitor for facility -- "_AWCDIVN1,!,"</H4>"
"RTN","AWCMCPR2",14,0)
 D MENU1
"RTN","AWCMCPR2",15,0)
 W "<APPLET CODE=linegraph.class HEIGHT=350 WIDTH="_$S(AWCDHRS=5:800,AWCDHRS=6:850,AWCDHRS=7:900,AWCDHRS=8:950,AWCDHRS=9:1000,AWCDHRS=10:1050,AWCDHRS=11:1100,1:1150)_">",!
"RTN","AWCMCPR2",16,0)
 Q
"RTN","AWCMCPR2",17,0)
 ;
"RTN","AWCMCPR2",18,0)
PART2 ;
"RTN","AWCMCPR2",19,0)
 W "<PARAM NAME=KeyWidth VALUE=80>",!
"RTN","AWCMCPR2",20,0)
 W "<PARAM NAME=LineColor_R_L1 VALUE="_$P(AWCTIULN,",",1)_">",!
"RTN","AWCMCPR2",21,0)
 W "<PARAM NAME=LineColor_G_L1 VALUE="_$P(AWCTIULN,",",2)_">",!
"RTN","AWCMCPR2",22,0)
 W "<PARAM NAME=LineColor_B_L1 VALUE="_$P(AWCTIULN,",",3)_">",!
"RTN","AWCMCPR2",23,0)
 W "<PARAM NAME=LineColor_R_L2 VALUE="_$P(AWCLABLN,",",1)_">",!
"RTN","AWCMCPR2",24,0)
 W "<PARAM NAME=LineColor_G_L2 VALUE="_$P(AWCLABLN,",",2)_">",!
"RTN","AWCMCPR2",25,0)
 W "<PARAM NAME=LineColor_B_L2 VALUE="_$P(AWCLABLN,",",3)_">",!
"RTN","AWCMCPR2",26,0)
 W "<PARAM NAME=LineColor_R_L3 VALUE="_$P(AWCREMLN,",",1)_">",!
"RTN","AWCMCPR2",27,0)
 W "<PARAM NAME=LineColor_G_L3 VALUE="_$P(AWCREMLN,",",2)_">",!
"RTN","AWCMCPR2",28,0)
 W "<PARAM NAME=LineColor_B_L3 VALUE="_$P(AWCREMLN,",",3)_">",!
"RTN","AWCMCPR2",29,0)
 W "<PARAM NAME=yMax VALUE="_AWCMXSEC_">",!
"RTN","AWCMCPR2",30,0)
 W "<PARAM NAME=yMin VALUE=0>",!
"RTN","AWCMCPR2",31,0)
 W "<PARAM NAME=Mode VALUE=0>",!
"RTN","AWCMCPR2",32,0)
 W "<PARAM NAME=Lines VALUE=3>",!
"RTN","AWCMCPR2",33,0)
 W "<PARAM NAME=Title VALUE="""">",!
"RTN","AWCMCPR2",34,0)
 W "<PARAM NAME=Border VALUE=""30"""_">",!
"RTN","AWCMCPR2",35,0)
 W "<PARAM NAME=Grid VALUE="""_AWCGRDON_""">",!
"RTN","AWCMCPR2",36,0)
 W "<PARAM NAME=""lines"" VALUE=1>",!
"RTN","AWCMCPR2",37,0)
 W "<PARAM NAME=""bg_r"" VALUE="_$P(AWCBKGRN,",",1)_">",!
"RTN","AWCMCPR2",38,0)
 W "<PARAM NAME=""bg_g"" VALUE="_$P(AWCBKGRN,",",2)_">",!
"RTN","AWCMCPR2",39,0)
 W "<PARAM NAME=""bg_b"" VALUE="_$P(AWCBKGRN,",",3)_">",!
"RTN","AWCMCPR2",40,0)
 F AWCTYPE=0:0 S AWCTYPE=$O(TMP("AWC",AWCTYPE)) Q:AWCTYPE=""  S AWCPCNTR=0 F AWCTIME=-9999:0 S AWCTIME=$O(TMP("AWC",AWCTYPE,AWCTIME)) Q:AWCTIME=""  DO
"RTN","AWCMCPR2",41,0)
 .S AWCPCNTR=AWCPCNTR+1,AWCPARAM="VAL"_AWCPCNTR_"_L"_AWCTYPE
"RTN","AWCMCPR2",42,0)
 .W "<PARAM NAME="""_AWCPARAM_""" ","VALUE="""
"RTN","AWCMCPR2",43,0)
 .S AWCDTA=$G(TMP("AWC",AWCTYPE,AWCTIME)),AWCSEC=$P(AWCDTA,U),AWCCNT=$P(AWCDTA,U,2)
"RTN","AWCMCPR2",44,0)
 .S AWCAVG=$S(AWCCNT>0:$J(AWCSEC/AWCCNT,0,2),1:0)
"RTN","AWCMCPR2",45,0)
 .I AWCAVG>AWCMXSEC S AWCAVG=AWCMXSEC ;if average is greater than max, set to max
"RTN","AWCMCPR2",46,0)
 .I AWCAVG<0 S AWCAVG=0 ;no values <0
"RTN","AWCMCPR2",47,0)
 .W +AWCAVG,""">",! ;finish the HTML line
"RTN","AWCMCPR2",48,0)
 .; add the time values for the x-axis
"RTN","AWCMCPR2",49,0)
 S AWCLBCNT=1
"RTN","AWCMCPR2",50,0)
 F YYY=-99999:0 S YYY=$O(^TMP("AWCTTIM",$J,YYY)) Q:YYY=""  DO
"RTN","AWCMCPR2",51,0)
 .S Y=YYY
"RTN","AWCMCPR2",52,0)
 .I Y<0 S Y=9999+Y
"RTN","AWCMCPR2",53,0)
 .; format the time, if necessary
"RTN","AWCMCPR2",54,0)
 .I $L(Y)=1 S Y="000"_Y
"RTN","AWCMCPR2",55,0)
 .I $L(Y)=2 S Y="00"_Y
"RTN","AWCMCPR2",56,0)
 .I $L(Y)=3 S Y="0"_Y
"RTN","AWCMCPR2",57,0)
 .W "<PARAM NAME=LAB"_AWCLBCNT_" VALUE="""_$S($E(Y,3,4)=10:"*",$E(Y,3,4)=20:"*",$E(Y,3,4)=40:"*",$E(Y,3,4)=50:"*",1:Y)_""">",! S AWCLBCNT=AWCLBCNT+1
"RTN","AWCMCPR2",58,0)
 ; add the remaining values
"RTN","AWCMCPR2",59,0)
 S (AWCLBCNT,AWCVCNTR)=(AWCLBCNT-1) ;label count and value count
"RTN","AWCMCPR2",60,0)
 W !,"<PARAM NAME=Key_L1 VALUE="_""" -   TIU"">",!
"RTN","AWCMCPR2",61,0)
 W "<PARAM NAME=Key_L2 VALUE="_""" -   Lab"">",!
"RTN","AWCMCPR2",62,0)
 W "<PARAM NAME=Key_L3 VALUE="_""" -   Reminder"">",!!
"RTN","AWCMCPR2",63,0)
 W "<PARAM NAME=NumberOfVals VALUE="_AWCVCNTR_">",!
"RTN","AWCMCPR2",64,0)
 W "<PARAM NAME=NumberOfLabs VALUE="_AWCLBCNT_">",!
"RTN","AWCMCPR2",65,0)
 W "</applet>","<p><h4><center>Response Time In Seconds for the last "_AWCDHRS_" hours </h4>","</center>",!
"RTN","AWCMCPR2",66,0)
 W "<b><h5>Last updated: " D NOW^%DTC S Y=% X ^DD("DD") W Y,!,"</b></h5></body></html>",!
"RTN","AWCMCPR2",67,0)
 D CLOSE^%ZISH("AWCCPR1"),^%ZISC
"RTN","AWCMCPR2",68,0)
 K AWCY99
"RTN","AWCMCPR2",69,0)
 Q
"RTN","AWCMCPR2",70,0)
 ;
"RTN","AWCMCPR2",71,0)
MENU1 ; java script - makes drop-down menu
"RTN","AWCMCPR2",72,0)
 ; goes in <body> portion of page
"RTN","AWCMCPR2",73,0)
 Q:$O(AWCFDIV(0))=""  ;only one division at facility
"RTN","AWCMCPR2",74,0)
 S AWCWEBRT=$P(^AWC(177100.12,1,0),U,15)  Q:AWCWEBRT=""  ;not set up in param file
"RTN","AWCMCPR2",75,0)
 S AWCWL=$L(AWCWEBRT) I $E(AWCWEBRT,AWCWL,AWCWL)'="/" S AWCWEBRT=AWCWEBRT_"/"
"RTN","AWCMCPR2",76,0)
 W "<form name=""jump"">",!
"RTN","AWCMCPR2",77,0)
 W "<select name=""menu"">",!
"RTN","AWCMCPR2",78,0)
 W "<option value=""#"">Other Facilities</option>",!
"RTN","AWCMCPR2",79,0)
 S AWCDVNM=""  F  S AWCDVNM=$O(AWCFDIV(AWCDVNM)) Q:AWCDVNM=""  DO
"RTN","AWCMCPR2",80,0)
 .S AWCDVDTA=AWCFDIV(AWCDVNM),AWCFDIVN=$P(AWCDVDTA,U),AWCDVNB=$P(AWCDVDTA,U,2)
"RTN","AWCMCPR2",81,0)
 .W "<option value=""http://"_AWCWEBRT_$P(AWCFILE,"_")_"_"_AWCDVNB_".htm"_""">"_$P(AWCFDIV(AWCDVNM),U)_"</option>",!
"RTN","AWCMCPR2",82,0)
 W "</select>",!
"RTN","AWCMCPR2",83,0)
 W "<input type=""button"" onClick=""location=document.jump.menu.options[document.jump.menu.selectedIndex].value;"" value=""GO"">",!
"RTN","AWCMCPR2",84,0)
 W "</form>",!
"RTN","AWCMCPR2",85,0)
 Q
"RTN","AWCMCPR3")
0^5^B32117194
"RTN","AWCMCPR3",1,0)
AWCMCPR3        ;VISN 7/THM-CPRS MONITOR - ROLLUP TO NATIONAL SERVER [30 JULY 2003 @ 12:25PM] ; 09 Jan 2004  3:43 PM
"RTN","AWCMCPR3",2,0)
 ;;7.3;TOOLKIT;**84**;Jan 9, 2004
"RTN","AWCMCPR3",3,0)
 ;
"RTN","AWCMCPR3",4,0)
 Q  ;enter properly
"RTN","AWCMCPR3",5,0)
 ;
"RTN","AWCMCPR3",6,0)
GENSTAT ;; possible values for AWCX are VMS, VMSC, or NT
"RTN","AWCMCPR3",7,0)
 N AWCDTA S AWCDTA=$G(^AWC(177100.12,1,0))
"RTN","AWCMCPR3",8,0)
 I $P(AWCDTA,U,17)'="1" G EXIT ;master switch
"RTN","AWCMCPR3",9,0)
 S AWCX="",AWCOS=$P(^%ZOSF("OS"),U)
"RTN","AWCMCPR3",10,0)
 I AWCOS["VAX DSM" S AWCX="VMS"
"RTN","AWCMCPR3",11,0)
 I AWCOS["OpenM-VMS" S AWCX="VMSC"
"RTN","AWCMCPR3",12,0)
 I AWCOS["OpenM" S AWCX="VMSC"
"RTN","AWCMCPR3",13,0)
 ; VMS FOR CACHE MODS TO DOUBLE CHECK FOR OS
"RTN","AWCMCPR3",14,0)
 I $T(OS^%ZOSV)'="" D
"RTN","AWCMCPR3",15,0)
 . I $$OS^%ZOSV()="VMS" S AWCX="VMSC"
"RTN","AWCMCPR3",16,0)
 . I $$OS^%ZOSV()="NT" S AWCX="NT"
"RTN","AWCMCPR3",17,0)
 ;
"RTN","AWCMCPR3",18,0)
 Q:'$D(^AWC(177100.12,1,0))  ;no parameter file set up
"RTN","AWCMCPR3",19,0)
 K ^TMP("AWC",$J),^TMP("AWCTTIM",$J) D DT^DICRW
"RTN","AWCMCPR3",20,0)
 I '$D(AWCMANL) S X="T-1",%DT="" D ^%DT S AWCBEGDT=Y
"RTN","AWCMCPR3",21,0)
 S AWCENDDT=AWCBEGDT+.2359 ;for yesterday
"RTN","AWCMCPR3",22,0)
 S AWCBEGD1=17000000+AWCBEGDT ;yyyymmdd
"RTN","AWCMCPR3",23,0)
 S AWCTTIM="",AWCBEGTM=0,AWCENDTM=2400
"RTN","AWCMCPR3",24,0)
 ;This loop skips 60 due to adding 10 to starting number. These two lines
"RTN","AWCMCPR3",25,0)
 ;cause it to print 0-50 min, skipping 60, like this: 210 220,230,240,250,300
"RTN","AWCMCPR3",26,0)
 F X=0:10:AWCENDTM S ^TMP("AWCTTIM",$J,X)="" S:$E(X,($L(X)-1),$L(X))=50 X=X+40 ;previous day
"RTN","AWCMCPR3",27,0)
 ;make the ^TMP("AWC",$J, array with all possible hours, increments of ten for all types 1,2,3, with zero values
"RTN","AWCMCPR3",28,0)
 S AWCCNTR=0 F T=1:1:3 F X=-1:0 S X=$O(^TMP("AWCTTIM",$J,X)) Q:X=""  S ^TMP("AWC",$J,T,X)="0^0"
"RTN","AWCMCPR3",29,0)
 S AWCDEV=$P($G(^AWC(177100.12,1,0)),U,5)
"RTN","AWCMCPR3",30,0)
 S AWCDIVNM=$P($G(^AWC(177100.12,1,1)),U,2) ;facility number
"RTN","AWCMCPR3",31,0)
 S AWCDIVN1=$P($G(^DIC(4,AWCDIVNM,0)),U) Q:AWCDIVN1=""  ;division name
"RTN","AWCMCPR3",32,0)
 S AWCFILE="CPRSstats_"_AWCBEGD1_"_"_AWCDIVNM_".txt" ;text file division number
"RTN","AWCMCPR3",33,0)
 Q:AWCFILE=("_"_AWCDIVNM)!(AWCDEV="")  ;webpage or device is missing in parameter file
"RTN","AWCMCPR3",34,0)
 ; CHECK VMS OR NT BEFORE YOU PUT THE \ IN FILE NAME
"RTN","AWCMCPR3",35,0)
 I AWCX="NT" D
"RTN","AWCMCPR3",36,0)
 .S AWCZ=$L(AWCDEV) I $E(AWCDEV,AWCZ,AWCZ)'="\" S AWCDEV=AWCDEV_"\" ;add \ if missing
"RTN","AWCMCPR3",37,0)
 ;
"RTN","AWCMCPR3",38,0)
 D OPEN^%ZISH("AWCMCPR3",AWCDEV,AWCFILE,"W") Q:$G(POP)=1
"RTN","AWCMCPR3",39,0)
 S AWCHFIL1=AWCDEV_AWCFILE ;needed for AWCMFTP at end
"RTN","AWCMCPR3",40,0)
 U IO
"RTN","AWCMCPR3",41,0)
DVALS ;get the data values
"RTN","AWCMCPR3",42,0)
 S AWCDATE=(AWCBEGDT-.000001)
"RTN","AWCMCPR3",43,0)
 F  S AWCDATE=$O(^AWC(177100.13,"C",AWCDATE)) Q:AWCDATE=""!(AWCDATE>AWCENDDT)  DO  G:$G(POP)=1 EXIT
"RTN","AWCMCPR3",44,0)
 .F DA=0:0 S DA=$O(^AWC(177100.13,"C",AWCDATE,DA)) Q:DA=""  DO
"RTN","AWCMCPR3",45,0)
 ..S AWCDTA=^AWC(177100.13,DA,0),AWCSEC=$P(AWCDTA,U,2),AWCTYPE=$P(AWCDTA,U,6)
"RTN","AWCMCPR3",46,0)
 ..S Y=AWCDATE X ^DD("DD") S X=$P(Y,"@",2),X=$TR(X,":","")
"RTN","AWCMCPR3",47,0)
 ..;sort the times ; AWCX1 is the hours ;AWCX3 is the minutes ;use 10-minute intervals
"RTN","AWCMCPR3",48,0)
 ..S AWCX1=$E(X,1,2),AWCX3=$E(X,3,99)
"RTN","AWCMCPR3",49,0)
 ..I "^00^01^02^03^04^05^"[(U_AWCX3_U) S AWCX3="00"
"RTN","AWCMCPR3",50,0)
 ..I "^06^07^08^09^10^11^12^13^14^15^"[(U_AWCX3_U) S AWCX3="10"
"RTN","AWCMCPR3",51,0)
 ..I "^16^17^18^19^20^21^22^23^24^25^"[(U_AWCX3_U) S AWCX3="20"
"RTN","AWCMCPR3",52,0)
 ..I "^26^27^28^29^30^31^32^33^34^35^"[(U_AWCX3_U) S AWCX3="30"
"RTN","AWCMCPR3",53,0)
 ..I "^36^37^38^39^40^41^42^43^44^45^"[(U_AWCX3_U) S AWCX3="40"
"RTN","AWCMCPR3",54,0)
 ..I "^46^47^48^49^50^51^52^53^54^55^"[(U_AWCX3_U) S AWCX3="50"
"RTN","AWCMCPR3",55,0)
 ..I "^56^57^58^59^"[(U_AWCX3_U) S AWCX3="60"
"RTN","AWCMCPR3",56,0)
 ..I AWCX3=60 S AWCX3="00",AWCX1=AWCX1+1
"RTN","AWCMCPR3",57,0)
 ..I AWCX1=24 S AWCX1="00"
"RTN","AWCMCPR3",58,0)
 ..S AWCTIME=+(AWCX1_AWCX3)
"RTN","AWCMCPR3",59,0)
 ..;
"RTN","AWCMCPR3",60,0)
SETTMP ..I $D(^TMP("AWC",$J,AWCTYPE,(-9999+AWCTIME))) DO
"RTN","AWCMCPR3",61,0)
 ...S $P(^TMP("AWC",$J,AWCTYPE,(-9999+(+AWCTIME))),U)=$P($G(^TMP("AWC",$J,AWCTYPE,-9999+(+AWCTIME))),U)+AWCSEC
"RTN","AWCMCPR3",62,0)
 ...S $P(^TMP("AWC",$J,AWCTYPE,(-9999+(+AWCTIME))),U,2)=$P($G(^TMP("AWC",$J,AWCTYPE,(-9999+(+AWCTIME)))),U,2)+1
"RTN","AWCMCPR3",63,0)
 ..I $D(^TMP("AWC",$J,AWCTYPE,+AWCTIME)) DO
"RTN","AWCMCPR3",64,0)
 ...S $P(^TMP("AWC",$J,AWCTYPE,+AWCTIME),U)=$P($G(^TMP("AWC",$J,AWCTYPE,+AWCTIME)),U)+AWCSEC
"RTN","AWCMCPR3",65,0)
 ...S $P(^TMP("AWC",$J,AWCTYPE,+AWCTIME),U,2)=$P($G(^TMP("AWC",$J,AWCTYPE,+AWCTIME)),U,2)+1
"RTN","AWCMCPR3",66,0)
 K AWCTOTX
"RTN","AWCMCPR3",67,0)
 F AWCTYPE=0:0 S AWCTYPE=$O(^TMP("AWC",$J,AWCTYPE)) Q:AWCTYPE=""  S AWCPCNTR=0 F AWCTIME=-9999:0 S AWCTIME=$O(^TMP("AWC",$J,AWCTYPE,AWCTIME)) Q:AWCTIME=""  DO
"RTN","AWCMCPR3",68,0)
 .S AWCDTA=$G(^TMP("AWC",$J,AWCTYPE,AWCTIME)),AWCSEC=$P(AWCDTA,U),AWCCNT=$P(AWCDTA,U,2)
"RTN","AWCMCPR3",69,0)
 .I $L(AWCTIME)=1 S AWCTIME="000"_AWCTIME
"RTN","AWCMCPR3",70,0)
 .I $L(AWCTIME)=2 S AWCTIME="00"_AWCTIME
"RTN","AWCMCPR3",71,0)
 .I $L(AWCTIME)=3 S AWCTIME="0"_AWCTIME
"RTN","AWCMCPR3",72,0)
 .I +AWCTIME<759 S $P(AWCTOTX(AWCTYPE,1),U,1)=$P($G(AWCTOTX(AWCTYPE,1)),U,1)+AWCSEC DO  Q
"RTN","AWCMCPR3",73,0)
 ..S $P(AWCTOTX(AWCTYPE,1),U,2)=$P(AWCTOTX(AWCTYPE,1),U,2)+AWCCNT
"RTN","AWCMCPR3",74,0)
 .I +AWCTIME>759&(+AWCTIME<1600) S $P(AWCTOTX(AWCTYPE,2),U,1)=$P($G(AWCTOTX(AWCTYPE,2)),U,1)+AWCSEC DO  Q
"RTN","AWCMCPR3",75,0)
 ..S $P(AWCTOTX(AWCTYPE,2),U,2)=$P(AWCTOTX(AWCTYPE,2),U,2)+AWCCNT
"RTN","AWCMCPR3",76,0)
 .I +AWCTIME'<1600&(+AWCTIME'>2359) S $P(AWCTOTX(AWCTYPE,3),U,1)=$P($G(AWCTOTX(AWCTYPE,3)),U,1)+AWCSEC DO  Q
"RTN","AWCMCPR3",77,0)
 ..S $P(AWCTOTX(AWCTYPE,3),U,2)=$P(AWCTOTX(AWCTYPE,3),U,2)+AWCCNT
"RTN","AWCMCPR3",78,0)
 F X=1:1:3 S AWCTOTX(X,1)=$S($P(AWCTOTX(X,1),U,2)>0:$P(AWCTOTX(X,1),U,1)/$P(AWCTOTX(X,1),U,2),1:0)
"RTN","AWCMCPR3",79,0)
 F X=1:1:3 S AWCTOTX(X,2)=$S($P(AWCTOTX(X,2),U,2)>0:$P(AWCTOTX(X,2),U,1)/$P(AWCTOTX(X,2),U,2),1:0)
"RTN","AWCMCPR3",80,0)
 F X=1:1:3 S AWCTOTX(X,3)=$S($P(AWCTOTX(X,3),U,2)>0:$P(AWCTOTX(X,3),U,1)/$P(AWCTOTX(X,3),U,2),1:0)
"RTN","AWCMCPR3",81,0)
 F X=0:0 S X=$O(AWCTOTX(X)) Q:X=""  S Y=""  F  S Y=$O(AWCTOTX(X,Y)) Q:Y=""  W X,$C(9),Y,$C(9),$J(AWCTOTX(X,Y),5,2)_$C(9)_AWCBEGD1,!
"RTN","AWCMCPR3",82,0)
 ;
"RTN","AWCMCPR3",83,0)
SENDIT ; send it
"RTN","AWCMCPR3",84,0)
 D CLOSE^%ZISH("AWCMCPR3"),^%ZISC
"RTN","AWCMCPR3",85,0)
 D EN^AWCMFTP1
"RTN","AWCMCPR3",86,0)
 I AWCOS["NT" DO
"RTN","AWCMCPR3",87,0)
 .S CMD="S AWCVAR=$ZF(-1,"_"""erase ftpstatawc.txt"_""""_")" X CMD
"RTN","AWCMCPR3",88,0)
 .S CMD="S AWCVAR=$ZF(-1,"_"""erase "_AWCHFILE_""""_")" X CMD
"RTN","AWCMCPR3",89,0)
 ;
"RTN","AWCMCPR3",90,0)
EXIT K %DT,AWCAVB,AWCBEGDT,AWCBEGTM,AWCCNT,AWCCNTR,AWCDEV,AWCDIV,AWCDIVN1,AWCDIVNM,AWCDTA,AWCENDDT,AWCX,AWCY
"RTN","AWCMCPR3",91,0)
 K AWCENDTM,AWCFILE,AWCPCNTR,AWCSEC,AWCTIME,AWCTTIM,AWCTYPE,AWCVCNTR,AWCZ,DA,T,X,AWCX1,AWCX3,Y
"RTN","AWCMCPR3",92,0)
 K AWC,AWCDIR,AWCDIRL,AWCHFILE,AWCHFILL,AWCOS,AWCVAR,Y,%SUBMIT,VMSC,CMD,AWCHFIL1
"RTN","AWCMCPR3",93,0)
 K ^TMP("AWC",$J),^TMP("AWCTTIM",$J),AWCAVG,AWCBEGD1,AWCDATE,AWCMANL,TMP
"RTN","AWCMCPR3",94,0)
 Q
"RTN","AWCMCPR3",95,0)
 ;
"RTN","AWCMCPR3",96,0)
MANUAL S IOP="HOME" D ^%ZIS K IOP
"RTN","AWCMCPR3",97,0)
 S AWCMANL=1 W @IOF,"Re-run National CPRS Monitors",!!!
"RTN","AWCMCPR3",98,0)
 S %DT="AE",%DT("A")="What day do you want to re-run ?  " D ^%DT G:Y<0 EXIT
"RTN","AWCMCPR3",99,0)
 S X=$O(^AWC(177100.13,"C",(Y-.000001))) I X=""!(X>(Y_.2359)) W $C(7),!!,"There is no data for that day.",!! H 2 G MANUAL
"RTN","AWCMCPR3",100,0)
 S AWCBEGDT=Y W !!,"Now generating data for National. . . ",!! H 1 G GENSTAT
"RTN","AWCMCPR4")
0^6^B3524379
"RTN","AWCMCPR4",1,0)
AWCMCPR4        ;VISN7/THM-NIGHT TIME MOVEMENT OF DATA ; 09 Jan 2004  3:43 PM
"RTN","AWCMCPR4",2,0)
 ;;7.3;TOOLKIT;**84**;Jan 9, 2004
"RTN","AWCMCPR4",3,0)
 ;
"RTN","AWCMCPR4",4,0)
EN ;This should be run after midnight so it processes the previous day.
"RTN","AWCMCPR4",5,0)
 S X="T-1",%DT="" D ^%DT S AWCSDT=Y,AWCX=(AWCSDT-.000001),AWCEDT=(Y+.2359)
"RTN","AWCMCPR4",6,0)
 F AWCX=AWCX:0 S AWCX=$O(^XTMP("AWCCPRS",AWCX)) Q:AWCX>AWCEDT!(AWCX="")  F AWCDA=0:0 S AWCDA=$O(^XTMP("AWCCPRS",AWCX,AWCDA)) Q:AWCDA=""  DO
"RTN","AWCMCPR4",7,0)
 .S AWCD1=$G(^XTMP("AWCCPRS",AWCX,AWCDA,0))
"RTN","AWCMCPR4",8,0)
 .S AWCSTRT=$P(AWCD1,U),AWCEND=$P(AWCD1,U,2),AWCDUZ=$P(AWCD1,U,3),AWCDUZ(2)=$P(AWCD1,U,4),AWCTYPE=$P(AWCD1,U,5)
"RTN","AWCMCPR4",9,0)
 .I AWCDUZ(2)="" S AWCDUZ(2)=+$$SITE^VASITE ;for people without division assignments
"RTN","AWCMCPR4",10,0)
 .S AWCSEC=$$HDIFF^XLFDT(AWCEND,AWCSTRT,2)
"RTN","AWCMCPR4",11,0)
 .S AWCFMDT=$$HTFM^XLFDT(AWCSTRT)
"RTN","AWCMCPR4",12,0)
 .L +^AWC(177100.13,0):1 Q:'$T
"RTN","AWCMCPR4",13,0)
 .S AWCDATA=^AWC(177100.13,0)
"RTN","AWCMCPR4",14,0)
 .S $P(AWCDATA,"^",3)=$P(AWCDATA,"^",3)+1,AWCIEN(1)=$P(AWCDATA,"^",3)
"RTN","AWCMCPR4",15,0)
 .S ^AWC(177100.13,0)=AWCDATA
"RTN","AWCMCPR4",16,0)
 .L -^AWC(177100.13,0)
"RTN","AWCMCPR4",17,0)
 .K AWCDATA
"RTN","AWCMCPR4",18,0)
 .S AWCDATA(177100.13,"+1,",.01)=AWCIEN(1)
"RTN","AWCMCPR4",19,0)
 .S AWCDATA(177100.13,"+1,",1)=AWCSEC
"RTN","AWCMCPR4",20,0)
 .S AWCDATA(177100.13,"+1,",2)=AWCDUZ
"RTN","AWCMCPR4",21,0)
 .S AWCDATA(177100.13,"+1,",3)=AWCFMDT
"RTN","AWCMCPR4",22,0)
 .S AWCDATA(177100.13,"+1,",4)=AWCDUZ(2)
"RTN","AWCMCPR4",23,0)
 .S AWCDATA(177100.13,"+1,",5)=AWCTYPE
"RTN","AWCMCPR4",24,0)
 .D UPDATE^DIE("","AWCDATA","AWCIEN")
"RTN","AWCMCPR4",25,0)
 .K AWCDATA,AWCIEN
"RTN","AWCMCPR4",26,0)
 K AWCSDT,AWCX,AWCDA,AWCD1,AWCSTRT,AWCEND,AWCDUZ,AWCTYPE
"RTN","AWCMCPR4",27,0)
 K AWCFMDT,AWCDATA,AWCIEN,AWCSEC,AWCEDT,%DT,X,Y
"RTN","AWCMCPR4",28,0)
 Q
"RTN","AWCMCPST")
0^7^B6260984
"RTN","AWCMCPST",1,0)
AWCMCPST        ;VISN 7/THM-POST-INIT FOR CPRS MONITOR ; 09 Jan 2004  3:43 PM
"RTN","AWCMCPST",2,0)
 ;;7.3;TOOLKIT;**84**;Jan 9, 2004
"RTN","AWCMCPST",3,0)
 ;
"RTN","AWCMCPST",4,0)
EN ; set up ^XTMP nodes first
"RTN","AWCMCPST",5,0)
 N AWCPGDT,X,Y
"RTN","AWCMCPST",6,0)
 D DT^DICRW
"RTN","AWCMCPST",7,0)
 S X="T+10",%DT="" D ^%DT Q:Y<0  S AWCPGDT=Y
"RTN","AWCMCPST",8,0)
 ; locks applied even though nodes do not exist yet
"RTN","AWCMCPST",9,0)
 I '$D(^XTMP("AWCCPRS",0)) DO
"RTN","AWCMCPST",10,0)
 .L +^XTMP("AWCCPRS",0):1
"RTN","AWCMCPST",11,0)
 .S ^XTMP("AWCCPRS",0)=AWCPGDT_U_DT_U_"CPRS Monitor temporary global" ;zero node
"RTN","AWCMCPST",12,0)
 .L -^XTMP("AWCCPRS",0)
"RTN","AWCMCPST",13,0)
 I '$D(^XTMP("AWCCPRS",.5)) DO
"RTN","AWCMCPST",14,0)
 .L +^XTMP("AWCCPRS",.5):1
"RTN","AWCMCPST",15,0)
 .S ^XTMP("AWCCPRS",.5)=0 ;node that supplies IEN
"RTN","AWCMCPST",16,0)
 .L -^XTMP("AWCCPRS",.5)
"RTN","AWCMCPST",17,0)
 ;
"RTN","AWCMCPST",18,0)
PARAM ; set up parameter file; all settings off initially
"RTN","AWCMCPST",19,0)
 S AWCX=$$SITE^VASITE,AWCDIV=+AWCX,AWCDNAME=$P(AWCX,U,2),AWCMSTA=$P(AWCX,U,3)
"RTN","AWCMCPST",20,0)
 S AWCDA=$O(^DIC(4,"D",AWCDIV,0))
"RTN","AWCMCPST",21,0)
 I AWCDA="" W !!,$C(7),"Unable to resolve the site's station number",!! H 3
"RTN","AWCMCPST",22,0)
 G:AWCDA="" EXIT
"RTN","AWCMCPST",23,0)
 ; Beta test sites have it already, so update it for consistency
"RTN","AWCMCPST",24,0)
 I $D(^AWC(177100.12,1,0)) DO  G EXIT
"RTN","AWCMCPST",25,0)
 .S (DIC,DIE)="^AWC(177100.12,",DIC(0)="QLM",DA=1
"RTN","AWCMCPST",26,0)
 .; set the first piece manually; can't edit a DINUMed field
"RTN","AWCMCPST",27,0)
 .; field 1.5 will be triggered on new entries at non-beta sites, but not for existing beta sites
"RTN","AWCMCPST",28,0)
 .S $P(^AWC(177100.12,DA,0),U)=AWCDIV
"RTN","AWCMCPST",29,0)
 .S DR="1///0;1.2///0;1.5////"_AWCMSTA_";2///0;3///0;5////cprsmonitor"_AWCMSTA
"RTN","AWCMCPST",30,0)
 .S DR=DR_";6///8;7///30;8///192,0,0;9///0,192,0;10///0,0,192;11///1;12///230,230,230"
"RTN","AWCMCPST",31,0)
 .S DR=DR_";13///7;20///vaftp.va.gov;21////itmuser;22////Padfoot1;23///0;24///1"
"RTN","AWCMCPST",32,0)
 .D ^DIE
"RTN","AWCMCPST",33,0)
 ; section for new sites - field 1.5 is triggered
"RTN","AWCMCPST",34,0)
 I '$D(^AWC(177100.12,1,0)) DO
"RTN","AWCMCPST",35,0)
 .S X=AWCDIV,DIC("DR")="1///0;1.2///0;2///0;3///0;5///cprsmonitor"_AWCMSTA
"RTN","AWCMCPST",36,0)
 .S DIC("DR")=DIC("DR")_";6///8;7///30;8///192,0,0;9///0,192,0;10///0,0,192;11///YES;12///230,230,230"
"RTN","AWCMCPST",37,0)
 .S DIC("DR")=DIC("DR")_";13///7;20///vaftp.va.gov;21///itmuser;22///Padfoot1;23///0;24///1"
"RTN","AWCMCPST",38,0)
 .S (DIC,DIE)="^AWC(177100.12,",DIC(0)="EQLM" K DO,DD D FILE^DICN
"RTN","AWCMCPST",39,0)
 ;
"RTN","AWCMCPST",40,0)
EXIT K AWCDIV,AWCDA,AWCDNAME,AWCMSTA,DO,DD,DIC,DIE,DR,%DT,AWCPGDT,X,Y
"RTN","AWCMCPST",41,0)
 K AWCX,DA
"RTN","AWCMCPST",42,0)
 Q
"RTN","AWCMCPUR")
0^10^B2294987
"RTN","AWCMCPUR",1,0)
AWCMCPUR        ;VISN 7/THM-Purge CPRS Monitor data file and ^XTMP("AWC" global ; 09 Jan 2004  3:43 PM
"RTN","AWCMCPUR",2,0)
 ;;7.3;TOOLKIT;**84**;Jan 9, 2004
"RTN","AWCMCPUR",3,0)
 ;
"RTN","AWCMCPUR",4,0)
EN D DT^DICRW
"RTN","AWCMCPUR",5,0)
 ; number of days to keep data in param file
"RTN","AWCMCPUR",6,0)
 S AWCPDAYS=$P(^AWC(177100.12,1,0),U,14)
"RTN","AWCMCPUR",7,0)
 I +AWCPDAYS=0 S AWCPDAYS=30 ;if no limit set, keep minimum of 30 days
"RTN","AWCMCPUR",8,0)
 S X1=DT,X2=-AWCPDAYS D C^%DTC S AWCEND=X+.2359,AWCDTX=""
"RTN","AWCMCPUR",9,0)
 F  S AWCDTX=$O(^AWC(177100.13,"C",AWCDTX)) Q:(AWCDTX>AWCEND)!(AWCDTX="")  DO
"RTN","AWCMCPUR",10,0)
 .F DA=0:0 S DA=$O(^AWC(177100.13,"C",AWCDTX,DA)) Q:DA=""  DO
"RTN","AWCMCPUR",11,0)
 ..S DIK="^AWC(177100.13," D ^DIK
"RTN","AWCMCPUR",12,0)
 ;
"RTN","AWCMCPUR",13,0)
 ; now purge the XTMP global
"RTN","AWCMCPUR",14,0)
PGXTMP S AWCDTX="" F  S AWCDTX=$O(^XTMP("AWCCPRS",AWCDTX)) Q:(AWCDTX>AWCEND)!(AWCDTX="")  DO
"RTN","AWCMCPUR",15,0)
 .F DA=0:0 S DA=$O(^XTMP("AWCCPRS",AWCDTX,DA)) Q:DA=""  K ^XTMP("AWCCPRS",AWCDTX,DA,0)
"RTN","AWCMCPUR",16,0)
 ; reset zero node purge date
"RTN","AWCMCPUR",17,0)
 S X="T+10",%DT="" D ^%DT Q:Y<0  S AWCPGDT=Y
"RTN","AWCMCPUR",18,0)
 S $P(^XTMP("AWCCPRS",0),U)=AWCPGDT
"RTN","AWCMCPUR",19,0)
 K DIK,DA,AWCEND,AWCPGDT,AWCDTX,AWCPDAYS,X1,X2,X,%,%H,%T,%DT,Y
"RTN","AWCMCPUR",20,0)
 Q
"RTN","AWCMFTP")
0^8^B29633164
"RTN","AWCMFTP",1,0)
AWCMFTP ;; FTP FILES TO SERVER from VISTA -  ; 09 Jan 2004  3:39 PM
"RTN","AWCMFTP",2,0)
 ;;7.3;TOOLKIT;**84**;Jan 9, 2004
"RTN","AWCMFTP",3,0)
 ;
"RTN","AWCMFTP",4,0)
 W *7,!,"Enter at line EN^AWCMFTP.",!
"RTN","AWCMFTP",5,0)
 Q
"RTN","AWCMFTP",6,0)
EN ; variables killed in calling program
"RTN","AWCMFTP",7,0)
 S VMSC=""                                            ;INIT THE VAR
"RTN","AWCMFTP",8,0)
 ; AWCHFIL1= whole VMS path
"RTN","AWCMFTP",9,0)
 S AWCHFILE="AWCMOVEHTM.COM"                          ;COM file name
"RTN","AWCMFTP",10,0)
 I AWCX="NT" S AWCHFILE=AWCFILE
"RTN","AWCMFTP",11,0)
 S AWCDTAX=$G(^AWC(177100.12,1,0))
"RTN","AWCMFTP",12,0)
 S AWCDIR=$P(AWCDTAX,U,5)             ;Parameter file
"RTN","AWCMFTP",13,0)
 S:AWCDIR="" AWCDIR="SYS$SYSDEVICE:[DSMMGR]"          ;DEFAULT
"RTN","AWCMFTP",14,0)
 S AWCSITE=$$SITE^VASITE,AWCSITE=$P(AWCSITE,U,2)      ;site Name
"RTN","AWCMFTP",15,0)
 S AWCSITEN=+$$SITE^VASITE                            ;3 dig number
"RTN","AWCMFTP",16,0)
 S AWCDIRL=$$LOW^XLFSTR(AWCDIR),AWCHFILL=$$LOW^XLFSTR(AWCHFILE)
"RTN","AWCMFTP",17,0)
 S AWCWBFLD=$P(AWCDTAX,U,15),AWCWBFLD=$$LOW^XLFSTR(AWCWBFLD) ;web page folder
"RTN","AWCMFTP",18,0)
 ; Note: file deletion is not a problem for NT/Cache since it overwrites the files
"RTN","AWCMFTP",19,0)
 S AWCMVMSL=+$P(AWCDTAX,U,16) ;VMS logging
"RTN","AWCMFTP",20,0)
 S AWCMVMSD=+$P(AWCDTAX,U,18) ;VMS delete
"RTN","AWCMFTP",21,0)
 S AWCWBFLD=$P(AWCWBFLD,"/",2)
"RTN","AWCMFTP",22,0)
 D @AWCX
"RTN","AWCMFTP",23,0)
 Q
"RTN","AWCMFTP",24,0)
 ;
"RTN","AWCMFTP",25,0)
NT ; NT script
"RTN","AWCMFTP",26,0)
 S AWCC=1
"RTN","AWCMFTP",27,0)
 K ^TMP("AWCMFTP",$J)
"RTN","AWCMFTP",28,0)
 S ^TMP("AWCMFTP",$J,AWCC,0)="open "_AWCMSRV,AWCC=AWCC+1 ;server ip address
"RTN","AWCMFTP",29,0)
 S ^TMP("AWCMFTP",$J,AWCC,0)=AWCMUSR,AWCC=AWCC+1 ; ftp user
"RTN","AWCMFTP",30,0)
 S ^TMP("AWCMFTP",$J,AWCC,0)=AWCMPW,AWCC=AWCC+1  ;ftp password
"RTN","AWCMFTP",31,0)
 S ^TMP("AWCMFTP",$J,AWCC,0)="ascii",AWCC=AWCC+1
"RTN","AWCMFTP",32,0)
 S ^TMP("AWCMFTP",$J,AWCC,0)="cd "_AWCWBFLD,AWCC=AWCC+1
"RTN","AWCMFTP",33,0)
 S ^TMP("AWCMFTP",$J,AWCC,0)="put "_AWCDIRL_"\"_AWCHFILE,AWCC=AWCC+1 ;****
"RTN","AWCMFTP",34,0)
 S ^TMP("AWCMFTP",$J,AWCC,0)="bye"
"RTN","AWCMFTP",35,0)
 ; write it to the NT directory
"RTN","AWCMFTP",36,0)
 S Y=$$GTF^%ZISH($NA(^TMP("AWCMFTP",$J,1,0)),3,AWCDIRL,"ftpawc.txt")
"RTN","AWCMFTP",37,0)
 ; send command to NT to execute this batch file
"RTN","AWCMFTP",38,0)
 S CMD="S AWCVAR=$ZF(-1,""ftp -s:""_AWCDIRL_""\ftpawc.txt"")"
"RTN","AWCMFTP",39,0)
 X CMD G EXIT
"RTN","AWCMFTP",40,0)
 ;
"RTN","AWCMFTP",41,0)
VMSC ; VMS FOR CACHE MODS TO DOUBLE CHECK FOR OS
"RTN","AWCMFTP",42,0)
 S VMSC=1
"RTN","AWCMFTP",43,0)
 ;
"RTN","AWCMFTP",44,0)
VMS ; VMS com file script
"RTN","AWCMFTP",45,0)
 ; Captive process so we give full privs
"RTN","AWCMFTP",46,0)
 S AWC=1
"RTN","AWCMFTP",47,0)
 K ^TMP("AWCMFTP",$J)
"RTN","AWCMFTP",48,0)
 S ^TMP("AWCMFTP",$J,AWC,0)="$ set proc/priv = all"
"RTN","AWCMFTP",49,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="$ set noon"
"RTN","AWCMFTP",50,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="$ assign sys$command sys$input "
"RTN","AWCMFTP",51,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="$ set verify"
"RTN","AWCMFTP",52,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="$ a=""''f$user()'"""
"RTN","AWCMFTP",53,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="$ set def "_AWCDIR
"RTN","AWCMFTP",54,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="$ set prot=(w:rwed,g:rwed,o:rwed,s:rwed) "_AWCDIR_AWCHFILE
"RTN","AWCMFTP",55,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="$ ftp "_AWCMSRV
"RTN","AWCMFTP",56,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)=AWCMUSR
"RTN","AWCMFTP",57,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)=AWCMPW
"RTN","AWCMFTP",58,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="ascii"
"RTN","AWCMFTP",59,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="put "_AWCHFIL1
"RTN","AWCMFTP",60,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="bye"
"RTN","AWCMFTP",61,0)
 S AWC=AWC+1,^TMP("AWCMFTP",$J,AWC,0)="$ exit"
"RTN","AWCMFTP",62,0)
 ; send to VMS
"RTN","AWCMFTP",63,0)
 S Y=$$GTF^%ZISH($NA(^TMP("AWCMFTP",$J,1,0)),3,AWCDIR,AWCHFILE)
"RTN","AWCMFTP",64,0)
 G:VMSC VMSC1
"RTN","AWCMFTP",65,0)
 ;
"RTN","AWCMFTP",66,0)
 ; USE $&ZLIB EXTERNAL CALLS FOR DSM/VMS
"RTN","AWCMFTP",67,0)
 S CMD="S %SUBMIT=$&ZLIB.%SUBMIT"_"("""_AWCDIR_AWCHFILE_""""_","_"""/NOPRINT"_$S(AWCMVMSL=1:"/LOG="_AWCDIR_$P(AWCHFILE,".",1)_".LOG"""_")",1:"/NOLOG"""_")")
"RTN","AWCMFTP",68,0)
 X CMD
"RTN","AWCMFTP",69,0)
 G EXIT
"RTN","AWCMFTP",70,0)
VMSC1 ;
"RTN","AWCMFTP",71,0)
 ; VMS Cache - use $ZF(-1 calls for OS commands
"RTN","AWCMFTP",72,0)
 S CMD="S AWCVAR=$ZF(-1,AWCVAR)"
"RTN","AWCMFTP",73,0)
 S AWCVAR="SUBMIT "_AWCDIR_AWCHFILE_"/NOPRINT"_$S(AWCMVMSL=1:"/LOG="_AWCDIR_$P(AWCHFILE,".",1)_".LOG",1:"/NOLOG")
"RTN","AWCMFTP",74,0)
 X CMD
"RTN","AWCMFTP",75,0)
 ;
"RTN","AWCMFTP",76,0)
EXIT K CMD,^TMP("AWCMFTP"),^TMP("AWCMFTPD"),AWCMVMSL,AWCMVMSD,AWCDTAX,AWC
"RTN","AWCMFTP",77,0)
 Q
"RTN","AWCMFTP",78,0)
 ;
"RTN","AWCMFTP",79,0)
PURDEL ; purging/deletion script - whether this occurs is controlled in file 177100.12
"RTN","AWCMFTP",80,0)
 ; this part creates a com file to purge or delete files we have created and then it deletes itself
"RTN","AWCMFTP",81,0)
 ;
"RTN","AWCMFTP",82,0)
 S AWCDTAX=$G(^AWC(177100.12,1,0))
"RTN","AWCMFTP",83,0)
 S AWCMVMSL=+$P(AWCDTAX,U,16) ;VMS logging
"RTN","AWCMFTP",84,0)
 S AWCMVMSD=+$P(AWCDTAX,U,18) ;VMS delete
"RTN","AWCMFTP",85,0)
 S AWCHFILE="AWCPURGE.COM"
"RTN","AWCMFTP",86,0)
 ; captive process again so we give full privs
"RTN","AWCMFTP",87,0)
 K ^TMP("AWCMFTPD",$J)
"RTN","AWCMFTP",88,0)
 S AWC=1,^TMP("AWCMFTPD",$J,AWC,0)="$ wait 00:05"
"RTN","AWCMFTP",89,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ set proc/priv = all"
"RTN","AWCMFTP",90,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ set noon"
"RTN","AWCMFTP",91,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ assign sys$command sys$input "
"RTN","AWCMFTP",92,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ set verify"
"RTN","AWCMFTP",93,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ a=""''f$user()'"""
"RTN","AWCMFTP",94,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ set def "_AWCDIR
"RTN","AWCMFTP",95,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ set prot=(w:rwed,g:rwed,o:rwed,s:rwed) "_AWCDIR_"AWCMOVEHTM.LOG;*"
"RTN","AWCMFTP",96,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ set prot=(w:rwed,g:rwed,o:rwed,s:rwed) "_AWCDIR_"AWCMOVEHTM.COM;*"
"RTN","AWCMFTP",97,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ set prot=(w:rwed,g:rwed,o:rwed,s:rwed) "_AWCHFIL1_";*"
"RTN","AWCMFTP",98,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ set prot=(w:rwed,g:rwed,o:rwed,s:rwed) "_AWCDIR_"AWCPURGE.COM;*"
"RTN","AWCMFTP",99,0)
 ; purge or keep log files - 0 deletes all, 1 leaves one copy
"RTN","AWCMFTP",100,0)
 I AWCMVMSL=1 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ purge/keep=1 "_AWCDIR_"AWCMOVEHTM.LOG"
"RTN","AWCMFTP",101,0)
 I AWCMVMSL=0 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ delete "_AWCDIR_"AWCMOVEHTM.LOG;*"
"RTN","AWCMFTP",102,0)
 ; purge or delete all COM versions - 0 deletes all, 1 leaves one copy
"RTN","AWCMFTP",103,0)
 I AWCMVMSD=1 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ delete "_AWCDIR_"AWCMOVEHTM.COM;*"
"RTN","AWCMFTP",104,0)
 I AWCMVMSD=0 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ purge/keep=1 "_AWCDIR_"AWCMOVEHTM.COM;*"
"RTN","AWCMFTP",105,0)
 ; delete the web pages - automatic, not user controlled
"RTN","AWCMFTP",106,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ delete "_$P(AWCHFIL1,"_",1)_"*.*;*"
"RTN","AWCMFTP",107,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",$J,AWC,0)="$ exit"
"RTN","AWCMFTP",108,0)
 ; send to VMS
"RTN","AWCMFTP",109,0)
 S Y=$$GTF^%ZISH($NA(^TMP("AWCMFTPD",$J,1,0)),3,AWCDIR,AWCHFILE)
"RTN","AWCMFTP",110,0)
 I AWCX="VMS" S CMD="S %SUBMIT=$&ZLIB.%SUBMIT"_"("""_AWCDIR_AWCHFILE_""""_","_"""/DELETE /NOPRINT /NOLOG"""_")"
"RTN","AWCMFTP",111,0)
 I AWCX="VMSC" S CMD="S AWCVAR=$ZF(-1,AWCVAR)"
"RTN","AWCMFTP",112,0)
 I AWCX="VMSC" S AWCVAR="SUBMIT "_AWCDIR_AWCHFILE_"/DELETE /NOPRINT /NOLOG"
"RTN","AWCMFTP",113,0)
 X CMD
"RTN","AWCMFTP",114,0)
 Q
"RTN","AWCMFTP1")
0^9^B19327079
"RTN","AWCMFTP1",1,0)
AWCMFTP1 ;; FTP FILES TO NATIONAL ROLL-UP SERVER from VISTA -  ; 09 Jan 2004  3:39 PM
"RTN","AWCMFTP1",2,0)
 ;;7.3;TOOLKIT;**84**;Jan 9, 2004
"RTN","AWCMFTP1",3,0)
 ;
"RTN","AWCMFTP1",4,0)
 W *7,!,"Enter at line EN^AWCMFTP1.",!
"RTN","AWCMFTP1",5,0)
 Q
"RTN","AWCMFTP1",6,0)
EN ; variables killed in calling program
"RTN","AWCMFTP1",7,0)
 S VMSC=""                                            ;INIT THE VAR
"RTN","AWCMFTP1",8,0)
 S AWCHFILE="AWCMOVESTAT.COM"                          ;COM file name
"RTN","AWCMFTP1",9,0)
 I AWCX="NT" S AWCHFILE=AWCFILE
"RTN","AWCMFTP1",10,0)
 S AWCDTAX=$G(^AWC(177100.12,1,0))
"RTN","AWCMFTP1",11,0)
 S AWCDIR=$P(AWCDTAX,U,5)             ;Parameter file
"RTN","AWCMFTP1",12,0)
 S:AWCDIR="" AWCDIR="SYS$SYSDEVICE:[DSMMGR]"          ;DEFAULT
"RTN","AWCMFTP1",13,0)
 S AWCSITE=$$SITE^VASITE,AWCSITE=$P(AWCSITE,U,2)      ;site Name
"RTN","AWCMFTP1",14,0)
 S AWCSITEN=+$$SITE^VASITE                            ;3 dig number
"RTN","AWCMFTP1",15,0)
 S AWCDIRL=$$LOW^XLFSTR(AWCDIR),AWCHFILL=$$LOW^XLFSTR(AWCHFILE)
"RTN","AWCMFTP1",16,0)
 S AWCDTX=$G(^AWC(177100.12,1,1))
"RTN","AWCMFTP1",17,0)
 S AWCWBFLD=$P(^AWC(177100.12,1,0),U,15),AWCWBFLD=$$LOW^XLFSTR(AWCWBFLD) ;web page folder
"RTN","AWCMFTP1",18,0)
 S AWCMVMSL=$P(AWCDTAX,U,16) ;VMS logging on or off
"RTN","AWCMFTP1",19,0)
 S AWCMVMSD=$P(AWCDTAX,U,18) ;DELETE COM files on or off
"RTN","AWCMFTP1",20,0)
 S AWCWBFLD=$P(AWCWBFLD,"/",2)
"RTN","AWCMFTP1",21,0)
 S AWCMSRV=$P(AWCDTX,U,6),AWCMUSR=$P(AWCDTX,U,7),AWCMPW=$P(AWCDTX,U,8)
"RTN","AWCMFTP1",22,0)
 D @AWCX
"RTN","AWCMFTP1",23,0)
 Q
"RTN","AWCMFTP1",24,0)
 ;
"RTN","AWCMFTP1",25,0)
NT S AWCC=1
"RTN","AWCMFTP1",26,0)
 K ^TMP("AWCMFTP1")
"RTN","AWCMFTP1",27,0)
 S ^TMP("AWCMFTP1",AWCC,0)="open "_AWCMSRV,AWCC=AWCC+1 ;server ip address
"RTN","AWCMFTP1",28,0)
 S ^TMP("AWCMFTP1",AWCC,0)=AWCMUSR,AWCC=AWCC+1 ; ftp user
"RTN","AWCMFTP1",29,0)
 S ^TMP("AWCMFTP1",AWCC,0)=AWCMPW,AWCC=AWCC+1  ;ftp password
"RTN","AWCMFTP1",30,0)
 S ^TMP("AWCMFTP1",AWCC,0)="ascii",AWCC=AWCC+1
"RTN","AWCMFTP1",31,0)
 S ^TMP("AWCMFTP1",AWCC,0)="put "_AWCHFILE,AWCC=AWCC+1
"RTN","AWCMFTP1",32,0)
 S ^TMP("AWCMFTP1",AWCC,0)="bye"
"RTN","AWCMFTP1",33,0)
 ; write it to the NT directory
"RTN","AWCMFTP1",34,0)
 S Y=$$GTF^%ZISH($NA(^TMP("AWCMFTP1",1,0)),2,AWCDIRL,"ftpstatawc.txt")
"RTN","AWCMFTP1",35,0)
 ; send command to NT to execute this batch file
"RTN","AWCMFTP1",36,0)
 S CMD="S AWCVAR=$ZF(-1,""ftp -s:ftpstatawc.txt"")" X CMD
"RTN","AWCMFTP1",37,0)
 I $D(AWCMANL),AWCVAR=0 W !!,"Data successfully sent.",!! H 1
"RTN","AWCMFTP1",38,0)
 G EXIT
"RTN","AWCMFTP1",39,0)
 ;
"RTN","AWCMFTP1",40,0)
VMSC ; VMS FOR CACHE MODS TO DOUBLE CHECK FOR OS
"RTN","AWCMFTP1",41,0)
 S VMSC=1
"RTN","AWCMFTP1",42,0)
 ;
"RTN","AWCMFTP1",43,0)
VMS K ^TMP("AWCMFTP1")
"RTN","AWCMFTP1",44,0)
 S AWC=1,^TMP("AWCMFTP1",AWC,0)="$ set noon"
"RTN","AWCMFTP1",45,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ set proc/priv = all"
"RTN","AWCMFTP1",46,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ assign sys$command sys$input "
"RTN","AWCMFTP1",47,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ set verify"
"RTN","AWCMFTP1",48,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ a=""''f$user()'"""
"RTN","AWCMFTP1",49,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ set def "_AWCDIR
"RTN","AWCMFTP1",50,0)
 S AWC=AWC+1
"RTN","AWCMFTP1",51,0)
 S ^TMP("AWCMFTP1",AWC,0)="$ set prot=(w:rwed,g:rwed,o:rwed,s:rwed) "_AWCDIR_AWCHFILE
"RTN","AWCMFTP1",52,0)
 S AWC=AWC+1
"RTN","AWCMFTP1",53,0)
 S ^TMP("AWCMFTP1",AWC,0)="$ ftp "_AWCMSRV
"RTN","AWCMFTP1",54,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)=AWCMUSR
"RTN","AWCMFTP1",55,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)=AWCMPW
"RTN","AWCMFTP1",56,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="ascii"
"RTN","AWCMFTP1",57,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="put "_AWCHFIL1
"RTN","AWCMFTP1",58,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="bye"
"RTN","AWCMFTP1",59,0)
 ; purge or keep log files after FTP
"RTN","AWCMFTP1",60,0)
 S AWC=AWC+1,^TMP("AWCMFTPD",AWC,0)="$ set prot=(w:rwed,g:rwed,o:rwed,s:rwed) "_AWCDIR_AWCHFILE_";*"
"RTN","AWCMFTP1",61,0)
 I AWCMVMSL=1 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ purge/keep=1 "_AWCDIR_$P(AWCHFILE,".",1)_".LOG"
"RTN","AWCMFTP1",62,0)
 I AWCMVMSL=0 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ delete "_AWCDIR_$P(AWCHFILE,".",1)_".LOG;*"
"RTN","AWCMFTP1",63,0)
 ; purge or delete all web page versions after FTP
"RTN","AWCMFTP1",64,0)
 I AWCMVMSD=1 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ delete "_AWCDIR_AWCHFILE_";*"
"RTN","AWCMFTP1",65,0)
 I AWCMVMSD=0 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ purge/keep=1 "_AWCDIR_AWCHFILE
"RTN","AWCMFTP1",66,0)
 ; delete the stat text file - automatic,not user controlled
"RTN","AWCMFTP1",67,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ delete CPRSstats*.*;*"
"RTN","AWCMFTP1",68,0)
 S AWC=AWC+1,^TMP("AWCMFTP1",AWC,0)="$ exit"
"RTN","AWCMFTP1",69,0)
 ; send to VMS
"RTN","AWCMFTP1",70,0)
 S Y=$$GTF^%ZISH($NA(^TMP("AWCMFTP1",1,0)),2,AWCDIR,AWCHFILE)
"RTN","AWCMFTP1",71,0)
 G:VMSC VMSC1
"RTN","AWCMFTP1",72,0)
 ; USE $&ZLIB EXTERNAL CALLS FOR DSM
"RTN","AWCMFTP1",73,0)
 S CMD="S %SUBMIT=$&ZLIB.%SUBMIT"_"("""_AWCDIR_AWCHFILE_""""_","_"""/NOPRINT"_$S(AWCMVMSL=1:"/LOG="_AWCDIR_$P(AWCHFILE,".",1)_".LOG"""_")",1:"/NOLOG"""_")")
"RTN","AWCMFTP1",74,0)
 X CMD I $D(AWCMANL) W !!,"Data successfully sent.",!! H 1
"RTN","AWCMFTP1",75,0)
 G EXIT
"RTN","AWCMFTP1",76,0)
VMSC1 ;
"RTN","AWCMFTP1",77,0)
 ; vms cache
"RTN","AWCMFTP1",78,0)
 ; USE $ZF CALLS FOR OS COMMANDS IN CACHE
"RTN","AWCMFTP1",79,0)
 S CMD="S AWCVAR=$ZF(-1,AWCVAR)"
"RTN","AWCMFTP1",80,0)
 S AWCVAR="SUBMIT "_AWCDIR_AWCHFILE_"/NOPRINT"_$S(AWCMVMSL=1:"/LOG="_AWCDIR_$P(AWCHFILE,".",1)_".LOG",1:"/NOLOG")
"RTN","AWCMFTP1",81,0)
 ; purge or delete logs
"RTN","AWCMFTP1",82,0)
 I AWCMVMSL=1 S AWCVAR="purge/keep=1 "_AWCDIR_$P(AWCHFILE,".",1)_".LOG"
"RTN","AWCMFTP1",83,0)
 I AWCMVMSL=0 S AWCVAR="delete "_AWCDIR_$P(AWCHFILE,".",1)_".LOG;*"
"RTN","AWCMFTP1",84,0)
 X CMD
"RTN","AWCMFTP1",85,0)
 ; purge or delete all web page versions after FTP
"RTN","AWCMFTP1",86,0)
 I AWCMVMSD=0 S AWCVAR="purge/keep=1 "_AWCDIR_AWCHFILE
"RTN","AWCMFTP1",87,0)
 I AWCMVMSD=1 S AWCVAR="delete "_AWCDIR_AWCHFILE_";*"
"RTN","AWCMFTP1",88,0)
 X CMD
"RTN","AWCMFTP1",89,0)
EXIT ;
"RTN","AWCMFTP1",90,0)
 K CMD,^TMP("AWCMFTP1"),AWCMVMSL,AWCMVMSD,AWCDTAX,AWCDTX,AWC,AWCMANL
"RTN","AWCMFTP1",91,0)
 Q
"VER")
8.0T20^22.0
"^DD",177100.12,177100.12,0)
FIELD^^24^25
"^DD",177100.12,177100.12,0,"DDA")
N
"^DD",177100.12,177100.12,0,"DT")
3031230
"^DD",177100.12,177100.12,0,"IX","B",177100.12,.01)

"^DD",177100.12,177100.12,0,"NM","CPRS MONITOR")

"^DD",177100.12,177100.12,.01,0)
FACILITY^RP4'X^DIC(4,^0;1^S DINUM=1 Q
"^DD",177100.12,177100.12,.01,1,0)
^.1
"^DD",177100.12,177100.12,.01,1,1,0)
177100.12^B
"^DD",177100.12,177100.12,.01,1,1,1)
S ^AWC(177100.12,"B",$E(X,1,30),DA)=""
"^DD",177100.12,177100.12,.01,1,1,2)
K ^AWC(177100.12,"B",$E(X,1,30),DA)
"^DD",177100.12,177100.12,.01,1,2,0)
^^TRIGGER^177100.12^1.5
"^DD",177100.12,177100.12,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AWC(177100.12,D0,1)):^(1),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(177100.12,.01,1,2,1.1) X ^DD(177100.12,.01,1,2,1.4)
"^DD",177100.12,177100.12,.01,1,2,1.1)
S X=DIV S I(0,0)=$G(D0),D0=DIV S:'D0!'$D(^DIC(4,+D0,0)) D0=-1 S Y(101)=$S($D(^DIC(4,D0,99)):^(99),1:"") S X=$P(Y(101),U,1) S D0=I(0,0)
"^DD",177100.12,177100.12,.01,1,2,1.4)
S DIH=$G(^AWC(177100.12,DIV(0),1)),DIV=X S $P(^(1),U,2)=DIV,DIH=177100.12,DIG=1.5 D ^DICR
"^DD",177100.12,177100.12,.01,1,2,2)
Q
"^DD",177100.12,177100.12,.01,1,2,"%D",0)
^^1^1^3031228^
"^DD",177100.12,177100.12,.01,1,2,"%D",1,0)
Stuff the station number into field 1.5 when Facility is entered.
"^DD",177100.12,177100.12,.01,1,2,"CREATE VALUE")
FACILITY:#99
"^DD",177100.12,177100.12,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",177100.12,177100.12,.01,1,2,"DT")
3031228
"^DD",177100.12,177100.12,.01,1,2,"FIELD")
#1.5
"^DD",177100.12,177100.12,.01,3)
Enter the station number or name of the main facility where this software will run.
"^DD",177100.12,177100.12,.01,21,0)
^^2^2^3031226^
"^DD",177100.12,177100.12,.01,21,1,0)
This is a pointer to file 4, the INSTITUTION file which will provide the
"^DD",177100.12,177100.12,.01,21,2,0)
name of your facility.
"^DD",177100.12,177100.12,.01,"DT")
3031228
"^DD",177100.12,177100.12,1,0)
TIU TAB^RS^1:ON;0:OFF;^0;2^Q
"^DD",177100.12,177100.12,1,3)
Enter 1 for ON, 0 for OFF, or you may type in ON or OFF.
"^DD",177100.12,177100.12,1,21,0)
^^2^2^3030801^
"^DD",177100.12,177100.12,1,21,1,0)
This is a logical switch that controls whether data is captured for the
"^DD",177100.12,177100.12,1,21,2,0)
item.
"^DD",177100.12,177100.12,1,"DT")
3031230
"^DD",177100.12,177100.12,1.2,0)
SYSTEM ACTIVE^RS^1:YES;0:NO;^0;17^Q
"^DD",177100.12,177100.12,1.2,3)
Enter Y or 1 to turn the data capture on or N or 0 to turn it off.
"^DD",177100.12,177100.12,1.2,21,0)
^^1^1^3030821^
"^DD",177100.12,177100.12,1.2,21,1,0)
This is the master switch for the entire data capture system.
"^DD",177100.12,177100.12,1.2,"DT")
3031230
"^DD",177100.12,177100.12,1.5,0)
STATION NUMBER^F^^1;2^K:$L(X)>3!($L(X)<3)!'(X?3N) X
"^DD",177100.12,177100.12,1.5,3)
This field is triggered by the FACILITY field (#.01).
"^DD",177100.12,177100.12,1.5,5,1,0)
177100.12^.01^2
"^DD",177100.12,177100.12,1.5,21,0)
^^3^3^3031226^
"^DD",177100.12,177100.12,1.5,21,1,0)
This is the local station number and is triggered by field .01, the 
"^DD",177100.12,177100.12,1.5,21,2,0)
FACILITY field. All national statistics will be aggregated under this
"^DD",177100.12,177100.12,1.5,21,3,0)
number.
"^DD",177100.12,177100.12,1.5,"DT")
3031226
"^DD",177100.12,177100.12,2,0)
LAB COVERSHEET^RS^1:ON;0:OFF;^0;3^Q
"^DD",177100.12,177100.12,2,3)
Enter 1 for ON, 0 for OFF, or you may type in ON or OFF.
"^DD",177100.12,177100.12,2,21,0)
^^2^2^3030801^
"^DD",177100.12,177100.12,2,21,1,0)
This is a logical switch that controls whether data is captured for the
"^DD",177100.12,177100.12,2,21,2,0)
item.
"^DD",177100.12,177100.12,2,"DT")
3031230
"^DD",177100.12,177100.12,3,0)
REMINDERS COVERSHEET^RS^1:ON;0:OFF;^0;4^Q
"^DD",177100.12,177100.12,3,3)
Enter 1 for ON, 0 for OFF, or you may type in ON or OFF.
"^DD",177100.12,177100.12,3,21,0)
^^2^2^3030801^
"^DD",177100.12,177100.12,3,21,1,0)
This is a logical switch that controls whether data is captured for the
"^DD",177100.12,177100.12,3,21,2,0)
item.
"^DD",177100.12,177100.12,3,"DT")
3031230
"^DD",177100.12,177100.12,4,0)
HFS LOCATION^RF^^0;5^K:$L(X)>40!($L(X)<3) X
"^DD",177100.12,177100.12,4,3)
Answer must be 3-40 characters in length.  This is a required field.
"^DD",177100.12,177100.12,4,21,0)
^^5^5^3031228^
"^DD",177100.12,177100.12,4,21,1,0)
This is a host file location that will be used to write the html pages to 
"^DD",177100.12,177100.12,4,21,2,0)
be sent by ftp to the web server.  This may be any directory accessible 
"^DD",177100.12,177100.12,4,21,3,0)
by the operating system. It should be noted that the proper permissions 
"^DD",177100.12,177100.12,4,21,4,0)
must exist on the directory, e.g., read, write, and delete for all 
"^DD",177100.12,177100.12,4,21,5,0)
functions to work properly.
"^DD",177100.12,177100.12,4,"DT")
3031228
"^DD",177100.12,177100.12,5,0)
WEB PAGE NAME^RFX^^0;6^K:$L(X)>20!($L(X)<5) X I $D(X) K:"^.html^.htm^.HTML^.HTM^"[(U_"."_$P(X,".",2)_U) X
"^DD",177100.12,177100.12,5,3)
Enter the name of the web page, without .htm or .html.
"^DD",177100.12,177100.12,5,21,0)
^^2^2^3030828^
"^DD",177100.12,177100.12,5,21,1,0)
This is the name of the webpage for the server. It may be anything the 
"^DD",177100.12,177100.12,5,21,2,0)
facility wishes.
"^DD",177100.12,177100.12,5,"DT")
3030903
"^DD",177100.12,177100.12,6,0)
NUMBER OF HOURS TO DISPLAY^RNJ2,0^^0;7^K:+X'=X!(X>12)!(X<5)!(X?.E1"."1.N) X
"^DD",177100.12,177100.12,6,3)
Type a number between 5 and 12.  The recommended is eight hours.
"^DD",177100.12,177100.12,6,21,0)
^^1^1^3031226^
"^DD",177100.12,177100.12,6,21,1,0)
This controls the number of hours displayed on the web page.
"^DD",177100.12,177100.12,6,"DT")
3031226
"^DD",177100.12,177100.12,7,0)
MAXIMUM SECONDS TO DISPLAY^RNJ3,0^^0;8^K:+X'=X!(X>240)!(X<10)!(X?.E1"."1.N) X
"^DD",177100.12,177100.12,7,3)
Type a number between 10 and 240.  The recommended is ten seconds.
"^DD",177100.12,177100.12,7,21,0)
^^3^3^3030828^^
"^DD",177100.12,177100.12,7,21,1,0)
This field controls how many seconds display on the html graph.  It can 
"^DD",177100.12,177100.12,7,21,2,0)
be set from 10 to 240 seconds.  Anything over 240 will flatline at the top
"^DD",177100.12,177100.12,7,21,3,0)
of the graph.  
"^DD",177100.12,177100.12,7,"DT")
3030828
"^DD",177100.12,177100.12,8,0)
TIU LINE COLOR^RF^^0;9^K:$L(X)>11!($L(X)<5)!'(X?1.3N1","1.3N1","1.3N) X
"^DD",177100.12,177100.12,8,3)
Answer must be 5-11 characters in length.  This is an RGB color code.  Example: 100,23,109.
"^DD",177100.12,177100.12,8,21,0)
^.001^2^2^3030801^^^
"^DD",177100.12,177100.12,8,21,1,0)
The RGB color code for the TIU line.  It must be in the form 1-3 numbers, 
"^DD",177100.12,177100.12,8,21,2,0)
1 comma,1-3 numbers, 1 comma, 1-3 numbers.
"^DD",177100.12,177100.12,8,"DT")
3031230
"^DD",177100.12,177100.12,9,0)
LAB LINE COLOR^RF^^0;10^K:$L(X)>11!($L(X)<5)!'(X?1.3N1","1.3N1","1.3N) X
"^DD",177100.12,177100.12,9,3)
Answer must be 5-11 characters in length.  This is an RGB color code.  Example: 100,23,109.
"^DD",177100.12,177100.12,9,21,0)
^^2^2^3030801^
"^DD",177100.12,177100.12,9,21,1,0)
The RGB color code for the LAB line.  It must be in the form 1-3 numbers,
"^DD",177100.12,177100.12,9,21,2,0)
1 comma,1-3 numbers, 1 comma, 1-3 numbers.
"^DD",177100.12,177100.12,9,"DT")
3031205
"^DD",177100.12,177100.12,10,0)
REMINDERS LINE COLOR^RF^^0;11^K:$L(X)>11!($L(X)<5)!'(X?1.3N1","1.3N1","1.3N) X
"^DD",177100.12,177100.12,10,3)
Answer must be 5-11 characters in length.  This is an RGB color code.  Example: 100,23,109.
"^DD",177100.12,177100.12,10,21,0)
^^2^2^3030801^
"^DD",177100.12,177100.12,10,21,1,0)
The RGB color code for the REMINDER line.  It must be in the form 1-3
"^DD",177100.12,177100.12,10,21,2,0)
numbers, 1 comma,1-3 numbers, 1 comma, 1-3 numbers.
"^DD",177100.12,177100.12,10,"DT")
3031230
"^DD",177100.12,177100.12,11,0)
DISPLAY GRID?^RS^0:NO;1:YES;^0;12^Q
"^DD",177100.12,177100.12,11,3)
Enter 1 or Y to display the grid, 0 or N not to display it.
"^DD",177100.12,177100.12,11,21,0)
^^3^3^3030801^
"^DD",177100.12,177100.12,11,21,1,0)
This determines whether the graph on the webpage has the grid display off
"^DD",177100.12,177100.12,11,21,2,0)
or on. It is suggested to leave the grid on at all times to facilitate 
"^DD",177100.12,177100.12,11,21,3,0)
viewing the data values displayed.
"^DD",177100.12,177100.12,11,"DT")
3031228
"^DD",177100.12,177100.12,12,0)
BACKGROUND COLOR^RFX^^0;13^K:$L(X)>11!($L(X)<5)!'(X?1.3N1","1.3N1","1.3N) X
"^DD",177100.12,177100.12,12,3)
Answer must be 5-11 characters in length.  This is an RGB color code.  Example: 100,23,109.
"^DD",177100.12,177100.12,12,21,0)
^^2^2^3030801^
"^DD",177100.12,177100.12,12,21,1,0)
The RGB color code for the graph background.  It must be in the form 1-3
"^DD",177100.12,177100.12,12,21,2,0)
numbers, 1 comma,1-3 numbers, 1 comma, 1-3 numbers. Example: 100,23,109.
"^DD",177100.12,177100.12,12,"DT")
3031205
"^DD",177100.12,177100.12,13,0)
NUMBER OF DAYS TO KEEP DATA^NJ4,0^^0;14^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X
"^DD",177100.12,177100.12,13,3)
Type a number between 1 and 9999, 0 Decimal Digits
"^DD",177100.12,177100.12,13,21,0)
^^3^3^3031228^
"^DD",177100.12,177100.12,13,21,1,0)
This is the number of days to keep the data on file.  It is suggested to 
"^DD",177100.12,177100.12,13,21,2,0)
keep the maximum on file so as to be able to produce trends with VA 
"^DD",177100.12,177100.12,13,21,3,0)
Fileman.  You may select from 1 day to 9999 days.
"^DD",177100.12,177100.12,13,"DT")
3031228
"^DD",177100.12,177100.12,14,0)
WEB PAGE ROOT LOCATION^RF^^0;15^K:$L(X)>50!($L(X)<1) X
"^DD",177100.12,177100.12,14,3)
Answer must be 1-50 characters in length.  This entry should not end in / .
"^DD",177100.12,177100.12,14,21,0)
^^16^16^3031226^
"^DD",177100.12,177100.12,14,21,1,0)
This is the root of the web page to be able to display other divisions.  
"^DD",177100.12,177100.12,14,21,2,0)
It is also used to enable the auto-refresh of the web pages.
"^DD",177100.12,177100.12,14,21,3,0)
 
"^DD",177100.12,177100.12,14,21,4,0)
The proper format is: vaww.facility.med.va.gov/web server foldername. You
"^DD",177100.12,177100.12,14,21,5,0)
do not have to have a "/" on the end.
"^DD",177100.12,177100.12,14,21,6,0)
 
"^DD",177100.12,177100.12,14,21,7,0)
If this is not filled in properly, the other sites (divisions, satellite 
"^DD",177100.12,177100.12,14,21,8,0)
offices, CBOCs, etc.) will not display properly.
"^DD",177100.12,177100.12,14,21,9,0)
 
"^DD",177100.12,177100.12,14,21,10,0)
Example: web server folder name for monitor page: cprsmonitor
"^DD",177100.12,177100.12,14,21,11,0)
                                                  ===========
"^DD",177100.12,177100.12,14,21,12,0)
         facility name: zzzhospital
"^DD",177100.12,177100.12,14,21,13,0)
                        ===========
"^DD",177100.12,177100.12,14,21,14,0)
The entry would be:  vaww.zzzhospital.med.va.gov/cprsmonitor
"^DD",177100.12,177100.12,14,21,15,0)
 
"^DD",177100.12,177100.12,14,21,16,0)
Each satellite office page will be appended to this to make a full URL.
"^DD",177100.12,177100.12,14,"DT")
3031226
"^DD",177100.12,177100.12,17,0)
WEB SERVER ADDRESS^RFX^^1;3^K:$L(X)>50!($L(X)<7) X
"^DD",177100.12,177100.12,17,3)
Answer must be 7-50 characters in length and a valid DNS entry.
"^DD",177100.12,177100.12,17,21,0)
^^2^2^3030828^
"^DD",177100.12,177100.12,17,21,1,0)
This is the IP address of the webserver that will display the monitor 
"^DD",177100.12,177100.12,17,21,2,0)
page.
"^DD",177100.12,177100.12,17,"DT")
3031226
"^DD",177100.12,177100.12,18,0)
WEB SERVER FTP USER^RF^^1;4^K:$L(X)>30!($L(X)<3) X
"^DD",177100.12,177100.12,18,2)
S Y(0)=Y S Y="<Hidden>"
"^DD",177100.12,177100.12,18,2.1)
S Y="<Hidden>"
"^DD",177100.12,177100.12,18,3)
Answer must be 3-30 characters in length.
"^DD",177100.12,177100.12,18,21,0)
^^8^8^3031224^
"^DD",177100.12,177100.12,18,21,1,0)
This is the NT username that will be used to log into the WEB SITE FTP
"^DD",177100.12,177100.12,18,21,2,0)
server where the facility monitor pages are stored. It must be a valid NT
"^DD",177100.12,177100.12,18,21,3,0)
account but does not have to be in any groups or have special access.
"^DD",177100.12,177100.12,18,21,4,0)
 
"^DD",177100.12,177100.12,18,21,5,0)
This field must be input in this way:  domain\username
"^DD",177100.12,177100.12,18,21,6,0)
                                Like:  vhann\vhaxxxname
"^DD",177100.12,177100.12,18,21,7,0)
 
"^DD",177100.12,177100.12,18,21,8,0)
                Example:  vha07\vhabirsmythj
"^DD",177100.12,177100.12,18,"DT")
3031226
"^DD",177100.12,177100.12,19,0)
WEB SERVER FTP PASSWORD^RFOX^^1;5^K:$L(X)>16!($L(X)<8) X
"^DD",177100.12,177100.12,19,2)
S Y(0)=Y S Y="<Hidden>"
"^DD",177100.12,177100.12,19,2.1)
S Y="<Hidden>"
"^DD",177100.12,177100.12,19,3)
This is the NT password for the LOCAL FTP USER.
"^DD",177100.12,177100.12,19,21,0)
^^2^2^3031224^
"^DD",177100.12,177100.12,19,21,1,0)
This is the password to be used with the username (field 18) to log into 
"^DD",177100.12,177100.12,19,21,2,0)
the WEB SITE FTP server where the monitor pages are stored.
"^DD",177100.12,177100.12,19,"DT")
3031224
"^DD",177100.12,177100.12,20,0)
NATIONAL FTP SERVER ADDRESS^RFX^^1;6^K:$L(X)>50!($L(X)<7) X
"^DD",177100.12,177100.12,20,3)
Answer must be 7-50 characters in length and must be a valid DNS entry.
"^DD",177100.12,177100.12,20,21,0)
^^2^2^3031226^
"^DD",177100.12,177100.12,20,21,1,0)
This is the DNS of the National server which will keep the national cprs
"^DD",177100.12,177100.12,20,21,2,0)
monitor time aggregation for the nation.
"^DD",177100.12,177100.12,20,"DT")
3031226
"^DD",177100.12,177100.12,21,0)
NATIONAL FTP USER^RF^^1;7^K:$L(X)>30!($L(X)<3) X
"^DD",177100.12,177100.12,21,2)
S Y(0)=Y S Y="<Hidden>"
"^DD",177100.12,177100.12,21,2.1)
S Y="<Hidden>"
"^DD",177100.12,177100.12,21,3)
Answer must be 3-30 characters in length.  This is the National ftp user name.
"^DD",177100.12,177100.12,21,21,0)
^^1^1^3031226^
"^DD",177100.12,177100.12,21,21,1,0)
This is the NT username for the National CPRS monitor times web server.  
"^DD",177100.12,177100.12,21,"DT")
3031226
"^DD",177100.12,177100.12,22,0)
NATIONAL FTP PASSWORD^RFOX^^1;8^K:$L(X)>16!($L(X)<8) X
"^DD",177100.12,177100.12,22,2)
S Y(0)=Y S Y="<Hidden>"
"^DD",177100.12,177100.12,22,2.1)
S Y="<Hidden>"
"^DD",177100.12,177100.12,22,3)
This is the FTP password to roll up the national data.
"^DD",177100.12,177100.12,22,21,0)
^^2^2^3030828^
"^DD",177100.12,177100.12,22,21,1,0)
This is the password used with the NATIONAL FTP USER to access the 
"^DD",177100.12,177100.12,22,21,2,0)
National CPRS Monitor ftp site to roll up the data.
"^DD",177100.12,177100.12,22,"DT")
3030915
"^DD",177100.12,177100.12,23,0)
LOG VMS FTP ACTIVITY^S^1:YES;0:NO;^0;16^Q
"^DD",177100.12,177100.12,23,3)
Enter 1 to log VMS activity or 0 (or enter nothing) to not log VMS activity.
"^DD",177100.12,177100.12,23,21,0)
^^1^1^3031118^
"^DD",177100.12,177100.12,23,21,1,0)
Turns on or off VMS FTP activity logging.  This affects VMS sites only.
"^DD",177100.12,177100.12,23,"DT")
3031226
"^DD",177100.12,177100.12,24,0)
DELETE OLD COM FILES (VMS)^S^0:NO;1:YES;^0;18^Q
"^DD",177100.12,177100.12,24,3)
Enter Y or 1 to delete the AWCMOVEHTM.COM after ftp or N or 0 (or nothing) to leave them.  This affects VMS sites only.
"^DD",177100.12,177100.12,24,21,0)
^^2^2^3031118^
"^DD",177100.12,177100.12,24,21,1,0)
Controls the deletion of web pages after the ftp process has completed.  
"^DD",177100.12,177100.12,24,21,2,0)
This affects VMS sites only.
"^DD",177100.12,177100.12,24,"DT")
3031226
"^DD",177100.13,177100.13,0)
FIELD^^5^6
"^DD",177100.13,177100.13,0,"DDA")
N
"^DD",177100.13,177100.13,0,"DT")
3030712
"^DD",177100.13,177100.13,0,"IX","B",177100.13,.01)

"^DD",177100.13,177100.13,0,"IX","C",177100.13,3)

"^DD",177100.13,177100.13,0,"NM","CPRS MONITOR DATA")

"^DD",177100.13,177100.13,.01,0)
ENTRY NUMBER^RF^^0;1^K:$L(X)>100!($L(X)<1)!'(X?1.100N) X
"^DD",177100.13,177100.13,.01,1,0)
^.1
"^DD",177100.13,177100.13,.01,1,1,0)
177100.13^B
"^DD",177100.13,177100.13,.01,1,1,1)
S ^AWC(177100.13,"B",$E(X,1,30),DA)=""
"^DD",177100.13,177100.13,.01,1,1,2)
K ^AWC(177100.13,"B",$E(X,1,30),DA)
"^DD",177100.13,177100.13,.01,3)
The entry number for the record.  This is system maintained.
"^DD",177100.13,177100.13,.01,21,0)
^^2^2^3030801^
"^DD",177100.13,177100.13,.01,21,1,0)
This is the internal entry number of the data.  It is manually calculated 
"^DD",177100.13,177100.13,.01,21,2,0)
("next available") by the editing routine.
"^DD",177100.13,177100.13,.01,"DT")
3030702
"^DD",177100.13,177100.13,1,0)
SECONDS^NJ3,0^^0;2^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",177100.13,177100.13,1,3)
The number of calculated seconds response time.
"^DD",177100.13,177100.13,1,21,0)
^^2^2^3030801^
"^DD",177100.13,177100.13,1,21,1,0)
This field represents the total number of seconds required to retrieve the
"^DD",177100.13,177100.13,1,21,2,0)
various CPRS data.
"^DD",177100.13,177100.13,1,"DT")
3030709
"^DD",177100.13,177100.13,2,0)
USER^P200'^VA(200,^0;3^Q
"^DD",177100.13,177100.13,2,3)
The DUZ of the user that used the CPRS GUI.
"^DD",177100.13,177100.13,2,21,0)
^^1^1^3030801^
"^DD",177100.13,177100.13,2,21,1,0)
The DUZ of the user who was using the CPRS GUI.
"^DD",177100.13,177100.13,2,"DT")
3030709
"^DD",177100.13,177100.13,3,0)
TRAN DATE/TIME^D^^0;4^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",177100.13,177100.13,3,1,0)
^.1^^0
"^DD",177100.13,177100.13,3,1,1,0)
177100.13^C
"^DD",177100.13,177100.13,3,1,1,1)
S ^AWC(177100.13,"C",$E(X,1,30),DA)=""
"^DD",177100.13,177100.13,3,1,1,2)
K ^AWC(177100.13,"C",$E(X,1,30),DA)
"^DD",177100.13,177100.13,3,1,1,"%D",0)
^.101^1^1^3030825^^
"^DD",177100.13,177100.13,3,1,1,"%D",1,0)
Used to sort the HTML report for the web page.
"^DD",177100.13,177100.13,3,1,1,"DT")
3030702
"^DD",177100.13,177100.13,3,3)
The Fileman date/time of the starting $H.
"^DD",177100.13,177100.13,3,21,0)
^^2^2^3030801^
"^DD",177100.13,177100.13,3,21,1,0)
This field is used to create a cross-reference for sorting the data for 
"^DD",177100.13,177100.13,3,21,2,0)
the web page.
"^DD",177100.13,177100.13,3,"DT")
3030801
"^DD",177100.13,177100.13,4,0)
DIVISION^P4'^DIC(4,^0;5^Q
"^DD",177100.13,177100.13,4,1,0)
^.1^^0
"^DD",177100.13,177100.13,4,3)
The division of the user.
"^DD",177100.13,177100.13,4,21,0)
^^2^2^3030801^
"^DD",177100.13,177100.13,4,21,1,0)
This is the division (DUZ(2) variable) for the user. It is used to report 
"^DD",177100.13,177100.13,4,21,2,0)
multiple facilities on different web pages.
"^DD",177100.13,177100.13,4,"DT")
3030829
"^DD",177100.13,177100.13,5,0)
TYPE^S^1:TIU TAB;2:LAB TAB;3:REMINDER TAB;^0;6^Q
"^DD",177100.13,177100.13,5,1,0)
^.1^^0
"^DD",177100.13,177100.13,5,3)
The type of information that was accessed in the CPRS GUI.
"^DD",177100.13,177100.13,5,21,0)
^^5^5^3030801^
"^DD",177100.13,177100.13,5,21,1,0)
This is the numeric value of type of data reported:
"^DD",177100.13,177100.13,5,21,2,0)
 
"^DD",177100.13,177100.13,5,21,3,0)
        1 - TIU tab
"^DD",177100.13,177100.13,5,21,4,0)
        2 - LAB info
"^DD",177100.13,177100.13,5,21,5,0)
        3 - Reminder info
"^DD",177100.13,177100.13,5,"DT")
3030824
"^DIC",177100.12,177100.12,0)
CPRS MONITOR^177100.12
"^DIC",177100.12,177100.12,0,"GL")
^AWC(177100.12,
"^DIC",177100.12,177100.12,"%",0)
^1.005^^0
"^DIC",177100.12,177100.12,"%D",0)
^1.001^3^3^3031229^^^^
"^DIC",177100.12,177100.12,"%D",1,0)
This is a parameter file for CPRS response time monitoring.  It keeps all 
"^DIC",177100.12,177100.12,"%D",2,0)
necessary information to make web pages with the response times graphed 
"^DIC",177100.12,177100.12,"%D",3,0)
on them.
"^DIC",177100.12,"B","CPRS MONITOR",177100.12)

"^DIC",177100.13,177100.13,0)
CPRS MONITOR DATA^177100.13
"^DIC",177100.13,177100.13,0,"GL")
^AWC(177100.13,
"^DIC",177100.13,177100.13,"%",0)
^1.005^^0
"^DIC",177100.13,177100.13,"%D",0)
^1.001^3^3^3031229^^
"^DIC",177100.13,177100.13,"%D",1,0)
This is the CPRS Monitor data file which stores information necessary to 
"^DIC",177100.13,177100.13,"%D",2,0)
make graphical data for the monitor web pages of the facilities.  It is 
"^DIC",177100.13,177100.13,"%D",3,0)
also used to send data to the National Response Time Monitor web site.
"^DIC",177100.13,"B","CPRS MONITOR DATA",177100.13)

**INSTALL NAME**
OR*3.0*214
"BLD",899,0)
OR*3.0*214^ORDER ENTRY/RESULTS REPORTING^0^3040116^y
"BLD",899,4,0)
^9.64PA^^
"BLD",899,"INI")

"BLD",899,"INID")
^^
"BLD",899,"INIT")

"BLD",899,"KRN",0)
^9.67PA^8989.52^19
"BLD",899,"KRN",.4,0)
.4
"BLD",899,"KRN",.401,0)
.401
"BLD",899,"KRN",.402,0)
.402
"BLD",899,"KRN",.403,0)
.403
"BLD",899,"KRN",.5,0)
.5
"BLD",899,"KRN",.84,0)
.84
"BLD",899,"KRN",3.6,0)
3.6
"BLD",899,"KRN",3.8,0)
3.8
"BLD",899,"KRN",9.2,0)
9.2
"BLD",899,"KRN",9.8,0)
9.8
"BLD",899,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",899,"KRN",9.8,"NM",1,0)
ORWCV^^0^B69208042
"BLD",899,"KRN",9.8,"NM","B","ORWCV",1)

"BLD",899,"KRN",19,0)
19
"BLD",899,"KRN",19.1,0)
19.1
"BLD",899,"KRN",101,0)
101
"BLD",899,"KRN",409.61,0)
409.61
"BLD",899,"KRN",771,0)
771
"BLD",899,"KRN",870,0)
870
"BLD",899,"KRN",8989.51,0)
8989.51
"BLD",899,"KRN",8989.52,0)
8989.52
"BLD",899,"KRN",8994,0)
8994
"BLD",899,"KRN","B",.4,.4)

"BLD",899,"KRN","B",.401,.401)

"BLD",899,"KRN","B",.402,.402)

"BLD",899,"KRN","B",.403,.403)

"BLD",899,"KRN","B",.5,.5)

"BLD",899,"KRN","B",.84,.84)

"BLD",899,"KRN","B",3.6,3.6)

"BLD",899,"KRN","B",3.8,3.8)

"BLD",899,"KRN","B",9.2,9.2)

"BLD",899,"KRN","B",9.8,9.8)

"BLD",899,"KRN","B",19,19)

"BLD",899,"KRN","B",19.1,19.1)

"BLD",899,"KRN","B",101,101)

"BLD",899,"KRN","B",409.61,409.61)

"BLD",899,"KRN","B",771,771)

"BLD",899,"KRN","B",870,870)

"BLD",899,"KRN","B",8989.51,8989.51)

"BLD",899,"KRN","B",8989.52,8989.52)

"BLD",899,"KRN","B",8994,8994)

"BLD",899,"QUES",0)
^9.62^^
"BLD",899,"REQB",0)
^9.611^1^1
"BLD",899,"REQB",1,0)
OR*3.0*209^2
"BLD",899,"REQB","B","OR*3.0*209",1)

"MBREQ")
0
"PKG",2990346,-1)
1^1
"PKG",2990346,0)
ORDER ENTRY/RESULTS REPORTING^OR
"PKG",2990346,22,0)
^9.49I^1^1
"PKG",2990346,22,1,0)
3.0
"PKG",2990346,22,1,"PAH",1,0)
214^3040116^100
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","ORWCV")
0^1^B69208042
"RTN","ORWCV",1,0)
ORWCV ; SLC/KCM - Background Cover Sheet Load;1/5/2001 [10/9/03 1:59pm]
"RTN","ORWCV",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,132,209,214**;Dec 17, 1997
"RTN","ORWCV",3,0)
 ;
"RTN","ORWCV",4,0)
START(VAL,DFN,IP,HWND,LOC,NODO,NEWREM)  ; start cover sheet build in background
"RTN","ORWCV",5,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,SECT,BACK,X,I,LIST,STR,FILE,NODE,ORHTIME
"RTN","ORWCV",6,0)
 ; Capacity planning timing code uses ORHTIME
"RTN","ORWCV",7,0)
 S ORHTIME=$H
"RTN","ORWCV",8,0)
 S LOC=$G(LOC),NODO=";"_$G(NODO),NEWREM=+$G(NEWREM)
"RTN","ORWCV",9,0)
 D GETLST^XPAR(.X,"SYS^PKG","ORWOR COVER RETRIEVAL NEW","Q")
"RTN","ORWCV",10,0)
 S I=0 F  S I=$O(X(I)) Q:'I  I $D(^ORD(101.24,+X(I),0)) S SECT(+$P(^(0),"^",2))=$P(X(I),"^",2)
"RTN","ORWCV",11,0)
 D GETLST^XPAR(.LIST,"ALL","ORWCV1 COVERSHEET LIST")
"RTN","ORWCV",12,0)
 S (VAL,BACK,STR,FILE)=""
"RTN","ORWCV",13,0)
 F  S I=$O(LIST(I)) Q:'I  I $D(^ORD(101.24,$P(LIST(I),"^",2),0))  S X0=^(0) D
"RTN","ORWCV",14,0)
 . Q:$P(X0,"^",8)'="C"
"RTN","ORWCV",15,0)
 . S X=$P(X0,"^",2)
"RTN","ORWCV",16,0)
 . I NODO[(";"_X_";") Q                                  ; if in NODO, dont do section
"RTN","ORWCV",17,0)
 . S STR=STR_X_";"
"RTN","ORWCV",18,0)
 . I '$G(SECT(X)) S VAL=VAL_X_";"                        ; load section in foreground
"RTN","ORWCV",19,0)
 . E  S BACK=BACK_X_";",FILE=FILE_$P(LIST(I),"^",2)_";"  ; load section in background
"RTN","ORWCV",20,0)
 Q:BACK=""
"RTN","ORWCV",21,0)
 S ZTIO="ORW THREAD RESOURCE",ZTRTN="BUILD^ORWCV",ZTDTH=$H
"RTN","ORWCV",22,0)
 S (ZTSAVE("DFN"),ZTSAVE("IP"),ZTSAVE("HWND"),ZTSAVE("NEWREM"),ZTSAVE("LOC"),ZTSAVE("BACK"),ZTSAVE("FILE"))=""
"RTN","ORWCV",23,0)
 S ZTDESC="CPRS GUI Background Data Retrieval"
"RTN","ORWCV",24,0)
 D ^%ZTLOAD I '$D(ZTSK) S VAL=STR Q
"RTN","ORWCV",25,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN
"RTN","ORWCV",26,0)
 K ^XTMP(NODE)
"RTN","ORWCV",27,0)
 S ^XTMP(NODE,0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"Background CPRS "_ZTSK
"RTN","ORWCV",28,0)
 ; Start capacity planning timing clock - will be stopped in POLL code
"RTN","ORWCV",29,0)
 I +$G(^KMPTMP("KMPD-CPRS")) S ^KMPTMP("KMPDT","ORWCV",NODE)=$G(ORHTIME)_"^^"_$G(DUZ)_"^"_$G(IO("CLNM"))
"RTN","ORWCV",30,0)
 Q
"RTN","ORWCV",31,0)
BUILD ; called in background by task manager, expects DFN, JobID
"RTN","ORWCV",32,0)
 N NODE,IFLE,ORFNUM,ID,ENT,RTN,INODE,PARAM1,PARAM2,DETAIL,X0,X2
"RTN","ORWCV",33,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN
"RTN","ORWCV",34,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWCV",35,0)
 I $G(^XTMP(NODE,"STOP")) K ^XTMP(NODE) Q  ; client no longer polling
"RTN","ORWCV",36,0)
 I '$D(^XTMP(NODE,0)) Q                    ; XTMP node has been purged
"RTN","ORWCV",37,0)
 L +^XTMP(NODE)
"RTN","ORWCV",38,0)
 S ^XTMP(NODE,"DFN")=DFN
"RTN","ORWCV",39,0)
 ;N $ETRAP,$ESTACK
"RTN","ORWCV",40,0)
 ;S $ETRAP="D ERR^ORWCV Q"
"RTN","ORWCV",41,0)
 I $L($G(FILE),";")>0 F IFLE=1:1:$L(FILE,";") S ORFNUM=$P(FILE,";",IFLE)  Q:'$D(^ORD(101.24,+ORFNUM,0))  S X0=^(0),X2=$G(^(2)) D
"RTN","ORWCV",42,0)
 . S ID=$P(X0,"^",2),ENT=$P(X0,"^",6),RTN=$P(X0,"^",5),PARAM1=$P(X2,"^"),PARAM2=$P(X2,"^",2),INODE=$P(X2,"^",5),DETAIL=""
"RTN","ORWCV",43,0)
 . I $P(X0,"^",18) S DETAIL=$P($G(^ORD(101.24,+$P(X0,"^",18),0)),"^",13),DETAIL=$P($G(^XWB(8994,+DETAIL,0)),"^")
"RTN","ORWCV",44,0)
 . I '$L(INODE) Q
"RTN","ORWCV",45,0)
 . I '$L(ENT) S LST(IFLE)="0^ERROR: Missing ENTRY POINT field in file 101.24 for "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",46,0)
 . I '$L(RTN) S LST(IFLE)="0^ERROR: Missing ROUTINE field in file 101.24 for "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",47,0)
 . I '$L($T(@(ENT_"^"_RTN))) S LST(IFLE)="0^ERROR: "_ENT_"~"_RTN_" does not exist. See file 101.24 entry: "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",48,0)
 . I ID=50 D:$L($T(STRT3^AWCMCPR1)) STRT3^AWCMCPR1 D  D:$L($T(END^AWCMCPR1)) END^AWCMCPR1 Q  ;Special case for reminders
"RTN","ORWCV",49,0)
 .. I $G(NEWREM) D APPL^ORQQPXRM(.LST,DFN,LOC) I 1
"RTN","ORWCV",50,0)
 .. E  D @(ENT_"^"_RTN_"(.LST,DFN)")
"RTN","ORWCV",51,0)
 .. D LST2XTMP(INODE)
"RTN","ORWCV",52,0)
 . I $L(PARAM1),$L(PARAM2) D @(ENT_"^"_RTN_"(.LST,DFN,PARAM1,PARAM2)"),LST2XTMP(INODE) Q
"RTN","ORWCV",53,0)
 . I $L(PARAM1) D @(ENT_"^"_RTN_"(.LST,DFN,PARAM1)"),LST2XTMP(INODE) Q
"RTN","ORWCV",54,0)
 . D @(ENT_"^"_RTN_"(.LST,DFN)"),LST2XTMP(INODE)
"RTN","ORWCV",55,0)
 S ^XTMP(NODE,"DONE")=1
"RTN","ORWCV",56,0)
 I $G(^XTMP(NODE,"STOP")) K ^XTMP(NODE)
"RTN","ORWCV",57,0)
 L -^XTMP(NODE)
"RTN","ORWCV",58,0)
 Q
"RTN","ORWCV",59,0)
ERR ;Error trap
"RTN","ORWCV",60,0)
 S $ETRAP="D UNWIND^ORWCV Q"
"RTN","ORWCV",61,0)
 I $D(NODE) D
"RTN","ORWCV",62,0)
 . I $D(INODE) S LST(0)="",LST(1)="0^ERROR DURING COVER SHEET BUILD:"_$ZERROR D LST2XTMP(INODE)
"RTN","ORWCV",63,0)
 . S ^XTMP(NODE,"DONE")=1
"RTN","ORWCV",64,0)
 . L -^XTMP(NODE)
"RTN","ORWCV",65,0)
 D @^%ZOSF("ERRTN") ;file error
"RTN","ORWCV",66,0)
 S $ECODE=",UOR70 error during Cover Sheet build,"
"RTN","ORWCV",67,0)
 Q
"RTN","ORWCV",68,0)
UNWIND ;Unwind Error stack
"RTN","ORWCV",69,0)
 Q:$ESTACK>1  ;pop the stack
"RTN","ORWCV",70,0)
 ;add additional code here, if needed
"RTN","ORWCV",71,0)
 Q
"RTN","ORWCV",72,0)
LST2XTMP(ID)     ; put the list in ^XTMP(NODE,ID)
"RTN","ORWCV",73,0)
 I $G(^XTMP(NODE,"STOP")) Q
"RTN","ORWCV",74,0)
 N I
"RTN","ORWCV",75,0)
 I $L($G(DETAIL)) S I=0 F  S I=$O(LST(I)) Q:'I  S $P(LST(I),"^",12)=DETAIL
"RTN","ORWCV",76,0)
 K ^XTMP(NODE,ID) M ^XTMP(NODE,ID)=LST S ^XTMP(NODE,ID)=1 K LST
"RTN","ORWCV",77,0)
 Q
"RTN","ORWCV",78,0)
POLL(LST,DFN,IP,HWND)       ; poll for completed cover sheet parts
"RTN","ORWCV",79,0)
 N I,ILST,ID,NODE,DONE
"RTN","ORWCV",80,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN,ILST=0,DONE=0
"RTN","ORWCV",81,0)
 I '$D(^XTMP(NODE,"DFN")) Q
"RTN","ORWCV",82,0)
 I ^XTMP(NODE,"DFN")'=DFN S LST(1)="~DONE=1" Q
"RTN","ORWCV",83,0)
 I $G(^XTMP(NODE,"DONE")) S ILST=ILST+1,LST(ILST)="~DONE=1",DONE=1
"RTN","ORWCV",84,0)
 F ID="PROB","CWAD","MEDS","RMND","LABS","VITL","VSIT" D
"RTN","ORWCV",85,0)
 . I '$G(^XTMP(NODE,ID)) Q
"RTN","ORWCV",86,0)
 . S ILST=ILST+1,LST(ILST)="~"_ID
"RTN","ORWCV",87,0)
 . S I=0 F  S I=$O(^XTMP(NODE,ID,I)) Q:'I  S ILST=ILST+1,LST(ILST)="i"_^(I)
"RTN","ORWCV",88,0)
 . K ^XTMP(NODE,ID)
"RTN","ORWCV",89,0)
 ; Stop capacity planning timing clock - was started in START code
"RTN","ORWCV",90,0)
 I DONE K ^XTMP(NODE) I +$G(^KMPTMP("KMPD-CPRS")) S $P(^KMPTMP("KMPDT","ORWCV",NODE),"^",2)=$H
"RTN","ORWCV",91,0)
 Q
"RTN","ORWCV",92,0)
STOP(OK,DFN,IP,HWND)    ; stop cover sheet data retrieval
"RTN","ORWCV",93,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN,ILST=0,DONE=0
"RTN","ORWCV",94,0)
 S ^XTMP(NODE,"STOP")=1,OK=1
"RTN","ORWCV",95,0)
 L +^XTMP(NODE)
"RTN","ORWCV",96,0)
 I $G(^XTMP(NODE,"DONE")) K ^XTMP(NODE)
"RTN","ORWCV",97,0)
 L -^XTMP(NODE)
"RTN","ORWCV",98,0)
 Q
"RTN","ORWCV",99,0)
CLEAN ; clean up ^XTMP nodes
"RTN","ORWCV",100,0)
 S X="ORWCV"
"RTN","ORWCV",101,0)
 F  S X=$O(^XTMP(X)) Q:$E(X,1,5)'="ORWCV"  W !,X K ^XTMP(X)
"RTN","ORWCV",102,0)
 Q
"RTN","ORWCV",103,0)
LAB(LST,DFN)    ; return labs for patient
"RTN","ORWCV",104,0)
 D:$L($T(STRT2^AWCMCPR1)) STRT2^AWCMCPR1
"RTN","ORWCV",105,0)
 D LIST^ORQOR1(.LST,DFN,"LAB",4,"T-"_$$RNGLAB(DFN),"T","AW",1)
"RTN","ORWCV",106,0)
 D:$L($T(END^AWCMCPR1)) END^AWCMCPR1
"RTN","ORWCV",107,0)
 Q
"RTN","ORWCV",108,0)
VST(ORVISIT,DFN,BEG,END,SKIP)    ; return appts/admissions for patient
"RTN","ORWCV",109,0)
 N VAERR,VASD,BDT,COUNT,DTM,EDT,LOC,NOW,ORQUERY,ORLST,STI,STS,TODAY,I,J,K,XI,XE,X
"RTN","ORWCV",110,0)
 S NOW=$$NOW^XLFDT(),TODAY=$P(NOW,".",1)
"RTN","ORWCV",111,0)
 I '$G(BEG) S BEG=$$X2FM($$RNGVBEG)
"RTN","ORWCV",112,0)
 I '$G(END) S END=$$X2FM($$RNGVEND)+0.2359
"RTN","ORWCV",113,0)
 S COUNT=0
"RTN","ORWCV",114,0)
 K ^TMP("ORVSTLIST",$J)
"RTN","ORWCV",115,0)
 I END>NOW D   ; get future encounters, past cancels/no-shows from VADPT
"RTN","ORWCV",116,0)
 . S VASD("F")=BEG
"RTN","ORWCV",117,0)
 . S VASD("T")=END
"RTN","ORWCV",118,0)
 . S VASD("W")="123456789"
"RTN","ORWCV",119,0)
 . D SDA^VADPT
"RTN","ORWCV",120,0)
 . S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWCV",121,0)
 . . S XI=^UTILITY("VASD",$J,I,"I"),XE=^("E")
"RTN","ORWCV",122,0)
 . . S DTM=$P(XI,U),IEN=$P(XI,U,2),STI=$P(XI,U,3)
"RTN","ORWCV",123,0)
 . . S LOC=$P(XE,U,2),STS=$P(XE,U,3)
"RTN","ORWCV",124,0)
 . . I DTM<TODAY,(STI=""!(STI["I")!(STI="NT")) Q  ; no prior kept appts
"RTN","ORWCV",125,0)
 . . S ^TMP("ORVSTLIST",$J,DTM,"A",1)="A;"_DTM_";"_IEN_U_DTM_U_LOC_U_STS
"RTN","ORWCV",126,0)
 . K ^UTILITY("VASD",$J)
"RTN","ORWCV",127,0)
 I BEG'>NOW D  ;past encounters from ACRP Toolkit - set in CALLBACK
"RTN","ORWCV",128,0)
 . S BDT=BEG
"RTN","ORWCV",129,0)
 . S EDT=$S(END<NOW:END,1:NOW)
"RTN","ORWCV",130,0)
 . D OPEN^SDQ(.ORQUERY)
"RTN","ORWCV",131,0)
 . I '$$ERRCHK^SDQUT() D INDEX^SDQ(.ORQUERY,"PATIENT/DATE","SET")
"RTN","ORWCV",132,0)
 . I '$$ERRCHK^SDQUT() D PAT^SDQ(.ORQUERY,DFN,"SET")
"RTN","ORWCV",133,0)
 . I '$$ERRCHK^SDQUT() D DATE^SDQ(.ORQUERY,BDT,EDT,"SET")
"RTN","ORWCV",134,0)
 . I '$$ERRCHK^SDQUT() D
"RTN","ORWCV",135,0)
 . . S ORLST=$NA(^TMP("ORVSTLIST",$J))
"RTN","ORWCV",136,0)
 . . D SCANCB^SDQ(.ORQUERY,"D CALLBACK^ORWCV(Y,Y0,.ORLST,.ORSTOP)","SET")
"RTN","ORWCV",137,0)
 . I '$$ERRCHK^SDQUT() D ACTIVE^SDQ(.ORQUERY,"TRUE","SET")
"RTN","ORWCV",138,0)
 . I '$$ERRCHK^SDQUT() D SCAN^SDQ(.ORQUERY,"FORWARD")
"RTN","ORWCV",139,0)
 . D CLOSE^SDQ(.ORQUERY)
"RTN","ORWCV",140,0)
 ;
"RTN","ORWCV",141,0)
 I '$G(SKIP) D
"RTN","ORWCV",142,0)
 . N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,EARLY,DONE                ; admits
"RTN","ORWCV",143,0)
 . S EARLY=$$X2FM($$RNGVBEG),DONE=0
"RTN","ORWCV",144,0)
 . S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D  Q:DONE
"RTN","ORWCV",145,0)
 . . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D  Q:DONE
"RTN","ORWCV",146,0)
 . . . S X0=^DGPM(MOV,0),MTIM=$P(X0,U)
"RTN","ORWCV",147,0)
 . . . I MTIM<EARLY S DONE=1 Q
"RTN","ORWCV",148,0)
 . . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWCV",149,0)
 . . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWCV",150,0)
 . . . S ^TMP("ORVSTLIST",$J,MTIM,"I",1)="I;"_MTIM_";"_HLOC_U_MTIM_U_"Inpatient Stay"_U_XLOC_U_XTYP
"RTN","ORWCV",151,0)
 ;
"RTN","ORWCV",152,0)
 S COUNT=0
"RTN","ORWCV",153,0)
 S I=0 F  S I=$O(^TMP("ORVSTLIST",$J,I)) Q:'I  D
"RTN","ORWCV",154,0)
 . S J="" F  S J=$O(^TMP("ORVSTLIST",$J,I,J)) Q:J=""  D
"RTN","ORWCV",155,0)
 . . S K=0 F  S K=$O(^TMP("ORVSTLIST",$J,I,J,K)) Q:'K  D
"RTN","ORWCV",156,0)
 . . . S COUNT=COUNT+1
"RTN","ORWCV",157,0)
 . . . S ORVISIT(COUNT)=^TMP("ORVSTLIST",$J,I,J,K)
"RTN","ORWCV",158,0)
 K ^TMP("ORVSTLIST",$J)
"RTN","ORWCV",159,0)
 Q
"RTN","ORWCV",160,0)
CALLBACK(IEN,NODE0,ARRAY,STOP) ; called back from ACRP Toolkit for encounters
"RTN","ORWCV",161,0)
 ;
"RTN","ORWCV",162,0)
 ; IEN and NODE0 relate to Outpatient Encounter File
"RTN","ORWCV",163,0)
 ; set STOP to 1 if need to quit
"RTN","ORWCV",164,0)
 ;
"RTN","ORWCV",165,0)
 N COUNT,DTM,LOC,OOS,TYPE,XSTAT,XLOC
"RTN","ORWCV",166,0)
 S DTM=+NODE0,COUNT=1
"RTN","ORWCV",167,0)
 S LOC=$P(NODE0,"^",4)
"RTN","ORWCV",168,0)
 S XLOC=$P($G(^SC(+LOC,0)),U),OOS=$G(^("OOS"))
"RTN","ORWCV",169,0)
 I OOS Q              ; ignore OOS locations
"RTN","ORWCV",170,0)
 I $P(NODE0,"^",6) Q  ; not parent encounter
"RTN","ORWCV",171,0)
 S XSTAT=$P($G(^SD(409.63,+$P(NODE0,"^",12),0)),"^")
"RTN","ORWCV",172,0)
 S TYPE=$S($P(NODE0,"^",8)=1:"A",1:"V")
"RTN","ORWCV",173,0)
 I TYPE="V",$D(@ARRAY@(DTM,"V")) S COUNT=$O(@ARRAY@(DTM,"V","A"),-1)+1 ; same d/t
"RTN","ORWCV",174,0)
 S @ARRAY@(DTM,TYPE,COUNT)=TYPE_";"_DTM_";"_LOC_U_DTM_U_XLOC_U_XSTAT
"RTN","ORWCV",175,0)
 Q
"RTN","ORWCV",176,0)
DTLVST(RPT,DFN,IEN,X)   ; return progress notes / discharge summary
"RTN","ORWCV",177,0)
 N VISIT
"RTN","ORWCV",178,0)
 I $P(X,";")="A" D
"RTN","ORWCV",179,0)
 . S VISIT=$$APPT2VST^PXAPI(DFN,$P(X,";",2),$P(X,";",3))
"RTN","ORWCV",180,0)
 . I VISIT=0 S VISIT=+$$GETENC^PXAPI(DFN,$P(X,";",2),$P(X,";",3))
"RTN","ORWCV",181,0)
 . D DETNOTE^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",182,0)
 I $P(X,";")="V" D
"RTN","ORWCV",183,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,$P(X,";",2),$P(X,";",3))
"RTN","ORWCV",184,0)
 . D DETNOTE^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",185,0)
 I $P(X,";")="I" D
"RTN","ORWCV",186,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,$P(X,";",2),$P(X,";",3))
"RTN","ORWCV",187,0)
 . D DETSUM^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",188,0)
 . K ^TMP("PXKENC",$J)
"RTN","ORWCV",189,0)
 Q
"RTN","ORWCV",190,0)
X2FM(X)       ; return FM date given relative date
"RTN","ORWCV",191,0)
 N %DT S %DT="TS" D ^%DT
"RTN","ORWCV",192,0)
 Q Y
"RTN","ORWCV",193,0)
RNGLAB(DFN)     ; return days back for patient
"RTN","ORWCV",194,0)
 N INPT,PAR
"RTN","ORWCV",195,0)
 S INPT=0 I $L($G(^DPT(DFN,.1))) S INPT=1
"RTN","ORWCV",196,0)
 S PAR="ORQQLR DATE RANGE "_$S(INPT:"INPT",1:"OUTPT")
"RTN","ORWCV",197,0)
 Q $$GET^XPAR("ALL",PAR,1,"I")
"RTN","ORWCV",198,0)
 ;
"RTN","ORWCV",199,0)
RNGVBEG()       ; return start date for encounters
"RTN","ORWCV",200,0)
 Q $$GET^XPAR("ALL","ORQQVS SEARCH RANGE START",1,"I")
"RTN","ORWCV",201,0)
 ;
"RTN","ORWCV",202,0)
RNGVEND()       ; return stop date for encounters
"RTN","ORWCV",203,0)
 Q $$GET^XPAR("ALL","ORQQAP SEARCH RANGE STOP",1,"I")
"RTN","ORWCV",204,0)
 ;
"RTN","ORWCV",205,0)
RANGES(REC,DFN) ; return ranges given a patient
"RTN","ORWCV",206,0)
 N REC
"RTN","ORWCV",207,0)
 S REC=$$RNGLAB(DFN)_U_$$RNGVBEG_U_$$RNGVEND
"RTN","ORWCV",208,0)
 Q
"VER")
8.0T20^22.0
**INSTALL NAME**
TIU*1.0*181
"BLD",898,0)
TIU*1.0*181^TEXT INTEGRATION UTILITIES^0^3040116^y
"BLD",898,1,0)
^^2^2^3040106^^^^
"BLD",898,1,1,0)
The description of this patch may be found in the National Patch Module 
"BLD",898,1,2,0)
under TIU*1*181.
"BLD",898,4,0)
^9.64PA^^
"BLD",898,"ABPKG")
n
"BLD",898,"KRN",0)
^9.67PA^8989.52^19
"BLD",898,"KRN",.4,0)
.4
"BLD",898,"KRN",.401,0)
.401
"BLD",898,"KRN",.402,0)
.402
"BLD",898,"KRN",.403,0)
.403
"BLD",898,"KRN",.5,0)
.5
"BLD",898,"KRN",.84,0)
.84
"BLD",898,"KRN",3.6,0)
3.6
"BLD",898,"KRN",3.8,0)
3.8
"BLD",898,"KRN",9.2,0)
9.2
"BLD",898,"KRN",9.8,0)
9.8
"BLD",898,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",898,"KRN",9.8,"NM",1,0)
TIUSRVLO^^0^B65414830
"BLD",898,"KRN",9.8,"NM","B","TIUSRVLO",1)

"BLD",898,"KRN",19,0)
19
"BLD",898,"KRN",19.1,0)
19.1
"BLD",898,"KRN",101,0)
101
"BLD",898,"KRN",409.61,0)
409.61
"BLD",898,"KRN",771,0)
771
"BLD",898,"KRN",870,0)
870
"BLD",898,"KRN",8989.51,0)
8989.51
"BLD",898,"KRN",8989.52,0)
8989.52
"BLD",898,"KRN",8994,0)
8994
"BLD",898,"KRN","B",.4,.4)

"BLD",898,"KRN","B",.401,.401)

"BLD",898,"KRN","B",.402,.402)

"BLD",898,"KRN","B",.403,.403)

"BLD",898,"KRN","B",.5,.5)

"BLD",898,"KRN","B",.84,.84)

"BLD",898,"KRN","B",3.6,3.6)

"BLD",898,"KRN","B",3.8,3.8)

"BLD",898,"KRN","B",9.2,9.2)

"BLD",898,"KRN","B",9.8,9.8)

"BLD",898,"KRN","B",19,19)

"BLD",898,"KRN","B",19.1,19.1)

"BLD",898,"KRN","B",101,101)

"BLD",898,"KRN","B",409.61,409.61)

"BLD",898,"KRN","B",771,771)

"BLD",898,"KRN","B",870,870)

"BLD",898,"KRN","B",8989.51,8989.51)

"BLD",898,"KRN","B",8989.52,8989.52)

"BLD",898,"KRN","B",8994,8994)

"BLD",898,"QUES",0)
^9.62^^
"BLD",898,"REQB",0)
^9.611^4^1
"BLD",898,"REQB",4,0)
TEXT INTEGRATION UTILITIES 1.0^2
"BLD",898,"REQB","B","TEXT INTEGRATION UTILITIES 1.0",4)

"MBREQ")
0
"PKG",2990364,-1)
1^1
"PKG",2990364,0)
TEXT INTEGRATION UTILITIES^TIU
"PKG",2990364,22,0)
^9.49I^1^1
"PKG",2990364,22,1,0)
1.0
"PKG",2990364,22,1,"PAH",1,0)
181^3040116^100
"PKG",2990364,22,1,"PAH",1,1,0)
^^2^2^3040116
"PKG",2990364,22,1,"PAH",1,1,1,0)
The description of this patch may be found in the National Patch Module 
"PKG",2990364,22,1,"PAH",1,1,2,0)
under TIU*1*181.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","TIUSRVLO")
0^1^B65414830
"RTN","TIUSRVLO",1,0)
TIUSRVLO ; SLC/JER - Server fns - lists for CPRS ;20-NOV-2001 08:51:07
"RTN","TIUSRVLO",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**1,15,19,63,108,122,181**;Jun 20, 1997
"RTN","TIUSRVLO",3,0)
NOTES(TIUY,DFN,EARLY,LATE,PERSON,SEQUENCE) ; Get notes
"RTN","TIUSRVLO",4,0)
 N TIUPREF,TIUOCC S TIUPREF=$$PERSPRF^TIULE(DUZ)
"RTN","TIUSRVLO",5,0)
 S TIUOCC=$P(TIUPREF,U,10),PERSON=$S(+$G(PERSON):+$G(PERSON),1:+$G(DUZ))
"RTN","TIUSRVLO",6,0)
 S SEQUENCE=$S($G(SEQUENCE)]"":$G(SEQUENCE),1:"D")
"RTN","TIUSRVLO",7,0)
 D CONTEXT(.TIUY,3,1,DFN,$G(EARLY),$G(LATE),PERSON,TIUOCC,SEQUENCE)
"RTN","TIUSRVLO",8,0)
 Q
"RTN","TIUSRVLO",9,0)
SUMMARY(TIUY,DFN,EARLY,LATE) ; Get Summaries
"RTN","TIUSRVLO",10,0)
 N TIUPREF,TIUOCC S TIUPREF=$$PERSPRF^TIULE(DUZ)
"RTN","TIUSRVLO",11,0)
 S TIUOCC=$P(TIUPREF,U,10),PERSON=$S(+$G(PERSON):+$G(PERSON),1:+$G(DUZ))
"RTN","TIUSRVLO",12,0)
 S SEQUENCE=$S($G(SEQUENCE)]"":$G(SEQUENCE),1:"D")
"RTN","TIUSRVLO",13,0)
 D CONTEXT(.TIUY,244,1,DFN,$G(EARLY),$G(LATE),PERSON,TIUOCC,SEQUENCE)
"RTN","TIUSRVLO",14,0)
 Q
"RTN","TIUSRVLO",15,0)
CONTEXT(TIUY,CLASS,CONTEXT,DFN,EARLY,LATE,PERSON,OCCLIM,SEQUENCE,SHOWADD,INCUND) ; main
"RTN","TIUSRVLO",16,0)
 ; --- Call with:  TIUY     - RETURN ARRAY pass by reference
"RTN","TIUSRVLO",17,0)
 ;                 CLASS    - Pointer to TIU DOCUMENT DEFINITION #8925.1
"RTN","TIUSRVLO",18,0)
 ;                 CONTEXT  - 1=All Signed (by PT),
"RTN","TIUSRVLO",19,0)
 ;                          - 2="Unsigned (by PT&(AUTHOR!TANSCRIBER))
"RTN","TIUSRVLO",20,0)
 ;                          - 3="Uncosigned (by PT&EXPECTED COSIGNER
"RTN","TIUSRVLO",21,0)
 ;                          - 4="Signed notes (by PT&selected author)
"RTN","TIUSRVLO",22,0)
 ;                          - 5="Signed notes (by PT&date range)
"RTN","TIUSRVLO",23,0)
 ;                 DFN      - Pointer to Patient (#2)
"RTN","TIUSRVLO",24,0)
 ;                [EARLY]   - FM date/time to begin search
"RTN","TIUSRVLO",25,0)
 ;                [LATE]    - FM date/time to end search
"RTN","TIUSRVLO",26,0)
 ;                [PERSON]  - Pointer to file 200 (DUZ if not passed)
"RTN","TIUSRVLO",27,0)
 ;                [OCCLIM]  - Occurrence Limit (optional)
"RTN","TIUSRVLO",28,0)
 ;                [SEQUENCE]- "A"=ascending (Regular date/time)
"RTN","TIUSRVLO",29,0)
 ;                          - "D"=descending (Reverse date/time) (dflt)
"RTN","TIUSRVLO",30,0)
 ;                [INCUND]  - Boolean: include undictated & untranscribed
"RTN","TIUSRVLO",31,0)
 S TIUY=$NA(^TMP("TIUR",$J))
"RTN","TIUSRVLO",32,0)
 K @TIUY
"RTN","TIUSRVLO",33,0)
 I $G(CONTEXT)'>0 Q
"RTN","TIUSRVLO",34,0)
 I $G(CLASS)'>0 Q
"RTN","TIUSRVLO",35,0)
 I $G(CONTEXT)=1 D STRT1^AWCMCPR1 ; TIU*1.0*181
"RTN","TIUSRVLO",36,0)
 S:+$G(EARLY)'>0!(+$G(CONTEXT)=1) EARLY=0
"RTN","TIUSRVLO",37,0)
 S:+$G(LATE)'>0!(+$G(CONTEXT)=1) LATE=5000000
"RTN","TIUSRVLO",38,0)
 I EARLY>LATE D SWAP(.EARLY,.LATE)
"RTN","TIUSRVLO",39,0)
 I $L(LATE,".")=1 D EXPRANGE(.EARLY,.LATE)
"RTN","TIUSRVLO",40,0)
 S:+$G(PERSON)'>0 PERSON=DUZ
"RTN","TIUSRVLO",41,0)
 S:$G(SEQUENCE)']"" SEQUENCE="D"
"RTN","TIUSRVLO",42,0)
 S:+$G(OCCLIM)'>0 OCCLIM=9999999
"RTN","TIUSRVLO",43,0)
 S DFN=+$G(DFN)
"RTN","TIUSRVLO",44,0)
 S EARLY=9999999-EARLY,LATE=9999999-LATE ; CHANGE TO REVERSE DATES
"RTN","TIUSRVLO",45,0)
 ;
"RTN","TIUSRVLO",46,0)
 I CONTEXT=1!(CONTEXT=5) D  G CTXQ
"RTN","TIUSRVLO",47,0)
 . D ACLPT(.TIUY,CLASS,DFN,LATE,EARLY,OCCLIM,SEQUENCE)
"RTN","TIUSRVLO",48,0)
 ;
"RTN","TIUSRVLO",49,0)
 I CONTEXT=2 D  G CTXQ
"RTN","TIUSRVLO",50,0)
 . I DFN>0 D  Q
"RTN","TIUSRVLO",51,0)
 . . D ACLAU(.TIUY,CLASS,PERSON,DFN,LATE,EARLY,SEQUENCE,$G(INCUND))
"RTN","TIUSRVLO",52,0)
 . F  S DFN=$O(^TIU(8925,"ACLAU",CLASS,PERSON,DFN)) Q:DFN'>0  D ACLAU(.TIUY,CLASS,PERSON,DFN,LATE,EARLY,SEQUENCE,$G(INCUND))
"RTN","TIUSRVLO",53,0)
 ;
"RTN","TIUSRVLO",54,0)
 I CONTEXT=3 D  G CTXQ
"RTN","TIUSRVLO",55,0)
 . I DFN>0 D  Q
"RTN","TIUSRVLO",56,0)
 . . D ACLEC(.TIUY,CLASS,PERSON,DFN,LATE,EARLY,SEQUENCE)
"RTN","TIUSRVLO",57,0)
 . F  S DFN=$O(^TIU(8925,"ACLEC",CLASS,PERSON,DFN)) Q:DFN'>0  D ACLEC(.TIUY,CLASS,PERSON,DFN,LATE,EARLY,SEQUENCE)
"RTN","TIUSRVLO",58,0)
 ;
"RTN","TIUSRVLO",59,0)
 I CONTEXT=4 D  G CTXQ
"RTN","TIUSRVLO",60,0)
 . I DFN>0 D  Q
"RTN","TIUSRVLO",61,0)
 . . D ACLSB(.TIUY,CLASS,PERSON,DFN,LATE,EARLY,SEQUENCE)
"RTN","TIUSRVLO",62,0)
 . F  S DFN=$O(^TIU(8925,"ACLSB",CLASS,PERSON,DFN)) Q:DFN'>0  D ACLSB(.TIUY,CLASS,PERSON,DFN,LATE,EARLY,SEQUENCE)
"RTN","TIUSRVLO",63,0)
 ;
"RTN","TIUSRVLO",64,0)
CTXQ K @TIUY@("INDX")
"RTN","TIUSRVLO",65,0)
 I $D(AWCSTRT) D END^AWCMCPR1 ; TIU*1.0*181
"RTN","TIUSRVLO",66,0)
 Q
"RTN","TIUSRVLO",67,0)
 ;
"RTN","TIUSRVLO",68,0)
SWAP(TIUX,TIUY) ; Swap variables
"RTN","TIUSRVLO",69,0)
 N TIUTMP S TIUTMP=TIUX,TIUX=TIUY,TIUY=TIUTMP
"RTN","TIUSRVLO",70,0)
 Q
"RTN","TIUSRVLO",71,0)
 ;
"RTN","TIUSRVLO",72,0)
EXPRANGE(TIUX,TIUY) ; Expand range when same for early & late
"RTN","TIUSRVLO",73,0)
 I TIUX=DT S TIUY=$$NOW^XLFDT I 1
"RTN","TIUSRVLO",74,0)
 E  S TIUY=TIUY_"."_2359
"RTN","TIUSRVLO",75,0)
 Q
"RTN","TIUSRVLO",76,0)
 ;
"RTN","TIUSRVLO",77,0)
ACLPT(TIUY,CLASS,DFN,TIME1,TIME2,OCCLIM,SEQUENCE) ; Signed, by patient
"RTN","TIUSRVLO",78,0)
 N DATTIM,DA,ROOT,TIUI,TIUJ
"RTN","TIUSRVLO",79,0)
 S ROOT=$NA(^TIU(8925,"ACLPT",CLASS,DFN)),TIUJ=0
"RTN","TIUSRVLO",80,0)
 S DATTIM=TIME1-.0000001
"RTN","TIUSRVLO",81,0)
 F  S DATTIM=$O(@ROOT@(DATTIM)) Q:$S(+DATTIM'>0:1,+DATTIM>TIME2:1,+$G(TIUJ)'<OCCLIM:1,1:0)  D
"RTN","TIUSRVLO",82,0)
 . S DA=0 F  S DA=$O(@ROOT@(DATTIM,DA)) Q:DA'>0  D
"RTN","TIUSRVLO",83,0)
 . . ;Added first condition to following line for interdisciplinary notes - need addenda
"RTN","TIUSRVLO",84,0)
 . . I +$G(SHOWADD)=0,(+$G(^TIU(8925,+DA,0))=81) Q
"RTN","TIUSRVLO",85,0)
 . . I +$G(^TIU(8925,+DA,0))'>0 K @ROOT@(DATTIM,DA) Q
"RTN","TIUSRVLO",86,0)
 . . Q:+$D(@TIUY@("INDX",DA))
"RTN","TIUSRVLO",87,0)
 . . ; Selectively filter DELETED or RETRACTED records 
"RTN","TIUSRVLO",88,0)
 . . I +$P($G(^TIU(8925,DA,0)),U,5)>13,'+$$CANDO^TIULP(DA,"VIEW",DUZ) Q
"RTN","TIUSRVLO",89,0)
 . . S TIUI=$S(SEQUENCE="D":+$G(TIUI)+1,1:+$G(TIUI)-1)
"RTN","TIUSRVLO",90,0)
 . . S @TIUY@(TIUI)=DA_U_$$RESOLVE(DA)
"RTN","TIUSRVLO",91,0)
 . . S TIUJ=+$G(TIUJ)+1
"RTN","TIUSRVLO",92,0)
 . . S @TIUY@("INDX",DA,TIUI)=""
"RTN","TIUSRVLO",93,0)
 . . Q:+$G(SHOWADD)=0
"RTN","TIUSRVLO",94,0)
 . . I +$$HASDAD^TIUSRVLI(DA) D SETDAD^TIUSRVLI(.TIUY,DA,.TIUI)
"RTN","TIUSRVLO",95,0)
 . . I +$$HASKIDS^TIUSRVLI(DA) D SETKIDS^TIUSRVLI(.TIUY,DA,.TIUI)
"RTN","TIUSRVLO",96,0)
 Q
"RTN","TIUSRVLO",97,0)
 ;
"RTN","TIUSRVLO",98,0)
ACLAU(TIUY,CLASS,AUTHOR,DFN,TIME1,TIME2,SEQUENCE,INCUND) ; Unsigned
"RTN","TIUSRVLO",99,0)
 N DATTIM,DA,ROOT,TIUI
"RTN","TIUSRVLO",100,0)
 S ROOT=$NA(^TIU(8925,"ACLAU",CLASS,AUTHOR,DFN))
"RTN","TIUSRVLO",101,0)
 S DATTIM=TIME1-.0000001
"RTN","TIUSRVLO",102,0)
 F  S DATTIM=$O(@ROOT@(DATTIM)) Q:DATTIM'>0!(DATTIM>TIME2)  D
"RTN","TIUSRVLO",103,0)
 . S DA=0 F  S DA=$O(@ROOT@(DATTIM,DA)) Q:DA'>0  D
"RTN","TIUSRVLO",104,0)
 . . I +$G(^TIU(8925,+DA,0))'>0 K @ROOT@(DATTIM,DA) Q
"RTN","TIUSRVLO",105,0)
 . . I +$P($G(^TIU(8925,DA,0)),U,5)>6 K @ROOT@(DATTIM,DA) Q
"RTN","TIUSRVLO",106,0)
 . . S TIUI=$S(SEQUENCE="D":+$G(TIUI)+1,1:+$G(TIUI)-1)
"RTN","TIUSRVLO",107,0)
 . . Q:+$D(@TIUY@("INDX",DA))
"RTN","TIUSRVLO",108,0)
 . . ; Selectively filter DELETED or RETRACTED records 
"RTN","TIUSRVLO",109,0)
 . . I +$P($G(^TIU(8925,DA,0)),U,5)>13,'+$$CANDO^TIULP(DA,"VIEW",DUZ) Q
"RTN","TIUSRVLO",110,0)
 . . S @TIUY@(TIUI)=DA_U_$$RESOLVE(DA)
"RTN","TIUSRVLO",111,0)
 . . S @TIUY@("INDX",DA,TIUI)=""
"RTN","TIUSRVLO",112,0)
 . . Q:+$G(SHOWADD)=0
"RTN","TIUSRVLO",113,0)
 . . I +$$HASDAD^TIUSRVLI(DA) D SETDAD^TIUSRVLI(.TIUY,DA,.TIUI)
"RTN","TIUSRVLO",114,0)
 . . I +$$HASKIDS^TIUSRVLI(DA) D SETKIDS^TIUSRVLI(.TIUY,DA,.TIUI)
"RTN","TIUSRVLO",115,0)
 I +$G(INCUND) D GETUND^TIUSRVLI(.TIUY,CLASS,DFN,TIME1,TIME2,.TIUI,SEQUENCE)
"RTN","TIUSRVLO",116,0)
 Q
"RTN","TIUSRVLO",117,0)
 ;
"RTN","TIUSRVLO",118,0)
ACLEC(TIUY,CLASS,EXCOSIGN,DFN,TIME1,TIME2,SEQUENCE) ; Uncosigned
"RTN","TIUSRVLO",119,0)
 N DATTIM,DA,ROOT,TIUI
"RTN","TIUSRVLO",120,0)
 S ROOT=$NA(^TIU(8925,"ACLEC",CLASS,EXCOSIGN,DFN))
"RTN","TIUSRVLO",121,0)
 S DATTIM=TIME1-.0000001
"RTN","TIUSRVLO",122,0)
 F  S DATTIM=$O(@ROOT@(DATTIM)) Q:DATTIM'>0!(DATTIM>TIME2)  D
"RTN","TIUSRVLO",123,0)
 . S DA=0 F  S DA=$O(@ROOT@(DATTIM,DA)) Q:DA'>0  D
"RTN","TIUSRVLO",124,0)
 . . I +$G(^TIU(8925,+DA,0))'>0 K @ROOT@(DATTIM,DA) Q
"RTN","TIUSRVLO",125,0)
 . . S TIUI=$S(SEQUENCE="D":+$G(TIUI)+1,1:+$G(TIUI)-1)
"RTN","TIUSRVLO",126,0)
 . . Q:+$D(@TIUY@("INDX",DA))
"RTN","TIUSRVLO",127,0)
 . . ; Selectively filter DELETED or RETRACTED records 
"RTN","TIUSRVLO",128,0)
 . . I +$P($G(^TIU(8925,DA,0)),U,5)>13,'+$$CANDO^TIULP(DA,"VIEW",DUZ) Q
"RTN","TIUSRVLO",129,0)
 . . S @TIUY@(TIUI)=DA_U_$$RESOLVE(DA)
"RTN","TIUSRVLO",130,0)
 . . S @TIUY@("INDX",DA,TIUI)=""
"RTN","TIUSRVLO",131,0)
 . . Q:+$G(SHOWADD)=0
"RTN","TIUSRVLO",132,0)
 . . I +$$HASDAD^TIUSRVLI(DA) D SETDAD^TIUSRVLI(.TIUY,DA,.TIUI)
"RTN","TIUSRVLO",133,0)
 . . I +$$HASKIDS^TIUSRVLI(DA) D SETKIDS^TIUSRVLI(.TIUY,DA,.TIUI)
"RTN","TIUSRVLO",134,0)
 Q
"RTN","TIUSRVLO",135,0)
 ;
"RTN","TIUSRVLO",136,0)
ACLSB(TIUY,CLASS,SIGNEDBY,DFN,TIME1,TIME2,SEQUENCE) ; Signed, by author
"RTN","TIUSRVLO",137,0)
 N DATTIM,DA,ROOT,TIUI
"RTN","TIUSRVLO",138,0)
 S ROOT=$NA(^TIU(8925,"ACLSB",CLASS,SIGNEDBY,DFN))
"RTN","TIUSRVLO",139,0)
 S DATTIM=TIME1-.0000001
"RTN","TIUSRVLO",140,0)
 F  S DATTIM=$O(@ROOT@(DATTIM)) Q:DATTIM'>0!(DATTIM>TIME2)  D
"RTN","TIUSRVLO",141,0)
 . S DA=0 F  S DA=$O(@ROOT@(DATTIM,DA)) Q:DA'>0  D
"RTN","TIUSRVLO",142,0)
 . . I +$G(^TIU(8925,+DA,0))'>0 K @ROOT@(DATTIM,DA) Q
"RTN","TIUSRVLO",143,0)
 . . S TIUI=$S(SEQUENCE="D":+$G(TIUI)+1,1:+$G(TIUI)-1)
"RTN","TIUSRVLO",144,0)
 . . Q:+$D(@TIUY@("INDX",DA))
"RTN","TIUSRVLO",145,0)
 . . ; Selectively filter DELETED or RETRACTED records 
"RTN","TIUSRVLO",146,0)
 . . I +$P($G(^TIU(8925,DA,0)),U,5)>13,'+$$CANDO^TIULP(DA,"VIEW",DUZ) Q
"RTN","TIUSRVLO",147,0)
 . . S @TIUY@(TIUI)=DA_U_$$RESOLVE(DA)
"RTN","TIUSRVLO",148,0)
 . . S @TIUY@("INDX",DA,TIUI)=""
"RTN","TIUSRVLO",149,0)
 . . Q:+$G(SHOWADD)=0
"RTN","TIUSRVLO",150,0)
 . . I +$$HASDAD^TIUSRVLI(DA) D SETDAD^TIUSRVLI(.TIUY,DA,.TIUI)
"RTN","TIUSRVLO",151,0)
 . . I +$$HASKIDS^TIUSRVLI(DA) D SETKIDS^TIUSRVLI(.TIUY,DA,.TIUI)
"RTN","TIUSRVLO",152,0)
 Q
"RTN","TIUSRVLO",153,0)
 ;
"RTN","TIUSRVLO",154,0)
RESOLVE(DA) ; Resolve to external data
"RTN","TIUSRVLO",155,0)
 N DOC,LOC,PT,AUT,EDT,TIUPT,TIULST4,TIUREC,TIUR0,TIUR12,TIUR13,TIUR14
"RTN","TIUSRVLO",156,0)
 N TIUR17,STATUS,EDTCNT,LOCTYP,TIUADT,TIUDDT,PREFIX,IDPARENT,IDSORT
"RTN","TIUSRVLO",157,0)
 S PREFIX=""
"RTN","TIUSRVLO",158,0)
 S TIUR0=$G(^TIU(8925,+DA,0)),TIUR12=$G(^TIU(8925,+DA,12))
"RTN","TIUSRVLO",159,0)
 S TIUR13=$G(^TIU(8925,+DA,13)),TIUR14=$G(^(14)),TIUR17=$G(^(17))
"RTN","TIUSRVLO",160,0)
 S IDPARENT=+$G(^TIU(8925,+DA,21))
"RTN","TIUSRVLO",161,0)
 S TIUPT=$G(^DPT(+$P(TIUR0,U,2),0))
"RTN","TIUSRVLO",162,0)
 S DOC=$$PNAME^TIULC1(+TIUR0)
"RTN","TIUSRVLO",163,0)
 I DOC="Addendum" S DOC=DOC_" to "_$$PNAME^TIULC1(+$G(^TIU(8925,+$P(TIUR0,U,6),0)))
"RTN","TIUSRVLO",164,0)
 ; If IDNotes (TIU*1.0*100) installed, use $$PREFIX^TIULA2 to evaluate
"RTN","TIUSRVLO",165,0)
 ; which prefix to use:
"RTN","TIUSRVLO",166,0)
 ; - keep prefix display in earlier CPRS versions and LM
"RTN","TIUSRVLO",167,0)
 ; - omit in newer TreeView versions
"RTN","TIUSRVLO",168,0)
 I $L($T(PREFIX^TIULA2)) D  I 1
"RTN","TIUSRVLO",169,0)
 . S PREFIX=$$PREFIX^TIULA2(DA,1)  ; 1=include ID Child indicator
"RTN","TIUSRVLO",170,0)
 . I PREFIX["<" S IDSORT=$$IDSORT(DA)
"RTN","TIUSRVLO",171,0)
 . I +$G(SHOWADD)=0 S DOC=PREFIX_DOC
"RTN","TIUSRVLO",172,0)
 ; otherwise, only show addendum indicator (+)
"RTN","TIUSRVLO",173,0)
 ; - keep prefix display in earlier CPRS versions and LM
"RTN","TIUSRVLO",174,0)
 ; - omit in newer TreeView versions
"RTN","TIUSRVLO",175,0)
 E  D
"RTN","TIUSRVLO",176,0)
 . I +$$HASADDEN^TIULC1(DA) S PREFIX="+ "
"RTN","TIUSRVLO",177,0)
 . I +$G(SHOWADD)=0,(+$$HASADDEN^TIULC1(DA)) S DOC=PREFIX_DOC
"RTN","TIUSRVLO",178,0)
 I +$$URGENCY^TIURM(+DA)=1 S DOC=$S(DOC["+":"*",1:"* ")_DOC
"RTN","TIUSRVLO",179,0)
 S STATUS=$$LOWER^TIULS($P($G(^TIU(8925.6,+$P(TIUR0,U,5),0)),U))
"RTN","TIUSRVLO",180,0)
 S LOC=$G(^SC(+$P(TIUR12,U,5),0)),LOCTYP=$P(LOC,U,3),LOC=$P(LOC,U)
"RTN","TIUSRVLO",181,0)
 S TIUADT=$S(LOCTYP="W":"Adm: ",1:"Visit: ")_$$DATE^TIULS($P(TIUR0,U,7),"MM/DD/YY")
"RTN","TIUSRVLO",182,0)
 S TIUDDT=$S(+$P(TIUR0,U,8):"Dis: ",1:"")_$$DATE^TIULS($P(TIUR0,U,8),"MM/DD/YY")
"RTN","TIUSRVLO",183,0)
 I +$G(SHOWADD)>0 S TIUADT=TIUADT_";"_$P(TIUR0,U,7),TIUDDT=TIUDDT_";"_$P(TIUR0,U,8)
"RTN","TIUSRVLO",184,0)
 S PT=$$NAME^TIULS($P(TIUPT,U),"LAST, FIRST MI")
"RTN","TIUSRVLO",185,0)
 S TIULST4=$E($P(TIUPT,U,9),6,9)
"RTN","TIUSRVLO",186,0)
 S TIULST4="("_$E(PT)_TIULST4_")"
"RTN","TIUSRVLO",187,0)
 S AUT=+$P(TIUR12,U,2)
"RTN","TIUSRVLO",188,0)
 S AUT=AUT_";"_$$SIGNAME^TIULS(+$P(TIUR12,U,2))_";"_$P($G(^VA(200,AUT,0)),U,1)
"RTN","TIUSRVLO",189,0)
 S EDT=+TIUR13,EDTCNT=+$G(EDTCNT)+1
"RTN","TIUSRVLO",190,0)
 S TIUREC=DOC_U_EDT_U_PT_" "_TIULST4_U_AUT_U_LOC_U_STATUS_U_TIUADT_U_TIUDDT_U_$P(TIUR14,U,5)_U_$$IMGCNT(DA)_U
"RTN","TIUSRVLO",191,0)
 S TIUREC=TIUREC_$S($L(TIUR17):$E(TIUR17,1,(255-$L(TIUREC)))_U,1:U)
"RTN","TIUSRVLO",192,0)
 S TIUREC=TIUREC_$P(PREFIX," ")_U
"RTN","TIUSRVLO",193,0)
 S TIUREC=TIUREC_$S(+TIUR0=81:+$P(TIUR0,U,6),+IDPARENT:IDPARENT,+$G(CONTEXT):CONTEXT,1:1)_U_$G(IDSORT)
"RTN","TIUSRVLO",194,0)
 Q $G(TIUREC)
"RTN","TIUSRVLO",195,0)
IMGCNT(TIUDA) ; Get the number of images associated with a document
"RTN","TIUSRVLO",196,0)
 N IMGDA,TIUI S (IMGDA,TIUI)=0
"RTN","TIUSRVLO",197,0)
 F  S IMGDA=$O(^TIU(8925.91,"ADI",TIUDA,IMGDA)) Q:+IMGDA'>0  D
"RTN","TIUSRVLO",198,0)
 . S TIUI=TIUI+1
"RTN","TIUSRVLO",199,0)
 Q TIUI
"RTN","TIUSRVLO",200,0)
IDSORT(TIUDA) ; Get ID Sort indicator when appropriate
"RTN","TIUSRVLO",201,0)
 N TIUDPRM
"RTN","TIUSRVLO",202,0)
 D DOCPRM^TIULC1(+$G(^TIU(8925,+TIUDA,0)),.TIUDPRM)
"RTN","TIUSRVLO",203,0)
 Q +$P(TIUDPRM(0),U,18)
"VER")
8.0T20^22.0
**END**
**END**
