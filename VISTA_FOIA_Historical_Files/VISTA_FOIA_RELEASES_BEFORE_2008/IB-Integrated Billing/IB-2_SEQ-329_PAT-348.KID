Released IB*2*348 SEQ #329
Extracted from mail message
**KIDS**:IB*2.0*348^

**INSTALL NAME**
IB*2.0*348
"BLD",6154,0)
IB*2.0*348^INTEGRATED BILLING^0^3061205^y
"BLD",6154,1,0)
^^1^1^3060922^
"BLD",6154,1,1,0)
New CMS-1500 claim form
"BLD",6154,4,0)
^9.64PA^2^18
"BLD",6154,4,2,0)
2
"BLD",6154,4,2,2,0)
^9.641^2.312^1
"BLD",6154,4,2,2,2.312,0)
INSURANCE TYPE  (sub-file)
"BLD",6154,4,2,2,2.312,1,0)
^9.6411^3.03^3
"BLD",6154,4,2,2,2.312,1,3.01,0)
INSURED'S DOB
"BLD",6154,4,2,2,2.312,1,3.02,0)
INSURED'S BRANCH
"BLD",6154,4,2,2,2.312,1,3.03,0)
INSURED'S RANK
"BLD",6154,4,2,222)
y^y^p^^^^n^^n
"BLD",6154,4,2,224)

"BLD",6154,4,36,0)
36
"BLD",6154,4,36,2,0)
^9.641^36^1
"BLD",6154,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",6154,4,36,2,36,1,0)
^9.6411^.17^8
"BLD",6154,4,36,2,36,1,.01,0)
NAME
"BLD",6154,4,36,2,36,1,.17,0)
PROFESSIONAL PROVIDER NUMBER
"BLD",6154,4,36,2,36,1,3.09,0)
ELECTRONIC INSURANCE TYPE
"BLD",6154,4,36,2,36,1,4.01,0)
PERF PROV SECOND ID TYPE 1500
"BLD",6154,4,36,2,36,1,4.03,0)
SECONDARY ID REQUIREMENTS
"BLD",6154,4,36,2,36,1,4.04,0)
REF PROV SEC ID DEF CMS-1500
"BLD",6154,4,36,2,36,1,4.05,0)
REF PROV SEC ID REQ ON CLAIMS
"BLD",6154,4,36,2,36,1,4.06,0)
ATT/REND ID BILL SEC ID PROF
"BLD",6154,4,36,222)
y^y^p^^^^n^^n
"BLD",6154,4,36,224)

"BLD",6154,4,350.9,0)
350.9
"BLD",6154,4,350.9,2,0)
^9.641^350.9^1
"BLD",6154,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",6154,4,350.9,2,350.9,1,0)
^9.6411^1.33^6
"BLD",6154,4,350.9,2,350.9,1,1.22,0)
MULTIPLE FORM TYPES
"BLD",6154,4,350.9,2,350.9,1,1.27,0)
CMS-1500 ADDRESS COLUMN
"BLD",6154,4,350.9,2,350.9,1,1.32,0)
CMS-1500 PRINT LEGACY ID
"BLD",6154,4,350.9,2,350.9,1,1.33,0)
UB PRINT LEGACY ID
"BLD",6154,4,350.9,2,350.9,1,2.1,0)
FACILITY NAME FOR BILLING
"BLD",6154,4,350.9,2,350.9,1,2.12,0)
BILLING SITE IS OTHER FACILITY
"BLD",6154,4,350.9,222)
y^y^p^^^^n^^n
"BLD",6154,4,350.9,224)

"BLD",6154,4,353.1,0)
353.1
"BLD",6154,4,353.1,2,0)
^9.641^353.1^1
"BLD",6154,4,353.1,2,353.1,0)
PLACE OF SERVICE  (File-top level)
"BLD",6154,4,353.1,2,353.1,1,0)
^9.6411^.01^1
"BLD",6154,4,353.1,2,353.1,1,.01,0)
CODE
"BLD",6154,4,353.1,222)
y^y^p^^^^n^^n
"BLD",6154,4,353.1,224)

"BLD",6154,4,353.2,0)
353.2
"BLD",6154,4,353.2,2,0)
^9.641^353.2^1
"BLD",6154,4,353.2,2,353.2,0)
TYPE OF SERVICE  (File-top level)
"BLD",6154,4,353.2,2,353.2,1,0)
^9.6411^.01^1
"BLD",6154,4,353.2,2,353.2,1,.01,0)
CODE
"BLD",6154,4,353.2,222)
y^y^p^^^^n^^n
"BLD",6154,4,353.2,224)

"BLD",6154,4,355.9,0)
355.9
"BLD",6154,4,355.9,2,0)
^9.641^355.9^1
"BLD",6154,4,355.9,2,355.9,0)
IB BILLING PRACTITIONER ID  (File-top level)
"BLD",6154,4,355.9,2,355.9,1,0)
^9.6411^.04^1
"BLD",6154,4,355.9,2,355.9,1,.04,0)
FORM TYPE APPLIED TO
"BLD",6154,4,355.9,222)
y^y^p^^^^n^^n
"BLD",6154,4,355.9,224)

"BLD",6154,4,355.91,0)
355.91
"BLD",6154,4,355.91,2,0)
^9.641^355.91^1
"BLD",6154,4,355.91,2,355.91,0)
IB INSURANCE CO LEVEL BILLING PROV ID  (File-top level)
"BLD",6154,4,355.91,2,355.91,1,0)
^9.6411^.04^1
"BLD",6154,4,355.91,2,355.91,1,.04,0)
FORM TYPE APPLIED TO
"BLD",6154,4,355.91,222)
y^y^p^^^^n^^n
"BLD",6154,4,355.91,224)

"BLD",6154,4,355.92,0)
355.92
"BLD",6154,4,355.92,2,0)
^9.641^355.92^1
"BLD",6154,4,355.92,2,355.92,0)
FACILITY BILLING ID  (File-top level)
"BLD",6154,4,355.92,2,355.92,1,0)
^9.6411^.04^1
"BLD",6154,4,355.92,2,355.92,1,.04,0)
FORM TYPE APPLIED TO
"BLD",6154,4,355.92,222)
y^y^p^^^^n^^n
"BLD",6154,4,355.92,224)

"BLD",6154,4,355.93,0)
355.93
"BLD",6154,4,355.93,2,0)
^9.641^355.93^1
"BLD",6154,4,355.93,2,355.93,0)
IB NON/OTHER VA BILLING PROVIDER  (File-top level)
"BLD",6154,4,355.93,2,355.93,1,0)
^9.6411^.02^1
"BLD",6154,4,355.93,2,355.93,1,.02,0)
PROVIDER TYPE
"BLD",6154,4,355.93,222)
y^y^p^^^^n^^n
"BLD",6154,4,355.93,224)

"BLD",6154,4,355.96,0)
355.96
"BLD",6154,4,355.96,2,0)
^9.641^355.96^1
"BLD",6154,4,355.96,2,355.96,0)
IB INS CO PROVIDER ID CARE UNIT  (File-top level)
"BLD",6154,4,355.96,2,355.96,1,0)
^9.6411^.04^1
"BLD",6154,4,355.96,2,355.96,1,.04,0)
FORM TYPE APPLIED TO
"BLD",6154,4,355.96,222)
y^y^p^^^^n^^n
"BLD",6154,4,355.96,224)

"BLD",6154,4,355.97,0)
355.97
"BLD",6154,4,355.97,222)
y^y^f^^^^n^^n
"BLD",6154,4,355.97,224)

"BLD",6154,4,364.1,0)
364.1
"BLD",6154,4,364.1,2,0)
^9.641^364.1^1
"BLD",6154,4,364.1,2,364.1,0)
EDI TRANSMISSION BATCH  (File-top level)
"BLD",6154,4,364.1,2,364.1,1,0)
^9.6411^.06^1
"BLD",6154,4,364.1,2,364.1,1,.06,0)
BILL TYPE
"BLD",6154,4,364.1,222)
y^y^p^^^^n^^n
"BLD",6154,4,364.1,224)

"BLD",6154,4,364.4,0)
364.4
"BLD",6154,4,364.4,2,0)
^9.641^364.4^1
"BLD",6154,4,364.4,2,364.4,0)
IB EDI TRANSMISSION RULE  (File-top level)
"BLD",6154,4,364.4,2,364.4,1,0)
^9.6411^.11^2
"BLD",6154,4,364.4,2,364.4,1,.05,0)
FORM TYPE
"BLD",6154,4,364.4,2,364.4,1,.11,0)
TYPE OF RULE
"BLD",6154,4,364.4,222)
y^y^p^^^^n^^n
"BLD",6154,4,364.4,224)

"BLD",6154,4,364.5,0)
364.5
"BLD",6154,4,364.5,222)
n^n^f^^y^^y^o^n
"BLD",6154,4,364.5,224)
I $$INCLUDE^IBY348PR(5,Y)
"BLD",6154,4,364.6,0)
364.6
"BLD",6154,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",6154,4,364.6,224)
I $$INCLUDE^IBY348PR(6,Y)
"BLD",6154,4,364.7,0)
364.7
"BLD",6154,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",6154,4,364.7,224)
I $$INCLUDE^IBY348PR(7,Y)
"BLD",6154,4,399,0)
399
"BLD",6154,4,399,2,0)
^9.641^399.041^4
"BLD",6154,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",6154,4,399,2,399,1,0)
^9.6411^.01^13
"BLD",6154,4,399,2,399,1,.01,0)
BILL NUMBER
"BLD",6154,4,399,2,399,1,.19,0)
FORM TYPE
"BLD",6154,4,399,2,399,1,163,0)
TREATMENT AUTHORIZATION CODE
"BLD",6154,4,399,2,399,1,166,0)
UNABLE TO WORK FROM
"BLD",6154,4,399,2,399,1,167,0)
UNABLE TO WORK TO
"BLD",6154,4,399,2,399,1,230,0)
SECONDARY AUTHORIZATION CODE
"BLD",6154,4,399,2,399,1,231,0)
TERTIARY AUTHORIZATION CODE
"BLD",6154,4,399,2,399,1,236,0)
HOMEBOUND
"BLD",6154,4,399,2,399,1,237,0)
DATE LAST SEEN
"BLD",6154,4,399,2,399,1,238,0)
SPECIAL PROGRAM INDICATOR
"BLD",6154,4,399,2,399,1,400,0)
BLOCK 31
"BLD",6154,4,399,2,399,1,401,0)
PRINT FACILITY DATA IN BOX 32
"BLD",6154,4,399,2,399,1,459,0)
FORM LOC 19-UNSPECIFIED DATA
"BLD",6154,4,399,2,399.0304,0)
PROCEDURES  (sub-file)
"BLD",6154,4,399,2,399.0304,1,0)
^9.6411^50.01^15
"BLD",6154,4,399,2,399.0304,1,8,0)
PLACE OF SERVICE
"BLD",6154,4,399,2,399.0304,1,9,0)
TYPE OF SERVICE
"BLD",6154,4,399,2,399.0304,1,10,0)
ASSOCIATED DIAGNOSIS (1)
"BLD",6154,4,399,2,399.0304,1,11,0)
ASSOCIATED DIAGNOSIS (2)
"BLD",6154,4,399,2,399.0304,1,12,0)
ASSOCIATED DIAGNOSIS (3)
"BLD",6154,4,399,2,399.0304,1,13,0)
ASSOCIATED DIAGNOSIS (4)
"BLD",6154,4,399,2,399.0304,1,50.01,0)
*HCFA BOX 24K (LOCAL USE ONLY)
"BLD",6154,4,399,2,399.0304,1,50.02,0)
LAST XRAY DATE
"BLD",6154,4,399,2,399.0304,1,50.03,0)
ATTENDING NOT HOSPICE EMPLOYEE
"BLD",6154,4,399,2,399.0304,1,50.04,0)
LEVEL OF SUBLUXATION
"BLD",6154,4,399,2,399.0304,1,50.05,0)
CHIRO TREATMENT SERIES NUM
"BLD",6154,4,399,2,399.0304,1,50.06,0)
CHIROPRACTIC QUANTITY
"BLD",6154,4,399,2,399.0304,1,50.07,0)
EPSDT FLAG
"BLD",6154,4,399,2,399.0304,1,50.08,0)
SERVICE LINE COMMENT
"BLD",6154,4,399,2,399.0304,1,50.09,0)
SERVICE LINE COMMENT QUALIFIER
"BLD",6154,4,399,2,399.041,0)
OCCURRENCE CODE  (sub-file)
"BLD",6154,4,399,2,399.041,1,0)
^9.6411^.03^1
"BLD",6154,4,399,2,399.041,1,.03,0)
STATE
"BLD",6154,4,399,2,399.042,0)
REVENUE CODE  (sub-file)
"BLD",6154,4,399,2,399.042,1,0)
^9.6411^.06^2
"BLD",6154,4,399,2,399.042,1,.06,0)
PROCEDURE
"BLD",6154,4,399,2,399.042,1,.15,0)
RX PROCEDURE
"BLD",6154,4,399,222)
y^y^p^^^^n^^n
"BLD",6154,4,399,224)

"BLD",6154,4,399.1,0)
399.1
"BLD",6154,4,399.1,2,0)
^9.641^399.1^1
"BLD",6154,4,399.1,2,399.1,0)
MCCR UTILITY  (File-top level)
"BLD",6154,4,399.1,2,399.1,1,0)
^9.6411^.16^1
"BLD",6154,4,399.1,2,399.1,1,.16,0)
OCC RELATED TO
"BLD",6154,4,399.1,222)
y^y^p^^^^n^^n
"BLD",6154,4,399.1,224)

"BLD",6154,4,"APDD",2,2.312)

"BLD",6154,4,"APDD",2,2.312,3.01)

"BLD",6154,4,"APDD",2,2.312,3.02)

"BLD",6154,4,"APDD",2,2.312,3.03)

"BLD",6154,4,"APDD",36,36)

"BLD",6154,4,"APDD",36,36,.01)

"BLD",6154,4,"APDD",36,36,.17)

"BLD",6154,4,"APDD",36,36,3.09)

"BLD",6154,4,"APDD",36,36,4.01)

"BLD",6154,4,"APDD",36,36,4.03)

"BLD",6154,4,"APDD",36,36,4.04)

"BLD",6154,4,"APDD",36,36,4.05)

"BLD",6154,4,"APDD",36,36,4.06)

"BLD",6154,4,"APDD",350.9,350.9)

"BLD",6154,4,"APDD",350.9,350.9,1.22)

"BLD",6154,4,"APDD",350.9,350.9,1.27)

"BLD",6154,4,"APDD",350.9,350.9,1.32)

"BLD",6154,4,"APDD",350.9,350.9,1.33)

"BLD",6154,4,"APDD",350.9,350.9,2.1)

"BLD",6154,4,"APDD",350.9,350.9,2.12)

"BLD",6154,4,"APDD",353.1,353.1)

"BLD",6154,4,"APDD",353.1,353.1,.01)

"BLD",6154,4,"APDD",353.2,353.2)

"BLD",6154,4,"APDD",353.2,353.2,.01)

"BLD",6154,4,"APDD",355.9,355.9)

"BLD",6154,4,"APDD",355.9,355.9,.04)

"BLD",6154,4,"APDD",355.91,355.91)

"BLD",6154,4,"APDD",355.91,355.91,.04)

"BLD",6154,4,"APDD",355.92,355.92)

"BLD",6154,4,"APDD",355.92,355.92,.04)

"BLD",6154,4,"APDD",355.93,355.93)

"BLD",6154,4,"APDD",355.93,355.93,.02)

"BLD",6154,4,"APDD",355.96,355.96)

"BLD",6154,4,"APDD",355.96,355.96,.04)

"BLD",6154,4,"APDD",364.1,364.1)

"BLD",6154,4,"APDD",364.1,364.1,.06)

"BLD",6154,4,"APDD",364.4,364.4)

"BLD",6154,4,"APDD",364.4,364.4,.05)

"BLD",6154,4,"APDD",364.4,364.4,.11)

"BLD",6154,4,"APDD",399,399)

"BLD",6154,4,"APDD",399,399,.01)

"BLD",6154,4,"APDD",399,399,.19)

"BLD",6154,4,"APDD",399,399,163)

"BLD",6154,4,"APDD",399,399,166)

"BLD",6154,4,"APDD",399,399,167)

"BLD",6154,4,"APDD",399,399,230)

"BLD",6154,4,"APDD",399,399,231)

"BLD",6154,4,"APDD",399,399,236)

"BLD",6154,4,"APDD",399,399,237)

"BLD",6154,4,"APDD",399,399,238)

"BLD",6154,4,"APDD",399,399,400)

"BLD",6154,4,"APDD",399,399,401)

"BLD",6154,4,"APDD",399,399,459)

"BLD",6154,4,"APDD",399,399.0304)

"BLD",6154,4,"APDD",399,399.0304,8)

"BLD",6154,4,"APDD",399,399.0304,9)

"BLD",6154,4,"APDD",399,399.0304,10)

"BLD",6154,4,"APDD",399,399.0304,11)

"BLD",6154,4,"APDD",399,399.0304,12)

"BLD",6154,4,"APDD",399,399.0304,13)

"BLD",6154,4,"APDD",399,399.0304,50.01)

"BLD",6154,4,"APDD",399,399.0304,50.02)

"BLD",6154,4,"APDD",399,399.0304,50.03)

"BLD",6154,4,"APDD",399,399.0304,50.04)

"BLD",6154,4,"APDD",399,399.0304,50.05)

"BLD",6154,4,"APDD",399,399.0304,50.06)

"BLD",6154,4,"APDD",399,399.0304,50.07)

"BLD",6154,4,"APDD",399,399.0304,50.08)

"BLD",6154,4,"APDD",399,399.0304,50.09)

"BLD",6154,4,"APDD",399,399.041)

"BLD",6154,4,"APDD",399,399.041,.03)

"BLD",6154,4,"APDD",399,399.042)

"BLD",6154,4,"APDD",399,399.042,.06)

"BLD",6154,4,"APDD",399,399.042,.15)

"BLD",6154,4,"APDD",399.1,399.1)

"BLD",6154,4,"APDD",399.1,399.1,.16)

"BLD",6154,4,"B",2,2)

"BLD",6154,4,"B",36,36)

"BLD",6154,4,"B",350.9,350.9)

"BLD",6154,4,"B",353.1,353.1)

"BLD",6154,4,"B",353.2,353.2)

"BLD",6154,4,"B",355.9,355.9)

"BLD",6154,4,"B",355.91,355.91)

"BLD",6154,4,"B",355.92,355.92)

"BLD",6154,4,"B",355.93,355.93)

"BLD",6154,4,"B",355.96,355.96)

"BLD",6154,4,"B",355.97,355.97)

"BLD",6154,4,"B",364.1,364.1)

"BLD",6154,4,"B",364.4,364.4)

"BLD",6154,4,"B",364.5,364.5)

"BLD",6154,4,"B",364.6,364.6)

"BLD",6154,4,"B",364.7,364.7)

"BLD",6154,4,"B",399,399)

"BLD",6154,4,"B",399.1,399.1)

"BLD",6154,6.3)
5
"BLD",6154,"ABPKG")
n
"BLD",6154,"INI")
IBY348PR
"BLD",6154,"INID")
^y^y
"BLD",6154,"INIT")
IBY348PO
"BLD",6154,"KRN",0)
^9.67PA^8989.52^19
"BLD",6154,"KRN",.4,0)
.4
"BLD",6154,"KRN",.401,0)
.401
"BLD",6154,"KRN",.401,"NM",0)
^9.68A^^
"BLD",6154,"KRN",.402,0)
.402
"BLD",6154,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",6154,"KRN",.402,"NM",1,0)
IBEDIT INS CO1    FILE #36^36^0
"BLD",6154,"KRN",.402,"NM",2,0)
IB SCREEN4    FILE #399^399^0
"BLD",6154,"KRN",.402,"NM",3,0)
IB EDIT MCCR PARM    FILE #350.9^350.9^1^
"BLD",6154,"KRN",.402,"NM","B","IB EDIT MCCR PARM    FILE #350.9",3)

"BLD",6154,"KRN",.402,"NM","B","IB SCREEN4    FILE #399",2)

"BLD",6154,"KRN",.402,"NM","B","IBEDIT INS CO1    FILE #36",1)

"BLD",6154,"KRN",.403,0)
.403
"BLD",6154,"KRN",.403,"NM",0)
^9.68A^^
"BLD",6154,"KRN",.5,0)
.5
"BLD",6154,"KRN",.84,0)
.84
"BLD",6154,"KRN",3.6,0)
3.6
"BLD",6154,"KRN",3.8,0)
3.8
"BLD",6154,"KRN",9.2,0)
9.2
"BLD",6154,"KRN",9.8,0)
9.8
"BLD",6154,"KRN",9.8,"NM",0)
^9.68A^50^48
"BLD",6154,"KRN",9.8,"NM",1,0)
IBCU7^^0^B54846939
"BLD",6154,"KRN",9.8,"NM",2,0)
IBCSCU^^0^B11830990
"BLD",6154,"KRN",9.8,"NM",3,0)
IBCEU3^^0^B63577235
"BLD",6154,"KRN",9.8,"NM",4,0)
IBCSCH^^0^B75190513
"BLD",6154,"KRN",9.8,"NM",5,0)
IBCEF11^^0^B40186930
"BLD",6154,"KRN",9.8,"NM",6,0)
IBCEF77^^0^B12716914
"BLD",6154,"KRN",9.8,"NM",7,0)
IBCEPA^^0^B50420799
"BLD",6154,"KRN",9.8,"NM",8,0)
IBCEPB^^0^B7318616
"BLD",6154,"KRN",9.8,"NM",9,0)
IBCEPC^^0^B5826861
"BLD",6154,"KRN",9.8,"NM",10,0)
IBCNSC1^^0^B65055609
"BLD",6154,"KRN",9.8,"NM",12,0)
IBCBB21^^0^B10727629
"BLD",6154,"KRN",9.8,"NM",13,0)
IBCFP^^0^B12560785
"BLD",6154,"KRN",9.8,"NM",14,0)
IBCU3^^0^B25333825
"BLD",6154,"KRN",9.8,"NM",15,0)
IBJPS^^0^B5289687
"BLD",6154,"KRN",9.8,"NM",16,0)
IBJPS2^^0^B48130321
"BLD",6154,"KRN",9.8,"NM",17,0)
IBCEFG8^^0^B9105707
"BLD",6154,"KRN",9.8,"NM",18,0)
IBCEF3^^0^B41293059
"BLD",6154,"KRN",9.8,"NM",19,0)
IBCB^^0^B32907944
"BLD",6154,"KRN",9.8,"NM",20,0)
IBCECOB1^^0^B67244551
"BLD",6154,"KRN",9.8,"NM",21,0)
IBCECOB4^^0^B34131844
"BLD",6154,"KRN",9.8,"NM",22,0)
IBCEM03^^0^B45045042
"BLD",6154,"KRN",9.8,"NM",23,0)
IBCEMSR1^^0^B59731831
"BLD",6154,"KRN",9.8,"NM",24,0)
IBCEP^^0^B21502471
"BLD",6154,"KRN",9.8,"NM",25,0)
IBCEP0^^0^B67684201
"BLD",6154,"KRN",9.8,"NM",26,0)
IBCEP2A^^0^B42797265
"BLD",6154,"KRN",9.8,"NM",27,0)
IBCEP4^^0^B23219297
"BLD",6154,"KRN",9.8,"NM",28,0)
IBCEP5^^0^B48252078
"BLD",6154,"KRN",9.8,"NM",29,0)
IBCEP5B^^0^B40601751
"BLD",6154,"KRN",9.8,"NM",30,0)
IBCEP5C^^0^B43594569
"BLD",6154,"KRN",9.8,"NM",31,0)
IBCEP5D^^0^B62434014
"BLD",6154,"KRN",9.8,"NM",32,0)
IBCEXTRP^^0^B21578512
"BLD",6154,"KRN",9.8,"NM",34,0)
IBCFP1^^0^B33608926
"BLD",6154,"KRN",9.8,"NM",35,0)
IBCIUT4^^0^B48396208
"BLD",6154,"KRN",9.8,"NM",36,0)
IBCISC^^0^B24145516
"BLD",6154,"KRN",9.8,"NM",37,0)
IBCEP7^^0^B48408157
"BLD",6154,"KRN",9.8,"NM",38,0)
IBCEP7C^^0^B58965316
"BLD",6154,"KRN",9.8,"NM",39,0)
IBCEP9^^0^B73005418
"BLD",6154,"KRN",9.8,"NM",40,0)
IBCEPTC^^0^B73141787
"BLD",6154,"KRN",9.8,"NM",41,0)
IBCEPTC0^^0^B19837123
"BLD",6154,"KRN",9.8,"NM",42,0)
IBCEPTC2^^0^B47676987
"BLD",6154,"KRN",9.8,"NM",43,0)
IBCEPTR^^0^B101915596
"BLD",6154,"KRN",9.8,"NM",44,0)
IBCEQ1A^^0^B62193570
"BLD",6154,"KRN",9.8,"NM",45,0)
IBCERP6^^0^B24267407
"BLD",6154,"KRN",9.8,"NM",46,0)
IBCEU5^^0^B87188709
"BLD",6154,"KRN",9.8,"NM",47,0)
IBCEP5A^^0^B21730261
"BLD",6154,"KRN",9.8,"NM",48,0)
IBCCC2^^0^B57341017
"BLD",6154,"KRN",9.8,"NM",49,0)
IBCEPU^^0^B942471
"BLD",6154,"KRN",9.8,"NM",50,0)
IBCEP7B^^0^B7101591
"BLD",6154,"KRN",9.8,"NM","B","IBCB",19)

"BLD",6154,"KRN",9.8,"NM","B","IBCBB21",12)

"BLD",6154,"KRN",9.8,"NM","B","IBCCC2",48)

"BLD",6154,"KRN",9.8,"NM","B","IBCECOB1",20)

"BLD",6154,"KRN",9.8,"NM","B","IBCECOB4",21)

"BLD",6154,"KRN",9.8,"NM","B","IBCEF11",5)

"BLD",6154,"KRN",9.8,"NM","B","IBCEF3",18)

"BLD",6154,"KRN",9.8,"NM","B","IBCEF77",6)

"BLD",6154,"KRN",9.8,"NM","B","IBCEFG8",17)

"BLD",6154,"KRN",9.8,"NM","B","IBCEM03",22)

"BLD",6154,"KRN",9.8,"NM","B","IBCEMSR1",23)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP",24)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP0",25)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP2A",26)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP4",27)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP5",28)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP5A",47)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP5B",29)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP5C",30)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP5D",31)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP7",37)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP7B",50)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP7C",38)

"BLD",6154,"KRN",9.8,"NM","B","IBCEP9",39)

"BLD",6154,"KRN",9.8,"NM","B","IBCEPA",7)

"BLD",6154,"KRN",9.8,"NM","B","IBCEPB",8)

"BLD",6154,"KRN",9.8,"NM","B","IBCEPC",9)

"BLD",6154,"KRN",9.8,"NM","B","IBCEPTC",40)

"BLD",6154,"KRN",9.8,"NM","B","IBCEPTC0",41)

"BLD",6154,"KRN",9.8,"NM","B","IBCEPTC2",42)

"BLD",6154,"KRN",9.8,"NM","B","IBCEPTR",43)

"BLD",6154,"KRN",9.8,"NM","B","IBCEPU",49)

"BLD",6154,"KRN",9.8,"NM","B","IBCEQ1A",44)

"BLD",6154,"KRN",9.8,"NM","B","IBCERP6",45)

"BLD",6154,"KRN",9.8,"NM","B","IBCEU3",3)

"BLD",6154,"KRN",9.8,"NM","B","IBCEU5",46)

"BLD",6154,"KRN",9.8,"NM","B","IBCEXTRP",32)

"BLD",6154,"KRN",9.8,"NM","B","IBCFP",13)

"BLD",6154,"KRN",9.8,"NM","B","IBCFP1",34)

"BLD",6154,"KRN",9.8,"NM","B","IBCISC",36)

"BLD",6154,"KRN",9.8,"NM","B","IBCIUT4",35)

"BLD",6154,"KRN",9.8,"NM","B","IBCNSC1",10)

"BLD",6154,"KRN",9.8,"NM","B","IBCSCH",4)

"BLD",6154,"KRN",9.8,"NM","B","IBCSCU",2)

"BLD",6154,"KRN",9.8,"NM","B","IBCU3",14)

"BLD",6154,"KRN",9.8,"NM","B","IBCU7",1)

"BLD",6154,"KRN",9.8,"NM","B","IBJPS",15)

"BLD",6154,"KRN",9.8,"NM","B","IBJPS2",16)

"BLD",6154,"KRN",19,0)
19
"BLD",6154,"KRN",19,"NM",0)
^9.68A^6^6
"BLD",6154,"KRN",19,"NM",1,0)
IB UB-82 TEST PATTERN PRINT^^1^
"BLD",6154,"KRN",19,"NM",2,0)
IB UB-92 TEST PATTERN PRINT^^1^
"BLD",6154,"KRN",19,"NM",3,0)
IB HCFA-1500 TEST PATTERN^^1^
"BLD",6154,"KRN",19,"NM",4,0)
IB MCCR PARAMETER EDIT^^1^
"BLD",6154,"KRN",19,"NM",5,0)
IB PRINT BILL ADDENDUM^^0
"BLD",6154,"KRN",19,"NM",6,0)
IBCE PROVIDER ID QUERY^^0
"BLD",6154,"KRN",19,"NM","B","IB HCFA-1500 TEST PATTERN",3)

"BLD",6154,"KRN",19,"NM","B","IB MCCR PARAMETER EDIT",4)

"BLD",6154,"KRN",19,"NM","B","IB PRINT BILL ADDENDUM",5)

"BLD",6154,"KRN",19,"NM","B","IB UB-82 TEST PATTERN PRINT",1)

"BLD",6154,"KRN",19,"NM","B","IB UB-92 TEST PATTERN PRINT",2)

"BLD",6154,"KRN",19,"NM","B","IBCE PROVIDER ID QUERY",6)

"BLD",6154,"KRN",19.1,0)
19.1
"BLD",6154,"KRN",101,0)
101
"BLD",6154,"KRN",101,"NM",0)
^9.68A^^
"BLD",6154,"KRN",409.61,0)
409.61
"BLD",6154,"KRN",771,0)
771
"BLD",6154,"KRN",870,0)
870
"BLD",6154,"KRN",8989.51,0)
8989.51
"BLD",6154,"KRN",8989.52,0)
8989.52
"BLD",6154,"KRN",8994,0)
8994
"BLD",6154,"KRN","B",.4,.4)

"BLD",6154,"KRN","B",.401,.401)

"BLD",6154,"KRN","B",.402,.402)

"BLD",6154,"KRN","B",.403,.403)

"BLD",6154,"KRN","B",.5,.5)

"BLD",6154,"KRN","B",.84,.84)

"BLD",6154,"KRN","B",3.6,3.6)

"BLD",6154,"KRN","B",3.8,3.8)

"BLD",6154,"KRN","B",9.2,9.2)

"BLD",6154,"KRN","B",9.8,9.8)

"BLD",6154,"KRN","B",19,19)

"BLD",6154,"KRN","B",19.1,19.1)

"BLD",6154,"KRN","B",101,101)

"BLD",6154,"KRN","B",409.61,409.61)

"BLD",6154,"KRN","B",771,771)

"BLD",6154,"KRN","B",870,870)

"BLD",6154,"KRN","B",8989.51,8989.51)

"BLD",6154,"KRN","B",8989.52,8989.52)

"BLD",6154,"KRN","B",8994,8994)

"BLD",6154,"QUES",0)
^9.62^^
"BLD",6154,"REQB",0)
^9.611^9^8
"BLD",6154,"REQB",2,0)
IB*2.0*260^2
"BLD",6154,"REQB",3,0)
IB*2.0*287^2
"BLD",6154,"REQB",4,0)
IB*2.0*323^2
"BLD",6154,"REQB",5,0)
IB*2.0*335^2
"BLD",6154,"REQB",6,0)
IB*2.0*320^2
"BLD",6154,"REQB",7,0)
IB*2.0*288^2
"BLD",6154,"REQB",8,0)
IB*2.0*226^2
"BLD",6154,"REQB",9,0)
IB*2.0*197^2
"BLD",6154,"REQB","B","IB*2.0*197",9)

"BLD",6154,"REQB","B","IB*2.0*226",8)

"BLD",6154,"REQB","B","IB*2.0*260",2)

"BLD",6154,"REQB","B","IB*2.0*287",3)

"BLD",6154,"REQB","B","IB*2.0*288",7)

"BLD",6154,"REQB","B","IB*2.0*320",6)

"BLD",6154,"REQB","B","IB*2.0*323",4)

"BLD",6154,"REQB","B","IB*2.0*335",5)

"DATA",364.5,159,0)
N-AUTO ACCIDENT STATE^N^E^I^399^^^
"DATA",364.5,159,1)
D:'$D(IBXSAVE("CONDA")) F^IBCEF("N-CONDITION RELATED TO AUTO") S IBXDATA=$S($D(IBXSAVE("CONDA")):$P($G(IBXSAVE("CONDA")),U,2),1:$P(IBXDATA,U,2))
"DATA",364.5,159,3,0)
^364.53^4^4^3061113^^^^
"DATA",364.5,159,3,1,0)
This field relies on the existence of the IBXSAVE("CONDA") variable
"DATA",364.5,159,3,2,0)
previously extracted for CONDITION RELATED TO AUTO.  If IBXSAVE("CONDA")
"DATA",364.5,159,3,3,0)
does not exist, extract the field that sets it.  If IBXSAVE("CONDA")
"DATA",364.5,159,3,4,0)
exists, the second piece contains the pointer to the state.
"DATA",364.5,188,0)
N-CMS-1500 BOX 24I ID QUAL^N^E^G^399^^^
"DATA",364.5,188,1)
D:'$D(IBXSAVE("BOX24")) B24^IBCEF3(.IBXSAVE,IBXIEN) D TEXT24^IBCEU3("I",.IBXSAVE,.IBXDATA)
"DATA",364.5,188,3,0)
^^3^3^3060816^
"DATA",364.5,188,3,1,0)
Data element returns the IBXDATA array box 24I on the printed 1500 claim 
"DATA",364.5,188,3,2,0)
form.  This is the rendering provider ID qualifier.  Each claim line 
"DATA",364.5,188,3,3,0)
item has 2 lines in the IBXDATA array.
"DATA",364.5,189,0)
N-CMS-1500 24J REND PROV ID^N^E^G^399^^^
"DATA",364.5,189,1)
D:'$D(IBXSAVE("BOX24")) B24^IBCEF3(.IBXSAVE,IBXIEN) D TEXT24^IBCEU3("J",.IBXSAVE,.IBXDATA)
"DATA",364.5,189,3,0)
^^3^3^3060816^
"DATA",364.5,189,3,1,0)
Data element returns the IBXDATA array for box 24J on the printed 1500 
"DATA",364.5,189,3,2,0)
claim form.  This is the Rendering Provider secondary ID and NPI#.  Each 
"DATA",364.5,189,3,3,0)
service line on the claim form has 2 lines in the IBXDATA array.
"DATA",364.5,229,0)
N-HCFA EMERGENCY INDICATOR^N^E^G^399^^^
"DATA",364.5,229,1)
D:'$D(IBXSAVE("BOX24")) B24^IBCEF3(.IBXSAVE,IBXIEN) D TEXT24^IBCEU3("C",.IBXSAVE,.IBXDATA)
"DATA",364.5,229,3,0)
^^10^10^3060816^
"DATA",364.5,229,3,1,0)
Data element relies on the data previously extracted in array
"DATA",364.5,229,3,2,0)
IBXSAVE("BOX24") from HCFA 1500 SERVICES PRINT.  If IBXSAVE("BOX24")
"DATA",364.5,229,3,3,0)
does not exist, extract the field that sets it.  Returns the array of 
"DATA",364.5,229,3,4,0)
emergency indicator flags for all lines on the claim as they would 
"DATA",364.5,229,3,5,0)
appear in Box 24C on the 1500 form (08/05 version).  If the array 
"DATA",364.5,229,3,6,0)
IBXSAVE("BOX24",n,"TEXT") exists, then this means that the line also 
"DATA",364.5,229,3,7,0)
contains free text supplemental information which will print in the 
"DATA",364.5,229,3,8,0)
shaded gray area of Box 24 from columns 24A thru 24G.  For this data 
"DATA",364.5,229,3,9,0)
element, the field returns the extract of this text for columns 22-24.  
"DATA",364.5,229,3,10,0)
Every 2 printed lines of this box constitute one service line.
"DATA",364.5,302,0)
N-OUTSIDE LAB TOTAL (EDI)^N^E^I^399^^^
"DATA",364.5,302,1)
N Z,Q,L I $$OLAB^IBCEU(IBXIEN) S Q="OUTPT",L="OLAB" D:'$D(IBXSAVE(Q)) B24^IBCEF3(.IBXSAVE,IBXIEN) K IBXDATA S IBXDATA="",(Z,IBXSAVE(L))=0 F  S Z=$O(IBXSAVE(Q,Z)) Q:'Z  S IBXSAVE(L)=IBXSAVE(L)+$P(IBXSAVE(Q,Z),U,11),IBXDATA=IBXSAVE(L)
"DATA",364.5,302,3,0)
^^8^8^3060915^
"DATA",364.5,302,3,1,0)
Similar to data element N-OUTSIDE LAB TOTAL.
"DATA",364.5,302,3,2,0)
This one uses the proper subscript in the IBXSAVE array for EDI 
"DATA",364.5,302,3,3,0)
transmissions.
"DATA",364.5,302,3,4,0)
B24^IBCEF3 creates IBXSAVE("BOX24") for printed 1500 data and
"DATA",364.5,302,3,5,0)
B24^IBCEF3 creates IBXSAVE("OUTPT") for EDI transmitted data.
"DATA",364.5,302,3,6,0)
 
"DATA",364.5,302,3,7,0)
If the facility is an outside lab, this is the total of all the charges
"DATA",364.5,302,3,8,0)
that the VA paid for the line items for this bill.
"DATA",364.6,783,0)
8^N^^55^1^^0^7^15^TOTAL OUTSIDE LAB CHARGES^0^1^^
"DATA",364.6,975,0)
8^N^^180^1^^0^22^15^BOX 24K DATA - NO LONGER USED^0^1^^
"DATA",364.6,1002,0)
8^N^^60^1^^0^19^32^CMS-1500 BOX 19 RAW DATA^^1^^
"DATA",364.6,1006,0)
8^N^^180^1^^0^30^61^SERVICE LINE COMMENT^0^1^^
"DATA",364.6,1400,0)
2^N^^1^1^^1^1^78^PRINT STATUS (1500 TOP LINE)^0
"DATA",364.6,1401,0)
2^N^^1^2^^1^1^78^MAILING ADDRESS NM (FORM LN 2)^0
"DATA",364.6,1402,0)
2^N^^1^3^4^1^1^78^MAILING ADDR FULL (FORM LN 3)
"DATA",364.6,1403,0)
2^N^^1^9^^1^1^45^CHECK BOX FOR BILL TYPE (BX-1)
"DATA",364.6,1404,0)
2^N^^1^9^^1^50^29^INSURED ID # (BX-1A)
"DATA",364.6,1405,0)
2^N^^1^11^^1^1^28^PATIENT NAME (BX-2)
"DATA",364.6,1406,0)
2^N^^1^11^^1^31^10^PATIENT DOB (BX-3/1)
"DATA",364.6,1407,0)
2^N^^1^11^^1^42^1^PATIENT SEX=MALE (BX-3/2A)
"DATA",364.6,1408,0)
2^N^^1^11^^1^47^1^PATIENT SEX=FEMALE (BX-3/2B)
"DATA",364.6,1409,0)
2^N^^1^11^^1^49.9^80^CURR INSURED DEMOG EXTRACT^1
"DATA",364.6,1410,0)
2^N^^1^11^^1^50^29^INSURED'S NAME (BX-4)
"DATA",364.6,1411,0)
2^N^^1^13^^1^1^28^PATIENT STR ADDRESS (BX-5/1)
"DATA",364.6,1412,0)
2^N^^1^13^^1^33^1^PT REL TO INSURED=SELF (BX-6)
"DATA",364.6,1413,0)
2^N^^1^13^^1^38^1^PT REL TO INSRD=SPOUSE (BX-6)
"DATA",364.6,1414,0)
2^N^^1^13^^1^42^1^PT REL TO INSRD=CHILD (BX-6)
"DATA",364.6,1415,0)
2^N^^1^13^^1^47^1^PT REL TO INSRD=OTHER (BX-6)
"DATA",364.6,1416,0)
2^N^^1^13^^1^49.9^72^CURR INSURED'S FULL ADDR EXTR^1
"DATA",364.6,1417,0)
2^N^^1^13^^1^50^29^INSURED STR ADDRESS (BX-7/1)
"DATA",364.6,1418,0)
2^N^^1^15^^1^1^24^PATIENT CITY ADDRESS (BX-5/2A)
"DATA",364.6,1419,0)
2^N^^1^15^^1^26^2^PATIENT STATE (BX-5/2B)
"DATA",364.6,1420,0)
2^N^^1^15^^1^35^1^PT MARITAL STAT=SINGL (BX-8/A)
"DATA",364.6,1421,0)
2^N^^1^15^^1^41^1^PT MARITAL STAT=MARRD (BX-8/B)
"DATA",364.6,1422,0)
2^N^^1^15^^1^47^1^PT MARITAL STAT=OTHER (BX-8/C)
"DATA",364.6,1423,0)
2^N^^1^15^^1^50^23^INSURED'S CITY (BX-7/2A)^0
"DATA",364.6,1424,0)
2^N^^1^15^^1^74^2^INSURED'S STATE (BX-7/2B)^0
"DATA",364.6,1425,0)
2^N^^1^17^^1^1^12^PATIENT ZIP CODE (BX-5/3A)
"DATA",364.6,1426,0)
2^N^^1^17^^1^15^14^PATIENT TELEPHONE (BX-5/3B)
"DATA",364.6,1427,0)
2^N^^1^17^^1^35^1^PT EMPL STAT=EMPLOYD (BX-8/2A)
"DATA",364.6,1428,0)
2^N^^1^17^^1^50^12^INSURED'S ZIP CODE (BX-7/3A)^0
"DATA",364.6,1429,0)
2^N^^1^17^^1^65^14^INSURED'S PHONE (BX-7/3B)^0
"DATA",364.6,1430,0)
2^N^^1^19^^1^1^28^OTH INSURED NAME (BX-9/1)
"DATA",364.6,1431,0)
2^N^^1^19^^1^50^29^INSURED POLICY GROUP (BX-11)
"DATA",364.6,1432,0)
2^N^^1^21^^1^1^28^OTH INSURED POLICY # (BX-9A)
"DATA",364.6,1433,0)
2^N^^1^21^^1^35^1^COND REL TO EMP=YES (BX-10A/A)
"DATA",364.6,1434,0)
2^N^^1^21^^1^41^1^COND REL TO EMP=NO (BX-10A/B)
"DATA",364.6,1435,0)
2^N^^1^21^^1^53^10^INSUREDS DOB (BX-11A/1)
"DATA",364.6,1436,0)
2^N^^1^21^^1^68^1^INSUREDS SEX=MALE (BX-11A/2A)
"DATA",364.6,1437,0)
2^N^^1^21^^1^75^1^INSURED SEX=FEMALE (BX-11A/2B)
"DATA",364.6,1438,0)
2^N^^1^23^^1^2^10^OTH INSURED DOB (BX-9B/1)
"DATA",364.6,1439,0)
2^N^^1^23^^1^18^1^OTH INS SEX=MALE (BX-9B/2A)
"DATA",364.6,1440,0)
2^N^^1^23^^1^24^1^OTH INS SEX=FEMALE (BX-9B/2B)
"DATA",364.6,1441,0)
2^N^^1^23^^1^35^1^COND REL AUTO=YES (BX-10B/A)
"DATA",364.6,1442,0)
2^N^^1^23^^1^41^1^COND REL AUTO=NO (BX-10B/B)
"DATA",364.6,1443,0)
2^N^^1^23^^1^45^2^AUTO ACCIDENT STATE (BX-10B/C)
"DATA",364.6,1444,0)
2^N^^1^23^^1^50^29^INSURED EMPLOYR NAME (BX-11B)
"DATA",364.6,1445,0)
2^N^^1^25^^1^1^28^OTH INS EMPLR (BX-9C)
"DATA",364.6,1446,0)
2^N^^1^25^^1^35^1^COND REL TO OTH=YES (BX-10C/A)
"DATA",364.6,1447,0)
2^N^^1^25^^1^41^1^COND REL TO OTH=NO (BX-10C/B)
"DATA",364.6,1448,0)
2^N^^1^25^^1^50^29^INSUREDS PLAN NAME (BX-11C)
"DATA",364.6,1449,0)
2^N^^1^27^^1^1^28^OTH INS PLAN NAME (BX-9D)
"DATA",364.6,1450,0)
2^N^^1^27^^1^30^19^BOX 10D CMS-1500
"DATA",364.6,1451,0)
2^N^^1^27^^1^52^1^ANOTHER PLAN=YES (BX-11D/A)
"DATA",364.6,1452,0)
2^N^^1^27^^1^57^1^ANOTHER PLAN=NO (BX-11D/B)
"DATA",364.6,1453,0)
2^N^^1^30^^1^4^45^RELEASE OF INFO SIG (12A)
"DATA",364.6,1454,0)
2^N^^1^30^^1^53^26^ASSIGN OF BENEFITS SIG (13A)
"DATA",364.6,1455,0)
2^N^^1^31^^1^6^25^PATIENT SIGNATURE (BX-12)
"DATA",364.6,1456,0)
2^N^^1^31^^1^36^13^PATIENT SIGNATURE DT (BX-12/2)
"DATA",364.6,1457,0)
2^N^^1^31^^1^56^23^INSUREDS SIGNATURE (BX-13)
"DATA",364.6,1458,0)
2^N^^1^33^^1^2^10^DATE OF CURR ILLNESS (BX-14)
"DATA",364.6,1459,0)
2^N^^1^33^^1^37^10^DATE OF SIMLAR ILLNESS (BX-15)
"DATA",364.6,1460,0)
2^N^^1^33^^1^54^10^DT UNABLE TO WRK FR (BX-16/1)
"DATA",364.6,1461,0)
2^N^^1^33^^1^68^10^DT UNABLE TO WRK TO (BX-16/2)
"DATA",364.6,1462,0)
2^N^^1^34^^1^30^2^REF PROV OTH ID QUAL (17A/1)^0
"DATA",364.6,1463,0)
2^N^^1^34^^1^33^16^REF PROV OTH ID# (BX 17A/2)^0
"DATA",364.6,1464,0)
2^N^^1^35^^1^1^26^REFERRING PROV NAME (BX 17)
"DATA",364.6,1465,0)
2^N^^1^35^^1^33^16^REFERRING PROV NPI# (BX 17B)
"DATA",364.6,1466,0)
2^N^^1^35^^1^54^10^HOSP FROM DATE (BX-18/1)
"DATA",364.6,1467,0)
2^N^^1^35^^1^68^10^HOSP TO DATE (BX-18/2)
"DATA",364.6,1468,0)
2^N^^1^36^^1^1^48^UPPER LINE 1500 (BX-19)
"DATA",364.6,1469,0)
2^N^^1^37^^1^1^48^LOWER LINE - 1500 (BX-19)
"DATA",364.6,1470,0)
2^N^^1^37^^1^52^1^OUTSIDE LAB? YES (BX-20)
"DATA",364.6,1471,0)
2^N^^1^37^^1^61^9^LAB CHARGES (BX-20/B)
"DATA",364.6,1472,0)
2^N^^1^37^^1^70^9^PURCH SVC CHARGES (BX-20/C)
"DATA",364.6,1473,0)
2^N^^1^39^^1^3^8^DIAGNOSIS CODE 1 (BX-21.1)
"DATA",364.6,1474,0)
2^N^^1^39^^1^30^8^DIAGNOSIS CODE 3 (BX-21.3)
"DATA",364.6,1475,0)
2^N^^1^39^^1^50^11^MEDICAID RESUB CODE (BX-22/A)
"DATA",364.6,1476,0)
2^N^^1^39^^1^62^17^ORIGINAL REF NO (BX-22/B)
"DATA",364.6,1477,0)
2^N^^1^41^^1^3^8^DIAGNOSIS CODE 2 (BX-21.2)
"DATA",364.6,1478,0)
2^N^^1^41^^1^30^8^DIAGNOSIS CODE 4 (BX-21.4)
"DATA",364.6,1479,0)
2^N^^1^41^^1^50^29^PRIOR AUTH NUMBER (BX-23)
"DATA",364.6,1480,0)
2^N^^1^44^^1^.5^^SERVICE LN EXTRACT - CMS 1500^1
"DATA",364.6,1481,0)
2^N^^1^44^^1^1^9^DATE OF SERV FR (BX-24A/A)
"DATA",364.6,1482,0)
2^N^^1^44^^1^10^9^DATE OF SERV TO (BX-24A/B)
"DATA",364.6,1483,0)
2^N^^1^44^^1^19^3^PLACE OF SERVICE (BX-24B)
"DATA",364.6,1484,0)
2^N^^1^44^^1^22^3^EMG (BX-24C)
"DATA",364.6,1485,0)
2^N^^1^44^^1^25^20^PROCEDURE (BX-24D/1)
"DATA",364.6,1486,0)
2^N^^1^44^^1^45^4^DIAGNOSIS POINTER (BX-24E)
"DATA",364.6,1487,0)
2^N^^1^44^^1^49^9^CHARGES (BX-24F)
"DATA",364.6,1488,0)
2^N^^1^44^^1^58^4^UNITS (BX-24G)
"DATA",364.6,1489,0)
2^N^^1^44^^1^63^1^EPSDT FAMILY PLAN (BX-24H)
"DATA",364.6,1490,0)
2^N^^1^44^^1^65^2^ID QUALIFER (BX-24I)
"DATA",364.6,1491,0)
2^N^^1^44^^1^68^11^RENDERING PROVIDER ID (BX-24J)
"DATA",364.6,1492,0)
2^N^^1^56^^1^1^^CLEAN UP IBXSAVE^1
"DATA",364.6,1493,0)
2^N^^1^57^^1^1^15^FED TAX ID # (BX-25/1)
"DATA",364.6,1494,0)
2^N^^1^57^^1^19^1^ID NUMBER=EIN (BX-25/2B)
"DATA",364.6,1495,0)
2^N^^1^57^^1^23^14^PATIENT ACCT NUMBER (BX-26)
"DATA",364.6,1496,0)
2^N^^1^57^^1^38^6^ACCEPT ASSIGNMENT (BX-27)
"DATA",364.6,1497,0)
2^N^^1^57^^1^51^9^TOTAL CHARGE (BX-28)
"DATA",364.6,1498,0)
2^N^^1^57^^1^62^8^TOTAL PRIOR PAYMENTS (BX-29)
"DATA",364.6,1499,0)
2^N^^1^57^^1^71^8^TOT CHRG-PRIOR PYMNTS (BX-30)
"DATA",364.6,1500,0)
2^N^^1^58^^1^66^13^BILL PROV PHONE# (BX-33/LN 1)
"DATA",364.6,1501,0)
2^N^^1^59^^1^23^26^FACILITY NAME (BX-32/LINE 1)
"DATA",364.6,1502,0)
2^N^^1^59^^1^50^29^AGENT CASHIER NM (BX-33/LN 1)
"DATA",364.6,1503,0)
2^N^^1^60^^1^1^21^BLOCK 31 CHR 1-21 (BX-31/LN1)
"DATA",364.6,1506,0)
2^N^^1^60^^1^23^26^FAC ADR LINE 1 (BX-32/LN 2)
"DATA",364.6,1507,0)
2^N^^1^60^^1^50^29^BILL PROV ADDR LN1 (BX-33/LN3)
"DATA",364.6,1508,0)
2^N^^1^61^^1^1^21^BLOCK 31 CHR 22-42 (BX-31/LN2)
"DATA",364.6,1509,0)
2^N^^1^61^^1^23^26^FAC CITY/ST/ZIP (BX-32/LN 3)
"DATA",364.6,1510,0)
2^N^^1^61^^1^49.7^^AGENT CASHIER CITY EXTRACT^1
"DATA",364.6,1511,0)
2^N^^1^61^^1^49.8^^AGENT CASHIER STATE EXTRACT^1
"DATA",364.6,1512,0)
2^N^^1^61^^1^49.9^^AGENT CASHIER ZIP EXTRACT^1
"DATA",364.6,1513,0)
2^N^^1^61^^1^50^29^AG CA CITY/ST/ZIP (BX-33/LN 3)
"DATA",364.6,1514,0)
2^N^^1^62^^1^1^21^BLOCK 31 CHR 43-63 (BX-31/LN3)
"DATA",364.6,1515,0)
2^N^^1^62^^1^24^10^SERVICE FAC NPI (BX-32A)
"DATA",364.6,1516,0)
2^N^^1^62^^1^35^14^SERV FAC OTH ID# (BX-32B)
"DATA",364.6,1517,0)
2^N^^1^62^^1^51^10^BILLING PROVIDER NPI (BX-33A)
"DATA",364.6,1518,0)
2^N^^1^62^^1^62^17^BILLING PROV OTH ID# (BX-33B)
"DATA",364.6,1519,0)
2^N^^1^63^^0^1.9^^MULTIPLE PAGE CHECK/POPULATE^1
"DATA",364.6,1520,0)
2^N^^1^37^^1^57^1^OUTSIDE LAB? NO (BX-20)
"DATA",364.7,53,0)
945^N^5^^^^N
"DATA",364.7,53,1)
N IBZ D GETPRV^IBCEU(IBXIEN,9,.IBZ) N IBZZ S IBZZ=$P($G(IBZ(9,1)),U),IBXDATA=$$GETNMEL^IBCEF7(IBZZ,"FAMILY")
"DATA",364.7,53,3,0)
^364.73^2^2^3030917^^^^
"DATA",364.7,53,3,1,0)
 
"DATA",364.7,53,3,2,0)
Operating provider last name
"DATA",364.7,95,0)
73^N^159^^^^N
"DATA",364.7,95,1)
S IBXDATA=$$STATE^IBCEFG1(IBXDATA)
"DATA",364.7,95,3,0)
^364.73^2^2^3061011^^^^
"DATA",364.7,95,3,1,0)
Format data element as the 2-character state abbreviation.  If data element
"DATA",364.7,95,3,2,0)
is null, no output.
"DATA",364.7,889,0)
862^N^5^^^^N
"DATA",364.7,889,1)
K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE("OUTPT",Z)) Q:'Z  S:$P(IBXSAVE("OUTPT",Z),U,13)'="" IBXDATA(Z)=$P("N^Y",U,$P(IBXSAVE("OUTPT",Z),U,13)+1)
"DATA",364.7,889,3,0)
^^3^3^2991015^^^^
"DATA",364.7,889,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,889,3,2,0)
possible for the data element in the previously extracted IBXSAVE array.
"DATA",364.7,889,3,3,0)
Only output the data for service lines that have data.
"DATA",364.7,892,0)
783^N^302^^^^N
"DATA",364.7,892,1)
K IBXDATA S:$G(IBXSAVE("OLAB")) IBXDATA=$$DOLLAR^IBCEFG1(IBXSAVE("OLAB")) K IBXSAVE("OLAB")
"DATA",364.7,916,0)
946^N^5^^^^N
"DATA",364.7,916,1)
N IBZ D GETPRV^IBCEU(IBXIEN,9,.IBZ) N IBZZ S IBZZ=$P($G(IBZ(9,1)),U),IBXDATA=$$GETNMEL^IBCEF7(IBZZ,"GIVEN")
"DATA",364.7,916,3,0)
^364.73^1^1^3041223^^^^
"DATA",364.7,916,3,1,0)
Operating provider first name
"DATA",364.7,919,0)
947^N^5^^^^N
"DATA",364.7,919,1)
N IBZ D GETPRV^IBCEU(IBXIEN,9,.IBZ) N IBZZ S IBZZ=$P($G(IBZ(9,1)),U),IBZZ=$$NAME^IBCEFG1(IBZZ,1),IBXDATA=$P(IBZZ,U,5)
"DATA",364.7,949,0)
972^N^273^^^^N
"DATA",364.7,949,1)
N A,B,Z S A=IBXIEN,B=IBXDATA D F^IBCEF("N-RENDERING INSTITUTION") S Z=IBXDATA K IBXDATA S B=$S($P(Z,U,4):0,$$FT^IBCEF(A)=3&$$WNRBILL^IBEFUNC(A)&'B:"",$P(Z,U,2)=""&'$P(Z,U,3):"",'$P(Z,U,2):0,1:B) S:B'="" IBXDATA=B,IBXSAVE("PSVC")=B
"DATA",364.7,949,3,0)
^^6^6^3060908^
"DATA",364.7,949,3,1,0)
Extract the code for the non VA care type or 0 for a VA remote site
"DATA",364.7,949,3,2,0)
rendering facility.  If the bill is a MEDICARE WNR bill and the form type
"DATA",364.7,949,3,3,0)
is UB-92 (3) and the bill is not a NON-VA claim, output nothing.  Also, if
"DATA",364.7,949,3,4,0)
the bill is a 1500 MEDICARE WNR bill and it is not a bill for a
"DATA",364.7,949,3,5,0)
NON-VA claim, output 0.  If the facility is not remote or NON-VA but the
"DATA",364.7,949,3,6,0)
flag for another VA does the site's billing is set, output 0.
"DATA",364.7,953,0)
975^N^5^^^^N
"DATA",364.7,953,1)
K IBXDATA
"DATA",364.7,953,3,0)
^^4^4^3060818^
"DATA",364.7,953,3,1,0)
esg - 8/18/06 - IB patch 348 - New CMS-1500 claim form project
"DATA",364.7,953,3,2,0)
 
"DATA",364.7,953,3,3,0)
Box 24K no longer exists on the 1500 form.  Austin FSC was not mapping 
"DATA",364.7,953,3,4,0)
this field to anything anyway.
"DATA",364.7,1007,0)
1006^N^5^^^^N
"DATA",364.7,1007,1)
K IBXDATA N Z,IBZ S Z=0 F  S Z=$O(IBXSAVE("OUTPT",Z)) Q:'Z  I $P($G(IBXSAVE("OUTPT",Z,"AUX")),U,8)'="" S IBXDATA(Z)=$P(IBXSAVE("OUTPT",Z,"AUX"),U,8),IBZ=$P(IBXSAVE("OUTPT",Z,"AUX"),U,9) S:IBZ="" IBZ="  " S IBXDATA(Z)=IBZ_IBXDATA(Z)
"DATA",364.7,1007,3,0)
^^11^11^3060818^
"DATA",364.7,1007,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,1007,3,2,0)
possible for the data element in the previously extracted IBXSAVE array.
"DATA",364.7,1007,3,3,0)
Only output the data for service lines that have data.
"DATA",364.7,1007,3,4,0)
 
"DATA",364.7,1007,3,5,0)
esg - 8/18/06 - IB patch 348 - new CMS 1500 claim form
"DATA",364.7,1007,3,6,0)
If the service line comment qualifier doesn't exist, then add 2 blank 
"DATA",364.7,1007,3,7,0)
spaces in front of the service line comment.  If it does exist, then add 
"DATA",364.7,1007,3,8,0)
it to the front of the comment.
"DATA",364.7,1007,3,9,0)
 
"DATA",364.7,1007,3,10,0)
Length was also reduced from 80 chars to 61 chars in the field since that 
"DATA",364.7,1007,3,11,0)
is all the Box 24 shaded area allows for the comment per line item.
"DATA",364.7,1023,0)
1309^N^5^^^^N
"DATA",364.7,1023,1)
D OTH^IBCEF76(IBXIEN,.IBXSAVE,.IBXDATA,($$FT^IBCEF(IBXIEN)=2),"OP7 ")
"DATA",364.7,1023,3,0)
^^3^3^3060314^
"DATA",364.7,1023,3,1,0)
OP7-2
"DATA",364.7,1023,3,2,0)
other payer sequence.  Call provider ID function only when claim is a 
"DATA",364.7,1023,3,3,0)
1500 claim.
"DATA",364.7,1100,0)
1400^N^142^^^^N
"DATA",364.7,1100,1)
N Z S Z=$J("",+$P($G(^IBE(350.9,1,1)),U,27)),IBXDATA=Z_IBXDATA K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J),^TMP("IBXSAVE",$J),IBXSAVE
"DATA",364.7,1100,3,0)
^364.73^3^3^3060807^^^
"DATA",364.7,1100,3,1,0)
Move the text over to the column specified in the 1500 ADDRESS COLUMN
"DATA",364.7,1100,3,2,0)
parameter (file 350.9, field 1.27).  Also initialize utility globals
"DATA",364.7,1100,3,3,0)
and variables used in this form.
"DATA",364.7,1101,0)
1401^N^280^^^^N
"DATA",364.7,1101,1)
N Z S:$$WNRBILL^IBEFUNC(IBXIEN) IBXDATA="MEDICARE" S Z="",$P(Z," ",+$P($G(^IBE(350.9,1,1)),U,27)+1)="" S IBXSAVE("INDENT")=Z S:IBXDATA'="" IBXDATA=Z_IBXDATA
"DATA",364.7,1101,3,0)
^^4^4^3060713^
"DATA",364.7,1101,3,1,0)
If the 1500 ADDRESS COLUMN parameter exists, move the text over to
"DATA",364.7,1101,3,2,0)
this column by adding spaces at the start of it.  Save the indent parameter
"DATA",364.7,1101,3,3,0)
in IBXSAVE("INDENT") for future use.  If the current insurance is MEDICARE
"DATA",364.7,1101,3,4,0)
WNR, output 'MEDICARE'.
"DATA",364.7,1102,0)
1402^N^192^^^^N
"DATA",364.7,1102,1)
N Y,Z K IBXSAVE("CADR") I $O(IBXDATA(0)) S Y=$G(IBXDATA(6)) D ZIPOUT^VAFADDR S:Y'="" $P(IBXSAVE("CADR"),U,6)=Y F Z=1:1:5,7 S:$D(IBXDATA(Z)) $P(IBXSAVE("CADR"),U,Z)=IBXDATA(Z) I Z=7 D CIADDR^IBCEF1(.IBXDATA,.IBXSAVE,,1)
"DATA",364.7,1102,3,0)
^^5^5^3060713^
"DATA",364.7,1102,3,1,0)
If the 1500 ADDRESS COLUMN parameter exists, move the text over to this
"DATA",364.7,1102,3,2,0)
column by adding spaces at the start of it.  Format the address so each
"DATA",364.7,1102,3,3,0)
street address occupies one line, then a line containing city followed by
"DATA",364.7,1102,3,4,0)
a comma and space, the state abbreviation, a space and the zip code,
"DATA",364.7,1102,3,5,0)
formatted for zip plus 4 if appropriate.
"DATA",364.7,1103,0)
1403^N^235^^^^N
"DATA",364.7,1103,1)
N Z S Z=IBXDATA D F^IBCEF("N-CURRENT INSURANCE CO TYPE") S IBXDATA=$J("",$S(Z=16!(Z="MB")!(Z="MA"):0,Z="TV"!(Z="MC"):7,Z="CH":14,$$CHAMPVA^IBCEU3(IBXIEN)&($P($G(^DIC(36,+$$CURR^IBCEF2(IBXIEN),0)),U,2)="Y"):23,IBXDATA=5:30,1:44))_"X"
"DATA",364.7,1103,3,0)
^^7^7^3060721^
"DATA",364.7,1103,3,1,0)
Check appropriate box for type of insurance. 
"DATA",364.7,1103,3,2,0)
CMS-1500, Box 1.  Possibility of checking one box.  FECA BLK LUNG is not 
"DATA",364.7,1103,3,3,0)
an available selection.  Choices are mainly extracted from the ELECTRONIC 
"DATA",364.7,1103,3,4,0)
PLAN TYPE field (#.15) in FILE# 355.3.  Also used for the Group Health 
"DATA",364.7,1103,3,5,0)
Plan box is the 3.09 field in file 36 (if the value is 5).
"DATA",364.7,1103,3,6,0)
 
"DATA",364.7,1103,3,7,0)
Code is basically setting IBXDATA=$J("",[some offset amount])_"X".
"DATA",364.7,1104,0)
1404^N^3^^^^N
"DATA",364.7,1104,3,0)
^^1^1^3060714^
"DATA",364.7,1104,3,1,0)
1500 form, Box 1a.  Current insurance insured's ID number.
"DATA",364.7,1105,0)
1405^N^65^^^^N
"DATA",364.7,1105,3,0)
^^1^1^3060714^
"DATA",364.7,1105,3,1,0)
1500 form, Box 2.  Patient Name
"DATA",364.7,1106,0)
1406^N^66^^^^N
"DATA",364.7,1106,1)
S IBXDATA=$$DATE^IBCF2(+IBXDATA,1)
"DATA",364.7,1106,3,0)
^364.73^1^1^3060714^^^^
"DATA",364.7,1106,3,1,0)
Format the date as MM DD YYYY.
"DATA",364.7,1107,0)
1407^N^67^^^^N
"DATA",364.7,1107,1)
S IBXSAVE("SEX")=IBXDATA,IBXDATA=$S($G(IBXSAVE("SEX"))="M":"X",1:"")
"DATA",364.7,1107,3,0)
^364.73^2^2^3060714^^
"DATA",364.7,1107,3,1,0)
Save the value of patient sex in IBXSAVE variable for later use.  If the
"DATA",364.7,1107,3,2,0)
value is 'M', this field's value is 'X'.
"DATA",364.7,1108,0)
1408^N^5^^^^N
"DATA",364.7,1108,1)
S:$G(IBXSAVE("SEX"))'="M" IBXDATA="X" K IBXSAVE("SEX")
"DATA",364.7,1108,3,0)
^364.73^3^3^3060714^^
"DATA",364.7,1108,3,1,0)
This field relies on the existence of variable IBXSAVE("SEX") previously
"DATA",364.7,1108,3,2,0)
extracted.  If its value is not 'M', assume the sex is female and this
"DATA",364.7,1108,3,3,0)
field's value will be 'X'.
"DATA",364.7,1109,0)
1409^N^6^^^^N
"DATA",364.7,1109,1)
S IBXSAVE("IDEM")=IBXDATA
"DATA",364.7,1109,3,0)
^364.73^1^1^3060714^^
"DATA",364.7,1109,3,1,0)
Save the insured's demographic data in IBXSAVE("IDEM").
"DATA",364.7,1110,0)
1410^N^2^^^^N
"DATA",364.7,1110,3,0)
^^6^6^3060823^
"DATA",364.7,1110,3,1,0)
If the current insured is the patient, the word 'SAME' is printed instead
"DATA",364.7,1110,3,2,0)
of repeating the name.
"DATA",364.7,1110,3,3,0)
 
"DATA",364.7,1110,3,4,0)
esg - 8/23/06 - IB*2*348 - Requirement 3.2.1.12 - No longer print the 
"DATA",364.7,1110,3,5,0)
word "SAME" in Box 4 ever.  We have to print the name of the insured in 
"DATA",364.7,1110,3,6,0)
all cases.
"DATA",364.7,1111,0)
1411^N^157^^^^N
"DATA",364.7,1111,1)
N Z F Z=1:1:3 S IBXDATA=IBXDATA_$S(Z>1:" ",1:"")_$G(^UTILITY("VAPA",$J,Z))
"DATA",364.7,1111,3,0)
^364.73^1^1^3060714^^
"DATA",364.7,1111,3,1,0)
Concatenate all 3 lines of the address together, separated by a space.
"DATA",364.7,1112,0)
1412^N^25^^^^N
"DATA",364.7,1112,1)
S IBXSAVE("PREL")=+IBXDATA,IBXDATA=$S(IBXSAVE("PREL")=1:"X",1:"")
"DATA",364.7,1112,3,0)
^364.73^2^2^3060714^^
"DATA",364.7,1112,3,1,0)
Save the value of patient sex in IBXSAVE variable for later use.  If
"DATA",364.7,1112,3,2,0)
the value is '1' (patient), this field's value is 'X'.
"DATA",364.7,1113,0)
1413^N^5^^^^N
"DATA",364.7,1113,1)
I $G(IBXSAVE("PREL"))=2 S IBXDATA="X"
"DATA",364.7,1113,3,0)
^364.73^3^3^3060714^^
"DATA",364.7,1113,3,1,0)
This field relies on the existence of variable IBXSAVE("PREL")
"DATA",364.7,1113,3,2,0)
previously extracted.  If its value is '2' (spouse), this field's value
"DATA",364.7,1113,3,3,0)
will be 'X'.
"DATA",364.7,1114,0)
1414^N^5^^^^N
"DATA",364.7,1114,1)
I $G(IBXSAVE("PREL"))=3 S IBXDATA="X"
"DATA",364.7,1114,3,0)
^364.73^2^2^3060714^^
"DATA",364.7,1114,3,1,0)
This field relies on the existence of variable IBXSAVE("PREL") previously
"DATA",364.7,1114,3,2,0)
extracted.  If its value is '3' (child), this field's value will be 'X'.
"DATA",364.7,1115,0)
1415^N^5^^^^N
"DATA",364.7,1115,1)
S:$G(IBXSAVE("PREL"))=""!("123"'[$G(IBXSAVE("PREL"))) IBXDATA="X" K IBXSAVE("PREL")
"DATA",364.7,1115,3,0)
^364.73^3^3^3060714^^^
"DATA",364.7,1115,3,1,0)
This field relies on the existence of variable IBXSAVE("PREL") previously
"DATA",364.7,1115,3,2,0)
extracted.  If its value is not a '1', '2', or '3', assume it is other and
"DATA",364.7,1115,3,3,0)
this field's value will be 'X'.
"DATA",364.7,1116,0)
1416^N^4^^^^N
"DATA",364.7,1116,1)
S IBXSAVE("IADR")=IBXDATA
"DATA",364.7,1116,3,0)
^^5^5^3060823^
"DATA",364.7,1116,3,1,0)
If patient is different than the insured, then save the address 
"DATA",364.7,1116,3,2,0)
information.
"DATA",364.7,1116,3,3,0)
 
"DATA",364.7,1116,3,4,0)
esg - 8/23/06 - IB*2*348 - Requirement 3.2.1.8 - Save the address 
"DATA",364.7,1116,3,5,0)
information in all cases.  Remove printing of the word "SAME" in Box 7.
"DATA",364.7,1117,0)
1417^N^5^^^^N
"DATA",364.7,1117,1)
S IBXDATA=$P($G(IBXSAVE("IADR")),U)
"DATA",364.7,1117,3,0)
^^1^1^3060714^
"DATA",364.7,1117,3,1,0)
1500 form, Box 7 - Insured's address
"DATA",364.7,1118,0)
1418^N^61^^^^N
"DATA",364.7,1119,0)
1419^N^62^^^^N
"DATA",364.7,1119,1)
S IBXDATA=$$STATE^IBCEFG1(IBXDATA)
"DATA",364.7,1119,3,0)
^364.73^1^1^3060714^^^
"DATA",364.7,1119,3,1,0)
Output the state abbreviation.
"DATA",364.7,1120,0)
1420^N^68^^^^N
"DATA",364.7,1120,1)
S IBXSAVE("MSTAT")=$$MARITAL^IBCEFG1(+IBXDATA),IBXDATA=$S(IBXSAVE("MSTAT")="I":"X",1:"")
"DATA",364.7,1120,3,0)
^364.73^2^2^3060714^^^^
"DATA",364.7,1120,3,1,0)
Save the value of marital status in IBXSAVE variable for later use.  If
"DATA",364.7,1120,3,2,0)
the value is 'I' (NEVER MARRIED), this field's value is 'X'.
"DATA",364.7,1121,0)
1421^N^5^^^^N
"DATA",364.7,1121,1)
I $G(IBXSAVE("MSTAT"))'="","M"[IBXSAVE("MSTAT") S IBXDATA="X"
"DATA",364.7,1121,3,0)
^364.73^3^3^3060714^^^
"DATA",364.7,1121,3,1,0)
This field relies on the existence of variable IBXSAVE("MSTAT")
"DATA",364.7,1121,3,2,0)
previously extracted. If its value is 'M' (MARRIED), this field's value
"DATA",364.7,1121,3,3,0)
will be 'X'.
"DATA",364.7,1122,0)
1422^N^5^^^^N
"DATA",364.7,1122,1)
S IBXDATA=$S($G(IBXSAVE("MSTAT"))="":"","MI"'[IBXSAVE("MSTAT"):"X",1:"") K IBXSAVE("MSTAT")
"DATA",364.7,1122,3,0)
^364.73^3^3^3060714^^^^
"DATA",364.7,1122,3,1,0)
This field relies on the existence of variable IBXSAVE("MSTAT") previously
"DATA",364.7,1122,3,2,0)
extracted.  If its value is not a 'M', or 'I', assume it must be other and
"DATA",364.7,1122,3,3,0)
this field's value will be 'X'.
"DATA",364.7,1123,0)
1423^N^5^^^^N
"DATA",364.7,1123,1)
S IBXDATA=$P($G(IBXSAVE("IADR")),U,2)
"DATA",364.7,1123,3,0)
^364.73^2^2^3060714^^
"DATA",364.7,1123,3,1,0)
This field relies on the existence of variable IBXSAVE("IADR") previously
"DATA",364.7,1123,3,2,0)
extracted.
"DATA",364.7,1124,0)
1424^N^5^^^^N
"DATA",364.7,1124,1)
S IBXDATA=$P($G(IBXSAVE("IADR")),U,3)
"DATA",364.7,1124,3,0)
^364.73^2^2^3060714^^^
"DATA",364.7,1124,3,1,0)
This field relies on the existence of variable IBXSAVE("IADR") previously
"DATA",364.7,1124,3,2,0)
extracted.  Output the state abbreviation.
"DATA",364.7,1125,0)
1425^N^63
"DATA",364.7,1125,1)
N Y S Y=IBXDATA D ZIPOUT^VAFADDR S IBXDATA=Y
"DATA",364.7,1125,3,0)
^364.73^1^1^3060714^^
"DATA",364.7,1125,3,1,0)
Format zip code as zip plus 4 if needed.
"DATA",364.7,1126,0)
1426^N^64^^^^N
"DATA",364.7,1126,1)
N IBZ S IBZ=$$NOPUNCT^IBCEF(IBXDATA,1) S IBXDATA=$S(IBZ?10N:($E(IBZ,1,3)_" "_$E(IBZ,4,6)_"-"_$E(IBZ,7,10)),1:$J(IBXDATA,14))
"DATA",364.7,1126,3,0)
^^6^6^3060721^
"DATA",364.7,1126,3,1,0)
CMS-1500, Box 5 patient telephone with area code.
"DATA",364.7,1126,3,2,0)
Strip out all punctuation.  If you have exactly 10 numbers left, then 
"DATA",364.7,1126,3,3,0)
format as nnn nnn-nnnn because the form already has the area code 
"DATA",364.7,1126,3,4,0)
parenthesis pre-printed.
"DATA",364.7,1126,3,5,0)
If you have something other than 10 numbers, then just display the raw 
"DATA",364.7,1126,3,6,0)
data right justified so as to not overwrite those pre-printed parenthesis.
"DATA",364.7,1127,0)
1427^N^99^^^^N
"DATA",364.7,1127,1)
S IBXDATA=$S(",1,2,4,6,"[(","_+IBXDATA_","):"X",1:"")
"DATA",364.7,1127,3,0)
^364.73^3^3^3060714^^^^
"DATA",364.7,1127,3,1,0)
If the value of this field is '1' (EMPLOYED FULL TIME), '2' (EMPLOYED
"DATA",364.7,1127,3,2,0)
PART TIME), '4' (SELF EMPLOYED), or '6' (FULL TIME MILITARY), assume
"DATA",364.7,1127,3,3,0)
employed and output this field as 'X'.
"DATA",364.7,1128,0)
1428^N^5^^^^N
"DATA",364.7,1128,1)
S IBXDATA=$P($G(IBXSAVE("IADR")),U,4)
"DATA",364.7,1128,3,0)
^364.73^2^2^3060714^^
"DATA",364.7,1128,3,1,0)
This field relies on the existence of variable IBXSAVE("IADR") previously
"DATA",364.7,1128,3,2,0)
extracted.  Output the insured's zip code.
"DATA",364.7,1129,0)
1429^N^5^^^^N
"DATA",364.7,1129,1)
S IBXDATA=$P($G(IBXSAVE("IDEM")),U,3) I IBXDATA'="" N IBZ S IBZ=$$NOPUNCT^IBCEF(IBXDATA,1),IBXDATA=$S(IBZ?10N:($E(IBZ,1,3)_" "_$E(IBZ,4,6)_"-"_$E(IBZ,7,10)),1:$J(IBXDATA,14))
"DATA",364.7,1129,3,0)
^^2^2^3060823^
"DATA",364.7,1129,3,1,0)
This field relies on the existence of the variable IBXSAVE("IDEM")
"DATA",364.7,1129,3,2,0)
previously extracted.
"DATA",364.7,1130,0)
1430^N^32^^^^N
"DATA",364.7,1130,1)
N IBZ M IBZ=IBXDATA K IBXDATA S IBXDATA=$G(IBZ(1))
"DATA",364.7,1131,0)
1431^N^27^^^^N
"DATA",364.7,1131,1)
N Z S Z=$$WNRBILL^IBEFUNC(IBXIEN,+$$COBN^IBCEF(IBXIEN)) S:Z IBXDATA="NONE" Q:Z  I $$POLICY^IBCEF(IBXIEN,2,$P($G(^DGCR(399,IBXIEN,0)),U,21))="" S IBXDATA=""
"DATA",364.7,1131,3,0)
^364.73^1^1^3060714^^^^
"DATA",364.7,1131,3,1,0)
Only output the group number if the SUBSCRIBER ID field is non-null.
"DATA",364.7,1132,0)
1432^N^33^^^^N
"DATA",364.7,1132,1)
N IBZ M IBZ=IBXDATA K IBXDATA,IBXSAVE("OINUM") D:$G(IBZ(1))="" F^IBCEF("N-OTH INSURED ID","IBZ") S:$E($$OTHINS1^IBCEF2(IBXIEN)) (IBXDATA,IBXSAVE("OINUM"))=$G(IBZ(1))
"DATA",364.7,1132,3,0)
^364.73^6^6^3060714^^^^
"DATA",364.7,1132,3,1,0)
Save the value of other insured group number in IBXSAVE variable for later
"DATA",364.7,1132,3,2,0)
use.  Use the first occurrence of other insured group number for this
"DATA",364.7,1132,3,3,0)
field's value.  If the other insurance is a medigap (MEDICARE WNR is
"DATA",364.7,1132,3,4,0)
before this insurance on the bill), the group # is preceeded by 'MG'
"DATA",364.7,1132,3,5,0)
on output.  If no other insured group number is found, use the other
"DATA",364.7,1132,3,6,0)
insured's policy id number instead.
"DATA",364.7,1133,0)
1433^N^87^^^^N
"DATA",364.7,1133,1)
S IBXSAVE("CONDE")=IBXDATA,IBXDATA=$S(IBXDATA:"X",1:"")
"DATA",364.7,1133,3,0)
^364.73^2^2^3060714^^
"DATA",364.7,1133,3,1,0)
Save the value of condition related to employment in IBXSAVE variable for
"DATA",364.7,1133,3,2,0)
later use.  If this value is 1 (yes), this field's value is 'X'.
"DATA",364.7,1134,0)
1434^N^5^^^^N
"DATA",364.7,1134,1)
S:'$G(IBXSAVE("CONDE")) IBXDATA="X" K IBXSAVE("CONDE")
"DATA",364.7,1134,3,0)
^364.73^3^3^3060714^^
"DATA",364.7,1134,3,1,0)
This field relies on the existence of the IBXSAVE("CONDE") variable
"DATA",364.7,1134,3,2,0)
previously extracted.  If this variable's value is 0 or null, this assumes
"DATA",364.7,1134,3,3,0)
condition is not related and this field's value is 'X'.
"DATA",364.7,1135,0)
1435^N^5^^^^N
"DATA",364.7,1135,1)
S IBXDATA=$$DATE^IBCF2($P($G(IBXSAVE("IDEM")),U),1)
"DATA",364.7,1135,3,0)
^364.73^2^2^3060714^^^^
"DATA",364.7,1135,3,1,0)
This field relies on the existence of the variable IBXSAVE("IDEM")
"DATA",364.7,1135,3,2,0)
previously extracted.  Format the birthdate as MM DD YYYY.
"DATA",364.7,1136,0)
1436^N^5^^^^N
"DATA",364.7,1136,1)
S:$P($G(IBXSAVE("IDEM")),U,2)="M" IBXDATA="X"
"DATA",364.7,1136,3,0)
^364.73^3^3^3060714^^^
"DATA",364.7,1136,3,1,0)
This field relies on the existence of the IBXSAVE("IDEM") variable
"DATA",364.7,1136,3,2,0)
previously extracted.  The second '^' piece contains the sex and if this
"DATA",364.7,1136,3,3,0)
is an 'M', this field's value is 'X'.
"DATA",364.7,1137,0)
1437^N^5^^^^N
"DATA",364.7,1137,1)
S:"M"'[$P($G(IBXSAVE("IDEM")),U,2) IBXDATA="X"
"DATA",364.7,1137,3,0)
^364.73^3^3^3060714^^
"DATA",364.7,1137,3,1,0)
This field relies on the existence of the IBXSAVE("IDEM") variable
"DATA",364.7,1137,3,2,0)
previously extracted.  The second '^' piece contains the sex and if this
"DATA",364.7,1137,3,3,0)
is not an 'M', this field's value is 'X'.
"DATA",364.7,1138,0)
1438^N^28^^^^N
"DATA",364.7,1138,1)
S IBXDATA="" I $O(IBXDATA("")) N Z S Z=$G(IBXDATA(1)) K IBXDATA S IBXSAVE("OIDEM")=Z,IBXDATA=$$DATE^IBCF2($P(Z,U),1)
"DATA",364.7,1138,3,0)
^364.73^2^2^3060714^^^^
"DATA",364.7,1138,3,1,0)
Save the other insured's demographic data in IBXSAVE for later use. Format
"DATA",364.7,1138,3,2,0)
the birthdate as MM DD YYYY.
"DATA",364.7,1139,0)
1439^N^5^^^^N
"DATA",364.7,1139,1)
I $P($G(IBXSAVE("OIDEM")),U,2)="M" S IBXDATA="X"
"DATA",364.7,1139,3,0)
^364.73^3^3^3060714^^
"DATA",364.7,1139,3,1,0)
This field relies on the existence of the IBXSAVE("OIDEM") variable
"DATA",364.7,1139,3,2,0)
previously extracted.  The second '^' piece contains the sex and if this
"DATA",364.7,1139,3,3,0)
is an 'M', this field's value is 'X'.
"DATA",364.7,1140,0)
1440^N^5^^^^N
"DATA",364.7,1140,1)
N Z S Z=$P($G(IBXSAVE("OIDEM")),U,2) S:Z'="M"&(Z'="") IBXDATA="X" K IBXSAVE("OIDEM")
"DATA",364.7,1140,3,0)
^364.73^3^3^3060714^^
"DATA",364.7,1140,3,1,0)
This field relies on the existence of the IBXSAVE("OIDEM") variable
"DATA",364.7,1140,3,2,0)
previously extracted.  The second '^' piece contains the sex and if this
"DATA",364.7,1140,3,3,0)
is not a null and is not an 'M', this field's value is 'X'.
"DATA",364.7,1141,0)
1441^N^88^^^^N
"DATA",364.7,1141,1)
S IBXSAVE("CONDA")=IBXDATA,IBXDATA=$S(IBXDATA:"X",1:"")
"DATA",364.7,1141,3,0)
^364.73^2^2^3060714^^
"DATA",364.7,1141,3,1,0)
Save the value of condition related to auto accident in IBXSAVE variable
"DATA",364.7,1141,3,2,0)
for later use.  If this value is 1 (yes), this field's value is 'X'.
"DATA",364.7,1142,0)
1442^N^5^^^^N
"DATA",364.7,1142,1)
S:'$G(IBXSAVE("CONDA")) IBXDATA="X"
"DATA",364.7,1142,3,0)
^364.73^3^3^3060714^^
"DATA",364.7,1142,3,1,0)
This field relies on the existence of the IBXSAVE("CONDA") variable
"DATA",364.7,1142,3,2,0)
previously extracted.  If this variable's value is 0 or null, this assumes
"DATA",364.7,1142,3,3,0)
condition is not related and this field's value is 'X'.
"DATA",364.7,1143,0)
1443^N^159^^^^N
"DATA",364.7,1143,1)
S IBXDATA=$$STATE^IBCEFG1(IBXDATA) K IBXSAVE("CONDA")
"DATA",364.7,1143,3,0)
^364.73^1^1^3060714^^^^
"DATA",364.7,1143,3,1,0)
Output state abbreviation.
"DATA",364.7,1144,0)
1444^N^7^^^^N
"DATA",364.7,1144,1)
S IBXDATA=$P(IBXDATA,U)
"DATA",364.7,1144,3,0)
^364.73^1^1^3060714^^^^
"DATA",364.7,1144,3,1,0)
Employer name is the first '^' piece of field's value.
"DATA",364.7,1145,0)
1445^N^30^^^^N
"DATA",364.7,1145,1)
S IBXDATA="" I $O(IBXDATA("")) N Z S Z=$G(IBXDATA(1)) K IBXDATA S IBXDATA=$P(Z,U)
"DATA",364.7,1145,3,0)
^364.73^2^2^3060714^^^^
"DATA",364.7,1145,3,1,0)
Use the first occurrence of other insured employer information.  The first
"DATA",364.7,1145,3,2,0)
'^' piece is the employer's name.
"DATA",364.7,1146,0)
1446^N^89^^^^N
"DATA",364.7,1146,1)
S IBXSAVE("CONDOA")=IBXDATA,IBXDATA=$S(IBXDATA:"X",1:"")
"DATA",364.7,1146,3,0)
^364.73^2^2^3060714^^
"DATA",364.7,1146,3,1,0)
Save the value of condition related to other accident in IBXSAVE variable
"DATA",364.7,1146,3,2,0)
for later use.  If this value is 1 (yes), this field's value is 'X'.
"DATA",364.7,1147,0)
1447^N^5^^^^N
"DATA",364.7,1147,1)
S:'$G(IBXSAVE("CONDOA")) IBXDATA="X" K IBXSAVE("CONDOA")
"DATA",364.7,1147,3,0)
^364.73^3^3^3060714^^
"DATA",364.7,1147,3,1,0)
This field relies on the existence of the IBXSAVE("CONDOA") variable
"DATA",364.7,1147,3,2,0)
previously extracted.  If this variable's value is 0 or null, this assumes
"DATA",364.7,1147,3,3,0)
condition is not related and this field's value is 'X'.
"DATA",364.7,1148,0)
1448^N^26^^^^N
"DATA",364.7,1149,0)
1449^N^31^^^^N
"DATA",364.7,1149,1)
K IBXSAVE("OINUM") S IBXDATA="" I $O(IBXDATA("")) N C,Z,Z0 S C=$$OTHINS1^IBCEF2(IBXIEN),Z=$G(IBXDATA(1)) K IBXDATA I $E(C) S IBXDATA=$S($$MCRWNR^IBEFUNC(+$G(^DGCR(399,IBXIEN,"I"_$E(C)))):"MEDICARE",$P(Z,U,2):$P($G(^DIC(36,+Z,0)),U),1:$P(Z,U))
"DATA",364.7,1149,3,0)
^364.73^6^6^3060714^^^^
"DATA",364.7,1149,3,1,0)
Use the first occurrence of other insured group name.  The first '^' piece
"DATA",364.7,1149,3,2,0)
of this value has either the group name or the insurance company pointer.
"DATA",364.7,1149,3,3,0)
If the second '^' piece is a 1, the insurance company name is extracted
"DATA",364.7,1149,3,4,0)
using the insurance company pointer in the first '^' piece, otherwise, the
"DATA",364.7,1149,3,5,0)
name in the first '^' piece is output.
"DATA",364.7,1149,3,6,0)
MEDICARE WNR always outputs MEDICARE.
"DATA",364.7,1150,0)
1450^N^5^^^^N
"DATA",364.7,1150,3,0)
^^3^3^3060721^
"DATA",364.7,1150,3,1,0)
CMS-1500, BOX 10d.  RESERVED FOR LOCAL USE.
"DATA",364.7,1150,3,2,0)
 
"DATA",364.7,1150,3,3,0)
Not currently used.
"DATA",364.7,1151,0)
1451^N^144^^^^N
"DATA",364.7,1151,1)
S IBXSAVE("OI")=IBXDATA,IBXDATA=$S(IBXDATA:"X",1:"")
"DATA",364.7,1151,3,0)
^364.73^2^2^3060714^^
"DATA",364.7,1151,3,1,0)
Save the other insurance exists data in the IBXSAVE variable for later
"DATA",364.7,1151,3,2,0)
use.  If the value is 1, output an 'X'.
"DATA",364.7,1152,0)
1452^N^5^^^^N
"DATA",364.7,1152,1)
S:'$G(IBXSAVE("OI")) IBXDATA="X" K IBXSAVE("OI")
"DATA",364.7,1152,3,0)
^364.73^3^3^3060714^^
"DATA",364.7,1152,3,1,0)
This field relies on the existence of the IBXSAVE("OI") variable
"DATA",364.7,1152,3,2,0)
previously extracted.  If the value of this data element is null or 0,
"DATA",364.7,1152,3,3,0)
output an 'X' in this field
"DATA",364.7,1153,0)
1453^N^145^^^^N
"DATA",364.7,1153,1)
N IBZ D F^IBCEF("N-ROI INDICATOR","IBZ") S:IBZ IBXDATA="MODIFIED/RESTRICTED RELEASE "_IBXDATA S:$L(IBXDATA)<35 IBXDATA=$J("",3)_IBXDATA
"DATA",364.7,1154,0)
1454^N^146^^^^N
"DATA",364.7,1154,1)
S IBXDATA=$J("",3)_IBXDATA
"DATA",364.7,1155,0)
1455^N^65^^^^N
"DATA",364.7,1155,1)
N Z S Z=$$NAME^IBCEFG1(IBXDATA),IBXDATA=$P(Z,U,2)_" "_$S($P(Z,U,3)'="":$E($P(Z,U,3))_" ",1:"")_$P(Z,U)
"DATA",364.7,1155,3,0)
^364.73^1^1^3060717^^
"DATA",364.7,1155,3,1,0)
Output the patient's name as the signature first middle last name.
"DATA",364.7,1156,0)
1456^N^71^^^^N
"DATA",364.7,1156,1)
S IBXDATA=$$FMTE^XLFDT(IBXDATA,"5D")
"DATA",364.7,1156,3,0)
^364.73^1^1^3060717^^^^
"DATA",364.7,1156,3,1,0)
Format data element in MM/DD/CCYY date format.
"DATA",364.7,1157,0)
1457^N^2^^^^N
"DATA",364.7,1157,1)
N Z S Z=$$NAME^IBCEFG1(IBXDATA),IBXDATA=$P(Z,U,2)_" "_$S($P(Z,U,3)'="":$E($P(Z,U,3))_" ",1:"")_$P(Z,U)
"DATA",364.7,1157,3,0)
^364.73^2^2^3060717^^^
"DATA",364.7,1157,3,1,0)
Output the current insured's name as the signature first name, middle name
"DATA",364.7,1157,3,2,0)
last name
"DATA",364.7,1158,0)
1458^N^232^^^^N
"DATA",364.7,1158,1)
S IBXDATA=$$DATE^IBCF2(IBXDATA,1)
"DATA",364.7,1158,3,0)
^364.73^1^1^3060717^^^^
"DATA",364.7,1158,3,1,0)
Format date as MM DD YYYY.
"DATA",364.7,1159,0)
1459^N^90^^^^N
"DATA",364.7,1159,1)
S IBXDATA=$$DATE^IBCF2(IBXDATA,1)
"DATA",364.7,1159,3,0)
^364.73^1^1^3060717^^^^
"DATA",364.7,1159,3,1,0)
Format date as MM DD YYYY.
"DATA",364.7,1160,0)
1460^N^93^^^^N
"DATA",364.7,1160,1)
S IBXDATA=$$DATE^IBCF2(IBXDATA,1)
"DATA",364.7,1160,3,0)
^364.73^1^1^3060717^^^^
"DATA",364.7,1160,3,1,0)
Format date as MM DD YYYY.
"DATA",364.7,1161,0)
1461^N^94^^^^N
"DATA",364.7,1161,1)
S IBXDATA=$$DATE^IBCF2(IBXDATA,1)
"DATA",364.7,1161,3,0)
^364.73^1^1^3060717^^^^
"DATA",364.7,1161,3,1,0)
Format date as MM DD YYYY.
"DATA",364.7,1162,0)
1462^N^5^^^^N
"DATA",364.7,1162,1)
S IBXSAVE("BOX 17")=$$CFIDS^IBCEF77(IBXIEN,1),IBXDATA=$P(IBXSAVE("BOX 17"),U,1)
"DATA",364.7,1162,3,0)
^^8^8^3060825^
"DATA",364.7,1162,3,1,0)
cms-1500, box 17a/1, 2 character qualifier for the Referring provider 
"DATA",364.7,1162,3,2,0)
other ID (non-NPI ID).
"DATA",364.7,1162,3,3,0)
 
"DATA",364.7,1162,3,4,0)
IBXSAVE("BOX 17") is a 3 piece string which will be used for all of Box 
"DATA",364.7,1162,3,5,0)
17.
"DATA",364.7,1162,3,6,0)
[1] default secondary ID qualifier
"DATA",364.7,1162,3,7,0)
[2] default secondary ID
"DATA",364.7,1162,3,8,0)
[3] referring provider npi
"DATA",364.7,1163,0)
1463^N^5^^^^N
"DATA",364.7,1163,1)
S IBXDATA=$P($G(IBXSAVE("BOX 17")),U,2)
"DATA",364.7,1163,3,0)
^364.73^8^8^3060825^^
"DATA",364.7,1163,3,1,0)
CMS-1500, Box 17a/2, Referring Provider other ID number (non NPI ID 
"DATA",364.7,1163,3,2,0)
number).  
"DATA",364.7,1163,3,3,0)
 
"DATA",364.7,1163,3,4,0)
IBXSAVE("BOX 17") is a 3 piece string which will be used for all of Box
"DATA",364.7,1163,3,5,0)
17.
"DATA",364.7,1163,3,6,0)
[1] default secondary ID qualifier
"DATA",364.7,1163,3,7,0)
[2] default secondary ID
"DATA",364.7,1163,3,8,0)
[3] referring provider npi
"DATA",364.7,1164,0)
1464^N^240^^^^N
"DATA",364.7,1165,0)
1465^N^5^^^^N
"DATA",364.7,1165,1)
S IBXDATA=$P($G(IBXSAVE("BOX 17")),U,3) KILL IBXSAVE("BOX 17")
"DATA",364.7,1165,3,0)
^^9^9^3060825^
"DATA",364.7,1165,3,1,0)
NPI# of Referring Physician
"DATA",364.7,1165,3,2,0)
 
"DATA",364.7,1165,3,3,0)
IBXSAVE("BOX 17") is a 3 piece string which will be used for all of Box
"DATA",364.7,1165,3,4,0)
17.
"DATA",364.7,1165,3,5,0)
[1] default secondary ID qualifier
"DATA",364.7,1165,3,6,0)
[2] default secondary ID
"DATA",364.7,1165,3,7,0)
[3] referring provider npi
"DATA",364.7,1165,3,8,0)
 
"DATA",364.7,1165,3,9,0)
Since this is the last field in box 17, kill this variable.
"DATA",364.7,1166,0)
1466^N^147^^^^N
"DATA",364.7,1166,1)
S IBXDATA=$$DATE^IBCF2(IBXDATA,1)
"DATA",364.7,1166,3,0)
^364.73^1^1^3060717^^^^
"DATA",364.7,1166,3,1,0)
'From' date is the first '^' piece of this data.  Format date as MM DD YYYY.
"DATA",364.7,1167,0)
1467^N^160^^^^N
"DATA",364.7,1167,1)
D:'IBXDATA&'$$INPAT^IBCEF(IBXIEN,1) F^IBCEF("N-STATEMENT COVERS TO DATE",,,IBXIEN) S IBXDATA=$$DATE^IBCF2(IBXDATA,1)
"DATA",364.7,1167,3,0)
^364.73^2^2^3060717^^^^
"DATA",364.7,1167,3,1,0)
If there is no date in IBXDATA, set it to Statement Covers To Date then 
"DATA",364.7,1167,3,2,0)
format the resulted date.
"DATA",364.7,1168,0)
1468^N^148
"DATA",364.7,1168,1)
S IBXSAVE("BOX19")=$S($L(IBXDATA)<49:$J("",48),$L(IBXDATA)<84:$J("",13),1:"")_IBXDATA,IBXDATA=$E(IBXSAVE("BOX19"),1,48)
"DATA",364.7,1168,3,0)
^364.73^1^1^3060717^^^^
"DATA",364.7,1168,3,1,0)
This field holds the 1st through 48th characters of the box's data.
"DATA",364.7,1169,0)
1469^N^5^^^^N
"DATA",364.7,1169,1)
D:'$D(IBXSAVE("BOX19")) F^IBCEF("N-HCFA 1500 BOX 19",,,IBXIEN) S IBXDATA=$E($G(IBXSAVE("BOX19")),49,96) K IBXSAVE("BOX19")
"DATA",364.7,1169,3,0)
^364.73^2^2^3060717^^^^
"DATA",364.7,1169,3,1,0)
If the array that holds the entire box 19 data is not defined, extract it.
"DATA",364.7,1169,3,2,0)
This field will hold the 49th through 96th characters of the box's data.
"DATA",364.7,1170,0)
1470^N^150^^^^N
"DATA",364.7,1170,1)
S IBXDATA=$S(IBXDATA:"X",1:"")
"DATA",364.7,1170,3,0)
^^4^4^3060719^
"DATA",364.7,1170,3,1,0)
cms-1500, box 20 Outside Lab=YES
"DATA",364.7,1170,3,2,0)
If the value of the data element is true, then it is an outside lab, so 
"DATA",364.7,1170,3,3,0)
an "X" should display.  Otherwise, it is not an outside lab so nothing 
"DATA",364.7,1170,3,4,0)
should display in the Yes box.
"DATA",364.7,1171,0)
1471^N^283^^^^N
"DATA",364.7,1171,1)
K IBXDATA S:$G(IBXSAVE("OLAB")) IBXDATA=$$DOL^IBCEF77($G(IBXSAVE("OLAB")),9) K IBXSAVE("OLAB")
"DATA",364.7,1171,3,0)
^^1^1^3060915^
"DATA",364.7,1171,3,1,0)
Format the amount in 9 characters with 2 decimals.
"DATA",364.7,1172,0)
1472^N^282^^^^N
"DATA",364.7,1172,1)
S IBXDATA=$S('IBXDATA:"",1:$$DOL^IBCEF77(IBXDATA,9)) K IBXDATA
"DATA",364.7,1172,3,0)
^^6^6^3060915^
"DATA",364.7,1172,3,1,0)
Format data in 9 characters with 2 decimals.
"DATA",364.7,1172,3,2,0)
 
"DATA",364.7,1172,3,3,0)
The 1500 instruction manual says that this area should always be left 
"DATA",364.7,1172,3,4,0)
blank, but there was existing code here for some reason.  For now, the 
"DATA",364.7,1172,3,5,0)
field usage is being discontinued, but the software is not being removed 
"DATA",364.7,1172,3,6,0)
in case it is needed in the future.
"DATA",364.7,1173,0)
1473^N^86^^^^N
"DATA",364.7,1173,1)
N IB,IBCT M IB=IBXDATA K IBXDATA X "N Z S (Z,IBCT)=0 F  S Z=$O(IB(Z)) Q:'Z  I $G(IB(Z)) S IBCT=IBCT+1 M IBXSAVE(""DX"",IBCT)=IB(Z)" S IBXDATA=$P($G(^ICD9(+$G(IBXSAVE("DX",1)),0)),U) D PGDX^IBCEF31(1,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1173,3,0)
^364.73^4^4^3060717^^^^
"DATA",364.7,1173,3,1,0)
Save the diagnoses in the IBXSAVE array for later use. Output the
"DATA",364.7,1173,3,2,0)
diagnosis code for the first diagnosis. Check for any diagnosis codes
"DATA",364.7,1173,3,3,0)
that should display in the first position on pages subsequent to page 1
"DATA",364.7,1173,3,4,0)
and output them.
"DATA",364.7,1174,0)
1474^N^163^^^^N
"DATA",364.7,1174,1)
S IBXDATA=$P($G(^ICD9(+IBXDATA,0)),U) D PGDX^IBCEF31(3,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1174,3,0)
^364.73^3^3^3060717^^^^
"DATA",364.7,1174,3,1,0)
Output the third diagnosis code. Check for any diagnosis codes that should
"DATA",364.7,1174,3,2,0)
display in the third position on pages subsequent to page 1 and output
"DATA",364.7,1174,3,3,0)
them.
"DATA",364.7,1175,0)
1475^N^5^^^^N
"DATA",364.7,1176,0)
1476^N^5^^^^N
"DATA",364.7,1177,0)
1477^N^162^^^^N
"DATA",364.7,1177,1)
S IBXDATA=$P($G(^ICD9(+IBXDATA,0)),U) D PGDX^IBCEF31(2,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1177,3,0)
^364.73^3^3^3060717^^^^
"DATA",364.7,1177,3,1,0)
Output the second diagnosis code.  Check for any diagnosis codes that should
"DATA",364.7,1177,3,2,0)
display in the second position on pages subsequent to page 1 and output
"DATA",364.7,1177,3,3,0)
them.
"DATA",364.7,1178,0)
1478^N^164^^^^N
"DATA",364.7,1178,1)
S IBXDATA=$P($G(^ICD9(+IBXDATA,0)),U) D PGDX^IBCEF31(4,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE) K IBXSAVE("DX")
"DATA",364.7,1178,3,0)
^364.73^3^3^3060717^^^^
"DATA",364.7,1178,3,1,0)
Output the forth diagnosis code. Check for any diagnosis codes that should
"DATA",364.7,1178,3,2,0)
display in the forth position on pages subsequent to page 1 and output
"DATA",364.7,1178,3,3,0)
them.
"DATA",364.7,1179,0)
1479^N^262^^^^N
"DATA",364.7,1179,1)
I $$OLAB^IBCEU(IBXIEN) N IBZ S IBZ=IBXDATA D F^IBCEF("N-LAB CLIA #",,,IBXIEN) I IBXDATA="",IBZ'="" S IBXDATA=IBZ
"DATA",364.7,1179,3,0)
^364.73^2^2^3060717^^^^
"DATA",364.7,1179,3,1,0)
If the bill is for services rendered at an outside lab, get the CLIA number.
"DATA",364.7,1179,3,2,0)
If this # is not available, use the prior authorization #.
"DATA",364.7,1180,0)
1480^N^5^^^^N
"DATA",364.7,1180,1)
I '$O(IBXSAVE("BOX24",0)) D B24^IBCEF3(.IBXSAVE,IBXIEN,1)
"DATA",364.7,1180,3,0)
^364.73^1^1^3060717^^^^
"DATA",364.7,1180,3,1,0)
If array doesn't already exist, extract it
"DATA",364.7,1181,0)
1481^N^165^^^^N
"DATA",364.7,1181,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1181,3,0)
^364.73^2^2^3060717^^^^
"DATA",364.7,1181,3,1,0)
If more than 6 service dates (12 lines) exist
"DATA",364.7,1181,3,2,0)
for the bill, this outputs the rest on additional bill pages.
"DATA",364.7,1182,0)
1482^N^166^^^^N
"DATA",364.7,1182,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1182,3,0)
^364.73^2^2^3060717^^^^
"DATA",364.7,1182,3,1,0)
If more than 6 service dates (12 lines) exists for the bill, this outputs
"DATA",364.7,1182,3,2,0)
the rest on additional bill pages.
"DATA",364.7,1183,0)
1483^N^167^^^^N
"DATA",364.7,1183,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1183,3,0)
^364.73^2^2^3060717^^^^
"DATA",364.7,1183,3,1,0)
If more than 6 service dates (12 lines) exists for the bill, this outputs
"DATA",364.7,1183,3,2,0)
the rest on additional bill pages.
"DATA",364.7,1184,0)
1484^N^229^^^^N
"DATA",364.7,1184,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1184,3,0)
^^2^2^3060816^
"DATA",364.7,1184,3,1,0)
If more than 6 service dates (12 lines) exists for the bill, this outputs
"DATA",364.7,1184,3,2,0)
the rest on additional bill pages.
"DATA",364.7,1185,0)
1485^N^169^^^^N
"DATA",364.7,1185,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1185,3,0)
^364.73^2^2^3060816^^^^
"DATA",364.7,1185,3,1,0)
If more than 6 service dates (12 lines) exists for the bill, this outputs
"DATA",364.7,1185,3,2,0)
the rest on additional bill pages.
"DATA",364.7,1186,0)
1486^N^170^^^^N
"DATA",364.7,1186,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1186,3,0)
^364.73^2^2^3060717^^^
"DATA",364.7,1186,3,1,0)
If more than 6 service dates (12 lines) exist for the bill, this outputs
"DATA",364.7,1186,3,2,0)
the rest on additional bill pages.
"DATA",364.7,1187,0)
1487^N^171^^^^N
"DATA",364.7,1187,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1187,3,0)
^^2^2^3060816^
"DATA",364.7,1187,3,1,0)
If more than 6 service dates (12 lines) exist for the bill, this outputs
"DATA",364.7,1187,3,2,0)
the rest on additional bill pages.
"DATA",364.7,1188,0)
1488^N^172^^^^N
"DATA",364.7,1188,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1188,3,0)
^^2^2^3060816^
"DATA",364.7,1188,3,1,0)
If more than 6 service dates (12 lines) exist for the bill, this outputs
"DATA",364.7,1188,3,2,0)
the rest on additional bill pages.
"DATA",364.7,1189,0)
1489^N^174^^^^N
"DATA",364.7,1189,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1189,3,0)
^364.73^2^2^3060717^^^^
"DATA",364.7,1189,3,1,0)
If more than 6 service dates (12 lines) exists for the bill, this outputs
"DATA",364.7,1189,3,2,0)
the rest on additional bill pages.
"DATA",364.7,1190,0)
1490^N^188^^^^N
"DATA",364.7,1190,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1190,3,0)
^364.73^2^2^3060816^^^^
"DATA",364.7,1190,3,1,0)
If more than 6 service dates (12 lines) exists for the bill, this outputs
"DATA",364.7,1190,3,2,0)
the rest on additional bill pages.
"DATA",364.7,1191,0)
1491^N^189^^^^N
"DATA",364.7,1191,1)
N Z S Z=12 F  S Z=$O(IBXDATA(Z)) Q:'Z  D PG^IBCEF3(IBXDATA(Z),Z)
"DATA",364.7,1191,3,0)
^364.73^2^2^3060816^^^^
"DATA",364.7,1191,3,1,0)
If more than 6 service dates (12 lines) exists for the bill, this outputs
"DATA",364.7,1191,3,2,0)
the rest on additional bill pages.
"DATA",364.7,1192,0)
1492^N^5^^^^N
"DATA",364.7,1192,1)
K IBXSAVE("DX"),IBXSAVE("BOX24"),IBXSAVE("OCC"),IBXSAVE("OCCS"),IBXSAVE("IDEM"),IBXSAVE("IADR")
"DATA",364.7,1192,3,0)
^364.73^1^1^3060718^^^^
"DATA",364.7,1192,3,1,0)
Clean up IBXSAVE array.
"DATA",364.7,1193,0)
1493^N^109^^^^N
"DATA",364.7,1194,0)
1494^N^151^^^^N
"DATA",364.7,1195,0)
1495^N^210^^^^N
"DATA",364.7,1196,0)
1496^N^24^^^^N
"DATA",364.7,1196,1)
N Z S Z=$S(IBXDATA=""!("Nn0"'[IBXDATA):1,1:6) S IBXDATA=$J("X",Z)
"DATA",364.7,1196,3,0)
^364.73^2^2^3060718^^^^
"DATA",364.7,1196,3,1,0)
Print indicator of ASSIGNMENT OF BENEFITS.  Check Yes if data element value
"DATA",364.7,1196,3,2,0)
returned is null or is not 0,'n', or 'N', otherwise check No.
"DATA",364.7,1197,0)
1497^N^95^^^^N
"DATA",364.7,1197,1)
S IBXSAVE("TOT")=IBXDATA K IBXDATA I $O(^TMP("IBXDATA",$J,IBXREC,""),-1)'>1 S IBXDATA=$$DOL^IBCEF77(IBXSAVE("TOT"),9)
"DATA",364.7,1197,3,0)
^364.73^3^3^3060825^^
"DATA",364.7,1197,3,1,0)
Save the total charges in IBXSAVE array for later use.  If
"DATA",364.7,1197,3,2,0)
total is not null, output as numeric with 2 decimal places.
"DATA",364.7,1197,3,3,0)
Only output totals on last page of form.
"DATA",364.7,1198,0)
1498^N^5^^^^N
"DATA",364.7,1198,1)
S IBXSAVE("PAID")=0 K IBXDATA I $O(^TMP("IBXDATA",$J,IBXREC,""),-1)'>1 S IBXDATA=$$DOL^IBCEF77(IBXSAVE("PAID"),8) K IBXSAVE("PAID")
"DATA",364.7,1198,3,0)
^364.73^2^2^3060825^^^^
"DATA",364.7,1198,3,1,0)
This field is the prior amounts the patient has paid.  This will always
"DATA",364.7,1198,3,2,0)
be 0 unless VA changes policy.
"DATA",364.7,1199,0)
1499^N^173^^^^N
"DATA",364.7,1199,1)
S IBXSAVE("BDUE")=IBXDATA K IBXDATA I $O(^TMP("IBXDATA",$J,IBXREC,""),-1)'>1 S IBXDATA=$$DOL^IBCEF77(IBXSAVE("BDUE"),8) K IBXSAVE("BDUE"),IBXSAVE("PTOT"),IBXSAVE("TOT")
"DATA",364.7,1199,3,0)
^^2^2^3060825^
"DATA",364.7,1199,3,1,0)
If not 0, output as numeric with 2 decimals.
"DATA",364.7,1199,3,2,0)
Only output total on last page of form.
"DATA",364.7,1200,0)
1500^N^5^^^^N
"DATA",364.7,1200,1)
N Z,IBZ S Z=$G(^IBE(350.9,1,2)),IBXDATA=$P(Z,U,11) S:IBXDATA="" IBXDATA=$P(Z,U,6) S IBZ=$$NOPUNCT^IBCEF(IBXDATA,1),IBXDATA=$S(IBZ?10N:($E(IBZ,1,3)_" "_$E(IBZ,4,6)_"-"_$E(IBZ,7,10)),1:$J(IBXDATA,13))
"DATA",364.7,1200,3,0)
^^6^6^3060825^
"DATA",364.7,1200,3,1,0)
Billing provider phone number.
"DATA",364.7,1200,3,2,0)
Check first for the 2.11 field in file 350.9:  SITE CONTACT PHONE NUMBER
"DATA",364.7,1200,3,3,0)
If 2.11 is blank, then check the 2.06 field in file 350.9:  AGENT CASHIER 
"DATA",364.7,1200,3,4,0)
PHONE NUMBER
"DATA",364.7,1200,3,5,0)
 
"DATA",364.7,1200,3,6,0)
Format the phone# for printing in Box33, upper right hand corner.
"DATA",364.7,1201,0)
1501^N^275^^^^N
"DATA",364.7,1201,1)
N A,Z K IBXSAVE("OFAC") S A=IBXDATA,Z=$P(A,U,2),IBXSAVE("IBFAC")=+A,IBXDATA=$$GETFAC^IBCEP8(+A,+Z,0) S:Z IBXSAVE("OFAC")=1
"DATA",364.7,1201,3,0)
^^6^6^3060825^
"DATA",364.7,1201,3,1,0)
This returns the name of the INSTITUTION file entry for the non-VA or
"DATA",364.7,1201,3,2,0)
remote site where care was rendered.  Save the ien in IBXSAVE("IBFAC") for
"DATA",364.7,1201,3,3,0)
later use.
"DATA",364.7,1201,3,4,0)
 
"DATA",364.7,1201,3,5,0)
esg - 8/25/06 - IB*2*348 - Always print the name/address of the service 
"DATA",364.7,1201,3,6,0)
facility.  Never print 'SAME'.
"DATA",364.7,1202,0)
1502^N^296^^^^N
"DATA",364.7,1202,3,0)
^364.73^1^1^3060825^^^
"DATA",364.7,1202,3,1,0)
This is the constant we will use as the name of the billing entity.
"DATA",364.7,1203,0)
1503^N^83^^^^N
"DATA",364.7,1203,1)
S IBXSAVE("BOX31")=IBXDATA,IBXDATA=$$NAME31^IBCF2(IBXIEN,IBXDATA)
"DATA",364.7,1203,3,0)
^^2^2^3060908^
"DATA",364.7,1203,3,1,0)
Formats the name in 21 spaces for block 31 of the 1500.
"DATA",364.7,1203,3,2,0)
IBXSAVE("BOX31") is the name in format Last,first mi^ien in file 200
"DATA",364.7,1206,0)
1506^N^5^^^^N
"DATA",364.7,1206,1)
S IBXDATA=$$GETFAC^IBCEP8(+$G(IBXSAVE("IBFAC")),+$G(IBXSAVE("OFAC")),12)
"DATA",364.7,1206,3,0)
^364.73^3^3^3060825^^^^
"DATA",364.7,1206,3,1,0)
Extract the street address for the rendering facility.  Relies on the
"DATA",364.7,1206,3,2,0)
existence of the array IBXSAVE("IBFAC") extracted previously by the
"DATA",364.7,1206,3,3,0)
rendering facility name field.
"DATA",364.7,1207,0)
1507^N^104^^^^N
"DATA",364.7,1207,1)
N IBZ D F^IBCEF("N-AGENT CASHIER MAIL SYMBOL","IBZ",,IBXIEN) I $G(IBZ)'="" S IBXDATA=IBXDATA_" "_IBZ
"DATA",364.7,1207,3,0)
^364.73^2^2^3060718^^^^
"DATA",364.7,1207,3,1,0)
Concatenate Agent Cashier Mail Symbol to the end of Agent Cashier Street
"DATA",364.7,1207,3,2,0)
Address.
"DATA",364.7,1208,0)
1508^N^209^^^^N
"DATA",364.7,1208,1)
N A,P,Q,Z S Q=IBXIEN,Z=$$DATE31^IBCF2(IBXDATA,Q),A=$G(IBXSAVE("BOX31")) D GETPRV^IBCEU(Q,3,.P) S P=$G(P(3,1)),A=$S($P(P,U,4)'="":$P(P,U,4),'$D(^DGCR(399,Q,"PRV",0)):$E($P(P,U),22,42),1:$$CRED^IBCEU($P(P,U,3),Q,,3)),IBXDATA=A_$J("",11-$L(A))_Z
"DATA",364.7,1208,3,0)
^364.73^2^2^3060718^^^^
"DATA",364.7,1208,3,1,0)
Print credentials left justified and date right justified. Format date as
"DATA",364.7,1208,3,2,0)
MM/DD/YYYY.
"DATA",364.7,1209,0)
1509^N^5^^^^N
"DATA",364.7,1209,1)
S IBXDATA=$$GETFAC^IBCEP8(+$G(IBXSAVE("IBFAC")),+$G(IBXSAVE("OFAC")),3)
"DATA",364.7,1209,3,0)
^364.73^3^3^3060825^^^^
"DATA",364.7,1209,3,1,0)
Extract the city, state abbreviation and zip code for the rendering
"DATA",364.7,1209,3,2,0)
facility.  Relies on the existence of the array IBXSAVE("IBFAC") extracted
"DATA",364.7,1209,3,3,0)
previously by the rendering facility name field.
"DATA",364.7,1210,0)
1510^N^105^^^^N
"DATA",364.7,1210,1)
S IBXSAVE("ACCITY")=IBXDATA
"DATA",364.7,1210,3,0)
^364.73^1^1^3060718^^
"DATA",364.7,1210,3,1,0)
Save the data in the IBXSAVE array for later use.
"DATA",364.7,1211,0)
1511^N^106^^^^N
"DATA",364.7,1211,1)
S IBXSAVE("ACSTATE")=IBXDATA
"DATA",364.7,1211,3,0)
^364.73^1^1^3060718^^
"DATA",364.7,1211,3,1,0)
Save the data in the IBXSAVE array for later use.
"DATA",364.7,1212,0)
1512^N^107^^^^N
"DATA",364.7,1212,1)
S IBXSAVE("ACZIP")=$E(IBXDATA,1,5)_$S($E(IBXDATA,6,9)'="":"-"_$E(IBXDATA,6,9),1:"")
"DATA",364.7,1212,3,0)
^364.73^1^1^3060718^^
"DATA",364.7,1212,3,1,0)
Save the data in the IBXSAVE array for later use.
"DATA",364.7,1213,0)
1513^N^5^^^^N
"DATA",364.7,1213,1)
N Z S Z=$$STATE^IBCEFG1($G(IBXSAVE("ACSTATE")))_" "_$G(IBXSAVE("ACZIP")),IBXDATA=$E($G(IBXSAVE("ACCITY")),1,29-2-$L(Z))_", "_Z F Z="ACCITY","ACSTATE","ACZIP" K IBXSAVE(Z)
"DATA",364.7,1213,3,0)
^364.73^5^5^3060825^^^^
"DATA",364.7,1213,3,1,0)
This data relies on the existence of the IBXSAVE("ACCITY"),
"DATA",364.7,1213,3,2,0)
IBXSAVE("ACSTATE") and IBXSAVE("ACZIP") variables previously extracted.
"DATA",364.7,1213,3,3,0)
The data consists of the city concatenated with a , and space, the state
"DATA",364.7,1213,3,4,0)
abbreviation, a space and the zip code.  The city name is shortened to fit
"DATA",364.7,1213,3,5,0)
in the whole state and zip in the space allowed.
"DATA",364.7,1214,0)
1514^N^5^^^^N
"DATA",364.7,1214,1)
I '$D(^DGCR(399,IBXIEN,"PRV",0)) S IBXDATA=$E($P($G(IBXSAVE("BOX31")),U),43,63)
"DATA",364.7,1214,3,0)
^^1^1^3060908^
"DATA",364.7,1214,3,1,0)
This line is no longer printed on the standard 1500.
"DATA",364.7,1215,0)
1515^N^275^^^^N
"DATA",364.7,1215,1)
N IBZ,IBZ1 S IBZ=$P(IBXDATA,U,2),IBZ1="" D:$D(^IBA(364.5,"B","N-ORGANIZATION NPI CODES")) F^IBCEF("N-ORGANIZATION NPI CODES","IBZ1",,IBXIEN) S IBXDATA=$S(IBZ=1:$P(IBZ1,U,2),IBZ=0:$P(IBZ1,U,1),1:$P(IBZ1,U,3)),IBXSAVE("NPISVC")=IBXDATA
"DATA",364.7,1215,3,0)
^^11^11^3060823^
"DATA",364.7,1215,3,1,0)
CMS-1500 form, Box 32a.
"DATA",364.7,1215,3,2,0)
Service Facility NPI#
"DATA",364.7,1215,3,3,0)
 
"DATA",364.7,1215,3,4,0)
Determine the Rendering Institution Flag [2] of IBXDATA.
"DATA",364.7,1215,3,5,0)
 
"DATA",364.7,1215,3,6,0)
1 means the service facility is the non-VA facilty
"DATA",364.7,1215,3,7,0)
0 means the service facility is the CBOC/Division
"DATA",364.7,1215,3,8,0)
"" means the service facility is the main VAMC facility
"DATA",364.7,1215,3,9,0)
 
"DATA",364.7,1215,3,10,0)
Set IBXDATA equal to the appropriate piece of the organizational NPI 
"DATA",364.7,1215,3,11,0)
string.
"DATA",364.7,1216,0)
1516^N^5^^^^N
"DATA",364.7,1216,1)
N IBX,IBY,IBZ S IBY=$$PRTLID^IBCEF77(IBXIEN,$G(IBXSAVE("NPISVC"))) K IBXSAVE("NPISVC"),IBXDATA I IBY D ALLIDS^IBCEF75(IBXIEN,.IBZ,1) S IBX=$G(IBZ("LAB/FAC",IBXIEN,"C",1,1)),IBXDATA=$P(IBX,U,1)_$P(IBX,U,2)
"DATA",364.7,1216,3,0)
^^2^2^3060830^
"DATA",364.7,1216,3,1,0)
1500, Box 32b.  Accommodate the reporting of other ID numbers.
"DATA",364.7,1216,3,2,0)
Enter the 2 digit qualifier followed by the secondary ID number.
"DATA",364.7,1217,0)
1517^N^5^^^^N
"DATA",364.7,1217,1)
N IBZ S (IBZ,IBXDATA)="" D:$D(^IBA(364.5,"B","N-ORGANIZATION NPI CODES")) F^IBCEF("N-ORGANIZATION NPI CODES","IBZ",,IBXIEN) S IBXDATA=$P(IBZ,U,3),IBXSAVE("NPIBILL")=IBXDATA
"DATA",364.7,1217,3,0)
^^1^1^3060823^
"DATA",364.7,1217,3,1,0)
cms-1500 form, Box 33a.  Billing provider NPI.
"DATA",364.7,1218,0)
1518^N^5^^^^N
"DATA",364.7,1218,1)
N IBX,IBY,IBZ S IBY=$$PRTLID^IBCEF77(IBXIEN,$G(IBXSAVE("NPIBILL"))) K IBXSAVE("NPIBILL"),IBXDATA I IBY D ALLIDS^IBCEF75(IBXIEN,.IBZ,1) S IBX=$G(IBZ("BILLING PRV",IBXIEN,"C",1,2)),IBXDATA=$P(IBX,U,1)_$P(IBX,U,2)
"DATA",364.7,1218,3,0)
^364.73^2^2^3060830^^^
"DATA",364.7,1218,3,1,0)
1500 form.  Box 33b.  Billing provider Other ID number.
"DATA",364.7,1218,3,2,0)
Enter the 2 digit qualifier followed by the secondary ID#.
"DATA",364.7,1219,0)
1519^N^5^^^^N
"DATA",364.7,1219,1)
I $O(^TMP("IBXDATA",$J,IBXREC,1)) N Z,FLDS X "F Z=1:1:+$O(^IBA(364.6,""ASEQ"",2,1,""""),-1) S:(Z'>43!(Z'<57))&(Z'=6)&(Z'=39)&(Z'=41) FLDS(Z)=""""" F Z=2:1:+$O(^TMP("IBXDATA",$J,IBXREC,Z),-1) D MPG^IBCEF3(Z,.FLDS,2)
"DATA",364.7,1219,3,0)
^364.73^4^4^3061005^^^
"DATA",364.7,1219,3,1,0)
If there is more than 1 page of bill extracted, the variable
"DATA",364.7,1219,3,2,0)
FLDS(line,column) holds the lines and columns that should be duplicated on
"DATA",364.7,1219,3,3,0)
pages after the first.  This takes care of the population of these static
"DATA",364.7,1219,3,4,0)
fields on these subsequent pages.
"DATA",364.7,1220,0)
1520^N^150^^^^N
"DATA",364.7,1220,1)
S IBXDATA=$S(IBXDATA:"",1:"X")
"DATA",364.7,1220,3,0)
^^4^4^3060719^
"DATA",364.7,1220,3,1,0)
CMS-1500, box 20 Outside Lab=NO.
"DATA",364.7,1220,3,2,0)
If the value of the data element is true, then it is an outside lab so 
"DATA",364.7,1220,3,3,0)
this box should be blank.  If the data element is false, then it is not 
"DATA",364.7,1220,3,4,0)
an outside lab, so this box should have an "X" in it.
"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^y^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
2.0^IB
"FIA",2,2)
1
"FIA",2,2.312)
1
"FIA",2,2.312,3.01)

"FIA",2,2.312,3.02)

"FIA",2,2.312,3.03)

"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^y^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,.01)

"FIA",36,36,.17)

"FIA",36,36,3.09)

"FIA",36,36,4.01)

"FIA",36,36,4.03)

"FIA",36,36,4.04)

"FIA",36,36,4.05)

"FIA",36,36,4.06)

"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^y^p^^^^n^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,1.22)

"FIA",350.9,350.9,1.27)

"FIA",350.9,350.9,1.32)

"FIA",350.9,350.9,1.33)

"FIA",350.9,350.9,2.1)

"FIA",350.9,350.9,2.12)

"FIA",353.1)
PLACE OF SERVICE
"FIA",353.1,0)
^IBE(353.1,
"FIA",353.1,0,0)
353.1I
"FIA",353.1,0,1)
y^y^p^^^^n^^n
"FIA",353.1,0,10)

"FIA",353.1,0,11)

"FIA",353.1,0,"RLRO")

"FIA",353.1,0,"VR")
2.0^IB
"FIA",353.1,353.1)
1
"FIA",353.1,353.1,.01)

"FIA",353.2)
TYPE OF SERVICE
"FIA",353.2,0)
^IBE(353.2,
"FIA",353.2,0,0)
353.2I
"FIA",353.2,0,1)
y^y^p^^^^n^^n
"FIA",353.2,0,10)

"FIA",353.2,0,11)

"FIA",353.2,0,"RLRO")

"FIA",353.2,0,"VR")
2.0^IB
"FIA",353.2,353.2)
1
"FIA",353.2,353.2,.01)

"FIA",355.9)
IB BILLING PRACTITIONER ID
"FIA",355.9,0)
^IBA(355.9,
"FIA",355.9,0,0)
355.9IV
"FIA",355.9,0,1)
y^y^p^^^^n^^n
"FIA",355.9,0,10)

"FIA",355.9,0,11)

"FIA",355.9,0,"RLRO")

"FIA",355.9,0,"VR")
2.0^IB
"FIA",355.9,355.9)
1
"FIA",355.9,355.9,.04)

"FIA",355.91)
IB INSURANCE CO LEVEL BILLING PROV ID
"FIA",355.91,0)
^IBA(355.91,
"FIA",355.91,0,0)
355.91IP
"FIA",355.91,0,1)
y^y^p^^^^n^^n
"FIA",355.91,0,10)

"FIA",355.91,0,11)

"FIA",355.91,0,"RLRO")

"FIA",355.91,0,"VR")
2.0^IB
"FIA",355.91,355.91)
1
"FIA",355.91,355.91,.04)

"FIA",355.92)
FACILITY BILLING ID
"FIA",355.92,0)
^IBA(355.92,
"FIA",355.92,0,0)
355.92P
"FIA",355.92,0,1)
y^y^p^^^^n^^n
"FIA",355.92,0,10)

"FIA",355.92,0,11)

"FIA",355.92,0,"RLRO")

"FIA",355.92,0,"VR")
2.0^IB
"FIA",355.92,355.92)
1
"FIA",355.92,355.92,.04)

"FIA",355.93)
IB NON/OTHER VA BILLING PROVIDER
"FIA",355.93,0)
^IBA(355.93,
"FIA",355.93,0,0)
355.93I
"FIA",355.93,0,1)
y^y^p^^^^n^^n
"FIA",355.93,0,10)

"FIA",355.93,0,11)

"FIA",355.93,0,"RLRO")

"FIA",355.93,0,"VR")
2.0^IB
"FIA",355.93,355.93)
1
"FIA",355.93,355.93,.02)

"FIA",355.96)
IB INS CO PROVIDER ID CARE UNIT
"FIA",355.96,0)
^IBA(355.96,
"FIA",355.96,0,0)
355.96IP
"FIA",355.96,0,1)
y^y^p^^^^n^^n
"FIA",355.96,0,10)

"FIA",355.96,0,11)

"FIA",355.96,0,"RLRO")

"FIA",355.96,0,"VR")
2.0^IB
"FIA",355.96,355.96)
1
"FIA",355.96,355.96,.04)

"FIA",355.97)
IB PROVIDER ID # TYPE
"FIA",355.97,0)
^IBE(355.97,
"FIA",355.97,0,0)
355.97I
"FIA",355.97,0,1)
y^y^f^^^^n^^n
"FIA",355.97,0,10)

"FIA",355.97,0,11)

"FIA",355.97,0,"RLRO")

"FIA",355.97,0,"VR")
2.0^IB
"FIA",355.97,355.97)
0
"FIA",364.1)
EDI TRANSMISSION BATCH
"FIA",364.1,0)
^IBA(364.1,
"FIA",364.1,0,0)
364.1I
"FIA",364.1,0,1)
y^y^p^^^^n^^n
"FIA",364.1,0,10)

"FIA",364.1,0,11)

"FIA",364.1,0,"RLRO")

"FIA",364.1,0,"VR")
2.0^IB
"FIA",364.1,364.1)
1
"FIA",364.1,364.1,.06)

"FIA",364.4)
IB EDI TRANSMISSION RULE
"FIA",364.4,0)
^IBE(364.4,
"FIA",364.4,0,0)
364.4I
"FIA",364.4,0,1)
y^y^p^^^^n^^n
"FIA",364.4,0,10)

"FIA",364.4,0,11)

"FIA",364.4,0,"RLRO")

"FIA",364.4,0,"VR")
2.0^IB
"FIA",364.4,364.4)
1
"FIA",364.4,364.4,.05)

"FIA",364.4,364.4,.11)

"FIA",364.5)
IB DATA ELEMENT DEFINITION
"FIA",364.5,0)
^IBA(364.5,
"FIA",364.5,0,0)
364.5I
"FIA",364.5,0,1)
n^n^f^^y^^y^o^n
"FIA",364.5,0,10)

"FIA",364.5,0,11)
I $$INCLUDE^IBY348PR(5,Y)
"FIA",364.5,0,"RLRO")

"FIA",364.5,0,"VR")
2.0^IB
"FIA",364.5,364.5)
0
"FIA",364.5,364.53)
0
"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $$INCLUDE^IBY348PR(6,Y)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY348PR(7,Y)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^y^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,.01)

"FIA",399,399,.19)

"FIA",399,399,163)

"FIA",399,399,166)

"FIA",399,399,167)

"FIA",399,399,230)

"FIA",399,399,231)

"FIA",399,399,236)

"FIA",399,399,237)

"FIA",399,399,238)

"FIA",399,399,400)

"FIA",399,399,401)

"FIA",399,399,459)

"FIA",399,399.0304)
1
"FIA",399,399.0304,8)

"FIA",399,399.0304,9)

"FIA",399,399.0304,10)

"FIA",399,399.0304,11)

"FIA",399,399.0304,12)

"FIA",399,399.0304,13)

"FIA",399,399.0304,50.01)

"FIA",399,399.0304,50.02)

"FIA",399,399.0304,50.03)

"FIA",399,399.0304,50.04)

"FIA",399,399.0304,50.05)

"FIA",399,399.0304,50.06)

"FIA",399,399.0304,50.07)

"FIA",399,399.0304,50.08)

"FIA",399,399.0304,50.09)

"FIA",399,399.041)
1
"FIA",399,399.041,.03)

"FIA",399,399.042)
1
"FIA",399,399.042,.06)

"FIA",399,399.042,.15)

"FIA",399.1)
MCCR UTILITY
"FIA",399.1,0)
^DGCR(399.1,
"FIA",399.1,0,0)
399.1I
"FIA",399.1,0,1)
y^y^p^^^^n^^n
"FIA",399.1,0,10)

"FIA",399.1,0,11)

"FIA",399.1,0,"RLRO")

"FIA",399.1,0,"VR")
2.0^IB
"FIA",399.1,399.1)
1
"FIA",399.1,399.1,.16)

"INI")
IBY348PR
"INIT")
IBY348PO
"IX",355.9,355.9,"AUNIQ",0)
355.9^AUNIQ^Xref by provider,ins co(or ALL),care unit,form type,pt stat,prov type^MU^^R^IR^I^355.9^^^^^S
"IX",355.9,355.9,"AUNIQ",.1,0)
^^3^3^3000906^^
"IX",355.9,355.9,"AUNIQ",.1,1,0)
This cross reference provides an index to insure that each record in this
"IX",355.9,355.9,"AUNIQ",.1,2,0)
file has a unique combination of provider,insurance company, form type,
"IX",355.9,355.9,"AUNIQ",.1,3,0)
patient status and provider id type.
"IX",355.9,355.9,"AUNIQ",1)
S ^IBA(355.9,"AUNIQ",X(1),$E(X(2),1,30),$E(X(3),1,30),X(4),X(5),X(6),DA)=""
"IX",355.9,355.9,"AUNIQ",2)
K ^IBA(355.9,"AUNIQ",X(1),$E(X(2),1,30),$E(X(3),1,30),X(4),X(5),X(6),DA)
"IX",355.9,355.9,"AUNIQ",2.5)
K ^IBA(355.9,"AUNIQ")
"IX",355.9,355.9,"AUNIQ",11.1,0)
^.114IA^11^6
"IX",355.9,355.9,"AUNIQ",11.1,1,0)
1^F^355.9^.01^^1^F
"IX",355.9,355.9,"AUNIQ",11.1,6,0)
5^F^355.9^.05^^5^F
"IX",355.9,355.9,"AUNIQ",11.1,8,0)
2^F^355.9^.15^30^2^F
"IX",355.9,355.9,"AUNIQ",11.1,9,0)
3^F^355.9^.16^30^3^F
"IX",355.9,355.9,"AUNIQ",11.1,10,0)
6^F^355.9^.06^^6^F
"IX",355.9,355.9,"AUNIQ",11.1,11,0)
4^F^355.9^.04^^4^F
"IX",355.91,355.91,"AUNIQ",0)
355.91^AUNIQ^Xref by ins co,care unit,form type,pt stat,prov type^MU^^R^IR^I^355.91^^^^^S
"IX",355.91,355.91,"AUNIQ",.1,0)
^^3^3^3000906^
"IX",355.91,355.91,"AUNIQ",.1,1,0)
This cross reference provides an index to insure that each record in this
"IX",355.91,355.91,"AUNIQ",.1,2,0)
file has a unique combination of insurance company, form type, patient
"IX",355.91,355.91,"AUNIQ",.1,3,0)
status and provider id type.
"IX",355.91,355.91,"AUNIQ",1)
S ^IBA(355.91,"AUNIQ",X(1),$S(X(2):$E(X(2),1,30),1:"*N/A*"),X(3),X(4),X(5),DA)=""
"IX",355.91,355.91,"AUNIQ",2)
K ^IBA(355.91,"AUNIQ",X(1),$S(X(2):$E(X(2),1,30),1:"*N/A*"),X(3),X(4),X(5),DA)
"IX",355.91,355.91,"AUNIQ",2.5)
K ^IBA(355.91,"AUNIQ")
"IX",355.91,355.91,"AUNIQ",11.1,0)
^.114IA^5^5
"IX",355.91,355.91,"AUNIQ",11.1,1,0)
1^F^355.91^.01^^1^F
"IX",355.91,355.91,"AUNIQ",11.1,2,0)
2^F^355.91^.1^30^2^F
"IX",355.91,355.91,"AUNIQ",11.1,3,0)
3^F^355.91^.04^^3^F
"IX",355.91,355.91,"AUNIQ",11.1,4,0)
4^F^355.91^.05^^4^F
"IX",355.91,355.91,"AUNIQ",11.1,5,0)
5^F^355.91^.06^^5^F
"IX",355.92,355.92,"AUNIQ",0)
355.92^AUNIQ^Xref by ins co,care unit,form type,division,prov id type^MU^^R^IR^I^355.92^^^^^S
"IX",355.92,355.92,"AUNIQ",.1,0)
^^2^2^3060920
"IX",355.92,355.92,"AUNIQ",.1,1,0)
This cross reference allows edits to the additonal provider id's to be 
"IX",355.92,355.92,"AUNIQ",.1,2,0)
replicated to linked insurance companies.
"IX",355.92,355.92,"AUNIQ",1)
S ^IBA(355.92,"AUNIQ",X(1),$E(X(2),1,30),X(3),X(4),X(5),DA)=""
"IX",355.92,355.92,"AUNIQ",1.4)
S X=0 I X(1)]"",X(2)]"",X(3)]"",X(4)]"",X(5)]"",$P($G(^IBA(355.92,DA,0)),U,8)="A" S X=1
"IX",355.92,355.92,"AUNIQ",2)
K ^IBA(355.92,"AUNIQ",X(1),$E(X(2),1,30),X(3),X(4),X(5),DA)
"IX",355.92,355.92,"AUNIQ",2.4)
S X=0 I X(1)]"",X(2)]"",X(3)]"",X(4)]"",X(5)]"" S X=1
"IX",355.92,355.92,"AUNIQ",2.5)
K ^IBA(355.92,"AUNIQ")
"IX",355.92,355.92,"AUNIQ",11.1,0)
^.114IA^5^5
"IX",355.92,355.92,"AUNIQ",11.1,1,0)
1^F^355.92^.01^^^F
"IX",355.92,355.92,"AUNIQ",11.1,2,0)
2^F^355.92^.1^30^^F
"IX",355.92,355.92,"AUNIQ",11.1,3,0)
3^F^355.92^.04^^^F
"IX",355.92,355.92,"AUNIQ",11.1,4,0)
4^F^355.92^.11^^^F
"IX",355.92,355.92,"AUNIQ",11.1,5,0)
5^F^355.92^.06^^^F
"IX",355.96,355.96,"AD",0)
355.96^AD^Xref by insurance co, form type, bill care type, provider type^R^^R^IR^I^355.96^^^^^S
"IX",355.96,355.96,"AD",1)
S ^IBA(355.96,"AD",X(1),X(2),X(3),X(4),DA)=""
"IX",355.96,355.96,"AD",2)
K ^IBA(355.96,"AD",X(1),X(2),X(3),X(4),DA)
"IX",355.96,355.96,"AD",2.5)
K ^IBA(355.96,"AD")
"IX",355.96,355.96,"AD",11.1,0)
^.114IA^4^4
"IX",355.96,355.96,"AD",11.1,1,0)
1^F^355.96^.03^^1^F
"IX",355.96,355.96,"AD",11.1,1,3)

"IX",355.96,355.96,"AD",11.1,2,0)
2^F^355.96^.04^^2^F
"IX",355.96,355.96,"AD",11.1,2,3)

"IX",355.96,355.96,"AD",11.1,3,0)
3^F^355.96^.05^^3^F
"IX",355.96,355.96,"AD",11.1,3,3)

"IX",355.96,355.96,"AD",11.1,4,0)
4^F^355.96^.06^^4^F
"IX",355.96,355.96,"AD",11.1,4,3)

"IX",355.96,355.96,"AUNIQ",0)
355.96^AUNIQ^Xref by ins co,care unit,form type,pt stat,prov type^R^^R^IR^I^355.96^^^^^S
"IX",355.96,355.96,"AUNIQ",.1,0)
^^3^3^3010801^
"IX",355.96,355.96,"AUNIQ",.1,1,0)
This cross reference provides an index to insure that each record in this
"IX",355.96,355.96,"AUNIQ",.1,2,0)
file has a unique combination of insurance company, form type, bill type
"IX",355.96,355.96,"AUNIQ",.1,3,0)
and provider id type.
"IX",355.96,355.96,"AUNIQ",1)
S ^IBA(355.96,"AUNIQ",X(1),X(2),X(3),X(4),X(5),DA)=""
"IX",355.96,355.96,"AUNIQ",2)
K ^IBA(355.96,"AUNIQ",X(1),X(2),X(3),X(4),X(5),DA)
"IX",355.96,355.96,"AUNIQ",2.5)
K ^IBA(355.96,"AUNIQ")
"IX",355.96,355.96,"AUNIQ",11.1,0)
^.114IA^5^5
"IX",355.96,355.96,"AUNIQ",11.1,1,0)
1^F^355.96^.03^^1^F
"IX",355.96,355.96,"AUNIQ",11.1,2,0)
2^F^355.96^.01^^2^F
"IX",355.96,355.96,"AUNIQ",11.1,3,0)
3^F^355.96^.04^^3^F
"IX",355.96,355.96,"AUNIQ",11.1,4,0)
4^F^355.96^.05^^4^F
"IX",355.96,355.96,"AUNIQ",11.1,5,0)
5^F^355.96^.06^^5^F
"IX",364.4,364.4,"AD",0)
364.4^AD^Sets the first level of xref to determine which edits are most general.^MU^^R^IR^I^364.4^^^^^S
"IX",364.4,364.4,"AD",1)
S ^IBE(364.4,"AD",X2(1),X2(2),$S(X2(3)=3:X2(3),X2(6)=0:X2(3)#2+1,1:X2(3)),X2(4),DA)=+X2(5)
"IX",364.4,364.4,"AD",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.4,364.4,"AD",2)
K ^IBE(364.4,"AD",X1(1),X1(2),$S(X1(3)=3:X1(3),X1(6)=0:X1(3)#2+1,1:X1(3)),X1(4),DA)
"IX",364.4,364.4,"AD",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.4,364.4,"AD",2.5)
K ^IBE(364.4,"AD")
"IX",364.4,364.4,"AD",11.1,0)
^.114IA^6^6
"IX",364.4,364.4,"AD",11.1,1,0)
1^F^364.4^.03^^1^F
"IX",364.4,364.4,"AD",11.1,2,0)
2^F^364.4^.04^^2^F
"IX",364.4,364.4,"AD",11.1,3,0)
3^F^364.4^.05^^3^F
"IX",364.4,364.4,"AD",11.1,4,0)
4^F^364.4^.07^^4^F
"IX",364.4,364.4,"AD",11.1,5,0)
5^F^364.4^.06^^^F
"IX",364.4,364.4,"AD",11.1,6,0)
6^F^364.4^.11^^^F
"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"IX",399,399.042,"ADPR",0)
399.042^ADPR^DELETES PROCEDURE ENTRY FOR RX REVENUE CODES^MU^^F^IR^I^399.042^^^^^A
"IX",399,399.042,"ADPR",1)
Q
"IX",399,399.042,"ADPR",2)
I X(2)'=""&'$D(^TMP("IBCRRX",$J)) D DELPR^IBCU1(DA(1),X(2))
"IX",399,399.042,"ADPR",11.1,0)
^.114IA^2^2
"IX",399,399.042,"ADPR",11.1,1,0)
1^F^399.042^.01^^1^F
"IX",399,399.042,"ADPR",11.1,2,0)
2^F^399.042^.15^^^F
"KRN",.402,1074,-1)
0^2
"KRN",.402,1074,0)
IB SCREEN4^3061011.1657^@^399^^@^3061011
"KRN",.402,1074,"DIAB",1,1,399.04,0)
ALL
"KRN",.402,1074,"DIAB",1,1,399.048,0)
OTHER CARE;"SNF/SA CARE"
"KRN",.402,1074,"DIAB",8,0,399,0)
OTHER CARE;"SNF/SA CARE"
"KRN",.402,1074,"DR",1,399)
S:IBDR20'["41" Y="@42";I $P($G(^DGCR(399,DA,0)),U,8) S Y="@411";159.5;@411;160;159;158;48SNF/SA CARE~;@42;S:IBDR20'["42" Y="@43";162;@43;@45;@46;S:IBDR20'["46" Y="@47";41;@47;S:IBDR20'["47" Y="@44";40;@44;S:IBDR20'["44" Y="@48";
"KRN",.402,1074,"DR",1,399,1)
S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;S IBPROT=X;D PRO^IBCSC4B;S IBASKCOD=1;@48;S:IBDR20'["48" Y="@49";I $P(^DGCR(399,DA,0),U,19)=2 S Y="@49";47;@49;
"KRN",.402,1074,"DR",2,399.04)
.01
"KRN",.402,1074,"DR",2,399.041)
.01;.02;I $P($G(^DGCR(399.1,+^DGCR(399,DA(1),"OC",DA,0),0)),U,9)'=2 S Y="@454";.03;S Y="@455";@454;I '$P(^DGCR(399.1,+^DGCR(399,DA(1),"OC",DA,0),0),U,10) S Y="@455";.04;@455;
"KRN",.402,1074,"DR",2,399.047)
.01;.02;
"KRN",.402,1074,"DR",2,399.048)
.01SNF/SA CARE~;.02;.03;S DGRVRCAL=1;
"KRN",.402,1074,"ROU")
^IBXSC4
"KRN",.402,1074,"ROUOLD")
IBXSC4
"KRN",.402,1276)
 
"KRN",.402,1276,-1)
0^1
"KRN",.402,1276,0)
IBEDIT INS CO1^3060920.1704^^36^^^3060920
"KRN",.402,1276,"DIAB",1,0,36,1)
TRANSMIT ELECTRONICALLY;"EDI - Transmit?"
"KRN",.402,1276,"DIAB",1,0,36,5)
SECONDARY ID REQUIREMENTS;"Require ID on Claim"
"KRN",.402,1276,"DIAB",1,0,36,6)
ATT/REND ID BILL SEC ID INST//NO;"Use Att/Rend ID as Billing Provider Sec. ID (UB92)?"
"KRN",.402,1276,"DIAB",1,1,36.03,0)
ALL
"KRN",.402,1276,"DIAB",3,0,36,4)
BIN NUMBER;"EDI - Bin Number"
"KRN",.402,1276,"DIAB",3,0,36,5)
REF PROV SEC ID DEF CMS-1500//UPIN;"Default ID (1500)"
"KRN",.402,1276,"DIAB",3,0,36,6)
SEND LAB OR FAC IDS FOR VAMC//YES;"Send VA Lab/Facility IDs or Facility Data for VAMC?"
"KRN",.402,1276,"DIAB",3,0,36,11)
INS COMPANY LINK TYPE;T
"KRN",.402,1276,"DIAB",4,0,36,5)
REF PROV SEC ID REQ ON CLAIMS;"Require ID on Claim"
"KRN",.402,1276,"DIAB",4,0,36,8)
ANOTHER CO. PROCESS OP CLAIMS?;T
"KRN",.402,1276,"DIAB",5,0,36,4)
MAX NUMBER TEST BILLS PER DAY;"MAX # TEST BILLS TO TRANSMIT PER DAY"
"KRN",.402,1276,"DIAB",6,0,36,2)
EDI ID NUMBER - PROF;"EDI - Prof Payer ID"
"KRN",.402,1276,"DIAB",6,0,36,3)
ELECTRONIC INSURANCE TYPE;"EDI - Insurance Type"
"KRN",.402,1276,"DIAB",6,0,36,5)
ATT/REND ID BILL SEC ID PROF//NO;"Use Att/Rend ID as Billing Provider Sec. ID (1500)?"
"KRN",.402,1276,"DIAB",6,0,36,12)
INS COMPANY LINK PARENT;T
"KRN",.402,1276,"DIAB",9,0,36,1)
EDI ID NUMBER - INST;"EDI - Inst Payer ID"
"KRN",.402,1276,"DIAB",9,0,36,4)
PERF PROV SECOND ID TYPE 1500;"Default ID (1500)"
"KRN",.402,1276,"DIAB",9,0,36,10)
ANOTHER CO. PROCESS INQUIRIES?;T
"KRN",.402,1276,"DIAB",10,0,36,4)
PERF PROV SECOND ID TYPE UB;"Default ID (UB92)"
"KRN",.402,1276,"DIAB",13,0,36,7)
ANOTHER CO. PROCESS IP CLAIMS?;T
"KRN",.402,1276,"DIAB",18,0,36,0)
ANOTHER CO. PROCESS PRECERTS?;T
"KRN",.402,1276,"DIAB",19,0,36,9)
ANOTHER CO. PROCESS APPEALS?;T
"KRN",.402,1276,"DIAB",24,0,36,8)
ANOTHER CO. PROCESS RX CLAIMS?;T
"KRN",.402,1276,"DR",1,36)
S:",6,"'[IBY Y="@0";.01;@0;S:",0,1,6,12,"'[IBY Y="@10";S:",12,"[IBY Y="@18";2;1;.06;.07;.08;.09;.15;.12;.13;.14;.132;.134;.178T~;S:'X Y="@11";.139;S Y="@16";@11;.133;@16;I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@171";
"KRN",.402,1276,"DR",1,36,1)
3.01EDI - Transmit?~;S DIPA("IBTX")=X;I X=$G(IBEDIKEY(1))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1721";3.01////^S X=$G(IBEDIKEY(1));I $$EDIKEY^IBCNSC();S Y="@171";@1721;I '$G(DIPA("IBTX")) S Y="@17";3.04EDI - Inst Payer ID~;
"KRN",.402,1276,"DR",1,36,2)
I X=$G(IBEDIKEY(4))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";3.04////^S X=$G(IBEDIKEY(4));I $$EDIKEY^IBCNSC();S Y="@171";@1722;3.02EDI - Prof Payer ID~;I X=$G(IBEDIKEY(2))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";
"KRN",.402,1276,"DR",1,36,3)
3.02////^S X=$G(IBEDIKEY(2));I $$EDIKEY^IBCNSC();S Y="@171";@1723;@17;3.09EDI - Insurance Type~;I X=$G(IBEDIKEY(9))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1724";3.09////^S X=$G(IBEDIKEY(9));I $$EDIKEY^IBCNSC();S Y="@171";
"KRN",.402,1276,"DR",1,36,4)
@1724;@171;3.03EDI - Bin Number~;I $G(DIPA("IBTX"))'=2 S Y="@18";3.06MAX # TEST BILLS TO TRANSMIT PER DAY~;@18;S:",6,12,"'[IBY Y="@181";W !!,"Attending/Rendering Provider Secondary ID";4.01Default ID (1500)~;4.02Default ID (UB92)~;
"KRN",.402,1276,"DR",1,36,5)
4.03Require ID on Claim~;W !!,"Referring Provider Secondary ID";4.04Default ID (1500)~//UPIN;4.05Require ID on Claim~;W !!,"Billing Provider Secondary IDs";4.06Use Att/Rend ID as Billing Provider Sec. ID (1500)?~//NO;
"KRN",.402,1276,"DR",1,36,6)
4.08Use Att/Rend ID as Billing Provider Sec. ID (UB92)?~//NO;W !!,"VA-Laboratory or Facility IDs";4.07Send VA Lab/Facility IDs or Facility Data for VAMC?~//YES;@181;S:IBY["1" Y="@99";@10;S:",0,2,6,"'[IBY Y="@20";.111;S:X="" Y="@1";
"KRN",.402,1276,"DR",1,36,7)
.112;S:X="" Y="@1";.113;@1;.114;.115;.116;.131;.119;S:(IBY["0")!(IBY["2") Y="@99";@20;S:",3,6,"'[IBY Y="@30";.128T~;S:'X Y="@21";.127;S Y="@26";@21;.121;S:X="" Y="@2";.122;S:X="" Y="@2";.123;@2;.124;.125;.126;.135;.129;@26;
"KRN",.402,1276,"DR",1,36,8)
S:IBY["3" Y="@99";@30;S:",10,6,"'[IBY Y="@80";.168T~;S:'X Y="@31";.167;S Y="@36";@31;.161;S:X="" Y="@5";.162;S:X="" Y="@5";.163;@5;.164;.165;.166;.136;.169;@36;S:IBY["10" Y="@99";@80;S:",11,6,"'[IBY Y="@90";.188T~;S:'X Y="@81";
"KRN",.402,1276,"DR",1,36,9)
.187;S Y="@86";@81;.181;S:X="" Y="@6";.182;S:X="" Y="@6";.183;@6;.184;.185;.186;.1311;.189;@86;S:IBY["11" Y="@99";@90;S:",4,6,"'[IBY Y="@40";.148T~;S:'X Y="@41";.147;S Y="@46";@41;.141;S:X="" Y="@3";.142;S:X="" Y="@3";.143;@3;.144;
"KRN",.402,1276,"DR",1,36,10)
.145;.146;.137;.149;@46;S:IBY["4" Y="@99";@40;S:",5,6,"'[IBY Y="@55";.158T~;S:'X Y="@51";.157;S Y="@56";@51;.151;S:X="" Y="@4";.152;S:X="" Y="@4";.153;@4;.154;.155;.156;.138;.159;@56;S:IBY["5" Y="@99";@55;S:",13,6,"'[IBY Y="@60";
"KRN",.402,1276,"DR",1,36,11)
I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@551";I $D(^DIC(36,"APC",+$G(DA))),$P($G(^DIC(36,+$G(DA),3)),U,13)="P" S Y="@551";3.13T~;S DIPA("IBLNK")=X;I X=$G(IBEDIKEY(13))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@552";
"KRN",.402,1276,"DR",1,36,12)
3.13////^S X=$G(IBEDIKEY(13));I $$EDIKEY^IBCNSC();S Y="@551";@552;I $G(DIPA("IBLNK"))'="C" S Y="@551";3.14T~;I X=$G(IBEDIKEY(14))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@553";3.14////^S X=$G(IBEDIKEY(14));I $$EDIKEY^IBCNSC();
"KRN",.402,1276,"DR",1,36,13)
S Y="@551";@553;D COPY^IBCEPCID(+$G(DA));@551;S:IBY=",13," Y="@99";@60;S:",7,6,"'[IBY Y="@50";3.1;@50;S:",8,6,"'[IBY Y="@70";11;S:IBY["8" Y="@99";@70;S:",9,6,"'[IBY Y="@99";10;@99;
"KRN",.402,1276,"DR",2,36.03)
.01
"KRN",.402,2625,-1)
1^3
"KRN",.402,2625,0)
IB EDIT MCCR PARM    FILE #350.9
"KRN",19,4461,-1)
0^5
"KRN",19,4461,0)
IB PRINT BILL ADDENDUM^Print Bill Addendum Sheet^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,4461,1,0)
^^3^3^3060927^
"KRN",19,4461,1,1,0)
Prints the Addendum sheets that may accompany CMS-1500 Rx Refill
"KRN",19,4461,1,2,0)
or Prosthetics bills.  The addendum contains information that
"KRN",19,4461,1,3,0)
could not fit on the bill form.
"KRN",19,4461,25)
IBCF4
"KRN",19,4461,"U")
PRINT BILL ADDENDUM SHEET
"KRN",19,12075,-1)
0^6
"KRN",19,12075,0)
IBCE PROVIDER ID QUERY^Provider ID Query^^R^^^^^^^^
"KRN",19,12075,1,0)
^^12^12^3061002^
"KRN",19,12075,1,1,0)
This option allows the site to run or re-run the provider id query report
"KRN",19,12075,1,2,0)
to report some of the invalid provider id set ups for insurance companies.
"KRN",19,12075,1,3,0)
 
"KRN",19,12075,1,4,0)
CONDITIONS TO IDENTIFY:
"KRN",19,12075,1,5,0)
 1-BLUE CROSS LINKED TO CMS-1500 ONLY (1) THE ONLY HARD ERROR
"KRN",19,12075,1,6,0)
 2-BLUE SHIELD LINKED TO UB92 ONLY (2) WARNING
"KRN",19,12075,1,7,0)
 3-BLUE CROSS ID APPLIED TO BOTH FORMS (0) WARNING
"KRN",19,12075,1,8,0)
 4-BLUE CROSS OR BLUE SHIELD IDs EXIST FOR AN INS CO, BUT ONE OR
"KRN",19,12075,1,9,0)
   MORE OF THE INSURANCE COMPANY'S PLANS DOES NOT HAVE AN
"KRN",19,12075,1,10,0)
   ELECTRONIC PLAN TYPE OF 'BL'
"KRN",19,12075,1,11,0)
 5-NON BLUE CROSS/SHIELD ID FOR AN INS COMPANY WITH BLUE PLAN(S)
"KRN",19,12075,1,12,0)
 6-VAD000 as an ID but not flagged as a UPIN
"KRN",19,12075,25)
EN^IBCEQ1
"KRN",19,12075,"U")
PROVIDER ID QUERY
"KRN",19,12635,-1)
1^1
"KRN",19,12635,0)
IB UB-82 TEST PATTERN PRINT
"KRN",19,12636,-1)
1^2
"KRN",19,12636,0)
IB UB-92 TEST PATTERN PRINT
"KRN",19,12637,-1)
1^3
"KRN",19,12637,0)
IB HCFA-1500 TEST PATTERN
"KRN",19,12638,-1)
1^4
"KRN",19,12638,0)
IB MCCR PARAMETER EDIT
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PGL",364.6,0,20,.2)
NEW FORM DATA ELEMENT^P364.6'^IBA(364.6,^0;20^Q
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
348^3061205
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3061205
"PKG",200,22,1,"PAH",1,1,1,0)
New CMS-1500 claim form
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
50
"RTN","IBCB")
0^19^B32907944^B32932460
"RTN","IBCB",1,0)
IBCB ;ALB/MRL - BILLING BEGINNING POINT/SELECT BILL OR PATIENT ;01 JUN 88 12:00
"RTN","IBCB",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,51,137,161,199,348**;21-MAR-94;Build 5
"RTN","IBCB",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCB",4,0)
 ;
"RTN","IBCB",5,0)
 ;MAP TO DGCRB
"RTN","IBCB",6,0)
 ;
"RTN","IBCB",7,0)
EN ;
"RTN","IBCB",8,0)
 D HOME^%ZIS Q:'$D(IBAC)
"RTN","IBCB",9,0)
 ;***
"RTN","IBCB",10,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCB" D T1^%ZOSV ;stop rt clock
"RTN","IBCB",11,0)
 ;S XRTL=$ZU(0),XRTN="IBCB-"_$G(IBAC) D T0^%ZOSV ;start rt clock
"RTN","IBCB",12,0)
 ;
"RTN","IBCB",13,0)
 S:'$D(IBV) IBV=1 L  K ^UTILITY($J),DFN,IBIFN,DIC,IBPOPOUT S DIC(0)="EQMZ" R !!,"Enter BILL NUMBER or PATIENT NAME: ",IBX:DTIME I IBX["^"!(IBX="") S IBAC1=0 Q
"RTN","IBCB",14,0)
 K ^TMP("IBCRRX",$J)
"RTN","IBCB",15,0)
 S IBAC1=1
"RTN","IBCB",16,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCB",17,0)
 I IBX?1A4N!(IBX?2A.AP)!(IBX?2.A1",".AP)!(IBX?1A1P.AP) S DIC="^DPT(",X=IBX D ^DIC G EN:Y'>0 S DFN=+Y D HINQ S X=$S('$D(^DGCR(399,"C",DFN)):1,'$D(^DGCR(399,"AOP",DFN)):2,1:0)
"RTN","IBCB",18,0)
 I $D(DFN),X,IBAC<4 W !!,"No ",$S(X=1:"",1:"OPEN "),"billing records on file for this patient." D ASK I '$D(IBIFN) G EN
"RTN","IBCB",19,0)
 I $D(DFN) D  G EN
"RTN","IBCB",20,0)
 . D DATE:'$D(IBIFN),ASK:'$D(IBIFN)
"RTN","IBCB",21,0)
 . I $D(IBIFN) D ST
"RTN","IBCB",22,0)
 S DIC("S")=$S(IBAC'=4&(IBAC'=4.1):"I $P(^(0),U,13)<3 D EN^DDIOL($P(^(0),U))",1:"I $P(^(""S""),U,17)="""""_$S(IBAC=4.1:",$P(^(0),U,13)=3,+$$LAST364^IBCEF4(+Y),""PX""[$P($G(^IBA(364,+$$LAST364^IBCEF4(+Y),0)),U,3)",1:""))
"RTN","IBCB",23,0)
 S DIC="^DGCR(399,",X=IBX
"RTN","IBCB",24,0)
 D ^DIC G:Y'>0 EN S IBIFN=+Y,DFN=$P(Y(0),"^",2)
"RTN","IBCB",25,0)
 ;
"RTN","IBCB",26,0)
 D HINQ,ST G EN
"RTN","IBCB",27,0)
 G EN
"RTN","IBCB",28,0)
HINQ I $S('$D(^DPT(DFN,.361)):1,$P(^(.361),"^",1)'="V":1,1:0) W !?17,"*** ELIGIBILITY NOT VERIFIED ***" D HINQ1
"RTN","IBCB",29,0)
MT ;I $D(DFN) D ^DGMT1 K DGMTLL
"RTN","IBCB",30,0)
 I $D(DFN) D DIS^DGMTU(DFN)
"RTN","IBCB",31,0)
 Q
"RTN","IBCB",32,0)
HINQ1 I $P($G(^IBE(350.9,1,1)),"^",16) S X="DVBHQZ4" X ^%ZOSF("TEST") K X I $T W ! D EN^DVBHQZ4 Q
"RTN","IBCB",33,0)
 ;I $P($G(^IBE(350.9,1,1)),"^",16) F X="DVBHQZ4","DGHINQZ4" X ^%ZOSF("TEST") I $T S DGROUT=X K X W ! D @("EN^"_DGROUT) K DGROUT Q
"RTN","IBCB",34,0)
 K Y Q
"RTN","IBCB",35,0)
ASK I IBAC'=1 K IBIFN Q
"RTN","IBCB",36,0)
 W !!,"DO YOU WANT TO ESTABLISH A NEW BILLING RECORD FOR '",$P(^DPT(DFN,0),"^",1),"'" S %=2 D YN^DICN
"RTN","IBCB",37,0)
 I '% W !!?4,"YES - To establish a new billing record in the billing file.",!?4,"NO  - To discontinue this process immediately." G ASK
"RTN","IBCB",38,0)
 I %'=1 K IBIFN Q
"RTN","IBCB",39,0)
 K DA,Y,DINUM,IBIFN S (IBNEW,IBYN)=1 D ^IBCA Q
"RTN","IBCB",40,0)
DATE I $D(^DGCR(399,"C",DFN)) S DA="" F I=1:1 S DA=$O(^DGCR(399,"APDT",DFN,DA)) Q:DA=""  D DATE1
"RTN","IBCB",41,0)
 I IBAC=4,'$D(^UTILITY($J,"IB")) W !,"No ",$S($D(^DGCR(399,"C",DFN)):"UNCANCELLED ",1:""),"billing records on file for this patient." Q
"RTN","IBCB",42,0)
 S CT=0,CT1=1,IBT="" F J=1:1 S IBT=$O(^UTILITY($J,"IB",IBT)) Q:IBT=""  F J1=0:0 S J1=$O(^UTILITY($J,"IB",IBT,J1)) Q:J1=""  S X=J1 D SET
"RTN","IBCB",43,0)
CT W ! S G="",CT2=$S(CT<(CT1+4):CT,1:(CT1+4)) F K=CT1:1:CT2 I $D(^UTILITY($J,"UB",K)) D WRLINE
"RTN","IBCB",44,0)
 S X="" D WDATE Q:X["^"  I '$D(IB),$D(^UTILITY($J,"UB",K+1)) S CT1=K+1 G CT
"RTN","IBCB",45,0)
 K CT,CT1,CT2,K,^UTILITY($J,"UB") Q
"RTN","IBCB",46,0)
WRLINE N IBX S IBDATA=^UTILITY($J,"UB",K),IBX=$G(^DGCR(399,+$P(IBDATA,"^",2),0))
"RTN","IBCB",47,0)
 W !?2,K,?6 S Y=+IBDATA X ^DD("DD") W Y,?27,$P(IBX,"^",1),?35,$S($P(IBX,U,21)="S":"s",$P(IBX,U,21)="T":"t",1:""),?38,$P(IBDATA,"^",3),?59,$E($P(IBDATA,"^",4),1,10),?70,$E($P(IBDATA,"^",5),1,10)
"RTN","IBCB",48,0)
 Q
"RTN","IBCB",49,0)
DATE1 S IBT=$O(^DGCR(399,"APDT",DFN,DA,0)) I $D(^DGCR(399,+DA,0)),$S(IBAC<3:$P(^(0),U,13)<2,IBAC=3:$P(^(0),U,13)<3,'$D(^("S")):0,$P(^("S"),"^",17)]"":0,1:1) S ^UTILITY($J,"IB",IBT,DA)=""
"RTN","IBCB",50,0)
 Q
"RTN","IBCB",51,0)
WDATE Q:'CT  W !! W:K<CT "PRESS <RETURN> TO CONTINUE, OR",! W "CHOOSE 1",$S(CT=1:"",1:"-"_K),": " R X:DTIME Q:X["^"!(X="")  I X["?" W !!,"Select one of the above or <RETURN> to establish a new billing record." G WDATE
"RTN","IBCB",52,0)
 I $S('$D(^UTILITY($J,"UB",+X)):1,+X>K:1,+X<1:1,'(X?.N):1,1:0) W !!,"NOT A VALID CHOICE!!",*7 G WDATE
"RTN","IBCB",53,0)
 S IBIFN=$P(^UTILITY($J,"UB",X),"^",2),IB=1
"RTN","IBCB",54,0)
 Q
"RTN","IBCB",55,0)
 ;
"RTN","IBCB",56,0)
KEYOK(IBIFN,DUZ) ; Check if COB bill, does user have key
"RTN","IBCB",57,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCB",58,0)
 ;
"RTN","IBCB",59,0)
 N IBCOB,IBOK,DIR,X,Y
"RTN","IBCB",60,0)
 S IBOK=1,IBCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBCB",61,0)
 I IBCOB>1 D
"RTN","IBCB",62,0)
 . S IBCOB=$P("^SECONDARY^TERTIARY",U,IBCOB)
"RTN","IBCB",63,0)
 . S DIR(0)="YA",DIR("A",1)="YOU ARE ABOUT TO EDIT A "_IBCOB_" BILL",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: ",DIR("B")="NO" W ! D ^DIR K DIR W !
"RTN","IBCB",64,0)
 . I Y'=1 S IBOK=0
"RTN","IBCB",65,0)
 Q IBOK
"RTN","IBCB",66,0)
 ;
"RTN","IBCB",67,0)
SET I $S(IBV:1,$P(^DGCR(399,+X,0),"^",13):1,1:0) S CT=CT+1 D SET2
"RTN","IBCB",68,0)
 Q
"RTN","IBCB",69,0)
SET2 S IBND0=^DGCR(399,+X,0)
"RTN","IBCB",70,0)
 N IBFTP
"RTN","IBCB",71,0)
 S IBFTP=$S($$FT^IBCEF(+X)=3:"/UB",$$FT^IBCEF(+X)=2:"/1500",1:"")
"RTN","IBCB",72,0)
 S ^UTILITY($J,"UB",CT)=9999999-IBT_"^"_+X_"^"_$P($G(^DGCR(399.3,+$P(IBND0,"^",7),0)),"^",4)_"-"_$$BCHGTYPE^IBCU(+X)_"^"_$P($P($P($P(^DD(399,.13,0),"^",3),$P(IBND0,"^",13)_":",2),";",1),"/",1)
"RTN","IBCB",73,0)
 S ^UTILITY($J,"UB",CT)=^UTILITY($J,"UB",CT)_"^"_$S($P(IBND0,U,27)=1:"INST"_IBFTP,$P(IBND0,U,27)=2:"PROF"_IBFTP,1:"")
"RTN","IBCB",74,0)
 Q
"RTN","IBCB",75,0)
ST ; Do not use the variable IBH when calling this entry point
"RTN","IBCB",76,0)
 L ^DGCR(399,IBIFN):5 I '$T W !,"No further processing of this record permitted at this time.",!,"Record locked by another user.  Try again later." Q
"RTN","IBCB",77,0)
 D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBCB",78,0)
 D NOPTF^IBCB2 I 'IBAC1 D NOPTF1^IBCB2 Q
"RTN","IBCB",79,0)
 I IBAC'=1&(IBAC'=4.1) G ST2
"RTN","IBCB",80,0)
ST1 K ^UTILITY($J) S IBPOPOUT=0
"RTN","IBCB",81,0)
 ; Only allow view of bill waiting for MRA or pending extract
"RTN","IBCB",82,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2 D  G Q
"RTN","IBCB",83,0)
 . W !,"This bill is requesting an MRA - can only view bill data"
"RTN","IBCB",84,0)
 . S IBV=1 D VIEW^IBCB2
"RTN","IBCB",85,0)
 I IBAC=4.1 D  G Q
"RTN","IBCB",86,0)
 . Q:$P($G(^DGCR(399,IBIFN,0)),U,13)'=3
"RTN","IBCB",87,0)
 . N Z
"RTN","IBCB",88,0)
 . S Z=$P($G(^IBA(364,+$$LAST364^IBCEF4(IBIFN),0)),U,3)
"RTN","IBCB",89,0)
 . I Z'="X"&(Z'="P") Q
"RTN","IBCB",90,0)
 . W !,"This bill has a transmit status of ",$$EXPAND^IBTRE(364,.03,Z)," - can only view bill data"
"RTN","IBCB",91,0)
 . S IBV=1 D VIEW^IBCB2
"RTN","IBCB",92,0)
 D ^IBCSCU,^IBCSC1 G Q:'$T!($G(IBPOPOUT))
"RTN","IBCB",93,0)
ST2 K IBTXPRT,IBPOPOUT
"RTN","IBCB",94,0)
 D ^IBCB1                 ; perform IB edits/authorize the bill
"RTN","IBCB",95,0)
 I $G(IBCIREDT) G ST1     ; Re-edit the bill
"RTN","IBCB",96,0)
 KILL IBCIREDT            ; clean up
"RTN","IBCB",97,0)
 QUIT
"RTN","IBCB",98,0)
 ;
"RTN","IBCB",99,0)
Q ;
"RTN","IBCB",100,0)
 K IBIFN,IBV,IBAC
"RTN","IBCB",101,0)
 ;***
"RTN","IBCB",102,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCB" D T1^%ZOSV ;stop rt clock
"RTN","IBCB",103,0)
 Q
"RTN","IBCB",104,0)
 ;
"RTN","IBCB",105,0)
EDI S IBAC=1,IBV=0 D EN G Q:'IBAC1,EDI
"RTN","IBCB",106,0)
REV G Q
"RTN","IBCB",107,0)
AUT S IBAC=3,IBV=0 D EN G Q:'IBAC1,AUT
"RTN","IBCB",108,0)
GEN S IBAC=4,IBV=1 D EN G Q:'IBAC1,GEN
"RTN","IBCB",109,0)
VIEW S IBAC=4.1,IBV=1 D EN G Q:'IBAC1,VIEW
"RTN","IBCB",110,0)
 Q
"RTN","IBCB",111,0)
 ;
"RTN","IBCBB21")
0^12^B10727629^B14291950
"RTN","IBCBB21",1,0)
IBCBB21 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE FOR UB-92 ;2-NOV-89
"RTN","IBCBB21",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,232,155,291,348**;21-MAR-94;Build 5
"RTN","IBCBB21",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB21",4,0)
 ;
"RTN","IBCBB21",5,0)
EN(IBZPRC92) ;
"RTN","IBCBB21",6,0)
 ;
"RTN","IBCBB21",7,0)
 N ECODE,IBTXMT,IBXDATA,IBLPRT,IBI,Z,Z0,Z1,IBREQMRA
"RTN","IBCBB21",8,0)
 I '$D(IBZPRC92) D ALLPROC^IBCVA1(IBIFN,.IBZPRC92)
"RTN","IBCBB21",9,0)
 S IBREQMRA=$$REQMRA^IBEFUNC(IBIFN)    ; MRA?
"RTN","IBCBB21",10,0)
 K IBQUIT S IBQUIT=0
"RTN","IBCBB21",11,0)
 S (Z,Z0,Z1)=0
"RTN","IBCBB21",12,0)
 F  S Z=$O(IBZPRC92(Z)) Q:'Z  S:IBZPRC92(Z)["CPT" Z0=Z0+1 S:IBZPRC92(Z)["ICD" Z1=Z1+1
"RTN","IBCBB21",13,0)
 S IBTXMT=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB21",14,0)
 S IBZPRC92=Z0_U_Z1 ;Save # of CPT's and ICD9's
"RTN","IBCBB21",15,0)
 ; More than 50 procedures on a bill - must print locally
"RTN","IBCBB21",16,0)
 I IBTXMT,(+IBZPRC92>50!(+$P(IBZPRC92,U,2)>50)) D  Q:IBQUIT
"RTN","IBCBB21",17,0)
 . I 'IBREQMRA S IBQUIT=$$IBER^IBCBB3(.IBER,308) Q
"RTN","IBCBB21",18,0)
 . I '$P(IBNDTX,U,9) S IBQUIT=$$IBER^IBCBB3(.IBER,325)
"RTN","IBCBB21",19,0)
 ; If ICD9 procedures with dates and charges, bill 11x or 83x needs operating physician
"RTN","IBCBB21",20,0)
 I IBTOB12="11",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB304;"
"RTN","IBCBB21",21,0)
 I IBTOB12="83",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB312;"
"RTN","IBCBB21",22,0)
 ;
"RTN","IBCBB21",23,0)
 ; If any CPT procedures have more than 2 modifiers, warn
"RTN","IBCBB21",24,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>2 S Z0="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 2 modifiers - only first 2 will be used" D WARN^IBCBB11(Z0)
"RTN","IBCBB21",25,0)
 ;
"RTN","IBCBB21",26,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="A" S IBER=IBER_"IB086;"
"RTN","IBCBB21",27,0)
 ;
"RTN","IBCBB21",28,0)
 ; UB92 Diagnosis Codes
"RTN","IBCBB21",29,0)
 K IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCBB21",30,0)
 ;
"RTN","IBCBB21",31,0)
 ; Only 9 dx's allowed per claim plus 1 E-code
"RTN","IBCBB21",32,0)
 S (Z,ECODE,IBI)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  Q:IBER["309;"
"RTN","IBCBB21",33,0)
 . S IBI=IBI+1
"RTN","IBCBB21",34,0)
 . I $E($$ICD9^IBACSV(+$P(IBXDATA(Z),U)))="E" S:ECODE IBQUIT=$$IBER^IBCBB3(.IBER,301) S:'ECODE IBI=IBI-1,ECODE=1
"RTN","IBCBB21",35,0)
 . ; max DX check does not apply to MRAs
"RTN","IBCBB21",36,0)
 . I IBTXMT,IBI>9 D
"RTN","IBCBB21",37,0)
 .. I 'IBREQMRA Q:$P(IBNDTX,U,8)  S IBER=IBER_"IB309;" Q
"RTN","IBCBB21",38,0)
 .. I '$P(IBNDTX,U,9) S IBER=IBER_"IB326;"
"RTN","IBCBB21",39,0)
 ;
"RTN","IBCBB21",40,0)
 I 'IBI S IBER=IBER_"IB071;"   ;Require Diag code NOIS:OKL-0304-72495
"RTN","IBCBB21",41,0)
 I IBI,$$INPAT^IBCEF(IBIFN,1),$E($$ICD9^IBACSV(+$P(IBXDATA(1),U)))="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB21",42,0)
 I '$$OCC10^IBCBB2(IBIFN,.IBXDATA,3) S IBER=IBER_"IB093;"
"RTN","IBCBB21",43,0)
 ;
"RTN","IBCBB21",44,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",45,0)
 D F^IBCEF("N-UB92 SERVICE LINE (PRINT)",,,IBIFN)
"RTN","IBCBB21",46,0)
 S (Z0,IBI)=0 F  S IBI=$O(^TMP($J,"IBC-RC",IBI)) Q:'IBI  S Z=$G(^(IBI))  Q:+$P(Z,U,2)=1  I $P(Z,U,2) D
"RTN","IBCBB21",47,0)
 . I IBER'["IB090;",$P(Z,U,2)>1,($P(Z,U,7)>99999.99!($P(Z,U,8)>99999.99)) S IBER=IBER_"IB090;"
"RTN","IBCBB21",48,0)
 . Q:$P(Z,U,2)'<180&($P(Z,U,2)'>189)  ;Pass days (LOA) don't matter
"RTN","IBCBB21",49,0)
 . I '$P(Z,U,7),'$P(Z,U,8),'Z0,$$COBN^IBCEF(IBIFN)'>1  S Z0="Rev Code(s) having a 0-charge will not be transmitted for the bill" D WARN^IBCBB11(Z0) S Z0=1
"RTN","IBCBB21",50,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",51,0)
 Q
"RTN","IBCBB21",52,0)
 ;
"RTN","IBCCC2")
0^48^B57341017^B56568071
"RTN","IBCCC2",1,0)
IBCCC2 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;6/6/03 9:56am
"RTN","IBCCC2",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,124,138,51,151,137,161,182,211,245,155,296,320,348**;21-MAR-94;Build 5
"RTN","IBCCC2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCC2",4,0)
 ;
"RTN","IBCCC2",5,0)
 ;MAP TO DGCRCC2
"RTN","IBCCC2",6,0)
 ;
"RTN","IBCCC2",7,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC2",8,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC2",9,0)
 ;
"RTN","IBCCC2",10,0)
STEP5 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBCCC2",11,0)
 ;
"RTN","IBCCC2",12,0)
 ;move pure data nodes
"RTN","IBCCC2",13,0)
 F I="I1","I2","I3","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",14,0)
 ;
"RTN","IBCCC2",15,0)
 ;move top level data node. ;Do not move 'TX' node
"RTN","IBCCC2",16,0)
 F I="U","U1","U2","U3","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",17,0)
 ;
"RTN","IBCCC2",18,0)
 ;move multiple level data
"RTN","IBCCC2",19,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",20,0)
 ;
"RTN","IBCCC2",21,0)
 D FTPRV^IBCEU5(IBIFN) ; Ask change prov type if form type not the same
"RTN","IBCCC2",22,0)
 D COBCHG(IBIFN,,.IBCOB)
"RTN","IBCCC2",23,0)
 ;
"RTN","IBCCC2",24,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBCCC2",25,0)
 ;
"RTN","IBCCC2",26,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBCCC2",27,0)
 D PRIOR(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBCCC2",28,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ) G END
"RTN","IBCCC2",29,0)
 ;
"RTN","IBCCC2",30,0)
STEP6 N IBGOEND
"RTN","IBCCC2",31,0)
 I '$G(IBCE("EDI"))!$G(IBCE("EDI","NEW")),'$G(IBCEAUTO) D IBSCEDT G END:$G(IBGOEND)
"RTN","IBCCC2",32,0)
 ;
"RTN","IBCCC2",33,0)
 ;
"RTN","IBCCC2",34,0)
END K DFN,IB,IBA,IBA2,IBAD,IBADD1,IBBNO,IBCAN,IBCCC,IBDA,IBDPT,IBDR,IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBND,IBQUIT,IBU,IBUN,IBARST,IBCOB,IBCNCOPY,IBCBCOPY
"RTN","IBCCC2",35,0)
 K IBV,IBV1,IBW,IBWW,IBYN,IBZZ,PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,VAEL,VAERR,IBAC,IBCCC,IBDD1,IBIN,DGREV,DGREV00,DGREVHDR,IBCHK
"RTN","IBCCC2",36,0)
 K IBBS,IBLS,DGPCM,IBIP,IBND0,IBNDU,IBO,IBPTF,IBST,IBUC,IBDD,D,%,%DT,DIC,VA,VADM,X,X1,X2,X3,X4,Y,I,J,K,DGRVRCAL,DDH,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,IBA1,IBOD,IBINS,IBN,IBPROC,DGFUNC,DGIFN
"RTN","IBCCC2",37,0)
 Q
"RTN","IBCCC2",38,0)
 ;
"RTN","IBCCC2",39,0)
 ;
"RTN","IBCCC2",40,0)
IBSCEDT ; call the IB bill edit screens and validate the data
"RTN","IBCCC2",41,0)
 N IBV,IBPAR,IBAC,IBHV,IBH,IBCIREDT
"RTN","IBCCC2",42,0)
 D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBCCC2",43,0)
ST1 S IBV=0 D ^IBCSCU,^IBCSC1 I $G(IBPOPOUT) S IBGOEND=1 G IBSCX
"RTN","IBCCC2",44,0)
 S IBAC=1
"RTN","IBCCC2",45,0)
 D ^IBCB1
"RTN","IBCCC2",46,0)
 I $G(IBCIREDT) G ST1
"RTN","IBCCC2",47,0)
IBSCX ;
"RTN","IBCCC2",48,0)
 Q
"RTN","IBCCC2",49,0)
 ;
"RTN","IBCCC2",50,0)
 ;
"RTN","IBCCC2",51,0)
U F J=3,4,6:1:17,20 I $P(IBND("U"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U"),"^",J)=$P(IBND("U"),"^",J)
"RTN","IBCCC2",52,0)
 Q
"RTN","IBCCC2",53,0)
U1 F J=1:1:9,13,14 I $P(IBND("U1"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U1"),"^",J)=$P(IBND("U1"),"^",J)
"RTN","IBCCC2",54,0)
 Q
"RTN","IBCCC2",55,0)
U2 F J=1:1:19 I $P(IBND("U2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U2"),"^",J)=$P(IBND("U2"),"^",J)
"RTN","IBCCC2",56,0)
 Q
"RTN","IBCCC2",57,0)
U3 F J=1 I $P(IBND("U3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U3"),"^",J)=$P(IBND("U3"),"^",J)
"RTN","IBCCC2",58,0)
 Q
"RTN","IBCCC2",59,0)
UF2 F J=1 I $P(IBND("UF2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF2"),"^",J)=$P(IBND("UF2"),"^",J)
"RTN","IBCCC2",60,0)
 Q
"RTN","IBCCC2",61,0)
UF3 F J=1:1:7 I $P(IBND("UF3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF3"),"^",J)=$P(IBND("UF3"),"^",J)
"RTN","IBCCC2",62,0)
 Q
"RTN","IBCCC2",63,0)
UF31 F J=1:1:3 I $P(IBND("UF31"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF31"),"^",J)=$P(IBND("UF31"),"^",J)
"RTN","IBCCC2",64,0)
 Q
"RTN","IBCCC2",65,0)
C F J=10 I $P(IBND("C"),"^",J)]"" S $P(^DGCR(399,IBIFN,"C"),"^",J)=$P(IBND("C"),"^",J)
"RTN","IBCCC2",66,0)
 I '$D(^DGCR(399,IBIFN1,"CP")) D CP1
"RTN","IBCCC2",67,0)
 Q
"RTN","IBCCC2",68,0)
M F J=1:1:14 I $P(IBND("M"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M"),"^",J)=$P(IBND("M"),"^",J)
"RTN","IBCCC2",69,0)
 Q
"RTN","IBCCC2",70,0)
CC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",71,0)
 S IBDD=399.04 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",72,0)
OP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",73,0)
 S IBDD=399.043 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",74,0)
 Q
"RTN","IBCCC2",75,0)
OC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",76,0)
 S IBDD=399.041 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",77,0)
 Q
"RTN","IBCCC2",78,0)
OT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",79,0)
 S IBDD=399.048 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",80,0)
 Q
"RTN","IBCCC2",81,0)
CV ; Don't copy value codes from inpatient inst to inpatient prof bills
"RTN","IBCCC2",82,0)
 I $$FT^IBCEF(IBIFN1)'=2,$$FT^IBCEF(IBIFN)=2 Q
"RTN","IBCCC2",83,0)
 S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",84,0)
 S IBDD=399.047 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",85,0)
 Q
"RTN","IBCCC2",86,0)
RC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",87,0)
 S IBDD=399.042 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("RC")=^(0) F K=1:1:15 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("RC"),"^",K),X=$P(IBND("RC"),"^",K)
"RTN","IBCCC2",88,0)
 Q
"RTN","IBCCC2",89,0)
CP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",90,0)
 I +$G(IBNOCPT) Q
"RTN","IBCCC2",91,0)
 S IBDD=399.0304 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("CP")=^(0),IBND("CP-AUX")=$G(^("AUX")) D
"RTN","IBCCC2",92,0)
 . F K=1:1:7,9:1:14,16:1:22 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("CP"),"^",K)
"RTN","IBCCC2",93,0)
 . ; esg - 11/2/06 - IB*2*348 - 50.09 field was added - AUX piece [9]
"RTN","IBCCC2",94,0)
 . I IBND("CP-AUX")'="" F K=1:1:9 S $P(^DGCR(399,IBIFN,I,J,"AUX"),"^",K)=$P(IBND("CP-AUX"),"^",K)
"RTN","IBCCC2",95,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"MOD",0)) S ^DGCR(399,IBIFN,I,J,"MOD",0)=^DGCR(399,IBIFN1,I,J,"MOD",0) D
"RTN","IBCCC2",96,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"MOD",K)) Q:'K  D
"RTN","IBCCC2",97,0)
 ... I $G(IBNOTC),$P($$MOD^ICPTMOD(+$P($G(^DGCR(399,IBIFN1,I,J,"MOD",K,0)),U,2),"I"),U,2)="TC" Q  ; Don't copy TC modifier from inst to prof bill
"RTN","IBCCC2",98,0)
 ... S ^DGCR(399,IBIFN,I,J,"MOD",K,0)=^DGCR(399,IBIFN1,I,J,"MOD",K,0)
"RTN","IBCCC2",99,0)
CP1 S IBCOD=$P($G(^DGCR(399,IBIFN,0)),"^",9) Q:IBCOD=""!('$D(^DGCR(399,IBIFN1,"C")))
"RTN","IBCCC2",100,0)
 I IBCOD=9 F DGI=4,5,6 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICD0(",DGPROCDT=$P(^("C"),"^",DGI+7) D FILE
"RTN","IBCCC2",101,0)
 I IBCOD=4 F DGI=1,2,3 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+10) D FILE
"RTN","IBCCC2",102,0)
 I IBCOD=5 F DGI=7,8,9 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+4) D FILE
"RTN","IBCCC2",103,0)
 Q
"RTN","IBCCC2",104,0)
 ;
"RTN","IBCCC2",105,0)
PRV S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",106,0)
 N Z,Z0
"RTN","IBCCC2",107,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,19),Z0=$P($G(^DGCR(399,IBIFN1,0)),U,19)
"RTN","IBCCC2",108,0)
 S IBDD=399.0222 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) D
"RTN","IBCCC2",109,0)
 . S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",110,0)
 . I Z'=Z0,$S(X=3:Z0=3,X=4:Z0=2,1:0) S $P(^DGCR(399,IBIFN,I,J,0),U)=(Z0+1)
"RTN","IBCCC2",111,0)
 Q
"RTN","IBCCC2",112,0)
 ;
"RTN","IBCCC2",113,0)
COB S J=0 F  S J=$O(IBCOB(I,J)) Q:'J  S $P(^DGCR(399,IBIFN,I),U,J)=IBCOB(I,J)
"RTN","IBCCC2",114,0)
 Q
"RTN","IBCCC2",115,0)
 ;
"RTN","IBCCC2",116,0)
FILE N DIC,DIE,DR,DA,X,Y,DLAYGO,DD,DO
"RTN","IBCCC2",117,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCC2",118,0)
 S DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP""," Q:X=""  D FILE^DICN K DO,DD Q:+Y<1  S DA=+Y
"RTN","IBCCC2",119,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR="1///"_DGPROCDT D ^DIE
"RTN","IBCCC2",120,0)
 K DGPROCDT
"RTN","IBCCC2",121,0)
 Q
"RTN","IBCCC2",122,0)
 ;
"RTN","IBCCC2",123,0)
INDEX ;index entire file (set logic)
"RTN","IBCCC2",124,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
"RTN","IBCCC2",125,0)
 Q
"RTN","IBCCC2",126,0)
 ;
"RTN","IBCCC2",127,0)
PRIOR(IBIFN) ; set Secondary/Tertiary Bill #s on prior bills, if the bill is cancelled remove it from prior bills
"RTN","IBCCC2",128,0)
 N IBSEQ,IBSEQN,IBM1,I,IBIFN1
"RTN","IBCCC2",129,0)
 S IBSEQ=$$COB^IBCEF(IBIFN)
"RTN","IBCCC2",130,0)
 S IBSEQN=$S(IBSEQ="S":6,IBSEQ="T":7,1:"") Q:'IBSEQN
"RTN","IBCCC2",131,0)
 ;
"RTN","IBCCC2",132,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1")) I +$P(^DGCR(399,IBIFN,0),U,13)=7 S IBIFN=""
"RTN","IBCCC2",133,0)
 F I=5,6 I I<IBSEQN  S IBIFN1=+$P(IBM1,U,I) I +IBIFN1,$D(^DGCR(399,+IBIFN1,0)) S $P(^DGCR(399,IBIFN1,"M1"),U,IBSEQN)=IBIFN
"RTN","IBCCC2",134,0)
 Q
"RTN","IBCCC2",135,0)
 ;
"RTN","IBCCC2",136,0)
COBCHG(IBIFN,IBINS,IBCOB) ; Make changes for a new COB payer for bill
"RTN","IBCCC2",137,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCCC2",138,0)
 ; IBINS = ien of bill's current insurance (optional)
"RTN","IBCCC2",139,0)
 ; IBCOB = array subscripted by node,piece of COB data field change
"RTN","IBCCC2",140,0)
 ;
"RTN","IBCCC2",141,0)
 N I,IBFRMTYP
"RTN","IBCCC2",142,0)
 ; Subtract the Prior Payments from the bill's Offset (these are re-added by triggers)
"RTN","IBCCC2",143,0)
 F I=4,5,6  S $P(^DGCR(399,IBIFN,"U1"),U,2)=$P($G(^DGCR(399,IBIFN,"U1")),U,2)-$P($G(^DGCR(399,IBIFN,"U2")),U,I)
"RTN","IBCCC2",144,0)
 ;
"RTN","IBCCC2",145,0)
 I $G(IBINS),$$MCRWNR^IBEFUNC(IBINS) D
"RTN","IBCCC2",146,0)
 . ;MCRWNR is current insurance ... move payer only
"RTN","IBCCC2",147,0)
 . N IBCOBN,IBX
"RTN","IBCCC2",148,0)
 . S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCCC2",149,0)
 . S IBCOB(0,21)=$P("S^T^",U,IBCOBN)
"RTN","IBCCC2",150,0)
 . S IBCOB("M1",IBCOBN+4)=IBIFN
"RTN","IBCCC2",151,0)
 . S IBCOB("TX",1)="",IBCOB("TX",2)=""
"RTN","IBCCC2",152,0)
 . S IBX=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCCC2",153,0)
 . I IBX=0 S IBCOB("TX",5)=0                         ; MRA not needed
"RTN","IBCCC2",154,0)
 . I IBX["R" S IBCOB("TX",5)="A"                     ; MRA skipped
"RTN","IBCCC2",155,0)
 . I IBX=1,$$CHK^IBCEMU1(IBIFN) S IBCOB("TX",5)="C"  ; MRA on file
"RTN","IBCCC2",156,0)
 . I $G(IBPRCOB) S IBCOB("TX",5)="C"                 ; MRA being proc'd
"RTN","IBCCC2",157,0)
 . D PRIOR(IBIFN)
"RTN","IBCCC2",158,0)
 . Q
"RTN","IBCCC2",159,0)
 ;
"RTN","IBCCC2",160,0)
 ;reset fields for next Sequence Payer
"RTN","IBCCC2",161,0)
 F I=0,"M1","U2","TX" I $D(IBCOB(I)) D COB
"RTN","IBCCC2",162,0)
 ;
"RTN","IBCCC2",163,0)
 ; IB*2.0*211
"RTN","IBCCC2",164,0)
 ; save off Form Type
"RTN","IBCCC2",165,0)
 S IBFRMTYP=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC2",166,0)
 ;
"RTN","IBCCC2",167,0)
 ; fire xrefs set logic
"RTN","IBCCC2",168,0)
 D INDEX
"RTN","IBCCC2",169,0)
 ;
"RTN","IBCCC2",170,0)
 ; Restore Form Type if changed, but don't restore Form Type if
"RTN","IBCCC2",171,0)
 ;   creating HCFA bill from CTCOPY1^IBCCCB
"RTN","IBCCC2",172,0)
 I $G(IBCTCOPY)'=1,IBFRMTYP'=$P($G(^DGCR(399,IBIFN,0)),U,19) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBFRMTYP D ^DIE
"RTN","IBCCC2",173,0)
 ;
"RTN","IBCCC2",174,0)
 ; Restore Claim MRA Status field since triggers in fields 101 & 102
"RTN","IBCCC2",175,0)
 ;   will overwrite the correct value when processing the MRA/EOB.
"RTN","IBCCC2",176,0)
 ; If we're processing the MRA/EOB, then a valid MRA has been received.
"RTN","IBCCC2",177,0)
 I $G(IBPRCOB) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="24////C" D ^DIE
"RTN","IBCCC2",178,0)
 ;
"RTN","IBCCC2",179,0)
 K IBCOB("TX")
"RTN","IBCCC2",180,0)
 Q
"RTN","IBCCC2",181,0)
 ;
"RTN","IBCECOB1")
0^20^B67244551^B66193317
"RTN","IBCECOB1",1,0)
IBCECOB1 ;ALB/CXW - IB COB MANAGEMENT SCREEN/REPORT ;14-JUN-99
"RTN","IBCECOB1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,288,348**;21-MAR-94;Build 5
"RTN","IBCECOB1",3,0)
 ;
"RTN","IBCECOB1",4,0)
BLD ; Build list entrypoint
"RTN","IBCECOB1",5,0)
 N I,IBFND,IBB,IBIFN,IB364,IBDA1,IBDTN,IBDA,IBDAY,IBHIS,IBNDS,IBEUT,IBAPY,IBOAM,IBDT,IBMUT,IBBPY,IBINS,IBNDM,IBQ,IBNDI1,IBNDI2,IBNDI3,Z,Z0,IBSEQ,IB3611,IBINS1,IBINS2,IBEXPY,IBNBAL,IBPTRSP,IBAMT,IBMRACNT,IBPTNM,IBSRVC,IBPY,IBB364
"RTN","IBCECOB1",6,0)
 N IBEOBREV,IBDENDUP
"RTN","IBCECOB1",7,0)
 K ^TMP("IBCECOB",$J),^TMP("IBCECOB1",$J),^TMP("IBCOBST",$J),^TMP("IBCOBSTX",$J)
"RTN","IBCECOB1",8,0)
 D CLEAN^VALM10      ; kill data and video control arrays
"RTN","IBCECOB1",9,0)
 S VALMCNT=0,IBHIS=""
"RTN","IBCECOB1",10,0)
 ; since 0 is a valid Review Status, init w/null
"RTN","IBCECOB1",11,0)
 S IBEOBREV=""
"RTN","IBCECOB1",12,0)
 ; get EOB's w/Review Status of 0, 1, 1.5 or 2; If 3 or higher, not needed
"RTN","IBCECOB1",13,0)
 F  S IBEOBREV=$O(^IBM(361.1,"AMRA",1,IBEOBREV)) Q:IBEOBREV=""  Q:IBEOBREV>2  D  ;
"RTN","IBCECOB1",14,0)
 . S IBDA="A" F  S IBDA=$O(^IBM(361.1,"AMRA",1,IBEOBREV,IBDA),-1) Q:'IBDA  D BLD1
"RTN","IBCECOB1",15,0)
 ; no data accumulated
"RTN","IBCECOB1",16,0)
 I $O(^TMP("IBCOBST",$J,""))="" D NMAT Q
"RTN","IBCECOB1",17,0)
 ; display accumulated data
"RTN","IBCECOB1",18,0)
 D SCRN
"RTN","IBCECOB1",19,0)
 Q
"RTN","IBCECOB1",20,0)
BLD1 ;
"RTN","IBCECOB1",21,0)
 I '$$ELIG(IBDA) Q
"RTN","IBCECOB1",22,0)
 S IBDENDUP=$$DENDUP^IBCEMU4(IBDA)
"RTN","IBCECOB1",23,0)
 I '$G(IBMRADUP),IBDENDUP Q     ; don't include denied MRAs for Duplicate Claim/Service
"RTN","IBCECOB1",24,0)
 S IB3611=$G(^IBM(361.1,IBDA,0))
"RTN","IBCECOB1",25,0)
 S IBIFN=+IB3611,IB364=$P(IB3611,U,19),IBDT=+$P(IB3611,U,6)
"RTN","IBCECOB1",26,0)
 I $D(^TMP("IBCOBSTX",$J,IBIFN)) Q  ;show each bill once on the worklist
"RTN","IBCECOB1",27,0)
 S IBB=$G(^DGCR(399,IBIFN,0))
"RTN","IBCECOB1",28,0)
 S IBNDS=$G(^DGCR(399,IBIFN,"S")),IBNDI1=$G(^("I1")),IBNDI2=$G(^("I2")),IBNDI3=$G(^("I3")),IBNDM=$G(^("M"))
"RTN","IBCECOB1",29,0)
 S IBMUT=+$P(IBNDS,U,8),IBEUT=+$P(IBNDS,U,2)
"RTN","IBCECOB1",30,0)
 S IBINS="",IBSEQ=$P(IB3611,U,15)
"RTN","IBCECOB1",31,0)
 F I=1:1:3 S Z="IBNDI"_I I @Z D
"RTN","IBCECOB1",32,0)
 . N Q
"RTN","IBCECOB1",33,0)
 . S Q=(IBSEQ=I)
"RTN","IBCECOB1",34,0)
 . I Q S IBINS1=+@Z_U_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCECOB1",35,0)
 . S IBINS=IBINS_$S(IBINS="":"",1:", ")_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCECOB1",36,0)
 ; Get the payer/insurance company that comes after Medicare WNR
"RTN","IBCECOB1",37,0)
 ; If WNR is Primary, get the secondary ins. co.
"RTN","IBCECOB1",38,0)
 ; If WNR is secondary, get the tertiary ins. co.
"RTN","IBCECOB1",39,0)
 D  I $P(IBINS2,U,2)="" S $P(IBINS2,U,2)="UNKNOWN"
"RTN","IBCECOB1",40,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,1) S IBINS2=+IBNDI2_U_$P($G(^DIC(36,+IBNDI2,0)),U) Q
"RTN","IBCECOB1",41,0)
 . S IBINS2=+IBNDI3_U_$P($G(^DIC(36,+IBNDI3,0)),U)
"RTN","IBCECOB1",42,0)
 S IBFND=0
"RTN","IBCECOB1",43,0)
 ; biller entry not ALL and no biller, then get entered/edited by user
"RTN","IBCECOB1",44,0)
 I $D(^TMP("IBBIL",$J)) D  Q:'IBFND
"RTN","IBCECOB1",45,0)
 . S IBFND=$S($D(^TMP("IBBIL",$J,IBMUT)):IBMUT,$D(^TMP("IBBIL",$J,IBEUT)):IBEUT,1:0)
"RTN","IBCECOB1",46,0)
 S Z=$S(IBFND:IBFND,IBMUT:IBMUT,1:IBEUT)
"RTN","IBCECOB1",47,0)
 S IBMUT=$P($G(^VA(200,+Z,0)),U)_"~"_Z
"RTN","IBCECOB1",48,0)
 S:'$P(IBMUT,"~",2) IBMUT="UNKNOWN~0"
"RTN","IBCECOB1",49,0)
 S IBBPY=+$$COBN^IBCEF(IBIFN),IBQ=1
"RTN","IBCECOB1",50,0)
 ;IBQ;1=EOB without subsequent insurer,0=COB,2=0 balance
"RTN","IBCECOB1",51,0)
 D  ;I IBQ Q
"RTN","IBCECOB1",52,0)
 . ;Check for no reimbursable subsequent insurance
"RTN","IBCECOB1",53,0)
 .  F I=IBBPY+1:1:3 D  Q:'IBQ
"RTN","IBCECOB1",54,0)
 .. S Z="IBNDI"_I,Z=$G(@Z)
"RTN","IBCECOB1",55,0)
 .. I $P($G(^DIC(36,+Z,0)),U,2)="N" S IBQ=0 Q
"RTN","IBCECOB1",56,0)
 . ;Check if next ins doesn't exist or next bill# already created
"RTN","IBCECOB1",57,0)
 . S Z="IBNDI"_(IBBPY+1),Z=$G(@Z)
"RTN","IBCECOB1",58,0)
 . I Z,'$P($G(^DGCR(399,IBIFN,"M1")),U,5+IBBPY) S IBQ=0
"RTN","IBCECOB1",59,0)
 ;
"RTN","IBCECOB1",60,0)
 ; Days since transmission of latest bill in COB - IBDAY
"RTN","IBCECOB1",61,0)
 S IBDAY=+$P($G(^DGCR(399,IBIFN,"TX")),U,2) I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1)
"RTN","IBCECOB1",62,0)
 ; if no Last Electronic Extract Date on file 399, get it from file 364
"RTN","IBCECOB1",63,0)
 I 'IBDAY D  I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1) ;calc. the difference
"RTN","IBCECOB1",64,0)
 . S IBB364=$$LAST364^IBCEF4(IBIFN) I IBB364'="" S IBDAY=+$P($P($G(^IBA(364,IBB364,0)),U,4),".",1)
"RTN","IBCECOB1",65,0)
 ;
"RTN","IBCECOB1",66,0)
 S IBAPY=$$TPR^PRCAFN(IBIFN) ; payment on this bill from A/R
"RTN","IBCECOB1",67,0)
 S IBEXPY=+$G(^IBM(361.1,IBDA,1))       ; payer paid amount
"RTN","IBCECOB1",68,0)
 S IBPTRSP=$$PREOBTOT^IBCEU0(IBIFN)     ; patient resp. function
"RTN","IBCECOB1",69,0)
 S IBPY=$S(IBAPY:IBAPY,1:IBEXPY)
"RTN","IBCECOB1",70,0)
 S IBOAM=+$G(^DGCR(399,IBIFN,"U1"))     ; total charges for bill
"RTN","IBCECOB1",71,0)
 S IBNBAL=IBOAM-IBPY
"RTN","IBCECOB1",72,0)
 I IBNBAL'>0 S IBQ=2
"RTN","IBCECOB1",73,0)
 S IBPTNM=$P($G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0)),U) I IBPTNM="" S IBPTNM="UNKNOWN"
"RTN","IBCECOB1",74,0)
 S IBSRVC=$P($G(^DGCR(399,IBIFN,"U")),U)
"RTN","IBCECOB1",75,0)
 S Z0=$S(IBSRT="B":IBMUT,IBSRT="D":-IBDAY,IBSRT="I":$P(IBINS2,U,2)_"~"_$P(IBINS2,U),IBSRT="M":$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13)),IBSRT="R":-IBPTRSP,IBSRT="P":IBPTNM,IBSRT="S":IBSRVC,1:IBDT)
"RTN","IBCECOB1",76,0)
 S ^TMP("IBCOBST",$J,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_IBDA_U_$$HIS(IBIFN)_U_IBDAY_U_IBDT_U_IBQ_U_IB364_U_IBSEQ_U_IBEXPY_U_IBPTRSP
"RTN","IBCECOB1",77,0)
 S ^TMP("IBCOBST",$J,Z0,IBIFN,1)=$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16)
"RTN","IBCECOB1",78,0)
 S ^TMP("IBCOBSTX",$J,IBIFN)=IBDA  ;keep track of compiled IBIFN's
"RTN","IBCECOB1",79,0)
 ;
"RTN","IBCECOB1",80,0)
 ; Save some data when there are multiple MRA's on file for this bill
"RTN","IBCECOB1",81,0)
 S IBMRACNT=$$MRACNT^IBCEMU1(IBIFN)
"RTN","IBCECOB1",82,0)
 I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,1)="Multiple MRA's on file"
"RTN","IBCECOB1",83,0)
 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCECOB1",84,0)
 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,4)=IBDENDUP
"RTN","IBCECOB1",85,0)
 Q
"RTN","IBCECOB1",86,0)
 ;
"RTN","IBCECOB1",87,0)
HIS(IBIFN) ; COB history
"RTN","IBCECOB1",88,0)
 N A,B,IBST,IBBIL,IBHIS
"RTN","IBCECOB1",89,0)
 S IBHIS="",A=0 F  S A=$O(^IBM(361.1,"ABS",IBIFN,A)) Q:'A  S B=0 F  S B=$O(^IBM(361.1,"ABS",IBIFN,A,B)) Q:'B  D
"RTN","IBCECOB1",90,0)
 . S IBST=$P($G(^IBM(361.1,B,0)),U,4),IBBIL=$P(^DGCR(399,IBIFN,"M1"),U,4+A)
"RTN","IBCECOB1",91,0)
 . Q:IBBIL=""
"RTN","IBCECOB1",92,0)
 . S IBHIS=IBHIS_$S(IBHIS="":"",1:";")_$S(A=1:"PRIMARY",A=2:"SECONDARY",1:"TERTIARY")_" "_$S(IBST:"MRA",1:"EOB")_" RECEIVED - "_IBBIL
"RTN","IBCECOB1",93,0)
 Q IBHIS
"RTN","IBCECOB1",94,0)
 ;
"RTN","IBCECOB1",95,0)
NMAT ;No COB list
"RTN","IBCECOB1",96,0)
 S VALMCNT=2,IBCNT=2
"RTN","IBCECOB1",97,0)
 S ^TMP("IBCECOB",$J,1,0)=" "
"RTN","IBCECOB1",98,0)
 S ^TMP("IBCECOB",$J,2,0)="    No MRA's Matching Selection Criteria Were Found"
"RTN","IBCECOB1",99,0)
 Q
"RTN","IBCECOB1",100,0)
 ;
"RTN","IBCECOB1",101,0)
SCRN ;
"RTN","IBCECOB1",102,0)
 N IBX,IBCNT,IBIFN,IBDA,IB,X,IBS1,IBPAT,Z,IBK,IBFORM
"RTN","IBCECOB1",103,0)
 S IBCNT=0
"RTN","IBCECOB1",104,0)
 S IBS1=$S(IBSRT="B":"BILLER",IBSRT="D":"Days Since Last Transmission",IBSRT="L":"Date Last MRA Received",IBSRT="I":"SECONDARY INSURANCE COMPANY",IBSRT="M":"MRA Status",1:"")
"RTN","IBCECOB1",105,0)
 S IBX="" F  S IBX=$O(^TMP("IBCOBST",$J,IBX)) Q:IBX=""  D
"RTN","IBCECOB1",106,0)
 . I IBSRT="B"!(IBSRT="I")!(IBSRT="M") D
"RTN","IBCECOB1",107,0)
 .. D:IBCNT SET("",IBCNT+1)
"RTN","IBCECOB1",108,0)
 .. D SET(IBS1_": "_$P(IBX,"~"),IBCNT+1)
"RTN","IBCECOB1",109,0)
 . S IBIFN=0 F  S IBIFN=$O(^TMP("IBCOBST",$J,IBX,IBIFN)) Q:'IBIFN  D
"RTN","IBCECOB1",110,0)
 .. S IB=$G(^TMP("IBCOBST",$J,IBX,IBIFN))
"RTN","IBCECOB1",111,0)
 .. S Z=$G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0))
"RTN","IBCECOB1",112,0)
 .. S IBPAT=$$LJ^XLFSTR($E($P(Z,U),1,18),18," ")_" "_$E($P(Z,U,9),6,9)
"RTN","IBCECOB1",113,0)
 .. S IBDA=$P(IB,U,10) ;361.1-ien
"RTN","IBCECOB1",114,0)
 .. S IBQ=$P(IB,U,14),IB364=$P(IB,U,15)
"RTN","IBCECOB1",115,0)
 .. S IBFORM=$$EXTERNAL^DILFD(399,.19,,+$P(IB,U,6))
"RTN","IBCECOB1",116,0)
 .. I +$P(IB,U,6)=2 S IBFORM=1500   ; for space reasons
"RTN","IBCECOB1",117,0)
 .. S IBPTRSP=$P(IB,U,18)
"RTN","IBCECOB1",118,0)
 .. S IBAMT=$P(IB,U,2)
"RTN","IBCECOB1",119,0)
 .. S IBCNT=IBCNT+1
"RTN","IBCECOB1",120,0)
 .. S X=""
"RTN","IBCECOB1",121,0)
 .. S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBCECOB1",122,0)
 .. S X=$$SETFLD^VALM1($$BN1^PRCAFN(IBIFN),X,"BILL")
"RTN","IBCECOB1",123,0)
 .. S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IB,U)),X,"SERVICE")
"RTN","IBCECOB1",124,0)
 .. S X=$$SETFLD^VALM1(IBPAT,X,"PATNM")
"RTN","IBCECOB1",125,0)
 .. S X=$$SETFLD^VALM1($$RJ^XLFSTR($FN(IBPTRSP,"",2),9," "),X,"PTRESP")
"RTN","IBCECOB1",126,0)
 .. S X=$$SETFLD^VALM1($$RJ^XLFSTR($FN(IBAMT,"",2),9," "),X,"IBAMT")
"RTN","IBCECOB1",127,0)
 .. S X=$$SETFLD^VALM1($$TYPE^IBJTLA1($P(IB,U,5))_"/"_IBFORM,X,"BTYPE")
"RTN","IBCECOB1",128,0)
 .. D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",129,0)
 .. ;For R (Pt Resp), P (Pt Name) and S (Service Date) don't display sub-headers
"RTN","IBCECOB1",130,0)
 .. I "BIMRPS"'[IBSRT D
"RTN","IBCECOB1",131,0)
 ... S Z=$S(IBSRT="L":$$DAT1^IBOUTL(IBX),IBSRT="D":-IBX,1:IBX)
"RTN","IBCECOB1",132,0)
 ... D SET("   "_IBS1_": "_Z,IBCNT)
"RTN","IBCECOB1",133,0)
 .. S X=$$SETSTR^VALM1("Insurers:  "_$P(IB,U,9),"",7,74)
"RTN","IBCECOB1",134,0)
 .. D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",135,0)
 .. ;
"RTN","IBCECOB1",136,0)
 .. ; line 3 of display:  MRA status/date/split claim indicator
"RTN","IBCECOB1",137,0)
 .. S X=$$SETSTR^VALM1("MRA Status:  ","",5,13)
"RTN","IBCECOB1",138,0)
 .. S IBK=$G(^TMP("IBCOBST",$J,IBX,IBIFN,1))
"RTN","IBCECOB1",139,0)
 .. S X=$$SETSTR^VALM1($P(IBK,U,1),X,18,63)
"RTN","IBCECOB1",140,0)
 .. I $P(IBK,U,2)=2 S X=$$SETSTR^VALM1("** SPLIT CLAIM **",X,63,18)
"RTN","IBCECOB1",141,0)
 .. I $P(IBK,U,4),$P(IBK,U,2)'=2,$P(IBK,U,3)=1 S X=$$SETSTR^VALM1("** Denied for Duplicate **",X,54,27)
"RTN","IBCECOB1",142,0)
 .. D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",143,0)
 .. ;
"RTN","IBCECOB1",144,0)
 .. ; conditionally update video attributes of line 3
"RTN","IBCECOB1",145,0)
 .. I '$D(IOINHI) D ENS^%ZISS
"RTN","IBCECOB1",146,0)
 .. ; split claim
"RTN","IBCECOB1",147,0)
 .. I $P(IBK,U,2)=2 D CNTRL^VALM10(VALMCNT,63,17,IOINHI,IOINORM)
"RTN","IBCECOB1",148,0)
 .. ; multiple mra's on file
"RTN","IBCECOB1",149,0)
 .. I $P(IBK,U,3)>1 D CNTRL^VALM10(VALMCNT,18,22,IOINHI,IOINORM)
"RTN","IBCECOB1",150,0)
 .. ; Denied for Duplicate - no split claim and single MRA only
"RTN","IBCECOB1",151,0)
 .. I $P(IBK,U,4),$P(IBK,U,2)'=2,$P(IBK,U,3)=1 D CNTRL^VALM10(VALMCNT,54,26,IOINHI,IOINORM)
"RTN","IBCECOB1",152,0)
 .. Q
"RTN","IBCECOB1",153,0)
 Q
"RTN","IBCECOB1",154,0)
 ;
"RTN","IBCECOB1",155,0)
SET(X,CNT,IBIFN,IBDA,IBQ,IB364,IBX,IB) ;set up list manager screen array
"RTN","IBCECOB1",156,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECOB1",157,0)
 S ^TMP("IBCECOB",$J,VALMCNT,0)=X
"RTN","IBCECOB1",158,0)
 S ^TMP("IBCECOB",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECOB1",159,0)
 I $G(IBIFN),$G(^TMP("IBCECOB",$J,CNT))="" S ^TMP("IBCECOB",$J,CNT)=VALMCNT_U_IBIFN_U_IB364_U_IBDA_U_IBQ_U_IBX,^TMP("IBCECOB1",$J,CNT)=IB
"RTN","IBCECOB1",160,0)
 Q
"RTN","IBCECOB1",161,0)
 ;
"RTN","IBCECOB1",162,0)
FTYPE(Y) ;type classification
"RTN","IBCECOB1",163,0)
 Q $E($P($G(^IBE(353,Y,0)),U),1,8)
"RTN","IBCECOB1",164,0)
 ;
"RTN","IBCECOB1",165,0)
PTRESPI(IBEOB) ; Function - Computes the Patient's Responsibility based on IBEOB
"RTN","IBCECOB1",166,0)
 ; of 361.1 for Claims/Bills with form type 3=UB
"RTN","IBCECOB1",167,0)
 ; Input IBEOB - a single EOB ien; Required
"RTN","IBCECOB1",168,0)
 ; Output      - Function Returns IBPTRES - Patient Responsibility Amount for the EOB
"RTN","IBCECOB1",169,0)
 ;
"RTN","IBCECOB1",170,0)
 N IBPTRES,IBC,EOBADJ
"RTN","IBCECOB1",171,0)
 S IBPTRES=0,IBEOB=+$G(IBEOB)
"RTN","IBCECOB1",172,0)
 I 'IBEOB Q IBPTRES   ;PTRESPI
"RTN","IBCECOB1",173,0)
 ;
"RTN","IBCECOB1",174,0)
 ; get claim level adjustments
"RTN","IBCECOB1",175,0)
 K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCECOB1",176,0)
 S IBPTRES=$$CALCPR^IBCEU0(.EOBADJ)
"RTN","IBCECOB1",177,0)
 ;
"RTN","IBCECOB1",178,0)
 ; get line level adjustments
"RTN","IBCECOB1",179,0)
 S IBC=0 F  S IBC=$O(^IBM(361.1,IBEOB,15,IBC)) Q:'IBC  D
"RTN","IBCECOB1",180,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,15,IBC,1)
"RTN","IBCECOB1",181,0)
 . S IBPTRES=IBPTRES+$$CALCPR^IBCEU0(.EOBADJ)
"RTN","IBCECOB1",182,0)
 Q IBPTRES
"RTN","IBCECOB1",183,0)
 ;
"RTN","IBCECOB1",184,0)
ELIG(IBEOB) ; Function to determine if an EOB entry is eligible for
"RTN","IBCECOB1",185,0)
 ; inclusion on the MRA management worklist or not.
"RTN","IBCECOB1",186,0)
 ; IBEOB - ien into file 361.1 (required)
"RTN","IBCECOB1",187,0)
 ; Returns 1 if EOB should appear on the worklist
"RTN","IBCECOB1",188,0)
 ; Returns 0 if EOB should not appear on the worklist
"RTN","IBCECOB1",189,0)
 ;
"RTN","IBCECOB1",190,0)
 NEW ELIG,IB3611,IBIFN
"RTN","IBCECOB1",191,0)
 S ELIG=0,IBEOB=+$G(IBEOB)
"RTN","IBCECOB1",192,0)
 S IB3611=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCECOB1",193,0)
 I $P(IB3611,U,4)'=1 G ELIGX    ; eob type must be Medicare MRA
"RTN","IBCECOB1",194,0)
 I $P(IB3611,U,16)>2 G ELIGX    ; review status must be <= 2
"RTN","IBCECOB1",195,0)
 S IBIFN=+IB3611
"RTN","IBCECOB1",196,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=2 G ELIGX  ; Request MRA bill status
"RTN","IBCECOB1",197,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) G ELIGX         ; filing errors
"RTN","IBCECOB1",198,0)
 ;
"RTN","IBCECOB1",199,0)
 S ELIG=1    ; this EOB is eligible for the worklist
"RTN","IBCECOB1",200,0)
 ;
"RTN","IBCECOB1",201,0)
ELIGX ;
"RTN","IBCECOB1",202,0)
 Q ELIG
"RTN","IBCECOB1",203,0)
 ;
"RTN","IBCECOB4")
0^21^B34131844^B34137780
"RTN","IBCECOB4",1,0)
IBCECOB4 ;ALB/CXW - IB EM MANAGEMENT - REVIEW STATUS SCREEN ;16-MAY-2000
"RTN","IBCECOB4",2,0)
 ;;2.0;INTEGRATED BILLING;**137,181,348**;21-MAR-1994;Build 5
"RTN","IBCECOB4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECOB4",4,0)
 ;
"RTN","IBCECOB4",5,0)
EN ; -- main entry point for claims status awaiting resolution detail
"RTN","IBCECOB4",6,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCECOB4",7,0)
 D EN^VALM("IBCEM EOB REVIEW")
"RTN","IBCECOB4",8,0)
 Q
"RTN","IBCECOB4",9,0)
 ;
"RTN","IBCECOB4",10,0)
HDR ; -- header code
"RTN","IBCECOB4",11,0)
 ;IBDA - ien EOB selection screen
"RTN","IBCECOB4",12,0)
 N IBST
"RTN","IBCECOB4",13,0)
 S IBST=$P($G(^IBM(361.1,IBDA,0)),U,16)
"RTN","IBCECOB4",14,0)
 S VALMHDR(2)="Review Status= "_$S(IBST=1:"REVIEW IN PROCESS",IBST=2:"ACCEPTED-INTERIM EOB",IBST=3:"ACCEPTED-COMPLETE EOB",IBST=4:"REJECTED",IBST=9:"CLAIM CANCELLED",1:"NOT REVIEWED")
"RTN","IBCECOB4",15,0)
 Q
"RTN","IBCECOB4",16,0)
 ;
"RTN","IBCECOB4",17,0)
INIT ; -- init variables and list array
"RTN","IBCECOB4",18,0)
 N I,X,Y,Z,IBZ,IBFST,IBPAT
"RTN","IBCECOB4",19,0)
 K ^TMP("IBCECOC",$J)
"RTN","IBCECOB4",20,0)
SCR S VALMCNT=0
"RTN","IBCECOB4",21,0)
 ; IBCMT = the data extracted into ^TMP("IBCECOB1",$J)
"RTN","IBCECOB4",22,0)
 ; IBIFN = the ien of the bill
"RTN","IBCECOB4",23,0)
 ; IBDA = the ien of the entry in 361.1
"RTN","IBCECOB4",24,0)
 S Z=$G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0))
"RTN","IBCECOB4",25,0)
 S IBPAT=$E($P(Z,U),1,25)_"/"_$E($P(Z,U,9),6,9)
"RTN","IBCECOB4",26,0)
 S X=""
"RTN","IBCECOB4",27,0)
 S X=$$SETFLD^VALM1($$BN1^PRCAFN(IBIFN),X,"BILL")
"RTN","IBCECOB4",28,0)
 S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBCMT,U)),X,"SERVICE")
"RTN","IBCECOB4",29,0)
 S X=$$SETFLD^VALM1(IBPAT,X,"PATNM")
"RTN","IBCECOB4",30,0)
 S X=$$SETFLD^VALM1("  "_$P("PRI^SEC^TER",U,+$P(IBCMT,U,16)),X,"SEQ")
"RTN","IBCECOB4",31,0)
 S X=$$SETFLD^VALM1("  "_$$TYPE^IBJTLA1($P(IBCMT,U,5))_"/"_$P("UB-82^CMS-1500^UB-92",U,+$P(IBCMT,U,6)),X,"BTYPE")
"RTN","IBCECOB4",32,0)
 D SET(X)
"RTN","IBCECOB4",33,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBDA,21,Z)) Q:'Z  S I=$G(^(Z,0)) D
"RTN","IBCECOB4",34,0)
 . S X=$$SETSTR^VALM1("Review Date/Time: "_$$EXPAND^IBTRE(361.121,.01,+I),"",2,40)
"RTN","IBCECOB4",35,0)
 . D SET(X)
"RTN","IBCECOB4",36,0)
 . I $P($G(^VA(200,+$P(I,U,2),0)),U)'="" S X=$$SETSTR^VALM1("Reviewed By: "_$P($G(^VA(200,+$P(I,U,2),0)),U),"",2,50) D SET(X)
"RTN","IBCECOB4",37,0)
 . S (IBFST,Y)=0 F  S Y=$O(^IBM(361.1,IBDA,21,Z,1,Y)) Q:'Y  D
"RTN","IBCECOB4",38,0)
 .. S X=$$SETSTR^VALM1($S('IBFST:"Comments: ",1:"")_$G(^IBM(361.1,IBDA,21,Z,1,Y,0)),"",2,$S('IBFST:140,1:150))
"RTN","IBCECOB4",39,0)
 .. D SET(X)
"RTN","IBCECOB4",40,0)
 .. S IBFST=1
"RTN","IBCECOB4",41,0)
 . D SET("")
"RTN","IBCECOB4",42,0)
INITQ Q
"RTN","IBCECOB4",43,0)
 ;
"RTN","IBCECOB4",44,0)
HELP ; -- help code
"RTN","IBCECOB4",45,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECOB4",46,0)
 Q
"RTN","IBCECOB4",47,0)
 ;
"RTN","IBCECOB4",48,0)
EXIT ; -- exit code
"RTN","IBCECOB4",49,0)
 K ^TMP("IBCECOC",$J)
"RTN","IBCECOB4",50,0)
 D CLEAN^VALM10
"RTN","IBCECOB4",51,0)
 Q
"RTN","IBCECOB4",52,0)
 ;
"RTN","IBCECOB4",53,0)
SET(X) ;
"RTN","IBCECOB4",54,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECOB4",55,0)
 S ^TMP("IBCECOC",$J,VALMCNT,0)=X
"RTN","IBCECOB4",56,0)
 S ^TMP("IBCECOC",$J,"IDX",VALMCNT,1)=""
"RTN","IBCECOB4",57,0)
 S ^TMP("IBCECOC",$J,1)=VALMCNT
"RTN","IBCECOB4",58,0)
 Q
"RTN","IBCECOB4",59,0)
 ;
"RTN","IBCECOB4",60,0)
STATUS ; Edit review status
"RTN","IBCECOB4",61,0)
 ;IBDA - EOB ien
"RTN","IBCECOB4",62,0)
 N DA,DIE,DR,IBOLD,DIC,DO,DD,DLAYGO,IBFINAL,IBO,IBNEW,IBFACT
"RTN","IBCECOB4",63,0)
 D FULL^VALM1
"RTN","IBCECOB4",64,0)
 S DIE="^IBM(361.1,"
"RTN","IBCECOB4",65,0)
 S DA=IBDA
"RTN","IBCECOB4",66,0)
 G:'DA STATUSQ
"RTN","IBCECOB4",67,0)
 S IBOLD=$P($G(^IBM(361.1,DA,0)),U,16),IBFINAL=0,IBO=$S(IBOLD'="":"/"_IBOLD,1:"@")
"RTN","IBCECOB4",68,0)
 S DR="@1;.16;I +X<3 S IBFINAL=0,Y=""@99"";S IBFINAL=1;.2;I X="""" W !,""For a final status, this field is required"" S Y=""@98"";S Y=""@99"";@98;.16///"_IBO_";S Y=""@1"";@99"
"RTN","IBCECOB4",69,0)
 L +^IBM(361.1,IBDA):3 I '$T D  G STATUSQ
"RTN","IBCECOB4",70,0)
 . W !,"Sorry, another user currently editing this entry (#"_IBDA_")."
"RTN","IBCECOB4",71,0)
 D ^DIE
"RTN","IBCECOB4",72,0)
 ;
"RTN","IBCECOB4",73,0)
 I $G(IBFINAL) D  ;Final status selected - let remarks be entered
"RTN","IBCECOB4",74,0)
 . N Z
"RTN","IBCECOB4",75,0)
 . S Z=IBDA
"RTN","IBCECOB4",76,0)
 . N IBDA,Q,DIE,DR,DA,X,Y
"RTN","IBCECOB4",77,0)
 . S IBDA(1)=Z,IBDA=""
"RTN","IBCECOB4",78,0)
 . D ADDCOM(.IBDA,.DUZ,.IBCOM)
"RTN","IBCECOB4",79,0)
 . I $P($G(^IBM(361.1,IBDA(1),0)),U,20)="F",'$O(^IBM(361.1,IBDA(1),21,+IBDA,0)) D   ; Require remarks for 'OTHER ACTION' final status
"RTN","IBCECOB4",80,0)
 .. W !,"Since FILED - NO ACTION final status was selected, you must enter a",!,"   comment explaining the FILED - NO ACTION" D ADDCOM(.IBDA,.DUZ,.IBCOM,1)
"RTN","IBCECOB4",81,0)
 .. I IBDA D
"RTN","IBCECOB4",82,0)
 ... ; Delete entry if just entered without a comment
"RTN","IBCECOB4",83,0)
 ... D KILLREV(.IBDA)
"RTN","IBCECOB4",84,0)
 .. I '$O(^IBM(361.1,IBDA(1),21,+IBDA,0)) S DIE="^IBM(361.1,",DA=IBDA(1),DR=".20///@;.16///"_IBO D ^DIE W !,"The review status was not changed because no comment was entered",! Q
"RTN","IBCECOB4",85,0)
 S IBNEW=$P($G(^IBM(361.1,DA,0)),U,16)
"RTN","IBCECOB4",86,0)
 ;if time out-no change in review status
"RTN","IBCECOB4",87,0)
 S IBFACT=$P($G(^IBM(361.1,DA,0)),U,20)
"RTN","IBCECOB4",88,0)
 I $G(IBFINAL),IBFACT="",IBNEW>1 D  G STATUSQ
"RTN","IBCECOB4",89,0)
 . W !,"The review status was not changed because no final status was selected"
"RTN","IBCECOB4",90,0)
 . S DR=".16////"_IBOLD,DIE="^IBM(361.1," D ^DIE
"RTN","IBCECOB4",91,0)
 I IBNEW>1,$P(^IBM(361.1,DA,0),U,19) D
"RTN","IBCECOB4",92,0)
 . I "CR"'[IBFACT D
"RTN","IBCECOB4",93,0)
 .. N DIR,X,Y
"RTN","IBCECOB4",94,0)
 .. S DIR("?",1)="IF THIS BILL HAS RECEIVED ITS FINAL ELECTRONIC MESSAGE AND NO FURTHER ACTION",DIR("?",2)="WILL BE TAKEN ON IT, ANSWER YES"
"RTN","IBCECOB4",95,0)
 .. S DIR("A")="DO YOU WANT TO CLOSE THE TRANSMISSION RECORD FOR THIS CLAIM?: ",DIR("B")="NO",DIR(0)="YA" D ^DIR
"RTN","IBCECOB4",96,0)
 .. I Y>0 S IBFACT="N"
"RTN","IBCECOB4",97,0)
 . I "NCR"[IBFACT D UPDEDI^IBCEM(+$P(^IBM(361.1,DA,0),U,19),IBFACT) Q
"RTN","IBCECOB4",98,0)
 I IBOLD'=IBNEW D  ;Note the change and who made it
"RTN","IBCECOB4",99,0)
 . N IBIEN,IBTEXT,DA
"RTN","IBCECOB4",100,0)
 . S DA(1)=IBDA,DIC="^IBM(361.1,"_DA(1)_",21,",DIC(0)="L",DLAYGO=361.121
"RTN","IBCECOB4",101,0)
 . S X=$$NOW^XLFDT
"RTN","IBCECOB4",102,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1,21)
"RTN","IBCECOB4",103,0)
 . D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","IBCECOB4",104,0)
 . Q:Y'>0
"RTN","IBCECOB4",105,0)
 . S DA(2)=DA(1),DA(1)=+Y,IBIEN=DA(1)_","_DA(2)_",",IBTEXT(1)="REVIEW STATUS CHANGED TO '"_$$EXPAND^IBTRE(361.1,.16,$P(^IBM(361.1,DA(2),0),U,16))_"'  BY: "_$$EXPAND^IBTRE(361.121,.02,+$G(DUZ))
"RTN","IBCECOB4",106,0)
 . D WP^DIE(361.121,IBIEN,1,,"IBTEXT") K ^TMP("DIERR",$J)
"RTN","IBCECOB4",107,0)
 . D HDR,INIT
"RTN","IBCECOB4",108,0)
 L -^IBM(361.1,DA)
"RTN","IBCECOB4",109,0)
STATUSQ ;
"RTN","IBCECOB4",110,0)
 D PAUSE^VALM1
"RTN","IBCECOB4",111,0)
 S VALMBCK="R"
"RTN","IBCECOB4",112,0)
 Q
"RTN","IBCECOB4",113,0)
 ;
"RTN","IBCECOB4",114,0)
ADDCOM(IBDA,DUZ,IBCOM,ADD) ; Add review comment to file 361.1
"RTN","IBCECOB4",115,0)
 ; IBDA = array containing the DA references for the file add -
"RTN","IBCECOB4",116,0)
 ;        pass by reference
"RTN","IBCECOB4",117,0)
 ; DUZ = ien of the user
"RTN","IBCECOB4",118,0)
 ; ADD = flag when set to 1 says the review date exists,
"RTN","IBCECOB4",119,0)
 ;       just allow comment entry
"RTN","IBCECOB4",120,0)
 ; Returns IBDA = the entry # of the comment
"RTN","IBCECOB4",121,0)
 ;          and IBCOM array referencing any comments added by the user
"RTN","IBCECOB4",122,0)
 ;
"RTN","IBCECOB4",123,0)
 N DA,DIC,DD,DO,DLAYGO,X,Y
"RTN","IBCECOB4",124,0)
 S DR=$S($G(DUZ):".02////"_DUZ_";",1:"")_"1"
"RTN","IBCECOB4",125,0)
 I '$G(ADD) D
"RTN","IBCECOB4",126,0)
 . K DO,DD
"RTN","IBCECOB4",127,0)
 . S DIC="^IBM(361.1,"_IBDA(1)_",21,",DA(1)=IBDA(1),X=$$NOW^XLFDT
"RTN","IBCECOB4",128,0)
 . W !,"New Review Date: "_$$FMTE^XLFDT(X,2)
"RTN","IBCECOB4",129,0)
 . S DIC("DR")=DR,DLAYGO=361.121
"RTN","IBCECOB4",130,0)
 . S DIC(0)="L",DIC("P")=$$GETSPEC^IBEFUNC(361.1,21)
"RTN","IBCECOB4",131,0)
 . D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","IBCECOB4",132,0)
 . S IBDA=+Y
"RTN","IBCECOB4",133,0)
 I IBDA>0 D
"RTN","IBCECOB4",134,0)
 . I $G(ADD) S DIE="^IBM(361.1,"_IBDA(1)_",21,",DA(1)=IBDA(1),DA=IBDA D ^DIE
"RTN","IBCECOB4",135,0)
 . I '$O(^IBM(361.1,IBDA(1),21,IBDA,0)) D KILLREV(.IBDA) Q
"RTN","IBCECOB4",136,0)
 . S IBCOM(DUZ,IBDA)=""
"RTN","IBCECOB4",137,0)
 Q
"RTN","IBCECOB4",138,0)
 ;
"RTN","IBCECOB4",139,0)
KILLREV(IBDA) ; Deletes a review date if no comments entered
"RTN","IBCECOB4",140,0)
 N DA,DIK
"RTN","IBCECOB4",141,0)
 S DA=IBDA,DA(1)=IBDA(1),DIK="^IBM(361.1,"_IBDA(1)_",21,"
"RTN","IBCECOB4",142,0)
 K IBCOM(DUZ,IBDA)
"RTN","IBCECOB4",143,0)
 D ^DIK
"RTN","IBCECOB4",144,0)
 Q
"RTN","IBCECOB4",145,0)
 ;
"RTN","IBCEF11")
0^5^B40186930^B34672839
"RTN","IBCEF11",1,0)
IBCEF11 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS - CONT ;30-JAN-96
"RTN","IBCEF11",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,309,335,348**;21-MAR-94;Build 5
"RTN","IBCEF11",3,0)
 ;
"RTN","IBCEF11",4,0)
BOX24D(A,IB) ; Returns the lines for boxes 19-24 of the CMS-1500 display
"RTN","IBCEF11",5,0)
 ; IB = flag is 1 if only box 24 is needed
"RTN","IBCEF11",6,0)
 Q $S('$G(IB):"36",1:"44")_"^55"
"RTN","IBCEF11",7,0)
 ;
"RTN","IBCEF11",8,0)
RCBOX() ; Returns the lines for revenue code boxes of the UB-92 display
"RTN","IBCEF11",9,0)
 Q "19^41"
"RTN","IBCEF11",10,0)
 ;
"RTN","IBCEF11",11,0)
OUTPT(IBIFN,IBPRINT) ; Returns an array of service line data from
"RTN","IBCEF11",12,0)
 ;                 CMS-1500 box 24.  Output is in IBXDATA(n)
"RTN","IBCEF11",13,0)
 ; IBPRINT = print flag  1: return print fields
"RTN","IBCEF11",14,0)
 ;                       0: return EDI fields
"RTN","IBCEF11",15,0)
 ; Uses diagnosis array ^TMP("IBXSAVE",$J,"DX",IBIFN,DIAG CODE)=SEQ #
"RTN","IBCEF11",16,0)
 ;   if it already exists. If not, it builds it from N-DIAGNOSES element
"RTN","IBCEF11",17,0)
 ;
"RTN","IBCEF11",18,0)
 ; For EDI call: Returns IBXDATA(n)=
"RTN","IBCEF11",19,0)
 ;   begin date(YYYYMMDD)^end date(YYYYMMDD)^pos^tos^
"RTN","IBCEF11",20,0)
 ;   proc code/revenue code - if no procedure (not the pointers)^
"RTN","IBCEF11",21,0)
 ;   type of code^dx pointer(s)^unit charge^units^modifiers separated by;
"RTN","IBCEF11",22,0)
 ;   ^purchased charge amount ^anesthesia minutes^emergency indicator^
"RTN","IBCEF11",23,0)
 ;   lab-type service flag.
"RTN","IBCEF11",24,0)
 ;
"RTN","IBCEF11",25,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF11",26,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF11",27,0)
 ;      line in the first '^' piece followed by the '0' node data of file
"RTN","IBCEF11",28,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF11",29,0)
 ;       COB = COB sequence # of adjustment's ins co, m = seq #
"RTN","IBCEF11",30,0)
 ;         -- AND --
"RTN","IBCEF11",31,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF11",32,0)
 ;           the data on the '0' node for each subordinate entry of file
"RTN","IBCEF11",33,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837 output)
"RTN","IBCEF11",34,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF11",35,0)
 ;
"RTN","IBCEF11",36,0)
 ; For Print call: Returns begin date(DDMMYYYY)^end date(DDMMYYYY) or
"RTN","IBCEF11",37,0)
 ;   null if equal to begin date^pos^tos^bedsection name(if no procedure)
"RTN","IBCEF11",38,0)
 ;   or procedure code(not the pointer)^ ... refer to EDI call results
"RTN","IBCEF11",39,0)
 ;   Also, IBXDATA(n,"TEXT")=the text to print on first line of box 24,
"RTN","IBCEF11",40,0)
 ;   If no procedure code, returns IBXDATA(n,"A")=rev code abbrev
"RTN","IBCEF11",41,0)
 ;
"RTN","IBCEF11",42,0)
 ;  For both calls, returns IBXDATA(n,item type,item ptr)=""
"RTN","IBCEF11",43,0)
 ;      -- AND --
"RTN","IBCEF11",44,0)
 ;   IBXDATA(n,"RX")=RX#^drug name^NDC^refill #^(re)fill date^qty^days
"RTN","IBCEF11",45,0)
 ;                   ^chrge^ien of file 362.4^NDC format
"RTN","IBCEF11",46,0)
 ;           If line references a prescription
"RTN","IBCEF11",47,0)
 ;      -- AND --
"RTN","IBCEF11",48,0)
 ;   If no revenue code for a prescription, returns IBXDATA(n,"ARX")=""
"RTN","IBCEF11",49,0)
 ;      -- AND --
"RTN","IBCEF11",50,0)
 ;   IBXDATA(n,"AUX")='AUX' node of the procedure entry
"RTN","IBCEF11",51,0)
 ;
"RTN","IBCEF11",52,0)
 N IB,IBI,IBJ,IBFLD,IBDXI,IBXIEN,Z,IBXTRA,IBRX,IBRX0,IBRX1,Z0,Z1
"RTN","IBCEF11",53,0)
 ;
"RTN","IBCEF11",54,0)
 K ^TMP($J,"IBITEM")
"RTN","IBCEF11",55,0)
 S ^TMP($J,"IBITEM")=""
"RTN","IBCEF11",56,0)
 ; Build diagnosis array if not already built
"RTN","IBCEF11",57,0)
 I $O(^TMP("IBXSAVE",$J,"DX",IBIFN,""))="",$O(^IBA(362.3,"AIFN"_IBIFN,"")) D
"RTN","IBCEF11",58,0)
 .N Z,IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCEF11",59,0)
 .S Z="" F  S Z=$O(IBXDATA(Z)) K:$O(IBXDATA(0))=""&(Z="") IBXDATA Q:Z=""  S:$P(IBXDATA(Z),U,2) ^TMP("IBXSAVE",$J,"DX",IBIFN,$P(IBXDATA(Z),U,2))=Z
"RTN","IBCEF11",60,0)
 ;
"RTN","IBCEF11",61,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)),IB("U")=$G(^("U")),IB("U1")=$G(^("U1"))
"RTN","IBCEF11",62,0)
 S IBI="" F  S IBI=$O(^TMP("IBXSAVE",$J,"DX",IBIFN,IBI)) Q:IBI=""  S IBDXI(IBI)=^(IBI)
"RTN","IBCEF11",63,0)
 I '$G(IBPRINT) D RVCE^IBCF23(IBIFN,IBIFN)
"RTN","IBCEF11",64,0)
 I $G(IBPRINT) D RVCE^IBCF23(,IBIFN)
"RTN","IBCEF11",65,0)
 ; Returns IBFLD(24) = begin date^end date^pos^tos^
"RTN","IBCEF11",66,0)
 ;     proc/bedsection/revenue code^dx pointer^unit charge^
"RTN","IBCEF11",67,0)
 ;     units^modifiers^ purchased charge amount ^anesthesia minutes^
"RTN","IBCEF11",68,0)
 ;     emergency indicator ^ AND
"RTN","IBCEF11",69,0)
 ;         IBFLD(24,n,type,item)=""
"RTN","IBCEF11",70,0)
 ;         IBFLD(24,n_"A") = revenue code abbreviation if no procedure
"RTN","IBCEF11",71,0)
 ;         IBFLD(24,n,"AUX") = 'AUX' node of line item 
"RTN","IBCEF11",72,0)
 ;         IBFLD(24,n,"RX") = soft pointer to file 362.4 from 'item' fld
"RTN","IBCEF11",73,0)
 ;                            (can be null)
"RTN","IBCEF11",74,0)
 ;
"RTN","IBCEF11",75,0)
 D SET^IBCSC5A(IBIFN,.IBRX) ;prescriptions
"RTN","IBCEF11",76,0)
 ; IBRX1(ien 362.4)=RX#^drug ien^NDC^refil #^(re)fil date^qty^days^chrge
"RTN","IBCEF11",77,0)
 I IBRX S IBRX="" F  S IBRX=$O(IBRX(IBRX)) Q:IBRX=""  S IBRX0=0 F  S IBRX0=$O(IBRX(IBRX,IBRX0)) Q:'IBRX0  D
"RTN","IBCEF11",78,0)
 . N IBRXH
"RTN","IBCEF11",79,0)
 . S IBRXH=IBRX(IBRX,IBRX0)
"RTN","IBCEF11",80,0)
 . S IBRX1(+IBRXH)=IBRX_U_$P(IBRXH,U,2)_U_$P(IBRXH,U,5)_U_$P(IBRXH,U,7)_U_IBRX0_U_$P(IBRXH,U,4)_U_$P(IBRXH,U,3)_U_$P(IBRXH,U,6)_U_+IBRXH_U_$P(IBRXH,U,8)
"RTN","IBCEF11",81,0)
 K IBRX
"RTN","IBCEF11",82,0)
 ;
"RTN","IBCEF11",83,0)
 S IBI=0
"RTN","IBCEF11",84,0)
 F  S IBI=$O(IBFLD(24,IBI)) Q:IBI'=+IBI  D
"RTN","IBCEF11",85,0)
 . S IBRX1=0
"RTN","IBCEF11",86,0)
 . I '$G(IBPRINT) Q:$P(IBFLD(24,IBI),U,7)*$P(IBFLD(24,IBI),U,8)'>0  ; For EDI, ignore 0-charge line items
"RTN","IBCEF11",87,0)
 . S IBXDATA(IBI)=$P(IBFLD(24,IBI),U)_U_$P(IBFLD(24,IBI),U,$S($P(IBFLD(24,IBI),U,2)=""&'$G(IBPRINT):1,1:2))
"RTN","IBCEF11",88,0)
 . S $P(IBXDATA(IBI),U,3,5)=$P(IBFLD(24,IBI),U,3,5)
"RTN","IBCEF11",89,0)
 . S $P(IBXDATA(IBI),U,6)=$S($D(IBFLD(24,IBI_"X")):"CJ",1:"HC")
"RTN","IBCEF11",90,0)
 . S $P(IBXDATA(IBI),U,7,13)=$P(IBFLD(24,IBI),U,6,12)
"RTN","IBCEF11",91,0)
 . S $P(IBXDATA(IBI),U,14)=+$$ISLAB(IBXDATA(IBI))
"RTN","IBCEF11",92,0)
 . ;
"RTN","IBCEF11",93,0)
 . I $D(IBFLD(24,IBI,"RX")) D  ;Rx
"RTN","IBCEF11",94,0)
 .. S IBRX1=1
"RTN","IBCEF11",95,0)
 .. I $P($G(IBFLD(24,IBI,"AUX")),U,8)'="" S $P(IBFLD(24,IBI,"AUX"),U,8)="",$P(IBFLD(24,IBI,"AUX"),U,9)=""  ;No free text allowed for rx's
"RTN","IBCEF11",96,0)
 .. I $D(IBRX1(+IBFLD(24,IBI,"RX"))) D  Q  ;Soft link exists
"RTN","IBCEF11",97,0)
 ...D ZERO^IBRXUTL(+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2))
"RTN","IBCEF11",98,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(+IBFLD(24,IBI,"RX")),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2),.01)),1,30)
"RTN","IBCEF11",99,0)
 ... K IBRX1(+IBFLD(24,IBI,"RX"))
"RTN","IBCEF11",100,0)
 ... ; No soft link - must find the first Rx with the same charge
"RTN","IBCEF11",101,0)
 .. S IBRX="" F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  I +$P(IBRX1(IBRX),U,8)=+$P(IBXDATA(IBI),U,8) D  Q
"RTN","IBCEF11",102,0)
 ... D ZERO^IBRXUTL(+$P(IBRX1(IBRX),U,2))
"RTN","IBCEF11",103,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(IBRX),U,2),.01)),1,30) K IBRX1(IBRX) Q
"RTN","IBCEF11",104,0)
 ... Q
"RTN","IBCEF11",105,0)
 .. Q
"RTN","IBCEF11",106,0)
 . ;
"RTN","IBCEF11",107,0)
 . I $G(IBFLD(24,IBI,"AUX"))'="" D
"RTN","IBCEF11",108,0)
 .. I $G(IBPRINT),$P(IBFLD(24,IBI,"AUX"),U,8)'="" S IBXDATA(IBI,"TEXT")=$P(IBFLD(24,IBI,"AUX"),U,8),$P(IBFLD(24,IBI,"AUX"),U,8)=""
"RTN","IBCEF11",109,0)
 .. S IBXDATA(IBI,"AUX")=IBFLD(24,IBI,"AUX")
"RTN","IBCEF11",110,0)
 .. Q
"RTN","IBCEF11",111,0)
 . ;
"RTN","IBCEF11",112,0)
 . I $G(IBPRINT) D
"RTN","IBCEF11",113,0)
 .. I '$P(IBXDATA(IBI),U,8),'$G(IBXDATA(IBI,"RX")) D  Q
"RTN","IBCEF11",114,0)
 ... I $G(IBNOSHOW) Q    ; don't show errors/warnings
"RTN","IBCEF11",115,0)
 ... S IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS < #PROCEDURES, THEY MUST BE ="
"RTN","IBCEF11",116,0)
 ... I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",117,0)
 ... Q
"RTN","IBCEF11",118,0)
 .. ;
"RTN","IBCEF11",119,0)
 .. I $G(IBFLD(24,IBI_"A"))'="" D  Q
"RTN","IBCEF11",120,0)
 ... S IBXDATA(IBI,"A")=IBFLD(24,IBI_"A")
"RTN","IBCEF11",121,0)
 ... I $G(IBNOSHOW) Q    ; don't show errors/warnings
"RTN","IBCEF11",122,0)
 ... S IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS > #PROCEDURES, THEY MUST BE=: "_IBFLD(24,IBI_"A")
"RTN","IBCEF11",123,0)
 ... I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",124,0)
 ... Q
"RTN","IBCEF11",125,0)
 .. ;
"RTN","IBCEF11",126,0)
 .. S IBRX=$G(IBXDATA(IBI,"RX"))
"RTN","IBCEF11",127,0)
 .. I IBRX'="" D  ;Format Rx detail
"RTN","IBCEF11",128,0)
 ... N Z
"RTN","IBCEF11",129,0)
 ... S Z=$P(IBRX,U)
"RTN","IBCEF11",130,0)
 ... S Z=$S(Z'="":"Rx#"_Z_" ",1:"RX: ")
"RTN","IBCEF11",131,0)
 ... S IBXDATA(IBI,"TEXT")=Z_$S($P(IBRX,U,3)'="":"NDC: "_$P(IBRX,U,3),1:"NOC: "_$P(IBRX,U,2))_" Qty: "_$P(IBRX,U,6)_" Days: "_$P(IBRX,U,7)
"RTN","IBCEF11",132,0)
 ... S $P(IBXDATA(IBI,"AUX"),U,9)="N4"   ; service line comment qualifier for RX's
"RTN","IBCEF11",133,0)
 ... Q
"RTN","IBCEF11",134,0)
 .. Q
"RTN","IBCEF11",135,0)
 . ;
"RTN","IBCEF11",136,0)
 . I '$G(IBPRINT) D COBLINE^IBCEU6(IBIFN,IBI,.IBXDATA,,.IBXTRA)
"RTN","IBCEF11",137,0)
 . Q
"RTN","IBCEF11",138,0)
 ;
"RTN","IBCEF11",139,0)
 I $G(IBPRINT) D
"RTN","IBCEF11",140,0)
 . S IBRX=0 F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  D
"RTN","IBCEF11",141,0)
 .. S IBI=+$O(IBXDATA(""),-1)+1
"RTN","IBCEF11",142,0)
 .. S IBXDATA(IBI)=$$DATE($P(IBRX1(IBRX),U,5))
"RTN","IBCEF11",143,0)
 .. S IBXDATA(IBI,"TEXT")="**** ERROR - NO PROC LINK TO REV CODE FOR DRUG: RX#: "_$P(IBRX1(IBRX),U)_"  NDC #: "_$P(IBRX1(IBRX),U,3)
"RTN","IBCEF11",144,0)
 .. I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",145,0)
 .. S IBXDATA(IBI,"ARX")=""
"RTN","IBCEF11",146,0)
 .. D ZERO^IBRXUTL(+$P(IBRX1(IBRX),U,2))
"RTN","IBCEF11",147,0)
 .. S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(IBRX),U,2),.01)),1,30) K IBRX1(IBRX)
"RTN","IBCEF11",148,0)
 .. Q
"RTN","IBCEF11",149,0)
 . Q
"RTN","IBCEF11",150,0)
 ;
"RTN","IBCEF11",151,0)
 I '$G(IBPRINT),$D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,0) ;Handle bundled/unbundled lines
"RTN","IBCEF11",152,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCEF11",153,0)
 Q
"RTN","IBCEF11",154,0)
 ;
"RTN","IBCEF11",155,0)
ISLAB(LDATA) ; Returns 0/1 if line item data indicates the item is a lab (1)
"RTN","IBCEF11",156,0)
 ; 'LAB' is defined here as type of service = 5
"RTN","IBCEF11",157,0)
 Q $E($P(LDATA,U,4))="5"
"RTN","IBCEF11",158,0)
 ;
"RTN","IBCEF11",159,0)
FMT(DATA,DLEN,FLEN) ; Returns a string in DATA with a max length of DLEN
"RTN","IBCEF11",160,0)
 ;  and a field length of FLEN
"RTN","IBCEF11",161,0)
 Q $E($E(DATA,1,DLEN)_$J("",FLEN),1,FLEN)
"RTN","IBCEF11",162,0)
 ;
"RTN","IBCEF11",163,0)
DATE(X,DEL) ;  Returns FM date in X as MMxDDxYYYY  where x=DEL
"RTN","IBCEF11",164,0)
 S DEL=$G(DEL)
"RTN","IBCEF11",165,0)
 S X=$$DATE^IBCF2(X,1,1)
"RTN","IBCEF11",166,0)
 I X'="" S X=$E(X,1,2)_DEL_$E(X,3,4)_DEL_$E(X,5,8)
"RTN","IBCEF11",167,0)
 Q X
"RTN","IBCEF11",168,0)
 ;
"RTN","IBCEF3")
0^18^B41293059^B39901861
"RTN","IBCEF3",1,0)
IBCEF3 ;ALB/TMP - FORMATTER SPECIFIC BILL FLD FUNCTIONS ;17-JUNE-96
"RTN","IBCEF3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,84,121,51,152,210,155,348**;21-MAR-94;Build 5
"RTN","IBCEF3",3,0)
 ;
"RTN","IBCEF3",4,0)
MPG(PG,FLDS,FORM) ; Set static flds on pages after page 1
"RTN","IBCEF3",5,0)
 ;        for either 1500 or UB92
"RTN","IBCEF3",6,0)
 ;  PG = page #
"RTN","IBCEF3",7,0)
 ; FORM= 1 for UB-92, otherwise for 1500
"RTN","IBCEF3",8,0)
 ;  FLDS: array passed by reference and containing lines OR
"RTN","IBCEF3",9,0)
 ;        line/column from pg 1 to repeat on subsequent pgs
"RTN","IBCEF3",10,0)
 ;        Format: FLDS(LINE,COL)  or  FLDS(LINE) for whole line
"RTN","IBCEF3",11,0)
 ;   CMS-1500:        LINES 1-5,7-43,57 from col 1 to 50, 58-63
"RTN","IBCEF3",12,0)
 ;   UB-92:           LINE 2-5/COL 1 (FACILITY NAME/ADDRESS)
"RTN","IBCEF3",13,0)
 ;                    LINE 3/COL 57,78 (BILL#, TYPE OF BILL)
"RTN","IBCEF3",14,0)
 ;                    LINE 7 (PATIENT NAME, ADDRESS)
"RTN","IBCEF3",15,0)
 ;                    LINE 9/COL 1 (PATIENT BIRTHDATE)
"RTN","IBCEF3",16,0)
 ;                    LINE 62-64/COL 1 (BOX 84 DATA)
"RTN","IBCEF3",17,0)
 N Z,Z0,Z1,LPG
"RTN","IBCEF3",18,0)
 S FORM=$S($G(FORM)=1:3,1:2)
"RTN","IBCEF3",19,0)
 I FORM=2 D  ; print page # on each pg, totals on last page of 1500
"RTN","IBCEF3",20,0)
 . S LPG=+$O(^TMP("IBXDATA",$J,IBXREC,""),-1)
"RTN","IBCEF3",21,0)
 . S Z="[Page "_PG_" of "_LPG_"]"
"RTN","IBCEF3",22,0)
 . I $L($G(IBXSAVE("INDENT")))'>40 S Z=$J("",(80-$L(Z))\2)_Z
"RTN","IBCEF3",23,0)
 . I $L($G(IBXSAVE("INDENT")))>40 S Z=$J("",10)_Z
"RTN","IBCEF3",24,0)
 . D SETGBL^IBCEFG(PG,6,1,Z,.IBXSIZE)
"RTN","IBCEF3",25,0)
 . I PG=2 S Z=$P(Z,"[")_"[Page 1 of "_LPG_"]" D SETGBL^IBCEFG(1,6,1,Z,.IBXSIZE)
"RTN","IBCEF3",26,0)
 . I LPG=PG D
"RTN","IBCEF3",27,0)
 .. ;
"RTN","IBCEF3",28,0)
 .. ; esg - IB*2*348 - update dollar format for last page of 1500
"RTN","IBCEF3",29,0)
 .. ;
"RTN","IBCEF3",30,0)
 .. D SETGBL^IBCEFG(PG,57,51,$$DOL^IBCEF77($G(IBXSAVE("TOT")),9),.IBXSIZE)
"RTN","IBCEF3",31,0)
 .. D SETGBL^IBCEFG(PG,57,62,$$DOL^IBCEF77($G(IBXSAVE("PAID")),8),.IBXSIZE)
"RTN","IBCEF3",32,0)
 .. D SETGBL^IBCEFG(PG,57,71,$$DOL^IBCEF77($G(IBXSAVE("BDUE")),8),.IBXSIZE)
"RTN","IBCEF3",33,0)
 .. K IBXSAVE("PTOT"),IBXSAVE("TOT"),IBXSAVE("BDUE"),IBXSAVE("PAID")
"RTN","IBCEF3",34,0)
 ;
"RTN","IBCEF3",35,0)
 S Z=0 F  S Z=$O(FLDS(Z)) Q:'Z  D
"RTN","IBCEF3",36,0)
 . I $O(FLDS(Z,""))="" D  Q  ;repeats line
"RTN","IBCEF3",37,0)
 .. S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) Q:'Z0  S Z1=$G(^(Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",38,0)
 . S Z0=0 F  S Z0=$O(FLDS(Z,Z0)) Q:'Z0  S Z1=$G(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",39,0)
 . I FORM=2,LPG'=PG D
"RTN","IBCEF3",40,0)
 .. D SETGBL^IBCEFG(PG,57,51,"",.IBXSIZE)
"RTN","IBCEF3",41,0)
 .. D SETGBL^IBCEFG(PG,57,71,"",.IBXSIZE)
"RTN","IBCEF3",42,0)
 Q
"RTN","IBCEF3",43,0)
 ;
"RTN","IBCEF3",44,0)
NONSERV(Z,Z0) ; Set variable if non-service/non-text data is present for box
"RTN","IBCEF3",45,0)
 ;  24 of CMS-1500
"RTN","IBCEF3",46,0)
 ; Z = sequence of IBXSAVE being processed
"RTN","IBCEF3",47,0)
 ; Z0 = sequnce within IBXDATA to indicate actual line #
"RTN","IBCEF3",48,0)
 I $P(IBXSAVE("BOX24",Z),U)="" S IBXSAVE("NON-SERV",Z0)=""
"RTN","IBCEF3",49,0)
 Q
"RTN","IBCEF3",50,0)
 ;
"RTN","IBCEF3",51,0)
PG(VAL,LNCT) ;Set next pg for CMS-1500 lines
"RTN","IBCEF3",52,0)
 ;VAL = value of fld
"RTN","IBCEF3",53,0)
 ;LNCT = line # from IBXSAVE("BOX24") array
"RTN","IBCEF3",54,0)
 N IBP,IBL
"RTN","IBCEF3",55,0)
 S IBP=LNCT\12+(LNCT#12>0),IBL=LNCT-(12*(IBP-1))-1
"RTN","IBCEF3",56,0)
 I IBL'<0 S VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA)) D SETGBL^IBCEFG(IBP,IBXLN+IBL,IBXCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",57,0)
 K IBXDATA(LNCT)
"RTN","IBCEF3",58,0)
 Q
"RTN","IBCEF3",59,0)
 ;
"RTN","IBCEF3",60,0)
MPG92(PG,OFFSET,VAL,IBLN,IBCOL,NOFORM) ; Set up pgs > 1 for UB92 overflows
"RTN","IBCEF3",61,0)
 ; PG = Page # to set (REQUIRED)
"RTN","IBCEF3",62,0)
 ; OFFSET = offset from first line this should be extracted into
"RTN","IBCEF3",63,0)
 ;          0 = first line (REQUIRED)
"RTN","IBCEF3",64,0)
 ; VAL = value to set (REQUIRED)
"RTN","IBCEF3",65,0)
 ; IBLN = line to set data at (if null, uses IBXLN)
"RTN","IBCEF3",66,0)
 ; IBCOL = column to set data at (if null, uses IBXCOL)
"RTN","IBCEF3",67,0)
 ; NOFORM = don't format, just output data as passed
"RTN","IBCEF3",68,0)
 ; Assumes formatter IBXLN,IBXCOL variables exist
"RTN","IBCEF3",69,0)
 ;
"RTN","IBCEF3",70,0)
 I $G(IBLN)="" S IBLN=IBXLN
"RTN","IBCEF3",71,0)
 I $G(IBCOL)="" S IBCOL=IBXCOL
"RTN","IBCEF3",72,0)
 S:'$G(NOFORM) VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA))
"RTN","IBCEF3",73,0)
 D SETGBL^IBCEFG(PG,IBLN+OFFSET,IBCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",74,0)
 Q
"RTN","IBCEF3",75,0)
 ;
"RTN","IBCEF3",76,0)
CKREV(CT,VAL) ; Check too many rev code lines to fit on pg
"RTN","IBCEF3",77,0)
 ; 
"RTN","IBCEF3",78,0)
 I CT'>23,$O(^TMP($J,"IBC-RC",""),-1)'>23 S IBXDATA(CT)=VAL Q  ;If up to 23 rev codes, output on first page
"RTN","IBCEF3",79,0)
 D MPG92((CT-1)\21+1,CT-1#21,VAL) ; 21 on a pg, blank line, pg ref
"RTN","IBCEF3",80,0)
 Q
"RTN","IBCEF3",81,0)
 ;
"RTN","IBCEF3",82,0)
CKPG92 ; Check to see if multiple UB92 pgs are needed then populate
"RTN","IBCEF3",83,0)
 ; static flds from page 1, add page numbers
"RTN","IBCEF3",84,0)
 Q:'$O(^TMP("IBXDATA",$J,IBXREC,1))
"RTN","IBCEF3",85,0)
 ;
"RTN","IBCEF3",86,0)
 N FLDS,LPG,IBPG,IBP,Z,Z0
"RTN","IBCEF3",87,0)
 S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1),IBP=0
"RTN","IBCEF3",88,0)
 S Z="" F  S Z=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z),-1) Q:'Z  S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z,Z0)) Q:'Z0  I $G(^(Z0))'="" S IBP=1 Q
"RTN","IBCEF3",89,0)
 I 'IBP K ^TMP("IBXDATA",$J,IBXREC,LPG) S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1) Q:LPG=1
"RTN","IBCEF3",90,0)
 ; Static flds
"RTN","IBCEF3",91,0)
 S FLDS(7)="" F Z=2,9,4,5,62,63,64 S FLDS(Z,1)=""
"RTN","IBCEF3",92,0)
 F Z=1,58,77:1:80 S FLDS(3,Z)=""
"RTN","IBCEF3",93,0)
 F IBPG=1:1:LPG D
"RTN","IBCEF3",94,0)
 . ; Add pg # to last line of rev codes if multiple pages
"RTN","IBCEF3",95,0)
 . N IB,IBP
"RTN","IBCEF3",96,0)
 . S IB=$G(^TMP("IBXDATA",$J,IBXREC,IBPG,41,6))
"RTN","IBCEF3",97,0)
 . D MPG92(IBPG,22,$J("",20)_"PAGE",19,6,1)
"RTN","IBCEF3",98,0)
 . D MPG92(IBPG,22,IBPG_" OF "_LPG,19,31,1)
"RTN","IBCEF3",99,0)
 . D:IBPG>1 MPG(IBPG,.FLDS,1)
"RTN","IBCEF3",100,0)
 ;
"RTN","IBCEF3",101,0)
 Q
"RTN","IBCEF3",102,0)
 ;
"RTN","IBCEF3",103,0)
HCPC(R) ;FORMAT HCPC fld FOR UB92 (returns formatted value)
"RTN","IBCEF3",104,0)
 ; R = flag for type of fld (1/2/3) being printed in rev code block
"RTN","IBCEF3",105,0)
 Q R  ;No longer used as of patch IB*2.0*51
"RTN","IBCEF3",106,0)
 ;
"RTN","IBCEF3",107,0)
PROS(IBIFN) ; Extract billable prosthetics for 837
"RTN","IBCEF3",108,0)
 N IBARRAY,Z,Z0,CT,PROS
"RTN","IBCEF3",109,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF3",110,0)
 I '$P(IBARRAY,U,2) S CT="" G PROSQ
"RTN","IBCEF3",111,0)
 S Z="",CT=0
"RTN","IBCEF3",112,0)
 F  S Z=$O(IBARRAY(Z)) Q:Z=""  S Z0="" F  S Z0=$O(IBARRAY(Z,Z0)) Q:Z0=""  S CT=CT+1 D
"RTN","IBCEF3",113,0)
 .S PROS=$P($$PIN^IBCSC5B(+$P($G(^IBA(362.5,+IBARRAY(Z,Z0),0)),U,3)),U,2)
"RTN","IBCEF3",114,0)
 .;date^item ptr file 661^short descr from file 441^entry # in file 362.5
"RTN","IBCEF3",115,0)
 .S IBXDATA(CT)=Z_U_Z0_U_PROS_U_+IBARRAY(Z,Z0)
"RTN","IBCEF3",116,0)
PROSQ Q CT
"RTN","IBCEF3",117,0)
 ;
"RTN","IBCEF3",118,0)
B24(IBXSV,IBIFN,IBNOSHOW) ; Code to execute to set up IBXSV("BOX24") for
"RTN","IBCEF3",119,0)
 ;   print or IBXSAVE("OUTPT") for transmit - called by output formatter
"RTN","IBCEF3",120,0)
 ; IBNOSHOW = 1 if not to show error/warning text lines
"RTN","IBCEF3",121,0)
 ; Pass IBXSV by reference
"RTN","IBCEF3",122,0)
 N IBSUB
"RTN","IBCEF3",123,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEF3",124,0)
 K IBXSV(IBSUB)
"RTN","IBCEF3",125,0)
 I '$D(IBIFN) S IBIFN=$G(IBXIEN)
"RTN","IBCEF3",126,0)
 I IBIFN D F^IBCEF("N-HCFA 1500 SERVICE"_$S(IBSUB["24":"S (PRINT",1:" LINE (EDI")_")",,,IBIFN)
"RTN","IBCEF3",127,0)
 I $S(IBSUB'["24":1,1:'$G(IBNOSHOW)) D
"RTN","IBCEF3",128,0)
 . M IBXSV(IBSUB)=IBXDATA
"RTN","IBCEF3",129,0)
 E  D
"RTN","IBCEF3",130,0)
 . N Z,CT
"RTN","IBCEF3",131,0)
 . S (Z,CT)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  I '$D(IBXDATA(Z,"ARX")) S CT=CT+1 M IBXSV(IBSUB,CT)=IBXDATA(Z)
"RTN","IBCEF3",132,0)
 Q
"RTN","IBCEF3",133,0)
 ;
"RTN","IBCEF3",134,0)
 ; esg - 11/14/03 - Moved the below functions due to space constraints
"RTN","IBCEF3",135,0)
 ;
"RTN","IBCEF3",136,0)
ALLTYP(IBIFN) Q $$ALLTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",137,0)
INSTYP(IBIFN,SEQ) Q $$INSTYP^IBCEF31(IBIFN,$G(SEQ))
"RTN","IBCEF3",138,0)
POLTYP(IBIFN,IBSEQ) Q $$POLTYP^IBCEF31(IBIFN,$G(IBSEQ))
"RTN","IBCEF3",139,0)
ALLPTYP(IBIFN) Q $$ALLPTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",140,0)
 ;
"RTN","IBCEF3",141,0)
FILL(Z) ;
"RTN","IBCEF3",142,0)
 Q
"RTN","IBCEF3",143,0)
 ;
"RTN","IBCEF3",144,0)
 ;  ***** 
"RTN","IBCEF3",145,0)
 ;  The following code performs the multi-page set up for
"RTN","IBCEF3",146,0)
 ;  printing overflow data on the UB-92
"RTN","IBCEF3",147,0)
 ;  *****
"RTN","IBCEF3",148,0)
 ;
"RTN","IBCEF3",149,0)
XPROC(DATA,CT) ; Output any UB92 procedures after 6 on new page(s)
"RTN","IBCEF3",150,0)
 ; DATA = output data from IBXSAVE("PROC",CT)
"RTN","IBCEF3",151,0)
 ; CT = array sequence # of the procedure being output
"RTN","IBCEF3",152,0)
 ; Only used for local prints
"RTN","IBCEF3",153,0)
 N OFFSET,PG,COL,PRCODE,Q
"RTN","IBCEF3",154,0)
 S Q=(CT-1)\3#2,OFFSET=$S('Q:0,1:2)
"RTN","IBCEF3",155,0)
 S PG=(CT-1)\6+1,COL=4+(CT-1#3*15)
"RTN","IBCEF3",156,0)
 D MPG92(PG,OFFSET,$P(DATA,U),58,COL),MPG92(PG,OFFSET,$P(DATA,U,2),58,COL+8)
"RTN","IBCEF3",157,0)
 Q
"RTN","IBCEF3",158,0)
 ;
"RTN","IBCEF3",159,0)
XDIAG(DATA,CT) ; Output any UB92 other diagnoses after 8 on new page(s)
"RTN","IBCEF3",160,0)
 ; DATA = output data from IBXSAVE("DX",CT)
"RTN","IBCEF3",161,0)
 ; CT = array sequence # of the diagnosis being output
"RTN","IBCEF3",162,0)
 ; Only used for local prints
"RTN","IBCEF3",163,0)
 N COL,PG
"RTN","IBCEF3",164,0)
 S PG=(CT-1)\8+1,COL=8+(CT-1#9*7)
"RTN","IBCEF3",165,0)
 S DATA=$P($$ICD9^IBACSV(+DATA),U)
"RTN","IBCEF3",166,0)
 D MPG92(PG,0,DATA,56,COL)
"RTN","IBCEF3",167,0)
 Q
"RTN","IBCEF3",168,0)
 ;
"RTN","IBCEF3",169,0)
XVAL(DATA,CT) ; Output any UB92 value codes after 12 on new page(s)
"RTN","IBCEF3",170,0)
 ; DATA = output data from IBXSAVE("VC",CT)
"RTN","IBCEF3",171,0)
 ; CT = array sequence # of the value code being output
"RTN","IBCEF3",172,0)
 ;
"RTN","IBCEF3",173,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",174,0)
 S PG=(CT-1)\12+1,COL=44+(CT-1#3*13),OFFSET=(CT-(12*(PG-1))-1)\3
"RTN","IBCEF3",175,0)
 D MPG92(PG,OFFSET,$P(DATA,U),14,COL),MPG92(PG,OFFSET,$P(DATA,U,2),14,COL+2)
"RTN","IBCEF3",176,0)
 Q
"RTN","IBCEF3",177,0)
 ;
"RTN","IBCEF3",178,0)
XCC(DATA,CT) ; Output any UB92 condition codes after 7 on new page(s)
"RTN","IBCEF3",179,0)
 ; DATA = output data from IBXSAVE("CC",CT)
"RTN","IBCEF3",180,0)
 ; CT = array sequence # of the condition code being output
"RTN","IBCEF3",181,0)
 ;
"RTN","IBCEF3",182,0)
 N COL,PG
"RTN","IBCEF3",183,0)
 S PG=(CT-1)\7+1,COL=55+(CT-1#7*3)
"RTN","IBCEF3",184,0)
 D MPG92(PG,0,DATA,9,COL)
"RTN","IBCEF3",185,0)
 Q
"RTN","IBCEF3",186,0)
 ;
"RTN","IBCEF3",187,0)
XOCC(DATA,CT,FL) ; Output any UB92 occurrence codes after 8 (2 per form
"RTN","IBCEF3",188,0)
 ;  locators 32-35) on new page(s)
"RTN","IBCEF3",189,0)
 ; DATA = data from IBXSAVE("OCC",CT) to be output
"RTN","IBCEF3",190,0)
 ; CT = array sequence # of occurrence code being output
"RTN","IBCEF3",191,0)
 ; FL = # of form locator being populated with the occ code
"RTN","IBCEF3",192,0)
 ;
"RTN","IBCEF3",193,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",194,0)
 S PG=(CT-1)\2+1,COL=4+((FL-32)*10),OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",195,0)
 D MPG92(PG,OFFSET,$P(DATA,U),11,COL),MPG92(PG,OFFSET,$P(DATA,U,2),11,COL+3)
"RTN","IBCEF3",196,0)
 Q
"RTN","IBCEF3",197,0)
XOCCS(DATA,CT) ; Output any UB92 occurrence span codes after 2 on new page(s)
"RTN","IBCEF3",198,0)
 ; DATA = data from IBXSAVE("OCCS",CT) to be output
"RTN","IBCEF3",199,0)
 ; CT = array sequence # of occurrence span code being output
"RTN","IBCEF3",200,0)
 ;
"RTN","IBCEF3",201,0)
 N PG,OFFSET
"RTN","IBCEF3",202,0)
 S PG=(CT-1)\2+1,OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",203,0)
 D MPG92(PG,OFFSET,$P(DATA,U),11,41),MPG92(PG,OFFSET,$P(DATA,U,2),11,44),MPG92(PG,OFFSET,$P(DATA,U,3),11,51)
"RTN","IBCEF3",204,0)
 Q
"RTN","IBCEF3",205,0)
 ;
"RTN","IBCEF3",206,0)
FORMAT(VAL,IBX0,IBXDA) ;
"RTN","IBCEF3",207,0)
 I IBX0'="",IBXDA S VAL=$$FORMAT^IBCEFG(VAL,$P($G(^IBA(364.6,+IBXDA,0)),U,9),$P(IBX0,U,7),IBX0)
"RTN","IBCEF3",208,0)
 Q VAL
"RTN","IBCEF3",209,0)
 ;
"RTN","IBCEF3",210,0)
OUTPDT(IBIFN,IBXSAVE,IBXDATA) ; Returns outpatient service to date
"RTN","IBCEF3",211,0)
 ;  formatted CCYYMMDD for UB92 837
"RTN","IBCEF3",212,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEF3",213,0)
 ; IBXSAVE = pass by reference for IBXSAVE("INPT") and IBXSAVE("DATE")
"RTN","IBCEF3",214,0)
 ; IBXDATA = array with formatted date or each line item - CCYYMMDD
"RTN","IBCEF3",215,0)
 N Z
"RTN","IBCEF3",216,0)
 S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE("INPT",Z),U,10):$$DT^IBCEFG1($P(IBXSAVE("INPT",Z),U,10),,"D8"),1:IBXSAVE("DATE"))
"RTN","IBCEF3",217,0)
 K IBXSAVE("DATE")
"RTN","IBCEF3",218,0)
 Q
"RTN","IBCEF3",219,0)
 ;
"RTN","IBCEF77")
0^6^B12716914^B6621719
"RTN","IBCEF77",1,0)
IBCEF77 ;WOIFO/SS - FORMATTER/EXTRACT BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF77",2,0)
 ;;2.0;INTEGRATED BILLING;**232,280,155,290,291,320,348**;21-MAR-94;Build 5
"RTN","IBCEF77",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF77",4,0)
 ;
"RTN","IBCEF77",5,0)
SORT(IBPRNUM,IBPRTYP,IB399,IBSRC,IBDST,IBN,IBEXC,IBSEQ,IBLIMIT) ;
"RTN","IBCEF77",6,0)
 N IBXIEN,IBXDATA,IBNET,IBTRI,IB1,IB2,IBID,Z,IBZ,IBZ1,IBSVP
"RTN","IBCEF77",7,0)
 S (IB1,IB2,IBZ,IBZ1,IBTRI)=""
"RTN","IBCEF77",8,0)
 D F^IBCEF("N-ALL ATT/RENDERING PROV SSN","IBZ",,IB399)
"RTN","IBCEF77",9,0)
 S IBZ1=$$ALLPTYP^IBCEF3(IB399)
"RTN","IBCEF77",10,0)
 F Z=1:1:3 S $P(IBZ1,U,Z)=$S($P(IBZ1,U,Z)="CH":1,1:"") S:$P(IBZ1,U,Z) IBTRI=1
"RTN","IBCEF77",11,0)
 S IBNET=$$NETID^IBCEP() ; netwrk id type
"RTN","IBCEF77",12,0)
 I $G(IBN) D
"RTN","IBCEF77",13,0)
 . S Z=0 F  S Z=$O(IBDST(IBPRNUM,IBPRTYP,Z)) Q:'Z  S IBID(+$P(IBDST(IBPRNUM,IBPRTYP,Z),U,9))=""
"RTN","IBCEF77",14,0)
 F  S IB1=$O(IBSRC(IB1)) Q:IB1=""  D  Q:IBN=IBLIMIT
"RTN","IBCEF77",15,0)
 . N OK,IBSTLIC
"RTN","IBCEF77",16,0)
 . S IBSTLIC=""
"RTN","IBCEF77",17,0)
 . F  S IB2=$O(IBSRC(IB1,IB2)) Q:IB2=""  D  Q:IBN=IBLIMIT
"RTN","IBCEF77",18,0)
 . . S IBSVP=$P(IBSRC(IB1,IB2),U)
"RTN","IBCEF77",19,0)
 . . ; If ID overridden, output no others of this type
"RTN","IBCEF77",20,0)
 . . I $G(IBEXC),$P($G(IBSRC(IB1,IB2)),U,9)=IBEXC Q
"RTN","IBCEF77",21,0)
 . . ; Ck state of care/lic match if st lic#
"RTN","IBCEF77",22,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="0B" S OK=1 D  Q:'OK
"RTN","IBCEF77",23,0)
 . . . I +$$CAREST^IBCEP2A(IB399)'=$P(IBSRC(IB1,IB2),U,7) S IBSTLIC=1 Q
"RTN","IBCEF77",24,0)
 . . . I $G(IBSTLIC(0))'="" S OK=0 Q
"RTN","IBCEF77",25,0)
 . . . S IBSTLIC(0)=$G(IBSRC(IB1,IB2)),OK=0
"RTN","IBCEF77",26,0)
 . . ; Exclude SSN from sec ids unless required
"RTN","IBCEF77",27,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="SY" Q
"RTN","IBCEF77",28,0)
 . . ; Only 1 of each prov id type
"RTN","IBCEF77",29,0)
 . . Q:$D(IBID(+$P($G(IBSRC(IB1,IB2)),U,9)))
"RTN","IBCEF77",30,0)
 . . S IBN=IBN+1,IBID(+$P($G(IBSRC(IB1,IB2)),U,9))=""
"RTN","IBCEF77",31,0)
 . . S IBDST(IBPRNUM,IBPRTYP,IBN)=$G(IBSRC(IB1,IB2))
"RTN","IBCEF77",32,0)
 . I IBN'=IBLIMIT,'$G(IBSTLIC),$G(IBSTLIC(0))'="" S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=IBSTLIC(0)
"RTN","IBCEF77",33,0)
 I $$FT^IBCEF(IB399)=2,$G(IBID(IBNET))="",IBTRI,$P(IBZ1,U,IBSEQ) D    ; WCJ 02/13/2006
"RTN","IBCEF77",34,0)
 . Q:$P(IBZ,U,IBPRTYP)=""
"RTN","IBCEF77",35,0)
 . ; here, no network id & TRICARE ins co.
"RTN","IBCEF77",36,0)
 . N Z
"RTN","IBCEF77",37,0)
 . S Z=+$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0)),Z=$P($G(^DGCR(399,IB399,"PRV",Z,0)),U,2)
"RTN","IBCEF77",38,0)
 . S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=Z_U_+$$POLICY^IBCEF(IB399,1,IBSEQ)_U_$P($G(^IBE(355.97,IBNET,0)),U,3)_U_$P(IBZ,U,IBPRTYP)_U_"0^0^^^"_IBNET
"RTN","IBCEF77",39,0)
 Q
"RTN","IBCEF77",40,0)
 ;
"RTN","IBCEF77",41,0)
 ; esg - 8/25/06 - IB*2*348 - CFIDS function
"RTN","IBCEF77",42,0)
 ;
"RTN","IBCEF77",43,0)
CFIDS(IBIFN,PRVTYP) ; Claim Form IDs for human providers
"RTN","IBCEF77",44,0)
 ; Function returns a 3 piece string:  [1] default secondary ID qual
"RTN","IBCEF77",45,0)
 ;                                     [2] default secondary ID
"RTN","IBCEF77",46,0)
 ;                                     [3] NPI
"RTN","IBCEF77",47,0)
 ; Input:   IBIFN - internal claim#
"RTN","IBCEF77",48,0)
 ;         PRVTYP - internal provider type ID number
"RTN","IBCEF77",49,0)
 ;                - 1:REFER;2:OPER;3:REND;4:ATT;5:SUPER;9:OTHER
"RTN","IBCEF77",50,0)
 ;                - if blank, then default Att/Rend based on form type
"RTN","IBCEF77",51,0)
 ;
"RTN","IBCEF77",52,0)
 NEW ID,FT,IBZ,IBQ,IBSID,IBNPI
"RTN","IBCEF77",53,0)
 S ID=""
"RTN","IBCEF77",54,0)
 I '$G(IBIFN) G CFIDSX
"RTN","IBCEF77",55,0)
 S FT=$$FT^IBCEF(IBIFN)
"RTN","IBCEF77",56,0)
 I '$G(PRVTYP) S PRVTYP=3 I FT=3 S PRVTYP=4
"RTN","IBCEF77",57,0)
 D ALLIDS^IBCEF75(IBIFN,.IBZ,1)
"RTN","IBCEF77",58,0)
 S IBQ=$P($G(IBZ("PROVINF",IBIFN,"C",1,PRVTYP,1)),U,3)    ; qualifier
"RTN","IBCEF77",59,0)
 S IBSID=$P($G(IBZ("PROVINF",IBIFN,"C",1,PRVTYP,1)),U,4)  ; ID#
"RTN","IBCEF77",60,0)
 S IBNPI=""
"RTN","IBCEF77",61,0)
 I $D(^IBA(364.5,"B","N-PROVIDER NPI CODES")) D F^IBCEF("N-PROVIDER NPI CODES","IBNPI",,IBIFN)
"RTN","IBCEF77",62,0)
 S IBNPI=$P(IBNPI,U,PRVTYP)                               ; NPI
"RTN","IBCEF77",63,0)
 ;
"RTN","IBCEF77",64,0)
 ; special check for the referring doc
"RTN","IBCEF77",65,0)
 I PRVTYP=1,$D(IBZ("PROVINF",IBIFN,"C",1,PRVTYP)),IBQ="",IBSID="" S IBQ="1G",IBSID="VAD000"
"RTN","IBCEF77",66,0)
 ;
"RTN","IBCEF77",67,0)
 ; determine if legacy ID's should be displayed
"RTN","IBCEF77",68,0)
 I '$$PRTLID(IBIFN,IBNPI) S (IBQ,IBSID)=""
"RTN","IBCEF77",69,0)
 ;
"RTN","IBCEF77",70,0)
 S ID=IBQ_U_IBSID_U_IBNPI
"RTN","IBCEF77",71,0)
CFIDSX ;
"RTN","IBCEF77",72,0)
 Q ID
"RTN","IBCEF77",73,0)
 ;
"RTN","IBCEF77",74,0)
DOL(AMT,LEN,DEC) ; format dollar amounts for printed claim forms
"RTN","IBCEF77",75,0)
 ; AMT = amount to be formatted
"RTN","IBCEF77",76,0)
 ; LEN = length of field - right justified to this length
"RTN","IBCEF77",77,0)
 ; DEC = flag to include the decimal point or not
"RTN","IBCEF77",78,0)
 ;       DEFAULT value is to not include the decimal point
"RTN","IBCEF77",79,0)
 ;       if DEC is not defined or 0, assume no decimal point
"RTN","IBCEF77",80,0)
 ;       so 15 will be returned as 1500, 6.77 will be returned as 677
"RTN","IBCEF77",81,0)
 ;       if DEC is 1, then the decimal point will be included
"RTN","IBCEF77",82,0)
 ;
"RTN","IBCEF77",83,0)
 S LEN=$G(LEN,10),DEC=$G(DEC,0)     ; defaults
"RTN","IBCEF77",84,0)
 S AMT=$FN(+$G(AMT),"",2)           ; format # with 2 decimals
"RTN","IBCEF77",85,0)
 I 'DEC S AMT=$TR(AMT,".")          ; strip or leave decimal
"RTN","IBCEF77",86,0)
 S AMT=$J(AMT,LEN)                  ; right justify
"RTN","IBCEF77",87,0)
 Q AMT
"RTN","IBCEF77",88,0)
 ;
"RTN","IBCEF77",89,0)
PRTLID(IBIFN,NPI) ; YMG; Print Legacy IDs on the CMS-1500 or UB-04 form
"RTN","IBCEF77",90,0)
 ; Function fetches form type associated with given claim number
"RTN","IBCEF77",91,0)
 ; (values: 2 - CMS-1500 form, 3 - UB-04 form), then looks at
"RTN","IBCEF77",92,0)
 ; "Print Legacy ID" site parameter for this particular form type.
"RTN","IBCEF77",93,0)
 ; 
"RTN","IBCEF77",94,0)
 ; Possible site parameter values are:
"RTN","IBCEF77",95,0)
 ;   "Y" - always print Legacy ID
"RTN","IBCEF77",96,0)
 ;   "N" - never print Legacy ID
"RTN","IBCEF77",97,0)
 ;   "C" - only print Legacy ID if NPI is not available.
"RTN","IBCEF77",98,0)
 ;   
"RTN","IBCEF77",99,0)
 ; This information is used to determine if Legacy ID should be printed
"RTN","IBCEF77",100,0)
 ; for claim number in question.
"RTN","IBCEF77",101,0)
 ; 
"RTN","IBCEF77",102,0)
 ; Note: Situation when "Print Legacy ID" site parameter is not set is treated
"RTN","IBCEF77",103,0)
 ;       as if this parameter was set to "Y" - always print Legacy ID.
"RTN","IBCEF77",104,0)
 ; 
"RTN","IBCEF77",105,0)
 ; Input:
"RTN","IBCEF77",106,0)
 ;             IBIFN - internal claim number
"RTN","IBCEF77",107,0)
 ;       NPI   - NPI number (or "" if no NPI is available)
"RTN","IBCEF77",108,0)
 ; 
"RTN","IBCEF77",109,0)
 ; Returns:
"RTN","IBCEF77",110,0)
 ;       0  - Legacy ID should not be printed
"RTN","IBCEF77",111,0)
 ;       1  - Legacy ID should be printed
"RTN","IBCEF77",112,0)
 ;
"RTN","IBCEF77",113,0)
 Q $S(NPI="":"YC",1:"Y")[$P($G(^IBE(350.9,1,1)),U,$S($$FT^IBCEF(IBIFN)=2:32,1:33))
"RTN","IBCEF77",114,0)
 ;       
"RTN","IBCEFG8")
0^17^B9105707^B7805615
"RTN","IBCEFG8",1,0)
IBCEFG8 ;ALB/TMP - OUTPUT FORMATTER GENERIC FORM TEST PROCESSING ;21-MAR-96
"RTN","IBCEFG8",2,0)
 ;;2.0;INTEGRATED BILLING;**52,88,51,348**; 21-MAR-94;Build 5
"RTN","IBCEFG8",3,0)
 ;
"RTN","IBCEFG8",4,0)
 Q
"RTN","IBCEFG8",5,0)
 ;
"RTN","IBCEFG8",6,0)
TEST ;Select form from screen and entry from file to test
"RTN","IBCEFG8",7,0)
 N IBF2,IBTYP,IBFORM,IBQUE,IB2,IBPAR,IBCEXDA,IBFILE,IBXERR,DIC,POP,Z,ZTSK,PARAMX,IBIFN,IBXIEN,Z0
"RTN","IBCEFG8",8,0)
 ;Select form
"RTN","IBCEFG8",9,0)
 D FULL^VALM1
"RTN","IBCEFG8",10,0)
 D SELX^IBCEFG3 S IBFORM=$G(IBCEXDA)
"RTN","IBCEFG8",11,0)
 G:IBFORM="" TESTQ
"RTN","IBCEFG8",12,0)
 S IB2=$G(^IBE(353,IBFORM,2)),IBPAR=+$P(IB2,U,5)
"RTN","IBCEFG8",13,0)
 ;
"RTN","IBCEFG8",14,0)
 ; IB*2*348 - esg - no testing with old claim forms
"RTN","IBCEFG8",15,0)
 I IBPAR=12!(IBPAR=13) D  G TESTQ
"RTN","IBCEFG8",16,0)
 . W !!?3,"This local form is associated with an obsolete printed claim form."
"RTN","IBCEFG8",17,0)
 . W !?3,"Testing is not available for this form."
"RTN","IBCEFG8",18,0)
 . Q
"RTN","IBCEFG8",19,0)
 ;
"RTN","IBCEFG8",20,0)
 S IBTYP=$P(IB2,U,2),IBFILE=+IB2
"RTN","IBCEFG8",21,0)
 ;Select Entry #
"RTN","IBCEFG8",22,0)
 S DIC=IBFILE,DIC(0)="AEMQ" D ^DIC
"RTN","IBCEFG8",23,0)
 G:Y<0 TESTQ S (IBXIEN,IBIFN)=+Y
"RTN","IBCEFG8",24,0)
 ;
"RTN","IBCEFG8",25,0)
 S PARAMX("TEST")=1
"RTN","IBCEFG8",26,0)
 I IBTYP="P" D DEV^IBCEFG7(IBFORM,1) G:$G(POP) TESTQ
"RTN","IBCEFG8",27,0)
 I IBTYP="T" D QUE G:$G(IBQUE)="" TESTQ
"RTN","IBCEFG8",28,0)
 ;
"RTN","IBCEFG8",29,0)
 K ^TMP("IBXDATA",$J)
"RTN","IBCEFG8",30,0)
 ;
"RTN","IBCEFG8",31,0)
 ; Execute PRE-PROCESSOR
"RTN","IBCEFG8",32,0)
 I $G(^IBE(353,IBFORM,"FPRE"))'="" X ^("FPRE") ;Form pre-processor
"RTN","IBCEFG8",33,0)
 I $G(^IBE(353,IBFORM,"FPRE"))="",$G(^IBE(353,IBPAR,"FPRE"))'="" X ^("FPRE") ;Parent form pre-processor
"RTN","IBCEFG8",34,0)
 G:$G(IBXERR)'="" FQ
"RTN","IBCEFG8",35,0)
 ;
"RTN","IBCEFG8",36,0)
 ; Extract record
"RTN","IBCEFG8",37,0)
 I +$G(^IBE(353,IBFORM,2))=399 D
"RTN","IBCEFG8",38,0)
 .S PARAMX(1)="BILL-SEARCH",Z0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEFG8",39,0)
 .S Z=$P(Z0,U,21) S:Z="" Z="P" S PARAMX(2)=$P($G(^DGCR(399,IBIFN,"I"_($F("PST",Z)-1))),U),PARAMX(3)=$S($P(Z0,U,5)<3:"I",1:"O")
"RTN","IBCEFG8",40,0)
 S Z=$$EXTRACT^IBCEFG(IBFORM,IBIFN,1,.PARAMX)
"RTN","IBCEFG8",41,0)
 ;
"RTN","IBCEFG8",42,0)
 G:'$D(^TMP("IBXDATA",$J)) FQ
"RTN","IBCEFG8",43,0)
 ;
"RTN","IBCEFG8",44,0)
 ; If an output routine exists, use it, otherwise use the generic ones
"RTN","IBCEFG8",45,0)
 I $G(^IBE(353,IBFORM,"OUT"))'="" X ^("OUT") G FQ
"RTN","IBCEFG8",46,0)
 ;
"RTN","IBCEFG8",47,0)
 I IBTYP="P" D PRINT^IBCEFG7(IBFORM) D:'$D(ZTQUEUED) ^%ZISC G FQ
"RTN","IBCEFG8",48,0)
 I IBTYP="T" D:$G(IBQUE)'="" TRANSMIT^IBCEFG7(IBFORM,IBQUE) G FQ
"RTN","IBCEFG8",49,0)
 I IBTYP="S" D SCRN^IBCEFG70(IBFORM,IBIFN)
"RTN","IBCEFG8",50,0)
 ;
"RTN","IBCEFG8",51,0)
FQ ; Execute POST-PROCESSOR, if any
"RTN","IBCEFG8",52,0)
 I $G(^IBE(353,IBFORM,"FPOST"))'="" X ^("FPOST") ;Form post-processor
"RTN","IBCEFG8",53,0)
 I $G(^IBE(353,IBFORM,"FPOST"))="",$G(^IBE(353,IBPAR,"FPOST"))'="" X ^("FPOST") ;Parent form post-processor
"RTN","IBCEFG8",54,0)
TESTQ K ^TMP("IBXDATA",$J)
"RTN","IBCEFG8",55,0)
 D PAUSE^VALM1
"RTN","IBCEFG8",56,0)
 S VALMBCK="R"
"RTN","IBCEFG8",57,0)
 Q
"RTN","IBCEFG8",58,0)
 ;
"RTN","IBCEFG8",59,0)
QUE ;Select QUEUE to receive transmission
"RTN","IBCEFG8",60,0)
 S %=1 W !,"Send transmission to your mailbox" D YN^DICN
"RTN","IBCEFG8",61,0)
 I (%+1#3) S IBQUE=DUZ Q
"RTN","IBCEFG8",62,0)
 S DIR(0)="F",DIR("A")="Enter a mail queue name: ",DIR(0)="A",DIR("?")="This is the mailman queue where the formatted test record should be sent"
"RTN","IBCEFG8",63,0)
 D ^DIR K DIR S IBQUE=$S('$D(DIRUT):Y,1:"")
"RTN","IBCEFG8",64,0)
 Q
"RTN","IBCEFG8",65,0)
 ;
"RTN","IBCEM03")
0^22^B45045042^B45055714
"RTN","IBCEM03",1,0)
IBCEM03 ;ALB/TMP - 837 EDI RESUBMIT INDIVIDUAL BILL PROCESSING ;17-SEP-96
"RTN","IBCEM03",2,0)
 ;;2.0;INTEGRATED BILLING;**137,199,296,348**;21-MAR-94;Build 5
"RTN","IBCEM03",3,0)
 Q
"RTN","IBCEM03",4,0)
 ;
"RTN","IBCEM03",5,0)
BILL2 ; Resubmit a transmitted bill with a new batch #
"RTN","IBCEM03",6,0)
 N DIC,DIR,DIE,DA,DR,IB,IB0,IBDA,IBDA1,IBE,IBSTAT,IBBDA,IBOK,IBNEW,Y,ZTSK,IBTEST
"RTN","IBCEM03",7,0)
 K ^TMP("IBEDI_TEST_BATCH",$J)
"RTN","IBCEM03",8,0)
 ;
"RTN","IBCEM03",9,0)
 S DIR("A")="ARE YOU RESUBMITTING CLAIMS FOR TESTING?: ",DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR
"RTN","IBCEM03",10,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","IBCEM03",11,0)
 I +Y S ^TMP("IBEDI_TEST_BATCH",$J)=1
"RTN","IBCEM03",12,0)
ASK N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCEM03",13,0)
 S IBTEST=+$G(^TMP("IBEDI_TEST_BATCH",$J))
"RTN","IBCEM03",14,0)
 ; Only auth or printed transmittable bill valid for non-test
"RTN","IBCEM03",15,0)
 ; All previously transmitted valid for test
"RTN","IBCEM03",16,0)
 S DIC="^DGCR(399,",DIC(0)="AEMQ",DIC("S")=$S('IBTEST:"I $P($G(^(""TX"")),U,2),$P($G(^(0)),U,13)'="""",""234""[$P($G(^(0)),U,13)",1:"I $O(^IBA(364,""B"",+Y,0))")
"RTN","IBCEM03",17,0)
 I IBTEST S DIC("A")="Select BILL/CLAIMS BILL NUMBER (FOR RESUBMIT AS TEST): "
"RTN","IBCEM03",18,0)
 D ^DIC K DIC
"RTN","IBCEM03",19,0)
 I Y<0 D  Q
"RTN","IBCEM03",20,0)
 . Q:'IBTEST
"RTN","IBCEM03",21,0)
 . I $O(^TMP("IBEDI_TEST_BATCH",$J,0)) D
"RTN","IBCEM03",22,0)
 .. M ^TMP("IBRESUBMIT",$J)=^TMP("IBEDI_TEST_BATCH",$J)
"RTN","IBCEM03",23,0)
 .. D ONE^IBCE837
"RTN","IBCEM03",24,0)
 . ;
"RTN","IBCEM03",25,0)
 . K ^TMP("IBEDI_TEST_BATCH",$J),^TMP("IBRESUBMIT",$J)
"RTN","IBCEM03",26,0)
 ;
"RTN","IBCEM03",27,0)
 S IBIFN=+Y,IBDA=+$$LAST364^IBCEF4(IBIFN),IB0=$G(^IBA(364,IBDA,0)),IBSTAT=$P(IB0,U,3)
"RTN","IBCEM03",28,0)
 ;
"RTN","IBCEM03",29,0)
 I IB0="" W !,"Bill does not exist in BILL TRANSMISSION file" G ASK
"RTN","IBCEM03",30,0)
 I IBTEST,$D(^TMP("IBEDI_TEST_BATCH",$J,IBDA)) W !,"Bill already selected for test transmission" G ASK
"RTN","IBCEM03",31,0)
 I $$COBN^IBCEF(IBIFN)=1,IBTEST S IBOK=1 D  G:'IBOK ASK
"RTN","IBCEM03",32,0)
 . S DIR("A")="BILL IS A PRIMARY BILL, ARE YOU SURE YOU WANT TO SEND IT AS A TEST CLAIM?: "
"RTN","IBCEM03",33,0)
 . S DIR("B")="NO",DIR(0)="YA" W ! D ^DIR K DIR
"RTN","IBCEM03",34,0)
 . I Y'=1 S IBOK=0
"RTN","IBCEM03",35,0)
 ;
"RTN","IBCEM03",36,0)
 I 'IBTEST,IBSTAT="X" W !,"Bill is currently awaiting extract - will be submitted with next batch run" G ASK
"RTN","IBCEM03",37,0)
 S IBBDA=+$P(IB0,U,2),IB=$P($G(^IBA(364.1,IBBDA,0)),U,9)
"RTN","IBCEM03",38,0)
 ;
"RTN","IBCEM03",39,0)
 I IB,'IBTEST D  G:'IBOK ASK
"RTN","IBCEM03",40,0)
 . S IBOK=1,ZTSK=IB D STAT^%ZTLOAD
"RTN","IBCEM03",41,0)
 . I ZTSK(0)=0 S DIE="^IBA(364.1,",DA=IBBDA,DR=".09///@" D ^DIE Q  ;Task not scheduled - delete task #
"RTN","IBCEM03",42,0)
 . I "125"[ZTSK(1) W *7,!,"Cannot resubmit this bill.",!,"This bill's current batch is already ",$S("2"[ZTSK(1):"being resubmitted",1:"scheduled for resubmission")," - Task # is: ",IB,! S IBOK=0
"RTN","IBCEM03",43,0)
 ;
"RTN","IBCEM03",44,0)
 W !
"RTN","IBCEM03",45,0)
 S DIR("A",1)="   Previously In Batch #: "_$$EXPAND^IBTRE(364,.02,$P(IB0,U,2))
"RTN","IBCEM03",46,0)
 S DIR("A",2)="Bill Transmission Status: "_$$EXPAND^IBTRE(364,.03,IBSTAT)
"RTN","IBCEM03",47,0)
 S DIR("A",3)="             Status Date: "_$$FMTE^XLFDT($P(IB0,U,4),2)
"RTN","IBCEM03",48,0)
 S DIR("A",5)=" "
"RTN","IBCEM03",49,0)
 S DIR("A",4)="     Current Bill Status: "_$$EXPAND^IBTRE(399,.13,$P($G(^DGCR(399,+IBIFN,0)),U,13))
"RTN","IBCEM03",50,0)
 I 'IBTEST,IBSTAT'="P" S DIR("A",11)="WARNING - BILL TRANSMITTED PREVIOUSLY" S:IBSTAT?1"A".E DIR("A",11)=DIR("A",11)_" & CONFIRMED AS RECEIVED BY "_$P("AUSTIN^GENTRAN^INTERMEDIARY^CARRIER",U,$TR(IBSTAT,"A")+1)
"RTN","IBCEM03",51,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO RESUBMIT THIS BILL"_$S('IBTEST:"",1:" AS A TEST CLAIM")_"?: "
"RTN","IBCEM03",52,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","IBCEM03",53,0)
 D ^DIR K DIR
"RTN","IBCEM03",54,0)
 ;
"RTN","IBCEM03",55,0)
 W ! G:'Y ASK
"RTN","IBCEM03",56,0)
 ;
"RTN","IBCEM03",57,0)
 I IBTEST S ^TMP("IBEDI_TEST_BATCH",$J,IBDA)="" G ASK
"RTN","IBCEM03",58,0)
 ;
"RTN","IBCEM03",59,0)
 S IBDA1=+$$ADDTBILL^IBCB1(IBIFN) ;Add a new transmit bill record
"RTN","IBCEM03",60,0)
 ;
"RTN","IBCEM03",61,0)
 S Y=$$TX1^IBCB1(IBDA1,1)
"RTN","IBCEM03",62,0)
 ;
"RTN","IBCEM03",63,0)
 I 'Y D  G ASK
"RTN","IBCEM03",64,0)
 . W !,*7,"An error has occurred ... bill NOT re-submitted!!"
"RTN","IBCEM03",65,0)
 . S DIK="^IBA(364,",DA=IBDA1 D:DA ^DIK
"RTN","IBCEM03",66,0)
 . L -^IBA(364,IBDA)
"RTN","IBCEM03",67,0)
 ;
"RTN","IBCEM03",68,0)
 S IBNEW=$P($G(^IBA(364,+IBDA1,0)),U,2)
"RTN","IBCEM03",69,0)
 ;
"RTN","IBCEM03",70,0)
 ;Update the old transmit bill record
"RTN","IBCEM03",71,0)
 D UPDEDI^IBCEM(IBDA,"R")
"RTN","IBCEM03",72,0)
 ;
"RTN","IBCEM03",73,0)
 W !,"Bill # ",$P($G(^DGCR(399,+IB0,0)),U)," was re-submitted in batch # ",$P($G(^IBA(364.1,+IBNEW,0)),U)
"RTN","IBCEM03",74,0)
 ;
"RTN","IBCEM03",75,0)
 L -^IBA(364,IBDA)
"RTN","IBCEM03",76,0)
 G ASK
"RTN","IBCEM03",77,0)
 ;
"RTN","IBCEM03",78,0)
PRINT1(IBIFN,IBDA,IB364,IBRESUB) ; Print bill, submit manually as resolution
"RTN","IBCEM03",79,0)
 ; for a returned message
"RTN","IBCEM03",80,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEM03",81,0)
 ; IBDA = array returned from selection of message
"RTN","IBCEM03",82,0)
 ; IB364 = ien of transmit bill entry in file 364
"RTN","IBCEM03",83,0)
 ; IBRESUB = flag to indicate if bill is being resubmitted via print
"RTN","IBCEM03",84,0)
 ;
"RTN","IBCEM03",85,0)
 N IBAC,IBV,IB399,DFN,ZTSK,PRCASV,IBHOLD,IBTXPRT
"RTN","IBCEM03",86,0)
 W !
"RTN","IBCEM03",87,0)
 I IBIFN="" S IBDA="" G PRINT1Q
"RTN","IBCEM03",88,0)
 S IB399=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEM03",89,0)
 I "34"'[$P(IB399,U,13) W !,*7,"Bill status must be AUTHORIZED or PRNT/TX to print the bill" S IBDA="" G PRINT1Q
"RTN","IBCEM03",90,0)
 ;
"RTN","IBCEM03",91,0)
 I $P($G(^DGCR(399,IBIFN,"S")),U,14)=DT W !,*7,"This bill was last printed today.  You must wait at least 1 day from the last",!,"print date to print this bill using this function." S IBDA="" D PAUSE^VALM1 G PRINT1Q
"RTN","IBCEM03",92,0)
 ;
"RTN","IBCEM03",93,0)
 S IBV=1,IBAC=4,DFN=$P(IB399,U,2),IBTXPRT=0
"RTN","IBCEM03",94,0)
 M IBHOLD("IBDA")=IBDA
"RTN","IBCEM03",95,0)
 D 4^IBCB1,ENS^%ZISS
"RTN","IBCEM03",96,0)
 M IBDA=IBHOLD("IBDA")
"RTN","IBCEM03",97,0)
 ;
"RTN","IBCEM03",98,0)
 I 'IBTXPRT W !,"Bill was not printed" S IBDA="" G PRINT1Q
"RTN","IBCEM03",99,0)
 ;
"RTN","IBCEM03",100,0)
 D UPDEDI^IBCEM(IB364,"P")
"RTN","IBCEM03",101,0)
 ;
"RTN","IBCEM03",102,0)
PRINT1Q Q
"RTN","IBCEM03",103,0)
 ;
"RTN","IBCEM03",104,0)
SUB1 ; Select bills in ready for extract status to transmit individually
"RTN","IBCEM03",105,0)
 N IB0,IB399,IBDA,IBIFN,IBSEL,IBU,X,Y,DA,DIC,Z,DIR
"RTN","IBCEM03",106,0)
 K ^TMP("IBSELX",$J)
"RTN","IBCEM03",107,0)
 ;
"RTN","IBCEM03",108,0)
 S IBSEL=""
"RTN","IBCEM03",109,0)
 F  D  Q:'IBSEL
"RTN","IBCEM03",110,0)
 . S DIR("S")="I $P(^(0),U,3)=""X"""
"RTN","IBCEM03",111,0)
 . S DIR(0)="PAO^364:AEMQ",DIR("A")="SELECT "_$S($D(^TMP("IBSELX",$J)):"NEXT ",1:"")_"BILL TO TRANSMIT: "
"RTN","IBCEM03",112,0)
 . S DIR("?")="ONLY BILLS IN 'READY FOR EXTRACT' STATUS CAN BE TRANSMITTED WITH THIS OPTION"
"RTN","IBCEM03",113,0)
 . D ^DIR K DIR
"RTN","IBCEM03",114,0)
 . I Y'>0 K:Y=U ^TMP("IBSELX",$J) S IBSEL="" Q
"RTN","IBCEM03",115,0)
 . S IBSEL=+Y
"RTN","IBCEM03",116,0)
 . S IBDA=+Y,IB0=$G(^IBA(364,IBDA,0)),IBIFN=+IB0,IBU=$G(^DGCR(399,IBIFN,"U")),IB399=$G(^(0))
"RTN","IBCEM03",117,0)
 . S Z=+$$NEEDMRA^IBEFUNC(IBIFN)
"RTN","IBCEM03",118,0)
 . I '$$TXMT^IBCEF4(IBIFN,.IBNOTX),IBNOTX=2 D  Q
"RTN","IBCEM03",119,0)
 .. W !,$S(Z:"MRA",1:"EDI")_" TRANSMISSION PARAMETER HAS BEEN TURNED OFF",!!,"BILL CANNOT BE SELECTED"
"RTN","IBCEM03",120,0)
 . ;
"RTN","IBCEM03",121,0)
 . W !
"RTN","IBCEM03",122,0)
 . S DIR("A",1)="      YOU HAVE SELECTED BILL #: "_$P(IB399,U)_"  ("_$S($$INPAT^IBCEF(IBIFN):"INPATIENT",1:"OUTPATIENT")_"/"_$S($$FT^IBCEF(IBIFN)=3:"UB92",1:"CMS-1500")_" FORMAT)"
"RTN","IBCEM03",123,0)
 . S DIR("A",2)="                  PATIENT NAME: "_$E($P($G(^DPT(+$P(IB399,U,2),0)),U)_$J("",28),1,28)_"  SSN: "_$P($G(^DPT(+$P(IB399,U,2),0)),U,9)
"RTN","IBCEM03",124,0)
 . S DIR("A",3)="                  CARE DATE(S): "_$$EXPAND^IBTRE(399,151,$P(IBU,U))_" - "_$$EXPAND^IBTRE(399,152,$P(IBU,U,2))
"RTN","IBCEM03",125,0)
 . S DIR("A",4)="'READY TO EXTRACT' STATUS DATE: "_$$EXPAND^IBTRE(364,.04,$P(IB0,U,4))
"RTN","IBCEM03",126,0)
 . S DIR("?",1)=" "
"RTN","IBCEM03",127,0)
 . S DIR("A",5)=" ",DIR("?")="IF THIS IS THE BILL YOU WANT TO TRANSMIT, RESPOND YES, OTHERWISE, RESPOND NO"
"RTN","IBCEM03",128,0)
 . S DIR("A")="ARE YOU SURE THIS IS THE CORRECT BILL TO TRANSMIT?: "
"RTN","IBCEM03",129,0)
 . S DIR(0)="YAO",DIR("B")="NO" D ^DIR K DIR W !
"RTN","IBCEM03",130,0)
 . I Y'=1 W !,"BILL NOT SELECTED" Q
"RTN","IBCEM03",131,0)
 . ;
"RTN","IBCEM03",132,0)
 . S ^TMP("IBSELX",$J,IBDA)=""
"RTN","IBCEM03",133,0)
 ;
"RTN","IBCEM03",134,0)
 I '$O(^TMP("IBSELX",$J,0)) G SUB1Q
"RTN","IBCEM03",135,0)
 ;
"RTN","IBCEM03",136,0)
 W !,"Bills to be transmitted: "
"RTN","IBCEM03",137,0)
 S Z=0 F  S Z=$O(^TMP("IBSELX",$J,Z)) Q:'Z  W !,?8,$P($G(^DGCR(399,+$G(^IBA(364,Z,0)),0)),U)
"RTN","IBCEM03",138,0)
 W !
"RTN","IBCEM03",139,0)
 S DIR("A")="OK TO TRANSMIT NOW?: ",DIR(0)="YA0",DIR("B")="NO" D ^DIR K DIR
"RTN","IBCEM03",140,0)
 G:Y'=1 SUB1Q
"RTN","IBCEM03",141,0)
 W !
"RTN","IBCEM03",142,0)
 S ^TMP("IBSELX",$J)=0
"RTN","IBCEM03",143,0)
 D ONE^IBCE837
"RTN","IBCEM03",144,0)
 W !,"BILL(s) TRANSMITTED ... BATCH #(s): "
"RTN","IBCEM03",145,0)
 S Z=0 F  S Z=$O(^TMP("IBCE-BATCH",$J,Z)) Q:'Z  W Z,$S($O(^(Z)):", ",1:"")
"RTN","IBCEM03",146,0)
 I '$O(^TMP("IBCE-BATCH",$J,0)) W !,"NO BILL(S) TRANSMITTED - CHECK ALERTS/MAIL FOR DETAILS"
"RTN","IBCEM03",147,0)
 ;
"RTN","IBCEM03",148,0)
SUB1Q D PAUSE^VALM1
"RTN","IBCEM03",149,0)
 K ^TMP("IBSELX",$J),^TMP("IBCE-BATCH",$J)
"RTN","IBCEM03",150,0)
 Q
"RTN","IBCEM03",151,0)
 ;
"RTN","IBCEMSR1")
0^23^B59731831^B59769872
"RTN","IBCEMSR1",1,0)
IBCEMSR1 ;WOIFO/AAT - MRA STATISTICS REPORT CONT. ;09/03/04
"RTN","IBCEMSR1",2,0)
 ;;2.0;INTEGRATED BILLING;**155,348**;21-MAR-94;Build 5
"RTN","IBCEMSR1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMSR1",4,0)
 ;
"RTN","IBCEMSR1",5,0)
 Q
"RTN","IBCEMSR1",6,0)
 ;
"RTN","IBCEMSR1",7,0)
 ; Report header
"RTN","IBCEMSR1",8,0)
HDR N IBI
"RTN","IBCEMSR1",9,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCEMSR1",10,0)
 W @IOF,"MRA Statistics Report for period covering "_$$DAT(IBBDT)_" thru "_$$DAT(IBEDT),"   ",?100,$$DAT(DT),"   Page ",IBPAGE
"RTN","IBCEMSR1",11,0)
 W ! F IBI=1:1:$S($G(IOM):IOM,1:130) W "-"
"RTN","IBCEMSR1",12,0)
 Q
"RTN","IBCEMSR1",13,0)
 ;
"RTN","IBCEMSR1",14,0)
REPORT N IBDVN,IBCLERK,IBPAGE,IBTU,IBTH
"RTN","IBCEMSR1",15,0)
 S IBPAGE=0
"RTN","IBCEMSR1",16,0)
 D HDR
"RTN","IBCEMSR1",17,0)
 I '$D(@REF) W !,"No data meet the criteria." Q
"RTN","IBCEMSR1",18,0)
 I 'IBSUM S IBDVN="" F  S IBDVN=$O(@REF@(IBDVN)) Q:IBDVN=""  D  Q:IBQ
"RTN","IBCEMSR1",19,0)
 . D CHKP Q:IBQ  W !,"DIVISION: ",IBDVN
"RTN","IBCEMSR1",20,0)
 . S IBCLERK="A" F  S IBCLERK=$O(@REF@(IBDVN,IBCLERK)) Q:IBCLERK=""  D  Q:IBQ
"RTN","IBCEMSR1",21,0)
 . . D DETAILS
"RTN","IBCEMSR1",22,0)
 Q:IBQ
"RTN","IBCEMSR1",23,0)
 ; Summary section
"RTN","IBCEMSR1",24,0)
 D:'IBSUM HDR W !,"SUMMARY"
"RTN","IBCEMSR1",25,0)
 S IBDVN="" F  S IBDVN=$O(@REF@(IBDVN)) Q:IBDVN=""  D  Q:IBQ
"RTN","IBCEMSR1",26,0)
 . D CHKP Q:IBQ  W !,"DIVISION: ",IBDVN
"RTN","IBCEMSR1",27,0)
 . D SUMMARY
"RTN","IBCEMSR1",28,0)
 Q
"RTN","IBCEMSR1",29,0)
 ;
"RTN","IBCEMSR1",30,0)
DETAILS ; Print Details
"RTN","IBCEMSR1",31,0)
 N REFU,REFU,IBTXT,IBNU,IBNH,IBTU,IBTH
"RTN","IBCEMSR1",32,0)
 ;
"RTN","IBCEMSR1",33,0)
 S REFU=$NA(@REF@(IBDVN,IBCLERK,3))
"RTN","IBCEMSR1",34,0)
 S REFH=$NA(@REF@(IBDVN,IBCLERK,2))
"RTN","IBCEMSR1",35,0)
 ;
"RTN","IBCEMSR1",36,0)
 D CHKP Q:IBQ  W !,"CLERK: ",IBCLERK
"RTN","IBCEMSR1",37,0)
 D CHKP Q:IBQ  W !?7,"Primary UB92 MRA Requests",?67,"Primary CMS-1500 MRA Requests"
"RTN","IBCEMSR1",38,0)
 D CHKP Q:IBQ  W !?7,"-------------------------",?67,"-----------------------------"
"RTN","IBCEMSR1",39,0)
 S IBTXT="Total number of MRA Requests:"
"RTN","IBCEMSR1",40,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("ALL")),5),?67,IBTXT,?110,$J(+$G(@REFH@("ALL")),5)
"RTN","IBCEMSR1",41,0)
 S IBTXT="Number of unique MRA Requests:",IBTU=+$G(@REFU@("TOT")),IBTH=+$G(@REFH@("TOT"))
"RTN","IBCEMSR1",42,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",43,0)
 S IBTXT="Requests with no response:",IBNU=+$G(@REFU@("NON")),IBNH=+$G(@REFH@("NON"))
"RTN","IBCEMSR1",44,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",45,0)
 S IBTXT="Requests with final rejection:",IBNU=+$G(@REFU@("REJF")),IBNH=+$G(@REFH@("REJF"))
"RTN","IBCEMSR1",46,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",47,0)
 ;
"RTN","IBCEMSR1",48,0)
 S IBTXT="Requests with returned MRA:",IBNU=+$G(@REFU@("MRA")),IBNH=+$G(@REFH@("MRA"))
"RTN","IBCEMSR1",49,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",50,0)
 S IBTXT="Processed MRA:"
"RTN","IBCEMSR1",51,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?35,$J($G(@REFU@("MRA"))-$G(@REFU@("MRAD")),5),?74,IBTXT,?90,$J($G(@REFH@("MRA"))-$G(@REFH@("MRAD")),5)
"RTN","IBCEMSR1",52,0)
 S IBTXT="Denied MRA:"
"RTN","IBCEMSR1",53,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?35,$J(+$G(@REFU@("MRAD")),5),?74,IBTXT,?90,$J(+$G(@REFH@("MRAD")),5)
"RTN","IBCEMSR1",54,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",55,0)
 ;
"RTN","IBCEMSR1",56,0)
 D SECONDRY Q:IBQ
"RTN","IBCEMSR1",57,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",58,0)
 Q
"RTN","IBCEMSR1",59,0)
 ;
"RTN","IBCEMSR1",60,0)
SUMMARY ;Print summary
"RTN","IBCEMSR1",61,0)
 N REFU,REFH,IBTXT,IBNU,IBNH,IBTU,IBTH
"RTN","IBCEMSR1",62,0)
 ;
"RTN","IBCEMSR1",63,0)
 S REFU=$NA(@REF@(IBDVN,0,3))
"RTN","IBCEMSR1",64,0)
 S REFH=$NA(@REF@(IBDVN,0,2))
"RTN","IBCEMSR1",65,0)
 ;
"RTN","IBCEMSR1",66,0)
 D CHKP Q:IBQ  W !?7,"Primary UB92 MRA Requests",?67,"Primary CMS-1500 MRA Requests"
"RTN","IBCEMSR1",67,0)
 D CHKP Q:IBQ  W !?7,"-------------------------",?67,"-----------------------------"
"RTN","IBCEMSR1",68,0)
 S IBTXT="Total number of MRA Requests:",IBTU=+$G(@REFU@("ALL")),IBTH=+$G(@REFH@("ALL"))
"RTN","IBCEMSR1",69,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",70,0)
 S IBTXT="Percent Resubmitted:",IBNU=+$G(@REFU@("ALLR")),IBNH=+$G(@REFH@("ALLR"))
"RTN","IBCEMSR1",71,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",72,0)
 S IBTXT="Percent Cancelled/Copied:",IBNU=+$G(@REFU@("ALLC")),IBNH=+$G(@REFH@("ALLC"))
"RTN","IBCEMSR1",73,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",74,0)
 S IBTXT="Number of unique MRA Requests:",IBTU=+$G(@REFU@("TOT")),IBTH=+$G(@REFH@("TOT"))
"RTN","IBCEMSR1",75,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",76,0)
 S IBTXT="Requests with no response:",IBNU=+$G(@REFU@("NON")),IBNH=+$G(@REFH@("NON"))
"RTN","IBCEMSR1",77,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",78,0)
 S IBTXT="Requests with final rejection:",IBNU=+$G(@REFU@("REJF")),IBNH=+$G(@REFH@("REJF"))
"RTN","IBCEMSR1",79,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",80,0)
 S IBTXT="Percent with final rejection:"
"RTN","IBCEMSR1",81,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",82,0)
 S IBTXT="Requests with returned MRA:",IBTU=+$G(@REFU@("MRA")),IBTH=+$G(@REFH@("MRA"))
"RTN","IBCEMSR1",83,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",84,0)
 S IBTXT="Processed MRA:",IBNU=IBTU-$G(@REFU@("MRAD")),IBNH=IBTH-$G(@REFH@("MRAD"))
"RTN","IBCEMSR1",85,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",86,0)
 S IBTXT="Denied MRA:"
"RTN","IBCEMSR1",87,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("MRAD")),5),?67,IBTXT,?110,$J(+$G(@REFH@("MRAD")),5)
"RTN","IBCEMSR1",88,0)
 S IBTXT="Percent Processed MRA:"
"RTN","IBCEMSR1",89,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",90,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",91,0)
 ;
"RTN","IBCEMSR1",92,0)
 D SECONDRY Q:IBQ
"RTN","IBCEMSR1",93,0)
 S IBTXT="Percent Unique Req to Secondary:"
"RTN","IBCEMSR1",94,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J($$%(+$G(@REFU@("SEC")),+$G(@REFU@("TOT"))),5),?67,IBTXT,?110,$J($$%(+$G(@REFH@("SEC")),+$G(@REFH@("TOT"))),5)
"RTN","IBCEMSR1",95,0)
 S IBTXT="Percent Auto-Generated:"
"RTN","IBCEMSR1",96,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$J($$%($G(@REFU@("AT"))+$G(@REFU@("AP")),+$G(@REFU@("TOT"))),5),?67,IBTXT,?110,$J($$%($G(@REFH@("AT"))+$G(@REFH@("AP")),+$G(@REFH@("TOT"))),5)
"RTN","IBCEMSR1",97,0)
 S IBTXT="Percent Manually-Processed:"
"RTN","IBCEMSR1",98,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$J($$%($G(@REFU@("MT"))+$G(@REFU@("MP")),+$G(@REFU@("TOT"))),5),?67,IBTXT,?110,$J($$%($G(@REFH@("MT"))+$G(@REFH@("MP")),+$G(@REFH@("TOT"))),5)
"RTN","IBCEMSR1",99,0)
 ;
"RTN","IBCEMSR1",100,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",101,0)
 Q
"RTN","IBCEMSR1",102,0)
 ;
"RTN","IBCEMSR1",103,0)
SECONDRY ; Print 2ndary claims info
"RTN","IBCEMSR1",104,0)
 D CHKP Q:IBQ  W !?7,"Secondary UB92 claims",?67,"Secondary CMS-1500 claims"
"RTN","IBCEMSR1",105,0)
 D CHKP Q:IBQ  W !?7,"---------------------",?67,"-------------------------"
"RTN","IBCEMSR1",106,0)
 S IBTXT="Authorized (not yet printed):"
"RTN","IBCEMSR1",107,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("AUT")),5),?67,IBTXT,?110,$J(+$G(@REFH@("AUT")),5)
"RTN","IBCEMSR1",108,0)
 ;
"RTN","IBCEMSR1",109,0)
 S IBTXT="Auto-generated to print:"
"RTN","IBCEMSR1",110,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("AP")),5),?67,IBTXT,?110,$J(+$G(@REFH@("AP")),5)
"RTN","IBCEMSR1",111,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",112,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AP1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AP1")),10,2)
"RTN","IBCEMSR1",113,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",114,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AP2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AP2")),10,2)
"RTN","IBCEMSR1",115,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",116,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AP3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AP3")),10,2)
"RTN","IBCEMSR1",117,0)
 ;
"RTN","IBCEMSR1",118,0)
 S IBTXT="Auto-generated to transmit:"
"RTN","IBCEMSR1",119,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("AT")),5),?67,IBTXT,?110,$J(+$G(@REFH@("AT")),5)
"RTN","IBCEMSR1",120,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",121,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AT1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AT1")),10,2)
"RTN","IBCEMSR1",122,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",123,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AT2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AT2")),10,2)
"RTN","IBCEMSR1",124,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",125,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AT3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AT3")),10,2)
"RTN","IBCEMSR1",126,0)
 ;
"RTN","IBCEMSR1",127,0)
 S IBTXT="Manually processed to print:"
"RTN","IBCEMSR1",128,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("MP")),5),?67,IBTXT,?110,$J(+$G(@REFH@("MP")),5)
"RTN","IBCEMSR1",129,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",130,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MP1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MP1")),10,2)
"RTN","IBCEMSR1",131,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",132,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MP2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MP2")),10,2)
"RTN","IBCEMSR1",133,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",134,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MP3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MP3")),10,2)
"RTN","IBCEMSR1",135,0)
 ;
"RTN","IBCEMSR1",136,0)
 S IBTXT="Manually processed to transmit:"
"RTN","IBCEMSR1",137,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("MT")),5),?67,IBTXT,?110,$J(+$G(@REFH@("MT")),5)
"RTN","IBCEMSR1",138,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",139,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MT1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MT1")),10,2)
"RTN","IBCEMSR1",140,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",141,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MT2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MT2")),10,2)
"RTN","IBCEMSR1",142,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",143,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MT3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MT3")),10,2)
"RTN","IBCEMSR1",144,0)
 Q
"RTN","IBCEMSR1",145,0)
 ;
"RTN","IBCEMSR1",146,0)
 ;
"RTN","IBCEMSR1",147,0)
%(VALUE,TOTAL) ;Percentage
"RTN","IBCEMSR1",148,0)
 I 'TOTAL Q $J("0%",6)
"RTN","IBCEMSR1",149,0)
 Q $J($J(VALUE*100/TOTAL,3,0)_"%",6)
"RTN","IBCEMSR1",150,0)
 ;
"RTN","IBCEMSR1",151,0)
CHKP ;Check for EOP
"RTN","IBCEMSR1",152,0)
 I $Y>(IOSL-4) D:IBSCR PAUSE Q:IBQ  D HDR
"RTN","IBCEMSR1",153,0)
 Q
"RTN","IBCEMSR1",154,0)
 ;
"RTN","IBCEMSR1",155,0)
PAUSE ;
"RTN","IBCEMSR1",156,0)
 N X U IO(0) W !!,"Press RETURN to continue, '^' to exit:" R X:DTIME S:'$T X="^" S:X["^" IBQ=2
"RTN","IBCEMSR1",157,0)
 U IO
"RTN","IBCEMSR1",158,0)
 Q
"RTN","IBCEMSR1",159,0)
 ;
"RTN","IBCEMSR1",160,0)
PAUSE2 ;
"RTN","IBCEMSR1",161,0)
 N X U IO(0) W !!,"Press RETURN to continue:" R X:DTIME S:'$T X="^" S:X["^" IBQ=2
"RTN","IBCEMSR1",162,0)
 U IO
"RTN","IBCEMSR1",163,0)
 Q
"RTN","IBCEMSR1",164,0)
 ;
"RTN","IBCEMSR1",165,0)
DAT(X) ;Convert FM date to displayable (mm/dd/yy) format.
"RTN","IBCEMSR1",166,0)
 N DATE,YR
"RTN","IBCEMSR1",167,0)
 I $G(X) S YR=$E(X,2,3)
"RTN","IBCEMSR1",168,0)
 I $G(X) S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_YR,1:"")
"RTN","IBCEMSR1",169,0)
 Q $G(DATE)
"RTN","IBCEMSR1",170,0)
 ;
"RTN","IBCEP")
0^24^B21502471^B21507760
"RTN","IBCEP",1,0)
IBCEP ;ALB/TMP - Functions for PROVIDER ID MAINT - INS CO PARAMS ;11-02-00
"RTN","IBCEP",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348**;21-MAR-94;Build 5
"RTN","IBCEP",3,0)
 ;
"RTN","IBCEP",4,0)
EN ; -- main entry point for IBCE PRV INS PARAMS
"RTN","IBCEP",5,0)
 N IBINS,IBCUINC ; Variable should be available throughout actions
"RTN","IBCEP",6,0)
 D FULL^VALM1
"RTN","IBCEP",7,0)
 D EN^VALM("IBCE PRV INS PARAMS")
"RTN","IBCEP",8,0)
 Q
"RTN","IBCEP",9,0)
 ;
"RTN","IBCEP",10,0)
HDR ; -- header code
"RTN","IBCEP",11,0)
 K VALMHDR
"RTN","IBCEP",12,0)
 I $G(IBINS) S VALMHDR(1)="INSURANCE CO: "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCEP",13,0)
 Q
"RTN","IBCEP",14,0)
 ;
"RTN","IBCEP",15,0)
INIT ; Initialization
"RTN","IBCEP",16,0)
 N DIR,DIC,DA,X,Y,DTOUT,DUOUT
"RTN","IBCEP",17,0)
 S DIC(0)="AEMQ",DIC="^DIC(36," D ^DIC
"RTN","IBCEP",18,0)
 I Y'>0 D
"RTN","IBCEP",19,0)
 . S VALMQUIT=1
"RTN","IBCEP",20,0)
 E  D
"RTN","IBCEP",21,0)
 . S DIR="YA",DIR("A")="DO YOU WANT TO INCLUDE ANY CARE UNIT DETAIL?: ",DIR("?",1)="If you want to see the specific care unit defined for the insurance co",DIR("?")="you should respond yes here"
"RTN","IBCEP",22,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP",23,0)
 . I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 Q
"RTN","IBCEP",24,0)
 . S IBCUINC=(Y=1)
"RTN","IBCEP",25,0)
 . S IBINS=+Y D BLD(IBINS,IBCUINC)
"RTN","IBCEP",26,0)
 Q
"RTN","IBCEP",27,0)
 ;
"RTN","IBCEP",28,0)
BLD(IBINS,IBCUINC) ; Build display for ins co level provider ID parameters
"RTN","IBCEP",29,0)
 ; IBINS = ien of ins co (file 36)
"RTN","IBCEP",30,0)
 ; IBCUINC = flag:
"RTN","IBCEP",31,0)
 ;    = 1 if care unit list should be included  or 0 if not
"RTN","IBCEP",32,0)
 N A,A0,A1,A2,A3,Z0,IB1,IB12,IB4,IBLCT,IBPTYP
"RTN","IBCEP",33,0)
 S IBLCT=0
"RTN","IBCEP",34,0)
 S IB4=$G(^DIC(36,IBINS,4))
"RTN","IBCEP",35,0)
 K ^TMP("IBPRV_INS_ID_PARAMS",$J)
"RTN","IBCEP",36,0)
 ;
"RTN","IBCEP",37,0)
 S Z0="Perf Prov Secondary ID Type (1500): "_$E($$EXPAND^IBTRE(36,4.01,+$P(IB4,U))_$J("",20),1,20) D SET1(.IBLCT,Z0)
"RTN","IBCEP",38,0)
 S Z0="Perf Prov Secondary ID Type (UB92): "_$E($$EXPAND^IBTRE(36,4.02,+$P(IB4,U,2))_$J("",20),1,20) D SET1(.IBLCT,Z0)
"RTN","IBCEP",39,0)
 S Z0=$J("",20)_"Required: "_$$EXPAND^IBTRE(36,4.03,$P(IB4,U,3)) D SET1(.IBLCT,Z0)
"RTN","IBCEP",40,0)
 S Z0=$J("",10)_"Care Unit Name: "_$$EXPAND^IBTRE(36,4.09,$P(IB4,U,9)) D SET1(.IBLCT,Z0)
"RTN","IBCEP",41,0)
 S Z0=""  D SET1(.IBLCT,Z0)
"RTN","IBCEP",42,0)
 ;
"RTN","IBCEP",43,0)
 I '$D(^IBA(355.96,"D",IBINS)) D  G BLDQ ;No care unit needed
"RTN","IBCEP",44,0)
 . S Z0=$J("",7)_"*** NO CARE UNITS DEFINED FOR THIS INS CO PROVIDER SECONDARY ID ***" D SET1(.IBLCT,Z0)
"RTN","IBCEP",45,0)
 ;
"RTN","IBCEP",46,0)
 S Z0=$J("",17)_"VALID CARE UNITS FOR THIS INSURANCE COMPANY" D SET1(.IBLCT,Z0),CNTRL^VALM10(IBLCT,18,46,IORVON,IORVOFF)
"RTN","IBCEP",47,0)
 S A=0
"RTN","IBCEP",48,0)
 F  S A=$O(^IBA(355.96,"AC",IBINS,A)) Q:'A  S IBPTYP=$P($G(^IBE(355.97,A,0)),U) I IBPTYP'="" D
"RTN","IBCEP",49,0)
 . S A2=IBPTYP_U_A,^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A2)=""
"RTN","IBCEP",50,0)
 . S A0=0 F  S A0=$O(^IBA(355.96,"AC",IBINS,A,A0)) Q:'A0  S A1=$G(^IBA(355.96,A0,0)) D
"RTN","IBCEP",51,0)
 .. I '$G(IBCUINC) S:'$D(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A2,$P(A1,U,4)_U_$P(A1,U,5))) ^($P(A1,U,4)_U_$P(A1,U,5))="" Q
"RTN","IBCEP",52,0)
 .. I $P(A1,U,4)'="",$P(A1,U,5)'="" D
"RTN","IBCEP",53,0)
 ... S A3=$E($P($G(^IBE(355.95,+A1,0)),U)_$J("",1,30),1,30)_U_$S($P($G(^(0)),U,2)'="":$P(^(0),U,2),1:"<No description available>")
"RTN","IBCEP",54,0)
 ... I '$D(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A2,$P(A1,U,4)_U_$P(A1,U,5),$P(A3,U))) S ^($P(A3,U))=$P(A3,U,2)
"RTN","IBCEP",55,0)
 . ; records are fully sorted
"RTN","IBCEP",56,0)
 S A=""
"RTN","IBCEP",57,0)
 F  S A=$O(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A)) Q:'A  S A2="PROVIDER ID TYPE: "_$P(A,U),IB1=1 D:'IB1 SET1(.IBLCT,"") D SET1(.IBLCT,A2) S IB12=1 S:$G(IBCUINC) IB1=0 D
"RTN","IBCEP",58,0)
 . S A0="" F  S A0=$O(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A,A0)) Q:A0=""  D
"RTN","IBCEP",59,0)
 .. S Z0=$J("",5)_"FORM TYPE: "_$E($$EXPAND^IBTRE(355.96,.04,$P(A0,U))_$J("",25),1,25)_"  CARE TYPE: "_$E($$EXPAND^IBTRE(355.96,.05,$P(A0,U,2))_$J("",25),1,25)
"RTN","IBCEP",60,0)
 .. D:'IB12 SET1(.IBLCT,"") D SET1(.IBLCT,Z0)
"RTN","IBCEP",61,0)
 .. Q:'$G(IBCUINC)
"RTN","IBCEP",62,0)
 .. S IB12=0
"RTN","IBCEP",63,0)
 .. S A1="" F  S A1=$O(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A,A0,A1)) Q:A1=""  S Z0=$J("",10)_A1_$G(^(A1)) D SET1(.IBLCT,Z0)
"RTN","IBCEP",64,0)
 ;
"RTN","IBCEP",65,0)
BLDQ K ^TMP("IBPRV_INS_ID_PARAMS_SORT",$J)
"RTN","IBCEP",66,0)
 S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP",67,0)
 Q
"RTN","IBCEP",68,0)
 ;
"RTN","IBCEP",69,0)
SET1(IBLCT,Z0) ;
"RTN","IBCEP",70,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,Z0)
"RTN","IBCEP",71,0)
 Q
"RTN","IBCEP",72,0)
 ;
"RTN","IBCEP",73,0)
EXPND ;
"RTN","IBCEP",74,0)
 Q
"RTN","IBCEP",75,0)
 ;
"RTN","IBCEP",76,0)
HELP ;
"RTN","IBCEP",77,0)
 Q
"RTN","IBCEP",78,0)
 ;
"RTN","IBCEP",79,0)
EXIT ;
"RTN","IBCEP",80,0)
 K ^TMP("IBPRV_INS_ID_PARAMS",$J)
"RTN","IBCEP",81,0)
 D CLEAN^VALM10
"RTN","IBCEP",82,0)
 Q
"RTN","IBCEP",83,0)
 ;
"RTN","IBCEP",84,0)
EDIT ; Entrypoint called from IBCSCE to invoke provider id edit functions
"RTN","IBCEP",85,0)
 Q
"RTN","IBCEP",86,0)
 ;
"RTN","IBCEP",87,0)
EDIT1 ; Edit parameters
"RTN","IBCEP",88,0)
 N IB,IBY,IBCNS,DIE,DR,X,Y
"RTN","IBCEP",89,0)
 D FULL^VALM1
"RTN","IBCEP",90,0)
 S IBCNS=IBINS,IBY=12
"RTN","IBCEP",91,0)
 D MAIN^IBCNSC1
"RTN","IBCEP",92,0)
 S VALMBCK="R"
"RTN","IBCEP",93,0)
 Q
"RTN","IBCEP",94,0)
 ;
"RTN","IBCEP",95,0)
NETID() ; Returns the ien of the entry in file 355.97 that is designated as the
"RTN","IBCEP",96,0)
 ; NETWORK ID
"RTN","IBCEP",97,0)
 N Z S Z=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  Q:$P($G(^(Z,1)),U,6)
"RTN","IBCEP",98,0)
 Q Z
"RTN","IBCEP",99,0)
 ;
"RTN","IBCEP",100,0)
EMCID() ; Returns the ien of the entry in file 355.97 that is designated as the
"RTN","IBCEP",101,0)
 ; EMC ID
"RTN","IBCEP",102,0)
 N Z S Z=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  Q:$P($G(^(Z,1)),U,5)
"RTN","IBCEP",103,0)
 Q Z
"RTN","IBCEP",104,0)
 ;
"RTN","IBCEP",105,0)
UPIN() ; Returns the ien of the entry in file 355.97 that is designated as the
"RTN","IBCEP",106,0)
 ; UPIN ID
"RTN","IBCEP",107,0)
 Q +$O(^IBE(355.97,"B","UPIN",0))
"RTN","IBCEP",108,0)
 ;
"RTN","IBCEP",109,0)
EDITID(IBCNS) ; Edit provider id's from insurance co enter/edit
"RTN","IBCEP",110,0)
 ; IBCNS = ien of file 36
"RTN","IBCEP",111,0)
 Q   ; WCJ 12/30/2005
"RTN","IBCEP",112,0)
 N X,Y,Z4,DIR
"RTN","IBCEP",113,0)
 S Z4=$G(^DIC(36,IBCNS,4))
"RTN","IBCEP",114,0)
 I 'Z4,'$P(Z4,U,2) Q
"RTN","IBCEP",115,0)
 S DIR("A",1)="USE PROVIDER ID MAINTENANCE TO ENTER/EDIT PROV SECONDARY ID'S FOR THIS CO.",DIR("A")="PRESS RETURN TO CONTINUE: ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","IBCEP",116,0)
 Q
"RTN","IBCEP",117,0)
 ;
"RTN","IBCEP0")
0^25^B67684201^B67697458
"RTN","IBCEP0",1,0)
IBCEP0 ;ALB/TMP - Functions for PROVIDER ID MAINTENANCE ;13-DEC-99
"RTN","IBCEP0",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,239,232,320,348**;21-MAR-94;Build 5
"RTN","IBCEP0",3,0)
 ;
"RTN","IBCEP0",4,0)
EN ; -- main entry point for IBCE PRV INS ID
"RTN","IBCEP0",5,0)
 N IBINS,IBDSP,IBSORT,IBPRV ; Variables should be available throughout actions
"RTN","IBCEP0",6,0)
 K IBFASTXT
"RTN","IBCEP0",7,0)
 D FULL^VALM1
"RTN","IBCEP0",8,0)
 D EN^VALM("IBCE PRVINS ID")
"RTN","IBCEP0",9,0)
 Q
"RTN","IBCEP0",10,0)
 ;
"RTN","IBCEP0",11,0)
EN1(IBINS) ; Entrypoint from insurance co maintenance
"RTN","IBCEP0",12,0)
 N IBDSP,IBSORT ; Variables should be available throughout actions
"RTN","IBCEP0",13,0)
 D FULL^VALM1
"RTN","IBCEP0",14,0)
 D EN^VALM("IBCE PRVINS ID FROM INS MAINT")
"RTN","IBCEP0",15,0)
 Q
"RTN","IBCEP0",16,0)
 ;
"RTN","IBCEP0",17,0)
HDR ; -- header code
"RTN","IBCEP0",18,0)
 N Z,Z0,Z1,IBCT,IBPPTYP,IBEMCTYP
"RTN","IBCEP0",19,0)
 S IBCT=1
"RTN","IBCEP0",20,0)
 K VALMHDR
"RTN","IBCEP0",21,0)
 I $G(IBINS) D
"RTN","IBCEP0",22,0)
 . N PCF,PCDISP
"RTN","IBCEP0",23,0)
 . S PCF=$P($G(^DIC(36,+IBINS,3)),U,13)
"RTN","IBCEP0",24,0)
 . S PCDISP=$S(PCF="C":"(Child)",PCF="P":"(Parent)",1:"")
"RTN","IBCEP0",25,0)
 . S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBINS,0)),U)_" "_PCDISP
"RTN","IBCEP0",26,0)
 . ; Get performing provider id type for insurance co
"RTN","IBCEP0",27,0)
 . S IBPPTYP=$$PPTYP(IBINS)
"RTN","IBCEP0",28,0)
 . ; Get ien of EMC ID from file 355.97
"RTN","IBCEP0",29,0)
 . S IBEMCTYP=+$$EMCID^IBCEP()
"RTN","IBCEP0",30,0)
 . I $G(IBSORT)="ALL"!($G(IBDSP)="I")!($G(IBSORT)=IBPPTYP)!($G(IBSORT)=IBEMCTYP) D
"RTN","IBCEP0",31,0)
 .. ; Look for care unit in either of these id types - if there, report on line 2 of header
"RTN","IBCEP0",32,0)
 .. I $G(IBSORT)=IBPPTYP S IBEMCTYP=0
"RTN","IBCEP0",33,0)
 .. I $G(IBSORT)=IBEMCTYP S IBPPTYP=0
"RTN","IBCEP0",34,0)
 .. F Z0=IBPPTYP_"P",IBEMCTYP_"E" S Z1="" F  S Z1=$O(^IBA(355.96,"D",+IBINS,+Z0,Z1)) Q:Z1=""  I Z1'="*N/A*" S Z($E(Z0,$L(Z0)))=1 Q
"RTN","IBCEP0",35,0)
 .. I $D(Z("P"))!$D(Z("E")) D
"RTN","IBCEP0",36,0)
 ... S IBCT=IBCT+1
"RTN","IBCEP0",37,0)
 ... S VALMHDR(IBCT)="  "_$S($D(Z("P")):"PERFORMING PROV ID"_$S($D(Z("E")):" AND ",1:""),1:"")_$S($D(Z("E")):"EMC PROV ID",1:"")_" MAY REQUIRE CARE UNIT"
"RTN","IBCEP0",38,0)
 . I $D(Z("P"))!$D(Z("E")) S IBCT=IBCT+1,VALMHDR(IBCT)=" "
"RTN","IBCEP0",39,0)
 . S IBCT=IBCT+1,VALMHDR(IBCT)="     PROVIDER "_$S($G(IBDSP)="I":"ID TYPE",1:"NAME   ")_$J("",6)_"FORM   CARE TYPE    CARE UNIT       ID#"
"RTN","IBCEP0",40,0)
 Q
"RTN","IBCEP0",41,0)
 ;
"RTN","IBCEP0",42,0)
INIT ; Initialization
"RTN","IBCEP0",43,0)
 K ^TMP("IB_EDITED_IDS",$J)  ; This will be to keep track of ID's edited during this session
"RTN","IBCEP0",44,0)
 D INSID(.IBINS,.IBDSP,.IBSORT)
"RTN","IBCEP0",45,0)
 I $G(IBDSP)="I",$G(IBSORT) S IBPRV=IBSORT
"RTN","IBCEP0",46,0)
 I '$G(IBINS) S VALMQUIT=1
"RTN","IBCEP0",47,0)
 Q
"RTN","IBCEP0",48,0)
 ;
"RTN","IBCEP0",49,0)
INSID(IBINS,IBDSP,IBSORT) ;
"RTN","IBCEP0",50,0)
 N DIC,DIR,DA,X,Y,IBOK,DTOUT,DUOUT
"RTN","IBCEP0",51,0)
 S IBOK=1
"RTN","IBCEP0",52,0)
 I '$G(IBINS) D
"RTN","IBCEP0",53,0)
 . S DIC(0)="AEMQ",DIC="^DIC(36," D ^DIC
"RTN","IBCEP0",54,0)
 . I Y'>0 S IBOK=0 Q
"RTN","IBCEP0",55,0)
 . S IBINS=+Y
"RTN","IBCEP0",56,0)
 I '$G(IBINS) S IBOK=0
"RTN","IBCEP0",57,0)
 I 'IBOK G INSIDQ
"RTN","IBCEP0",58,0)
 ;
"RTN","IBCEP0",59,0)
 S DIR(0)="SA^D:INSURANCE CO DEFAULT IDS;I:INDIVIDUAL PROVIDER IDS FURNISHED BY THE INS CO;A:ALL IDS FURNISHED BY THE INS CO BY PROVIDER TYPE"
"RTN","IBCEP0",60,0)
 S DIR("A")="SELECT DISPLAY CONTENT: ",DIR("B")="A"
"RTN","IBCEP0",61,0)
 S DIR("?",1)="(D) DISPLAY CONTAINS ONLY THOSE IDS ASSIGNED AS DEFAULTS TO THE FACILITY BY",DIR("?",2)="    THE INSURANCE COMPANY"
"RTN","IBCEP0",62,0)
 S DIR("?",3)="(I) DISPLAY CONTAINS ONLY THOSE IDS ASSIGNED TO INDIVIDUAL PROVIDERS BY THE",DIR("?",4)="    INSURANCE COMPANY"
"RTN","IBCEP0",63,0)
 S DIR("?",5)="(A) DISPLAY CONTAINS ALL IDS ASSIGNED BY THE INSURANCE COMPANY FOR ONE OR ALL",DIR("?")="    PROVIDER ID TYPES"
"RTN","IBCEP0",64,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP0",65,0)
 I $D(DTOUT)!$D(DUOUT)!("DIA"'[Y) S IBOK=0 G INSIDQ
"RTN","IBCEP0",66,0)
 S IBDSP=Y,IBSORT=""
"RTN","IBCEP0",67,0)
 I IBDSP="A"!(IBDSP="I") F  D  Q:'IBOK!(IBSORT'="")
"RTN","IBCEP0",68,0)
 . N Z
"RTN","IBCEP0",69,0)
 . S Z=$S(IBDSP="I":"",1:" ID TYPE")
"RTN","IBCEP0",70,0)
 . S DIR("A")="DO YOU WANT TO DISPLAY IDS FOR A SPECIFIC PROVIDER"_Z_"?: ",DIR("B")="NO",DIR(0)="YA"
"RTN","IBCEP0",71,0)
 . S DIR("?",1)="IF YOU ANSWER YES TO THIS QUESTION, YOU MAY SELECT A SPECIFIC PROVIDER"_Z,DIR("?")="  TO DISPLAY, OTHERWISE, ALL PROVIDER"_Z_"S FOUND WILL BE DISPLAYED"
"RTN","IBCEP0",72,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP0",73,0)
 . I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBCEP0",74,0)
 . I Y'=1 S IBSORT="ALL" Q
"RTN","IBCEP0",75,0)
 . ;
"RTN","IBCEP0",76,0)
 . I IBDSP="A" D  Q
"RTN","IBCEP0",77,0)
 .. S DIC(0)="AEMQ",DIC="^IBE(355.97,",DIC("S")="I $S('$P(^(0),U,2):1,1:$P(^(0),U,2)=3)" D ^DIC K DIC
"RTN","IBCEP0",78,0)
 .. I Y>0 S IBSORT=+Y Q
"RTN","IBCEP0",79,0)
 .. I $D(DTOUT)!$D(DUOUT) S IBOK=0
"RTN","IBCEP0",80,0)
 . ;
"RTN","IBCEP0",81,0)
 . I IBDSP="I" D  Q
"RTN","IBCEP0",82,0)
 .. N DA
"RTN","IBCEP0",83,0)
 .. S DIR(0)="399.0222,.02A",DIR("A")="SELECT PROVIDER: "
"RTN","IBCEP0",84,0)
 .. W ! D ^DIR K DIR W !
"RTN","IBCEP0",85,0)
 .. I Y>0 S IBSORT=Y Q
"RTN","IBCEP0",86,0)
 .. I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBCEP0",87,0)
 . S IBOK=0 Q
"RTN","IBCEP0",88,0)
 ;
"RTN","IBCEP0",89,0)
 G:'IBOK INSIDQ
"RTN","IBCEP0",90,0)
 D BLD(IBINS,IBDSP,IBSORT)
"RTN","IBCEP0",91,0)
INSIDQ I 'IBOK S VALMQUIT=1
"RTN","IBCEP0",92,0)
 Q
"RTN","IBCEP0",93,0)
 ;
"RTN","IBCEP0",94,0)
BLD(IBINS,IBDSP,IBSORT) ; Build display for Insurance co level provider ID's
"RTN","IBCEP0",95,0)
 N IB,IBENT,IBLCT,IBCT,IBPRV,IBSRT1,IBSRT2,IBOSRT1,IBOSRT2,CU,FT,PT,CT,Z,Z0
"RTN","IBCEP0",96,0)
 K ^TMP("IBPRV_INS_ID",$J),^TMP("IBPRV_INS_SORT",$J)
"RTN","IBCEP0",97,0)
 ;
"RTN","IBCEP0",98,0)
 S (IBENT,IBCT,IBLCT)=0
"RTN","IBCEP0",99,0)
 ;
"RTN","IBCEP0",100,0)
 I "DA"[$G(IBDSP) D
"RTN","IBCEP0",101,0)
 . S CU="" F  S CU=$O(^IBA(355.91,"AUNIQ",IBINS,CU)) Q:CU=""  S FT="" F  S FT=$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT)) Q:FT=""  D
"RTN","IBCEP0",102,0)
 .. S CT="" F  S CT=$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT,CT)) Q:CT=""  S PT=0 F  S PT=$S(IBDSP="A"&IBSORT:IBSORT,1:$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT,CT,PT))) Q:'PT  D  Q:IBDSP="A"&IBSORT
"RTN","IBCEP0",103,0)
 ... S Z=0 F  S Z=$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT,CT,PT,Z)) Q:'Z  S IB=$G(^IBA(355.91,Z,0)) S ^TMP("IBPRV_INS_SORT",$J,PT,"^<<INS CO DEFAULT>>",FT,CT,CU,Z)=$P(IB,U,7)_U
"RTN","IBCEP0",104,0)
 ;
"RTN","IBCEP0",105,0)
 I "IA"[$G(IBDSP) D
"RTN","IBCEP0",106,0)
 . S IBPRV=""
"RTN","IBCEP0",107,0)
 . N IB1,IB2
"RTN","IBCEP0",108,0)
 . F  S IBPRV=$O(^IBA(355.9,"AE",IBINS,IBPRV)) Q:'IBPRV  S Z=0 F  S Z=$O(^IBA(355.9,"AE",IBINS,IBPRV,Z)) Q:'Z  S IB=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP0",109,0)
 .. Q:$P(IB,U,4)=""!($P(IB,U,5)="")!($P(IB,U,6)="")!($P(IB,U,16)="")
"RTN","IBCEP0",110,0)
 .. I IBSORT,$S(IBDSP="I":IBPRV'=IBSORT,1:$P(IB,U,6)'=IBSORT) Q
"RTN","IBCEP0",111,0)
 .. S IB1=$S(IBDSP="A":$P(IB,U,6),1:U_$$EXPAND^IBTRE(355.9,.01,IBPRV)_U_IBPRV)
"RTN","IBCEP0",112,0)
 .. S IB2=$S(IBDSP="I":$P(IB,U,6),1:U_$$EXPAND^IBTRE(355.9,.01,IBPRV)_U_IBPRV)
"RTN","IBCEP0",113,0)
 .. S ^TMP("IBPRV_INS_SORT",$J,IB1,IB2,$P(IB,U,4),$P(IB,U,5),$P(IB,U,16),Z)=$P(IB,U,7)_U_IBPRV
"RTN","IBCEP0",114,0)
 ;
"RTN","IBCEP0",115,0)
 S IBOSRT1=""
"RTN","IBCEP0",116,0)
 S IBSRT1="" F  S IBSRT1=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1)) Q:IBSRT1=""  D
"RTN","IBCEP0",117,0)
 . S IBSRT2="",IBOSRT2=""
"RTN","IBCEP0",118,0)
 . F  S IBSRT2=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2)) Q:IBSRT2=""  D
"RTN","IBCEP0",119,0)
 .. I IBOSRT1'=IBSRT1 D
"RTN","IBCEP0",120,0)
 ... I IBOSRT1'="" S IBLCT=IBLCT+1 D SET^VALM10(IBLCT," ",IBCT+1)
"RTN","IBCEP0",121,0)
 ... S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,$S(IBDSP'="I":"ID Qualifier",1:"Provider")_": "_$S(IBDSP'="I":$$EXPAND^IBTRE(355.91,.06,IBSRT1),1:$P(IBSRT1,U,2_$S($P(IBSRT2,U,3)["VA(200":" (VA)",1:"(NON-VA)"))),IBCT+1)
"RTN","IBCEP0",122,0)
 ... S IBOSRT1=IBSRT1
"RTN","IBCEP0",123,0)
 .. ;
"RTN","IBCEP0",124,0)
 .. S FT="" F  S FT=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT)) Q:FT=""  S CT="" F  S CT=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT,CT)) Q:CT=""  D
"RTN","IBCEP0",125,0)
 ... S CU="" F  S CU=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT,CT,CU)) Q:CU=""  S Z=0 F  S Z=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT,CT,CU,Z)) Q:'Z  S IB=$G(^(Z)) D
"RTN","IBCEP0",126,0)
 .... S IBLCT=IBLCT+1,IBCT=IBCT+1
"RTN","IBCEP0",127,0)
 .... S Z0=$E(IBCT_$J("",4),1,4)_" "
"RTN","IBCEP0",128,0)
 .... I IBDSP'="I" S Z0=Z0_$E($S(IBOSRT2'=IBSRT2:$P(IBSRT2,U,2),1:"")_$J("",20),1,20)
"RTN","IBCEP0",129,0)
 .... I IBDSP="I" S Z0=Z0_$E($S(IBOSRT2'=IBSRT2:$$EXPAND^IBTRE(355.9,.06,IBSRT2),1:"")_$J("",20),1,20)
"RTN","IBCEP0",130,0)
 .... S IBOSRT2=IBSRT2
"RTN","IBCEP0",131,0)
 .... S Z0=Z0_"  "_$S(FT=1:"UB-92",FT=2:"1500 ",1:"BOTH ")_"  "_$E($S(CT=3:"RX",CT=1:"INPT",CT=2:"OUTPT",1:"INPT/OUTPT")_$J("",11),1,11)_"  "_$E($S(CU'="*N/A*":$P($G(^IBA(355.95,+$P($G(^IBA(355.96,+CU,0)),U),0)),U),1:"")_$J("",15),1,15)
"RTN","IBCEP0",132,0)
 .... D SET^VALM10(IBLCT,Z0_" "_$P(IB,U),IBCT)
"RTN","IBCEP0",133,0)
 .... S ^TMP("IBPRV_INS_ID",$J,"ZIDX",IBCT)=Z,^(IBCT,"PRV")=$P(IB,U,2)
"RTN","IBCEP0",134,0)
 .... I '$D(^TMP("IBPRV_INS_ID",$J,$S(IBDSP="I":"ZXPRV",1:"ZXPTYP"),IBSRT1)) S ^(IBSRT1)=IBLCT-1
"RTN","IBCEP0",135,0)
 K ^TMP("IBPRV_INS_SORT",$J)
"RTN","IBCEP0",136,0)
 ;
"RTN","IBCEP0",137,0)
 I IBLCT=0 D  G BLDQ ; No entries found
"RTN","IBCEP0",138,0)
 . D SET^VALM10(1," ")
"RTN","IBCEP0",139,0)
 . S Z="  No "_$S(IBDSP="D":"default ",1:"")
"RTN","IBCEP0",140,0)
 . S Z=Z_"ID's found for "_$S(IBDSP="I":"provider "_$S(IBSORT:"("_$$EXPAND^IBTRE(355.9,.01,IBSORT)_") ",1:"")_"and ",IBDSP="A":"provider type "_$S(IBSORT:"("_$$EXPAND^IBTRE(355.9,.06,IBSORT)_") ",1:"")_"and ",1:"")_"insurance co"
"RTN","IBCEP0",141,0)
 . D SET^VALM10(2,Z)
"RTN","IBCEP0",142,0)
 . S IBLCT=2
"RTN","IBCEP0",143,0)
 ;
"RTN","IBCEP0",144,0)
BLDQ S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP0",145,0)
 Q
"RTN","IBCEP0",146,0)
 ;
"RTN","IBCEP0",147,0)
EXPND ;
"RTN","IBCEP0",148,0)
 Q
"RTN","IBCEP0",149,0)
 ;
"RTN","IBCEP0",150,0)
HELP ;
"RTN","IBCEP0",151,0)
 Q
"RTN","IBCEP0",152,0)
 ;
"RTN","IBCEP0",153,0)
EXIT ;
"RTN","IBCEP0",154,0)
 K IBFASTXT
"RTN","IBCEP0",155,0)
 D COPYPROV^IBCEP5A(IBINS)
"RTN","IBCEP0",156,0)
 K ^TMP("IBPRV_INS_ID",$J)
"RTN","IBCEP0",157,0)
 D CLEAN^VALM10
"RTN","IBCEP0",158,0)
 Q
"RTN","IBCEP0",159,0)
 ;
"RTN","IBCEP0",160,0)
SEL(IBDA,MANY) ; Select from provider id list
"RTN","IBCEP0",161,0)
 ; IBDA is passed by reference and IBDA(1) returned containing
"RTN","IBCEP0",162,0)
 ;  ien's of the provider id records selected (file 355.9).
"RTN","IBCEP0",163,0)
 ; If > 1 entry can be selected, MANY is set to 1
"RTN","IBCEP0",164,0)
 N Z
"RTN","IBCEP0",165,0)
 S IBDA=0
"RTN","IBCEP0",166,0)
 D EN^VALM2($G(XQORNOD(0)),$S($G(MANY):"",1:"S"))
"RTN","IBCEP0",167,0)
 S Z=0 F  S Z=$O(VALMY(Z)) Q:'Z  S IBDA=IBDA+1,IBDA(IBDA)=+$G(^TMP("IBPRV_INS_ID",$J,"ZIDX",Z))_U_$G(^(Z,"PRV"))
"RTN","IBCEP0",168,0)
 Q
"RTN","IBCEP0",169,0)
 ;
"RTN","IBCEP0",170,0)
ENX(IBINS1) ; Insurance co level defaults for all providers or
"RTN","IBCEP0",171,0)
 ; for all providers by care unit
"RTN","IBCEP0",172,0)
 N DIC,DIE,DR,DA,X,Y,DLAYGO
"RTN","IBCEP0",173,0)
 I '$G(IBINS1) D  G:'$G(IBINS1) ENQ
"RTN","IBCEP0",174,0)
 . S DIC="^IBA(355.91,",DIC(0)="AELMQ",DLAYGO=355.91 D ^DIC
"RTN","IBCEP0",175,0)
 . I Y>0 S IBINS1=+Y
"RTN","IBCEP0",176,0)
 S DIE="^IBA(355.91,",DA=IBINS1,DR=".01;.06;.04;.05;.03;.07" D ^DIE
"RTN","IBCEP0",177,0)
 ;
"RTN","IBCEP0",178,0)
ENQ Q
"RTN","IBCEP0",179,0)
 ;
"RTN","IBCEP0",180,0)
PPTYP(IBINS) ; Returns the ien of the default performing provider type for 
"RTN","IBCEP0",181,0)
 ;  insurance company IBINS (ien file 36)
"RTN","IBCEP0",182,0)
 Q +$G(^DIC(36,+IBINS,4))
"RTN","IBCEP0",183,0)
 ;
"RTN","IBCEP0",184,0)
SCREEN(WHICH) ; This screen is used the menu protocol to screen out the ID functions if it is a child ins co
"RTN","IBCEP0",185,0)
 Q:'$G(DA) 0
"RTN","IBCEP0",186,0)
 Q:'$G(DA(1)) 0
"RTN","IBCEP0",187,0)
 N FILE,IENS,FIELD,FLAG,TARGET
"RTN","IBCEP0",188,0)
 S FILE=101.01,IENS=DA_","_DA(1),FIELD=".01",FLAG="I"
"RTN","IBCEP0",189,0)
 D GETS^DIQ(FILE,IENS,FIELD,FLAG,"TARGET")
"RTN","IBCEP0",190,0)
 Q:'$D(TARGET) 0
"RTN","IBCEP0",191,0)
 N IEN
"RTN","IBCEP0",192,0)
 S IEN=$G(TARGET(FILE,IENS_",",FIELD,FLAG))
"RTN","IBCEP0",193,0)
 Q:'+IEN 0
"RTN","IBCEP0",194,0)
 S FILE=101,FIELD=1,FLAG="E"
"RTN","IBCEP0",195,0)
 K TARGET
"RTN","IBCEP0",196,0)
 D GETS^DIQ(FILE,IEN,FIELD,FLAG,"TARGET")
"RTN","IBCEP0",197,0)
 Q:'$D(TARGET) 0
"RTN","IBCEP0",198,0)
 I $G(TARGET(FILE,IEN_",",FIELD,FLAG))'[WHICH Q 1
"RTN","IBCEP0",199,0)
 Q:'$G(IBINS) 0
"RTN","IBCEP0",200,0)
 N PCF
"RTN","IBCEP0",201,0)
 S PCF=$P($G(^DIC(36,+IBINS,3)),U,13)
"RTN","IBCEP0",202,0)
 I PCF="C" Q 0
"RTN","IBCEP0",203,0)
 Q 1
"RTN","IBCEP2A")
0^26^B42797265^B42808014
"RTN","IBCEP2A",1,0)
IBCEP2A ;ALB/TMP - EDI UTILITIES for provider ID ;25-APR-01
"RTN","IBCEP2A",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348**;21-MAR-94;Build 5
"RTN","IBCEP2A",3,0)
 ;
"RTN","IBCEP2A",4,0)
ALT(IBPERF,IBSRC,IBALT,IBINS4,IBPTYP) ; set source level to next higher level 
"RTN","IBCEP2A",5,0)
 ; or set the alternate type and source if performing provider id
"RTN","IBCEP2A",6,0)
 ; alternate type and source exist
"RTN","IBCEP2A",7,0)
 ; IBPERF = 1 if performing provider id is requested
"RTN","IBCEP2A",8,0)
 ; IBINS4 = '4' node of insurance co (file 36)
"RTN","IBCEP2A",9,0)
 ; Pass IBPTYP by reference to get alternate provider id type
"RTN","IBCEP2A",10,0)
 ; Pass IBALT by reference.  Set to 1 if alternate id is to be used next
"RTN","IBCEP2A",11,0)
 ;
"RTN","IBCEP2A",12,0)
 I '$G(IBPERF)!($P(IBINS4,U,3)=1) S IBSRC=IBSRC-1 G ALTQ
"RTN","IBCEP2A",13,0)
 S IBSRC=""
"RTN","IBCEP2A",14,0)
 I '$G(IBALT),$P(IBINS4,U,3)=2,$P(IBINS4,U,10),$P(IBINS4,U,11) S IBALT=1,IBSRC=$P(IBINS4,U,11),IBPTYP=$P(IBINS4,U,10) S:IBPTYP="" IBPTYP=$P(IBINS4,U)
"RTN","IBCEP2A",15,0)
 ;
"RTN","IBCEP2A",16,0)
ALTQ Q IBSRC
"RTN","IBCEP2A",17,0)
 ;
"RTN","IBCEP2A",18,0)
IDSET(IBPTYP,IBINS4,IBPERF,IBSPEC,IBSRC,IBUP) ; set variables for provider id type search
"RTN","IBCEP2A",19,0)
 N Z
"RTN","IBCEP2A",20,0)
 S IBSPEC=$G(^IBE(355.97,+IBPTYP,1))
"RTN","IBCEP2A",21,0)
 S Z=$S($G(IBPERF):2,$P(IBSPEC,U,5):6,$P(IBSPEC,U,6):4,1:2)
"RTN","IBCEP2A",22,0)
 S IBSRC=$P(IBINS4,U,Z),IBUP=$P(IBINS4,U,$S(IBSRC:Z+1,1:0))
"RTN","IBCEP2A",23,0)
 Q
"RTN","IBCEP2A",24,0)
 ;
"RTN","IBCEP2A",25,0)
CAREST(IBIFN) ; Return state file ien of state where care was performed
"RTN","IBCEP2A",26,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEP2A",27,0)
 ; Get it from rendering facility or if none, the billing facility
"RTN","IBCEP2A",28,0)
 N Z,IBXDATA,STATE
"RTN","IBCEP2A",29,0)
 S STATE=""
"RTN","IBCEP2A",30,0)
 D F^IBCEF("N-RENDERING INSTITUTION",,,IBIFN)
"RTN","IBCEP2A",31,0)
 I IBXDATA D
"RTN","IBCEP2A",32,0)
 . I '$P(IBXDATA,U,2) S STATE=+$P($G(^DIC(4,+IBXDATA,0)),U,2) Q
"RTN","IBCEP2A",33,0)
 . S STATE=+$P($G(^IBA(355.93,+IBXDATA,0)),U,7)
"RTN","IBCEP2A",34,0)
 E  D
"RTN","IBCEP2A",35,0)
 . D F^IBCEF("N-AGENT CASHIER STATE",,,IBIFN)
"RTN","IBCEP2A",36,0)
 . S STATE=IBXDATA
"RTN","IBCEP2A",37,0)
 Q STATE
"RTN","IBCEP2A",38,0)
 ;
"RTN","IBCEP2A",39,0)
RECALCA(IBIFN) ; Recalculate all performing provider id's on bill IBIFN
"RTN","IBCEP2A",40,0)
 ; IBIFN = ien of bill entry (file 399)
"RTN","IBCEP2A",41,0)
 N IBZ,IBZ0,IBX,IBP,IBSEQ,DA,DIE,DR,DIR,X,Y
"RTN","IBCEP2A",42,0)
 ;
"RTN","IBCEP2A",43,0)
 D EN^DDIOL("THIS FUNCTION HAS BEEN DISABLED",,"!") Q
"RTN","IBCEP2A",44,0)
 ;
"RTN","IBCEP2A",45,0)
 S DA(1)=IBIFN
"RTN","IBCEP2A",46,0)
 I '$D(^XUSEC("IB SUPERVISOR",DUZ)) D EN^DDIOL("YOU ARE NOT AUTHORIZED TO PERFORM THIS FUNCTION",,"!")
"RTN","IBCEP2A",47,0)
 S IBZ=0 F  S IBZ=$O(^DGCR(399,IBIFN,"PRV",IBZ)) Q:'IBZ  S IBP=$G(^(IBZ,0)) I $P(IBP,U,2)'="" D
"RTN","IBCEP2A",48,0)
 . S DA=IBZ
"RTN","IBCEP2A",49,0)
 . F IBZ0=5:1:7 Q:'$G(^DGCR(399,IBIFN,"I"_(IBZ0-4)))  D
"RTN","IBCEP2A",50,0)
 .. S IBSEQ=$$EXPAND^IBTRE(399.0222,.01,+IBP)_" "_$P("PRIMARY^SECONDARY^TERTIARY",U,IBZ0-4)_" PROVIDER ID "
"RTN","IBCEP2A",51,0)
 .. S IBX=$$RECALC(.DA,IBZ0-4,$P(IBP,U,IBZ0),1)
"RTN","IBCEP2A",52,0)
 .. I IBX'="",IBX=$P(IBP,U,IBZ0) D EN^DDIOL(IBSEQ_"NO CHANGE NEEDED",,"!") Q
"RTN","IBCEP2A",53,0)
 .. I IBX'="",IBX'=$P(IBP,U,IBZ0) D  Q
"RTN","IBCEP2A",54,0)
 ... S DR=(IBZ0/100)_"////"_IBX,DIE="^DGCR(399,"_DA(1)_",""PRV""," D ^DIE
"RTN","IBCEP2A",55,0)
 ... D EN^DDIOL(IBSEQ_"CHANGED TO "_IBX,,"!")
"RTN","IBCEP2A",56,0)
 .. D EN^DDIOL(IBSEQ_"NOT FOUND",,"!")
"RTN","IBCEP2A",57,0)
 Q
"RTN","IBCEP2A",58,0)
 ;
"RTN","IBCEP2A",59,0)
RECALC(IBDA,IBSEQ,IBX,IBD) ; Recalculate id #, if possible - called
"RTN","IBCEP2A",60,0)
 ;   from input transforms in subfile 399.0222, fields .05-.07
"RTN","IBCEP2A",61,0)
 ; IBDA = DA array of the provider entry (file 399.0222)
"RTN","IBCEP2A",62,0)
 ; IBSEQ = the numeric COB sequence of the provider id (1-3)
"RTN","IBCEP2A",63,0)
 ; IBX = the current value of the id in the subfile
"RTN","IBCEP2A",64,0)
 ; IBD = flag that if set to 1 will suppress the display text
"RTN","IBCEP2A",65,0)
 ;
"RTN","IBCEP2A",66,0)
 N IBPN,IBZ
"RTN","IBCEP2A",67,0)
 S IBPN=$P($G(^DGCR(399,IBDA(1),"PRV",IBDA,0)),U,2)
"RTN","IBCEP2A",68,0)
 I IBPN="" D:'$G(IBD) EN^DDIOL("   CAN'T CALCULATE WITHOUT A PROVIDER NAME","","?0") G RECALCQ
"RTN","IBCEP2A",69,0)
 S IBZ=$$GETID^IBCEP2(IBDA(1),2,IBPN,IBSEQ)
"RTN","IBCEP2A",70,0)
 I IBZ="" D:'$G(IBD) EN^DDIOL("   ID COULD NOT BE DETERMINED","","?0") G RECALCQ
"RTN","IBCEP2A",71,0)
 D:'$G(IBD) EN^DDIOL("  "_IBZ_$S(IBZ'=IBX:"",1:" (no change)"),"","?0")
"RTN","IBCEP2A",72,0)
 S IBX=IBZ
"RTN","IBCEP2A",73,0)
 ;
"RTN","IBCEP2A",74,0)
RECALCQ Q IBX
"RTN","IBCEP2A",75,0)
 ;
"RTN","IBCEP2A",76,0)
PERFPRV(IBIFN) ; Returns the variable pointer of the 'performing provider'
"RTN","IBCEP2A",77,0)
 ; (attending or rendering) for a bill IBIFN
"RTN","IBCEP2A",78,0)
 N IBP,IBPT,IBQ,Z
"RTN","IBCEP2A",79,0)
 S Z=$$FT^IBCEF(IBIFN),IBPT=$S(Z=2:3,Z=3:4,1:0)
"RTN","IBCEP2A",80,0)
 D GETPRV^IBCEU(IBIFN,IBPT,.IBP)
"RTN","IBCEP2A",81,0)
 Q $P($G(IBP(IBPT,1)),U,3)
"RTN","IBCEP2A",82,0)
 ;
"RTN","IBCEP2A",83,0)
INSPAR(IBIFN,SEQ) ;
"RTN","IBCEP2A",84,0)
 N Z,Z4,Z0
"RTN","IBCEP2A",85,0)
 Q:$G(X)'="??"
"RTN","IBCEP2A",86,0)
 S:'$G(SEQ) SEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEP2A",87,0)
 S Z=+$G(^DGCR(399,IBIFN,"I"_SEQ)),Z4=$G(^DIC(36,Z,4))
"RTN","IBCEP2A",88,0)
 I Z D
"RTN","IBCEP2A",89,0)
 . D EN^DDIOL(">"_$J("",20)_"-- PERFORMING PROVIDER ID PARAMETERS --",,"!")
"RTN","IBCEP2A",90,0)
 . S Z0=$P("  PRIMARY^SECONDARY^ TERTIARY",U,SEQ)_" INSURANCE: "_$P($G(^DIC(36,Z,0)),U)
"RTN","IBCEP2A",91,0)
 . D EN^DDIOL(">"_$J("",(80-$L(Z0))\2)_Z0,,"!")
"RTN","IBCEP2A",92,0)
 . D EN^DDIOL(">  Secondary Perf Prov ID Type (1500): "_$$EXPAND^IBTRE(36,4.01,+Z4),,"!")
"RTN","IBCEP2A",93,0)
 . D EN^DDIOL(">  Secondary Perf Prov ID Type (UB92): "_$$EXPAND^IBTRE(36,4.02,$P(Z4,U,2)),,"!")
"RTN","IBCEP2A",94,0)
 . D EN^DDIOL(">    Secondary Perf Prov IDs Required: "_$$EXPAND^IBTRE(36,4.03,$P(Z4,U,3)),,"!")
"RTN","IBCEP2A",95,0)
 . D EN^DDIOL(" ",,"!")
"RTN","IBCEP2A",96,0)
 Q
"RTN","IBCEP2A",97,0)
 ;
"RTN","IBCEP2A",98,0)
GETTYP(IBXIEN,IBCOBN,IBFUNC) ; Function returns provider id type for insurance co
"RTN","IBCEP2A",99,0)
 ; with COB of IBCOBN on claim ien IBXIEN in first ^ pc and 1 in second
"RTN","IBCEP2A",100,0)
 ; ^ piece if the id is required
"RTN","IBCEP2A",101,0)
 ; 
"RTN","IBCEP2A",102,0)
 ; IBFUNC=1:REFERRING;2:OPERATING;3:RENDERING;4:ATTENDING;5:SUPERVISING;9:OTHER
"RTN","IBCEP2A",103,0)
 ; 
"RTN","IBCEP2A",104,0)
 N A,R,Z,Z0
"RTN","IBCEP2A",105,0)
 S A="",R=0
"RTN","IBCEP2A",106,0)
 S:'$G(IBCOBN)!(IBCOBN>3) IBCOBN=$$COBN^IBCEF(IBXIEN)
"RTN","IBCEP2A",107,0)
 S Z=+$G(^DGCR(399,IBXIEN,"I"_+IBCOBN))
"RTN","IBCEP2A",108,0)
 I Z D
"RTN","IBCEP2A",109,0)
 . S Z0=$$FT^IBCEF(IBXIEN)
"RTN","IBCEP2A",110,0)
 . S A=+$P($G(^DIC(36,Z,4)),U,$S(Z0=2&($G(IBFUNC)=1):4,Z0=2:1,1:2))
"RTN","IBCEP2A",111,0)
 . I A,$G(IBFUNC)'=1 S R=$P($G(^DIC(36,Z,4)),U,3),R=$S('R:0,R=3:1,R=1:Z0=2,R=2:Z0=3,1:0)
"RTN","IBCEP2A",112,0)
 . I A,$G(IBFUNC)=1 S R=+$P($G(^DIC(36,Z,4)),U,5),R=$S('R:0,Z0'=2:0,1:1)
"RTN","IBCEP2A",113,0)
 Q A_U_R
"RTN","IBCEP2A",114,0)
 ;
"RTN","IBCEP2A",115,0)
UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,IBUNIT,IBCU,IBT) ; Match most-least specific
"RTN","IBCEP2A",116,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2A",117,0)
 ;
"RTN","IBCEP2A",118,0)
 ; Start in file 355.9 (Specific Provider)
"RTN","IBCEP2A",119,0)
 ;   IBPROV = (variable pointer syntax) provider on bill IBIFN
"RTN","IBCEP2A",120,0)
 ;
"RTN","IBCEP2A",121,0)
 N Q,Z0,Z1,Z2,IBID,IBX
"RTN","IBCEP2A",122,0)
 S IBID=""
"RTN","IBCEP2A",123,0)
 S IBX=$P($G(^IBA(355.9,+IBCU,0)),U,3) S:"0"[IBX IBX="*N/A*"
"RTN","IBCEP2A",124,0)
 S Z0=$$FT^IBCEF(IBIFN),Z0=$S(Z0=2:2,Z0=3:1,1:0),Z1=$$INPAT^IBCEF(IBIFN,1) S:'Z1 Z1=2 S Z2=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP2A",125,0)
 ;
"RTN","IBCEP2A",126,0)
 ; Match all elements
"RTN","IBCEP2A",127,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",128,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",129,0)
 ;
"RTN","IBCEP2A",130,0)
 ; Match both form types,specific I/O element
"RTN","IBCEP2A",131,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",132,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",133,0)
 ;
"RTN","IBCEP2A",134,0)
 ; Match specific form type, both I/O element or Rx
"RTN","IBCEP2A",135,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",136,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",137,0)
 ;
"RTN","IBCEP2A",138,0)
 ; Match both form types, both I/O element or Rx
"RTN","IBCEP2A",139,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",140,0)
 ;
"RTN","IBCEP2A",141,0)
UNIQ1Q Q IBID
"RTN","IBCEP2A",142,0)
 ;
"RTN","IBCEP2A",143,0)
UNIQ2(IBIFN,IBINS,IBPTYP,IBUNIT,IBCU,IBT) ; Match on most-least specific
"RTN","IBCEP2A",144,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2A",145,0)
 ;
"RTN","IBCEP2A",146,0)
 ; Start in file 355.91 (Specific Insurance)
"RTN","IBCEP2A",147,0)
 ;
"RTN","IBCEP2A",148,0)
 N Q,Z0,Z1,Z2,IBID,IBX
"RTN","IBCEP2A",149,0)
 S IBID="" S:"0"[$G(IBUNIT) IBUNIT="*N/A*"
"RTN","IBCEP2A",150,0)
 S Z0=$$FT^IBCEF(IBIFN),Z0=$S(Z0=2:2,Z0=3:1,1:0),Z1=$$INPAT^IBCEF(IBIFN,1) S:'Z1 Z1=2 S Z2=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP2A",151,0)
 ;
"RTN","IBCEP2A",152,0)
 ; Match all elements
"RTN","IBCEP2A",153,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",154,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",155,0)
 ;
"RTN","IBCEP2A",156,0)
 ; Match both form types,specific I/O element
"RTN","IBCEP2A",157,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",158,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",159,0)
 ;
"RTN","IBCEP2A",160,0)
 ; Match specific form type, both I/O element or Rx
"RTN","IBCEP2A",161,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",162,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",163,0)
 ;
"RTN","IBCEP2A",164,0)
 ; Match both form types, both I/O elements or Rx
"RTN","IBCEP2A",165,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",166,0)
 ;
"RTN","IBCEP2A",167,0)
UNIQ2Q Q IBID
"RTN","IBCEP2A",168,0)
 ;
"RTN","IBCEP4")
0^27^B23219297^B23231941
"RTN","IBCEP4",1,0)
IBCEP4 ;ALB/TMP - EDI UTILITIES for provider ID ;29-SEP-00
"RTN","IBCEP4",2,0)
 ;;2.0;INTEGRATED BILLING;**137,320,348**;21-MAR-94;Build 5
"RTN","IBCEP4",3,0)
 ;
"RTN","IBCEP4",4,0)
EN ; -- main entry point
"RTN","IBCEP4",5,0)
 N IBINS,IBALL,IB95
"RTN","IBCEP4",6,0)
 D ENX
"RTN","IBCEP4",7,0)
 Q
"RTN","IBCEP4",8,0)
 ;
"RTN","IBCEP4",9,0)
EN1(IBINS) ; -- Entry point from provider number maintenence
"RTN","IBCEP4",10,0)
 N IBPRV,IBALL,IB95
"RTN","IBCEP4",11,0)
 D ENX
"RTN","IBCEP4",12,0)
 Q
"RTN","IBCEP4",13,0)
 ;
"RTN","IBCEP4",14,0)
ENX ; Common call to list template for dual entry points
"RTN","IBCEP4",15,0)
 N IBSLEV,DIR,Y
"RTN","IBCEP4",16,0)
 K IBFASTXT
"RTN","IBCEP4",17,0)
 D FULL^VALM1
"RTN","IBCEP4",18,0)
 S DIR(0)="SA^1:Care Units for Performing Provider IDs;2:Care Units for Billing Provider Secondary IDs"
"RTN","IBCEP4",19,0)
 S DIR("A")="Enter Type of Care Unit: ",DIR("B")=$P($P(DIR(0),":",2),";")
"RTN","IBCEP4",20,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP4",21,0)
 I Y'>0 Q
"RTN","IBCEP4",22,0)
 S IBSLEV=+Y
"RTN","IBCEP4",23,0)
 I IBSLEV=2 D EN^VALM("IBCE 2ND PRVID CARE UNIT MAINT") Q
"RTN","IBCEP4",24,0)
 D EN^VALM("IBCE PRVCARE UNIT MAINT")
"RTN","IBCEP4",25,0)
 Q
"RTN","IBCEP4",26,0)
 ;
"RTN","IBCEP4",27,0)
HDR ; -- header
"RTN","IBCEP4",28,0)
 K VALMHDR
"RTN","IBCEP4",29,0)
 S VALMHDR(1)=" "
"RTN","IBCEP4",30,0)
 S VALMHDR(2)="Insurance Co: "_$S('$G(IBALL)&$G(IBINS):$P($G(^DIC(36,+IBINS,0)),U),1:"ALL")
"RTN","IBCEP4",31,0)
 Q
"RTN","IBCEP4",32,0)
 ;
"RTN","IBCEP4",33,0)
INIT ; -- init variables, list array
"RTN","IBCEP4",34,0)
 N Z,IB,IBLCT,IBENT,IBNM,IB0,Z0,Z1,IBQ,DIR,Y,X
"RTN","IBCEP4",35,0)
 I $G(IBINS) S Y=IBINS ; For entrypoint from provider number maintenance
"RTN","IBCEP4",36,0)
 ;
"RTN","IBCEP4",37,0)
 I '$G(IBINS) D
"RTN","IBCEP4",38,0)
 . S DIR(0)="PA^DIC(36,:AEMQ",DIR("A")="Select INSURANCE CO: ",DIR("?")="Select an INSURANCE CO to display its care units"
"RTN","IBCEP4",39,0)
 . D ^DIR K DIR
"RTN","IBCEP4",40,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=-2 Q
"RTN","IBCEP4",41,0)
 . I Y>0 S IBINS=+Y Q
"RTN","IBCEP4",42,0)
 ;
"RTN","IBCEP4",43,0)
 I Y'=-2 D
"RTN","IBCEP4",44,0)
 . D BLD
"RTN","IBCEP4",45,0)
 E  D
"RTN","IBCEP4",46,0)
 . S VALMQUIT=1
"RTN","IBCEP4",47,0)
 Q
"RTN","IBCEP4",48,0)
 ;
"RTN","IBCEP4",49,0)
BLD ;  Bld display  - IBINS must = ien of file 36
"RTN","IBCEP4",50,0)
 K ^TMP("IBPRV_CU",$J)
"RTN","IBCEP4",51,0)
 ;
"RTN","IBCEP4",52,0)
 I $G(IBSLEV)=2 Q
"RTN","IBCEP4",53,0)
 ;
"RTN","IBCEP4",54,0)
 S (IBENT,IBLCT)=0,IBNM=""
"RTN","IBCEP4",55,0)
 F  S IBNM=$O(^IBA(355.95,"C",IBINS,IBNM)) Q:IBNM=""  S Z=0 F  S Z=$O(^IBA(355.95,"C",IBINS,IBNM,Z)) Q:'Z  S IB=$G(^IBA(355.95,Z,0)) I IB'="",$P(IB,U,4)="" D
"RTN","IBCEP4",56,0)
 . S IBLCT=IBLCT+1,IBENT=IBENT+1
"RTN","IBCEP4",57,0)
 . I '$D(^IBA(355.96,"AUNIQ",IBINS,Z)) D SET^VALM10(IBLCT,$E(IBENT_"    ",1,4)_$E($P(IB,U)_$J("",30),1,30)_"  "_$E($P(IB,U,2)_$J("",20),1,20)_" (NO COMBINATIONS FOUND)",IBENT) Q
"RTN","IBCEP4",58,0)
 . D SET^VALM10(IBLCT,$E(IBENT_"    ",1,4)_$E($P(IB,U)_$J("",30),1,30)_"  "_$E($P(IB,U,2)_$J("",20),1,20),IBENT)
"RTN","IBCEP4",59,0)
 . S ^TMP("IBPRV_CU",$J,"ZIDX",IBENT)=Z
"RTN","IBCEP4",60,0)
 . S Z0=0 F  S Z0=$O(^IBA(355.96,"AE",Z,Z0)) Q:'Z0  S Z1=0 F  S Z1=$O(^IBA(355.96,"AE",Z,Z0,Z1)) Q:'Z1  S IB0=$G(^IBA(355.96,Z1,0)) I IB0'="" D
"RTN","IBCEP4",61,0)
 .. S IBLCT=IBLCT+1
"RTN","IBCEP4",62,0)
 .. S IBQ=$J("",28)_"o "_$E($$EXPAND^IBTRE(355.96,.06,+$P(IB0,U,6))_$J("",20),1,20)
"RTN","IBCEP4",63,0)
 .. S IBQ=IBQ_"  "_$E($P("Both form types^UB92 Only^CMS-1500 Only",U,$P(IB0,U,4)+1)_$J("",15),1,15)_"  "_$E($P("Inpt/Outpt^Inpt Only^Outpt Only^RX Only",U,+$P(IB0,U,5)+1)_$J("",10),1,10)
"RTN","IBCEP4",64,0)
 .. D SET^VALM10(IBLCT,IBQ,IBENT)
"RTN","IBCEP4",65,0)
 ;
"RTN","IBCEP4",66,0)
 I 'IBLCT D SET^VALM10(1,"No CARE UNITs Found"_$S('$G(IBINS):"",1:" for Insurance Co"))
"RTN","IBCEP4",67,0)
 S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP4",68,0)
 Q
"RTN","IBCEP4",69,0)
 ;
"RTN","IBCEP4",70,0)
HELP ; -- help
"RTN","IBCEP4",71,0)
 ;
"RTN","IBCEP4",72,0)
 I $G(IBSLEV)=2 Q
"RTN","IBCEP4",73,0)
 ;
"RTN","IBCEP4",74,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCEP4",75,0)
 Q
"RTN","IBCEP4",76,0)
 ;
"RTN","IBCEP4",77,0)
EXIT ; -- exit
"RTN","IBCEP4",78,0)
 K IBFASTXT
"RTN","IBCEP4",79,0)
 D CLEAN^VALM10
"RTN","IBCEP4",80,0)
 K ^TMP("IBPRV_CU",$J),IBINS,IBALL
"RTN","IBCEP4",81,0)
 Q
"RTN","IBCEP4",82,0)
 ;
"RTN","IBCEP4",83,0)
EXPND ;
"RTN","IBCEP4",84,0)
 Q
"RTN","IBCEP4",85,0)
 ;
"RTN","IBCEP4",86,0)
SEL(IBDA,MANY) ; Select from care unit list
"RTN","IBCEP4",87,0)
 ; IBDA is passed by reference and IBDA(1) returned containing
"RTN","IBCEP4",88,0)
 ;  ien's of the care unit selected (file 355.95).
"RTN","IBCEP4",89,0)
 ; If > 1 entry can be selected, MANY is set to 1
"RTN","IBCEP4",90,0)
 N Z
"RTN","IBCEP4",91,0)
 S IBDA=0
"RTN","IBCEP4",92,0)
 D EN^VALM2($G(XQORNOD(0)),$S($G(MANY):"",1:"S"))
"RTN","IBCEP4",93,0)
 S Z=0 F  S Z=$O(VALMY(Z)) Q:'Z  S IBDA=IBDA+1,IBDA(IBDA)=+$G(^TMP("IBPRV_CU",$J,"ZIDX",Z))
"RTN","IBCEP4",94,0)
 Q
"RTN","IBCEP4",95,0)
 ;
"RTN","IBCEP4",96,0)
DISP(IBVAR,IBINS,IBPTYP,IBFT,IBCT,START,END) ; Set up display array for
"RTN","IBCEP4",97,0)
 ; provider id
"RTN","IBCEP4",98,0)
 N Z
"RTN","IBCEP4",99,0)
 S START=$S($G(START):START,1:1)
"RTN","IBCEP4",100,0)
 S (Z,END)=$G(START)
"RTN","IBCEP4",101,0)
 S @IBVAR@(START)="INSURANCE: "_$S(IBINS:$P($G(^DIC(36,+IBINS,0)),U),1:"ALL INSURANCE")
"RTN","IBCEP4",102,0)
 S @IBVAR@(START+1)="PROV TYPE: "_$$EXPAND^IBTRE(355.96,.06,IBPTYP)
"RTN","IBCEP4",103,0)
 S @IBVAR@(START+2)="FORM TYPE: "_$$EXPAND^IBTRE(355.96,.04,IBFT)
"RTN","IBCEP4",104,0)
 S @IBVAR@(START+3)="CARE TYPE: "_$$EXPAND^IBTRE(355.96,.05,IBCT)
"RTN","IBCEP4",105,0)
 S END=$G(START)+3
"RTN","IBCEP4",106,0)
 Q
"RTN","IBCEP4",107,0)
 ;
"RTN","IBCEP4",108,0)
CAREUOK(IBIFN,IBCU,IBTYPE,IBSEQ) ; Returns 1 if care unit is appropriate 
"RTN","IBCEP4",109,0)
 ; for bill based on provider type, care type, bill type and insurance co
"RTN","IBCEP4",110,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEP4",111,0)
 ; IBCU = the ien of the care unit (file 355.96)
"RTN","IBCEP4",112,0)
 ; IBTYPE = type of ID being checked (1=performing, 2=EMC)
"RTN","IBCEP4",113,0)
 ; IBSEQ = the COB seq being checked (1-3)
"RTN","IBCEP4",114,0)
 N Z,IBOK,IBINS,IBCT,IBFT,IBPTYP,IBRX
"RTN","IBCEP4",115,0)
 S IBOK=0
"RTN","IBCEP4",116,0)
 S IBINS=+$$FINDINS^IBCEF1(IBIFN,+IBSEQ),IBFT=$S($$FT^IBCEF(IBIFN)=2:2,1:1)
"RTN","IBCEP4",117,0)
 S IBPTYP=+$S(IBTYPE=1:$$PPTYP^IBCEP0(IBINS),1:$$EMCID^IBCEP())
"RTN","IBCEP4",118,0)
 S IBRX=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP4",119,0)
 S IBCT=$S('IBRX:$S($$INPAT^IBCEF(IBIFN,1):1,1:2),1:3)
"RTN","IBCEP4",120,0)
 ;Check from most general to most specific
"RTN","IBCEP4",121,0)
 I $D(^IBA(355.96,"AD",IBINS,0,0,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",122,0)
 I 'IBRX,$D(^IBA(355.96,"AD",IBINS,IBFT,0,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",123,0)
 I $D(^IBA(355.96,"AD",IBINS,0,IBCT,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",124,0)
 I $D(^IBA(355.96,"AD",IBINS,IBFT,IBCT,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",125,0)
 ;
"RTN","IBCEP4",126,0)
CAREOKQ Q IBOK
"RTN","IBCEP4",127,0)
 ;
"RTN","IBCEP5")
0^28^B48252078^B48276203
"RTN","IBCEP5",1,0)
IBCEP5 ;ALB/TMP - EDI UTILITIES for provider ID ;29-SEP-00
"RTN","IBCEP5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348**;21-MAR-94;Build 5
"RTN","IBCEP5",3,0)
 ;
"RTN","IBCEP5",4,0)
EN ; -- main entry point for IBCE PRV MAINT
"RTN","IBCEP5",5,0)
 N IBPRV,IBINS
"RTN","IBCEP5",6,0)
EN1 ; Entrypoint for non-VA provider ID maintenance hook
"RTN","IBCEP5",7,0)
 N IBSLEV,DIR,Y,X,IBPRMPT,IBNVAFL,IBIF
"RTN","IBCEP5",8,0)
 K IBFASTXT
"RTN","IBCEP5",9,0)
 S IBIF="" I $G(IBPRV) S IBIF=$$GET1^DIQ(355.93,IBPRV,.02,"I")
"RTN","IBCEP5",10,0)
 D FULL^VALM1
"RTN","IBCEP5",11,0)
 S IBPRMPT=$S(IBIF=1:"LAB OR FACILITY",1:"PROVIDER")
"RTN","IBCEP5",12,0)
 S DIR(0)="SA^1:"_IBPRMPT_"'S OWN IDS;2:"_IBPRMPT_" IDS FURNISHED BY AN INSURANCE COMPANY"
"RTN","IBCEP5",13,0)
 S DIR("A")="SELECT SOURCE OF ID: ",DIR("B")=$P($P(DIR(0),":",2),";")
"RTN","IBCEP5",14,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP5",15,0)
 I Y'>0 Q
"RTN","IBCEP5",16,0)
 S IBSLEV=+Y
"RTN","IBCEP5",17,0)
 D EN^VALM("IBCE PRVPRV MAINT")
"RTN","IBCEP5",18,0)
 Q
"RTN","IBCEP5",19,0)
 ;
"RTN","IBCEP5",20,0)
HDR ; -- header code
"RTN","IBCEP5",21,0)
 N IBC,Z,IBIF
"RTN","IBCEP5",22,0)
 S IBIF="" I $G(IBNPRV) S IBIF=$$GET1^DIQ(355.93,IBNPRV,.02,"I")
"RTN","IBCEP5",23,0)
 K VALMHDR
"RTN","IBCEP5",24,0)
 S IBC=1
"RTN","IBCEP5",25,0)
 S IBPRMPT=$S(IBIF=1:"Lab or Facility",1:"Performing Provider")
"RTN","IBCEP5",26,0)
 S Z="** "_$S($G(IBSLEV)=1:IBPRMPT_"'s Own IDs (No Specific Insurance Co)",1:IBPRMPT_" IDs from Insurance Co")_" **"
"RTN","IBCEP5",27,0)
 S VALMHDR(IBC)=$J("",80-$L(Z)\2)_Z,IBC=IBC+1
"RTN","IBCEP5",28,0)
 I $G(IBPRV),'+IBIF S VALMHDR(IBC)="PROVIDER   : "_$$EXPAND^IBTRE(355.9,.01,IBPRV)_$S(IBPRV["VA(200":" (VA PROVIDER)",1:" (NON-VA PROVIDER)"),IBC=IBC+1
"RTN","IBCEP5",29,0)
 I $G(IBPRV),+IBIF S VALMHDR(IBC)="Provider: "_$$EXPAND^IBTRE(355.9,.01,IBPRV)_$S(IBIF=1:"(Non-VA Lab or Facility)",1:""),IBC=IBC+1
"RTN","IBCEP5",30,0)
 I $G(IBINS) D
"RTN","IBCEP5",31,0)
 . N PCF,PCDISP
"RTN","IBCEP5",32,0)
 . S PCF=$P($G(^DIC(36,+IBINS,3)),"^",13)
"RTN","IBCEP5",33,0)
 . S PCDISP=$S($G(IBSLEV)'=2!($G(IBPRV)'["VA(200,"):"",PCF="C":"(Child)",PCF="P":"(Parent)",1:"")
"RTN","IBCEP5",34,0)
 . S VALMHDR(IBC)=$S(IBIF:"Insurance Co: ",1:"INSURANCE CO: ")_$P($G(^DIC(36,+IBINS,0)),U)_" "_PCDISP
"RTN","IBCEP5",35,0)
 Q
"RTN","IBCEP5",36,0)
 ;
"RTN","IBCEP5",37,0)
INIT ; -- init variables and list array
"RTN","IBCEP5",38,0)
 N IBFILE,DIR,DIC,Y,X,DTOUT,DUOUT,IBIF,AGAIN
"RTN","IBCEP5",39,0)
 ;
"RTN","IBCEP5",40,0)
 K ^TMP("IB_EDITED_IDS",$J)  ; This will be to keep track of ID's edited during this session
"RTN","IBCEP5",41,0)
 S IBIF="" I $G(IBNPRV) S IBIF=$$GET1^DIQ(355.93,IBNPRV,.02,"I")
"RTN","IBCEP5",42,0)
 ;
"RTN","IBCEP5",43,0)
 ; Removing Care Unit under certain conditions
"RTN","IBCEP5",44,0)
 ; This list is used for multiple purposes and not all have Care Units Associated with them
"RTN","IBCEP5",45,0)
 ; Also, a different protocol menu is used with these
"RTN","IBCEP5",46,0)
 ; IBNPRV is a non VA provider
"RTN","IBCEP5",47,0)
 ; IBIF = 1 means this is a group or facility, not an individual.
"RTN","IBCEP5",48,0)
 ; 
"RTN","IBCEP5",49,0)
 I $G(IBNPRV),$G(IBIF)=1 D
"RTN","IBCEP5",50,0)
 . S VALM("TITLE")="Secondary Provider ID"
"RTN","IBCEP5",51,0)
 . K VALMDDF("CAREUNIT")
"RTN","IBCEP5",52,0)
 . I VALMCAP["Care Unit" S VALMCAP=$P(VALMCAP,"Care Unit")_"         "_$P(VALMCAP,"Care Unit",2)
"RTN","IBCEP5",53,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP5",54,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA LOF MAINT")
"RTN","IBCEP5",55,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP5",56,0)
 ;
"RTN","IBCEP5",57,0)
 I $G(IBPRV) S IBFILE="IBA(355.93,",IBPRV=+IBPRV_";"_IBFILE
"RTN","IBCEP5",58,0)
 I '$G(IBPRV) D  G:$G(VALMQUIT) INITQ
"RTN","IBCEP5",59,0)
 . S DIR(0)="SAO^V:VA PROVIDER;N:NON-VA PROVIDER",DIR("A")="(V)A or (N)on-VA provider: ",DIR("B")="V"
"RTN","IBCEP5",60,0)
 . D ^DIR K DIR
"RTN","IBCEP5",61,0)
 . I "NV"'[Y!(Y="") S VALMQUIT=1 Q
"RTN","IBCEP5",62,0)
 . S IBFILE=$S(Y="V":"VA(200,",1:"IBA(355.93,")
"RTN","IBCEP5",63,0)
 . S DIC=U_IBFILE,DIC(0)="AEMQ"_$S(IBFILE["355.93":"L",1:"")
"RTN","IBCEP5",64,0)
 . S DIC("A")="Select "_$S(IBFILE["355.93":"NON-",1:"")_"V.A. PROVIDER NAME: "
"RTN","IBCEP5",65,0)
 . S:IBFILE["355.93" DIC("DR")=".02////2;.03;.04"
"RTN","IBCEP5",66,0)
 . F  D  I $G(IBPRV)!$G(VALMQUIT) K DIC Q
"RTN","IBCEP5",67,0)
 .. D ^DIC
"RTN","IBCEP5",68,0)
 .. I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 Q
"RTN","IBCEP5",69,0)
 .. I Y'>0 W !,*7,"This is a required response. Enter '^' to exit" Q
"RTN","IBCEP5",70,0)
 .. S IBPRV=+Y_";"_IBFILE
"RTN","IBCEP5",71,0)
 ;
"RTN","IBCEP5",72,0)
AGAIN I $G(IBSLEV)=2 D  G:$G(AGAIN) AGAIN G:$G(VALMQUIT) INITQ
"RTN","IBCEP5",73,0)
 . S AGAIN=0
"RTN","IBCEP5",74,0)
 . S DIR(0)="PA^DIC(36,:AEMQ",DIR("A")="Select INSURANCE CO: ",DIR("?",1)="Select an INSURANCE CO to display its provider ID's"
"RTN","IBCEP5",75,0)
 . D ^DIR K DIR
"RTN","IBCEP5",76,0)
 . I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 Q
"RTN","IBCEP5",77,0)
 . S IBINS=$S(Y>0:+Y,1:"NO")
"RTN","IBCEP5",78,0)
 . I $G(IBPRV)'["VA(200," Q    ; Only VA providers
"RTN","IBCEP5",79,0)
 . I $P($G(^DIC(36,+IBINS,3)),"^",13)="C" D  S AGAIN=1 Q
"RTN","IBCEP5",80,0)
 .. W !,*7,"This is a Child Insurance Company.  Editing IDs is not permitted."
"RTN","IBCEP5",81,0)
 ;
"RTN","IBCEP5",82,0)
 E  D
"RTN","IBCEP5",83,0)
 . S IBINS="NO"
"RTN","IBCEP5",84,0)
 D BLD
"RTN","IBCEP5",85,0)
INITQ Q
"RTN","IBCEP5",86,0)
 ;
"RTN","IBCEP5",87,0)
BLD ;  Build initial display
"RTN","IBCEP5",88,0)
 ; Assumes IBPRV = the variable ptr for prov id file (355.9)
"RTN","IBCEP5",89,0)
 ;         IBINS = the ien of the ins co or if null, ALL is assumed
"RTN","IBCEP5",90,0)
 ;         IBSLEV = 1 to display only provider default ids
"RTN","IBCEP5",91,0)
 ;                = 2 to display all provider/insurance co ids
"RTN","IBCEP5",92,0)
 N IB,IBLCT,IBCT,CT,PT,CU,INS,FT,Z,IBENT,IB1,IBIF
"RTN","IBCEP5",93,0)
 ;
"RTN","IBCEP5",94,0)
 S IBIF="" I $G(IBPRV)[355.93 S IBIF=$$GET1^DIQ(355.93,+IBPRV,.02,"I")
"RTN","IBCEP5",95,0)
 ;
"RTN","IBCEP5",96,0)
 K ^TMP("IBPRV_",$J),^TMP("IBPRV_SORT",$J)
"RTN","IBCEP5",97,0)
 K Z0
"RTN","IBCEP5",98,0)
 S (IBENT,IBCT,IBLCT)=0,INS="",IB1=1
"RTN","IBCEP5",99,0)
 F  S INS=$S($G(IBINS):IBINS,IBSLEV=1:"*ALL*",1:$O(^IBA(355.9,"AUNIQ",IBPRV,INS))) Q:$S(INS="":1,$G(IBINS)!(IBSLEV=1):$D(CU),1:0)  S CU="",IB1=0 F  S CU=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU)) Q:CU=""  D
"RTN","IBCEP5",100,0)
 . S FT="" F  S FT=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT)) Q:FT=""  S CT="" F  S CT=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT,CT)) Q:CT=""  S PT=0 F  S PT=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT,CT,PT)) Q:'PT  D
"RTN","IBCEP5",101,0)
 .. S Z=0 F  S Z=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT,CT,PT,Z)) Q:'Z  S IB=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP5",102,0)
 ... S ^TMP("IBPRV_SORT",$J,$S(INS:$P($G(^DIC(36,+INS,0)),U)_" ",1:" ALL"),PT,FT,CT,CU,Z)=$P(IB,U,7)
"RTN","IBCEP5",103,0)
 ;
"RTN","IBCEP5",104,0)
 I IBSLEV=1,IBPRV["IBA(355.93",$P($G(^IBA(355.93,+IBPRV,0)),U,12)'="" S ^TMP("IBPRV_SORT",$J," ALL",+$$STLIC^IBCEP8(),0,0,"*N/A*",0)=$P(^IBA(355.93,+IBPRV,0),U,12)
"RTN","IBCEP5",105,0)
 S INS="" F  S INS=$O(^TMP("IBPRV_SORT",$J,INS)) Q:INS=""  D
"RTN","IBCEP5",106,0)
 . I '$G(IBINS),'IBIF D:IBLCT SET^VALM10(IBLCT+1," ",IBCT) S IBLCT=$S(IBLCT:IBLCT+2,1:1) D SET^VALM10(IBLCT,"INSURANCE CO: "_$S($E(INS)=" ":"ALL INSURANCE",1:INS),$S(IBCT:IBCT,1:1))
"RTN","IBCEP5",107,0)
 . S PT=""
"RTN","IBCEP5",108,0)
 . F  S PT=$O(^TMP("IBPRV_SORT",$J,INS,PT)) Q:PT=""  S FT="" F  S FT=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT)) Q:FT=""  S CT="" F  S CT=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT,CT)) Q:CT=""  D
"RTN","IBCEP5",109,0)
 .. S CU="" F  S CU=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT,CT,CU)) Q:CU=""  S Z="" F  S Z=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT,CT,CU,Z)) Q:Z=""  S IB=$G(^(Z)) D
"RTN","IBCEP5",110,0)
 ... S IBLCT=IBLCT+1,IBCT=IBCT+1
"RTN","IBCEP5",111,0)
 ... S Z0=$E(IBCT_"     ",1,4)_" "_$E($$EXPAND^IBTRE(355.9,.06,PT)_$S(PT=$$STLIC^IBCEP8():"("_$P($G(^DIC(5,+$P($G(^IBA(355.93,+IBPRV,0)),U,7),0)),U,2)_")",1:"")_$J("",20),1,20)_"  "_$S(FT=1:"UB-92",FT=2:"1500 ",1:"BOTH ")
"RTN","IBCEP5",112,0)
 ... S Z0=Z0_"  "_$E($S(CT=3:"RX",CT=1:"INPT",CT=2:"OUTPT",1:"INPT/OUTPT")_$J("",11),1,11)
"RTN","IBCEP5",113,0)
 ... S Z0=Z0_"  "_$E($S(CU'="*N/A*":$P($G(^IBA(355.95,+$G(^IBA(355.96,CU,0)),0)),U),1:"")_$J("",15),1,15) I Z0["MEDICINE" X "*"
"RTN","IBCEP5",114,0)
 ... D SET^VALM10(IBLCT,Z0_" "_IB,IBCT)
"RTN","IBCEP5",115,0)
 ... S ^TMP("IBPRV_",$J,"ZIDX",IBCT)=$S(Z'=0:Z,1:"LIC^"_IBPRV)
"RTN","IBCEP5",116,0)
 I IBSLEV=1,IBPRV["VA(200" D
"RTN","IBCEP5",117,0)
 . N IBP
"RTN","IBCEP5",118,0)
 . S IBP=+IBPRV
"RTN","IBCEP5",119,0)
 . Q:'$$GETLIC^IBCEP5D(.IBP)
"RTN","IBCEP5",120,0)
 . I IBCT S IBLCT=IBLCT+1 D SET^VALM10(IBLCT," ",IBCT)
"RTN","IBCEP5",121,0)
 . S Z=0 F  S Z=$O(IBP(Z)) Q:'Z  D
"RTN","IBCEP5",122,0)
 .. S IBLCT=IBLCT+1,IBCT=IBCT+1
"RTN","IBCEP5",123,0)
 .. D SET^VALM10(IBLCT,$E(IBCT_"     ",1,4)_$E($P($G(^DIC(5,+Z,0)),U,2)_" STATE LICENSE #"_$J("",20),1,20)_$J("",39)_IBP(Z),IBCT)
"RTN","IBCEP5",124,0)
 .. S ^TMP("IBPRV_",$J,"ZIDX",IBCT)="LIC^"_+IBPRV
"RTN","IBCEP5",125,0)
 K ^TMP("IBPRV_SORT",$J)
"RTN","IBCEP5",126,0)
 ;
"RTN","IBCEP5",127,0)
 I IBLCT=0 D  G BLDQ ; No entries for ins co selected
"RTN","IBCEP5",128,0)
 . D SET^VALM10(1," ")
"RTN","IBCEP5",129,0)
 . D SET^VALM10(2,"  No ID's found for provider "_$S('$G(IBINS):"",1:"and selected insurance co"))
"RTN","IBCEP5",130,0)
 . S IBLCT=2
"RTN","IBCEP5",131,0)
 ;
"RTN","IBCEP5",132,0)
BLDQ K VALMCNT,VALMBG
"RTN","IBCEP5",133,0)
 S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP5",134,0)
 Q
"RTN","IBCEP5",135,0)
 ;
"RTN","IBCEP5",136,0)
HELP ; -- help code
"RTN","IBCEP5",137,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCEP5",138,0)
 Q
"RTN","IBCEP5",139,0)
 ;
"RTN","IBCEP5",140,0)
EXIT ; -- exit code
"RTN","IBCEP5",141,0)
 K IBFASTXT
"RTN","IBCEP5",142,0)
 D COPYPROV^IBCEP5A(IBINS)
"RTN","IBCEP5",143,0)
 K IBPRV
"RTN","IBCEP5",144,0)
 D CLEAN^VALM10
"RTN","IBCEP5",145,0)
 K ^TMP("IBPRV_",$J),^TMP("IBPRV_SORT",$J),IBINS,IBALL
"RTN","IBCEP5",146,0)
 Q
"RTN","IBCEP5",147,0)
 ;
"RTN","IBCEP5",148,0)
EXPND ; -- expand code
"RTN","IBCEP5",149,0)
 Q
"RTN","IBCEP5",150,0)
 ;
"RTN","IBCEP5",151,0)
SEL(IBDA,MANY) ; Select from provider id list
"RTN","IBCEP5",152,0)
 ; IBDA is passed by reference and IBDA(1) returned containing
"RTN","IBCEP5",153,0)
 ;  ien's of the provider id records selected (file 355.9).
"RTN","IBCEP5",154,0)
 ; If > 1 entry can be selected, MANY is set to 1
"RTN","IBCEP5",155,0)
 N Z
"RTN","IBCEP5",156,0)
 S IBDA=0
"RTN","IBCEP5",157,0)
 D EN^VALM2($G(XQORNOD(0)),$S($G(MANY):"",1:"S"))
"RTN","IBCEP5",158,0)
 S Z=0 F  S Z=$O(VALMY(Z)) Q:'Z  S IBDA=IBDA+1,IBDA(IBDA)=$G(^TMP("IBPRV_",$J,"ZIDX",Z))
"RTN","IBCEP5",159,0)
 Q
"RTN","IBCEP5",160,0)
 ;
"RTN","IBCEP5A")
0^47^B21730261^B24226544
"RTN","IBCEP5A",1,0)
IBCEP5A ;ALB/TMP - EDI UTILITIES for provider ID ;29-SEP-00
"RTN","IBCEP5A",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348**;21-MAR-94;Build 5
"RTN","IBCEP5A",3,0)
 ;
"RTN","IBCEP5A",4,0)
NEW(IBPRV,IBINS) ; Add new prov id
"RTN","IBCEP5A",5,0)
 D FULL^VALM1
"RTN","IBCEP5A",6,0)
 N DIC,DIR,X,Y,DA,DO,DD,DLAYGO,IBQ,IBIEN,IBPRV0,DTOUT,DUOUT,IBIF,IBSIC
"RTN","IBCEP5A",7,0)
 S IBQ=0,IBPRV0=$S(IBPRV'["355.93":"",1:$G(^IBA(355.93,+IBPRV,0)))
"RTN","IBCEP5A",8,0)
 ;
"RTN","IBCEP5A",9,0)
 ; Only 5 secondary providers allowed for lab/facilities
"RTN","IBCEP5A",10,0)
 S IBIF=$P(IBPRV0,U,2)
"RTN","IBCEP5A",11,0)
 S IBSIC=$O(^TMP("IBPRV_",$J,"ZIDX",""),-1)
"RTN","IBCEP5A",12,0)
 I IBIF=1,IBSIC>4 D  G NEWQ
"RTN","IBCEP5A",13,0)
 . S DIR(0)="EA",DIR("A",1)="A maximum of 5 secondary IDs are allowed for a lab/facility.",DIR("A")="PRESS ENTER TO CONTINUE " D ^DIR K DIR W !
"RTN","IBCEP5A",14,0)
 ;
"RTN","IBCEP5A",15,0)
 S DIR(0)="PAr^355.97:AEMQ"
"RTN","IBCEP5A",16,0)
 S DIR("A")="Enter Provider ID Qualifier: "
"RTN","IBCEP5A",17,0)
 S DIR("?")="Enter a Qualifier to indentify the type of ID number you are entering."
"RTN","IBCEP5A",18,0)
 ;
"RTN","IBCEP5A",19,0)
 ;S DIR("S")=$S($G(IBINS):"I ""04""[+$P($G(^(0)),U,2)",1:"I +$P($G(^(1)),U,7)&'$G(^(1))&$S($P(IBPRV0,U,2)'=1:1,1:$P(^(0),U,3)'=""SY"")")
"RTN","IBCEP5A",20,0)
 I $G(IBINS) D
"RTN","IBCEP5A",21,0)
 . I $P(IBPRV0,U,2)=1 S DIR("S")="I $$LFINS^IBCEPU(Y)" Q   ; Lab or Facility ID provided by ins
"RTN","IBCEP5A",22,0)
 . S DIR("S")="I $$RAINS^IBCEPU(Y)" Q   ; Non VA Ind provided by ins
"RTN","IBCEP5A",23,0)
 I '$G(IBINS) D
"RTN","IBCEP5A",24,0)
 . I $P(IBPRV0,U,2)=1 D  Q
"RTN","IBCEP5A",25,0)
 .. I IBPRV["VA(200," S DIR("S")="I $$LFINS^IBCEPU(Y)" Q   ; VA facility own IDS
"RTN","IBCEP5A",26,0)
 .. S DIR("S")="I $$NVALFOWN^IBCEPU(Y)" Q   ; Non -VA facility own
"RTN","IBCEP5A",27,0)
 . S DIR("S")="I $$RAOWN^IBCEPU(Y)"   ; FACILITY/GROUP;PROVIDER'S OWN PERSONAL NUMBER
"RTN","IBCEP5A",28,0)
 ;
"RTN","IBCEP5A",29,0)
 D ^DIR K DIR
"RTN","IBCEP5A",30,0)
 I $D(DTOUT)!$D(DUOUT) S IBQ=1 G NEWQ
"RTN","IBCEP5A",31,0)
 I $P($G(^IBE(355.97,+Y,1)),U,3),IBPRV["355.93" D  G NEWQ
"RTN","IBCEP5A",32,0)
 . K DIE,DR
"RTN","IBCEP5A",33,0)
 . S DIE="^IBA(355.93,",DA=+IBPRV
"RTN","IBCEP5A",34,0)
 . S DR="S Y=""@5"";@1;.07;@5;I $P($G(^IBA(355.93,DA,0)),U,7)'="""" S Y=""@2"";W !!,""YOU MUST HAVE A STATE TO USE LICENSE # AS AN ID!!"",! S Y=""@1"";@2;W !!,""LICENSING STATE: "",$P($G(^DIC(5,+$P($G(^IBA(355.93,DA,0)),U,7),0)),U,2);.12"
"RTN","IBCEP5A",35,0)
 . D ^DIE
"RTN","IBCEP5A",36,0)
 . I '$D(Y) D BLD^IBCEP5
"RTN","IBCEP5A",37,0)
 K IB3559(.06)
"RTN","IBCEP5A",38,0)
 S IB3559(.06)=+Y
"RTN","IBCEP5A",39,0)
 ;
"RTN","IBCEP5A",40,0)
 I $G(IBINS)'="NO",'$G(IBINS),'$P($G(^IBE(355.97,IB3559(.06),1)),U,8) D  G:IBQ NEWQ
"RTN","IBCEP5A",41,0)
 . S DIR(0)="PA^DIC(36,:AEMQ",DIR("A")="Select INSURANCE CO: ",DIR("?")="Select the INSURANCE CO that is furnishing you with the provider ID"
"RTN","IBCEP5A",42,0)
 . D ^DIR K DIR
"RTN","IBCEP5A",43,0)
 . I $D(DTOUT)!$D(DUOUT) S IBQ=1 Q
"RTN","IBCEP5A",44,0)
 . S IBINS=$S(Y>0:+Y,1:"")
"RTN","IBCEP5A",45,0)
 S IB3559(.02)=$S($G(IBINS):IBINS,1:"*ALL*")
"RTN","IBCEP5A",46,0)
 ;
"RTN","IBCEP5A",47,0)
 I '$P($G(^IBE(355.97,IB3559(.06),1)),U,8) D  G:'IBIEN NEWQ
"RTN","IBCEP5A",48,0)
 . S DIC(0)="L",DLAYGO=355.9,DIC="^IBA(355.9,",X=IBPRV
"RTN","IBCEP5A",49,0)
 . S:$G(IBINS) DIC("DR")=".02////"_IBINS
"RTN","IBCEP5A",50,0)
 . D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","IBCEP5A",51,0)
 . I Y'>0!$D(DUOUT)!$D(DTOUT) S IBIEN=0 Q
"RTN","IBCEP5A",52,0)
 . S IBIEN=+Y
"RTN","IBCEP5A",53,0)
 . D NEWID^IBCEP5B(355.9,IB3559(.02),IBPRV,IB3559(.06),IBIEN,1)
"RTN","IBCEP5A",54,0)
 ;
"RTN","IBCEP5A",55,0)
 E  D  ; Provider-specific id stored outside of billing
"RTN","IBCEP5A",56,0)
 . N DIR,X,Y,Z
"RTN","IBCEP5A",57,0)
 . ; State License # is stored in file 200
"RTN","IBCEP5A",58,0)
 . ; DEA# may not be edited in IB
"RTN","IBCEP5A",59,0)
 . S Z=$G(^IBE(355.97,IB3559(.06),1))
"RTN","IBCEP5A",60,0)
 . I +Z D  Q
"RTN","IBCEP5A",61,0)
 .. W ! S DIR(0)="EA",DIR("A",1)="DEA # CANNOT BE EDITED WITHIN THE BILLING SOFTWARE",DIR("A")="PRESS ENTER TO CONTINUE " D ^DIR K DIR W !
"RTN","IBCEP5A",62,0)
 . I $P(Z,U,3) D
"RTN","IBCEP5A",63,0)
 .. D PRVED(+IBPRV)
"RTN","IBCEP5A",64,0)
 D BLD^IBCEP5
"RTN","IBCEP5A",65,0)
NEWQ K VALMBCK
"RTN","IBCEP5A",66,0)
 S VALMBCK="R"
"RTN","IBCEP5A",67,0)
 Q
"RTN","IBCEP5A",68,0)
 ;
"RTN","IBCEP5A",69,0)
DEL1 ; Delete Provider specific ID's
"RTN","IBCEP5A",70,0)
 N IBDA,DA,DIE,DR
"RTN","IBCEP5A",71,0)
 D FULL^VALM1
"RTN","IBCEP5A",72,0)
 D SEL^IBCEP5(.IBDA)
"RTN","IBCEP5A",73,0)
 G:'$O(IBDA(0)) DEL1Q
"RTN","IBCEP5A",74,0)
 S IBDA=+$O(IBDA("")),IBDA=$G(IBDA(IBDA))
"RTN","IBCEP5A",75,0)
 G:'IBDA&($E($P(IBDA,U),1,3)'="LIC") DEL1Q
"RTN","IBCEP5A",76,0)
 I IBDA>0 D DEL^IBCEP5B(355.9,IBDA,""),BLD^IBCEP5
"RTN","IBCEP5A",77,0)
 E  D  ; check for state license
"RTN","IBCEP5A",78,0)
 . Q:$E($P(IBDA,U),1,3)'="LIC"
"RTN","IBCEP5A",79,0)
 . I $P(IBDA,U,2)["IBA(355.93" D
"RTN","IBCEP5A",80,0)
 .. S DA=+$P(IBDA,U,2),DR=".12///@",DIE="^IBA(355.93," D ^DIE
"RTN","IBCEP5A",81,0)
 . E  D
"RTN","IBCEP5A",82,0)
 .. D PRVED(+$P(IBDA,U,2))
"RTN","IBCEP5A",83,0)
 . D BLD^IBCEP5
"RTN","IBCEP5A",84,0)
DEL1Q S VALMBCK="R"
"RTN","IBCEP5A",85,0)
 Q
"RTN","IBCEP5A",86,0)
 ;
"RTN","IBCEP5A",87,0)
CHG1 ; Edit Provider ID's
"RTN","IBCEP5A",88,0)
 N IBDA,DIR,DA,DIE,DR,Z
"RTN","IBCEP5A",89,0)
 D FULL^VALM1
"RTN","IBCEP5A",90,0)
 D SEL^IBCEP5(.IBDA)
"RTN","IBCEP5A",91,0)
 G:'$O(IBDA(0)) CHG1Q
"RTN","IBCEP5A",92,0)
 S IBDA=+$O(IBDA("")),IBDA=$G(IBDA(IBDA))
"RTN","IBCEP5A",93,0)
 I IBDA>0 D
"RTN","IBCEP5A",94,0)
 . D CHG^IBCEP5B(355.9,IBDA),BLD^IBCEP5
"RTN","IBCEP5A",95,0)
 ; check for state license
"RTN","IBCEP5A",96,0)
 E  D
"RTN","IBCEP5A",97,0)
 . Q:$E($P(IBDA,U),1,3)'="LIC"
"RTN","IBCEP5A",98,0)
 . I $P(IBDA,U,2)["IBA(355.93" D
"RTN","IBCEP5A",99,0)
 .. S DA=+$P(IBDA,U,2),DIE="^IBA(355.93,"
"RTN","IBCEP5A",100,0)
 .. S DR="S Y=""@5"";@1;.07;@5;I $P($G(^IBA(355.93,DA,0)),U,7)'="""" S Y=""@2"";W !,""YOU MUST HAVE A STATE TO USE LICENSE # AS AN ID!!"" S Y=""@1"";@2;W !!,""LICENSING STATE: "",$P($G(^DIC(5,+$P($G(^IBA(355.93,DA,0)),U,7),0)),U,2);.12"
"RTN","IBCEP5A",101,0)
 .. D ^DIE
"RTN","IBCEP5A",102,0)
 . E  D
"RTN","IBCEP5A",103,0)
 .. D PRVED(+$P(IBDA,U,2))
"RTN","IBCEP5A",104,0)
 . D BLD^IBCEP5
"RTN","IBCEP5A",105,0)
CHG1Q S VALMBCK="R"
"RTN","IBCEP5A",106,0)
 Q
"RTN","IBCEP5A",107,0)
 ;
"RTN","IBCEP5A",108,0)
PRVED(IBPRV) ; Maintain license #'s for VA provider ien IBPRV
"RTN","IBCEP5A",109,0)
 S IBPRV=IBPRV_";VA(200,"
"RTN","IBCEP5A",110,0)
 D EN^IBCEP5D
"RTN","IBCEP5A",111,0)
 Q
"RTN","IBCEP5A",112,0)
 ;
"RTN","IBCEP5A",113,0)
COPYPROV(IBINS) ; Check if any ID's were edited and this is a parent insurance company
"RTN","IBCEP5A",114,0)
 ; IBINS = IEN into Insurance co file
"RTN","IBCEP5A",115,0)
 ; 
"RTN","IBCEP5A",116,0)
 Q:'$D(^TMP("IB_EDITED_IDS",$J))
"RTN","IBCEP5A",117,0)
 K ^TMP("IB_EDITED_IDS",$J)
"RTN","IBCEP5A",118,0)
 D COPY^IBCEPCID(IBINS)
"RTN","IBCEP5A",119,0)
 Q
"RTN","IBCEP5A",120,0)
 ;
"RTN","IBCEP5A",121,0)
 ; Get the next number so that the edits can be replicated in order for other providers/insurance companies
"RTN","IBCEP5A",122,0)
NEXTONE() ;
"RTN","IBCEP5A",123,0)
 Q $O(^TMP("IB_EDITED_IDS",$J,""),-1)+1
"RTN","IBCEP5B")
0^29^B40601751^B37504139
"RTN","IBCEP5B",1,0)
IBCEP5B ;ALB/TMP - EDI UTILITIES for prov ID ;29-SEP-00
"RTN","IBCEP5B",2,0)
 ;;2.0;INTEGRATED BILLING;**137,239,232,320,348**;21-MAR-94;Build 5
"RTN","IBCEP5B",3,0)
 ;
"RTN","IBCEP5B",4,0)
NEWID(IBFILE,IBINS,IBPRV,IBPTYP,IBIEN,IBF) ; Generic add prov id
"RTN","IBCEP5B",5,0)
 ; at both prov (file 355.9) and ins co levels (355.91)
"RTN","IBCEP5B",6,0)
 ; IBFILE = 355.9 or 355.91 - the file being edited
"RTN","IBCEP5B",7,0)
 ; IBINS = ien of ins co (36) or *ALL* for all ins co
"RTN","IBCEP5B",8,0)
 ; IBPRV = vp ien of billing prov
"RTN","IBCEP5B",9,0)
 ; IBPTYP = ien of prov type (file 355.97)
"RTN","IBCEP5B",10,0)
 ; IBIEN = ien of entry being added (req'd)
"RTN","IBCEP5B",11,0)
 ; IBF = 1 if deleting from ins-related options, "" from prov-related
"RTN","IBCEP5B",12,0)
 N DIC,DIR,X,Y,Z,DA,DR,DIE,DO,DD,DLAYGO,DTOUT,DUOUT,IBQ,IBCUND,IB3559,IB35591,Q,IBDR,IBID,AFT
"RTN","IBCEP5B",13,0)
 S IB35591(.03)="",IBPTYP=$G(IBPTYP)
"RTN","IBCEP5B",14,0)
 F Z=.04,.05,.03 D  G:Z="" NEWQ
"RTN","IBCEP5B",15,0)
 . I $S(Z'=.03:1,1:$S('$G(IBINS):0,1:$G(IBCUND))) D  Q:Z=""
"RTN","IBCEP5B",16,0)
 .. N DA
"RTN","IBCEP5B",17,0)
 .. I Z'=.03 S DIR(0)=IBFILE_","_Z
"RTN","IBCEP5B",18,0)
 .. I Z=.03 D
"RTN","IBCEP5B",19,0)
 ... S DIR(0)="PAO^355.95:AEMQ"
"RTN","IBCEP5B",20,0)
 ... S DIR("S")="I $O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,"_$G(IB3559(.04))_","_$G(IB3559(.05))_","_IBPTYP_",0))!($O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,"_$G(IB3559(.04))_",0,"_IBPTYP_",0)))"
"RTN","IBCEP5B",21,0)
 ... S DIR("S")=DIR("S")_"!($O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,0,"_$G(IB3559(.05))_","_IBPTYP_",0)))!($O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,0,0,"_IBPTYP_",0)))"
"RTN","IBCEP5B",22,0)
 ... S DIR("?",1)="Care unit describes areas of service and is assigned by the payer, if",DIR("?")="  applicable.  Use Care Unit Maintenance to add or modify care units."
"RTN","IBCEP5B",23,0)
 .. ;
"RTN","IBCEP5B",24,0)
 .. I Z=.04,IBPRV["355.93",$$GET1^DIQ(355.93,+IBPRV,.02,"I")=1 D
"RTN","IBCEP5B",25,0)
 ... I $$GET1^DIQ(355.97,IBPTYP,.03,"I")="EI" S $P(DIR(0),U,3)="K:Y'=1 X",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q
"RTN","IBCEP5B",26,0)
 ... I $$GET1^DIQ(355.97,IBPTYP,.03,"I")="TJ" S $P(DIR(0),U,3)="K:Y'=2 X",DIR("?")="Provider ID Qualifier selected only allows professional (CMS-1500) forms" Q
"RTN","IBCEP5B",27,0)
 ... N AFT
"RTN","IBCEP5B",28,0)
 ... S AFT=$$GET1^DIQ(355.97,IBPTYP,.07,"I")  ; get allowable form type for this Provider ID Type
"RTN","IBCEP5B",29,0)
 ... I AFT="B" S $P(DIR(0),U,3)="K:"".0.1.2.""'[("".""_Y_""."") X",DIR("?")="Provider ID Qualifier selected allows institutional, professional or both" Q
"RTN","IBCEP5B",30,0)
 ... I AFT="P" S $P(DIR(0),U,3)="K:Y'=2 X",DIR("?")="Provider ID Qualifier selected only allows professional (CMS-1500) forms" Q
"RTN","IBCEP5B",31,0)
 ... I AFT="I" S $P(DIR(0),U,3)="K:Y'=1 X",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q
"RTN","IBCEP5B",32,0)
 .. ;
"RTN","IBCEP5B",33,0)
 .. S DA=0
"RTN","IBCEP5B",34,0)
 .. I Z=.04,$P($G(^IBE(355.97,+IBPTYP,0)),U,3)="1A" D SETDIR(.DIR)
"RTN","IBCEP5B",35,0)
 .. D ^DIR K DIR
"RTN","IBCEP5B",36,0)
 .. I $D(DTOUT)!$D(DUOUT) S Z="" K IB3559,IB35591 Q
"RTN","IBCEP5B",37,0)
 .. S IB3559(Z)=$S(Z'=.03:$P(Y,U),1:$S($P(Y,U)>0:$P(Y,U),1:"*N/A*"))
"RTN","IBCEP5B",38,0)
 . I Z=.05 D
"RTN","IBCEP5B",39,0)
 .. S IBCUND=$$CAREUN^IBCEP3(IBINS,IBPTYP,IB3559(.04),IB3559(.05),IB3559(.05)=3)
"RTN","IBCEP5B",40,0)
 .. S:'IBCUND!($G(IB3559(.03))=0) IB3559(.03)="*N/A*"
"RTN","IBCEP5B",41,0)
 .. I '$G(IBINS) S IBINS="*ALL*"
"RTN","IBCEP5B",42,0)
 . I Z=.03 D CAREUN^IBCEP5C
"RTN","IBCEP5B",43,0)
 ;
"RTN","IBCEP5B",44,0)
 I $D(IB3559) D
"RTN","IBCEP5B",45,0)
 . N Q,Z2,Z3,Z4,Z5,Z6,IBLAST,IBOK,DIR,Y,X
"RTN","IBCEP5B",46,0)
 . S IBLAST=0
"RTN","IBCEP5B",47,0)
 . D DISP^IBCEP4("Q",IBINS,IBPTYP,IB3559(.04),IB3559(.05),1)
"RTN","IBCEP5B",48,0)
 . W !!,"THE FOLLOWING WAS CHOSEN:"
"RTN","IBCEP5B",49,0)
 . S Q=0 F  S Q=$O(Q(Q)) Q:'Q  W !,?3,Q(Q)
"RTN","IBCEP5B",50,0)
 . I IBCUND W !,?3,"CARE UNIT: "_$$EXPAND^IBTRE(355.96,.01,IB3559(.03))
"RTN","IBCEP5B",51,0)
 . S Z2=IBINS,Z3=IB35591(.03),Z4=IB3559(.04),Z5=IB3559(.05),Z6=IBPTYP
"RTN","IBCEP5B",52,0)
 . S IBOK=1
"RTN","IBCEP5B",53,0)
 . ; If both forms, chk for specific
"RTN","IBCEP5B",54,0)
 . I 'Z4 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_4_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,1,$G(IBFILE)=355.91)
"RTN","IBCEP5B",55,0)
 . ; If specific form, chk for all
"RTN","IBCEP5B",56,0)
 . I IBOK,Z4 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_4_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,0,$G(IBFILE)=355.91)
"RTN","IBCEP5B",57,0)
 . ; If both care types, chk for specific
"RTN","IBCEP5B",58,0)
 . I IBOK,'Z5 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_5_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,1,$G(IBFILE)=355.91)
"RTN","IBCEP5B",59,0)
 . ; If specific care type, chk for all
"RTN","IBCEP5B",60,0)
 . I IBOK,Z5 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_5_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,0,$G(IBFILE)=355.91)
"RTN","IBCEP5B",61,0)
 . I 'IBOK K IB3559,IB35591
"RTN","IBCEP5B",62,0)
 . I IBOK D
"RTN","IBCEP5B",63,0)
 .. S DIR(0)=IBFILE_",.07"
"RTN","IBCEP5B",64,0)
 .. W ! D ^DIR K DIR
"RTN","IBCEP5B",65,0)
 .. S IBID=Y
"RTN","IBCEP5B",66,0)
 .. I $D(DTOUT)!$D(DUOUT) K IB3559,IB35591 S IBOK=0 Q
"RTN","IBCEP5B",67,0)
 .. S IBDR=$S(IBFILE=355.9:$S($G(IBINS):".02////"_IBINS_";",1:""),1:"")_$S($G(IBCUND):".03////"_$S(IB35591(.03):IB35591(.03),1:"*N/A*")_";",1:"")_".04////"_IB3559(.04)_";.05////"_IB3559(.05)_";.06////"_IBPTYP_$S(IBID'="":";.07////"_IBID,1:"")
"RTN","IBCEP5B",68,0)
 .. ;
"RTN","IBCEP5B",69,0)
 .. I $G(IBIEN) D
"RTN","IBCEP5B",70,0)
 ... S DR=IBDR,DA=IBIEN,DIE="^IBA("_IBFILE_","
"RTN","IBCEP5B",71,0)
 ... D ^DIE
"RTN","IBCEP5B",72,0)
 ... I $D(Y) K IB3559,IB35591 S IBOK=0
"RTN","IBCEP5B",73,0)
 ;
"RTN","IBCEP5B",74,0)
NEWQ ;
"RTN","IBCEP5B",75,0)
 I '$D(IB3559),$G(IBIEN) D  Q
"RTN","IBCEP5B",76,0)
 . N DIR,DIK,DA,X,Y
"RTN","IBCEP5B",77,0)
 . S DA=IBIEN,DIK="^IBA("_IBFILE_"," D ^DIK
"RTN","IBCEP5B",78,0)
 . S DIR(0)="EA",DIR("A",1)=$S('$G(IBOK):"",1:"PROBLEM ENCOUNTERED FILING THE RECORD - ")_"RECORD NOT ADDED",DIR("A")="PRESS ENTER to continue " W ! D ^DIR K DIR
"RTN","IBCEP5B",79,0)
 ;
"RTN","IBCEP5B",80,0)
 ; Save this for Copy ID actions
"RTN","IBCEP5B",81,0)
 I $G(IBIEN) D
"RTN","IBCEP5B",82,0)
 . I IBFILE=355.91!(IBFILE=355.9&($P($G(^IBA(IBFILE,IBIEN,0)),U)["VA(200,")) D
"RTN","IBCEP5B",83,0)
 .. N NEXTONE S NEXTONE=$$NEXTONE^IBCEP5A()
"RTN","IBCEP5B",84,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBIEN_U_"ADD"_U_IBFILE
"RTN","IBCEP5B",85,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=$G(^IBA(IBFILE,IBIEN,0))
"RTN","IBCEP5B",86,0)
 Q
"RTN","IBCEP5B",87,0)
 ;
"RTN","IBCEP5B",88,0)
CHG(IBFILE,IBDA) ; Generic call - edit prov id
"RTN","IBCEP5B",89,0)
 ; IBFILE = 355.9 or 355.91 (file being edited)
"RTN","IBCEP5B",90,0)
 ; IBDA = ien in file
"RTN","IBCEP5B",91,0)
 ;
"RTN","IBCEP5B",92,0)
 N DIR,DIE,DA,DR,IBCUCHK,IBOK,IB0,IBOLD,X,Y,Z
"RTN","IBCEP5B",93,0)
 F Z=1:1:3 L +^IBA(IBFILE,IBDA):5 Q:$T  W !,"Attempting to lock record"
"RTN","IBCEP5B",94,0)
 I '$T D  G CHGQ
"RTN","IBCEP5B",95,0)
 . W !,"RECORD LOCKED BY ANOTHER USER - TRY AGAIN LATER"
"RTN","IBCEP5B",96,0)
 . D ENTER(.DIR)
"RTN","IBCEP5B",97,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP5B",98,0)
 S (IB0,IBOLD)=$G(^IBA(IBFILE,IBDA,0))
"RTN","IBCEP5B",99,0)
 G:IB0="" CHGQ
"RTN","IBCEP5B",100,0)
 F Z=.04,.05,.06,.03 S IBOK=$$EDIT(IBFILE,Z,IB0,IBOLD,IBDA,0) S:IBOK="*ALL*" IBOK="" Q:$P(IBOK,U,2)  S $P(IB0,U,Z*100)=$P(IBOK,U)
"RTN","IBCEP5B",101,0)
 I $P(IBOK,U,2) S DIR(0)="EA",DIR("A")="NO CHANGES MADE, PRESS ENTER TO CONTINUE: " W ! D ^DIR K DIR W ! G CHGQ
"RTN","IBCEP5B",102,0)
 S IBOK=$$EDIT(IBFILE,.07,IB0,IBOLD,IBDA,1)
"RTN","IBCEP5B",103,0)
 I '$P(IBOK,U,2) S $P(IB0,U,7)=$P(IBOK,U)
"RTN","IBCEP5B",104,0)
 I $P(IBOK,U,2)!(IB0=IBOLD) S DIR(0)="EA",DIR("A")="NO CHANGES MADE, PRESS ENTER TO CONTINUE: " W ! D ^DIR K DIR W ! G CHGQ
"RTN","IBCEP5B",105,0)
 S IBCUCHK=$$CUCHK^IBCEP5C(IBDA,IB0) G:IBCUCHK CHGQ
"RTN","IBCEP5B",106,0)
 S DR=""
"RTN","IBCEP5B",107,0)
 F Z=2,4:1:7,3 I $P(IB0,U,Z)'=$P(IBOLD,U,Z) S DR=DR_$S(DR'="":";",1:"")_(Z/100)_"///"_$S($P(IB0,U,Z)'="@":"/",1:"")_$P(IB0,U,Z)
"RTN","IBCEP5B",108,0)
 I DR'="" D
"RTN","IBCEP5B",109,0)
 . I IBFILE=355.91!(IBFILE=355.9&($P(IB0,U)["VA(200,")) D
"RTN","IBCEP5B",110,0)
 .. N NEXTONE
"RTN","IBCEP5B",111,0)
 .. S NEXTONE=$$NEXTONE^IBCEP5A()
"RTN","IBCEP5B",112,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"MOD"_U_IBFILE_U_IBDA
"RTN","IBCEP5B",113,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,"OLD0")=IBOLD
"RTN","IBCEP5B",114,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=IB0
"RTN","IBCEP5B",115,0)
 . S DIE="^IBA("_IBFILE_",",DA=IBDA D ^DIE
"RTN","IBCEP5B",116,0)
CHGQ L -^IBA(IBFILE,IBDA)
"RTN","IBCEP5B",117,0)
 Q
"RTN","IBCEP5B",118,0)
 ;
"RTN","IBCEP5B",119,0)
DEL(IBFILE,IBDA,IBF) ; Delete prov specific ID's
"RTN","IBCEP5B",120,0)
 ; IBFILE = 355.9 or 355.91 for the file
"RTN","IBCEP5B",121,0)
 ; IBDA = ien of entry in file IBFILE
"RTN","IBCEP5B",122,0)
 ; IBF = 1 if deleting from ins co-related options, ""
"RTN","IBCEP5B",123,0)
 ;       from prov-related options
"RTN","IBCEP5B",124,0)
 D DEL^IBCEP5C(IBFILE,IBDA,$G(IBF))
"RTN","IBCEP5B",125,0)
 Q
"RTN","IBCEP5B",126,0)
 ;
"RTN","IBCEP5B",127,0)
EDIT(IBFILE,IBFLD,IB0,IBOLD,IBIEN,IBCK1) ; Generic edit flds
"RTN","IBCEP5B",128,0)
 Q $$EDIT^IBCEP5D($G(IBFILE),$G(IBFLD),$G(IB0),$G(IBOLD),$G(IBIEN),$G(IBCK1))
"RTN","IBCEP5B",129,0)
 ;
"RTN","IBCEP5B",130,0)
SETDIR(DIR) ; Sets dir for BLUE CROSS only UB92 form type
"RTN","IBCEP5B",131,0)
 S DIR("B")="UB92",$P(DIR(0),U,3)="K:Y'=1 X",DIR("?")="ONLY UB92 FORM TYPE IS VALID FOR BLUE CROSS ID"
"RTN","IBCEP5B",132,0)
 Q
"RTN","IBCEP5B",133,0)
 ;
"RTN","IBCEP5B",134,0)
ENTER(DIR) ;
"RTN","IBCEP5B",135,0)
 S DIR(0)="EA",DIR("A")="PRESS ENTER TO CONTINUE: "
"RTN","IBCEP5B",136,0)
 Q
"RTN","IBCEP5C")
0^30^B43594569^B43626685
"RTN","IBCEP5C",1,0)
IBCEP5C ;ALB/TMP - EDI UTILITIES for provider ID ;02-NOV-00
"RTN","IBCEP5C",2,0)
 ;;2.0;INTEGRATED BILLING;**137,239,232,320,348**;21-MAR-94;Build 5
"RTN","IBCEP5C",3,0)
 ;
"RTN","IBCEP5C",4,0)
COMBOK(IBFILE,IBDAT,IBALL,IBF) ; Generic ask if conflict, should id rec still
"RTN","IBCEP5C",5,0)
 ;  be added?
"RTN","IBCEP5C",6,0)
 ; IBFILE = 355.9 or 355.91 for the file being edited
"RTN","IBCEP5C",7,0)
 ; IBDAT = var ptr prov ien (355.9) ^ pc to check ^
"RTN","IBCEP5C",8,0)
 ;           ins co ien or *ALL* ^ care unit or *N/A* ^
"RTN","IBCEP5C",9,0)
 ;           form type code ^ care type code ^ prov id type ptr
"RTN","IBCEP5C",10,0)
 ; IBALL = flag:
"RTN","IBCEP5C",11,0)
 ;   0 = Individual entry selected - check for existing ALL entry
"RTN","IBCEP5C",12,0)
 ;   1 = 'ALL' selected - check for existing individual ones
"RTN","IBCEP5C",13,0)
 ; IBF = 1 if deleting from ins co-related options, ""
"RTN","IBCEP5C",14,0)
 ;       from provider-related options
"RTN","IBCEP5C",15,0)
 ; Returns 1 if ok to continue, 0 if not
"RTN","IBCEP5C",16,0)
 ;
"RTN","IBCEP5C",17,0)
 N X,Y,Q,DIR,Z,IBD,IBDD,IBOK,IBSPEC
"RTN","IBCEP5C",18,0)
 S IBALL=$G(IBALL),IBOK=1
"RTN","IBCEP5C",19,0)
 S IBD=+$P(IBDAT,U,2),IBDD=$S(IBD=4:5,1:4)
"RTN","IBCEP5C",20,0)
 F Z=2:1:6 D
"RTN","IBCEP5C",21,0)
 . I IBD'=Z,$P(IBDAT,U,Z+1)'="" S Z(Z)=$P(IBDAT,U,Z+1) Q
"RTN","IBCEP5C",22,0)
 . I IBD=Z S IBD(Z)=$P(IBDAT,U,Z+1)
"RTN","IBCEP5C",23,0)
 K IBSPEC
"RTN","IBCEP5C",24,0)
 I IBALL D  ; Check for specific
"RTN","IBCEP5C",25,0)
 . N X0,X1
"RTN","IBCEP5C",26,0)
 . S X1=0
"RTN","IBCEP5C",27,0)
 . F  S X1=$O(^IBA(IBFILE,"AC",$S(IBFILE=355.9:Z(6),1:Z(2)),$S(IBFILE=355.9:Z(2),1:Z(6)),$S(IBFILE=355.9:$P(IBDAT,U),1:Z(3)),X1)) Q:'X1  S X0=$G(^IBA(IBFILE,X1,0)) I $S(IBFILE=355.9:$P(X0,U,3)=Z(3),1:1) D
"RTN","IBCEP5C",28,0)
 .. I $P(X0,U,IBD)'=IBD(IBD),"12"[$P(X0,U,IBD),($P(X0,U,IBDD)=Z(IBDD)!($P(X0,U,IBDD)=0)!(Z(IBDD)=0&(IBD(IBD)=0))) S X1($P(X0,U,IBD))=X1 Q
"RTN","IBCEP5C",29,0)
 .. I IBD(IBD)=0,Z(IBDD)=0 S X1(0)=X1
"RTN","IBCEP5C",30,0)
 . S X0=0 F  S X0=$O(X1(X0)) Q:X0=""  D
"RTN","IBCEP5C",31,0)
 .. S IBSPEC=$S($G(IBSPEC)'="":IBSPEC_"  ",1:"")_$P($S(IBD=4:"UB92^CMS-1500",1:"INPT^OUTPT"),U,X0)_" ONLY"
"RTN","IBCEP5C",32,0)
 . I $D(X1(0)) S IBSPEC=$S($G(IBSPEC)'="":IBSPEC_"  ",1:"")_$S(IBD=4:"BOTH UB92 and CMS-1500 form type  AND  BOTH INPT and OUTPT care type",1:"BOTH INPT and OUTPT care type  AND  BOTH UB92 and CMS-1500 form type")
"RTN","IBCEP5C",33,0)
 . ;
"RTN","IBCEP5C",34,0)
 I 'IBALL D
"RTN","IBCEP5C",35,0)
 . N X0,X1
"RTN","IBCEP5C",36,0)
 . S X1=0
"RTN","IBCEP5C",37,0)
 . F  S X1=$O(^IBA(IBFILE,"AC",$S(IBFILE=355.9:Z(6),1:Z(2)),$S(IBFILE=355.9:Z(2),1:Z(6)),$S(IBFILE=355.9:$P(IBDAT,U),1:Z(3)),X1)) Q:'X1  D
"RTN","IBCEP5C",38,0)
 .. S X0=$G(^IBA(IBFILE,X1,0))
"RTN","IBCEP5C",39,0)
 .. I $S(IBFILE=355.9:$P(X0,U,16)=Z(3),1:1),$P(X0,U,IBD)=0,$S($P(X0,U,IBDD)=Z(IBDD):1,1:$P(X0,U,IBDD)=0) S IBSPEC=""
"RTN","IBCEP5C",40,0)
 ;
"RTN","IBCEP5C",41,0)
 I $D(IBSPEC) D
"RTN","IBCEP5C",42,0)
 . N X0,X1,TEXT,IBWHAT
"RTN","IBCEP5C",43,0)
 . S IBWHAT=$S(IBFILE=355.9:$S($G(IBF):"INS CO AND PROVIDER",1:"PROVIDER"),1:"INSURANCE CO")
"RTN","IBCEP5C",44,0)
 . S X0=$S($D(IBD(4)):"UB-92^CMS-1500",1:"INPT^OUTPT")
"RTN","IBCEP5C",45,0)
 . S X1=$S($D(IBD(4)):"FORM TYPE",1:"CARE TYPE")
"RTN","IBCEP5C",46,0)
 . S DIR(0)="YA"
"RTN","IBCEP5C",47,0)
 . S TEXT(1)="WARNING ... POTENTIAL CONFLICT DETECTED!!"
"RTN","IBCEP5C",48,0)
 . S TEXT(2)=" YOUR NEW COMBINATION APPLIES TO "_$S(IBALL:"BOTH "_$S(IBD=4:"FORM ",1:"INPT AND OUTPT CARE ")_"TYPES",1:"ONLY "_$P(X0,U,IBD(IBD))_" "_X1)
"RTN","IBCEP5C",49,0)
 . S TEXT(3)=" THIS SAME COMBINATION ALREADY EXISTS FOR THE "_IBWHAT_" & "_$S('IBALL:"ALL "_X1_"S",1:"SPECIFIC "_X1_"(S):")
"RTN","IBCEP5C",50,0)
 . S:IBSPEC'="" TEXT(4)=$J("",4)_IBSPEC
"RTN","IBCEP5C",51,0)
 . S TEXT($S($D(TEXT(4)):5,1:4))=" "
"RTN","IBCEP5C",52,0)
 . S DIR("A")="ARE YOU SURE YOU STILL WANT TO ADD THIS RECORD?: "
"RTN","IBCEP5C",53,0)
 . S DIR("?",1)=" "
"RTN","IBCEP5C",54,0)
 . S DIR("?",2)="This combination appears to be conflicting with one(s) already on file."
"RTN","IBCEP5C",55,0)
 . S DIR("?",3)="It has already been defined for the "_$$LOW^XLFSTR(IBWHAT)_" for "_$S(IBALL:"at least 1 specific ",1:"ALL ")_$S(IBD=4:"form",1:"care")_" type"_$S(IBALL:".",1:"s.")
"RTN","IBCEP5C",56,0)
 . S DIR("?")="Respond NO to reject this conflicting record or YES to continue on to add it in spite of the apparent conflict.",DIR("B")="NO"
"RTN","IBCEP5C",57,0)
 . W !! F Q=1:1 Q:'$D(TEXT(Q))  W TEXT(Q),!
"RTN","IBCEP5C",58,0)
 . D ^DIR K DIR W !
"RTN","IBCEP5C",59,0)
 . S IBOK=(Y=1)
"RTN","IBCEP5C",60,0)
 Q IBOK
"RTN","IBCEP5C",61,0)
 ;
"RTN","IBCEP5C",62,0)
CAREUN ;Called from NEWID^IBCEP5B to check for existing record combination
"RTN","IBCEP5C",63,0)
 N DIR
"RTN","IBCEP5C",64,0)
 I IBFILE'=355.9 D
"RTN","IBCEP5C",65,0)
 . S IB35591(.03)=IB3559(.03)
"RTN","IBCEP5C",66,0)
 . I "0"[IB35591(.03) S IB35591(.03)="*N/A*"
"RTN","IBCEP5C",67,0)
 . I IB35591(.03)'="*N/A*" S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",68,0)
 .. S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),0,IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",69,0)
 ... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",70,0)
 .... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,0,IBPTYP,""))
"RTN","IBCEP5C",71,0)
 . I $D(^IBA(355.91,"AUNIQ",IBINS,IB35591(.03),IB3559(.04),IB3559(.05),IBPTYP)) D  Q
"RTN","IBCEP5C",72,0)
 .. S DIR(0)="EA",DIR("A",1)="This record already exists - NOT ADDED",DIR("A")="PRESS the ENTER key to continue" W ! D ^DIR K DIR,IB3559,IB35591 W !
"RTN","IBCEP5C",73,0)
 I IBFILE=355.9 D
"RTN","IBCEP5C",74,0)
 . S IB35591(.03)=IB3559(.03)
"RTN","IBCEP5C",75,0)
 . I "0"[IB35591(.03) S IB35591(.03)="*N/A*"
"RTN","IBCEP5C",76,0)
 . I IB35591(.03)'="*N/A*" S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",77,0)
 .. S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),0,IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",78,0)
 ... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",79,0)
 .... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,0,IBPTYP,""))
"RTN","IBCEP5C",80,0)
 . I $D(^IBA(355.9,"AUNIQ",IBPRV,IBINS,IB35591(.03),IB3559(.04),IB3559(.05),IBPTYP)) D  Q
"RTN","IBCEP5C",81,0)
 .. S DIR(0)="EA",DIR("A",1)="This record already exists - NOT ADDED",DIR("A")="PRESS the ENTER key to continue" W ! D ^DIR K DIR,IB3559,IB35591 W !
"RTN","IBCEP5C",82,0)
 Q
"RTN","IBCEP5C",83,0)
 ;
"RTN","IBCEP5C",84,0)
DEL(IBFILE,IBDA,IBF) ; Delete prov specific ID's
"RTN","IBCEP5C",85,0)
 ; IBFILE = 355.9 or 355.91 for the file
"RTN","IBCEP5C",86,0)
 ; IBDA = ien of entry in file IBFILE
"RTN","IBCEP5C",87,0)
 ; IBF = 1 if deleting from ins co-related options, ""
"RTN","IBCEP5C",88,0)
 ;       from prov-related options
"RTN","IBCEP5C",89,0)
 N IB0,IBLAST,IBX,DIK,DA,DIR,X,Y,Z
"RTN","IBCEP5C",90,0)
 F Z=1:1:3 L +^IBA(IBFILE,IBDA):5 Q:$T
"RTN","IBCEP5C",91,0)
 I '$T D  G DELQ
"RTN","IBCEP5C",92,0)
 . W !,"RECORD IS LOCKED BY ANOTHER USER - TRY AGAIN LATER"
"RTN","IBCEP5C",93,0)
 . D ENTER^IBCEP5B(.DIR)
"RTN","IBCEP5C",94,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP5C",95,0)
 S IB0=$G(^IBA(IBFILE,IBDA,0))
"RTN","IBCEP5C",96,0)
 S IBX=0
"RTN","IBCEP5C",97,0)
 S IBX=IBX+1,DIR("A",IBX)=" PROVIDER: "_$S(IBFILE=355.9:$$EXPAND^IBTRE(355.9,.01,$P(IB0,U)),1:"*ALL*")
"RTN","IBCEP5C",98,0)
 D DISP^IBCEP4("DIR(""A"")",$P(IB0,U,$S(IBFILE=355.9:2,1:1)),$P(IB0,U,6),$P(IB0,U,4),$P(IB0,U,5),IBX+1,.IBLAST)
"RTN","IBCEP5C",99,0)
 I $P(IB0,U,3)'="" S DIR("A",IBLAST+1)="CARE UNIT: "_$$EXPAND^IBTRE(355.91,.03,$P(IB0,U,3))
"RTN","IBCEP5C",100,0)
 S DIR("A",IBLAST+2)="  PROV ID: "_$P(IB0,U,7),DIR("A",IBLAST+3)=" "
"RTN","IBCEP5C",101,0)
 S DIR("A")="OK TO DELETE THIS "_$S($G(IBF):"INSURANCE COMPANY ",1:"")_"PROVIDER ID RECORD?: ",DIR("B")="NO"
"RTN","IBCEP5C",102,0)
 S DIR(0)="YA"
"RTN","IBCEP5C",103,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP5C",104,0)
 I Y'=1 G DELQ
"RTN","IBCEP5C",105,0)
 I IBDA>0 D
"RTN","IBCEP5C",106,0)
 . I IBFILE=355.91!(IBFILE=355.9&($P($G(^IBA(IBFILE,IBDA,0)),U)["VA(200,")) D
"RTN","IBCEP5C",107,0)
 .. N NEXTONE S NEXTONE=$$NEXTONE^IBCEP5A()
"RTN","IBCEP5C",108,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"DEL"_U_IBFILE_U_IBDA
"RTN","IBCEP5C",109,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=$G(^IBA(IBFILE,IBDA,0))
"RTN","IBCEP5C",110,0)
 . S DA=IBDA,DIK="^IBA("_IBFILE_"," D ^DIK
"RTN","IBCEP5C",111,0)
DELQ L -^IBA(IBFILE,IBDA)
"RTN","IBCEP5C",112,0)
 Q
"RTN","IBCEP5C",113,0)
 ;
"RTN","IBCEP5C",114,0)
CUCHK(IBDA,IB0) ;Called from CHG^IBCEP5B to check for existing combination
"RTN","IBCEP5C",115,0)
 ; during edit 
"RTN","IBCEP5C",116,0)
 ; IBDA = the ien of the record being edited
"RTN","IBCEP5C",117,0)
 ; IB0 = Proposed changed 0 node of the entry in the file
"RTN","IBCEP5C",118,0)
 ; FUNCTION RETURNS 0 if no duplicate found, 1 if record already exists
"RTN","IBCEP5C",119,0)
 N Z,IBCUCHK,DIR,X,Y
"RTN","IBCEP5C",120,0)
 S IBCUCHK=0
"RTN","IBCEP5C",121,0)
 I IBFILE=355.91 S Z=+$O(^IBA(355.91,"AUNIQ",$P(IB0,U,1),$S($P(IB0,U,3)="@":"*N/A*",$P(IB0,U,3):$P(IB0,U,3),1:$P(IB0,U,10)),$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),0)) I Z,Z'=IBDA S IBCUCHK=1
"RTN","IBCEP5C",122,0)
 I IBFILE=355.9 D
"RTN","IBCEP5C",123,0)
 . N X,X1
"RTN","IBCEP5C",124,0)
 . S X=$S($P(IB0,U,2):$P(IB0,U,2),1:$P(IB0,U,15)) S:X="" X="*ALL*"
"RTN","IBCEP5C",125,0)
 . S X1=$S($P(IB0,U,3):$P(IB0,U,3),$P(IB0,U,3)="@":"",1:$P(IB0,U,16)) S:X1="" X1="*N/A*"
"RTN","IBCEP5C",126,0)
 . S Z=+$O(^IBA(355.9,"AUNIQ",$P(IB0,U,1),X,X1,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),0)) I Z,Z'=IBDA S IBCUCHK=1
"RTN","IBCEP5C",127,0)
 I IBCUCHK D
"RTN","IBCEP5C",128,0)
 . S DIR(0)="EA",DIR("A",1)="This combination already exists - RECORD NOT CHANGED",DIR("A")="PRESS the ENTER key to continue" W ! D ^DIR K DIR W !
"RTN","IBCEP5C",129,0)
 Q IBCUCHK
"RTN","IBCEP5C",130,0)
 ;
"RTN","IBCEP5D")
0^31^B62434014^B55561747
"RTN","IBCEP5D",1,0)
IBCEP5D ;ALB/JEH - EDI UTILITIES - for State License ;29-MAR-01
"RTN","IBCEP5D",2,0)
 ;;2.0;INTEGRATED BILLING;**137,320,348**;21-MAR-94;Build 5
"RTN","IBCEP5D",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEP5D",4,0)
 ;
"RTN","IBCEP5D",5,0)
 ; STATE LICENSE # ADD/EDIT DBIA ==> DBIA 224
"RTN","IBCEP5D",6,0)
EN ;Add/edit state and license number
"RTN","IBCEP5D",7,0)
 N IBDA,DIR,DIC,DD,DA,DR,IBSTAT,IBLIC,IBQ,Y
"RTN","IBCEP5D",8,0)
 D FULL^VALM1
"RTN","IBCEP5D",9,0)
 I '$G(IBPRV) D  G:IBQ STATQ
"RTN","IBCEP5D",10,0)
 . S IBQ=0
"RTN","IBCEP5D",11,0)
 . S DIC="^VA(200,",DIC(0)="AEMQ",DIC("A")="Select VA Provider: " D ^DIC K DIC
"RTN","IBCEP5D",12,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y<0) S IBQ=1 Q
"RTN","IBCEP5D",13,0)
 . S IBDA=+Y
"RTN","IBCEP5D",14,0)
 I $G(IBPRV)["VA" S IBDA=+IBPRV
"RTN","IBCEP5D",15,0)
 I $G(IBPRV),$G(IBPRV)'["VA" D  G STATQ
"RTN","IBCEP5D",16,0)
 . S DIR("A",1)="You have selected a Non-VA provider"
"RTN","IBCEP5D",17,0)
 . S DIR("A",2)="State license # can only be entered for VA providers"
"RTN","IBCEP5D",18,0)
 . S DIR("A",3)=""
"RTN","IBCEP5D",19,0)
 . S DIR("A")="Press enter to continue"
"RTN","IBCEP5D",20,0)
 . S DIR(0)="EA" W ! D ^DIR K DIR W !
"RTN","IBCEP5D",21,0)
STALIC ;Add/edit file 200 field 54.1 multiple,state(.01) and license#(1) - DBIA 224
"RTN","IBCEP5D",22,0)
 ;
"RTN","IBCEP5D",23,0)
 S DA(1)=IBDA,DIC="^VA(200,"_DA(1)_",""PS1"",",DIC(0)="QEAL"
"RTN","IBCEP5D",24,0)
 D ^DIC I Y=-1 K DIC,DA G STATQ
"RTN","IBCEP5D",25,0)
 F Z=1:1:3 L +^VA(200,IBDA):5 Q:$T
"RTN","IBCEP5D",26,0)
 I '$T D  G STATQ
"RTN","IBCEP5D",27,0)
 . W !,"Another user is editing this entry.  Try again later"
"RTN","IBCEP5D",28,0)
 . S DIR(0)="EA",DIR("A")="Press enter to continue"
"RTN","IBCEP5D",29,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP5D",30,0)
 S DIE=DIC K DIC S DA=+Y,DR=".01;1"
"RTN","IBCEP5D",31,0)
 D ^DIE K DIE,DR,DA,Y
"RTN","IBCEP5D",32,0)
 L -^VA(200,IBDA)
"RTN","IBCEP5D",33,0)
STATQ ;
"RTN","IBCEP5D",34,0)
 S VALMBCK="R"
"RTN","IBCEP5D",35,0)
 Q
"RTN","IBCEP5D",36,0)
 ;
"RTN","IBCEP5D",37,0)
GETLIC(IBPRV) ; Get license # for provider in file 200 IBPRV
"RTN","IBCEP5D",38,0)
 ; Pass IBPRV by reference to retrieve #'s by state
"RTN","IBCEP5D",39,0)
 ; IBPRV(state ien)=id
"RTN","IBCEP5D",40,0)
 ; Returns 0 if no license # found
"RTN","IBCEP5D",41,0)
 N Z
"RTN","IBCEP5D",42,0)
 S Z=0 F  S Z=$O(^VA(200,IBPRV,"PS1",Z)) Q:'Z  S Z0=$G(^(Z,0)) I $P(Z0,U,2)'="" S IBPRV(+Z0)=$P(Z0,U,2)
"RTN","IBCEP5D",43,0)
 Q +$O(IBPRV(0))
"RTN","IBCEP5D",44,0)
 ;
"RTN","IBCEP5D",45,0)
EDIT(IBFILE,IBFLD,IB0,IBOLD,IBIEN,IBCK1) ; Generic edit flds
"RTN","IBCEP5D",46,0)
 N DIR,Y,X,IB,IB1,IBCUVAL,IBCUY,IBFLD0,IBNEW,IBPRV,IBVAL,IBIVAL,IBINS,IBCUCHK,IBOK,DUOUT,DTOUT
"RTN","IBCEP5D",47,0)
 I IBFILE=355.91,IBFLD=.02 S IBNEW="" G EDITQ ; No .02 in file 355.91
"RTN","IBCEP5D",48,0)
 S IBCUCHK=1,IBCUVAL=""
"RTN","IBCEP5D",49,0)
 S IBFLD0=IBFLD*100,IBPRV=$S(IBFILE=355.9:$P(IB0,U),1:""),IBNEW=""
"RTN","IBCEP5D",50,0)
 S IBPRV0=$S(IBPRV'["355.93":"",1:$G(^IBA(355.93,+IBPRV,0)))
"RTN","IBCEP5D",51,0)
 S IBINS=$P(IB0,U,$S(IBFILE=355.9:2,1:1))
"RTN","IBCEP5D",52,0)
 I IBFLD'=.03 S IBVAL=$$EXPAND^IBTRE(IBFILE,IBFLD,$P(IB0,U,IBFLD0)),IBIVAL=$P(IB0,U,IBFLD0)
"RTN","IBCEP5D",53,0)
 I IBFLD=.03,$S('IBINS:1,1:'$$CAREUN^IBCEP3(IBINS,$P(IB0,U,6),$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,5)=3)) S:$P(IB0,U,3) IBNEW="@" G EDITQ
"RTN","IBCEP5D",54,0)
 I IBFLD=.03 S IBVAL=$P($G(^IBA(355.95,+$G(^IBA(355.96,+$P(IB0,U,3),0)),0)),U),IBIVAL=$P(IB0,U,3) D
"RTN","IBCEP5D",55,0)
 . S IBCUCHK=0,IBCUVAL=$P($G(^IBA(355.96,+IBIVAL,0)),U,1) I IBCUVAL="" Q
"RTN","IBCEP5D",56,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),"")) S IBCUCHK=1 Q
"RTN","IBCEP5D",57,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),0,$P(IB0,U,6),""))  S IBCUCHK=1 Q
"RTN","IBCEP5D",58,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,$P(IB0,U,5),$P(IB0,U,6),"")) S IBCUCHK=1 Q
"RTN","IBCEP5D",59,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,0,$P(IB0,U,6),"")) S IBCUCHK=1 Q
"RTN","IBCEP5D",60,0)
 . S IBIVAL="@"
"RTN","IBCEP5D",61,0)
 ;
"RTN","IBCEP5D",62,0)
 I IBFLD'=.02 D
"RTN","IBCEP5D",63,0)
 . N DA
"RTN","IBCEP5D",64,0)
 . S DIR(0)=$S(IBFLD'=.03:IBFILE_","_IBFLD_"AO",1:"PAO^355.95:AEMQ")
"RTN","IBCEP5D",65,0)
 . I IBFLD=.03 D  Q:$P(IB0,U,4)=""!($P(IB0,U,5)="")!($P(IB0,U,6)="")
"RTN","IBCEP5D",66,0)
 .. S DIR("A")="CARE UNIT: "
"RTN","IBCEP5D",67,0)
 .. S DIR("S")="I $D(^IBA(355.96,""AUNIQ"",IBINS,Y,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6)))!($D(^IBA(355.96,""AUNIQ"",IBINS,Y,$P(IB0,U,4),0,$P(IB0,U,6))))"
"RTN","IBCEP5D",68,0)
 .. S DIR("S")=DIR("S")_"!($D(^IBA(355.96,""AUNIQ"",IBINS,Y,0,$P(IB0,U,5),$P(IB0,U,6))))!($D(^IBA(355.96,""AUNIQ"",IBINS,Y,0,0,$P(IB0,U,6))))"
"RTN","IBCEP5D",69,0)
 . I IBFLD'=.03 S DIR("A")=$$GET1^DID(IBFILE,IBFLD,,"LABEL")_": "
"RTN","IBCEP5D",70,0)
 . S:IBVAL'=""&(IBCUCHK) DIR("A")=DIR("A")_IBVAL_"// "
"RTN","IBCEP5D",71,0)
 .; If field .04, Set DIR(0)[3] up to make sure the form type selected is allowed for this ID type.
"RTN","IBCEP5D",72,0)
 . I Z=.04,IBPRV["355.93",$$GET1^DIQ(355.93,+IBPRV,.02,"I")=1 D
"RTN","IBCEP5D",73,0)
 .. I $$GET1^DIQ(355.97,$P(IB0,U,6),.03,"I")="EI" S $P(DIR(0),U,3)="K:Y'=1 X",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q
"RTN","IBCEP5D",74,0)
 .. I $$GET1^DIQ(355.97,$P(IB0,U,6),.03,"I")="TJ" S $P(DIR(0),U,3)="K:Y'=2 X",DIR("?")="Provider ID Qualifier selected only allows professional (CMS-1500) forms" Q
"RTN","IBCEP5D",75,0)
 .. N AFT
"RTN","IBCEP5D",76,0)
 .. S AFT=$$GET1^DIQ(355.97,$P(IB0,U,6),.07,"I")  ; get allowable form type for this Provider ID Type
"RTN","IBCEP5D",77,0)
 .. I AFT="B" S $P(DIR(0),U,3)="K:"".0.1.2.""'[("".""_X_""."") X",DIR("?")="Provider ID Qualifier selected allows institutional, professional or both" Q   ; allow proff, inst, or both
"RTN","IBCEP5D",78,0)
 .. I AFT="I" S $P(DIR(0),U,3)="K:X'=1 X",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q  ; allow institutional
"RTN","IBCEP5D",79,0)
 .. I AFT="P" S $P(DIR(0),U,3)="K:X'=2 X",DIR("?")="Provider ID Qualifier selected only allows professional (CMS-1500) forms" Q  ; allow professional
"RTN","IBCEP5D",80,0)
 . ;
"RTN","IBCEP5D",81,0)
 . ; field .06 (ID qualifier)
"RTN","IBCEP5D",82,0)
 . I Z=.06 D   ;,IBPRV["355.93" D
"RTN","IBCEP5D",83,0)
 .. S DIR(0)="PAOr^355.97:AEMQ"
"RTN","IBCEP5D",84,0)
 .. S DIR("?")="Enter a Qualifier to indentify the type of ID number you are entering."
"RTN","IBCEP5D",85,0)
 .. N TAG
"RTN","IBCEP5D",86,0)
 .. S TAG=$S($G(IBSLEV)=1&($$GET1^DIQ(355.93,+IBPRV,.02,"I")=1):"NVALFOWN",$G(IBSLEV)=1:"RAOWN",$$GET1^DIQ(355.93,+IBPRV,.02,"I")=1:"LFINS",1:"RAINS")
"RTN","IBCEP5D",87,0)
 .. N AFT
"RTN","IBCEP5D",88,0)
 .. S AFT=$S($P(IB0,U,4)]"":$P(IB0,U,4),1:$P(IBOLD,U,4))
"RTN","IBCEP5D",89,0)
 .. D
"RTN","IBCEP5D",90,0)
 ... I AFT=1 S DIR("S")="I $$"_TAG_"^IBCEPU(Y),$$GET1^DIQ(355.97,+Y,.07,""I"")'=""P""",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q
"RTN","IBCEP5D",91,0)
 ... I AFT=2 S DIR("S")="I $$"_TAG_"^IBCEPU(Y),$$GET1^DIQ(355.97,+Y,.07,""I"")'=""I""",DIR("?")="Provider ID Qualifier selected only allows professional (CMS-1500) forms" Q
"RTN","IBCEP5D",92,0)
 ... S DIR("S")="I $$"_TAG_"^IBCEPU(Y)"
"RTN","IBCEP5D",93,0)
 .. I $$GET1^DIQ(355.93,+IBPRV,.02,"I")=1 D
"RTN","IBCEP5D",94,0)
 ... I AFT=1 S DIR("S")=DIR("S")_",$$GET1^DIQ(355.97,+Y,.03)'=""TJ""" Q
"RTN","IBCEP5D",95,0)
 ... I AFT=2 S DIR("S")=DIR("S")_",$$GET1^DIQ(355.97,+Y,.03)'=""EI""" Q
"RTN","IBCEP5D",96,0)
 ... I 'AFT S DIR("S")=DIR("S")_","".EI.TJ.""'[("".""_$$GET1^DIQ(355.97,+Y,.03)_""."")" Q
"RTN","IBCEP5D",97,0)
 . ;
"RTN","IBCEP5D",98,0)
 . S DA=0
"RTN","IBCEP5D",99,0)
 . F  D ^DIR S IBOK=0 D  Q:IBOK
"RTN","IBCEP5D",100,0)
 .. I $D(DUOUT)!$D(DTOUT) S IBOK=1 Q
"RTN","IBCEP5D",101,0)
 .. I X="",$P(IB0,U,(IBFLD*100))'="" S (X,Y)=$P(IB0,U,(IBFLD*100))
"RTN","IBCEP5D",102,0)
 .. I IBFLD=.06,$P(IB0,U,4)'=1,$P($G(^IBE(355.97,$S(+Y:+Y,1:+$P(IB0,U,6)),0)),U,3)="1A" W !,"BLUE CROSS IS ONLY ALLOWED FOR UB92 ONLY" Q
"RTN","IBCEP5D",103,0)
 .. S IBOK=1
"RTN","IBCEP5D",104,0)
 . K DIR
"RTN","IBCEP5D",105,0)
 . I IBFLD=.03,'$D(DTOUT),'$D(DUOUT) D  S Y=IBCUY
"RTN","IBCEP5D",106,0)
 .. S IBCUVAL=+$G(^IBA(355.96,+Y,0))
"RTN","IBCEP5D",107,0)
 .. S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),0))
"RTN","IBCEP5D",108,0)
 .. I 'IBCUY S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),0,$P(IB0,U,6),0))
"RTN","IBCEP5D",109,0)
 .. I 'IBCUY S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,$P(IB0,U,5),$P(IB0,U,6),0))
"RTN","IBCEP5D",110,0)
 .. I 'IBCUY S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,0,$P(IB0,U,6),0))
"RTN","IBCEP5D",111,0)
 .. I 'IBCUY S IBCUY="@"
"RTN","IBCEP5D",112,0)
 . I IBIVAL'="",IBCUCHK,($P(Y,U)=IBIVAL!(X="")) S IBNEW=IBIVAL Q
"RTN","IBCEP5D",113,0)
 . I 'IBCUCHK,X="" S IBNEW=IBIVAL Q
"RTN","IBCEP5D",114,0)
 . I X'="@",($S(X="":IBIVAL'="",1:0)!$D(DTOUT)!$D(DUOUT)) S IBNEW="^1" Q
"RTN","IBCEP5D",115,0)
 . S IBNEW=$S(X'="@":$P(Y,U),1:X)
"RTN","IBCEP5D",116,0)
 . I IBFLD=.03,X="" S IBNEW="" ; No care unit selected
"RTN","IBCEP5D",117,0)
 I IBFLD=.02 D  ; Only file 355.9
"RTN","IBCEP5D",118,0)
 . N DIR,X,Y,DIC,DA,IBIT
"RTN","IBCEP5D",119,0)
 . S IBIT=$$GET1^DID(355.9,.02,,"INPUT TRANSFORM")
"RTN","IBCEP5D",120,0)
 . S DIR(0)="FAO^1:30"
"RTN","IBCEP5D",121,0)
 . S DIR("A")="INSURANCE CO: "_$S(IBVAL'="":IBVAL_"// ",1:" "),DIR("?")="^N IBHELP,Z D HELP^DIE(355.9,,.02,""A"",""IBHELP"") S Z=0 F  S Z=$O(IBHELP(""DIHELP"",Z)) Q:'Z  W !,IBHELP(""DIHELP"",Z)"
"RTN","IBCEP5D",122,0)
 . F  W ! D ^DIR D  I IBNEW'="" K DIR Q
"RTN","IBCEP5D",123,0)
 .. I $D(DTOUT)!$D(DUOUT) S IBNEW="^1" Q
"RTN","IBCEP5D",124,0)
 .. I IBIVAL'="",($P(Y,U)=IBIVAL!(X="")) S IBNEW=IBIVAL Q
"RTN","IBCEP5D",125,0)
 .. I X="@" S IBNEW="@" Q
"RTN","IBCEP5D",126,0)
 .. I X="",IBIVAL="" S IBNEW="*ALL*" Q
"RTN","IBCEP5D",127,0)
 .. S DIC="^DIC(36,",DIC(0)="EMQ",DIC("S")="X IBIT I $D(X)" D ^DIC
"RTN","IBCEP5D",128,0)
 .. I Y>0 S IBNEW=$P(Y,U) Q
"RTN","IBCEP5D",129,0)
 .. S Y="",IBNEW="^1"
"RTN","IBCEP5D",130,0)
 G:IBNEW="^1"!(IBNEW=IBIVAL)!(IBFLD=.07) EDITQ
"RTN","IBCEP5D",131,0)
 I $G(IBCK1) D
"RTN","IBCEP5D",132,0)
 . N X1,X2,X3,X4,X5,X6
"RTN","IBCEP5D",133,0)
 . S X1=$S(IBFILE=355.9:$S(IBFLD'=.01:IBPRV,1:IBNEW),1:"")
"RTN","IBCEP5D",134,0)
 . S X2=$S(IBFILE=355.9:$S(IBFLD'=.02:$P(IB0,U,2),1:IBNEW),1:$S(IBFLD'=.01:$P(IB0,U),1:IBNEW))
"RTN","IBCEP5D",135,0)
 . S X3=$S(IBFLD'=.03:$P(IB0,U,3),1:IBNEW),X4=$S(IBFLD'=.04:$P(IB0,U,4),1:IBNEW),X5=$S(IBFLD'=.05:$P(IB0,U,5),1:IBNEW),X6=$S(IBFLD'=.06:$P(IB0,U,6),1:IBNEW)
"RTN","IBCEP5D",136,0)
 . I X2="" S X2="*ALL*"
"RTN","IBCEP5D",137,0)
 . I X3="" S X3="*N/A*"
"RTN","IBCEP5D",138,0)
 . I IBFILE=355.9,$S(X4=""!(X5="")!(X6=""):1,$O(^IBA(355.9,"AUNIQ",X1,X2,X3,X4,X5,X6,0)):$O(^(0))'=IBIEN,1:0) S IBNEW=IBNEW_"^2" Q
"RTN","IBCEP5D",139,0)
 . I IBFILE=355.91,$S(X4=""!(X5="")!(X6=""):1,$O(^IBA(355.91,"AUNIQ",X2,X3,X4,X5,X6,0)):$O(^(0))'=IBIEN,1:0) S IBNEW=IBNEW_"^2" Q
"RTN","IBCEP5D",140,0)
 . F IB=2,3 D  Q:$P(IBNEW,U,3)=3
"RTN","IBCEP5D",141,0)
 .. S IB1=(X2="*ALL*"!(X3="*N/A*"))
"RTN","IBCEP5D",142,0)
 .. I IBFILE=355.9,IB=2,$S($P(IBOLD,U,2)="":X2'="*ALL*",1:$P(IBOLD,U,2)'=X2) S X2=""
"RTN","IBCEP5D",143,0)
 .. I IB=3,$S($P(IBOLD,U,3)="":X3'="*N/A*",1:$P(IBOLD,U,3)'=X3) S X3=""
"RTN","IBCEP5D",144,0)
 .. I '$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_(IBFLD*100)_U_X2_U_X3_U_X4_U_X5_U_X6,IB1) S IBNEW="^3"
"RTN","IBCEP5D",145,0)
 ;
"RTN","IBCEP5D",146,0)
EDITQ Q IBNEW
"RTN","IBCEP7")
0^37^B48408157^B48424758
"RTN","IBCEP7",1,0)
IBCEP7 ;ALB/TMP - Functions for fac level PROVIDER ID MAINT ;11-07-00
"RTN","IBCEP7",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348**;21-MAR-94;Build 5
"RTN","IBCEP7",3,0)
 ;
"RTN","IBCEP7",4,0)
HDR ; -- hdr code
"RTN","IBCEP7",5,0)
 I '$D(^TMP("IBCE_PRVFAC_MAINT",$J)) D INIT
"RTN","IBCEP7",6,0)
 N IBINS,PCF,PCDISP,IBPARAM,IBEFTFL
"RTN","IBCEP7",7,0)
 K VALMHDR
"RTN","IBCEP7",8,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",9,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",10,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",11,0)
 S PCF=$P($G(^DIC(36,+IBINS,3)),U,13),PCDISP=$S(PCF="P":"(Parent)",1:"")
"RTN","IBCEP7",12,0)
 S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBINS,0)),U)_PCDISP
"RTN","IBCEP7",13,0)
 S VALMHDR(1)=VALMHDR(1)_$S(IBEFTFL="E":"   Billing Provider Secondary IDs",IBEFTFL="A":"   Additional Billing Provider Sec. IDs",IBEFTFL="LF":"   VA-Lab/Facility Secondary IDs",1:"")
"RTN","IBCEP7",14,0)
 I IBEFTFL="LF" S VALMHDR(2)="VA-Lab/Facility Primary ID: Federal Tax ID"
"RTN","IBCEP7",15,0)
 Q
"RTN","IBCEP7",16,0)
 ;
"RTN","IBCEP7",17,0)
INIT ; Initialize
"RTN","IBCEP7",18,0)
 N IBCT,IBD,Z,Z0,Z00,Z1,IBS,IBX,IBDIV,IBEFTFL,IBINS,IBPARAM,IBLCT,IBCU
"RTN","IBCEP7",19,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEP7",20,0)
 S (IBLCT,IBCT)=0
"RTN","IBCEP7",21,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",22,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",23,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",24,0)
 ;
"RTN","IBCEP7",25,0)
 I IBEFTFL="A" D
"RTN","IBCEP7",26,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP7",27,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVFAC ADDIDS MAINT")
"RTN","IBCEP7",28,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP7",29,0)
 ;
"RTN","IBCEP7",30,0)
 I IBEFTFL="LF" D
"RTN","IBCEP7",31,0)
 . S VALM("TITLE")="VA-Lab/Facility IDs"
"RTN","IBCEP7",32,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP7",33,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVFAC VALF MAINT")
"RTN","IBCEP7",34,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP7",35,0)
 ;
"RTN","IBCEP7",36,0)
 ; Compile the appropriate list of IDs
"RTN","IBCEP7",37,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D
"RTN","IBCEP7",38,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7",39,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCEP7",40,0)
 . Q:'($P(Z0,U,8)=IBEFTFL)
"RTN","IBCEP7",41,0)
 . ;Q:$S($P(IBPARAM,U,3)=1:'$P($G(^IBE(355.97,+$P(Z0,U,6),1)),U,9),1:$P($G(^IBE(355.97,+$P(Z0,U,6),1)),U,9))
"RTN","IBCEP7",42,0)
 . S Z1=$G(^IBE(355.97,+$P(Z0,U,6),0))
"RTN","IBCEP7",43,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,3),+$P(Z1,U,2)_";"_Z,$P(Z1,U))=+$P(Z0,U,6)_U_$P(Z0,U,7)_U_Z
"RTN","IBCEP7",44,0)
 ;
"RTN","IBCEP7",45,0)
 S IBD="" F  S IBD=$O(IBS(IBD)) Q:IBD=""  D
"RTN","IBCEP7",46,0)
 . D:IBCT SET1(.IBLCT," ",IBCT+1)
"RTN","IBCEP7",47,0)
 . D SET1(.IBLCT,"Division: "_$$DIV(IBD),IBCT+1)
"RTN","IBCEP7",48,0)
 . S IBCU="" F  S IBCU=$O(IBS(IBD,IBCU)) Q:IBCU=""  D
"RTN","IBCEP7",49,0)
 .. I IBCU D SET1(.IBLCT,"  Care Unit: "_$$EXTERNAL^DILFD(355.92,.03,"",IBCU),IBCT+1)
"RTN","IBCEP7",50,0)
 .. S Z="" F  S Z=$O(IBS(IBD,IBCU,Z),-1) Q:Z=""  D
"RTN","IBCEP7",51,0)
 ... S Z0="" F  S Z0=$O(IBS(IBD,IBCU,Z,Z0)) Q:Z0=""  S IBX=IBS(IBD,IBCU,Z,Z0) D
"RTN","IBCEP7",52,0)
 .... S IBCT=IBCT+1
"RTN","IBCEP7",53,0)
 .... I $P(Z,";",2) D  Q
"RTN","IBCEP7",54,0)
 ..... S Z00=$G(^IBA(355.92,+$P(Z,";",2),0))
"RTN","IBCEP7",55,0)
 ..... S Z1=$E(IBCT_$J("",3),1,3)_"  "_$E(Z0_$J("",25),1,25)_"   "_$E($S($P(IBX,U,2)'="":$P(IBX,U,2),1:$$IDNUM^IBCEP7A(+IBX))_$J("",15),1,15)_"  "_$P("BOTH^UB92^1500^RX",U,$P(Z00,U,4)+1)
"RTN","IBCEP7",56,0)
 ..... D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP7",57,0)
 ..... S ^TMP("IBCE_PRVFAC_MAINT",$J,"ZIDX",IBCT)=+$P(Z,";",2)
"RTN","IBCEP7",58,0)
 ;
"RTN","IBCEP7",59,0)
 I 'IBLCT D
"RTN","IBCEP7",60,0)
 . D SET1(1," ")
"RTN","IBCEP7",61,0)
 . N TEXT
"RTN","IBCEP7",62,0)
 . I IBEFTFL="E" S TEXT="No Billing Provider Secondary IDs found"
"RTN","IBCEP7",63,0)
 . I IBEFTFL="A" S TEXT="No Billing Provider Additional IDs found"
"RTN","IBCEP7",64,0)
 . I IBEFTFL="LF" S TEXT="No VA Lab/Facility IDs found"
"RTN","IBCEP7",65,0)
 . D SET1(2,TEXT)
"RTN","IBCEP7",66,0)
 . S IBLCT=2
"RTN","IBCEP7",67,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEP7",68,0)
 Q
"RTN","IBCEP7",69,0)
 ;
"RTN","IBCEP7",70,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEP7",71,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEP7",72,0)
 Q
"RTN","IBCEP7",73,0)
 ;
"RTN","IBCEP7",74,0)
DIV(IBD) ; Returns 'ALL/DEFAULT' or div NAME whose ien=IBD
"RTN","IBCEP7",75,0)
 N MAIN
"RTN","IBCEP7",76,0)
 I IBD Q $$EXTERNAL^DILFD(355.92,.05,"",IBD)
"RTN","IBCEP7",77,0)
 S MAIN=$$MAIN^IBCEP2B()
"RTN","IBCEP7",78,0)
 S MAIN=$$EXTERNAL^DILFD(355.92,.05,"",MAIN)
"RTN","IBCEP7",79,0)
 S MAIN=MAIN_"/Default for All Divisions"
"RTN","IBCEP7",80,0)
 Q MAIN
"RTN","IBCEP7",81,0)
 ;
"RTN","IBCEP7",82,0)
EDIT1 ;
"RTN","IBCEP7",83,0)
 N IBFUNC,IBINS,IBDA,Z,DIR,X,Y,DTOUT,DUOUT,DP,IBPARAM,IBEFTFL
"RTN","IBCEP7",84,0)
 D FULL^VALM1
"RTN","IBCEP7",85,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",86,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",87,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",88,0)
 S IBFUNC="E"
"RTN","IBCEP7",89,0)
 D SEL
"RTN","IBCEP7",90,0)
 I $G(IBDA) S Z=$$EDITFAC(IBDA,IBFUNC,IBEFTFL) I Z D INIT
"RTN","IBCEP7",91,0)
 ;
"RTN","IBCEP7",92,0)
EDIT1Q S VALMBCK="R"
"RTN","IBCEP7",93,0)
 Q
"RTN","IBCEP7",94,0)
EXPND ;
"RTN","IBCEP7",95,0)
 Q
"RTN","IBCEP7",96,0)
HELP ;
"RTN","IBCEP7",97,0)
 Q
"RTN","IBCEP7",98,0)
EXIT ;
"RTN","IBCEP7",99,0)
 N IBPARAM,IBEFTFL
"RTN","IBCEP7",100,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",101,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",102,0)
 I IBEFTFL="A" D COPYPROV^IBCEP5A(0)
"RTN","IBCEP7",103,0)
 ;
"RTN","IBCEP7",104,0)
 S (IBLCT,IBCT)=0
"RTN","IBCEP7",105,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J),^TMP("IBCE_PRVFAC_MAINT_INS",$J)
"RTN","IBCEP7",106,0)
 D CLEAN^VALM10
"RTN","IBCEP7",107,0)
 Q
"RTN","IBCEP7",108,0)
SEL ;
"RTN","IBCEP7",109,0)
 N Z
"RTN","IBCEP7",110,0)
 K IBDA
"RTN","IBCEP7",111,0)
 D FULL^VALM1,EN^VALM2($G(XQORNOD(0)),"OS")
"RTN","IBCEP7",112,0)
 S Z=+$O(VALMY(0)) Q:'Z
"RTN","IBCEP7",113,0)
 ; fac/ins co default
"RTN","IBCEP7",114,0)
 S IBDA=$G(^TMP("IBCE_PRVFAC_MAINT",$J,"ZIDX",Z))
"RTN","IBCEP7",115,0)
 Q
"RTN","IBCEP7",116,0)
 ;
"RTN","IBCEP7",117,0)
EDITFAC(IBDA,IBFUNC,IBEFTFL) ; edits ins co facility id (355.92), entry IBDA
"RTN","IBCEP7",118,0)
 N IBRBLD,Z,Z0,DIK,DIE,DP,DA,DR,DIR,X,Y,IBDA0,IBDIV,IBITYP,IBFORM,IBCAREUN,NEXTONE
"RTN","IBCEP7",119,0)
 S IBRBLD=0 S:$G(IBDA) IBDA0=$G(^IBA(355.92,+IBDA,0))
"RTN","IBCEP7",120,0)
 ; "E"diting 355.92 entry
"RTN","IBCEP7",121,0)
 I IBFUNC="E" D
"RTN","IBCEP7",122,0)
 . S Z0=$TR(IBDA0,U)
"RTN","IBCEP7",123,0)
 . Q:'$$FACFLDS^IBCEP7C(IBDA,IBINS,.IBITYP,.IBFORM,.IBDIV,"E",.IBCAREUN,IBEFTFL)
"RTN","IBCEP7",124,0)
 . S DIE="^IBA(355.92,",DA=IBDA
"RTN","IBCEP7",125,0)
 . S DR=".03////"_$S($G(IBCAREUN)]""&($G(IBCAREUN)'="*N/A*"):IBCAREUN,1:"")_";.04////"_IBFORM_$S(IBDIV:";.05////"_IBDIV,1:"")_";.06////"_IBITYP_";"
"RTN","IBCEP7",126,0)
 . S DR=DR_".07"_$S(IBEFTFL="E"!(IBEFTFL="A"):"Billing Provider Secondary ID",1:"VA Lab or Facility Secondary ID")
"RTN","IBCEP7",127,0)
 . I IBEFTFL="A" D
"RTN","IBCEP7",128,0)
 .. S NEXTONE=$$NEXTONE()
"RTN","IBCEP7",129,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"MOD"_U_355.92
"RTN","IBCEP7",130,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,"OLD0")=^IBA(355.92,IBDA,0)
"RTN","IBCEP7",131,0)
 . D ^DIE
"RTN","IBCEP7",132,0)
 . I IBEFTFL="A" S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=^IBA(355.92,IBDA,0)
"RTN","IBCEP7",133,0)
 . I $TR($G(^IBA(355.92,IBDA,0)),U)'=Z0 S IBRBLD=1
"RTN","IBCEP7",134,0)
 ;
"RTN","IBCEP7",135,0)
 ; "D"eleting 355.92 entry
"RTN","IBCEP7",136,0)
 I IBFUNC="D" D
"RTN","IBCEP7",137,0)
 . W !!," Insurance Co: ",$P($G(^DIC(36,+IBDA0,0)),U)
"RTN","IBCEP7",138,0)
 . W !,"     Division: ",$$DIV($P(IBDA0,U,5))
"RTN","IBCEP7",139,0)
 . W:$P(IBDA0,U,3)]"" !,"    Care Unit: ",$$EXTERNAL^DILFD(355.92,.03,"",$P(IBDA0,U,3))
"RTN","IBCEP7",140,0)
 . W !," ID Qualifier: ",$$EXTERNAL^DILFD(355.92,.06,"",$P(IBDA0,U,6))
"RTN","IBCEP7",141,0)
 . W !,"    Form Type: ",$$EXTERNAL^DILFD(355.92,.04,"",$P(IBDA0,U,4))
"RTN","IBCEP7",142,0)
 . W !,"           ID: ",$P(IBDA0,U,7),!
"RTN","IBCEP7",143,0)
 . S DIR(0)="YA",DIR("A")="ARE YOU SURE YOU WANT TO DELETE THIS ID RECORD?: ",DIR("B")="NO" D ^DIR K DIR
"RTN","IBCEP7",144,0)
 . S DIR("A")="NOTHING DELETED - PRESS RETURN TO CONTINUE: "
"RTN","IBCEP7",145,0)
 . I Y=1 D
"RTN","IBCEP7",146,0)
 .. S DIK="^IBA(355.92,",DA=IBDA
"RTN","IBCEP7",147,0)
 .. D ^DIK
"RTN","IBCEP7",148,0)
 .. I IBEFTFL="A" D
"RTN","IBCEP7",149,0)
 ... N NEXTONE
"RTN","IBCEP7",150,0)
 ... S NEXTONE=$$NEXTONE()
"RTN","IBCEP7",151,0)
 ... S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"DEL"_U_355.92
"RTN","IBCEP7",152,0)
 ... S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=IBDA0
"RTN","IBCEP7",153,0)
 .. S DIR("A")="ID DELETED - PRESS RETURN TO CONTINUE: ",IBRBLD=1
"RTN","IBCEP7",154,0)
 .. S DIR(0)="EA" W ! D ^DIR K DIR
"RTN","IBCEP7",155,0)
 ;
"RTN","IBCEP7",156,0)
 Q IBRBLD
"RTN","IBCEP7",157,0)
 ;
"RTN","IBCEP7",158,0)
FACID(Y) ;
"RTN","IBCEP7",159,0)
 N Z,Z1,Z2
"RTN","IBCEP7",160,0)
 S Z=U_$P($G(^IBE(355.97,+Y,0)),U,3)_U,Z1=$$SUB2^IBCEF73(1),Z2=$$SUB2^IBCEF73(2)
"RTN","IBCEP7",161,0)
 I Z1[Z!(Z2[Z) Q 1
"RTN","IBCEP7",162,0)
 Q 0
"RTN","IBCEP7",163,0)
 ;
"RTN","IBCEP7",164,0)
ADD1 ;
"RTN","IBCEP7",165,0)
 N IBFUNC,IBINS,IBDA,Z,DIR,X,Y,DTOUT,DUOUT,DP,IBPARAM,IBEFTFL,IBINS
"RTN","IBCEP7",166,0)
 D FULL^VALM1
"RTN","IBCEP7",167,0)
 ;
"RTN","IBCEP7",168,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",169,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",170,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co        ;
"RTN","IBCEP7",171,0)
 ;
"RTN","IBCEP7",172,0)
 S Z=$$ADDFAC^IBCEP7A(IBINS,IBEFTFL) I Z D INIT
"RTN","IBCEP7",173,0)
 ;
"RTN","IBCEP7",174,0)
ADD1Q S VALMBCK="R"
"RTN","IBCEP7",175,0)
 Q
"RTN","IBCEP7",176,0)
 ;
"RTN","IBCEP7",177,0)
DEL1 ;
"RTN","IBCEP7",178,0)
 N IBFUNC,IBINS,IBDA,Z,DIR,X,Y,DTOUT,DUOUT,DP,IBPARAM,IBEFTDL,IBINS
"RTN","IBCEP7",179,0)
 D FULL^VALM1
"RTN","IBCEP7",180,0)
 ;       
"RTN","IBCEP7",181,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",182,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",183,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",184,0)
 ;
"RTN","IBCEP7",185,0)
 S IBFUNC="D"
"RTN","IBCEP7",186,0)
 D SEL
"RTN","IBCEP7",187,0)
 I $G(IBDA) S Z=$$EDITFAC(IBDA,IBFUNC,IBEFTFL) I Z D INIT
"RTN","IBCEP7",188,0)
 ;
"RTN","IBCEP7",189,0)
DEL1Q S VALMBCK="R"
"RTN","IBCEP7",190,0)
 Q
"RTN","IBCEP7",191,0)
 ;
"RTN","IBCEP7",192,0)
 ; Get the next number so that the edits can be replicated in order for other providers/insurance companies
"RTN","IBCEP7",193,0)
NEXTONE() ;
"RTN","IBCEP7",194,0)
 Q $O(^TMP("IB_EDITED_IDS",$J,""),-1)+1
"RTN","IBCEP7B")
0^50^B7101591^B7086017
"RTN","IBCEP7B",1,0)
IBCEP7B ;ALB/TMP - Functions for PROVIDER ID ;1-16-05
"RTN","IBCEP7B",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348**;16-JAN-2005;Build 5
"RTN","IBCEP7B",3,0)
 Q
"RTN","IBCEP7B",4,0)
 ;
"RTN","IBCEP7B",5,0)
GETID(CLAIM,COB) ;
"RTN","IBCEP7B",6,0)
 N DIR,X,Y,DTOUT,DUOUT,WHICH,ID,IBMAIN,IBDIV,DIC,IBINS,DA,DIC,Z,Z0,IBCU,OK,IBCU
"RTN","IBCEP7B",7,0)
 ;
"RTN","IBCEP7B",8,0)
 S ID=""
"RTN","IBCEP7B",9,0)
 S IBINS=$P($G(^DGCR(399,CLAIM,"I"_COB)),U)
"RTN","IBCEP7B",10,0)
 I IBINS="" Q ID
"RTN","IBCEP7B",11,0)
 ;
"RTN","IBCEP7B",12,0)
 ; Make sure they have careunits IDS defined for this insurance company before we bother asking
"RTN","IBCEP7B",13,0)
 S OK=0
"RTN","IBCEP7B",14,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D  Q:OK
"RTN","IBCEP7B",15,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7B",16,0)
 . Q:$P(Z0,U,8)'="E"
"RTN","IBCEP7B",17,0)
 . Q:$P(Z0,U,3)=""
"RTN","IBCEP7B",18,0)
 . S OK=1
"RTN","IBCEP7B",19,0)
 I 'OK Q ID
"RTN","IBCEP7B",20,0)
 ;
"RTN","IBCEP7B",21,0)
 S WHICH=$S(COB=1:"Primary",COB=2:"Secondary",1:"Tertiary")
"RTN","IBCEP7B",22,0)
 S DIR("A")="Define "_WHICH_" Payer ID by Care Unit? "
"RTN","IBCEP7B",23,0)
 S DIR("B")="No"
"RTN","IBCEP7B",24,0)
 S DIR(0)="YA"
"RTN","IBCEP7B",25,0)
 S DIR("?",1)="Enter No to select "_WHICH_" Provider # by Division."
"RTN","IBCEP7B",26,0)
 S DIR("?")="Enter Yes to select "_WHICH_" Provider # for a specific Care Unit."
"RTN","IBCEP7B",27,0)
 D ^DIR
"RTN","IBCEP7B",28,0)
 I Y'=1 Q ID
"RTN","IBCEP7B",29,0)
 ;
"RTN","IBCEP7B",30,0)
 ; Get the Division
"RTN","IBCEP7B",31,0)
 S IBMAIN=$$MAIN^IBCEP2B()
"RTN","IBCEP7B",32,0)
 S IBDIV=$$EXTERNAL^DILFD(399,.22,"",$P($G(^DGCR(399,CLAIM,0)),U,22))
"RTN","IBCEP7B",33,0)
 S DIR("A")="Division: ",DIR(0)="355.92,.05AOr"
"RTN","IBCEP7B",34,0)
 ; Default Division
"RTN","IBCEP7B",35,0)
 S DIR("B")=$S(IBDIV]"":IBDIV,1:IBMAIN)
"RTN","IBCEP7B",36,0)
 D ^DIR K DIR
"RTN","IBCEP7B",37,0)
 S IBDIV=+$S(Y>0:+Y,1:0)
"RTN","IBCEP7B",38,0)
 I Y<0 Q ID
"RTN","IBCEP7B",39,0)
 ;
"RTN","IBCEP7B",40,0)
 ; Get the Care Unit
"RTN","IBCEP7B",41,0)
 S DIC("A")="Care Unit: "
"RTN","IBCEP7B",42,0)
 S DIC("W")="W ""   "",$P(^(0),U,2)"
"RTN","IBCEP7B",43,0)
 S DIC=355.95,DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="AEMQ"
"RTN","IBCEP7B",44,0)
 D ^DIC
"RTN","IBCEP7B",45,0)
 I Y<0 Q ID
"RTN","IBCEP7B",46,0)
 S IBCU=+Y
"RTN","IBCEP7B",47,0)
 ;
"RTN","IBCEP7B",48,0)
 ; Compile the appropriate list of IDs
"RTN","IBCEP7B",49,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D  Q:ID]""
"RTN","IBCEP7B",50,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7B",51,0)
 . Q:$P(Z0,U,8)'="E"
"RTN","IBCEP7B",52,0)
 . Q:$P(Z0,U,3)'=IBCU
"RTN","IBCEP7B",53,0)
 . S ID=$P(Z0,U,7)_U_$P(Z0,U,6)
"RTN","IBCEP7B",54,0)
 Q ID
"RTN","IBCEP7B",55,0)
 ;
"RTN","IBCEP7B",56,0)
 ; See if the insurance company flag is set to send the ATT/REND ID as the Billing Provider
"RTN","IBCEP7B",57,0)
ATTREND(CLAIM,COB) ;
"RTN","IBCEP7B",58,0)
 N ID,IBINS
"RTN","IBCEP7B",59,0)
 S ID=""
"RTN","IBCEP7B",60,0)
 S IBINS=$P($G(^DGCR(399,CLAIM,"I"_COB)),U)
"RTN","IBCEP7B",61,0)
 I IBINS="" Q 0
"RTN","IBCEP7B",62,0)
 ;
"RTN","IBCEP7B",63,0)
 I $$FT^IBCEF(CLAIM)=2,$$GET1^DIQ(36,IBINS,4.06,"I") Q 1   ; hcfa
"RTN","IBCEP7B",64,0)
 I $$FT^IBCEF(CLAIM)=3,$$GET1^DIQ(36,IBINS,4.08,"I") Q 1   ; ub
"RTN","IBCEP7B",65,0)
 Q 0
"RTN","IBCEP7B",66,0)
 ;
"RTN","IBCEP7B",67,0)
 ; Get a list of the plan types that supress Billing Provider Secondary IDs for this  Insurance Co
"RTN","IBCEP7B",68,0)
 ; and see if the current plan type is one of them.
"RTN","IBCEP7B",69,0)
SUPPPT(CLAIM,COB) ;
"RTN","IBCEP7B",70,0)
 N IBINS,SUPPFL
"RTN","IBCEP7B",71,0)
 S SUPPFL=0
"RTN","IBCEP7B",72,0)
 S IBINS=$P($G(^DGCR(399,CLAIM,"I"_COB)),U)
"RTN","IBCEP7B",73,0)
 I IBINS="" Q SUPPFL
"RTN","IBCEP7B",74,0)
 ;
"RTN","IBCEP7B",75,0)
 I $D(^DIC(36,IBINS,13)) D
"RTN","IBCEP7B",76,0)
 . N PLAN,PLANTYPE
"RTN","IBCEP7B",77,0)
 . S PLAN=$P($G(^DGCR(399,CLAIM,"I"_COB)),U,18) Q:'PLAN
"RTN","IBCEP7B",78,0)
 . S PLANTYPE=$P($G(^IBA(355.3,PLAN,0)),U,15) Q:PLANTYPE=""
"RTN","IBCEP7B",79,0)
 . Q:'$D(^DIC(36,IBINS,13,"B",PLANTYPE))
"RTN","IBCEP7B",80,0)
 . S SUPPFL=1
"RTN","IBCEP7B",81,0)
 Q SUPPFL
"RTN","IBCEP7C")
0^38^B58965316^B59203324
"RTN","IBCEP7C",1,0)
IBCEP7C ;ALB/TMP - Functions for fac level PROVIDER ID MAINT ;11-07-00
"RTN","IBCEP7C",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348**;21-MAR-94;Build 5
"RTN","IBCEP7C",3,0)
 ;
"RTN","IBCEP7C",4,0)
 G AWAY
"RTN","IBCEP7C",5,0)
AWAY Q
"RTN","IBCEP7C",6,0)
 ;
"RTN","IBCEP7C",7,0)
 ; IBDA - IEN for file 355.92
"RTN","IBCEP7C",8,0)
 ; IBFUNC = "A"dd or "E"dit
"RTN","IBCEP7C",9,0)
FACFLDS(IBDA,IBINS,IBITYP,IBFORM,IBDIV,IBFUNC,IBCAREUN,IBEFTFL) ; Chk for dups on fac id fld combos
"RTN","IBCEP7C",10,0)
 ;
"RTN","IBCEP7C",11,0)
 N IB,IBOK,DIC,DIR,X,Y,DTOUT,DUOUT,Z,Z0,DIE,DA,IBMAIN,IBQUIT,IBPARAM,IBCUF,IBDA0,IBCNTADD,I,IBLIMIT
"RTN","IBCEP7C",12,0)
 ;
"RTN","IBCEP7C",13,0)
 S IBOK=0,IBDA0=""
"RTN","IBCEP7C",14,0)
 I $G(IBDA) S IBDA0=$G(^IBA(355.92,IBDA,0))
"RTN","IBCEP7C",15,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7C",16,0)
 S IBCUF=$S($P(IBDA0,U,3)]"":1,1:0)  ; Care Unit Flag
"RTN","IBCEP7C",17,0)
 ;
"RTN","IBCEP7C",18,0)
 I IBEFTFL="E",IBFUNC="A" D  G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",19,0)
 . K DIR
"RTN","IBCEP7C",20,0)
 . S DIR("A")="Define Billing Provider Secondary IDs by Care Units? "
"RTN","IBCEP7C",21,0)
 . S DIR("B")="No"
"RTN","IBCEP7C",22,0)
 . S DIR(0)="YAO"
"RTN","IBCEP7C",23,0)
 . S DIR("?",1)="Enter No to define a Billing Provider Secondary ID for the Division."
"RTN","IBCEP7C",24,0)
 . S DIR("?",2)="Enter Yes to define a Billing Provider Secondary ID for a specific Care Unit."
"RTN","IBCEP7C",25,0)
 . S DIR("?",3)="If no Care Unit is entered on Billing Screen 3, the Billing Provider"
"RTN","IBCEP7C",26,0)
 . S DIR("?")="Secondary ID defined for the Division will be transmitted in the claim."
"RTN","IBCEP7C",27,0)
 . D ^DIR
"RTN","IBCEP7C",28,0)
 . S IBCUF=$G(Y)  ; Care Unit Flag
"RTN","IBCEP7C",29,0)
 ;
"RTN","IBCEP7C",30,0)
 ; Get the Division
"RTN","IBCEP7C",31,0)
 S IBMAIN=$$MAIN^IBCEP2B()
"RTN","IBCEP7C",32,0)
 S IBDIV=0
"RTN","IBCEP7C",33,0)
 I IBEFTFL="E"!(IBEFTFL="LF") D  G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",34,0)
 . K DIR
"RTN","IBCEP7C",35,0)
 . S (IBQUIT,IBOK)=0,DA=$G(IBDA)
"RTN","IBCEP7C",36,0)
 . S DIR("A")="Division: ",DIR(0)="355.92,.05AOr"
"RTN","IBCEP7C",37,0)
 . ; Default Division - Main if adding or Existing if editing
"RTN","IBCEP7C",38,0)
 . I IBFUNC="E" S DIR("B")=$P($$DIV^IBCEP7($P(IBDA0,U,5)),"/")
"RTN","IBCEP7C",39,0)
 . I IBFUNC="A" S DIR("B")=$P($$EXTERNAL^DILFD(355.92,.05,"",IBMAIN),"/")
"RTN","IBCEP7C",40,0)
 . D ^DIR K DIR
"RTN","IBCEP7C",41,0)
 . Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEP7C",42,0)
 . S IBDIV=+$S(Y>0:+Y,1:0)
"RTN","IBCEP7C",43,0)
 ;
"RTN","IBCEP7C",44,0)
 ; See if there are any Care Units
"RTN","IBCEP7C",45,0)
 S IBCAREUN="*N/A*"
"RTN","IBCEP7C",46,0)
 I IBEFTFL="E",IBCUF D
"RTN","IBCEP7C",47,0)
 . N TAR
"RTN","IBCEP7C",48,0)
 . D LIST^DIC(355.95,,.01,,,,,,"I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",,"TAR")
"RTN","IBCEP7C",49,0)
 . Q:+$G(TAR("DILIST",0))
"RTN","IBCEP7C",50,0)
 . S IBCUF=0
"RTN","IBCEP7C",51,0)
 . W !!,"There are no Care Units defined for this Division.",!
"RTN","IBCEP7C",52,0)
 ;
"RTN","IBCEP7C",53,0)
 ; Get the Care Unit
"RTN","IBCEP7C",54,0)
 I IBEFTFL="E",IBCUF D  I Y<1 G FLDSQ
"RTN","IBCEP7C",55,0)
 . K DIC
"RTN","IBCEP7C",56,0)
 . S DIC("A")="Care Unit: "
"RTN","IBCEP7C",57,0)
 . I IBFUNC="E" D  ; default only if editing
"RTN","IBCEP7C",58,0)
 .. Q:IBDIV'=$P(IBDA0,U,5)  ; don't default if division has changed
"RTN","IBCEP7C",59,0)
 .. S DIC("B")=$$EXTERNAL^DILFD(355.92,.03,"",$P(IBDA0,U,3))
"RTN","IBCEP7C",60,0)
 . S DIC=355.95,DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="AEMQ"
"RTN","IBCEP7C",61,0)
 . D ^DIC
"RTN","IBCEP7C",62,0)
 . I Y>0 S IBCAREUN=+Y
"RTN","IBCEP7C",63,0)
 ;
"RTN","IBCEP7C",64,0)
 ; Think this is done for sorting purposes.  Makes the main division first
"RTN","IBCEP7C",65,0)
 I IBDIV=IBMAIN S IBDIV=0
"RTN","IBCEP7C",66,0)
 ;
"RTN","IBCEP7C",67,0)
 ; Get the Provider ID Type
"RTN","IBCEP7C",68,0)
 K DIR
"RTN","IBCEP7C",69,0)
 S IBQUIT=0
"RTN","IBCEP7C",70,0)
 I $P(IBPARAM,U,3)'=1 D
"RTN","IBCEP7C",71,0)
 . S DIR("?")="Can NOT be State LIC # or Billing Facility Primary"
"RTN","IBCEP7C",72,0)
 . S DIR("A")="ID Qualifier: "
"RTN","IBCEP7C",73,0)
 . S DIR(0)="355.92,.06A^^K:'$$FACID^IBCEP7(+Y)!$P($G(^IBE(355.97,+Y,1)),U,9)!($P($G(^(0)),U,3)=""0B"") X"
"RTN","IBCEP7C",74,0)
 . W ! D ^DIR K DIR
"RTN","IBCEP7C",75,0)
 . I $D(DTOUT)!$D(DUOUT) S IBQUIT=1
"RTN","IBCEP7C",76,0)
 E  D  G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",77,0)
 . S DIR("A")="ID Qualifier: "    ;,DIR(0)="355.92,.06Ar"
"RTN","IBCEP7C",78,0)
 . S DIR(0)="PAr^355.97:AEMQ"
"RTN","IBCEP7C",79,0)
 . S DIR("?")="Enter a Qualifier to indentify the type of ID number you are entering."
"RTN","IBCEP7C",80,0)
 . ; Default Type of ID - Electronic Plan Type if adding or Existing if editing
"RTN","IBCEP7C",81,0)
 . N PITIEN S PITIEN=$S(IBFUNC="A"&(IBEFTFL="E"):$$BF^IBCU(),IBFUNC="E":$P(IBDA0,U,6),1:"")
"RTN","IBCEP7C",82,0)
 . I PITIEN]"" S DIR("B")=$P($G(^IBE(355.97,PITIEN,0)),U)
"RTN","IBCEP7C",83,0)
 . I IBEFTFL="E" D
"RTN","IBCEP7C",84,0)
 .. S DIR("?",1)=" The current default ID Qualifier is based upon the Electronic Plan Type."
"RTN","IBCEP7C",85,0)
 .. S DIR("?",2)=" You may change the ID Qualifier and the change will apply to all Plan"
"RTN","IBCEP7C",86,0)
 .. S DIR("?")=" Types."
"RTN","IBCEP7C",87,0)
 .. S DIR("S")="I ($P($G(^(0)),U,3)=$P($G(^IBE(355.97,PITIEN,0)),U,3))!$$BPS^IBCEPU(Y)"
"RTN","IBCEP7C",88,0)
 . I IBEFTFL="A" S DIR("S")="I $$BPS^IBCEPU(Y)"
"RTN","IBCEP7C",89,0)
 . I IBEFTFL="LF" S DIR("S")="I $$LFINS^IBCEPU(Y)"
"RTN","IBCEP7C",90,0)
 . D ^DIR K DIR
"RTN","IBCEP7C",91,0)
 G:IBQUIT FLDSQ
"RTN","IBCEP7C",92,0)
 S IBITYP=$P(Y,U)
"RTN","IBCEP7C",93,0)
 ;
"RTN","IBCEP7C",94,0)
 ; Get Form Type
"RTN","IBCEP7C",95,0)
 K DIR
"RTN","IBCEP7C",96,0)
 S DIR("A")="Form Type: "
"RTN","IBCEP7C",97,0)
 S DIR(0)=$S(IBEFTFL="LF":"SA^0:BOTH;1:UB92;2:CMS-1500",1:"SA^1:UB92;2:CMS-1500")
"RTN","IBCEP7C",98,0)
 ;
"RTN","IBCEP7C",99,0)
 I $G(IBDA) S DIR("B")=$S(+$P($G(^IBA(355.92,IBDA,0)),U,4)=0:"BOTH",1:$P("UB92^CMS-1500",U,+$P($G(^IBA(355.92,IBDA,0)),U,4)))
"RTN","IBCEP7C",100,0)
 ;
"RTN","IBCEP7C",101,0)
 D ^DIR K DIR
"RTN","IBCEP7C",102,0)
 G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",103,0)
 S IBFORM=$P(Y,U)
"RTN","IBCEP7C",104,0)
 ;
"RTN","IBCEP7C",105,0)
 ; Set up array of exisiting IDs by form type, divison, and care units to avoid duplications
"RTN","IBCEP7C",106,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D
"RTN","IBCEP7C",107,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7C",108,0)
 . I '(IBFUNC="E"&(Z=IBDA)) D
"RTN","IBCEP7C",109,0)
 .. I IBEFTFL="LF",$P(Z0,U,8)'="LF" Q   ; If lab/facility ID, it only needs to be unique among lab/facility IDs
"RTN","IBCEP7C",110,0)
 .. I IBEFTFL'="LF",$P(Z0,U,8)="LF" Q   ; If not lab/facility ID, it must be unigue for the others (secondary and additional)
"RTN","IBCEP7C",111,0)
 .. I IBEFTFL="A",$P(Z0,U,8)="E" Q
"RTN","IBCEP7C",112,0)
 .. I $P(Z0,U,8)="E",IBEFTFL'="A" S IB("*N/A*",$P(Z0,U,4),+$P(Z0,U,5),$S($P(Z0,U,3)]"":$P(Z0,U,3),1:"*N/A*"))=Z
"RTN","IBCEP7C",113,0)
 .. S IB($P(Z0,U,6),$P(Z0,U,4),+$P(Z0,U,5),$S($P(Z0,U,3)]"":$P(Z0,U,3),1:"*N/A*"))=Z
"RTN","IBCEP7C",114,0)
 . ;
"RTN","IBCEP7C",115,0)
 . ; count them
"RTN","IBCEP7C",116,0)
 . I IBFUNC="A",$P(Z0,U,8)=IBEFTFL,IBDIV=$P(Z0,U,5)!(IBDIV=0&($P(Z0,U,5)="")) D
"RTN","IBCEP7C",117,0)
 .. I ".1.2."[("."_$P(Z0,U,4)_".") S IBCNTADD($P(Z0,U,4))=$G(IBCNTADD($P(Z0,U,4)))+1 Q
"RTN","IBCEP7C",118,0)
 .. N I
"RTN","IBCEP7C",119,0)
 .. F I=1,2 S IBCNTADD(I)=$G(IBCNTADD(I))+1
"RTN","IBCEP7C",120,0)
 ; Check for duplications
"RTN","IBCEP7C",121,0)
 S IBOK=1
"RTN","IBCEP7C",122,0)
 ; Don't check if nothing is being changed.  The ID itself can be changed after return to calling program.
"RTN","IBCEP7C",123,0)
 I IBFUNC="E" S Z0=$G(^IBA(355.92,IBDA,0)) I $P(Z0,U,3)=IBCAREUN!($P(Z0,U,3)=""&(IBCAREUN="*N/A*")),IBFORM=$P(Z0,U,4),IBDIV=$P(Z0,U,5),IBITYP=$P(Z0,U,6) G FLDSQ
"RTN","IBCEP7C",124,0)
 I $G(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),IBFORM,IBDIV,IBCAREUN)) D
"RTN","IBCEP7C",125,0)
 . N Z,ZPC8 S Z=$G(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),IBFORM,IBDIV,IBCAREUN))
"RTN","IBCEP7C",126,0)
 . S ZPC8=""
"RTN","IBCEP7C",127,0)
 . I +Z S ZPC8=$P($G(^IBA(355.92,Z,0)),U,8)
"RTN","IBCEP7C",128,0)
 . S IBOK="0^DUPLICATE"_U_ZPC8
"RTN","IBCEP7C",129,0)
 I IBOK,IBFORM=0,$S($D(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),1,IBDIV,IBCAREUN))!$D(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),2,IBDIV,IBCAREUN)):1,1:0) S IBOK="0^FORM^SPECIFIC"
"RTN","IBCEP7C",130,0)
 I IBOK,IBFORM'=0,IBFORM'=3,$S($D(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),0,IBDIV,IBCAREUN)):1,1:0) S IBOK="0^FORM^BOTH"
"RTN","IBCEP7C",131,0)
 ;
"RTN","IBCEP7C",132,0)
 S IBLIMIT=$S(IBEFTFL="A":6,IBEFTFL="LF":5,1:"")
"RTN","IBCEP7C",133,0)
 I IBOK,IBFUNC="A",IBEFTFL'="E" D
"RTN","IBCEP7C",134,0)
 . I ".1.2."[("."_IBFORM_".") D  Q
"RTN","IBCEP7C",135,0)
 .. I $G(IBCNTADD(IBFORM))>(IBLIMIT-1) S IBOK="0^LIMIT"
"RTN","IBCEP7C",136,0)
 . N I
"RTN","IBCEP7C",137,0)
 . I IBFORM=0 F I=1,2 I $G(IBCNTADD(I))>IBLIMIT S IBOK="0^LIMIT" Q
"RTN","IBCEP7C",138,0)
 ;
"RTN","IBCEP7C",139,0)
 I 'IBOK D
"RTN","IBCEP7C",140,0)
 . I $P(IBOK,U,2)="DUPLICATE" D  Q
"RTN","IBCEP7C",141,0)
 .. S DIR("A",1)="This ID combination is already defined",DIR("A",2)=""
"RTN","IBCEP7C",142,0)
 .. ; under "_$S($P(IBOK,U,3)="A":" Additonal IDs",$P(IBOK,U,3)="E":"Billing Provider Secondary ID",1:"VA Lab/Facility IDs")_$S(IBFUNC="A":" - try editing it instead",1:""),DIR("A",2)=" "
"RTN","IBCEP7C",143,0)
 . ;
"RTN","IBCEP7C",144,0)
 . I $P(IBOK,U,2)="BOTH" D  Q
"RTN","IBCEP7C",145,0)
 .. S DIR("A",1)="An ID combination for both form types already exists.  Delete this one",DIR("A",2)="before defining and form specific IDs"_$S(IBDIV:" for this division"),DIR("A",4)=" "
"RTN","IBCEP7C",146,0)
 . ;
"RTN","IBCEP7C",147,0)
 . I $P(IBOK,U,2)="FORM" D  Q
"RTN","IBCEP7C",148,0)
 .. I $P(IBOK,U,3)="BOTH" S DIR("A",1)="This ID already exists for both form types - Delete it to enter this ID for",DIR("A",2)=" a specific form type",DIR("A",3)=" " Q
"RTN","IBCEP7C",149,0)
 .. S DIR("A",1)="This ID already exists for a specific form type - Delete specific form type",DIR("A",2)=" ID(s) before entering one for both form types",DIR("A",3)=" "
"RTN","IBCEP7C",150,0)
 . ;     
"RTN","IBCEP7C",151,0)
 . I $P(IBOK,U,2)="LIMIT" D  Q
"RTN","IBCEP7C",152,0)
 .. S DIR("A",1)="Limit is "_IBLIMIT_" IDs for each form type",DIR("A",2)=" "
"RTN","IBCEP7C",153,0)
 .. I IBEFTFL="A" D
"RTN","IBCEP7C",154,0)
 ... S DIR("A",1)="A maximum of 6 Additional Billing Provider Sec IDs can be entered for each Form"
"RTN","IBCEP7C",155,0)
 ... S DIR("A",2)="Type.  Before you can add another ID, you must delete an existing ID."
"RTN","IBCEP7C",156,0)
 ... S DIR("A",3)=" "
"RTN","IBCEP7C",157,0)
 ;
"RTN","IBCEP7C",158,0)
 I 'IBOK S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","IBCEP7C",159,0)
 ;
"RTN","IBCEP7C",160,0)
FLDSQ Q +IBOK
"RTN","IBCEP9")
0^39^B73005418^B73023776
"RTN","IBCEP9",1,0)
IBCEP9 ;ALB/TMP - MASS UPDATE OF PROVIDER ID FROM FILE OR MANUAL ;08-NOV-00
"RTN","IBCEP9",2,0)
 ;;2.0;INTEGRATED BILLING;**137,200,320,348**;21-MAR-94;Build 5
"RTN","IBCEP9",3,0)
 ;
"RTN","IBCEP9",4,0)
EN ; Get parameters and mass input provider id by ins co
"RTN","IBCEP9",5,0)
 N A,DA,DIC,DIE,DIK,DIR,DR,POP,Q,Q0,X,Y,Y3,Z,Z0
"RTN","IBCEP9",6,0)
 N IBCND,IBCU,IBCT,IBDELIM,IBFILE,IBFILEN,IBFILEP,IBFORMAT
"RTN","IBCEP9",7,0)
 N IBFT,IBINFILE,IBINS,IBL,IBN,IBOK,IBOPEN,IBPOS,IBPT,IBQUIT
"RTN","IBCEP9",8,0)
 N IBQUIT1,IBQUOTES,IBRA,IBS,IBSA,IBSTART,IBSRC,IBVERIFY,IBVNAME
"RTN","IBCEP9",9,0)
 K ^TMP("IBPID_IN",$J),^TMP("IBPID-ERR",$J),^TMP("IBPID",$J)
"RTN","IBCEP9",10,0)
 S IBQUIT=0
"RTN","IBCEP9",11,0)
1 ; Select INSURANCE COMPANY NAME:
"RTN","IBCEP9",12,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",13,0)
 S IBQUIT1=0
"RTN","IBCEP9",14,0)
 S DIC("S")="I $P($G(^DIC(36,+Y,3)),U,13)'=""C"""
"RTN","IBCEP9",15,0)
 S DIC(0)="AEMQ",DIC="^DIC(36," D ^DIC
"RTN","IBCEP9",16,0)
 I Y'>0 G ENQ
"RTN","IBCEP9",17,0)
 S IBINS=+Y
"RTN","IBCEP9",18,0)
 S IBQUIT=$$LOCK^IBCEP9B(IBINS)
"RTN","IBCEP9",19,0)
 I IBQUIT,$G(IBINS) D  G 1
"RTN","IBCEP9",20,0)
 . D UNLOCK^IBCEP9B(IBINS)
"RTN","IBCEP9",21,0)
 . S IBINS="",IBQUIT=0
"RTN","IBCEP9",22,0)
 . W !!,"Unable to lock all associated insurance companies.",!,"Please try again later.",!!
"RTN","IBCEP9",23,0)
 ;
"RTN","IBCEP9",24,0)
2 ; get data source
"RTN","IBCEP9",25,0)
 S IBQUIT1=0
"RTN","IBCEP9",26,0)
 S DIR(0)="SA^M:Manual Entry;F:Entry from file"
"RTN","IBCEP9",27,0)
 S DIR("A")="PROVIDER ID DATA SOURCE: ",DIR("B")="Manual Entry"
"RTN","IBCEP9",28,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",29,0)
 I Y=""!("FM"'[Y)!IBQUIT1 D UNLOCK^IBCEP9B(IBINS) G 1
"RTN","IBCEP9",30,0)
 S IBSRC=Y,IBVERIFY=0
"RTN","IBCEP9",31,0)
 S IBVERIFY=(Y="M")
"RTN","IBCEP9",32,0)
 I 'IBVERIFY D  G:IBQUIT ENQ G:IBQUIT 2
"RTN","IBCEP9",33,0)
 . S DIR(0)="YA",DIR("A")="DO YOU WANT TO VIEW/VERIFY EACH ENTRY BEFORE IT GETS UPDATED?: "
"RTN","IBCEP9",34,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",35,0)
 . I Y=1 S IBVERIFY=1
"RTN","IBCEP9",36,0)
 ;
"RTN","IBCEP9",37,0)
 G:IBSRC="M" 4
"RTN","IBCEP9",38,0)
21 ; get parameters for file type
"RTN","IBCEP9",39,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",40,0)
 S IBQUIT1=0
"RTN","IBCEP9",41,0)
 S DIR(0)="SA^D:DELIMITED;F:FIXED LENGTH",DIR("B")="D",DIR("A")="SELECT FILE FORMAT: "
"RTN","IBCEP9",42,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",43,0)
 I IBQUIT1 G 2
"RTN","IBCEP9",44,0)
 S IBPOS=Y
"RTN","IBCEP9",45,0)
 I IBPOS="D" D  G:IBQUIT1 21
"RTN","IBCEP9",46,0)
 . S DIR(0)="FA^1:1",DIR("B")=",",DIR("A")="DELIMITER CHARACTER: "
"RTN","IBCEP9",47,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",48,0)
 . Q:IBQUIT1
"RTN","IBCEP9",49,0)
 . S $P(IBPOS,U,2)=Y
"RTN","IBCEP9",50,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="ARE QUOTES WITHIN A FIELD DOUBLE QUOTED?: "
"RTN","IBCEP9",51,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1,,,1)
"RTN","IBCEP9",52,0)
 . Q:IBQUIT1
"RTN","IBCEP9",53,0)
 . S $P(IBPOS,U,3)=Y
"RTN","IBCEP9",54,0)
3 ; select external file name
"RTN","IBCEP9",55,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",56,0)
 S IBQUIT1=0
"RTN","IBCEP9",57,0)
 G:IBSRC="M" 2
"RTN","IBCEP9",58,0)
 S DIR(0)="FA^1:60"
"RTN","IBCEP9",59,0)
 S DIR("A")="FILE NAME PATH: ",DIR("B")=$$PWD^%ZISH
"RTN","IBCEP9",60,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",61,0)
 G:IBQUIT1 2
"RTN","IBCEP9",62,0)
 S IBFILEP=$P(Y,U)
"RTN","IBCEP9",63,0)
 S DIR(0)="FA^1:60"
"RTN","IBCEP9",64,0)
 S DIR("A")="FILE NAME: "
"RTN","IBCEP9",65,0)
 S IBSA("*")=""
"RTN","IBCEP9",66,0)
 S DIR("?")="^S Y3=$$LIST^%ZISH(IBFILEP,""IBSA"",""IBRA"") I Y3=1 S Y3="""" F  S Y3=$O(IBRA(Y3)) Q:Y3=""""  W !,Y3"
"RTN","IBCEP9",67,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1,,,1)
"RTN","IBCEP9",68,0)
 G:IBQUIT1 2
"RTN","IBCEP9",69,0)
 S IBFILEN=$P(Y,U)
"RTN","IBCEP9",70,0)
 K ^TMP($J),IBRA,Y3
"RTN","IBCEP9",71,0)
 N Y S Y=$$FTG^%ZISH(IBFILEP,IBFILEN,$NA(^TMP($J,1)),2)
"RTN","IBCEP9",72,0)
 I Y=0 W !,"FILE ",IBFILEP,IBFILEN," COULD NOT BE FOUND OR COULD NOT BE OPENED",! G 3
"RTN","IBCEP9",73,0)
 S IBFILE=IO
"RTN","IBCEP9",74,0)
4 ; select Provider ID Type
"RTN","IBCEP9",75,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",76,0)
 S IBQUIT1=0
"RTN","IBCEP9",77,0)
 S DIR(0)="355.9,.06"
"RTN","IBCEP9",78,0)
 I IBSRC="M" S Z=$P($G(^IBE(355.97,+$$PPTYP^IBCEP0(IBINS),0)),U) S:Z'="" DIR("B")=Z
"RTN","IBCEP9",79,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",80,0)
 G:Y=""!IBQUIT1 3
"RTN","IBCEP9",81,0)
 S IBPTYP=$P(Y,U)
"RTN","IBCEP9",82,0)
5 ; select Forms Type
"RTN","IBCEP9",83,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",84,0)
 S IBQUIT1=0
"RTN","IBCEP9",85,0)
 S DIR(0)="355.9,.04r",DIR("B")="BOTH UB92 AND CMS-1500 FORMS"
"RTN","IBCEP9",86,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",87,0)
 G:IBQUIT1 4
"RTN","IBCEP9",88,0)
 I Y=""!("012"'[Y) G 5
"RTN","IBCEP9",89,0)
 S IBFT=$P(Y,U)
"RTN","IBCEP9",90,0)
6 ; select Bill Care Type
"RTN","IBCEP9",91,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",92,0)
 S IBQUIT1=0
"RTN","IBCEP9",93,0)
 S DIR(0)="355.9,.05r",DIR("B")="BOTH INPATIENT AND OUTPATIENT"
"RTN","IBCEP9",94,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",95,0)
 G:IBQUIT1 5
"RTN","IBCEP9",96,0)
 I Y=""!("0123"'[$P(Y,U)) G 6
"RTN","IBCEP9",97,0)
 S IBCT=$P(Y,U)
"RTN","IBCEP9",98,0)
 ;
"RTN","IBCEP9",99,0)
 S IBCND=$$CAREUN^IBCEP3(IBINS,IBPTYP,IBFT,IBCT,IBCT=3)
"RTN","IBCEP9",100,0)
7 ; get Care Unit
"RTN","IBCEP9",101,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",102,0)
 S IBQUIT1=0
"RTN","IBCEP9",103,0)
 I IBCND D  G:IBQUIT1 6
"RTN","IBCEP9",104,0)
 . S DIR(0)="355.9,.03O"
"RTN","IBCEP9",105,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",106,0)
 . Q:IBQUIT1
"RTN","IBCEP9",107,0)
 . S IBCU=$P(Y,U)
"RTN","IBCEP9",108,0)
 . I IBCU="" W !!,$J("",22),"***** WARNING *****",!," YOU WILL NEED TO MANUALLY ENTER THE CARE UNIT FOR EACH PROVIDER",!!
"RTN","IBCEP9",109,0)
 ;
"RTN","IBCEP9",110,0)
 ; Manual entry to get providers from VistA
"RTN","IBCEP9",111,0)
 I IBSRC="M" D MANUAL^IBCEP9B G:IBQUIT1 6
"RTN","IBCEP9",112,0)
 ; For 'OTHER' files ask position/length or delimiter/piece for data
"RTN","IBCEP9",113,0)
 I IBSRC="F" D  I IBQUIT1 G:'IBCND 6 G 7
"RTN","IBCEP9",114,0)
 . F Z="PROV. SSN^SSN^15^1","PROV. NAME^NAM^30","PROV. 1500 ID^PROF_ID^15","PROV. UB-92 ID^INST_ID^15" D  Q:IBQUIT1
"RTN","IBCEP9",115,0)
 .. I $P(IBPOS,U)'="D" D
"RTN","IBCEP9",116,0)
 ... N X
"RTN","IBCEP9",117,0)
 ... I IBFT=0!(IBFT=1) Q:Z["PROF_ID"  I Z["INST_ID" S $P(Z,U)="PROV. ID"
"RTN","IBCEP9",118,0)
 ... I IBFT=2 Q:Z["INST_ID"
"RTN","IBCEP9",119,0)
 ... S DIR("A")="START POSITION OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",120,0)
 ... S DIR(0)="NA"_$S($P(Z,U,4)!($P(Z,U)["PROV. ID")!($P(Z,U)["_ID"):"",1:"O")_"^1:250"
"RTN","IBCEP9",121,0)
 ... W ! S X=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",122,0)
 ... Q:IBQUIT1
"RTN","IBCEP9",123,0)
 ... I X>0 D
"RTN","IBCEP9",124,0)
 .... S IBPOS($P(Z,U,2))=X
"RTN","IBCEP9",125,0)
 .... S DIR("A")="LENGTH OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",126,0)
 .... S DIR(0)="NA"_$S($P(Z,U,3):"^1:"_$P(Z,U,3),1:"")
"RTN","IBCEP9",127,0)
 .... S X=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",128,0)
 .... Q:IBQUIT1
"RTN","IBCEP9",129,0)
 .... S $P(IBPOS($P(Z,U,2)),U,2)=IBPOS($P(Z,U,2))+X-1
"RTN","IBCEP9",130,0)
 .. ;
"RTN","IBCEP9",131,0)
 .. I $P(IBPOS,U)="D" D
"RTN","IBCEP9",132,0)
 ... I IBFT=0!(IBFT=1) Q:Z["PROF_ID"  I Z["INST_ID" S $P(Z,U)="PROV. ID"
"RTN","IBCEP9",133,0)
 ... I IBFT=2 Q:Z["INST_ID"
"RTN","IBCEP9",134,0)
 ... W ! S DIR("A")="STARTING '"_$P(IBPOS,U,2)_"' PIECE # OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",135,0)
 ... S DIR(0)="NA"_$S($P(Z,U,4)!($P(Z,U)["PROV. ID")!($P(Z,U)["_ID"):"",1:"O")
"RTN","IBCEP9",136,0)
 ... S X=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",137,0)
 ... Q:IBQUIT1
"RTN","IBCEP9",138,0)
 ... I X>0 D
"RTN","IBCEP9",139,0)
 .... S (DIR("B"),IBPOS($P(Z,U,2)))=X
"RTN","IBCEP9",140,0)
 .... S DIR("A")="ENDING '"_$P(IBPOS,U,2)_"' PIECE # OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",141,0)
 .... S DIR(0)="NA"_$S($P(Z,U,4):"",1:"O")_U_(IBPOS($P(Z,U,2)))_":99"
"RTN","IBCEP9",142,0)
 .... S DIR("?")="JUST PRESS THE ENTER KEY IF THIS FIELD IS CONTAINED IN ONLY 1 PIECE"
"RTN","IBCEP9",143,0)
 .... S Y=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",144,0)
 .... Q:IBQUIT1
"RTN","IBCEP9",145,0)
 .... W ! I Y>0,Y'=IBPOS($P(Z,U,2)) S $P(IBPOS($P(Z,U,2)),U,2)=Y
"RTN","IBCEP9",146,0)
 .. ;
"RTN","IBCEP9",147,0)
 . Q:IBQUIT1
"RTN","IBCEP9",148,0)
 . D READFILE^IBCEP9B
"RTN","IBCEP9",149,0)
 . ;
"RTN","IBCEP9",150,0)
P1 ;
"RTN","IBCEP9",151,0)
 S Z="" F  S Z=$O(^TMP("IBPID_IN",$J,Z)) Q:Z=""  S Z0=0 F  S Z0=$O(^TMP("IBPID_IN",$J,Z,Z0)) Q:'Z0  S Q=$G(^(Z0)) D  G:IBQUIT ENQ
"RTN","IBCEP9",152,0)
 . ;
"RTN","IBCEP9",153,0)
 . I IBSRC="M" D  Q
"RTN","IBCEP9",154,0)
 .. D DISP^IBCEP9B(Q,0,IBINS,IBPTYP,IBFT,IBCT,$G(IBCU),,IBSRC)
"RTN","IBCEP9",155,0)
 .. ; Manually add IDs
"RTN","IBCEP9",156,0)
 .. S IBN=$$DUP(+Z0_";VA(200,",IBINS,$S($G(IBCU)'="":IBCU,1:"*N/A*"),IBFT,IBCT,IBPTYP)
"RTN","IBCEP9",157,0)
 .. I 'IBN D  Q:IBQUIT!(IBN'>0)
"RTN","IBCEP9",158,0)
 ... S IBN=$$ADDID^IBCEP9B(Z0,IBINS,$G(IBCU),IBFT,IBCT,IBPTYP,,.IBQUIT)
"RTN","IBCEP9",159,0)
 .. S DIE="^IBA(355.9,",DR=".07",DA=+IBN D ^DIE
"RTN","IBCEP9",160,0)
 .. I $D(Y)!($P($G(^IBA(355.9,+IBN,0)),U,7)="") D
"RTN","IBCEP9",161,0)
 ... I $P(IBN,U,3) S DA=+IBN,DIK="^IBA(355.9," D ^DIK
"RTN","IBCEP9",162,0)
 ... S DIR(0)="YA",DIR("B")="NO",DIR("A")="DO YOU WANT TO STOP ENTERING PROVIDER IDs?: "
"RTN","IBCEP9",163,0)
 ... S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1,,1,1)
"RTN","IBCEP9",164,0)
 ... I Y=1 S IBQUIT=1
"RTN","IBCEP9",165,0)
 .. S IBID=$P($G(^IBA(355.9,+IBN,0)),U,7)
"RTN","IBCEP9",166,0)
 .. S:$L(IBID) ^TMP("IBPID_IN",$J,U,Z0,"INST_ID")=IBID
"RTN","IBCEP9",167,0)
 .. I IBID="" K ^TMP("IBPID_IN",$J,U,Z0)
"RTN","IBCEP9",168,0)
 .. I IBQUIT=1 F  S Z0=$O(^TMP("IBPID_IN",$J,U,Z0)) Q:Z0=""  K ^TMP("IBPID_IN",$J,U,Z0) ; user wants to stop, remove all remaining names from list
"RTN","IBCEP9",169,0)
 . ;
"RTN","IBCEP9",170,0)
 . S IBOK=1
"RTN","IBCEP9",171,0)
 . N IBX,IBID
"RTN","IBCEP9",172,0)
 . M IBX=^TMP("IBPID_IN",$J,Z,Z0)
"RTN","IBCEP9",173,0)
 . I IBSRC="F" S IBID=$S(IBFT=0!(IBFT=1):$G(IBX("INST_ID")),1:$G(IBX("PROF_ID")))
"RTN","IBCEP9",174,0)
 . I $G(IBVERIFY) D  ; Display record, ask OK to file id's
"RTN","IBCEP9",175,0)
 .. D DISP^IBCEP9B(Q,0,IBINS,IBPTYP,IBFT,IBCT,$G(IBCU),,IBSRC)
"RTN","IBCEP9",176,0)
 .. W !,"PROVIDER ID: ",IBID
"RTN","IBCEP9",177,0)
 .. S DIR("A")="OK TO FILE THIS ID FOR THIS PROVIDER?: ",DIR(0)="YA",DIR("B")="NO"
"RTN","IBCEP9",178,0)
 .. S Y=$$DIR(.DIR,,,,1,1)
"RTN","IBCEP9",179,0)
 .. I Y'=1 D  Q  ; Send to error array
"RTN","IBCEP9",180,0)
 ... S IBOK=0
"RTN","IBCEP9",181,0)
 ... S ^TMP("IBPID-ERR",$J,2,$P(IBX,U),$P(IBX,U,2)_" ","PROV ID")=IBID
"RTN","IBCEP9",182,0)
 ... S ^TMP("IBPID_IN",$J,U,Z0,0)="NO PRINT"
"RTN","IBCEP9",183,0)
 ... N Z1
"RTN","IBCEP9",184,0)
 ... S Z1="" F  S Z1=$O(IBX(Z1)) Q:Z1=""  I $G(IBX(Z1))'="",Z1'["_ID" S ^TMP("IBPID-ERR",$J,2,$P(IBX,U),$P(IBX,U,2)_" ",Z1)=IBX(Z1)
"RTN","IBCEP9",185,0)
 . I IBOK D  ; Add/update the record
"RTN","IBCEP9",186,0)
 .. I IBSRC="F" D
"RTN","IBCEP9",187,0)
 ... I IBID'="" D
"RTN","IBCEP9",188,0)
 .... S IBN=$$ADDID^IBCEP9B(+Z0,IBINS,$G(IBCU),IBFT,IBCT,IBPTYP,,.IBQUIT)
"RTN","IBCEP9",189,0)
 .... I IBQUIT D:IBN>0  Q
"RTN","IBCEP9",190,0)
 ..... S DA=+IBN,DIK="^IBA(355.9," D ^DIK
"RTN","IBCEP9",191,0)
 .... I IBN>0 S DIE="^IBA(355.9,",DA=+IBN,DR=".07////"_IBID D ^DIE
"RTN","IBCEP9",192,0)
 .. ;
"RTN","IBCEP9",193,0)
 ;
"RTN","IBCEP9",194,0)
ENQ ; Print report, exit
"RTN","IBCEP9",195,0)
 I $G(IBINS) D
"RTN","IBCEP9",196,0)
 . D COPY^IBCEPCID(IBINS)
"RTN","IBCEP9",197,0)
 . D UNLOCK^IBCEP9B(IBINS)
"RTN","IBCEP9",198,0)
 ;
"RTN","IBCEP9",199,0)
 I ($D(^TMP("IBPID-ERR",$J)))!($D(^TMP("IBPID_IN",$J))) D
"RTN","IBCEP9",200,0)
 . N %ZIS,ZTSAVE,ZTRTN,ZTDESC,IBDUZ
"RTN","IBCEP9",201,0)
 . S IBDUZ=$G(DUZ)
"RTN","IBCEP9",202,0)
 . S %ZIS="QM" D ^%ZIS Q:POP
"RTN","IBCEP9",203,0)
 . I $D(IO("Q")) K IO("Q") D  D ^%ZTLOAD K ZTSK D HOME^%ZIS Q
"RTN","IBCEP9",204,0)
 .. S ZTRTN="PRTERR^IBCEP9B",ZTSAVE("^TMP(""IBPID-ERR"",$J,")=""
"RTN","IBCEP9",205,0)
 .. S ZTSAVE("^TMP(""IBPID_IN"",$J,")="",ZTSAVE("IB*")=""
"RTN","IBCEP9",206,0)
 .. S ZTDESC="IB - PROVIDER ID BATCH UPDATE ERROR LOG"
"RTN","IBCEP9",207,0)
 . U IO
"RTN","IBCEP9",208,0)
 . D PRTERR^IBCEP9B
"RTN","IBCEP9",209,0)
 K ^TMP("IBPID_IN",$J),^TMP("IBPID-ERR",$J),^TMP("IBPID",$J)
"RTN","IBCEP9",210,0)
 U IO(0)
"RTN","IBCEP9",211,0)
 Q
"RTN","IBCEP9",212,0)
 ;
"RTN","IBCEP9",213,0)
DUP(IBPRV,IBINS,IBCU,IBFT,IBCT,IBPTYP) ; Check if provider id record already exists in file 355.9
"RTN","IBCEP9",214,0)
 Q +$O(^IBA(355.9,"AUNIQ",IBPRV,IBINS,IBCU,IBFT,IBCT,IBPTYP,0))
"RTN","IBCEP9",215,0)
 ;
"RTN","IBCEP9",216,0)
ERREOF ; Traps EOF error on file read for non-DSM systems
"RTN","IBCEP9",217,0)
 N IBERROR S IBERROR=$$EC^%ZOSV
"RTN","IBCEP9",218,0)
 I IBERROR["ENDOFFILE" D CLOSE(.IBOPEN) G ENQ
"RTN","IBCEP9",219,0)
 D ^%ZTER
"RTN","IBCEP9",220,0)
 Q
"RTN","IBCEP9",221,0)
 ;
"RTN","IBCEP9",222,0)
CLOSE(IBOPEN) ; Close file
"RTN","IBCEP9",223,0)
 D CLOSE^%ZISH("IBINFILE") S IBOPEN=0
"RTN","IBCEP9",224,0)
 Q
"RTN","IBCEP9",225,0)
 ;
"RTN","IBCEP9",226,0)
DIR(DIR,IBQUIT,IBQUIT1,X,IBW1,IBW2) ; Standard call to ^DIR
"RTN","IBCEP9",227,0)
 ;  Inputs DIR array
"RTN","IBCEP9",228,0)
 ;  Returns IBQUIT,IBQUIT1,X if passed by reference
"RTN","IBCEP9",229,0)
 ;    AND
"RTN","IBCEP9",230,0)
 ;      FUNCTION returns the value of Y
"RTN","IBCEP9",231,0)
 ;  IBW1 = 1 if initial write ! should be done
"RTN","IBCEP9",232,0)
 ;  IBW2 = 1 if last write ! should be done
"RTN","IBCEP9",233,0)
 N DIROUT,DTOUT,DUOUT,DA
"RTN","IBCEP9",234,0)
 W:$G(IBW1) ! D ^DIR K DIR W:$G(IBW2) !
"RTN","IBCEP9",235,0)
 S (IBQUIT,IBQUIT1)=0
"RTN","IBCEP9",236,0)
 S DIR("?")="Enter '^' to back up one prompt or '^^' to exit the option"
"RTN","IBCEP9",237,0)
 I $D(DIROUT) S (IBQUIT,IBQUIT1)=1
"RTN","IBCEP9",238,0)
 I $D(DTOUT)!$D(DUOUT) S IBQUIT1=1
"RTN","IBCEP9",239,0)
 Q Y
"RTN","IBCEP9",240,0)
 ;
"RTN","IBCEP9",241,0)
ERR ; Error list
"RTN","IBCEP9",242,0)
 ;; INVALID OR MISSING SSN - NO PROVIDER MATCH FOUND
"RTN","IBCEP9",243,0)
 ;; NO UPDATE PER USER REQUEST
"RTN","IBCEP9",244,0)
 ;;
"RTN","IBCEPA")
0^7^B50420799^B50476758
"RTN","IBCEPA",1,0)
IBCEPA ;ALB/WCJ - Provider ID functions - Care Units ;21-OCT-2005
"RTN","IBCEPA",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348**;21-MAR-94;Build 5
"RTN","IBCEPA",3,0)
EN ; -- main entry point for IBCE 2ND PRVID CARE UNIT MAINT
"RTN","IBCEPA",4,0)
 D EN^VALM("IBCE 2ND PRVID CARE UNIT MAINT")
"RTN","IBCEPA",5,0)
 Q
"RTN","IBCEPA",6,0)
 ;
"RTN","IBCEPA",7,0)
HDR ; -- header code
"RTN","IBCEPA",8,0)
 K VALMHDR
"RTN","IBCEPA",9,0)
 S VALMHDR(1)=" "
"RTN","IBCEPA",10,0)
 S VALMHDR(2)="Insurance Co: "_$S('$G(IBALL)&$G(IBINS):$P($G(^DIC(36,+IBINS,0)),U),1:"ALL")
"RTN","IBCEPA",11,0)
 Q
"RTN","IBCEPA",12,0)
 ;
"RTN","IBCEPA",13,0)
INIT ; -- init variables and list array
"RTN","IBCEPA",14,0)
 N DIR,Y
"RTN","IBCEPA",15,0)
 I '$G(IBINS) D  I +Y<0 S VALMQUIT=1 Q
"RTN","IBCEPA",16,0)
 . S DIR(0)="PA^DIC(36,:AEMQ",DIR("A")="Select INSURANCE CO: ",DIR("?")="Select an INSURANCE CO to display its care units"
"RTN","IBCEPA",17,0)
 . D ^DIR K DIR
"RTN","IBCEPA",18,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=-2 Q
"RTN","IBCEPA",19,0)
 . I Y>0 S IBINS=+Y Q
"RTN","IBCEPA",20,0)
 ;
"RTN","IBCEPA",21,0)
 D BLD
"RTN","IBCEPA",22,0)
 Q
"RTN","IBCEPA",23,0)
 ;
"RTN","IBCEPA",24,0)
BLD ;
"RTN","IBCEPA",25,0)
 D CLEAN^VALM10
"RTN","IBCEPA",26,0)
 K ^TMP("IBPRV_CU",$J)
"RTN","IBCEPA",27,0)
 N TAR,MSG,I,D0,IBLCT,Z,DIV,SCREEN
"RTN","IBCEPA",28,0)
 ;
"RTN","IBCEPA",29,0)
 S VALMBG=1
"RTN","IBCEPA",30,0)
 ;
"RTN","IBCEPA",31,0)
 ; Get all care units for this insurance company that have a division
"RTN","IBCEPA",32,0)
 ; If there is no division, then it is part of the other care units code (IBCEP4)
"RTN","IBCEPA",33,0)
 ; 
"RTN","IBCEPA",34,0)
 S SCREEN="I $P(^(0),U,4)'="""",$P(^(0),U,3)=IBINS"
"RTN","IBCEPA",35,0)
 D LIST^DIC(355.95,,"@;.01;.02;.04",,,,,,SCREEN,,"TAR")
"RTN","IBCEPA",36,0)
 ;
"RTN","IBCEPA",37,0)
 I '+TAR("DILIST",0) D
"RTN","IBCEPA",38,0)
 . D SET^VALM10(1,"No CARE UNITs found for this Insurance Company")
"RTN","IBCEPA",39,0)
 ;
"RTN","IBCEPA",40,0)
 I +TAR("DILIST",0) D
"RTN","IBCEPA",41,0)
 . S IBCT=0
"RTN","IBCEPA",42,0)
 . F VALMCNT=1:1:+TAR("DILIST",0) D
"RTN","IBCEPA",43,0)
 .. S ^TMP("IBPRV_CU",$J,"SORT",TAR("DILIST","ID",VALMCNT,.04),TAR("DILIST",2,VALMCNT))=VALMCNT
"RTN","IBCEPA",44,0)
 . S DIV="" F  S DIV=$O(^TMP("IBPRV_CU",$J,"SORT",DIV)) Q:DIV=""  D
"RTN","IBCEPA",45,0)
 .. S Z="Division: "_DIV
"RTN","IBCEPA",46,0)
 .. S IBCT=IBCT+1
"RTN","IBCEPA",47,0)
 .. D SET^VALM10(IBCT,Z)
"RTN","IBCEPA",48,0)
 .. S D0=0 F  S D0=$O(^TMP("IBPRV_CU",$J,"SORT",DIV,D0)) Q:'D0  D
"RTN","IBCEPA",49,0)
 ... S IN=^TMP("IBPRV_CU",$J,"SORT",DIV,D0)
"RTN","IBCEPA",50,0)
 ... S Z=$J("",2)
"RTN","IBCEPA",51,0)
 ... S Z=Z_$E(TAR("DILIST","ID",IN,.01),1,36)
"RTN","IBCEPA",52,0)
 ... S Z=Z_$J("",40-$L(Z))
"RTN","IBCEPA",53,0)
 ... S Z=Z_$E(TAR("DILIST","ID",IN,.02),1,38)
"RTN","IBCEPA",54,0)
 ... S IBCT=IBCT+1
"RTN","IBCEPA",55,0)
 ... D SET^VALM10(IBCT,Z)
"RTN","IBCEPA",56,0)
 Q
"RTN","IBCEPA",57,0)
 ;
"RTN","IBCEPA",58,0)
HELP ; -- help code
"RTN","IBCEPA",59,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCEPA",60,0)
 Q
"RTN","IBCEPA",61,0)
 ;
"RTN","IBCEPA",62,0)
EXIT ; -- exit code
"RTN","IBCEPA",63,0)
 D CLEAN^VALM10
"RTN","IBCEPA",64,0)
 Q
"RTN","IBCEPA",65,0)
 ;
"RTN","IBCEPA",66,0)
EXPND ; -- expand code
"RTN","IBCEPA",67,0)
 Q
"RTN","IBCEPA",68,0)
 ;
"RTN","IBCEPA",69,0)
NEW ; Add care unit
"RTN","IBCEPA",70,0)
 ; Assumes IBINS is defined as ins co ien (file 36)
"RTN","IBCEPA",71,0)
 ; IB = 0 or null if called from list manager, 1 if not
"RTN","IBCEPA",72,0)
 N DIC,DIR,X,Y,Z,DA,DR,DIE,DO,DD,DLAYGO,IB95,IBADD,IBOK,IBDIV,MAIN,IBDIVNM
"RTN","IBCEPA",73,0)
 ;
"RTN","IBCEPA",74,0)
 D FULL^VALM1
"RTN","IBCEPA",75,0)
 ; Add an entry - either new care unit/ins co or a combination for
"RTN","IBCEPA",76,0)
 ; existing care unit/ins co
"RTN","IBCEPA",77,0)
 ;
"RTN","IBCEPA",78,0)
 S MAIN=$$MAIN^IBCEP2B()
"RTN","IBCEPA",79,0)
 S MAIN=$$EXTERNAL^DILFD(355.92,.05,"",MAIN)
"RTN","IBCEPA",80,0)
 S DIC=40.8,DIC("A")="Enter the Division for this Care Unit: ",DIC("B")=MAIN,DIC(0)="AEMQ"
"RTN","IBCEPA",81,0)
 D ^DIC
"RTN","IBCEPA",82,0)
 I Y'>0 G NEWQ
"RTN","IBCEPA",83,0)
 S IBDIV=+Y
"RTN","IBCEPA",84,0)
 S IBDIVNM=$$EXTERNAL^DILFD(355.92,.05,"",IBDIV)
"RTN","IBCEPA",85,0)
 ;
"RTN","IBCEPA",86,0)
 N SCREEN,TAR,MESS,I
"RTN","IBCEPA",87,0)
 S SCREEN="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)"
"RTN","IBCEPA",88,0)
 D LIST^DIC(355.95,,.01,,,,,,SCREEN,,"TAR")
"RTN","IBCEPA",89,0)
 ;
"RTN","IBCEPA",90,0)
ACU K DIR
"RTN","IBCEPA",91,0)
 S I=0
"RTN","IBCEPA",92,0)
 I $G(TAR("DILIST",0)) D 
"RTN","IBCEPA",93,0)
 . S DIR("?",1)="Current Entries are:"
"RTN","IBCEPA",94,0)
 . F I=2:1 Q:'$D(TAR("DILIST",1,I-1))  S DIR("?",I)="     "_TAR("DILIST",1,I-1)
"RTN","IBCEPA",95,0)
 . S DIR("?",I)=" "
"RTN","IBCEPA",96,0)
 ;
"RTN","IBCEPA",97,0)
 S DIR("?",I+1)="You may enter the name of a new Care Unit for this Insurance Company."
"RTN","IBCEPA",98,0)
 S DIR("?",I+2)="You can then define a Billing Provider Secondary ID - Billing Screen 3 - for"
"RTN","IBCEPA",99,0)
 S DIR("?")="this Care Unit and Insurance Company using the Insurance Company Editor."
"RTN","IBCEPA",100,0)
 S DIR("A")="Enter the Care Unit name"
"RTN","IBCEPA",101,0)
 S DIR(0)="FO^1:30"
"RTN","IBCEPA",102,0)
 D ^DIR
"RTN","IBCEPA",103,0)
 I X=""!$G(DUOUT)!$G(DTOUT)!$G(DIROUT) G NEWQ
"RTN","IBCEPA",104,0)
 S CAREUNIT=X
"RTN","IBCEPA",105,0)
 ; 
"RTN","IBCEPA",106,0)
 ; At this point, we have X and it'a not a ? or ^
"RTN","IBCEPA",107,0)
 ;
"RTN","IBCEPA",108,0)
 K DIC
"RTN","IBCEPA",109,0)
 S DIC="^IBA(355.95,",DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="EX"
"RTN","IBCEPA",110,0)
 D ^DIC
"RTN","IBCEPA",111,0)
 ;
"RTN","IBCEPA",112,0)
 ; Check if we have an exisitng entry and if so, get out of Dodge (This option was for new care units)
"RTN","IBCEPA",113,0)
 I Y>0 D  G ACU
"RTN","IBCEPA",114,0)
 . D DISPMESS("This action is for adding new entries, not editing existing entries.")
"RTN","IBCEPA",115,0)
 ;
"RTN","IBCEPA",116,0)
 ; New entry , validate field
"RTN","IBCEPA",117,0)
 N TAR2
"RTN","IBCEPA",118,0)
 D FIELD^DID(355.95,.01,"N","INPUT TRANSFORM","TAR2")
"RTN","IBCEPA",119,0)
 S X=CAREUNIT
"RTN","IBCEPA",120,0)
 X TAR2("INPUT TRANSFORM")
"RTN","IBCEPA",121,0)
 I '$D(X) D  G ACU  ; Failed input transform
"RTN","IBCEPA",122,0)
 . D DISPMESS("Invalid Format.")
"RTN","IBCEPA",123,0)
 ;
"RTN","IBCEPA",124,0)
 K DIR
"RTN","IBCEPA",125,0)
 S DIR("A")="Are you adding '"_X_"' as a new Care Unit for '"_IBDIVNM_"'"
"RTN","IBCEPA",126,0)
 S DIR("B")="N"
"RTN","IBCEPA",127,0)
 S DIR(0)="Y"
"RTN","IBCEPA",128,0)
 D ^DIR
"RTN","IBCEPA",129,0)
 I Y=0 G ACU
"RTN","IBCEPA",130,0)
 I Y["^" G NEWQ
"RTN","IBCEPA",131,0)
 ;
"RTN","IBCEPA",132,0)
 ; If it got this far, we have an exact match or a new entry.   
"RTN","IBCEPA",133,0)
 S X=CAREUNIT
"RTN","IBCEPA",134,0)
 S DIC="^IBA(355.95,",DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="XL",DLAYGO=355.95
"RTN","IBCEPA",135,0)
 S DIC("DR")=".03////"_+$G(IBINS)_";.04////"_$G(IBDIV)
"RTN","IBCEPA",136,0)
 D ^DIC
"RTN","IBCEPA",137,0)
 I Y>0 D
"RTN","IBCEPA",138,0)
 . S DA=+Y,DIE="^IBA(355.95,"
"RTN","IBCEPA",139,0)
 . S DR=".02Enter the Care Unit Description"
"RTN","IBCEPA",140,0)
 . D ^DIE
"RTN","IBCEPA",141,0)
 D BLD
"RTN","IBCEPA",142,0)
 ;
"RTN","IBCEPA",143,0)
NEWQ S VALMBCK="R"
"RTN","IBCEPA",144,0)
 Q
"RTN","IBCEPA",145,0)
 ;
"RTN","IBCEPA",146,0)
CHANGE ; Edit care unit
"RTN","IBCEPA",147,0)
 ; Assumes IBINS is defined as ins co ien (file 36)
"RTN","IBCEPA",148,0)
 ; 
"RTN","IBCEPA",149,0)
 D FULL^VALM1
"RTN","IBCEPA",150,0)
 ;
"RTN","IBCEPA",151,0)
 N X,Y,Z,DA,DD,DIC,DIK,DIR,IBDIV,CAREUNIT,SCREEN,TAR,DIVISION
"RTN","IBCEPA",152,0)
 ;
"RTN","IBCEPA",153,0)
 S SCREEN="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)]"""""
"RTN","IBCEPA",154,0)
 D LIST^DIC(355.95,,".01;.04",,,,,,SCREEN,,"TAR")
"RTN","IBCEPA",155,0)
 ;
"RTN","IBCEPA",156,0)
 I '+$G(TAR("DILIST",0)) D  G CHANGEQ
"RTN","IBCEPA",157,0)
 .D DISPMESS("No Care Units Defined for this insurance company.")
"RTN","IBCEPA",158,0)
 ;
"RTN","IBCEPA",159,0)
 ; Store all Divisons with at least one care unit in DIVISION array
"RTN","IBCEPA",160,0)
 F I=1:1 Q:'$D(TAR("DILIST","ID",I,.04))  D
"RTN","IBCEPA",161,0)
 . S DIVISION(TAR("DILIST","ID",I,.04))=""
"RTN","IBCEPA",162,0)
 ;
"RTN","IBCEPA",163,0)
 ; Only allow divisions that have care units to be selected
"RTN","IBCEPA",164,0)
 S DIC=40.8
"RTN","IBCEPA",165,0)
 S DIC("A")="Enter the Division for this Care Unit: "
"RTN","IBCEPA",166,0)
 S DIC(0)="AEMQ"
"RTN","IBCEPA",167,0)
 S DIC("S")="I $D(DIVISION($P(^(0),U)))"
"RTN","IBCEPA",168,0)
 D ^DIC
"RTN","IBCEPA",169,0)
 I Y'>0 G CHANGEQ
"RTN","IBCEPA",170,0)
 S IBDIV=+Y
"RTN","IBCEPA",171,0)
 ;
"RTN","IBCEPA",172,0)
 S DIC("A")="Enter the Care Unit name: "
"RTN","IBCEPA",173,0)
 S DIC=355.95,DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="AEMQ"
"RTN","IBCEPA",174,0)
 D ^DIC
"RTN","IBCEPA",175,0)
 I Y<1 G CHANGEQ
"RTN","IBCEPA",176,0)
 ;
"RTN","IBCEPA",177,0)
 S DA=+Y,DIE=355.95
"RTN","IBCEPA",178,0)
 S DR=".01Care Unit;.04Division;.02Description"
"RTN","IBCEPA",179,0)
 D ^DIE
"RTN","IBCEPA",180,0)
 ;
"RTN","IBCEPA",181,0)
 D BLD
"RTN","IBCEPA",182,0)
 ;
"RTN","IBCEPA",183,0)
CHANGEQ S VALMBCK="R"
"RTN","IBCEPA",184,0)
 Q
"RTN","IBCEPA",185,0)
 ;
"RTN","IBCEPA",186,0)
DEL ; Delete a Care Unit
"RTN","IBCEPA",187,0)
 ; Assumes IBINS is defined as ins co ien (file 36)
"RTN","IBCEPA",188,0)
 ; 
"RTN","IBCEPA",189,0)
 D FULL^VALM1
"RTN","IBCEPA",190,0)
 N X,Y,Z,DA,DD,DIC,DIK,DIR,IBDIV,CAREUNIT,SCREEN,TAR,DIVISION
"RTN","IBCEPA",191,0)
 ;
"RTN","IBCEPA",192,0)
 S SCREEN="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)]"""""
"RTN","IBCEPA",193,0)
 D LIST^DIC(355.95,,".01;.04",,,,,,SCREEN,,"TAR")
"RTN","IBCEPA",194,0)
 ;
"RTN","IBCEPA",195,0)
 I '+$G(TAR("DILIST",0)) D  G DELQ
"RTN","IBCEPA",196,0)
 .D DISPMESS("No Care Units Defined for this insurance company.")
"RTN","IBCEPA",197,0)
 ;
"RTN","IBCEPA",198,0)
 ; Store all Divisons with at least one care unit in DIVISION array
"RTN","IBCEPA",199,0)
 F I=1:1 Q:'$D(TAR("DILIST","ID",I,.04))  D
"RTN","IBCEPA",200,0)
 . S DIVISION(TAR("DILIST","ID",I,.04))=""
"RTN","IBCEPA",201,0)
 ;
"RTN","IBCEPA",202,0)
 ; Only allow divisions that have care units to be selected
"RTN","IBCEPA",203,0)
 S DIC=40.8
"RTN","IBCEPA",204,0)
 S DIC("A")="Enter the Division for this Care Unit: "
"RTN","IBCEPA",205,0)
 S DIC(0)="AEMQ"
"RTN","IBCEPA",206,0)
 S DIC("S")="I $D(DIVISION($P(^(0),U)))"
"RTN","IBCEPA",207,0)
 D ^DIC
"RTN","IBCEPA",208,0)
 I Y'>0 G DELQ
"RTN","IBCEPA",209,0)
 S IBDIV=+Y
"RTN","IBCEPA",210,0)
 ;
"RTN","IBCEPA",211,0)
 K DIC
"RTN","IBCEPA",212,0)
 S DIC("A")="Enter the Care Unit name: "
"RTN","IBCEPA",213,0)
 S DIC=355.95,DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="AEMQ"
"RTN","IBCEPA",214,0)
 D ^DIC
"RTN","IBCEPA",215,0)
 I Y<1 G DELQ
"RTN","IBCEPA",216,0)
 S CAREUNIT=+Y
"RTN","IBCEPA",217,0)
 ;
"RTN","IBCEPA",218,0)
 I $D(^IBA(355.92,"AC",+Y)) D  G DELQ
"RTN","IBCEPA",219,0)
 . S DIR(0)="EA"
"RTN","IBCEPA",220,0)
 . S DIR("A",1)="IDs that are assigned to the Care Unit in the Insurance Company Editor must be"
"RTN","IBCEPA",221,0)
 . S DIR("A",2)="deleted before deleting the Care Unit."
"RTN","IBCEPA",222,0)
 . S DIR("A")="Press return to continue "
"RTN","IBCEPA",223,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPA",224,0)
 ;
"RTN","IBCEPA",225,0)
 S DIR("A")="OK to Delete: "
"RTN","IBCEPA",226,0)
 S DIR("B")="No"
"RTN","IBCEPA",227,0)
 S DIR(0)="YAO"
"RTN","IBCEPA",228,0)
 D ^DIR
"RTN","IBCEPA",229,0)
 I '$G(Y) G DELQ
"RTN","IBCEPA",230,0)
 K DIR
"RTN","IBCEPA",231,0)
 ;
"RTN","IBCEPA",232,0)
 S DA=CAREUNIT
"RTN","IBCEPA",233,0)
 S DIK="^IBA("_355.95_","
"RTN","IBCEPA",234,0)
 D ^DIK
"RTN","IBCEPA",235,0)
 ;
"RTN","IBCEPA",236,0)
 D BLD
"RTN","IBCEPA",237,0)
 ;
"RTN","IBCEPA",238,0)
DELQ S VALMBCK="R"
"RTN","IBCEPA",239,0)
 Q
"RTN","IBCEPA",240,0)
 ;
"RTN","IBCEPA",241,0)
DISPMESS(MESS) ;
"RTN","IBCEPA",242,0)
 N DIR,X,Y
"RTN","IBCEPA",243,0)
 S DIR(0)="EA",DIR("A",1)=MESS
"RTN","IBCEPA",244,0)
 S DIR("A")="PRESS ENTER to continue "
"RTN","IBCEPA",245,0)
 D ^DIR
"RTN","IBCEPA",246,0)
 Q
"RTN","IBCEPA",247,0)
 ;
"RTN","IBCEPB")
0^8^B7318616^B8186996
"RTN","IBCEPB",1,0)
IBCEPB ;ALB/WCJ - Insurance company ID parameters ;22-DEC-2005
"RTN","IBCEPB",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348**;21-MAR-94;Build 5
"RTN","IBCEPB",3,0)
EN ; -- main entry point for IBCE INSCO ID MAINT
"RTN","IBCEPB",4,0)
 D EN^VALM("IBCE INSCO ID MAINT")
"RTN","IBCEPB",5,0)
 Q
"RTN","IBCEPB",6,0)
 ;
"RTN","IBCEPB",7,0)
HDR ; -- header code
"RTN","IBCEPB",8,0)
 N PCF,PCDISP
"RTN","IBCEPB",9,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",10,0)
 S PCF=$P($G(^DIC(36,+IBCNS,3)),U,13),PCDISP=$S(PCF="P":"(Parent)",1:"")
"RTN","IBCEPB",11,0)
 S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBCNS,0)),U)_PCDISP
"RTN","IBCEPB",12,0)
 Q
"RTN","IBCEPB",13,0)
 ;
"RTN","IBCEPB",14,0)
INIT ; Initialize
"RTN","IBCEPB",15,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",16,0)
 N IBLCT
"RTN","IBCEPB",17,0)
 S IBLCT=0
"RTN","IBCEPB",18,0)
 ; Display the list
"RTN","IBCEPB",19,0)
 D SET1(.IBLCT,"Attending/Rendering Provider Secondary ID")
"RTN","IBCEPB",20,0)
 D SET1(.IBLCT,"Default ID (1500): "_$$GET1^DIQ(36,IBCNS,4.01))
"RTN","IBCEPB",21,0)
 D SET1(.IBLCT,"Default ID (UB92): "_$$GET1^DIQ(36,IBCNS,4.02))
"RTN","IBCEPB",22,0)
 D SET1(.IBLCT,"Require ID on Claim: "_$$GET1^DIQ(36,IBCNS,4.03))
"RTN","IBCEPB",23,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",24,0)
 D SET1(.IBLCT,"Referring Provider Secondary ID")
"RTN","IBCEPB",25,0)
 D SET1(.IBLCT,"Default ID (1500): "_$$GET1^DIQ(36,IBCNS,4.04))
"RTN","IBCEPB",26,0)
 D SET1(.IBLCT,"Require ID on Claim: "_$$GET1^DIQ(36,IBCNS,4.05))
"RTN","IBCEPB",27,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",28,0)
 D SET1(.IBLCT,"Billing Provider Secondary IDs")
"RTN","IBCEPB",29,0)
 D SET1(.IBLCT,"Use Att/Rend ID as Billing Provider Sec. ID (1500)?: "_$$GET1^DIQ(36,IBCNS,4.06))
"RTN","IBCEPB",30,0)
 D SET1(.IBLCT,"Use Att/Rend ID as Billing Provider Sec. ID (UB92)?: "_$$GET1^DIQ(36,IBCNS,4.08))
"RTN","IBCEPB",31,0)
 D SET1(.IBLCT,"Transmit no Billing Provider Sec ID for the following Electronic Plan Types:")
"RTN","IBCEPB",32,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCEPB",33,0)
 F I=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCEPB",34,0)
 . D SET1(.IBLCT,TAR("DILIST",1,I))
"RTN","IBCEPB",35,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",36,0)
 D SET1(.IBLCT,"VA-Laboratory or Facility IDs")
"RTN","IBCEPB",37,0)
 D SET1(.IBLCT,"Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$GET1^DIQ(36,IBCNS,4.07))
"RTN","IBCEPB",38,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEPB",39,0)
 Q
"RTN","IBCEPB",40,0)
 ;
"RTN","IBCEPB",41,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEPB",42,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT)
"RTN","IBCEPB",43,0)
 Q
"RTN","IBCEPB",44,0)
 ;
"RTN","IBCEPB",45,0)
EXPND ;
"RTN","IBCEPB",46,0)
 Q
"RTN","IBCEPB",47,0)
HELP ;
"RTN","IBCEPB",48,0)
 Q
"RTN","IBCEPB",49,0)
EXIT ;
"RTN","IBCEPB",50,0)
 D CLEAN^VALM10
"RTN","IBCEPB",51,0)
 Q
"RTN","IBCEPB",52,0)
 ;
"RTN","IBCEPB",53,0)
IDPARAM ;
"RTN","IBCEPB",54,0)
 D FULL^VALM1
"RTN","IBCEPB",55,0)
 N DIE,DA,DR
"RTN","IBCEPB",56,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",57,0)
 S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]"
"RTN","IBCEPB",58,0)
 I '$D(IBY) N IBY S IBY=",12,"
"RTN","IBCEPB",59,0)
 D ^DIE K DIE
"RTN","IBCEPB",60,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEPB",61,0)
 D INIT
"RTN","IBCEPB",62,0)
 S VALMBCK="R"
"RTN","IBCEPB",63,0)
 Q
"RTN","IBCEPB",64,0)
 ;
"RTN","IBCEPB",65,0)
BILLPRVP ;
"RTN","IBCEPB",66,0)
 D FULL^VALM1
"RTN","IBCEPB",67,0)
 D EN^IBCEPC
"RTN","IBCEPB",68,0)
 D INIT
"RTN","IBCEPB",69,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEPB",70,0)
 S VALMBCK="R"
"RTN","IBCEPB",71,0)
 Q
"RTN","IBCEPC")
0^9^B5826861^B5826861
"RTN","IBCEPC",1,0)
IBCEPC ;ALB/WCJ - Insurance company plan type list ;22-DEC-2005
"RTN","IBCEPC",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348**;21-MAR-94;Build 5
"RTN","IBCEPC",3,0)
EN ; -- main entry point for IBCE INSCO BILL PROV MAINT
"RTN","IBCEPC",4,0)
 D EN^VALM("IBCE INSCO BILL PROV MAINT")
"RTN","IBCEPC",5,0)
 Q
"RTN","IBCEPC",6,0)
 ;
"RTN","IBCEPC",7,0)
HDR ; -- header code
"RTN","IBCEPC",8,0)
 N PCF,PCDISP
"RTN","IBCEPC",9,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPC",10,0)
 S PCF=$P($G(^DIC(36,+IBCNS,3)),U,13),PCDISP=$S(PCF="P":"(Parent)",1:"")
"RTN","IBCEPC",11,0)
 S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBCNS,0)),U)_PCDISP
"RTN","IBCEPC",12,0)
 Q
"RTN","IBCEPC",13,0)
 ;
"RTN","IBCEPC",14,0)
INIT ; Initialize
"RTN","IBCEPC",15,0)
 N IBLCT,IBCT
"RTN","IBCEPC",16,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPC",17,0)
 S (IBCT,IBLCT)=0
"RTN","IBCEPC",18,0)
 ; Display the list
"RTN","IBCEPC",19,0)
 D SET1(.IBLCT,"Transmit no billing Provider Sec ID for the following Electronic Plan Types:",IBCT+1)
"RTN","IBCEPC",20,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCEPC",21,0)
 F IBCT=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCEPC",22,0)
 . D SET1(.IBLCT,IBCT_"   "_TAR("DILIST",1,IBCT),IBCT)
"RTN","IBCEPC",23,0)
 . S ^TMP("IBCE INSCO BILL PROV MAINT",$J,"ZIDX",IBCT)=TAR("DILIST",2,IBCT)_U_TAR("DILIST",1,IBCT)
"RTN","IBCEPC",24,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEPC",25,0)
 Q
"RTN","IBCEPC",26,0)
 ;
"RTN","IBCEPC",27,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEPC",28,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEPC",29,0)
 Q
"RTN","IBCEPC",30,0)
 ;
"RTN","IBCEPC",31,0)
EXPND ;
"RTN","IBCEPC",32,0)
 Q
"RTN","IBCEPC",33,0)
HELP ;
"RTN","IBCEPC",34,0)
 Q
"RTN","IBCEPC",35,0)
EXIT ;
"RTN","IBCEPC",36,0)
 D CLEAN^VALM10
"RTN","IBCEPC",37,0)
 Q
"RTN","IBCEPC",38,0)
ADD ;
"RTN","IBCEPC",39,0)
 D FULL^VALM1
"RTN","IBCEPC",40,0)
 S VALMBCK="R"
"RTN","IBCEPC",41,0)
 N DIR,X,Y,DIC,DA
"RTN","IBCEPC",42,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPC",43,0)
 S DIR("A")="Plan Type: ",DIR(0)="36.013,.01AOr"
"RTN","IBCEPC",44,0)
 D ^DIR K DIR
"RTN","IBCEPC",45,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEPC",46,0)
 ;
"RTN","IBCEPC",47,0)
 S X=Y
"RTN","IBCEPC",48,0)
 S DIC(0)="L",DA(1)=IBCNS
"RTN","IBCEPC",49,0)
 S DIC="^DIC(36,"_DA(1)_",13,"
"RTN","IBCEPC",50,0)
 D ^DIC
"RTN","IBCEPC",51,0)
 K ^TMP("IBCE INSCO BILL PROV MAINT",$J)
"RTN","IBCEPC",52,0)
 D INIT
"RTN","IBCEPC",53,0)
 ;
"RTN","IBCEPC",54,0)
 Q
"RTN","IBCEPC",55,0)
DEL ;
"RTN","IBCEPC",56,0)
 S VALMBCK="R"
"RTN","IBCEPC",57,0)
 I '$D(^TMP("IBCE INSCO BILL PROV MAINT",$J,"ZIDX")) Q    ;nothing to delete
"RTN","IBCEPC",58,0)
 N IBDA
"RTN","IBCEPC",59,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPC",60,0)
 D SEL
"RTN","IBCEPC",61,0)
 Q:'$G(IBDA)
"RTN","IBCEPC",62,0)
 N DA,DIK,X,Y
"RTN","IBCEPC",63,0)
 S DA=+IBDA,DA(1)=IBCNS
"RTN","IBCEPC",64,0)
 S DIK="^DIC(36,"_IBCNS_",13,"
"RTN","IBCEPC",65,0)
 D ^DIK
"RTN","IBCEPC",66,0)
 K ^TMP("IBCE INSCO BILL PROV MAINT",$J)
"RTN","IBCEPC",67,0)
 D INIT
"RTN","IBCEPC",68,0)
 Q
"RTN","IBCEPC",69,0)
 ;
"RTN","IBCEPC",70,0)
SEL ;
"RTN","IBCEPC",71,0)
 N Z
"RTN","IBCEPC",72,0)
 K IBDA
"RTN","IBCEPC",73,0)
 D FULL^VALM1
"RTN","IBCEPC",74,0)
 D EN^VALM2($G(XQORNOD(0)),"OS")
"RTN","IBCEPC",75,0)
 S Z=+$O(VALMY(0)) Q:'Z
"RTN","IBCEPC",76,0)
 ; fac/ins co default
"RTN","IBCEPC",77,0)
 S IBDA=$G(^TMP("IBCE INSCO BILL PROV MAINT",$J,"ZIDX",Z))
"RTN","IBCEPC",78,0)
 Q
"RTN","IBCEPTC")
0^40^B73141787^B73154243
"RTN","IBCEPTC",1,0)
IBCEPTC ;ALB/TMK - EDI PREVIOUSLY TRANSMITTED CLAIMS ; 4/12/05 11:15am
"RTN","IBCEPTC",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320,348**;21-MAR-94;Build 5
"RTN","IBCEPTC",3,0)
 ;
"RTN","IBCEPTC",4,0)
EN ; Main entrypoint
"RTN","IBCEPTC",5,0)
 ; IBDT1,IBDT2 = last transmit date range to use
"RTN","IBCEPTC",6,0)
 ; IBSORT = primary sort criteria to use B=BATCH #,I=INS CO NAME
"RTN","IBCEPTC",7,0)
 ; IBFORM = form type to limit selection to U=UB92,C=CMS-1500,B=BOTH
"RTN","IBCEPTC",8,0)
 ; IBCRIT = the additional sort criteria needed
"RTN","IBCEPTC",9,0)
 ; IBPTCCAN = whether or not to include cancelled claims
"RTN","IBCEPTC",10,0)
 ; IBRCBFPC = whether or not to include force print @ clearinghouse
"RTN","IBCEPTC",11,0)
 ; ^TMP("IB_PREV_CLAIM_INS",$J) = 1 for specific ins co/null for all
"RTN","IBCEPTC",12,0)
 ;                        ^($J,1,ien)="" for ien of each ins co selected
"RTN","IBCEPTC",13,0)
 ;                        ^($J,2,payer ID,ien)="" if selected
"RTN","IBCEPTC",14,0)
 ; IBREP = format output should be put in R=report,S=Listman
"RTN","IBCEPTC",15,0)
 ;
"RTN","IBCEPTC",16,0)
 N DIR,DIC,X,Y,Z,Z0,Z1,IBHOW,IBACT,IBCT,IBREP,IBCRIT,IBDT1,IBDT2
"RTN","IBCEPTC",17,0)
 N IBFORM,IBOK,IBQUIT,IBSORT,IBY,DTOUT,DUOUT,%ZIS,ZTSAVE,ZTRTN,ZTDESC
"RTN","IBCEPTC",18,0)
 N POP,IBPAYER,EDI,INST,PROF,IBPTCCAN,DIROUT,DIRUT,DTOUT,DUOUT,IBRCBFPC
"RTN","IBCEPTC",19,0)
 ;
"RTN","IBCEPTC",20,0)
Q1 ;
"RTN","IBCEPTC",21,0)
 W !!,"*** Please Note ***"
"RTN","IBCEPTC",22,0)
 W ?20,"2 '^' are needed to abort this option (^^)"
"RTN","IBCEPTC",23,0)
 W !?20,"1 '^' brings you back to the previous prompt (^)"
"RTN","IBCEPTC",24,0)
 W !
"RTN","IBCEPTC",25,0)
 ;
"RTN","IBCEPTC",26,0)
 S DIR(0)="SA^C:Claim;B:Batch;L:List",DIR("A")="Select By: (C)laim, (B)atch or see a (L)ist to pick from?: ",DIR("B")="List"
"RTN","IBCEPTC",27,0)
 D ^DIR K DIR
"RTN","IBCEPTC",28,0)
 I $D(DTOUT)!$D(DUOUT) G ENQ
"RTN","IBCEPTC",29,0)
 S IBHOW=Y
"RTN","IBCEPTC",30,0)
 I IBHOW="L" G Q1A
"RTN","IBCEPTC",31,0)
 ;
"RTN","IBCEPTC",32,0)
 S IBQUIT=0,IBCT=0
"RTN","IBCEPTC",33,0)
 K ^TMP($J,IBHOW)
"RTN","IBCEPTC",34,0)
 F  D  Q:IBQUIT
"RTN","IBCEPTC",35,0)
 . I IBHOW="C" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Claim: ",DIR(0)="PA^364:AEMQZ",DIR("S")="I '$P(^(0),U,7),'$O(^IBA(364,""B"",+^(0),Y))"
"RTN","IBCEPTC",36,0)
 . I IBHOW="B" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Batch: ",DIR(0)="PA^IBA(364.1,:AEMQ^W ""  "",$P(^(0),U,3),"" Claims""",DIR("S")="I '$P(^(0),U,14)"
"RTN","IBCEPTC",37,0)
 . S DIR("?")="^D SELDSP^IBCEPTC(IBHOW)"
"RTN","IBCEPTC",38,0)
 . S:IBCT $P(DIR(0),U)=$P(DIR(0),U)_"O" ; Optional prompt after one is selected
"RTN","IBCEPTC",39,0)
 . D ^DIR K DIR
"RTN","IBCEPTC",40,0)
 . I Y'>0 S IBQUIT=$S(X="^":2,X="^^":3,1:1) Q
"RTN","IBCEPTC",41,0)
 . S IBY=$S(IBHOW="C":+Y,1:""),Y=$S(IBHOW="C":+Y(0),1:Y)
"RTN","IBCEPTC",42,0)
 . I '$D(^TMP($J,IBHOW,+Y)) S IBCT=IBCT+1,^TMP($J,IBHOW,+Y)=IBY
"RTN","IBCEPTC",43,0)
 ;
"RTN","IBCEPTC",44,0)
 G:IBQUIT=3 ENQ
"RTN","IBCEPTC",45,0)
 G:IBQUIT=2!'$O(^TMP($J,IBHOW,0)) Q1
"RTN","IBCEPTC",46,0)
 S Z=0
"RTN","IBCEPTC",47,0)
 I IBHOW="C" F  S Z=$O(^TMP($J,"C",Z)) Q:'Z  S ^TMP("IB_PREV_CLAIM_SELECT",$J,Z,0)=^TMP($J,"C",Z)
"RTN","IBCEPTC",48,0)
 I IBHOW="B" S (Z,IBCT)=0 F  S Z=$O(^TMP($J,"B",Z)) Q:'Z  D
"RTN","IBCEPTC",49,0)
 . S Z0=0 F  S Z0=$O(^IBA(364,"C",Z,Z0)) Q:'Z0  S Z1=+$G(^IBA(364,Z0,0)) I Z1,'$D(^TMP("IB_PREV_CLAIM_SELECT",$J,Z1,0)) S ^(0)=Z0,IBCT=IBCT+1
"RTN","IBCEPTC",50,0)
 S ^TMP("IB_PREV_CLAIM_SELECT",$J)=IBCT
"RTN","IBCEPTC",51,0)
 D RESUB^IBCEPTC3
"RTN","IBCEPTC",52,0)
 G ENQ
"RTN","IBCEPTC",53,0)
 ;
"RTN","IBCEPTC",54,0)
Q1A K ^TMP("IB_PREV_CLAIM_INS",$J)
"RTN","IBCEPTC",55,0)
 S DIR(0)="SA^A:All Payers;S:Selected Payers"
"RTN","IBCEPTC",56,0)
 S DIR("A")="Run for (A)ll Payers or (S)elected Payers?: " S DIR("B")="Selected Payers"
"RTN","IBCEPTC",57,0)
 W !!,"PAYER SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",58,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",59,0)
 I $D(DTOUT)!$D(DUOUT) G Q1
"RTN","IBCEPTC",60,0)
 ;
"RTN","IBCEPTC",61,0)
 I Y="A" S ^TMP("IB_PREV_CLAIM_INS",$J)="" G Q2
"RTN","IBCEPTC",62,0)
 ;
"RTN","IBCEPTC",63,0)
 ; esg - 11/21/05 - patch 320 question
"RTN","IBCEPTC",64,0)
 W !
"RTN","IBCEPTC",65,0)
 S DIR(0)="Y",DIR("A")="   Include all payers with the same electronic Payer ID",DIR("B")="Yes" D ^DIR K DIR
"RTN","IBCEPTC",66,0)
 I $D(DIROUT) G ENQ
"RTN","IBCEPTC",67,0)
 I $D(DIRUT) G Q1A
"RTN","IBCEPTC",68,0)
 S IBPAYER=Y
"RTN","IBCEPTC",69,0)
 W !
"RTN","IBCEPTC",70,0)
 ;
"RTN","IBCEPTC",71,0)
 S ^TMP("IB_PREV_CLAIM_INS",$J)=1
"RTN","IBCEPTC",72,0)
 S IBQUIT=0
"RTN","IBCEPTC",73,0)
 F  D  Q:IBQUIT
"RTN","IBCEPTC",74,0)
 . S DIC(0)="AEMQ",DIC=36,DIC("A")="   Select Insurance Company: "
"RTN","IBCEPTC",75,0)
 . I $O(^TMP("IB_PREV_CLAIM_INS",$J,1,"")) S DIC("A")="   Select Another Insurance Company: "
"RTN","IBCEPTC",76,0)
 . S DIC("W")="D INSLIST^IBCEMCA(Y)"
"RTN","IBCEPTC",77,0)
 . D ^DIC K DIC                   ; lookup
"RTN","IBCEPTC",78,0)
 . I X="^^" S IBQUIT=2 Q          ; user entered "^^"
"RTN","IBCEPTC",79,0)
 . I +Y'>0 S IBQUIT=1 Q           ; user is done
"RTN","IBCEPTC",80,0)
 . W !
"RTN","IBCEPTC",81,0)
 . S ^TMP("IB_PREV_CLAIM_INS",$J,1,+Y)=""
"RTN","IBCEPTC",82,0)
 . I 'IBPAYER Q
"RTN","IBCEPTC",83,0)
 . S EDI=$$UP^XLFSTR($G(^DIC(36,+Y,3)))
"RTN","IBCEPTC",84,0)
 . S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)
"RTN","IBCEPTC",85,0)
 . I PROF'="",PROF'["PRNT" S ^TMP("IB_PREV_CLAIM_INS",$J,2,PROF,+Y)=""
"RTN","IBCEPTC",86,0)
 . I INST'="",INST'["PRNT" S ^TMP("IB_PREV_CLAIM_INS",$J,2,INST,+Y)=""
"RTN","IBCEPTC",87,0)
 . Q
"RTN","IBCEPTC",88,0)
 ;
"RTN","IBCEPTC",89,0)
 I IBQUIT=2 G ENQ
"RTN","IBCEPTC",90,0)
 ;
"RTN","IBCEPTC",91,0)
 I '$O(^TMP("IB_PREV_CLAIM_INS",$J,1,0)) D  G Q1A
"RTN","IBCEPTC",92,0)
 . W *7,!!?3,"No payers have been selected.  Please try again."
"RTN","IBCEPTC",93,0)
 . Q
"RTN","IBCEPTC",94,0)
 ;
"RTN","IBCEPTC",95,0)
Q2 S DIR(0)="SA^C:CMS-1500;U:UB92;B:Both",DIR("B")="Both"
"RTN","IBCEPTC",96,0)
 S DIR("A")="Run for (U)B92, (C)MS-1500 or (B)oth: "
"RTN","IBCEPTC",97,0)
 W !!,"BILL FORM TYPE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",98,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",99,0)
 I $D(DTOUT)!$D(DUOUT) G Q1A
"RTN","IBCEPTC",100,0)
 S IBFORM=Y
"RTN","IBCEPTC",101,0)
 ;
"RTN","IBCEPTC",102,0)
Q3 S DIR(0)="DA^0:9999999:EPX",DIR("A")="Start with Date Last Transmitted: "
"RTN","IBCEPTC",103,0)
 S DIR("?",1)="This is the earliest date on which a batch that you want to include on this",DIR("?",2)=" report was last transmitted. You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",104,0)
 W !!,"LAST BATCH TRANSMIT DATE RANGE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",105,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",106,0)
 I $D(DTOUT)!$D(DUOUT) G Q2
"RTN","IBCEPTC",107,0)
 S IBDT1=Y
"RTN","IBCEPTC",108,0)
 S IBDT2=$$FMADD^XLFDT(IBDT1,90) I IBDT2>DT S IBDT2=DT
"RTN","IBCEPTC",109,0)
 S DIR("?",1)="This is the latest date on which a batch that you want to include on this",DIR("?",2)=" report was last transmitted. You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",110,0)
 S DIR("B")=$$FMTE^XLFDT(IBDT2,2),DIR(0)="DA^"_IBDT1_":"_IBDT2_":EPX"
"RTN","IBCEPTC",111,0)
 S DIR("A")="Go to Date Last Transmitted:("_$$FMTE^XLFDT(IBDT1,2)_"-"_$$FMTE^XLFDT(IBDT2,2)_"): " D ^DIR K DIR
"RTN","IBCEPTC",112,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",113,0)
 I $D(DTOUT)!$D(DUOUT) G Q3
"RTN","IBCEPTC",114,0)
 S IBDT2=Y
"RTN","IBCEPTC",115,0)
 ;
"RTN","IBCEPTC",116,0)
Q4 ; Additional selection criteria
"RTN","IBCEPTC",117,0)
 S DIR(0)="SAO^1:MRA Secondary Only;2:Primary Claims Only;3:Secondary Claims Only;4:Claims Previously Printed at Clearinghouse"
"RTN","IBCEPTC",118,0)
 S DIR("A",1)="ADDITIONAL SELECTION CRITERIA:",DIR("A",2)=" ",DIR("A",3)="1 - MRA Secondary Only",DIR("A",4)="2 - Primary Claims Only",DIR("A",5)="3 - Secondary Claims Only"
"RTN","IBCEPTC",119,0)
 S DIR("A",6)="4 - Claims Sent to Print at Clearinghouse Only",DIR("A",7)=" ",DIR("A")="Select Additional Limiting Criteria (optional): "
"RTN","IBCEPTC",120,0)
 S DIR("?")="Select one of the listed criteria to further limit the claims to include"
"RTN","IBCEPTC",121,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",122,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",123,0)
 I $D(DTOUT)!$D(DUOUT) G Q3
"RTN","IBCEPTC",124,0)
 S IBCRIT=Y
"RTN","IBCEPTC",125,0)
 ;
"RTN","IBCEPTC",126,0)
Q41 ; Ask user if they want to include cancelled claims
"RTN","IBCEPTC",127,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Would you like to include cancelled claims"
"RTN","IBCEPTC",128,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",129,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",130,0)
 I $D(DIRUT) G Q4
"RTN","IBCEPTC",131,0)
 S IBPTCCAN=Y
"RTN","IBCEPTC",132,0)
 ;
"RTN","IBCEPTC",133,0)
Q42 ; Include claims that are forced to print at clearinghouse?
"RTN","IBCEPTC",134,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Would you like to include claims Forced to Print at the Clearinghouse"
"RTN","IBCEPTC",135,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",136,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",137,0)
 I $D(DIRUT) G Q41
"RTN","IBCEPTC",138,0)
 S IBRCBFPC=Y
"RTN","IBCEPTC",139,0)
 ;
"RTN","IBCEPTC",140,0)
Q5 S DIR("L",1)="Select one of the following: ",DIR("L",2)=" ",DIR("L",3)=$J("",10)_"1         Batch By Last Transmitted Date (Claims within a Batch)",DIR("L",4)=$J("",10)_"2         Current Payer (Insurance Company)"
"RTN","IBCEPTC",141,0)
 S DIR("L",5)=" "
"RTN","IBCEPTC",142,0)
 S DIR(0)="SA^1:Batch By Last Transmitted Date (Claims within a Batch);2:Current Payer (Insurance Company)",DIR("B")="Current Payer"
"RTN","IBCEPTC",143,0)
 S DIR("A")="Sort By: "
"RTN","IBCEPTC",144,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",145,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",146,0)
 I $D(DTOUT)!$D(DUOUT) G Q42
"RTN","IBCEPTC",147,0)
 S IBSORT=Y
"RTN","IBCEPTC",148,0)
 ;
"RTN","IBCEPTC",149,0)
Q6 S DIR(0)="SA^R:Report;S:Screen List"
"RTN","IBCEPTC",150,0)
 S DIR("A")="Do you want a (R)eport or a (S)creen List format?: "
"RTN","IBCEPTC",151,0)
 S DIR("B")="Screen List"
"RTN","IBCEPTC",152,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",153,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",154,0)
 I $D(DTOUT)!$D(DUOUT) G Q5
"RTN","IBCEPTC",155,0)
 S IBREP=Y
"RTN","IBCEPTC",156,0)
 ;
"RTN","IBCEPTC",157,0)
 I IBREP="S" D LIST^IBCEPTC0 G ENQ
"RTN","IBCEPTC",158,0)
 ;
"RTN","IBCEPTC",159,0)
Q7 ; Select device
"RTN","IBCEPTC",160,0)
 F  S IBACT=0 D DEVSEL(.IBACT) Q:IBACT
"RTN","IBCEPTC",161,0)
 I IBACT=99 G ENQ
"RTN","IBCEPTC",162,0)
 U IO
"RTN","IBCEPTC",163,0)
 D LIST^IBCEPTC0
"RTN","IBCEPTC",164,0)
 ;
"RTN","IBCEPTC",165,0)
ENQ K ^TMP("IB_PREV_CLAIM_INS",$J),^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC",166,0)
 Q
"RTN","IBCEPTC",167,0)
 ;
"RTN","IBCEPTC",168,0)
DEVSEL(IBACT) ;
"RTN","IBCEPTC",169,0)
 N DIR,POP,X,Y,ZTRTN,ZTSAVE
"RTN","IBCEPTC",170,0)
 W !!,"You will need a 132 column printer for this report!"
"RTN","IBCEPTC",171,0)
 S %ZIS="QM" D ^%ZIS I POP S IBACT=99 G DEVSELQ
"RTN","IBCEPTC",172,0)
 I $G(IOM),IOM<132 S IBOK=1 D  I 'IBOK S IBACT=0 G DEVSELQ
"RTN","IBCEPTC",173,0)
 . S DIR(0)="YA",DIR("A",1)="This report requires output to a 132 column device.",DIR("A",2)="The device you have chosen is only set for "_IOM_".",DIR("A")="Are you sure you want to continue?: ",DIR("B")="No"
"RTN","IBCEPTC",174,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC",175,0)
 . I Y'=1 S IBOK=0 W !
"RTN","IBCEPTC",176,0)
 I $D(IO("Q")) D  S IBACT=99 G DEVSELQ
"RTN","IBCEPTC",177,0)
 . K IO("Q")
"RTN","IBCEPTC",178,0)
 . S ZTRTN="LIST^IBCEPTC0",ZTSAVE("IBCRIT(")="",ZTSAVE("IB*")="",ZTSAVE("^TMP(""IB_PREV_CLAIM_INS"",$J)")="",ZTSAVE("^TMP(""IB_PREV_CLAIM_INS"",$J,")="",ZTDESC="IB - Previously Transmitted Claims Report"
"RTN","IBCEPTC",179,0)
 . D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCEPTC",180,0)
 S IBACT=1
"RTN","IBCEPTC",181,0)
DEVSELQ Q
"RTN","IBCEPTC",182,0)
 ;
"RTN","IBCEPTC",183,0)
SELDSP(IBHOW) ; Display list of selected claims/batches
"RTN","IBCEPTC",184,0)
 ; IBHOW = "C" for claims   "B" for batches
"RTN","IBCEPTC",185,0)
 N Z,DIR,CT,QUIT
"RTN","IBCEPTC",186,0)
 I '$O(^TMP($J,IBHOW,0)) Q
"RTN","IBCEPTC",187,0)
 S (CT,QUIT)=0
"RTN","IBCEPTC",188,0)
 W !!,$S(IBHOW="C":"Claims",1:"Batches")," Already Selected:"
"RTN","IBCEPTC",189,0)
 S Z=0 F  S Z=$O(^TMP($J,IBHOW,Z)) Q:'Z!QUIT  S Z0=$G(^(Z)) D  Q:QUIT
"RTN","IBCEPTC",190,0)
 . I IBHOW="C" W !,?3,$P($G(^DGCR(399,Z,0)),U) Q
"RTN","IBCEPTC",191,0)
 . W !,?3,$P($G(^IBA(364.1,Z,0)),U),"  ",$P(^(0),U,3)," Claims"
"RTN","IBCEPTC",192,0)
 . S CT=CT+1
"RTN","IBCEPTC",193,0)
 . I '(CT#10),$O(^TMP($J,IBHOW,Z)) S DIR("A")="Press return for more or '^' to exit ",DIR(0)="EA" W ! D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S QUIT=1
"RTN","IBCEPTC",194,0)
 W !
"RTN","IBCEPTC",195,0)
 Q
"RTN","IBCEPTC",196,0)
 ;
"RTN","IBCEPTC0")
0^41^B19837123^B19867534
"RTN","IBCEPTC0",1,0)
IBCEPTC0 ;ALB/ESG - EDI PREVIOUSLY TRANSMITTED CLAIMS CONT ; 12/19/05
"RTN","IBCEPTC0",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348**;21-MAR-94;Build 5
"RTN","IBCEPTC0",3,0)
 ;
"RTN","IBCEPTC0",4,0)
 Q
"RTN","IBCEPTC0",5,0)
 ;
"RTN","IBCEPTC0",6,0)
LIST ; Queued report format entrypoint
"RTN","IBCEPTC0",7,0)
 ; variables pre-defined: IBREP,IBSORT,IBFORM,IBDT1,IBDT2,
"RTN","IBCEPTC0",8,0)
 ;                        IBCRIT,IBPTCCAN,IBRCBFPC
"RTN","IBCEPTC0",9,0)
 ;  ^TMP("IB_PREV_CLAIM_INS,$J) global
"RTN","IBCEPTC0",10,0)
 K ^TMP("IB_PREV_CLAIM",$J)
"RTN","IBCEPTC0",11,0)
 N IBBDA,IBBDA0,IBCURI,IBDA,IBDT,IBFT,IBIFN,IBS1,IBS2,IBDTX
"RTN","IBCEPTC0",12,0)
 N INCLUDE,EDI,PROF,INST,IB0,IBZ1,DATA,IB364,CURSEQ,IBZ,IBZDAT
"RTN","IBCEPTC0",13,0)
 I IBREP="R" N IBPAGE,IBSTOP,IBHDRDT S (IBPAGE,IBSTOP)=0
"RTN","IBCEPTC0",14,0)
 ;
"RTN","IBCEPTC0",15,0)
 ; evaluate claim transmission data from files 364.1 and 364
"RTN","IBCEPTC0",16,0)
 S IBDT=IBDT1-.1
"RTN","IBCEPTC0",17,0)
 F  S IBDT=$O(^IBA(364.1,"ALT",IBDT)) Q:'IBDT!((IBDT\1)>IBDT2)  S IBBDA=0 F  S IBBDA=$O(^IBA(364.1,"ALT",IBDT,IBBDA)) Q:'IBBDA  D
"RTN","IBCEPTC0",18,0)
 . S IBDTX=IBDT\1
"RTN","IBCEPTC0",19,0)
 . S IBDA=0 F  S IBDA=$O(^IBA(364,"C",IBBDA,IBDA)) Q:'IBDA  D
"RTN","IBCEPTC0",20,0)
 .. D STORE(IBDA,IBBDA,IBDTX,$P($G(^IBA(364,IBDA,0)),U,7)+1)
"RTN","IBCEPTC0",21,0)
 .. Q
"RTN","IBCEPTC0",22,0)
 . Q
"RTN","IBCEPTC0",23,0)
 ;
"RTN","IBCEPTC0",24,0)
 ; evaluate the test transmissions from file 361.4 (SRS 3.2.10.3)
"RTN","IBCEPTC0",25,0)
 S IBDT=IBDT1-.1
"RTN","IBCEPTC0",26,0)
 F  S IBDT=$O(^IBM(361.4,"ALT",IBDT)) Q:'IBDT!(IBDT>IBDT2)  S IBIFN=0 F  S IBIFN=$O(^IBM(361.4,"ALT",IBDT,IBIFN)) Q:'IBIFN  S IBZ1=0 F  S IBZ1=$O(^IBM(361.4,IBIFN,1,IBZ1)) Q:'IBZ1  D
"RTN","IBCEPTC0",27,0)
 . S DATA=$G(^IBM(361.4,IBIFN,1,IBZ1,0)) Q:DATA=""
"RTN","IBCEPTC0",28,0)
 . S IBDTX=$P(DATA,U,1)\1    ; transmit date
"RTN","IBCEPTC0",29,0)
 . Q:IBDTX<IBDT1             ;  too early
"RTN","IBCEPTC0",30,0)
 . Q:IBDTX>IBDT2             ;  too late
"RTN","IBCEPTC0",31,0)
 . S IBBDA=+$P(DATA,U,2)     ; batch ien
"RTN","IBCEPTC0",32,0)
 . Q:'IBBDA
"RTN","IBCEPTC0",33,0)
 . ;
"RTN","IBCEPTC0",34,0)
 . ; attempt to find the corresponding entry in file 364 for this one
"RTN","IBCEPTC0",35,0)
 . S IB364="",CURSEQ=$TR(+$P(DATA,U,4),"123","PST")
"RTN","IBCEPTC0",36,0)
 . S IBZ=" " F  S IBZ=$O(^IBA(364,"B",IBIFN,IBZ),-1) Q:'IBZ  D  Q:IB364
"RTN","IBCEPTC0",37,0)
 .. S IBZDAT=$G(^IBA(364,IBZ,0))
"RTN","IBCEPTC0",38,0)
 .. I $P(IBZDAT,U,8)'=CURSEQ Q      ; no match on payer sequence
"RTN","IBCEPTC0",39,0)
 .. I $F(".X.P.","."_$P(IBZDAT,U,3)_".") Q    ; transmission status must be farther than this
"RTN","IBCEPTC0",40,0)
 .. S IB364=IBZ Q
"RTN","IBCEPTC0",41,0)
 .. Q
"RTN","IBCEPTC0",42,0)
 . ;
"RTN","IBCEPTC0",43,0)
 . I 'IB364 Q      ; need to have an entry in file 364 to proceed
"RTN","IBCEPTC0",44,0)
 . ;
"RTN","IBCEPTC0",45,0)
 . D STORE(IB364,IBBDA,IBDTX,3)
"RTN","IBCEPTC0",46,0)
 . Q
"RTN","IBCEPTC0",47,0)
 ;
"RTN","IBCEPTC0",48,0)
 I IBREP="R" D RPT^IBCEPTC1(IBSORT,IBDT1,IBDT2) G END  ; Output report
"RTN","IBCEPTC0",49,0)
 ;
"RTN","IBCEPTC0",50,0)
 D EN^VALM("IBCE VIEW PREV TRANS"_IBSORT) ; List Manager
"RTN","IBCEPTC0",51,0)
 ;
"RTN","IBCEPTC0",52,0)
END K ^TMP("IB_PREV_CLAIM",$J),^TMP("IB_PREV_CLAIM_INS",$J)
"RTN","IBCEPTC0",53,0)
 Q
"RTN","IBCEPTC0",54,0)
 ;
"RTN","IBCEPTC0",55,0)
STORE(IB364,IBBDA,IBDTX,IBTYP) ; Check and store transmission data
"RTN","IBCEPTC0",56,0)
 ; Parameters
"RTN","IBCEPTC0",57,0)
 ; IB364 - ien to file 364 (claim transmission ien)
"RTN","IBCEPTC0",58,0)
 ; IBBDA - ien to file 364.1 (batch ien)
"RTN","IBCEPTC0",59,0)
 ; IBDTX - fm transmit date (no time) (either from 364.1 or 361.41)
"RTN","IBCEPTC0",60,0)
 ; IBTYP - 1 = transmission data from file 364 (field .07 is live)
"RTN","IBCEPTC0",61,0)
 ;         2 = transmission data from file 364 (field .07 is test)
"RTN","IBCEPTC0",62,0)
 ;         3 = transmission data from file 361.41 (test always)
"RTN","IBCEPTC0",63,0)
 ; Note:
"RTN","IBCEPTC0",64,0)
 ; Variables IBFORM, IBCRIT, IBPTCCAN, IBRCBFPC, and IBSORT are
"RTN","IBCEPTC0",65,0)
 ;     assumed to exist here in this procedure.
"RTN","IBCEPTC0",66,0)
 ;
"RTN","IBCEPTC0",67,0)
 NEW IBIFN,IB0,IBFT,IBCURI,INCLUDE,EDI,PROF,INST,IBBDA0,IBS1,IBS2
"RTN","IBCEPTC0",68,0)
 ;
"RTN","IBCEPTC0",69,0)
 S IBIFN=+$G(^IBA(364,IB364,0))
"RTN","IBCEPTC0",70,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC0",71,0)
 S IBFT=$$FT^IBCEF(IBIFN)   ; form type of claim
"RTN","IBCEPTC0",72,0)
 I IBFORM'="B",$S(IBFT=3:IBFORM="C",IBFT=2:IBFORM="U",1:1) G STOREX
"RTN","IBCEPTC0",73,0)
 S IBCURI=$$CURR^IBCEF2(IBIFN) I 'IBCURI G STOREX   ; current ins ien
"RTN","IBCEPTC0",74,0)
 S EDI=$$UP^XLFSTR($G(^DIC(36,IBCURI,3)))           ; 3 node EDI data
"RTN","IBCEPTC0",75,0)
 S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)                ; payer IDs
"RTN","IBCEPTC0",76,0)
 ;
"RTN","IBCEPTC0",77,0)
 ; screen for user selected insurance companies/payers
"RTN","IBCEPTC0",78,0)
 I +$G(^TMP("IB_PREV_CLAIM_INS",$J)) D  I 'INCLUDE G STOREX
"RTN","IBCEPTC0",79,0)
 . S INCLUDE=0
"RTN","IBCEPTC0",80,0)
 . I $D(^TMP("IB_PREV_CLAIM_INS",$J,1,IBCURI)) S INCLUDE=1 Q
"RTN","IBCEPTC0",81,0)
 . I '$D(^TMP("IB_PREV_CLAIM_INS",$J,2)) Q
"RTN","IBCEPTC0",82,0)
 . I PROF'="",$D(^TMP("IB_PREV_CLAIM_INS",$J,2,PROF)) S INCLUDE=1 Q
"RTN","IBCEPTC0",83,0)
 . I INST'="",$D(^TMP("IB_PREV_CLAIM_INS",$J,2,INST)) S INCLUDE=1 Q
"RTN","IBCEPTC0",84,0)
 . Q
"RTN","IBCEPTC0",85,0)
 ;
"RTN","IBCEPTC0",86,0)
 I IBCRIT=1,'$$MRASEC^IBCEF4(IBIFN) G STOREX
"RTN","IBCEPTC0",87,0)
 I IBCRIT=2,($$COBN^IBCEF(IBIFN)>1) G STOREX
"RTN","IBCEPTC0",88,0)
 I IBCRIT=3,($$COBN^IBCEF(IBIFN)=1) G STOREX
"RTN","IBCEPTC0",89,0)
 I IBCRIT=4,'$P($G(^DGCR(399,IBIFN,"TX")),U,7) G STOREX
"RTN","IBCEPTC0",90,0)
 ;
"RTN","IBCEPTC0",91,0)
 ; skip cancelled claims conditionally
"RTN","IBCEPTC0",92,0)
 I $P(IB0,U,13)=7,'IBPTCCAN G STOREX
"RTN","IBCEPTC0",93,0)
 ;
"RTN","IBCEPTC0",94,0)
 ; skip claims forced to print at clearinghouse (claim check)
"RTN","IBCEPTC0",95,0)
 I $P($G(^DGCR(399,IBIFN,"TX")),U,8)=2,'IBRCBFPC G STOREX
"RTN","IBCEPTC0",96,0)
 ;
"RTN","IBCEPTC0",97,0)
 ; skip claims forced to print at clearinghouse (payer check)
"RTN","IBCEPTC0",98,0)
 I IBFT=2,PROF["PRNT",'IBRCBFPC G STOREX    ; 1500, prof payer ID
"RTN","IBCEPTC0",99,0)
 I IBFT=3,INST["PRNT",'IBRCBFPC G STOREX    ;   ub, inst payer ID
"RTN","IBCEPTC0",100,0)
 ;
"RTN","IBCEPTC0",101,0)
 S IBBDA0=$G(^IBA(364.1,+IBBDA,0))             ; 0 node of batch
"RTN","IBCEPTC0",102,0)
 ;
"RTN","IBCEPTC0",103,0)
 S IBS1=$S(IBSORT=1:(99999999-IBDTX)_U_$P(IBBDA0,U)_U_$P(IBBDA0,U,14)_U_+$P(IBBDA0,U,5),1:$P($G(^DIC(36,+IBCURI,0)),U)_U_+IBCURI)
"RTN","IBCEPTC0",104,0)
 S IBS2=$S(IBSORT=1:$P(IB0,U,1),1:99999999-IBDTX)
"RTN","IBCEPTC0",105,0)
 ;
"RTN","IBCEPTC0",106,0)
 ; Meets all selection criteria - extract to sort global
"RTN","IBCEPTC0",107,0)
 S:IBS1="" IBS1=" " S:IBS2="" IBS2=" "
"RTN","IBCEPTC0",108,0)
 I '$D(^TMP("IB_PREV_CLAIM",$J,IBS1)) S ^TMP("IB_PREV_CLAIM",$J,IBS1)=$S(IBSORT=1:$$FMTE^XLFDT(IBDTX,"1"),1:IBIFN)
"RTN","IBCEPTC0",109,0)
 S ^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IB364)=IBTYP
"RTN","IBCEPTC0",110,0)
 ;
"RTN","IBCEPTC0",111,0)
STOREX ;
"RTN","IBCEPTC0",112,0)
 Q
"RTN","IBCEPTC0",113,0)
 ;
"RTN","IBCEPTC2")
0^42^B47676987^B47686748
"RTN","IBCEPTC2",1,0)
IBCEPTC2 ;ALB/TMK - EDI PREVIOUSLY TRANSMITTED CLAIMS LIST MGR ;01/20/05
"RTN","IBCEPTC2",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320,348**;21-MAR-94;Build 5
"RTN","IBCEPTC2",3,0)
 ; IA 3337 for file 430.3
"RTN","IBCEPTC2",4,0)
 ;
"RTN","IBCEPTC2",5,0)
HDR ;
"RTN","IBCEPTC2",6,0)
 K VALMHDR
"RTN","IBCEPTC2",7,0)
 S VALMHDR(1)="** A claim may appear multiple times if transmitted more than once. **"
"RTN","IBCEPTC2",8,0)
 ;
"RTN","IBCEPTC2",9,0)
 I $G(IBSORT)=1 D
"RTN","IBCEPTC2",10,0)
 . S VALMHDR(2)="Claims Selected: "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" (marked with *)"
"RTN","IBCEPTC2",11,0)
 . Q
"RTN","IBCEPTC2",12,0)
 ;
"RTN","IBCEPTC2",13,0)
 I $G(IBSORT)=2 D
"RTN","IBCEPTC2",14,0)
 . S VALMHDR(2)="** T = Test Claim   ** R = Batch Rejected"
"RTN","IBCEPTC2",15,0)
 . S VALMHDR(3)="Claims Selected: "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" (marked with *)"
"RTN","IBCEPTC2",16,0)
 . Q
"RTN","IBCEPTC2",17,0)
 ;
"RTN","IBCEPTC2",18,0)
 Q
"RTN","IBCEPTC2",19,0)
 ;
"RTN","IBCEPTC2",20,0)
INIT ;
"RTN","IBCEPTC2",21,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCEPTC2",22,0)
 D BLD
"RTN","IBCEPTC2",23,0)
 Q
"RTN","IBCEPTC2",24,0)
 ;
"RTN","IBCEPTC2",25,0)
BLD ; Build display lines
"RTN","IBCEPTC2",26,0)
 N IBDA,IBS1,IBS2,IBIFN,IB0,IBX,IBCNT,IBLEV1,IBBDA
"RTN","IBCEPTC2",27,0)
 K ^TMP("IB_PREV_CLAIM_LIST",$J),^TMP("IB_PREV_CLAIM_SELECT",$J),^TMP("IB_PREV_CLAIM_BATCH",$J)
"RTN","IBCEPTC2",28,0)
 S IBCNT=0
"RTN","IBCEPTC2",29,0)
 I $O(^TMP("IB_PREV_CLAIM",$J,""))="" D  G BLDQ
"RTN","IBCEPTC2",30,0)
 . S IBX=" ** NO PREVIOUSLY TRANSMITTED CLAIMS EXIST FOR SEARCH CRITERIA SELECTED **"
"RTN","IBCEPTC2",31,0)
 . D WRT(IBX,"",0,0,"","S","",.IBCNT,0)
"RTN","IBCEPTC2",32,0)
 ;
"RTN","IBCEPTC2",33,0)
 S IBS1="" F  S IBS1=$O(^TMP("IB_PREV_CLAIM",$J,IBS1)) Q:IBS1=""  D
"RTN","IBCEPTC2",34,0)
 . ; First level sort
"RTN","IBCEPTC2",35,0)
 . ; for sort by batch, display batch ID and transmit date
"RTN","IBCEPTC2",36,0)
 . I IBSORT=1 D
"RTN","IBCEPTC2",37,0)
 .. S IBLEV1="  Batch: "_$P(IBS1,U,2)_"  Last Transmitted: "_$G(^TMP("IB_PREV_CLAIM",$J,IBS1))
"RTN","IBCEPTC2",38,0)
 .. S IBBDA=+$O(^IBA(364.1,"B",$P(IBS1,U,2),0))
"RTN","IBCEPTC2",39,0)
 .. I $P(IBS1,U,3) S IBLEV1=IBLEV1_" ** Test"
"RTN","IBCEPTC2",40,0)
 .. I $P(IBS1,U,4) S IBLEV1=IBLEV1_" ** Rejected"
"RTN","IBCEPTC2",41,0)
 .. Q
"RTN","IBCEPTC2",42,0)
 . ;
"RTN","IBCEPTC2",43,0)
 . ; for sort by payer, display ins co name and payer address
"RTN","IBCEPTC2",44,0)
 . I IBSORT=2 D
"RTN","IBCEPTC2",45,0)
 .. S IBLEV1="  "_$P(IBS1,U)_"  "_$$CURRINS(+$G(^TMP("IB_PREV_CLAIM",$J,IBS1)),0)
"RTN","IBCEPTC2",46,0)
 .. Q
"RTN","IBCEPTC2",47,0)
 . ;
"RTN","IBCEPTC2",48,0)
 . ; output sort header line
"RTN","IBCEPTC2",49,0)
 . D WRT(IBLEV1,"",0,0,IBSORT,"S","",IBCNT,0) ; Add header line
"RTN","IBCEPTC2",50,0)
 . ;
"RTN","IBCEPTC2",51,0)
 . I IBSORT=1,IBBDA S ^TMP("IB_PREV_CLAIM_BATCH",$J,IBBDA)=VALMCNT
"RTN","IBCEPTC2",52,0)
 . S IBS2="" F  S IBS2=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2)) Q:IBS2=""  S IBDA=0 F  S IBDA=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBDA)) Q:'IBDA  D
"RTN","IBCEPTC2",53,0)
 .. N IBX,IBTEST
"RTN","IBCEPTC2",54,0)
 .. S IBIFN=+$G(^IBA(364,+IBDA,0)),IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC2",55,0)
 .. S IBX=$P(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBDA),U,1)
"RTN","IBCEPTC2",56,0)
 .. I IBX=1 S IBTEST=0    ; live 364 transmission
"RTN","IBCEPTC2",57,0)
 .. I IBX=2 S IBTEST=1    ; test 364 transmission
"RTN","IBCEPTC2",58,0)
 .. I IBX=3 S IBTEST=1    ; test 361.4 transmission
"RTN","IBCEPTC2",59,0)
 .. D WRT(IBS1,IBS2,IBDA,IBIFN,IBSORT,"S","",.IBCNT,0,IBTEST)
"RTN","IBCEPTC2",60,0)
 .. I IBSORT=1,IBBDA S ^TMP("IB_PREV_CLAIM_BATCH",$J,IBBDA,VALMCNT)=IBIFN_U_IBCNT
"RTN","IBCEPTC2",61,0)
 .. Q
"RTN","IBCEPTC2",62,0)
 . Q
"RTN","IBCEPTC2",63,0)
 ;
"RTN","IBCEPTC2",64,0)
BLDQ Q
"RTN","IBCEPTC2",65,0)
 ;
"RTN","IBCEPTC2",66,0)
EXIT ; Clean up code
"RTN","IBCEPTC2",67,0)
 ;
"RTN","IBCEPTC2",68,0)
 K ^TMP("IB_PREV_CLAIM_LIST",$J)
"RTN","IBCEPTC2",69,0)
 K ^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC2",70,0)
 K ^TMP("IB_PREV_CLAIM_LIST_DX",$J)
"RTN","IBCEPTC2",71,0)
 K ^TMP("IB_PREV_CLAIM_BATCH",$J)
"RTN","IBCEPTC2",72,0)
 D CLEAR^VALM1
"RTN","IBCEPTC2",73,0)
 Q
"RTN","IBCEPTC2",74,0)
 ;
"RTN","IBCEPTC2",75,0)
WRT(IBS1,IBS2,IBDA,IBIFN,IBSORT,IBREP,IBHDR,IBPAGE,IBSTOP,IBTEST) ; Wrt/output
"RTN","IBCEPTC2",76,0)
 ;
"RTN","IBCEPTC2",77,0)
 N IBX,IB0,Z,IBCNT,ARSTAT
"RTN","IBCEPTC2",78,0)
 S IBCNT=IBPAGE
"RTN","IBCEPTC2",79,0)
 ;
"RTN","IBCEPTC2",80,0)
 I 'IBIFN D  G WRTQ
"RTN","IBCEPTC2",81,0)
 . ;
"RTN","IBCEPTC2",82,0)
 . ; for report output
"RTN","IBCEPTC2",83,0)
 . I IBREP="R" D  Q
"RTN","IBCEPTC2",84,0)
 .. S Z="",$P(Z,"=",133)=""
"RTN","IBCEPTC2",85,0)
 .. D SET(Z,1,IBDA,IBREP,IBHDR,1,0,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",86,0)
 .. D SET(IBS1,2,IBDA,IBREP,IBHDR,1,0,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",87,0)
 .. Q
"RTN","IBCEPTC2",88,0)
 . ;
"RTN","IBCEPTC2",89,0)
 . ; for ListMan screen output
"RTN","IBCEPTC2",90,0)
 . D SET(IBS1,0,IBDA,IBREP,IBHDR,IBCNT+1,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",91,0)
 . Q
"RTN","IBCEPTC2",92,0)
 ;
"RTN","IBCEPTC2",93,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC2",94,0)
 S IBX=$$FO^IBCNEUT1($P(IB0,U,1),8)        ; claim#
"RTN","IBCEPTC2",95,0)
 S IBX=IBX_$S(IBSORT=2&$G(IBTEST):"T",1:" ")_" "
"RTN","IBCEPTC2",96,0)
 S IBX=IBX_$S($P(IB0,U,19)=2:"1500",1:"UB92")_" "
"RTN","IBCEPTC2",97,0)
 S Z=$$INPAT^IBCEF(IBIFN) S IBX=IBX_$S(Z:"INPT ",1:"OUTPT")
"RTN","IBCEPTC2",98,0)
 S IBX=IBX_$J($P(IB0,U,21),3)_"  "
"RTN","IBCEPTC2",99,0)
 S Z=$$EXTERNAL^DILFD(399,.13,"",$P(IB0,U,13))
"RTN","IBCEPTC2",100,0)
 S IBX=IBX_$$FO^IBCNEUT1(Z,11)_"  "             ; claim status
"RTN","IBCEPTC2",101,0)
 S ARSTAT=+$P($$BILL^RCJIBFN2(IBIFN),U,2)       ; ien
"RTN","IBCEPTC2",102,0)
 S ARSTAT=$P($G(^PRCA(430.3,ARSTAT,0)),U,2)     ; abbreviation
"RTN","IBCEPTC2",103,0)
 S IBX=IBX_$$FO^IBCNEUT1(ARSTAT,4)              ; a/r status display
"RTN","IBCEPTC2",104,0)
 ;
"RTN","IBCEPTC2",105,0)
 I IBSORT=1 D                    ; sort by batch
"RTN","IBCEPTC2",106,0)
 . N Z,IBZ,IBXDATA
"RTN","IBCEPTC2",107,0)
 . ; Print current payer, payer address, other payers, pat name
"RTN","IBCEPTC2",108,0)
 . D F^IBCEF("N-CURR INSURANCE COMPANY NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",109,0)
 . S IBX=IBX_$$FO^IBCNEUT1(IBZ,25)_" "                     ; ins co name
"RTN","IBCEPTC2",110,0)
 . S IBX=IBX_$$FO^IBCNEUT1($$CURRINS(IBIFN,1),29)_" "      ; address
"RTN","IBCEPTC2",111,0)
 . K IBZ D F^IBCEF("N-OTH INSURANCE CO. NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",112,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(IBZ(1)),U,1),15)_" "      ; other payer
"RTN","IBCEPTC2",113,0)
 . S Z=$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTC2",114,0)
 . S IBX=IBX_$E(Z,1,18)                       ; patient name
"RTN","IBCEPTC2",115,0)
 . ;
"RTN","IBCEPTC2",116,0)
 . ; set line into list
"RTN","IBCEPTC2",117,0)
 . S IBCNT=IBCNT+1
"RTN","IBCEPTC2",118,0)
 . D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",119,0)
 . S IBX=""
"RTN","IBCEPTC2",120,0)
 . ;
"RTN","IBCEPTC2",121,0)
 . I $G(IBZ(2))'="" D    ; other payer #2 if it exists
"RTN","IBCEPTC2",122,0)
 .. S IBX=$J("",98)_$E($P(IBZ(2),U,1),1,15)
"RTN","IBCEPTC2",123,0)
 .. D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",124,0)
 .. Q
"RTN","IBCEPTC2",125,0)
 . Q
"RTN","IBCEPTC2",126,0)
 ;
"RTN","IBCEPTC2",127,0)
 I IBSORT=2 D                    ; sort by payer
"RTN","IBCEPTC2",128,0)
 . N Z,IBZ
"RTN","IBCEPTC2",129,0)
 . S IBX=IBX_"  "
"RTN","IBCEPTC2",130,0)
 . ; Print other payers, patient name, date last trans, batch #, reject flag
"RTN","IBCEPTC2",131,0)
 . D F^IBCEF("N-OTH INSURANCE CO. NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",132,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(IBZ(1)),U,1),18)_"  "   ; oth payer#1
"RTN","IBCEPTC2",133,0)
 . S Z=$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTC2",134,0)
 . S IBX=IBX_$$FO^IBCNEUT1(Z,18)_"    "                  ; patient name
"RTN","IBCEPTC2",135,0)
 . ;
"RTN","IBCEPTC2",136,0)
 . S Z=+$P($G(^IBA(364,+IBDA,0)),U,2) ; Batch ptr
"RTN","IBCEPTC2",137,0)
 . S IBX=IBX_$$FO^IBCNEUT1($$FMTE^XLFDT($P($G(^IBA(364.1,+Z,1)),U,3)\1,"1"),17)     ; date last transmitted
"RTN","IBCEPTC2",138,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(^IBA(364.1,Z,0)),U,1),10)   ; batch#
"RTN","IBCEPTC2",139,0)
 . S IBX=IBX_$S($P($G(^IBA(364.1,Z,0)),U,5):" R",1:"")  ; batch rejected flag
"RTN","IBCEPTC2",140,0)
 . ;
"RTN","IBCEPTC2",141,0)
 . ; set line into list
"RTN","IBCEPTC2",142,0)
 . S IBCNT=IBCNT+1
"RTN","IBCEPTC2",143,0)
 . D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",144,0)
 . S IBX=""
"RTN","IBCEPTC2",145,0)
 . ;
"RTN","IBCEPTC2",146,0)
 . I $G(IBZ(2))'="" D       ; other payer#2 if it exists
"RTN","IBCEPTC2",147,0)
 .. S IBX=$J("",44)_$E($P(IBZ(2),U),1,18)
"RTN","IBCEPTC2",148,0)
 .. D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",149,0)
 .. Q
"RTN","IBCEPTC2",150,0)
 . Q
"RTN","IBCEPTC2",151,0)
 ;
"RTN","IBCEPTC2",152,0)
WRTQ I IBREP="S" S IBPAGE=IBCNT
"RTN","IBCEPTC2",153,0)
 Q
"RTN","IBCEPTC2",154,0)
 ;
"RTN","IBCEPTC2",155,0)
SET(IBX,IBLINE,IBDA,IBREP,IBHDR,IBCNT,VALMCNT,IBPAGE,IBSTOP) ;
"RTN","IBCEPTC2",156,0)
 N Q,Z,IBZ
"RTN","IBCEPTC2",157,0)
 S IBZ=IBX,IBX=""
"RTN","IBCEPTC2",158,0)
 I IBREP="R" D  Q
"RTN","IBCEPTC2",159,0)
 . D:($Y+5)>IOSL!'IBPAGE HDR^IBCEPTC1(IBHDR,IBSORT,.IBPAGE,.IBSTOP) D
"RTN","IBCEPTC2",160,0)
 . I IBLINE F Z=1:1:IBLINE W !
"RTN","IBCEPTC2",161,0)
 . W:'IBSTOP IBZ
"RTN","IBCEPTC2",162,0)
 . Q
"RTN","IBCEPTC2",163,0)
 ;
"RTN","IBCEPTC2",164,0)
 ; only display the counter if we have a line with the claim#
"RTN","IBCEPTC2",165,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCEPTC2",166,0)
 I IBDA,$TR($E(IBZ,1,8)," ")'="" S IBZ=$$FO^IBCNEUT1($J(IBCNT,3),6)_IBZ
"RTN","IBCEPTC2",167,0)
 I IBDA,$TR($E(IBZ,1,8)," ")="" S IBZ="      "_IBZ
"RTN","IBCEPTC2",168,0)
 ;
"RTN","IBCEPTC2",169,0)
 S ^TMP("IB_PREV_CLAIM_LIST",$J,VALMCNT,0)=IBZ
"RTN","IBCEPTC2",170,0)
 S ^TMP("IB_PREV_CLAIM_LIST",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBCEPTC2",171,0)
 I IBDA,$TR($E(IBZ,1,8)," ")'="" S ^TMP("IB_PREV_CLAIM_LIST_DX",$J,IBCNT)=VALMCNT_U_IBDA
"RTN","IBCEPTC2",172,0)
 Q
"RTN","IBCEPTC2",173,0)
 ;
"RTN","IBCEPTC2",174,0)
CURRINS(IBIFN,TRUNC) ; Returns Current insurance address for given claim
"RTN","IBCEPTC2",175,0)
 ; TRUNC = truncate flag; 1 to truncate the address and city
"RTN","IBCEPTC2",176,0)
 N IBX,IBZ,L1,CITY,ST
"RTN","IBCEPTC2",177,0)
 D F^IBCEF("N-CURR INS CO FULL ADDRESS","IBZ",,IBIFN)
"RTN","IBCEPTC2",178,0)
 S L1=$G(IBZ(1)) I +$G(TRUNC) S L1=$E(L1,1,15)
"RTN","IBCEPTC2",179,0)
 S CITY=$G(IBZ(4)) I +$G(TRUNC) S CITY=$E(CITY,1,10)
"RTN","IBCEPTC2",180,0)
 S ST=$G(IBZ(5))
"RTN","IBCEPTC2",181,0)
 I ST S ST=$P($G(^DIC(5,ST,0)),U,2)
"RTN","IBCEPTC2",182,0)
 S IBX=L1_" "_CITY
"RTN","IBCEPTC2",183,0)
 I CITY'="",ST'="" S IBX=IBX_","_ST
"RTN","IBCEPTC2",184,0)
 E  S IBX=IBX_" "_ST
"RTN","IBCEPTC2",185,0)
 Q IBX
"RTN","IBCEPTC2",186,0)
 ;
"RTN","IBCEPTR")
0^43^B101915596^B101970593
"RTN","IBCEPTR",1,0)
IBCEPTR ;ALB/ESG - Test Claim Messages Report ;28-JAN-2005
"RTN","IBCEPTR",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320,348**;21-MAR-94;Build 5
"RTN","IBCEPTR",3,0)
 ;
"RTN","IBCEPTR",4,0)
 ; eClaims Plus
"RTN","IBCEPTR",5,0)
 ; Report on Test Claim Transmissions and Status Messages
"RTN","IBCEPTR",6,0)
 ;
"RTN","IBCEPTR",7,0)
EN ; Entry Point
"RTN","IBCEPTR",8,0)
 NEW STOP,IBRMETH,IBRDATA
"RTN","IBCEPTR",9,0)
 D SELECT I STOP G EXIT
"RTN","IBCEPTR",10,0)
 D DEVICE
"RTN","IBCEPTR",11,0)
EXIT ; Exit Point
"RTN","IBCEPTR",12,0)
 Q
"RTN","IBCEPTR",13,0)
 ;
"RTN","IBCEPTR",14,0)
SELECT ; Determine which claim#'s or batch#'s to report on
"RTN","IBCEPTR",15,0)
 NEW DIC,DIR,X,Y,DIRUT,DTOUT,DUOUT,DIROUT,D
"RTN","IBCEPTR",16,0)
 S STOP=0
"RTN","IBCEPTR",17,0)
 W @IOF
"RTN","IBCEPTR",18,0)
 W !!?23,"Test Claim EDI Transmission Report"
"RTN","IBCEPTR",19,0)
 W !!?7,"This report will display EDI transmission data and returned status"
"RTN","IBCEPTR",20,0)
 W !?7,"message data for selected test claims.  You may select test claims"
"RTN","IBCEPTR",21,0)
 W !?7,"by claim number or by batch number or you may search for claims that"
"RTN","IBCEPTR",22,0)
 W !?7,"were transmitted within a date range.",!
"RTN","IBCEPTR",23,0)
 S DIR(0)="SO^C:Claim;B:Batch;D:Date Range (Date Transmitted)"
"RTN","IBCEPTR",24,0)
 S DIR("A")="Selection Method",DIR("B")="D"
"RTN","IBCEPTR",25,0)
 D ^DIR K DIR
"RTN","IBCEPTR",26,0)
 I $D(DIRUT) S STOP=1 G SELECTX
"RTN","IBCEPTR",27,0)
 S IBRMETH=Y
"RTN","IBCEPTR",28,0)
 I IBRMETH'="C",IBRMETH'="B",IBRMETH'="D" S STOP=1 G SELECTX
"RTN","IBCEPTR",29,0)
 ;
"RTN","IBCEPTR",30,0)
 K IBRDATA
"RTN","IBCEPTR",31,0)
 I IBRMETH="C" D
"RTN","IBCEPTR",32,0)
 . F  D  Q:Y'>0
"RTN","IBCEPTR",33,0)
 .. W !
"RTN","IBCEPTR",34,0)
 .. S DIC("A")="Test Claim: "
"RTN","IBCEPTR",35,0)
 .. I $O(IBRDATA("")) S DIC("A")="Another Test Claim: "
"RTN","IBCEPTR",36,0)
 .. S DIC("W")="D CLMLST^IBCEPTR(Y)"
"RTN","IBCEPTR",37,0)
 .. S DIC=361.4,DIC(0)="AEMQ",D="B" D MIX^DIC1
"RTN","IBCEPTR",38,0)
 .. Q:Y'>0
"RTN","IBCEPTR",39,0)
 .. S IBRDATA(+Y)=""
"RTN","IBCEPTR",40,0)
 .. Q
"RTN","IBCEPTR",41,0)
 . Q
"RTN","IBCEPTR",42,0)
 ;
"RTN","IBCEPTR",43,0)
 I IBRMETH="B" D
"RTN","IBCEPTR",44,0)
 . F  D  Q:Y'>0
"RTN","IBCEPTR",45,0)
 .. W !
"RTN","IBCEPTR",46,0)
 .. S DIC("A")="Test Batch: "
"RTN","IBCEPTR",47,0)
 .. I $O(IBRDATA("")) S DIC("A")="Another Test Batch: "
"RTN","IBCEPTR",48,0)
 .. S DIC("S")="I $P(^(0),U,14),$O(^IBM(361.4,""C"",+Y,0))"
"RTN","IBCEPTR",49,0)
 .. S DIC=364.1,DIC(0)="AEMQ",D="B^C" D MIX^DIC1
"RTN","IBCEPTR",50,0)
 .. Q:Y'>0
"RTN","IBCEPTR",51,0)
 .. S IBRDATA(+Y)=""
"RTN","IBCEPTR",52,0)
 .. Q
"RTN","IBCEPTR",53,0)
 . Q
"RTN","IBCEPTR",54,0)
 ;
"RTN","IBCEPTR",55,0)
 I IBRMETH="D" D
"RTN","IBCEPTR",56,0)
 . W !
"RTN","IBCEPTR",57,0)
 . S DIR(0)="DAO^:"_DT_":AEX",DIR("A")="  Earliest Date Claims Transmitted: "
"RTN","IBCEPTR",58,0)
 . D ^DIR K DIR
"RTN","IBCEPTR",59,0)
 . I $D(DIRUT)!'Y Q
"RTN","IBCEPTR",60,0)
 . S IBRDATA(1)=Y
"RTN","IBCEPTR",61,0)
 . W !
"RTN","IBCEPTR",62,0)
 . S DIR(0)="DAO^"_Y_":"_DT_":AEX",DIR("A")="    Latest Date Claims Transmitted: ",DIR("B")="Today"
"RTN","IBCEPTR",63,0)
 . D ^DIR K DIR
"RTN","IBCEPTR",64,0)
 . I $D(DIRUT)!'Y Q
"RTN","IBCEPTR",65,0)
 . S IBRDATA(2)=Y
"RTN","IBCEPTR",66,0)
 . Q
"RTN","IBCEPTR",67,0)
 ;
"RTN","IBCEPTR",68,0)
 I '$O(IBRDATA("")) S STOP=1 G SELECTX
"RTN","IBCEPTR",69,0)
 I IBRMETH="D",'$G(IBRDATA(1)) S STOP=1 G SELECTX
"RTN","IBCEPTR",70,0)
 I IBRMETH="D",'$G(IBRDATA(2)) S STOP=1 G SELECTX
"RTN","IBCEPTR",71,0)
 ;
"RTN","IBCEPTR",72,0)
SELECTX ;
"RTN","IBCEPTR",73,0)
 Q
"RTN","IBCEPTR",74,0)
 ;
"RTN","IBCEPTR",75,0)
DEVICE ; standard device selection
"RTN","IBCEPTR",76,0)
 NEW ZTRTN,ZTDESC,ZTSAVE,POP
"RTN","IBCEPTR",77,0)
 W !!!,"This report is 80 characters wide.",!
"RTN","IBCEPTR",78,0)
 S ZTRTN="COMPILE^IBCEPTR"
"RTN","IBCEPTR",79,0)
 S ZTDESC="Test Claim EDI Transmission Report"
"RTN","IBCEPTR",80,0)
 S ZTSAVE("IBRMETH")=""
"RTN","IBCEPTR",81,0)
 S ZTSAVE("IBRDATA")=""
"RTN","IBCEPTR",82,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,"QM")
"RTN","IBCEPTR",83,0)
DEVX ;
"RTN","IBCEPTR",84,0)
 Q
"RTN","IBCEPTR",85,0)
 ;
"RTN","IBCEPTR",86,0)
COMPILE ; compile the data into a scratch global
"RTN","IBCEPTR",87,0)
 NEW RTN,EXTBCH,IBIFN,BCHIEN,TXDATM
"RTN","IBCEPTR",88,0)
 S RTN="IBCEPTR"
"RTN","IBCEPTR",89,0)
 KILL ^TMP($J,RTN)  ; init scratch global
"RTN","IBCEPTR",90,0)
 ;
"RTN","IBCEPTR",91,0)
 I IBRMETH="C" D    ; claim search
"RTN","IBCEPTR",92,0)
 . S EXTBCH=0
"RTN","IBCEPTR",93,0)
 . S IBIFN=0
"RTN","IBCEPTR",94,0)
 . F  S IBIFN=$O(IBRDATA(IBIFN)) Q:'IBIFN  D STORE(IBIFN)
"RTN","IBCEPTR",95,0)
 . Q
"RTN","IBCEPTR",96,0)
 ;
"RTN","IBCEPTR",97,0)
 I IBRMETH="B" D    ; batch search
"RTN","IBCEPTR",98,0)
 . S BCHIEN=0
"RTN","IBCEPTR",99,0)
 . F  S BCHIEN=$O(IBRDATA(BCHIEN)) Q:'BCHIEN  D
"RTN","IBCEPTR",100,0)
 .. S EXTBCH=$P($G(^IBA(364.1,BCHIEN,0)),U,1)
"RTN","IBCEPTR",101,0)
 .. I EXTBCH="" S EXTBCH="~unknown"
"RTN","IBCEPTR",102,0)
 .. S IBIFN=0
"RTN","IBCEPTR",103,0)
 .. F  S IBIFN=$O(^IBM(361.4,"C",BCHIEN,IBIFN)) Q:'IBIFN  D STORE(IBIFN)
"RTN","IBCEPTR",104,0)
 .. Q
"RTN","IBCEPTR",105,0)
 . Q
"RTN","IBCEPTR",106,0)
 ;
"RTN","IBCEPTR",107,0)
 I IBRMETH="D" D    ; date range search
"RTN","IBCEPTR",108,0)
 . S EXTBCH=0
"RTN","IBCEPTR",109,0)
 . S TXDATM=$O(^IBM(361.4,"ATD",IBRDATA(1)),-1)
"RTN","IBCEPTR",110,0)
 . F  S TXDATM=$O(^IBM(361.4,"ATD",TXDATM)) Q:'TXDATM  Q:(TXDATM\1)>IBRDATA(2)  D
"RTN","IBCEPTR",111,0)
 .. S IBIFN=0
"RTN","IBCEPTR",112,0)
 .. F  S IBIFN=$O(^IBM(361.4,"ATD",TXDATM,IBIFN)) Q:'IBIFN  D STORE(IBIFN)
"RTN","IBCEPTR",113,0)
 .. Q
"RTN","IBCEPTR",114,0)
 . Q
"RTN","IBCEPTR",115,0)
 ;
"RTN","IBCEPTR",116,0)
 D PRINT                           ; print the report
"RTN","IBCEPTR",117,0)
 D ^%ZISC                          ; close the device
"RTN","IBCEPTR",118,0)
 KILL ^TMP($J,RTN)                 ; clean up scratch global
"RTN","IBCEPTR",119,0)
 I $D(ZTQUEUED) S ZTREQ="@"        ; purge the task record
"RTN","IBCEPTR",120,0)
COMPX ;
"RTN","IBCEPTR",121,0)
 Q
"RTN","IBCEPTR",122,0)
 ;
"RTN","IBCEPTR",123,0)
STORE(IBIFN) ; Input = internal bill#; continue compilation
"RTN","IBCEPTR",124,0)
 NEW IB0,CLAIM,IBRTXD0,TXIEN,SMIEN,DATA,TXDTM
"RTN","IBCEPTR",125,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTR",126,0)
 S CLAIM=$P(IB0,U,1)  ; external claim#
"RTN","IBCEPTR",127,0)
 I CLAIM="" S CLAIM="~unknown"
"RTN","IBCEPTR",128,0)
 S IBRTXD0=99999999   ; initial value for earliest transmission date
"RTN","IBCEPTR",129,0)
 ;
"RTN","IBCEPTR",130,0)
 I IBRMETH="C" D   ; claim search for transmission data (all)
"RTN","IBCEPTR",131,0)
 . S TXIEN=0
"RTN","IBCEPTR",132,0)
 . F  S TXIEN=$O(^IBM(361.4,IBIFN,1,TXIEN)) Q:'TXIEN  D STORETX(IBIFN,TXIEN)
"RTN","IBCEPTR",133,0)
 . Q
"RTN","IBCEPTR",134,0)
 ;
"RTN","IBCEPTR",135,0)
 I IBRMETH="B" D   ; batch search for transmission data ("C" x-ref)
"RTN","IBCEPTR",136,0)
 . S TXIEN=0
"RTN","IBCEPTR",137,0)
 . F  S TXIEN=$O(^IBM(361.4,"C",BCHIEN,IBIFN,TXIEN)) Q:'TXIEN  D STORETX(IBIFN,TXIEN)
"RTN","IBCEPTR",138,0)
 . Q
"RTN","IBCEPTR",139,0)
 ;
"RTN","IBCEPTR",140,0)
 I IBRMETH="D" D   ; date range search for transmission data ("ATD" xref)
"RTN","IBCEPTR",141,0)
 . S TXIEN=0
"RTN","IBCEPTR",142,0)
 . F  S TXIEN=$O(^IBM(361.4,"ATD",TXDATM,IBIFN,TXIEN)) Q:'TXIEN  D STORETX(IBIFN,TXIEN)
"RTN","IBCEPTR",143,0)
 . Q
"RTN","IBCEPTR",144,0)
 ;
"RTN","IBCEPTR",145,0)
 ; loop thru all returned messages for claim
"RTN","IBCEPTR",146,0)
 S SMIEN=0
"RTN","IBCEPTR",147,0)
 F  S SMIEN=$O(^IBM(361.4,IBIFN,2,SMIEN)) Q:'SMIEN  D
"RTN","IBCEPTR",148,0)
 . S DATA=$G(^IBM(361.4,IBIFN,2,SMIEN,0)) Q:DATA=""   ; received msg data
"RTN","IBCEPTR",149,0)
 . S TXDTM=$P(DATA,U,1) Q:'TXDTM    ; msg rec'd date/time
"RTN","IBCEPTR",150,0)
 . ;
"RTN","IBCEPTR",151,0)
 . ; Batch only: if this status message was received before the
"RTN","IBCEPTR",152,0)
 . ; earliest transmission for this batch, then don't include it
"RTN","IBCEPTR",153,0)
 . I IBRMETH="B",TXDTM'>IBRTXD0 Q
"RTN","IBCEPTR",154,0)
 . ;
"RTN","IBCEPTR",155,0)
 . ; Date range search only:  make sure the date/time the status message
"RTN","IBCEPTR",156,0)
 . ; was received is inside the user specified date range for this report
"RTN","IBCEPTR",157,0)
 . I IBRMETH="D",(TXDTM\1)<IBRDATA(1) Q    ; rec'd too early
"RTN","IBCEPTR",158,0)
 . I IBRMETH="D",(TXDTM\1)>IBRDATA(2) Q    ; rec'd too late
"RTN","IBCEPTR",159,0)
 . ;
"RTN","IBCEPTR",160,0)
 . ; store it
"RTN","IBCEPTR",161,0)
 . M ^TMP($J,RTN,EXTBCH,CLAIM,TXDTM,2,SMIEN)=^IBM(361.4,IBIFN,2,SMIEN)
"RTN","IBCEPTR",162,0)
 . Q
"RTN","IBCEPTR",163,0)
STOREX ;
"RTN","IBCEPTR",164,0)
 Q
"RTN","IBCEPTR",165,0)
 ;
"RTN","IBCEPTR",166,0)
STORETX(IBIFN,TXIEN) ; store transmission info
"RTN","IBCEPTR",167,0)
 NEW DATA,TXDTM
"RTN","IBCEPTR",168,0)
 S DATA=$G(^IBM(361.4,IBIFN,1,TXIEN,0))
"RTN","IBCEPTR",169,0)
 I DATA="" G STTXXX
"RTN","IBCEPTR",170,0)
 S TXDTM=$P(DATA,U,1)   ; transmit date/time
"RTN","IBCEPTR",171,0)
 I 'TXDTM G STTXXX
"RTN","IBCEPTR",172,0)
 I TXDTM<IBRTXD0 S IBRTXD0=TXDTM
"RTN","IBCEPTR",173,0)
 ;
"RTN","IBCEPTR",174,0)
 ; store it
"RTN","IBCEPTR",175,0)
 M ^TMP($J,RTN,EXTBCH,CLAIM,TXDTM,1,TXIEN)=^IBM(361.4,IBIFN,1,TXIEN)
"RTN","IBCEPTR",176,0)
STTXXX ;
"RTN","IBCEPTR",177,0)
 Q
"RTN","IBCEPTR",178,0)
 ;
"RTN","IBCEPTR",179,0)
PRINT ; print the report to the specified device
"RTN","IBCEPTR",180,0)
 NEW MAXCNT,CRT,PAGECNT,STOP,DIR,X,Y,DIRUT,DUOUT,DTOUT,DIROUT
"RTN","IBCEPTR",181,0)
 NEW BATCH,CLAIM,IBIFN,CLMD,TXD,TYPE,IEN
"RTN","IBCEPTR",182,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCEPTR",183,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCEPTR",184,0)
 S PAGECNT=0,STOP=0
"RTN","IBCEPTR",185,0)
 ;
"RTN","IBCEPTR",186,0)
 I '$D(^TMP($J,RTN)) D HEADER W !!!?5,"No Data Found"
"RTN","IBCEPTR",187,0)
 ;
"RTN","IBCEPTR",188,0)
 S BATCH=""
"RTN","IBCEPTR",189,0)
 F  S BATCH=$O(^TMP($J,RTN,BATCH)) Q:BATCH=""  D  Q:STOP
"RTN","IBCEPTR",190,0)
 . D HEADER Q:STOP
"RTN","IBCEPTR",191,0)
 . I BATCH'=0 W !!,"Batch#:  ",BATCH
"RTN","IBCEPTR",192,0)
 . S CLAIM=""
"RTN","IBCEPTR",193,0)
 . F  S CLAIM=$O(^TMP($J,RTN,BATCH,CLAIM)) Q:CLAIM=""  D  Q:STOP
"RTN","IBCEPTR",194,0)
 .. I $Y+2>MAXCNT!'PAGECNT D HEADER Q:STOP
"RTN","IBCEPTR",195,0)
 .. I BATCH=0 W !
"RTN","IBCEPTR",196,0)
 .. W !,"Claim#:  ",CLAIM
"RTN","IBCEPTR",197,0)
 .. S IBIFN=+$O(^DGCR(399,"B",CLAIM,""))
"RTN","IBCEPTR",198,0)
 .. I IBIFN S CLMD=$$BT(IBIFN) W ?18,$E($P(CLMD,U,3),1,20),?40,"(",$P(CLMD,U,1),")"
"RTN","IBCEPTR",199,0)
 .. W !,$$RJ^XLFSTR("",80,"-")
"RTN","IBCEPTR",200,0)
 .. ;
"RTN","IBCEPTR",201,0)
 .. S TXD=0
"RTN","IBCEPTR",202,0)
 .. F  S TXD=$O(^TMP($J,RTN,BATCH,CLAIM,TXD)) Q:'TXD!STOP  S TYPE=0 F  S TYPE=$O(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE)) Q:'TYPE!STOP  S IEN=0 F  S IEN=$O(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN)) Q:'IEN!STOP  D  Q:STOP
"RTN","IBCEPTR",203,0)
 ... I TYPE=1 D TXPRT
"RTN","IBCEPTR",204,0)
 ... I TYPE=2 D SMPRT
"RTN","IBCEPTR",205,0)
 ... Q
"RTN","IBCEPTR",206,0)
 .. Q
"RTN","IBCEPTR",207,0)
 . Q
"RTN","IBCEPTR",208,0)
 ;
"RTN","IBCEPTR",209,0)
 I STOP G PRINTX
"RTN","IBCEPTR",210,0)
 I $Y+2>MAXCNT!'PAGECNT D HEADER I STOP G PRINTX
"RTN","IBCEPTR",211,0)
 W !!?5,"*** End of Report ***"
"RTN","IBCEPTR",212,0)
 I CRT,'$D(ZTQUEUED) S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTR",213,0)
PRINTX ;
"RTN","IBCEPTR",214,0)
 Q
"RTN","IBCEPTR",215,0)
 ;
"RTN","IBCEPTR",216,0)
TXPRT ; print transmission information
"RTN","IBCEPTR",217,0)
 NEW DATA,TXDTM,EXTBCH,TXBY,INSIEN,PAYER,PSEQ,INZ
"RTN","IBCEPTR",218,0)
 S DATA=$G(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,0)) I DATA="" G TXPRTX
"RTN","IBCEPTR",219,0)
 S TXDTM=$$FMTE^XLFDT($P(DATA,U,1),"5Z")
"RTN","IBCEPTR",220,0)
 S EXTBCH=$$EXTERNAL^DILFD(361.41,.02,,$P(DATA,U,2))  ; batch
"RTN","IBCEPTR",221,0)
 S TXBY=$$EXTERNAL^DILFD(361.41,.03,,$P(DATA,U,3))    ; who tx
"RTN","IBCEPTR",222,0)
 S INSIEN=+$$FINDINS^IBCEF1(IBIFN,$P(DATA,U,4))       ; insurance
"RTN","IBCEPTR",223,0)
 S INZ=$$INSADD^IBCNSC02(INSIEN)                      ; ins name/addr
"RTN","IBCEPTR",224,0)
 S PAYER=$P(INZ,U,1)                                  ; ins name
"RTN","IBCEPTR",225,0)
 S PSEQ=$TR($P(DATA,U,4),"123","PST")                 ; payer seq
"RTN","IBCEPTR",226,0)
 ;
"RTN","IBCEPTR",227,0)
 I $Y+2>MAXCNT!'PAGECNT D HEADER I STOP G TXPRTX
"RTN","IBCEPTR",228,0)
 W !,"Transmission Information"
"RTN","IBCEPTR",229,0)
 W !?1,TXDTM,?22,"Bch#",+$E(EXTBCH,4,99),?33,$E(TXBY,1,15),?50,$E(PAYER,1,20),"  (",PSEQ,")"
"RTN","IBCEPTR",230,0)
 ; display address info if not Medicare
"RTN","IBCEPTR",231,0)
 I '$$MCRWNR^IBEFUNC(INSIEN) W !?50,$E($P(INZ,U,2),1,15),",",$E($P(INZ,U,3),1,11),",",$E($P(INZ,U,4),1,2)
"RTN","IBCEPTR",232,0)
 W !
"RTN","IBCEPTR",233,0)
TXPRTX ;
"RTN","IBCEPTR",234,0)
 Q
"RTN","IBCEPTR",235,0)
 ;
"RTN","IBCEPTR",236,0)
SMPRT ; print returned status message information
"RTN","IBCEPTR",237,0)
 NEW DATA,TXDTM,SEVERITY,Z
"RTN","IBCEPTR",238,0)
 S DATA=$G(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,0)) I DATA="" G SMPRTX
"RTN","IBCEPTR",239,0)
 S TXDTM=$$FMTE^XLFDT($P(DATA,U,1),"5Z")
"RTN","IBCEPTR",240,0)
 S SEVERITY=$$EXTERNAL^DILFD(361.42,.02,,$P(DATA,U,2))  ; msg severity
"RTN","IBCEPTR",241,0)
 ;
"RTN","IBCEPTR",242,0)
 I $Y+2>MAXCNT!'PAGECNT D HEADER I STOP G SMPRTX
"RTN","IBCEPTR",243,0)
 W !,"Status Message Information"
"RTN","IBCEPTR",244,0)
 W !?1,TXDTM,?22,SEVERITY,?65,"Msg#",$P(DATA,U,3)
"RTN","IBCEPTR",245,0)
 S Z=0
"RTN","IBCEPTR",246,0)
 F  S Z=$O(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,1,Z)) Q:'Z  D  Q:STOP
"RTN","IBCEPTR",247,0)
 . I $Y+1>MAXCNT!'PAGECNT D HEADER Q:STOP
"RTN","IBCEPTR",248,0)
 . W !?2,$G(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,1,Z,0))
"RTN","IBCEPTR",249,0)
 . Q
"RTN","IBCEPTR",250,0)
 W !
"RTN","IBCEPTR",251,0)
SMPRTX ;
"RTN","IBCEPTR",252,0)
 Q
"RTN","IBCEPTR",253,0)
 ;
"RTN","IBCEPTR",254,0)
HEADER ; page break and header
"RTN","IBCEPTR",255,0)
 NEW LIN,HDR,TAB
"RTN","IBCEPTR",256,0)
 S STOP=0
"RTN","IBCEPTR",257,0)
 I CRT,PAGECNT>0,'$D(ZTQUEUED) D  I STOP G HEADX
"RTN","IBCEPTR",258,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCEPTR",259,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTR",260,0)
 . I 'Y S STOP=1 Q
"RTN","IBCEPTR",261,0)
 . Q
"RTN","IBCEPTR",262,0)
 ;
"RTN","IBCEPTR",263,0)
 S PAGECNT=PAGECNT+1
"RTN","IBCEPTR",264,0)
 W @IOF,!
"RTN","IBCEPTR",265,0)
 ;
"RTN","IBCEPTR",266,0)
 W "Test Claim EDI Transmission Report"
"RTN","IBCEPTR",267,0)
 S HDR="Page: "_PAGECNT,TAB=80-$L(HDR)-1
"RTN","IBCEPTR",268,0)
 W ?TAB,HDR
"RTN","IBCEPTR",269,0)
 W !,"Selected ",$S(IBRMETH="B":"Batches",IBRMETH="C":"Claims",1:"Date Range")
"RTN","IBCEPTR",270,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,"1Z"),TAB=80-$L(HDR)-1
"RTN","IBCEPTR",271,0)
 W ?TAB,HDR
"RTN","IBCEPTR",272,0)
 W !,$$RJ^XLFSTR("",80,"=")
"RTN","IBCEPTR",273,0)
 ;
"RTN","IBCEPTR",274,0)
 ; check for a stop request
"RTN","IBCEPTR",275,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() D  G HEADX
"RTN","IBCEPTR",276,0)
 . S (ZTSTOP,STOP)=1
"RTN","IBCEPTR",277,0)
 . W !!!?5,"*** Report Halted by TaskManager Request ***"
"RTN","IBCEPTR",278,0)
 . Q
"RTN","IBCEPTR",279,0)
 ;
"RTN","IBCEPTR",280,0)
HEADX ;
"RTN","IBCEPTR",281,0)
 Q
"RTN","IBCEPTR",282,0)
 ;
"RTN","IBCEPTR",283,0)
BT(IBIFN) ; bill type and info
"RTN","IBCEPTR",284,0)
 ; [1] TYPE (form type, charge type, inp/outp)
"RTN","IBCEPTR",285,0)
 ; [2] claim#
"RTN","IBCEPTR",286,0)
 ; [3] patient name
"RTN","IBCEPTR",287,0)
 NEW TYPE,IB0,F,C,S S TYPE=""
"RTN","IBCEPTR",288,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) I IB0="" Q ""
"RTN","IBCEPTR",289,0)
 S F=$P(IB0,U,19),F=$S(F=2:"1500",1:"UB92")
"RTN","IBCEPTR",290,0)
 S C=$P(IB0,U,27),C=$S(C=1:"Inst",1:"Prof")
"RTN","IBCEPTR",291,0)
 S S=$$INPAT^IBCEF(IBIFN),S=$S(S=1:"Inpat",1:"Outpat")
"RTN","IBCEPTR",292,0)
 S TYPE=F_", "_C_", "_S
"RTN","IBCEPTR",293,0)
 Q TYPE_U_$P(IB0,U,1)_U_$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTR",294,0)
 ;
"RTN","IBCEPTR",295,0)
CLMLST(IBIFN) ; DIC lister
"RTN","IBCEPTR",296,0)
 NEW TYPE,LTD,N1,N2
"RTN","IBCEPTR",297,0)
 S TYPE=$P($$BT(IBIFN),U,1)
"RTN","IBCEPTR",298,0)
 S LTD=$$FMTE^XLFDT($P($G(^IBM(361.4,IBIFN,0)),U,2),"2Z")
"RTN","IBCEPTR",299,0)
 S N1=+$P($G(^IBM(361.4,IBIFN,1,0)),U,4)  ; # transmissions
"RTN","IBCEPTR",300,0)
 S N2=+$P($G(^IBM(361.4,IBIFN,2,0)),U,4)  ; # return messages
"RTN","IBCEPTR",301,0)
 W " ",TYPE,?34," ",LTD,?45," ",N1," Transmission",$S(N1'=1:"s",1:"")
"RTN","IBCEPTR",302,0)
 W ?63," ",N2," Message",$S(N2'=1:"s",1:"")
"RTN","IBCEPTR",303,0)
CLMLSTX ;
"RTN","IBCEPTR",304,0)
 Q
"RTN","IBCEPTR",305,0)
 ;
"RTN","IBCEPU")
0^49^B942471^B931985
"RTN","IBCEPU",1,0)
IBCEPU ;ALB/TMP - Functions for PROVIDER ID MAINTENANCE ;13-DEC-99
"RTN","IBCEPU",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348**;21-MAR-94;Build 5
"RTN","IBCEPU",3,0)
 G AWAY
"RTN","IBCEPU",4,0)
AWAY Q
"RTN","IBCEPU",5,0)
 ; This routine is used by various input transforms to make sure the qualifiers 
"RTN","IBCEPU",6,0)
 ; comply with the spreadsheet of valid qualiers provided by CBO.
"RTN","IBCEPU",7,0)
 ;
"RTN","IBCEPU",8,0)
LFINS(Y) ; Lab or Facility provided by insuance
"RTN","IBCEPU",9,0)
 Q $$CHECK("^1A^1B^1C^1H^G2^LU^N5^X5^",Y)
"RTN","IBCEPU",10,0)
 ;
"RTN","IBCEPU",11,0)
NVALFOWN(Y) ; Non-VA Lab or Facility provided by Lab or Facility 
"RTN","IBCEPU",12,0)
 Q $$CHECK("^0B^TJ^EI^X4^X5^1G^",Y)
"RTN","IBCEPU",13,0)
 ;
"RTN","IBCEPU",14,0)
BPS(Y) ; Billing Provider Secodnary IDs
"RTN","IBCEPU",15,0)
 Q $$CHECK("^0B^1A^1B^1C^1G^1H^B3^BQ^EI^FH^G2^LU^U3^X5^",Y)
"RTN","IBCEPU",16,0)
 ;
"RTN","IBCEPU",17,0)
RAOWN(Y) ; Rendering/Attending et al own IDs
"RTN","IBCEPU",18,0)
 Q $$CHECK("^0B^1G^EI^X5^SY^",Y)
"RTN","IBCEPU",19,0)
 ;
"RTN","IBCEPU",20,0)
RAINS(Y) ; Rendering/Attending et al provided by insurance
"RTN","IBCEPU",21,0)
 Q $$CHECK("^1A^1B^1C^1G^1H^G2^LU^N5^",Y)
"RTN","IBCEPU",22,0)
 ;
"RTN","IBCEPU",23,0)
EPT(Y) ; Electronic Plan Type (used to calculate ID based on plan type)
"RTN","IBCEPU",24,0)
 Q $$CHECK("^1J^",Y)
"RTN","IBCEPU",25,0)
CHECK(X,Y) ;
"RTN","IBCEPU",26,0)
 I '$P($G(^IBE(355.97,+Y,0)),U,8) Q 0
"RTN","IBCEPU",27,0)
 N X12
"RTN","IBCEPU",28,0)
 S X12=$P($G(^IBE(355.97,+Y,0)),U,3)
"RTN","IBCEPU",29,0)
 Q:X12="" 0
"RTN","IBCEPU",30,0)
 S X12=U_X12_U
"RTN","IBCEPU",31,0)
 I X[X12 Q 1
"RTN","IBCEPU",32,0)
 Q 0
"RTN","IBCEQ1A")
0^44^B62193570^B62244204
"RTN","IBCEQ1A",1,0)
IBCEQ1A ;ALB/BSL,TMK - PROVIDER ID QUERY REPORT ;25-AUG-03
"RTN","IBCEQ1A",2,0)
 ;;2.0;INTEGRATED BILLING;**232,348**;21-MAR-94;Build 5
"RTN","IBCEQ1A",3,0)
 ;
"RTN","IBCEQ1A",4,0)
RPTOUT ; Print from data in ^XTMP
"RTN","IBCEQ1A",5,0)
 N IBP,IBA,IBI,IBIN,IBPNM,IBPNUM,IBSTOP,IBX,IBZ,IBPG,IBICONT,Z
"RTN","IBCEQ1A",6,0)
 K ^TMP($J,"IBZ232")
"RTN","IBCEQ1A",7,0)
 F Z=1:1:6 S ^TMP($J,"IBZ232",Z)=""
"RTN","IBCEQ1A",8,0)
 S (IBPG,IBSTOP)=0
"RTN","IBCEQ1A",9,0)
 S IBA=0 F  S IBA=$O(^XTMP("IB_PLAN232",1,IBA)) Q:'IBA  D
"RTN","IBCEQ1A",10,0)
 . S IBX=$G(^XTMP("IB_PLAN232",1,IBA,0))
"RTN","IBCEQ1A",11,0)
 . ; Sort by err type, ins co ien
"RTN","IBCEQ1A",12,0)
 . S ^TMP($J,"IBZ232",+$P(IBX,U,16),+$P(IBX,U,11),IBA)=IBX
"RTN","IBCEQ1A",13,0)
 ;
"RTN","IBCEQ1A",14,0)
 S IBZ=0 F  S IBZ=$O(^TMP($J,"IBZ232",IBZ)) Q:'IBZ!IBSTOP!(IBZ>6)  D HDR1(.IBPG,.IBSTOP,IBZ,0) S IBI=0 F  S IBI=$O(^TMP($J,"IBZ232",IBZ,IBI)) Q:'IBI!IBSTOP  D
"RTN","IBCEQ1A",15,0)
 . S IBIN=$P($G(^DIC(36,+IBI,0)),U)_" ("_$S(+$G(^(3))=1:"",1:"NOT ")_"SET TO TRANSMIT LIVE)"
"RTN","IBCEQ1A",16,0)
 . D INSHDR(.IBPG,.IBSTOP,IBIN,IBZ,0) S IBICONT=0
"RTN","IBCEQ1A",17,0)
 . S IBA=0 F  S IBA=$O(^TMP($J,"IBZ232",IBZ,IBI,IBA)) Q:'IBA!IBSTOP  S IBX=$G(^(IBA)) D
"RTN","IBCEQ1A",18,0)
 .. I ($Y+5)>IOSL D INSHDR(.IBPG,.IBSTOP,IBIN,IBZ,IBICONT) Q:IBSTOP
"RTN","IBCEQ1A",19,0)
 .. ;
"RTN","IBCEQ1A",20,0)
 .. I IBZ'=4,IBZ'=5 D
"RTN","IBCEQ1A",21,0)
 ... S IBP=+$P(IBX,U,14)
"RTN","IBCEQ1A",22,0)
 ... I $P(IBX,U,14)[".91" S IBPNM="ALL PROVIDERS"
"RTN","IBCEQ1A",23,0)
 ... I $P(IBX,U,14)'[".91" D
"RTN","IBCEQ1A",24,0)
 .... N Z
"RTN","IBCEQ1A",25,0)
 .... S Z=$P($G(^IBA(355.9,IBP,0)),U)
"RTN","IBCEQ1A",26,0)
 .... S IBPNM=$S(Z["VA(200":"",1:"#")_$$EXTERNAL^DILFD(355.9,.01,"",Z)
"RTN","IBCEQ1A",27,0)
 ... S IBPNUM=$P($G(^IBA(+$P($P(IBX,U,14),";",2),IBP,0)),U,7)
"RTN","IBCEQ1A",28,0)
 ... D WRT(1,"   "_$E($P("BOTH^UB92^CMS-1500",U,$P(IBX,U,4)+1)_$J("",9),1,9)_"  "_$E($P(IBX,U,15)_$J("",23),1,23)_" "_$E(IBPNM_$J("",28),1,28)_"  "_$E(IBPNUM,1,11))
"RTN","IBCEQ1A",29,0)
 .. ;
"RTN","IBCEQ1A",30,0)
 .. I IBZ=4!(IBZ=5) D
"RTN","IBCEQ1A",31,0)
 ... N Z
"RTN","IBCEQ1A",32,0)
 ... S Z=$G(^IBA(355.3,+$P(IBX,U,13),0))
"RTN","IBCEQ1A",33,0)
 ... D WRT(1,"   "_$E($P(Z,U,3)_$J("",20),1,20)_"  "_$E($P(Z,U,4)_$J("",17),1,17)_"  "_$$EXTERNAL^DILFD(355.3,.15,"",$P(Z,U,15)))
"RTN","IBCEQ1A",34,0)
 .. S:'IBICONT IBICONT=1
"RTN","IBCEQ1A",35,0)
 ;
"RTN","IBCEQ1A",36,0)
 I 'IBSTOP D  ;Totals
"RTN","IBCEQ1A",37,0)
 . N Z
"RTN","IBCEQ1A",38,0)
 . S Z=$G(^XTMP("IB_PLAN232"))
"RTN","IBCEQ1A",39,0)
 . I ($Y+10)>IOSL!'IBPG D HDR(.IBPG,.IBSTOP,"") Q:IBSTOP
"RTN","IBCEQ1A",40,0)
 . D WRT(2,$J("",25)_"TOTAL # OF IDs CHECKED: "_+$P(Z,U,4))
"RTN","IBCEQ1A",41,0)
 . D WRT(1,$J("",14)_"TOT # BLUE CROSS/SHIELD IDS FOUND: "_+$P(Z,U,5))
"RTN","IBCEQ1A",42,0)
 . D WRT(1,"TOTAL # OF INS CO. W/BLUE PLANS AND NO BLUE IDS: "_+$P(Z,U,3))
"RTN","IBCEQ1A",43,0)
 . D WRT(1,$J("",21)_"TOTAL # OF ERRORS/WARNINGS: "_+$P(Z,U,6))
"RTN","IBCEQ1A",44,0)
 ;
"RTN","IBCEQ1A",45,0)
 I '$D(ZTQUEUED) D ^%ZISC I 'IBSTOP,IBPG D ASK()
"RTN","IBCEQ1A",46,0)
 I $D(ZTQUEUED),'IBSTOP S ZTREQ="@"
"RTN","IBCEQ1A",47,0)
 I $G(^TMP($J,"SENDMSG")),'IBSTOP D
"RTN","IBCEQ1A",48,0)
 . N XMDUZ,XMSUBJ,XMBODY,XMTO,XMZ
"RTN","IBCEQ1A",49,0)
 . S XMDUZ=DUZ,XMSUBJ=$E("PROVIDER ID QUERY FROM "_$P($G(^DIC(4,+$P($G(^IBE(350.9,1,0)),U,2),0)),U),1,65),XMBODY="^TMP($J,""SENDMSG"",1)"
"RTN","IBCEQ1A",50,0)
 . M XMTO=^TMP($J,"SENDMSG",0)
"RTN","IBCEQ1A",51,0)
 . S Z="" F  S Z=$O(^TMP($J,"SENDMSG",0,Z)) Q:Z=""  S XMZ(Z)=""
"RTN","IBCEQ1A",52,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,"",.XMZ)
"RTN","IBCEQ1A",53,0)
 K ^TMP($J,"IBZ232"),^TMP($J,"SENDMSG")
"RTN","IBCEQ1A",54,0)
 Q
"RTN","IBCEQ1A",55,0)
 ;
"RTN","IBCEQ1A",56,0)
HDR(IBPG,IBSTOP,IBZ,FF) ; Main hdr
"RTN","IBCEQ1A",57,0)
 ; FF = 0 if continuation pg so it writes it to report, but not mail msg
"RTN","IBCEQ1A",58,0)
 N Z,IBT
"RTN","IBCEQ1A",59,0)
 Q:$G(IBSTOP)
"RTN","IBCEQ1A",60,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (IBSTOP,ZTSTOP)=1 K ZTREQ I +$G(IBPG) D WRT(2,"***TASK STOPPED BY USER***") Q
"RTN","IBCEQ1A",61,0)
 I IBPG&($E(IOST,1,2)="C-") D ASK(.IBSTOP) Q:IBSTOP
"RTN","IBCEQ1A",62,0)
 S IBT=$S(IBPG:1,1:0)
"RTN","IBCEQ1A",63,0)
 S IBPG=IBPG+1
"RTN","IBCEQ1A",64,0)
 S Z="PROVIDER ID VERIFICATION QUERY REPORT"
"RTN","IBCEQ1A",65,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z)\2)_Z,"",1,79)
"RTN","IBCEQ1A",66,0)
 S Z=$$SETSTR^VALM1("Page: "_IBPG,Z,70,10)
"RTN","IBCEQ1A",67,0)
 D WRT(0,"@IOF",$G(FF))
"RTN","IBCEQ1A",68,0)
 D WRT(1,Z,$G(FF))
"RTN","IBCEQ1A",69,0)
 S Z="RUN DATE: "_$$FMTE^XLFDT(DT,2),Z=$J("",80-$L(Z)\2)_Z
"RTN","IBCEQ1A",70,0)
 D WRT(1,Z,$G(FF))
"RTN","IBCEQ1A",71,0)
 I IBZ'="",IBZ'=4,IBZ'=5 D
"RTN","IBCEQ1A",72,0)
 . D WRT(2,"   FORM TYPE  PROV ID TYPE"_$J("",12)_"PROVIDER NAME (#=Non-VA)"_$J("",6)_"PROV ID",$G(FF))
"RTN","IBCEQ1A",73,0)
 I IBZ=4!(IBZ=5) D
"RTN","IBCEQ1A",74,0)
 . D WRT(2,"   GROUP NAME"_$J("",12)_"GROUP NUMBER"_$J("",7)_"ELECTRONIC PLAN TYPE",$G(FF))
"RTN","IBCEQ1A",75,0)
 D WRT(1,$TR($J("",IOM-1)," ","-"),$G(FF))
"RTN","IBCEQ1A",76,0)
 Q
"RTN","IBCEQ1A",77,0)
 ;
"RTN","IBCEQ1A",78,0)
HDR1(IBPG,IBSTOP,IBZ,IBCONT) ; Hdr err typ
"RTN","IBCEQ1A",79,0)
 N Z,Z0,Z1
"RTN","IBCEQ1A",80,0)
 D HDR(.IBPG,.IBSTOP,IBZ,IBCONT) Q:IBSTOP
"RTN","IBCEQ1A",81,0)
 S Z="",$P(Z,"*",80)="" D WRT(1,Z,IBCONT)
"RTN","IBCEQ1A",82,0)
 S Z0="* "_$S(IBZ>1:"WARNING: ",1:"ERROR: ")
"RTN","IBCEQ1A",83,0)
 ;
"RTN","IBCEQ1A",84,0)
 I IBZ'=4,IBZ'=5 D
"RTN","IBCEQ1A",85,0)
 . N X
"RTN","IBCEQ1A",86,0)
 . S X="BLUE CROSS ID FOUND FOR A 1500 FORM TYPE ONLY^BLUE SHIELD ID FOUND FOR A UB92 FORM TYPE ONLY^BLUE CROSS ID FOUND FOR BOTH FORM TYPES^BL CROSS/BL SHIELD IDs FOUND FOR PLANS NOT HAVING 'BL' ELECTRONIC PLAN TYPE"
"RTN","IBCEQ1A",87,0)
 . S Z0=Z0_$S(IBZ<6:$P(X,U,IBZ),IBZ=6:"""VAD000"" PROVIDER ID FOUND NOT SET UP AS A UPIN PROVIDER ID TYPE",1:"")
"RTN","IBCEQ1A",88,0)
 I IBZ=4 D
"RTN","IBCEQ1A",89,0)
 . S Z0=Z0_"BL CROSS/BL SHIELD IDs FOUND FOR PLANS NOT HAVING 'BL' ELECTRONIC" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",90,0)
 . S Z0="*"_$J("",10)_"PLAN TYPE"
"RTN","IBCEQ1A",91,0)
 ;
"RTN","IBCEQ1A",92,0)
 I IBZ=5 D
"RTN","IBCEQ1A",93,0)
 . S Z0=Z0_"INSURANCE CO HAS BL CROSS/SHIELD PLANS, BUT NO BL CROSS/SHIELD IDs"
"RTN","IBCEQ1A",94,0)
 ;
"RTN","IBCEQ1A",95,0)
 S Z0=Z0_$S(IBCONT:" (CONT)",1:"")
"RTN","IBCEQ1A",96,0)
 D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",97,0)
 ;
"RTN","IBCEQ1A",98,0)
 I 'IBCONT D
"RTN","IBCEQ1A",99,0)
 . I IBZ=1 D
"RTN","IBCEQ1A",100,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",101,0)
 .. S Z0="* SOLUTION: THIS ID WILL NEVER BE USED ELECTRONICALLY." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",102,0)
 .. S Z0="*"_$J("",11)_"CHANGE PROVIDER ID TYPE TO BLUE SHIELD IF THIS ID SHOULD BE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",103,0)
 .. S Z0="*"_$J("",11)_"TRANSMITTED ON A 1500." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",104,0)
 . ;
"RTN","IBCEQ1A",105,0)
 . I IBZ=2 D
"RTN","IBCEQ1A",106,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",107,0)
 .. S Z0="* SUGGESTION: VISTA WILL TRANSMIT THIS ID ELECTRONICALLY, BUT IT IS OPTIMAL"  D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",108,0)
 .. S Z0="*"_$J("",13)_"TO HAVE THIS ID SET UP AS BLUE CROSS." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",109,0)
 . ;
"RTN","IBCEQ1A",110,0)
 . I IBZ=3 D
"RTN","IBCEQ1A",111,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",112,0)
 .. S Z0="* SUGGESTION: A BLUE CROSS ID CAN ONLY BE APPLIED TO A UB92 FORM TYPE." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",113,0)
 .. S Z0="*"_$J("",13)_"EDIT THE 'APPLIED TO FORM TYPE' FOR THE ID TO BE UB92 ONLY." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",114,0)
 .. S Z0="*"_$J("",13)_"IF YOU NEED THIS ID ON A 1500, SET IT UP AS A BLUE SHIELD ID" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",115,0)
 .. S Z0="*"_$J("",13)_"APPLIED TO A CMS-1500 FORM TYPE." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",116,0)
 . ;
"RTN","IBCEQ1A",117,0)
 . I IBZ=4 D
"RTN","IBCEQ1A",118,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",119,0)
 .. S Z0="* SUGGESTION: A BLUE CROSS OR BLUE SHIELD ID IS DEFINED FOR THE INSURANCE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",120,0)
 .. S Z0="*"_$J("",13)_"COMPANY, BUT THE ELECTRONIC PLAN TYPE FOR ONE OR MORE OF THE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",121,0)
 .. S Z0="*"_$J("",13)_"COMPANY'S PLANS IS NOT SET TO 'BL' (BLUE CROSS/BLUE SHIELD)." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",122,0)
 .. S Z0="*"_$J("",13)_"IF BLUE CROSS/BLUE SHIELD IDs ARE NEEDED TO PRINT FOR ANY" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",123,0)
 .. S Z0="*"_$J("",13)_"OF THESE PLANS, ITS ELECTRONIC PLAN TYPE MUST BE CHANGED TO BL." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",124,0)
 . ;
"RTN","IBCEQ1A",125,0)
 . I IBZ=5 D
"RTN","IBCEQ1A",126,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",127,0)
 .. S Z0="* SUGGESTION: A BLUE CROSS OR BLUE SHIELD PLAN IS DEFINED FOR THE INSURANCE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",128,0)
 .. S Z0="*"_$J("",13)_"COMPANY, BUT YOU HAVE ONLY NON-BLUE CROSS/SHIELD IDS SET UP." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",129,0)
 .. S Z0="*"_$J("",13)_"YOU MUST SET UP THE APPROPRIATE BLUE CROSS/BLUE SHIELD IDs" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",130,0)
 .. S Z0="*"_$J("",13)_"FOR THE INSURANCE COMPANY." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",131,0)
 . ;
"RTN","IBCEQ1A",132,0)
 . I IBZ=6 D
"RTN","IBCEQ1A",133,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",134,0)
 .. S Z0="* SUGGESTION: CHANGE PROVIDER ID TYPE TO UPIN."
"RTN","IBCEQ1A",135,0)
 .. D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",136,0)
 .. S Z0="*"_$J("",13)_"ONCE ALL PAYERS FULLY IMPLEMENT HIPAA EDITS, YOU"
"RTN","IBCEQ1A",137,0)
 .. D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",138,0)
 .. S Z0="*"_$J("",13)_"MUST USE THE CORRECT ID TYPE FOR THE ID ENTERED."
"RTN","IBCEQ1A",139,0)
 .. D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",140,0)
 . ;
"RTN","IBCEQ1A",141,0)
 . D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",142,0)
 . S Z1="*"_$J("",$S(IBZ'=1:13,1:11))_"VISTA OPTION TO USE: "
"RTN","IBCEQ1A",143,0)
 . I IBZ'=4 D
"RTN","IBCEQ1A",144,0)
 .. S Z0=Z1_"PROVIDER ID MAINTENANCE"
"RTN","IBCEQ1A",145,0)
 . I IBZ=4 D
"RTN","IBCEQ1A",146,0)
 .. S Z0=Z1_"INSURANCE COMPANY ENTRY/EDIT"
"RTN","IBCEQ1A",147,0)
 . D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",148,0)
 ;
"RTN","IBCEQ1A",149,0)
 D WRT(1,Z,IBCONT)
"RTN","IBCEQ1A",150,0)
 ;
"RTN","IBCEQ1A",151,0)
 I '$O(^TMP($J,"IBZ232",IBZ,0)) D WRT(2,"***** NOTHING FOUND FOR THIS ERROR/WARNING *****",IBCONT)
"RTN","IBCEQ1A",152,0)
 Q
"RTN","IBCEQ1A",153,0)
 ;
"RTN","IBCEQ1A",154,0)
INSHDR(IBPG,IBSTOP,IBINM,IBZ,IBICONT) ; Ins Co info
"RTN","IBCEQ1A",155,0)
 I ($Y+7)>IOSL D HDR1(.IBPG,.IBSTOP,IBZ,1)
"RTN","IBCEQ1A",156,0)
 Q:IBSTOP
"RTN","IBCEQ1A",157,0)
 D WRT(2,"INSURANCE CO NAME: "_IBINM_$S($G(IBICONT):" (Continued)",1:""),IBICONT)
"RTN","IBCEQ1A",158,0)
 Q
"RTN","IBCEQ1A",159,0)
 ;
"RTN","IBCEQ1A",160,0)
ASK(IBSTOP) ; Ask continue
"RTN","IBCEQ1A",161,0)
 ; If passed by ref, IBSTOP returned = 1 if print aborted
"RTN","IBCEQ1A",162,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCEQ1A",163,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCEQ1A",164,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","IBCEQ1A",165,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBSTOP=1 Q
"RTN","IBCEQ1A",166,0)
 Q
"RTN","IBCEQ1A",167,0)
 ;
"RTN","IBCEQ1A",168,0)
WRT(FF,TEXT,NOT) ; Wrt/store line
"RTN","IBCEQ1A",169,0)
 N Z,A
"RTN","IBCEQ1A",170,0)
 S A=+$O(^TMP($J,"SENDMSG",1,""),-1),NOT=$G(NOT)
"RTN","IBCEQ1A",171,0)
 I FF F Z=1:1:FF W ! I $G(^TMP($J,"SENDMSG")),'NOT,Z>1 S A=A+1,^TMP($J,"SENDMSG",1,A)=" "
"RTN","IBCEQ1A",172,0)
 ;
"RTN","IBCEQ1A",173,0)
 I TEXT="@IOF" D  Q
"RTN","IBCEQ1A",174,0)
 . W @IOF
"RTN","IBCEQ1A",175,0)
 . I $G(^TMP($J,"SENDMSG")),'NOT,IBPG>1 D
"RTN","IBCEQ1A",176,0)
 .. S A=A+1,^TMP($J,"SENDMSG",1,A)=" "
"RTN","IBCEQ1A",177,0)
 .. F Z=1:1:2 S A=A+1,^TMP($J,"SENDMSG",1,A)="*** TOP OF NEW PAGE ***"
"RTN","IBCEQ1A",178,0)
 .. S A=A+1,^TMP($J,"SENDMSG",1,A)=" "
"RTN","IBCEQ1A",179,0)
 ;
"RTN","IBCEQ1A",180,0)
 W TEXT
"RTN","IBCEQ1A",181,0)
 I $G(^TMP($J,"SENDMSG")),'NOT S A=A+1,^TMP($J,"SENDMSG",1,A)=TEXT
"RTN","IBCEQ1A",182,0)
 Q
"RTN","IBCEQ1A",183,0)
 ;
"RTN","IBCERP6")
0^45^B24267407^B24273824
"RTN","IBCERP6",1,0)
IBCERP6 ;ALB/JEH - MRA/EDI CLAIMS READY FOR EXTRACT ;12/10/99
"RTN","IBCERP6",2,0)
 ;;2.0;INTEGRATED BILLING;**137,211,155,348**;21-MAR-94;Build 5
"RTN","IBCERP6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCERP6",4,0)
 ;
"RTN","IBCERP6",5,0)
EN ;Entry point from option
"RTN","IBCERP6",6,0)
 W !!,"This report provides a list of claims held in a"
"RTN","IBCERP6",7,0)
 W !,"Ready for Extract status.  Users can select all bills"
"RTN","IBCERP6",8,0)
 W !,"in a Ready for extract status or only those trapped due to"
"RTN","IBCERP6",9,0)
 W !,"the EDI/MRA Parameters being turned off."
"RTN","IBCERP6",10,0)
 ;
"RTN","IBCERP6",11,0)
 S IBQUIT=0 D SELECT I IBQUIT G ENQ1
"RTN","IBCERP6",12,0)
 S IBQUIT=0 D PARAM I IBQUIT G ENQ1
"RTN","IBCERP6",13,0)
 ;
"RTN","IBCERP6",14,0)
 W !!,"This report requires a 132 column printer.",!!
"RTN","IBCERP6",15,0)
 ; - Ask device
"RTN","IBCERP6",16,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCERP6",17,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ1
"RTN","IBCERP6",18,0)
 I $D(IO("Q")) D  G ENQ1
"RTN","IBCERP6",19,0)
 .S ZTRTN="BLD^IBCERP6",ZTDESC="IB - EDI/MRA Claims in Waiting Transmission Status"
"RTN","IBCERP6",20,0)
 .S ZTSAVE("IB*")=""
"RTN","IBCERP6",21,0)
 .D ^%ZTLOAD
"RTN","IBCERP6",22,0)
 .W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBCERP6",23,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBCERP6",24,0)
 U IO
"RTN","IBCERP6",25,0)
 ;
"RTN","IBCERP6",26,0)
BLD ; - Tasked entry point
"RTN","IBCERP6",27,0)
 ;
"RTN","IBCERP6",28,0)
 N IBSTAT,IBILL,IBREC,IBIFN,IBSTAT,IBVSIT,IBCAT,IBI,IBINS,IBPREC,IBEVDT,IBTYP,IBPG,IBCHK
"RTN","IBCERP6",29,0)
 K ^TMP("IBCERP6",$J)
"RTN","IBCERP6",30,0)
 S (IBI,IBIFN)=0 F  S IBI=$O(^IBA(364,"ASTAT","X",IBI)) Q:'IBI  S IBIFN=+$G(^IBA(364,IBI,0)) D
"RTN","IBCERP6",31,0)
 .S IBQUIT=0
"RTN","IBCERP6",32,0)
 .S IBSTAT=$$WNRBILL^IBEFUNC(IBIFN)
"RTN","IBCERP6",33,0)
 .I IBSEL=2 D  I IBQUIT Q
"RTN","IBCERP6",34,0)
 ..I 'IBSTAT,13[IBPARAM S IBQUIT=1 Q
"RTN","IBCERP6",35,0)
 ..I IBSTAT,23[IBPARAM S IBQUIT=1 Q
"RTN","IBCERP6",36,0)
 .S IBSTAT=$S(IBSTAT:"MRA",1:"EDI")
"RTN","IBCERP6",37,0)
 .S IBREC=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCERP6",38,0)
 .S IBVSIT=$S($$INPAT^IBCEF(IBIFN,1)=1:"INP",1:"OPT")
"RTN","IBCERP6",39,0)
 .S IBCAT=$S($$FT^IBCEF(IBIFN)=3:"UB92",1:"1500")
"RTN","IBCERP6",40,0)
 .S IBILL=$$BN1^PRCAFN(IBIFN)
"RTN","IBCERP6",41,0)
 .S IBINS=$P($G(^DIC(36,+$$CURR^IBCEF2(IBIFN),0)),U)
"RTN","IBCERP6",42,0)
 .S IBPREC=$$PT^IBEFUNC(+$P(IBREC,U,2))
"RTN","IBCERP6",43,0)
 .S IBEVDT=$P($G(^DGCR(399,IBIFN,"U")),U) ;Statement from date
"RTN","IBCERP6",44,0)
 .;S IBTYP=$P(IBREC,U,24)_U_$P($G(^DGCR(399.1,+$P(IBREC,U,25),0)),U)_U_$P(IBREC,U,26)
"RTN","IBCERP6",45,0)
 .S IBTYP=$$GET1^DIQ(399,IBIFN,.24)_U_$$GET1^DIQ(399,IBIFN,.25)_U_$$GET1^DIQ(399,IBIFN,.26)
"RTN","IBCERP6",46,0)
 .S ^TMP("IBCERP6",$J,IBSTAT,IBILL)=IBILL_U_IBVSIT_U_IBCAT_U_$P(IBPREC,U)_U_$E($P(IBPREC,U,2),8,11)_U_IBEVDT_U_IBTYP_U_IBINS
"RTN","IBCERP6",47,0)
 ;
"RTN","IBCERP6",48,0)
PRINT ;Prints report
"RTN","IBCERP6",49,0)
 S (IBQUIT,IBPG,IBEDI,IBMRA,IBTOT)=0 D HDR
"RTN","IBCERP6",50,0)
 I '$D(^TMP("IBCERP6",$J)) W !!,"There are no "_$S(IBPARAM=1:"EDI",IBPARAM=2:"MRA",1:"EDI/MRA")_" records"_$S(IBSEL=2:" trapped",1:"")_" in a ready for extract status" G ENQ1
"RTN","IBCERP6",51,0)
 S IBSTAT="" F  S IBSTAT=$O(^TMP("IBCERP6",$J,IBSTAT)) Q:IBSTAT=""!(IBQUIT=1)  D
"RTN","IBCERP6",52,0)
 .S IBILL="" F  S IBILL=$O(^TMP("IBCERP6",$J,IBSTAT,IBILL)) Q:IBILL=""!(IBQUIT=1)  S IBREC=^(IBILL)  D
"RTN","IBCERP6",53,0)
 ..I ($Y+5)>IOSL D  I IBQUIT Q
"RTN","IBCERP6",54,0)
 ...D ASK I IBQUIT Q
"RTN","IBCERP6",55,0)
 ...D HDR
"RTN","IBCERP6",56,0)
 ..;
"RTN","IBCERP6",57,0)
 ..W !,?2,$P(IBREC,U),?15,$P(IBREC,U,2),?22,$P(IBREC,U,3)
"RTN","IBCERP6",58,0)
 ..W ?28,$E($P(IBREC,U,4),1,20),?50,$P(IBREC,U,5)
"RTN","IBCERP6",59,0)
 ..W ?57,$$FMTE^XLFDT($P(IBREC,U,6)),?73,$E($P(IBREC,U,7),1,8)_", "_$E($P(IBREC,U,8),1,3)_", "_$E($P(IBREC,U,9),1,16),?110,$E($P(IBREC,U,10),1,20)
"RTN","IBCERP6",60,0)
 ..I IBSTAT="EDI" S IBEDI=IBEDI+1
"RTN","IBCERP6",61,0)
 ..E  S IBMRA=IBMRA+1
"RTN","IBCERP6",62,0)
 ..S IBTOT=IBTOT+1
"RTN","IBCERP6",63,0)
 W !!
"RTN","IBCERP6",64,0)
 I IBEDI>0 W !,?3,"Total EDI Bills ",IBEDI
"RTN","IBCERP6",65,0)
 I IBMRA>0 W !,?3,"Total MRA Bills ",IBMRA
"RTN","IBCERP6",66,0)
 W !!,?3,"Total bills ",IBTOT
"RTN","IBCERP6",67,0)
 K ^TMP("IBCERP6",$J)
"RTN","IBCERP6",68,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCERP6",69,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","IBCERP6",70,0)
ENQ1 K IBPARAM,IBQUIT,IBSEL,Y,IBEDI,IBMRA,IBTOT Q
"RTN","IBCERP6",71,0)
 ;
"RTN","IBCERP6",72,0)
PARAM ;
"RTN","IBCERP6",73,0)
 S IBPARAM=$P($G(^IBE(350.9,1,8)),U,10) ;Get MRA/EDI site parameter setting
"RTN","IBCERP6",74,0)
 I IBPARAM="" D
"RTN","IBCERP6",75,0)
 .W !!,"Your EDI/MRA site parameter setting is incomplete."
"RTN","IBCERP6",76,0)
 .W !,"Please contact your coordinator.",!
"RTN","IBCERP6",77,0)
 .S IBQUIT=1
"RTN","IBCERP6",78,0)
 ;
"RTN","IBCERP6",79,0)
 I IBSEL=2,IBPARAM=3 D
"RTN","IBCERP6",80,0)
 .W !!,"Your site parameters are set to allow both EDI and MRA"
"RTN","IBCERP6",81,0)
 .W !,"transmissions.  There is no need to run this report.",!
"RTN","IBCERP6",82,0)
 .S IBQUIT=1
"RTN","IBCERP6",83,0)
 Q
"RTN","IBCERP6",84,0)
 ;
"RTN","IBCERP6",85,0)
HDR ;Prints report heading
"RTN","IBCERP6",86,0)
 ; IB*2.0*211
"RTN","IBCERP6",87,0)
 ;I $E(IOST,1,2)="C-" W @IOF,*13
"RTN","IBCERP6",88,0)
 I $S(IBPG:1,1:$E(IOST,1,2)="C-") W @IOF,*13
"RTN","IBCERP6",89,0)
 S IBPG=IBPG+1
"RTN","IBCERP6",90,0)
 W !!,?45,$S(IBSEL=2:"Trapped ",1:"")_" Claims Ready for Extract",?90,$$FMTE^XLFDT(DT),?110,"Page: ",IBPG
"RTN","IBCERP6",91,0)
 W !!,?15,"Inpt/",?23,"Inst/",!,?4,"Bill #",?15,"Opt",?23,"Prof",?32,"Name"
"RTN","IBCERP6",92,0)
 W ?51,"SSN",?57,"Statement Date",?89,"Type",?110,"Insurance Co."
"RTN","IBCERP6",93,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","IBCERP6",94,0)
 Q
"RTN","IBCERP6",95,0)
 ;
"RTN","IBCERP6",96,0)
ASK ;
"RTN","IBCERP6",97,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCERP6",98,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCERP6",99,0)
 S DIR(0)="E" D ^DIR
"RTN","IBCERP6",100,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCERP6",101,0)
 Q
"RTN","IBCERP6",102,0)
 ;
"RTN","IBCERP6",103,0)
SELECT ;Report selection
"RTN","IBCERP6",104,0)
 N DIR,DIROUT,DTOUT,DUOUT,DTOUT
"RTN","IBCERP6",105,0)
 S IBSEL=0
"RTN","IBCERP6",106,0)
 W !!  S DIR("A",1)="Do you want to print a list of:"
"RTN","IBCERP6",107,0)
 S DIR("A",2)=""
"RTN","IBCERP6",108,0)
 S DIR("A",3)="     1 - All bills in Ready for Extract status"
"RTN","IBCERP6",109,0)
 S DIR("A",4)="     2 - Bills trapped due to EDI/MRA parameter being turned off"
"RTN","IBCERP6",110,0)
 S DIR("A",5)=""
"RTN","IBCERP6",111,0)
 S DIR(0)="SAXB^1:All bills;2:Trapped bills"
"RTN","IBCERP6",112,0)
 W !
"RTN","IBCERP6",113,0)
 S DIR("A")="Select Number: ",DIR("B")=1
"RTN","IBCERP6",114,0)
 D ^DIR
"RTN","IBCERP6",115,0)
 I +Y'>0 S IBQUIT=1 Q
"RTN","IBCERP6",116,0)
 S IBSEL=+Y
"RTN","IBCERP6",117,0)
 Q
"RTN","IBCEU3")
0^3^B63577235^B42203561
"RTN","IBCEU3",1,0)
IBCEU3 ;ALB/TMP - EDI UTILITIES FOR 1500 CLAIM FORM ; 12/29/05 9:58am
"RTN","IBCEU3",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,323,348**;21-MAR-94;Build 5
"RTN","IBCEU3",3,0)
 ;
"RTN","IBCEU3",4,0)
BOX19(IBIFN) ; Returns the text that should print in box 19 of the CMS-1500
"RTN","IBCEU3",5,0)
 ;   for bill ien IBIFN
"RTN","IBCEU3",6,0)
 ; Data is derived from a combo of data throughout
"RTN","IBCEU3",7,0)
 ; the system and is limited to 80 characters.  The hierarchy for
"RTN","IBCEU3",8,0)
 ; including data is as follows (until 80 characters have been used):
"RTN","IBCEU3",9,0)
 ;   DATE LAST SEEN and REFERRING PHYSICIAN ID# (physical therapy)
"RTN","IBCEU3",10,0)
 ;                      specialty codes = 025,065,073,067,048
"RTN","IBCEU3",11,0)
 ;   LAST X-RAY DATE (chiropractic) specialty code = 35
"RTN","IBCEU3",12,0)
 ;   HOMEBOUND INDICATOR (independent lab renders an EKG or obtains
"RTN","IBCEU3",13,0)
 ;                        a specimen from a homebound patient)
"RTN","IBCEU3",14,0)
 ;   NO ASSIGNMENT OF BENEFITS (if no assignment of benefits indicated)
"RTN","IBCEU3",15,0)
 ;   Hearing aid testing (if applicable)
"RTN","IBCEU3",16,0)
 ;   ATTENDING PHYSICIAN NOT HOSPICE EMPLOYEE (if applicable)
"RTN","IBCEU3",17,0)
 ;   SPECIAL PROGRAM indicator if Medicare demonstration project for
"RTN","IBCEU3",18,0)
 ;                   lung volume reduction surgery study is set
"RTN","IBCEU3",19,0)
 ;   COMMENTS FOUND IN BOX 19 DATA FIELD FOR THE CLAIM
"RTN","IBCEU3",20,0)
 ;   REMARKS FOUND IN BILL COMMENT FOR THE CLAIM, INCLUDING PROSTHETICS
"RTN","IBCEU3",21,0)
 ;     DETAIL
"RTN","IBCEU3",22,0)
 ;
"RTN","IBCEU3",23,0)
 N IBGO,IBHOSP,IBID,IBLSDT,IBXDATA,IB19,IBHAID,IBXRAY,IBSPEC,Z,Z0,IBSUB,IBPRT,IBREM
"RTN","IBCEU3",24,0)
 S IB19="",IBGO=1
"RTN","IBCEU3",25,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEU3",26,0)
 I $D(IBXSAVE(IBSUB)) N IBXSAVE
"RTN","IBCEU3",27,0)
 S IBPRT=(IBSUB["24")
"RTN","IBCEU3",28,0)
 ;
"RTN","IBCEU3",29,0)
 S IBSPEC=$$BILLSPEC(IBIFN)
"RTN","IBCEU3",30,0)
 G:'IBPRT NPRT
"RTN","IBCEU3",31,0)
 I "^25^65^73^67^48^"[(U_IBSPEC_U) D
"RTN","IBCEU3",32,0)
 . K IBXDATA D F^IBCEF("N-DATE LAST SEEN",,,IBIFN)
"RTN","IBCEU3",33,0)
 . I IBXDATA'="" S IBID="",IBLSDT=$$DATE^IBCF2(IBXDATA,0,1) D  I IBLSDT'="" S IBGO=$$LENOK("Date Last Seen:"_IBLSDT_IBID,.IB19)
"RTN","IBCEU3",34,0)
 .. ; Only print if specialty is OT or PT or proc for routine foot care
"RTN","IBCEU3",35,0)
 .. D F^IBCEF("N-REFERRING PROVIDER ID",,,IBIFN) I IBXDATA'="" S IBID=" By:"_IBXDATA
"RTN","IBCEU3",36,0)
 ;
"RTN","IBCEU3",37,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",38,0)
 K IBXDATA D F^IBCEF("N-HOMEBOUND",,,IBIFN)
"RTN","IBCEU3",39,0)
 I IBXDATA G:'$$LENOK("Homebound",.IB19) BOX19Q
"RTN","IBCEU3",40,0)
 ;
"RTN","IBCEU3",41,0)
 K IBXDATA D F^IBCEF("N-ASSIGN OF BENEFITS INDICATOR",,,IBIFN)
"RTN","IBCEU3",42,0)
 I "Nn0"[IBXDATA&(IBXDATA'="") G:'$$LENOK("Patient refuses to assign benefits",.IB19) BOX19Q
"RTN","IBCEU3",43,0)
 ;
"RTN","IBCEU3",44,0)
 I '$D(IBXSAVE(IBSUB)) D B24^IBCEF3(.IBXSAVE,IBIFN,$S($G(IBNOSHOW)=0:0,1:1))
"RTN","IBCEU3",45,0)
 ;
"RTN","IBCEU3",46,0)
 S (IBHAID,IBHOSP,IBXRAY)=0
"RTN","IBCEU3",47,0)
 ;
"RTN","IBCEU3",48,0)
 S Z=0 F  S Z=$O(IBXSAVE(IBSUB,Z)) Q:'Z  D  G:'IBGO BOX19Q
"RTN","IBCEU3",49,0)
 . I $D(IBXSAVE(IBSUB,Z,"RX")),$P(IBXSAVE(IBSUB,Z,"RX"),U,3)="" S IBGO=$$LENOK("NOC Drug:"_$P(IBXSAVE(IBSUB,Z,"RX"),U,2)_" Units:"_+$P(IBXSAVE(IBSUB,Z,"RX"),U,6),.IB19)
"RTN","IBCEU3",50,0)
 . ;
"RTN","IBCEU3",51,0)
 . Q:'IBGO
"RTN","IBCEU3",52,0)
 . I 'IBHAID,$P(IBXSAVE(IBSUB,Z),U,5)="V5010",$$COBCT^IBCEF(IBIFN)>1 D  Q
"RTN","IBCEU3",53,0)
 .. S IBHAID=1,IBGO=$$LENOK("Testing for hearing aid",.IB19) Q
"RTN","IBCEU3",54,0)
 . ;
"RTN","IBCEU3",55,0)
 . Q:'IBGO
"RTN","IBCEU3",56,0)
 . I 'IBHOSP,$P($G(IBXSAVE(IBSUB,Z,"AUX")),U,3) D  Q
"RTN","IBCEU3",57,0)
 .. S IBHOSP=1,IBGO=$$LENOK("Attending physician,not hospice employee",.IB19)
"RTN","IBCEU3",58,0)
 . ;
"RTN","IBCEU3",59,0)
 . Q:'IBGO
"RTN","IBCEU3",60,0)
 . I 'IBXRAY,IBSPEC=35,$G(IBXSAVE(IBSUB,Z,"AUX"))'="" D  Q
"RTN","IBCEU3",61,0)
 .. ; Check for chiropratic services in claim type or specialty
"RTN","IBCEU3",62,0)
 .. S IBXRAY=1
"RTN","IBCEU3",63,0)
 .. S IBGO=$$LENOK($S($P(IBXSAVE(IBSUB,Z,"AUX"),U,2):"Last Xray:"_$$DATE^IBCF2($P(IBXSAVE(IBSUB,Z,"AUX"),U,2),0,1)_" ",1:"")_$S($P(IBXSAVE(IBSUB,Z,"AUX"),U,4)'="":"Level of Sublux:"_$P(IBXSAVE(IBSUB,Z,"AUX"),U,4),1:""),.IB19)
"RTN","IBCEU3",64,0)
 ;
"RTN","IBCEU3",65,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",66,0)
 K IBXDATA D F^IBCEF("N-SPECIAL PROGRAM",,,IBIFN)
"RTN","IBCEU3",67,0)
 I IBXDATA=30 G:'$$LENOK("Medicare demonstration project for lung volume reduction surgery study",.IB19) BOX19Q
"RTN","IBCEU3",68,0)
 ;
"RTN","IBCEU3",69,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",70,0)
NPRT K IBXDATA D F^IBCEF("N-HCFA 1500 BOX 19 RAW DATA",,,IBIFN)
"RTN","IBCEU3",71,0)
 S IBREM=0
"RTN","IBCEU3",72,0)
 I IBXDATA'="" G:'$$LENOK("Remarks:"_IBXDATA,.IB19) BOX19Q S IBREM=1
"RTN","IBCEU3",73,0)
 K IBXDATA D F^IBCEF("N-BILL REMARKS",,,IBIFN)
"RTN","IBCEU3",74,0)
 I IBXDATA'="" G:'$$LENOK($S('IBREM:"Remarks:",1:"")_IBXDATA,.IB19) BOX19Q
"RTN","IBCEU3",75,0)
 ;
"RTN","IBCEU3",76,0)
BOX19Q Q IB19
"RTN","IBCEU3",77,0)
 ;
"RTN","IBCEU3",78,0)
LENOK(IBDATA,IB19) ; Add text IBDATA to box 19 string (IB19 passed by ref)
"RTN","IBCEU3",79,0)
 ; Check length of box 19 data - truncate at 96 (max length)
"RTN","IBCEU3",80,0)
 ; Returns 0 if max length reached or exceeded, otherwise, 1
"RTN","IBCEU3",81,0)
 N OK
"RTN","IBCEU3",82,0)
 S OK=1
"RTN","IBCEU3",83,0)
 S IB19=IB19_$S(IB19'="":" ",1:"")_$G(IBDATA)
"RTN","IBCEU3",84,0)
 I $L(IB19)'<96 S OK=0,IB19=$E(IB19,1,96) G LENOKQ
"RTN","IBCEU3",85,0)
LENOKQ Q OK
"RTN","IBCEU3",86,0)
 ;
"RTN","IBCEU3",87,0)
ASK19(IBIFN) ; Ask to display CMS-1500 box 19 data for current IBIFN
"RTN","IBCEU3",88,0)
 N DIR,DIC,X,Y,DIE,DR,Z
"RTN","IBCEU3",89,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A")="DISPLAY THE FULL CMS-1500 BOX 19?: "
"RTN","IBCEU3",90,0)
 D ^DIR
"RTN","IBCEU3",91,0)
 I Y=1 S Z=$$BOX19(IBIFN) W !!,?4,"19",?20,$E(Z,1,32) W:$L(Z)>32 !,?4,$E(Z,33,80),!
"RTN","IBCEU3",92,0)
 Q
"RTN","IBCEU3",93,0)
 ;
"RTN","IBCEU3",94,0)
ONLAB(IBIFN) ; Functions returns 1 if the bill IBIFN is outside non-lab
"RTN","IBCEU3",95,0)
 N IBP,IBPUR
"RTN","IBCEU3",96,0)
 S IBP=0
"RTN","IBCEU3",97,0)
 S IBPUR=$P($G(^DGCR(399,IBIFN,"U2")),U,11)
"RTN","IBCEU3",98,0)
 I IBPUR,"13"[IBPUR S IBP=1
"RTN","IBCEU3",99,0)
 Q IBP
"RTN","IBCEU3",100,0)
 ;
"RTN","IBCEU3",101,0)
TEXT24(FLD,IBXSAVE,IBXDATA,IBSUB) ; Format the text line of box 24 by fld
"RTN","IBCEU3",102,0)
 ; INPUT:
"RTN","IBCEU3",103,0)
 ;   FLD = the letter of the field in box 24 (A-J)
"RTN","IBCEU3",104,0)
 ;   IBXSAVE = passed by reference = extracted data for the box 24 lines
"RTN","IBCEU3",105,0)
 ;   IBSUB = the subscript of the IBXSAVE array to use.
"RTN","IBCEU3",106,0)
 ;           If null, use "BOX24"
"RTN","IBCEU3",107,0)
 ; OUTPUT:
"RTN","IBCEU3",108,0)
 ;   IBXDATA = passed by reference, set to the correct part of the
"RTN","IBCEU3",109,0)
 ;             text that will print in the field's positions
"RTN","IBCEU3",110,0)
 ;
"RTN","IBCEU3",111,0)
 ; esg - 8/14/06 - modified for the new cms-1500 form - IB*2*348
"RTN","IBCEU3",112,0)
 ;
"RTN","IBCEU3",113,0)
 N Z,IBLINE,IBVAL,IBS,IBE,IBTEXT,IBAUX,IBDAT,IBZ,IBREN,IBRENQ,IBRENNPI,IBRENSID
"RTN","IBCEU3",114,0)
 K IBXDATA
"RTN","IBCEU3",115,0)
 S (IBLINE,Z)=0 S:$G(IBSUB)="" IBSUB="BOX24"
"RTN","IBCEU3",116,0)
 ;
"RTN","IBCEU3",117,0)
 I FLD="I"!(FLD="J") D   ; extract the Rendering provider data
"RTN","IBCEU3",118,0)
 . I '$G(IBXIEN) Q       ; assume that the claim# exists
"RTN","IBCEU3",119,0)
 . S IBREN=$$CFIDS^IBCEF77(IBXIEN)
"RTN","IBCEU3",120,0)
 . S IBRENQ=$P(IBREN,U,1)    ; qual
"RTN","IBCEU3",121,0)
 . S IBRENSID=$P(IBREN,U,2)  ; id
"RTN","IBCEU3",122,0)
 . S IBRENNPI=$P(IBREN,U,3)  ; npi
"RTN","IBCEU3",123,0)
 . Q
"RTN","IBCEU3",124,0)
 ;
"RTN","IBCEU3",125,0)
 F  S Z=$O(IBXSAVE(IBSUB,Z)) Q:'Z  D
"RTN","IBCEU3",126,0)
 . S IBDAT=$G(IBXSAVE(IBSUB,Z))
"RTN","IBCEU3",127,0)
 . S IBAUX=$G(IBXSAVE(IBSUB,Z,"AUX"))
"RTN","IBCEU3",128,0)
 . S IBTEXT=$G(IBXSAVE(IBSUB,Z,"TEXT"))
"RTN","IBCEU3",129,0)
 . S IBZ=$P(IBAUX,U,9)
"RTN","IBCEU3",130,0)
 . I IBZ="" S IBZ="  "
"RTN","IBCEU3",131,0)
 . S IBTEXT=IBZ_IBTEXT
"RTN","IBCEU3",132,0)
 . ;
"RTN","IBCEU3",133,0)
 . I $S($G(IBAC)=4:$S($D(IBXSAVE(IBSUB,Z,"ARX")):1,1:$D(IBXSAVE(IBSUB,Z,"A"))),$D(IBXSAVE(IBSUB,Z,"RX")):0,1:$G(IBNOSHOW)) S IBTEXT=""
"RTN","IBCEU3",134,0)
 . ;
"RTN","IBCEU3",135,0)
 . I FLD="AF" S IBVAL=$P(IBDAT,U),IBS=1,IBE=9 D   ; From date of service
"RTN","IBCEU3",136,0)
 .. S IBVAL=$E(IBVAL,1,2)_" "_$E(IBVAL,3,4)_" "_$E(IBVAL,7,8)
"RTN","IBCEU3",137,0)
 .. Q
"RTN","IBCEU3",138,0)
 . ;
"RTN","IBCEU3",139,0)
 . I FLD="AT" S IBVAL=$S($P(IBDAT,U,2):$P(IBDAT,U,2),1:$P(IBDAT,U)),IBS=10,IBE=18 D    ; To date of service
"RTN","IBCEU3",140,0)
 .. S IBVAL=$E(IBVAL,1,2)_" "_$E(IBVAL,3,4)_" "_$E(IBVAL,7,8)
"RTN","IBCEU3",141,0)
 .. Q
"RTN","IBCEU3",142,0)
 . ;
"RTN","IBCEU3",143,0)
 . I FLD="B" S IBVAL=$P(IBDAT,U,3),IBS=19,IBE=21   ; place of service
"RTN","IBCEU3",144,0)
 . I FLD="C" S IBVAL=$S($P(IBDAT,U,13)=1:"Y",1:""),IBS=22,IBE=24   ; emergency indicator
"RTN","IBCEU3",145,0)
 . I FLD="D" S IBVAL=$P(IBDAT,U,5),IBS=25,IBE=44 D   ; procedures and modifiers
"RTN","IBCEU3",146,0)
 .. N M S M=$$MODLST^IBEFUNC($P(IBDAT,U,10))       ; modifier list
"RTN","IBCEU3",147,0)
 .. S IBVAL=$$FO^IBCNEUT1(IBVAL,6)_"  "            ; procedure code
"RTN","IBCEU3",148,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",1),3)     ; mod#1
"RTN","IBCEU3",149,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",2),3)     ; mod#2
"RTN","IBCEU3",150,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",3),3)     ; mod#3
"RTN","IBCEU3",151,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",4),3)     ; mod#4
"RTN","IBCEU3",152,0)
 .. Q
"RTN","IBCEU3",153,0)
 . ;
"RTN","IBCEU3",154,0)
 . I FLD="E" S IBVAL=$TR($P(IBDAT,U,7),","),IBS=45,IBE=48  ; diagnosis pointer
"RTN","IBCEU3",155,0)
 . I FLD="F" S IBVAL=$P(IBDAT,U,8)*$P(IBDAT,U,9),IBS=49,IBE=57 D
"RTN","IBCEU3",156,0)
 .. ; total charges
"RTN","IBCEU3",157,0)
 .. S IBVAL=$$DOL^IBCEF77(IBVAL,9)
"RTN","IBCEU3",158,0)
 .. Q
"RTN","IBCEU3",159,0)
 . ;
"RTN","IBCEU3",160,0)
 . I FLD="G" S IBVAL=$S($P(IBDAT,U,12):$P(IBDAT,U,12),1:$P(IBDAT,U,9)),IBS=58,IBE=61 D
"RTN","IBCEU3",161,0)
 .. ; days or units or anesthesia minutes
"RTN","IBCEU3",162,0)
 .. S IBVAL=$J(+IBVAL,4)
"RTN","IBCEU3",163,0)
 .. Q
"RTN","IBCEU3",164,0)
 . ;
"RTN","IBCEU3",165,0)
 . ; columns H,I,J don't have any free text supplemental information
"RTN","IBCEU3",166,0)
 . ;
"RTN","IBCEU3",167,0)
 . I FLD="H" D     ; epsdt family plan
"RTN","IBCEU3",168,0)
 .. S IBVAL=$P(IBAUX,U,7),IBS=0,IBE=0,IBTEXT=""   ; line 1 blank
"RTN","IBCEU3",169,0)
 .. I IBVAL S IBVAL="Y"
"RTN","IBCEU3",170,0)
 .. Q
"RTN","IBCEU3",171,0)
 . I FLD="I" D     ; ID qualifier for rendering provider
"RTN","IBCEU3",172,0)
 .. S IBVAL="",IBS=1,IBE=2   ; line 2 blank
"RTN","IBCEU3",173,0)
 .. S IBTEXT=$G(IBRENQ)      ; qualifier on line 1
"RTN","IBCEU3",174,0)
 .. Q
"RTN","IBCEU3",175,0)
 . I FLD="J" D     ; rendering provider ID and NPI
"RTN","IBCEU3",176,0)
 .. S IBTEXT=$G(IBRENSID),IBS=1,IBE=11   ; secondary ID line 1
"RTN","IBCEU3",177,0)
 .. S IBVAL=$G(IBRENNPI)                 ; NPI# line 2
"RTN","IBCEU3",178,0)
 .. Q
"RTN","IBCEU3",179,0)
 . ;
"RTN","IBCEU3",180,0)
 . S IBLINE=IBLINE+1                      ; top line
"RTN","IBCEU3",181,0)
 . S IBXDATA(IBLINE)=$E(IBTEXT,IBS,IBE)   ; text in shaded area (top)
"RTN","IBCEU3",182,0)
 . S IBLINE=IBLINE+1             ; bottom line
"RTN","IBCEU3",183,0)
 . S IBXDATA(IBLINE)=IBVAL       ; field value in unshaded area (bottom)
"RTN","IBCEU3",184,0)
 . Q
"RTN","IBCEU3",185,0)
 ;
"RTN","IBCEU3",186,0)
 Q
"RTN","IBCEU3",187,0)
 ;
"RTN","IBCEU3",188,0)
BILLSPEC(IBIFN,IBPRV) ;  Returns the specialty of the provider on bill IBIFN
"RTN","IBCEU3",189,0)
 ; If IBPRV is supplied, returns the data for that provider, otherwise,
"RTN","IBCEU3",190,0)
 ;  returns the specialty of the 'main/required' provider on the bill.
"RTN","IBCEU3",191,0)
 ;  Default = 99 if no valid code found
"RTN","IBCEU3",192,0)
 ; IBPRV = vp of provider (file 200 or 355.93)
"RTN","IBCEU3",193,0)
 N Z,IBSPEC,IBINS,IBDT
"RTN","IBCEU3",194,0)
 S IBSPEC="",IBPRV=$G(IBPRV)
"RTN","IBCEU3",195,0)
 S IBDT=$P($G(^DGCR(399,+IBIFN,"U")),U,1)  ; use statement from date
"RTN","IBCEU3",196,0)
 ;
"RTN","IBCEU3",197,0)
 I $G(IBPRV) D  G SPECQ
"RTN","IBCEU3",198,0)
 . S IBSPEC=$$SPEC^IBCEU(IBPRV,IBDT)
"RTN","IBCEU3",199,0)
 ;
"RTN","IBCEU3",200,0)
 ;Get rendering for professional, attending for institutional,
"RTN","IBCEU3",201,0)
 S IBINS=($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEU3",202,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCEU3",203,0)
 S Z=$S('IBINS:3,1:4)
"RTN","IBCEU3",204,0)
 I $G(IBPRV(Z,1))'="" D
"RTN","IBCEU3",205,0)
 . I $P(IBPRV(Z,1),U,3) S IBSPEC=$$SPEC^IBCEU($P($G(IBPRV(Z,1)),U,3),IBDT) Q:IBSPEC'=""
"RTN","IBCEU3",206,0)
 . S Z0=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEU3",207,0)
 . I Z0,$P($G(^DGCR(399,IBIFN,"PRV",Z0,0)),U,8)'="" S IBSPEC=$P(^(0),U,8)
"RTN","IBCEU3",208,0)
 ;
"RTN","IBCEU3",209,0)
SPECQ I IBSPEC="" S IBSPEC="99"
"RTN","IBCEU3",210,0)
 Q IBSPEC
"RTN","IBCEU3",211,0)
 ;
"RTN","IBCEU3",212,0)
CHAMPVA(IBIFN) ; Returns 1 if the bill IBIFN has a CHAMPVA rate type
"RTN","IBCEU3",213,0)
 Q $E($P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U),1,7)="CHAMPVA"
"RTN","IBCEU3",214,0)
 ;
"RTN","IBCEU3",215,0)
FAC(IBIFN) ; Is facility always to print in box 32 for bill ien IBIFN?
"RTN","IBCEU3",216,0)
 ;  Returns 1 if yes, 0 if no
"RTN","IBCEU3",217,0)
 Q $S($P($G(^DGCR(399,IBIFN,"UF2")),U,2):1,1:$P($G(^IBE(350.9,1,2)),U,12))
"RTN","IBCEU3",218,0)
 ;
"RTN","IBCEU3",219,0)
MCR24K(IBIFN) ;Function returns MEDICARE id# for professional (CMS-1500) box 24k for bill IBIFN if appropriate
"RTN","IBCEU3",220,0)
 Q $S($$FT^IBCEF(IBIFN)=2&$$MCRONBIL^IBEFUNC(IBIFN):"V"_$$MCRSPEC^IBCEU4(IBIFN,1)_$P($$SITE^VASITE,U,3),1:"")
"RTN","IBCEU5")
0^46^B87188709^B87277838
"RTN","IBCEU5",1,0)
IBCEU5 ;ALB/TMP - EDI UTILITIES (continued) FOR CMS-1500 ;13-DEC-99
"RTN","IBCEU5",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,348**;21-MAR-94;Build 5
"RTN","IBCEU5",3,0)
 ;
"RTN","IBCEU5",4,0)
EXTCR(IBPRV) ; Called by trigger on field .02 of file 399.0222
"RTN","IBCEU5",5,0)
 ; Function returns the first 3 digits of the provider's degree if
"RTN","IBCEU5",6,0)
 ; a VA provider or the credentials in file 355.9 if non-VA provider
"RTN","IBCEU5",7,0)
 ; IBPRV = vp to file 200 or 355.93
"RTN","IBCEU5",8,0)
 Q $E($$CRED^IBCEU(IBPRV),1,3)
"RTN","IBCEU5",9,0)
 ; 
"RTN","IBCEU5",10,0)
FTPRV(IBIFN,NOASK) ; If form type changes from UB92 to CMS-1500 or vice
"RTN","IBCEU5",11,0)
 ; versa, ask to change provider function to appropriate function for
"RTN","IBCEU5",12,0)
 ; form type (ATTENDING = UB92, RENDERING = CMS-1500)
"RTN","IBCEU5",13,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEU5",14,0)
 ; NOASK (flag) = 1 if change should happen without asking first
"RTN","IBCEU5",15,0)
 N ATT,REN,FT
"RTN","IBCEU5",16,0)
 S FT=$$FT^IBCEF(IBIFN)
"RTN","IBCEU5",17,0)
 S REN=$$CKPROV^IBCEU(IBIFN,3,1)
"RTN","IBCEU5",18,0)
 S ATT=$$CKPROV^IBCEU(IBIFN,4,1)
"RTN","IBCEU5",19,0)
 I $S(FT=2:'REN&ATT,FT=3:'ATT&REN,1:0) D
"RTN","IBCEU5",20,0)
 . I '$G(NOASK) D TXFERPRV(IBIFN,FT) Q
"RTN","IBCEU5",21,0)
 . D PRVCHG(IBIFN,FT)
"RTN","IBCEU5",22,0)
 Q
"RTN","IBCEU5",23,0)
 ;
"RTN","IBCEU5",24,0)
TXFERPRV(IBIFN,FT) ; Ask to change the function of the main provider on
"RTN","IBCEU5",25,0)
 ;  bill IBIFN to the function appropriate to the form type FT
"RTN","IBCEU5",26,0)
 ;  
"RTN","IBCEU5",27,0)
 N DIR,X,Y,Z,DIE,DA,DR,HAVE,NEED,IBZ
"RTN","IBCEU5",28,0)
 W ! S DIR("A")="  WANT TO CHANGE THE "_$S(FT=3:"RENDERING",1:"ATTENDING")_" PROVIDER'S FUNCTION TO "_$S(FT=3:"ATTENDING",1:"RENDERING")_"?: "
"RTN","IBCEU5",29,0)
 S DIR(0)="YA",DIR("B")="YES",DIR("?",1)="IF YOU ANSWER YES HERE, YOU WILL MAKE THE PROVIDER FUNCTIONS CONSISTENT",DIR("?")="  WITH THE FORM TYPE OF THE BILL"
"RTN","IBCEU5",30,0)
 D ^DIR K DIR
"RTN","IBCEU5",31,0)
 Q:Y'=1
"RTN","IBCEU5",32,0)
 D PRVCHG(IBIFN,FT)
"RTN","IBCEU5",33,0)
 Q
"RTN","IBCEU5",34,0)
 ;
"RTN","IBCEU5",35,0)
PRVCHG(IBIFN,IBFT) ; Change provider type to type consistent with current
"RTN","IBCEU5",36,0)
 ; data on bill
"RTN","IBCEU5",37,0)
 N Z,IBZ,HAVE,NEED,DIE,DA,X,Y
"RTN","IBCEU5",38,0)
 S HAVE=$S(IBFT=3:3,1:4)
"RTN","IBCEU5",39,0)
 S NEED=$S(IBFT=3:4,1:3)
"RTN","IBCEU5",40,0)
 S Z=$O(^DGCR(399,IBIFN,"PRV","B",HAVE,0))
"RTN","IBCEU5",41,0)
 I Z D
"RTN","IBCEU5",42,0)
 . S DA(1)=IBIFN,DA=+Z
"RTN","IBCEU5",43,0)
 . D FDA^DILF(399.0222,.DA,.01,,NEED,"IBZ")
"RTN","IBCEU5",44,0)
 . D FILE^DIE(,"IBZ")
"RTN","IBCEU5",45,0)
 ;I Z S DA(1)=IBIFN,DIE="^DGCR(399,"_DA(1)_",""PRV"",",DA=+Z,DR=".01////"_NEED D FILE^DIE(,DIE
"RTN","IBCEU5",46,0)
 Q
"RTN","IBCEU5",47,0)
 ;
"RTN","IBCEU5",48,0)
PRVHELP ; Text for the provider function help
"RTN","IBCEU5",49,0)
 Q:$G(X)'="??"
"RTN","IBCEU5",50,0)
 N IBZ,IBQUIT,IB,IB1,DIR
"RTN","IBCEU5",51,0)
 S IBQUIT=0
"RTN","IBCEU5",52,0)
 I '$D(IOSL)!'$D(IOST) D HOME^%ZIS
"RTN","IBCEU5",53,0)
 Q:IOST'["C-"
"RTN","IBCEU5",54,0)
 W @IOF
"RTN","IBCEU5",55,0)
 I $G(D0) D
"RTN","IBCEU5",56,0)
 . N Z
"RTN","IBCEU5",57,0)
 . D SPECIFIC(D0)
"RTN","IBCEU5",58,0)
 . S Z=$$FT^IBCEF(D0)
"RTN","IBCEU5",59,0)
 . I $S(Z=2:$D(^DGCR(399,D0,"PRV","B",4)),Z=3:$D(^DGCR(399,D0,"PRV","B",3)),1:0) D
"RTN","IBCEU5",60,0)
 .. W !,"**** ",$S(Z=2:"ATTENDING",1:"RENDERING")," FUNCTION DOES NOT BELONG ON THIS BILL TYPE & MUST BE DELETED"
"RTN","IBCEU5",61,0)
 S IB=IOSL,IB1=1
"RTN","IBCEU5",62,0)
 F IBZ=1:1 S:$P($T(HLPTXT+IBZ),";;",2)="" IBQUIT=1 Q:IBQUIT  S IB1=1 D
"RTN","IBCEU5",63,0)
 . I $Y>(IB-3) N DIR,X,Y S IB1=0,DIR(0)="E" D ^DIR K DIR S IB=IB+IOSL I Y'=1 S IBQUIT=1 Q
"RTN","IBCEU5",64,0)
 . W !,$P($T(HLPTXT+IBZ),";;",2)
"RTN","IBCEU5",65,0)
 I IB1 D
"RTN","IBCEU5",66,0)
 . N DIR,X,Y S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEU5",67,0)
 W @IOF
"RTN","IBCEU5",68,0)
 Q
"RTN","IBCEU5",69,0)
 ;
"RTN","IBCEU5",70,0)
SPECIFIC(IBIFN) ; Display specific provider requirements for the bill IBIFN
"RTN","IBCEU5",71,0)
 N IBFT,IBPRV,IBR,ONBILL,Z,IBZ
"RTN","IBCEU5",72,0)
 S IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCEU5",73,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV) ;Returns needed providers
"RTN","IBCEU5",74,0)
 W !,"This bill is ",$S(IBFT=3:"UB-92",1:"CMS-1500"),"/",$S($$INPAT^IBCEF(IBIFN):"Inpatient",1:"Outpatient")
"RTN","IBCEU5",75,0)
 W !!,"The valid provider functions for this bill are:"
"RTN","IBCEU5",76,0)
 F IBZ=1:1:5,9 I $$PRVOK^IBCEU(IBZ,IBIFN) D
"RTN","IBCEU5",77,0)
 . S ONBILL=$$CKPROV^IBCEU(IBIFN,IBZ)
"RTN","IBCEU5",78,0)
 . S IBR=$S($G(IBPRV(IBZ,"NOTOPT")):1,1:0)
"RTN","IBCEU5",79,0)
 . W !,IBZ,"  ",$$EXPAND^IBTRE(399.0222,.01,IBZ),?13,$S(IBR&'ONBILL:"**",1:""),?15,$S(IBR:"REQUIRED",1:"OPTIONAL"),$S(ONBILL:" - ALREADY ON BILL",1:" - NOT ON BILL")
"RTN","IBCEU5",80,0)
 W !
"RTN","IBCEU5",81,0)
 Q
"RTN","IBCEU5",82,0)
 ;
"RTN","IBCEU5",83,0)
HLPTXT ; Helptext for provider function
"RTN","IBCEU5",84,0)
 ;; 
"RTN","IBCEU5",85,0)
 ;;PROVIDER FUNCTION requirements:
"RTN","IBCEU5",86,0)
 ;; 
"RTN","IBCEU5",87,0)
 ;;RENDERING: CMS-1500 (both inpatient and outpatient): REQUIRED
"RTN","IBCEU5",88,0)
 ;;           This is the provider who performed the services.
"RTN","IBCEU5",89,0)
 ;;           Data will appear in form locator 24 of the CMS-1500.
"RTN","IBCEU5",90,0)
 ;; 
"RTN","IBCEU5",91,0)
 ;;    NOTE: There can be only one rendering provider per CMS-1500
"RTN","IBCEU5",92,0)
 ;;          claim form, so there may be multiple CMS-1500's for a
"RTN","IBCEU5",93,0)
 ;;          single episode of care if services were performed by more
"RTN","IBCEU5",94,0)
 ;;          than one provider.  For example, there will be 2 CMS-1500's
"RTN","IBCEU5",95,0)
 ;;          created for an episode of care that involved a surgical
"RTN","IBCEU5",96,0)
 ;;          procedure and a radiology exam.  The operating physician
"RTN","IBCEU5",97,0)
 ;;          would be the rendering provider on the CMS-1500 that
"RTN","IBCEU5",98,0)
 ;;          included the surgical procedure(s) and the radiologist
"RTN","IBCEU5",99,0)
 ;;          would be the rendering provider on the CMS-1500 that
"RTN","IBCEU5",100,0)
 ;;          included the radiology procedure(s).
"RTN","IBCEU5",101,0)
 ;; 
"RTN","IBCEU5",102,0)
 ;; 
"RTN","IBCEU5",103,0)
 ;;ATTENDING: UB-92 (inpatient and outpatient): REQUIRED
"RTN","IBCEU5",104,0)
 ;;           The physician who normally would be expected to
"RTN","IBCEU5",105,0)
 ;;           certify and recertify the medical necessity of the
"RTN","IBCEU5",106,0)
 ;;           services rendered and/or who has primary responsibility
"RTN","IBCEU5",107,0)
 ;;           for the patient's medical care and treatment.  Data is
"RTN","IBCEU5",108,0)
 ;;           printed in Form Locator 82 on the UB-92.
"RTN","IBCEU5",109,0)
 ;; 
"RTN","IBCEU5",110,0)
 ;;    NOTE: If there are multiple attending providers for the bill,
"RTN","IBCEU5",111,0)
 ;;          report the attending provider for the procedure having the
"RTN","IBCEU5",112,0)
 ;;          highest charge.  For outpatient, if the patient is
"RTN","IBCEU5",113,0)
 ;;          self-referred (e.g.: an ER or clinic visit), you may use
"RTN","IBCEU5",114,0)
 ;;          SLF000 as the attending provider id, with no provider
"RTN","IBCEU5",115,0)
 ;;          name.  SLF000 may NOT be used for services which require a
"RTN","IBCEU5",116,0)
 ;;          physician referral/order.
"RTN","IBCEU5",117,0)
 ;; 
"RTN","IBCEU5",118,0)
 ;; 
"RTN","IBCEU5",119,0)
 ;;OPERATING: UB-92 (inpatient and outpatient): SOMETIMES REQUIRED
"RTN","IBCEU5",120,0)
 ;;           The provider who performed the principal procedure(s)
"RTN","IBCEU5",121,0)
 ;;           being billed.  Data will be printed in form locator 83
"RTN","IBCEU5",122,0)
 ;;           on the UB-92.
"RTN","IBCEU5",123,0)
 ;; 
"RTN","IBCEU5",124,0)
 ;;    NOTE: Not applicable for CMS-1500 form type as this would be
"RTN","IBCEU5",125,0)
 ;;                             reported as the rendering provider on
"RTN","IBCEU5",126,0)
 ;;                             the CMS-1500.
"RTN","IBCEU5",127,0)
 ;;          UB-92 (inpatient): REQUIRED IF type of bill has first 2
"RTN","IBCEU5",128,0)
 ;;                             digits of 11, and there is a principal
"RTN","IBCEU5",129,0)
 ;;                             procedure that will print in form
"RTN","IBCEU5",130,0)
 ;;                             locators 80-81 of the claim.
"RTN","IBCEU5",131,0)
 ;;          UB-92 (outpatient): REQUIRED IF type of bill has first 2
"RTN","IBCEU5",132,0)
 ;;                             digits of 83, and there is a principal
"RTN","IBCEU5",133,0)
 ;;                             procedure that will print in form
"RTN","IBCEU5",134,0)
 ;;                             locators 80-81 of the claim.
"RTN","IBCEU5",135,0)
 ;; 
"RTN","IBCEU5",136,0)
 ;; 
"RTN","IBCEU5",137,0)
 ;;REFERRING: CMS-1500 (both inpatient and outpatient): OPTIONAL
"RTN","IBCEU5",138,0)
 ;;           The provider who requested that the services being billed
"RTN","IBCEU5",139,0)
 ;;           be performed.  Data will be printed in boxes 17 and 17a of
"RTN","IBCEU5",140,0)
 ;;           the CMS-1500.
"RTN","IBCEU5",141,0)
 ;; 
"RTN","IBCEU5",142,0)
 ;; 
"RTN","IBCEU5",143,0)
 ;;SUPERVISING: CMS-1500 (both inpatient and outpatient): OPTIONAL
"RTN","IBCEU5",144,0)
 ;;           Required only when the rendering provider is supervised
"RTN","IBCEU5",145,0)
 ;;           by a physician.  Data will not be printed.
"RTN","IBCEU5",146,0)
 ;; 
"RTN","IBCEU5",147,0)
 ;; 
"RTN","IBCEU5",148,0)
 ;;OTHER: UB92 (both inpatient and outpatient): OPTIONAL
"RTN","IBCEU5",149,0)
 ;;           Used to report providers with functions not specifically
"RTN","IBCEU5",150,0)
 ;;           designated here.
"RTN","IBCEU5",151,0)
 ;;
"RTN","IBCEU5",152,0)
 ;
"RTN","IBCEU5",153,0)
LINKRX(IBIFN,IBREV) ; Ask for revenue code's RX if not already there
"RTN","IBCEU5",154,0)
 N DIR,X,Y,IBZ,IBRX,Z,Z0,DA
"RTN","IBCEU5",155,0)
 Q:$P($G(^DGCR(399,IBIFN,"RC",IBREV,0)),U,11)!($P($G(^(0)),U,10)'=3)
"RTN","IBCEU5",156,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  I Z'=IBREV S Z0=$G(^(Z,0)) I $P(Z0,U,10)=3,$P(Z0,U,11) S IBRX(+$P(Z0,U,11))=""
"RTN","IBCEU5",157,0)
 S DIR(0)="PAO^IBA(362.4,:AEMQ",DIR("S")="I $P(^(0),U,2)=IBIFN,'$D(IBRX(+Y))"
"RTN","IBCEU5",158,0)
 S DIR("A")="Select Rx for this charge: "
"RTN","IBCEU5",159,0)
 S DIR("?",1)="Enter an Rx# for this revenue code"
"RTN","IBCEU5",160,0)
 S DIR("?")=" The Rx must not already have an associated revenue code"
"RTN","IBCEU5",161,0)
 D ^DIR K DIR
"RTN","IBCEU5",162,0)
 I Y>0 D
"RTN","IBCEU5",163,0)
 . S DA(1)=IBIFN,DA=IBREV,IBZ=""
"RTN","IBCEU5",164,0)
 . D FDA^DILF(399.042,.DA,.11,"R",+Y,"IBZ")
"RTN","IBCEU5",165,0)
 . D FILE^DIE(,"IBZ")
"RTN","IBCEU5",166,0)
 Q
"RTN","IBCEU5",167,0)
 ;
"RTN","IBCEU5",168,0)
LINKCPT(IBIFN,IBREV) ; Ask for revenue code's CPT
"RTN","IBCEU5",169,0)
 N DIR,X,Y,IBZ,IBCP,Z,Z0,Z1,DA,IBRC,IBP
"RTN","IBCEU5",170,0)
 S IBRC=$G(^DGCR(399,IBIFN,"RC",IBREV,0))
"RTN","IBCEU5",171,0)
 Q:$P(IBRC,U,8)!($P(IBRC,U,10)'=4)
"RTN","IBCEU5",172,0)
 S IBP=+$P(IBRC,U,6)
"RTN","IBCEU5",173,0)
 I $P(IBRC,U,11) W !,"PROCEDURE #"_$P(IBRC,U,11)_" HAS BEEN ASSOCIATED WITH THIS MANUAL CHARGE"
"RTN","IBCEU5",174,0)
 I '$P(IBRC,U,11) D  Q:IBRC=""
"RTN","IBCEU5",175,0)
 . S DIR("?",1)="Respond YES if this revenue code charge specifically references the data for"
"RTN","IBCEU5",176,0)
 . S DIR("?",2)="  a particular procedure that was manually entered on the previous screen."
"RTN","IBCEU5",177,0)
 . S DIR("?",3)="  For outpatient UB92 bills, associating a manual revenue code charge with",DIR("?")="  a procedure is the only way to print a modifier in box 44"
"RTN","IBCEU5",178,0)
 . S DIR(0)="YA",DIR("A")="SHOULD A PROCEDURE ENTRY BE ASSOCIATED WITH THIS CHARGE?: ",DIR("B")=$S(IBP:"YES",1:"NO") W ! D ^DIR K DIR W !
"RTN","IBCEU5",179,0)
 . I Y'=1 S IBRC="" Q
"RTN","IBCEU5",180,0)
 I $P(IBRC,U,11) D
"RTN","IBCEU5",181,0)
 . S DIR("?",1)="Respond YES if you no longer want this revenue code charge to reference a",DIR("?")="  specific manually entered procedure"
"RTN","IBCEU5",182,0)
 . S DIR(0)="YA",DIR("A")="DELETE THE EXISTING PROCEDURE ASSOCIATION?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","IBCEU5",183,0)
 . I Y=1 D UPDPTR(IBIFN,IBREV,"") S $P(IBRC,U,11)=""
"RTN","IBCEU5",184,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I IBREV'=Z,$P(Z0,U,11) D
"RTN","IBCEU5",185,0)
 . ; Don't allow to link to 'used' proc
"RTN","IBCEU5",186,0)
 . I $P(Z0,U,10)=4 S IBCP($P(Z0,U,11))="" Q
"RTN","IBCEU5",187,0)
 . I $P(Z0,U,10)=3,$P(Z0,U,15) S IBCP($P(Z0,U,15))=""
"RTN","IBCEU5",188,0)
 S DIR(0)="PAO^DGCR(399,"_IBIFN_",""CP"",:AEMQ",DIR("S")="I '$D(IBCP(+Y)),$P(^(0),U)[""CPT"",+^(0)="_+$P($G(^DGCR(399,IBIFN,"RC",IBREV,0)),U,6)
"RTN","IBCEU5",189,0)
 S DIR("A")="SELECT A PROCEDURE ENTRY: "_$S($P(IBRC,U,11):"#"_$P(IBRC,U,11)_" - "_$$EXPAND^IBTRE(399.0304,.01,$P($G(^DGCR(399,IBIFN,"CP",$P(IBRC,U,11),0)),U))_"// ",1:"")
"RTN","IBCEU5",190,0)
 S DIR("?")="Enter a manually-added CPT procedure to associate with this charge"
"RTN","IBCEU5",191,0)
 S DA(1)=IBIFN
"RTN","IBCEU5",192,0)
 D ^DIR K DIR W !
"RTN","IBCEU5",193,0)
 I Y>0 D UPDPTR(IBIFN,IBREV,+Y)
"RTN","IBCEU5",194,0)
 Q
"RTN","IBCEU5",195,0)
 ;
"RTN","IBCEU5",196,0)
UPDPTR(IBIFN,IBREV,Y) ;
"RTN","IBCEU5",197,0)
 N IBZ,DA
"RTN","IBCEU5",198,0)
 S DA(1)=IBIFN,DA=IBREV,IBZ=""
"RTN","IBCEU5",199,0)
 D FDA^DILF(399.042,.DA,.11,"R",$S(Y:+Y,1:""),"IBZ")
"RTN","IBCEU5",200,0)
 D FILE^DIE(,"IBZ")
"RTN","IBCEU5",201,0)
 Q
"RTN","IBCEU5",202,0)
 ;
"RTN","IBCEU5",203,0)
INSFT(IBIFN) ; Returns 1 if form type is UB92, 0 if CMS-1500
"RTN","IBCEU5",204,0)
 Q ($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEU5",205,0)
 ;
"RTN","IBCEXTRP")
0^32^B21578512^B21771139
"RTN","IBCEXTRP",1,0)
IBCEXTRP ;ALB/JEH - VIEW/PRINT EDI EXTRACT DATA ; 4/22/03 9:59am
"RTN","IBCEXTRP",2,0)
 ;;2.0;INTEGRATED BILLING;**137,197,211,348**;21-MAR-94;Build 5
"RTN","IBCEXTRP",3,0)
 ;
"RTN","IBCEXTRP",4,0)
EN ;
"RTN","IBCEXTRP",5,0)
INIT ;
"RTN","IBCEXTRP",6,0)
 W !!,"This option will display the EDI extract data for a bill.",!
"RTN","IBCEXTRP",7,0)
 N IBREC1,IBIEN,IBINC,DIC,X,Y,DIR,IB364IEN,IBVNUM
"RTN","IBCEXTRP",8,0)
 ;
"RTN","IBCEXTRP",9,0)
 N DPTNOFZY S DPTNOFZY=1 ; Suppress PATIENT file fuzzy lookups
"RTN","IBCEXTRP",10,0)
 S DIC="^DGCR(399,",DIC(0)="AEMQ",DIC("S")="I 234[$P(^(0),U,13)" D ^DIC
"RTN","IBCEXTRP",11,0)
 I Y<1 G EXITQ
"RTN","IBCEXTRP",12,0)
 S IBIEN=+Y,IBREC1=$G(^DGCR(399,IBIEN,0))
"RTN","IBCEXTRP",13,0)
 S IB364IEN=$$LAST364^IBCEF4(IBIEN) I +$G(IB364IEN)=0 D  G EXITQ
"RTN","IBCEXTRP",14,0)
 . W !,"There is no entry in the EDI Transmit Bill file for this bill number."
"RTN","IBCEXTRP",15,0)
 S IBVNUM=$P($G(^IBA(364,IB364IEN,0)),U,2) I +$G(IBVNUM)=0 D  G EXITQ
"RTN","IBCEXTRP",16,0)
 . W !!,"There is no batch # for this bill.  It has not been transmitted."
"RTN","IBCEXTRP",17,0)
 S IBVNUM=$P($G(^IBA(364.1,IBVNUM,0)),U)
"RTN","IBCEXTRP",18,0)
 S DIR("A")="INCLUDE FIELDS WITH NO DATA?: ",DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR
"RTN","IBCEXTRP",19,0)
 I $D(DTOUT)!$D(DUOUT) G EXITQ
"RTN","IBCEXTRP",20,0)
 S IBINC=+Y
"RTN","IBCEXTRP",21,0)
DEV ; - Select device
"RTN","IBCEXTRP",22,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCEXTRP",23,0)
 S %ZIS="QM" D ^%ZIS G:POP EXITQ
"RTN","IBCEXTRP",24,0)
 I $D(IO("Q")) D  G EXITQ
"RTN","IBCEXTRP",25,0)
 . S ZTRTN="LIST^IBCEXTRP",ZTDESC="Transmitted Bill Extract Data"
"RTN","IBCEXTRP",26,0)
 . S ZTSAVE("IB*")=""
"RTN","IBCEXTRP",27,0)
 . D ^%ZTLOAD
"RTN","IBCEXTRP",28,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBCEXTRP",29,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBCEXTRP",30,0)
 U IO
"RTN","IBCEXTRP",31,0)
 ;
"RTN","IBCEXTRP",32,0)
LIST ; - set up array and print data
"RTN","IBCEXTRP",33,0)
 N IBPG,IBSEQ,IBPC,IBDA,IBREC,IBQUIT,IBILL,IBLINE,IBXDATA,IBERR,IBXERR,Z,Z0,Z1
"RTN","IBCEXTRP",34,0)
 D EXTRACT(IBIEN,IBVNUM,8,1)
"RTN","IBCEXTRP",35,0)
 S (IBPG,IBQUIT,IBSEQ,IBPC,IBDA,IBLINE)=0
"RTN","IBCEXTRP",36,0)
 K ^TMP($J,"IBLINES")
"RTN","IBCEXTRP",37,0)
 ;IB*2.0*211 - rely on form type instead of bill charge type
"RTN","IBCEXTRP",38,0)
 N IBFMTYP S IBFMTYP=$$FT^IBCEF(IBIEN)
"RTN","IBCEXTRP",39,0)
 S IBFMTYP=$S(IBFMTYP=2:"CMS-1500",IBFMTYP=3:"UB-92",1:"OTHER"_"("_IBFMTYP_")")
"RTN","IBCEXTRP",40,0)
 S IBILL=$S($$INPAT^IBCEF(IBIEN,1):"Inpt",1:"Oupt")_"/"_IBFMTYP
"RTN","IBCEXTRP",41,0)
 I $D(^TMP("IBXERR",$J)) D  G EXITQ
"RTN","IBCEXTRP",42,0)
 . S IBERR=0 F  S IBERR=$O(^TMP("IBXERR",$J,IBERR)) Q:'IBERR  W !,$G(^TMP("IBXERR",$J,IBERR))
"RTN","IBCEXTRP",43,0)
 F  S IBSEQ=$O(^IBA(364.6,"ASEQ",8,IBSEQ)) Q:'IBSEQ!(IBQUIT)  F  S IBPC=$O(^IBA(364.6,"ASEQ",8,IBSEQ,1,IBPC)) Q:'IBPC!(IBQUIT)  F  S IBDA=$O(^IBA(364.6,"ASEQ",8,IBSEQ,1,IBPC,IBDA)) Q:'IBDA!(IBQUIT)  S IBREC=$G(^IBA(364.6,IBDA,0)) D  Q:IBQUIT
"RTN","IBCEXTRP",44,0)
 . N IBOK,Z,IBMULT
"RTN","IBCEXTRP",45,0)
 . I $P(IBREC,U,11)=1 Q
"RTN","IBCEXTRP",46,0)
 . I IBPC=1 S IBOK=0 D
"RTN","IBCEXTRP",47,0)
 .. S Z=1 F  S Z=$O(^TMP("IBXDATA",$J,1,IBSEQ,1,Z)) Q:'Z  I $G(^(Z))'="" S IBOK=1 Q
"RTN","IBCEXTRP",48,0)
 .. I 'IBOK S $P(^TMP("IBXDATA",$J,1,IBSEQ,1,1),U)=$P($G(^TMP("IBXDATA",$J,1,IBSEQ,1,1)),U)_"  (NO DATA - RECORD NOT SENT)"
"RTN","IBCEXTRP",49,0)
 . S IBMULT=0 F  S IBMULT=$O(^TMP("IBXDATA",$J,1,IBSEQ,IBMULT)) Q:'IBMULT   D
"RTN","IBCEXTRP",50,0)
 .. I '$G(IBINC),$P($G(^TMP("IBXDATA",$J,1,IBSEQ,IBMULT,IBPC)),U)="" Q
"RTN","IBCEXTRP",51,0)
 .. S ^TMP($J,"IBLINES",IBSEQ,IBMULT,IBPC)=$E($P(IBREC,U,10)_$J("",30),1,30)_": "_$P($G(^TMP("IBXDATA",$J,1,IBSEQ,IBMULT,IBPC)),U)
"RTN","IBCEXTRP",52,0)
 .
"RTN","IBCEXTRP",53,0)
 W:$E(IOST,1,2)["C-" @IOF ; initial form feed for screen print
"RTN","IBCEXTRP",54,0)
 N IBFMTYP S IBFMTYP=$$FT^IBCEF(IBIEN)
"RTN","IBCEXTRP",55,0)
 S IBFMTYP=$S(IBFMTYP=2:"CMS-1500",IBFMTYP=3:"UB-92",1:"OTHER"_"("_IBFMTYP_")")
"RTN","IBCEXTRP",56,0)
 S IBILL=$S($$INPAT^IBCEF(IBIEN,1):"Inpt",1:"Oupt")_"/"_IBFMTYP
"RTN","IBCEXTRP",57,0)
 D HDR
"RTN","IBCEXTRP",58,0)
 S Z=0 F  S Z=$O(^TMP($J,"IBLINES",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^TMP($J,"IBLINES",Z,Z0)) Q:'Z0  S Z1=0 F  S Z1=$O(^TMP($J,"IBLINES",Z,Z0,Z1)) Q:'Z1  D  G:IBQUIT Q1
"RTN","IBCEXTRP",59,0)
 . D:IBLINE>(IOSL-5) HDR Q:IBQUIT
"RTN","IBCEXTRP",60,0)
 . W !,^TMP($J,"IBLINES",Z,Z0,Z1)
"RTN","IBCEXTRP",61,0)
 . S IBLINE=IBLINE+1
"RTN","IBCEXTRP",62,0)
Q1 K ^TMP($J,"IBLINES")
"RTN","IBCEXTRP",63,0)
 Q
"RTN","IBCEXTRP",64,0)
 ;
"RTN","IBCEXTRP",65,0)
HDR ; - Report header
"RTN","IBCEXTRP",66,0)
 N DIR,Y
"RTN","IBCEXTRP",67,0)
 I IBPG D  Q:IBQUIT
"RTN","IBCEXTRP",68,0)
 . I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR S IBQUIT=('Y) Q:IBQUIT
"RTN","IBCEXTRP",69,0)
 . W @IOF
"RTN","IBCEXTRP",70,0)
 ;
"RTN","IBCEXTRP",71,0)
 S IBPG=IBPG+1
"RTN","IBCEXTRP",72,0)
 W !!,?25,"EDI Transmitted Bill Extract Data",!,"Bill #",?11,"Type",?27,"Patient Name",?52,"SSN",?57,$$FMTE^XLFDT(DT),?71,"Page: "_IBPG
"RTN","IBCEXTRP",73,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","IBCEXTRP",74,0)
 W !,$P(IBREC1,U)_" "_"("_IBILL_")",?27,$P($G(^DPT(+$P(IBREC1,U,2),0)),U),?52,$P($G(^DPT($P(IBREC1,U,2),0)),U,9),!
"RTN","IBCEXTRP",75,0)
 S IBLINE=5
"RTN","IBCEXTRP",76,0)
 Q
"RTN","IBCEXTRP",77,0)
 ;
"RTN","IBCEXTRP",78,0)
ASK ;
"RTN","IBCEXTRP",79,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCEXTRP",80,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCEXTRP",81,0)
 S DIR(0)="E" D ^DIR
"RTN","IBCEXTRP",82,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBQUIT=1
"RTN","IBCEXTRP",83,0)
 Q
"RTN","IBCEXTRP",84,0)
 ;
"RTN","IBCEXTRP",85,0)
EXITQ ; - clean up and exit
"RTN","IBCEXTRP",86,0)
 I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" W ! D ^DIR K DIR
"RTN","IBCEXTRP",87,0)
 K ^TMP("IBXERR",$J),^TMP("IBXDATA",$J),IBXERR
"RTN","IBCEXTRP",88,0)
 D CLEAN^DILF
"RTN","IBCEXTRP",89,0)
 Q
"RTN","IBCEXTRP",90,0)
 ;
"RTN","IBCEXTRP",91,0)
EXTRACT(IBIFN,IBBATCH,IBFORM,IBLOCAL) ; Extracts transmitted form data into global
"RTN","IBCEXTRP",92,0)
 ; ^TMP("IBXDATA",$J).  Errors are in ^TMP("IBXERR",$J,err_num)=text.
"RTN","IBCEXTRP",93,0)
 ; IBBATCH = Batch # of bill (if known), otherwise, set to 1.  This
"RTN","IBCEXTRP",94,0)
 ;          variable must be > 0 to prevent a new batch from being added
"RTN","IBCEXTRP",95,0)
 ; IBFORM = the ien of the form in file 353
"RTN","IBCEXTRP",96,0)
 ; IBLOCAL = 1 if OK to use local form, 0 if not
"RTN","IBCEXTRP",97,0)
 N IBVNUM,IBL
"RTN","IBCEXTRP",98,0)
 D FORMPRE^IBCFP1
"RTN","IBCEXTRP",99,0)
 S IBVNUM=$G(IBBATCH)
"RTN","IBCEXTRP",100,0)
 S IBL=$S('$G(IBLOCAL):IBFORM,1:"") ; No local form ... set = main form
"RTN","IBCEXTRP",101,0)
 ; Get local form associated with parent, if any
"RTN","IBCEXTRP",102,0)
 I IBL="" S IBL=$S($P($G(^IBE(353,+IBFORM,2)),U,8):$P(^(2),U,8),1:IBFORM)
"RTN","IBCEXTRP",103,0)
 D SETUP^IBCE837(1)
"RTN","IBCEXTRP",104,0)
 D ROUT^IBCFP1(IBFORM,1,IBIFN,0,IBL)
"RTN","IBCEXTRP",105,0)
 Q
"RTN","IBCEXTRP",106,0)
 ;
"RTN","IBCFP")
0^13^B12560785^B12725454
"RTN","IBCFP",1,0)
IBCFP ;ALB/ARH - PRINT AUTHORIZED BILLS IN ORDER ;6-DEC-94
"RTN","IBCFP",2,0)
 ;;2.0;INTEGRATED BILLING;**41,54,137,155,348**;21-MAR-94;Build 5
"RTN","IBCFP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCFP",4,0)
 ;
"RTN","IBCFP",5,0)
 ;
"RTN","IBCFP",6,0)
 S IBPAR1=$G(^IBE(350.9,1,1))
"RTN","IBCFP",7,0)
 S IBFT=$G(^IBE(353,3,0)) I $P(IBFT,U,2)="" W !!,"Default printer in billing not defined for the "_$P(IBFT,U,1)_", none will print!",!
"RTN","IBCFP",8,0)
 I +$P(IBPAR1,U,22) S IBFT=$G(^IBE(353,2,0)) I $P(IBFT,U,2)="" W !!,"Default printer in billing not defined for the "_$P(IBFT,U,1)_", none will print!",!
"RTN","IBCFP",9,0)
 I '$D(^DGCR(399,"AST")) W !!,"There are no Authorized but not Printed bills to print!" G END
"RTN","IBCFP",10,0)
 ;
"RTN","IBCFP",11,0)
 S IBS="",IBZ="Z:ZIP;I:INSURANCE COMPANY NAME;P:PATIENT NAME;"
"RTN","IBCFP",12,0)
ORDER S DIR("?")="This option prints all non-transmittable bills with a Status of Authorized in the order requested.  The printed bills may be sorted by: Zip Code, Insurance Company Name, and Patient name."
"RTN","IBCFP",13,0)
1 S DIR("A")="First Sort Bills By",DIR(0)="SOB^"_IBZ D ^DIR I $D(DIRUT) G END
"RTN","IBCFP",14,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0) S IBX=$P($P(IBZ,Y_":",2),";",1)
"RTN","IBCFP",15,0)
 ;
"RTN","IBCFP",16,0)
 S DIR("?",1)="Enter the field that the bills should be sorted on within "_IBX_".  Press return if the order already entered is sufficient.",DIR("?",2)=""
"RTN","IBCFP",17,0)
2 S DIR("A")="Then Sort Bills By",DIR(0)="SOB^"_IBZ D ^DIR I Y'="",$D(DIRUT) G END
"RTN","IBCFP",18,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0) G:Y="" BEG S IBY=$P($P(IBZ,Y_":",2),";",1)
"RTN","IBCFP",19,0)
 ;
"RTN","IBCFP",20,0)
 S DIR("?",1)="Enter the field that the bills should be sorted on within "_IBX_" and "_IBY_".  Press return if the order already entered is sufficient."
"RTN","IBCFP",21,0)
3 S DIR("A")="Then Sort Bills By",DIR(0)="SOB^"_IBZ D ^DIR K DIR I Y'="",$D(DIRUT) G END
"RTN","IBCFP",22,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0)
"RTN","IBCFP",23,0)
 ;
"RTN","IBCFP",24,0)
BEG S DIR("A")="Begin printing bills",DIR("?",1)="  Enter YES to begin printing all authorized non-transmittable bills."
"RTN","IBCFP",25,0)
 S DIR("?",2)="  Enter NO to quit this option."
"RTN","IBCFP",26,0)
 S DIR("?")="  Enter ?? to list the authorized bills that will be printed."
"RTN","IBCFP",27,0)
 W ! S DIR(0)="YBO",DIR("??")="^D DISPX^IBCF" D ^DIR K DIR I 'Y W "... bills not printed!" G END
"RTN","IBCFP",28,0)
 ;
"RTN","IBCFP",29,0)
 S ZTRTN="QTASK^IBCFP1",ZTDESC="BATCH PRINT AUTHORIZED THIRD PARTY BILLS",ZTIO="",ZTSAVE("IBS")="" D ^%ZTLOAD
"RTN","IBCFP",30,0)
 I $D(ZTSK) W !," ... queued"
"RTN","IBCFP",31,0)
 ;
"RTN","IBCFP",32,0)
END K DIR,IBX,IBY,IBZ,IBS,IBPAR1,IBFT,Y,X,DIRUT ; end of interactive part
"RTN","IBCFP",33,0)
 Q
"RTN","IBCFP",34,0)
 ;
"RTN","IBCFP",35,0)
 ;
"RTN","IBCFP",36,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCFP",37,0)
 ;
"RTN","IBCFP",38,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCFP",39,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCFP",40,0)
 Q +$G(ZTSTOP)
"RTN","IBCFP1")
0^34^B33608926^B33631841
"RTN","IBCFP1",1,0)
IBCFP1 ;ALB/ARH - PRINT AUTHORIZED BILLS IN ORDER ;6-DEC-94
"RTN","IBCFP1",2,0)
 ;;2.0;INTEGRATED BILLING;**54,52,80,121,51,137,155,320,348**;21-MAR-94;Build 5
"RTN","IBCFP1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCFP1",4,0)
 ;
"RTN","IBCFP1",5,0)
 ;
"RTN","IBCFP1",6,0)
QTASK ; 1st part sorts authorized bills into order requested by bill form type then queues off 1 job for each type to print bills
"RTN","IBCFP1",7,0)
 ;
"RTN","IBCFP1",8,0)
 D GCLEAN S IBXP=$$FMADD^XLFDT(DT,1)_"^"_DT_"^BATCH PRINT BILLS "_$$HTE^XLFDT($H)_" by "_$S($D(^VA(200,+$G(DUZ),0)):$P(^(0),"^"),1:"Unknown User")
"RTN","IBCFP1",9,0)
SORT ;sort authorized bills by form type and requested sort order (notice bill addendums only print for 1500's)
"RTN","IBCFP1",10,0)
 S (IBQ,IBIFN)=0 F  S IBIFN=$O(^DGCR(399,"AST",3,IBIFN)) Q:'IBIFN!IBQ  D  I $$STOP S IBQ=1 Q
"RTN","IBCFP1",11,0)
 . Q:+$$TXMT^IBCEF4(IBIFN)=1  ;Exclude transmittable bills
"RTN","IBCFP1",12,0)
 . S IBFT=$$FT^IBCU3(IBIFN) Q:$P($G(^IBE(353,+IBFT,0)),U,2)=""  I IBFT'?1N Q  ;No device for form type
"RTN","IBCFP1",13,0)
 . S IBX=$G(^DGCR(399,IBIFN,0)),IBPAT=$P($G(^DPT(+$P(IBX,U,2),0)),U,1) Q:$P(IBX,U,13)'=3
"RTN","IBCFP1",14,0)
 . S IBZIP=$P($G(^DGCR(399,IBIFN,"M")),U,9),IBINS=$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"MP")),0)),U,1)
"RTN","IBCFP1",15,0)
 . S IBX=IBZIP_U_IBINS_U_IBPAT,IBS1=$P(IBX,U,$E(IBS,1))_" ",IBS2=$P(IBX,U,$E(IBS,2))_" ",IBS3=$P(IBX,U,$E(IBS,3))_" "
"RTN","IBCFP1",16,0)
 . S ^XTMP("IBCFP"_IBFT,0)=IBXP,^XTMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCFP1",17,0)
 . S XIBFT=IBFT  ;save off curent value of IBFT
"RTN","IBCFP1",18,0)
 . ;
"RTN","IBCFP1",19,0)
 . ; set MRA queue to print
"RTN","IBCFP1",20,0)
 . S IBFT=$$FNT^IBCU3("MRA")
"RTN","IBCFP1",21,0)
 . ; Merge the data from ^XTMP("IBCFP" queue, into "IBMRA" queue
"RTN","IBCFP1",22,0)
 . I +IBFT,$P($G(^IBE(353,+IBFT,0)),U,2)'="" S ^XTMP("IBMRA"_IBFT,0)=IBXP M ^XTMP("IBMRA"_IBFT,$J)=^XTMP("IBCFP"_XIBFT,$J)
"RTN","IBCFP1",23,0)
 . ;
"RTN","IBCFP1",24,0)
 . ; Print Bill Addendums only for 1500's
"RTN","IBCFP1",25,0)
 . I $$FTN^IBCU3(XIBFT)'["CMS-1500" Q
"RTN","IBCFP1",26,0)
 . S IBFT=$$FNT^IBCU3("BILL ADDENDUM")
"RTN","IBCFP1",27,0)
 . I +IBFT,$P($G(^IBE(353,+IBFT,0)),U,2)'="" S ^XTMP("IBCFP"_IBFT,0)=IBXP,^XTMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCFP1",28,0)
 . Q
"RTN","IBCFP1",29,0)
 K IBIFN,IBFT,XIBFT,IBX,IBY,IBPAT,IBZIP,IBINS,IBS1,IBS2,IBS3,IBS,IBXP
"RTN","IBCFP1",30,0)
 ;
"RTN","IBCFP1",31,0)
QUEUE ; starts a queued job for each form type that an authorized bill was found for
"RTN","IBCFP1",32,0)
 ; no form types without defined device
"RTN","IBCFP1",33,0)
 I IBQ D GCLEAN ;queued job stopped
"RTN","IBCFP1",34,0)
 I 'IBQ D
"RTN","IBCFP1",35,0)
 . ; queue a job for each form type
"RTN","IBCFP1",36,0)
 . S IBIX="IBCFP" F  S IBIX=$O(^XTMP(IBIX)) Q:(IBIX'?1"IBCFP"1N)  I $D(^XTMP(IBIX,$J)) S IBFT=$E(IBIX,6) D
"RTN","IBCFP1",37,0)
 . . S ZTIO=$P($G(^IBE(353,+IBFT,0)),U,2),IBFTP=IBIX,IBJ=$J
"RTN","IBCFP1",38,0)
 . . S ZTDTH=$H,ZTSAVE("IBFTP")="",ZTSAVE("IBFT")="",ZTSAVE("IBJ")=""
"RTN","IBCFP1",39,0)
 . . S ZTDESC="BATCH PRINTING "_$$FTN^IBCU3(+IBFT),ZTRTN="QBILL^IBCFP1" D ^%ZTLOAD
"RTN","IBCFP1",40,0)
 . ; Also queue a job to print MRA's, if any, for each bill
"RTN","IBCFP1",41,0)
 . S IBIX="IBMRA" F  S IBIX=$O(^XTMP(IBIX)) Q:(IBIX'?1"IBMRA"1N)  I $D(^XTMP(IBIX,$J)) S IBFT=$E(IBIX,6) D
"RTN","IBCFP1",42,0)
 . . S ZTIO=$P($G(^IBE(353,+IBFT,0)),U,2),IBFTP=IBIX,IBJ=$J
"RTN","IBCFP1",43,0)
 . . S ZTDTH=$H,ZTSAVE("IBFTP")="",ZTSAVE("IBFT")="",ZTSAVE("IBJ")=""
"RTN","IBCFP1",44,0)
 . . S ZTDESC="BATCH PRINTING MRA'S",ZTRTN="QMRA^IBCEMU2" D ^%ZTLOAD
"RTN","IBCFP1",45,0)
 K IBIX,IBY,IBFTP,IBJ ; end of first queued part
"RTN","IBCFP1",46,0)
 Q
"RTN","IBCFP1",47,0)
 ;
"RTN","IBCFP1",48,0)
GCLEAN ; Clean up XTMP global for $J of IBCFP and IBMRA entries
"RTN","IBCFP1",49,0)
 N I
"RTN","IBCFP1",50,0)
 S I="IBCFP" F  S I=$O(^XTMP(I)) Q:I'?1"IBCFP"1N.N  K ^XTMP(I)
"RTN","IBCFP1",51,0)
 S I="IBMRA" F  S I=$O(^XTMP(I)) Q:I'?1"IBMRA"1N.N  K ^XTMP(I)
"RTN","IBCFP1",52,0)
 Q
"RTN","IBCFP1",53,0)
 ;
"RTN","IBCFP1",54,0)
QBILL ; 2nd queued part will print all authorized bills for a specific form type
"RTN","IBCFP1",55,0)
 N IBF,IBFORM,IBPNT
"RTN","IBCFP1",56,0)
 S IBF=$P($G(^IBE(353,+IBFT,2)),U,8),IBPNT=1
"RTN","IBCFP1",57,0)
 I $D(IBMCSPNT) S IBPNT=IBMCSPNT    ; IB*320 - MCS resubmit by print
"RTN","IBCFP1",58,0)
 I IBF'="" S IBFORM=IBF D FORMOUT^IBCEFG7 Q  ;call formatter
"RTN","IBCFP1",59,0)
 ;
"RTN","IBCFP1",60,0)
QB1 ; Entrypoint for output logic of formatter
"RTN","IBCFP1",61,0)
 ; pass in "^XTMP(IBFTP,IBJ)" sorted array of bills to print
"RTN","IBCFP1",62,0)
 ;         IBFTP = "IBCFP"_(form type) subscript indicating which part of array to print
"RTN","IBCFP1",63,0)
 ;         IBPNT = reprint status of bill (1-original, 0-copy, etc)
"RTN","IBCFP1",64,0)
 ;         IBFT  = IFN of bill form type to be printed
"RTN","IBCFP1",65,0)
 ;         IBJ   = $J of starting job (for when multiple print jobs might be queued)
"RTN","IBCFP1",66,0)
 ;                 if a single bill printed and queued, IBJ will be null
"RTN","IBCFP1",67,0)
 S:$G(IBJ)="" IBJ=$J
"RTN","IBCFP1",68,0)
 S:'$D(IBPNT) IBPNT=1
"RTN","IBCFP1",69,0)
 N IBCT,IBBN,IBS1,IBS2,IBS3,IBQ,IBIFN
"RTN","IBCFP1",70,0)
 S (IBCT,IBQ,IBS1)=0
"RTN","IBCFP1",71,0)
 S ZTREQ="@"
"RTN","IBCFP1",72,0)
 F  S IBS1=$O(^XTMP(IBFTP,IBJ,IBS1)) Q:IBS1=""!IBQ  D
"RTN","IBCFP1",73,0)
 . S IBS2=0 F  S IBS2=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2)) Q:IBS2=""!IBQ  D
"RTN","IBCFP1",74,0)
 .. S IBS3=0 F  S IBS3=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3)) Q:IBS3=""!IBQ  D
"RTN","IBCFP1",75,0)
 ... S IBBN=0 F  S IBBN=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3,IBBN)) Q:IBBN=""  D  I $$STOP S IBQ=1 Q
"RTN","IBCFP1",76,0)
 .... D ROUT(IBFT,IBPNT,IBBN,.IBCT)
"RTN","IBCFP1",77,0)
 K ^XTMP(IBFTP,IBJ) ; end of last queued part
"RTN","IBCFP1",78,0)
 Q
"RTN","IBCFP1",79,0)
 ;
"RTN","IBCFP1",80,0)
ROUT(IBFT,IBPNT,IBIFN,IBCT,IBF) ; sub procedure to protect variables with new
"RTN","IBCFP1",81,0)
 N IBBN,IBS1,IBS2,IBS3,IBQ,IBFTP,IBJ,IBXPARM,Z
"RTN","IBCFP1",82,0)
 D BILLPARM^IBCEFG0(IBIFN,.IBXPARM)
"RTN","IBCFP1",83,0)
 S IBF=$S($G(IBF)'="":IBF,1:$P($G(^IBE(353,+IBFT,2)),U,8)),IBCT=$G(IBCT)+1
"RTN","IBCFP1",84,0)
 I IBF'="" S Z=$$EXTRACT^IBCEFG(IBF,IBIFN,.IBCT,.IBXPARM) G REX
"RTN","IBCFP1",85,0)
 I IBFT=1 S DFN=$P($G(^DGCR(399,+IBIFN,0)),U,2) D ENP^IBCF1 W @IOF G REX
"RTN","IBCFP1",86,0)
 I IBFT=2 D EN^IBCF2 W @IOF G REX
"RTN","IBCFP1",87,0)
 I $$FTN^IBCU3(+IBFT)="UB-92" D EN^IBCF3 W @IOF G REX
"RTN","IBCFP1",88,0)
 I $$FTN^IBCU3(+IBFT)="BILL ADDENDUM" I +$$BILLAD^IBCF4(IBIFN) D EN^IBCF4 W @IOF G REX
"RTN","IBCFP1",89,0)
REX Q
"RTN","IBCFP1",90,0)
 ;
"RTN","IBCFP1",91,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCFP1",92,0)
 ;
"RTN","IBCFP1",93,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCFP1",94,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCFP1",95,0)
 Q +$G(ZTSTOP)
"RTN","IBCFP1",96,0)
 ;
"RTN","IBCFP1",97,0)
FORMPRE ; Set up environment for bill message
"RTN","IBCFP1",98,0)
 K ^TMP("IBXMSG",$J),^TMP("IBXERR",$J),IBXERR,^TMP("IBXDATA",$J)
"RTN","IBCFP1",99,0)
 Q
"RTN","IBCFP1",100,0)
 ;
"RTN","IBCFP1",101,0)
FORMPOST ; Clean up
"RTN","IBCFP1",102,0)
 I $O(^TMP("IBXERR",$J,"")) D  ;Error messages to mail group
"RTN","IBCFP1",103,0)
 .N XMTO,XMBODY,XMDUZ,XMSUBJ,IBCT,IBERR
"RTN","IBCFP1",104,0)
 .K ^TMP("IBXMSG",$J)
"RTN","IBCFP1",105,0)
 .S ^TMP("IBXMSG",$J,1)="The following bill(s) were not printed due to errors indicated.",^(2)="Once the errors are corrected, the bill(s) can be printed again.",^(3)=" "
"RTN","IBCFP1",106,0)
 .;
"RTN","IBCFP1",107,0)
 .S IBERR=0,IBCT=3
"RTN","IBCFP1",108,0)
 .F  S IBERR=$O(^TMP("IBXERR",$J,IBERR)) Q:'IBERR  S IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)="Bill #: "_$P($G(^DGCR(399,IBERR,0)),U),IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)=$J("",5)_^TMP("IBXERR",$J,IBERR)
"RTN","IBCFP1",109,0)
 .S XMBODY="^TMP(""IBXMSG"","_$J_")" D ERRMSG(XMBODY)
"RTN","IBCFP1",110,0)
 .K ^TMP("IBXMSG",$J),^TMP($J,"IBICT")
"RTN","IBCFP1",111,0)
 ;
"RTN","IBCFP1",112,0)
 K ^TMP("IBXERR",$J),IBXERR
"RTN","IBCFP1",113,0)
 D CLEAN^DILF
"RTN","IBCFP1",114,0)
 Q
"RTN","IBCFP1",115,0)
 ;
"RTN","IBCFP1",116,0)
ENTPRE ; Run before processing a bill entry
"RTN","IBCFP1",117,0)
 K IBXSAVE,IBXERR,^UTILITY("VAPA",$J),^TMP("IBXSAVE",$J),^TMP($J),^TMP("DIERR",$J)
"RTN","IBCFP1",118,0)
 Q
"RTN","IBCFP1",119,0)
 ;
"RTN","IBCFP1",120,0)
ENTPOST ; Run after processing a bill entry
"RTN","IBCFP1",121,0)
 N IBIFN
"RTN","IBCFP1",122,0)
 I $G(IBXERR)'="" S ^TMP("IBXERR",$J,IBXIEN)=IBXERR K ^TMP("IBXDATA",$J)
"RTN","IBCFP1",123,0)
 S IBIFN=IBXIEN D END^IBCF2
"RTN","IBCFP1",124,0)
 K IBXSAVE,^UTILITY("VAPA",$J),^TMP($J),^TMP("IBXSAVE",$J)
"RTN","IBCFP1",125,0)
 D CLEAN^DILF
"RTN","IBCFP1",126,0)
 Q
"RTN","IBCFP1",127,0)
 ;
"RTN","IBCFP1",128,0)
ERRMSG(XMBODY) ; Send bulletin for error message
"RTN","IBCFP1",129,0)
 N XMTO,XMSUBJ
"RTN","IBCFP1",130,0)
 S XMTO($G(DUZ))="",XMSUBJ="PRINT BILL ERRORS"
"RTN","IBCFP1",131,0)
 ;
"RTN","IBCFP1",132,0)
 D SENDMSG^XMXAPI(,XMSUBJ,XMBODY,.XMTO)
"RTN","IBCFP1",133,0)
 D ALERT("One or more bills were not printed.  Check your mail for details",$G(DUZ))
"RTN","IBCFP1",134,0)
 Q
"RTN","IBCFP1",135,0)
 ;
"RTN","IBCFP1",136,0)
ALERT(XQAMSG,IBGRP) ; Send alert message
"RTN","IBCFP1",137,0)
 N XQA
"RTN","IBCFP1",138,0)
 S XQA(IBGRP)=""
"RTN","IBCFP1",139,0)
 D SETUP^XQALERT
"RTN","IBCFP1",140,0)
 Q
"RTN","IBCISC")
0^36^B24145516^B24148855
"RTN","IBCISC",1,0)
IBCISC ;DSI/ESG - IB EDIT SCREENS ?CLA FUNCTIONALITY ;23-FEB-2001
"RTN","IBCISC",2,0)
 ;;2.0;INTEGRATED BILLING;**161,348**;21-MAR-94;Build 5
"RTN","IBCISC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCISC",4,0)
 ;
"RTN","IBCISC",5,0)
 ; Cannot be called from the top
"RTN","IBCISC",6,0)
 Q
"RTN","IBCISC",7,0)
 ;
"RTN","IBCISC",8,0)
CLA(IBIFN) ; Entry point for ?CLA processing
"RTN","IBCISC",9,0)
 ; This is called by routine IBCSCH.
"RTN","IBCISC",10,0)
 NEW DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBCISC",11,0)
 ;
"RTN","IBCISC",12,0)
0 ; Clear screen and display header information
"RTN","IBCISC",13,0)
 W @IOF
"RTN","IBCISC",14,0)
 W !!?21,"VistA-ClaimsManager Interface Options"
"RTN","IBCISC",15,0)
 ;
"RTN","IBCISC",16,0)
 ; Check the bill form type to make sure it's a 1500.
"RTN","IBCISC",17,0)
 I $$CK1^IBCIUT1(IBIFN) D  G CLAX
"RTN","IBCISC",18,0)
 . W !!?5,"ClaimsManager is only available for CMS-1500 claims."
"RTN","IBCISC",19,0)
 . W !!?5,"The form type of the bill you're editing"
"RTN","IBCISC",20,0)
 . W " (",$G(IBBNO),") is "
"RTN","IBCISC",21,0)
 . W $$EXTERNAL^DILFD(399,.19,"",$P(^DGCR(399,IBIFN,0),U,19)),"."
"RTN","IBCISC",22,0)
 . I $P(^DGCR(399,IBIFN,0),U,27) D
"RTN","IBCISC",23,0)
 .. W !?5,"The charge type of this bill is "
"RTN","IBCISC",24,0)
 .. W $$EXTERNAL^DILFD(399,.27,"",$P(^DGCR(399,IBIFN,0),U,27)),"."
"RTN","IBCISC",25,0)
 .. Q
"RTN","IBCISC",26,0)
 . D EOP
"RTN","IBCISC",27,0)
 . Q
"RTN","IBCISC",28,0)
 ;
"RTN","IBCISC",29,0)
 ; Check for a form type change
"RTN","IBCISC",30,0)
 D CKFT^IBCIUT1(IBIFN)
"RTN","IBCISC",31,0)
 ;
"RTN","IBCISC",32,0)
 ; Display the options available and let the user choose
"RTN","IBCISC",33,0)
 S DIR("A")="Select option or press RETURN to continue"
"RTN","IBCISC",34,0)
 S DIR(0)="SO^1:Test Send to ClaimsManager;2:Display ClaimsManager Errors;3:Show ClaimsManager Information"
"RTN","IBCISC",35,0)
 D ^DIR K DIR
"RTN","IBCISC",36,0)
 I 'Y G CLAX
"RTN","IBCISC",37,0)
 I Y=1 D TESTSEND G CLAX
"RTN","IBCISC",38,0)
 I Y=2 D DISPERR G CLAX
"RTN","IBCISC",39,0)
 I Y=3 D STATS G CLAX
"RTN","IBCISC",40,0)
CLAX ;
"RTN","IBCISC",41,0)
 Q
"RTN","IBCISC",42,0)
 ;
"RTN","IBCISC",43,0)
 ;
"RTN","IBCISC",44,0)
TESTSEND ;
"RTN","IBCISC",45,0)
 ; Send the data to ClaimsManager as it currently exists
"RTN","IBCISC",46,0)
 ; and display any errors that ClaimsManager finds.
"RTN","IBCISC",47,0)
 ;
"RTN","IBCISC",48,0)
 NEW NUMBER,IBCISNT,IBCISTAT,IBCIREDT,IBCIERR
"RTN","IBCISC",49,0)
 ;
"RTN","IBCISC",50,0)
 ; Check for the ClaimsManager working OK flag
"RTN","IBCISC",51,0)
 I '$$CK2^IBCIUT1() D  G TSTSNDX
"RTN","IBCISC",52,0)
 . W !!?5,"The VistA-ClaimsManager Interface is not currently working."
"RTN","IBCISC",53,0)
 . W !!?5,"Please try again later."
"RTN","IBCISC",54,0)
 . D EOP
"RTN","IBCISC",55,0)
 . Q
"RTN","IBCISC",56,0)
 ;
"RTN","IBCISC",57,0)
 ; Check to see if the bill is no longer editable.  We only want to
"RTN","IBCISC",58,0)
 ; do test sends if the bill is still editable.
"RTN","IBCISC",59,0)
 I '$F(".1.","."_$P($G(^DGCR(399,IBIFN,0)),U,13)_".") D  G TSTSNDX  ;DSI/DJW 3/21/02
"RTN","IBCISC",60,0)
 . W !!?5,"This bill is no longer editable.  The ClaimsManager interface"
"RTN","IBCISC",61,0)
 . W !?5,"Test Send functionality is not available for this bill."
"RTN","IBCISC",62,0)
 . D EOP
"RTN","IBCISC",63,0)
 . Q
"RTN","IBCISC",64,0)
 ;
"RTN","IBCISC",65,0)
 ; Refresh the data in file 351.9 if either of these functions 
"RTN","IBCISC",66,0)
 ; report that there are no line items.  We've got to know what's
"RTN","IBCISC",67,0)
 ; going on in this case.  (esg - 3/20/02)
"RTN","IBCISC",68,0)
 I '$$LITMS^IBCIUT1(IBIFN)!'$$CKLI^IBCIUT1(IBIFN) D UPDT^IBCIADD1
"RTN","IBCISC",69,0)
 ;
"RTN","IBCISC",70,0)
 ; Check for the existence of line items
"RTN","IBCISC",71,0)
 I '$$CKLI^IBCIUT1(IBIFN) D MSG4^IBCIST,EOP G TSTSNDX
"RTN","IBCISC",72,0)
 ;
"RTN","IBCISC",73,0)
 ; Send to ClaimsManager after setting IBCISNT=3 to indicate test send
"RTN","IBCISC",74,0)
 S IBCISNT=3
"RTN","IBCISC",75,0)
 D ST2^IBCIST
"RTN","IBCISC",76,0)
 ;
"RTN","IBCISC",77,0)
 ; No errors found by ClaimsManager
"RTN","IBCISC",78,0)
 I IBCISTAT=3 D EOP G TSTSNDX
"RTN","IBCISC",79,0)
 ;
"RTN","IBCISC",80,0)
 ; Errors were found by ClaimsManager
"RTN","IBCISC",81,0)
 I IBCISTAT=4 D  G TSTSNDX
"RTN","IBCISC",82,0)
 . W !!?5,"ClaimsManager found "
"RTN","IBCISC",83,0)
 . S NUMBER=$O(^TMP("IBCITST",$J,""),-1)
"RTN","IBCISC",84,0)
 . W NUMBER," error" W:NUMBER>1 "s"
"RTN","IBCISC",85,0)
 . W " with this bill."
"RTN","IBCISC",86,0)
 . W !?5,"Press RETURN to view the error" W:NUMBER>1 "s" W "."
"RTN","IBCISC",87,0)
 . D EOP Q:($D(DTOUT)!$D(DUOUT))
"RTN","IBCISC",88,0)
 . ;
"RTN","IBCISC",89,0)
 . ; Invoke the utility to display the ClaimsManager errors
"RTN","IBCISC",90,0)
 . ;
"RTN","IBCISC",91,0)
 . D EN^IBCIWK(0)
"RTN","IBCISC",92,0)
 . Q
"RTN","IBCISC",93,0)
 ;
"RTN","IBCISC",94,0)
 ; At this point, we know that IBCISTAT=6 so there was a communication
"RTN","IBCISC",95,0)
 ; problem of some kind.  A more descriptive error message should have
"RTN","IBCISC",96,0)
 ; been displayed by IBCIST and a mail message should have been sent.
"RTN","IBCISC",97,0)
 ;
"RTN","IBCISC",98,0)
 W !!?5,"There was a communications failure:"
"RTN","IBCISC",99,0)
 W !?8,$P(IBCIERR,U,2)
"RTN","IBCISC",100,0)
 I $P(IBCIERR,U,3)'="" D
"RTN","IBCISC",101,0)
 . W !?8,$P($P(IBCIERR,U,3)," - ",1)
"RTN","IBCISC",102,0)
 . W !?8,$P($P(IBCIERR,U,3,99)," - ",2,99)
"RTN","IBCISC",103,0)
 . Q
"RTN","IBCISC",104,0)
 W !!?5,"Please report these errors to your system manager."
"RTN","IBCISC",105,0)
 W !?5,"This bill was NOT successfully analyzed by ClaimsManager."
"RTN","IBCISC",106,0)
 ;
"RTN","IBCISC",107,0)
 D EOP
"RTN","IBCISC",108,0)
 ;
"RTN","IBCISC",109,0)
TSTSNDX ;
"RTN","IBCISC",110,0)
 Q
"RTN","IBCISC",111,0)
 ;
"RTN","IBCISC",112,0)
DISPERR ; Display the errors that were received during the last transaction
"RTN","IBCISC",113,0)
 ; with Ingenix ClaimsManager.  These are the errors that are stored
"RTN","IBCISC",114,0)
 ; in the error fields in the CLAIMSMANAGER FILE (#351.9).  These
"RTN","IBCISC",115,0)
 ; fields are the ERROR CODE, ERROR DATA, and ERROR TEXT.  They are all
"RTN","IBCISC",116,0)
 ; stored at or under the 1 node.
"RTN","IBCISC",117,0)
 ;
"RTN","IBCISC",118,0)
 I '$P($G(^IBA(351.9,IBIFN,1,0)),U,4) D  G DISPERX
"RTN","IBCISC",119,0)
 . W !!?5,"There are no errors recorded in the file."
"RTN","IBCISC",120,0)
 . D EOP
"RTN","IBCISC",121,0)
 . Q
"RTN","IBCISC",122,0)
 ;
"RTN","IBCISC",123,0)
 ; At this point we know that some errors exist.  Process and display
"RTN","IBCISC",124,0)
 ; the errors stored on the 1 node file 351.9.
"RTN","IBCISC",125,0)
 ;
"RTN","IBCISC",126,0)
 ; Invoke the utility to display the ClaimsManager errors
"RTN","IBCISC",127,0)
 ; '0' indicates 'browse' mode of the ListMan display
"RTN","IBCISC",128,0)
 ;
"RTN","IBCISC",129,0)
 D EN^IBCIWK(0)
"RTN","IBCISC",130,0)
DISPERX ;
"RTN","IBCISC",131,0)
 Q
"RTN","IBCISC",132,0)
 ;
"RTN","IBCISC",133,0)
STATS ; Display the data elements on the 0 node of file 351.9.
"RTN","IBCISC",134,0)
 NEW J,IBA0
"RTN","IBCISC",135,0)
 S J=30
"RTN","IBCISC",136,0)
 S IBA0=$G(^IBA(351.9,IBIFN,0))
"RTN","IBCISC",137,0)
 W !!,$J("Current Status: ",J)
"RTN","IBCISC",138,0)
 W $$EXTERNAL^DILFD(351.9,.02,"",$P(IBA0,U,2))
"RTN","IBCISC",139,0)
 W !!,$J("Times sent to ClaimsManager: ",J)
"RTN","IBCISC",140,0)
 W $$EXTERNAL^DILFD(351.9,.04,"",$P(IBA0,U,4))
"RTN","IBCISC",141,0)
 W !,$J("Last sent date/time: ",J)
"RTN","IBCISC",142,0)
 W $$EXTERNAL^DILFD(351.9,.03,"",$P(IBA0,U,3))
"RTN","IBCISC",143,0)
 W !,$J("Last sent by: ",J)
"RTN","IBCISC",144,0)
 W $$EXTERNAL^DILFD(351.9,.05,"",$P(IBA0,U,5))
"RTN","IBCISC",145,0)
 W !!,$J("Date/time Entered: ",J)
"RTN","IBCISC",146,0)
 W $$EXTERNAL^DILFD(351.9,.06,"",$P(IBA0,U,6))
"RTN","IBCISC",147,0)
 W !,$J("Entered by: ",J)
"RTN","IBCISC",148,0)
 W $$EXTERNAL^DILFD(351.9,.07,"",$P(IBA0,U,7))
"RTN","IBCISC",149,0)
 W !,$J("Date/time Last Edited: ",J)
"RTN","IBCISC",150,0)
 W $$EXTERNAL^DILFD(351.9,.08,"",$P(IBA0,U,8))
"RTN","IBCISC",151,0)
 W !,$J("Last Edited by: ",J)
"RTN","IBCISC",152,0)
 W $$EXTERNAL^DILFD(351.9,.09,"",$P(IBA0,U,9))
"RTN","IBCISC",153,0)
 W !!,$J("Assigned to: ",J)
"RTN","IBCISC",154,0)
 W $$EXTERNAL^DILFD(351.9,.12,"",$P(IBA0,U,12))
"RTN","IBCISC",155,0)
 W !,$J("Coder: ",J)
"RTN","IBCISC",156,0)
 W $P($$CODER^IBCIUT5(IBIFN),U,3)
"RTN","IBCISC",157,0)
 W !,$J("Biller: ",J)
"RTN","IBCISC",158,0)
 W $P($$BILLER^IBCIUT5(IBIFN),U,2)
"RTN","IBCISC",159,0)
 D EOP
"RTN","IBCISC",160,0)
STATSX ;
"RTN","IBCISC",161,0)
 Q
"RTN","IBCISC",162,0)
 ;
"RTN","IBCISC",163,0)
EOP ; End of page
"RTN","IBCISC",164,0)
 W !! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCISC",165,0)
EOPX ;
"RTN","IBCISC",166,0)
 Q
"RTN","IBCISC",167,0)
 ;
"RTN","IBCIUT4")
0^35^B48396208^B48402418
"RTN","IBCIUT4",1,0)
IBCIUT4 ;DSI/SLM - MISC UTILITIES ;29-JAN-2001
"RTN","IBCIUT4",2,0)
 ;;2.0;INTEGRATED BILLING;**161,226,348**;21-MAR-94;Build 5
"RTN","IBCIUT4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCIUT4",4,0)
 ;
"RTN","IBCIUT4",5,0)
 Q
"RTN","IBCIUT4",6,0)
COMERR ;create msg for comm error
"RTN","IBCIUT4",7,0)
 NEW L,L1,MGROUP,TEXT,IBCISMG,IBCIERR
"RTN","IBCIUT4",8,0)
 I '$D(IBCICLNP) S IBCICLNP=$P(^DGCR(399,IBIFN,0),U)
"RTN","IBCIUT4",9,0)
 S MGROUP=$P(^IBE(350.9,1,50),U,4),MGROUP=$P(^XMB(3.8,MGROUP,0),U),L1=1
"RTN","IBCIUT4",10,0)
 S IBCIERR=$$P1(PROBLEM)
"RTN","IBCIUT4",11,0)
 D SNTMSG
"RTN","IBCIUT4",12,0)
 S TEXT(L1)="        ** CLAIMSMANAGER COMMUNICATIONS ERROR **",L1=L1+1
"RTN","IBCIUT4",13,0)
 S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",14,0)
 S TEXT(L1)="While attempting to send claim # "_IBCICLNP_", Error Code # "_$P(IBCIERR,U,1),L1=L1+1
"RTN","IBCIUT4",15,0)
 S TEXT(L1)="was generated.",L1=L1+1
"RTN","IBCIUT4",16,0)
 S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",17,0)
 S TEXT(L1)="User attempted "_IBCISMG,L1=L1+1
"RTN","IBCIUT4",18,0)
 S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",19,0)
 S TEXT(L1)="Error Description:",L1=L1+1
"RTN","IBCIUT4",20,0)
 S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",21,0)
 S TEXT(L1)=$P(IBCIERR,U,2),L1=L1+1
"RTN","IBCIUT4",22,0)
 S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",23,0)
 I $P(IBCIERR,U,3)'="" D
"RTN","IBCIUT4",24,0)
 . S TEXT(L1)="ClaimsManager Error Message:",L1=L1+1
"RTN","IBCIUT4",25,0)
 . S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",26,0)
 . S TEXT(L1)=$P($P(IBCIERR,U,3)," - ",1),L1=L1+1
"RTN","IBCIUT4",27,0)
 . S TEXT(L1)=$P($P(IBCIERR,U,3,99)," - ",2,99),L1=L1+1
"RTN","IBCIUT4",28,0)
 . S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",29,0)
 . Q
"RTN","IBCIUT4",30,0)
 ;
"RTN","IBCIUT4",31,0)
 ; esg - 10/29/01 - Direct the reader to the Clear CM Results Queue
"RTN","IBCIUT4",32,0)
 ;       option if the problem does not go away.
"RTN","IBCIUT4",33,0)
 ;
"RTN","IBCIUT4",34,0)
 I PROBLEM=99 S TEXT(L1)="Please correct the problem and send again.",L1=L1+1
"RTN","IBCIUT4",35,0)
 E  D
"RTN","IBCIUT4",36,0)
 . S TEXT(L1)="If this problem persists, then please try running the",L1=L1+1
"RTN","IBCIUT4",37,0)
 . S TEXT(L1)="option to clear out the ClaimsManager results queue.",L1=L1+1
"RTN","IBCIUT4",38,0)
 . S TEXT(L1)="This option name is IBCI CLEAR CLAIMSMANAGER QUEUE.",L1=L1+1
"RTN","IBCIUT4",39,0)
 . Q
"RTN","IBCIUT4",40,0)
 S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",41,0)
 S TEXT(L1)="Bill Sent By: "_$P(^VA(200,DUZ,0),U)
"RTN","IBCIUT4",42,0)
 S XMSUB="ClaimsManager Communications Error sending "_IBCICLNP
"RTN","IBCIUT4",43,0)
 S XMDUZ="ClaimsManager Interface",XMTEXT="TEXT(",XMY("G."_MGROUP)=""
"RTN","IBCIUT4",44,0)
 D ^XMD
"RTN","IBCIUT4",45,0)
 K XMSUB,XMDUZ,XMTEXT,TEXT
"RTN","IBCIUT4",46,0)
 Q
"RTN","IBCIUT4",47,0)
GENERR(IBIFN,IBCIETP) ;create msg for general error
"RTN","IBCIUT4",48,0)
 Q:IBCISNT'=2
"RTN","IBCIUT4",49,0)
 NEW L,L1,L2,L3,MGROUP,TEXT,XMTEXT,XMY,XMSUB,XMDUZ,USER,IBCISMG,IBCIE1
"RTN","IBCIUT4",50,0)
 I '$D(IBCICLNP) S IBCICLNP=$P(^DGCR(399,IBIFN,0),U)
"RTN","IBCIUT4",51,0)
 S MGROUP=$P(^IBE(350.9,1,50),U,3),MGROUP=$P(^XMB(3.8,MGROUP,0),U),L1=1
"RTN","IBCIUT4",52,0)
 D SNTMSG
"RTN","IBCIUT4",53,0)
 S TEXT(L1)="User attempted "_IBCISMG,L1=L1+1
"RTN","IBCIUT4",54,0)
 S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",55,0)
 ;pull error msg from 351.9 based on mnemonic (IBCIETP) error type
"RTN","IBCIUT4",56,0)
 S IBCIE1=0 F  S IBCIE1=$O(^IBA(351.9,IBIFN,1,"B",IBCIETP,IBCIE1)) Q:'IBCIE1  D
"RTN","IBCIUT4",57,0)
 .S TEXT(L1)="Line Item: "_+$P(^IBA(351.9,IBIFN,1,IBCIE1,0),U,2),L1=L1+1
"RTN","IBCIUT4",58,0)
 .S TEXT(L1)="Error Mnemonic: "_$P(^IBA(351.9,IBIFN,1,IBCIE1,0),U),L1=L1+1
"RTN","IBCIUT4",59,0)
 .S TEXT(L1)="Error Level: "_$P(^IBA(351.9,IBIFN,1,IBCIE1,0),"~",2),L1=L1+1
"RTN","IBCIUT4",60,0)
 .S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",61,0)
 .S TEXT(L1)="Error Message:",L1=L1+1
"RTN","IBCIUT4",62,0)
 .S L2=0 F  S L2=$O(^IBA(351.9,IBIFN,1,IBCIE1,L2)) Q:'L2  D
"RTN","IBCIUT4",63,0)
 ..S L3=0 F  S L3=$O(^IBA(351.9,IBIFN,1,IBCIE1,L2,L3)) Q:'L3  D
"RTN","IBCIUT4",64,0)
 ...S TEXT(L1)=^IBA(351.9,IBIFN,1,IBCIE1,L2,L3,0),L1=L1+1
"RTN","IBCIUT4",65,0)
 .S TEXT(L1)=" ",L1=L1+1
"RTN","IBCIUT4",66,0)
 S TEXT(L1)=" ",XMTEXT="TEXT("
"RTN","IBCIUT4",67,0)
 S XMY(DUZ)="",XMY("G."_MGROUP)=""
"RTN","IBCIUT4",68,0)
 ;
"RTN","IBCIUT4",69,0)
 ; Additionally, send this MailMan message to the biller, the 
"RTN","IBCIUT4",70,0)
 ; assigned to person, the person who last edited this bill, and 
"RTN","IBCIUT4",71,0)
 ; the person who last sent it to ClaimsManager.
"RTN","IBCIUT4",72,0)
 ; esg - 9/5/01 & 9/27/01
"RTN","IBCIUT4",73,0)
 ;
"RTN","IBCIUT4",74,0)
 S USER=+$$BILLER^IBCIUT5(IBIFN) I USER S XMY(USER)=""
"RTN","IBCIUT4",75,0)
 S USER=+$P($G(^IBA(351.9,IBIFN,0)),U,12) I USER S XMY(USER)=""
"RTN","IBCIUT4",76,0)
 S USER=+$P($G(^IBA(351.9,IBIFN,0)),U,9) I USER S XMY(USER)=""
"RTN","IBCIUT4",77,0)
 S USER=+$P($G(^IBA(351.9,IBIFN,0)),U,5) I USER S XMY(USER)=""
"RTN","IBCIUT4",78,0)
 ;
"RTN","IBCIUT4",79,0)
 S XMSUB="ClaimsManager Claim "_IBCICLNP_" Returned with Errors"
"RTN","IBCIUT4",80,0)
 S XMDUZ="ClaimsManager Interface"
"RTN","IBCIUT4",81,0)
 D ^XMD
"RTN","IBCIUT4",82,0)
 Q
"RTN","IBCIUT4",83,0)
SNTMSG ;determine what user was doing for message
"RTN","IBCIUT4",84,0)
 ;
"RTN","IBCIUT4",85,0)
 I IBCISNT=1 S IBCISMG="a Normal Send after Editing."
"RTN","IBCIUT4",86,0)
 I IBCISNT=2 S IBCISMG="a Normal Send from the Multiple Send Option."
"RTN","IBCIUT4",87,0)
 I IBCISNT=3 S IBCISMG="a Test Send from the Edit Screens."
"RTN","IBCIUT4",88,0)
 I IBCISNT=4 S IBCISMG="to Cancel the Claim."
"RTN","IBCIUT4",89,0)
 I IBCISNT=5 S IBCISMG="to Override the Errors."
"RTN","IBCIUT4",90,0)
 I IBCISNT=6 S IBCISMG="to Send an Authorized Claim from the Multiple Send Option."
"RTN","IBCIUT4",91,0)
 I IBCISNT=7 S IBCISMG="to delete the lines on this bill which is no longer a CMS-1500."
"RTN","IBCIUT4",92,0)
 Q
"RTN","IBCIUT4",93,0)
 ;
"RTN","IBCIUT4",94,0)
 ;TCK CALL check text for ClaimsManager delimiters and strip if found
"RTN","IBCIUT4",95,0)
 ;Input variable
"RTN","IBCIUT4",96,0)
 ;  x
"RTN","IBCIUT4",97,0)
TCK() ;check text for characters used as delimiters and strip them out
"RTN","IBCIUT4",98,0)
 Q:$G(X)=""  S X=$TR(X,$C(28,29,30)_"'%")
"RTN","IBCIUT4",99,0)
 Q
"RTN","IBCIUT4",100,0)
CCK() ;check codes for decimal points and strip them out
"RTN","IBCIUT4",101,0)
 Q:$G(X)=""  S X=$TR(X,".")
"RTN","IBCIUT4",102,0)
 Q
"RTN","IBCIUT4",103,0)
Z1AR ;converts ibciz array to ibciz1 array and import into error field
"RTN","IBCIUT4",104,0)
 Q:'$D(IBCIZ)  K IBCIZ1
"RTN","IBCIUT4",105,0)
 S ERNUM=0 F  S ERNUM=$O(IBCIZ("RL",ERNUM)) Q:'ERNUM  D
"RTN","IBCIUT4",106,0)
 .I $P(IBCIZ("RL",ERNUM,0),U,2)="" Q
"RTN","IBCIUT4",107,0)
 .S IBCIZ1(ERNUM,0)=$P(IBCIZ("RL",ERNUM,0),U,2)_U_$P(IBCIZ("RL",ERNUM,0),U)_U_$P(IBCIZ("RL",ERNUM,0),U,3,999)
"RTN","IBCIUT4",108,0)
 .S LINE=0 F  S LINE=$O(IBCIZ("RL",ERNUM,"E",LINE)) Q:'LINE  D
"RTN","IBCIUT4",109,0)
 ..S IBCIZ1(ERNUM,LINE)=IBCIZ("RL",ERNUM,"E",LINE)
"RTN","IBCIUT4",110,0)
 I IBCISNT>2 G Z1Q
"RTN","IBCIUT4",111,0)
 I $P($G(^IBA(351.9,IBIFN,1,0)),U,4) D DELER
"RTN","IBCIUT4",112,0)
 S IBCIN1=0 F  S IBCIN1=$O(IBCIZ1(IBCIN1)) Q:'IBCIN1  D ADDSUB1
"RTN","IBCIUT4",113,0)
Z1Q K DIC,DIE,DA,L1,LINE,ERDT,IBCIN1,ERNUM
"RTN","IBCIUT4",114,0)
 Q
"RTN","IBCIUT4",115,0)
PROC() ;convert procedure code
"RTN","IBCIUT4",116,0)
 Q:$G(X)=""  N DA,GNODE
"RTN","IBCIUT4",117,0)
 S DA=$P(X,";"),GNODE="^"_$P(X,";",2)_DA_",0)",X=$P(@GNODE,U)
"RTN","IBCIUT4",118,0)
 Q
"RTN","IBCIUT4",119,0)
ADDSUB1 ;create the subfile for errors and add data
"RTN","IBCIUT4",120,0)
 S DIC="^IBA(351.9,"_IBIFN_",1,",DA(1)=IBIFN,DIC(0)="LMN"
"RTN","IBCIUT4",121,0)
 S X=$P(IBCIZ1(IBCIN1,0),U) D FILE^DICN Q:Y<1  S DA=+Y
"RTN","IBCIUT4",122,0)
 S ERDT=$P(IBCIZ1(IBCIN1,0),U,2,999),ERDT=$TR(ERDT,"^","~")
"RTN","IBCIUT4",123,0)
 S DIE=DIC,DR=".02////"_ERDT D ^DIE
"RTN","IBCIUT4",124,0)
 S L1=0 F  S L1=$O(IBCIZ1(IBCIN1,L1)) Q:'L1  D
"RTN","IBCIUT4",125,0)
 .S IBCIZ1(IBCIN1,L1)=$TR(IBCIZ1(IBCIN1,L1),";",",")
"RTN","IBCIUT4",126,0)
 .S DR=".03///+"_IBCIZ1(IBCIN1,L1) D ^DIE
"RTN","IBCIUT4",127,0)
 Q
"RTN","IBCIUT4",128,0)
DELER ;delete the error information in 351.9
"RTN","IBCIUT4",129,0)
 Q:'IBIFN
"RTN","IBCIUT4",130,0)
 Q:'$P($G(^IBA(351.9,IBIFN,1,0)),U,4)
"RTN","IBCIUT4",131,0)
 S DIK="^IBA(351.9,"_IBIFN_",1,",DA(1)=IBIFN
"RTN","IBCIUT4",132,0)
 S DA=0 F  S DA=$O(^IBA(351.9,IBIFN,1,DA)) Q:'DA  D ^DIK
"RTN","IBCIUT4",133,0)
 K DIK,DA
"RTN","IBCIUT4",134,0)
 Q
"RTN","IBCIUT4",135,0)
DELTI ;delete temporary information in 351.9
"RTN","IBCIUT4",136,0)
 N IBCIX4,TMPDATA,NODE
"RTN","IBCIUT4",137,0)
 S DIE="^IBA(351.9,"_IBIFN_",5,"
"RTN","IBCIUT4",138,0)
 F IBCIX4=$P($G(^IBA(351.9,IBIFN,5,0)),U,4):-1:1 S DA=IBCIX4 D
"RTN","IBCIUT4",139,0)
 .S DA(1)=IBIFN,DR=".01////@" D ^DIE
"RTN","IBCIUT4",140,0)
 K DIE,DR,DA
"RTN","IBCIUT4",141,0)
 I $D(^IBA(351.9,IBIFN,4)) D
"RTN","IBCIUT4",142,0)
 .S DIE="^IBA(351.9,",DA=IBIFN
"RTN","IBCIUT4",143,0)
 .S DR="4.01////@;4.02////@;4.03////@;4.04////@" D ^DIE
"RTN","IBCIUT4",144,0)
 K DIE,DR,DA
"RTN","IBCIUT4",145,0)
 I $D(^IBA(351.9,IBIFN,3)) D
"RTN","IBCIUT4",146,0)
 .S DIE="^IBA(351.9,",DA=IBIFN
"RTN","IBCIUT4",147,0)
 .S DR="3.01////@;3.02////@;3.03////@;3.04////@;3.05////@;3.06////@;"
"RTN","IBCIUT4",148,0)
 .S DR=DR_"3.07////@;3.08////@;3.09////@;3.1////@;3.11////@;3.12////@"
"RTN","IBCIUT4",149,0)
 .D ^DIE K DIE,DR,DA
"RTN","IBCIUT4",150,0)
 F NODE=3,4,5 S TMPDATA="^IBA(351.9,IBIFN,NODE)" K @TMPDATA
"RTN","IBCIUT4",151,0)
 Q
"RTN","IBCIUT4",152,0)
 ;
"RTN","IBCIUT4",153,0)
DCOM(IBIFN) ;delete whatever's in the comment field in 351.9
"RTN","IBCIUT4",154,0)
 S DIE="^IBA(351.9,",DA=IBIFN,DR="2.01///@;.13///@;.14///@"
"RTN","IBCIUT4",155,0)
 D ^DIE K DIE,DA,DR
"RTN","IBCIUT4",156,0)
 Q
"RTN","IBCIUT4",157,0)
 ;
"RTN","IBCIUT4",158,0)
P1(PROBLEM) ;comm error handling with problem variable
"RTN","IBCIUT4",159,0)
 ;Input variable
"RTN","IBCIUT4",160,0)
 ;  PROBLEM
"RTN","IBCIUT4",161,0)
 ;Returns
"RTN","IBCIUT4",162,0)
 ;  error code^error desc^msg returned from ClaimsManager
"RTN","IBCIUT4",163,0)
 N IBCIY,IBCICODE,IBCIDESC,IBCIMSG S IBCICODE=PROBLEM
"RTN","IBCIUT4",164,0)
 I IBCICODE=1 S IBCIDESC="TCP/IP time-out during 1st read." D
"RTN","IBCIUT4",165,0)
 .S IBCIMSG=$G(IBCIZ)_" - "_$G(IBCIZ(1,1))
"RTN","IBCIUT4",166,0)
 I IBCICODE=2 S IBCIDESC="Local Symbol Size Storage Problems during 1st read."
"RTN","IBCIUT4",167,0)
 I IBCICODE=3 S IBCIDESC="1st read was NOT a ClaimsManager ACK message." D
"RTN","IBCIUT4",168,0)
 .S IBCIMSG=$G(IBCIZ)_" - "_$G(IBCIZ(1,1))
"RTN","IBCIUT4",169,0)
 I IBCICODE=4 S IBCIDESC="TCP/IP Time-out during 2nd read." D
"RTN","IBCIUT4",170,0)
 .S IBCIMSG=$G(IBCIZ)_" - "_$G(IBCIZ(1,1))
"RTN","IBCIUT4",171,0)
 I IBCICODE=5 S IBCIDESC="Local Symbol Size Storage Problems during 2nd read."
"RTN","IBCIUT4",172,0)
 I IBCICODE=6 S IBCIDESC="2nd read was NOT a RESULTREC message type." D
"RTN","IBCIUT4",173,0)
 .S IBCIMSG=$G(IBCIZ)_" - "_$G(IBCIZ(1,1))
"RTN","IBCIUT4",174,0)
 I IBCICODE=7 S IBCIDESC="Fatal System Error",IBCIMSG=$G(IBCIZ)_" - "_$G(IBCIZ(1,1)) ; ib*226
"RTN","IBCIUT4",175,0)
 I IBCICODE=99 S IBCIDESC="Unable to Open Port." D
"RTN","IBCIUT4",176,0)
 .S IBCIMSG="Please restart the Ingenix Event Manager services."
"RTN","IBCIUT4",177,0)
 I "^1^2^3^4^5^6^7^99^"'[IBCICODE S IBCIDESC="Unknown Error Type."
"RTN","IBCIUT4",178,0)
 S IBCIY=IBCICODE_"^"_IBCIDESC_"^"_$G(IBCIMSG)
"RTN","IBCIUT4",179,0)
 Q IBCIY
"RTN","IBCIUT4",180,0)
 ;
"RTN","IBCNSC1")
0^10^B65055609^B69640933
"RTN","IBCNSC1",1,0)
IBCNSC1 ;ALB/NLR - IBCNS INSURANCE COMPANY ;23-MAR-93
"RTN","IBCNSC1",2,0)
 ;;2.0;INTEGRATED BILLING;**62,137,232,291,320,348**;21-MAR-94;Build 5
"RTN","IBCNSC1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNSC1",4,0)
 ;
"RTN","IBCNSC1",5,0)
% G EN^IBCNSC
"RTN","IBCNSC1",6,0)
 ;
"RTN","IBCNSC1",7,0)
AI ; -- (In)Activate Company
"RTN","IBCNSC1",8,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",9,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) D SORRY G EXIT
"RTN","IBCNSC1",10,0)
 D ^IBCNSC2
"RTN","IBCNSC1",11,0)
 G EXIT
"RTN","IBCNSC1",12,0)
CC ; -- Change Insurance Company
"RTN","IBCNSC1",13,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",14,0)
 S IBCNS1=IBCNS K IBCNS D INSCO^IBCNSC
"RTN","IBCNSC1",15,0)
 I '$D(IBCNS) S IBCNS=IBCNS1
"RTN","IBCNSC1",16,0)
 K IBCNS1,VALMQUIT
"RTN","IBCNSC1",17,0)
 G EXIT
"RTN","IBCNSC1",18,0)
EA ; -- Billing,Claims,Appeals,Inquiry,Telephone,Main,Remarks,Synonyms
"RTN","IBCNSC1",19,0)
 D FULL^VALM1
"RTN","IBCNSC1",20,0)
 ;
"RTN","IBCNSC1",21,0)
 ; IB*2*320 - check key for associate company action
"RTN","IBCNSC1",22,0)
 I $G(IBY)=",13,",'$$KCHK^XUSRB("IB EDI INSURANCE EDIT") D  G EXIT
"RTN","IBCNSC1",23,0)
 . W !!?5,"You must hold the IB EDI INSURANCE EDIT key to access this option."
"RTN","IBCNSC1",24,0)
 . D PAUSE^VALM1
"RTN","IBCNSC1",25,0)
 . Q
"RTN","IBCNSC1",26,0)
 ;
"RTN","IBCNSC1",27,0)
 W !!
"RTN","IBCNSC1",28,0)
 D MAIN
"RTN","IBCNSC1",29,0)
 ;
"RTN","IBCNSC1",30,0)
 ; -- was company deleted
"RTN","IBCNSC1",31,0)
 I '$D(^DIC(36,IBCNS)) W !!,"<DELETED>",!! S VALMQUIT="" Q
"RTN","IBCNSC1",32,0)
 ;
"RTN","IBCNSC1",33,0)
EXIT ;
"RTN","IBCNSC1",34,0)
 D HDR^IBCNSC,BLD^IBCNSC
"RTN","IBCNSC1",35,0)
 S VALMBCK="R"
"RTN","IBCNSC1",36,0)
 Q
"RTN","IBCNSC1",37,0)
MAIN ; -- Call edit template
"RTN","IBCNSC1",38,0)
 N IBEDIKEY,Z
"RTN","IBCNSC1",39,0)
 L +^DIC(36,+IBCNS):5 I '$T D LOCKED^IBTRCD1 G MAINQ
"RTN","IBCNSC1",40,0)
 I $G(IBY)=",12," D FACID
"RTN","IBCNSC1",41,0)
 F Z=1,2,4,9,13,14 S IBEDIKEY(Z)=$P($G(^DIC(36,+IBCNS,3)),U,Z)   ; save EDI data fields
"RTN","IBCNSC1",42,0)
 I $G(IBY)'=",12," N DIE,DA,DR S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]" D ^DIE K DIE I $D(Y) S IB("^")=1
"RTN","IBCNSC1",43,0)
 I $G(IBY)=",12," D EDITID^IBCEP(+IBCNS)
"RTN","IBCNSC1",44,0)
 I $F(",6,13,",$G(IBY)) D PARENT^IBCNSC02(+IBCNS)   ; parent/child management
"RTN","IBCNSC1",45,0)
 L -^DIC(36,+IBCNS)
"RTN","IBCNSC1",46,0)
MAINQ Q
"RTN","IBCNSC1",47,0)
 ;
"RTN","IBCNSC1",48,0)
FACID ; -- Edit facility ids
"RTN","IBCNSC1",49,0)
 D FACID^IBCEP2B(+IBCNS,"E")
"RTN","IBCNSC1",50,0)
 Q
"RTN","IBCNSC1",51,0)
 ;
"RTN","IBCNSC1",52,0)
SORRY ; -- can't inactivate, don't have key
"RTN","IBCNSC1",53,0)
 W !!,"You do not have access to Inactivate entries.  See your application coordinator.",! D PAUSE^VALM1
"RTN","IBCNSC1",54,0)
 Q
"RTN","IBCNSC1",55,0)
PRESCR ;
"RTN","IBCNSC1",56,0)
 N OFFSET,START,IBCNS18,IBADD
"RTN","IBCNSC1",57,0)
 S IBCNS18=$$ADDRESS^IBCNSC0(IBCNS,.18,11)
"RTN","IBCNSC1",58,0)
 S START=34,OFFSET=2
"RTN","IBCNSC1",59,0)
 D SET^IBCNSP(START,OFFSET+19," Prescription Claims Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC1",60,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS18,"^",7),0)),"^",1))
"RTN","IBCNSC1",61,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS18,"^",1))
"RTN","IBCNSC1",62,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS18,"^",2))
"RTN","IBCNSC1",63,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS18,"^",11))
"RTN","IBCNSC1",64,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC1",65,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS18,"^",3)) S IBADD=1
"RTN","IBCNSC1",66,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS18,"^",4),1,15)_$S($P(IBCNS18,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS18,"^",5),0)),"^",2)_" "_$E($P(IBCNS18,"^",6),1,5))
"RTN","IBCNSC1",67,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS18,"^",8))
"RTN","IBCNSC1",68,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS18,"^",9))
"RTN","IBCNSC1",69,0)
 Q
"RTN","IBCNSC1",70,0)
 ;
"RTN","IBCNSC1",71,0)
PROVID N OFFSET,START,IBCNS4,IBCNS3,IBDISP,Z,LINE
"RTN","IBCNSC1",72,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1
"RTN","IBCNSC1",73,0)
 S (IB1ST("PROVID"),LINE)=START
"RTN","IBCNSC1",74,0)
 S OFFSET=2,IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3))
"RTN","IBCNSC1",75,0)
 ;       
"RTN","IBCNSC1",76,0)
 D SET^IBCNSP(LINE,OFFSET+25,"Provider IDs",IORVON,IORVOFF)
"RTN","IBCNSC1",77,0)
 N OFFSET
"RTN","IBCNSC1",78,0)
 S LINE=LINE+1,OFFSET=1
"RTN","IBCNSC1",79,0)
 D SET^IBCNSP(LINE,OFFSET,"Billing Provider Secondary ID")
"RTN","IBCNSC1",80,0)
 ;
"RTN","IBCNSC1",81,0)
 N Z,Z0,Z1,IBS,I,DIV,FT,CU,CUF,DIVISION,FORMTYPE,PIDT
"RTN","IBCNSC1",82,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",83,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",84,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",85,0)
 . Q:'($P(Z0,U,8)="E")
"RTN","IBCNSC1",86,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,3),+$P(Z0,U,4))=$P(Z0,U,6)_U_$P(Z0,U,7)
"RTN","IBCNSC1",87,0)
 ;
"RTN","IBCNSC1",88,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",89,0)
 . S DIVISION=$$DIV^IBCEP7(DIV)
"RTN","IBCNSC1",90,0)
 . S CU="",CUF=0 F  S CU=$O(IBS(DIV,CU)) Q:CU=""  D
"RTN","IBCNSC1",91,0)
 .. S FT="" F  S FT=$O(IBS(DIV,CU,FT)) Q:FT=""  D
"RTN","IBCNSC1",92,0)
 ... S FORMTYPE=$S(FT=1:"UB92",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",93,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",94,0)
 ... I 'CUF,+CU S CUF=1 S TEXT=$P(DIVISION,"/")_" Care Units :",OFFSET=5 D SET^IBCNSP(LINE,OFFSET,TEXT) S LINE=LINE+1
"RTN","IBCNSC1",95,0)
 ... I CU=0 S TEXT=DIVISION_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=2
"RTN","IBCNSC1",96,0)
 ... I +CU S TEXT=$$EXPAND^IBTRE(355.92,.03,CU)_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=5
"RTN","IBCNSC1",97,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",98,0)
 ;
"RTN","IBCNSC1",99,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",100,0)
 ;
"RTN","IBCNSC1",101,0)
 K IBS
"RTN","IBCNSC1",102,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",103,0)
 D SET^IBCNSP(LINE,OFFSET,"Additional Billing Provider Secondary IDs")
"RTN","IBCNSC1",104,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",105,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",106,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",107,0)
 . Q:'($P(Z0,U,8)="A")
"RTN","IBCNSC1",108,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",109,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",110,0)
 ;
"RTN","IBCNSC1",111,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",112,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",113,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",114,0)
 .. S FORMTYPE=$S(FT=1:"UB92",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",115,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",116,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",117,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",118,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",119,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",120,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",121,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",122,0)
 ;
"RTN","IBCNSC1",123,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",124,0)
 ;
"RTN","IBCNSC1",125,0)
 K IBS
"RTN","IBCNSC1",126,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",127,0)
 D SET^IBCNSP(LINE,OFFSET,"VA-Laboratory or Facility Secondary IDs")
"RTN","IBCNSC1",128,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",129,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",130,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",131,0)
 . Q:'($P(Z0,U,8)="LF")
"RTN","IBCNSC1",132,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",133,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",134,0)
 ;
"RTN","IBCNSC1",135,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",136,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",137,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",138,0)
 .. S FORMTYPE=$S(FT=1:"UB92",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",139,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",140,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",141,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",142,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",143,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",144,0)
 ... ;S TEXT=$$EXPAND^IBTRE(355.92,.06,PIDT)_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",145,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",146,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",147,0)
 ;
"RTN","IBCNSC1",148,0)
 ;
"RTN","IBCNSC1",149,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",150,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",151,0)
 S OFFSET=2
"RTN","IBCNSC1",152,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,OFFSET+25,"ID Parameters",IORVON,IORVOFF)
"RTN","IBCNSC1",153,0)
 ;
"RTN","IBCNSC1",154,0)
 S IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3)),OFFSET=1
"RTN","IBCNSC1",155,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (1500): "_$$EXPAND^IBTRE(36,4.01,+$P(IBCNS4,U))
"RTN","IBCNSC1",156,0)
 S LINE=LINE+1
"RTN","IBCNSC1",157,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",158,0)
 ;
"RTN","IBCNSC1",159,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (UB92): "_$$EXPAND^IBTRE(36,4.02,+$P(IBCNS4,U,2))
"RTN","IBCNSC1",160,0)
 S LINE=LINE+1
"RTN","IBCNSC1",161,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",162,0)
 ;
"RTN","IBCNSC1",163,0)
 S TEXT="Attending/Rendering Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.03,+$P(IBCNS4,U,3))
"RTN","IBCNSC1",164,0)
 S LINE=LINE+1
"RTN","IBCNSC1",165,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",166,0)
 ;
"RTN","IBCNSC1",167,0)
 S TEXT="Referring Provider Secondary ID Qualifier (1500): "_$$EXPAND^IBTRE(36,4.04,+$P(IBCNS4,U,4))
"RTN","IBCNSC1",168,0)
 S LINE=LINE+1
"RTN","IBCNSC1",169,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",170,0)
 ;
"RTN","IBCNSC1",171,0)
 S TEXT="Referring Provider Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.05,+$P(IBCNS4,U,5))
"RTN","IBCNSC1",172,0)
 S LINE=LINE+1
"RTN","IBCNSC1",173,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",174,0)
 ;
"RTN","IBCNSC1",175,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (1500): "_$$EXPAND^IBTRE(36,4.06,+$P(IBCNS4,U,6))
"RTN","IBCNSC1",176,0)
 S LINE=LINE+1
"RTN","IBCNSC1",177,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",178,0)
 ;
"RTN","IBCNSC1",179,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (UB92): "_$$EXPAND^IBTRE(36,4.08,+$P(IBCNS4,U,8))
"RTN","IBCNSC1",180,0)
 S LINE=LINE+1
"RTN","IBCNSC1",181,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",182,0)
 ;
"RTN","IBCNSC1",183,0)
 S TEXT="Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$EXPAND^IBTRE(36,4.07,+$P(IBCNS4,U,7))
"RTN","IBCNSC1",184,0)
 S LINE=LINE+1
"RTN","IBCNSC1",185,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",186,0)
 ;
"RTN","IBCNSC1",187,0)
 S TEXT="Transmit no Billing Provider Sec. ID for the Electronic Plan Types: "
"RTN","IBCNSC1",188,0)
 S LINE=LINE+1
"RTN","IBCNSC1",189,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",190,0)
 ;
"RTN","IBCNSC1",191,0)
 N TAR,ERR,IBCT
"RTN","IBCNSC1",192,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCNSC1",193,0)
 F IBCT=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCNSC1",194,0)
 . S TEXT=TAR("DILIST",1,IBCT)
"RTN","IBCNSC1",195,0)
 . S LINE=LINE+1
"RTN","IBCNSC1",196,0)
 . D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",197,0)
 ;
"RTN","IBCNSC1",198,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",199,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",200,0)
 Q
"RTN","IBCNSC1",201,0)
 ;       
"RTN","IBCNSC1",202,0)
INSDEF(IBINS,IBPTYP) ; Returns the default id # for an ins co, if possible
"RTN","IBCNSC1",203,0)
 N X
"RTN","IBCNSC1",204,0)
 S X=""
"RTN","IBCNSC1",205,0)
 I IBINS,IBPTYP S X=$P($G(^IBA(355.91,+$O(^IBA(355.91,"AC",IBINS,IBPTYP,"*N/A*","")),0)),U,7)
"RTN","IBCNSC1",206,0)
 Q X
"RTN","IBCSCH")
0^4^B75190513^B71799679
"RTN","IBCSCH",1,0)
IBCSCH ;ALB/MJB - MCCR HELP ROUTINE ;03 JUN 88 15:25
"RTN","IBCSCH",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,124,138,51,148,137,161,245,232,287,348**;21-MAR-94;Build 5
"RTN","IBCSCH",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSCH",4,0)
 ;
"RTN","IBCSCH",5,0)
 ;MAP TO DGCRSCH
"RTN","IBCSCH",6,0)
 ;
"RTN","IBCSCH",7,0)
 N I,C,IBSCNNZ,IBQ,IBPRNT,Z S IBSCNNZ=$$UP^XLFSTR($G(IBSCNN)),IBQ=0
"RTN","IBCSCH",8,0)
 I '$D(IBPAR) D  Q:IBQ
"RTN","IBCSCH",9,0)
 . I $F(".?1500.?HCFA.","."_$G(IBSCNNZ)_"."),$$FT^IBCEF(IBIFN)=2 S IBQ=1,IBPRNT=2 D BL24(IBIFN,0) Q
"RTN","IBCSCH",10,0)
 . I $G(IBSCNNZ)="?SC" S IBQ=1 D DISPSC(IBIFN) Q
"RTN","IBCSCH",11,0)
 . I $G(IBSCNNZ)="?INS" S IBQ=1 D INSDSPL(IBIFN) Q
"RTN","IBCSCH",12,0)
 . I $G(IBSCNNZ)="?INX" S IBQ=1 D INSDSPLX(IBIFN) Q
"RTN","IBCSCH",13,0)
 . I $G(IBSCNNZ)="?PRV" S IBQ=1 D DISPPRV(IBIFN) Q
"RTN","IBCSCH",14,0)
 . I $G(IBSCNNZ)="?CHG" S IBQ=1 D DISPCHG^IBCRBH1(IBIFN) Q
"RTN","IBCSCH",15,0)
 . I $G(IBSCNNZ)="?PRC" S IBQ=1 D DISPPRC^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",16,0)
 . I $G(IBSCNNZ)="?CPT" S IBQ=1 D BCPTCHG^IBCRBH2(IBIFN) Q
"RTN","IBCSCH",17,0)
 . I $G(IBSCNNZ)="?INC" S IBQ=1 D EDIT^IBCBB(IBIFN) Q
"RTN","IBCSCH",18,0)
 . I $G(IBSCNNZ)="?CLA",$$CK0^IBCIUT1() S IBQ=1 D CLA^IBCISC(IBIFN) Q
"RTN","IBCSCH",19,0)
 . I $G(IBSCNNZ)="?MRA",$$MCRONBIL^IBEFUNC(IBIFN),$T(SCR^IBCEMVU)'="" S IBQ=1 D SCR^IBCEMVU(IBIFN) Q
"RTN","IBCSCH",20,0)
 . I $G(IBSCNNZ)="?ID" S IBQ=1 D DISPID^IBCEF74(IBIFN) Q
"RTN","IBCSCH",21,0)
 . Q
"RTN","IBCSCH",22,0)
 ;
"RTN","IBCSCH",23,0)
 S IBH("HELP")="" D ^IBCSCU,H^IBCSCU K IBH("HELP") W !,"Enter '^' to stop the display ",$S(IBV:"",1:"and edit "),"of data,"
"RTN","IBCSCH",24,0)
 W:'$D(IBPAR) " '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I IBV W "." G M
"RTN","IBCSCH",25,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those"
"RTN","IBCSCH",26,0)
 W !,"enclosed in arrows ""<>"" are not."
"RTN","IBCSCH",27,0)
 G:$D(IBPAR) M1
"RTN","IBCSCH",28,0)
M W "  Special help screens:"
"RTN","IBCSCH",29,0)
 W !,?5,"Enter '?SC' to view SC Status and Rated Disabilities."
"RTN","IBCSCH",30,0)
 W !,?5,"Enter '?INS' to view the patients insurance policies."
"RTN","IBCSCH",31,0)
 W !,?5,"Enter '?INX' to view the patients insurance policies with comments."
"RTN","IBCSCH",32,0)
 W !,?5,"Enter '?PRV' to view provider specific information."
"RTN","IBCSCH",33,0)
 W !,?5,"Enter '?PRC' to view all procedures on the bill and related data."
"RTN","IBCSCH",34,0)
 W !,?5,"Enter '?CHG' to view all items on the bill with potential charges."
"RTN","IBCSCH",35,0)
 W !,?5,"Enter '?CPT' to view all charges for selected CPT codes and bill type."
"RTN","IBCSCH",36,0)
 I $$FT^IBCEF(IBIFN)=2 W !,?5,"Enter '?1500' to view how block 24 will print on a CMS-1500."
"RTN","IBCSCH",37,0)
 W !,?5,"Enter '?INC' to execute the edits & view the bill inconsistencies."
"RTN","IBCSCH",38,0)
 I $$CK0^IBCIUT1() W !?5,"Enter '?CLA' to view the ClaimsManager options."
"RTN","IBCSCH",39,0)
 I $$MCRONBIL^IBEFUNC(IBIFN) W !?5,"Enter '?MRA' to view Medicare Remittance Advice EOB's on file."
"RTN","IBCSCH",40,0)
 W !,?5,"Enter '?ID' to view all IDs to be electronically transmitted on this claim."
"RTN","IBCSCH",41,0)
 ;
"RTN","IBCSCH",42,0)
 I +IBSR'=9 S Z="DATA GROUPS ON SCREEN "_+IBSR W ! X IBWW D @(IBSR1_IBSR) D W
"RTN","IBCSCH",43,0)
 D S W ! F I=$Y:1:20 W !
"RTN","IBCSCH",44,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to SCREEN ",+IBSR R X:DTIME Q
"RTN","IBCSCH",45,0)
M1 N I,Z S Z="DATA GROUPS ON PARAMETER SCREEN" W !! X IBWW D @(IBSR1_IBSR) D W W ! F I=$Y:1:20 W !
"RTN","IBCSCH",46,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to PARAMETER SCREEN" R X:DTIME Q
"RTN","IBCSCH",47,0)
1 S X="DOB^Alias Name^Sex, Marital Status^Veteran Status, Eligibility^Address, Temporary Address^Patient Short Billing Address^SC at Time of Care" Q
"RTN","IBCSCH",48,0)
2 S X="Patient Employer Name, Address^Spouse Employer Name, Address" Q
"RTN","IBCSCH",49,0)
3 S X="Payer Information^Provider Numbers^Mailing Address" Q
"RTN","IBCSCH",50,0)
4 S X="Admission Information^Discharge Information^Diagnosis Code(s)^Coding Method, Inpt Proc Code(s)^Occurrence Code(s)^Condition Code(s)^Value Code(s)" Q
"RTN","IBCSCH",51,0)
5 S X="Event Date^Outpatient Diagnosis^Outpatient Visits^Coding Method, Opt. Pro. Code(s)^Occurrence Code(s)^Condition Code(s)" Q
"RTN","IBCSCH",52,0)
6 S X="Bill Type, Covered/Non-Covered Days^R.O.I., Assignment of Benefits^Statement Covers Period^Bedsection, Length of Stay^Revenue Code(s), Offset, Total^Rate Schedule(s)^Prior Payments/Claims" Q
"RTN","IBCSCH",53,0)
7 S X="Bill Type, Covered/Non-Covered Days^R.O.I., Assignment of Benefits^Statement Covers Period^Outpatient Visits^Revenue Code(s), Offset, Total^Rate Schedule(s)^Prior Payments/Claims" Q
"RTN","IBCSCH",54,0)
8 S X="Bill Remark^Form Locator 2^Form Locator 9^Form Locator 27^Form Locator 45^Form Locator 92^Form Locator 93^Tx Auth. Code" Q
"RTN","IBCSCH",55,0)
9 S X="Locally defined fields" Q
"RTN","IBCSCH",56,0)
28 S X="Bill Remark, ICN/DCN's, Tx Auth. Code, Admit Diagnosis/Source^Providers^Form Locator 2 and 11^Form Locator 31^Form Locator 56, 57, and 78^Force to Print" Q
"RTN","IBCSCH",57,0)
H8 S X="Period Unable to Work^Admit Dx, ICN/DCN, Tx/Prior Auth. Code^Providers^Non-VA Facility^Form Locator 19^Force to Print" Q
"RTN","IBCSCH",58,0)
PAR S X="Fed Tax #, BC/BS #, MAS Svc Pointer^Bill Signer, Billing Supervisor^Security Parameters, Outpatient CPT parameters ^Remarks, Mailgroups^Agent Cashier Address/Phone" Q
"RTN","IBCSCH",59,0)
S N C,I,Z,J W !! S Z="AVAILABLE SCREENS" X IBWW
"RTN","IBCSCH",60,0)
 S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Specific^Locally Defined"
"RTN","IBCSCH",61,0)
 S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(IBVV,I) S C=C+1,Z="^"_I,IBW=(C#2) W:'(C#2) ?41 X IBWW S Z=$S(I?1N:" ",1:" ")_J_" Data" W Z
"RTN","IBCSCH",62,0)
 Q
"RTN","IBCSCH",63,0)
W N I,J,Z
"RTN","IBCSCH",64,0)
 F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,IBW=(I#2) W:'(I#2) ?42 X IBWW W " "_J
"RTN","IBCSCH",65,0)
 W:'(I-1)#2 ! Q
"RTN","IBCSCH",66,0)
 Q
"RTN","IBCSCH",67,0)
 ;IBCSCH
"RTN","IBCSCH",68,0)
 ;
"RTN","IBCSCH",69,0)
 ;
"RTN","IBCSCH",70,0)
BL24(IBIFN,IBNOSHOW) ; display block 24 of CMS-1500
"RTN","IBCSCH",71,0)
 ; IBNOSHOW = 1 for not to show error/warning text line
"RTN","IBCSCH",72,0)
 N X,Y,DIR,IBPG,IBLN,IBCOL,IBX,IBQ,IBLC,IBLIN,IBPFORM,IBD,IBC1,Z,Z0,IBXDATA,IBXSAVE,IBNXPG
"RTN","IBCSCH",73,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBCSCH",74,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBCSCH",75,0)
 ;
"RTN","IBCSCH",76,0)
 S IBLIN=$$BOX24D^IBCEF11()
"RTN","IBCSCH",77,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2)
"RTN","IBCSCH",78,0)
 S IBX=$$BILLN^IBCEFG0(0,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBCSCH",79,0)
 ;
"RTN","IBCSCH",80,0)
 W @IOF,!,"Example of diagnoses, procedures and charges printing on the CMS-1500"
"RTN","IBCSCH",81,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",82,0)
 ;
"RTN","IBCSCH",83,0)
 ; box 19 - lines 36-37
"RTN","IBCSCH",84,0)
 F Z=+IBLIN,IBLIN+1 I $D(^TMP("IBXDISP",$J,1,Z)) S Z0=$G(^TMP("IBXDISP",$J,1,Z,+$O(^TMP("IBXDISP",$J,1,Z,20),-1))) I Z0'="" S:Z=+IBLIN Z0="BOX 19 DATA: "_Z0 W !,Z0
"RTN","IBCSCH",85,0)
 ;
"RTN","IBCSCH",86,0)
 ; box 21 - lines 39-41
"RTN","IBCSCH",87,0)
 W !,"21. diagnosis"
"RTN","IBCSCH",88,0)
 I $D(^TMP("IBXDISP",$J,2,IBLIN+3)) W ?16,"(1st 4 only)"
"RTN","IBCSCH",89,0)
 W !,?5,"1. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,3)),?25,"3. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,30))
"RTN","IBCSCH",90,0)
 W !,?5,"2. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,3)),?25,"4. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,30))
"RTN","IBCSCH",91,0)
 ;
"RTN","IBCSCH",92,0)
 ; box 24 - lines 44-55
"RTN","IBCSCH",93,0)
 D PG
"RTN","IBCSCH",94,0)
 S IBPG=0 F  S IBPG=$O(^TMP("IBXDISP",$J,IBPG)) Q:'IBPG  D  Q:IBQ
"RTN","IBCSCH",95,0)
 . I '$D(^TMP("IBXDISP",$J,IBPG,IBLIN+9)) Q   ; no line's on this page
"RTN","IBCSCH",96,0)
 . F IBLN=IBLIN+8:1:+$P(IBLIN,U,2) S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,0)) Q:'IBCOL&'$O(^TMP("IBXDISP",$J,IBPG,IBLN))  S IBLC=IBLC+1 I IBCOL D  Q:IBQ
"RTN","IBCSCH",97,0)
 .. S IBCOL=0,IBC1=1 F  S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL)) Q:'IBCOL  I $TR($G(^(IBCOL))," ")'="" D
"RTN","IBCSCH",98,0)
 ... W:IBC1 ! S IBC1=0 W ?(IBCOL-1),$G(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL))
"RTN","IBCSCH",99,0)
 . S IBNXPG=$O(^TMP("IBXDISP",$J,IBPG))   ; next page
"RTN","IBCSCH",100,0)
 . I 'IBQ,IBNXPG,$D(^TMP("IBXDISP",$J,IBNXPG,IBLIN+9)) S IBLIN=$$BOX24D^IBCEF11(),IBQ=$$PAUSE^IBCSCH1(IBLC) Q:IBQ  S IBLC=9 W @IOF D PG
"RTN","IBCSCH",101,0)
 . Q
"RTN","IBCSCH",102,0)
 ;
"RTN","IBCSCH",103,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",104,0)
 I 'IBPG,'IBQ S IBQ=$$PAUSE^IBCSCH1(IBLC)
"RTN","IBCSCH",105,0)
 K ^TMP("IBXDISP",$J),^TMP("IBXSAVE",$J)
"RTN","IBCSCH",106,0)
 Q
"RTN","IBCSCH",107,0)
 ;
"RTN","IBCSCH",108,0)
PG ; Display box 24 letters at top of charge list
"RTN","IBCSCH",109,0)
 W !,"24. A             B  C    D                 E         F     G H I    J"
"RTN","IBCSCH",110,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",111,0)
 Q
"RTN","IBCSCH",112,0)
 ;
"RTN","IBCSCH",113,0)
INSDSPL(IBIFN) ; Display patient's policies
"RTN","IBCSCH",114,0)
 N DIR,X,Y,IBX,DFN,IBDTIN,IBCOVEXT W @IOF
"RTN","IBCSCH",115,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDTIN=$P(IBX,U,3),IBCOVEXT=1
"RTN","IBCSCH",116,0)
 I +DFN D DISPDT^IBCNS W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCSCH",117,0)
 Q
"RTN","IBCSCH",118,0)
 ;
"RTN","IBCSCH",119,0)
INSDSPLX(IBIFN) ; Display patient's policies extended (?INX)
"RTN","IBCSCH",120,0)
 N IBX,DFN,IBDATE S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDATE=$P(IBX,U,3) D DISP^IBCNS3(DFN,IBDATE,123)
"RTN","IBCSCH",121,0)
 Q
"RTN","IBCSCH",122,0)
 ;
"RTN","IBCSCH",123,0)
DISPPRV(IBIFN) ; display provider information: interactive - user selects provider
"RTN","IBCSCH",124,0)
 N DIC,DA,X,Y,IBI,IBJ,IBPRV,IBPX,IBDT,IBARR
"RTN","IBCSCH",125,0)
 W !!,"This is a display of provider specific information."
"RTN","IBCSCH",126,0)
 D SPECIFIC^IBCEU5(IBIFN)
"RTN","IBCSCH",127,0)
 S IBDT=+$G(^DGCR(399,+$G(IBIFN),"U")) I 'IBDT S IBDT=DT
"RTN","IBCSCH",128,0)
 ;
"RTN","IBCSCH",129,0)
 F IBI=1:1 W ! S DIC("A")="Select PROVIDER NAME: ",DIC="^VA(200,",DIC(0)="AEQM" D ^DIC Q:Y'>0  D
"RTN","IBCSCH",130,0)
 . S IBPRV=Y W !!,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH",131,0)
 . ;
"RTN","IBCSCH",132,0)
 . S IBPX=$$ESBLOCK^XUSESIG1(+IBPRV)
"RTN","IBCSCH",133,0)
 . W !," Signature Name: ",$P(IBPX,U,1),!,"Signature Title: ",$P(IBPX,U,3),!,"         Degree: ",$P(IBPX,U,2)
"RTN","IBCSCH",134,0)
 . ;
"RTN","IBCSCH",135,0)
 . S IBPX=$$PRVLIC^IBCU1(+IBPRV,IBDT,.IBARR) W !!,"     License(s): " D
"RTN","IBCSCH",136,0)
 .. I IBPX'>0 W "None Active on ",$$FMTE^XLFDT(IBDT,2) Q
"RTN","IBCSCH",137,0)
 .. S IBJ=0,IBW=0 F  S IBJ=$O(IBARR(IBJ)) Q:'IBJ  D
"RTN","IBCSCH",138,0)
 ... S IBPX=IBARR(IBJ),IBPX=$P($G(^DIC(5,+IBPX,0)),U,2)_": "_$P(IBPX,U,2)
"RTN","IBCSCH",139,0)
 ... I (IBW+$L(IBPX))>61 W !,?17 S IBW=0
"RTN","IBCSCH",140,0)
 ... W IBPX,"  " S IBW=IBW+$L(IBPX)+2
"RTN","IBCSCH",141,0)
 . ;
"RTN","IBCSCH",142,0)
 . S IBPX=$$GET^XUA4A72(+IBPRV,IBDT) W !!,"   Person Class: " D
"RTN","IBCSCH",143,0)
 .. I IBPX'>0 W "None Active on ",$$FMTE^XLFDT(IBDT,2) Q
"RTN","IBCSCH",144,0)
 .. W $P(IBPX,U,7)
"RTN","IBCSCH",145,0)
 .. W !,"  PROVIDER TYPE: ",$P(IBPX,U,2),!," CLASSIFICATION: ",$P(IBPX,U,3),!," SPECIALIZATION: ",$P(IBPX,U,4)
"RTN","IBCSCH",146,0)
 .. I +$P(IBPX,U,5) W !,"      EFFECTIVE: ",$$FMTE^XLFDT(+$P(IBPX,U,5),2) I +$P(IBPX,U,6) W " - ",$$FMTE^XLFDT(+$P(IBPX,U,6),2)
"RTN","IBCSCH",147,0)
 . ;
"RTN","IBCSCH",148,0)
 . S IBPX=$$PRVTYP^IBCRU6(+IBPRV,+IBDT)
"RTN","IBCSCH",149,0)
 . W !!,"RC Provider Group: ",$S(+IBPX:$P(IBPX,U,3)_", "_$P(IBPX,U,5)_"%",1:"None")
"RTN","IBCSCH",150,0)
 . W !,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH",151,0)
 ;
"RTN","IBCSCH",152,0)
 Q
"RTN","IBCSCH",153,0)
 ;
"RTN","IBCSCH",154,0)
DISPSC(IBIFN) ; display patients SC Status and Rated Disabilities
"RTN","IBCSCH",155,0)
 N IB0,DFN,IBSC,IBX,VAEL,VAERR
"RTN","IBCSCH",156,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2),IBSC=$P(IB0,U,18)
"RTN","IBCSCH",157,0)
 W !,@IOF,!,"SC Status and Rated Disabilities for ",$P($G(^DPT(+$G(DFN),0)),U,1)
"RTN","IBCSCH",158,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","IBCSCH",159,0)
 I +$G(IBIFN) W !," SC At Time Of Care: ",$S(IBSC=1:"Yes",IBSC=0:"No",1:"")
"RTN","IBCSCH",160,0)
 I +$G(DFN) D ELIG^VADPT D DIS^DGRPDB
"RTN","IBCSCH",161,0)
 W !!,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",162,0)
 S IBX=$$PAUSE^IBCSCH1(19)
"RTN","IBCSCH",163,0)
 Q
"RTN","IBCSCU")
0^2^B11830990^B10507602
"RTN","IBCSCU",1,0)
IBCSCU ;ALB/MJB - MCCR SCREEN UTILITY ROUTINE ;27 MAY 88 11:09
"RTN","IBCSCU",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,348**;21-MAR-94;Build 5
"RTN","IBCSCU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSCU",4,0)
 ;
"RTN","IBCSCU",5,0)
 ;MAP TO DGCRSCU
"RTN","IBCSCU",6,0)
 ;
"RTN","IBCSCU",7,0)
 S IBW=1,IBU="UNSPECIFIED",IBUN=IBU_" [NOT REQUIRED]",IBV=$S($D(IBV):IBV,1:1) D HOME^%ZIS
"RTN","IBCSCU",8,0)
 ;S IBWW1="X ""F Z2=1:1:(Z1-$L(Z)) S Z=Z_"""" """""" W Z Q"
"RTN","IBCSCU",9,0)
 S (IBVO,IBVI)="" I $S('$D(IOST(0)):1,'$D(^DG(43,1,0)):1,'$P(^DG(43,1,0),"^",36):1,$D(^DG(43,1,"TERM",IOST(0))):1,1:0) G M
"RTN","IBCSCU",10,0)
 ;
"RTN","IBCSCU",11,0)
 I $D(IOST(0)) S X="IOINHI;IOINLOW;IOINORM" D ENDR^%ZISS
"RTN","IBCSCU",12,0)
 I $L(IOINHI),$L(IOINLOW) S IBVI=IOINHI,IBVO=$S(IOINORM]"":IOINORM,1:IBINLOW)
"RTN","IBCSCU",13,0)
 D KILL^%ZISS
"RTN","IBCSCU",14,0)
 ;I $D(^%ZIS(2,IOST(0),7)) S I=^(7) I $L($P(I,"^",1)),$L($P(I,"^",2)) S IBVI=$P(I,"^",1),IBVO=$S($P(I,"^",3)]"":$P(I,"^",3),1:$P(I,"^",2))
"RTN","IBCSCU",15,0)
 ;
"RTN","IBCSCU",16,0)
M ;I $L(IBVI_IBVO)>4 S X=80 X ^%ZOSF("RM")
"RTN","IBCSCU",17,0)
 S IBWW="W:IBW ! S Z=$S(IBV:""<""_Z_"">"",$E(IBV1,Z):""<""_Z_"">"",1:""[""_Z_""]"") W:$E(Z)=""["" IBVI,Z,IBVO W:$E(Z)'=""["" Z Q"
"RTN","IBCSCU",18,0)
 ;S IBWW="W:IBW ! S Z=$S(IOST=""C-QUME""&($L(IBVI)'=2):Z,IBV:""<""_Z_"">"",$E(IBV1,Z):""<""_Z_"">"",1:""[""_Z_""]"") W:$E(Z)=""["" @IBVI,Z,@IBVO W:$E(Z)'=""["" Z Q"
"RTN","IBCSCU",19,0)
 I $D(IBPAR) S IBV=0,IBVV="00000" Q
"RTN","IBCSCU",20,0)
 S IBBNO=$P(^DGCR(399,IBIFN,0),"^",1)
"RTN","IBCSCU",21,0)
 S IBVV=$S('$$INPAT^IBCEF(IBIFN):"000101001",1:"000010101"),X="63266556"
"RTN","IBCSCU",22,0)
 I $P($G(^IBE(353,+$P($G(^DGCR(399,IBIFN,0)),U,19),2)),U,9)'="",$S($D(^DGCR(399,IBIFN,"I1")):1,1:$P($G(^DGCR(399,IBIFN,"M")),U,11)) S $E(IBVV,9)="0"
"RTN","IBCSCU",23,0)
 Q
"RTN","IBCSCU",24,0)
 ;
"RTN","IBCSCU",25,0)
H ;Screen Header
"RTN","IBCSCU",26,0)
 S L="",$P(L,"=",81)=""
"RTN","IBCSCU",27,0)
 I $D(IBH("HELP")) S X="HELP SCREEN" W @IOF,!?(40-($L(X)\2)),IBVI,X,IBVO,!,L G HQ
"RTN","IBCSCU",28,0)
 S X=$P("DEMOGRAPHIC^EMPLOYMENT^PAYER^EVENT - INPATIENT^EVENT - OUTPATIENT^BILLING - GENERAL^BILLING - GENERAL^BILLING - SPECIFIC^LOCALLY DEFINED","^",IBSR)_" INFORMATION",X1="SCREEN <"_+IBSR_">"
"RTN","IBCSCU",29,0)
 N IB0,IBT S IB0=$G(^DGCR(399,IBIFN,0)),IBT=$P(IB0,U,19),DGINPT=$S($$INPAT^IBCEF(IBIFN):"Inpat",1:"Outpat")
"RTN","IBCSCU",30,0)
 ;
"RTN","IBCSCU",31,0)
 W @IOF                                          ; clear screen
"RTN","IBCSCU",32,0)
 W !,VADM(1)                                     ; name
"RTN","IBCSCU",33,0)
 W "   ",$P(VADM(2),"^",2)                       ; ssn
"RTN","IBCSCU",34,0)
 W "   BILL#: ",IBBNO_" - "_DGINPT,"/"           ; claim# - type
"RTN","IBCSCU",35,0)
 I IBT=2 W "1500"                                ; form type 2
"RTN","IBCSCU",36,0)
 I IBT=3 W $TR($P($G(^IBE(353,3,0)),U,1),"-")    ; form type 3
"RTN","IBCSCU",37,0)
 W ?(80-$L(X1)),X1                               ; screen#
"RTN","IBCSCU",38,0)
 W !,L                                           ; separator line
"RTN","IBCSCU",39,0)
 W !?(40-($L(X)\2)),IBVI,X,IBVO                  ; screen description
"RTN","IBCSCU",40,0)
HQ ;
"RTN","IBCSCU",41,0)
 K L,DGINPT
"RTN","IBCSCU",42,0)
 Q
"RTN","IBCSCU",43,0)
 ;
"RTN","IBCSCU",44,0)
A ;Format Address(es)
"RTN","IBCSCU",45,0)
 N Y F I=IBA1:1:IBA1+2 I $P(IB(IBAD),U,I)]"" S IBA(IBA2)=$P(IB(IBAD),U,I),IBA2=IBA2+2
"RTN","IBCSCU",46,0)
 I IBA2=1 S IBA(1)="STREET ADDRESS UNKNOWN",IBA2=IBA2+2
"RTN","IBCSCU",47,0)
 S J=$S($D(^DIC(5,+$P(IB(IBAD),U,IBA1+4),0)):$P(^(0),U,2),1:""),J(1)=$P(IB(IBAD),U,IBA1+3),J(2)=$P(IB(IBAD),U,IBA1+11),IBA(IBA2)=$S(J(1)]""&(J]""):J(1)_", "_J,J(1)]"":J(1),J]"":J,1:"CITY/STATE UNKNOWN")
"RTN","IBCSCU",48,0)
 S Y=$S(IBAD=.11!(IBAD=.121):$P(IB(IBAD),U,IBA1+11),IBAD=.25:$P($G(^DPT(+$G(DFN),.22)),U,6),IBAD=.311:$P($G(^DPT(+$G(DFN),.22)),U,5),1:"") D ZIPOUT^VAFADDR
"RTN","IBCSCU",49,0)
 S IBA(IBA2)=IBA(IBA2)_" "_Y F I=0:0 S I=$O(IBA(I)) Q:I=""  S IBA(I)=$E(IBA(I),1,25)
"RTN","IBCSCU",50,0)
 K IBA1,I,J Q
"RTN","IBCU3")
0^14^B25333825^B25631470
"RTN","IBCU3",1,0)
IBCU3 ;ALB/AAS - BILLING UTILITY ROUTINE (CONTINUED) ; 4/4/03 8:49am
"RTN","IBCU3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,91,106,51,137,211,245,348**;21-MAR-94;Build 5
"RTN","IBCU3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU3",4,0)
 ;
"RTN","IBCU3",5,0)
 ;MAP TO DGCRU3
"RTN","IBCU3",6,0)
SC(DFN) ; returns 1 if service connection indicated, 0 otherwise (based on VAEL(3))
"RTN","IBCU3",7,0)
 N X,VAEL,VAERR S X=0
"RTN","IBCU3",8,0)
 I +$G(DFN) D ELIG^VADPT S X=+$G(VAEL(3))
"RTN","IBCU3",9,0)
 Q X
"RTN","IBCU3",10,0)
 ;
"RTN","IBCU3",11,0)
APPT(DATE,DFN,DISP) ;Check date to see if patient has any visit data
"RTN","IBCU3",12,0)
 ;input:   DATE - required, date to check for appointments
"RTN","IBCU3",13,0)
 ;         DFN  - required, patient to check for appointments on date
"RTN","IBCU3",14,0)
 ;         DISP - if true then error message will be printed before exit, if any
"RTN","IBCU3",15,0)
 ;returns: 1 - if appt visit found
"RTN","IBCU3",16,0)
 ;         2 - if unscheduled add/edit clinic stop entry found
"RTN","IBCU3",17,0)
 ;         3 - if only disposition found
"RTN","IBCU3",18,0)
 ;         "0^error message" if no valid visit data/disposition found
"RTN","IBCU3",19,0)
 ;
"RTN","IBCU3",20,0)
 N Y,X,X1,X2 S DATE=$P(DATE,".",1),Y="0^* Patient has no Visits for this date..."
"RTN","IBCU3",21,0)
 I 'DATE!'$D(^DPT(DFN,0)) S Y="0^Unable to check for appointments on this date!" G APPTE
"RTN","IBCU3",22,0)
 N IBVAL,IBCBK,IBVTYP
"RTN","IBCU3",23,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DATE,IBVAL("EDT")=DATE+.9
"RTN","IBCU3",24,0)
 S IBCBK="I '$P(Y0,U,6) S IBVTYP=+$P(Y0,U,8) I $S(IBVTYP=2:1,IBVTYP=1:$$APPTCT^IBEFUNC(Y0),IBVTYP=3:$$DISCT^IBEFUNC(Y,Y0),1:0) S IBVTYP(IBVTYP)="""" S:$D(IBVTYP(1)) SDSTOP=1"
"RTN","IBCU3",25,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBCU3",26,0)
 S IBVTYP=$O(IBVTYP(0))
"RTN","IBCU3",27,0)
 S:IBVTYP Y=IBVTYP
"RTN","IBCU3",28,0)
 ;
"RTN","IBCU3",29,0)
APPTE I +$G(DISP),'Y W !,?10,*7,$P(Y,U,2)
"RTN","IBCU3",30,0)
 Q Y
"RTN","IBCU3",31,0)
 ;
"RTN","IBCU3",32,0)
BDT(DFN,DATE) ; returns primary bill defined for an event date, "" if none
"RTN","IBCU3",33,0)
 N X,Y S X="" I '$O(^DGCR(399,"C",+$G(DFN),0))!'$G(DATE) G BDTE
"RTN","IBCU3",34,0)
 S Y="",DATE=9999999-DATE F  S Y=$O(^DGCR(399,"APDT",+DFN,Y)) Q:'Y  D
"RTN","IBCU3",35,0)
 . I $O(^DGCR(399,"APDT",+DFN,Y,0))=DATE,'$P($G(^DGCR(399,Y,"S")),U,16) S X=$P($G(^DGCR(399,Y,0)),U,17) Q
"RTN","IBCU3",36,0)
BDTE Q X
"RTN","IBCU3",37,0)
 ;
"RTN","IBCU3",38,0)
BILLED(PTF) ;returns bill "IFN^^rate group" if PTF record is already associated with an uncancelled final bill
"RTN","IBCU3",39,0)
 ;returns "bill IFN ^ bill date (stm to) ^ bill rate group" if inpatients interim with no final bill, 0 otherwise
"RTN","IBCU3",40,0)
 N IFN,Y,X S Y=0 I '$D(^DGCR(399,"APTF",+$G(PTF))) G BILLEDQ
"RTN","IBCU3",41,0)
 S IFN=0 F  S IFN=$O(^DGCR(399,"APTF",PTF,IFN)) Q:'IFN  D  I +Y,'$P(Y,U,2) Q
"RTN","IBCU3",42,0)
 . S X=$G(^DGCR(399,IFN,0)) I $P(X,U,13)=7 Q  ; bill cancelled
"RTN","IBCU3",43,0)
 . S Y=IFN_"^^"_$P(X,U,7) I $P(X,U,6)=2!($P(X,U,6)=3) S Y=IFN_"^"_$P($G(^DGCR(399,IFN,"U")),U,2)_"^"_$P(X,U,7)
"RTN","IBCU3",44,0)
BILLEDQ Q Y
"RTN","IBCU3",45,0)
 ;
"RTN","IBCU3",46,0)
FTN(FT) ;returns name of the form type passed in, "" if not defined
"RTN","IBCU3",47,0)
 N X S X=$P($G(^IBE(353,+$G(FT),0)),U,1)
"RTN","IBCU3",48,0)
 Q X
"RTN","IBCU3",49,0)
 ;
"RTN","IBCU3",50,0)
FT(IFN,IBRESET) ;return the correct form type for a bill (trigger code in 399 to set .19)
"RTN","IBCU3",51,0)
 ; if IBRESET is not a positive value ('IBRESET), returns the bills current form type (if defined)
"RTN","IBCU3",52,0)
 ; if IBRESET is a positive value (+IBRESET), interpret form type according to following rules (for triggers):
"RTN","IBCU3",53,0)
 ;    first use ins co default (36,.14), then bill is inst (UB) or prof (1500) (399,.27),
"RTN","IBCU3",54,0)
 ;    then current (399,.19), then UB
"RTN","IBCU3",55,0)
 N X,Y,FTC,FTN,FTI,FTT,INS S X="",IFN=+$G(IFN),Y=$G(^DGCR(399,IFN,0))
"RTN","IBCU3",56,0)
 S FTC=$P(Y,U,19) I FTC=1 S FTC=3
"RTN","IBCU3",57,0)
 I '$G(IBRESET),+FTC S X=FTC G FTQ
"RTN","IBCU3",58,0)
 S FTT=$S($P(Y,U,27)=1:3,$P(Y,U,27)=2:2,1:"")
"RTN","IBCU3",59,0)
 S INS=+$G(^DGCR(399,IFN,"MP"))
"RTN","IBCU3",60,0)
 I 'INS,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IFN)) S INS=+$$CURR^IBCEF2(IFN)
"RTN","IBCU3",61,0)
 S FTI=$P($G(^DIC(36,+INS,0)),U,14)
"RTN","IBCU3",62,0)
 S X=$S(+FTI:FTI,+FTT:FTT,+FTC:FTC,1:3)
"RTN","IBCU3",63,0)
FTQ Q X
"RTN","IBCU3",64,0)
 ;
"RTN","IBCU3",65,0)
FNT(FTN) ;returns the ifn of the form type name passed in, must be exact match, 0 if none found
"RTN","IBCU3",66,0)
 N X,Y S X=0 I $G(FTN)'="" S X=$O(^IBE(353,"B",FTN,0))
"RTN","IBCU3",67,0)
 Q X
"RTN","IBCU3",68,0)
 ;
"RTN","IBCU3",69,0)
BILLDEV(IFN,PRT) ;returns the default device for a bill's form type, if PRT is passed as true then returns the AR follow up device, otherwise the billing device
"RTN","IBCU3",70,0)
 N X,Y S X=0 I $D(^DGCR(399,+$G(IFN),0)) S PRT=$S(+$G(PRT):3,1:2),Y=$$FT(IFN),X=$P($G(^IBE(353,+Y,0)),U,PRT)
"RTN","IBCU3",71,0)
 Q X
"RTN","IBCU3",72,0)
 ;
"RTN","IBCU3",73,0)
RXDUP(RX,DATE,IFN,DISP,DFN,RTG) ;returns bill ifn if rx # exists on another bill
"RTN","IBCU3",74,0)
 ;input:  rx # - required, rx # to check for
"RTN","IBCU3",75,0)
 ;        date - required, date of refill
"RTN","IBCU3",76,0)
 ;ifn, dfn, rtg are optional - if not passed then not used to specify rx
"RTN","IBCU3",77,0)
 ;(if ifn not passed then returns true if on any bill same or dfn and rtgetc.)
"RTN","IBCU3",78,0)
 ;if ifn passed the dfn and rtg do not need to be
"RTN","IBCU3",79,0)
 N X,LN,RIFN,BIFN,RLN,BLN S (RIFN,X)=0,DATE=$G(DATE),RX=$G(RX),IFN=$G(IFN) I RX=""!('DATE) G RXDUPE
"RTN","IBCU3",80,0)
 S LN=$G(^DGCR(399,+IFN,0)),DFN=$S(+$G(DFN):DFN,1:+$P(LN,U,2)),RTG=$S(+$G(RTG):RTG,1:+$P(LN,U,7))
"RTN","IBCU3",81,0)
 F  S RIFN=$O(^IBA(362.4,"B",RX,RIFN)) Q:'RIFN  S RLN=$G(^IBA(362.4,+RIFN,0)) I +DATE=+$P(RLN,U,3) D  Q:+X
"RTN","IBCU3",82,0)
 . S BIFN=+$P(RLN,U,2),BLN=$G(^DGCR(399,BIFN,0)) Q:(BLN="")!(BIFN=+$G(IFN))
"RTN","IBCU3",83,0)
 . I $P(BLN,U,13)=7 Q  ; bill cancelled
"RTN","IBCU3",84,0)
 . I +DFN,$P(BLN,U,2)'=DFN Q  ; different patient
"RTN","IBCU3",85,0)
 . I +RTG,+RTG'=$P(BLN,U,7) Q  ; different rate group
"RTN","IBCU3",86,0)
 . S X=BIFN_"^A "_$P($G(^DGCR(399.3,+$P(BLN,U,7),0)),U,1)_" bill ("_$P(BLN,U,1)_") exists for Rx # "_RX_" and refill date "_$$DAT1^IBOUTL(DATE)_"."
"RTN","IBCU3",87,0)
RXDUPE I +$G(DISP),+X W !,?10,$P(X,U,2)
"RTN","IBCU3",88,0)
 Q X
"RTN","IBCU3",89,0)
 ;
"RTN","IBCU3",90,0)
BCOB(IBIFN,IBCOB) ; returns an array of all bills related COB to the bill passed in
"RTN","IBCU3",91,0)
 ; includes prior bills defined on this bill then checks the Primary, Secondary and Tertiary Bills and adds
"RTN","IBCU3",92,0)
 ; all the prior bills defined on them
"RTN","IBCU3",93,0)
 ; ARR(BILL SEQUENCE (1,2,3), INSURANCE CO, BILL #)=""
"RTN","IBCU3",94,0)
 ;
"RTN","IBCU3",95,0)
 N IBM1,IBI,IBIFN1,IBM,IBM11,IBSEQ,IBSEQN,IBJ K IBCOB
"RTN","IBCU3",96,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCU3",97,0)
 F IBI=IBIFN,+$P(IBM1,U,5),+$P(IBM1,U,6),+$P(IBM1,U,7) I +IBI S IBIFN1=+IBI D
"RTN","IBCU3",98,0)
 . ;
"RTN","IBCU3",99,0)
 . S IBM=$G(^DGCR(399,IBIFN1,"M")),IBM11=$G(^DGCR(399,IBIFN1,"M1")) I IBIFN=IBIFN1,'$P(IBM,U,2),'$P(IBM,U,3) Q
"RTN","IBCU3",100,0)
 . S IBSEQ=$P($G(^DGCR(399,IBIFN1,0)),U,21),IBSEQN=$S(IBSEQ="P":1,IBSEQ="S":2,IBSEQ="T":3,1:"") Q:'IBSEQN
"RTN","IBCU3",101,0)
 . ;
"RTN","IBCU3",102,0)
 . F IBJ=1:1:3 I +$P(IBM,U,IBJ) S IBCOB(IBJ,+$P(IBM,U,IBJ),+$P(IBM11,U,(IBJ+4)))=""
"RTN","IBCU3",103,0)
 . I +$P(IBM,U,IBSEQN) S IBCOB(IBSEQN,$P(IBM,U,IBSEQN),+IBIFN1)=""
"RTN","IBCU3",104,0)
 ;
"RTN","IBCU3",105,0)
 S IBI=0 F  S IBI=$O(IBCOB(IBI)) Q:'IBI  S IBJ=0 F  S IBJ=$O(IBCOB(IBI,IBJ)) Q:'IBJ  I +$O(IBCOB(IBI,IBJ,0)) K IBCOB(IBI,IBJ,0)
"RTN","IBCU3",106,0)
 Q
"RTN","IBCU3",107,0)
 ;
"RTN","IBCU3",108,0)
BINS(IBIFN) ; return list of billable insurance carriers on a bill (COB)
"RTN","IBCU3",109,0)
 ; output:  sequence:carrier:policy ^ sequence:carrier:policy ^ sequence:carrier:policy
"RTN","IBCU3",110,0)
 N IBM0,IBI,IBS,IBC,IBP,IBX S IBI=0,IBX="",IBM0=$G(^DGCR(399,+$G(IBIFN),"M"))
"RTN","IBCU3",111,0)
 F IBS="P","S","T" S IBI=IBI+1,IBC=+$P(IBM0,U,IBI) I +IBC D
"RTN","IBCU3",112,0)
 . S IBP=+$P(IBM0,U,(11+IBI)) I $P($G(^DIC(36,+IBC,0)),U,2)'="N" S IBX=IBX_IBS_":"_IBC_":"_IBP_U
"RTN","IBCU3",113,0)
 Q IBX
"RTN","IBCU3",114,0)
 ;
"RTN","IBCU3",115,0)
BOTHER(IBIFN,IBDT) ; return Bedsection of Type of Care if date is Other Type of care, based on "OT" multiple
"RTN","IBCU3",116,0)
 ; Other care is not inpatient or outpatient, SNF and Sub-Acute became distinct with RC v2.0
"RTN","IBCU3",117,0)
 ; as with all other bedsection movements, the last date is not included since that is the date they left
"RTN","IBCU3",118,0)
 N IBX,IBY,IBFND S IBFND=0,IBDT=$G(IBDT)\1
"RTN","IBCU3",119,0)
 I +$G(IBIFN),+IBDT S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"OT",IBX)) Q:'IBX  D
"RTN","IBCU3",120,0)
 . S IBY=$G(^DGCR(399,IBIFN,"OT",IBX,0)) Q:'IBY
"RTN","IBCU3",121,0)
 . I IBDT'<$P(IBY,U,2),IBDT<$P(IBY,U,3) S IBFND=+IBY
"RTN","IBCU3",122,0)
 Q IBFND
"RTN","IBCU7")
0^1^B54846939^B54906275
"RTN","IBCU7",1,0)
IBCU7 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ;29-OCT-91
"RTN","IBCU7",2,0)
 ;;2.0;INTEGRATED BILLING;**62,52,106,125,51,137,210,245,228,260,348**;21-MAR-94;Build 5
"RTN","IBCU7",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU7",4,0)
 ;
"RTN","IBCU7",5,0)
 ;MAP TO DGCRU7
"RTN","IBCU7",6,0)
 ;
"RTN","IBCU7",7,0)
CHKX ;  -interception of input x from Additional Procedure input
"RTN","IBCU7",8,0)
 G:X=" " CHKXQ
"RTN","IBCU7",9,0)
 I $$INPAT^IBCEF(DA(1)),'$P($G(^IBE(350.9,1,1)),"^",15),X'?1A1N D  G CHKXQ
"RTN","IBCU7",10,0)
 . K X
"RTN","IBCU7",11,0)
 . D EN^DDIOL("Site param does not allow entry of non-PTF procedures") ;Fileman error here will be: The previous error occurred when performing an action specified in a Pre-lookup transform (7.5 node).
"RTN","IBCU7",12,0)
 G:'$D(^UTILITY($J,"IB")) CHKXQ
"RTN","IBCU7",13,0)
 S M=($A($E(X,1))-64),S=+$E(X,2) Q:'$G(^UTILITY($J,"IB",M,S))  S X="`"_+^(S)
"RTN","IBCU7",14,0)
 I $D(DGPROCDT),DGPROCDT'=$P($G(^UTILITY($J,"IB",M,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) W !!,"Procedure Date: " S Y=DGPROCDT X ^DD("DD") W Y,!
"RTN","IBCU7",15,0)
CHKXQ Q
"RTN","IBCU7",16,0)
 ;
"RTN","IBCU7",17,0)
CODMUL ;Date oriented entry of procedure 
"RTN","IBCU7",18,0)
DELASK I $D(IBZ20),IBZ20,IBZ20'=$P(^DGCR(399,IBIFN,0),U,9) S %=2 W !,"SINCE THE PROCEDURE CODING METHOD HAS BEEN CHANGED, DO YOU WANT TO DELETE ALL",!,"PROCEDURE CODES IN THIS BILL"
"RTN","IBCU7",19,0)
 I  D YN^DICN Q:%=-1  D:%=1 DELADD I %Y?1."?" W !!,"If you answer 'Yes', all procedure codes will be DELETED from this bill.",! G DELASK
"RTN","IBCU7",20,0)
 K %,%Y,DA,IBZ20,DIK ;W !,"Procedure Entry:"
"RTN","IBCU7",21,0)
 ;
"RTN","IBCU7",22,0)
CODDT I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",23,0)
 I $P($G(^DGCR(399,IBIFN,0)),"^",5)<3 S IBZTYPE=1 I $P($G(^UTILITY($J,"IB",1,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) D ASKCOD
"RTN","IBCU7",24,0)
 S X=$$PRCDIV^IBCU71(IBIFN) I +X W !!,$P(X,U,2),!
"RTN","IBCU7",25,0)
 N Z,Z0 S Z=$G(^DGCR(399,IBIFN,"U")),Z0=$$FMTE^XLFDT($P(Z,U),"2D")_"-"_$$FMTE^XLFDT($P(Z,U,2),"2D")
"RTN","IBCU7",26,0)
 W !,"Select PROCEDURE DATE"_$S($TR(Z0,"-")'="":" ("_Z0_")",1:"")_": " R X:DTIME G:'$T!("^"[X) CODQ D:X["?" CODHLP
"RTN","IBCU7",27,0)
 S IBEX=0 D  ; Get procedure date
"RTN","IBCU7",28,0)
 . I X=" ",$D(DGPROCDT),DGPROCDT?7N S Y=DGPROCDT D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",29,0)
 . I X=" ",+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4) S (DGPROCDT,Y)=$O(^DGCR(399,IBIFN,"OP",0)) D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",30,0)
 . S %DT="EXP",%DT(0)=-DT D ^%DT K %DT I Y<1 S IBEX=1 Q
"RTN","IBCU7",31,0)
 . I '$$OPV2^IBCU41(Y,IBIFN,1) S IBEX=1 Q
"RTN","IBCU7",32,0)
 . S:'$G(IBZTYPE) X=$$OPV^IBCU41(Y,IBIFN) S DGPROCDT=Y
"RTN","IBCU7",33,0)
 I 'IBEX D ASKCOD,ADDCPT^IBCU71:$D(DGCPT)
"RTN","IBCU7",34,0)
 K IBEX
"RTN","IBCU7",35,0)
 G CODDT
"RTN","IBCU7",36,0)
 ;
"RTN","IBCU7",37,0)
ASKCOD N Z,Z0,DA,IBACT,IBQUIT
"RTN","IBCU7",38,0)
 K DGCPT
"RTN","IBCU7",39,0)
 S DGCPT=0,DGCPTUP=$P($G(^IBE(350.9,1,1)),"^",19),DGADDVST=0,IBFT=$P($G(^DGCR(399,IBIFN,0)),"^",19)
"RTN","IBCU7",40,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S ^DGCR(399,IBIFN,"CP",0)=U_$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCU7",41,0)
 ;
"RTN","IBCU7",42,0)
 F  S IBQUIT=0 D  Q:IBQUIT
"RTN","IBCU7",43,0)
 . S DIC("A")="   Select PROCEDURE: "
"RTN","IBCU7",44,0)
 . S DIC="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",45,0)
 . S DIC(0)="AEQMNL"
"RTN","IBCU7",46,0)
 . S DIC("S")="I '$D(DIV(""S""))&($P(^(0),U,2)=DGPROCDT)"
"RTN","IBCU7",47,0)
 . S DIC("DR")="1///^S X=DGPROCDT"
"RTN","IBCU7",48,0)
 . S DA(1)=IBIFN,DLAYGO=399
"RTN","IBCU7",49,0)
 . W ! D ^DIC I Y<1 S IBQUIT=1 Q
"RTN","IBCU7",50,0)
 . ; If we just added inactive code - it must be deleted.
"RTN","IBCU7",51,0)
 . S IBACT=0 ; Active flag
"RTN","IBCU7",52,0)
 . I Y["ICD0" S IBACT=$$ICD0ACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",53,0)
 . I Y["ICPT" S IBACT=$$CPTACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",54,0)
 . S DGCPTNEW=$P(Y,"^",3) ;Was the procedure just added?
"RTN","IBCU7",55,0)
 . I DGCPTNEW,'IBACT D DELPROC Q
"RTN","IBCU7",56,0)
 . I 'IBACT W !,*7,"Warning:  Procedure code is inactive on this date",!
"RTN","IBCU7",57,0)
 . I DGCPTNEW,$D(^UTILITY($J,"IB")),$$INPAT^IBCEF(IBIFN),Y["ICPT(" D DATA^IBCU74(Y)
"RTN","IBCU7",58,0)
 . S DGADDVST=$S(DGCPTNEW:1,$D(DGADDVST):DGADDVST,1:0)
"RTN","IBCU7",59,0)
 . N IBPRV,IBPRVO,IBPRVN
"RTN","IBCU7",60,0)
 . S IBPRVO=$$MAINPRV^IBCEU(IBIFN),IBPRV=$P(IBPRVO,U,3),IBPRVN=(IBPRVO["IBA(355.93,"),IBPRV=$S(IBPRV="":"",'IBPRVN:$P(IBPRVO,U),1:"")
"RTN","IBCU7",61,0)
 . I IBPRV="",'IBPRVN D
"RTN","IBCU7",62,0)
 .. S IBPRV=0 F  S IBPRV=$O(^DGCR(399,IBIFN,"CP",IBPRV)) S:'IBPRV IBPRV="" Q:'IBPRV  S Z=$P($G(^(IBPRV,0)),U,18) I Z S IBPRV=$P($G(^VA(200,Z,0)),U) Q
"RTN","IBCU7",63,0)
 . S DR="" I Y["ICPT" S DR="16"_$S(IBPRVN:";18///@",1:";18//"_IBPRV)_";6;5//"_$$DEFDIV(IBIFN)_";"
"RTN","IBCU7",64,0)
 . S DR=".01;"_DR_$S(IBFT=2:"8;9;17//NO;",1:"")_3,DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($E($G(Y))=U)
"RTN","IBCU7",65,0)
 . ;
"RTN","IBCU7",66,0)
 . S DR=$$SPCUNIT(IBIFN,IBPROCP) I DR'="" D ^DIE ; miles/minutes/hours
"RTN","IBCU7",67,0)
 . ;
"RTN","IBCU7",68,0)
 . I IBFT=2 D
"RTN","IBCU7",69,0)
 .. D DX^IBCU72(IBIFN,IBPROCP)
"RTN","IBCU7",70,0)
 .. S X=$$ADDTNL(IBIFN,.DA)
"RTN","IBCU7",71,0)
 . Q:$$INPAT^IBCEF(IBIFN)  ;only outpatient bills
"RTN","IBCU7",72,0)
 . ;add procedures to array for download to PCE: dgcpt(assoc clinic,cpt,'provider^first dx^modifiers',cnt)=""
"RTN","IBCU7",73,0)
 . S DGPROC=$G(^DGCR(399,IBIFN,"CP",+DA,0))
"RTN","IBCU7",74,0)
 . S X=$P(DGPROC,U,18)_U_+$G(^IBA(362.3,+$P(DGPROC,U,11),0))_U_$P(DGPROC,U,15)
"RTN","IBCU7",75,0)
 . I 'DGCPTNEW,$P(DGPROC,"^",7)="" S DGCPTNEW=2
"RTN","IBCU7",76,0)
 . I DGCPTUP,DGCPTNEW S DGCPT=DGCPT+1 I $P(DGPROC,"^",7) S DGCPT($P(DGPROC,"^",7),+DGPROC,X,DGCPT)=""
"RTN","IBCU7",77,0)
 . ; add visit date to bill
"RTN","IBCU7",78,0)
 . I DGADDVST S (X,DINUM)=DGPROCDT D VFILE1^IBCOPV1 K DINUM,X,DGNOADD,DGADDVST
"RTN","IBCU7",79,0)
 ; Delete modifers with only a sequence #, no code
"RTN","IBCU7",80,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^DGCR(399,IBIFN,"CP",Z,"MOD",Z0)) Q:'Z0  I $P($G(^(Z0,0)),U,2)="" S DA(2)=IBIFN,DA(1)=Z,DA=Z0,DIK="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD""," D ^DIK
"RTN","IBCU7",81,0)
 Q
"RTN","IBCU7",82,0)
CODQ K %DT,DGPROC,DIC,DIE,DR,DGPROCDT,IBPROCP,DLAYGO
"RTN","IBCU7",83,0)
 K IBFT,DGNOADD,DGADDVST,DGCPT,DGCPTUP,IBZTYPE,DGCPTNEW
"RTN","IBCU7",84,0)
 Q
"RTN","IBCU7",85,0)
 ;
"RTN","IBCU7",86,0)
DELPROC ; Remove the selected procedure, because of inactive status (cancel selection)
"RTN","IBCU7",87,0)
 W !!,*7,"The Procedure code is inactive on ",$$DAT1^IBOUTL(DGPROCDT),"."
"RTN","IBCU7",88,0)
 W !,"Please select another Procedure."
"RTN","IBCU7",89,0)
 S DA(1)=IBIFN,DA=+Y,DIK="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",90,0)
 D ^DIK
"RTN","IBCU7",91,0)
 Q
"RTN","IBCU7",92,0)
 ;
"RTN","IBCU7",93,0)
DELADD N Z,Z0,DA,DIK,X,Y
"RTN","IBCU7",94,0)
 S DA(1)=IBIFN
"RTN","IBCU7",95,0)
 ;Delete references to proc on rev codes
"RTN","IBCU7",96,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="",$P(Z0,U,15)!$S($P(Z0,U,10)=3:$P(Z0,U,11),1:0) S DIE="^DGCR(399,"_DA(1)_",""RC"",",DA=Z,DR=".11///@;.15///@"_$S($P(Z0,U,8):"",1:";.08////1") D ^DIE
"RTN","IBCU7",97,0)
 S DIK="^DGCR(399,"_DA(1)_",""CP""," F DA=0:0 S DA=$O(^DGCR(399,DA(1),"CP",DA)) Q:'DA  D ^DIK
"RTN","IBCU7",98,0)
 S DGRVRCAL=1
"RTN","IBCU7",99,0)
 Q
"RTN","IBCU7",100,0)
 ;
"RTN","IBCU7",101,0)
DTMES ;Message if procedure date not in date range
"RTN","IBCU7",102,0)
 Q:'$D(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"U"))  S DGNODUU=^("U")
"RTN","IBCU7",103,0)
 G:X'<$P(DGNODUU,"^")&(X'>$P(DGNODUU,"^",2)) DTMESQ
"RTN","IBCU7",104,0)
 W *7,!!?3,"Date must be within STATEMENT COVERS FROM and STATEMENT COVERS TO period."
"RTN","IBCU7",105,0)
 S Y=$P(DGNODUU,"^") X ^DD("DD")
"RTN","IBCU7",106,0)
 W !?3,"Enter a date between ",Y," and " S Y=$P(DGNODUU,"^",2) X ^DD("DD") W Y,!
"RTN","IBCU7",107,0)
 K X,Y
"RTN","IBCU7",108,0)
DTMESQ K DGNODUU Q
"RTN","IBCU7",109,0)
 ;
"RTN","IBCU7",110,0)
CODHLP ;Display Additional Procedure codes
"RTN","IBCU7",111,0)
 N I,J,Y,IBMOD
"RTN","IBCU7",112,0)
 I '$O(^DGCR(399,IBIFN,"CP",0)) W !!?5,"No Codes Entered!",! Q
"RTN","IBCU7",113,0)
 F I=0:0 S I=$O(^DGCR(399,IBIFN,"CP",I)) Q:'I  S Y=$G(^(I,0)) S Z=$$PRCNM^IBCSCH1($P(Y,"^",1),$P(Y,"^",2)) W !?5,$E($P(Z,"^",2),1,28),?35,"- ",$P(Z,"^") D
"RTN","IBCU7",114,0)
 . N IBY
"RTN","IBCU7",115,0)
 . S IBY=$P(Y,U,2)
"RTN","IBCU7",116,0)
 . S IBMOD=$$GETMOD^IBEFUNC(IBIFN,I,1)
"RTN","IBCU7",117,0)
 . I IBMOD'="" S IBMOD="/"_IBMOD W IBMOD
"RTN","IBCU7",118,0)
 . W ?60,"Date: " S Y=IBY D DT^DIQ
"RTN","IBCU7",119,0)
 ;
"RTN","IBCU7",120,0)
 K Z Q
"RTN","IBCU7",121,0)
 ;
"RTN","IBCU7",122,0)
DICV I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",123,0)
 Q
"RTN","IBCU7",124,0)
 ;
"RTN","IBCU7",125,0)
DEFDIV(IBIFN) ; Find default division for bill IBIFN
"RTN","IBCU7",126,0)
 Q $P($G(^DG(40.8,+$P($G(^DGCR(399,IBIFN,0)),U,22),0)),U)
"RTN","IBCU7",127,0)
 ;
"RTN","IBCU7",128,0)
ADDTNL(IBIFN,DA) ;
"RTN","IBCU7",129,0)
 N DR,IBOK,X,Y,DIR
"RTN","IBCU7",130,0)
 S IBOK=1
"RTN","IBCU7",131,0)
 S DR="19;50.09;50.08" D ^DIE
"RTN","IBCU7",132,0)
 I $D(Y) S IBOK=0 G ADDTNLQ
"RTN","IBCU7",133,0)
 S DIR("B")="NO",DIR("A")="EDIT CMS-1500 SPECIAL PROGRAM FIELDS and BOX 19?: ",DIR("A",1)=" ",DIR(0)="YA"
"RTN","IBCU7",134,0)
 S DIR("?",1)="Respond YES only if you need to add/edit data for chiropractic visits,"
"RTN","IBCU7",135,0)
 S DIR("?")="EPSDT care, or if billing for HOSPICE and attending is not a hospice employee."
"RTN","IBCU7",136,0)
 D ^DIR K DIR
"RTN","IBCU7",137,0)
 I Y'=1 S IBOK=0 G ADDTNLQ
"RTN","IBCU7",138,0)
 S DR="W !,""  <<EPSDT>>"";50.07;W !!,""  <<HOSPICE>>"";50.03;W !!,""  <<CHIROPRACTIC>>"";50.04;50.02;50.05;50.06"
"RTN","IBCU7",139,0)
 D ^DIE
"RTN","IBCU7",140,0)
 W !
"RTN","IBCU7",141,0)
ADDTNLQ Q IBOK
"RTN","IBCU7",142,0)
 ;
"RTN","IBCU7",143,0)
XTRA1(Y) ;
"RTN","IBCU7",144,0)
 K Y
"RTN","IBCU7",145,0)
 Q
"RTN","IBCU7",146,0)
 ;
"RTN","IBCU7",147,0)
SPCUNIT(IBIFN,DA) ; return fields for special units if applicable, in DR form
"RTN","IBCU7",148,0)
 N IB0,IBCPT,IBDR,IBCT,IBFT,DFN S IBDR=""
"RTN","IBCU7",149,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBCT=$P(IB0,U,27),IBFT=$P(IB0,U,19),DFN=$P(IB0,U,2)
"RTN","IBCU7",150,0)
 S IBCPT=$G(^DGCR(399,+$G(IBIFN),"CP",+$G(DA),0)) I IBCPT'["ICPT" G SPCUNTQ
"RTN","IBCU7",151,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,5,IBCT) S IBDR="15;" D SROMIN^IBCU74(IBIFN,DA) G SPCUNTQ ; minutes
"RTN","IBCU7",152,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,4,IBCT) S IBDR="21;" G SPCUNTQ ; miles
"RTN","IBCU7",153,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,6,IBCT) S IBDR="22//"_$$OBSHOUR^IBCU74(DFN,$P(IBCPT,U,2))_";" G SPCUNTQ ; hours
"RTN","IBCU7",154,0)
 I +IBFT=2,$P($G(^IBE(353.2,+$P(IBCPT,U,10),0)),U,2)="ANESTHESIA" S IBDR="15;" ; minutes
"RTN","IBCU7",155,0)
SPCUNTQ Q IBDR
"RTN","IBJPS")
0^15^B5289687^B5289854
"RTN","IBJPS",1,0)
IBJPS ;ALB/MAF,ARH - IBSP IB SITE PARAMETER SCREEN ;22-DEC-1995
"RTN","IBJPS",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,70,115,143,51,137,161,155,320,348**;21-MAR-94;Build 5
"RTN","IBJPS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJPS",4,0)
 ;
"RTN","IBJPS",5,0)
EN ; -- main entry point for IBJP IB SITE PARAMETERS, display IB site parameters
"RTN","IBJPS",6,0)
 D EN^VALM("IBJP IB SITE PARAMETERS")
"RTN","IBJPS",7,0)
 Q
"RTN","IBJPS",8,0)
 ;
"RTN","IBJPS",9,0)
HDR ; -- header code
"RTN","IBJPS",10,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPS",11,0)
 Q
"RTN","IBJPS",12,0)
 ;
"RTN","IBJPS",13,0)
INIT ; -- init variables and list array
"RTN","IBJPS",14,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",15,0)
 D BLD^IBJPS1
"RTN","IBJPS",16,0)
 Q
"RTN","IBJPS",17,0)
 ;
"RTN","IBJPS",18,0)
HELP ; -- help code
"RTN","IBJPS",19,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS",20,0)
 Q
"RTN","IBJPS",21,0)
 ;
"RTN","IBJPS",22,0)
EXIT ; -- exit code
"RTN","IBJPS",23,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",24,0)
 D CLEAR^VALM1
"RTN","IBJPS",25,0)
 Q
"RTN","IBJPS",26,0)
 ;
"RTN","IBJPS",27,0)
NXEDIT ; -- IBJP IB SITE PARAMETER EDIT ACTION (EP): Select data set to edit, do edit
"RTN","IBJPS",28,0)
 N VALMY,IBSELN,IBSET
"RTN","IBJPS",29,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBJPS",30,0)
 I $D(VALMY) S IBSELN=0 F  S IBSELN=$O(VALMY(IBSELN)) Q:'IBSELN  D
"RTN","IBJPS",31,0)
 . S IBSET=$P($G(^TMP("IBJPSAX",$J,IBSELN)),U,1) Q:'IBSET
"RTN","IBJPS",32,0)
 . D EDIT(IBSET)
"RTN","IBJPS",33,0)
 S VALMBCK="R"
"RTN","IBJPS",34,0)
 Q
"RTN","IBJPS",35,0)
 ;
"RTN","IBJPS",36,0)
EDIT(IBSET) ; edit IB Site Parameters
"RTN","IBJPS",37,0)
 D FULL^VALM1
"RTN","IBJPS",38,0)
 I IBSET'="" S DR=$P($T(@IBSET),";;",2,999)
"RTN","IBJPS",39,0)
 I DR'="" S DIE="^IBE(350.9,",DA=1 D ^DIE K DA,DR,DIE,DIC,X,Y
"RTN","IBJPS",40,0)
 D INIT^IBJPS S VALMBCK="R"
"RTN","IBJPS",41,0)
 Q
"RTN","IBJPS",42,0)
 ;
"RTN","IBJPS",43,0)
1 ;;.09;.13;.14
"RTN","IBJPS",44,0)
2 ;;1.2;.15;.11;.12;7.04
"RTN","IBJPS",45,0)
3 ;;1.09;1.07;2.07
"RTN","IBJPS",46,0)
4 ;;4.04;6.25;6.24
"RTN","IBJPS",47,0)
5 ;;.02;1.14;1.25;1.08
"RTN","IBJPS",48,0)
6 ;;1.23;1.16;1.22;1.19;1.15;1.17
"RTN","IBJPS",49,0)
7 ;;1.1;1.32;1.31;1.27
"RTN","IBJPS",50,0)
8 ;;1.29;1.3;1.18;1.28
"RTN","IBJPS",51,0)
9 ;;1.01;1.02;1.05;1.04
"RTN","IBJPS",52,0)
10 ;;2.12;2.1;2.02;2.03;2.04;2.05;2.06;2.01
"RTN","IBJPS",53,0)
11 ;;2.08;2.09
"RTN","IBJPS",54,0)
12 ;;9.01;9.02;9.03;9.11;9.12;9.13;9.14;9.15
"RTN","IBJPS",55,0)
13 ;;10.02;10.03;10.04;10.05;D INIT^IBATFILE
"RTN","IBJPS",56,0)
14 ;;2.11;8.01;8.09;8.03;8.06;8.04;8.07;8.02;8.12T;8.11T
"RTN","IBJPS",57,0)
15 ;;50.01;50.02;50.05;50.06;50.03;50.04;50.07
"RTN","IBJPS",58,0)
 ;
"RTN","IBJPS",59,0)
 ;
"RTN","IBJPS",60,0)
ADD(IBLN,LNG,ARR) ; output array of address in X, line length=LNG
"RTN","IBJPS",61,0)
 N IBCNT,IBI,IBY,IBX,IBZ K ARR S IBCNT=1
"RTN","IBJPS",62,0)
 F IBI=2:1:4 S IBY=$P(IBLN,U,IBI) I IBY'="" D  S ARR(IBCNT)=IBY
"RTN","IBJPS",63,0)
 . S IBX=$G(ARR(IBCNT)) I IBI=4 S IBY=$P($G(^DIC(5,+IBY,0)),U,2)_" "_$P(IBLN,U,5)
"RTN","IBJPS",64,0)
 . S IBZ=$S(IBX'="":IBX_", ",1:"")_IBY I $L(IBZ)'>LNG S IBY=IBZ Q
"RTN","IBJPS",65,0)
 . S IBCNT=IBCNT+1
"RTN","IBJPS",66,0)
 Q
"RTN","IBJPS2")
0^16^B48130321^B48143504
"RTN","IBJPS2",1,0)
IBJPS2 ;ALB/MAF,ARH - IBSP IB SITE PARAMETER BUILD (cont) ;22-DEC-1995
"RTN","IBJPS2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,115,143,51,137,161,155,320,348**;21-MAR-94;Build 5
"RTN","IBJPS2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJPS2",4,0)
 ;
"RTN","IBJPS2",5,0)
BLD2 ; - continue build screen array for IB parameters
"RTN","IBJPS2",6,0)
 ;
"RTN","IBJPS2",7,0)
 N Z,Z0
"RTN","IBJPS2",8,0)
 D RIGHT(1,1,1) ; - facility/med center  (new line for each)
"RTN","IBJPS2",9,0)
 S IBLN=$$SET("Medical Center",$$EXSET^IBJU1($P(IBPD0,U,2),350.9,.02),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",10,0)
 S IBLN=$$SET("MAS Service",$$EXSET^IBJU1($P(IBPD1,U,14),350.9,1.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",11,0)
 ;
"RTN","IBJPS2",12,0)
 D LEFT(2)
"RTN","IBJPS2",13,0)
 S IBLN=$$SET("Default Division",$$EXSET^IBJU1($P(IBPD1,U,25),350.9,1.25),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",14,0)
 S IBLN=$$SET("Billing Supervisor",$$EXSET^IBJU1($P(IBPD1,U,8),350.9,1.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",15,0)
 ;
"RTN","IBJPS2",16,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",17,0)
 S IBLN=$$SET("Initiator Authorize",$$YN(+$P(IBPD1,U,23)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",18,0)
 S IBLN=$$SET("Ask HINQ in MCCR",$$YN(+$P(IBPD1,U,16)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",19,0)
 S IBLN=$$SET("Multiple Form Types",$$YN(+$P(IBPD1,U,22)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",20,0)
 ;
"RTN","IBJPS2",21,0)
 D LEFT(2)
"RTN","IBJPS2",22,0)
 S IBLN=$$SET("Xfer Proc to Sched",$$YN(+$P(IBPD1,U,19)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",23,0)
 S IBLN=$$SET("Use Non-PTF Codes",$$YN(+$P(IBPD1,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",24,0)
 S IBLN=$$SET("Use OP CPT screen",$$YN(+$P(IBPD1,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",25,0)
 ;
"RTN","IBJPS2",26,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",27,0)
 S IBLN=$$SET("'001' for Total",$$YN(+$P(IBPD1,U,10)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",28,0)
 S IBLN=$$SET("CMS-1500 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,32),350.9,1.32),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",29,0)
 ;
"RTN","IBJPS2",30,0)
 D LEFT(2)
"RTN","IBJPS2",31,0)
 S IBLN=$$SET("UB-92 Address Col",$P(IBPD1,U,31),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",32,0)
 S IBLN=$$SET("CMS-1500 Addr Col",$P(IBPD1,U,27),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",33,0)
 ;
"RTN","IBJPS2",34,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",35,0)
 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD1,U,29),350.9,1.29),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",36,0)
 S IBLN=$$SET("Default RX CPT Cd",$$EXSET^IBJU1($P(IBPD1,U,30),350.9,1.30),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",37,0)
 ;
"RTN","IBJPS2",38,0)
 D LEFT(2)
"RTN","IBJPS2",39,0)
 S IBLN=$$SET("Default ASC Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,18),350.9,1.18),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",40,0)
 S IBLN=$$SET("Default RX Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,28),350.9,1.28),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",41,0)
 ;
"RTN","IBJPS2",42,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",43,0)
 S IBLN=$$SET("Bill Signer Name","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",44,0)
 S IBLN=$$SET("Bill Signer Title","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",45,0)
 ;
"RTN","IBJPS2",46,0)
 D LEFT(2)
"RTN","IBJPS2",47,0)
 S IBLN=$$SET("Federal Tax #",$P(IBPD1,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",48,0)
 ;
"RTN","IBJPS2",49,0)
 D RIGHT(3,"","")
"RTN","IBJPS2",50,0)
 S IBLN=$$SET("Remark on Each Bill",$P(IBPD1,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",51,0)
 ;
"RTN","IBJPS2",52,0)
 D RIGHT(3,1,1) ; - Remittance/Agent Cashier Address
"RTN","IBJPS2",53,0)
 S IBLN=$$SET("Billing Facility is Another Facility",$$EXPAND^IBTRE(350.9,2.12,+$P(IBPD2,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",54,0)
 S IBLN=$$SET("Billing Facility Name",$P(IBPD2,U,10),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",55,0)
 D ADD^IBJPS(IBPD2,IBSW(3),.IBX) D  K IBX
"RTN","IBJPS2",56,0)
 . S IBT="Remittance Address",IBX=0 F  S IBX=$O(IBX(IBX)) Q:'IBX  D
"RTN","IBJPS2",57,0)
 .. S IBLN=$$SET(IBT,IBX(IBX),IBLN,IBLR,IBSEL),IBT=""
"RTN","IBJPS2",58,0)
 S IBLN=$$SET("Phone",$P(IBPD2,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",59,0)
 ;
"RTN","IBJPS2",60,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",61,0)
 S IBLN=$$SET("Inpt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,8),350.9,2.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",62,0)
 S IBLN=$$SET("Opt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,9),350.9,2.09),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",63,0)
 ;
"RTN","IBJPS2",64,0)
 D RIGHT(5,1,1)
"RTN","IBJPS2",65,0)
 S IBLN=$$SET("Rx Billing Port",$P(IBPD9,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",66,0)
 S IBLN=$$SET("AWP Update Port",$P(IBPD9,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",67,0)
 S IBLN=$$SET("TCP/IP Address",$P(IBPD9,U,3),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",68,0)
 S IBLN=$$SET("Task UCI/VOL",$P(IBPD9,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",69,0)
 S IBLN=$$SET("AWP Charge Set",$$EXSET^IBJU1($P(IBPD9,U,12),350.9,9.12),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",70,0)
 S IBLN=$$SET("Prescriber ID",$P(IBPD9,U,13),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",71,0)
 S IBLN=$$SET("DEA vs Presc.ID",$$YN($P(IBPD9,U,14)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",72,0)
 S IBLN=$$SET("Calc comp code",$$YN($P(IBPD9,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",73,0)
 ;
"RTN","IBJPS2",74,0)
 D LEFT(6)
"RTN","IBJPS2",75,0)
 S IBLN=$$SET("Prim Billing Task",$P(IBPD9,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",76,0)
 S IBLN=$$SET("Sec Billing Task",$P(IBPD9,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",77,0)
 S IBLN=$$SET("Prim AWP Upd Task",$P(IBPD9,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",78,0)
 S IBLN=$$SET("Sec AWP Upd Task",$P(IBPD9,U,7),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",79,0)
 S IBLN=$$SET("Task Started",$$DAT1^IBOUTL($P(IBPD9,U,8),1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",80,0)
 S IBLN=$$SET("Task Last Ran",$$DAT1^IBOUTL($P(IBPD9,U,9),1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",81,0)
 S IBLN=$$SET("Shutdown Tasks?",$$YN($P(IBPD9,U,10)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",82,0)
 ;
"RTN","IBJPS2",83,0)
 ; transfer pricing
"RTN","IBJPS2",84,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",85,0)
 S IBLN=$$SET("Inpatient TP Active ",$$YN(+$P(IBPD10,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",86,0)
 S IBLN=$$SET("Outpatient TP Active",$$YN(+$P(IBPD10,U,3)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",87,0)
 S IBLN=$$SET("Pharmacy TP Active  ",$$YN(+$P(IBPD10,U,4)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",88,0)
 S IBLN=$$SET("Prosthetic TP Active",$$YN(+$P(IBPD10,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",89,0)
 ;
"RTN","IBJPS2",90,0)
 ; EDI/MRA parameters
"RTN","IBJPS2",91,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",92,0)
 N IBZ S IBZ=$P(IBPD8,U,3)
"RTN","IBJPS2",93,0)
 S IBLN=$$SET(" EDI/MRA Activated",$$EXSET^IBJU1(+$P(IBPD8,U,10),350.9,8.1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",94,0)
 S IBLN=$$SET(" EDI Contact Phone",$P(IBPD2,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",95,0)
 S IBLN=$$SET(" EDI 837 Live Transmit Queue",$P(IBPD8,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",96,0)
 S IBLN=$$SET(" EDI 837 Test Transmit Queue",$P(IBPD8,U,9),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",97,0)
 S IBLN=$$SET(" Auto-Txmt Bill Frequency",$S(IBZ:"Every"_$S(IBZ>1:" "_$P(IBPD8,U,3),1:""),1:"")_$S(IBZ:" Day"_$S(IBZ=1:"",1:"s"),1:"Never Run"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",98,0)
 S IBLN=$$SET(" Hours To Auto-Transmit",$P(IBPD8,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",99,0)
 S IBLN=$$SET(" Max # Bills Per Batch",$P(IBPD8,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",100,0)
 S IBLN=$$SET(" Only Allow 1 Ins Co/Claim Batch?",$$EXPAND^IBTRE(350.9,8.07,+$P(IBPD8,U,7)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",101,0)
 S IBLN=$$SET(" Last Auto-Txmt Run Date",$$DATE^IBJU1($P(IBPD8,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",102,0)
 S IBLN=$$SET(" Days To Wait To Purge Msgs",$P(IBPD8,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",103,0)
 S IBLN=$$SET(" Allow MRA Processing?",$$YN(+$P(IBPD8,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",104,0)
 S IBLN=$$SET(" Enable Automatic MRA Processing?",$$YN(+$P(IBPD8,U,11)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",105,0)
 ;
"RTN","IBJPS2",106,0)
 ; Ingenix ClaimsManager Information
"RTN","IBJPS2",107,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",108,0)
 S IBLN=$$SET("Are we using ClaimsManager?",$$YN(+$P(IBPD50,U,1)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",109,0)
 S IBLN=$$SET("Is ClaimsManager working OK?",$$YN(+$P(IBPD50,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",110,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Address",$P(IBPD50,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",111,0)
 S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",""))
"RTN","IBJPS2",112,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Ports",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",113,0)
 F  S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",IBCISOCK)) Q:IBCISOCK=""  D
"RTN","IBJPS2",114,0)
 . S IBLN=$$SET("",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",115,0)
 . Q
"RTN","IBJPS2",116,0)
 S IBLN=$$SET("General Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,3),350.9,50.03),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",117,0)
 S IBLN=$$SET("Communication Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,4),350.9,50.04),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",118,0)
 S IBCIMFLG=$$EXTERNAL^DILFD(350.9,50.07,"",$P(IBPD50,U,7))
"RTN","IBJPS2",119,0)
 I IBCIMFLG="" S IBCIMFLG="PRIORITY"
"RTN","IBJPS2",120,0)
 S IBLN=$$SET("MailMan Messages",IBCIMFLG,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",121,0)
 ;
"RTN","IBJPS2",122,0)
 Q
"RTN","IBJPS2",123,0)
 ;
"RTN","IBJPS2",124,0)
SET(TTL,DATA,LN,LR,SEL,HDR) ;
"RTN","IBJPS2",125,0)
 N IBY,IBX,IBC S IBC=": " I TTL="" S IBC="  "
"RTN","IBJPS2",126,0)
 S IBY=TTL_$J("",(IBTW(LR)-$L(TTL)-2))_$S('$G(HDR):IBC_DATA,1:""),IBX=$G(^TMP("IBJPS",$J,LN,0))
"RTN","IBJPS2",127,0)
 S IBX=$$SETSTR^VALM1(IBY,IBX,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPS2",128,0)
 D SET1(IBX,LN,SEL)
"RTN","IBJPS2",129,0)
 S LN=LN+1
"RTN","IBJPS2",130,0)
 Q LN
"RTN","IBJPS2",131,0)
 ;
"RTN","IBJPS2",132,0)
SET1(STR,LN,SEL,HI) ; set up TMP array with screen data
"RTN","IBJPS2",133,0)
 S ^TMP("IBJPS",$J,LN,0)=STR
"RTN","IBJPS2",134,0)
 S ^TMP("IBJPS",$J,"IDX",LN,SEL)=""
"RTN","IBJPS2",135,0)
 S ^TMP("IBJPSAX",$J,SEL)=SEL
"RTN","IBJPS2",136,0)
 I $G(HI)'="" D CNTRL^VALM10(LN,1,4,IOINHI,IOINORM)
"RTN","IBJPS2",137,0)
 ;I $G(RV) D CNTRL^VALM10(LN,6,19,IOUON,IOUOFF)
"RTN","IBJPS2",138,0)
 Q
"RTN","IBJPS2",139,0)
 ;
"RTN","IBJPS2",140,0)
YN(X) Q $S(+X:"YES",1:"NO")
"RTN","IBJPS2",141,0)
 ;
"RTN","IBJPS2",142,0)
RIGHT(LR,SEL,BL) ; - reset control variables for right side of screen
"RTN","IBJPS2",143,0)
 S IBLN=$S(IBLN>IBGRPE:IBLN,1:IBGRPE) I $G(BL) S IBLN=$$SET("","",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",144,0)
 S IBLR=$G(LR),IBGRPB=IBLN I +$G(SEL) S IBSEL=IBSEL+1 D SET1("["_IBSEL_"]",IBLN,IBSEL,1)
"RTN","IBJPS2",145,0)
 Q
"RTN","IBJPS2",146,0)
 ;
"RTN","IBJPS2",147,0)
LEFT(LR) ; - reset control variables for left side of screen
"RTN","IBJPS2",148,0)
 S IBLR=$G(LR),IBGRPE=IBLN,IBLN=IBGRPB
"RTN","IBJPS2",149,0)
 Q
"RTN","IBY348PO")
0^^B14220759^n/a
"RTN","IBY348PO",1,0)
IBY348PO ;ALB/ESG - Post-Installation for IB patch 348 ;13-Sep-2006
"RTN","IBY348PO",2,0)
 ;;2.0;INTEGRATED BILLING;**348**;21-MAR-94;Build 5
"RTN","IBY348PO",3,0)
 ;
"RTN","IBY348PO",4,0)
 ;
"RTN","IBY348PO",5,0)
EN ;
"RTN","IBY348PO",6,0)
 N XPDIDTOT S XPDIDTOT=6
"RTN","IBY348PO",7,0)
 D SSN          ; 1. remove force print SSN fields
"RTN","IBY348PO",8,0)
 D PARA         ; 2. remove the default form type field
"RTN","IBY348PO",9,0)
 D DIC          ; 3. update some file descriptions
"RTN","IBY348PO",10,0)
 D RIT          ; 4. Recompile Input Templates
"RTN","IBY348PO",11,0)
 D TAB          ; 5. reset the 1500 claim form address column
"RTN","IBY348PO",12,0)
 D LID          ; 6. set default value for CMS-1500 PRINT LEGACY ID site parameter
"RTN","IBY348PO",13,0)
EX ;
"RTN","IBY348PO",14,0)
 Q
"RTN","IBY348PO",15,0)
 ;
"RTN","IBY348PO",16,0)
SSN ; Remove 2 force print SSN fields from the insurance company file
"RTN","IBY348PO",17,0)
 NEW DIK,DA,IEN,DATA
"RTN","IBY348PO",18,0)
 D BMES^XPDUTL(" STEP 1 of "_XPDIDTOT)
"RTN","IBY348PO",19,0)
 D MES^XPDUTL("-------------")
"RTN","IBY348PO",20,0)
 D MES^XPDUTL("Removing force print SSN fields from file 36 ....")
"RTN","IBY348PO",21,0)
 ;
"RTN","IBY348PO",22,0)
 ; remove the fields from the data dictionary
"RTN","IBY348PO",23,0)
 S DIK="^DD(36,",DA=3.11,DA(1)=36 D ^DIK
"RTN","IBY348PO",24,0)
 S DIK="^DD(36,",DA=3.12,DA(1)=36 D ^DIK
"RTN","IBY348PO",25,0)
 ;
"RTN","IBY348PO",26,0)
 ; remove the data from the file
"RTN","IBY348PO",27,0)
 S IEN=0
"RTN","IBY348PO",28,0)
 F  S IEN=$O(^DIC(36,IEN)) Q:'IEN  D
"RTN","IBY348PO",29,0)
 . S DATA=$G(^DIC(36,IEN,3))                            ; 3 node
"RTN","IBY348PO",30,0)
 . I $P(DATA,U,11)'="" S $P(^DIC(36,IEN,3),U,11)=""
"RTN","IBY348PO",31,0)
 . I $P(DATA,U,12)'="" S $P(^DIC(36,IEN,3),U,12)=""
"RTN","IBY348PO",32,0)
 . Q
"RTN","IBY348PO",33,0)
 ;
"RTN","IBY348PO",34,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY348PO",35,0)
 D UPDATE^XPDID(1)
"RTN","IBY348PO",36,0)
 Q
"RTN","IBY348PO",37,0)
 ;
"RTN","IBY348PO",38,0)
PARA ; remove the default form type field from the IB site parameter file.
"RTN","IBY348PO",39,0)
 ; this field is obsolete because it was used to convert from the UB-82
"RTN","IBY348PO",40,0)
 ; to the UB-92.  It always had to be a UB form type and now there is
"RTN","IBY348PO",41,0)
 ; only 1 UB form type.
"RTN","IBY348PO",42,0)
 NEW DIK,DA
"RTN","IBY348PO",43,0)
 D BMES^XPDUTL(" STEP 2 of "_XPDIDTOT)
"RTN","IBY348PO",44,0)
 D MES^XPDUTL("-------------")
"RTN","IBY348PO",45,0)
 D MES^XPDUTL("Removing default form type field from file 350.9 ....")
"RTN","IBY348PO",46,0)
 ;
"RTN","IBY348PO",47,0)
 ; remove the field from the data dictionary
"RTN","IBY348PO",48,0)
 S DIK="^DD(350.9,",DA=1.26,DA(1)=350.9 D ^DIK
"RTN","IBY348PO",49,0)
 ;
"RTN","IBY348PO",50,0)
 ; remove the data from the file
"RTN","IBY348PO",51,0)
 S $P(^IBE(350.9,1,1),U,26)=""
"RTN","IBY348PO",52,0)
 ;
"RTN","IBY348PO",53,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY348PO",54,0)
 D UPDATE^XPDID(2)
"RTN","IBY348PO",55,0)
PARAX ;
"RTN","IBY348PO",56,0)
 Q
"RTN","IBY348PO",57,0)
 ;
"RTN","IBY348PO",58,0)
DIC ; update some file descriptions with CMS-1500
"RTN","IBY348PO",59,0)
 NEW HCFA,CMS,FILE,Z,TEXT,NEWTEXT
"RTN","IBY348PO",60,0)
 D BMES^XPDUTL(" STEP 3 of "_XPDIDTOT)
"RTN","IBY348PO",61,0)
 D MES^XPDUTL("-------------")
"RTN","IBY348PO",62,0)
 D MES^XPDUTL("Updating file descriptions for the CMS-1500 ....")
"RTN","IBY348PO",63,0)
 ;
"RTN","IBY348PO",64,0)
 S HCFA="HCFA 1500",CMS="CMS-1500"
"RTN","IBY348PO",65,0)
 F FILE=353.1,353.2 S Z=0 F  S Z=$O(^DIC(FILE,"%D",Z)) Q:'Z  D
"RTN","IBY348PO",66,0)
 . S TEXT=$G(^DIC(FILE,"%D",Z,0)) Q:TEXT'[HCFA
"RTN","IBY348PO",67,0)
 . S NEWTEXT=$P(TEXT,HCFA,1)_CMS_$P(TEXT,HCFA,2)
"RTN","IBY348PO",68,0)
 . S ^DIC(FILE,"%D",Z,0)=NEWTEXT
"RTN","IBY348PO",69,0)
 . Q
"RTN","IBY348PO",70,0)
 ;
"RTN","IBY348PO",71,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY348PO",72,0)
 D UPDATE^XPDID(3)
"RTN","IBY348PO",73,0)
DICX ;
"RTN","IBY348PO",74,0)
 Q
"RTN","IBY348PO",75,0)
 ;
"RTN","IBY348PO",76,0)
RIT ; Recompile input templates for billing screens
"RTN","IBY348PO",77,0)
 NEW X,Y,DMAX
"RTN","IBY348PO",78,0)
 D BMES^XPDUTL(" STEP 4 of "_XPDIDTOT)
"RTN","IBY348PO",79,0)
 D MES^XPDUTL("-------------")
"RTN","IBY348PO",80,0)
 D MES^XPDUTL("Recompiling Input Templates for Billing Screens 3, 6 & 7....")
"RTN","IBY348PO",81,0)
 S X="IBXSC3",Y=$$FIND1^DIC(.402,,"X","IB SCREEN3","B"),DMAX=8000
"RTN","IBY348PO",82,0)
 I Y D EN^DIEZ
"RTN","IBY348PO",83,0)
 S X="IBXSC6",Y=$$FIND1^DIC(.402,,"X","IB SCREEN6","B"),DMAX=8000
"RTN","IBY348PO",84,0)
 I Y D EN^DIEZ
"RTN","IBY348PO",85,0)
 S X="IBXSC7",Y=$$FIND1^DIC(.402,,"X","IB SCREEN7","B"),DMAX=8000
"RTN","IBY348PO",86,0)
 I Y D EN^DIEZ
"RTN","IBY348PO",87,0)
RITX ;
"RTN","IBY348PO",88,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY348PO",89,0)
 D UPDATE^XPDID(4)
"RTN","IBY348PO",90,0)
 Q
"RTN","IBY348PO",91,0)
 ;
"RTN","IBY348PO",92,0)
TAB ; reset the CMS-1500 ADDRESS COLUMN field in the IB site parameter file.
"RTN","IBY348PO",93,0)
 ; The new 1500 form has pre-printed information covering the first
"RTN","IBY348PO",94,0)
 ; 26 columns over lines 1-6 where the payer name and address goes.
"RTN","IBY348PO",95,0)
 ; If the column number in the parameter file is less than 28, change
"RTN","IBY348PO",96,0)
 ; it to be 28.
"RTN","IBY348PO",97,0)
 D BMES^XPDUTL(" STEP 5 of "_XPDIDTOT)
"RTN","IBY348PO",98,0)
 D MES^XPDUTL("-------------")
"RTN","IBY348PO",99,0)
 D MES^XPDUTL("Validating the CMS-1500 Address Column Value....")
"RTN","IBY348PO",100,0)
 ;
"RTN","IBY348PO",101,0)
 N COL,DIE,DA,DR
"RTN","IBY348PO",102,0)
 S COL=$P($G(^IBE(350.9,1,1)),U,27)
"RTN","IBY348PO",103,0)
 I COL<28 S DIE=350.9,DA=1,DR="1.27///28" D ^DIE
"RTN","IBY348PO",104,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY348PO",105,0)
 D UPDATE^XPDID(5)
"RTN","IBY348PO",106,0)
TABX ;
"RTN","IBY348PO",107,0)
 Q
"RTN","IBY348PO",108,0)
LID ; set default value for CMS-1500 PRINT LEGACY ID site parameter
"RTN","IBY348PO",109,0)
 ; This site parameter should default to "YES" (always print legacy id)
"RTN","IBY348PO",110,0)
 D BMES^XPDUTL(" STEP 6 of "_XPDIDTOT)
"RTN","IBY348PO",111,0)
 D MES^XPDUTL("-------------")
"RTN","IBY348PO",112,0)
 D MES^XPDUTL("Setting default value for CMS-1500 PRINT LEGACY ID site parameter....")
"RTN","IBY348PO",113,0)
 I $P($G(^IBE(350.9,1,1)),U,32)="" S DIE=350.9,DA=1,DR="1.32///YES" D ^DIE
"RTN","IBY348PO",114,0)
LIDX ;
"RTN","IBY348PO",115,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY348PO",116,0)
 D UPDATE^XPDID(6)
"RTN","IBY348PO",117,0)
 Q
"RTN","IBY348PO",118,0)
 ;
"RTN","IBY348PR")
0^^B28300951^n/a
"RTN","IBY348PR",1,0)
IBY348PR ;ALB/ESG - Pre-Installation for IB patch 348 ;16-Aug-2006
"RTN","IBY348PR",2,0)
 ;;2.0;INTEGRATED BILLING;**348**;21-MAR-94;Build 5
"RTN","IBY348PR",3,0)
 ;
"RTN","IBY348PR",4,0)
 D FILE353     ; changes to file 353
"RTN","IBY348PR",5,0)
 D MOVE        ; archive existing 1500 data elements
"RTN","IBY348PR",6,0)
 D DELTRIG     ; delete some DD triggers (will be re-added)
"RTN","IBY348PR",7,0)
 D DELOF       ; delete all data elements included in build
"RTN","IBY348PR",8,0)
 ;
"RTN","IBY348PR",9,0)
 Q
"RTN","IBY348PR",10,0)
 ;
"RTN","IBY348PR",11,0)
FILE353 ; Make the needed changes to the BILL FORM TYPE file (#353)
"RTN","IBY348PR",12,0)
 ;  -Create an entry for #12 to archive the old hcfa-1500 and edit
"RTN","IBY348PR",13,0)
 ;  -Repoint any local forms that used to point to #2 to #12 instead
"RTN","IBY348PR",14,0)
 ;  -Edit some data in the new #2 for cms-1500
"RTN","IBY348PR",15,0)
 ;
"RTN","IBY348PR",16,0)
 NEW DIK,DA,DIE,DR,FORM,FORMCNT
"RTN","IBY348PR",17,0)
 ;
"RTN","IBY348PR",18,0)
 D BMES^XPDUTL("Updating information in the BILL FORM TYPE file (#353)")
"RTN","IBY348PR",19,0)
 ;
"RTN","IBY348PR",20,0)
 ; If #12 is already there, then just quit
"RTN","IBY348PR",21,0)
 I $D(^IBE(353,12)),$P($G(^IBE(353,12,0)),U,1)="LEGACY HCFA-1500" D BMES^XPDUTL("   Entry# 12 is already defined") G F353X
"RTN","IBY348PR",22,0)
 ;
"RTN","IBY348PR",23,0)
 K ^IBE(353,12)
"RTN","IBY348PR",24,0)
 M ^IBE(353,12)=^IBE(353,2)             ; create entry# 12
"RTN","IBY348PR",25,0)
 S DIK="^IBE(353,",DA=12 D IX1^DIK      ; reindex #12
"RTN","IBY348PR",26,0)
 S DIE=353,DA=12                        ; edit #12
"RTN","IBY348PR",27,0)
 S DR=".01///LEGACY HCFA-1500;2.04///@;2.06///*LEGACY NATIONAL HCFA-1500;2.05///@;2.08///@;2.09///@;.02///@;.03///@;1.01///@"
"RTN","IBY348PR",28,0)
 D ^DIE
"RTN","IBY348PR",29,0)
 D BMES^XPDUTL("   Entry# 12 has been created and edited")
"RTN","IBY348PR",30,0)
 ;
"RTN","IBY348PR",31,0)
 ; repoint any local forms to the new 12 instead of the old 2
"RTN","IBY348PR",32,0)
 ; count total number of forms too
"RTN","IBY348PR",33,0)
 S FORM=0,FORMCNT=0
"RTN","IBY348PR",34,0)
 F  S FORM=$O(^IBE(353,FORM)) Q:'FORM  D
"RTN","IBY348PR",35,0)
 . N B S B=$G(^IBE(353,FORM,2))
"RTN","IBY348PR",36,0)
 . S FORMCNT=FORMCNT+1
"RTN","IBY348PR",37,0)
 . I $P(B,U,4) Q    ; quit if national form type
"RTN","IBY348PR",38,0)
 . I $P(B,U,5)=2 S DIE=353,DA=FORM,DR="2.05////12" D ^DIE   ; parent form
"RTN","IBY348PR",39,0)
 . I $P(B,U,8)=2 S DIE=353,DA=FORM,DR="2.08////12" D ^DIE   ; print form name
"RTN","IBY348PR",40,0)
 . Q
"RTN","IBY348PR",41,0)
 D BMES^XPDUTL("   Local forms/overrides for the old 1500 have been removed and repointed")
"RTN","IBY348PR",42,0)
 ;
"RTN","IBY348PR",43,0)
 S $P(^IBE(353,0),U,4)=FORMCNT     ; re-set 0 node
"RTN","IBY348PR",44,0)
 ;
"RTN","IBY348PR",45,0)
 ; edit the data for entry# 2 so it becomes the new cms-1500
"RTN","IBY348PR",46,0)
 S DIE=353,DA=2
"RTN","IBY348PR",47,0)
 S DR=".01///CMS-1500;2.04////1;2.06///NATIONAL CMS-1500;2.05///@;2.08////2;2.09///@"   ; note screen 9 is being deleted also
"RTN","IBY348PR",48,0)
 D ^DIE
"RTN","IBY348PR",49,0)
 D BMES^XPDUTL("   Entry# 2 has become the new 1500")
"RTN","IBY348PR",50,0)
 ;
"RTN","IBY348PR",51,0)
F353X ;
"RTN","IBY348PR",52,0)
 Q
"RTN","IBY348PR",53,0)
 ;
"RTN","IBY348PR",54,0)
MOVE ; move existing output formatter entries for form type 2 to form type 12
"RTN","IBY348PR",55,0)
 NEW IEN,DIE,DA,DR
"RTN","IBY348PR",56,0)
 D BMES^XPDUTL("Archiving output formatter entries for the old 1500 form")
"RTN","IBY348PR",57,0)
 I $O(^IBA(364.6,"B",2,0))=1400 D BMES^XPDUTL("   Already archived") G MOVEX
"RTN","IBY348PR",58,0)
 ;
"RTN","IBY348PR",59,0)
 I '$D(^IBE(353,12)) D BMES^XPDUTL("   Error - entry# 12 not defined...call EVS") G MOVEX
"RTN","IBY348PR",60,0)
 ;
"RTN","IBY348PR",61,0)
 S IEN=0
"RTN","IBY348PR",62,0)
 F  S IEN=$O(^IBA(364.6,"B",2,IEN)) Q:'IEN  D
"RTN","IBY348PR",63,0)
 . I IEN'<1400 Q    ; do not move the new data elements
"RTN","IBY348PR",64,0)
 . S DIE=364.6,DA=IEN,DR=".01////12"
"RTN","IBY348PR",65,0)
 . D ^DIE
"RTN","IBY348PR",66,0)
 . Q
"RTN","IBY348PR",67,0)
 D BMES^XPDUTL("   Completed")
"RTN","IBY348PR",68,0)
MOVEX ;
"RTN","IBY348PR",69,0)
 Q
"RTN","IBY348PR",70,0)
 ;
"RTN","IBY348PR",71,0)
DELTRIG ; remove some triggers from ^DD(FILE,FIELD,1)
"RTN","IBY348PR",72,0)
 ; these will be re-added when the build is installed
"RTN","IBY348PR",73,0)
 D BMES^XPDUTL("Removing DD triggers....")
"RTN","IBY348PR",74,0)
 D DELIX^DDMOD(36,.01,2)
"RTN","IBY348PR",75,0)
 D DELIX^DDMOD(399,.01,7)
"RTN","IBY348PR",76,0)
 D DELIX^DDMOD(399,.19,1)
"RTN","IBY348PR",77,0)
 D BMES^XPDUTL("   Completed")
"RTN","IBY348PR",78,0)
DELTRIGX ;
"RTN","IBY348PR",79,0)
 Q
"RTN","IBY348PR",80,0)
 ;
"RTN","IBY348PR",81,0)
DELOF ; Delete included output formatter entries
"RTN","IBY348PR",82,0)
 NEW FILE,DIK,LN,TAG,DATA,PCE,DA,Y
"RTN","IBY348PR",83,0)
 F FILE=5,6,7 S DIK="^IBA(364."_FILE_"," F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  D
"RTN","IBY348PR",84,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IBY348PR",85,0)
 . Q
"RTN","IBY348PR",86,0)
 ;
"RTN","IBY348PR",87,0)
 ;
"RTN","IBY348PR",88,0)
INCLUDE(FILE,Y) ; function to determine if output formatter entry should be
"RTN","IBY348PR",89,0)
 ; included in the build
"RTN","IBY348PR",90,0)
 ; FILE=5,6,7 indicating file 364.x
"RTN","IBY348PR",91,0)
 ; Y=ien to file
"RTN","IBY348PR",92,0)
 ;
"RTN","IBY348PR",93,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY348PR",94,0)
 S OK=0
"RTN","IBY348PR",95,0)
 F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY348PR",96,0)
INCLUDEX ;
"RTN","IBY348PR",97,0)
 Q OK
"RTN","IBY348PR",98,0)
 ;
"RTN","IBY348PR",99,0)
 ;
"RTN","IBY348PR",100,0)
 ; 364.5 entries modified:  
"RTN","IBY348PR",101,0)
 ;     159 Fix to N-AUTO ACCIDENT STATE
"RTN","IBY348PR",102,0)
 ;     188 New data element for box 24I - rend prov ID qual
"RTN","IBY348PR",103,0)
 ;     189 New data element for box 24J - rend prov ID and NPI
"RTN","IBY348PR",104,0)
 ;     229 n-hcfa emergency ind column 24C (Moved from 24I to 24C)
"RTN","IBY348PR",105,0)
 ;     302 (SUB-7) New data element to re-enable SUB-7
"RTN","IBY348PR",106,0)
ENT5 ; output formatter entries in file 364.5 to be included
"RTN","IBY348PR",107,0)
 ;
"RTN","IBY348PR",108,0)
 ;;^159^188^189^229^302^
"RTN","IBY348PR",109,0)
 ;;
"RTN","IBY348PR",110,0)
 ;
"RTN","IBY348PR",111,0)
 ; 364.6 IENS:  783 (SUB-7) turn field on
"RTN","IBY348PR",112,0)
 ;              975 (PRF-22) Box 24K data - no longer being used
"RTN","IBY348PR",113,0)
 ;              1002 (UB1-19) field name
"RTN","IBY348PR",114,0)
 ;              1006 (PRF-30) Svc line comment - length and qualifier
"RTN","IBY348PR",115,0)
 ;              1400-1520 (range for new form)
"RTN","IBY348PR",116,0)
ENT6 ; output formatter entries in file 364.6 to be included
"RTN","IBY348PR",117,0)
 ;
"RTN","IBY348PR",118,0)
 ;;^783^975^1002^1006^
"RTN","IBY348PR",119,0)
 ;;^1400^1401^1402^1403^1404^1405^1406^1407^1408^1409^1410^1411^1412^1413^1414^1415^1416^1417^1418^1419^1420^
"RTN","IBY348PR",120,0)
 ;;^1421^1422^1423^1424^1425^1426^1427^1428^1429^1430^1431^1432^1433^1434^1435^1436^1437^1438^1439^1440^1441^1442^1443^
"RTN","IBY348PR",121,0)
 ;;^1444^1445^1446^1447^1448^1449^1450^1451^1452^1453^1454^1455^1456^1457^1458^1459^1460^1461^1462^1463^1464^1465^1466^
"RTN","IBY348PR",122,0)
 ;;^1467^1468^1469^1470^1471^1472^1473^1474^1475^1476^1477^1478^1479^1480^1481^1482^1483^1484^1485^1486^1487^1488^1489^
"RTN","IBY348PR",123,0)
 ;;^1490^1491^1492^1493^1494^1495^1496^1497^1498^1499^1500^1501^1502^1503^1506^1507^1508^1509^1510^1511^1512^1513^1514^
"RTN","IBY348PR",124,0)
 ;;^1515^1516^1517^1518^1519^1520^
"RTN","IBY348PR",125,0)
 ;;
"RTN","IBY348PR",126,0)
 ;
"RTN","IBY348PR",127,0)
 ;
"RTN","IBY348PR",128,0)
 ; 364.7 IENS:   53 (OPR-6)  remove reference to field 214
"RTN","IBY348PR",129,0)
 ;               95 (CL1-31) Accident State (fix bug)
"RTN","IBY348PR",130,0)
 ;              889 (PRF-19) removed data element pointing to #229
"RTN","IBY348PR",131,0)
 ;              892 (SUB-7)  turn field on
"RTN","IBY348PR",132,0)
 ;              916 (OPR-7)  remove reference to field 214
"RTN","IBY348PR",133,0)
 ;              919 (OPR-8)  remove reference to field 214
"RTN","IBY348PR",134,0)
 ;              949 (SUB-10) help text
"RTN","IBY348PR",135,0)
 ;              953 (PRF-22) Box 24K data - no longer being used
"RTN","IBY348PR",136,0)
 ;             1007 (PRF-30) Svc line comment - length and qualifier
"RTN","IBY348PR",137,0)
 ;             1023 (OP7-2)  help text
"RTN","IBY348PR",138,0)
 ;        1100-1220 (range for new form)
"RTN","IBY348PR",139,0)
ENT7 ; output formatter entries in file 364.7 to be included
"RTN","IBY348PR",140,0)
 ;
"RTN","IBY348PR",141,0)
 ;;^53^95^889^892^916^919^949^953^1007^1023^
"RTN","IBY348PR",142,0)
 ;;^1100^1101^1102^1103^1104^1105^1106^1107^1108^1109^1110^1111^1112^1113^1114^1115^1116^1117^1118^1119^
"RTN","IBY348PR",143,0)
 ;;^1120^1121^1122^1123^1124^1125^1126^1127^1128^1129^1130^1131^1132^1133^1134^1135^1136^1137^1138^1139^1140^1141^1142^
"RTN","IBY348PR",144,0)
 ;;^1143^1144^1145^1146^1147^1148^1149^1150^1151^1152^1153^1154^1155^1156^1157^1158^1159^1160^1161^1162^1163^1164^1165^
"RTN","IBY348PR",145,0)
 ;;^1166^1167^1168^1169^1170^1171^1172^1173^1174^1175^1176^1177^1178^1179^1180^1181^1182^1183^1184^1185^1186^1187^1188^
"RTN","IBY348PR",146,0)
 ;;^1189^1190^1191^1192^1193^1194^1195^1196^1197^1198^1199^1200^1201^1202^1203^1206^1207^1208^1209^1210^1211^1212^1213^
"RTN","IBY348PR",147,0)
 ;;^1214^1215^1216^1217^1218^1219^1220^
"RTN","IBY348PR",148,0)
 ;;
"RTN","IBY348PR",149,0)
 ;
"RTN","IBY348PR",150,0)
 ;
"SEC","^DD",399,399,.19,9)

"SEC","^DIC",355.97,355.97,0,"AUDIT")

"SEC","^DIC",355.97,355.97,0,"DD")
@
"SEC","^DIC",355.97,355.97,0,"DEL")
@
"SEC","^DIC",355.97,355.97,0,"LAYGO")
@
"SEC","^DIC",355.97,355.97,0,"RD")

"SEC","^DIC",355.97,355.97,0,"WR")
@
"UP",2,2.312,-1)
2^.312
"UP",2,2.312,0)
2.312
"UP",399,399.0304,-1)
399^CP
"UP",399,399.0304,0)
399.0304
"UP",399,399.041,-1)
399^OC
"UP",399,399.041,0)
399.041
"UP",399,399.042,-1)
399^RC
"UP",399,399.042,0)
399.042
"VER")
8.0^22.0
"^DD",2,2.312,3.01,0)
INSURED'S DOB^DX^^3;1^S %DT="EXP",%DT(0)=-DT D ^%DT K %DT(0) S X=Y K:Y<1 X
"^DD",2,2.312,3.01,3)
Please enter the insured person's date of birth.
"^DD",2,2.312,3.01,21,0)
^^3^3^3060905^
"^DD",2,2.312,3.01,21,1,0)
The field is used to store the date of birth of the insured person.
"^DD",2,2.312,3.01,21,2,0)
The field value may be printed in block 11a of the CMS-1500 claim
"^DD",2,2.312,3.01,21,3,0)
form.  This is a required field for billing ChampUS patients.
"^DD",2,2.312,3.01,"DT")
3060905
"^DD",2,2.312,3.02,0)
INSURED'S BRANCH^P23'^DIC(23,^3;2^Q
"^DD",2,2.312,3.02,3)
Please enter the Service Branch of the insured person.
"^DD",2,2.312,3.02,21,0)
^^5^5^3060905^
"^DD",2,2.312,3.02,21,1,0)
This field may be used to store the service branch of the insured
"^DD",2,2.312,3.02,21,2,0)
person.  The field will be used primarily for CHAMPUS policies,
"^DD",2,2.312,3.02,21,3,0)
where the subscriber, or sponsor, may be an active duty member
"^DD",2,2.312,3.02,21,4,0)
of the military.  The field value may be printed in block 11b
"^DD",2,2.312,3.02,21,5,0)
of the CMS-1500 claim form.
"^DD",2,2.312,3.02,"DT")
3060905
"^DD",2,2.312,3.03,0)
INSURED'S RANK^F^^3;3^K:$L(X)>12!($L(X)<2) X
"^DD",2,2.312,3.03,3)
Answer must be 2-12 characters in length.
"^DD",2,2.312,3.03,21,0)
^^5^5^3060905^
"^DD",2,2.312,3.03,21,1,0)
This field contains the insured person's military rank.  The
"^DD",2,2.312,3.03,21,2,0)
field will be used primarily for CHAMPUS policies, where the
"^DD",2,2.312,3.03,21,3,0)
subscriber, or sponsor, may be an active duty member of the
"^DD",2,2.312,3.03,21,4,0)
military.  The field value may be printed in block 11c of
"^DD",2,2.312,3.03,21,5,0)
the CMS-1500 claim form.
"^DD",2,2.312,3.03,"DT")
3060905
"^DD",36,36,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
"^DD",36,36,.01,.1)
INSURANCE COMPANY FILE
"^DD",36,36,.01,1,0)
^.1
"^DD",36,36,.01,1,1,0)
36^B
"^DD",36,36,.01,1,1,1)
S ^DIC(36,"B",$E(X,1,30),DA)=""
"^DD",36,36,.01,1,1,2)
K ^DIC(36,"B",$E(X,1,30),DA)
"^DD",36,36,.01,1,2,0)
^^TRIGGER^36^4.04
"^DD",36,36,.01,1,2,1)
X ^DD(36,.01,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="22" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,4)=DIV,DIH=36,DIG=4.04 D ^DICR
"^DD",36,36,.01,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($G(^IBE(355.97,+$P(Y(1),U,4),0)),U)=""
"^DD",36,36,.01,1,2,2)
Q
"^DD",36,36,.01,1,2,"CREATE CONDITION")
#4.04=""
"^DD",36,36,.01,1,2,"CREATE VALUE")
"22"
"^DD",36,36,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,2,"DT")
3060905
"^DD",36,36,.01,1,2,"FIELD")
#4.04
"^DD",36,36,.01,1,3,0)
^^TRIGGER^36^4.05
"^DD",36,36,.01,1,3,1)
X ^DD(36,.01,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X="0" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,5)=DIV,DIH=36,DIG=4.05 D ^DICR
"^DD",36,36,.01,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.05,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,5)_":",2),$C(59))=""
"^DD",36,36,.01,1,3,2)
Q
"^DD",36,36,.01,1,3,"CREATE CONDITION")
REF PROV SEC ID REQ ON CLAIMS=""
"^DD",36,36,.01,1,3,"CREATE VALUE")
"0"
"^DD",36,36,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,3,"DT")
3060308
"^DD",36,36,.01,1,3,"FIELD")
REF PROV SEC ID REQ ON CLAIMS
"^DD",36,36,.01,1,4,0)
^^TRIGGER^36^4.06
"^DD",36,36,.01,1,4,1)
X ^DD(36,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X="0" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,6)=DIV,DIH=36,DIG=4.06 D ^DICR
"^DD",36,36,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.06,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,6)_":",2),$C(59))=""
"^DD",36,36,.01,1,4,2)
Q
"^DD",36,36,.01,1,4,"CREATE CONDITION")
#4.06=""
"^DD",36,36,.01,1,4,"CREATE VALUE")
"0"
"^DD",36,36,.01,1,4,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,4,"DT")
3060504
"^DD",36,36,.01,1,4,"FIELD")
ATT/REND ID BILL SEC ID PROF
"^DD",36,36,.01,1,5,0)
^^TRIGGER^36^4.07
"^DD",36,36,.01,1,5,1)
X ^DD(36,.01,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV S X="1" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,7)=DIV,DIH=36,DIG=4.07 D ^DICR
"^DD",36,36,.01,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.07,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,7)_":",2),$C(59))=""
"^DD",36,36,.01,1,5,2)
Q
"^DD",36,36,.01,1,5,"CREATE CONDITION")
SEND LAB OR FAC IDS FOR VAMC=""
"^DD",36,36,.01,1,5,"CREATE VALUE")
"1"
"^DD",36,36,.01,1,5,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,5,"DT")
3060308
"^DD",36,36,.01,1,5,"FIELD")
SEND LAB OR FAC IDS FOR VAMC
"^DD",36,36,.01,1,6,0)
^^TRIGGER^36^4.08
"^DD",36,36,.01,1,6,1)
X ^DD(36,.01,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X="0" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,8)=DIV,DIH=36,DIG=4.08 D ^DICR
"^DD",36,36,.01,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.08,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,8)_":",2),$C(59))=""
"^DD",36,36,.01,1,6,2)
Q
"^DD",36,36,.01,1,6,"CREATE CONDITION")
#4.08=""
"^DD",36,36,.01,1,6,"CREATE VALUE")
"0"
"^DD",36,36,.01,1,6,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,6,"DT")
3060504
"^DD",36,36,.01,1,6,"FIELD")
ATT/REND ID BILL SEC ID INST
"^DD",36,36,.01,3)
ANSWER MUST BE 3-30 CHARACTERS IN LENGTH
"^DD",36,36,.01,21,0)
^^5^5^2941201^^^^
"^DD",36,36,.01,21,1,0)
Enter the name of the insurance carrier which at least one patient seen
"^DD",36,36,.01,21,2,0)
at your facility has.  This information must be updated using the 'Insurance
"^DD",36,36,.01,21,3,0)
Company Entry/Edit' option, NOT using VA FileMan.  Editing of this data
"^DD",36,36,.01,21,4,0)
through a filemanager option could cause negative impacts on the MAS and
"^DD",36,36,.01,21,5,0)
IB software modules in addition to other DHCP modules.
"^DD",36,36,.01,"DEL",1,0)
I 1 W !!,"You must use the 'Delete Company' action to delete a company... "
"^DD",36,36,.01,"DT")
3060905
"^DD",36,36,.17,0)
PROFESSIONAL PROVIDER NUMBER^F^^0;17^K:$L(X)>15!($L(X)<1) X
"^DD",36,36,.17,3)
Answer must be 1-15 characters in length.
"^DD",36,36,.17,21,0)
^^2^2^3060905^
"^DD",36,36,.17,21,1,0)
An identifier for professional (CMS-1500) bills assigned by the insurance 
"^DD",36,36,.17,21,2,0)
company.  This field is a counterpart to the Hospital Provider Number.
"^DD",36,36,.17,"DT")
3060905
"^DD",36,36,3.09,0)
ELECTRONIC INSURANCE TYPE^SX^1:HMO;2:COMMERCIAL;3:MEDICARE;4:MEDICAID;5:GROUP POLICY;9:OTHER;^3;9^K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.09,3)
ENTER THE TYPE OF INSURANCE FOR ELECTRONIC TRANSMISSION PURPOSES
"^DD",36,36,3.09,21,0)
^^6^6^3061023^
"^DD",36,36,3.09,21,1,0)
This field contains the code to be used in the electronic
"^DD",36,36,3.09,21,2,0)
transmission of claims to identify the type of insurance
"^DD",36,36,3.09,21,3,0)
company the claim is for.
"^DD",36,36,3.09,21,4,0)
The default, if this field is blank, is Group Policy.
"^DD",36,36,3.09,21,5,0)
If you select GROUP POLICY, this will force a check in the
"^DD",36,36,3.09,21,6,0)
GROUP insurance box of the CMS 1500/BOX 1.
"^DD",36,36,3.09,"DT")
3061023
"^DD",36,36,4.01,0)
PERF PROV SECOND ID TYPE 1500^*P355.97'^IBE(355.97,^4;1^S DIC("S")="I $P(^(0),U,3)'=""1A"",$P(^(0),U,3)'=""TJ"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",36,36,4.01,1,0)
^.1^^0
"^DD",36,36,4.01,3)
Enter the type of performing provider id # the insurance co requires on its CMS-1500 bills
"^DD",36,36,4.01,12)
Must be valid id type for performing provider id
"^DD",36,36,4.01,12.1)
S DIC("S")="I $P(^(0),U,3)'=""1A"",$P(^(0),U,3)'=""TJ"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))"
"^DD",36,36,4.01,21,0)
^^5^5^3060905^
"^DD",36,36,4.01,21,1,0)
This is the type of performing provider secondary id # that the 
"^DD",36,36,4.01,21,2,0)
insurance company expects on CMS-1500 bills received from the 
"^DD",36,36,4.01,21,3,0)
V.A.  When the payer-specific provider id is extracted, this field
"^DD",36,36,4.01,21,4,0)
is used to determine where to get the default data from if another
"^DD",36,36,4.01,21,5,0)
secondary id is not entered for the claim.
"^DD",36,36,4.01,"DT")
3060905
"^DD",36,36,4.03,0)
SECONDARY ID REQUIREMENTS^S^0:NONE REQUIRED;1:CMS-1500 REQUIRED;2:UB92 REQUIRED;3:BOTH UB92 AND CMS-1500 REQUIRED;^4;3^Q
"^DD",36,36,4.03,3)
Enter the code to specify the secondary performing provider id requirement for this ins co by form type
"^DD",36,36,4.03,21,0)
^^2^2^3060905^
"^DD",36,36,4.03,21,1,0)
This field is used to identify if the insurance company requires the
"^DD",36,36,4.03,21,2,0)
performing provider secondary id on the UB92, the CMS-1500 or both.
"^DD",36,36,4.03,"DT")
3060905
"^DD",36,36,4.04,0)
REF PROV SEC ID DEF CMS-1500^*P355.97'^IBE(355.97,^4;4^S DIC("S")="I $P(^(0),U,3)'=""1A"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",36,36,4.04,3)
Enter the referring providers secondary ID type to be used on outgoing claims
"^DD",36,36,4.04,5,1,0)
36^.01^2
"^DD",36,36,4.04,12)
Must be an allowable ID for a person
"^DD",36,36,4.04,12.1)
S DIC("S")="I $P(^(0),U,3)'=""1A"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))"
"^DD",36,36,4.04,21,0)
^^2^2^3060905^
"^DD",36,36,4.04,21,1,0)
This is the default qualifier for a referring provider if there is a 
"^DD",36,36,4.04,21,2,0)
referring provider and the form type is CMS-1500.
"^DD",36,36,4.04,"DT")
3060905
"^DD",36,36,4.05,0)
REF PROV SEC ID REQ ON CLAIMS^S^1:CMS-1500;0:NONE;^4;5^Q
"^DD",36,36,4.05,3)
Enter 1 if this qualifier is required on CMS-1500 claims that have a referring provider
"^DD",36,36,4.05,5,1,0)
36^.01^3
"^DD",36,36,4.05,21,0)
^^2^2^3061012^
"^DD",36,36,4.05,21,1,0)
Set this field to CMS-1500 if the default ID for a Referring Provider is
"^DD",36,36,4.05,21,2,0)
REQUIRED on a claim.
"^DD",36,36,4.05,"DT")
3061012
"^DD",36,36,4.06,0)
ATT/REND ID BILL SEC ID PROF^S^0:NO;1:YES;^4;6^Q
"^DD",36,36,4.06,.1)
For CMS-1500 claims, use the Rendering ID as a Billing Provider secondary ID
"^DD",36,36,4.06,3)
Enter 1 if att/rend ID should be used as Billing Provider's secondary ID for CMS-1500 claims
"^DD",36,36,4.06,5,1,0)
36^.01^4
"^DD",36,36,4.06,21,0)
^^3^3^3060905^
"^DD",36,36,4.06,21,1,0)
This flag is set for insurance companies that wish to have the 
"^DD",36,36,4.06,21,2,0)
attending/rendering provider secondary ID used as a billing provider 
"^DD",36,36,4.06,21,3,0)
secondary ID.  This applies to CMS-1500 claims.
"^DD",36,36,4.06,"DT")
3060905
"^DD",350.9,350.9,1.22,0)
MULTIPLE FORM TYPES^S^1:YES;0:NO;^1;22^Q
"^DD",350.9,350.9,1.22,3)
Enter 'Y'es if your facility uses the CMS-1500 as well as the UB claim form.
"^DD",350.9,350.9,1.22,21,0)
^^5^5^3060927^
"^DD",350.9,350.9,1.22,21,1,0)
Set this field to 'YES' if the facility uses more than one health insurance
"^DD",350.9,350.9,1.22,21,2,0)
form type.  Therefore, if your site uses the UB form and the CMS-1500 then
"^DD",350.9,350.9,1.22,21,3,0)
this should be answered 'YES'.  If your site is only using the UB form
"^DD",350.9,350.9,1.22,21,4,0)
then answer 'NO'.  If this is set to 'NO' or left blank then only the UB
"^DD",350.9,350.9,1.22,21,5,0)
type claim forms will be allowed.
"^DD",350.9,350.9,1.22,"DT")
3060927
"^DD",350.9,350.9,1.27,0)
CMS-1500 ADDRESS COLUMN^NJ2,0^^1;27^K:+X'=X!(X>80)!(X<1)!(X?.E1"."1.N) X
"^DD",350.9,350.9,1.27,3)
Type a number between 1 and 80, 0 Decimal Digits.  Used only for the 1500 claim form.
"^DD",350.9,350.9,1.27,21,0)
^^2^2^3060927^
"^DD",350.9,350.9,1.27,21,1,0)
This is the column that the mailing address will begin printing
"^DD",350.9,350.9,1.27,21,2,0)
on row 1 of the CMS-1500 claim form.
"^DD",350.9,350.9,1.27,23,0)
^^3^3^3060927^
"^DD",350.9,350.9,1.27,23,1,0)
With this parameter the site can specify where the address prints,
"^DD",350.9,350.9,1.27,23,2,0)
depending on the type of envelope they use.  The first 5 rows are the only
"^DD",350.9,350.9,1.27,23,3,0)
blank space on the form available for the mailing address.
"^DD",350.9,350.9,1.27,"DT")
3060927
"^DD",350.9,350.9,1.32,0)
CMS-1500 PRINT LEGACY ID^S^Y:YES;N:NO;C:CONDITIONAL;^1;32^Q
"^DD",350.9,350.9,1.32,3)

"^DD",350.9,350.9,1.32,21,0)
^^8^8^3061019^
"^DD",350.9,350.9,1.32,21,1,0)
This parameter determines whether legacy (example: IDs furnished by an
"^DD",350.9,350.9,1.32,21,2,0)
Insurance Company) Provider IDs will appear on locally printed CMS-1500
"^DD",350.9,350.9,1.32,21,3,0)
claims.
"^DD",350.9,350.9,1.32,21,4,0)
 
"^DD",350.9,350.9,1.32,21,5,0)
YES         - Legacy IDs will always be printed.  
"^DD",350.9,350.9,1.32,21,6,0)
NO          - Legacy IDs will never be printed.
"^DD",350.9,350.9,1.32,21,7,0)
CONDITIONAL - Legacy IDs will be printed only when
"^DD",350.9,350.9,1.32,21,8,0)
              no NPIs are available.
"^DD",350.9,350.9,1.32,"DT")
3061019
"^DD",350.9,350.9,1.33,0)
UB PRINT LEGACY ID^S^Y:YES;N:NO;C:CONDITIONAL;^1;33^Q
"^DD",350.9,350.9,1.33,21,0)
^^7^7^3061019^
"^DD",350.9,350.9,1.33,21,1,0)
This parameter determines whether legacy (example: IDs furnished by an
"^DD",350.9,350.9,1.33,21,2,0)
Insurance Company) Provider IDs will appear on locally printed UB claims.
"^DD",350.9,350.9,1.33,21,3,0)
         
"^DD",350.9,350.9,1.33,21,4,0)
YES         - Legacy IDs will always be printed.  
"^DD",350.9,350.9,1.33,21,5,0)
NO          - Legacy IDs will never be printed.
"^DD",350.9,350.9,1.33,21,6,0)
CONDITIONAL - Legacy IDs will be printed only when
"^DD",350.9,350.9,1.33,21,7,0)
              no NPIs are available.
"^DD",350.9,350.9,1.33,"DT")
3061019
"^DD",350.9,350.9,2.1,0)
FACILITY NAME FOR BILLING^RF^^2;10^K:$L(X)>18!($L(X)<1)!'($TR(X," ")?.A) X
"^DD",350.9,350.9,2.1,3)
Enter your Facility Name for Billing.  Answer must be 1-18 alpha characters in length.
"^DD",350.9,350.9,2.1,21,0)
^^2^2^3060927^
"^DD",350.9,350.9,2.1,21,1,0)
This is the Facility Name for Billing that will print on the first line of
"^DD",350.9,350.9,2.1,21,2,0)
the UB-92 form locator 1 and in box 33 of the CMS-1500.
"^DD",350.9,350.9,2.1,"DT")
3060927
"^DD",350.9,350.9,2.12,0)
BILLING SITE IS OTHER FACILITY^S^0:NO;1:YES;^2;12^Q
"^DD",350.9,350.9,2.12,3)
Enter YES if the billing facility is not the main rendering facility
"^DD",350.9,350.9,2.12,21,0)
^^7^7^3060928^^
"^DD",350.9,350.9,2.12,21,1,0)
This field is used by integrated sites who have centralized their billing
"^DD",350.9,350.9,2.12,21,2,0)
at a single facility that is not the rendering facility.  In this case,
"^DD",350.9,350.9,2.12,21,3,0)
if the rendering facility's division is not a remote site (i.e. is the
"^DD",350.9,350.9,2.12,21,4,0)
main facility), the rendering facility's name must print in block 32 of
"^DD",350.9,350.9,2.12,21,5,0)
the CMS-1500 while the billing facility's name must print in box 33.
"^DD",350.9,350.9,2.12,21,6,0)
Answering YES to this prompt will force these 2 boxes to be correctly
"^DD",350.9,350.9,2.12,21,7,0)
populated.
"^DD",350.9,350.9,2.12,"DT")
3060928
"^DD",353.1,353.1,.01,0)
CODE^RF^^0;1^K:$L(X)>7!($L(X)<1)!'(X'?1P.E) X
"^DD",353.1,353.1,.01,1,0)
^.1
"^DD",353.1,353.1,.01,1,1,0)
353.1^B
"^DD",353.1,353.1,.01,1,1,1)
S ^IBE(353.1,"B",$E(X,1,30),DA)=""
"^DD",353.1,353.1,.01,1,1,2)
K ^IBE(353.1,"B",$E(X,1,30),DA)
"^DD",353.1,353.1,.01,3)
Answer must be 1-7 characters in length.
"^DD",353.1,353.1,.01,21,0)
^^2^2^3060928^
"^DD",353.1,353.1,.01,21,1,0)
This is the code identifing the Place of Service associated
"^DD",353.1,353.1,.01,21,2,0)
with a visit.  Printed on the CMS-1500.
"^DD",353.1,353.1,.01,"DT")
3060928
"^DD",353.2,353.2,.01,0)
CODE^RF^^0;1^K:$L(X)>7!($L(X)<1)!'(X'?1P.E) X
"^DD",353.2,353.2,.01,1,0)
^.1
"^DD",353.2,353.2,.01,1,1,0)
353.2^B
"^DD",353.2,353.2,.01,1,1,1)
S ^IBE(353.2,"B",$E(X,1,30),DA)=""
"^DD",353.2,353.2,.01,1,1,2)
K ^IBE(353.2,"B",$E(X,1,30),DA)
"^DD",353.2,353.2,.01,3)
Answer must be 1-7 characters in length.
"^DD",353.2,353.2,.01,21,0)
^^2^2^3060928^
"^DD",353.2,353.2,.01,21,1,0)
This is the code that identifies a Type of Service associated with a visit
"^DD",353.2,353.2,.01,21,2,0)
on the CMS-1500.
"^DD",353.2,353.2,.01,"DT")
3060928
"^DD",355.9,355.9,.04,0)
FORM TYPE APPLIED TO^RS^0:BOTH UB92 AND CMS-1500 FORMS;1:UB92 FORMS ONLY;2:CMS-1500 FORMS ONLY;^0;4^Q
"^DD",355.9,355.9,.04,3)
Enter the form types that this id # will apply to.
"^DD",355.9,355.9,.04,21,0)
^^2^2^3060928^
"^DD",355.9,355.9,.04,21,1,0)
This designates whether the id number is to be used for just
"^DD",355.9,355.9,.04,21,2,0)
UB92 form types, just CMS-1500 form types or both form types.
"^DD",355.9,355.9,.04,"DT")
3060928
"^DD",355.91,355.91,.04,0)
FORM TYPE APPLIED TO^RS^0:BOTH UB92 AND CMS-1500 FORMS;1:UB92 FORMS ONLY;2:CMS-1500 FORMS ONLY;^0;4^Q
"^DD",355.91,355.91,.04,3)
Select one or both forms that the provider id will apply to.
"^DD",355.91,355.91,.04,21,0)
^^2^2^3060928^
"^DD",355.91,355.91,.04,21,1,0)
This designates whether the id number is to be used for just
"^DD",355.91,355.91,.04,21,2,0)
UB92 form types, just CMS-1500 form types or both form types.
"^DD",355.91,355.91,.04,"DT")
3060928
"^DD",355.92,355.92,.04,0)
FORM TYPE APPLIED TO^RS^0:BOTH UB92 AND CMS-1500 FORMS;1:UB92 ONLY;2:CMS-1500 ONLY;3:PRESCRIPTION ONLY;^0;4^Q
"^DD",355.92,355.92,.04,3)
Select one or both forms that the facility id will apply to.
"^DD",355.92,355.92,.04,21,0)
^^2^2^3060928^
"^DD",355.92,355.92,.04,21,1,0)
This designates whether the id number is to be used for just
"^DD",355.92,355.92,.04,21,2,0)
UB92 form types, just CMS-1500 form types or both form types.
"^DD",355.92,355.92,.04,"DT")
3060928
"^DD",355.93,355.93,.02,0)
PROVIDER TYPE^SX^1:FACILITY/GROUP;2:INDIVIDUAL;^0;2^N Z,Z0 S Z0=X,Z=$P($G(^IBA(355.93,DA,0)),U) I $S(X=1:Z[",",1:Z'[",") D EN^DDIOL($S(Z0=1:"FACILITY NAMES MUST NOT CONTAIN A COMMA",1:"INDIVIDUAL NAMES REQUIRE LAST,FIRST MI FORMAT")) K X
"^DD",355.93,355.93,.02,1,0)
^.1
"^DD",355.93,355.93,.02,1,1,0)
^^TRIGGER^355.93^.03
"^DD",355.93,355.93,.02,1,1,1)
Q
"^DD",355.93,355.93,.02,1,1,2)
X ^DD(355.93,.02,1,1,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=355.93,DIG=.03 D ^DICR
"^DD",355.93,355.93,.02,1,1,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=2
"^DD",355.93,355.93,.02,1,1,3)
Do not delete
"^DD",355.93,355.93,.02,1,1,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,1,"%D",1,0)
This trigger deletes the value of the CREDENTIALS field if the type is no
"^DD",355.93,355.93,.02,1,1,"%D",2,0)
longer an individual provider type.
"^DD",355.93,355.93,.02,1,1,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,1,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=2
"^DD",355.93,355.93,.02,1,1,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,1,"FIELD")
CREDENTIALS
"^DD",355.93,355.93,.02,1,2,0)
^^TRIGGER^355.93^.04
"^DD",355.93,355.93,.02,1,2,1)
Q
"^DD",355.93,355.93,.02,1,2,2)
X ^DD(355.93,.02,1,2,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,4)=DIV,DIH=355.93,DIG=.04 D ^DICR
"^DD",355.93,355.93,.02,1,2,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=2
"^DD",355.93,355.93,.02,1,2,3)
Do not delete
"^DD",355.93,355.93,.02,1,2,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,2,"%D",1,0)
This trigger deletes the value of the SPECIALTY field if the type is no
"^DD",355.93,355.93,.02,1,2,"%D",2,0)
longer an individual provider type.
"^DD",355.93,355.93,.02,1,2,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,2,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=2
"^DD",355.93,355.93,.02,1,2,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,2,"DT")
3000905
"^DD",355.93,355.93,.02,1,2,"FIELD")
SPECIALTY
"^DD",355.93,355.93,.02,1,3,0)
^^TRIGGER^355.93^.05
"^DD",355.93,355.93,.02,1,3,1)
Q
"^DD",355.93,355.93,.02,1,3,2)
X ^DD(355.93,.02,1,3,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=355.93,DIG=.05 D ^DICR
"^DD",355.93,355.93,.02,1,3,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=1
"^DD",355.93,355.93,.02,1,3,3)
Do not delete
"^DD",355.93,355.93,.02,1,3,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,3,"%D",1,0)
This trigger deletes the value of the STREET ADDRESS field if the type is
"^DD",355.93,355.93,.02,1,3,"%D",2,0)
no longer a facility type provider.
"^DD",355.93,355.93,.02,1,3,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,3,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=1
"^DD",355.93,355.93,.02,1,3,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,3,"DT")
3000905
"^DD",355.93,355.93,.02,1,3,"FIELD")
STREET ADDRESS
"^DD",355.93,355.93,.02,1,4,0)
^^TRIGGER^355.93^.06
"^DD",355.93,355.93,.02,1,4,1)
Q
"^DD",355.93,355.93,.02,1,4,2)
X ^DD(355.93,.02,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,6)=DIV,DIH=355.93,DIG=.06 D ^DICR
"^DD",355.93,355.93,.02,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=1
"^DD",355.93,355.93,.02,1,4,3)
Do not delete
"^DD",355.93,355.93,.02,1,4,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,4,"%D",1,0)
This trigger deletes the value of the CITY field if the type is no
"^DD",355.93,355.93,.02,1,4,"%D",2,0)
longer a facility type provider.
"^DD",355.93,355.93,.02,1,4,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,4,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=1
"^DD",355.93,355.93,.02,1,4,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,4,"DT")
3000905
"^DD",355.93,355.93,.02,1,4,"FIELD")
CITY
"^DD",355.93,355.93,.02,1,5,0)
^^TRIGGER^355.93^.07
"^DD",355.93,355.93,.02,1,5,1)
Q
"^DD",355.93,355.93,.02,1,5,2)
X ^DD(355.93,.02,1,5,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,7)=DIV,DIH=355.93,DIG=.07 D ^DICR
"^DD",355.93,355.93,.02,1,5,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=1
"^DD",355.93,355.93,.02,1,5,3)
Do not delete
"^DD",355.93,355.93,.02,1,5,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,5,"%D",1,0)
This trigger deletes the value of the STATE field if the type is no
"^DD",355.93,355.93,.02,1,5,"%D",2,0)
longer a facility type provider.
"^DD",355.93,355.93,.02,1,5,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,5,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=1
"^DD",355.93,355.93,.02,1,5,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,5,"DT")
3000905
"^DD",355.93,355.93,.02,1,5,"FIELD")
STATE
"^DD",355.93,355.93,.02,1,6,0)
^^TRIGGER^355.93^.08
"^DD",355.93,355.93,.02,1,6,1)
Q
"^DD",355.93,355.93,.02,1,6,2)
X ^DD(355.93,.02,1,6,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,8)=DIV,DIH=355.93,DIG=.08 D ^DICR
"^DD",355.93,355.93,.02,1,6,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=1
"^DD",355.93,355.93,.02,1,6,3)
Do not delete
"^DD",355.93,355.93,.02,1,6,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,6,"%D",1,0)
This trigger deletes the value of the ZIP CODE field if the type is no
"^DD",355.93,355.93,.02,1,6,"%D",2,0)
longer a facility type provider.
"^DD",355.93,355.93,.02,1,6,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,6,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=1
"^DD",355.93,355.93,.02,1,6,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,6,"DT")
3000905
"^DD",355.93,355.93,.02,1,6,"FIELD")
ZIP CODE
"^DD",355.93,355.93,.02,1,7,0)
^^TRIGGER^355.93^.09
"^DD",355.93,355.93,.02,1,7,1)
Q
"^DD",355.93,355.93,.02,1,7,2)
X ^DD(355.93,.02,1,7,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,9)=DIV,DIH=355.93,DIG=.09 D ^DICR
"^DD",355.93,355.93,.02,1,7,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=1
"^DD",355.93,355.93,.02,1,7,3)
Do not delete
"^DD",355.93,355.93,.02,1,7,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,7,"%D",1,0)
This trigger deletes the value of the FACILITY DEFAULT ID NUMBER field
"^DD",355.93,355.93,.02,1,7,"%D",2,0)
if the type is no longer a facility type provider.
"^DD",355.93,355.93,.02,1,7,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,7,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=1
"^DD",355.93,355.93,.02,1,7,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,7,"DT")
3000905
"^DD",355.93,355.93,.02,1,7,"FIELD")
FACILITY DEFAULT ID NUMBER
"^DD",355.93,355.93,.02,1,8,0)
^^TRIGGER^355.93^.13
"^DD",355.93,355.93,.02,1,8,1)
X ^DD(355.93,.02,1,8,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X="16" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=355.93,DIG=.13 D ^DICR
"^DD",355.93,355.93,.02,1,8,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=Y(0),X=X S X=X="1",Y(1)=$G(X) S X=$P(Y(2),U,9)]"",Y=X,X=Y(1),X=X&Y
"^DD",355.93,355.93,.02,1,8,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=355.93,DIG=.13 D ^DICR
"^DD",355.93,355.93,.02,1,8,"CREATE CONDITION")
INTERNAL(PROVIDER TYPE)="1"&(FACILITY DEFAULT ID NUMBER]"")
"^DD",355.93,355.93,.02,1,8,"CREATE VALUE")
"16"
"^DD",355.93,355.93,.02,1,8,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,8,"DT")
3060314
"^DD",355.93,355.93,.02,1,8,"FIELD")
PRIMARY ID QUALIFIER
"^DD",355.93,355.93,.02,3)
Enter 1 or 2 to designate this entry as a facility or an individual.
"^DD",355.93,355.93,.02,5,1,0)
355.93^.01^2
"^DD",355.93,355.93,.02,5,2,0)
355.93^.01^3
"^DD",355.93,355.93,.02,21,0)
^^9^9^3060928^
"^DD",355.93,355.93,.02,21,1,0)
This field identifies the type of provider being defined.  Facility
"^DD",355.93,355.93,.02,21,2,0)
providers can be used to fill in the name and address of the non-VA
"^DD",355.93,355.93,.02,21,3,0)
facility where services were rendered (box 32 on the CMS-1500).  An
"^DD",355.93,355.93,.02,21,4,0)
individual provider can be selected as the rendering, attending,
"^DD",355.93,355.93,.02,21,5,0)
referring or operating provider on a bill.
"^DD",355.93,355.93,.02,21,6,0)
 
"^DD",355.93,355.93,.02,21,7,0)
For name standarization purposes, individual provider names must be
"^DD",355.93,355.93,.02,21,8,0)
entered in LAST,FIRST MIDDLE format and facility names must not contain
"^DD",355.93,355.93,.02,21,9,0)
a comma.
"^DD",355.93,355.93,.02,"DT")
3060928
"^DD",355.96,355.96,.04,0)
FORM TYPE APPLIED TO^RS^0:BOTH UB92 AND CMS-1500 FORMS;1:UB92 FORM ONLY;2:CMS-1500 FORM ONLY;^0;4^Q
"^DD",355.96,355.96,.04,3)
Select one or both forms that the provider id will apply to.
"^DD",355.96,355.96,.04,5,1,0)
355.96^.01^2
"^DD",355.96,355.96,.04,21,0)
^^2^2^3060928^
"^DD",355.96,355.96,.04,21,1,0)
This designates whether the id number is to be used for just
"^DD",355.96,355.96,.04,21,2,0)
UB92 form types, just CMS-1500 form types or both form types.
"^DD",355.96,355.96,.04,"DT")
3061005
"^DD",355.97,355.97,0)
FIELD^^.08^17
"^DD",355.97,355.97,0,"DDA")
N
"^DD",355.97,355.97,0,"DT")
3060928
"^DD",355.97,355.97,0,"ID",.02)
W ""
"^DD",355.97,355.97,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",355.97,355.97,0,"IX","B",355.97,.01)

"^DD",355.97,355.97,0,"IX","C",355.97,.03)

"^DD",355.97,355.97,0,"NM","IB PROVIDER ID # TYPE")

"^DD",355.97,355.97,0,"PT",36,4.01)

"^DD",355.97,355.97,0,"PT",36,4.02)

"^DD",355.97,355.97,0,"PT",36,4.04)

"^DD",355.97,355.97,0,"PT",36,4.1)

"^DD",355.97,355.97,0,"PT",355.9,.06)

"^DD",355.97,355.97,0,"PT",355.91,.06)
 
"^DD",355.97,355.97,0,"PT",355.92,.06)

"^DD",355.97,355.97,0,"PT",355.93,.13)

"^DD",355.97,355.97,0,"PT",355.96,.06)

"^DD",355.97,355.97,0,"PT",399,128)

"^DD",355.97,355.97,0,"PT",399,129)

"^DD",355.97,355.97,0,"PT",399,130)

"^DD",355.97,355.97,0,"PT",399.0222,.12)

"^DD",355.97,355.97,0,"PT",399.0222,.13)

"^DD",355.97,355.97,0,"PT",399.0222,.14)

"^DD",355.97,355.97,0,"VRPK")
IB
"^DD",355.97,355.97,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",355.97,355.97,.01,1,0)
^.1
"^DD",355.97,355.97,.01,1,1,0)
355.97^B
"^DD",355.97,355.97,.01,1,1,1)
S ^IBE(355.97,"B",$E(X,1,30),DA)=""
"^DD",355.97,355.97,.01,1,1,2)
K ^IBE(355.97,"B",$E(X,1,30),DA)
"^DD",355.97,355.97,.01,3)
Answer must be 3-30 characters in length.
"^DD",355.97,355.97,.01,21,0)
^^1^1^3010724^
"^DD",355.97,355.97,.01,21,1,0)
This is the name used to describe the provider id type.
"^DD",355.97,355.97,.01,"DT")
3010724
"^DD",355.97,355.97,.02,0)
SOURCE LEVEL MINIMUM^RS^0:NONE;1:LICENSING/GOVT AGENCY - EACH PROV;2:FACILITY - ALL PROV;3:INSURANCE CO - ALL PROV;4:INSURANCE CO - EACH PROV;5:INSURANCE CO - ALL PROV BY CARE UNIT;^0;2^Q
"^DD",355.97,355.97,.02,3)
Enter the code that describes how this id type MUST be assigned or 0 for NO minimum requirements
"^DD",355.97,355.97,.02,21,0)
^.001^4^4^3031217^^^^
"^DD",355.97,355.97,.02,21,1,0)
This is the minimum level or criteria of data that MUST be used to search
"^DD",355.97,355.97,.02,21,2,0)
for this type of ID number for a provider.  If this field is zero or
"^DD",355.97,355.97,.02,21,3,0)
blank, there are no minimum data requirements to search for an ID for
"^DD",355.97,355.97,.02,21,4,0)
this id type.
"^DD",355.97,355.97,.02,"DT")
3031217
"^DD",355.97,355.97,.03,0)
X12 CODE^F^^0;3^K:$L(X)>2!($L(X)<1) X
"^DD",355.97,355.97,.03,1,0)
^.1
"^DD",355.97,355.97,.03,1,1,0)
355.97^C
"^DD",355.97,355.97,.03,1,1,1)
S ^IBE(355.97,"C",$E(X,1,30),DA)=""
"^DD",355.97,355.97,.03,1,1,2)
K ^IBE(355.97,"C",$E(X,1,30),DA)
"^DD",355.97,355.97,.03,1,1,"DT")
3051208
"^DD",355.97,355.97,.03,3)
Answer must be 1-2 characters in length.
"^DD",355.97,355.97,.03,21,0)
^^2^2^3000831^
"^DD",355.97,355.97,.03,21,1,0)
This is the X12 code that determines the qualifier to be output in the
"^DD",355.97,355.97,.03,21,2,0)
X12 data stream when reporting this type of provider ID number.
"^DD",355.97,355.97,.03,"DT")
3051208
"^DD",355.97,355.97,.04,0)
FACILITY'S DEFAULT ID #^F^^0;4^K:$L(X)>15!($L(X)<1) X
"^DD",355.97,355.97,.04,3)
Answer must be 1-15 characters in length.
"^DD",355.97,355.97,.04,21,0)
^.001^3^3^3001004^^^
"^DD",355.97,355.97,.04,21,1,0)
This is the number that will be the default for all providers for the
"^DD",355.97,355.97,.04,21,2,0)
id type at the facility if no number exists for the specific
"^DD",355.97,355.97,.04,21,3,0)
provider/ins. co/care unit combination.
"^DD",355.97,355.97,.04,"DT")
3000907
"^DD",355.97,355.97,.05,0)
RESTRICT EDITING^S^0:NO;1:YES;^0;5^Q
"^DD",355.97,355.97,.05,3)
Enter 1 (YES) to prevent users from editing this id type's id #'s at the facility level
"^DD",355.97,355.97,.05,21,0)
^.001^2^2^3010207^^
"^DD",355.97,355.97,.05,21,1,0)
This field controls whether or not users may edit the id #'s for the
"^DD",355.97,355.97,.05,21,2,0)
provider type at the facility level.
"^DD",355.97,355.97,.05,"DT")
3010207
"^DD",355.97,355.97,.06,0)
VALID FOR PERFORMING PROVIDER^S^0:NO;1:YES;^0;6^Q
"^DD",355.97,355.97,.06,3)
ENTER YES (1) IF THE ID TYPE IS VALID FOR PERFORMING ID
"^DD",355.97,355.97,.06,21,0)
^^2^2^3010509^
"^DD",355.97,355.97,.06,21,1,0)
This field indicates whether the id type is valid for performing
"^DD",355.97,355.97,.06,21,2,0)
provider ids.
"^DD",355.97,355.97,.06,"DT")
3010509
"^DD",355.97,355.97,.07,0)
ALLOWABLE FORM TYPE^S^I:INSTITUTIONAL;P:PROFESSIONAL;B:BOTH INSTITUTIONAL AND PROFESSIONAL;^0;7^Q
"^DD",355.97,355.97,.07,3)
Enter I if this is used on UB type forms, P if used on CMS type forms, or B if used on either type.
"^DD",355.97,355.97,.07,21,0)
^^2^2^3060309^
"^DD",355.97,355.97,.07,21,1,0)
This is a flag used to determine what type of form this qualifier is 
"^DD",355.97,355.97,.07,21,2,0)
valid for.  It is used to validate provider id file set-up.
"^DD",355.97,355.97,.07,"DT")
3061025
"^DD",355.97,355.97,.08,0)
ACTIVE^S^1:YES;0:NO;^0;8^Q
"^DD",355.97,355.97,.08,3)
Enter YES if this entry is Active or NO if it is In-Active
"^DD",355.97,355.97,.08,21,0)
^^2^2^3060419^
"^DD",355.97,355.97,.08,21,1,0)
This field must be set to YES to allow this qualifier to be selected.  Old
"^DD",355.97,355.97,.08,21,2,0)
entries that are no longer allowed should be set to NO.
"^DD",355.97,355.97,.08,"DT")
3060419
"^DD",355.97,355.97,1.01,0)
STATE DEA#^SI^0:NO;1:YES;^1;1^Q
"^DD",355.97,355.97,1.01,3)
Enter a 1 (yes) if this is a state DEA # id type
"^DD",355.97,355.97,1.01,21,0)
^^2^2^3000907^
"^DD",355.97,355.97,1.01,21,1,0)
This is the flag that tells the system this id type is a state DEA # and
"^DD",355.97,355.97,1.01,21,2,0)
the data is stored in the NEW PERSON file by state.
"^DD",355.97,355.97,1.01,"DT")
3000907
"^DD",355.97,355.97,1.02,0)
FEDERAL DEA#^SI^0:NO;1:YES;^1;2^Q
"^DD",355.97,355.97,1.02,3)
Enter a 1 (yes) if this is a federal DEA # id type
"^DD",355.97,355.97,1.02,21,0)
^.001^2^2^3010108^^^
"^DD",355.97,355.97,1.02,21,1,0)
This is the flag that tells the system this id type is a federal DEA #
"^DD",355.97,355.97,1.02,21,2,0)
and the data is stored in the NEW PERSON file.             
"^DD",355.97,355.97,1.02,"DT")
3010108
"^DD",355.97,355.97,1.03,0)
STATE LICENSE #^SI^0:NO;1:YES;^1;3^Q
"^DD",355.97,355.97,1.03,3)
Enter a 1 (yes) if this is a state license # id type
"^DD",355.97,355.97,1.03,21,0)
^^2^2^3000907^
"^DD",355.97,355.97,1.03,21,1,0)
This is the flag that tells the system this id type is a state license #
"^DD",355.97,355.97,1.03,21,2,0)
and the data is stored in the NEW PERSON file by state.             
"^DD",355.97,355.97,1.03,"DT")
3000907
"^DD",355.97,355.97,1.04,0)
FEDERAL TAX # - FACILITY^SI^0:NO;1:YES;^1;4^Q
"^DD",355.97,355.97,1.04,3)
Enter a 1 (yes) if this is a facility federal tax id # id type
"^DD",355.97,355.97,1.04,21,0)
^.001^2^2^3001004^^
"^DD",355.97,355.97,1.04,21,1,0)
This is the flag that tells the system this id type is a facility
"^DD",355.97,355.97,1.04,21,2,0)
federal tax id and the data is stored in the IB SITE PARAMETERS file.
"^DD",355.97,355.97,1.04,"DT")
3000907
"^DD",355.97,355.97,1.05,0)
EMC ID TYPE^S^0:NO;1:YES;^1;5^Q
"^DD",355.97,355.97,1.05,3)
Enter yes if this type is for EMC ID #
"^DD",355.97,355.97,1.05,21,0)
^^1^1^3000913^
"^DD",355.97,355.97,1.05,21,1,0)
This is a flag to indicate if the record is for an EMC ID #
"^DD",355.97,355.97,1.05,"DT")
3000913
"^DD",355.97,355.97,1.06,0)
NETWORK ID TYPE^S^0:NO;1:YES;^1;6^Q
"^DD",355.97,355.97,1.06,3)
Enter yes if this type is for Network ID #
"^DD",355.97,355.97,1.06,21,0)
^^1^1^3000913^
"^DD",355.97,355.97,1.06,21,1,0)
This is a flag to indicate if the record is for a network id #.
"^DD",355.97,355.97,1.06,"DT")
3000913
"^DD",355.97,355.97,1.07,0)
PROVIDER'S OWN ID^S^0:NO;1:YES;^1;7^Q
"^DD",355.97,355.97,1.07,3)
ENTER YES (1) IF THE ID IS A PROVIDER'S PERSONAL #
"^DD",355.97,355.97,1.07,21,0)
^^2^2^3010427^
"^DD",355.97,355.97,1.07,21,1,0)
This is the flag that designates an id type is a personal # for the
"^DD",355.97,355.97,1.07,21,2,0)
provider, not assigned by the facility or an insurance co
"^DD",355.97,355.97,1.07,"DT")
3010427
"^DD",355.97,355.97,1.08,0)
STORED OUTSIDE OF BILLING^S^0:NO;1:YES;^1;8^Q
"^DD",355.97,355.97,1.08,3)
ENTER 1 IF THIS PROVIDER ID DATA IS NOT STORED IN IB FILES
"^DD",355.97,355.97,1.08,21,0)
^^2^2^3010427^
"^DD",355.97,355.97,1.08,21,1,0)
This is the flag that specifies the provider id data is not stored in an
"^DD",355.97,355.97,1.08,21,2,0)
IB file.
"^DD",355.97,355.97,1.08,"DT")
3010427
"^DD",355.97,355.97,1.09,0)
BILLING PROVIDER PRIMARY ID^S^0:NO;1:YES;^1;9^Q
"^DD",355.97,355.97,1.09,3)
Enter a 1 if this is the billing provider's primary id record
"^DD",355.97,355.97,1.09,21,0)
^^2^2^3040611^
"^DD",355.97,355.97,1.09,21,1,0)
This field is a 1 (YES) if this is the provider id type that represents
"^DD",355.97,355.97,1.09,21,2,0)
the billing provider's primary id.
"^DD",355.97,355.97,1.09,"DT")
3040611
"^DD",364.1,364.1,.06,0)
BILL TYPE^S^2:CMS-1500 (PROF);3:UB92 (INST);^0;6^Q
"^DD",364.1,364.1,.06,3)
ENTER THE TYPE OF BILL CONTAINED IN THIS BATCH
"^DD",364.1,364.1,.06,21,0)
^^1^1^2981113^
"^DD",364.1,364.1,.06,21,1,0)
THIS IS THE TYPE OF BILL THAT IS CONTAINED IN THIS BATCH
"^DD",364.1,364.1,.06,"DT")
3060928
"^DD",364.4,364.4,.05,0)
FORM TYPE^RS^1:INSTITUTIONAL (UB-92) only;2:PROFESSIONAL (CMS-1500) only;3:Both INST (UB-92) and PROF (CMS-1500);^0;5^Q
"^DD",364.4,364.4,.05,1,0)
^.1^^0
"^DD",364.4,364.4,.05,3)
Select the form type this rule will apply to
"^DD",364.4,364.4,.05,21,0)
^^1^1^2990416^
"^DD",364.4,364.4,.05,21,1,0)
This is the form type that the rule will be executed for.
"^DD",364.4,364.4,.05,"DT")
3060928
"^DD",364.4,364.4,.11,0)
TYPE OF RULE^RS^0:LIMIT TO FORM TYPE;1:LIMIT TO SOME BILL TYPES;2:MRA REQUEST RESTRICTIONS;9:LOCALLY DEFINED;^0;11^Q
"^DD",364.4,364.4,.11,1,0)
^.1
"^DD",364.4,364.4,.11,1,1,0)
364.4^AC
"^DD",364.4,364.4,.11,1,1,1)
S ^IBE(364.4,"AC",$E(X,1,30),DA)=""
"^DD",364.4,364.4,.11,1,1,2)
K ^IBE(364.4,"AC",$E(X,1,30),DA)
"^DD",364.4,364.4,.11,1,1,3)
Please don't delete
"^DD",364.4,364.4,.11,1,1,"%D",0)
^^2^2^2990420^
"^DD",364.4,364.4,.11,1,1,"%D",1,0)
This xref allows a check on all rules of the same type for conflict checking
"^DD",364.4,364.4,.11,1,1,"%D",2,0)
purposes.
"^DD",364.4,364.4,.11,1,1,"DT")
2990420
"^DD",364.4,364.4,.11,3)
Select the 'type' of rule this is.
"^DD",364.4,364.4,.11,21,0)
^^31^31^3060928^
"^DD",364.4,364.4,.11,21,1,0)
This flag puts the rule into a 'type' category for conflict checking.  It
"^DD",364.4,364.4,.11,21,2,0)
is also a flag that can indicate this rule needs to be executed to
"^DD",364.4,364.4,.11,21,3,0)
determine if an MRA request is valid for the MEDIGAP insurance that is
"^DD",364.4,364.4,.11,21,4,0)
next in line for COB or if the claim should be directly shuttled to the
"^DD",364.4,364.4,.11,21,5,0)
MEDIGAP carrier.
"^DD",364.4,364.4,.11,21,6,0)
 
"^DD",364.4,364.4,.11,21,7,0)
TYPE OF RULE = 0 (LIMIT TO FORM TYPES) is used to further limit the
"^DD",364.4,364.4,.11,21,8,0)
transmission of PROFESSIONAL (CMS-1500) or INSTITUTIONAL (UB-92) form
"^DD",364.4,364.4,.11,21,9,0)
types. If you pick one form type, no bills of the other form type will be
"^DD",364.4,364.4,.11,21,10,0)
transmitted for:
"^DD",364.4,364.4,.11,21,11,0)
a) the insurance companies you selected to include   OR
"^DD",364.4,364.4,.11,21,12,0)
b) the insurance companies not entered on the excluded list  OR
"^DD",364.4,364.4,.11,21,13,0)
c) any insurance co if all insurance companies are selected.
"^DD",364.4,364.4,.11,21,14,0)
 
"^DD",364.4,364.4,.11,21,15,0)
TYPE OF RULE = 1 (LIMIT TO SOME BILL TYPES) is used to further limit the
"^DD",364.4,364.4,.11,21,16,0)
transmission of the UB-92 equivalent of bill type (111,131,etc).  These
"^DD",364.4,364.4,.11,21,17,0)
rules can be used to restrict transmissions to specific bill types or to
"^DD",364.4,364.4,.11,21,18,0)
allow all bill types except those specified (these are entered preceeded
"^DD",364.4,364.4,.11,21,19,0)
by a dash).  A 'wild card' character of X can be used to indicate that a
"^DD",364.4,364.4,.11,21,20,0)
character in that position is included (ie 11X will allow 111,112,113,etc)
"^DD",364.4,364.4,.11,21,21,0)
The rule will not allow transmission of bills matching the EDI/MRA and
"^DD",364.4,364.4,.11,21,22,0)
PROF/INST parameters and insurance co restrictions (see rule 0 above)
"^DD",364.4,364.4,.11,21,23,0)
unless they match the allowed bill types and do not match any of the
"^DD",364.4,364.4,.11,21,24,0)
excluded bill types.
"^DD",364.4,364.4,.11,21,25,0)
 
"^DD",364.4,364.4,.11,21,26,0)
TYPE OF RULE = 9 (LOCAL EDITS) are local edits.  If this type of rule is
"^DD",364.4,364.4,.11,21,27,0)
used, the code entered for the edit must return a truth value of 1 if the
"^DD",364.4,364.4,.11,21,28,0)
bill should be transmitted or 0 if the bill should not be transmitted.
"^DD",364.4,364.4,.11,21,29,0)
The variable IBIFN is the internal entry # of the bill (file 399), the
"^DD",364.4,364.4,.11,21,30,0)
IB(x) array contains the value of fields #.03,.04,.05,.07,.11 for the
"^DD",364.4,364.4,.11,21,31,0)
rule where 'x' is the field #. IBDA is the ien of the rule (file 364.4).
"^DD",364.4,364.4,.11,"DT")
3060928
"^DD",364.5,364.5,0)
FIELD^^3^11
"^DD",364.5,364.5,0,"DDA")
N
"^DD",364.5,364.5,0,"DT")
2960311
"^DD",364.5,364.5,0,"ID",.05)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.5,364.5,0,"IX","B",364.5,.01)

"^DD",364.5,364.5,0,"NM","IB DATA ELEMENT DEFINITION")

"^DD",364.5,364.5,0,"PT",364.7,.03)

"^DD",364.5,364.5,0,"VRPK")
IB
"^DD",364.5,364.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",364.5,364.5,.01,1,0)
^.1
"^DD",364.5,364.5,.01,1,1,0)
364.5^B
"^DD",364.5,364.5,.01,1,1,1)
S ^IBA(364.5,"B",$E(X,1,30),DA)=""
"^DD",364.5,364.5,.01,1,1,2)
K ^IBA(364.5,"B",$E(X,1,30),DA)
"^DD",364.5,364.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",364.5,364.5,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.01,21,1,0)
The name to be used to uniquely identify this data element.
"^DD",364.5,364.5,.01,"DT")
2951219
"^DD",364.5,364.5,.02,0)
SECURITY LEVEL^RS^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.5,364.5,.02,21,0)
^^2^2^2960215^^^^
"^DD",364.5,364.5,.02,21,1,0)
If this field is set to N (NATIONAL,NO EDIT), this is a secured data
"^DD",364.5,364.5,.02,21,2,0)
element and will not be allowed to be edited or deleted.
"^DD",364.5,364.5,.02,"DT")
2960215
"^DD",364.5,364.5,.03,0)
TYPE OF ELEMENT^RS^F:NON-MULTIPLE FILEMAN FIELD;E:EXTRACTED VIA CODE;C:CONSTANT VALUE;^0;3^Q
"^DD",364.5,364.5,.03,1,0)
^.1
"^DD",364.5,364.5,.03,1,1,0)
^^TRIGGER^364.5^.04
"^DD",364.5,364.5,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X="FC",Y(1)=X S X=Y(0),X=X S Y=X,X=Y(1),X=X S X=X[Y I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="I" X ^DD(364.5,.03,1,1,1.4)
"^DD",364.5,364.5,.03,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.5,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,1,2)
Q
"^DD",364.5,364.5,.03,1,1,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,1,"%D",0)
^^1^1^2960215^
"^DD",364.5,364.5,.03,1,1,"%D",1,0)
If TYPE OF ELEMENT is 'F' or 'C' then ELEMENT CATEGORY must be 'I'. 
"^DD",364.5,364.5,.03,1,1,"CREATE CONDITION")
"FC"[INTERNAL(TYPE OF ELEMENT)
"^DD",364.5,364.5,.03,1,1,"CREATE VALUE")
S X="I"
"^DD",364.5,364.5,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,1,"DT")
2960215
"^DD",364.5,364.5,.03,1,1,"FIELD")
ELEMENT CATEGORY
"^DD",364.5,364.5,.03,1,2,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="F" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,2,1.4)
"^DD",364.5,364.5,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,2,2)
Q
"^DD",364.5,364.5,.03,1,2,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,2,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,2,"%D",1,0)
This triggers the FILEMAN FIELD REFERENCE field to null if the element type
"^DD",364.5,364.5,.03,1,2,"%D",2,0)
is not FILEMAN field type of element.
"^DD",364.5,364.5,.03,1,2,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="F"
"^DD",364.5,364.5,.03,1,2,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,2,"DT")
2960215
"^DD",364.5,364.5,.03,1,2,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.03,1,3,0)
^^TRIGGER^364.5^.08
"^DD",364.5,364.5,.03,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="C" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,3,1.4)
"^DD",364.5,364.5,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.5,DIG=.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,3,2)
Q
"^DD",364.5,364.5,.03,1,3,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,3,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,3,"%D",1,0)
This triggers the CONSTANT VALUE field to null if the element type is not
"^DD",364.5,364.5,.03,1,3,"%D",2,0)
CONSTANT type of element.
"^DD",364.5,364.5,.03,1,3,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="C"
"^DD",364.5,364.5,.03,1,3,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,3,"DT")
2960215
"^DD",364.5,364.5,.03,1,3,"FIELD")
CONSTANT VALUE
"^DD",364.5,364.5,.03,1,4,0)
^^TRIGGER^364.5^1
"^DD",364.5,364.5,.03,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="E" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,1)):^(1),1:"") S X=$E(Y(1),1,245),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,4,1.4)
"^DD",364.5,364.5,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),1)):^(1),1:""),DIV=X S DE=0-$L(DIH),DIU=$E(DIH,1,245),Y=$E(DIH,246,999),^(1)=$J("",$S(DE>0:DE,1:0))_DIV_$S(Y?." ":"",1:$J("",245-$L(DIV))_Y),DIH=364.5,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,4,2)
Q
"^DD",364.5,364.5,.03,1,4,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,4,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,4,"%D",1,0)
This triggers the EXTRACT CODE field to null if the element type is not an
"^DD",364.5,364.5,.03,1,4,"%D",2,0)
EXTRACTED VIA CODE type of element.
"^DD",364.5,364.5,.03,1,4,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="E"
"^DD",364.5,364.5,.03,1,4,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,4,"DT")
2960215
"^DD",364.5,364.5,.03,1,4,"FIELD")
EXTRACT CODE
"^DD",364.5,364.5,.03,21,0)
^^3^3^2951207^^
"^DD",364.5,364.5,.03,21,1,0)
The type of data element being defined as needed by one or more forms.  This
"^DD",364.5,364.5,.03,21,2,0)
field determines the type of retrieval needed to get the actual data element's
"^DD",364.5,364.5,.03,21,3,0)
value for a given bill.
"^DD",364.5,364.5,.03,"DT")
2960215
"^DD",364.5,364.5,.04,0)
ELEMENT CATEGORY^RSX^I:INDIVIDUAL ELEMENT;G:GROUP ELEMENT;^0;4^I $P($G(^IBA(364.5,DA,0)),U,3)="F",$G(X)="G" K X
"^DD",364.5,364.5,.04,1,0)
^.1
"^DD",364.5,364.5,.04,1,1,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="G" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.04,1,1,1.4)
"^DD",364.5,364.5,.04,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.04,1,1,2)
Q
"^DD",364.5,364.5,.04,1,1,"CREATE CONDITION")
INTERNAL(ELEMENT CATEGORY)="G"
"^DD",364.5,364.5,.04,1,1,"CREATE VALUE")
""
"^DD",364.5,364.5,.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.04,1,1,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.04,3)
This indicates an INDIVIDUAL or GROUP of elements will be returned.  Group is not valid for Fileman type elements.
"^DD",364.5,364.5,.04,5,1,0)
364.5^.03^1
"^DD",364.5,364.5,.04,21,0)
^^3^3^2951205^
"^DD",364.5,364.5,.04,21,1,0)
This defines whether the data element to be extracted is a single piece of data
"^DD",364.5,364.5,.04,21,2,0)
or is a string of related data.  Fileman field references must be designated as
"^DD",364.5,364.5,.04,21,3,0)
individual elements.
"^DD",364.5,364.5,.04,"DT")
2960215
"^DD",364.5,364.5,.05,0)
BASE FILE^P1'^DIC(^0;5^Q
"^DD",364.5,364.5,.05,3)
Enter the Fileman file to be used as a 'base' to extract the data from.
"^DD",364.5,364.5,.05,21,0)
^^2^2^2960311^
"^DD",364.5,364.5,.05,21,1,0)
This is the number of the Fileman file to be used as a 'base' to extract
"^DD",364.5,364.5,.05,21,2,0)
data for this field.
"^DD",364.5,364.5,.05,"DT")
2960311
"^DD",364.5,364.5,.06,0)
FILEMAN FIELD REFERENCE^FX^^0;6^K:$L(X)>65!($L(X)<1) X I $D(X),$P($G(^IBA(364.5,DA,0)),U,4)="G" K X
"^DD",364.5,364.5,.06,1,0)
^.1
"^DD",364.5,364.5,.06,1,1,0)
^^TRIGGER^364.5^.07
"^DD",364.5,364.5,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)="" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,1.4)
"^DD",364.5,364.5,.06,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,2.4)
"^DD",364.5,364.5,.06,1,1,2.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,"CREATE CONDITION")
FILEMAN FIELD REFERENCE=""
"^DD",364.5,364.5,.06,1,1,"CREATE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"DELETE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"FIELD")
#.07
"^DD",364.5,364.5,.06,3)
Must be a valid Fileman reference and ELEMENT CATEGORY must not be GROUP.
"^DD",364.5,364.5,.06,5,1,0)
364.5^.04^1
"^DD",364.5,364.5,.06,5,2,0)
364.5^.03^2
"^DD",364.5,364.5,.06,21,0)
^^6^6^2951221^^^
"^DD",364.5,364.5,.06,21,1,0)
The valid Fileman field reference or simple Fileman navigation to be used
"^DD",364.5,364.5,.06,21,2,0)
to extract using the $$GET^DIQ utility. Note this will not return true
"^DD",364.5,364.5,.06,21,3,0)
multiple entries.  Word-processing type fields are able to be retrieved,
"^DD",364.5,364.5,.06,21,4,0)
however.  No syntax check is made on this field so the user must be careful
"^DD",364.5,364.5,.06,21,5,0)
to type a valid Fileman expression.  This must be designated as an
"^DD",364.5,364.5,.06,21,6,0)
INDIVIDUAL element, not a group element.
"^DD",364.5,364.5,.06,"DT")
2951221
"^DD",364.5,364.5,.07,0)
FILEMAN RETURN FORMAT^S^I:INTERNAL;E:EXTERNAL;^0;7^Q
"^DD",364.5,364.5,.07,5,1,0)
364.5^.06^1
"^DD",364.5,364.5,.07,21,0)
^^5^5^2951205^
"^DD",364.5,364.5,.07,21,1,0)
This is the format for the retrieved data for Fileman-type data elements.  It
"^DD",364.5,364.5,.07,21,2,0)
is recommended to use Internal format whenever possible to keep the data
"^DD",364.5,364.5,.07,21,3,0)
element definitions in this file as generic as possible to avoid duplication.  
"^DD",364.5,364.5,.07,21,4,0)
The format capabilities of the forms generator should be used to interpret and
"^DD",364.5,364.5,.07,21,5,0)
reformat the data element when needed.
"^DD",364.5,364.5,.07,"DT")
2951205
"^DD",364.5,364.5,.08,0)
CONSTANT VALUE^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",364.5,364.5,.08,3)
Answer must be 1-80 characters in length.
"^DD",364.5,364.5,.08,5,1,0)
364.5^.03^3
"^DD",364.5,364.5,.08,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.08,21,1,0)
The specific value that this data element should return for this data element.
"^DD",364.5,364.5,.08,"DT")
2951205
"^DD",364.5,364.5,1,0)
EXTRACT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.5,364.5,1,3)
This is Standard MUMPS code.
"^DD",364.5,364.5,1,5,1,0)
364.5^.03^4
"^DD",364.5,364.5,1,9)
@
"^DD",364.5,364.5,1,21,0)
^^7^7^2951207^^^
"^DD",364.5,364.5,1,21,1,0)
The code to be executed by the forms generator to return the value(s) of the
"^DD",364.5,364.5,1,21,2,0)
data element.  If no ARRAY ROOT field is completed for this data element, the
"^DD",364.5,364.5,1,21,3,0)
code should set the variable IBXDATA or the array IBXDATA(1) through IBXDATA(n)
"^DD",364.5,364.5,1,21,4,0)
where n=the total # of iterations of the data element retrieved.  If the ARRAY 
"^DD",364.5,364.5,1,21,5,0)
ROOT field has been completed for this data element, this code should set the
"^DD",364.5,364.5,1,21,6,0)
variable referenced there.  IBXIEN is assumed to be the internal entry number
"^DD",364.5,364.5,1,21,7,0)
of the  file (referenced by the variable IBXFILE) entry.
"^DD",364.5,364.5,1,"DT")
2951205
"^DD",364.5,364.5,2,0)
ARRAY ROOT^F^^2;E1,50^K:$L(X)>50!($L(X)<1) X
"^DD",364.5,364.5,2,3)
Answer must be a valid array root name.
"^DD",364.5,364.5,2,21,0)
^^3^3^2960117^^
"^DD",364.5,364.5,2,21,1,0)
 The local or global base root where multiple-valued output or word processing
"^DD",364.5,364.5,2,21,2,0)
data is to be stored for this data element.  IBXDATA is the default if there
"^DD",364.5,364.5,2,21,3,0)
is no data in this field.  Example of a global array: ^TMP($J)
"^DD",364.5,364.5,2,"DT")
2960117
"^DD",364.5,364.5,3,0)
DESCRIPTION^364.53^^3;0
"^DD",364.5,364.53,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.5,364.53,0,"DT")
2951205
"^DD",364.5,364.53,0,"NM","DESCRIPTION")

"^DD",364.5,364.53,0,"UP")
364.5
"^DD",364.5,364.53,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",364.5,364.53,.01,3)
Enter a description of the data element being defined.
"^DD",364.5,364.53,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.53,.01,21,1,0)
This is a free text description of the data that this data element represents.
"^DD",364.5,364.53,.01,"DT")
2951205
"^DD",364.6,364.6,0)
FIELD^^.2^14
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3060627
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"IX","C",364.6,.1)

"^DD",364.6,364.6,0,"IX","GUS",364.6,.2)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")
 
"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.6,.2)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>30!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1
"^DD",364.6,364.6,.1,1,1,0)
364.6^C
"^DD",364.6,364.6,.1,1,1,1)
S ^IBA(364.6,"C",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.1,1,1,2)
K ^IBA(364.6,"C",$E(X,1,30),DA)
"^DD",364.6,364.6,.1,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.1,1,1,"%D",0)
^^1^1^2960123^
"^DD",364.6,364.6,.1,1,1,"%D",1,0)
Field name lookup
"^DD",364.6,364.6,.1,1,1,"DT")
2960123
"^DD",364.6,364.6,.1,3)
Answer must be 1-30 characters in length.
"^DD",364.6,364.6,.1,21,0)
^^2^2^2951207^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
2960123
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.6,364.6,.2,0)
NEW FORM DATA ELEMENT^P364.6'^IBA(364.6,^0;20^Q
"^DD",364.6,364.6,.2,1,0)
^.1
"^DD",364.6,364.6,.2,1,1,0)
364.6^GUS
"^DD",364.6,364.6,.2,1,1,1)
S ^IBA(364.6,"GUS",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.2,1,1,2)
K ^IBA(364.6,"GUS",$E(X,1,30),DA)
"^DD",364.6,364.6,.2,1,1,3)
Just a Temporary Field and Index file
"^DD",364.6,364.6,.2,1,1,"%D",0)
^^2^2^3060627^
"^DD",364.6,364.6,.2,1,1,"%D",1,0)
Just a temporary x-ref used to create the new forms.  Only for the 
"^DD",364.6,364.6,.2,1,1,"%D",2,0)
development account.
"^DD",364.6,364.6,.2,1,1,"DT")
3060627
"^DD",364.6,364.6,.2,21,0)
^^4^4^3060627^
"^DD",364.6,364.6,.2,21,1,0)
This is just a temporary field to help in the conversion from the
"^DD",364.6,364.6,.2,21,2,0)
HCFA-1500 and UB-92 forms to the new forms CMS-1500 and UB-04.  This is
"^DD",364.6,364.6,.2,21,3,0)
just a link from the old form data element to the new form data element
"^DD",364.6,364.6,.2,21,4,0)
if there is a link (old field copied into the new field).
"^DD",364.6,364.6,.2,"DT")
3060627
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399,399,.01,0)
BILL NUMBER^RFXI^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:X'?.ANP X I $D(X) K:$E(X)=" " X
"^DD",399,399,.01,1,0)
^.1
"^DD",399,399,.01,1,1,0)
399^B
"^DD",399,399,.01,1,1,1)
S ^DGCR(399,"B",$E(X,1,30),DA)=""
"^DD",399,399,.01,1,1,2)
K ^DGCR(399,"B",$E(X,1,30),DA)
"^DD",399,399,.01,1,3,0)
^^TRIGGER^399^1
"^DD",399,399,.01,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,1)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(399,.01,1,3,1.4)
"^DD",399,399,.01,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"S")),DIV=X S $P(^("S"),U,1)=DIV,DIH=399,DIG=1 D ^DICR
"^DD",399,399,.01,1,3,2)
Q
"^DD",399,399,.01,1,3,"CREATE CONDITION")
DATE ENTERED=""
"^DD",399,399,.01,1,3,"CREATE VALUE")
TODAY
"^DD",399,399,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.01,1,3,"DT")
3040614
"^DD",399,399,.01,1,3,"FIELD")
#1
"^DD",399,399,.01,1,4,0)
^^TRIGGER^399^2
"^DD",399,399,.01,1,4,1)
X ^DD(399,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$S(($D(DUZ)#2):DUZ,1:"") X ^DD(399,.01,1,4,1.4)
"^DD",399,399,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,2),X=X S X=X=""
"^DD",399,399,.01,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"S")),DIV=X S $P(^("S"),U,2)=DIV,DIH=399,DIG=2 D ^DICR
"^DD",399,399,.01,1,4,2)
Q
"^DD",399,399,.01,1,4,"CREATE CONDITION")
INTERNAL(#2)=""
"^DD",399,399,.01,1,4,"CREATE VALUE")
S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",399,399,.01,1,4,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.01,1,4,"DT")
3040614
"^DD",399,399,.01,1,4,"FIELD")
#2
"^DD",399,399,.01,1,5,0)
^^TRIGGER^399^164
"^DD",399,399,.01,1,5,1)
X ^DD(399,.01,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X=$S($D(^IBE(350.9,1,1)):$P(^(1),U,6),1:"") X ^DD(399,.01,1,5,1.4)
"^DD",399,399,.01,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,14)=""
"^DD",399,399,.01,1,5,1.4)
S DIH=$G(^DGCR(399,DIV(0),"U")),DIV=X S $P(^("U"),U,14)=DIV,DIH=399,DIG=164 D ^DICR
"^DD",399,399,.01,1,5,2)
Q
"^DD",399,399,.01,1,5,"%D",0)
^^2^2^3040614^
"^DD",399,399,.01,1,5,"%D",1,0)
This will automatically store the default BC/BS PROVIDER # from the
"^DD",399,399,.01,1,5,"%D",2,0)
IB SITE PARAMETERS file into the BC/BS PROVIDER # field for this bill.
"^DD",399,399,.01,1,5,"CREATE CONDITION")
#164=""
"^DD",399,399,.01,1,5,"CREATE VALUE")
S X=$S($D(^IBE(350.9,1,1)):$P(^(1),U,6),1:"")
"^DD",399,399,.01,1,5,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.01,1,5,"DT")
3040614
"^DD",399,399,.01,1,5,"FIELD")
#164
"^DD",399,399,.01,1,6,0)
^^TRIGGER^399^.13
"^DD",399,399,.01,1,6,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=1 S DIH=$G(^DGCR(399,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=399,DIG=.13 D ^DICR
"^DD",399,399,.01,1,6,2)
Q
"^DD",399,399,.01,1,6,"CREATE VALUE")
S X=1
"^DD",399,399,.01,1,6,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.01,1,6,"DT")
3040614
"^DD",399,399,.01,1,6,"FIELD")
#.13
"^DD",399,399,.01,1,7,0)
^^TRIGGER^399^.19
"^DD",399,399,.01,1,7,1)
X ^DD(399,.01,1,7,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X=DIV S X=3 S DIH=$G(^DGCR(399,DIV(0),0)),DIV=X S $P(^(0),U,19)=DIV,DIH=399,DIG=.19 D ^DICR
"^DD",399,399,.01,1,7,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($G(^IBE(353,+$P(Y(1),U,19),0)),U)=""
"^DD",399,399,.01,1,7,2)
Q
"^DD",399,399,.01,1,7,3)
DO NOT DELETE
"^DD",399,399,.01,1,7,"%D",0)
^^1^1^3060927^
"^DD",399,399,.01,1,7,"%D",1,0)
Sets the bill's form type to a 3 (UB) when the bill is created.
"^DD",399,399,.01,1,7,"CREATE CONDITION")
FORM TYPE=""
"^DD",399,399,.01,1,7,"CREATE VALUE")
S X=3
"^DD",399,399,.01,1,7,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.01,1,7,"DT")
3060927
"^DD",399,399,.01,1,7,"FIELD")
FORM TYPE
"^DD",399,399,.01,3)
Enter the "unique" bill number for this billing episode [6 characters].
"^DD",399,399,.01,4)

"^DD",399,399,.01,21,0)
^^8^8^2940317^^^^
"^DD",399,399,.01,21,1,0)
This is the "unique" bill number assigned to this billing episode.
"^DD",399,399,.01,21,2,0)
A bill numbers consist of 6 characters.  Beginning with MAS 
"^DD",399,399,.01,21,3,0)
version 4.7 bill numbers will be determined by the Accounts Receivable
"^DD",399,399,.01,21,4,0)
module of IFCAP and returned to MCCR.  This is to provide consistency
"^DD",399,399,.01,21,5,0)
in bill numbering between the sites and CALM.  The bill numbers
"^DD",399,399,.01,21,6,0)
will be determined from entries in the AR BILL NUMBER file.  They
"^DD",399,399,.01,21,7,0)
will be in the format of PAT (Pending Account Transaction) numbers
"^DD",399,399,.01,21,8,0)
and may be used in Accounts Receivable for PAT numbers.
"^DD",399,399,.01,"DT")
3060927
"^DD",399,399,.19,0)
FORM TYPE^R*P353'^IBE(353,^0;19^S DIC("S")="N Z S Z=$G(^IBE(353,Y,2)) I $P(Z,U,2)=""P"",$P(Z,U,4)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399,.19,1,0)
^.1
"^DD",399,399,.19,1,1,0)
^^TRIGGER^399^.09
"^DD",399,399,.19,1,1,1)
X ^DD(399,.19,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X=DIV S X=5 S DIH=$G(^DGCR(399,DIV(0),0)),DIV=X S $P(^(0),U,9)=DIV,DIH=399,DIG=.09 D ^DICR
"^DD",399,399,.19,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(399,.19,1,1,69.2) S X=$P($P(Y(3),$C(59)_$P(Y(2),U,9)_":",2),$C(59))="",Y=X,X=Y(1),X=X&Y
"^DD",399,399,.19,1,1,2)
Q
"^DD",399,399,.19,1,1,69.2)
S Y(3)=$C(59)_$P($G(^DD(399,.09,0)),U,3),Y(2)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($G(^IBE(353,+Y(0),0)),U)="CMS-1500",Y(1)=$G(X)
"^DD",399,399,.19,1,1,"%D",0)
^^2^2^3060928^
"^DD",399,399,.19,1,1,"%D",1,0)
If the CMS-1500 claim form is used and no coding method defined, then set
"^DD",399,399,.19,1,1,"%D",2,0)
coding method to HCPCS
"^DD",399,399,.19,1,1,"CREATE CONDITION")
FORM TYPE="CMS-1500"&(PROCEDURE CODING METHOD="")
"^DD",399,399,.19,1,1,"CREATE VALUE")
S X=5
"^DD",399,399,.19,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.19,1,1,"DT")
3060928
"^DD",399,399,.19,1,1,"FIELD")
PROCEDURE CODING METHOD
"^DD",399,399,.19,1,2,0)
399^AREV7^MUMPS
"^DD",399,399,.19,1,2,1)
S DGRVRCAL=1
"^DD",399,399,.19,1,2,2)
S DGRVRCAL=2
"^DD",399,399,.19,1,2,3)
DO NOT DELETE
"^DD",399,399,.19,1,2,"%D",0)
^^2^2^2940214^
"^DD",399,399,.19,1,2,"%D",1,0)
Variable causes revenue codes and chrges to be re-calculated on return
"^DD",399,399,.19,1,2,"%D",2,0)
to the enter/edit billing screens.
"^DD",399,399,.19,1,2,"DT")
2920428
"^DD",399,399,.19,1,3,0)
399^AH^MUMPS
"^DD",399,399,.19,1,3,1)
D ALLID^IBCEP3(DA,.19,1)
"^DD",399,399,.19,1,3,2)
D ALLID^IBCEP3(DA,.19,2)
"^DD",399,399,.19,1,3,3)
Do not delete
"^DD",399,399,.19,1,3,"%D",0)
^.101^3^3^3000926^^^
"^DD",399,399,.19,1,3,"%D",1,0)
This cross reference determines if the change of form type requires the
"^DD",399,399,.19,1,3,"%D",2,0)
provider id's to be updated or deleted.  If it does, the update/deletion
"^DD",399,399,.19,1,3,"%D",3,0)
is performed for the claim.
"^DD",399,399,.19,1,3,"DT")
3000926
"^DD",399,399,.19,1,4,0)
399^AI^MUMPS
"^DD",399,399,.19,1,4,1)
D BILLPNS^IBCU(DA)
"^DD",399,399,.19,1,4,2)
Q
"^DD",399,399,.19,1,4,3)
Do Not Delete
"^DD",399,399,.19,1,4,"%D",0)
^.101^2^2^3050822^^
"^DD",399,399,.19,1,4,"%D",1,0)
This cross reference updates all Bill Provider #s based on the Form Type,  
"^DD",399,399,.19,1,4,"%D",2,0)
using the Insurance Companies Hospital or Professional Provider Number.  
"^DD",399,399,.19,1,4,"DT")
3020820
"^DD",399,399,.19,1,5,0)
399^AJ^MUMPS
"^DD",399,399,.19,1,5,1)
D ATTREND^IBCU1(DA,"","")
"^DD",399,399,.19,1,5,2)
D ATTREND^IBCU1(DA,"","")
"^DD",399,399,.19,1,5,3)
Do Not Delete
"^DD",399,399,.19,1,5,"%D",0)
^^14^14^3060509^
"^DD",399,399,.19,1,5,"%D",1,0)
This Mumps cross reference is used to potentially trigger 6 other fields 
"^DD",399,399,.19,1,5,"%D",2,0)
in file 399.  The fields are triggered when the insurance companies in the
"^DD",399,399,.19,1,5,"%D",3,0)
claim have flags set to use the attending or rendering physicians as the 
"^DD",399,399,.19,1,5,"%D",4,0)
billing provider secondary IDs.  The flags in file 36 are field #4.06 
"^DD",399,399,.19,1,5,"%D",5,0)
(ATT/REND ID BILL SEC ID PROF) and field 4.08 (ATT/REND ID BILL SEC ID 
"^DD",399,399,.19,1,5,"%D",6,0)
INST).
"^DD",399,399,.19,1,5,"%D",7,0)
 
"^DD",399,399,.19,1,5,"%D",8,0)
The following fields are the ones being "triggered":
"^DD",399,399,.19,1,5,"%D",9,0)
#122 PRIMARY PROVIDER #
"^DD",399,399,.19,1,5,"%D",10,0)
#123 SECONDARY PROVIDER #
"^DD",399,399,.19,1,5,"%D",11,0)
#124 TERTIARY PROVIDER #
"^DD",399,399,.19,1,5,"%D",12,0)
#128 PRIMARY ID QUALIFER
"^DD",399,399,.19,1,5,"%D",13,0)
#129 SECONDARY ID QUALIFIER
"^DD",399,399,.19,1,5,"%D",14,0)
#130 TERTIARY ID QUALIFIER 
"^DD",399,399,.19,1,5,"DT")
3060508
"^DD",399,399,.19,3)
Enter the type of claim form to be used.
"^DD",399,399,.19,5,1,0)
399^.01^7
"^DD",399,399,.19,5,2,0)
399^.27^1
"^DD",399,399,.19,5,3,0)
399^135^2
"^DD",399,399,.19,12)
Must be a printable national form type.
"^DD",399,399,.19,12.1)
S DIC("S")="N Z S Z=$G(^IBE(353,Y,2)) I $P(Z,U,2)=""P"",$P(Z,U,4)"
"^DD",399,399,.19,21,0)
^^1^1^3061003^
"^DD",399,399,.19,21,1,0)
Select the form type on which to print the bill.
"^DD",399,399,.19,23,0)
^.001^1^1^3061003^^^
"^DD",399,399,.19,23,1,0)
Critical that this field either be a 2 or a 3.
"^DD",399,399,.19,"DT")
3061003
"^DD",399,399,163,0)
TREATMENT AUTHORIZATION CODE^F^^U;13^K:$L(X)>18!($L(X)<1) X
"^DD",399,399,163,3)
Answer must be 1-18 characters in length.
"^DD",399,399,163,21,0)
^^5^5^3061012^
"^DD",399,399,163,21,1,0)
This indicates that the treatment covered by this bill has been authorized
"^DD",399,399,163,21,2,0)
by the primary payer.
"^DD",399,399,163,21,3,0)
 
"^DD",399,399,163,21,4,0)
On the CMS-1500 this is block 23, PRIOR AUTHORIZATION NUMBER.
"^DD",399,399,163,21,5,0)
On the UB-92, this is reported in FL63.
"^DD",399,399,163,"DT")
3061012
"^DD",399,399,166,0)
UNABLE TO WORK FROM^D^^U;16^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",399,399,166,3)
Enter the beginning date the patient became unable to work due to current condition.
"^DD",399,399,166,21,0)
^^3^3^3060921^
"^DD",399,399,166,21,1,0)
Enter the beginning date for the period of time that the patient could not
"^DD",399,399,166,21,2,0)
work due to the condition for which this claim is being submitted.  Printed
"^DD",399,399,166,21,3,0)
on the CMS-1500.
"^DD",399,399,166,"DT")
3060921
"^DD",399,399,167,0)
UNABLE TO WORK TO^D^^U;17^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",399,399,167,3)
Enter the ending date of the time that the patient was unable to work due to current condition.
"^DD",399,399,167,21,0)
^^3^3^3060921^
"^DD",399,399,167,21,1,0)
This is the ending date of the period of time during which the patient
"^DD",399,399,167,21,2,0)
was unable to work due to the condition for which this claim is being
"^DD",399,399,167,21,3,0)
submitted.  Used on the CMS-1500.
"^DD",399,399,167,"DT")
3060921
"^DD",399,399,230,0)
SECONDARY AUTHORIZATION CODE^FX^^U2;8^K:$L(X)>18!($L(X)<1) X
"^DD",399,399,230,3)
Answer must be 1-18 characters in length.
"^DD",399,399,230,21,0)
^^5^5^3060921^
"^DD",399,399,230,21,1,0)
This indicates that the treatment covered by this bill has been authorized
"^DD",399,399,230,21,2,0)
by the secondary payer.
"^DD",399,399,230,21,3,0)
 
"^DD",399,399,230,21,4,0)
On the CMS-1500 this is block 23, PRIOR AUTHORIZATION NUMBER.
"^DD",399,399,230,21,5,0)
On the UB-92, this is reported in FL63.
"^DD",399,399,230,"DT")
3060921
"^DD",399,399,231,0)
TERTIARY AUTHORIZATION CODE^F^^U2;9^K:$L(X)>18!($L(X)<1) X
"^DD",399,399,231,3)
Answer must be 1-18 characters in length.
"^DD",399,399,231,21,0)
^^5^5^3060921^
"^DD",399,399,231,21,1,0)
This indicates that the treatment covered by this bill has been authorized
"^DD",399,399,231,21,2,0)
by the tertiary payer.
"^DD",399,399,231,21,3,0)
 
"^DD",399,399,231,21,4,0)
On the CMS-1500 this is block 23, PRIOR AUTHORIZATION NUMBER.
"^DD",399,399,231,21,5,0)
On the UB-92, this is reported in FL63.
"^DD",399,399,231,"DT")
3060921
"^DD",399,399,236,0)
HOMEBOUND^S^0:NO;1:YES;^U2;14^Q
"^DD",399,399,236,3)
Enter yes if patient was homebound for purchased labs.
"^DD",399,399,236,21,0)
^^3^3^3060921^
"^DD",399,399,236,21,1,0)
This is the indicator to tell the CMS-1500 to print the homebound
"^DD",399,399,236,21,2,0)
statement in box 19.  Refer to the MEDICARE regulations on when to fill in
"^DD",399,399,236,21,3,0)
this field.
"^DD",399,399,236,"DT")
3060921
"^DD",399,399,237,0)
DATE LAST SEEN^D^^U2;15^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",399,399,237,3)
Enter the last date the patient was seen if care was provided by an outside provider of PT/OT or routine foot care.
"^DD",399,399,237,21,0)
^^2^2^3060921^
"^DD",399,399,237,21,1,0)
This data will print in box 19 of the CMS-1500 for printed claims.  Refer
"^DD",399,399,237,21,2,0)
to the MEDICARE regulations on when to fill in this field.
"^DD",399,399,237,"DT")
3060921
"^DD",399,399,238,0)
SPECIAL PROGRAM INDICATOR^F^^U2;16^K:$L(X)>2!($L(X)<1) X
"^DD",399,399,238,3)
The demonstration number if this is a MEDICARE special program claim.
"^DD",399,399,238,21,0)
^^3^3^3060921^^
"^DD",399,399,238,21,1,0)
This is a indicator to tell the CMS-1500 to print the statement associated
"^DD",399,399,238,21,2,0)
with the special program in box 19.  Refer to the MEDICARE regulations on
"^DD",399,399,238,21,3,0)
when to fill in this field.
"^DD",399,399,238,"DT")
3060921
"^DD",399,399,400,0)
BLOCK 31^F^^UF2;1^K:$L(X)>63!($L(X)<3) X
"^DD",399,399,400,3)
Answer must be 3-63 characters in length.
"^DD",399,399,400,21,0)
^^4^4^3060908^
"^DD",399,399,400,21,1,0)
Entry will be printed in block 31 of the CMS-1500.  This block is 3 lines
"^DD",399,399,400,21,2,0)
of 21 characters each.
"^DD",399,399,400,21,3,0)
 
"^DD",399,399,400,21,4,0)
Set up for the physicians name and number.
"^DD",399,399,400,"DT")
3060908
"^DD",399,399,401,0)
PRINT FACILITY DATA IN BOX 32^*S^1:YES;^UF2;2^Q
"^DD",399,399,401,3)
Respond YES if the facility name and address should print in box 32 of the CMS-1500 instead of 'SAME'
"^DD",399,399,401,12)
Must be a CMS-1500 form and the division must be the main division for the facility.
"^DD",399,399,401,12.1)
S DIC("S")="N Z S Z=$G(^DGCR(399,+$G(DA),0)) I $S('$G(DA):1,1:$P(Z,U,19)=2&($P($G(^IBE(350.9,1,0)),U,2)=$P($G(^DG(40.8,+$P(Z,U,22),0)),U,7)))"
"^DD",399,399,401,21,0)
^^3^3^3060908^
"^DD",399,399,401,21,1,0)
If this bill is for the facility's main division and it should always
"^DD",399,399,401,21,2,0)
print with the full name and address of the main facility in block 32
"^DD",399,399,401,21,3,0)
of the CMS-1500, this field should be set to YES (1).
"^DD",399,399,401,"DT")
3060908
"^DD",399,399,459,0)
FORM LOC 19-UNSPECIFIED DATA^F^^UF31;3^K:$L(X)>80!($L(X)<1) X
"^DD",399,399,459,3)
Answer must be 1-80 characters in length.
"^DD",399,399,459,21,0)
^^24^24^3060908^
"^DD",399,399,459,21,1,0)
This is the text that will be printed in box 19 of the CMS-1500 form
"^DD",399,399,459,21,2,0)
when there is no other place to enter the data.  This field only applies
"^DD",399,399,459,21,3,0)
to printed claims.  Electronic claims information must be entered into the
"^DD",399,399,459,21,4,0)
appropriate data fields.
"^DD",399,399,459,21,5,0)
For print claims, this data is derived from a combination of different
"^DD",399,399,459,21,6,0)
data throughout the system and is limited to 80 characters.  The hierarchy
"^DD",399,399,459,21,7,0)
for including data is as follows (until 80 characters have been used):
"^DD",399,399,459,21,8,0)
   
"^DD",399,399,459,21,9,0)
   DATE LAST SEEN and REFERRING PHYSICIAN ID# (physical therapy)
"^DD",399,399,459,21,10,0)
   X-RAY DATE (chiropractic)
"^DD",399,399,459,21,11,0)
   HOMEBOUND INDICATOR (independent lab renders an EKG or obtains specimen
"^DD",399,399,459,21,12,0)
                        from a homebound patient)
"^DD",399,399,459,21,13,0)
   NO ASSIGNMENT OF BENEFITS (if no assignment of benefits indicated)
"^DD",399,399,459,21,14,0)
   Hearing aid testing (if applicable)
"^DD",399,399,459,21,15,0)
   DENTAL SURGERY (if applicable)
"^DD",399,399,459,21,16,0)
   ATTENDING PHYSICIAN NOT HOSPICE EMPLOYEE (if applicable)
"^DD",399,399,459,21,17,0)
   LOW OSMOLAR CONTRAST MATERIAL (if applicable)
"^DD",399,399,459,21,18,0)
   SHARED POST-OP CARE TRANSITION DATE (if applicable)
"^DD",399,399,459,21,19,0)
   COMMENTS IN BOX 19 DATA FIELD
"^DD",399,399,459,21,20,0)
 
"^DD",399,399,459,21,21,0)
You will need to use the Medicare manual to determine when these data
"^DD",399,399,459,21,22,0)
elements are needed and specifically what data is to be reported.  If the
"^DD",399,399,459,21,23,0)
individual data elements cannot be entered into VistA in unique fields,
"^DD",399,399,459,21,24,0)
you will need to enter the corresponding text into the free text box 19
"^DD",399,399,459,"DT")
3060908
"^DD",399,399.0304,8,0)
PLACE OF SERVICE^P353.1'^IBE(353.1,^0;9^Q
"^DD",399,399.0304,8,3)
Enter the Place of Service appropriate for this procedure.
"^DD",399,399.0304,8,21,0)
^^2^2^3060908^
"^DD",399,399.0304,8,21,1,0)
This is the Place of Service appropriate for this Procedure.  Used only
"^DD",399,399.0304,8,21,2,0)
for the CMS-1500 claim form.
"^DD",399,399.0304,8,"DT")
3060908
"^DD",399,399.0304,9,0)
TYPE OF SERVICE^P353.2'^IBE(353.2,^0;10^Q
"^DD",399,399.0304,9,1,0)
^.1
"^DD",399,399.0304,9,1,1,0)
^^TRIGGER^399.0304^15
"^DD",399,399.0304,9,1,1,1)
X ^DD(399.0304,9,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,16),X=X S DIU=X K Y S X="" X ^DD(399.0304,9,1,1,1.4)
"^DD",399,399.0304,9,1,1,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X,I(1,0)=$S($D(D1):D1,1:""),I(0,0)=$S($D(D0):D0,1:""),D0=Y(0) S:'$D(^IBE(353.2,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(353.2,D0,0)):^(0),1:""),X=$P(Y(101),U,2)'="ANESTHESIA",D0=I(0,0),D1=I(1,0)
"^DD",399,399.0304,9,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"CP",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,16)=DIV,DIH=399.0304,DIG=15 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399.0304,9,1,1,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,16),X=X S DIU=X K Y S X="" X ^DD(399.0304,9,1,1,2.4)
"^DD",399,399.0304,9,1,1,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"CP",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,16)=DIV,DIH=399.0304,DIG=15 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399.0304,9,1,1,"CREATE CONDITION")
TYPE OF SERVICE:NAME'="ANESTHESIA"
"^DD",399,399.0304,9,1,1,"CREATE VALUE")
@
"^DD",399,399.0304,9,1,1,"DELETE VALUE")
@
"^DD",399,399.0304,9,1,1,"FIELD")
MINUTES
"^DD",399,399.0304,9,3)
Enter the Type of Service appropriate for this procedure.
"^DD",399,399.0304,9,21,0)
^^2^2^3060908^
"^DD",399,399.0304,9,21,1,0)
This is the Type of Service to be associated with this procedure.  Applies
"^DD",399,399.0304,9,21,2,0)
only to the CMS-1500 claim form.
"^DD",399,399.0304,9,"DT")
3060908
"^DD",399,399.0304,10,0)
ASSOCIATED DIAGNOSIS (1)^*P362.3'^IBA(362.3,^0;11^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0304,10,3)
Enter the diagnosis related to this procedure.
"^DD",399,399.0304,10,12)
Only Diagnosis for this bill may be chosen.
"^DD",399,399.0304,10,12.1)
S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
"^DD",399,399.0304,10,21,0)
^^2^2^3060908^
"^DD",399,399.0304,10,21,1,0)
The diagnosis most closely related to this procedure.  Used only for the
"^DD",399,399.0304,10,21,2,0)
CMS-1500, block 24e.
"^DD",399,399.0304,10,23,0)
^^1^1^2931130^^^^
"^DD",399,399.0304,10,23,1,0)
Converted from (399,304,7) with IB 2.0.
"^DD",399,399.0304,10,"DT")
3060908
"^DD",399,399.0304,11,0)
ASSOCIATED DIAGNOSIS (2)^*P362.3'^IBA(362.3,^0;12^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0304,11,3)
Enter a diagnosis related to this procedure.
"^DD",399,399.0304,11,12)
Only Diagnosis for this bill may be chosen.
"^DD",399,399.0304,11,12.1)
S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
"^DD",399,399.0304,11,21,0)
^^2^2^3060908^
"^DD",399,399.0304,11,21,1,0)
The diagnosis most closely related to this procedure.  Used only for the
"^DD",399,399.0304,11,21,2,0)
CMS-1500, block 24e.
"^DD",399,399.0304,11,"DT")
3060908
"^DD",399,399.0304,12,0)
ASSOCIATED DIAGNOSIS (3)^*P362.3'^IBA(362.3,^0;13^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0304,12,3)
Enter a diagnosis related to this procedure.
"^DD",399,399.0304,12,12)
Only Diagnosis for this bill may be chosen.
"^DD",399,399.0304,12,12.1)
S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
"^DD",399,399.0304,12,21,0)
^^2^2^3060908^
"^DD",399,399.0304,12,21,1,0)
The diagnosis most closely related to this procedure.  Used only for the
"^DD",399,399.0304,12,21,2,0)
CMS-1500, block 24e.
"^DD",399,399.0304,12,"DT")
3060908
"^DD",399,399.0304,13,0)
ASSOCIATED DIAGNOSIS (4)^*P362.3'^IBA(362.3,^0;14^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0304,13,3)
Enter a diagnosis related to this procedure.
"^DD",399,399.0304,13,12)
Only Diagnosis for this bill may be chosen.
"^DD",399,399.0304,13,12.1)
S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
"^DD",399,399.0304,13,21,0)
^^2^2^3060908^
"^DD",399,399.0304,13,21,1,0)
The diagnosis most closely related to this procedure.  Used only for the
"^DD",399,399.0304,13,21,2,0)
CMS-1500, block 24e.
"^DD",399,399.0304,13,"DT")
3060908
"^DD",399,399.0304,50.01,0)
*HCFA BOX 24K (LOCAL USE ONLY)^F^^AUX;1^K:$L(X)>15!($L(X)<1) X
"^DD",399,399.0304,50.01,3)
This field is no longer used. Answer must be 1-15 characters in length.
"^DD",399,399.0304,50.01,21,0)
^^7^7^3061013^
"^DD",399,399.0304,50.01,21,1,0)
This field is obsolete.
"^DD",399,399.0304,50.01,21,2,0)
Field contains the text to print in HCFA box 24K for this line item when
"^DD",399,399.0304,50.01,21,3,0)
the bill is printed locally only.  If anything is entered in this field,
"^DD",399,399.0304,50.01,21,4,0)
it will override any system defaults that may apply to this field.  
"^DD",399,399.0304,50.01,21,5,0)
However, this data will NEVER be transmitted electronically for the claim.
"^DD",399,399.0304,50.01,21,6,0)
If you need to submit data in this field, set the PRINT LOCAL flag on the
"^DD",399,399.0304,50.01,21,7,0)
claim so you can print and mail it from the site.
"^DD",399,399.0304,50.01,"DT")
3061013
"^DD",399,399.0304,50.02,0)
LAST XRAY DATE^D^^AUX;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",399,399.0304,50.02,3)
Enter the last date the patient had an xray (for chiropractics only)
"^DD",399,399.0304,50.02,21,0)
^^4^4^3060908^
"^DD",399,399.0304,50.02,21,1,0)
This is the last date the patient received an xray relating to the care
"^DD",399,399.0304,50.02,21,2,0)
for chiropractic services that are being billed.  For printed claims, this
"^DD",399,399.0304,50.02,21,3,0)
data will print on the CMS-1500 in box 19 if the specialty code of the
"^DD",399,399.0304,50.02,21,4,0)
provider of this service is 35.
"^DD",399,399.0304,50.02,"DT")
3060908
"^DD",399,399.0304,50.03,0)
ATTENDING NOT HOSPICE EMPLOYEE^S^1: ATTENDING PHYSICIAN IS NOT A HOSPICE EMPLOYEE;^AUX;3^Q
"^DD",399,399.0304,50.03,3)
Enter a 1 if billing for hospice care and the attending physician is not employed by the hospice.
"^DD",399,399.0304,50.03,21,0)
^^3^3^3060908^
"^DD",399,399.0304,50.03,21,1,0)
This is the flag that indicates that an attending physician for hospice
"^DD",399,399.0304,50.03,21,2,0)
care charges was not employed by the hospice.  For printed claims, this
"^DD",399,399.0304,50.03,21,3,0)
data will print on the CMS-1500 in box 19
"^DD",399,399.0304,50.03,"DT")
3060908
"^DD",399,399.0304,50.04,0)
LEVEL OF SUBLUXATION^F^^AUX;4^K:$L(X)>7!($L(X)<2)!'(X?2.3E1"-"2.3E!(X?2.3E&(X'["-"))) X
"^DD",399,399.0304,50.04,3)
Enter a single level or begin and ending levels separated by "-". Answer must be 2-7 characters in length.
"^DD",399,399.0304,50.04,21,0)
^^6^6^3060908^
"^DD",399,399.0304,50.04,21,1,0)
This is the level or begin-end range of subluxation (dislocation) assigned
"^DD",399,399.0304,50.04,21,2,0)
to this patient (for chiropractic care billing).  A single value can be
"^DD",399,399.0304,50.04,21,3,0)
entered as 2-3 characters or a range can be entered as begin_level dash
"^DD",399,399.0304,50.04,21,4,0)
end_level (no spaces: A1-A4).  For printed claims, this data will print on
"^DD",399,399.0304,50.04,21,5,0)
the CMS-1500 in box 19 if the specialty code of the provider of this
"^DD",399,399.0304,50.04,21,6,0)
service is 35.
"^DD",399,399.0304,50.04,"DT")
3060908
"^DD",399,399.0304,50.05,0)
CHIRO TREATMENT SERIES NUM^NJ5,0^^AUX;5^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",399,399.0304,50.05,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",399,399.0304,50.05,21,0)
^^3^3^3060908^
"^DD",399,399.0304,50.05,21,1,0)
This is the treatment series # for the chiropractic care being billed.
"^DD",399,399.0304,50.05,21,2,0)
This will only be transmitted electronically.  This data is not printed
"^DD",399,399.0304,50.05,21,3,0)
on the CMS-1500 claim form.
"^DD",399,399.0304,50.05,"DT")
3060908
"^DD",399,399.0304,50.06,0)
CHIROPRACTIC QUANTITY^NJ5,0^^AUX;6^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",399,399.0304,50.06,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",399,399.0304,50.06,21,0)
^^3^3^3060908^
"^DD",399,399.0304,50.06,21,1,0)
This is the total number of treatments in the patient's treatment series
"^DD",399,399.0304,50.06,21,2,0)
for chiropractic services being billed.  This will only be transmitted
"^DD",399,399.0304,50.06,21,3,0)
electronically.  This data is not printed on the CMS-1500 claim form.
"^DD",399,399.0304,50.06,"DT")
3060908
"^DD",399,399.0304,50.07,0)
EPSDT FLAG^S^1:YES;^AUX;7^Q
"^DD",399,399.0304,50.07,3)
Enter a 1 if the item being billed is EPSDT related
"^DD",399,399.0304,50.07,21,0)
^^3^3^3060908^
"^DD",399,399.0304,50.07,21,1,0)
This is the field to indicate a service is EPSDT related (Early and
"^DD",399,399.0304,50.07,21,2,0)
Periodic Screen for Diagnosis and Treatment of children).
"^DD",399,399.0304,50.07,21,3,0)
For printed claims, this data will print in CMS-1500 box 24H.
"^DD",399,399.0304,50.07,"DT")
3060908
"^DD",399,399.0304,50.08,0)
SERVICE LINE COMMENT^F^^AUX;8^K:$L(X)>59!($L(X)<1) X
"^DD",399,399.0304,50.08,3)
Answer must be 1-59 characters in length
"^DD",399,399.0304,50.08,21,0)
^^12^12^3060829^
"^DD",399,399.0304,50.08,21,1,0)
Enter a free text comment as supplemental information associated
"^DD",399,399.0304,50.08,21,2,0)
with this procedure.  This text will print up to 59 characters
"^DD",399,399.0304,50.08,21,3,0)
across the shaded line of Box 24 of the CMS-1500 form.
"^DD",399,399.0304,50.08,21,4,0)
 
"^DD",399,399.0304,50.08,21,5,0)
The following qualifiers can be entered after the text when 
"^DD",399,399.0304,50.08,21,6,0)
reporting NDC units when the NDC Units are required in addition 
"^DD",399,399.0304,50.08,21,7,0)
to the HCPCS units:
"^DD",399,399.0304,50.08,21,8,0)
 
"^DD",399,399.0304,50.08,21,9,0)
F2   International Unit
"^DD",399,399.0304,50.08,21,10,0)
GR   Gram
"^DD",399,399.0304,50.08,21,11,0)
ML   Milliliter
"^DD",399,399.0304,50.08,21,12,0)
UN   Unit
"^DD",399,399.0304,50.08,"DT")
3060829
"^DD",399,399.0304,50.09,0)
SERVICE LINE COMMENT QUALIFIER^F^^AUX;9^K:$L(X)>7!($L(X)<1) X
"^DD",399,399.0304,50.09,3)
Answer must be 1-7 characters in length
"^DD",399,399.0304,50.09,21,0)
^^20^20^3060829^
"^DD",399,399.0304,50.09,21,1,0)
Enter an optional free text Qualifier.
"^DD",399,399.0304,50.09,21,2,0)
 
"^DD",399,399.0304,50.09,21,3,0)
The following qualifiers should be used when reporting the following
"^DD",399,399.0304,50.09,21,4,0)
services.
"^DD",399,399.0304,50.09,21,5,0)
 
"^DD",399,399.0304,50.09,21,6,0)
  7    Anesthesia information
"^DD",399,399.0304,50.09,21,7,0)
  ZZ   Narrative description of unspecified code
"^DD",399,399.0304,50.09,21,8,0)
  N4   National Drug Codes (NDC)
"^DD",399,399.0304,50.09,21,9,0)
  VP   Vendor Product Number Health Industry Business Communications 
"^DD",399,399.0304,50.09,21,10,0)
       Council (HIBCC) Labeling Standard
"^DD",399,399.0304,50.09,21,11,0)
  OZ   Product Number Health Care Uniform Code Council - Global Trade
"^DD",399,399.0304,50.09,21,12,0)
       Item Number (GTIN)
"^DD",399,399.0304,50.09,21,13,0)
  CTR  Contract rate
"^DD",399,399.0304,50.09,21,14,0)
 
"^DD",399,399.0304,50.09,21,15,0)
If required to report other supplemental information not listed above, 
"^DD",399,399.0304,50.09,21,16,0)
follow payer instructions for the use of a qualifier for the
"^DD",399,399.0304,50.09,21,17,0)
information being reported.  When reporting a service that does not
"^DD",399,399.0304,50.09,21,18,0)
have a qualifier, then leave this field blank.  In this case, two
"^DD",399,399.0304,50.09,21,19,0)
blank spaces will be inserted on the printed 1500 form before the
"^DD",399,399.0304,50.09,21,20,0)
service line supplemental information is displayed.
"^DD",399,399.0304,50.09,"DT")
3060829
"^DD",399,399.041,.03,0)
STATE^P5'^DIC(5,^0;3^Q
"^DD",399,399.041,.03,3)
Enter the state in which the auto accident occurred.
"^DD",399,399.041,.03,21,0)
^^1^1^3061012^
"^DD",399,399.041,.03,21,1,0)
This is the state in which the auto accident occurred.
"^DD",399,399.041,.03,"DT")
3061012
"^DD",399,399.042,.06,0)
PROCEDURE^*P81'^ICPT(^0;6^S ICPTVDT=$$BDATE^IBACSV($G(DA(1))),DIC("S")="I $$CPTACT^IBACSV(+Y,ICPTVDT)",DIC("W")="D EN^DDIOL(""   ""_$P($$CPT^IBACSV(+Y,ICPTVDT),U,2),,""?0"")" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399.042,.06,1,0)
^.1^^-1
"^DD",399,399.042,.06,1,1,0)
399^ASC1^MUMPS
"^DD",399,399.042,.06,1,1,1)
I $$RC^IBEFUNC1(DA(1),DA) S ^DGCR(399,"ASC1",$E(X,1,30),DA(1),DA)=""
"^DD",399,399.042,.06,1,1,2)
K ^DGCR(399,"ASC1",$E(X,1,30),DA(1),DA)
"^DD",399,399.042,.06,1,1,"%D",0)
^^1^1^2940310^^^^
"^DD",399,399.042,.06,1,1,"%D",1,0)
All Billable Ambulatory Surgery Codes (BASC) that have been billed.
"^DD",399,399.042,.06,1,1,"DT")
2930903
"^DD",399,399.042,.06,1,2,0)
399^ASC2^MUMPS
"^DD",399,399.042,.06,1,2,1)
I $$RC^IBEFUNC1(DA(1),DA) S ^DGCR(399,"ASC2",DA(1),$E(X,1,30),DA)=""
"^DD",399,399.042,.06,1,2,2)
K ^DGCR(399,"ASC2",DA(1),$E(X,1,30),DA)
"^DD",399,399.042,.06,1,2,"%D",0)
^^1^1^2940310^^^^
"^DD",399,399.042,.06,1,2,"%D",1,0)
All bills with charges for Billable Ambulatory Surgery Codes (BASC).
"^DD",399,399.042,.06,1,2,"DT")
2930903
"^DD",399,399.042,.06,12)
Only codes active for the date of service may be selected.
"^DD",399,399.042,.06,12.1)
S ICPTVDT=$$BDATE^IBACSV($G(DA(1))),DIC("S")="I $$CPTACT^IBACSV(+Y,ICPTVDT)",DIC("W")="D EN^DDIOL(""   ""_$P($$CPT^IBACSV(+Y,ICPTVDT),U,2),,""?0"")"
"^DD",399,399.042,.06,21,0)
^^9^9^3060908^
"^DD",399,399.042,.06,21,1,0)
This field may be used to associate the revenue code with a procedure.
"^DD",399,399.042,.06,21,2,0)
This will be needed primarily to accomodate the CMS-1500 which allows
"^DD",399,399.042,.06,21,3,0)
charges by procedure not revenue code.  The charge associated with the
"^DD",399,399.042,.06,21,4,0)
revenue code will be printed on the CMS-1500 claim form in the same line
"^DD",399,399.042,.06,21,5,0)
item as the procedure.
"^DD",399,399.042,.06,21,6,0)
 
"^DD",399,399.042,.06,21,7,0)
This field is also used for revenue codes that are for Billable Ambulatory
"^DD",399,399.042,.06,21,8,0)
Surgeries (BASC).  It identifies the CPT code of the surgery which is
"^DD",399,399.042,.06,21,9,0)
being billed for.
"^DD",399,399.042,.06,"DT")
3060908
"^DD",399,399.042,.15,0)
RX PROCEDURE^FXO^^0;15^S X=$$RXPRLOOK^IBCEU4(X) K:'X X
"^DD",399,399.042,.15,1,0)
^.1^^-1
"^DD",399,399.042,.15,1,1,0)
399.042^ACP
"^DD",399,399.042,.15,1,1,1)
S ^DGCR(399,DA(1),"RC","ACP",$E(X,1,30),DA)=""
"^DD",399,399.042,.15,1,1,2)
K ^DGCR(399,DA(1),"RC","ACP",$E(X,1,30),DA)
"^DD",399,399.042,.15,1,1,"DT")
3000210
"^DD",399,399.042,.15,2)
S Y(0)=Y S Y=Y_" - "_$P($$PRCNM^IBCSCH1($P($G(^DGCR(399,D0,"CP",+Y,0)),U)),U)
"^DD",399,399.042,.15,2.1)
S Y=Y_" - "_$P($$PRCNM^IBCSCH1($P($G(^DGCR(399,D0,"CP",+Y,0)),U)),U)
"^DD",399,399.042,.15,3)
Enter the procedure code from the procedure codes on the bill that this charge is for.
"^DD",399,399.042,.15,4)
I $$RXPRLOOK^IBCEU4(X)
"^DD",399,399.042,.15,5,1,0)
399.042^.1^2
"^DD",399,399.042,.15,5,2,0)
399.042^.11^1
"^DD",399,399.042,.15,21,0)
^^2^2^3060908^
"^DD",399,399.042,.15,21,1,0)
This is a soft pointer to the CP multiple entry for prescriptions billed on
"^DD",399,399.042,.15,21,2,0)
a CMS-1500 billing form.
"^DD",399,399.042,.15,23,0)
^^1^1^3060908^^^^
"^DD",399,399.042,.15,23,1,0)
This field is hard-set when prescriptions are auto-entered on a bill.
"^DD",399,399.042,.15,"DT")
3060908
"^DD",399.1,399.1,.16,0)
OCC RELATED TO^*S^1:EMPLOYMENT;2:AUTO ACCIDENT;3:OTHER ACCIDENT;^0;9^Q
"^DD",399.1,399.1,.16,3)
Enter the code that most accurately relates to the Occurence Code.
"^DD",399.1,399.1,.16,12)
Valid MCCR Occurrence Codes only!
"^DD",399.1,399.1,.16,12.1)
S DIC("S")="I $P(^DGCR(399.1,+DA,0),U,4)=1"
"^DD",399.1,399.1,.16,21,0)
^^2^2^3060928^
"^DD",399.1,399.1,.16,21,1,0)
Relates the Occurrence Codes to the 'Condition Related To' question on the
"^DD",399.1,399.1,.16,21,2,0)
CMS-1500, block 10.
"^DD",399.1,399.1,.16,"DT")
3060928
"^DIC",355.97,355.97,0)
IB PROVIDER ID # TYPE^355.97
"^DIC",355.97,355.97,0,"GL")
^IBE(355.97,
"^DIC",355.97,355.97,"%",0)
^1.005^^0
"^DIC",355.97,355.97,"%D",0)
^^6^6^3001129^^
"^DIC",355.97,355.97,"%D",1,0)
There can be many different kinds of provider id numbers that may need
"^DIC",355.97,355.97,"%D",2,0)
to be reported when billing for hospital and professional services. This
"^DIC",355.97,355.97,"%D",3,0)
file contains entries that will be used to classify or identify the valid
"^DIC",355.97,355.97,"%D",4,0)
kinds of provider ids that the V.A. will use.  This is needed specifically
"^DIC",355.97,355.97,"%D",5,0)
for the transmission of bills so the proper interpretation of the ID's can
"^DIC",355.97,355.97,"%D",6,0)
be made electronically.
"^DIC",355.97,"B","IB PROVIDER ID # TYPE",355.97)

"^DIC",364.5,364.5,0)
IB DATA ELEMENT DEFINITION^364.5
"^DIC",364.5,364.5,0,"GL")
^IBA(364.5,
"^DIC",364.5,364.5,"%D",0)
^^8^8^2970606^^^^
"^DIC",364.5,364.5,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.5,364.5,"%D",2,0)
 
"^DIC",364.5,364.5,"%D",3,0)
This file contains the definition of all data elements that are needed for
"^DIC",364.5,364.5,"%D",4,0)
various forms throughout the MCCR DHCP system.  It contains the 'blueprint'
"^DIC",364.5,364.5,"%D",5,0)
for how to extract the data for each data element entry.
"^DIC",364.5,364.5,"%D",6,0)
 
"^DIC",364.5,364.5,"%D",7,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.5,364.5,"%D",8,0)
NATIONAL should not be deleted or edited.
"^DIC",364.5,"B","IB DATA ELEMENT DEFINITION",364.5)

"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"BLD",6154,6)
^329
**END**
**END**
