Released XU*8*46 SEQ #65
Extracted from mail message
**KIDS**:XU*8.0*46^

**INSTALL NAME**
XU*8.0*46
"BLD",147,0)
XU*8.0*46^KERNEL^0^^n
"BLD",147,1,0)
^^86^86^2980427^
"BLD",147,1,1,0)
                     XU*8*46 - Jump Problems and XQUIT
"BLD",147,1,2,0)
 
"BLD",147,1,3,0)
     There are no associated patches.
"BLD",147,1,4,0)
 
"BLD",147,1,5,0)
     This patch contains 22 routines, a new Kernel File (Menu Systen Quick
"BLD",147,1,6,0)
Help), 13 Help Frames, and 3 Options; which fix a couple of problems with
"BLD",147,1,7,0)
jumping.  Under certain circumstances the Entry Action and Header would
"BLD",147,1,8,0)
not be executed for the parent option of a secondary menu tree and the
"BLD",147,1,9,0)
XUCOMMAND option which is the parent of the Common Options.  In addition,
"BLD",147,1,10,0)
the headers were occasionally executed before the entry action rather than
"BLD",147,1,11,0)
after the entry action, the latter always being the correct sequence.
"BLD",147,1,12,0)
[NOIS DAY-0994-40200, SPO-0597-50637]
"BLD",147,1,13,0)
 
"BLD",147,1,14,0)
     This patch also synchronizes the single uparrow jump ("^") and the
"BLD",147,1,15,0)
double uparrow or rubber-band jump ("^^") so that both react the same
"BLD",147,1,16,0)
when the variable XQUIT is set during the execution of an Entry Action.
"BLD",147,1,17,0)
[NOIS DAY-0596-41019].
"BLD",147,1,18,0)
 
"BLD",147,1,19,0)
     The  program ^XQDATE has been modified to correct a flaw that could
"BLD",147,1,20,0)
make time stand still by not cleaning up after itself.
"BLD",147,1,21,0)
[NOIS BRX-0498-10234, CMO-0498-40588].
"BLD",147,1,22,0)
 
"BLD",147,1,23,0)
 
"BLD",147,1,24,0)
     Patch 46 also includes an enhancement to XQUIT processing. If XQUIT
"BLD",147,1,25,0)
is encountered in a jump path the software will return the user to the
"BLD",147,1,26,0)
option the user jumped from rather than stopping in mid-jump.  It Also
"BLD",147,1,27,0)
required the inclusion of a Screen-based Option Editor (OPED).  Please see
"BLD",147,1,28,0)
the option "Kernel New Features Help" for a complete look at these
"BLD",147,1,29,0)
features.
"BLD",147,1,30,0)
  
"BLD",147,1,31,0)
     This patch contains the routine XQP46INI, a post install routine,
"BLD",147,1,32,0)
that may be deleted after the install.
"BLD",147,1,33,0)
 
"BLD",147,1,34,0)
==========================================================================
"BLD",147,1,35,0)
 
"BLD",147,1,36,0)
INSTALLATION: 
"BLD",147,1,37,0)
   1.  These routines may be mapped on systems that allow
"BLD",147,1,38,0)
       it so you may have to disable mapping.
"BLD",147,1,39,0)
   2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This 
"BLD",147,1,40,0)
       option will load the KIDS package onto your system.  
"BLD",147,1,41,0)
   3.  The patch has now been loaded into a Transport global on your 
"BLD",147,1,42,0)
       system. You now need to use KIDS to install the Transport global.  
"BLD",147,1,43,0)
   4.  On the KIDS menu, under the 'Installation' menu, use the following 
"BLD",147,1,44,0)
       options: 
"BLD",147,1,45,0)
          Print Transport Global 
"BLD",147,1,46,0)
          Compare Transport Global to Current System 
"BLD",147,1,47,0)
          Verify Checksums in Transport Global 
"BLD",147,1,48,0)
          Backup a Transport Global
"BLD",147,1,49,0)
          Install Package(s) 
"BLD",147,1,50,0)
   5.  MSM Sites - Answer YES to the question 'Want to MOVE routines to 
"BLD",147,1,51,0)
       other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",147,1,52,0)
   6.  Rebuild your mapped set if necessary.
"BLD",147,1,53,0)
   7.  If users are allowed to remain on the system during installation
"BLD",147,1,54,0)
       errors may occur when the routines are loaded.
"BLD",147,1,55,0)
 
"BLD",147,1,56,0)
==========================================================================
"BLD",147,1,57,0)
 
"BLD",147,1,58,0)
 
"BLD",147,1,59,0)
               CHECK SUMS (^XTSUMBLD) AND PATCH LISTS
"BLD",147,1,60,0)
 
"BLD",147,1,61,0)
      The second line of these routines should look like this:
"BLD",147,1,62,0)
           ;;8.0;KERNEL;**[patch list]**;Jul 10, 1995
"BLD",147,1,63,0)
 
"BLD",147,1,64,0)
Program                  Before                  After
"BLD",147,1,65,0)
XQ                  14578606  **9**         14086805  **9,46**
"BLD",147,1,66,0)
XQ1                 11899807  **1,15,59,67** 11798740 **1,15,59,67,46**
"BLD",147,1,67,0)
XQ12                17600046  **9,20**      16945386  **9,20,46**
"BLD",147,1,68,0)
XQ33                 9007179  **49,73**      9049114  **49,73,46**
"BLD",147,1,69,0)
XQ41                 9107783  (no patches)   9203288  **46**
"BLD",147,1,70,0)
XQ71                13240707  (no patches)  13242248  **46**
"BLD",147,1,71,0)
XQ72                10277570  **47**        12632194  **47,46**
"BLD",147,1,72,0)
XQ72A                2885580  (no patches)   1074331  **46**
"BLD",147,1,73,0)
XQ73                 6791337  (no patches)   9215463  **46**
"BLD",147,1,74,0)
XQ75                14473337  **47**        14455067  **47,46**
"BLD",147,1,75,0)
XQ8A                 4565915  (no patches)   4621077  **46**
"BLD",147,1,76,0)
XQDATE               1671306  **71**         1673092  **71,46**
"BLD",147,1,77,0)
XQHLP               11192542  (no patches)  11275643  **46**
"BLD",147,1,78,0)
XQP46INI                   New                297767  **46**
"BLD",147,1,79,0)
XQT                 14370309  **20,47**     14403654  **20,47,46**
"BLD",147,1,80,0)
XQT1                10251041  **59**        10829937  **59,46**
"BLD",147,1,81,0)
XQT2                12236113  (no patches)  12277933  **46**
"BLD",147,1,82,0)
XQT3                12852830  (no patches)  12864808  **46**
"BLD",147,1,83,0)
XQT4                15421169  (no patches)  15441632  **46**
"BLD",147,1,84,0)
XQOPED                     New               1020766  **46**
"BLD",147,1,85,0)
XQUIT                      New               6864597  **46**
"BLD",147,1,86,0)
XQUTL                      New               3002763  **46**
"BLD",147,4,0)
^9.64PA^19.8^1
"BLD",147,4,19.8,0)
19.8
"BLD",147,4,19.8,222)
y^y^f^^n^^y^o^n
"BLD",147,4,"B",19.8,19.8)
 
"BLD",147,"ABPKG")
n
"BLD",147,"INIT")
XQP46INI
"BLD",147,"KRN",0)
^9.67PA^19^18
"BLD",147,"KRN",.4,0)
.4
"BLD",147,"KRN",.401,0)
.401
"BLD",147,"KRN",.402,0)
.402
"BLD",147,"KRN",.403,0)
.403
"BLD",147,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",147,"KRN",.403,"NM",1,0)
XQEDTOPT    FILE #19^19^0
"BLD",147,"KRN",.403,"NM","B","XQEDTOPT    FILE #19",1)
 
"BLD",147,"KRN",.5,0)
.5
"BLD",147,"KRN",.84,0)
.84
"BLD",147,"KRN",3.6,0)
3.6
"BLD",147,"KRN",3.8,0)
3.8
"BLD",147,"KRN",9.2,0)
9.2
"BLD",147,"KRN",9.2,"NM",0)
^9.68A^13^13
"BLD",147,"KRN",9.2,"NM",1,0)
XUDOC NEW FEATURES*^^0
"BLD",147,"KRN",9.2,"NM",2,0)
XQUIT PROCESSING^^0
"BLD",147,"KRN",9.2,"NM",3,0)
XQUIT LEFT^^0
"BLD",147,"KRN",9.2,"NM",4,0)
XQUIT CONTROL^^0
"BLD",147,"KRN",9.2,"NM",5,0)
XQUIT MESSAGE^^0
"BLD",147,"KRN",9.2,"NM",6,0)
XQ ENTRY ACTIONS^^0
"BLD",147,"KRN",9.2,"NM",7,0)
XQ EXIT ACTIONS^^0
"BLD",147,"KRN",9.2,"NM",8,0)
XQ HEADERS^^0
"BLD",147,"KRN",9.2,"NM",9,0)
XQ XQUTL PRINT^^0
"BLD",147,"KRN",9.2,"NM",10,0)
XQ XQUTL DISPLAY^^0
"BLD",147,"KRN",9.2,"NM",11,0)
XQ OPED^^0
"BLD",147,"KRN",9.2,"NM",12,0)
XQ XUEDITOPT^^0
"BLD",147,"KRN",9.2,"NM",13,0)
XQ PROTECTED VARIABLES^^0
"BLD",147,"KRN",9.2,"NM","B","XQ ENTRY ACTIONS",6)
 
"BLD",147,"KRN",9.2,"NM","B","XQ EXIT ACTIONS",7)
 
"BLD",147,"KRN",9.2,"NM","B","XQ HEADERS",8)
 
"BLD",147,"KRN",9.2,"NM","B","XQ OPED",11)
 
"BLD",147,"KRN",9.2,"NM","B","XQ PROTECTED VARIABLES",13)
 
"BLD",147,"KRN",9.2,"NM","B","XQ XQUTL DISPLAY",10)
 
"BLD",147,"KRN",9.2,"NM","B","XQ XQUTL PRINT",9)
 
"BLD",147,"KRN",9.2,"NM","B","XQ XUEDITOPT",12)
 
"BLD",147,"KRN",9.2,"NM","B","XQUIT CONTROL",4)
 
"BLD",147,"KRN",9.2,"NM","B","XQUIT LEFT",3)
 
"BLD",147,"KRN",9.2,"NM","B","XQUIT MESSAGE",5)
 
"BLD",147,"KRN",9.2,"NM","B","XQUIT PROCESSING",2)
 
"BLD",147,"KRN",9.2,"NM","B","XUDOC NEW FEATURES*",1)
 
"BLD",147,"KRN",9.8,0)
9.8
"BLD",147,"KRN",9.8,"NM",0)
^9.68A^22^22
"BLD",147,"KRN",9.8,"NM",1,0)
XQ72^^0^B36845251
"BLD",147,"KRN",9.8,"NM",2,0)
XQ72A^^0^B1478345
"BLD",147,"KRN",9.8,"NM",3,0)
XQ73^^0^B24501007
"BLD",147,"KRN",9.8,"NM",4,0)
XQ75^^0^B27619168
"BLD",147,"KRN",9.8,"NM",5,0)
XQ^^0^B23720539
"BLD",147,"KRN",9.8,"NM",6,0)
XQ41^^0^B13431676
"BLD",147,"KRN",9.8,"NM",7,0)
XQ8A^^0^B6559104
"BLD",147,"KRN",9.8,"NM",8,0)
XQHLP^^0^B16266682
"BLD",147,"KRN",9.8,"NM",9,0)
XQT^^0^B26152932
"BLD",147,"KRN",9.8,"NM",10,0)
XQT1^^0^B19157710
"BLD",147,"KRN",9.8,"NM",11,0)
XQT2^^0^B17251738
"BLD",147,"KRN",9.8,"NM",12,0)
XQT3^^0^B17316192
"BLD",147,"KRN",9.8,"NM",13,0)
XQT4^^0^B24899015
"BLD",147,"KRN",9.8,"NM",14,0)
XQ12^^0^B34860436
"BLD",147,"KRN",9.8,"NM",15,0)
XQ71^^0^B18569717
"BLD",147,"KRN",9.8,"NM",16,0)
XQUIT^^0^B16679426
"BLD",147,"KRN",9.8,"NM",17,0)
XQOPED^^0^B3479481
"BLD",147,"KRN",9.8,"NM",18,0)
XQUTL^^0^B9109859
"BLD",147,"KRN",9.8,"NM",19,0)
XQ1^^0^B29654176
"BLD",147,"KRN",9.8,"NM",20,0)
XQ33^^0^B11485714
"BLD",147,"KRN",9.8,"NM",21,0)
XQDATE^^0^B2369433
"BLD",147,"KRN",9.8,"NM",22,0)
XQP46INI^^0^B445503
"BLD",147,"KRN",9.8,"NM","B","XQ",5)
 
"BLD",147,"KRN",9.8,"NM","B","XQ1",19)
 
"BLD",147,"KRN",9.8,"NM","B","XQ12",14)
 
"BLD",147,"KRN",9.8,"NM","B","XQ33",20)
 
"BLD",147,"KRN",9.8,"NM","B","XQ41",6)
 
"BLD",147,"KRN",9.8,"NM","B","XQ71",15)
 
"BLD",147,"KRN",9.8,"NM","B","XQ72",1)
 
"BLD",147,"KRN",9.8,"NM","B","XQ72A",2)
 
"BLD",147,"KRN",9.8,"NM","B","XQ73",3)
 
"BLD",147,"KRN",9.8,"NM","B","XQ75",4)
 
"BLD",147,"KRN",9.8,"NM","B","XQ8A",7)
 
"BLD",147,"KRN",9.8,"NM","B","XQDATE",21)
 
"BLD",147,"KRN",9.8,"NM","B","XQHLP",8)
 
"BLD",147,"KRN",9.8,"NM","B","XQOPED",17)
 
"BLD",147,"KRN",9.8,"NM","B","XQP46INI",22)
 
"BLD",147,"KRN",9.8,"NM","B","XQT",9)
 
"BLD",147,"KRN",9.8,"NM","B","XQT1",10)
 
"BLD",147,"KRN",9.8,"NM","B","XQT2",11)
 
"BLD",147,"KRN",9.8,"NM","B","XQT3",12)
 
"BLD",147,"KRN",9.8,"NM","B","XQT4",13)
 
"BLD",147,"KRN",9.8,"NM","B","XQUIT",16)
 
"BLD",147,"KRN",9.8,"NM","B","XQUTL",18)
 
"BLD",147,"KRN",19,0)
19
"BLD",147,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",147,"KRN",19,"NM",1,0)
XUMAINT^^2
"BLD",147,"KRN",19,"NM",2,0)
XUKERNEL^^2
"BLD",147,"KRN",19,"NM",3,0)
XQOPED^^0
"BLD",147,"KRN",19,"NM",4,0)
XUTIME^^0
"BLD",147,"KRN",19,"NM",5,0)
XUVERSIONEW-HELP^^0
"BLD",147,"KRN",19,"NM","B","XQOPED",3)
 
"BLD",147,"KRN",19,"NM","B","XUKERNEL",2)
 
"BLD",147,"KRN",19,"NM","B","XUMAINT",1)
 
"BLD",147,"KRN",19,"NM","B","XUTIME",4)
 
"BLD",147,"KRN",19,"NM","B","XUVERSIONEW-HELP",5)
 
"BLD",147,"KRN",19.1,0)
19.1
"BLD",147,"KRN",101,0)
101
"BLD",147,"KRN",409.61,0)
409.61
"BLD",147,"KRN",771,0)
771
"BLD",147,"KRN",869.2,0)
869.2
"BLD",147,"KRN",870,0)
870
"BLD",147,"KRN",8994,0)
8994
"BLD",147,"KRN","B",.4,.4)
 
"BLD",147,"KRN","B",.401,.401)
 
"BLD",147,"KRN","B",.402,.402)
 
"BLD",147,"KRN","B",.403,.403)
 
"BLD",147,"KRN","B",.5,.5)
 
"BLD",147,"KRN","B",.84,.84)
 
"BLD",147,"KRN","B",3.6,3.6)
 
"BLD",147,"KRN","B",3.8,3.8)
 
"BLD",147,"KRN","B",9.2,9.2)
 
"BLD",147,"KRN","B",9.8,9.8)
 
"BLD",147,"KRN","B",19,19)
 
"BLD",147,"KRN","B",19.1,19.1)
 
"BLD",147,"KRN","B",101,101)
 
"BLD",147,"KRN","B",409.61,409.61)
 
"BLD",147,"KRN","B",771,771)
 
"BLD",147,"KRN","B",869.2,869.2)
 
"BLD",147,"KRN","B",870,870)
 
"BLD",147,"KRN","B",8994,8994)
 
"BLD",147,"QUES",0)
^9.62^^
"BLD",147,"REQB",0)
^9.611^^
"DATA",19.8,1,0)
NAME
"DATA",19.8,1,1,0)
^^4^4^2980414^
"DATA",19.8,1,1,1,0)
   This field contains the unique name of the option.  It must be
"DATA",19.8,1,1,2,0)
between 3 and 30 characters and may not begin with a number.  The
"DATA",19.8,1,1,3,0)
first 2 to 4 characters should be a package prefix or a local
"DATA",19.8,1,1,4,0)
namespace.
"DATA",19.8,2,0)
MENU TEXT
"DATA",19.8,2,1,0)
^^4^4^2980414^
"DATA",19.8,2,1,1,0)
    This is the text of the option as it appears to the user.
"DATA",19.8,2,1,2,0)
It must be between 3 and 50 characters, and may not contain the 
"DATA",19.8,2,1,3,0)
up-arrow.  An effort should be made to insure that it begins
"DATA",19.8,2,1,4,0)
with a unique string to avoid another selection by the user.
"DATA",19.8,3,0)
OUT OF ORDER MESSAGE
"DATA",19.8,3,1,0)
^^4^4^2980414^
"DATA",19.8,3,1,1,0)
    Placing text in this field causes the menu system to consider
"DATA",19.8,3,1,2,0)
the option out of order and the user will not be able to access it.
"DATA",19.8,3,1,3,0)
The Out Of Order Message can be up to 50 characters long, and 
"DATA",19.8,3,1,4,0)
should clearly tell the user why the option is disabled.
"DATA",19.8,4,0)
LOCK
"DATA",19.8,4,1,0)
^^3^3^2980414^^
"DATA",19.8,4,1,1,0)
    This field should contain the exact name of the key that the
"DATA",19.8,4,1,2,0)
user will need to access this option.  It should correspond exactly
"DATA",19.8,4,1,3,0)
with an entry in the Security Key File.
"DATA",19.8,5,0)
REVERSE/NEGATIVE LOCK
"DATA",19.8,5,1,0)
^^3^3^2980414^^
"DATA",19.8,5,1,1,0)
    An entry here should match exactly an entry in the Security Key
"DATA",19.8,5,1,2,0)
File.  A user will be prevented from accessing this option if he or
"DATA",19.8,5,1,3,0)
she DOES hold the key specified.
"DATA",19.8,6,0)
DESCRIPTION
"DATA",19.8,6,1,0)
^^4^4^2980414^
"DATA",19.8,6,1,1,0)
   This word proccessing field must contain a brief description of
"DATA",19.8,6,1,2,0)
the option.  It will be displayed to the user when "???" is entered
"DATA",19.8,6,1,3,0)
at the menu prompt.  If you hit "Enter" or "Return" when the cursor
"DATA",19.8,6,1,4,0)
is positioned on this field you will be allowed to enter text.
"DATA",19.8,7,0)
HELP FRAME
"DATA",19.8,7,1,0)
^^4^4^2980414^
"DATA",19.8,7,1,1,0)
    An entry in this field should be the exact name of an entry in
"DATA",19.8,7,1,2,0)
the Help Frame File.  It will be displayed to the user when he or she
"DATA",19.8,7,1,3,0)
enters ?[OPTION] at the menu prompt, where [OPTION] is a unique set
"DATA",19.8,7,1,4,0)
of characters from the beginning of the Menu Text.
"DATA",19.8,8,0)
TIMES/DAYS PROHIBITED
"DATA",19.8,8,1,0)
^^4^4^2980414^^
"DATA",19.8,8,1,1,0)
    This subfile contains the days and times during which the user
"DATA",19.8,8,1,2,0)
will not be allowed access to the option.  It is typically used to
"DATA",19.8,8,1,3,0)
bar access to resource intensive options during peak times of the 
"DATA",19.8,8,1,4,0)
day or week.
"DATA",19.8,9,0)
TIMES PROHIBITED
"DATA",19.8,9,1,0)
^^4^4^2980414^
"DATA",19.8,9,1,1,0)
    Time ranges are entered in the form NNNN-NNNN.  For instance, the
"DATA",19.8,9,1,2,0)
range 0800-1630 means from 8 AM to 4:30 PM.  If no days are entered in
"DATA",19.8,9,1,3,0)
the corresponding field of the subfile then the range applies to all
"DATA",19.8,9,1,4,0)
days of the week.  Notice this is "military time" from 0000 to 2359.
"DATA",19.8,10,0)
DAYS PROHIBITED
"DATA",19.8,10,1,0)
^^4^4^2980414^
"DATA",19.8,10,1,1,0)
    Days entered in this field of the subfile will combine with the
"DATA",19.8,10,1,2,0)
times entered in the other field to specify when prohibition is in 
"DATA",19.8,10,1,3,0)
effect.  Days are entered by using the first 2 letters of the day.
"DATA",19.8,10,1,4,0)
You may enter a series of days, e.g., MO,WE,FR, or a range, MO-FR.
"DATA",19.8,11,0)
TYPE
"DATA",19.8,11,1,0)
^^4^4^2980414^^
"DATA",19.8,11,1,1,0)
    This field is required and specifies the type of option.  Choose
"DATA",19.8,11,1,2,0)
A = Action     E = Edit        I = Inquire     M = Menu
"DATA",19.8,11,1,3,0)
P = Print      R = Run Routine O = Protocol    Q = Protocol Menu
"DATA",19.8,11,1,4,0)
S = Server     L = Limited     C = ScreenMan   X = Extended Action
"DATA",19.8,12,0)
MENU
"DATA",19.8,12,1,0)
^^4^4^2980414^^
"DATA",19.8,12,1,1,0)
    The Menu Multiple contains a set of options grouped under that
"DATA",19.8,12,1,2,0)
menu or a set of protocols to be executed in the case of the XQOR
"DATA",19.8,12,1,3,0)
options (Protocol, Protocol Menu, Limited, or Extended Action).
"DATA",19.8,12,1,4,0)
Each entry may also have an optional synonym and a display order.
"DATA",19.8,13,0)
ITEM
"DATA",19.8,13,1,0)
^^3^3^2980414^^
"DATA",19.8,13,1,1,0)
    The entry in this field points to an entry in the Option File.  As
"DATA",19.8,13,1,2,0)
such it must be an exact match of an entry in that file.  A menu-type
"DATA",19.8,13,1,3,0)
option will display the entries listed in this field.
"DATA",19.8,14,0)
SYNONYM
"DATA",19.8,14,1,0)
^^4^4^2980414^
"DATA",19.8,14,1,1,0)
    A synonym is an abreviation of an option which is 1 to 4 characters
"DATA",19.8,14,1,2,0)
in length.  It is a valuable tool, especially when using the up-arrow
"DATA",19.8,14,1,3,0)
jump.  Options can be selected with the synonym as well as the menu
"DATA",19.8,14,1,4,0)
text.  It is very important to insure that the synonym is unique.
"DATA",19.8,15,0)
DISPLAY ORDER
"DATA",19.8,15,1,0)
^^4^4^2980414^^
"DATA",19.8,15,1,1,0)
    The display order is a number between 1 and 999.  It tells the menu
"DATA",19.8,15,1,2,0)
System the order in which the options entered in the item field are
"DATA",19.8,15,1,3,0)
to be displayed.  The numbers need not be cronological: 1 will display
"DATA",19.8,15,1,4,0)
before 2 as well as 10, and 999 will be the last.
"DATA",19.8,16,0)
DELEGABLE
"DATA",19.8,16,1,0)
^^4^4^2980414^^
"DATA",19.8,16,1,1,0)
    If you choose to make this option not delegable you may enter an
"DATA",19.8,16,1,2,0)
"n" in this field.  In general, you probably don't want to.  The
"DATA",19.8,16,1,3,0)
delegation software (XQSMD) allows options to be assigned to users
"DATA",19.8,16,1,4,0)
by specified individuals unless this field is set to "no".
"DATA",19.8,17,0)
ENTRY ACTION
"DATA",19.8,17,1,0)
^^2^2^2980414^^
"DATA",19.8,17,1,1,0)
    This field must contain valid M code which will be executed by
"DATA",19.8,17,1,2,0)
the Menu System when the option is first invoked.  
"DATA",19.8,18,0)
EXIT ACTION
"DATA",19.8,18,1,0)
^^3^3^2980414^^
"DATA",19.8,18,1,1,0)
    The Exit Action is always executed when a user leaves an option.
"DATA",19.8,18,1,2,0)
It must be valid M code.  As a user moves up or down the menu tree
"DATA",19.8,18,1,3,0)
the Exit Action is executed.
"DATA",19.8,19,0)
XQUIT MESSAGE
"DATA",19.8,19,1,0)
^^4^4^2980414^
"DATA",19.8,19,1,1,0)
    When an Entry Action is executed the Menu System checks to see
"DATA",19.8,19,1,2,0)
if the variable XQUIT has been set.  XQUIT signals the Menu System 
"DATA",19.8,19,1,3,0)
to proceed no farther. If there is a message in this this field it
"DATA",19.8,19,1,4,0)
will be substituted for the generic message.  See XQUIT EXECUTABLE.
"DATA",19.8,20,0)
XQUIT EXECUTABLE
"DATA",19.8,20,1,0)
^^4^4^2980414^
"DATA",19.8,20,1,1,0)
    If the XQUIT variable is defined by an Entry Action, the
"DATA",19.8,20,1,2,0)
The Menu System stops and control is passed to this executable,
"DATA",19.8,20,1,3,0)
if it exsists.  If XQUIT is cleared by this code then the Menu
"DATA",19.8,20,1,4,0)
System proceeds as originally instructed.
"DATA",19.8,21,0)
HEADER
"DATA",19.8,21,1,0)
^^4^4^2980414^
"DATA",19.8,21,1,1,0)
    The Header is a field of executable M code that is executed
"DATA",19.8,21,1,2,0)
after the Entry Action each time an option is invoked.  It differs
"DATA",19.8,21,1,3,0)
from the Entry Action in that it is executed whenever an option is
"DATA",19.8,21,1,4,0)
accessed, whether moving up or down the menu tree.
"DATA",19.8,22,0)
ROUTINE
"DATA",19.8,22,1,0)
^^4^4^2980414^^
"DATA",19.8,22,1,1,0)
    This field contains the entry point of a routine to be run when
"DATA",19.8,22,1,2,0)
the option is invoked, in the form ^ROUTINE, or EN^ROUTINE.  After the
"DATA",19.8,22,1,3,0)
the Entry Action and the Header fields are executed the entry point
"DATA",19.8,22,1,4,0)
specified in this field is run.
"DATA",19.8,23,0)
DIC(DIC)
"DATA",19.8,23,1,0)
^^4^4^2980414^^
"DATA",19.8,23,1,1,0)
    ^DIC is the FileMan look up and edit utility.  The Variable DIC
"DATA",19.8,23,1,2,0)
is used to specify the file that is to be used.  It is set to a file
"DATA",19.8,23,1,3,0)
number, 19, for instance specifies the Option File, or an explicit
"DATA",19.8,23,1,4,0)
global root in the form ^GLOBAL( or ^GLOBAL(19,.  It is required.
"DATA",19.8,24,0)
DIC(0)
"DATA",19.8,24,1,0)
^^5^5^2980414^^
"DATA",19.8,24,1,1,0)
    This string of alphabetic characters will alter how ^DIC responds.
"DATA",19.8,24,1,2,0)
choose from: A - Ask the entry; C - X-Reference suppression off; E - 
"DATA",19.8,24,1,3,0)
Echo back; F - Forget Look up value; I - Ignore special look up; L -
"DATA",19.8,24,1,4,0)
Laygo allowed; M - Multiple indexes; N - Numbers allowed; O - Only
"DATA",19.8,24,1,5,0)
find one; Q - Question (??); S - Supress display of .01; X - Exact.
"DATA",19.8,25,0)
DIC(A)
"DATA",19.8,25,1,0)
^^4^4^2980414^^
"DATA",19.8,25,1,1,0)
    The prompt the user will see instead of the generic FileMan prompt.
"DATA",19.8,25,1,2,0)
If DIC("A")="Enter Employee to Edit: " the user would see: "Enter
"DATA",19.8,25,1,3,0)
Employee to Edit: " instead of the generic: "Select EMPLOYEE NAME: "
"DATA",19.8,25,1,4,0)
which FileMan supplys if DIC("A") is not set.  Optional.
"DATA",19.8,26,0)
DIC(B)
"DATA",19.8,26,1,0)
^^3^3^2980414^^
"DATA",19.8,26,1,1,0)
    DIC("B") is the default answer provided to the user when the look
"DATA",19.8,26,1,2,0)
up prompt is issued.  If the terminal user simply presses return then
"DATA",19.8,26,1,3,0)
the DIC("B") default value is used.  Optional.
"DATA",19.8,27,0)
DIS(S)
"DATA",19.8,27,1,0)
^^4^4^2980414^^^
"DATA",19.8,27,1,1,0)
    DIC("S") is a string of M code that FileMan executes to screen an
"DATA",19.8,27,1,2,0)
entry from selection.  This string must contain an IF statement to
"DATA",19.8,27,1,3,0)
set the value of $T.  Those entries that the IF statement sets as $T=0
"DATA",19.8,27,1,4,0)
will not be displayed or selected.  Optional.
"DATA",19.8,28,0)
DIC(W)
"DATA",19.8,28,1,0)
^^3^3^2980414^^
"DATA",19.8,28,1,1,0)
    A M command string that will be executed when DIC displays each
"DATA",19.8,28,1,2,0)
of the entries that match the user's input.  If DIC("W") is defined
"DATA",19.8,28,1,3,0)
it overrides the diplay of any identifiers of the file.  Optional.
"DATA",19.8,29,0)
JUST D
"DATA",19.8,29,1,0)
^^4^4^2980414^
"DATA",19.8,29,1,1,0)
    This variable contains the cross reference to be used in the look
"DATA",19.8,29,1,2,0)
up.  It is normally not set and the "B" cross reference is used.  If
"DATA",19.8,29,1,3,0)
D.=C then FileMan would only check user input against the "C" cross
"DATA",19.8,29,1,4,0)
reference.
"DATA",19.8,30,0)
DR(DDS)
"DATA",19.8,30,1,0)
^^3^3^2980414^^
"DATA",19.8,30,1,1,0)
    This field must contain the name of a form from the Form File
"DATA",19.8,30,1,2,0)
enclosed in square brackets, e.g. "[MY FORM]".  The form you are
"DATA",19.8,30,1,3,0)
now using, for instance, is [XQEDTOPT].
"DATA",19.8,31,0)
DDSFILE
"DATA",19.8,31,1,0)
^^3^3^2980414^^
"DATA",19.8,31,1,1,0)
    This field must contain the file number of global root of the 
"DATA",19.8,31,1,2,0)
file being displayed or edited, entered without the up-arrow, e.g.,
"DATA",19.8,31,1,3,0)
19 or DIC(19, for the Option File.
"DATA",19.8,32,0)
DDSFILE(1)
"DATA",19.8,32,1,0)
^^2^2^2980414^^
"DATA",19.8,32,1,1,0)
    This is the global root of the subfile being edited or displayed,
"DATA",19.8,32,1,2,0)
e.g., DIZ(54,201,.
"DATA",19.8,33,0)
DDSPAGE
"DATA",19.8,33,1,0)
^^4^4^2980414^^
"DATA",19.8,33,1,1,0)
   This is a page number between 1 and 999.9 with a maximum one decimal
"DATA",19.8,33,1,2,0)
digit.  It is the page number of the first page to be displayed to the 
"DATA",19.8,33,1,3,0)
user when the form is invoked.  The default, if this variable is not
"DATA",19.8,33,1,4,0)
defined is 1.  Optional.
"DATA",19.8,34,0)
DDSPARM
"DATA",19.8,34,1,0)
^^4^4^2980414^^
"DATA",19.8,34,1,1,0)
    An optional string of alphabetic characters.  Choose from:
"DATA",19.8,34,1,2,0)
     C - Return DDSCHANG=1 if the database is changed,
"DATA",19.8,34,1,3,0)
     E - Return error messages in ^TMP("DIERR",$J),
"DATA",19.8,34,1,4,0)
     S - Return DDSSAVE=1 if <PF1>S or E or EXIT or SAVE is entered.
"DATA",19.8,35,0)
DIE
"DATA",19.8,35,1,0)
^^3^3^2980414^^
"DATA",19.8,35,1,1,0)
    Enter the file number of the global root with out the up-arrow,
"DATA",19.8,35,1,2,0)
e.g., 19 or DPT(.  This specifies the file to be editied and it is 
"DATA",19.8,35,1,3,0)
required.
"DATA",19.8,36,0)
DR(DIE)
"DATA",19.8,36,1,0)
^^3^3^2980414^^
"DATA",19.8,36,1,1,0)
    Enter a string of field numbers to be edited delimited by
"DATA",19.8,36,1,2,0)
semicolons or or a bracketed input teplate name.  For example
"DATA",19.8,36,1,3,0)
.01;1;23;24;67 or [MY INPUT TEMPLATE].
"DATA",19.8,37,0)
NO UP-ARROW
"DATA",19.8,37,1,0)
^^5^5^2980414^^
"DATA",19.8,37,1,1,0)
    This optional field controls how the user may employ the up-arrow
"DATA",19.8,37,1,2,0)
while editing.  Choose from: "N" - No up-arrowing allowed.  "OUTOK" - 
"DATA",19.8,37,1,3,0)
User is allowed to exit but no branching allowed.  "BACK" - back 
"DATA",19.8,37,1,4,0)
jumping is OK but exit not allowed.  "BACKOUTOK" - Allows jumping
"DATA",19.8,37,1,5,0)
back to a previous entry and exiting.
"DATA",19.8,38,0)
DIC(DIP)
"DATA",19.8,38,1,0)
^^2^2^2980414^^
"DATA",19.8,38,1,1,0)
    This required field contains the file number or the global root
"DATA",19.8,38,1,2,0)
of the file to be printed from, e.g., 2 or DPT(.
"DATA",19.8,39,0)
JUST PG
"DATA",19.8,39,1,0)
^^3^3^2980414^^
"DATA",19.8,39,1,1,0)
    Starting page number of the print.  If it is undefined then page
"DATA",19.8,39,1,2,0)
1 is assumed.  This variable controls page numbering only, and does
"DATA",19.8,39,1,3,0)
not mean skip pages 1 and 2 if it set to 3.
"DATA",19.8,40,0)
JUST L
"DATA",19.8,40,1,0)
^^3^3^2980414^^
"DATA",19.8,40,1,1,0)
    This field should almost always be 0.  If it is set to 1 then
"DATA",19.8,40,1,2,0)
all sort criterion are ignored and the user is asked for sort ranges,
"DATA",19.8,40,1,3,0)
print fields, and the header.
"DATA",19.8,41,0)
FLDS
"DATA",19.8,41,1,0)
^^3^3^2980414^^
"DATA",19.8,41,1,1,0)
    This field should contain the field numbers to be printed delimited
"DATA",19.8,41,1,2,0)
by commas, FileMan formatting criterion, or a bracketed print template
"DATA",19.8,41,1,3,0)
name.  For example: .01;"Patient Name";C1,.02,.1 or [PRINT TEMPLATE].
"DATA",19.8,42,0)
JUST BY
"DATA",19.8,42,1,0)
^^5^5^2980414^^
"DATA",19.8,42,1,1,0)
    The by which the data are to be sorted.  It can be the number or
"DATA",19.8,42,1,2,0)
names of the fields, or it can be the bracketed name of a sort template.
"DATA",19.8,42,1,3,0)
For example: .01;C1,1 or DOB,ZIP CODE or [SORT TEMPLATE NAME].  If there
"DATA",19.8,42,1,4,0)
are multiple fields separated by commas assumes that the same comma
"DATA",19.8,42,1,5,0)
pieces in the FR and TO fields are to apply to that field.
"DATA",19.8,43,0)
JUST FR
"DATA",19.8,43,1,0)
^^3^3^2980414^^
"DATA",19.8,43,1,1,0)
    The FR field specifies the START WITH values of the SORT BY fields.
"DATA",19.8,43,1,2,0)
If, for instance, the BY field specifies ZIP CODE as the field to sort
"DATA",19.8,43,1,3,0)
by then FR might supply 90000 as the first zip code to start with.
"DATA",19.8,44,0)
JUST TO
"DATA",19.8,44,1,0)
^^4^4^2980414^^
"DATA",19.8,44,1,1,0)
    The TO variable specifies the GO TO values of the SORT BY fields.
"DATA",19.8,44,1,2,0)
If, for instance, the BY fields says to sort by ZIP CODE, and the FR
"DATA",19.8,44,1,3,0)
variable gives a starting value of 90000, the TO field might give an
"DATA",19.8,44,1,4,0)
ending value of 99999, meaning to sort the codes from 90000 to 99999.
"DATA",19.8,45,0)
HDH
"DATA",19.8,45,1,0)
^^5^5^2980414^^
"DATA",19.8,45,1,1,0)
    This field of 1 to 245 characters will appear as the header of your
"DATA",19.8,45,1,2,0)
printout.  It cannot contain quotes.  Choose from: @ if header is
"DATA",19.8,45,1,3,0)
undesired; @@ if header and formfeed are undesired; a literal string
"DATA",19.8,45,1,4,0)
to be printed as is; a line of M code that starts with a WRITE statement;
"DATA",19.8,45,1,5,0)
a bracketed print template; or 2 print templates separated by a minus.
"DATA",19.8,46,0)
DIS(1)
"DATA",19.8,46,1,0)
^^4^4^2980414^^
"DATA",19.8,46,1,1,0)
    DIS(0) is a line of M code which contains an IF statement that sets
"DATA",19.8,46,1,2,0)
$T.  If $T evaluates to 1 then the entry will be printed, if $T evaluates
"DATA",19.8,46,1,3,0)
to 0 then it will not.  This field is used to screen out entries from 
"DATA",19.8,46,1,4,0)
the print.
"DATA",19.8,47,0)
DIS(n)
"DATA",19.8,47,1,0)
^^4^4^2980414^^
"DATA",19.8,47,1,1,0)
    The DIS(n) array must be consecutive integers starting with 1, e.g.,
"DATA",19.8,47,1,2,0)
DIS(1), DIS(2), etc.  Each element of this array must contain M code
"DATA",19.8,47,1,3,0)
that sets $T.  If defined then DIS(0) (if it exists) must be true and
"DATA",19.8,47,1,4,0)
any one of the other elements of the array must be true to print.
"DATA",19.8,48,0)
IOP
"DATA",19.8,48,1,0)
^^4^4^2980414^^
"DATA",19.8,48,1,1,0)
    The ^%ZIS routine is invoked by FileMan to determine which device
"DATA",19.8,48,1,2,0)
the output should go to.  You can pre-answer the "DEVICE" prompt by
"DATA",19.8,48,1,3,0)
setting this field equal to the name of the device to which the output
"DATA",19.8,48,1,4,0)
should be directed, and the user will not then be asked.
"DATA",19.8,49,0)
DHIT
"DATA",19.8,49,1,0)
^^2^2^2980414^^
"DATA",19.8,49,1,1,0)
    This field contains a string of M code which will be executed
"DATA",19.8,49,1,2,0)
for every entry after all the fields in FLDS have been printed.
"DATA",19.8,50,0)
DIOBEG
"DATA",19.8,50,1,0)
^^2^2^2980414^^
"DATA",19.8,50,1,1,0)
    This field contains a string of M code which is executed before
"DATA",19.8,50,1,2,0)
the printout starts.
"DATA",19.8,51,0)
DIOEND
"DATA",19.8,51,1,0)
^^2^2^2980414^^
"DATA",19.8,51,1,1,0)
     DIOEND contains a string of M code that is executed after the 
"DATA",19.8,51,1,2,0)
printout is finished but before returning to the calling program.
"DATA",19.8,52,0)
DISUPNO
"DATA",19.8,52,1,0)
^^3^3^2980414^^
"DATA",19.8,52,1,1,0)
    If this field is set to 1 an no records are found within the sort
"DATA",19.8,52,1,2,0)
ranges specified for the print then the report header and the message
"DATA",19.8,52,1,3,0)
"No Records to Print" will be surpressed and not printed.
"DATA",19.8,53,0)
DIPCRIT
"DATA",19.8,53,1,0)
^^2^2^2980414^^
"DATA",19.8,53,1,1,0)
    If this variable is set to 1 then the sort criterion will be 
"DATA",19.8,53,1,2,0)
printed in the header on the first page of the report.
"DATA",19.8,54,0)
DIASKHD
"DATA",19.8,54,1,0)
^^4^4^2980414^^
"DATA",19.8,54,1,1,0)
    If this variable is defined then the user will be prompted to
"DATA",19.8,54,1,2,0)
enter a header.  Set it equal to null ("").  If it is undefined, 
"DATA",19.8,54,1,3,0)
the user will not have the opportunity to change the header on the
"DATA",19.8,54,1,4,0)
print.
"DATA",19.8,55,0)
DIC{DIQ}
"DATA",19.8,55,1,0)
^^2^2^2980414^^
"DATA",19.8,55,1,1,0)
    This is the file number or the global root, for instance 19 or
"DATA",19.8,55,1,2,0)
DPT(.  Do not use the up-arrow.  This is a required field.
"DATA",19.8,56,0)
DIQ(O)
"DATA",19.8,56,1,0)
^^1^1^2980414^^
"DATA",19.8,56,1,1,0)
If this field is set to "C" then computed fields will also be displayed.
"DATA",19.8,57,0)
SUPRESS DEV PROMPT
"DATA",19.8,57,1,0)
^^2^2^2980414^^
"DATA",19.8,57,1,1,0)
    Answer Y or N.  With the [CAPTIONED] template Yes forces output
"DATA",19.8,57,1,2,0)
to the screen.
"DATA",19.8,58,0)
IOP(Q)
"DATA",19.8,58,1,0)
^^2^2^2980414^^
"DATA",19.8,58,1,1,0)
    Enter the device upon which the Inquire-type option is to print.
"DATA",19.8,58,1,2,0)
The default device is HOME, the user's terminal screen.
"DATA",19.8,59,0)
SV BULLETIN
"DATA",19.8,59,1,0)
^^4^4^2980414^
"DATA",19.8,59,1,1,0)
    This field holds the name of the bulletin, if any, that is sent
"DATA",19.8,59,1,2,0)
when a server request mail message arrives.  It should match an entry
"DATA",19.8,59,1,3,0)
in the Bulletin File.  If blank and bulletins are not supressed then
"DATA",19.8,59,1,4,0)
the recommended default bulletin XQSERVER is used.
"DATA",19.8,60,0)
SV ACTION
"DATA",19.8,60,1,0)
^^4^4^2980414^
"DATA",19.8,60,1,1,0)
    This field tells the Menu System what to do when a server request
"DATA",19.8,60,1,2,0)
is recieved.  Choose from: R - Run server program immediately.  Q - 
"DATA",19.8,60,1,3,0)
Queue the server routine.  N - Notify the mail group that a request
"DATA",19.8,60,1,4,0)
has been recieved, but do not run it.  I - Ignore all requests.
"DATA",19.8,61,0)
SV MAIL GRP
"DATA",19.8,61,1,0)
^^3^3^2980414^^^
"DATA",19.8,61,1,1,0)
    This is the mail group associated with a given server option.  It
"DATA",19.8,61,1,2,0)
is a ponter to the Mail Group File and as such it must match exactly
"DATA",19.8,61,1,3,0)
an entry in that file.
"DATA",19.8,62,0)
SV AUDIT
"DATA",19.8,62,1,0)
^^3^3^2980414^^
"DATA",19.8,62,1,1,0)
    Answer Yes to invoke the Kernel Auditing software each time a server
"DATA",19.8,62,1,2,0)
request mail message is recieved.  Answer No to supress auditing.
"DATA",19.8,62,1,3,0)
Auditing is not normally necessary.
"DATA",19.8,63,0)
SUPRESS BULLETIN
"DATA",19.8,63,1,0)
^^2^2^2980414^^
"DATA",19.8,63,1,1,0)
    Answer Yes to supress the bulletin and not send it.  No, which is the 
"DATA",19.8,63,1,2,0)
default, means that the bulletin is sent to the specified mail group.
"DATA",19.8,64,0)
SV REPLY
"DATA",19.8,64,1,0)
^^4^4^2980414^
"DATA",19.8,64,1,1,0)
    This set of codes allows a reply to a server request message.  Choose
"DATA",19.8,64,1,2,0)
from: N - No reply is sent (the default).  E - Reply if there is an
"DATA",19.8,64,1,3,0)
error detected only.  R - Send a reply message in all cases.  It is not
"DATA",19.8,64,1,4,0)
normally necessary to send a reply, but it is useful when debugging.
"DATA",19.8,65,0)
SAVE REQUEST
"DATA",19.8,65,1,0)
^^3^3^2980414^^
"DATA",19.8,65,1,1,0)
    A 1 entered in this field will save the server request message in
"DATA",19.8,65,1,2,0)
the Postmaster's mail basket with the same name as this server option,
"DATA",19.8,65,1,3,0)
in the form S.{server option name}.
"DATA",19.8,66,0)
SV DEVICE
"DATA",19.8,66,1,0)
^^4^4^2980414^^
"DATA",19.8,66,1,1,0)
    This field may be used to limit the number of requests for this
"DATA",19.8,66,1,2,0)
particular server that will be processed at one time.  Enter the name
"DATA",19.8,66,1,3,0)
of a RESOURCE DEVICEin the Device File, and the number of resource
"DATA",19.8,66,1,4,0)
slots defined in resource device will be the limit of requests.
"DATA",19.8,67,0)
ZTSK RETENTION DAYS
"DATA",19.8,67,1,0)
^^3^3^2980414^^
"DATA",19.8,67,1,1,0)
    This is a number between 1 and 365 that tells TaskMan how long to 
"DATA",19.8,67,1,2,0)
keep the record of a server request after it has been run.  The default
"DATA",19.8,67,1,3,0)
is 14 days.
"DATA",19.8,68,0)
RPC
"DATA",19.8,68,1,0)
^^3^3^2980414^^
"DATA",19.8,68,1,1,0)
    This field is used to register the remote procedures associated with
"DATA",19.8,68,1,2,0)
a broker-type option.  It is a pointer to the Remote Procedure File, and
"DATA",19.8,68,1,3,0)
as such it must match exactly an entry in that file.
"DATA",19.8,69,0)
RPCKEY
"DATA",19.8,69,1,0)
^^3^3^2980414^^
"DATA",19.8,69,1,1,0)
    This is a key from the Security Key File which will be checked when
"DATA",19.8,69,1,2,0)
the remote procedure is requested.  If the user does not hold the key
"DATA",19.8,69,1,3,0)
then the request is denied.
"DATA",19.8,70,0)
RPC RULES
"DATA",19.8,70,1,0)
^^2^2^2980414^^
"DATA",19.8,70,1,1,0)
    This is standard M code that is executed by the broker when the 
"DATA",19.8,70,1,2,0)
remote procedure is executed.
"DATA",19.8,71,0)
EDIT RES
"DATA",19.8,71,1,0)
^^4^4^2980414^
"DATA",19.8,71,1,1,0)
   If you resond with a YES to this question a new screen will appear
"DATA",19.8,71,1,2,0)
which allows you to edit the restrictions on this option.  Restrictions
"DATA",19.8,71,1,3,0)
include locks, reverse/negative locks, time and day restrictions, output
"DATA",19.8,71,1,4,0)
restrictions, and so forth.
"DATA",19.8,72,0)
EDIT EXECUTE
"DATA",19.8,72,1,0)
^^4^4^2980414^^
"DATA",19.8,72,1,1,0)
    If you resond with a YES to this question a new screen will appear
"DATA",19.8,72,1,2,0)
(IF you have prgrammer status) which will allow you to edit the M code
"DATA",19.8,72,1,3,0)
in the Entry Action, the XQUIT Message, the XQUIT Executable, the Header,
"DATA",19.8,72,1,4,0)
and the Exit Action fields.
"DATA",19.8,73,0)
EDIT RELATED
"DATA",19.8,73,1,0)
^^4^4^2980414^^
"DATA",19.8,73,1,1,0)
    If you respond with a YES to this question another screen will appear
"DATA",19.8,73,1,2,0)
which will allow you to edit the fields related to the type of option you
"DATA",19.8,73,1,3,0)
are editing.  A Print-type option, for instance, has a header field, a
"DATA",19.8,73,1,4,0)
Run Routine option has a routine field, etc.
"DATA",19.8,74,0)
PACKAGE
"DATA",19.8,74,1,0)
^^2^2^2980414^^
"DATA",19.8,74,1,1,0)
    This field indicates the name of the package in the Package File
"DATA",19.8,74,1,2,0)
that this option is associated with.
"DATA",19.8,75,0)
PROTECTED VARIABLES
"DATA",19.8,75,1,0)
^^4^4^2980414^^
"DATA",19.8,75,1,1,0)
    This field holds a list of variables that need to be protected in
"DATA",19.8,75,1,2,0)
the event that a call is made to KILL^XUSCLEAN.  These should be
"DATA",19.8,75,1,3,0)
documented, package-wide variables.  The list is comma delimited, i.e.,
"DATA",19.8,75,1,4,0)
VAR1,VAR2,VAR3 etc.
"DATA",19.8,76,0)
DISPLAY OPTION
"DATA",19.8,76,1,0)
^^4^4^2980414^
"DATA",19.8,76,1,1,0)
    This field controls the action of the menu system after an option has
"DATA",19.8,76,1,2,0)
been run.  If a user has AUTOMENU turned on to redisplay the options in a 
"DATA",19.8,76,1,3,0)
menu after one of them has been run a "y" in this field will cause the
"DATA",19.8,76,1,4,0)
Menu System to stop and diplay the message "Press return to continue."
"DATA",19.8,77,0)
EDIT-DIC
"DATA",19.8,77,1,0)
^^4^4^2980414^
"DATA",19.8,77,1,1,0)
    Before doing an edit this option makes a call to DIC to select the 
"DATA",19.8,77,1,2,0)
file and fields that will be edited.  By answering YES to this question
"DATA",19.8,77,1,3,0)
you will be shown another page that will allow you to define the variables
"DATA",19.8,77,1,4,0)
needed for a DIC call.
"DATA",19.8,78,0)
INQ-DIC
"DATA",19.8,78,1,0)
^^5^5^2980205^
"DATA",19.8,78,1,1,0)
    Before doing an inquire this option makes a call to DIC to select the 
"DATA",19.8,78,1,2,0)
file and fields that will be edited.  By answering YES to this question
"DATA",19.8,78,1,3,0)
you will be shown another page that will allow you to define the variables
"DATA",19.8,78,1,4,0)
needed for a DIC call.  If the default is already YES then ScreenMan
"DATA",19.8,78,1,5,0)
detected no data in these fields, and you simply hit a return to see them.
"DATA",19.8,79,0)
SC-DIC
"DATA",19.8,79,1,0)
^^4^4^2980414^
"DATA",19.8,79,1,1,0)
    Before loading a form this option makes a call to DIC to select the 
"DATA",19.8,79,1,2,0)
file and fields that will be edited.  By answering YES to this question
"DATA",19.8,79,1,3,0)
you will be shown another page that will allow you to define the variables
"DATA",19.8,79,1,4,0)
needed for a DIC call.
"DATA",19.8,80,0)
DCOPIES
"DATA",19.8,80,1,0)
^^3^3^2980414^^
"DATA",19.8,80,1,1,0)
    If ^%ZIS chooses an SDP or other such linear device, and if multiple
"DATA",19.8,80,1,2,0)
copies are desired, you can call for them by setting DCOPIES equal to a
"DATA",19.8,80,1,3,0)
number greater then 1.
"DATA",19.8,81,0)
ACTION
"DATA",19.8,81,1,0)
^^4^4^2980414^^
"DATA",19.8,81,1,1,0)
    An Action-type option simply executes the various executable fields
"DATA",19.8,81,1,2,0)
assigned to all options in the option file.  It is most closely associated
"DATA",19.8,81,1,3,0)
with the Entry Action, and this field must be filed in.  The entry is
"DATA",19.8,81,1,4,0)
standard M code.
"FIA",19.8)
MENUMAN QUICK HELP
"FIA",19.8,0)
^DIC(19.8,
"FIA",19.8,0,0)
19.8
"FIA",19.8,0,1)
y^y^f^^n^^y^o^n
"FIA",19.8,0,10)
 
"FIA",19.8,0,11)
 
"FIA",19.8,0,"RLRO")
 
"FIA",19.8,0,"VR")
8.0^XU
"FIA",19.8,19.8)
0
"FIA",19.8,19.81)
0
"INIT")
XQP46INI
"KRN",.403,74,-1)
0^1
"KRN",.403,74,0)
XQEDTOPT^@^@^^2971104.1203^^Option Editor^19^0^0^1
"KRN",.403,74,11)
D IN^XQOPED
"KRN",.403,74,12)
D OUT^XQOPED
"KRN",.403,74,15,0)
^^1^1^2971203^
"KRN",.403,74,15,1,0)
   The form XQEDTOPT is the screen-based Option Editor.
"KRN",.403,74,21)
 
"KRN",.403,74,40,0)
^.4031I^21^21
"KRN",.403,74,40,1,0)
1^^1,1
"KRN",.403,74,40,1,1)
Main Page
"KRN",.403,74,40,1,11)
 
"KRN",.403,74,40,1,12)
 
"KRN",.403,74,40,1,15,0)
^^1^1^2971124^
"KRN",.403,74,40,1,15,1,0)
     This is the main starting page of the for XQEDTOPT the Option Editor.
"KRN",.403,74,40,1,40,0)
^.4032IP^293^2
"KRN",.403,74,40,1,40,288,0)
MAIN^1^4,1^e
"KRN",.403,74,40,1,40,293,0)
MAIN TITLE^2^1,1^d
"KRN",.403,74,40,2,0)
2^^1,1^^^1^17,75
"KRN",.403,74,40,2,1)
Restrictions
"KRN",.403,74,40,2,15,0)
^^2^2^2971105^
"KRN",.403,74,40,2,15,1,0)
   This page of the XQEDTOPT form has the various restrictive fields on
"KRN",.403,74,40,2,15,2,0)
it, such as locks, restricted times, etc.
"KRN",.403,74,40,2,40,0)
^.4032IP^289^1
"KRN",.403,74,40,2,40,289,0)
Restrictions^1^2,2^e
"KRN",.403,74,40,3,0)
3^^1,1^^^1^15,75
"KRN",.403,74,40,3,1)
Executables Fields
"KRN",.403,74,40,3,15,0)
^^2^2^2971105^
"KRN",.403,74,40,3,15,1,0)
     This page, "Executables" is a list of the executable fields in the
"KRN",.403,74,40,3,15,2,0)
Option File.
"KRN",.403,74,40,3,40,0)
^.4032IP^300^2
"KRN",.403,74,40,3,40,290,0)
Executable 1^1^4,1^e
"KRN",.403,74,40,3,40,300,0)
EXECUTABLES header^2^1,1^d
"KRN",.403,74,40,4,0)
1.1^^5,5
"KRN",.403,74,40,4,1)
XQEDTOPT 1.1
"KRN",.403,74,40,4,40,0)
^.4032IP^292^2
"KRN",.403,74,40,4,40,291,0)
Menu Multiple^2^4,1^e
"KRN",.403,74,40,4,40,291,2)
8^^f
"KRN",.403,74,40,4,40,292,0)
XQEDTOPT DISP1^1^1,1^d
"KRN",.403,74,40,5,0)
1.2^^1,1^1^1
"KRN",.403,74,40,5,1)
Page 1.2
"KRN",.403,74,40,5,15,0)
^^1^1^2971113^
"KRN",.403,74,40,5,15,1,0)
       This page, 1.2, contains the related fields for EDIT-type options.
"KRN",.403,74,40,5,40,0)
^.4032IP^295^2
"KRN",.403,74,40,5,40,294,0)
EDIT header^1^1,1^d
"KRN",.403,74,40,5,40,295,0)
EDIT edit block^2^5,1^e
"KRN",.403,74,40,6,0)
1.3^^1,1^1.4^1
"KRN",.403,74,40,6,1)
Page 1.3
"KRN",.403,74,40,6,15,0)
^^1^1^2971113^
"KRN",.403,74,40,6,15,1,0)
   This is page 2 of Print-type options related fields.
"KRN",.403,74,40,6,40,0)
^.4032IP^297^2
"KRN",.403,74,40,6,40,296,0)
PRINT header^1^1,1^d
"KRN",.403,74,40,6,40,297,0)
PRINT edit^2^5,1^e
"KRN",.403,74,40,7,0)
1.4^^1,1^1.3^1.3
"KRN",.403,74,40,7,1)
Page 1.4
"KRN",.403,74,40,7,15,0)
^^1^1^2971113^
"KRN",.403,74,40,7,15,1,0)
     This is page 2 of the Prnt-type option related fields.
"KRN",.403,74,40,7,40,0)
^.4032IP^299^2
"KRN",.403,74,40,7,40,298,0)
PRINT2 header^1^1,1^d
"KRN",.403,74,40,7,40,299,0)
PRINT2 edit^2^4,1^e
"KRN",.403,74,40,8,0)
1.5^^1,1
"KRN",.403,74,40,8,1)
Inquire-type option
"KRN",.403,74,40,8,40,0)
^.4032IP^302^2
"KRN",.403,74,40,8,40,301,0)
INQUIRE header^1^1,1^d
"KRN",.403,74,40,8,40,302,0)
INQUIRE edit^2^4,1^e
"KRN",.403,74,40,9,0)
1.6^^1,1^^^1^15,75
"KRN",.403,74,40,9,1)
Run Routine
"KRN",.403,74,40,9,40,0)
^.4032IP^304^2
"KRN",.403,74,40,9,40,303,0)
ROUTINE header^1^2,2^d
"KRN",.403,74,40,9,40,304,0)
ROUTINE edit^2^5,1^e
"KRN",.403,74,40,10,0)
1.7^^1,1^^^1^17,79
"KRN",.403,74,40,10,1)
Servers
"KRN",.403,74,40,10,40,0)
^.4032IP^306^2
"KRN",.403,74,40,10,40,305,0)
SERVER header^1^2,2^d
"KRN",.403,74,40,10,40,306,0)
SERVER edit^2^5,2^e
"KRN",.403,74,40,11,0)
1.8^^1,1^^^1^17,77
"KRN",.403,74,40,11,1)
ScreenMan
"KRN",.403,74,40,11,40,0)
^.4032IP^308^2
"KRN",.403,74,40,11,40,307,0)
SCREEN header^1^1,1^d
"KRN",.403,74,40,11,40,308,0)
SCREEN edit^2^4,1^e
"KRN",.403,74,40,12,0)
10.1^^1,1^^^1^15,75
"KRN",.403,74,40,12,1)
BROKER
"KRN",.403,74,40,12,40,0)
^.4032IP^311^2
"KRN",.403,74,40,12,40,309,0)
BROKER header^1^2,2^d
"KRN",.403,74,40,12,40,311,0)
BROKER edit^2^4,2^e
"KRN",.403,74,40,12,40,311,2)
5
"KRN",.403,74,40,13,0)
10.2^^1,1^^^1^15,75
"KRN",.403,74,40,13,1)
Window
"KRN",.403,74,40,13,40,0)
^.4032IP^313^2
"KRN",.403,74,40,13,40,312,0)
WINDOW header^1^2,2^d
"KRN",.403,74,40,13,40,313,0)
WINDOW edit^2^5,2^e
"KRN",.403,74,40,14,0)
10.3^^1,1^^^1^15,75
"KRN",.403,74,40,14,1)
Suites
"KRN",.403,74,40,14,40,0)
^.4032IP^315^3
"KRN",.403,74,40,14,40,313,0)
WINDOW edit^2^4,2^e
"KRN",.403,74,40,14,40,314,0)
SUITE header^1^2,2^d
"KRN",.403,74,40,14,40,315,0)
SUITE menu^3^8,2^e
"KRN",.403,74,40,14,40,315,2)
3
"KRN",.403,74,40,15,0)
2.1^^1,1^^^1^17,79
"KRN",.403,74,40,15,1)
Restricted days/times
"KRN",.403,74,40,15,15,0)
^^2^2^2971118^
"KRN",.403,74,40,15,15,1,0)
   This page is used to enter restricted days and times an option can be
"KRN",.403,74,40,15,15,2,0)
envoked.
"KRN",.403,74,40,15,40,0)
^.4032IP^317^2
"KRN",.403,74,40,15,40,316,0)
DAYS/TIMES header^1^2,2^d
"KRN",.403,74,40,15,40,317,0)
DAYS/TIMES edit^2^6,2^e
"KRN",.403,74,40,15,40,317,2)
5
"KRN",.403,74,40,16,0)
2.2^^1,1^^^1^17,79
"KRN",.403,74,40,16,1)
Page 2.2
"KRN",.403,74,40,16,40,0)
^.4032IP^319^2
"KRN",.403,74,40,16,40,318,0)
DEVICE header^1^2,2^d
"KRN",.403,74,40,16,40,319,0)
DEVICES edit^2^4,9^e
"KRN",.403,74,40,16,40,319,2)
5
"KRN",.403,74,40,17,0)
2.3^^1,1^^^1^17,79
"KRN",.403,74,40,17,1)
Queuing Required
"KRN",.403,74,40,17,40,0)
^.4032IP^321^2
"KRN",.403,74,40,17,40,320,0)
QUEUING header^1^2,2^d
"KRN",.403,74,40,17,40,321,0)
QUEUING edit^2^6,3^e
"KRN",.403,74,40,17,40,321,2)
5
"KRN",.403,74,40,18,0)
1.9^^1,1^^^1^15,75
"KRN",.403,74,40,18,1)
Action
"KRN",.403,74,40,18,40,0)
^.4032IP^323^2
"KRN",.403,74,40,18,40,322,0)
ACTION header^1^2,2^d
"KRN",.403,74,40,18,40,323,0)
ACTION edit^2^6,7^e
"KRN",.403,74,40,19,0)
11^^1,1
"KRN",.403,74,40,19,1)
Print3
"KRN",.403,74,40,19,40,0)
^.4032IP^332^5
"KRN",.403,74,40,19,40,326,0)
PRINT3 edit 2^4^11,1^e
"KRN",.403,74,40,19,40,326,2)
2
"KRN",.403,74,40,19,40,329,0)
PRINT3 header 1^1^1,1^d
"KRN",.403,74,40,19,40,330,0)
PRINT3 edit 1^2^6,1^e
"KRN",.403,74,40,19,40,330,2)
3
"KRN",.403,74,40,19,40,331,0)
PRINT3 header 2^3^8,1^d
"KRN",.403,74,40,19,40,332,0)
PRINT3 header 3^5^14,1^d
"KRN",.403,74,40,20,0)
10^^1,1^^^1^15,75
"KRN",.403,74,40,20,1)
Selection Page
"KRN",.403,74,40,20,40,0)
^.4032IP^333^1
"KRN",.403,74,40,20,40,333,0)
SELECTION edit^1^2,3^e
"KRN",.403,74,40,21,0)
4^^1,1^^^1^17,75
"KRN",.403,74,40,21,1)
DIC Look Up
"KRN",.403,74,40,21,15,0)
^^2^2^2980203^
"KRN",.403,74,40,21,15,1,0)
     This page is called by the Edit, Inquire, and ScreenMan Pages (1.2,
"KRN",.403,74,40,21,15,2,0)
1.5, and 1.9) to do the initial DIC look up.
"KRN",.403,74,40,21,40,0)
^.4032IP^336^2
"KRN",.403,74,40,21,40,336,0)
DIC Edit^2^5,2^e
"KRN",.403,74,40,21,40,337,0)
DIC Header^1^2,2^d
"KRN",.404,288,0)
MAIN^19
"KRN",.404,288,15,0)
^^2^2^2971104^
"KRN",.404,288,15,1,0)
       This block, "MAIN", has the fields that every option may have, no
"KRN",.404,288,15,2,0)
matter what it's type.
"KRN",.404,288,40,0)
^.4044I^10^10
"KRN",.404,288,40,1,0)
1^Name^3
"KRN",.404,288,40,1,1)
.01
"KRN",.404,288,40,1,2)
2,21^30^2,15
"KRN",.404,288,40,1,11)
D H^XQOPED(1)
"KRN",.404,288,40,2,0)
2^Menu Text^3
"KRN",.404,288,40,2,1)
1
"KRN",.404,288,40,2,2)
4,13^50^4,2
"KRN",.404,288,40,2,11)
D H^XQOPED(2)
"KRN",.404,288,40,3,0)
3^Description^3
"KRN",.404,288,40,3,1)
3.5
"KRN",.404,288,40,3,2)
6,15^1^6,2
"KRN",.404,288,40,3,11)
D H^XQOPED(6)
"KRN",.404,288,40,4,0)
4^Type^3
"KRN",.404,288,40,4,1)
4
"KRN",.404,288,40,4,2)
6,25^15^6,19
"KRN",.404,288,40,4,11)
D H^XQOPED(11)
"KRN",.404,288,40,4,13)
S XQTYP=X D CLEAR^XQ5
"KRN",.404,288,40,5,0)
6^Help Frame^3
"KRN",.404,288,40,5,1)
3.7
"KRN",.404,288,40,5,2)
8,14^20^8,2
"KRN",.404,288,40,5,11)
D H^XQOPED(7)
"KRN",.404,288,40,6,0)
7^Package^3
"KRN",.404,288,40,6,1)
12
"KRN",.404,288,40,6,2)
8,49^20^8,40
"KRN",.404,288,40,6,11)
D H^XQOPED(74)
"KRN",.404,288,40,7,0)
5^Is It Delegable^3
"KRN",.404,288,40,7,1)
13
"KRN",.404,288,40,7,2)
6,65^3^6,48
"KRN",.404,288,40,7,3)
Yes
"KRN",.404,288,40,7,11)
D H^XQOPED(16)
"KRN",.404,288,40,8,0)
8^Restrictions (Locks, etc.)^2
"KRN",.404,288,40,8,2)
11,30^3^11,2
"KRN",.404,288,40,8,3)
NO
"KRN",.404,288,40,8,10)
S:(X=1) DDSSTACK=2
"KRN",.404,288,40,8,11)
D H^XQOPED(71)
"KRN",.404,288,40,8,20)
Y^^
"KRN",.404,288,40,9,0)
9^Executable Fields (Programmers Only)^2
"KRN",.404,288,40,9,2)
11,73^3^11,35
"KRN",.404,288,40,9,3)
NO
"KRN",.404,288,40,9,10)
I (X=1)&($$CHECK^XQOPED()) S DDSSTACK=3
"KRN",.404,288,40,9,11)
D H^XQOPED(72)
"KRN",.404,288,40,9,20)
Y^Y
"KRN",.404,288,40,10,0)
10^Option-type (Print, Run Routine, etc.) Related Fields^2
"KRN",.404,288,40,10,2)
13,63^3^13,8
"KRN",.404,288,40,10,3)
NO
"KRN",.404,288,40,10,10)
I X=1 S DDSSTACK=$S("MLOQX"[XQTP:1.1,XQTP="E":1.2,XQTP="P":1.3,XQTP="I":1.5,XQTP="R":1.6,XQTP="S":1.7,XQTP="C":1.8,XQTP="A":1.9,XQTP="B":10.1,XQTP="W":10.2,XQTP="Z":10.3,1:1)
"KRN",.404,288,40,10,11)
S XQTP=$$GET^DDSVAL(DIE,.DA,4) D H^XQOPED(73)
"KRN",.404,288,40,10,20)
Y
"KRN",.404,289,0)
Restrictions^19
"KRN",.404,289,40,0)
^.4044I^14^9
"KRN",.404,289,40,1,0)
3^Lock^3
"KRN",.404,289,40,1,1)
3
"KRN",.404,289,40,1,2)
5,7^26^5,1
"KRN",.404,289,40,1,11)
D H^XQOPED(4)
"KRN",.404,289,40,2,0)
2^Out-Of-Order Message^3
"KRN",.404,289,40,2,1)
2
"KRN",.404,289,40,2,2)
3,23^50^3,1
"KRN",.404,289,40,2,11)
D H^XQOPED(3)
"KRN",.404,289,40,3,0)
4^Reverse Lock^3
"KRN",.404,289,40,3,1)
3.01
"KRN",.404,289,40,3,2)
5,48^25^5,34
"KRN",.404,289,40,3,11)
D H^XQOPED(5)
"KRN",.404,289,40,9,0)
5^Protected Variables^3
"KRN",.404,289,40,9,1)
1840
"KRN",.404,289,40,9,2)
7,22^51^7,1
"KRN",.404,289,40,9,11)
D H^XQOPED(75)
"KRN",.404,289,40,10,0)
6^Restrict days/times option can run?^2
"KRN",.404,289,40,10,.1)
 
"KRN",.404,289,40,10,2)
11,53^1^11,16
"KRN",.404,289,40,10,3)
NO
"KRN",.404,289,40,10,3.1)
 
"KRN",.404,289,40,10,10)
S:(X=1) DDSSTACK=2.1
"KRN",.404,289,40,10,11)
D H^XQOPED(8)
"KRN",.404,289,40,10,20)
Y
"KRN",.404,289,40,10,21,0)
^^2^2^2971118^
"KRN",.404,289,40,10,21,1,0)
    Answer "Y" or "Yes" if you want to restrict the times this option can
"KRN",.404,289,40,10,21,2,0)
be envoked by the user.
"KRN",.404,289,40,11,0)
7^Restrict Option to Selected Devices?^2
"KRN",.404,289,40,11,.1)
 
"KRN",.404,289,40,11,2)
13,54^1^13,16
"KRN",.404,289,40,11,3)
NO
"KRN",.404,289,40,11,3.1)
 
"KRN",.404,289,40,11,10)
S:(X=1) DDSSTACK=2.2
"KRN",.404,289,40,11,20)
Y
"KRN",.404,289,40,12,0)
8^Require Output Queuing Certain Days/Times?^2
"KRN",.404,289,40,12,.1)
 
"KRN",.404,289,40,12,2)
15,60^1^15,16
"KRN",.404,289,40,12,3)
NO
"KRN",.404,289,40,12,3.1)
 
"KRN",.404,289,40,12,10)
S:(X=1) DDSSTACK=2.3
"KRN",.404,289,40,12,20)
Y
"KRN",.404,289,40,13,0)
1^Restricting Option Dynamics^1
"KRN",.404,289,40,13,2)
^^1,21^1
"KRN",.404,289,40,14,0)
9^Prevent Menu Redisplay When Finished^3
"KRN",.404,289,40,14,1)
11
"KRN",.404,289,40,14,2)
9,39^3^9,1
"KRN",.404,289,40,14,11)
D H^XQOPED(76)
"KRN",.404,290,0)
Executable 1^19
"KRN",.404,290,40,0)
^.4044I^5^5
"KRN",.404,290,40,1,0)
1^Entry Action^3
"KRN",.404,290,40,1,1)
20
"KRN",.404,290,40,1,2)
1,18^54^1,4
"KRN",.404,290,40,1,11)
D H^XQOPED(17)
"KRN",.404,290,40,2,0)
2^XQUIT Message^3
"KRN",.404,290,40,2,1)
21
"KRN",.404,290,40,2,2)
3,21^1^3,6
"KRN",.404,290,40,2,11)
D H^XQOPED(19)
"KRN",.404,290,40,3,0)
3^XQUIT Executable^3
"KRN",.404,290,40,3,1)
22
"KRN",.404,290,40,3,2)
5,24^48^5,6
"KRN",.404,290,40,3,11)
D H^XQOPED(20)
"KRN",.404,290,40,4,0)
4^Header^3
"KRN",.404,290,40,4,1)
26
"KRN",.404,290,40,4,2)
7,12^60^7,4
"KRN",.404,290,40,4,11)
D H^XQOPED(21)
"KRN",.404,290,40,5,0)
5^Exit Action^3
"KRN",.404,290,40,5,1)
15
"KRN",.404,290,40,5,2)
9,17^55^9,4
"KRN",.404,290,40,5,11)
D H^XQOPED(18)
"KRN",.404,291,0)
Menu Multiple^19.01
"KRN",.404,291,40,0)
^.4044I^3^3
"KRN",.404,291,40,1,0)
1^^3
"KRN",.404,291,40,1,1)
.01
"KRN",.404,291,40,1,2)
1,1^30
"KRN",.404,291,40,1,11)
D H^XQOPED(13)
"KRN",.404,291,40,2,0)
2^^3
"KRN",.404,291,40,2,1)
2
"KRN",.404,291,40,2,2)
1,35^4
"KRN",.404,291,40,2,11)
D H^XQOPED(14)
"KRN",.404,291,40,3,0)
3^^3
"KRN",.404,291,40,3,1)
3
"KRN",.404,291,40,3,2)
1,53^5
"KRN",.404,291,40,3,11)
D H^XQOPED(15)
"KRN",.404,292,0)
XQEDTOPT DISP1^19^
"KRN",.404,292,40,0)
^.4044I^1^1
"KRN",.404,292,40,1,0)
1^Option Name                     Synonym         Display Order^1
"KRN",.404,292,40,1,2)
^^2,1^1
"KRN",.404,293,0)
MAIN TITLE^19^
"KRN",.404,293,15,0)
^^2^2^2971113^
"KRN",.404,293,15,1,0)
    This block "MAIN TITLE" is the header block for the first, master,
"KRN",.404,293,15,2,0)
page of the XQEDTOPT screens.
"KRN",.404,293,40,0)
^.4044I^1^1
"KRN",.404,293,40,1,0)
1^Welcome to the Screen-Based Option Editor^1
"KRN",.404,293,40,1,2)
^^2,15^1
"KRN",.404,294,0)
EDIT header^19^
"KRN",.404,294,40,0)
^.4044I^2^2
"KRN",.404,294,40,1,0)
1^Edit-type Option Related Fields^1
"KRN",.404,294,40,1,2)
^^2,23^1
"KRN",.404,294,40,2,0)
2^Do You Want To Edit The DIC Look Up Variables^2
"KRN",.404,294,40,2,.1)
 
"KRN",.404,294,40,2,2)
6,53^1^6,6^1
"KRN",.404,294,40,2,3)
!M
"KRN",.404,294,40,2,3.1)
S Y=$S('$D(^DIC(19,DA,30)):"YES",1:"NO")
"KRN",.404,294,40,2,10)
S:(X=1) DDSSTACK=4
"KRN",.404,294,40,2,11)
D H^XQOPED(77)
"KRN",.404,294,40,2,20)
Y
"KRN",.404,294,40,2,21,0)
^^4^4^2980203^
"KRN",.404,294,40,2,21,1,0)
    Edit type options first make a call to ^DIC to select the file 
"KRN",.404,294,40,2,21,2,0)
that will be used.  Answer YES if you want to define or redifine
"KRN",.404,294,40,2,21,3,0)
the variables DIC, DIC(0), etc.  Answer NO if they are already
"KRN",.404,294,40,2,21,4,0)
defined satisfactorily.  These variables are required.
"KRN",.404,295,0)
EDIT edit block^19
"KRN",.404,295,40,0)
^.4044I^10^3
"KRN",.404,295,40,8,0)
1^Global Reference [DIE]^3
"KRN",.404,295,40,8,1)
50
"KRN",.404,295,40,8,2)
4,30^39^4,6
"KRN",.404,295,40,8,11)
D H^XQOPED(35)
"KRN",.404,295,40,9,0)
2^Fields or Template [DR{DIE}]^3
"KRN",.404,295,40,9,1)
51
"KRN",.404,295,40,9,2)
6,36^42^6,6
"KRN",.404,295,40,9,11)
D H^XQOPED(36)
"KRN",.404,295,40,10,0)
3^Up-Arrow Control [NO UP-ARROW]^3
"KRN",.404,295,40,10,1)
53
"KRN",.404,295,40,10,2)
8,38^23^8,6
"KRN",.404,295,40,10,11)
D H^XQOPED(37)
"KRN",.404,296,0)
PRINT header^19^
"KRN",.404,296,40,0)
^.4044I^2^2
"KRN",.404,296,40,1,0)
1^Print-type Option Related Fields (Page 1 of 2)^1
"KRN",.404,296,40,1,2)
^^2,18^1
"KRN",.404,296,40,2,0)
2^Use the PageDown key or <PF1><down arrow> to see page 2^1
"KRN",.404,296,40,2,2)
^^3,13^1
"KRN",.404,297,0)
PRINT edit^19
"KRN",.404,297,15,0)
^^2^2^2971113^
"KRN",.404,297,15,1,0)
   This block, PRINT edit, contains the related fields for Print-type
"KRN",.404,297,15,2,0)
options.
"KRN",.404,297,40,0)
^.4044I^14^13
"KRN",.404,297,40,1,0)
1^Global Reference [DIC{DIP}]^3
"KRN",.404,297,40,1,1)
60
"KRN",.404,297,40,1,2)
2,30^20^2,1
"KRN",.404,297,40,1,11)
D H^XQOPED(38)
"KRN",.404,297,40,2,0)
7^Prompt String [L.]^3
"KRN",.404,297,40,2,1)
62
"KRN",.404,297,40,2,2)
9,21^59^9,1
"KRN",.404,297,40,2,3)
0
"KRN",.404,297,40,2,11)
D H^XQOPED(40)
"KRN",.404,297,40,3,0)
3^Print fields [FLDS]^3
"KRN",.404,297,40,3,1)
63
"KRN",.404,297,40,3,2)
3,22^58^3,1
"KRN",.404,297,40,3,11)
D H^XQOPED(41)
"KRN",.404,297,40,4,0)
4^Sort by Fields [BY]^3
"KRN",.404,297,40,4,1)
64
"KRN",.404,297,40,4,2)
5,22^58^5,1
"KRN",.404,297,40,4,11)
D H^XQOPED(42)
"KRN",.404,297,40,5,0)
5^Start With Values [FR]^3
"KRN",.404,297,40,5,1)
65
"KRN",.404,297,40,5,2)
6,25^55^6,1
"KRN",.404,297,40,5,11)
D H^XQOPED(43)
"KRN",.404,297,40,6,0)
6^Go To Values [TO]^3
"KRN",.404,297,40,6,1)
66
"KRN",.404,297,40,6,2)
7,20^60^7,1
"KRN",.404,297,40,6,11)
D H^XQOPED(44)
"KRN",.404,297,40,7,0)
8^Header [DHD]^3
"KRN",.404,297,40,7,1)
67
"KRN",.404,297,40,7,2)
10,15^35^10,1
"KRN",.404,297,40,7,11)
D H^XQOPED(45)
"KRN",.404,297,40,8,0)
10^Number of Copies [DCOPIES]^3
"KRN",.404,297,40,8,1)
68
"KRN",.404,297,40,8,2)
12,31^3^12,3
"KRN",.404,297,40,8,3)
1
"KRN",.404,297,40,8,11)
D H^XQOPED(80)
"KRN",.404,297,40,10,0)
13^Starting Page Number [PG]^3
"KRN",.404,297,40,10,1)
61
"KRN",.404,297,40,10,2)
13,71^4^13,44
"KRN",.404,297,40,10,3)
1
"KRN",.404,297,40,10,11)
D H^XQOPED(39)
"KRN",.404,297,40,11,0)
9^Ask For Header [DIASKHD]^3
"KRN",.404,297,40,11,1)
79
"KRN",.404,297,40,11,2)
10,78^2^10,52
"KRN",.404,297,40,12,0)
12^Supress "No Records..." [DISUPNO]^3
"KRN",.404,297,40,12,1)
77
"KRN",.404,297,40,12,2)
13,38^4^13,3
"KRN",.404,297,40,12,11)
D H^XQOPED(52)
"KRN",.404,297,40,13,0)
11^Sort Criteria in Header [DIPCRIT]^3
"KRN",.404,297,40,13,1)
78
"KRN",.404,297,40,13,2)
12,71^4^12,36
"KRN",.404,297,40,13,11)
D H^XQOPED(53)
"KRN",.404,297,40,14,0)
2^Device [IOP]^3
"KRN",.404,297,40,14,1)
70
"KRN",.404,297,40,14,2)
2,65^15^2,51
"KRN",.404,297,40,14,11)
D H^XQOPED(48)
"KRN",.404,298,0)
PRINT2 header^19^
"KRN",.404,298,40,0)
^.4044I^4^4
"KRN",.404,298,40,1,0)
1^Print-type Options Related Fields (Page 2 of 2)^1
"KRN",.404,298,40,1,2)
^^2,15^1
"KRN",.404,298,40,2,0)
2^Use the <PageUp> Key or <PF1><Up Cursor Arrow> To See Page 1^1
"KRN",.404,298,40,2,2)
^^3,9^1
"KRN",.404,298,40,3,0)
3^All These Fields Must Contain Valid M Code^1
"KRN",.404,298,40,3,2)
^^4,17^1
"KRN",.404,298,40,4,0)
4^And Screen DIS(0), If It Is Defined^1
"KRN",.404,298,40,4,2)
^^14,22^1
"KRN",.404,299,0)
PRINT2 edit^19
"KRN",.404,299,40,0)
^.4044I^19^9
"KRN",.404,299,40,2,0)
1^Executed After Each Entry [DHIT]^3
"KRN",.404,299,40,2,1)
71
"KRN",.404,299,40,2,2)
3,35^45^3,1
"KRN",.404,299,40,2,11)
D H^XQOPED(49)
"KRN",.404,299,40,3,0)
2^Before the Print Starts [DIOBEG]^3
"KRN",.404,299,40,3,1)
72
"KRN",.404,299,40,3,2)
4,35^45^4,1
"KRN",.404,299,40,3,11)
D H^XQOPED(50)
"KRN",.404,299,40,4,0)
3^After Print Finishes [DIOEND]^3
"KRN",.404,299,40,4,1)
73
"KRN",.404,299,40,4,2)
5,32^48^5,1
"KRN",.404,299,40,4,11)
D H^XQOPED(51)
"KRN",.404,299,40,13,0)
7^Dis(1) ^3
"KRN",.404,299,40,13,1)
69.1
"KRN",.404,299,40,13,2)
12,12^68^12,1
"KRN",.404,299,40,13,11)
D H^XQOPED(47)
"KRN",.404,299,40,14,0)
8^Or Dis(2)^3
"KRN",.404,299,40,14,1)
69.2
"KRN",.404,299,40,14,2)
13,12^68^13,1
"KRN",.404,299,40,14,11)
D H^XQOPED(47)
"KRN",.404,299,40,15,0)
9^Or DIS(3)^3
"KRN",.404,299,40,15,1)
69.3
"KRN",.404,299,40,15,2)
14,12^68^14,1
"KRN",.404,299,40,15,11)
D H^XQOPED(47)
"KRN",.404,299,40,16,0)
5^Screen [DIS(0)]^3
"KRN",.404,299,40,16,1)
69
"KRN",.404,299,40,16,2)
8,18^62^8,1
"KRN",.404,299,40,16,11)
D H^XQOPED(46)
"KRN",.404,299,40,18,0)
4^Screens: A Selection Must Pass DIS(0), If Defined, To Be Printed^1
"KRN",.404,299,40,18,2)
^^7,7^1
"KRN",.404,299,40,19,0)
6^A Selection Will Be Printed If It Passes Any One Of These Screens^1
"KRN",.404,299,40,19,2)
^^10,7^1
"KRN",.404,300,0)
EXECUTABLES header^19^
"KRN",.404,300,40,0)
^.4044I^1^1
"KRN",.404,300,40,1,0)
1^Executables^1
"KRN",.404,300,40,1,2)
^^2,34^1
"KRN",.404,301,0)
INQUIRE header^19^
"KRN",.404,301,40,0)
^.4044I^1^1
"KRN",.404,301,40,1,0)
1^Inquire-type Option Related Fields^1
"KRN",.404,301,40,1,2)
^^2,20^1
"KRN",.404,302,0)
INQUIRE edit^19
"KRN",.404,302,40,0)
^.4044I^14^7
"KRN",.404,302,40,3,0)
2^Global Reference [DIC{DIQ}]^3
"KRN",.404,302,40,3,1)
80
"KRN",.404,302,40,3,2)
5,35^41^5,6
"KRN",.404,302,40,3,11)
D H^XQOPED(55)
"KRN",.404,302,40,5,0)
7^Display Computed Fields? [DIQ(0)]^3
"KRN",.404,302,40,5,1)
82
"KRN",.404,302,40,5,2)
11,74^2^11,39
"KRN",.404,302,40,5,11)
D H^XQOPED(56)
"KRN",.404,302,40,6,0)
4^Fields or Template [FLDS]^3
"KRN",.404,302,40,6,1)
63
"KRN",.404,302,40,6,2)
7,33^43^7,6
"KRN",.404,302,40,6,3)
[CAPTIONED]
"KRN",.404,302,40,6,11)
D H^XQOPED(41)
"KRN",.404,302,40,11,0)
1^Do You Want To Edit the DIC Look Up Variables?^2
"KRN",.404,302,40,11,.1)
 
"KRN",.404,302,40,11,2)
3,54^4^3,6^1
"KRN",.404,302,40,11,3)
!M
"KRN",.404,302,40,11,3.1)
S Y=$S('$D(^DIC(19,DA,30)):"YES",1:"NO")
"KRN",.404,302,40,11,10)
S:(X=1) DDSSTACK=4
"KRN",.404,302,40,11,11)
D H^XQOPED(78)
"KRN",.404,302,40,11,20)
Y
"KRN",.404,302,40,12,0)
5^Header [DHD]^3
"KRN",.404,302,40,12,1)
67
"KRN",.404,302,40,12,2)
9,20^56^9,6
"KRN",.404,302,40,12,11)
D H^XQOPED(45)
"KRN",.404,302,40,13,0)
6^Supress Device Prompt^3
"KRN",.404,302,40,13,1)
83
"KRN",.404,302,40,13,2)
11,29^3^11,6
"KRN",.404,302,40,13,3)
YES
"KRN",.404,302,40,13,11)
D H^XQOPED(57)
"KRN",.404,302,40,14,0)
8^Device [IOP]^3
"KRN",.404,302,40,14,1)
70
"KRN",.404,302,40,14,2)
13,37^24^13,23
"KRN",.404,302,40,14,3)
HOME
"KRN",.404,302,40,14,11)
D H^XQOPED(48)
"KRN",.404,303,0)
ROUTINE header^19^
"KRN",.404,303,40,0)
^.4044I^1^1
"KRN",.404,303,40,1,0)
1^Routine-type Option^1
"KRN",.404,303,40,1,2)
^^2,27^1
"KRN",.404,304,0)
ROUTINE edit^19
"KRN",.404,304,40,0)
^.4044I^1^1
"KRN",.404,304,40,1,0)
1^Routine Entry Point^3
"KRN",.404,304,40,1,1)
25
"KRN",.404,304,40,1,2)
2,29^25^2,8
"KRN",.404,304,40,1,4)
1
"KRN",.404,304,40,1,11)
D H^XQOPED(22)
"KRN",.404,305,0)
SERVER header^19^
"KRN",.404,305,40,0)
^.4044I^1^1
"KRN",.404,305,40,1,0)
1^Server-type Option Fields^1
"KRN",.404,305,40,1,2)
^^2,23^1
"KRN",.404,306,0)
SERVER edit^19
"KRN",.404,306,40,0)
^.4044I^10^10
"KRN",.404,306,40,1,0)
1^Routine Entry Point^3
"KRN",.404,306,40,1,1)
25
"KRN",.404,306,40,1,2)
2,22^15^2,1
"KRN",.404,306,40,1,11)
D H^XQOPED(22)
"KRN",.404,306,40,2,0)
3^Bulletin^3
"KRN",.404,306,40,2,1)
220
"KRN",.404,306,40,2,2)
4,11^26^4,1
"KRN",.404,306,40,2,11)
D H^XQOPED(59)
"KRN",.404,306,40,3,0)
2^Server Action^3
"KRN",.404,306,40,3,1)
221
"KRN",.404,306,40,3,2)
2,56^15^2,41
"KRN",.404,306,40,3,11)
D H^XQOPED(60)
"KRN",.404,306,40,4,0)
4^Mail Group^3
"KRN",.404,306,40,4,1)
222
"KRN",.404,306,40,4,2)
4,53^18^4,41
"KRN",.404,306,40,4,11)
D H^XQOPED(61)
"KRN",.404,306,40,5,0)
5^Server Audit^3
"KRN",.404,306,40,5,1)
223
"KRN",.404,306,40,5,2)
9,15^3^9,1
"KRN",.404,306,40,5,3)
N
"KRN",.404,306,40,5,11)
D H^XQOPED(62)
"KRN",.404,306,40,6,0)
6^Supress Bulletin?^3
"KRN",.404,306,40,6,1)
224
"KRN",.404,306,40,6,2)
9,40^5^9,21
"KRN",.404,306,40,6,3)
Y
"KRN",.404,306,40,6,11)
D H^XQOPED(63)
"KRN",.404,306,40,7,0)
7^Server Reply^3
"KRN",.404,306,40,7,1)
225
"KRN",.404,306,40,7,2)
9,62^5^9,48
"KRN",.404,306,40,7,3)
N
"KRN",.404,306,40,7,11)
D H^XQOPED(64)
"KRN",.404,306,40,8,0)
8^Save Request^3
"KRN",.404,306,40,8,1)
226
"KRN",.404,306,40,8,2)
6,56^15^6,42
"KRN",.404,306,40,8,11)
D H^XQOPED(65)
"KRN",.404,306,40,9,0)
9^Server Device^3
"KRN",.404,306,40,9,1)
227
"KRN",.404,306,40,9,2)
6,16^20^6,1
"KRN",.404,306,40,9,11)
D H^XQOPED(66)
"KRN",.404,306,40,10,0)
10^TaskMan Retention in Days^3
"KRN",.404,306,40,10,1)
228
"KRN",.404,306,40,10,2)
11,50^3^11,23
"KRN",.404,306,40,10,3)
7
"KRN",.404,306,40,10,11)
D H^XQOPED(67)
"KRN",.404,307,0)
SCREEN header^19^
"KRN",.404,307,40,0)
^.4044I^1^1
"KRN",.404,307,40,1,0)
1^ScreenMan-type Option Fields^1
"KRN",.404,307,40,1,2)
^^2,27^1
"KRN",.404,308,0)
SCREEN edit^19
"KRN",.404,308,40,0)
^.4044I^9^6
"KRN",.404,308,40,4,0)
4^Form Name [DR{DDS}]^3
"KRN",.404,308,40,4,1)
40
"KRN",.404,308,40,4,2)
8,28^24^8,7
"KRN",.404,308,40,4,11)
D H^XQOPED(30)
"KRN",.404,308,40,5,0)
2^File [DDSFILE]^3
"KRN",.404,308,40,5,1)
41
"KRN",.404,308,40,5,2)
4,23^29^4,7
"KRN",.404,308,40,5,11)
D H^XQOPED(31)
"KRN",.404,308,40,6,0)
3^Subfile [DDSFILE(1)]^3
"KRN",.404,308,40,6,1)
42
"KRN",.404,308,40,6,2)
6,29^23^6,7
"KRN",.404,308,40,6,11)
D H^XQOPED(32)
"KRN",.404,308,40,7,0)
5^Start with Page [DDSPAGE]^3
"KRN",.404,308,40,7,1)
43
"KRN",.404,308,40,7,2)
10,34^8^10,7
"KRN",.404,308,40,7,3)
1
"KRN",.404,308,40,7,11)
D H^XQOPED(33)
"KRN",.404,308,40,8,0)
6^Parameters [DDSPARM]^3
"KRN",.404,308,40,8,1)
44
"KRN",.404,308,40,8,2)
12,29^9^12,7
"KRN",.404,308,40,8,11)
D H^XQOPED(34)
"KRN",.404,308,40,9,0)
1^Do You Want to Edit DIC Look Up Variables?^2
"KRN",.404,308,40,9,.1)
 
"KRN",.404,308,40,9,2)
2,51^1^2,7^1
"KRN",.404,308,40,9,3)
!M
"KRN",.404,308,40,9,3.1)
S Y=$S('$D(^DIC(19,DA,30)):"YES",1:"NO")
"KRN",.404,308,40,9,10)
S:(X=1) DDSSTACK=4
"KRN",.404,308,40,9,11)
D H^XQOPED(79)
"KRN",.404,308,40,9,20)
Y
"KRN",.404,308,40,9,21,0)
^^4^4^2980203^
"KRN",.404,308,40,9,21,1,0)
     This option type first makes an initial call to ^DIC to loo up the
"KRN",.404,308,40,9,21,2,0)
file and field that are to be used.  Some of these variables are required
"KRN",.404,308,40,9,21,3,0)
to make the option work.  Answer YES if you wish to define or redefine
"KRN",.404,308,40,9,21,4,0)
DIC, DIC(0), etc.  Answer NO if they are already defined satisfactoraly.
"KRN",.404,309,0)
BROKER header^19^
"KRN",.404,309,40,0)
^.4044I^2^2
"KRN",.404,309,40,1,0)
1^Broker-type Option^1
"KRN",.404,309,40,1,2)
^^1,28^1
"KRN",.404,309,40,2,0)
2^  Remote Procedure         RPC Key                Rules^1
"KRN",.404,309,40,2,2)
^^3,1^1
"KRN",.404,311,0)
BROKER edit^19.05
"KRN",.404,311,15,0)
^^1^1^2971118^
"KRN",.404,311,15,1,0)
   This block edits the subfiles of the RPC (19.05) subfile.
"KRN",.404,311,40,0)
^.4044I^3^3
"KRN",.404,311,40,1,0)
1^^3
"KRN",.404,311,40,1,1)
.01
"KRN",.404,311,40,1,2)
3,1^21
"KRN",.404,311,40,1,11)
D H^XQOPED(68)
"KRN",.404,311,40,2,0)
2^^3
"KRN",.404,311,40,2,1)
1
"KRN",.404,311,40,2,2)
3,25^15
"KRN",.404,311,40,2,11)
D H^XQOPED(69)
"KRN",.404,311,40,3,0)
3^^3
"KRN",.404,311,40,3,1)
2
"KRN",.404,311,40,3,2)
3,44^30
"KRN",.404,311,40,3,11)
D H^XQOPED(70)
"KRN",.404,312,0)
WINDOW header^19^
"KRN",.404,312,40,0)
^.4044I^1^1
"KRN",.404,312,40,1,0)
1^Window-type Option^1
"KRN",.404,312,40,1,2)
^^2,28^1
"KRN",.404,313,0)
WINDOW edit^19
"KRN",.404,313,40,0)
^.4044I^4^4
"KRN",.404,313,40,1,0)
1^Window^3
"KRN",.404,313,40,1,1)
24
"KRN",.404,313,40,1,2)
1,9^23^1,1
"KRN",.404,313,40,2,0)
2^Routine^3
"KRN",.404,313,40,2,1)
25
"KRN",.404,313,40,2,2)
1,45^25^1,36
"KRN",.404,313,40,3,0)
3^Icon^3
"KRN",.404,313,40,3,1)
300
"KRN",.404,313,40,3,2)
3,7^25^3,1
"KRN",.404,313,40,4,0)
4^Icon Title^3
"KRN",.404,313,40,4,1)
301
"KRN",.404,313,40,4,2)
3,48^22^3,36
"KRN",.404,314,0)
SUITE header^19^
"KRN",.404,314,40,0)
^.4044I^1^1
"KRN",.404,314,40,1,0)
1^Suite-type Option^1
"KRN",.404,314,40,1,2)
^^1,30^1
"KRN",.404,315,0)
SUITE menu^19.01
"KRN",.404,315,15,0)
^^1^1^2971118^
"KRN",.404,315,15,1,0)
   This block contains the names of the windows in a suite.
"KRN",.404,315,40,0)
^.4044I^3^3
"KRN",.404,315,40,1,0)
1^  Window                Display Order^1
"KRN",.404,315,40,1,2)
^^1,21^1
"KRN",.404,315,40,2,0)
2^^3
"KRN",.404,315,40,2,1)
.01
"KRN",.404,315,40,2,2)
3,12^30
"KRN",.404,315,40,3,0)
3^^3
"KRN",.404,315,40,3,1)
3
"KRN",.404,315,40,3,2)
3,49^5
"KRN",.404,316,0)
DAYS/TIMES header^19^
"KRN",.404,316,40,0)
^.4044I^2^2
"KRN",.404,316,40,1,0)
1^Restricting Days and Times An Option Can Be Envoked^1
"KRN",.404,316,40,1,2)
^^1,11^1
"KRN",.404,316,40,2,0)
2^Time Range (Example: 0800-1630)    On What Days (MO-FR or MO,WE etc.)^1
"KRN",.404,316,40,2,2)
^^3,1^1
"KRN",.404,317,0)
DAYS/TIMES edit^19.391
"KRN",.404,317,40,0)
^.4044I^2^2
"KRN",.404,317,40,1,0)
1^^3
"KRN",.404,317,40,1,1)
.01
"KRN",.404,317,40,1,2)
1,11^14
"KRN",.404,317,40,1,11)
D H^XQOPED(9)
"KRN",.404,317,40,2,0)
2^^3
"KRN",.404,317,40,2,1)
.02
"KRN",.404,317,40,2,2)
1,42^23
"KRN",.404,317,40,2,11)
D H^XQOPED(10)
"KRN",.404,318,0)
DEVICE header^19^
"KRN",.404,318,40,0)
^.4044I^1^1
"KRN",.404,318,40,1,0)
1^Enter the Devices Upon Which This Option Is Allowed To Run^1
"KRN",.404,318,40,1,2)
^^1,8^1
"KRN",.404,319,0)
DEVICES edit^19.396
"KRN",.404,319,15,0)
^^2^2^2971118^
"KRN",.404,319,15,1,0)
   This block allows the user to enter the devices upon which an option is
"KRN",.404,319,15,2,0)
allowed to run.
"KRN",.404,319,40,0)
^.4044I^1^1
"KRN",.404,319,40,1,0)
1^Permitted Device^3
"KRN",.404,319,40,1,1)
.01
"KRN",.404,319,40,1,2)
2,19^30^2,1
"KRN",.404,320,0)
QUEUING header^19^
"KRN",.404,320,40,0)
^.4044I^2^2
"KRN",.404,320,40,1,0)
1^Time Periods and Days When Output Must Be Queued^1
"KRN",.404,320,40,1,2)
^^1,11^1
"KRN",.404,320,40,2,0)
2^Time Period (e.g. 0800-1645)     Days (e.g. MO or MO,WE or MO-FR)^1
"KRN",.404,320,40,2,2)
^^3,2^1
"KRN",.404,321,0)
QUEUING edit^19.392
"KRN",.404,321,15,0)
^^2^2^2971118^
"KRN",.404,321,15,1,0)
    This block allows the user to enter times and days when the output
"KRN",.404,321,15,2,0)
from this option must be queued.
"KRN",.404,321,40,0)
^.4044I^2^2
"KRN",.404,321,40,1,0)
1^^3
"KRN",.404,321,40,1,1)
.01
"KRN",.404,321,40,1,2)
1,11^9
"KRN",.404,321,40,1,11)
D H^XQOPED(9)
"KRN",.404,321,40,2,0)
2^^3
"KRN",.404,321,40,2,1)
.02
"KRN",.404,321,40,2,2)
1,43^15
"KRN",.404,321,40,2,11)
D H^XQOPED(10)
"KRN",.404,322,0)
ACTION header^19^
"KRN",.404,322,15,0)
^^1^1^2971124^
"KRN",.404,322,15,1,0)
     This is the header block for page 1.9, Action-type options.
"KRN",.404,322,40,0)
^.4044I^1^1
"KRN",.404,322,40,1,0)
1^Action-type option^1
"KRN",.404,322,40,1,2)
^^2,29^1
"KRN",.404,323,0)
ACTION edit^19
"KRN",.404,323,40,0)
^.4044I^1^1
"KRN",.404,323,40,1,0)
1^Entry Action to Execute^3
"KRN",.404,323,40,1,1)
20
"KRN",.404,323,40,1,2)
1,26^41^1,1
"KRN",.404,323,40,1,11)
D H^XQOPED(81)
"KRN",.404,326,0)
PRINT3 edit 2^19.02
"KRN",.404,326,40,0)
^.4044I^2^2
"KRN",.404,326,40,1,0)
1^^3
"KRN",.404,326,40,1,1)
.01
"KRN",.404,326,40,1,2)
1,9^1
"KRN",.404,326,40,2,0)
2^^3
"KRN",.404,326,40,2,1)
1
"KRN",.404,326,40,2,2)
1,26^45
"KRN",.404,329,0)
PRINT3 header 1^19^
"KRN",.404,329,40,0)
^.4044I^2^2
"KRN",.404,329,40,1,0)
1^Print-type Option Programmer Fields^1
"KRN",.404,329,40,1,2)
^^2,22^1
"KRN",.404,329,40,2,0)
2^FROM Subscript Level                    FROM Value^1
"KRN",.404,329,40,2,2)
^^5,1^1
"KRN",.404,330,0)
PRINT3 edit 1^19.02
"KRN",.404,330,40,0)
^.4044I^2^2
"KRN",.404,330,40,1,0)
1^^3
"KRN",.404,330,40,1,1)
.01
"KRN",.404,330,40,1,2)
1,9^1
"KRN",.404,330,40,2,0)
2^^3
"KRN",.404,330,40,2,1)
1
"KRN",.404,330,40,2,2)
1,26^45
"KRN",.404,331,0)
PRINT3 header 2^19^
"KRN",.404,331,40,0)
^.4044I^1^1
"KRN",.404,331,40,1,0)
1^TO Subscript Level                       TO Value^1
"KRN",.404,331,40,1,2)
^^3,1^1
"KRN",.404,332,0)
PRINT3 header 3^19^
"KRN",.404,332,40,0)
^.4044I^^0
"KRN",.404,333,0)
SELECTION edit^19
"KRN",.404,333,40,0)
^.4044I^1^1
"KRN",.404,333,40,1,0)
1^Select Option to Edit^2
"KRN",.404,333,40,1,.1)
 
"KRN",.404,333,40,1,2)
6,37^20^6,14
"KRN",.404,333,40,1,4)
1
"KRN",.404,333,40,1,20)
P^^19:QEALM
"KRN",.404,333,40,1,21,0)
^^2^2^2971203^
"KRN",.404,333,40,1,21,1,0)
    Select an option to edit.  You may add a new option to the Option File
"KRN",.404,333,40,1,21,2,0)
if you wish.
"KRN",.404,336,0)
DIC Edit^19
"KRN",.404,336,40,0)
^.4044I^7^7
"KRN",.404,336,40,1,0)
1^Global Reference [DIC{DIC}]^3
"KRN",.404,336,40,1,1)
30
"KRN",.404,336,40,1,2)
2,30^30^2,1
"KRN",.404,336,40,1,11)
D H^XQOPED(23)
"KRN",.404,336,40,2,0)
2^Look Up Codes [DIC(0)]^3
"KRN",.404,336,40,2,1)
31
"KRN",.404,336,40,2,2)
4,25^9^4,1
"KRN",.404,336,40,2,11)
D H^XQOPED(24)
"KRN",.404,336,40,3,0)
3^Preferred X-Reference [D.]^3
"KRN",.404,336,40,3,1)
36
"KRN",.404,336,40,3,2)
4,63^10^4,35
"KRN",.404,336,40,3,11)
D H^XQOPED(29)
"KRN",.404,336,40,4,0)
4^Prompt [DIC(A)]^3
"KRN",.404,336,40,4,1)
32
"KRN",.404,336,40,4,2)
6,18^55^6,1
"KRN",.404,336,40,4,11)
D H^XQOPED(25)
"KRN",.404,336,40,5,0)
5^Default Response [DIC(B)]^3
"KRN",.404,336,40,5,1)
33
"KRN",.404,336,40,5,2)
8,28^45^8,1
"KRN",.404,336,40,5,11)
D H^XQOPED(26)
"KRN",.404,336,40,6,0)
6^Screen [DIC(S)]^3
"KRN",.404,336,40,6,1)
34
"KRN",.404,336,40,6,2)
10,18^55^10,1
"KRN",.404,336,40,6,11)
D H^XQOPED(27)
"KRN",.404,336,40,7,0)
7^Input Match [DIC(W)]^3
"KRN",.404,336,40,7,1)
35
"KRN",.404,336,40,7,2)
12,23^50^12,1
"KRN",.404,336,40,7,11)
D H^XQOPED(28)
"KRN",.404,337,0)
DIC Header^19^
"KRN",.404,337,40,0)
^.4044I^2^2
"KRN",.404,337,40,1,0)
1^Initial DIC Look Up Parameters^1
"KRN",.404,337,40,1,2)
^^1,22^1
"KRN",.404,337,40,2,0)
2^Used By Edit, Inquire, and ScreenMan Options^1
"KRN",.404,337,40,2,2)
^^2,15^1
"KRN",9.2,540,-1)
0^1
"KRN",9.2,540,0)
XUDOC NEW FEATURES*^KERNEL NEW FEATURES^2980415.2009^^
"KRN",9.2,540,1,0)
^^10^10^2980415^
"KRN",9.2,540,1,1,0)
  
"KRN",9.2,540,1,2,0)
     As changes are made to the Kernel, the major new features will be
"KRN",9.2,540,1,3,0)
listed here.
"KRN",9.2,540,1,4,0)
  
"KRN",9.2,540,1,5,0)
     The processing of the [XQUIT] variable by the Menu System has been
"KRN",9.2,540,1,6,0)
significantly changed.
"KRN",9.2,540,1,7,0)
  
"KRN",9.2,540,1,8,0)
     Updates to the Option File required the introduction of a new
"KRN",9.2,540,1,9,0)
Sreen-based Option Editor, [OPED].  The old editor [XUEDITOPT] will
"KRN",9.2,540,1,10,0)
no longer be upgraded as new fields are added, unless you want to do it.
"KRN",9.2,540,2,0)
^9.22^7^4
"KRN",9.2,540,2,4,0)
OPED^XQ OPED
"KRN",9.2,540,2,5,0)
XQUIT^XQUIT PROCESSING
"KRN",9.2,540,2,7,0)
XUEDITOPT^XQ XUEDITOPT
"KRN",9.2,782,-1)
0^2
"KRN",9.2,782,0)
XQUIT PROCESSING^Changes in XQUIT Processing^2980415.1304^^
"KRN",9.2,782,1,0)
^^18^18^2980415^^
"KRN",9.2,782,1,1,0)
 
"KRN",9.2,782,1,2,0)
     During the execution of an [Entry Action] of an option the
"KRN",9.2,782,1,3,0)
application programmer has always had the option of setting the XQUIT
"KRN",9.2,782,1,4,0)
variable.  When the menu system found this variable it would stop.  There
"KRN",9.2,782,1,5,0)
were 3 major problems inherent in this approach:
"KRN",9.2,782,1,6,0)
  
"KRN",9.2,782,1,7,0)
   1.  The user was [left] at the option where the XQUIT was detected,
"KRN",9.2,782,1,8,0)
       which could well be in the middle of a jump, which caused
"KRN",9.2,782,1,9,0)
       major confusion.
"KRN",9.2,782,1,10,0)
 
"KRN",9.2,782,1,11,0)
   2.  The Menu System just stopped and the programmer had no [control]
"KRN",9.2,782,1,12,0)
       over what happened next, while the Menu System itself had no
"KRN",9.2,782,1,13,0)
       idea what the problem was.
"KRN",9.2,782,1,14,0)
  
"KRN",9.2,782,1,15,0)
   3.  The users recieved a [message] about an XQUIT being encountered 
"KRN",9.2,782,1,16,0)
       that made little or no sense to them.
"KRN",9.2,782,1,17,0)
 
"KRN",9.2,782,1,18,0)
We have corrected these 3 problems.  Notice we do not say "3 features."
"KRN",9.2,782,2,0)
^9.22^5^5
"KRN",9.2,782,2,1,0)
CONTROL^XQUIT CONTROL
"KRN",9.2,782,2,2,0)
ENTRY ACTION^XQ ENTRY ACTIONS
"KRN",9.2,782,2,3,0)
LEFT^XQUIT LEFT
"KRN",9.2,782,2,4,0)
MESSAGE^XQUIT MESSAGE
"KRN",9.2,785,-1)
0^9
"KRN",9.2,785,0)
XQ XQUTL PRINT^Simple Kernel Array Printer^2980415.1309^^
"KRN",9.2,785,1,0)
^^18^18^2980415^
"KRN",9.2,785,1,1,0)
   
"KRN",9.2,785,1,2,0)
     A call to PRINT^XQUTL(.array name) will cause the succesive lines of
"KRN",9.2,785,1,3,0)
the array to be printed to the screen.  When the number of lines printed
"KRN",9.2,785,1,4,0)
reaches the limit found in IOSL-3, a pause will occurr, and the following
"KRN",9.2,785,1,5,0)
line will appear:
"KRN",9.2,785,1,6,0)
  
"KRN",9.2,785,1,7,0)
 RETURN to continue, "^" to halt, "B" to backup, or "?" for more options:
"KRN",9.2,785,1,8,0)
  
"KRN",9.2,785,1,9,0)
At this point the user can respond in any of the following ways:
"KRN",9.2,785,1,10,0)
  
"KRN",9.2,785,1,11,0)
   <Return> or <Enter> will cause the next set of lines to be written
"KRN",9.2,785,1,12,0)
           to the screen.
"KRN",9.2,785,1,13,0)
   "B" or "b" will back up to the beginning of the message
"KRN",9.2,785,1,14,0)
   + or - a number will change the screen length by that much.  For
"KRN",9.2,785,1,15,0)
           instance "-5" would cause the software to print 15 lines 
"KRN",9.2,785,1,16,0)
           at a time instead of 20, and it restarts the print.
"KRN",9.2,785,1,17,0)
   ? will show you this help screen and restart the print.
"KRN",9.2,785,1,18,0)
   ^ has the usual effect of stopping the print.
"KRN",9.2,785,2,0)
^9.22^0^0
"KRN",9.2,786,-1)
0^5
"KRN",9.2,786,0)
XQUIT MESSAGE^A Message To The User When An XQUIT Is Encountered^2980415.1248^^
"KRN",9.2,786,1,0)
^^19^19^2980415^^^^
"KRN",9.2,786,1,1,0)
  
"KRN",9.2,786,1,2,0)
     When the XQUIT variable is detected by the Menu System and there is
"KRN",9.2,786,1,3,0)
no code in the XQUIT EXECUTABLE field a message is printed on the user's
"KRN",9.2,786,1,4,0)
screen.  The default message looks like this:
"KRN",9.2,786,1,5,0)
 
"KRN",9.2,786,1,6,0)
  **> Sorry, access to this option has been denied by the application.
"KRN",9.2,786,1,7,0)
 
"KRN",9.2,786,1,8,0)
       The variable XQUIT was encountered at the option
"KRN",9.2,786,1,9,0)
       '{The menu text of the option that defined XQUIT}.'
"KRN",9.2,786,1,10,0)
       You are being returned to:
"KRN",9.2,786,1,11,0)
       '{The menu the user jumped or stepped from}.'
"KRN",9.2,786,1,12,0)
 
"KRN",9.2,786,1,13,0)
     If there is code in the EXQUIT EXECUTABLE field no message is printed
"KRN",9.2,786,1,14,0)
on the assumption that the application programmer has taken care of it.
"KRN",9.2,786,1,15,0)
If there is no such code but there is message text in the XQUIT MESSAGE
"KRN",9.2,786,1,16,0)
field then that text is displayed instead of the default message through
"KRN",9.2,786,1,17,0)
a Menu System call to [DISPLAY]^XQUTL.  The programmer has access to this
"KRN",9.2,786,1,18,0)
entry point, as well as [PRINT]^XQUTL(.array name) for posting messages on
"KRN",9.2,786,1,19,0)
the user's screen.  These are both supported entry points.
"KRN",9.2,786,2,0)
^9.22^2^2
"KRN",9.2,786,2,1,0)
DISPLAY^XQ XQUTL DISPLAY
"KRN",9.2,786,2,2,0)
PRINT^XQ XQUTL PRINT
"KRN",9.2,787,-1)
0^4
"KRN",9.2,787,0)
XQUIT CONTROL^Passing Control To The Application^2980415.1134^^
"KRN",9.2,787,1,0)
^^21^21^2980415^
"KRN",9.2,787,1,1,0)
  
"KRN",9.2,787,1,2,0)
     When the Application (Lab, IFCAP, etc.) defined the variable XQUIT in
"KRN",9.2,787,1,3,0)
the Entry Action of one of their options, control used to pass to the Menu
"KRN",9.2,787,1,4,0)
System and it would prevent the user from running that option.  It makes
"KRN",9.2,787,1,5,0)
more sense, however, for the application to take control so that problem
"KRN",9.2,787,1,6,0)
that caused it to set the XQUIT might be corrected.  A new executable
"KRN",9.2,787,1,7,0)
field has therefore been added to the Option File to which control will be
"KRN",9.2,787,1,8,0)
passed.  It is called XQUIT EXECUTABLE: ^DIC(19,Option IEN,21).
"KRN",9.2,787,1,9,0)
  
"KRN",9.2,787,1,10,0)
    When an XQUIT is encountered this field is executed.  If the XQUIT
"KRN",9.2,787,1,11,0)
disappears then the Menu Sytem proceeds along satisfying the user's
"KRN",9.2,787,1,12,0)
instructions as if nothing happened.  If the XQUIT is not killed then the
"KRN",9.2,787,1,13,0)
user will be returned to the previous menu.  If XQUIT EXECUTABLE is blank
"KRN",9.2,787,1,14,0)
then the users will be shown a [message] before being sent back to where
"KRN",9.2,787,1,15,0)
they came from.  If there is code in this field, however, no message will
"KRN",9.2,787,1,16,0)
be printed on the assumption that the application took care of informing
"KRN",9.2,787,1,17,0)
the user.
"KRN",9.2,787,1,18,0)
  
"KRN",9.2,787,1,19,0)
    Code can be entered in this field by a programmer, but only by using
"KRN",9.2,787,1,20,0)
the screen-based Option Editor, [OPED].  It is not supported by the
"KRN",9.2,787,1,21,0)
traditional editor XUEDITOPT.
"KRN",9.2,787,2,0)
^9.22^3^3
"KRN",9.2,787,2,1,0)
MESSAGE^XQUIT MESSAGE
"KRN",9.2,787,2,2,0)
OPED^XQ OPED
"KRN",9.2,788,-1)
0^3
"KRN",9.2,788,0)
XQUIT LEFT^Leaving The User Dangling.  NOT!^2980421.1151^^
"KRN",9.2,788,1,0)
^^19^19^2980421^
"KRN",9.2,788,1,1,0)
  
"KRN",9.2,788,1,2,0)
     It was very confusing to the user to be left dangling in the middle
"KRN",9.2,788,1,3,0)
of a jump when the variable XQUIT was defined by the Application in the
"KRN",9.2,788,1,4,0)
Entry Action Field: ^DIC(19,Option IEN,20).  If the user was not jumping
"KRN",9.2,788,1,5,0)
but stepping through the menu trees then the Menu System stopping made
"KRN",9.2,788,1,6,0)
more sense to them, but if a rubber-band jump ("^^Option name") was in
"KRN",9.2,788,1,7,0)
progress then the result was different from either simple jumping or
"KRN",9.2,788,1,8,0)
stepping.
"KRN",9.2,788,1,9,0)
  
"KRN",9.2,788,1,10,0)
     The reaction of the Menu System has now been standardized: we return
"KRN",9.2,788,1,11,0)
the user to the menu from whence he or she came.  For instance, if the
"KRN",9.2,788,1,12,0)
user is sitting at their Primary Menu -- or any other menu, for that
"KRN",9.2,788,1,13,0)
matter -- and they step or jump into an Entry Action that defines the
"KRN",9.2,788,1,14,0)
variable XQUIT by setting it equal to something, then the user is returned
"KRN",9.2,788,1,15,0)
to their Primary Menu or whatever menu they were seeing when they touched
"KRN",9.2,788,1,16,0)
the keys last.  The Menu System executes the  appropriate [headers] and
"KRN",9.2,788,1,17,0)
[exit actions], just as if the user was jumping back to the original menu.
"KRN",9.2,788,1,18,0)
Other things happen (see [control] and [message]) but basically it is a
"KRN",9.2,788,1,19,0)
simple jump or step back to the original menu by popping the user stack.
"KRN",9.2,788,2,0)
^9.22^4^4
"KRN",9.2,788,2,1,0)
CONTROL^XQUIT CONTROL
"KRN",9.2,788,2,2,0)
EXIT ACTIONS^XQ EXIT ACTIONS
"KRN",9.2,788,2,3,0)
HEADERS^XQ HEADERS
"KRN",9.2,789,-1)
0^6
"KRN",9.2,789,0)
XQ ENTRY ACTIONS^Entry Actions^2980415.2028^^
"KRN",9.2,789,1,0)
^^20^20^2980415^
"KRN",9.2,789,1,1,0)
  
"KRN",9.2,789,1,2,0)
     Each option in the Option File has several fields of executable M
"KRN",9.2,789,1,3,0)
(a.k.a. MUMPS) code associated with it that are executed or run under
"KRN",9.2,789,1,4,0)
specific conditions.  The ENTRY ACTION Field is one of these and it is
"KRN",9.2,789,1,5,0)
executed each time a new option is pushed onto the user stack.  From the
"KRN",9.2,789,1,6,0)
user's view this means each time an option is invoked -- whether by the
"KRN",9.2,789,1,7,0)
selection from a menu, called "stepping into an option", or by jumping to
"KRN",9.2,789,1,8,0)
the target option -- this field is executed.
"KRN",9.2,789,1,9,0)
  
"KRN",9.2,789,1,10,0)
     The Option File is tree-structured so if you think of a tree with a
"KRN",9.2,789,1,11,0)
Primary Menu as its trunk, as you move up the branches the ENTRY ACTION
"KRN",9.2,789,1,12,0)
fields will be executed at each new option; if you move back down the
"KRN",9.2,789,1,13,0)
branch toward the Primary Menu trunk they will not.  See [EXIT ACTIONS]
"KRN",9.2,789,1,14,0)
and [HEADERS], because they will.
"KRN",9.2,789,1,15,0)
  
"KRN",9.2,789,1,16,0)
     If, after an ENTRY ACTION has been executed, the variable XQUIT is
"KRN",9.2,789,1,17,0)
found in the partition, then the Menu System passes control to the XQUIT
"KRN",9.2,789,1,18,0)
Processing Software described elsewhere.  Only after the ENTRY ACTION is
"KRN",9.2,789,1,19,0)
run does the Menu System check for XQUIT, and setting it elsewhere is not
"KRN",9.2,789,1,20,0)
permitted or advised.
"KRN",9.2,789,2,0)
^9.22^2^2
"KRN",9.2,789,2,1,0)
EXIT ACTIONS^XQ EXIT ACTIONS
"KRN",9.2,789,2,2,0)
HEADERS^XQ HEADERS
"KRN",9.2,791,-1)
0^7
"KRN",9.2,791,0)
XQ EXIT ACTIONS^The Use and Abuse of Exit Actions^2980420.0943^^
"KRN",9.2,791,1,0)
^^18^18^2980420^^
"KRN",9.2,791,1,1,0)
     
"KRN",9.2,791,1,2,0)
     Each option in the Option File has an EXIT ACTION Field
"KRN",9.2,791,1,3,0)
associated with it: ^DIC(19,{Option IEN},15). This field may contain M
"KRN",9.2,791,1,4,0)
programming code which will be executed each time that this option is
"KRN",9.2,791,1,5,0)
popped from the user stack. EXIT ACTIONS are the opposite or ENTRY
"KRN",9.2,791,1,6,0)
ACTIONS, not surprisingly.
"KRN",9.2,791,1,7,0)
  
"KRN",9.2,791,1,8,0)
     If you think of a menu as a tree with a Primary Menu trunk, the ENTRY
"KRN",9.2,791,1,9,0)
ACTION  will be executed as you move up the branches, and the EXIT ACTION
"KRN",9.2,791,1,10,0)
Field will be executed as you move down.  "Neither the twain shall
"KRN",9.2,791,1,11,0)
meet."  The HEADER, by the way, will run no matter which way you are
"KRN",9.2,791,1,12,0)
going.  Think of that.
"KRN",9.2,791,1,13,0)
  
"KRN",9.2,791,1,14,0)
     The EXIT ACTION is often used to clean up after an option has been
"KRN",9.2,791,1,15,0)
run, sometimes with a call to the Kernel utility KILL^XUSCLEAN.  If there
"KRN",9.2,791,1,16,0)
are variables that the application wishes to protect from this call,
"KRN",9.2,791,1,17,0)
[protected variables], there is a field in the Option File where these
"KRN",9.2,791,1,18,0)
variables may be entered, and they will not be killed.
"KRN",9.2,791,2,0)
^9.22^1^1
"KRN",9.2,791,2,1,0)
PROTECTED VARIABLES^XQ PROTECTED VARIABLES
"KRN",9.2,792,-1)
0^8
"KRN",9.2,792,0)
XQ HEADERS^The Execution of Headers^2980421.1211^^
"KRN",9.2,792,1,0)
^^16^16^2980421^
"KRN",9.2,792,1,1,0)
   
"KRN",9.2,792,1,2,0)
     Headers can be associated with each option in the Option File by
"KRN",9.2,792,1,3,0)
entering valid MUMPS code in to the HEADER Field: ^DIC(19,Option IEN,26).
"KRN",9.2,792,1,4,0)
From the front page of OPED go to "Executables" and answer "YES" to edit
"KRN",9.2,792,1,5,0)
it.  The code in the header field is executed each time an option is
"KRN",9.2,792,1,6,0)
referenced on the user stack.
"KRN",9.2,792,1,7,0)
  
"KRN",9.2,792,1,8,0)
     If you think of a menu tree with a Primary Menu as it's trunk, the
"KRN",9.2,792,1,9,0)
HEADER will be executed as you move up the tree into the branches, and
"KRN",9.2,792,1,10,0)
again as you move down toward the trunk.  The trunk could also be the
"KRN",9.2,792,1,11,0)
parent of a secondary menu or XUCOMMAND for the Common Options.  So as you
"KRN",9.2,792,1,12,0)
move up the tree the ENTRY ACTION and then the HEADER are eexecuted.  The
"KRN",9.2,792,1,13,0)
option does it's thing, exits, and the EXIT ACTION is run.  Next comes the
"KRN",9.2,792,1,14,0)
HEADER of the menu just under the one we are returning from.  Notice that
"KRN",9.2,792,1,15,0)
the ENTRY ACTION did not get executed on this menu because we are moving
"KRN",9.2,792,1,16,0)
down the tree.
"KRN",9.2,793,-1)
0^11
"KRN",9.2,793,0)
XQ OPED^The Screen-based Option Editor^2980420.0853^^
"KRN",9.2,793,1,0)
^^8^8^2980420^
"KRN",9.2,793,1,1,0)
   
"KRN",9.2,793,1,2,0)
     This new Option Editor (OPED) replaces the old text-based editor,
"KRN",9.2,793,1,3,0)
although both editors currently appear on the Menu Management Menu.  The
"KRN",9.2,793,1,4,0)
old editor (XUEDITOPT) was based upon an edit template that became more
"KRN",9.2,793,1,5,0)
and more difficult to maintain as changes were made to the Option File.  
"KRN",9.2,793,1,6,0)
This editor will remain available, for the time being, but it will no
"KRN",9.2,793,1,7,0)
longer upgraded.  All changes to the Option File will, however, be
"KRN",9.2,793,1,8,0)
reflected in the screen-based OPED.  Try it, you'll like it.
"KRN",9.2,795,-1)
0^10
"KRN",9.2,795,0)
XQ XQUTL DISPLAY^Displaying the XQUIT MESSAGE Field^2980421.1149^^
"KRN",9.2,795,1,0)
^^7^7^2980421^^
"KRN",9.2,795,1,1,0)
  
"KRN",9.2,795,1,2,0)
     A call to the supported entry point DISPLAY^XQUTL will take the text
"KRN",9.2,795,1,3,0)
of the message in the XQUIT MESSAGE Field of the current option load it
"KRN",9.2,795,1,4,0)
into a local array, and cause it to be printed on the user's screen
"KRN",9.2,795,1,5,0)
through a call to [PRINT]^XQUTL(.array name).  The message used is that
"KRN",9.2,795,1,6,0)
entered under the current option as specified in the variable XQY, that
"KRN",9.2,795,1,7,0)
is, ^DIC(19,+XQY,22).
"KRN",9.2,795,2,0)
^9.22^1^1
"KRN",9.2,795,2,1,0)
PRINT^XQ XQUTL PRINT
"KRN",9.2,796,-1)
0^12
"KRN",9.2,796,0)
XQ XUEDITOPT^Late Great XUEDITOP Option Editor^2980421.1215^^
"KRN",9.2,796,1,0)
^^4^4^2980421^
"KRN",9.2,796,1,1,0)
   
"KRN",9.2,796,1,2,0)
      The traditional way of editing options is still there, but it will
"KRN",9.2,796,1,3,0)
not be upgraded.  If it does what you want then go for it.  If you want
"KRN",9.2,796,1,4,0)
new features, you do it by modifying the XUEDITOPT Edit Template.
"KRN",9.2,797,-1)
0^13
"KRN",9.2,797,0)
XQ PROTECTED VARIABLES^Protected Variables^2980420.1014^^
"KRN",9.2,797,1,0)
^^12^12^2980420^
"KRN",9.2,797,1,1,0)
   
"KRN",9.2,797,1,2,0)
     Using the screen-based Option Editor (OPED) you may enter a string of
"KRN",9.2,797,1,3,0)
variables protected from a call to KILL^XUSCLEAN in the form: VAR1,VAR2,
"KRN",9.2,797,1,4,0)
etc.  From the opening page of OPED go to "Restrictions" and answer
"KRN",9.2,797,1,5,0)
"YES" to edit this field.  The variablers are delimited by commas and
"KRN",9.2,797,1,6,0)
stored in a field associated with the particular option {^DIC(19,Option
"KRN",9.2,797,1,7,0)
IEN,"NOKILL")}. 
"KRN",9.2,797,1,8,0)
  
"KRN",9.2,797,1,9,0)
     Note that this field is not available through the traditional option
"KRN",9.2,797,1,10,0)
Editor (^XUEDITOPT), only the newer one OPED.  Note also that this field
"KRN",9.2,797,1,11,0)
is option specific, that is, when a particular option calls KILL^XUSCLEAN
"KRN",9.2,797,1,12,0)
only the variables listed in that otion are protected.
"KRN",19,6,-1)
0^4
"KRN",19,6,0)
XUTIME^Time^^A^^^^^^^^^y^1^^
"KRN",19,6,1,0)
^^1^1^2890411^^^^
"KRN",19,6,1,1,0)
This command displays the time and date
"KRN",19,6,20)
W !!,$$HTE^XLFDT($H,"P")
"KRN",19,6,99)
54828,57814
"KRN",19,6,"U")
TIME
"KRN",19,9,-1)
2^1
"KRN",19,9,0)
XUMAINT^Menu Management^^M^.5^^105^^^n^n^225^n^^^^
"KRN",19,9,10,0)
^19.01PI^22^14
"KRN",19,9,10,22,0)
1515^OPED
"KRN",19,9,10,22,"^")
XQOPED
"KRN",19,9,"U")
MENU MANAGEMENT
"KRN",19,191,-1)
0^5
"KRN",19,191,0)
XUVERSIONEW-HELP^Kernel New Features Help^^A^^^^^^^^OLD KERNEL^^1^^
"KRN",19,191,1,0)
^^2^2^2900313^^^^
"KRN",19,191,1,0,"LE")
1
"KRN",19,191,1,1,0)
This option will direct you to a series of help frames describing the
"KRN",19,191,1,2,0)
new features of the Kernel.
"KRN",19,191,20)
S XQH="XUDOC NEW FEATURES*" D EN^XQH
"KRN",19,191,"U")
KERNEL NEW FEATURES HELP
"KRN",19,764,-1)
2^2
"KRN",19,764,0)
XUKERNEL^Kernel Management Menu^^M^66^^^^^^^225
"KRN",19,764,10,0)
^19.01IP^2^2
"KRN",19,764,10,2,0)
191
"KRN",19,764,10,2,"^")
XUVERSIONEW-HELP
"KRN",19,764,"U")
KERNEL MANAGEMENT MENU
"KRN",19,1515,-1)
0^3
"KRN",19,1515,0)
XQOPED^Screen-based Option Editor^^C^^^^^^^^KERNEL^y^1^1
"KRN",19,1515,1,0)
^^1^1^2971118^
"KRN",19,1515,1,1,0)
     This option runs the ScreenMan option editor form XQEDTOPT.
"KRN",19,1515,15)
D XA^XQOPED
"KRN",19,1515,20)
D EA^XQOPED
"KRN",19,1515,30)
DIC(19,
"KRN",19,1515,31)
AELMNQ
"KRN",19,1515,40)
[XQEDTOPT]
"KRN",19,1515,41)
19
"KRN",19,1515,43)
1^CS
"KRN",19,1515,"U")
SCREEN-BASED OPTION EDITOR
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",283,-1)
1^1
"PKG",283,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",283,22,0)
^9.49I^1^1
"PKG",283,22,1,0)
8.0^2950729^2950729^6
"PKG",283,22,1,"PAH",1,0)
46^2970930^66
"PKG",283,22,1,"PAH",1,1,0)
^^86^86^2980508
"PKG",283,22,1,"PAH",1,1,1,0)
                     XU*8*46 - Jump Problems and XQUIT
"PKG",283,22,1,"PAH",1,1,2,0)
 
"PKG",283,22,1,"PAH",1,1,3,0)
     There are no associated patches.
"PKG",283,22,1,"PAH",1,1,4,0)
 
"PKG",283,22,1,"PAH",1,1,5,0)
     This patch contains 22 routines, a new Kernel File (Menu Systen Quick
"PKG",283,22,1,"PAH",1,1,6,0)
Help), 13 Help Frames, and 3 Options; which fix a couple of problems with
"PKG",283,22,1,"PAH",1,1,7,0)
jumping.  Under certain circumstances the Entry Action and Header would
"PKG",283,22,1,"PAH",1,1,8,0)
not be executed for the parent option of a secondary menu tree and the
"PKG",283,22,1,"PAH",1,1,9,0)
XUCOMMAND option which is the parent of the Common Options.  In addition,
"PKG",283,22,1,"PAH",1,1,10,0)
the headers were occasionally executed before the entry action rather than
"PKG",283,22,1,"PAH",1,1,11,0)
after the entry action, the latter always being the correct sequence.
"PKG",283,22,1,"PAH",1,1,12,0)
[NOIS DAY-0994-40200, SPO-0597-50637]
"PKG",283,22,1,"PAH",1,1,13,0)
 
"PKG",283,22,1,"PAH",1,1,14,0)
     This patch also synchronizes the single uparrow jump ("^") and the
"PKG",283,22,1,"PAH",1,1,15,0)
double uparrow or rubber-band jump ("^^") so that both react the same
"PKG",283,22,1,"PAH",1,1,16,0)
when the variable XQUIT is set during the execution of an Entry Action.
"PKG",283,22,1,"PAH",1,1,17,0)
[NOIS DAY-0596-41019].
"PKG",283,22,1,"PAH",1,1,18,0)
 
"PKG",283,22,1,"PAH",1,1,19,0)
     The  program ^XQDATE has been modified to correct a flaw that could
"PKG",283,22,1,"PAH",1,1,20,0)
make time stand still by not cleaning up after itself.
"PKG",283,22,1,"PAH",1,1,21,0)
[NOIS BRX-0498-10234, CMO-0498-40588].
"PKG",283,22,1,"PAH",1,1,22,0)
 
"PKG",283,22,1,"PAH",1,1,23,0)
 
"PKG",283,22,1,"PAH",1,1,24,0)
     Patch 46 also includes an enhancement to XQUIT processing. If XQUIT
"PKG",283,22,1,"PAH",1,1,25,0)
is encountered in a jump path the software will return the user to the
"PKG",283,22,1,"PAH",1,1,26,0)
option the user jumped from rather than stopping in mid-jump.  It Also
"PKG",283,22,1,"PAH",1,1,27,0)
required the inclusion of a Screen-based Option Editor (OPED).  Please see
"PKG",283,22,1,"PAH",1,1,28,0)
the option "Kernel New Features Help" for a complete look at these
"PKG",283,22,1,"PAH",1,1,29,0)
features.
"PKG",283,22,1,"PAH",1,1,30,0)
  
"PKG",283,22,1,"PAH",1,1,31,0)
     This patch contains the routine XQP46INI, a post install routine,
"PKG",283,22,1,"PAH",1,1,32,0)
that may be deleted after the install.
"PKG",283,22,1,"PAH",1,1,33,0)
 
"PKG",283,22,1,"PAH",1,1,34,0)
==========================================================================
"PKG",283,22,1,"PAH",1,1,35,0)
 
"PKG",283,22,1,"PAH",1,1,36,0)
INSTALLATION: 
"PKG",283,22,1,"PAH",1,1,37,0)
   1.  These routines may be mapped on systems that allow
"PKG",283,22,1,"PAH",1,1,38,0)
       it so you may have to disable mapping.
"PKG",283,22,1,"PAH",1,1,39,0)
   2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This 
"PKG",283,22,1,"PAH",1,1,40,0)
       option will load the KIDS package onto your system.  
"PKG",283,22,1,"PAH",1,1,41,0)
   3.  The patch has now been loaded into a Transport global on your 
"PKG",283,22,1,"PAH",1,1,42,0)
       system. You now need to use KIDS to install the Transport global.  
"PKG",283,22,1,"PAH",1,1,43,0)
   4.  On the KIDS menu, under the 'Installation' menu, use the following 
"PKG",283,22,1,"PAH",1,1,44,0)
       options: 
"PKG",283,22,1,"PAH",1,1,45,0)
          Print Transport Global 
"PKG",283,22,1,"PAH",1,1,46,0)
          Compare Transport Global to Current System 
"PKG",283,22,1,"PAH",1,1,47,0)
          Verify Checksums in Transport Global 
"PKG",283,22,1,"PAH",1,1,48,0)
          Backup a Transport Global
"PKG",283,22,1,"PAH",1,1,49,0)
          Install Package(s) 
"PKG",283,22,1,"PAH",1,1,50,0)
   5.  MSM Sites - Answer YES to the question 'Want to MOVE routines to 
"PKG",283,22,1,"PAH",1,1,51,0)
       other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",283,22,1,"PAH",1,1,52,0)
   6.  Rebuild your mapped set if necessary.
"PKG",283,22,1,"PAH",1,1,53,0)
   7.  If users are allowed to remain on the system during installation
"PKG",283,22,1,"PAH",1,1,54,0)
       errors may occur when the routines are loaded.
"PKG",283,22,1,"PAH",1,1,55,0)
 
"PKG",283,22,1,"PAH",1,1,56,0)
==========================================================================
"PKG",283,22,1,"PAH",1,1,57,0)
 
"PKG",283,22,1,"PAH",1,1,58,0)
 
"PKG",283,22,1,"PAH",1,1,59,0)
               CHECK SUMS (^XTSUMBLD) AND PATCH LISTS
"PKG",283,22,1,"PAH",1,1,60,0)
 
"PKG",283,22,1,"PAH",1,1,61,0)
      The second line of these routines should look like this:
"PKG",283,22,1,"PAH",1,1,62,0)
           ;;8.0;KERNEL;**[patch list]**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,63,0)
 
"PKG",283,22,1,"PAH",1,1,64,0)
Program                  Before                  After
"PKG",283,22,1,"PAH",1,1,65,0)
XQ                  14578606  **9**         14086805  **9,46**
"PKG",283,22,1,"PAH",1,1,66,0)
XQ1                 11899807  **1,15,59,67** 11798740 **1,15,59,67,46**
"PKG",283,22,1,"PAH",1,1,67,0)
XQ12                17600046  **9,20**      16945386  **9,20,46**
"PKG",283,22,1,"PAH",1,1,68,0)
XQ33                 9007179  **49,73**      9049114  **49,73,46**
"PKG",283,22,1,"PAH",1,1,69,0)
XQ41                 9107783  (no patches)   9203288  **46**
"PKG",283,22,1,"PAH",1,1,70,0)
XQ71                13240707  (no patches)  13242248  **46**
"PKG",283,22,1,"PAH",1,1,71,0)
XQ72                10277570  **47**        12632194  **47,46**
"PKG",283,22,1,"PAH",1,1,72,0)
XQ72A                2885580  (no patches)   1074331  **46**
"PKG",283,22,1,"PAH",1,1,73,0)
XQ73                 6791337  (no patches)   9215463  **46**
"PKG",283,22,1,"PAH",1,1,74,0)
XQ75                14473337  **47**        14455067  **47,46**
"PKG",283,22,1,"PAH",1,1,75,0)
XQ8A                 4565915  (no patches)   4621077  **46**
"PKG",283,22,1,"PAH",1,1,76,0)
XQDATE               1671306  **71**         1673092  **71,46**
"PKG",283,22,1,"PAH",1,1,77,0)
XQHLP               11192542  (no patches)  11275643  **46**
"PKG",283,22,1,"PAH",1,1,78,0)
XQP46INI                   New                297767  **46**
"PKG",283,22,1,"PAH",1,1,79,0)
XQT                 14370309  **20,47**     14403654  **20,47,46**
"PKG",283,22,1,"PAH",1,1,80,0)
XQT1                10251041  **59**        10829937  **59,46**
"PKG",283,22,1,"PAH",1,1,81,0)
XQT2                12236113  (no patches)  12277933  **46**
"PKG",283,22,1,"PAH",1,1,82,0)
XQT3                12852830  (no patches)  12864808  **46**
"PKG",283,22,1,"PAH",1,1,83,0)
XQT4                15421169  (no patches)  15441632  **46**
"PKG",283,22,1,"PAH",1,1,84,0)
XQOPED                     New               1020766  **46**
"PKG",283,22,1,"PAH",1,1,85,0)
XQUIT                      New               6864597  **46**
"PKG",283,22,1,"PAH",1,1,86,0)
XQUTL                      New               3002763  **46**
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
22
"RTN","XQ")
0^5^B23720539
"RTN","XQ",1,0)
XQ ; SEA/MJM - Menu driver (Part 1) ;05/08/98  10:42
"RTN","XQ",2,0)
 ;;8.0;KERNEL;**9,46**;Jul 10, 1995
"RTN","XQ",3,0)
 D INIT^XQ12 Q:'$D(XQY)
"RTN","XQ",4,0)
 I $D(XQUR),$E(XQUR,1,2)="^^" S XQRB=1,XQJS=4
"RTN","XQ",5,0)
 I '$D(XQJS),$D(XQUR),XQUR'="",XQUR'["[" S:XQUR'[U XQUR=U_XQUR K ^VA(200,DUZ,202.1) S XQJS=0 D ^XQTOC
"RTN","XQ",6,0)
 I $D(XQUR),XQUR["[" K ^VA(200,DUZ,202.1) S XQJS=3,^XUTL("XQ",$J,"T")=1
"RTN","XQ",7,0)
 I $D(^VA(200,DUZ,202.1)),$L(^(202.1)) S XQJS=1 S %=+^(202.1) S XQUR=$G(^DIC(19,%,"U")) I XQUR]"" D ^XQTOC
"RTN","XQ",8,0)
M I '$D(XQVOL) S XQVOL=$G(^XUTL("XQ",$J,"XQVOL")) I '$L(XQVOL) D GETENV^%ZOSV S XQVOL=$P(Y,U,2)
"RTN","XQ",9,0)
 I $G(^%ZIS(14.5,"LOGON",XQVOL)) S XQNOLOG="" G H^XUS
"RTN","XQ",10,0)
 S:$S('$D(XQY0):1,'$L(XQY0):1,1:0) XQY0=^DIC(19,XQY,0) S XQT=$P(XQY0,U,4) G:XQT="" M3 K:'$D(XQJS) XQUR K X,XQNOGO,XQR,XQUIT,XQUEFLG ;,XQSV
"RTN","XQ",11,0)
 I $D(XQAUDIT),XQAUDIT D LOGOPT^XQ12
"RTN","XQ",12,0)
 I $P(XQY0,U,18) D CHKQUE^XQ92 I XQUEFLG S XQNOGO=""
"RTN","XQ",13,0)
 ;
"RTN","XQ",14,0)
 ;Execute the Entry Action and look for XQUIT
"RTN","XQ",15,0)
 D:'$D(XQM3)&("LOQX"'[XQT) LO K XQM3 I $D(XQUIT) D
"RTN","XQ",16,0)
 .S XQUIT=0
"RTN","XQ",17,0)
 .D ^XQUIT
"RTN","XQ",18,0)
 .Q
"RTN","XQ",19,0)
 ;
"RTN","XQ",20,0)
 G:$D(XQUR) ASK1 ;Jump start or continue
"RTN","XQ",21,0)
 I '$D(XQUIT),XQT'="A",$P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26)
"RTN","XQ",22,0)
 I XQT'="M" D:'$D(XQXFLG) ABT^XQ12 D:$P(XQXFLG,U,2) LOGRSRC^%ZOSV($P(XQY0,U))
"RTN","XQ",23,0)
 ;A call to PRIO was removed from the following line D:$L($P(XQY0,U,8))
"RTN","XQ",24,0)
 ;Since Kernel no longer resets priority from the Option File
"RTN","XQ",25,0)
 I XQT'="M" W:'^XUTL("XQ",$J,"T") !,$P(XQY0,U,2) W:$D(DUZ("SAV")) !,"Not when testing another's menus." S %=^XUTL("XQ",$J,"T"),^("T")=%+1,^(%+1)=XQY_XQPSM_U_XQY0 G M3:XQT'?1U!$D(DUZ("SAV"))
"RTN","XQ",26,0)
 I XQT'="M" D:'$D(XQXFLG) ABT^XQ12 D:+XQXFLG ABLOG^XQ12 K %,X,XQTT G @(XQT_"^XQ1")
"RTN","XQ",27,0)
M1 ;
"RTN","XQ",28,0)
 Q:XQY<1!'$D(^XUTL("XQ",$J,"T"))  D:'$D(XQXFLG) ABT^XQ12
"RTN","XQ",29,0)
 D:'$D(XQABOLD)&(+XQXFLG) ABLOG^XQ12 K XQABOLD W ! S XQUR=0,XQTT=^XUTL("XQ",$J,"T"),XQDIC=XQY,XQAA="Select "_$S($D(DUZ("SAV")):$P(DUZ("SAV"),U,3)_"'s ",1:"")_$P(XQY0,U,2)_" Option: " S:$D(XQMM("B")) XQAA=XQAA_XQMM("B")_"//"
"RTN","XQ",30,0)
 S:$S('XQTT:1,1:+$P(^XUTL("XQ",$J,XQTT),U,1)'=XQY) ^("T")=XQTT+1,^(XQTT+1)=XQY_XQPSM_U_XQY0 I $D(DUZ("AUTO")),DUZ("AUTO"),'$D(XQMM("J")),'$D(XQMM("N")) G EN^XQ2
"RTN","XQ",31,0)
 K:'$D(XQMM("J")) XQMM("N")
"RTN","XQ",32,0)
M2 ;
"RTN","XQ",33,0)
 I '$D(XQMMF),$D(XQMM("J")) G ^XQ74
"RTN","XQ",34,0)
 Q:$D(XQALEXIT)&'$D(XQALMENU)  K XQMMF I $D(XQMM("A")) S XQAA=XQMM("A") K XQMM("A") I $D(XQMM("B")),$L(XQMM("B")) S XQAA=XQAA_XQMM("B")_"//"
"RTN","XQ",35,0)
 D DISPLAY^XQALERT,CHK^XM
"RTN","XQ",36,0)
 S:'$D(DTIME) DTIME=60
"RTN","XQ",37,0)
 ;
"RTN","XQ",38,0)
ASK ;Get user's response in XQUR
"RTN","XQ",39,0)
 W !,XQAA R XQUR:DTIME I '$T Q:$D(XQALEXIT)  W *7,"  Timed out...." G CON^XQTOC
"RTN","XQ",40,0)
 I $D(XQALEXIT),XQUR=""!(XQUR["^") Q
"RTN","XQ",41,0)
 ;
"RTN","XQ",42,0)
ASK1 D SETSV ;Set XQSV to remember where we started from (XQY^XQDIC^XQY0)
"RTN","XQ",43,0)
 K XQUIT
"RTN","XQ",44,0)
 I XQUR="*",$D(DUZ("SAV")) G TESTN^XUS91
"RTN","XQ",45,0)
 I $D(XQJS),XQJS,XQJS'>2 D SET^XQTOC G JUMP^XQ72 ;Continue, 3=[LOGIN
"RTN","XQ",46,0)
 I XQUR["[" G:'$D(DUZ("SAV")) ^XQT W !,"Not when testing another's menus!" S %=^XUTL("XQ",$J,"T")+1,^("T")=%,^(%)=XQY_XQPSM_U_XQY0 G M3
"RTN","XQ",47,0)
 I XQUR="" S:$D(XQMM("B")) XQUR=XQMM("B") K XQMM("B") G:$L(XQUR) D S XQABOLD=1 G M3:^XUTL("XQ",$J,"T")>1,XPRMP^XQ12
"RTN","XQ",48,0)
 I XQUR=U G M3
"RTN","XQ",49,0)
 I $E(XQUR)=$C(34),$L(XQUR)>1 S XQUR=$P(XQUR,$C(34),2) D P^XQ75 G:XQY'>0 NOFIND K XQAA S XQY=+XQY,XQCH=XQUR G JUMP^XQ72
"RTN","XQ",50,0)
 ;,XQY=-1 G:$L(XQUR) M0 S XQUR=$C(34)
"RTN","XQ",51,0)
D I XQUR["^^" G:XQUR="^^" R^XQ73 S XQRB=1 S XQUR=$P(XQUR,U,2,99)
"RTN","XQ",52,0)
 I XQUR[U S XQUR=$P(XQUR,U,2) G:'$L(XQUR) NOFIND D S^XQ75 G D:'XQY,NOFIND:XQY<0 K XQAA S XQY=+XQY,XQCH=XQUR G:$D(XQRB) ^XQ73 G JUMP^XQ72
"RTN","XQ",53,0)
D0 G:XQUR'?1"?"1AN.ANP D1 D OPT^XQHLP G ASK
"RTN","XQ",54,0)
D1 G EN^XQ2:XQUR?."?"!(XQUR'?.ANP) D DIC^XQ71 G:'XQY D S:XQY>0 XQPSM=$S(XQPSM=("U"_DUZ):XQPSM_",P"_XQDIC,XQPSM[",":XQPSM,XQDIC>0:XQPSM,1:"P"_XQDIC)
"RTN","XQ",55,0)
 I XQY=-1,$O(^VA(200,DUZ,203,0))>0 S XQDIC="U"_DUZ D DIC^XQ71 G:'XQY D S:XQY>0 XQPSM="U"_DUZ_",P"_XQY
"RTN","XQ",56,0)
M0 I XQY=-1 S XQDIC=$O(^DIC(19,"B","XUCOMMAND",0)) S:XQDIC="" XQDIC=-1 D DIC^XQ71 G:'XQY D S:XQY>0 XQPSM="PXU" I XQY=-1 G M3:XQUR="HALT",NOFIND
"RTN","XQ",57,0)
 G:XQY=-2 NOFIND K XQAA S XQY=+XQY,XQCH=XQUR G M
"RTN","XQ",58,0)
 ;
"RTN","XQ",59,0)
NOFIND ;Could not find the option requested, go back and try again
"RTN","XQ",60,0)
 W:XQY=-1 "  ??" S %=^XUTL("XQ",$J,^XUTL("XQ",$J,"T")),XQY0=$P(%,U,2,999),XQY=+$P(%,U,1) K XQJS,XQR G M1
"RTN","XQ",61,0)
 ;
"RTN","XQ",62,0)
M3 I $P(XQY0,U,15),$D(^DIC(19,+XQY,15)),$L(^(15)) X ^(15) ;W "  ==> XQ+47"
"RTN","XQ",63,0)
 S %=^XUTL("XQ",$J,"T")-1,^("T")=% G H^XUS:(%'>0) S %=^XUTL("XQ",$J,%),XQY0=$P(%,U,2,999),XQPSM=$P(%,U,1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,99),XQM3="" I +XQY<0 D RBX^XQ73
"RTN","XQ",64,0)
 G M
"RTN","XQ",65,0)
 ;
"RTN","XQ",66,0)
LO I $P(XQY0,U,4)'="A",$P(XQY0,U,14),$D(^DIC(19,+XQY,20)),$L(^(20)) X ^(20) ;W " ==> LO^XQ"
"RTN","XQ",67,0)
 ;I $D(^XUTL("XQ",$J,"P")) S X=^("P") K ^("P") X ^%ZOSF("PRIORITY")
"RTN","XQ",68,0)
 Q
"RTN","XQ",69,0)
 ;
"RTN","XQ",70,0)
SETSV ;Record where we are now for posterity in XQSV
"RTN","XQ",71,0)
 N %
"RTN","XQ",72,0)
 S %=^XUTL("XQ",$J,^XUTL("XQ",$J,"T"))
"RTN","XQ",73,0)
 S XQSV=""
"RTN","XQ",74,0)
 S $P(XQSV,U)=+%
"RTN","XQ",75,0)
 S $P(XQSV,U,2)=$S($P(%,U)["PXU":$O(^DIC(19,"B","XUCOMMAND",0)),1:$P($P(%,U),"P",2)) I $P(XQSV,U,2)="" S $P(XQSV,U,2)=XQY
"RTN","XQ",76,0)
 S $P(XQSV,U,3)=$P(%,U,2,99)
"RTN","XQ",77,0)
 Q
"RTN","XQ",78,0)
 ;
"RTN","XQ",79,0)
PRIO ;This subroutine is no longer used.  Kernel no longer resets priority.
"RTN","XQ",80,0)
 ;S Y=10 X:$D(^%ZOSF("PRIINQ")) ^("PRIINQ") S ^XUTL("XQ",$J,"P")=Y,X=$P(XQY0,U,8) X ^%ZOSF("PRIORITY")
"RTN","XQ",81,0)
 Q
"RTN","XQ1")
0^19^B29654176
"RTN","XQ1",1,0)
XQ1 ; SEA/MJM - DRIVER FOR MENUMAN (PART 2) ;05/08/98  10:37
"RTN","XQ1",2,0)
 ;;8.0;KERNEL;**1,15,59,67,46**;Jul 10, 1995
"RTN","XQ1",3,0)
 S DIC=19,DIC(0)="AEQM" D ^DIC Q:Y<0  S (XQDIC,XQY)=+Y K DIC,XQUR,Y,^VA(200,DUZ,202.1) ;G ^XQ
"RTN","XQ1",4,0)
 D INIT^XQ12
"RTN","XQ1",5,0)
 G M^XQ
"RTN","XQ1",6,0)
 ;
"RTN","XQ1",7,0)
KILL K D,D0,D1,DA,DIC,DIE,DIR,DIS,DR,XQI,XQV,XQW,XQZ
"RTN","XQ1",8,0)
 D CLEAN^DILF
"RTN","XQ1",9,0)
 ;
"RTN","XQ1",10,0)
OUT ;Exit point for all option types
"RTN","XQ1",11,0)
 I $D(XQXFLG("ZEBRA")) L ^XWB("SESSION",XQXFLG("ZEBRA")) ;Clear by setting new lock
"RTN","XQ1",12,0)
 E  L  ;Clear the lock table
"RTN","XQ1",13,0)
 S U="^" I $D(ZTQUEUED) S XQF=$S('$D(^DIC(19,XQY,15)):0,'$L(^(15)):0,1:1) X:XQF ^(15) Q  ;Quit here if it's a Taskman job
"RTN","XQ1",14,0)
 I '$D(DT)!('$D(DTIME))!('$D(DUZ))!('$D(DUZ(0)))!('$D(DUZ("AG")))!('$D(DUZ("AUTO"))) D DVARS^XQ12
"RTN","XQ1",15,0)
 I $D(DUZ("AUTO")),DUZ("AUTO"),$D(XQY),$D(^DIC(19,+XQY,0))#2,$P(^(0),"^",11)["y" W !!,*7,"Press RETURN to continue..." R %:DTIME
"RTN","XQ1",16,0)
 I $D(^XUTL("XQ",$J,"RBX")) G RBX^XQ73
"RTN","XQ1",17,0)
 I $D(^XUTL("XQ",$J,"T")) I ^("T")<0 S ^("T")=$S($D(^XUTL("XQ",$J,1)):1,1:0)
"RTN","XQ1",18,0)
 I $D(^XUTL("XQ",$J,"T")) S XQY=+^(^("T")),XQT="" S:$D(^DIC(19,+XQY,0)) XQT=$P(^(0),U,4) I '$D(XQUIT),("LOQX"'[XQT),$D(^DIC(19,XQY,15)),$L(^(15)) X ^(15) ;W "  ==> OUT^XQ1"
"RTN","XQ1",19,0)
 Q:'$D(^XUTL("XQ",$J,"T"))
"RTN","XQ1",20,0)
 I $D(^XUTL("XQ",$J,"T")) S XQTT=$S($D(XQUIT):^XUTL("XQ",$J,"T"),1:^XUTL("XQ",$J,"T")-1) K XQUIT
"RTN","XQ1",21,0)
 I XQTT'<1 S ^XUTL("XQ",$J,"T")=XQTT,XQY=^(XQTT),XQY0=$P(XQY,U,2,999),XQPSM=$P(XQY,U,1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,99),XQABOLD=1
"RTN","XQ1",22,0)
 I XQTT=0 S XQY=-1
"RTN","XQ1",23,0)
 I $P(XQY0,U,4)="M" S XQAA=$P(XQY0,U,2) I $P(XQY0,U,17),$D(^DIC(19,+XQY,26)),$L(^(26)) X ^(26) ;W "  ==> OUT^XQ1"
"RTN","XQ1",24,0)
 K X,XQDICNEW,XQF,XQJS,XQOK,XQTT,XQZ,Y,Z
"RTN","XQ1",25,0)
 G M1^XQ
"RTN","XQ1",26,0)
 ;
"RTN","XQ1",27,0)
A ;ACTION type option entry point
"RTN","XQ1",28,0)
 X:$D(^DIC(19,+XQY,20)) ^(20) ;W "  ==> A^XQ1"
"RTN","XQ1",29,0)
 I $D(XQUIT) S XQUIT=1 D ^XQUIT I $D(XQUIT) K XQUIT G OUT
"RTN","XQ1",30,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26) ;W "  ==> A^XQ1"
"RTN","XQ1",31,0)
 G OUT
"RTN","XQ1",32,0)
 ;
"RTN","XQ1",33,0)
C ;ScreenMan type options
"RTN","XQ1",34,0)
 D DIC G:DA=-1 KILL S XQZ="DR,DDSFILE,DDSFILE(1)",XQW=39 D SET
"RTN","XQ1",35,0)
 S DDSPAGE=$P($G(^DIC(19,+XQY,43)),U) K:DDSPAGE="" DDSPAGE
"RTN","XQ1",36,0)
 S DDSPARM=$P($G(^DIC(19,+XQY,43)),U,2) K:DDSPARM="" DDSPARM
"RTN","XQ1",37,0)
 I DDSFILE["(",DDSFILE'[U S DDSFILE=U_DDSFILE
"RTN","XQ1",38,0)
 I $D(DDSFILE(1)),DDSFILE(1)["(",DDSFILE(1)'[U S DDSFILE(1)=U_DDSFILE(1)
"RTN","XQ1",39,0)
 D ^DDS K DDSFILE G C
"RTN","XQ1",40,0)
 ;
"RTN","XQ1",41,0)
P ;PRINT type option
"RTN","XQ1",42,0)
 S XQZ="DIC,PG,L,FLDS,BY,FR,TO,DHD,DCOPIES,DIS(0),IOP,DHIT,DIOBEG,DIOEND",XQW=59 D SET
"RTN","XQ1",43,0)
 I $D(DIS(0))#2 F XQI=1:1:3 Q:'$D(^DIC(19,+XQY,69+(XQI/10)))  Q:^(69+(XQI/10))=""  S DIS(XQI)=^(69+(XQI/10))
"RTN","XQ1",44,0)
 S:$D(XQIOP) IOP=XQIOP
"RTN","XQ1",45,0)
 S XQI=$G(^DIC(19,XQY,79)) S:XQI>0 DIASKHD="" S:$P(XQI,U,2) DISUPNO=1 S:$P(XQI,U,3) DIPCRIT=1
"RTN","XQ1",46,0)
 D D1,EN1^DIP K IOP,DIOBEG,DIS,DP G OUT
"RTN","XQ1",47,0)
 ;
"RTN","XQ1",48,0)
I ;INQUIRE type option
"RTN","XQ1",49,0)
I1 D DIC G KILL:DA=-1 S DI=DIC,XQZ="DIC,DR,DIQ(0)",XQW=79 D SET,D1 S:$D(DIC)[0 DIC=DI
"RTN","XQ1",50,0)
 I $D(^DIC(19,+XQY,63)),$L(^(63)) S FLDS=^(63)
"RTN","XQ1",51,0)
 E  S FLDS="[CAPTIONED]"
"RTN","XQ1",52,0)
 I $G(^DIC(19,+XQY,83))["Y" S IOP="HOME"
"RTN","XQ1",53,0)
I2 ;
"RTN","XQ1",54,0)
 W ! S XQZ="DHD",XQW=66 D SET K ^UTILITY($J),^(U,$J) S ^($J,1,DA)="",@("L=+$P("_DI_"0),U,2)"),DPP(1)=L_"^^^@",L=0,C=",",Q="""",DPP=1,DPP(1,"IX")="^UTILITY(U,$J,"_DI_"^2" D N^DIP1 S Y=XQY G I1
"RTN","XQ1",55,0)
 ;
"RTN","XQ1",56,0)
E ;EDIT type option entry point
"RTN","XQ1",57,0)
E1 D DIC G KILL:DA=-1 K DIE,DIC S XQZ="DIE,DR",XQW=49 D SET S XQZ="DIE(""W"")",XQW=53 D SET
"RTN","XQ1",58,0)
 I $D(^DIC(19,XQY,53)),$L(^(53)) S %=^(53),DIE("NO^")=$S(%="N":"",1:%)
"RTN","XQ1",59,0)
 S:DIE["(" DIE=U_DIE D ^DIE S Y=XQY G E1
"RTN","XQ1",60,0)
 ;
"RTN","XQ1",61,0)
 ;
"RTN","XQ1",62,0)
DIC ;Get FileMan parameters from Option File and do look up
"RTN","XQ1",63,0)
 W ! K DIC S XQZ="DIC,DIC(0),DIC(""A""),DIC(""B""),DIC(""S""),DIC(""W""),D",XQW=29 D SET,D1
"RTN","XQ1",64,0)
 I '$D(D) D ^DIC
"RTN","XQ1",65,0)
 I $D(D) S:D="" D="B" D IX^DIC
"RTN","XQ1",66,0)
 I $D(Y),Y>0,$P(Y,U,3) S XQDICNEW=Y
"RTN","XQ1",67,0)
 S DA=+Y,Y=XQY
"RTN","XQ1",68,0)
 Q
"RTN","XQ1",69,0)
 ;
"RTN","XQ1",70,0)
D1 S:DIC["(" DIC=U_DIC Q
"RTN","XQ1",71,0)
 ;
"RTN","XQ1",72,0)
SET F XQI=1:1 S XQV=$P(XQZ,",",XQI) Q:XQV=""  K @XQV I $D(^DIC(19,+XQY,XQW+XQI)),^(XQW+XQI)]"" S @XQV=^(XQW+XQI)
"RTN","XQ1",73,0)
 I $D(DIC("A")),DIC("A")]"" S DIC("A")=DIC("A")_" "
"RTN","XQ1",74,0)
 K XQI,J
"RTN","XQ1",75,0)
 Q
"RTN","XQ1",76,0)
 ;
"RTN","XQ1",77,0)
R ;RUN ROUTINE type option entry point
"RTN","XQ1",78,0)
 G:'$D(^DIC(19,XQY,25)) OUT:$D(ZTQUEUED),M1^XQ S XQZ=^(25) G:'$L(XQZ) M1^XQ S:XQZ'[U XQZ=U_XQZ I XQZ["[" D DO^%XUCI G OUT
"RTN","XQ1",79,0)
 D @XQZ G OUT
"RTN","XQ1",80,0)
 ;
"RTN","XQ1",81,0)
W ;Window type option entry point
"RTN","XQ1",82,0)
 S XQOK=1
"RTN","XQ1",83,0)
 I $D(^DIC(19,XQY,25)),$L(^(25)) D  G OUT ;Routine type
"RTN","XQ1",84,0)
 .S XQZ=^DIC(19,XQY,25)
"RTN","XQ1",85,0)
 .S:XQZ'[U XQZ=U_XQZ
"RTN","XQ1",86,0)
 .I XQZ["[" D DO^%XUCI Q
"RTN","XQ1",87,0)
 .D @XQZ
"RTN","XQ1",88,0)
 .Q
"RTN","XQ1",89,0)
 ;
"RTN","XQ1",90,0)
 I $D(^DIC(19,XQY,24)),$L(^(24)) D  G:XQOK OUT ;Pointer type
"RTN","XQ1",91,0)
 .S XQZ=^DIC(19,XQY,24)
"RTN","XQ1",92,0)
 .S XQZ=$P($G(^XTV(8995,XQZ,0)),U) I XQZ="" S XQOK=0 Q
"RTN","XQ1",93,0)
 .D PREP^XG
"RTN","XQ1",94,0)
 .S XQWIN=$$NEXTNM^XGCLOAD("XQWIN")
"RTN","XQ1",95,0)
 .;D GET^XGCLOAD(XQZ,XQWIN,"^TMP($J)")
"RTN","XQ1",96,0)
 .D GET^XGCLOAD(XQZ,$NA(^TMP($J,XQWIN)))
"RTN","XQ1",97,0)
 .D M^XG(XQWIN,$NA(^TMP($J,XQWIN)))
"RTN","XQ1",98,0)
 .D ESTA^XG() ;Send it off to window land
"RTN","XQ1",99,0)
 .; 
"RTN","XQ1",100,0)
 .D K^XG(XQWIN) ;Return here after the ESTOP
"RTN","XQ1",101,0)
 .;I $D(^%ZOSF("OS")),^%ZOSF("OS")["MSM" ZSTOP
"RTN","XQ1",102,0)
 .Q
"RTN","XQ1",103,0)
 ;
"RTN","XQ1",104,0)
 G M1^XQ ;Window failed
"RTN","XQ1",105,0)
 ;
"RTN","XQ1",106,0)
Z ;Window suite option       
"RTN","XQ1",107,0)
 G EN^XQSUITE
"RTN","XQ1",108,0)
 ;
"RTN","XQ1",109,0)
S ;Server-type option pseudo entry-point can't be invoked from Meun System
"RTN","XQ1",110,0)
 G OUT
"RTN","XQ1",111,0)
 ;
"RTN","XQ1",112,0)
B ;Client/Server option can't be run from menu system
"RTN","XQ1",113,0)
 G OUT
"RTN","XQ1",114,0)
 ;
"RTN","XQ1",115,0)
L ;OE/RR Limited option
"RTN","XQ1",116,0)
O ;OE/RR Protocol (orderables) type option entry point
"RTN","XQ1",117,0)
X ;OE/RR Extended Action type option (Subset of Protocol type)
"RTN","XQ1",118,0)
Q ;OE/RR Protocol Menu type option entry point
"RTN","XQ1",119,0)
 S XQOR=+XQY,XQOR(1)=XQT D XQ^XQOR K XQOR G OUT
"RTN","XQ1",120,0)
 ;
"RTN","XQ1",121,0)
ZTSK ;Task Manager entry point
"RTN","XQ1",122,0)
 G:$G(XQSCH)'>0 ZTSK2 S U="^",XQ=$G(^DIC(19.2,XQSCH,0)),XQY=+XQ Q:XQY'>0
"RTN","XQ1",123,0)
 S X1=$P(XQ,U,2),X2=$P(XQ,U,6)
"RTN","XQ1",124,0)
REQ S DA=XQSCH,DIE="^DIC(19.2,",DR=$S((X2="")&($P(XQ,U,9)=""):".01///@",X2="":"2///@",1:"2////"_$$SCH^XLFDT(X2,+X1,1))
"RTN","XQ1",125,0)
 L +^%ZTSK(ZTSK,0) D ^DIE L -^%ZTSK(ZTSK,0)
"RTN","XQ1",126,0)
 K DA,DIE,DR,X1,X2,XQ,ZTQPARAM
"RTN","XQ1",127,0)
 I $D(^DIC(19.2,XQSCH,3)),$L(^(3)) S ZTQPARAM=^(3)
"RTN","XQ1",128,0)
 I $D(^DIC(19.2,XQSCH,2)) D  ;Build other symbols
"RTN","XQ1",129,0)
 . S X2=XQSCH N XQSCH,XQY
"RTN","XQ1",130,0)
 . F X1=0:0 S X1=$O(^DIC(19.2,X2,2,X1)) Q:X1'>0  S X=^(X1,0),@($P(X,U)_"="_$P(X,U,2))
"RTN","XQ1",131,0)
 . Q
"RTN","XQ1",132,0)
ZTSK2 S ZTREQ="@" Q:'$D(XQY)  D UI^XQ12
"RTN","XQ1",133,0)
 Q:'$D(^DIC(19,XQY,0))  S XQY0=^(0),XQT=$P(XQY0,U,4) Q:XQT'="A"&(XQT'="P")&(XQT'="R")
"RTN","XQ1",134,0)
 ;This line removed because Kernel no longer supports reseting priority
"RTN","XQ1",135,0)
 ;from the Option File.
"RTN","XQ1",136,0)
 ;S X=$P(XQY0,U,8) I X>0,X<11 X ^%ZOSF("PRIORITY")
"RTN","XQ1",137,0)
 I $P(XQY0,U,3)]""!($D(XQUIT)) S XQT="KILL"
"RTN","XQ1",138,0)
 ;
"RTN","XQ1",139,0)
RUN S:XQT="P"&$L(IO) XQIOP=ION_";"_IOST_";"_IOM_";"_IOSL G @XQT
"RTN","XQ1",140,0)
 Q
"RTN","XQ12")
0^14^B34860436
"RTN","XQ12",1,0)
XQ12 ; SEA/MJM - MENU MANAGER UTILITIES ;04/13/98  11:08
"RTN","XQ12",2,0)
 ;;8.0;KERNEL;**9,20,46**;Jul 10, 1995
"RTN","XQ12",3,0)
 ;
"RTN","XQ12",4,0)
DVARS ;Set up (or reset) necessary variables. From ^XQ1 and ^XQT1.
"RTN","XQ12",5,0)
 S U="^" I '$D(DUZ)#2 S DUZ=^XUTL("XQ",$J,"DUZ")
"RTN","XQ12",6,0)
 S:'$D(DUZ(0))#2 DUZ(0)="" I DUZ(0)="" S:$D(^VA(200,DUZ,0)) DUZ(0)=$P(^(0),U,4)
"RTN","XQ12",7,0)
 I '$D(DT) D ^XQDATE S DT=$P(%,".")
"RTN","XQ12",8,0)
 I '$D(DUZ("AG")),$D(^XTV(8989.3,1,0)) S DUZ("AG")=$P(^(0),U,8)
"RTN","XQ12",9,0)
 I '$D(IOS) S IOS=$S($D(^XUTL("XQ",$J,"IOS"))#2:^("IOS"),1:"")
"RTN","XQ12",10,0)
 I '$D(DTIME) S DTIME=$$DTIME^XUP(DUZ,IOS)
"RTN","XQ12",11,0)
 I '$D(DUZ("AUTO")) S I=$S($D(^VA(200,DUZ,200)):$P(^(200),U,6),1:"") S:'$L(I) I=$S($D(^%ZIS(1,$I,"XUS")):$P(^("XUS"),U,6),1:"") S:'$L(I) I=$S($D(^XTV(8989.3,1,"XUS")):$P(^("XUS"),U,6),1:"") S:'$L(I) I=1 S DUZ("AUTO")=I
"RTN","XQ12",12,0)
 Q
"RTN","XQ12",13,0)
 ;
"RTN","XQ12",14,0)
INIT ;Entry for new logon, called from the top of ^XQ and ^XQ1
"RTN","XQ12",15,0)
 K DIC,Y Q:$D(DUZ)[0  Q:'$D(^VA(200,DUZ,0))
"RTN","XQ12",16,0)
 ;S:'$D(XQY) XQY=^VA(200,DUZ,201)
"RTN","XQ12",17,0)
 I '$D(XQUSER) S XQUSER=$P($P(^VA(200,DUZ,0),U),",",2)_" "_$P($P(^(0),U),",")
"RTN","XQ12",18,0)
 ;
"RTN","XQ12",19,0)
 ;Select device tied option, primary menu, or primary window
"RTN","XQ12",20,0)
 ;
"RTN","XQ12",21,0)
 S:'$D(XQY) XQY=""
"RTN","XQ12",22,0)
 S %=$G(^VA(200,DUZ,201)),^XUTL("XQ",$J,"XQM")=+%,^("XQW")=$P(%,"^",2)
"RTN","XQ12",23,0)
 D:'$D(IO) HOME^%ZIS
"RTN","XQ12",24,0)
 I IO]"" S %=$G(^%ZIS(1,IO,201)) I %]"" S XQY=%
"RTN","XQ12",25,0)
 I XQY']"" D
"RTN","XQ12",26,0)
 .S %=$G(^VA(200,DUZ,201))
"RTN","XQ12",27,0)
 .S XQPM=$P(%,U),XQPW=$P(%,U,2),XQSD=$P(%,U,3)
"RTN","XQ12",28,0)
 .I XQPW']"" S XQY=XQPM Q
"RTN","XQ12",29,0)
 .I XQSD="M" S XQY=XQPM
"RTN","XQ12",30,0)
 .E  S XQY=XQPW
"RTN","XQ12",31,0)
 .Q
"RTN","XQ12",32,0)
 ;
"RTN","XQ12",33,0)
 D SET^XQCHK
"RTN","XQ12",34,0)
 S ^XUTL("XQ",$J,1)=XQY_"P"_XQY_"^"_XQY0,^("T")=1
"RTN","XQ12",35,0)
 S XQDIC=XQY,XQPSM="P"_XQY
"RTN","XQ12",36,0)
 ;
"RTN","XQ12",37,0)
 ;Fire LOGIN menu template if they have one and its the first login
"RTN","XQ12",38,0)
 ;of the day.  XQXFLG("LLOG") is copy of ^VA(200,DUZ,1.1) before it's
"RTN","XQ12",39,0)
 ;updated at XUS1+47
"RTN","XQ12",40,0)
 I $D(^VA(200,DUZ,19.8,"B","LOGIN")) D
"RTN","XQ12",41,0)
 .Q:'$D(XQXFLG("LLOG"))
"RTN","XQ12",42,0)
 .S XQLAST=$P($P(XQXFLG("LLOG"),U),".") ;Get last login DT
"RTN","XQ12",43,0)
 .Q:+XQLAST<1
"RTN","XQ12",44,0)
 .I XQLAST<DT S XQUR="[LOGIN",XQJS=3
"RTN","XQ12",45,0)
 .K XQLAST
"RTN","XQ12",46,0)
 .Q
"RTN","XQ12",47,0)
 K XQXFLG("LLOG")
"RTN","XQ12",48,0)
 ;
"RTN","XQ12",49,0)
UI ;Entry for TaskMan (DUZ may =  0), from ZTSK^XQ1
"RTN","XQ12",50,0)
 D DVARS I '$D(^XUTL("XQ",$J,0)) D ^XQDATE S ^XUTL("XQ",$J,0)=%_U_%Y
"RTN","XQ12",51,0)
 S:'$D(XQDIC) XQDIC="P"_XQY
"RTN","XQ12",52,0)
 S:'$D(XQPSM) XQPSM="P"_XQY
"RTN","XQ12",53,0)
 S:'$D(XQJS)&'$D(ZTQUEUED) XQY0=^DIC(19,XQY,0),^XUTL("XQ",$J,"T")=0,^("DUZ")=DUZ,^("XQM")=XQY,XQPSM="P"_XQY
"RTN","XQ12",54,0)
 S XQCY=XQY D ^XQCHK I XQCY<1 D
"RTN","XQ12",55,0)
 .S XQPRMN=1,XQL=0
"RTN","XQ12",56,0)
 .D:'$D(ZTQUEUED) MES^XQCHK,PAUSE^XQ6
"RTN","XQ12",57,0)
 .;G:'$D(ZTQUEUED) ^XUSCLEAN S XQY=-1
"RTN","XQ12",58,0)
 .S XQY=-1
"RTN","XQ12",59,0)
 .Q
"RTN","XQ12",60,0)
 S XQM3="" I $P(XQY0,U,4)'="A",$P(XQY0,U,14),$D(^DIC(19,XQY,20)),$L(^(20)) X ^(20) ;W "  ==> XQ12+59"
"RTN","XQ12",61,0)
 ;I $D(XQUIT),'$D(ZTQUEUED) S XQL=0 W !!,"The variable XQUIT was encountered in the Entry Action of your Primary Menu." D PAUSE^XQ6 S XQY=-1 G ^XUSCLEAN
"RTN","XQ12",62,0)
 I $D(XQUIT),'$D(ZTQUEUED) D PM^XQUIT I $D(XQUIT) S XQY=-1 G ^XUSCLEAN
"RTN","XQ12",63,0)
 ;I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26)
"RTN","XQ12",64,0)
ABT ;WARNING: XQXFLG is also used by OERR test sites.
"RTN","XQ12",65,0)
 S $P(XQXFLG,U)=$S($O(^XTV(8989.3,1,"ABPKG",0))>0:1,1:0)
"RTN","XQ12",66,0)
CMP S $P(XQXFLG,U,2)=$S('$D(^XTV(8989.3,1,"XUCP")):0,1:^("XUCP")="Y")
"RTN","XQ12",67,0)
 K %,%Y,PGM,X,XQCY,XQPM,XQPW,XQSD
"RTN","XQ12",68,0)
 Q
"RTN","XQ12",69,0)
 ;
"RTN","XQ12",70,0)
LOGOPT ;Option audit
"RTN","XQ12",71,0)
 S:'$D(XQLTL) XQLTL=""
"RTN","XQ12",72,0)
 S %=$P($H,",",2),%=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"RTN","XQ12",73,0)
 I XQLTL S $P(^XUSEC(19,XQLTL,0),U,5)=%,XQLTL=0
"RTN","XQ12",74,0)
 S I=1 I XQAUDIT'=1 S I=0 F J=1:2 S K1=$P(XQAUDIT,U,J),K2=$P(XQAUDIT,U,J+1) Q:'$L(K1)!I  I K1=2&(K2=XQY)!(K1=3&($E($P(XQY0,U,1),1,$L(K2))=K2)) S I=1
"RTN","XQ12",75,0)
 Q:'I  S XQLTL=% L +^XUSEC(19,0) S %=^XUSEC(19,0),XQLTL=XQLTL+(.00000001*$S(XQLTL'=$E($P(%,U,3),1,14):10,1:$E($P(%,U,3),15,16)+1)),$P(^(0),U,3,4)=XQLTL_"^"_($P(%,U,4)+1) L -^XUSEC(19,0)
"RTN","XQ12",76,0)
 D GETENV^%ZOSV S XUVOL=$P(Y,U,2),^XUSEC(19,XQLTL,0)=XQY_U_DUZ_U_$I_U_$J_"^^"_XUVOL
"RTN","XQ12",77,0)
 Q
"RTN","XQ12",78,0)
XPRMP D CHK^XM W !!,"Do you really want to ",$S(XQUR="REST":"restart",1:"halt"),"? YES// " R X:10 S:'$L(X) X="Y"
"RTN","XQ12",79,0)
 I "Yy"'[$E(X) S Y=1 S:^XUTL("XQ",$J,"T")>1 Y=^("T")-1 S ^("T")=Y,Y=^(Y),XQY0=$P(Y,U,2,99),XQPSM=$P(Y,U,1),(XQY,XQDIC)=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3),XQAA="Select "_$P(XQY0,U,2)_" Option: " W ! G ASK^XQ
"RTN","XQ12",80,0)
 G REST:XQUR="REST",HALT:XQUR'="CON"
"RTN","XQ12",81,0)
 ;
"RTN","XQ12",82,0)
CON ;Continue option logic.  Enter from ASK^XQ on timeout.
"RTN","XQ12",83,0)
 W !!,"Do you want to halt and continue with this option later? YES// " R XQUR:20 S:(XQUR="")!('$T) XQUR="Y"
"RTN","XQ12",84,0)
 I "YyNn"'[$E(XQUR,1) W !!,"   If you enter 'Y' or 'RETURN' you will halt and continue here next time",!,"    you logon to the computer.",!,"   If you enter 'N' you will resume processing where you were." G CON
"RTN","XQ12",85,0)
 I "Nn"[$E(XQUR,1) W ! S XQUR=0,Y=^XUTL("XQ",$J,"T"),Y=^(Y),XQY0=$P(Y,U,2,99),XQPSM=$P(Y,U,1),(XQY,XQDIC)=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3),XQAA="Select "_$P(XQY0,U,2)_" Option: " G ASK^XQ
"RTN","XQ12",86,0)
 S X=^XUTL("XQ",$J,^XUTL("XQ",$J,"T")),Y=^("XQM") I (+X'=+Y) S XQM="P"_+Y S XQPSM=$S($D(^XUTL("XQO",XQM,"^",+X)):XQM,$D(^XUTL("XQO","PXU","^",+X)):"PXU",1:"") D:XQPSM="" SS S:XQPSM'="" ^VA(200,DUZ,202.1)=+X_XQPSM
"RTN","XQ12",87,0)
 S X=$P($H,",",2),X=(X>41400&(X<46800))
"RTN","XQ12",88,0)
 W !!,$P("HMM^OK^ALL RIGHT^WELL CERTAINLY^FINE","^",$R(5)+1),"... ",$P("SEE YOU LATER^I'LL BE READY WHEN YOU ARE.^HURRY BACK!^HAVE A GOOD LUNCH BREAK!","^",$R(3)+X+1)
"RTN","XQ12",89,0)
HALT ;
"RTN","XQ12",90,0)
 G H^XUS
"RTN","XQ12",91,0)
REST S XQNOHALT=1 D ^XUSCLEAN G ^XUS
"RTN","XQ12",92,0)
 ;
"RTN","XQ12",93,0)
SS ;Search Secondaries for a particuloar option.
"RTN","XQ12",94,0)
 Q:'$D(^VA(200,DUZ,203,0))  Q:$P(^VA(200,DUZ,203,0),U,4)<1
"RTN","XQ12",95,0)
 S Y=0 F XQI=1:1 Q:XQPSM'=""  S Y=$O(^VA(200,DUZ,203,Y)) Q:Y'>0  S %=^(Y,0) I $D(^XUTL("XQO","P"_%,"^",+X)) S XQPSM="U"_DUZ_",P"_%
"RTN","XQ12",96,0)
 Q
"RTN","XQ12",97,0)
ABLOG S %2=0 F %3=0:0 S %2=$O(^XTV(8989.3,1,"ABPKG",%2)) Q:%2'>0  F %=0:0 S %=$O(^XTV(8989.3,1,"ABPKG",%2,1,%)) Q:%'>0  S %1=$P(^(%,0),U) I $E(XQY0,1,$L(%1))=%1,$E(XQY0,$L(%1)+1)'="Z" D ABLOG1
"RTN","XQ12",98,0)
 K %,%1,%2,%3,%4
"RTN","XQ12",99,0)
 Q
"RTN","XQ12",100,0)
ABLOG1 F %4=0:0 S %4=$O(^XTV(8989.3,1,"ABPKG",%2,1,%,1,%4)) Q:%4'>0  S %1=$P(^(%4,0),U) I $E(XQY0,1,$L(%1))=%1 Q
"RTN","XQ12",101,0)
 I %4'>0 S:'$D(^XTV(8989.3,1,"ABOPT",0)) ^(0)="^8989.333P^" S:'$D(^(XQY)) %4=+$P(^(0),U,3),$P(^(0),U,3,4)=$S(XQY>%4:XQY,1:%4)_U_($P(^(0),U,4)+1) S ^(0)=XQY_U_($S($D(^(XQY,0)):$P(^(0),U,2),1:0)+1),%2="A"
"RTN","XQ12",102,0)
 Q
"RTN","XQ33")
0^20^B11485714
"RTN","XQ33",1,0)
XQ33 ;SEA/AMF/JLI/MJM - REMOVE UNREFERENCED OPTIONS ;04/13/98  13:29
"RTN","XQ33",2,0)
 ;;8.0;KERNEL;**49,73,46**;Jul 10, 1995
"RTN","XQ33",3,0)
DUO ; Entry point to delete unreferenced options from the option file.
"RTN","XQ33",4,0)
 W !!,*7,"Do you want to delete unreferenced options" S %=2 D YN^DICN Q:%<0!(%=2)  I '% W !,"Enter a 'Y' if you want an opportunity to delete orphan options which are not",!,"primary menus, secondary menus, or tasked." G DUO
"RTN","XQ33",5,0)
 K ^TMP($J) S IOP="HOME" D ^%ZIS K IOP S XQENT=0
"RTN","XQ33",6,0)
 R !!,"Select PACKAGE/OPTION name: ALL// ",X:DTIME S:'$T X=U S DIC=9.4,DIC(0)="EMZ" Q:X[U  S:'$L(X) X="ALL"
"RTN","XQ33",7,0)
 I X="ALL" S XQS="@z",XQE="zzz" G GET
"RTN","XQ33",8,0)
 D ^DIC I Y>0 S XQS=$P(Y(0),U,2),XQE=XQS_"zzz" G GET
"RTN","XQ33",9,0)
 S DIC=19,DIC(0)="QEMZ" D ^DIC G:Y<0 DUO S XQE=$P(Y(0),U,1),XQS=$E(XQE,1,$L(XQE)-1)_$C($A($E(XQE,$L(XQE))-1))_"zzz"
"RTN","XQ33",10,0)
GET W !,"Getting the list of unreferenced options..." D LP W ! I '$D(^TMP($J)) W "...NONE FOUND",! G OUT
"RTN","XQ33",11,0)
 S XQI=0 F XQII=0:1 S DIC="^DIC(19,",DR="",XQI=$O(^TMP($J,XQI)) Q:XQI'>0  S DA=XQI W @IOF K S D EN^DIQ D DUO1 Q:XQSTOP
"RTN","XQ33",12,0)
 G OUT
"RTN","XQ33",13,0)
DUO1 ;
"RTN","XQ33",14,0)
 W !!,"Want to delete this option" S %=2,XQSTOP=0 D YN^DICN S:%<0 XQSTOP=1 Q:%<0!(%=2)  I '% W !,"Enter a 'Y' if you want to remove this option from the option file" G DUO1
"RTN","XQ33",15,0)
 S DIK="^DIC(19," D ^DIK ;S DIE=19,DR=".01///@" D ^DIE
"RTN","XQ33",16,0)
 Q
"RTN","XQ33",17,0)
LP S XQUI=0,XQJ=XQS F  S XQJ=$O(^DIC(19,"B",XQJ)) Q:XQJ=""!XQUI!(XQJ]XQE)  D LP1
"RTN","XQ33",18,0)
 Q
"RTN","XQ33",19,0)
LP1 S XQI=0 F  S XQI=$O(^DIC(19,"B",XQJ,XQI)) Q:XQI'>0!XQUI  D LP2
"RTN","XQ33",20,0)
 Q
"RTN","XQ33",21,0)
LP2 I "BOQSX"[$P(^DIC(19,XQI,0),U,4) K XQFL Q  ;Special options
"RTN","XQ33",22,0)
 S XQFL="" W:XQENT !,XQJ,?31 I '$D(^DIC(19,"AD",XQI)) W:XQENT "** no parents **" G PRI
"RTN","XQ33",23,0)
 K XQFL S (XQK,XQLEN,XQNM)=0
"RTN","XQ33",24,0)
 I XQENT F  S XQK=$O(^DIC(19,"AD",XQI,XQK)) Q:XQK'>0  I $D(^DIC(19,XQK,0)) S L=$P(^DIC(19,XQK,0),U,1) S:XQLEN+$L(L)+2>34 XQLEN=0 W:'XQLEN&XQNM !?31 W:XQNM&XQLEN ", " W $P(^DIC(19,XQK,0),U,1) S XQLEN=XQLEN+$L(L)+2,XQNM=XQNM+1
"RTN","XQ33",25,0)
PRI ;
"RTN","XQ33",26,0)
 I $D(^VA(200,"AP",XQI)) W:XQENT ?65,"-P-" K XQFL ;Primary Menu
"RTN","XQ33",27,0)
 I $D(^VA(200,"AD",XQI)) W:XQENT ?70,"-S-" K XQFL ;Secondary Menu
"RTN","XQ33",28,0)
 I $D(^DIC(19,XQI,200.9)),^(200.9)["y" W:XQENT&($P(^(200.9),U)["y") ?75,"-T-" K XQFL ;Taskman or don't delete
"RTN","XQ33",29,0)
 E  I $D(^DIC(19.2,"B",XQI)) W:XQENT ?75,"-T-" K XQFL ;Taskman
"RTN","XQ33",30,0)
 I $D(XQFL) S ^TMP($J,XQI)=""
"RTN","XQ33",31,0)
 Q
"RTN","XQ33",32,0)
 ;
"RTN","XQ33",33,0)
OUT D ^%ZISC
"RTN","XQ33",34,0)
 K XQUI,XQJ,XQS,XQE,XQK,XQLEN,XQNM,XQI,I,J,K,C,L,DIC,POP,X,XQDSH,XQENT,XQHDR,XQP,Y,ZISI,ZTDTH,ZTSAVE,ZTRTN,ZTDESC,%A1,S,XQFL
"RTN","XQ33",35,0)
 K %Y,A,D0,D1,DA,DIW,DIWF,DIWL,DIWR,DIWT,DK,DL,DN,DR,DX,XQSTOP
"RTN","XQ33",36,0)
 Q
"RTN","XQ41")
0^6^B13431676
"RTN","XQ41",1,0)
XQ41 ;SEA/JLI - Diagram menus (continued) ;08/27/97  14:47
"RTN","XQ41",2,0)
 ;;8.0;KERNEL;**46**;Jul 10, 1995
"RTN","XQ41",3,0)
L G LL:'$D(^TMP($J,"XQM",XQL,L)) K X1,X2,X3 S Y=1,XQV=^(L) S:$D(^(L,.1)) X1=^(.1) S:$D(^(.2)) X2=^(.2) S:$D(^(.3)) X3=^(.3) I $D(^(1)) S XQV(L)=^(1)
"RTN","XQ41",4,0)
 E  S:$P(XQV,U,5)'="M" XQT=L
"RTN","XQ41",5,0)
 S XQP=$P(XQV,U,1),XQP(L)=$E("-----",1,5-$L(XQP))_XQP_" ",X=$P(XQV,U,3)_" ["_$P(XQV,U,2)_"]" D T I $P(XQV,U,4)]"" S X="**UNAVAILABLE**" D T
"RTN","XQ41",6,0)
 G:XQ4<0 LL I $P(XQV,U,7)]"" S X="**LOCKED: "_$P(XQV,U,7)_"**" D T
"RTN","XQ41",7,0)
 I $P(XQV,U,17)]"" S X="**R-LOCK: "_$P(XQV,U,17)_"**" D T
"RTN","XQ41",8,0)
 S XQN=$O(^DIC(19,"B",$P(XQV,U,2),0)),XQX=""
"RTN","XQ41",9,0)
 I $D(^DIC(19,XQN,3.91)) S %XQI=0 F  S %XQI=$O(^DIC(19,XQN,3.91,%XQI)) Q:%XQI'>0  S XQX=XQX_$P(^(%XQI,0),U,1)_$P(^(0),U,2)_" "
"RTN","XQ41",10,0)
 I XQX="" S XQX=$P(XQV,U,10) I XQX'="" S XQX=XQX_"MO-FR"
"RTN","XQ41",11,0)
 I XQX]"" S X="**PROHIBITED TIMES: "_XQX_"**" D T
"RTN","XQ41",12,0)
 K XQX,%XQI
"RTN","XQ41",13,0)
 I XQ4>0&$D(X3) S X="**HEADER: " D T S X=X3 D T
"RTN","XQ41",14,0)
 I XQ4>0&$D(X1) S X="**ENTRY ACTION: " D T S X=X1 D T
"RTN","XQ41",15,0)
 I XQ4>0&$D(X2) S X="**EXIT  ACTION: " D T S X=X2 D T
"RTN","XQ41",16,0)
LL S Y=0,L=L+1 G L:L'>M
"RTN","XQ41",17,0)
Y S Y=Y+1,L=1 D:$Y+2>IOSL WAIT Q:XQFLAG=U  W ! G WL:$O(Z(0))>0 S Z=XQT-1
"RTN","XQ41",18,0)
B I L=M Q:$D(XQV(Z))!'Z  S Z=Z-1,L=1 W !
"RTN","XQ41",19,0)
 D D S L=L+1 G B
"RTN","XQ41",20,0)
D Q:L'<XQT!'$D(XQV(L))  W ?W+10*(L-1)+10 I Y=1 W "|" K:XQV(L)=XQL XQV(L) F X=1:1 G Q:X=W!'$D(Z(L+1)) W "-"
"RTN","XQ41",21,0)
 W "|" W:L<M ?W+4*L Q
"RTN","XQ41",22,0)
WL I '$D(Z(L,Y)) D D G O
"RTN","XQ41",23,0)
 S XQV=Z(L,Y),XQP=XQP(L) K Z(L,Y) S:XQT'>L L=M I Y=1 F X=1:1 Q:W+10*(L-1)-1<$X  W "-"
"RTN","XQ41",24,0)
 W:Y=1 ?W+10*(L-1),XQP W ?W+10*(L-1)+6,XQV
"RTN","XQ41",25,0)
O S L=L+1 G Y:M<L,WL
"RTN","XQ41",26,0)
 ;
"RTN","XQ41",27,0)
T S D=""
"RTN","XQ41",28,0)
W S Z=$P(X," ",1),X=$P(X," ",2,999) I $L(D)+$L(Z)>W,$L(D) S Z(L,Y)=D,D="",Y=Y+1
"RTN","XQ41",29,0)
 I $L(Z)>W S Z(L,Y)=$E(Z,1,W),Z=$E(Z,W+1,99) S:$E(Z,1)=" " Z=$E(Z,2,99) S Y=Y+1
"RTN","XQ41",30,0)
 S D=D_Z_" " G W:X]"" S Z(L,Y)=D,Y=Y+1 Q
"RTN","XQ41",31,0)
 ;
"RTN","XQ41",32,0)
X Q:'$D(XQB(L))&('$D(XQBN(L)))  Q:'$D(XQB(L,XQBN(L)))  S Y=$G(XQB(L,XQBN(L))) Q:'$D(XQB(L,XQBN(L)))  S XQBN(L)=XQBN(L)+1 I '$D(^DIC(19,+Y,0)) G X
"RTN","XQ41",33,0)
E Q:'$D(Y)  S Z=^DIC(19,+Y,0) S:$P(Z,U,16) XI=$S('$D(^(3)):"",1:$P(^(3),U)),Z=$P(Z,U,1,15)_U_XI_U_$P(Z,U,17,99) S ^TMP($J,"XQM",XQL,L)=$P(Y,";",2)_U_Z,XQV=$P(Z,U,6) S:L>1 ^TMP($J,"XQM",XQV(L-1),L-1,1)=XQL
"RTN","XQ41",34,0)
 F XQI=15,20,26 I $D(^DIC(19,+Y,XQI))#2,^(XQI)'="" S ^TMP($J,"XQM",XQL,L,$S(XQI=26:.3,XQI=15:.2,1:.1))=^(XQI)
"RTN","XQ41",35,0)
 I $P(Z,U,4)'="M"!$D(^TMP($J,"XQ1",+Y))!$S(XQV]""&$D(XQDUZ):'$D(^XUSEC(XQV,XQDUZ)),1:0)!($P(Z,U,3)]"") S XQL=XQL+1 G X
"RTN","XQ41",36,0)
 S ^TMP($J,"XQ1",+Y)="",XQV(L)=XQL,L=L+1,X(L)="",(Y,XQDIC,XQDIC(L))=+Y S:M<L M=L
"RTN","XQ41",37,0)
 I $S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL("XQO",XQDIC,0),U,2)) S XQSAV=Y D ^XQSET S Y=XQSAV K XQSAV
"RTN","XQ41",38,0)
 K XQA S XQJ=-1 F  S XQJ=$O(^XUTL("XQO",Y,U,XQJ)) Q:XQJ=""  S XQA($P(^(XQJ),U,2))=XQJ
"RTN","XQ41",39,0)
 K XQB(L) S XQBN(L)=1,XQJ=+^XUTL("XQO",Y,0),XQBN1=0
"RTN","XQ41",40,0)
 F XQI=1:1:XQJ S XQN=^XUTL("XQO",Y,0,XQI) F XQP=0:1 S XQB=$P(XQN,U,8*XQP+2) Q:'$L($P(XQN,U,8*XQP+2,99))  I XQB'="",($D(XQA(XQB))) S XQBN1=XQBN1+1,XQB(L,XQBN1)=XQA(XQB)_";"_$P(XQN,U,8*XQP+1) K XQA(XQB)
"RTN","XQ41",41,0)
 K XQBN1
"RTN","XQ41",42,0)
 D X
"RTN","XQ41",43,0)
 Q:L=1  S L=L-1,XQDIC=XQDIC(L) G X
"RTN","XQ41",44,0)
 ;
"RTN","XQ41",45,0)
WAIT ;
"RTN","XQ41",46,0)
 I 1 S XQFLAG="" R:IOST["C-" !?26,"Press RETURN to continue, '^' to halt...",XQFLAG:DTIME S:'$T XQFLAG=U W @IOF
"RTN","XQ41",47,0)
Q Q
"RTN","XQ41",48,0)
 ;
"RTN","XQ71")
0^15^B18569717
"RTN","XQ71",1,0)
XQ71 ;SEA/AMF,MJM - Lookup response to menu prompt ;10/06/97  12:11
"RTN","XQ71",2,0)
 ;;8.0;KERNEL;;Jul 10, 1995
"RTN","XQ71",3,0)
CHK ;See if this option is locked, out of order, etc.
"RTN","XQ71",4,0)
 S XQJMP=0,XQA=1,XQCY=XQY S:'$D(XQNOXUTL) XQCY0=XQY0 D ^XQCHK I XQCY<0 S XQY=-1
"RTN","XQ71",5,0)
 Q
"RTN","XQ71",6,0)
NO ;Space bar option no longer in the Option File
"RTN","XQ71",7,0)
 K ^DISV(DUZ,"XQ",XQMN) S XQY=-1
"RTN","XQ71",8,0)
 ;
"RTN","XQ71",9,0)
OUT ;Exit point: return to XQ
"RTN","XQ71",10,0)
 K %,%Y,%XQ,XQ,XQ2,XQA,XQA3,XQCY,XQCY0,XQI,XQII,XQIO,XQJ,XQK,XQMN,XQNOAV,XQNOXUTL,XQQ,XQS,XQSAV,XQW,XQX,XQZ
"RTN","XQ71",11,0)
 Q
"RTN","XQ71",12,0)
 ;
"RTN","XQ71",13,0)
U I XQX'?.ANP S XQX="?" Q
"RTN","XQ71",14,0)
 ;
"RTN","XQ71",15,0)
UP F XQZ=1:1 Q:XQX?.NUP  S XQW=$A(XQX,XQZ) I XQW<123,XQW>96 S XQX=$E(XQX,1,XQZ-1)_$C(XQW-32)_$E(XQX,XQZ+1,255)
"RTN","XQ71",16,0)
 Q
"RTN","XQ71",17,0)
 ;
"RTN","XQ71",18,0)
XBLK F  S XQW=$E(XQK,1) Q:XQW'=" "  S XQK=$E(XQK,2,99)
"RTN","XQ71",19,0)
 Q
"RTN","XQ71",20,0)
 ;
"RTN","XQ71",21,0)
DIC ;Entry point from XQ
"RTN","XQ71",22,0)
 S XQNOAV=0,XQUR=$E(XQUR,1,27),XQMN=XQDIC,XQX=XQUR D U:XQX'?.PUN S XQUR=XQX
"RTN","XQ71",23,0)
 I XQX=" ",$D(^DISV(DUZ,"XQ",XQMN)) S XQY=^(XQMN) G:'($D(^XUTL("XQO",XQDIC,U,XQY))&$D(^DIC(19,XQY,0))) NO S XQY0=^(0),XQNOXUTL="" D CHK W:$L($P(XQY,U,2)) !,$P(XQY,U,2) S XQY=+XQY I XQY>0 S XQUR="" G W
"RTN","XQ71",24,0)
 I XQY=-1,$D(XQNOXUTL) K ^DISV(DUZ,"XQ",XQMN),XQNOXUTL S XQY=-2 G OUT
"RTN","XQ71",25,0)
 I $E(XQDIC,1)="P" I $S($D(^XUTL("XQO","P0")):1,'$D(^XUTL("XQO",XQDIC,0)):1,'$D(^DIC(19,$E(XQDIC,2,99),99.1)):1,1:0) D PMO^XQ8 S XQY=-2 G OUT
"RTN","XQ71",26,0)
 I $E(XQDIC,1)="U" D:$S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^VA(200,DUZ,203.1)):1,1:^VA(200,DUZ,203.1)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET
"RTN","XQ71",27,0)
 I XQDIC=+XQDIC L +^XUTL("XQO",XQDIC):5 D:$S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET L -^XUTL("XQO",XQDIC)
"RTN","XQ71",28,0)
 S (XQ,XQS)=0 S:XQUR="0" XQUR="0"_$C(1) I XQUR="?" S X=0 G X
"RTN","XQ71",29,0)
 S X=XQUR,XQA3=$S(($E(XQDIC,1)="P"):XQUR_U,1:XQUR) G:'$D(^XUTL("XQO",XQDIC,XQA3)) X S X=$E(XQUR,1,$L(XQUR)-1)_$C($A($E(XQUR,$L(XQUR)))-1)_"z" G:($P($O(^XUTL("XQO",XQDIC,XQA3)),U,1)=XQUR) X
"RTN","XQ71",30,0)
 S XQSAV=X
"RTN","XQ71",31,0)
 S %XQ=^XUTL("XQO",XQDIC,XQA3),XQY=+%XQ,XQY0=$P(^("^",XQY),U,2,99) D CHK S X=XQSAV W:$L($P(XQY,U,2)) "  ",$P(XQY0,U,2),*7,!,$P(XQY,U,2) S:$L($P(XQY,U,2)) XQNOAV=1 S:XQY<1 X=$O(^XUTL("XQO",XQDIC,X)) G X:XQY<1 I '$P(%XQ,U,2) W "  " S XQUR=""
"RTN","XQ71",32,0)
 ;
"RTN","XQ71",33,0)
W W $E($P(XQY0,U,2),$L(XQUR)+1,99) K XQ S:(XQMN=+XQMN) ^DISV(DUZ,"XQ",XQMN)=XQY G OUT
"RTN","XQ71",34,0)
 ;
"RTN","XQ71",35,0)
X S X=$O(^XUTL("XQO",XQDIC,X)) S XQJ=$S(X="":0,XQUR="?":X'=U,XQUR=("0"_$C(1)):'$L($P(X,"0",1)),1:'$L($P(X,XQUR,1)))
"RTN","XQ71",36,0)
 I XQJ S XQY=^XUTL("XQO",XQDIC,X) S:'$P(XQY,U,2) XQ("S",+XQY)="" S XQY=+XQY G:$D(XQ("X",XQY)) X S XQY0=$P(^("^",XQY),U,2,99) S XQQ=X D CHK S X=XQQ G:XQY'>0 X S XQ=XQ+1,XQ(XQ)=+XQY_U_$P(XQY0,U,2)_U_XQA_U_$P(XQY,U,2),XQ("X",XQY)="" G:XQ>19 C G X
"RTN","XQ71",37,0)
 S:'XQ XQY=-1 S:XQNOAV XQY=-2 Q:'XQ  I XQ=1,XQS=0 S XQY=+XQ(1) I XQY>0 S XQY0=$P(^XUTL("XQO",XQDIC,"^",XQY),U,2,99),XQA=$P(XQ(1),U,3) S:$D(XQ("S",XQY)) XQUR="" W:'$L(XQUR) "  " G W
"RTN","XQ71",38,0)
 I XQ=1,XQS=0 W $E($P(XQ(1),U,2),$L(XQUR)+1,99),*7,!,$P(XQ(1),U,4) S XQY=-2 G OUT
"RTN","XQ71",39,0)
 ;
"RTN","XQ71",40,0)
C F XQY=1:1:XQ W !?4,XQS*20+XQY,?9,$P(XQ(XQY),U,2),?43,$P(XQ(XQY),U,4)
"RTN","XQ71",41,0)
 W:XQ>19 !,"TYPE '^' TO STOP, OR" W !,"CHOOSE ",(XQS*20+1),"-",(XQS*20+XQY),": "
"RTN","XQ71",42,0)
 R XQJ:DTIME S:'$T XQJ=U I XQJ?1N.N G C:'$D(XQ(XQJ-1#20+1)) W "  " S XQUR="",XQY=+XQ(XQJ-1#20+1) I XQY>0 S XQY0=$P(^XUTL("XQO",XQDIC,"^",XQY),U,2,99),XQA=$P(XQ(XQJ-1#20+1),U,3) G W
"RTN","XQ71",43,0)
 I XQJ?1N.N W *7,$P(XQ(XQJ-1#20+1),U,4),! G C
"RTN","XQ71",44,0)
 I '$L(XQJ),XQ>19 K XQ S XQS=XQS+1,XQ=0 G X
"RTN","XQ71",45,0)
 S:XQJ=U XQJ="" K XQ S XQY=-1,XQUR=$C(95) S:$L(XQJ) XQUR=$S($E(XQDIC,1)="P":U_XQJ,1:XQJ),XQY=0 G OUT
"RTN","XQ71",46,0)
 Q
"RTN","XQ72")
0^1^B36845251
"RTN","XQ72",1,0)
XQ72 ;SEA/MJM - ^Jump Utilities ;05/08/98  10:16
"RTN","XQ72",2,0)
 ;;8.0;KERNEL;**47,46**;Jul 03, 1995
"RTN","XQ72",3,0)
 ;
"RTN","XQ72",4,0)
JUMP ;Entry point for D+1^XQ and  LEGAL^XQ74.
"RTN","XQ72",5,0)
 ;With +XQY: target opt, XQY0: 0th node with pathway, XQY1: parent's
"RTN","XQ72",6,0)
 ;0th node; XQ(XQ) array of alternate pathways, if any; XQDIC:
"RTN","XQ72",7,0)
 ;P-tree of target option; XQPSM: XQDIC or mutiple trees (U66,P258)
"RTN","XQ72",8,0)
 ;XQSV: XQY^XQDIC^XQY0 of origin (previous) option.
"RTN","XQ72",9,0)
 ;
"RTN","XQ72",10,0)
 ;** Variables **
"RTN","XQ72",11,0)
 ;XQFLAG=1 usually means we're done.  Head for the door.
"RTN","XQ72",12,0)
 S XQJMP=1 ;Flag indicating we are in a jump process
"RTN","XQ72",13,0)
 N XQFLAG,XQI,XQJ,XQTT,XQSTK,XQSVSTK,XQONSTK,XQOLDSTK
"RTN","XQ72",14,0)
 ;
"RTN","XQ72",15,0)
 ;Get current stack pointer and Primary Menu tree, set "all done" flag
"RTN","XQ72",16,0)
 S XQTT=^XUTL("XQ",$J,"T"),XQPMEN="P"_^("XQM")
"RTN","XQ72",17,0)
 ;
"RTN","XQ72",18,0)
 ;If we are already in a rubber-band jump, unwind it
"RTN","XQ72",19,0)
 I $D(^XUTL("XQ",$J,"RBX")) S XQFLG=1,XQSAV=XQY_U_XQPSM_U_XQY0,XQY=+^("RBX"),XQY0=$P(^("RBX"),U,2,99) D RBX^XQ73 S XQY=+XQSAV,XQPSM=$P(XQSAV,U,2),XQY0=$P(XQSAV,U,3,99) K XQFLG,XQSAV
"RTN","XQ72",20,0)
 ;
"RTN","XQ72",21,0)
 ;Get the stack and see if target option is already on it
"RTN","XQ72",22,0)
 S XQSTK=""
"RTN","XQ72",23,0)
 F XQI=1:1:XQTT S XQOLDSTK(XQI)=^XUTL("XQ",$J,XQI),XQSTK=XQSTK_+XQOLDSTK(XQI)_","
"RTN","XQ72",24,0)
 ;
"RTN","XQ72",25,0)
 I (","_XQSTK)[(","_XQY_","),'$D(XQRB) D NOJ^XQ72A G OUT
"RTN","XQ72",26,0)
 ;
"RTN","XQ72",27,0)
 ;See if target option is in the current display tree (+XQDISTR)
"RTN","XQ72",28,0)
 S XQDISTR=+XQSV
"RTN","XQ72",29,0)
 I $S('$D(^XUTL("XQO",XQDISTR,0)):1,'$D(^DIC(19,XQDISTR,99)):1,^DIC(19,XQDISTR,99)'=$P(^XUTL("XQO",XQDISTR,0),U,2):1,1:0) L +^XUTL("XQO",XQDISTR):5 S XQSAVE=XQDIC,XQDIC=XQDISTR D ^XQSET L -^XUTL("XQO",XQDISTR) S XQDIC=XQSAVE
"RTN","XQ72",30,0)
 I $D(^XUTL("XQO",XQDISTR,"^",+XQY)),($P(^(+XQY),U,6)=+XQY!($P(^(+XQY),U,6)="")) S XQY0=$P(^(+XQY),U,2,99),^DISV(DUZ,"XQ",XQDISTR)=XQY G OUT
"RTN","XQ72",31,0)
 ;
"RTN","XQ72",32,0)
 ;Set XQMA to the parent of the tree we're jumping from
"RTN","XQ72",33,0)
 S XQMA=$P(XQSV,U,2)
"RTN","XQ72",34,0)
 I XQMA']"" S XQMA=XQY
"RTN","XQ72",35,0)
 ;
"RTN","XQ72",36,0)
 ;Find shortest path to target if there are more than one in XQ(XQ)
"RTN","XQ72",37,0)
 I $D(XQ),XQ>0 D MPW G:XQ<0 OUT
"RTN","XQ72",38,0)
 ;
"RTN","XQ72",39,0)
 ;Get jump path and add parent menu option.
"RTN","XQ72",40,0)
 S XQJP=$P(XQY0,U,5)
"RTN","XQ72",41,0)
 I XQPSM["PXU" S %=0,%=$O(^DIC(19,"B","XUCOMMAND",%)),XQJP=%_","_XQJP
"RTN","XQ72",42,0)
 I XQPSM["," S %=$P(XQPSM,",",2),XQJP=$P(%,"P",2)_","_XQJP
"RTN","XQ72",43,0)
 S XQNP=XQTT_U_XQJP
"RTN","XQ72",44,0)
 ;
"RTN","XQ72",45,0)
 ;Save stack as it was before we messed with it.
"RTN","XQ72",46,0)
 S XQSVSTK=XQTT_U_XQSTK
"RTN","XQ72",47,0)
 S XQONSTK="" ;Those options we put on the stack are collected here.
"RTN","XQ72",48,0)
 ;
"RTN","XQ72",49,0)
 ;
"RTN","XQ72",50,0)
 ;** BEGIN PROCESSING PRIMARY AND SECONDARY JUMPS **
"RTN","XQ72",51,0)
 ;
"RTN","XQ72",52,0)
 S XQNOW=^XUTL("XQ",$J,XQTT)
"RTN","XQ72",53,0)
 ;
"RTN","XQ72",54,0)
 ;See if we are jumping FROM a Secondary menu tree
"RTN","XQ72",55,0)
 S XQFLAG=0
"RTN","XQ72",56,0)
 S XQSFROM=$S($P(XQNOW,U)["U":1,1:0)
"RTN","XQ72",57,0)
 I XQSFROM D
"RTN","XQ72",58,0)
 .N %,XQI,XQT,XQDIC
"RTN","XQ72",59,0)
 .S XQT=XQTT
"RTN","XQ72",60,0)
 .S XQDIC=XQPSM I XQDIC["," S XQDIC=$P(XQDIC,",",2)
"RTN","XQ72",61,0)
 .I $D(^XUTL("XQO",XQDIC,U,+XQSV)) S XQFLAG=1 D SAMTREE Q  ;target in current tree.
"RTN","XQ72",62,0)
 .F XQI=XQT:-1:1 S %=$P(^XUTL("XQ",$J,XQI),U,1) Q:%'[","&(%'["PXU")  D POP(XQI) ;Remove current secondary from the stack
"RTN","XQ72",63,0)
 .Q
"RTN","XQ72",64,0)
 G:XQFLAG B1
"RTN","XQ72",65,0)
 ;
"RTN","XQ72",66,0)
 ;See if we're staying in the Primary Menu's tree
"RTN","XQ72",67,0)
 S XQFLAG=0
"RTN","XQ72",68,0)
 I $D(^XUTL("XQO",XQPMEN,U,XQY)) D
"RTN","XQ72",69,0)
 .S XQJP=XQMA_","_XQJP
"RTN","XQ72",70,0)
 .S XQFLAG=1
"RTN","XQ72",71,0)
 .D:XQTT>1 SAMTREE
"RTN","XQ72",72,0)
 .Q
"RTN","XQ72",73,0)
 G:XQFLAG B1
"RTN","XQ72",74,0)
 ;
"RTN","XQ72",75,0)
 ;See if we are jumping TO a secondary menu: just load and go.
"RTN","XQ72",76,0)
 S XQSTO=0
"RTN","XQ72",77,0)
 S XQFLAG=0
"RTN","XQ72",78,0)
 I XQPSM["U" D
"RTN","XQ72",79,0)
 .S XQSTO=1
"RTN","XQ72",80,0)
 .S XQFLAG=1
"RTN","XQ72",81,0)
 .I XQPSM["," S XQDIC=$P(XQPSM,",",2)
"RTN","XQ72",82,0)
 .S (^XUTL("XQ",$J,"T"),XQST)=XQTT
"RTN","XQ72",83,0)
 .Q
"RTN","XQ72",84,0)
 ;
"RTN","XQ72",85,0)
 ;
"RTN","XQ72",86,0)
 ;
"RTN","XQ72",87,0)
B1 ;Get the path of options and process them one by one
"RTN","XQ72",88,0)
 S XQZ=$P(XQNP,U,2) I '$L(XQZ) S ^XUTL("XQ",$J,"T")=1 G OUT
"RTN","XQ72",89,0)
 I '$D(XQUIT) F XQSTPT=1:1 S XQD=$P(XQZ,",",XQSTPT) Q:(+XQD=+XQY)!('$L(XQD))  D JUMP1 I $D(XQUIT) S XQUIT=2,XQOPQT=XQD D ^XQUIT Q:$D(XQUIT)  D RXQ
"RTN","XQ72",90,0)
 ;
"RTN","XQ72",91,0)
 S:'$D(XQUIT) ^DISV(DUZ,"XQ",XQMA)=XQY,XQY0=$P(^XUTL("XQO",XQDIC,U,+XQY),U,2,5)_"^^"_$P(^(+XQY),U,7,11)_"^^"_$P(^(+XQY),U,13)_"^^"_$P(^(+XQY),U,15,99)
"RTN","XQ72",92,0)
 ;
"RTN","XQ72",93,0)
 ;
"RTN","XQ72",94,0)
OUT ;Reset the stack pointer, clean up, and return to XQ
"RTN","XQ72",95,0)
 S:'$D(XQUIT) ^XUTL("XQ",$J,"T")=$S(XQTT'<1:XQTT,1:1)
"RTN","XQ72",96,0)
 ;
"RTN","XQ72",97,0)
 K %,%XQJP,X,XQ,XQCH,XQD,XQDISTR,XQEX,XQI,XQII,XQJ,XQJMP,XQJP,XQJS,XQK,XQMA,XQN,XQNO,XQNOW,XQNO1,XQNP,XQOLDSTK,XQPMEN,XQSAV,XQSTO,XQSFROM,XQST,XQSTK,XQSTPT,XQSVSTK,XQT,XQTT,XQV,XQW,XQY1,XQZ,Y,Z
"RTN","XQ72",98,0)
 ;
"RTN","XQ72",99,0)
 I $D(XQUIT) K XQUIT G M1^XQ
"RTN","XQ72",100,0)
 G M^XQ
"RTN","XQ72",101,0)
 ;
"RTN","XQ72",102,0)
 ;
"RTN","XQ72",103,0)
 ;** SUBROUTINES **
"RTN","XQ72",104,0)
 ;
"RTN","XQ72",105,0)
POP(XQSTPT) ;Pop one level on the stack
"RTN","XQ72",106,0)
 ;Execute Exit Actions and Headers
"RTN","XQ72",107,0)
 N %,XQY,XQY0
"RTN","XQ72",108,0)
 S %=^XUTL("XQ",$J,XQSTPT)
"RTN","XQ72",109,0)
 S XQY=+%,XQY0=$P(%,U,2,99)
"RTN","XQ72",110,0)
 I $P(XQY0,U,15),$D(^DIC(19,XQY,15)),$L(^(15)) X ^(15) ;W " ==> POP^XQ72"
"RTN","XQ72",111,0)
 S %=^XUTL("XQ",$J,XQSTPT-1)
"RTN","XQ72",112,0)
 S XQY=+%,XQY0=$P(%,U,2,99)
"RTN","XQ72",113,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26) ;W " ==> POP^XQ72"
"RTN","XQ72",114,0)
 I '$D(XQTT) S XQTT=^XUTL("XQ",$J,"T")
"RTN","XQ72",115,0)
 S XQTT=XQTT-1 ;Reset stack pointer to next option
"RTN","XQ72",116,0)
 Q
"RTN","XQ72",117,0)
 ;
"RTN","XQ72",118,0)
JUMP1 ;Check pathway for prohibitions
"RTN","XQ72",119,0)
 ;Push intermediate option onto the stack
"RTN","XQ72",120,0)
 ;Execute Entry Actions and Headers
"RTN","XQ72",121,0)
 S XQST=+XQNP
"RTN","XQ72",122,0)
 S XQY0=$S($D(^XUTL("XQO",XQMA,U,+XQD))#2:$P(^(+XQD),U,2,99),1:^DIC(19,+XQD,0)),XQMA=XQD
"RTN","XQ72",123,0)
 S ^XUTL("XQ",$J,XQTT+1)=XQD_XQPSM_U_XQY0 ;,^("T")=XQST+XQSTPT
"RTN","XQ72",124,0)
 I $P(XQY0,U,14) Q:'$D(^DIC(19,XQD,20))  Q:'$L(^(20))  X ^(20) ;W " ==> JUMP1^XQ72"
"RTN","XQ72",125,0)
 Q:$D(XQUIT)
"RTN","XQ72",126,0)
 ;
"RTN","XQ72",127,0)
RXQ ;Return if XQUIT is cancelled by the application
"RTN","XQ72",128,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQD,26)),$L(^(26)) X ^(26) ;W " ==> JUMP1^XQ72"
"RTN","XQ72",129,0)
 S XQTT=XQTT+1 ;Reset stack pointer
"RTN","XQ72",130,0)
 S XQONSTK=XQTT_U_XQONSTK
"RTN","XQ72",131,0)
 Q
"RTN","XQ72",132,0)
 ;
"RTN","XQ72",133,0)
MPW ;Multiple paths, choose shortest or best
"RTN","XQ72",134,0)
 S XQ(XQ+1)=$P(XQY0,U,5),XQJ=1,%="" F XQI=0:0 S %=$O(XQ(%)) Q:%=""!(%'=+%)  S XQ(XQJ)=XQ(%),XQJ=XQJ+1
"RTN","XQ72",135,0)
 S XQ=XQJ-1 F XQJ=1:1:$L(XQSTK,",")-2 S X=","_$P(XQSTK,",",XQJ)_"," F XQI=1:1:XQ S %=","_XQ(XQI) I %[X,'$D(Y(XQI)) S XQ(XQI)=$E(X,2,99)_$P(XQ(XQI),X,2,99),Y(XQI)=""
"RTN","XQ72",136,0)
 F XQI=1:1:XQ S %($L(XQ(XQI),","),XQI)=XQ(XQI)
"RTN","XQ72",137,0)
 S X="",Z=1 F XQI=1:1:XQ S X=$O(%(X)) Q:X=""  S Y="" F XQJ=0:0 S Y=$O(%(X,Y)) Q:Y=""  S XQ(Z)=%(X,Y),Z=Z+1
"RTN","XQ72",138,0)
 F XQI=1:1:XQ S %XQJP=XQ(XQI) Q:%XQJP=""  D JMP^XQCHK Q:$L(%XQJP)
"RTN","XQ72",139,0)
 I %XQJP="" W " ??",*7 S XQY=+XQSV,XQDIC=$P(XQSV,U,2),XQY0=$P(XQSV,U,3,99),XQ=-1 Q
"RTN","XQ72",140,0)
 S XQY0=$P(XQY0,U,1,4)_U_XQ(XQI)_U_$P(XQY0,U,6,99)
"RTN","XQ72",141,0)
 Q
"RTN","XQ72",142,0)
 ;
"RTN","XQ72",143,0)
SAMTREE ;Jump target is in the same tree, find the modified path
"RTN","XQ72",144,0)
 N XQI,XQJ,XQY1
"RTN","XQ72",145,0)
 ;Find in XQI the 1st option in XQJP not already on the stack
"RTN","XQ72",146,0)
 F XQI=1:1:$L(XQJP,",")-1  Q:XQSTK'[($P(XQJP,",",XQI)_",")
"RTN","XQ72",147,0)
 ;Remove that part of jump path already on the stack
"RTN","XQ72",148,0)
 S XQNP=$P(XQJP,",",XQI,99),XQNP=$L(XQNP,",")-1_U_XQNP
"RTN","XQ72",149,0)
 ;
"RTN","XQ72",150,0)
 ;Calculate where we push XQNP (the new path) onto the stack
"RTN","XQ72",151,0)
 S %=$P(XQJP,",",1,XQI-1),XQY1=$P(%,",",$L(%,","))
"RTN","XQ72",152,0)
 ;
"RTN","XQ72",153,0)
 ;Pop the stack until we are pointing to where we need to be
"RTN","XQ72",154,0)
 F XQM=XQTT:-1:2 Q:$P(XQSTK,",",XQM)=XQY1  D POP(XQM)
"RTN","XQ72",155,0)
 Q
"RTN","XQ72",156,0)
 ;
"RTN","XQ72",157,0)
 ;
"RTN","XQ72",158,0)
SOLVE(XQY1,XQJP,XQNP) ;See if and where we are on the jump path.
"RTN","XQ72",159,0)
 ;Returns the remainder of XQJP after XQY1 and everything
"RTN","XQ72",160,0)
 ;under it is removed from the path.  With XQJP = "1,2,3,4,5,"
"RTN","XQ72",161,0)
 ;and XQY1 = 3 (or "3,"; or "2,3"; or "1,2,3,") it returns XQNP
"RTN","XQ72",162,0)
 ;equal to "4,5,".  If XQY1 is not in XQJP, XQNP is returned as
"RTN","XQ72",163,0)
 ;null.
"RTN","XQ72",164,0)
 ;
"RTN","XQ72",165,0)
 N X,IN,OUT
"RTN","XQ72",166,0)
 S IN=+XQY1
"RTN","XQ72",167,0)
 S X=$S(XQY1[",":1,1:0) ;Is it a string or a number?
"RTN","XQ72",168,0)
 S XQNP=$P($E(XQJP,$F(XQJP,XQY1)-X,99),",",2,99)
"RTN","XQ72",169,0)
 I +XQNP=IN S XQNP="" ;No match
"RTN","XQ72",170,0)
 Q
"RTN","XQ72A")
0^2^B1478345
"RTN","XQ72A",1,0)
XQ72A ;SEA/LUKE - Jump Utilities (Part II)  ;05/08/98  10:12
"RTN","XQ72A",2,0)
 ;;8.0;KERNEL;**46**;Jul 10, 1995
"RTN","XQ72A",3,0)
 ;
"RTN","XQ72A",4,0)
NOJ ;Pop to target option and return, not a real jump.
"RTN","XQ72A",5,0)
 N %,XQI,XQT
"RTN","XQ72A",6,0)
 S XQT=XQTT
"RTN","XQ72A",7,0)
 F XQI=XQT:-1:1 S %=$P(XQSTK,",",XQI) Q:%=""  Q:+XQY=+%  D POP^XQ72(XQI)
"RTN","XQ72A",8,0)
 ;I $P(^XUTL("XQ",$J,(XQTT-XQI)),U,16)!($P(^(XQTT-XQI),U,18)) S XQEX=+^(XQTT-XQI) D XACT^XQ72
"RTN","XQ72A",9,0)
 S XQY0=$P(^XUTL("XQ",$J,XQI),U,2,99),XQM3=1
"RTN","XQ72A",10,0)
 K %,XQI,XQSM,XQST,XQSTK
"RTN","XQ72A",11,0)
 Q
"RTN","XQ72A",12,0)
 ;
"RTN","XQ72A",13,0)
LAT ;Lateral shift in same parent.  Not a real jump, realy.
"RTN","XQ72A",14,0)
 S ^DISV(DUZ,"XQ",XQMA)=XQY
"RTN","XQ72A",15,0)
 S XQY0=$P(^XUTL("XQO",XQDIC,U,+XQY),U,2,5)_"^^"_$P(^(+XQY),U,7,11)_"^^"_$P(^(+XQY),U,13)_"^^"_$P(^(+XQY),U,15,99)
"RTN","XQ72A",16,0)
 ;S XQTT=^XUTL("XQ",$J,"T") 
"RTN","XQ72A",17,0)
 F XQI=XQTT:-1:1 S %=^XUTL("XQ",$J,XQI) Q:("MP"[$P(%,U,5)&($D(^DIC(19,+%,10,"B",+XQY))))  ;!((XQSTO)&($P(%,U)'["U"))
"RTN","XQ72A",18,0)
 S ^XUTL("XQ",$J,"T")=$S(XQI'<1:XQI,1:1)
"RTN","XQ72A",19,0)
 Q
"RTN","XQ73")
0^3^B24501007
"RTN","XQ73",1,0)
XQ73 ;SEA/MJM - Rubber Band Jump ("^^") Processor ;05/08/98  10:10
"RTN","XQ73",2,0)
 ;;8.0;KERNEL;**46**;Jul 10, 1995
"RTN","XQ73",3,0)
 ;Entry from XQ
"RTN","XQ73",4,0)
 ;With +XQY: target opt, XQY0: 0th node
"RTN","XQ73",5,0)
 ;with a pathway; XQ(XQ) array of alternate pathways, if any; XQDIC:
"RTN","XQ73",6,0)
 ;P-tree of target option; XQPSM: XQDIC or mutiple trees (U66,P258)
"RTN","XQ73",7,0)
 ;XQSV: XQY^XQDIC^XQY0 of origin (previous) option.
"RTN","XQ73",8,0)
 ;
"RTN","XQ73",9,0)
 ;Set the jump flag to indicate that this is a jump process
"RTN","XQ73",10,0)
 S XQJMP=1
"RTN","XQ73",11,0)
 ;
"RTN","XQ73",12,0)
 ;Set XQMA to the option from whence we came.  XQNMB is set to a high
"RTN","XQ73",13,0)
 ;number which will count down and be used to save Exit Actions and
"RTN","XQ73",14,0)
 ;headers that are stored in ^XUTL("XQ", $J,"RBX")
"RTN","XQ73",15,0)
 ;
"RTN","XQ73",16,0)
 S XQMA=$P(XQSV,U,2),XQNMB=999
"RTN","XQ73",17,0)
 ;
"RTN","XQ73",18,0)
 ;If the "RBX" nodes already exist we know that we are already in a
"RTN","XQ73",19,0)
 ;rubber band jump.  Set the flag XQFLG and save in XASAV the current
"RTN","XQ73",20,0)
 ;option, load the original rubberband jump, do RBX^XQ73 to execute
"RTN","XQ73",21,0)
 ;the stored exit actions and headers.
"RTN","XQ73",22,0)
 ;
"RTN","XQ73",23,0)
 I $D(^XUTL("XQ",$J,"RBX")) S XQFLG=1,XQSAV=XQY_U_XQPSM_U_XQY0,XQY=+^("RBX"),XQY0=$P(^("RBX"),U,2,99) D RBX S XQY=+XQSAV,XQPSM=$P(XQSAV,U,2),XQY0=$P(XQSAV,U,3,99) K XQFLG,XQSAV
"RTN","XQ73",24,0)
 ;
"RTN","XQ73",25,0)
 ;If the target option XQY is a sibling of XQMA then it's not really
"RTN","XQ73",26,0)
 ;a jump, so load it and return to XQ.
"RTN","XQ73",27,0)
 ;
"RTN","XQ73",28,0)
 I $D(^XUTL("XQO",XQMA,"^",+XQY)),($P(^(+XQY),U,6)=+XQY!($P(^(+XQY),U,6)="")) S XQY0=$P(^(+XQY),U,2,99) G M^XQ
"RTN","XQ73",29,0)
 ;
"RTN","XQ73",30,0)
 ;Set XQTT to the stack pointer and point XQST to the primary menu.
"RTN","XQ73",31,0)
 ;Set XQSM to 1 as a flag if this is a jump to a secondary menu.
"RTN","XQ73",32,0)
 ;Collect the current stack IEN's in XQSTK separated by commas.
"RTN","XQ73",33,0)
 ;
"RTN","XQ73",34,0)
 S XQTT=^XUTL("XQ",$J,"T"),XQST=1,XQSTK="",XQSM=$S($P(^(XQTT),U)["U":1,1:0) F XQI=1:1:XQTT S %=+^XUTL("XQ",$J,XQI),XQSTK=XQSTK_%_","
"RTN","XQ73",35,0)
 ;
"RTN","XQ73",36,0)
 ;If XQY, the target option, is already on the stack then back down
"RTN","XQ73",37,0)
 ;to it if we are not already in a RB jump.
"RTN","XQ73",38,0)
 ;
"RTN","XQ73",39,0)
 I (","_XQSTK)[(","_XQY_",") G:'$D(XQRB) NOJ^XQ72A
"RTN","XQ73",40,0)
 ;
"RTN","XQ73",41,0)
 ;Using XQFLAG as a flag, find XQDIC (the parent of the jump tree)
"RTN","XQ73",42,0)
 ;if there is a "U" then it must be a common option or a secondary
"RTN","XQ73",43,0)
 ;menu tree.
"RTN","XQ73",44,0)
 ;
"RTN","XQ73",45,0)
 S XQFLAG=0 I XQPSM["U" S XQFLAG=1,XQST=XQTT I XQPSM["," S XQDIC=$P(XQPSM,",",2)
"RTN","XQ73",46,0)
 ;
"RTN","XQ73",47,0)
 ;If there are multiple pathways find the shortest. If XQ comes back as
"RTN","XQ73",48,0)
 ;0, you can't get there from here.
"RTN","XQ73",49,0)
 ;
"RTN","XQ73",50,0)
 I $D(XQ),XQ>0 D MPW^XQ72 G:XQ<0 OUT
"RTN","XQ73",51,0)
 ;
"RTN","XQ73",52,0)
 ;Get the jump path in XQJP and set XQI to the stack pointer as it is
"RTN","XQ73",53,0)
 ;or was before the jump.  Set XQI to the original stack pointer.
"RTN","XQ73",54,0)
 ;
"RTN","XQ73",55,0)
 S XQJP=$P(XQY0,U,5) S XQI=XQTT
"RTN","XQ73",56,0)
 ;
"RTN","XQ73",57,0)
 ;If this is a secondary menu jump put the parent option on the
"RTN","XQ73",58,0)
 ;beginning of the jump path.
"RTN","XQ73",59,0)
 ;
"RTN","XQ73",60,0)
 I XQPSM["," S XQJP=$P(XQPSM,"P",2)_","_XQJP ;Secondary menu tree
"RTN","XQ73",61,0)
 ;
"RTN","XQ73",62,0)
 ;If this is a common option put XUCOMMAND on the front of the jump
"RTN","XQ73",63,0)
 ;path.
"RTN","XQ73",64,0)
 ;
"RTN","XQ73",65,0)
 I XQPSM="PXU" S XQJP=$O(^DIC(19,"B","XUCOMMAND",0))_","_XQJP ;Common options
"RTN","XQ73",66,0)
 ;If we are jumping within the same tree, get the modified path (just
"RTN","XQ73",67,0)
 ;those options not already executed.
"RTN","XQ73",68,0)
 ;
"RTN","XQ73",69,0)
 ;I $D(^XUTL("XQO",XQDIC,U,XQY)) D SAMTREE^XQ72 S XQJP=$P(XQNP,U,2),XQY1=+XQNP
"RTN","XQ73",70,0)
 ;
"RTN","XQ73",71,0)
FND ;Pop to next Menu-type option, if in path remove options below it
"RTN","XQ73",72,0)
 S XQJP1=XQJP,XQI=XQTT+1,XQNP=$S($D(XQNP):XQNP,1:0)
"RTN","XQ73",73,0)
 F XQII=0:0 Q:+XQNP>0  S XQI=XQI-1 S XQY1=^XUTL("XQ",$J,XQI),XQT=$P(XQY1,U,5) Q:XQI=1  I "M"[XQT F XQJ=1:1:$L(XQJP,",")-1 I $P(XQJP,",",XQJ)=+XQY1 S XQNP=XQI_U_$P($E(XQJP,$F(XQJP,+XQY1),99),",",2,99) Q
"RTN","XQ73",74,0)
 ;
"RTN","XQ73",75,0)
 I +XQNP>0 D
"RTN","XQ73",76,0)
 .N XQSTP,XQJP2,XQDAD,XQI
"RTN","XQ73",77,0)
 .S XQSTP=+XQNP,XQJP2=$P(XQNP,U,2),XQDAD=+XQY1
"RTN","XQ73",78,0)
 .F XQI=XQTT:-1:XQSTP D
"RTN","XQ73",79,0)
 ..S %=+^XUTL("XQ",$J,XQI)
"RTN","XQ73",80,0)
 ..I $D(^DIC(19,%,26)),$L(^(26)) X ^(26) ;W "  ==> FND^XQ73"
"RTN","XQ73",81,0)
 ..Q
"RTN","XQ73",82,0)
 .S XQJP=XQJP2
"RTN","XQ73",83,0)
 .Q
"RTN","XQ73",84,0)
 I '$L(XQJP) G M^XQ
"RTN","XQ73",85,0)
 F XQI=1:1 S XQYY=$P(XQJP,",",XQI) Q:XQYY=XQY!(XQYY="")  S XQJ=^XUTL("XQO",XQDIC,"^",XQYY) D ACT Q:$D(XQUIT)
"RTN","XQ73",86,0)
 I '$D(XQUIT) S ^XUTL("XQ",$J,XQTT+1)=-1,^("T")=XQTT+1,^("RBX")=XQY_U_XQY0
"RTN","XQ73",87,0)
OUT ;Exit here
"RTN","XQ73",88,0)
 S:$D(XQ(XQY)) XQPSM=$P(XQ(XQY),U,3)
"RTN","XQ73",89,0)
 K %,X,XQ,XQA,XQAL,XQCH,XQFLAG,XQHD,XQI,XQII,XQJ,XQJP,XQJMP,XQJP1,XQL,XQK,XQMA,XQNO,XQNMB,XQNP,XQSM,XQST,XQSTK,XQT,XQTT,XQYY,XQY1,Y
"RTN","XQ73",90,0)
 ;K '$D(XQUIT) XQRB
"RTN","XQ73",91,0)
 ;Q:'$D(XQXFLG("GUI"))
"RTN","XQ73",92,0)
 I $D(XQUIT) K XQUIT G M1^XQ
"RTN","XQ73",93,0)
 G M^XQ
"RTN","XQ73",94,0)
 Q
"RTN","XQ73",95,0)
ACT ;Execute headers & entry actions, store headers & exit actions
"RTN","XQ73",96,0)
 I $P(XQJ,U,15),$D(^DIC(19,XQYY,20)),$L(^(20)) X ^(20) ;W "  ==> ACT^XQ73"
"RTN","XQ73",97,0)
 I $D(XQUIT) D RB^XQUIT Q:$D(XQUIT)
"RTN","XQ73",98,0)
 S XQHD=0 I $P(XQJ,U,18),$D(^DIC(19,XQYY,26)),$L(^(26)) X ^(26) S XQHD=1 ;W "  ==> ACT^XQ73" ;^XUTL("XQ",$J,"RBX",XQNMB)=^(26),XQNMB=XQNMB-1
"RTN","XQ73",99,0)
 I $P(XQJ,U,16),$D(^DIC(19,XQYY,15)),$L(^(15)) S ^XUTL("XQ",$J,"RBX",XQNMB)=^(15),XQNMB=XQNMB-1
"RTN","XQ73",100,0)
 I XQHD S ^XUTL("XQ",$J,"RBX",XQNMB)=^DIC(19,XQYY,26),XQNMB=XQNMB-1
"RTN","XQ73",101,0)
 Q
"RTN","XQ73",102,0)
 ;
"RTN","XQ73",103,0)
R ;Reset XUTL("XQ") stack pointer ^("T") to 1 (primary menu) 'GO HOME'
"RTN","XQ73",104,0)
 ;I $S('$D(^XUTL("XQ",$J,"XQM")):1,XQY=^("XQM"):1,1:0) G OUT
"RTN","XQ73",105,0)
 I ^XUTL("XQ",$J,"T")>1 F XQI=^("T"):-1:1 D
"RTN","XQ73",106,0)
 .S XQY=^XUTL("XQ",$J,XQI) D:+XQY<1 RBX S XQY0=$P(XQY,U,2,99) I XQI>1,$P(XQY0,U,15),$D(^DIC(19,+XQY,15)),$L(^(15)) X ^(15) ;W "  ==> R+3^XQ73"
"RTN","XQ73",107,0)
 .S %=^XUTL("XQ",$J,XQI-1) I (XQI-1)>1,$P(%,U,18),$D(^DIC(19,+%,26)),$L(^(26)) X ^(26)
"RTN","XQ73",108,0)
 S (XQY,XQDIC)=^XUTL("XQ",$J,"XQM"),XQY0=$P(^(1),U,2,99),^("T")=1
"RTN","XQ73",109,0)
 S XQT=$P(XQY0,U,4)
"RTN","XQ73",110,0)
 K XQI,XQUR S XQM3=1
"RTN","XQ73",111,0)
 ;Q:$D(XQXFLG("GUI"))
"RTN","XQ73",112,0)
 G M^XQ
"RTN","XQ73",113,0)
 Q
"RTN","XQ73",114,0)
 ;
"RTN","XQ73",115,0)
RBX ;Execute stored exit actions to return from RB jump
"RTN","XQ73",116,0)
 I $P(XQY0,U,15),$D(^DIC(19,XQY,15)),$L(^(15)) X ^(15) ;W "  ==> RBX+1^XQ73"
"RTN","XQ73",117,0)
 S XQN="" F XQJ=0:0 S XQN=$O(^XUTL("XQ",$J,"RBX",XQN)) Q:XQN=""  X ^(XQN) ;W "  ==> RBX^XQ73"
"RTN","XQ73",118,0)
 ;S ^("T")=^XUTL("XQ",$J,"T")-1,XQY=^(^("T")),XQY0=$P(XQY,U,2,99),XQDIC=$P(XQY,+XQY,2),XQY=+XQY
"RTN","XQ73",119,0)
 F XQJ=^XUTL("XQ",$J,"T"):-1:1 Q:^(XQJ)=-1
"RTN","XQ73",120,0)
 S ^XUTL("XQ",$J,"T")=$S(XQJ-1>0:XQJ-1,1:1) S:'$D(XQFLG) %=^(^("T")),XQY=+%,XQY0=$P(%,U,2,99),XQPSM=$P($P(%,+XQY,2,99),U),XQDIC=$S((XQPSM[","):$P(XQPSM,",",2),1:XQPSM)
"RTN","XQ73",121,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26) ;W "  ==> RBX^XQ73"
"RTN","XQ73",122,0)
 K ^XUTL("XQ",$J,"RBX"),%,XQJ,XQN,XQRB
"RTN","XQ73",123,0)
 G:'$D(XQFLG) M1^XQ
"RTN","XQ73",124,0)
 Q
"RTN","XQ75")
0^4^B27619168
"RTN","XQ75",1,0)
XQ75 ;SEA/AMF,MJM,JLI - Lookup response for jumps ;04/21/98  11:25
"RTN","XQ75",2,0)
 ;;8.0;KERNEL;**47,46**;Jul 10, 1995
"RTN","XQ75",3,0)
 ;Enter at S with XQUR. Exit with XQY set to the chosen option #,
"RTN","XQ75",4,0)
 ;with array of possibilities in XQ(XQ):XQY^menu txt [name]^XQPSM
"RTN","XQ75",5,0)
 ;XQXT(XQXT) similarly built, holds exact matches
"RTN","XQ75",6,0)
 ;XQY=-1 (no option found), or XQY=-2 (jumps shut down).
"RTN","XQ75",7,0)
 ;
"RTN","XQ75",8,0)
X ;Unless exact match is found, find all possibilities in any XQDIC
"RTN","XQ75",9,0)
 S XQO=$O(^XUTL("XQO",XQDIC,XQO)) Q:'$S(XQO="":0,XQUR="?":XQO'="^",XQUR=0_$C(1):'$L($P(XQO,"0",1)),1:'$L($P(XQO,XQUR,1)))
"RTN","XQ75",10,0)
 S XQYY=^XUTL("XQO",XQDIC,XQO) S XQY=+XQYY G:$D(XQ("X",+XQY)) X S %=$G(^XUTL("XQO",XQDIC,"^",+XQY)) G:%="" X S XQY0=$P(%,U,2,99)
"RTN","XQ75",11,0)
 S XQCY=XQY,XQCY0=XQY0 D ^XQCHK I XQCY<0 S XQY=0 G X
"RTN","XQ75",12,0)
 S:'$P(XQYY,U,2) XQ("S",+XQY)=$P(XQO,U)
"RTN","XQ75",13,0)
 I XQUR=$P(XQO,U),'XQS S XQXT=XQXT+1,XQXT(XQXT)=+XQY_U_$P(XQY0,U,2)_"  ["_$P(XQY0,U)_"] "_U_$S($D(XQUD):XQUD_",",1:"")_XQDIC,XQXT("X",XQY)="" S:'$P(XQYY,U,2) XQXT("S",+XQY)=$P(XQO,U)
"RTN","XQ75",14,0)
 S XQ=XQ+1,XQ1=XQ1+1,XQ(XQ)=+XQY_U_$P(XQY0,U,2)_"  ["_$P(XQY0,U)_"] "_U_$S($D(XQUD):XQUD_",",1:"")_XQDIC,XQ("X",XQY)=""
"RTN","XQ75",15,0)
 I XQ1>19,'XQXT D C
"RTN","XQ75",16,0)
 Q:XQY<0!(XQUR="")  G X
"RTN","XQ75",17,0)
 Q
"RTN","XQ75",18,0)
 ;
"RTN","XQ75",19,0)
C ;Display a screen-load of 19 possibilities and ask for a choice
"RTN","XQ75",20,0)
 ;I $G(XQXFLG("GUI")) D  Q
"RTN","XQ75",21,0)
 ;.D LIST^XQGS1(XQ)
"RTN","XQ75",22,0)
 ;.S XQUR=""
"RTN","XQ75",23,0)
 ;.Q:XQY<0
"RTN","XQ75",24,0)
 ;.S %="" F  S %=$O(XQ(%)) Q:%=""!(%'=+%)  I XQY=+XQ(%) S XQPSM=$P(XQ(%),U,3)
"RTN","XQ75",25,0)
 ;.Q
"RTN","XQ75",26,0)
 S:XQ1<1 XQ1=XQ W ! F XQI=1:1:XQ1 S XQJ=XQS*20+XQI W !?4,XQJ,?9,$P(XQ(XQJ),U,2) I $D(XQ("S",+XQ(XQJ))) W ?43,"  (",XQ("S",+XQ(XQJ)),")"
"RTN","XQ75",27,0)
ASK W !!,"Type '^' to stop, or choose a number from 1 to ",XQ," :"
"RTN","XQ75",28,0)
 R XQJ:DTIME S:'$T XQJ=U W:XQJ["?" !!,"**> Choose an item from this list by selecting its corresponding number,",!?5,"or type a '^' to return to your menu.",! G:XQJ["?" ASK
"RTN","XQ75",29,0)
 I XQJ=U S XQY=-1,XQ=0 Q
"RTN","XQ75",30,0)
 I XQJ'?1N.N,$L(XQJ),XQJ'=U W *7,"  ??",! G ASK
"RTN","XQ75",31,0)
 I XQJ?1N.N G C:'$D(XQ(XQJ)) D  Q:$D(XQ(XQJ))
"RTN","XQ75",32,0)
 .N %,XQD,XQP,Y
"RTN","XQ75",33,0)
 .S %=XQ(XQJ),Y=+% I Y>0 D
"RTN","XQ75",34,0)
 ..S XQP=$P(%,U,3),XQD=$S($L(XQP,",")>1:$P(XQP,",",$L(XQP,",")),1:XQP)
"RTN","XQ75",35,0)
 ..S XQY0=$G(^XUTL("XQO",XQD,"^",Y)),XQY0=$P(XQY0,U,2,99)
"RTN","XQ75",36,0)
 ..I XQY0="" K XQ(XQJ) S XQ=XQ-1,XQJ="" Q
"RTN","XQ75",37,0)
 .I $D(XQ(XQJ)) S XQY=Y,XQDIC=XQD,XQPSM=XQP,XQUR="" W "  " Q
"RTN","XQ75",38,0)
 .Q
"RTN","XQ75",39,0)
 I XQJ?1N.N W *7,$P(XQ(XQJ-1#20+1),U,4),! G C
"RTN","XQ75",40,0)
 I '$L(XQJ),XQ1=20 S XQS=XQS+1,XQ1=0 Q
"RTN","XQ75",41,0)
 I '$L(XQJ),XQ1<20 S XQY=-1,XQ=0 Q
"RTN","XQ75",42,0)
 I '$D(XQ(XQJ)) G C
"RTN","XQ75",43,0)
 K XQ S XQY=$S(XQJ=U:-3,XQJ="":-3,1:-1),XQUR=$C(95) S:XQJ=U XQJ="",XQY=-1 S:$L(XQJ) XQUR=$S($E(XQDIC,1)="P":U_XQJ,1:XQJ),XQY=0 Q
"RTN","XQ75",44,0)
 Q
"RTN","XQ75",45,0)
 ;
"RTN","XQ75",46,0)
S ;Entry from XQ: Search primary, common, and secondary menus for XQUR
"RTN","XQ75",47,0)
 I XQUR'?.ANP W *7 S XQY=-1 Q
"RTN","XQ75",48,0)
 I XQPSM'="PXU" S XQDIC=$S($D(XQPSM):$P(XQPSM,"P",2),$D(XQDIC):XQDIC,1:XQY)
"RTN","XQ75",49,0)
 E  S XQDIC="PXU"
"RTN","XQ75",50,0)
 ;S:'$D(XQDIC) XQDIC=XQY S XQSV=XQY_U_XQDIC_U_XQY0
"RTN","XQ75",51,0)
 S XQJ="",XQJMP=1,(XQ,XQ1,XQS,XQXT,XQY)=0
"RTN","XQ75",52,0)
 S XQO=$E(XQUR,1,30) I XQUR'?.PUN F XQI=1:1 Q:XQO?.NUP  S XQO1=$A(XQO,XQI) I XQO1<123,XQO1>96 S XQO=$E(XQO,1,XQI-1)_$C(XQO1-32)_$E(XQO,XQI+1,255)
"RTN","XQ75",53,0)
 S XQUR=XQO,(XQO,XQO1)=$E(XQUR,1,$L(XQUR)-1)_$C($A($E(XQUR,$L(XQUR)))-1)_"z"
"RTN","XQ75",54,0)
 I '$D(^XUTL("XQ",$J,"XQM")) S ^("XQM")=+^VA(200,DUZ,201)
"RTN","XQ75",55,0)
 ;I '$D(^XUTL("XQ",$J,"XQW")) S ^("XQW")=$P(^VA(200,DUZ,201),U,2)
"RTN","XQ75",56,0)
 I $D(XQJS),XQJS G OUT
"RTN","XQ75",57,0)
 S XQDIC="P"_^XUTL("XQ",$J,"XQM") D X G:XQY<0 OUT G:XQUR="" W
"RTN","XQ75",58,0)
 S XQDIC="PXU",XQO=XQO1 D X G:XQY<0 OUT G:XQUR="" W
"RTN","XQ75",59,0)
 S XQDIC="U"_DUZ,XQO=XQO1 D:$S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^VA(200,DUZ,203.1)):1,1:^VA(200,DUZ,203.1)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET I '$D(^XUTL("XQO",XQDIC,0)),'XQXT D C G:XQY<0 OUT G:XQUR="" W
"RTN","XQ75",60,0)
 D X G:XQY<0 OUT G:XQUR="" W
"RTN","XQ75",61,0)
 F XQK=0:0 S XQUD="U"_DUZ,XQK=$O(^XUTL("XQO",XQUD,U,XQK)) Q:XQK=""  S XQCY=XQK D ^XQCHK I XQCY>0,$P(^XUTL("XQO",XQUD,U,XQK),U,5)="M" S XQST=XQK,XQDIC="P"_XQK,XQO=XQO1 D X G:XQY<0 OUT G:XQUR="" W
"RTN","XQ75",62,0)
 I XQXT K XQ S (XQ,XQ1)=XQXT F XQI=1:1:XQ S XQ(XQI)=XQXT(XQI),%=+XQ(XQI),XQ("X",%)="" I $D(XQXT("S",%)) S XQ("S",%)=XQXT("S",%)
"RTN","XQ75",63,0)
 I XQ=1,XQS=0 S %=XQ(1),XQY=+%,XQPSM=$P(%,U,3),XQDIC=$S($L(XQPSM,",")>1:$P(XQPSM,",",$L(XQPSM,",")),1:XQPSM),XQY0=$P(^XUTL("XQO",XQDIC,U,XQY),U,2,99) G W
"RTN","XQ75",64,0)
 I XQ>0,'$D(XQ(XQS*20+1)) S XQY=-1 G OUT
"RTN","XQ75",65,0)
 D:XQ>0 C G:XQY<0 OUT I XQ=0 S XQY=-1 G OUT
"RTN","XQ75",66,0)
 ;
"RTN","XQ75",67,0)
W ;Write out remaining text and return to XQ
"RTN","XQ75",68,0)
 ;G:$D(XQXFLG("GUI")) OUT
"RTN","XQ75",69,0)
 I $D(XQ("S",+XQY)),XQUR=$E(XQ("S",+XQY),1,$L(XQUR)) W $E(XQ("S",+XQY),$L(XQUR)+1,99),"   ",$P(XQY0,U,2)
"RTN","XQ75",70,0)
 E  W $E($P(XQY0,U,2),$L(XQUR)+1,99) W:$D(XQ("S",+XQY)) "   (",XQ("S",+XQY),")"
"RTN","XQ75",71,0)
 ;
"RTN","XQ75",72,0)
OUT ;Exit here
"RTN","XQ75",73,0)
 K XQ I XQY>0,$D(^XUTL("XQO",XQDIC,"^",+XQY,0)) S XQ=+^(0) F XQI=1:1:XQ S XQ(XQI)=$P(^XUTL("XQO",XQDIC,"^",XQY,0,XQI),U)
"RTN","XQ75",74,0)
 E  S XQ=0
"RTN","XQ75",75,0)
 ;I XQY=-1,'$D(XQHLP) W *7,"  ??" S XQY=+XQSV,XQDIC=$P(XQSV,U,2),XQY0=$P(XQSV,U,3,99),XQUR=""
"RTN","XQ75",76,0)
 ;
"RTN","XQ75",77,0)
 K %,I,J,X,XQ1,XQAP,XQCY,XQCY0,XQI,XQJ,XQJMP,XQK,XQO,XQO1,XQS,XQST,XQUD,XQXT,XQYY,Y
"RTN","XQ75",78,0)
 Q
"RTN","XQ75",79,0)
 ;
"RTN","XQ75",80,0)
P ;Entry point for '"' jump to XUCOMMAND options
"RTN","XQ75",81,0)
 I XQUR'?.ANP!(XQUR[U) W *7," ??" S XQY=-1 Q
"RTN","XQ75",82,0)
 S XQO=XQUR I XQUR'?.PUN F XQI=1:1 Q:XQO?.NUP  S XQO1=$A(XQO,XQI) I XQO1<123,XQO1>96 S XQO=$E(XQO,1,XQI-1)_$C(XQO1-32)_$E(XQO,XQI+1,255)
"RTN","XQ75",83,0)
 S XQUR=XQO ;,XQSV=XQY_U_XQDIC_U_XQY0
"RTN","XQ75",84,0)
 S XQJ="",XQJMP=1,(XQ,XQ1,XQS,XQXT,XQY)=0
"RTN","XQ75",85,0)
 S (XQO,XQO1)=$E(XQUR,1,$L(XQUR)-1)_$C($A($E(XQUR,$L(XQUR)))-1)_"z"
"RTN","XQ75",86,0)
 S XQDIC="PXU" D X G:XQY<0 OUT G:XQUR="" W
"RTN","XQ75",87,0)
 I XQXT K XQ S XQ=XQXT F XQI=1:1:XQ S XQ(XQI)=XQXT(XQI),%=+XQ(XQI),XQ("X",%)="" I $D(XQXT("S",%)) S XQ("S",%)=XQXT("S",%)
"RTN","XQ75",88,0)
 I XQ=1,XQS=0 S %=XQ(1),XQY=+%,XQPSM=$P(%,U,3),XQDIC=$S($L(XQPSM,",")>1:$P(XQPSM,",",$L(XQPSM,",")),1:XQPSM),XQY0=$P(^XUTL("XQO",XQDIC,U,XQY),U,2,99) G OUT
"RTN","XQ75",89,0)
 D:XQ>0 C G:XQY<0 OUT I XQ=0&('XQXT) S XQY=-1 G OUT
"RTN","XQ75",90,0)
 G OUT
"RTN","XQ8A")
0^7^B6559104
"RTN","XQ8A",1,0)
XQ8A ;SEA/LUKE - Rebuild menus in all production accounts ;08/27/97  14:48
"RTN","XQ8A",2,0)
 ;;8.0;KERNEL;**46**;Jul 10, 1995
"RTN","XQ8A",3,0)
BLD1 ;Build the ^XUTL("XQO") for a single XQDIC in all production UCI's
"RTN","XQ8A",4,0)
 S XQ8SV=XQY_U_XQDIC_U_XQY0
"RTN","XQ8A",5,0)
BLD12 K DIC S DIC="^DIC(19,",DIC(0)="AEQMZ" D ^DIC I Y<1 K DIC Q
"RTN","XQ8A",6,0)
 I $P(Y(0),U,4)'="M" W !!,$P(Y(0),U)," is not a menu-type option and can't be compiled." G BLD12
"RTN","XQ8A",7,0)
 S XQDIC="P"_+Y,XQXUF="" I +Y=$O(^DIC(19,"B","XUCOMMAND",0)) S XQDIC="PXU" K XQXUF
"RTN","XQ8A",8,0)
 S DIR(0)="Y",DIR("A")="Que rebuilds on all production UCI's",DIR("B")="N",DIR("?")="Answering 'Y' will cause a job to be queued on all production UCI's" D ^DIR S XQUR=Y
"RTN","XQ8A",9,0)
 W !!,"Task number(s):" S (ZTUCI,ZTVOL)="" D FIRE
"RTN","XQ8A",10,0)
 I 'XQUR G OUT
"RTN","XQ8A",11,0)
 S ZTVOL=0 D GETENV^%ZOSV S XQHERE=$P(Y,U,2),XQPROD=$P(^%ZOSF("PROD"),",")
"RTN","XQ8A",12,0)
 F XQI=0:0 S ZTVOL=$O(^%ZIS(14.5,"B",ZTVOL)) Q:ZTVOL=""  S ZTUCI=$O(^%ZIS(14.6,"AT",XQPROD,XQHERE,ZTVOL,"")) I ZTUCI]"" D FIRE
"RTN","XQ8A",13,0)
 ;
"RTN","XQ8A",14,0)
OUT ;Exit here
"RTN","XQ8A",15,0)
 S XQY=+XQ8SV,XQDIC=$P(XQ8SV,U,2),XQY0=$P(XQ8SV,3,99)
"RTN","XQ8A",16,0)
 K %,%X,%Y,DIC,DIR,XQ8SV,XQDATE,XQFG1,XQHERE,XQI,XQPROD,XQRE,XQUCI,XQUR,XQVOL,XQXUF,ZTSK,ZTUCI,ZTVOL,Y
"RTN","XQ8A",17,0)
 Q
"RTN","XQ8A",18,0)
FIRE ;Fire off a task in selected UCI
"RTN","XQ8A",19,0)
 S (XQRE,XQFG1)=0,ZTIO="",ZTRTN="PM2^XQ8",ZTDTH=$H,ZTSAVE("XQDIC")="",ZTSAVE("XQRE")="",ZTSAVE("XQFG1")="",ZTDESC="Rebuilding "_XQDIC_" from BLD1^XQ81"
"RTN","XQ8A",20,0)
 S:$D(XQXUF) ZTSAVE("XQXUF")=""
"RTN","XQ8A",21,0)
 D ^%ZTLOAD W " ",ZTSK
"RTN","XQ8A",22,0)
 Q
"RTN","XQ8A",23,0)
 ;
"RTN","XQ8A",24,0)
ALL ;Rebuild menus in all UCI's marked in the UCI Association Table
"RTN","XQ8A",25,0)
 ;  which is in %ZIS(14.6)
"RTN","XQ8A",26,0)
 D ^XQDATE S XQDATE=%Y
"RTN","XQ8A",27,0)
 K ^DIC(19,"AT")
"RTN","XQ8A",28,0)
 S XQVOL=""
"RTN","XQ8A",29,0)
 F  S XQVOL=$O(^%ZIS(14.5,"B",XQVOL)) Q:XQVOL=""  D
"RTN","XQ8A",30,0)
 .S XQUCI=""
"RTN","XQ8A",31,0)
 .F  S XQUCI=$O(^%ZIS(14.6,"AV",XQVOL,XQUCI)) Q:XQUCI=""  D
"RTN","XQ8A",32,0)
 ..S XQN=$O(^%ZIS(14.6,"AV",XQVOL,XQUCI,0)) Q:XQN=""
"RTN","XQ8A",33,0)
 ..I $P(^%ZIS(14.6,XQN,0),U,7) D FIRE2
"RTN","XQ8A",34,0)
 ..Q
"RTN","XQ8A",35,0)
 .Q
"RTN","XQ8A",36,0)
 K %,%Y,XQDATE,XQUCI,XQVOL
"RTN","XQ8A",37,0)
 Q
"RTN","XQ8A",38,0)
FIRE2 ;Queue menubuild in a particular UCI
"RTN","XQ8A",39,0)
 S (XQRE,XQFG1)=0,ZTSAVE("XQRE")="",ZTSAVE("XQFG1")=""
"RTN","XQ8A",40,0)
 S ZTCPU=XQVOL,ZTUCI=XQUCI
"RTN","XQ8A",41,0)
 S ZTRTN="QUE^XQ81",ZTDTH=$H,ZTIO=""
"RTN","XQ8A",42,0)
 S ZTDESC="Menu rebuild in "_ZTCPU_","_ZTUCI_" on "_XQDATE
"RTN","XQ8A",43,0)
 D ^%ZTLOAD
"RTN","XQ8A",44,0)
 Q
"RTN","XQDATE")
0^21^B2369433
"RTN","XQDATE",1,0)
XQDATE ;SEA/MJM - Return Human Readible Date ;04/13/98  13:48
"RTN","XQDATE",2,0)
 ;;8.0;KERNEL;**71,46**;Jul 10, 1995
"RTN","XQDATE",3,0)
 ;Input: XQD1 contains $H to be converted, defaults to now if not
"RTN","XQDATE",4,0)
 ;present.  Output: % contains date in FileMan format, %Y contains
"RTN","XQDATE",5,0)
 ;date and time in Human format (Feb. 20, 1991  5:35 PM)
"RTN","XQDATE",6,0)
 ;
"RTN","XQDATE",7,0)
 ;Modified 1/27/98 to reflect Y2K corrections.
"RTN","XQDATE",8,0)
 ;
"RTN","XQDATE",9,0)
 S U="^" I '$D(XQD1) S XQD1=$H
"RTN","XQDATE",10,0)
 S %=$$HTFM^XLFDT(XQD1)
"RTN","XQDATE",11,0)
 S %Y=$$FMTE^XLFDT(%,"1P")
"RTN","XQDATE",12,0)
 K XQD1
"RTN","XQDATE",13,0)
 Q
"RTN","XQDATE",14,0)
 ;
"RTN","XQDATE",15,0)
 S %=XQD1>21608+XQD1-.1,XQD2=%\365.25+141,%=%#365.25\1,XQD3=%+306#(XQD2#4=0+365)#153#61#31+1,XQD4=%-XQD3\29+1,XQD5=XQD2_"00"+XQD4_"00"+XQD3
"RTN","XQDATE",16,0)
 S %=$P(XQD1,",",2),%=%#60/100+(%#3600\60)/100+(%\3600)/100,%=XQD5_$S(%:%,1:"")
"RTN","XQDATE",17,0)
 S XQD1="Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec"
"RTN","XQDATE",18,0)
 S %Y=$P(XQD1,U,XQD4),%Y=%Y_$S(%Y["May":"",1:".")_" "_XQD3_", "_(XQD2+1700)
"RTN","XQDATE",19,0)
 S XQD2=$E($P(%,".",2),1,4) I $L(XQD2)<4 F XQD5=0:0 S XQD2=XQD2_"0" Q:$L(XQD2)=4
"RTN","XQDATE",20,0)
 S XQD4=$S(XQD2>1159:"PM",1:"AM"),XQD3=$E(XQD2,1,2),XQD3=$S(XQD3>12:XQD3-12,1:XQD3),XQD2=$E(XQD2,3,4)
"RTN","XQDATE",21,0)
 S %Y=%Y_"  "_+XQD3_":"_XQD2_" "_XQD4
"RTN","XQDATE",22,0)
 K XQD1,XQD2,XQD3,XQD4,XQD5
"RTN","XQDATE",23,0)
 Q
"RTN","XQHLP")
0^8^B16266682
"RTN","XQHLP",1,0)
XQHLP ;SEA/MJM - Menu Helper  ;04/13/98  13:59
"RTN","XQHLP",2,0)
 ;;8.0;KERNEL;**46**;Jul 10, 1995
"RTN","XQHLP",3,0)
 ;
"RTN","XQHLP",4,0)
PAUSE R !!,"  **> Press 'RETURN' to continue, '^' to stop, or '?[option text]' for more",!?25,"help: ",XQL:DTIME D:XQL?1"?"1AN.ANP HELP S XQL=$S(XQL[U:-1,1:XQLN) W @IOF Q
"RTN","XQHLP",5,0)
 ;
"RTN","XQHLP",6,0)
PAUSE1 R !!,"  **> Press 'RETURN' to continue, '^' to stop: ",XQL:DTIME S XQL=$S(XQL[U:-1,1:XQLN) W @IOF Q
"RTN","XQHLP",7,0)
 ;
"RTN","XQHLP",8,0)
SHOW  F  S XQX=$O(^XUTL("XQO",XQDIC,XQX)) Q:XQX=U!(XQL<0)!(XQX="")  I $P(^(XQX),U,2) D
"RTN","XQHLP",9,0)
 .S XQHY=^(XQX)
"RTN","XQHLP",10,0)
 .D PRNT
"RTN","XQHLP",11,0)
 .Q  ;G SHOW
"RTN","XQHLP",12,0)
 Q
"RTN","XQHLP",13,0)
 ;
"RTN","XQHLP",14,0)
PRNT ;Print out the description of the option XQHY    
"RTN","XQHLP",15,0)
 I '$L($P(XQHY,U,2))!'$D(^DIC(19,+XQHY,0)) Q
"RTN","XQHLP",16,0)
 I XQL<5 D PAUSE Q:XQL<0
"RTN","XQHLP",17,0)
 S XQHY0=^XUTL("XQO",XQDIC,"^",+XQHY) W !!,"'"_$P(XQHY0,U,3)_"'     Option name: ",$P(XQHY0,U,2) S XQL=XQL-2 S %=$P(XQHY0,U) I %]"" W "     Synonym: ",%
"RTN","XQHLP",18,0)
 I '$D(XQHLP),$P(XQHY0,U,8)'="" S %=$P($P(XQHY0,U,3)," "),%=$S($L(%)>3:%,1:$P($P(XQHY0,U,3)," ",1,2)) W !,"  **> Extended help available.  Type ","""","?"_%,""""," to see it." S XQL=XQL-1
"RTN","XQHLP",19,0)
 F XQNXTOP=0:0 S XQNXTOP=$O(^DIC(19,+XQHY,1,XQNXTOP)) Q:XQNXTOP=""  S XQA=^(XQNXTOP,0) W !?5,XQA S XQL=XQL-1 D PAUSE:'XQL
"RTN","XQHLP",20,0)
 Q
"RTN","XQHLP",21,0)
 ;
"RTN","XQHLP",22,0)
HELP ;Display a help screen
"RTN","XQHLP",23,0)
 N XQHY,XQX S XQHSV=XQY_U_XQDIC_U_XQY0,XQUR=$P(XQL,"?",2) D DIC^XQ71
"RTN","XQHLP",24,0)
 I XQY<0 W " ??",*7 S XQY=+XQHSV,XQDIC=$P(XQHSV,U,2),XQY0=$P(XQHSV,U,3,99) Q
"RTN","XQHLP",25,0)
 S XQH=$P(XQY0,U,7) I '$L(XQH) W !!,"**> Sorry, no help text available for this option." S XQY=+XQHSV,XQDIC=$P(XQHSV,U,2),XQY0=$P(XQHSV,U,3,99) Q
"RTN","XQHLP",26,0)
 D EN^XQH S XQY=+XQHSV,XQDIC=$P(XQHSV,U,2),XQY0=$P(XQHSV,U,3,99),XQL=0
"RTN","XQHLP",27,0)
 Q
"RTN","XQHLP",28,0)
 ;
"RTN","XQHLP",29,0)
EN ;Show descriptions from Option File Entry point from EN^XQ2
"RTN","XQHLP",30,0)
 ;S XQHSV=XQY_U_XQDIC_U_XQY0
"RTN","XQHLP",31,0)
 S XQX=0,(XQL,XQLN)=$S($D(IOSL):IOSL-2,1:22),XQSAV=XQDIC D:$S('($D(^XUTL("XQO",XQDIC,0))#2):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET D SHOW W !! G:XQL<0 OUT
"RTN","XQHLP",32,0)
 S DIR(0)="Y",DIR("A")="  Shall I show you your secondary menus too",DIR("B")="No" D ^DIR G:$D(DUOUT) OUT
"RTN","XQHLP",33,0)
 I Y W @IOF S XQDIC="U"_DUZ D:$S('($D(^XUTL("XQO",XQDIC,0))#2):1,'$D(^VA(200,DUZ,203.1)):1,1:^VA(200,DUZ,203.1)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET S XQL=XQLN,XQX=0 W ?25,"**> Your secondary options <**",!! D SHOW W !!
"RTN","XQHLP",34,0)
 G:XQL<0 OUT
"RTN","XQHLP",35,0)
 S DIR(0)="Y",DIR("A")="  Would you like to see the Common Options",DIR("B")="No" D ^DIR G:$D(DUOUT) OUT
"RTN","XQHLP",36,0)
 I Y W @IOF S XQL=XQLN,XQX=0,XQDIC=$O(^DIC(19,"B","XUCOMMAND",0))
"RTN","XQHLP",37,0)
 I Y D:$S('($D(^XUTL("XQO",XQDIC,0))#2):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET W ?17,"**> The Common Options, options available to everyone <**",!! D SHOW
"RTN","XQHLP",38,0)
 ;
"RTN","XQHLP",39,0)
OUT ;Exit here
"RTN","XQHLP",40,0)
 W !!
"RTN","XQHLP",41,0)
 ;S:$D(XQSAV) XQDIC=XQSAV
"RTN","XQHLP",42,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XQA,XQHLP,XQHSV,XQHY,XQHY0,XQNXTOP,XQL,XQLN,XQN,XQSAV,XQX,Y
"RTN","XQHLP",43,0)
 I $D(XQHLP) K XQHLP Q
"RTN","XQHLP",44,0)
 G M2^XQ
"RTN","XQHLP",45,0)
 ;
"RTN","XQHLP",46,0)
OPT ;Respond to a user entering "?Option_text"
"RTN","XQHLP",47,0)
 ;Enter with XQUR from XQ.  Find option, show help, return to XQ
"RTN","XQHLP",48,0)
 S XQHSV=XQY_U_XQDIC_U_XQY0
"RTN","XQHLP",49,0)
 S (XQL,XQLN)=$S($D(IOSL):IOSL-2,1:22)
"RTN","XQHLP",50,0)
 I XQUR["?" F  S XQUR=$P(XQUR,"?",2) Q:XQUR'["?"
"RTN","XQHLP",51,0)
 S XQHLP="" ;Set a flag so we know it isn't a jump
"RTN","XQHLP",52,0)
 D S^XQ75
"RTN","XQHLP",53,0)
 I XQY>0 D
"RTN","XQHLP",54,0)
 .W @IOF W !!!
"RTN","XQHLP",55,0)
 .S XQHY=XQY_U_XQY0
"RTN","XQHLP",56,0)
 .D PRNT,PAUSE1
"RTN","XQHLP",57,0)
 .I $P(XQY0,U,7)'="" D
"RTN","XQHLP",58,0)
 ..S XQH=$P(XQY0,U,7) D EN^XQH
"RTN","XQHLP",59,0)
 ..Q
"RTN","XQHLP",60,0)
 .Q
"RTN","XQHLP",61,0)
 S (XQY,XQDIC)=$P(XQHSV,U),XQY0=$P(XQHSV,U,3,99)
"RTN","XQHLP",62,0)
 G OUT
"RTN","XQHLP",63,0)
 Q
"RTN","XQOPED")
0^17^B3479481
"RTN","XQOPED",1,0)
XQOPED ;SEA/Luke - Option Editor ;04/27/98  12:26
"RTN","XQOPED",2,0)
 ;;8.0;KERNEL;**46**;Jul 10, 1995
"RTN","XQOPED",3,0)
 ;
"RTN","XQOPED",4,0)
IN ;Called from the Pre Action of the XQEDTOPT form
"RTN","XQOPED",5,0)
 K ^TMP($J,"XQOPED")
"RTN","XQOPED",6,0)
 ;I $D(XQDICNEW) S ^TMP($J,"XQOPED","NEW")=XQDICNEW
"RTN","XQOPED",7,0)
 Q
"RTN","XQOPED",8,0)
 ;
"RTN","XQOPED",9,0)
OUT ;Called from the Post Action of the XQEDTOPT form
"RTN","XQOPED",10,0)
 I $D(XQDICNEW),$P(XQDICNEW,U,3) D CMPLT
"RTN","XQOPED",11,0)
 I $D(DDSCHANG),DDSCHANG D PUT^DDSVAL(DIE,.DA,3.6,DUZ,"","I")
"RTN","XQOPED",12,0)
 ;I $D(DDSCHANG),DDSCHANG S ^TMP($J,"XQOPED","CHANGED")=DA
"RTN","XQOPED",13,0)
 K DDSCHANG,XQDICNEW ;,DDSPAGE,DDSPARM
"RTN","XQOPED",14,0)
 Q
"RTN","XQOPED",15,0)
 ;
"RTN","XQOPED",16,0)
CHECK() ;See if this person should have programmer access to the
"RTN","XQOPED",17,0)
 ;EXECUTABLES subfile containing the ENTRY ACTION, etc.
"RTN","XQOPED",18,0)
 ;
"RTN","XQOPED",19,0)
 ;Returns a 1 if the user has a key or an @-sign, 0 if not.
"RTN","XQOPED",20,0)
 ;
"RTN","XQOPED",21,0)
 ;Called by the branching logic of the EXECUTABLES form-only field
"RTN","XQOPED",22,0)
 ;on Page 1 (Main) of the XQEDTOPT ScreenMan form.
"RTN","XQOPED",23,0)
 ;
"RTN","XQOPED",24,0)
 N XQYES S XQYES=0
"RTN","XQOPED",25,0)
 ;
"RTN","XQOPED",26,0)
 Q:'$D(DUZ) XQYES
"RTN","XQOPED",27,0)
 I $D(^XUSEC("XUMGR",DUZ)) S XQYES=1
"RTN","XQOPED",28,0)
 I $D(^XUSEC("XUPROG",DUZ)) S XQYES=1
"RTN","XQOPED",29,0)
 ;I $D(^XUSEC("XUPROGMODE",DUZ)) S XQYES=1
"RTN","XQOPED",30,0)
 ;I $D(^XUSEC("XQSMDFM",DUZ)) S XQYES=1
"RTN","XQOPED",31,0)
 ;
"RTN","XQOPED",32,0)
 ;
"RTN","XQOPED",33,0)
 Q:'$D(DUZ(0)) XQYES
"RTN","XQOPED",34,0)
 I DUZ(0)="@" S XQYES=1
"RTN","XQOPED",35,0)
 ;I DUZ(0)="#" S XQYES=1
"RTN","XQOPED",36,0)
 ;
"RTN","XQOPED",37,0)
 Q XQYES
"RTN","XQOPED",38,0)
 ;
"RTN","XQOPED",39,0)
 ;
"RTN","XQOPED",40,0)
EA ;ENTRY ACTION for the option XQOPED, the screen-based option editor
"RTN","XQOPED",41,0)
 K ^TMP($J,"XQOPED")
"RTN","XQOPED",42,0)
 I $$CHECK() S DLAYGO=19
"RTN","XQOPED",43,0)
 Q
"RTN","XQOPED",44,0)
 ;
"RTN","XQOPED",45,0)
XA ;EXIT ACTION for the option XQOPED, the screen based Option Editor
"RTN","XQOPED",46,0)
 ;Repoint the CREATOR field for the modified options
"RTN","XQOPED",47,0)
 ;
"RTN","XQOPED",48,0)
 I $D(^TMP($J,"XQOPED","CHANGED")) D
"RTN","XQOPED",49,0)
 .N % S %=0
"RTN","XQOPED",50,0)
 .F  Q:%=""  D
"RTN","XQOPED",51,0)
 ..S %=$O(^TMP($J,"XQOPED","CHANGED")) Q:%=""
"RTN","XQOPED",52,0)
 ..I $D(^DIC(19,%,0))#2 S $P(^(0),U,5)=DUZ
"RTN","XQOPED",53,0)
 ..Q
"RTN","XQOPED",54,0)
 .Q
"RTN","XQOPED",55,0)
 K ^TMP($J,"XQOPED")
"RTN","XQOPED",56,0)
 Q
"RTN","XQOPED",57,0)
 ;
"RTN","XQOPED",58,0)
CMPLT ;Check to make sure that the option is complete enough to leave
"RTN","XQOPED",59,0)
 ;it in the Option File.
"RTN","XQOPED",60,0)
 I $D(XQDICNEW) D
"RTN","XQOPED",61,0)
 .N %
"RTN","XQOPED",62,0)
 .S %=$P(^DIC(19,+XQDICNEW,0),U,4) ;Check the TYPE field
"RTN","XQOPED",63,0)
 .I %']"" S DA=+XQDICNEW,DIK="^DIC(19," D ^DIK K DIK,DA
"RTN","XQOPED",64,0)
 .Q
"RTN","XQOPED",65,0)
 Q
"RTN","XQOPED",66,0)
 ;
"RTN","XQOPED",67,0)
 ;This code was graciously provided by David LaLiberte
"RTN","XQOPED",68,0)
 ;AUHBHLP
"RTN","XQOPED",69,0)
 ;692/DCL-TMT PLAN SCREEN HELP PROCESSOR;OCT 07, 1997@13:34
"RTN","XQOPED",70,0)
 ;;1.0;WHITE CITY TMT PLAN PKG;;6-17-97
"RTN","XQOPED",71,0)
H(XQIEN) ;Process Help for ScreenMan form
"RTN","XQOPED",72,0)
 Q:$G(XQIEN)'>0
"RTN","XQOPED",73,0)
 Q:$D(^DIC(19.8,XQIEN,1))'>9
"RTN","XQOPED",74,0)
 N XQA,XQI
"RTN","XQOPED",75,0)
 F XQI=1:1:5 Q:'$D(^DIC(19.8,XQIEN,1,XQI,0))  S XQA(XQI)=^(0)
"RTN","XQOPED",76,0)
 D HLP^DDSUTL(.XQA)
"RTN","XQOPED",77,0)
 K XQIEN
"RTN","XQOPED",78,0)
 Q
"RTN","XQP46INI")
0^22^B445503
"RTN","XQP46INI",1,0)
XQP46INI ;SEA/LUKE - Post init for patch XU*8.0*46 ;04/27/98  12:27
"RTN","XQP46INI",2,0)
 ;;8.0;Kernel;**46**;APR 14, 1998
"RTN","XQP46INI",3,0)
 ;Post installation routine for KIDS patch XU*8.0*46
"RTN","XQP46INI",4,0)
 ;
"RTN","XQP46INI",5,0)
 ;Add Synonym "OPED" to XQOPED option in the XUMAINT menu
"RTN","XQP46INI",6,0)
 N XQMEN,XQOP,XQORD
"RTN","XQP46INI",7,0)
 S XQMEN=$O(^DIC(19,"B","XUMAINT",0))
"RTN","XQP46INI",8,0)
 S XQOP=$O(^DIC(19,"B","XQOPED",0))
"RTN","XQP46INI",9,0)
 S XQORD=$O(^DIC(19,XQMEN,10,"B",XQOP,0))
"RTN","XQP46INI",10,0)
 I +^DIC(19,XQMEN,10,XQORD,0)=XQOP D
"RTN","XQP46INI",11,0)
 .S $P(^DIC(19,XQMEN,10,XQORD,0),U,2)="OPED"
"RTN","XQP46INI",12,0)
 .S ^DIC(19,XQMEN,10,"C","OPED",XQORD)=""
"RTN","XQP46INI",13,0)
 .Q
"RTN","XQP46INI",14,0)
 Q
"RTN","XQT")
0^9^B26152932
"RTN","XQT",1,0)
XQT ;SEA/MJM - Menu template loader ;08/27/97  14:49
"RTN","XQT",2,0)
 ;;8.0;KERNEL;**20,47,46**;Jul 10, 1995
"RTN","XQT",3,0)
 ;
"RTN","XQT",4,0)
 ;Entry from XQ
"RTN","XQT",5,0)
 S XQTSV=XQY_U_XQDIC_U_XQY0,(XQU,XQUR)=$P(XQUR,"[",2)
"RTN","XQT",6,0)
 I XQUR["?" D:XQUR["??" SHO^XQT4 W !!?5,"See 'Menu Templates' options for more information." G OUT
"RTN","XQT",7,0)
 I XQUR=" ",$D(^DISV(DUZ,"XQT")) S XQUR=^("XQT"),XQU=""
"RTN","XQT",8,0)
 D FIND G:XQK OUT D LOD I XQY<0 G OUT
"RTN","XQT",9,0)
 S ^XUTL("XQ",$J,"S")=XQTSV,^DISV(DUZ,"XQT")=XQUR W:XQU'=-1 $E(XQUR,$L(XQU)+1,99)
"RTN","XQT",10,0)
 K %,XQ,XQBLD,XQFL,XQI,XQJ,XQK,XQL,XQM,XQMA,XQMN,XQN,XQNO1,XQSIB,XQTSV,XQTL,XQTU,XQU
"RTN","XQT",11,0)
 G ^XQT1 ; Template is loaded and checked
"RTN","XQT",12,0)
 ;
"RTN","XQT",13,0)
FIND ;Find the template requested
"RTN","XQT",14,0)
 S XQK=0,XQN="",XQJ=1,(XQM,XQMA)=^XUTL("XQ",$J,"XQM")
"RTN","XQT",15,0)
 I XQUR'?.ANP W *7,"  ??" S XQK=1 Q
"RTN","XQT",16,0)
 S XQX=XQUR I XQUR'?.PUN F XQI=1:1 Q:XQX?.NUP  S XQN=$A(XQX,XQI) I XQN<123,XQN>96 S XQX=$E(XQX,1,XQI-1)_$C(XQN-32)_$E(XQX,XQI+1,255)
"RTN","XQT",17,0)
 S XQUR=XQX
"RTN","XQT",18,0)
 F XQI=0:0 S XQN=$O(^VA(200,DUZ,19.8,"B",XQN)) Q:XQN=""  S:XQUR=$E(XQN,1,$L(XQUR)) XQ(XQJ)=XQN,XQJ=XQJ+1
"RTN","XQT",19,0)
 I XQJ=1 W " ??",*7 S XQK=1 Q
"RTN","XQT",20,0)
 I XQJ=2 S XQUR=XQ(1) Q
"RTN","XQT",21,0)
 I XQJ>2 S XQK=0 D CHS
"RTN","XQT",22,0)
 Q
"RTN","XQT",23,0)
 ;
"RTN","XQT",24,0)
LOD ;Load the template into the ^XUTL("XQT").
"RTN","XQT",25,0)
 ;I $D(^XUTL("XQT",$J,XQUR,0))#2 S ^("T")=1 Q
"RTN","XQT",26,0)
 S XQN=$O(^VA(200,DUZ,19.8,"B",XQUR,0)) I XQN="" W " ??",*7 G OUT
"RTN","XQT",27,0)
 W:'$D(ZTQUEUED) !!,"Loading ",XQUR,"..."
"RTN","XQT",28,0)
 S ^XUTL("XQT",$J,XQUR,0)=DT,(XQEA,XQFL,XQTU)=0
"RTN","XQT",29,0)
 S XQJ=$P(^VA(200,DUZ,19.8,XQN,1,0),U,3),XQY=XQM,XQL=1
"RTN","XQT",30,0)
 D NO1^XQT5 Q:XQY'>0
"RTN","XQT",31,0)
 F XQI=1:1:XQJ Q:XQY=-1  S XQTL=^VA(200,DUZ,19.8,XQN,1,XQI,0) F XQK=1:1 D:'XQFL RPT S XQ=$P(XQTL,U,XQK) Q:XQ=""  S XQY=+XQ,XQDIC=$P(XQ,",",2),XQEA=$P(XQ,",",3) D CHK S XQMA=XQY Q:XQY=-1  D OK Q:XQY=-1
"RTN","XQT",32,0)
 I XQY=-1 K ^XUTL("XQT",$J,XQUR)
"RTN","XQT",33,0)
 Q
"RTN","XQT",34,0)
 ;
"RTN","XQT",35,0)
SET ;Build the ^XUTL("XQO",+XQDIC [ or "U"_DUZ]) nodes if need be
"RTN","XQT",36,0)
 L +^XUTL("XQO",XQDIC):5 D:$S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET L -^XUTL("XQO",XQDIC)
"RTN","XQT",37,0)
 Q
"RTN","XQT",38,0)
 ;
"RTN","XQT",39,0)
SETU ;Build the ^XUTL("XQO","U"_DUZ) nodes if need be
"RTN","XQT",40,0)
 D:$S('$D(^XUTL("XQO","U"_DUZ)):1,'$D(^VA(200,DUZ,203.1)):1,1:^VA(200,DUZ,203.1)'=$P(^XUTL("XQO","U"_DUZ,0),U,2)) ^XQSET
"RTN","XQT",41,0)
 Q
"RTN","XQT",42,0)
 ;
"RTN","XQT",43,0)
CHK ;Make sure it's OK to use this option
"RTN","XQT",44,0)
 I $D(^XUTL("XQO","P"_XQM,U,XQY))!(XQM=XQY) Q
"RTN","XQT",45,0)
 I $D(^XUTL("XQO","PXU",U,XQY)) Q
"RTN","XQT",46,0)
 I '$D(XQBLD) N XQDIC S XQDIC="U"_DUZ D SETU S XQBLD=""
"RTN","XQT",47,0)
 I $D(^XUTL("XQO","U"_DUZ,U,+XQY)) Q
"RTN","XQT",48,0)
 S (%,XQTU)=0 F XQII=1:1 Q:XQTU  S %=$O(^VA(200,DUZ,203,%,0)) Q:%'>0  S:$D(^XUTL("XQO","P"_%,U,XQY)) XQTU=1
"RTN","XQT",49,0)
 Q:XQTU=1
"RTN","XQT",50,0)
 D SET Q:$D(^XUTL("XQO",XQDIC,U,XQY))
"RTN","XQT",51,0)
 I '$D(^DIC(19,XQY,0))#2 W !!,"The Option File has been changed. This template will no longer work.",!?5,"'",XQUR,"' should be deleated and/or rebuilt." S XQY=-1 Q
"RTN","XQT",52,0)
 W !!,"Sorry, the option '",$P(^DIC(19,XQY,0),U,2),"'",!,?5,"is no longer available to you." S XQY=-1
"RTN","XQT",53,0)
 Q
"RTN","XQT",54,0)
 ;
"RTN","XQT",55,0)
OK ;See if it's locked, etc.
"RTN","XQT",56,0)
 I XQY=XQDIC D S1^XQCHK I 1
"RTN","XQT",57,0)
 E  L +^XUTL("XQO",XQDIC):5 D:$S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET L -^XUTL("XQO",XQDIC)
"RTN","XQT",58,0)
 S %=$G(^XUTL("XQO",XQDIC,U,+XQY)) I %="",XQY'=XQDIC W !!,"Because of changes to the Option File an option is no longer available." S XQY=-1 Q
"RTN","XQT",59,0)
 S XQY0=$S(XQY=XQDIC:XQY0,1:$P(%,U,2,99))
"RTN","XQT",60,0)
 I $L($P(XQY0,U,3)) W !!,"Option '",$P(XQY0,U,2),"'",!,?5,"is out of order.  The message is: ",$P(XQY0,U,3) S XQY=-1 Q
"RTN","XQT",61,0)
 I $L($P(XQY0,U,6)),'$D(^XUSEC($P(XQY0,U,6),DUZ)) W !!,"Option '",$P(XQY0,U,2),!,?5,"is locked.  You don't own the key." S XQY=-1 Q
"RTN","XQT",62,0)
 I $L($P(XQY0,U,9)) D ^XQDATE S X=% D ^XQ92 I X="" W !!,"Option '",$P(XQY0,U,2),"'",!,?5,"is not permitted to run right now.  Sorry." S XQY=-1 Q
"RTN","XQT",63,0)
 I $P(XQY0,U,10)["y",'$D(^DIC(19,XQY,3.96,"B",ION)) W !!,"Option '",$P(XQY0,U,2),!,?5,"is restricted to run only only certain terminals.  You're not on one.  Sorry." S XQY=-1 Q
"RTN","XQT",64,0)
 S ^XUTL("XQT",$J,XQUR,XQL)=XQY_U_XQDIC_U_XQY0
"RTN","XQT",65,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) S ^XUTL("XQT",$J,XQUR,XQL,"H")=^DIC(19,XQY,26)
"RTN","XQT",66,0)
 I $P(XQY0,U,14),XQEA["E",$D(^DIC(19,XQY,20)),$L(^(20)) S ^XUTL("XQT",$J,XQUR,XQL,"E")=^DIC(19,XQY,20)
"RTN","XQT",67,0)
 I $P(XQY0,U,15),XQEA["X",$D(^DIC(19,XQY,15)),$L(^(15)) S ^XUTL("XQT",$J,XQUR,XQL,"X")=^DIC(19,XQY,15)
"RTN","XQT",68,0)
 S XQL=XQL+1
"RTN","XQT",69,0)
 Q
"RTN","XQT",70,0)
 ;
"RTN","XQT",71,0)
CHS ;Choose the template from those that match
"RTN","XQT",72,0)
 S XQK=1,XQU=-1 W !!,"Chose by number from: ",! F XQI=1:1:XQJ-1 W !,?5,XQI,".  ",XQ(XQI)
"RTN","XQT",73,0)
 W !!,"Enter a number between 1 and ",XQJ-1," or '^' to quit: " R %:DTIME S:'$T %=U S:%="" %=U Q:%=U  G:(%'?.N)!(%>XQJ)!(%="") CHS S XQUR=XQ(%),XQK=0
"RTN","XQT",74,0)
 Q
"RTN","XQT",75,0)
 ;
"RTN","XQT",76,0)
RPT ;Set the 'repeat' flag in ^XUTL and strip it off list of options
"RTN","XQT",77,0)
 S XQFL=1,^XUTL("XQT",$J,XQUR,"RPT")=$P(XQTL,U,1),XQTL=$P(XQTL,U,2,99)
"RTN","XQT",78,0)
 Q
"RTN","XQT",79,0)
OUT ;
"RTN","XQT",80,0)
 S XQY=+XQTSV,XQDIC=$P(XQTSV,U,2),XQY0=$P(XQTSV,U,3,99)
"RTN","XQT",81,0)
 K %,XQ,XQBLD,XQEX,XQI,XQJ,XQK,XQL,XQM,XQN,XQN1,XQTSV,XQTU
"RTN","XQT",82,0)
 G NOFIND^XQ
"RTN","XQT",83,0)
 Q
"RTN","XQT1")
0^10^B19157710
"RTN","XQT1",1,0)
XQT1 ;SEA/MJM - Menu Template Processor ;04/13/98  09:31
"RTN","XQT1",2,0)
 ;;8.0;KERNEL;**59**;Jul 10, 1995
"RTN","XQT1",3,0)
 ;
"RTN","XQT1",4,0)
 S (XQPT,^XUTL("XQT",$J,0))=XQUR,^(XQPT,"T")=0
"RTN","XQT1",5,0)
 ;
"RTN","XQT1",6,0)
KILL K D,D0,D1,DA,DIC,DIE,DIR,DIS,DR,XQI,XQV,XQW,XQZ
"RTN","XQT1",7,0)
 ;
"RTN","XQT1",8,0)
NXT ;Process the next option, entry/exit actions,start list over, or quit
"RTN","XQT1",9,0)
 I $D(^(^XUTL("XQT",$J,XQPT,"T"),"X")) X ^("X")
"RTN","XQT1",10,0)
 I '$D(DT)!('$D(DTIME))!('$D(DUZ))!('$D(DUZ(0))) D DVARS^XQ12
"RTN","XQT1",11,0)
 S:'$D(XQPT)#2 XQPT=^XUTL("XQT",$J,0) S ^("T")=^XUTL("XQT",$J,XQPT,"T")+1
"RTN","XQT1",12,0)
ASK I '$D(^(^XUTL("XQT",$J,XQPT,"T"))) G:'^("RPT") OUT S ^("T")=1 W !!,"Again? Y// " R %:DTIME S:'$T %=U S:%="" %="Y" G:%=U!("Nn"[%) OUT D:%["??" HELP I "Yy"'[% W !!,"Please type 'Y' or 'N', '^' to quit, or '??' for help." G ASK
"RTN","XQT1",13,0)
 S:'$D(XQPT)#2 XQPT=^XUTL("XQT",$J,0) S %=^(^XUTL("XQT",$J,XQPT,"T")),XQY=+%,XQDIC=$P(%,U,2),XQY0=$P(%,U,3,99)
"RTN","XQT1",14,0)
 I $D(^(^XUTL("XQT",$J,XQPT,"T"),"H")) X ^("H")
"RTN","XQT1",15,0)
 I $D(^(^XUTL("XQT",$J,XQPT,"T"),"E")),$P(XQY0,U,4)'="A" X ^("E") I $D(XQUIT) D T^XQUIT I $D(XQUIT) K XQUIT W !!,"XQUIT encountered at option ",$P(XQY0,U,2),!,?5,"template ",XQPT," halted by this encounter.  Sorry." G OUT
"RTN","XQT1",16,0)
 S XQT=$P(XQY0,U,4) I "M"'[XQT W !!,$P(XQY0,U,2),! G @XQT
"RTN","XQT1",17,0)
 G NXT
"RTN","XQT1",18,0)
 ;
"RTN","XQT1",19,0)
OUT ;End of the line for this puppy: return to regular menu system
"RTN","XQT1",20,0)
 I $D(XQXFLG("ZEBRA")) L ^XWB("SESSION",XQXFLG("ZEBRA")) ;Clear by setting new lock
"RTN","XQT1",21,0)
 E  L  ;Clear the lock table
"RTN","XQT1",22,0)
 ;
"RTN","XQT1",23,0)
 K ^XUTL("XQT",$J,0),^(XQPT,"T"),XQPT
"RTN","XQT1",24,0)
 S %=^XUTL("XQ",$J,"S"),XQY=+%,XQDIC=$P(%,U,2),XQY0=$P(%,U,3,99),XQT=$P(XQY0,U,4)
"RTN","XQT1",25,0)
 K D0,D1,DA,DIC,DIE,DR,XQUIT,XQI,XQV,XQW,XQZ
"RTN","XQT1",26,0)
 G NOFIND^XQ
"RTN","XQT1",27,0)
 ;
"RTN","XQT1",28,0)
HELP ;Call the help screen
"RTN","XQT1",29,0)
 S XQH="XQTREPEAT" D EN^XQH
"RTN","XQT1",30,0)
 Q
"RTN","XQT1",31,0)
 ;
"RTN","XQT1",32,0)
A ;ACTION type option entry point
"RTN","XQT1",33,0)
 X:$D(^DIC(19,+XQY,20)) ^(20)
"RTN","XQT1",34,0)
 I $D(XQUIT) D T^XQUIT I $D(XQUIT) K XQUIT W !!,"XQUIT encountered at option ",$P(XQY0,U,2),!,?5,"template ",XQPT," halted by this encounter.  Sorry." G OUT
"RTN","XQT1",35,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26)
"RTN","XQT1",36,0)
 G NXT
"RTN","XQT1",37,0)
 ;
"RTN","XQT1",38,0)
C ;SCREEN type option entry point
"RTN","XQT1",39,0)
 D DIC G:DA=-1 KILL S XQZ="DR,DDSFILE,DDSFILE(1)",XQW=39 D SET
"RTN","XQT1",40,0)
 S DDSPAGE=$P($G(^DIC(19,+XQY,43)),U) K:DDSPAGE="" DDSPAGE
"RTN","XQT1",41,0)
 S DDSPARM=$P($G(^DIC(19,+XQY,43)),U,2) K:DDSPARM="" DDSPARM
"RTN","XQT1",42,0)
 I DDSFILE["(",DDSFILE'[U S DDSFILE=U_DDSFILE
"RTN","XQT1",43,0)
 I $D(DDSFILE(1)),DDSFILE(1)["(",DDSFILE(1)'[U S DDSFILE(1)=U_DDSFILE(1)
"RTN","XQT1",44,0)
 D ^DDS K DDSFILE G C
"RTN","XQT1",45,0)
 ;
"RTN","XQT1",46,0)
P ;PRINT type option entry point
"RTN","XQT1",47,0)
 S XQZ="DIC,PG,L,FLDS,BY,FR,TO,DHD,DCOPIES,DIS(0),IOP,DHIT,DIOBEG,DIOEND",XQW=59 D SET
"RTN","XQT1",48,0)
 I $D(DIS(0))#2 F XQI=1:1:3 Q:'$D(^DIC(19,+XQY,69+(XQI/10)))  Q:^(69+(XQI/10))=""  S DIS(XQI)=^(69+(XQI/10))
"RTN","XQT1",49,0)
 S:$D(XQIOP) IOP=XQIOP
"RTN","XQT1",50,0)
 S XQI=$G(^DIC(19,XQY,79)) S:XQI>0 DIASKHD="" S:$P(XQI,U,2) DISUPNO=1 S:$P(XQI,U,3) DIPCRIT=1
"RTN","XQT1",51,0)
 D D1,EN1^DIP K IOP,DIOBERG,DIS,DP
"RTN","XQT1",52,0)
 G NXT
"RTN","XQT1",53,0)
 ;
"RTN","XQT1",54,0)
I ;INQUIRE type option entry point
"RTN","XQT1",55,0)
I1 D DIC G KILL:DA=-1 S DI=DIC,XQZ="DIC,DR,DIQ(0)",XQW=79 D SET,D1 S:$D(DIC)[0 DIC=DI
"RTN","XQT1",56,0)
 I $D(^DIC(19,+XQY,63)),$L(^(63)) S FLDS=^(63)
"RTN","XQT1",57,0)
 E  S FLDS="[CAPTIONED]"
"RTN","XQT1",58,0)
 I $G(^DIC(19,+XQY,83))["Y" S IOP="HOME"
"RTN","XQT1",59,0)
 ;S:DUZ(0)'="@" DICS="I 1 Q:'$D(^(8))  F DW=1:1:$L(^(8)) I DUZ(0)[$E(^(8),DW) Q"
"RTN","XQT1",60,0)
 ;W:$D(IOF) @IOF D EN^DIQ S Y=XQY G I1
"RTN","XQT1",61,0)
I2 ;
"RTN","XQT1",62,0)
 W ! S XQZ="DHD",XQW=66 D SET K ^UTILITY($J),^(U,$J) S ^($J,1,DA)="",@("L=+$P("_DI_"0),U,2)"),DPP(1)=L_"^^^@",L=0,C=",",Q="""",DPP=1,DPP(1,"IX")="^UTILITY(U,$J,"_DI_"^2" D N^DIP1 S Y=XQY G I1
"RTN","XQT1",63,0)
 ;
"RTN","XQT1",64,0)
E ;EDIT type option entry point
"RTN","XQT1",65,0)
E1 D DIC G KILL:DA=-1 K DIE,DIC S XQZ="DIE,DR",XQW=49 D SET S XQZ="DIE(""W"")",XQW=53 D SET
"RTN","XQT1",66,0)
 I $D(^DIC(19,XQY,53)),$L(^(53)) S %=^(53),DIE("NO^")=$S(%="N":"",1:%)
"RTN","XQT1",67,0)
 S:DIE["(" DIE=U_DIE D ^DIE S Y=XQY G E1
"RTN","XQT1",68,0)
 ;
"RTN","XQT1",69,0)
DIC ;Get FileMan parameters from Option File and do look up
"RTN","XQT1",70,0)
 W ! K DIC S XQZ="DIC,DIC(0),DIC(""A""),DIC(""B""),DIC(""S""),DIC(""W""),D",XQW=29 D SET,D1
"RTN","XQT1",71,0)
 I '$D(D) D ^DIC
"RTN","XQT1",72,0)
 I $D(D) S:D="" D="B" D IX^DIC
"RTN","XQT1",73,0)
 S DA=+Y,Y=XQY
"RTN","XQT1",74,0)
 Q
"RTN","XQT1",75,0)
 ;
"RTN","XQT1",76,0)
D1 S:DIC["(" DIC=U_DIC Q
"RTN","XQT1",77,0)
 ;
"RTN","XQT1",78,0)
SET F XQI=1:1 S XQV=$P(XQZ,",",XQI) Q:XQV=""  K @XQV I $D(^DIC(19,+XQY,XQW+XQI)),^(XQW+XQI)]"" S @XQV=^(XQW+XQI)
"RTN","XQT1",79,0)
 I $D(DIC("A")),DIC("A")]"" S DIC("A")=DIC("A")_" "
"RTN","XQT1",80,0)
 K XQI,J
"RTN","XQT1",81,0)
 Q
"RTN","XQT1",82,0)
 ;
"RTN","XQT1",83,0)
R ;RUN ROUTINE type option entry point
"RTN","XQT1",84,0)
 G:'$D(^DIC(19,XQY,25)) NXT S XQZ=^(25) G:'$L(XQZ) NXT S:XQZ'[U XQZ=U_XQZ I XQZ["[" D DO^%XUCI G NXT
"RTN","XQT1",85,0)
 D @XQZ
"RTN","XQT1",86,0)
 G NXT
"RTN","XQT1",87,0)
 ;
"RTN","XQT1",88,0)
L ;OE/RR Limited Option type
"RTN","XQT1",89,0)
O ;OE/RR Protocol (orderables) type option entry point
"RTN","XQT1",90,0)
X ;OE/RR Extended Action type option (Subset of Protocol type)
"RTN","XQT1",91,0)
Q ;OE/RR Protocol Menu type option entry point
"RTN","XQT1",92,0)
 S XQOR=+XQY,XQOR(1)=XQT D XQ^XQOR K XQOR
"RTN","XQT1",93,0)
 G NXT
"RTN","XQT1",94,0)
 Q
"RTN","XQT2")
0^11^B17251738
"RTN","XQT2",1,0)
XQT2 ;SEA/MJM - Define a path template ;04/14/98  08:07
"RTN","XQT2",2,0)
 ;;8.0;KERNEL;;Jul 10, 1995
"RTN","XQT2",3,0)
 S U="^",XQTSV=XQY_U_XQDIC_U_XQY0
"RTN","XQT2",4,0)
EN ;Entry point for Create a Template Option.
"RTN","XQT2",5,0)
 S U="^",(XQI,XQL,XQTF,XQTF1)=0,XQTT="",(XQDIC,XQY)=+^XUTL("XQ",$J,"XQM"),XQY0=^DIC(19,XQDIC,0),XQUR=""
"RTN","XQT2",6,0)
 S XQLI(XQL)=XQDIC_U_XQY_U_XQY0,XQL=XQL+1,XQAA="Choose one of the "_$P(XQY0,U,2)_" Options: "
"RTN","XQT2",7,0)
 I '$D(IOF) D HOME^%ZIS
"RTN","XQT2",8,0)
 ;
"RTN","XQT2",9,0)
INF W @IOF,"Do you want some brief instructions? [Y/N] N// " R XQUR:DTIME S:'$T XQUR=U G:XQUR=U OUT S:XQUR="" XQUR="N" I XQUR["?" W !?3,"Answer 'Y' if you want some instructions, 'N' if you don't." G INF
"RTN","XQT2",10,0)
 I "Yy"[XQUR S XQH="XQTCREATE",XQSAV=XQL D EN^XQH S XQL=XQSAV
"RTN","XQT2",11,0)
 ;
"RTN","XQT2",12,0)
ASK ;Show user the choices and get the next option, if any
"RTN","XQT2",13,0)
 L +^XUTL("XQO",XQDIC):5 D:$S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET L -^XUTL("XQO",XQDIC)
"RTN","XQT2",14,0)
 W @IOF,?18,"CREATING A MENU TEMPLATE",!!?5,"Choose an option, type RETURN to back up one level,",!?5,"'+' to store the completed template, or '^' to quit.",! S XQSAV=XQL,XQL=18 D LIST^XQ2 S XQL=XQSAV
"RTN","XQT2",15,0)
RD1 W !!,?5,XQAA R XQUR:DTIME S:'$T XQUR=U G:XQUR=U OUT G:XQUR="+" STORE
"RTN","XQT2",16,0)
 I XQUR["^" W *7,!?3,"Sorry, no jumping." G RD1
"RTN","XQT2",17,0)
 I XQUR="?" W !?3,"Enter an option, '+' to store the template,",!?3,"'??' for more help, or '^' to forget the whole thing." G RD1
"RTN","XQT2",18,0)
 I XQUR="" D BACK G ASK
"RTN","XQT2",19,0)
 D DIC^XQ71 I XQY<0 S XQTSV=XQDIC,XQDIC="U"_DUZ D DIC^XQ71
"RTN","XQT2",20,0)
 I XQY<0 S XQDIC=$O(^DIC(19,"B","XUCOMMAND",0)) D DIC^XQ71
"RTN","XQT2",21,0)
 I XQY<0 S XQDIC=XQTSV W " ??",*7 G ASK
"RTN","XQT2",22,0)
 ;
"RTN","XQT2",23,0)
CHK W !!,$P(XQY0,U,2),"     ","(",$P(XQY0,U,1),")  This one? [Y/N] Y// " R %:DTIME S:%="" %="Y" W:(%["?")!("YyNn"'[%) *7,!!,"Please answer 'Y' or 'N'" G:(%["?")!("yYnN"'[%) CHK G:"Yy"'[% ASK
"RTN","XQT2",24,0)
 S XQLI(XQL)=XQY_U_XQDIC_U_XQY0,XQLI(XQL,0)="Entry Action",XQL=XQL+1
"RTN","XQT2",25,0)
 S XQTT=XQTT_$S(XQTF:";",1:"")_XQY,XQTF=1
"RTN","XQT2",26,0)
 I "MQ"[$P(XQY0,U,4) S XQDIC=+XQY,XQAA="Choose one of the "_$P(XQY0,U,2)_" Options: " G ASK
"RTN","XQT2",27,0)
 S XQLI(XQL-1,1)="Exit Action"
"RTN","XQT2",28,0)
 G ASK
"RTN","XQT2",29,0)
 Q
"RTN","XQT2",30,0)
STORE ;Continued in the program ^XQT3
"RTN","XQT2",31,0)
 I XQL=1 W !!,"A menu template that contains only your log-on menu?  Sorry, that's not",!?5,*7,"allowed.  Use '^^' to return to your log-on menu instead." G OUT
"RTN","XQT2",32,0)
 G ^XQT3
"RTN","XQT2",33,0)
 ;
"RTN","XQT2",34,0)
OUT ;Clean up and quit
"RTN","XQT2",35,0)
 I $D(XQTSV) S XQY=+XQTSV,XQDIC=$P(XQTSV,U,2),XQY0=$P(XQTSV,U,3,99)
"RTN","XQT2",36,0)
 I '$D(XQTSV) S XQY=^(^XUTL("XQ",$J,"T")),XQDIC=$P($P(XQY,U),+XQY,2),XQY0=$P(XQY,U,2,99),XQY=+XQY
"RTN","XQT2",37,0)
O1 K D0,DA,DI,DIC,DQ,DR,XQA,XQAA,XQDR,XQH,XQH1,XQH2,XQI,XQJ,XQK,XQL,XQLI,XQLK,XQN,XQNM,XQOO,XQRD,XQRL,XQSAV,XQSN,XQTSV,XQTF,XQTF1,XQTM,XQTRPT,XQTSV,XQTT,XQTXT,XQUR
"RTN","XQT2",38,0)
 Q
"RTN","XQT2",39,0)
 ;
"RTN","XQT2",40,0)
BACK ;Back up to last menu-type option and put it on the stack
"RTN","XQT2",41,0)
 ;S:"MQ"'[$P(XQY0,U,4) XQTF1=1
"RTN","XQT2",42,0)
 I XQL<2!(+XQLI(0)=+XQLI(XQL-1)) W !!,*7,"You can't back up any further!",!!,"Press return to continue...." R %:30 Q
"RTN","XQT2",43,0)
 S XQT1=$P(XQLI(XQL-1),U,2)
"RTN","XQT2",44,0)
 F XQJ=0:1:XQL-1 Q:XQT1=+XQLI(XQJ)
"RTN","XQT2",45,0)
 F XQI=XQJ:-1:0 Q:"MQ"[$P(XQLI(XQI),U,6)
"RTN","XQT2",46,0)
 I XQI=0 S XQLI(XQL-1,1)="Exit Action",XQLI(XQL)=XQLI(0),(XQDIC,XQY)=+XQLI(0),XQY0=$P(XQLI(0),U,3,99),XQL=XQL+1,XQAA="Choose one of the "_$P(XQY0,U,2)_" Options: " Q
"RTN","XQT2",47,0)
 S %=XQLI(XQI),XQY=+%,XQDIC=$P(%,U,2),XQY0=$P(%,U,3,99)
"RTN","XQT2",48,0)
 S XQLI(XQL-1,1)="Exit Action"
"RTN","XQT2",49,0)
 ;S XQLI(XQL)=XQY_U_XQDIC_U_XQY0,XQL=XQL+1,XQDIC=+XQY
"RTN","XQT2",50,0)
 S XQLI(XQL)=XQY_U_XQDIC_U_XQY0,XQL=XQL+1
"RTN","XQT2",51,0)
 ;I XQTF1 F XQJ=XQI-1:-1:0 I "MQ"[$P(XQLI(XQJ),U,6) S (%,XQLI(XQL))=XQLI(XQJ),XQY=+%,XQDIC=$P(%,U,2),XQY0=$P(%,U,3,99),XQLI(XQL-1,1)="Exit action",XQL=XQL+1,XQTF1=0 Q
"RTN","XQT2",52,0)
 I "MQ"[$P(XQY0,U,4) S XQDIC=+XQY S XQAA="Choose one of the "_$P(XQY0,U,2)_" Options: "
"RTN","XQT2",53,0)
 Q
"RTN","XQT3")
0^12^B17316192
"RTN","XQT3",1,0)
XQT3 ;SEA/MJM Create menu templates (cont.);11/20/89  11:12 AM ;08/27/97  14:51
"RTN","XQT3",2,0)
 ;;8.0;KERNEL;**46**;Jul 10, 1995
"RTN","XQT3",3,0)
STORE ;See if this is what the User wants and if so store it
"RTN","XQT3",4,0)
 W @IOF,!,"You have chosen the following options in this order:",!!
"RTN","XQT3",5,0)
 S XQN="" F XQI=0:0 S XQN=$O(XQLI(XQN)) Q:XQN=""  W !,$P(XQLI(XQN),U,4),"    (",$P(XQLI(XQN),U,3),")"
"RTN","XQT3",6,0)
 W !!,"Are we in agreement so far? [Y/N] Y// " R %:DTIME S:%="" %="Y" S:'$T %=U G:%=U OUT I %["?"!("YyNn"'[%) W !!,"Please answer 'Y' or 'N'",*7 H 10 G STORE
"RTN","XQT3",7,0)
 I "Nn"[% W !!,"OK, lets take it from the top...." D O1 H 10 G EN^XQT2
"RTN","XQT3",8,0)
 W @IOF,!!,"Fine.  Since all menu-type options will be processed in the background",!,"  you will only be asked to respond to the following:",!!
"RTN","XQT3",9,0)
 S XQN=0 F XQI=0:0 S XQN=$O(XQLI(XQN)) Q:XQN=""  I "MQ"'[$P(XQLI(XQN),U,6) W !,$P(XQLI(XQN),U,4),"    (",$P(XQLI(XQN),U,3),")"
"RTN","XQT3",10,0)
 W !!,"Are these the functions you want when you invoke this template? [Y/N] Y// " R %:DTIME S:'$T %=U G:%=U OUT S:%="" %="Y" I %["?"!("YyNn"'[%) W !!,*7,"Please answer 'Y' or 'N'" H 10 G STORE
"RTN","XQT3",11,0)
 I "Nn"[% W !!,"OK, lets take it from the top...." D O1 H 10 G EN^XQT2
"RTN","XQT3",12,0)
 ;
"RTN","XQT3",13,0)
NAM ;Get a legitimate name for this template and file it.
"RTN","XQT3",14,0)
 W !!,"Enter a name (6 characters or less in UPPER CASE)",!?5,"for this template or '^' to quit: " R XQUR:DTIME S:'$T XQUR=U G:XQUR=U OUT
"RTN","XQT3",15,0)
 I XQUR["??" S XQH="XQTNAM",XQSAV=XQL D EN^XQH S XQL=XQSAV,XQUR="" G NAM
"RTN","XQT3",16,0)
 I XQUR[U W !!,"A menu template name may not contain the '^' character.",!,"Are you telling me you want to quit? [Y/N] N// " R XQUR:DTIME S:'$T XQUR=U G:XQUR=U OUT S:XQUR="" XQUR="N" I "Nn"[XQUR G NAM
"RTN","XQT3",17,0)
 I XQUR="" W *7," ??" G NAM
"RTN","XQT3",18,0)
 I $L(XQUR)>6 W *7,!!,"Six (6) characters or less, please." G NAM
"RTN","XQT3",19,0)
 I XQUR["?" W !!,"A six character (or less) name like 'LAB', or 'E1',",!," something you will remember." S XQUR="" G NAM
"RTN","XQT3",20,0)
 S XQUP=XQUR I XQUR'?.PUN F XQI=1:1 Q:XQUP?.NUP  S %=$A(XQUP,XQI) I %<123,%>96 S XQUP=$E(XQUP,1,XQI-1)_$C(%-32)_$E(XQUP,XQI+1,255)
"RTN","XQT3",21,0)
 S XQUR=XQUP
"RTN","XQT3",22,0)
 W !!,"'",XQUR,"' it is.  In the future you will start this template by typing '[",XQUR,"'"
"RTN","XQT3",23,0)
 ;
"RTN","XQT3",24,0)
RPT ;Set the default for repeating the template
"RTN","XQT3",25,0)
 W !!,"After you have finished using '",XQUR,"' will you want it to repeat? [Y/N] N// " R %:DTIME S:'$T %=U G:%=U OUT S:%="" %="N"
"RTN","XQT3",26,0)
 I %["?" W !!,?5,"Please answer Yes or No."
"RTN","XQT3",27,0)
 I %["??" S XQH="XQTREPEAT",XQSAV=XQL D EN^XQH S XQL=XQSAV
"RTN","XQT3",28,0)
 G:%["??" RPT
"RTN","XQT3",29,0)
 S XQTRPT=0 I "Yy"[% S XQTRPT=1
"RTN","XQT3",30,0)
 ;
"RTN","XQT3",31,0)
 ;Create the 'DR' strings to load the template into ^VA(200,DUZ,19.8)
"RTN","XQT3",32,0)
 ;
"RTN","XQT3",33,0)
 S XQJ=0,XQDR(0)="1///"_XQTRPT_U
"RTN","XQT3",34,0)
 F XQI=1:1:XQL-1 S:$L(XQDR(XQJ))>200 XQJ=XQJ+1,XQDR(XQJ)="1///+" S XQDR(XQJ)=XQDR(XQJ)_$P(XQLI(XQI),U,1)_","_$P(XQLI(XQI),U,2)_","_$S($D(XQLI(XQI,0)):"E",1:"")_$S($D(XQLI(XQI,1)):"X",1:"")_"^"
"RTN","XQT3",35,0)
 ;
"RTN","XQT3",36,0)
FIL ;File this template in the New Person File
"RTN","XQT3",37,0)
 K DIC,DIE,DR,DA
"RTN","XQT3",38,0)
 S X=XQUR,DA=0,U="^",DA(1)=DUZ,DIC="^VA(200,"_DA(1)_",19.8,",DIC(0)="NFL"
"RTN","XQT3",39,0)
 I '$D(^VA(200,DUZ,19.8,0)) S ^(0)="^200.198^^"
"RTN","XQT3",40,0)
 I $D(^VA(200,DUZ,19.8,"B",X)) W !,"You already have a template called ",X,".  Do you want to replace it? N// " R %:30 S:%="" %="N" S:'$T %=U G:%=U OUT G:"Yy"'[% NAM S DA=$O(^(X,0)),DIK=DIC D ^DIK S X=XQUR
"RTN","XQT3",41,0)
 I '$D(^VA(200,DUZ,19.8,"B",X)) D FILE^DICN
"RTN","XQT3",42,0)
 S DA=$O(^VA(200,DUZ,19.8,"B",X,0))
"RTN","XQT3",43,0)
 S DIE=DIC
"RTN","XQT3",44,0)
 F XQI=0:1:XQJ S DR=XQDR(XQI) D ^DIE
"RTN","XQT3",45,0)
 ;
"RTN","XQT3",46,0)
OUT ;Clean up, restore XQY and quit
"RTN","XQT3",47,0)
 S XQY=+XQTSV,XQDIC=$P(XQTSV,U,2),XQY0=$P(XQTSV,U,3,99)
"RTN","XQT3",48,0)
O1 K %,D0,DA,DI,DIC,DQ,DR,XQA,XQAA,XQDR,XQH,XQH1,XQH2,XQI,XQJ,XQK,XQL,XQLI,XQLK,XQN,XQNM,XQOO,XQRD,XQRL,XQSAV,XQSN,XQTF,XQTF1,XQTM,XQTRPT,XQTSV,XQTT,XQTXT,XQUR
"RTN","XQT3",49,0)
 Q
"RTN","XQT4")
0^13^B24899015
"RTN","XQT4",1,0)
XQT4 ;SEA/MJM - Menu template utilities ;08/27/97  14:52
"RTN","XQT4",2,0)
 ;;8.0;KERNEL;**46**;Jul 10, 1995
"RTN","XQT4",3,0)
 S U="^"
"RTN","XQT4",4,0)
SHO ;Show a user his or her template names
"RTN","XQT4",5,0)
 S XQUSER=$P($P(^VA(200,DUZ,0),U),",",2)_" "_$P($P(^(0),U),",")
"RTN","XQT4",6,0)
 S U="^",(XQI,XQN,XQIT,XQV)=0
"RTN","XQT4",7,0)
 S XQN=$O(^VA(200,DUZ,19.8,"B",XQN)) I XQN="" W !,XQUSER," doesn't have any Templates stored in the New Person File." G KIL
"RTN","XQT4",8,0)
 D HOME^%ZIS:'$D(IOF),^XQDATE
"RTN","XQT4",9,0)
 W @IOF,!,?10,"The menu templates of ",XQUSER," ",%Y S XQV=2
"RTN","XQT4",10,0)
 D SHO1 F XQI=0:0 S XQN=$O(^VA(200,DUZ,19.8,"B",XQN)) Q:XQN=""  D SHO1 Q:XQIT
"RTN","XQT4",11,0)
KIL K %,%1,%2,%Y,XQI,XQLN,XQN,XQIT,XQUSER,XQV
"RTN","XQT4",12,0)
 Q
"RTN","XQT4",13,0)
SHO1 ;Write out template name and the first two options in it
"RTN","XQT4",14,0)
 S XQI=0,XQI=$O(^VA(200,DUZ,19.8,"B",XQN,XQI)),%=^VA(200,DUZ,19.8,XQI,1,1,0),%=$P(%,U,2,999),%1=+$P(%,U,1),%2=+$P(%,U,2)
"RTN","XQT4",15,0)
 I IOST["C-",'$D(ZTQUEUED),XQV+5>21 S XQV=0 D WAIT Q:XQIT  W @IOF
"RTN","XQT4",16,0)
 W !!,"Template name: ",XQN S XQV=XQV+2
"RTN","XQT4",17,0)
 I %1 W !,?3,"1st option: ",$S($D(^DIC(19,%1,0))#2:$P(^(0),U,2),1:"*** Missing Option ***") S XQV=XQV+1
"RTN","XQT4",18,0)
 I %2 W !,?6,"2nd option: ",$S($D(^DIC(19,%2,0))#2:$P(^(0),U,2),1:"*** Missing Option ***") S XQV=XQV+1
"RTN","XQT4",19,0)
 I $L($P(%,U,3)) W !,?9,"Etc." S XQV=XQV+1
"RTN","XQT4",20,0)
 Q
"RTN","XQT4",21,0)
OUT ;Clean up and quit
"RTN","XQT4",22,0)
 S XQY=+XQTSV,XQDIC=$P(XQTSV,U,2),XQY0=$P(XQTSV,U,3,99)
"RTN","XQT4",23,0)
 K %,%1,%2,X,XQ,XQALL,XQE,XQEX,XQI,XQII,XQJ,XQLM,XQN,XQTSV,XQIT,XQUR,Y
"RTN","XQT4",24,0)
 Q
"RTN","XQT4",25,0)
 ;
"RTN","XQT4",26,0)
LIST ;List all of the options in a particular Menu Template
"RTN","XQT4",27,0)
 S U="^",XQTSV=XQY_U_XQDIC_U_XQY0
"RTN","XQT4",28,0)
ASK S (XQALL,XQE,XQIT)=0
"RTN","XQT4",29,0)
 R !!,"Which template? ('^' to quit) ^// ",XQUR:DTIME S:'$T!(XQUR="") XQUR=U G:XQUR=U OUT I XQUR="?" W !!,"  Enter the name of one of your templates, 'ALL' to list them all,",!?5,"or '??' to get a list of all your templates." G ASK
"RTN","XQT4",30,0)
 I XQUR="??" N XQIT D SHO G ASK
"RTN","XQT4",31,0)
 I XQUR="ALL"!(XQUR="all") R !,"Are saying you want to print out all your templates? (Y/N) Y// ",%:DTIME S:'$T %=U S:%="" %="Y" S:"Yy"[% XQALL=1 I %["?" W !,"Please answer 'Y' or 'N' to this question." G ASK
"RTN","XQT4",32,0)
ASKE R !,"Show Entry and Exit Actions? (Y/N) N// ",%:DTIME S:'$T %=U G:%=U OUT S:%="" %="N" S:"Yy"[% XQE=1
"RTN","XQT4",33,0)
 I 'XQE,"YyNn"'[% W !!,"'Y' means you'll see the MUMPS code (if any) executed",!?3,"before and after the option is run.  'N' means you won't" G ASKE
"RTN","XQT4",34,0)
 I XQALL S XQUR="" F XQII=0:0 S XQUR=$O(^VA(200,DUZ,19.8,"B",XQUR)) Q:XQUR=""  D DEED,WAIT Q:XQIT
"RTN","XQT4",35,0)
 G:XQALL OUT
"RTN","XQT4",36,0)
 D FIND^XQT G:XQK ASK D DEED
"RTN","XQT4",37,0)
 G ASK
"RTN","XQT4",38,0)
 Q
"RTN","XQT4",39,0)
DEED ;Decode the word processing field where templates are stored
"RTN","XQT4",40,0)
 S XQN=$O(^VA(200,DUZ,19.8,"B",XQUR,0)),XQJ=$P(^VA(200,DUZ,19.8,XQN,1,0),U,3)
"RTN","XQT4",41,0)
 W @IOF,!?20,"Menu Template ",XQUR,!! S XQV=3,XQLM=1
"RTN","XQT4",42,0)
 F XQI=1:1:XQJ S %=^VA(200,DUZ,19.8,XQN,1,XQI,0),%=$P(%,U,2,999) F XQK=1:1 S XQ=$P(%,U,XQK) Q:XQ=""  S XQY=+XQ,XQEX=$P(XQ,",",3),XQY0=$S($D(^DIC(19,+XQY,0))#2:^(0),1:"") D WRITE Q:XQIT  S XQLM=XQLM+1
"RTN","XQT4",43,0)
 Q
"RTN","XQT4",44,0)
 ;
"RTN","XQT4",45,0)
WRITE ;Write the Entry Action, Menu text, and Exit Action for an option
"RTN","XQT4",46,0)
 I XQE,$P(XQY0,U,14) W !?XQLM,"Entry Action: ",^DIC(19,+XQY,20) S XQV=XQV+1
"RTN","XQT4",47,0)
 I XQE,$P(XQY0,U,17) W !?XQLM,"Header: ",^DIC(19,+XQY,26) S XQV=XQV+1
"RTN","XQT4",48,0)
 I XQY0]"" W !?XQLM,$P(XQY0,U,2)_"   ("_$P(XQY0,U)_")" S XQV=XQV+1
"RTN","XQT4",49,0)
 E  W !!?XQLM,"*** Fatal Error *** Option missing from Option File ***",!?XQLM,"This template will not run.  Delete and/or rebuild it." S XQIT=1 Q
"RTN","XQT4",50,0)
 I XQE,$P(XQY0,U,15) W !?XQLM,"Exit Action: ",^DIC(19,+XQY,15) S XQV=XQV+1
"RTN","XQT4",51,0)
 I XQV>20,IOST["C-" D WAIT Q:XQIT  W @IOF,?10,"Template ",XQUR," continued..." S XQV=1
"RTN","XQT4",52,0)
 Q
"RTN","XQT4",53,0)
 ;
"RTN","XQT4",54,0)
WAIT ;That's a screen load hold it here for a minute
"RTN","XQT4",55,0)
 S XQIT=0 W !!,"Hit RETURN to continue, '^' to quit: " S X="" R X:DTIME S:'$T X=U S:X=U XQIT=1 S XQLM=1
"RTN","XQT4",56,0)
 Q
"RTN","XQT4",57,0)
 ;
"RTN","XQT4",58,0)
KILL ;Remove a template from the New Person File
"RTN","XQT4",59,0)
 S U="^"
"RTN","XQT4",60,0)
 R !!,"Which template should be deleted ? ",XQUR:DTIME S:'$T XQUR=U Q:XQUR=U  I XQUR="?" W !,"Enter a template name, '??' to get a list of your templates",!,"  or '^' to quit." G KILL
"RTN","XQT4",61,0)
 I XQUR["??" D SHO W !! G KILL
"RTN","XQT4",62,0)
 D FIND^XQT I XQK K XQ,XQI,XQJ,XQK Q
"RTN","XQT4",63,0)
K1 W !,"I will remove the Menu Template ",XQUR," permanently.  OK? (Y/N) N// " R %:DTIME S:'$T %=U S:%="" %="N" G:%=U K2 G:"Nn"[% KILL I "Yy"'[% W !,"Please answer 'Y' or 'N' or '^' to quit." G K1
"RTN","XQT4",64,0)
 S DA=$O(^VA(200,DUZ,19.8,"B",XQUR,0)),DA(1)=DUZ,DIK="^VA(200,"_DA(1)_",19.8," D ^DIK
"RTN","XQT4",65,0)
K2 K DA,DIK,XQ,XQI,XQJ,XQK
"RTN","XQT4",66,0)
 Q
"RTN","XQT4",67,0)
 ;
"RTN","XQT4",68,0)
RNAM ;Rename an exsisting Menu Template
"RTN","XQT4",69,0)
 S U="^",DA(1)=DUZ,DIC="^VA(200,"_DA(1)_",19.8,",DIC("P")=200.198,DIC(0)="AEQM",DIC("A")="Rename which template? " D ^DIC I Y<0 K %,%Y,CD,DA,DIC,FUN Q
"RTN","XQT4",70,0)
 S DIE=DIC,DIE("P")=DIC("P"),DA=+Y,DR=".01" D ^DIE
"RTN","XQT4",71,0)
 K CD,D,D0,DA,DI,DIC,DIE,DISYS,DR,DQ,FUN
"RTN","XQT4",72,0)
 Q
"RTN","XQUIT")
0^16^B16679426
"RTN","XQUIT",1,0)
XQUIT ;SEA/LUKE - Jump Utilities (Part II)  ;05/08/98  10:01
"RTN","XQUIT",2,0)
 ;;8.0;KERNEL;**46**;Jul 10, 1995
"RTN","XQUIT",3,0)
 ;XQUIT has been set in an entry action
"RTN","XQUIT",4,0)
 ;
"RTN","XQUIT",5,0)
 I $D(XQRB) D RB Q  ;Rubber band target set the XQUIT
"RTN","XQUIT",6,0)
 ;
"RTN","XQUIT",7,0)
 N %,XQFLAG,XQI,XQJ,XQOP,XQOPQT,XQX
"RTN","XQUIT",8,0)
 S XQX=0 ;Set to 1 if XQUIT EXECUTABLE field is executed
"RTN","XQUIT",9,0)
 ;
"RTN","XQUIT",10,0)
 S XQOPQT=$S($D(XQD):XQD,1:XQY) ;XQY if this is not a jump or jump is completed
"RTN","XQUIT",11,0)
 ;
"RTN","XQUIT",12,0)
 ;See if there is anything in the XQUIT XECUTABLE field
"RTN","XQUIT",13,0)
 D X
"RTN","XQUIT",14,0)
 Q:'$D(XQUIT)  ;XQUIT cleared, we're done here
"RTN","XQUIT",15,0)
 ;
"RTN","XQUIT",16,0)
 ;Print the message unless the XQUIT EXECUTABLE field is filled in
"RTN","XQUIT",17,0)
 I 'XQX D MESS
"RTN","XQUIT",18,0)
 ;
"RTN","XQUIT",19,0)
 ;Single step, no stack resetting is necessary
"RTN","XQUIT",20,0)
 I $S('$D(XQJMP):0,XQJMP=1:0,(+XQSV=+^XUTL("XQ",$J,^XUTL("XQ",$J,"T"))):1,1:0) D
"RTN","XQUIT",21,0)
 .S XQY=+XQSV,XQDIC=$P(XQSV,U,2),XQY0=$P(XQSV,U,3,99)
"RTN","XQUIT",22,0)
 .S XQT=$P(XQY0,U,4)
"RTN","XQUIT",23,0)
 .K XQJMP,XQNO,XQOPQT,XQTT,XQUIT,XQUR,Y
"RTN","XQUIT",24,0)
 .Q
"RTN","XQUIT",25,0)
 Q:'$D(XQUIT)
"RTN","XQUIT",26,0)
 ;
"RTN","XQUIT",27,0)
 ;
"RTN","XQUIT",28,0)
RESET ;Reset the stack to what it should be
"RTN","XQUIT",29,0)
 S XQY=+XQSV,XQDIC=$P(XQSV,U,2),XQY0=$P(XQSV,U,3,99)
"RTN","XQUIT",30,0)
 S XQT1=$S($D(XQTT):XQTT,1:^XUTL("XQ",$J,"T"))
"RTN","XQUIT",31,0)
 ;
"RTN","XQUIT",32,0)
 ;Regular "^" jumps
"RTN","XQUIT",33,0)
 ;Remove the new stuff we have put on the stack.
"RTN","XQUIT",34,0)
 ;
"RTN","XQUIT",35,0)
 D
"RTN","XQUIT",36,0)
 .S %=^XUTL("XQ",$J,XQT1) I $P(%,U,18),$D(^DIC(19,+%,26)),$L(^(26)) X ^(26) ;W "  ==> ^XQUIT"
"RTN","XQUIT",37,0)
 .I $D(XQONSTK),$L(XQONSTK) F XQI=1:1 S %=$P(XQONSTK,U,XQI) Q:%=""  D POP^XQ72(%)
"RTN","XQUIT",38,0)
 .Q
"RTN","XQUIT",39,0)
 ;.;Restore the old stack as it was.
"RTN","XQUIT",40,0)
 ;.F XQI=1:1:XQT S %=$G(XQOLDSTK(XQI)) Q:%=""  D
"RTN","XQUIT",41,0)
 ;..Q:^XUTL("XQ",$J,XQI)=%
"RTN","XQUIT",42,0)
 ;..S ^XUTL("XQ",$J,XQI)=XQOLDSTK(XQI),XQTT=XQTT+1
"RTN","XQUIT",43,0)
 ;..Q
"RTN","XQUIT",44,0)
 ;.Q
"RTN","XQUIT",45,0)
 ;
"RTN","XQUIT",46,0)
 ;Reset the stack pointer
"RTN","XQUIT",47,0)
 I '$D(XQTT) S XQTT=^XUTL("XQ",$J,"T") ;We haven't been to POP^XQ72
"RTN","XQUIT",48,0)
 S ^XUTL("XQ",$J,"T")=$S(XQTT>1:XQTT,1:1)
"RTN","XQUIT",49,0)
 S XQT=$P(XQY0,U,4) ;Reset Option Type
"RTN","XQUIT",50,0)
 ;
"RTN","XQUIT",51,0)
 K XQJMP,XQONSTK,XQOPQT,XQSVSTK,XQTT,XQUR,Y
"RTN","XQUIT",52,0)
 Q
"RTN","XQUIT",53,0)
 ;
"RTN","XQUIT",54,0)
 ;
"RTN","XQUIT",55,0)
RB ;Come here from ^XQ73 for Rubber Band jumps
"RTN","XQUIT",56,0)
 N %,XQOPQT,XQI,XQX
"RTN","XQUIT",57,0)
 S XQX=0 ;Flag that tells us if XQUIT EXECUTABLE is executed (XQX=1)
"RTN","XQUIT",58,0)
 S XQOPQT=$S($D(XQYY):XQYY,1:XQY) ;The option where XQUIT was born
"RTN","XQUIT",59,0)
 D X Q:'$D(XQUIT)  ;Stop if the application cleared the XQUIT
"RTN","XQUIT",60,0)
 D:'XQX MESS ;Tell the user what's going on
"RTN","XQUIT",61,0)
 ;
"RTN","XQUIT",62,0)
 I $D(^XUTL("XQ",$J,"RBX")) D  ;Unwind the jump
"RTN","XQUIT",63,0)
 .S %=0 F  S %=$O(^XUTL("XQ",$J,"RBX",%)) Q:%=""  X ^(%)
"RTN","XQUIT",64,0)
 .K ^XUTL("XQ",$J,"RBX"),XQRB
"RTN","XQUIT",65,0)
 .Q
"RTN","XQUIT",66,0)
 ;
"RTN","XQUIT",67,0)
 ;Reload the option we came from, and execute it's header. Quit.
"RTN","XQUIT",68,0)
 I ^XUTL("XQ",$J,^XUTL("XQ",$J,"T"))=-1 S (XQTT,^XUTL("XQ",$J,"T"))=$S(^("T")>1:^("T")-1,1:1)
"RTN","XQUIT",69,0)
 ;F XQI=XQTT:-1:1 S %=^XUTL("XQ",$J,XQI) Q:%=-1  S (^XUTL("XQ",$J,"T"),XQTT)=$S(%>0:%,1:1)
"RTN","XQUIT",70,0)
 S XQY=+XQSV,XQDIC=$P(XQSV,U,2),XQY0=$P(XQSV,U,3,99)
"RTN","XQUIT",71,0)
 S XQT=$P(XQY0,U,4)
"RTN","XQUIT",72,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26)
"RTN","XQUIT",73,0)
 Q
"RTN","XQUIT",74,0)
 ;
"RTN","XQUIT",75,0)
 ;
"RTN","XQUIT",76,0)
T ;Come here from XQT1+14 & 33 if a template finds XQUIT while executing
"RTN","XQUIT",77,0)
 D X
"RTN","XQUIT",78,0)
 Q:'$D(XQUIT)
"RTN","XQUIT",79,0)
 ;I 'XQX D MESS
"RTN","XQUIT",80,0)
 Q
"RTN","XQUIT",81,0)
 ;
"RTN","XQUIT",82,0)
PM ;Come here from XQ12 if XQUIT is encounter at logon in a primary menu
"RTN","XQUIT",83,0)
 N XQOPQT,XQX
"RTN","XQUIT",84,0)
 S XQX=0
"RTN","XQUIT",85,0)
 S XQOPQT=XQY
"RTN","XQUIT",86,0)
 D X
"RTN","XQUIT",87,0)
 Q:'$D(XQUIT)
"RTN","XQUIT",88,0)
 I 'XQX D
"RTN","XQUIT",89,0)
 .I $D(^DIC(19,+XQY,21)),$P(^(21,0),U,3)>0 D DISPLAY^XQUTL
"RTN","XQUIT",90,0)
 .E  D
"RTN","XQUIT",91,0)
 ..W !!,"  **> Sorry, access to your primary menu has been denied by the application.",!?6,"An XQUIT was encountered in the Entry Action code.",!?6,"Please see your computer person."
"RTN","XQUIT",92,0)
 ..D HOLD^XQUTL
"RTN","XQUIT",93,0)
 ..Q
"RTN","XQUIT",94,0)
 .Q
"RTN","XQUIT",95,0)
 Q
"RTN","XQUIT",96,0)
 ;
"RTN","XQUIT",97,0)
 ;
"RTN","XQUIT",98,0)
 ;  ***** Subroutines ****
"RTN","XQUIT",99,0)
 ;
"RTN","XQUIT",100,0)
MESS ;Tell the user what's going on unless we executed XQUIT EXECUTABLE field
"RTN","XQUIT",101,0)
 I 'XQX D
"RTN","XQUIT",102,0)
 .I '$D(XQNO) S XQNO=$P(XQY0,U,2)
"RTN","XQUIT",103,0)
 .;
"RTN","XQUIT",104,0)
 .I $D(^DIC(19,XQOPQT,21)),$P(^(21,0),U,3)>0 D DISPLAY^XQUTL
"RTN","XQUIT",105,0)
 .E  D
"RTN","XQUIT",106,0)
 ..W !!,"  **> Sorry, access to this option has been denied by the application.",!!?7,"The variable XQUIT was encountered at the option",!?7,"'",XQNO,"'.",!?7,"You are being returned to:",!?7,"'",$P(XQSV,U,4),"'",!
"RTN","XQUIT",107,0)
 ..D HOLD^XQUTL
"RTN","XQUIT",108,0)
 ..Q
"RTN","XQUIT",109,0)
 .Q
"RTN","XQUIT",110,0)
 Q
"RTN","XQUIT",111,0)
 ;
"RTN","XQUIT",112,0)
X ;If there is something in the XQUIT EXECUTABLE field, execute it.
"RTN","XQUIT",113,0)
 I '$D(XQOPQT) S XQOPQT=XQY
"RTN","XQUIT",114,0)
 I $D(^DIC(19,XQOPQT,22)),$L(^(22)) X ^(22) S XQX=1
"RTN","XQUIT",115,0)
 Q
"RTN","XQUTL")
0^18^B9109859
"RTN","XQUTL",1,0)
XQUTL ;SEA/Luke - Menu System Utilities ;04/27/98  12:36
"RTN","XQUTL",2,0)
 ;;8.0;KERNEL;**46**;Jul 10, 1995
"RTN","XQUTL",3,0)
 ;
"RTN","XQUTL",4,0)
CSYN(XQUSR) ;Collect XQUSR's menu synonyms in ^XUTL("XQ",$J,"SYN")
"RTN","XQUTL",5,0)
 N %,XQSYN
"RTN","XQUTL",6,0)
 S (XQI,XQSOP,%)=0
"RTN","XQUTL",7,0)
 S XQSOP=$O(^VA(200,XQUSR,203,XQSOP)) Q:XQSOP=""  I $L($P(^(XQSOP,0),U,2)) S X=^(0) D
"RTN","XQUTL",8,0)
 .S ^XUTL("XQ",XQUSR,"SYN",$P(X,U,2))=+X_"^"_$P(^DIC(19,+X,0),U,2)
"RTN","XQUTL",9,0)
 .;W !?5,$P(X,U,2),?10,^XUTL("XQ",XQUSR,"SYN",$P(X,U,2))
"RTN","XQUTL",10,0)
 .Q
"RTN","XQUTL",11,0)
 Q
"RTN","XQUTL",12,0)
 ;
"RTN","XQUTL",13,0)
 ;
"RTN","XQUTL",14,0)
PSYN(XQUSR) ;Print XQUSR's collected synonyms
"RTN","XQUTL",15,0)
 N %
"RTN","XQUTL",16,0)
 I '$D(^XUTL("XQ",XQUSR,"SYN")) D CSYN(XQUSR)
"RTN","XQUTL",17,0)
 I '$D(^XUTL("XQ",XQUSR,"SYN")) W !?5,$P(^VA(200,XQUSR,0),",",2)_" "_$P(^(0),",")," has no synonyms defined.",! Q
"RTN","XQUTL",18,0)
 S %="" F  S %=$O(^XUTL("XQ",XQUSR,"SYN",%)) Q:%=""  W !?5,%,?12,$P(^(%),U,2)
"RTN","XQUTL",19,0)
 Q
"RTN","XQUTL",20,0)
 ;
"RTN","XQUTL",21,0)
 ;
"RTN","XQUTL",22,0)
KSNY ;Kill off all ^XUTL("XQ",duz,"SYN") nodes
"RTN","XQUTL",23,0)
 N %
"RTN","XQUTL",24,0)
 S %=0 F  S %=$O(^XUTL("XQ",%)) Q:%=""  K ^(%,"SYN")
"RTN","XQUTL",25,0)
 Q
"RTN","XQUTL",26,0)
 ;
"RTN","XQUTL",27,0)
 ;
"RTN","XQUTL",28,0)
DISPLAY ;Display the XQUIT MESSAGE field of the Option File
"RTN","XQUTL",29,0)
 I '$D(XQD) S XQD=XQY
"RTN","XQUTL",30,0)
 I $D(^DIC(19,XQD,21)) D
"RTN","XQUTL",31,0)
 .S XQIEN=XQD_","
"RTN","XQUTL",32,0)
 .S %=$$GET1^DIQ(19,XQIEN,21,"","XQUT")
"RTN","XQUTL",33,0)
 .D PRINT(.XQUT)
"RTN","XQUTL",34,0)
 .K XQUT
"RTN","XQUTL",35,0)
 .Q
"RTN","XQUTL",36,0)
 Q
"RTN","XQUTL",37,0)
 ;
"RTN","XQUTL",38,0)
PRINT(XQUT) ;Print out the array XQUT()
"RTN","XQUTL",39,0)
 N %,XQLN,XQNL,XQSL
"RTN","XQUTL",40,0)
 ;
"RTN","XQUTL",41,0)
 I '$D(IOSL)#2 S IOP="HOME" D ^%ZIS
"RTN","XQUTL",42,0)
 I '$D(IOSL)!('$L(IOSL)) S IOSL=20
"RTN","XQUTL",43,0)
 S XQSL=IOSL-3
"RTN","XQUTL",44,0)
 ;
"RTN","XQUTL",45,0)
 I '$D(IOM)#2 S IOP="HOME" D ^%ZIS
"RTN","XQUTL",46,0)
 I '$D(IOM)!('$L(IOM)) S IOM=80
"RTN","XQUTL",47,0)
 ;
"RTN","XQUTL",48,0)
 ;Count the lines and remove the tabs
"RTN","XQUTL",49,0)
 S XQNL=0
"RTN","XQUTL",50,0)
 F %=0:1 S XQLINE=$O(XQUT(%)) Q:XQLINE=""  D
"RTN","XQUTL",51,0)
 .S XQNL=XQNL+1
"RTN","XQUTL",52,0)
 .I XQUT(XQLINE)["|TAB|" D
"RTN","XQUTL",53,0)
 ..N T,L,X S T="|TAB|",L=XQUT(XQLINE),X=""
"RTN","XQUTL",54,0)
 ..F  S X=$P(L,T)_"     "_$P(L,T,2,99) Q:X'[T
"RTN","XQUTL",55,0)
 ..S XQUT(XQLINE)=X
"RTN","XQUTL",56,0)
 ..Q
"RTN","XQUTL",57,0)
 .Q
"RTN","XQUTL",58,0)
 ;
"RTN","XQUTL",59,0)
RESTART ;Write the lines of text to the screen
"RTN","XQUTL",60,0)
 S XQLINE=0
"RTN","XQUTL",61,0)
 I $D(IOF) W @IOF
"RTN","XQUTL",62,0)
 F %=1:1:XQNL Q:$D(XQEXIT)  D
"RTN","XQUTL",63,0)
 .S XQLINE=XQLINE+1
"RTN","XQUTL",64,0)
 .S:$L(XQUT(%))>IOM XQLINE=XQLINE+1
"RTN","XQUTL",65,0)
 .W !,XQUT(%) I XQLINE'<XQSL D
"RTN","XQUTL",66,0)
 ..D PAUSE(.XQSL)
"RTN","XQUTL",67,0)
 ..S XQLINE=0
"RTN","XQUTL",68,0)
 ..I $D(IOF) W @IOF
"RTN","XQUTL",69,0)
 ..Q
"RTN","XQUTL",70,0)
 .Q
"RTN","XQUTL",71,0)
 ;
"RTN","XQUTL",72,0)
 I '$D(XQEXIT) D
"RTN","XQUTL",73,0)
 .I XQLINE<XQSL-1 D
"RTN","XQUTL",74,0)
 ..W !!,"**> END OF MESSAGE"
"RTN","XQUTL",75,0)
 ..D PAUSE(.XQSL)
"RTN","XQUTL",76,0)
 ..Q
"RTN","XQUTL",77,0)
 .E  D PAUSE(.XQSL)
"RTN","XQUTL",78,0)
 .Q
"RTN","XQUTL",79,0)
 ;
"RTN","XQUTL",80,0)
 I $D(XQREST) K XQEXIT,XQREST G RESTART
"RTN","XQUTL",81,0)
 K XQEXIT,XQREST
"RTN","XQUTL",82,0)
 Q
"RTN","XQUTL",83,0)
 ;
"RTN","XQUTL",84,0)
PAUSE(XQSL) ;Pause after a screen load and allow the adjustment of XQSL
"RTN","XQUTL",85,0)
 N XQUR
"RTN","XQUTL",86,0)
 ;W !!,"     *****> XQSL = ",XQSL,"    XQLN = ",XQNL
"RTN","XQUTL",87,0)
 R !!,"RETURN to continue, ""^"" to halt, ""B"" to backup, or ""?"" for more options: ",XQUR:DTIME S:'$T XQUR=U
"RTN","XQUTL",88,0)
 I $E(XQUR,1)="?" S XQH=785 D EN^XQH S (XQREST,XQEXIT)=1
"RTN","XQUTL",89,0)
 I XQUR]"","+-"[$E(XQUR,1) S XQSL=XQSL+XQUR S (XQREST,XQEXIT)=""
"RTN","XQUTL",90,0)
 I XQUR]"","bB"[$E(XQUR,1) S (XQREST,XQEXIT)=1
"RTN","XQUTL",91,0)
 I XQUR=U S XQEXIT=""
"RTN","XQUTL",92,0)
 Q
"RTN","XQUTL",93,0)
 ;
"RTN","XQUTL",94,0)
HOLD ;Just hold the screen from moving until a RETURN is typed
"RTN","XQUTL",95,0)
 N %
"RTN","XQUTL",96,0)
 I $D(IOM) S %=(IOM-42)/2 S:(%'>1) %=1
"RTN","XQUTL",97,0)
 E  S %=1
"RTN","XQUTL",98,0)
 R !!?%,"Hit the ""Enter"" or ""Return"" Key to Continue",%:DTIME
"RTN","XQUTL",99,0)
 W !
"RTN","XQUTL",100,0)
 Q
"SEC","^DIC",19.8,19.8,0,"AUDIT")
@
"SEC","^DIC",19.8,19.8,0,"DD")
@
"SEC","^DIC",19.8,19.8,0,"DEL")
@
"SEC","^DIC",19.8,19.8,0,"LAYGO")
@
"SEC","^DIC",19.8,19.8,0,"RD")
@
"SEC","^DIC",19.8,19.8,0,"WR")
@
"VER")
8^21.0
"^DD",19.8,19.8,0)
FIELD^^1^2
"^DD",19.8,19.8,0,"DT")
2980128
"^DD",19.8,19.8,0,"IX","B",19.8,.01)
 
"^DD",19.8,19.8,0,"NM","MENUMAN QUICK HELP")
 
"^DD",19.8,19.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",19.8,19.8,.01,1,0)
^.1
"^DD",19.8,19.8,.01,1,1,0)
19.8^B
"^DD",19.8,19.8,.01,1,1,1)
S ^DIC(19.8,"B",$E(X,1,30),DA)=""
"^DD",19.8,19.8,.01,1,1,2)
K ^DIC(19.8,"B",$E(X,1,30),DA)
"^DD",19.8,19.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",19.8,19.8,1,0)
HELP TEXT^19.81^^1;0
"^DD",19.8,19.81,0)
HELP TEXT SUB-FIELD^^.01^1
"^DD",19.8,19.81,0,"DT")
2980128
"^DD",19.8,19.81,0,"NM","HELP TEXT")
 
"^DD",19.8,19.81,0,"UP")
19.8
"^DD",19.8,19.81,.01,0)
HELP TEXT^WL^^0;1^Q
"^DD",19.8,19.81,.01,3)
Please the name
"^DD",19.8,19.81,.01,21,0)
^^2^2^2980128^
"^DD",19.8,19.81,.01,21,1,0)
    This is the name of the option.
"^DD",19.8,19.81,.01,21,2,0)
Please respect the namespace rules.
"^DD",19.8,19.81,.01,"DT")
2980128
"^DIC",19.8,19.8,0)
MENUMAN QUICK HELP^19.8
"^DIC",19.8,19.8,0,"GL")
^DIC(19.8,
"^DIC",19.8,"B","MENUMAN QUICK HELP",19.8)
 
**END**
**END**
