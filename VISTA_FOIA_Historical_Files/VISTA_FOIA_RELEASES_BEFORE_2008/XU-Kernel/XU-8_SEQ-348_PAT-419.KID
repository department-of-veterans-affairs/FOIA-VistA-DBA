Released XU*8*419 SEQ #348
Extracted from mail message
**KIDS**:XU*8.0*419^

**INSTALL NAME**
XU*8.0*419
"BLD",943,0)
XU*8.0*419^KERNEL^0^3060906^y
"BLD",943,1,0)
^^2^2^3060906^^
"BLD",943,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",943,1,2,0)
XU*8*419  C&A Remediation by pre-expiring new verify code.
"BLD",943,4,0)
^9.64PA^8989.3^2
"BLD",943,4,200,0)
200
"BLD",943,4,200,2,0)
^9.641^200^1
"BLD",943,4,200,2,200,0)
NEW PERSON  (File-top level)
"BLD",943,4,200,2,200,1,0)
^9.6411^11^1
"BLD",943,4,200,2,200,1,11,0)
VERIFY CODE
"BLD",943,4,200,222)
y^n^p^^^^n^^n
"BLD",943,4,200,224)

"BLD",943,4,8989.3,0)
8989.3
"BLD",943,4,8989.3,2,0)
^9.641^8989.3^1
"BLD",943,4,8989.3,2,8989.3,0)
KERNEL SYSTEM PARAMETERS  (File-top level)
"BLD",943,4,8989.3,2,8989.3,1,0)
^9.6411^11.2^1
"BLD",943,4,8989.3,2,8989.3,1,11.2,0)
AUTO-GENERATE VERIFY CODES
"BLD",943,4,8989.3,222)
y^y^p^^^^n^^n
"BLD",943,4,8989.3,224)

"BLD",943,4,"APDD",200,200)

"BLD",943,4,"APDD",200,200,11)

"BLD",943,4,"APDD",8989.3,8989.3)

"BLD",943,4,"APDD",8989.3,8989.3,11.2)

"BLD",943,4,"B",200,200)

"BLD",943,4,"B",8989.3,8989.3)

"BLD",943,6.3)
5
"BLD",943,"KRN",0)
^9.67PA^8989.52^19
"BLD",943,"KRN",.4,0)
.4
"BLD",943,"KRN",.401,0)
.401
"BLD",943,"KRN",.402,0)
.402
"BLD",943,"KRN",.403,0)
.403
"BLD",943,"KRN",.403,"NM",0)
^9.68A^4^4
"BLD",943,"KRN",.403,"NM",1,0)
XUEXISTING USER    FILE #200^200^0
"BLD",943,"KRN",.403,"NM",2,0)
XUNEW USER    FILE #200^200^0
"BLD",943,"KRN",.403,"NM",3,0)
XUREACT USER    FILE #200^200^0
"BLD",943,"KRN",.403,"NM",4,0)
XUSITEPARM    FILE #8989.3^8989.3^0
"BLD",943,"KRN",.403,"NM","B","XUEXISTING USER    FILE #200",1)

"BLD",943,"KRN",.403,"NM","B","XUNEW USER    FILE #200",2)

"BLD",943,"KRN",.403,"NM","B","XUREACT USER    FILE #200",3)

"BLD",943,"KRN",.403,"NM","B","XUSITEPARM    FILE #8989.3",4)

"BLD",943,"KRN",.5,0)
.5
"BLD",943,"KRN",.84,0)
.84
"BLD",943,"KRN",.84,"NM",0)
^9.68A^2^2
"BLD",943,"KRN",.84,"NM",1,0)
30810.21^^0
"BLD",943,"KRN",.84,"NM",2,0)
30810.45^^0
"BLD",943,"KRN",.84,"NM","B",30810.21,1)

"BLD",943,"KRN",.84,"NM","B",30810.45,2)

"BLD",943,"KRN",3.6,0)
3.6
"BLD",943,"KRN",3.8,0)
3.8
"BLD",943,"KRN",9.2,0)
9.2
"BLD",943,"KRN",9.2,"NM",0)
^9.68A^1^1
"BLD",943,"KRN",9.2,"NM",1,0)
XUSER COMPUTER ACCOUNT^^0
"BLD",943,"KRN",9.2,"NM","B","XUSER COMPUTER ACCOUNT",1)

"BLD",943,"KRN",9.8,0)
9.8
"BLD",943,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",943,"KRN",9.8,"NM",1,0)
XUSERBLK^^0^B39902231
"BLD",943,"KRN",9.8,"NM",2,0)
XUS2^^0^B47237337
"BLD",943,"KRN",9.8,"NM",3,0)
XUSERNEW^^0^B21302863
"BLD",943,"KRN",9.8,"NM",4,0)
XUS^^0^B30134409
"BLD",943,"KRN",9.8,"NM",5,0)
XUS3^^0^B18943733
"BLD",943,"KRN",9.8,"NM",6,0)
XUS1^^0^B25338963
"BLD",943,"KRN",9.8,"NM",7,0)
XUSRB4^^0^B11538181
"BLD",943,"KRN",9.8,"NM",8,0)
XUSTZIP^^0^B25405099
"BLD",943,"KRN",9.8,"NM",9,0)
ZUONT^^0^B4589154
"BLD",943,"KRN",9.8,"NM",10,0)
ZUGTM^^0^B7793985
"BLD",943,"KRN",9.8,"NM","B","XUS",4)

"BLD",943,"KRN",9.8,"NM","B","XUS1",6)

"BLD",943,"KRN",9.8,"NM","B","XUS2",2)

"BLD",943,"KRN",9.8,"NM","B","XUS3",5)

"BLD",943,"KRN",9.8,"NM","B","XUSERBLK",1)

"BLD",943,"KRN",9.8,"NM","B","XUSERNEW",3)

"BLD",943,"KRN",9.8,"NM","B","XUSRB4",7)

"BLD",943,"KRN",9.8,"NM","B","XUSTZIP",8)

"BLD",943,"KRN",9.8,"NM","B","ZUGTM",10)

"BLD",943,"KRN",9.8,"NM","B","ZUONT",9)

"BLD",943,"KRN",19,0)
19
"BLD",943,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",943,"KRN",19,"NM",1,0)
XU NOP MENU^^0
"BLD",943,"KRN",19,"NM","B","XU NOP MENU",1)

"BLD",943,"KRN",19.1,0)
19.1
"BLD",943,"KRN",101,0)
101
"BLD",943,"KRN",409.61,0)
409.61
"BLD",943,"KRN",771,0)
771
"BLD",943,"KRN",870,0)
870
"BLD",943,"KRN",8989.51,0)
8989.51
"BLD",943,"KRN",8989.52,0)
8989.52
"BLD",943,"KRN",8994,0)
8994
"BLD",943,"KRN","B",.4,.4)

"BLD",943,"KRN","B",.401,.401)

"BLD",943,"KRN","B",.402,.402)

"BLD",943,"KRN","B",.403,.403)

"BLD",943,"KRN","B",.5,.5)

"BLD",943,"KRN","B",.84,.84)

"BLD",943,"KRN","B",3.6,3.6)

"BLD",943,"KRN","B",3.8,3.8)

"BLD",943,"KRN","B",9.2,9.2)

"BLD",943,"KRN","B",9.8,9.8)

"BLD",943,"KRN","B",19,19)

"BLD",943,"KRN","B",19.1,19.1)

"BLD",943,"KRN","B",101,101)

"BLD",943,"KRN","B",409.61,409.61)

"BLD",943,"KRN","B",771,771)

"BLD",943,"KRN","B",870,870)

"BLD",943,"KRN","B",8989.51,8989.51)

"BLD",943,"KRN","B",8989.52,8989.52)

"BLD",943,"KRN","B",8994,8994)

"BLD",943,"QUES",0)
^9.62^^
"BLD",943,"REQB",0)
^9.611^5^5
"BLD",943,"REQB",1,0)
XU*8.0*225^2
"BLD",943,"REQB",2,0)
XU*8.0*275^2
"BLD",943,"REQB",3,0)
XU*8.0*289^2
"BLD",943,"REQB",4,0)
XU*8.0*351^2
"BLD",943,"REQB",5,0)
XU*8.0*395^2
"BLD",943,"REQB","B","XU*8.0*225",1)

"BLD",943,"REQB","B","XU*8.0*275",2)

"BLD",943,"REQB","B","XU*8.0*289",3)

"BLD",943,"REQB","B","XU*8.0*351",4)

"BLD",943,"REQB","B","XU*8.0*395",5)

"FIA",200)
NEW PERSON
"FIA",200,0)
^VA(200,
"FIA",200,0,0)
200I
"FIA",200,0,1)
y^n^p^^^^n^^n
"FIA",200,0,10)

"FIA",200,0,11)

"FIA",200,0,"RLRO")

"FIA",200,0,"VR")
8.0^XU
"FIA",200,200)
1
"FIA",200,200,11)

"FIA",8989.3)
KERNEL SYSTEM PARAMETERS
"FIA",8989.3,0)
^XTV(8989.3,
"FIA",8989.3,0,0)
8989.3P
"FIA",8989.3,0,1)
y^y^p^^^^n^^n
"FIA",8989.3,0,10)

"FIA",8989.3,0,11)

"FIA",8989.3,0,"RLRO")

"FIA",8989.3,0,"VR")
8.0^XU
"FIA",8989.3,8989.3)
1
"FIA",8989.3,8989.3,11.2)

"KRN",.403,3,-1)
0^1
"KRN",.403,3,0)
XUEXISTING USER^^^^2920804^^^200^0^0^1
"KRN",.403,3,2)
1;33
"KRN",.403,3,11)
S XUNOTRIG=1 D CHKPTR^XLFNAME2,REQ^XUSER2()
"KRN",.403,3,12)
K XUNOTRIG,XUITNAME
"KRN",.403,3,40,0)
^.4031I^11^9
"KRN",.403,3,40,1,0)
1^^1,1^2^5
"KRN",.403,3,40,1,1)
Page 1
"KRN",.403,3,40,1,40,0)
^.4032PI^47^2
"KRN",.403,3,40,1,40,28,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,3,40,1,40,47,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,3,40,2,0)
2^^1,1^3^1
"KRN",.403,3,40,2,1)
Page 2
"KRN",.403,3,40,2,15,0)
^^1^1^2941114^
"KRN",.403,3,40,2,15,1,0)
This is Page 2 of the edit existing user.
"KRN",.403,3,40,2,40,0)
^.4032PI^47^2
"KRN",.403,3,40,2,40,29,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,3,40,2,40,47,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,3,40,3,0)
1.1^^11,9^^^1^17,66^^
"KRN",.403,3,40,3,1)
SECONDARY MENU OPTIONS Subpage
"KRN",.403,3,40,3,40,0)
^.4032PI^30^1
"KRN",.403,3,40,3,40,30,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,3,40,4,0)
1.2^^8,16^^^1^13,59^^
"KRN",.403,3,40,4,1)
DIVISION Subpage
"KRN",.403,3,40,4,40,0)
^.4032PI^31^1
"KRN",.403,3,40,4,40,31,0)
XUEXISTING USER 4^1^2,3^e
"KRN",.403,3,40,5,0)
3^^1,1^4^2
"KRN",.403,3,40,5,1)
Page 3
"KRN",.403,3,40,5,40,0)
^.4032PI^63^3
"KRN",.403,3,40,5,40,47,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,3,40,5,40,50,0)
XUEXISTING USER 5^2^2,1^e
"KRN",.403,3,40,5,40,63,0)
XU-PERSON CLASS 2^3^12,1^e
"KRN",.403,3,40,5,40,63,2)
6^!IEN^n
"KRN",.403,3,40,8,0)
1.3^^8,12^^^1^17,65
"KRN",.403,3,40,8,1)
Page 1.3^
"KRN",.403,3,40,8,11)

"KRN",.403,3,40,8,12)
D:XLFNEW'=XLFNAME PUT^DDSVAL(200,XLFNDA,.01,XLFNEW,"","I") K XLFNDA,XLFNAME,XLFNEW
"KRN",.403,3,40,8,40,0)
^.4032IP^157^1
"KRN",.403,3,40,8,40,157,0)
XUEXISTING USER NAME COMPONENT^1^1,1^e
"KRN",.403,3,40,8,40,157,1)
10.1
"KRN",.403,3,40,9,0)
4^^1,1^5^3
"KRN",.403,3,40,9,1)
Page 4
"KRN",.403,3,40,9,40,0)
^.4032IP^172^3
"KRN",.403,3,40,9,40,47,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,3,40,9,40,171,0)
XUEXISTING USER CPRS^2^2,1^e
"KRN",.403,3,40,9,40,172,0)
XUEXISTING USER CPRS TAB^3^8,1^e
"KRN",.403,3,40,9,40,172,2)
10^!IEN^n^^^
"KRN",.403,3,40,10,0)
5^^1,1^1^4
"KRN",.403,3,40,10,1)
Page 5
"KRN",.403,3,40,10,40,0)
^.4032IP^185^2
"KRN",.403,3,40,10,40,47,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,3,40,10,40,185,0)
XUEXISTING USER TRAINEE^2^2,1^e
"KRN",.403,3,40,11,0)
6^^9,45^^^1^13,80
"KRN",.403,3,40,11,1)
Termination^11,2,1
"KRN",.403,3,40,11,40,0)
^.4032IP^190^1
"KRN",.403,3,40,11,40,190,0)
Termination^1^1,1^e
"KRN",.403,12,-1)
0^4
"KRN",.403,12,0)
XUSITEPARM^^^^2941116^^^8989.3^0^0^1
"KRN",.403,12,40,0)
^.4031I^5^5
"KRN",.403,12,40,1,0)
1^^1,1^2
"KRN",.403,12,40,1,1)
Page 1
"KRN",.403,12,40,1,40,0)
^.4032IP^52^2
"KRN",.403,12,40,1,40,51,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,12,40,1,40,52,0)
XUSITEPARM 1^2^2,1^e
"KRN",.403,12,40,2,0)
3^^1,1^4^2
"KRN",.403,12,40,2,1)
Page 3
"KRN",.403,12,40,2,40,0)
^.4032IP^53^2
"KRN",.403,12,40,2,40,51,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,12,40,2,40,53,0)
XUSITEPARM 3^2^4,1^e
"KRN",.403,12,40,3,0)
2^^1,1^3^1
"KRN",.403,12,40,3,1)
Page 2
"KRN",.403,12,40,3,40,0)
^.4032IP^56^4
"KRN",.403,12,40,3,40,51,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,12,40,3,40,54,0)
XUSITEPARM 2^2^4,1^e
"KRN",.403,12,40,3,40,55,0)
XUSITEPARM 2.1^3^5,12^e
"KRN",.403,12,40,3,40,55,2)
4^^^^
"KRN",.403,12,40,3,40,56,0)
XUSITEPARM 2.2^4^12,12^e
"KRN",.403,12,40,3,40,56,2)
4
"KRN",.403,12,40,4,0)
4^^1,1^5^3
"KRN",.403,12,40,4,1)
Page 4
"KRN",.403,12,40,4,40,0)
^.4032IP^61^6
"KRN",.403,12,40,4,40,51,0)
XUSITEPARM 0^1^1,1^d
"KRN",.403,12,40,4,40,57,0)
XUSITEPARM 4^2^4,1^e
"KRN",.403,12,40,4,40,58,0)
XUSITEPARM 4.1^3^8,4^e
"KRN",.403,12,40,4,40,58,2)
4
"KRN",.403,12,40,4,40,59,0)
XUSITEPARM 4.2^4^8,43^e
"KRN",.403,12,40,4,40,59,2)
4
"KRN",.403,12,40,4,40,60,0)
XUSITEPARM 4.4^6^13,43^e
"KRN",.403,12,40,4,40,60,2)
4
"KRN",.403,12,40,4,40,61,0)
XUSITEPARM 4.3^5^13,4^e
"KRN",.403,12,40,4,40,61,2)
4
"KRN",.403,12,40,5,0)
5^^1,1^1^4
"KRN",.403,12,40,5,1)
Page 5
"KRN",.403,12,40,5,40,0)
^.4032IP^181^2
"KRN",.403,12,40,5,40,51,0)
XUSITEPARM 0^1^1,1^e
"KRN",.403,12,40,5,40,181,0)
XUSITEPARM 5^2^4,1^e
"KRN",.403,14,-1)
0^3
"KRN",.403,14,0)
XUREACT USER^^@^^2950327.1641^^^200^0^0^1
"KRN",.403,14,11)
S XUNOTRIG=1 D CHKPTR^XLFNAME2,REQ^XUSER2()
"KRN",.403,14,12)
K XUNOTRIG,XUITNAME
"KRN",.403,14,40,0)
^.4031I^8^8
"KRN",.403,14,40,1,0)
1^^1,1^2^5
"KRN",.403,14,40,1,1)
Page 1
"KRN",.403,14,40,1,11)
N % S %=$$GET^DDSVAL(200,DA,2) D:%="" HLP^DDSUTL("USER has no ACCESS CODE")
"KRN",.403,14,40,1,40,0)
^.4032IP^47^2
"KRN",.403,14,40,1,40,28,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,14,40,1,40,28,11)
D PUT^DDSVAL(DIE,.DA,9.2,"@"),PUT^DDSVAL(DIE,.DA,7,"@")
"KRN",.403,14,40,1,40,47,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,14,40,2,0)
2^^1,1^3^1
"KRN",.403,14,40,2,1)
Page 2
"KRN",.403,14,40,2,40,0)
^.4032IP^47^2
"KRN",.403,14,40,2,40,29,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,14,40,2,40,47,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,14,40,3,0)
3^^1,1^4^2
"KRN",.403,14,40,3,1)
Page 3
"KRN",.403,14,40,3,40,0)
^.4032IP^63^3
"KRN",.403,14,40,3,40,47,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,14,40,3,40,50,0)
XUEXISTING USER 5^2^2,1^e
"KRN",.403,14,40,3,40,63,0)
XU-PERSON CLASS 2^3^13,1^e
"KRN",.403,14,40,3,40,63,2)
4^!IEN^n
"KRN",.403,14,40,4,0)
1.1^^11,9^^^1^17,66
"KRN",.403,14,40,4,1)
Page 1.1
"KRN",.403,14,40,4,40,0)
^.4032IP^30^1
"KRN",.403,14,40,4,40,30,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,14,40,5,0)
1.2^^8,16^^^1^13,59
"KRN",.403,14,40,5,1)
Page 1.2
"KRN",.403,14,40,5,40,0)
^.4032IP^31^1
"KRN",.403,14,40,5,40,31,0)
XUEXISTING USER 4^1^2,2^e
"KRN",.403,14,40,6,0)
1.3^^8,12^^^1^17,65
"KRN",.403,14,40,6,1)
Page 1.3
"KRN",.403,14,40,6,12)
D:XLFNEW'=XLFNAME PUT^DDSVAL(200,XLFNDA,.01,XLFNEW,"","I") K XLFNDA,XLFNAME,XLFNEW
"KRN",.403,14,40,6,40,0)
^.4032IP^157^1
"KRN",.403,14,40,6,40,157,0)
XUEXISTING USER NAME COMPONENT^1^1,1^e
"KRN",.403,14,40,6,40,157,1)
10.1
"KRN",.403,14,40,7,0)
4^^1,1^5^3
"KRN",.403,14,40,7,1)
Page 4
"KRN",.403,14,40,7,40,0)
^.4032IP^172^3
"KRN",.403,14,40,7,40,47,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,14,40,7,40,171,0)
XUEXISTING USER CPRS^2^2,1^e
"KRN",.403,14,40,7,40,172,0)
XUEXISTING USER CPRS TAB^3^8,1^e
"KRN",.403,14,40,7,40,172,2)
10^!IEN^n
"KRN",.403,14,40,8,0)
5^^1,1^1^4
"KRN",.403,14,40,8,1)
Page 5
"KRN",.403,14,40,8,40,0)
^.4032IP^185^2
"KRN",.403,14,40,8,40,47,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,14,40,8,40,185,0)
XUEXISTING USER TRAINEE^2^2,1^e
"KRN",.403,16,-1)
0^2
"KRN",.403,16,0)
XUNEW USER^ ^@^^2960729.0925^^^200^0^0^1
"KRN",.403,16,11)
S (XUNOTRIG,XLFCOMP,XUITNAME)=1 D REQ^XUSER2()
"KRN",.403,16,12)
K XUNOTRIG,XUITNAME
"KRN",.403,16,40,0)
^.4031I^8^8
"KRN",.403,16,40,1,0)
1^^1,1^2^5
"KRN",.403,16,40,1,1)
Page 1
"KRN",.403,16,40,1,40,0)
^.4032IP^47^2
"KRN",.403,16,40,1,40,28,0)
XUEXISTING USER 1^2^2,1^e
"KRN",.403,16,40,1,40,47,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,16,40,2,0)
2^^1,1^3^1
"KRN",.403,16,40,2,1)
Page 2
"KRN",.403,16,40,2,40,0)
^.4032IP^47^2
"KRN",.403,16,40,2,40,29,0)
XUEXISTING USER 2^2^2,1^e
"KRN",.403,16,40,2,40,47,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,16,40,3,0)
3^^1,1^4^2
"KRN",.403,16,40,3,1)
Page 3
"KRN",.403,16,40,3,40,0)
^.4032IP^64^4
"KRN",.403,16,40,3,40,47,0)
XUEXISTING USER 0^2^1,1^e
"KRN",.403,16,40,3,40,50,0)
XUEXISTING USER 5^3^2,1^e
"KRN",.403,16,40,3,40,63,0)
XU-PERSON CLASS 2^4^13,1^e
"KRN",.403,16,40,3,40,63,2)
4^!IEN^n
"KRN",.403,16,40,3,40,64,0)
XUNEW USER^1^1,1^e
"KRN",.403,16,40,4,0)
1.1^^11,9^^^1^17,66
"KRN",.403,16,40,4,1)
Page 1.1
"KRN",.403,16,40,4,40,0)
^.4032IP^30^1
"KRN",.403,16,40,4,40,30,0)
XUEXISTING USER 3^1^2,3^e
"KRN",.403,16,40,5,0)
1.2^^8,16^^^1^13,59
"KRN",.403,16,40,5,1)
Page 1.2
"KRN",.403,16,40,5,40,0)
^.4032IP^31^1
"KRN",.403,16,40,5,40,31,0)
XUEXISTING USER 4^1^2,3^e
"KRN",.403,16,40,6,0)
1.3^^8,12^^^1^17,65
"KRN",.403,16,40,6,1)
Page 1.3
"KRN",.403,16,40,6,12)
D:XLFNEW'=XLFNAME PUT^DDSVAL(200,XLFNDA,.01,XLFNEW,"","I") K XLFNDA,XLFNAME,XLFNEW
"KRN",.403,16,40,6,40,0)
^.4032IP^157^1
"KRN",.403,16,40,6,40,157,0)
XUEXISTING USER NAME COMPONENT^1^1,1^e
"KRN",.403,16,40,6,40,157,1)
10.1
"KRN",.403,16,40,7,0)
4^^1,1^5^3
"KRN",.403,16,40,7,1)
Page 4
"KRN",.403,16,40,7,40,0)
^.4032IP^172^3
"KRN",.403,16,40,7,40,47,0)
XUEXISTING USER 0^1^1,1^d
"KRN",.403,16,40,7,40,171,0)
XUEXISTING USER CPRS^2^2,1^e
"KRN",.403,16,40,7,40,172,0)
XUEXISTING USER CPRS TAB^3^8,1^e
"KRN",.403,16,40,7,40,172,2)
10^!IEN^n^^^
"KRN",.403,16,40,8,0)
5^^1,1^1^4
"KRN",.403,16,40,8,1)
Page 5
"KRN",.403,16,40,8,40,0)
^.4032IP^185^2
"KRN",.403,16,40,8,40,47,0)
XUEXISTING USER 0^1^1,1^e
"KRN",.403,16,40,8,40,185,0)
XUEXISTING USER TRAINEE^2^2,1^e
"KRN",.404,28,0)
XUEXISTING USER 1^200^^^
"KRN",.404,28,40,0)
^.4044I^21^19
"KRN",.404,28,40,1,0)
2^NAME...^3
"KRN",.404,28,40,1,1)
.01
"KRN",.404,28,40,1,2)
3,12^35^3,4^1
"KRN",.404,28,40,1,10)
S XLFNDA=DA,XLFNAME=X,DDSBR="GIVEN^^1.3"
"KRN",.404,28,40,1,11)
S XUITNAME=1 D:'$D(XLFCOMP) HLP^DDSUTL(" *** Press <RET> to edit the component parts of this name. ***") I $D(XLFCOMP) S XLFNDA=DA,XLFNAME=X,DDSBR="GIVEN^^1.3" K XLFCOMP
"KRN",.404,28,40,1,13)
S XLFNDA=DA,XLFNAME=X,DDSBR="GIVEN^^1.3",XLFNCHG=1
"KRN",.404,28,40,2,0)
4^TITLE^3^^F4
"KRN",.404,28,40,2,1)
8
"KRN",.404,28,40,2,2)
4,12^30^4,5
"KRN",.404,28,40,3,0)
3^INITIAL^3
"KRN",.404,28,40,3,1)
1
"KRN",.404,28,40,3,2)
3,65^5^3,56
"KRN",.404,28,40,4,0)
5^NICK NAME^3
"KRN",.404,28,40,4,1)
13
"KRN",.404,28,40,4,2)
4,65^10^4,54
"KRN",.404,28,40,5,0)
13^PRIMARY MENU OPTION^3^
"KRN",.404,28,40,5,1)
201
"KRN",.404,28,40,5,2)
10,33^30^10,12
"KRN",.404,28,40,6,0)
14^Select SECONDARY MENU OPTIONS^3
"KRN",.404,28,40,6,1)
203
"KRN",.404,28,40,6,2)
11,33^30^11,2
"KRN",.404,28,40,6,7)
^1.1
"KRN",.404,28,40,7,0)
15^Want to edit ACCESS CODE (Y/N)^3
"KRN",.404,28,40,7,1)
2.1
"KRN",.404,28,40,7,2)
12,33^3^12,1
"KRN",.404,28,40,8,0)
17^Want to edit VERIFY CODE (Y/N)^3
"KRN",.404,28,40,8,1)
11.1
"KRN",.404,28,40,8,2)
13,33^3^13,1
"KRN",.404,28,40,8,11)
I $L($$GET^DDSVAL(200,.DA,11,,"I")) D EN^DDIOL("For the user to sign-on they must have a Verify Code.")
"KRN",.404,28,40,9,0)
16^FILE MANAGER ACCESS CODE^3
"KRN",.404,28,40,9,1)
3
"KRN",.404,28,40,9,2)
12,65^15^12,39
"KRN",.404,28,40,12,0)
18^Select DIVISION^3
"KRN",.404,28,40,12,1)
16
"KRN",.404,28,40,12,2)
15,33^30^15,16
"KRN",.404,28,40,12,7)
^1.2
"KRN",.404,28,40,13,0)
19^SERVICE/SECTION^3^^
"KRN",.404,28,40,13,1)
29
"KRN",.404,28,40,13,2)
16,33^30^16,16
"KRN",.404,28,40,14,0)
9^MAIL CODE^3
"KRN",.404,28,40,14,1)
28
"KRN",.404,28,40,14,2)
6,65^10^6,54
"KRN",.404,28,40,15,0)
1^1^1^
"KRN",.404,28,40,15,2)
^^1,74
"KRN",.404,28,40,16,0)
6^SSN^3^^F1
"KRN",.404,28,40,16,1)
9
"KRN",.404,28,40,16,2)
5,12^9^5,7
"KRN",.404,28,40,17,0)
8^DEGREE^3^^F8
"KRN",.404,28,40,17,1)
10.6
"KRN",.404,28,40,17,2)
6,12^10^6,4
"KRN",.404,28,40,18,0)
10^DISUSER^3
"KRN",.404,28,40,18,1)
7
"KRN",.404,28,40,18,2)
7,12^3^7,3
"KRN",.404,28,40,19,0)
11^TERMINATION DATE^3
"KRN",.404,28,40,19,1)
9.2
"KRN",.404,28,40,19,2)
7,66^11^7,48
"KRN",.404,28,40,20,0)
12^Termination Reason^3
"KRN",.404,28,40,20,1)
9.4
"KRN",.404,28,40,20,2)
8,23^45^8,3
"KRN",.404,28,40,21,0)
7^DOB^3^^F2
"KRN",.404,28,40,21,1)
5
"KRN",.404,28,40,21,2)
5,65^11^5,60
"KRN",.404,29,0)
XUEXISTING USER 2^200^^^
"KRN",.404,29,40,0)
^.4044I^18^15
"KRN",.404,29,40,1,0)
2^TIMED READ (# OF SECONDS)^3
"KRN",.404,29,40,1,1)
200.1
"KRN",.404,29,40,1,2)
4,31^5^4,4
"KRN",.404,29,40,2,0)
3^MULTIPLE SIGN-ON^3
"KRN",.404,29,40,2,1)
200.04
"KRN",.404,29,40,2,2)
6,31^11^6,13
"KRN",.404,29,40,2,11)
D EN^DDIOL("If you select 'Only one IP' be sure to put a value into the MULTIPLE SIGN-ON LIMIT field so users can sign-on at least once.")
"KRN",.404,29,40,3,0)
5.2^AUTO MENU^3
"KRN",.404,29,40,3,1)
200.06
"KRN",.404,29,40,3,2)
7,60^20^7,49
"KRN",.404,29,40,4,0)
5^ASK DEVICE TYPE AT SIGN-ON^3
"KRN",.404,29,40,4,1)
200.05
"KRN",.404,29,40,4,2)
7,31^9^7,3
"KRN",.404,29,40,5,0)
6^TYPE-AHEAD^3
"KRN",.404,29,40,5,1)
200.09
"KRN",.404,29,40,5,2)
8,60^11^8,48
"KRN",.404,29,40,6,0)
7^PROHIBITED TIMES FOR SIGN-ON^3
"KRN",.404,29,40,6,1)
15
"KRN",.404,29,40,6,2)
8,31^9^8,1
"KRN",.404,29,40,7,0)
10^ALLOWED TO USE SPOOLER^3
"KRN",.404,29,40,7,1)
41
"KRN",.404,29,40,7,2)
12,31^3^12,7
"KRN",.404,29,40,8,0)
12^CAN MAKE INTO A MAIL MESSAGE^3
"KRN",.404,29,40,8,1)
41.2
"KRN",.404,29,40,8,2)
13,31^3^13,1
"KRN",.404,29,40,10,0)
13^FILE RANGE^3
"KRN",.404,29,40,10,1)
31.1
"KRN",.404,29,40,10,2)
15,31^30^15,19
"KRN",.404,29,40,12,0)
14^ALWAYS SHOW SECONDARIES^3
"KRN",.404,29,40,12,1)
200.11
"KRN",.404,29,40,12,2)
16,31^3^16,6
"KRN",.404,29,40,13,0)
1^2^1^
"KRN",.404,29,40,13,2)
^^1,74^1
"KRN",.404,29,40,14,0)
11^PAC^3
"KRN",.404,29,40,14,1)
14
"KRN",.404,29,40,14,2)
12,63^8^12,58
"KRN",.404,29,40,16,0)
8^AUTO SIGN-ON^3
"KRN",.404,29,40,16,1)
200.18
"KRN",.404,29,40,16,2)
9,60^3^9,46
"KRN",.404,29,40,17,0)
9^Preferred Editor^3
"KRN",.404,29,40,17,1)
31.3
"KRN",.404,29,40,17,2)
10,31^30^10,13
"KRN",.404,29,40,17,3)
SCREEN EDITOR
"KRN",.404,29,40,18,0)
3.2^MULTIPLE SIGN-ON LIMIT^3
"KRN",.404,29,40,18,1)
200.19
"KRN",.404,29,40,18,2)
6,70^3^6,46
"KRN",.404,30,0)
XUEXISTING USER 3^200.03
"KRN",.404,30,40,0)
^.4044I^3^3
"KRN",.404,30,40,1,0)
1^SECONDARY MENU OPTIONS^1^
"KRN",.404,30,40,1,2)
^^1,33^
"KRN",.404,30,40,2,0)
2^SECONDARY MENU OPTIONS^3
"KRN",.404,30,40,2,1)
.01
"KRN",.404,30,40,2,2)
3,25^30^3,1
"KRN",.404,30,40,3,0)
3^SYNONYM^3
"KRN",.404,30,40,3,1)
2
"KRN",.404,30,40,3,2)
4,25^4^4,16
"KRN",.404,31,0)
XUEXISTING USER 4^200.02
"KRN",.404,31,40,0)
^.4044I^3^3
"KRN",.404,31,40,1,0)
1^DIVISION^1^
"KRN",.404,31,40,1,2)
^^1,33^
"KRN",.404,31,40,2,0)
2^DIVISION^3
"KRN",.404,31,40,2,1)
.01
"KRN",.404,31,40,2,2)
3,11^30^3,1
"KRN",.404,31,40,3,0)
3^DEFAULT^3
"KRN",.404,31,40,3,1)
1
"KRN",.404,31,40,3,2)
4,11^3^4,2
"KRN",.404,47,0)
XUEXISTING USER 0^200^
"KRN",.404,47,40,0)
^.4044I^6^5
"KRN",.404,47,40,1,0)
2^NAME^3
"KRN",.404,47,40,1,1)
.01
"KRN",.404,47,40,1,2)
2,7^30^2,1
"KRN",.404,47,40,1,4)
^^^1
"KRN",.404,47,40,2,0)
1^Edit an Existing User^1^
"KRN",.404,47,40,2,2)
^^1,30^1
"KRN",.404,47,40,3,0)
3^Page^1^
"KRN",.404,47,40,3,2)
^^2,69
"KRN",.404,47,40,5,0)
4^of 5^1^
"KRN",.404,47,40,5,2)
^^2,76
"KRN",.404,47,40,6,0)
5^_______________________________________________________________________________^1
"KRN",.404,47,40,6,2)
^^3,1
"KRN",.404,50,0)
XUEXISTING USER 5^200
"KRN",.404,50,40,0)
^.4044I^10^10
"KRN",.404,50,40,1,0)
1^3^1^
"KRN",.404,50,40,1,2)
^^1,74^
"KRN",.404,50,40,2,0)
2^PROHIBITED TIMES FOR SIGN-ON^3
"KRN",.404,50,40,2,1)
15
"KRN",.404,50,40,2,2)
3,31^21^3,1
"KRN",.404,50,40,3,0)
3^PHONE^3
"KRN",.404,50,40,3,1)
.131
"KRN",.404,50,40,3,2)
5,19^20^5,12
"KRN",.404,50,40,4,0)
4^OFFICE PHONE^3
"KRN",.404,50,40,4,1)
.132
"KRN",.404,50,40,4,2)
5,56^20^5,42
"KRN",.404,50,40,5,0)
7^VOICE PAGER^3
"KRN",.404,50,40,5,1)
.137
"KRN",.404,50,40,5,2)
7,19^20^7,6
"KRN",.404,50,40,6,0)
6^FAX NUMBER^3
"KRN",.404,50,40,6,1)
.136
"KRN",.404,50,40,6,2)
6,56^20^6,44
"KRN",.404,50,40,7,0)
5^COMMERCIAL PHONE^3
"KRN",.404,50,40,7,1)
.135
"KRN",.404,50,40,7,2)
6,19^20^6,1
"KRN",.404,50,40,8,0)
8^DIGITAL PAGER^3
"KRN",.404,50,40,8,1)
.138
"KRN",.404,50,40,8,2)
7,56^20^7,41
"KRN",.404,50,40,9,0)
9^LANGUAGE^3
"KRN",.404,50,40,9,1)
200.07
"KRN",.404,50,40,9,2)
8,19^10^8,9
"KRN",.404,50,40,10,0)
10^Person Class                                         Effective     Expired^1
"KRN",.404,50,40,10,2)
^^10,2
"KRN",.404,51,0)
XUSITEPARM 0^8989.3^
"KRN",.404,51,40,0)
^.4044I^3^2
"KRN",.404,51,40,2,0)
2^Kernel Site Parameter edit^1
"KRN",.404,51,40,2,2)
^^1,24^1
"KRN",.404,51,40,3,0)
1^DOMAIN^3
"KRN",.404,51,40,3,1)
.01
"KRN",.404,51,40,3,2)
2,20^42^2,13
"KRN",.404,52,0)
XUSITEPARM 1^8989.3
"KRN",.404,52,40,0)
^.4044I^20^18
"KRN",.404,52,40,1,0)
1^DEFAULT # OF ATTEMPTS^3
"KRN",.404,52,40,1,1)
202
"KRN",.404,52,40,1,2)
3,31^3^3,8
"KRN",.404,52,40,1,3)
5
"KRN",.404,52,40,2,0)
3^DEFAULT LOCK-OUT TIME^3
"KRN",.404,52,40,2,1)
203
"KRN",.404,52,40,2,2)
4,31^4^4,8
"KRN",.404,52,40,2,3)
30
"KRN",.404,52,40,3,0)
4^DEFAULT MULTIPLE SIGN-ON^3
"KRN",.404,52,40,3,1)
204
"KRN",.404,52,40,3,2)
5,31^8^5,5
"KRN",.404,52,40,3,3)
YES
"KRN",.404,52,40,3,11)
D EN^DDIOL("If you select 'Only one IP' be sure to put a value into the MULTIPLE SIGN-ON LIMIT field so users can sign-on at least once.")
"KRN",.404,52,40,4,0)
15^ASK DEVICE TYPE AT SIGN-ON^3
"KRN",.404,52,40,4,1)
205
"KRN",.404,52,40,4,2)
12,69^3^12,41
"KRN",.404,52,40,4,3)
ASK
"KRN",.404,52,40,5,0)
6^DEFAULT AUTO-MENU^3
"KRN",.404,52,40,5,1)
206
"KRN",.404,52,40,5,2)
6,31^3^6,12
"KRN",.404,52,40,5,3)
NO
"KRN",.404,52,40,6,0)
9^DEFAULT TYPE-AHEAD^3
"KRN",.404,52,40,6,1)
209
"KRN",.404,52,40,6,2)
8,31^3^8,11
"KRN",.404,52,40,6,3)
YES
"KRN",.404,52,40,7,0)
10^DEFAULT TIMED-READ (SECONDS)^3
"KRN",.404,52,40,7,1)
210
"KRN",.404,52,40,7,2)
9,31^5^9,1
"KRN",.404,52,40,7,3)
300
"KRN",.404,52,40,8,0)
12^BYPASS DEVICE LOCK-OUT^3
"KRN",.404,52,40,8,1)
211
"KRN",.404,52,40,8,2)
11,31^3^11,7
"KRN",.404,52,40,9,0)
14^LIFETIME OF VERIFY CODE^3
"KRN",.404,52,40,9,1)
214
"KRN",.404,52,40,9,2)
12,31^3^12,6
"KRN",.404,52,40,9,3)
90
"KRN",.404,52,40,11,0)
8^DEFAULT LANGUAGE^3
"KRN",.404,52,40,11,1)
207
"KRN",.404,52,40,11,2)
7,31^10^7,13
"KRN",.404,52,40,12,0)
16^DEFAULT INSTITUTION^3
"KRN",.404,52,40,12,1)
217
"KRN",.404,52,40,12,2)
13,31^30^13,10
"KRN",.404,52,40,13,0)
17^AUTO-GENERATE ACCESS CODES^3
"KRN",.404,52,40,13,1)
11
"KRN",.404,52,40,13,2)
14,31^3^14,3
"KRN",.404,52,40,14,0)
2^AGENCY CODE^3
"KRN",.404,52,40,14,1)
9
"KRN",.404,52,40,14,2)
3,66^9^3,53
"KRN",.404,52,40,14,3)
VA
"KRN",.404,52,40,16,0)
7^DEFAULT AUTO SIGN-ON^3
"KRN",.404,52,40,16,1)
218
"KRN",.404,52,40,16,2)
6,66^8^6,44
"KRN",.404,52,40,17,0)
11^BROKER TIMEOUT^3
"KRN",.404,52,40,17,1)
230
"KRN",.404,52,40,17,2)
9,66^5^9,50
"KRN",.404,52,40,17,3)
180
"KRN",.404,52,40,18,0)
5^MULTIPLE SIGN-ON LIMIT^3
"KRN",.404,52,40,18,1)
219
"KRN",.404,52,40,18,2)
5,66^3^5,42
"KRN",.404,52,40,19,0)
18^AUTO-GENERATE VERIFY CODES^3
"KRN",.404,52,40,19,1)
11.2
"KRN",.404,52,40,19,2)
15,31^3^15,3
"KRN",.404,52,40,20,0)
13^CCOW TOKEN TIMEOUT^3
"KRN",.404,52,40,20,1)
30.1
"KRN",.404,52,40,20,2)
11,66^5^11,46
"KRN",.404,53,0)
XUSITEPARM 3^8989.3
"KRN",.404,53,40,0)
^.4044I^7^7
"KRN",.404,53,40,1,0)
1^MAX SPOOL LINES PER USER^3
"KRN",.404,53,40,1,1)
31.1
"KRN",.404,53,40,1,2)
1,31^7^1,5
"KRN",.404,53,40,2,0)
2^MAX SPOOL DOCUMENTS PER USER^3
"KRN",.404,53,40,2,1)
31.2
"KRN",.404,53,40,2,2)
2,31^3^2,1
"KRN",.404,53,40,3,0)
3^MAX SPOOL DOCUMENT LIFE-SPAN^3
"KRN",.404,53,40,3,1)
31.3
"KRN",.404,53,40,3,2)
3,31^3^3,1
"KRN",.404,53,40,4,0)
4^LOG RESOURCE USAGE?^3
"KRN",.404,53,40,4,1)
300
"KRN",.404,53,40,4,2)
5,31^3^5,10
"KRN",.404,53,40,5,0)
5^NEW PERSON IDENTIFIERS^3
"KRN",.404,53,40,5,1)
21
"KRN",.404,53,40,5,2)
13,4^65^12,1
"KRN",.404,53,40,6,0)
6^DEFAULT DIRECTORY FOR HFS^3
"KRN",.404,53,40,6,1)
320
"KRN",.404,53,40,6,2)
8,4^50^7,1
"KRN",.404,53,40,7,0)
7^DNS IP^3
"KRN",.404,53,40,7,1)
51
"KRN",.404,53,40,7,2)
10,9^60^10,1
"KRN",.404,53,40,7,4)
1
"KRN",.404,54,0)
XUSITEPARM 2^8989.3
"KRN",.404,54,40,0)
^.4044I^3^3
"KRN",.404,54,40,1,0)
1^Vol Set      Max Sign-ons       Log RT?^1
"KRN",.404,54,40,1,2)
^^1,12^1
"KRN",.404,54,40,2,0)
2^ROUTINE MONITORING^3
"KRN",.404,54,40,2,1)
9.8
"KRN",.404,54,40,2,2)
8,22^8^8,2
"KRN",.404,54,40,3,0)
3^Routine Namespace's^1
"KRN",.404,54,40,3,2)
^^9,12^1
"KRN",.404,55,0)
XUSITEPARM 2.1^8989.304
"KRN",.404,55,40,0)
^.4044I^3^3
"KRN",.404,55,40,1,0)
1^^3
"KRN",.404,55,40,1,1)
.01
"KRN",.404,55,40,1,2)
1,1^9
"KRN",.404,55,40,2,0)
2^^3
"KRN",.404,55,40,2,1)
2
"KRN",.404,55,40,2,2)
1,14^4
"KRN",.404,55,40,3,0)
3^^3
"KRN",.404,55,40,3,1)
6
"KRN",.404,55,40,3,2)
1,33^3
"KRN",.404,56,0)
XUSITEPARM 2.2^8989.309
"KRN",.404,56,40,0)
^.4044I^1^1
"KRN",.404,56,40,1,0)
1^^3
"KRN",.404,56,40,1,1)
.01
"KRN",.404,56,40,1,2)
2,5^8
"KRN",.404,57,0)
XUSITEPARM 4^8989.3
"KRN",.404,57,40,0)
^.4044I^8^8
"KRN",.404,57,40,1,0)
1^OPTION AUDIT^3
"KRN",.404,57,40,1,1)
19
"KRN",.404,57,40,1,2)
1,15^24^1,1
"KRN",.404,57,40,2,0)
2^INITIATE AUDIT^3
"KRN",.404,57,40,2,1)
19.4
"KRN",.404,57,40,2,2)
2,20^17^2,4
"KRN",.404,57,40,3,0)
3^TERMINATE AUDIT^3
"KRN",.404,57,40,3,1)
19.5
"KRN",.404,57,40,3,2)
2,60^17^2,43
"KRN",.404,57,40,4,0)
4^Option to audit^1
"KRN",.404,57,40,4,2)
^^4,4^1
"KRN",.404,57,40,5,0)
5^Namespace to audit^1
"KRN",.404,57,40,5,2)
^^4,43^1
"KRN",.404,57,40,6,0)
6^User to audit^1
"KRN",.404,57,40,6,2)
^^9,4^1
"KRN",.404,57,40,7,0)
7^Device to audit^1
"KRN",.404,57,40,7,2)
^^9,43
"KRN",.404,57,40,8,0)
8^FAILED ACCESS ATTEMPTS^3
"KRN",.404,57,40,8,1)
212.5
"KRN",.404,57,40,8,2)
1,67^8^1,43
"KRN",.404,58,0)
XUSITEPARM 4.1^8989.36
"KRN",.404,58,40,0)
^.4044I^1^1
"KRN",.404,58,40,1,0)
1^^3
"KRN",.404,58,40,1,1)
.01
"KRN",.404,58,40,1,2)
1,1^30
"KRN",.404,59,0)
XUSITEPARM 4.2^8989.35
"KRN",.404,59,40,0)
^.4044I^1^1
"KRN",.404,59,40,1,0)
1^^3
"KRN",.404,59,40,1,1)
.01
"KRN",.404,59,40,1,2)
1,1^5
"KRN",.404,60,0)
XUSITEPARM 4.4^8989.33
"KRN",.404,60,40,0)
^.4044I^1^1
"KRN",.404,60,40,1,0)
1^^3
"KRN",.404,60,40,1,1)
.01
"KRN",.404,60,40,1,2)
1,1^20
"KRN",.404,61,0)
XUSITEPARM 4.3^8989.34
"KRN",.404,61,40,0)
^.4044I^1^1
"KRN",.404,61,40,1,0)
1^^3
"KRN",.404,61,40,1,1)
.01
"KRN",.404,61,40,1,2)
1,1^30
"KRN",.404,63,0)
XU-PERSON CLASS 2^200.05
"KRN",.404,63,40,0)
^.4044I^3^3
"KRN",.404,63,40,1,0)
1^^3
"KRN",.404,63,40,1,1)
.01
"KRN",.404,63,40,1,2)
1,2^40
"KRN",.404,63,40,1,11)
D DDS1^XUA4A72
"KRN",.404,63,40,1,14)
S:$L(DDSOLD)&(X'=DDSOLD) DDSERROR=1
"KRN",.404,63,40,2,0)
2^^3
"KRN",.404,63,40,2,1)
2
"KRN",.404,63,40,2,2)
1,52^12
"KRN",.404,63,40,2,4)
^^^0
"KRN",.404,63,40,2,12)
D DDS2^XUA4A72
"KRN",.404,63,40,2,14)
D DDS3^XUA4A72(2)
"KRN",.404,63,40,3,0)
3^^3
"KRN",.404,63,40,3,1)
3
"KRN",.404,63,40,3,2)
1,67^12
"KRN",.404,63,40,3,14)
D DDS3^XUA4A72(3)
"KRN",.404,64,0)
XUNEW USER^200
"KRN",.404,157,0)
XUEXISTING USER NAME COMPONENT^20
"KRN",.404,157,11)
I $G(XLFNCHG),$D(XLFNC) N FLD,NC,SUB M NC=XLFNC K XLFNC S (XLFNAME,XLFNEW)=NC K XLFNCHG S FLD=0 F SUB="FAMILY","GIVEN","MIDDLE","","SUFFIX" S FLD=FLD+1 D:SUB]"" PUT^DDSVAL(DIE,DA,FLD,$G(NC(SUB)),"","I")
"KRN",.404,157,40,0)
^.4044I^8^7
"KRN",.404,157,40,1,0)
1^NAME COMPONENTS^1
"KRN",.404,157,40,1,2)
^^2,38
"KRN",.404,157,40,2,0)
5^Family (Last)^3
"KRN",.404,157,40,2,1)
1
"KRN",.404,157,40,2,2)
6,18^35^6,3
"KRN",.404,157,40,3,0)
3^Given (First)^3^^GIVEN
"KRN",.404,157,40,3,1)
2
"KRN",.404,157,40,3,2)
4,18^25^4,3
"KRN",.404,157,40,4,0)
4^Middle^3
"KRN",.404,157,40,4,1)
3
"KRN",.404,157,40,4,2)
5,18^25^5,10
"KRN",.404,157,40,5,0)
2^Prefix^3
"KRN",.404,157,40,5,1)
4
"KRN",.404,157,40,5,2)
3,18^10^3,10
"KRN",.404,157,40,6,0)
6^Suffix^3
"KRN",.404,157,40,6,1)
5
"KRN",.404,157,40,6,2)
7,18^10^7,10
"KRN",.404,157,40,8,0)
8^^4
"KRN",.404,157,40,8,2)
9,3^35
"KRN",.404,157,40,8,30)
N NC S NC("FAMILY")={1},NC("GIVEN")={2},NC("MIDDLE")={3},NC("SUFFIX")={5},(XLFNEW,Y)=$$BLDNAME^XLFNAME8(.NC,35)
"KRN",.404,171,0)
XUEXISTING USER CPRS^200
"KRN",.404,171,40,0)
^.4044I^8^8
"KRN",.404,171,40,1,0)
1^4^1
"KRN",.404,171,40,1,2)
^^1,74
"KRN",.404,171,40,2,0)
2^RESTRICT PATIENT SELECTION^3
"KRN",.404,171,40,2,1)
101.01
"KRN",.404,171,40,2,2)
3,29^3^3,1
"KRN",.404,171,40,3,0)
3^OE/RR LIST^3
"KRN",.404,171,40,3,1)
101.02
"KRN",.404,171,40,3,2)
3,48^30^3,36
"KRN",.404,171,40,4,0)
4^CPRS TAB ACCESS:^1
"KRN",.404,171,40,4,2)
^^5,1
"KRN",.404,171,40,5,0)
5^Effective Date^1
"KRN",.404,171,40,5,2)
^^6,46
"KRN",.404,171,40,6,0)
6^Expiration Date^1
"KRN",.404,171,40,6,2)
^^6,62
"KRN",.404,171,40,7,0)
7^Name^1
"KRN",.404,171,40,7,2)
^^6,3
"KRN",.404,171,40,8,0)
8^Description^1
"KRN",.404,171,40,8,2)
^^6,9
"KRN",.404,172,0)
XUEXISTING USER CPRS TAB^200.010113
"KRN",.404,172,40,0)
^.4044I^4^4
"KRN",.404,172,40,1,0)
1^^3
"KRN",.404,172,40,1,1)
.01
"KRN",.404,172,40,1,2)
1,3^3
"KRN",.404,172,40,2,0)
2^^3
"KRN",.404,172,40,2,1)
.02
"KRN",.404,172,40,2,2)
1,47^11
"KRN",.404,172,40,3,0)
3^^3
"KRN",.404,172,40,3,1)
.03
"KRN",.404,172,40,3,2)
1,64^11
"KRN",.404,172,40,3,14)
I X]"" N XUD,XUM S XUD=$$GET^DDSVAL(DIE,.DA,.02,"","I") S XUM=$S(XUD="":"You must first enter an EFFECTIVE DATE.",X<XUD:"The EXPIRATION DATE must not precede the EFFECTIVE DATE.",1:"") I $G(XUM)]"" S DDSERROR=1 D HLP^DDSUTL(XUM)
"KRN",.404,172,40,4,0)
4^^4
"KRN",.404,172,40,4,2)
1,9^35
"KRN",.404,172,40,4,30)
=$S($D(^DD(101.13,1,0))#2:$$GET^DDSVAL(101.13,{.01;I},1),1:"")
"KRN",.404,181,0)
XUSITEPARM 5^8989.3
"KRN",.404,181,40,0)
^.4044I^2^2
"KRN",.404,181,40,1,0)
1^IRM MAIL GROUP^3
"KRN",.404,181,40,1,1)
.02
"KRN",.404,181,40,1,2)
1,27^50^1,11
"KRN",.404,181,40,2,0)
2^AFTER HOURS MAIL GROUP^3
"KRN",.404,181,40,2,1)
.03
"KRN",.404,181,40,2,2)
3,27^50^3,3
"KRN",.404,185,0)
XUEXISTING USER TRAINEE^200
"KRN",.404,185,40,0)
^.4044I^17^16
"KRN",.404,185,40,1,0)
1^5^1
"KRN",.404,185,40,1,2)
^^1,74
"KRN",.404,185,40,2,0)
2^PERMANENT ADDRESS:^1
"KRN",.404,185,40,2,2)
^^3,1
"KRN",.404,185,40,3,0)
3^Street 1^3^^F3
"KRN",.404,185,40,3,1)
.111
"KRN",.404,185,40,3,2)
4,21^50^4,11
"KRN",.404,185,40,4,0)
4^Street 2^3^^F4
"KRN",.404,185,40,4,1)
.112
"KRN",.404,185,40,4,2)
5,21^50^5,11
"KRN",.404,185,40,5,0)
5^Street 3^3^^F5
"KRN",.404,185,40,5,1)
.113
"KRN",.404,185,40,5,2)
6,21^50^6,11
"KRN",.404,185,40,6,0)
6^City^3^^F6
"KRN",.404,185,40,6,1)
.114
"KRN",.404,185,40,6,2)
7,21^30^7,15
"KRN",.404,185,40,7,0)
7^State^3^^F7
"KRN",.404,185,40,7,1)
.115
"KRN",.404,185,40,7,2)
8,21^30^8,14
"KRN",.404,185,40,8,0)
8^Zip Code^3^^F8
"KRN",.404,185,40,8,1)
.116
"KRN",.404,185,40,8,2)
9,21^10^9,11
"KRN",.404,185,40,9,0)
9^E-Mail Address^3^^F9
"KRN",.404,185,40,9,1)
.151
"KRN",.404,185,40,9,2)
10,21^50^10,5
"KRN",.404,185,40,11,0)
16^Target Degree Lvl^3^^12.1F
"KRN",.404,185,40,11,1)
12.1
"KRN",.404,185,40,11,2)
16,20^59^16,1
"KRN",.404,185,40,11,14)
I X="" D EN^DDIOL($C(7)_"Deletions are not allowed!") S DDSERROR=1
"KRN",.404,185,40,12,0)
15^Program of Study^3^^12.2F
"KRN",.404,185,40,12,1)
12.2
"KRN",.404,185,40,12,2)
15,19^59^15,1
"KRN",.404,185,40,12,11)
D:X]"" HLP^DDSUTL($P($G(^USC(8932.2,+$G(X),0)),U))
"KRN",.404,185,40,12,14)
I X="" D EN^DDIOL($C(7)_"Deletions are not allowed!") S DDSERROR=1
"KRN",.404,185,40,13,0)
13^Last Training Month & Year^3^^12.3F
"KRN",.404,185,40,13,1)
12.3
"KRN",.404,185,40,13,2)
13,66^8^13,38
"KRN",.404,185,40,13,14)
I X="" D EN^DDIOL($C(7)_"Deletions are not allowed!") S DDSERROR=1
"KRN",.404,185,40,14,0)
11^VHA Training Fac.^3^^12.4F
"KRN",.404,185,40,14,1)
12.4
"KRN",.404,185,40,14,2)
12,20^27^12,1
"KRN",.404,185,40,14,14)
I X="" D EN^DDIOL($C(7)_"Deletions are not allowed!") S DDSERROR=1
"KRN",.404,185,40,15,0)
10^Is this person an active Trainee?^3^^12.6F
"KRN",.404,185,40,15,1)
12.6
"KRN",.404,185,40,15,2)
11,36^3^11,1
"KRN",.404,185,40,15,12)
D REQ^XUSER2("")
"KRN",.404,185,40,15,14)
I X="" D EN^DDIOL($C(7)_"Deletions are not allowed!") S DDSERROR=1
"KRN",.404,185,40,16,0)
14^Trainee Inactive (Date)^3^^12.7F
"KRN",.404,185,40,16,1)
12.7
"KRN",.404,185,40,16,2)
14,63^11^14,38
"KRN",.404,185,40,16,14)
I X="" D EN^DDIOL($C(7)_"Deletions are not allowed!") S DDSERROR=1
"KRN",.404,185,40,17,0)
12^Start Date of Training^3^^12.8F
"KRN",.404,185,40,17,1)
12.8
"KRN",.404,185,40,17,2)
13,25^11^13,1
"KRN",.404,185,40,17,14)
I X="" D EN^DDIOL($C(7)_"Deletions are not allowed!") S DDSERROR=1
"KRN",.404,190,0)
Termination^200
"KRN",.404,190,40,0)
^.4044I^2^2
"KRN",.404,190,40,1,0)
1^DELETE ALL MAIL ACCESS^3
"KRN",.404,190,40,1,1)
9.21
"KRN",.404,190,40,1,2)
2,27^3^2,3
"KRN",.404,190,40,1,3)
YES
"KRN",.404,190,40,2,0)
2^DELETE KEYS AT TERMINATION^3
"KRN",.404,190,40,2,1)
9.22
"KRN",.404,190,40,2,2)
4,31^3^4,3
"KRN",.404,190,40,2,3)
YES
"KRN",.84,30810.21,-1)
0^1
"KRN",.84,30810.21,0)
30810.21^1^^KERNEL^Null Verify code.
"KRN",.84,30810.21,1,0)
^.842^1^1^3060531^^
"KRN",.84,30810.21,1,1,0)
Patch XU*8*419 changes it so null verify codes are not allowed.
"KRN",.84,30810.21,2,0)
^^1^1^3060531^
"KRN",.84,30810.21,2,1,0)
Null Verify Code Not Allowed.
"KRN",.84,30810.45,-1)
0^2
"KRN",.84,30810.45,0)
30810.45^2^^KERNEL^Already signed on
"KRN",.84,30810.45,2,0)
^^1^1^3030306^
"KRN",.84,30810.45,2,1,0)
You are ALREADY signed on. And may not sign on again.
"KRN",9.2,138,-1)
0^1
"KRN",9.2,138,0)
XUSER COMPUTER ACCOUNT^Batch user access document^2891010^^
"KRN",9.2,138,1,0)
^^91^91^3060614^
"KRN",9.2,138,1,1,0)
|INDENT(10)| |WIDTH(70)|
"KRN",9.2,138,1,2,0)
|NOWRAP|
"KRN",9.2,138,1,3,0)
|CENTER("USER ACCOUNT NOTIFICATION")|
"KRN",9.2,138,1,4,0)
 
"KRN",9.2,138,1,5,0)
|CENTER("Department of Veterans Affairs")|
"KRN",9.2,138,1,6,0)
|CENTER("SuperStar VAMC")|
"KRN",9.2,138,1,7,0)
|CENTER("123 anywhere")|
"KRN",9.2,138,1,8,0)
|CENTER("anytown, state, zip")|
"KRN",9.2,138,1,9,0)
|XUVT(12)|
"KRN",9.2,138,1,10,0)
|#20.2|
"KRN",9.2,138,1,11,0)
|#29|   (|#29:MAIL SYMBOL|)
"KRN",9.2,138,1,12,0)
|XUVT(19)|
"KRN",9.2,138,1,13,0)
---
"KRN",9.2,138,1,14,0)
 |WRAP|
"KRN",9.2,138,1,15,0)
 
"KRN",9.2,138,1,16,0)
 
"KRN",9.2,138,1,17,0)
A user account has been created in your name to enable you to access
"KRN",9.2,138,1,18,0)
on-line clinical and/or administrative data required to perform your
"KRN",9.2,138,1,19,0)
duties as an employee of the Department of Veterans Affairs.  Please read
"KRN",9.2,138,1,20,0)
the enclosed NEW USER INFORMATION before you attempt your first log-on to
"KRN",9.2,138,1,21,0)
the system.  Questions about access should be referred to the AIS
"KRN",9.2,138,1,22,0)
Application Coordinator in your service, your facility Information
"KRN",9.2,138,1,23,0)
Security Officer (ISO), or your IRM Service.
"KRN",9.2,138,1,24,0)
 
"KRN",9.2,138,1,25,0)
 |NOWRAP|
"KRN",9.2,138,1,26,0)
Your Computer Access Coordinator is:
"KRN",9.2,138,1,27,0)
|TAB(36)||#29:COORDINATOR|
"KRN",9.2,138,1,28,0)
|TAB(36)||#29:COORDINATOR:ROOM|
"KRN",9.2,138,1,29,0)
|TAB(36)||#29:COORDINATOR:OFFICE PHONE|
"KRN",9.2,138,1,30,0)
Your Facility Information Security Officer:
"KRN",9.2,138,1,31,0)
|TAB(36)|
"KRN",9.2,138,1,32,0)
Your Alternate Information Security Officer:
"KRN",9.2,138,1,33,0)
|TAB(36)|
"KRN",9.2,138,1,34,0)
|XUVT(41)|
"KRN",9.2,138,1,35,0)
---
"KRN",9.2,138,1,36,0)
|XUVT(49)|
"KRN",9.2,138,1,37,0)
|TAB(45)|Access Code: |VAR("XUU")|
"KRN",9.2,138,1,38,0)
|TAB(45)|Verify Code: |VAR("XUU2")|
"KRN",9.2,138,1,39,0)
|TOP|
"KRN",9.2,138,1,40,0)
|INDENT(5)||WIDTH(75)||NOWRAP|
"KRN",9.2,138,1,41,0)
|CENTER("COMPUTER ACCOUNT ACCESS POLICY")|
"KRN",9.2,138,1,42,0)
 
"KRN",9.2,138,1,43,0)
|CENTER("Department of Veterans Affairs")|
"KRN",9.2,138,1,44,0)
|CENTER("Your VA Facility")|
"KRN",9.2,138,1,45,0)
|XUVT(6)|
"KRN",9.2,138,1,46,0)
|#20.2|
"KRN",9.2,138,1,47,0)
|#29|   (|#29:MAIL SYMBOL|)
"KRN",9.2,138,1,48,0)
|INDENT(1)||WIDTH(77)||WRAP|
"KRN",9.2,138,1,49,0)
 
"KRN",9.2,138,1,50,0)
As an authorized user of VHA automated information systems (AISs) and
"KRN",9.2,138,1,51,0)
having access to data stored in them, I will be given sufficient access to
"KRN",9.2,138,1,52,0)
perform my assigned duties.  I will use this access ONLY for its intended
"KRN",9.2,138,1,53,0)
purpose and understand the following policies that apply to VA data and
"KRN",9.2,138,1,54,0)
computer systems:
"KRN",9.2,138,1,55,0)
 
"KRN",9.2,138,1,56,0)
I agree to safeguard all passwords (e.g., Access/Verify codes, electronic
"KRN",9.2,138,1,57,0)
signature codes) assigned to me and am strictly prohibited from disclosing these
"KRN",9.2,138,1,58,0)
codes to anyone including family, friends, fellow workers, supervisor(s), and
"KRN",9.2,138,1,59,0)
subordinates for ANY reason.
"KRN",9.2,138,1,60,0)
 
"KRN",9.2,138,1,61,0)
I understand that I may be held accountable for all entries/changes made
"KRN",9.2,138,1,62,0)
to any government AIS using my passwords.
"KRN",9.2,138,1,63,0)
 
"KRN",9.2,138,1,64,0)
I am aware of the regulations and facility AIS security policies designed
"KRN",9.2,138,1,65,0)
to ensure the confidentiality of all sensitive information.  I am aware
"KRN",9.2,138,1,66,0)
that information about patients or employees is confidential and
"KRN",9.2,138,1,67,0)
protected from unauthorized disclosure by law.  I understand that my
"KRN",9.2,138,1,68,0)
obligation to protect VA information does not end with either the
"KRN",9.2,138,1,69,0)
termination of my access to this facility's systems or with the
"KRN",9.2,138,1,70,0)
termination of my government employment.
"KRN",9.2,138,1,71,0)
 
"KRN",9.2,138,1,72,0)
I will exercise common sense and good judgment in the use of electronic
"KRN",9.2,138,1,73,0)
mail.  I understand that electronic mail is not inherently confidential
"KRN",9.2,138,1,74,0)
and I have no expectation of privacy in using it.  I understand that
"KRN",9.2,138,1,75,0)
technical or administrative problems may create situations which requires
"KRN",9.2,138,1,76,0)
viewing of my messages.  I also understand that facility management
"KRN",9.2,138,1,77,0)
officials may authorize access to my electronic mail messages whenever
"KRN",9.2,138,1,78,0)
there is a legitimate purpose for such access.
"KRN",9.2,138,1,79,0)
 
"KRN",9.2,138,1,80,0)
I understand that a violation of this notice constitutes disregard of a
"KRN",9.2,138,1,81,0)
local and/or VHA policy and will result in appropriate disciplinary action
"KRN",9.2,138,1,82,0)
as defined in VA employee conduct Regulations (VAR 820(b)) as well as
"KRN",9.2,138,1,83,0)
suspension/termination of access privileges.
"KRN",9.2,138,1,84,0)
 
"KRN",9.2,138,1,85,0)
I affirm with my signature that I have read, understand, and agree to
"KRN",9.2,138,1,86,0)
fulfill the provisions of this User Access notice.
"KRN",9.2,138,1,87,0)
 
"KRN",9.2,138,1,88,0)
|INDENT(5)||WIDTH(75)||NOWRAP|
"KRN",9.2,138,1,89,0)
Signature:________________________
"KRN",9.2,138,1,90,0)
          |#20.2| |#29|
"KRN",9.2,138,1,91,0)
RETURN THIS FORM TO: IRMS - NEW ACCTS (xxx/xxx)
"KRN",9.2,138,2,0)
^9.22A^0^0
"KRN",19,1152,-1)
0^1
"KRN",19,1152,0)
XU NOP MENU^Do nothing menu^^M^^^^^^^^KERNEL^y
"KRN",19,1152,1,0)
^^2^2^3051227^
"KRN",19,1152,1,1,0)
This Menu is just a place holder for some special access methods.
"KRN",19,1152,1,2,0)
DO NOT PLACE ANY NEW ITEMS IN THE MENU multiple.
"KRN",19,1152,99)
60262,49610
"KRN",19,1152,"U")
DO NOTHING MENU
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
419^3060906
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3060906
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*419  C&A Remediation by pre-expiring new verify code.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","XUS")
0^4^B30134409^B29056184
"RTN","XUS",1,0)
XUS ;SFISC/STAFF - SIGNON ;5/31/2006
"RTN","XUS",2,0)
 ;;8.0;KERNEL;**16,26,49,59,149,180,265,337,419**;Jul 10, 1995;Build 5
"RTN","XUS",3,0)
 ;Sign-on message numbers are 30810.51 to 30810.99
"RTN","XUS",4,0)
 S U="^" D INTRO^XUS1A()
"RTN","XUS",5,0)
 K  K ^XUTL("ZISPARAM",$I)
"RTN","XUS",6,0)
 S U="^",XQXFLG("GUI")="^"
"RTN","XUS",7,0)
 W ! S $Y=0 D SET1(1) I POP S XUM=3 G NO ;Sets DUZ("LANG")
"RTN","XUS",8,0)
 S XUSTMP(51)=$$EZBLD^DIALOG(30810.51),XUSTMP(52)=$$EZBLD^DIALOG(30810.52)
"RTN","XUS",9,0)
 W !!,"Volume set: ",$P(XUENV,U,4),"  UCI: ",XUCI,"  Device: ",$I W:$S('$D(IO("ZIO")):0,1:$I'=IO("ZIO")) " (",IO("ZIO"),")" W !
"RTN","XUS",10,0)
RESTART ;
"RTN","XUS",11,0)
 S XUM=$$SET2 G:XUM NO
"RTN","XUS",12,0)
 I $P(XU1,U,2)]"" S XUM=$$DEVPAS() I XUM G H:XUM<0,NO
"RTN","XUS",13,0)
 ;S PGM=$P(XOPT,U,8),XUA=$P(PGM,"[",1) I XUA]"" X XUEON G NEXT^XUS1
"RTN","XUS",14,0)
A S (XUSER(0),XUSER(1),XQUR)=""
"RTN","XUS",15,0)
 ;Check for locked IP/device.
"RTN","XUS",16,0)
 I $$LKCHECK^XUSTZIP() S XUM=7,XUFAC=$P(XOPT,U,2),XUHALT=1 G NO
"RTN","XUS",17,0)
 ;Auto Sign-on check
"RTN","XUS",18,0)
 S X=$$AUTOXUS^XUS1B() I X>0 S DUZ=X D USER(DUZ) W !!,">> Auto Sign-on: ",$P(XUSER(0),U)," <<<",! G B
"RTN","XUS",19,0)
 X XUEOFF S AV=$$ASKAV() X XUEON I AV="^;^" G H ;Get out
"RTN","XUS",20,0)
 I AV["MAIL-BOX",AV[";XMR" S (XUA,PGM)="XMR",XMCHAN=$P($P(AV,";")," ",2),DUZ=.5 G XMR^XUSCLEAN
"RTN","XUS",21,0)
 S XQUR=$P(AV,";",3)
"RTN","XUS",22,0)
 S DUZ=$$CHECKAV(AV) K AV
"RTN","XUS",23,0)
 S XUM=$$UVALID() G:XUM NO
"RTN","XUS",24,0)
B K XUF,%1 S XUF=0 X XUEON
"RTN","XUS",25,0)
 I DUZ D USER^XUS1 G:XUM NO
"RTN","XUS",26,0)
 I DUZ D SEC^XUS3:($D(^%ZIS(1,XUDEV,"TIME"))!$D(^(95))) G:XUM NO
"RTN","XUS",27,0)
 G NO:'DUZ
"RTN","XUS",28,0)
 S DTIME=$P(XOPT,U,10),X=$S(DUZ("BUF"):"",1:"NO-")_"TYPE-AHEAD" X:$D(^%ZOSF(X)) ^(X)
"RTN","XUS",29,0)
 D TT^XUS3:$G(XUTT)
"RTN","XUS",30,0)
 D CLRFAC^XUS3($G(IO("IP")))
"RTN","XUS",31,0)
PGM ;
"RTN","XUS",32,0)
 S Y=+$G(^%ZIS(1,XUDEV,201)) I Y>0,$$CHK S XQY=Y G OK
"RTN","XUS",33,0)
 S Y=+$G(^VA(200,DUZ,201)) I Y>0,$$CHK S XQY=Y G OK
"RTN","XUS",34,0)
 I $D(DUZ("ASH")) S Y=$O(^DIC(19,"B","XU NOP MENU",0)) I Y>0 S XQY=Y G OK ;rwf 403
"RTN","XUS",35,0)
 S XUM=16
"RTN","XUS",36,0)
 G NO
"RTN","XUS",37,0)
 ;
"RTN","XUS",38,0)
OK D CHEK^XQ83
"RTN","XUS",39,0)
 S (XUA,PGM)="XQ"
"RTN","XUS",40,0)
 G NEXT^XUS1
"RTN","XUS",41,0)
 ;
"RTN","XUS",42,0)
CHK() ;Check that option exeist and LOCK
"RTN","XUS",43,0)
 I $D(^DIC(19,Y,0)),$S($P(^(0),U,6)="":1,1:$D(^XUSEC($P(^(0),U,6),DUZ))) Q 1
"RTN","XUS",44,0)
 Q 0
"RTN","XUS",45,0)
 ;
"RTN","XUS",46,0)
LC S X=$$UP(X)
"RTN","XUS",47,0)
 Q
"RTN","XUS",48,0)
UP(%) Q $TR(%,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","XUS",49,0)
 ;
"RTN","XUS",50,0)
FAC ;Failed access
"RTN","XUS",51,0)
 S:'DUZ XUF(.1)=$E(%1)
"RTN","XUS",52,0)
 S:XUF=2 XUF(.2)=XUF(.2)+1,XUF(XUF(.2))=%1 S %1="" Q
"RTN","XUS",53,0)
 Q
"RTN","XUS",54,0)
NO ;Tell why didn't get on
"RTN","XUS",55,0)
 S X=$$NO^XUS3() G RESTART:'X ;fall into exit
"RTN","XUS",56,0)
H ;Exit point for all applications
"RTN","XUS",57,0)
C ;CLOSE
"RTN","XUS",58,0)
 G ^XUSCLEAN
"RTN","XUS",59,0)
 ;
"RTN","XUS",60,0)
ON X ^%ZOSF("EON") Q
"RTN","XUS",61,0)
 ;
"RTN","XUS",62,0)
ASKAV(PRE) ;Ask and return Access;Verify code, Turn off echo before calling
"RTN","XUS",63,0)
 N X,Y S PRE=$G(PRE)
"RTN","XUS",64,0)
 F  W !,PRE,XUSTMP(51) S X=$$ACCEPT S:X="^" X="^;^" Q:$L(X)
"RTN","XUS",65,0)
 S X=$TR(X,$C(9),";") ;Convert TAB to ; to match GUI.
"RTN","XUS",66,0)
 I $P(X," ")="MAIL-BOX" S X=X_";XMR"
"RTN","XUS",67,0)
 I $E(X,1,7)="~~TOK~~" Q X ;Use CCOW token
"RTN","XUS",68,0)
 I '$L($P(X,";",2)) W !,PRE,XUSTMP(52) S Y=$$ACCEPT S:Y="^" X="^;" S $P(X,";",2)=Y
"RTN","XUS",69,0)
 Q X
"RTN","XUS",70,0)
 ;
"RTN","XUS",71,0)
 ;Timeout used by XUSTZ call.
"RTN","XUS",72,0)
ACCEPT(TO) ;Read A/V and echo '*' char.
"RTN","XUS",73,0)
 ;Have the Read write to flush the buffer on some systems
"RTN","XUS",74,0)
 N C,A,E K DUOUT S A="",TO=$G(TO,60),E=0
"RTN","XUS",75,0)
 F  D  Q:E
"RTN","XUS",76,0)
 . R "",*C:TO S:('$T) DUOUT=1 S:('$T)!(C=94) A="^"
"RTN","XUS",77,0)
 . I (A="^")!(C=13)!($L(A)>60) S E=1 Q
"RTN","XUS",78,0)
 . I C=127 Q:'$L(A)  S A=$E(A,1,$L(A)-1) W $C(8,32,8) Q
"RTN","XUS",79,0)
 . S A=A_$C(C) W *42
"RTN","XUS",80,0)
 . Q
"RTN","XUS",81,0)
 Q A
"RTN","XUS",82,0)
 ; 
"RTN","XUS",83,0)
CHECKAV(X1) ;Check A/V code return DUZ or Zero. (Called from XUSRB)
"RTN","XUS",84,0)
 N %,%1,X,Y,IEN,DA,DIK
"RTN","XUS",85,0)
 S IEN=0
"RTN","XUS",86,0)
 ;Start CCOW
"RTN","XUS",87,0)
 I $E(X1,1,7)="~~TOK~~" D  Q:IEN>0 IEN
"RTN","XUS",88,0)
 . I $E(X1,8,9)="~1" S IEN=$$CHKASH^XUSRB4($E(X1,8,255))
"RTN","XUS",89,0)
 . I $E(X1,8,9)="~2" S IEN=$$CHKCCOW^XUSRB4($E(X1,8,255))
"RTN","XUS",90,0)
 . Q
"RTN","XUS",91,0)
 ;End CCOW
"RTN","XUS",92,0)
 S X1=$$UP(X1) S:X1[":" XUTT=1,X1=$TR(X1,":")
"RTN","XUS",93,0)
 S X=$P(X1,";") Q:X="^" -1 S:XUF %1="Access: "_X
"RTN","XUS",94,0)
 Q:X'?1.20ANP 0
"RTN","XUS",95,0)
 S X=$$EN^XUSHSH(X) I '$D(^VA(200,"A",X)) D LBAV Q 0
"RTN","XUS",96,0)
 S %1="",IEN=$O(^VA(200,"A",X,0)),XUF(.3)=IEN D USER(IEN)
"RTN","XUS",97,0)
 S X=$P(X1,";",2) S:XUF %1="Verify: "_X S X=$$EN^XUSHSH(X)
"RTN","XUS",98,0)
 I $P(XUSER(1),"^",2)'=X D LBAV Q 0
"RTN","XUS",99,0)
 I $G(XUFAC(1)) S DIK="^XUSEC(4,",DA=XUFAC(1) D ^DIK
"RTN","XUS",100,0)
 Q IEN
"RTN","XUS",101,0)
LBAV ;Log Bad AV
"RTN","XUS",102,0)
 D:XUF FAC
"RTN","XUS",103,0)
 I IEN S X=$P($G(^VA(200,IEN,1.1)),U,2)+1,$P(^(1.1),"^",2)=X
"RTN","XUS",104,0)
 Q
"RTN","XUS",105,0)
 ;
"RTN","XUS",106,0)
USER(IX) ;Build XUSER
"RTN","XUS",107,0)
 S XUSER(0)=$G(^VA(200,+IX,0)),XUSER(1)=$G(^(.1)),XUSER(1.1)=$G(^(1.1))
"RTN","XUS",108,0)
 Q
"RTN","XUS",109,0)
 ;
"RTN","XUS",110,0)
XUVOL ;Setup XUENV, XUCI,XQVOL,XUVOL
"RTN","XUS",111,0)
 S U="^" D GETENV^%ZOSV S XUENV=Y,XUCI=$P(Y,U,1),XQVOL=$P(Y,U,2)
"RTN","XUS",112,0)
 S X=$O(^XTV(8989.3,1,4,"B",XQVOL,0)),XUVOL=$S(X>0:^XTV(8989.3,1,4,X,0),1:XQVOL_"^y^1")
"RTN","XUS",113,0)
 Q
"RTN","XUS",114,0)
 ;
"RTN","XUS",115,0)
XOPT ;Setup initial XOPT
"RTN","XUS",116,0)
 S XOPT=$S($D(^XTV(8989.3,1,"XUS")):^("XUS"),1:"")
"RTN","XUS",117,0)
 F I=2:1:15 I $P(XOPT,U,I)="" S $P(XOPT,U,I)=$P("^5^900^1^1^^^^1^300^^^^N^90",U,I)
"RTN","XUS",118,0)
 Q
"RTN","XUS",119,0)
 ;
"RTN","XUS",120,0)
SET1(FLAG) ;Setup parameters (also called from XUSRB)
"RTN","XUS",121,0)
 N %
"RTN","XUS",122,0)
 S U="^",XUEON=^%ZOSF("EON"),XUEOFF=^("EOFF")
"RTN","XUS",123,0)
 D XUVOL,XOPT S DUZ("LANG")=$P(XOPT,U,7) S:$P(XUVOL,U,6)="y" XRTL=XUCI_","_XQVOL
"RTN","XUS",124,0)
 K ^XUTL("XQ",$J) S XUF=0,XUDEV=0,DUZ=0,DUZ(0)="@",IOS=0,ION=""
"RTN","XUS",125,0)
 I FLAG S %ZIS="L",IOP="HOME" D ^%ZIS Q:POP
"RTN","XUS",126,0)
 S XUDEV=IOS,XUIOP=ION D:$D(XRTL) T0^%ZOSV
"RTN","XUS",127,0)
 D GETFAC^XUS3($G(IO("IP")))
"RTN","XUS",128,0)
 S %=$P(XOPT,U,14)
"RTN","XUS",129,0)
 I "N"'[% D
"RTN","XUS",130,0)
 . S XUF=(%["R")+1,XUF(.1)="",XUF(.2)=0,XUF(.3)=0
"RTN","XUS",131,0)
 . I %["D" S:$D(^XTV(8989.3,1,4.33,"B",XUDEV))[0 XUF=0
"RTN","XUS",132,0)
 Q
"RTN","XUS",133,0)
SET2() ;EF. Return error code (also called from XUSRB)
"RTN","XUS",134,0)
 N %,X
"RTN","XUS",135,0)
 S XUNOW=$$HTFM^XLFDT($H),DT=$P(XUNOW,".")
"RTN","XUS",136,0)
 K DUZ,XUSER
"RTN","XUS",137,0)
 S (DUZ,DUZ(2))=0,(DUZ(0),DUZ("AG"),XUSER(0),XUSER(1),XUTT,%UCI)=""
"RTN","XUS",138,0)
 S %=$$INHIBIT^XUSRB() I %>0 Q %
"RTN","XUS",139,0)
 S X=$G(^%ZIS(1,XUDEV,"XUS")),XU1=$G(^(1))
"RTN","XUS",140,0)
 I $L(X) F I=1:1:15 I $L($P(X,U,I)) S $P(XOPT,U,I)=$P(X,U,I)
"RTN","XUS",141,0)
 S DTIME=600
"RTN","XUS",142,0)
 I '$P(XOPT,U,11),$D(^%ZIS(1,XUDEV,90)),^(90)>2800000,^(90)'>DT Q 8
"RTN","XUS",143,0)
 I $D(XRT0) S XRTN="XUS" D T1^%ZOSV
"RTN","XUS",144,0)
 Q 0
"RTN","XUS",145,0)
 ;
"RTN","XUS",146,0)
UVALID() ;EF. Is it valid for this user to sign on?
"RTN","XUS",147,0)
 I DUZ'>0 Q 4
"RTN","XUS",148,0)
 I $P(XUSER(1.1),U,5),$P(XUSER(1.1),U,5)>XUNOW S XUM(0)=$$FMTE^XLFDT($P(XUSER(1.1),U,5),"2PM") Q 18 ;User locked until
"RTN","XUS",149,0)
 I $P(XUSER(0),U,11),$P(XUSER(0),U,11)'>DT Q 11 ;Access Terminated
"RTN","XUS",150,0)
 I $P(XUSER(0),U,7) Q 5 ;Disuser flag set
"RTN","XUS",151,0)
 I '$L($P(XUSER(1),U,2)) Q 21 ;419
"RTN","XUS",152,0)
 Q 0
"RTN","XUS",153,0)
 ;
"RTN","XUS",154,0)
DEVPAS() ;EF. Ask device password
"RTN","XUS",155,0)
 X XUEOFF W !,"DEVICE PASSWORD: " R X:60 X XUEON
"RTN","XUS",156,0)
 S X=$E(X,1,30) S:'$T X="^" D LC Q:X["^" -1 I $P(XU1,U,2)'=X S:XUF %1="Device: "_X D:XUF FAC Q 6
"RTN","XUS",157,0)
 Q 0
"RTN","XUS",158,0)
 ;
"RTN","XUS1")
0^6^B25338963^B25051927
"RTN","XUS1",1,0)
XUS1 ;SF-ISC/STAFF - SIGNON ;05/04/2005  15:37
"RTN","XUS1",2,0)
 ;;8.0;KERNEL;**9,59,111,165,150,252,265,419**;Jul 10, 1995;Build 5
"RTN","XUS1",3,0)
 ;User setup
"RTN","XUS1",4,0)
USER ;
"RTN","XUS1",5,0)
 K XUTEXT S XUM=$$USER^XUS1A(),$Y=0
"RTN","XUS1",6,0)
 ;Show post sign-on text
"RTN","XUS1",7,0)
 F I=0:0 S I=$O(XUTEXT(I)) Q:I'>0  D:$Y>20  W:$E(XUTEXT(I),1)="!" ! W $E(XUTEXT(I),2,999)
"RTN","XUS1",8,0)
 . N DIR S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR W @IOF Q
"RTN","XUS1",9,0)
 ;if XUM=9 multi sign-on NOT allowed
"RTN","XUS1",10,0)
 I XUM=9 W !!,?8,$$EZBLD^DIALOG(30810.45)
"RTN","XUS1",11,0)
 Q:XUM  ;User can't sign-on.
"RTN","XUS1",12,0)
SET ;
"RTN","XUS1",13,0)
 S Y=$$CHKDIV() I $P(Y,U,2)>0,$D(^DIC(4,0)) D ASKDIV
"RTN","XUS1",14,0)
 S DUZ(2)=+Y D DUZ^XUS1A
"RTN","XUS1",15,0)
 ;Check verify code
"RTN","XUS1",16,0)
 I $$VCHG D CVC^XUS2 G:$D(DUOUT) H^XUS
"RTN","XUS1",17,0)
 S:$P(XOPT,"^",5) XUTT=1 ;Ask Device
"RTN","XUS1",18,0)
 D ENQ ;Inquire to Terminal Type
"RTN","XUS1",19,0)
 Q
"RTN","XUS1",20,0)
 ;
"RTN","XUS1",21,0)
VCHG() ;Check if the Verify code needs to be changed
"RTN","XUS1",22,0)
 I $D(DUZ("ASH")) Q 0 ;rwf 403
"RTN","XUS1",23,0)
 D:'$D(XUSER) USER^XUS(DUZ)
"RTN","XUS1",24,0)
 Q:'$L($P(XUSER(1),U,2)) 1 ;Null VC
"RTN","XUS1",25,0)
 I $$BROKER^XWBLIB Q:$P(XUSER(0),U,8)=1 0 ;VC never expires, only for BROKER
"RTN","XUS1",26,0)
 Q (XUSER(1)+$P(XOPT,U,15))'>$H ;Time to change
"RTN","XUS1",27,0)
 ;
"RTN","XUS1",28,0)
ASKDIV ;Ask the user for the Division, return Y
"RTN","XUS1",29,0)
 N X
"RTN","XUS1",30,0)
 S DIC="^VA(200,DUZ,2,",DIC(0)="AEMQ",DIC("P")="200.02P",X=$O(^VA(200,DUZ,2,"AX1",1,0)) S:X>0 DIC("B")=$P($$NS^XUAF4(X),U)
"RTN","XUS1",31,0)
 D ^DIC I Y'>0 W !,*7,"You must select one." G ASKDIV
"RTN","XUS1",32,0)
 Q
"RTN","XUS1",33,0)
 ;
"RTN","XUS1",34,0)
CHKDIV(CD) ;ef,sr Check if user needs to select Division.
"RTN","XUS1",35,0)
 N %,%1,%2,%3,%4
"RTN","XUS1",36,0)
 S %=$O(^VA(200,DUZ,2,0)),%1=$O(^(%))
"RTN","XUS1",37,0)
 I %1,$D(CD) D
"RTN","XUS1",38,0)
 . S %2=0,%3=0,CD=0
"RTN","XUS1",39,0)
 . F  S %2=$O(^VA(200,DUZ,2,%2)) Q:%2'>0  S %4=^(%2,0),%3=%3+1,CD(%3)=%2_"^"_$$NS^XUAF4(%2)_$S($P(%4,"^",2):"^1",1:"")
"RTN","XUS1",40,0)
 . S CD=%3
"RTN","XUS1",41,0)
 Q %_"^"_%1
"RTN","XUS1",42,0)
 ;
"RTN","XUS1",43,0)
ENQ ;Get terminal type
"RTN","XUS1",44,0)
 S XUT1="" I XUTT X XUEOFF R X:0 X ^%ZOSF("TYPE-AHEAD") W $C(27,91,99) R *X:2 I X=27 F  R X#1:2 S XUT1=XUT1_X Q:'$T!(X="c")
"RTN","XUS1",45,0)
 I XUTT,(XUT1'["[") R X:0 S XUT1="" W *5 R *X:2 R:$T XUT1:2 S X=$S(X=6:"C-WYSE 75",1:$C(X)_XUT1),XUT1=""
"RTN","XUS1",46,0)
 X XUEON I XUTT,XUT1["[" S Y=$O(^%ZIS(3.22,"B",XUT1,0)) I Y>0 S X=$P($G(^%ZIS(3.22,Y,0)),"^",2)
"RTN","XUS1",47,0)
 I X?1.ANP S DIC="^%ZIS(2,",DIC(0)="MO" D ^DIC I Y>0 S XUIOP(1)=$P(Y,U,2),$P(XUIOP,";",2)=XUIOP(1),^VA(200,DUZ,1.2)=+Y
"RTN","XUS1",48,0)
 I '$D(XUIOP(1)),$D(^VA(200,DUZ,1.2)) S X=+^(1.2) I X>0,$D(^%ZIS(2,X,0)) S $P(XUIOP,";",2)=$P(^(0),U)
"RTN","XUS1",49,0)
 Q
"RTN","XUS1",50,0)
 ;
"RTN","XUS1",51,0)
NEXT ;Jump to the next routine
"RTN","XUS1",52,0)
 S IOP=XUIOP D ^%ZIS D SAVE ;Save off device/user info
"RTN","XUS1",53,0)
 S X=$G(^DISV(DUZ)) ;Add kill by session or day here
"RTN","XUS1",54,0)
 S ^DISV(DUZ)=$H
"RTN","XUS1",55,0)
 ;Do we need UCI jump anymore?
"RTN","XUS1",56,0)
 S X=%UCI,N1=XUCI I PGM["[" S X=$P(PGM,"[",2,4),PGM=$P(PGM,"[",1)
"RTN","XUS1",57,0)
 S:X["""" X=$P(X,"""",2) S:X?.E1"]"&(X'["[") X=$E(X,1,$L(X)-1) S XUM=14,XUM(0)=X
"RTN","XUS1",58,0)
 S %UCI=X I "PRODMGR"'[X,$D(^%ZOSF("UCICHECK")) X ^("UCICHECK") G NO:Y="" S:N1=Y %UCI=""
"RTN","XUS1",59,0)
 S XUM=15,XUM(0)=PGM G NO:PGM'?1AP.AN
"RTN","XUS1",60,0)
 G NO:":"_XUA_":"'[(":"_PGM_":")
"RTN","XUS1",61,0)
 D AUDIT
"RTN","XUS1",62,0)
 S X=$S($D(^VA(200,DUZ,0)):$P($P(^(0),U),","),1:"Unk"),X=$E(X,1,10)_"_"_($J#10000) D SETENV^%ZOSV
"RTN","XUS1",63,0)
 ;S X=$P(XOPT,U,16) X:X ^%ZOSF("PRIORITY")
"RTN","XUS1",64,0)
 D LOG:DUZ,KILL
"RTN","XUS1",65,0)
 I %UCI]"" K ^XUTL("XQ",$J) S $P(^VA(200,DUZ,1.1),U,3)=0 G GO^%XUCI
"RTN","XUS1",66,0)
 K ^XUTL("OR",$J),^UTILITY($J),%UCI
"RTN","XUS1",67,0)
 G @(U_PGM)
"RTN","XUS1",68,0)
 ;
"RTN","XUS1",69,0)
SAVE ;
"RTN","XUS1",70,0)
 S X="DUZ" F  S X=$Q(@X) Q:X=""  I $D(@X) S ^XUTL("XQ",$J,$TR(X,""""))=@X
"RTN","XUS1",71,0)
 F X="DUZ","IO","IO(""IP"")","IO(""CLNM"")","XQVOL" I $D(@X) S ^XUTL("XQ",$J,X)=@X
"RTN","XUS1",72,0)
 D SAVEVAR^%ZIS ;Save the HOME device variables
"RTN","XUS1",73,0)
 Q
"RTN","XUS1",74,0)
 ;
"RTN","XUS1",75,0)
LOG ;used by R/S and Broker
"RTN","XUS1",76,0)
 N XP1,XP2
"RTN","XUS1",77,0)
 S XP1=$$SLOG($P(XUVOL,U,1),,XUDEV,XUCI,$P(XUENV,U,3))
"RTN","XUS1",78,0)
 S %=$$COOKIE($P(^VA(200,DUZ,0),U),XP1) I $L(%) S XQXFLG("ZEBRA")=XP1_"~"_%,$P(^XUSEC(0,XP1,0),U,13)=% L +^XWB("SESSION",XQXFLG("ZEBRA")):60
"RTN","XUS1",79,0)
 S XP2=$G(^VA(200,DUZ,1.1)),XQXFLG("LLOG")=$P(XP2,U) ;Save for LOGIN templates
"RTN","XUS1",80,0)
 S $P(XP2,"^",1,3)=XP1_"^0^1",$P(XP2,U,5)="" ;Set last Sign-on
"RTN","XUS1",81,0)
 S ^VA(200,DUZ,1.1)=XP2
"RTN","XUS1",82,0)
 Q
"RTN","XUS1",83,0)
 ;
"RTN","XUS1",84,0)
 ;The other parameters are in the symbol table with known names.
"RTN","XUS1",85,0)
 ;P1=DUZ,P2=$I,P3=$J,P4=EXIT D/T,P5=VOLUME,P6=TASKMAN,P7=XUDEV,P8=UCI,P9=ZIO,P10=NODE,P11=IP,P12=CLNM,P13=HANDLE,P14=REMOTE SITE,P15=REMOTE IEN
"RTN","XUS1",86,0)
SLOG(P5,P6,P7,P8,P10,P14,P15) ;
"RTN","XUS1",87,0)
 N %,I,DA,DIK,XL1 S XL1=$$NOW^XLFDT
"RTN","XUS1",88,0)
 S P5=$G(P5),P6=$G(P6),P7=$G(P7),P8=$G(P8),P10=$G(P10)
"RTN","XUS1",89,0)
 F I=XL1:.00000001 L +^XUSEC(0,I):1 Q:'$D(^XUSEC(0,I))  L -^XUSEC(0,I)
"RTN","XUS1",90,0)
 S ^XUSEC(0,I,0)=DUZ_"^"_$I_"^"_$J_"^^"_P5_"^"_P6_"^"_P7_"^"_P8_"^"_$G(IO("ZIO"))_"^"_P10_"^"_$G(IO("IP"))_"^"_$G(IO("CLNM"))_$S($D(P14):"^^"_P14_"^"_P15,1:"")
"RTN","XUS1",91,0)
 L -^XUSEC(0,I)
"RTN","XUS1",92,0)
 S $P(^XUSEC(0,0),"^",3,4)=I_"^"_(1+$P(^XUSEC(0,0),"^",4))
"RTN","XUS1",93,0)
 S (XL1,DA)=I,DIK="^XUSEC(0," D IX^DIK ;index new entry
"RTN","XUS1",94,0)
 S ^XUTL("XQ",$J,0)=XL1 ;save for sign-off
"RTN","XUS1",95,0)
 Q XL1
"RTN","XUS1",96,0)
 ;
"RTN","XUS1",97,0)
COOKIE(J1,J2) ;Call VAdeamon for a cookie
"RTN","XUS1",98,0)
 N ZZ,%
"RTN","XUS1",99,0)
 I $G(XQXFLG("ZEBRA"))=-1 K XQXFLG("ZEBRA") Q "" ;Disabled
"RTN","XUS1",100,0)
 Q:$G(IO("IP"))="" "" ;Not using Telnet
"RTN","XUS1",101,0)
 ;
"RTN","XUS1",102,0)
 S %=$$CMD^XWBCAGNT(.ZZ,"XWB CREATE HANDLE",J1_"^"_J2) Q:'% ""
"RTN","XUS1",103,0)
 Q $G(ZZ(1))
"RTN","XUS1",104,0)
 ;
"RTN","XUS1",105,0)
AUDIT ;Set-up Audit info
"RTN","XUS1",106,0)
 N I,I1,I2
"RTN","XUS1",107,0)
 S I=$G(^XTV(8989.3,1,19)),I1=$P(I,U),I2=$P(I,U,2) Q:"asu"'[I1  I (I2>XUNOW)!($P(I,U,3)<XUNOW) Q
"RTN","XUS1",108,0)
 I "au"[I1 S:(I1="a")!($D(^XTV(8989.3,1,19.3,"B",DUZ))>1) XQAUDIT=1 Q
"RTN","XUS1",109,0)
 S XQAUDIT="" F I=0:0 S I=$O(^XTV(8989.3,1,19.1,"B",I)) Q:I'>0!($L(XQAUDIT)>245)  S XQAUDIT=XQAUDIT_"2^"_I_U
"RTN","XUS1",110,0)
 S I1="" F I=0:0 S I1=$O(^XTV(8989.3,1,19.2,"B",I1)) Q:I1']""!($L(XQAUDIT)>245)  S XQAUDIT=XQAUDIT_"3^"_I1_U
"RTN","XUS1",111,0)
 Q
"RTN","XUS1",112,0)
 ;
"RTN","XUS1",113,0)
DD(Y) Q $$FMTE^XLFDT(Y,1)
"RTN","XUS1",114,0)
 ;
"RTN","XUS1",115,0)
KILL N %UCI,PGM,U,XQUR,XMCHAN G KILL1^XUSCLEAN
"RTN","XUS1",116,0)
 Q
"RTN","XUS1",117,0)
NO G NO^XUS
"RTN","XUS2")
0^2^B47237337^B39049783
"RTN","XUS2",1,0)
XUS2 ;SF/RWF - TO CHECK OR RETURN USER ATTRIBUTES ;05/15/2006
"RTN","XUS2",2,0)
 ;;8.0;KERNEL;**59,180,313,419**;Jul 10, 1995;Build 5
"RTN","XUS2",3,0)
 Q
"RTN","XUS2",4,0)
 ;
"RTN","XUS2",5,0)
ACCED ; ACCESS CODE EDIT from DD
"RTN","XUS2",6,0)
 I "Nn"[$E(X,1) S X="" Q
"RTN","XUS2",7,0)
 I "Yy"'[$E(X,1) K X Q
"RTN","XUS2",8,0)
 N DIR,DIR0,XUAUTO,XUK
"RTN","XUS2",9,0)
 S XUAUTO=($P($G(^XTV(8989.3,1,3)),U,1)="y"),XUH=""
"RTN","XUS2",10,0)
AC1 D CLR,AAUTO:XUAUTO,AASK:'XUAUTO G OUT:$D(DIRUT) D REASK G OUT:$D(DIRUT),AC1:'XUK D CLR,AST(XUH)
"RTN","XUS2",11,0)
 G OUT
"RTN","XUS2",12,0)
 ;
"RTN","XUS2",13,0)
AASK ;Ask for Access code
"RTN","XUS2",14,0)
 N X,XUU,XUEX X ^%ZOSF("EOFF")
"RTN","XUS2",15,0)
 S XUEX=0
"RTN","XUS2",16,0)
 F  D AASK1 Q:XUEX!($D(DIRUT))
"RTN","XUS2",17,0)
 Q
"RTN","XUS2",18,0)
 ;
"RTN","XUS2",19,0)
AASK1 ;
"RTN","XUS2",20,0)
 W "Enter a new ACCESS CODE <Hidden>: " D GET Q:$D(DIRUT)
"RTN","XUS2",21,0)
 I X="@" D DEL D:Y'=1 DIRUT S XUH="",XUEX=1 Q
"RTN","XUS2",22,0)
 I X[$C(34)!(X[";")!(X["^")!(X[":")!(X'?.UNP)!($L(X)>20)!($L(X)<6)!(X="MAIL-BOX") D CLR W $C(7),$$AVHLPTXT(1) D AHELP Q
"RTN","XUS2",23,0)
 I 'XUAUTO,((X?6.20A)!(X?6.20N)) D CLR W $C(7),$$AVHLPTXT(1),! Q
"RTN","XUS2",24,0)
 S XUU=X,X=$$EN^XUSHSH(X),XUH=X,XMB(1)=$O(^VA(200,"A",XUH,0)) I XMB(1),XMB(1)'=DA S XMB="XUS ACCESS CODE VIOLATION",XMB(1)=$P(^VA(200,XMB(1),0),"^"),XMDUN="Security" D ^XMB
"RTN","XUS2",25,0)
 I $D(^VA(200,"AOLD",XUH))!$D(^VA(200,"A",XUH)) D CLR W $C(7),"This has been used previously as an ACCESS CODE.",! Q
"RTN","XUS2",26,0)
 S XUEX=1 ;Now we can quit
"RTN","XUS2",27,0)
 Q
"RTN","XUS2",28,0)
 ;
"RTN","XUS2",29,0)
REASK S XUK=1 Q:XUH=""  D CLR X ^%ZOSF("EOFF")
"RTN","XUS2",30,0)
 F XUK=3:-1:1 W "Please re-type the new code to show that I have it right: " D GET G:$D(DIRUT) DIRUT D ^XUSHSH Q:(XUH=X)  D CLR W "This doesn't match.  Try again!",!,$C(7)
"RTN","XUS2",31,0)
 S:XUH'=X XUK=0
"RTN","XUS2",32,0)
 Q
"RTN","XUS2",33,0)
 ;
"RTN","XUS2",34,0)
AST(XUH) ;Change ACCESS CODE and index.
"RTN","XUS2",35,0)
 W "OK, Access code has been changed!"
"RTN","XUS2",36,0)
 N FDA,IEN,ERR
"RTN","XUS2",37,0)
 S IEN=DA_","
"RTN","XUS2",38,0)
 S FDA(200,IEN,2)=XUH D FILE^DIE("","FDA","ERR")
"RTN","XUS2",39,0)
 W !,"The VERIFY CODE has been deleted as a security measure.",!,"You will need to enter a new VERIFY code so the user can sign-on.",$C(7)
"RTN","XUS2",40,0)
 D VST("",1)
"RTN","XUS2",41,0)
 I $D(^XMB(3.7,DA,0))[0 S Y=DA D NEW^XM ;Make sure has a Mailbox
"RTN","XUS2",42,0)
 Q
"RTN","XUS2",43,0)
 ;
"RTN","XUS2",44,0)
GET ;Get the user input and convert case.
"RTN","XUS2",45,0)
 S X=$$ACCEPT^XUS I (X["^")!('$L(X)) D DIRUT
"RTN","XUS2",46,0)
 S X=$$UP^XLFSTR(X)
"RTN","XUS2",47,0)
 Q
"RTN","XUS2",48,0)
 ;
"RTN","XUS2",49,0)
DIRUT S DIRUT=1
"RTN","XUS2",50,0)
 Q
"RTN","XUS2",51,0)
 ;
"RTN","XUS2",52,0)
CLR ;New line or Clear screenman area
"RTN","XUS2",53,0)
 I '$D(DDS) W ! Q
"RTN","XUS2",54,0)
 N DX,DY
"RTN","XUS2",55,0)
 D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X IOXY
"RTN","XUS2",56,0)
 Q
"RTN","XUS2",57,0)
 ;
"RTN","XUS2",58,0)
NEWCODE D REASK I XUK W !,"OK, remember this code for next time!"
"RTN","XUS2",59,0)
 G OUT
"RTN","XUS2",60,0)
 ;
"RTN","XUS2",61,0)
CVC ;From XUS1
"RTN","XUS2",62,0)
 N DA,X
"RTN","XUS2",63,0)
 S DA=DUZ,X="Y"
"RTN","XUS2",64,0)
 W !,"You must change your VERIFY CODE at this time."
"RTN","XUS2",65,0)
 ;Fall into next code
"RTN","XUS2",66,0)
VERED ; VERIFY CODE EDIT From DD
"RTN","XUS2",67,0)
 N DIR,DIR0,XUAUTO
"RTN","XUS2",68,0)
 I "Nn"[$E(X,1) S X="" Q
"RTN","XUS2",69,0)
 I "Yy"'[$E(X,1) K X Q
"RTN","XUS2",70,0)
 S XUH="",XUAUTO=($P($G(^XTV(8989.3,1,3)),U,3)="y") S:DUZ=DA XUAUTO="n" ;Auto only for admin
"RTN","XUS2",71,0)
VC1 D CLR,VASK:'XUAUTO,VAUTO:XUAUTO G OUT:$D(DIRUT) D REASK G OUT:$D(DIRUT),VC1:'XUK D CLR,VST(XUH,1)
"RTN","XUS2",72,0)
 D CALL^XUSERP(DA,2)
"RTN","XUS2",73,0)
 G OUT
"RTN","XUS2",74,0)
 ;
"RTN","XUS2",75,0)
VASK ;Ask for Verify Code
"RTN","XUS2",76,0)
 N X,XUU X ^%ZOSF("EOFF") G:'$$CHKCUR() DIRUT D CLR
"RTN","XUS2",77,0)
VASK1 W "Enter a new VERIFY CODE: " D GET Q:$D(DIRUT)
"RTN","XUS2",78,0)
 I '$D(XUNC),(X="@") D DEL G:Y'=1 DIRUT S XUH="" Q
"RTN","XUS2",79,0)
 D CLR S XUU=X,X=$$EN^XUSHSH(X),XUH=X,Y=$$VCHK(XUU,XUH) I +Y W $C(7),$P(Y,U,2,9),! D:+Y=1 VHELP G VASK1
"RTN","XUS2",80,0)
 Q
"RTN","XUS2",81,0)
 ;
"RTN","XUS2",82,0)
VCHK(S,EC) ;Call with String and Encripted versions
"RTN","XUS2",83,0)
 ;Updated per VHA directive 6210 Strong Passwords
"RTN","XUS2",84,0)
 N PUNC,NA S PUNC="~`!@#$%&*()_-+=|\{}[]'<>,.?/"
"RTN","XUS2",85,0)
 S NA("FILE")=200,NA("FIELD")=.01,NA("IENS")=DA_",",NA=$$HLNAME^XLFNAME(.NA)
"RTN","XUS2",86,0)
 I ($L(S)<8)!($L(S)>20)!(S'?.UNP)!(S[";")!(S["^")!(S[":") Q "1^"_$$AVHLPTXT
"RTN","XUS2",87,0)
 I (S?8.20A)!(S?8.20N)!(S?8.20P)!(S?8.20AN)!(S?8.20AP)!(S?8.20NP) Q "2^VERIFY CODE must be a mix of alpha and numerics and punctuation."
"RTN","XUS2",88,0)
 I $D(^VA(200,DA,.1)),EC=$P(^(.1),U,2) Q "3^This code is the same as the current one."
"RTN","XUS2",89,0)
 I $D(^VA(200,DA,"VOLD",EC)) Q "4^This has been used previously as the VERIFY CODE."
"RTN","XUS2",90,0)
 I EC=$P(^VA(200,DA,0),U,3) Q "5^VERIFY CODE must be different than the ACCESS CODE."
"RTN","XUS2",91,0)
 I S[$P(NA,"^")!(S[$P(NA,"^",2)) Q "6^Name cannot be part of code."
"RTN","XUS2",92,0)
 Q 0
"RTN","XUS2",93,0)
 ;
"RTN","XUS2",94,0)
VST(XUH,%) ;
"RTN","XUS2",95,0)
 W:$L(XUH)&% !,"OK, Verify code has been changed!"
"RTN","XUS2",96,0)
 N FDA,IEN,ERR S IEN=DA_","
"RTN","XUS2",97,0)
 S:XUH="" XUH="@" ;11.2 get triggerd
"RTN","XUS2",98,0)
 S FDA(200,IEN,11)=XUH D FILE^DIE("","FDA","ERR")
"RTN","XUS2",99,0)
 I $D(ERR) D ^%ZTER
"RTN","XUS2",100,0)
 S:DA=DUZ DUZ("NEWCODE")=XUH Q
"RTN","XUS2",101,0)
 ;
"RTN","XUS2",102,0)
DEL ;
"RTN","XUS2",103,0)
 X ^%ZOSF("EON") W $C(7) S DIR(0)="Y",DIR("A")="Sure you want to delete" D ^DIR I Y'=1 W:$X>55 !?9 W $C(7),"  <Nothing Deleted>"
"RTN","XUS2",104,0)
 Q
"RTN","XUS2",105,0)
 ;
"RTN","XUS2",106,0)
AAUTO ;Auto-get Access codes
"RTN","XUS2",107,0)
 N XUK,Y
"RTN","XUS2",108,0)
 X ^%ZOSF("EON") F XUK=1:1:3 D AGEN Q:(Y=1)!($D(DIRUT))
"RTN","XUS2",109,0)
 Q
"RTN","XUS2",110,0)
 ;
"RTN","XUS2",111,0)
AGEN ;Generate a ACCESS code
"RTN","XUS2",112,0)
 S XUU=$$AC^XUS4 S X=$$EN^XUSHSH(XUU),XUH=X I $D(^VA(200,"A",X))!$D(^VA(200,"AOLD",X)) G AGEN
"RTN","XUS2",113,0)
 D CLR W "The new ACCESS CODE is: ",XUU,"   This is ",XUK," of 3 tries."
"RTN","XUS2",114,0)
 D YN
"RTN","XUS2",115,0)
 Q
"RTN","XUS2",116,0)
 ;
"RTN","XUS2",117,0)
AHELP S XUU=$$AC^XUS4 S X=$$EN^XUSHSH(XUU) I $D(^VA(200,"A",X))!$D(^VA(200,"AOLD",X)) G AHELP
"RTN","XUS2",118,0)
 W !,"Here is an example of an acceptable Access Code: ",XUU,!
"RTN","XUS2",119,0)
 Q
"RTN","XUS2",120,0)
 ;
"RTN","XUS2",121,0)
VHELP S XUU=$$VC^XUS4 S X=$$EN^XUSHSH(XUU) I ($P($G(^VA(200,DA,0)),U,3)=X)!$D(^VA(200,DA,"VOLD",X)) G VHELP
"RTN","XUS2",122,0)
 W !,"Here is an example of an acceptable Verify Code: ",XUU,!
"RTN","XUS2",123,0)
 Q
"RTN","XUS2",124,0)
 ;
"RTN","XUS2",125,0)
VAUTO ;Auto-get Access codes
"RTN","XUS2",126,0)
 N XUK
"RTN","XUS2",127,0)
 X ^%ZOSF("EON") F XUK=1:1:3 D VGEN Q:(Y=1)!($D(DIRUT))
"RTN","XUS2",128,0)
 Q
"RTN","XUS2",129,0)
 ;
"RTN","XUS2",130,0)
VGEN ;Generate a VERIFY code
"RTN","XUS2",131,0)
 S XUU=$$VC^XUS4 S X=$$EN^XUSHSH(XUU),XUH=X I ($P($G(^VA(200,DA,0)),U,3)=X)!$D(^VA(200,DA,"VOLD",X)) G VGEN
"RTN","XUS2",132,0)
 D CLR W "The new VERIFY CODE is: ",XUU,"   This is ",XUK," of 3 tries."
"RTN","XUS2",133,0)
 D YN
"RTN","XUS2",134,0)
 Q
"RTN","XUS2",135,0)
YN ;Ask if want to keep
"RTN","XUS2",136,0)
 N DIR
"RTN","XUS2",137,0)
 S Y=1 Q:XUK=3  S DIR(0)="YA",DIR("A")=" Do you want to keep this one? ",DIR("B")="YES",DIR("?",1)="If you don't like this code, we can auto-generate another.",DIR("?")="Remember you only get 3 tries!"
"RTN","XUS2",138,0)
 D ^DIR Q:(Y=1)!$D(DIRUT)  D CLR W:XUK=2 "O.K. You'll have to keep the next one!",!
"RTN","XUS2",139,0)
 Q
"RTN","XUS2",140,0)
 ;
"RTN","XUS2",141,0)
OUT ;
"RTN","XUS2",142,0)
 K DUOUT S:$D(DIRUT) DUOUT=1
"RTN","XUS2",143,0)
 X ^%ZOSF("EON") W !
"RTN","XUS2",144,0)
 K DIR,DIRUT,XUKO,XUAUTO,XUU,XUH,XUK,XUI S X=""
"RTN","XUS2",145,0)
 Q
"RTN","XUS2",146,0)
 ;
"RTN","XUS2",147,0)
CHKCUR() ;Check user knows current code, Return 1 if OK to continue
"RTN","XUS2",148,0)
 Q:DA'=DUZ 1 ;Only ask user
"RTN","XUS2",149,0)
 Q:$P($G(^VA(200,DA,.1)),U,2)="" 1 ;Must have an old one
"RTN","XUS2",150,0)
 S XUK=0 D CLR
"RTN","XUS2",151,0)
CHK1 W "Please enter your CURRENT verify code: " D GET Q:$D(DIRUT) 0
"RTN","XUS2",152,0)
 I $P(^VA(200,DA,.1),U,2)=$$EN^XUSHSH(X) Q 1
"RTN","XUS2",153,0)
 D CLR W "Sorry that is not correct!",!
"RTN","XUS2",154,0)
 S XUK=XUK+1 G:XUK<3 CHK1
"RTN","XUS2",155,0)
 Q 0
"RTN","XUS2",156,0)
 ;
"RTN","XUS2",157,0)
BRCVC(XV1,XV2) ;Broker change VC, return 0 if good, '1^msg' if bad.
"RTN","XUS2",158,0)
 N XUU,XUH
"RTN","XUS2",159,0)
 Q:$G(DUZ)'>0 "1^Bad DUZ" S DA=DUZ,XUH=$$EN^XUSHSH(XV2)
"RTN","XUS2",160,0)
 I $P($G(^VA(200,DUZ,.1)),"^",2)'=$$EN^XUSHSH(XV1) Q "1^Sorry that isn't the correct current code"
"RTN","XUS2",161,0)
 S Y=$$VCHK(XV2,XUH) Q:Y Y
"RTN","XUS2",162,0)
 D VST(XUH,0),CALL^XUSERP(DA,2)
"RTN","XUS2",163,0)
 Q 0
"RTN","XUS2",164,0)
 ;
"RTN","XUS2",165,0)
AVHLPTXT(%) ;
"RTN","XUS2",166,0)
 Q "Enter "_$S($G(%):"6-20",1:"8-20")_" characters mixed alphanumeric and punctuation (except '^', ';', ':')."
"RTN","XUS2",167,0)
 ;
"RTN","XUS2",168,0)
 ;Left over code, Don't think it is called anymore.
"RTN","XUS2",169,0)
 G XUS2^XUVERIFY ;All check or return user attributes moved to XUVERIFY
"RTN","XUS2",170,0)
USER G USER^XUVERIFY
"RTN","XUS2",171,0)
EDIT G EDIT^XUVERIFY
"RTN","XUS3")
0^5^B18943733^B18656920
"RTN","XUS3",1,0)
XUS3 ;SF-ISC/STAFF - SIGNON ;5/31/2006
"RTN","XUS3",2,0)
 ;;8.0;KERNEL;**32,149,265,419**;Jul 10, 1995;Build 5
"RTN","XUS3",3,0)
TT ;Terminal Type select
"RTN","XUS3",4,0)
 Q:$D(XUIOP(1))
"RTN","XUS3",5,0)
 S DIC("B")=$S($P(XUIOP,";",2)]"":$P(XUIOP,";",2),$D(^%ZIS(1,XUDEV,"SUBTYPE")):+^("SUBTYPE"),1:"C-VT100")
"RTN","XUS3",6,0)
 S DIC="^%ZIS(2,",DIC(0)="AEMQO",DIC("S")="I $P(^(0),U,2)" D ^DIC K DIC Q:Y<1
"RTN","XUS3",7,0)
 ;M/11 & M/VX sites may want to remove the ; from the next line.
"RTN","XUS3",8,0)
 ;S J=$P(Y,U,2) I $D(^%IS(0,"SUB",J)) S $P(^%IS($I,1),U,3)=J
"RTN","XUS3",9,0)
 S ^VA(200,DUZ,1.2)=+Y,$P(XUIOP,";",2)=$P(Y,U,2) Q
"RTN","XUS3",10,0)
 ;
"RTN","XUS3",11,0)
WAIT ;** doesn't work with virtual device
"RTN","XUS3",12,0)
 Q:'$L(IO("ZIO"))
"RTN","XUS3",13,0)
 S X=XUT,XUT=0,H=$P(^DISV("XU",XUDEV),U,2),T=$P(H,",",2)+$P(XOPT,U,3),H=T\86400+H,T=T#86400 Q:H<$H  I +$H=H Q:$P($H,",",2)'<T
"RTN","XUS3",14,0)
LOCK S XUT=X,XMB="XUSLOCK",XMB(1)=$I,XMB(2)=+XUT,XMB(3)=$P(XUVOL,U,1)_","_XUCI D ^XMB
"RTN","XUS3",15,0)
Q Q
"RTN","XUS3",16,0)
 ;
"RTN","XUS3",17,0)
SEC ;Check device's security and time lock.
"RTN","XUS3",18,0)
 Q:$P(XOPT,"^",11)  ;Bypass device lockout
"RTN","XUS3",19,0)
 N %A,%B,%H,Y
"RTN","XUS3",20,0)
 S %A=$P(XUSER(0),U,4),%B=0
"RTN","XUS3",21,0)
 I $G(^%ZIS(1,XUDEV,95))]"",%A'="@" D
"RTN","XUS3",22,0)
 . S %H=$P(^(95),U),%B=1 F Y=1:1:$L(%H) I %A[$E(%H,Y) S %B=0
"RTN","XUS3",23,0)
 I %B D  Q
"RTN","XUS3",24,0)
 . S XMB="XUSECURITY",XMB(1)=$P(XUSER(0),U,1),XMB(2)=$I,XMB(3)=^(95),XMB(4)=%A D ^XMB
"RTN","XUS3",25,0)
 . S XUM=10
"RTN","XUS3",26,0)
 . Q
"RTN","XUS3",27,0)
 S %A=$P($G(^%ZIS(1,XUDEV,"TIME")),U) Q:%A=""
"RTN","XUS3",28,0)
 S Y=$P($H,",",2),%H=Y\60#60+(Y\3600*100),Y=$P(%A,"-",2)
"RTN","XUS3",29,0)
 I Y'<%A G NOPE:%H'>Y&(%H'<%A) Q
"RTN","XUS3",30,0)
 Q:%H'>%A&(%H'<Y)
"RTN","XUS3",31,0)
NOPE S XMB="XUSTIME",XMB(1)=$I,XMB(2)=$P(XUSER(0),U,1),XMB(4)=%A D ^XMB
"RTN","XUS3",32,0)
 S XUM=13,XUM(0)=%A
"RTN","XUS3",33,0)
 Q
"RTN","XUS3",34,0)
 ;
"RTN","XUS3",35,0)
H3(%) ;Convert $H to seconds.
"RTN","XUS3",36,0)
 Q 86400*%+$P(%,",",2)
"RTN","XUS3",37,0)
 ;
"RTN","XUS3",38,0)
GETFAC(IP) ;Set XUFAC from saved value,  Failed Access Count
"RTN","XUS3",39,0)
 I $D(XUFAC) Q
"RTN","XUS3",40,0)
 S XUFAC=0 ;Use default.
"RTN","XUS3",41,0)
 Q:'$L(IP)
"RTN","XUS3",42,0)
 N X,R
"RTN","XUS3",43,0)
 S X=$$FINDFAC(IP)
"RTN","XUS3",44,0)
 ;Clear count if lockout time has passed
"RTN","XUS3",45,0)
 I X>0 D
"RTN","XUS3",46,0)
 . L +^XUSEC(4,X,0):5
"RTN","XUS3",47,0)
 . S R=$G(^XUSEC(4,X,0))
"RTN","XUS3",48,0)
 . L -^XUSEC(4,X,0)
"RTN","XUS3",49,0)
 . ;Use 30 seconds as a balance. Not lock user out, stop scripts.
"RTN","XUS3",50,0)
 . I ($$H3($P(R,"^",3))+30)<$$H3($H) D CLRFAC(IP) Q  ;Exit without changing XUFAC
"RTN","XUS3",51,0)
 . S XUFAC=$P(R,U,2)
"RTN","XUS3",52,0)
 . Q
"RTN","XUS3",53,0)
 ;If IP is a TS, if should lock return 4 else 0.
"RTN","XUS3",54,0)
 I $$TS S XUFAC=$S($$IPCHECK^XUSTZIP(IP):4,1:0)
"RTN","XUS3",55,0)
 Q
"RTN","XUS3",56,0)
 ;
"RTN","XUS3",57,0)
TS() ;Is IP a Terminal Server (check TSCHK in XUSTZIP).
"RTN","XUS3",58,0)
 Q $L($O(^XTV(8989.3,1,405.2,"B",IP,0)))
"RTN","XUS3",59,0)
 ;
"RTN","XUS3",60,0)
FINDFAC(IP) ;Find the entry
"RTN","XUS3",61,0)
 N I
"RTN","XUS3",62,0)
 I $G(XUFAC(1))>0,$D(^XUSEC(4,XUFAC(1),0)) Q XUFAC(1)
"RTN","XUS3",63,0)
 K XUFAC(1)
"RTN","XUS3",64,0)
 Q:'$L(IP) 0
"RTN","XUS3",65,0)
 S I=$O(^XUSEC(4,"B",IP,0))
"RTN","XUS3",66,0)
 I I>0 S XUFAC(1)=I
"RTN","XUS3",67,0)
 Q I
"RTN","XUS3",68,0)
SETFAC(IP) ;Set the value of Failed Access atempts
"RTN","XUS3",69,0)
 N FDA,IEN,I
"RTN","XUS3",70,0)
 I $G(XUFAC(1)),'$D(^XUSEC(4,XUFAC(1),0)) K XUFAC(1)
"RTN","XUS3",71,0)
 S I=$S($G(XUFAC(1)):XUFAC(1),1:"?+1")_","
"RTN","XUS3",72,0)
 S FDA(3.084,I,.01)=IP,FDA(3.084,I,2)=XUFAC,FDA(3.084,I,3)=$H
"RTN","XUS3",73,0)
 D UPDATE^DIE("S","FDA","IEN")
"RTN","XUS3",74,0)
 I $G(IEN(1))>0 S XUFAC(1)=IEN(1)
"RTN","XUS3",75,0)
 Q
"RTN","XUS3",76,0)
 ;
"RTN","XUS3",77,0)
CLRFAC(IP) ;Clear FAC from the global
"RTN","XUS3",78,0)
 N DA,DIK,I
"RTN","XUS3",79,0)
 S I=$$FINDFAC(IP) Q:I'>0
"RTN","XUS3",80,0)
 S DA=I,DIK="^XUSEC(4," D ^DIK
"RTN","XUS3",81,0)
 Q
"RTN","XUS3",82,0)
 ;
"RTN","XUS3",83,0)
FAIL(IP) ;If user fails logon, Call to inc XUFAC
"RTN","XUS3",84,0)
 ; and check if time to lock.  IP is optional.
"RTN","XUS3",85,0)
 S IP=$$IP^XUSTZIP
"RTN","XUS3",86,0)
 D GETFAC(IP) I '$L($G(XOPT)) D XOPT^XUS
"RTN","XUS3",87,0)
 S XUFAC=XUFAC+1 D SETFAC(IP) ;Fail count
"RTN","XUS3",88,0)
 Q XUFAC'<$P(XOPT,U,2)
"RTN","XUS3",89,0)
 ;
"RTN","XUS3",90,0)
NO() ;Fail, R/S entry. Reference to XGWIN has been removed.
"RTN","XUS3",91,0)
 N XUEXIT,% ;Gets set in $$TXT, If 1 halt process.
"RTN","XUS3",92,0)
 W !,"Device: ",$I,!!,$$TXT(XUM),!
"RTN","XUS3",93,0)
 S %=$$FAIL($G(IO("IP"))),XUEXIT=XUEXIT!$D(XUHALT)
"RTN","XUS3",94,0)
 I ('XUEXIT)&'% Q 0 ;Continue to try
"RTN","XUS3",95,0)
 I 'XUEXIT&(XUM-7) W !,$$TXT(7) ;Tell user we are locking device
"RTN","XUS3",96,0)
 ;XUF handled in XUSTZ
"RTN","XUS3",97,0)
 I 'XUEXIT D ^XUSTZ
"RTN","XUS3",98,0)
 H 4
"RTN","XUS3",99,0)
 Q XUEXIT
"RTN","XUS3",100,0)
 ;
"RTN","XUS3",101,0)
TXT(%) ;Call by R/S and Broker
"RTN","XUS3",102,0)
 N XU1
"RTN","XUS3",103,0)
 ;This string tells if a error code should HALT process.
"RTN","XUS3",104,0)
 S:'$D(XUEXIT) XUEXIT=$E("111000010100100000000",%)
"RTN","XUS3",105,0)
 S XU1=30810+(%/100)
"RTN","XUS3",106,0)
 S %=$$EZBLD^DIALOG(XU1) I %["|" S %=$P(%,"|",1)_$G(XUM(0))_$P(%,"|",2)
"RTN","XUS3",107,0)
 K XUM(0)
"RTN","XUS3",108,0)
 Q %
"RTN","XUS3",109,0)
 ;All error messages are now in the DIALOG file.
"RTN","XUS3",110,0)
 ;Message numbers are 30810.01 to 30810.99
"RTN","XUS3",111,0)
ZZ ;;Halt;Error Messages
"RTN","XUS3",112,0)
1 ;;1;No Signons.
"RTN","XUS3",113,0)
2 ;;1;Maximum users.
"RTN","XUS3",114,0)
3 ;;1;Bad device.
"RTN","XUS3",115,0)
4 ;;0;Invalid A/V code.
"RTN","XUS3",116,0)
5 ;;0;No Access for User.
"RTN","XUS3",117,0)
6 ;;0;Invalid device password.
"RTN","XUS3",118,0)
7 ;;0;Device locked.
"RTN","XUS3",119,0)
8 ;;1;This device is out of service.
"RTN","XUS3",120,0)
9 ;;0;*** MULTIPLE SIGN-ONS NOT ALLOWED ***
"RTN","XUS3",121,0)
10 ;;1;You don't have access to this device!
"RTN","XUS3",122,0)
11 ;;0;Access code terminated.
"RTN","XUS3",123,0)
12 ;;0;Change VERIFY code.
"RTN","XUS3",124,0)
13 ;;1;Time limited device.
"RTN","XUS3",125,0)
14 ;;0;Bad UCI!
"RTN","XUS3",126,0)
15 ;;0;Bad Routine.
"RTN","XUS3",127,0)
16 ;;0;No PRIMARY MENU.
"RTN","XUS3",128,0)
17 ;;0;User Time limited.
"RTN","XUS3",129,0)
18 ;;0;User lockout
"RTN","XUS3",130,0)
19 ;;0;Signon not allowed as you have required forms to sign in terminal mode.
"RTN","XUS3",131,0)
20 ;;0;Client IP address not setup.
"RTN","XUS3",132,0)
21 ;;0;Null Verify code
"RTN","XUSERBLK")
0^1^B39902231^B35647610
"RTN","XUSERBLK",1,0)
XUSERBLK ;SF/RWF - Bulk user (new person) COMPUTER ACCESS  ; 5/23/2006
"RTN","XUSERBLK",2,0)
 ;;8.0;KERNEL;**20,214,230,289,419**;Jul 10, 1995;Build 5
"RTN","XUSERBLK",3,0)
 ; This routine allows the Cloning of one person to a group of others.
"RTN","XUSERBLK",4,0)
A ;
"RTN","XUSERBLK",5,0)
 I $G(DUZ)'>0 W !!,"You are not a known user and can't use this option." Q
"RTN","XUSERBLK",6,0)
 N DIC,DIR,%,L,XUIOP,XUNODE,XU1,X1,X2,X3,X4,X5,X6,XUTEXT,XUNEW,XUSER,XUTMP,XUTERMDT,XUH,XUU,XUU2,M,P,XU
"RTN","XUSERBLK",7,0)
 K ^TMP($J)
"RTN","XUSERBLK",8,0)
B1 W @IOF,!?26,"Batch Entry of New Persons"
"RTN","XUSERBLK",9,0)
 W !?26,"--------------------------",!!,"Please select a person to copy from"
"RTN","XUSERBLK",10,0)
 K DIC S DIC(0)="AEQZ",DIC("A")="Template PERSON: ",DIC="^VA(200," D ^DIC
"RTN","XUSERBLK",11,0)
 G QUIT:$D(DTOUT)!$D(DUOUT),B1:Y=-1
"RTN","XUSERBLK",12,0)
 ; Show INFO to be copied"
"RTN","XUSERBLK",13,0)
 S XUTMP=+Y,XUTMP(0)=$P(Y,U,2),DA=+Y D EN^DIQ
"RTN","XUSERBLK",14,0)
 S DIR(0)="Y",DIR("A")="Is this the person data you want cloned" D ^DIR G B1:'Y
"RTN","XUSERBLK",15,0)
 W !,"You may enter a date, when the users that are being created/updated",!,"will no longer have access to the system."
"RTN","XUSERBLK",16,0)
 S XUTERMDT="",%DT="AEF",%DT(0)=DT,%DT("A")="Enter (optional) TERMINATION DATE: " D ^%DT S:Y>0 XUTERMDT=Y
"RTN","XUSERBLK",17,0)
 K XUSER S XUSER=0
"RTN","XUSERBLK",18,0)
B2 ;
"RTN","XUSERBLK",19,0)
 W !!,?26,"Batch Entry of New Persons",!,?26,"--------------------------",!
"RTN","XUSERBLK",20,0)
 W !,"Clone of: ",XUTMP(0) I XUTERMDT W ?50,"TERMINATION DATE: ",$$FMTE^XLFDT(XUTERMDT)
"RTN","XUSERBLK",21,0)
 ;;
"RTN","XUSERBLK",22,0)
B3 F  S XUY=$$ADD^XUSERNEW Q:XUY<0  D  ;Create new entry
"RTN","XUSERBLK",23,0)
 . I '$P(XUY,U,3) D
"RTN","XUSERBLK",24,0)
 . . S DIR(0)="Y",DIR("A")=$P(XUY,U,2)_" is an existing user. Do you want to include" D ^DIR I Y'=1 S XUY=-1 Q
"RTN","XUSERBLK",25,0)
 . . S DIR(0)="Y",DIR("A")="Clear out KEYS, FILES, SECONDARY MENUS first" D ^DIR
"RTN","XUSERBLK",26,0)
 . . S:Y=1 $P(XUY,U,4)=1
"RTN","XUSERBLK",27,0)
 . . Q
"RTN","XUSERBLK",28,0)
 . I XUY>0 D
"RTN","XUSERBLK",29,0)
 . . S DIR(0)="Y",DIR("A")="Do You Want To Clone PERSON CLASS" D ^DIR
"RTN","XUSERBLK",30,0)
 . . S:Y=1 $P(XUY,U,5)=1
"RTN","XUSERBLK",31,0)
 . S:XUY>0 XUSER=XUSER+1,XUSER(XUSER)=XUY W !,"Next!",!
"RTN","XUSERBLK",32,0)
 . Q
"RTN","XUSERBLK",33,0)
B4 ;
"RTN","XUSERBLK",34,0)
 G:XUSER'>0 QUIT
"RTN","XUSERBLK",35,0)
 I XUTERMDT>0 S ZTRTN="CHECK^XUSTERM1",ZTIO="",ZTDTH=XUTERMDT D ^%ZTLOAD W !,"Automatic deactivation has been queued for this date.",!
"RTN","XUSERBLK",36,0)
 W !!,"Where do you want to print the COMPUTER ACCOUNT NOTIFICATION LETTERS"
"RTN","XUSERBLK",37,0)
 S %ZIS="MQ" D ^%ZIS G QUIT:POP
"RTN","XUSERBLK",38,0)
 I ION["P-MESSAGE-HFS" G START
"RTN","XUSERBLK",39,0)
 I '$D(IO("Q")) G CLONE
"RTN","XUSERBLK",40,0)
START ;
"RTN","XUSERBLK",41,0)
 S ZTRTN="CLONE^XUSERBLK" F I="XUTMP","XUTERMDT","XUSER","XUSER(" S ZTSAVE(I)=""
"RTN","XUSERBLK",42,0)
 K IO("Q") D ^%ZTLOAD
"RTN","XUSERBLK",43,0)
 ;;
"RTN","XUSERBLK",44,0)
QUIT ;
"RTN","XUSERBLK",45,0)
 K DIC,DIR,%,L,XUIOP,XUNODE,XU1,X1,X2,X3,X4,X5,X6,XUTEXT,XUNEW,XUSER,XUTMP,XUTERMDT,XUH,XUU,XUU2,M,P,XU
"RTN","XUSERBLK",46,0)
 K ^TMP($J)
"RTN","XUSERBLK",47,0)
 Q
"RTN","XUSERBLK",48,0)
 ;;
"RTN","XUSERBLK",49,0)
CLONE ;;Do work
"RTN","XUSERBLK",50,0)
 S XUTEXT=$O(^DIC(9.2,"B",$$GET^XUPARAM("XUSER COMPUTER ACCOUNT","N"),0)),XUIOP=ION_";"_IOST_";"_IOM_";"_IOSL
"RTN","XUSERBLK",51,0)
 F XU1=1:1:XUSER S %=XUSER(XU1),DA=+%,XUNEW=$P(%,U,3),XUPURGE=$P(%,U,4) D C2,UPDATE("ORD",DA)
"RTN","XUSERBLK",52,0)
 G QUIT
"RTN","XUSERBLK",53,0)
 ;
"RTN","XUSERBLK",54,0)
C2 ;
"RTN","XUSERBLK",55,0)
 N XUH,XUH2,XUU,XUU2
"RTN","XUSERBLK",56,0)
 I '$D(ZTQUEUED) W !!?8,$S(XUNEW:"CREATING A NEW ACCOUNT FOR '"_$P(XUSER(XU1),U,2)_"'",1:"CONVERTING "_$P(XUSER(XU1),U,2)_"'S ACCOUNT OVER"),!!,"One moment please..."
"RTN","XUSERBLK",57,0)
 D BLDFDA
"RTN","XUSERBLK",58,0)
 I $P(^VA(200,DA,0),U,3)']"" S XUNEW=1 ;if no access code treat as new
"RTN","XUSERBLK",59,0)
 I $P($G(^VA(200,DA,.1)),U,2)']"" S XUNEW=1 ;If no verify code treat as new
"RTN","XUSERBLK",60,0)
 S (XUU,XUU2)="unchanged",$P(^VA(200,DA,0),U,11)=XUTERMDT
"RTN","XUSERBLK",61,0)
 I XUNEW D ACODE S @XFDA@(200,DA_",",2)=XUH D VCODE S @XFDA@(200,DA_",",11)=XUH2
"RTN","XUSERBLK",62,0)
 D UPDATE^DIE("",XFDA,XIEN,"XERR") K @XFDA
"RTN","XUSERBLK",63,0)
 I XUNEW,XUTEXT>0 D LET(DA,XUTEXT)
"RTN","XUSERBLK",64,0)
 I $D(^XMB(3.7,DA,0))[0 S Y=DA K XMZ D NEW^XM K XMDT,XMM,XMZ
"RTN","XUSERBLK",65,0)
 Q
"RTN","XUSERBLK",66,0)
 ;
"RTN","XUSERBLK",67,0)
BLDFDA ;Build the FDA
"RTN","XUSERBLK",68,0)
 S XFDA="^TMP($J,""XFDA"")",XIEN="^TMP($J,""XIEN"")" K ^TMP($J)
"RTN","XUSERBLK",69,0)
 ;Move piece on nodes from list, Build XU only once
"RTN","XUSERBLK",70,0)
 F X2=1:1 S XUNODE=$P($T(DATA+X2),";;",2) Q:XUNODE=""  D
"RTN","XUSERBLK",71,0)
 . F X3=1:1 S X7=$P(XUNODE,U,X3) Q:X7=""  S X4=$$GETDD(200,X7),X5=$P(X4,";"),X6=$P(X4,";",2) D
"RTN","XUSERBLK",72,0)
 . . I '$D(XU(2,X5)) S XU(2,X5)=$G(^VA(200,XUTMP,X5))
"RTN","XUSERBLK",73,0)
 . . S:$P(XU(2,X5),U,X6)]"" @XFDA@(200,DA_",",X7)=$P(XU(2,X5),U,X6)
"RTN","XUSERBLK",74,0)
 . . Q
"RTN","XUSERBLK",75,0)
 . Q
"RTN","XUSERBLK",76,0)
 D SUBFILE
"RTN","XUSERBLK",77,0)
 Q
"RTN","XUSERBLK",78,0)
 ;
"RTN","XUSERBLK",79,0)
GETDD(FI,FE) ;Return node;piece for a field
"RTN","XUSERBLK",80,0)
 Q $P($G(^DD(FI,FE,0)),U,4)
"RTN","XUSERBLK",81,0)
 ;
"RTN","XUSERBLK",82,0)
DATA ;;field#
"RTN","XUSERBLK",83,0)
 ;;3^8^15^29^28
"RTN","XUSERBLK",84,0)
 ;;200.04^200.05^200.06^200.09^200.1^201^
"RTN","XUSERBLK",85,0)
 ;;41^41.1^41.2
"RTN","XUSERBLK",86,0)
 ;;101.01^101.02
"RTN","XUSERBLK",87,0)
 ;;9.21^9.22
"RTN","XUSERBLK",88,0)
 ;;
"RTN","XUSERBLK",89,0)
 ;
"RTN","XUSERBLK",90,0)
ACODE ;
"RTN","XUSERBLK",91,0)
 F Z=0:0 S XUU=$$AC^XUS4(),XUH=$$EN^XUSHSH(XUU) Q:'($D(^VA(200,"AOLD",XUH))!$D(^VA(200,"A",XUH)))
"RTN","XUSERBLK",92,0)
 Q
"RTN","XUSERBLK",93,0)
 ;
"RTN","XUSERBLK",94,0)
VCODE ;
"RTN","XUSERBLK",95,0)
 S XUU2=$$VC^XUS4(),XUH2=$$EN^XUSHSH(XUU2)
"RTN","XUSERBLK",96,0)
 Q
"RTN","XUSERBLK",97,0)
 ;
"RTN","XUSERBLK",98,0)
SUBFILE ;Move subfiles: Subscript, Subfile#, DINUM, Fields
"RTN","XUSERBLK",99,0)
 N XCNT S XCNT=0
"RTN","XUSERBLK",100,0)
KEY D MULTI(51,200.051,1,".01,3")
"RTN","XUSERBLK",101,0)
PATH ;D MULTI(19.8,".01")
"RTN","XUSERBLK",102,0)
FOF D MULTI("FOF",200.032,1,".01,1,2,3,4,5,6")
"RTN","XUSERBLK",103,0)
DIV D MULTI(2,200.02,1,".01")
"RTN","XUSERBLK",104,0)
SEC D MULTI(203,200.03,0,".01,2")
"RTN","XUSERBLK",105,0)
TAB D MULTI("ORD",200.010113,0,".01,.02,.03")
"RTN","XUSERBLK",106,0)
PSCLSS I $P($G(XUSER(XU1)),U,5)=1 D PRSNCL(DA)
"RTN","XUSERBLK",107,0)
 Q
"RTN","XUSERBLK",108,0)
 ;
"RTN","XUSERBLK",109,0)
MULTI(XSS,XSF,XDN,XDD) ;Build new data
"RTN","XUSERBLK",110,0)
 I XUPURGE D CLEAR(DA,XSS)
"RTN","XUSERBLK",111,0)
 Q:'$D(^VA(200,XUTMP,XSS,0))
"RTN","XUSERBLK",112,0)
 ;S X=^(0),Y=$S($D(^VA(200,DA,X2,0)):^(0),1:"")
"RTN","XUSERBLK",113,0)
 F X1=0:0 S X1=$O(^VA(200,XUTMP,XSS,X1)) Q:X1'>0  S X=^(X1,0) D
"RTN","XUSERBLK",114,0)
 . F X2=1:1 S X3=$P(XDD,",",X2) Q:X3=""  D
"RTN","XUSERBLK",115,0)
 . . I X3'=.01 S @XFDA@(XSF,"?+"_XCNT_","_DA_",",X3)=$$VAL(X,X3,XSF) Q
"RTN","XUSERBLK",116,0)
 . . S XCNT=XCNT+1,@XFDA@(XSF,"?+"_XCNT_","_DA_",",.01)=$P(X,U,1)
"RTN","XUSERBLK",117,0)
 . . S:XDN @XIEN@(XCNT)=X1
"RTN","XUSERBLK",118,0)
 . . Q
"RTN","XUSERBLK",119,0)
 . Q
"RTN","XUSERBLK",120,0)
 Q
"RTN","XUSERBLK",121,0)
 ;
"RTN","XUSERBLK",122,0)
VAL(V,FE,FI) ;Get value
"RTN","XUSERBLK",123,0)
 N % S %=$$GETDD(FI,FE),%=$P(%,";",2) Q $P(V,"^",%)
"RTN","XUSERBLK",124,0)
 ;
"RTN","XUSERBLK",125,0)
LET(DA,XUTEXT) ;Write access letter
"RTN","XUSERBLK",126,0)
 N DIWF,FR,TO,BY
"RTN","XUSERBLK",127,0)
 S DIWF="^DIC(9.2,"_XUTEXT_",1,",DIWF(1)=200,FR=DA,TO=DA,BY="NUMBER",IOP=XUIOP D EN2^DIWF
"RTN","XUSERBLK",128,0)
 Q
"RTN","XUSERBLK",129,0)
 ;
"RTN","XUSERBLK",130,0)
CLEAR(X4,X2) ;Clear subfile first, IEN, Subscript
"RTN","XUSERBLK",131,0)
 Q:$D(^VA(200,X4,X2,0))[0  N C,XUFN,XDEL,XMSG
"RTN","XUSERBLK",132,0)
 S C=",",XDEL=$NA(^TMP($J,"XUBLK2")),XUFN=+$P(^VA(200,X4,X2,0),"^",2)
"RTN","XUSERBLK",133,0)
 F X1=0:0 S X1=$O(^VA(200,X4,X2,X1)) Q:X1'>0  D
"RTN","XUSERBLK",134,0)
 . I X2=51 S %=$$DEL^XQKEY(X4,X1) Q  ;Special case for KEYS
"RTN","XUSERBLK",135,0)
 . S @XDEL@(XUFN,X1_C_X4_C,.01)="@"
"RTN","XUSERBLK",136,0)
 . Q
"RTN","XUSERBLK",137,0)
 I $D(@XDEL)>1 D FILE^DIE("",XDEL,"XMSG") ;I $D(XMSG) ZW XMSG
"RTN","XUSERBLK",138,0)
 Q
"RTN","XUSERBLK",139,0)
 ;
"RTN","XUSERBLK",140,0)
UPDATE(XX,USRIEN) ;Update effective date
"RTN","XUSERBLK",141,0)
 N PC,PC1
"RTN","XUSERBLK",142,0)
 S PC=$O(^VA(200,USRIEN,XX,"A"),-1) Q:PC'>0
"RTN","XUSERBLK",143,0)
 S PC=0 F  S PC=$O(^VA(200,USRIEN,XX,PC)) Q:PC'>0  D
"RTN","XUSERBLK",144,0)
 .S PC1=$P($G(^VA(200,USRIEN,XX,PC,0)),"^",3)
"RTN","XUSERBLK",145,0)
 .I (PC1="")!(PC1'<DT) D DOPD
"RTN","XUSERBLK",146,0)
 Q
"RTN","XUSERBLK",147,0)
 ;
"RTN","XUSERBLK",148,0)
DOPD ;
"RTN","XUSERBLK",149,0)
 L +^VA(200,DA,XX,PC,0):20 I '$T D  Q
"RTN","XUSERBLK",150,0)
 .W !,"===> The user is locked. Please try this option again."
"RTN","XUSERBLK",151,0)
 S $P(^VA(200,USRIEN,XX,PC,0),"^",2)=DT
"RTN","XUSERBLK",152,0)
 L -^VA(200,USRIEN,XX,PC,0)
"RTN","XUSERBLK",153,0)
 Q
"RTN","XUSERBLK",154,0)
 ;
"RTN","XUSERBLK",155,0)
PRSNCL(USERIEN) ;
"RTN","XUSERBLK",156,0)
 N XUDATA,XUPSC,XUEFDA,XUEXDA,ZZ
"RTN","XUSERBLK",157,0)
 S XUDATA=$O(^VA(200,XUTMP,"USC1","A"),-1) Q:XUDATA'>0
"RTN","XUSERBLK",158,0)
 S XUDATA=$G(^VA(200,XUTMP,"USC1",XUDATA,0)) Q:XUDATA=""
"RTN","XUSERBLK",159,0)
 S XUPSC=$P(XUDATA,"^")
"RTN","XUSERBLK",160,0)
 S XUEFDA=$P(XUDATA,"^",2) I XUEFDA'>DT S XUEFDA=DT
"RTN","XUSERBLK",161,0)
 S XUEXDA=$P(XUDATA,"^",3)
"RTN","XUSERBLK",162,0)
 I XUEXDA<DT,XUEXDA'="" Q
"RTN","XUSERBLK",163,0)
 N XULAST,XULDATA
"RTN","XUSERBLK",164,0)
 S XULAST=$O(^VA(200,USERIEN,"USC1","A"),-1)
"RTN","XUSERBLK",165,0)
 S ZZ(1,200.05,"+2,"_USERIEN_",",.01)=XUPSC
"RTN","XUSERBLK",166,0)
 S ZZ(1,200.05,"+2,"_USERIEN_",",2)=XUEFDA
"RTN","XUSERBLK",167,0)
 S ZZ(1,200.05,"+2,"_USERIEN_",",3)=XUEXDA
"RTN","XUSERBLK",168,0)
 D UPDATE^DIE("","ZZ(1)")
"RTN","XUSERBLK",169,0)
 Q:XULAST'>0
"RTN","XUSERBLK",170,0)
 S XULDATA=$G(^VA(200,USERIEN,"USC1",XULAST,0))
"RTN","XUSERBLK",171,0)
 S XULDATA=$P(XULDATA,"^",3)
"RTN","XUSERBLK",172,0)
 Q:XULDATA'>DT
"RTN","XUSERBLK",173,0)
 S $P(^VA(200,USERIEN,"USC1",XULAST,0),"^",3)=DT
"RTN","XUSERBLK",174,0)
 Q
"RTN","XUSERNEW")
0^3^B21302863^B19489672
"RTN","XUSERNEW",1,0)
XUSERNEW ;SF/RWF - ADD NEW USER ;6/22/06  16:24
"RTN","XUSERNEW",2,0)
 ;;8.0;KERNEL;**16,49,134,208,157,313,351,419**;Jul 10, 1995;Build 5
"RTN","XUSERNEW",3,0)
 ;In the call to NEW^XM for new users the variable XMZ must be undef.
"RTN","XUSERNEW",4,0)
 ;on a reactivation XMZ should be set to the current max message number.
"RTN","XUSERNEW",5,0)
EN ;Add
"RTN","XUSERNEW",6,0)
 N Y,XUN,DR,DIE,DA,DTOUT,DIWF,XMDT,XMM,XMZ
"RTN","XUSERNEW",7,0)
 S Y=$$ADD("","",1) G EXIT:Y'>0,RE:$P(Y,U,3)'=1
"RTN","XUSERNEW",8,0)
 S XUN=+Y ;XU USER ADD called in $$ADD
"RTN","XUSERNEW",9,0)
 S DR="["_$$GET^XUPARAM("XUNEW USER","N")_"]"
"RTN","XUSERNEW",10,0)
 S DIE=200,DA=XUN D XUDIE^XUS5 G:$D(DTOUT) EXIT
"RTN","XUSERNEW",11,0)
 I $$GET1^DIQ(200,XUN_",",11,"I")="" W !,"Without a VERIFY code the user will not be able to sign-on!",$C(7),!
"RTN","XUSERNEW",12,0)
 S Y=XUN K XMZ D NEW^XM K XMDT,XMM,XMZ
"RTN","XUSERNEW",13,0)
 ;ACCESS LETTER, Also see XUSERBLK
"RTN","XUSERNEW",14,0)
 W ! D LETTER(XUN,1)
"RTN","XUSERNEW",15,0)
 K DIR,DIWF,XUTEXT
"RTN","XUSERNEW",16,0)
 ;
"RTN","XUSERNEW",17,0)
 ;Fall in from above, called from REACT
"RTN","XUSERNEW",18,0)
KEYS N DIR,XQHOLD,XQKEY,XQDA,XQAL,XQ6,XQFL
"RTN","XUSERNEW",19,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you wish to allocate security keys" D ^DIR G:$D(DIRUT) EXIT
"RTN","XUSERNEW",20,0)
 I Y=1 S XQHOLD(XUN)="",XQKEY(0)=0,XQDA=0,XQAL=1,XQ6="",XQFL="" D KEY^XQ6
"RTN","XUSERNEW",21,0)
 ;
"RTN","XUSERNEW",22,0)
 ;Check on adding this user to user groups
"RTN","XUSERNEW",23,0)
 I $P(^VA(200,XUN,0),U,3)'="" D  ;Must have access code & mailbox
"RTN","XUSERNEW",24,0)
 .N DIR,Y
"RTN","XUSERNEW",25,0)
 .S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you wish to add this user to mail groups" D ^DIR Q:$D(DIRUT)
"RTN","XUSERNEW",26,0)
 .I Y=1 D ENLOCAL1^XMVGRP(XUN)
"RTN","XUSERNEW",27,0)
 .K XMDUN,XMDUZ,XMV
"RTN","XUSERNEW",28,0)
 .Q
"RTN","XUSERNEW",29,0)
 ;
"RTN","XUSERNEW",30,0)
EXIT K D0,DA,DDER,DDSFILE,DIE,DIC,DIR,DI,DICR,DIG,DIH,DISYS,DIU,DIV,DIWT,DLAYGO,DR,DQ,K,I,X,X1,XQHOLD,XQKEY,XUN,XUSOLD,XMB,XMZ,Y,Z,XQ6,XQFL,DTOUT
"RTN","XUSERNEW",31,0)
 Q
"RTN","XUSERNEW",32,0)
 ;
"RTN","XUSERNEW",33,0)
RE ;Jump from new user to reactivate
"RTN","XUSERNEW",34,0)
 S XUN=+Y,DIR("A")="This isn't a new user, Want to reactivate?",DIR(0)="Y",DIR("B")="NO"
"RTN","XUSERNEW",35,0)
 D ^DIR
"RTN","XUSERNEW",36,0)
 G EXIT:$D(DIRUT)!(Y'=1),RE2
"RTN","XUSERNEW",37,0)
 ;Reactivate a user
"RTN","XUSERNEW",38,0)
REACT ;SEA/WDE-REACTIVATE A USER
"RTN","XUSERNEW",39,0)
 N XUN,XUSOLD,DIE,DIC,DA,DR,FDA
"RTN","XUSERNEW",40,0)
 S XUN=+$$LOOKUP^XUSER G EXIT:XUN<0
"RTN","XUSERNEW",41,0)
RE2 S XUSOLD=^VA(200,XUN,0)
"RTN","XUSERNEW",42,0)
 S FDA(200,XUN_",",9.2)="@" ;Clear the Termination date
"RTN","XUSERNEW",43,0)
 D UPDATE^DIE("E","FDA")
"RTN","XUSERNEW",44,0)
 ;Show the screanman form
"RTN","XUSERNEW",45,0)
 S DIE=200,DR="["_$$GET^XUPARAM("XUREACT USER","N")_"]",DA=XUN
"RTN","XUSERNEW",46,0)
 D XUDIE^XUS5 G:$D(DTOUT) EXIT
"RTN","XUSERNEW",47,0)
 I $P(^VA(200,XUN,0),U,3)="" W !!,"No ACCESS CODE has been entered.",$C(7),!
"RTN","XUSERNEW",48,0)
 I $P(^VA(200,XUN,0),U,11)>0,$P(^(0),U,11)'>DT W !!,"User is still TERMINATED.",$C(7),!
"RTN","XUSERNEW",49,0)
 I $$GET1^DIQ(200,XUN_",",11,"I")="" W !,"Without a VERIFY code the user will not be able to sign-on!",$C(7),!
"RTN","XUSERNEW",50,0)
 N DIR
"RTN","XUSERNEW",51,0)
 S DIR(0)="Y",DIR("A")="Deny access to old mail messages",DIR("B")="NO",DIR("?")="Enter a 'YES' to restrict access to old mail messages."
"RTN","XUSERNEW",52,0)
 D ^DIR G:$D(DIRUT) EXIT
"RTN","XUSERNEW",53,0)
 K XMZ S:Y=1 XMZ=+$P(^XMB(3.9,0),"^",3) S Y=XUN D NEW^XM K XMDT,XMM,XMZ
"RTN","XUSERNEW",54,0)
 D REACT^XQ84(XUN) ;See if this user's menu trees need to be rebuilt
"RTN","XUSERNEW",55,0)
 G KEYS
"RTN","XUSERNEW",56,0)
 Q
"RTN","XUSERNEW",57,0)
 ;
"RTN","XUSERNEW",58,0)
ADD(NP1,KEYS,NONC) ;Common point to do DIC call for adding a new person.
"RTN","XUSERNEW",59,0)
 ;NP1 will be added to the default or what comes from the NPI field of the KSP.
"RTN","XUSERNEW",60,0)
 ;KEYS is a list of Keys to give the new person
"RTN","XUSERNEW",61,0)
 N DA,DR,DLAYGO,XUITNAME,XUS1,XUS2,DIC,DIE,DIK,NP2,Y
"RTN","XUSERNEW",62,0)
 I $G(^XTV(8989.3,1,"NPI"))]"" X ^("NPI") S NP2=DR
"RTN","XUSERNEW",63,0)
 S:'$D(NP2) NP2="1;"_$S($D(^XUSEC("XUSPF200",DUZ)):9,1:"9R~")_";4"
"RTN","XUSERNEW",64,0)
 S DIC="^VA(200,",DIC(0)="AELMQ",DLAYGO=200,DIC("A")="Enter NEW PERSON's name (Family,Given Middle Suffix): ",DIC("DR")="",XUITNAME=1
"RTN","XUSERNEW",65,0)
 D ^DIC S XUS1=Y G AX:(Y'>0)!($P(Y,U,3)'>0)
"RTN","XUSERNEW",66,0)
 S DA=+$G(^VA(200,+XUS1,3.1)) I DA,'$G(NONC) D
"RTN","XUSERNEW",67,0)
 . W !,"Name components."
"RTN","XUSERNEW",68,0)
 . S DIE="^VA(20,",DR="1;2;3;5"
"RTN","XUSERNEW",69,0)
 . L +^VA(20,DA,0):60 D ^DIE L -^VA(20,DA,0)
"RTN","XUSERNEW",70,0)
 . I $D(Y)!$D(DTOUT) S DA=+XUS1,XUS1=-1
"RTN","XUSERNEW",71,0)
 . E  S $P(XUS1,U,2)=$P(^VA(200,+XUS1,0),U)
"RTN","XUSERNEW",72,0)
 D:XUS1>0
"RTN","XUSERNEW",73,0)
 . W !,"Now for the Identifiers."
"RTN","XUSERNEW",74,0)
 . S DA=+XUS1,DIE="^VA(200,",DR=NP2_$S($D(NP1):";"_NP1,1:""),DIE("NO^")="OUTOK"
"RTN","XUSERNEW",75,0)
 . L +^VA(200,DA,0):60 D ^DIE L -^VA(200,DA,0)
"RTN","XUSERNEW",76,0)
 . S:$D(Y)!$D(DTOUT) XUS1=-1
"RTN","XUSERNEW",77,0)
 I XUS1<0 D  S XUS1=-1
"RTN","XUSERNEW",78,0)
 . W !?5,"<'",$P(^VA(200,DA,0),U),"' DELETED>"
"RTN","XUSERNEW",79,0)
 . S DIK="^VA(200," D ^DIK
"RTN","XUSERNEW",80,0)
 . Q:$P($G(^DIC(3,0)),U)'="USER"!'$D(^DD(3,0))
"RTN","XUSERNEW",81,0)
 . S DIK="^DIC(3,",XUS1=$P($G(^DIC(3,DA,0)),U,16) D ^DIK
"RTN","XUSERNEW",82,0)
 . Q:'XUS1!($P($G(^DIC(16,0)),U)'="PERSON")!'$D(^DD(16,0))
"RTN","XUSERNEW",83,0)
 . S DIK="^DIC(16,",DA=XUS1 D ^DIK
"RTN","XUSERNEW",84,0)
 I XUS1>0,$D(KEYS) F XUS2=1:1 S Y=$P(KEYS,",",XUS2) Q:'$L(Y)  D
"RTN","XUSERNEW",85,0)
 . S %=$$ADD^XQKEY(XUS1,Y) I '% W !,"Key '",Y,"' not allocated"
"RTN","XUSERNEW",86,0)
 I XUS1>0 D CALL^XUSERP(+XUS1,1) ;XQOR add
"RTN","XUSERNEW",87,0)
AX Q XUS1
"RTN","XUSERNEW",88,0)
 ;
"RTN","XUSERNEW",89,0)
REPRINT ;Reprint letter
"RTN","XUSERNEW",90,0)
 S DA=+$$LOOKUP^XUSER G EXIT:DA'>0
"RTN","XUSERNEW",91,0)
 D LETTER(DA)
"RTN","XUSERNEW",92,0)
 G EXIT
"RTN","XUSERNEW",93,0)
 ;
"RTN","XUSERNEW",94,0)
LETTER(XUN,ASK) ;Print access letter
"RTN","XUSERNEW",95,0)
 Q:'$G(XUN)
"RTN","XUSERNEW",96,0)
 N DIWF,FR,TO,BY,DIR,XUTEXT
"RTN","XUSERNEW",97,0)
 S XUTEXT=$$GET^XUPARAM("XUSER COMPUTER ACCOUNT","N"),XUTEXT=$O(^DIC(9.2,"B",XUTEXT,0))
"RTN","XUSERNEW",98,0)
 S DIR(0)="Y",DIR("A")="Print User Account Access Letter"
"RTN","XUSERNEW",99,0)
 I XUTEXT>0 S Y=1 D:$G(ASK) ^DIR I Y=1 D
"RTN","XUSERNEW",100,0)
 . S (XUU,XUU2)="________",DIWF="^DIC(9.2,XUTEXT,1,",DIWF(1)=200,FR=XUN,TO=XUN,BY="NUMBER" D EN2^DIWF
"RTN","XUSERNEW",101,0)
 . Q
"RTN","XUSERNEW",102,0)
 Q
"RTN","XUSRB4")
0^7^B11538181^B10928715
"RTN","XUSRB4",1,0)
XUSRB4 ;ISF/RWF - Build a temporary sign-on token ;08/08/2005  09:44
"RTN","XUSRB4",2,0)
 ;;8.0;KERNEL;**150,337,395,419**;Jul 10, 1995;Build 5
"RTN","XUSRB4",3,0)
 Q
"RTN","XUSRB4",4,0)
 ;
"RTN","XUSRB4",5,0)
ASH(RET) ;rpc. Auto Signon Handle
"RTN","XUSRB4",6,0)
 N HDL
"RTN","XUSRB4",7,0)
 S HDL=$$HANDLE("XWBAS",1),RET="~1"_HDL
"RTN","XUSRB4",8,0)
 ;Now place user info in it.
"RTN","XUSRB4",9,0)
 D TOK(HDL)
"RTN","XUSRB4",10,0)
 Q
"RTN","XUSRB4",11,0)
 ;
"RTN","XUSRB4",12,0)
CCOW(RET) ;rpc. CCOW Auto Signon Handle
"RTN","XUSRB4",13,0)
 N HDL,HDL2
"RTN","XUSRB4",14,0)
 S RET(0)="NO PROXY USER",RET(1)="ERROR"
"RTN","XUSRB4",15,0)
 I $$USERTYPE^XUSAP(DUZ,"APPLICATION PROXY") Q  ;No Proxy
"RTN","XUSRB4",16,0)
 I $$USERTYPE^XUSAP(DUZ,"CONNECTOR PROXY") Q  ;No Proxy
"RTN","XUSRB4",17,0)
 S X=$$ACTIVE^XUSER(DUZ) I 'X S RET(0)=X Q  ;User must be active
"RTN","XUSRB4",18,0)
 S HDL=$$HANDLE("XWBCCW",1)
"RTN","XUSRB4",19,0)
 S RET(0)="~2"_$$LOW^XLFSTR(HDL),RET(1)=$G(^XMB("NETNAME"))
"RTN","XUSRB4",20,0)
 ;Now place user info in it.
"RTN","XUSRB4",21,0)
 D TOK(HDL)
"RTN","XUSRB4",22,0)
 S ^XUTL("XQ",$J,"HDL")=HDL ;Save handle with job
"RTN","XUSRB4",23,0)
 Q
"RTN","XUSRB4",24,0)
 ;
"RTN","XUSRB4",25,0)
HANDLE(NS,LT) ;Return a unique handle into ^XTMP (ef. sup)
"RTN","XUSRB4",26,0)
 ;NS is the namespace, LT is the Handle Lifetime in days
"RTN","XUSRB4",27,0)
 N %H,A,J,HL
"RTN","XUSRB4",28,0)
 I $G(NS)="" Q "" ;Return null if no namespace
"RTN","XUSRB4",29,0)
 S LT=$G(LT,1) S:LT>7 LT=7 ;Default to 1
"RTN","XUSRB4",30,0)
 S %H=$H,J=NS_($J#2048)_"-"_(%H#7*86400+$P(%H,",",2))_"_",A=$R(10)
"RTN","XUSRB4",31,0)
 F  S HL=J_A,A=A+1 L +^XTMP(HL):1 I $T Q:'$D(^XTMP(HL))  L -^XTMP(HL)
"RTN","XUSRB4",32,0)
 S ^XTMP(HL,0)=$$HTFM^XLFDT(%H+LT)_"^"_$$DT^XLFDT()
"RTN","XUSRB4",33,0)
 L -^XTMP(HL)
"RTN","XUSRB4",34,0)
 Q HL
"RTN","XUSRB4",35,0)
 ;
"RTN","XUSRB4",36,0)
TOK(H) ;Store a Token
"RTN","XUSRB4",37,0)
 ;H is handle into XTMP
"RTN","XUSRB4",38,0)
 N J,T,R
"RTN","XUSRB4",39,0)
 S T=$$H3^%ZTM($H)
"RTN","XUSRB4",40,0)
 S R=$J_"|"_T_"|"_$G(DUZ)_"|"_H
"RTN","XUSRB4",41,0)
 S ^XTMP(H,"D",0)="|"_$$ENCRYP^XUSRB1(R)_"|"
"RTN","XUSRB4",42,0)
 S ^XTMP(H,"D2")=$G(DUZ(2))
"RTN","XUSRB4",43,0)
 S ^XTMP(H,"D3")=$G(IO("IP"))
"RTN","XUSRB4",44,0)
 S ^XTMP(H,"JOB",$J)=$G(IO("IP"))
"RTN","XUSRB4",45,0)
 S ^XTMP(H,"STATUS")="0^New",^("CNT")=0
"RTN","XUSRB4",46,0)
 Q
"RTN","XUSRB4",47,0)
 ;
"RTN","XUSRB4",48,0)
CHKASH(HL) ;rpc. Check a Auto Signon Handle
"RTN","XUSRB4",49,0)
 N HDL,RET,FDA,IEN S HDL=$E(HL,3,999)
"RTN","XUSRB4",50,0)
 S RET=$$CHECK(HDL)
"RTN","XUSRB4",51,0)
 I RET>0 D
"RTN","XUSRB4",52,0)
 . S DUZ("ASH")=1,IEN=DUZ_","
"RTN","XUSRB4",53,0)
 . I $$GET1^DIQ(200,IEN,7,"I") S FDA(200,DUZ_",",7)=0 D FILE^DIE("K","FDA") ;rwf 403
"RTN","XUSRB4",54,0)
 K ^XTMP(HDL) ;Token only good for one try.
"RTN","XUSRB4",55,0)
 Q RET
"RTN","XUSRB4",56,0)
 ;
"RTN","XUSRB4",57,0)
CHKCCOW(HL) ;rpc. Check a CCOW Auto Signon Handle
"RTN","XUSRB4",58,0)
 N HDL,RET,T
"RTN","XUSRB4",59,0)
 S HDL=$$UP^XLFSTR($E(HL,3,999)),T=$P($G(^XTV(8989.3,1,30),5400),U)
"RTN","XUSRB4",60,0)
 S RET=$$CHECK(HDL,T)
"RTN","XUSRB4",61,0)
 I RET>0 D
"RTN","XUSRB4",62,0)
 . ;This CCOW Token good for more that one try.
"RTN","XUSRB4",63,0)
 . S ^XTMP(HDL,"JOB",$J)=$G(IO("IP"))
"RTN","XUSRB4",64,0)
 . S ^XTMP(HDL,"STATUS")=(^XTMP(HDL,"STATUS")+1)_"^Active"
"RTN","XUSRB4",65,0)
 . S ^XUTL("XQ",$J,"HDL")=HDL ;Save handle with job
"RTN","XUSRB4",66,0)
 . S DUZ("CCOW")=1 ;Flag a CCOW sign-on.
"RTN","XUSRB4",67,0)
 Q RET
"RTN","XUSRB4",68,0)
 ;
"RTN","XUSRB4",69,0)
CHECK(HL,TOUT) ;Check a Token
"RTN","XUSRB4",70,0)
 N %,J,D,L,M,S
"RTN","XUSRB4",71,0)
 S S=$G(^XTMP(HL,0)) I '$L(S) Q "0^Bad Handle"
"RTN","XUSRB4",72,0)
 S S=$G(^XTMP(HL,"D",0)) I '$L(S) Q "0^Bad Handle" ;Now have real token
"RTN","XUSRB4",73,0)
 I $E(S)'="|" Q "0^Bad Token"
"RTN","XUSRB4",74,0)
 S S=$$DECRYP^XUSRB1($E(S,2,$L(S)-1)) I S="" Q "0^Bad Token"
"RTN","XUSRB4",75,0)
 S J=$P(S,"|"),T=$P(S,"|",2),D=$P(S,"|",3),M=$P(S,"|",4)
"RTN","XUSRB4",76,0)
 ;Check token time
"RTN","XUSRB4",77,0)
 S %=$$H3^%ZTM($H),TOUT=$G(TOUT,20)
"RTN","XUSRB4",78,0)
 I T+TOUT<% Q "0^Token Expired" ;Token good for TOUT or 20 seconds
"RTN","XUSRB4",79,0)
 ;Check job
"RTN","XUSRB4",80,0)
 ;Check that token has handle
"RTN","XUSRB4",81,0)
 I M'=HL Q "0^Bad Token"
"RTN","XUSRB4",82,0)
 ;Check User
"RTN","XUSRB4",83,0)
 I $G(^VA(200,D,0))="" Q "0^Bad User"
"RTN","XUSRB4",84,0)
 ;Do IP check
"RTN","XUSRB4",85,0)
 I $L($G(^XTMP(HL,"D3"))),^XTMP(HL,"D3")'=$G(IO("IP")) Q "0^Different IP"
"RTN","XUSRB4",86,0)
 I $D(^XTMP(HL,"D2")),D>0 S DUZ(2)=^XTMP(HL,"D2")
"RTN","XUSRB4",87,0)
 D USER^XUS(D)
"RTN","XUSRB4",88,0)
 Q D
"RTN","XUSRB4",89,0)
 ;
"RTN","XUSRB4",90,0)
 ;
"RTN","XUSRB4",91,0)
CCOWPC(RET) ;Return ap
"RTN","XUSRB4",92,0)
 N I,XU4
"RTN","XUSRB4",93,0)
 S RET(0)="" I '$$BROKER^XWBLIB Q
"RTN","XUSRB4",94,0)
 D GETLST^XPAR(.XU4,"SYS","XUS CCOW VAULT PARAM","Q")
"RTN","XUSRB4",95,0)
 F I=0,1 S RET(I)=$P($G(XU4(I+1)),"^",2,99)
"RTN","XUSRB4",96,0)
 Q
"RTN","XUSTZIP")
0^8^B25405099^B25477365
"RTN","XUSTZIP",1,0)
XUSTZIP ;WRJ/DAF,ISF/RWF - Security Twilight Zone, Failed Access Attempts ;03/24/2004  11:12
"RTN","XUSTZIP",2,0)
 ;;8.0;KERNEL;**265,419**;Jul 10, 1995;Build 5
"RTN","XUSTZIP",3,0)
 Q
"RTN","XUSTZIP",4,0)
 ;The subfiles in KSP file.
"RTN","XUSTZIP",5,0)
 ;405.2 List of Terminal Servers, slack, last reset
"RTN","XUSTZIP",6,0)
 ;
"RTN","XUSTZIP",7,0)
 ;^XUSEC(3, (File 3.083) Locked IP's, lock until
"RTN","XUSTZIP",8,0)
 ;^XUSEC(4, (File 3.084) Failed attempts count
"RTN","XUSTZIP",9,0)
 ;$P(^VA(200,DUZ,1.1),U,5) Locked Users
"RTN","XUSTZIP",10,0)
 ;
"RTN","XUSTZIP",11,0)
CLEAN ;CLEAN UP OLD LOCKED IP NODES, ^XUSEC(3,
"RTN","XUSTZIP",12,0)
 N ZNUM,NOW
"RTN","XUSTZIP",13,0)
 S ZNUM=0,NOW=$$NOW^XLFDT
"RTN","XUSTZIP",14,0)
 L +^XUSEC(3,0):10
"RTN","XUSTZIP",15,0)
 F  S ZNUM=$O(^XUSEC(3,ZNUM)) Q:ZNUM'>0  D
"RTN","XUSTZIP",16,0)
 .I $P(^XUSEC(3,ZNUM,0),"^",2)'>NOW D LKDEL(ZNUM)
"RTN","XUSTZIP",17,0)
 L -^XUSEC(3,0),+^XUSEC(4,0):10
"RTN","XUSTZIP",18,0)
 N XUFAC,OV
"RTN","XUSTZIP",19,0)
 S ZNUM=0,NOW=$$H3-90
"RTN","XUSTZIP",20,0)
 F  S ZNUM=$O(^XUSEC(4,ZNUM)) Q:ZNUM'>0  D
"RTN","XUSTZIP",21,0)
 .S OV=$$H3($P(^XUSEC(4,ZNUM,0),"^",3)) I OV'>NOW D
"RTN","XUSTZIP",22,0)
 ..N DIK,DA
"RTN","XUSTZIP",23,0)
 ..S DA=ZNUM,DIK="^XUSEC(4," D ^DIK
"RTN","XUSTZIP",24,0)
 L -^XUSEC(4,0)
"RTN","XUSTZIP",25,0)
 Q
"RTN","XUSTZIP",26,0)
X6IP ;EXAMINE AND ALLOW RESET OF LOCKED IPS
"RTN","XUSTZIP",27,0)
 N I,ZFDA,DIR,XUNOW,ZNM,ZNUM,Y S ZNM="",I=0
"RTN","XUSTZIP",28,0)
 I '$D(^XUSEC(3,"B")) W !,"There are no IP's to Clear" Q
"RTN","XUSTZIP",29,0)
 F  S ZNM=$O(^XUSEC(3,"B",ZNM)) Q:ZNM']""  S ZNUM=$O(^XUSEC(3,"B",ZNM,"")) D
"RTN","XUSTZIP",30,0)
 . I '$D(^XUSEC(3,ZNUM,0)) K ^XUSEC(3,"B",ZNM) Q  ;419
"RTN","XUSTZIP",31,0)
 . S I=I+1,ZNM(I)=ZNUM_"^"_ZNM
"RTN","XUSTZIP",32,0)
 . W !,I_". ",ZNM,"  lock out till: ",$$FMTE^XLFDT($P(^XUSEC(3,ZNUM,0),"^",2))
"RTN","XUSTZIP",33,0)
 . Q
"RTN","XUSTZIP",34,0)
 S DIR(0)="N^1:"_I,DIR("A")="Choose the number of the IP to reset" D ^DIR Q:$D(DIRUT)
"RTN","XUSTZIP",35,0)
 S ZNM=$P(ZNM(Y),"^",2),ZNUM=+ZNM(Y)
"RTN","XUSTZIP",36,0)
 ;Call with IEN
"RTN","XUSTZIP",37,0)
 D LKDEL(ZNUM)
"RTN","XUSTZIP",38,0)
 W !,ZNM," Cleared"
"RTN","XUSTZIP",39,0)
 ;Call with IP
"RTN","XUSTZIP",40,0)
 D CLRFAC^XUS3(ZNM) ;Clear access count
"RTN","XUSTZIP",41,0)
 ;if this is a ts reset and then set reset date in site param file
"RTN","XUSTZIP",42,0)
 S ZIEN=$$TSCHK(ZNM)
"RTN","XUSTZIP",43,0)
 I ZIEN>0 S ZFDA(8989.305,ZIEN_",1,",2)=$$NOW D UPDATE^DIE("","ZFDA")
"RTN","XUSTZIP",44,0)
 K DIR,DIRUT
"RTN","XUSTZIP",45,0)
 Q
"RTN","XUSTZIP",46,0)
 ;
"RTN","XUSTZIP",47,0)
LKSET(IP) ;Set IP Lock Node
"RTN","XUSTZIP",48,0)
 N ZNUM,ZFDA,ZIEN
"RTN","XUSTZIP",49,0)
 Q:'$$ON 0
"RTN","XUSTZIP",50,0)
 S ZIEN="?+2,",ZFDA(3.083,ZIEN,.01)=IP
"RTN","XUSTZIP",51,0)
 S ZFDA(3.083,ZIEN,2)=$$LKTL
"RTN","XUSTZIP",52,0)
 D UPDATE^DIE("","ZFDA","ZIEN")
"RTN","XUSTZIP",53,0)
 D CLRFAC^XUS3(IP) ;Clear the access count
"RTN","XUSTZIP",54,0)
 Q 1
"RTN","XUSTZIP",55,0)
LKTL() ;Lock until
"RTN","XUSTZIP",56,0)
 Q $$HTFM^XLFDT($$HADD^XLFDT($H,0,0,0,$$LKTME))
"RTN","XUSTZIP",57,0)
 ;
"RTN","XUSTZIP",58,0)
NOW() ;
"RTN","XUSTZIP",59,0)
 I $G(XUNOW) Q XUNOW
"RTN","XUSTZIP",60,0)
 S XUNOW=$$NOW^XLFDT
"RTN","XUSTZIP",61,0)
 Q XUNOW
"RTN","XUSTZIP",62,0)
 ;
"RTN","XUSTZIP",63,0)
IP() ;Get a device IP.
"RTN","XUSTZIP",64,0)
 Q $S($D(IP):IP,$D(IO("IP")):IO("IP"),$D(IO("ZIO")):IO("ZIO"),1:"")
"RTN","XUSTZIP",65,0)
 ;
"RTN","XUSTZIP",66,0)
LKTME() ;Get lock-out time
"RTN","XUSTZIP",67,0)
 I $D(XOPT) Q $P(XOPT,U,3)
"RTN","XUSTZIP",68,0)
 Q $P(^XTV(8989.3,1,"XUS"),U,3)
"RTN","XUSTZIP",69,0)
 ;
"RTN","XUSTZIP",70,0)
LKCHECK(IP) ;Check if IP is LOCKED
"RTN","XUSTZIP",71,0)
 I '$$ON Q 0 ;Are we doing IP/device locking
"RTN","XUSTZIP",72,0)
 S IP=$$IP() Q:'$L(IP) 0
"RTN","XUSTZIP",73,0)
 N ZREC S ZREC=$$LKREC(IP)
"RTN","XUSTZIP",74,0)
 Q:'$L(ZREC) 0
"RTN","XUSTZIP",75,0)
 ;Found a LOCK record, Check time
"RTN","XUSTZIP",76,0)
 S X=$P(ZREC,"^",2)>$$NOW
"RTN","XUSTZIP",77,0)
 Q X
"RTN","XUSTZIP",78,0)
 ;
"RTN","XUSTZIP",79,0)
LKREC(IP) ;Get the Lock record
"RTN","XUSTZIP",80,0)
 N ZNUM
"RTN","XUSTZIP",81,0)
 S ZNUM=+$O(^XUSEC(3,"B",IP,0))
"RTN","XUSTZIP",82,0)
 Q $G(^XUSEC(3,ZNUM,0))
"RTN","XUSTZIP",83,0)
 ;
"RTN","XUSTZIP",84,0)
LKDEL(ZNUM) ;Delete LOCKED IP
"RTN","XUSTZIP",85,0)
 N DIK,DA ;419
"RTN","XUSTZIP",86,0)
 S DIK="^XUSEC(3,",DA=ZNUM D ^DIK
"RTN","XUSTZIP",87,0)
 Q
"RTN","XUSTZIP",88,0)
 ;
"RTN","XUSTZIP",89,0)
LKWAIT(%) ;How long to wait
"RTN","XUSTZIP",90,0)
 N T1,T2,IP
"RTN","XUSTZIP",91,0)
 S IP=$$IP() Q:'$L(IP) %
"RTN","XUSTZIP",92,0)
 S T1=$$LKREC(IP)
"RTN","XUSTZIP",93,0)
 Q $$FMDIFF^XLFDT($P(T1,U,2),$$NOW^XLFDT,2)
"RTN","XUSTZIP",94,0)
 ;
"RTN","XUSTZIP",95,0)
TSCHK(IP) ;Check if IP is for a TERMINAL SERVER.
"RTN","XUSTZIP",96,0)
 ;is this IP for a teriminal server.
"RTN","XUSTZIP",97,0)
 N ZNUM S ZNUM=$O(^XTV(8989.3,1,405.2,"B",IP,0))
"RTN","XUSTZIP",98,0)
 Q ZNUM
"RTN","XUSTZIP",99,0)
 ;
"RTN","XUSTZIP",100,0)
IPCHECK(IP) ;Check if IP should be LOCKED. Called from XUSTZ, and others.
"RTN","XUSTZIP",101,0)
 ;Return 1 if should lock, 0 if No.
"RTN","XUSTZIP",102,0)
 I '$$ON Q 0
"RTN","XUSTZIP",103,0)
 S IP=$$IP Q:'$L(IP) 0
"RTN","XUSTZIP",104,0)
 N LIMIT,TSIEN,ZEND,ZNUM,ZLST,SLK,TFAC,TSREC,Z10
"RTN","XUSTZIP",105,0)
 ;If the IP is locked, Don't relock. Could cause an endless lock.
"RTN","XUSTZIP",106,0)
 I $$LKCHECK(IP) Q 0
"RTN","XUSTZIP",107,0)
 ;is this the IP of a teriminal server. if not lock
"RTN","XUSTZIP",108,0)
 S TSIEN=$$TSCHK(IP) ;Returns TS ien.
"RTN","XUSTZIP",109,0)
 ;If TSIEN<1 lock the IP.
"RTN","XUSTZIP",110,0)
 Q:TSIEN<1 1
"RTN","XUSTZIP",111,0)
 ;count # of failures for this TS in last 10 minutes and compare that 
"RTN","XUSTZIP",112,0)
 ;against the established limit.  if no limit set, use 2. maybe cut
"RTN","XUSTZIP",113,0)
 ;some slack.
"RTN","XUSTZIP",114,0)
 S Z10=$$HTFM^XLFDT($$HADD^XLFDT($H,0,0,-10)) ;NOW-10
"RTN","XUSTZIP",115,0)
 S TSREC=$G(^XTV(8989.3,1,405.2,TSIEN,0)) ;Get TS record
"RTN","XUSTZIP",116,0)
 S ZLST=$P(TSREC,"^",3) ;Last reset
"RTN","XUSTZIP",117,0)
 S ZEND=$S(ZLST>Z10:ZLST,1:Z10) ;stop at last reset or NOW-10.
"RTN","XUSTZIP",118,0)
 S ZNUM="A",TFAC=0,Y=$S(IP["/":"/",1:":")
"RTN","XUSTZIP",119,0)
 F  S ZNUM=$O(^%ZUA(3.05,ZNUM),-1) Q:ZNUM'>0!(ZEND>ZNUM)  D
"RTN","XUSTZIP",120,0)
 . I $P($P(^%ZUA(3.05,ZNUM,0),"^",7),Y)=$P(IP,Y) S TFAC=TFAC+1
"RTN","XUSTZIP",121,0)
 S LIMIT=$P($G(^XTV(8989.3,1,405)),"^",6) S:'LIMIT LIMIT=2
"RTN","XUSTZIP",122,0)
 S SLK=$$SLACK(Z10) ;
"RTN","XUSTZIP",123,0)
 Q $S(SLK:TFAC>SLK,1:TFAC>LIMIT)
"RTN","XUSTZIP",124,0)
 ;
"RTN","XUSTZIP",125,0)
SLACK(TEND) ;SLACK CALCULATOR
"RTN","XUSTZIP",126,0)
 ;if this TS has been reset in last 10 minutes allow 100 tries.
"RTN","XUSTZIP",127,0)
 ;Normal hours return 0, after hours use TS Slack value
"RTN","XUSTZIP",128,0)
 N HRMIN,X,NOW,TS
"RTN","XUSTZIP",129,0)
 S X=$P(TSREC,"^",3) ;Last Reset
"RTN","XUSTZIP",130,0)
 I X>TEND Q 100 ;TEND is Now-10 min
"RTN","XUSTZIP",131,0)
 ;if now is during normal work hours 8am to 4:30 pm, cut no slack
"RTN","XUSTZIP",132,0)
 S HRMIN=$P($H,",",2)
"RTN","XUSTZIP",133,0)
 ; 8am is 28800 and 4:30 pm is 59400
"RTN","XUSTZIP",134,0)
 ; If Normal hours don't give slack unless user locking is on.
"RTN","XUSTZIP",135,0)
 I (HRMIN>28800&(HRMIN<59400)) Q $S($P($G(^XTV(8989.3,1,405)),"^",4)="y":10,1:0)
"RTN","XUSTZIP",136,0)
 ;if TS param says to cut slack, cut amount of slack set up in param.
"RTN","XUSTZIP",137,0)
 Q $S($P(TSREC,"^",2):$P(TSREC,"^",2),1:0)
"RTN","XUSTZIP",138,0)
 ;
"RTN","XUSTZIP",139,0)
ON() ;ON OR OFF
"RTN","XUSTZIP",140,0)
 Q $P($G(^XTV(8989.3,1,405)),"^",1)="y"
"RTN","XUSTZIP",141,0)
 ;
"RTN","XUSTZIP",142,0)
H3(%H) ;Make seconds
"RTN","XUSTZIP",143,0)
 S:'$G(%H) %H=$H
"RTN","XUSTZIP",144,0)
 Q %H*86400+$P(%H,",",2)
"RTN","XUSTZIP",145,0)
 ;
"RTN","XUSTZIP",146,0)
H0(%H) ;
"RTN","XUSTZIP",147,0)
 S:'$G(%H) %H=0
"RTN","XUSTZIP",148,0)
 Q (%H\86400)_","_(%H#86400)
"RTN","XUSTZIP",149,0)
 ;
"RTN","XUSTZIP",150,0)
DSPTME(%H) ;Convert seconds to display format
"RTN","XUSTZIP",151,0)
 Q $$HTE^XLFDT($$H0(%H),"1P")
"RTN","XUSTZIP",152,0)
 ;
"RTN","XUSTZIP",153,0)
WATCH ;Watch the globals
"RTN","XUSTZIP",154,0)
 N TIME,C,I,X
"RTN","XUSTZIP",155,0)
WT2 S TIME=$$HTE^XLFDT($H)
"RTN","XUSTZIP",156,0)
 W @IOF,"Failed access attempts count.   Current time: ",TIME
"RTN","XUSTZIP",157,0)
 S I=0,C=0
"RTN","XUSTZIP",158,0)
 F  S I=$O(^XUSEC(4,I)) Q:I'>0  S X=^(I,0),C=1 W !,I,?5,"IP: ",$P(X,U,1),?25,"Count: ",$P(X,U,2),?35,"Until: ",$$HTE^XLFDT($P(X,U,3))
"RTN","XUSTZIP",159,0)
 I C=0 W !,?10,"None"
"RTN","XUSTZIP",160,0)
 W !,"Locked IP's.  Current time: ",TIME
"RTN","XUSTZIP",161,0)
 S I=0,C=0
"RTN","XUSTZIP",162,0)
 F  S I=$O(^XUSEC(3,I)) Q:I'>0  S X=^(I,0),C=1 W !,I,?5,"IP: ",$P(X,U,1),?25,"Until: ",$$FMTE^XLFDT($P(X,U,2))
"RTN","XUSTZIP",163,0)
 I C=0 W !,?10,"None"
"RTN","XUSTZIP",164,0)
 R !,"Refresh: Yes// ",X:30 S:'$T X="Y" G WT2:"Yy"[$E(X)
"RTN","XUSTZIP",165,0)
 I $E(X)="?" W !,"Enter 'Yes' or return to refresh, anyother key will exit" H 2 G WT2
"RTN","XUSTZIP",166,0)
 Q
"RTN","ZUGTM")
0^10^B7793985^B10091845
"RTN","ZUGTM",1,0)
ZU ;SF/JLI,RWF - For GT.M, TIE ALL TERMINALS TO THIS ROUTINE!! ;11/24/2003  11:34
"RTN","ZUGTM",2,0)
 ;;8.0;KERNEL;**275,419**;Jul 10, 1995;Build 5
"RTN","ZUGTM",3,0)
 ; for GT.M for VMS & Unix, version 4.3
"RTN","ZUGTM",4,0)
 ;
"RTN","ZUGTM",5,0)
 ;The env var ZINTRRUPT should be set to catch all interrupts.
"RTN","ZUGTM",6,0)
EN ;See that escape processing is off, Conflict with Screenman
"RTN","ZUGTM",7,0)
 U $P:(NOCENABLE:NOESCAPE)
"RTN","ZUGTM",8,0)
 N $ESTACK,$ETRAP S $ETRAP="D ERR^ZU Q:$QUIT -9 Q"
"RTN","ZUGTM",9,0)
 S $ZINTERRUPT="I $$JOBEXAM^ZU($ZPOSITION)"
"RTN","ZUGTM",10,0)
 D:+$G(^%ZTSCH("LOGRSRC")) LOGRSRC^%ZOSV("$LOGIN$")
"RTN","ZUGTM",11,0)
 D COUNT^XUSCNT(1)
"RTN","ZUGTM",12,0)
 G ^XUS
"RTN","ZUGTM",13,0)
 ;
"RTN","ZUGTM",14,0)
 ;
"RTN","ZUGTM",15,0)
ERR ;Come here on error
"RTN","ZUGTM",16,0)
 ; handle stack overflow errors specifically
"RTN","ZUGTM",17,0)
 I $P($ZS,",",3)["STACKCRIT"!("STACKOFLOW"[$P($ZS,",",3)) S $ET="Q:$ST>"_($ST-8)_"  G ERR2^ZU" Q
"RTN","ZUGTM",18,0)
 ;
"RTN","ZUGTM",19,0)
ERR2 ;
"RTN","ZUGTM",20,0)
 S $ETRAP="D UNWIND^ZU" L  ;Backup Trap
"RTN","ZUGTM",21,0)
 U $P:NOCENABLE
"RTN","ZUGTM",22,0)
 Q:$ECODE["<PROG>"
"RTN","ZUGTM",23,0)
 I $P($ZS,",",2,3)["^XUS1A:2, %GTM-E-IOWRITERR" G HALT
"RTN","ZUGTM",24,0)
 ;
"RTN","ZUGTM",25,0)
 D ^%ZTER K %ZT ; Capture symbol table first!
"RTN","ZUGTM",26,0)
 ;
"RTN","ZUGTM",27,0)
 I $G(IO)]"",$D(IO(1,IO)),$E($G(IOST))="P" D
"RTN","ZUGTM",28,0)
 . U IO
"RTN","ZUGTM",29,0)
 . W @$S($D(IOF):IOF,1:"#")
"RTN","ZUGTM",30,0)
 I $G(IO(0))]"" D
"RTN","ZUGTM",31,0)
 . U IO(0)
"RTN","ZUGTM",32,0)
 . W !!,"RECORDING THAT AN ERROR OCCURRED ---"
"RTN","ZUGTM",33,0)
 . W !!?15,"Sorry 'bout that"
"RTN","ZUGTM",34,0)
 . W !,*7
"RTN","ZUGTM",35,0)
 . W !?10,"$STACK=",$STACK,"  $ECODE=",$ECODE
"RTN","ZUGTM",36,0)
 . W !?10,"$ZSTATUS=",$ZSTATUS
"RTN","ZUGTM",37,0)
 ;
"RTN","ZUGTM",38,0)
 ;
"RTN","ZUGTM",39,0)
 I $G(DUZ)'>0 G HALT
"RTN","ZUGTM",40,0)
 S $ET="D HALT^ZU"
"RTN","ZUGTM",41,0)
 ;
"RTN","ZUGTM",42,0)
 I $P($ZS,",",3)'["-CTRLC" S XUERF="" G ^XUSCLEAN ;419
"RTN","ZUGTM",43,0)
CTRLC U $P
"RTN","ZUGTM",44,0)
 W !,"--Interrupt Acknowledged",!
"RTN","ZUGTM",45,0)
 D KILL1^XUSCLEAN ;Clean up symbol table
"RTN","ZUGTM",46,0)
 S $ECODE=",<<POP>>,"
"RTN","ZUGTM",47,0)
 Q
"RTN","ZUGTM",48,0)
 ;
"RTN","ZUGTM",49,0)
UNWIND ;Unwind the stack
"RTN","ZUGTM",50,0)
 Q:$ESTACK>1  G CTRLC2:$ECODE["<<POP>>"
"RTN","ZUGTM",51,0)
 S $ECODE=""
"RTN","ZUGTM",52,0)
 Q
"RTN","ZUGTM",53,0)
 ;
"RTN","ZUGTM",54,0)
CTRLC2 S $ECODE="" G:$G(^XUTL("XQ",$J,"T"))<2 ^XUSCLEAN
"RTN","ZUGTM",55,0)
 S ^XUTL("XQ",$J,"T")=1,XQY=$G(^(1)),XQY0=$P(XQY,"^",2,99)
"RTN","ZUGTM",56,0)
 G:$P(XQY0,"^",4)'="M" HALT
"RTN","ZUGTM",57,0)
 S XQPSM=$P(XQY,"^",1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3)
"RTN","ZUGTM",58,0)
 G:'XQY ^XUSCLEAN
"RTN","ZUGTM",59,0)
 S $ECODE="",$ETRAP="D ERR^ZU Q:$QUIT 0 Q"
"RTN","ZUGTM",60,0)
 U $P:NOESCAPE
"RTN","ZUGTM",61,0)
 G M1^XQ
"RTN","ZUGTM",62,0)
 ;
"RTN","ZUGTM",63,0)
HALT I $D(^XUTL("XQ",$J)) D:$G(DUZ)>0 BYE^XUSCLEAN
"RTN","ZUGTM",64,0)
 D COUNT^XUSCNT(-1)
"RTN","ZUGTM",65,0)
 D:+$G(^%ZTSCH("LOGRSRC")) LOGRSRC^%ZOSV("$LOGOUT$")
"RTN","ZUGTM",66,0)
 HALT
"RTN","ZUGTM",67,0)
 ;
"RTN","ZUGTM",68,0)
JOBEXAM(%ZPOS) ;
"RTN","ZUGTM",69,0)
 N %reference S %reference=$REFERENCE
"RTN","ZUGTM",70,0)
 S ^XUTL("XUSYS",$J,0)=$H,^XUTL("XUSYS",$J,"INTERRUPT")=$G(%ZPOS)
"RTN","ZUGTM",71,0)
 I %ZPOS["^" S ^XUTL("XUSYS",$J,"codeline")=$T(@%ZPOS)
"RTN","ZUGTM",72,0)
 K ^XUTL("XUSYS",$J,"JE")
"RTN","ZUGTM",73,0)
 I $G(^XUTL("XUSYS","COMMAND"))'="EXAM" ZSHOW "SD":^XUTL("XUSYS",$J,"JE")
"RTN","ZUGTM",74,0)
 I $G(^XUTL("XUSYS","COMMAND"))="EXAM" ZSHOW "*":^XUTL("XUSYS",$J,"JE")
"RTN","ZUGTM",75,0)
 I $G(^XUTL("XUSYS",$J,"CMD"))="HALT" ;To do.
"RTN","ZUGTM",76,0)
 Q 1
"RTN","ZUGTM",77,0)
 ;
"RTN","ZUONT")
0^9^B4589154^B3721758
"RTN","ZUONT",1,0)
ZU ;SF/RWF - For Cache and Open M! ;06/13/2006
"RTN","ZUONT",2,0)
 ;;8.0;KERNEL;**34,94,118,162,170,225,419**;Jul 10, 1995;Build 5
"RTN","ZUONT",3,0)
 ;TIE ALL TERMINALS EXCEPT CONSOLE TO THIS ROUTINE!
"RTN","ZUONT",4,0)
EN N $ES,$ETRAP S $ETRAP="D ERR^ZU Q:$QUIT -9 Q"
"RTN","ZUONT",5,0)
 D:+$G(^%ZTSCH("LOGRSRC")) LOGRSRC^%ZOSV("$LOGIN$")
"RTN","ZUONT",6,0)
 ;The next line keeps sign-on users from taking the last slot
"RTN","ZUONT",7,0)
 ;It can be commented out if not needed.
"RTN","ZUONT",8,0)
 I $$AVJ^%ZOSV()<3 W $C(7),!!,"** TROUBLE ** - NO AVALIABLE JOBS ** CALL IRM NOW! **" G HALT
"RTN","ZUONT",9,0)
 ;Only call ShareLic for Telnet connections.
"RTN","ZUONT",10,0)
 I ($I["|TNT|")!($I["TNA") D SHARELIC^%ZOSV(0)
"RTN","ZUONT",11,0)
 G ^XUS
"RTN","ZUONT",12,0)
 ;
"RTN","ZUONT",13,0)
 ;
"RTN","ZUONT",14,0)
ERR ;Come here on error
"RTN","ZUONT",15,0)
 ; Try and handle stack overflow errors specifically
"RTN","ZUONT",16,0)
 I $ZE["STACK" S $ET="Q:$ST>"_($ST-8)_"  D ERR2^ZU" Q
"RTN","ZUONT",17,0)
ERR2 ;
"RTN","ZUONT",18,0)
 S $ET="D UNWIND^ZU" L  ;Backup trap (419)
"RTN","ZUONT",19,0)
 Q:$ECODE["<PROG>"
"RTN","ZUONT",20,0)
 ;
"RTN","ZUONT",21,0)
 D ^%ZTER K %ZT ; Capture symbol table first!
"RTN","ZUONT",22,0)
 ;
"RTN","ZUONT",23,0)
 I $G(IO)]"",$D(IO(1,IO)),$E($G(IOST))="P" D
"RTN","ZUONT",24,0)
 . U IO
"RTN","ZUONT",25,0)
 . W @$S($D(IOF):IOF,1:"#")
"RTN","ZUONT",26,0)
 I $G(IO(0))]"" D
"RTN","ZUONT",27,0)
 . U IO(0)
"RTN","ZUONT",28,0)
 . W !!,"RECORDING THAT AN ERROR OCCURRED ---"
"RTN","ZUONT",29,0)
 . W !!?15,"Sorry 'bout that"
"RTN","ZUONT",30,0)
 . W !,*7
"RTN","ZUONT",31,0)
 . W !?10,"$STACK=",$STACK,"  $ECODE=",$ECODE
"RTN","ZUONT",32,0)
 . W !?10,"$ZERROR=",$ZERROR
"RTN","ZUONT",33,0)
 ;
"RTN","ZUONT",34,0)
 I $G(DUZ)'>0 G HALT
"RTN","ZUONT",35,0)
 X ^%ZOSF("PROGMODE") Q:Y
"RTN","ZUONT",36,0)
 S $ET="D HALT^ZU" ;419
"RTN","ZUONT",37,0)
 I $ZE'["<INTERRUPT>" S XUERF="" G ^XUSCLEAN ;419
"RTN","ZUONT",38,0)
CTRLC I $D(IO)=11 U IO(0) W !,"--Interrupt Acknowledged",!
"RTN","ZUONT",39,0)
 D KILL1^XUSCLEAN ;Clean up symbol table
"RTN","ZUONT",40,0)
 S $ECODE=",U55,"
"RTN","ZUONT",41,0)
 Q
"RTN","ZUONT",42,0)
 ;
"RTN","ZUONT",43,0)
UNWIND ;Unwind the stack
"RTN","ZUONT",44,0)
 Q:$ESTACK>1  G CTRLC2:$ECODE["U55"
"RTN","ZUONT",45,0)
 S $ECODE=""
"RTN","ZUONT",46,0)
 Q
"RTN","ZUONT",47,0)
 ;
"RTN","ZUONT",48,0)
CTRLC2 S $ECODE="" G:$G(^XUTL("XQ",$J,"T"))<2 ^XUSCLEAN
"RTN","ZUONT",49,0)
 S ^XUTL("XQ",$J,"T")=1,XQY=^(1),XQY0=$P(XQY,"^",2,99)
"RTN","ZUONT",50,0)
 G:$P(XQY0,"^",4)'="M" HALT
"RTN","ZUONT",51,0)
 S XQPSM=$P(XQY,"^",1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3)
"RTN","ZUONT",52,0)
 G:'XQY ^XUSCLEAN
"RTN","ZUONT",53,0)
 S $ECODE="",$ETRAP="D ERR^ZU"
"RTN","ZUONT",54,0)
 G M1^XQ
"RTN","ZUONT",55,0)
 ;
"RTN","ZUONT",56,0)
HALT S $ECODE="" I $D(^XUTL("XQ",$J)) D BYE^XUSCLEAN
"RTN","ZUONT",57,0)
 D:+$G(^%ZTSCH("LOGRSRC")) LOGRSRC^%ZOSV("$LOGOUT$")
"RTN","ZUONT",58,0)
 HALT
"RTN","ZUONT",59,0)
 ;
"VER")
8.0^22.0
"^DD",200,200,11,0)
VERIFY CODE^FXOa^^.1;2^Q
"^DD",200,200,11,1,0)
^.1
"^DD",200,200,11,1,1,0)
^^TRIGGER^200^11.2
"^DD",200,200,11,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^VA(200,D0,.1)):^(.1),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV S X=$S(D0=DUZ:$H,1:"60000,1") S DIH=$G(^VA(200,DIV(0),.1)),DIV=X S $P(^(.1),U,1)=DIV,DIH=200,DIG=11.2 D ^DICR
"^DD",200,200,11,1,1,2)
Q
"^DD",200,200,11,1,1,3)
Triggers the DATE VERIFY CODE LAST CHANGED field.
"^DD",200,200,11,1,1,"CREATE VALUE")
$S(D0=DUZ:$H,1:"60000,1")
"^DD",200,200,11,1,1,"DELETE VALUE")
NO EFFECT
"^DD",200,200,11,1,1,"DT")
3060511
"^DD",200,200,11,1,1,"FIELD")
DATE VERIFY CODE LAST CHANGED
"^DD",200,200,11,1,2,0)
200^VOLD^MUMPS
"^DD",200,200,11,1,2,1)
Q
"^DD",200,200,11,1,2,2)
S ^VA(200,DA,"VOLD",X)=+$H
"^DD",200,200,11,1,2,"%D",0)
^^3^3^2920513^
"^DD",200,200,11,1,2,"%D",1,0)
This builds a list of old VERIFY CODEs that this user has had in the past.
"^DD",200,200,11,1,2,"%D",2,0)
It is cleaned  out with the same option the purges the old
"^DD",200,200,11,1,2,"%D",3,0)
access code X-ref.
"^DD",200,200,11,2)
S Y(0)=Y S Y="<Hidden>"
"^DD",200,200,11,2.1)
S Y="<Hidden>"
"^DD",200,200,11,3)

"^DD",200,200,11,9)
^
"^DD",200,200,11,21,0)
^^8^8^2920513^^^^
"^DD",200,200,11,21,1,0)
This is the code that is used to verify that the ACCESS CODE was not
"^DD",200,200,11,21,2,0)
found by accident.
"^DD",200,200,11,21,3,0)
It may be entered at logon time immediately after the ACCESS CODE
"^DD",200,200,11,21,4,0)
by typing a semicolon, then the VERIFY CODE.
"^DD",200,200,11,21,5,0)

"^DD",200,200,11,21,6,0)
Verify codes may be changed by the user with the CHANGE USER CHARACTERISTICS
"^DD",200,200,11,21,7,0)
option.  The kernel site parameter field LIFETIME OF VERIFY CODE forces
"^DD",200,200,11,21,8,0)
the user to periodically enter a new verify code.
"^DD",200,200,11,"AUDIT")
y
"^DD",200,200,11,"DT")
3060511
"^DD",8989.3,8989.3,11.2,0)
AUTO-GENERATE VERIFY CODES^S^n:No;y:Yes;^3;3^Q
"^DD",8989.3,8989.3,11.2,21,0)
^^7^7^3060817^
"^DD",8989.3,8989.3,11.2,21,1,0)
During the C&A review of VistA the current practice of leaving the VERIFY
"^DD",8989.3,8989.3,11.2,21,2,0)
CODE blank until the user signed on the first time was found to not comply
"^DD",8989.3,8989.3,11.2,21,3,0)
with VA DIRECTIVE 6504. 
"^DD",8989.3,8989.3,11.2,21,4,0)
 
"^DD",8989.3,8989.3,11.2,21,5,0)
This field will be used when someone other than the user goes to enter a 
"^DD",8989.3,8989.3,11.2,21,6,0)
verify code.  The system will select a strong verify code and tell the 
"^DD",8989.3,8989.3,11.2,21,7,0)
operator what the new code is.
"^DD",8989.3,8989.3,11.2,"DT")
3060817
"BLD",943,6)
^348
**END**
**END**
