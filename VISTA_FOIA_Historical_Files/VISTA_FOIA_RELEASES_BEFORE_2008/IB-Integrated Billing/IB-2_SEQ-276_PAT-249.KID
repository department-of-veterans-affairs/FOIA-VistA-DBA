Released IB*2*249 SEQ #276
Extracted from mail message
**KIDS**:IB*2.0*249^

**INSTALL NAME**
IB*2.0*249
"BLD",5183,0)
IB*2.0*249^INTEGRATED BILLING^0^3050519^y
"BLD",5183,4,0)
^9.64PA^^
"BLD",5183,"KRN",0)
^9.67PA^8989.52^19
"BLD",5183,"KRN",.4,0)
.4
"BLD",5183,"KRN",.401,0)
.401
"BLD",5183,"KRN",.402,0)
.402
"BLD",5183,"KRN",.403,0)
.403
"BLD",5183,"KRN",.5,0)
.5
"BLD",5183,"KRN",.84,0)
.84
"BLD",5183,"KRN",3.6,0)
3.6
"BLD",5183,"KRN",3.8,0)
3.8
"BLD",5183,"KRN",9.2,0)
9.2
"BLD",5183,"KRN",9.8,0)
9.8
"BLD",5183,"KRN",9.8,"NM",0)
^9.68A^22^21
"BLD",5183,"KRN",9.8,"NM",1,0)
IBATOP^^0^B42102110
"BLD",5183,"KRN",9.8,"NM",2,0)
IBCNSBL^^0^B5839700
"BLD",5183,"KRN",9.8,"NM",3,0)
IBCNSBL1^^0^B30459723
"BLD",5183,"KRN",9.8,"NM",4,0)
IBJDI1^^0^B62725566
"BLD",5183,"KRN",9.8,"NM",5,0)
IBJDI11^^0^B14479929
"BLD",5183,"KRN",9.8,"NM",6,0)
IBJDI2^^0^B11468572
"BLD",5183,"KRN",9.8,"NM",7,0)
IBJDI21^^0^B68666244
"BLD",5183,"KRN",9.8,"NM",8,0)
IBOUNP1^^0^B15243221
"BLD",5183,"KRN",9.8,"NM",9,0)
IBOUNP2^^0^B5586175
"BLD",5183,"KRN",9.8,"NM",10,0)
IBOUNP3^^0^B22364020
"BLD",5183,"KRN",9.8,"NM",11,0)
IBOVOP^^0^B4769032
"BLD",5183,"KRN",9.8,"NM",12,0)
IBYZ15A^^1^
"BLD",5183,"KRN",9.8,"NM",13,0)
IBTRE2^^0^B32496028
"BLD",5183,"KRN",9.8,"NM",14,0)
IBTRE20^^0^B13573861
"BLD",5183,"KRN",9.8,"NM",16,0)
IBEFUNC^^0^B45602678
"BLD",5183,"KRN",9.8,"NM",17,0)
IBECEAU^^0^B13792426
"BLD",5183,"KRN",9.8,"NM",18,0)
IBOVOP1^^0^B14282604
"BLD",5183,"KRN",9.8,"NM",19,0)
IBSDU^^0^B7620774
"BLD",5183,"KRN",9.8,"NM",20,0)
IBTUTL1^^0^B11559784
"BLD",5183,"KRN",9.8,"NM",21,0)
IBCNEDE2^^0^B62755710
"BLD",5183,"KRN",9.8,"NM",22,0)
IBBFAPI^^0^B34561336
"BLD",5183,"KRN",9.8,"NM","B","IBATOP",1)

"BLD",5183,"KRN",9.8,"NM","B","IBBFAPI",22)

"BLD",5183,"KRN",9.8,"NM","B","IBCNEDE2",21)

"BLD",5183,"KRN",9.8,"NM","B","IBCNSBL",2)

"BLD",5183,"KRN",9.8,"NM","B","IBCNSBL1",3)

"BLD",5183,"KRN",9.8,"NM","B","IBECEAU",17)

"BLD",5183,"KRN",9.8,"NM","B","IBEFUNC",16)

"BLD",5183,"KRN",9.8,"NM","B","IBJDI1",4)

"BLD",5183,"KRN",9.8,"NM","B","IBJDI11",5)

"BLD",5183,"KRN",9.8,"NM","B","IBJDI2",6)

"BLD",5183,"KRN",9.8,"NM","B","IBJDI21",7)

"BLD",5183,"KRN",9.8,"NM","B","IBOUNP1",8)

"BLD",5183,"KRN",9.8,"NM","B","IBOUNP2",9)

"BLD",5183,"KRN",9.8,"NM","B","IBOUNP3",10)

"BLD",5183,"KRN",9.8,"NM","B","IBOVOP",11)

"BLD",5183,"KRN",9.8,"NM","B","IBOVOP1",18)

"BLD",5183,"KRN",9.8,"NM","B","IBSDU",19)

"BLD",5183,"KRN",9.8,"NM","B","IBTRE2",13)

"BLD",5183,"KRN",9.8,"NM","B","IBTRE20",14)

"BLD",5183,"KRN",9.8,"NM","B","IBTUTL1",20)

"BLD",5183,"KRN",9.8,"NM","B","IBYZ15A",12)

"BLD",5183,"KRN",19,0)
19
"BLD",5183,"KRN",19.1,0)
19.1
"BLD",5183,"KRN",101,0)
101
"BLD",5183,"KRN",409.61,0)
409.61
"BLD",5183,"KRN",771,0)
771
"BLD",5183,"KRN",870,0)
870
"BLD",5183,"KRN",8989.51,0)
8989.51
"BLD",5183,"KRN",8989.52,0)
8989.52
"BLD",5183,"KRN",8994,0)
8994
"BLD",5183,"KRN","B",.4,.4)

"BLD",5183,"KRN","B",.401,.401)

"BLD",5183,"KRN","B",.402,.402)

"BLD",5183,"KRN","B",.403,.403)

"BLD",5183,"KRN","B",.5,.5)

"BLD",5183,"KRN","B",.84,.84)

"BLD",5183,"KRN","B",3.6,3.6)

"BLD",5183,"KRN","B",3.8,3.8)

"BLD",5183,"KRN","B",9.2,9.2)

"BLD",5183,"KRN","B",9.8,9.8)

"BLD",5183,"KRN","B",19,19)

"BLD",5183,"KRN","B",19.1,19.1)

"BLD",5183,"KRN","B",101,101)

"BLD",5183,"KRN","B",409.61,409.61)

"BLD",5183,"KRN","B",771,771)

"BLD",5183,"KRN","B",870,870)

"BLD",5183,"KRN","B",8989.51,8989.51)

"BLD",5183,"KRN","B",8989.52,8989.52)

"BLD",5183,"KRN","B",8994,8994)

"BLD",5183,"QUES",0)
^9.62^^
"BLD",5183,"REQB",0)
^9.611^22^12
"BLD",5183,"REQB",10,0)
SD*5.3*316^2
"BLD",5183,"REQB",11,0)
IB*2.0*82^2
"BLD",5183,"REQB",12,0)
IB*2.0*103^2
"BLD",5183,"REQB",13,0)
IB*2.0*121^2
"BLD",5183,"REQB",14,0)
IB*2.0*123^2
"BLD",5183,"REQB",15,0)
IB*2.0*155^2
"BLD",5183,"REQB",16,0)
IB*2.0*183^2
"BLD",5183,"REQB",18,0)
IB*2.0*223^2
"BLD",5183,"REQB",19,0)
IB*2.0*234^2
"BLD",5183,"REQB",20,0)
IB*2.0*271^2
"BLD",5183,"REQB",21,0)
SD*5.3*301^2
"BLD",5183,"REQB",22,0)
IB*2.0*297^2
"BLD",5183,"REQB","B","IB*2.0*103",12)

"BLD",5183,"REQB","B","IB*2.0*121",13)

"BLD",5183,"REQB","B","IB*2.0*123",14)

"BLD",5183,"REQB","B","IB*2.0*155",15)

"BLD",5183,"REQB","B","IB*2.0*183",16)

"BLD",5183,"REQB","B","IB*2.0*223",18)

"BLD",5183,"REQB","B","IB*2.0*234",19)

"BLD",5183,"REQB","B","IB*2.0*271",20)

"BLD",5183,"REQB","B","IB*2.0*297",22)

"BLD",5183,"REQB","B","IB*2.0*82",11)

"BLD",5183,"REQB","B","SD*5.3*301",21)

"BLD",5183,"REQB","B","SD*5.3*316",10)

"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
249^3050519
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
21
"RTN","IBATOP")
0^1^B42102110
"RTN","IBATOP",1,0)
IBATOP ;ALB/CPM-TRANSFER PRICING PATIENT LISTING ;21-MAR-99
"RTN","IBATOP",2,0)
 ;;2.0;INTEGRATED BILLING;**115,153,183,249**;21-MAR-94
"RTN","IBATOP",3,0)
 ;
"RTN","IBATOP",4,0)
EN ; Option entry point.
"RTN","IBATOP",5,0)
 ;
"RTN","IBATOP",6,0)
 W !!,"This report creates a listing of all Transfer Pricing patients for"
"RTN","IBATOP",7,0)
 W !,"specific networks or facilities.  Please enter all applicable networks"
"RTN","IBATOP",8,0)
 W !,"and facilities, specifying networks by VISN (i.e., 'VISN 1').",!
"RTN","IBATOP",9,0)
 ;
"RTN","IBATOP",10,0)
 ; - allow entry of network/facilities; quit if none entered
"RTN","IBATOP",11,0)
 Q:$$FAC^IBATUTL
"RTN","IBATOP",12,0)
 ;
"RTN","IBATOP",13,0)
 ; - set flag to determine if all facilities were entered
"RTN","IBATOP",14,0)
 S IBALL='$D(IBFAC)
"RTN","IBATOP",15,0)
 ;
"RTN","IBATOP",16,0)
 W !!,"This report requires only an 80 column printer.",!
"RTN","IBATOP",17,0)
 ;
"RTN","IBATOP",18,0)
 ; - select a device
"RTN","IBATOP",19,0)
 S %ZIS="QM" D ^%ZIS I POP G ENQ
"RTN","IBATOP",20,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBATOP",21,0)
 .S ZTRTN="DQ^IBATOP",ZTDESC="IB - TRANSFER PRICING PATIENT LISTING"
"RTN","IBATOP",22,0)
 .S ZTSAVE("IBALL")="" I $D(IBFAC) S ZTSAVE("IBFAC(")=""
"RTN","IBATOP",23,0)
 .D ^%ZTLOAD
"RTN","IBATOP",24,0)
 .W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBATOP",25,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBATOP",26,0)
 ;
"RTN","IBATOP",27,0)
 U IO
"RTN","IBATOP",28,0)
 ;
"RTN","IBATOP",29,0)
DQ ; Tasked entry point.
"RTN","IBATOP",30,0)
 ;
"RTN","IBATOP",31,0)
 K ^TMP("IBATOP",$J),IBARR,IBFACN,^TMP($J,"SDAMA301"),^TMP("IBDFN",$J)
"RTN","IBATOP",32,0)
 N IBARRAY,IBCOUNT,IBNDT
"RTN","IBATOP",33,0)
 ;
"RTN","IBATOP",34,0)
 ; - process the entire file if all patients were selected
"RTN","IBATOP",35,0)
 I IBALL D  G PRINT
"RTN","IBATOP",36,0)
 .S DFN=0 F  S DFN=$O(^IBAT(351.6,DFN)) Q:'DFN  S IBD=$G(^(DFN,0)) D
"RTN","IBATOP",37,0)
 ..;
"RTN","IBATOP",38,0)
 ..; - get the enrolled facility and find the associated network
"RTN","IBATOP",39,0)
 ..S IBSTN=+$$PPF^IBATUTL(DFN)
"RTN","IBATOP",40,0)
 ..;S IBSTN=+$P(IBD,"^",3)
"RTN","IBATOP",41,0)
 ..I '$D(IBARR(IBSTN)) D
"RTN","IBATOP",42,0)
 ...N X,Y
"RTN","IBATOP",43,0)
 ...S X=$$VISN^IBATUTL(IBSTN),Y=$$INST^IBATUTL(IBSTN)
"RTN","IBATOP",44,0)
 ...S:$P(Y,"^",2)="" $P(Y,"^",2)="<No Sta. #>"
"RTN","IBATOP",45,0)
 ...S IBARR(IBSTN)=+$P($P(X,"^",2)," ",2)_"^"_Y
"RTN","IBATOP",46,0)
 ...S IBFACN(IBSTN)=Y
"RTN","IBATOP",47,0)
 ..;
"RTN","IBATOP",48,0)
 ..; - set patient information
"RTN","IBATOP",49,0)
 ..D SET(+IBARR(IBSTN),IBSTN,DFN)
"RTN","IBATOP",50,0)
 ;
"RTN","IBATOP",51,0)
 ; - process patients from selected networks/facilities
"RTN","IBATOP",52,0)
 S IBX="" F  S IBX=$O(IBFAC(IBX)) Q:IBX=""  D
"RTN","IBATOP",53,0)
 .S IBSTN="" F  S IBSTN=$O(IBFAC(IBX,"C",IBSTN)) Q:IBSTN=""  D
"RTN","IBATOP",54,0)
 ..;
"RTN","IBATOP",55,0)
 ..; - get facility/network information
"RTN","IBATOP",56,0)
 ..S IBNET=+$P($P($$VISN^IBATUTL(IBSTN),"^",2)," ",2)
"RTN","IBATOP",57,0)
 ..S IBY=$$INST^IBATUTL(IBSTN)
"RTN","IBATOP",58,0)
 ..S:$P(IBY,"^",2)="" $P(IBY,"^",2)="<No Sta. #>"
"RTN","IBATOP",59,0)
 ..S IBFACN(IBSTN)=IBY
"RTN","IBATOP",60,0)
 ..;
"RTN","IBATOP",61,0)
 ..; - find all patients from the specific facility
"RTN","IBATOP",62,0)
 ..S DFN=0 F  S DFN=$O(^IBAT(351.6,"AD",IBSTN,DFN)) Q:'DFN  D
"RTN","IBATOP",63,0)
 ...D SET(IBNET,IBSTN,DFN)
"RTN","IBATOP",64,0)
 ;
"RTN","IBATOP",65,0)
PRINT ;
"RTN","IBATOP",66,0)
 ; now call scheduling to look up future appts
"RTN","IBATOP",67,0)
 S IBARRAY(1)=$$NOW^XLFDT_";9999999"
"RTN","IBATOP",68,0)
 S IBARRAY(3)="R;I;NT"
"RTN","IBATOP",69,0)
 S IBARRAY(4)="^TMP(""IBDFN"",$J,"
"RTN","IBATOP",70,0)
 S IBARRAY("SORT")="P"
"RTN","IBATOP",71,0)
 S IBARRAY("FLDS")=1
"RTN","IBATOP",72,0)
 S IBCOUNT=$$SDAPI^SDAMA301(.IBARRAY)
"RTN","IBATOP",73,0)
 ;
"RTN","IBATOP",74,0)
 ; Print the report.
"RTN","IBATOP",75,0)
 ;
"RTN","IBATOP",76,0)
 S (IBPAG,IBQ)=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%)
"RTN","IBATOP",77,0)
 ;
"RTN","IBATOP",78,0)
 I '$D(^TMP("IBATOP",$J)) D HDR(0) W !!!,"There are no Transfer Pricing patients for the selected networks/facilities."  G ENQ
"RTN","IBATOP",79,0)
 ;
"RTN","IBATOP",80,0)
 S IBNET="" F  S IBNET=$O(^TMP("IBATOP",$J,IBNET)) Q:IBNET=""!(IBQ)  D
"RTN","IBATOP",81,0)
 .D PAUSE:IBPAG,HDR(IBNET)
"RTN","IBATOP",82,0)
 .S IBSTN="" F  S IBSTN=$O(^TMP("IBATOP",$J,IBNET,IBSTN)) Q:IBSTN=""!(IBQ)  D
"RTN","IBATOP",83,0)
 ..;
"RTN","IBATOP",84,0)
 ..I $Y>(IOSL-4) D PAUSE Q:IBQ  D HDR(IBNET)
"RTN","IBATOP",85,0)
 ..D DISFAC(IBSTN)
"RTN","IBATOP",86,0)
 ..;
"RTN","IBATOP",87,0)
 ..S IBNAM="" F  S IBNAM=$O(^TMP("IBATOP",$J,IBNET,IBSTN,IBNAM)) Q:IBNAM=""!(IBQ)  S IBXX=$G(^(IBNAM)) D
"RTN","IBATOP",88,0)
 ...;
"RTN","IBATOP",89,0)
 ...I $Y>(IOSL-2) D PAUSE Q:IBQ  D HDR(IBNET),DISFAC(IBSTN)
"RTN","IBATOP",90,0)
 ...;
"RTN","IBATOP",91,0)
 ...W !,$E($P(IBNAM,"@@"),1,20)," (",$P(IBXX,"^"),")"
"RTN","IBATOP",92,0)
 ...W ?28,$E($P(IBXX,"^",2),1,19),?49,$P(IBXX,"^",3),?55,$P(IBXX,"^",4)
"RTN","IBATOP",93,0)
 ...W ?61,$S($P(IBXX,"^",5):$$DAT1^IBOUTL($P(IBXX,"^",5)),1:"")
"RTN","IBATOP",94,0)
 ...S IBNDT=$O(^TMP($J,"SDAMA301",$P(IBNAM,"@@",2),0))
"RTN","IBATOP",95,0)
 ...I IBNDT S $P(IBXX,"^",6)=$S('$P(IBXX,"^",6):IBNDT,IBNDT<$P(IBXX,"^",6):IBNDT,1:$P(IBXX,"^",6))
"RTN","IBATOP",96,0)
 ...W ?71,$S($P(IBXX,"^",6):$$DAT1^IBOUTL($P(IBXX,"^",6)),1:"")
"RTN","IBATOP",97,0)
 ;
"RTN","IBATOP",98,0)
 I 'IBQ D PAUSE
"RTN","IBATOP",99,0)
 ;
"RTN","IBATOP",100,0)
ENQ K ^TMP("IBATOP",$J)
"RTN","IBATOP",101,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBATOP",102,0)
 ;
"RTN","IBATOP",103,0)
 D ^%ZISC
"RTN","IBATOP",104,0)
ENQ1 K IBPAG,IBD,IBQ,IBRUN,IBNET,IBSTN,IBNAM,IBXX,IBY
"RTN","IBATOP",105,0)
 K IBFAC,IBFACN,IBARR,IBALL,IBX,DFN,POP,X,Y,SDCNT
"RTN","IBATOP",106,0)
 Q
"RTN","IBATOP",107,0)
 ;
"RTN","IBATOP",108,0)
 ;
"RTN","IBATOP",109,0)
SET(IBNET,IBSTA,DFN) ; Create the temporary sort file.
"RTN","IBATOP",110,0)
 ;  Input:  IBNET  --  The network/VISN number
"RTN","IBATOP",111,0)
 ;          IBSTA  --  The Station number
"RTN","IBATOP",112,0)
 ;            DFN  --  Pointer to the patient in file #2
"RTN","IBATOP",113,0)
 ;
"RTN","IBATOP",114,0)
 N IBDFN,IBINS,IBMT,IBTXMT,VAEL,VAERR
"RTN","IBATOP",115,0)
 ;
"RTN","IBATOP",116,0)
 S IBDFN=$$PT^IBEFUNC(DFN)
"RTN","IBATOP",117,0)
 S IBINS=$$INSURED^IBCNS1(DFN),IBMT=$P($$LST^DGMTU(DFN),"^",4)
"RTN","IBATOP",118,0)
 S IBMT=$S(IBMT="C":"YES",IBMT="G":"GMT",IBMT="P":"PEN",IBMT="R":"REQ",1:"NO")
"RTN","IBATOP",119,0)
 S IBTXMT=$$TXMT(DFN)
"RTN","IBATOP",120,0)
 D ELIG^VADPT
"RTN","IBATOP",121,0)
 ;
"RTN","IBATOP",122,0)
 ; - set all patients to be included in array for next appt.
"RTN","IBATOP",123,0)
 I $$GETICN^MPIF001(DFN)>0 S ^TMP("IBDFN",$J,DFN)=""
"RTN","IBATOP",124,0)
 ;
"RTN","IBATOP",125,0)
 ; - set all patient data into the temporary file
"RTN","IBATOP",126,0)
 S ^TMP("IBATOP",$J,IBNET,IBSTA,$P(IBDFN,"^")_"@@"_DFN)=$P(IBDFN,"^",3)_"^"_$P(VAEL(1),"^",2)_"^"_IBMT_"^"_$S(IBINS:"YES",1:"NO")_"^"_IBTXMT
"RTN","IBATOP",127,0)
 Q
"RTN","IBATOP",128,0)
 ;
"RTN","IBATOP",129,0)
TXMT(DFN) ; Find the patient's last treatment date and next sched date
"RTN","IBATOP",130,0)
 ;  Input:   DFN  --  Pointer to the patient in file #2
"RTN","IBATOP",131,0)
 ; Output:   1^2, where
"RTN","IBATOP",132,0)
 ;                1 => last treatment date, or null
"RTN","IBATOP",133,0)
 ;                2 => next scheduled treatment date, or null
"RTN","IBATOP",134,0)
 ;                     (not including scheduling)
"RTN","IBATOP",135,0)
 ;
"RTN","IBATOP",136,0)
 N IBDT,IBLT,IBNEXT,IBQ,X,X1,X2
"RTN","IBATOP",137,0)
 S (IBLT,IBNEXT)=""
"RTN","IBATOP",138,0)
 ;
"RTN","IBATOP",139,0)
 ; - if current inpatient, set last treatment date to today
"RTN","IBATOP",140,0)
 I $G(^DPT(DFN,.105)) S IBLT=DT G TXMTN
"RTN","IBATOP",141,0)
 ;
"RTN","IBATOP",142,0)
 ; - get the last discharge date
"RTN","IBATOP",143,0)
 S IBLT=+$O(^DGPM("ATID3",DFN,"")) S:IBLT IBLT=9999999.9999999-IBLT\1
"RTN","IBATOP",144,0)
 S:IBLT>DT IBLT=DT
"RTN","IBATOP",145,0)
 ;
"RTN","IBATOP",146,0)
 ; - get the last registration date and compare to last treatment date
"RTN","IBATOP",147,0)
 S X=+$O(^DPT(DFN,"DIS",0)) I X S X=9999999-X\1 S:X>IBLT IBLT=X
"RTN","IBATOP",148,0)
 ;
"RTN","IBATOP",149,0)
 ; - get the last appointment or stop after last treatment date (if any)
"RTN","IBATOP",150,0)
 K ^TMP("DIERR",$J)
"RTN","IBATOP",151,0)
 I '$G(IBQ) D
"RTN","IBATOP",152,0)
 .D OPEN^SDQ(.IBQ) Q:'$G(IBQ)
"RTN","IBATOP",153,0)
 .D INDEX^SDQ(.IBQ,"PATIENT/DATE","SET")
"RTN","IBATOP",154,0)
 .D SCANCB^SDQ(.IBQ,"I $S($P(SDOE0,U,8)=2:1,$P(SDOE0,U,8)=1:$$APPT^IBATOP(SDOE0),1:0) S IBLT=SDOE0\1,SDSTOP=1","SET")
"RTN","IBATOP",155,0)
 ;
"RTN","IBATOP",156,0)
 D PAT^SDQ(.IBQ,DFN,"SET")
"RTN","IBATOP",157,0)
 D DATE^SDQ(.IBQ,IBLT+.000001,9999999,"SET")
"RTN","IBATOP",158,0)
 D ACTIVE^SDQ(.IBQ,"TRUE","SET")
"RTN","IBATOP",159,0)
 D SCAN^SDQ(.IBQ,"BACKWARD")
"RTN","IBATOP",160,0)
 D CLOSE^SDQ(.IBQ)
"RTN","IBATOP",161,0)
 K ^TMP("DIERR",$J)
"RTN","IBATOP",162,0)
 ;
"RTN","IBATOP",163,0)
TXMTN ; - find next scheduled treatment date
"RTN","IBATOP",164,0)
 S IBNEXT=""
"RTN","IBATOP",165,0)
 S X=0 F  S X=$O(^DGS(41.1,"B",DFN,X)) Q:'X  D  ;         sched adm
"RTN","IBATOP",166,0)
 .S X1=$G(^DGS(41.1,X,0))
"RTN","IBATOP",167,0)
 .S X2=$P(X1,"^",2)\1
"RTN","IBATOP",168,0)
 .Q:X2<DT  ;                 must be old scheduled adm
"RTN","IBATOP",169,0)
 .Q:$P(X1,"^",13)  ;         sched adm is cancelled
"RTN","IBATOP",170,0)
 .Q:$P(X1,"^",17)  ;         patient already admitted
"RTN","IBATOP",171,0)
 .I X2>IBNEXT S IBNEXT=X2
"RTN","IBATOP",172,0)
 ;
"RTN","IBATOP",173,0)
 Q IBLT_"^"_IBNEXT
"RTN","IBATOP",174,0)
 ;
"RTN","IBATOP",175,0)
APPT(SDOE0) ; Determine if appt associated with encounter is valid
"RTN","IBATOP",176,0)
 Q $S($P(SDOE0,U,12)=2:1,$P(SDOE0,U,12)=14:1,1:0)
"RTN","IBATOP",177,0)
 ;
"RTN","IBATOP",178,0)
 ;
"RTN","IBATOP",179,0)
PAUSE ; Page break
"RTN","IBATOP",180,0)
 Q:$E(IOST,1,2)'="C-"
"RTN","IBATOP",181,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBATOP",182,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBATOP",183,0)
 S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
"RTN","IBATOP",184,0)
 Q
"RTN","IBATOP",185,0)
 ;
"RTN","IBATOP",186,0)
HDR(IBNET) ; Write the detail report header.
"RTN","IBATOP",187,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBATOP",188,0)
 S IBPAG=IBPAG+1
"RTN","IBATOP",189,0)
 W !,"Transfer Pricing Patient Listing",?38,"Run Date: ",IBRUN,?72,"Page: ",IBPAG
"RTN","IBATOP",190,0)
 I $G(IBNET) W !,"Network: VISN ",IBNET
"RTN","IBATOP",191,0)
 W !?50,"MT",?55,"Act",?63,"Last",?71,"Nxt Sched"
"RTN","IBATOP",192,0)
 W !,"Patient Name/ID",?28,"Primary Eligibility",?49,"Stat"
"RTN","IBATOP",193,0)
 W ?55,"Ins",?63,"Seen",?71,"Visit/Adm"
"RTN","IBATOP",194,0)
 W !,$$DASH(IOM)
"RTN","IBATOP",195,0)
 Q
"RTN","IBATOP",196,0)
 ;
"RTN","IBATOP",197,0)
DISFAC(X) ; Display the station number and name.
"RTN","IBATOP",198,0)
 ;  Input:  X  --  The Station Number
"RTN","IBATOP",199,0)
 ; Variable input:  IBFACN array
"RTN","IBATOP",200,0)
 ;
"RTN","IBATOP",201,0)
 W !!?4,"Home Facility: ",$P(IBFACN(X),"^",2),"  ",$P(IBFACN(X),"^"),!
"RTN","IBATOP",202,0)
 Q
"RTN","IBATOP",203,0)
 ;
"RTN","IBATOP",204,0)
DASH(X) ; Return a dashed line.
"RTN","IBATOP",205,0)
 Q $TR($J("",X)," ","=")
"RTN","IBBFAPI")
0^22^B34561336
"RTN","IBBFAPI",1,0)
IBBFAPI ;OAK/ELZ - FOR OTHER PACKAGES TO QUERY INSURANCE INFO ;19-AUG-2004
"RTN","IBBFAPI",2,0)
 ;;2.0;INTEGRATED BILLING;**267,297,249**;21-MAR-94
"RTN","IBBFAPI",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBBFAPI",4,0)
 ;
"RTN","IBBFAPI",5,0)
 ; -- see IBBDOC for API documentation
"RTN","IBBFAPI",6,0)
 ;    no applications should call here directly
"RTN","IBBFAPI",7,0)
INSUR(DFN,IBDT,IBSTAT,IBR,IBFLDS) ; Return Patient Insurance Information
"RTN","IBBFAPI",8,0)
 ;
"RTN","IBBFAPI",9,0)
 N ERROR,ERRORT,FCNT,IBPLN,ICNT,INSP,N,N1,NOK,PASS,PASS1,X,%
"RTN","IBBFAPI",10,0)
 K ERRORT D ERRORLD
"RTN","IBBFAPI",11,0)
 S NOK=-1
"RTN","IBBFAPI",12,0)
 S DFN=$G(DFN)
"RTN","IBBFAPI",13,0)
 S IBSTAT=$G(IBSTAT)
"RTN","IBBFAPI",14,0)
 S IBDT=$P($G(IBDT),".")
"RTN","IBBFAPI",15,0)
 S IBFLDS=$G(IBFLDS)
"RTN","IBBFAPI",16,0)
 I IBDT,IBSTAT["A" S ERROR=107 D ERROR Q NOK
"RTN","IBBFAPI",17,0)
 S (ERROR,PASS)=0 K IBR
"RTN","IBBFAPI",18,0)
 I 'DFN S ERROR=102 D ERROR Q NOK
"RTN","IBBFAPI",19,0)
 I '$D(^DPT(DFN)) S ERROR=106 D ERROR Q NOK
"RTN","IBBFAPI",20,0)
 I IBDT]"",IBDT'?7N S ERROR=104 D ERROR Q NOK
"RTN","IBBFAPI",21,0)
 I +IBDT=0 D NOW^%DTC S IBDT=$P(%,".",1)
"RTN","IBBFAPI",22,0)
 I IBSTAT]"" N Y F X=1:1:$L(IBSTAT) S Y=$E(IBSTAT,X) I '$F("^A^R^P^O^I^B^",(U_Y_U)) S ERROR=105 D ERROR Q
"RTN","IBBFAPI",23,0)
 I ERROR=105 Q NOK
"RTN","IBBFAPI",24,0)
 I IBFLDS]"",IBFLDS'="*" N Y F X=1:1:$L(IBFLDS,",") D
"RTN","IBBFAPI",25,0)
 . S Y=$P(IBFLDS,",",X)
"RTN","IBBFAPI",26,0)
 . I Y'?1N.N S ERROR=103
"RTN","IBBFAPI",27,0)
 . I Y?1N.N,(Y<1)!(Y>21) S ERROR=103
"RTN","IBBFAPI",28,0)
 I ERROR=103 D ERROR Q NOK
"RTN","IBBFAPI",29,0)
 K IBR
"RTN","IBBFAPI",30,0)
 ; set buffer file flag
"RTN","IBBFAPI",31,0)
 S (X,IBR("BUFFER"))=0 F  S X=$O(^IBA(355.33,"C",DFN,X)) Q:'X  S IBR("BUFFER")=IBR("BUFFER")+1
"RTN","IBBFAPI",32,0)
 S (ICNT,N)=0 F  S N=$O(^DPT(DFN,.312,N)) Q:'N  I $D(^(N,0)) D
"RTN","IBBFAPI",33,0)
 . S X=^DPT(DFN,.312,N,0)
"RTN","IBBFAPI",34,0)
 . N X1
"RTN","IBBFAPI",35,0)
 . S X1=$G(^DIC(36,+X,0)) I X1="" Q  ; no insurance company entry
"RTN","IBBFAPI",36,0)
 . S INSP=$P(X,U,1),IBPLN=$P(X,U,18)
"RTN","IBBFAPI",37,0)
 . I IBSTAT'["R",$P(X1,U,2)="N" Q  ; does not reimburse
"RTN","IBBFAPI",38,0)
 . I IBSTAT'["B",$$INDEM^IBCNS1(X) Q  ; indemnity policy
"RTN","IBBFAPI",39,0)
 . S PASS1=0
"RTN","IBBFAPI",40,0)
 . I IBSTAT'["A" D
"RTN","IBBFAPI",41,0)
 . . I $P(X,U,8),IBDT<$P(X,U,8) S PASS1=1 Q  ;effective after care date
"RTN","IBBFAPI",42,0)
 . . I $P(X,U,4),IBDT>$P(X,U,4) S PASS1=1 Q  ;terminated before care date
"RTN","IBBFAPI",43,0)
 . . I $P($G(^IBA(355.3,+$P(X,U,18),0)),U,11) S PASS1=1 Q  ;inactive plan
"RTN","IBBFAPI",44,0)
 . Q:PASS1
"RTN","IBBFAPI",45,0)
 . S ICNT=ICNT+1
"RTN","IBBFAPI",46,0)
 . S FCNT=$S(IBFLDS="*":21,1:$L(IBFLDS,",")) ; number of fields to pull
"RTN","IBBFAPI",47,0)
 . I IBFLDS="" S IBR("IBBAPI","INSUR",ICNT)=""  Q  ;no field info to pass
"RTN","IBBFAPI",48,0)
 . F N1=1:1:FCNT D
"RTN","IBBFAPI",49,0)
 . . N RET,RETVAL
"RTN","IBBFAPI",50,0)
 . . S RET=$S(IBFLDS="*":N1,1:$P(IBFLDS,",",N1)),RETVAL="" I RET?1N.N,RET>0,RET<22 D @RET S IBR("IBBAPI","INSUR",ICNT,RET)=RETVAL
"RTN","IBBFAPI",51,0)
 . I IBSTAT["P"!(IBSTAT["O")!(IBSTAT["I") D  I PASS1=0 K IBR("IBBAPI","INSUR",ICNT) S ICNT=ICNT-1
"RTN","IBBFAPI",52,0)
 . . S PASS1=0 Q:IBPLN=""
"RTN","IBBFAPI",53,0)
 . . I IBSTAT["P",+$$PLCOV(IBPLN,IBDT,"PHARMACY")>0 S PASS1=1
"RTN","IBBFAPI",54,0)
 . . I IBSTAT["O",+$$PLCOV(IBPLN,IBDT,"OUTPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",55,0)
 . . I IBSTAT["I",+$$PLCOV(IBPLN,IBDT,"INPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",56,0)
 I $D(IBR("IBBAPI","INSUR")),$O(IBR("IBBAPI","INSUR",0))'="ERROR" S PASS=1 F X=1:1 Q:'$D(IBR("IBBAPI","INSUR",X))  K:'$O(IBR("IBBAPI","INSUR",X,"")) IBR("IBBAPI","INSUR",X)
"RTN","IBBFAPI",57,0)
 Q PASS
"RTN","IBBFAPI",58,0)
ERRORLD ;  load error array
"RTN","IBBFAPI",59,0)
 F X=1:1:9 S ERRORT(X+100)=$P($T(ERRORLD1+X),";;",2)
"RTN","IBBFAPI",60,0)
 Q
"RTN","IBBFAPI",61,0)
 ;
"RTN","IBBFAPI",62,0)
ERRORLD1 ; error messages
"RTN","IBBFAPI",63,0)
 ;;DATABASE IS UNAVAILABLE
"RTN","IBBFAPI",64,0)
 ;;PATIENT ID IS REQUIRED
"RTN","IBBFAPI",65,0)
 ;;INVALID FIELD LIST
"RTN","IBBFAPI",66,0)
 ;;INVALID EFFECTIVE DATE
"RTN","IBBFAPI",67,0)
 ;;INVALID INSURANCE STATUS FILTER
"RTN","IBBFAPI",68,0)
 ;;INVALID PATIENT ID
"RTN","IBBFAPI",69,0)
 ;;INVALID COMBINATION, YOU CANNOT USE ""A"" WITH A DATE
"RTN","IBBFAPI",70,0)
 ;;DATA SOURCE IS NOT DEFINED
"RTN","IBBFAPI",71,0)
 ;;NO DATA ELEMENTS TO STORE
"RTN","IBBFAPI",72,0)
 ;;
"RTN","IBBFAPI",73,0)
ERROR ;
"RTN","IBBFAPI",74,0)
 K IBR S IBR("IBBAPI","INSUR","ERROR",ERROR)=ERRORT(ERROR)
"RTN","IBBFAPI",75,0)
 Q
"RTN","IBBFAPI",76,0)
 ;
"RTN","IBBFAPI",77,0)
1 ; Ins. Comp. name
"RTN","IBBFAPI",78,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.01,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.01)
"RTN","IBBFAPI",79,0)
 Q
"RTN","IBBFAPI",80,0)
2 ; Ins. Comp. Street Address Line 1
"RTN","IBBFAPI",81,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.111)
"RTN","IBBFAPI",82,0)
 Q
"RTN","IBBFAPI",83,0)
3 ; Ins. Comp. City
"RTN","IBBFAPI",84,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.114)
"RTN","IBBFAPI",85,0)
 Q
"RTN","IBBFAPI",86,0)
4 ; Ins. Comp. State
"RTN","IBBFAPI",87,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.115,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(36,INSP_",",.115)
"RTN","IBBFAPI",88,0)
 Q
"RTN","IBBFAPI",89,0)
5 ; Ins. Comp. Zip
"RTN","IBBFAPI",90,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.116)
"RTN","IBBFAPI",91,0)
 Q
"RTN","IBBFAPI",92,0)
6 ; Ins. Comp. Phone
"RTN","IBBFAPI",93,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.131)
"RTN","IBBFAPI",94,0)
 Q
"RTN","IBBFAPI",95,0)
7 ; Coordination of Benefits
"RTN","IBBFAPI",96,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.2,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.2)
"RTN","IBBFAPI",97,0)
 I RETVAL="^" S RETVAL=""
"RTN","IBBFAPI",98,0)
 Q
"RTN","IBBFAPI",99,0)
8 ; Policy Name
"RTN","IBBFAPI",100,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(355.3,RETVAL,.03)
"RTN","IBBFAPI",101,0)
 Q
"RTN","IBBFAPI",102,0)
9 ; Policy Reimbursable?
"RTN","IBBFAPI",103,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",1,"I")
"RTN","IBBFAPI",104,0)
 S RETVAL=$S(RETVAL="Y":"1^YES",RETVAL="*":"1^YES",RETVAL="**":"1^YES",RETVAL="":"1^YES",1:"0^NO")
"RTN","IBBFAPI",105,0)
 Q
"RTN","IBBFAPI",106,0)
10 ; Policy Effective Date
"RTN","IBBFAPI",107,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",8,"I")
"RTN","IBBFAPI",108,0)
 Q
"RTN","IBBFAPI",109,0)
11 ; Policy Expiration Date
"RTN","IBBFAPI",110,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",3,"I")
"RTN","IBBFAPI",111,0)
 Q
"RTN","IBBFAPI",112,0)
12 ; Subscriber Relationship
"RTN","IBBFAPI",113,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I")
"RTN","IBBFAPI",114,0)
 S RETVAL=$S(RETVAL="01":"P^PATIENT",RETVAL="02":"S^SPOUSE",RETVAL:"O^OTHER",1:"")
"RTN","IBBFAPI",115,0)
 Q
"RTN","IBBFAPI",116,0)
13 ; Subscriber Name
"RTN","IBBFAPI",117,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",17)
"RTN","IBBFAPI",118,0)
 Q
"RTN","IBBFAPI",119,0)
14 ; Subscriber ID
"RTN","IBBFAPI",120,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",1)
"RTN","IBBFAPI",121,0)
 Q
"RTN","IBBFAPI",122,0)
15 ; Pharmacy Coverage?
"RTN","IBBFAPI",123,0)
 N IBCOV
"RTN","IBBFAPI",124,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"PHARMACY")
"RTN","IBBFAPI",125,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",126,0)
 Q
"RTN","IBBFAPI",127,0)
16 ; Outpatient Coverage?
"RTN","IBBFAPI",128,0)
 N IBCOV
"RTN","IBBFAPI",129,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"OUTPATIENT")
"RTN","IBBFAPI",130,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",131,0)
 Q
"RTN","IBBFAPI",132,0)
17 ; Inpatient Coverage?
"RTN","IBBFAPI",133,0)
 N IBCOV
"RTN","IBBFAPI",134,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"INPATIENT")
"RTN","IBBFAPI",135,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",136,0)
 Q
"RTN","IBBFAPI",137,0)
18 ; Group Number
"RTN","IBBFAPI",138,0)
 S RETVAL=$$GET1^DIQ(355.3,$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")_",",.04)
"RTN","IBBFAPI",139,0)
 Q
"RTN","IBBFAPI",140,0)
 ;
"RTN","IBBFAPI",141,0)
19 ; Patient Relationship to Subscriber
"RTN","IBBFAPI",142,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(2.312,N_","_DFN_",",16)
"RTN","IBBFAPI",143,0)
 Q
"RTN","IBBFAPI",144,0)
 ;
"RTN","IBBFAPI",145,0)
20 ; VA Advantage and Tricare plan
"RTN","IBBFAPI",146,0)
 S RETVAL=0  ; VA Advantage to be determined at a later date
"RTN","IBBFAPI",147,0)
 N PLN,TYP1,TYP2,RETVAL1
"RTN","IBBFAPI",148,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",149,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",150,0)
 S TYP2=$$GET1^DIQ(355.1,TYP1_",",.03,"I")
"RTN","IBBFAPI",151,0)
 S RETVAL1=$S(TYP2=7:1,1:0)  ; determine if Tricare plan
"RTN","IBBFAPI",152,0)
 S RETVAL=RETVAL_U_RETVAL1
"RTN","IBBFAPI",153,0)
 Q
"RTN","IBBFAPI",154,0)
 ;
"RTN","IBBFAPI",155,0)
21 ; Plan Type
"RTN","IBBFAPI",156,0)
 N PLN,TYP1
"RTN","IBBFAPI",157,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",158,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",159,0)
 S RETVAL=$S(TYP1:TYP1_U_$$GET1^DIQ(355.1,TYP1_",",.01,"I"),1:"")
"RTN","IBBFAPI",160,0)
 Q
"RTN","IBBFAPI",161,0)
 ;
"RTN","IBBFAPI",162,0)
PLCOV(IBPL,IBVDT,IBCAT) ; Determine if a specific plan covers a category of coverage as of a date
"RTN","IBBFAPI",163,0)
 ; IBPL - pointer to file 355.3 group insurance plan (req)
"RTN","IBBFAPI",164,0)
 ; IBVDT - fileman format visit date (req)
"RTN","IBBFAPI",165,0)
 ; IBCAT -  pointer to file 355.31 limitation of coverage category (req)
"RTN","IBBFAPI",166,0)
 N CATLIM,X,Y
"RTN","IBBFAPI",167,0)
 I '$G(IBPL)!('$G(IBVDT))!('$G(IBCAT)) Q 0
"RTN","IBBFAPI",168,0)
 S X=0
"RTN","IBBFAPI",169,0)
 S IBCAT=$O(^IBE(355.31,"B",IBCAT,"")) G:IBCAT="" PLCOVQ
"RTN","IBBFAPI",170,0)
 S CATLIM=$O(^IBA(355.32,"APCD",IBPL,IBCAT,+$O(^IBA(355.32,"APCD",IBPL,IBCAT,-(IBVDT+1))),""))
"RTN","IBBFAPI",171,0)
 S X=$S(CATLIM="":1,1:+$P($G(^IBA(355.32,CATLIM,0)),U,4))
"RTN","IBBFAPI",172,0)
PLCOVQ Q X
"RTN","IBBFAPI",173,0)
 ;
"RTN","IBCNEDE2")
0^21^B62755710
"RTN","IBCNEDE2",1,0)
IBCNEDE2 ;DAOU/DAC - IIV PRE REG EXTRACT (APPTS) ;18-JUN-2002
"RTN","IBCNEDE2",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,249**;21-MAR-94
"RTN","IBCNEDE2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNEDE2",4,0)
 ;
"RTN","IBCNEDE2",5,0)
 ;**Program Description**
"RTN","IBCNEDE2",6,0)
 ;  This program finds veterans who are scheduled to be seen within a
"RTN","IBCNEDE2",7,0)
 ;  specified date range.
"RTN","IBCNEDE2",8,0)
 ;  Periodically check for stop request for background task
"RTN","IBCNEDE2",9,0)
 ;
"RTN","IBCNEDE2",10,0)
 Q   ; can't be called directly
"RTN","IBCNEDE2",11,0)
 ;
"RTN","IBCNEDE2",12,0)
EN ; Loop through designated cross-references for updates
"RTN","IBCNEDE2",13,0)
 ; Pre reg extract (Appointment extract)
"RTN","IBCNEDE2",14,0)
 ;
"RTN","IBCNEDE2",15,0)
 N TODAYSDT,FRESHDAY,SLCCRIT1,MAXCNT,CNT,ENDDT,CLNC,FRESHDT
"RTN","IBCNEDE2",16,0)
 N APTDT,INREC,INSIEN,PAYER,PIEN,PAYERSTR,SYMBOL,SUPPBUFF
"RTN","IBCNEDE2",17,0)
 N DFN,OK,VAIN,INS,DATA1,DATA2,ELG,PAYERID,SETSTR,SRVICEDT,ACTINS
"RTN","IBCNEDE2",18,0)
 N TQIEN,IBINDT,IBOUTP,QURYFLAG,INSNAME,FOUND1,FOUND2,IBCNETOT
"RTN","IBCNEDE2",19,0)
 N SID,SIDACT,SIDDATA,SCNT5,SIDARRAY,SIDCNT,IBDDI,IBINS,DISYS
"RTN","IBCNEDE2",20,0)
 ;
"RTN","IBCNEDE2",21,0)
 S SETSTR=$$SETTINGS^IBCNEDE7(2)     ;  Get setting for pre reg. extract 
"RTN","IBCNEDE2",22,0)
 I 'SETSTR Q                         ; Quit if extract is not active
"RTN","IBCNEDE2",23,0)
 S SLCCRIT1=$P(SETSTR,U,2)           ; Selection Criteria #1
"RTN","IBCNEDE2",24,0)
 S MAXCNT=$P(SETSTR,U,4)             ; Max # of TQ entries to create
"RTN","IBCNEDE2",25,0)
 S:MAXCNT="" MAXCNT=9999999999
"RTN","IBCNEDE2",26,0)
 S SUPPBUFF=$P(SETSTR,U,5)                   ; Suppress Buffer Flag
"RTN","IBCNEDE2",27,0)
 S FRESHDAY=$P($G(^IBE(350.9,1,51)),U,1)     ; Freshness days span
"RTN","IBCNEDE2",28,0)
 S CNT=0                                     ; Init. TQ entry counter
"RTN","IBCNEDE2",29,0)
 S ENDDT=$$FMADD^XLFDT(DT,SLCCRIT1)   ; End of appt. date selection range
"RTN","IBCNEDE2",30,0)
 S IBCNETOT=0               ; Initialize count for periodic TaskMan check
"RTN","IBCNEDE2",31,0)
 K ^TMP($J,"SDAMA301"),^TMP("IBCNEDE2",$J)   ; Clean TMP globals
"RTN","IBCNEDE2",32,0)
 ;
"RTN","IBCNEDE2",33,0)
 S CLNC=0 ; Init. clinic
"RTN","IBCNEDE2",34,0)
 ; Loop through clinics 
"RTN","IBCNEDE2",35,0)
 F  S CLNC=$O(^SC(CLNC)) Q:'CLNC!(CNT'<MAXCNT)  D  Q:$G(ZTSTOP)
"RTN","IBCNEDE2",36,0)
 . ;
"RTN","IBCNEDE2",37,0)
 . D CLINICEX Q:'OK     ; Check for clinic exclusion
"RTN","IBCNEDE2",38,0)
 . ;
"RTN","IBCNEDE2",39,0)
 . S ^TMP("IBCNEDE2",$J,CLNC)=""
"RTN","IBCNEDE2",40,0)
 ;
"RTN","IBCNEDE2",41,0)
 ; Set up variables for scheduling call and call
"RTN","IBCNEDE2",42,0)
 S IBSDA("FLDS")=8
"RTN","IBCNEDE2",43,0)
 S IBSDA(1)=DT_";"_ENDDT
"RTN","IBCNEDE2",44,0)
 S IBSDA(2)="^TMP(""IBCNEDE2"",$J,"
"RTN","IBCNEDE2",45,0)
 S IBSDA(3)="R"
"RTN","IBCNEDE2",46,0)
 I $$SDAPI^SDAMA301(.IBSDA)<1 D ERRMSG G ENQ
"RTN","IBCNEDE2",47,0)
 ;
"RTN","IBCNEDE2",48,0)
 ;
"RTN","IBCNEDE2",49,0)
 S CLNC=0 ; Init. clinic
"RTN","IBCNEDE2",50,0)
 ; Loop through clinics returned
"RTN","IBCNEDE2",51,0)
 F  S CLNC=$O(^TMP($J,"SDAMA301",CLNC)) Q:'CLNC  D  Q:$G(ZTSTOP)!(CNT'<MAXCNT)
"RTN","IBCNEDE2",52,0)
 . ;
"RTN","IBCNEDE2",53,0)
 . ; Loop through patients returned
"RTN","IBCNEDE2",54,0)
 . S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",CLNC,DFN)) Q:'DFN!(CNT'<MAXCNT)  D  Q:$G(ZTSTOP)
"RTN","IBCNEDE2",55,0)
 .. ;
"RTN","IBCNEDE2",56,0)
 .. S APTDT=DT           ; Check for appointment date
"RTN","IBCNEDE2",57,0)
 .. ;
"RTN","IBCNEDE2",58,0)
 .. ; Loop through dates in range at clinic
"RTN","IBCNEDE2",59,0)
 .. F  S APTDT=$O(^TMP($J,"SDAMA301",CLNC,DFN,APTDT)) Q:('APTDT)!((APTDT\1)>ENDDT)!(CNT'<MAXCNT)  D  Q:$G(ZTSTOP)
"RTN","IBCNEDE2",60,0)
 ... ;
"RTN","IBCNEDE2",61,0)
 ... S SRVICEDT=APTDT\1 ;Set service date equal to appointment date
"RTN","IBCNEDE2",62,0)
 ... S FRESHDT=$$FMADD^XLFDT(SRVICEDT,-FRESHDAY)
"RTN","IBCNEDE2",63,0)
 ... ;
"RTN","IBCNEDE2",64,0)
 ... ; Update count for periodic check
"RTN","IBCNEDE2",65,0)
 ... S IBCNETOT=IBCNETOT+1
"RTN","IBCNEDE2",66,0)
 ... ; Check for request to stop background job, periodically
"RTN","IBCNEDE2",67,0)
 ... I $D(ZTQUEUED),IBCNETOT#100=0,$$S^%ZTLOAD() S ZTSTOP=1 Q
"RTN","IBCNEDE2",68,0)
 ... ;
"RTN","IBCNEDE2",69,0)
 ... S IBSDATA=$G(^TMP($J,"SDAMA301",CLNC,DFN,APTDT))
"RTN","IBCNEDE2",70,0)
 ... S ELG=$P(IBSDATA,U,8)
"RTN","IBCNEDE2",71,0)
 ... S ELG=$S(ELG'="":ELG,1:$P($G(^DPT(DFN,.36)),U,1))
"RTN","IBCNEDE2",72,0)
 ... I $P($G(^DPT(DFN,0)),U,21) Q         ; Exclude if test patient
"RTN","IBCNEDE2",73,0)
 ... I $P($G(^DPT(DFN,.35)),"^",1)'="" Q  ; Exclude if patient is deceased
"RTN","IBCNEDE2",74,0)
 ... ;
"RTN","IBCNEDE2",75,0)
 ... D ELG Q:'OK     ; Check for eligibility exclusion
"RTN","IBCNEDE2",76,0)
 ... ; D INP Q:'OK     ; No longer check for inpatient status
"RTN","IBCNEDE2",77,0)
 ... ;
"RTN","IBCNEDE2",78,0)
 ... K ACTINS
"RTN","IBCNEDE2",79,0)
 ... D ALL^IBCNS1(DFN,"ACTINS",1)
"RTN","IBCNEDE2",80,0)
 ... ;
"RTN","IBCNEDE2",81,0)
 ... I '$D(ACTINS(0)) D NOACTIVE Q   ; Patient has no active ins
"RTN","IBCNEDE2",82,0)
 ... ;
"RTN","IBCNEDE2",83,0)
 ... S INREC=0 ; Record ien
"RTN","IBCNEDE2",84,0)
 ... F  S INREC=$O(ACTINS(INREC)) Q:('INREC)!(CNT'<MAXCNT)  D
"RTN","IBCNEDE2",85,0)
 ... . S INSIEN=$P($G(ACTINS(INREC,0)),U,1) ; Insurance ien
"RTN","IBCNEDE2",86,0)
 ... . S INSNAME=$P($G(^DIC(36,INSIEN,0)),U)
"RTN","IBCNEDE2",87,0)
 ... . ;
"RTN","IBCNEDE2",88,0)
 ... . ; check for ins. to exclude (i.e. Medicare/Medicaid)
"RTN","IBCNEDE2",89,0)
 ... . I $$EXCLUDE^IBCNEUT4(INSNAME) Q
"RTN","IBCNEDE2",90,0)
 ... . ;
"RTN","IBCNEDE2",91,0)
 ... . S PAYERSTR=$$INSERROR^IBCNEUT3("I",INSIEN) ; Get payer info
"RTN","IBCNEDE2",92,0)
 ... . ;
"RTN","IBCNEDE2",93,0)
 ... . S SYMBOL=+PAYERSTR ; error symbol
"RTN","IBCNEDE2",94,0)
 ... . S PAYERID=$P(PAYERSTR,U,3)               ; (National ID) payer id
"RTN","IBCNEDE2",95,0)
 ... . S PIEN=$P(PAYERSTR,U,2)                  ; Payer ien
"RTN","IBCNEDE2",96,0)
 ... . ;
"RTN","IBCNEDE2",97,0)
 ... . ; If error symbol exists, set record in insurance buffer & quit
"RTN","IBCNEDE2",98,0)
 ... . I SYMBOL D  Q
"RTN","IBCNEDE2",99,0)
 ... . . I 'SUPPBUFF,'$$BFEXIST^IBCNEUT5(DFN,INSNAME) D PT^IBCNEBF(DFN,INREC,SYMBOL,"",1)
"RTN","IBCNEDE2",100,0)
 ... . ;
"RTN","IBCNEDE2",101,0)
 ... . ; Update service date and freshness date based on payers allowed
"RTN","IBCNEDE2",102,0)
 ... . ;  date range
"RTN","IBCNEDE2",103,0)
 ... . D UPDDTS^IBCNEDE6(PIEN,.SRVICEDT,.FRESHDT)
"RTN","IBCNEDE2",104,0)
 ... . ;
"RTN","IBCNEDE2",105,0)
 ... . ; Update service dates for inquiry to be transmitted
"RTN","IBCNEDE2",106,0)
 ... . D TQUPDSV^IBCNEUT5(DFN,PIEN,SRVICEDT)
"RTN","IBCNEDE2",107,0)
 ... . ;
"RTN","IBCNEDE2",108,0)
 ... . ; Quit before filing if outstanding entries in TQ
"RTN","IBCNEDE2",109,0)
 ... . I '$$ADDTQ^IBCNEUT5(DFN,PIEN,SRVICEDT,FRESHDAY) Q
"RTN","IBCNEDE2",110,0)
 ... . ;
"RTN","IBCNEDE2",111,0)
 ... . S QURYFLAG="V"
"RTN","IBCNEDE2",112,0)
 ... . K SIDARRAY
"RTN","IBCNEDE2",113,0)
 ... . S SIDDATA=$$SIDCHK^IBCNEDE5(PIEN,DFN,,.SIDARRAY,FRESHDT)
"RTN","IBCNEDE2",114,0)
 ... . S SIDACT=$P(SIDDATA,U),SIDCNT=$P(SIDDATA,U,2)
"RTN","IBCNEDE2",115,0)
 ... . I SIDACT=3,'SUPPBUFF,'$$BFEXIST^IBCNEUT5(DFN,INSNAME) D PT^IBCNEBF(DFN,INREC,18,"",1) Q
"RTN","IBCNEDE2",116,0)
 ... . S SCNT5=$S(SIDACT=5:1,1:0)
"RTN","IBCNEDE2",117,0)
 ... . I CNT+SCNT5+SIDCNT>MAXCNT S CNT=MAXCNT Q  ;exceeds MAXCNT
"RTN","IBCNEDE2",118,0)
 ... . ;
"RTN","IBCNEDE2",119,0)
 ... . S SID=""
"RTN","IBCNEDE2",120,0)
 ... . F  S SID=$O(SIDARRAY(SID)) Q:SID=""  D SET($P(SID,"_"),$P(SID,"_",2))
"RTN","IBCNEDE2",121,0)
 ... . I SIDACT=4!(SIDACT=5) D SET("","")
"RTN","IBCNEDE2",122,0)
 ... . Q
"RTN","IBCNEDE2",123,0)
 ... Q
"RTN","IBCNEDE2",124,0)
ENQ K ^TMP($J,"SDAMA301"),^TMP("IBCNEDE2",$J)
"RTN","IBCNEDE2",125,0)
 Q
"RTN","IBCNEDE2",126,0)
 ;
"RTN","IBCNEDE2",127,0)
CLINICEX ; Clinic exclusion
"RTN","IBCNEDE2",128,0)
 S OK=1
"RTN","IBCNEDE2",129,0)
 I $D(^DG(43,1,"DGPREC","B",CLNC)) S OK=0
"RTN","IBCNEDE2",130,0)
 Q
"RTN","IBCNEDE2",131,0)
 ;
"RTN","IBCNEDE2",132,0)
ELG ;  Eligibility exclusion
"RTN","IBCNEDE2",133,0)
 I ELG="" S OK=0 Q
"RTN","IBCNEDE2",134,0)
 I $D(^DG(43,1,"DGPREE","B",ELG)) S OK=0 Q
"RTN","IBCNEDE2",135,0)
 S OK=1
"RTN","IBCNEDE2",136,0)
 Q
"RTN","IBCNEDE2",137,0)
 ;
"RTN","IBCNEDE2",138,0)
INP ;  Inpatient status
"RTN","IBCNEDE2",139,0)
 D INP^VADPT
"RTN","IBCNEDE2",140,0)
 I $G(VAIN(1))'="" K VAIN S OK=0 Q
"RTN","IBCNEDE2",141,0)
 K VAIN
"RTN","IBCNEDE2",142,0)
 S OK=1
"RTN","IBCNEDE2",143,0)
 Q
"RTN","IBCNEDE2",144,0)
 ;
"RTN","IBCNEDE2",145,0)
NOACTIVE ; No active insurance
"RTN","IBCNEDE2",146,0)
 ;
"RTN","IBCNEDE2",147,0)
 ; Call IB utility to search for patient's inactive insurance
"RTN","IBCNEDE2",148,0)
 ; IBCNS passes back IBINS = 1 if active insurance was found
"RTN","IBCNEDE2",149,0)
 ; IBCNS sets the array IBDD to the patient's valid insurance
"RTN","IBCNEDE2",150,0)
 ; IBCNS sets the array IBDDI to the patient's invalid insurance
"RTN","IBCNEDE2",151,0)
 ;
"RTN","IBCNEDE2",152,0)
 N SVIBDDI
"RTN","IBCNEDE2",153,0)
 K IBINS,IBDD,IBDDI
"RTN","IBCNEDE2",154,0)
 S IBINDT=APTDT,IBOUTP=2,(FOUND1,FOUND2)=0
"RTN","IBCNEDE2",155,0)
 ;
"RTN","IBCNEDE2",156,0)
 D ^IBCNS
"RTN","IBCNEDE2",157,0)
 K IBDD           ; don't need this array
"RTN","IBCNEDE2",158,0)
 I $G(IBINS)=1 Q  ; if active insurance was found quit
"RTN","IBCNEDE2",159,0)
 M SVIBDDI=IBDDI
"RTN","IBCNEDE2",160,0)
 ;
"RTN","IBCNEDE2",161,0)
 ; Inactive Insurance
"RTN","IBCNEDE2",162,0)
 I CNT<MAXCNT,$D(IBDDI)>0 S FOUND2=$$INAC^IBCNEDE6(.CNT,MAXCNT,.IBDDI,SRVICEDT,FRESHDAY,1)
"RTN","IBCNEDE2",163,0)
 M IBDDI=SVIBDDI
"RTN","IBCNEDE2",164,0)
 ;
"RTN","IBCNEDE2",165,0)
 ; Popular insurance
"RTN","IBCNEDE2",166,0)
 I CNT<MAXCNT S FOUND1=$$POP^IBCNEDE4(.CNT,MAXCNT,SRVICEDT,FRESHDAY,1,.IBDDI)
"RTN","IBCNEDE2",167,0)
 ;
"RTN","IBCNEDE2",168,0)
 I 'FOUND1,'FOUND2,(CNT<MAXCNT) D BLANKTQ
"RTN","IBCNEDE2",169,0)
 ;
"RTN","IBCNEDE2",170,0)
 K INS,IBBDI
"RTN","IBCNEDE2",171,0)
 Q
"RTN","IBCNEDE2",172,0)
 ;
"RTN","IBCNEDE2",173,0)
SET(SID,INR) ; Set data in TQ
"RTN","IBCNEDE2",174,0)
 ;
"RTN","IBCNEDE2",175,0)
 ; The hard coded '1' in the 3rd piece of DATA1 sets the Transmission
"RTN","IBCNEDE2",176,0)
 ; status of file 365.1 to "Ready to Transmit"
"RTN","IBCNEDE2",177,0)
 S DATA1=DFN_U_PIEN_U_1_U_""_U_SID_U_FRESHDT ; SETTQ 1st parameter
"RTN","IBCNEDE2",178,0)
 ;
"RTN","IBCNEDE2",179,0)
 ; The hardcoded '2' in the 1st piece of DATA2 is the value to tell
"RTN","IBCNEDE2",180,0)
 ; the file 365.1 that it is the appointment extract.
"RTN","IBCNEDE2",181,0)
 S DATA2=2_U_QURYFLAG_U_SRVICEDT_U_INR    ; SETTQ 2nd parameter
"RTN","IBCNEDE2",182,0)
 ;
"RTN","IBCNEDE2",183,0)
 S TQIEN=$$SETTQ^IBCNEDE7(DATA1,DATA2)       ; Sets in TQ
"RTN","IBCNEDE2",184,0)
 I TQIEN'="" S CNT=CNT+1                    ; If filed increment count
"RTN","IBCNEDE2",185,0)
 ;
"RTN","IBCNEDE2",186,0)
 Q
"RTN","IBCNEDE2",187,0)
 ;
"RTN","IBCNEDE2",188,0)
BLANKTQ ; no new records were created in file 365.1 for this DFN
"RTN","IBCNEDE2",189,0)
 ; need to check if a blank inquiry exists (patient w/o a payer)
"RTN","IBCNEDE2",190,0)
 ; if it doesn't exist create a new blank inquiry
"RTN","IBCNEDE2",191,0)
 ;
"RTN","IBCNEDE2",192,0)
 N DISYS
"RTN","IBCNEDE2",193,0)
 S PIEN=$$FIND1^DIC(365.12,,"X","~NO PAYER"),SID=""
"RTN","IBCNEDE2",194,0)
 ;
"RTN","IBCNEDE2",195,0)
 ; Update service date and freshness date based on payer allowed
"RTN","IBCNEDE2",196,0)
 ;  date range
"RTN","IBCNEDE2",197,0)
 D UPDDTS^IBCNEDE6(PIEN,.SRVICEDT,.FRESHDT)
"RTN","IBCNEDE2",198,0)
 ; 
"RTN","IBCNEDE2",199,0)
 ; Update service dates for inquiry to be transmitted - necessary here?
"RTN","IBCNEDE2",200,0)
 D TQUPDSV^IBCNEUT5(DFN,PIEN,SRVICEDT)
"RTN","IBCNEDE2",201,0)
 ;
"RTN","IBCNEDE2",202,0)
 I '$$ADDTQ^IBCNEUT5(DFN,PIEN,SRVICEDT,FRESHDAY,1) G BLANKXT
"RTN","IBCNEDE2",203,0)
 ;
"RTN","IBCNEDE2",204,0)
 S QURYFLAG="I" D SET("","")
"RTN","IBCNEDE2",205,0)
 S PIEN=""
"RTN","IBCNEDE2",206,0)
BLANKXT ;
"RTN","IBCNEDE2",207,0)
 Q
"RTN","IBCNEDE2",208,0)
 ;
"RTN","IBCNEDE2",209,0)
ERRMSG ; Send a message indicating an extract error has occured
"RTN","IBCNEDE2",210,0)
 N MGRP,XMSUB,MSG,IBX,IBM
"RTN","IBCNEDE2",211,0)
 ;
"RTN","IBCNEDE2",212,0)
 ; Set to IB site parameter MAILGROUP
"RTN","IBCNEDE2",213,0)
 S MGRP=$$MGRP^IBCNEUT5()
"RTN","IBCNEDE2",214,0)
 ;
"RTN","IBCNEDE2",215,0)
 S XMSUB="IIV Problem: Appointment Extract"
"RTN","IBCNEDE2",216,0)
 S MSG(1)="On "_$$FMTE^XLFDT(DT)_" the Appointment Extract for IIV encountered one or more"
"RTN","IBCNEDE2",217,0)
 S MSG(2)="errors while attempting to get Appointment data from the scheduling"
"RTN","IBCNEDE2",218,0)
 S MSG(3)="package."
"RTN","IBCNEDE2",219,0)
 S MSG(4)=""
"RTN","IBCNEDE2",220,0)
 S MSG(5)="Error(s) encountered: "
"RTN","IBCNEDE2",221,0)
 S MSG(6)=""
"RTN","IBCNEDE2",222,0)
 S MSG(7)="  Error Code   Error Message"
"RTN","IBCNEDE2",223,0)
 S MSG(8)="  ----------   -------------"
"RTN","IBCNEDE2",224,0)
 S IBM=8,IBX=0 F  S IBX=$O(^TMP($J,"SDAMA301",IBX)) Q:IBX=""  S IBM=IBM+1,MSG(IBM)="  "_$$LJ^XLFSTR(IBX,13)_$G(^TMP($J,"SDAMA301",IBX))
"RTN","IBCNEDE2",225,0)
 S IBM=IBM+1,MSG(IBM)=""
"RTN","IBCNEDE2",226,0)
 S IBM=IBM+1,MSG(IBM)="As a result of this error the extract was not done.  The extract"
"RTN","IBCNEDE2",227,0)
 S IBM=IBM+1,MSG(IBM)="will be attempted again the next night automatically.  If you"
"RTN","IBCNEDE2",228,0)
 S IBM=IBM+1,MSG(IBM)="continue to receive error messages you should contact your IRM"
"RTN","IBCNEDE2",229,0)
 S IBM=IBM+1,MSG(IBM)="and possibly log a NOIS call for assistance."
"RTN","IBCNEDE2",230,0)
 ;
"RTN","IBCNEDE2",231,0)
 D MSG^IBCNEUT5(MGRP,XMSUB,"MSG(")
"RTN","IBCNEDE2",232,0)
 ;
"RTN","IBCNEDE2",233,0)
 Q
"RTN","IBCNSBL")
0^2^B5839700
"RTN","IBCNSBL",1,0)
IBCNSBL ;ALB/AAS - NEW INSURANCE POLICY BULLETIN ;29-AUG-93
"RTN","IBCNSBL",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,103,249**;21-MAR-94
"RTN","IBCNSBL",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNSBL",4,0)
 ;
"RTN","IBCNSBL",5,0)
% N IBP,START,END,X,Y,I,J,VAIN,VAINDT,VA,DA,DR,DIE,DIC,INPT,OPT,DGPM,IBINS,IBX,IBTADD
"RTN","IBCNSBL",6,0)
 ;
"RTN","IBCNSBL",7,0)
 Q:'$D(IBEVTA0)!('$D(IBEVTA1))!('$D(IBEVTA2))!('$D(IBCDFN))!('$D(IBEVTACT))
"RTN","IBCNSBL",8,0)
 D:IBEVTACT="ADD" BLTN
"RTN","IBCNSBL",9,0)
 D:$P($G(IBEVTA1),"^",9)=3 IVM
"RTN","IBCNSBL",10,0)
 D VNC
"RTN","IBCNSBL",11,0)
 Q
"RTN","IBCNSBL",12,0)
 ;
"RTN","IBCNSBL",13,0)
BLTN ; -- generate bulletin if new policy
"RTN","IBCNSBL",14,0)
 ;
"RTN","IBCNSBL",15,0)
 K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","IBCNSBL",16,0)
 S IBP=$$PT^IBEFUNC(DFN),(OPT,INPT)=0
"RTN","IBCNSBL",17,0)
 ;
"RTN","IBCNSBL",18,0)
 ; -- set starting date = latest of 2 years ago, or effective date
"RTN","IBCNSBL",19,0)
 S START=DT-20000
"RTN","IBCNSBL",20,0)
 I $P(IBEVTA0,"^",8),$P(IBEVTA0,"^",8)>START S START=$P(IBEVTA0,"^",8)
"RTN","IBCNSBL",21,0)
 ;
"RTN","IBCNSBL",22,0)
 S END=DT+.9
"RTN","IBCNSBL",23,0)
 ;
"RTN","IBCNSBL",24,0)
 D GETAPPT^SDAMA201(DFN,"1;2","R",START,END,.OPT,"O")
"RTN","IBCNSBL",25,0)
 S X=$O(^DGPM("APTT1",DFN,START)) I X,(X'>(END+.24)) S INPT=1
"RTN","IBCNSBL",26,0)
 I $G(^DPT(DFN,.1))'="" D  S INPT=1
"RTN","IBCNSBL",27,0)
 .;
"RTN","IBCNSBL",28,0)
 .;see if current admission is in claims tracking
"RTN","IBCNSBL",29,0)
 .S VAINDT=DT+.24 D INP^VADPT
"RTN","IBCNSBL",30,0)
 .N IBMVAD,IBTRKR,IBRANDOM,DGPMA
"RTN","IBCNSBL",31,0)
 .S IBMVAD=+VAIN(1),DGPMA=$G(^DGPM(+IBMVAD,0))
"RTN","IBCNSBL",32,0)
 .I DFN=$P($G(^IBT(356,+$O(^IBT(356,"AD",+IBMVAD,0)),0)),"^",2) Q  ; quit if already in claims tracking
"RTN","IBCNSBL",33,0)
 .S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBCNSBL",34,0)
 .I $P(IBTRKR,"^",2)=2 D ADM^IBTUTL(IBMVAD,$E(+DGPMA,1,12),0,$P(DGPMA,"^",27)) S IBTADD=1
"RTN","IBCNSBL",35,0)
 .I $P(IBTRKR,"^",2)=1,$$INSURED^IBCNS1(DFN,+DGPMA) D ADM^IBTUTL(IBMVAD,$E(+DGPMA,1,12),0,$P(DGPMA,"^",27)) S IBTADD=1
"RTN","IBCNSBL",36,0)
 .Q
"RTN","IBCNSBL",37,0)
 ;
"RTN","IBCNSBL",38,0)
 S VAINDT=START+.24 D INP^VADPT I $G(VAIN(1)) S INPT=1
"RTN","IBCNSBL",39,0)
 I 'OPT,'INPT G BQ
"RTN","IBCNSBL",40,0)
 ;
"RTN","IBCNSBL",41,0)
 D BULL^IBCNSBL1
"RTN","IBCNSBL",42,0)
BQ K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","IBCNSBL",43,0)
 Q
"RTN","IBCNSBL",44,0)
 ;
"RTN","IBCNSBL",45,0)
IVM ; -- announce patients who have ivm-identified insurance.  input = dfn
"RTN","IBCNSBL",46,0)
 I $G(^IBA(354,DFN,"IVM")) G IVMQ
"RTN","IBCNSBL",47,0)
 I '$D(^IBA(354,DFN)) D ADDP^IBAUTL6 K IBWHER,IBEXERR,IBADD
"RTN","IBCNSBL",48,0)
 S DIE="^IBA(354,",DR="50////1",DA=DFN D ^DIE K DIE,DR,DA,DIC
"RTN","IBCNSBL",49,0)
IVMQ Q
"RTN","IBCNSBL",50,0)
 ;
"RTN","IBCNSBL",51,0)
VNC ;  -- remove verification of no coverage
"RTN","IBCNSBL",52,0)
 N DA,DIC,DIE,DR,X,Y
"RTN","IBCNSBL",53,0)
 I '$G(^IBA(354,DFN,60)) G VNCQ
"RTN","IBCNSBL",54,0)
 ;
"RTN","IBCNSBL",55,0)
 ; - delete verification date if the patient has effective policies
"RTN","IBCNSBL",56,0)
 I $$EPOL^IBCNSM2(DFN) S DA=DFN,DIE="^IBA(354,",DR="60///@" D ^DIE
"RTN","IBCNSBL",57,0)
VNCQ Q
"RTN","IBCNSBL1")
0^3^B30459723
"RTN","IBCNSBL1",1,0)
IBCNSBL1 ;ALB/AAS - NEW INSURANCE POLICY BULLETIN ;29-AUG-93
"RTN","IBCNSBL1",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,82,249**;21-MAR-94
"RTN","IBCNSBL1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNSBL1",4,0)
 ;
"RTN","IBCNSBL1",5,0)
BULL ; -- send bulletin
"RTN","IBCNSBL1",6,0)
 ;
"RTN","IBCNSBL1",7,0)
 S XMSUB="New Insurance Policy For "_$E($P(IBP,"^"),1,20)_"   Pt. Id: "_$P(IBP,"^",2)
"RTN","IBCNSBL1",8,0)
 S IBT(1)=" A new insurance policy has been added for:"
"RTN","IBCNSBL1",9,0)
 S IBT(2)=" Patient: "_$E($P(IBP,"^")_"               ",1,25)_"  PT. ID: "_$P(IBP,"^",2)
"RTN","IBCNSBL1",10,0)
 S IBT(3)=""
"RTN","IBCNSBL1",11,0)
 S IBT(4)=" New Policy: "
"RTN","IBCNSBL1",12,0)
 S IBCNT=4 D HDR,NPOL
"RTN","IBCNSBL1",13,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",14,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=" Previous Policy(s): "
"RTN","IBCNSBL1",15,0)
 D HDR,OPOL
"RTN","IBCNSBL1",16,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",17,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=" Buffer Policy(s): "
"RTN","IBCNSBL1",18,0)
 D BUFF
"RTN","IBCNSBL1",19,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",20,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=" Possible billable Inpt. Care: "
"RTN","IBCNSBL1",21,0)
 D INPT
"RTN","IBCNSBL1",22,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",23,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=" Possible billable Opt. Care: "
"RTN","IBCNSBL1",24,0)
 D OPT
"RTN","IBCNSBL1",25,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",26,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=" Added by: "_$P($G(^VA(200,+$P(IBEVTA1,"^",2),0)),"^")
"RTN","IBCNSBL1",27,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)="       on: "_$$DAT1^IBOUTL(+IBEVTA1,"2P")
"RTN","IBCNSBL1",28,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)="   Option: "
"RTN","IBCNSBL1",29,0)
 I $D(XQY0) S IBT(IBCNT)=IBT(IBCNT)_$P($G(XQY0),"^",2)
"RTN","IBCNSBL1",30,0)
 I $D(ZTQUEUED),$P($G(XQY0),"^",2)="" S IBT(IBCNT)=IBT(IBCNT)_"Queued Job - "_$G(ZTDESC)
"RTN","IBCNSBL1",31,0)
 D SEND
"RTN","IBCNSBL1",32,0)
BULLQ Q
"RTN","IBCNSBL1",33,0)
 ;
"RTN","IBCNSBL1",34,0)
NPOL ; -- set up new policy
"RTN","IBCNSBL1",35,0)
 S IBCNT=IBCNT+1
"RTN","IBCNSBL1",36,0)
 S IBT(IBCNT)=$$D1(IBEVTA0)
"RTN","IBCNSBL1",37,0)
 Q
"RTN","IBCNSBL1",38,0)
 ;
"RTN","IBCNSBL1",39,0)
OPOL ; -- set up old policies
"RTN","IBCNSBL1",40,0)
 N J,X,IBPCNT
"RTN","IBCNSBL1",41,0)
 S J=0 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  I J'=IBCDFN S X=$G(^DPT(DFN,.312,J,0)) S IBCNT=IBCNT+1,IBT(IBCNT)=$$D1(X) S IBPCNT=$G(IBPCNT)+1
"RTN","IBCNSBL1",42,0)
 I $G(IBPCNT)<1 S IBCNT=IBCNT+1,IBT(IBCNT)="    No Previous Policies On file!"
"RTN","IBCNSBL1",43,0)
 Q
"RTN","IBCNSBL1",44,0)
 ;
"RTN","IBCNSBL1",45,0)
SEND S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBCNSBL1",46,0)
 K XMY S XMN=0
"RTN","IBCNSBL1",47,0)
 S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,4)),"^",4),0)),"^")
"RTN","IBCNSBL1",48,0)
 I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBCNSBL1",49,0)
 D ^XMD
"RTN","IBCNSBL1",50,0)
 K X,Y,IBI,IBT,IBGRP,XMDUZ,XMTEXT,XMY,XMSUB
"RTN","IBCNSBL1",51,0)
 Q
"RTN","IBCNSBL1",52,0)
 ;
"RTN","IBCNSBL1",53,0)
HDR ; -- print standard header
"RTN","IBCNSBL1",54,0)
 D HDR1("=",76)
"RTN","IBCNSBL1",55,0)
 Q
"RTN","IBCNSBL1",56,0)
 ;
"RTN","IBCNSBL1",57,0)
HDR1(CHAR,LENG) ; -- print header, specify character
"RTN","IBCNSBL1",58,0)
 S IBCNT=IBCNT+1
"RTN","IBCNSBL1",59,0)
 S IBT(IBCNT)="    Insurance Co.     Subscriber ID     Group       Holder  Effective Expires"
"RTN","IBCNSBL1",60,0)
 S IBCNT=IBCNT+1,X="",$P(X,CHAR,LENG)=""
"RTN","IBCNSBL1",61,0)
 S IBT(IBCNT)=X
"RTN","IBCNSBL1",62,0)
 Q
"RTN","IBCNSBL1",63,0)
 ;
"RTN","IBCNSBL1",64,0)
 ;
"RTN","IBCNSBL1",65,0)
D1(IBINS) N X,IBX
"RTN","IBCNSBL1",66,0)
 S IBX="" I '$G(IBINS) G DQ
"RTN","IBCNSBL1",67,0)
 S IBX="    "_$E($S($D(^DIC(36,+IBINS,0)):$E($P(^(0),"^",1),1,16),1:"UNKNOWN")_"                 ",1,16)_"  "
"RTN","IBCNSBL1",68,0)
 S IBX=IBX_$E($P(IBINS,"^",2)_"                ",1,16)_"  "
"RTN","IBCNSBL1",69,0)
 S IBX=IBX_$E($$GRP^IBCNS($P(IBINS,"^",18))_"          ",1,10)_"  "
"RTN","IBCNSBL1",70,0)
 S X=$P(IBINS,"^",6) S IBX=IBX_$E($S(X="v":"SELF",X="s":"SPOUSE",1:"OTHER")_"      ",1,8)
"RTN","IBCNSBL1",71,0)
 S IBX=IBX_$E($$DAT1^IBOUTL($P(IBINS,"^",8))_"          ",1,10)_$$DAT1^IBOUTL($P(IBINS,"^",4))
"RTN","IBCNSBL1",72,0)
DQ Q IBX
"RTN","IBCNSBL1",73,0)
 ;
"RTN","IBCNSBL1",74,0)
OPT ; -- list opt treatment (sched appoints only)
"RTN","IBCNSBL1",75,0)
 N CNT S CNT=0
"RTN","IBCNSBL1",76,0)
 ;
"RTN","IBCNSBL1",77,0)
 I $D(^TMP($J,"SDAMA201","GETAPPT","ERROR")) S IBCNT=IBCNT+1,IBT(IBCNT)="    Unable to look-up Scheduled Appointments." D  Q
"RTN","IBCNSBL1",78,0)
 . F  S CNT=$O(^TMP($J,"SDAMA201","GETAPPT","ERROR",CNT)) Q:'CNT  S IBCNT=IBCNT+1,IBT(IBCNT)="    "_$G(^TMP($J,"SDAMA201","GETAPPT","ERROR",CNT))
"RTN","IBCNSBL1",79,0)
 ;
"RTN","IBCNSBL1",80,0)
 S OPT=0 F  S OPT=$O(^TMP($J,"SDAMA201","GETAPPT",OPT)) Q:'OPT  D
"RTN","IBCNSBL1",81,0)
 .S IBCNT=IBCNT+1
"RTN","IBCNSBL1",82,0)
 .I IBCNT>100 S IBT(IBCNT)="Too many to list" S OPT=9999999 Q
"RTN","IBCNSBL1",83,0)
 .S IBT(IBCNT)="   Outpatient Visit on "_$$DAT1^IBOUTL($G(^TMP($J,"SDAMA201","GETAPPT",OPT,1)))_" to "_$P($G(^TMP($J,"SDAMA201","GETAPPT",OPT,2)),"^",2)
"RTN","IBCNSBL1",84,0)
 .S CNT=CNT+1
"RTN","IBCNSBL1",85,0)
 I 'CNT S IBCNT=IBCNT+1,IBT(IBCNT)="    No Scheduled appointments found."
"RTN","IBCNSBL1",86,0)
 Q
"RTN","IBCNSBL1",87,0)
 ;
"RTN","IBCNSBL1",88,0)
INPT ; -- list inpt. treatment (admissions only)
"RTN","IBCNSBL1",89,0)
 N CNT S CNT=0
"RTN","IBCNSBL1",90,0)
 I $G(^DPT(DFN,.1))]"" S CNT=CNT+1,IBCNT=IBCNT+1,IBT(IBCNT)="    Currently an Inpatient on "_$G(^DPT(DFN,.1))
"RTN","IBCNSBL1",91,0)
 I $G(IBTADD) S IBCNT=IBCNT+1,IBT(IBCNT)="    Entry Added to Claims Tracking for Current Admission."
"RTN","IBCNSBL1",92,0)
 I $G(VAIN(1)) S CNT=CNT+1,IBCNT=IBCNT+1,IBT(IBCNT)="    Previously an inpatient on ward "_$P(VAIN(4),"^",2)_" on "_$$DAT1^IBOUTL($P(START,"."))
"RTN","IBCNSBL1",93,0)
 S INPT=START F  S INPT=$O(^DGPM("APTT1",DFN,INPT)) Q:'INPT!(INPT>END)  S DGPM=0 F  S DGPM=$O(^DGPM("APTT1",DFN,INPT,DGPM)) Q:'DGPM  D
"RTN","IBCNSBL1",94,0)
 .Q:'$G(^DGPM(DGPM,0))
"RTN","IBCNSBL1",95,0)
 .S IBCNT=IBCNT+1
"RTN","IBCNSBL1",96,0)
 .S IBT(IBCNT)="    Inpatient Admission on "_$$DAT1^IBOUTL(+^DGPM(DGPM,0),"2P")
"RTN","IBCNSBL1",97,0)
 .S CNT=CNT+1
"RTN","IBCNSBL1",98,0)
 I 'CNT S IBCNT=IBCNT+1,IBT(IBCNT)="    No Admissions found."
"RTN","IBCNSBL1",99,0)
 Q
"RTN","IBCNSBL1",100,0)
 ;
"RTN","IBCNSBL1",101,0)
BUFF ; -- list insurance buffer entries for the patient
"RTN","IBCNSBL1",102,0)
 N IBBDA,IBX,IBY,IBB40,IBB60
"RTN","IBCNSBL1",103,0)
 I '$$BUFFER^IBCNBU1(DFN) S IBCNT=IBCNT+1,IBT(IBCNT)="    No Insurance Buffer entries for this Patient." Q
"RTN","IBCNSBL1",104,0)
 ;
"RTN","IBCNSBL1",105,0)
 S IBBDA=0 F  S IBBDA=$O(^IBA(355.33,"C",DFN,IBBDA)) Q:'IBBDA  D
"RTN","IBCNSBL1",106,0)
 . S IBB40=$G(^IBA(355.33,IBBDA,40)),IBB60=$G(^IBA(355.33,IBBDA,60))
"RTN","IBCNSBL1",107,0)
 . ;
"RTN","IBCNSBL1",108,0)
 . S IBY=$P($G(^IBA(355.33,+IBBDA,20)),U,1),IBX="    "_$E($S(IBY'="":IBY,1:"UNKNOWN")_"                 ",1,16)_"  "
"RTN","IBCNSBL1",109,0)
 . S IBX=IBX_$E($P(IBB60,"^",4)_"                ",1,16)_"  "
"RTN","IBCNSBL1",110,0)
 . S IBX=IBX_$E($S($P(IBB40,U,3)'="":$P(IBB40,U,3),$P(IBB40,U,2)'="":$P(IBB40,U,2),$P(IBB40,U,1)=0:"Ind. Plan",1:"")_"          ",1,10)_"  "
"RTN","IBCNSBL1",111,0)
 . S IBY=$P(IBB60,"^",5) S IBX=IBX_$E($S(IBY="v":"SELF",IBY="s":"SPOUSE",1:"OTHER")_"      ",1,8)
"RTN","IBCNSBL1",112,0)
 . S IBX=IBX_$E($$DAT1^IBOUTL($P(IBB60,"^",2))_"          ",1,10)_$$DAT1^IBOUTL($P(IBB60,"^",3))
"RTN","IBCNSBL1",113,0)
 . S IBCNT=IBCNT+1,IBT(IBCNT)=IBX
"RTN","IBCNSBL1",114,0)
 Q
"RTN","IBECEAU")
0^17^B13792426
"RTN","IBECEAU",1,0)
IBECEAU ;ALB/CPM - Cancel/Edit/Add... Utilities ;11-MAR-93
"RTN","IBECEAU",2,0)
 ;;2.0;INTEGRATED BILLING;**91,249**;21-MAR-94
"RTN","IBECEAU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBECEAU",4,0)
 ;
"RTN","IBECEAU",5,0)
CHECK(TALK) ; Retrieve the institution and MAS Service pointer.
"RTN","IBECEAU",6,0)
 ; Input:   TALK  --  1 : do i/o (writes)
"RTN","IBECEAU",7,0)
 ;                    0 : no i/o
"RTN","IBECEAU",8,0)
 N IBY,Y S (IBY,Y)=1
"RTN","IBECEAU",9,0)
 D SITE^IBAUTL I Y<1 S IBY=Y W:$G(TALK) !!,"You must define your facility in the IB SITE PARAMETER file before proceeding!",!
"RTN","IBECEAU",10,0)
 I IBY>0 D SERV^IBAUTL2 I IBY<1 W:$G(TALK) !!,"You must define the MAS Service Pointer in the IB SITE PARAMETER file",!,"before proceeding!",!
"RTN","IBECEAU",11,0)
 Q IBY>0
"RTN","IBECEAU",12,0)
 ;
"RTN","IBECEAU",13,0)
PAUSE ; Go to end of page to pause.
"RTN","IBECEAU",14,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEAU",15,0)
 W ! F Y=$Y:1:21 W !
"RTN","IBECEAU",16,0)
 S DIR("A")="Press RETURN to process the next charge or to return to the list"
"RTN","IBECEAU",17,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBECEAU",18,0)
 Q
"RTN","IBECEAU",19,0)
 ;
"RTN","IBECEAU",20,0)
INPT(DAYS) ; Return a description for Billing Clock days.
"RTN","IBECEAU",21,0)
 ; Input:   DAYS  --  Number of days in a billing clock
"RTN","IBECEAU",22,0)
 ; Output:  "1st", "2nd", "3rd", "4th"
"RTN","IBECEAU",23,0)
 Q $S(DAYS>270:"4th",DAYS>180:"3rd",DAYS>90:"2nd",1:"1st")
"RTN","IBECEAU",24,0)
 ;
"RTN","IBECEAU",25,0)
LAST(PAR) ; Find last action filed for any parent action.
"RTN","IBECEAU",26,0)
 ; Input:    PAR  --  Parent IB Action
"RTN","IBECEAU",27,0)
 ; Output:   Last action filed for parent (or parent if none)
"RTN","IBECEAU",28,0)
 N IBL,IBLDT,IBLAST
"RTN","IBECEAU",29,0)
 S IBLAST="",IBLDT=$O(^IB("APDT",PAR,"")) I +IBLDT S IBL=0 F  S IBL=$O(^IB("APDT",PAR,IBLDT,IBL)) Q:'IBL  S IBLAST=IBL
"RTN","IBECEAU",30,0)
 Q $S(IBLAST:IBLAST,1:PAR)
"RTN","IBECEAU",31,0)
 ;
"RTN","IBECEAU",32,0)
BFO(DFN,DATE) ; Patient Billed For OPT Copay on a specified date?
"RTN","IBECEAU",33,0)
 ; Input:    DFN  --  Pointer to the patient in file #2
"RTN","IBECEAU",34,0)
 ;          DATE  --  Date of the Outpatient Visit
"RTN","IBECEAU",35,0)
 ; Output:     0  --  Not billed the OPT copay on the visit date
"RTN","IBECEAU",36,0)
 ;            >0  --  Pointer to charge in file #350 that was billed
"RTN","IBECEAU",37,0)
 N IBATYP,IBATYPN,IBL,IBND,IBN,Y
"RTN","IBECEAU",38,0)
 I '$G(DFN)!'$G(DATE) G BFOQ
"RTN","IBECEAU",39,0)
 S IBN=0 F  S IBN=$O(^IB("AFDT",DFN,-DATE,IBN)) Q:'IBN  D  I $P(IBATYPN,"^",11)=4,"^1^3^"[("^"_$P(IBATYP,"^",5)_"^"),"^1^2^3^4^8^20^"[("^"_+$P(IBND,"^",5)_"^") S Y=IBL Q
"RTN","IBECEAU",40,0)
 .S IBL=$$LAST(+$P($G(^IB(IBN,0)),"^",9)),IBND=$G(^IB(IBL,0))
"RTN","IBECEAU",41,0)
 .S IBATYP=$G(^IBE(350.1,+$P(IBND,"^",3),0))
"RTN","IBECEAU",42,0)
 .S IBATYPN=$G(^IBE(350.1,+$P(IBATYP,"^",9),0))
"RTN","IBECEAU",43,0)
BFOQ Q +$G(Y)
"RTN","IBECEAU",44,0)
 ;
"RTN","IBECEAU",45,0)
CNP(DFN,DATE) ; Did the patient have a C&P Exam on a specified date?
"RTN","IBECEAU",46,0)
 ; Input:    DFN  --  Pointer to the patient in file #2
"RTN","IBECEAU",47,0)
 ;          DATE  --  Date of the Outpatient Visit
"RTN","IBECEAU",48,0)
 ; Output:     0  --  Patient did not have a C&P Exam on the visit date
"RTN","IBECEAU",49,0)
 ;             1  --  Patient had a C&P Exam on the visit date
"RTN","IBECEAU",50,0)
 N I,IBD,IBSD,Y,IBVAL,IBCBK,IBFILTER,IBCNP,Z
"RTN","IBECEAU",51,0)
 I '$G(DFN)!'$G(DATE) G CNPQ
"RTN","IBECEAU",52,0)
 ; - check appts, stop codes
"RTN","IBECEAU",53,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DATE,IBVAL("EDT")=DATE+.9999
"RTN","IBECEAU",54,0)
 ; Only parent appt or add/edit encounters
"RTN","IBECEAU",55,0)
 S IBFILTER=""
"RTN","IBECEAU",56,0)
 S IBCBK="I '$P(Y0,U,6),$P(Y0,U,8)<3 N Z S Z=$P(Y0,U,8) I $S(Z=1:$P(Y0,U,10)=1&($P(Y0,U,12)<3),Z=2:$P(Y0,U,10)=1,1:0) S (IBCNP,SDSTOP)=1"
"RTN","IBECEAU",57,0)
 S IBCNP=0
"RTN","IBECEAU",58,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBECEAU",59,0)
 I IBCNP S Y=1
"RTN","IBECEAU",60,0)
CNPQ Q +$G(Y)
"RTN","IBECEAU",61,0)
 ;
"RTN","IBECEAU",62,0)
HDR(OPT) ; Display the header for an action
"RTN","IBECEAU",63,0)
 ; Input:    OPT  --  Action Header
"RTN","IBECEAU",64,0)
 N ADD,HDR S ADD=OPT="A D D"
"RTN","IBECEAU",65,0)
 D CLEAR^VALM1 S IBY=1,HDR=OPT_"   A   C H A R G E"
"RTN","IBECEAU",66,0)
 I 'ADD S IBIDX=$G(^TMP("IBACMIDX",$J,IBNBR)),IBN=+$P(IBIDX,"^",4),IBND=$G(^IB(IBN,0))
"RTN","IBECEAU",67,0)
 W !?(80-$L(HDR)\2),HDR W:'ADD !?29,"Processing Charge #",IBNBR
"RTN","IBECEAU",68,0)
 W !,$$LINE,!?3,"Name: ",$P(IBNAM,"^") W:'ADD ?41,"Type: ",$P(IBIDX,"^",3)
"RTN","IBECEAU",69,0)
 I ADD W ?41,"** " W:'IBCLDA "NO " W "ACTIVE BILLING CLOCK **"
"RTN","IBECEAU",70,0)
 W !?5,"ID: ",$P(IBNAM,"^",2) W:'ADD ?42,"Amt:",$P(IBIDX,"^",5)," (",$P(IBIDX,"^",6),")"
"RTN","IBECEAU",71,0)
 I ADD,IBCLDA W ?44,"Clock Begin Date: ",$$DAT1^IBOUTL(IBCLDT)
"RTN","IBECEAU",72,0)
 W !,$$LINE,!
"RTN","IBECEAU",73,0)
 Q
"RTN","IBECEAU",74,0)
 ;
"RTN","IBECEAU",75,0)
LINE() ; Write a line.
"RTN","IBECEAU",76,0)
 Q $TR($J("",80)," ","-")
"RTN","IBECEAU",77,0)
 ;
"RTN","IBECEAU",78,0)
CLOCK(IBDOL,IBDAYPR,IBDAY) ; Display and update clock data.
"RTN","IBECEAU",79,0)
 ; Input:     IBDOL  --  Dollar amount to add or subtract
"RTN","IBECEAU",80,0)
 ;          IBDAYPR  --  Existing number of inpatient days
"RTN","IBECEAU",81,0)
 ;            IBDAY  --  Inpatient days to add or subtract
"RTN","IBECEAU",82,0)
 ; Also assumes that IBCLST,IBNAM, IBCLDA, and IBXA are defined.
"RTN","IBECEAU",83,0)
 D CLDSP^IBECEAU1(IBCLST,IBNAM) I $P(IBCLST,"^",4)'=1 W !,"** Please note that an active billing clock was not selected for updating **"
"RTN","IBECEAU",84,0)
 I IBXA=1!(IBXA=2) D CLAMT^IBECEAU1(IBCLST,IBDOL,IBCLDA)
"RTN","IBECEAU",85,0)
 I IBXA=3 D CLINP^IBECEAU1(IBDAYPR,IBDAY,IBCLDA)
"RTN","IBECEAU",86,0)
 Q
"RTN","IBEFUNC")
0^16^B45602678
"RTN","IBEFUNC",1,0)
IBEFUNC ;ALB/RLW - EXTRINSIC FUNCTIONS ;12-JUN-92
"RTN","IBEFUNC",2,0)
 ;;2.0;INTEGRATED BILLING;**55,91,106,139,51,153,232,155,249**;21-MAR-94
"RTN","IBEFUNC",3,0)
 ;
"RTN","IBEFUNC",4,0)
ETXT(X) ; -- output error text from 350.8
"RTN","IBEFUNC",5,0)
 ; -- input error code
"RTN","IBEFUNC",6,0)
 N Y S Y=X
"RTN","IBEFUNC",7,0)
 I X="" G ETXTQ
"RTN","IBEFUNC",8,0)
 S Y=$P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",X,0)),0)),U,2)
"RTN","IBEFUNC",9,0)
ETXTQ Q Y
"RTN","IBEFUNC",10,0)
 ;
"RTN","IBEFUNC",11,0)
IGN(X,Y) ; ignore means test? for appt type on dates
"RTN","IBEFUNC",12,0)
 ; -- input x = mas appt type
"RTN","IBEFUNC",13,0)
 ;          y = appt date
"RTN","IBEFUNC",14,0)
 ;    output  = true if this appt type should not be billed for
"RTN","IBEFUNC",15,0)
 ;              Means Test billing (352.1,.04) for given date
"RTN","IBEFUNC",16,0)
 ;
"RTN","IBEFUNC",17,0)
 I '$G(X)!('$G(Y)) Q 1
"RTN","IBEFUNC",18,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,4)
"RTN","IBEFUNC",19,0)
 ;
"RTN","IBEFUNC",20,0)
DSP(X,Y) ; display on input screen?
"RTN","IBEFUNC",21,0)
 ; --    input X = mas appt type (P409.1)
"RTN","IBEFUNC",22,0)
 ;             Y = date
"RTN","IBEFUNC",23,0)
 ;       output  = true if appt type X (352.1,.02) should be displayed as
"RTN","IBEFUNC",24,0)
 ;          a potential billable visit (352.1,.06) on given date Y (352.1,.03)
"RTN","IBEFUNC",25,0)
 ;
"RTN","IBEFUNC",26,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",27,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",28,0)
 ;
"RTN","IBEFUNC",29,0)
RPT(X,Y) ; print on report?
"RTN","IBEFUNC",30,0)
 ; -- input X = mas appt type (P409.1)
"RTN","IBEFUNC",31,0)
 ;          Y = date
"RTN","IBEFUNC",32,0)
 ;    output  = true if appt type X (352.1,.02) should be printed on 'Vets w/ Ins and Opt
"RTN","IBEFUNC",33,0)
 ;               Visits' report (352.1,.05) on given date Y (352.1,.06)
"RTN","IBEFUNC",34,0)
 ;
"RTN","IBEFUNC",35,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",36,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",37,0)
 ;
"RTN","IBEFUNC",38,0)
NBDIS(X,Y) ; Is disposition non-billable?
"RTN","IBEFUNC",39,0)
 ; -- input X = disposition (P37)
"RTN","IBEFUNC",40,0)
 ;          Y = date of appt
"RTN","IBEFUNC",41,0)
 ;    output  = true (1) if disposition should be ignored for
"RTN","IBEFUNC",42,0)
 ;              Means test billing (352.2,.03) for given date
"RTN","IBEFUNC",43,0)
 ;
"RTN","IBEFUNC",44,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",45,0)
 Q +$P($G(^IBE(352.2,+$O(^(+$O(^IBE(352.2,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",46,0)
 ;
"RTN","IBEFUNC",47,0)
NBCSC(X,Y) ; Is clinic stop code non-billable?
"RTN","IBEFUNC",48,0)
 ; -- input X = clinic stop code (P40.7)
"RTN","IBEFUNC",49,0)
 ;          Y = date of appt
"RTN","IBEFUNC",50,0)
 ;    output  = true (1) if clinic stop code should be ignored for
"RTN","IBEFUNC",51,0)
 ;              Means test billing (352.3,.03) for given date
"RTN","IBEFUNC",52,0)
 ;
"RTN","IBEFUNC",53,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",54,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",55,0)
 ;
"RTN","IBEFUNC",56,0)
NBCL(X,Y) ; Is clinic non-billable?
"RTN","IBEFUNC",57,0)
 ; -- input X = clinic (P44)
"RTN","IBEFUNC",58,0)
 ;          Y = date of appt
"RTN","IBEFUNC",59,0)
 ;    output  = true (1) if clinic should be ignored for
"RTN","IBEFUNC",60,0)
 ;              Means test billing (352.4,.03) for given date
"RTN","IBEFUNC",61,0)
 ;
"RTN","IBEFUNC",62,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",63,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",64,0)
 ;
"RTN","IBEFUNC",65,0)
NBST(X,Y) ; Is clinic stop code non-billable for Third Party?
"RTN","IBEFUNC",66,0)
 ; -- input X = clinic stop code (P40.7), Y = appt date
"RTN","IBEFUNC",67,0)
 ;    output  = true (1) if stop non-billable for Third Party (352.3,.05) for given dt
"RTN","IBEFUNC",68,0)
 ;
"RTN","IBEFUNC",69,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",70,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",71,0)
 ;
"RTN","IBEFUNC",72,0)
NBCT(X,Y) ; Is clinic non-billable for Third Party?
"RTN","IBEFUNC",73,0)
 ; -- input X = clinic (P44), Y = appt dt
"RTN","IBEFUNC",74,0)
 ;    output  = true (1) if clinic non-billable for Third Party (352.4,.05) for given date
"RTN","IBEFUNC",75,0)
 ;
"RTN","IBEFUNC",76,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",77,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",78,0)
 ;
"RTN","IBEFUNC",79,0)
NABST(X,Y) ; Returns true (1) if stop code flagged to be ignored by Third Party auto biller (use DT)
"RTN","IBEFUNC",80,0)
 S:'$G(Y) Y=DT I '$G(X) Q 0
"RTN","IBEFUNC",81,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",82,0)
 ;
"RTN","IBEFUNC",83,0)
NABCT(X,Y) ; Returns true (1) if clinic is flagged to be ignored by Third Party auto biller (use DT)
"RTN","IBEFUNC",84,0)
 S:'$G(Y) Y=DT I '$G(X) Q 0
"RTN","IBEFUNC",85,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",86,0)
 ;
"RTN","IBEFUNC",87,0)
PT(DFN) ;returns (patient name^long pat id^short pat id) or null if not found
"RTN","IBEFUNC",88,0)
 N X,IBX S X="" I $D(DFN) S X=$G(^DPT(+DFN,0)) I X'="" S X=$P(X,U,1)_U_$P($G(^DPT(DFN,.36)),U,3,4) D
"RTN","IBEFUNC",89,0)
 . S IBX=$P(^DPT(+DFN,0),U,9)
"RTN","IBEFUNC",90,0)
 . I $P(X,U,2)="" S $P(X,U,2)=$E(IBX,1,3)_"-"_$E(IBX,4,5)_"-"_$E(IBX,6,10)
"RTN","IBEFUNC",91,0)
 . I $P(X,U,3)="" S $P(X,U,3)=$E(IBX,6,10)
"RTN","IBEFUNC",92,0)
 Q X
"RTN","IBEFUNC",93,0)
 ;
"RTN","IBEFUNC",94,0)
EXSET(X,D0,D1) ;returns external value of a set in file D0, field D1
"RTN","IBEFUNC",95,0)
 Q $$EXPAND^IBTRE($G(D0),$G(D1),$G(X))
"RTN","IBEFUNC",96,0)
 ;
"RTN","IBEFUNC",97,0)
BABCSC(DFN,IBDT) ; -- any billable Third Party visits in encounter file for patient
"RTN","IBEFUNC",98,0)
 ;  -- Input  dfn = patient,  ibdt = date
"RTN","IBEFUNC",99,0)
 ;     output     = 1 if any billable stop on date OR 0 if none
"RTN","IBEFUNC",100,0)
 ;
"RTN","IBEFUNC",101,0)
 N IBX,IBVAL,IBCBK,IBFILTER
"RTN","IBEFUNC",102,0)
 S IBX=0
"RTN","IBEFUNC",103,0)
 I '$G(DFN)!('$G(IBDT)) G BABQ
"RTN","IBEFUNC",104,0)
 ;
"RTN","IBEFUNC",105,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=IBDT\1,IBVAL("EDT")=IBDT\1+.24
"RTN","IBEFUNC",106,0)
 ;Ignore if not chkd out, no stop, non-billable stop, non-billable clinic
"RTN","IBEFUNC",107,0)
 S IBFILTER=""
"RTN","IBEFUNC",108,0)
 S IBCBK="I $P(Y0,U,12)=2,$P(Y0,U,3),'$$NBST^IBEFUNC($P(Y0,U,3),+Y0),'$$NBCT^IBEFUNC(+$P(Y0,U,4),+Y0) S (IBX,SDSTOP)=1"
"RTN","IBEFUNC",109,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBEFUNC",110,0)
 ;
"RTN","IBEFUNC",111,0)
BABQ Q IBX
"RTN","IBEFUNC",112,0)
 ;
"RTN","IBEFUNC",113,0)
APPTCT(IBOE0) ; Determine if appt encounter/appt has valid status for billing
"RTN","IBEFUNC",114,0)
 ; Returns 1 if valid, 0 if not
"RTN","IBEFUNC",115,0)
 ; IBOE0 = the encounter's 0-node (input)
"RTN","IBEFUNC",116,0)
 N STAT
"RTN","IBEFUNC",117,0)
 S STAT=$P(IBOE0,U,12) ;Encounter stat
"RTN","IBEFUNC",118,0)
 I STAT=14 S STAT=2
"RTN","IBEFUNC",119,0)
 ; Assume 1,2 (and 14 sometimes) are valid, 8 = INPATIENT
"RTN","IBEFUNC",120,0)
 Q STAT<3
"RTN","IBEFUNC",121,0)
 ;
"RTN","IBEFUNC",122,0)
NCTCL(IBOE0) ; Determine if a clinic for an outpt encounter is non-count
"RTN","IBEFUNC",123,0)
 ; IBOE0 = the 0-node of the encounter
"RTN","IBEFUNC",124,0)
 Q ($P($G(^SC(+$P(IBOE0,U,4),0)),U,17)="Y")
"RTN","IBEFUNC",125,0)
 ;
"RTN","IBEFUNC",126,0)
DISCT(IBOE,IBOE0) ; Determine if disposition has valid status for billing
"RTN","IBEFUNC",127,0)
 ; Returns 1 if valid, 0 if not valid
"RTN","IBEFUNC",128,0)
 ; IBOE = encounter ien
"RTN","IBEFUNC",129,0)
 ; IBOE0 = 0-node of encounter (optional)
"RTN","IBEFUNC",130,0)
 N IBX
"RTN","IBEFUNC",131,0)
 S IBX=$$DISND^IBSDU(IBOE,$G(IBOE0),2)
"RTN","IBEFUNC",132,0)
 Q (IBX<2)
"RTN","IBEFUNC",133,0)
 ;
"RTN","IBEFUNC",134,0)
NEEDMRA(IBIFN) ; Returns MRA NEEDED STATUS for bill
"RTN","IBEFUNC",135,0)
 Q $P($G(^DGCR(399,+IBIFN,"TX")),U,5)
"RTN","IBEFUNC",136,0)
 ;
"RTN","IBEFUNC",137,0)
REQMRA(IBIFN) ; Determine from site parameter, ins assigned to bill and txmn
"RTN","IBEFUNC",138,0)
 ;   rules if request for MRA is needed (MCRWNR must be current ins co)
"RTN","IBEFUNC",139,0)
 ; "R" = not needed due to next carrier not requiring it (txmn rules),
"RTN","IBEFUNC",140,0)
 ; "R1" = not needed due to MRA turned off at site
"RTN","IBEFUNC",141,0)
 ;  0 = not needed,  1 = needed
"RTN","IBEFUNC",142,0)
 N IB0,COBINS,COBSEQ,IBOK,Z1,Z0,IBDA,IB00,IB0
"RTN","IBEFUNC",143,0)
 ;
"RTN","IBEFUNC",144,0)
 I $$COB^IBCEF(IBIFN)="A" S IBOK=0 G REQMRAQ    ; payer sequence = patient not allowed for MRA
"RTN","IBEFUNC",145,0)
 S COBSEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",146,0)
 S COBINS=$P($G(^DGCR(399,IBIFN,"M")),U,COBSEQ)
"RTN","IBEFUNC",147,0)
 ;Curr ins must = MEDICARE WNR
"RTN","IBEFUNC",148,0)
 S IBOK=+$$MCRWNR(COBINS)
"RTN","IBEFUNC",149,0)
 I 'IBOK G REQMRAQ
"RTN","IBEFUNC",150,0)
 ;
"RTN","IBEFUNC",151,0)
 I '$$EDIACTV^IBCEF4(2) S IBOK="R1" G REQMRAQ ; Site param=NO
"RTN","IBEFUNC",152,0)
 ;
"RTN","IBEFUNC",153,0)
 ; Check next ins for MRA needed
"RTN","IBEFUNC",154,0)
 I COBSEQ'<3 S IBOK=0 G REQMRAQ
"RTN","IBEFUNC",155,0)
 ;
"RTN","IBEFUNC",156,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBEFUNC",157,0)
 S COBINS=+$P($G(^DGCR(399,IBIFN,"M")),U,COBSEQ+1)
"RTN","IBEFUNC",158,0)
 I 'COBINS S IBOK=0 G REQMRAQ ;No next ins
"RTN","IBEFUNC",159,0)
 ;
"RTN","IBEFUNC",160,0)
 ; Check only rules with rule type = 2 (MRA REQUEST RESTRICTIONS)
"RTN","IBEFUNC",161,0)
 S IBDA=0 F  S IBDA=$O(^IBE(364.4,"AC",2,IBDA)) Q:'IBDA  S IB00=$G(^IBE(364.4,IBDA,0)) D  Q:'IBOK
"RTN","IBEFUNC",162,0)
 . I $P(IB00,U,2)>DT Q  ; Inactive
"RTN","IBEFUNC",163,0)
 . I $P(IB00,U,6),$P(IB00,U,6)'>DT Q  ; Expired
"RTN","IBEFUNC",164,0)
 . S Z0=$$INPAT^IBCEF(IBIFN,1),Z0=$S(Z0=1:2,1:1)
"RTN","IBEFUNC",165,0)
 . S Z1=$$FT^IBCEF(IBIFN),Z1=$S(Z1=3:1,1:2)
"RTN","IBEFUNC",166,0)
 . I $S($P(IB00,U,4)=3:1,1:$P(IB00,U,4)=Z0),$S($P(IB00,U,5)=3:1,1:$P(IB00,U,5)=Z1) S Z0=$D(^IBE(364.4,IBDA,3,"B",COBINS)) I Z0>0 S IBOK="R"
"RTN","IBEFUNC",167,0)
 ;
"RTN","IBEFUNC",168,0)
REQMRAQ Q IBOK
"RTN","IBEFUNC",169,0)
 ;
"RTN","IBEFUNC",170,0)
MCRWNR(IBINS) ;Returns whether the ins co IBINS is MEDICARE WNR (Will
"RTN","IBEFUNC",171,0)
 ;           NOT Reimburse) 0=NO, 1=YES
"RTN","IBEFUNC",172,0)
 N Z,Z0
"RTN","IBEFUNC",173,0)
 S Z=0,Z0=$G(^DIC(36,+IBINS,0))
"RTN","IBEFUNC",174,0)
 I $P(Z0,U,2)="N",$P($G(^IBE(355.2,+$P(Z0,U,13),0)),U)="MEDICARE" S Z=1
"RTN","IBEFUNC",175,0)
 Q Z
"RTN","IBEFUNC",176,0)
 ;
"RTN","IBEFUNC",177,0)
WNRBILL(IBIFN,IBCOB) ; Returns whether the ins for COB seq IBCOB
"RTN","IBEFUNC",178,0)
 ;  is MEDICARE will not reimburse
"RTN","IBEFUNC",179,0)
 ;
"RTN","IBEFUNC",180,0)
 I $G(IBCOB)="" S IBCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",181,0)
 S IBCOB=$TR(IBCOB,"PST","123")
"RTN","IBEFUNC",182,0)
 Q $$MCRWNR(+$G(^DGCR(399,IBIFN,"I"_IBCOB)))
"RTN","IBEFUNC",183,0)
 ;
"RTN","IBEFUNC",184,0)
MCR(IBINS) ;Returns whether the ins co IBINS is MCR Will Reimburse
"RTN","IBEFUNC",185,0)
 ;          0=NO , 1=YES
"RTN","IBEFUNC",186,0)
 N Z,Z0
"RTN","IBEFUNC",187,0)
 S Z=0,Z0=$G(^DIC(36,+IBINS,0))
"RTN","IBEFUNC",188,0)
 I $P(Z0,U,2)'="N",$P($G(^IBE(355.2,+$P(Z0,U,13),0)),U)="MEDICARE" S Z=1
"RTN","IBEFUNC",189,0)
 Q Z
"RTN","IBEFUNC",190,0)
 ;
"RTN","IBEFUNC",191,0)
MRATYPE(IBIEN,IBVAR) ; Returns: A = MEDICARE A   B = MEDICARE B
"RTN","IBEFUNC",192,0)
 ;  C = MEDICARE OTHER    null = NOT MEDICARE
"RTN","IBEFUNC",193,0)
 ; for the plan associated with bill ien IBIEN OR grp plan IBIEN
"RTN","IBEFUNC",194,0)
 ; If IBVAR = "" or 'C', the data is from bill ien in IBIEN
"RTN","IBEFUNC",195,0)
 ;          = 'P', the data is from grp policy ien in IBIEN
"RTN","IBEFUNC",196,0)
 ; 
"RTN","IBEFUNC",197,0)
 N IBPLAN
"RTN","IBEFUNC",198,0)
 S IBPLAN=$S($G(IBVAR)'="P":+$$POLICY^IBCEF(IBIEN,18),1:IBIEN)
"RTN","IBEFUNC",199,0)
 Q $P($G(^IBA(355.3,+IBPLAN,0)),U,14)
"RTN","IBEFUNC",200,0)
 ;
"RTN","IBEFUNC",201,0)
MCRONBIL(IBIFN,IBFLG) ; Returns 0 if MCR WNR not on bill IBIFN
"RTN","IBEFUNC",202,0)
 ;  1 if on bill, is on or before current ins
"RTN","IBEFUNC",203,0)
 ;  2 if on bill, but after current ins
"RTN","IBEFUNC",204,0)
 ; IBFLG = a COB number if second "^" piece of return data should be
"RTN","IBEFUNC",205,0)
 ;         1 if MCRWNR is the insurance at that COB sequence (optional)
"RTN","IBEFUNC",206,0)
 N Z,IBON,Q
"RTN","IBEFUNC",207,0)
 S IBON=0,Q=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",208,0)
 F Z=1:1:3 I $$WNRBILL(IBIFN,Z) S IBON=$S(Q'<Z:1,1:2)_$S('$G(IBFLG):"",Z'=IBFLG:"",1:"^1") Q
"RTN","IBEFUNC",209,0)
 Q IBON
"RTN","IBEFUNC",210,0)
 ;
"RTN","IBEFUNC",211,0)
PROFEE(IBIFN) ; Returns whether any rev codes for prof fees
"RTN","IBEFUNC",212,0)
 ;  included on bill IBIFN  0 = not included,  1 = included,
"RTN","IBEFUNC",213,0)
 ;  2 = both inst and prof are included
"RTN","IBEFUNC",214,0)
 ;
"RTN","IBEFUNC",215,0)
 N IBPRO,Z
"RTN","IBEFUNC",216,0)
 S IBPRO=0,Z=$O(^DGCR(399,IBIFN,"RC","B",959)) ; Rev cds 960-989 are prof
"RTN","IBEFUNC",217,0)
 I Z,Z<990 D
"RTN","IBEFUNC",218,0)
 . S IBPRO=1
"RTN","IBEFUNC",219,0)
 . S Z=$O(^DGCR(399,IBIFN,"RC","B",0))
"RTN","IBEFUNC",220,0)
 . I $S(Z:Z<960,1:0)!($O(^DGCR(399,IBIFN,"RC","B",1000),-1)'<990) S IBPRO=2
"RTN","IBEFUNC",221,0)
 Q IBPRO
"RTN","IBEFUNC",222,0)
 ;
"RTN","IBEFUNC",223,0)
GETMOD(IBIFN,IBCPT,EXT) ; Returns 'list' of modifiers for file 399
"RTN","IBEFUNC",224,0)
 ;   procedure for bill IBIFN and proc ien IBCPT
"RTN","IBEFUNC",225,0)
 ;   in modifier seq order, separated by ','
"RTN","IBEFUNC",226,0)
 ;  If EXT = 1, return the actual modifier, not the ptr
"RTN","IBEFUNC",227,0)
 N IBMOD,IBZ,IBZ0,IB0,Z
"RTN","IBEFUNC",228,0)
 S IBZ=0,IBMOD=""
"RTN","IBEFUNC",229,0)
 F  S IBZ=$O(^DGCR(399,IBIFN,"CP",IBCPT,"MOD","B",IBZ)) Q:'IBZ  S IBZ0=0 F  S IBZ0=$O(^DGCR(399,IBIFN,"CP",IBCPT,"MOD","B",IBZ,IBZ0)) Q:'IBZ0  I $D(^DGCR(399,IBIFN,"CP",IBCPT,"MOD",IBZ0,0)) S IB0=$G(^(0)) D
"RTN","IBEFUNC",230,0)
 . I '$G(EXT) S Z=$P(IB0,U,2)
"RTN","IBEFUNC",231,0)
 . I $G(EXT) S Z=$$MOD^ICPTMOD($P(IB0,U,2),"I"),Z=$S($P(Z,U)=-1:"",1:$P(Z,U,2))
"RTN","IBEFUNC",232,0)
 . Q:Z=""
"RTN","IBEFUNC",233,0)
 . S IBMOD=IBMOD_$S(IBMOD="":"",1:",")_Z
"RTN","IBEFUNC",234,0)
 Q IBMOD
"RTN","IBEFUNC",235,0)
 ;
"RTN","IBEFUNC",236,0)
MODLST(MODS,DESC,IBMOD) ; Returns string of actual mods
"RTN","IBEFUNC",237,0)
 ; MOVED
"RTN","IBEFUNC",238,0)
 Q $$MODLST^IBEFUNC2(MODS,$G(DESC),.IBMOD)
"RTN","IBEFUNC",239,0)
 ;
"RTN","IBEFUNC",240,0)
GETSPEC(FILE,FIELD) ; Get fld specifier for FIELD # in FILE
"RTN","IBEFUNC",241,0)
 ; Use to set DIC("P") for FILE^DICN
"RTN","IBEFUNC",242,0)
 N IBZ
"RTN","IBEFUNC",243,0)
 D FIELD^DID(FILE,FIELD,"","SPECIFIER","IBZ")
"RTN","IBEFUNC",244,0)
 Q $G(IBZ("SPECIFIER"))
"RTN","IBEFUNC",245,0)
 ;
"RTN","IBJDI1")
0^4^B62725566
"RTN","IBJDI1",1,0)
IBJDI1 ;ALB/CPM - PERCENTAGE OF COMPLETED REGISTRATIONS ;16-DEC-96
"RTN","IBJDI1",2,0)
 ;;2.0;INTEGRATED BILLING;**69,98,100,118,128,123,249**;21-MAR-94
"RTN","IBJDI1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJDI1",4,0)
 ;
"RTN","IBJDI1",5,0)
EN ; - Option entry point.
"RTN","IBJDI1",6,0)
 ;
"RTN","IBJDI1",7,0)
 W !!,"This report measures the number of registrations which are being entered"
"RTN","IBJDI1",8,0)
 W !,"without inconsistencies. Please enter a date range representing the dates"
"RTN","IBJDI1",9,0)
 W !,"that patients were first entered into the system.",!
"RTN","IBJDI1",10,0)
 ;
"RTN","IBJDI1",11,0)
DATE D DATE^IBOUTL I IBBDT=""!(IBEDT="") G ENQ
"RTN","IBJDI1",12,0)
 ;
"RTN","IBJDI1",13,0)
 ; - Sort by division?
"RTN","IBJDI1",14,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("?")="^D DHLP^IBJDI1"
"RTN","IBJDI1",15,0)
 S DIR("A")="Do you wish to sort this report by division" W !
"RTN","IBJDI1",16,0)
 D ^DIR S IBSORT=+Y I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDI1",17,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDI1",18,0)
 ;
"RTN","IBJDI1",19,0)
 I IBSORT D PSDR^IBODIV G:Y<0 ENQ ; Select division(s).
"RTN","IBJDI1",20,0)
 ;
"RTN","IBJDI1",21,0)
 ; - Select a detailed or summary report.
"RTN","IBJDI1",22,0)
 D DS^IBJD I IBRPT["^" G ENQ
"RTN","IBJDI1",23,0)
 ;
"RTN","IBJDI1",24,0)
 I IBRPT="D" W !!,"You will need a 132 column printer for this report!"
"RTN","IBJDI1",25,0)
 E  W !!,"This report only requires an 80 column printer."
"RTN","IBJDI1",26,0)
 W !!,"Note: This report requires a search through the entire Patient file."
"RTN","IBJDI1",27,0)
 W !?6,"You should queue this report to run after normal business hours.",!
"RTN","IBJDI1",28,0)
 ;
"RTN","IBJDI1",29,0)
 ; - Select a device.
"RTN","IBJDI1",30,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBJDI1",31,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBJDI1",32,0)
 .S ZTRTN="DQ^IBJDI1",ZTDESC="IB - COMPLETED REGISTRATIONS"
"RTN","IBJDI1",33,0)
 .F I="IB*","VAUTD","VAUTD(" S ZTSAVE(I)=""
"RTN","IBJDI1",34,0)
 .D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued. The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBJDI1",35,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBJDI1",36,0)
 ;
"RTN","IBJDI1",37,0)
 U IO
"RTN","IBJDI1",38,0)
 ;
"RTN","IBJDI1",39,0)
DQ ; - Tasked entry point.
"RTN","IBJDI1",40,0)
 ;
"RTN","IBJDI1",41,0)
 I $G(IBXTRACT) D E^IBJDE(1,1) ; Change extract status.
"RTN","IBJDI1",42,0)
 ;
"RTN","IBJDI1",43,0)
 N IBQUERY K IB,^TMP("IBJDI1",$J),^TMP("IBDFN",$J),^TMP($J,"SDAMA301")
"RTN","IBJDI1",44,0)
 ;
"RTN","IBJDI1",45,0)
 ; - Initialize accumulators.
"RTN","IBJDI1",46,0)
 S IBC="COM^DEC^INC^NOTR^NVETC^NVETI^TR^VETC^VETI^TOT",IBQ=0
"RTN","IBJDI1",47,0)
 I IBSORT D
"RTN","IBJDI1",48,0)
 .S I=0 F  S I=$S(VAUTD:$O(^DG(40.8,I)),1:$O(VAUTD(I))) Q:'I  D
"RTN","IBJDI1",49,0)
 ..F J=1:1:10 S IB(I,$P(IBC,U,J))=0
"RTN","IBJDI1",50,0)
 E  F I=1:1:10 S IB(0,$P(IBC,U,I))=0
"RTN","IBJDI1",51,0)
 ;
"RTN","IBJDI1",52,0)
 ; - Find data required for the report.
"RTN","IBJDI1",53,0)
 S DFN=0 F  S DFN=$O(^DPT(DFN)) Q:'DFN  S IBDN=$G(^(DFN,0)) D  Q:IBQ
"RTN","IBJDI1",54,0)
 .I DFN#100=0 S IBQ=$$STOP^IBOUTL("Completed Registrations Report") Q:IBQ
"RTN","IBJDI1",55,0)
 .I $$TESTP(DFN) Q  ; Test patient.
"RTN","IBJDI1",56,0)
 .S IBD=+$P(IBDN,U,16) I IBD<IBBDT!(IBD>IBEDT)!('$D(^DPT(DFN,"DIS"))) Q
"RTN","IBJDI1",57,0)
 .D EN^IBJDI11 ; Process patient.
"RTN","IBJDI1",58,0)
 ;
"RTN","IBJDI1",59,0)
 I IBQ G ENQ
"RTN","IBJDI1",60,0)
 ;
"RTN","IBJDI1",61,0)
 ; - Extract summary data.
"RTN","IBJDI1",62,0)
 I $G(IBXTRACT) D E^IBJDE(1,0) G ENQ
"RTN","IBJDI1",63,0)
 ;
"RTN","IBJDI1",64,0)
 ; - Print the reports.
"RTN","IBJDI1",65,0)
 S IBQ=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%)
"RTN","IBJDI1",66,0)
 S IBDIV="" F  S IBDIV=$O(IB(IBDIV)) Q:IBDIV=""  D  Q:IBQ
"RTN","IBJDI1",67,0)
 .S IBPAG=0 D:IBRPT="D" DET I 'IBQ D SUM,PAUSE
"RTN","IBJDI1",68,0)
 ;
"RTN","IBJDI1",69,0)
ENQ K ^TMP("IBJDI1",$J),^TMP("IBDFN",$J),^TMP($J,"SDAMA301")
"RTN","IBJDI1",70,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDI1",71,0)
 ;
"RTN","IBJDI1",72,0)
 D ^%ZISC
"RTN","IBJDI1",73,0)
ENQ1 K IB,IBC,IBQ,IBBDT,IBEDT,IBRPT,IBD,IBDN,IBIN,IBPAG,IBRUN,IBTOC,IBDOD
"RTN","IBJDI1",74,0)
 K IBDIV,IBREG,IBNEXT,IBX,IBX0,IBX1,IBINPT,IBNOTR,IBNVET,IBPER,IBSORT
"RTN","IBJDI1",75,0)
 K IBFL,VAUTD,DFN,I,J,X,X1,X2,Y,%,%ZIS,POP,ZTDESC,ZTRTN,ZTSAVE
"RTN","IBJDI1",76,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT,IBARRAY,IBCOUNT
"RTN","IBJDI1",77,0)
 Q
"RTN","IBJDI1",78,0)
 ;
"RTN","IBJDI1",79,0)
DET ; - Print the detailed report.
"RTN","IBJDI1",80,0)
 I '$D(^TMP("IBJDI1",$J,IBDIV)) D  G DETQ
"RTN","IBJDI1",81,0)
 .D HDET W !!,"There were no registrations with inconsistencies found in this date range."
"RTN","IBJDI1",82,0)
 ;
"RTN","IBJDI1",83,0)
 ; look up future appts now
"RTN","IBJDI1",84,0)
 S IBARRAY(1)=$$NOW^XLFDT_";9999999"
"RTN","IBJDI1",85,0)
 S IBARRAY(3)="R;I;NT"
"RTN","IBJDI1",86,0)
 S IBARRAY(4)="^TMP(""IBDFN"",$J,"
"RTN","IBJDI1",87,0)
 S IBARRAY("SORT")="P"
"RTN","IBJDI1",88,0)
 S IBARRAY("FLDS")=1
"RTN","IBJDI1",89,0)
 S IBCOUNT=$$SDAPI^SDAMA301(.IBARRAY)
"RTN","IBJDI1",90,0)
 ;
"RTN","IBJDI1",91,0)
 S IBX0="" F  S IBX0=$O(^TMP("IBJDI1",$J,IBDIV,IBX0)) Q:IBX0=""  D  Q:IBQ
"RTN","IBJDI1",92,0)
 .D HDET Q:IBQ
"RTN","IBJDI1",93,0)
 .S IBX1="" F  S IBX1=$O(^TMP("IBJDI1",$J,IBDIV,IBX0,IBX1)) Q:IBX1=""  S IBX=^(IBX1) D  Q:IBQ
"RTN","IBJDI1",94,0)
 ..I $Y>(IOSL-2) D PAUSE Q:IBQ  D HDET Q:IBQ
"RTN","IBJDI1",95,0)
 ..;
"RTN","IBJDI1",96,0)
 ..; - Print detailed line with primary elig. or inconsistency.
"RTN","IBJDI1",97,0)
 ..S IBIN=$P(IBX,U,4),IBFL=0 D DETP(+IBIN)
"RTN","IBJDI1",98,0)
 ..;
"RTN","IBJDI1",99,0)
 ..; - Print remaining inconsistencies.
"RTN","IBJDI1",100,0)
 ..I $P(IBIN,";",2) D
"RTN","IBJDI1",101,0)
 ...F I=2:1:$L(IBIN,";") S Y=$P(IBIN,";",I) I Y D  Q:IBQ
"RTN","IBJDI1",102,0)
 ....I $Y>(IOSL-2) D PAUSE Q:IBQ  D HDET,DETP(Y) Q
"RTN","IBJDI1",103,0)
 ....W !?70,$E($P($G(^DGIN(38.6,+Y,0)),U),1,20)
"RTN","IBJDI1",104,0)
 ;
"RTN","IBJDI1",105,0)
DETQ I 'IBQ D PAUSE
"RTN","IBJDI1",106,0)
 Q
"RTN","IBJDI1",107,0)
 ;
"RTN","IBJDI1",108,0)
DETP(X) ; - Print detailed line with a primary elig. or inconsistency.
"RTN","IBJDI1",109,0)
 W !,$P(IBX1,"@@"),?27,$P(IBX,U),?39,$P(IBX,U,2),?56,$P(IBX,U,3)
"RTN","IBJDI1",110,0)
 I IBX0,'IBFL W ?70,$E($P($G(^DIC(8,X,0)),U),1,20),"*" S IBFL=1
"RTN","IBJDI1",111,0)
 E  W ?70,$E($P($G(^DGIN(38.6,X,0)),U),1,20)
"RTN","IBJDI1",112,0)
 W ?92,$P(IBX,U,5)
"RTN","IBJDI1",113,0)
 S IBNEXT=$O(^TMP($J,"SDAMA301",$P(IBX1,"@@",2),0)),IBNEXT=$S('IBNEXT:$P(IBX,U,6),'$P(IBX,U,6):IBNEXT,IBNEXT<$P(IBX,U,6):IBNEXT,1:$P(IBX,U,6))
"RTN","IBJDI1",114,0)
 W ?114,$$DAT1^IBOUTL(IBNEXT),?124,$P(IBX,U,7)
"RTN","IBJDI1",115,0)
 Q
"RTN","IBJDI1",116,0)
 ;
"RTN","IBJDI1",117,0)
HDET ; - Write the detail report header.
"RTN","IBJDI1",118,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBJDI1",119,0)
 S IBPAG=IBPAG+1
"RTN","IBJDI1",120,0)
 I '$D(^TMP("IBJDI1",$J,IBDIV)) S (IBNVET,IBX0)=""
"RTN","IBJDI1",121,0)
 E  S IBNVET=$S(IBX0:"NON-VETERAN",1:"VETERAN")_" "
"RTN","IBJDI1",122,0)
 W !,"Percentage of Completed Registrations",$S(IBDIV:" for "_$P($G(^DG(40.8,IBDIV,0)),U),1:"")
"RTN","IBJDI1",123,0)
 W ?85,"Run Date: ",IBRUN,?123,"Page: ",$J(IBPAG,3)
"RTN","IBJDI1",124,0)
 W !,"Detailed Report of Incomplete ",IBNVET,"Registrations for the Period "_$$DAT1^IBOUTL(IBBDT)_" to "_$$DAT1^IBOUTL(IBEDT)," (*=Had inpat. care, +=Had no treatment)",!!
"RTN","IBJDI1",125,0)
 W:IBX0 ?70,"Primary Eligibility*" W ?116,"Next    Date of"
"RTN","IBJDI1",126,0)
 W !,"Patient",?27,"SSN",?39,"Phone Number",?56,"Type of Care"
"RTN","IBJDI1",127,0)
 W ?70,"Inconsistencies",?92,"Registered By",?114,"Appt/Adm   Death"
"RTN","IBJDI1",128,0)
 W !,$$DASH(IOM)
"RTN","IBJDI1",129,0)
 S IBQ=$$STOP^IBOUTL("Completed Registrations Report")
"RTN","IBJDI1",130,0)
 Q
"RTN","IBJDI1",131,0)
 ;
"RTN","IBJDI1",132,0)
SUM ; - Print the summary report.
"RTN","IBJDI1",133,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBJDI1",134,0)
 W !!?21,"PERCENTAGE OF COMPLETED REGISTRATIONS",!
"RTN","IBJDI1",135,0)
 I IBDIV D
"RTN","IBJDI1",136,0)
 .S X=$P($G(^DG(40.8,IBDIV,0)),U) W ?(61-$L(X))\2,"SUMMARY REPORT for ",X
"RTN","IBJDI1",137,0)
 E  W ?33,"SUMMARY REPORT"
"RTN","IBJDI1",138,0)
 W !!?23,"For the Period ",$$DAT1^IBOUTL(IBBDT)," - ",$$DAT1^IBOUTL(IBEDT)
"RTN","IBJDI1",139,0)
 W !!?24,"Run Date: ",IBRUN,!?8,$$DASH(64)
"RTN","IBJDI1",140,0)
 ;
"RTN","IBJDI1",141,0)
 S IBPER(1)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"TR")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI1",142,0)
 S IBPER(2)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"NOTR")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI1",143,0)
 S IBPER(3)=$J($S('IB(IBDIV,"TR"):0,1:IB(IBDIV,"COM")/IB(IBDIV,"TR")*100),0,2)
"RTN","IBJDI1",144,0)
 S IBPER(4)=$J($S('IB(IBDIV,"COM"):0,1:IB(IBDIV,"VETC")/IB(IBDIV,"COM")*100),0,2)
"RTN","IBJDI1",145,0)
 S IBPER(5)=$J($S('IB(IBDIV,"COM"):0,1:IB(IBDIV,"NVETC")/IB(IBDIV,"COM")*100),0,2)
"RTN","IBJDI1",146,0)
 S IBPER(6)=$J($S('IB(IBDIV,"TR"):0,1:IB(IBDIV,"INC")/IB(IBDIV,"TR")*100),0,2)
"RTN","IBJDI1",147,0)
 S IBPER(7)=$J($S('IB(IBDIV,"INC"):0,1:IB(IBDIV,"VETI")/IB(IBDIV,"INC")*100),0,2)
"RTN","IBJDI1",148,0)
 S IBPER(8)=$J($S('IB(IBDIV,"INC"):0,1:IB(IBDIV,"NVETI")/IB(IBDIV,"INC")*100),0,2)
"RTN","IBJDI1",149,0)
 S IBPER(9)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"DEC")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI1",150,0)
 W !?29,"Number of Registrations:",?54,$J(IB(IBDIV,"TOT"),6)
"RTN","IBJDI1",151,0)
 W !?14,"Number of Regs with Treatment Rendered:",?54,$J(IB(IBDIV,"TR"),6),?61,"(",IBPER(1),"%)"
"RTN","IBJDI1",152,0)
 W !?11,"Number of Regs with No Treatment Rendered:",?54,$J(IB(IBDIV,"NOTR"),6),?61,"(",IBPER(2),"%)",!?8,$$DASH(64)
"RTN","IBJDI1",153,0)
 W !?20,"Number of Complete Registrations:",?54,$J(IB(IBDIV,"COM"),6),?61,"(",IBPER(3),"%)"
"RTN","IBJDI1",154,0)
 W !?21,"Number of Complete Veteran Regs:",?54,$J(IB(IBDIV,"VETC"),6),?61,"(",IBPER(4),"%)"
"RTN","IBJDI1",155,0)
 W !?17,"Number of Complete Non-Veteran Regs:",?54,$J(IB(IBDIV,"NVETC"),6),?61,"(",IBPER(5),"%)",!?8,$$DASH(64)
"RTN","IBJDI1",156,0)
 W !?18,"Number of Incomplete Registrations:",?54,$J(IB(IBDIV,"INC"),6),?61,"(",IBPER(6),"%)"
"RTN","IBJDI1",157,0)
 W !?19,"Number of Incomplete Veteran Regs:",?54,$J(IB(IBDIV,"VETI"),6),?61,"(",IBPER(7),"%)"
"RTN","IBJDI1",158,0)
 W !?15,"Number of Incomplete Non-Veteran Regs:",?54,$J(IB(IBDIV,"NVETI"),6),?61,"(",IBPER(8),"%)",!?8,$$DASH(64)
"RTN","IBJDI1",159,0)
 W !?25,"Number of Deceased Patients:",?54,$J(IB(IBDIV,"DEC"),6),?61,"(",IBPER(9),"%)"
"RTN","IBJDI1",160,0)
 Q
"RTN","IBJDI1",161,0)
 ;
"RTN","IBJDI1",162,0)
DASH(X) ; - Return a dashed line.
"RTN","IBJDI1",163,0)
 Q $TR($J("",X)," ","=")
"RTN","IBJDI1",164,0)
 ;
"RTN","IBJDI1",165,0)
PAUSE ; - Page break.
"RTN","IBJDI1",166,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDI1",167,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDI1",168,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDI1",169,0)
 S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
"RTN","IBJDI1",170,0)
 Q
"RTN","IBJDI1",171,0)
 ;
"RTN","IBJDI1",172,0)
TESTP(DFN) ; - Check if this is a test patient.
"RTN","IBJDI1",173,0)
 ;  Input: DFN = Pointer to the patient in file #2
"RTN","IBJDI1",174,0)
 ; Output:   1 = Test patient
"RTN","IBJDI1",175,0)
 ;           0 = Actual patient
"RTN","IBJDI1",176,0)
 N X
"RTN","IBJDI1",177,0)
 S X=$G(^DPT(DFN,0))
"RTN","IBJDI1",178,0)
 I $P(X,U)="" G TSTPQ
"RTN","IBJDI1",179,0)
 I $P(X,U,9)["00000"!($P(X,U,9)["123456") G TSTPQ
"RTN","IBJDI1",180,0)
 ;
"RTN","IBJDI1",181,0)
 S Y=0 Q Y
"RTN","IBJDI1",182,0)
TSTPQ S Y=1 Q Y
"RTN","IBJDI1",183,0)
 ;
"RTN","IBJDI1",184,0)
SSN(X) ; - Format the SSN.
"RTN","IBJDI1",185,0)
 Q $S(X]"":$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10),1:"")
"RTN","IBJDI1",186,0)
 ;
"RTN","IBJDI1",187,0)
DHLP ; - 'Sort by division' prompt.
"RTN","IBJDI1",188,0)
 W !!,"Select: '<CR>' to print the trend report without regard to"
"RTN","IBJDI1",189,0)
 W !?15,"division"
"RTN","IBJDI1",190,0)
 W !?11,"'Y' to select those divisions for which a separate"
"RTN","IBJDI1",191,0)
 W !?15,"trend report should be created",!?11,"'^' to quit"
"RTN","IBJDI1",192,0)
 Q
"RTN","IBJDI11")
0^5^B14479929
"RTN","IBJDI11",1,0)
IBJDI11 ;ALB/CPM - PERCENTAGE OF COMPLETED REGISTRATIONS (CONT'D) ;16-DEC-96
"RTN","IBJDI11",2,0)
 ;;2.0;INTEGRATED BILLING;**100,118,128,249**;21-MAR-94
"RTN","IBJDI11",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJDI11",4,0)
 ;
"RTN","IBJDI11",5,0)
EN ; - Entry point from IBJDI1.
"RTN","IBJDI11",6,0)
 ;
"RTN","IBJDI11",7,0)
 ; - Get patient's most recent registration.
"RTN","IBJDI11",8,0)
 S IBREG=$G(^DPT(DFN,"DIS",+$O(^DPT(DFN,"DIS",0)),0)) I 'IBREG G ENQ
"RTN","IBJDI11",9,0)
 ;
"RTN","IBJDI11",10,0)
 ; - Get division, if necessary.
"RTN","IBJDI11",11,0)
 I 'IBSORT S IBDIV=0
"RTN","IBJDI11",12,0)
 E  S IBDIV=+$P(IBREG,U,4) I 'IBDIV S IBDIV=+$$PRIM^VASITE()
"RTN","IBJDI11",13,0)
 I IBSORT,'VAUTD,'$D(VAUTD(IBDIV)) Q  ; Not a selected division.
"RTN","IBJDI11",14,0)
 ;
"RTN","IBJDI11",15,0)
 ; - Set 'total registrations' accumulator.
"RTN","IBJDI11",16,0)
 S IB(IBDIV,"TOT")=IB(IBDIV,"TOT")+1
"RTN","IBJDI11",17,0)
 ;
"RTN","IBJDI11",18,0)
 ; - Check if patient is a non-veteran.
"RTN","IBJDI11",19,0)
 D ELIG^VADPT S IBNVET=$S('VAEL(4):1,1:0)
"RTN","IBJDI11",20,0)
 ;
"RTN","IBJDI11",21,0)
 ; - Check if patient is deceased; get DOD.
"RTN","IBJDI11",22,0)
 I +$G(^DPT(DFN,.35)) D
"RTN","IBJDI11",23,0)
 .S IBDOD=$$DAT1^IBOUTL(+^DPT(DFN,.35)\1),IB(IBDIV,"DEC")=IB(IBDIV,"DEC")+1
"RTN","IBJDI11",24,0)
 E  S IBDOD=""
"RTN","IBJDI11",25,0)
 ;
"RTN","IBJDI11",26,0)
 ; - Check if patient is/was getting inpatient care.
"RTN","IBJDI11",27,0)
 S IBINPT=""
"RTN","IBJDI11",28,0)
 I $$INPT^IBAMTS1(DFN,IBEDT) S IBINPT="*"
"RTN","IBJDI11",29,0)
 E  S IBX=$O(^DGPM("APTT3",DFN,(IBBDT-.01)))\1 I IBX,IBX<IBEDT S IBINPT="*"
"RTN","IBJDI11",30,0)
 ;
"RTN","IBJDI11",31,0)
 ; - Check for 'no billable treatment' dispositions.
"RTN","IBJDI11",32,0)
 I $$NOTR(DFN,IBBDT,IBEDT,0) S IBNOTR="+",IB(IBDIV,"NOTR")=IB(IBDIV,"NOTR")+1
"RTN","IBJDI11",33,0)
 E  S IBNOTR="",IB(IBDIV,"TR")=IB(IBDIV,"TR")+1
"RTN","IBJDI11",34,0)
 ;
"RTN","IBJDI11",35,0)
 ; - Set accumulators for the breakdown of the total number.
"RTN","IBJDI11",36,0)
 D INC(DFN,.IBIN)
"RTN","IBJDI11",37,0)
 I IBIN]"" D:IBNOTR=""  G EN1
"RTN","IBJDI11",38,0)
 .I IBNVET D
"RTN","IBJDI11",39,0)
 ..S IBIN=+$P(IBREG,U,13)_";"_IBIN,IB(IBDIV,"NVETI")=IB(IBDIV,"NVETI")+1
"RTN","IBJDI11",40,0)
 .E  S IB(IBDIV,"VETI")=IB(IBDIV,"VETI")+1
"RTN","IBJDI11",41,0)
 .S IB(IBDIV,"INC")=IB(IBDIV,"INC")+1
"RTN","IBJDI11",42,0)
 I IBNOTR="" D
"RTN","IBJDI11",43,0)
 .S IB(IBDIV,"COM")=IB(IBDIV,"COM")+1
"RTN","IBJDI11",44,0)
 .I IBNVET S IB(IBDIV,"NVETC")=IB(IBDIV,"NVETC")+1
"RTN","IBJDI11",45,0)
 .E  S IB(IBDIV,"VETC")=IB(IBDIV,"VETC")+1
"RTN","IBJDI11",46,0)
 ;
"RTN","IBJDI11",47,0)
EN1 I IBRPT="S"!(IBIN="") G ENQ ; Summary info only/No inconsistencies.
"RTN","IBJDI11",48,0)
 ;
"RTN","IBJDI11",49,0)
 ; - Get patient's type of care.
"RTN","IBJDI11",50,0)
 S X=+$P(IBREG,U,3),IBTOC=$S(X=1:"HOSPITAL",X=2:"DOMICILIARY",X=3:"OPT. MEDICAL",X=4:"OPT. DENTAL",X=5:"N.H. CARE",1:"")
"RTN","IBJDI11",51,0)
 ;
"RTN","IBJDI11",52,0)
 ; - Get next scheduled treatment date.
"RTN","IBJDI11",53,0)
 S IBNEXT=""
"RTN","IBJDI11",54,0)
 I $$GETICN^MPIF001(DFN)>0 S ^TMP("IBDFN",$J,DFN)="" ; for future look up scheduled appts.
"RTN","IBJDI11",55,0)
 S X=0 F  S X=$O(^DGS(41.1,"B",DFN,X)) Q:'X  D  ;   Scheduled adm.
"RTN","IBJDI11",56,0)
 .S X1=$G(^DGS(41.1,X,0)),X2=$P(X1,U,2)\1
"RTN","IBJDI11",57,0)
 .I X2<DT Q  ;       Must be old scheduled admission.
"RTN","IBJDI11",58,0)
 .I $P(X1,U,13) Q  ; Scheduled admission is cancelled.
"RTN","IBJDI11",59,0)
 .I $P(X1,U,17) Q  ; Patient already admitted.
"RTN","IBJDI11",60,0)
 .I X2>IBNEXT S IBNEXT=X2
"RTN","IBJDI11",61,0)
 ;
"RTN","IBJDI11",62,0)
 ; - Save detail information.
"RTN","IBJDI11",63,0)
 S ^TMP("IBJDI1",$J,IBDIV,IBNVET,$E($P(IBDN,U),1,25)_IBINPT_IBNOTR_"@@"_DFN)=$P(IBDN,U,9)_U_$E($P($G(^DPT(DFN,.13)),U),1,15)_U_IBTOC_U_IBIN_U_$E($P($G(^VA(200,+$P(IBREG,U,9),0)),U),1,20)_U_IBNEXT_U_IBDOD
"RTN","IBJDI11",64,0)
 ;
"RTN","IBJDI11",65,0)
ENQ K VA,VAEL,VAERR
"RTN","IBJDI11",66,0)
 Q
"RTN","IBJDI11",67,0)
 ;
"RTN","IBJDI11",68,0)
NOTR(DFN,IBBDT,IBEDT,Z) ; - Check for patient's 'no treatment' dispositions.
"RTN","IBJDI11",69,0)
 ;  Input:   DFN = Patient IEN
"RTN","IBJDI11",70,0)
 ;         IBBDT = Start date for search
"RTN","IBJDI11",71,0)
 ;         IBEDT = Ending date for search
"RTN","IBJDI11",72,0)
 ;             Z = 1-Look for 'no treatment' dispositions only
"RTN","IBJDI11",73,0)
 ;                 0-Also look for C&P/emply/collat/non-ct clinic visits
"RTN","IBJDI11",74,0)
 ; Output: 0 = Patient had no 'no treatment' dispositions or patient
"RTN","IBJDI11",75,0)
 ;             had treatment within selected date range
"RTN","IBJDI11",76,0)
 ;         1 = Patient had at least one 'no treatment' disposition or
"RTN","IBJDI11",77,0)
 ;             C&P exam/employee/collateral/non-count clinic visit
"RTN","IBJDI11",78,0)
 ;
"RTN","IBJDI11",79,0)
 N IBDIS,VAROOT,VARP,X,X1,X2,Y
"RTN","IBJDI11",80,0)
 S VAROOT="IBDIS",VARP("F")=IBBDT,VARP("T")=IBEDT D REG^VADPT
"RTN","IBJDI11",81,0)
 S Y=1 I '$O(IBDIS(0)) G NTQ
"RTN","IBJDI11",82,0)
 S (X,X1)=0 F  S X=$O(IBDIS(X)) Q:X=""  D  I X1 S Y=0 Q
"RTN","IBJDI11",83,0)
 .S X2=+$P($G(^DPT(DFN,"DIS",9999999-$P(IBDIS(X,"I"),U,6),0)),U,18)
"RTN","IBJDI11",84,0)
 .S X2=$G(^SCE(X2,0))
"RTN","IBJDI11",85,0)
 .I $P(X2,U,8)'=2,"^CANCEL WITHOUT EXAM^NO CARE OR TREATMENT REQUIRED^"[("^"_$P(IBDIS(X,"E"),U,7)_"^") Q
"RTN","IBJDI11",86,0)
 .I 'Z,"^1^4^7^"[("^"_+$P(X2,U,10)_"^") Q  ;    C&P/collat/emply visit.
"RTN","IBJDI11",87,0)
 .I 'Z,$P($G(^SC(+$P(X2,U,4),0)),U,17)="Y" Q  ; Non-count clinic.
"RTN","IBJDI11",88,0)
 .S X1=1 ; Patient had treatment.
"RTN","IBJDI11",89,0)
 ;
"RTN","IBJDI11",90,0)
NTQ Q Y
"RTN","IBJDI11",91,0)
 ;
"RTN","IBJDI11",92,0)
INC(DFN,X) ; - Find a patient's registration inconsistencies.
"RTN","IBJDI11",93,0)
 ;  Input: DFN = Pointer to the patient in file #2
"RTN","IBJDI11",94,0)
 ; Output:   X = Passed by reference - the patient's
"RTN","IBJDI11",95,0)
 ;               registration inconsistencies in the form
"RTN","IBJDI11",96,0)
 ;
"RTN","IBJDI11",97,0)
 ;               n;n1;n2;n3...
"RTN","IBJDI11",98,0)
 ;
"RTN","IBJDI11",99,0)
 ;               where n is a pointer to file #38.6.
"RTN","IBJDI11",100,0)
 N I S X=""
"RTN","IBJDI11",101,0)
 S I=0 F  S I=$O(^DGIN(38.5,DFN,"I",I)) Q:'I  S X=X_I_";"
"RTN","IBJDI11",102,0)
 I X]"" S X=$E(X,1,$L(X)-1)
"RTN","IBJDI11",103,0)
 Q
"RTN","IBJDI2")
0^6^B11468572
"RTN","IBJDI2",1,0)
IBJDI2 ;ALB/CPM - VETERANS WITH UNVERIFIED ELIGIBILITY ;16-DEC-96
"RTN","IBJDI2",2,0)
 ;;2.0;INTEGRATED BILLING;**69,91,98,100,118,249**;21-MAR-94
"RTN","IBJDI2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJDI2",4,0)
 ;
"RTN","IBJDI2",5,0)
EN ; - Option entry point.
"RTN","IBJDI2",6,0)
 ;
"RTN","IBJDI2",7,0)
 W !!,"This report measures the number of patients who have been treated at the"
"RTN","IBJDI2",8,0)
 W !,"facility but whose eligibility has not been verified. This report will"
"RTN","IBJDI2",9,0)
 W !,"also list patients with verified eligibility for at least 2 years, if any.",!
"RTN","IBJDI2",10,0)
 ;
"RTN","IBJDI2",11,0)
DATE D DATE^IBOUTL I IBBDT=""!(IBEDT="") G ENQ
"RTN","IBJDI2",12,0)
 ;
"RTN","IBJDI2",13,0)
 ; - Sort by division?
"RTN","IBJDI2",14,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("?")="^D DHLP^IBJDI2"
"RTN","IBJDI2",15,0)
 S DIR("A")="Do you wish to sort this report by division" W !
"RTN","IBJDI2",16,0)
 D ^DIR S IBSORT=+Y I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDI2",17,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDI2",18,0)
 ;
"RTN","IBJDI2",19,0)
 I IBSORT D PSDR^IBODIV G:Y<0 ENQ ; Select division(s).
"RTN","IBJDI2",20,0)
 ;
"RTN","IBJDI2",21,0)
 ; - Select a detailed or summary report.
"RTN","IBJDI2",22,0)
 D DS^IBJD I IBRPT["^" G ENQ
"RTN","IBJDI2",23,0)
 ;
"RTN","IBJDI2",24,0)
 I IBRPT="D" W !!,"You will need a 132 column printer for this report!"
"RTN","IBJDI2",25,0)
 E  W !!,"This report only requires an 80 column printer."
"RTN","IBJDI2",26,0)
 ;
"RTN","IBJDI2",27,0)
 W !!,"Note: This report may take a while to run."
"RTN","IBJDI2",28,0)
 W !?6,"You should queue this report to run after normal business hours.",!
"RTN","IBJDI2",29,0)
 ;
"RTN","IBJDI2",30,0)
 ; - Select a device.
"RTN","IBJDI2",31,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBJDI2",32,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBJDI2",33,0)
 .S ZTRTN="DQ^IBJDI2",ZTDESC="IB - UNVERIFIED ELIGIBILITY"
"RTN","IBJDI2",34,0)
 .F I="IB*","VAUTD","VAUTD(" S ZTSAVE(I)=""
"RTN","IBJDI2",35,0)
 .D ^%ZTLOAD
"RTN","IBJDI2",36,0)
 .W !!,$S($D(ZTSK):"This job has been queued. The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBJDI2",37,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBJDI2",38,0)
 ;
"RTN","IBJDI2",39,0)
 U IO
"RTN","IBJDI2",40,0)
 ;
"RTN","IBJDI2",41,0)
DQ ; - Tasked entry point.
"RTN","IBJDI2",42,0)
 ;
"RTN","IBJDI2",43,0)
 I $G(IBXTRACT) D E^IBJDE(2,1) ; Change extract status.
"RTN","IBJDI2",44,0)
 ;
"RTN","IBJDI2",45,0)
 N IBQUERY,IBQUERY1
"RTN","IBJDI2",46,0)
 K IB,^TMP("IBJDI21",$J),^TMP("IBJDI22",$J),^TMP("IBJDI23",$J)
"RTN","IBJDI2",47,0)
 K ^TMP("IBDFN",$J),^TMP($J,"SDAMA301")
"RTN","IBJDI2",48,0)
 S IBC="DEC^NOT^PEN^TOT^VER^VERO",IBQ=0
"RTN","IBJDI2",49,0)
 I IBSORT D  G PROC
"RTN","IBJDI2",50,0)
 .S I=0 F  S I=$S(VAUTD:$O(^DG(40.8,I)),1:$O(VAUTD(I))) Q:'I  D
"RTN","IBJDI2",51,0)
 ..S J=$P($G(^DG(40.8,I,0)),U) F K=1:1:6 S IB(J,$P(IBC,U,K))=0
"RTN","IBJDI2",52,0)
 S IBDIV="ALL" F I=1:1:6 S IB("ALL",$P(IBC,U,I))=0
"RTN","IBJDI2",53,0)
 ;
"RTN","IBJDI2",54,0)
PROC D ^IBJDI21 ; Process and print reports.
"RTN","IBJDI2",55,0)
 ;
"RTN","IBJDI2",56,0)
ENQ K ^TMP("IBJDI21",$J),^TMP("IBJDI22",$J),^TMP("IBJDI23",$J)
"RTN","IBJDI2",57,0)
 K ^TMP("IBDFN",$J),^TMP($J,"SDAMA301")
"RTN","IBJDI2",58,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDI2",59,0)
 ;
"RTN","IBJDI2",60,0)
 D ^%ZISC
"RTN","IBJDI2",61,0)
ENQ1 K IB,IBQ,IBBDT,IBEDT,IBRPT,IBD,IBDOD,IBDN,IBPAG,IBRUN,IBX,IBXX,IBPERV
"RTN","IBJDI2",62,0)
 K IBESD,IBPM,IBPMD,IBOE,IBOED,IBES,IBLT,IBNUMO,IBNUMD,IBNEXT,IBDT,IBDTF
"RTN","IBJDI2",63,0)
 K IBC,IBN,IBDIV,IBSORT,IBPERD,IBPERO,IBPERP,VAUTD,DFN,POP,I,J,K
"RTN","IBJDI2",64,0)
 K X,X1,X2,Y,%,%ZIS,DIR,DIROUT,DTOUT,DUOUT,DIRUT,ZTDESC,ZTRTN,ZTSAVE
"RTN","IBJDI2",65,0)
 Q
"RTN","IBJDI2",66,0)
 ;
"RTN","IBJDI2",67,0)
DHLP ; - 'Sort by division' prompt.
"RTN","IBJDI2",68,0)
 W !!,"Select: '<CR>' to print the trend report without regard to"
"RTN","IBJDI2",69,0)
 W !?15,"division"
"RTN","IBJDI2",70,0)
 W !?11,"'Y' to select those divisions for which a separate"
"RTN","IBJDI2",71,0)
 W !?15,"trend report should be created",!?11,"'^' to quit"
"RTN","IBJDI2",72,0)
 Q
"RTN","IBJDI21")
0^7^B68666244
"RTN","IBJDI21",1,0)
IBJDI21 ;ALB/CPM - VETERANS WITH UNVERIFIED ELIGIBILITY (CONT'D) ;16-DEC-96
"RTN","IBJDI21",2,0)
 ;;2.0;INTEGRATED BILLING;**118,249**;21-MAR-94
"RTN","IBJDI21",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJDI21",4,0)
 ;
"RTN","IBJDI21",5,0)
 ; - Find inpatients treated within the user-specified date range.
"RTN","IBJDI21",6,0)
 S IBD=IBBDT-.01 F  S IBD=$O(^DGPM("ATT3",IBD)) Q:'IBD!(IBD\1>IBEDT)  D  Q:IBQ
"RTN","IBJDI21",7,0)
 .S IBPM=0 F  S IBPM=$O(^DGPM("ATT3",IBD,IBPM)) Q:'IBPM  D  Q:IBQ
"RTN","IBJDI21",8,0)
 ..I IBPM#100=0 Q:$$STOP(.IBQ,"Unverified Eligibility Report")
"RTN","IBJDI21",9,0)
 ..S IBPMD=$G(^DGPM(IBPM,0)) Q:'IBPMD
"RTN","IBJDI21",10,0)
 ..I IBSORT S IBDIV=$$DIV(1,+$P(IBPMD,U,6)) Q:'$D(IB(IBDIV))
"RTN","IBJDI21",11,0)
 ..S DFN=+$P(IBPMD,U,3) Q:'DFN
"RTN","IBJDI21",12,0)
 ..;
"RTN","IBJDI21",13,0)
 ..; - Process patient.
"RTN","IBJDI21",14,0)
 ..I '$D(^TMP("IBJDI21",$J,DFN)) D PROC(DFN,"*",.IBQUERY)
"RTN","IBJDI21",15,0)
 ;
"RTN","IBJDI21",16,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBJDI21",17,0)
 I IBQ G ENQ
"RTN","IBJDI21",18,0)
 ;
"RTN","IBJDI21",19,0)
 ; - Find outpatients treated within the user-specified date range.
"RTN","IBJDI21",20,0)
 D OUTPT("",IBBDT,IBEDT,"S:IBQ SDSTOP=1 I 'IBQ,$$ENCHK^IBJDI5(Y0) D ENC^IBJDI21(Y0,.IBQUERY1)","Unverified Eligibility Report",.IBQ,"IBJDI21",.IBQUERY)
"RTN","IBJDI21",21,0)
 D CLOSE^IBSDU(.IBQUERY),CLOSE^IBSDU(.IBQUERY1)
"RTN","IBJDI21",22,0)
 ;
"RTN","IBJDI21",23,0)
 I IBQ G ENQ
"RTN","IBJDI21",24,0)
 ;
"RTN","IBJDI21",25,0)
 ; - Extract summary data.
"RTN","IBJDI21",26,0)
 I $G(IBXTRACT) D  G ENQ
"RTN","IBJDI21",27,0)
 .F X="DEC","NOT","PEN","TOT","VER","VERO" S IB(X)=$G(IB("ALL",X))
"RTN","IBJDI21",28,0)
 .D E^IBJDE(2,0)
"RTN","IBJDI21",29,0)
 ;
"RTN","IBJDI21",30,0)
 ; - If detail, look up next appt
"RTN","IBJDI21",31,0)
 I IBRPT="D" S IBARRAY("SORT")="P",IBARRAY("FLDS")=1,IBARRAY(1)=$$NOW^XLFDT_";9999999",IBARRAY(4)="^TMP(""IBDFN"",$J,",IBCOUNT=$$SDAPI^SDAMA301(.IBARRAY)
"RTN","IBJDI21",32,0)
 ;
"RTN","IBJDI21",33,0)
 ; - Print the reports.
"RTN","IBJDI21",34,0)
 S IBQ=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%)
"RTN","IBJDI21",35,0)
 S IBDIV="" F  S IBDIV=$O(IB(IBDIV)) Q:IBDIV=""  D  Q:IBQ
"RTN","IBJDI21",36,0)
 .S IBPAG=0 D:IBRPT="D" DET I 'IBQ D SUM,PAUSE
"RTN","IBJDI21",37,0)
 ;
"RTN","IBJDI21",38,0)
ENQ Q
"RTN","IBJDI21",39,0)
 ;
"RTN","IBJDI21",40,0)
OUTPT(DFN,IBBDT,IBEDT,IBCBK,IBMSG,IBQ,IBSUBSCR,IBQUERY,IBDIR) ;
"RTN","IBJDI21",41,0)
 ; Input:   DFN = IEN of patient if using PATIENT/DATE index, otherwise,
"RTN","IBJDI21",42,0)
 ;                if null or 0, DATE/TIME index will be used
"RTN","IBJDI21",43,0)
 ;        IBCBK = The MUMPS code to execute when valid enctr found
"RTN","IBJDI21",44,0)
 ;        IBBDT/IBEDT = The start/end dates
"RTN","IBJDI21",45,0)
 ;        IBMSG = The text to send to STOP PROCESSING CALL (if null, no
"RTN","IBJDI21",46,0)
 ;                call made)
"RTN","IBJDI21",47,0)
 ;          IBQ = Flag that says whether or not the process was stopped
"RTN","IBJDI21",48,0)
 ;                by user
"RTN","IBJDI21",49,0)
 ;      IBQUERY = The # of the QUERY OBJECT to be used to extract outpt
"RTN","IBJDI21",50,0)
 ;                visits
"RTN","IBJDI21",51,0)
 ;        IBDIR = Null to look forward, 'B' to look backward thru file
"RTN","IBJDI21",52,0)
 ;
"RTN","IBJDI21",53,0)
 N IBVAL,IBFILTER
"RTN","IBJDI21",54,0)
 S IBVAL("BDT")=IBBDT,IBVAL("EDT")=IBEDT_".99" S:$G(DFN) IBVAL("DFN")=DFN
"RTN","IBJDI21",55,0)
 ;
"RTN","IBJDI21",56,0)
 ; - Look at parent encounters, completely checked out, check user
"RTN","IBJDI21",57,0)
 ;   requested to quit, process each pt only once if IBSUBSCR'=null
"RTN","IBJDI21",58,0)
 S IBFILTER=""
"RTN","IBJDI21",59,0)
 S IBCBK="I "_$S($G(IBSUBSCR)'="":"'$D(^TMP(IBSUBSCR,$J,+$P(Y0,U,2))),",1:"")_"'$P(Y0,U,6),$P(Y0,U,7),$S((Y#100)'=0:1,$G(IBMSG)="""":1,1:'$$STOP^IBJDI21(.IBQ,IBMSG))"_" "_IBCBK
"RTN","IBJDI21",60,0)
 S IBDIR=$S($G(IBDIR)="":"",1:"BACKWARD")
"RTN","IBJDI21",61,0)
 D SCAN^IBSDU($S($G(DFN):"PATIENT/DATE",1:"DATE/TIME"),.IBVAL,IBFILTER,IBCBK,0,.IBQUERY,IBDIR) K ^TMP("DIERR",$J)
"RTN","IBJDI21",62,0)
 Q
"RTN","IBJDI21",63,0)
 ;
"RTN","IBJDI21",64,0)
STOP(IBQ,MSG) ; - Check if user wants to stop.
"RTN","IBJDI21",65,0)
 N Y,Y0 S IBQ=$$STOP^IBOUTL(MSG)
"RTN","IBJDI21",66,0)
 Q IBQ
"RTN","IBJDI21",67,0)
 ;
"RTN","IBJDI21",68,0)
ENC(IBOED,IBQUERY1) ; - Encounter extract for all patients loop.
"RTN","IBJDI21",69,0)
 ; IBQUERY1 = the # of the QUERY to use to do the extract.
"RTN","IBJDI21",70,0)
 ; Pre-set variables IB array, IBSORT are required.
"RTN","IBJDI21",71,0)
 ;
"RTN","IBJDI21",72,0)
 I IBSORT S IBDIV=$$DIV(0,+$P(IBOED,U,11)) Q:'$D(IB(IBDIV))
"RTN","IBJDI21",73,0)
 D PROC(+$P(IBOED,U,2),"",.IBQUERY1) ; Process patient.
"RTN","IBJDI21",74,0)
 Q
"RTN","IBJDI21",75,0)
 ;
"RTN","IBJDI21",76,0)
PROC(DFN,IBIPC,IBQUERY) ; - Process each specific patient.
"RTN","IBJDI21",77,0)
 ; Input:     DFN = Pointer to the patient in file #2
"RTN","IBJDI21",78,0)
 ;          IBIPC = Inpatient treatment marker
"RTN","IBJDI21",79,0)
 ;                  ("*"=Had inpat. treatment, null=No inpat. treatment)
"RTN","IBJDI21",80,0)
 ;        IBQUERY = The # of the QUERY OBJECT to be used to extract
"RTN","IBJDI21",81,0)
 ;                  outpatient visits
"RTN","IBJDI21",82,0)
 ;
"RTN","IBJDI21",83,0)
 ; Pre-set variables IB array, IBDIV are required.
"RTN","IBJDI21",84,0)
 ;
"RTN","IBJDI21",85,0)
 I $$TESTP^IBJDI1(DFN) Q  ;      Test patient.
"RTN","IBJDI21",86,0)
 D ELIG^VADPT I 'VAEL(4) G PRCQ ; Patient is not a vet.
"RTN","IBJDI21",87,0)
 ;
"RTN","IBJDI21",88,0)
 ; - Set patient index and 'total' accumulator.
"RTN","IBJDI21",89,0)
 S ^TMP("IBJDI21",$J,DFN)="",IB(IBDIV,"TOT")=IB(IBDIV,"TOT")+1
"RTN","IBJDI21",90,0)
 ;
"RTN","IBJDI21",91,0)
 I $G(^DPT(DFN,.35)) S IB(IBDIV,"DEC")=IB(IBDIV,"DEC")+1 ; Deceased.
"RTN","IBJDI21",92,0)
 ;
"RTN","IBJDI21",93,0)
 ; - Elig. status is Verified, Pending, Re-pending, or null.
"RTN","IBJDI21",94,0)
 S IBES=$P(VAEL(8),U)
"RTN","IBJDI21",95,0)
 I IBES="V" D  G PRCS:X'<730,PRCQ
"RTN","IBJDI21",96,0)
 .S IB(IBDIV,"VER")=IB(IBDIV,"VER")+1
"RTN","IBJDI21",97,0)
 .S IBESD=+$P($G(^DPT(DFN,.361)),U,2),X1=DT,X2=IBESD D ^%DTC
"RTN","IBJDI21",98,0)
 .S:X'<730 IB(IBDIV,"VERO")=IB(IBDIV,"VERO")+1,^TMP("IBJDI23",$J,DFN)=" (on "_$$DAT1^IBOUTL(IBESD)_")"
"RTN","IBJDI21",99,0)
 I IBES="P"!(IBES="R") S IB(IBDIV,"PEN")=IB(IBDIV,"PEN")+1 G PRCS
"RTN","IBJDI21",100,0)
 S IB(IBDIV,"NOT")=IB(IBDIV,"NOT")+1
"RTN","IBJDI21",101,0)
 ;
"RTN","IBJDI21",102,0)
PRCS I IBRPT="D" D SET(.IBQUERY)
"RTN","IBJDI21",103,0)
 ;
"RTN","IBJDI21",104,0)
PRCQ K VA,VAERR,VAEL
"RTN","IBJDI21",105,0)
 Q
"RTN","IBJDI21",106,0)
 ;
"RTN","IBJDI21",107,0)
SET(IBQUERY) ; - Set up detailed information to appear on the report.
"RTN","IBJDI21",108,0)
 ; Working variable definitions:
"RTN","IBJDI21",109,0)
 ;    IBLT = Last treatment date
"RTN","IBJDI21",110,0)
 ;    IBDN = Zero node of Patient file entry
"RTN","IBJDI21",111,0)
 ;   IBDOD = Patient's date of death (if any)
"RTN","IBJDI21",112,0)
 ;  IBNUMO = No. outpatient visits in date range
"RTN","IBJDI21",113,0)
 ;  IBNUMD = No. discharges in date range
"RTN","IBJDI21",114,0)
 ;  IBNEXT = Next scheduled treatment date
"RTN","IBJDI21",115,0)
 ; IBQUERY = The # of the QUERY OBJECT to be used to extract outpatient
"RTN","IBJDI21",116,0)
 ;           visits
"RTN","IBJDI21",117,0)
 ;
"RTN","IBJDI21",118,0)
 S (IBNUMD,IBNUMO,IBLT)=0
"RTN","IBJDI21",119,0)
 ;
"RTN","IBJDI21",120,0)
 ; - Get # of discharges; look for LTD.
"RTN","IBJDI21",121,0)
 S IBDT=0 F  S IBDT=$O(^DGPM("ATID3",DFN,IBDT)) Q:'IBDT  D
"RTN","IBJDI21",122,0)
 .S IBDTF=9999999.9999999-IBDT\1
"RTN","IBJDI21",123,0)
 .S:IBDTF>IBLT IBLT=IBDTF I IBDTF<IBBDT!(IBDTF>IBEDT) Q
"RTN","IBJDI21",124,0)
 .S IBNUMD=IBNUMD+1
"RTN","IBJDI21",125,0)
 ;
"RTN","IBJDI21",126,0)
 ; - Get # of outpatient visits; look for LTD.
"RTN","IBJDI21",127,0)
 D OUTPT(DFN,IBBDT,9991231,"S IBDTF=Y0\1 S:IBDTF>IBLT IBLT=IBDTF I IBDTF'<IBBDT,IBDTF'>IBEDT S IBNUMO=IBNUMO+1","","","",.IBQUERY)
"RTN","IBJDI21",128,0)
 ;
"RTN","IBJDI21",129,0)
 ; - If current inpatient, set LTD to today.
"RTN","IBJDI21",130,0)
 I $G(^DPT(DFN,.105)) S IBLT=DT
"RTN","IBJDI21",131,0)
 ;
"RTN","IBJDI21",132,0)
 ; - Find next scheduled treatment date.
"RTN","IBJDI21",133,0)
 S IBNEXT=""
"RTN","IBJDI21",134,0)
 I $$GETICN^MPIF001(DFN) S ^TMP("IBDFN",$J,DFN)="" ;set tmp sched appt.
"RTN","IBJDI21",135,0)
 S X=0 F  S X=$O(^DGS(41.1,"B",DFN,X)) Q:'X  D  ;   Scheduled adm.
"RTN","IBJDI21",136,0)
 .S X1=$G(^DGS(41.1,X,0))
"RTN","IBJDI21",137,0)
 .S X2=$P(X1,U,2)\1
"RTN","IBJDI21",138,0)
 .I X2<DT Q  ;       Must be old scheduled admission.
"RTN","IBJDI21",139,0)
 .I $P(X1,U,13) Q  ; Sched adm is cancelled.
"RTN","IBJDI21",140,0)
 .I $P(X1,U,17) Q  ; Patient already admitted.
"RTN","IBJDI21",141,0)
 .I X2>IBNEXT S IBNEXT=X2
"RTN","IBJDI21",142,0)
 ;
"RTN","IBJDI21",143,0)
 S IBDN=$G(^DPT(DFN,0))
"RTN","IBJDI21",144,0)
 S IBDOD=$S(+$G(^DPT(DFN,.35)):$$DAT1^IBOUTL(+$G(^(.35))\1),1:"")
"RTN","IBJDI21",145,0)
 ;
"RTN","IBJDI21",146,0)
 S ^TMP("IBJDI22",$J,IBDIV,$E($P(IBDN,U),1,25)_IBIPC_"@@"_DFN)=$P(IBDN,U,9)_U_$E($P(VAEL(1),U,2),1,23)_U_IBES_U_IBNUMO_U_IBNUMD_U_IBLT_U_IBNEXT_U_IBDOD
"RTN","IBJDI21",147,0)
 Q
"RTN","IBJDI21",148,0)
 ;
"RTN","IBJDI21",149,0)
DIV(X,Y) ; - Return division name.
"RTN","IBJDI21",150,0)
 ;  Input: X=1-Inpatient, 0-Outpatient
"RTN","IBJDI21",151,0)
 ;         Y=IEN of file #42 (If X=1) or IEN of file #40.8 (If X=0)
"RTN","IBJDI21",152,0)
 I X S Y=+$P($G(^DIC(42,Y,0)),U,11)
"RTN","IBJDI21",153,0)
 S Z=$P($G(^DG(40.8,Y,0)),U) I Z="" S Z=$P($$SITE^VASITE,U,2)
"RTN","IBJDI21",154,0)
 Q Z
"RTN","IBJDI21",155,0)
 ;
"RTN","IBJDI21",156,0)
DET ; - Print the detailed report.
"RTN","IBJDI21",157,0)
 D HDET Q:IBQ
"RTN","IBJDI21",158,0)
 I '$D(^TMP("IBJDI22",$J,IBDIV)) W !!,"There were no patients treated in this date range with unverified eligibility." G DETQ
"RTN","IBJDI21",159,0)
 ;
"RTN","IBJDI21",160,0)
 S IBXX="" F  S IBXX=$O(^TMP("IBJDI22",$J,IBDIV,IBXX)) Q:IBXX=""  S IBX=^(IBXX) D  Q:IBQ
"RTN","IBJDI21",161,0)
 .I $Y>(IOSL-2) D PAUSE Q:IBQ  D HDET Q:IBQ
"RTN","IBJDI21",162,0)
 .W !,$P(IBXX,"@@"),?28,$$SSN($P(IBX,U)),?42,$P(IBX,U,2)
"RTN","IBJDI21",163,0)
 .W ?67,$$ESTAT($P(IBX,U,3)),$G(^TMP("IBJDI23",$J,IBDIV,+$P(IBXX,"@@",2)))
"RTN","IBJDI21",164,0)
 .W ?93,$J($P(IBX,U,4),3),?98,$J($P(IBX,U,5),3)
"RTN","IBJDI21",165,0)
 .W ?104,$$DAT1^IBOUTL($P(IBX,U,6))
"RTN","IBJDI21",166,0)
 .S IBCOUNT=$O(^TMP($J,"SDAMA301",+$P(IBXX,"@@",2),0))
"RTN","IBJDI21",167,0)
 .S:IBCOUNT $P(IBX,"^",7)=$S('$P(IBX,"^",7):IBCOUNT,IBCOUNT<$P(IBX,"^",7):IBCOUNT,1:$P(IBX,"^",7))
"RTN","IBJDI21",168,0)
 .W ?114,$$DAT1^IBOUTL($P(IBX,U,7))
"RTN","IBJDI21",169,0)
 .W ?124,$P(IBX,U,8)
"RTN","IBJDI21",170,0)
 ;
"RTN","IBJDI21",171,0)
DETQ I 'IBQ D PAUSE
"RTN","IBJDI21",172,0)
 Q
"RTN","IBJDI21",173,0)
 ;
"RTN","IBJDI21",174,0)
HDET ; - Write the detail report header.
"RTN","IBJDI21",175,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBJDI21",176,0)
 S IBPAG=IBPAG+1
"RTN","IBJDI21",177,0)
 W !,"Veterans with Unverified Eligibilities",$S(IBDIV'="ALL":" for "_IBDIV,1:""),?80,"Run Date: ",IBRUN,?123,"Page: ",IBPAG
"RTN","IBJDI21",178,0)
 W !,"Patients who were treated in the period ",$$DAT1^IBOUTL(IBBDT)," to ",$$DAT1^IBOUTL(IBEDT)
"RTN","IBJDI21",179,0)
 W !?91,"# Opt   #      Last   Nxt Sched  Date of"
"RTN","IBJDI21",180,0)
 W !,"Patient (*=Had inpt. care)",?28,"SSN",?42,"Primary Eligibility"
"RTN","IBJDI21",181,0)
 W ?67,"Eligibility Status",?91,"Visits Disc    Seen   Visit/Adm   Death"
"RTN","IBJDI21",182,0)
 W !,$$DASH(IOM),!
"RTN","IBJDI21",183,0)
 S IBQ=$$STOP(0,"Unverified Eligibility Report")
"RTN","IBJDI21",184,0)
 Q
"RTN","IBJDI21",185,0)
 ;
"RTN","IBJDI21",186,0)
SUM ; - Print the summary report.
"RTN","IBJDI21",187,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBJDI21",188,0)
 S IBPAG=IBPAG+1
"RTN","IBJDI21",189,0)
 W !!?21,"VETERANS WITH UNVERIFIED ELIGIBILITY",!
"RTN","IBJDI21",190,0)
 I IBDIV'="ALL" W ?(61-$L(IBDIV))\2,"SUMMARY REPORT for ",IBDIV
"RTN","IBJDI21",191,0)
 E  W ?33,"SUMMARY REPORT"
"RTN","IBJDI21",192,0)
 W !!?19,"Patients treated from ",$$DAT1^IBOUTL(IBBDT)," - ",$$DAT1^IBOUTL(IBEDT)
"RTN","IBJDI21",193,0)
 W !!?24,"Run Date: ",IBRUN,!?13,$$DASH(53),!!
"RTN","IBJDI21",194,0)
 ;
"RTN","IBJDI21",195,0)
 S IBPERV=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"VER")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI21",196,0)
 S IBPERP=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"PEN")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI21",197,0)
 S IBPERD=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"DEC")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI21",198,0)
 S IBPERO=$J($S('IB(IBDIV,"VER"):0,1:IB(IBDIV,"VERO")/IB(IBDIV,"VER")*100),0,2)
"RTN","IBJDI21",199,0)
 W ?29,"Number of Patients Treated:",?58,$J(IB(IBDIV,"TOT"),5)
"RTN","IBJDI21",200,0)
 W !?28,"Number of Deceased Patients:",?58,$J(IB(IBDIV,"DEC"),5),?67,"(",IBPERD,"%)"
"RTN","IBJDI21",201,0)
 W !?11,"Number of Patients with Verified Eligibility:",?58,$J(IB(IBDIV,"VER"),5),?67,"(",IBPERV,"%)"
"RTN","IBJDI21",202,0)
 W !?5,"Number of Patients Whose Verified Eligibility Date"
"RTN","IBJDI21",203,0)
 W !?13,"is At Least 2 Years Old (from above total):",?58,$J(IB(IBDIV,"VERO"),5),?67,"(",IBPERO,"%)"
"RTN","IBJDI21",204,0)
 W !?10,"Number of Patients with a Pending Eligibility:",?58,$J(IB(IBDIV,"PEN"),5),?67,"(",IBPERP,"%)"
"RTN","IBJDI21",205,0)
 W !?24,"Number of Patients Not Verified:",?58,$J(IB(IBDIV,"NOT"),5),?67,"(",$J($S('IB(IBDIV,"TOT"):0,1:100-IBPERV-IBPERP),0,2),"%)"
"RTN","IBJDI21",206,0)
 Q
"RTN","IBJDI21",207,0)
 ;
"RTN","IBJDI21",208,0)
DASH(X) ; - Return a dashed line.
"RTN","IBJDI21",209,0)
 Q $TR($J("",X)," ","=")
"RTN","IBJDI21",210,0)
 ;
"RTN","IBJDI21",211,0)
PAUSE ; - Page break.
"RTN","IBJDI21",212,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDI21",213,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDI21",214,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDI21",215,0)
 S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
"RTN","IBJDI21",216,0)
 Q
"RTN","IBJDI21",217,0)
 ;
"RTN","IBJDI21",218,0)
SSN(X) ; - Format the SSN.
"RTN","IBJDI21",219,0)
 Q $S(X]"":$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10),1:"")
"RTN","IBJDI21",220,0)
 ;
"RTN","IBJDI21",221,0)
ESTAT(X) ; - Decode the eligibility status.
"RTN","IBJDI21",222,0)
 Q $S(X="V":"VERIFIED",X="P":"PENDING VERIFICATION",X="R":"PENDING RE-VERIFICATION",1:"NOT VERIFIED")
"RTN","IBOUNP1")
0^8^B15243221
"RTN","IBOUNP1",1,0)
IBOUNP1 ;ALB/CJM - OUTPATIENT INSURANCE REPORT ;JAN 25,1992
"RTN","IBOUNP1",2,0)
 ;;2.0;INTEGRATED BILLING;**249**;21-MAR-94
"RTN","IBOUNP1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBOUNP1",4,0)
 ;
"RTN","IBOUNP1",5,0)
 ; VAUTD =1 if all divisions selected
"RTN","IBOUNP1",6,0)
 ; VAUTD() - list of selected divisions
"RTN","IBOUNP1",7,0)
 ; VAUTC =1 if all clinics selected in selected divisions
"RTN","IBOUNP1",8,0)
 ; VAUTC() - list of selected clinics, indexed by record number
"RTN","IBOUNP1",9,0)
 ; IBOEND - end of the date range for the report
"RTN","IBOUNP1",10,0)
 ; IBOBEG - start of the date range for report
"RTN","IBOUNP1",11,0)
 ; IBOQUIT - flag to exit
"RTN","IBOUNP1",12,0)
 ; IBOUK =1 if vets whose insurance is unknow should be included
"RTN","IBOUNP1",13,0)
 ; IBOUI =1 if vets that are no insured should be included
"RTN","IBOUNP1",14,0)
 ; IBOEXP = 1 if vets whose insurance is expiring should be included
"RTN","IBOUNP1",15,0)
MAIN ;
"RTN","IBOUNP1",16,0)
 ;***
"RTN","IBOUNP1",17,0)
 ;
"RTN","IBOUNP1",18,0)
 S IBOQUIT=0 K ^TMP($J,"SDAMA301"),^TMP("IBOUNP",$J)
"RTN","IBOUNP1",19,0)
 D CLINIC,CATGRY:'IBOQUIT,DRANGE:'IBOQUIT
"RTN","IBOUNP1",20,0)
 D:'IBOQUIT DEVICE
"RTN","IBOUNP1",21,0)
 G:IBOQUIT EXIT
"RTN","IBOUNP1",22,0)
QUEUED ; entry point if queued
"RTN","IBOUNP1",23,0)
 ;
"RTN","IBOUNP1",24,0)
 ;
"RTN","IBOUNP1",25,0)
 D LCLINIC
"RTN","IBOUNP1",26,0)
 ;
"RTN","IBOUNP1",27,0)
 ; look up info from scheduling
"RTN","IBOUNP1",28,0)
 S IBARRAY(1)=IBOBEG_";"_IBOEND_".99"
"RTN","IBOUNP1",29,0)
 S:$D(VAUTC)>9 IBARRAY(2)="VAUTC("
"RTN","IBOUNP1",30,0)
 S IBARRAY(3)="R"
"RTN","IBOUNP1",31,0)
 S IBARRAY("FLDS")="2;4"
"RTN","IBOUNP1",32,0)
 S IBARRAY("SORT")="P"
"RTN","IBOUNP1",33,0)
 S IBCOUNT=$$SDAPI^SDAMA301(.IBARRAY)
"RTN","IBOUNP1",34,0)
 I IBCOUNT<0 U IO W !!,"Scheduling Information not Available",! S IBOQUIT=1 F  S IBCOUNT=$O(^TMP($J,"SDAMA301",IBCOUNT)) Q:'IBCOUNT  W !?10,IBCOUNT,?20,$G(^TMP($J,"SDAMA301",IBCOUNT))
"RTN","IBOUNP1",35,0)
 ;
"RTN","IBOUNP1",36,0)
 D:'IBOQUIT LOOPPT^IBOUNP2,REPORT^IBOUNP3
"RTN","IBOUNP1",37,0)
EXIT ; 
"RTN","IBOUNP1",38,0)
 K ^TMP($J,"SDAMA301")
"RTN","IBOUNP1",39,0)
 ;
"RTN","IBOUNP1",40,0)
 ;
"RTN","IBOUNP1",41,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOUNP1",42,0)
 D ^%ZISC
"RTN","IBOUNP1",43,0)
 K IBOQUIT,IBOBEG,IBOEND,IBOUK,IBOUI,IBOEXP,VAUTC,VAUTD,IBARRAY,IBCOUNT
"RTN","IBOUNP1",44,0)
 K Y,POP,X1,X2,X,VAEL,VAERR,IBSDDAT,IBODIV,IBOCLN,DIRUT,VADM,VAOA,VAPD
"RTN","IBOUNP1",45,0)
 Q
"RTN","IBOUNP1",46,0)
 ;
"RTN","IBOUNP1",47,0)
DRANGE ; select a date range for report
"RTN","IBOUNP1",48,0)
 S DIR(0)="D^::EX",DIR("A")="Start with DATE" D ^DIR I $D(DIRUT) S IBOQUIT=1 K DIR Q
"RTN","IBOUNP1",49,0)
 S IBOBEG=Y,DIR("A")="Go to DATE" F  D ^DIR S:$D(DIRUT) IBOQUIT=1 Q:(Y>IBOBEG)!(Y=IBOBEG)!IBOQUIT  W !,*7,"ENDING DATE must follow or be the same as the STARTING DATE"
"RTN","IBOUNP1",50,0)
 S IBOEND=Y K DIR
"RTN","IBOUNP1",51,0)
 Q
"RTN","IBOUNP1",52,0)
 ;
"RTN","IBOUNP1",53,0)
DEVICE ;
"RTN","IBOUNP1",54,0)
 I $D(ZTQUEUED) Q
"RTN","IBOUNP1",55,0)
 W !!,*7,"*** Margin width of this output is 132 ***"
"RTN","IBOUNP1",56,0)
 W !,"*** This output should be queued ***"
"RTN","IBOUNP1",57,0)
 S %ZIS="MQ" D ^%ZIS I POP S IBOQUIT=1 Q
"RTN","IBOUNP1",58,0)
 I $D(IO("Q")) S ZTRTN="QUEUED^IBOUNP1",ZTIO=ION,ZTSAVE("VA*")="",ZTSAVE("IBO*")="",ZTDESC="OUTPATIENT INSURANCE REPORT" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S IBOQUIT=1 Q
"RTN","IBOUNP1",59,0)
 Q
"RTN","IBOUNP1",60,0)
 ;
"RTN","IBOUNP1",61,0)
CLINIC ; gets list of selected clinics,or sets VAUTC=1 if all selected
"RTN","IBOUNP1",62,0)
 ; IA#664
"RTN","IBOUNP1",63,0)
 N VAUTNI S VAUTNI=2,IBOQUIT=1
"RTN","IBOUNP1",64,0)
 D DIVISION^VAUTOMA Q:Y<0  S VAUTNI=2 D CLINIC^VAUTOMA Q:Y<0
"RTN","IBOUNP1",65,0)
 S IBOQUIT=0
"RTN","IBOUNP1",66,0)
 Q
"RTN","IBOUNP1",67,0)
 ;
"RTN","IBOUNP1",68,0)
LCLINIC ; lists clinics if not ALL included and ALL divisions
"RTN","IBOUNP1",69,0)
 N IBCLN,NODE
"RTN","IBOUNP1",70,0)
 I VAUTD'=1&(VAUTC=1) S VAUTC=0,IBCLN="" F  S IBCLN=$O(^SC(IBCLN)) Q:IBCLN=""  D
"RTN","IBOUNP1",71,0)
 .S NODE=$G(^SC(IBCLN,0))
"RTN","IBOUNP1",72,0)
 .;make sure it's the one of selected divisions division
"RTN","IBOUNP1",73,0)
 .Q:'$D(VAUTD(+$P(NODE,"^",15)))
"RTN","IBOUNP1",74,0)
 .;check that location is a clinic
"RTN","IBOUNP1",75,0)
 .Q:$P(NODE,"^",3)'="C"
"RTN","IBOUNP1",76,0)
 .S VAUTC(IBCLN)=""
"RTN","IBOUNP1",77,0)
 Q
"RTN","IBOUNP1",78,0)
 ;
"RTN","IBOUNP1",79,0)
CATGRY ; allows user to select categories to include in report
"RTN","IBOUNP1",80,0)
 S DIR(0)="Y",DIR("A")="Include veterans whose insurance is unknown"
"RTN","IBOUNP1",81,0)
 S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S IBOQUIT=1 Q
"RTN","IBOUNP1",82,0)
 S IBOUK=Y
"RTN","IBOUNP1",83,0)
 S DIR(0)="Y",DIR("A")="Include veterans whose insurance is expiring"
"RTN","IBOUNP1",84,0)
 S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S IBOQUIT=1 Q
"RTN","IBOUNP1",85,0)
 S IBOEXP=Y
"RTN","IBOUNP1",86,0)
 S DIR(0)="Y",DIR("A")="Include veterans who have no insurance"
"RTN","IBOUNP1",87,0)
 S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S IBOQUIT=1 Q
"RTN","IBOUNP1",88,0)
 S IBOUI=Y
"RTN","IBOUNP1",89,0)
 Q
"RTN","IBOUNP2")
0^9^B5586175
"RTN","IBOUNP2",1,0)
IBOUNP2 ;ALB/CJM - OUTPATIENT INSURANCE REPORT ;JAN 25,1992
"RTN","IBOUNP2",2,0)
 ;;2.0;INTEGRATED BILLING;**249**;21-MAR-94
"RTN","IBOUNP2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBOUNP2",4,0)
 ;
"RTN","IBOUNP2",5,0)
 ; IBOTIME appointment time
"RTN","IBOUNP2",6,0)
 ; IBODIV  division
"RTN","IBOUNP2",7,0)
 ; IBOCLNC clinic
"RTN","IBOUNP2",8,0)
 ; IBOCTG category vet is in (no=noinsurance,expired,unknow)
"RTN","IBOUNP2",9,0)
 ; IBOEND2  end of the date range + 30 days
"RTN","IBOUNP2",10,0)
 ; IBOINS =1 in there is insurance data
"RTN","IBOUNP2",11,0)
 ; IBORPTD =1 if appt should appear on report
"RTN","IBOUNP2",12,0)
 ;
"RTN","IBOUNP2",13,0)
LOOPPT ; loops through patients returned from API
"RTN","IBOUNP2",14,0)
 N IBOCLNC,IBOTIME,IBOEND2,IBOCTG,IBOINS,IBORPTD,IBONAME S DFN=""
"RTN","IBOUNP2",15,0)
 S X1=IBOEND,X2=30 D C^%DTC S IBOEND2=X
"RTN","IBOUNP2",16,0)
 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:'DFN  I $$VET(DFN) S IBOTIME=$O(^TMP($J,"SDAMA301",DFN,0)),IBSDDAT=^TMP($J,"SDAMA301",DFN,IBOTIME) D INFO,INDEX:IBORPTD
"RTN","IBOUNP2",17,0)
 Q
"RTN","IBOUNP2",18,0)
 ;
"RTN","IBOUNP2",19,0)
INFO ; looks up info, assumes IBSDDAT
"RTN","IBOUNP2",20,0)
 S IBONAME=$P($P(IBSDDAT,"^",4),";",2)
"RTN","IBOUNP2",21,0)
 S IBOCLNC=+$P(IBSDDAT,"^",2)
"RTN","IBOUNP2",22,0)
 S IBOCLN=$P($P(IBSDDAT,"^",2),";",2) I IBOCLN="" S IBOCLN="NOT KNOWN"
"RTN","IBOUNP2",23,0)
 S IBODIV=$P($G(^SC(IBOCLNC,0)),"^",15) S:IBODIV IBODIV=$P($G(^DG(40.8,IBODIV,0)),"^",1) S:IBODIV="" IBODIV="UNKNOWN"
"RTN","IBOUNP2",24,0)
 S IBORPTD=0 D UNK:IBOUK,EXP:'IBORPTD&IBOEXP,UNI:'IBORPTD&IBOUI
"RTN","IBOUNP2",25,0)
 Q
"RTN","IBOUNP2",26,0)
 ;
"RTN","IBOUNP2",27,0)
VET(DFN) ; checks if patient is a vet
"RTN","IBOUNP2",28,0)
 D ELIG^VADPT
"RTN","IBOUNP2",29,0)
 Q $S(VAERR:0,VAEL(4):1,1:0)
"RTN","IBOUNP2",30,0)
 ;
"RTN","IBOUNP2",31,0)
INDEX ; indexes appointment
"RTN","IBOUNP2",32,0)
 S ^TMP("IBOUNP",$J,IBOCTG,IBODIV,IBOCLN,IBONAME,DFN)=IBOTIME
"RTN","IBOUNP2",33,0)
 Q
"RTN","IBOUNP2",34,0)
UNK ; goes in 'unknown' category if the field COVERED BY HEALTH INSURANCE
"RTN","IBOUNP2",35,0)
 ; was not answered, was answered unknown, and there is no insurance data
"RTN","IBOUNP2",36,0)
 S IBORPTD=0 N T S T=$P($G(^DPT(DFN,.31)),"^",11) I T="U"!(T="") D CKINS I 'IBOINS S IBOCTG="UNKNOWN",IBORPTD=1 Q
"RTN","IBOUNP2",37,0)
 Q
"RTN","IBOUNP2",38,0)
EXP ; goes in expired category only if there is insurance and
"RTN","IBOUNP2",39,0)
 ; all of it expired before end of specified period + 30 days
"RTN","IBOUNP2",40,0)
 S IBORPTD=0 N T,E D CKINS Q:'IBOINS
"RTN","IBOUNP2",41,0)
 S IBORPTD=1,IBOCTG="EXPIRED" F T=0:0 S T=$O(^DPT(DFN,.312,T)) Q:T'>0  S E=$P($G(^(T,0)),"^",4) I E=""!(E>IBOEND2) S IBORPTD=0 Q
"RTN","IBOUNP2",42,0)
 Q
"RTN","IBOUNP2",43,0)
UNI ; goes in unisured category if there is no insurance data and 
"RTN","IBOUNP2",44,0)
 ; the field COVERED BY HEALTH INSURANCE was answered YES or NO
"RTN","IBOUNP2",45,0)
 S IBORPTD=0 N T S T=$P($G(^DPT(DFN,.31)),"^",11) I T="N"!(T="Y") D CKINS I 'IBOINS S IBOCTG="NO",IBORPTD=1
"RTN","IBOUNP2",46,0)
 Q
"RTN","IBOUNP2",47,0)
CKINS ; checks if any insurance in insurance multiple of patient record
"RTN","IBOUNP2",48,0)
 S IBOINS=0 I $O(^DPT(DFN,.312,0)) S IBOINS=1
"RTN","IBOUNP2",49,0)
 Q
"RTN","IBOUNP3")
0^10^B22364020
"RTN","IBOUNP3",1,0)
IBOUNP3 ;ALB/CJM - OUTPATIENT INSURANCE REPORT ;JAN 25,1991
"RTN","IBOUNP3",2,0)
 ;;2.0;INTEGRATED BILLING;**249**;21-MAR-94
"RTN","IBOUNP3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBOUNP3",4,0)
 ;
"RTN","IBOUNP3",5,0)
REPORT ;
"RTN","IBOUNP3",6,0)
 N QUIT,IBODIV,CLNC,TIME,DFN,CTG,HDR,HDR2,HDR1,PAGE,NOW,LINE,B,E,NAME,CRT,BOT,DIVTOT,CLNTOT,TOTAL,FIRST
"RTN","IBOUNP3",7,0)
 S CRT=0,BOT=6,QUIT=0 I $E(IOST,1,2)="C-" S CRT=1,BOT=2
"RTN","IBOUNP3",8,0)
 S FIRST=1
"RTN","IBOUNP3",9,0)
 W:CRT @IOF
"RTN","IBOUNP3",10,0)
 S HDR="OUTPATIENT VISITS FOR VETERANS",LINE="",$P(LINE,"-",126)=""
"RTN","IBOUNP3",11,0)
 D NOW^%DTC S Y=X X ^DD("DD") S NOW=Y
"RTN","IBOUNP3",12,0)
 S Y=IBOBEG X ^DD("DD") S B=Y
"RTN","IBOUNP3",13,0)
 S Y=IBOEND X ^DD("DD") S E=Y
"RTN","IBOUNP3",14,0)
 S HDR2="FOR APPOINTMENTS " S:E'=B HDR2=HDR2_"FROM "_B_" TO "_E
"RTN","IBOUNP3",15,0)
 S:E=B HDR2=HDR2_"ON "_B
"RTN","IBOUNP3",16,0)
 I IBOUI S CTG="NO",HDR1=HDR_" WITH NO INSURANCE" D LOOP G:QUIT Q
"RTN","IBOUNP3",17,0)
 I IBOEXP S CTG="EXPIRED",HDR1=HDR_" WHOSE INSURANCE IS EXPIRED OR WILL EXPIRE WITHIN 30 DAYS" D LOOP G:QUIT Q
"RTN","IBOUNP3",18,0)
 I IBOUK S CTG="UNKNOWN",HDR1=HDR_" WHOSE INSURANCE IS UNKNOWN" D LOOP
"RTN","IBOUNP3",19,0)
 I CRT,'QUIT D PAUSE
"RTN","IBOUNP3",20,0)
Q D KVAR^VADPT K VA
"RTN","IBOUNP3",21,0)
 Q
"RTN","IBOUNP3",22,0)
LOOP ;
"RTN","IBOUNP3",23,0)
 S IBODIV="",PAGE=1,(CLNTOT,DIVTOT,TOTAL)=0
"RTN","IBOUNP3",24,0)
 F  D:DIVTOT DIVTOT S:DIVTOT TOTAL=TOTAL+DIVTOT,DIVTOT=0 S IBODIV=$O(^TMP("IBOUNP",$J,CTG,IBODIV)) Q:IBODIV=""!QUIT  S CLNC="" D
"RTN","IBOUNP3",25,0)
 .D HEADER Q:QUIT
"RTN","IBOUNP3",26,0)
 .W !!?6,"Division:  ",?31,IBODIV,!
"RTN","IBOUNP3",27,0)
 .F  S CLNC=$O(^TMP("IBOUNP",$J,CTG,IBODIV,CLNC)) S DIVTOT=DIVTOT+CLNTOT,CLNTOT=0 Q:CLNC=""!QUIT  D:$Y>(IOSL-BOT-4) HEADER Q:QUIT  W !!,?6,"Clinic: ",?31,CLNC,! S NAME="" D
"RTN","IBOUNP3",28,0)
 ..F  S NAME=$O(^TMP("IBOUNP",$J,CTG,IBODIV,CLNC,NAME)) Q:QUIT  D:NAME=""&(CLNTOT>0) CLNTOT Q:NAME=""  D
"RTN","IBOUNP3",29,0)
 ... F DFN=0:0 S DFN=$O(^TMP("IBOUNP",$J,CTG,IBODIV,CLNC,NAME,DFN)) Q:DFN'>0  S TIME=^TMP("IBOUNP",$J,CTG,IBODIV,CLNC,NAME,DFN) D ITEM Q:QUIT
"RTN","IBOUNP3",30,0)
 D:'QUIT TOTAL
"RTN","IBOUNP3",31,0)
 Q
"RTN","IBOUNP3",32,0)
CLNTOT ; prints subtotal for clinic
"RTN","IBOUNP3",33,0)
 I $Y+BOT>(IOSL-1) D HEADER
"RTN","IBOUNP3",34,0)
 W !?3,"________________________"
"RTN","IBOUNP3",35,0)
 W !,?3,"Clinic Subtotal  : ",CLNTOT
"RTN","IBOUNP3",36,0)
 Q
"RTN","IBOUNP3",37,0)
DIVTOT ; prints subtotal for division
"RTN","IBOUNP3",38,0)
 I $Y+BOT>(IOSL-1) D HEADER
"RTN","IBOUNP3",39,0)
 W !?3,"________________________"
"RTN","IBOUNP3",40,0)
 W !,?3,"Division Subtotal: ",DIVTOT
"RTN","IBOUNP3",41,0)
 Q
"RTN","IBOUNP3",42,0)
TOTAL ; prints total for all clincis
"RTN","IBOUNP3",43,0)
 I ($Y+BOT>(IOSL-1))!($Y'>1) D HEADER Q:QUIT
"RTN","IBOUNP3",44,0)
 W !?3,"________________________"
"RTN","IBOUNP3",45,0)
 W !?3,"Total            : ",TOTAL
"RTN","IBOUNP3",46,0)
 F  Q:($Y>(IOSL-2))  W !
"RTN","IBOUNP3",47,0)
 Q
"RTN","IBOUNP3",48,0)
ITEM ; prints patient data for a single appt
"RTN","IBOUNP3",49,0)
 N CNT,TM,E1,E2,PID,MS,ES,SC,AGE,INS,I,VAPA S (E1,E2,PID,MS,ES,SC,AGE)="",CNT=2,CLNTOT=CLNTOT+1
"RTN","IBOUNP3",50,0)
DATA S Y=TIME X ^DD("DD") S TM=$P(Y,"@",1)_"@"_$E($P(Y,"@",2),1,5)
"RTN","IBOUNP3",51,0)
 D DEM^VADPT I 'VAERR S MS=$P(VADM(10),"^",2),PID=VA("PID"),AGE=VADM(4)
"RTN","IBOUNP3",52,0)
 D OPD^VADPT I 'VAERR S ES=$P(VAPD(7),"^",2)
"RTN","IBOUNP3",53,0)
 D ELIG^VADPT I 'VAERR,+VAEL(3) S SC=$P(VAEL(3),"^",2)
"RTN","IBOUNP3",54,0)
CKSPACE ; tries to keep vet's data on same page
"RTN","IBOUNP3",55,0)
 S VAPA("P")="" D ADD^VADPT I 'VAERR D
"RTN","IBOUNP3",56,0)
 . F I=2,3,4 S:VAPA(I)]"" CNT=CNT+1
"RTN","IBOUNP3",57,0)
 S VAOA("A")=5 D OAD^VADPT I 'VAERR S E1=VAOA(9) I E1]"" D
"RTN","IBOUNP3",58,0)
 . S CNT=CNT+1
"RTN","IBOUNP3",59,0)
 . F I=1,2,3,4,5,6,8 S E1(I)=VAOA(I)
"RTN","IBOUNP3",60,0)
 . F I=1,2,3 S:VAOA(I)]"" CNT=CNT+1
"RTN","IBOUNP3",61,0)
 S VAOA("A")=6 D OAD^VADPT I 'VAERR S E2=VAOA(9) I E2]"" D
"RTN","IBOUNP3",62,0)
 . S CNT=CNT+1
"RTN","IBOUNP3",63,0)
 . F I=1,2,3,4,5,6,8 S E2(I)=VAOA(I)
"RTN","IBOUNP3",64,0)
 . F I=1,2,3 S:VAOA(I)]"" CNT=CNT+1
"RTN","IBOUNP3",65,0)
 S CNT=$P($G(^DPT(DFN,.312,0)),"^",4)+CNT
"RTN","IBOUNP3",66,0)
 I CNT>(IOSL-($Y+BOT)) D HEADER Q:QUIT
"RTN","IBOUNP3",67,0)
PRINT W !?3,$E(NAME,1,25),?31,PID,?51,TM,?74,AGE,?81,SC,?87,$E(MS,1,15),?104,$E(ES,1,20)
"RTN","IBOUNP3",68,0)
 W !?31,"Address:",?51,VAPA(1),?87,"Tele: ",?104,VAPA(8) W:VAPA(2)]"" !?51,VAPA(2) W:VAPA(3)]"" !?51,VAPA(3) W:VAPA(4)]"" !?51,VAPA(4)_","_$P($G(^DIC(5,+VAPA(5),0)),"^",2)_" "_VAPA(6)
"RTN","IBOUNP3",69,0)
 I E1]"" W !?31,"Employer:",?51,E1,?87,"Tele: ",?104,E1(8) W:E1(1)]"" !?51,E1(1) W:E1(2)]"" !?51,E1(2) W:E1(3)]"" !?51,E1(3) W:E1(4)]"" !?51,E1(4)_","_$P($G(^DIC(5,+E1(5),0)),"^",2)_" "_E1(6)
"RTN","IBOUNP3",70,0)
 I E2]"" W !?31,"Sps's Emplr:",?51,E2,?87,"Tele: ",?104,E2(8) W:E2(1)]"" !?51,E2(1) W:E2(2)]"" !?51,E2(2) W:E2(3)]"" !?51,E2(3) W:E2(4)]"" !?51,E2(4)_","_$P($G(^DIC(5,+E2(5),0)),"^",2)_" "_E2(6)
"RTN","IBOUNP3",71,0)
INS ; writes insurance data
"RTN","IBOUNP3",72,0)
 N I,J S J=1 F I=0:0 S I=$O(^DPT(DFN,.312,I)) Q:I'>0  S INS=$G(^(I,0)) D:$Y>(IOSL-BOT) HEADER Q:QUIT  W ! W:J ?31,"Insurance:" W ?51,$P($G(^DIC(36,$P(INS,"^",1),0)),"^",1),?87 W:J "Expiration:" S Y=$P(INS,"^",4),J=0 I Y>0 X ^DD("DD") W ?104,Y
"RTN","IBOUNP3",73,0)
 Q
"RTN","IBOUNP3",74,0)
HEADER ; writes the report header
"RTN","IBOUNP3",75,0)
 I CRT,$Y>1,'FIRST D  Q:QUIT
"RTN","IBOUNP3",76,0)
 . F  Q:$Y>(IOSL-1)  W !
"RTN","IBOUNP3",77,0)
 .D PAUSE
"RTN","IBOUNP3",78,0)
 I 'FIRST W @IOF
"RTN","IBOUNP3",79,0)
 I FIRST S FIRST=0
"RTN","IBOUNP3",80,0)
 W !,HDR1,?104,NOW,"  PAGE ",PAGE,!,HDR2,!!
"RTN","IBOUNP3",81,0)
 W ?3,"PATIENT NAME",?32,"PT ID",?51,"APPT DATE/TIME",?74,"AGE",?81,"%SC",?87,"MARITAL STATUS",?104,"EMPLOYMENT STATUS",!
"RTN","IBOUNP3",82,0)
 W LINE
"RTN","IBOUNP3",83,0)
 S PAGE=PAGE+1
"RTN","IBOUNP3",84,0)
 Q
"RTN","IBOUNP3",85,0)
PAUSE ;
"RTN","IBOUNP3",86,0)
 N T R "    Press RETURN to continue",T:DTIME I '$T!(T["^") S QUIT=1 Q
"RTN","IBOUNP3",87,0)
 Q
"RTN","IBOVOP")
0^11^B4769032
"RTN","IBOVOP",1,0)
IBOVOP ;ALB/RLW-Report of Visits for NSC Outpatients ;12-JUN-92
"RTN","IBOVOP",2,0)
 ;;2.0;INTEGRATED BILLING;**91,153,176,249**;21-MAR-94
"RTN","IBOVOP",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified
"RTN","IBOVOP",4,0)
 ;
"RTN","IBOVOP",5,0)
INIT ;
"RTN","IBOVOP",6,0)
 ;
"RTN","IBOVOP",7,0)
 D DT^DICRW,HOME^%ZIS S IBQUIT=0
"RTN","IBOVOP",8,0)
 N IBJ,IBAMT,IBAIEN,IBPAGE,IBLINE,IBACT,IBDATA,IBTITLE,IBDATE,IBADFN,IBEL,IBIEN,IBCL,IBCKIN,IBSDATA,IBSTART,IBPRNT,IBAPPT,IBSTAT,IBFLD1,IBFLD2,IBFLD3,IBFLD4,IBFLD5,IBFLD6
"RTN","IBOVOP",9,0)
 S DIR(0)="DA^2901001:NOW:EX",DIR("A")="Start with DATE: " D ^DIR K DIR G:$D(DIRUT) END S IBBDT=+Y
"RTN","IBOVOP",10,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="Go to DATE: " D ^DIR K DIR G:$D(DIRUT) END S IBEDT=+Y
"RTN","IBOVOP",11,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBOVOP",12,0)
 I $D(IO("Q")) D  G END
"RTN","IBOVOP",13,0)
 .S ZTRTN="QUE^IBOVOP",ZTDESC="MEANS TEST/LTC OUTPATIENT/REGISTRATION EVENTS",ZTSAVE("IB*")=""
"RTN","IBOVOP",14,0)
 .D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBOVOP",15,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBOVOP",16,0)
 U IO
"RTN","IBOVOP",17,0)
 ;
"RTN","IBOVOP",18,0)
 ;
"RTN","IBOVOP",19,0)
 D QUE
"RTN","IBOVOP",20,0)
END K IBBDT,IBEDT,IBQUIT,ZTQUEUED,ZTDESC,ZTREQ
"RTN","IBOVOP",21,0)
 ;
"RTN","IBOVOP",22,0)
 ;
"RTN","IBOVOP",23,0)
 Q
"RTN","IBOVOP",24,0)
 ;
"RTN","IBOVOP",25,0)
QUE ;entry point if queued
"RTN","IBOVOP",26,0)
 N IBQUERY K ^TMP($J,"SDAMA301")
"RTN","IBOVOP",27,0)
 ;
"RTN","IBOVOP",28,0)
 S IBPAGE=0
"RTN","IBOVOP",29,0)
 S IBDATE=IBBDT D MAIN^IBOVOP1(.IBQUERY) I IBQUIT D CLOSEQ(.IBQUERY) Q
"RTN","IBOVOP",30,0)
 F  S X1=IBDATE,X2=1 D C^%DTC Q:X>IBEDT  S IBDATE=X K ^TMP("IBOVOP",$J) D MAIN^IBOVOP1(.IBQUERY) Q:IBQUIT
"RTN","IBOVOP",31,0)
 D CLOSEQ(.IBQUERY)
"RTN","IBOVOP",32,0)
 ;
"RTN","IBOVOP",33,0)
 K ^TMP($J,"SDAMA301")
"RTN","IBOVOP",34,0)
 ;
"RTN","IBOVOP",35,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOVOP",36,0)
 D ^%ZISC
"RTN","IBOVOP",37,0)
 Q
"RTN","IBOVOP",38,0)
 ;
"RTN","IBOVOP",39,0)
CLOSEQ(IBQUERY) ; Close any QUERY, if open
"RTN","IBOVOP",40,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBOVOP",41,0)
 Q
"RTN","IBOVOP",42,0)
 ;
"RTN","IBOVOP1")
0^18^B14282604
"RTN","IBOVOP1",1,0)
IBOVOP1 ;ALB/RLW-Report of Visits for NSC Outpatients ;12-JUN-92
"RTN","IBOVOP1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,91,99,132,156,176,234,249**;21-MAR-94
"RTN","IBOVOP1",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified
"RTN","IBOVOP1",4,0)
MAIN(IBQUERY) ; perform report for day(s)
"RTN","IBOVOP1",5,0)
 ; IBQUERY = the query object to use to search for outpt encounters
"RTN","IBOVOP1",6,0)
 ;           if not a valid #, a new QUERY will be created
"RTN","IBOVOP1",7,0)
 D HDR^IBOVOP2
"RTN","IBOVOP1",8,0)
 I $$STOP^IBOUTL("Outpatient/Registration Events Report") S IBQUIT=1 G END
"RTN","IBOVOP1",9,0)
 ; scan visits for NSC patients
"RTN","IBOVOP1",10,0)
 N IBVAL,IBCBK,IBCK,IBFILTER,IBPB,IBOE,IBOE0,IBZ
"RTN","IBOVOP1",11,0)
 S IBVAL("BDT")=IBDATE,IBVAL("EDT")=IBDATE\1+.99
"RTN","IBOVOP1",12,0)
 S IBFILTER=""
"RTN","IBOVOP1",13,0)
 ; Look for hospital location is a clinic-type, valid Means-Test or LTC patient, and potentially billable events
"RTN","IBOVOP1",14,0)
 S IBCBK="I $D(^SC(""AC"",""C"",+$P(Y0,U,4))) D IBCBK^IBOVOP1(Y,Y0,.IBCK)" ; Action of scanning
"RTN","IBOVOP1",15,0)
 F IBZ=9,13.1 S IBCK(IBZ)=""
"RTN","IBOVOP1",16,0)
 D SCAN^IBSDU("DATE/TIME",.IBVAL,"",IBCBK,0,.IBQUERY) K ^TMP("DIERR",$J)
"RTN","IBOVOP1",17,0)
 ; Search for Inpatient Observations
"RTN","IBOVOP1",18,0)
 D IBOVOP^IBECEAU5(IBDATE)
"RTN","IBOVOP1",19,0)
 D PRINT^IBOVOP2
"RTN","IBOVOP1",20,0)
END K DFN,^TMP("IBOVOP",$J),IBAPPT,IBJ,IB
"RTN","IBOVOP1",21,0)
 Q
"RTN","IBOVOP1",22,0)
 ;
"RTN","IBOVOP1",23,0)
 ; To be executed only if the hospital location a clinic-type.
"RTN","IBOVOP1",24,0)
 ; Check the record, and add to the ^TMP if needed
"RTN","IBOVOP1",25,0)
 ; IBENC - encounter IEN
"RTN","IBOVOP1",26,0)
 ; IBENCZ - encounter zero-node
"RTN","IBOVOP1",27,0)
 ; IBCK - array of criteria flags for the $$BILLCK^IBAMTEDU() API call
"RTN","IBOVOP1",28,0)
IBCBK(IBENC,IBENCZ,IBCK) ;
"RTN","IBOVOP1",29,0)
 N IBPAT,IBDAT,Y,Y0,X
"RTN","IBOVOP1",30,0)
 ; Quit if not a billable event
"RTN","IBOVOP1",31,0)
 I '$$BILLCK^IBAMTEDU(IBENC,IBENCZ,.IBCK) Q
"RTN","IBOVOP1",32,0)
 S IBDAT=+IBENCZ ; Date of event
"RTN","IBOVOP1",33,0)
 S IBPAT=+$P(IBENCZ,U,2) Q:'IBPAT  ; Patient IEN
"RTN","IBOVOP1",34,0)
 ; Check for valid MT or LTC patient
"RTN","IBOVOP1",35,0)
 I '$$BIL^DGMTUB(IBPAT,IBDAT),+$$LTCST^IBAECU(IBPAT,IBDAT,1)'=2 Q
"RTN","IBOVOP1",36,0)
 D OPTENC(IBENC,IBENCZ) ; Extract Outpatient Encounter and add to the ^TMP global
"RTN","IBOVOP1",37,0)
 Q
"RTN","IBOVOP1",38,0)
 ;
"RTN","IBOVOP1",39,0)
 ;
"RTN","IBOVOP1",40,0)
OPTENC(IBOE,IBOE0) ; Extract outpatient encounter
"RTN","IBOVOP1",41,0)
 N IBCL,DFN,IBFLD4,IBJ,IBSEQ
"RTN","IBOVOP1",42,0)
 S DFN=+$P(IBOE0,U,2),IBJ=+IBOE0,IBCL=+$P(IBOE0,U,4),IBSEQ=0
"RTN","IBOVOP1",43,0)
 Q:'$$BIL^DGMTUB(DFN,IBJ)
"RTN","IBOVOP1",44,0)
 I $P(IBOE0,U,8)=1 D  ; - appt
"RTN","IBOVOP1",45,0)
 .;            field 4=clinic
"RTN","IBOVOP1",46,0)
 .;            field 5=appt type
"RTN","IBOVOP1",47,0)
 .;            field 6=status
"RTN","IBOVOP1",48,0)
 . S IBFLD4=$P($G(^SC(IBCL,0)),U)
"RTN","IBOVOP1",49,0)
 . I IBFLD4'="" S:+$G(^SC(IBCL,"AT"))=6 IBFLD4=$E(IBFLD4,1,13)_" [R]"
"RTN","IBOVOP1",50,0)
 . S ^TMP("IBOVOP",$J,$$FLD1(DFN),"CLINIC APPT",$$FLD3(IBJ),0)=$E(IBFLD4,1,17)_U_$$FLD5($P(IBOE0,U,10))_U_$E($$EXTERNAL^DILFD(409.68,.12,"",$P(IBOE0,"^",12)),1,17)_U_DFN_U_IBOE Q
"RTN","IBOVOP1",51,0)
 ;
"RTN","IBOVOP1",52,0)
 I $P(IBOE0,U,8)=2 D  ; - add/edit stop code
"RTN","IBOVOP1",53,0)
 .;           field 5=appt type
"RTN","IBOVOP1",54,0)
 . S ^TMP("IBOVOP",$J,$$FLD1(DFN),"STOP CODE",$$FLD3(IBJ),IBSEQ)=$E($P($G(^DIC(40.7,$P(IBOE0,U,3),0)),U),1,16)_U_$$FLD5($P(IBOE0,U,10))_"^^"_DFN_U_IBOE,IBSEQ=IBSEQ+1
"RTN","IBOVOP1",55,0)
 ;
"RTN","IBOVOP1",56,0)
 I $P(IBOE0,U,8)=3 D  ; - registration
"RTN","IBOVOP1",57,0)
 . Q:'$$DISCT^IBEFUNC(IBOE,IBOE0)
"RTN","IBOVOP1",58,0)
 . S IBDATA=$$DISND^IBSDU(IBOE,IBOE0)
"RTN","IBOVOP1",59,0)
 . S IBFLD4=$E($$EXTERNAL^DILFD(2.101,2,"",$P(IBDATA,U,3)),1,16)
"RTN","IBOVOP1",60,0)
 . S Y=$E($$EXTERNAL^DILFD(2.101,6,"",$P(IBDATA,U,7)),1,30)
"RTN","IBOVOP1",61,0)
 . S ^TMP("IBOVOP",$J,$$FLD1(DFN),"REGISTRATION",$$FLD3(IBJ),0)=IBFLD4_U_Y_"^^"_DFN_U_IBOE
"RTN","IBOVOP1",62,0)
 ;
"RTN","IBOVOP1",63,0)
 K IBB,IBE,IBX,IBY,IBCLN,IBXP,IBDFN,IBAPDT,IBAPTYP,X,Y
"RTN","IBOVOP1",64,0)
 Q
"RTN","IBOVOP1",65,0)
CKENC(IBOE,IBOE0,IBSEQ) ;
"RTN","IBOVOP1",66,0)
 S DFN=$P(IBOE0,U,2),IBJ=+IBOE0
"RTN","IBOVOP1",67,0)
 Q
"RTN","IBOVOP1",68,0)
 ;
"RTN","IBOVOP1",69,0)
FLD1(DFN) ; get patient name, l-4 ssn id, classification, insured?
"RTN","IBOVOP1",70,0)
 I '$G(DFN) Q ""
"RTN","IBOVOP1",71,0)
 N IBX,IBY,IBZ S IBX=$$PT^IBEFUNC(DFN),IBZ=""
"RTN","IBOVOP1",72,0)
 D CL^IBACV(DFN,IBDATE,"",.IBY)
"RTN","IBOVOP1",73,0)
 I $D(IBY(1)) S IBZ="AO"
"RTN","IBOVOP1",74,0)
 I $D(IBY(2)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"IR"
"RTN","IBOVOP1",75,0)
 I $D(IBY(3)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"SC"
"RTN","IBOVOP1",76,0)
 I $D(IBY(4)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"EC"
"RTN","IBOVOP1",77,0)
 I $D(IBY(5)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"MST"
"RTN","IBOVOP1",78,0)
 I $D(IBY(6)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"HNC"
"RTN","IBOVOP1",79,0)
 I $D(IBY(7)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"CV"
"RTN","IBOVOP1",80,0)
 Q $E($P(IBX,U),1,20)_" "_$E(IBX)_$P(IBX,U,3)_$S(IBZ]"":"    ["_IBZ_"]",1:"")_$S($$INSURED^IBCNS1(DFN,IBDATE):"    **Insured**",1:"")
"RTN","IBOVOP1",81,0)
 ;
"RTN","IBOVOP1",82,0)
FLD3(Y) ; time - convert date/time to time only, no seconds
"RTN","IBOVOP1",83,0)
 I '$G(Y) Q ""
"RTN","IBOVOP1",84,0)
 X ^DD("DD") Q $P($P(Y,"@",2),":",1,2)
"RTN","IBOVOP1",85,0)
 ;
"RTN","IBOVOP1",86,0)
FLD5(I) ; get appointment type name
"RTN","IBOVOP1",87,0)
 Q $E($P($G(^SD(409.1,+$G(I),0)),U,1),1,17)
"RTN","IBSDU")
0^19^B7620774
"RTN","IBSDU",1,0)
IBSDU ;ALB/TMP - ACRP API UTILITIES ;16-SEP-97
"RTN","IBSDU",2,0)
 ;;2.0;INTEGRATED BILLING;**91,249**;21-MAR-94
"RTN","IBSDU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBSDU",4,0)
 ;
"RTN","IBSDU",5,0)
SCAN(IBINDX,IBVAL,IBFILTER,IBCBK,IBCLOSE,IBQUERY,IBDIR,IBZXERR) ; Scan encountrs
"RTN","IBSDU",6,0)
 ;  *** NOTE *** When using this call, the variable passed as IBQUERY
"RTN","IBSDU",7,0)
 ;               must be  newed or killed in the calling program
"RTN","IBSDU",8,0)
 ; IBINDX = index name property of the query object 
"RTN","IBSDU",9,0)
 ; IBVAL = array of data elements for start/end of search
"RTN","IBSDU",10,0)
 ;         IBVAL("DFN") = patient DFN
"RTN","IBSDU",11,0)
 ;         IBVAL("BDT") = begin date
"RTN","IBSDU",12,0)
 ;         IBVAL("EDT") = end date
"RTN","IBSDU",13,0)
 ;         IBVAL("VIS") = encounter file ien
"RTN","IBSDU",14,0)
 ; IBFILTER = the executable code to use to screen entries
"RTN","IBSDU",15,0)
 ; IBCBK = the executable scan callback code to create the result set
"RTN","IBSDU",16,0)
 ; IBCLOSE = Flag that says whether or not to close the QUERY object
"RTN","IBSDU",17,0)
 ;         1 = Perform close     0 or null = Do not close object
"RTN","IBSDU",18,0)
 ; IBQUERY = the # of the current query, if not a new query.  If passed
"RTN","IBSDU",19,0)
 ;          by reference and query closed, this variable will be nulled
"RTN","IBSDU",20,0)
 ; IBDIR = the direction of the scan (optional)
"RTN","IBSDU",21,0)
 ;         null, undefined or FORWARD : Scan forwards
"RTN","IBSDU",22,0)
 ;         BACKWARD : Scan backwards
"RTN","IBSDU",23,0)
 ; IBZXERR = the name of the error array to be returned (or none if null)
"RTN","IBSDU",24,0)
 ;
"RTN","IBSDU",25,0)
 N QUERY
"RTN","IBSDU",26,0)
 S QUERY=$G(IBQUERY)
"RTN","IBSDU",27,0)
 I $G(IBZXERR)="" K ^TMP("DIERR",$J)
"RTN","IBSDU",28,0)
 I $G(IBZXERR)'="" K @IBZXERR
"RTN","IBSDU",29,0)
 I '$G(QUERY) D
"RTN","IBSDU",30,0)
 .D OPEN^SDQ(.IBQUERY,$G(IBZXERR)) Q:'$G(IBQUERY)
"RTN","IBSDU",31,0)
 .D INDEX^SDQ(.IBQUERY,IBINDX,"SET",$G(IBZXERR))
"RTN","IBSDU",32,0)
 .I $G(IBFILTER)'="" D FILTER^SDQ(.IBQUERY,IBFILTER,"SET",$G(IBZXERR))
"RTN","IBSDU",33,0)
 .D SCANCB^SDQ(.IBQUERY,IBCBK,"SET",$G(IBZXERR))
"RTN","IBSDU",34,0)
 I $G(QUERY) D ACTIVE^SDQ(.IBQUERY,"FALSE","SET",$G(IBZXERR))
"RTN","IBSDU",35,0)
 D SETINDX(.IBQUERY,IBINDX)
"RTN","IBSDU",36,0)
 D ACTIVE^SDQ(.IBQUERY,"TRUE","SET",$G(IBZXERR))
"RTN","IBSDU",37,0)
 S:$G(IBDIR)="" IBDIR="FORWARD"
"RTN","IBSDU",38,0)
 D SCAN^SDQ(.IBQUERY,IBDIR,$G(IBZXERR))
"RTN","IBSDU",39,0)
 I $G(IBCLOSE) D CLOSE(.IBQUERY)
"RTN","IBSDU",40,0)
 I $G(IBZXERR)="" K ^TMP("DIERR",$J)
"RTN","IBSDU",41,0)
 Q
"RTN","IBSDU",42,0)
 ;
"RTN","IBSDU",43,0)
CLOSE(IBQUERY) ; Close the query
"RTN","IBSDU",44,0)
 N IBERROR
"RTN","IBSDU",45,0)
 G:'$G(IBQUERY) CLOSEQ
"RTN","IBSDU",46,0)
 D CLOSE^SDQ(.IBQUERY)
"RTN","IBSDU",47,0)
CLOSEQ Q
"RTN","IBSDU",48,0)
 ;
"RTN","IBSDU",49,0)
SETINDX(IBQUERY,IBINDX) ;
"RTN","IBSDU",50,0)
 I IBINDX="PATIENT/DATE" D PAT,DATE
"RTN","IBSDU",51,0)
 I IBINDX="DATE/TIME" D DATE
"RTN","IBSDU",52,0)
 I IBINDX="PATIENT" D PAT
"RTN","IBSDU",53,0)
 I IBINDX="VISIT" D VIS
"RTN","IBSDU",54,0)
 Q
"RTN","IBSDU",55,0)
 ;
"RTN","IBSDU",56,0)
PAT ; Verify patient
"RTN","IBSDU",57,0)
 D PAT^SDQ(.IBQUERY,$G(IBVAL("DFN")),"SET",$G(IBZXERR))
"RTN","IBSDU",58,0)
 Q
"RTN","IBSDU",59,0)
 ;
"RTN","IBSDU",60,0)
DATE ; Verify date range
"RTN","IBSDU",61,0)
 D DATE^SDQ(.IBQUERY,$G(IBVAL("BDT")),$G(IBVAL("EDT")),"SET",$G(IBZXERR))
"RTN","IBSDU",62,0)
 Q
"RTN","IBSDU",63,0)
 ;
"RTN","IBSDU",64,0)
VIS ; Verify visit
"RTN","IBSDU",65,0)
 D VISIT^SDQ(.IBQUERY,$G(IBVAL("VIS")),"SET",$G(IBZXERR))
"RTN","IBSDU",66,0)
 Q
"RTN","IBSDU",67,0)
 ;
"RTN","IBSDU",68,0)
EPTR(IBOE) ; Function returns extended pointer for encounter (IBOE) 0-node
"RTN","IBSDU",69,0)
 Q $$ER^SDOE(IBOE)
"RTN","IBSDU",70,0)
 ;
"RTN","IBSDU",71,0)
SCE(IBOE,PC,NODE,IBZXERR) ; Returns the specific piece or entire node of the enctr
"RTN","IBSDU",72,0)
 ; NODE = the node to return ... if undefined, the 0-node is assumed
"RTN","IBSDU",73,0)
 ; If PC is null or undefined, the whole node is returned, otherwise
"RTN","IBSDU",74,0)
 ;   just the PC-piece is returned
"RTN","IBSDU",75,0)
 ; IBZXERR = the name of the array where errors should be passed back in
"RTN","IBSDU",76,0)
 ;       (pass in quotes I.E.: "IBERR").  If no name passed, errors are
"RTN","IBSDU",77,0)
 ;       not returned
"RTN","IBSDU",78,0)
 N IBX
"RTN","IBSDU",79,0)
 S:$G(NODE)="" NODE=0
"RTN","IBSDU",80,0)
 I '$G(PC),NODE=0 S IBX=$$GETOE^SDOE(IBOE,$G(IBZXERR)) G SCEQ
"RTN","IBSDU",81,0)
 D GETGEN^SDOE(IBOE,"IBX",$G(IBZXERR))
"RTN","IBSDU",82,0)
 S IBX=$S($G(PC):$P($G(IBX(NODE)),U,+PC),1:$G(IBX(NODE)))
"RTN","IBSDU",83,0)
 ;
"RTN","IBSDU",84,0)
SCEQ I $G(IBZXERR)="" K ^TMP("DIERR",$J)
"RTN","IBSDU",85,0)
 Q IBX
"RTN","IBSDU",86,0)
 ;
"RTN","IBSDU",87,0)
DISND(IBOE,IBOE0,PC,NODE) ; Returns the specific piece or all pieces of "DIS"
"RTN","IBSDU",88,0)
 ; (disposition) of the PATIENT file entry for the encounter IBOE
"RTN","IBSDU",89,0)
 ; NODE = the node to return ... if undefined, the 0-node is assumed
"RTN","IBSDU",90,0)
 ; If PC is null or undefined, the whole node is returned, otherwise
"RTN","IBSDU",91,0)
 ;   just the PC-piece is returned
"RTN","IBSDU",92,0)
 ; IBOE0 = 0-node of encounter file (optional)
"RTN","IBSDU",93,0)
 N DATA,IBOE0
"RTN","IBSDU",94,0)
 S:$G(NODE)="" NODE=0
"RTN","IBSDU",95,0)
 I $G(IBOE0)="" S IBOE0=$$SCE(IBOE)
"RTN","IBSDU",96,0)
 S DATA=$G(^DPT(+$P(IBOE0,U,2),"DIS",+$$EPTR^IBSDU(IBOE),NODE))
"RTN","IBSDU",97,0)
 S:$G(PC) DATA=$P(DATA,U,+PC)
"RTN","IBSDU",98,0)
 Q DATA
"RTN","IBSDU",99,0)
 ;
"RTN","IBTRE2")
0^13^B32496028
"RTN","IBTRE2",1,0)
IBTRE2 ;ALB/AAS - CLAIMS TRACKING - ACTIONS ;27-JUN-93
"RTN","IBTRE2",2,0)
 ;;2.0;INTEGRATED BILLING;**23,121,249**;21-MAR-94
"RTN","IBTRE2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRE2",4,0)
 ;
"RTN","IBTRE2",5,0)
% G EN^IBTRE
"RTN","IBTRE2",6,0)
 ;
"RTN","IBTRE2",7,0)
AT ; -- Add tracking entry
"RTN","IBTRE2",8,0)
 D FULL^VALM1
"RTN","IBTRE2",9,0)
 N X,Y,DIC,DA,DR,DD,DO,DIR,DIRUT,DTOUT,DUOUT,IBETYP,IBQUIT,IBTDT,VAIN,VAINDT,IBTRN,IBTDTE
"RTN","IBTRE2",10,0)
 ;
"RTN","IBTRE2",11,0)
TEST S IBQUIT=0
"RTN","IBTRE2",12,0)
 S DIC(0)="AEQMNZ",DIC="^IBE(356.6,",DIC("S")="I $P(^(0),U,3)<3",DIC("A")="Select Tracking Type: "
"RTN","IBTRE2",13,0)
 D ^DIC K DIC S IBETYP=+Y I +Y<0 G ATQ
"RTN","IBTRE2",14,0)
 W !
"RTN","IBTRE2",15,0)
 ;
"RTN","IBTRE2",16,0)
ADM I IBETYP=$O(^IBE(356.6,"AC",1,0)) D  I IBQUIT G ATQ
"RTN","IBTRE2",17,0)
 .N DIR
"RTN","IBTRE2",18,0)
 .S DIR("?")="     "
"RTN","IBTRE2",19,0)
 .S DIR("?",1)="    Enter any Date!"
"RTN","IBTRE2",20,0)
 .S DIR("?",2)="  "
"RTN","IBTRE2",21,0)
 .S DIR("?",3)="    If the patient was an inpatient on that date the system will use the"
"RTN","IBTRE2",22,0)
 .S DIR("?",4)="    correct admission date.  If you are tracking an admissions at another"
"RTN","IBTRE2",23,0)
 .S DIR("?",5)="    facility you may enter that date.  Enter '??' to get a list of the"
"RTN","IBTRE2",24,0)
 .S DIR("?",6)="    last 10 admissions for this patient."
"RTN","IBTRE2",25,0)
 .S DIR("??")="^D LISTA^IBTRE20"
"RTN","IBTRE2",26,0)
 .S DIR(0)="DO^::AEXTP",DIR("A")="Admission Date"
"RTN","IBTRE2",27,0)
 .D ^DIR K DIR S (IBTDT,VAINDT)=+Y I $P(VAINDT,".",2)="" S VAINDT=VAINDT+.24
"RTN","IBTRE2",28,0)
 .I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
"RTN","IBTRE2",29,0)
 .; -- check for valid admission
"RTN","IBTRE2",30,0)
 .S VA200="" D INP^VADPT I VAIN(1)="" D  ;look for one day admission
"RTN","IBTRE2",31,0)
 ..S IBX=+$O(^(+$O(^DGPM("ATID1",DFN,9999999-IBTDT)),0)),IBX=+$G(^DGPM(IBX,0))
"RTN","IBTRE2",32,0)
 ..I $E(IBX,1,7)=IBTDT S VAINDT=IBX D INP^VADPT ;9999999.9999999
"RTN","IBTRE2",33,0)
 ..I VAIN(1) W !!,"WARNING: This appears to be a one day stay."
"RTN","IBTRE2",34,0)
 .I VAIN(1)="" D
"RTN","IBTRE2",35,0)
 ..W !!,*7,"WARNING: Patient does not appear to be an inpatient on this date!",!
"RTN","IBTRE2",36,0)
 ..I VAIN(7)="" S VAIN(7)=IBTDT,Y=IBTDT D D^DIQ S $P(VAIN(7),"^",2)=Y
"RTN","IBTRE2",37,0)
 .;
"RTN","IBTRE2",38,0)
 .S DIR("?")="No admission was found for this date, enter 'Yes' if you want to add this anyway, or 'No' if you do not wish to track this date."
"RTN","IBTRE2",39,0)
 .S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Admission Date "_$P(VAIN(7),"^",2),DIR("B")="NO"
"RTN","IBTRE2",40,0)
 .D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
"RTN","IBTRE2",41,0)
 .I VAIN(1) D ADM^IBTUTL(VAIN(1))
"RTN","IBTRE2",42,0)
 .I 'VAIN(1) D OTH^IBTUTL(DFN,IBETYP,IBTDT)
"RTN","IBTRE2",43,0)
 .Q
"RTN","IBTRE2",44,0)
 ;
"RTN","IBTRE2",45,0)
OPT I IBETYP=$O(^IBE(356.6,"AC",2,0)) D  I IBQUIT G ATQ
"RTN","IBTRE2",46,0)
 .;
"RTN","IBTRE2",47,0)
 .N DIR,IBSD,IBARRAY
"RTN","IBTRE2",48,0)
 .;get all possible scheduling data for patient
"RTN","IBTRE2",49,0)
 .K ^TMP($J,"SDAMA301")
"RTN","IBTRE2",50,0)
 .S IBARRAY(4)=DFN,IBARRAY("SORT")="P",IBARRAY("FLDS")="1;2;3;10;12",IBSD=$$SDAPI^SDAMA301(.IBARRAY)
"RTN","IBTRE2",51,0)
 .;
"RTN","IBTRE2",52,0)
 .S DIR("?")="Time is Required."
"RTN","IBTRE2",53,0)
 .S DIR("?",1)="    Enter the Outpatient Visit Date."
"RTN","IBTRE2",54,0)
 .S DIR("?",2)="    If no scheduled visit is found you will be given a warning.  Enter"
"RTN","IBTRE2",55,0)
 .S DIR("?",3)="    '??' to get a list of scheduled visits between "_$$DAT1^IBOUTL(IBTBDT)_" and "_$$DAT1^IBOUTL(IBTEDT)_"."
"RTN","IBTRE2",56,0)
 .I '$D(IBTASS) S DIR("?",4)="    Use the change date range action to change listing of scheduled Visits."
"RTN","IBTRE2",57,0)
 .S DIR("??")="^D LISTO^IBTRE20"
"RTN","IBTRE2",58,0)
 .S DIR(0)="DO^::AEXTP",DIR("A")="Outpatient Visit Date"
"RTN","IBTRE2",59,0)
 .D ^DIR K DIR S IBTDT=Y
"RTN","IBTRE2",60,0)
 .I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
"RTN","IBTRE2",61,0)
 .;
"RTN","IBTRE2",62,0)
 .; check scheduling and encounters file for entries
"RTN","IBTRE2",63,0)
 .S X=$D(^TMP($J,"SDAMA301",DFN,IBTDT))
"RTN","IBTRE2",64,0)
 .;
"RTN","IBTRE2",65,0)
 .I 'X,IBSD<0 W !!,*7,"WARNING: Unable to look up Visit information for this Patient" X "N IBX S IBX=0 F  S IBX=$O(^TMP($J,""SDAMA301"",IBX)) W !?5,IBX,?10,$G(^(IBX))"
"RTN","IBTRE2",66,0)
 .;
"RTN","IBTRE2",67,0)
 .I 'X,IBSD S Y=$O(^TMP($J,"SDAMA301",DFN,$P(IBTDT,"."))) I $P(IBTDT,".")=$P(Y,".") S IBTDT=Y,X=1
"RTN","IBTRE2",68,0)
 .;
"RTN","IBTRE2",69,0)
 .; if non say so
"RTN","IBTRE2",70,0)
 .I 'X,IBSD'=-1 W !!,*7,"WARNING: No Visit information for this Patient for this date.",!
"RTN","IBTRE2",71,0)
 .;
"RTN","IBTRE2",72,0)
 .; ask if okay to add entry.
"RTN","IBTRE2",73,0)
 .S Y=IBTDT D D^DIQ S IBTDTE=Y
"RTN","IBTRE2",74,0)
 .S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Visit Date "_IBTDTE,DIR("B")="NO"
"RTN","IBTRE2",75,0)
 .D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
"RTN","IBTRE2",76,0)
 .D OPT^IBTUTL1(DFN,IBETYP,IBTDT,$P($G(^TMP($J,"SDAMA301",DFN,IBTDT)),"^",12))
"RTN","IBTRE2",77,0)
 .K ^TMP($J,"SDAMA301")
"RTN","IBTRE2",78,0)
 .Q
"RTN","IBTRE2",79,0)
 ;
"RTN","IBTRE2",80,0)
SCH I IBETYP=$O(^IBE(356.6,"AC",5,0)) D  I IBQUIT G ATQ
"RTN","IBTRE2",81,0)
 .N DIR
"RTN","IBTRE2",82,0)
 .S DIR("?")="   "
"RTN","IBTRE2",83,0)
 .S DIR("?",1)="    Enter date of the scheduled admission."
"RTN","IBTRE2",84,0)
 .S DIR("?",2)="    If you use the scheduled admission package to schedule admissions"
"RTN","IBTRE2",85,0)
 .S DIR("?",3)="    you may enter '??' to get a list of scheduled admissions between"
"RTN","IBTRE2",86,0)
 .S DIR("?",4)="    "_$$DAT1^IBOUTL(IBTBDT)_" and "_$$DAT1^IBOUTL(IBTEDT)_".  Use the change date range action"
"RTN","IBTRE2",87,0)
 .S DIR("?",5)="    to change listing of scheduled admissions."
"RTN","IBTRE2",88,0)
 .S DIR("?",5)="    This should be a future scheduled admission."
"RTN","IBTRE2",89,0)
 .S DIR(0)="DO^::AEXT",DIR("A")="Scheduled Admission Date"
"RTN","IBTRE2",90,0)
 .S DIR("??")="^D LISTS^IBTRE20"
"RTN","IBTRE2",91,0)
 .D ^DIR K DIR S IBTDT=+Y
"RTN","IBTRE2",92,0)
 .I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
"RTN","IBTRE2",93,0)
 .; ask if okay to add entry.
"RTN","IBTRE2",94,0)
 .D FINDS^IBTRE20
"RTN","IBTRE2",95,0)
 .S Y=IBTDT D D^DIQ S IBTDTE=Y
"RTN","IBTRE2",96,0)
 .S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Scheduled Adm. Date "_IBTDTE,DIR("B")="NO"
"RTN","IBTRE2",97,0)
 .D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
"RTN","IBTRE2",98,0)
 .I IBTDT\1'>DT S VAINDT=IBTDT\1+.24 D INP^VADPT I $G(VAIN(1)) D  Q
"RTN","IBTRE2",99,0)
 ..W !!,"Patient an inpatient on this date, using inpatient admission."
"RTN","IBTRE2",100,0)
 ..D ADM^IBTUTL(VAIN(1))
"RTN","IBTRE2",101,0)
 .D SCH^IBTUTL2(DFN,IBTDT)
"RTN","IBTRE2",102,0)
 .Q
"RTN","IBTRE2",103,0)
 I $G(IBQUIT) G ATQ
"RTN","IBTRE2",104,0)
 I $D(IBTASS) Q  ; leave prematurely if from assign reason
"RTN","IBTRE2",105,0)
 ;
"RTN","IBTRE2",106,0)
 I $G(IBTRN) N IBTATRK S IBTATRK=1 D QE1^IBTRE1
"RTN","IBTRE2",107,0)
 ;
"RTN","IBTRE2",108,0)
 D BLD^IBTRE
"RTN","IBTRE2",109,0)
ATQ Q:$D(IBTASS)
"RTN","IBTRE2",110,0)
 I $G(IBQUIT) W !,"Nothing Added",! D PAUSE^VALM1
"RTN","IBTRE2",111,0)
 S VALMBCK="R"
"RTN","IBTRE2",112,0)
 Q
"RTN","IBTRE20")
0^14^B13573861
"RTN","IBTRE20",1,0)
IBTRE20 ;ALB/AAS - CLAIMS TRACKING EXECUTABLE HELP ;13-OCT-93
"RTN","IBTRE20",2,0)
 ;;2.0;INTEGRATED BILLING;**40,91,249**;21-MAR-94
"RTN","IBTRE20",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRE20",4,0)
 ;
"RTN","IBTRE20",5,0)
 ;
"RTN","IBTRE20",6,0)
LISTA ; -- list inpatient admissions for patient
"RTN","IBTRE20",7,0)
 N C,I,J,N,X,Y,IBX
"RTN","IBTRE20",8,0)
 K ^TMP("IBM",$J)
"RTN","IBTRE20",9,0)
 Q:'$D(DFN)
"RTN","IBTRE20",10,0)
 S C=0 F I=0:0 S I=$O(^DGPM("ATID1",DFN,I)) Q:'I  S N=$O(^(I,0)) I $D(^DGPM(+N,0)) S D=^(0),C=C+1,^TMP("IBM",$J,C)=N_"^"_D
"RTN","IBTRE20",11,0)
 ;
"RTN","IBTRE20",12,0)
 I C=0 W !!,"No Admissions to Choose From." Q
"RTN","IBTRE20",13,0)
 ;
"RTN","IBTRE20",14,0)
 W !!,"CHOOSE FROM:" F IBI=1:1:10 Q:'$D(^TMP("IBM",$J,IBI))  D WRA
"RTN","IBTRE20",15,0)
 K ^TMP("IBM",$J)
"RTN","IBTRE20",16,0)
 Q
"RTN","IBTRE20",17,0)
 ;
"RTN","IBTRE20",18,0)
WRA S IBX=$P(^TMP("IBM",$J,IBI),"^",2,20),Y=+IBX X ^DD("DD")
"RTN","IBTRE20",19,0)
 W !,"     ",Y
"RTN","IBTRE20",20,0)
 W ?27,$S('$D(^DG(405.1,+$P(IBX,"^",4),0)):"",$P(^(0),"^",7)]"":$P(^(0),"^",7),1:$E($P(^(0),"^",1),1,20))
"RTN","IBTRE20",21,0)
 ;
"RTN","IBTRE20",22,0)
 W ?50,"TO:  ",$E($P($G(^DIC(42,+$P(IBX,"^",6),0)),"^"),1,17)
"RTN","IBTRE20",23,0)
 I $D(^DG(405.4,+$P(IBX,"^",7),0)) W " [",$E($P(^(0),"^",1),1,10),"]"
"RTN","IBTRE20",24,0)
 I $P(IBX,"^",18)=9 W !?23,"FROM:  ",$P($G(^DIC(4,+$P(IBX,"^",5),0)),"^")
"RTN","IBTRE20",25,0)
 Q
"RTN","IBTRE20",26,0)
 ;
"RTN","IBTRE20",27,0)
LISTO ; -- list outpatient appointments
"RTN","IBTRE20",28,0)
 N C,I,J,N,X,Y,IBX,IBI,IBDT
"RTN","IBTRE20",29,0)
 ; assumes ^TMP($J,"SDAMA301",DFN,IBTDT) defined and IBSD(result from SD)
"RTN","IBTRE20",30,0)
 Q:'$D(DFN)
"RTN","IBTRE20",31,0)
 ;
"RTN","IBTRE20",32,0)
 I IBSD<0 W !!,"Unable to look-up Outpatient Visits to Choose From." D  Q
"RTN","IBTRE20",33,0)
 . N IBX F  S IBX=$O(^TMP($J,"SDAMA301",IBX)) Q:'IBX  W !?5,IBX,?10,$G(^(IBX))
"RTN","IBTRE20",34,0)
 ;
"RTN","IBTRE20",35,0)
 I IBSD=0 W !!,"No Outpatient Visits to Choose From." Q
"RTN","IBTRE20",36,0)
 ;
"RTN","IBTRE20",37,0)
 W !!,"CHOOSE FROM:" S IBI=0,IBDT=$G(IBTBDT) F  S IBDT=$O(^TMP($J,"SDAMA301",DFN,IBDT)),IBI=IBI+1 Q:'IBDT!(IBI>12)  D WRO
"RTN","IBTRE20",38,0)
 Q
"RTN","IBTRE20",39,0)
 ;
"RTN","IBTRE20",40,0)
WRO N IBSDD,Y
"RTN","IBTRE20",41,0)
 S Y=IBDT X ^DD("DD") W !,"     ",Y
"RTN","IBTRE20",42,0)
 S IBSDD=$G(^TMP($J,"SDAMA301",DFN,IBDT))
"RTN","IBTRE20",43,0)
 W ?27,"Clinic: ",$P($P(IBSDD,"^",2),";",2),?60," Type: ",$E($P($P(IBSDD,"^",10),";",2),1,12)
"RTN","IBTRE20",44,0)
 ;
"RTN","IBTRE20",45,0)
 S IBSDD=$P(IBSDD,"^",3) I $L(IBSDD),$P(IBSDD,";")'="R" W !,?10," [Status: ",$P(IBSDD,";",2),"]"
"RTN","IBTRE20",46,0)
 Q
"RTN","IBTRE20",47,0)
 ;
"RTN","IBTRE20",48,0)
LISTS ; -- list scheduled admissions
"RTN","IBTRE20",49,0)
 N C,I,J,N,X,Y,IBX,IBI
"RTN","IBTRE20",50,0)
 K ^TMP("IBM",$J)
"RTN","IBTRE20",51,0)
 Q:'$D(DFN)
"RTN","IBTRE20",52,0)
 S C=0 F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) Q:'I  I $D(^DGS(41.1,+I,0)) S D=$G(^DGS(41.1,+I,0)) I $P(D,"^",2)'<IBTBDT,$P(D,"^",2)'>IBTEDT S C=C+1,^TMP("IBM",$J,C)=I_"^"_D
"RTN","IBTRE20",53,0)
 ;
"RTN","IBTRE20",54,0)
 I C=0 W !!,"No Scheduled Admissions to Choose From." Q
"RTN","IBTRE20",55,0)
 ;
"RTN","IBTRE20",56,0)
 W !!,"CHOOSE FROM:" F IBI=1:1:12 Q:'$D(^TMP("IBM",$J,IBI))  D WRS
"RTN","IBTRE20",57,0)
 K ^TMP("IBM",$J)
"RTN","IBTRE20",58,0)
 Q
"RTN","IBTRE20",59,0)
 ;
"RTN","IBTRE20",60,0)
WRS S IBX=$P($G(^TMP("IBM",$J,IBI)),"^",2,20),Y=$P(IBX,"^",2) X ^DD("DD")
"RTN","IBTRE20",61,0)
 W !,"     ",Y
"RTN","IBTRE20",62,0)
 W ?27," Spec: ",$E($P($G(^DIC(45.7,+$P(IBX,"^",9),0)),"^"),1,25)
"RTN","IBTRE20",63,0)
 ;
"RTN","IBTRE20",64,0)
 W ?58," To: ",$E($P($G(^DIC(42,+$P(IBX,"^",8),0)),"^"),1,16)
"RTN","IBTRE20",65,0)
 Q
"RTN","IBTRE20",66,0)
 ;
"RTN","IBTRE20",67,0)
FINDS ; -- match a scheduled admission
"RTN","IBTRE20",68,0)
 Q:'$D(DFN)
"RTN","IBTRE20",69,0)
 Q:'$D(IBTDT)
"RTN","IBTRE20",70,0)
 N I,J
"RTN","IBTRE20",71,0)
 S I=0 F  S I=$O(^DGS(41.1,"B",DFN,I)) Q:'I  S J=$P($G(^DGS(41.1,I,0)),"^",2) Q:IBTDT=J  I $P(IBTDT,".")=$P(J,".") S IBTDT=J Q
"RTN","IBTRE20",72,0)
 Q
"RTN","IBTRE20",73,0)
 ;
"RTN","IBTRE20",74,0)
ID ; -- write out identifier for entry, called by ^dd(356,0,"id","write")
"RTN","IBTRE20",75,0)
 N IBOE,IBOE0
"RTN","IBTRE20",76,0)
 S IBOE=$P(^(0),"^",4),IBOE0=$$SCE^IBSDU(+IBOE) I IBOE,$P(IBOE0,U,4) W ?58,"["_$E($P($G(^SC(+$P(IBOE0,U,4),0)),U),1,20),"]"
"RTN","IBTRE20",77,0)
 Q
"RTN","IBTRE20",78,0)
 ;
"RTN","IBTRE20",79,0)
PRINT ; patch 40, custom look up.  Input:  IBX  --  0th node in file #356.
"RTN","IBTRE20",80,0)
 Q:$D(IBX)[0
"RTN","IBTRE20",81,0)
 N NAM,EPIS,EVENT,DISPL,CLIN
"RTN","IBTRE20",82,0)
 S NAM=$E($P($G(^DPT(+$P(IBX,U,2),0)),U),1,22)
"RTN","IBTRE20",83,0)
 S EPIS=$P($P(IBX,U,6),".")
"RTN","IBTRE20",84,0)
 I EPIS S EPIS=$E(EPIS,4,5)_"-"_$E(EPIS,6,7)_"-"_$E(EPIS,2,3)
"RTN","IBTRE20",85,0)
 S EVENT=$E($P($G(^IBE(356.6,+$P(IBX,U,18),0)),U),1,5)
"RTN","IBTRE20",86,0)
 S DISPL=$$EXPAND^IBTRE(356,.07,$P(IBX,U,7))
"RTN","IBTRE20",87,0)
 S CLIN=+$$SCE^IBSDU(+$P(IBX,"^",4),4)
"RTN","IBTRE20",88,0)
 I CLIN S DISPL="["_$E($P($G(^SC(CLIN,0)),U),1,22)_"]"
"RTN","IBTRE20",89,0)
 W ?13,NAM,?37,EPIS,?47,EVENT,?54,DISPL
"RTN","IBTRE20",90,0)
 Q
"RTN","IBTUTL1")
0^20^B11559784
"RTN","IBTUTL1",1,0)
IBTUTL1 ;ALB/AAS - CLAIMS TRACKING UTILITY ROUTINE ;21-JUN-93
"RTN","IBTUTL1",2,0)
 ;;2.0;INTEGRATED BILLING;**13,223,249**;21-MAR-94
"RTN","IBTUTL1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUTL1",4,0)
 ;
"RTN","IBTUTL1",5,0)
OPT(DFN,IBETYP,IBTDT,ENCTR,IBRMARK,IBVSIT) ; -- add outpatient care entries
"RTN","IBTUTL1",6,0)
 ; -- input   dfn  := patient pointer to 2
"RTN","IBTUTL1",7,0)
 ;          ibetyp := pointer to type entry in 356.6
"RTN","IBTUTL1",8,0)
 ;          ibtdt  := episode date
"RTN","IBTUTL1",9,0)
 ;          enctr  := pointer to opt. encounter file (optional)
"RTN","IBTUTL1",10,0)
 ;        ibrmark  := text of reason not billable (optional)
"RTN","IBTUTL1",11,0)
 ;         ibvsit  := pointer to visit file (optional)
"RTN","IBTUTL1",12,0)
 ;
"RTN","IBTUTL1",13,0)
 N X,Y,DA,DR,DIE,DIC
"RTN","IBTUTL1",14,0)
 I $G(IBETYP) S IBETYP=$O(^IBE(356.6,"AC",2,0))
"RTN","IBTUTL1",15,0)
 S X=$O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,0)) I X S IBTRN=X G OPTQ
"RTN","IBTUTL1",16,0)
 D ADDT^IBTUTL
"RTN","IBTUTL1",17,0)
 S DA=IBTRN,DIE="^IBT(356,"
"RTN","IBTUTL1",18,0)
 I IBTRN<1 G OPTQ
"RTN","IBTUTL1",19,0)
 L +^IBT(356,+IBTRN):10 I '$T G OPTQ
"RTN","IBTUTL1",20,0)
 S DR=".02////"_$G(DFN)_";.03////"_$G(IBVSIT)_";.04////"_$G(ENCTR)_";.06////"_+IBTDT_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD^IBTUTL(IBETYP)
"RTN","IBTUTL1",21,0)
 I $G(IBRMARK)'="" S DR=DR_";.19///"_IBRMARK
"RTN","IBTUTL1",22,0)
 D ^DIE K DA,DR,DIE
"RTN","IBTUTL1",23,0)
 L -^IBT(356,+IBTRN)
"RTN","IBTUTL1",24,0)
OPTQ Q
"RTN","IBTUTL1",25,0)
 ;
"RTN","IBTUTL1",26,0)
REFILL(DFN,IBETYP,IBTDT,IBRXN,IBRXN1,IBRMARK,IBEABD) ; -- add refill
"RTN","IBTUTL1",27,0)
 ; -- input   dfn   := patient pointer to 2
"RTN","IBTUTL1",28,0)
 ;          ibetyp  := pointer to type entry in 356.6
"RTN","IBTUTL1",29,0)
 ;          ibtdt   := episode date (refill date)
"RTN","IBTUTL1",30,0)
 ;          ibrxn   := pointer to 52
"RTN","IBTUTL1",31,0)
 ;          ibrxn1  := refill multiple entry
"RTN","IBTUTL1",32,0)
 ;          ibrmark := non billable reason if unsure
"RTN","IBTUTL1",33,0)
 ;          ibeabd  := optional, can specify an earliest auto bill date
"RTN","IBTUTL1",34,0)
 ;
"RTN","IBTUTL1",35,0)
 N X,Y,DA,DR,DIE,DIC
"RTN","IBTUTL1",36,0)
 ;S X=$O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,0)) I X S IBTRN=X G REFILLQ
"RTN","IBTUTL1",37,0)
 S X=$O(^IBT(356,"ARXFL",IBRXN,IBRXN1,0)) I X S IBTRN=X G REFILLQ
"RTN","IBTUTL1",38,0)
 D ADDT^IBTUTL
"RTN","IBTUTL1",39,0)
 I IBTRN<1 G REFILLQ
"RTN","IBTUTL1",40,0)
 S DA=IBTRN,DIE="^IBT(356,"
"RTN","IBTUTL1",41,0)
 L +^IBT(356,+IBTRN):10 I '$T G REFILLQ
"RTN","IBTUTL1",42,0)
 S DR=".02////"_$G(DFN)_";.06////"_+IBTDT_";.08////"_IBRXN_";.1////"_IBRXN1_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_$S($G(IBDUZ):IBDUZ,1:DUZ)_";.17////"_$S($G(IBEABD):IBEABD,1:$$EABD^IBTUTL(IBETYP))
"RTN","IBTUTL1",43,0)
 I $G(IBRMARK)'="" S DR=DR_";.19///"_IBRMARK
"RTN","IBTUTL1",44,0)
 D ^DIE K DA,DR,DIE
"RTN","IBTUTL1",45,0)
 L -^IBT(356,+IBTRN)
"RTN","IBTUTL1",46,0)
REFILLQ Q
"RTN","IBTUTL1",47,0)
 ;
"RTN","IBTUTL1",48,0)
PRO(DFN,IBTDT,IBPRO,IBRMARK) ; -- add prosthetic entries
"RTN","IBTUTL1",49,0)
 ; -- input   dfn  := patient pointer to 2
"RTN","IBTUTL1",50,0)
 ;          ibetyp := pointer to type entry in 356.6
"RTN","IBTUTL1",51,0)
 ;          ibtdt  := episode date
"RTN","IBTUTL1",52,0)
 ;
"RTN","IBTUTL1",53,0)
 N X,Y,DA,DR,DIE,DIC,IBETYP
"RTN","IBTUTL1",54,0)
 ;S IBETYP=$O(^IBE(356.6,"ACODE",4,0))
"RTN","IBTUTL1",55,0)
 S IBETYP=$O(^IBE(356.6,"AC",3,0)) ;prosthetics type
"RTN","IBTUTL1",56,0)
 S X=$O(^IBT(356,"APRO",IBPRO,0)) I X S IBTRN=X G PROQ
"RTN","IBTUTL1",57,0)
 D ADDT^IBTUTL
"RTN","IBTUTL1",58,0)
 I IBTRN<1 G PROQ
"RTN","IBTUTL1",59,0)
 S DA=IBTRN,DIE="^IBT(356,"
"RTN","IBTUTL1",60,0)
 L +^IBT(356,+IBTRN):10 I '$T G PROQ
"RTN","IBTUTL1",61,0)
 S DR=".02////"_$G(DFN)_";.06////"_+IBTDT_";.09////"_IBPRO_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD^IBTUTL(IBETYP)
"RTN","IBTUTL1",62,0)
 I $G(IBRMARK)'="" S DR=DR_";.19///"_IBRMARK
"RTN","IBTUTL1",63,0)
 D ^DIE K DA,DR,DIE
"RTN","IBTUTL1",64,0)
 L -^IBT(356,+IBTRN)
"RTN","IBTUTL1",65,0)
PROQ Q
"RTN","IBTUTL1",66,0)
 ;
"RTN","IBTUTL1",67,0)
PT(DFN) ; -- format patient name - last 4 for output
"RTN","IBTUTL1",68,0)
 S Y="" I '$G(DFN) G PTQ
"RTN","IBTUTL1",69,0)
 I '$D(VA("PID")) D PID^VADPT
"RTN","IBTUTL1",70,0)
 S Y=$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")
"RTN","IBTUTL1",71,0)
PTQ Q Y
"RTN","IBTUTL1",72,0)
 ;
"RTN","IBTUTL1",73,0)
PRODATA(IBDA) ; -- return data from prosthetics file
"RTN","IBTUTL1",74,0)
 N IBDA0,DA,DIC,DIE,DR
"RTN","IBTUTL1",75,0)
 K IBRMPR ; only one array at a time
"RTN","IBTUTL1",76,0)
 I '$G(IBDA) G PRODAQ
"RTN","IBTUTL1",77,0)
 S IBDA0=$G(^RMPR(660,+IBDA,0))
"RTN","IBTUTL1",78,0)
 G:IBDA0="" PRODAQ
"RTN","IBTUTL1",79,0)
DIQ S DIC="^RMPR(660,",DR=".01;1:5;7;10;12:17;24"
"RTN","IBTUTL1",80,0)
 S DIQ="IBRMPR",DIQ(0)="E",DA=IBDA
"RTN","IBTUTL1",81,0)
 D EN^DIQ1
"RTN","IBTUTL1",82,0)
PRODAQ Q
"RTN","IBYZ15A")
1^12
"VER")
8.0^22
**END**
**END**
