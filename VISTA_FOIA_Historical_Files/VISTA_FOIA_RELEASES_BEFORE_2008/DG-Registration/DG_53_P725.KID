KIDS Distribution saved on Feb 01, 2007@12:10:15
DG*5.3*725, EAS*1*77, DGBT*1*13
**KIDS**:DG*5.3*725^EAS*1.0*77^DGBT*1.0*13^

**INSTALL NAME**
DG*5.3*725
"BLD",6499,0)
DG*5.3*725^REGISTRATION^0^3070201^y
"BLD",6499,1,0)
^^4^4^3061201^
"BLD",6499,1,1,0)
This patch contain routines that have been modified
"BLD",6499,1,2,0)
to call the Scheduling Encapsulation API SDAPI^SDAMA301
"BLD",6499,1,3,0)
instead of referencing the global for appointment data retrieval. 
"BLD",6499,1,4,0)
This patch also addresses the error handling when an error occurs.
"BLD",6499,4,0)
^9.64PA^^
"BLD",6499,6.3)
12
"BLD",6499,"ABPKG")
n
"BLD",6499,"KRN",0)
^9.67PA^8989.52^19
"BLD",6499,"KRN",.4,0)
.4
"BLD",6499,"KRN",.401,0)
.401
"BLD",6499,"KRN",.402,0)
.402
"BLD",6499,"KRN",.403,0)
.403
"BLD",6499,"KRN",.5,0)
.5
"BLD",6499,"KRN",.84,0)
.84
"BLD",6499,"KRN",3.6,0)
3.6
"BLD",6499,"KRN",3.8,0)
3.8
"BLD",6499,"KRN",9.2,0)
9.2
"BLD",6499,"KRN",9.8,0)
9.8
"BLD",6499,"KRN",9.8,"NM",0)
^9.68A^18^16
"BLD",6499,"KRN",9.8,"NM",3,0)
DGDEATH^^0^B34349715
"BLD",6499,"KRN",9.8,"NM",4,0)
DGENRPD2^^0^B45286648
"BLD",6499,"KRN",9.8,"NM",5,0)
DGENRPT2^^0^B40929861
"BLD",6499,"KRN",9.8,"NM",6,0)
DGENRPT5^^0^B5443273
"BLD",6499,"KRN",9.8,"NM",7,0)
DGFFPLM^^0^B6269305
"BLD",6499,"KRN",9.8,"NM",8,0)
DGMTOFA^^0^B19818712
"BLD",6499,"KRN",9.8,"NM",9,0)
DGQESC2^^0^B21637202
"BLD",6499,"KRN",9.8,"NM",10,0)
DGQPTQ2^^0^B36432808
"BLD",6499,"KRN",9.8,"NM",11,0)
DGRRLU0^^0^B37459964
"BLD",6499,"KRN",9.8,"NM",12,0)
DGYPSDE2^^0^B12451578
"BLD",6499,"KRN",9.8,"NM",13,0)
VAFCCCAP^^0^B23061055
"BLD",6499,"KRN",9.8,"NM",14,0)
VAFCCOPT^^0^B11265330
"BLD",6499,"KRN",9.8,"NM",15,0)
VAFHCCAP^^0^B18442978
"BLD",6499,"KRN",9.8,"NM",16,0)
VAFHCOPT^^0^B8310849
"BLD",6499,"KRN",9.8,"NM",17,0)
VAFHUTL^^0^B19820205
"BLD",6499,"KRN",9.8,"NM",18,0)
DGRP14^^0^B3348919
"BLD",6499,"KRN",9.8,"NM","B","DGDEATH",3)

"BLD",6499,"KRN",9.8,"NM","B","DGENRPD2",4)

"BLD",6499,"KRN",9.8,"NM","B","DGENRPT2",5)

"BLD",6499,"KRN",9.8,"NM","B","DGENRPT5",6)

"BLD",6499,"KRN",9.8,"NM","B","DGFFPLM",7)

"BLD",6499,"KRN",9.8,"NM","B","DGMTOFA",8)

"BLD",6499,"KRN",9.8,"NM","B","DGQESC2",9)

"BLD",6499,"KRN",9.8,"NM","B","DGQPTQ2",10)

"BLD",6499,"KRN",9.8,"NM","B","DGRP14",18)

"BLD",6499,"KRN",9.8,"NM","B","DGRRLU0",11)

"BLD",6499,"KRN",9.8,"NM","B","DGYPSDE2",12)

"BLD",6499,"KRN",9.8,"NM","B","VAFCCCAP",13)

"BLD",6499,"KRN",9.8,"NM","B","VAFCCOPT",14)

"BLD",6499,"KRN",9.8,"NM","B","VAFHCCAP",15)

"BLD",6499,"KRN",9.8,"NM","B","VAFHCOPT",16)

"BLD",6499,"KRN",9.8,"NM","B","VAFHUTL",17)

"BLD",6499,"KRN",19,0)
19
"BLD",6499,"KRN",19,"NM",0)
^9.68A^^
"BLD",6499,"KRN",19.1,0)
19.1
"BLD",6499,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6499,"KRN",101,0)
101
"BLD",6499,"KRN",101,"NM",0)
^9.68A^^
"BLD",6499,"KRN",409.61,0)
409.61
"BLD",6499,"KRN",771,0)
771
"BLD",6499,"KRN",870,0)
870
"BLD",6499,"KRN",8989.51,0)
8989.51
"BLD",6499,"KRN",8989.52,0)
8989.52
"BLD",6499,"KRN",8994,0)
8994
"BLD",6499,"KRN","B",.4,.4)

"BLD",6499,"KRN","B",.401,.401)

"BLD",6499,"KRN","B",.402,.402)

"BLD",6499,"KRN","B",.403,.403)

"BLD",6499,"KRN","B",.5,.5)

"BLD",6499,"KRN","B",.84,.84)

"BLD",6499,"KRN","B",3.6,3.6)

"BLD",6499,"KRN","B",3.8,3.8)

"BLD",6499,"KRN","B",9.2,9.2)

"BLD",6499,"KRN","B",9.8,9.8)

"BLD",6499,"KRN","B",19,19)

"BLD",6499,"KRN","B",19.1,19.1)

"BLD",6499,"KRN","B",101,101)

"BLD",6499,"KRN","B",409.61,409.61)

"BLD",6499,"KRN","B",771,771)

"BLD",6499,"KRN","B",870,870)

"BLD",6499,"KRN","B",8989.51,8989.51)

"BLD",6499,"KRN","B",8989.52,8989.52)

"BLD",6499,"KRN","B",8994,8994)

"BLD",6499,"QUES",0)
^9.62^^
"BLD",6499,"REQB",0)
^9.611^6^5
"BLD",6499,"REQB",2,0)
DG*5.3*585^1
"BLD",6499,"REQB",3,0)
DG*5.3*485^1
"BLD",6499,"REQB",4,0)
DG*5.3*568^1
"BLD",6499,"REQB",5,0)
DG*5.3*598^1
"BLD",6499,"REQB",6,0)
DG*5.3*538^1
"BLD",6499,"REQB","B","DG*5.3*485",3)

"BLD",6499,"REQB","B","DG*5.3*538",6)

"BLD",6499,"REQB","B","DG*5.3*568",4)

"BLD",6499,"REQB","B","DG*5.3*585",2)

"BLD",6499,"REQB","B","DG*5.3*598",5)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
725^3070201
"PKG",5,22,1,"PAH",1,1,0)
^^4^4^3070201
"PKG",5,22,1,"PAH",1,1,1,0)
This patch contain routines that have been modified
"PKG",5,22,1,"PAH",1,1,2,0)
to call the Scheduling Encapsulation API SDAPI^SDAMA301
"PKG",5,22,1,"PAH",1,1,3,0)
instead of referencing the global for appointment data retrieval. 
"PKG",5,22,1,"PAH",1,1,4,0)
This patch also addresses the error handling when an error occurs.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","DGDEATH")
0^3^B34349715
"RTN","DGDEATH",1,0)
DGDEATH ;ALB/MRL/PJR-PROCESS DECEASED PATIENTS ; 10/27/04 9:45pm
"RTN","DGDEATH",2,0)
 ;;5.3;Registration;**45,84,101,149,392,545,595,568,563,725**;Aug 13, 1993;Build 12
"RTN","DGDEATH",3,0)
 ;
"RTN","DGDEATH",4,0)
GET N DGMTI,DATA
"RTN","DGDEATH",5,0)
 S DGDTHEN="" W !! S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S (DA,DFN)=+Y
"RTN","DGDEATH",6,0)
 S DGDOLD=$G(^DPT(DFN,.35))
"RTN","DGDEATH",7,0)
 I $D(^DPT(DFN,.1)) W !?3,"Patient is currently in-house.  Discharge him with a discharge type of DEATH." G GET
"RTN","DGDEATH",8,0)
 I $S($D(^DPT(DFN,.35)):^(.35),1:"") F DGY=0:0 S DGY=$O(^DGPM("ATID1",DFN,DGY)) Q:'DGY  S DGDA=$O(^(DGY,0)) I $D(^DGPM(+DGDA,0)),$P(^(0),"^",17)]"" S DGXX=$P(^(0),"^",17),DGXX=^DGPM(DGXX,0) I "^12^38^"[("^"_$P(DGXX,"^",18)_"^") G DIS
"RTN","DGDEATH",9,0)
 D NOW^%DTC S DGNOW=%
"RTN","DGDEATH",10,0)
 S ^TMP("DEATH",$J)=1
"RTN","DGDEATH",11,0)
 K A W ! S DIE=DIC,DR=".351" D ^DIE
"RTN","DGDEATH",12,0)
 I '$D(^DPT(DFN,.35)) K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",13,0)
 S DGDNEW=^DPT(DFN,.35)
"RTN","DGDEATH",14,0)
 I $P(DGDNEW,"^",1)="",$P(DGDNEW,"^",2)'="" S DR=".352////@" D ^DIE
"RTN","DGDEATH",15,0)
 I $P(DGDNEW,"^",1)="" K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",16,0)
 I $P(DGDNEW,"^",1)'="" S DR=".353" D ^DIE
"RTN","DGDEATH",17,0)
 I DGDOLD'=DGDNEW D DISCHRGE
"RTN","DGDEATH",18,0)
 I $P(DGDOLD,"^",1)'=$P(DGDNEW,"^",1) D XFR
"RTN","DGDEATH",19,0)
 K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",20,0)
 ;
"RTN","DGDEATH",21,0)
DIS W !,"Patient has a discharge type of Death",!,"Edit the discharge",!
"RTN","DGDEATH",22,0)
Q K A,DA,DFN,DGDA,DIC,DIE,DR,DGXX,DGY,DGDTHEN,DGDOLD,DGDNEW,DGDONOT Q
"RTN","DGDEATH",23,0)
XFR ; called from set x-ref of field .351 of file 2
"RTN","DGDEATH",24,0)
 N DGPCMM,DGFAPT,DGFAPTI,DGFAPT1
"RTN","DGDEATH",25,0)
 Q:'$D(DFN)
"RTN","DGDEATH",26,0)
 K DGTEXT D ^DGPATV S DGDEATH=$$GET1^DIQ(2,DFN,.351,"I"),XMSUB="PATIENT HAS EXPIRED",DGCT=0
"RTN","DGDEATH",27,0)
 D DEMOG
"RTN","DGDEATH",28,0)
 S DGT=X-.0001,(Y,DGDDT)=X,DG1="" D:DGT]"" ^DGPMSTAT
"RTN","DGDEATH",29,0)
 S Y=$$FMTE^XLFDT(Y),Y=$S(Y]"":Y,1:"UNKNOWN")
"RTN","DGDEATH",30,0)
 S DGDONOT=0 D APTT3
"RTN","DGDEATH",31,0)
 D LINE("")
"RTN","DGDEATH",32,0)
 D LINE("      Date/Time of Death: "_DEATHVAL_$S(DGDONOT:"",'DG1:"",$D(DGDTHEN):"",1:"  (While an inpatient)"))
"RTN","DGDEATH",33,0)
 D LINE("")
"RTN","DGDEATH",34,0)
 I '$D(ADM),DG1,$D(^DGPM(+DGA1,0)) S ADM=+^DGPM($P(^(0),"^",14),0)
"RTN","DGDEATH",35,0)
 S Y=$$FMTE^XLFDT($S($D(ADM):ADM,1:""))
"RTN","DGDEATH",36,0)
 D LINE($S($D(DGDTHEN):"",DG1:"     Admission Date/Time: "_Y_$S((DGDDT-ADM)<1:"  (Within 24 hours of hospitalization)",1:""),1:""))
"RTN","DGDEATH",37,0)
 D LINE("")
"RTN","DGDEATH",38,0)
 S DGX=$P($G(^DGPM(+$G(DGA1),0)),"^",6),DGX=$P($G(^DIC(42,+DGX,0)),U,1)
"RTN","DGDEATH",39,0)
 D LINE($S($D(DGDTHEN):"",('DG1):"",$D(DGA1):"             Admitted To: "_$S(DGX]"":DGX,1:"UNKNOWN"),1:"")) K DGX
"RTN","DGDEATH",40,0)
 D LINE("")
"RTN","DGDEATH",41,0)
 I DG1&'$D(DGDTHEN) D 
"RTN","DGDEATH",42,0)
 . D LINE($S($D(DGXFR0):"           Last Transfer: "_$S($D(^DIC(42,+$P(DGXFR0,"^",6),0)):$P(^(0),"^"),1:"UNKNOWN"),1:""))
"RTN","DGDEATH",43,0)
 . D LINE("")
"RTN","DGDEATH",44,0)
F N DGARRAY,SDCNT S DGFAPT=DGDEATH,DGFAPTI=""
"RTN","DGDEATH",45,0)
 S DGARRAY("FLDS")=3,DGARRAY(4)=DFN,DGARRAY("SORT")="P",DGARRAY(1)=DT,DGARRAY(3)="I;R"
"RTN","DGDEATH",46,0)
 S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGDEATH",47,0)
 ;
"RTN","DGDEATH",48,0)
 I SDCNT>0 F  S DGFAPT=$O(^TMP($J,"SDAMA301",DFN,DGFAPT)) Q:'DGFAPT  S DGFAPT1=$G(^TMP($J,"SDAMA301",DFN,DGFAPT)) Q:DGFAPT1']""  D  Q:DGFAPTI
"RTN","DGDEATH",49,0)
 .I $P($P(DGFAPT1,U,3),";")'["C" D LINE("NOTE: Patient has future appointments scheduled!!") S DGFAPTI=1
"RTN","DGDEATH",50,0)
 S DGSCHAD=0 D SA I DGSCHAD D LINE("NOTE: Patient had scheduled admissions which have been cancelled!!")
"RTN","DGDEATH",51,0)
 I 'DGVETS D LINE("Patient is a NON-VETERAN."_$S($D(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)):"  ["_$P(^(0),"^",1)_"]",1:""))
"RTN","DGDEATH",52,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",53,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",54,0)
Q1 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",55,0)
 K DGDEATH,DGSCHAD,DGI,Y,DGDDT,^TMP($J,"SDAMA301") D KILL^DGPATV K ADM,DG1,DGA1,DGCT,DGT,DGXX,DGY,Z Q
"RTN","DGDEATH",56,0)
SA F DGI=0:0 S DGI=$O(^DGS(41.1,"B",DFN,DGI)) Q:'DGI  I $D(^DGS(41.1,DGI,0)),($P(^(0),"^",13)']""),($P(^(0),"^",17)']"") S $P(^(0),"^",13)=DGDEATH,$P(^(0),"^",14)=+DUZ,$P(^(0),"^",15)=1,$P(^(0),"^",16)=2,DGSCHAD=1
"RTN","DGDEATH",57,0)
 Q
"RTN","DGDEATH",58,0)
 ;
"RTN","DGDEATH",59,0)
DEL ; delete death bulletin
"RTN","DGDEATH",60,0)
 N DGPCMM,DELBY,DELTM,DTHINFO
"RTN","DGDEATH",61,0)
 S DFN=+$G(DA) I '$D(^DPT(DFN,0)) Q  ; no patient node
"RTN","DGDEATH",62,0)
 I +$G(^DPT(DFN,.35)) Q  ; not deletion
"RTN","DGDEATH",63,0)
 S DGDEATH=X,XMSUB="Patient Death has been Deleted",DGCT=0
"RTN","DGDEATH",64,0)
 D ^DGPATV
"RTN","DGDEATH",65,0)
 D LINE("The date of death for the following patient has been deleted.")
"RTN","DGDEATH",66,0)
 D LINE("")
"RTN","DGDEATH",67,0)
 D DEMOG
"RTN","DGDEATH",68,0)
 D LINE("")
"RTN","DGDEATH",69,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",70,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",71,0)
 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",72,0)
 K DGCT,DGDEATH D KILL^DGPATV
"RTN","DGDEATH",73,0)
 Q
"RTN","DGDEATH",74,0)
 ;
"RTN","DGDEATH",75,0)
DEMOG ; list main demographics
"RTN","DGDEATH",76,0)
 D LINE("                    NAME: "_DGNAME)
"RTN","DGDEATH",77,0)
 D LINE("                     SSN: "_$P(SSN,"^",2))
"RTN","DGDEATH",78,0)
 D LINE("                     DOB: "_$P(DOB,"^",2))
"RTN","DGDEATH",79,0)
 I DGVETS D
"RTN","DGDEATH",80,0)
 . N DGX
"RTN","DGDEATH",81,0)
 . S DGX=$G(^DPT(DFN,.31))
"RTN","DGDEATH",82,0)
 . S DGLOCATN=$$FIND1^DIC(4,"","MX","`"_+$P(DGX,U,4)),DGLOCATN=$S(+DGLOCATN>0:$P($$NS^XUAF4(DGLOCATN),U),1:"NOT LISTED")
"RTN","DGDEATH",83,0)
 . D LINE("   CLAIM FOLDER LOCATION: "_$S($D(DGLOCATN):DGLOCATN,1:"NOT LISTED"))
"RTN","DGDEATH",84,0)
 . D LINE("            CLAIM NUMBER: "_$S($P(DGX,"^",3)]"":$P(DGX,"^",3),1:"NOT LISTED"))
"RTN","DGDEATH",85,0)
 D LINE("   COORDINATING MASTER OF RECORD: "_DGCMOR)
"RTN","DGDEATH",86,0)
 D GETS^DIQ(2,DFN_",",".351;.353;.354;.355","E","DTHINFO")
"RTN","DGDEATH",87,0)
 S DEATHVAL=$G(DTHINFO(2,DFN_",",.351,"E"))
"RTN","DGDEATH",88,0)
 S DEATHVAL=$$FMTE^XLFDT(DEATHVAL),DEATHVAL=$S(DEATHVAL]"":DEATHVAL,1:"UNKNOWN")
"RTN","DGDEATH",89,0)
 S SOURCE=$G(DTHINFO(2,DFN_",",.353,"E"))
"RTN","DGDEATH",90,0)
 S DELTM=$G(DTHINFO(2,DFN_",",.354,"E"))
"RTN","DGDEATH",91,0)
 S DELBY=$G(DTHINFO(2,DFN_",",.355,"E"))
"RTN","DGDEATH",92,0)
 D LINE("")
"RTN","DGDEATH",93,0)
 D LINE("             LAST EDITED BY: "_DELBY)
"RTN","DGDEATH",94,0)
 D LINE("    DATE/TIME LAST MODIFIED: "_DELTM)
"RTN","DGDEATH",95,0)
 D LINE("     SOURCE OF NOTIFICATION: "_$S(SOURCE="":"UNDEFINED",1:SOURCE))
"RTN","DGDEATH",96,0)
 ;K DEATHVAL,SOURCE,DELTM,DELBY
"RTN","DGDEATH",97,0)
 Q
"RTN","DGDEATH",98,0)
 ;
"RTN","DGDEATH",99,0)
LINE(X) ; add line contained in X to array
"RTN","DGDEATH",100,0)
 S DGCT=DGCT+1
"RTN","DGDEATH",101,0)
 S DGTEXT(DGCT,0)=X
"RTN","DGDEATH",102,0)
 Q
"RTN","DGDEATH",103,0)
DSBULL ;
"RTN","DGDEATH",104,0)
 ;
"RTN","DGDEATH",105,0)
 I $G(IVMDODUP)=1 Q
"RTN","DGDEATH",106,0)
 S DFN=DA
"RTN","DGDEATH",107,0)
 I $D(DGPMDA) D  Q
"RTN","DGDEATH",108,0)
 .S DISTYPE=$P($G(^DGPM(DGPMDA,0)),"^",18)
"RTN","DGDEATH",109,0)
 .I $G(^DG(405.2,DISTYPE,0))["DEATH" D
"RTN","DGDEATH",110,0)
 ..S FDA(2,DFN_",",.353)=1 D FILE^DIE(,"FDA","BWFERR")
"RTN","DGDEATH",111,0)
 ..D DISCHRGE,XFR
"RTN","DGDEATH",112,0)
 I $D(^TMP("DEATH",$J)) Q
"RTN","DGDEATH",113,0)
 D DISCHRGE,XFR
"RTN","DGDEATH",114,0)
 Q
"RTN","DGDEATH",115,0)
DKBULL ;
"RTN","DGDEATH",116,0)
 S DFN=DA
"RTN","DGDEATH",117,0)
 S FDA(2,DFN_",",.353)="@"
"RTN","DGDEATH",118,0)
 I $D(^TMP("DEATH",$J)) S FDA(2,DFN_",",.355)=DUZ
"RTN","DGDEATH",119,0)
 D FILE^DIE(,"FDA",)
"RTN","DGDEATH",120,0)
 D DEL
"RTN","DGDEATH",121,0)
 Q
"RTN","DGDEATH",122,0)
DISCHRGE ;
"RTN","DGDEATH",123,0)
 ; If the patient is being discharged, determine values needed for 
"RTN","DGDEATH",124,0)
 ; Source of Notification and Date/Time last entered.
"RTN","DGDEATH",125,0)
 ;
"RTN","DGDEATH",126,0)
 I '$D(DGNOW) S DGNOW=$$HTFM^XLFDT($H)
"RTN","DGDEATH",127,0)
 I $G(DGDAUTO)'=1 S FDA(2,DFN_",",.354)=DGNOW
"RTN","DGDEATH",128,0)
 S FDA(2,DFN_",",.355)=DUZ
"RTN","DGDEATH",129,0)
 D FILE^DIE(,"FDA",)
"RTN","DGDEATH",130,0)
 Q
"RTN","DGDEATH",131,0)
APTT3 ;Check to exclude "While an Inpatient" from DOD Bulletin
"RTN","DGDEATH",132,0)
 ; Input:  DFN  Output: DGDONOT
"RTN","DGDEATH",133,0)
 N DATE,XIEN,TYPE,XDOD,YES
"RTN","DGDEATH",134,0)
 S DGDONOT=0
"RTN","DGDEATH",135,0)
 S XDOD=$P($G(^DPT(DFN,.35)),"^",1) I 'XDOD Q
"RTN","DGDEATH",136,0)
 S XDOD=$P(XDOD,".",1),YES=0,TYPE=""
"RTN","DGDEATH",137,0)
 I '$D(^DGPM("APTT3",DFN)) Q
"RTN","DGDEATH",138,0)
 S DATE=$O(^DGPM("APTT3",DFN,XDOD)) I 'DATE Q
"RTN","DGDEATH",139,0)
 I $P(DATE,".",1)=XDOD S YES=1
"RTN","DGDEATH",140,0)
 I ($P(DATE,".",1)-1)=XDOD S YES=1
"RTN","DGDEATH",141,0)
 S XIEN=$O(^DGPM("APTT3",DFN,DATE,"")) I 'XIEN Q
"RTN","DGDEATH",142,0)
 S TYPE=$P($G(^DGPM(XIEN,0)),"^",4)
"RTN","DGDEATH",143,0)
 I YES,'((TYPE=27)!(TYPE=32)) S DGDONOT=1
"RTN","DGDEATH",144,0)
 Q
"RTN","DGENRPD2")
0^4^B45286648
"RTN","DGENRPD2",1,0)
DGENRPD2 ;ALB/CJM/EG -Veteran with Future Appts and no Enrollment App Report - Continue 01/19/2005 ; 1/20/05 1:27pm
"RTN","DGENRPD2",2,0)
 ;;5.3;Registration;**147,232,568,585,725**;Aug 13,1993;Build 12
"RTN","DGENRPD2",3,0)
 ;
"RTN","DGENRPD2",4,0)
PRINT ;
"RTN","DGENRPD2",5,0)
 N CRT,QUIT,PAGE,SUBSCRPT
"RTN","DGENRPD2",6,0)
 K ^TMP($J)
"RTN","DGENRPD2",7,0)
 S QUIT=0
"RTN","DGENRPD2",8,0)
 S PAGE=0
"RTN","DGENRPD2",9,0)
 S CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","DGENRPD2",10,0)
 ;
"RTN","DGENRPD2",11,0)
 D GETPAT
"RTN","DGENRPD2",12,0)
 U IO
"RTN","DGENRPD2",13,0)
 I CRT,PAGE=0 W @IOF
"RTN","DGENRPD2",14,0)
 S PAGE=1
"RTN","DGENRPD2",15,0)
 D HEADER
"RTN","DGENRPD2",16,0)
 F SUBSCRPT="STEP2","NOENREC" D
"RTN","DGENRPD2",17,0)
 .D PATIENTS(SUBSCRPT)
"RTN","DGENRPD2",18,0)
 I CRT,'QUIT D PAUSE
"RTN","DGENRPD2",19,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DGENRPD2",20,0)
 D ^%ZISC
"RTN","DGENRPD2",21,0)
 ;
"RTN","DGENRPD2",22,0)
 K ^TMP($J)
"RTN","DGENRPD2",23,0)
 Q
"RTN","DGENRPD2",24,0)
LINE(LINE) ;
"RTN","DGENRPD2",25,0)
 ;Description: prints a line. First prints header if at end of page.
"RTN","DGENRPD2",26,0)
 ;
"RTN","DGENRPD2",27,0)
 I CRT,($Y>(IOSL-4)) D
"RTN","DGENRPD2",28,0)
 .D PAUSE
"RTN","DGENRPD2",29,0)
 .Q:QUIT
"RTN","DGENRPD2",30,0)
 .W @IOF
"RTN","DGENRPD2",31,0)
 .D HEADER
"RTN","DGENRPD2",32,0)
 .W LINE
"RTN","DGENRPD2",33,0)
 ;
"RTN","DGENRPD2",34,0)
 E  I ('CRT),($Y>(IOSL-2)) D
"RTN","DGENRPD2",35,0)
 .W @IOF
"RTN","DGENRPD2",36,0)
 .D HEADER
"RTN","DGENRPD2",37,0)
 .W LINE
"RTN","DGENRPD2",38,0)
 ;
"RTN","DGENRPD2",39,0)
 E  W !,LINE
"RTN","DGENRPD2",40,0)
 Q
"RTN","DGENRPD2",41,0)
 ;
"RTN","DGENRPD2",42,0)
GETPAT ;
"RTN","DGENRPD2",43,0)
 ; Description: Gets patients to include in the report
"RTN","DGENRPD2",44,0)
 N BEGIN,END,DGARRAY,SDCNT,CATEGORY,DIVISION,NAM
"RTN","DGENRPD2",45,0)
 S BEGIN=DGENRP("BEGIN")-.1,END=DGENRP("END")+.1,DGARRAY(1)=BEGIN_";"_END
"RTN","DGENRPD2",46,0)
 S DGARRAY("FLDS")="3;10",SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGENRPD2",47,0)
 ;
"RTN","DGENRPD2",48,0)
 ;there must be subscripts underneath the 101 level to be a
"RTN","DGENRPD2",49,0)
 ;valid appointment, else it is an error eg 01/20/2005
"RTN","DGENRPD2",50,0)
 ; Appointment Database is Unavailable
"RTN","DGENRPD2",51,0)
 I SDCNT<0 N X S X=$$FAPCHK I X'="" S NAM=X G ERR
"RTN","DGENRPD2",52,0)
 ;
"RTN","DGENRPD2",53,0)
 ; Get All records for report
"RTN","DGENRPD2",54,0)
 I DGENRP("ALL") D
"RTN","DGENRPD2",55,0)
 .S CLINIC=0 F  S CLINIC=$O(^TMP($J,"SDAMA301",CLINIC)) Q:'CLINIC  D
"RTN","DGENRPD2",56,0)
 ..Q:$P($G(^SC(CLINIC,0)),"^",3)'="C"
"RTN","DGENRPD2",57,0)
 ..S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",CLINIC,DFN)) Q:'DFN  D
"RTN","DGENRPD2",58,0)
 ...S DIVISION=$P($G(^SC(CLINIC,0)),U,15)
"RTN","DGENRPD2",59,0)
 ...S:'DIVISION DIVISION=$O(^DG(40.8,0))
"RTN","DGENRPD2",60,0)
 ...D VALREC(CLINIC,DFN)
"RTN","DGENRPD2",61,0)
 ;
"RTN","DGENRPD2",62,0)
 ; Get records for specified Divisions only
"RTN","DGENRPD2",63,0)
 I $O(DGENRP("DIVISION",0)) D
"RTN","DGENRPD2",64,0)
 .S CLINIC=0 F  S CLINIC=$O(^TMP($J,"SDAMA301",CLINIC)) Q:'CLINIC  D
"RTN","DGENRPD2",65,0)
 ..Q:$P($G(^SC(CLINIC,0)),"^",3)'="C"
"RTN","DGENRPD2",66,0)
 ..S DIVISION=$P($G(^SC(CLINIC,0)),U,15)
"RTN","DGENRPD2",67,0)
 ..S:'DIVISION DIVISION=$O(^DG(40.8,0))
"RTN","DGENRPD2",68,0)
 ..Q:'DIVISION!('$D(DGENRP("DIVISION",DIVISION)))
"RTN","DGENRPD2",69,0)
 ..S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",CLINIC,DFN)) Q:'DFN  D VALREC(CLINIC,DFN)
"RTN","DGENRPD2",70,0)
 ;
"RTN","DGENRPD2",71,0)
 ; Get records for specified Clinics only
"RTN","DGENRPD2",72,0)
 I $O(DGENRP("CLINIC",0)) D
"RTN","DGENRPD2",73,0)
 .S CLINIC=0 F  S CLINIC=$O(^TMP($J,"SDAMA301",CLINIC)) Q:'CLINIC  D
"RTN","DGENRPD2",74,0)
 ..Q:'CLINIC!('$D(DGENRP("CLINIC",CLINIC)))
"RTN","DGENRPD2",75,0)
 ..Q:($P($G(^SC(CLINIC,0)),U,3)'="C")
"RTN","DGENRPD2",76,0)
 ..S DIVISION=$P($G(^SC(CLINIC,0)),U,15)
"RTN","DGENRPD2",77,0)
 ..S:'DIVISION DIVISION=$O(^DG(40.8,0))
"RTN","DGENRPD2",78,0)
 ..S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",CLINIC,DFN)) Q:'DFN  D VALREC(CLINIC,DFN)
"RTN","DGENRPD2",79,0)
 ;
"RTN","DGENRPD2",80,0)
 K DGARRAY,^TMP($J,"SDAMA301"),SDCNT
"RTN","DGENRPD2",81,0)
 Q
"RTN","DGENRPD2",82,0)
 ;
"RTN","DGENRPD2",83,0)
ERR ;
"RTN","DGENRPD2",84,0)
 ;^TMP($J,TYPE,DIVISION NAME,CLINIC NAME,CATEGORY,APPT DT/TM,DFN)
"RTN","DGENRPD2",85,0)
 I NAM["Appointment Database is unavailable. Please try again later." S NAM="**Appointment Database is Unavailable**"
"RTN","DGENRPD2",86,0)
 I NAM["Appointment request contains invalid values." S NAM="**Invalid appointment, call Help Desk**"
"RTN","DGENRPD2",87,0)
 I NAM["An error has occurred. Check the RSA Error Log." S NAM="**Error,  check RSA Error Log **"
"RTN","DGENRPD2",88,0)
 S ^TMP($J,"NOENREC"," ",NAM," ",DT," ")=""
"RTN","DGENRPD2",89,0)
 K DGARRAY,^TMP($J,"SDAMA301"),SDCNT,NAM
"RTN","DGENRPD2",90,0)
 Q
"RTN","DGENRPD2",91,0)
 ;
"RTN","DGENRPD2",92,0)
VALREC(CLINIC,DFN) ;
"RTN","DGENRPD2",93,0)
 ;
"RTN","DGENRPD2",94,0)
 N APPT,STATUS,JUSTONCE S JUSTONCE=0
"RTN","DGENRPD2",95,0)
 S APPT=0 F  S APPT=$O(^TMP($J,"SDAMA301",CLINIC,DFN,APPT)) Q:'APPT!(JUSTONCE)  D
"RTN","DGENRPD2",96,0)
 .S JUSTONCE=+$G(DGENRP("JUSTONCE"))
"RTN","DGENRPD2",97,0)
 .; Exclude certain appointment statuses
"RTN","DGENRPD2",98,0)
 .S STATUS=$P($P(^TMP($J,"SDAMA301",CLINIC,DFN,APPT),U,3),";")
"RTN","DGENRPD2",99,0)
 .Q:"^NS^NSR^CC^CCR^CP^CPR^"[(U_STATUS_U)
"RTN","DGENRPD2",100,0)
 .;
"RTN","DGENRPD2",101,0)
 .; Don't include enrolled veterans or ones that have pending apps
"RTN","DGENRPD2",102,0)
 .S CATEGORY=$$CATEGORY^DGENA4(DFN)
"RTN","DGENRPD2",103,0)
 .I (CATEGORY="E")!(CATEGORY="P") Q
"RTN","DGENRPD2",104,0)
 .;
"RTN","DGENRPD2",105,0)
 .; Exclude if not an eligible veteran (can not enroll)
"RTN","DGENRPD2",106,0)
 .Q:'$$VET^DGENPTA(DFN)
"RTN","DGENRPD2",107,0)
 .;
"RTN","DGENRPD2",108,0)
 .D SETTMP(CLINIC,DFN,APPT)
"RTN","DGENRPD2",109,0)
 Q
"RTN","DGENRPD2",110,0)
 ;
"RTN","DGENRPD2",111,0)
SETTMP(CLINIC,DFN,APPT) ;
"RTN","DGENRPD2",112,0)
 ; NOENREC is for patients without enrollment records
"RTN","DGENRPD2",113,0)
 ; SITE2 is for other excluded enrollment records
"RTN","DGENRPD2",114,0)
 ;^TMP($J,TYPE,DIVISION NAME,CLINIC NAME,CATEGORY,APPT DT/TM,DFN)
"RTN","DGENRPD2",115,0)
 ;
"RTN","DGENRPD2",116,0)
 N DIVNAME,CLNAME
"RTN","DGENRPD2",117,0)
 S DIVNAME=$S(DIVISION:$P($$SITE^VASITE(APPT\1,DIVISION),U,2),1:" ")
"RTN","DGENRPD2",118,0)
 S CLNAME=$P($G(^SC(CLINIC,0)),"^")
"RTN","DGENRPD2",119,0)
 S:CLNAME="" CLNAME=" "
"RTN","DGENRPD2",120,0)
 ;
"RTN","DGENRPD2",121,0)
 I $$FINDCUR^DGENA(DFN)="" S ^TMP($J,"NOENREC",DIVNAME,CLNAME,CATEGORY,APPT,DFN)="" Q
"RTN","DGENRPD2",122,0)
 S ^TMP($J,"STEP2",DIVNAME,CLNAME,CATEGORY,APPT,DFN)=$$STATUS^DGENA(DFN)_U_$P($P(^TMP($J,"SDAMA301",CLINIC,DFN,APPT),U,10),";",2)
"RTN","DGENRPD2",123,0)
 Q
"RTN","DGENRPD2",124,0)
 ;
"RTN","DGENRPD2",125,0)
HEADER ;
"RTN","DGENRPD2",126,0)
 ;Description: Prints the report header.
"RTN","DGENRPD2",127,0)
 ;
"RTN","DGENRPD2",128,0)
 N LINE
"RTN","DGENRPD2",129,0)
 I $Y>1 W @IOF
"RTN","DGENRPD2",130,0)
 W !,"Appointments for Veterans with no Enrollment Application"
"RTN","DGENRPD2",131,0)
 W:DGENRP("BEGIN") ?70,"Date Range: "_$$FMTE^XLFDT(DGENRP("BEGIN"))_" to "_$$FMTE^XLFDT($G(DGENRP("END")))
"RTN","DGENRPD2",132,0)
 W ?120,"Page ",PAGE
"RTN","DGENRPD2",133,0)
 S PAGE=PAGE+1
"RTN","DGENRPD2",134,0)
 W !
"RTN","DGENRPD2",135,0)
 W ?70," Run Date: "_$$FMTE^XLFDT(DT)
"RTN","DGENRPD2",136,0)
 W !
"RTN","DGENRPD2",137,0)
 ;
"RTN","DGENRPD2",138,0)
 W !,"Name",?39,"PatientID",?57,"DOB",?70,"Appt Dt/Tm",?90,"EnrollStatus",?121,"Enroll Cat"
"RTN","DGENRPD2",139,0)
 S $P(LINE,"-",132)="-"
"RTN","DGENRPD2",140,0)
 W !,LINE,!
"RTN","DGENRPD2",141,0)
 Q
"RTN","DGENRPD2",142,0)
 ;
"RTN","DGENRPD2",143,0)
PAUSE ;
"RTN","DGENRPD2",144,0)
 ;Description: Screen pause.  Sets QUIT=1 if user decides to quit.
"RTN","DGENRPD2",145,0)
 ;
"RTN","DGENRPD2",146,0)
 N DIR,X,Y
"RTN","DGENRPD2",147,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","DGENRPD2",148,0)
 S DIR(0)="E"
"RTN","DGENRPD2",149,0)
 D ^DIR
"RTN","DGENRPD2",150,0)
 I ('(+Y))!$D(DIRUT) S QUIT=1
"RTN","DGENRPD2",151,0)
 Q
"RTN","DGENRPD2",152,0)
 ;
"RTN","DGENRPD2",153,0)
PATIENTS(SUBSCRPT) ;
"RTN","DGENRPD2",154,0)
 ;Description: Prints list of patients
"RTN","DGENRPD2",155,0)
 ;
"RTN","DGENRPD2",156,0)
 N NODE,DIVISION,CLINIC,TIME,PATIENT,DGPAT,APPTYPE,ENRSTAT,CATEGORY
"RTN","DGENRPD2",157,0)
 ;
"RTN","DGENRPD2",158,0)
 ;
"RTN","DGENRPD2",159,0)
 S DIVISION=""
"RTN","DGENRPD2",160,0)
 F  S DIVISION=$O(^TMP($J,SUBSCRPT,DIVISION)) Q:DIVISION=""  D  Q:QUIT
"RTN","DGENRPD2",161,0)
 .D LINE("  ") Q:QUIT
"RTN","DGENRPD2",162,0)
 .D LINE($$LJ(" ",40)_"DIVISION: "_DIVISION) Q:QUIT
"RTN","DGENRPD2",163,0)
 .D LINE("  ") Q:QUIT
"RTN","DGENRPD2",164,0)
 .S CLINIC=""
"RTN","DGENRPD2",165,0)
 .F  S CLINIC=$O(^TMP($J,SUBSCRPT,DIVISION,CLINIC)) Q:CLINIC=""  D  Q:QUIT
"RTN","DGENRPD2",166,0)
 ..D LINE("  ") Q:QUIT
"RTN","DGENRPD2",167,0)
 ..D LINE("CLINIC: "_$$LJ(CLINIC,40)_$$LJ(" ",40)_"DIVISION: "_DIVISION)
"RTN","DGENRPD2",168,0)
 ..Q:QUIT
"RTN","DGENRPD2",169,0)
 ..S CATEGORY=""
"RTN","DGENRPD2",170,0)
 ..F  S CATEGORY=$O(^TMP($J,SUBSCRPT,DIVISION,CLINIC,CATEGORY)) Q:CATEGORY=""  D  Q:QUIT
"RTN","DGENRPD2",171,0)
 ...D LINE(" ") Q:QUIT
"RTN","DGENRPD2",172,0)
 ...S TIME=0
"RTN","DGENRPD2",173,0)
 ...F  S TIME=$O(^TMP($J,SUBSCRPT,DIVISION,CLINIC,CATEGORY,TIME)) Q:'TIME  D  Q:QUIT
"RTN","DGENRPD2",174,0)
 ....S DFN=0
"RTN","DGENRPD2",175,0)
 ....F  S DFN=$O(^TMP($J,SUBSCRPT,DIVISION,CLINIC,CATEGORY,TIME,DFN)) Q:'DFN  D  Q:QUIT
"RTN","DGENRPD2",176,0)
 .....S NODE=$G(^TMP($J,SUBSCRPT,DIVISION,CLINIC,CATEGORY,TIME,DFN))
"RTN","DGENRPD2",177,0)
 .....S ENRSTAT=$P(NODE,"^")
"RTN","DGENRPD2",178,0)
 .....S APPTYPE=$P(NODE,"^",2)
"RTN","DGENRPD2",179,0)
 .....Q:'$$GET^DGENPTA(DFN,.DGPAT)
"RTN","DGENRPD2",180,0)
 .....S LINE=$$LJ(DGPAT("NAME"),37)_" "_$$LJ(DGPAT("PID"),15)_" "
"RTN","DGENRPD2",181,0)
 .....S LINE=LINE_$$LJ($$DATE(DGPAT("DOB")),12)_"  "
"RTN","DGENRPD2",182,0)
 .....S LINE=LINE_$$LJ($$DATE(TIME),20)
"RTN","DGENRPD2",183,0)
 .....S LINE=LINE_"  "_$$LJ($S(ENRSTAT="":"NO ENROLLMENT RECORD",1:$$EXT^DGENU("STATUS",ENRSTAT)),28)
"RTN","DGENRPD2",184,0)
 .....S LINE=LINE_$$LJ(" ",2)_$$EXTCAT^DGENA4(CATEGORY)
"RTN","DGENRPD2",185,0)
 .....D LINE(LINE)
"RTN","DGENRPD2",186,0)
 .....Q:QUIT
"RTN","DGENRPD2",187,0)
 Q
"RTN","DGENRPD2",188,0)
 ;
"RTN","DGENRPD2",189,0)
DATE(DATE) ;
"RTN","DGENRPD2",190,0)
 Q $$FMTE^XLFDT(DATE,"1")
"RTN","DGENRPD2",191,0)
 ;
"RTN","DGENRPD2",192,0)
LJ(STRING,LENGTH) ;
"RTN","DGENRPD2",193,0)
 Q $$LJ^XLFSTR($E(STRING,1,LENGTH),LENGTH)
"RTN","DGENRPD2",194,0)
 ;
"RTN","DGENRPD2",195,0)
FAPCHK() ;
"RTN","DGENRPD2",196,0)
 N ERR
"RTN","DGENRPD2",197,0)
 S ERR=$O(^TMP($J,"SDAMA301",""))
"RTN","DGENRPD2",198,0)
 I $D(^TMP($J,"SDAMA301",ERR))=1 Q ^TMP($J,"SDAMA301",ERR)
"RTN","DGENRPD2",199,0)
 Q ""
"RTN","DGENRPT2")
0^5^B40929861
"RTN","DGENRPT2",1,0)
DGENRPT2 ;ALB/GAH - EGT Preliminary Detailed Impact Report ; 10/10/2005
"RTN","DGENRPT2",2,0)
 ;;5.3;Registration;**232,306,417,456,491,513,568,725**;Aug 13,1993;Build 12
"RTN","DGENRPT2",3,0)
 ;
"RTN","DGENRPT2",4,0)
 ;
"RTN","DGENRPT2",5,0)
ENPT ;Preliminary Detailed Report selected.
"RTN","DGENRPT2",6,0)
 K ^TMP($J,"BY2"),^TMP($J,"CNT2")
"RTN","DGENRPT2",7,0)
 I $$FINDCUR^DGENEGT()=0 W !,"No EGT setting on file." Q
"RTN","DGENRPT2",8,0)
 N INFAP S INFAP=""
"RTN","DGENRPT2",9,0)
 D INFAP I INFAP="^"!($D(DTOUT)) Q
"RTN","DGENRPT2",10,0)
 N EGT,EGTSUB,EGTEDT,EGTLDT,EGTTP,L,BY,DIC,FLDS,DHD,DIOEND,X,DFN,PSSN,FCTY,TOTAL,DIOBEG,VASD,VAERR,ENRDT
"RTN","DGENRPT2",11,0)
 S (EGT,EGTSUB,EGTEDT,EGTLDT,EGTTP,FCTY)="",TOTAL=0
"RTN","DGENRPT2",12,0)
 W !!,"*** This report requires a 132 column printer. ***",!!
"RTN","DGENRPT2",13,0)
 S DIC="^DGEN(27.11,"
"RTN","DGENRPT2",14,0)
 S BY(0)="^TMP($J,""BY2""",L(0)=3,L=0
"RTN","DGENRPT2",15,0)
 S DIOBEG="D PRESORT^DGENRPT2"
"RTN","DGENRPT2",16,0)
 S FLDS="D PT^DGENRPT2 W X;C0;L20,W PSSN;C22;L10,D EP^DGENRPT2 W X;C33;L2,D ENRED^DGENRPT2 W X;C37;L10,D ENRST^DGENRPT2 W X;C49;L12"
"RTN","DGENRPT2",17,0)
 I INFAP=1 D
"RTN","DGENRPT2",18,0)
 . S FLDS(2)="D WRD^DGENRPT2 W X;C63;L15;""WARD"",D FAP1^DGENRPT2 W X;C80;L31,D PCPVD^DGENRPT2 W X;C110;L10,D PFCLTY^DGENRPT2 W X;C121;L11"
"RTN","DGENRPT2",19,0)
 . S DHD="W ?0 D DETHD1^DGENRPT2"
"RTN","DGENRPT2",20,0)
 I INFAP=0 D
"RTN","DGENRPT2",21,0)
 . S FLDS(2)="D WRD^DGENRPT2 W X;C63;L15;""WARD"",D FAP0^DGENRPT2 W X;C80;L31,D PCPVD^DGENRPT2 W X;C88;L10,D PFCLTY^DGENRPT2 W X;C100;L12"
"RTN","DGENRPT2",22,0)
 . S DHD="W ?0 D DETHD0^DGENRPT2"
"RTN","DGENRPT2",23,0)
 S DIOEND="D END^DGENRPT2"
"RTN","DGENRPT2",24,0)
 D EN1^DIP
"RTN","DGENRPT2",25,0)
 D EXIT
"RTN","DGENRPT2",26,0)
 Q
"RTN","DGENRPT2",27,0)
 ;
"RTN","DGENRPT2",28,0)
INFAP ;Ask the user if Future Appointments is wanted on the report.
"RTN","DGENRPT2",29,0)
 N DIR,X,Y
"RTN","DGENRPT2",30,0)
 S DIR(0)="Y^1:3"
"RTN","DGENRPT2",31,0)
 S DIR("A")="Do you want to include Future Appointments"
"RTN","DGENRPT2",32,0)
 D ^DIR S INFAP=Y
"RTN","DGENRPT2",33,0)
 I ($D(DTOUT)) W *7
"RTN","DGENRPT2",34,0)
 Q
"RTN","DGENRPT2",35,0)
 ;
"RTN","DGENRPT2",36,0)
PRESORT ;First get the current EGT Setting from file #27.16.
"RTN","DGENRPT2",37,0)
 N GETEGTS,REC,TP S (GETEGTS,REC,TP)=""
"RTN","DGENRPT2",38,0)
 S REC=$$FINDCUR^DGENEGT()
"RTN","DGENRPT2",39,0)
 I REC=0 Q
"RTN","DGENRPT2",40,0)
 S TP=$$GET^DGENEGT(REC,.GETEGTS)
"RTN","DGENRPT2",41,0)
 ;Get EGT Priority.
"RTN","DGENRPT2",42,0)
 S EGT=GETEGTS("PRIORITY")
"RTN","DGENRPT2",43,0)
 S EGTSUB=GETEGTS("SUBGRP")
"RTN","DGENRPT2",44,0)
 ;Get EGT Effective Date.
"RTN","DGENRPT2",45,0)
 S EGTEDT=GETEGTS("EFFDATE") I EGTEDT S EGTEDT=$$FMTE^XLFDT(EGTEDT)
"RTN","DGENRPT2",46,0)
 ;Get last EGT setting Date/Time.
"RTN","DGENRPT2",47,0)
 S EGTLDT=GETEGTS("ENTDATE") I EGTLDT S EGTLDT=$$FMTE^XLFDT(EGTLDT)
"RTN","DGENRPT2",48,0)
 ;Get EGT Type.
"RTN","DGENRPT2",49,0)
 S EGTTP=GETEGTS("TYPE")
"RTN","DGENRPT2",50,0)
 S EGTTP=$$EXTERNAL^DILFD(27.16,.04,"F",EGTTP) S:EGTTP="" EGTTP="UNSPECIFIED"
"RTN","DGENRPT2",51,0)
 ;Sort for patient's current record and get the potentially affected.
"RTN","DGENRPT2",52,0)
 N IND,PRT,DFN,NM,PSSN,PRTSUB,ABV
"RTN","DGENRPT2",53,0)
 S (IND,PRT,DFN,NM,PSSN,PRTSUB,ABV)=""
"RTN","DGENRPT2",54,0)
 K ^TMP($J,"BY2"),^TMP($J,"CNT2")
"RTN","DGENRPT2",55,0)
 F  S DFN=$O(^DGEN(27.11,"C",DFN)) Q:DFN=""  D
"RTN","DGENRPT2",56,0)
 . S IND=$$FINDCUR^DGENA(DFN)
"RTN","DGENRPT2",57,0)
 . I IND D EGTP I ABV=0 D
"RTN","DGENRPT2",58,0)
 .. K VADM(1),VADM(2) D DEM^VADPT S NM=VADM(1) D BYSRT
"RTN","DGENRPT2",59,0)
 .. S PSSN=$P($G(VADM(2)),U),^TMP($J,"CNT2",PRT,PSSN)=""
"RTN","DGENRPT2",60,0)
 I EGTSUB>4 S EGTSUB="ER" Q
"RTN","DGENRPT2",61,0)
 S EGTSUB=$$EXTERNAL^DILFD(27.16,.03,"F",EGTSUB)
"RTN","DGENRPT2",62,0)
 D GETAPPT^DGENRPT5("BY2")
"RTN","DGENRPT2",63,0)
 Q
"RTN","DGENRPT2",64,0)
 ;
"RTN","DGENRPT2",65,0)
EGTP ;Get patients EGT Priority.
"RTN","DGENRPT2",66,0)
 S (PRT,PRTSUB,ABV,ENRDT)=""
"RTN","DGENRPT2",67,0)
 S PRT=$P($G(^DGEN(27.11,IND,0)),U,7)
"RTN","DGENRPT2",68,0)
 S:((PRT=7)!(PRT=8)) PRTSUB=$P($G(^DGEN(27.11,IND,0)),U,12)
"RTN","DGENRPT2",69,0)
 S ENRDT=$P($G(^DGEN(27.11,IND,0)),U,10)
"RTN","DGENRPT2",70,0)
 S:'ENRDT ENRDT=$P($G(^DGEN(27.11,IND,0)),U)
"RTN","DGENRPT2",71,0)
 S ABV=$$ABOVE^DGENEGT1(DFN,PRT,PRTSUB)
"RTN","DGENRPT2",72,0)
 I PRT=7!(PRT=8) D
"RTN","DGENRPT2",73,0)
 . S PRTSUB=$$EXTERNAL^DILFD(27.11,.12,"F",PRTSUB)
"RTN","DGENRPT2",74,0)
 . S:PRTSUB="" PRTSUB="ER"
"RTN","DGENRPT2",75,0)
 S PRT=PRT_PRTSUB
"RTN","DGENRPT2",76,0)
 Q
"RTN","DGENRPT2",77,0)
 ;
"RTN","DGENRPT2",78,0)
BYSRT ;Sort patients by last name for "BY(0)".
"RTN","DGENRPT2",79,0)
 S ^TMP($J,"BY2",NM,DFN,IND)=""
"RTN","DGENRPT2",80,0)
 Q
"RTN","DGENRPT2",81,0)
 ;
"RTN","DGENRPT2",82,0)
PT ;Get the patient NAME and SSN
"RTN","DGENRPT2",83,0)
 S (X,DFN,PSSN)="" K VADM(1),VADM(2)
"RTN","DGENRPT2",84,0)
 S DFN=$P($G(^DGEN(27.11,D0,0)),U,2)
"RTN","DGENRPT2",85,0)
 I DFN D DEM^VADPT S X=$E(VADM(1),1,20),PSSN=$P(VADM(2),U)
"RTN","DGENRPT2",86,0)
 Q
"RTN","DGENRPT2",87,0)
 ;
"RTN","DGENRPT2",88,0)
EP ;Get the patient EGT Priority.
"RTN","DGENRPT2",89,0)
 S X=""
"RTN","DGENRPT2",90,0)
 N PRT,PRTSUB S (PRT,PRTSUB)=""
"RTN","DGENRPT2",91,0)
 S PRT=$P($G(^DGEN(27.11,D0,0)),U,7)
"RTN","DGENRPT2",92,0)
 I PRT=7!(PRT=8) D
"RTN","DGENRPT2",93,0)
 .S PRTSUB=$P($G(^DGEN(27.11,D0,0)),U,12)
"RTN","DGENRPT2",94,0)
 .S PRTSUB=$$EXTERNAL^DILFD(27.11,.12,"F",PRTSUB)
"RTN","DGENRPT2",95,0)
 .S:PRTSUB="" PRTSUB="ER"
"RTN","DGENRPT2",96,0)
 .S PRT=PRT_PRTSUB
"RTN","DGENRPT2",97,0)
 S X=PRT
"RTN","DGENRPT2",98,0)
 Q
"RTN","DGENRPT2",99,0)
 ;
"RTN","DGENRPT2",100,0)
ENRED ;Get the patient ENROLLMENT END DATE.
"RTN","DGENRPT2",101,0)
 S X=""
"RTN","DGENRPT2",102,0)
 S X=$P($G(^DGEN(27.11,D0,0)),U,11)
"RTN","DGENRPT2",103,0)
 I X="" S X="N/A" Q
"RTN","DGENRPT2",104,0)
 S X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_(1700+$E(X,1,3))
"RTN","DGENRPT2",105,0)
 Q
"RTN","DGENRPT2",106,0)
 ;
"RTN","DGENRPT2",107,0)
ENRST ;Get the patient ENROLLMENT STATUS.
"RTN","DGENRPT2",108,0)
 S X=""
"RTN","DGENRPT2",109,0)
 S X=$P($G(^DGEN(27.11,D0,0)),U,4)
"RTN","DGENRPT2",110,0)
 S X=$P($G(^DGEN(27.15,X,0)),U,1),X=$E(X,1,12)
"RTN","DGENRPT2",111,0)
 Q
"RTN","DGENRPT2",112,0)
 ;
"RTN","DGENRPT2",113,0)
WRD ;Get the patient WARD.
"RTN","DGENRPT2",114,0)
 S X="" K VAIP(5)
"RTN","DGENRPT2",115,0)
 D IN5^VADPT S X=$P($G(VAIP(5)),U,2),X=$E(X,1,15)
"RTN","DGENRPT2",116,0)
 I X="" S X="N/A"
"RTN","DGENRPT2",117,0)
 Q
"RTN","DGENRPT2",118,0)
 ;
"RTN","DGENRPT2",119,0)
FAP1 ;Get the patient FUTURE APPOINTMENTS.
"RTN","DGENRPT2",120,0)
 N J,POP,ADT S (X,ADT)="",POP=0,J=0
"RTN","DGENRPT2",121,0)
 K ^UTILITY("VASD",$J)
"RTN","DGENRPT2",122,0)
 S X=$$FAPCHK(DFN) Q:X'=""
"RTN","DGENRPT2",123,0)
 D BLDUTL^DGENRPT5(DFN)
"RTN","DGENRPT2",124,0)
 F  S J=$O(^UTILITY("VASD",$J,J)) Q:J=""!POP  D
"RTN","DGENRPT2",125,0)
 . S X=$P($G(^UTILITY("VASD",$J,J,"E")),U,2),X=$E(X,1,20)
"RTN","DGENRPT2",126,0)
 . S ADT=$P($G(^UTILITY("VASD",$J,J,"I")),U),ADT=$P(ADT,".",1)
"RTN","DGENRPT2",127,0)
 . S ADT=$E(ADT,4,5)_"/"_$E(ADT,6,7)_"/"_(1700+$E(ADT,1,3))
"RTN","DGENRPT2",128,0)
 . S X=ADT_" "_X
"RTN","DGENRPT2",129,0)
 . I J=1 W X S X=""
"RTN","DGENRPT2",130,0)
 . I J>1&(J<6) W !,?79,X S X=""
"RTN","DGENRPT2",131,0)
 . I J=6 S X="" W !,?79,"More Appts" S POP=1 Q
"RTN","DGENRPT2",132,0)
 I $D(^UTILITY("VASD",$J))=0 S X="NONE"
"RTN","DGENRPT2",133,0)
 Q
"RTN","DGENRPT2",134,0)
 ;
"RTN","DGENRPT2",135,0)
FAP0 ;See if the patient has future appointment.
"RTN","DGENRPT2",136,0)
 S X="NO"
"RTN","DGENRPT2",137,0)
 K ^UTILITY("VASD",$J)
"RTN","DGENRPT2",138,0)
 S X=$$FAPCHK(DFN) Q:X'=""
"RTN","DGENRPT2",139,0)
 D BLDUTL^DGENRPT5(DFN)
"RTN","DGENRPT2",140,0)
 I $G(^UTILITY("VASD",$J,1,"I"))'="" S X="YES"
"RTN","DGENRPT2",141,0)
 Q
"RTN","DGENRPT2",142,0)
 ;
"RTN","DGENRPT2",143,0)
FAPCHK(DFN) ;
"RTN","DGENRPT2",144,0)
 Q $G(^TMP($J,"SDAMA",DFN,"ERROR"))
"RTN","DGENRPT2",145,0)
PCPVD ;Get the patient PC PROVIDER.
"RTN","DGENRPT2",146,0)
 ;;Site must use PCMM module.
"RTN","DGENRPT2",147,0)
 S X=""
"RTN","DGENRPT2",148,0)
 S X=$$PCPRACT^DGSDUTL(DFN)
"RTN","DGENRPT2",149,0)
 I X="" S X="N/A" Q
"RTN","DGENRPT2",150,0)
 S X=$P(X,U,2),X=$E(X,1,10)
"RTN","DGENRPT2",151,0)
 Q
"RTN","DGENRPT2",152,0)
 ;
"RTN","DGENRPT2",153,0)
PFCLTY ;Get the patient PREFFERED FACILITY.
"RTN","DGENRPT2",154,0)
 S (X,FCTY)=""
"RTN","DGENRPT2",155,0)
 S X=$$PREF^DGENPTA(DFN,.FCTY),X=$E(FCTY,1,10)
"RTN","DGENRPT2",156,0)
 I X="" S X="N/A"
"RTN","DGENRPT2",157,0)
 Q
"RTN","DGENRPT2",158,0)
 ;
"RTN","DGENRPT2",159,0)
DETHD ;General header for the Preliminary Detailed Report.
"RTN","DGENRPT2",160,0)
 ;Get the date/time the report is run.
"RTN","DGENRPT2",161,0)
 N RDT,Y S (RDT,Y)=""
"RTN","DGENRPT2",162,0)
 D NOW^%DTC S Y=% X ^DD("DD")
"RTN","DGENRPT2",163,0)
 S RDT=$P(Y,"@",1)_" @ "_$P($P(Y,"@",2),":",1,2)
"RTN","DGENRPT2",164,0)
 ;Write the header.
"RTN","DGENRPT2",165,0)
 W !,?((IOM-38)\2),"EGT Preliminary Detailed Impact Report"
"RTN","DGENRPT2",166,0)
 W !,?((IOM-22-$L(RDT))\2),"Date/Time Report Run: ",RDT
"RTN","DGENRPT2",167,0)
 W !,?((IOM-45-$L(EGT_EGTSUB_EGTTP_EGTEDT))\2),"EGT Setting: ",EGT_EGTSUB," EGT Type: ",EGTTP," EGT Effective Date: ",EGTEDT
"RTN","DGENRPT2",168,0)
 W !,?((IOM-28-$L(EGTLDT))\2),"Date/Time Last EGT Setting: ",EGTLDT
"RTN","DGENRPT2",169,0)
 W !!,"IMPORTANT NOTE:",!,"Preliminary report is based on a comparison of the EGT setting to the veterans current enrollment priority as shown in VISTA."
"RTN","DGENRPT2",170,0)
 Q
"RTN","DGENRPT2",171,0)
 ;
"RTN","DGENRPT2",172,0)
DETHD1 ;Header for the Preliminary Detailed Report, with Future Appointments.
"RTN","DGENRPT2",173,0)
 D DETHD
"RTN","DGENRPT2",174,0)
 W !!,"NAME",?21,"SSN",?32,"EP",?36,"ENROLLMENT",?48,"ENROLLMENT",?62,"WARD",?79,"FUTURE",?109,"PC",?120,"PREF"
"RTN","DGENRPT2",175,0)
 W !,?36,"END DATE",?48,"STATUS",?79,"APPOINTMENTS",?109,"PROVIDER",?120,"FACILITY",!!
"RTN","DGENRPT2",176,0)
 Q
"RTN","DGENRPT2",177,0)
 ;
"RTN","DGENRPT2",178,0)
DETHD0 ;Header for the Preliminary Detailed Report, no Future Appointments.
"RTN","DGENRPT2",179,0)
 D DETHD
"RTN","DGENRPT2",180,0)
 W !!,"NAME",?21,"SSN",?32,"EP",?36,"ENROLLMENT",?48,"ENROLLMENT",?62,"WARD",?79,"FUTURE",?87,"PC",?99,"PREF"
"RTN","DGENRPT2",181,0)
 W !,?36,"END DATE",?48,"STATUS",?79,"APPTS",?87,"PROVIDER",?99,"FACILITY",!!
"RTN","DGENRPT2",182,0)
 Q
"RTN","DGENRPT2",183,0)
 ;
"RTN","DGENRPT2",184,0)
END ;At the end of the display.
"RTN","DGENRPT2",185,0)
 N PSSN,J S (PSSN,J)=""
"RTN","DGENRPT2",186,0)
 F  S J=$O(^TMP($J,"CNT2",J)) Q:J=""  D
"RTN","DGENRPT2",187,0)
 . F  S PSSN=$O(^TMP($J,"CNT2",J,PSSN)) Q:PSSN=""  D
"RTN","DGENRPT2",188,0)
   ..S TOTAL=TOTAL+1
"RTN","DGENRPT2",189,0)
 W !,"TOTAL PATIENTS (UNIQUE SSNS) FOR THIS FACILITY:     ",TOTAL
"RTN","DGENRPT2",190,0)
 Q
"RTN","DGENRPT2",191,0)
 ;
"RTN","DGENRPT2",192,0)
EXIT ;Clean up upon exit of the routine.
"RTN","DGENRPT2",193,0)
 D KVA^VADPT
"RTN","DGENRPT2",194,0)
 K ^TMP($J,"BY2"),^TMP($J,"CNT2"),^TMP($J,"SDAMA")
"RTN","DGENRPT2",195,0)
 Q
"RTN","DGENRPT5")
0^6^B5443273
"RTN","DGENRPT5",1,0)
DGENRPT5 ;ALB/DW,LBD,GAH - EGT Impact Report Utility; 10/19/2006
"RTN","DGENRPT5",2,0)
 ;;5.3;Registration;**568,725**;Aug 13,1993;Build 12
"RTN","DGENRPT5",3,0)
 ;
"RTN","DGENRPT5",4,0)
 ;
"RTN","DGENRPT5",5,0)
 Q
"RTN","DGENRPT5",6,0)
GETAPPT(TYPE) ; Set up array of Patient IENs for SD API to process
"RTN","DGENRPT5",7,0)
 N VETARRAY,PIEN,PNAME,RCNT,ACNT,DGARRAY,SDCNT,I
"RTN","DGENRPT5",8,0)
 S ACNT=1,RCNT=0
"RTN","DGENRPT5",9,0)
 S PNAME="" F  S PNAME=$O(^TMP($J,TYPE,PNAME)) Q:PNAME=""  D
"RTN","DGENRPT5",10,0)
 .S PIEN=0 F  S PIEN=$O(^TMP($J,TYPE,PNAME,PIEN)) Q:'PIEN  D
"RTN","DGENRPT5",11,0)
 ..S RCNT=RCNT+1,VETARRAY(ACNT)=$G(VETARRAY(ACNT))_PIEN_";"
"RTN","DGENRPT5",12,0)
 ..; Group DFNs by no more than twenty records
"RTN","DGENRPT5",13,0)
 ..I RCNT>19 S ACNT=ACNT+1,RCNT=0
"RTN","DGENRPT5",14,0)
 ;       
"RTN","DGENRPT5",15,0)
 ; Call SD API by array of Patient DFNs
"RTN","DGENRPT5",16,0)
 F I=1:1 Q:'$D(VETARRAY(I))  D
"RTN","DGENRPT5",17,0)
 .S DGARRAY("FLDS")="1;2;3;10",DGARRAY(4)=VETARRAY(I)
"RTN","DGENRPT5",18,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGENRPT5",19,0)
 .I SDCNT<0 D
"RTN","DGENRPT5",20,0)
 ..N ERR,ERROR,CNT
"RTN","DGENRPT5",21,0)
 ..S ERR=$O(^TMP($J,"SDAMA301",""))
"RTN","DGENRPT5",22,0)
 ..D
"RTN","DGENRPT5",23,0)
 ...I ERR=101 S ERROR="Appt. DB unavail. Try later" Q
"RTN","DGENRPT5",24,0)
 ...I ERR=115 S ERROR="Invalid reqst, Call help desk" Q
"RTN","DGENRPT5",25,0)
 ...I ERR=117 S ERROR="Error:  Check RSA error log" Q
"RTN","DGENRPT5",26,0)
 ...I ERR=113 S ERROR="Bad appt,pat stat fltr combo" Q
"RTN","DGENRPT5",27,0)
 ...I ERR=109 S ERROR="Invalid appt status filter" Q
"RTN","DGENRPT5",28,0)
 ...S ERROR=^TMP($J,"SDAMA301",ERR)
"RTN","DGENRPT5",29,0)
 ..F CNT=1:1:$L(VETARRAY(I),";")-1 S ^TMP($J,"SDAMA",$P(VETARRAY(I),";",CNT),"ERROR")=ERROR
"RTN","DGENRPT5",30,0)
 .;
"RTN","DGENRPT5",31,0)
 .I SDCNT>0 M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","DGENRPT5",32,0)
 .K ^TMP($J,"SDAMA301")
"RTN","DGENRPT5",33,0)
 .K DGARRAY
"RTN","DGENRPT5",34,0)
 Q
"RTN","DGENRPT5",35,0)
 ;
"RTN","DGENRPT5",36,0)
BLDUTL(DFN) ; Build Utility Global Entries for records processed
"RTN","DGENRPT5",37,0)
 Q:'$D(^TMP($J,"SDAMA301",DFN))
"RTN","DGENRPT5",38,0)
 N CLIEN,APPTDT,NODE,APPTNUM S APPTNUM=1
"RTN","DGENRPT5",39,0)
 S CLIEN=0  F  S CLIEN=$O(^TMP($J,"SDAMA301",DFN,CLIEN)) Q:'CLIEN  D
"RTN","DGENRPT5",40,0)
 .S APPTDT=0 F  S APPTDT=$O(^TMP($J,"SDAMA301",DFN,CLIEN,APPTDT)) Q:'APPTDT  D
"RTN","DGENRPT5",41,0)
 ..Q:APPTDT'>DT
"RTN","DGENRPT5",42,0)
 ..S NODE=^TMP($J,"SDAMA301",DFN,CLIEN,APPTDT)
"RTN","DGENRPT5",43,0)
 ..S ^UTILITY("VASD",$J,APPTNUM,"E")=$$FMTE^DILIBF($P(NODE,U),"5U")_U_$P($P(NODE,U,2),";",2)_U_U_$P($P(NODE,U,10),";",2)
"RTN","DGENRPT5",44,0)
 ..S ^UTILITY("VASD",$J,APPTNUM,"I")=NODE,APPTNUM=APPTNUM+1
"RTN","DGENRPT5",45,0)
 K ^TMP($J,"SDAMA301")
"RTN","DGENRPT5",46,0)
 Q
"RTN","DGFFPLM")
0^7^B6269305
"RTN","DGFFPLM",1,0)
DGFFPLM ; ALB/GAH - FUGITIVE FELON PROGRAM LM INQUIRY ; 10-10-2006
"RTN","DGFFPLM",2,0)
 ;;5.3;Registration;**485,725**;Aug 13, 1993;Build 12
"RTN","DGFFPLM",3,0)
EN ; -- main entry point for DGFFP PATIENT STATUS INQUIRY
"RTN","DGFFPLM",4,0)
 N DFN,VALMCNT
"RTN","DGFFPLM",5,0)
 ;
"RTN","DGFFPLM",6,0)
 D SEL^DGFFPLM1(.DFN)
"RTN","DGFFPLM",7,0)
 Q:DFN'>0
"RTN","DGFFPLM",8,0)
 D EN^VALM("DGFFP PATIENT STATUS INQUIRY")
"RTN","DGFFPLM",9,0)
 Q
"RTN","DGFFPLM",10,0)
 ;
"RTN","DGFFPLM",11,0)
HDR ; -- header code
"RTN","DGFFPLM",12,0)
 N VA,X
"RTN","DGFFPLM",13,0)
 ;
"RTN","DGFFPLM",14,0)
 D PID^VADPT
"RTN","DGFFPLM",15,0)
 S VALMHDR(1)=$E("Patient: "_$P($G(^DPT(DFN,0)),U),1,30)_" ("_VA("PID")_")"
"RTN","DGFFPLM",16,0)
 S VALMHDR(2)=$S($D(^DPT("AXFFP",1,DFN)):"Fugitive Flag Set",1:"")
"RTN","DGFFPLM",17,0)
 S VALMHDR(3)=$$LASTACT(DFN)
"RTN","DGFFPLM",18,0)
 Q
"RTN","DGFFPLM",19,0)
 ;
"RTN","DGFFPLM",20,0)
INIT ; -- init variables and list array
"RTN","DGFFPLM",21,0)
 N VALMBCK
"RTN","DGFFPLM",22,0)
 D BLD
"RTN","DGFFPLM",23,0)
 Q
"RTN","DGFFPLM",24,0)
 ;
"RTN","DGFFPLM",25,0)
BLD ; Build patient fugitive felon program screen
"RTN","DGFFPLM",26,0)
 D CLEAN^VALM10
"RTN","DGFFPLM",27,0)
 K ^TMP("DGFFPLM",$J)
"RTN","DGFFPLM",28,0)
 ;
"RTN","DGFFPLM",29,0)
 D HDR
"RTN","DGFFPLM",30,0)
 D EN^DGFFPLM1(DFN,"DGFFPLM",1,.VALMCNT)
"RTN","DGFFPLM",31,0)
 Q
"RTN","DGFFPLM",32,0)
 ;
"RTN","DGFFPLM",33,0)
HELP ; -- help code
"RTN","DGFFPLM",34,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","DGFFPLM",35,0)
 Q
"RTN","DGFFPLM",36,0)
 ;
"RTN","DGFFPLM",37,0)
EXIT ; -- exit code
"RTN","DGFFPLM",38,0)
 D CLEAN^VALM10
"RTN","DGFFPLM",39,0)
 D CLEAR^VALM1
"RTN","DGFFPLM",40,0)
 K ^TMP("DGFFPLM",$J)
"RTN","DGFFPLM",41,0)
 Q
"RTN","DGFFPLM",42,0)
 ;
"RTN","DGFFPLM",43,0)
EXPND ; -- expand code
"RTN","DGFFPLM",44,0)
 Q
"RTN","DGFFPLM",45,0)
 ;
"RTN","DGFFPLM",46,0)
LASTACT(DFN) ;
"RTN","DGFFPLM",47,0)
 N DGCLNME,DGDT,ERRCODE,NEWDAT,OLDDAT,RSLT,SDARRAY,SDCOUNT
"RTN","DGFFPLM",48,0)
 ;
"RTN","DGFFPLM",49,0)
 S DGDT=$$NOW^XLFDT
"RTN","DGFFPLM",50,0)
 S SDARRAY(4)=DFN
"RTN","DGFFPLM",51,0)
 S SDARRAY(1)=";"_DGDT
"RTN","DGFFPLM",52,0)
 S SDARRAY("FLDS")=1
"RTN","DGFFPLM",53,0)
 S SDCOUNT=$$SDAPI^SDAMA301(.SDARRAY)  ;Get all appointments for the patient
"RTN","DGFFPLM",54,0)
 I SDCOUNT>0 D     ;Get the last appointment date and client if records found
"RTN","DGFFPLM",55,0)
 . S DGCLN="",DGDT=0
"RTN","DGFFPLM",56,0)
 . F  S DGCLN=$O(^TMP($J,"SDAMA301",DFN,DGCLN)) Q:DGCLN=""  D
"RTN","DGFFPLM",57,0)
 . . S NEWDAT=+$O(^TMP($J,"SDAMA301",DFN,DGCLN,""),-1)
"RTN","DGFFPLM",58,0)
 . . I NEWDAT>DGDT S DGDT=NEWDAT,DGCLNME=DGCLN
"RTN","DGFFPLM",59,0)
 . S RSLT="Last Appointment: "_$$FMTE^XLFDT(DGDT,"1P")_"   Clinic: "_DGCLNME
"RTN","DGFFPLM",60,0)
 I SDCOUNT<0 S ERRCODE=$O(^TMP($J,"SDAMA301","")) I ERRCODE'="" S RSLT="Last Appointment: "_$G(^TMP($J,"SDAMA301",ERRCODE))
"RTN","DGFFPLM",61,0)
 K ^TMP($J,"SDAMA301")
"RTN","DGFFPLM",62,0)
 Q $G(RSLT)
"RTN","DGFFPLM",63,0)
 ;
"RTN","DGFFPLM",64,0)
PAT ; Entry point for DGFFP CHANGE PATIENT PROTOCOL
"RTN","DGFFPLM",65,0)
 ; Input  - None
"RTN","DGFFPLM",66,0)
 ; Output - DFN      Patient IEN
"RTN","DGFFPLM",67,0)
 ;          VALMBCK  R = Refresh screen
"RTN","DGFFPLM",68,0)
 ;
"RTN","DGFFPLM",69,0)
 N DGDFN
"RTN","DGFFPLM",70,0)
 S VALMBCK=""
"RTN","DGFFPLM",71,0)
 D FULL^VALM1
"RTN","DGFFPLM",72,0)
 ;
"RTN","DGFFPLM",73,0)
 ; Get new patient
"RTN","DGFFPLM",74,0)
 D SEL^DGFFPLM1(.DGDFN)
"RTN","DGFFPLM",75,0)
 ;
"RTN","DGFFPLM",76,0)
 I DGDFN>0 D
"RTN","DGFFPLM",77,0)
 . S DFN=DGDFN
"RTN","DGFFPLM",78,0)
 . D BLD^DGFFPLM
"RTN","DGFFPLM",79,0)
 S VALMBCK="R"
"RTN","DGFFPLM",80,0)
 Q
"RTN","DGMTOFA")
0^8^B19818712
"RTN","DGMTOFA",1,0)
DGMTOFA ;ALB/CAW/AEG - Future Appointments who will require MT ; 03/19/2004
"RTN","DGMTOFA",2,0)
 ;;5.3;Registration;**3,50,182,326,426,568,725**;Aug 13, 1993;Build 12
"RTN","DGMTOFA",3,0)
 ;
"RTN","DGMTOFA",4,0)
EN ; 
"RTN","DGMTOFA",5,0)
 I '$$RANGE^DGMTUTL("F") G ENQ
"RTN","DGMTOFA",6,0)
 I '$$DIV^DGMTUTL G ENQ
"RTN","DGMTOFA",7,0)
 I '$$CLINIC^DGMTUTL G ENQ
"RTN","DGMTOFA",8,0)
 ;I '$$LETTER G ENQ
"RTN","DGMTOFA",9,0)
 W !! S %ZIS="PMQ" D ^%ZIS I POP G ENQ
"RTN","DGMTOFA",10,0)
 I '$D(IO("Q")) D MAIN G ENQ
"RTN","DGMTOFA",11,0)
 S Y=$$QUE
"RTN","DGMTOFA",12,0)
ENQ ;
"RTN","DGMTOFA",13,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","DGMTOFA",14,0)
 K DFN,DGAPT,DGBEG,DGCLN,DGDATE,DGDFN,DGDIV,DGEND,DGFLG,DGINFO,DGLINE,DGLST,DGMT,DGMT1,DGPAGE,DGSTOP,DGTMP,DGTMP1,DGTMP2,DGMTYPT,DGYN,DIW,DIWF,DIWR,DIWT,DN,SDFORM,SDLET,VA,VAERR,VAUTC,VAUTD,^TMP("DGMTO",$J),^TMP("DGMTL",$J)
"RTN","DGMTOFA",15,0)
 K DGARRAY,CLNARRAY,^TMP($J,"SDAMA"),I,DGTMP,SDCNT
"RTN","DGMTOFA",16,0)
 Q
"RTN","DGMTOFA",17,0)
 ;
"RTN","DGMTOFA",18,0)
QUE() ; -- que job
"RTN","DGMTOFA",19,0)
 ; return: did job que [ 1|yes   0|no ]
"RTN","DGMTOFA",20,0)
 ;
"RTN","DGMTOFA",21,0)
 K ZTSK,IO("Q")
"RTN","DGMTOFA",22,0)
 S ZTDESC="Future Appt. w/ Means Test",ZTRTN="MAIN^DGMTOFA"
"RTN","DGMTOFA",23,0)
 F X="DGBEG","DGEND","DGYN","DGMTYPT","SDFORM","SDLET","VAUTC","VAUTD","VAUTC(","VAUTD(" S ZTSAVE(X)=""
"RTN","DGMTOFA",24,0)
 D ^%ZTLOAD W:$D(ZTSK) "   (Task: ",ZTSK,")"
"RTN","DGMTOFA",25,0)
 Q $D(ZTSK)
"RTN","DGMTOFA",26,0)
 ;
"RTN","DGMTOFA",27,0)
MAIN ; 
"RTN","DGMTOFA",28,0)
 K ^TMP("DGMTO",$J) S I=1
"RTN","DGMTOFA",29,0)
 I VAUTC=1,VAUTD=1 S DGCLN=0 F  S DGCLN=$O(^SC(DGCLN)) Q:'DGCLN  I $P(^(DGCLN,0),U,3)="C" D CBLD3(DGCLN)
"RTN","DGMTOFA",30,0)
 ;
"RTN","DGMTOFA",31,0)
 I VAUTC=1,VAUTD=0 S DGDIV="" F  S DGDIV=$O(VAUTD(DGDIV)) Q:'DGDIV  S DGCLN=0 F  S DGCLN=$O(^SC(DGCLN)) Q:'DGCLN  I $P(^SC(DGCLN,0),U,3)="C",$P(^SC(DGCLN,0),U,15)=DGDIV D CBLD3(DGCLN)
"RTN","DGMTOFA",32,0)
 I VAUTC=0 S DGCLN="" F  S DGCLN=$O(VAUTC(DGCLN)) Q:'DGCLN  D CBLD3(DGCLN)
"RTN","DGMTOFA",33,0)
 D SDAM,CLN1
"RTN","DGMTOFA",34,0)
 D ^DGMTOFA1
"RTN","DGMTOFA",35,0)
 D CLOSE^DGMTUTL
"RTN","DGMTOFA",36,0)
 Q
"RTN","DGMTOFA",37,0)
 ;
"RTN","DGMTOFA",38,0)
CBLD3(DGCLN) ; Build array of specified Clinics for specified Divisions
"RTN","DGMTOFA",39,0)
 S CLNARRAY(I)=$G(CLNARRAY(I))_DGCLN_";"
"RTN","DGMTOFA",40,0)
 I $L(CLNARRAY(I))>120 S I=I+1
"RTN","DGMTOFA",41,0)
 Q
"RTN","DGMTOFA",42,0)
 ;
"RTN","DGMTOFA",43,0)
SDAM ; Build TMP Global with Appointment API Data for Report
"RTN","DGMTOFA",44,0)
 S DGARRAY(1)=DGBEG_";"_DGEND
"RTN","DGMTOFA",45,0)
 S DGARRAY("FLDS")="1;3;10"
"RTN","DGMTOFA",46,0)
 F I=1:1 Q:'$D(CLNARRAY(I))  D
"RTN","DGMTOFA",47,0)
 .S DGARRAY(2)=CLNARRAY(I)
"RTN","DGMTOFA",48,0)
 .I $$SDAPI^SDAMA301(.DGARRAY)>0 M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","DGMTOFA",49,0)
 .K ^TMP($J,"SDAMA301")
"RTN","DGMTOFA",50,0)
 Q
"RTN","DGMTOFA",51,0)
 ;
"RTN","DGMTOFA",52,0)
CLN1 ; Loop through appointments
"RTN","DGMTOFA",53,0)
 ;
"RTN","DGMTOFA",54,0)
 N DGTMP S DGDATE=DGBEG-.1,DGLST=DGEND+.9
"RTN","DGMTOFA",55,0)
 S DGCLN=0 F  S DGCLN=$O(^TMP($J,"SDAMA",DGCLN)) Q:'DGCLN  D
"RTN","DGMTOFA",56,0)
 .S DGDFN=0 F  S DGDFN=$O(^TMP($J,"SDAMA",DGCLN,DGDFN)) Q:'DGDFN  D
"RTN","DGMTOFA",57,0)
 ..S DGDATE=0 F  S DGDATE=$O(^TMP($J,"SDAMA",DGCLN,DGDFN,DGDATE)) Q:'DGDATE  D
"RTN","DGMTOFA",58,0)
 ...S DGTMP=^TMP($J,"SDAMA",DGCLN,DGDFN,DGDATE)
"RTN","DGMTOFA",59,0)
 ...Q:$$DOM(DGDFN,DGDATE)
"RTN","DGMTOFA",60,0)
 ...Q:"^NS^NSR^CC^CCR^CP^CPR^"[(U_$P($P(DGTMP,U,3),";")_U)
"RTN","DGMTOFA",61,0)
 ...D MT
"RTN","DGMTOFA",62,0)
 Q
"RTN","DGMTOFA",63,0)
MT ; Is patient going to need to complete a MT/Copay by appt?
"RTN","DGMTOFA",64,0)
 S DGMT=$$LST^DGMTU(DGDFN,$P(DGDATE,"."),DGMTYPT),DGMT1=$P($G(^DGMT(408.31,+DGMT,0)),U,3) I DGMT1,"^3^10^"'[("^"_DGMT1_"^") D
"RTN","DGMTOFA",65,0)
 .S X1=$P(DGMT,U,2),X2=365 D C^%DTC I $P(DGDATE,".")<X,$S(DGMT1=1:0,DGMT1=9:0,1:1) Q
"RTN","DGMTOFA",66,0)
 .;Check to see if Cat C/Pend Adj agreed to pay with test date >10/5/99
"RTN","DGMTOFA",67,0)
 .I $P(DGMT,U,2)>2991005,$P($G(^DGMT(408.31,+DGMT,0)),U,11)=1,((DGMT1=6)!(DGMT1=2)) Q
"RTN","DGMTOFA",68,0)
 .;Check to see if Cat C, declined to provide income info but agreed to
"RTN","DGMTOFA",69,0)
 .;pay -- no date restrictions on these types.
"RTN","DGMTOFA",70,0)
 .I $G(DGMT1)=6,+$P($G(^DGMT(408.31,+DGMT,0)),U,14),+$P($G(^DGMT(408.31,+DGMT,0)),U,11) Q
"RTN","DGMTOFA",71,0)
 .; checking for future means test based on DT
"RTN","DGMTOFA",72,0)
 .N DGNXTMT
"RTN","DGMTOFA",73,0)
 .S DGNXTMT=$O(^IVM(301.5,"AE",DGDFN,DT))
"RTN","DGMTOFA",74,0)
 .I 'DGNXTMT S DGNXTMT=""
"RTN","DGMTOFA",75,0)
 .S ^TMP("DGMTO",$J,$S(+$P(^SC(DGCLN,0),U,15):$P(^(0),U,15),1:$O(^DG(40.8,0))),$P(^SC(DGCLN,0),U),$P(^DPT(DGDFN,0),U),DGDATE)=DGDFN_U_$P(DGMT,U,1,4)_U_$P($P(DGTMP,U,10),";")_U_DGNXTMT,^TMP("DGMTL",$J,$P(^DPT(DGDFN,0),U),DGDFN)=""
"RTN","DGMTOFA",76,0)
 Q
"RTN","DGMTOFA",77,0)
 ;
"RTN","DGMTOFA",78,0)
LETTER() ;
"RTN","DGMTOFA",79,0)
 ;   Input - none
"RTN","DGMTOFA",80,0)
 ;  Output - DGYN - yes/no
"RTN","DGMTOFA",81,0)
 ;
"RTN","DGMTOFA",82,0)
 N %
"RTN","DGMTOFA",83,0)
LTR W !!,"Do you want to generate letters" S %=2 D YN^DICN
"RTN","DGMTOFA",84,0)
 ;I %=1 D START^DGMTLTR S DGYN=$S('$D(DGFLG):1,1:0)
"RTN","DGMTOFA",85,0)
 I %=2 S DGYN=0
"RTN","DGMTOFA",86,0)
 I %=0 W !!,"Enter 'Y'es to generate letters from the listing or",!,"Enter 'N'o to produce the listing, but not the letters." G LTR
"RTN","DGMTOFA",87,0)
 Q $D(DGYN)
"RTN","DGMTOFA",88,0)
 ;
"RTN","DGMTOFA",89,0)
DOM(DFN,DGT) ; Screen out dom patient
"RTN","DGMTOFA",90,0)
 ;         Input:   DFN - Patient IEN
"RTN","DGMTOFA",91,0)
 ;                  DGT - Date of visit
"RTN","DGMTOFA",92,0)
 ;
"RTN","DGMTOFA",93,0)
 N Y,DGI,DGXFR0,DGA1,DGINP
"RTN","DGMTOFA",94,0)
 S Y=0
"RTN","DGMTOFA",95,0)
 D ^DGINPW I DG1 I $P(^DG(43,1,0),U,21),$D(^DIC(42,+DG1,0)),$P(^(0),U,3)="D" S Y=1
"RTN","DGMTOFA",96,0)
 Q Y
"RTN","DGQESC2")
0^9^B21637202
"RTN","DGQESC2",1,0)
DGQESC2 ;ALB/JFP - VIC OUTPATIENT CLINIC SCAN ROUTINE ; 03/29/2004
"RTN","DGQESC2",2,0)
 ;;5.3;Registration;**73,568,725**;Aug 13, 1993;Build 12
"RTN","DGQESC2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DGQESC2",4,0)
 ;
"RTN","DGQESC2",5,0)
ENO ; -- Entry Point
"RTN","DGQESC2",6,0)
 N DIR,Y
"RTN","DGQESC2",7,0)
 ;
"RTN","DGQESC2",8,0)
 S DIR(0)="YA"
"RTN","DGQESC2",9,0)
 S DIR("A")="Download Clinics patients to the VIC card station: "
"RTN","DGQESC2",10,0)
 S DIR("B")="NO"
"RTN","DGQESC2",11,0)
 S DIR("?")="Enter yes to download data."
"RTN","DGQESC2",12,0)
 D ^DIR
"RTN","DGQESC2",13,0)
 I Y D  Q
"RTN","DGQESC2",14,0)
 .; -- New Variables
"RTN","DGQESC2",15,0)
 .N VAUTD,VAUTNI,VAUTC
"RTN","DGQESC2",16,0)
 .N DATE,DFNARR,CNT,Y,ERR,SDATE,EDATE,DFN,RESULTS
"RTN","DGQESC2",17,0)
 .N DIVFLAG,DIVISION,SELDIV
"RTN","DGQESC2",18,0)
 .N DGSUB,DGJ,DGUTD,DGWD,DGDV,ZTSTOP
"RTN","DGQESC2",19,0)
 .; -- Set Variables
"RTN","DGQESC2",20,0)
 .S VAUTD=1  ; -- All divisions selected
"RTN","DGQESC2",21,0)
 .D NOW^%DTC S DATE=%
"RTN","DGQESC2",22,0)
 .S DFNARR="^TMP(""DGQE-DFN"","_$J_")"
"RTN","DGQESC2",23,0)
 .K @DFNARR
"RTN","DGQESC2",24,0)
 .S CNT=0
"RTN","DGQESC2",25,0)
 .; -- Check for multi divisional hospital
"RTN","DGQESC2",26,0)
 .I $P(^DG(43,1,"GL"),"^",2)=1 D  Q:Y=-1
"RTN","DGQESC2",27,0)
 ..D DIVISION^VAUTOMA
"RTN","DGQESC2",28,0)
 .; -- Check for Clinics within division or all
"RTN","DGQESC2",29,0)
 .S VAUTNI=2
"RTN","DGQESC2",30,0)
 .D CLINIC^VAUTOMA
"RTN","DGQESC2",31,0)
 .I Y=-1 Q
"RTN","DGQESC2",32,0)
 .; -- Download for date range
"RTN","DGQESC2",33,0)
 .S ERR=$$SDATE^DGQESC0()
"RTN","DGQESC2",34,0)
 .I ERR=-1 Q
"RTN","DGQESC2",35,0)
 .S SDATE=ERR
"RTN","DGQESC2",36,0)
 .S ERR=$$EDATE^DGQESC0(ERR)
"RTN","DGQESC2",37,0)
 .I ERR=-1 Q
"RTN","DGQESC2",38,0)
 .S EDATE=ERR
"RTN","DGQESC2",39,0)
 .S DIR(0)="YA"
"RTN","DGQESC2",40,0)
 .; -- Task off job
"RTN","DGQESC2",41,0)
 .S DIR("A")="Task job: "
"RTN","DGQESC2",42,0)
 .S DIR("B")="YES"
"RTN","DGQESC2",43,0)
 .S DIR("?")="Enter YES/NO to determine whether job is tasked"
"RTN","DGQESC2",44,0)
 .D ^DIR
"RTN","DGQESC2",45,0)
 .Q:$D(DIRUT)
"RTN","DGQESC2",46,0)
 .I Y D  Q
"RTN","DGQESC2",47,0)
 ..D BATCH
"RTN","DGQESC2",48,0)
 ..I '$D(ZTSK) Q
"RTN","DGQESC2",49,0)
 ..W !,"Card(s) queued, task number = "_ZTSK
"RTN","DGQESC2",50,0)
 .D OUTSCAN
"RTN","DGQESC2",51,0)
 Q
"RTN","DGQESC2",52,0)
 ;
"RTN","DGQESC2",53,0)
EXIT ; -- Finish Process
"RTN","DGQESC2",54,0)
 I '$D(ZTQUEUED)&($P(RESULTS,"^",1)=0) W !!,CNT_" Outpatients down loaded to VIC work station"
"RTN","DGQESC2",55,0)
 K @DFNARR
"RTN","DGQESC2",56,0)
 Q
"RTN","DGQESC2",57,0)
 ;
"RTN","DGQESC2",58,0)
OUTSCAN ; Scan the clinics for appointments to create VIC cards
"RTN","DGQESC2",59,0)
 ;
"RTN","DGQESC2",60,0)
 N CLINIC,CLINDATE,DPTINFO,I,CLNARRAY,DGARRAY,DGDIV,SDCNT S I=1
"RTN","DGQESC2",61,0)
 K ^TMP($J,"SDAMA"),^TMP($J,"SDAMA301")
"RTN","DGQESC2",62,0)
 ;
"RTN","DGQESC2",63,0)
 I '$D(ZTQUEUED) W !!,"Note: Each Dot equals a clinic",!
"RTN","DGQESC2",64,0)
 I VAUTC,VAUTD D
"RTN","DGQESC2",65,0)
 .S CLINIC=0 F  S CLINIC=$O(^SC(CLINIC)) Q:'CLINIC  D
"RTN","DGQESC2",66,0)
 ..I $P(^SC(CLINIC,0),U,3)="C" D CBLD3(CLINIC)
"RTN","DGQESC2",67,0)
 ;
"RTN","DGQESC2",68,0)
 I VAUTC,'VAUTD S DGDIV="" D
"RTN","DGQESC2",69,0)
 .S DGDIV="" F  S DGDIV=$O(VAUTD(DGDIV)) Q:'DGDIV  D
"RTN","DGQESC2",70,0)
 ..S CLINIC=0 F  S CLINIC=$O(^SC(CLINIC)) Q:'CLINIC  D
"RTN","DGQESC2",71,0)
 ...I $P(^SC(CLINIC,0),U,3)="C",$P(^SC(CLINIC,0),U,15)=DGDIV D CBLD3(CLINIC)
"RTN","DGQESC2",72,0)
 ;
"RTN","DGQESC2",73,0)
 I 'VAUTC S CLINIC=0 F  S CLINIC=$O(VAUTC(CLINIC)) Q:'CLINIC  D CBLD3(CLINIC)
"RTN","DGQESC2",74,0)
 ;
"RTN","DGQESC2",75,0)
 D SDAMA,BLDTMP,BLDHL7
"RTN","DGQESC2",76,0)
 K DGARRAY,SDCNT,^TMP($J,"SDAMA301"),^TMP($J,"SDAMA")
"RTN","DGQESC2",77,0)
 Q
"RTN","DGQESC2",78,0)
CBLD3(CLINIC) ; Build array of specified Clinics for specified Divisions
"RTN","DGQESC2",79,0)
 S CLNARRAY(I)=$G(CLNARRAY(I))_CLINIC_";"
"RTN","DGQESC2",80,0)
 I $L(CLNARRAY(I))>120 S I=I+1
"RTN","DGQESC2",81,0)
 I '$D(ZTQUEUED) W "."
"RTN","DGQESC2",82,0)
 Q
"RTN","DGQESC2",83,0)
 ;
"RTN","DGQESC2",84,0)
SDAMA ; Build TMP Global with Appointment API Data for Report
"RTN","DGQESC2",85,0)
 S DGARRAY(1)=SDATE_";"_EDATE
"RTN","DGQESC2",86,0)
 S DGARRAY("FLDS")="2;3"
"RTN","DGQESC2",87,0)
 F I=1:1 Q:'$D(CLNARRAY(I))  D
"RTN","DGQESC2",88,0)
 .S DGARRAY(2)=CLNARRAY(I)
"RTN","DGQESC2",89,0)
 .I $$SDAPI^SDAMA301(.DGARRAY)>0 M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","DGQESC2",90,0)
 .K ^TMP($J,"SDAMA301")
"RTN","DGQESC2",91,0)
 Q
"RTN","DGQESC2",92,0)
BLDHL7 ; -- Building HL7 batch message
"RTN","DGQESC2",93,0)
 S DFN=""
"RTN","DGQESC2",94,0)
 F  S DFN=$O(@DFNARR@(DFN)) Q:'DFN  S CNT=CNT+1
"RTN","DGQESC2",95,0)
 S RESULTS=$$EVENT^DGQEHL72("A08",DFNARR)
"RTN","DGQESC2",96,0)
 I '$D(ZTQUEUED)&($P(RESULTS,"^",1)=-1) D
"RTN","DGQESC2",97,0)
 .W !,"Clinic patients not downloaded.  Error - ",$P(RESULTS,"^",2)
"RTN","DGQESC2",98,0)
 ; -- Clean up variables
"RTN","DGQESC2",99,0)
 D EXIT
"RTN","DGQESC2",100,0)
 Q
"RTN","DGQESC2",101,0)
 ;
"RTN","DGQESC2",102,0)
BLDTMP ;
"RTN","DGQESC2",103,0)
 ; -- Building Temporary Storage Data
"RTN","DGQESC2",104,0)
 S (ZTSTOP,CLINIC)=0 F  S CLINIC=$O(^TMP($J,"SDAMA",CLINIC)) Q:'CLINIC!(ZTSTOP)  D
"RTN","DGQESC2",105,0)
 .I $$S^%ZTLOAD S ZTSTOP=1 Q
"RTN","DGQESC2",106,0)
 .S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA",CLINIC,DFN)) Q:'DFN  D
"RTN","DGQESC2",107,0)
 ..S CLINDATE=0 F  S CLINDATE=$O(^TMP($J,"SDAMA",CLINIC,DFN,CLINDATE)) Q:'CLINDATE  D
"RTN","DGQESC2",108,0)
 ...I $P($P(^TMP($J,"SDAMA",CLINIC,DFN,CLINDATE),U,3),";")="R" S @DFNARR@(DFN)=""
"RTN","DGQESC2",109,0)
 Q
"RTN","DGQESC2",110,0)
 ;
"RTN","DGQESC2",111,0)
CHKDIV ; -- Check to see if clinic is part of Division selected
"RTN","DGQESC2",112,0)
 ; -- re-sequences array
"RTN","DGQESC2",113,0)
 S DGSUB="" F DGJ=1:1 S DGSUB=$O(VAUTD(DGSUB)) Q:DGSUB=""  S DGUTD(DGJ)=$G(VAUTD(DGSUB))
"RTN","DGQESC2",114,0)
 ;
"RTN","DGQESC2",115,0)
 S DIVFLAG=0
"RTN","DGQESC2",116,0)
 S DGWD=CLINIC
"RTN","DGQESC2",117,0)
 I DGWD S DGDV=$S('$D(^SC(DGWD,0)):0,+$P(^(0),"^",15):$P(^(0),"^",15),1:$O(^DG(40.8,0)))
"RTN","DGQESC2",118,0)
 I DGDV=0 S DIVFLAG=0 Q
"RTN","DGQESC2",119,0)
 S DIVISION=$P($G(^DG(40.8,DGDV,0)),U,1)
"RTN","DGQESC2",120,0)
 I DIVISION="" S DIVFLAG=0 Q
"RTN","DGQESC2",121,0)
 ;W !,"DIVISION = ",DIVISION
"RTN","DGQESC2",122,0)
 F DGJ=1:1 S SELDIV=DGUTD(DGJ) D  Q:'$D(DGUTD(DGJ+1))
"RTN","DGQESC2",123,0)
 .;W !,"SELDIV = ",SELDIV
"RTN","DGQESC2",124,0)
 .I SELDIV=DIVISION S DIVFLAG=1 Q 
"RTN","DGQESC2",125,0)
 Q
"RTN","DGQESC2",126,0)
 ;
"RTN","DGQESC2",127,0)
BATCH ; -- Entry point for placing cards on hold
"RTN","DGQESC2",128,0)
 N ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,G
"RTN","DGQESC2",129,0)
 ;
"RTN","DGQESC2",130,0)
 S ZTRTN="OUTSCAN^DGQESC2"
"RTN","DGQESC2",131,0)
 S ZTDESC="Download Outpatients to VIC work station via HL7"
"RTN","DGQESC2",132,0)
 S ZTIO=""
"RTN","DGQESC2",133,0)
 K ZTDTH
"RTN","DGQESC2",134,0)
 ;D NOW^%DTC S ZTDTH=%
"RTN","DGQESC2",135,0)
 F G="VAUTD","VAUTC","CNT","DFNARR","SDATE","EDATE" S:$D(@G) ZTSAVE(G)=""
"RTN","DGQESC2",136,0)
 S ZTSAVE("VAUTD(")="",ZTSAVE("VAUTC(")=""
"RTN","DGQESC2",137,0)
 D ^%ZTLOAD
"RTN","DGQESC2",138,0)
 Q
"RTN","DGQESC2",139,0)
 ;
"RTN","DGQESC2",140,0)
END ; -- End of Code
"RTN","DGQESC2",141,0)
 Q
"RTN","DGQESC2",142,0)
 ;
"RTN","DGQPTQ2")
0^10^B36432808
"RTN","DGQPTQ2",1,0)
DGQPTQ2 ; slc/CLA - Functions which return patient lists and list sources pt 2 ;05/05/2004
"RTN","DGQPTQ2",2,0)
 ;;5.3;Registration;**447,598,725**;Aug 13, 1993;Build 12
"RTN","DGQPTQ2",3,0)
CLIN(Y) ; RETURN LIST OF CLINICS
"RTN","DGQPTQ2",4,0)
 N DGLST,IEN,I
"RTN","DGQPTQ2",5,0)
 D GETLST^XPAR(.DGLST,"ALL","DGWD COMMON CLINIC")
"RTN","DGQPTQ2",6,0)
 S I=0 F  S I=$O(DGLST(I)) Q:'I  D
"RTN","DGQPTQ2",7,0)
 . S IEN=$P(DGLST(I),U,2) I $$ACTLOC^SDWU(IEN)=1 D
"RTN","DGQPTQ2",8,0)
 .. S Y(I)=IEN_U_$P(^SC(IEN,0),U,1)
"RTN","DGQPTQ2",9,0)
 Q
"RTN","DGQPTQ2",10,0)
CLINPTS(Y,CLIN,DGBDATE,DGEDATE) ; RETURN LIST OF PTS W/CLINIC APPT W/IN BEGINNING AND END DATES
"RTN","DGQPTQ2",11,0)
 I +$G(CLIN)<1 S Y(1)="^No clinic identified" Q 
"RTN","DGQPTQ2",12,0)
 I $$ACTLOC^SDWU(CLIN)'=1 S Y(1)="^Clinic is inactive or Occasion Of Service" Q
"RTN","DGQPTQ2",13,0)
 N DFN,NAME,I,J,X,DGJ,DGSRV,DGNOWDT,CHKX,CHKIN,MAXAPPTS,DGC,CLNAM
"RTN","DGQPTQ2",14,0)
 S MAXAPPTS=200
"RTN","DGQPTQ2",15,0)
 S DGNOWDT=$$NOW^XLFDT
"RTN","DGQPTQ2",16,0)
 S DGSRV=$G(^VA(200,DUZ,5)) I +DGSRV>0 S DGSRV=$P(DGSRV,U)
"RTN","DGQPTQ2",17,0)
 S DFN=0,I=1
"RTN","DGQPTQ2",18,0)
 I DGBDATE="" S DGBDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(DGSRV)_"^DIV^SYS^PKG","DGLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","DGQPTQ2",19,0)
 I DGEDATE="" S DGEDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(DGSRV)_"^DIV^SYS^PKG","DGLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","DGQPTQ2",20,0)
 ;CONVERT DGBDATE AND DGEDATE INTO FILEMAN DATE/TIME
"RTN","DGQPTQ2",21,0)
 D DT^DILF("T",DGBDATE,.DGBDATE,"","")
"RTN","DGQPTQ2",22,0)
 D DT^DILF("T",DGEDATE,.DGEDATE,"","")
"RTN","DGQPTQ2",23,0)
 I (DGBDATE=-1)!(DGEDATE=-1) S Y(1)="^Error in date range." Q 
"RTN","DGQPTQ2",24,0)
 S DGEDATE=$P(DGEDATE,".")_.5
"RTN","DGQPTQ2",25,0)
 ;
"RTN","DGQPTQ2",26,0)
 N DGARRAY,SDCNT,SDFN,SAPPT,ASTAT
"RTN","DGQPTQ2",27,0)
 S DGARRAY(1)=DGBDATE_";"_DGEDATE,DGARRAY(2)=CLIN,DGARRAY("FLDS")="1;2;3"
"RTN","DGQPTQ2",28,0)
 S DGARRAY("SORT")="P",SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGQPTQ2",29,0)
 I SDCNT<0 S X=$$FAPCHK^DGENRPD2 I X'="" S Y(1)=X K ^TMP($J,"SDAMA301") Q
"RTN","DGQPTQ2",30,0)
 S SDFN=0 F  S SDFN=$O(^TMP($J,"SDAMA301",SDFN)) Q:'SDFN  D
"RTN","DGQPTQ2",31,0)
 .S SAPPT=0 F  S SAPPT=$O(^TMP($J,"SDAMA301",SDFN,SAPPT)) Q:'SAPPT  D
"RTN","DGQPTQ2",32,0)
 ..S ^TMP($J,"SDAM",SAPPT,SDFN)=SDFN_"^"_^TMP($J,"SDAMA301",SDFN,SAPPT)
"RTN","DGQPTQ2",33,0)
 ;
"RTN","DGQPTQ2",34,0)
 S DGJ=0 F  S DGJ=$O(^TMP($J,"SDAM",DGJ)) Q:'DGJ  D
"RTN","DGQPTQ2",35,0)
 .S DFN=0 F  S DFN=$O(^TMP($J,"SDAM",DGJ,DFN)) Q:'DFN  D
"RTN","DGQPTQ2",36,0)
 ..S ASTAT=$P($P(^TMP($J,"SDAM",DGJ,DFN),"^",4),";")
"RTN","DGQPTQ2",37,0)
 ..; quit if appt cancelled or no show:
"RTN","DGQPTQ2",38,0)
 ..I ASTAT'="NT",(ASTAT["C")!(ASTAT["N") Q
"RTN","DGQPTQ2",39,0)
 ..S Y(I)=DFN_"^"_$P(^DPT(DFN,0),"^")_"^"_+CLIN_"^"_DGJ,I=I+1
"RTN","DGQPTQ2",40,0)
 ;
"RTN","DGQPTQ2",41,0)
 I I>MAXAPPTS D  ;maximum allowable appointments exceeded
"RTN","DGQPTQ2",42,0)
 .S CLNAM=$P($G(^SC(CLIN,0)),U)
"RTN","DGQPTQ2",43,0)
 .K Y S Y(1)="^CLINIC: "_CLNAM_" - Too many appointments found; please narrow search range."
"RTN","DGQPTQ2",44,0)
 S:'$D(Y) Y(1)="^No appointments."
"RTN","DGQPTQ2",45,0)
 K ^TMP($J,"SDAM"),^TMP($J,"SDAMA301"),SDCNT,DGARRAY,SDFN,SAPPT,ASTAT
"RTN","DGQPTQ2",46,0)
 Q
"RTN","DGQPTQ2",47,0)
CDATRANG(DGY) ; return default start and stop dates for clinics in form start^stop
"RTN","DGQPTQ2",48,0)
 N DGBDATE,DGEDATE,DGSRV
"RTN","DGQPTQ2",49,0)
 S DGSRV=$G(^VA(200,DUZ,5)) I +DGSRV>0 S DGSRV=$P(DGSRV,U)
"RTN","DGQPTQ2",50,0)
 S DGBDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(DGSRV)_"^DIV^SYS^PKG","DGLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","DGQPTQ2",51,0)
 S DGEDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(DGSRV)_"^DIV^SYS^PKG","DGLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","DGQPTQ2",52,0)
 S DGBDATE=$S($L($G(DGBDATE)):DGBDATE,1:""),DGEDATE=$S($L($G(DGEDATE)):DGEDATE,1:"")
"RTN","DGQPTQ2",53,0)
 S DGY=$$UP^XLFSTR(DGBDATE)_"^"_$$UP^XLFSTR(DGEDATE)
"RTN","DGQPTQ2",54,0)
 Q
"RTN","DGQPTQ2",55,0)
PTAPPTS(Y,DFN,DGBDATE,DGEDATE,CLIN) ; return appts for a patient between beginning and end dates for a clinic, if no clinic return all appointments
"RTN","DGQPTQ2",56,0)
 ;I +$G(CLIN)<1 S Y(1)="^No clinic identified" Q 
"RTN","DGQPTQ2",57,0)
 I +$G(CLIN)>0,$$ACTLOC^SDWU(CLIN)'=1 S Y(1)="^Clinic is inactive or Occasion Of Service" Q
"RTN","DGQPTQ2",58,0)
 N VASD,NUM,CNT,INVDT,INT,EXT,DGSRV S NUM=0,CNT=1
"RTN","DGQPTQ2",59,0)
 I (DGBDATE="")!(DGEDATE="") D  ;get user's service and set up entities:
"RTN","DGQPTQ2",60,0)
 .S DGSRV=$G(^VA(200,DUZ,5)) I +DGSRV>0 S DGSRV=$P(DGSRV,U)
"RTN","DGQPTQ2",61,0)
 I DGBDATE="" D
"RTN","DGQPTQ2",62,0)
 .I '$L(CLIN) S DGBDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(DGSRV)_"^DIV^SYS^PKG","DGQQAP SEARCH RANGE START",1,"E"))
"RTN","DGQPTQ2",63,0)
 .S:DGBDATE="" DGBDATE="T" ;default start date across all clinics is today
"RTN","DGQPTQ2",64,0)
 I DGEDATE="" D
"RTN","DGQPTQ2",65,0)
 .I '$L(CLIN) S DGEDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(DGSRV)_"^DIV^SYS^PKG","DGQQAP SEARCH RANGE STOP",1,"E"))
"RTN","DGQPTQ2",66,0)
 .S:DGEDATE="" DGEDATE="T" ;default end date across all clinics is today
"RTN","DGQPTQ2",67,0)
 ;CONVERT DGBDATE AND DGEDATE INTO FILEMAN DATE/TIME
"RTN","DGQPTQ2",68,0)
 D DT^DILF("T",DGBDATE,.DGBDATE,"","")
"RTN","DGQPTQ2",69,0)
 D DT^DILF("T",DGEDATE,.DGEDATE,"","")
"RTN","DGQPTQ2",70,0)
 I (DGBDATE=-1)!(DGEDATE=-1) S Y(1)="^Error in date range." Q 
"RTN","DGQPTQ2",71,0)
 S VASD("F")=DGBDATE
"RTN","DGQPTQ2",72,0)
 S VASD("T")=$P(DGEDATE,".")_.5  ;ADD 1/2 DAY TO END DATE
"RTN","DGQPTQ2",73,0)
 I $L($G(CLIN)) S VASD("C",CLIN)=""
"RTN","DGQPTQ2",74,0)
 D SDA^VADPT
"RTN","DGQPTQ2",75,0)
 Q:VAERR=1
"RTN","DGQPTQ2",76,0)
 F  S NUM=$O(^UTILITY("VASD",$J,NUM)) Q:'NUM  D
"RTN","DGQPTQ2",77,0)
 .S INT=^UTILITY("VASD",$J,NUM,"I"),INVDT=9999999-$P(INT,U)
"RTN","DGQPTQ2",78,0)
 .S EXT=^UTILITY("VASD",$J,NUM,"E")
"RTN","DGQPTQ2",79,0)
 .S Y(CNT)=$P(INT,U)_U_$P(EXT,U,2)_U_$P(EXT,U,3)_U_$P(EXT,U,4)_U_INVDT
"RTN","DGQPTQ2",80,0)
 .S CNT=CNT+1
"RTN","DGQPTQ2",81,0)
 S:+$G(Y(1))<1 Y(1)="^No appointments."
"RTN","DGQPTQ2",82,0)
 K VAERR
"RTN","DGQPTQ2",83,0)
 Q
"RTN","DGQPTQ2",84,0)
PROV(Y) ; RETURN LIST OF PROVIDERS
"RTN","DGQPTQ2",85,0)
 N I,IEN,NAME,TDATE
"RTN","DGQPTQ2",86,0)
 S I=1,NAME=""
"RTN","DGQPTQ2",87,0)
 F  S NAME=$O(^VA(200,"B",NAME)) Q:NAME=""  S IEN=0,IEN=$O(^(NAME,IEN))  D
"RTN","DGQPTQ2",88,0)
 .Q:$E(NAME)="*"
"RTN","DGQPTQ2",89,0)
 .I $D(^XUSEC("PROVIDER",IEN)),$$ACTIVE^XUSER(IEN) S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","DGQPTQ2",90,0)
 Q
"RTN","DGQPTQ2",91,0)
PROVPTS(Y,PROV) ; RETURN LIST OF PATIENTS LINKED TO A PRIMARY PROVIDER
"RTN","DGQPTQ2",92,0)
 I +$G(PROV)<1 S Y(1)="^No provider identified" Q
"RTN","DGQPTQ2",93,0)
 N DGI,DFN
"RTN","DGQPTQ2",94,0)
 S DGI=1,DFN=0
"RTN","DGQPTQ2",95,0)
 F  S DFN=$O(^DPT("APR",PROV,DFN)) Q:DFN'>0  S Y(DGI)=+DFN_"^"_$P(^DPT(+DFN,0),"^"),DGI=DGI+1
"RTN","DGQPTQ2",96,0)
 S:+$G(Y(1))<1 Y(1)="^No patients found."
"RTN","DGQPTQ2",97,0)
 Q
"RTN","DGQPTQ2",98,0)
SPEC(Y) ; RETURN LIST OF TREATING SPECIALTIES
"RTN","DGQPTQ2",99,0)
 N I,NAME,IEN
"RTN","DGQPTQ2",100,0)
 S I=1,NAME=""
"RTN","DGQPTQ2",101,0)
 ;access to DIC(45.7 global granted under DBIA #519:
"RTN","DGQPTQ2",102,0)
 F  S NAME=$O(^DIC(45.7,"B",NAME)) Q:NAME=""  S IEN=0,IEN=$O(^(NAME,IEN)) I $$ACTIVE^DGACT(45.7,IEN) S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","DGQPTQ2",103,0)
 Q
"RTN","DGQPTQ2",104,0)
SPECPTS(Y,SPEC) ; RETURN LIST OF PATIENTS LINKED TO A TREATING SPECIALTY
"RTN","DGQPTQ2",105,0)
 I +$G(SPEC)<1 S Y(1)="^No specialty identified" Q
"RTN","DGQPTQ2",106,0)
 N DGI,DFN
"RTN","DGQPTQ2",107,0)
 S DGI=1,DFN=0
"RTN","DGQPTQ2",108,0)
 F  S DFN=$O(^DPT("ATR",SPEC,DFN)) Q:DFN'>0  S Y(DGI)=+DFN_"^"_$P(^DPT(+DFN,0),"^"),DGI=DGI+1
"RTN","DGQPTQ2",109,0)
 S:+$G(Y(1))<1 Y(1)="^No patients found."
"RTN","DGQPTQ2",110,0)
 Q
"RTN","DGQPTQ2",111,0)
WARD(Y) ; RETURN LIST OF ACTIVE WARDS
"RTN","DGQPTQ2",112,0)
 N I,IEN,NAME,D0
"RTN","DGQPTQ2",113,0)
 S I=1,NAME=""
"RTN","DGQPTQ2",114,0)
 ;access to DIC(42 global granted under DBIA #36:
"RTN","DGQPTQ2",115,0)
 F  S NAME=$O(^DIC(42,"B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,0)) D
"RTN","DGQPTQ2",116,0)
 . S D0=IEN D WIN^DGPMDDCF
"RTN","DGQPTQ2",117,0)
 . I X=0 S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","DGQPTQ2",118,0)
 Q
"RTN","DGQPTQ2",119,0)
WARDPTS(Y,WARD) ; RETURN LIST OF PATIENTS IN A WARD
"RTN","DGQPTQ2",120,0)
 ; SLC/PKS - Modifications for Room/Bed data on  1/19/2001.
"RTN","DGQPTQ2",121,0)
 I +$G(WARD)<1 S Y(1)="^No ward identified" Q 
"RTN","DGQPTQ2",122,0)
 N DGI,DFN,RBDAT
"RTN","DGQPTQ2",123,0)
 S DGI=1,DFN=0
"RTN","DGQPTQ2",124,0)
 ;access to DIC(42 global granted under DBIA #36:
"RTN","DGQPTQ2",125,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;GET WARD NAME FOR "CN"  LOOKUP
"RTN","DGQPTQ2",126,0)
 ; Next section modified 1/19/2001 by PKS:
"RTN","DGQPTQ2",127,0)
 F  D  Q:DFN'>0
"RTN","DGQPTQ2",128,0)
 .S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0
"RTN","DGQPTQ2",129,0)
 .S Y(DGI)=+DFN_"^"_$P(^DPT(+DFN,0),"^")
"RTN","DGQPTQ2",130,0)
 .S RBDAT=""
"RTN","DGQPTQ2",131,0)
 .; Add patient room/bed information where data exists:
"RTN","DGQPTQ2",132,0)
 .S RBDAT=$P($G(^DPT(+DFN,.101)),U)
"RTN","DGQPTQ2",133,0)
 .; Assure at least 4 letters for any existing room/bed data:
"RTN","DGQPTQ2",134,0)
 .I RBDAT'="" D                                   ; Any R/B data?
"RTN","DGQPTQ2",135,0)
 ..I $L(RBDAT)<4 D                                ; Less than 4 now?
"RTN","DGQPTQ2",136,0)
 ...S RBDAT=RBDAT_"   "                           ; Add 3 for safety.
"RTN","DGQPTQ2",137,0)
 ...S RBDAT=$E(RBDAT,1,4)                         ; Get first 4 only.
"RTN","DGQPTQ2",138,0)
 ...S Y(DGI)=Y(DGI)_U_RBDAT                       ; Add R/B to string
"RTN","DGQPTQ2",139,0)
 .S DGI=DGI+1                                     ; Increment counter.
"RTN","DGQPTQ2",140,0)
 ;
"RTN","DGQPTQ2",141,0)
 S:+$G(Y(1))<1 Y(1)="^No patients found."
"RTN","DGQPTQ2",142,0)
 Q
"RTN","DGQPTQ2",143,0)
NLIST(DGQY) ; return a null list
"RTN","DGQPTQ2",144,0)
 S DGQY(1)=""
"RTN","DGQPTQ2",145,0)
 Q
"RTN","DGRP14")
0^18^B3348919
"RTN","DGRP14",1,0)
DGRP14 ;ALB/MRL/EG/GAH - REGISTRATION SCREEN 14/APPOINTMENT INFORMATION ; 10/18/06
"RTN","DGRP14",2,0)
 ;;5.3;Registration;**568,585,725**;Aug 13, 1993;Build 12
"RTN","DGRP14",3,0)
 S DGRPS=14 D H^DGRPU S (Z,DGRPW)=1 D WW^DGRPV W " Enrollment Clinics: "
"RTN","DGRP14",4,0)
 S I1=""
"RTN","DGRP14",5,0)
 F I=0:0 S I=$O(^DPT(DFN,"DE",I)) Q:'I  D:$P(^(I,0),U,2)'="I"
"RTN","DGRP14",6,0)
 . S I1=1,X=$S($D(^SC(+^(0),0)):$P(^(0),U,1)_", ",1:"")
"RTN","DGRP14",7,0)
 . W:(79-$X)<$L(X) !?24 W X
"RTN","DGRP14",8,0)
 W:'I1 "NOT ACTIVELY ENROLLED IN ANY CLINICS AT THIS TIME"
"RTN","DGRP14",9,0)
 W ! S Z=2 D WW^DGRPV W "     Pending Appt's",?18,": " S I1="",I2=DT_".9999"
"RTN","DGRP14",10,0)
 N DGARRAY,APTDT,CLIFN,CLNAM
"RTN","DGRP14",11,0)
 S DGARRAY("FLDS")="1;2;3",DGARRAY(3)="R;I;NT",DGARRAY(4)=DFN,DGARRAY(1)=DT,DGARRAY("SORT")="P"
"RTN","DGRP14",12,0)
 S I1=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGRP14",13,0)
 ;Check for appointment retrieval error.
"RTN","DGRP14",14,0)
 I I1<0 W $$FAPCHK^DGENRPD2 G Q
"RTN","DGRP14",15,0)
 S APTDT=0
"RTN","DGRP14",16,0)
 F  S APTDT=$O(^TMP($J,"SDAMA301",DFN,APTDT)) Q:'APTDT  D
"RTN","DGRP14",17,0)
 .;check to see if appointment is cancelled, if so
"RTN","DGRP14",18,0)
 .;ignore this appointment eg 01/25/2005
"RTN","DGRP14",19,0)
 .I $$CANCEL(DFN,APTDT)="Y" Q
"RTN","DGRP14",20,0)
 .S CLNAM=$P($P(^TMP($J,"SDAMA301",DFN,APTDT),U,2),";",2)
"RTN","DGRP14",21,0)
 .S X=$S(CLNAM]"":CLNAM,1:"UNKNOWN CLINIC")_" ("_$$FMTE^DILIBF(APTDT,"5U")_"), " W:(79-$X)<$L(X) !?24 W X
"RTN","DGRP14",22,0)
 .Q
"RTN","DGRP14",23,0)
 I 'I1 W "NO PENDING APPOINTMENTS ON FILE"
"RTN","DGRP14",24,0)
Q K I,I1,I2,X,Y,DGARRAY,APTDT,CLNAM,^TMP($J,"SDAMA301") G ^DGRPP
"RTN","DGRP14",25,0)
 ;
"RTN","DGRP14",26,0)
 ;input DFN - patient id
"RTN","DGRP14",27,0)
 ;      APPDATE - appointment date
"RTN","DGRP14",28,0)
 ;return Y - Yes
"RTN","DGRP14",29,0)
 ;       N - No
"RTN","DGRP14",30,0)
CANCEL(DFN,APPDATE) ;
"RTN","DGRP14",31,0)
 N X,STATUS,U
"RTN","DGRP14",32,0)
 S U="^"
"RTN","DGRP14",33,0)
 S X=$G(^DPT(DFN,"S",APPDATE,0))
"RTN","DGRP14",34,0)
 I X="" Q "Y"  ;probably bad data
"RTN","DGRP14",35,0)
 S STATUS=$P(X,U,2)
"RTN","DGRP14",36,0)
 I STATUS="" Q "N"
"RTN","DGRP14",37,0)
 I STATUS="I" Q "N"
"RTN","DGRP14",38,0)
 Q "Y"
"RTN","DGRRLU0")
0^11^B37459964
"RTN","DGRRLU0",1,0)
DGRRLU0 ;alb/GAH - DG Replacement and Rehosting RPC for VADPT ;10/10/05  09:53
"RTN","DGRRLU0",2,0)
 ;;5.3;Registration;**538,725**;Aug 13, 1993;Build 12
"RTN","DGRRLU0",3,0)
 ;
"RTN","DGRRLU0",4,0)
 SET X="You Can't Enter DGRRLU0 at top of routine!"
"RTN","DGRRLU0",5,0)
 QUIT
"RTN","DGRRLU0",6,0)
 ;
"RTN","DGRRLU0",7,0)
BYFILTER(FILTER,FILTERV,BDATE,EDATE,SEARCH,VALUE,DELIM) ; -- search type by clinic, provider, or ward.
"RTN","DGRRLU0",8,0)
 NEW PCNT,OKAY,VAL
"RTN","DGRRLU0",9,0)
 K ^TMP("DGPTLKUP",$J)
"RTN","DGRRLU0",10,0)
 SET (OKAY,PCNT)=0
"RTN","DGRRLU0",11,0)
 ;
"RTN","DGRRLU0",12,0)
 DO ADD^DGRRUTL("<record count='0'>")
"RTN","DGRRLU0",13,0)
 SET LINENO=DGRRLINE
"RTN","DGRRLU0",14,0)
 FOR I=1:1 S VAL=$P(FILTERV,DELIM,I) QUIT:VAL=""  DO  Q:$$STOP^XOBVLIB()
"RTN","DGRRLU0",15,0)
 . IF FILTER="WARD" DO WARDPTS(VAL) S OKAY=1 Q
"RTN","DGRRLU0",16,0)
 . IF FILTER="CLINIC" DO CLINPTS(VAL,BDATE,EDATE) S OKAY=2 Q
"RTN","DGRRLU0",17,0)
 . IF FILTER="PROVIDER" D PROVPTS(VAL) S OKAY=3 Q
"RTN","DGRRLU0",18,0)
 . IF FILTER="SPECIALTY" D SPECPTS(VAL) S OKAY=4 Q
"RTN","DGRRLU0",19,0)
 ;
"RTN","DGRRLU0",20,0)
 IF OKAY<1 DO ADD^DGRRUTL("<error message='Filter not correctly specified'></error>")
"RTN","DGRRLU0",21,0)
 ;
"RTN","DGRRLU0",22,0)
 ; -- update the record count
"RTN","DGRRLU0",23,0)
 DO ADDPTS()
"RTN","DGRRLU0",24,0)
 SET @DGRRESLT@(LINENO)="<record count='"_PCNT_"'>"
"RTN","DGRRLU0",25,0)
 IF ($G(MAXSIZRE)<1) DO ADD^DGRRUTL("<maximum message=''></maximum>")
"RTN","DGRRLU0",26,0)
 DO ADD^DGRRUTL("<error message=''></error>")
"RTN","DGRRLU0",27,0)
 QUIT
"RTN","DGRRLU0",28,0)
 ;
"RTN","DGRRLU0",29,0)
FILTCHK(DFN,TYPE,VALUE) ; -- Filter search -
"RTN","DGRRLU0",30,0)
 ; -- check patients to match search type and search value for filter searches
"RTN","DGRRLU0",31,0)
 ; -- returns 1 if matches, 0 if no match
"RTN","DGRRLU0",32,0)
 ;
"RTN","DGRRLU0",33,0)
 SET VALUE=$$UP^XLFSTR(VALUE)
"RTN","DGRRLU0",34,0)
 Q:($G(VALUE)="")!($G(VALUE)="*") 1
"RTN","DGRRLU0",35,0)
 Q:($G(TYPE)="") 1
"RTN","DGRRLU0",36,0)
 Q:($G(DFN)<1) 0
"RTN","DGRRLU0",37,0)
 ;
"RTN","DGRRLU0",38,0)
 NEW I,J,OKAY,CHKVAL
"RTN","DGRRLU0",39,0)
 SET OKAY=0
"RTN","DGRRLU0",40,0)
 IF TYPE="NAME" DO
"RTN","DGRRLU0",41,0)
 . IF VALUE[", " SET VALUE=$P(VALUE,", ")_","_$P(VALUE,", ",2) ; REMOVE FIRST SPACE line added sgg 070104
"RTN","DGRRLU0",42,0)
 . SET CHKVAL=$P($G(^DPT(DFN,0)),"^",1)
"RTN","DGRRLU0",43,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","DGRRLU0",44,0)
 IF TYPE="SSN" DO
"RTN","DGRRLU0",45,0)
 . SET CHKVAL=$P($G(^DPT(DFN,0)),"^",9)
"RTN","DGRRLU0",46,0)
 . SET VALUE=$TR(VALUE," -","") ; REMOVE DASHES AND SPACES line added sgg 070104
"RTN","DGRRLU0",47,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","DGRRLU0",48,0)
 IF TYPE="ICN" DO
"RTN","DGRRLU0",49,0)
 . ;SET CHKVAL=$P($G(^DPT(DFN,"MPI")),"^",1)
"RTN","DGRRLU0",50,0)
 . S CHKVAL=+$$GETICN^MPIF001(DFN)
"RTN","DGRRLU0",51,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","DGRRLU0",52,0)
 IF TYPE="SSN4" DO
"RTN","DGRRLU0",53,0)
 . SET CHKVAL=$E($P($G(^DPT(DFN,0)),"^",1),1)_$E($P($G(^DPT(DFN,0)),"^",9),6,9)
"RTN","DGRRLU0",54,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","DGRRLU0",55,0)
 QUIT OKAY
"RTN","DGRRLU0",56,0)
 ;
"RTN","DGRRLU0",57,0)
WARDPTS(WARD) ; RETURN LIST OF PATIENTS IN A WARD
"RTN","DGRRLU0",58,0)
 ; Based on ORQPTQ2
"RTN","DGRRLU0",59,0)
 Q:+$G(WARD)<1 
"RTN","DGRRLU0",60,0)
 N DFN
"RTN","DGRRLU0",61,0)
 S DFN=0
"RTN","DGRRLU0",62,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;GET WARD NAME FOR "CN"  LOOKUP
"RTN","DGRRLU0",63,0)
 Q:WARD=""
"RTN","DGRRLU0",64,0)
 F  D  Q:DFN'>0  Q:$$STOP^XOBVLIB()
"RTN","DGRRLU0",65,0)
 . S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0
"RTN","DGRRLU0",66,0)
 . Q:'$$FILTCHK(DFN,SEARCH,VALUE)
"RTN","DGRRLU0",67,0)
 . S ^TMP("DGPTLKUP",$J,$P($G(^DPT(DFN,0)),"^",1),DFN)=""
"RTN","DGRRLU0",68,0)
 Q
"RTN","DGRRLU0",69,0)
 ;
"RTN","DGRRLU0",70,0)
PROVPTS(PROV) ;  RETURN LIST OF PATIENTS LINKED TO A PRIMARY PROVIDER
"RTN","DGRRLU0",71,0)
 ; Based on ORQPTQ2
"RTN","DGRRLU0",72,0)
 ; "APR" xref is on field PROVIDER in file 2 (2;.104)
"RTN","DGRRLU0",73,0)
 ; "AAP" xref is on field ATTENDING PHYSICIAN in file 2 (2;.1041)
"RTN","DGRRLU0",74,0)
 ; 
"RTN","DGRRLU0",75,0)
 Q:+$G(PROV)<1
"RTN","DGRRLU0",76,0)
 ;
"RTN","DGRRLU0",77,0)
 N DFN,XREF
"RTN","DGRRLU0",78,0)
 S DFN=0
"RTN","DGRRLU0",79,0)
 F XREF="AAP","APR" DO
"RTN","DGRRLU0",80,0)
 . F  S DFN=$O(^DPT(XREF,PROV,DFN)) Q:DFN'>0  D  Q:$$STOP^XOBVLIB()
"RTN","DGRRLU0",81,0)
 .. Q:'$$FILTCHK(DFN,SEARCH,VALUE)
"RTN","DGRRLU0",82,0)
 .. S ^TMP("DGPTLKUP",$J,$P($G(^DPT(DFN,0)),"^",1),DFN)=""
"RTN","DGRRLU0",83,0)
 Q
"RTN","DGRRLU0",84,0)
 ;
"RTN","DGRRLU0",85,0)
CLINPTS(CLIN,BDATE,EDATE) ; RETURN LIST OF PTS W/CLINIC APPT W/IN BEGINNING AND END DATES
"RTN","DGRRLU0",86,0)
 Q:+$G(CLIN)<1
"RTN","DGRRLU0",87,0)
 ;
"RTN","DGRRLU0",88,0)
 N DFN,NAME,I,J,X,Y,ORJ,ORSRV,ORNOWDT,CHKX,CHKIN,MAXAPPTS,ORC,CLNAM,NOWDT
"RTN","DGRRLU0",89,0)
 S MAXAPPTS=200
"RTN","DGRRLU0",90,0)
 S NOWDT=$$NOW^XLFDT
"RTN","DGRRLU0",91,0)
 ;
"RTN","DGRRLU0",92,0)
 S DFN=0,I=1
"RTN","DGRRLU0",93,0)
 IF $G(BDATE)="" S BDATE="T"
"RTN","DGRRLU0",94,0)
 IF $G(EDATE)="" S EDATE="T+1"
"RTN","DGRRLU0",95,0)
 ;CONVERT BDATE AND EDATE INTO FILEMAN DATE/TIME
"RTN","DGRRLU0",96,0)
 D DT^DILF("T",BDATE,.BDATE,"","")
"RTN","DGRRLU0",97,0)
 D DT^DILF("T",EDATE,.EDATE,"","")
"RTN","DGRRLU0",98,0)
 I (BDATE=-1)!(EDATE=-1) S Y(1)="^Error in date range." Q
"RTN","DGRRLU0",99,0)
 S EDATE=$P(EDATE,".")_.5  ;ADD 1/2 DAY TO END DATE
"RTN","DGRRLU0",100,0)
 ;
"RTN","DGRRLU0",101,0)
 D CLINPT2(+CLIN,BDATE,EDATE)
"RTN","DGRRLU0",102,0)
 QUIT
"RTN","DGRRLU0",103,0)
 ;
"RTN","DGRRLU0",104,0)
CLINPT2(CLIN,BEGIN,END) ; -- Use scheduling rehosting API from patches SD*5.3*253 and SD*5.3*275
"RTN","DGRRLU0",105,0)
 ; -- GETPLIST^SDAMA202(SDIEN,SDFIELDS,SDAPSTAT,SDSTART,SDEND,.SDRESULT,SDIOSTAT)
"RTN","DGRRLU0",106,0)
 ;
"RTN","DGRRLU0",107,0)
 K ^TMP($J,"SDAMA202","GETPLIST")
"RTN","DGRRLU0",108,0)
 NEW I,X,APPTS,APPTDT SET APPTS=""
"RTN","DGRRLU0",109,0)
 ;
"RTN","DGRRLU0",110,0)
 ; -- get appointment date/time, patient status, patient ien & name,
"RTN","DGRRLU0",111,0)
 ;    only get appointment status = "R" for scheduled or kept appointments.
"RTN","DGRRLU0",112,0)
 DO GETPLIST^SDAMA202(+CLIN,"1;3;4","R",BEGIN,END,.APPTS)
"RTN","DGRRLU0",113,0)
 ;
"RTN","DGRRLU0",114,0)
 ; -- check number of appointments
"RTN","DGRRLU0",115,0)
 I APPTS<1 K ^TMP($J,"SDAMA202","GETPLIST") Q
"RTN","DGRRLU0",116,0)
 ;
"RTN","DGRRLU0",117,0)
 ; -- check for an error, may need to pass message up.
"RTN","DGRRLU0",118,0)
 I $D(^TMP($J,"SDAMA202","GETPTLIST","ERROR")) QUIT
"RTN","DGRRLU0",119,0)
 ;
"RTN","DGRRLU0",120,0)
 ; -- move list of appointments to list of patients, ordered by name, dfn
"RTN","DGRRLU0",121,0)
 S (I,X)=""
"RTN","DGRRLU0",122,0)
 F  SET I=$O(^TMP($J,"SDAMA202","GETPLIST",I)) Q:I<1  S X=^(I,4) DO
"RTN","DGRRLU0",123,0)
 .  Q:'$$FILTCHK(+X,SEARCH,VALUE)  ;check if meets search criteria
"RTN","DGRRLU0",124,0)
 .  S APPTDT=$G(^TMP($J,"SDAMA202","GETPLIST",I,1))
"RTN","DGRRLU0",125,0)
 .  S ^TMP("DGPTLKUP",$J,$P(X,"^",2),+X,+APPTDT)=""
"RTN","DGRRLU0",126,0)
 K ^TMP($J,"SDAMA202","GETPLIST")
"RTN","DGRRLU0",127,0)
 QUIT
"RTN","DGRRLU0",128,0)
 ;
"RTN","DGRRLU0",129,0)
SPECPTS(SPEC) ;Returns a list of patients associated with a specialty
"RTN","DGRRLU0",130,0)
 ; "ATR" cross reference is on the Treating Specialty (#.103) field
"RTN","DGRRLU0",131,0)
 ; in the Patient (#2) file and is a pointer to the Facility 
"RTN","DGRRLU0",132,0)
 ; Treating Specialty (#45.7) file.
"RTN","DGRRLU0",133,0)
 ;
"RTN","DGRRLU0",134,0)
 Q:+$G(SPEC)<1
"RTN","DGRRLU0",135,0)
 N DFN
"RTN","DGRRLU0",136,0)
 S DFN=0
"RTN","DGRRLU0",137,0)
 F  S DFN=$O(^DPT("ATR",+SPEC,DFN)) Q:DFN'>0  D  Q:$$STOP^XOBVLIB()
"RTN","DGRRLU0",138,0)
 .Q:'$$FILTCHK(DFN,SEARCH,VALUE)
"RTN","DGRRLU0",139,0)
 .S ^TMP("DGPTLKUP",$J,$P($G(^DPT(DFN,0)),U),DFN)=""
"RTN","DGRRLU0",140,0)
 Q
"RTN","DGRRLU0",141,0)
 ;
"RTN","DGRRLU0",142,0)
ADDPTS() ;
"RTN","DGRRLU0",143,0)
 N NAME,DFN,DGRRFLG,DGRRAPTS,DGRRCTR
"RTN","DGRRLU0",144,0)
 S NAME=""
"RTN","DGRRLU0",145,0)
 S (DGRRFLG,DGRRCTR)=0
"RTN","DGRRLU0",146,0)
 S DGRRAPTS=$S(FILTER="CLINIC":1,1:0)
"RTN","DGRRLU0",147,0)
 FOR  SET NAME=$O(^TMP("DGPTLKUP",$J,NAME)) Q:NAME=""!(DGRRFLG=1)  DO
"RTN","DGRRLU0",148,0)
 . S DFN=""  FOR  SET DFN=$O(^TMP("DGPTLKUP",$J,NAME,DFN)) Q:DFN<1!(DGRRFLG=1)  DO
"RTN","DGRRLU0",149,0)
 .. S DGRRCTR=DGRRCTR+1
"RTN","DGRRLU0",150,0)
 .. I DGRRCTR>MAXSIZE S DGRRFLG=1 Q
"RTN","DGRRLU0",151,0)
 .. DO PTDATA^DGRRLUA(DFN,.PCNT)
"RTN","DGRRLU0",152,0)
 .. I FILTER'="CLINIC" Q
"RTN","DGRRLU0",153,0)
 .. D ADD^DGRRUTL("<appointments>")
"RTN","DGRRLU0",154,0)
 .. N APPTDT
"RTN","DGRRLU0",155,0)
 .. S APPTDT=""
"RTN","DGRRLU0",156,0)
 .. F  S APPTDT=$O(^TMP("DGPTLKUP",$J,NAME,DFN,APPTDT)) Q:'APPTDT  D
"RTN","DGRRLU0",157,0)
 ...D ADD^DGRRUTL("<appointmentTime>"_APPTDT_"</appointmentTime>")
"RTN","DGRRLU0",158,0)
 .. D ADD^DGRRUTL("</appointments>")
"RTN","DGRRLU0",159,0)
 .. D ADD^DGRRUTL("</patient>")
"RTN","DGRRLU0",160,0)
 I DGRRCTR>MAXSIZE D
"RTN","DGRRLU0",161,0)
 .IF $G(MAXSIZRE)<1 DO ADD^DGRRLU("<maximum message='Too many patients found (more than "_MAXSIZE_").  Please Limit Search.'></maximum>")
"RTN","DGRRLU0",162,0)
 .SET MAXSIZRE=1
"RTN","DGRRLU0",163,0)
 K ^TMP("DGPTLKUP",$J)
"RTN","DGRRLU0",164,0)
 ;IF ($G(MAXSIZRE)<1) DO ADD^DGRRUTL("<maximum message=''></maximum>")
"RTN","DGRRLU0",165,0)
 Q
"RTN","DGRRLU0",166,0)
 ;
"RTN","DGRRLU0",167,0)
NAMECOMP(DFN,DGRRCNT) ; ENTRY IS +$P($G(^DPT(DFN,"NAME")),"^",1)  
"RTN","DGRRLU0",168,0)
 ; 
"RTN","DGRRLU0",169,0)
 N LN,FN,MI,PR,SU,DE,DGA,DGNMC
"RTN","DGRRLU0",170,0)
 S DGA=+$P($G(^DPT(DFN,"NAME")),U)_","
"RTN","DGRRLU0",171,0)
 D GETS^DIQ(20,+DGA,"1:6","","DGNMC")
"RTN","DGRRLU0",172,0)
 S LN=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,1)))
"RTN","DGRRLU0",173,0)
 S FN=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,2)))
"RTN","DGRRLU0",174,0)
 S MI=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,3)))
"RTN","DGRRLU0",175,0)
 S PR=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,4)))
"RTN","DGRRLU0",176,0)
 S SU=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,5)))
"RTN","DGRRLU0",177,0)
 S DE=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,6)))
"RTN","DGRRLU0",178,0)
 DO ADD^DGRRUTL("<namecomp number='"_DGRRCNT_"' last='"_LN_"' first='"_FN_"' middle='"_MI_"' prefix='"_PR_"' suffix='"_SU_"' degree='"_DE_"' ></namecomp>")
"RTN","DGRRLU0",179,0)
 ;
"RTN","DGYPSDE2")
0^12^B12451578
"RTN","DGYPSDE2",1,0)
DGYPSDE2 ;ALB/GAH - EST. FILE SIZE NEEDED FOR OUT PATIENT ENCOUNTER FILE ; 10/10/2006
"RTN","DGYPSDE2",2,0)
 ;;5.3;REGISTRATION;**568,725**;Aug 13, 1993;Build 12
"RTN","DGYPSDE2",3,0)
 ;
"RTN","DGYPSDE2",4,0)
START N DGI,DGDTE,DGNUM,DGCSC,DGCNT,DGCLAR,X1,X2,DFN
"RTN","DGYPSDE2",5,0)
 N DGAPT,DGDISP,DGNODE,DGAE,DGAEDT,DGPCL,DGARRAY,SDCNT
"RTN","DGYPSDE2",6,0)
 S X1=DT,X2=-365 D C^%DTC S DG1YR=X ; one yr ago
"RTN","DGYPSDE2",7,0)
 S TDT=DT+.2359 ; today
"RTN","DGYPSDE2",8,0)
 ; Build Appointment information from Scheduling API
"RTN","DGYPSDE2",9,0)
 S DGARRAY(1)=DG1YR_";"_TDT,DGARRAY("FLDS")="2;3;10",DGARRAY("SORT")="P"
"RTN","DGYPSDE2",10,0)
 S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGYPSDE2",11,0)
 S (DGYR("AP"),DGYR("DI"),DGYR("AE"),DGYR("CR"),DFN,DGCNT)=0
"RTN","DGYPSDE2",12,0)
 ;SET UP A TEMP ARRAY -DGCLAR- WITH CLASSIFICATION ABBREVIATIONS
"RTN","DGYPSDE2",13,0)
 S DGCLAR(1)="AO",DGCLAR(2)="IR",DGCLAR(3)="SC",DGCLAR(4)="EC"
"RTN","DGYPSDE2",14,0)
 F DGCNT=1:1:4 S DGCL(DGCNT)=0
"RTN","DGYPSDE2",15,0)
 D DISAPP,AEDIT
"RTN","DGYPSDE2",16,0)
 K DGARRAY,SDCNT,^TMP($J,"SDAMA301")
"RTN","DGYPSDE2",17,0)
 Q
"RTN","DGYPSDE2",18,0)
 ;
"RTN","DGYPSDE2",19,0)
DISAPP ; FOR THE LAST YR PICK UP ALL APPT. AND DISP. FROM PATIENT FILE
"RTN","DGYPSDE2",20,0)
 ; SDAMA301 = APPOINTMENTS, "DIS" = DISPOSTIONS
"RTN","DGYPSDE2",21,0)
 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:'DFN  D
"RTN","DGYPSDE2",22,0)
 .S DGAPT=0 F  S DGAPT=$O(^TMP($J,"SDAMA301",DFN,DGAPT)) Q:'DGAPT  D
"RTN","DGYPSDE2",23,0)
 ..N DGAPT0,DGCLN,DGSTAT,DGTYP S DGAPT0=^TMP($J,"SDAMA301",DFN,DGAPT)
"RTN","DGYPSDE2",24,0)
 ..S DGSTAT=$P($P(DGAPT0,U,3),";"),DGCLN=$P($P(DGAPT0,U,2),";"),DGTYP=$P($P(DGAPT0,U,10),";")
"RTN","DGYPSDE2",25,0)
 ..I DGSTAT["C"!(DGSTAT["N") Q
"RTN","DGYPSDE2",26,0)
 ..; INCR WILL CHECK FOR AND ACCUMULATE CLASSIFICATIONS
"RTN","DGYPSDE2",27,0)
 ..I $$STATUS(DFN,DGAPT,DGCLN,1)="C",$$EXEMPT($P($G(^SC(DGCLN,0)),U,7),DGTYP) D INCR(DFN)
"RTN","DGYPSDE2",28,0)
 ..S DGYR("AP")=DGYR("AP")+1
"RTN","DGYPSDE2",29,0)
 ..S:$P($G(^SC(DGCLN,0)),U,18)]"" DGYR("CR")=DGYR("CR")+1
"RTN","DGYPSDE2",30,0)
 .; -- Dispositions
"RTN","DGYPSDE2",31,0)
 .S DGDISP=0 F  S DGDISP=$O(^DPT(DFN,"DIS",DGDISP)) Q:'DGDISP  D
"RTN","DGYPSDE2",32,0)
 ..S DGNODE=$G(^DPT(DFN,"DIS",DGDISP,0))
"RTN","DGYPSDE2",33,0)
 ..I ((+DGNODE)>DG1YR)&((+DGNODE)<TDT),$P(DGNODE,U,2)=0!($P(DGNODE,U,2)=1)  D
"RTN","DGYPSDE2",34,0)
 ...I $$STATUS(DFN,DGDISP,0,3)="C",$$EXEMPT(+$O(^DIC(40.7,"C",102,0)),9) D INCR(DFN)
"RTN","DGYPSDE2",35,0)
 ...S DGYR("DI")=DGYR("DI")+1
"RTN","DGYPSDE2",36,0)
 Q
"RTN","DGYPSDE2",37,0)
AEDIT ;FOR THE PAST YEAR PICK UP ALL ADD/EDITS FROM THE STOP CODE FILE
"RTN","DGYPSDE2",38,0)
 ;
"RTN","DGYPSDE2",39,0)
 S DGAEDT=""
"RTN","DGYPSDE2",40,0)
 F  S DGAEDT=$O(^SDV(DGAEDT)) Q:DGAEDT=""  D
"RTN","DGYPSDE2",41,0)
 .S DGNODE=$G(^SDV(DGAEDT,0))
"RTN","DGYPSDE2",42,0)
 .I (DGAEDT>DG1YR)&(DGAEDT<TDT)  D
"RTN","DGYPSDE2",43,0)
 ..S DGAE=0
"RTN","DGYPSDE2",44,0)
 ..F  S DGAE=$O(^SDV(DGAEDT,"CS",DGAE)) Q:'DGAE  D
"RTN","DGYPSDE2",45,0)
 ...N DGAE0 S DGAE0=^SDV(DGAEDT,"CS",DGAE,0)
"RTN","DGYPSDE2",46,0)
 ...; DUPL WILL CHECK FOR ASSOCIATED APPT
"RTN","DGYPSDE2",47,0)
 ...I $$STATUS(+$P(DGNODE,U,2),+DGNODE,0,2),$$EXEMPT(+DGAE0,+$P(DGAE0,U,5)) D INCR($P(DGNODE,U,2))
"RTN","DGYPSDE2",48,0)
 ...D DUPL
"RTN","DGYPSDE2",49,0)
 ...S DGYR("AE")=DGYR("AE")+1
"RTN","DGYPSDE2",50,0)
 Q
"RTN","DGYPSDE2",51,0)
DUPL ; FOR EACH A/E RUN THROUGH THE APPTS LOOOK FOR ASSOC. APPTS
"RTN","DGYPSDE2",52,0)
 ; IF FOUND AND THEY HAVE A CLASSIFICATION CALL DECR
"RTN","DGYPSDE2",53,0)
 N DGBEG,DGEND
"RTN","DGYPSDE2",54,0)
 S DGCSC=^SDV(DGAEDT,"CS",DGAE,0)
"RTN","DGYPSDE2",55,0)
 S DFN=$P(DGNODE,U,2)
"RTN","DGYPSDE2",56,0)
 S DGCL=$P(DGCSC,U,3)
"RTN","DGYPSDE2",57,0)
 S DGBEG=$P(DGAEDT,".")
"RTN","DGYPSDE2",58,0)
 S DGEND=DGBEG+.2359
"RTN","DGYPSDE2",59,0)
 S DGI=DGBEG
"RTN","DGYPSDE2",60,0)
 F  S DGI=$O(^TMP($J,"SDAMA301",DFN,DGI)) Q:('DGI)!(DGI>DGEND)  D
"RTN","DGYPSDE2",61,0)
 .N DGI0,DGIST,DGICL,DGITP S DGI0=^TMP($J,"SDAMA301",DFN,DGI)
"RTN","DGYPSDE2",62,0)
 .S DGIST=$P($P(DGI0,U,3),";"),DGICL=$P($P(DGI0,U,2),";"),DGITP=$P($P(DGI0,U,10),";")
"RTN","DGYPSDE2",63,0)
 .I DGIST["C"!(DGIST["N") Q
"RTN","DGYPSDE2",64,0)
 .I +DGI0=DGCL,$$STATUS(DFN,DGI,DGCL,1)="C",$$EXEMPT(+$P($G(^SC(DGICL,0)),U,7),DGITP) D DECR(DFN)
"RTN","DGYPSDE2",65,0)
 Q
"RTN","DGYPSDE2",66,0)
DECR(DFN) ;  DECREMENT ARRAY WITH THE CLASS CNTS 
"RTN","DGYPSDE2",67,0)
 N DGYPCL D BLD^DGYPSDE3(DFN,.DGYPCL)
"RTN","DGYPSDE2",68,0)
 I $O(DGYPCL(0))  D
"RTN","DGYPSDE2",69,0)
 .S DGYPPCL=0
"RTN","DGYPSDE2",70,0)
 .F  S DGYPPCL=$O(DGYPCL(DGYPPCL)) Q:'DGYPPCL  D
"RTN","DGYPSDE2",71,0)
 ..S DGCL(DGYPPCL)=DGCL(DGYPPCL)-1
"RTN","DGYPSDE2",72,0)
 Q
"RTN","DGYPSDE2",73,0)
INCR(DFN) ;  INCREMENT ARRAY WITH CLASS CNTS
"RTN","DGYPSDE2",74,0)
 N DGYPCL D BLD^DGYPSDE3(DFN,.DGYPCL)
"RTN","DGYPSDE2",75,0)
 I $O(DGYPCL(0))  D
"RTN","DGYPSDE2",76,0)
 .S DGYPPCL=0
"RTN","DGYPSDE2",77,0)
 .F  S DGYPPCL=$O(DGYPCL(DGYPPCL)) Q:'DGYPPCL  D
"RTN","DGYPSDE2",78,0)
 ..S DGCL(DGYPPCL)=DGCL(DGYPPCL)+1
"RTN","DGYPSDE2",79,0)
 Q
"RTN","DGYPSDE2",80,0)
 ;
"RTN","DGYPSDE2",81,0)
 ;  STATUS WILL DETERMINE IF APPT WAS AN INPATIENT
"RTN","DGYPSDE2",82,0)
 ; OR A NON STOP CODE CLINIC
"RTN","DGYPSDE2",83,0)
STATUS(DFN,DGT,DGCL,DGORG) ;
"RTN","DGYPSDE2",84,0)
 N Y S Y=""
"RTN","DGYPSDE2",85,0)
 I $$INP^SDAM2(DFN,DGT)="I" S Y="I"
"RTN","DGYPSDE2",86,0)
 I Y="",DGORG=1,$P($G(^SC(+DGCL,0)),U,17)="Y" S Y="NC"
"RTN","DGYPSDE2",87,0)
 I Y="" S Y="C"
"RTN","DGYPSDE2",88,0)
 Q Y
"RTN","DGYPSDE2",89,0)
 ;
"RTN","DGYPSDE2",90,0)
 ;  EXEMPT WILL RETURN A LOW IF THE STOP CODE IS BETWEEN 103+170
"RTN","DGYPSDE2",91,0)
 ; OR APPT TYPE IS NOT 9=REGULAR OR 2=SPECIAL DENTAL 
"RTN","DGYPSDE2",92,0)
EXEMPT(DGSTOP,DGAPTY) ;
"RTN","DGYPSDE2",93,0)
 N Y
"RTN","DGYPSDE2",94,0)
 S DGSTOP=$P($G(^DIC(40.7,+DGSTOP,0)),U,2)
"RTN","DGYPSDE2",95,0)
 I DGSTOP>103,DGSTOP<171 S Y=0 G EXEMPTQ
"RTN","DGYPSDE2",96,0)
 I DGAPTY=9!(DGAPTY=2) S Y=1 G EXEMPTQ
"RTN","DGYPSDE2",97,0)
 S Y=0
"RTN","DGYPSDE2",98,0)
EXEMPTQ Q Y
"RTN","VAFCCCAP")
0^13^B23061055
"RTN","VAFCCCAP",1,0)
VAFCCCAP ;ALB/CMM/PKE/PHH/EG/GAH OUTPATIENT CAPTURE TEST ; 5/5/05 9:04am
"RTN","VAFCCCAP",2,0)
 ;;5.3;Registration;**91,179,553,582,568,585,662,725**;Jun 06, 1996;Build 12
"RTN","VAFCCCAP",3,0)
 ;
"RTN","VAFCCCAP",4,0)
 ;
"RTN","VAFCCCAP",5,0)
CAP ;Only fire if check-in,check-out, add/edit add, add/edit change
"RTN","VAFCCCAP",6,0)
 I ($G(SDAMEVT)<4)!($G(SDAMEVT)>7) Q
"RTN","VAFCCCAP",7,0)
 ;quit if no change
"RTN","VAFCCCAP",8,0)
 I +$G(SDATA("BEFORE","STATUS"))=3,+$G(SDATA("AFTER","STATUS"))=3
"RTN","VAFCCCAP",9,0)
 IF  I $P($G(SDATA("AFTER","STATUS")),"^",3)'="ACTION REQ/CHECKED IN"
"RTN","VAFCCCAP",10,0)
 IF  I $P($G(SDATA("BEFORE","STATUS")),"^",3)'="NO ACTION TAKEN/TODAY" Q
"RTN","VAFCCCAP",11,0)
 ;check to see if sending is on or off
"RTN","VAFCCCAP",12,0)
 I '$P($$SEND^VAFHUTL(),"^",2) Q
"RTN","VAFCCCAP",13,0)
 ;check if protocol disabled or no clients
"RTN","VAFCCCAP",14,0)
 I $$PROTOCHK("VAFC ADT-A08-SDAM SERVER") Q
"RTN","VAFCCCAP",15,0)
 ;Queue to run NOW, returns control back to outpatient event driver
"RTN","VAFCCCAP",16,0)
 S ZTRTN="EN^VAFCCCAP",ZTDESC="PIMS Outpatient HL7 v2.3 Capture"
"RTN","VAFCCCAP",17,0)
 S ZTSAVE("SDHDL")="",ZTSAVE("SDAMEVT")="",ZTSAVE("SDATA")="",ZTSAVE("^TMP(""SDEVT"",$J,")="",ZTIO="",ZTDTH=$H
"RTN","VAFCCCAP",18,0)
 D ^%ZTLOAD
"RTN","VAFCCCAP",19,0)
 ;W !?3,$G(ZTSK)
"RTN","VAFCCCAP",20,0)
 Q
"RTN","VAFCCCAP",21,0)
 ;
"RTN","VAFCCCAP",22,0)
EN ;
"RTN","VAFCCCAP",23,0)
 N DFN,HLD,EVDT,CHK,ERR,SEND,NEW,EVENT,HOSP,THLD,PTR,REM,HPTR
"RTN","VAFCCCAP",24,0)
 ;
"RTN","VAFCCCAP",25,0)
 ;Appointments
"RTN","VAFCCCAP",26,0)
 ;
"RTN","VAFCCCAP",27,0)
 I SDAMEVT=4!(SDAMEVT=5) D
"RTN","VAFCCCAP",28,0)
 .S DFN=$P(SDATA,"^",2),EVDT=$P(SDATA,"^",3),PTR=$$GETPTR^VAFHCUTL(1),PTR=PTR_";SCE(",(CHK,UP,REM)=""
"RTN","VAFCCCAP",29,0)
 .I SDAMEVT=4 S PTR=DFN_";DPT(" ;check-in or unscheduled visit check-in
"RTN","VAFCCCAP",30,0)
 .;Need to check if deleting check-out
"RTN","VAFCCCAP",31,0)
 .;if deleting check-out and no pivot file entry exists don't send
"RTN","VAFCCCAP",32,0)
 .I +$G(SDATA("AFTER","STATUS"))=3&(+$G(SDATA("BEFORE","STATUS"))=2) S CHK=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR),PTR=$$UPPTR(DFN,EVDT) S:PTR="@" REM=1 S:+CHK>0 UP=$$UPDATE^VAFHUTL(+CHK,EVDT,PTR,REM) S:+CHK<0!(+UP<0) SEND="N"
"RTN","VAFCCCAP",33,0)
 .;set send to N if deleting and not in pivot file
"RTN","VAFCCCAP",34,0)
 .I '$D(SEND) D
"RTN","VAFCCCAP",35,0)
 ..S HLD=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFCCCAP",36,0)
 ..I +HLD=-1 S HPTR=DFN_";DPT(",HLD=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,HPTR) I +HLD'=-1 S UP=$$UPDATE^VAFHUTL(+HLD,EVDT,PTR,"")
"RTN","VAFCCCAP",37,0)
 ..I +HLD=-1 S HLD=$$PIVNW^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFCCCAP",38,0)
 ..;S EVENT=$P(HLD,":"),ERR=$$OA08^VAFHCA08(DFN,EVENT,EVDT,PTR,"2,3,4,5,6,7,8,9,11,12,13,14,16,19","2,3,4,5,6,7,8,9,10,11,12,13,14,15","A","A")
"RTN","VAFCCCAP",39,0)
 ..;set up call to vafcmsg for out-patient
"RTN","VAFCCCAP",40,0)
 ..S EVENT=$P(HLD,":")
"RTN","VAFCCCAP",41,0)
 ..I EVENT>0 D SETUP
"RTN","VAFCCCAP",42,0)
 ;
"RTN","VAFCCCAP",43,0)
 ;Stop codes, Add/Edits
"RTN","VAFCCCAP",44,0)
 I SDAMEVT=6!(SDAMEVT=7) D
"RTN","VAFCCCAP",45,0)
 .N HLD,STOP,THLD,REMOVE,UP
"RTN","VAFCCCAP",46,0)
 .S HLD="",STOP="N",ERR=""
"RTN","VAFCCCAP",47,0)
 .F  K EVENT S REMOVE="N",HLD=$O(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD)) Q:HLD=""!(STOP="Y")  D
"RTN","VAFCCCAP",48,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")'=""&($P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^",6)'="") S STOP="Y" Q
"RTN","VAFCCCAP",49,0)
 ..;If STOP="Y" stop code was not stand alone
"RTN","VAFCCCAP",50,0)
 ..;If STOP="N" stop code is stand alone
"RTN","VAFCCCAP",51,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")="" D
"RTN","VAFCCCAP",52,0)
 ...S REMOVE="Y",DFN=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"BEFORE"),"^",2),EVDT=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"BEFORE"),"^"),PTR=HLD_";SCE("
"RTN","VAFCCCAP",53,0)
 ...S EVENT=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFCCCAP",54,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")'="" D
"RTN","VAFCCCAP",55,0)
 ...S DFN=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^",2),EVDT=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^"),PTR=HLD_";SCE("
"RTN","VAFCCCAP",56,0)
 ..I '$D(EVENT) S THLD=$$PIVNW^VAFHPIVT(DFN,EVDT,2,PTR),EVENT=$P(THLD,":")
"RTN","VAFCCCAP",57,0)
 ..I REMOVE="Y" S PTR="@",UP=$$UPDATE^VAFHUTL(+EVENT,EVDT,PTR,1)
"RTN","VAFCCCAP",58,0)
 ..;I +EVENT>0 S ERR=$$OA08^VAFHCA08(DFN,EVENT,EVDT,PTR,"2,3,4,5,6,7,8,9,11,12,13,14,16,19","2,3,4,5,6,7,8,9,10,11,12,13,14,15","A","A")
"RTN","VAFCCCAP",59,0)
 ..;set up call to vafcmsg for out-patient
"RTN","VAFCCCAP",60,0)
 ..I +EVENT>0 D SETUP
"RTN","VAFCCCAP",61,0)
 ;
"RTN","VAFCCCAP",62,0)
EXIT ;
"RTN","VAFCCCAP",63,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","VAFCCCAP",64,0)
 I +ERR<0 D ERROR(ERR,DFN)
"RTN","VAFCCCAP",65,0)
 D KILL^HLTRANS
"RTN","VAFCCCAP",66,0)
 Q
"RTN","VAFCCCAP",67,0)
 ;
"RTN","VAFCCCAP",68,0)
ERROR(PNUM,DFN) ;
"RTN","VAFCCCAP",69,0)
 ;Error message unable to generate A08 Message
"RTN","VAFCCCAP",70,0)
 N GBL S GBL="^TMP($J,""ERR"")"
"RTN","VAFCCCAP",71,0)
 I +PNUM<0 S @GBL@(0)="ERROR",@GBL@(1)=$P(PNUM,"^",2)_", unable to generate A08 Message" D EBULL^VAFHUTL2(DFN,EVDT,"",$P(GBL,")")_",")
"RTN","VAFCCCAP",72,0)
 Q
"RTN","VAFCCCAP",73,0)
 ;
"RTN","VAFCCCAP",74,0)
UPPTR(DFN,ADATE) ;
"RTN","VAFCCCAP",75,0)
 ;Have deleted checkout, update variable pointer
"RTN","VAFCCCAP",76,0)
 N PTR S PTR="@"
"RTN","VAFCCCAP",77,0)
 N DGARRAY,DGCOUNT,SDDATE
"RTN","VAFCCCAP",78,0)
 S DGARRAY(4)=DFN,DGARRAY(1)=ADATE_";"_ADATE,DGARRAY("FLDS")=3,DGARRAY("SORT")="P"
"RTN","VAFCCCAP",79,0)
 S DGCOUNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","VAFCCCAP",80,0)
 ;
"RTN","VAFCCCAP",81,0)
 I DGCOUNT>0 D
"RTN","VAFCCCAP",82,0)
 .S SDDATE=0
"RTN","VAFCCCAP",83,0)
 .F  S SDDATE=$O(^TMP($J,"SDAMA301",DFN,SDDATE)) Q:'SDDATE  D
"RTN","VAFCCCAP",84,0)
 ..I SDDATE=ADATE S PTR=DFN_";DPT("
"RTN","VAFCCCAP",85,0)
 I DGCOUNT'=0 K ^TMP($J,"SDAMA301")
"RTN","VAFCCCAP",86,0)
 Q PTR
"RTN","VAFCCCAP",87,0)
 ;
"RTN","VAFCCCAP",88,0)
SETUP ;
"RTN","VAFCCCAP",89,0)
 N PIVOTPTR
"RTN","VAFCCCAP",90,0)
 ;S EVENT=$P(HLD,":")
"RTN","VAFCCCAP",91,0)
 S EVNTINFO="^TMP(""VAFCMSG"",""EVNTINFO"","_$J_")"
"RTN","VAFCCCAP",92,0)
 K @EVNTINFO
"RTN","VAFCCCAP",93,0)
 S PIVOTPTR=+$O(^VAT(391.71,"D",+EVENT,0))
"RTN","VAFCCCAP",94,0)
 I ('PIVOTPTR) S ERR="-1^Unable to create entry in ADT/HL7 PIVOT FILE" Q
"RTN","VAFCCCAP",95,0)
 S @EVNTINFO@("PIVOT")=PIVOTPTR
"RTN","VAFCCCAP",96,0)
 S @EVNTINFO@("SERVER PROTOCOL")="VAFC ADT-A08-SDAM SERVER"
"RTN","VAFCCCAP",97,0)
 S @EVNTINFO@("VAR-PTR")=PTR
"RTN","VAFCCCAP",98,0)
 S @EVNTINFO@("EVENT-NUM")=EVENT
"RTN","VAFCCCAP",99,0)
 S ERR=$$BCSTADT^VAFCMSG0(DFN,"A08",EVDT,EVNTINFO)
"RTN","VAFCCCAP",100,0)
 K @EVNTINFO
"RTN","VAFCCCAP",101,0)
 Q
"RTN","VAFCCCAP",102,0)
PROTOCHK(SPROTO) ;
"RTN","VAFCCCAP",103,0)
 ; input   server protocol
"RTN","VAFCCCAP",104,0)
 ;output   1 if disabled or has no clients
"RTN","VAFCCCAP",105,0)
 N HL
"RTN","VAFCCCAP",106,0)
 D INIT^HLFNC2(SPROTO,.HL,1)
"RTN","VAFCCCAP",107,0)
 K HLQ,HLECH,HLFS
"RTN","VAFCCCAP",108,0)
 Q $D(HL)#2
"RTN","VAFCCOPT")
0^14^B11265330
"RTN","VAFCCOPT",1,0)
VAFCCOPT ;ALB/CM/PHH/EG/GAH OUTPATIENT APPT (HL7 MESS) NIGHT JOB ; 10/18/06
"RTN","VAFCCOPT",2,0)
 ;;5.3;Registration;**91,298,568,585,725**;Jun 06, 1996;Build 12
"RTN","VAFCCOPT",3,0)
 ;hl7v1.6
"RTN","VAFCCOPT",4,0)
 ;This routine will loop through the Hospital Location file "S" node
"RTN","VAFCCOPT",5,0)
 ;and generate an HL7-v2.3 A08 message for all appointments for today
"RTN","VAFCCOPT",6,0)
 ;that have a status of "No action taken" or "Future"
"RTN","VAFCCOPT",7,0)
 ;the HL7 message is not batch.
"RTN","VAFCCOPT",8,0)
 ;
"RTN","VAFCCOPT",9,0)
 ;07/07/00 ACS - Added sequence 39 (facility+suffix) to the outpatient
"RTN","VAFCCOPT",10,0)
 ;string of fields
"RTN","VAFCCOPT",11,0)
 ;
"RTN","VAFCCOPT",12,0)
 ;Check to see if sending v2.3 is on or off
"RTN","VAFCCOPT",13,0)
EN I '$P($$SEND^VAFHUTL(),"^",2) Q
"RTN","VAFCCOPT",14,0)
 ;
"RTN","VAFCCOPT",15,0)
 S ERRB="^TMP($J,""ADT-ERR"","
"RTN","VAFCCOPT",16,0)
 ;
"RTN","VAFCCOPT",17,0)
 N STAT,X1,X2
"RTN","VAFCCOPT",18,0)
 ;This job should be set to run after midnight daily.
"RTN","VAFCCOPT",19,0)
 D NOW^%DTC S START=X
"RTN","VAFCCOPT",20,0)
 S X1=START,X2=1 D C^%DTC S STOP=X K X1,X2,%H,X,%,%I
"RTN","VAFCCOPT",21,0)
 S ENT=0,GBL="^TMP(""HLS"",$J)"
"RTN","VAFCCOPT",22,0)
 ;
"RTN","VAFCCOPT",23,0)
 K HL D INIT^HLFNC2("VAFC ADT-A08-SCHED SERVER",.HL)
"RTN","VAFCCOPT",24,0)
 I $D(HL)=1 DO  QUIT
"RTN","VAFCCOPT",25,0)
 .I $P(HL,"^",2)="Server Protocol Disabled"
"RTN","VAFCCOPT",26,0)
 .E  S @ERRB@(1)=HL D EBULL^VAFHUTL2("","","",ERRB)
"RTN","VAFCCOPT",27,0)
 ;
"RTN","VAFCCOPT",28,0)
 S PSTR="2,3,7,10,18,39,44,50"
"RTN","VAFCCOPT",29,0)
 ;
"RTN","VAFCCOPT",30,0)
 N DGARRAY,DGCNT
"RTN","VAFCCOPT",31,0)
 S COUNT=0
"RTN","VAFCCOPT",32,0)
 F  S ENT=$O(^SC(ENT)) Q:(ENT="")!(ENT'?.N)  D
"RTN","VAFCCOPT",33,0)
 .S ENT1=START
"RTN","VAFCCOPT",34,0)
 .S DGARRAY(1)=START_";"_STOP,DGARRAY("FLDS")="1;3",DGARRAY(2)=ENT
"RTN","VAFCCOPT",35,0)
 .S DGCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","VAFCCOPT",36,0)
 .;
"RTN","VAFCCOPT",37,0)
 .I DGCNT>0 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",ENT,DFN)) Q:DFN=""  D
"RTN","VAFCCOPT",38,0)
 ..Q:'$D(^DPT(DFN,0))
"RTN","VAFCCOPT",39,0)
 ..S ENT1=0 F  S ENT1=$O(^TMP($J,"SDAMA301",ENT,DFN,ENT1)) Q:ENT1=""!(ENT1'?.N1".".N)  D
"RTN","VAFCCOPT",40,0)
 ...S STAT=$P($P(^TMP($J,"SDAMA301",ENT,DFN,ENT1),"^",3),";")
"RTN","VAFCCOPT",41,0)
 ...I STAT="NT" S ERR=$$CREATE() I +ERR>0 S VPTR=$P(ERR,"^",6) D GEN
"RTN","VAFCCOPT",42,0)
 ...I +$G(ERR)<0 S @ERRB@(1)=ERR D EBULL^VAFHUTL2("","","",ERRB)
"RTN","VAFCCOPT",43,0)
 .I DGCNT'=0 K ^TMP($J,"SDAMA301")
"RTN","VAFCCOPT",44,0)
 D EXIT
"RTN","VAFCCOPT",45,0)
 Q
"RTN","VAFCCOPT",46,0)
 ;
"RTN","VAFCCOPT",47,0)
GEN I COUNT DO  ;first time through its been done
"RTN","VAFCCOPT",48,0)
 . K HL D INIT^HLFNC2("VAFC ADT-A08-SCHED SERVER",.HL)
"RTN","VAFCCOPT",49,0)
 . I $D(HL)=1 DO
"RTN","VAFCCOPT",50,0)
 . . S @ERRB@(1)=HL D EBULL^VAFHUTL2("","","",ERRB)
"RTN","VAFCCOPT",51,0)
 I $D(HL)=1 S ENT="ZZZZEND",ENT1=9999999,ENT2=9999999 Q
"RTN","VAFCCOPT",52,0)
 ;
"RTN","VAFCCOPT",53,0)
 ;
"RTN","VAFCCOPT",54,0)
 ;Generate the following segments:
"RTN","VAFCCOPT",55,0)
 ;EVN
"RTN","VAFCCOPT",56,0)
 S EVN=$$EVN^VAFHLEVN("A08","05")
"RTN","VAFCCOPT",57,0)
 I +EVN=-1 S ERR="-1^Unable to generate EVN segment" Q
"RTN","VAFCCOPT",58,0)
 ;PID
"RTN","VAFCCOPT",59,0)
 S VAFPID=$$EN^VAFCPID(DFN,"2,3,4,5,6,7,8,9,11,12,13,14,16,19,29,30")
"RTN","VAFCCOPT",60,0)
 ;ZPD
"RTN","VAFCCOPT",61,0)
 S ZPD=$$EN^VAFHLZPD(DFN,"2,3,4,5,6,7,8,9,10,11,12,13,14,15")
"RTN","VAFCCOPT",62,0)
 ;PV1 (outpatient)
"RTN","VAFCCOPT",63,0)
 S PV1=$$OUT^VAFHLPV1(DFN,EVENT,EVDT,VPTR,PSTR)
"RTN","VAFCCOPT",64,0)
 I +PV1=-1 S ERR="-1^Unable to generate PV1 segment" Q
"RTN","VAFCCOPT",65,0)
 ;
"RTN","VAFCCOPT",66,0)
 ; no dg1 segment will be created.  No diagnosis
"RTN","VAFCCOPT",67,0)
 ; information will be known at this stage.
"RTN","VAFCCOPT",68,0)
 S COUNT=1
"RTN","VAFCCOPT",69,0)
 K ^TMP("HLS",$J)
"RTN","VAFCCOPT",70,0)
 ;
"RTN","VAFCCOPT",71,0)
 ;
"RTN","VAFCCOPT",72,0)
 S @GBL@(COUNT)=EVN,COUNT=COUNT+1
"RTN","VAFCCOPT",73,0)
 MERGE @GBL@(COUNT)=VAFPID S COUNT=COUNT+1
"RTN","VAFCCOPT",74,0)
 S @GBL@(COUNT)=ZPD,COUNT=COUNT+1
"RTN","VAFCCOPT",75,0)
 S @GBL@(COUNT)=PV1
"RTN","VAFCCOPT",76,0)
 ;
"RTN","VAFCCOPT",77,0)
 D GENERATE^HLMA("VAFC ADT-A08-SCHED SERVER","GM",1,,.HLRST)
"RTN","VAFCCOPT",78,0)
 I $L($P(HLRST,2,99)) DO
"RTN","VAFCCOPT",79,0)
 . S @ERRB@(1)=HLRST D EBULL^VAFHUTL2("","","",ERRB)
"RTN","VAFCCOPT",80,0)
 . S ERRCNT=$G(ERRCNT)+1
"RTN","VAFCCOPT",81,0)
 . I $G(ERRCNT)>10 S ENT="ZZZZEND",ENT1=9999999,ENT2=9999999
"RTN","VAFCCOPT",82,0)
 Q
"RTN","VAFCCOPT",83,0)
 ;
"RTN","VAFCCOPT",84,0)
EXIT K HLERR
"RTN","VAFCCOPT",85,0)
 ;
"RTN","VAFCCOPT",86,0)
 D KILL^HLTRANS
"RTN","VAFCCOPT",87,0)
 K ERRCNT,VAFPID,^TMP("HLS",$J),SEQ,RESULT,MID
"RTN","VAFCCOPT",88,0)
 K PSTR,ZPD,DG1,PID,PV1,MSH,EVN,ENT,ENT1,ENT2,DFN,START,STOP,GBL,HLSDT
"RTN","VAFCCOPT",89,0)
 K EVDT,HLMTN,EVENT,COUNT,HLEVN,HLENTRY,ERR,VPTR,ERRB
"RTN","VAFCCOPT",90,0)
 Q
"RTN","VAFCCOPT",91,0)
 ;
"RTN","VAFCCOPT",92,0)
CREATE() ;
"RTN","VAFCCOPT",93,0)
 ;creates new entry in pivot file
"RTN","VAFCCOPT",94,0)
 N NODE,VPTR
"RTN","VAFCCOPT",95,0)
 S EVDT=ENT1,VPTR=DFN_";DPT("
"RTN","VAFCCOPT",96,0)
 S NODE=$$PIVNW^VAFHPIVT(DFN,EVDT,2,VPTR)
"RTN","VAFCCOPT",97,0)
 I +NODE=-1 Q NODE
"RTN","VAFCCOPT",98,0)
 S EVENT=$P(NODE,":")
"RTN","VAFCCOPT",99,0)
 Q EVENT_"^"_NODE
"RTN","VAFHCCAP")
0^15^B18442978
"RTN","VAFHCCAP",1,0)
VAFHCCAP ;ALB/CMM/PHH/EG/GAH OUTPATIENT CAPTURE TEST ; 10/18/06
"RTN","VAFHCCAP",2,0)
 ;;5.3;Registration;**91,582,568,585,725**;Jun 06, 1996;Build 12
"RTN","VAFHCCAP",3,0)
 ;
"RTN","VAFHCCAP",4,0)
CAP ;
"RTN","VAFHCCAP",5,0)
 ;Only fire if check-in,check-out, add/edit add, add/edit change
"RTN","VAFHCCAP",6,0)
 I ($G(SDAMEVT)<4)!($G(SDAMEVT)>7) Q
"RTN","VAFHCCAP",7,0)
 ;quit if no action
"RTN","VAFHCCAP",8,0)
 I +$G(SDATA("BEFORE","STATUS"))=3,+$G(SDATA("AFTER","STATUS"))=3
"RTN","VAFHCCAP",9,0)
 IF  I $P($G(SDATA("AFTER","STATUS")),"^",3)'="ACTION REQ/CHECKED IN"
"RTN","VAFHCCAP",10,0)
 IF  I $P($G(SDATA("BEFORE","STATUS")),"^",3)'="NO ACTION TAKEN/TODAY" Q
"RTN","VAFHCCAP",11,0)
 ;check to see if sending is on or off
"RTN","VAFHCCAP",12,0)
 I '$$SEND^VAFHUTL() Q
"RTN","VAFHCCAP",13,0)
 ;
"RTN","VAFHCCAP",14,0)
 ;S ^TMP($J,"VAFHCCAP")=""
"RTN","VAFHCCAP",15,0)
 ;I $D(^TMP($J,"VAFHCCAP")) G EN ;for debug
"RTN","VAFHCCAP",16,0)
 ;
"RTN","VAFHCCAP",17,0)
 ;Queue to run NOW, returns control back to outpatient event driver
"RTN","VAFHCCAP",18,0)
 S ZTRTN="EN^VAFHCCAP",ZTDESC="PIMS Outpatient HL7 Capture"
"RTN","VAFHCCAP",19,0)
 S ZTSAVE("SDHDL")="",ZTSAVE("SDAMEVT")="",ZTSAVE("SDATA")=""
"RTN","VAFHCCAP",20,0)
 S ZTSAVE("^TMP(""SDEVT"",$J,")="",ZTIO="",ZTDTH=$H
"RTN","VAFHCCAP",21,0)
 D ^%ZTLOAD
"RTN","VAFHCCAP",22,0)
 ;W !?3,$G(ZTSK)
"RTN","VAFHCCAP",23,0)
 Q
"RTN","VAFHCCAP",24,0)
 ;
"RTN","VAFHCCAP",25,0)
EN ;
"RTN","VAFHCCAP",26,0)
 N DFN,HLD,EVDT,CHK,ERR,SEND,NEW,EVENT,HOSP,THLD,PTR,REM,HPTR
"RTN","VAFHCCAP",27,0)
 ;Only fire if check-in,check-out, add/edit add, add/edit change
"RTN","VAFHCCAP",28,0)
 I SDAMEVT<4!(SDAMEVT>7) Q
"RTN","VAFHCCAP",29,0)
 ;
"RTN","VAFHCCAP",30,0)
 ;Appointments
"RTN","VAFHCCAP",31,0)
 I SDAMEVT=4!(SDAMEVT=5) D
"RTN","VAFHCCAP",32,0)
 .S DFN=$P(SDATA,"^",2),EVDT=$P(SDATA,"^",3),PTR=$$GETPTR^VAFHCUTL(1),PTR=PTR_";SCE(",(CHK,UP,REM)=""
"RTN","VAFHCCAP",33,0)
 .I SDAMEVT=4 S PTR=DFN_";DPT(" ;check-in or unscheduled visit check-in
"RTN","VAFHCCAP",34,0)
 .;Need to check if deleting check-out
"RTN","VAFHCCAP",35,0)
 .;if deleting check-out and no pivot file entry exists don't send
"RTN","VAFHCCAP",36,0)
 .I +$G(SDATA("AFTER","STATUS"))=3&(+$G(SDATA("BEFORE","STATUS"))=2) S CHK=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR),PTR=$$UPPTR(DFN,EVDT) S:PTR="@" REM=1 S:+CHK>0 UP=$$UPDATE^VAFHUTL(+CHK,EVDT,PTR,REM) S:+CHK<0!(+UP<0) SEND="N"
"RTN","VAFHCCAP",37,0)
 .;set send to N if deleting and not in pivot file
"RTN","VAFHCCAP",38,0)
 .I '$D(SEND) D
"RTN","VAFHCCAP",39,0)
 ..S HLD=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFHCCAP",40,0)
 ..I +HLD=-1 S HPTR=DFN_";DPT(",HLD=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,HPTR) I +HLD'=-1 S UP=$$UPDATE^VAFHUTL(+HLD,EVDT,PTR,"")
"RTN","VAFHCCAP",41,0)
 ..I +HLD=-1 S HLD=$$PIVNW^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFHCCAP",42,0)
 ..S EVENT=$P(HLD,":"),ERR=$$OA08^VAFHCA08(DFN,EVENT,EVDT,PTR,"2,3,4,5,6,7,8,9,11,12,13,14,16,19","2,3,4,5,6,7,8,9,10,11,12,13,14,15","A","A")
"RTN","VAFHCCAP",43,0)
 ;
"RTN","VAFHCCAP",44,0)
 ;Stop codes, Add/Edits
"RTN","VAFHCCAP",45,0)
 I SDAMEVT=6!(SDAMEVT=7) D
"RTN","VAFHCCAP",46,0)
 .N HLD,STOP,THLD,REMOVE,UP
"RTN","VAFHCCAP",47,0)
 .S HLD="",STOP="N",ERR=""
"RTN","VAFHCCAP",48,0)
 .F  K EVENT S REMOVE="N",HLD=$O(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD)) Q:HLD=""!(STOP="Y")  D
"RTN","VAFHCCAP",49,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")'=""&($P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^",6)'="") S STOP="Y" Q
"RTN","VAFHCCAP",50,0)
 ..;If STOP="Y" stop code was not stand alone
"RTN","VAFHCCAP",51,0)
 ..;If STOP="N" stop code is stand alone
"RTN","VAFHCCAP",52,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")="" D
"RTN","VAFHCCAP",53,0)
 ...S REMOVE="Y",DFN=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"BEFORE"),"^",2),EVDT=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"BEFORE"),"^"),PTR=HLD_";SCE("
"RTN","VAFHCCAP",54,0)
 ...S EVENT=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFHCCAP",55,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")'="" D
"RTN","VAFHCCAP",56,0)
 ...S DFN=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^",2),EVDT=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^"),PTR=HLD_";SCE("
"RTN","VAFHCCAP",57,0)
 ..I '$D(EVENT) S THLD=$$PIVNW^VAFHPIVT(DFN,EVDT,2,PTR),EVENT=$P(THLD,":")
"RTN","VAFHCCAP",58,0)
 ..I REMOVE="Y" S PTR="@",UP=$$UPDATE^VAFHUTL(+EVENT,EVDT,PTR,1)
"RTN","VAFHCCAP",59,0)
 ..I +EVENT>0 S ERR=$$OA08^VAFHCA08(DFN,EVENT,EVDT,PTR,"2,3,4,5,6,7,8,9,11,12,13,14,16,19","2,3,4,5,6,7,8,9,10,11,12,13,14,15","A","A")
"RTN","VAFHCCAP",60,0)
EXIT ;
"RTN","VAFHCCAP",61,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","VAFHCCAP",62,0)
 I +ERR<0 D ERROR(ERR,DFN)
"RTN","VAFHCCAP",63,0)
 D KILL^HLTRANS
"RTN","VAFHCCAP",64,0)
 Q
"RTN","VAFHCCAP",65,0)
 ;
"RTN","VAFHCCAP",66,0)
ERROR(PNUM,DFN) ;
"RTN","VAFHCCAP",67,0)
 ;Error message unable to generate A08 Message
"RTN","VAFHCCAP",68,0)
 N GBL S GBL="^TMP($J,""ERR"")"
"RTN","VAFHCCAP",69,0)
 I +PNUM<0 S @GBL@(0)="ERROR",@GBL@(1)=$P(PNUM,"^",2)_", unable to generate A08 Message" D EBULL^VAFHUTL2(DFN,"","",$P(GBL,")")_",")
"RTN","VAFHCCAP",70,0)
 Q
"RTN","VAFHCCAP",71,0)
 ;
"RTN","VAFHCCAP",72,0)
UPPTR(DFN,ADATE) ;
"RTN","VAFHCCAP",73,0)
 ;Have deleted checkout, update variable pointer
"RTN","VAFHCCAP",74,0)
 N PTR S PTR="@"
"RTN","VAFHCCAP",75,0)
 N DGARRAY,DGCOUNT,SDDATE
"RTN","VAFHCCAP",76,0)
 S DGARRAY(4)=DFN,DGARRAY(1)=ADATE_";"_ADATE,DGARRAY("FLDS")=3,DGARRAY("SORT")="P"
"RTN","VAFHCCAP",77,0)
 S DGCOUNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","VAFHCCAP",78,0)
 ;
"RTN","VAFHCCAP",79,0)
 I DGCOUNT>0 D
"RTN","VAFHCCAP",80,0)
 .S SDDATE=0
"RTN","VAFHCCAP",81,0)
 .F  S SDDATE=$O(^TMP($J,"SDAMA301",DFN,SDDATE)) Q:'SDDATE  D
"RTN","VAFHCCAP",82,0)
 ..I SDDATE=ADATE S PTR=DFN_";DPT("
"RTN","VAFHCCAP",83,0)
 I DGCOUNT'=0 K ^TMP($J,"SDAMA301")
"RTN","VAFHCCAP",84,0)
 Q PTR
"RTN","VAFHCOPT")
0^16^B8310849
"RTN","VAFHCOPT",1,0)
VAFHCOPT ;ALB/CM/PKE/PHH/EG/GAH OUTPATIENT APPT (HL7 MESS) NIGHT JOB ; 10/18/06
"RTN","VAFHCOPT",2,0)
 ;;5.3;Registration;**91,568,585,725**;Aug 13, 1993;Build 12
"RTN","VAFHCOPT",3,0)
 ;
"RTN","VAFHCOPT",4,0)
 ;This routine will loop through the Hospital Location file "S" node
"RTN","VAFHCOPT",5,0)
 ;and generate an A08 message for all appointments for today
"RTN","VAFHCOPT",6,0)
 ;that have a status of "No action taken" or "Future"
"RTN","VAFHCOPT",7,0)
 ;
"RTN","VAFHCOPT",8,0)
EN ;
"RTN","VAFHCOPT",9,0)
 ;Check to see if sending is on or off
"RTN","VAFHCOPT",10,0)
 N GO
"RTN","VAFHCOPT",11,0)
 S GO=$$SEND^VAFHUTL()
"RTN","VAFHCOPT",12,0)
 I GO=0 Q
"RTN","VAFHCOPT",13,0)
 ;
"RTN","VAFHCOPT",14,0)
 S ERRB="^TMP($J,""ADT-ERR""," K ^TMP($J,"ADT-ERR")
"RTN","VAFHCOPT",15,0)
 K HL D INIT^HLFNC2("VAFH A08",.HL)
"RTN","VAFHCOPT",16,0)
 I $D(HL)=1 S ERR="-1^"_HL QUIT
"RTN","VAFHCOPT",17,0)
 ;
"RTN","VAFHCOPT",18,0)
 N STAT,X1,X2
"RTN","VAFHCOPT",19,0)
 ;This job should be set to run after midnight daily.
"RTN","VAFHCOPT",20,0)
 D NOW^%DTC S START=X ;;;S START=2970101
"RTN","VAFHCOPT",21,0)
 S X1=START,X2=1 D C^%DTC S STOP=X K X1,X2,%H,X,%,%I
"RTN","VAFHCOPT",22,0)
 ;
"RTN","VAFHCOPT",23,0)
 S ENT=0,GBL="^TMP(""HLS"",$J)" K ^TMP("HLS",$J)
"RTN","VAFHCOPT",24,0)
 ;
"RTN","VAFHCOPT",25,0)
 N DGARRAY,DGCNT
"RTN","VAFHCOPT",26,0)
 F  S ENT=$O(^SC(ENT)) Q:(ENT="")!(ENT'?.N)  D
"RTN","VAFHCOPT",27,0)
 .S ENT1=START
"RTN","VAFHCOPT",28,0)
 .S DGARRAY(1)=START_";"_STOP,DGARRAY("FLDS")="1;3",DGARRAY(2)=ENT
"RTN","VAFHCOPT",29,0)
 .S DGCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","VAFHCOPT",30,0)
 .;
"RTN","VAFHCOPT",31,0)
 .I DGCNT>0 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",ENT,DFN)) Q:DFN=""  D
"RTN","VAFHCOPT",32,0)
 ..Q:'$D(^DPT(DFN,0))
"RTN","VAFHCOPT",33,0)
 ..S ENT1=0 F  S ENT1=$O(^TMP($J,"SDAMA301",ENT,DFN,ENT1)) Q:ENT1=""!(ENT1'?.N1".".N)  D
"RTN","VAFHCOPT",34,0)
 ...S STAT=$P($P(^TMP($J,"SDAMA301",ENT,DFN,ENT1),"^",3),";")
"RTN","VAFHCOPT",35,0)
 ...I STAT="NT" S ERR=$$CREATE() I +ERR>0 S VPTR=$P(ERR,"^",6) D GEN
"RTN","VAFHCOPT",36,0)
 ...I +$G(ERR)<0 S @ERRB@(1)=ERR D EBULL^VAFHUTL2("","","",ERRB)
"RTN","VAFHCOPT",37,0)
 .I DGCNT'=0 K ^TMP($J,"SDAMA301")
"RTN","VAFHCOPT",38,0)
 D EXIT
"RTN","VAFHCOPT",39,0)
 Q
"RTN","VAFHCOPT",40,0)
 ;
"RTN","VAFHCOPT",41,0)
GEN ;
"RTN","VAFHCOPT",42,0)
 ;Generate the following segments:
"RTN","VAFHCOPT",43,0)
 ;MSH
"RTN","VAFHCOPT",44,0)
 ;
"RTN","VAFHCOPT",45,0)
 K HL D INIT^HLFNC2("VAFH A08",.HL)
"RTN","VAFHCOPT",46,0)
 I $D(HL)=1 S ERR="-1^"_HL Q
"RTN","VAFHCOPT",47,0)
 ;EVN
"RTN","VAFHCOPT",48,0)
 S EVN=$$EVN^VAFHLEVN("A08","05")
"RTN","VAFHCOPT",49,0)
 I +EVN=-1 S ERR="-1^Unable to generate EVN segment" Q
"RTN","VAFHCOPT",50,0)
 ;PID
"RTN","VAFHCOPT",51,0)
 S PID=$$EN^VAFHLPID(DFN,"2,3,4,5,6,7,8,9,11,12,13,14,16,19")
"RTN","VAFHCOPT",52,0)
 ;ZPD
"RTN","VAFHCOPT",53,0)
 S ZPD=$$EN^VAFHLZPD(DFN,"2,3,4,5,6,7,8,9,10,11,12,13,14,15")
"RTN","VAFHCOPT",54,0)
 ;PV1 (outpatient)
"RTN","VAFHCOPT",55,0)
 S PV1=$$OUT^VAFHLPV1(DFN,EVENT,EVDT,VPTR,"A")
"RTN","VAFHCOPT",56,0)
 I +PV1=-1 S ERR="-1^Unable to generate PV1 segment" Q
"RTN","VAFHCOPT",57,0)
 ;
"RTN","VAFHCOPT",58,0)
 ; no dg1 segment will be created.  No diagnosis
"RTN","VAFHCOPT",59,0)
 ;information will be known at this stage.
"RTN","VAFHCOPT",60,0)
 ;
"RTN","VAFHCOPT",61,0)
 K ^TMP("HLS",$J)
"RTN","VAFHCOPT",62,0)
 S COUNT=1
"RTN","VAFHCOPT",63,0)
 ;
"RTN","VAFHCOPT",64,0)
 S @GBL@(COUNT)=EVN,COUNT=COUNT+1
"RTN","VAFHCOPT",65,0)
 S @GBL@(COUNT)=PID,COUNT=COUNT+1
"RTN","VAFHCOPT",66,0)
 S @GBL@(COUNT)=ZPD,COUNT=COUNT+1
"RTN","VAFHCOPT",67,0)
 S @GBL@(COUNT)=PV1
"RTN","VAFHCOPT",68,0)
 ;
"RTN","VAFHCOPT",69,0)
 ;
"RTN","VAFHCOPT",70,0)
 ;
"RTN","VAFHCOPT",71,0)
 D GENERATE^HLMA("VAFH A08","GM",1,.HLRST,"",.HL)
"RTN","VAFHCOPT",72,0)
 I HLRST,$P(HLRST,"^",2)=""
"RTN","VAFHCOPT",73,0)
 E  S @ERRB@(1)=HLRST D EBULL^VAFHUTL2("","","",ERRB) K HLERR
"RTN","VAFHCOPT",74,0)
 Q
"RTN","VAFHCOPT",75,0)
EXIT ;
"RTN","VAFHCOPT",76,0)
 D KILL^HLTRANS
"RTN","VAFHCOPT",77,0)
 K @GBL
"RTN","VAFHCOPT",78,0)
 K ZPD,DG1,PID,PV1,MSH,EVN,ENT,ENT1,ENT2,DFN,START,STOP,GBL,HLSDT
"RTN","VAFHCOPT",79,0)
 K EVDT,HLMTN,EVENT,COUNT,HLEVN,HLENTRY,ERR,VPTR,ERRB
"RTN","VAFHCOPT",80,0)
 Q
"RTN","VAFHCOPT",81,0)
 ;
"RTN","VAFHCOPT",82,0)
CREATE() ;
"RTN","VAFHCOPT",83,0)
 ;creates new entry in pivot file
"RTN","VAFHCOPT",84,0)
 N NODE,VPTR
"RTN","VAFHCOPT",85,0)
 S EVDT=ENT1,VPTR=DFN_";DPT("
"RTN","VAFHCOPT",86,0)
 S NODE=$$PIVNW^VAFHPIVT(DFN,EVDT,2,VPTR)
"RTN","VAFHCOPT",87,0)
 I +NODE=-1 Q NODE
"RTN","VAFHCOPT",88,0)
 S EVENT=$P(NODE,":")
"RTN","VAFHCOPT",89,0)
 Q EVENT_"^"_NODE
"RTN","VAFHUTL")
0^17^B19820205
"RTN","VAFHUTL",1,0)
VAFHUTL ;ALB/CM/PHH/EG/GAH UTILITIES ROUTINE ; 10/18/06
"RTN","VAFHUTL",2,0)
 ;;5.3;Registration;**91,151,568,585,725**;Jun 06, 1996;Build 12
"RTN","VAFHUTL",3,0)
 ;
"RTN","VAFHUTL",4,0)
 ;
"RTN","VAFHUTL",5,0)
LTD(DFN) ;
"RTN","VAFHUTL",6,0)
 ;This function will find the last time seen at the facility
"RTN","VAFHUTL",7,0)
 ;
"RTN","VAFHUTL",8,0)
 ;  Input:  DFN -- pointer to the patient in file #2
"RTN","VAFHUTL",9,0)
 ;
"RTN","VAFHUTL",10,0)
 ;  Output:  FileMan Date/time ^ I,D,R,A,S ^ HL7 Date/time ^ Variable PTR
"RTN","VAFHUTL",11,0)
 ;
"RTN","VAFHUTL",12,0)
 ;  I = inpatient, D = discharge, R = Registration, A = Appointment
"RTN","VAFHUTL",13,0)
 ;  S = Stop Code
"RTN","VAFHUTL",14,0)
 ;
"RTN","VAFHUTL",15,0)
 ;  If Unsuccessful, Output:  -1^error message
"RTN","VAFHUTL",16,0)
 ;
"RTN","VAFHUTL",17,0)
 N LTD,X,FLG,LAST,VARPTR
"RTN","VAFHUTL",18,0)
 ;
"RTN","VAFHUTL",19,0)
 S FLG=""
"RTN","VAFHUTL",20,0)
 ; - need a patient
"RTN","VAFHUTL",21,0)
 I '$G(DFN) Q "-1^Missing Parameters for LTD function"
"RTN","VAFHUTL",22,0)
 ;
"RTN","VAFHUTL",23,0)
 ; - if current inpatient, set LTD = today and quit
"RTN","VAFHUTL",24,0)
 I $G(^DPT(DFN,.105)) S LTD=DT,FLG="I" I $D(^DGPM("ATID1",DFN)) S LAST=9999999.9999999-($O(^DGPM("ATID1",DFN,""))) G LTDQ
"RTN","VAFHUTL",25,0)
 ;
"RTN","VAFHUTL",26,0)
 ; - get the last discharge date
"RTN","VAFHUTL",27,0)
 S LTD=+$O(^DGPM("ATID3",DFN,"")) S:LTD FLG="D",LAST=9999999.9999999-LTD,LTD=LAST\1 S:LTD>DT (LAST,LTD)=DT
"RTN","VAFHUTL",28,0)
 ;
"RTN","VAFHUTL",29,0)
 ; - get the last registration date and compare to LTD
"RTN","VAFHUTL",30,0)
 S X=+$O(^DPT(DFN,"DIS",0)) I X S X=9999999-X S:(X\1)>LTD LAST=X,LTD=X\1,FLG="R",VARPTR=DFN_";DPT("
"RTN","VAFHUTL",31,0)
 ;
"RTN","VAFHUTL",32,0)
 ; - get the last appointment and compare to LTD
"RTN","VAFHUTL",33,0)
 N SDDATE,SDARRAY,SDCLIEN,SDSTAT
"RTN","VAFHUTL",34,0)
 S SDDATE=LTD,SDARRAY("FLDS")=3,SDARRAY(4)=DFN
"RTN","VAFHUTL",35,0)
 I $$SDAPI^SDAMA301(.SDARRAY)>0 D
"RTN","VAFHUTL",36,0)
 .S SDCLIEN=0
"RTN","VAFHUTL",37,0)
 .F  S SDCLIEN=$O(^TMP($J,"SDAMA301",DFN,SDCLIEN)) Q:'SDCLIEN!(SDDATE>DT)  D
"RTN","VAFHUTL",38,0)
 ..F  S SDDATE=$O(^TMP($J,"SDAMA301",DFN,SDCLIEN,SDDATE)) Q:'SDDATE!(SDDATE>DT)  D
"RTN","VAFHUTL",39,0)
 ...S SDSTAT=$P($P(^TMP($J,"SDAMA301",DFN,SDCLIEN,SDDATE),"^",3),";")
"RTN","VAFHUTL",40,0)
 ...I SDSTAT="R" D
"RTN","VAFHUTL",41,0)
 ....S LAST=SDDATE,LTD=SDDATE\1,FLG="A"
"RTN","VAFHUTL",42,0)
 ....I $D(VARPTR) K VARPTR
"RTN","VAFHUTL",43,0)
 K ^TMP($J,"SDAMA301")
"RTN","VAFHUTL",44,0)
 ;
"RTN","VAFHUTL",45,0)
 ; - get the last standalone after LTD
"RTN","VAFHUTL",46,0)
 S X=$$GETLAST^SDOE(DFN,LTD_".9999")
"RTN","VAFHUTL",47,0)
 I X S LAST=+$$SCE^DGSDU(X,1,0),LTD=LAST\1,FLG="S",VARPTR=X_";SCE("
"RTN","VAFHUTL",48,0)
 ;
"RTN","VAFHUTL",49,0)
LTDQ I '$D(LAST) Q "-1^No last date"
"RTN","VAFHUTL",50,0)
 I '$D(VARPTR) S VARPTR=$$VPTR(FLG,DFN,LAST)
"RTN","VAFHUTL",51,0)
 I +VARPTR<1 Q "-1^No last date"
"RTN","VAFHUTL",52,0)
 Q LAST_"^"_FLG_"^"_$$HLDATE^HLFNC(LAST,"TS")_"^"_VARPTR
"RTN","VAFHUTL",53,0)
 ;
"RTN","VAFHUTL",54,0)
 ;
"RTN","VAFHUTL",55,0)
VPTR(TYPE,DFN,EDATE) ;
"RTN","VAFHUTL",56,0)
 ;Gets pointer for inpatient/outpatient event
"RTN","VAFHUTL",57,0)
 ;
"RTN","VAFHUTL",58,0)
 I '$D(TYPE)!('$D(DFN))!('$D(EDATE)) Q "-1^Missing Parameters for VPTR function"
"RTN","VAFHUTL",59,0)
 N PTR,IND
"RTN","VAFHUTL",60,0)
 I TYPE'="A"&(TYPE'="D")&(TYPE'="I") Q "-1^NOT IN or OUT PATIENT"
"RTN","VAFHUTL",61,0)
 I TYPE="I"!(TYPE="D") D
"RTN","VAFHUTL",62,0)
 .;inpatient or discharge
"RTN","VAFHUTL",63,0)
 .S IND=$O(^DGPM("APID",DFN,"")),PTR=$O(^DGPM("APID",DFN,IND,""))
"RTN","VAFHUTL",64,0)
 .I $D(^DGPM(PTR)) S PTR="-1^MISSING ENTRY"
"RTN","VAFHUTL",65,0)
 .I +PTR>0 S PTR=PTR_";DGPM("
"RTN","VAFHUTL",66,0)
 I TYPE="A" D
"RTN","VAFHUTL",67,0)
 .;outpatient appointment
"RTN","VAFHUTL",68,0)
 .I $D(^SCE("ADFN",DFN,LAST)) S PTR=$O(^SCE("ADFN",DFN,LAST,"")) S:('$D(^SCE(+PTR,0))) PTR=DFN_";DPT(" S:($D(^SCE(+PTR,0))) PTR=PTR_";SCE("
"RTN","VAFHUTL",69,0)
 .I '$D(^SCE("ADFN",DFN,LAST)) S PTR=DFN_";DPT("
"RTN","VAFHUTL",70,0)
 Q PTR
"RTN","VAFHUTL",71,0)
 ;
"RTN","VAFHUTL",72,0)
GETF(SEG) ;NOT USED ANY MORE
"RTN","VAFHUTL",73,0)
 ;This function will return all of the available fields for the SEG
"RTN","VAFHUTL",74,0)
 ;segment as found in the HL7 DHCP PARAMETER file, as a string,
"RTN","VAFHUTL",75,0)
 ;separated by commas
"RTN","VAFHUTL",76,0)
 ;
"RTN","VAFHUTL",77,0)
 ;Input:  SEG - HL7 Segment
"RTN","VAFHUTL",78,0)
 ;Output:  Successful - string of field numbers seperated by commas
"RTN","VAFHUTL",79,0)
 ;If unsuccessful, -1^error message will be returned.
"RTN","VAFHUTL",80,0)
 ;
"RTN","VAFHUTL",81,0)
 ;NOTE: HL("SAN") must be defined as Sending Application in file 771
"RTN","VAFHUTL",82,0)
 ;N ENT,FLDS
"RTN","VAFHUTL",83,0)
 ;I '$D(HLENTRY)!('$D(SEG)) Q "-1^MISSING PARAMETERS"
"RTN","VAFHUTL",84,0)
 ;do lookup in #771 for HLENTRY
"RTN","VAFHUTL",85,0)
 ;S DIC="^HL(770,",DIC(0)="MQZ",X=HLENTRY D ^DIC
"RTN","VAFHUTL",86,0)
 ;I +Y<0 Q "-1^NO ENTRY IN FILE 771"
"RTN","VAFHUTL",87,0)
 ;S ENT=$P(^HL(770,+Y,0),"^",8) I ENT="" Q "-1^NO ENTRY IN APPLICATION FIELD"
"RTN","VAFHUTL",88,0)
 ;
"RTN","VAFHUTL",89,0)
 N ENT,FLDS
"RTN","VAFHUTL",90,0)
 I $G(HL("SAN"))]"",$G(SEG)]""
"RTN","VAFHUTL",91,0)
 E  Q "-1^MISSING PARAMETERS HL(SAN)!SEG"
"RTN","VAFHUTL",92,0)
 ;
"RTN","VAFHUTL",93,0)
 S ENT=$O(^HL(771,"B",HL("SAN"),0))
"RTN","VAFHUTL",94,0)
 I 'ENT Q "-1^NO ENTRY IN FILE 771"
"RTN","VAFHUTL",95,0)
 ;
"RTN","VAFHUTL",96,0)
 S DIC="^HL(771,ENT,""SEG"",",X=SEG,DIC(0)="MQZ" D ^DIC
"RTN","VAFHUTL",97,0)
 K DIC,X
"RTN","VAFHUTL",98,0)
 I +Y<0 K Y Q "-1^NO ENTRY IN SUBFILE #771.05"
"RTN","VAFHUTL",99,0)
 S FLDS=$P(^HL(771,ENT,"SEG",+Y,"F"),"^") K Y
"RTN","VAFHUTL",100,0)
 Q FLDS
"RTN","VAFHUTL",101,0)
 ;
"RTN","VAFHUTL",102,0)
UPDATE(PIVOT,ADATE,APTR,REMOVE) ;
"RTN","VAFHUTL",103,0)
 ;
"RTN","VAFHUTL",104,0)
 ;This function will allow the updating of PIVOT number entry, updating
"RTN","VAFHUTL",105,0)
 ;EVENT DATE/TIME and the VARIABLE POINTER and setting of the DELETED
"RTN","VAFHUTL",106,0)
 ;field.
"RTN","VAFHUTL",107,0)
 ;
"RTN","VAFHUTL",108,0)
 ;Input:  PIVOT  - Pivot Number
"RTN","VAFHUTL",109,0)
 ;        ADATE  - Event Date/Time (new)
"RTN","VAFHUTL",110,0)
 ;        APTR   - Variable Pointer (new)
"RTN","VAFHUTL",111,0)
 ;        REMOVE - 1 or null if 1 set DELETED field
"RTN","VAFHUTL",112,0)
 ;
"RTN","VAFHUTL",113,0)
 ;Output:  0 if successful
"RTN","VAFHUTL",114,0)
 ;        -1^error message if not successful
"RTN","VAFHUTL",115,0)
 ;
"RTN","VAFHUTL",116,0)
 I '$D(PIVOT) Q "-1^MISSING PARAMETERS"
"RTN","VAFHUTL",117,0)
 I '$D(^VAT(391.71,"D",PIVOT)) Q "-1^NO PIVOT ENTRY"
"RTN","VAFHUTL",118,0)
 I '$D(REMOVE) S REMOVE=""
"RTN","VAFHUTL",119,0)
 I APTR?.N1";".A1"(" D
"RTN","VAFHUTL",120,0)
 .I $P(APTR,";",2)="DPT(" S APTR="P.`"_+APTR
"RTN","VAFHUTL",121,0)
 .I $P(APTR,";",2)="SCE(" S APTR="O.`"_+APTR
"RTN","VAFHUTL",122,0)
 .I $P(APTR,";",2)="DGMP(" S APTR="I.`"_+APTR
"RTN","VAFHUTL",123,0)
 S DA=$O(^VAT(391.71,"D",PIVOT,"")) I DA="" Q "-1^BAD CROSS REFERENCE"
"RTN","VAFHUTL",124,0)
 S DIE="^VAT(391.71,",DIC(0)="MQZ",DR=""
"RTN","VAFHUTL",125,0)
 I ADATE'="" S DR=DR_".01///"_ADATE_";"
"RTN","VAFHUTL",126,0)
 I APTR'="" S DR=DR_".05///"_APTR_";"
"RTN","VAFHUTL",127,0)
 S DR=DR_".07///"_REMOVE
"RTN","VAFHUTL",128,0)
 L +^VAT(391.71,DA,0):5
"RTN","VAFHUTL",129,0)
 I '$T Q "-1^Unable to lock entry in Pivot file"
"RTN","VAFHUTL",130,0)
 D ^DIE L -^VAT(391.71,DA,0)
"RTN","VAFHUTL",131,0)
 K DIE,DR,DIC,DA,X,Y
"RTN","VAFHUTL",132,0)
 Q 0
"RTN","VAFHUTL",133,0)
 ;
"RTN","VAFHUTL",134,0)
SEND(VAR1) ;this function will test for the on/off parameter to send ADT messages.
"RTN","VAFHUTL",135,0)
 ;OUTPUTS   0 will indicate NOT to send
"RTN","VAFHUTL",136,0)
 ;          1 will indicate TO send
"RTN","VAFHUTL",137,0)
 ;          0 in second piece will indicate NOT to send HL7 v2.3
"RTN","VAFHUTL",138,0)
 ;          1 in second piece will indicate to send HL7 v2.3
"RTN","VAFHUTL",139,0)
 N VAR1
"RTN","VAFHUTL",140,0)
 S VAR1=$O(^DG(43,0))
"RTN","VAFHUTL",141,0)
 I +VAR1 S VAR1=$P($G(^DG(43,VAR1,"HL7")),"^",2,3)
"RTN","VAFHUTL",142,0)
 Q VAR1
"RTN","VAFHUTL",143,0)
 ;
"RTN","VAFHUTL",144,0)
HLQ(DATA) ;this function returns the value passed to it or HLQ
"RTN","VAFHUTL",145,0)
 I $G(DATA)="" Q HLQ
"RTN","VAFHUTL",146,0)
 Q DATA
"RTN","VAFHUTL",147,0)
 ;
"RTN","VAFHUTL",148,0)
NOSEND() ;function TURNS OFF the on/off parameter to send ADT messages.
"RTN","VAFHUTL",149,0)
 ;        used by init to disable all ADT HL7 protocols
"RTN","VAFHUTL",150,0)
 ; 
"RTN","VAFHUTL",151,0)
 ;OUTPUTS   1 will indicate it was SET NOT to send
"RTN","VAFHUTL",152,0)
 ;          0 will indicate it failed to SET IT NOT to send
"RTN","VAFHUTL",153,0)
 ;
"RTN","VAFHUTL",154,0)
 N VAR1
"RTN","VAFHUTL",155,0)
 S VAR1=$O(^DG(43,0))
"RTN","VAFHUTL",156,0)
 I +VAR1 S $P(^DG(43,+VAR1,"HL7"),"^",2,3)="0^0" Q 0
"RTN","VAFHUTL",157,0)
 Q 1
"RTN","VAFHUTL",158,0)
 ;
"RTN","VAFHUTL",159,0)
DPROTO(PNAM) ;returns 0 if protocol disabled field is not null, ie disabled
"RTN","VAFHUTL",160,0)
 ;        returns 1 if protocol is NOT disabled
"RTN","VAFHUTL",161,0)
 I $G(PNAM)]"",$P($G(^ORD(101,+$O(^ORD(101,"B",PNAM,0)),0)),"^",3)]"" Q 0
"RTN","VAFHUTL",162,0)
 Q 1
"VER")
8.0^22.0
**INSTALL NAME**
EAS*1.0*77
"BLD",6501,0)
EAS*1.0*77^ENROLLMENT APPLICATION SYSTEM^0^3070201^y
"BLD",6501,1,0)
^^4^4^3061201^
"BLD",6501,1,1,0)
This patch contain routines that have been modified
"BLD",6501,1,2,0)
to call the Scheduling Encapsulation API SDAPI^SDAMA301
"BLD",6501,1,3,0)
instead of referencing the global for appointment data retrieval. 
"BLD",6501,1,4,0)
This patch also addresses the error handling when an error occurs.
"BLD",6501,4,0)
^9.64PA^^
"BLD",6501,6.3)
11
"BLD",6501,"ABPKG")
n
"BLD",6501,"KRN",0)
^9.67PA^8989.52^19
"BLD",6501,"KRN",.4,0)
.4
"BLD",6501,"KRN",.401,0)
.401
"BLD",6501,"KRN",.402,0)
.402
"BLD",6501,"KRN",.403,0)
.403
"BLD",6501,"KRN",.5,0)
.5
"BLD",6501,"KRN",.84,0)
.84
"BLD",6501,"KRN",3.6,0)
3.6
"BLD",6501,"KRN",3.8,0)
3.8
"BLD",6501,"KRN",9.2,0)
9.2
"BLD",6501,"KRN",9.8,0)
9.8
"BLD",6501,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6501,"KRN",9.8,"NM",1,0)
EASMTRP1^^0^B33644139
"BLD",6501,"KRN",9.8,"NM",2,0)
EASMTRP3^^0^B21308964
"BLD",6501,"KRN",9.8,"NM","B","EASMTRP1",1)

"BLD",6501,"KRN",9.8,"NM","B","EASMTRP3",2)

"BLD",6501,"KRN",19,0)
19
"BLD",6501,"KRN",19.1,0)
19.1
"BLD",6501,"KRN",101,0)
101
"BLD",6501,"KRN",409.61,0)
409.61
"BLD",6501,"KRN",771,0)
771
"BLD",6501,"KRN",870,0)
870
"BLD",6501,"KRN",8989.51,0)
8989.51
"BLD",6501,"KRN",8989.52,0)
8989.52
"BLD",6501,"KRN",8994,0)
8994
"BLD",6501,"KRN","B",.4,.4)

"BLD",6501,"KRN","B",.401,.401)

"BLD",6501,"KRN","B",.402,.402)

"BLD",6501,"KRN","B",.403,.403)

"BLD",6501,"KRN","B",.5,.5)

"BLD",6501,"KRN","B",.84,.84)

"BLD",6501,"KRN","B",3.6,3.6)

"BLD",6501,"KRN","B",3.8,3.8)

"BLD",6501,"KRN","B",9.2,9.2)

"BLD",6501,"KRN","B",9.8,9.8)

"BLD",6501,"KRN","B",19,19)

"BLD",6501,"KRN","B",19.1,19.1)

"BLD",6501,"KRN","B",101,101)

"BLD",6501,"KRN","B",409.61,409.61)

"BLD",6501,"KRN","B",771,771)

"BLD",6501,"KRN","B",870,870)

"BLD",6501,"KRN","B",8989.51,8989.51)

"BLD",6501,"KRN","B",8989.52,8989.52)

"BLD",6501,"KRN","B",8994,8994)

"BLD",6501,"QUES",0)
^9.62^^
"BLD",6501,"REQB",0)
^9.611^2^2
"BLD",6501,"REQB",1,0)
EAS*1.0*46^1
"BLD",6501,"REQB",2,0)
EAS*1.0*64^1
"BLD",6501,"REQB","B","EAS*1.0*46",1)

"BLD",6501,"REQB","B","EAS*1.0*64",2)

"MBREQ")
0
"PKG",552,-1)
1^1
"PKG",552,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",552,20,0)
^9.402P^1^1
"PKG",552,20,1,0)
2^^EASXDR
"PKG",552,20,1,1)
 
"PKG",552,20,"B",2,1)

"PKG",552,22,0)
^9.49I^1^1
"PKG",552,22,1,0)
1.0^3010315^3010410^66481
"PKG",552,22,1,"PAH",1,0)
77^3070201
"PKG",552,22,1,"PAH",1,1,0)
^^4^4^3070201
"PKG",552,22,1,"PAH",1,1,1,0)
This patch contain routines that have been modified
"PKG",552,22,1,"PAH",1,1,2,0)
to call the Scheduling Encapsulation API SDAPI^SDAMA301
"PKG",552,22,1,"PAH",1,1,3,0)
instead of referencing the global for appointment data retrieval. 
"PKG",552,22,1,"PAH",1,1,4,0)
This patch also addresses the error handling when an error occurs.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","EASMTRP1")
0^1^B33644139
"RTN","EASMTRP1",1,0)
EASMTRP1 ;ALB/GAH - MEANS TEST DAILY EXPIRATION REPORT ; 10/10/2006
"RTN","EASMTRP1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3,13,46,77**;MAR 15,2001;Build 11
"RTN","EASMTRP1",3,0)
 ;
"RTN","EASMTRP1",4,0)
EN ; Interactive report generation, select date range
"RTN","EASMTRP1",5,0)
 N EDATE,ERROR,MTREC,PIEN,VARR,RCNT,ACNT,DGARRAY,SDCNT,I
"RTN","EASMTRP1",6,0)
 ;
"RTN","EASMTRP1",7,0)
 D HOME^%ZIS
"RTN","EASMTRP1",8,0)
 W @IOF
"RTN","EASMTRP1",9,0)
 ;
"RTN","EASMTRP1",10,0)
 ; Get beginning date of date range, default to TODAY
"RTN","EASMTRP1",11,0)
 W !,$CHAR(7),"Enter date range for anniversary date search"
"RTN","EASMTRP1",12,0)
 S DIR(0)="D^::EX",DIR("?")="^D HELP^%DTC",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","EASMTRP1",13,0)
 S DIR("A")="   Start Date"
"RTN","EASMTRP1",14,0)
 D ^DIR K DIR
"RTN","EASMTRP1",15,0)
 Q:$D(DIRUT)
"RTN","EASMTRP1",16,0)
 S EASBEG=Y
"RTN","EASMTRP1",17,0)
 ;
"RTN","EASMTRP1",18,0)
 ; Get ending date of date range, default to TODAY
"RTN","EASMTRP1",19,0)
 S DIR(0)="D^::EX",DIR("?")="^D HELP^%DTC",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","EASMTRP1",20,0)
 S DIR("A")="     End Date"
"RTN","EASMTRP1",21,0)
 D ^DIR K DIR
"RTN","EASMTRP1",22,0)
 Q:$D(DIRUT)
"RTN","EASMTRP1",23,0)
 S EASEND=Y
"RTN","EASMTRP1",24,0)
 ;
"RTN","EASMTRP1",25,0)
 S EAX=$$GET1^DIQ(713,1,5)
"RTN","EASMTRP1",26,0)
 S:EAX]"" %ZIS("B")=EAX
"RTN","EASMTRP1",27,0)
 S ZTSAVE("EASBEG")="",ZTSAVE("EASEND")=""
"RTN","EASMTRP1",28,0)
 D EN^XUTMDEVQ("BLD^EASMTRP1","EAS MT EXPIRATION RPT",.ZTSAVE,.%ZIS)
"RTN","EASMTRP1",29,0)
 Q
"RTN","EASMTRP1",30,0)
 ;
"RTN","EASMTRP1",31,0)
QUE ; Queued report generation
"RTN","EASMTRP1",32,0)
 N ZTSAVE,ZTRTN,ZTDESC,EAX,%ZIS
"RTN","EASMTRP1",33,0)
 ;
"RTN","EASMTRP1",34,0)
 S (EASBEG,EASEND)=$$FMADD^XLFDT($$DT^XLFDT,-1)
"RTN","EASMTRP1",35,0)
 S ZTSAVE("EASBEG")="",ZTSAVE("EASEND")=""
"RTN","EASMTRP1",36,0)
 S IOP=""
"RTN","EASMTRP1",37,0)
 D EN^XUTMDEVQ("BLD^EASMTRP1","EAS MT EXPIRATION RPT",.ZTSAVE)
"RTN","EASMTRP1",38,0)
 Q
"RTN","EASMTRP1",39,0)
 ;
"RTN","EASMTRP1",40,0)
BLD ; Build the list of MT expirations to TMP global
"RTN","EASMTRP1",41,0)
 N EASIEN,EASANV,EASLST,EASENDT,DFN,EASTMP,EASDT,EASENDT
"RTN","EASMTRP1",42,0)
 ;
"RTN","EASMTRP1",43,0)
 K ^TMP("EASEXP",$J)
"RTN","EASMTRP1",44,0)
 ;
"RTN","EASMTRP1",45,0)
 S EASENDT=$$FMADD^XLFDT(EASEND,-365)
"RTN","EASMTRP1",46,0)
 S EASANV=$$FMADD^XLFDT(EASBEG,-365,"",-1) ; Subtract 1 minute to capture the 1st day
"RTN","EASMTRP1",47,0)
 F  S EASANV=$O(^DGMT(408.31,"B",EASANV)) Q:'EASANV!(EASANV>EASENDT)  D
"RTN","EASMTRP1",48,0)
 . S EASIEN=0
"RTN","EASMTRP1",49,0)
 . F  S EASIEN=$O(^DGMT(408.31,"B",EASANV,EASIEN)) Q:'EASIEN  D
"RTN","EASMTRP1",50,0)
 . . S DFN=$$GET1^DIQ(408.31,EASIEN,.02,"I") Q:+DFN=0
"RTN","EASMTRP1",51,0)
 . . S EASLST=$$LST^DGMTU(DFN)
"RTN","EASMTRP1",52,0)
 . . Q:+EASLST'=EASIEN  ; Quit it this MT is not the last MT on file
"RTN","EASMTRP1",53,0)
 . . Q:$$DECEASED^EASMTUTL("",DFN)  ; Quit if patient is deceased
"RTN","EASMTRP1",54,0)
 . . Q:"N,P"[$P(EASLST,U,4)  ; Quit if MT No longer Required or Pending Adjudication
"RTN","EASMTRP1",55,0)
 . . ; Quit if Cat C, agrees to deductible and MT later the 10-5-99
"RTN","EASMTRP1",56,0)
 . . I $P(EASLST,U,4)="C",$$GET1^DIQ(408.31,+EASLST,.11,"I"),$P(EASLST,U,2)>2991005 Q
"RTN","EASMTRP1",57,0)
 . . ;;Q:$$FUTMT^EASMTUTL("","",DFN)  ; Quit if future MT on file
"RTN","EASMTRP1",58,0)
 . . S ^TMP("EASEXP",$J,EASANV,EASIEN)=DFN_U_EASLST
"RTN","EASMTRP1",59,0)
 ;
"RTN","EASMTRP1",60,0)
 S EASTMP="^TMP(""EASEXP"","_$J_")"
"RTN","EASMTRP1",61,0)
 S EASDT("BEG")=EASBEG,EASDT("END")=EASEND
"RTN","EASMTRP1",62,0)
 D BLDSD              ; Call Scheduling API
"RTN","EASMTRP1",63,0)
 D PRT(EASTMP,.EASDT) ; Call print report
"RTN","EASMTRP1",64,0)
 K DGARRAY,SDCNT,VARR,I,^TMP($J,"SDAMA")
"RTN","EASMTRP1",65,0)
 Q
"RTN","EASMTRP1",66,0)
 ;
"RTN","EASMTRP1",67,0)
BLDSD ;
"RTN","EASMTRP1",68,0)
 N EDATE,ERROR,MTREC,PIEN,VARR,RCNT,ACNT,DGARRAY,SDCNT,I
"RTN","EASMTRP1",69,0)
 S ACNT=1,RCNT=0
"RTN","EASMTRP1",70,0)
 S EDATE=0 F  S EDATE=$O(^TMP("EASEXP",$J,EDATE)) Q:'EDATE  D
"RTN","EASMTRP1",71,0)
 .S MTREC=0 F  S MTREC=$O(^TMP("EASEXP",$J,EDATE,MTREC)) Q:'MTREC  D
"RTN","EASMTRP1",72,0)
 ..S PIEN=+^TMP("EASEXP",$J,EDATE,MTREC)
"RTN","EASMTRP1",73,0)
 ..Q:'$D(^DPT(PIEN,0))
"RTN","EASMTRP1",74,0)
 ..S RCNT=RCNT+1,VARR(ACNT)=$G(VARR(ACNT))_PIEN_";"
"RTN","EASMTRP1",75,0)
 ..; Group DFNs by no more than twenty records
"RTN","EASMTRP1",76,0)
 ..I RCNT>19 S ACNT=ACNT+1,RCNT=0
"RTN","EASMTRP1",77,0)
 ;
"RTN","EASMTRP1",78,0)
 ; Call SD API by array of Patient DFNs
"RTN","EASMTRP1",79,0)
 S ERROR=""
"RTN","EASMTRP1",80,0)
 K DGARRAY
"RTN","EASMTRP1",81,0)
 S DGARRAY(1)=DT,DGARRAY("SORT")="P",DGARRAY("FLDS")="1;2"
"RTN","EASMTRP1",82,0)
 F I=1:1 Q:'$D(VARR(I))!(ERROR'="")  D
"RTN","EASMTRP1",83,0)
 .S DGARRAY(4)=VARR(I)
"RTN","EASMTRP1",84,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","EASMTRP1",85,0)
 . I SDCNT>0 M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","EASMTRP1",86,0)
 . I SDCNT<0 D
"RTN","EASMTRP1",87,0)
 . . S ERROR=$O(^TMP($J,"SDAMA301",""))
"RTN","EASMTRP1",88,0)
 . . S ^TMP($J,"SDAMA","ERROR")=^TMP($J,"SDAMA301",ERROR)
"RTN","EASMTRP1",89,0)
 .K ^TMP($J,"SDAMA301")
"RTN","EASMTRP1",90,0)
 Q
"RTN","EASMTRP1",91,0)
 ;
"RTN","EASMTRP1",92,0)
PRT(EASTMP,EASDT) ;
"RTN","EASMTRP1",93,0)
 N EASANV,EASIEN,PAGE,DFN,EASP,EASABRT
"RTN","EASMTRP1",94,0)
 ;
"RTN","EASMTRP1",95,0)
 S EASANV=0,PAGE=0
"RTN","EASMTRP1",96,0)
 D HDR(.EASDT)
"RTN","EASMTRP1",97,0)
 ;
"RTN","EASMTRP1",98,0)
 I '$D(@EASTMP) D  Q
"RTN","EASMTRP1",99,0)
 . W !!?3,">> No Means Test expirations for the selected date range."
"RTN","EASMTRP1",100,0)
 ;
"RTN","EASMTRP1",101,0)
 F  S EASANV=$O(@EASTMP@(EASANV)) Q:'EASANV  D  Q:$G(EASABRT)
"RTN","EASMTRP1",102,0)
 . S EASIEN=0
"RTN","EASMTRP1",103,0)
 . F  S EASIEN=$O(@EASTMP@(EASANV,EASIEN)) Q:'EASIEN  D  Q:$G(EASABRT)
"RTN","EASMTRP1",104,0)
 . . S EASDAT=@EASTMP@(EASANV,EASIEN)
"RTN","EASMTRP1",105,0)
 . . D PRTLINE(EASANV,EASDAT) ; Get data and format print line
"RTN","EASMTRP1",106,0)
 . . I $E(IOST,1,2)="C-",($Y+5)>IOSL D
"RTN","EASMTRP1",107,0)
 . . . S DIR(0)="E"
"RTN","EASMTRP1",108,0)
 . . . D ^DIR K DIR
"RTN","EASMTRP1",109,0)
 . . . I 'Y S EASABRT=1 Q
"RTN","EASMTRP1",110,0)
 . . . D HDR(.EASDT)
"RTN","EASMTRP1",111,0)
 Q
"RTN","EASMTRP1",112,0)
 ;
"RTN","EASMTRP1",113,0)
PRTLINE(EASANV,EASDAT) ; Format and print report line
"RTN","EASMTRP1",114,0)
 N DFN,EASNAME,EASTAT,EASAPT,EASF,EACL
"RTN","EASMTRP1",115,0)
 ;
"RTN","EASMTRP1",116,0)
 S DFN=$P(EASDAT,U)
"RTN","EASMTRP1",117,0)
 S EASNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","EASMTRP1",118,0)
 W !,$E(EASNAME,1,20)
"RTN","EASMTRP1",119,0)
 ;
"RTN","EASMTRP1",120,0)
 D PID^VADPT6
"RTN","EASMTRP1",121,0)
 W ?22,VA("PID")
"RTN","EASMTRP1",122,0)
 ;
"RTN","EASMTRP1",123,0)
 W ?35,$TR($$FMTE^XLFDT($$FMADD^XLFDT(EASANV,365),"2F")," ","0")
"RTN","EASMTRP1",124,0)
 S EASTAT=$P(EASDAT,U,5)
"RTN","EASMTRP1",125,0)
 W ?46,$S(EASTAT="C":"MT CPR",EASTAT="A":"MT CPE",EASTAT="R":"REQD",EASTAT="N":"NA",EASTAT="P":"PEND",EASTAT="G":"GMT CPR",1:"")
"RTN","EASMTRP1",126,0)
 ;
"RTN","EASMTRP1",127,0)
 I $D(^TMP($J,"SDAMA","ERROR")) Q
"RTN","EASMTRP1",128,0)
 D GETAPT(DFN,.EASAPT)
"RTN","EASMTRP1",129,0)
 I $D(EASAPT) D
"RTN","EASMTRP1",130,0)
 . S EACL=0 F  S EACL=$O(EASAPT(EACL)) Q:'EACL  D
"RTN","EASMTRP1",131,0)
 . . W:$G(EASF) !
"RTN","EASMTRP1",132,0)
 . . W ?55,$E($$GET1^DIQ(44,EACL,.01),1,15)," ",$$FMTE^XLFDT(EASAPT(EACL),"2D")
"RTN","EASMTRP1",133,0)
 . . S EASF=1
"RTN","EASMTRP1",134,0)
 ;
"RTN","EASMTRP1",135,0)
 D KVA^VADPT
"RTN","EASMTRP1",136,0)
 Q
"RTN","EASMTRP1",137,0)
 ;
"RTN","EASMTRP1",138,0)
GETAPT(DFN,EASAPT) ; Get future appointments for patient
"RTN","EASMTRP1",139,0)
 N EASAP,EASND,EASCL
"RTN","EASMTRP1",140,0)
 Q:'$D(^TMP($J,"SDAMA",DFN))
"RTN","EASMTRP1",141,0)
 S EASAP=0 F  S EASAP=$O(^TMP($J,"SDAMA",DFN,EASAP)) Q:'EASAP  D
"RTN","EASMTRP1",142,0)
 .S EASND=^TMP($J,"SDAMA",DFN,EASAP)
"RTN","EASMTRP1",143,0)
 .S EASCL=+$P(EASND,U,2),EASAPT(EASCL)=+EASND
"RTN","EASMTRP1",144,0)
 Q
"RTN","EASMTRP1",145,0)
 ;
"RTN","EASMTRP1",146,0)
HDR(EASDT) ; Print report header
"RTN","EASMTRP1",147,0)
 N ERROR,LINE,SPACE,TXT,HDR,TAB
"RTN","EASMTRP1",148,0)
 ;
"RTN","EASMTRP1",149,0)
 I $E(IOST,1,2)="C-" W @IOF
"RTN","EASMTRP1",150,0)
 S TXT="Means Test Expiration Report"
"RTN","EASMTRP1",151,0)
 S SPACE=(IOM-$L(TXT))/2
"RTN","EASMTRP1",152,0)
 S $P(HDR," ",SPACE)="",HDR=HDR_TXT
"RTN","EASMTRP1",153,0)
 W !,HDR K HDR
"RTN","EASMTRP1",154,0)
 ;
"RTN","EASMTRP1",155,0)
 S TXT="Anniversary Date(s): "_$$FMTE^XLFDT(EASDT("BEG"),"5D")_" - "_$$FMTE^XLFDT(EASDT("END"),"5D")
"RTN","EASMTRP1",156,0)
 S SPACE=(IOM-$L(TXT))/2
"RTN","EASMTRP1",157,0)
 S $P(HDR," ",SPACE)="",HDR=HDR_TXT
"RTN","EASMTRP1",158,0)
 W !,HDR K HDR
"RTN","EASMTRP1",159,0)
 ;
"RTN","EASMTRP1",160,0)
 W !!,"Printed: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","EASMTRP1",161,0)
 S PAGE=$G(PAGE)+1
"RTN","EASMTRP1",162,0)
 S TAB=IOM-8
"RTN","EASMTRP1",163,0)
 W ?TAB,"Page "_PAGE
"RTN","EASMTRP1",164,0)
 S ERROR=$G(^TMP($J,"SDAMA","ERROR"))
"RTN","EASMTRP1",165,0)
 W:ERROR'="" !,"Appointment Error: ",ERROR
"RTN","EASMTRP1",166,0)
 ;
"RTN","EASMTRP1",167,0)
 W !,"Patient",?25,"SSN",?35,"MT Expired",?46,"Status",?57,"Future Appts"
"RTN","EASMTRP1",168,0)
 S $P(LINE,"=",IOM)="" W !,LINE
"RTN","EASMTRP1",169,0)
 Q
"RTN","EASMTRP3")
0^2^B21308964
"RTN","EASMTRP3",1,0)
EASMTRP3 ; ALB/GAH - MEANS TEST ANV DATES BY APPT DATE ; 10/10/2006
"RTN","EASMTRP3",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3,15,46,64,77**;MAR 15,2001;Build 11
"RTN","EASMTRP3",3,0)
 ;
"RTN","EASMTRP3",4,0)
QUE ;  Que off the appointment list search by MT anniversary date
"RTN","EASMTRP3",5,0)
 N EASDT,ZTSAVE
"RTN","EASMTRP3",6,0)
 ;
"RTN","EASMTRP3",7,0)
 S DIR(0)="DAO^DT::EX"
"RTN","EASMTRP3",8,0)
 S DIR("B")="TODAY",DIR("A")="Run report for date: ",DIR("?")="^D HELP^%DTC"
"RTN","EASMTRP3",9,0)
 D ^DIR K DIR
"RTN","EASMTRP3",10,0)
 Q:$D(DIRUT)
"RTN","EASMTRP3",11,0)
 S EASDT=Y
"RTN","EASMTRP3",12,0)
 ;
"RTN","EASMTRP3",13,0)
 S ZTSAVE("EASDT")=""
"RTN","EASMTRP3",14,0)
 D EN^XUTMDEVQ("EN^EASMTRP3","EAS MT DUE BY APPOINTMENT RPT",.ZTSAVE)
"RTN","EASMTRP3",15,0)
 Q
"RTN","EASMTRP3",16,0)
 ;
"RTN","EASMTRP3",17,0)
EN ;  Main entry point for appointment list by MT anniversary date
"RTN","EASMTRP3",18,0)
 N EASSC,ERROR,PAGE,ACNT,RCNT,DGARRAY,I,CLARR,SDCNT,DGADDF,DGMSGF,DGREQF
"RTN","EASMTRP3",19,0)
 K ^TMP("EASAP",$J)
"RTN","EASMTRP3",20,0)
 S PAGE=1,^TMP("EASAP",$J,"APDT")=EASDT
"RTN","EASMTRP3",21,0)
 ;
"RTN","EASMTRP3",22,0)
 ; Build Array of Valid Clinic IENs
"RTN","EASMTRP3",23,0)
 S ACNT=1,(RCNT,EASSC)=0 F  S EASSC=$O(^SC(EASSC)) Q:'EASSC  D
"RTN","EASMTRP3",24,0)
 .Q:'$D(^SC(EASSC,0))
"RTN","EASMTRP3",25,0)
 .Q:$P(^SC(EASSC,0),U,3)'="C"
"RTN","EASMTRP3",26,0)
 .S RCNT=RCNT+1,CLARR(ACNT)=$G(CLARR(ACNT))_EASSC_";"
"RTN","EASMTRP3",27,0)
 .; Group Clinic IENs by no more than thirty
"RTN","EASMTRP3",28,0)
 .I RCNT>29 S ACNT=ACNT+1,RCNT=0
"RTN","EASMTRP3",29,0)
 ;
"RTN","EASMTRP3",30,0)
 ; Call SD API by array of Clinic IENs
"RTN","EASMTRP3",31,0)
 S DGARRAY(1)=EASDT_";"_EASDT,DGARRAY("FLDS")="1;3"
"RTN","EASMTRP3",32,0)
 F I=1:1 Q:'$D(CLARR(I))  D
"RTN","EASMTRP3",33,0)
 .S DGARRAY(2)=CLARR(I)
"RTN","EASMTRP3",34,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","EASMTRP3",35,0)
 . I SDCNT>0 M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","EASMTRP3",36,0)
 . I SDCNT<0 D 
"RTN","EASMTRP3",37,0)
 . . S ERROR=$O(^TMP($J,"SDAMA301",""))
"RTN","EASMTRP3",38,0)
 . . S ^TMP($J,"SDAMA",CLARR(I))=^TMP($J,"SDAMA301",ERROR)
"RTN","EASMTRP3",39,0)
 .K ^TMP($J,"SDAMA301")
"RTN","EASMTRP3",40,0)
 D LOOP,PRINT
"RTN","EASMTRP3",41,0)
 K DGARRAY,CLARR,I,^TMP($J,"SDAMA")
"RTN","EASMTRP3",42,0)
 Q
"RTN","EASMTRP3",43,0)
 ;
"RTN","EASMTRP3",44,0)
LOOP ; Loop through a clinic's appointment list
"RTN","EASMTRP3",45,0)
 N DFN,EASANV,EASAPT
"RTN","EASMTRP3",46,0)
 ;
"RTN","EASMTRP3",47,0)
 S EASSC=0 F  S EASSC=$O(^TMP($J,"SDAMA",EASSC)) Q:'EASSC  D
"RTN","EASMTRP3",48,0)
 .; Check for retrieval error
"RTN","EASMTRP3",49,0)
 .I $D(^TMP($J,"SDAMA",EASSC))=1 S ^TMP("EASAP",$J,"CLN",EASSC)=^TMP($J,"SDAMA",EASSC) Q
"RTN","EASMTRP3",50,0)
 .S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA",EASSC,DFN)) Q:'DFN  D
"RTN","EASMTRP3",51,0)
 ..S EASAPT=0 F  S EASAPT=$O(^TMP($J,"SDAMA",EASSC,DFN,EASAPT)) Q:'EASAPT  D
"RTN","EASMTRP3",52,0)
 ...; Quit if appointment has been cancelled
"RTN","EASMTRP3",53,0)
 ...Q:$P($P(^TMP($J,"SDAMA",EASSC,DFN,EASAPT),U,3),";")["C"
"RTN","EASMTRP3",54,0)
 ...S LASTMT=$$LST^DGMTU(DFN)  ; Get patient's last Means test
"RTN","EASMTRP3",55,0)
 ...; Quit if means test is no longer required or pending
"RTN","EASMTRP3",56,0)
 ...Q:"^N^P^"[(U_$P(LASTMT,U,4)_U)
"RTN","EASMTRP3",57,0)
 ...; Quit if means test is not required by DGMTR (EAS*1.0*64)
"RTN","EASMTRP3",58,0)
 ...I $P(LASTMT,U,4)'="R" S (DGADDF,DGMSGF)=1 D EN^DGMTR I '$G(DGREQF) Q
"RTN","EASMTRP3",59,0)
 ...; Quit if Cat C, agreed to pay deduct. and MT was after 10/5/1999
"RTN","EASMTRP3",60,0)
 ...I $P(LASTMT,U,4)="C",$$GET1^DIQ(408.31,+LASTMT,.11,"I"),$P(LASTMT,U,2)>2991005 Q
"RTN","EASMTRP3",61,0)
 ...; Quit if a Future Dated MT is on file
"RTN","EASMTRP3",62,0)
 ...Q:$$FUT^DGMTU(DFN)
"RTN","EASMTRP3",63,0)
 ...; If appt dt is later than anniversary dt, add veteran to list.
"RTN","EASMTRP3",64,0)
 ...S EASANV=$P(LASTMT,U,2)
"RTN","EASMTRP3",65,0)
 ...S:$P(LASTMT,U,4)'="R" EASANV=$$FMADD^XLFDT(EASANV,365)
"RTN","EASMTRP3",66,0)
 ...I EASDT'<EASANV S ^TMP("EASAP",$J,"CLN",EASSC,DFN,EASAPT)=""
"RTN","EASMTRP3",67,0)
 Q
"RTN","EASMTRP3",68,0)
 ;
"RTN","EASMTRP3",69,0)
PRINT ;  Print Report
"RTN","EASMTRP3",70,0)
 N EACLN,ERROR,DFN,LASTMT,VA,ANVDT,PAGE,EASABRT,APDT,XX
"RTN","EASMTRP3",71,0)
 ;
"RTN","EASMTRP3",72,0)
 I '$D(^TMP("EASAP",$J,"CLN")) D  Q
"RTN","EASMTRP3",73,0)
 . S PAGE=1 S XX=$$HDR("")
"RTN","EASMTRP3",74,0)
 . W !!?3,"No MT Anniversary dates found for this appointment date."
"RTN","EASMTRP3",75,0)
 ;
"RTN","EASMTRP3",76,0)
 W !
"RTN","EASMTRP3",77,0)
 S (EACLN,ERROR)=0
"RTN","EASMTRP3",78,0)
 F  S EACLN=$O(^TMP("EASAP",$J,"CLN",EACLN)) Q:'EACLN  D  Q:$G(EASABRT)!ERROR
"RTN","EASMTRP3",79,0)
 . S PAGE=1 S EASABRT=$$HDR(EACLN) Q:$G(EASABRT)
"RTN","EASMTRP3",80,0)
 . I $D(^TMP("EASAP",$J,"CLN",EACLN))=1 S ERROR=1 W !,^TMP("EASAP",$J,"CLN",EACLN) Q
"RTN","EASMTRP3",81,0)
 . S DFN=0
"RTN","EASMTRP3",82,0)
 . F  S DFN=$O(^TMP("EASAP",$J,"CLN",EACLN,DFN)) Q:'DFN  D  Q:$G(EASABRT)
"RTN","EASMTRP3",83,0)
 . . S LASTMT=$$LST^DGMTU(DFN),ANVDT=$P(LASTMT,U,2)
"RTN","EASMTRP3",84,0)
 . . I $P(LASTMT,U,4)'="R",ANVDT>0 S ANVDT=$$FMADD^XLFDT(ANVDT,365)
"RTN","EASMTRP3",85,0)
 . . W !?3,$$GET1^DIQ(2,DFN,.01)
"RTN","EASMTRP3",86,0)
 . . D PID^VADPT6
"RTN","EASMTRP3",87,0)
 . . W ?30,VA("BID") K VA
"RTN","EASMTRP3",88,0)
 . . W ?38,$S(ANVDT>0:$$FMTE^XLFDT(ANVDT),1:"")
"RTN","EASMTRP3",89,0)
 . . S APDT=0
"RTN","EASMTRP3",90,0)
 . . F  S APDT=$O(^TMP("EASAP",$J,"CLN",EACLN,DFN,APDT)) Q:'APDT  D  Q:$G(EASABRT)
"RTN","EASMTRP3",91,0)
 . . . W ?55,$$FMTE^XLFDT(APDT,"2P"),!
"RTN","EASMTRP3",92,0)
 . . . I ($Y+5)>IOSL S EASABRT=$$HDR(EACLN)
"RTN","EASMTRP3",93,0)
 ;
"RTN","EASMTRP3",94,0)
 Q
"RTN","EASMTRP3",95,0)
 ;
"RTN","EASMTRP3",96,0)
HDR(EASCLN) ; Report Header
"RTN","EASMTRP3",97,0)
 N TAB,LINE,CLINIC,RSLT
"RTN","EASMTRP3",98,0)
 ;
"RTN","EASMTRP3",99,0)
 S RSLT=0
"RTN","EASMTRP3",100,0)
 I $E(IOST,1,2)="C-" D  I RSLT Q RSLT
"RTN","EASMTRP3",101,0)
 . S DIR(0)="E"
"RTN","EASMTRP3",102,0)
 . D ^DIR K DIR
"RTN","EASMTRP3",103,0)
 . I 'Y S RSLT=1
"RTN","EASMTRP3",104,0)
 ;
"RTN","EASMTRP3",105,0)
 W @IOF
"RTN","EASMTRP3",106,0)
 S CLINIC=$S(EASCLN>0:$$GET1^DIQ(44,EASCLN,.01),1:"")
"RTN","EASMTRP3",107,0)
 W "Means Test Expiration Report by Appt Date "_$S(CLINIC]"":"for "_CLINIC,1:"")
"RTN","EASMTRP3",108,0)
 W !!,"For Appointment Date: ",$$FMTE^XLFDT(^TMP("EASAP",$J,"APDT"))
"RTN","EASMTRP3",109,0)
 W !,"Print Date: ",$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","EASMTRP3",110,0)
 S TAB=IOM-10
"RTN","EASMTRP3",111,0)
 W ?TAB,"Page "_PAGE
"RTN","EASMTRP3",112,0)
 S PAGE=PAGE+1
"RTN","EASMTRP3",113,0)
 ;
"RTN","EASMTRP3",114,0)
 W !!?30,"Last",?38,"Anniversary",?55,"Appointment"
"RTN","EASMTRP3",115,0)
 W !?3,"Name",?30,"Four",?38,"Date",?55,"Time"
"RTN","EASMTRP3",116,0)
 S $P(LINE,"=",IOM)="" W !,LINE,!
"RTN","EASMTRP3",117,0)
 ;
"RTN","EASMTRP3",118,0)
 Q 0
"RTN","EASMTRP3",119,0)
 ;
"RTN","EASMTRP3",120,0)
PAUSE ;
"RTN","EASMTRP3",121,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
DGBT*1.0*13
"BLD",6502,0)
DGBT*1.0*13^BENEFICIARY TRAVEL^0^3070201^y
"BLD",6502,1,0)
^^4^4^3061201^
"BLD",6502,1,1,0)
This patch contain routines that have been modified
"BLD",6502,1,2,0)
to call the Scheduling Encapsulation API SDAPI^SDAMA301
"BLD",6502,1,3,0)
instead of referencing the global for appointment data retrieval. 
"BLD",6502,1,4,0)
This patch also addresses the error handling when an error occurs.
"BLD",6502,4,0)
^9.64PA^^
"BLD",6502,6.3)
11
"BLD",6502,"KRN",0)
^9.67PA^8989.52^19
"BLD",6502,"KRN",.4,0)
.4
"BLD",6502,"KRN",.401,0)
.401
"BLD",6502,"KRN",.402,0)
.402
"BLD",6502,"KRN",.403,0)
.403
"BLD",6502,"KRN",.5,0)
.5
"BLD",6502,"KRN",.84,0)
.84
"BLD",6502,"KRN",3.6,0)
3.6
"BLD",6502,"KRN",3.8,0)
3.8
"BLD",6502,"KRN",9.2,0)
9.2
"BLD",6502,"KRN",9.8,0)
9.8
"BLD",6502,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6502,"KRN",9.8,"NM",1,0)
DGBT2^^0^B17424501
"BLD",6502,"KRN",9.8,"NM",2,0)
DGBTE1^^0^B21074208
"BLD",6502,"KRN",9.8,"NM","B","DGBT2",1)

"BLD",6502,"KRN",9.8,"NM","B","DGBTE1",2)

"BLD",6502,"KRN",19,0)
19
"BLD",6502,"KRN",19.1,0)
19.1
"BLD",6502,"KRN",101,0)
101
"BLD",6502,"KRN",409.61,0)
409.61
"BLD",6502,"KRN",771,0)
771
"BLD",6502,"KRN",870,0)
870
"BLD",6502,"KRN",8989.51,0)
8989.51
"BLD",6502,"KRN",8989.52,0)
8989.52
"BLD",6502,"KRN",8994,0)
8994
"BLD",6502,"KRN","B",.4,.4)

"BLD",6502,"KRN","B",.401,.401)

"BLD",6502,"KRN","B",.402,.402)

"BLD",6502,"KRN","B",.403,.403)

"BLD",6502,"KRN","B",.5,.5)

"BLD",6502,"KRN","B",.84,.84)

"BLD",6502,"KRN","B",3.6,3.6)

"BLD",6502,"KRN","B",3.8,3.8)

"BLD",6502,"KRN","B",9.2,9.2)

"BLD",6502,"KRN","B",9.8,9.8)

"BLD",6502,"KRN","B",19,19)

"BLD",6502,"KRN","B",19.1,19.1)

"BLD",6502,"KRN","B",101,101)

"BLD",6502,"KRN","B",409.61,409.61)

"BLD",6502,"KRN","B",771,771)

"BLD",6502,"KRN","B",870,870)

"BLD",6502,"KRN","B",8989.51,8989.51)

"BLD",6502,"KRN","B",8989.52,8989.52)

"BLD",6502,"KRN","B",8994,8994)

"BLD",6502,"QUES",0)
^9.62^^
"BLD",6502,"REQB",0)
^9.611^2^2
"BLD",6502,"REQB",1,0)
DGBT*1.0*8^1
"BLD",6502,"REQB",2,0)
DGBT*1.0*12^1
"BLD",6502,"REQB","B","DGBT*1.0*12",2)

"BLD",6502,"REQB","B","DGBT*1.0*8",1)

"MBREQ")
0
"PKG",154,-1)
1^1
"PKG",154,0)
BENEFICIARY TRAVEL^DGBT^Beneficiary Travel
"PKG",154,22,0)
^9.49I^1^1
"PKG",154,22,1,0)
1.0^3020319^3050211^66481
"PKG",154,22,1,"PAH",1,0)
13^3070201
"PKG",154,22,1,"PAH",1,1,0)
^^4^4^3070201
"PKG",154,22,1,"PAH",1,1,1,0)
This patch contain routines that have been modified
"PKG",154,22,1,"PAH",1,1,2,0)
to call the Scheduling Encapsulation API SDAPI^SDAMA301
"PKG",154,22,1,"PAH",1,1,3,0)
instead of referencing the global for appointment data retrieval. 
"PKG",154,22,1,"PAH",1,1,4,0)
This patch also addresses the error handling when an error occurs.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGBT2")
0^1^B17424501
"RTN","DGBT2",1,0)
DGBT2 ;ALB/GAH - BENEFICIARY TRAVEL SCREEN 2 ; 10/11/2006
"RTN","DGBT2",2,0)
 ;;1.0;Beneficiary Travel;**7,8,13**;September 25, 2001;Build 11
"RTN","DGBT2",3,0)
 Q
"RTN","DGBT2",4,0)
SCREEN ;
"RTN","DGBT2",5,0)
 W @IOF
"RTN","DGBT2",6,0)
 W !?18,"Beneficiary Travel Claim Information <Screen 2>"
"RTN","DGBT2",7,0)
 D PID^VADPT6 W !!?8,"Name: ",VADM(1),?42,"PT ID: ",VA("PID"),?64,"DOB: ",$P(VADM(3),"^",2)
"RTN","DGBT2",8,0)
 D PAST,ADM
"RTN","DGBT2",9,0)
 W !!?2,"Visits For: " W $P(DGBTDTE,"@")
"RTN","DGBT2",10,0)
 S DGBTAS="" S:DGBTAD DGBTAS=$S($P(DGBTDD,".")=$P(DGBTDTI,"."):"D",$P(DGBTAD,".")=$P(DGBTDTI,"."):"A",$P(DGBTAD,".")&'$P(DGBTDD,"."):"I",$P(DGBTAD,".")&($P(DGBTDTI,".")'>$P(DGBTDD,".")):"II",1:"")
"RTN","DGBT2",11,0)
 I DGBTAS]"" W $S(DGBTAS="A":" * * * * ADMITTED ON THIS DATE * * * *",DGBTAS="D":" * * * * DISCHARGED ON THIS DATE * * * *",DGBTAS="I":" * * * * CURRENTLY AN INPATIENT * * * *",DGBTAS="II":" * * * INPATIENT STATUS * * *",1:"")
"RTN","DGBT2",12,0)
 I DGBTAS]"" W !!," Admitted On: " S Y=+DGBTAD X ^DD("DD") W Y K Y W:$D(^DPT(DFN,.1)) ?40,"Ward Location: ",^DPT(DFN,.1) I DGBTDD W ?40,"Discharge Date: " S Y=+DGBTDD X ^DD("DD") W Y K Y
"RTN","DGBT2",13,0)
 W !!,"Appointments: " W:'$D(DGBTCL) "NONE RECORDED FOR THIS DATE"
"RTN","DGBT2",14,0)
 D
"RTN","DGBT2",15,0)
 . I $D(DGBTCL("ERROR")) W ?14,DGBTCL("ERROR") Q
"RTN","DGBT2",16,0)
 . I $D(DGBTCL) F I=0:0 S I=$O(DGBTCL(I)) Q:'I  D APPT
"RTN","DGBT2",17,0)
 N DGVAL,DGCBK,DGDT1
"RTN","DGBT2",18,0)
 ;
"RTN","DGBT2",19,0)
 S DGVAL("DFN")=DFN,DGVAL("BDT")=DGBTDTI\1,DGVAL("EDT")=DGVAL("BDT")_".9999"
"RTN","DGBT2",20,0)
 S DGCBK="I $P(SDOE0,U,8)=2 D WRTVIS^DGBT2(SDOE0) S DGDT1=+SDOE0",DGDT1=""
"RTN","DGBT2",21,0)
 D SCAN^DGSDU("PATIENT/DATE",.DGVAL,"",DGCBK,1,.DGQUERY)
"RTN","DGBT2",22,0)
EXIT ;
"RTN","DGBT2",23,0)
 K VAIP
"RTN","DGBT2",24,0)
 Q
"RTN","DGBT2",25,0)
 ;
"RTN","DGBT2",26,0)
WRTVIS(DGBTCSN) ;
"RTN","DGBT2",27,0)
 S:$S('DGDT1:0,1:+SDOE0'=DGDT1) SDSTOP=1
"RTN","DGBT2",28,0)
 I '$G(DGDT1) W !!?45,"Elig for Visit:",?65,"Appt Type:",!?45,"______________",?65,"_________",!!,"Clinic Stop: "
"RTN","DGBT2",29,0)
 I 'SDSTOP D
"RTN","DGBT2",30,0)
 .N DGBTCS
"RTN","DGBT2",31,0)
 .S:$P(DGBTCSN,U,3) DGBTCS=$P(DGBTCSN,U,3)
"RTN","DGBT2",32,0)
 .W ?14,$E($S($D(^DIC(40.7,+$P($G(DGBTCSN),U,3),0)):$P(^(0),U),1:"Unknown"),1,20),?45,$S($D(^DIC(8,+$P(DGBTCSN,U,13),0)):$E($P(^(0),U),1,18),1:"")
"RTN","DGBT2",33,0)
 .D STOP
"RTN","DGBT2",34,0)
 Q
"RTN","DGBT2",35,0)
 ;
"RTN","DGBT2",36,0)
ADM S DGBTAN=$S($D(^DPT(DFN,.105)):^(.105),1:"")
"RTN","DGBT2",37,0)
 I 'DGBTAN D NOW^%DTC S DGBTDI=+$O(^DGPM("ATID3",DFN,9999999.9999999-%)),DGBTDN=+$O(^(DGBTDI,0)),DGBTAN=$S($D(^DGPM(DGBTDN,0)):$P(^(0),"^",14),1:"")
"RTN","DGBT2",38,0)
 S DGBTAD=$S($D(^DGPM(+DGBTAN,0)):^(0),1:""),DGBTDD=$S($D(^DGPM(+$P(DGBTAD,"^",17),0)):^(0),1:"")
"RTN","DGBT2",39,0)
 K %,DGBTDI,DGBTDN Q
"RTN","DGBT2",40,0)
STOP I $D(DGBTCS) W ?65,$E($S($D(^SD(409.1,+$P(DGBTCSN,"^",10),0)):$P(^(0),"^"),1:"REGULAR"),1,15),!
"RTN","DGBT2",41,0)
 Q
"RTN","DGBT2",42,0)
APPT ;
"RTN","DGBT2",43,0)
 I $D(DGBTCL) D
"RTN","DGBT2",44,0)
 .W ?14,$P(DGBTCL(I),U)," ("_$$FMTE^DILIBF(I,"5U")_")"
"RTN","DGBT2",45,0)
 .S X=$P(DGBTCL(I),U,2)
"RTN","DGBT2",46,0)
 .W ?50,$S(X["NT":"NO ACTION TAKEN",X["N":"NO-SHOW",X["C":"CANCELLED",1:"")
"RTN","DGBT2",47,0)
 .W ?66,$P("C&P^10-10^SCHED.^UNSCHED.",U,+$P(DGBTCL(I),U,3))
"RTN","DGBT2",48,0)
 .W ?73,$S($D(^SD(409.1,+$P(DGBTCL(I),U,4),0)):$P(^SD(409.1,+$P(DGBTCL(I),U,4),0),U),1:"REGULAR"),!
"RTN","DGBT2",49,0)
 Q
"RTN","DGBT2",50,0)
PAST W:'$O(^DGBT(392,"AI",DFN,9999999.99999-DGBTDTI)) !!,"Past Claims: NONE RECORDED" I $O(^DGBT(392,"AI",DFN,9999999.99999-DGBTDTI)) W !!?14,"Date/Time",?35,"Account",?55,"Deductible",?69,"Amt. Paid",!!,"Past Claims: "
"RTN","DGBT2",51,0)
 S J=0 F DGBTP=9999999.99999-DGBTDTI:0 S DGBTP=$O(^DGBT(392,"AI",DFN,DGBTP)) Q:'DGBTP  S DGBTPDT=^DGBT(392,"AI",DFN,DGBTP),VADAT("W")=DGBTPDT D ^VADATE W ?14,VADATE("E") D ACCT S J=J+1 Q:J=5
"RTN","DGBT2",52,0)
 Q
"RTN","DGBT2",53,0)
ACCT W ?35,$S($P(^DGBT(392,DGBTPDT,0),"^",6):$E($P(^DGBT(392.3,$P(^(0),"^",6),0),"^"),1,15),1:"") D AMT
"RTN","DGBT2",54,0)
 Q
"RTN","DGBT2",55,0)
AMT N X3 ;Fresh copy for COMMA^%DTC. Leftovers causing error.
"RTN","DGBT2",56,0)
 S X=$P(^DGBT(392,DGBTPDT,0),"^",9),X2="2$" D COMMA^%DTC W ?54,X S X=$P(^(0),"^",10) D COMMA^%DTC W ?67,X,! K VADAT,VADATE,X,X2
"RTN","DGBT2",57,0)
 Q
"RTN","DGBTE1")
0^2^B21074208
"RTN","DGBTE1",1,0)
DGBTE1 ;ALB/SCK/GAH - BENEFICIARY TRAVEL FIND OLD CLAIM DATES  ; 10/10/06 11:17am
"RTN","DGBTE1",2,0)
 ;;1.0;Beneficiary Travel;**8,12,13**;September 25, 2001;Build 11
"RTN","DGBTE1",3,0)
DATE ;  get date for claim, either new or past date
"RTN","DGBTE1",4,0)
 K ^TMP("DGBT",$J),^TMP("DGBTARA",$J),DIR
"RTN","DGBTE1",5,0)
 I 'DGBTNEW S DIR("A",2)="Enter a 'P' to display Past CLAIM dates for editing."
"RTN","DGBTE1",6,0)
 S DIR("A",3)="Time is required when adding a new CLAIM.",DIR("A",4)="",DIR("A",1)="",DIR("A")="Select TRAVEL CLAIM DATE/TIME",DIR("?")="^D HELP^DGBTE1A"
"RTN","DGBTE1",7,0)
 S DIR(0)="F",DIR("B")="NOW" D ^DIR K DIR G ERR1:$D(DIRUT)
"RTN","DGBTE1",8,0)
 S CHZFLG=0,%DT="EXR",DTSUB=$S(Y="N":"NOW",Y="P":"OLD",Y="p":"OLD",1:"OTHR")_"^DGBTE1A" D @DTSUB K DTSUB
"RTN","DGBTE1",9,0)
 G ERR1:$D(DTOUT),DATE:Y1<0 S DGBTA=Y1 G SET:CHZFLG
"RTN","DGBTE1",10,0)
DATE1 ;  for past claims, set DGBTDT to inverse date of claim date
"RTN","DGBTE1",11,0)
 I $D(^DGBT(392,"C",DFN)) D
"RTN","DGBTE1",12,0)
 . S DGBTC=0,DGBTDT=9999999-$E(DGBTA,1,7) ; set past claims counter=0
"RTN","DGBTE1",13,0)
 . ; for latest date (topmost) search for past claims
"RTN","DGBTE1",14,0)
 . F I=DGBTDT:0 S I=$O(^DGBT(392,"AI",DFN,I)) Q:'I!(I>(DGBTDT_.99999))  S DGBTC=DGBTC+1,DGBT(DGBTC)=9999999.99999-I
"RTN","DGBTE1",15,0)
 I '$D(DGBT) G LOCK
"RTN","DGBTE1",16,0)
 W !!,"There are other claims on this date.",!,"Select by number to edit or <RETURN> to add a new CLAIM.",!
"RTN","DGBTE1",17,0)
 ; convert inverse claim date to external format through VADATE conversion routine
"RTN","DGBTE1",18,0)
 F I=0:0 S I=$O(DGBT(I)) Q:'I  S VADAT("W")=DGBT(I) D ^VADATE W !?5,I,".",?10,VADATE("E")
"RTN","DGBTE1",19,0)
 K DIR S DIR("A")="Select 1"_$S(DGBTC=1:"",1:"-"_DGBTC)_", or <RETURN> to add a new claim: ",DIR(0)="NOA^1:"_DGBTC,DIR("?")="Select, by number, one of the displayed claim dates: "
"RTN","DGBTE1",20,0)
 D ^DIR K DIR G QUIT^DGBTEND:$D(DTOUT)!($D(DUOUT))
"RTN","DGBTE1",21,0)
 G LOCK:Y="" G DATE:'$D(DGBT(Y))
"RTN","DGBTE1",22,0)
 S DGBTA=DGBT(Y) G SET
"RTN","DGBTE1",23,0)
LOCK ;
"RTN","DGBTE1",24,0)
 L ^DGBT(392,DGBTA):1
"RTN","DGBTE1",25,0)
 I '$T!$D(^DGBT(392,DGBTA)) L  S DGBTA=DGBTA+.00001 G LOCK
"RTN","DGBTE1",26,0)
 S VADAT("W")=DGBTA D ^VADATE W VADATE("E")
"RTN","DGBTE1",27,0)
ASKADD ;
"RTN","DGBTE1",28,0)
 W !!,"Are you sure you want to add a new claim"
"RTN","DGBTE1",29,0)
 S %=1 D YN^DICN G PATIENT^DGBTE:%<0!(%=2)
"RTN","DGBTE1",30,0)
 I '% W !!,"Enter 'YES' to add a new claim, or 'NO' not to add the claim." G ASKADD
"RTN","DGBTE1",31,0)
 K DD,DO
"RTN","DGBTE1",32,0)
 ; create new file entry, stuff patient DFN into name field(pointer)
"RTN","DGBTE1",33,0)
 S (X,DINUM)=DGBTA,DIC="^DGBT(392,",DIC(0)="L",DIC("DR")="2////"_DFN
"RTN","DGBTE1",34,0)
 D FILE^DICN K DIC L
"RTN","DGBTE1",35,0)
 ; go back to patient if no file entry
"RTN","DGBTE1",36,0)
 G:Y'>0 PATIENT^DGBTE
"RTN","DGBTE1",37,0)
SET ; call inhouse generic date routine
"RTN","DGBTE1",38,0)
 S (DA,DGBTDT,VADAT("W"))=DGBTA D ^VADATE
"RTN","DGBTE1",39,0)
 ; get internal and external formats of converted inverse dates
"RTN","DGBTE1",40,0)
 S DGBTDTI=VADATE("I"),DGBTDTE=VADATE("E") K VADAT,VADATE,DIC,Y
"RTN","DGBTE1",41,0)
 S DGBTDIVN=$P(^DG(40.8,DGBTDIVI,0),"^",7)
"RTN","DGBTE1",42,0)
STUFF ;  stuff departure with address data from patient file, dest from institution file
"RTN","DGBTE1",43,0)
 S:'$D(^DGBT(392,DGBTDT,"D")) ^DGBT(392,DGBTDT,"D")=VAPA(1)_"^"_VAPA(2)_"^"_VAPA(3)_"^"_VAPA(4)_"^"_$S(VAPA(5)]"":+VAPA(5),1:"")_"^"_$P(VAPA(11),U,1)
"RTN","DGBTE1",44,0)
 I '$D(^DGBT(392,DGBTDT,"T")) D
"RTN","DGBTE1",45,0)
 . S X=$S($D(^DIC(4,DGBTDIVN,1)):^(1),1:"")
"RTN","DGBTE1",46,0)
 . S ^DGBT(392,DGBTDT,"T")=($P(^DG(40.8,DGBTDIVI,0),U)_"^"_$P(X,U)_"^"_$P(X,U,2)_"^"_$P(X,U,3)_"^"_$P(^DIC(4,DGBTDIVN,0),U,2)_"^"_$P(X,U,4))
"RTN","DGBTE1",47,0)
CHKFILES ; section removed, dependents picked up below in MEANS ; abr 10/94
"RTN","DGBTE1",48,0)
MEANS ;  find corres. means test entry, gets MT income, status, no. of dependents
"RTN","DGBTE1",49,0)
 ;DGBTMTS= MT Status;  DGBTCSC= claim Service Connected indicator & %;  DGBTELG=Eligibility status
"RTN","DGBTE1",50,0)
 N X,X2,X3,Y,DGBTIFL
"RTN","DGBTE1",51,0)
 S X=$$LST^DGMTU(DFN,DGBTA),DGBTMTS=$P(X,U,4)_U_$P(X,U,3) ; returns corres. MT info,X=IEN of last MT
"RTN","DGBTE1",52,0)
 ; get income, # dependents
"RTN","DGBTE1",53,0)
 S Y=$$INCOME^VAFMON(DFN,DGBTA,1)
"RTN","DGBTE1",54,0)
 S X=$P(Y,U),DGBTIFL=$P(Y,U,2) ; returns income & source.
"RTN","DGBTE1",55,0)
 I X?1N.E!(X<0) D
"RTN","DGBTE1",56,0)
 .I X<0 S X=0
"RTN","DGBTE1",57,0)
 .S X2="0$",X3=8 D COMMA^%DTC
"RTN","DGBTE1",58,0)
 S DGBTINC=X_U_$G(DGBTIFL) K X,X2
"RTN","DGBTE1",59,0)
 S DGBTDEP=$$DEP^VAFMON(DFN,DGBTA) ; finds depedents Vet, Spouse, Children
"RTN","DGBTE1",60,0)
 ;
"RTN","DGBTE1",61,0)
PREV ; if past claim get SC%, elig.
"RTN","DGBTE1",62,0)
 I CHZFLG S X=^DGBT(392,DGBTA,0),DGBTELG=$P(X,U,3),DGBTCSC=$P(X,U,4) D
"RTN","DGBTE1",63,0)
 . S:DGBTCSC DGBTCSC=1_U_DGBTCSC S:'DGBTCSC DGBTCSC=0
"RTN","DGBTE1",64,0)
 . S:DGBTELG DGBTELG=DGBTELG_U_$P(^DIC(8,DGBTELG,0),U)
"RTN","DGBTE1",65,0)
CERT ;  get last BT certification,  get date, then get eligibility
"RTN","DGBTE1",66,0)
 I $D(^DGBT(392.2,"C",DFN)) D
"RTN","DGBTE1",67,0)
 .;cd=cert date in inverse then external format, ce= eligibility, ca* = amt certified
"RTN","DGBTE1",68,0)
 . S DGBTCD=$O(^DGBT(392.2,"C",DFN,0)),DGBTCE=$P(^DGBT(392.2,DGBTCD,0),"^",3)
"RTN","DGBTE1",69,0)
 . S DGBTCA=$P(^DGBT(392.2,DGBTCD,0),"^",4),Y=9999999-$P(DGBTCD,".")
"RTN","DGBTE1",70,0)
 . X ^DD("DD") ; date conversion, y=cert date (internal)
"RTN","DGBTE1",71,0)
 . S DGBTCD=Y,X=DGBTCA,X2="0$",X3=8 K Y D COMMA^%DTC S DGBTCA=X K X,X2,X3
"RTN","DGBTE1",72,0)
APPTS ;  search patient file for appointments through claim date (DTI+1),  adddates to array DGBTCL 
"RTN","DGBTE1",73,0)
 N ERRCODE,DGARRAY,CLIEN,APTDT S DGARRAY("FLDS")="2;3;10;18"
"RTN","DGBTE1",74,0)
 S DGARRAY(4)=DFN,I=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGBTE1",75,0)
 ; I<0 = Error, I<0 = # of Records retrieved
"RTN","DGBTE1",76,0)
 I I<0 S ERRCODE=$O(^TMP($J,"SDAMA301","")),I1=1,DGBTCL("ERROR")=^TMP($J,"SDAMA301",ERRCODE)
"RTN","DGBTE1",77,0)
 I I>0 D
"RTN","DGBTE1",78,0)
 .S CLIEN=""
"RTN","DGBTE1",79,0)
 .F  S CLIEN=$O(^TMP($J,"SDAMA301",DFN,CLIEN)) Q:'CLIEN  D
"RTN","DGBTE1",80,0)
 ..S APTDT=DGBTDTI\1
"RTN","DGBTE1",81,0)
 ..F  S APTDT=$O(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)) Q:'APTDT!(APTDT>(DGBTDTI+1))  D
"RTN","DGBTE1",82,0)
 ...S SDATA=^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)
"RTN","DGBTE1",83,0)
 ...S DGBTCL(APTDT)=$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,2),";",2)_U_$P($P(SDATA,U,3),";")
"RTN","DGBTE1",84,0)
 ...S DGBTCL(APTDT)=DGBTCL(APTDT)_U_$P($P(SDATA,U,18),";")_U_$P($P(SDATA,U,10),";")
"RTN","DGBTE1",85,0)
 K ^TMP($J,"SDAMA301"),DGARRAY,CLIEN,APTDT
"RTN","DGBTE1",86,0)
EXIT ; exit routine
"RTN","DGBTE1",87,0)
 Q
"RTN","DGBTE1",88,0)
ERR1 ;  error condition
"RTN","DGBTE1",89,0)
 G QUIT^DGBTEND Q
"VER")
8.0^22.0
**END**
**END**
